-- Time: 2024/06/07 06:30:30
-- Database: database49
-- Database version: 3.40.0
-- seed value: 3056937249
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 640521754); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 4ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(NULL) WHERE (- (((rt0.c4)!=(rt0.c3)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1936928427); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 5ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('vzH'), ('-951120004'), ('-951120004'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
DELETE FROM rt0 WHERE NULLIF((((rt0.c1))>=((rt0.c3))), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 END); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, c2, c3 UNINDEXED, compress=likely, uncompress=likely); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0(c3, c1) VALUES (x'fd11', -9.51120004E8); -- 1ms;
REINDEX; -- 7ms;
SELECT rtreecheck('rt0'); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 5ms;
INSERT OR IGNORE INTO vt0(c3, c0, c2) VALUES (0.39917616263408473, x'', '0.39917616263408473'), (x'02c3', x'd3b2', 0.6227054890580688), (NULL, '0.6227054890580688', 0.11851166913767408); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES ('1451908057', x'', x'', '-951120004', 1451908057); -- 7ms;
UPDATE OR IGNORE vt1 SET c0='-951120004' WHERE (((vt1.c0))=((vt1.c0))) COLLATE BINARY; -- 4ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.39917616263408473); -- 10ms;
INSERT OR IGNORE INTO rt1(c1, c5, c3, c0, c2, c6, c4) VALUES (x'', NULL, 0.11851166913767408, 0xd28220b, '-951120004', 'vzH', x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -951120004);\n; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 2ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('-498222599', x'23f1'), ('-1137235091', -826352425), (0.11851166913767408, '0.39917616263408473'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('-1837135192'); -- 1ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR FAIL vt1 SET c0='1889369985' WHERE LOWER(CASE x'db2e'  WHEN vt1.c0 THEN vt1.c0 END); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 1ms;
PRAGMA temp.cell_size_check; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL ELSE vt1.c0 END THEN ((vt1.c0)||(vt1.c0)) ELSE (- (vt1.c0)) END; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c4, c2, c3) VALUES (0.5235503862553623, -8.26352425E8, '1616377804', NULL, x''); -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0, c3) VALUES (0.11851166913767408, 0.24985844061081175, 0.24322630259700329); -- 0ms;
INSERT OR REPLACE INTO rt1(c6, c2, c3, c4, c1, c5) VALUES (x'', NULL, '1889369985', '', 0.23488270068656203, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3, c4, c6, c0, c2) VALUES (NULL, x'', NULL, x'', x'', NULL); -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR FAIL rt1 SET (c0)=('Mv') WHERE ((((DATETIME(rt1.c1, rt1.c5, rt1.c0, 0.10171555375124164, rt1.c0))OR(((rt1.c1) IS FALSE))))OR(CAST(rt1.c2 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('1451908057'); -- 0ms;
UPDATE vt0 SET c0=x'', c0='1451908057'; -- 0ms;
UPDATE vt0 SET c0=x'4ea2'; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c6, c5, c1, c3, c2, c4) VALUES ('F3', NULL, '1638101908', -9.51120004E8, '-\L3', 1616377804, 0.43964375566329317), (420786588, x'', NULL, 0.25937130042198153, NULL, NULL, 0.041069020769967324), (x'', '1115942310', '7.', NULL, 1616377804, 0.24322630259700329, NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1616377804,14');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c4) VALUES (x'', '-1768346814', '￿U'), ('0.43964375566329317', x'', 'CོI桭'), (x'e8a2e80a1d6f', x'', NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2015195185); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (NULL), (-826352425), (-1407508558); -- 23ms;
INSERT OR FAIL INTO rt1 VALUES (x'', 0Xffffffffe24db9f9, NULL, 0.42429405120136277, NULL, x'9c11', '1638101908'); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0x4283eda6); -- 6ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7363648598578959), (NULL), (0.7580933643811879), (x''), ('-49678662'); -- 11ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
INSERT OR REPLACE INTO rt1(c3, c2, c6, c0, c5) VALUES (1.889369985E9, x'', -1407950705, 0Xffffffff8be6aea1, x''), (0xffffffff96992b42, '', '0.24322630259700329', x'', '1207408858'), (NULL, NULL, x'', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c4) VALUES (547805655, '඗Y&Wv萢Ez', 0.39917616263408473), (0.7391552742533343, x'', '-1837135192'), (0x4283eda6, NULL, NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c2='f3', c3=NULL WHERE ((((((((((vt0.c3)AND(vt0.c3)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))%(((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))); -- 0ms;
UPDATE vt0 SET c3=-2121439123 WHERE (((((- (vt0.c2)))OR(((vt0.c2)IS(vt0.c3)))))OR(vt0.c1 COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO vt0(c3) VALUES ('-1137235091'), (x'db79'), (NULL); -- 15ms;
REINDEX BINARY; -- 1ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (NULL), (''), (x''); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'3a9ad948'); -- 8ms;
DROP TABLE vt1; -- 11ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 7ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (vt0.c3) AND (vt0.c0)))GLOB(rt1.c5 COLLATE BINARY)) FROM vt0 WHERE (((((0xffffffff96992b42)==(''))) BETWEEN (('1616377804' IN ())) AND ((('-1407950705') NOTNULL))));SELECT ((((vt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (MIN(rt1.c1))) FROM rt0, rt1 WHERE (((CAST(0xffffffffd7022d55 AS REAL))GLOB(((x'') BETWEEN (NULL) AND (0X1914b19c)))));SELECT NULL FROM rt1 WHERE (((x'')||(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS INTEGER)) BETWEEN (((NULL) NOT NULL)) AND (x'14d2')) FROM rt1 WHERE ((CAST(x'' AS NUMERIC) IN ())); -- 0ms;
SELECT ALL SUM((~ (rt1.c6))) OVER (), (((rt1.c5)) NOT BETWEEN ((rt1.c5 COLLATE BINARY)) AND ((rt0.c0))), (+ (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) FROM vt0, rt1 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT ((vt0.c2)==(vt0.c2)) COLLATE RTRIM FROM rt1, rt0;SELECT CASE COUNT(*)  WHEN CASE WHEN rt0.c4 THEN rt0.c0 END THEN (((vt0.c1, rt1.c5, vt0.c2))>(('nS', vt0.c1, rt0.c2))) END, NULLIF(DISTINCT (((rt0.c1))>=((rt0.c3))), rt0.c4 COLLATE BINARY), CAST(vt0.c3 AS NUMERIC) COLLATE RTRIM FROM rt0, rt1 WHERE (((NULL) IS TRUE) COLLATE BINARY) LIMIT 1815091282 OFFSET -1407950705;SELECT DISTINCT ((LIKELY(rt0.c2))<>(((vt0.c3)%(rt0.c1)))), ((((COUNT(rt1.c3))OR(((vt0.c3)||(rt1.c3)))))OR(rt1.c0)), (((rt0.c4)) BETWEEN ((0.7585346397998517)) AND ((rt0.c3 COLLATE BINARY))) FROM rt1;SELECT DISTINCT ((((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c5)))*(((vt0.c2)>>(rt1.c1)))) FROM rt0, rt1;SELECT ALL (((rt0.c4))>(((rt1.c5 IN (rt0.c2, rt0.c0))))) FROM vt0 WHERE (CHAR((~ (0X2e5636d4))));SELECT ALL (((rt1.c1 IN (rt0.c0)))&(CAST(rt0.c1 AS NUMERIC))), ((((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c3))), ((rt0.c3)GLOB(rt1.c6)), (rt1.c2 IN ())))>=((((vt0.c1)==(0.24213362741899347)), (rt1.c5 IN ()), ((NULL) BETWEEN (vt0.c1) AND (rt0.c4))))), (((vt0.c0 IN ()))LIKE((~ (vt0.c2)))) FROM rt0, vt0 WHERE (((IFNULL(DISTINCT 0.4083126397498509, x'4962')) NOT NULL)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c2)))>=(CAST(rt1.c1 AS TEXT))) DESC  NULLS FIRST, (((CAST(vt0.c3 AS NUMERIC)))!=((CASE WHEN rt1.c4 THEN '-1414767849' END))) DESC  NULLS FIRST;SELECT x'1563' FROM rt0, vt0 WHERE (((((((((x'c241' COLLATE BINARY)OR(((-1.137235091E9)<>(x'')))))AND((((x''))<=((0.28866148153530147))))))AND(IFNULL(0Xffffffffb70381a7, '-1837135192'))))AND(CASE '-289158661'  WHEN x'0331' THEN NULL END))); -- 0ms;
SELECT SUM(CAST(rt1.c5 AS BLOB)) OVER (), (((vt0.c1 IN ())) NOT BETWEEN (x'') AND ((((('')OR(rt0.c0)))OR(vt0.c1)))), (((vt0.c2)) BETWEEN ((((0.19033140681483784) IS TRUE))) AND ((((0.24985844061081175)IS NOT(rt1.c5))))) FROM rt1, vt0, rt0 WHERE ((((((('1147779530')AND('')))OR('1984748790')))!=(((((NULL)AND('[\n}')))AND(0Xffffffff96992b42))))) ORDER BY (('-1912415421') ISNULL) DESC  NULLS FIRST LIMIT 375367586; -- 0ms;
SELECT DISTINCT (((((rt0.c1) ISNULL)))==((rt1.c3 COLLATE BINARY))) FROM vt0, rt0, rt1 WHERE ((((0.283468175570152)) NOT BETWEEN ((((('')) NOT BETWEEN (('420786588')) AND ((220733963))))) AND ((((((x'3a2b')AND(0.0034402674724818283)))OR('xcN~c')))))); -- 1ms;
SELECT ALL ((CAST(vt0.c2 AS REAL))<(AVG(vt0.c3))), CASE (rt1.c6 IN (rt1.c4))  WHEN ((rt1.c0) NOTNULL) THEN CAST(vt0.c3 AS NUMERIC) ELSE ((rt1.c1)+(rt1.c1)) END, (('쫕]놜0')OR((+ (rt1.c3)))) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT CAST(rt1.c4 AS INTEGER) FROM rt0 NOT INDEXED WHERE ('-945920062');SELECT DISTINCT (((0.25481267346750947))>((NULL))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL LAST_VALUE((+ (CAST(rt0.c3 AS BLOB)))) OVER ( RANGE ((CASE WHEN vt0.c3 THEN rt1.c1 ELSE rt1.c1 END)IS NOT((((rt0.c0))>((rt0.c4))))) PRECEDING EXCLUDE NO OTHERS) FROM rt1, rt0, vt0 WHERE (((CASE WHEN NULL THEN 1207408858 WHEN '쫕]놜0' THEN '-7306932067864686803 728-20-1840 321:1417327457522433664T-8831750469833552997-530:' WHEN x'' THEN NULL ELSE '-528055262' END) BETWEEN ((+ (0.40851010577329505))) AND (((((x'')OR(NULL)))OR('H')))));SELECT GROUP_CONCAT(AVG(AVG(vt0.c1))) FROM rt0, rt1, vt0 WHERE (CASE WHEN (+ (0.186954324111832)) THEN CAST(-4.9678662E7 AS INTEGER) ELSE CAST('-1794327270' AS TEXT) END) GROUP BY ((((((((((rt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c4)))OR(CAST('-\l3' AS BLOB))))OR(x'')))OR(CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c4 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c1 END)))OR(((rt0.c0)IS NOT(vt0.c3)))), (((rt1.c6, rt1.c1, rt0.c4)) BETWEEN ((((((rt1.c4)OR(rt0.c4)))OR(rt0.c1)), (vt0.c0 IN (rt0.c4)), ((rt0.c4) BETWEEN (vt0.c1) AND (rt1.c6)))) AND ((CAST(rt0.c4 AS BLOB), rt0.c0 COLLATE NOCASE, (NOT (vt0.c0))))), TYPEOF(rt0.c2) HAVING ((((vt0.c2)<('1393341810'))) NOTNULL) LIMIT 1393341810 OFFSET -724152593;SELECT DISTINCT COUNT(CAST(vt0.c0 AS REAL)) FROM vt0, rt0, rt1; -- 1ms;
SELECT ALL ((((rt0.c3) ISNULL)) IS FALSE) FROM vt0 WHERE ((+ ('920386815' COLLATE NOCASE)));SELECT 0xffffffff958ec9d3, ((MIN(rt1.c3))||((rt0.c2 IN ()))), (NOT (CAST(vt0.c1 AS REAL))) FROM rt0 WHERE (TYPEOF((+ (x'f92a'))));SELECT ALL (GROUP_CONCAT(rt1.c6) IN ()), ((vt0.c1)%(rt0.c4)) COLLATE RTRIM, x'' FROM rt1, rt0, vt0 WHERE (((((('//E~M짓IEQ', 0.608782498925232, -506786927))<((x'', 0.6205445325697635, ''))))==(((NULL)<>(x'a57e'))))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt1, rt0, vt0 EXCEPT SELECT DISTINCT x'' FROM rt0, vt0 WHERE (((0.5235503862553623) NOT BETWEEN (((0.6309477360547308)>>('-1912415421'))) AND ((NULL IN (0.9885649069476603))))) ORDER BY ((((rt1.c3) IS FALSE)) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((vt0.c3) NOT NULL))) ASC, ((~ (-1.137235091E9)) IN ((((rt1.c1))==((rt0.c1))), ((((rt1.c6)AND(rt0.c2)))AND(rt1.c5))))  NULLS LAST;SELECT DISTINCT (NULL IN ()) FROM vt0 WHERE (((((375367586) ISNULL)) NOT BETWEEN (CASE WHEN NULL THEN 0x4283eda6 ELSE 0.041069020769967324 END) AND ((((0.8347984800238802)) NOT BETWEEN ((0.6748195943796829)) AND ((0xfffffffff518baae)))))); -- 0ms;
SELECT DISTINCT ((rt0.c2)==(rt1.c4)) COLLATE NOCASE FROM vt0 WHERE (((((x'6234')<(0Xffffffffe125a53a))) ISNULL));SELECT ((((~ (vt0.c2)), TYPEOF(''), IFNULL(rt0.c1, rt1.c4), CAST(rt1.c1 AS REAL), rt1.c5 COLLATE BINARY))<((((rt0.c1)>(rt1.c4)), (((0.25937130042198153, rt1.c3, vt0.c1)) BETWEEN ((vt0.c3, vt0.c1, rt1.c1)) AND ((vt0.c2, rt0.c1, rt1.c5))), 1885354472, '-7306932067864686803 728-20-1840 321:1417327457522433664t-8831750469833552997-530:', NULL))) FROM rt1 WHERE (((0.25937130042198153 IN ()) IN ())) GROUP BY ((CASE WHEN rt1.c4 THEN rt0.c0 ELSE '-1835480363' END) NOT BETWEEN ((('dT8') IS FALSE)) AND ((~ (rt0.c4))));SELECT ALL rt1.c3 FROM rt0, rt1 WHERE ((((NULL)) BETWEEN ((CASE NULL  WHEN '1451908057' THEN 0.7585346397998517 END)) AND ((CASE WHEN '-857663092' THEN x'' ELSE '2070461216' END)))); -- 0ms;
SELECT DISTINCT rt1.c5 FROM rt1, rt0, vt0 WHERE (CASE WHEN (-1.414767849E9 IN ('-528055262', '-914819679', 0.257125177661918)) THEN ((x'')<<(x'066d')) WHEN '1616377804' COLLATE RTRIM THEN (('l\y/\G!')>>('-7306932067864686803 728-20-1840 321:1417327457522433664t-8831750469833552997-530:')) WHEN CAST('GaOaK' AS NUMERIC) THEN ((((((((1.889369985E9)OR(-49678662)))AND('1984748790')))AND('')))OR(0.8271356231850903)) ELSE (('-735910802')GLOB(542775332)) END); -- 0ms;
SELECT ALL (((((((((rt1.c6 IN (rt0.c4)))AND(((rt1.c1) IS TRUE))))AND((rt1.c6 IN (rt1.c4, rt0.c4)))))AND((+ (rt0.c2)))))AND(((rt1.c2) NOT BETWEEN (x'') AND (rt0.c3)))) FROM rt0, vt0 WHERE ((((('') NOTNULL)) NOT BETWEEN (((((((((x'e1ff')AND(x'')))AND(1.616377804E9)))AND(0.25481267346750947)))AND('.F'))) AND ((('~B') ISNULL))));SELECT DISTINCT NTILE(rt0.c0) OVER ( PARTITION BY CASE (((rt0.c1))<=((vt0.c0)))  WHEN CASE WHEN rt0.c2 THEN x'' END THEN rt0.c2 COLLATE NOCASE END, ((((((rt0.c4) NOT NULL))OR(NULLIF(rt1.c5, rt0.c4))))AND(((rt1.c2)AND(vt0.c2)))) RANGE  UNBOUNDED PRECEDING) FROM rt0 WHERE ((((NULL, 0.8540703032363574, x'')) NOT BETWEEN ((((NULL)IS('-1912415421')), CASE WHEN 0.440866300083011 THEN 'X+' ELSE x'' END, TRIM(DISTINCT 9.20386815E8, 'v飚'))) AND (((~ (0X764cdcf6)), ((NULL) BETWEEN (1.815091282E9) AND (x'')), ((((NULL)AND('?%9\n_躱9∋')))OR(0.21607830792359328))))));SELECT rt1.c6 FROM vt0 CROSS JOIN rt1 ON ((((rt1.c5)AND(vt0.c3)))AND((((rt0.c4, rt0.c4, vt0.c3)) NOT BETWEEN ((rt0.c3, vt0.c2, rt0.c3)) AND ((rt1.c6, vt0.c0, rt1.c3))))) FULL OUTER JOIN rt0 ON ((vt0.c2)/(vt0.c0)) COLLATE NOCASE;SELECT ALL TOTAL((~ (rt1.c6))) OVER () FROM rt0 WHERE (CASE NULLIF('-289158661', x'')  WHEN 0.6335815752955748 THEN (((NULL))<=((0.0034402674724818283))) WHEN (((('N]0c')OR(-5.28055262E8)))OR('Ilfp!cM+')) THEN (((('')OR(-503329113)))OR('-1676565567')) WHEN CHAR('') THEN ((x'')/(420616947)) END) GROUP BY ((rt0.c4)<=(vt0.c1)) COLLATE BINARY;SELECT ((rt1.c0) NOT BETWEEN (MAX(0xffffffff85ddc686)) AND (GROUP_CONCAT(rt1.c1))) FROM vt0, rt1, rt0 WHERE ((- (((0.7131916187271482) NOTNULL)))); -- 0ms;
SELECT TOTAL(COUNT(*)) COLLATE BINARY FROM rt0 WHERE (CAST('1815091282' AS TEXT));SELECT DISTINCT (((NOT (rt0.c1))) ISNULL) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 IN ()) IN ()) FROM rt0, rt1, vt0 WHERE ((CAST(0.563048213862135 AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0 ORDER BY (((CAST(rt0.c2 AS NUMERIC)))>((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c4))))) ASC  NULLS FIRST;SELECT DISTINCT ((CASE WHEN vt0.c1 THEN rt0.c4 END) NOT BETWEEN (rt1.c3 COLLATE RTRIM) AND (rtreenode(rt0.c1, vt0.c2))) FROM vt0 WHERE (((((0xffffffff9e228f41) NOT BETWEEN (x'') AND (NULL))) IS FALSE)) ORDER BY vt0.c2;SELECT ALL CAST(CAST(vt0.c3 AS NUMERIC) AS NUMERIC) FROM vt0, rt1, rt0 WHERE ((((((-1806585768, 0.21607830792359328, NULL)) NOT BETWEEN ((-1.407950705E9, NULL, 0.10203758641511973)) AND ((NULL, NULL, '-153312932'))))/(123362781 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CAST(rt1.c4 AS TEXT) FROM rt0, rt1 WHERE (((NULL) NOT BETWEEN ((NULL IN (0.8788078515247175, x''))) AND (x''))); -- 0ms;
SELECT ALL json_insert(LIKELY(rt0.c4), ((rt0.c0) NOT NULL), COUNT(*)), CASE WHEN ((((vt0.c2)AND(vt0.c2)))OR(rt1.c3)) THEN NULL ELSE TOTAL(rt0.c0) END, FIRST_VALUE(CASE WHEN (rt1.c0 IN ()) THEN (+ (x'0835')) WHEN rtreenode(rt1.c4, vt0.c1) THEN ((vt0.c0)+(rt1.c5)) WHEN (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((vt0.c2))) THEN ((vt0.c0) ISNULL) ELSE CAST(rt1.c0 AS INTEGER) END) OVER () FROM vt0, rt1 GROUP BY LOWER((rt1.c6 IN (rt1.c5))), (((rt0.c1)) BETWEEN (((+ (rt0.c0)))) AND (((+ (''))))), ((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c3 THEN '1272816022' END) BETWEEN ((vt0.c1 IN ())) AND ((NOT (rt1.c1))));SELECT ALL '-506786927' FROM rt1 WHERE ((~ (((0.39183269079068694)<<(NULL))))); -- 0ms;
SELECT DISTINCT (((((rt0.c2)IS NOT(vt0.c0))))==(((rt1.c4 IN ())))) FROM vt0, rt0, rt1 WHERE (((x'') IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST(NULL AS TEXT) FROM vt0 WHERE ((('gaoak' IN ()) IN ())); -- 0ms;
SELECT DISTINCT (((+ (rt0.c4)))/(NULL)) FROM rt0, rt1 WHERE (TYPEOF(CASE WHEN 0.8564465886494963 THEN x'' END)) GROUP BY rt1.c3, -2.89158661E8, ((rt1.c0) IS FALSE) HAVING x''; -- 0ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((rt1.c6 COLLATE BINARY)) AND ((rt0.c0))) FROM vt0 RIGHT OUTER JOIN rt1 ON CAST(x'fce9' AS INTEGER) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON CAST(((rt1.c0)IS NOT(vt0.c1)) AS BLOB); -- 0ms;
SELECT ((rt0.c3) IS TRUE) FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT SUBSTR(0.28737047290815376, '鋌>|&'), 0.6677331870140737)); -- 0ms;
SELECT DISTINCT NULL, COUNT(rt0.c3) OVER (), 0.3527814148523648 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c1 THEN rt0.c0 END COLLATE NOCASE COLLATE NOCASE FROM rt1, vt0 WHERE ('7I)HlMxTg');SELECT ALL AVG(GROUP_CONCAT(((rt0.c4)%(rt1.c6)))), ((((rt0.c0)>=(vt0.c0)))<(((rt1.c0)==(rt0.c4)))), CASE rt1.c3  WHEN (((rt0.c4))<=((rt1.c1))) THEN INSTR(vt0.c2, rt0.c4) WHEN ((rt1.c3) NOT NULL) THEN ((rt1.c1) IS TRUE) WHEN ((rt1.c1)||(rt1.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c3) AND (rt0.c2)) END FROM vt0, rt0 NOT INDEXED, rt1 WHERE (CASE '152679653'  WHEN (('980274885') IS TRUE) THEN CASE ''  WHEN 0.3013228494042981 THEN 0.44959239469509504 WHEN NULL THEN NULL WHEN NULL THEN NULL END END) LIMIT -1548284521 OFFSET -182928722;SELECT ((CASE WHEN rt1.c2 THEN rt0.c0 END)>(((rt0.c3)%(rt1.c0)))) FROM vt0 GROUP BY ((((((((((((((((vt0.c1)AND(rt1.c6)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))AND(rt1.c0)))AND(NULL)))OR(NULL)), ((vt0.c0 COLLATE NOCASE)<=(((rt0.c1)|(rt1.c4)))), vt0.c0 COLLATE RTRIM HAVING CASE rt1.c2  WHEN vt0.c1 THEN rt0.c2 END COLLATE NOCASE ORDER BY (((rt1.c6)) NOT BETWEEN ((CASE rt1.c6  WHEN rt0.c2 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c5 WHEN rt1.c0 THEN rt0.c0 END)) AND ((rt0.c4)))  NULLS LAST, (CASE WHEN rt0.c4 THEN vt0.c3 END IN ()) DESC;SELECT DISTINCT ((CAST(vt0.c3 AS TEXT)) BETWEEN (CAST(vt0.c3 AS INTEGER)) AND ((rt1.c2 IN ()))) FROM rt0 ORDER BY (((~ (rt1.c1))) NOT BETWEEN (((vt0.c1)IS NOT(rt1.c2))) AND (CAST(rt0.c4 AS INTEGER))) DESC  NULLS LAST, CAST((((rt0.c1, rt1.c1, '')) NOT BETWEEN ((rt0.c4, rt0.c1, 0.9683672412606608)) AND ((rt0.c4, rt1.c2, rt0.c3))) AS NUMERIC) ASC;SELECT ALL ((IFNULL(x'', rt0.c0)) NOT NULL) FROM rt1, rt0 WHERE ('LwM3Kk#') INTERSECT SELECT ALL GROUP_CONCAT(((vt0.c2) NOTNULL) COLLATE BINARY) OVER () FROM rt0 WHERE (((NULLIF(DISTINCT 0.6808942475101994, 'L<'))<<((NOT (0xffffffffc978f5a1)))));SELECT DISTINCT (((vt0.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c6))) COLLATE NOCASE FROM rt1, vt0 LIMIT -498222599; -- 0ms;
SELECT ALL ((((((((((rt0.c0) BETWEEN (rt1.c2) AND (vt0.c3)))AND((~ (vt0.c1)))))AND(CAST(rt1.c1 AS REAL))))OR('')))OR(CAST('鋌>|&' AS BLOB))) FROM rt1 WHERE (((CASE WHEN 0.4475215803821374 THEN 'D2v?1sgkH' ELSE 920386815 END) ISNULL));SELECT DISTINCT '0' FROM rt1 WHERE (((0.719572572974961)>>((~ (-1775869583))))); -- 0ms;
SELECT ALL ((((rt0.c1))==((vt0.c2))) IN (NULL)), CASE ((vt0.c1)+(vt0.c1))  WHEN NULL THEN (((rt1.c5)) BETWEEN ((rt1.c5)) AND ((vt0.c1))) ELSE ((vt0.c1)/(rt0.c0)) END, CAST(((rt0.c1)||(0.40851010577329505)) AS INTEGER) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3))<=((rt1.c2))))<<(((rt1.c3)<=(rt1.c5)))), CASE WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c5 END COLLATE BINARY, ((CAST(rt1.c2 AS NUMERIC))IS NOT(vt0.c0)) FROM rt1, rt0, vt0; -- 2ms;
SELECT CAST(((rt1.c6)IS NOT(vt0.c0)) AS REAL), (((((vt0.c1)!=(rt1.c1))))!=(((((x'')) BETWEEN ((rt1.c0)) AND ((rt1.c4)))))), AVG(CAST(rt1.c4 AS BLOB)) FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL CAST(((((vt0.c2)AND(vt0.c3)))AND(rt1.c5)) AS NUMERIC), NTH_VALUE(rt1.c6, ((rt0.c3 COLLATE BINARY)IS NOT(0.18564502815035144))) OVER (), NTH_VALUE((((((rt1.c6))==((rt1.c3))))GLOB(((rt1.c5)<<(rt0.c4)))), 0.8799143582201633 COLLATE RTRIM) OVER () FROM rt0, vt0, rt1;SELECT DISTINCT ((vt0.c2 COLLATE RTRIM) BETWEEN (((0.4040227444587876)IS(rt0.c0))) AND (((rt1.c3)>=(rt0.c4)))), LIKE(GROUP_CONCAT(rt1.c1), ((rt0.c4) IS FALSE), 'e'), (((rt0.c3)) NOT BETWEEN ((((vt0.c2)%(rt0.c4)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c3) AND (vt0.c0))))) FROM vt0, rt0;SELECT DISTINCT (((rt1.c1, vt0.c3, rt1.c2)) BETWEEN (((('-1912415421') IS TRUE), (vt0.c3 IN ()), (-1965583136 IN (rt1.c2, rt1.c6)))) AND ((((rt0.c3) NOTNULL), ((rt1.c6) IS TRUE), rt1.c2 COLLATE BINARY))) FROM vt0, rt1 WHERE (CASE WHEN CASE WHEN 0.18632278905186517 THEN '109308226' WHEN 0.24219007019533656 THEN NULL WHEN '-2049063290' THEN NULL END THEN ((NULL) NOT BETWEEN (x'4b63') AND (NULL)) END);SELECT ALL (+ (MIN(rt0.c4))) FROM vt0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE NOCASE IN ()), ((((((rt1.c1)>(rt1.c4)))OR(CASE rt1.c2  WHEN '1451908057' THEN '-2002017431' WHEN vt0.c3 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c4 END)))AND(x'bc7e')), ((((GROUP_CONCAT(vt0.c3))OR(((vt0.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)))))AND(((vt0.c1)AND(rt0.c1)))) FROM rt0, vt0 NOT INDEXED, rt1 WHERE (STRFTIME((((NULL))>=((NULL))), (((('1889369985')AND('')))OR(0.09209258344977544)), (~ ('547805655')), CASE WHEN x'' THEN x'' WHEN NULL THEN -914819679 WHEN 0.5688515774450473 THEN 0.6410961151576213 END, CAST(0.16699398438274649 AS INTEGER))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt0 WHERE ((((NULL, '-2006713257', NULL)) NOT BETWEEN (((('-430020206')|('0.18564502815035144')), (- ('&mH3%mLz')), ((('lf6m')) NOT BETWEEN (('-\l3')) AND ((-1.912415421E9))))) AND (((0.5537128635026103 IN ()), ((x'') NOTNULL), CAST(833438159 AS TEXT))))); -- 1ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY CASE rt0.c2  WHEN (rt0.c0 IN ()) THEN (rt1.c6 IN ()) END, ((((rt0.c3)*(rt1.c6))) NOTNULL) ASC), ((rt1.c3)<<(rt1.c3)) COLLATE RTRIM, ((((vt0.c1))<=((rt0.c4))) IN (((rt1.c6)|(vt0.c2)))) FROM vt0 NOT INDEXED, rt1, rt0; -- 0ms;
SELECT DISTINCT ((rt1.c2) BETWEEN (((((0.35460776641417435)OR(vt0.c3)))AND(rt1.c4))) AND (UNLIKELY(DISTINCT vt0.c3))) FROM rt0, vt0, rt1; -- 0ms;
SELECT CASE WHEN ((vt0.c2) BETWEEN ('-1891346429') AND (rt1.c4)) THEN ((((rt1.c1)OR(rt0.c2)))AND(rt0.c3)) END FROM vt0, rt0;SELECT DISTINCT (((rt1.c6, vt0.c3, rt1.c5)) BETWEEN ((NULL, json_insert(rt0.c1, rt0.c3, rt1.c1), CASE vt0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c5 END)) AND ((rt0.c4, ((vt0.c2) NOT BETWEEN (rt1.c5) AND (rt0.c1)), NULL))) FROM rt0, rt1, vt0 ORDER BY (~ ('綷' COLLATE BINARY)) ASC  NULLS LAST; -- 0ms;
SELECT ALL (((rt0.c4 IN ()))-((((rt1.c0, rt1.c6, vt0.c1))<((rt1.c4, rt1.c0, rt0.c3))))) FROM rt0, vt0 WHERE (((((((((CASE '-1818792504'  WHEN NULL THEN '''y霬S}' ELSE 0.09521815456224858 END)OR(((-1226057394)<=(0.6108054291659077)))))OR((((0.09521815456224858))>(('羁px'))))))OR((('0.608782498925232')>>(x'')))))AND('' COLLATE RTRIM))) LIMIT -1912415421;SELECT DISTINCT json_array((x'' IN ()), (((vt0.c1))>((rt1.c3)))), ((((rt1.c1) ISNULL)) NOT NULL), (((((rt1.c2))>=((rt0.c0)))) NOT NULL), (ABS(DISTINCT rt0.c2) IN ()), ((GLOB(rt1.c6, rt1.c5)) ISNULL) FROM rt0, rt1;SELECT DISTINCT ((((-2004804210)AND(CASE rt1.c0  WHEN rt1.c0 THEN vt0.c1 ELSE rt1.c1 END)))AND(((((rt0.c3)OR(rt1.c5)))AND(rt1.c2)))) FROM vt0, rt0, rt1 WHERE (0.4083126397498509); -- 0ms;
SELECT ALL (CASE WHEN rt1.c5 THEN rt0.c0 ELSE rt1.c0 END IN ()) FROM vt0, rt0 WHERE ((((('' COLLATE NOCASE)AND(((0.25481267346750947) BETWEEN ('-528055262') AND (0Xffffffffac1b1fb2)))))AND(LOWER(DISTINCT 0.7900587179456795)))); -- 0ms;
SELECT ALL (((~ (rt0.c0))) BETWEEN (vt0.c3 COLLATE NOCASE) AND (rt0.c0)) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt1.c5 IN ()))*(((rt1.c4) BETWEEN (rt0.c1) AND (rt1.c1)))) FROM rt0, rt1 WHERE ((- (((x'') BETWEEN (x'43a35236') AND (x''))))) LIMIT 1911290887 OFFSET -1392712716; -- 0ms;
SELECT DISTINCT ((((rt1.c6)<(rt1.c6))) IS FALSE) FROM rt0, vt0 WHERE (((NULL COLLATE BINARY) IS TRUE));SELECT ALL CAST(((((vt0.c1)AND(rt1.c5)))AND(rt0.c4)) AS INTEGER) FROM rt1, vt0 WHERE (CASE WHEN CAST(0.7912799502718393 AS BLOB) THEN CAST(0.19874465561812205 AS NUMERIC) ELSE (0x256f5f40 IN ()) END);SELECT ALL (- (((rt1.c6) IS TRUE))) FROM vt0, rt0;SELECT (((((rt1.c2)) BETWEEN (('1207408858')) AND ((rt0.c3)))) ISNULL), ((rt1.c4)IS(COUNT(*))), (NOT (((((vt0.c3)AND(rt1.c4)))OR(vt0.c0)))), (+ ((- (vt0.c1)))), (((rt0.c1 IN (rt0.c2))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c2) BETWEEN (rt1.c6) AND (vt0.c1)))) FROM rt1, rt0 WHERE ((- (NULL COLLATE BINARY))) GROUP BY vt0.c2, ((((((rt1.c3)OR(rt0.c1)))AND(rt1.c3))) NOT BETWEEN ((((((((('-1e500')AND(rt1.c3)))AND(rt1.c5)))AND(rt0.c0)))AND(rt0.c4))) AND (((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c1)))), rt1.c0 ORDER BY ((CAST(rt1.c4 AS BLOB))*(CAST('	' AS BLOB))) LIMIT -1806585768;SELECT ALL (+ (AVG(rt0.c4))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c2)))-(((NULL) NOT NULL))), CASE WHEN rt0.c0 COLLATE NOCASE THEN (- (rt0.c2)) WHEN (((vt0.c3, rt1.c5, rt1.c5))>=((rt1.c3, rt1.c6, vt0.c3))) THEN CASE vt0.c1  WHEN vt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 WHEN x'' THEN rt1.c4 END WHEN UNLIKELY(vt0.c1) THEN ((rt1.c1)>=(rt1.c3)) END, (rt0.c3 IN (rt0.c3)) COLLATE NOCASE FROM rt1 WHERE ((('0.283468175570152')>=(TYPEOF(x'')))) ORDER BY vt0.c2 ASC  NULLS LAST;SELECT DISTINCT COUNT(((rt1.c4)*(0Xffffffffd4b8708d))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt0, rt0, rt1 GROUP BY (((('-582746771')-(vt0.c0))) IS TRUE), (((((vt0.c1))!=((rt1.c3))))IS NOT(PRINTF(rt1.c2, vt0.c1, rt0.c0))), CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c3)) AS INTEGER) HAVING CASE WHEN CAST(vt0.c2 AS INTEGER) THEN (((vt0.c1)) NOT BETWEEN (('')) AND ((x'3d59'))) ELSE ((vt0.c1) BETWEEN (rt1.c5) AND (rt0.c3)) END; -- 0ms;
SELECT DISTINCT ((((((vt0.c3))>((rt1.c2)))))=((CAST(rt1.c3 AS BLOB)))) FROM rt0;SELECT ((((rt1.c2 COLLATE NOCASE)AND(-1.414767849E9)))AND(((((rt1.c2)OR(vt0.c0)))OR(rt1.c2)))) FROM rt1, vt0, rt0; -- 0ms;
SELECT LIKELIHOOD(rt0.c1 COLLATE RTRIM, 0.7810018350946356) FROM vt0, rt0, rt1 GROUP BY ((rt0.c1 COLLATE RTRIM)IS NOT((NOT (rt1.c4)))) HAVING MAX(((rt1.c5) IS TRUE)) ORDER BY vt0.c1 ASC; -- 5ms;
SELECT ALL ((x'') NOT BETWEEN (((rt0.c3)LIKE(rt0.c4))) AND (((((vt0.c0)AND(rt0.c3)))AND(rt0.c2)))), ((((((((((vt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(x'')))OR(AVG(rt1.c2))))OR(((rt1.c0)>(vt0.c0)))))AND(rt1.c5 COLLATE RTRIM)), COUNT(CAST(vt0.c1 AS TEXT)) FROM rt1;SELECT DISTINCT (rt1.c0 COLLATE NOCASE IN ()), (~ (((((rt1.c0)AND(rt0.c1)))AND(rt1.c1)))), COALESCE((((rt1.c6)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c3))), ((rt1.c6)==(rt0.c2)), ((rt1.c6)<(rt0.c3)), ((rt0.c3) ISNULL)) FROM rt0, rt1 GROUP BY (~ (((rt1.c0) NOTNULL))) HAVING CASE WHEN CASE WHEN vt0.c3 THEN rt0.c0 END THEN rt0.c3 COLLATE BINARY WHEN CASE WHEN '' THEN rt1.c1 END THEN ((rt1.c4)|(rt1.c5)) WHEN ((vt0.c2)OR(rt1.c1)) THEN CAST(rt1.c0 AS BLOB) ELSE ((rt0.c3) BETWEEN (rt1.c4) AND (rt1.c3)) END;SELECT ALL (((((((('ꊸ8k')OR((((rt0.c2)) BETWEEN ((rt1.c5)) AND ((rt0.c0))))))AND(COUNT(rt1.c0))))OR((- (vt0.c3)))))OR(vt0.c1 COLLATE BINARY)), ABS(IFNULL(rt1.c0, rt0.c1)), SUBSTR('~t!V75Pf\n' COLLATE BINARY, ((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c2)))OR(rt1.c5)))OR(x'24f2')))OR(rt1.c5))) FROM rt0, rt1 WHERE (CASE WHEN ((('-49678662'))<=((7.77402068E8))) THEN ((NULL) NOT NULL) END);SELECT ((('1207408858')>(rt1.c5)) IN ()) FROM rt1, vt0; -- 0ms;
SELECT CASE WHEN GROUP_CONCAT(vt0.c2) THEN ((((rt0.c3)AND(rt1.c3)))AND(rt1.c4)) ELSE ((rt1.c1)GLOB(rt1.c6)) END, ((MAX(rt1.c4)) NOT BETWEEN (((vt0.c0)<(rt1.c2))) AND (CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)), CASE ((rt1.c1)<=(x'2fcf'))  WHEN (- (rt0.c1)) THEN rt0.c3 WHEN (vt0.c3 IN ()) THEN (rt1.c5 IN ()) WHEN (NOT (rt1.c6)) THEN rt1.c5 ELSE (rt0.c0 IN ()) END FROM rt0;SELECT ALL (NOT (((vt0.c1)*(rt1.c3)))) FROM vt0;SELECT DISTINCT GROUP_CONCAT(((rt1.c6)+(rt0.c3))) OVER () FROM rt0, vt0, rt1 GROUP BY rt1.c3 HAVING (NOT (CASE rt0.c1  WHEN vt0.c3 THEN rt0.c0 END)) ORDER BY CASE WHEN ((vt0.c1)<=(rt1.c1)) THEN (((-1775237478))=((rt0.c0))) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c4) ISNULL) WHEN ((((rt1.c6)AND(vt0.c1)))AND(rt1.c2)) THEN CASE rt1.c2  WHEN x'' THEN rt1.c6 ELSE rt1.c5 END ELSE (+ (rt1.c0)) END ASC; -- 0ms;
SELECT ALL (((rt1.c1 IN (vt0.c2)))AND((~ (rt0.c2)))) FROM vt0, rt0 WHERE (CASE WHEN 0xffffffffa75a25c0 THEN ((((0X5b16331e)OR(NULL)))AND('1911290887')) END) ORDER BY (- ((NULL IN ())))  NULLS LAST;SELECT CAST(((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c0)) AS TEXT), rtreenode((((rt1.c5, rt1.c2, rt1.c6))<((rt1.c5, rt1.c4, vt0.c1))), (- (rt0.c1))), CAST(rt0.c3 AS TEXT) COLLATE RTRIM FROM rt0, rt1 WHERE (UPPER(DISTINCT (~ (x'90f4'))));SELECT ALL (rt0.c3 IN ()) COLLATE RTRIM, CASE 0x6682f4c6  WHEN ((((((((vt0.c0)AND(vt0.c3)))AND(rt0.c2)))OR(rt0.c3)))OR(rt1.c3)) THEN ((rt0.c2) NOTNULL) WHEN ((vt0.c2) BETWEEN (rt0.c0) AND (rt1.c0)) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt1.c4)) WHEN vt0.c1 THEN ((rt1.c3)>>(rt1.c2)) END, ((((rt1.c6) ISNULL))|(rt0.c4)), ((~ (rt1.c5)) IN ()), ((((((((NULL COLLATE NOCASE)AND(((rt0.c0) BETWEEN (rt1.c6) AND (vt0.c2)))))OR((((vt0.c3, rt0.c4, NULL)) NOT BETWEEN ((rt1.c2, rt0.c4, vt0.c0)) AND ((vt0.c1, rt1.c2, vt0.c1))))))AND(CASE rt1.c5  WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN 131757390 WHEN vt0.c3 THEN vt0.c2 END)))AND((rt1.c0 IN ()))) FROM rt0, rt1, vt0 WHERE ((((NOT (x'ba58')))AND(CAST(x'976f' AS TEXT)))); -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c6)))&(x'e8d2' COLLATE BINARY)), ((((((rt1.c6)!=(vt0.c1)))AND(CAST(rt1.c4 AS TEXT))))AND(((-1.407950705E9)/(rt1.c2)))), (((+ (rt0.c4))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c5))) AND (((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))) FROM rt0;SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 GROUP BY CASE (((vt0.c2))!=((rt0.c1)))  WHEN '' THEN ((((((((rt1.c3)OR(rt0.c4)))OR(vt0.c3)))AND(vt0.c2)))AND(rt1.c2)) ELSE ((rt1.c5) NOT BETWEEN ('qBh*죍') AND (rt1.c3)) END, x'', HEX(DISTINCT x''), json_valid(CAST(rt1.c1 AS REAL)), (rt1.c6 COLLATE RTRIM IN ()) HAVING ((((rt0.c2)+(rt1.c2)))>(CAST(vt0.c1 AS BLOB)));SELECT ALL ((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (((rt0.c0)>(vt0.c3)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT x'', ((((((rt1.c1) NOT BETWEEN (vt0.c2) AND (rt1.c3)))AND(((vt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c2)))))OR(CAST(rt0.c0 AS TEXT))), (((NOT (rt1.c5))) BETWEEN ((+ (rt1.c3))) AND (-1562809167)) FROM rt0;SELECT DISTINCT (((((rt0.c1) NOTNULL)))>=(((((rt1.c0))>((rt1.c4)))))), (+ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))), vt0.c1 FROM vt0 WHERE (((2054885766 COLLATE BINARY) NOT NULL));SELECT ((('X' IN ()))==(((vt0.c2) IS FALSE))) FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4))))) FROM rt1;SELECT DISTINCT ((((((((((vt0.c0)GLOB(rt1.c6)))OR((vt0.c1 IN (rt1.c1)))))OR((rt0.c4 IN (rt1.c0)))))OR((vt0.c0 IN (rt1.c0, vt0.c2)))))OR(((((0.546184805431395)OR(vt0.c2)))OR(rt0.c2)))) FROM rt0, vt0, rt1 WHERE (json(((5.47805655E8)*(NULL)))) LIMIT 711201549; -- 1ms;
SELECT DISTINCT (+ (CAST(rt1.c5 AS BLOB))) FROM rt1, vt0 WHERE (((((((((NULL)OR(1.3175739E8)))OR(NULL)))AND('-\L3')))OR(x'')) COLLATE RTRIM) GROUP BY (((((vt0.c3, rt0.c1, rt1.c3)) NOT BETWEEN ((rt0.c1, vt0.c2, vt0.c2)) AND ((rt0.c1, vt0.c3, rt1.c3))))<(rt1.c5 COLLATE BINARY));SELECT DISTINCT CASE 0.2772106973700835  WHEN MIN(x'', rt0.c4) THEN CAST(rt1.c6 AS TEXT) WHEN ((((vt0.c1)OR('')))AND(rt1.c6)) THEN CASE vt0.c1  WHEN rt1.c5 THEN rt0.c4 END WHEN (((rt1.c3))>((rt0.c3))) THEN ((rt0.c1)OR(vt0.c1)) WHEN (~ (rt0.c1)) THEN rt1.c0 WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c4))) THEN SQLITE_VERSION() END FROM vt0, rt0, rt1 LIMIT -1846020349; -- 0ms;
SELECT DISTINCT rt0.c4, ((((rt0.c4)OR(((rt0.c1)IS(x'')))))AND((vt0.c3 IN ()))), UPPER(CAST(-2.04906329E9 AS REAL)) FROM rt0, vt0; -- 0ms;
SELECT ALL CAST((((vt0.c1)) BETWEEN ((rt1.c6)) AND ((rt0.c0))) AS TEXT), TOTAL(CAST(vt0.c2 AS TEXT)) OVER (), (((rt0.c2, rt1.c1, vt0.c0)) BETWEEN ((0.8327161344230731, ((rt1.c6) NOT NULL), ((x'')<>(vt0.c0)))) AND (((~ (rt1.c5)), rt1.c4 COLLATE BINARY, ('1v' IN ())))) FROM rt0, vt0 WHERE (((((((x'1c7cbcf0')IS NOT('-498222599')))AND((+ (NULL)))))AND(((4.20616947E8) ISNULL))));SELECT DISTINCT SUM(((((rt0.c2)OR(vt0.c2)))OR(rt1.c6))) OVER () FROM rt1, rt0 NOT INDEXED WHERE ((((-1796850155) IS FALSE) IN ())) LIMIT -503329113;SELECT DISTINCT CAST(((((rt0.c0)AND(rt1.c4)))AND(rt1.c6)) AS REAL), ((rt1.c6 COLLATE RTRIM) NOT BETWEEN ((NOT (rt1.c4))) AND (UNLIKELY(rt0.c3))), DENSE_RANK() OVER () FROM vt0, rt0 WHERE (7.11201549E8);SELECT DISTINCT AVG((+ (vt0.c3))) OVER (), CAST(((((((((rt1.c1)OR(rt0.c2)))OR(-1641902271)))OR(rt1.c4)))AND(vt0.c0)) AS BLOB), (((rt0.c0, rt0.c2, rt1.c0)) NOT BETWEEN ((vt0.c1 COLLATE BINARY, CAST(rt0.c4 AS REAL), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) AND ((((rt0.c0)>=(rt1.c2)), CAST(rt0.c2 AS TEXT), ((x'')!=(rt0.c2))))) FROM vt0, rt1, rt0 WHERE ((((NULL, -1.818792504E9, x'')) BETWEEN ((x'', ((x'b173')+('1802369433')), 0.7926250213709123)) AND (((('1115942310') IS TRUE), (x'' IN ()), ((('1719858374')) BETWEEN ((NULL)) AND ((NULL))))))) ORDER BY ((((NULL)OR(((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c6)))))AND(((((rt1.c1)AND(rt0.c2)))AND(rt1.c3)))) ASC; -- 1ms;
SELECT DISTINCT (((((rt0.c3))>((rt1.c5)))) NOT NULL) FROM vt0 WHERE ((+ (0x47f798da)) COLLATE NOCASE) ORDER BY vt0.c1 ASC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (-1356695560) AND (vt0.c2)))) AND ((((vt0.c3) NOT BETWEEN (rt1.c4) AND (vt0.c1))))) ASC, json_object((+ (vt0.c0)), vt0.c3, rt0.c0, ((((-2004804210)AND(rt1.c4)))OR(vt0.c1)));SELECT DISTINCT vt0.c1, AVG(((rt1.c0)!=(vt0.c1))), ((('ᡱA䇬Sk鶃', rt0.c3, ((rt0.c2)LIKE(rt1.c0))))<((((rt1.c4)<<(rt1.c1)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c3)), UNICODE(rt0.c3)))) FROM rt0;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt1.c4)))||((((rt1.c4)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c3))))) FROM rt0, vt0, rt1 WHERE (CAST(((NULL) NOTNULL) AS TEXT)); -- 1ms;
SELECT DISTINCT CASE (((vt0.c0, rt1.c4, rt0.c3))!=(('1703483689', rt0.c2, vt0.c2)))  WHEN '725339443' THEN 0.197333746823373 WHEN ((vt0.c0)>(vt0.c0)) THEN CHAR(vt0.c2, rt1.c6, x'553c') WHEN ((vt0.c0) NOTNULL) THEN '977463700' ELSE vt0.c2 END FROM vt0, rt1, rt0 WHERE (CAST(NULL AS INTEGER)); -- 0ms;
SELECT GROUP_CONCAT(((((0.3553819620428085)AND(vt0.c1)))AND(vt0.c3))) FROM rt0, vt0; -- 0ms;
SELECT ((((UPPER(rt0.c4))OR(((rt0.c2) IS FALSE))))AND(CASE rt0.c3  WHEN rt1.c6 THEN rt1.c6 END)) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL CAST(CAST(rt1.c1 AS TEXT) AS BLOB) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((CAST(rt1.c6 AS BLOB))) AND (((((rt0.c3, rt1.c0, vt0.c3))<>((rt1.c1, rt1.c4, '5鶃Z[lAuM')))))) FROM rt1;SELECT ALL CASE CAST(rt0.c2 AS INTEGER)  WHEN ((rt1.c3)>(x'')) THEN '-1909392227' END, rt1.c2, ((rt1.c5) BETWEEN (rt1.c4 COLLATE BINARY) AND (TOTAL(rt1.c3))), (((((rt1.c3, vt0.c0, rt0.c1)) NOT BETWEEN ((NULL, rt0.c3, rt0.c1)) AND ((rt1.c2, vt0.c3, vt0.c2))))GLOB(((vt0.c0)IS NOT('109308226')))), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c3)))&((NOT (vt0.c0)))) FROM rt1, rt0, vt0 WHERE (((CASE WHEN NULL THEN 0.15274944729309337 ELSE x'' END) BETWEEN (((x'') IS TRUE)) AND (((NULL)!=('k'''))))); -- 0ms;
SELECT PERCENT_RANK() OVER (), CAST(CASE rt0.c0  WHEN vt0.c0 THEN 1674411927 ELSE rt1.c1 END AS BLOB), COUNT(CAST(vt0.c2 AS TEXT)) FROM vt0;SELECT ALL x'a983' FROM rt0, vt0, rt1 WHERE (CASE WHEN 0xffffffffac1b1fb2 THEN ('497509823' IN ('5鶃z[laum', 0.049816266298842726)) WHEN CAST('1630591954' AS TEXT) THEN CASE 0Xffffffffebafb7d9  WHEN NULL THEN 0X19121af3 ELSE 'AUaHdek' END WHEN ('1228973227' IN (NULL)) THEN ((-1322228905) IS FALSE) END) GROUP BY ((((vt0.c3))==((rt1.c4))) IN ()), rt0.c1, ((CASE WHEN '-1912415421' THEN rt0.c4 END) IS TRUE) HAVING CASE WHEN (rt1.c0 IN ()) THEN (rt0.c4 IN ()) END; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN rt0.c3 END) ISNULL), AVG(((rt0.c0)>(vt0.c0))) OVER (), CASE WHEN ((rt1.c3)<(vt0.c1)) THEN ((rt0.c2) IS FALSE) END FROM vt0 GROUP BY ((CASE WHEN rt1.c6 THEN rt0.c1 WHEN vt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c3 END)||(((rt0.c4)&(0xffffffff927f8aa8)))), ((+ (rt1.c0)) IN ()), ((((rt0.c0)GLOB(rt0.c2))) NOT BETWEEN (TOTAL_CHANGES()) AND (((NULL) IS TRUE)));SELECT DISTINCT COUNT(*) OVER () FROM rt1 WHERE (CASE ((0Xffffffffdf3dba2b)!=(0.43964375566329317))  WHEN CAST(NULL AS NUMERIC) THEN ((NULL) BETWEEN ('-1794327270') AND ('0.197333746823373')) WHEN (x'' IN ()) THEN ('' IN ()) WHEN ((x'') ISNULL) THEN CAST(x'197c' AS INTEGER) ELSE 0.10171555375124164 END); -- 0ms;
SELECT DISTINCT (~ (CASE WHEN rt0.c0 THEN NULL ELSE vt0.c0 END)) FROM vt0, rt1, rt0 WHERE (((('', '-1891346429', '')) BETWEEN (((0Xffffffffb1847b04 IN ('d*3C')), ('-724152593' IN ()), (((('x')AND(x'')))AND(NULL)))) AND ((CASE WHEN NULL THEN '1052076910' ELSE x'ae24' END, (- (NULL)), NULL)))); -- 0ms;
SELECT DISTINCT ((((((((CAST(rt0.c3 AS INTEGER))AND(((NULL) NOT NULL))))OR(((((rt0.c4)AND(rt1.c4)))OR(rt1.c6)))))AND((+ (rt1.c3)))))AND(((rt1.c5)!=(vt0.c3)))) FROM rt0 WHERE ((NOT (((x'')OR('')))));SELECT DISTINCT (NOT (rt1.c1 COLLATE BINARY)), CAST((((rt0.c1))<((vt0.c0))) AS BLOB), LEAD(DATE(rt0.c1, rt0.c2, rt0.c0) COLLATE NOCASE, ((((rt0.c2) ISNULL)) IS FALSE), LOWER((NOT (rt0.c4)))) OVER ( PARTITION BY json(0.41641729232874014), ((((x'')OR(NULL)))AND(CASE rt1.c0  WHEN vt0.c1 THEN rt0.c3 END))) FROM rt0 WHERE (CAST((('-1930822750') NOTNULL) AS REAL)) LIMIT 1451908057;SELECT ALL (((((rt1.c0))=((rt1.c3))))||(NULL)) FROM rt1, rt0, vt0 WHERE ((((- (0X77b65b79)))<(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT UPPER(SUM(rt0.c3)) FROM rt0, rt1 WHERE ((x'' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT LENGTH(rt1.c0), ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c4))), (((rt1.c0 IN (0.06654589390622245)))|(NULL)), UNLIKELY((vt0.c1 IN ())) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT SUM((((rt1.c2))<(('-494980680')))) FILTER(WHERE (CAST(0.06654589390622245 AS TEXT) IN ((rt0.c0 IN (rt0.c3))))) OVER ( ORDER BY NULL ASC  NULLS FIRST, NULL  NULLS LAST) FROM vt0;SELECT ALL (((((rt0.c2))!=((rt1.c0)))) NOT BETWEEN ((rt1.c3 IN ())) AND (rt1.c0 COLLATE RTRIM)) FROM rt1;SELECT DISTINCT (((((((rt0.c0)) NOT BETWEEN ((rt1.c6)) AND ((NULL))))AND(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c4 END)))OR(((NULL)&(rt1.c0)))), COUNT(((0.5577318356229184) NOT BETWEEN (rt1.c6) AND (rt0.c0))) FILTER(WHERE ((-7.24152593E8)<=(rt1.c6 COLLATE BINARY))) OVER (), ((((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)AND((vt0.c2 IN ()))))OR(DATE(rt0.c1, rt1.c6, x''))))AND(CASE vt0.c3  WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 WHEN '-472330433' THEN rt1.c1 END)))OR(rt0.c3)), TOTAL(((rt1.c6)OR(vt0.c2))) OVER (), CASE WHEN NULLIF(DISTINCT rt1.c4, rt1.c4) THEN ((((vt0.c1)AND(rt0.c4)))OR(rt1.c6)) END FROM vt0;SELECT DISTINCT 0X41dda499 FROM rt0, rt1; -- 1ms;
SELECT ((((GROUP_CONCAT(rt1.c5))AND((((rt0.c4)) BETWEEN (('-1818792504')) AND ((NULL))))))AND(CAST(rt0.c3 AS REAL))) FROM rt1, vt0;SELECT DISTINCT ((((vt0.c3)/(vt0.c2))) BETWEEN ((((vt0.c1, rt0.c4, rt0.c1, vt0.c3, rt0.c0)) BETWEEN ((vt0.c1, rt1.c3, rt1.c4, rt1.c0, rt1.c4)) AND ((vt0.c0, rt0.c0, rt1.c6, rt1.c0, rt0.c3)))) AND (TOTAL(rt1.c4))) FROM vt0, rt0 WHERE ((~ (((x'')*(1.451908057E9)))));SELECT DISTINCT ((CASE WHEN vt0.c3 THEN rt1.c4 END)||((((rt1.c6, rt0.c2, rt0.c3))<=(('V킓yꆎ', rt1.c4, rt1.c1))))), COUNT(((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))), CASE WHEN 0.6824160389107699 THEN rt0.c1 END, UPPER(rt0.c0 COLLATE RTRIM), DATETIME(rt1.c1 COLLATE NOCASE, (((rt0.c2, rt0.c4, rt0.c4)) NOT BETWEEN (('0.041069020769967324', rt1.c5, vt0.c0)) AND ((rt0.c4, vt0.c1, x''))), (((vt0.c1, x'', rt1.c3))<((vt0.c3, rt0.c4, rt1.c4)))) FROM vt0, rt1 WHERE ((((((((((NULL)OR(NULL)))OR('')))OR(2.054885766E9)))OR(1.719858374E9)) IN ()));SELECT DISTINCT ((vt0.c1) NOT BETWEEN (((((rt1.c3)AND(rt1.c6)))AND(vt0.c1))) AND (GROUP_CONCAT(rt1.c0))) FROM rt1;SELECT DISTINCT (((((rt0.c0))<=((vt0.c0))))GLOB(UNICODE(rt1.c5))) FROM rt0, vt0 ORDER BY ((rt0.c2)|(((rt0.c0) BETWEEN (rt1.c6) AND (rt1.c0))))  NULLS LAST;SELECT ALL rt0.c3 FROM rt0, vt0 FULL OUTER JOIN rt1 ON TYPEOF(vt0.c1 COLLATE BINARY); -- 0ms;
SELECT CAST(highlight(rt1.c6, rt0.c3, rt0.c0, rt1.c0) AS INTEGER) FROM rt1, rt0, vt0;SELECT rt1.c1, ((((vt0.c3) NOT BETWEEN (rt1.c6) AND (vt0.c3))) IS FALSE), '' FROM vt0 LIMIT 44860148;SELECT DISTINCT CASE ((NULL)%(rt0.c2))  WHEN ((vt0.c2)<(vt0.c0)) THEN (rt1.c2 IN (rt1.c1)) ELSE rt0.c1 COLLATE NOCASE END FROM rt0, rt1 WHERE ((('-503329113')IS('1689554609')) COLLATE NOCASE);SELECT ALL ((CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN vt0.c3 END)<(((((0.8810109910137185)OR(vt0.c3)))OR(vt0.c3)))), (((((vt0.c0)) BETWEEN (('')) AND ((-517626566))))|((- (x'05f1')))), rt1.c3 FROM vt0 GROUP BY rt1.c4, (((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((rt0.c0))))IS NOT(rt1.c6)), ((((((vt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c1)))AND((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1))))))OR((rt1.c4 IN (rt1.c6, vt0.c2)))), ((((((rt1.c3)OR(vt0.c3)))AND(vt0.c0)))<(rt1.c1 COLLATE NOCASE)), '' COLLATE RTRIM HAVING ((CAST(rt1.c4 AS TEXT)) NOT NULL);SELECT DISTINCT ((((TYPEOF(rt1.c6))AND(GROUP_CONCAT(rt1.c6))))OR((rt1.c5 IN ()))) FROM rt1, vt0, rt0 WHERE (672879877); -- 0ms;
SELECT DISTINCT (((0.197333746823373)) NOT BETWEEN ((((rt1.c4)AND(rt0.c2)))) AND ((NULL))), ((x'') NOT NULL), ((('a_'))>=((rt1.c0))) FROM rt0, vt0, rt1 WHERE ((((((('-49678662')OR(x'')))AND(x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c2 END) BETWEEN (0.8452845963779521) AND (((rt0.c0)>=(rt1.c3)))) FROM vt0;SELECT DISTINCT vt0.c2 FROM rt0, rt1, vt0 WHERE (LIKELIHOOD(DISTINCT (((0x558b2f48, '', -5.17626566E8, 0.16210905533257247, '117450582')) NOT BETWEEN ((x'', NULL, 0.25383943677099696, ' 㢑', -528055262)) AND ((x'994b', x'', NULL, 0.03289834352472898, NULL))), 0.5449211797668508)); -- 0ms;
SELECT DISTINCT ((((rt0.c1)+(rt1.c2))) NOT BETWEEN (COALESCE(rt1.c1, rt1.c4)) AND ((((vt0.c3, vt0.c1, rt0.c1)) BETWEEN ((vt0.c2, rt1.c3, rt0.c0)) AND ((rt1.c3, vt0.c1, rt1.c2))))) FROM rt0, vt0;SELECT DISTINCT TOTAL(((rt1.c5)<(vt0.c2))), ((((rt0.c3))!=((rt1.c1))) IN (CASE rt1.c5  WHEN rt1.c3 THEN vt0.c2 WHEN rt1.c6 THEN rt1.c3 WHEN rt0.c0 THEN vt0.c3 END, ((((rt1.c2)OR(rt1.c5)))AND(rt0.c4)))), MIN(rt0.c0) FROM vt0, rt0 WHERE (-1548284521);SELECT DISTINCT (NOT ((rt1.c3 IN ()))) FROM rt1, rt0, vt0; -- 0ms;
SELECT ALL ((CAST(rt1.c4 AS NUMERIC))+(((rt0.c1) IS FALSE))) FROM vt0, rt1, rt0 WHERE ((x'd015' IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2, (+ (((rt1.c5)<(rt0.c4)))), GROUP_CONCAT((+ (rt1.c3))) OVER () FROM vt0, rt0 WHERE (((((((((0.1660770466588607)AND(x'f338')))OR('420786588')))AND(CAST(x'a467' AS NUMERIC))))AND(CAST(NULL AS TEXT)))) ORDER BY ((('-735910802')) BETWEEN (('*L')) AND (((~ (rt1.c3))))) LIMIT 1802369433;SELECT DISTINCT ((CAST(vt0.c3 AS TEXT))IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c1)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c2 COLLATE BINARY THEN (~ (rt1.c1)) ELSE TOTAL(rt0.c0) END, (+ ((~ (vt0.c0)))), GROUP_CONCAT((rt0.c4 IN ())) OVER () FROM rt0, vt0;SELECT DISTINCT CASE ((rt0.c1) ISNULL)  WHEN ((((vt0.c2)OR(rt1.c5)))OR(rt0.c1)) THEN vt0.c1 COLLATE RTRIM END, SUM(vt0.c2 COLLATE NOCASE) OVER ( ORDER BY vt0.c0), (((vt0.c0 IN ()))AND(rt0.c1)) FROM rt0, rt1, vt0 WHERE ((((((((((('-991102760')AND('wB[')))OR('-1775237478')))OR('qLtu<')))OR(-8.26352425E8))) IS FALSE)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, rt0, rt1 WHERE ((+ (('1054337704' IN ('-2086396413', x''))))); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt1 WHERE ((+ (0.7422806381980358 COLLATE BINARY)));SELECT DISTINCT (((~ (vt0.c3))) NOT BETWEEN ((((rt1.c2, rt0.c1, rt1.c4))<((rt0.c4, vt0.c2, rt0.c3)))) AND ((((rt1.c6))<=((rt1.c3))))), ((((vt0.c2)AND(rt0.c2)))AND(-1468238922)) COLLATE NOCASE, (~ ((vt0.c0 IN ()))), ((((((rt0.c3)AND(x'')))AND(rt0.c2)))&(((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c2)))), rt1.c0 COLLATE BINARY FROM rt1;SELECT ((rt1.c5 COLLATE NOCASE) IS TRUE) FROM rt0, rt1, vt0 WHERE ((((NULL)) BETWEEN ((((((0.283468175570152)AND(0.4193682000337017)))AND(x'')))) AND ((NULL)))); -- 0ms;
SELECT ALL SUM(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))), ((NULL)IS(((vt0.c3)IS(vt0.c0)))), COUNT(*) OVER () FROM vt0 WHERE ((((((x'')) NOT BETWEEN ((0xfffffffff5020362)) AND (('z+')))) IS FALSE));SELECT DISTINCT CAST(rt1.c3 AS NUMERIC) COLLATE NOCASE FROM vt0, rt0 ORDER BY (~ (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN x'' WHEN rt1.c5 THEN vt0.c1 ELSE rt0.c4 END)) ASC;SELECT CASE WHEN json_patch(rt0.c4, vt0.c3) THEN (((NULL, vt0.c3, rt0.c2)) BETWEEN ((rt0.c2, NULL, rt1.c4)) AND ((rt0.c4, rt1.c2, rt1.c2))) WHEN rt1.c6 THEN MIN('') WHEN rt1.c4 COLLATE NOCASE THEN ((rt1.c3)|(rt0.c2)) ELSE MAX(vt0.c0) END FROM rt0, vt0, rt1 WHERE ((((MIN(x'', '')))=((CASE 0.6638159920778062  WHEN x'' THEN x'' ELSE '-1855764871' END)))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN (vt0.c0))) ISNULL) FROM vt0;SELECT DISTINCT (((- (vt0.c1))) ISNULL) FROM rt0 LIMIT 725339443;SELECT DISTINCT CASE CAST(rt0.c1 AS REAL)  WHEN ((rt1.c0) ISNULL) THEN ((rt0.c3)IS(rt0.c4)) WHEN ((vt0.c3) IS FALSE) THEN (((0.6593293694499192, vt0.c3, vt0.c0))<>((rt0.c1, NULL, rt1.c5))) WHEN (((('')AND(rt1.c5)))OR(vt0.c2)) THEN COALESCE(DISTINCT vt0.c2, rt1.c2) END, UNLIKELY(CASE WHEN 0.9650026067574818 THEN rt1.c1 ELSE rt1.c3 END), TRIM(DISTINCT (rt1.c0 IN (x'')), ((((((((rt1.c5)AND(vt0.c0)))OR(rt1.c5)))OR(vt0.c1)))OR(rt1.c3))) FROM rt0;SELECT QUOTE(((x'') BETWEEN (rt1.c5) AND (rt1.c0))), AVG(LIKE(rt1.c5, rt1.c5, '<')), ((((rt1.c1)IS NOT(rt1.c0))) IS FALSE) FROM rt0 WHERE (((0.7196172467997772 COLLATE RTRIM)||(NULL COLLATE RTRIM))) ORDER BY ((((((((((vt0.c3) NOT BETWEEN (rt1.c4) AND (vt0.c0)))AND(((1.09308226E8)>>(rt1.c2)))))AND(CASE rt0.c0  WHEN rt1.c6 THEN rt1.c4 END)))AND((('F*') NOTNULL))))AND(((vt0.c2)>=(rt0.c3)))) ASC;SELECT DISTINCT ((rt1.c2) IS TRUE) COLLATE NOCASE, CUME_DIST() OVER (), TRIM(rt1.c1 COLLATE RTRIM) FROM rt1; -- 0ms;
SELECT ((((rt0.c3) BETWEEN (rt1.c3) AND (vt0.c3)))<>(IFNULL(rt1.c1, rt1.c5))) FROM rt0, vt0 WHERE (IFNULL(x'', '!Voe' COLLATE RTRIM)) EXCEPT SELECT DISTINCT FIRST_VALUE(1.854905731E9) OVER () FROM vt0, rt0 WHERE ((- (((('-681957011', 0xfffffffff4197452, NULL)) NOT BETWEEN ((NULL, 0x6682f4c6, 0.8602365780918257)) AND (('R''䄨MHUA#P', 0.12299982988214486, 'k單')))))) LIMIT -182928722 OFFSET -1796850155;SELECT DISTINCT ((CAST(rt0.c4 AS NUMERIC))<<(CAST(rt1.c0 AS REAL))) FROM rt1, vt0, rt0 WHERE (((((((NULL)AND(0x7ce771b4)))AND(x'')))%((((('')AND(2043303466)))OR(x''))))); -- 0ms;
SELECT DISTINCT ((rt0.c1)<=(rt1.c0)) COLLATE BINARY FROM rt1, rt0, vt0 WHERE (((LOWER('H g'))<>(IFNULL(DISTINCT x'9e62', NULL)))); -- 1ms;
SELECT ALL x'5d22' FROM rt1, vt0 WHERE (HEX(DISTINCT (('dT8') ISNULL))); -- 0ms;
SELECT x'', LIKELIHOOD(rt0.c2 COLLATE BINARY, 0.4187795396482148), ((rt1.c6 COLLATE RTRIM)||(((rt1.c3) NOT NULL))) FROM vt0 WHERE ((((NOT (NULL))) NOT NULL));SELECT DISTINCT (((((NOT (x'')))AND(((rt1.c2) NOTNULL))))AND(CAST(vt0.c1 AS TEXT))), COUNT(*) OVER ( ORDER BY (((((vt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c3)))) NOT BETWEEN ((((rt0.c3, rt0.c2, 0.18827044981921837))<>((rt1.c2, NULL, rt0.c1)))) AND (LIKELY(''))) DESC  NULLS FIRST), '' FROM vt0 CROSS JOIN rt1 ON (((rt0.c0)*(rt1.c3)) IN ()) RIGHT OUTER JOIN rt0 ON ((((((((((rt1.c5) BETWEEN (vt0.c2) AND (rt1.c5)))AND(((rt1.c6) NOT NULL))))AND(CAST(rt1.c6 AS TEXT))))OR(CAST(rt0.c0 AS NUMERIC))))OR(CAST(rt1.c4 AS INTEGER))) WHERE (MIN(-7.35910802E8, TYPEOF('-792803644'), ((x'')||(0.8051816224316054)), NULL)); -- 0ms;
SELECT INSTR(CASE rt0.c2  WHEN rt0.c4 THEN rt1.c3 WHEN vt0.c2 THEN vt0.c2 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c3 END, ((rt0.c3)|(rt1.c3))) FROM rt1, vt0 WHERE ((((NOT ('JƀXG')))GLOB(CAST('0.8810109910137185' AS REAL))));SELECT ((vt0.c1) NOT NULL), (('')|(rt0.c1)), FIRST_VALUE(((CASE rt0.c2  WHEN rt1.c6 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c3 END)|('d2v?1sgkh'))) OVER () FROM rt1, vt0, rt0 WHERE (((0X554306bb) BETWEEN ('1870678367') AND ('')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((((vt0.c1)>=(rt0.c1)))||(((rt1.c4) IS TRUE))), ((((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c2))) NOT BETWEEN (((((((((rt1.c2)OR(vt0.c1)))OR(vt0.c0)))AND(rt1.c5)))AND(rt1.c3))) AND (((((((((0X19c0cba)OR(rt1.c2)))AND(rt0.c4)))OR(rt1.c1)))AND(vt0.c0)))), json_object(LENGTH(rt1.c6), (((('796631829')AND(rt1.c4)))AND(rt1.c4))) FROM rt1, vt0, rt0 WHERE (CAST(196078271 AS NUMERIC));SELECT DISTINCT ((((((((((rt1.c3)LIKE(rt0.c2)))OR((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))))OR((vt0.c3 IN ()))))OR(IFNULL(NULL, rt1.c1))))AND(rt0.c0 COLLATE RTRIM)), CAST(rt1.c1 AS REAL) COLLATE NOCASE, CASE rt1.c5  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt0.c4 END COLLATE BINARY FROM rt1, vt0, rt0 WHERE ((CASE WHEN 0.48963292601927433 THEN 0X7f91241c END IN ())); -- 0ms;
SELECT ALL CUME_DIST() OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM vt0, rt0, rt1 WHERE (CASE ((('-735910802')) NOT BETWEEN ((x'8348')) AND (('-1846020349')))  WHEN CASE WHEN 0x75a5ddd THEN NULL WHEN -1156173960 THEN 0.4010855181202335 WHEN '-617105988' THEN NULL END THEN ((x'')||(0.36197485556304954)) WHEN x'd578' COLLATE NOCASE THEN (((((((('-1965583136')OR(x'')))OR(NULL)))AND('0.3553819620428085')))AND(x'2495')) WHEN (('-1156245391') IS FALSE) THEN CASE WHEN x'' THEN 0.6178425687973995 ELSE '-1679634564' END END); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, rt1 WHERE ((((((1485999495) NOTNULL), CAST('KpNHl.l' AS BLOB), (0.0034402674724818283 IN (0.15109941452372755))))<((NULL, '\', (~ (0Xffffffff848222bf)))))) ORDER BY LIKELIHOOD(DISTINCT ((rt1.c4)AND(rt0.c4)), 0.8484632288344384)  NULLS FIRST;SELECT GROUP_CONCAT(CAST(rt1.c1 AS BLOB)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), COUNT(((((x'')AND(rt1.c5)))AND(vt0.c0))), NTH_VALUE((((((((((rt1.c3 IN ()))AND(rt0.c2)))AND(rt0.c0)))OR(vt0.c1)))OR(((rt1.c6) IS FALSE))), CASE WHEN (rt1.c0 IN ()) THEN CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c5 THEN rt1.c3 WHEN x'' THEN rt1.c1 ELSE vt0.c3 END ELSE ((vt0.c2)||(0Xffffffffef2c77d5)) END) OVER ( ORDER BY ((('*탬ukg')) NOT BETWEEN ((vt0.c2 COLLATE NOCASE)) AND (((('-289158661')>(rt1.c6)))))  NULLS LAST, (('-753463741')=('R')) DESC  NULLS LAST) FROM rt0, vt0, rt1;SELECT DISTINCT CAST('' AS INTEGER) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c3, rt1.c0, vt0.c1, rt1.c6, 498241488)) NOT BETWEEN ((rt1.c5, rt0.c2, rt1.c6, rt0.c4, rt0.c2)) AND ((vt0.c3, rt1.c6, rt1.c1, x'', vt0.c2))) THEN ((rt1.c6) BETWEEN (rt1.c5) AND ('')) ELSE 0.9134863056626633 END, (- (rt1.c6)) COLLATE BINARY, LIKELIHOOD(DISTINCT CAST(vt0.c1 AS INTEGER), 0.2651228918497762), COUNT(*) FILTER(WHERE CAST('-1611584809' AS REAL)) OVER (), CASE WHEN (- (NULL)) THEN ((rt1.c5)<<(rt1.c5)) ELSE CAST(rt1.c1 AS INTEGER) END FROM rt0;SELECT DISTINCT NTILE(((((rt0.c0) BETWEEN (0.8051816224316054) AND (rt0.c2)))+(((rt0.c2) IS FALSE)))) OVER (), ((((((((((NULL)AND(rt0.c4)))AND(vt0.c3)))AND(vt0.c0)))OR(rt0.c1))) NOT NULL), LOWER(CASE WHEN NULL THEN vt0.c0 ELSE rt1.c6 END) FROM vt0, rt1, rt0 WHERE (CASE ((1597871927)*('#k'))  WHEN json_extract(x'', 0.767299616250889) THEN x'' END);SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c3 AS REAL)) OVER () FROM rt1 WHERE (LIKELIHOOD(((385328617)|('-438364758')), 0.39520628238803734)) LIMIT 701411609 OFFSET -709788233;SELECT ALL AVG((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c1)))) FROM vt0, rt0;SELECT DISTINCT NULL FROM rt1; -- 0ms;
SELECT COALESCE(DISTINCT vt0.c1, rt0.c4) COLLATE RTRIM FROM rt1, vt0 WHERE (((((((((0X63e46a5a COLLATE RTRIM)OR(('0.8051816224316054' IN (NULL)))))OR(COALESCE(0Xffffffff9c11a3c1, 0.6674092765482383))))OR((('0.546184805431395') ISNULL))))AND(((2.83022028E8)=(NULL)))));SELECT ALL (((vt0.c2, vt0.c1, rt1.c6)) BETWEEN (((~ (rt1.c4)), rt1.c6, ((x'') NOT BETWEEN (rt1.c5) AND (rt0.c3)))) AND (((~ ('-914819679')), ((rt1.c4) NOT NULL), (~ (rt1.c5))))) FROM vt0;SELECT DISTINCT ((((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c2))) ISNULL) FROM rt0, vt0, rt1 WHERE (CASE ((0.3204576939619227) NOT NULL)  WHEN x'' THEN (NOT ('977463700')) END); -- 0ms;
SELECT ALL ((((rt1.c5)+(rt0.c0)))AND(((rt0.c1)!=(rt0.c1)))) FROM rt0;SELECT ALL SUM(LAST_INSERT_ROWID()) FROM rt1 NOT INDEXED WHERE (0.24985844061081175); -- 0ms;
SELECT ALL CASE WHEN (((vt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((rt1.c6, rt0.c2, rt1.c1)) AND ((rt1.c6, rt1.c0, rt1.c4))) THEN ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) ELSE (((vt0.c2))>((vt0.c1))) END, AVG(CAST(rt1.c2 AS TEXT)) OVER (), ((((vt0.c2)<=(rt1.c4))) NOT BETWEEN (COUNT(*)) AND ('0.23488270068656203')) FROM vt0, rt1 LIMIT -1023036932;SELECT ALL ABS((rt1.c2 IN (vt0.c3, rt0.c4))), (- (((rt0.c0) NOT BETWEEN (vt0.c3) AND (rt0.c3)))), CASE WHEN MAX(NULL) THEN ((((rt1.c0)AND(rt0.c2)))OR(vt0.c3)) ELSE MAX(vt0.c2) END FROM rt0, rt1;SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt1.c5 WHEN rt1.c3 THEN rt1.c5 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c2 THEN vt0.c1 WHEN rt0.c4 THEN rt0.c4 END) IS FALSE) FROM rt0, rt1 WHERE ((((~ (NULL)))<=(((x'') BETWEEN (0.8734729481004498) AND ('뗳C')))));SELECT DISTINCT LAG(NULL, (- ((NOT (vt0.c2)))), (NULL IN ())) OVER (), COUNT(*) OVER ( RANGE BETWEEN rt1.c2 FOLLOWING AND  CURRENT ROW), (rt1.c2 COLLATE RTRIM IN (json_remove(rt1.c4, rt1.c3))) FROM rt1, vt0 WHERE (0.8463987786130889);SELECT DISTINCT (('LF6M') NOT BETWEEN (rt1.c6) AND (rt1.c5)) COLLATE BINARY, (- (vt0.c1)) COLLATE BINARY, (((rt1.c5)) NOT BETWEEN (((+ (NULL)))) AND ((CASE WHEN rt0.c0 THEN rt1.c4 ELSE rt1.c5 END))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL vt0.c0 FROM rt0;SELECT ALL ((((rt1.c5)OR(rt1.c4)))OR(rt0.c1)) FROM rt0 WHERE (((((((0.3770525652662302) IS FALSE))OR(x'')))OR(CAST(x'67ce' AS INTEGER))));SELECT DISTINCT AVG('') FROM rt0, vt0 UNION SELECT (rt0.c0 COLLATE BINARY IN ()) FROM vt0, rt0 GROUP BY (((rt1.c5)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND (((+ (rt1.c5))))) HAVING ((rt1.c5)-(((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c5)))) LIMIT -1259481573 OFFSET 169969633;SELECT ((((~ (rt0.c0))))<=((((rt1.c6) BETWEEN (0.4475215803821374) AND (rt1.c6))))), (rt1.c4 IN ()), rt1.c0 FROM rt0, rt1 LIMIT 274051098; -- 1ms;
SELECT DISTINCT (((rt0.c2))<=((((vt0.c1)OR(rt1.c6))))) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL CAST(MIN(rt0.c1) AS TEXT) FROM vt0, rt0, rt1 WHERE (((0.2710283392327306) NOTNULL)) ORDER BY (NOT ((rt0.c3 IN ())))  NULLS LAST; -- 0ms;
SELECT ALL ((TYPEOF(rt1.c4)) NOT BETWEEN (vt0.c0) AND (vt0.c1 COLLATE RTRIM)) FROM vt0;SELECT (~ (COALESCE(DISTINCT rt1.c5, rt1.c2))), ((((((rt0.c2)>(rt0.c1)))AND((- (rt0.c4)))))OR(rt1.c5 COLLATE NOCASE)), TRIM(rt1.c6 COLLATE RTRIM, (rt1.c0 IN ())), ((TOTAL(rt1.c0)) IS TRUE), ((~ (rt0.c1)) IN (((NULL)AND(rt1.c0)))) FROM vt0, rt0 WHERE (((((+ ('yD'))))>=((((0.6767916381617037) BETWEEN (0.5803276885420147) AND (NULL))))));SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0, rt1; -- 2ms;
SELECT DISTINCT TOTAL('0.21607830792359328') FROM rt1, rt0, vt0 WHERE (((('782860352')) BETWEEN ((((x'')GLOB('')))) AND ((NULL COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c0))>=((rt1.c3)))), COUNT(0xffffffffc2cfd905) OVER (), FIRST_VALUE(CAST(CASE WHEN rt1.c4 THEN rt0.c4 ELSE vt0.c1 END AS REAL)) OVER ( ORDER BY ((((((((CASE WHEN rt1.c1 THEN rt1.c3 END)AND(((x'') IS FALSE))))AND(rt1.c5 COLLATE NOCASE)))OR(((vt0.c0) NOTNULL))))AND(((rt1.c4)AND(vt0.c2))))  NULLS LAST, ((CAST(NULL AS NUMERIC))IS NOT(x'' COLLATE NOCASE)) DESC) FROM vt0, rt0, rt1; -- 1ms;
SELECT ALL vt0.c2 COLLATE BINARY, (NOT (SUM(rt1.c4))), CASE ((((((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c2)))AND(x'6891')))AND(rt0.c1)))AND(rt1.c1)))OR(rt0.c3))  WHEN ((vt0.c0) NOT NULL) THEN (((rt0.c0))>=((rt0.c1))) WHEN (vt0.c3 IN ()) THEN ((((vt0.c3)AND(rt1.c2)))OR(0.602518658539883)) WHEN CASE WHEN 0x737c9d23 THEN rt1.c5 WHEN rt0.c4 THEN rt1.c6 WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c2 END THEN (rt0.c2 IN (rt1.c6, rt0.c3)) ELSE MAX(rt1.c2) END FROM rt0 LIMIT -2063526095;SELECT vt0.c2 FROM rt1;SELECT (- (COUNT(rt1.c5))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c3)AND(rt1.c4)))AND(rt0.c4)))AND(1925821673)))OR(rt1.c3))) BETWEEN (((((((((0x6937121d)AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c4)))AND(rt1.c1))) AND (((vt0.c1) BETWEEN (rt1.c2) AND (NULL)))) FROM rt0, vt0 WHERE ((((('-1407950705')IS(6.28055872E8)))GLOB(((0.5739894706269023)GLOB(0.927207009295711)))));SELECT json_object(((rt1.c6) ISNULL), (((rt1.c4, rt1.c3, 0xffffffff89fe14f3, rt1.c6, vt0.c0))<((rt1.c4, rt1.c5, rt1.c3, vt0.c2, NULL)))) FROM rt1;SELECT DISTINCT CAST(((rt1.c1) ISNULL) AS BLOB) FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL COALESCE(DISTINCT ((rt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c4)), ((rt0.c0)-(914981259)), -2.121439123E9, ((((NULL)AND(rt0.c2)))AND(rt1.c4)), rt1.c3 COLLATE NOCASE, rt1.c0) FROM rt0 WHERE (CAST(('d^黯rV(' IN ()) AS BLOB));SELECT GROUP_CONCAT(UPPER(DISTINCT 0.2767748996821987)) OVER () FROM rt0, rt1, vt0 WHERE (CAST(UNLIKELY(NULL) AS REAL)) ORDER BY (((('')+(rt1.c2))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c1)!=(rt0.c3))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt0.c1)LIKE(rt1.c2))) NOT BETWEEN (((vt0.c1)IS NOT('564243777'))) AND (((rt1.c2)=(rt1.c6)))) FROM rt0, rt1;SELECT ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)))>=(((((rt1.c2)AND(rt0.c1)))OR(vt0.c2)))) FROM rt0, vt0, rt1 WHERE ((((((0.6697385356860404, x'cd3b', '')) BETWEEN ((x'', NULL, x'326a')) AND ((NULL, '920386815', 0.15170968862927858)))) NOT BETWEEN (0x35ce9a84) AND (x'' COLLATE RTRIM))) ORDER BY (NOT ((((rt0.c2, vt0.c2, rt0.c2))==((vt0.c0, rt1.c5, rt0.c4))))) DESC, CAST(((vt0.c3) BETWEEN (rt1.c6) AND (rt0.c2)) AS NUMERIC)  NULLS LAST, ((rt0.c2 COLLATE BINARY)GLOB(CASE WHEN rt1.c6 THEN rt1.c4 END))  NULLS LAST; -- 0ms;
SELECT ALL CAST(CASE WHEN rt1.c3 THEN vt0.c2 WHEN rt0.c0 THEN vt0.c1 WHEN rt1.c4 THEN rt0.c1 WHEN NULL THEN vt0.c3 WHEN rt0.c2 THEN vt0.c2 END AS TEXT), rt1.c0, (SUM(rt0.c0) IN ()), TRIM(DISTINCT x''), ((rt1.c0) IS TRUE) FROM vt0, rt1;SELECT DISTINCT ((vt0.c0) NOT NULL) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL COUNT((rt1.c1 IN (rt1.c2))) FROM vt0, rt0 WHERE (x'8d6e');SELECT DISTINCT DENSE_RANK() OVER (), '1061584558', (((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c5)) IN (json_valid(rt1.c6))) FROM rt0, vt0, rt1 WHERE (((('\r◀')IS NOT('v(')) IN ())); -- 0ms;
SELECT DISTINCT CASE rt1.c4  WHEN ((vt0.c0) IS FALSE) THEN CASE WHEN rt1.c3 THEN vt0.c2 WHEN vt0.c1 THEN rt1.c6 WHEN NULL THEN rt1.c1 END WHEN ((x'')|(rt1.c1)) THEN x'b889' WHEN (NOT (rt0.c0)) THEN CAST(rt0.c4 AS REAL) END FROM rt0, rt1 WHERE (((CASE 0.3867138060138543  WHEN 0X4469b9ca THEN 0.8287928963659805 ELSE NULL END)IS((0x39a291b1 IN (x'', NULL)))));SELECT DISTINCT TRIM(((((vt0.c2)AND(vt0.c0)))AND(rt0.c2))) FROM rt0 WHERE (CAST(((0.1482746034707194) BETWEEN ('GTryh') AND (0.6718297448580458)) AS NUMERIC));SELECT ALL 0.5235503862553623 FROM vt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN (vt0.c2))) IS TRUE), (((((+ (0xffffffffd7aef7db)))AND((vt0.c3 IN ()))))OR(CAST(rt0.c4 AS BLOB))), CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0, rt0 WHERE ((NOT (('1984748790' IN (0.560640918483196, '-687723179'))))); -- 0ms;
SELECT ALL ((((((rt0.c4) IS FALSE))AND((rt1.c4 IN ()))))AND((NOT (rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))||(((rt1.c3)|(rt0.c4)))) FROM vt0, rt0, rt1 WHERE ((+ (TRIM(0.9683672412606608, 0.26887860142717424)))); -- 0ms;
SELECT ((((((((rt0.c0 COLLATE RTRIM)AND('J#M)kv')))OR((rt0.c2 IN ()))))AND(((rt0.c1) NOT BETWEEN (vt0.c3) AND (vt0.c2)))))OR(IFNULL(DISTINCT rt1.c0, rt1.c0))) FROM rt0, rt1 WHERE (((('1616377804', '1817494118', NULL)) BETWEEN ((CASE x''  WHEN x'' THEN 0.9733337793601364 END, ((((x'')AND(0.878795320678652)))AND(NULL)), ((0.1699040945190491) BETWEEN ('-1150460434') AND ('1928822947')))) AND ((CAST(NULL AS TEXT), ((((NULL)AND('')))OR(x'8457')), CASE WHEN 'X+' THEN NULL END))));SELECT DISTINCT TRIM((+ (rt0.c3)), ((rt0.c4)<>(rt0.c0))) FROM vt0;SELECT ALL CAST(rt0.c4 AS NUMERIC) FROM rt1, vt0, rt0; -- 1ms;
SELECT DISTINCT ABS(INSTR(rt0.c3, rt0.c0)) FROM rt1 CROSS JOIN vt0 ON ((LAST_INSERT_ROWID()) NOTNULL) RIGHT OUTER JOIN rt0 ON CASE vt0.c1  WHEN ((rt1.c3) ISNULL) THEN x'' END WHERE ((((0.08685629341948742, ((0.7320268004760314) NOT BETWEEN (0.1023425030336198) AND (NULL)), NULLIF(NULL, 0.8636559363591986)))>=((NULL, json_extract('Nvt', '-1e500'), (((x'')) NOT BETWEEN ((NULL)) AND ((x''))))))) LIMIT 1939028891 UNION ALL SELECT DISTINCT 0.7811470613043602 FROM vt0, rt1 WHERE (((GLOB('Y!c2ihys', NULL))%(x''))) GROUP BY (~ ((((0.5815615491004231)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c2))))), ((CAST(vt0.c0 AS BLOB)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c0)OR(vt0.c3)))), ((CASE vt0.c3  WHEN rt1.c1 THEN -749148498 WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c2 END)<((rt1.c6 IN (rt1.c1, rt1.c1)))) HAVING CASE ((rt0.c4)|(rt1.c2))  WHEN COUNT(rt1.c5) THEN vt0.c1 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (vt0.c3) AND (rt0.c3)) THEN x'' WHEN (rt1.c1 IN ()) THEN (NOT (vt0.c0)) END;SELECT DISTINCT 0xffffffffba25df1c FROM rt1, vt0 WHERE ((('Ba^䇏' COLLATE BINARY)<<(-4.30020206E8 COLLATE RTRIM))); -- 0ms;
SELECT COUNT((rt1.c0 IN ())) FROM rt1, vt0, rt0 WHERE (COALESCE((('-1392712716') ISNULL), 0.37890023635310366)); -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) IS FALSE) FROM rt0 WHERE (CASE WHEN (0.6205445325697635 IN ()) THEN CASE 0.5961833095902189  WHEN '220733963' THEN NULL ELSE x'7a66' END ELSE (~ (-1699579886)) END);SELECT DISTINCT CAST(rt1.c5 COLLATE NOCASE AS TEXT), CASE rt1.c0 COLLATE RTRIM  WHEN ((rt0.c1) BETWEEN (rt1.c4) AND (rt0.c2)) THEN ((rt1.c1) IS FALSE) END, COUNT('') OVER () FROM vt0 LIMIT -709515347 OFFSET 611028581;SELECT CASE ((rt0.c1)LIKE('38L뫡'))  WHEN ((rt0.c0) NOTNULL) THEN CASE WHEN NULL THEN rt0.c3 ELSE vt0.c1 END WHEN vt0.c1 COLLATE BINARY THEN rt1.c5 WHEN ((rt0.c1)==(rt0.c4)) THEN ((vt0.c1)||(rt0.c3)) END, CASE WHEN ((rt1.c3)%(rt1.c3)) THEN MIN(rt0.c3) END, (((((rt0.c1))>((rt1.c2))))IS NOT('-1147079723')) FROM rt1 WHERE (((ABS(DISTINCT 2.070461216E9))/(NULL COLLATE NOCASE)));SELECT ALL x'0b33', ROW_NUMBER() OVER (), IFNULL(((('-256022794')) BETWEEN ((rt0.c2)) AND ((rt0.c4))), (rt0.c2 IN ())) FROM vt0, rt1 GROUP BY (((vt0.c3) NOTNULL) IN ((~ (rt0.c3))));SELECT NTILE(NULL) OVER () FROM vt0, rt0 WHERE (CAST(x'0255b2cd' AS INTEGER) COLLATE RTRIM) ORDER BY (((rt0.c4)%(vt0.c3)) IN (((rt1.c3)&(vt0.c3)), ((rt1.c1) NOT BETWEEN (rt1.c3) AND (x'')))) ASC  NULLS LAST;SELECT ALL ((CAST(rt1.c2 AS NUMERIC))OR(LOWER(vt0.c3))) FROM rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT ((((((((((vt0.c1)AND('0.15274944729309337')))AND(vt0.c3)))AND(vt0.c0)))AND(rt0.c3)))||((rt1.c2 IN ()))) FROM vt0, rt0, rt1 WHERE ((((((NULL) BETWEEN (0xffffffff8c3907af) AND (x''))))!=(((('') BETWEEN (0Xffffffffbb151871) AND (1.11594231E9)))))); -- 0ms;
SELECT ((vt0.c3) IS FALSE), (((rt0.c4)) BETWEEN ((((rt1.c3)<<(rt0.c0)))) AND ((highlight(rt0.c0, rt0.c4, vt0.c1, rt1.c5)))), (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))<>((((rt0.c2)*(vt0.c2))))), ((((rt1.c3 IN (NULL, vt0.c1))))=((((rt0.c2)||(vt0.c2))))), ((((rt0.c4))<=((rt1.c4))) IN ()), IFNULL(DISTINCT CASE rt1.c4  WHEN rt1.c0 THEN rt1.c6 ELSE rt0.c4 END, UNLIKELY(rt0.c3)), (((rt0.c3, rt0.c1, vt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)), CAST(vt0.c1 AS NUMERIC), CAST(vt0.c1 AS INTEGER))) AND ((((rt1.c4) NOTNULL), x'9870', (((rt1.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) FROM rt1 WHERE (('\r{#Ii*' COLLATE NOCASE IN (CAST(NULL AS INTEGER))));SELECT (NOT (x'')), ((((vt0.c1)>>(rt1.c0))) ISNULL), SUM(((rt0.c0)IS(rt0.c3))) OVER () FROM rt0, vt0;SELECT ALL PRINTF(rt1.c2, ((((((((rt1.c0)OR(0.48963292601927433)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)), (rt0.c3 IN (vt0.c0))) FROM rt0, vt0;SELECT ALL rtreenode(((vt0.c3)LIKE(rt1.c1)), MIN(rt0.c0)) FROM vt0, rt1;SELECT CASE (vt0.c0 IN ())  WHEN 0.7182287714863568 COLLATE NOCASE THEN CASE rt1.c1  WHEN rt1.c3 THEN 420786588 END ELSE (~ ('~b')) END FROM rt1 LIMIT 1815091282 OFFSET 241842835; -- 0ms;
SELECT ALL (((+ (vt0.c3))) NOT BETWEEN (vt0.c1) AND (((vt0.c0)>>(vt0.c2)))), MAX((((rt1.c5))==((rt1.c1)))), LEAD((((((rt1.c5) NOTNULL)))>=(((((rt1.c5))!=((rt1.c2)))))), ((((rt1.c6) BETWEEN (rt1.c6) AND (rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CASE WHEN 0.283468175570152 THEN vt0.c1 END)), ((((((((CAST(rt1.c3 AS REAL))AND((((rt1.c3, x'', rt1.c4))!=((rt1.c4, vt0.c2, rt1.c0))))))AND(((rt0.c3) IS FALSE))))OR(rt1.c1)))OR(x''))) OVER () FROM rt1, vt0, rt0 WHERE ((((('-1785804333', 0Xffffffffa64ac8cd, NULL)) BETWEEN ((NULL, '-289158661', 0.5688515774450473)) AND ((0.922198690635354, 0x709d7f81, 0.4049000573220267))) IN ((NOT ('#{bQ'))))); -- 0ms;
SELECT (((vt0.c3) BETWEEN (rt1.c5) AND (rt1.c2)) IN ()) FROM rt1 WHERE ((((('~T!V75PF\n')AND(CAST(0.8843125403257923 AS INTEGER))))AND(CASE WHEN '-2004804210' THEN NULL ELSE x'e984' END))); -- 0ms;
SELECT DISTINCT ((rt0.c2)IS NOT(CASE WHEN vt0.c0 THEN rt1.c2 END)) FROM rt1, rt0 LIMIT -440900993;SELECT DISTINCT SUM(NULL COLLATE NOCASE) OVER (), (((~ (0.9259948647786306))) IS TRUE), ((((vt0.c3) NOT NULL)) BETWEEN (rt0.c4) AND (TYPEOF(DISTINCT rt0.c1))) FROM rt0, vt0 WHERE (('-153312932' IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (0.4475215803821374 IN ()) FROM rt0, vt0, rt1 WHERE ((((0.6595104361787257 IN (NULL, 0.39164645533450604))) BETWEEN ((((0.5112489615726841))!=(('2054885766')))) AND ((((0Xffffffffe3ec8d9e)) BETWEEN (('*)')) AND (('711201549')))))) ORDER BY rt0.c0  NULLS FIRST; -- 0ms;
SELECT ALL (((+ (rt0.c2))) IS FALSE) FROM rt1 GROUP BY (((vt0.c1)LIKE(rt0.c0)) IN ()) HAVING (vt0.c0 COLLATE RTRIM IN ()) ORDER BY CASE WHEN rt0.c4 COLLATE BINARY THEN CASE WHEN rt1.c1 THEN rt1.c3 END ELSE rt1.c3 COLLATE BINARY END ASC  NULLS FIRST;SELECT ((((((rt0.c4)OR(rt0.c0)))AND(rt0.c4))) BETWEEN (((((rt1.c5)OR(vt0.c0)))OR(vt0.c3))) AND (MIN(rt1.c6))) FROM rt0, rt1 LIMIT 326613024;SELECT DISTINCT rt1.c2 FROM rt0 WHERE ((((NULL, 1056806014, x'')) BETWEEN ((x'', CAST(-413436042 AS BLOB), TRIM(DISTINCT 'M\r', '960183197'))) AND (((((NULL, 0.3527814148523648, x''))=((NULL, NULL, '0.6808942475101994'))), (('}+!|I') NOT BETWEEN ('1133284589') AND ('2t쭄?%8짻1''')), '436185126' COLLATE BINARY))));SELECT DISTINCT CASE ((vt0.c1) BETWEEN (rt1.c0) AND (vt0.c2))  WHEN (- ('')) THEN rt1.c1 COLLATE BINARY ELSE COUNT(*) END FROM rt1 WHERE ((+ ((('') NOT BETWEEN (-7.49148498E8) AND ('-2041875854'))))) ORDER BY (((((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt0.c2))))==((((rt1.c2)OR(rt1.c5))))), CAST(rt1.c3 AS INTEGER)  NULLS FIRST;SELECT ALL ((((rt1.c2)-(rt1.c4))) NOT BETWEEN ((~ (rt0.c1))) AND ((- (rt0.c4)))), ((((((((rt0.c4)AND('-2123025127')))OR(rt0.c2)))OR(((NULL) BETWEEN (rt1.c5) AND (rt1.c5)))))OR((~ (vt0.c1)))), ((CASE WHEN rt1.c0 THEN rt0.c3 ELSE vt0.c3 END)GLOB(((rt1.c2) IS TRUE))) FROM vt0;SELECT ALL (((vt0.c1))<=((vt0.c1))) COLLATE RTRIM FROM rt1 WHERE (CASE WHEN ((('0.8564465886494963'))>=((NULL))) THEN ((NULL)|(0.7135654527848211)) WHEN ((0Xffffffffdd711e5e) BETWEEN ('-1891346429') AND (NULL)) THEN ((0Xffffffff8ad794e0) NOT BETWEEN (-1.775869583E9) AND (1393341810)) WHEN (('TRUE')%(x'')) THEN (('-334330843')OR(NULL)) END);SELECT ALL CAST(((rt1.c6) IS TRUE) AS BLOB), (+ (x'a28e')), NULL FROM rt1, vt0, rt0; -- 1ms;
SELECT DISTINCT (((0.37871881071017666))<(((((rt1.c3)) BETWEEN ((rt0.c2)) AND ((rt1.c6)))))) FROM rt0, rt1 WHERE (CAST(CAST(x'' AS BLOB) AS INTEGER)); -- 0ms;
SELECT DISTINCT (NOT (vt0.c1)) COLLATE BINARY, CAST(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS BLOB), ((0.563048213862135)|(vt0.c0)) FROM rt0, rt1 WHERE (UPPER(DISTINCT ((((0Xffffffffc9f0dd12)OR(0.27177256138077854)))AND(''))));SELECT DISTINCT ((rt1.c2) BETWEEN (LIKELIHOOD(DISTINCT rt1.c0, 0.6538089833126375)) AND (((((rt0.c4)OR(vt0.c1)))AND(vt0.c2)))) FROM vt0, rt0;SELECT DISTINCT ((((SUM(rt0.c4))AND((rt1.c3 IN ()))))AND(rt1.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT rt1.c5 FROM rt1; -- 0ms;
SELECT (((vt0.c2 IN ()))IS NOT(CAST(vt0.c2 AS INTEGER))) FROM rt0, rt1 WHERE (((((NULL)<>(0.38824889430615983))) ISNULL));SELECT DISTINCT CAST(0xffffffffe65e6992 AS BLOB) FROM rt1, vt0, rt0 WHERE (((((x'', NULL, 0.7002307240269483))<((NULL, 1854905731, NULL))) IN ((((('-1796850155')OR(NULL)))AND(x'09d2a056'))))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0, rt0, rt1 NOT INDEXED; -- 0ms;
SELECT ((((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c3)))OR(AVG(vt0.c2))))AND(vt0.c3)), MIN(rt0.c4), COUNT(*) OVER () FROM rt1, rt0;SELECT NULL FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS REAL) AS NUMERIC) FROM vt0, rt0, rt1 WHERE ((NOT (0.25412532428588797 COLLATE BINARY))); -- 0ms;
SELECT COUNT(*) COLLATE RTRIM COLLATE BINARY FROM vt0, rt1; -- 0ms;
SELECT ((((rt1.c3)*(vt0.c1))) NOT BETWEEN (TOTAL(rt1.c1)) AND (((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3)))), (~ (CAST(rt0.c0 AS TEXT))), CAST(((rt0.c1)IS(rt1.c3)) AS BLOB) FROM vt0, rt0 WHERE (((((-990788455)-(0.5513989634551497))) NOT BETWEEN ((((x''))>=((0.7832508050944017)))) AND (((('2001613312', 0.47313914825596126, '0.8788078515247175')) BETWEEN (('', NULL, x'86ec')) AND ((x'', '-244229705', -503329113))))));SELECT DISTINCT CAST(((rt1.c3) NOT NULL) AS BLOB), PERCENT_RANK() OVER ( ORDER BY (((((NULL)&(-1306297687))))>((json_array_length(rt1.c1)))) ASC, CASE WHEN ((((rt1.c1)OR(rt1.c6)))OR(vt0.c3)) THEN (NOT (rt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN rt0.c4 WHEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((rt1.c6)&(rt1.c0)) ELSE ((rt0.c2) BETWEEN ('-710551318') AND (rt1.c5)) END DESC  NULLS FIRST), x'6637' COLLATE NOCASE FROM rt0, rt1 WHERE (((TRIM(-4.30020206E8, 0.5082625164925118))&(COALESCE(DISTINCT 'w98|', NULL))));SELECT ALL AVG((rt1.c0 IN ())) FROM rt0; -- 1ms;
SELECT ALL (+ (ABS(vt0.c3))) FROM vt0 WHERE (''); -- 0ms;
SELECT NTILE(rt0.c0) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((rt1.c0)IS NOT(rt1.c0)) COLLATE NOCASE FROM vt0, rt0, rt1 WHERE (CAST(((((x'f9cb')AND('-883189478')))AND('')) AS INTEGER)); -- 0ms;
SELECT ALL ((((((((LIKELY(vt0.c2))AND(((rt0.c0) NOT NULL))))AND((rt1.c1 IN ()))))OR((((vt0.c3)) BETWEEN ((vt0.c2)) AND ((rt1.c1))))))AND(rt1.c0 COLLATE RTRIM)) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT NULLIF('1115942310', CASE WHEN rt0.c2 THEN rt1.c5 END) FROM rt0, rt1, vt0 WHERE (((CAST(x'' AS INTEGER)) BETWEEN ((('X') IS FALSE)) AND (((('-1334002687')) BETWEEN ((x'')) AND ((x'')))))) ORDER BY (NOT (((rt1.c2) BETWEEN ('[1') AND (vt0.c3)))) ASC LIMIT -1156245391 OFFSET -683900696; -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c3 AS REAL) AS TEXT) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c3, ((CAST(rt1.c4 AS INTEGER))IS(rt0.c4 COLLATE BINARY)), (CASE WHEN rt0.c0 THEN vt0.c2 WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c5 THEN rt0.c4 ELSE rt1.c6 END IN (rt1.c4)) FROM rt0;SELECT rt1.c1 FROM rt1, rt0, vt0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT ALL CASE ((rt1.c1)&(rt1.c1))  WHEN TOTAL(rt0.c4) THEN (rt1.c4 IN ()) ELSE ((((rt1.c6)OR(rt0.c3)))OR(rt1.c6)) END, LOWER(DISTINCT CAST(rt1.c1 AS REAL)), COUNT(*) OVER ( RANGE ((vt0.c3) ISNULL) PRECEDING) FROM rt0, rt1, vt0 WHERE (((((NULL) BETWEEN (x'') AND ('sk'))) NOT NULL)) LIMIT 988133678;SELECT DISTINCT ((((CASE WHEN vt0.c2 THEN rt1.c0 ELSE rt0.c2 END)OR((rt1.c0 IN ()))))OR(((rt1.c6) BETWEEN (rt1.c3) AND (rt0.c2)))) FROM rt0;SELECT ALL LOWER(DISTINCT NULLIF(vt0.c3, rt1.c3)) FROM vt0, rt1, rt0 WHERE (((((NULL)OR('{T')))=((('-1407950705') BETWEEN (NULL) AND ('-2004804210'))))); -- 0ms;
SELECT (('\r') BETWEEN (((vt0.c0)>=(vt0.c3))) AND (((x'09df') NOT BETWEEN (rt1.c1) AND (rt1.c1)))) FROM rt1 LIMIT 1833621982;SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC) FROM rt0, rt1; -- 0ms;
SELECT CAST(CAST(rt1.c3 AS TEXT) AS NUMERIC), (+ (((((rt0.c1)OR(rt1.c0)))OR(rt1.c3)))), STRFTIME(vt0.c2, rt0.c1, rt1.c2) COLLATE NOCASE FROM rt1;SELECT ALL (- (rt0.c2)) COLLATE RTRIM FROM vt0, rt1 WHERE ((((0.46003012660972564) ISNULL) IN ()));SELECT ALL (((('')IS(x''))) IS TRUE), (rt0.c1 IN ()), NULL FROM rt0, rt1, vt0 WHERE ((((- (NULL)))<<(((0.34365461814249076) BETWEEN ('1268858324') AND (NULL))))); -- 0ms;
SELECT ALL ((((((((((((MAX(vt0.c3))AND(1050071078)))OR(CASE rt1.c6  WHEN x'' THEN rt1.c1 WHEN vt0.c3 THEN 'i' WHEN rt1.c6 THEN rt0.c3 ELSE NULL END)))OR(vt0.c1)))OR(((((vt0.c2)OR(rt0.c4)))OR(vt0.c0)))))OR(CASE WHEN rt0.c3 THEN rt1.c5 WHEN vt0.c3 THEN rt1.c5 WHEN 'RF	[\n2' THEN rt1.c4 WHEN rt1.c4 THEN x'' WHEN vt0.c0 THEN rt1.c3 WHEN vt0.c3 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c0 END)))AND((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt1.c4, rt1.c5, vt0.c0)) AND ((vt0.c3, vt0.c3, rt1.c3))))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ((CAST(rt1.c0 AS NUMERIC))<((~ (rt1.c5)))) FROM rt1, vt0; -- 0ms;
SELECT (~ ((rt1.c2 IN ()))) FROM rt1, rt0, vt0 WHERE (((CASE '1616377804'  WHEN 'C!' THEN x'' END)|(CAST(NULL AS TEXT)))) ORDER BY LIKE((((rt1.c5, rt1.c0, rt0.c2, rt0.c4, vt0.c0)) NOT BETWEEN (('1545943062', rt1.c3, rt0.c4, vt0.c1, rt1.c2)) AND ((vt0.c2, vt0.c2, rt1.c1, rt1.c0, rt1.c2))), CAST(rt1.c4 AS REAL)) DESC; -- 0ms;
SELECT ALL CASE (+ (rt0.c2))  WHEN (rt0.c4 IN ()) THEN COUNT(rt1.c5) WHEN CASE WHEN rt1.c5 THEN rt1.c4 ELSE vt0.c2 END THEN ((vt0.c2) BETWEEN (rt1.c2) AND (vt0.c3)) WHEN rt0.c1 COLLATE NOCASE THEN NULL ELSE ((vt0.c3)<=(rt1.c6)) END FROM vt0;SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, rt0; -- 1ms;
SELECT SUM(UPPER(DISTINCT 0.04920142094687463)) OVER ( PARTITION BY ((CHANGES())>(((rt0.c1)!=(rt1.c6)))), CAST(((rt0.c3)<=(x'')) AS TEXT)), SQLITE_VERSION(), CASE WHEN (('-1454217955')==(vt0.c0)) THEN CAST(rt1.c3 AS BLOB) END, (CAST(rt1.c2 AS REAL) IN ()), (- (rt0.c1)) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN x'' WHEN ((rt1.c2)>=(vt0.c2)) THEN rt0.c2 WHEN ((rt0.c2)==(vt0.c3)) THEN CAST(vt0.c0 AS INTEGER) ELSE CASE WHEN rt0.c2 THEN rt0.c1 END END FROM vt0, rt0;SELECT rt1.c3 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS BLOB)) IS TRUE) FROM vt0, rt1 GROUP BY ((((((rt1.c5)OR(rt1.c2)))AND(NULL))) IS TRUE), (CAST(rt1.c3 AS INTEGER) IN (((((x'')AND(rt0.c2)))AND(rt0.c3)))), ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt1.c2))) ISNULL) HAVING '-2112693990';SELECT ALL (~ (((((rt1.c1)AND(rt0.c2)))AND(vt0.c0)))), ((((rt1.c2))<=((rt0.c4))) IN ()), ((((((((((rt0.c0)OR(rt1.c2)))OR('NEaX?M')))AND(rt0.c4)))OR(rt0.c0))) NOT NULL) FROM vt0 WHERE (((NULLIF(DISTINCT '1002899360', NULL)) BETWEEN (NULL COLLATE NOCASE) AND (((0X7fe50e66) ISNULL)))) LIMIT -686313767 OFFSET -566501851;SELECT ALL TOTAL(((((rt0.c1)OR(rt1.c5)))OR(vt0.c1))) OVER () FROM vt0 WHERE ((((('')IS NOT(0Xadf9849))) ISNULL)) GROUP BY (((rt1.c4)*(rt1.c1)) IN ()), ((((((((0.06654589390622245)AND(vt0.c1)))AND(rt1.c4)))OR(rt1.c6)))AND(((((((((((((rt1.c1)AND(rt0.c3)))OR(vt0.c2)))AND(NULL)))AND(rt1.c2)))AND(rt1.c5)))AND(rt1.c1)))), (((NOT (rt1.c1))) BETWEEN (((rt1.c1)<(rt0.c2))) AND (((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c3)))) LIMIT -2082339509;SELECT ALL COUNT('0.11851166913767408') FROM rt0, rt1; -- 0ms;
SELECT DISTINCT MAX(((rt1.c2)<(rt0.c3))) FROM rt0, vt0 WHERE ((('Mdb&8p 3K' IN (0X5c3c5b86)) IN ()));SELECT ALL CASE WHEN CAST(rt1.c0 AS REAL) THEN 0.36345637347815896 ELSE ((rt0.c2)IS NOT('70iCDI\fV')) END, ((((((((((rt1.c2)OR(rt0.c3)))AND(vt0.c2)))AND(rt1.c6)))OR(rt1.c4)))&(((rt1.c3) NOTNULL))), ((((vt0.c2) ISNULL)) NOT NULL) FROM rt0, vt0, rt1 WHERE (((NULLIF(DISTINCT 977463700, 0.8327161344230731))OR(((((0.255354893088126)OR('42⫝\nRyt鋌d')))AND(0xffffffffac14608f))))); -- 0ms;
SELECT DISTINCT MIN((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c2)))) FROM rt0 WHERE ((((((((((((((- (NULL)))OR(0.6067870880877047 COLLATE RTRIM)))AND(((NULL)>=(7.25339443E8)))))OR(CASE ''  WHEN 0.6335815752955748 THEN 1719858374 ELSE 0.029205458427482123 END)))OR(((NULL)+(0.5641607688482029)))))OR(CASE x'611d72ba'  WHEN 454154557 THEN 0.09440109500367522 ELSE '-1846020349' END)))OR(CAST(x'' AS NUMERIC))));SELECT ALL CASE ((rt0.c1) ISNULL)  WHEN TOTAL(rt1.c4) THEN CAST(rt1.c4 AS INTEGER) END, CAST(LIKELY(DISTINCT rt1.c0) AS TEXT), ((((vt0.c1)AND(rt0.c0))) BETWEEN ((((rt0.c3))<((vt0.c3)))) AND (((rt0.c3)!=(rt1.c2)))), (((AVG(0X71ebfc07)))!=((vt0.c2 COLLATE RTRIM))), MIN(CASE WHEN rt1.c1 THEN rt0.c3 WHEN 0.12415700325995549 THEN rt0.c2 WHEN rt1.c0 THEN NULL ELSE NULL END) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt1.c5))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt0.c3)) AND ((rt0.c2)))) AND ((rt1.c2 IN ()))) FROM rt1, vt0 ORDER BY ((((rt1.c3) IS TRUE))%((((rt0.c3)) BETWEEN ((rt1.c5)) AND ((rt1.c4))))) DESC  NULLS FIRST LIMIT 1689554609 OFFSET 1089751185;SELECT DISTINCT (- (COUNT(*))) FROM rt0, rt1, vt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT rt1.c2, (((((((rt1.c6, rt0.c0, vt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c3)) AND ((rt1.c1, rt0.c2, NULL))))OR(rt0.c2 COLLATE NOCASE)))AND((((rt1.c3, rt1.c4, rt0.c2))<((rt1.c3, rt1.c1, '977463700'))))), (((('') BETWEEN (rt1.c0) AND (vt0.c2)))LIKE(vt0.c3 COLLATE NOCASE)) FROM rt1, rt0 WHERE ((UPPER(NULL) IN ((('') BETWEEN (x'') AND (NULL))))) GROUP BY LIKELIHOOD(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)), 0.43085398468165215);SELECT INSTR((- (rt0.c2)), CASE 0X66e52cf7  WHEN rt1.c1 THEN '-1640492630' END) FROM vt0, rt1, rt0 WHERE (((((1.3175739E8) NOT NULL))<=(((((x'499f')OR(NULL)))OR(0.39984686065531005))))) GROUP BY NULL COLLATE NOCASE; -- 1ms;
SELECT ALL AVG(COUNT(((((rt1.c0)AND(rt1.c6)))AND(rt0.c3)))) FROM vt0, rt0 WHERE (CAST((+ (0Xffffffffa24f3077)) AS BLOB));SELECT ALL NULL FROM rt1, rt0 NOT INDEXED; -- 0ms;
SELECT ALL NULLIF(ROUND(vt0.c0, rt1.c1), ((vt0.c3) BETWEEN (vt0.c3) AND (NULL))) FROM rt1, rt0, vt0 WHERE (LOWER(((x'6a01') BETWEEN (-1814792527) AND ('628055872')))); -- 0ms;
SELECT ALL (((rt1.c0 IN ())) NOT BETWEEN (LIKELY(DISTINCT rt0.c4)) AND (((((rt1.c0)OR(vt0.c0)))OR(vt0.c3)))) FROM vt0, rt1 WHERE (((((5.42775332E8)AND(NULL)))OR(0.36197485556304954)) COLLATE NOCASE);SELECT ALL CAST(((x'') IS TRUE) AS REAL) FROM rt0 ORDER BY ((((rt1.c5) NOT BETWEEN (vt0.c1) AND (rt0.c0)))LIKE(CAST(x'b87b' AS BLOB))) ASC;SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c3) AND (vt0.c0))) ISNULL) FROM rt0, rt1 WHERE ((+ (0.35140714018596597 COLLATE NOCASE))) ORDER BY (((((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c2))))<=((rt1.c4 COLLATE RTRIM)));SELECT DISTINCT SUM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4))) OVER ( PARTITION BY ((((rt1.c6) NOT BETWEEN (rt1.c0) AND (vt0.c2))) NOT BETWEEN (CAST(rt1.c5 AS INTEGER)) AND ((((rt0.c3, rt1.c3, NULL, 0.7259919903993522, vt0.c2))<>((rt1.c1, rt1.c3, rt1.c6, rt0.c4, NULL))))), (CAST(vt0.c0 AS NUMERIC) IN ())) FROM rt0 WHERE (((LOWER('bU'))>>(((x'63c1a8c8')>(NULL)))));SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE NOCASE FROM rt0, vt0 ORDER BY (highlight(rt0.c0, vt0.c0, vt0.c3, rt0.c3) IN ()); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt1.c3, rt1.c0, rt1.c0))<>((rt0.c1, '0.8271356231850903', rt1.c5)))) OVER (), CASE ((rt1.c4)>(rt1.c6))  WHEN TOTAL(rt1.c2) THEN rt0.c3 END, (~ (((vt0.c2)=(vt0.c1)))) FROM rt1, rt0, vt0 WHERE ((((((NULL)AND(x'bf69'))))>(((('y')>=(x'')))))); -- 1ms;
SELECT DISTINCT (~ (((((rt1.c3)OR(vt0.c3)))OR(x'62fd')))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (((rt1.c1 COLLATE RTRIM))>(((((vt0.c2))>=((rt1.c2)))))) FROM rt0, vt0, rt1 WHERE (((CAST('152679653' AS TEXT))OR(((NULL)-(0Xffffffff927f8aa8))))); -- 0ms;
SELECT CASE ((rt1.c6)<<(vt0.c0))  WHEN ((rt0.c2)<=(rt0.c0)) THEN ((vt0.c2) BETWEEN (',Wb￿[Lc	') AND (vt0.c2)) WHEN AVG(rt1.c2) THEN SUBSTR(rt1.c3, vt0.c3) WHEN vt0.c3 THEN ((rt1.c3)<<(rt0.c0)) ELSE (rt1.c2 IN ()) END FROM vt0, rt1, rt0 WHERE ((((0.6841229463436117)) NOT BETWEEN ((CAST('-493202564' AS TEXT))) AND (((('-610845069')-(x'')))))); -- 0ms;
SELECT (((((rt0.c4)) NOT BETWEEN ((rt1.c4)) AND ((NULL))))GLOB(SQLITE_VERSION())), ((LIKELIHOOD(rt1.c5, 0.6719641523711377)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt0.c3) AND (rt1.c1))) AND (COUNT(*))), CASE ((0.8617129577085697) NOT NULL)  WHEN '-1835480363' COLLATE BINARY THEN ((rt1.c1) ISNULL) END FROM vt0, rt0, rt1 WHERE (((CAST(x'' AS REAL))*(LIKELY(DISTINCT x'')))); -- 0ms;
SELECT DISTINCT AVG(rt1.c1), ((((rt0.c2) ISNULL)) IS TRUE), ((CASE WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN (((rt1.c0)<=(vt0.c1))) AND ((~ (rt1.c3)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ((((SUM(rt1.c4))AND(CAST('1589738246' AS NUMERIC))))OR(CAST(vt0.c1 AS INTEGER))) FROM rt1 LIMIT 1977721528 OFFSET 1363055993;SELECT (((rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (x'')), (vt0.c0 IN ())))>=((CAST(rt0.c4 AS INTEGER), ((((((((rt1.c3)AND(rt1.c6)))OR(rt1.c1)))OR(rt1.c4)))OR(rt1.c0)), ((((((((rt0.c2)AND(rt1.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(0.25481267346750947))))) FROM rt0 WHERE (x'2423fe16');SELECT DISTINCT LAST_VALUE((((rt1.c0, rt0.c3, rt1.c2, NULL, rt1.c1)) NOT BETWEEN ((((rt1.c1)!=(rt1.c5)), ((rt1.c3)||(rt1.c6)), rt1.c3, ((vt0.c3)>=(rt1.c0)), CAST(rt0.c0 AS INTEGER))) AND ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END, rt1.c3, SQLITE_COMPILEOPTION_USED(vt0.c3), CASE WHEN rt1.c5 THEN vt0.c0 ELSE x'' END, (((rt1.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))) OVER () FROM rt0, rt1, vt0 WHERE ((((+ (''))) NOTNULL)); -- 0ms;
SELECT ALL MIN(((((((((((((rt1.c0)AND(rt0.c3)))OR(rt1.c0)))OR(vt0.c0)))OR(rt1.c0)))OR('-2121439123')))AND(vt0.c2))) FROM rt1 WHERE (CASE WHEN CASE WHEN 'g' THEN 0.23296442296843545 ELSE NULL END THEN (x'f353' IN ()) ELSE NULL END);SELECT ALL (((rt0.c0, rt0.c2, rt1.c3)) NOT BETWEEN ((MIN('542775332'), rt1.c2 COLLATE NOCASE, CAST(rt1.c2 AS TEXT))) AND ((NULL, ((rt0.c2)||(rt1.c0)), '1545506949'))) FROM vt0 WHERE (CAST('q1' COLLATE BINARY AS REAL));SELECT DISTINCT NULL, ((((rt1.c5 COLLATE BINARY)OR((rt1.c4 IN ()))))OR(((rt1.c4)GLOB(rt1.c2)))), (((rt1.c4)) NOT BETWEEN (((('iLJ_A*悏z') ISNULL))) AND ((((((rt1.c1)AND(rt1.c3)))OR(rt1.c6))))) FROM rt1; -- 0ms;
SELECT DISTINCT (((vt0.c2 IN ()))<=(((rt0.c2) BETWEEN (rt0.c4) AND (x'')))) FROM rt1 WHERE (x'22a8') ORDER BY ((CAST('cd' AS NUMERIC)) BETWEEN (((NULL)<<(vt0.c0))) AND (NULL)) ASC, ((((((((((vt0.c0)OR(rt1.c0)))OR(rt0.c4)))AND(NULL)))OR(NULL))) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (((rt1.c5)&(rt0.c2)))), CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c3)) THEN CAST(vt0.c0 AS TEXT) WHEN TRIM(rt0.c0, x'') THEN ((vt0.c2) BETWEEN (rt1.c2) AND (vt0.c3)) WHEN vt0.c3 COLLATE BINARY THEN CASE WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c0 END END;SELECT DISTINCT vt0.c1, ((((((rt1.c4)IS(rt0.c0)))AND((((rt0.c1, rt1.c1, rt0.c4))>((rt1.c2, rt1.c4, 0.039696353239099924))))))AND(rt0.c3)), CAST(x'9f6e' AS BLOB) FROM rt0, vt0;SELECT DISTINCT ((0.21873949424464467)LIKE(CASE vt0.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END)) FROM rt0, rt1, vt0 WHERE (((0.44959239469509504 COLLATE NOCASE)-(((0.11851166913767408)&(0Xffffffffa08bfd27))))); -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c3 AS INTEGER)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT (- (((((vt0.c3)AND(rt0.c4)))AND(rt1.c2)))), ((vt0.c1 COLLATE NOCASE) IS TRUE), (((~ (rt0.c2))) IS TRUE) FROM rt0, rt1, vt0 EXCEPT SELECT ((((((vt0.c0)%(rt0.c2)))OR(CAST(rt1.c3 AS INTEGER))))AND('-617948038')), ((rt1.c4) NOTNULL), RANK() OVER () FROM vt0, rt0 WHERE (x'');SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1 WHERE (CAST(CAST(x'' AS REAL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((x'')OR(x'3b27')))OR((0.6809269759790064 IN ()))))AND((vt0.c2 IN (0.06654589390622245)))), ABS(DISTINCT ((rt0.c4) BETWEEN (vt0.c3) AND (rt0.c4))), ((TYPEOF(rt1.c2)) BETWEEN (((rt1.c3) BETWEEN (rt0.c0) AND (rt1.c0))) AND (rt1.c4)) FROM rt0, vt0;SELECT DISTINCT COUNT(*) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT ((((json_array(rt1.c4, rt1.c2))AND(MIN(rt1.c4))))AND('1207408858')) FROM vt0, rt1, rt0 GROUP BY ((((((rt0.c2)OR(rt1.c0)))AND(rt1.c5)))IS(((((((((((((rt0.c4)AND(NULL)))AND(rt1.c5)))AND(vt0.c0)))AND(vt0.c2)))OR(rt1.c0)))OR(vt0.c2)))) LIMIT -2123621880 OFFSET -468939310; -- 1ms;
SELECT DISTINCT ((((((((rt1.c4)AND(((((((((rt1.c4)OR(vt0.c1)))AND(NULL)))OR(rt1.c2)))AND(rt1.c4)))))AND(rt1.c0)))AND(-1855496748 COLLATE RTRIM)))OR(CASE WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c4 END)) FROM vt0, rt1 WHERE (CASE WHEN (('-66127604')-(0.8480705817528995)) THEN LIKELIHOOD('', 0.791564618530011) END) ORDER BY CASE ((vt0.c1) BETWEEN (rt0.c4) AND (rt1.c1))  WHEN (- (vt0.c3)) THEN CASE vt0.c1  WHEN rt1.c3 THEN rt1.c2 WHEN rt0.c3 THEN '諿2k&2QGh' WHEN rt1.c5 THEN rt0.c4 END ELSE ((((rt1.c2)AND(rt1.c6)))AND(rt0.c2)) END  NULLS LAST;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)AND(CASE WHEN rt0.c2 THEN 'd.RﰥH' ELSE rt0.c0 END)), (((~ (rt1.c2))) NOT BETWEEN (((rt0.c4)==(rt0.c3))) AND (COUNT(*))), (((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)) IN (((((rt0.c2)AND('5V')))AND(x'')), '' COLLATE NOCASE, ((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) FROM rt1, vt0 WHERE (((0.15011049209276617)*((NULL IN ()))));SELECT DISTINCT ((CAST(rt1.c1 AS REAL))>=(((rt1.c3) NOT BETWEEN (rt0.c4) AND (vt0.c2)))), COUNT(CAST(rt0.c0 AS BLOB) COLLATE BINARY), 459650898 FROM vt0;SELECT ALL ((LIKELIHOOD(rt1.c3, 0.42092837869898536))>>(rt1.c0 COLLATE NOCASE)) FROM rt0 WHERE ((~ (((NULL)||(1.98474879E9)))));SELECT ALL CASE WHEN ((((rt0.c3)AND(rt1.c1)))AND(rt1.c6)) THEN (NOT (rt0.c1)) ELSE vt0.c1 COLLATE BINARY END, CASE WHEN CASE vt0.c0  WHEN rt1.c0 THEN vt0.c3 ELSE rt1.c5 END THEN rt1.c5 WHEN CAST(vt0.c3 AS BLOB) THEN ((rt1.c3)%(rt0.c1)) WHEN CAST(rt1.c3 AS INTEGER) THEN ((((((((vt0.c2)OR(rt1.c4)))AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)) WHEN ((rt0.c4) BETWEEN (rt1.c5) AND (rt1.c5)) THEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c4)) WHEN json_extract(rt0.c2, rt1.c1, rt1.c1, rt1.c6) THEN (('')!=(x'6b3e3386')) ELSE ((((x'')AND(rt1.c0)))OR(rt1.c1)) END, CASE ((vt0.c0)!=(vt0.c2))  WHEN '' THEN TOTAL(x'') WHEN ((rt1.c3)*(rt0.c1)) THEN (NOT (rt1.c3)) WHEN CAST(rt1.c0 AS INTEGER) THEN NULLIF(rt1.c3, rt0.c2) END FROM rt0, rt1;SELECT DISTINCT x'', AVG((rt1.c4 IN ())) FILTER(WHERE CAST(rt1.c1 AS BLOB)) OVER ( PARTITION BY ((((rt1.c6)IS(rt1.c3))) ISNULL), SQLITE_SOURCE_ID(), ((CASE rt1.c6  WHEN rt1.c1 THEN rt0.c3 END)IS(0.3607139137292681)), 'H g' ORDER BY CASE (rt0.c3 IN ())  WHEN (((NULL))>=((vt0.c0))) THEN rt1.c1 COLLATE RTRIM END  NULLS LAST), ((((NULL) NOT BETWEEN (x'') AND (vt0.c0)))>>(rt1.c4)) FROM rt0;SELECT DISTINCT COUNT(*) FROM vt0, rt0, rt1 WHERE (LOWER((('')LIKE(NULL)))); -- 0ms;
SELECT DISTINCT (+ (((((x'3838')AND(rt0.c4)))AND(rt1.c2)))) FROM vt0, rt0 LIMIT 1727812497 OFFSET 1802369433;SELECT DISTINCT ((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)) COLLATE RTRIM FROM rt1 WHERE ((((((('\r࿵p')LIKE(x'')))OR(((((((((x'7163')AND('')))OR('')))OR(x'0f07')))AND(0.4193682000337017)))))AND((~ ('833438159')))));SELECT DISTINCT NTILE((NOT ((vt0.c2 IN (rt1.c6, rt1.c4))))) OVER () FROM rt0, vt0, rt1 GROUP BY (CAST(rt1.c3 AS TEXT) IN (((vt0.c2)>(rt1.c5)))) HAVING ((vt0.c1 COLLATE BINARY)OR((('-1487264320')>(rt0.c2)))) ORDER BY CAST(rt1.c5 AS INTEGER) COLLATE RTRIM;SELECT ALL (DATETIME(rt1.c6, rt1.c6, rt0.c2) IN (rt0.c3)) FROM vt0, rt1, rt0 WHERE (ROUND((((NULL, 'RN', NULL, x'', 0.7446876897572315))<=((x'829b6b98', '-848466881', 0x3a42e994, x'', x''))), (NOT ('920386815')))); -- 0ms;
SELECT DISTINCT NTILE((((((((vt0.c3, rt0.c0, 0.5577318356229184))<((rt1.c2, vt0.c2, rt1.c0))))OR(((vt0.c1)>>(rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER)))) OVER (), '-385869874', SUM(((rt0.c3) NOTNULL)) OVER (), ((rt0.c1 COLLATE NOCASE) BETWEEN (CAST(rt1.c3 AS BLOB)) AND (LOWER(rt0.c4))), rt1.c0 FROM vt0, rt1, rt0 WHERE ((('' COLLATE RTRIM) NOTNULL));SELECT DISTINCT (~ (((rt0.c1)|(vt0.c3)))) FROM rt1 GROUP BY (((+ (vt0.c1)))IS NOT('-1392712716' COLLATE NOCASE)), (((+ (rt0.c4)))>=(((vt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.c1)))), ((+ (rt0.c4)) IN ()), ((NULL) ISNULL), (((rt0.c4 IN ()))>(CAST(rt0.c0 AS BLOB))), (((((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))AND(rt1.c4)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))), rt1.c0;SELECT DISTINCT CAST(((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS NUMERIC) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT (((('<Z')AND(CAST(rt0.c3 AS REAL))))AND(COUNT(*))), IFNULL(DISTINCT rt1.c4 COLLATE RTRIM, ((rt1.c3) IS FALSE)), ((CAST(rt1.c5 AS NUMERIC))>>(CASE rt1.c6  WHEN rt0.c4 THEN vt0.c3 ELSE rt1.c6 END)) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM vt0, rt0;SELECT ALL MAX((vt0.c1 IN ())), TRIM(DISTINCT ((rt0.c2)<>(vt0.c3)), SQLITE_VERSION()), MAX(1.52679653E8) FROM rt0, vt0, rt1 GROUP BY rt0.c0 ORDER BY rt0.c2 DESC  NULLS LAST, ((x'd15d')*(rt1.c0)) COLLATE NOCASE DESC  NULLS LAST, LTRIM(CAST(rt1.c4 AS BLOB)) ASC  NULLS FIRST; -- 0ms;
SELECT ((((CAST(rt1.c6 AS INTEGER))OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(CAST(rt1.c3 AS NUMERIC))) FROM vt0 WHERE ((((('2067012236')IS NOT(0.2680921666053241))) NOT BETWEEN (((NULL)OR(x''))) AND (((((x'411c6a08')AND('Ef~cvD8묠')))AND('')))));SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS BLOB)) OVER () FROM rt1 GROUP BY NULL COLLATE NOCASE;SELECT (((((((((vt0.c2 IN (vt0.c0, rt1.c4)))AND(((((rt0.c4)AND(rt1.c5)))OR(vt0.c2)))))AND('')))OR(CAST(rt0.c3 AS INTEGER))))OR(CAST(0.8602365780918257 AS TEXT))) FROM rt1, rt0 WHERE (((UNLIKELY(DISTINCT '皦T')) IS TRUE));SELECT NTH_VALUE((+ (rt1.c6 COLLATE RTRIM)), UPPER(DISTINCT (NOT (x'')))) OVER () FROM rt0, rt1 WHERE ((~ (('-1818792504' IN (NULL))))); -- 0ms;
SELECT (NOT (((((((((vt0.c2)OR(rt0.c0)))OR(rt1.c6)))OR(rt0.c0)))AND(NULL)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (~ (((rt0.c0)&(rt1.c1)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c6, rt0.c3, rt1.c4)) BETWEEN ((((rt1.c5)%(rt1.c6)), (+ (rt1.c3)), CASE WHEN rt0.c4 THEN rt0.c2 END)) AND ((((vt0.c1)|(rt0.c4)), CAST(rt0.c4 AS BLOB), rt0.c3))) FROM rt1, vt0 GROUP BY ((rt0.c2) NOT BETWEEN (((rt1.c5)IS(rt0.c1))) AND (NULL));SELECT DISTINCT CASE ((rt1.c2)&(-1641902271))  WHEN (- (rt0.c0)) THEN CASE WHEN rt1.c2 THEN NULL WHEN x'' THEN vt0.c0 WHEN rt1.c0 THEN vt0.c2 ELSE rt0.c4 END WHEN CASE rt1.c4  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt1.c6)>=(vt0.c0)) WHEN ((rt0.c1)%(rt1.c5)) THEN ((NULL) NOT NULL) END, ((((rt0.c3)>>(rt0.c3))) NOT BETWEEN ((- (rt1.c0))) AND (((((vt0.c1)OR(rt0.c0)))AND(rt1.c5)))), 0.0030927728292199363 COLLATE BINARY FROM rt1, vt0, rt0 GROUP BY ((((rt1.c1)LIKE(rt1.c5))) BETWEEN (CASE WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c0 END) AND (((rt1.c1) BETWEEN (vt0.c1) AND (rt1.c1)))); -- 0ms;
SELECT ALL rt1.c5 FROM vt0, rt1, rt0 WHERE (LOWER(((x'')/('-963394812')))); -- 1ms;
SELECT COALESCE((rt1.c2 IN ()), ((rt1.c6) NOT NULL)), CASE rt1.c6  WHEN rt0.c4 THEN rt0.c0 END COLLATE NOCASE, (((NULL, '(%J&', rt1.c2)) NOT BETWEEN ((((rt1.c4) IS FALSE), vt0.c3 COLLATE BINARY, ((((vt0.c1)AND(vt0.c3)))OR(rt1.c6)))) AND ((CAST(rt1.c1 AS REAL), (rt1.c2 IN ()), CASE rt1.c5  WHEN vt0.c2 THEN rt0.c2 ELSE rt1.c4 END))) FROM rt0, vt0 WHERE ((((('dgB~') IS FALSE))!=(NULL)));SELECT ALL ABS(CASE rt1.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN vt0.c1 WHEN rt1.c1 THEN -2.04906329E9 ELSE rt0.c3 END), (((rt1.c0)) BETWEEN ((((rt1.c4)>(rt0.c3)))) AND ((((((rt1.c4)AND(rt1.c1)))OR(rt1.c0))))), CASE ((rt1.c6) NOT BETWEEN (rt1.c2) AND (vt0.c0))  WHEN ((rt0.c2)&(rt0.c3)) THEN UPPER(vt0.c3) ELSE NULLIF(vt0.c3, vt0.c3) END FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT CASE rt0.c1 COLLATE BINARY  WHEN 0.6210248408953651 THEN ((rt1.c0)*(vt0.c2)) END FROM vt0, rt0, rt1 GROUP BY json((vt0.c1 IN (rt1.c3))) HAVING (((rt1.c4)<(vt0.c2)) IN ()); -- 0ms;
SELECT DISTINCT ((SUM(rt1.c3))OR(rt1.c0)), (NOT ((+ (vt0.c1)))), AVG(x'') OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM rt0 WHERE (((((('8\'))>((NULL)))) IS TRUE));SELECT DISTINCT CASE CAST(vt0.c1 AS TEXT)  WHEN (((vt0.c2))!=((rt1.c3))) THEN GROUP_CONCAT(rt0.c2) WHEN '-1035127786' THEN (((vt0.c1))<>((vt0.c2))) WHEN HEX(DISTINCT vt0.c2) THEN ((rt0.c2) IS TRUE) ELSE ((vt0.c3)GLOB(0x256f5f40)) END FROM rt0, vt0, rt1; -- 0ms;
SELECT (((((rt1.c6)) BETWEEN ((rt0.c2)) AND ((rt1.c1))))=(GROUP_CONCAT(rt0.c4))) FROM vt0 WHERE (((x'')*(((((NULL)OR('-1641902271')))OR('')))));SELECT ALL (((((rt1.c4) NOT NULL)))=((((rt0.c0)<(rt1.c4))))), (((rt1.c0 IN ())) BETWEEN (((rt0.c3) NOT NULL)) AND (('(V6' IN ()))), ((CASE WHEN x'' THEN vt0.c3 ELSE rt1.c2 END)||((((rt1.c6)) BETWEEN (('')) AND ((vt0.c3))))) FROM rt0, vt0, rt1 GROUP BY ((CASE WHEN vt0.c3 THEN rt1.c5 END) NOT BETWEEN ('zpM짻S/') AND ((rt1.c0 IN ()))) HAVING ((((rt0.c0) ISNULL)) BETWEEN (((((NULL)AND(vt0.c1)))OR(rt1.c2))) AND ((~ (vt0.c1)))); -- 0ms;
SELECT DISTINCT (((((rt1.c5))<((rt0.c2)))) NOT BETWEEN (((((rt0.c0)OR(rt1.c0)))AND(rt1.c2))) AND ((NOT (rt1.c3)))) FROM rt0 LEFT OUTER JOIN rt1 ON (((((+ (vt0.c2)))OR(((rt0.c1)+(rt0.c3)))))OR(rt0.c2 COLLATE BINARY));SELECT DISTINCT (NOT (((rt1.c5)<(vt0.c1)))) FROM rt1 WHERE (((((((((((((CAST(x'3462' AS INTEGER))OR(0.23706575317326584 COLLATE RTRIM)))AND(((x'')LIKE('181498342')))))OR(CASE WHEN NULL THEN NULL WHEN x'ba2a8d7e' THEN 0.3909794966967176 WHEN -2078005270 THEN NULL WHEN x'9e1c' THEN NULL WHEN '0AR<NL' THEN '' END)))AND(x'')))AND(((0.1636388284341057)||(x'')))))OR(((x'')+(x'')))));SELECT DISTINCT COUNT(((rt1.c2)<(rt1.c2))) OVER () FROM rt0, rt1 WHERE ((((((((((0.1279410909537666)AND(0X61a37394)))AND('-1796850155')))AND(x'')))AND(0.3524711662883684)) IN ((NOT (-1.392712716E9))))); -- 0ms;
SELECT COUNT(((rt0.c4) IS FALSE)), vt0.c1 COLLATE NOCASE, (HEX(rt1.c0) IN ('-1641902271', 0.9212427480695525)), ((((((((((rt0.c4)!=(rt1.c2)))OR(CAST(rt0.c3 AS NUMERIC))))OR(((vt0.c0) BETWEEN (rt0.c3) AND (rt1.c6)))))OR(x'1b7c')))AND(((rt1.c3)AND(rt1.c0)))), ((((vt0.c3) BETWEEN (rt1.c6) AND (rt0.c1)))-(((rt0.c0)IS(vt0.c1)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT rt1.c6 FROM vt0, rt1; -- 0ms;
SELECT ALL CASE WHEN COUNT(*) THEN ((rt1.c1)+(rt1.c0)) ELSE (~ (rt0.c4)) END FROM vt0 GROUP BY CASE WHEN rt1.c2 COLLATE NOCASE THEN (rt0.c4 IN ()) ELSE ((rt0.c4)GLOB(rt1.c5)) END;SELECT ALL UNLIKELY(rt1.c0) COLLATE BINARY, ((- (860594485)) IN ()), COUNT((+ (rt1.c0))) FROM rt1, vt0 WHERE ((((('-1414767849') NOT BETWEEN ('1689554609') AND ('#⻄ἑ^L()'))) NOT NULL)); -- 1ms;
SELECT ALL ROUND(CAST(rt1.c6 AS INTEGER), ((vt0.c0) NOT NULL)), SUM((~ (rt0.c1))), ROW_NUMBER() OVER ( ORDER BY (((~ (rt1.c2)))>(json_remove(rt0.c2, rt1.c0))), COALESCE(DISTINCT NULL, TRIM(vt0.c0), (- (rt0.c3)), ((rt1.c5)>>(rt0.c3)))  NULLS FIRST), CASE WHEN (NOT (NULL)) THEN ((rt1.c1) NOTNULL) WHEN (rt1.c3 IN ()) THEN ((rt1.c6) BETWEEN (rt0.c2) AND (rt1.c5)) WHEN rt1.c5 THEN (- (vt0.c2)) END, vt0.c2, 0Xffffffff96508e12, (((rt0.c1)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((NULL)) AND ((vt0.c1))))) AND ((((rt1.c0)>=(rt1.c6))))) FROM rt1 WHERE ('A?F4') ORDER BY (IFNULL(DISTINCT rt0.c0, rt0.c2) IN ()) ASC;SELECT DISTINCT ((CASE WHEN vt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN '371525686' WHEN rt1.c6 THEN rt0.c4 WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c0 END) IS TRUE) FROM vt0;SELECT DISTINCT ((((((rt1.c0)AND(rt0.c3)))AND(rt1.c1)))*(NULLIF(rt1.c5, rt1.c4))) FROM rt1, vt0 WHERE (((CAST(0.27478358803779446 AS BLOB))%((NULL IN ('0.186954324111832'))))) LIMIT -410156397;SELECT ALL LIKELY(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) FROM vt0 WHERE (QUOTE(NULL COLLATE RTRIM));SELECT (((((rt1.c5)<=(vt0.c0)), (+ (rt1.c4)), ((NULL)==(vt0.c1))))<>((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), TOTAL(rt1.c6), CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c6 WHEN rt0.c2 THEN vt0.c3 ELSE rt1.c5 END))) FROM rt1, rt0, vt0 GROUP BY 1.14777953E9, (((vt0.c3)) BETWEEN ((rt0.c1)) AND ((((rt0.c2)>=(rt0.c2))))), ((((((((((((CAST(rt1.c5 AS TEXT))AND((rt1.c3 IN ()))))AND(((((rt1.c6)AND(vt0.c0)))OR(rt1.c1)))))AND(((vt0.c2)>>(rt1.c2)))))AND(0X1435fde9)))OR(CAST(rt0.c4 AS TEXT))))OR(CASE rt1.c1  WHEN rt1.c5 THEN rt1.c6 END)) HAVING vt0.c1 COLLATE NOCASE COLLATE RTRIM; -- 0ms;
SELECT ALL rt0.c4 FROM vt0 WHERE ((~ (((NULL)>=('Yyyꯙ叠G6'))))) ORDER BY ((rt1.c1) ISNULL);SELECT DISTINCT ((rt0.c4)||(vt0.c2)) COLLATE RTRIM, (((vt0.c1)) BETWEEN (((((rt1.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c4))))) AND (((~ (vt0.c1))))), vt0.c2 FROM rt1 WHERE (CAST((((''))<((x''))) AS NUMERIC));SELECT ALL (((rt1.c0 IN ()))%(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c3)))), CASE WHEN (vt0.c0 IN ()) THEN rt1.c5 COLLATE NOCASE ELSE SQLITE_COMPILEOPTION_USED(rt1.c5) END, CASE WHEN ((rt0.c0) ISNULL) THEN rt0.c4 COLLATE RTRIM WHEN x'' THEN ((((vt0.c3)AND(vt0.c2)))OR(0Xffffffffdd43fd6d)) WHEN ((vt0.c1)>>(rt1.c5)) THEN (((rt1.c1))>=((rt1.c5))) END FROM rt1, rt0 WHERE ('336828498');SELECT ALL ((UNLIKELY(DISTINCT vt0.c3)) ISNULL), COUNT(TYPEOF(DISTINCT rt0.c0)), CAST(((rt0.c4)<(rt1.c5)) AS NUMERIC) FROM rt0 WHERE (((('-1487264320') NOT NULL) IN ()));SELECT DISTINCT ((CASE vt0.c0  WHEN rt1.c3 THEN rt1.c5 END)LIKE(((((((((rt1.c0)AND(NULL)))AND(rt1.c5)))AND(rt1.c3)))OR(rt1.c5)))) FROM rt1, vt0, rt0 WHERE (CASE WHEN CASE WHEN NULL THEN x'0483' ELSE 'xcn~c' END THEN CAST('-1407508558' AS NUMERIC) END); -- 0ms;
SELECT ALL ((((((rt1.c4)OR(vt0.c0)))AND(rt0.c0))) BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c2)), 0X45caee5c, x'' FROM rt0, rt1, vt0 LIMIT 1628077898; -- 0ms;
SELECT DISTINCT ((rt1.c0 IN ()) IN ((((rt1.c3))>((rt1.c3))))) FROM rt1, rt0 WHERE (((((CASE WHEN NULL THEN NULL WHEN '\' THEN -1566900205 WHEN x'' THEN 1766066175 ELSE x'' END)OR(((x'07c09b6e') NOTNULL))))OR(CASE WHEN 0.2842378993426663 THEN x'' ELSE 0.39183269079068694 END))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((+ (x'')) IN ())) GROUP BY (+ (CASE WHEN rt1.c5 THEN rt0.c0 ELSE rt0.c3 END)), CAST(TIME(rt1.c6, rt1.c2, rt1.c1, rt1.c3, rt1.c2) AS NUMERIC), CASE WHEN 0Xffffffffed99a3a9 THEN CAST(rt0.c3 AS NUMERIC) END HAVING ((LIKELY(DISTINCT 'N*Rcv/w\n'))=(rt1.c6));SELECT SUM((NOT (rt0.c1))) OVER () FROM rt0 WHERE (((('') NOT BETWEEN ('191916711') AND (x'cf15')) IN ())) ORDER BY ((((((((((0xffffffffb70381a7)OR(vt0.c3)))AND(vt0.c3)))OR(rt0.c4)))AND(vt0.c3))) NOTNULL);SELECT DISTINCT ABS(DISTINCT NULL COLLATE RTRIM) FROM vt0, rt1, rt0 WHERE ((((((('1580031734')) BETWEEN (('')) AND ((NULL)))))>((CASE WHEN x'' THEN NULL END)))); -- 0ms;
SELECT ALL TOTAL(((rt1.c4)IS(vt0.c0))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM vt0 WHERE ((~ ((((((((('S0,%.')OR(0x4bdda196)))AND(0X2d6341ec)))OR(0.4991345706678867)))AND(0.21327341706816516))))) GROUP BY ((((CAST(vt0.c2 AS BLOB))OR(CASE rt1.c0  WHEN vt0.c1 THEN rt1.c1 ELSE vt0.c2 END)))AND((((rt1.c5)) BETWEEN (('yfj.d-w\')) AND ((rt1.c0))))) HAVING vt0.c3;SELECT DISTINCT ((((rt0.c1) ISNULL)) NOT BETWEEN ((((rt1.c4)) BETWEEN ((rt0.c4)) AND ((rt1.c0)))) AND (0.8075102498012836)) FROM vt0, rt0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(rt0.c3)  WHEN x'' THEN (rt1.c2 IN ()) ELSE CAST(rt1.c2 AS INTEGER) END, ABS(DISTINCT rt0.c2 COLLATE RTRIM), (NOT ((NOT (rt1.c3)))), (0.34555311005486855 IN (((rt1.c2)>=(rt1.c4)))), (CASE WHEN vt0.c2 THEN '{Q(7TM}' WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt0.c4 ELSE rt1.c3 END IN ()) FROM vt0;SELECT DISTINCT ((COUNT(*)) BETWEEN (rt0.c1) AND (MIN(rt1.c6))), (+ (((rt1.c2)|('')))), DENSE_RANK() OVER (), ((vt0.c1)IS NOT((((rt1.c0, rt1.c4, rt0.c4)) BETWEEN ((rt0.c1, vt0.c3, '725339443')) AND ((vt0.c3, rt1.c0, vt0.c1))))), NULLIF(((rt1.c6) IS FALSE), ((vt0.c3)OR(vt0.c1))) FROM vt0 WHERE ((0.6966239543744196 IN ()) COLLATE BINARY);SELECT MIN(((rt1.c3)||(rt0.c1))) FROM vt0 WHERE (CASE (~ (NULL))  WHEN CASE WHEN NULL THEN 0.10171555375124164 WHEN NULL THEN 1719858374 WHEN -495305079 THEN '' END THEN ((('-1926026075')) BETWEEN ((NULL)) AND ((852656032))) END) GROUP BY 0X79e1b5e;SELECT (((rt0.c2) NOT BETWEEN (rt1.c6) AND (rt1.c1)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL (CASE WHEN '283022028' THEN vt0.c3 WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c3 END IN ()) FROM vt0, rt1 LIMIT 1411857687; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((rt1.c4) IS FALSE))%(1.616377804E9)) DESC) FROM rt1, vt0, rt0 WHERE ((((0xffffffff9298cad5 IN ())) NOT BETWEEN (((((NULL)OR(x'3616')))OR(0.5397548619623272))) AND (((((NULL)OR(NULL)))OR(818536195))))) GROUP BY CASE ((rt1.c3)&('-221916801'))  WHEN CAST(rt0.c2 AS BLOB) THEN ((rt1.c4) ISNULL) END, rt0.c0, NULLIF(DISTINCT rt0.c3, ((rt0.c1)%(rt1.c5))) ORDER BY (((vt0.c3 IN ('()'))) BETWEEN (vt0.c0 COLLATE BINARY) AND (rt1.c3 COLLATE BINARY)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c3)<>(vt0.c3)))IS NOT(CAST(rt1.c6 AS TEXT))) FROM rt1, rt0, vt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0 ORDER BY ((rt1.c1)=(CASE WHEN vt0.c2 THEN rt1.c5 ELSE vt0.c1 END));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, rt1, rt0 WHERE (((('-857663092' IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT rt1.c4 FROM vt0;SELECT DISTINCT ((((((vt0.c2)+(rt1.c3)))AND(rt0.c1 COLLATE BINARY)))OR(((rt1.c6)<=(rt0.c3)))), ((((((((((rt1.c2)AND(rt0.c0)))OR(vt0.c0)))OR(rt1.c2)))OR(rt0.c1))) NOT BETWEEN (((rt1.c0) BETWEEN (0.6178425687973995) AND (vt0.c2))) AND (((((vt0.c3)OR(rt1.c2)))OR(rt0.c3)))), UNLIKELY(rt0.c4) COLLATE RTRIM FROM vt0 NOT INDEXED WHERE (((NULL) NOT BETWEEN ((('-289271788')GLOB(x'2e7b'))) AND (NULL COLLATE BINARY))) ORDER BY ((((rt1.c2) BETWEEN (vt0.c3) AND (rt1.c4))) BETWEEN (((rt0.c1)-(vt0.c0))) AND (((((vt0.c1)OR(rt1.c4)))OR(rt1.c6)))) ASC  NULLS FIRST;SELECT DISTINCT NULL, ((CAST(rt1.c0 AS NUMERIC))|(((rt0.c0)||(rt1.c5)))), CAST(CASE WHEN rt0.c2 THEN rt1.c2 END AS TEXT), CASE WHEN ((vt0.c3)LIKE(rt1.c0)) THEN rt1.c4 END, CUME_DIST() OVER () FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL ((((rt1.c0) ISNULL))<(CASE WHEN vt0.c1 THEN rt1.c5 ELSE vt0.c1 END)) FROM rt0, vt0 WHERE (((('TRUE' COLLATE RTRIM, COALESCE(x'', NULL), (- (0.04354214348609298))))!=(((('-2078242702')+(0.5944017192922179)), ((NULL)%(0.9173464550125056)), x'' COLLATE RTRIM))));SELECT DISTINCT ABS(vt0.c3) COLLATE NOCASE FROM rt1, vt0, rt0 WHERE (CAST(CAST('+q^*N[C0y' AS INTEGER) AS BLOB)) GROUP BY rt1.c0; -- 0ms;
SELECT DISTINCT ((rt1.c5)<(((((((((rt1.c1)AND(rt1.c4)))OR('-623669863')))OR(NULL)))OR(rt1.c1)))), (((((rt1.c6)) BETWEEN ((rt1.c2)) AND ((rt1.c6)))) NOTNULL), TOTAL((((rt0.c3))<((rt1.c3)))) COLLATE BINARY, LTRIM('㌞%wO亂8') COLLATE NOCASE COLLATE NOCASE, (ABS(DISTINCT rt1.c5) IN (((rt1.c2)+(rt0.c3)), (NOT (vt0.c3)))) FROM rt0, vt0 WHERE (CAST(CASE '-1226057394'  WHEN x'' THEN 0.8105019778071083 WHEN NULL THEN '' WHEN 'v(' THEN -1.818792504E9 ELSE -5.03329113E8 END AS INTEGER)) GROUP BY ((((((rt0.c3) IS FALSE))AND((0xffffffffdee87940 IN ()))))OR('-1796850155' COLLATE NOCASE));SELECT DISTINCT (((+ (rt0.c4)))>>(json_array_length(vt0.c2, x'558a'))) FROM rt1, vt0, rt0 WHERE ('ac]L'); -- 0ms;
SELECT ALL ((((rt0.c4, rt1.c6, x'8aa3'))<=((vt0.c3, rt0.c4, NULL))) IN ()) FROM rt1 GROUP BY ((((((rt0.c3)AND(rt1.c0)))OR(rt0.c4)))=(((1432183693)&(rt1.c3)))) HAVING CASE WHEN ((rt1.c4)>(vt0.c1)) THEN '' ELSE CASE vt0.c0  WHEN rt0.c3 THEN '-1835480363' ELSE rt0.c4 END END;SELECT DISTINCT TRIM(CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt0.c1 END, (vt0.c2 IN ())), (rt0.c0 IN ()) COLLATE NOCASE, ((rt0.c4 COLLATE RTRIM) NOT NULL), json_extract(((vt0.c2)||(5.47805655E8)), NULL), NULL FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) IS FALSE) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(rt1.c0)))OR(rt0.c2)))OR(rt0.c3)))AND(rt1.c6)))==(((vt0.c1)GLOB(rt1.c0)))) FROM vt0;SELECT DISTINCT ((((((rt1.c3)AND(rt0.c3)))OR(rt0.c0)))<>(rt1.c2)) FROM rt0, vt0 LIMIT 462935255 OFFSET -1965583136;SELECT ALL (~ (((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND(rt0.c1)))AND(vt0.c3)))) FROM rt0, rt1;SELECT DISTINCT CAST(rt1.c3 AS INTEGER), CAST(MIN(vt0.c2) AS NUMERIC), (((((((((('0.7580933643811879')AND(vt0.c1)))AND(rt1.c4)))OR(rt1.c0)))OR(vt0.c3))) ISNULL) FROM vt0, rt0, rt1 GROUP BY ((rt1.c1 COLLATE RTRIM)AND(((rt1.c2)>=(rt1.c1)))); -- 0ms;
SELECT DISTINCT ROUND((+ (rt0.c4)), load_extension(rt1.c0, rt0.c0)) FROM rt1, rt0;SELECT rt1.c1, ((((rt0.c2)<(vt0.c1)))<<(((x'c913')&(rt1.c3)))), 0x70d0d76c COLLATE RTRIM, COUNT(((x'c58d')<<(vt0.c0))), (((((((((~ (rt0.c2)))OR(CASE WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt1.c4 WHEN rt0.c4 THEN rt1.c1 ELSE rt0.c0 END)))AND(CASE rt1.c5  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c2 WHEN vt0.c3 THEN vt0.c2 ELSE vt0.c3 END)))AND(((((((((vt0.c0)AND(vt0.c1)))OR(rt1.c0)))AND(rt1.c6)))AND(rt0.c2)))))AND(((((rt0.c3)AND(rt1.c0)))OR(rt0.c3)))) FROM vt0;SELECT DISTINCT (NOT ((((rt1.c2))<((rt1.c2))))), COUNT(*) OVER (), ((load_extension(rt1.c1)) BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt0.c3))) AND (CAST(rt1.c2 AS BLOB))) FROM rt1, rt0;SELECT CAST(CAST(rt0.c1 AS REAL) AS TEXT) FROM rt0, rt1, vt0 WHERE (LENGTH((~ ('-1837135192')))); -- 0ms;
SELECT ((((((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))AND(rt1.c4)))AND(rt1.c4))) BETWEEN (((vt0.c0) IS TRUE)) AND (((((((((rt1.c2)AND(vt0.c0)))OR(rt0.c3)))OR(rt1.c1)))AND(rt1.c1)))), ((((((((CAST(vt0.c0 AS TEXT))AND(((((((((rt1.c6)AND(rt1.c1)))OR(rt0.c2)))OR(vt0.c2)))OR(vt0.c3)))))OR(CAST(vt0.c0 AS BLOB))))OR(vt0.c2)))AND(rt1.c6 COLLATE BINARY)), (((rt1.c2)IS(rt1.c2)) IN ()) FROM rt0, vt0 WHERE (CAST(('&nZE~' IN ()) AS REAL));SELECT DISTINCT COUNT(*) OVER () FROM rt1, vt0 WHERE ((((((-9.45920062E8) IS TRUE), CASE WHEN 0.8400269274080067 THEN x'' END, 0X42b83d50))>((CASE WHEN 980274885 THEN 2.83022028E8 END, ((x'e9d5')IS(NULL)), ((((((((0.03289834352472898)OR('')))AND(NULL)))OR(-188728745)))AND('()')))))); -- 0ms;
SELECT ALL ((CAST(rt1.c2 AS NUMERIC)) ISNULL) FROM rt0, vt0, rt1 WHERE (((((x'b04735bf') NOTNULL))<>(((('1694342244'))==((x'')))))); -- 0ms;
SELECT DISTINCT (+ (((rt1.c6)LIKE(rt0.c0)))) FROM rt1 WHERE (CASE 0.3806035125265431  WHEN ((0.2347162649124691) ISNULL) THEN ((0.894930860216817) NOT BETWEEN ('r]H{k') AND ('-288140291')) END);SELECT ALL CAST((NOT (rt1.c0)) AS TEXT) FROM rt0;SELECT ALL ((AVG(vt0.c0))-(vt0.c1)) FROM rt1 WHERE (((NULL COLLATE NOCASE) BETWEEN (((((0.6726346361504706)OR(0.7422806381980358)))OR(x''))) AND (((x'')<=(NULL)))));SELECT DISTINCT ((GROUP_CONCAT(rt1.c2))<<(((vt0.c0)OR(rt0.c0)))) FROM rt1 NOT INDEXED, vt0, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS FALSE))+(((((vt0.c1)OR(vt0.c3)))AND(rt1.c0)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL RANK() OVER () FROM rt0, vt0 WHERE ((((((NULL IN ()))OR(((((x'719bc65d')AND(NULL)))AND(NULL)))))OR(((0.8200955723494552)|('挱'))))) GROUP BY CASE WHEN (NOT (rt0.c1)) THEN (rt1.c4 IN ()) WHEN (+ (rt0.c1)) THEN (((rt0.c0, vt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt1.c3, 0xffffffff93976dc8)) AND ((rt0.c1, rt1.c6, vt0.c2))) WHEN ((rt1.c6) NOT BETWEEN (rt0.c3) AND (rt1.c6)) THEN GLOB(rt1.c1, x'') END, ((CASE rt0.c4  WHEN vt0.c3 THEN rt1.c1 ELSE vt0.c0 END)+(((rt0.c3) NOTNULL))), CAST(HEX(rt1.c0) AS REAL) HAVING COUNT(*) COLLATE BINARY;SELECT CASE WHEN (('1407408231') NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN (rt0.c0 IN (rt1.c4)) END, IFNULL(DISTINCT (((rt1.c3))=((rt1.c6))), CAST(vt0.c0 AS INTEGER)), CASE WHEN ((vt0.c0) BETWEEN ('-289158661') AND (rt0.c0)) THEN (rt0.c2 IN (rt1.c1)) ELSE (~ ('&?')) END FROM rt1, vt0 WHERE ((((x''))==((TRIM(DISTINCT '凭z')))));SELECT NULL, x'', vt0.c1 FROM rt1 WHERE ((((((('')IS(x'b4de60e3')))OR(json_array_length(x'', '-760299044'))))AND(NULL COLLATE NOCASE)));SELECT ((((rt1.c1) NOT NULL)) BETWEEN (CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c6 THEN vt0.c1 END) AND (rt0.c4 COLLATE BINARY)) FROM rt1, rt0 WHERE (MAX(NULL, '-637317164') COLLATE BINARY);SELECT CASE ((vt0.c0) BETWEEN (rt0.c4) AND (NULL))  WHEN ((vt0.c2)*(x'f101')) THEN ((rt0.c0) NOTNULL) END FROM vt0, rt1;SELECT DISTINCT (NOT (x'')), ((((rt0.c2) BETWEEN (rt1.c5) AND (rt1.c3)))&(((rt0.c2)>=(rt0.c0)))), AVG(IFNULL('', rt0.c2)) OVER ( RANGE '' PRECEDING EXCLUDE NO OTHERS) FROM vt0;SELECT DISTINCT (((((((((rt1.c5 IN (rt0.c3)))OR(rt0.c4 COLLATE RTRIM)))OR((rt1.c5 IN (rt0.c4)))))AND(((x'334d') NOT BETWEEN (NULL) AND (rt1.c3)))))AND(vt0.c2 COLLATE NOCASE)), rt0.c4, ((vt0.c1)|(rt1.c2)) COLLATE NOCASE, ((((rt0.c0)<=(rt1.c5)))==(x'')), IFNULL(DISTINCT x'', ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0))) FROM rt1, vt0, rt0 WHERE ((((('-1548284521')/(0X38fa956b)))&(CAST('566174116' AS INTEGER)))); -- 1ms;
SELECT DISTINCT (- (((rt1.c6) NOTNULL))) FROM vt0;SELECT rt1.c4, (CASE vt0.c1  WHEN rt0.c2 THEN x'' END IN ()), (((CASE WHEN rt0.c4 THEN 0.32718776073297284 END))<>((vt0.c2))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL (((rt0.c1)) BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((AVG(vt0.c2)))), (~ ('0.8347984800238802')), NULL FROM rt1;SELECT ALL CASE COUNT(*)  WHEN (NOT (rt0.c4)) THEN (((rt1.c6)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))) ELSE LENGTH(rt1.c3) END, (- (CASE WHEN rt0.c1 THEN 0.19874465561812205 ELSE rt0.c2 END)), '(s#O' FROM rt1, rt0, vt0 WHERE ((((((NULL)) NOT BETWEEN (('1393893662')) AND ((NULL))))>=(CAST(x'' AS BLOB)))); -- 0ms;
SELECT ALL (((rt0.c1, rt1.c5, rt1.c3)) BETWEEN ((((rt0.c4) IS FALSE), rt0.c2, COUNT(*))) AND ((-2038354139 COLLATE NOCASE, ((vt0.c1)<(rt0.c1)), (NOT (NULL))))) FROM rt0, rt1 WHERE ((((('-1131543944')GLOB(x''))) NOT NULL)) LIMIT -637446877;SELECT DISTINCT CAST(((vt0.c1)>>(rt1.c6)) AS TEXT) FROM rt0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((1717041189)AND(0.5171059979902338)))) GROUP BY CAST(CASE rt1.c6  WHEN rt0.c0 THEN vt0.c2 WHEN vt0.c3 THEN vt0.c0 WHEN rt1.c6 THEN vt0.c0 END AS NUMERIC) HAVING ((rt1.c3 IN (rt1.c3)) IN (CAST(rt0.c4 AS BLOB)));SELECT DISTINCT ((MAX(rt0.c1))<=(rt1.c3)) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL NTH_VALUE(((vt0.c2) NOTNULL) COLLATE RTRIM, (((((((((NOT (vt0.c3)))OR(((vt0.c3)GLOB(vt0.c0)))))AND(((vt0.c3) IS TRUE))))OR(CAST(vt0.c3 AS INTEGER))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) OVER () FROM vt0 LIMIT -2049063290 OFFSET 1497167723;SELECT DISTINCT ((((rt1.c5)/(vt0.c0)))AND(((vt0.c2) NOTNULL))) FROM vt0;SELECT DISTINCT COUNT(((rt0.c2) NOT NULL)) OVER ( ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c0 END END) FROM rt0, vt0 WHERE (x'');SELECT DISTINCT COUNT((rt1.c1 IN ())) FROM rt1 WHERE ((((((0X2d673ba2, x'', 0.885249568475815))<(('', '1889369985', x''))))<<(((0.357364534032906)&('S#'))))); -- 0ms;
SELECT CASE WHEN (+ (rt1.c5)) THEN MAX(vt0.c1) WHEN (((rt1.c3))>((vt0.c0))) THEN CASE rt0.c3  WHEN rt0.c2 THEN vt0.c2 ELSE rt0.c2 END WHEN ((rt0.c0) BETWEEN (rt1.c6) AND (rt0.c2)) THEN ((rt1.c6)&(rt1.c5)) END FROM rt0, vt0, rt1; -- 0ms;
SELECT CASE ((rt1.c3)!=(rt1.c5))  WHEN ((rt0.c2)<(rt1.c6)) THEN x'' ELSE x'' END, (- (((vt0.c3)<(rt1.c6)))), CAST(((rt0.c4) ISNULL) AS NUMERIC), ((((rt0.c3)AND(rt0.c3))) BETWEEN ((((rt1.c6, vt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c0, rt0.c1, vt0.c0)) AND ((rt0.c2, vt0.c0, vt0.c1)))) AND ((rt1.c3 IN ()))), (((('-1566667000')OR(((((vt0.c2)AND(rt1.c4)))OR(rt0.c2)))))AND(((rt1.c5)GLOB(vt0.c1)))) FROM vt0 NOT INDEXED ORDER BY ((NULL) IS FALSE) DESC;SELECT MAX((rt1.c2 IN ())) FROM vt0, rt1 WHERE (('-1785804333' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL GROUP_CONCAT(((((x'')AND(rt0.c1)))AND(rt0.c3))) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT '' FROM rt1, vt0 GROUP BY ((CAST(rt1.c6 AS BLOB)) NOTNULL) HAVING rt1.c2; -- 0ms;
SELECT DISTINCT ((((AVG(rt0.c4))AND(((rt0.c4)<<(rt1.c1)))))OR(CASE vt0.c2  WHEN NULL THEN vt0.c0 ELSE rt1.c6 END)), (+ (((rt1.c3)&(vt0.c2)))), rt0.c2 FROM vt0, rt1, rt0 WHERE (((((0.1426544408362257)|('920386815'))) NOT NULL)) GROUP BY ((CAST(vt0.c2 AS TEXT)) BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c0))) AND (CASE WHEN rt0.c4 THEN rt0.c4 END)), (+ (((((((((rt1.c0)OR('0.24985844061081175')))OR(vt0.c0)))OR(rt1.c4)))AND(rt1.c1)))), ((((((rt0.c2) IS FALSE))OR((NOT (rt1.c2)))))AND(((((((((vt0.c1)OR('E')))AND(rt1.c4)))AND(rt1.c1)))OR(rt1.c6)))); -- 1ms;
SELECT DISTINCT ((MAX(rt0.c4)) NOT NULL), ((((((((((vt0.c1)AND(vt0.c3)))AND(rt1.c6)))AND(vt0.c3)))OR(rt1.c6)))IS NOT(CASE WHEN rt1.c1 THEN rt1.c4 END)), (((((rt0.c0) NOTNULL)))<=((rt1.c5 COLLATE NOCASE))) FROM rt0, rt1;SELECT DISTINCT (((((('1e500')AND(vt0.c2)))AND(rt1.c0)))<(((((((((((((rt1.c5)OR(vt0.c2)))OR(rt0.c4)))AND(vt0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))), (((vt0.c0 IN ()))IS(MIN(rt1.c6))), ((((rt1.c5)>>(NULL)))-(((rt1.c2) IS TRUE))), ((((json_array(vt0.c0, rt1.c0))AND((+ (rt1.c3)))))OR((rt0.c1 IN (rt1.c3)))), rt1.c3 FROM rt0;SELECT rt1.c0 FROM vt0, rt0, rt1 WHERE (((('-1206064689')) NOT BETWEEN (((('715879874')<>(0.8385089579696372)))) AND ((((((0.3576439759279719)OR(152679653)))OR('0.4193682000337017')))))) GROUP BY CAST(((rt0.c1)IS(rt1.c3)) AS TEXT) ORDER BY CAST(rt1.c6 AS BLOB)  NULLS LAST LIMIT -1510167347 OFFSET -404491363; -- 0ms;
SELECT COUNT((rt1.c0 IN ())) FROM vt0 LIMIT 567139181 OFFSET 1816971594; -- 0ms;
SELECT ALL ((CAST(0.43964375566329317 AS BLOB))&(((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt1.c4)))) FROM rt0, vt0 INNER JOIN rt1 ON rt1.c5 WHERE ((((NOT ('-1557165540'))) NOT BETWEEN (((0.9032722100875766) NOT NULL)) AND (HEX(x'')))) LIMIT -1314103610 OFFSET -1213221939; -- 1ms;
SELECT DISTINCT INSTR(((rt1.c0) BETWEEN (rt1.c5) AND (rt0.c0)), (~ (vt0.c2))) FROM rt0, vt0 WHERE (((TYPEOF(x''))||(((x'') NOT BETWEEN ('[.I6|c?⣈') AND (0.6518184811037875))))) GROUP BY (- ((+ (rt1.c6)))), ((rt1.c1) IS TRUE) COLLATE NOCASE, (-5.06786927E8 IN ()) HAVING ((((rt1.c1) IS TRUE)) NOT NULL);SELECT ALL ((((vt0.c2) ISNULL)) NOT NULL) FROM vt0 WHERE (0Xffffffff8e60a58a) ORDER BY ((CASE x'3523'  WHEN vt0.c3 THEN vt0.c2 ELSE 0.8691251116535794 END) NOT NULL) ASC; -- 0ms;
SELECT (~ (((rt1.c2) IS TRUE))) FROM vt0;SELECT DISTINCT (~ ((((rt1.c0))<((NULL))))) FROM vt0, rt0, rt1 WHERE (((((NULL)%(0.8452845963779521))) BETWEEN (('1638101908' IN ())) AND ((- (-1103868771))))) ORDER BY ((((rt0.c1, rt1.c0, rt1.c4)) NOT BETWEEN ((0.49907217413536376, vt0.c2, rt1.c6)) AND (('-1977634914', rt1.c4, rt1.c4))) IN ()); -- 0ms;
SELECT ALL RANK() OVER () FROM rt0, vt0, rt1 WHERE ((((((+ (NULL)))OR(x'a260')))AND((('815802872')|(-1891756444))))) LIMIT -503329113; -- 0ms;
SELECT ALL ((((((((TRIM(DISTINCT rt0.c1))OR(((x'')GLOB(rt1.c4)))))AND(((rt0.c1)=(rt0.c0)))))AND((NOT (rt1.c0)))))AND(CASE rt0.c2  WHEN vt0.c2 THEN '-463316487' WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c4 THEN vt0.c1 ELSE vt0.c1 END)) FROM rt0, rt1 NOT INDEXED;SELECT DISTINCT SUM(rt0.c3), CASE WHEN ((rt1.c0) IS FALSE) THEN CAST(rt1.c6 AS TEXT) ELSE (vt0.c0 IN ()) END, CASE WHEN ((rt1.c4)%(rt0.c4)) THEN ((rt1.c5)<<(rt0.c3)) ELSE TRIM(rt0.c0) END FROM rt0;SELECT DISTINCT CASE WHEN CAST(rt1.c4 AS REAL) THEN (~ (x'')) ELSE (x'' IN ()) END, CASE CASE WHEN vt0.c0 THEN rt1.c4 END  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffff9f02fe0e)) THEN ('2076080781' IN (NULL)) END, (CASE WHEN vt0.c2 THEN rt1.c2 END IN ()) FROM vt0, rt1, rt0; -- 1ms;
SELECT ALL ((0.7437026667871063)/(TOTAL(rt1.c2))) FROM rt1, vt0 LIMIT 1110277372 OFFSET 2050051168; -- 0ms;
SELECT ALL ((0.8327161344230731)||(((rt1.c1) NOT NULL))) FROM vt0 WHERE (((COALESCE(x'', '-161976636')) IS FALSE));SELECT DISTINCT '582802876', ((rt1.c3)LIKE(vt0.c2)) COLLATE RTRIM, (((vt0.c0) NOT BETWEEN (rt1.c5) AND ('-2004804210')) IN ()) FROM vt0, rt0 WHERE (CASE WHEN ((x'')IS NOT(0.257125177661918)) THEN json_insert(x'', x'', '0.19033140681483784') ELSE ((NULL) NOT NULL) END);SELECT ALL ((json_valid(rt1.c1)) NOTNULL) FROM rt1 WHERE (CAST(((x'') IS TRUE) AS BLOB)); -- 0ms;
SELECT (((rt1.c5, (~ (rt1.c1)), ((rt1.c5)<<(vt0.c1))))>=((CAST(rt1.c1 AS TEXT), ((rt1.c6) IS FALSE), CAST(rt0.c0 AS REAL)))) FROM vt0, rt0, rt1 WHERE (((((725339443) IS FALSE)) NOTNULL)); -- 0ms;
SELECT DISTINCT NULL FROM rt0, rt1, vt0 LIMIT 2138386681; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((COALESCE(DISTINCT 0.09209258344977544, rt1.c3))) AND (((~ (0.9230771856304473))))) FROM rt1, rt0 WHERE ((((NULL)) NOT BETWEEN (((NOT (NULL)))) AND (((('229508896') NOT BETWEEN (-1.407508558E9) AND (x'')))))); -- 0ms;
SELECT ((NULL) NOT BETWEEN (((rt1.c4) NOT BETWEEN (vt0.c0) AND (vt0.c3))) AND ((((vt0.c0))>((rt0.c4))))) FROM vt0, rt1;SELECT DISTINCT (SUM(rt0.c3) IN (x'')), (((HEX(rt1.c2), CASE WHEN vt0.c2 THEN rt0.c4 WHEN rt1.c2 THEN '-1330780811' WHEN vt0.c1 THEN rt1.c6 ELSE x'' END, SUM(rt0.c0)))>=((CASE WHEN vt0.c3 THEN rt0.c2 END, (vt0.c2 IN (vt0.c0)), ((rt0.c1)IS(vt0.c2))))), json_array(CASE rt0.c1  WHEN rt1.c3 THEN vt0.c3 ELSE rt1.c6 END, rt1.c5, rt1.c5 COLLATE BINARY, CAST(rt1.c0 AS BLOB)) FROM vt0, rt1 WHERE (-1.835480363E9);SELECT (((rt1.c3, (((rt1.c6))<((rt0.c2))), (NOT (rt1.c0))))==((((rt1.c0)>=(0.04044874664166176)), (~ (rt1.c1)), (NOT (rt0.c3))))) FROM rt1 WHERE (CASE WHEN CAST(x'87a8' AS TEXT) THEN ((0.2772106973700835) BETWEEN (x'') AND (0.1701832212522696)) WHEN ((NULL)-('725339443')) THEN (- ('vzH')) WHEN (('') NOT BETWEEN (x'bb4e') AND (0xffffffffd4b8708d)) THEN CAST(NULL AS INTEGER) END);SELECT ALL (NOT ('1649622220')) FROM vt0; -- 0ms;
SELECT (((CASE vt0.c0  WHEN vt0.c2 THEN rt1.c4 ELSE rt0.c3 END, ((rt1.c2) BETWEEN (vt0.c2) AND (rt1.c2)), ((rt0.c4)/(rt0.c1))))>=(((- (rt1.c2)), CAST(rt1.c5 AS BLOB), CAST(vt0.c1 AS BLOB)))), ((CASE WHEN rt0.c1 THEN rt1.c4 END)>(vt0.c1 COLLATE NOCASE)), COUNT(*) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN TRIM(vt0.c1) THEN TOTAL(rt1.c2) ELSE CAST(0xffffffff96266171 AS REAL) END, TOTAL((- (rt1.c4))), SUM((rt0.c2 IN ())) OVER () FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (((0.1791794602574276) NOTNULL) IN ((~ (rt1.c4)))) FROM vt0 WHERE (CASE WHEN (((0.12629980171209532))!=((NULL))) THEN ('8F0o ㌞p' IN ()) WHEN (((x'c670ca68'))<=((''))) THEN CASE x''  WHEN '1194058973' THEN '' WHEN 0.26072327103321447 THEN NULL WHEN '-1e500' THEN x'' END WHEN (NULL IN ()) THEN (((''))==((x''))) END) LIMIT -1964244300;SELECT CASE WHEN x'' THEN UNICODE(rt1.c2) WHEN ((vt0.c3)>=(rt1.c1)) THEN (rt1.c5 IN (rt0.c3, rt0.c3)) WHEN NULL THEN (((rt1.c0))<>((rt0.c3))) END FROM rt0 ORDER BY ((((((((((rt1.c1)AND(vt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c2)))GLOB('-691838969')) DESC  NULLS LAST;SELECT ALL (- (((rt0.c1) BETWEEN (0.967021071693159) AND (rt0.c4)))), rt0.c2, '' FROM rt0; -- 0ms;
SELECT ALL rt1.c4 FROM rt1, rt0, vt0 ORDER BY NULL ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, rt0 LEFT OUTER JOIN rt1 ON ((((rt1.c4) NOT NULL))>=(((rt1.c0) NOTNULL))) ORDER BY ((rt0.c3)>>(1233340653))  NULLS FIRST, (- (((rt1.c0)&(rt1.c3)))) ASC  NULLS LAST, CASE rt1.c2  WHEN CAST(rt0.c0 AS REAL) THEN ((vt0.c2)<=(rt1.c0)) END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt1.c6)>(rt1.c4)))OR(CAST(vt0.c1 AS NUMERIC))) FROM rt0, rt1, vt0 WHERE ((((('-1796850155')-(x'bcca'))) IS FALSE)); -- 0ms;
SELECT (((((NOT (vt0.c1)))AND((NOT (NULL)))))OR((('1916604185')OR(vt0.c2)))) FROM vt0 NOT INDEXED, rt0 LIMIT -1657055624 OFFSET -1677376750; -- 0ms;
SELECT DISTINCT CASE ((rt0.c4) NOT BETWEEN (rt1.c0) AND (rt1.c0))  WHEN x'' THEN (((vt0.c1))!=((rt1.c2))) ELSE ((rt0.c3) IS TRUE) END, ((CASE rt0.c0  WHEN rt1.c1 THEN NULL END) BETWEEN (((rt0.c2)=(rt0.c3))) AND (((vt0.c1)AND(vt0.c1)))), (((((((((((rt1.c1, rt1.c6, rt0.c2)) NOT BETWEEN ((vt0.c3, rt1.c2, rt1.c6)) AND ((vt0.c1, vt0.c3, rt1.c3))))AND(((((rt1.c0)AND(rt1.c2)))AND(vt0.c1)))))OR(((((rt1.c0)AND(rt1.c6)))OR(vt0.c2)))))AND((rt1.c5 IN ()))))AND(CASE 1  WHEN rt0.c0 THEN rt1.c3 ELSE vt0.c2 END)) FROM rt0 GROUP BY LOWER(DISTINCT ((rt1.c5)<=(rt0.c3))), json_type(((((((((rt1.c0)AND(rt1.c2)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c2))), 0.7418636307743159 COLLATE NOCASE, (((rt1.c3) NOT BETWEEN (rt0.c3) AND (NULL)) IN ()), (NOT (x'')) HAVING (((((rt0.c3, rt0.c4, rt0.c0))<>((rt0.c1, rt0.c0, rt1.c0))))/(((rt1.c4)IS(rt1.c3))));SELECT DISTINCT ((CAST(rt0.c4 AS TEXT))LIKE(rt0.c1)) FROM vt0 WHERE (((('56' IN ()))|((~ (0X2963f20f)))));SELECT DISTINCT FIRST_VALUE(((((vt0.c1) IS TRUE)) IS FALSE)) OVER (), (((((rt1.c0, rt0.c0, vt0.c3))<((NULL, rt0.c0, rt1.c5))))<<(((rt0.c4) BETWEEN (rt1.c5) AND (rt1.c5)))), UPPER(DISTINCT (rt0.c2 IN ())) FROM vt0, rt0 WHERE ((((('-1940816734') NOT BETWEEN (0.8116267959363037) AND (NULL)))GLOB(((NULL) NOT NULL))));SELECT DISTINCT (((((rt1.c2))>=((vt0.c1))))<>(((((vt0.c0)OR(NULL)))AND(rt0.c3)))) FROM vt0 WHERE (CAST(((-1807392088)<=(742824659)) AS BLOB)) ORDER BY (vt0.c1 IN (rt0.c1, rt1.c2)) COLLATE BINARY DESC;SELECT DISTINCT LAST_VALUE(0.7587001173354622) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (- (TRIM(vt0.c1, vt0.c3))), ((UPPER(DISTINCT vt0.c2))>=(LIKELY(vt0.c2))), ROW_NUMBER() OVER () FROM vt0, rt1 ORDER BY ((((CAST(rt0.c4 AS REAL))AND((+ (rt1.c1)))))OR((rt1.c2 IN (0x226118c9))))  NULLS LAST;SELECT ALL CAST((((rt1.c3, rt0.c3, rt0.c4))<((vt0.c3, rt1.c4, 0.5128277795645341))) AS TEXT) FROM rt1, vt0, rt0 GROUP BY (+ (UPPER(DISTINCT rt1.c5))) HAVING CAST((rt1.c1 IN ()) AS REAL); -- 0ms;
SELECT (rt1.c2 COLLATE NOCASE IN ((- (rt1.c5)))), ((x'')GLOB(MAX(rt0.c3))), ((((0xffffffffa03eec83)OR(rt0.c1))) NOT BETWEEN (MAX(rt1.c5)) AND (((rt0.c3) BETWEEN (rt1.c5) AND (rt1.c2)))) FROM rt0 GROUP BY CAST((rt1.c1 IN ()) AS BLOB), (((+ (rt1.c1))) NOTNULL), rt0.c1;SELECT DISTINCT (((rt1.c5 IN ()))OR(((rt1.c3)IS(vt0.c3)))) FROM rt1 NATURAL JOIN rt0;SELECT NULL FROM rt0 WHERE (CAST((('-1942728035') NOT BETWEEN (x'') AND ('y')) AS NUMERIC)); -- 0ms;
