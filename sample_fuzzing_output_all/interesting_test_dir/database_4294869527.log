-- Time: 2024/06/07 06:35:11
-- Database: database27
-- Database version: 3.40.0
-- seed value: 4294869527
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
UPDATE vt0 SET (c0, c0)=('', ''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE (((('') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0 COLLATE BINARY)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('S.uc켦>{I') WHERE (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1612488879), (NULL), (0Xffffffffe4aecf26); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'2363') WHERE ((((((vt0.c0)LIKE('')))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0 COLLATE NOCASE)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0, c0)=('', '1612488879'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('yXR{/_o#'), (NULL), (-4.58305754E8); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(142969789) WHERE ((vt0.c0)<((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
BEGIN  TRANSACTION; -- 8ms;
END TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL) WHERE (0X1ec8971e COLLATE BINARY IN ()); -- 0ms;
UPDATE OR REPLACE vt0 SET c0=x''; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7188247325985402 WHERE x''; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR FAIL vt0 SET c0=-2023300788, c0='-292837583', c0=0.14939895059906494 WHERE (((((x'')>=(vt0.c0))))>(((vt0.c0 IN ())))); -- 0ms;
REINDEX; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('력,䮁8-P9J7'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1663367609);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1616153868);\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('now'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.05533600202493283); -- 0ms;
REINDEX; -- 1ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
UPDATE vt0 SET (c0)=('-292837583') WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.2819297864261574, c0=NULL WHERE TRIM(DISTINCT ((vt0.c0)>=(vt0.c0)), vt0.c0); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('-1998894207'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('S.uc켦>{I') WHERE (+ (((vt0.c0)<<(vt0.c0)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET c0=-1e500, c0=0.4765552012022788; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1280465647); -- 0ms;
UPDATE vt0 SET (c0)=(0.6059028941391116) WHERE ((IFNULL('-1998894207', vt0.c0)) NOT NULL); -- 0ms;
END TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE vt0; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('-144483367'), (NULL), (''), (0.4619626479470651), ('Yo'); -- 0ms;
END; -- 0ms;
UPDATE vt0 SET c0=NULL, c0=NULL, c0='0.05533600202493283' WHERE ((((vt0.c0)<<(x''))) IS FALSE); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1515227654);\n; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=-2023300788; -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'2381'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('114540525'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-705428624'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 462718963); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-458305754' WHERE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.6059028941391116); -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
UPDATE OR FAIL vt0 SET c0=x'b871'; -- 4ms;
UPDATE OR IGNORE vt0 SET c0='yXR{/_o#', c0=x'', c0=1e500; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 222267203); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((+ (vt0.c0)))))AND(0Xffffffff8766e14c)) FROM vt0; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
VACUUM main; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1146373374); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, order=ASC); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ABS(0.11227650942983847) FROM v0, vt1 WHERE ((((NOT (-1.44483367E8))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((0.2819297864261574) BETWEEN ('Cb') AND ('Q9')), (((~ (vt0.c0))) ISNULL), ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) FROM v0;SELECT NULL, CASE ((v0.c0)<(vt1.c0))  WHEN (NOT (v0.c0)) THEN (((v0.c0))>=((v0.c0))) ELSE (((x'ae75'))>((vt0.c0))) END, (v0.c0 COLLATE NOCASE IN (v0.c0)) FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT COALESCE(COUNT(*), ((x'') BETWEEN (0.9349820060364537) AND (vt1.c0)), (vt0.c0 IN ()), ((vt0.c0) ISNULL), ((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)), (NOT (vt0.c0))), SUM(((v0.c0)|(vt1.c0))), CASE CAST(vt0.c0 AS NUMERIC)  WHEN LIKELY(DISTINCT vt1.c0) THEN ((vt0.c0)/(v0.c0)) END FROM vt1 WHERE (CASE WHEN CAST(-544307774 AS INTEGER) THEN (NOT (NULL)) ELSE (((('312047467')AND(x'')))AND(NULL)) END);SELECT DISTINCT ((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))IS NOT(((v0.c0)>=(vt1.c0)))), ((((vt0.c0) BETWEEN (vt1.c0) AND (0.7188247325985402))) NOTNULL), (((((v0.c0 IN (vt1.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END)) FROM vt1, v0 WHERE (CASE ('0.4765552012022788' IN (x''))  WHEN NULL THEN CASE 0.04559325328726249  WHEN 0.6059028941391116 THEN x'' END ELSE ((0.4619626479470651) IS TRUE) END);SELECT DISTINCT CAST(((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) AS BLOB), (((((v0.c0, vt1.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt1.c0))))|(x'')), (((vt1.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN v0.c0 THEN vt1.c0 ELSE NULL END))), (((- (-144483367)))<>((v0.c0 IN ()))), GROUP_CONCAT((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, v0.c0)))) FILTER(WHERE ((CAST(vt1.c0 AS INTEGER)) BETWEEN (LIKELY(x'')) AND (((v0.c0) NOT NULL)))) OVER () FROM vt1, vt0;SELECT DISTINCT ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CAST(0.4011501688208542 AS NUMERIC)) AND (((((vt1.c0)OR(v0.c0)))OR(v0.c0)))) FROM vt1, vt0, v0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN UPPER(v0.c0) END; -- 0ms;
SELECT ALL (((x'65a6', ((v0.c0) NOT NULL), vt1.c0 COLLATE BINARY))<((v0.c0, ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE))) FROM v0, vt0, vt1; -- 0ms;
SELECT ALL MAX(CASE WHEN v0.c0 THEN '142969789' ELSE v0.c0 END) FROM v0 WHERE ((((- (NULL))) BETWEEN (x'') AND (((x'')<=(x'6fcb'))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))IS(vt1.c0 COLLATE BINARY)) FROM vt0, v0, vt1 GROUP BY HEX(json_type(vt0.c0)); -- 0ms;
SELECT DISTINCT CASE WHEN ((v0.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.2989588267131221 THEN vt0.c0 END WHEN ((v0.c0)&(0.08713107466462022)) THEN CAST(vt1.c0 AS BLOB) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END THEN v0.c0 END FROM v0, vt0, vt1 GROUP BY CAST(json_quote(vt0.c0) AS NUMERIC), CAST(DATE(v0.c0, vt1.c0, 0.4011501688208542) AS TEXT), ((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.6059028941391116 WHEN vt0.c0 THEN vt1.c0 END)<(v0.c0)); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL), vt1.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE, ((((((vt0.c0)AND(vt1.c0)))OR(v0.c0))) ISNULL) FROM v0, vt1, vt0 WHERE ('nQ') GROUP BY (+ (vt0.c0 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((0.930729293190468) BETWEEN (((vt0.c0) ISNULL)) AND (((vt0.c0) IS FALSE))) FROM vt1, v0 WHERE (((CAST('Fg9/䮁ৎ' AS BLOB))<=((('')LIKE('-1246923185')))));SELECT DISTINCT vt1.c0 FROM v0;SELECT DISTINCT (vt1.c0 COLLATE BINARY IN ()), ((((((v0.c0)AND(v0.c0)))AND(NULL))) IS FALSE), ((CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(((vt1.c0)OR(vt0.c0)))) FROM vt1 NATURAL JOIN vt0 GROUP BY 0X521dd685 HAVING NULL LIMIT 1377687173 OFFSET -544307774;SELECT DISTINCT DATE(vt1.c0, (vt0.c0 IN ()), CAST(x'' AS BLOB)) FROM vt0 LIMIT -334860449;SELECT ALL PERCENT_RANK() OVER ( RANGE  CURRENT ROW) FROM vt1, vt0; -- 1ms;
SELECT ALL vt1.c0, ((((vt0.c0)==(vt1.c0)))OR(((((vt0.c0)OR(vt1.c0)))OR(NULL)))), ((0xffffffffee8ba731)<>(((vt1.c0) IS TRUE))) FROM vt0;SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (+ (CAST(v0.c0 AS REAL)))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((vt0.c0)OR(v0.c0)) IN ()) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT (((((((((+ (vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))))OR(x'')))AND(((vt0.c0) IS FALSE))))AND(v0.c0)), (- ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), NULL FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)<=(vt0.c0)))+(((vt1.c0)>=(v0.c0)))) FROM v0 WHERE (((((x'')=(x'')))>(('1612488879' IN ())))) GROUP BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))=(HEX(DISTINCT x''))) HAVING (((((vt1.c0))==((vt0.c0))))OR((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, v0.c0, vt1.c0)))));SELECT LIKELY(((vt1.c0) IS TRUE)), vt1.c0, x'' FROM v0 WHERE (NULL);SELECT DISTINCT (((((vt1.c0)>=(vt1.c0)), (~ (vt0.c0)), CAST(vt1.c0 AS NUMERIC), MAX(vt0.c0), (vt0.c0 IN ())))>(((v0.c0 IN ()), ((v0.c0)>>(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), CAST(vt1.c0 AS INTEGER), ((x'')||(vt1.c0))))), CAST(v0.c0 AS REAL) COLLATE BINARY, ((((((vt0.c0)OR(vt0.c0)))OR(NULL)))<=((NOT (v0.c0)))) FROM vt1, v0, vt0 ORDER BY CASE (((v0.c0, NULL, vt1.c0))>((vt0.c0, vt1.c0, vt0.c0)))  WHEN ABS('') THEN CAST(vt1.c0 AS BLOB) ELSE ((vt0.c0) NOT NULL) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST((NOT (0.6961866782505277)) AS REAL) FROM vt0, v0, vt1; -- 0ms;
SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(GROUP_CONCAT(v0.c0))))OR(TOTAL(vt0.c0))) FROM vt0, v0;SELECT ALL (+ (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'3e7b4dcf' WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)), GROUP_CONCAT(CAST(vt1.c0 AS INTEGER)) OVER (), 0.739178949014902 FROM v0, vt0 WHERE ((NOT (((0.1960764017780945)%(x''))))) LIMIT 1237857026;SELECT DISTINCT ((((((v0.c0, vt1.c0, vt1.c0))<((-1244698016, v0.c0, vt1.c0)))))=(((NOT (vt1.c0))))) FROM vt1;SELECT DISTINCT CASE WHEN vt1.c0 THEN ((((vt1.c0)OR(v0.c0)))OR(vt1.c0)) WHEN ((vt0.c0)>=(v0.c0)) THEN (- (v0.c0)) WHEN (v0.c0 IN ()) THEN CAST(v0.c0 AS NUMERIC) END FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt1.c0 ELSE 0.05533600202493283 COLLATE BINARY END FROM v0, vt0 WHERE (UNLIKELY(HEX(DISTINCT '-2023300788')));SELECT DISTINCT ((vt1.c0 COLLATE BINARY) NOT BETWEEN (COUNT(0x49c83302)) AND (((((vt1.c0)OR(v0.c0)))OR(vt0.c0)))), ((vt1.c0) IS TRUE) COLLATE NOCASE, UNICODE(((vt1.c0)OR(vt1.c0))) FROM v0, vt1;SELECT DISTINCT (+ (CAST(vt1.c0 AS REAL))) FROM vt0, v0 WHERE (((('Av')) NOT BETWEEN ((CASE 0.2555093179408525  WHEN x'c8f6' THEN x'f42e017c' END)) AND ((('0.2989588267131221' IN ())))));SELECT CAST((vt1.c0 IN ()) AS BLOB) FROM vt1, v0; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM vt1, v0; -- 0ms;
SELECT ALL -2.023300788E9 FROM v0, vt1; -- 0ms;
SELECT DISTINCT ((0.6231399515281946)<<(vt0.c0)), UPPER(json_patch(vt1.c0, vt1.c0)), (((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))=((vt0.c0 COLLATE NOCASE))) FROM vt1 CROSS JOIN v0 ON ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END) AND (((vt1.c0) NOT NULL))) INNER JOIN vt0 ON ((x'ea506c41') NOT BETWEEN (307038670) AND (((v0.c0)=(vt1.c0)))); -- 0ms;
SELECT vt1.c0 FROM vt0;SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (x'2e70') AND ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((((0.8586088889595466)AND(v0.c0)))AND(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CASE WHEN v0.c0 THEN vt1.c0 END)), vt1.c0 FROM v0, vt0 WHERE ((((NULL IN ())) IS TRUE)) ORDER BY (+ (v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;SELECT DISTINCT v0.c0 FROM vt1;SELECT ALL LOWER(DISTINCT MAX(vt0.c0)), (((v0.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))))), ((COUNT(*)) BETWEEN (0xffffffff8766e14c COLLATE RTRIM) AND (vt1.c0)) FROM vt0 WHERE (CASE (((('0.930729293190468')OR(NULL)))OR(x''))  WHEN (NULL IN ()) THEN CAST(NULL AS BLOB) ELSE (((x'')) BETWEEN ((NULL)) AND (('1486997656'))) END);SELECT DISTINCT TRIM(DISTINCT 0.2470191094379368, vt1.c0) COLLATE NOCASE FROM vt1 ORDER BY CASE WHEN CAST(v0.c0 AS BLOB) THEN vt0.c0 COLLATE RTRIM END ASC, (((v0.c0)<=(vt1.c0)) IN ())  NULLS LAST;SELECT ALL x'' FROM vt0, vt1 LIMIT -544307774 OFFSET -144483367; -- 0ms;
SELECT DISTINCT (((((NULL)AND(v0.c0)))OR(v0.c0)) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(x'ea97') FROM v0; -- 0ms;
SELECT (+ (CAST(vt1.c0 AS NUMERIC))), CAST(((vt0.c0)OR(vt0.c0)) AS BLOB), CASE WHEN (NOT (vt1.c0)) THEN (('1985720407') IS FALSE) ELSE v0.c0 END FROM vt1, vt0, v0 WHERE (((((((((x'')OR('-1859157319')))AND(-5.44307774E8)))OR('')))AND(']?')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((v0.c0)<>(v0.c0)))<<(((v0.c0)&(vt0.c0)))) FROM v0 WHERE ((((((((-1.515227654E9)AND(1663367609)))OR('-1515227654')), x'' COLLATE RTRIM, highlight(NULL, ']?', x'f3667113', '碌i^rXiUw')))<=((('J()' IN ()), ((x'')||(x'')), CASE WHEN 0xffffffffd4dce09b THEN '1616153868' ELSE NULL END)))) GROUP BY v0.c0, ((CASE vt1.c0  WHEN x'' THEN vt1.c0 END)*(((vt1.c0) IS FALSE))), ((((((v0.c0) ISNULL))AND(vt1.c0 COLLATE BINARY)))AND(((vt0.c0)-(vt1.c0)))), vt0.c0, (((((vt0.c0) NOT NULL)))>(((- (vt0.c0))))) HAVING ((vt1.c0 IN ()) IN ());SELECT DISTINCT FIRST_VALUE((((NOT (v0.c0))) NOTNULL)) OVER () FROM vt0, vt1, v0; -- 1ms;
SELECT DISTINCT MAX(CAST('-1010665879' AS TEXT)) FROM vt0, v0, vt1 GROUP BY vt1.c0 COLLATE NOCASE, CASE WHEN (NULL IN ()) THEN ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR('1461945713')))AND(v0.c0)) ELSE CAST(vt1.c0 AS TEXT) END, ((((vt0.c0))=((vt0.c0))) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END, vt0.c0)) HAVING ((-705428624 IN ()) IN ()) LIMIT -1244698016 OFFSET 1111915830; -- 0ms;
SELECT ALL COUNT(CAST(vt0.c0 AS INTEGER)) OVER (), CASE vt0.c0  WHEN CASE WHEN 0.4325856052623448 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1237857026' WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0xffffffffd6ac7b95, NULL, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c0))) ELSE ((vt1.c0)<>(vt0.c0)) END, (((+ (vt1.c0)))==(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) FROM v0 WHERE (((((((x'')AND(0.739178949014902)))OR(x'')))IS((('') BETWEEN ('-204565887') AND (x'')))));SELECT ALL (~ (((v0.c0)AND(vt0.c0)))) FROM v0 WHERE (LTRIM((x'7e3c' IN ()), CASE '1612488879'  WHEN 0.9379502539605439 THEN 0.016952318334256478 END));SELECT ((((vt0.c0) NOT NULL)) ISNULL) FROM vt1;SELECT DISTINCT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, vt1.c0 COLLATE NOCASE, highlight(v0.c0, v0.c0, vt1.c0, v0.c0)))>((((x'') NOT BETWEEN (v0.c0) AND (v0.c0)), ((vt0.c0)>(vt0.c0)), 'J()'))), (((((v0.c0)==(vt0.c0))))<=((x''))), ((((((((((vt0.c0)>=(vt0.c0)))OR(AVG(v0.c0))))OR(x'4c51')))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))) FROM vt1 WHERE ((((('1663367609')/(x'')))*(x'')));SELECT DISTINCT TYPEOF(DISTINCT (vt1.c0 IN ())), CASE WHEN '(u}Tp' THEN ((vt0.c0) BETWEEN (x'') AND (vt1.c0)) WHEN ((vt1.c0)-(vt0.c0)) THEN ((v0.c0)IS NOT(v0.c0)) WHEN (vt1.c0 IN (v0.c0)) THEN vt0.c0 END, ((((vt1.c0)IS(vt1.c0)))|((vt1.c0 IN ()))) FROM vt0 WHERE ((((x'c84a')) BETWEEN ((NULL)) AND (((- (x'a1fd')))))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST, ((((((v0.c0)AND('M1gb퇕')))OR(vt0.c0)))IS(vt0.c0)) ASC, ((((((((CAST(vt0.c0 AS REAL))AND(((vt1.c0)||(vt1.c0)))))AND(((vt1.c0)>(v0.c0)))))OR(json_remove(vt1.c0, v0.c0))))OR(json_valid(vt0.c0))) ASC LIMIT -334860449 OFFSET -1005886436;SELECT (((v0.c0) NOTNULL) IN ()), TOTAL((- (''))) OVER (), ((0.2819297864261574)&((v0.c0 IN (0.19995749516507877)))) FROM vt0 WHERE (x'');SELECT DISTINCT CAST(v0.c0 AS TEXT) FROM v0, vt1, vt0; -- 1ms;
SELECT vt0.c0 FROM v0, vt0, vt1 WHERE ((('q^') NOT BETWEEN (-7.23722085E8) AND (CASE '銁5ZF&8\rq'  WHEN '	ERWde' THEN x'' END))); -- 0ms;
SELECT ((((((v0.c0)=(vt0.c0)))OR((+ (v0.c0)))))OR(((vt1.c0)-(v0.c0)))) FROM vt0, v0, vt1 GROUP BY TRIM(vt1.c0 COLLATE NOCASE) HAVING v0.c0; -- 0ms;
SELECT ALL ((COUNT(vt1.c0))*(((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))) FROM v0 WHERE (ABS(DISTINCT CASE WHEN NULL THEN x'c746' ELSE 0.7217736753202839 END));SELECT DISTINCT ((((v0.c0)<(vt1.c0)))GLOB(((x'') NOTNULL))), v0.c0, 0.11027894904983149 FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0) IS TRUE)) BETWEEN (UPPER(v0.c0)) AND (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))) FROM v0, vt0, vt1 LIMIT -643180908; -- 0ms;
SELECT DISTINCT (((v0.c0)) BETWEEN ((((((vt1.c0)AND(v0.c0)))OR(vt0.c0)))) AND ((((NULL) NOT NULL)))) FROM v0, vt0 WHERE (x'5e4c');SELECT DISTINCT ((MAX(v0.c0)) BETWEEN (((((vt1.c0)AND(vt0.c0)))OR('0.08713107466462022'))) AND (LTRIM(NULL, v0.c0))) FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((v0.c0 COLLATE RTRIM)OR(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(v0.c0)))))AND((vt1.c0 IN ()))))OR(v0.c0)))AND(((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))), CASE WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN '1237857026' THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END THEN LIKELIHOOD(vt0.c0, 0.8559750127319073) ELSE vt0.c0 END, (((UNLIKELY(vt1.c0)))>((((vt1.c0) IS TRUE)))) FROM vt0;SELECT (((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE '-1399791424' END, ((v0.c0) ISNULL), (((vt1.c0, NULL, v0.c0))<=((v0.c0, v0.c0, vt0.c0))))) AND ((v0.c0 COLLATE BINARY, vt0.c0, CAST(vt0.c0 AS BLOB)))) FROM vt0 LIMIT -143774849 OFFSET 31417077;SELECT (((v0.c0) NOT NULL) IN ()), FIRST_VALUE(((v0.c0 COLLATE BINARY)<((v0.c0 IN ())))) OVER (), ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))%(((vt1.c0) NOTNULL))) FROM v0;SELECT DISTINCT CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) FROM v0, vt1 WHERE (CAST(CASE NULL  WHEN '1093409244' THEN NULL END AS TEXT)) LIMIT -1914775613 OFFSET 1111915830;SELECT ALL (CASE WHEN NULL THEN vt1.c0 END IN ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM v0, vt1 GROUP BY ((((((((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c0 END)AND(((vt0.c0)|(x'')))))AND((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))))OR((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((0.2989588267131221) IS TRUE)));SELECT ALL CASE WHEN vt0.c0 COLLATE RTRIM THEN (NOT (vt1.c0)) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt1.c0)))AND(-141665300)))LIKE(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)), (((((vt1.c0)) NOT BETWEEN ((0.6084396381014077)) AND ((vt0.c0))))<=(v0.c0)), COUNT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) OVER () FROM vt1;SELECT (((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt1.c0))))!=(('b寬*3'))), GROUP_CONCAT('') OVER (), (((vt1.c0)) BETWEEN ((((((NULL)OR(vt0.c0)))AND(v0.c0)))) AND ((MIN('Ly寬)Vd')))) FROM vt1;SELECT DISTINCT (((+ (vt1.c0)))||(('aK' IN ()))) FROM vt0 WHERE ((+ ('1652353284' COLLATE BINARY))) ORDER BY (((vt1.c0 IN ())) IS FALSE);SELECT DISTINCT LAG((((((+ (v0.c0)))OR(UNLIKELY(v0.c0))))AND(((vt1.c0)*(vt1.c0)))), '-1005886436', ((((v0.c0)<=(v0.c0))) ISNULL)) OVER () FROM vt0, vt1, v0 LIMIT -967071825 OFFSET -1262568453; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)<=(((-3.34860449E8)OR(v0.c0)))) FROM vt0, v0; -- 1ms;
SELECT DISTINCT COUNT(*) COLLATE BINARY FROM v0, vt0; -- 0ms;
SELECT ALL MAX((vt1.c0 IN ('0.7217736753202839', vt1.c0))) FROM vt0;SELECT DISTINCT COUNT(((vt1.c0)/(v0.c0))) FROM vt0, vt1 WHERE (((x'')<<(0.04559325328726249)) COLLATE NOCASE);SELECT DISTINCT (((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM)))OR(CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN 0X6cb15a80 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) FROM v0 WHERE (TRIM(DISTINCT (('[횅4*')AND(x'27cf')), (((x'', 'start of day#', NULL))>=((x'', 'z9', NULL))))) LIMIT 1552893580;SELECT DISTINCT (SQLITE_SOURCE_ID() IN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), v0.c0)) FROM vt1, vt0, v0 WHERE (CASE ((x'9c85')AND(NULL))  WHEN x'1aa5' COLLATE RTRIM THEN ((0X2524f26a)/(0.8900602837888777)) ELSE json_patch(x'7edd', 0.23866965354401526) END);SELECT DISTINCT CAST(0X2524f26a AS BLOB) COLLATE BINARY FROM vt1, vt0, v0 WHERE (CASE ((x'') NOTNULL)  WHEN ((((((((0.2470191094379368)OR(NULL)))AND(x'')))OR(0.3848469134666025)))OR(x'')) THEN NULL WHEN '-237431505' THEN ((x'')IS(x'd588')) WHEN ((NULL)AND(NULL)) THEN ((0.016952318334256478) IS FALSE) END) GROUP BY ((((((vt1.c0) NOT NULL))OR(vt1.c0 COLLATE RTRIM)))OR((((v0.c0))>=((vt1.c0))))) HAVING (((((vt0.c0))<((vt1.c0))))OR('AC')) LIMIT -1580759319 OFFSET 944894785; -- 0ms;
SELECT DISTINCT vt1.c0 FROM v0 ORDER BY (((((((((((vt0.c0)AND(vt1.c0)))AND(v0.c0)))OR(vt0.c0)))AND(vt1.c0)), vt0.c0 COLLATE BINARY, ((x'020c') IS TRUE)))!=((((v0.c0) ISNULL), NULLIF(DISTINCT v0.c0, '1652353284'), (((vt0.c0))<>((vt1.c0)))))) DESC  NULLS FIRST, CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY ASC  NULLS FIRST;SELECT ALL (TOTAL(v0.c0) IN ()) FROM vt0, v0, vt1; -- 0ms;
SELECT ((TYPEOF(vt1.c0)) IS TRUE) FROM vt1, v0, vt0; -- 0ms;
SELECT x'' FROM vt0, vt1, v0 WHERE ((NOT (NULL)) COLLATE NOCASE); -- 0ms;
SELECT (NOT (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), ((-1146900480) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND ((+ (v0.c0)))), (v0.c0 IN (vt1.c0)) COLLATE BINARY FROM v0 CROSS JOIN vt0 ON ((v0.c0) BETWEEN (((vt1.c0)||(v0.c0))) AND (vt1.c0)) WHERE (NULL) GROUP BY (((CAST(vt1.c0 AS BLOB)))=((json_valid(v0.c0)))) ORDER BY (((v0.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN '-967071825' THEN 0xfffffffffd5581a6 WHEN vt1.c0 THEN vt1.c0 ELSE 3.1417077E7 END))) ASC  NULLS FIRST LIMIT 2109503040 OFFSET 2010470094;SELECT ALL CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'iG5Y' THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE FROM v0, vt1, vt0; -- 0ms;
SELECT ALL ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL), (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))), ((((v0.c0) NOTNULL))|((- (v0.c0)))) FROM vt0, v0 WHERE ((+ ((1816923429 IN (25822515))))) ORDER BY ((v0.c0) IS TRUE) COLLATE NOCASE DESC, ((vt1.c0)<(vt1.c0)) COLLATE RTRIM;SELECT DISTINCT ((vt0.c0)!=((vt0.c0 IN ()))), vt1.c0, ((v0.c0) BETWEEN (0.4046131647283051) AND (((((((((vt0.c0)OR(v0.c0)))OR(0Xffffffff97c48712)))OR('-1914775613')))OR(vt0.c0)))) FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT ((SUM(x'')) ISNULL) FROM v0, vt0, vt1 WHERE (NULLIF(((-1.14690048E9) IS TRUE), CASE NULL  WHEN 516462366 THEN x'' ELSE 0xffffffff9c7b788c END)); -- 0ms;
SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) ISNULL) FROM vt0;SELECT ALL (((- (vt0.c0)))>=(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 WHEN 0X124d09ce THEN vt0.c0 WHEN v0.c0 THEN x'' END)) FROM v0 WHERE (((CAST('pd' AS NUMERIC))|((((('1823562368')AND('')))AND(0xfffffffffbff7e92)))));SELECT DISTINCT ((((-2.92837583E8)||(vt1.c0)))<>(v0.c0 COLLATE RTRIM)), (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END, vt1.c0 COLLATE RTRIM, NULL))>(((('1616153868')GLOB(v0.c0)), CASE WHEN v0.c0 THEN vt1.c0 ELSE x'' END, ((vt0.c0)%(v0.c0))))), (('0.7188247325985402') IS TRUE) FROM v0;SELECT DISTINCT NTILE((NOT ((vt1.c0 IN ())))) OVER () FROM vt0, vt1, v0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT (((v0.c0) NOT BETWEEN (x'') AND (vt0.c0)) IN (COUNT(*))) FROM vt1 WHERE (CASE ((x'6240') NOT BETWEEN (0xffffffff8dded7c3) AND ('0.9204906287506501'))  WHEN (((NULL)) NOT BETWEEN ((x'')) AND ((x''))) THEN CASE x''  WHEN x'' THEN x'' WHEN '%%Cg' THEN x'4abd' WHEN 0Xffffffff8f1e8034 THEN 0X506b44ea END WHEN (((('''9{}')AND(0.9204906287506501)))OR(0Xffffffff8455741e)) THEN ((('%%CG'))=(('-429525738'))) WHEN (x'' IN ()) THEN 0.4812177946055629 COLLATE NOCASE END);SELECT ALL SUM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT SUM(TRIM(v0.c0, v0.c0)) OVER (), ((((vt1.c0)||(x'f5dd')))/(CASE WHEN vt1.c0 THEN vt1.c0 END)), NULLIF(DISTINCT ('1816923429' IN ()), CASE WHEN v0.c0 THEN 'now' WHEN '-1146900480' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END), vt1.c0, (((v0.c0) ISNULL) IN ()) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT v0.c0 FROM vt1, v0, vt0 WHERE (('\rꁔ|2ml' IN ((-806462457 IN ())))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM v0, vt0, vt1 WHERE (((LIKELIHOOD(DISTINCT x'', 0.6241323437809099))*(((((NULL)OR(NULL)))OR(''))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((NULL, vt1.c0, vt1.c0)) AND ((vt0.c0, NULL, vt1.c0))))>('')) FROM vt1, vt0, v0 WHERE (TRIM(DISTINCT 0.8174764636077544 COLLATE NOCASE)); -- 1ms;
SELECT DISTINCT (((v0.c0)) BETWEEN ((((-723722085)<(vt0.c0)))) AND ((((v0.c0)<(v0.c0))))) FROM v0;SELECT ((((vt0.c0) BETWEEN (0.7454822640183939) AND (vt0.c0)))>(vt1.c0)) FROM v0 FULL OUTER JOIN vt0 ON (CASE vt0.c0  WHEN 0.6394128967069794 THEN 0.48151241737592 END IN ()) WHERE ((((('1598968492')AND('-989177280' COLLATE BINARY)))AND(1461945713))) ORDER BY x'' ASC;SELECT ALL CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN (((vt1.c0, vt1.c0, vt1.c0))<=((v0.c0, v0.c0, v0.c0))) WHEN ((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0)) THEN UNLIKELY(DISTINCT vt0.c0) WHEN TOTAL(vt1.c0) THEN json_extract(vt1.c0, vt0.c0) ELSE HEX(v0.c0) END FROM vt1, vt0, v0; -- 0ms;
SELECT (((((vt1.c0)IS(-15209980)), NULL, ((v0.c0)LIKE(vt1.c0))))<((vt0.c0 COLLATE NOCASE, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))) FROM v0, vt1, vt0 WHERE (((NULL)>=(2.10950304E9)) COLLATE NOCASE) GROUP BY (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))<=((((x'') BETWEEN (vt0.c0) AND (v0.c0))))); -- 0ms;
SELECT ALL ((LOWER(DISTINCT v0.c0)) NOT NULL) FROM vt0, vt1 WHERE (CASE (('') NOT NULL)  WHEN (((x''))>=((x''))) THEN (('0.05533600202493283') IS FALSE) END);SELECT ALL UNLIKELY((v0.c0 IN ())) FROM v0; -- 0ms;
SELECT ALL CAST(v0.c0 AS TEXT) FROM v0, vt1, vt0; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (0X47b5360a) AND (v0.c0)))<=(((vt1.c0)<(v0.c0)))), (((vt0.c0)) NOT BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((TRIM(DISTINCT v0.c0, '1663367609')))), (((((((((((vt1.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0))))OR((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE NOCASE)))OR(NULL)))AND(('964921835' IN ()))) FROM v0, vt1;SELECT ALL GROUP_CONCAT(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) OVER (), (vt0.c0 IN ()), ((COUNT(vt0.c0))IS NOT((~ (vt0.c0)))) FROM vt1;SELECT DISTINCT (+ (((vt1.c0)=(vt1.c0)))) FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(vt0.c0) AS REAL) FROM v0, vt1;SELECT DISTINCT COUNT(((v0.c0)<=(v0.c0))) OVER () FROM v0, vt0 WHERE ((('') NOT NULL) COLLATE BINARY); -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) BETWEEN (TRIM(vt1.c0)) AND (LAST_INSERT_ROWID())) FROM v0, vt1, vt0; -- 1ms;
SELECT DISTINCT ((((v0.c0)AND(v0.c0)))OR(vt1.c0)) COLLATE BINARY FROM v0 WHERE ((((NOT ('384129188'))) NOT BETWEEN ((x'' IN (NULL))) AND (CAST(895249310 AS BLOB))));SELECT DISTINCT (((v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((TRIM(DISTINCT vt1.c0, vt0.c0)))), CAST(vt1.c0 COLLATE NOCASE AS NUMERIC), ((x'') NOT BETWEEN ((((NULL))==((v0.c0)))) AND (((vt0.c0) BETWEEN (0.3556558890612731) AND (vt1.c0)))) FROM v0, vt0, vt1 WHERE ('start of day#' COLLATE RTRIM); -- 0ms;
SELECT CHAR(2.010470094E9), x'ad4687d4', TOTAL_CHANGES() FROM vt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0))) ASC  NULLS LAST, ((CAST(vt0.c0 AS REAL))<<(CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))  NULLS LAST, CASE WHEN vt0.c0 COLLATE RTRIM THEN (NOT (vt0.c0)) WHEN (~ ('-1966481751')) THEN (v0.c0 IN (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)<<(v0.c0)) END  NULLS FIRST;SELECT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) ISNULL) FROM vt1, vt0, v0 WHERE ((((('AN')-(x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((vt1.c0)>(v0.c0)) COLLATE RTRIM COLLATE BINARY FROM v0 GROUP BY (((-375042200 IN ()))AND(IFNULL(DISTINCT v0.c0, vt1.c0)));SELECT DISTINCT CAST(vt1.c0 AS TEXT), vt0.c0, SUM((vt0.c0 IN (vt1.c0))) FROM vt1, v0;SELECT MIN(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))) FROM vt1, v0, vt0 GROUP BY CAST((vt1.c0 IN ()) AS BLOB) HAVING v0.c0; -- 0ms;
SELECT CAST(vt1.c0 AS INTEGER) FROM vt1, v0 GROUP BY ((UPPER(DISTINCT vt0.c0)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0))) AND ((vt0.c0 IN ()))) HAVING (((~ (NULL))) NOT BETWEEN ((((0.6084396381014077)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((((vt0.c0))>((vt0.c0)))));SELECT ALL ((MIN(v0.c0)) NOT NULL), -607787859, CAST('-144483367' AS NUMERIC) FROM vt0 WHERE ((NOT (0Xffffffffc44841c2)));SELECT DISTINCT CAST(v0.c0 AS BLOB) FROM vt1;SELECT vt1.c0 FROM v0, vt1; -- 0ms;
SELECT ALL (((~ (v0.c0)))GLOB(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt1, v0, vt0 WHERE (TRIM(((0X30ce338f)<<(0.9427886117250476)))) LIMIT -1246923185; -- 0ms;
SELECT ((((((v0.c0)=(vt1.c0)))OR((((vt0.c0, vt1.c0, v0.c0))<>((vt1.c0, vt0.c0, vt1.c0))))))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt1, v0;SELECT NULLIF(UNLIKELY(-1.14690048E9), (((v0.c0))<=((vt1.c0)))), NULL, ((((((0.2192383885463085)OR(v0.c0)))AND(vt1.c0)))|((vt0.c0 IN ()))) FROM vt0 GROUP BY (((vt1.c0, vt1.c0, '^')) NOT BETWEEN ((v0.c0 COLLATE NOCASE, -1229603302, vt0.c0)) AND ((vt1.c0, CAST(vt1.c0 AS INTEGER), ROUND(0.4164946674011586, v0.c0))));SELECT DISTINCT (+ (-679302498)) FROM v0, vt0; -- 0ms;
SELECT CASE WHEN AVG(vt1.c0) THEN x'eb898d03' WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)>=(NULL)) WHEN vt0.c0 COLLATE BINARY THEN MIN(vt1.c0) END FROM vt1 WHERE (CAST((('-705428624')>=(0.9813801733122224)) AS REAL));SELECT DISTINCT (((((vt1.c0)%(vt0.c0))))>((vt1.c0))) FROM vt0;SELECT ALL CASE GROUP_CONCAT(v0.c0)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE ((vt0.c0)-(vt0.c0)) END, (((~ (v0.c0)))>(CAST(vt0.c0 AS INTEGER))), AVG(CASE WHEN 0.40508606441080763 THEN vt1.c0 ELSE vt0.c0 END) OVER () FROM vt0 WHERE (((CAST(x'a9d0' AS NUMERIC))LIKE(LIKELY(x'')))) ORDER BY vt1.c0 DESC, ((vt0.c0 IN ()) IN ()) DESC, ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)<<((v0.c0 IN ())));SELECT DISTINCT COUNT((v0.c0 IN ())), (((+ (v0.c0))) NOT NULL), (((((((((NULL)AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(vt1.c0)) IN ()) FROM v0 WHERE (CASE CASE x'35476988'  WHEN 1486997656 THEN 'qnC%Ky2쿁F' END  WHEN (('1708635030')+('')) THEN ((0.47783042846260104) NOT NULL) END) LIMIT -544307774 OFFSET 1203058186; -- 1ms;
SELECT DISTINCT CASE NULL  WHEN (vt1.c0 IN (v0.c0)) THEN (v0.c0 IN ()) END, LEAD(((((v0.c0) NOT BETWEEN (vt1.c0) AND (0xffffffff9379828f)))+(((9.64921835E8)GLOB(v0.c0)))), CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST('' AS NUMERIC) END, ((((v0.c0 IN ())))==((((vt1.c0)LIKE(v0.c0)))))) OVER (), ROW_NUMBER() OVER ( ORDER BY (((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt1.c0))))<(((v0.c0)<=(v0.c0)))) DESC, 1111915830 COLLATE RTRIM ASC) FROM v0, vt1 GROUP BY ((((((vt1.c0, v0.c0, v0.c0))>((v0.c0, vt0.c0, vt1.c0))), (v0.c0 IN ()), v0.c0 COLLATE NOCASE))=((vt1.c0, ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)), vt0.c0))), (((NOT (vt1.c0)))!=(vt1.c0 COLLATE NOCASE)), ((((vt0.c0)|(vt1.c0))) BETWEEN (((v0.c0)|(vt0.c0))) AND (LTRIM(vt0.c0, v0.c0))) HAVING ((((((((CASE WHEN vt0.c0 THEN v0.c0 END)OR(v0.c0)))OR((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, v0.c0, vt0.c0))))))AND(TYPEOF(vt0.c0))))OR(UPPER(vt0.c0)));SELECT ALL (NOT (NULL)), ((((v0.c0) NOTNULL)) NOT BETWEEN ((NOT (vt1.c0))) AND (HEX(v0.c0))), TYPEOF(DISTINCT (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) FROM vt0;SELECT -544307774, (((vt1.c0))<((CASE WHEN v0.c0 THEN x'' ELSE vt0.c0 END))), vt1.c0 FROM vt1, v0, vt0; -- 0ms;
SELECT 'sPwAKjP' FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END)AND(UNLIKELY(v0.c0))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(v0.c0)))OR(COUNT(*))) FROM v0 GROUP BY ((vt0.c0)GLOB((+ (vt0.c0))));SELECT CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) FROM v0, vt1, vt0; -- 1ms;
SELECT LAST_VALUE(((vt0.c0)IS NOT(v0.c0)) COLLATE BINARY COLLATE NOCASE) OVER () FROM vt0, vt1, v0 WHERE (TRIM(CASE x'9f98'  WHEN 0.7559224530613814 THEN 0.4046131647283051 END)); -- 0ms;
SELECT DISTINCT MIN(vt1.c0 COLLATE RTRIM) COLLATE NOCASE FROM vt0, v0, vt1 WHERE (CAST(((0.3579745433717211) NOT BETWEEN (x'') AND ('-1893826508')) AS REAL)); -- 0ms;
SELECT ALL GROUP_CONCAT(0.7181074796426831) OVER (), CASE WHEN '1377687173' COLLATE NOCASE THEN '#癩' END, ((((((x'')AND(vt0.c0)))OR(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((NULL IN (v0.c0)))) FROM v0, vt1, vt0; -- 1ms;
SELECT ALL COUNT(HEX(vt1.c0)) OVER () FROM v0, vt0;SELECT vt0.c0 COLLATE BINARY, (((v0.c0)) NOT BETWEEN (('J')) AND ((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0))))), ((((((((((vt0.c0)|(vt1.c0)))AND((NOT (v0.c0)))))OR((~ (vt1.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt0.c0 COLLATE BINARY)) FROM vt0;SELECT CAST((vt0.c0 IN ()) AS TEXT) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) COLLATE BINARY FROM v0 WHERE (CASE WHEN x'' THEN CASE NULL  WHEN '0.23866965354401526' THEN NULL ELSE NULL END END);SELECT v0.c0, TOTAL(v0.c0) OVER (), TOTAL(((((vt1.c0)OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM) FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT CASE TYPEOF(vt0.c0)  WHEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN LIKELY(v0.c0) END FROM vt0, vt1, v0 LIMIT -1469861005 OFFSET -1005886436; -- 0ms;
SELECT ((((((((((v0.c0) NOTNULL))AND(CAST(v0.c0 AS TEXT))))AND(((vt0.c0)<<(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(vt0.c0 AS TEXT))), CASE WHEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END THEN vt1.c0 END, CAST(v0.c0 AS REAL) COLLATE BINARY FROM vt0, vt1 WHERE ('1377687173');SELECT DISTINCT vt0.c0, CAST(((vt0.c0)LIKE(-1.262568453E9)) AS TEXT), UNLIKELY(NULLIF(vt1.c0, vt1.c0)) FROM v0 WHERE (0x1ab6d9f2) GROUP BY ((((('2010470094')) NOT BETWEEN ((NULL)) AND ((vt0.c0))))GLOB(((vt0.c0) ISNULL))) HAVING ((MAX(v0.c0))<>(HEX(DISTINCT 0.11027894904983149))) LIMIT -987557358 OFFSET -607049051;SELECT DISTINCT AVG(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) FROM vt0, vt1 WHERE ((('175939668' COLLATE BINARY)AND(0X30ce338f COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END)) FROM vt0, v0, vt1 ORDER BY LTRIM(((((v0.c0)OR(vt1.c0)))AND(vt1.c0))) DESC; -- 1ms;
SELECT DISTINCT CAST(vt1.c0 AS REAL), ((((vt1.c0)>>(v0.c0))) BETWEEN (((v0.c0)||(vt0.c0))) AND (vt1.c0)), CASE WHEN ((v0.c0)*(v0.c0)) THEN ((vt1.c0)/(vt0.c0)) WHEN NULL THEN (vt1.c0 IN ()) WHEN NULL THEN (~ (NULL)) ELSE ((((vt1.c0)OR(v0.c0)))AND(vt0.c0)) END FROM vt1, v0;SELECT CASE WHEN SUM(vt0.c0) THEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END WHEN ((v0.c0)%('Y*CA#HR?')) THEN (vt1.c0 IN (vt0.c0)) WHEN v0.c0 THEN x'' ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) END, ((((v0.c0) NOT NULL))%(((vt0.c0) IS FALSE))), SUM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) OVER ( ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN (((x''))>((v0.c0))) ELSE (vt1.c0 IN ()) END DESC  NULLS FIRST, (((IFNULL(vt1.c0, vt0.c0)))<=((NULL)))) FROM vt1, v0, vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC))<>(((v0.c0)GLOB(vt0.c0)))) FROM vt1, vt0, v0 WHERE (((((x'f0fe31bd')*('2010470094'))) NOT BETWEEN (((NULL) IS FALSE)) AND (('1377687173' IN ())))); -- 0ms;
SELECT ALL ((vt1.c0 IN ()) IN (((0.6730982557985046) IS TRUE))), CASE ((((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)) THEN ((vt1.c0) NOT BETWEEN (x'') AND (v0.c0)) WHEN (((vt1.c0))<((vt0.c0))) THEN CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END WHEN CAST(vt1.c0 AS TEXT) THEN ((v0.c0) NOT NULL) ELSE (NULL IN (v0.c0, 0.2817307335443002)) END, ((SQLITE_VERSION()) BETWEEN (NULL) AND (((vt1.c0) IS TRUE))) FROM v0;SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1 WHERE (((CASE ''  WHEN 0.9124803946794827 THEN NULL END) BETWEEN (UPPER(-2.023300788E9)) AND (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ()) FROM v0, vt0, vt1; -- 0ms;
SELECT ((((((((vt0.c0)OR(CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 WHEN 0.2528319417608038 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END)))AND(((vt1.c0)AND(vt1.c0)))))AND(vt0.c0 COLLATE BINARY)))AND((((vt0.c0))<>((vt1.c0))))) FROM vt0, vt1 WHERE (((((x'')/(0.07038210647845622)))!=(((NULL) NOT NULL))));SELECT DISTINCT ((((vt0.c0)==(vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (COUNT(v0.c0))), LAST_VALUE(((((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)))<(LOWER(vt1.c0)))) OVER (), (- ((+ (v0.c0)))) FROM vt1, v0, vt0 WHERE (((((load_extension(''))AND(((0.8909213955453968) IS TRUE))))AND(((x'')/(x'dcbf'))))); -- 1ms;
SELECT DISTINCT (((UNICODE(vt1.c0), CAST(vt0.c0 AS REAL), ((vt0.c0)IS(v0.c0))))>=((v0.c0, v0.c0, ((((vt1.c0)AND(NULL)))AND(vt0.c0))))), ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS NOT(CASE vt0.c0  WHEN vt1.c0 THEN 0x42ef1079 END)), PERCENT_RANK() OVER () FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT ALL ((v0.c0 COLLATE RTRIM)+(((v0.c0)IS(vt0.c0)))), (('&\r<')/(CAST(v0.c0 AS INTEGER))), CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS TEXT) FROM v0, vt0, vt1 WHERE ((+ ((((1.816923429E9, -1439232977, -1747802661))>((NULL, '', x'dbc9')))))); -- 0ms;
SELECT DISTINCT v0.c0 FROM vt1 WHERE ((NOT (((0.14697519444833773)LIKE(x'eb27'))))) LIMIT -1010665879 OFFSET 370170628;SELECT DISTINCT ((LAST_INSERT_ROWID()) ISNULL), (((vt1.c0)) NOT BETWEEN ((((vt1.c0)=(v0.c0)))) AND ((vt1.c0))), ((0.028688516927038443) IS FALSE) FROM vt1, vt0 LEFT OUTER JOIN v0 ON (CAST(vt1.c0 AS INTEGER) IN (x'c335fd64')) WHERE (LIKE((('-70471139')%(0X143ba85)), ((-585314367) NOT BETWEEN (x'') AND ('-204565887')))); -- 0ms;
SELECT DISTINCT ((MAX(v0.c0))%(0xffffffff92ac8eec)) FROM vt1, vt0, v0 WHERE (((((((((x'12d2')OR('1hk|)')))OR(x'fdb3')))OR(((('1797528424')) BETWEEN ((x'be2f')) AND ((1.122963577E9))))))OR(((0.4164946674011586)LIKE(-1.966481751E9))))); -- 0ms;
SELECT (((('')||(NULL))) ISNULL) FROM vt0, v0, vt1 WHERE ((((+ (-1.439232977E9))) BETWEEN (('' IN ())) AND (((0xffffffffc65ba7af)>=(NULL))))); -- 0ms;
SELECT DISTINCT LENGTH(vt0.c0 COLLATE RTRIM) FROM vt0 NATURAL JOIN vt1 WHERE ((((((NOT ('0.9379502539605439')))OR(COALESCE('hPꜱ', x''))))AND(COALESCE('853878321', NULL, 0X5320881a, 'jv-d')))); -- 0ms;
SELECT (((vt0.c0 IN (vt1.c0, vt1.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (((vt1.c0)OR(vt0.c0)))), CUME_DIST() OVER (), LOWER(DISTINCT CASE WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) FROM v0 ORDER BY CASE WHEN HEX(vt0.c0) THEN vt1.c0 ELSE '[]' END DESC;SELECT ALL (((((vt1.c0)+(v0.c0))))!=(((NOT (vt1.c0))))) FROM vt0, v0 WHERE ((((x'', x'', 0.2192383885463085)) BETWEEN ((((x'') BETWEEN ('') AND ('1349207274')), ((-401233888) NOTNULL), ((0Xffffffffe4aecf26)+(NULL)))) AND ((TRIM(x''), '1461945713' COLLATE BINARY, NULL))));SELECT GROUP_CONCAT((+ (x''))) OVER (), CAST(CASE vt1.c0  WHEN x'' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END AS INTEGER), (+ (v0.c0 COLLATE BINARY)) FROM vt1, v0 WHERE (CAST(CASE 0.9204906287506501  WHEN NULL THEN 0.11027894904983149 WHEN NULL THEN 1058085023 WHEN '' THEN 0.8890075600308951 ELSE '1708635030' END AS TEXT)) GROUP BY (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))>=(('1744688146')));SELECT ((((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))<('')) FROM vt1, vt0, v0 WHERE (COALESCE((((0.7031726351875289))>((x''))), IFNULL('s2[', 0Xffffffff912f82b9), (('0.2989588267131221') ISNULL), NULL COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) FROM v0, vt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(vt0.c0) OVER () FROM v0, vt1, vt0 WHERE ((((CASE NULL  WHEN x'e0740779' THEN NULL WHEN -1748728046 THEN 0.03849788572897517 WHEN '1379571914' THEN -458305754 ELSE -211501481 END))==(((((x''))<((0.8183575226528719))))))) GROUP BY CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END AS BLOB), ((((((v0.c0) BETWEEN (vt0.c0) AND (x'')))OR(CAST(vt1.c0 AS INTEGER))))AND((((('-195610539')AND(vt1.c0)))OR(vt0.c0)))), ((((((vt0.c0)%(vt1.c0)))OR(vt0.c0)))OR(highlight(vt1.c0, vt1.c0, v0.c0, v0.c0))) HAVING v0.c0; -- 1ms;
SELECT ALL ((((((vt0.c0)OR(v0.c0)))AND(vt0.c0))) ISNULL) FROM v0 WHERE (((CASE -8.06462457E8  WHEN '-375042200' THEN NULL WHEN NULL THEN x'' WHEN 0x42b1064e THEN NULL END)<(('\rꁔ|2ml' IN ()))));SELECT DISTINCT CASE NULL  WHEN (((vt1.c0)) BETWEEN ((v0.c0)) AND ((NULL))) THEN ('0.05533600202493283' IN (vt0.c0, vt0.c0)) ELSE ((-1914775613) BETWEEN (0.672306990125198) AND ('0.2989588267131221')) END FROM vt0, vt1, v0 WHERE ((NOT (((x'') ISNULL)))); -- 0ms;
SELECT (((v0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)))) AND ((CAST(vt1.c0 AS REAL)))) FROM v0, vt0 WHERE ((((((NULL))<=(('142969789'))))LIKE(x'25e5')));SELECT ((+ (v0.c0)) IN ()) FROM v0; -- 0ms;
SELECT ((((vt1.c0)IS(vt0.c0))) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (((((v0.c0)AND(v0.c0)))AND(v0.c0)))) FROM vt0, vt1 WHERE (((((0x7b8daf22 COLLATE RTRIM)AND(((((0xffffffffe2b2646a)OR(x'')))AND(NULL)))))OR(CAST(0xffffffffe4aecf26 AS INTEGER)))) LIMIT -2074774498 OFFSET -1748728046;SELECT DISTINCT (- (COUNT(*))), ROW_NUMBER() OVER (), vt1.c0 COLLATE NOCASE, ((vt0.c0 COLLATE NOCASE) NOT NULL), HEX(DISTINCT v0.c0) FROM v0, vt0;SELECT DISTINCT ((vt1.c0 COLLATE BINARY)>=(v0.c0 COLLATE NOCASE)), (NULL IN ()), NTILE(vt0.c0) OVER (), COUNT((- (vt0.c0))), LOWER(MIN(v0.c0)) FROM v0, vt0 WHERE (CAST((((('')OR(NULL)))OR(0.41471063064984115)) AS INTEGER));SELECT DISTINCT (((0.8268701395494544 IN ())) NOTNULL), ((CASE WHEN v0.c0 THEN vt1.c0 END) ISNULL), json_valid((+ (vt1.c0))) FROM vt1;SELECT DISTINCT (((v0.c0) IS FALSE) IN (CASE 'o)謻*%NzCt'  WHEN v0.c0 THEN 0xffffffffd7134d11 ELSE vt1.c0 END, CAST(v0.c0 AS BLOB))) FROM vt0, v0, vt1; -- 28ms;
SELECT DISTINCT (((v0.c0)<(x'b28f')) IN ()) FROM vt0, v0 WHERE (((((((((((0.523750927517408)AND(-1543657565)))OR('-1505708245')))AND('-70471139')))OR(x'54a1')))||(((0.013103725950708967)>=('᭨P?,Gl'))))) LIMIT -1515227654 OFFSET 1858941029; -- 3ms;
SELECT (((((vt0.c0)OR(x''))))>((((vt0.c0)==(vt0.c0))))) FROM vt1, v0;SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1; -- 0ms;
SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))OR(v0.c0)))AND(COALESCE(DISTINCT vt1.c0, v0.c0))))AND((vt1.c0 IN ()))), MAX(TRIM(DISTINCT '') COLLATE RTRIM), (((vt0.c0 IN ())) ISNULL) FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT ((((v0.c0)LIKE(vt0.c0))) NOT NULL) FROM vt0 GROUP BY (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL) HAVING ((((x'')||(vt1.c0)))IS NOT((~ (v0.c0))));SELECT DISTINCT (((((vt1.c0 IN ()))OR(json_remove(vt0.c0, vt0.c0))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) FROM v0, vt0 WHERE (((NULL)>(x'7bb5')) COLLATE NOCASE) LIMIT -204565887;SELECT ALL v0.c0, 0.1883377621688882, ((((GROUP_CONCAT(vt1.c0))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(vt0.c0)) FROM v0;SELECT DISTINCT (((vt0.c0 IN (vt1.c0)))!=(vt1.c0 COLLATE BINARY)) FROM vt1, vt0, v0; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS BLOB) COLLATE NOCASE FROM vt0;SELECT (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))||(((vt0.c0)||('')))) FROM vt0;SELECT DISTINCT NULL, (((v0.c0 IN (0.7217736753202839, x'')))AND(CAST(vt0.c0 AS INTEGER))), ((((0.5833266632189851) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (json_array_length(v0.c0, vt0.c0)) AND ((NOT (vt0.c0)))), ((COUNT(vt1.c0))+(((v0.c0) BETWEEN (NULL) AND (vt1.c0)))), (((vt1.c0 IN ())) NOTNULL) FROM vt0, vt1 GROUP BY CAST(vt1.c0 AS BLOB) COLLATE BINARY, CASE ((x'') IS TRUE)  WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 WHEN CASE WHEN vt1.c0 THEN '-607049051' ELSE v0.c0 END THEN LTRIM(vt1.c0, vt1.c0) WHEN (((x'')) BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN ((vt1.c0) ISNULL) WHEN ((((vt0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) WHEN x'a302' THEN TRIM(DISTINCT v0.c0, vt0.c0) ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, ((((vt1.c0)%(vt0.c0)))GLOB(STRFTIME(vt1.c0, vt0.c0, vt0.c0)));SELECT DISTINCT CASE CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE '' END  WHEN (- (v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END FROM v0, vt1 ORDER BY TRIM(DISTINCT ABS(vt0.c0), (+ (v0.c0))) ASC  NULLS FIRST;SELECT DISTINCT vt1.c0 COLLATE BINARY COLLATE BINARY FROM vt1, vt0 WHERE (CASE (NOT ('-166880634'))  WHEN (('1973228365')==(0xffffffffefb447fd)) THEN (('hl') NOTNULL) WHEN x'' THEN 0.4341107719955799 COLLATE RTRIM WHEN CASE NULL  WHEN 'cP' THEN 'Nnx_#p' END THEN (NULL IN ()) ELSE ((x'')IS(NULL)) END); -- 0ms;
SELECT (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ()), x'', (((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)), '' COLLATE RTRIM, ((((v0.c0)AND(vt0.c0)))OR(v0.c0))))=((IFNULL(v0.c0, vt1.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), UPPER(vt1.c0)))) FROM vt1, vt0;SELECT ((('-1244698016')) BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND ((((((((((v0.c0)AND(vt1.c0)))AND(vt0.c0)))OR('-2023300788')))OR(vt0.c0))))) FROM vt0 WHERE (((x'9af8')==(IFNULL(DISTINCT NULL, x'')))) ORDER BY (('PD')=(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))) ASC LIMIT -1181077517;SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS TEXT)) OVER ( ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((v0.c0 IN ()))))OR('_/0/*7R൭')) DESC  NULLS FIRST) FROM v0, vt0, vt1; -- 0ms;
SELECT ALL ((v0.c0) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) AND (CASE vt0.c0  WHEN -1.859157319E9 THEN vt1.c0 ELSE v0.c0 END)) FROM vt0, vt1;SELECT ALL CASE json_type(v0.c0)  WHEN CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END THEN ((((((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))OR(0.7894958497725554)))OR(vt0.c0)) ELSE 448190962 END FROM v0, vt0 WHERE (x'ddb1') ORDER BY ((((v0.c0) NOT NULL)) IS TRUE) DESC;SELECT ALL ((vt0.c0 COLLATE BINARY) IS FALSE) FROM v0;SELECT DISTINCT vt0.c0, ((((vt1.c0)AND(vt0.c0)))OR(x'28aceaca')) COLLATE BINARY, LAST_VALUE((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) IN (CAST(vt1.c0 AS BLOB)))) OVER () FROM vt1 NOT INDEXED, v0;SELECT DISTINCT (TIME(x'', 'Q9', x'fbbf0398') IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((v0.c0)+(v0.c0)))) FROM v0, vt0;SELECT DISTINCT (((SUM(v0.c0)))<>((SUBSTR(v0.c0, x'')))) FROM vt1, vt0 WHERE ((CAST(-208229552 AS INTEGER) IN ()));SELECT DISTINCT (((('-458305754')OR(((v0.c0)<=(0.747267825006745)))))OR(x'')) FROM vt0, v0, vt1 WHERE (((('-1503007202')) BETWEEN ((LAST_INSERT_ROWID())) AND ((('828619587' IN ('808905152', x'')))))) GROUP BY ((((vt0.c0)%(vt1.c0))) NOT BETWEEN (((vt1.c0)>=(NULL))) AND (CAST(vt0.c0 AS TEXT))); -- 0ms;
SELECT DISTINCT CAST((v0.c0 IN ()) AS REAL) FROM vt0 WHERE ((NULL COLLATE RTRIM IN (((((x'')AND(0.3623058855675816)))OR(-723722085))))) GROUP BY ((((((((((((vt0.c0)OR(x'')))OR(v0.c0)))AND(CASE WHEN vt1.c0 THEN vt0.c0 END)))AND((((vt0.c0, v0.c0, 0.6793872227515275, NULL, v0.c0)) BETWEEN (('1613425587', vt1.c0, vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))))))AND('1hk|)')))AND(((vt0.c0)GLOB(vt0.c0)))) HAVING CAST(vt0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE;SELECT ALL LOWER(vt0.c0) FROM vt1 WHERE ((((((((((((x'5657')AND(NULL)))OR('-201508651')))OR(NULL)))AND(0x3036e9c0))))<=(('-1515227654' COLLATE RTRIM)))) LIMIT -1834184980;SELECT DISTINCT GROUP_CONCAT(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER (), vt1.c0, ((json_quote(v0.c0))==((vt1.c0 IN (vt0.c0, vt0.c0)))) FROM vt0, vt1 WHERE ((((((((((NOT ('')))OR(LENGTH(0X47d4f550))))OR(json_array_length(x'', NULL))))OR(((((NULL)OR('25822515')))AND('0.3848469134666025')))))OR((((x''))>((''))))));SELECT DISTINCT LOWER(LIKELIHOOD(v0.c0, 0.9178363744317)) FROM v0, vt1, vt0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN (((NULL, 1796452056, x'2850'))<=((0xfffffffff76e2b7f, '60', 0x65d7b396))) END); -- 0ms;
SELECT AVG(v0.c0) FROM vt1, vt0 WHERE ((- (((x'') BETWEEN (NULL) AND ('-91375579')))));SELECT ALL MAX(TOTAL(COUNT(*))) FROM vt1, vt0, v0 NOT INDEXED;SELECT DISTINCT AVG(LTRIM('-91375579', vt1.c0) COLLATE NOCASE) OVER ( ORDER BY COALESCE(DISTINCT (((vt1.c0))>((NULL))), (vt1.c0 IN (vt0.c0, v0.c0))) DESC) FROM v0 WHERE (((((((']<')<>(NULL)))OR((((NULL))>=((-1993234928))))))OR(((0.7235558133002602)GLOB('?FO5')))));SELECT ((((v0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)<(vt1.c0))) AND ((vt0.c0 IN ()))) FROM vt1, vt0 WHERE (((0.4243525434358907)&(0.7235558133002602)) COLLATE RTRIM);SELECT UPPER(SQLITE_COMPILEOPTION_USED(v0.c0)) FROM vt1 WHERE ((NOT (CAST('-1580759319' AS INTEGER))));SELECT CAST(CAST(v0.c0 AS INTEGER) AS REAL), IFNULL(DISTINCT ((vt1.c0)%(v0.c0)), MAX(vt1.c0, v0.c0)), ((-1370297338) NOT NULL) FROM v0 WHERE (json_type(CAST(0.512547108700441 AS TEXT)));SELECT DISTINCT LAST_VALUE((((((v0.c0))<=((v0.c0))))IS NOT(((vt1.c0)<(v0.c0))))) OVER ( ORDER BY (((((vt1.c0 IN ()))AND(0.8267909878221068)))AND((v0.c0 IN ()))) ASC) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL)) NOT BETWEEN ((((vt0.c0, vt1.c0, vt1.c0))==((vt1.c0, v0.c0, vt1.c0)))) AND (SUM(v0.c0))), (~ (((v0.c0) NOT NULL))), CAST(CASE WHEN v0.c0 THEN vt1.c0 ELSE -1.998894207E9 END AS REAL), CAST(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN 0X1ec8971e THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS NUMERIC), CAST(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END AS BLOB) FROM vt0 WHERE ((0xffffffffd2491d2b IN ()));SELECT ALL TRIM(((vt0.c0)GLOB(vt0.c0)), (((v0.c0))<=((vt1.c0)))), CASE WHEN COUNT(v0.c0) THEN ((vt1.c0) NOT NULL) END, (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))<=(((v0.c0)LIKE(vt1.c0)))) FROM v0 WHERE (CAST(((((x'815a')OR(x'')))AND('jav|\7pL')) AS INTEGER));SELECT ((('-1267171873')) NOT BETWEEN ((0.9813801733122224)) AND ((0.8132876404969611))) COLLATE NOCASE FROM vt1 NOT INDEXED, vt0, v0 WHERE (((((('1470165814', NULL, NULL)) BETWEEN ((NULL, 0.6835450491281048, x'')) AND (('%}', 0.4046131647283051, '-70471139')))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((vt1.c0) BETWEEN (((vt0.c0)+(v0.c0))) AND (CAST(vt1.c0 AS TEXT))) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL CASE x''  WHEN AVG(v0.c0) THEN MIN(vt0.c0) ELSE CAST(vt1.c0 AS INTEGER) END FROM vt1 WHERE (NULL);SELECT ALL (((- (vt0.c0)))>>(CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) FROM vt0, vt1;SELECT DISTINCT (((UPPER(vt0.c0), v0.c0, CASE WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))<((vt0.c0, ((v0.c0) NOTNULL), (NOT (vt1.c0))))) FROM v0;SELECT ((AVG(NULL))GLOB((~ (NULL)))) FROM vt1, vt0; -- 0ms;
SELECT ALL 0.23142550705452458, COUNT((NOT (vt0.c0))) OVER ( ORDER BY ((((((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(x'888c')))AND(((vt0.c0)>(x'')))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN '-1439232977' WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END))  NULLS FIRST, (~ (((v0.c0)IS NOT(v0.c0)))) DESC RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW), -292837583, CAST(v0.c0 AS REAL) COLLATE NOCASE, ((CAST(vt1.c0 AS BLOB)) BETWEEN (((vt0.c0) ISNULL)) AND (((v0.c0) IS TRUE))) FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT '윹^' FROM vt0, v0 WHERE (CAST(NULL AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) ISNULL) FROM vt0 WHERE (((x'')/(((((818819983)OR('1691324688')))OR(0.2192383885463085))))) ORDER BY 0X5a049265  NULLS LAST;SELECT ALL TOTAL((+ (NULL))) OVER () FROM vt1, vt0 WHERE (((((2142668087)||(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT NTH_VALUE(x'', CASE WHEN NULL THEN UNLIKELY(DISTINCT '#+') ELSE ((vt0.c0) BETWEEN ('-1244698016') AND (vt1.c0)) END) OVER (), (((NOT (-1783042773)))/('0.9349820060364537')), ((((MIN(0Xffffffffa56a9b6f))AND((- (vt1.c0)))))OR((NOT (vt1.c0)))) FROM vt1, v0, vt0;SELECT DISTINCT CUME_DIST() OVER () FROM vt0, v0 WHERE ((- (NULL))) LIMIT -334860449; -- 0ms;
SELECT DISTINCT CASE ((v0.c0)>>(vt0.c0))  WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN NULL ELSE v0.c0 END THEN CAST(vt0.c0 AS NUMERIC) WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt1.c0)<=(vt1.c0)) WHEN NULL THEN ')(' END FROM v0, vt1 NOT INDEXED, vt0 GROUP BY TYPEOF(DISTINCT vt0.c0) LIMIT 99695374 OFFSET -1820753265; -- 1ms;
SELECT ALL (((((vt0.c0) BETWEEN (0.9601783163545291) AND (vt0.c0)), CAST(vt1.c0 AS REAL), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))<((('-969071625' IN ()), SUM(x''), (NULL IN ())))) FROM v0, vt1 WHERE (0.7776669532786951);SELECT (((v0.c0 IN (vt1.c0)))|(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))), v0.c0, '1816923429' COLLATE BINARY FROM vt1 WHERE ((((0.9037140419611727)) NOT BETWEEN (((('c')-(x'')))) AND (((NOT (''))))));SELECT DISTINCT '948523109', (((NOT (''))) BETWEEN (((vt1.c0)|(0.326305137685438))) AND (CAST(vt0.c0 AS TEXT))), LOWER(DISTINCT v0.c0 COLLATE RTRIM) FROM vt1, vt0, v0; -- 0ms;
SELECT DISTINCT (NOT ((+ (vt1.c0)))), ((((((vt0.c0))=((vt0.c0)))))>((((vt1.c0)<>(vt0.c0))))), ((UPPER(DISTINCT vt0.c0))=(0x67fdd412)) FROM v0 WHERE ((('V??W') BETWEEN ('0.8900602837888777') AND (x'')) COLLATE NOCASE) GROUP BY ((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END)<<((NOT (vt1.c0)))), (((- (vt0.c0))) IS TRUE), (v0.c0 COLLATE RTRIM IN ('m魣ⶤP')), (((vt1.c0)) BETWEEN ((((v0.c0)*(v0.c0)))) AND ((vt0.c0))), v0.c0 HAVING (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE;SELECT DISTINCT CUME_DIST() OVER () FROM v0, vt0 WHERE (((('')==(9.44894785E8)) IN (((NULL) ISNULL)))); -- 0ms;
SELECT (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0, v0 WHERE (CAST(((x'')AND(0xffffffffc3c268a1)) AS INTEGER)); -- 0ms;
SELECT (NOT (vt0.c0)) FROM vt1, vt0 WHERE (((((NULL) IS TRUE))>(-1.010665879E9 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((((vt1.c0) BETWEEN (vt0.c0) AND (NULL))))>((x''))), CASE WHEN (NOT (vt1.c0)) THEN 0xffffffffb5cf6a60 WHEN ((v0.c0)-(v0.c0)) THEN ((vt1.c0)/(NULL)) WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN (vt0.c0)) END, CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS NUMERIC) FROM vt0;SELECT DISTINCT ((((((vt1.c0))<((vt0.c0)))))>=((CAST(vt1.c0 AS REAL)))) FROM vt0 WHERE (((('-401233888')) BETWEEN ((0x1df62f5)) AND ((NULL))) COLLATE NOCASE) GROUP BY (~ (LIKELY(vt0.c0)));SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((((((0.34951055750319737 IN ()))OR(((('718689712'))<((x''))))))OR(CASE WHEN x'f97a' THEN 0.2528319417608038 END))); -- 0ms;
SELECT (NOT (((vt1.c0)&(vt1.c0)))), ((QUOTE(vt0.c0)) NOT BETWEEN (((vt1.c0)<<(v0.c0))) AND (v0.c0 COLLATE NOCASE)), vt0.c0 FROM vt1, vt0;SELECT (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY, ((x'') NOTNULL), ((((vt1.c0)/(vt0.c0))) NOTNULL) FROM vt1 ORDER BY CASE vt0.c0  WHEN ((vt1.c0)<>(v0.c0)) THEN '1084507695' END DESC;SELECT ALL (~ (((vt1.c0) BETWEEN (0Xffffffffab12620e) AND (vt1.c0)))) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS BLOB) AS BLOB) FROM vt1, v0, vt0 WHERE (((((0.9256946358148016)/(NULL)))AND(((x'ab33')AND(0.23604409552504035))))); -- 0ms;
SELECT CAST(CAST(vt1.c0 AS REAL) AS TEXT), CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) AS NUMERIC), (((((((((NOT (v0.c0)))OR(((((NULL)OR(vt0.c0)))AND(vt0.c0)))))AND(AVG(vt1.c0))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND((NOT (vt1.c0)))) FROM v0, vt0 WHERE ((((x'')) BETWEEN ((((('1203058186')) NOT BETWEEN ((0.28903489623636436)) AND ((x''))))) AND (((NOT ('w')))))) ORDER BY v0.c0 DESC;SELECT DISTINCT LEAD(((v0.c0)IS NOT(v0.c0)) COLLATE RTRIM, (- (v0.c0 COLLATE RTRIM)), (- (((v0.c0) NOT BETWEEN (v0.c0) AND ('aeuⰃ&y'))))) OVER (), (((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((vt0.c0, 0.38695212632256437, 0x7d4eb9bd)) AND ((vt1.c0, vt0.c0, v0.c0))))!=(vt1.c0 COLLATE RTRIM)), ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND((- (vt1.c0)))))OR(((vt0.c0)/(v0.c0)))) FROM v0;SELECT ALL ((((vt0.c0) IS FALSE))>=(0.6382614252428107)) FROM vt1, v0, vt0 ORDER BY '-44727898', CASE (vt0.c0 IN (v0.c0, vt1.c0))  WHEN vt1.c0 THEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END END, CASE WHEN 0X6d98f073 THEN x'311b' ELSE ((vt1.c0)AND(v0.c0)) END; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)+(((((0.9689810924940825)AND(vt1.c0)))AND(0.7171095361161129)))) FROM v0, vt1 WHERE (((((0.24452179920033912) NOTNULL)) IS FALSE));SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB), SUM((- (vt1.c0))) OVER ( ORDER BY ((247464224) NOT BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND ((v0.c0 IN (vt1.c0, v0.c0))))  NULLS FIRST), CASE (vt0.c0 IN (v0.c0, v0.c0))  WHEN vt0.c0 THEN ('621850602' IN ()) END FROM v0 WHERE (((((((0.739178949014902)-(NULL)))AND(((((0.631062571173849)AND(NULL)))OR(x'')))))AND(x'adb6')));SELECT vt1.c0 FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT (+ (vt1.c0)) FROM v0;SELECT ALL ((CAST(vt0.c0 AS NUMERIC))<<((+ (v0.c0)))) FROM vt0 ORDER BY x'353e', ((((x'')AND(((vt1.c0) IS FALSE))))AND(vt0.c0 COLLATE BINARY));SELECT ALL (((((+ (vt1.c0)))OR(((v0.c0)|(vt0.c0)))))AND(((vt1.c0) NOTNULL))) FROM v0, vt0, vt1 NOT INDEXED; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) NOTNULL) FROM vt0 GROUP BY (((CAST(v0.c0 AS REAL)))!=(((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) HAVING DATETIME(x'5180', ((v0.c0)&(v0.c0)), (~ (v0.c0))) LIMIT 1349207274;SELECT DISTINCT (((((vt0.c0))>=((NULL)))) NOT NULL) FROM vt0 GROUP BY CAST(v0.c0 AS NUMERIC) COLLATE RTRIM HAVING CAST(CASE WHEN vt1.c0 THEN '1823562368' ELSE vt1.c0 END AS BLOB) ORDER BY SQLITE_VERSION() DESC  NULLS LAST, ((((((vt1.c0)AND(v0.c0)))OR(v0.c0)))<=(((NULL) NOTNULL))) ASC  NULLS FIRST LIMIT -1246923185;SELECT ((vt0.c0)>(vt1.c0)) COLLATE BINARY, ((CAST(v0.c0 AS REAL)) NOTNULL), ((LOWER(v0.c0))IS('731759666')) FROM vt0, v0 WHERE ((((('' COLLATE BINARY)OR((('1-500000')&('0.3579745433717211')))))OR(x'' COLLATE RTRIM)));SELECT DISTINCT '金e-灐' FROM v0, vt1 WHERE ((~ (-877971645 COLLATE BINARY))); -- 1ms;
SELECT DISTINCT json_quote(((vt1.c0)-(vt0.c0))), (((vt0.c0) IS FALSE) IN ()), (((0.8388552516917593 IN ())) NOT BETWEEN (v0.c0) AND ((vt0.c0 IN (vt0.c0)))), (((('-607049051')+(vt1.c0)))GLOB(CASE WHEN vt0.c0 THEN v0.c0 END)), CASE vt0.c0  WHEN CAST(vt0.c0 AS INTEGER) THEN vt1.c0 ELSE v0.c0 END FROM v0, vt1;SELECT DISTINCT NULL FROM v0, vt1 WHERE (CAST((((1.75939668E8)) NOT BETWEEN ((')W')) AND ((NULL))) AS INTEGER)); -- 0ms;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((x'c263')) BETWEEN ((0.5921099083575374)) AND ((x'66ec')))))<=(((NOT ('9+')))))); -- 0ms;
SELECT CAST(vt0.c0 AS TEXT) FROM v0 WHERE (((QUOTE('591360492')) IS TRUE));SELECT DISTINCT 503868849 FROM vt1, vt0, v0 WHERE (TRIM(NULL)); -- 0ms;
SELECT CAST(((vt0.c0) NOT NULL) AS REAL) FROM v0;SELECT ((vt1.c0)&((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), ROW_NUMBER() OVER (), (((vt0.c0)>=(vt1.c0)) IN ()) FROM vt1, vt0, v0 WHERE (('516462366' IN ()) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((((((vt1.c0)OR(0.8890075600308951)))OR(0.19246564540449773)))AND(vt0.c0)))AND(vt1.c0))) BETWEEN (((((((((v0.c0)AND('0.48151241737592')))OR(vt0.c0)))AND(v0.c0)))OR(vt1.c0))) AND ((x'cc70' IN ()))) FROM vt1 WHERE ((CAST(x'33c71819bad5' AS BLOB) IN ())) LIMIT -1914775613 OFFSET 184439765;SELECT DISTINCT (- (0.8614020203717297)) FROM vt1, vt0, v0 GROUP BY (((vt1.c0 IN (vt1.c0)))IS(((0.6247063105270597)||(v0.c0)))), 0.012657999998416547, (((x'') NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ()) HAVING (NOT (CAST(v0.c0 AS BLOB))); -- 0ms;
SELECT AVG(MIN((((vt0.c0, x'', vt0.c0)) BETWEEN (('-1456322935', v0.c0, vt1.c0)) AND ((x'', vt1.c0, vt0.c0))))) FROM vt1, vt0, v0 WHERE ('FG') ORDER BY vt1.c0 DESC, ((vt1.c0 COLLATE RTRIM)IS(((((v0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;SELECT ALL (((((vt1.c0))<=((vt1.c0)))) NOT NULL), ((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0))) NOT NULL), ((((vt1.c0)%(vt0.c0)))>((vt0.c0 IN ()))) FROM vt1, v0, vt0 WHERE (((NULL)/((~ (x'f474f2cb'))))); -- 0ms;
SELECT DISTINCT MIN(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))) FROM v0 WHERE (((((((x'')OR(NULL)))AND(x'd04b')))<<(((NULL) NOT BETWEEN ('') AND (NULL)))));SELECT DISTINCT MAX(CAST(vt0.c0 AS INTEGER)) FROM v0, vt0; -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE ((((~ ('ꜱTꓷKPQQN'))) NOT BETWEEN ((((('-456904388')AND(x'c3a1')))OR(0xffffffff98132c01))) AND ((('0.8183575226528719') NOT BETWEEN (NULL) AND (0x21406a51))))); -- 0ms;
SELECT DISTINCT vt1.c0, vt0.c0, ((CASE vt1.c0  WHEN vt1.c0 THEN '-1246923185' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT NULL) FROM vt1 WHERE ((((0.34951055750319737)<(-1.469861005E9)) IN ()));SELECT ((((CAST(v0.c0 AS REAL))OR(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))AND(DATE(vt0.c0, v0.c0, v0.c0))) FROM vt1, vt0, v0 WHERE ((NOT (0.2668465715462821)) COLLATE RTRIM) GROUP BY CASE WHEN HEX(vt0.c0) THEN TYPEOF(DISTINCT v0.c0) END HAVING ((((vt0.c0))>((v0.c0))) IN ()); -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ())) NOTNULL), TRIM(DISTINCT (((vt0.c0))<>((vt0.c0)))), AVG(CAST(vt0.c0 AS BLOB)) OVER () FROM vt1, vt0; -- 0ms;
SELECT ALL ((vt0.c0) IS FALSE) FROM v0;SELECT DISTINCT ((vt1.c0) NOT BETWEEN ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((x'')))) AND (((0.6892363336447829) NOT BETWEEN (0.17217185062783125) AND (v0.c0)))), ((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))AND(((v0.c0) ISNULL))))OR((vt0.c0 IN ()))), (((('KRQKU3h#o') NOT BETWEEN (vt1.c0) AND (v0.c0)))&(((v0.c0)+(vt0.c0)))) FROM vt0;SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))<<(((v0.c0)GLOB(vt1.c0)))) FROM vt0 LIMIT 1666683368 OFFSET -476535148;SELECT DISTINCT LIKELY(DISTINCT x'') FROM vt0 LIMIT -1583429675 OFFSET -507406914; -- 0ms;
SELECT ALL ((((((v0.c0)!=(vt1.c0)))OR(0.9232854788452272)))AND((vt0.c0 IN ()))) FROM vt1, v0, vt0; -- 0ms;
SELECT ALL (((((0.1446265864001942, v0.c0, vt1.c0))<=((NULL, 0.4902981625901346, vt0.c0)))) NOT BETWEEN (((((x'')OR(vt0.c0)))OR(v0.c0))) AND ((v0.c0 IN ()))), (vt1.c0 IN (vt1.c0)) COLLATE NOCASE, COUNT(CASE v0.c0  WHEN 1.75939668E8 THEN vt0.c0 END) OVER ( ORDER BY 0.32252312383122084) FROM vt0, v0, vt1 GROUP BY GLOB(vt1.c0, vt0.c0) COLLATE RTRIM, ((((vt1.c0) NOT BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN ((((vt0.c0, vt1.c0, vt0.c0))=((vt0.c0, v0.c0, vt1.c0)))) AND ((NOT (v0.c0)))), ((((v0.c0)|(vt1.c0)))&(v0.c0)) HAVING CASE ((vt0.c0) BETWEEN (x'') AND (vt0.c0))  WHEN TRIM(v0.c0) THEN v0.c0 COLLATE RTRIM WHEN ((((v0.c0)OR(vt1.c0)))AND(NULL)) THEN ((v0.c0)<<(v0.c0)) WHEN json_valid('31417077') THEN ((v0.c0)<(v0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END END LIMIT -1386932322; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)%(vt1.c0))) OVER (), ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND((- (vt0.c0)))))AND((- (vt0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 END)), LAG((('-1020230204') BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)IS NOT(v0.c0)))), (((v0.c0))!=((v0.c0))) COLLATE BINARY, (v0.c0 IN ())) OVER (), ((((v0.c0)AND(vt0.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (((vt1.c0) NOT NULL))), HEX(COUNT(*)) FROM v0, vt0;SELECT FIRST_VALUE((((- (vt1.c0))) NOT BETWEEN (((NULL) NOT BETWEEN (NULL) AND (vt1.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) OVER ( ORDER BY v0.c0 DESC  NULLS FIRST) FROM vt1;SELECT DISTINCT (vt1.c0 IN ()) FROM v0, vt0 WHERE (CASE (((NULL)) NOT BETWEEN ((NULL)) AND ((x'')))  WHEN json_patch(NULL, 0Xfffffffffbff7e92) THEN (('2117471803') IS TRUE) WHEN UPPER(NULL) THEN (0.6780538618549493 IN ()) WHEN (('0.03849788572897517')<(0X5e159a28)) THEN ((NULL) NOT NULL) ELSE '[]' COLLATE BINARY END); -- 1ms;
SELECT ALL 1816923429 FROM v0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN TRIM(vt0.c0) THEN CASE WHEN v0.c0 THEN 0.6831539185696031 ELSE vt0.c0 END END FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT ((CASE WHEN v0.c0 THEN v0.c0 END)||((vt1.c0 IN ()))) FROM v0, vt0 WHERE ((((('')GLOB('+o')))IS NOT(LOWER(x'199c')))); -- 0ms;
SELECT ALL vt0.c0, ((((v0.c0) NOT NULL)) BETWEEN ('') AND (((vt1.c0)-(vt1.c0)))), SQLITE_VERSION() FROM vt1, vt0 WHERE (((((((((0.014879582847134643 COLLATE RTRIM)OR(((1.985720407E9)GLOB(x'')))))AND((x'7b61' IN ()))))AND((((',sGj/x^^'))>=((NULL))))))OR(NULL COLLATE NOCASE)));SELECT DISTINCT COUNT(((vt1.c0) IS TRUE)) FROM vt1 WHERE (((CAST('-1625472887' AS INTEGER))<<(NULL COLLATE NOCASE))) GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) ORDER BY (vt1.c0 IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN UNLIKELY(vt1.c0) END FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT (((- (v0.c0)))%((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM v0, vt1;SELECT ALL CHAR(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0)<=(vt0.c0)), vt0.c0) FROM vt0;SELECT DISTINCT SQLITE_COMPILEOPTION_GET(TRIM(v0.c0, vt1.c0)) FROM vt1, vt0, v0 WHERE ((((x'3d8ab8d3', CAST(x'' AS REAL), (('223096530')==(x''))))<((IFNULL(DISTINCT '-29133615', 3.1417077E7), 0.7651987267618238 COLLATE NOCASE, ((((x'')OR(x'')))OR(NULL)))))); -- 0ms;
SELECT (+ ((((vt0.c0))<=((vt0.c0))))) FROM vt1 WHERE ((((((('0.6059028941391116') NOT BETWEEN (NULL) AND (NULL)))AND(CASE NULL  WHEN 0Xffffffffee8ba731 THEN NULL END)))OR(((x'')%(0x7fa48ff2)))));SELECT DISTINCT GROUP_CONCAT('-989177280'), (((((((((((((vt0.c0 IN ()))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))OR(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt1.c0)<<(v0.c0)))))AND(TOTAL(v0.c0))))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))), FIRST_VALUE(((('0.9256946358148016'))>=((((vt1.c0)==(vt1.c0)))))) OVER () FROM vt1, vt0 WHERE (((TYPEOF(DISTINCT 0x25676ce4)) NOT BETWEEN (((((0.22613957891938918)OR(NULL)))AND('1744688146'))) AND (CASE WHEN 0.2528319417608038 THEN 'v' WHEN '1843800972' THEN '1450386726' WHEN NULL THEN 0.5776860846271092 WHEN 0.37811761987804327 THEN 'TKu|NC%A' WHEN x'' THEN 0.32063152401059347 ELSE 'I' END))) ORDER BY (~ (((v0.c0)*(v0.c0)))) ASC, (((vt0.c0 IN ())) ISNULL) DESC;SELECT ALL (((NULL)|(vt0.c0)) IN ()) FROM v0, vt1; -- 1ms;
SELECT DISTINCT ((COUNT(*)) IS FALSE), ((SUM(v0.c0))-((('1122963577')%(v0.c0)))), ((((vt1.c0) IS FALSE))/(COUNT(vt1.c0))) FROM vt0 LIMIT -143774849;SELECT DISTINCT (+ (0Xffffffffc2abc4ce)), CASE WHEN ((((vt1.c0)AND(vt1.c0)))AND(v0.c0)) THEN v0.c0 END, ((NULL)IS(((vt0.c0) IS TRUE))) FROM vt0, vt1;SELECT ALL SUM(((v0.c0)!=(vt0.c0))) FROM v0, vt0, vt1; -- 0ms;
SELECT (((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<=(((((vt1.c0))==((vt1.c0)))))), ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))-(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)), IFNULL(DISTINCT ((vt0.c0) IS TRUE), ((vt1.c0)||(vt0.c0))) FROM vt0;SELECT DISTINCT (((((v0.c0 IN ()))AND(CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(vt0.c0 COLLATE BINARY)), LIKELY(DISTINCT v0.c0 COLLATE BINARY), CAST(COUNT(*) AS NUMERIC) FROM vt0, vt1 WHERE (CASE (((NULL))>((0.8063878213551352)))  WHEN ((x'fae9') NOTNULL) THEN ((((((((NULL)OR('-1820753265')))AND(0x765bb057)))AND(NULL)))AND('1486997656')) WHEN (~ (NULL)) THEN ((0Xffffffffa863b373) BETWEEN (-697911955) AND (NULL)) WHEN CASE WHEN 1.461945713E9 THEN 0.8491913477604773 ELSE -1838347238 END THEN x'dd29' COLLATE BINARY END) LIMIT -1265138330 OFFSET -1209732471;SELECT DISTINCT NULL FROM v0, vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) FROM vt0, v0;SELECT ALL ((v0.c0 IN (vt1.c0)) IN ()), (((vt1.c0 IN ()))<<(((vt1.c0) NOTNULL))), v0.c0 FROM vt0, v0 WHERE (GLOB(('-1515227654' IN ()), CASE 0xffffffff97d2a5db  WHEN '-989177280' THEN 'pd' WHEN '>%c7pOy' THEN x'' WHEN 'P#g}4' THEN NULL END));SELECT DISTINCT ((CASE WHEN v0.c0 THEN vt0.c0 ELSE 0.46089820301331796 END) IS TRUE) FROM vt1 WHERE (((NULL IN ()) IN ())) LIMIT 1804259437;SELECT DISTINCT COUNT((vt0.c0 IN (v0.c0))) OVER () FROM vt0 WHERE (CAST(((x'c708')+(NULL)) AS NUMERIC));SELECT ALL LOWER(v0.c0) FROM vt0 WHERE ((~ (JULIANDAY('p(O', x'9af6', NULL, x'31a9', -333363165))));SELECT MIN((((vt1.c0))!=((vt1.c0)))) FROM vt1 WHERE (ABS(DISTINCT ((0.10407660180794687)>=('-1432825794')))) GROUP BY x'', (NOT ((((vt1.c0, '''9{}', vt1.c0))>=((vt1.c0, vt1.c0, vt0.c0))))), (- ((vt1.c0 IN ())));SELECT ALL ((0x70170358) NOT BETWEEN (v0.c0) AND (vt1.c0)) COLLATE BINARY, GROUP_CONCAT(ABS(vt0.c0)) OVER (), 0.4046131647283051 FROM vt1, vt0 NOT INDEXED;SELECT (NOT (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY, CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE BINARY, ((v0.c0) IS FALSE) COLLATE NOCASE, ((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(vt1.c0)), ((vt0.c0 COLLATE RTRIM)<=(vt1.c0 COLLATE NOCASE)), vt0.c0 FROM vt0, vt1 WHERE (((((('1-500000'))>((0.8423032596089464)))) NOT BETWEEN (0.06804109594467977 COLLATE BINARY) AND (CAST(NULL AS TEXT))));SELECT DISTINCT ((((NULL)) BETWEEN ((x'')) AND ((v0.c0))) IN ()) FROM v0, vt0 UNION SELECT DISTINCT (SUM(vt0.c0) IN (0x730b6b20)) FROM vt0, vt1; -- 1ms;
SELECT ALL AVG(((vt1.c0)>=(v0.c0))) FROM v0 WHERE ((((0.930729293190468))<=((((NULL)||(NULL))))));SELECT DISTINCT ((CAST(vt1.c0 AS BLOB))>(((vt1.c0) NOT NULL))), vt0.c0, ((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (((x'')<(vt1.c0))) AND (((vt0.c0) IS TRUE))) FROM vt0, vt1 GROUP BY ((((((((((1102476555)OR(vt1.c0)))AND(vt0.c0)))OR(0.04559325328726249)))OR(vt1.c0))) IS FALSE);SELECT ALL ((vt1.c0 COLLATE BINARY) ISNULL), ((((vt1.c0)>(vt1.c0)))|(vt0.c0)), CASE WHEN (((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, x'894a'))) THEN vt0.c0 ELSE CAST(v0.c0 AS REAL) END FROM vt1, vt0 WHERE (CAST(CAST(0.6744968812068238 AS TEXT) AS NUMERIC));SELECT DISTINCT (((((((((+ (vt1.c0)))AND(vt1.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS BLOB))))AND(((('9h'))>((vt1.c0))))))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)) FROM vt0, v0;SELECT ALL ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) ISNULL) FROM v0, vt1;SELECT DISTINCT (((v0.c0 IN ()))%(MAX(NULL))) FROM v0; -- 0ms;
SELECT ALL (((((((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ()), ((((vt0.c0) IS TRUE))!=(CAST(vt1.c0 AS INTEGER))), CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE, TOTAL(((vt1.c0) BETWEEN ('[]') AND (v0.c0))) OVER (), v0.c0 FROM vt0, vt1 WHERE (CASE ((0.8481996807224849)LIKE(NULL))  WHEN ((0.4004671054793232) NOT NULL) THEN x'' END) GROUP BY ((('-1001897534', rtreenode(0xffffffffb53dfb40, v0.c0), (- (vt1.c0))))=((((v0.c0)<>(v0.c0)), ((vt1.c0)OR(vt0.c0)), ((((vt0.c0)AND('1663367609')))OR('1816923429'))))), (((((vt0.c0 IN (vt0.c0)))OR(((0X69bd4064)AND(vt0.c0)))))AND((vt1.c0 IN (vt0.c0)))), CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, ''))) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((v0.c0)>(vt1.c0)) THEN (~ (v0.c0)) WHEN (vt1.c0 IN (vt1.c0, v0.c0)) THEN ((vt1.c0)&(0.7464439923581867)) ELSE v0.c0 END HAVING (((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))AND(COUNT(vt1.c0))))OR(vt1.c0 COLLATE BINARY)) ORDER BY CASE WHEN LIKELY(vt1.c0) THEN ((v0.c0)<(vt0.c0)) ELSE CAST(x'6fa0' AS TEXT) END ASC  NULLS LAST;SELECT ALL ((CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END)/((- (vt0.c0)))) FROM vt0, v0 WHERE ((NOT (((((((((((((1147876351)OR(x'0c99')))OR(x'')))OR('')))OR(NULL)))OR(-277439198)))OR(NULL)))));SELECT DISTINCT ((vt1.c0)<<(vt1.c0 COLLATE NOCASE)) FROM vt0, v0, vt1 WHERE ((((('0.3579745433717211')=('-723722085')))IS NOT((('1823562368')>>(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))LIKE(vt1.c0 COLLATE BINARY)) FROM vt0, v0 WHERE (((((NULL)<>(NULL)))/(((NULL) NOT BETWEEN (x'') AND (0.23882486443483852)))));SELECT DISTINCT (((((vt0.c0, vt1.c0, vt0.c0))<>((v0.c0, 1.55289358E9, v0.c0))))==(((v0.c0) NOT NULL))) FROM vt0;SELECT DISTINCT ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) COLLATE BINARY, IFNULL(DISTINCT (~ (vt1.c0)), vt1.c0), NULLIF(DISTINCT ((x'')*(vt0.c0)), NULL) FROM vt1, vt0, v0 NOT INDEXED WHERE (x'') LIMIT 383907993; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(v0.c0)))*((vt0.c0 IN (vt1.c0)))), ((vt1.c0)<<(((((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))), '-1859157319' FROM vt0;SELECT ALL NTH_VALUE(((((((((((((((vt0.c0)&(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(('력,䮁8-P9J7' IN (vt0.c0)))))OR(NULLIF(DISTINCT vt0.c0, vt0.c0))))AND(CAST(vt0.c0 AS REAL))), (((((vt0.c0)OR('143322699')))OR(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) OVER () FROM vt0;SELECT QUOTE(0.2632450171163757) COLLATE BINARY FROM v0, vt1 WHERE ((((0.3532420891090047)) NOT BETWEEN ((0.34951055750319737)) AND ((x'3996' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT CAST(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) AS REAL) FROM vt1, vt0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))||((+ (vt1.c0)))), ((((vt1.c0) IS TRUE))>>(vt1.c0 COLLATE RTRIM)), SUM(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0))) OVER ( PARTITION BY (~ (((vt0.c0) NOT NULL))), (('-1873045989')!=(v0.c0)) COLLATE NOCASE ORDER BY ((UNLIKELY(vt1.c0)) NOT BETWEEN (NULL) AND (vt1.c0 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0 COLLATE NOCASE  NULLS FIRST) FROM vt0 WHERE ((((x'')OR(NULL)) IN ()));SELECT ALL (+ (('1832817244' IN ()))) FROM vt0, v0, vt1 WHERE (((((0.930729293190468)OR((- ('C!i')))))OR((((0.7894958497725554, '[', -999372950, 0.04444025551755926, x'85d3')) NOT BETWEEN (('-2100719384', 'g5|H', '1128229832', NULL, NULL)) AND ((NULL, x'', '0.2470191094379368', 'u\濋j#B*r5', '￿c')))))) ORDER BY CAST((~ (vt1.c0)) AS REAL) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE (((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN rtreenode(vt0.c0, vt0.c0) THEN ((vt1.c0)GLOB(vt1.c0)) WHEN ((v0.c0)<<(NULL)) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN x'' THEN (- (v0.c0)) END FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT load_extension(((vt0.c0)>(vt0.c0))) FROM vt0, vt1, v0 GROUP BY v0.c0 HAVING CASE WHEN ((vt0.c0)GLOB(x'')) THEN (vt1.c0 IN ()) END; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT ALL (+ (((v0.c0)>(v0.c0)))) FROM v0, vt1, vt0 WHERE (((((x'') NOT BETWEEN (0.4686957085863862) AND ('-401233888')))*(((x'') NOT NULL)))); -- 1ms;
SELECT ALL ((vt1.c0 COLLATE NOCASE)GLOB(((vt1.c0) IS FALSE))) FROM v0 WHERE (((((1708635030) BETWEEN (0.0747266888077488) AND (-8.06462457E8))) NOT NULL)) GROUP BY (((vt0.c0 IN ())) IS TRUE) HAVING ((((((v0.c0))<((vt1.c0)))))==((((vt0.c0)&(vt0.c0))))) ORDER BY 2.10950304E9 DESC  NULLS FIRST;SELECT ALL COUNT(*) FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT ((MAX(vt1.c0)) IS FALSE) FROM v0, vt0 LIMIT 1575607435;SELECT ALL AVG(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END) OVER () FROM vt1, v0, vt0 WHERE (CASE WHEN (('[]') NOTNULL) THEN CAST('0.11227650942983847' AS BLOB) END); -- 0ms;
SELECT DISTINCT vt0.c0, (((vt0.c0)OR(v0.c0)) IN ()), COUNT(((v0.c0) NOT NULL)) FROM vt0, vt1 NOT INDEXED;SELECT ALL ((vt1.c0 COLLATE BINARY) NOT NULL) FROM vt1 WHERE (((0.012657999998416547 COLLATE NOCASE) NOT NULL)) LIMIT 1832475939; -- 1ms;
SELECT CASE WHEN CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 END, CASE WHEN CAST(v0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END, (((((((((((vt0.c0, vt0.c0, vt0.c0))<>((vt1.c0, vt1.c0, v0.c0))))OR(((vt1.c0)IS NOT(vt0.c0)))))AND(GROUP_CONCAT(vt1.c0))))OR((((vt0.c0))>=((vt1.c0))))))AND((vt0.c0 IN ()))) FROM vt0;SELECT (((+ (v0.c0)))||(((vt1.c0) IS FALSE))) FROM vt1 WHERE (((GLOB(0.5932835172117199, NULL)) IS FALSE)) LIMIT 1897719793 OFFSET -804306386;SELECT DISTINCT ((((v0.c0)>(v0.c0))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT v0.c0, 0xffffffffc50a5a40))) FROM v0, vt1, vt0 WHERE (CAST((+ (-301056853)) AS REAL)); -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE FROM vt1;SELECT GROUP_CONCAT(((vt0.c0)/(vt1.c0))), (('1985720407')<(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))), FIRST_VALUE(((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CAST(vt0.c0 AS INTEGER)))) OVER () FROM vt1, vt0, v0 WHERE (((((0xffffffffffffffff) NOT BETWEEN (0.4784779355533135) AND (NULL)))%(CAST('1-500000' AS BLOB)))) LIMIT 1473777308; -- 0ms;
SELECT DISTINCT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))IS(((vt0.c0) ISNULL))), vt0.c0, LIKE(((vt0.c0)>=(vt1.c0)), ((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(NULL)), '閵') FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt0.c0)))LIKE(CASE WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END))  NULLS FIRST, LAST_INSERT_ROWID();SELECT DISTINCT ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)-((NOT (vt0.c0)))) FROM v0, vt0, vt1 WHERE (((((-1838982151) BETWEEN (']s') AND (NULL)))&((- (NULL))))) LIMIT 623178346; -- 3ms;
SELECT ALL ((-544307774) NOT NULL), (+ (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt1.c0)))), ((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))*(x'34ed')) FROM vt1 ORDER BY ((('-1876722482')) BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))) DESC  NULLS LAST;SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 END)<((+ (vt0.c0)))) FROM v0, vt0; -- 0ms;
SELECT CASE vt1.c0  WHEN (NOT (v0.c0)) THEN vt0.c0 WHEN CASE WHEN NULL THEN vt1.c0 END THEN (((x''))<((vt0.c0))) WHEN ((vt0.c0)IS(vt0.c0)) THEN vt1.c0 END FROM vt0 WHERE (NULL);SELECT ALL (((vt0.c0)) BETWEEN (((((vt1.c0))<=((vt1.c0))))) AND ((TOTAL_CHANGES()))), x'', (((vt0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) FROM vt0, vt1 WHERE (((('' IN ()))+(0x2839532d))) LIMIT 1527456921 OFFSET 818819983;SELECT ((((vt1.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND (('G-㕛Ixi', vt0.c0, vt1.c0))) IN (((vt1.c0)LIKE(vt1.c0)))) FROM vt1, vt0, v0 LIMIT -1580759319 OFFSET -2065246152; -- 0ms;
SELECT ((((((vt0.c0)/(vt1.c0)))OR(((v0.c0) IS FALSE))))OR((((vt0.c0))<((v0.c0))))) FROM vt0, vt1, v0; -- 0ms;
SELECT ((v0.c0) NOT BETWEEN (CASE NULL  WHEN x'' THEN vt0.c0 END) AND (vt0.c0)), ((v0.c0) IS FALSE) COLLATE NOCASE, (((+ (v0.c0))) IS TRUE) FROM vt0;SELECT CASE ((v0.c0) IS FALSE)  WHEN (~ (v0.c0)) THEN ((vt1.c0)<(vt0.c0)) END FROM vt1, v0 WHERE ((+ (x'')) COLLATE RTRIM);SELECT UPPER('-1705962124' COLLATE NOCASE) FROM v0, vt1 GROUP BY v0.c0, (((vt1.c0 IN (v0.c0)))<=(v0.c0 COLLATE RTRIM)), (NOT (((vt0.c0)%(vt1.c0))));SELECT DISTINCT ((AVG(vt1.c0))>=(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END)) FROM v0, vt1, vt0 GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ISNULL) HAVING ((COUNT(v0.c0))AND(NULL)); -- 0ms;
SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) AND ((CAST(x'' AS INTEGER)))), CUME_DIST() OVER (), NTH_VALUE(v0.c0, CAST(((((vt1.c0)OR(v0.c0)))AND(vt0.c0)) AS NUMERIC)) OVER () FROM vt0, v0, vt1 WHERE ((((NULL)) NOT BETWEEN (((('') NOT NULL))) AND ((-9.1375579E7 COLLATE RTRIM)))); -- 0ms;
SELECT ALL ((((((0Xffffffffce0a94fe)AND(vt0.c0)))AND(vt1.c0)))-((('0.3556558890612731') BETWEEN (vt1.c0) AND (vt1.c0)))), (((vt1.c0)%(vt1.c0)) IN ()), x'' FROM v0, vt0;SELECT CASE WHEN CAST(v0.c0 AS BLOB) THEN 'gj\Nᚼ,兏' ELSE ((-874079379) BETWEEN (v0.c0) AND (vt0.c0)) END, ((((((v0.c0)<(v0.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((v0.c0)-(vt0.c0)))), vt0.c0 FROM v0, vt1 WHERE (((- ('')) IN (CASE WHEN NULL THEN '-141665300' WHEN x'' THEN '1093409244' WHEN x'' THEN '-611139096' ELSE NULL END)));SELECT DISTINCT x'' FROM vt1 LIMIT -989177280 OFFSET -1439232977; -- 1ms;
SELECT DISTINCT (- (CAST(v0.c0 AS REAL))) FROM vt1, vt0;SELECT ALL ((((0.13136178885324878)AND(vt1.c0))) IS FALSE) FROM v0, vt0 ORDER BY LIKELIHOOD((((vt1.c0))>=((vt1.c0))), 0.7439013442318159)  NULLS FIRST, (((((v0.c0, v0.c0, vt1.c0, vt1.c0, v0.c0))==((0.03069985682353793, vt1.c0, vt0.c0, vt0.c0, '^agMwvz')))) BETWEEN ((((x'448e'))<((vt0.c0)))) AND (0.4978060143588432)) DESC, 0Xffffffff93c924b4 ASC;SELECT TOTAL(((vt0.c0)GLOB(vt0.c0))) FROM v0, vt0, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))) AND (((v0.c0) ISNULL))) ASC  NULLS FIRST, (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) IN ())  NULLS LAST; -- 0ms;
SELECT ((((vt0.c0)OR(v0.c0)))OR(vt0.c0)) COLLATE BINARY FROM v0, vt1 WHERE (((UNLIKELY(DISTINCT 0.7470694271206906))&(((('-607787859'))<=((NULL))))));SELECT ALL (~ (TOTAL(vt1.c0))) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL (- (((v0.c0)+(vt0.c0)))) FROM v0, vt0 WHERE ((((NULL)) NOT BETWEEN (((('') NOT NULL))) AND ((CAST(NULL AS TEXT))))); -- 1ms;
SELECT (((((v0.c0 IN ()))OR(MAX(vt1.c0))))AND((vt0.c0 IN (v0.c0)))) FROM vt1, vt0, v0 WHERE ('N('); -- 0ms;
SELECT DISTINCT (((SQLITE_COMPILEOPTION_USED(v0.c0)))<((vt1.c0))) FROM vt1, vt0, v0 WHERE ((((NULL)) BETWEEN ((('623178346' IN ()))) AND ((NULL)))); -- 0ms;
SELECT ALL CAST(((v0.c0) IS TRUE) AS NUMERIC) FROM vt0 WHERE (((((CAST('' AS INTEGER))OR(((NULL) BETWEEN (x'23dd') AND (NULL)))))AND(((NULL)GLOB('')))));SELECT ALL ((UNLIKELY(DISTINCT vt0.c0))<=((v0.c0 IN (vt1.c0)))), DENSE_RANK() OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS), (((~ (vt0.c0))) NOT BETWEEN ((v0.c0 IN ('964921835'))) AND ((NOT (v0.c0)))) FROM vt0;SELECT ((((v0.c0)/(NULL))) NOT BETWEEN (v0.c0) AND (((vt0.c0)<=(vt0.c0)))) FROM vt1;SELECT ALL CAST((~ (vt1.c0)) AS TEXT) FROM vt1, vt0; -- 0ms;
SELECT ((CAST(vt1.c0 AS BLOB)) IS FALSE) FROM v0, vt1, vt0 WHERE ((('0.8890075600308951' COLLATE BINARY) BETWEEN ('' COLLATE BINARY) AND ('213320347'))); -- 0ms;
SELECT ((vt0.c0)LIKE(LTRIM(vt0.c0, vt0.c0))) FROM vt1, v0, vt0; -- 0ms;
SELECT ((((((vt1.c0) NOTNULL))AND(((vt1.c0)/(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)) FROM vt1;SELECT DISTINCT (((~ (vt0.c0)))AND(COUNT(*))) FROM vt0, v0, vt1 WHERE ((((0.031282754679665126) NOT BETWEEN (0.6280424718923849) AND (x'')) IN ((('') NOTNULL), (NULL IN ())))); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE BINARY AS INTEGER) FROM v0 WHERE (((((((0X18a0533))<>((0.36438780141293425)))))>((CAST('240746210' AS INTEGER)))));SELECT (('' COLLATE NOCASE)<((NOT (vt0.c0)))), GROUP_CONCAT(1.663367609E9) OVER ( ORDER BY DATE(((vt0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)), ((v0.c0) NOT NULL), (vt1.c0 IN ()), (~ (0x1c4b8ed5)), (+ (0x49c83302)))  NULLS LAST, ((((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))=(vt0.c0)) ASC), CASE WHEN vt1.c0 THEN rtreenode(v0.c0, vt0.c0) END FROM vt0, v0, vt1; -- 1ms;
SELECT ALL CAST(v0.c0 AS NUMERIC), ((((vt0.c0) NOTNULL)) IS TRUE), UPPER(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END) FROM v0 NOT INDEXED, vt0, vt1 WHERE ((CAST('-893334590' AS TEXT) IN ())); -- 0ms;
SELECT DISTINCT ((((vt1.c0)|(vt0.c0)))/(LIKELY(DISTINCT vt0.c0))) FROM vt1, v0;SELECT DISTINCT ((((v0.c0)==(vt1.c0)))GLOB(CAST(vt1.c0 AS BLOB))) FROM vt1;SELECT ALL 0.5150670151191455 FROM vt1, v0, vt0 LIMIT 606853289 EXCEPT SELECT (((vt1.c0)) BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND (((((vt1.c0, vt1.c0, v0.c0))<=((v0.c0, vt0.c0, v0.c0)))))) FROM vt1, v0, vt0 ORDER BY ((CASE WHEN 0x63bf34bd THEN vt1.c0 END) NOT BETWEEN (vt0.c0) AND ((v0.c0 IN ()))) ASC  NULLS FIRST;SELECT DISTINCT ((AVG(vt1.c0)) BETWEEN ('X]P?MV' COLLATE RTRIM) AND ((+ (v0.c0)))) FROM vt1, v0; -- 0ms;
SELECT (((v0.c0)) BETWEEN ((x'')) AND ((CAST(-5.85314367E8 AS TEXT)))), CUME_DIST() OVER (), x'2424' FROM vt1, vt0;SELECT DISTINCT SUM(((v0.c0)LIKE(0.9689941744570235))) OVER () FROM vt0, vt1, v0 WHERE ((CASE WHEN 0.19204490747674763 THEN 0.07038210647845622 END IN ((('0.28903489623636436')-('0.7235558133002602')), ((NULL) NOTNULL)))); -- 1ms;
SELECT DISTINCT ((((x'')IS(v0.c0))) NOT BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND ((((vt1.c0, vt0.c0, vt0.c0))==((vt1.c0, v0.c0, vt1.c0))))) FROM vt0, vt1 GROUP BY (((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) IN ()), (NOT (((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ());SELECT PERCENT_RANK() OVER (), (+ (((v0.c0) IS TRUE))), STRFTIME(SUM(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('vv')), vt0.c0, vt1.c0, ((v0.c0)|(vt1.c0))) FROM v0, vt1, vt0 WHERE (CASE WHEN (- (0.23558630299335193)) THEN '6#0|' COLLATE NOCASE WHEN ((((0.9865374905246984)OR(x'')))AND(NULL)) THEN '45767232' COLLATE BINARY WHEN ((((0x1ec8971e)OR(0x3560c524)))OR(x'c2a4')) THEN (x'' IN ()) WHEN NULLIF(DISTINCT 0.29408241197473706, x'') THEN x'' COLLATE BINARY WHEN 0X67fdd412 THEN CAST(x'd2a8ebc8' AS TEXT) END) GROUP BY v0.c0 COLLATE NOCASE HAVING CASE vt0.c0  WHEN (((vt0.c0))<>((vt0.c0))) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN ((vt0.c0)AND(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN vt1.c0 COLLATE NOCASE THEN LIKELIHOOD(vt0.c0, 0.6195618544927862) END; -- 0ms;
SELECT ALL ABS(DISTINCT (vt0.c0 IN ())) FROM vt1, v0; -- 0ms;
SELECT RANK() OVER (), (vt0.c0 IN (vt0.c0)) COLLATE NOCASE, (((((vt1.c0 IN ()))AND(COALESCE(vt0.c0, vt0.c0, v0.c0, vt1.c0))))AND(910057811)) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT CASE WHEN ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN 'RN쿁' WHEN CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN HEX(DISTINCT '-1043708227') WHEN SUM(v0.c0) THEN NULLIF(DISTINCT vt1.c0, v0.c0) ELSE SUM(v0.c0) END FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT HEX(DISTINCT json_array_length(vt1.c0, vt1.c0)) FROM v0;SELECT DISTINCT (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM v0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE NOCASE, CASE WHEN (v0.c0 IN ()) THEN vt0.c0 ELSE (NOT (vt1.c0)) END, (- (CAST(vt0.c0 AS BLOB))) FROM v0, vt0;SELECT ((vt1.c0 COLLATE NOCASE)>=(CAST(vt1.c0 AS NUMERIC))) FROM vt0 GROUP BY (v0.c0 IN ()) COLLATE RTRIM HAVING ((CASE WHEN v0.c0 THEN vt1.c0 END) NOTNULL);SELECT DISTINCT COUNT(*) OVER () FROM v0, vt0 ORDER BY vt0.c0 ASC LIMIT 1341896868; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((vt1.c0) IS TRUE))/(vt0.c0)), json_type(TYPEOF(vt0.c0)), (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND (((+ (vt0.c0))))), MAX('Cయ7') FROM vt0, vt1, v0 WHERE (((((((((ABS('-1088727302'))OR(((x'')>(1.486997656E9)))))AND(CASE WHEN NULL THEN 0.8716591520737781 ELSE x'6505' END)))OR(((('1949803984', 0.47783042846260104, x'e01b')) BETWEEN (('G?t-jrT', x'7100', 0.1864911785855795)) AND ((0.9037140419611727, '', 0.7968962277575116))))))AND(((x'') BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END) BETWEEN (((vt1.c0)>>(v0.c0))) AND ('''z')), CAST(((vt1.c0)IS(0x40bbd5fb)) AS TEXT), COUNT(*) OVER () FROM vt1, v0, vt0 GROUP BY CASE WHEN 0.4619626479470651 THEN ((vt0.c0) IS FALSE) END HAVING (((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))) AND ((((v0.c0)<<(NULL))))); -- 0ms;
SELECT ALL ((((vt0.c0)>=(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN x'' ELSE v0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) FROM vt1, vt0, v0; -- 1ms;
SELECT CASE WHEN (v0.c0 IN ()) THEN ((0xffffffff97a7f978)+(v0.c0)) ELSE ((((((((v0.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(v0.c0)) END FROM v0, vt0;SELECT DISTINCT ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) FROM v0, vt0, vt1; -- 7ms;
SELECT ((((COUNT(vt1.c0))AND(v0.c0 COLLATE NOCASE)))AND(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) FROM vt1 WHERE ((((1591038039)IS('w^')) IN ()));SELECT (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(NULL)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL)))) FROM v0, vt0, vt1; -- 0ms;
SELECT ALL ((CAST(v0.c0 AS BLOB))AND(((vt0.c0) NOT NULL))) FROM v0 WHERE (CHANGES()) GROUP BY ((((v0.c0) IS TRUE)) NOT BETWEEN (('-1018008855' IN (v0.c0, vt1.c0))) AND (((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), 0.369419887818941 COLLATE RTRIM COLLATE RTRIM, json_extract(((vt1.c0)<>(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)), vt0.c0, ((vt0.c0) IS FALSE), ((vt1.c0)>>(vt1.c0))) HAVING ((((((((v0.c0)OR((((vt1.c0, v0.c0, vt0.c0))<=((v0.c0, vt1.c0, ' f P'))))))OR(((vt1.c0)-(v0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR(vt0.c0 COLLATE NOCASE));SELECT DISTINCT TRIM(DISTINCT (~ (vt0.c0)), (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) FROM v0, vt1 WHERE ('-1515227654');SELECT DISTINCT (MAX(vt0.c0) IN ()), ((((((((((vt1.c0)AND(NULL)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (x'')), ((vt0.c0)>(vt1.c0)) COLLATE BINARY, ((((((((((((vt1.c0)OR(((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt1.c0)))))AND(((vt0.c0)<<(vt1.c0)))))OR((vt0.c0 IN ()))))OR(CAST('ꁡA/3\n' AS TEXT))))OR(vt1.c0)))AND(TYPEOF(DISTINCT NULL))), (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (vt0.c0)) FROM vt1 WHERE ((((((((NULL)) BETWEEN ((NULL)) AND ((x'423c'))))OR(((1416745734)-(x'e233')))))OR(UPPER(-1642751640)))) ORDER BY ((((v0.c0)<>(vt1.c0)))*(NULL));SELECT DISTINCT ((v0.c0 IN (vt1.c0)) IN ()) FROM v0, vt0 LEFT OUTER JOIN vt1 ON ((ABS(v0.c0))>=(TYPEOF(x''))) WHERE ((((((1203058186, '-1e500', x'db7b'))<((0.8854715398757474, 0.06006367455312134, '1108587672')))) NOTNULL)); -- 0ms;
SELECT (((CASE WHEN vt0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 END))>((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-70471139' END))) FROM vt0, vt1;SELECT DISTINCT x'788c' FROM vt1, v0 WHERE (LIKELIHOOD(DISTINCT MIN(-1834184980, 0.9496696369608544, x'58109fbe', x'0108'), 0.5222058393691513)); -- 0ms;
SELECT DISTINCT vt1.c0, CASE WHEN v0.c0 THEN vt0.c0 COLLATE RTRIM ELSE (vt0.c0 IN ()) END, ((((((((v0.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(json_patch(vt0.c0, vt0.c0))), CASE WHEN ((vt0.c0)>=(v0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END END, LAST_VALUE((((((NOT (v0.c0)))AND(v0.c0 COLLATE BINARY)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) OVER () FROM v0 ORDER BY (vt0.c0 IN (v0.c0, CASE vt0.c0  WHEN v0.c0 THEN NULL ELSE vt1.c0 END)) ASC;SELECT DISTINCT ((((vt1.c0)) BETWEEN ((NULL)) AND (('w^'))) IN (((((0.8872708734178527)AND(vt0.c0)))OR('2020304489')))) FROM v0 WHERE (CASE WHEN ((NULL)>=(x'')) THEN IFNULL(0.19995749516507877, x'98c8') WHEN ('43063047' IN ()) THEN ((1823562368) ISNULL) WHEN ((-1.820753265E9)==(x'13f0')) THEN (~ (x'')) END);SELECT DISTINCT (+ (((vt0.c0)&(v0.c0)))) FROM vt1, v0;SELECT DISTINCT (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END IN (((vt0.c0)OR(vt1.c0)), (((vt1.c0))==((vt1.c0))))), (~ (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 END)), (((((v0.c0))>=((vt0.c0))))IS(((v0.c0)<>(vt1.c0)))) FROM v0, vt0;SELECT ALL '0.3579745433717211' FROM vt0, v0; -- 0ms;
SELECT ALL vt1.c0 FROM vt1, vt0, v0; -- 1ms;
SELECT DISTINCT LAST_VALUE(CAST((v0.c0 IN ()) AS NUMERIC)) OVER () FROM v0 WHERE (LIKELIHOOD(DISTINCT ((((x'')OR('䚌 S')))AND(x'')), 0.6023317682738044)); -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c0 AS TEXT)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), SQLITE_COMPILEOPTION_USED(vt1.c0) COLLATE NOCASE, ((('')) BETWEEN (((((v0.c0))<=((vt1.c0))))) AND (((vt0.c0 IN ())))) FROM vt1 WHERE (rtreenode(((-1.416653E8)==('_w')), ((((((((0.10711080149827312)AND(NULL)))OR(0.34951055750319737)))AND(NULL)))OR(x'0619')))) GROUP BY (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) IN (v0.c0 COLLATE BINARY)) HAVING LIKELIHOOD(DISTINCT SQLITE_VERSION(), 0.22761852706341357);SELECT DISTINCT LAST_VALUE(vt1.c0) OVER () FROM vt1, v0 WHERE (((((x'26a9')==('*')))>=(((x'')>>(0.633857911921912))))) LIMIT 623178346 OFFSET -1748728046; -- 0ms;
SELECT ALL (v0.c0 IN ()) FROM vt1, v0 WHERE (((((((0.9010083069929767) BETWEEN (0.2781151747009437) AND (895249310)))OR((('-562416179')*(0x49739932)))))AND(('' IN ())))); -- 0ms;
SELECT DISTINCT HEX(((((v0.c0)AND(vt0.c0)))OR(NULL))) FROM vt0 WHERE ((((((('0.747267825006745')OR(0Xffffffffdbd12aa5)))AND(0.41966990521208525))) IS FALSE));SELECT ALL (((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), vt1.c0 COLLATE BINARY, vt0.c0, ((vt0.c0)<<(v0.c0)), NULLIF('now', v0.c0))) AND ((vt0.c0, ((((vt1.c0)OR(vt0.c0)))AND(v0.c0)), CASE WHEN vt1.c0 THEN v0.c0 END, ((vt0.c0)>=(v0.c0)), ((v0.c0)||(v0.c0))))) FROM vt1 FULL OUTER JOIN v0 ON ((x'')%(CASE WHEN x'7e0d99c7' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE (CAST(((((NULL)OR(NULL)))OR(x'800f')) AS INTEGER)) GROUP BY ((json_insert(v0.c0, v0.c0, v0.c0)) IS TRUE);SELECT DISTINCT MAX((vt0.c0 IN ())), CASE vt1.c0 COLLATE RTRIM  WHEN CAST(vt1.c0 AS BLOB) THEN (- (vt1.c0)) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END END, TRIM(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) FROM vt0;SELECT ALL ((CAST(vt1.c0 AS NUMERIC))>((((vt1.c0, '-2023300788', v0.c0)) BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, vt0.c0))))), ((vt0.c0 IN ()) IN (((vt1.c0) BETWEEN (v0.c0) AND (vt0.c0)))), vt0.c0 FROM vt0, vt1 GROUP BY UNLIKELY(((NULL) BETWEEN (vt1.c0) AND (1.612488879E9))), CAST(((vt0.c0) IS FALSE) AS TEXT), vt1.c0, x'c082deca', CASE ((((-638031358)OR(v0.c0)))AND(vt0.c0))  WHEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END THEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt1.c0)) END;SELECT DISTINCT ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) COLLATE BINARY FROM vt1 INNER JOIN v0 ON ((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))) IS TRUE) CROSS JOIN vt0 ON v0.c0; -- 1ms;
SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)))*(vt1.c0)) FROM vt1, vt0; -- 0ms;
SELECT ((((v0.c0) NOT NULL))<<(((v0.c0) IS FALSE))) FROM vt0, v0 GROUP BY (((vt0.c0 IN ()))&((vt0.c0 IN ()))) HAVING (((vt1.c0, v0.c0, vt0.c0)) BETWEEN ((GROUP_CONCAT(vt1.c0), ((v0.c0)<(v0.c0)), ((v0.c0)*(v0.c0)))) AND ((((vt0.c0)AND(vt0.c0)), (vt1.c0 IN ()), ((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));SELECT ALL GROUP_CONCAT(((vt0.c0)%(v0.c0))) FROM vt1;SELECT ALL MIN(STRFTIME(vt1.c0, vt0.c0, vt1.c0)) FROM vt0, vt1, v0 ORDER BY CAST(CAST(v0.c0 AS REAL) AS REAL), 0.21302715923669446; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT x'', ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt0.c0))), '0.6247063105270597', ((((vt1.c0) IS TRUE)) NOT BETWEEN (0.4372956062213176) AND ((~ (vt0.c0)))) FROM v0 WHERE (((0.0656955279173137)>>('2107015948')) COLLATE RTRIM);SELECT ALL ((((((v0.c0)IS(vt1.c0)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(CASE WHEN v0.c0 THEN vt1.c0 END)) FROM v0, vt1, vt0 ORDER BY (((- (vt1.c0))) BETWEEN (((vt0.c0)==(v0.c0))) AND ((vt0.c0 IN ()))) DESC; -- 0ms;
SELECT vt1.c0 FROM v0, vt0 LIMIT 959966797 OFFSET 1744688146;SELECT DISTINCT NULL COLLATE RTRIM, ((x'') ISNULL), (COALESCE(vt0.c0, vt1.c0) IN ()) FROM vt0, v0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) NOTNULL) THEN TOTAL(vt1.c0) ELSE vt1.c0 COLLATE BINARY END FROM v0, vt1, vt0 WHERE ((((('0.8183575226528719')OR((((('1717524653')AND('-1998894185')))OR('-1262568453')))))OR(CASE '-204565887'  WHEN '-1240250820' THEN 0.185262351121953 END))); -- 0ms;
SELECT ALL SUM(CAST(v0.c0 AS BLOB)) OVER (), DENSE_RANK() OVER (), CASE ABS(v0.c0)  WHEN '' THEN (((vt0.c0, v0.c0, vt0.c0))>((vt0.c0, 'HzB#', vt0.c0))) END FROM vt1 WHERE ((((('-334860449') NOT NULL))GLOB(0X355c6b9e)));SELECT DISTINCT RANK() OVER () FROM vt0, vt1, v0 WHERE (UPPER((((0.030481875758205046, '', x''))>(('1823892697', NULL, '{}'))))); -- 0ms;
SELECT ((COUNT(NULL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) AND (((vt0.c0)LIKE(vt1.c0)))) FROM vt0, v0;SELECT DISTINCT CASE WHEN v0.c0 THEN 0.7194313704833512 END COLLATE RTRIM, v0.c0, COUNT(*) FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE((((((((((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt1.c0)) AND ((vt1.c0, vt0.c0, v0.c0))))OR(((vt1.c0)==(v0.c0)))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))OR(((vt0.c0)LIKE(v0.c0)))))OR((~ (v0.c0))))) OVER () FROM vt1, v0, vt0; -- 0ms;
SELECT ALL ('1228140340' IN ()) FROM vt0 WHERE (CAST(((0.40256725705529517) NOTNULL) AS INTEGER)); -- 0ms;
SELECT ALL TOTAL(((v0.c0)*(v0.c0))), (~ (((((0xfffffffff4ae6ecb)AND(v0.c0)))AND(vt0.c0)))), (((vt0.c0)) BETWEEN ((((((v0.c0)AND(vt1.c0)))OR(v0.c0)))) AND ((vt0.c0 COLLATE BINARY))) FROM vt0, v0, vt1 WHERE ((((NULL) BETWEEN ('1276724507') AND (NULL)) IN ())); -- 0ms;
SELECT ALL ((((vt1.c0)!=(vt1.c0)))=(((vt0.c0)|(v0.c0)))), CAST((~ (vt0.c0)) AS BLOB), CAST(NULL AS REAL) FROM vt0;SELECT GROUP_CONCAT(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) FROM v0, vt0 WHERE (CAST(((-2055386621)OR('Cb')) AS INTEGER)); -- 0ms;
SELECT DISTINCT v0.c0 FROM vt1, v0; -- 0ms;
SELECT DISTINCT (((vt0.c0)AND(vt0.c0)) IN (TRIM(0x7e895693, vt0.c0))), ((vt0.c0 IN (vt1.c0)) IN ((vt1.c0 IN ()), ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)))), CASE v0.c0 COLLATE BINARY  WHEN ((((((((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN GLOB(vt0.c0, vt1.c0) WHEN x'' THEN vt0.c0 WHEN ((vt0.c0)<<(v0.c0)) THEN vt0.c0 WHEN (- (vt0.c0)) THEN vt1.c0 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((vt1.c0) IS FALSE) ELSE vt1.c0 COLLATE RTRIM END FROM v0 WHERE (((((((((((x'efb921eb') ISNULL))AND((NULL IN ('944894785')))))OR(((('-493786067')) NOT BETWEEN (('-0.0')) AND ((''))))))AND(((NULL) BETWEEN ('446240554') AND (x'')))))OR((('f\') NOT BETWEEN (2.10950304E9) AND (NULL))))) ORDER BY (((((((((~ (v0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))OR('\' COLLATE NOCASE)))AND(NULL)))OR(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) ASC;SELECT DISTINCT MIN(((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM v0, vt1, vt0 WHERE (((NOT (x'')) IN ())); -- 0ms;
SELECT DISTINCT CAST(((x'') BETWEEN ('-544307774') AND (vt1.c0)) AS NUMERIC) FROM vt1, v0 WHERE (((((((((CAST(NULL AS REAL))OR((((0.022862870352525322))<=((0.8400425344556856))))))OR(CAST(0.33021222915037474 AS INTEGER))))AND(((x'e30cf618')&(0.8267909878221068)))))AND((- ('-270781294'))))); -- 0ms;
SELECT DISTINCT v0.c0 FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt1.c0 END) NOT BETWEEN (vt1.c0) AND (MIN(0.4942446681136461))) FROM vt0, vt1 WHERE (((('0.9204906287506501'))<>((NULL))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((COUNT(*))-(vt1.c0)) FROM v0, vt0 GROUP BY (- (vt1.c0)) COLLATE RTRIM LIMIT 839662032 OFFSET -1228418665;SELECT ALL (((v0.c0 COLLATE RTRIM))<((vt1.c0 COLLATE RTRIM))) FROM vt0;SELECT DISTINCT ((((v0.c0)<<('-585314367'))) BETWEEN (COALESCE(vt0.c0, v0.c0)) AND (v0.c0)) FROM vt0 WHERE ((((((((((('0.11027894904983149') ISNULL))OR((('-237431505')|(NULL)))))OR((NOT ('-1244698016')))))AND(((NULL)/(0.6025028091652835)))))OR(x'' COLLATE RTRIM))) ORDER BY CAST(CASE vt1.c0  WHEN 1708635030 THEN vt0.c0 END AS REAL) DESC  NULLS LAST, ((((vt1.c0 COLLATE BINARY)AND(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((((((((vt0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(v0.c0)))) DESC  NULLS LAST, ((((vt1.c0)>>(v0.c0))) BETWEEN (x'' COLLATE NOCASE) AND (json_quote(vt1.c0))) DESC;SELECT ALL UPPER(DISTINCT (v0.c0 IN (vt1.c0, v0.c0))) FROM vt1, v0, vt0; -- 0ms;
SELECT ALL (+ (vt1.c0 COLLATE RTRIM)) FROM vt1, v0 WHERE (((((((0.26163003363302717) BETWEEN ('') AND (x'4bce')))OR(NULL COLLATE RTRIM)))AND(((2041888531)GLOB(NULL))))); -- 0ms;
SELECT CAST((NOT (vt0.c0)) AS INTEGER), RANK() OVER (), MIN('-1e500') FROM vt1 WHERE ((((((x'd413')<<(0.4164946674011586)), CAST('nQ' AS NUMERIC), CAST(0.626876981987775 AS INTEGER)))>=((NULL COLLATE BINARY, ((NULL)<>(0.38195524655226565)), 143322699))));SELECT DISTINCT (- ((vt0.c0 IN ()))) FROM v0, vt1 GROUP BY ((v0.c0)<(vt1.c0)) COLLATE NOCASE HAVING (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((LIKE(vt0.c0, v0.c0, ')'), (vt0.c0 IN ()), ((vt1.c0) IS FALSE))) AND ((((vt1.c0) BETWEEN (x'') AND (0.9610133830652214)), vt0.c0, (vt0.c0 IN ()))));SELECT ALL 'Cయ7', ROW_NUMBER() OVER (), ((CASE WHEN x'fda6' THEN vt1.c0 END)>>((vt1.c0 IN ()))) FROM vt0, v0, vt1 WHERE ((((((('373659073')AND(NULL)))OR(x'')))&(json_extract(0.8447163463081325, NULL)))); -- 0ms;
SELECT DISTINCT ((((((((CAST(v0.c0 AS TEXT))OR((~ (vt1.c0)))))OR(v0.c0)))OR((NOT (vt0.c0)))))OR((('') NOT BETWEEN (vt1.c0) AND (v0.c0)))), ((TRIM(v0.c0, v0.c0)) NOT BETWEEN (v0.c0) AND ((v0.c0 IN ()))), (NOT ((((vt1.c0))==((v0.c0))))) FROM vt0 WHERE (x'');SELECT COUNT(*), -1.580759319E9, (((~ (NULL)))>=(CASE WHEN v0.c0 THEN vt0.c0 END)) FROM v0, vt1, vt0; -- 0ms;
SELECT GROUP_CONCAT(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM) OVER () FROM v0, vt0;SELECT DISTINCT (CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END IN ()) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT vt0.c0, COUNT(((vt1.c0)AND(vt1.c0))), LIKELY(DISTINCT vt0.c0 COLLATE BINARY) FROM v0, vt1, vt0; -- 0ms;
SELECT (((((NULL IN ()))AND((NOT (vt1.c0)))))OR(((vt1.c0)LIKE(vt0.c0)))) FROM vt0, v0 WHERE (CAST(INSTR(-6.79302498E8, '335053130') AS NUMERIC));SELECT DISTINCT STRFTIME(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END, ((vt1.c0)<(vt0.c0)), ((vt0.c0)<<(vt0.c0))), SUM((((vt1.c0, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, v0.c0)) AND ((vt1.c0, v0.c0, v0.c0)))) OVER (), ((vt1.c0) NOT BETWEEN ((vt0.c0 IN (vt1.c0))) AND (v0.c0 COLLATE BINARY)), (((vt0.c0 IN ())) NOT BETWEEN ((NOT (''))) AND (CAST(v0.c0 AS TEXT))), STRFTIME(v0.c0, vt1.c0, vt1.c0) COLLATE NOCASE FROM vt0, vt1, v0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY NULL COLLATE BINARY ASC  NULLS LAST, JULIANDAY(((vt0.c0)<<(vt0.c0)), LOWER(DISTINCT v0.c0), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt1.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END) ASC  NULLS FIRST) FROM vt0 WHERE (((((((((((((((0.7955634516226732)AND(x'')))OR(0.8851129569412787)))AND('	N{)n*Xf7')))AND(NULL)))OR(x'')))AND(0.11153765792920056))) IS FALSE)) LIMIT -1261252038 OFFSET 1;SELECT DISTINCT (((((((v0.c0)OR(v0.c0)))OR(vt1.c0)), TRIM(v0.c0), CASE WHEN x'e096' THEN vt1.c0 END))!=((vt1.c0 COLLATE NOCASE, ((((vt1.c0)OR(v0.c0)))AND(v0.c0)), vt0.c0))), CAST((vt1.c0 IN ()) AS INTEGER), v0.c0 FROM v0, vt1, vt0 WHERE ((+ (0.1960764017780945))); -- 0ms;
SELECT MAX(((((vt1.c0)OR(v0.c0)))AND(vt1.c0))) FROM vt1, vt0 WHERE ((((((NULL)) NOT BETWEEN (('')) AND ((0.533073311231195)))) ISNULL));SELECT DISTINCT ((((v0.c0)-(vt0.c0)))||((NOT (vt1.c0)))), ((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM, ((((vt0.c0)|(v0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN ()))) FROM vt1, v0;SELECT DISTINCT LAST_VALUE((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) OVER () FROM vt1 WHERE (CASE WHEN (((944894785)) BETWEEN ((x'')) AND ((x''))) THEN CASE '-438625200'  WHEN '-1148968496' THEN 0.8938744921915226 ELSE '-1005886436' END WHEN ((((((((NULL)AND('-1545878695')))OR(0.6710736083903389)))OR('<\3寙)JFyt')))AND(x'')) THEN CAST(0.5841073756299588 AS REAL) WHEN (+ (x'')) THEN 542875832 COLLATE NOCASE END); -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((('-853381422') BETWEEN ('-1669629812') AND ('1464352310')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((v0.c0))<=(((((vt0.c0, v0.c0, vt1.c0))=((vt0.c0, vt0.c0, v0.c0)))))), ((((((((NULL)OR(0.9481282189337918)))AND(NULL)))AND('-428949818')))OR(vt0.c0)) COLLATE BINARY, NULL FROM vt0;SELECT DISTINCT CAST(((((x'')OR(vt0.c0)))AND(vt1.c0)) AS REAL), (((~ (vt0.c0)))>>(CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((vt1.c0)IS(vt0.c0)) IN (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END, (+ (vt1.c0)))) FROM v0 WHERE (((NULL)&('')) COLLATE BINARY) GROUP BY ((v0.c0 IN ()) IN ()) HAVING (((NOT (vt1.c0))) ISNULL);SELECT ((((vt1.c0)<(vt1.c0)))<=(LIKE(vt1.c0, v0.c0, '0'))) FROM vt1, vt0 WHERE ((((x'', x'', '-91375579')) BETWEEN ((x'', (NOT (NULL)), ((0.22525898628355856)<(1.377687173E9)))) AND ((((x'')<(0xffffffff92e2b14b)), 'OEZ+M4' COLLATE NOCASE, ((NULL) IS FALSE)))));SELECT ALL (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) FROM v0, vt1;SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) AND (((('')AND(vt1.c0))))) FROM v0 WHERE (((('GJ5_b碌(l'))>((((0.3861683337273676) NOTNULL)))));SELECT MAX(SUM(CAST(v0.c0 AS INTEGER))) FROM vt0, v0, vt1 WHERE (((('-154360171')*('㰀dKB')) IN ())) GROUP BY NULL, CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC), x'4168' HAVING vt1.c0 ORDER BY ((vt1.c0) BETWEEN (v0.c0) AND (TYPEOF(v0.c0))) DESC LIMIT -1;SELECT ALL SUM((+ (vt1.c0))), SUM(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) OVER ( ORDER BY load_extension(vt1.c0 COLLATE NOCASE, ((vt1.c0) IS TRUE)) ASC  NULLS FIRST), (((v0.c0 IN ()))GLOB(v0.c0)) FROM vt0, v0, vt1 WHERE (CAST((('')&(354858094)) AS NUMERIC)) INTERSECT SELECT DISTINCT 0.5068841243277284, ((CASE vt0.c0  WHEN x'6bea' THEN v0.c0 ELSE v0.c0 END) IS TRUE), NULL FROM vt0;SELECT ALL ((((vt0.c0 COLLATE NOCASE)AND(((((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(v0.c0)))AND(NULL)))OR(x'')))))AND(((vt1.c0)/(v0.c0)))) FROM vt0, v0, vt1 WHERE (0.1988798792107338); -- 0ms;
SELECT CASE (vt0.c0 IN ())  WHEN ((vt0.c0)LIKE(v0.c0)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (NULL)) WHEN ((0.9089665751610077) IS FALSE) THEN (((vt0.c0)) BETWEEN ((0.10465542400621275)) AND ((vt1.c0))) WHEN json_patch(vt0.c0, v0.c0) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) ELSE ((vt1.c0) NOTNULL) END FROM v0, vt1 LIMIT -237431505;SELECT DISTINCT CAST((((v0.c0, v0.c0, v0.c0))>=((vt0.c0, 0x429bacf7, vt0.c0))) AS REAL) FROM v0 WHERE (x'' COLLATE RTRIM) GROUP BY COALESCE(DISTINCT ((v0.c0) NOTNULL), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt1.c0)-(vt0.c0)), (vt1.c0 IN ())) HAVING (((((((((((vt0.c0))!=((v0.c0))))OR(vt0.c0 COLLATE BINARY)))AND((v0.c0 IN ()))))OR(CAST(NULL AS INTEGER))))AND(vt1.c0 COLLATE RTRIM));SELECT CAST(v0.c0 COLLATE RTRIM AS REAL) FROM vt1, v0; -- 0ms;
SELECT TRIM(((vt0.c0) IS TRUE)) FROM v0, vt1 WHERE (((COALESCE('-1652593293', x''))|(((((((((x'b40a')AND(x'')))OR(x'')))AND('')))OR(1.237857026E9))))) GROUP BY (((vt0.c0 IN ()))%((((vt0.c0, vt1.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt1.c0, v0.c0, vt1.c0))))), x'', (((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND ((NULL))), (((((x'', vt1.c0, vt1.c0))>((vt1.c0, x'', vt0.c0))))-('B')), CAST(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END AS INTEGER);SELECT MAX(((vt1.c0)==(NULL))) FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c0)+(vt0.c0)) IN ()) FROM vt1, v0, vt0 WHERE ((NULL IN (LTRIM('-9223372036854775808', 0.04795858228591854)))); -- 0ms;
SELECT ALL AVG(((((vt1.c0)OR(v0.c0)))AND(v0.c0))) OVER () FROM v0;SELECT (((vt0.c0 IN (vt0.c0))) BETWEEN (((vt1.c0)AND(vt0.c0))) AND (vt1.c0 COLLATE NOCASE)), CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((((v0.c0)OR(v0.c0)))OR(vt1.c0)) END, (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))*(CAST(vt0.c0 AS REAL))) FROM v0, vt0, vt1; -- 0ms;
SELECT ((((vt1.c0) IS FALSE))<=(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) FROM v0, vt1, vt0 WHERE (TRIM(0Xffffffffe665f516)) LIMIT -1748728046; -- 0ms;
SELECT DISTINCT ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) COLLATE RTRIM, ((((((0.5418473471467614) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND((vt1.c0 IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)), CAST(vt0.c0 AS REAL) FROM vt0, v0, vt1 NOT INDEXED LIMIT 715911956; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0, v0 WHERE (((((((((CAST('|?~' AS NUMERIC))OR(LOWER(x''))))AND(((-1580759319) BETWEEN (-9.8917728E8) AND (NULL)))))OR((((NULL))=((NULL))))))OR(((((NULL)AND(-512088700)))OR(x''))))) GROUP BY (((((((((~ (v0.c0)))OR(CASE 0.19149853929085392  WHEN vt0.c0 THEN vt1.c0 ELSE '' END)))AND(HEX(DISTINCT v0.c0))))OR((+ (vt0.c0)))))AND(((vt0.c0)%(v0.c0)))), CASE ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) THEN (v0.c0 IN (NULL)) WHEN (((v0.c0))<=((vt1.c0))) THEN vt0.c0 COLLATE NOCASE WHEN ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)) THEN (NOT (x'')) END, NULL;SELECT ALL ((TOTAL(v0.c0)) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt0, vt1 WHERE (((((((0.9955740050744573) BETWEEN ('-96750930') AND ('357237665')))OR(((0Xffffffffd5193690) NOT NULL))))AND(0.9726303329714744 COLLATE RTRIM)));SELECT IFNULL(DISTINCT ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((v0.c0)AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))) FROM vt0;SELECT DISTINCT ((((((((((((((((vt1.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(UPPER(vt0.c0))))OR((((vt0.c0, vt1.c0, vt1.c0, vt1.c0, v0.c0))!=((vt1.c0, vt1.c0, v0.c0, vt0.c0, vt0.c0))))))AND(CASE WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END)) FROM vt1, v0, vt0 WHERE (((((CASE WHEN '-2038931761' THEN '-1199023467' END)OR('')))OR(CAST(0.9601783163545291 AS TEXT)))); -- 0ms;
SELECT ALL ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(((((((((((((vt0.c0)AND(vt1.c0)))OR(v0.c0)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))) FROM v0, vt0, vt1 WHERE ((((((((0.1986468416291477))==(('143322699'))))OR((406822551 IN ()))))AND(CASE 0.523750927517408  WHEN 0.3225017712560161 THEN '' WHEN '[s%j3' THEN NULL WHEN x'' THEN 0.8373001514535716 END))); -- 0ms;
SELECT DISTINCT (NOT (vt0.c0)) FROM vt0 WHERE ((((1.55289358E9)) BETWEEN (((('U(')>(0.09283549338888786)))) AND ((CASE WHEN 0.9148300714478882 THEN 0.9307974761265072 END)))); -- 0ms;
SELECT CAST((NOT (v0.c0)) AS BLOB) FROM vt1 NOT INDEXED, vt0, v0; -- 0ms;
SELECT ((((v0.c0)AND(v0.c0)))IS(vt1.c0 COLLATE BINARY)) FROM v0, vt1, vt0; -- 0ms;
SELECT MIN(v0.c0 COLLATE NOCASE), vt0.c0, (((((v0.c0)OR(v0.c0)))OR(vt1.c0)) IN ()) FROM vt1 WHERE ((((- (0.33151780045821755))) NOT NULL));SELECT DISTINCT ((CAST(vt1.c0 AS REAL))GLOB(v0.c0 COLLATE RTRIM)) FROM vt1;SELECT ALL CASE WHEN (v0.c0 IN ()) THEN (- (vt1.c0)) ELSE (NOT (vt1.c0)) END FROM vt0, vt1, v0 LIMIT -1042857855; -- 0ms;
