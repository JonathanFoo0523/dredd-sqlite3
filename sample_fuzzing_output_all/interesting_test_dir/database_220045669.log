-- Time: 2024/06/07 11:20:14
-- Database: database69
-- Database version: 3.40.0
-- seed value: 220045669
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, tokenize=porter, prefix=250); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X2c9e2ba3), (x''), ('柅{q'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.8906436921049105 WHERE LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND ('628385733')), 0.2382542167156707); -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=(x'') WHERE CASE WHEN CASE 6.28385733E8  WHEN vt0.c0 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN (((NULL))==((vt0.c0))) THEN TRIM(DISTINCT vt0.c0) WHEN NULL THEN ((vt0.c0) IS TRUE) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA application_id; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 18ms;
UPDATE OR IGNORE vt0 SET c0='210852713', c0=0.8906436921049105; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 14ms;
INSERT OR ABORT INTO vt0(c1) VALUES (7.48563363E8), (0.018195943117318425), (NULL); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, x''), (NULL, NULL), ('210852713', 0.9653110288172578), ('-3c%({A)', NULL), (NULL, 0x1abbda26); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 12ms;
REINDEX  vt0; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='柅{q', c0=x''; -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (0.20099579676453405), (0.3579773589265546), ('>L'); -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, '628385733'); -- 0ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES (x'ebca', x''), (x'', x''), (984212860, x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((((((vt0.c0)AND(vt0.c1)))OR(NULL)))OR(LOWER(vt0.c1))); -- 10ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA temp.mmap_size = -6893377652027472227; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 24ms;
END TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.05861647758013788 WHERE CASE x''  WHEN vt0.c0 THEN ((((vt0.c1)OR(0X257467c5)))AND(vt0.c0)) ELSE ((vt0.c0)<>(vt0.c1)) END; -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
PRAGMA temp.mmap_size = 1103901217845963954; -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (x'', NULL); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0Xc915b69); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'72c1'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, NULL); -- 3ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE ((json_array_length(vt0.c1))*((((vt0.c0))=((vt0.c0))))); -- 1ms;
UPDATE vt0 SET (c1, c1)=('645127987', 'w!vF16') WHERE ((((((((((vt0.c1)LIKE(vt0.c0)))OR(((vt0.c1)>(vt0.c1)))))AND(vt0.c1 COLLATE RTRIM)))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)*(vt0.c0)))); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c1)=(0.9674023223792699); -- 1ms;
UPDATE OR FAIL vt0 SET (c1)=(0.9713971798852351); -- 2ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE TYPEOF((((vt0.c1))<=((vt0.c1)))); -- 3ms;
PRAGMA threads = 8126220583918986848; -- 0ms;
END TRANSACTION; -- 7ms;
INSERT OR IGNORE INTO vt0 VALUES ('}', x'6f66'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
UPDATE vt0 SET (c1)=(''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c0, c1)=(0.5305862149722316, '748563363', x'6fd1', NULL) WHERE ((((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '2019197670', vt0.c0, 448518694)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1))) IN ()); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c1)=('◎<'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''), (-2009104984), (''); -- 1ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR REPLACE INTO vt0(c1, c0) VALUES (0.12497211364936311, 4.48518694E8), (0xffffffff9484e381, 0.3579773589265546), ('645127987', x''); -- 2ms;
UPDATE OR IGNORE vt0 SET (c0)=('1229728210') WHERE QUOTE(NULL); -- 0ms;
ANALYZE; -- 22ms;
PRAGMA main.busy_timeout; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES ('0.12497211364936311'), (0.40582182324337623), (0.9654824813390915); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES ('壵]*9\!'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (((vt0.c1, vt0.c1, vt0.c1))>((vt0.c1, vt0.c1, '#?'))) COLLATE RTRIM; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.018195943117318425); -- 2ms;
PRAGMA temp.journal_mode; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c1='-1814076669'; -- 11ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0, c1, c0)=('-119868486', '-245075259', 0.5631291376801253); -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, '+mu'), (x'd64f', ''), ('-2081447572', ''); -- 0ms;
PRAGMA temp.application_id; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL), (0xffffffff8885c30c), (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('-2009104984'); -- 1ms;
UPDATE vt0 SET c0='', c0='PYK柅_*' WHERE (vt0.c1 IN ()); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -949260677);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
PRAGMA temp.cache_size = 3485293755990282008; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1849467783); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '4830'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 96498338); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41003'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27636'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16307'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
REINDEX; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'6c48', 4.48518694E8), (x'', ''), ('1428760731', 0xffffffff883f7da8); -- 1ms;
PRAGMA main.short_column_names; -- 0ms;
UPDATE vt0 SET c1=x'e600' WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (((vt0.c1) IS FALSE)) AND ((('748563363')*(vt0.c0)))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1428760731);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1948464324); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'', -37377276); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES ('0.20099579676453405'); -- 0ms;
UPDATE vt0 SET (c1, c1, c1)=('', x'4b02', 'fT'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0X7ddec2cd); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.7404762820701262), (0.7409432290135445), (x'9873'), ('d㭺'), (0.5934439192965522); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE 0xffffffff82b584f1 COLLATE BINARY  WHEN ((NULL) ISNULL) THEN load_extension('毯rnTW|8_', x'bde5de15') END; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE (('487620379') BETWEEN ((NOT (vt0.c0))) AND ((((vt0.c1))<((vt0.c0))))); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('', NULL); -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=(0.8960619950254809); -- 1ms;
UPDATE OR ABORT vt0 SET (c1)=(x''); -- 0ms;
VACUUM temp; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.45520272273344564, x''); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35825'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3737'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1175922373);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
UPDATE vt0 SET (c1)=('-1266679965'); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('-1595184145'); -- 5ms;
ANALYZE; -- 7ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((((vt0.c1))=((-558682661))))IS NOT(vt0.c1 COLLATE BINARY)) FROM vt0 WHERE (NULL); -- 0ms;
SELECT (((((vt0.c1))=((vt0.c1))))OR(vt0.c0 COLLATE NOCASE)), json_quote(LIKELIHOOD(vt0.c0, 0.11503873757049488)), (NOT (((0.29018204151694416)%(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT (- (((vt0.c1)!=(vt0.c1)))) FROM vt0 WHERE (((NULL COLLATE BINARY)>(6.28385733E8))); -- 0ms;
SELECT DISTINCT x'', CASE WHEN vt0.c1 COLLATE RTRIM THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN (((vt0.c0))<((vt0.c0))) THEN ((((((((vt0.c1)AND(NULL)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c0)>(vt0.c0)) THEN NULL END, (((((x'', vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))<<(((vt0.c0)IS NOT(vt0.c1)))) FROM vt0 WHERE (((((CAST('' AS NUMERIC))AND((('210852713')LIKE(NULL)))))OR(ABS(DISTINCT x'')))) LIMIT 2094650388 OFFSET 133277478; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c1 THEN x'' ELSE vt0.c0 END COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL vt0.c1, CAST((vt0.c1 IN ()) AS TEXT), (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN (vt0.c0, NULL)), (((vt0.c1))<>((vt0.c0)))))==((((vt0.c1)<>(vt0.c0)), ((x'')=(x'5ed3')), vt0.c1))) FROM vt0 WHERE (((((((0.9653110288172578)OR(0x20e7e453)))AND(0xffffffff9a2d942c))) IS FALSE)) ORDER BY ((((vt0.c1)IS(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c1)OR(NULL)))OR(vt0.c1)))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((0xffffffffc76b6e7b) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL (((NOT (x''))) BETWEEN (IFNULL(DISTINCT NULL, x'0392')) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL ((COUNT(*)) BETWEEN (0.9657873829374354) AND (((vt0.c0) IS FALSE))) FROM vt0 WHERE ((- (((0.3337462067618806)||(0.944349091387303))))) GROUP BY vt0.c1 HAVING '2	b '; -- 0ms;
SELECT ALL (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, json_extract(vt0.c1, vt0.c0)))>=((vt0.c0 COLLATE BINARY, CAST(x'd339' AS INTEGER), (vt0.c0 IN ())))), (((vt0.c0)IS(NULL)) IN ()), ((vt0.c0)IS NOT('KJⷛ')) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT COUNT((vt0.c0 IN ()) COLLATE NOCASE) OVER () FROM vt0 WHERE ((((0.45520272273344564 IN ())) BETWEEN (((x'824e')%('-519481054'))) AND (0.29018204151694416))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((TYPEOF(vt0.c1)) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), ((((((((((((((((vt0.c0)OR(vt0.c1)))AND(x'')))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(((vt0.c1)==(vt0.c1)))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))), ((((((((((vt0.c0)OR(-9.49260677E8)))AND(vt0.c1)))OR(NULL)))AND(vt0.c0))) NOT BETWEEN (MIN(vt0.c1)) AND (((vt0.c1)||(vt0.c0)))), -155055367 FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) FROM vt0 WHERE (CASE (((('')AND(8.92781923E8)))OR(0.7865139556016868))  WHEN CASE NULL  WHEN 892781923 THEN '1428760731' WHEN x'ba91882e' THEN '-1153674827' WHEN 487620379 THEN 0.34180228087965847 END THEN (+ ('1052566900')) WHEN ((-1.806935819E9)&(0x45d39157)) THEN ((0.21514921746372873) IS TRUE) WHEN x'b807' COLLATE BINARY THEN 0.9674023223792699 COLLATE BINARY END); -- 0ms;
SELECT ((((((vt0.c0)GLOB(vt0.c1)))AND((((vt0.c0))<=((vt0.c0))))))OR(((NULL) IS TRUE))) FROM vt0; -- 1ms;
SELECT ALL (((vt0.c1 IN ())) NOTNULL) FROM vt0 WHERE (CAST(CASE WHEN x'' THEN NULL END AS REAL)); -- 0ms;
SELECT IFNULL(((vt0.c0)=(vt0.c1)), vt0.c0) FROM vt0; -- 0ms;
SELECT ALL LIKELY(vt0.c0) COLLATE BINARY FROM vt0 WHERE (((CAST('1841050767' AS REAL)) NOT BETWEEN ((NULL IN ())) AND (0.06357285094910625))) LIMIT 148119598 OFFSET -1800756293; -- 0ms;
SELECT CASE CAST(vt0.c0 AS INTEGER)  WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c1))) THEN vt0.c1 END FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (CASE 0.14583137020490544  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND ('748563363')) FROM vt0 WHERE ((((('')<(NULL))) IS FALSE)) GROUP BY (CASE WHEN '' THEN vt0.c1 WHEN -2.081447572E9 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ()) HAVING CASE ((vt0.c1)+(vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((vt0.c0)LIKE(vt0.c1)) END; -- 0ms;
SELECT ALL (((((~ (vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))), 0.5113731808273818, CASE (vt0.c0 IN ())  WHEN vt0.c1 THEN COUNT(vt0.c1) END FROM vt0 WHERE (((((0.6593412538210734)>>('-159851817'))) NOT BETWEEN (CAST(0.523247002961853 AS NUMERIC)) AND ((((x''))<(('-269325975')))))); -- 0ms;
SELECT DISTINCT LAST_VALUE((NOT (((vt0.c0) ISNULL)))) OVER () FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((NULL) NOT NULL))) AND ((TRIM(x'', '655859296'))))); -- 0ms;
SELECT ((((((vt0.c1)>=(vt0.c1)))AND(CAST(vt0.c0 AS TEXT))))OR(((0.7832938807666409) NOTNULL))) FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST LIMIT 148119598; -- 0ms;
SELECT ABS(DISTINCT PRINTF(vt0.c1)) FROM vt0 WHERE (((((NULL) ISNULL))||(('-2102033167' IN ())))); -- 0ms;
SELECT DISTINCT (- (CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (CAST((((x'4cb3', x'687ef50d', x''))<(('-1056806964', -5.19481054E8, NULL))) AS INTEGER)) ORDER BY vt0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (CASE vt0.c1  WHEN 0.3892733349815788 THEN vt0.c1 ELSE vt0.c1 END) AND (MAX(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1) IS FALSE), STRFTIME(CAST(vt0.c0 AS NUMERIC), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), CAST(vt0.c1 AS INTEGER)), (- ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM vt0 GROUP BY (NOT (((vt0.c1)/(vt0.c0)))), ((HEX(1.33277478E8))IS NOT((+ (vt0.c1)))), ((NULL) NOTNULL) COLLATE RTRIM COLLATE RTRIM HAVING ((vt0.c0 COLLATE NOCASE) NOTNULL); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 WHERE ((((- (NULL))) NOTNULL)); -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT DISTINCT (- (6.45127987E8)) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY (((((((((('0.9654824813390915')OR(vt0.c1)))OR(0.20099579676453405)))AND(vt0.c0)))OR(vt0.c1))) NOT NULL), ((vt0.c1)|(((vt0.c0)+(vt0.c1))))  NULLS FIRST, -1708288980) FROM vt0; -- 1ms;
SELECT DISTINCT (((NOT (''))) ISNULL) FROM vt0 LIMIT 2019197670 OFFSET -1447979701; -- 0ms;
SELECT ALL ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))<=(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL (NOT ((~ (vt0.c1)))) FROM vt0 WHERE (((CAST(NULL AS INTEGER))<>((+ (x'b61e'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND ((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1, ((((vt0.c0)&(NULL)))LIKE(SUM(vt0.c0))), (vt0.c0 IN (((vt0.c0)<(vt0.c0)))) FROM vt0 ORDER BY LIKELY(DISTINCT ((vt0.c1)>>(0.40582182324337623)))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt0.c1)<<(vt0.c0)))IS(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))), ((CAST(0.7120227827991789 AS BLOB))<>(((vt0.c1) IS FALSE))), '394639607' FROM vt0 INTERSECT SELECT CASE ((((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1))  WHEN (NOT (vt0.c1)) THEN vt0.c0 COLLATE NOCASE END, ((((((vt0.c0)<<(NULL)))OR(SUM(vt0.c1))))AND(CAST(vt0.c0 AS REAL))), PERCENT_RANK() OVER () FROM vt0 WHERE ((('w!vf16') BETWEEN ((x'' IN ())) AND (CASE WHEN 0.45346572229529025 THEN '151147288' WHEN 0.478917622035005 THEN 0.2906897672445624 WHEN 'D8 5*|' THEN 'r<q' ELSE 0.12340421405714352 END))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c1 AS BLOB) END, ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND('-1623585796'))) BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND (vt0.c1 COLLATE RTRIM)), (~ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN '-1846883675' THEN LIKELY(vt0.c0) END FROM vt0 WHERE (((((((x'')<(x'')))AND(CASE WHEN 0.04478179071672095 THEN NULL END)))AND(((0.14583137020490544) NOT NULL)))); -- 1ms;
SELECT DISTINCT ((((x'e0b4')OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR((vt0.c1 IN ()))) FROM vt0 LIMIT 892781923; -- 0ms;
SELECT DISTINCT MIN(CAST(vt0.c0 AS REAL)) FROM vt0 WHERE ((((((((((('t8')AND(x'')))OR('-245075259')))AND(NULL)))OR('舏HfR#')))AND(CHANGES()))); -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (('6ghm' IN (x'90b4'))))) GROUP BY vt0.c0 HAVING JULIANDAY((('>L')GLOB(vt0.c0)), MAX(vt0.c1), '') LIMIT -901464655 OFFSET -1447979701; -- 0ms;
SELECT vt0.c1 COLLATE BINARY COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL) FROM vt0 ORDER BY (+ (((vt0.c0)IS(vt0.c1)))) ASC  NULLS LAST; -- 0ms;
SELECT ((vt0.c1 COLLATE RTRIM)<<(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))) FROM vt0 WHERE ((((((('628385733')AND(0xfffffffff139e78c)))AND(NULL)))AND(((((((((((((x'')OR(0xffffffff91eacaa5)))AND(-1.266679965E9)))AND(0.2894598490129805)))AND('-1554154070')))OR('vR''9')))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(GLOB(vt0.c0, vt0.c1))) FROM vt0 WHERE (((((((NULL) NOTNULL))AND((x'' IN ()))))OR((((x'42dd')) BETWEEN (('')) AND ((x'')))))); -- 0ms;
SELECT vt0.c1, UNLIKELY((- (vt0.c1))), ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))-(COUNT(*))) FROM vt0 WHERE ((((- (x'b92b'))) BETWEEN (((0.14784399466448328)==('壵]*9\!'))) AND ((('-884636835') IS FALSE)))); -- 0ms;
SELECT (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) AND ((x''))), (vt0.c0 COLLATE NOCASE IN ()), ((CAST(0x8d4202e AS BLOB)) IS TRUE) FROM vt0 GROUP BY (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CASE vt0.c1  WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c1) IS TRUE) END, ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)AND((vt0.c1 IN ()))))AND(vt0.c1 COLLATE BINARY)), ((NULL)AND((vt0.c1 IN ()))), NULL HAVING (- (((vt0.c1) BETWEEN (vt0.c0) AND (0.5266416928344618))));SELECT DISTINCT ((vt0.c0 COLLATE BINARY)>=(((((0.3868709108564107)OR(vt0.c0)))AND('1061296065')))) FROM vt0; -- 0ms;
SELECT ((MIN(vt0.c1))IS(((((vt0.c1)AND(vt0.c0)))OR(NULL)))), ((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))), ((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '0.7409432290135445' ELSE vt0.c0 END) AND (CASE WHEN vt0.c0 THEN vt0.c1 END)), COUNT(NULLIF(vt0.c1, vt0.c1)), COUNT(*) OVER () FROM vt0 WHERE (CAST(NULLIF(DISTINCT '1467824365', x'd124') AS BLOB)); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) AND (vt0.c0)) FROM vt0 WHERE ((((0.20981337041152837)%(NULL)) IN ((x'' IN ())))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)OR(SQLITE_COMPILEOPTION_GET(vt0.c0)))  NULLS FIRST; -- 3ms;
SELECT ALL ((('-2081447572' IN (vt0.c0, vt0.c0))) IS TRUE) FROM vt0 WHERE (PRINTF(CAST(x'a61f' AS NUMERIC))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)AND(vt0.c0)) IN (vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT -1.175922373E9 FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)<>(vt0.c1)) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()), ('.B' COLLATE NOCASE IN ()), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (vt0.c1)), AVG((vt0.c1 IN ())) OVER () FROM vt0 WHERE (((((((((x'28a685c88e6a')OR(-1.800756293E9 COLLATE BINARY)))OR(((0.20099579676453405)*(NULL)))))OR(((NULL)==(NULL)))))AND((NULL IN ())))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt0 WHERE ('2111750861'); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('0.34180228087965847')/('0.7865139556016868'))) BETWEEN (((NULL) NOT BETWEEN (NULL) AND (NULL))) AND (CAST(NULL AS BLOB)))); -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((NOT (0.12092849026945007)))AND((~ (x'')))))OR((((((((('')AND('-614722699')))AND(NULL)))AND('<8|d')))OR(x'')))))OR(CAST(NULL AS REAL))))AND(((0.4359218642029977)<>(0.9440438101877248))))); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT vt0.c1, vt0.c1), LAG(vt0.c1, (((- (vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c1))) AND ((0.47670482478904597 IN (vt0.c1)))), CAST(((vt0.c0)/(vt0.c0)) AS NUMERIC)) OVER ( ORDER BY ((((((vt0.c1)AND(NULL)))OR(vt0.c0)))IS NOT(CAST(NULL AS NUMERIC)))  NULLS LAST, CASE (~ (vt0.c1))  WHEN ((vt0.c0) NOTNULL) THEN (NOT (0.9674023223792699)) END DESC), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(((1635797282) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT ((((((vt0.c1)OR(0.6415146589241237)))AND(vt0.c1)))*(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c0 WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) WHEN ((vt0.c0) BETWEEN (x'') AND (vt0.c1)) THEN ((0.569858715777326) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) END, COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((vt0.c1 IN ())), CASE WHEN ((vt0.c0)<=(0.2922748674882307)) THEN vt0.c1 ELSE ((vt0.c1)>=(vt0.c0)) END, (((vt0.c1, vt0.c1, 0x494c29d2)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()))) AND ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), vt0.c0 COLLATE BINARY, x''))) FROM vt0 WHERE ((((('-778452637') NOT BETWEEN (NULL) AND ('%')))>>((('Udxo')-(0.06357285094910625))))); -- 0ms;
SELECT DISTINCT ((((((((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(0Xffffffff9f3a0bfc)))OR(vt0.c0 COLLATE NOCASE)))AND((NOT (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS TEXT))))AND(vt0.c0)), (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)), ((GROUP_CONCAT(vt0.c1)) NOT BETWEEN (((NULL) NOT BETWEEN (vt0.c0) AND (NULL))) AND (((vt0.c1) ISNULL))) FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST; -- 1ms;
SELECT 1.607149006E9, json_extract(vt0.c1 COLLATE NOCASE, vt0.c0 COLLATE BINARY), ((((vt0.c0)AND((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c1, vt0.c1, vt0.c1))))))AND(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((('+䠡G[]' IN (0.38940786129312455, 'S%Ji'))) NOT BETWEEN (((0.4359218642029977)>=('+mu'))) AND ((('n8Bu') IS FALSE)))) GROUP BY CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC); -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>>((~ (vt0.c1)))) FROM vt0 WHERE ((((((((('394639607')OR(0.31674159399231183)))AND('')))AND(NULL)))AND(0.27381948855918137 COLLATE NOCASE))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (((((NULL) BETWEEN (x'75c3') AND (''))) BETWEEN (((173972423)LIKE(x''))) AND ((('壵]*9\!')>>(0.4636316813517134))))) GROUP BY ((CAST(vt0.c0 AS NUMERIC))||(((vt0.c1)>(vt0.c1)))), ((vt0.c0)<(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))), ((((vt0.c1)AND(SUBSTR(vt0.c1, 0X372868d9))))OR(vt0.c0 COLLATE RTRIM)); -- 0ms;
SELECT ALL NULL, ((x'')*(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))), 0x3f4217c1 FROM vt0; -- 0ms;
SELECT AVG((~ (vt0.c0))) OVER (), ((vt0.c0)>((+ (vt0.c0)))), ((((vt0.c0)+(vt0.c1))) IS FALSE) FROM vt0 WHERE (((((NULL)>(NULL))) NOT BETWEEN ((+ (x'd5c4ad70'))) AND (('552068179' IN ())))); -- 0ms;
SELECT DISTINCT ((vt0.c1) IS FALSE) COLLATE NOCASE FROM vt0 WHERE ((((x'b724')) NOT BETWEEN (((('I#(WE')>>(NULL)))) AND ((((((0.6442297359323617)OR(NULL)))OR(NULL)))))); -- 0ms;
SELECT CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN NULL END FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((((x'cc06') NOT BETWEEN ('~~^V}{9B') AND (x'')))) AND (((- (NULL)))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL), (((0X3ebce574)) NOT BETWEEN ((COUNT(*))) AND ((vt0.c0 COLLATE BINARY))), (NOT (COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ ((('-1153674827') IS TRUE))), MIN(MIN(LOWER(vt0.c0))), CASE ((vt0.c1) NOTNULL)  WHEN '-1162963929' THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c1)>(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c1))<=((vt0.c0))) THEN (~ (vt0.c0)) END FROM vt0;SELECT json_patch(SUM(vt0.c0), (((vt0.c1))!=((vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((SUM(vt0.c1)) NOT BETWEEN (((vt0.c1)>=(vt0.c0))) AND ('0.14583137020490544')) FROM vt0 WHERE (((CASE 0X3835d711  WHEN 0.23605135839857938 THEN x'' END) BETWEEN (((0.23605135839857938) ISNULL)) AND ((((('Fy')OR('0.14784399466448328')))AND('m'))))); -- 0ms;
SELECT CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END AS BLOB), (((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, ((NULL) ISNULL), (+ (vt0.c1)), (vt0.c1 IN ()), ((((vt0.c0)AND(x'c955')))AND(vt0.c0)))) AND (((vt0.c1 IN ()), (+ (vt0.c1)), (vt0.c1 IN (vt0.c1, vt0.c1)), vt0.c1, ((vt0.c0)IS NOT(vt0.c0))))), GROUP_CONCAT(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END) FROM vt0; -- 0ms;
SELECT CUME_DIST() OVER (), MAX(AVG(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)), json_valid(MAX(vt0.c1, 0.256849279956333, vt0.c0, vt0.c0)), GROUP_CONCAT((+ (vt0.c0))) OVER (), ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)AND(((((vt0.c1)OR(vt0.c1)))OR('1574905356')))))AND(((vt0.c0)<=(vt0.c0)))) FROM vt0 WHERE (x'');SELECT ALL (((vt0.c0)) BETWEEN ((((((0.8475780415788084)OR(vt0.c1)))AND(vt0.c0)))) AND (((~ (vt0.c0))))) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((((0.9353437056925975) NOT BETWEEN (0Xffffffffc509c6db) AND ('&M%4axw')))) AND ((NULL)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (CAST(vt0.c1 AS REAL))), (COALESCE(DISTINCT vt0.c1, vt0.c0) IN (((vt0.c0)||(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (HEX(vt0.c1)) AND (CASE WHEN vt0.c0 THEN vt0.c1 END)), '1095546745', (((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, x''))<=((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))))GLOB(SUM(vt0.c0))), (+ ((((vt0.c0))==((vt0.c1))))), ((((vt0.c1))=((vt0.c1))) IN ()) FROM vt0 WHERE ((((448518694) BETWEEN (x'') AND (748563363)) IN ())); -- 0ms;
SELECT TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) OVER (), vt0.c0, ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) FROM vt0 WHERE (((((x'')&(0.4488724806272719)))||(((NULL) BETWEEN (0.9088989271232821) AND (0.8713428768853511))))) ORDER BY ((vt0.c0)>(vt0.c1)) COLLATE NOCASE  NULLS LAST, CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) AS TEXT)  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (vt0.c0)) THEN x'' END FROM vt0; -- 0ms;
SELECT (((((((('days_F*9+LL')OR(((vt0.c0)<>(vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOTNULL))))AND(((vt0.c1)>=('0.21514921746372873')))) FROM vt0 NOT INDEXED; -- 1ms;
SELECT (((((vt0.c0) IS FALSE)))==((((((((((NULL)OR(vt0.c0)))AND(vt0.c1)))OR('-963424164')))OR(vt0.c0))))) FROM vt0 WHERE ((((CASE WHEN NULL THEN '-558682661' ELSE 'b8*5,!A' END))<(('-1891428260')))); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((vt0.c0) ISNULL)), (((vt0.c1 IN ()))LIKE(((vt0.c1) BETWEEN (vt0.c1) AND ('-914128369')))), (- (COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c1 AS INTEGER) IN ((((vt0.c1))<((vt0.c0))), vt0.c0)), (((vt0.c0))<=((CAST(vt0.c0 AS INTEGER)))), NULL FROM vt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT vt0.c1, 0.9725454797541256) FROM vt0 WHERE (((x'' COLLATE BINARY) BETWEEN ((('-159851817') BETWEEN (NULL) AND (x''))) AND (SQLITE_COMPILEOPTION_GET(x'')))) ORDER BY (((vt0.c0)/(vt0.c1)) IN ()) ASC; -- 0ms;
SELECT DISTINCT MAX((NOT (vt0.c1))) FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM)<(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END IN ()), (((((vt0.c0 IN ()))AND(((vt0.c1)IS NOT(0.27592930716740727)))))OR(((vt0.c0) NOT NULL))), (((vt0.c1)) NOT BETWEEN (((((vt0.c1))>((vt0.c0))))) AND ((CAST(vt0.c0 AS TEXT)))) FROM vt0 WHERE (((('-1989134594' IN (x'')))>>((('KlQz') NOTNULL)))); -- 0ms;
SELECT '-1235876287', 0.27592930716740727, ((vt0.c0) ISNULL) FROM vt0; -- 0ms;
SELECT ALL vt0.c1, CAST(((vt0.c1)/(vt0.c1)) AS NUMERIC), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))<>(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((((2135554560)) BETWEEN ((x'' COLLATE NOCASE)) AND (('984212860')))) GROUP BY (((((((((vt0.c1 IN (vt0.c1)))AND(x'' COLLATE RTRIM)))AND(0.23951005728291397)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)))AND(vt0.c1 COLLATE NOCASE)), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (LTRIM(vt0.c1))), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))/((vt0.c1 IN ()))); -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS NUMERIC))OR((((x'0cc3'))>=((vt0.c1))))))AND(vt0.c1 COLLATE NOCASE)), ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL), AVG(x''), ((((vt0.c0 COLLATE RTRIM)OR(COUNT(*))))OR(vt0.c0 COLLATE BINARY)), x'' FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)=(vt0.c1)) AS TEXT) FROM vt0 WHERE (CASE CAST(NULL AS REAL)  WHEN ((0X20e7e453) NOT BETWEEN (0.29568891298928945) AND (NULL)) THEN ((NULL) BETWEEN (NULL) AND (x'')) ELSE CAST(x'' AS NUMERIC) END); -- 0ms;
SELECT DISTINCT '⮜x&v倽N' FROM vt0 WHERE ((((((0.03691120421752647)<=(x''))))>=((TYPEOF(DISTINCT NULL))))); -- 0ms;
SELECT ALL vt0.c0 COLLATE RTRIM, CAST(((vt0.c1)&(vt0.c1)) AS INTEGER), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, CAST(vt0.c1 AS TEXT), ((vt0.c0) NOT NULL))) AND ((((2120234129)*(vt0.c1)), (vt0.c0 IN (vt0.c1)), SUM(vt0.c0)))) FROM vt0 WHERE ((CAST(x'' AS REAL) IN (-2102033167 COLLATE RTRIM))); -- 0ms;
SELECT ALL 'OW	a>u' FROM vt0 GROUP BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((vt0.c1)OR(vt0.c1))))); -- 0ms;
SELECT DISTINCT CAST(SUM(vt0.c0) AS NUMERIC) FROM vt0 ORDER BY ((((0.59640368508043)OR(vt0.c1)))OR((((x''))>=((vt0.c0))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT '?4' FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)==(vt0.c1)) IN ()) FROM vt0 WHERE (((((x'24f0') NOTNULL)) IS FALSE)) GROUP BY (NOT (((vt0.c1)GLOB(vt0.c1)))); -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT vt0.c1))<(((((vt0.c0)AND(0Xffffffff98f08985)))OR(vt0.c0)))), (((vt0.c1, -1623585796, vt0.c0)) BETWEEN ((((vt0.c1)+(vt0.c0)), (~ (vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0)LIKE(vt0.c1)), LIKELY(DISTINCT x''), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))), ((((GROUP_CONCAT(vt0.c1))OR(UNLIKELY(vt0.c0))))OR(-3892198)) FROM vt0 GROUP BY (((vt0.c0)<<(vt0.c0)) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, (NOT (vt0.c0)))) HAVING ((((vt0.c1)>('173972423'))) BETWEEN (LENGTH(vt0.c0)) AND (vt0.c0)); -- 0ms;
SELECT ALL ((((- (vt0.c0)), ((vt0.c1)IS(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END))>=((vt0.c1 COLLATE BINARY, ((vt0.c1) NOT NULL), NULL))) FROM vt0; -- 1ms;
SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END FROM vt0 WHERE ((((+ ('-1227032410'))) NOT BETWEEN (((((((((x'665af674690f')OR(0.2951112730150839)))AND(NULL)))OR(NULL)))AND(NULL))) AND (TYPEOF(DISTINCT 0x18a9a18d)))); -- 0ms;
SELECT ALL ((((vt0.c1)IS(vt0.c1)))==(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)), ((vt0.c0 COLLATE RTRIM) IS FALSE), LAST_INSERT_ROWID() FROM vt0 ORDER BY LOWER(json_remove('.^OIx6w', vt0.c1, '428472254', x'6729')) ASC;SELECT (NULL IN ()), ((+ (vt0.c0)) IN ()), ((((~ (vt0.c1))))<>(((~ (vt0.c1))))) FROM vt0; -- 0ms;
SELECT ALL CAST(CAST(vt0.c1 AS TEXT) AS INTEGER), NULL, vt0.c0 FROM vt0 WHERE (((('*?4[3]w' IN ())) NOT BETWEEN (LIKELIHOOD(NULL, 0.42809140806238577)) AND (((0.3056935974619597)LIKE('-1625342272'))))); -- 0ms;
SELECT ALL ((NULL COLLATE NOCASE)>>(x'')) FROM vt0 WHERE ((+ (CAST('' AS TEXT)))); -- 0ms;
SELECT DISTINCT '', vt0.c1, LAG(CAST(vt0.c0 AS NUMERIC), ((LOWER(DISTINCT vt0.c0))<=(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), ((((vt0.c0) ISNULL)) NOT BETWEEN (NULL) AND (((((((((vt0.c1)AND(vt0.c0)))OR('')))OR(vt0.c0)))AND(x''))))) OVER () FROM vt0; -- 0ms;
SELECT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) FROM vt0 WHERE (LIKELIHOOD(CAST(x'' AS TEXT), 0.9785271931545446)); -- 0ms;
SELECT x'', x'', ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))AND(((vt0.c1)-(vt0.c0)))) FROM vt0 WHERE ('-1525857158'); -- 0ms;
SELECT DISTINCT ((((vt0.c1)<(vt0.c0))) IS FALSE) FROM vt0 WHERE (((CAST(0x2c9e2ba3 AS NUMERIC)) NOTNULL)); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)-(vt0.c1))) OVER ( GROUPS BETWEEN LIKELIHOOD((vt0.c1 IN ()), 0.3168791885039999) PRECEDING AND (((vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((vt0.c1 IN ())))) FOLLOWING), (((vt0.c1)) NOT BETWEEN ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c1 AS BLOB)))), (((vt0.c0)) BETWEEN ((x'')) AND ((0.06202272206558923))) COLLATE RTRIM FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT MIN('舏HFR#') FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((((vt0.c1)OR(1.607149006E9)))OR(vt0.c0)))) FROM vt0 WHERE (((UPPER(0.2894598490129805))-(((1.574905356E9)/(x''))))); -- 0ms;
SELECT ALL CASE NULL  WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) ELSE ((x'')&(vt0.c1)) END, ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0)<>(vt0.c0)))))AND(SUM(vt0.c1))))OR(((vt0.c1) IS TRUE))))AND('-1924502157')), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) FROM vt0 GROUP BY NULL HAVING CASE ((vt0.c1)!=(vt0.c0))  WHEN (vt0.c1 IN ()) THEN CAST(vt0.c1 AS TEXT) END; -- 0ms;
SELECT ALL NULL FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0 WHERE (((('628385733')) BETWEEN ((((x'1271') ISNULL))) AND ((x'')))) GROUP BY CASE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c0)OR(vt0.c0)) END; -- 0ms;
SELECT ALL CASE CAST(vt0.c0 AS REAL)  WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN CAST(vt0.c0 AS BLOB) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE NULL END END FROM vt0; -- 0ms;
SELECT ALL ((SUM(vt0.c1))IS NOT(vt0.c0)) FROM vt0; -- 0ms;
SELECT COUNT(((vt0.c0)+(vt0.c1))), CASE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) ELSE 0X1989f7be END, DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT '' FROM vt0; -- 0ms;
SELECT DISTINCT (+ ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ('')), NTILE((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((x'', ((vt0.c1) IS TRUE), CAST(vt0.c1 AS INTEGER))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt0.c1)), '552068179')))) OVER ( GROUPS TRIM(DISTINCT UNLIKELY(vt0.c0)) PRECEDING EXCLUDE CURRENT ROW), x'', ((vt0.c0 COLLATE NOCASE)!=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)), vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT ((((NULL)/(vt0.c1))) ISNULL) FROM vt0 WHERE ((((x'' COLLATE NOCASE, ((((x'')AND('-3892198')))OR(0.5286639549227918)), ((0.9008569003269354) ISNULL)))!=((CAST(NULL AS NUMERIC), (NULL IN ()), CAST(NULL AS TEXT))))) LIMIT -2004499700 OFFSET -1025185179; -- 0ms;
SELECT ALL SUM((+ (vt0.c0)) COLLATE NOCASE) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c0)) END FROM vt0 WHERE ('-1056806964'); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((+ (((NULL)<(x''))))); -- 0ms;
SELECT ((x'') BETWEEN (vt0.c0) AND (x'')) FROM vt0 WHERE (json_array_length(NULL COLLATE NOCASE)); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0 WHERE (LIKELIHOOD('-1861270879' COLLATE BINARY, 0.7408247523507537)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((x'' IN ()))<=('' COLLATE NOCASE))); -- 0ms;
SELECT vt0.c1, GROUP_CONCAT(((vt0.c0)=(vt0.c0))), CASE WHEN (+ (vt0.c1)) THEN MIN(vt0.c1) END FROM vt0 WHERE (load_extension((('I\r')OR('Em<''%e9v')))) GROUP BY (((((vt0.c0, 0x254534e3, vt0.c1))>(('OE', x'468e', vt0.c0)))) IS FALSE) HAVING AVG(0.9612099612193695);SELECT rtreenode(vt0.c0, '-1708589818') FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((x'')=(x'0cac4ce9')), 0.7684136626507941)) ORDER BY vt0.c0 DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))>=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) FROM vt0; -- 1ms;
SELECT ALL (- (NULL)), (vt0.c1 COLLATE NOCASE IN ()), CAST(((vt0.c1)AND(vt0.c0)) AS TEXT) FROM vt0 WHERE ((~ ((+ (0.9532650093455092))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)>=(vt0.c1)))AND(((vt0.c1)-(vt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))) FROM vt0; -- 0ms;
SELECT ALL TOTAL(((vt0.c1) NOTNULL)) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND LIKELIHOOD(((vt0.c0)>(vt0.c1)), 0.007142379801904908) FOLLOWING EXCLUDE TIES), (+ ((vt0.c0 IN ()))), (((vt0.c0 IN (vt0.c1))) NOT NULL) FROM vt0; -- 0ms;
SELECT vt0.c1, CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN CASE vt0.c1  WHEN NULL THEN 0.757447366065953 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1)<>(vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (((vt0.c1))=((vt0.c0))) ELSE vt0.c1 END, x'ea6d' FROM vt0; -- 0ms;
SELECT ALL (~ ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, 0.17292576935159043, 785313185)) AND ((vt0.c1, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((~ ((~ (0.20981337041152837))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))<=(CAST(vt0.c1 AS NUMERIC))), (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN (NULLIF(vt0.c0, vt0.c1))), ((NULL) NOT NULL) FROM vt0 WHERE (CASE (~ (NULL))  WHEN ('S' IN (0X9f6b220, x'')) THEN (- (NULL)) ELSE LIKELY('') END) GROUP BY (((((vt0.c1 IN ()))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)))AND((vt0.c0 IN (vt0.c1)))) HAVING (CASE WHEN vt0.c1 THEN vt0.c0 END IN (vt0.c1 COLLATE BINARY));SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c0)AND(vt0.c1))) AND (vt0.c1)), ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))+((vt0.c0 IN ()))), vt0.c1 FROM vt0 LIMIT 822473727; -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE)==(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))), AVG(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))), LEAD((((+ (vt0.c0)))<(((vt0.c0)/(vt0.c1)))), ((((vt0.c0)AND(json_array_length(vt0.c0))))OR(LIKELY(vt0.c1))), (~ ((NOT (vt0.c1))))) OVER ( ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC, (vt0.c1 COLLATE RTRIM IN ()) ASC) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) IS TRUE), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)GLOB(DATETIME(vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c1))) FROM vt0 WHERE ((((NULL) BETWEEN (1619840860) AND ('0.12497211364936311')) IN ())) GROUP BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS TEXT), NULL, ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<=(((~ (vt0.c0))))), CASE json_array_length(vt0.c0)  WHEN CAST(vt0.c1 AS TEXT) THEN ((((vt0.c1)AND(vt0.c1)))AND(1.574905356E9)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (vt0.c1 IN ()) WHEN '2018490018' THEN vt0.c1 COLLATE NOCASE END, (~ (((vt0.c1) IS TRUE))) HAVING vt0.c1; -- 0ms;
SELECT DISTINCT TOTAL(0.5108615909839287) FROM vt0; -- 0ms;
SELECT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)AND(vt0.c1)))AND('w\r敬c鰚J')) FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY ((((((((vt0.c0 COLLATE NOCASE)OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))OR(CAST(vt0.c1 AS BLOB))))AND(load_extension(vt0.c0, vt0.c1))))OR((~ (vt0.c0)))) DESC;SELECT DISTINCT CAST(((vt0.c1)!=(vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT (((('r5')LIKE(vt0.c0))) NOT NULL) FROM vt0 WHERE (CASE '|5.'  WHEN 'gZp' THEN (((-247863412))>((NULL))) WHEN MIN(1385187205, 0.46475246238904033) THEN NULL WHEN (x'21a3' IN ()) THEN x'' ELSE (x'' IN ()) END) LIMIT 1474046488 OFFSET 1666117966; -- 0ms;
SELECT DISTINCT '' COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT '毯Hl/' FROM vt0; -- 1ms;
SELECT DISTINCT ((NULL) BETWEEN ((('-115043289') NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (CASE CASE WHEN 6.28385733E8 THEN x'' WHEN NULL THEN '-155055367' WHEN 0.5726296726716051 THEN '' END  WHEN (~ (NULL)) THEN (('-884636835')|(0.11903716718263357)) END); -- 0ms;
SELECT ALL (('aW7EF')|(LOWER(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (NOT ((((vt0.c1))>=((vt0.c0))))), CAST(vt0.c1 COLLATE NOCASE AS TEXT), ((vt0.c1 COLLATE NOCASE) NOTNULL) FROM vt0 WHERE (UNICODE(((0.3162552825821594) NOT BETWEEN (NULL) AND ('448518694')))); -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt0.c1))<=('Y5퐔ig9')) FROM vt0 WHERE ((NOT (LIKELY(0.5438572187225716)))); -- 0ms;
SELECT 0xffffffffffc49c1a FROM vt0 WHERE (NULL) LIMIT 743441405 OFFSET -1863565272; -- 0ms;
SELECT ALL ((vt0.c1 IN ()) IN (CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT NULL))) FROM vt0; -- 0ms;
SELECT (((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))))-(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)), CAST(vt0.c1 AS TEXT) COLLATE RTRIM, ((((vt0.c0)>>(vt0.c0)))<=('>G')) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c1))>((vt0.c0))) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE vt0.c1 COLLATE RTRIM END FROM vt0 WHERE (CAST(x'' AS REAL) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT TOTAL(CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE) OVER () FROM vt0 GROUP BY CASE vt0.c0  WHEN '(}' THEN vt0.c1 END COLLATE NOCASE, vt0.c1, (((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (vt0.c0 IN (vt0.c1)), vt0.c0 COLLATE BINARY))<((vt0.c1 COLLATE NOCASE, vt0.c1, ((vt0.c1) IS FALSE)))) HAVING ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (AVG(vt0.c1))); -- 0ms;
SELECT DISTINCT ((vt0.c0)<=(vt0.c0)) COLLATE BINARY FROM vt0 ORDER BY (((vt0.c0 IN ()))LIKE(((vt0.c0) IS FALSE))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((vt0.c1)||(NULL))) NOT NULL) FROM vt0 WHERE (((CAST(x'' AS INTEGER)) NOTNULL)); -- 0ms;
SELECT ALL STRFTIME(((vt0.c0)<<(vt0.c0)), ((vt0.c1) NOTNULL), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)), 0.5934439192965522), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM, CASE WHEN '*e耆is&|U' THEN vt0.c0 COLLATE NOCASE END FROM vt0; -- 0ms;
SELECT CAST((- (vt0.c0)) AS INTEGER), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()), ((vt0.c1) ISNULL), CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND (((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((vt0.c1)=(vt0.c0)), (vt0.c1 IN ())))), ((((vt0.c0)>=(vt0.c0))) NOTNULL) FROM vt0 WHERE (NULLIF(CAST(1.428760731E9 AS TEXT), ((x'') NOT BETWEEN (2.120234129E9) AND (NULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((0.37793364198730794)) AND ((CAST(vt0.c1 AS BLOB)))) FROM vt0 WHERE ((('BMl5c?')OR('m,eὶᩆ')) COLLATE RTRIM); -- 0ms;
SELECT ALL CASE vt0.c0  WHEN NULL THEN CASE vt0.c0  WHEN vt0.c0 THEN x'a311174d' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END ELSE AVG(vt0.c1) END, GROUP_CONCAT((NOT (vt0.c1))) COLLATE NOCASE, (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) ISNULL), SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))), CASE (NOT ('-778452637'))  WHEN CAST(vt0.c0 AS BLOB) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) WHEN (((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN ((vt0.c1) IS FALSE) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END FROM vt0 NOT INDEXED; -- 0ms;
SELECT (((vt0.c1 IN ()))%((((vt0.c0))<>((vt0.c1))))) FROM vt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS INTEGER)) BETWEEN (CHAR(vt0.c1)) AND (LTRIM(vt0.c0, vt0.c0))) FROM vt0 ORDER BY CASE ((vt0.c1)AND(vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) WHEN (((vt0.c0))<((vt0.c1))) THEN CAST(vt0.c1 AS BLOB) WHEN CASE vt0.c0  WHEN x'' THEN vt0.c0 END THEN (- (vt0.c0)) END  NULLS FIRST; -- 1ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL CASE NULL COLLATE RTRIM  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END FROM vt0 LIMIT -1387301020; -- 0ms;
SELECT ALL (~ (vt0.c1)) FROM vt0 GROUP BY (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN (((vt0.c1 IN ()), CAST(vt0.c0 AS NUMERIC), (+ (vt0.c1)))) AND ((vt0.c1, vt0.c0, CAST(vt0.c1 AS REAL)))), (((vt0.c0))=((vt0.c1))) COLLATE BINARY COLLATE BINARY, ((((vt0.c1) NOT NULL))=(((vt0.c1)>>(vt0.c0)))); -- 0ms;
SELECT ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (0.5286639549227918) AND ((NOT (vt0.c0)))) FROM vt0 GROUP BY CAST(x'' AS BLOB) HAVING ((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))) IN ()); -- 0ms;
SELECT ALL CASE WHEN (('')IS NOT(vt0.c1)) THEN TRIM(vt0.c0) ELSE CASE WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'8902' ELSE vt0.c0 END END FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c1 THEN (vt0.c0 IN ()) ELSE MIN(vt0.c1) END FROM vt0 LIMIT -1609763131; -- 0ms;
SELECT (((vt0.c0 IN ())) BETWEEN (UNICODE(NULL)) AND (CAST(vt0.c0 AS TEXT))), ABS(DISTINCT (- (vt0.c0))), (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) FROM vt0; -- 0ms;
SELECT ((0.5750655235191695) NOT BETWEEN (CAST(0xffffffffd3eca8eb AS NUMERIC)) AND (((vt0.c0)*(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1) IS FALSE))AND(vt0.c1)))AND(vt0.c0)) FROM vt0 WHERE ((((NULL)AND(1.171493207E9)) IN (((0.30358200682566827) BETWEEN (NULL) AND (x'e70c')), (~ (0.7939114575693411))))) UNION ALL SELECT ALL ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c1) AND ('p 1wt|,')))) FROM vt0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT COALESCE(DISTINCT vt0.c0, vt0.c1)), -1447979701, ((TRIM(DISTINCT vt0.c1))|(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN '' ELSE vt0.c1 END)) FROM vt0 WHERE (UPPER(((NULL)/(NULL)))); -- 0ms;
SELECT ALL MAX(CAST(vt0.c0 AS REAL)) FROM vt0 WHERE (((NULL)GLOB((('-2121922334') BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT ALL (((TOTAL(vt0.c1)))==((((NULL) BETWEEN (vt0.c1) AND (0.1883445311111751))))), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) ISNULL), RANK() OVER () FROM vt0 WHERE ((((+ ('0s,k?'))) ISNULL)) LIMIT -1111133349 OFFSET 1019456591; -- 0ms;
SELECT x'', ((((((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c1)<<(vt0.c0)))))AND(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))AND(AVG(vt0.c1))))OR(((vt0.c0)>>(vt0.c1)))), (+ ((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((~ (((x'') NOT NULL)))) ORDER BY ((CAST(vt0.c1 AS BLOB))%(vt0.c1 COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT ALL ABS(CAST(vt0.c0 AS BLOB)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)|(vt0.c0)) COLLATE NOCASE COLLATE RTRIM FROM vt0 WHERE (CASE WHEN 'start of day' COLLATE RTRIM THEN ((5.52068179E8) NOT BETWEEN (0.9440438101877248) AND ('-0.0')) ELSE (('2071873194')<=(NULL)) END); -- 0ms;
SELECT DISTINCT vt0.c0, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>(CAST(vt0.c0 AS REAL))), CASE WHEN (((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c1, 0.9180622255706903))) THEN ((0.21274357243550768)=(vt0.c1)) WHEN (vt0.c1 IN ()) THEN NULL WHEN (NOT (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END FROM vt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT COUNT(vt0.c0), ((vt0.c1) NOTNULL)) FROM vt0; -- 0ms;
SELECT ALL SUM(((vt0.c0)<<(vt0.c0))) OVER ( GROUPS  CURRENT ROW), (((vt0.c0))!=((((vt0.c1) ISNULL)))), (((((((((vt0.c0 IN ()))AND(MAX(vt0.c0))))OR((~ (x'')))))OR(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((0.26816896904983134, 0.3079747385059789, vt0.c0))))) FROM vt0; -- 1ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1666117966'))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 WHERE (CAST('0.3162552825821594' AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((((0.5307056905352272)) NOT BETWEEN (('-1056806964')) AND ((0.669631574234817))) IN ())); -- 0ms;
SELECT ALL ((CASE WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '_W,c' END)*(vt0.c1)) FROM vt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( PARTITION BY CASE WHEN (vt0.c0 IN ()) THEN ABS(vt0.c0) ELSE ((vt0.c1) NOT NULL) END, ('0.9654824813390915' IN ())), CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM, TOTAL(((vt0.c1)GLOB(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST('ci|AF' AS NUMERIC))AND((x'' IN ('+o')))))OR(((-663349925)GLOB(0x50df4821))))) LIMIT 822473727; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE)) ISNULL), LAST_VALUE((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND(((vt0.c0) ISNULL))))OR((vt0.c1 IN ())))) OVER (), (((CASE WHEN vt0.c0 THEN 0.45053480146531 END))>((MIN(vt0.c1)))) FROM vt0 WHERE (CASE (('-1504469866') NOTNULL)  WHEN CAST('ᡜbm' AS BLOB) THEN CAST(NULL AS REAL) END); -- 0ms;
SELECT DISTINCT ((SUBSTR(x'72b6', vt0.c1)) NOT NULL) FROM vt0; -- 1ms;
SELECT DISTINCT ((CASE WHEN -1860993456 THEN vt0.c0 END)LIKE((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, x'', vt0.c0))))) FROM vt0 WHERE ((((NULL, x'', x'648e7907')) NOT BETWEEN ((x'5afd' COLLATE NOCASE, (('') BETWEEN (1.258761116E9) AND (x'')), CASE WHEN 'fT' THEN NULL WHEN NULL THEN -2102033167 WHEN x'' THEN '-755144363' END)) AND ((CAST(428472254 AS NUMERIC), '', (('<a挃~Ylb') BETWEEN (0.5182472097868818) AND (x'')))))) LIMIT -1056806964 OFFSET 625292515; -- 0ms;
SELECT ALL -752747941 FROM vt0; -- 0ms;
SELECT DISTINCT TYPEOF((vt0.c1 IN ())) FROM vt0 WHERE (QUOTE((+ (0xffffffff8e22c036)))) GROUP BY (CAST(vt0.c0 AS TEXT) IN ()) HAVING vt0.c1; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((- (CASE x''  WHEN -1846883675 THEN 0.6015728237009513 END))); -- 0ms;
SELECT DISTINCT (~ (NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))%(((vt0.c1)/(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) NOT NULL) COLLATE BINARY) OVER ( ORDER BY ((+ (vt0.c0)) IN ())) FROM vt0 ORDER BY vt0.c1 LIMIT -778452637 OFFSET -1729066619; -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0))==((vt0.c1))))*(vt0.c1 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((NOT (vt0.c1)))OR(((vt0.c1)OR(vt0.c0)))))OR(((vt0.c1) IS FALSE))) FROM vt0 WHERE ((NOT (UPPER('')))) GROUP BY (((x'', ((((vt0.c1)AND(NULL)))AND(vt0.c0)), ((((0.4488724806272719)OR(vt0.c1)))AND(vt0.c1))))>((((vt0.c0)!=(vt0.c0)), TYPEOF(vt0.c0), (vt0.c0 IN ())))) HAVING ((((vt0.c1, vt0.c0, vt0.c1))<=((vt0.c0, vt0.c0, vt0.c0))) IN ()); -- 0ms;
SELECT DISTINCT CAST(SUM(x'bd2a') AS REAL), ((((vt0.c0)<>(vt0.c0))) NOTNULL), NULL, CUME_DIST() OVER (), (((0.8262343902202951, vt0.c1, vt0.c1)) BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, MIN(vt0.c0), (- (vt0.c1)))) AND ((vt0.c0 COLLATE BINARY, ((vt0.c0) ISNULL), vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c1) IS TRUE) AS INTEGER), SUM((NOT (vt0.c0))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 1474754498 END)IS NOT(CASE WHEN vt0.c1 THEN vt0.c0 END)) FROM vt0 WHERE (CAST(('1762134578' IN ()) AS INTEGER)) GROUP BY CAST(((vt0.c1)-(vt0.c0)) AS REAL) HAVING ((((((((((((((vt0.c0)%(vt0.c1)))OR((NOT (vt0.c1)))))AND(SUM(vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR((vt0.c1 IN ()))))AND(((((((((vt0.c0)OR(vt0.c0)))AND('325334947')))AND(0.8963621252986002)))OR(vt0.c1)))))OR(((vt0.c1) NOT NULL))); -- 0ms;
SELECT 0xffffffffebfc68de COLLATE BINARY FROM vt0 NOT INDEXED WHERE ((((NOT ('785313185')))OR(((-214870450) NOTNULL)))); -- 0ms;
SELECT DISTINCT IFNULL((((vt0.c1))<((vt0.c1))), CASE 'ci|AF'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END), AVG(CAST(vt0.c1 AS BLOB)) OVER (), LEAD((NOT (vt0.c1)), CAST(vt0.c0 COLLATE NOCASE AS REAL), CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) OVER () FROM vt0 WHERE (0x12bd2719); -- 0ms;
SELECT ((((((((GROUP_CONCAT(vt0.c1))OR((- (vt0.c0)))))OR(((((((((0Xffffffffe66c656c)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt0.c0)<=(vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT COUNT(*) FROM vt0 GROUP BY (- (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) HAVING ((((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '167162400' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((NOT (vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(vt0.c1)))AND((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0))))); -- 0ms;
SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))|(((vt0.c1) IS TRUE))) FROM vt0 WHERE (((((((((((0x335c651b)OR('oZ''摁mUu')))AND(NULL)))AND(0.6510068225879446)))OR(0X47bb67c))) BETWEEN (CAST(1161344016 AS NUMERIC)) AND (x''))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))>(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((((((NULL) BETWEEN ('-1861270879') AND (0.36610934973495113)))OR('487620379')))AND((('t?苦ZyAKEr')==(NULL))))); -- 0ms;
SELECT ALL (((vt0.c0 IN ())) NOT BETWEEN ((~ (vt0.c0))) AND ((~ (NULL)))) FROM vt0 WHERE (x'' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))/((NOT (vt0.c0)))) FROM vt0 WHERE (CAST(((((NULL)AND(x'')))AND(0.8262343902202951)) AS REAL)); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 INTERSECT SELECT ALL ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (LENGTH(vt0.c1)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE (((CASE NULL  WHEN 0.3295159724243184 THEN x'9f5e' ELSE NULL END)&(INSTR(x'', NULL)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c1 THEN -1861270879 ELSE vt0.c1 END)))OR(vt0.c1 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN TRIM(DISTINCT x'', NULL) THEN ((0.3580594583430886) NOT BETWEEN (x'8f2b') AND (0.6239605061264688)) ELSE (0.366673152687945 IN ()) END); -- 0ms;
SELECT ALL ((SUM(vt0.c1)) NOTNULL) FROM vt0 WHERE (((NULL)IS NOT((((NULL))<=((NULL)))))) GROUP BY (((((vt0.c1)OR(-1.19868486E8)))OR(vt0.c1)) IN ((((vt0.c1))>((vt0.c0))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (x'') AND (CAST(vt0.c1 AS REAL))) FROM vt0 GROUP BY '2110042886'; -- 1ms;
SELECT ALL (((NOT (vt0.c1))) IS FALSE) FROM vt0 WHERE ((((NULL)!=(-1891428260)) IN ())); -- 0ms;
SELECT GROUP_CONCAT(0.7437563398055753) COLLATE RTRIM FROM vt0 WHERE (((CASE x'3832'  WHEN 0.9374818755104392 THEN -103197574 ELSE 0.47567689185400197 END) IS FALSE)); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(GROUP_CONCAT(vt0.c0))) FROM vt0 GROUP BY (((vt0.c0 COLLATE NOCASE))==((((((vt0.c1)AND('MvgbAqOs')))AND(vt0.c0))))), '', vt0.c0, CASE WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN vt0.c0 ELSE ((vt0.c1)<(vt0.c1)) END, (((vt0.c1, vt0.c1, 0.09403564782845153)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((((vt0.c1)OR(0.12908754034686887)))AND(0x5ef4b3e2)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), 0.5750655235191695, ((vt0.c1)!=(0.8717732457030136))))), (((+ (vt0.c1))) BETWEEN ((((vt0.c1))==((vt0.c1)))) AND (0.21274357243550768)), CAST(vt0.c1 COLLATE NOCASE AS INTEGER) HAVING vt0.c0; -- 0ms;
SELECT DISTINCT CASE LOWER(vt0.c0)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c1) IS FALSE) THEN (((vt0.c1, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0))) WHEN ((vt0.c0)*(vt0.c1)) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.23832310492283892) END FROM vt0; -- 0ms;
SELECT DISTINCT CAST(0.41677425035725113 COLLATE RTRIM AS REAL), ((CAST(vt0.c0 AS BLOB)) BETWEEN (vt0.c0) AND (vt0.c1)), (- ((~ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT MIN((~ (vt0.c1))) FROM vt0; -- 0ms;
SELECT ALL (~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) FROM vt0 WHERE (((0.10120374001544041 IN (NULL)) IN ((x'' IN ('645127987'))))); -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM vt0 WHERE (((((CASE '-1162963929'  WHEN '-1861270879' THEN '-563710563' ELSE NULL END)AND(((0.5645043596461166) NOTNULL))))AND((((('-949260677')OR(NULL)))AND('bBg<?'))))); -- 1ms;
SELECT (~ (((vt0.c0)GLOB(vt0.c0)))) FROM vt0 WHERE (((0.30947206513644676)|(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ())) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT DISTINCT MAX(vt0.c1), CASE WHEN json_quote(vt0.c1) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.9595627603872326 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END WHEN NULL THEN json_quote(vt0.c0) WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((0.9642720385387643))) WHEN NULL THEN ((vt0.c1) IS TRUE) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)OR(vt0.c0)) ELSE CAST(vt0.c1 AS INTEGER) END, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((COUNT(*), vt0.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((0.25828516094297715, (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END))) FROM vt0; -- 0ms;
SELECT CAST(MIN(vt0.c1) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) OVER ( ROWS  CURRENT ROW) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END), ((TOTAL(NULL))AND(((vt0.c1)IS(vt0.c0)))), ((vt0.c0 COLLATE RTRIM)IS NOT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((x'')) AND ((NULL))) COLLATE NOCASE); -- 0ms;
SELECT ALL CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) AS REAL), CAST(vt0.c1 AS INTEGER), CASE WHEN ((vt0.c1)=(vt0.c1)) THEN vt0.c1 COLLATE BINARY WHEN CAST(vt0.c1 AS BLOB) THEN (((vt0.c0))<=((vt0.c1))) WHEN (- (vt0.c0)) THEN x'' END, CAST(((0x5cc3438f)AND(NULL)) AS BLOB), SUM(vt0.c0) FROM vt0; -- 0ms;
SELECT ALL ((((+ (vt0.c1))))<>((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) FROM vt0 WHERE ((COALESCE(NULL, '', NULL, 0.2922748674882307) IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE NOCASE)<(x'')) FROM vt0; -- 0ms;
SELECT DISTINCT AVG((('') NOT BETWEEN (0.6169563874527364) AND (vt0.c0)) COLLATE BINARY), (((vt0.c0)) BETWEEN ((vt0.c1)) AND (((- (vt0.c0))))), (((((~ (vt0.c0)))AND(((((((((vt0.c1)OR(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0)))))AND((x'4f25' IN (vt0.c0, vt0.c0)))), vt0.c1, 5.52068179E8 FROM vt0 WHERE (CASE CASE NULL  WHEN NULL THEN 'dK0M' WHEN '>bc(' THEN x'' WHEN 0xffffffff950ee7fa THEN -1e500 WHEN x'' THEN NULL WHEN NULL THEN '-914128369' ELSE 0.9371090287743445 END  WHEN (0.9672024641059076 IN ()) THEN ((((0.7709867060483971)AND(NULL)))OR(0.5182472097868818)) END); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c1)))) AND ((COUNT(vt0.c1)))), ((AVG(vt0.c0)) IS TRUE), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE, (((SUM(vt0.c1)))>(((vt0.c0 IN (vt0.c1))))), 0.10872571105774054 FROM vt0 ORDER BY (('L')<(((vt0.c1)>>(vt0.c1)))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT CAST(CAST(NULL AS REAL) AS INTEGER) FROM vt0; -- 0ms;
SELECT ALL AVG(((vt0.c0) BETWEEN (-1049753889) AND (vt0.c1))) FROM vt0 WHERE (((NULL)==(((((NULL)AND('-1708288980')))AND(''))))); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CAST(0xfffffffff16472c5 AS BLOB)))) FROM vt0; -- 0ms;
SELECT (vt0.c1 IN ()) FROM vt0 ORDER BY ((9.25395161E8) ISNULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1)>(vt0.c0)) THEN ((vt0.c0) BETWEEN ('-558682661') AND (vt0.c1)) END, ((((vt0.c0)AND(((vt0.c1)-(vt0.c1)))))AND(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))), (vt0.c1 COLLATE RTRIM IN ()), (((0.6385274141090994)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) AND ((((vt0.c0)<=(vt0.c0))))), PERCENT_RANK() OVER () FROM vt0 WHERE ((((NULL)|(x'')) IN ((0.04123246428780991 IN ()), CASE x'adb4'  WHEN 0xffffffffcc6a6047 THEN x'' END))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) BETWEEN (NULL) AND (vt0.c1)))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c1 END)))AND((~ (x'')))))AND(vt0.c1)))OR(CAST(x'' AS BLOB))) FROM vt0 WHERE (json_array(TRIM(DISTINCT NULL, 0.5934439192965522), 'S&aTuWbm4' COLLATE RTRIM)); -- 0ms;
SELECT CAST(COUNT(*) AS BLOB) FROM vt0 LIMIT -1850479968; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1) IS FALSE))OR(COUNT(vt0.c0))))AND(CAST(vt0.c1 AS REAL))) FROM vt0 WHERE (((0.3505534013623651 COLLATE RTRIM) NOT BETWEEN (((0.2060629401295363) NOT BETWEEN (NULL) AND (0.635427413179487))) AND (((((0.8377247813501535)AND(0.6497950607714162)))AND(x''))))) LIMIT 690211595; -- 0ms;
SELECT ((((vt0.c0)<(vt0.c0)))+((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((0X3d70771b))))) FROM vt0 WHERE (((LOWER(DISTINCT x'')) BETWEEN (9.25395161E8 COLLATE BINARY) AND ((('%F.PeDy㶷 ')%(x'ba2e'))))) GROUP BY ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))GLOB(TRIM(vt0.c1, 0.1636682409523713))); -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS BLOB)))>(((vt0.c0 IN ())))), ((vt0.c0)LIKE(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)), ((NULL)||(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 WHERE (((((json_array_length(''))OR((+ (x'')))))OR(((NULL)>=(0.9612099612193695)))));SELECT DISTINCT GROUP_CONCAT((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1)))) OVER () FROM vt0 WHERE (('' IN (NULL COLLATE BINARY))); -- 1ms;
SELECT ALL UNICODE(CAST(vt0.c0 AS REAL)) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*), TRIM(((((0x17037437)AND(vt0.c1)))OR(vt0.c0)), vt0.c0 COLLATE RTRIM), MAX(TRIM(vt0.c0, vt0.c1)) FROM vt0; -- 0ms;
SELECT ((NULL)>((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))), TOTAL((vt0.c0 IN (vt0.c1, vt0.c0))) OVER (), (((NULL IN ()))<((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT vt0.c1) FROM vt0 WHERE (LIKELY(((('-115043289'))>(('1131529418'))))); -- 0ms;
SELECT ((('' IN ()))>=((- (vt0.c1)))) FROM vt0 WHERE (((((((((((NULL)AND(NULL)))AND(NULL)))AND(0.33448764429842415)))AND(x''))) NOT BETWEEN ((NOT ('z'))) AND (json_extract(NULL, '-1335089267')))); -- 0ms;
SELECT DISTINCT CAST((vt0.c1 IN (vt0.c0, vt0.c1)) AS REAL) FROM vt0 WHERE (json_array_length(x'59f7' COLLATE RTRIM, (x'' IN ())));SELECT DISTINCT CASE '阂<)'  WHEN vt0.c1 THEN 487620379 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN 't~' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN (((('') IS TRUE), vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0x4b072b9c)))) AND (((((vt0.c0, x'', vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0))), ((vt0.c0)IS(vt0.c0)), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))) FROM vt0 LIMIT 928159996; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(((vt0.c1) IS TRUE))) FROM vt0; -- 0ms;
SELECT DISTINCT AVG((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) OVER () FROM vt0 WHERE (CAST((x'63ef' IN ('0.21274357243550768')) AS TEXT)) LIMIT -989215013 OFFSET 853294454; -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c1))))) AND ((GROUP_CONCAT(vt0.c0)))), (NOT (0.19598664547684286)), TRIM(DISTINCT (((vt0.c0, '', vt0.c1))>=((vt0.c1, vt0.c0, vt0.c1))), ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((TRIM(DISTINCT vt0.c0, vt0.c0))) AND (((('402510695')%(vt0.c1))))) FROM vt0 WHERE (rtreenode(((('AjGf>\n*G')) NOT BETWEEN ((x'')) AND (('-247863412'))), (((-1.708589818E9, NULL, x'285d'))<>((0.23582138641705042, -2004499700, 0.9674023223792699))))); -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END IN ()), ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((+ (vt0.c0))) AND ((vt0.c1 IN ()))), LEAD(vt0.c0, ((0X4edfabc6) IS TRUE), (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c1)))) OVER ( ORDER BY CASE WHEN ((vt0.c1)<<(vt0.c1)) THEN (((vt0.c0))!=((0.40911584479968677))) ELSE TYPEOF(vt0.c1) END  NULLS FIRST) FROM vt0; -- 0ms;
SELECT ABS(vt0.c0) FROM vt0 WHERE (CAST((((0.8356908195948215))=((0.14784399466448328))) AS INTEGER)); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT 'RN{er', ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))), (((vt0.c1)) BETWEEN ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))), ((((('LEq!(Tꬄw]') BETWEEN (x'f951') AND (vt0.c0))))==(((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((0.7999842255698908)>(NULL)))) GROUP BY ((~ (vt0.c0)) IN ()), (~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))), 'Q(vH-'; -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE RTRIM AS NUMERIC) FROM vt0 WHERE (((((((x'3762') NOTNULL))AND(0.30358200682566827)))OR(json_array('0.3579773589265546', 1.7976931348623157E308, NULL, '-914128369')))); -- 1ms;
SELECT DISTINCT TOTAL((+ (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) NOT NULL)) BETWEEN (vt0.c0) AND ((~ (vt0.c1)))) FROM vt0 WHERE ((((((x'2c14204d' IN ()))OR(CAST(x'' AS REAL))))OR(((0.29018204151694416)>(NULL))))) GROUP BY UNLIKELY(DISTINCT (+ (vt0.c0))), ((((vt0.c1)IS NOT('-1001725189')))OR(vt0.c0)), (CAST(vt0.c0 AS INTEGER) IN ()); -- 0ms;
SELECT DISTINCT HEX(((vt0.c0)OR(vt0.c0))) FROM vt0; -- 0ms;
SELECT x'e2fe' FROM vt0 WHERE ((((x'')) NOT BETWEEN ((0Xffffffffeaa0dde4 COLLATE BINARY)) AND ((((x'') NOT BETWEEN (0x407f8c0e) AND (x'')))))); -- 0ms;
SELECT DISTINCT (((((vt0.c1)|(vt0.c1))))=((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CHANGES() FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c1)%(vt0.c0)) AS REAL) FROM vt0 WHERE ((CHAR('') IN (((NULL)<(x''))))); -- 0ms;
SELECT ALL MAX(TRIM(DISTINCT 0.22997415759208673, vt0.c1)) COLLATE RTRIM, CAST(vt0.c0 COLLATE NOCASE AS BLOB), vt0.c0 FROM vt0 WHERE (CAST(CAST('' AS REAL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((+ (vt0.c1)) IN ()) FROM vt0 WHERE (CAST(0.07159309806807435 AS REAL)); -- 0ms;
SELECT DISTINCT ((NULL) NOTNULL), 1296756217, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.3892733349815788)))/(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((LIKELY(DISTINCT '*	#!'))AND(NULLIF(vt0.c0, vt0.c1))))OR(0.653240231252889)))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((''))))))AND(((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 LIMIT 2018490018 OFFSET -1033987301; -- 0ms;
SELECT DISTINCT COUNT((+ (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL json_array(((vt0.c1) BETWEEN (vt0.c1) AND (NULL)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) FROM vt0; -- 1ms;
SELECT ALL ((((((vt0.c0)<>(vt0.c0)))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0)IS(vt0.c1)))) FROM vt0 WHERE (CAST(x'6227b97c' AS TEXT) COLLATE BINARY) LIMIT 1246010657; -- 0ms;
SELECT DISTINCT SUM(NULLIF(vt0.c0, 0xffffffffc42b4b92)) OVER () FROM vt0 WHERE (((((((x'')AND(0.7127877603427016)))OR(''))) IS TRUE)); -- 0ms;
SELECT (((((vt0.c0))>((vt0.c0)))) NOT BETWEEN (MIN(vt0.c1)) AND (NULLIF(vt0.c1, vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c1 END)||(CASE WHEN 0.2906897672445624 THEN vt0.c1 END)) FROM vt0; -- 0ms;
SELECT ((((vt0.c1)&('0.7409432290135445')))LIKE((NOT (vt0.c0)))), (vt0.c1 IN ((vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((((vt0.c1)<=(vt0.c1))) NOTNULL) FROM vt0 WHERE (-1989134594); -- 0ms;
SELECT ALL CASE ((vt0.c1)*(vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c0)))AND(x'')) THEN ((vt0.c0) IS TRUE) ELSE ROUND(vt0.c1, '') END FROM vt0 WHERE ((x'' IN (UNICODE(0.5432060953597387)))); -- 0ms;
SELECT DISTINCT CAST('' AS BLOB) FROM vt0 WHERE (((((x'ac4decbd'))<=((x''))) IN ())); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (HEX(DISTINCT vt0.c1)) AND ((((vt0.c0))!=((vt0.c0))))), CAST((('1418678333')*(vt0.c0)) AS INTEGER), ((((((((((vt0.c1)>(vt0.c1)))AND(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(NULL)))))AND((NOT (vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER))) FROM vt0 WHERE (IFNULL(CASE x''  WHEN '' THEN 0.01968848639487686 ELSE 0.7867074201747348 END, (NULL IN ()))) GROUP BY ((vt0.c0)<<(vt0.c1)) COLLATE NOCASE HAVING (((((vt0.c0 IN ()))OR(((vt0.c1) NOT NULL))))AND((((vt0.c1))<=((vt0.c0))))); -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL))) FROM vt0 WHERE ((+ ((((NULL, NULL, x'')) NOT BETWEEN ((x'def3', 0X2d62a5c5, 0.5672537575774125)) AND ((121794951, NULL, x'6d91')))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NOT (vt0.c0))) FROM vt0 WHERE ((((('151147288') IS TRUE))LIKE(('748563363' IN ())))); -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c1)) BETWEEN (((vt0.c1)=(vt0.c1))) AND (((vt0.c1)=(NULL)))) FROM vt0 WHERE (((('oZ''摁mUu', '-2015216774', 'F')) NOT BETWEEN ((CAST(x'' AS INTEGER), (x'' IN ()), ((('')) NOT BETWEEN ((NULL)) AND ((x'7a56'))))) AND ((((x'ceaf') IS TRUE), ((x'9e81')>>('Mj')), NULL)))); -- 0ms;
SELECT DISTINCT (x'' IN ()) FROM vt0; -- 0ms;
SELECT CASE ((vt0.c0) NOT NULL)  WHEN AVG(vt0.c0) THEN ABS(DISTINCT vt0.c0) WHEN TOTAL(vt0.c1) THEN vt0.c0 COLLATE NOCASE WHEN TOTAL(vt0.c0) THEN COUNT(*) END FROM vt0 WHERE (CASE WHEN (- (x'')) THEN x'' WHEN ABS(x'') THEN 'N4L5⼾ECo' COLLATE BINARY WHEN (('-3892198') BETWEEN (NULL) AND ('641060794')) THEN ((x'') NOT NULL) END); -- 0ms;
SELECT ALL ((('?&W')) BETWEEN ((COUNT(vt0.c1))) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) FROM vt0 WHERE ((((INSTR(NULL, 0.8875356380553465), CAST('q(vh-' AS INTEGER), (x'' IN ())))!=(((- (']')), ((-1.525857158E9) NOT BETWEEN (1640196739) AND ('I앣<qOd,&e')), ('' IN ()))))); -- 0ms;
SELECT COUNT(*) FILTER(WHERE (IFNULL(DISTINCT vt0.c1, vt0.c1) IN (((vt0.c1) NOTNULL)))) OVER (), vt0.c1, (- (TOTAL(vt0.c1))) FROM vt0; -- 0ms;
SELECT (((- (vt0.c0))) IS TRUE) FROM vt0 WHERE (((((((x'')AND(x'')))OR(0.7979462500010865))) IS FALSE)); -- 0ms;
SELECT AVG(((vt0.c0) IS TRUE)) FROM vt0 WHERE ((((x'' IN ())) NOT BETWEEN (CHANGES()) AND (NULL))); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL)) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)), ((MAX(''))LIKE(vt0.c1)), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c1 IN (vt0.c1, vt0.c0, vt0.c1)))))AND((NOT (vt0.c1)))) FROM vt0 WHERE (CAST((('LEq!(Tꬄw]') NOT BETWEEN ('1619840860') AND (x'')) AS REAL)); -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c1 THEN vt0.c0 END, vt0.c1, AVG(vt0.c0)))<>(((+ (vt0.c1)), (('1914099720') IS TRUE), ((vt0.c0)LIKE(vt0.c1))))) FROM vt0 WHERE (CASE (((0.0662644184608101)) NOT BETWEEN (('OW	a>u')) AND (('9223372036854775807')))  WHEN (+ (NULL)) THEN CASE 'uE'  WHEN x'' THEN NULL END ELSE x'' COLLATE NOCASE END) GROUP BY (((vt0.c0 COLLATE NOCASE))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), ((((vt0.c1)%(vt0.c1)))>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), ((vt0.c0 COLLATE BINARY)*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST('W酏' AS INTEGER) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT COUNT((vt0.c0 IN (vt0.c0))) OVER ( ORDER BY (((((((('-119868486')AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c1)))AND((((vt0.c1))=((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) GROUPS  CURRENT ROW EXCLUDE GROUP) FROM vt0; -- 0ms;
SELECT RANK() OVER () FROM vt0 WHERE ((((x'' IN (0Xfffffffff0b0c7b2))) NOT BETWEEN ((~ (NULL))) AND (MAX('1149456232', 0.0884849768400251)))); -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM FROM vt0 GROUP BY (- (json_valid(vt0.c0))), (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL), ((((vt0.c1) ISNULL))!=((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))), (vt0.c0 COLLATE BINARY IN ()), (((NOT (vt0.c0)))<<(CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)); -- 1ms;
SELECT ALL CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL ((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((((0.059001907094620165) NOT NULL)) BETWEEN (((NULL) NOTNULL)) AND (((210852713)&(NULL))))); -- 0ms;
SELECT ALL ((TYPEOF(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (GROUP_CONCAT(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(NULLIF(DISTINCT vt0.c1, vt0.c1) AS INTEGER)) OVER () FROM vt0 WHERE (((CASE WHEN NULL THEN x'' END)AND(((('167162400'))<>(('-853376415')))))) ORDER BY ((vt0.c1)LIKE('rM')) DESC  NULLS FIRST; -- 0ms;
SELECT ((NOT (vt0.c0)) IN ()), (- (((vt0.c1)OR(vt0.c0)))), '1MSP|hen^' FROM vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS INTEGER)); -- 0ms;
SELECT DISTINCT LIKELIHOOD('', 0.780996763510719), vt0.c0, ((CASE 'r'  WHEN vt0.c1 THEN vt0.c1 END) NOT NULL) FROM vt0 WHERE (((((('-269325975', 0.491345546198681, x''))<(('-914128369', x'', 'ou')))) BETWEEN (((((x'7336')OR(NULL)))OR(NULL))) AND ((NULL IN ())))); -- 0ms;
SELECT ALL (NOT ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(vt0.c1) FROM vt0; -- 0ms;
SELECT ALL '青+ N''鋴\''', ((vt0.c1)>=((vt0.c1 IN ()))), (((+ (vt0.c1)))<=(MAX(vt0.c1))) FROM vt0 WHERE (x'f315'); -- 0ms;
SELECT DISTINCT '-489313577', CAST(NULL AS BLOB), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((',L20x'))) COLLATE BINARY FROM vt0 LIMIT -2014348044 OFFSET 634866943; -- 1ms;
SELECT ALL 0xffffffffd199c163, ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (NULL) AND ((('')%(vt0.c1)))), ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) FROM vt0 WHERE ((((('NH' COLLATE NOCASE)AND('lD' COLLATE RTRIM)))AND(CAST(0.18278669349458343 AS TEXT)))); -- 0ms;
SELECT (~ (0.31674159399231183)) FROM vt0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((vt0.c0)IS('''122'))) FROM vt0 WHERE (SUBSTR(NULL COLLATE NOCASE, 4.13770125E8 COLLATE BINARY)); -- 0ms;
SELECT ALL vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c1))) NOTNULL) FROM vt0 WHERE ((NOT (1.171493207E9 COLLATE NOCASE))); -- 0ms;
SELECT (~ (((vt0.c1) IS FALSE))) FROM vt0 WHERE ((((0.4716151293735279) IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT (((NULL))<=((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) FROM vt0 WHERE ((((('-115043289') NOT NULL)) NOTNULL)); -- 0ms;
SELECT ALL ((MIN(vt0.c0)) NOT BETWEEN ((~ (NULL))) AND (((vt0.c0) IS FALSE))) FROM vt0 WHERE ((((((NULL IN (0xffffffff9dc5c4b0, x'')))OR(((('p\j3')) BETWEEN (('')) AND ((''))))))OR(TYPEOF(0.2784904103443897)))); -- 0ms;
SELECT DISTINCT AVG((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c0, vt0.c1, vt0.c0)))) OVER ( ORDER BY CASE WHEN (((vt0.c0))<((vt0.c0))) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END ASC) FROM vt0 WHERE (0.21385166974912018); -- 0ms;
SELECT vt0.c1 FROM vt0; -- 0ms;
SELECT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) FROM vt0 WHERE (((CASE 0x3f1d192a  WHEN '448518694' THEN 0.253329136170383 END)GLOB(LIKELY(DISTINCT 0X2709224c)))); -- 0ms;
SELECT CASE WHEN GROUP_CONCAT(vt0.c1) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 COLLATE RTRIM END FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)!=('&P'))))<((vt0.c0))) FROM vt0 WHERE ((((~ (NULL))) BETWEEN (((((((((x'')OR(x'')))OR('')))OR('㒏1dE')))AND(x'7b19'))) AND (((x'')IS NOT(1052566900))))); -- 0ms;
SELECT DISTINCT (TOTAL(vt0.c1) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), '0.37793364198730794')) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) NOT NULL))AND(vt0.c0 COLLATE RTRIM)))OR(INSTR(vt0.c1, vt0.c0))))OR(((vt0.c1) IS FALSE))))AND(((vt0.c0)-(1171493207)))) FROM vt0 WHERE (NULL) EXCEPT SELECT PERCENT_RANK() OVER ( ORDER BY ((vt0.c0 COLLATE NOCASE)*((+ (vt0.c0))))) FROM vt0 WHERE ((((((NULL, NULL, '151147288')) BETWEEN (('-1525857158', 2135554560, 'S룷')) AND ((0.6442297359323617, '', 'Y2+}RF뷆u'))))>(CAST(0.34118590994034204 AS INTEGER)))); -- 1ms;
SELECT DISTINCT (((vt0.c1 IN ())) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND ('')) FROM vt0 WHERE (((('-1896906904')-(NULL)) IN (((x'393b')<=(NULL)), '^#zO☩y', NULL))) LIMIT -392203142 OFFSET 1229728210; -- 0ms;
SELECT CAST((vt0.c1 IN ()) AS TEXT) FROM vt0 WHERE (CASE CAST(0Xffffffffa35d7daa AS BLOB)  WHEN ('Yg_*' IN ()) THEN CASE WHEN NULL THEN 0.2951112730150839 ELSE x'336a' END WHEN (('zZXX1J') BETWEEN ('-258538833') AND ('')) THEN ((((((((0.254166543884052)AND('阂<)')))AND(x'')))AND(0.48166585741750123)))AND('1221011976')) WHEN ((x'') IS FALSE) THEN ((0Xffffffff90733311) BETWEEN (-1.924502157E9) AND ('')) WHEN ((0.5418313209934371)+('*NAO')) THEN (NOT ('0.21514921746372873')) WHEN CASE WHEN 0.9053199430265549 THEN -675244254 END THEN ((('J')) NOT BETWEEN (('U')) AND ((0X3aa9e57c))) END); -- 0ms;
SELECT ALL (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) IN ()) FROM vt0 GROUP BY ((((vt0.c0) IS TRUE)) BETWEEN ((('[y酗>ts)')IS NOT(vt0.c1))) AND (vt0.c0)), (~ (vt0.c0)) COLLATE NOCASE, JULIANDAY((vt0.c0 IN (vt0.c1)), vt0.c1, vt0.c0, ((0x20e7e453) IS FALSE), ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))); -- 1ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL)) BETWEEN ((vt0.c0 IN ())) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)), (NULL IN ()), (- (CAST(vt0.c1 AS INTEGER))) FROM vt0 WHERE ((((('Lt') BETWEEN ('616774830') AND (NULL))) ISNULL)) ORDER BY CAST(CAST('-909584468' AS NUMERIC) AS TEXT), vt0.c0; -- 0ms;
SELECT ((TRIM(vt0.c1, vt0.c0))IS NOT(((vt0.c0)>(vt0.c1)))), MAX(UPPER(vt0.c0)) COLLATE BINARY, '<a挃~Ylb' FROM vt0 WHERE ((((((NULL))>=((-1409970480)))) IS FALSE)); -- 0ms;
SELECT ALL ((((vt0.c1)LIKE(vt0.c1))) NOT NULL) FROM vt0 WHERE (CASE WHEN (('452941316') BETWEEN (x'e9de') AND (NULL)) THEN ((x'')IS NOT(x'')) ELSE (+ (x'')) END); -- 0ms;
SELECT CASE WHEN (((vt0.c0))>((vt0.c1))) THEN (vt0.c1 IN (vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END, (((vt0.c1)) NOT BETWEEN ((((vt0.c1)<>(vt0.c0)))) AND ((LTRIM(vt0.c0)))), CAST(((vt0.c1)IS NOT(vt0.c0)) AS BLOB) FROM vt0 WHERE ((NOT ((((x'12dd', x'', NULL)) BETWEEN ((-1806935819, '-497415915', ' p况ETJ')) AND ((0.6233375610873131, 0.028415821042110156, 0.5257878338207211)))))); -- 0ms;
SELECT (CAST(vt0.c1 AS TEXT) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c1)) FROM vt0 WHERE (CAST(((x'efc1')+(NULL)) AS TEXT)); -- 0ms;
SELECT ALL ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE FROM vt0 LIMIT -1266679965 OFFSET -995127757; -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE ((((CASE WHEN '943052561' THEN NULL END, ((((((((-8.84636835E8)OR(NULL)))OR('0.1883445311111751')))OR(0.3162552825821594)))OR(0.11547159547550923)), (('IIV')OR(''))))<>((((0x34c8acd1) ISNULL), ((((((((x'512e')OR(-1840630863)))OR(0.4787050955416724)))AND(x'')))OR(NULL)), CAST(x'' AS REAL))))); -- 0ms;
SELECT COUNT(*) OVER (), (- (vt0.c0)), ((vt0.c1)/(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))) FROM vt0 WHERE (((((((NULL) ISNULL))AND(NULL COLLATE NOCASE)))OR(''))); -- 0ms;
SELECT ALL (- (vt0.c1)) FROM vt0; -- 0ms;
SELECT ALL (((NOT (vt0.c1)))||(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((NULL)IS NOT(NULL)) COLLATE RTRIM) LIMIT 1171493207 OFFSET -1025185179; -- 0ms;
SELECT ALL ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))IS(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE 0xffffffffb11fc8d0 END)) FROM vt0 WHERE ((((((NULL) BETWEEN (-1441580661) AND (1591669680))))>(((('') ISNULL))))); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((vt0.c0)-(vt0.c1))) FROM vt0; -- 0ms;
SELECT ALL CASE ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN (((vt0.c1))<((vt0.c1))) THEN CAST(vt0.c0 AS BLOB) ELSE (('匘(u[]n')GLOB(vt0.c1)) END FROM vt0 WHERE ((((('2135554560')LIKE(NULL))) BETWEEN (CASE NULL  WHEN 0xffffffffd5169258 THEN NULL END) AND (((x'') BETWEEN (x'') AND ('173972423'))))); -- 0ms;
SELECT DISTINCT (~ (COUNT(0.6001888291981267))) FROM vt0 WHERE (((((0Xffffffffc9df5b13) IS FALSE))<((- (x''))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOTNULL))LIKE(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (('' IN (((((((((((((0.06801334274981397)AND(NULL)))AND('&{[\]\n')))AND(NULL)))AND(NULL)))OR(NULL)))OR(-732804893)), (((NULL)) NOT BETWEEN ((x'')) AND ((0.8068784180824503)))))); -- 0ms;
SELECT ALL (((vt0.c0 IN (vt0.c0))) ISNULL) FROM vt0 WHERE (CAST(((x'4349d982')-(x'')) AS REAL)); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB), CAST((vt0.c1 IN ()) AS INTEGER), ((CASE WHEN vt0.c0 THEN NULL WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN x'' ELSE vt0.c0 END)==(vt0.c1)) FROM vt0; -- 0ms;
SELECT DISTINCT SUM((- (vt0.c0)) COLLATE RTRIM) FROM vt0; -- 1ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN ((((vt0.c0))<>((vt0.c1)))) AND ((vt0.c0 IN ()))) FROM vt0 GROUP BY ((((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))||(vt0.c0 COLLATE NOCASE)), ABS((vt0.c1 IN (vt0.c1, vt0.c1))), UNLIKELY(((((0.0757262865332482)OR(vt0.c0)))AND(vt0.c0))); -- 0ms;
SELECT DISTINCT (AVG(vt0.c1) IN ()) FROM vt0 WHERE (((('r5', NULL, NULL, 1782389420, NULL)) NOT BETWEEN (((NULL IN ()), (((('d㭺')AND(x'')))OR('鵞z')), (((0.944349091387303, NULL, 'A#?cz4#~'))=((NULL, 0.5524954625424, NULL))), CAST('-894623424' AS REAL), (((1823828652, x'', NULL)) NOT BETWEEN (('%\n', NULL, NULL)) AND ((x'', 2.120234129E9, NULL))))) AND ((CAST(0X28f5b359 AS REAL), ABS(NULL), (('1428760731')|(0.5914319785524362)), NULL COLLATE BINARY, (- (x'453e')))))); -- 0ms;
SELECT UNLIKELY(DISTINCT (vt0.c1 IN ())) FROM vt0 WHERE (((CAST('' AS BLOB))<(CASE WHEN 2143698874 THEN 'R+&*' ELSE 0.7088758623831471 END))); -- 0ms;
SELECT (((vt0.c1))=((CAST(vt0.c1 AS REAL)))) FROM vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE (CAST((NOT (0.2725815938825945)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((vt0.c1)IS(NULL)))||(((vt0.c1) NOTNULL)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (- ((~ (vt0.c0)))) FROM vt0 WHERE ((((('-1202059780')==(x'9735'))) IS FALSE)); -- 0ms;
SELECT ALL (+ (CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (((CAST(1621856370 AS TEXT)) IS FALSE)) GROUP BY (((vt0.c1 IN ())) NOTNULL) HAVING (((((vt0.c1))<((vt0.c1)))) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (TRIM(DISTINCT vt0.c0, vt0.c0))); -- 1ms;
SELECT DISTINCT 0.8974612281644885 FROM vt0 WHERE (((CASE WHEN '-1993075905' THEN '' WHEN '' THEN x'' WHEN NULL THEN 1e500 WHEN 'xob8|*' THEN -1.153674827E9 WHEN x'bee31215' THEN 0.5836285793344008 WHEN '1331274396' THEN '-1585878818' WHEN x'9dd5' THEN x'' END) ISNULL)) LIMIT -519481054; -- 0ms;
SELECT ALL CAST((((vt0.c1))>((vt0.c0))) AS TEXT), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY, ((vt0.c1)>(MIN(vt0.c0))), COUNT(*) OVER (), (((('408453016')OR((+ (vt0.c0)))))OR(((vt0.c0)<>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (((vt0.c0)+(vt0.c1)) IN ()), (((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((x'') BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))=((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), NULL))), vt0.c0 FROM vt0 WHERE (((0.6936292076736866)%(CASE 1155486313  WHEN 1702336798 THEN x'' ELSE NULL END))); -- 1ms;
SELECT vt0.c1 FROM vt0 WHERE (NULLIF(DISTINCT ((-1433640304)LIKE('K~G䬋')), '-1794185222' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))<=((NULL))) FROM vt0 WHERE ((~ (x''))); -- 0ms;
SELECT DISTINCT (('-949260677') NOT NULL) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0 IN (vt0.c0, vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 1.61984086E9 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN 1561175361 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1)<(vt0.c0)))), '*s', (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))=((((vt0.c0)!=(vt0.c0))))) FROM vt0 GROUP BY ((vt0.c1 COLLATE RTRIM)>(LIKELY(DISTINCT vt0.c0))); -- 0ms;
SELECT DISTINCT (('785313185') NOT NULL) FROM vt0 GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL), (- (((vt0.c1)*(vt0.c1)))), (((('') IS TRUE))%(UPPER(DISTINCT vt0.c1))); -- 1ms;
SELECT DISTINCT (((((((x'e6c5', vt0.c1, vt0.c0))<((vt0.c1, vt0.c0, vt0.c0))))OR(((vt0.c1)OR(vt0.c1)))))AND(((vt0.c0) IS FALSE))) FROM vt0 WHERE (((((0.01644213854632748)OR((NOT (NULL)))))OR(((0.1883445311111751)GLOB(x''))))) GROUP BY (CAST(vt0.c1 AS INTEGER) IN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))), COUNT(*), ((((vt0.c0) NOTNULL))<<(CAST(vt0.c0 AS INTEGER))) FROM vt0 GROUP BY CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c1 ELSE vt0.c1 COLLATE NOCASE END, CASE (NULL IN ())  WHEN (~ (vt0.c1)) THEN ((vt0.c1)|(vt0.c1)) END, ((vt0.c1 IN (vt0.c1)) IN ()), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT NULL), ((TRIM(vt0.c1, vt0.c1)) NOTNULL); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), ABS(DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1)), COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ALL TRIM(DISTINCT json_remove(vt0.c1, vt0.c1), (vt0.c1 IN ())) FROM vt0;SELECT DISTINCT CAST(((((((((0x22ec4c41)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC) FROM vt0 WHERE (((((('1299232882')AND(NULL)))AND('')) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(AVG(((0Xffffffffbcfd24fd)IS NOT(vt0.c0)))) FROM vt0 WHERE ((NULL IN ()));SELECT CASE vt0.c0  WHEN x'' THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY, ((((vt0.c0 COLLATE NOCASE)AND((vt0.c1 IN (vt0.c0)))))OR((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))), ((vt0.c0)OR(x'3a46')) COLLATE BINARY, ((ABS(vt0.c0)) NOT NULL), (((vt0.c1)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND ((-1.70828898E9))) FROM vt0 WHERE (0.5995310714627079); -- 0ms;
SELECT DISTINCT ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM, 'I[hqxQ', (('-1272213838') IS TRUE) FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(vt0.c0)) AND (((vt0.c0)||(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((x'2023')GLOB(0.3579773589265546))) BETWEEN (((0.23605135839857938)IS NOT(NULL))) AND (CASE WHEN NULL THEN x'ad8c' WHEN 'kJ' THEN 1.474754498E9 WHEN NULL THEN '-1623585796' END))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL AVG((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) OVER () FROM vt0 WHERE (TIME(((0.320872611017454) NOT NULL), CAST('L' AS TEXT), ((0xffffffffb0805de4) IS TRUE))); -- 0ms;
SELECT (((AVG(vt0.c1), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END, NULL))=((((vt0.c1)<>(vt0.c1)), (+ (vt0.c1)), CASE 0.29115957624434563  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) FROM vt0 WHERE ('-130897332'); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((0Xfffffffff38ccd58)&(0.9674034275516572)))AND('1822525950' COLLATE NOCASE)))OR((NULL IN ())))); -- 0ms;
SELECT DISTINCT AVG(((vt0.c1)<=(vt0.c0))) FROM vt0 WHERE (x''); -- 0ms;
SELECT ALL CAST(vt0.c1 AS INTEGER) COLLATE RTRIM FROM vt0 WHERE ((NOT (((((NULL)AND(NULL)))OR(1.635797282E9))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))<(((vt0.c0)*(vt0.c1)))) FROM vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT CASE WHEN (((vt0.c1))>=((vt0.c0))) THEN (('-1794185222') NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c1) END FROM vt0 WHERE (((((NULL) BETWEEN ('') AND (x''))) NOT BETWEEN (x'') AND ((- (0.4033966188584388))))); -- 0ms;
SELECT ((CAST(x'' AS NUMERIC)) IS FALSE) FROM vt0 WHERE ((((NULL)<<(-424486938)) IN ())); -- 0ms;
SELECT ALL vt0.c1 FROM vt0 WHERE (CASE -1.924502157E9  WHEN CAST(NULL AS NUMERIC) THEN -914758118 COLLATE RTRIM ELSE NULL COLLATE RTRIM END) GROUP BY (((((NOT (vt0.c1)))OR(CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c1 AS TEXT))); -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE BINARY AS NUMERIC) FROM vt0 ORDER BY (- ('')) ASC; -- 0ms;
SELECT ALL '' FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (TYPEOF(DISTINCT vt0.c0))) FROM vt0 WHERE (CAST(((1795725094)%(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((MAX(vt0.c1)) NOT BETWEEN (((vt0.c0)||(vt0.c1))) AND (((vt0.c1)&(vt0.c0)))) FROM vt0 WHERE ((- (NULL))); -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE RTRIM  WHEN COUNT(vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END, (((vt0.c1, vt0.c1, '-159851817')) NOT BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(0.05861647758013788)))OR(vt0.c1)))OR(vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END, (- (vt0.c1)))) AND (((vt0.c0 IN (NULL, vt0.c0)), (vt0.c0 IN ()), TOTAL(vt0.c1)))), ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN x'3cc4' THEN vt0.c1 END)>=((NOT (vt0.c0)))) FROM vt0 WHERE (CAST('-1233971629' AS NUMERIC)); -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS TEXT) FROM vt0 WHERE ((((((NOT (0.9880890771120516)))AND((NOT (NULL)))))AND((((x'')) NOT BETWEEN ((-3892198)) AND (('-3892198')))))) LIMIT -650322938; -- 0ms;
SELECT (- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))), (~ (vt0.c1 COLLATE RTRIM)), (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c1)+(vt0.c0))))) FROM vt0 WHERE (((((NULL)|(x'')))>(((((x'')AND(NULL)))OR(0x799c0950))))); -- 0ms;
SELECT ALL ((((vt0.c1 COLLATE NOCASE)OR(vt0.c0)))OR(vt0.c1)) FROM vt0 WHERE (((((x'')*(0.9979888604281836))) NOT BETWEEN (CAST(0x34d1e42f AS NUMERIC)) AND (((0.2836073035052725)<(-159851817))))); -- 0ms;
SELECT ALL (- (vt0.c0 COLLATE RTRIM)) FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE  NULLS FIRST; -- 1ms;
SELECT ALL DENSE_RANK() OVER (), COUNT('+mu') OVER (), ((((vt0.c0)IS(vt0.c1))) NOTNULL), ((vt0.c1)>(vt0.c1)) COLLATE NOCASE, 's' FROM vt0 WHERE (ROUND('-760358591' COLLATE NOCASE, CASE WHEN NULL THEN x'75e0c72b' ELSE NULL END)) LIMIT -1846883675 OFFSET 1440939533; -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE (((((x'') NOT BETWEEN (-1573144856) AND (x'387c')))*(CASE WHEN x'' THEN x'' END))) GROUP BY UNLIKELY((vt0.c1 IN (vt0.c1, vt0.c0))), ((NULL) IS TRUE), CASE (vt0.c1 IN (vt0.c0))  WHEN ((vt0.c0)IS(vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END ORDER BY vt0.c0 DESC, (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))<>(((((NULL))>=((vt0.c0)))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))||((((vt0.c0, vt0.c1, x''))==((vt0.c1, NULL, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (CASE WHEN CAST('AchY''E' AS BLOB) THEN (('')<(0.7629988742982211)) ELSE CAST('1955405112' AS TEXT) END); -- 0ms;
SELECT ALL CASE ((vt0.c1)IS NOT(vt0.c1))  WHEN vt0.c1 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((x''))) WHEN vt0.c0 THEN (~ (vt0.c1)) WHEN (+ (x'')) THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))AND(CAST(vt0.c0 AS BLOB))))OR(((((vt0.c0)AND(0xffffffff9014a07c)))AND(vt0.c1)))))OR(NULL)))AND((((vt0.c1))<((vt0.c0))))) FROM vt0 WHERE ((+ ('' COLLATE BINARY))); -- 0ms;
SELECT ALL COUNT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) FROM vt0 LIMIT 1061296065 OFFSET 1528181604; -- 0ms;
SELECT ALL (((vt0.c0, CAST(vt0.c1 AS REAL), load_extension(vt0.c0)))<((vt0.c1 COLLATE BINARY, CAST(vt0.c0 AS NUMERIC), TOTAL_CHANGES()))), CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC), ((((((((((vt0.c0) IS TRUE))OR(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ()))))AND((('m,eὶᩆ')&(vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)) FROM vt0 WHERE ((((NULL)) NOT BETWEEN (((((NULL, 0x4b072b9c, 0.4788212062187399)) BETWEEN (('0.669631574234817', NULL, '#M')) AND (('Mi', x'04ff', 0.9466490509292402))))) AND (((((('-1891428260')OR('՝fY_\r')))OR('')))))); -- 0ms;
SELECT ALL (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()), ((((vt0.c1)GLOB(vt0.c0))) NOT NULL), MAX(LOWER(DISTINCT vt0.c1)), LIKELIHOOD(((vt0.c1) NOTNULL), 0.0023564684796026913), SQLITE_COMPILEOPTION_GET((('(%')>(vt0.c1))) FROM vt0 WHERE (((-6.14722699E8 COLLATE NOCASE) NOT BETWEEN ((((0.061934327595707606, NULL, -1525857158)) BETWEEN ((x'', -1014001045, '9c.ᮃ')) AND ((x'bd97', NULL, x'')))) AND ('-1708589818' COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT ((((vt0.c1) NOTNULL))|(((vt0.c0) ISNULL))) FROM vt0 WHERE (((((552068179)<<('394639607'))) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (CAST('ezJ/' AS TEXT)))) GROUP BY ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT (~ (CAST(vt0.c0 AS BLOB))) FROM vt0 LIMIT -1040286012 OFFSET 340950889; -- 0ms;
SELECT CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((vt0.c0)+('i4')) THEN TRIM(vt0.c0, vt0.c0) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE x'08b0eee7' END THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0)||(vt0.c1)) THEN -377508919 END FROM vt0 WHERE ((((('2135554560')GLOB(1997118817))) NOT BETWEEN (((0.1746157440562638)!=(0.0436203787108399))) AND (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)+(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL TRIM(vt0.c1 COLLATE NOCASE) FROM vt0 WHERE ('1385187205'); -- 0ms;
SELECT DISTINCT ((((vt0.c0)+(vt0.c0)))AND(((vt0.c0)<=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (SQLITE_SOURCE_ID())) FROM vt0; -- 0ms;
SELECT DISTINCT json_valid((1086408627 IN ())) FROM vt0 LIMIT -1861975168; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1)<(vt0.c0)) THEN (NOT (vt0.c1)) END FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, vt0.c0, vt0.c1))))) ASC, ((((vt0.c1)=(vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt0.c0)||(vt0.c1))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((0X5ce4455d)==(vt0.c1)) COLLATE RTRIM FROM vt0 WHERE ('1258761116'); -- 0ms;
SELECT ALL TRIM(DISTINCT CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END), ((2.120234129E9)<=(COUNT(*))), ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM)) FROM vt0 GROUP BY (NOT (vt0.c1 COLLATE RTRIM)) HAVING CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) AS REAL); -- 1ms;
SELECT ALL x'', (~ (0xffffffffa077a9e7)), TOTAL(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) FILTER(WHERE x'') OVER () FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0) IS FALSE) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))), ((((((((vt0.c0 COLLATE RTRIM)AND(vt0.c0)))AND(LIKELY(DISTINCT vt0.c0))))OR(0.12497211364936311)))AND((~ (x'abcb')))), ((((vt0.c1)*(vt0.c0))) ISNULL) FROM vt0 WHERE (CASE WHEN (('792411683')*(-1.235876287E9)) THEN ((NULL)AND(x'bb41')) ELSE CAST(NULL AS REAL) END); -- 0ms;
SELECT DISTINCT TOTAL(vt0.c1) FROM vt0 LIMIT -1497428114 OFFSET -558682661; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)OR(CAST(vt0.c0 AS NUMERIC))))AND((NOT (vt0.c0)))))AND(HEX(''))))OR(vt0.c1 COLLATE RTRIM)) FROM vt0 WHERE (((((0.31674159399231183)OR(0.6280799688736205)))AND(x'')) COLLATE NOCASE COLLATE RTRIM) GROUP BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER), (COALESCE(NULL, vt0.c1, vt0.c0, vt0.c1) IN (CAST(vt0.c0 AS NUMERIC), CAST(vt0.c1 AS BLOB))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((vt0.c1 IN ()))) HAVING ((((vt0.c1)LIKE(vt0.c1))) NOTNULL) LIMIT 1102302732 OFFSET 204088941; -- 0ms;
SELECT DISTINCT (((LOWER(vt0.c0), (vt0.c0 IN (vt0.c1)), vt0.c1 COLLATE BINARY))<(((- (vt0.c1)), ((((vt0.c1)OR(NULL)))OR(vt0.c1)), ((vt0.c0) IS TRUE)))) FROM vt0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c0)==(vt0.c1))) AND ((((vt0.c1, NULL, vt0.c0))>=(('-1803230335', vt0.c1, vt0.c1))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS REAL))OR(json_array_length(vt0.c1))))AND((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, NULL, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((((x'ebc5', '', NULL)) BETWEEN ((('1488301376' IN (1127557007)), CAST('-67250955' AS TEXT), (~ ('')))) AND ((('Q+sVwLII' IN ()), NULL COLLATE RTRIM, LIKELIHOOD(DISTINCT -2009104984, 0.831369313208165))))); -- 0ms;
SELECT DISTINCT (((((((((- (vt0.c0)))OR((vt0.c1 IN (vt0.c0, vt0.c1)))))OR(vt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c1)*(NULL)))) FROM vt0 WHERE (CAST(((NULL) NOT BETWEEN ('0.45053480146531') AND (NULL)) AS INTEGER)) ORDER BY ((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, 0xffffffffcb45835d))>=((x'', vt0.c0, ''))); -- 0ms;
SELECT (~ (vt0.c0)) FROM vt0 GROUP BY x'' HAVING CAST((vt0.c0 IN ()) AS BLOB); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c1 AS REAL)), (((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))-(vt0.c1)), (vt0.c1 IN ()) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c1)AND(vt0.c1)))AND('-2110026327')))OR(vt0.c0)))OR(vt0.c1)) COLLATE BINARY FROM vt0 WHERE (((((-1505798790) IS TRUE))>=(((NULL)|('413770125'))))); -- 0ms;
SELECT DISTINCT (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ()) FROM vt0 WHERE (((((x'1fdd') NOT NULL))>>(((('')) NOT BETWEEN ((1467824365)) AND ((NULL)))))); -- 0ms;
SELECT json_array_length(CAST(vt0.c0 AS BLOB), COALESCE(vt0.c0, x'')) FROM vt0;SELECT DISTINCT (((((vt0.c1)|(vt0.c0))))=((0.34180228087965847))) FROM vt0; -- 0ms;
SELECT ALL ((x'7a9d')GLOB(vt0.c1)) FROM vt0 WHERE ((('-2140092941' COLLATE BINARY)>>((((((((('%')AND(-444620421)))OR(0xffffffffcbf4aee9)))AND(x'a550')))AND('-1826475389'))))); -- 0ms;
SELECT AVG(vt0.c1) OVER ( PARTITION BY (((- (vt0.c1)))%(-1421931881)), NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (COUNT(vt0.c1))) FROM vt0 WHERE ((((((0X74651444))>=((0.8308942324533353)))) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1)OR(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN vt0.c1 COLLATE NOCASE THEN json_array_length(vt0.c1) WHEN LIKELIHOOD(vt0.c1, 0.851611304856442) THEN (((vt0.c1, vt0.c0, '-1175922373')) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))) END FROM vt0; -- 1ms;
SELECT DISTINCT COUNT(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END), MAX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), ((((vt0.c1) IS FALSE))LIKE(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((0.7269401275900338)) AND ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(0.0866057071178935)))AND(vt0.c1)))OR(vt0.c0))))), (((((+ (vt0.c1)))AND(((vt0.c1)%(vt0.c0)))))AND(((0.6015728237009513)==(NULL)))), ((SUM(vt0.c0))>((NOT (vt0.c0)))) FROM vt0 GROUP BY (((TRIM(DISTINCT vt0.c1)))<>((CAST(vt0.c1 AS NUMERIC)))) HAVING CHAR(((vt0.c0) BETWEEN (vt0.c0) AND (x''))); -- 0ms;
SELECT ALL ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) ISNULL) FROM vt0 ORDER BY ((NULL) NOT BETWEEN ((vt0.c1 IN ())) AND (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))); -- 1ms;
SELECT (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (SUM(vt0.c1)) AND (((vt0.c1)>(vt0.c0)))) FROM vt0 ORDER BY CAST('' AS INTEGER) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT (- ((vt0.c0 IN ()))) FROM vt0 WHERE (PRINTF(((x'fc35') NOT BETWEEN (0xffffffffa652ac01) AND (0.6686045600453948)), CAST(NULL AS BLOB), ('-853439900' IN ()), (+ (0.9652319694916318)), (('0.37793364198730794') NOT BETWEEN ('jQ') AND ('0.5934439192965522')))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 LIMIT 1386994410; -- 0ms;
SELECT ALL DATETIME(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c1 AS BLOB), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END), NULL, ((((-1704915199)OR(((vt0.c1) IS FALSE))))AND(vt0.c0)) FROM vt0 LIMIT 686729514; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), CAST(COUNT(*) AS INTEGER), 0.6361451809830472 FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)||(vt0.c0))) AND (CASE vt0.c1  WHEN 1e500 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)>>(CAST(vt0.c0 AS INTEGER))), '', 0Xffffffff81a13a68 COLLATE BINARY FROM vt0; -- 1ms;
SELECT ALL 0.8171407377167769 FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS FALSE) FROM vt0 WHERE (CAST(CASE WHEN 1666117966 THEN 'O䠡' END AS INTEGER)) LIMIT -1883198726; -- 0ms;
SELECT ALL MAX(((vt0.c1)>=(vt0.c0))), CAST(x'' AS BLOB), json_array_length('-9223372036854775808', LIKELY(DISTINCT vt0.c0)), CAST(AVG(vt0.c1) AS REAL), MAX((('148119598')<<(0.523247002961853))) FROM vt0 WHERE (HEX(CAST(0.9713971798852351 AS NUMERIC)));SELECT PERCENT_RANK() OVER () FROM vt0 WHERE (CASE ((((0X257467c5)AND(-1175922373)))AND(x''))  WHEN (~ ('')) THEN LIKE('0.5113731808273818', x'') ELSE CASE WHEN 0xffffffff9c5dfb6e THEN x'' ELSE 0.8903730991536016 END END); -- 0ms;
SELECT (~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) FROM vt0 WHERE (((('-1266679965', '', 0.09218427798146422, 0.3892733349815788, 0.29568891298928945)) NOT BETWEEN (((((0.5252170928223443, NULL, '-1554154070', x'', NULL)) BETWEEN ((x'd2c5', x'', -111061595, NULL, 0.6271097377929773)) AND ((x'', x'', NULL, 0Xffffffffef689fc0, 0.3346759118112158))), (~ (0Xfffffffff1324df6)), ((NULL)AND(0.7865139556016868)), ((NULL) NOT BETWEEN (5.52068179E8) AND ('2111750861')), CASE WHEN '332502665' THEN 0.8015366479161129 END)) AND (((~ ('625292515')), CASE 0.5962772746251261  WHEN '-901464655' THEN x'01bd' ELSE 0.7655409640080337 END, NULL, NULL COLLATE NOCASE, (((NULL, -0.0, 0X1eb67221, '-1800442200', '0.2922748674882307'))=((NULL, '2120234129', x'dea3', '◎i', 0x60f72462))))))); -- 4ms;
SELECT DISTINCT (((+ (vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND ((((vt0.c0))>=((vt0.c0))))), (((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), MIN(CAST('354954158' AS INTEGER)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((json_array_length(vt0.c0))LIKE(vt0.c0)), (((vt0.c1)) NOT BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((((vt0.c1)==(vt0.c0))))), (NOT ((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((x'')&(x'2f80')), (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, x'', vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))) COLLATE BINARY, CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN ((vt0.c0)GLOB(vt0.c1)) THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CASE 0.8781437894329953  WHEN 'cc' THEN vt0.c0 END WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((vt0.c1)&(vt0.c0)) ELSE ((0.7946665845782301)AND(vt0.c1)) END FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN ((((0.194195563027046) NOT NULL))) AND (((vt0.c0 IN ())))), (((vt0.c0 IN ()))>=((~ (vt0.c1)))), (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))<(((((vt0.c0))=((vt0.c0)))))) FROM vt0; -- 0ms;
SELECT (NOT (vt0.c1)) COLLATE NOCASE FROM vt0 ORDER BY (((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((0.4154885730702794, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (0.02676248197425568) AND ((NOT (vt0.c1))))  NULLS FIRST; -- 1ms;
SELECT CAST(ABS(0.43617373676488436) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR((((vt0.c1))<((vt0.c1))))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c1)||(vt0.c1)))))AND((((vt0.c1, vt0.c1, vt0.c1))<((vt0.c1, x'', vt0.c0))))) FROM vt0 GROUP BY ((((vt0.c0)>>(0.46233173709153697))) IS FALSE); -- 0ms;
SELECT ((CAST(vt0.c0 AS INTEGER))<<(CAST(vt0.c1 AS INTEGER))) FROM vt0 WHERE (((((((NULL)OR(NULL)))OR('GH')))AND(CAST(0.8123497744801054 AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND (('1229728210', vt0.c0, vt0.c1))))OR(x'')))AND(TYPEOF(DISTINCT 1474754498))), (((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, NULL, vt0.c0))))<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))), CAST(vt0.c0 AS INTEGER) FROM vt0 NOT INDEXED WHERE (NULL) ORDER BY ((CASE ''  WHEN vt0.c1 THEN vt0.c1 END) IS FALSE) ASC  NULLS LAST, vt0.c0 ASC  NULLS FIRST; -- 2ms;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE WHEN 0.07809315875035328 THEN '0s,k?' ELSE 0.6874237334404277 END)<=(TRIM(DISTINCT x'')))); -- 0ms;
SELECT ALL ((((vt0.c1)|('%|~n3zu'))) IS FALSE) FROM vt0 WHERE (CASE (((0.6846658136695917, NULL, NULL))<=(('', NULL, -1373368683)))  WHEN (('-884636835') BETWEEN ('') AND (0xffffffffdefe1214)) THEN CASE WHEN '428472254' THEN NULL WHEN NULL THEN 'Fy' WHEN NULL THEN 0.5258237900162125 ELSE NULL END WHEN (((((((('-119868486')OR(NULL)))AND(0.1376441788661833)))OR(0.5542179255412214)))AND(x'')) THEN CASE x'cec9e335'  WHEN NULL THEN x'' END WHEN ((338883636) NOT BETWEEN (NULL) AND (698086062)) THEN ((x'') BETWEEN ('') AND (x'')) END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0 WHERE (0Xffffffffba0b4cb6); -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c0)) NOT BETWEEN ((0.41255385071714146)) AND ((vt0.c1))))) FROM vt0 WHERE ((- (x''))); -- 0ms;
SELECT NULL FROM vt0 WHERE ('-1063698955') LIMIT -2020691899 OFFSET -635118568; -- 0ms;
SELECT ALL (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((CASE WHEN vt0.c1 THEN vt0.c0 END))), ((x'')*(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)), CASE WHEN ((('1061296065'))<((vt0.c0))) THEN vt0.c1 COLLATE BINARY WHEN vt0.c1 THEN json_type(vt0.c0) WHEN ((vt0.c1) ISNULL) THEN CASE WHEN vt0.c0 THEN vt0.c1 END ELSE LOWER(vt0.c0) END FROM vt0 WHERE (CASE WHEN ('-914128369' IN ()) THEN ((((NULL)OR(']<Pⷛ')))AND('-949260677')) WHEN 0.34204433773955567 THEN CAST(0.7771669523787169 AS INTEGER) WHEN UPPER(NULL) THEN CASE WHEN '' THEN -115043289 ELSE 0.7337866853432573 END ELSE HEX('') END); -- 0ms;
SELECT ALL ((((((-927069042)>=(vt0.c1)))OR(((vt0.c0)OR(vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)), vt0.c0, vt0.c1 FROM vt0 GROUP BY ((((vt0.c1) NOTNULL))GLOB(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))); -- 0ms;
SELECT ALL SUM(((vt0.c1)<=(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN (-1.623585796E9, vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((x'aa95a6b3a311' COLLATE BINARY IN ((('L7 ') BETWEEN ('j<') AND ('87'))))) ORDER BY ((vt0.c0) BETWEEN ((NOT (vt0.c0))) AND ((vt0.c1 IN ()))) ASC, ((((((vt0.c1)&(NULL)))OR(x'')))AND(CASE '倽?bX'  WHEN vt0.c1 THEN vt0.c1 END)) ASC, vt0.c0  NULLS FIRST LIMIT -970722872 OFFSET 2111668296; -- 0ms;
SELECT DISTINCT AVG('+\T!疸⼷*y') FROM vt0 WHERE ((('-1708288980') NOT BETWEEN (NULL COLLATE BINARY) AND (((0.6862512593770952)IS(114396569))))) GROUP BY vt0.c1 HAVING (((((vt0.c1)+(vt0.c1))))<>(((vt0.c0 IN ())))); -- 0ms;
SELECT RANK() OVER () FROM vt0 WHERE (((CAST(0X6dd19972 AS BLOB))<>((((x'534f')) BETWEEN ((NULL)) AND ((NULL)))))) GROUP BY vt0.c1 COLLATE RTRIM; -- 0ms;
SELECT ALL CAST(((vt0.c0)AND(x'8c01')) AS INTEGER) FROM vt0 ORDER BY CAST(((vt0.c1)+(vt0.c1)) AS REAL) ASC  NULLS FIRST, CAST((((x'16f14e2e'))<>((vt0.c0))) AS BLOB); -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) THEN x'' END FROM vt0 WHERE ('2018490018'); -- 0ms;
SELECT DISTINCT (vt0.c0 IN (vt0.c1, LIKELIHOOD(vt0.c0, 0.8461064642757321))), (~ (((vt0.c0)GLOB(vt0.c0)))), ((LIKELY(-1861270879))IS(((vt0.c0)/(vt0.c0)))) FROM vt0 WHERE (((('1523652243', 0.47555817520290344, NULL)) NOT BETWEEN (((((NULL, 0.4967494402185876, 0.2779099114440078, x'c875', 'i5')) BETWEEN ((NULL, x'', NULL, 0.3510734431699434, x'37f3')) AND ((NULL, '\r9', x'05bf', x'', x''))), (NULL IN ()), ((NULL)=(0.569858715777326)))) AND ((x'', 0.2906897672445624 COLLATE BINARY, ((0.006766720885099997) BETWEEN (0.5342235762333891) AND (NULL)))))) LIMIT -377090892; -- 0ms;
SELECT ALL ((((0.5812300859189663)AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR('dk0m')) FROM vt0 ORDER BY CASE UNLIKELY(vt0.c1)  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN IFNULL(vt0.c1, vt0.c1) WHEN (- (vt0.c0)) THEN (vt0.c1 IN ()) WHEN vt0.c1 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END END; -- 0ms;
SELECT ALL CAST(COUNT(*) AS REAL) FROM vt0 EXCEPT SELECT ALL ((vt0.c1) ISNULL) FROM vt0 WHERE ((~ ((('倽') NOT BETWEEN (0.17677392407115566) AND (NULL))))) LIMIT -1369130886; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOTNULL) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ABS(LOWER(DISTINCT vt0.c0)), (LIKELIHOOD(DISTINCT vt0.c1, 0.08506590626087807) IN ()), SUM(0.5005567755978404) FROM vt0 WHERE ((HEX(DISTINCT 0.757447366065953) IN ())); -- 0ms;
SELECT ALL COUNT(((vt0.c0) NOT NULL)) OVER ( ORDER BY ((((0.10161930021948817)-(vt0.c0))) ISNULL)  NULLS LAST RANGE  UNBOUNDED PRECEDING) FROM vt0 WHERE (CAST((950332829 IN ()) AS TEXT)) ORDER BY ((((((((((((((vt0.c0)<<(vt0.c1)))AND((((vt0.c1, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c1))))))OR(((vt0.c1) ISNULL))))OR(((vt0.c0)OR(vt0.c0)))))OR(vt0.c0)))AND((((vt0.c1))<=(('372450151'))))))AND(TYPEOF(vt0.c0)))  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM(((vt0.c1) IS FALSE)), CAST((- (vt0.c1)) AS TEXT), (((('1885682971') NOT NULL))AND(vt0.c1 COLLATE NOCASE)) FROM vt0 WHERE ((CAST('14' AS NUMERIC) IN ())); -- 0ms;
SELECT DISTINCT AVG(GROUP_CONCAT(CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE (((('')) NOT BETWEEN (((((NULL))<=(('1e500'))))) AND (('n_iGG(' COLLATE RTRIM))));SELECT DISTINCT CASE WHEN 0.8291592869132527 THEN NULL COLLATE RTRIM WHEN CASE WHEN '-[K]V' THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 END THEN CASE WHEN 0.024785510416683088 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c1)LIKE(vt0.c1)) THEN ((x'') ISNULL) ELSE MIN(vt0.c1, vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1 IN (vt0.c0)))+(CAST(vt0.c1 AS INTEGER))), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '242655008' THEN vt0.c1 END) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))), ((((((((((((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))))OR((((vt0.c0))<((vt0.c0))))))AND((((vt0.c1))>((vt0.c0))))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))AND(((vt0.c1)=(vt0.c0)))))OR(MIN(vt0.c0))), GROUP_CONCAT((- (vt0.c0))), TOTAL(((vt0.c1) NOT NULL)), json(CAST(vt0.c0 AS BLOB)), CAST(CAST(vt0.c0 AS BLOB) AS REAL) FROM vt0 WHERE (((((((((((((CAST(-2.081447572E9 AS BLOB))AND(CASE WHEN 67426983 THEN '' END)))OR('-1989134594')))OR(CAST(-1153674827 AS NUMERIC))))OR(CASE WHEN -1.729066619E9 THEN 1200854662 END)))AND(CASE '7Hj?r>'  WHEN 0.9440438101877248 THEN x'702b4914' END)))AND((((NULL))<((x'')))))); -- 0ms;
SELECT ((((((((vt0.c0 COLLATE NOCASE)AND((((((((('')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(HEX(vt0.c0))))OR(CAST(vt0.c1 AS NUMERIC))))OR(UNLIKELY(DISTINCT vt0.c0))) FROM vt0 WHERE (((((((((x'cc1d')OR('days_f*9+ll')))AND(NULL)))OR(x'87bc')))OR(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((((((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))AND(vt0.c0)))AND(AVG(vt0.c0))))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS INTEGER))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) FROM vt0 WHERE (((('1169749161' IN (x'', x''))) NOT BETWEEN (((0.4300814172602415) BETWEEN (-1967869695) AND (NULL))) AND (0.7880211126502394))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT json_extract(COALESCE(DISTINCT vt0.c0, vt0.c1), vt0.c1), COUNT(*) COLLATE NOCASE, json_insert('-989215013', COUNT(*), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))), COALESCE((vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END), ((((vt0.c1) IS TRUE))-(((vt0.c1)||(NULL)))) FROM vt0;SELECT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT ((0X61804922)+(TIME(vt0.c1, vt0.c1, vt0.c1))) FROM vt0; -- 0ms;
SELECT ALL ((MIN(vt0.c0)) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND ((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1))))) FROM vt0 WHERE (((((x'27ab')>(NULL)))IS(json('-583525423')))) GROUP BY 0X784fb6a2;SELECT ((vt0.c0) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))) FROM vt0 WHERE ((((+ ('-890292799'))) BETWEEN (((NULL)*(x''))) AND ((NULL IN ())))); -- 1ms;
SELECT ALL ((((vt0.c0) ISNULL))IS NOT((('') IS TRUE))) FROM vt0 WHERE (CASE WHEN ((0.7620032897477655)*(0.5950966363330604)) THEN CASE ''  WHEN 0.29568891298928945 THEN NULL END WHEN ((((NULL)AND(NULL)))AND('')) THEN INSTR('-1496330402', '1865867731') WHEN ('766375770' IN ()) THEN ((0.5067580778204156)*(x'c213')) END); -- 0ms;
SELECT DISTINCT CASE vt0.c1  WHEN TYPEOF(DISTINCT vt0.c1) THEN (((vt0.c0))<=((vt0.c0))) WHEN (((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0))) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c1)|(vt0.c1)) THEN json_array_length(vt0.c0) ELSE ((((((((NULL)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) END FROM vt0 WHERE (((0.01952358432154433) BETWEEN ((0.2721457041409361 IN (0.23068284596911315))) AND (NULL))) INTERSECT SELECT DISTINCT ((CASE vt0.c1  WHEN 0.34170311895883243 THEN vt0.c0 END) ISNULL) FROM vt0 WHERE (CAST(CAST('~K䑣r' AS REAL) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE json_valid(vt0.c0)  WHEN vt0.c0 THEN (vt0.c1 IN ()) END, DENSE_RANK() OVER (), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0 ORDER BY SQLITE_COMPILEOPTION_USED((vt0.c0 IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c1)))>(((vt0.c0) ISNULL))) FROM vt0 WHERE ((CAST('1222711792' AS INTEGER) IN (((-1445381310)AND(x''))))); -- 0ms;
SELECT DISTINCT (+ (vt0.c1 COLLATE RTRIM)) FROM vt0; -- 0ms;
