-- Time: 2024/06/07 06:39:11
-- Database: database7
-- Database version: 3.40.0
-- seed value: 2732958407
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 REAL ); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c3, c2, c1) VALUES (0.9945145324703775, 'Cy', 0.8623645327488794); -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES ('EfIy'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.3308140669056381); -- 1ms;
COMMIT; -- 0ms;
UPDATE rt0 SET (c3)=(NULL); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.34436798940745006); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES (NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3) VALUES ('EfIy'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3) VALUES ('', NULL, ''), (0.34436798940745006, '717793136', ''), (2000977491, 2.000977491E9, x'7dad'); -- 1ms;
PRAGMA threads; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2) VALUES (0Xffffffff935b9132, 0.2997894580458147), (x'90ee', NULL), ('u82\r', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3) VALUES (NULL, 0x77447e53); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.39604695285218827, 7.17793136E8, 'zNS\r)L	', NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3) VALUES ('', ''), ('', NULL), (-1.822715598E9, 0Xffffffffb3e450dc); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES (x'f2f8', NULL, 'J7}V\', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0, c3) VALUES ('-1822715598', 0x316313e5, 'yထYᏥG6', '2000977491'); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('0.3308140669056381' IN (NULL)) THEN 7.17793136E8 COLLATE BINARY ELSE (x'2a7b07eb' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0) VALUES ('', 0x77447e53), (NULL, 1e500), (NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (2000977491, x'7df7', 0.28312764537305535, x'0d72'), (0X4a64c5c3, '-185349830', '815870364', '-1018269540'), ('-185349830', NULL, 0Xffffffff935b9132, '828576741'); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE OR REPLACE rt0 SET (c1)=(x'2a5e') WHERE (('-1276882724')>=(((rt0.c3) ISNULL))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1, c3)=(2.28266001E8, 0.34125800204811785); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(NULL); -- 0ms;
UPDATE rt0 SET c2=-1187489335, c3=0X316313e5 WHERE (((((0.3068293232407818))>=((rt0.c3)))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c3 AS BLOB))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(x'8bf9') WHERE x''; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (x'', x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3, c2) VALUES (')?fm1752-219T156T-6202043840897059003 8194020928675119923:2370127580610908351 3840581831376374655 ''bjn', 0.22146937712473402, '-935872592'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES ('e'); -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('-935872592'), (x''), ('815870364'); -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES (0.18572835016810496); -- 0ms;
COMMIT; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX BINARY; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c1) VALUES (NULL, '7y6ySsJ(v'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (0.8398791348363231, 'GܗTWd풿', 0.5056066371632242), (x'', '-185349830', x''), ('aj', 0.5684685261985166, 897487100); -- 1ms;
UPDATE rt0 SET c1=x'29ad0848', c1='7Xm2炜' WHERE (CASE WHEN rt0.c3 THEN rt0.c3 END IN ()); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'' WHERE rt0.c0; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1338902295 unordered noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0Xffffffff8c8d41f4); -- 1ms;
CREATE TABLE t0 (c0 INT ); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (x'', 'e3', 0.34795498642785483, x'2a5a'), (0Xffffffffbb9b06b8, NULL, 0.3238667384647784, x''), (-185349830, NULL, ((((CAST(0.6338217924727186 AS NUMERIC))AND(TRIM(DISTINCT x'abfaeb40'))))AND(LIKELY('0.8398791348363231'))), 0.18960372833878136); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (NULL), (NULL); -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (-1630230196); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.22146937712473402), (0.5043529052987692), (8.28576741E8); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
CREATE UNIQUE INDEX i37 ON t0(((((c0 IN ())))<(((((c0)) NOT BETWEEN ((c0)) AND ((c0)))))) DESC) WHERE ((((((c0)AND(c0)))AND(''))) IS FALSE); -- 0ms;
CREATE INDEX i61 ON t0(CASE (c0 IN ())  WHEN ((c0)*(c0)) THEN ((c0) NOTNULL) END); -- 0ms;
CREATE UNIQUE INDEX i49 ON t0((~ ((((c0))<((c0))))) COLLATE BINARY ASC) WHERE ((c0 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c1) VALUES ((NULL IN ()) COLLATE BINARY, '(_>t}ⴑ', x''); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE INDEX IF NOT EXISTS i8 ON t0(CASE WHEN (c0 IN ()) THEN COALESCE(DISTINCT c0, c0) WHEN x'' THEN '897487100' WHEN ((c0) NOTNULL) THEN (+ (c0)) ELSE 1817390353 END COLLATE NOCASE ASC); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (876468598, 0Xffffffff8ec81eee, '873570947', ''), (0.924291072794801, NULL, NULL, 0xffffffffca5272b8), (x'', '3l%83v5_', 'L+\r0', x'0afb'), ('', '\r,yC', -1169652241, 0.7887538055272134), (0.9684115380535119, x'', '228266001', 1.817390353E9); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (''), (NULL), (1840117587); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (+ (LIKE(rt0.c0, rt0.c1))) FROM vt0, t0 WHERE ((IFNULL('1865270718', x'') IN ()));SELECT DISTINCT ((x'0deeb54c9ee9' COLLATE RTRIM)IS((- (rt0.c1)))) FROM vt0, t0 WHERE ((NULL IN ()) COLLATE NOCASE);SELECT ALL GROUP_CONCAT(((((rt0.c1)OR(t0.c0)))AND(rt0.c2))) FILTER(WHERE x'' COLLATE BINARY) OVER ( RANGE CAST(rt0.c2 AS INTEGER) PRECEDING), ((rt0.c3 COLLATE BINARY) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND ((rt0.c0 IN (t0.c0, vt0.c0)))), ((((t0.c0)LIKE(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (vt0.c0, vt0.c0))) AND (x'0325')) FROM t0, rt0;SELECT ((((CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END)OR(CHAR(t0.c0))))AND(((t0.c0)%(t0.c0)))) FROM vt0, rt0, t0 LIMIT -128387322; -- 0ms;
SELECT ((((rt0.c0)&(rt0.c0)))+(COUNT(rt0.c0))) FROM vt0, t0;SELECT DISTINCT 0Xffffffff8a1353e3 FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((rt0.c1)/(LIKELIHOOD(vt0.c0, 0.7391874424459058))), vt0.c0, CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER) FROM t0 WHERE (CAST((('2*bp_a]H')<('T~(l#khJ')) AS BLOB));SELECT ALL ((UNLIKELY(t0.c0)) BETWEEN (((NULL) NOTNULL)) AND ((~ (rt0.c3)))) FROM t0, rt0 WHERE ((ABS(DISTINCT 'WJ?') IN ())); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((vt0.c0)IS NOT(vt0.c0)) IN ())) OVER () FROM vt0 WHERE (((CASE WHEN x'2920' THEN x'' ELSE x'' END) NOT NULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c3)%(vt0.c0))) FROM rt0 WHERE (((((0.348332260420684) IS FALSE)) NOTNULL)) LIMIT -128387322;SELECT DISTINCT ((UNLIKELY(DISTINCT x'8a4e'))<(CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END)) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS REAL) COLLATE NOCASE FROM vt0, t0, rt0; -- 0ms;
SELECT ((((((rt0.c2)LIKE(vt0.c0)))OR(CAST(rt0.c3 AS BLOB))))OR(t0.c0 COLLATE NOCASE)) FROM t0;SELECT DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)) COLLATE RTRIM FROM rt0;SELECT ALL CAST(rt0.c2 AS REAL) FROM vt0, t0, rt0 WHERE (CAST(((((NULL)AND(NULL)))OR('-1932297054')) AS INTEGER)) LIMIT -1630230196; -- 0ms;
SELECT DISTINCT -596556512, (((((((((+ (x'')))OR(vt0.c0 COLLATE BINARY)))OR(rt0.c1)))OR((vt0.c0 IN ()))))OR(CASE WHEN rt0.c3 THEN '/,lsഞ?' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE t0.c0 END)), AVG(((vt0.c0)<=(rt0.c1))) OVER () FROM vt0 WHERE (NULL) LIMIT 743793596;SELECT (((rt0.c1 IN (vt0.c0))) BETWEEN ('') AND (((rt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)))) FROM t0 WHERE (((((((-1.147468104E9)OR(-1169652241)))OR(0.20751021970383254))) NOT BETWEEN (('/,lsഞ?' IN (0.8277416735124945, 815870364))) AND (((0.4693778219829682) ISNULL)))) ORDER BY (- (((('', rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c3, 0.03887457363981939)))));SELECT DISTINCT ((((NULL)OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))))OR(NULL COLLATE NOCASE)) FROM t0 WHERE (((((x'') NOT BETWEEN (x'') AND (x'd198')))AND((NOT (0Xd9b1011)))));SELECT DISTINCT x'' FROM vt0 WHERE (x''); -- 1ms;
SELECT ALL ((HEX(rt0.c3)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((vt0.c0)+('-1724767193')))), t0.c0, (((((t0.c0))==((t0.c0)))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((rt0.c3)+(rt0.c0)))) FROM vt0, t0, rt0 WHERE (((((((((((0X592c5f50)OR(0.7253799902402931)))AND(0.5686834080396691)))OR('-1615321526')))OR(x'')))-(((x'a40caf69') ISNULL)))) GROUP BY ((((((vt0.c0) IS FALSE))OR((t0.c0 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) HAVING ((((((rt0.c3)OR(t0.c0)))OR(rt0.c3)))%((rt0.c2 IN ()))); -- 1ms;
SELECT (((CAST(rt0.c2 AS NUMERIC)))<>((((((t0.c0)AND(rt0.c1)))AND(t0.c0))))) FROM vt0;SELECT ALL (((~ (rt0.c0))) ISNULL) FROM vt0 WHERE (0.7446592874237685);SELECT DISTINCT ((CASE WHEN 'p' THEN rt0.c0 ELSE rt0.c3 END)IS(((t0.c0)*('828576741')))) FROM vt0, rt0, t0 WHERE ((((((((((((((0.06947990309999208)AND('1e500')))OR('')))OR(NULL)))OR(x'')))OR(0.20512482527272324)))AND(NULL)) IN ())); -- 1ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) FROM vt0, rt0;SELECT ALL MAX(x''), (((((((((- (rt0.c3)))OR(((rt0.c0) IS FALSE))))OR(((rt0.c0)|(vt0.c0)))))OR((rt0.c0 IN (vt0.c0)))))OR((((vt0.c0, rt0.c1, rt0.c1))>=((vt0.c0, rt0.c3, rt0.c0))))), CASE WHEN ((rt0.c2) NOT BETWEEN ('-1992698689') AND (0.7118532239184131)) THEN ((((((((0.9347821824650004)AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)) WHEN 0.7802286104725692 THEN ((t0.c0)>>(rt0.c0)) WHEN vt0.c0 THEN ((rt0.c1)-(rt0.c0)) ELSE CAST(t0.c0 AS TEXT) END, (rt0.c3 IN ()), CASE WHEN rt0.c3 COLLATE RTRIM THEN ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))AND(-1311448882)) WHEN '<^' THEN CAST(0.8398791348363231 AS REAL) WHEN RTRIM(vt0.c0) THEN rt0.c2 COLLATE RTRIM END FROM rt0 WHERE ((((((('-81792257')AND(NULL)))OR('0.06947990309999208'))) IS FALSE));SELECT GROUP_CONCAT(rt0.c1) OVER (), ((TRIM(DISTINCT t0.c0, rt0.c0))%((((rt0.c3, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, t0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))))), CASE WHEN LIKELIHOOD('', 0.5650188648276294) THEN rt0.c1 COLLATE RTRIM END, (((-1.936899596E9)*(rt0.c2)) IN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))))), (((t0.c0)) BETWEEN (((((rt0.c0, vt0.c0, rt0.c2))>=((t0.c0, rt0.c2, vt0.c0))))) AND ((((rt0.c1)!=(rt0.c3))))) FROM vt0 ORDER BY ((rt0.c3)*(vt0.c0)) COLLATE BINARY;SELECT ALL (~ (0.13909888317994645)) COLLATE BINARY, ((TYPEOF(DISTINCT vt0.c0))&(CAST(t0.c0 AS INTEGER))), GROUP_CONCAT(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 END) OVER () FROM vt0, t0, rt0 WHERE (CAST((((0.9144669486623538))<((0.06124786187744746))) AS NUMERIC)) ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c1 THEN rt0.c1 COLLATE NOCASE ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (t0.c0)) END  NULLS LAST; -- 0ms;
SELECT ALL ((((rt0.c0) NOT NULL)) IS TRUE), 0.7232304732937643, AVG(CAST(t0.c0 AS TEXT)) FROM rt0;SELECT (~ ((- (rt0.c0)))) FROM t0, rt0 WHERE (((CAST(NULL AS REAL))/(((x'') NOT BETWEEN ('YuFVOps') AND (0.7608790707201556))))) GROUP BY ((((vt0.c0)>=(rt0.c0)))*((~ (rt0.c2))));SELECT COUNT(*) FROM rt0, t0 WHERE ((((((((((((((('-1169652241') IS FALSE))OR((((0.46028382143850344)) BETWEEN ((0x1a7ce115)) AND ((x''))))))OR(CASE WHEN 0.960864054436709 THEN x'478e' WHEN x'5f03' THEN '|*i(7T掼c' WHEN x'7ab0' THEN NULL END)))OR(0.34795498642785483)))OR(CASE WHEN '' THEN NULL WHEN NULL THEN x'' WHEN x'' THEN -1.01826954E9 ELSE NULL END)))AND('-596556512' COLLATE NOCASE)))OR(LTRIM(0.32028195576144725, x'6d50')))); -- 0ms;
SELECT TOTAL(((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))), rt0.c1, x'f6c3', ((t0.c0)<=(((rt0.c3)IS NOT(rt0.c1)))), LAST_VALUE(LIKE((NULL IN (vt0.c0)), (vt0.c0 IN ()), 'p')) OVER () FROM vt0 WHERE ((((((((((0.28898335329936053)OR('')))AND(NULL)))AND(x'')))AND(x'')) IN ()));SELECT ALL (((((NULL, t0.c0, t0.c0)) BETWEEN ((t0.c0, rt0.c1, vt0.c0)) AND ((0.5215629803042507, rt0.c1, vt0.c0)))) IS FALSE) FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((CAST(NULL AS NUMERIC))OR(CAST(rt0.c3 AS REAL))))AND(((((((((x'')AND(rt0.c1)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c0)))))AND(x'')))OR(((rt0.c3) BETWEEN (t0.c0) AND (rt0.c1)))), ((((((((rt0.c2)AND(rt0.c3)))AND(t0.c0)))OR((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c3))))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)), ((((((((((((((((rt0.c3 COLLATE BINARY)OR(vt0.c0 COLLATE RTRIM)))AND((rt0.c2 IN ()))))OR((- (rt0.c2)))))OR(NULL)))AND(((('U')) BETWEEN ((vt0.c0)) AND ((x''))))))AND(((x'')+(rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c1) NOTNULL))) FROM vt0 WHERE (CAST('uꬁ}SM' COLLATE BINARY AS BLOB));SELECT DISTINCT (((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))%((NOT (rt0.c0)))), ABS(DISTINCT (((vt0.c0))>=(('')))), ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE RTRIM FROM rt0, vt0, t0 WHERE (CASE (('')+('-1978444829'))  WHEN (+ (x'35c5')) THEN (('D') NOT NULL) ELSE (('578352890')||(x'')) END) GROUP BY ((CAST('''T' AS REAL))OR(((rt0.c0) NOTNULL))); -- 1ms;
SELECT ALL (((+ (rt0.c1))) NOT BETWEEN (((rt0.c3)OR(rt0.c0))) AND (((((((((x'')OR(vt0.c0)))OR(rt0.c2)))OR(')?fm1752-219T156T-6202043840897059003 8194020928675119923:2370127580610908351 3840581831376374655 ''bjn')))AND(rt0.c3)))), (vt0.c0 COLLATE BINARY IN ((NOT (rt0.c3)))), LAG(STRFTIME(((rt0.c1)*(vt0.c0)), (((x''))>=((NULL))), CAST(vt0.c0 AS INTEGER)), ((((((((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE t0.c0 END)OR((((t0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))))OR(x'7205')))OR(t0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)), ((rt0.c0)<=(((rt0.c0)OR(t0.c0))))) OVER ( ORDER BY CASE ((t0.c0)IS(rt0.c2))  WHEN ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(x'')))AND(-0.0)) THEN '0.28898335329936053' COLLATE RTRIM END, ((((vt0.c0)-(t0.c0)))<<(ABS(DISTINCT vt0.c0)))) FROM vt0, t0, rt0 WHERE (((CAST(NULL AS BLOB)) BETWEEN ((- (x''))) AND (((x'')*(x''))))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c1)<<(t0.c0)) THEN TOTAL(t0.c0) ELSE ((rt0.c3) ISNULL) END FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT (~ (((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))) FROM t0, rt0, vt0 WHERE (((CASE WHEN '0.3068293232407818' THEN x'' ELSE x'' END)GLOB(((('*ACLiieI')) NOT BETWEEN ((x'')) AND (('')))))); -- 0ms;
SELECT DISTINCT (((((t0.c0)IS NOT(rt0.c1))))<((TOTAL(rt0.c3)))), ((CAST(t0.c0 AS NUMERIC))<<((- (rt0.c2)))), CASE WHEN ((((t0.c0)OR(rt0.c3)))OR(rt0.c3)) THEN ((rt0.c2)&(vt0.c0)) END, SUM((('[b') NOT NULL)), (((vt0.c0)) NOT BETWEEN ((MIN(vt0.c0))) AND ((rt0.c1))) FROM vt0, rt0 WHERE (ABS(((0.5407967651413281)<=(''))));SELECT DISTINCT GROUP_CONCAT(vt0.c0), (((('' COLLATE NOCASE)OR(CAST(rt0.c3 AS INTEGER))))AND(ABS(rt0.c1))), ((((- (rt0.c1))))>=(((rt0.c1 IN ())))) FROM vt0, t0, rt0; -- 0ms;
SELECT ALL CASE WHEN t0.c0 COLLATE RTRIM THEN GROUP_CONCAT('2000977491') WHEN DATE(rt0.c3, rt0.c2, rt0.c0, vt0.c0, rt0.c1) THEN CASE rt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE rt0.c0 END WHEN json_insert(vt0.c0, x'', rt0.c2) THEN CASE vt0.c0  WHEN x'' THEN t0.c0 END WHEN MIN(vt0.c0) THEN CAST(vt0.c0 AS BLOB) WHEN (((t0.c0, rt0.c3, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c3))) THEN (~ (rt0.c3)) END, CASE IFNULL(rt0.c2, t0.c0)  WHEN IFNULL(rt0.c0, vt0.c0) THEN SQLITE_COMPILEOPTION_GET(rt0.c0) END, (((vt0.c0) ISNULL) IN ()) FROM vt0, t0 WHERE (((((((((((((CASE 0.348332260420684  WHEN NULL THEN -1812947069 WHEN x'' THEN x'' WHEN '-596556512' THEN 'yL~6}y' END)OR(('3l%83v5_' IN ()))))AND((((0.2543287041548723)) NOT BETWEEN ((-5.96556512E8)) AND ((0.7768953840951472))))))AND(((0.8262892881042124) NOT NULL))))AND(TOTAL_CHANGES())))OR(x'4080')))AND(((((0Xffffffff84542ef6)AND(x'')))AND(NULL)))));SELECT (((~ (rt0.c1)))<(CAST(rt0.c2 AS INTEGER))) FROM vt0, t0 WHERE (CAST(x'' COLLATE BINARY AS BLOB));SELECT DISTINCT (((((((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))AND(((rt0.c1) NOTNULL))))AND(json_insert(rt0.c1, vt0.c0, rt0.c1))))OR(LOWER(vt0.c0))))AND(((((rt0.c2)AND(rt0.c3)))AND('743793596')))) FROM t0, vt0, rt0 GROUP BY (~ (((((rt0.c2)OR(t0.c0)))OR(rt0.c3)))) HAVING ((((-1.01826954E9) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL);SELECT (+ (rt0.c2)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))<((NOT (rt0.c0)))) FROM t0 WHERE ((((0.8374890495656173) IS FALSE) IN (((NULL)||('1262960515')))));SELECT DISTINCT LAST_VALUE(((((rt0.c2)LIKE(rt0.c1)))<(x''))) OVER (), AVG((vt0.c0 IN ())), GROUP_CONCAT((~ (NULL)) COLLATE RTRIM), (((rt0.c3 IN ()))|((((rt0.c3))=((t0.c0))))), (rt0.c1 COLLATE BINARY IN ()), rt0.c3, ((- (rt0.c2)) IN ((((rt0.c2))<((rt0.c3))), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(NULL)))OR(-1026412254)))) FROM rt0 WHERE (((((('')) BETWEEN (('-1978444829')) AND ((0.28312764537305535)))) NOT BETWEEN (CASE x'dfc5'  WHEN 0.39378868824058766 THEN '' WHEN 'V[x' THEN NULL WHEN 8.974871E8 THEN NULL ELSE 0.9876075267073191 END) AND (NULL COLLATE RTRIM)));SELECT DISTINCT ((LIKELY(DISTINCT t0.c0)) NOT BETWEEN ((t0.c0 IN (vt0.c0, rt0.c2))) AND (CAST(t0.c0 AS BLOB))) FROM t0;SELECT DISTINCT ((((rt0.c2)-(0.7945706636766433)))-(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))), ((((t0.c0)<(t0.c0)))&((((rt0.c0, x'f172', rt0.c2))<=((rt0.c2, rt0.c1, vt0.c0))))), (NULL IN (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM t0 WHERE ((-9.35872592E8 COLLATE NOCASE IN ()));SELECT ALL x'', LIKELY((((rt0.c1, t0.c0, rt0.c0))>((rt0.c3, rt0.c3, rt0.c2)))), (((NOT (rt0.c2)))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))) FROM vt0, rt0;SELECT ALL (+ (((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) FROM t0, vt0, rt0 WHERE (CASE WHEN NULL THEN (~ ('')) ELSE ((' q')>>(0.37912899285755663)) END); -- 1ms;
SELECT ALL LAG(((TYPEOF(vt0.c0))*(vt0.c0)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))&(vt0.c0 COLLATE RTRIM)), ((vt0.c0)%(((vt0.c0)>(vt0.c0))))) OVER ( ORDER BY UNLIKELY(((((rt0.c2)OR(rt0.c3)))OR(rt0.c0))) ASC, rt0.c0), ((rt0.c1)<=(t0.c0)) COLLATE NOCASE, (+ (TOTAL(vt0.c0))) FROM vt0 WHERE (((NOT (NULL)) IN ())) LIMIT -1442781120 OFFSET -1932297054;SELECT ALL MIN((rt0.c0 IN (rt0.c3))) FROM t0, rt0; -- 0ms;
SELECT ALL ((rt0.c3 IN (rt0.c2)) IN ()) FROM vt0 WHERE ((((x'3240') IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END) OVER (), (((((((((+ (rt0.c1)))AND(vt0.c0)))OR(((rt0.c0)+(vt0.c0)))))OR(UPPER(rt0.c3))))OR((t0.c0 IN ()))), ((LIKE(rt0.c0, rt0.c0, '-'))|(((((((((rt0.c1)OR(rt0.c1)))OR(t0.c0)))AND(rt0.c2)))OR(rt0.c3)))), FIRST_VALUE((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'b9a9'))))<=(CAST(rt0.c1 AS NUMERIC)))) OVER (), (+ (((rt0.c1) NOT BETWEEN (NULL) AND (vt0.c0)))) FROM rt0 WHERE ((('-59110114')<(((x'')GLOB(-5.96556512E8)))));SELECT CAST((rt0.c1 IN ()) AS NUMERIC) FROM rt0 WHERE (CASE UNLIKELY(0.4266251604580177)  WHEN ((('_^I', -286694748, 0.0)) NOT BETWEEN ((0.8681179418631861, '-1147468104', NULL)) AND ((0.21275781180153597, -1.276882724E9, ''))) THEN ((0.621897695495428) IS TRUE) END) ORDER BY TRIM(DISTINCT ((rt0.c1)IS(t0.c0)), ((rt0.c2) BETWEEN (0.4647402527503083) AND (rt0.c2))) DESC  NULLS FIRST;SELECT ALL ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c0)))IS NOT(((rt0.c3) NOT NULL))) FROM rt0 GROUP BY CAST((NOT (vt0.c0)) AS NUMERIC) HAVING ((rt0.c2)LIKE(((rt0.c1)-(rt0.c2))));SELECT DISTINCT x'' FROM vt0 WHERE (((((((NULL) IS FALSE))OR(NULL)))OR(CAST(0Xffffffffbf75f7fc AS INTEGER)))); -- 1ms;
SELECT ALL (((t0.c0)) NOT BETWEEN ((0.1647575653908493)) AND ((((rt0.c3) NOTNULL)))), CASE WHEN (((rt0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c3))) THEN (- (rt0.c2)) END, ((((rt0.c3) ISNULL)) IS FALSE) FROM rt0, vt0;SELECT DISTINCT SUM(((rt0.c2)>(vt0.c0))) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL json((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c3)))) FROM t0, vt0, rt0; -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((((TOTAL('D3#口''.I|>'))OR(((t0.c0)+(rt0.c1)))))AND(((vt0.c0)=(vt0.c0)))), rt0.c2 FROM t0, vt0 WHERE ((CASE WHEN 1761280908 THEN -81792257 ELSE -2066900660 END IN ()));SELECT DISTINCT (((- (rt0.c0)))/(((((rt0.c0)OR(-1082787844)))OR(vt0.c0)))) FROM rt0;SELECT DISTINCT x'' FROM t0, rt0, vt0 GROUP BY CAST(t0.c0 AS BLOB) COLLATE NOCASE HAVING CAST('1465733442' AS BLOB) ORDER BY t0.c0 ASC  NULLS LAST, ((((vt0.c0)|(rt0.c2))) NOT BETWEEN ((rt0.c1 IN ())) AND (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY COLLATE NOCASE ASC; -- 1ms;
SELECT ALL SUM(((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c1))) OVER (), CASE ((((t0.c0)AND(t0.c0)))OR(rt0.c2))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN ((((t0.c0)OR(rt0.c3)))AND(rt0.c3)) WHEN MIN(vt0.c0) THEN CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 END WHEN (- (rt0.c0)) THEN ((rt0.c0) NOT NULL) ELSE CAST(rt0.c3 AS REAL) END, CASE WHEN (((0.9768718189329267, t0.c0, x'')) NOT BETWEEN ((x'', rt0.c0, 0xffffffff82c4b07b)) AND ((rt0.c1, vt0.c0, rt0.c2))) THEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END ELSE ((((t0.c0)OR(rt0.c1)))OR(vt0.c0)) END FROM vt0 WHERE ((((x'', x'', x'', x'b22b', '-1147468104')) BETWEEN ((((633542504) IS FALSE), ((NULL)=(0.4597099781355769)), '-596556512' COLLATE NOCASE, (-1630230196 IN ()), (('-1018269540')/(-2.101038981E9)))) AND ((UPPER('*ACLiieI'), RTRIM(0.730957186991959), ABS(''), (((('29089135')AND(x'9e2d')))AND(0.5827768454402961)), (('adMF') BETWEEN ('') AND (0.5628347765166091))))));SELECT ALL COUNT(*), CHANGES(), COUNT(t0.c0) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) BETWEEN ((rt0.c1 IN (rt0.c0))) AND (((vt0.c0)AND(vt0.c0)))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((+ (x'65f5')))) AND ((rt0.c3))), (((rt0.c3))>=((rt0.c0))) COLLATE BINARY, ((((('.(')) BETWEEN ((t0.c0)) AND ((rt0.c1))))==((NOT (vt0.c0)))) FROM vt0;SELECT ALL (((t0.c0)) NOT BETWEEN ((((((rt0.c2)OR(x'de22')))AND(rt0.c0)))) AND ((((t0.c0)|(rt0.c2))))), NULL, CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END THEN COUNT(rt0.c3) ELSE (t0.c0 IN (rt0.c2)) END FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT (((((NOT ('|.gB u\,')))OR(0.5234666563932225)))OR(NULL)) FROM rt0; -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt0.c1 THEN t0.c0 END)) FROM rt0, vt0 NOT INDEXED, t0 LIMIT -596556512; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))&(CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN rt0.c2 END)), GROUP_CONCAT(((rt0.c3)>(t0.c0))) OVER (), (- ((rt0.c3 IN (rt0.c2)))) FROM rt0 WHERE ((((0xfffffffff5bfe730) IS FALSE) IN ()));SELECT CAST(CAST(t0.c0 AS BLOB) AS REAL), ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2 COLLATE BINARY)))AND(UNLIKELY(rt0.c3))), NULL FROM vt0, rt0;SELECT ALL ((4.44391701E8)/(((rt0.c3)-(vt0.c0)))) FROM t0 ORDER BY ((((NOT (NULL))))!=(((t0.c0 IN ())))) DESC  NULLS LAST;SELECT ((((vt0.c0 IN ())))>=(((+ (t0.c0))))) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS TEXT))AND((+ (rt0.c1))));SELECT DISTINCT CASE rtreenode(rt0.c2, rt0.c1)  WHEN (~ (t0.c0)) THEN CAST(vt0.c0 AS TEXT) END FROM vt0;SELECT x'ac31' FROM vt0 WHERE (((CAST('143892851' AS REAL))<((0.9921953242564747 IN ())))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c0)+(rt0.c3))) OVER ( PARTITION BY rt0.c0, (((rt0.c3, vt0.c0, vt0.c0)) BETWEEN ((((((t0.c0)OR(t0.c0)))AND(rt0.c3)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), (NOT (t0.c0)))) AND ((((((t0.c0)OR(0.9799287417756678)))OR(t0.c0)), ((rt0.c2) NOT NULL), CASE 0.9026479395015564  WHEN vt0.c0 THEN rt0.c2 END)))), CAST(((rt0.c0) ISNULL) AS TEXT), ((((((((0.030575605331238043)AND((((vt0.c0))<((t0.c0))))))AND(-1.812947069E9)))AND((NOT (vt0.c0)))))AND((t0.c0 IN ()))) FROM rt0;SELECT NTH_VALUE(CAST(((((((((t0.c0)OR(rt0.c2)))AND(t0.c0)))AND(vt0.c0)))AND(x'1cca0b48')) AS BLOB), ((vt0.c0)>>((((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c3, t0.c0, NULL)) AND ((t0.c0, t0.c0, rt0.c2)))))) OVER ( ORDER BY ((((json_array_length(rt0.c0))AND(((rt0.c0)*(rt0.c2)))))OR(((rt0.c2)GLOB(rt0.c3)))) ASC  NULLS FIRST) FROM t0, rt0, vt0;SELECT ALL ((CAST(x'' AS REAL))<<(rt0.c3 COLLATE BINARY)) FROM t0 WHERE ((((('-1169652241')+('')))>(LIKELY(x''))));SELECT DISTINCT CAST(((rt0.c1)AND(rt0.c2)) AS BLOB) FROM vt0, rt0, t0 WHERE (((CAST('247878466' AS BLOB)) IS TRUE)); -- 1ms;
SELECT DISTINCT CASE WHEN CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END THEN CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END END FROM t0;SELECT DISTINCT CAST(((rt0.c0) NOTNULL) AS BLOB) FROM vt0, rt0, t0 WHERE ((('|.gB u\,' IN ()) IN ())); -- 0ms;
SELECT ALL (((+ (rt0.c3)))||(CAST(rt0.c0 AS TEXT))) FROM vt0, rt0, t0 WHERE ((((x'8843')) NOT BETWEEN (((~ (NULL)))) AND ((((x'') NOT NULL))))) ORDER BY (((t0.c0))<((rt0.c3))) COLLATE BINARY  NULLS FIRST; -- 1ms;
SELECT DISTINCT rt0.c3, (((+ (rt0.c1)))IS NOT(t0.c0)), ((CAST(rt0.c1 AS BLOB))-(t0.c0)) FROM vt0, rt0;SELECT (((((rt0.c1))<((rt0.c0))))|((vt0.c0 IN ()))) FROM vt0 WHERE ((((x'')-(0.6150389299604796)) IN ())) LIMIT 1915493792 OFFSET -737437703;SELECT ((((rt0.c3)<<('-1615321526')))!=(((t0.c0)>>(rt0.c2)))), TOTAL(CAST(rt0.c1 AS BLOB)) OVER (), TRIM(DISTINCT (~ (vt0.c0))) FROM vt0, t0 WHERE (((('')) BETWEEN ((NULL COLLATE BINARY)) AND ((NULL)))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) AND ((rt0.c3)));SELECT DISTINCT ((((rt0.c1)>=(vt0.c0))) NOT NULL) FROM t0, rt0, vt0 GROUP BY (((((rt0.c2)AND(rt0.c2)))AND(t0.c0)) IN ()) ORDER BY (+ (NULL)) ASC; -- 0ms;
SELECT ((((((t0.c0)AND(rt0.c2)))AND(t0.c0)))<(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) FROM rt0, vt0, t0 WHERE (((((((((((((NULL)OR(2.9089135E7)))OR('-889875482')))OR('0.18572835016810496')))OR(x'0eef')))OR(NULL COLLATE BINARY)))OR((- ('363334499'))))); -- 0ms;
SELECT ALL (rt0.c3 IN ()) FROM t0, vt0 WHERE (((CASE '1761280908'  WHEN '0.3068293232407818' THEN NULL ELSE '' END) IS TRUE)); -- 0ms;
SELECT CASE WHEN CAST(rt0.c3 AS INTEGER) THEN (+ (rt0.c3)) ELSE ((((((((rt0.c1)AND(rt0.c2)))OR(0.755136194026392)))AND(rt0.c1)))OR(NULL)) END, t0.c0, COUNT(rt0.c1) OVER () FROM t0 WHERE (((((0xffffffffa215542c) ISNULL))%(((x'')LIKE(NULL))))) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM DESC;SELECT DISTINCT (NOT (NULL)), (((vt0.c0, t0.c0, rt0.c0, '', t0.c0)) NOT BETWEEN ((COUNT(rt0.c3), ((((vt0.c0)AND(rt0.c3)))OR(rt0.c0)), json_array_length(rt0.c3, rt0.c1), rt0.c2, 418753712)) AND ((SQLITE_COMPILEOPTION_USED(t0.c0), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), 0x68fb038c, GROUP_CONCAT(vt0.c0), NULL))), AVG(((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-2074857738'))) FILTER(WHERE SQLITE_COMPILEOPTION_USED((((vt0.c0))>((rt0.c3))))) OVER ( GROUPS  CURRENT ROW) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT NTILE(((LENGTH(rt0.c1))OR((((rt0.c1))<>((rt0.c2)))))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0, t0, vt0 WHERE (((CAST(x'' AS BLOB))<(CAST('|.gb u\,' AS INTEGER)))) GROUP BY (~ (0.43327248288361775)) HAVING GROUP_CONCAT(((t0.c0) BETWEEN (vt0.c0) AND (rt0.c1))); -- 1ms;
SELECT DISTINCT UNICODE(((((NULL)AND(rt0.c0)))OR(rt0.c1))), CAST(rt0.c0 AS BLOB), ((rt0.c3 COLLATE NOCASE) NOTNULL) FROM t0 WHERE ((((+ (NULL))) BETWEEN ((('1051627691') ISNULL)) AND (((x'b894')<<('')))));SELECT QUOTE(((t0.c0) NOT BETWEEN (rt0.c1) AND (x''))) FROM t0 WHERE (((((x'') NOT BETWEEN ('\nvu⩠)') AND ('')))%(CASE WHEN x'' THEN 0Xffffffffaa00e840 END)));SELECT ALL MIN(t0.c0, COUNT(rt0.c0), STRFTIME(rt0.c3, rt0.c3, rt0.c1), (- (rt0.c0))) FROM rt0 GROUP BY CASE (rt0.c1 IN (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END THEN (+ ('')) ELSE (- (rt0.c0)) END;SELECT DISTINCT ((rt0.c1) IS TRUE) FROM t0 WHERE (((((('9223372036854775807'))>(('-91084192'))))>>(((x'')LIKE(0X7a3c4f0f))))) GROUP BY ((((rt0.c2)||(rt0.c0)))>>(((rt0.c2)+(rt0.c3)))) HAVING ((((rt0.c2)OR((vt0.c0 IN (t0.c0)))))OR(((rt0.c3)IS NOT(rt0.c3))));SELECT DISTINCT x'' FROM rt0, vt0 WHERE ((((NULL)) NOT BETWEEN (((((('')OR(NULL)))AND('')))) AND (((((('')OR(0.9135654570133832)))AND(NULL)))))); -- 0ms;
SELECT DISTINCT LOWER((t0.c0 IN ())) FROM t0, vt0; -- 0ms;
SELECT (((t0.c0 IN ()))+(TYPEOF(rt0.c3))) FROM t0, rt0 WHERE (((((((((((0.20512482527272324)<<('')))AND((('1560077636')|('1082945460')))))OR(-596556512 COLLATE RTRIM)))AND(((('', -8.89875482E8, NULL))<=((-1992913599, NULL, 0.21825751455717302))))))OR(((('')) BETWEEN ((x'')) AND ((x'')))))) ORDER BY CASE (- (rt0.c0))  WHEN (+ (rt0.c1)) THEN ((((x'')AND(rt0.c2)))OR(t0.c0)) WHEN ((rt0.c0)IS(t0.c0)) THEN (NOT (rt0.c2)) WHEN rt0.c3 THEN ((rt0.c2)+(t0.c0)) ELSE (((vt0.c0))!=((rt0.c1))) END  NULLS LAST;SELECT 0.6536732449019592 FROM t0, vt0, rt0 WHERE ((x'' IN ())) LIMIT -1705679326; -- 0ms;
SELECT ALL ((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))AND(t0.c0)))&(CAST('1915493792' AS REAL))) FROM vt0;SELECT DISTINCT CASE ((t0.c0)*(rt0.c3))  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)) THEN (('i>') NOT BETWEEN (rt0.c0) AND (rt0.c3)) ELSE ((rt0.c3)<(rt0.c3)) END FROM t0, vt0, rt0; -- 1ms;
SELECT DISTINCT CAST(rt0.c1 AS BLOB) FROM vt0 LIMIT -1632982145 OFFSET -1653953007;SELECT DISTINCT ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))IS NOT(t0.c0 COLLATE BINARY)) FROM rt0 ORDER BY (LOWER(vt0.c0) IN ()) DESC  NULLS LAST, ((((rt0.c0)OR((t0.c0 IN ()))))AND(((rt0.c3) NOTNULL)))  NULLS FIRST;SELECT ((((t0.c0) NOTNULL)) ISNULL) FROM t0 ORDER BY ((rt0.c0)+(rt0.c3)) COLLATE NOCASE;SELECT ALL (((rt0.c3 IN ()))<=(NULL)) FROM rt0 ORDER BY PRINTF((((t0.c0))!=((rt0.c2))));SELECT DISTINCT (((+ (vt0.c0)))<(rt0.c2)) FROM rt0 WHERE ((((0xfffffffffcda6f54)) BETWEEN (('1262960515')) AND ((x'c61c326a'))) COLLATE BINARY) ORDER BY vt0.c0, '' ASC  NULLS LAST, ((((t0.c0) BETWEEN ('1068766502') AND (rt0.c3)))>(CASE WHEN rt0.c2 THEN t0.c0 END)), CASE WHEN ((rt0.c0)AND(rt0.c3)) THEN rt0.c1 END ASC;SELECT ALL (t0.c0 COLLATE RTRIM IN (((rt0.c3)GLOB(t0.c0)))) FROM rt0, t0; -- 0ms;
SELECT ((((rt0.c2) NOTNULL)) NOT BETWEEN (CASE WHEN NULL THEN t0.c0 ELSE rt0.c0 END) AND (((rt0.c1)IS(vt0.c0)))), ((((0X13b5ac5)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) IN ()), (~ ((+ (t0.c0)))) FROM rt0, t0;SELECT CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1)<(vt0.c0)) THEN ((t0.c0)GLOB(rt0.c1)) ELSE CASE WHEN t0.c0 THEN rt0.c1 END END FROM t0 WHERE ((0.48040723581669553 IN (0.8398791348363231 COLLATE NOCASE)));SELECT x'', (((vt0.c0 IN ()))&(CAST(rt0.c1 AS BLOB))), ((((rt0.c3) IS FALSE)) IS FALSE), (rt0.c3 COLLATE RTRIM IN (((rt0.c0)<=(rt0.c0)))), CASE WHEN ((((rt0.c1)AND(vt0.c0)))OR(t0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c3)) END FROM t0, vt0, rt0; -- 0ms;
SELECT (rt0.c1 IN ()) COLLATE NOCASE COLLATE NOCASE, (((0X7a45ffa8 IN (rt0.c3)))!=(((rt0.c3)IS NOT(rt0.c3)))), MAX(((rt0.c3)+(rt0.c2))) FROM t0, vt0 WHERE ((((~ (0.5234666563932225))) IS FALSE));SELECT DISTINCT SUM(json_extract(0X2e0afd21, vt0.c0, '-1812947069', 'm{')) FROM vt0, t0, rt0 WHERE (((((((((COALESCE(DISTINCT NULL, NULL))AND(((0.8350142729015113)*(x'a0ec')))))OR((('-1381477255') NOT BETWEEN (0Xffffffffa5881b8c) AND ('nDg&g')))))AND(0.784410071272929)))AND(((x'') NOT BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT ALL (TOTAL(t0.c0) IN ()) FROM rt0, vt0 WHERE (CAST(CASE '526440949'  WHEN -946050303 THEN -575652281 END AS TEXT)); -- 0ms;
SELECT DISTINCT rt0.c2, (((((((((((rt0.c3)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))OR(((rt0.c2)%(rt0.c3)))))OR(-1724711054)))OR(CAST(rt0.c1 AS INTEGER))))OR(CASE rt0.c2  WHEN '873570947' THEN rt0.c2 ELSE -1932297054 END)), (((rt0.c1) ISNULL) IN ()) FROM t0, vt0;SELECT ALL (NOT ((((rt0.c3))>=((rt0.c3))))) FROM vt0 INNER JOIN t0 ON ((CAST(t0.c0 AS REAL))<(vt0.c0)) RIGHT OUTER JOIN rt0 ON 0.49186397285125394 WHERE (CASE WHEN ((('.s')) NOT BETWEEN ((-1184458236)) AND ((-8.1792257E7))) THEN CASE '-1147468104'  WHEN 'e3' THEN 0.32336261794792076 ELSE '0.8681179418631861' END END); -- 1ms;
SELECT ((AVG(rt0.c0)) BETWEEN ((t0.c0 IN ('-1705679326'))) AND ((~ (rt0.c2)))), ((LOWER(vt0.c0)) NOT BETWEEN ((+ (rt0.c0))) AND (((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))), ((rt0.c2 IN (vt0.c0, rt0.c0)) IN (json_remove(vt0.c0, rt0.c0))) FROM rt0 GROUP BY CAST(LIKE(rt0.c1, '-185349830', 'm') AS TEXT);SELECT ALL (((((rt0.c2))<=((rt0.c2)))) ISNULL) FROM t0, rt0, vt0 WHERE ((((((0.46712349946106657)GLOB(NULL))))>(((((NULL, NULL, 0.7295719635706402)) BETWEEN ((0.0010661461723733279, 'zA', 0.20751021970383254)) AND ((NULL, '1761280908', x'3cf2'))))))); -- 0ms;
SELECT DISTINCT ((((((((MAX(rt0.c1))OR(((rt0.c2) ISNULL))))AND(SUM(vt0.c0))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(NULL)) FROM vt0, t0;SELECT ALL ((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)) COLLATE RTRIM FROM vt0, t0 WHERE (((CAST('-196331944' AS REAL))<((+ (NULL)))));SELECT DISTINCT PRINTF((((rt0.c0))=((rt0.c1))), CAST(t0.c0 AS NUMERIC), ((rt0.c1)+(rt0.c2))) FROM vt0, rt0, t0 WHERE (x'') GROUP BY NULL HAVING COALESCE(CASE WHEN rt0.c2 THEN rt0.c2 END, AVG(rt0.c1)) LIMIT -1425671953 OFFSET 1387614987; -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))&(((rt0.c1)<(rt0.c0)))) FROM t0, rt0; -- 0ms;
SELECT SUM(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE t0.c0 END) OVER () FROM vt0, rt0;SELECT ALL CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL) FROM vt0, rt0 WHERE (((((0.7346964501248364)AND(0x15a80b63)))<=(((NULL)=(0.47698023622803076))))) LIMIT -946050303 OFFSET -230598784; -- 0ms;
SELECT DISTINCT LAST_VALUE(x'') OVER () FROM t0, rt0, vt0; -- 0ms;
SELECT ALL ((((((rt0.c0)<(vt0.c0)))OR(((-1.01826954E9)|(rt0.c1)))))AND((+ (rt0.c1)))), (vt0.c0 COLLATE BINARY IN ()), ((((json_quote(rt0.c2))OR(MIN(rt0.c2))))AND((+ (rt0.c1)))) FROM rt0;SELECT DISTINCT COUNT(CAST(vt0.c0 AS BLOB)), ((((vt0.c0)<=(rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN '' THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END) AND ((t0.c0 IN ()))), rt0.c0 FROM vt0, t0 WHERE (((((NULL) NOTNULL))==('p' COLLATE RTRIM)));SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c0 THEN '' END)) AND ((x'5636'))) FROM t0 NOT INDEXED WHERE ((((('-1147468104')<(0.39378868824058766))) BETWEEN (((0.3068293232407818) IS FALSE)) AND (((NULL)AND(x'6ccc')))));SELECT ALL LAST_VALUE(((((vt0.c0)LIKE(rt0.c2)))-(((rt0.c1)+(rt0.c2))))) OVER () FROM rt0, vt0 WHERE ((NOT (CASE WHEN 'v听]k)&+qq' THEN 0xffffffffd215eff0 END))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c2)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN ((((t0.c0)<<(vt0.c0)))) AND ((((0.9539829838022473)AND(rt0.c3))))) FROM rt0;SELECT ALL '_^I', (((rt0.c0)) NOT BETWEEN ((COUNT(*))) AND (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))), (((((rt0.c3))<((rt0.c0))))&(rt0.c2)) FROM vt0, t0, rt0 WHERE (((((NULL IN ())))<=(((('E3') IS TRUE))))); -- 0ms;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (NULL); -- 0ms;
SELECT (((NULL))!=((0x19f2cfe))) FROM t0 WHERE (TYPEOF(CAST(682175543 AS REAL))); -- 0ms;
SELECT ALL ((((((rt0.c0, vt0.c0, rt0.c1, rt0.c3, vt0.c0))!=((vt0.c0, vt0.c0, t0.c0, '682175543', rt0.c1)))))<=((rt0.c2))) FROM rt0 WHERE (TRIM(DISTINCT (((6.33542504E8, x'', -1381477255))>=(('732417704', '1560077636', -1460079026))))) ORDER BY INSTR((NOT (rt0.c3)), ((vt0.c0)==(rt0.c2))) ASC, (((rt0.c1)||(vt0.c0)) IN (((t0.c0)-(vt0.c0)))) ASC  NULLS FIRST;SELECT DISTINCT IFNULL('ꖯheQ', CAST(rt0.c1 AS NUMERIC)), ((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN ((rt0.c3 IN (vt0.c0))) AND (((rt0.c3)<=(vt0.c0)))), (('-596556512')<>(NULL)) FROM vt0, t0 LIMIT 368861712;SELECT DISTINCT rt0.c1 FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((((((rt0.c0 COLLATE NOCASE)AND(TRIM(rt0.c3))))OR(CAST(t0.c0 AS TEXT))))AND((NOT (rt0.c2)))))OR(((t0.c0)=(rt0.c3)))), ((((rt0.c3)IS NOT(vt0.c0))) ISNULL), CAST(CASE WHEN rt0.c3 THEN vt0.c0 END AS NUMERIC) FROM rt0, vt0, t0 ORDER BY ((vt0.c0)=(rt0.c1)) COLLATE BINARY  NULLS LAST; -- 1ms;
SELECT ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (vt0.c0 COLLATE RTRIM)), x'4654', NTILE(TYPEOF(rt0.c0) COLLATE RTRIM) OVER () FROM vt0, rt0, t0;SELECT DISTINCT (((vt0.c0 IN ()))>(CASE WHEN NULL THEN t0.c0 END)) FROM vt0;SELECT DISTINCT vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT ((((rt0.c1)GLOB(rt0.c0))) BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(-2.86694748E8))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM t0, rt0, vt0; -- 0ms;
SELECT ABS('{h') FROM rt0, vt0; -- 0ms;
SELECT ((json_insert(rt0.c0, t0.c0, rt0.c3)) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c3 END) AND (vt0.c0 COLLATE RTRIM)), 0Xffffffffb2faa31c, NTILE(NULL) OVER () FROM t0 WHERE ((+ (CASE x''  WHEN 0.06124786187744746 THEN NULL WHEN NULL THEN '0.6338217924727186' WHEN 0Xffffffff9ed4a94c THEN '' WHEN 0.7904151499909468 THEN NULL WHEN 0.20751021970383254 THEN x'' ELSE x'' END)));SELECT DISTINCT (CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) FROM rt0, t0 WHERE (((DATE(NULL, x'2362', x'9328'))AND(((NULL) NOT BETWEEN ('687063927') AND (NULL))))); -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(rt0.c1)) FROM t0, vt0;SELECT DISTINCT ((t0.c0)IS NOT((((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c0))))) FROM t0, rt0 WHERE (CASE ((x'867e')+(7.32417704E8))  WHEN ((0.8277416735124945)=(NULL)) THEN LIKE('_S[璴Z', x'', '.') END);SELECT ALL (((~ (t0.c0)))<(CASE rt0.c1  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'3c57' WHEN '1257853302' THEN rt0.c0 END)), rt0.c3, NULL FROM vt0, t0;SELECT DISTINCT COUNT(*) OVER (), RANK() OVER (), CASE WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM FROM rt0, t0, vt0; -- 1ms;
SELECT DISTINCT LAST_VALUE(SQLITE_SOURCE_ID()) OVER ( ORDER BY ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE RTRIM DESC, t0.c0  NULLS FIRST), ((((vt0.c0)<=(t0.c0))) NOTNULL), COUNT(*) FROM t0, vt0 INDEXED BY i8 WHERE (LIKELY(DISTINCT CASE WHEN x'' THEN '|Sd! 6♊,' END)) ORDER BY (((((-7.70314256E8 IN (vt0.c0, x'')))AND((t0.c0 IN ()))))AND(((rt0.c3) ISNULL))) DESC;SELECT ALL CASE (((rt0.c3, t0.c0, t0.c0))<=((0.8685454651789233, '0.5684685261985166', vt0.c0)))  WHEN x'' THEN ((((rt0.c2)AND(vt0.c0)))AND('1352862270')) ELSE rt0.c2 COLLATE BINARY END FROM vt0, rt0 WHERE ((((NOT ('-1425671953')))+((NOT (x''))))) GROUP BY CASE WHEN ((t0.c0)>(t0.c0)) THEN (((0X562718a3, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))) ELSE rt0.c0 COLLATE BINARY END, JULIANDAY(rt0.c0, 0.5440423670544037, CAST(vt0.c0 AS BLOB), CASE rt0.c1  WHEN rt0.c3 THEN t0.c0 END, ((rt0.c3)%(x''))), CASE WHEN rt0.c3 THEN vt0.c0 COLLATE BINARY END;SELECT ALL MIN(CAST(rt0.c1 AS TEXT)) FROM rt0, t0, vt0 WHERE (('1740827090' IN ())); -- 1ms;
SELECT DISTINCT (((CASE rt0.c0  WHEN t0.c0 THEN rt0.c3 END))<((((rt0.c0)<<(rt0.c2))))) FROM t0 WHERE (ROUND(('%<' IN ('_^I', '')), CAST('' AS INTEGER)));SELECT DISTINCT CASE WHEN (rt0.c2 IN (vt0.c0, 0.9684115380535119)) THEN CASE WHEN 0.14853323375897753 THEN rt0.c1 ELSE rt0.c1 END WHEN (((rt0.c0, rt0.c1, rt0.c3)) BETWEEN ((vt0.c0, vt0.c0, -1.187489335E9)) AND ((x'', t0.c0, rt0.c0))) THEN AVG(rt0.c2) WHEN t0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((0.5056066371632242)) AND ((rt0.c2))) WHEN rt0.c3 COLLATE NOCASE THEN JULIANDAY(rt0.c2, x'', vt0.c0, rt0.c1, t0.c0) WHEN ((((rt0.c1)OR(t0.c0)))OR(rt0.c1)) THEN (((vt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, x''))) END, 0.8120857740017549, COUNT(((vt0.c0) NOT BETWEEN (-1299825253) AND (rt0.c3))) FROM vt0, t0 LIMIT 533906809;SELECT ALL ((((rt0.c0)IS NOT(rt0.c0)))||(((rt0.c3)IS(vt0.c0)))), TOTAL((- (rt0.c3))), CAST((rt0.c0 IN ()) AS BLOB) FROM rt0 ORDER BY rt0.c1 DESC, ((rt0.c0 COLLATE BINARY) NOT BETWEEN ((rt0.c0 IN (vt0.c0, rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((0xffffffff8df29a7d)))))  NULLS FIRST, (((CASE vt0.c0  WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END))>=((((rt0.c0) NOTNULL))));SELECT ((((rt0.c0) NOT NULL)) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CAST(t0.c0 AS REAL))), ((((rt0.c0) IS TRUE))>=(rt0.c2)), (((rt0.c0)IS(rt0.c0)) IN ()) FROM rt0 WHERE (NULLIF('8+Wऐ\r촟*' COLLATE BINARY, ('6i\F' IN ())));SELECT INSTR(t0.c0, CHANGES()), ROW_NUMBER() OVER ( ORDER BY ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(((rt0.c3)==(rt0.c3)))))OR(CAST(t0.c0 AS INTEGER)))  NULLS LAST, (CASE WHEN vt0.c0 THEN rt0.c2 ELSE t0.c0 END IN ()) DESC  NULLS FIRST RANGE  UNBOUNDED PRECEDING), rt0.c0 FROM rt0, vt0 WHERE (((((((0.8962295809326223))==(('-575652281')))))=((x'')))) GROUP BY (rt0.c1 IN ()) HAVING (QUOTE(rt0.c2) IN (1338902295, ((vt0.c0)&(rt0.c0))));SELECT SUM(((rt0.c0) IS FALSE)), ((((((rt0.c1)AND(vt0.c0)))AND(0.7807290684451481)))IS(NULLIF(DISTINCT rt0.c3, vt0.c0))), ((CAST(t0.c0 AS INTEGER)) IS TRUE) FROM t0, rt0;SELECT RANK() OVER ( GROUPS rt0.c1 PRECEDING EXCLUDE GROUP) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (- (((vt0.c0)>>(vt0.c0)))) FROM vt0 WHERE (((NULL COLLATE NOCASE) IS FALSE)) UNION ALL SELECT ((((vt0.c0)<(rt0.c2)))>(((rt0.c0)/(rt0.c3)))) FROM t0, rt0 WHERE ((((((((((((((((''))>((0Xffffffffa145d2b6))))OR((('') NOT BETWEEN ('799070617') AND (NULL)))))OR((('-91084192')<=(0Xffffffffe6c0279e)))))AND((((('')OR(-772758548)))AND(NULL)))))AND(1765729768 COLLATE RTRIM)))AND(ABS(''))))AND(CAST(-71259445 AS INTEGER))));SELECT ALL (((t0.c0)=(rt0.c2)) IN ()), (+ (TIME(0.8120857740017549, rt0.c2, rt0.c3, rt0.c3, rt0.c3))), CAST(vt0.c0 COLLATE RTRIM AS BLOB) FROM t0, vt0, rt0; -- 0ms;
SELECT ALL (+ (((((rt0.c1)OR(t0.c0)))OR(vt0.c0)))) FROM rt0, t0 LIMIT 2063760659;SELECT DISTINCT (((rt0.c1)) BETWEEN ((((((((((rt0.c0)AND(t0.c0)))OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))) AND (((('418753712')%(rt0.c0))))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((('1008385864') BETWEEN (rt0.c2) AND (rt0.c1)) IN ()), (vt0.c0 COLLATE RTRIM IN ()), (((((('772472097')AND(rt0.c3)))OR(rt0.c1))) NOT NULL) FROM rt0, t0 WHERE ((((((NULL))<>((NULL))))AND(((NULL) BETWEEN (x'9877') AND (NULL))))); -- 1ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((0.441603177718613))<=((NULL)))) NOT NULL)); -- 0ms;
SELECT ALL (~ (x'')), COUNT(CHAR(rt0.c3, 0Xffffffff80ceafa4, t0.c0)) OVER (), load_extension(GROUP_CONCAT(rt0.c2)), (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END IN (MAX(rt0.c0), (- (rt0.c2)))), CASE WHEN (~ (t0.c0)) THEN ((vt0.c0)<>(rt0.c1)) END FROM rt0, t0;SELECT DISTINCT CASE WHEN CASE WHEN '0.18960372833878136' THEN rt0.c2 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE t0.c0 END THEN MIN(rt0.c0) END, (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))-(rt0.c2 COLLATE NOCASE)), ((((vt0.c0)/(t0.c0))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (rt0.c1)) FROM rt0, vt0, t0 LIMIT -1026412254; -- 0ms;
SELECT ((((vt0.c0)>(t0.c0))) NOT NULL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT x'9ace' FROM rt0, vt0 WHERE ((((((((('0.7118532239184131' COLLATE RTRIM)OR(x'' COLLATE NOCASE)))OR((((((((((((('0.39378868824058766')AND(-1411521868)))AND(NULL)))OR(0.7471097024300569)))AND('F2y\nQ7')))AND(3.63334499E8)))OR('K3')))))OR(((((NULL)OR(x'')))AND('418753712')))))AND(((x'')IS NOT(-1.822715598E9))))); -- 0ms;
SELECT (((((t0.c0 IN ()))AND(-1107361858)))AND(CAST(vt0.c0 AS TEXT))), CASE WHEN ((rt0.c2)>>(vt0.c0)) THEN (((rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', rt0.c0)) AND ((rt0.c0, rt0.c2, vt0.c0))) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (x'')) END, IFNULL(CASE WHEN '-1226038167' THEN rt0.c3 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END, CAST(rt0.c2 AS BLOB)) FROM t0, rt0, vt0 WHERE (CAST(x'' AS TEXT)) GROUP BY ((vt0.c0)IS(vt0.c0)) COLLATE RTRIM HAVING ((x'') NOTNULL); -- 0ms;
SELECT ((((MAX(vt0.c0))AND((((vt0.c0))>((rt0.c1))))))AND(((('-2100670340'))>((rt0.c0))))) FROM vt0, rt0, t0 WHERE (((((('~1{|s,')&(NULL))))>=((CASE NULL  WHEN NULL THEN '' WHEN x'73347392e172' THEN '0o+z]fd p' WHEN x'314e' THEN '' END)))); -- 0ms;
SELECT DISTINCT (- (rt0.c0)) COLLATE NOCASE FROM vt0, t0, rt0 WHERE (json_array_length(0.18766555517363803, NULL) COLLATE NOCASE); -- 0ms;
SELECT ((CAST(vt0.c0 AS INTEGER))IS(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) FROM t0, rt0;SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))) IS FALSE) FROM rt0, t0 WHERE ((x'' COLLATE NOCASE IN ())); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM)IS(rt0.c3 COLLATE BINARY)), vt0.c0, CASE WHEN (NOT (t0.c0)) THEN ((vt0.c0)<>(t0.c0)) ELSE TRIM(t0.c0) END, (((vt0.c0, rt0.c1, t0.c0)) BETWEEN ((QUOTE(vt0.c0), ((vt0.c0)IS NOT(vt0.c0)), LOWER(DISTINCT ''))) AND (((((rt0.c0))<=((t0.c0))), rt0.c1, rt0.c0))), (~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM t0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT NULL);SELECT DISTINCT ((MAX(rt0.c3)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c1)-(t0.c0)))), FIRST_VALUE((+ (rt0.c3))) OVER (), (+ ((NOT (t0.c0)))), ((COUNT(*)) BETWEEN (((vt0.c0)>>(rt0.c2))) AND (((((vt0.c0)AND(rt0.c1)))AND(t0.c0)))), ((((COUNT(*))AND((rt0.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)) FROM t0, rt0;SELECT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (NULL)) IN ()) FROM vt0, t0, rt0 LIMIT 1129199861 OFFSET -770314256; -- 1ms;
SELECT DISTINCT FIRST_VALUE((vt0.c0 COLLATE NOCASE IN ())) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN ((rt0.c2 IN (t0.c0))) AND (rt0.c0)), x'', NULLIF(DISTINCT MIN(rt0.c1), (NOT (rt0.c0))), UNLIKELY(DISTINCT ((rt0.c1) NOT NULL)), '' FROM vt0 WHERE (x'3176');SELECT DISTINCT (NOT (GROUP_CONCAT('Q'))) FROM t0 WHERE (((NULL)IS(((0.30730513494526746)<>(0.42090598329945783))))); -- 0ms;
SELECT DISTINCT UPPER(((rt0.c3)IS(rt0.c1))), LOWER(DISTINCT CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END), CAST(vt0.c0 AS TEXT) FROM rt0 WHERE (CASE WHEN (('0.621897695495428') IS FALSE) THEN '145200127' ELSE x'' END);SELECT ((COUNT(*)) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((t0.c0)>=(rt0.c2)))) FROM vt0, rt0 WHERE (((((((0.0) NOTNULL))OR('}3' COLLATE RTRIM)))OR(((((NULL)AND(x'')))OR('')))));SELECT DISTINCT RANK() OVER () FROM vt0 WHERE (((x'') NOT BETWEEN ((((x'e5ed'))>=((x'')))) AND ((' Q' IN ())))) GROUP BY ((((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END)OR(((rt0.c0) IS FALSE))))AND(((vt0.c0)&(rt0.c3)))))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c0)>=(rt0.c2)))) HAVING rt0.c0;SELECT DISTINCT CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((vt0.c0)>(rt0.c3)) WHEN ((rt0.c2) BETWEEN (rt0.c3) AND ('-1724767193')) THEN ((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c3)AND(rt0.c3)) THEN rt0.c0 COLLATE BINARY END FROM vt0 INDEXED BY i49;SELECT DISTINCT MAX(((rt0.c1) IS FALSE)), STRFTIME(((rt0.c2) NOT NULL), ((rt0.c3)GLOB(rt0.c0)), ((rt0.c3)<=(rt0.c3))), CAST(((rt0.c1)IS NOT(t0.c0)) AS REAL), SUBSTR(rt0.c1, rt0.c1) COLLATE NOCASE, rt0.c2 FROM rt0;SELECT GROUP_CONCAT((('|sd! 6♊,')>>(rt0.c0))) OVER (), (((t0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c0)IS NOT(rt0.c3)), ((rt0.c3)|(vt0.c0)), ((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))) AND ((rt0.c2 COLLATE NOCASE, (- (vt0.c0)), CASE t0.c0  WHEN rt0.c3 THEN rt0.c0 END))), ((((rt0.c0)+(t0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((((rt0.c0)OR(vt0.c0)))AND(rt0.c3)))) FROM t0, rt0 WHERE ((CASE WHEN 0.41606599693494595 THEN x'' WHEN NULL THEN '1262960515' WHEN 1877562634 THEN 0.36386461826977323 WHEN NULL THEN '778510700' WHEN -1425671953 THEN 0.8012944663934264 ELSE 0.7512899659447377 END IN (CASE ''  WHEN NULL THEN '\r#\n8U' WHEN -1992698689 THEN 0X575d5142 WHEN x'' THEN 0.39991981033156754 END)));SELECT DISTINCT (- ('1345769793')) COLLATE NOCASE FROM rt0, vt0, t0 WHERE (NULL); -- 0ms;
SELECT LIKE(((rt0.c1)||(x'')), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), '끻') FROM rt0, t0, vt0; -- 1ms;
SELECT COALESCE(CAST(rt0.c1 AS REAL), CASE t0.c0  WHEN rt0.c3 THEN 1705092527 END) FROM rt0, vt0, t0 WHERE ((- (0X76551af)) COLLATE RTRIM); -- 0ms;
SELECT TOTAL(((((rt0.c3)OR(rt0.c2)))OR('1130469662'))) OVER () FROM vt0, t0;SELECT ALL CASE WHEN (- (rt0.c2)) THEN ((((NULL)AND(rt0.c2)))AND(vt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN (((rt0.c3, t0.c0, rt0.c3, rt0.c2, t0.c0)) BETWEEN ((rt0.c3, rt0.c1, t0.c0, t0.c0, t0.c0)) AND ((rt0.c3, rt0.c0, t0.c0, rt0.c0, rt0.c3))) THEN rt0.c2 COLLATE RTRIM END, ((((rt0.c0 IN (rt0.c3))))<>((vt0.c0 COLLATE BINARY))), (((('-596556512') BETWEEN (t0.c0) AND (vt0.c0))) BETWEEN (((rt0.c3)<(t0.c0))) AND (((rt0.c2)+(rt0.c2)))), ((((NULL)AND((t0.c0 IN ()))))AND(GROUP_CONCAT(rt0.c3))), CASE ((rt0.c3) BETWEEN (t0.c0) AND (vt0.c0))  WHEN rt0.c3 THEN t0.c0 ELSE (- (rt0.c0)) END FROM t0, vt0 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN (0xffffffffada85479) AND ((((NULL, -1724711054, '-1724767193')) NOT BETWEEN (('0.4693778219829682', NULL, NULL)) AND ((NULL, '1051627691', 0.8034253092845791))))));SELECT DISTINCT (((CASE NULL  WHEN t0.c0 THEN rt0.c3 END))>((NULL))) FROM rt0, vt0 GROUP BY CHAR(((NULL) BETWEEN (t0.c0) AND (x'7d5f'))) HAVING LIKELY(DISTINCT ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0)));SELECT DISTINCT rt0.c1, (t0.c0 IN ()), ((((rt0.c2) IS FALSE)) IS FALSE) FROM t0, vt0, rt0 WHERE ((((~ (x''))) ISNULL)) GROUP BY ((rt0.c2 COLLATE RTRIM) IS FALSE), 0.5633803267138151, ((((((((((rt0.c2)OR(x'62ac')))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))) IS TRUE); -- 0ms;
SELECT DISTINCT ((vt0.c0)>=(rt0.c0)) COLLATE NOCASE, CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c3)IS(vt0.c0)) END, (((rt0.c2)<<(rt0.c3)) IN ()) FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c0 AS TEXT)) FROM vt0, t0; -- 0ms;
SELECT (+ ((- (rt0.c0)))), CAST(CAST(rt0.c0 AS INTEGER) AS REAL), '-999645429' FROM vt0 INDEXED BY i49 WHERE (((((NULL IN ('W&'))))>=(((((x'')) BETWEEN (('-1187489335')) AND ((0X7cd20a84))))))) GROUP BY CASE WHEN (NOT (vt0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(rt0.c2)) END, ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((vt0.c0) NOTNULL))), highlight(((rt0.c2) NOT NULL), rt0.c1, (~ (t0.c0)), (((vt0.c0, rt0.c3, t0.c0))>((rt0.c1, t0.c0, vt0.c0)))) HAVING '-1501185929';SELECT ALL ((COUNT(t0.c0))<>(COUNT(rt0.c1))) FROM vt0, rt0 ORDER BY rt0.c0 DESC, rt0.c3  NULLS FIRST;SELECT MIN(((t0.c0)<<(vt0.c0))) FROM t0, rt0 CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE)) NOTNULL); -- 1ms;
SELECT DISTINCT ((((LOWER(t0.c0))OR(((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))))AND((NOT (rt0.c3)))), ((t0.c0 COLLATE NOCASE) IS FALSE), ((((((('283175128')) NOT BETWEEN ((0.18974669749266415)) AND ((rt0.c2))))OR(CAST(x'' AS NUMERIC))))AND(((vt0.c0) NOTNULL))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((PRINTF(rt0.c2))AND(json_array_length(NULL, x''))) FROM vt0 WHERE (((((x'')AND(x'e8ac')))OR(NULL)));SELECT CASE (~ (t0.c0))  WHEN CAST(rt0.c1 AS TEXT) THEN ((((((((rt0.c2)AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0)) END FROM vt0;SELECT DISTINCT ((((((t0.c0)OR(rt0.c0)))OR(rt0.c2))) IS FALSE) FROM vt0, rt0 NOT INDEXED, t0 ORDER BY ((((rt0.c2) ISNULL)) NOT BETWEEN (rt0.c3) AND (((((rt0.c2)AND('2000977491')))OR(rt0.c3)))) ASC  NULLS LAST, ((0.5440423670544037) IS TRUE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 WHERE (((((0.7904151499909468)<<(0.19024803734920148))) ISNULL)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS REAL) FROM t0;SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN (json_extract(rt0.c1, vt0.c0))) FROM rt0, t0 NOT INDEXED, vt0;SELECT DISTINCT SQLITE_COMPILEOPTION_GET(CASE vt0.c0  WHEN rt0.c1 THEN '1068766502' ELSE t0.c0 END), TOTAL((rt0.c2 IN ())) OVER (), CASE CAST(rt0.c3 AS TEXT)  WHEN ((t0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) THEN '0.9026479395015564' END FROM rt0 WHERE (ABS(0.8148807445290963));SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) IS FALSE) FROM vt0 WHERE ('cy');SELECT ALL TOTAL_CHANGES() FROM vt0 NOT INDEXED, rt0, t0; -- 0ms;
SELECT ALL x'', (- (CAST(rt0.c2 AS NUMERIC))), LAST_VALUE(CASE ((((rt0.c0)OR(rt0.c2)))OR(x''))  WHEN (rt0.c3 IN ()) THEN vt0.c0 WHEN (((vt0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c0))) THEN ((((((((0.7887538055272134)AND(rt0.c0)))OR(rt0.c0)))OR(NULL)))AND(rt0.c2)) WHEN ((rt0.c2) NOTNULL) THEN 0.8350142729015113 END) OVER () FROM vt0, rt0 WHERE (CASE ((x'')/('D(vU8#M7K'))  WHEN (~ (x'')) THEN ((0.9144669486623538)-('-1026412254')) WHEN ((((847877807)OR('-1425671953')))OR(x'97ad')) THEN 0.7446592874237685 WHEN ((x'') BETWEEN (x'') AND (0x788c7b6)) THEN ((0.4173619577457576)>>('46')) ELSE ((((x'')AND(x'')))OR(NULL)) END) LIMIT 1318792542 OFFSET -1010752201; -- 1ms;
SELECT DISTINCT ((SUBSTR(rt0.c2, rt0.c2))>=((- (t0.c0)))) FROM t0 WHERE (ABS((+ (NULL))));SELECT ((((((rt0.c3)OR(vt0.c0)))AND(rt0.c3))) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (vt0.c0 COLLATE RTRIM)), ((((rt0.c0)&(rt0.c2)))|(((rt0.c2)%(rt0.c0)))), ('876468598' IN ()) COLLATE NOCASE FROM t0;SELECT ((rt0.c1 COLLATE BINARY)<=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))), ((CASE t0.c0  WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c3 ELSE rt0.c2 END) AND (vt0.c0)), ((((rt0.c1)>=(rt0.c0)))OR((- (rt0.c3)))) FROM rt0 WHERE (((((- (x''))))>=(('jt긑춶UOl7')))) ORDER BY ((rt0.c2)%(t0.c0)) COLLATE NOCASE DESC  NULLS FIRST;SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, t0 WHERE ((+ (((x'')AND('-1992698689'))))); -- 0ms;
SELECT DISTINCT CAST((rt0.c3 IN ()) AS BLOB) FROM rt0, t0 WHERE ((((0Xffffffffe97816db IN ())) IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT((rt0.c3 IN ())) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)||(t0.c0)))LIKE(vt0.c0)), x'2056', GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (0.34521815205289297))) OVER () FROM t0, rt0, vt0 WHERE ((- (((x'')OR(0.1515295947124965))))) GROUP BY UNLIKELY('0.28898335329936053') HAVING CASE UPPER(DISTINCT rt0.c3)  WHEN (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))) THEN ((((NULL)AND(rt0.c2)))OR(rt0.c1)) WHEN GROUP_CONCAT(rt0.c1) THEN (rt0.c0 IN (rt0.c2)) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END ELSE rt0.c1 COLLATE RTRIM END; -- 1ms;
SELECT DISTINCT MAX((rt0.c3 IN (rt0.c3))), 0.7807290684451481 COLLATE RTRIM, LOWER(DISTINCT (NULL IN ())) FROM vt0, rt0, t0 WHERE ((~ (NULL COLLATE NOCASE))) GROUP BY ((((((rt0.c0)IS NOT(rt0.c2)))OR(TOTAL_CHANGES())))AND(rt0.c2)), CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL)) WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE BINARY WHEN t0.c0 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)|(rt0.c1)) THEN rt0.c2 WHEN (rt0.c3 IN ()) THEN rt0.c1 END, (+ (((((t0.c0)AND(rt0.c1)))OR(rt0.c1)))); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c0)IS NOT(t0.c0))), COUNT(MIN(t0.c0 COLLATE RTRIM)), ((rt0.c2 IN ()) IN ()) FROM vt0, t0 WHERE (((NULL COLLATE NOCASE)||((~ (1110975452)))));SELECT CUME_DIST() OVER (), CAST(SQLITE_COMPILEOPTION_USED(rt0.c3) AS NUMERIC), (((((rt0.c2, rt0.c1, t0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c3)) AND ((t0.c0, rt0.c1, rt0.c3))))GLOB(rt0.c3 COLLATE BINARY)) FROM t0, vt0, rt0 WHERE ((((NOT (1.257853302E9))) NOT BETWEEN ((('|/ALA')<>(1923581136))) AND ((0.9428428051946904 IN ())))); -- 1ms;
SELECT ALL UNLIKELY((rt0.c1 IN (rt0.c1))), ((((((((CASE rt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN rt0.c1 THEN x'' END)AND('1120151061')))AND(0.30730513494526746)))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))), (((~ (rt0.c0)))>(MAX(rt0.c3))) FROM vt0;SELECT DISTINCT ((((((((GROUP_CONCAT(NULL))AND(CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END)))OR((((rt0.c1, t0.c0, rt0.c2)) BETWEEN ((x'de2c', rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, NULL))))))AND(((rt0.c3) IS TRUE))))OR((vt0.c0 IN ()))) FROM t0, vt0 WHERE ((((('')AND(0.7348346717477207)))OR(NULL)) COLLATE RTRIM);SELECT DISTINCT ((CAST(rt0.c0 AS TEXT))IS(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END)) FROM t0 WHERE ((((NULL)!=('1697270052')) IN ())) LIMIT 268609053 OFFSET -1385534757;SELECT ALL x'' FROM rt0 WHERE ((((NULL COLLATE RTRIM))<>((CASE WHEN x'7f47' THEN NULL END)))); -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT NTILE(((((rt0.c2)>>(rt0.c2))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND ((NOT (t0.c0))))) OVER () FROM t0, rt0, vt0 WHERE ((((((((((((('828576741')OR(NULL)))AND(0Xffffffff979e16f6)))AND(NULL)))OR(NULL)))AND(NULL)))AND('1925717302')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((ABS(DISTINCT x''))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END))), GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)) COLLATE BINARY, (((rt0.c1 IN (t0.c0))) ISNULL) FROM t0 WHERE ((~ (((NULL) IS TRUE))));SELECT TOTAL((((NULL))<((t0.c0)))) FROM rt0, t0 NOT INDEXED; -- 0ms;
SELECT DENSE_RANK() OVER (), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 END THEN ((rt0.c1)AND(rt0.c0)) ELSE CAST(vt0.c0 AS INTEGER) END, ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))OR(t0.c0)))AND(t0.c0)))AND(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) FROM vt0, rt0, t0 WHERE (0.4490124582974728 COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (~ (CASE WHEN t0.c0 THEN rt0.c1 END)) FROM rt0, vt0 WHERE ((((((x'')) BETWEEN (('1338902295')) AND ((NULL))))+(x'5d7f' COLLATE BINARY)));SELECT ((rt0.c1 IN (rt0.c0)) IN ()), (NOT (NULLIF(t0.c0, vt0.c0))), CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT) FROM t0, rt0;SELECT DISTINCT (-1442781120 IN ()) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT NULL)) IS FALSE) FROM rt0, vt0, t0 WHERE (CAST((NOT ('368861712')) AS BLOB)); -- 0ms;
SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(0.20512482527272324)))%(CAST('1958653220' AS BLOB))) FROM rt0 WHERE ((((-1663392331 IN (0xffffffff914146b8)))*(((((x'd283')OR(NULL)))OR(x'')))));SELECT DISTINCT vt0.c0 FROM t0, rt0 WHERE (TRIM(x'') COLLATE NOCASE) ORDER BY (NOT ((t0.c0 IN (rt0.c1)))) ASC  NULLS FIRST LIMIT 760644032;SELECT DISTINCT json_array_length((rt0.c2 IN ()), (- (rt0.c1))), (rt0.c3 COLLATE RTRIM IN (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), CAST(rt0.c0 AS TEXT) FROM vt0, rt0, t0;SELECT DISTINCT SUM(TOTAL(((rt0.c0)IS NOT('-1481514545')))) FROM rt0 WHERE (((NULL COLLATE NOCASE)||(NULLIF('-1807761027', NULL))));SELECT ALL (((rt0.c3)) BETWEEN ((COALESCE(rt0.c1, rt0.c2))) AND ((t0.c0))) FROM t0;SELECT ALL LIKELY((+ (rt0.c2))) FROM t0 WHERE (((CAST(-824955272 AS INTEGER))/(INSTR('-684783161', x'')))) GROUP BY rt0.c0 COLLATE RTRIM LIMIT -484561673 OFFSET -229648920;SELECT json_array_length((rt0.c1 IN ()), ((NULL)%(vt0.c0))), ((((rt0.c0)!=(t0.c0))) NOT BETWEEN (t0.c0) AND (LOWER(rt0.c2))), CAST((t0.c0 IN ()) AS REAL) FROM rt0 WHERE (((((x'', '-1287729367', '')) BETWEEN (('459743766', -2.074857738E9, '1406586610')) AND ((x'', 0.12792780647560853, ''))) IN ('仮A]䒻t0|A' COLLATE BINARY)));SELECT DISTINCT CAST(t0.c0 AS REAL), LAG((~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))), (~ (TRIM(t0.c0, rt0.c1))), json_array_length(0.378455174007158) COLLATE NOCASE) OVER (), COUNT(*) FROM rt0, t0, vt0 WHERE ((+ (1373994658))); -- 0ms;
SELECT DISTINCT CAST('GT' AS TEXT) FROM vt0; -- 0ms;
SELECT AVG(((rt0.c3) IS TRUE)) FROM vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c2 IN (rt0.c3, vt0.c0))))<=((rt0.c3 COLLATE NOCASE))) WHERE (((((('1') BETWEEN ('/|,zD') AND ('27208958')), ((((-1591288749)AND(0.10852108861926424)))AND(NULL)), '-1571989901'))<=(((((('1498357798')OR('20667077')))AND(x'45df')), (((0.8704307761964042)) BETWEEN ((0.7783768528668719)) AND ((6.87063927E8))), CASE NULL  WHEN '' THEN 0.5407967651413281 ELSE x'fffb' END))));SELECT ((((vt0.c0)LIKE(vt0.c0))) NOTNULL) FROM rt0;SELECT DISTINCT ((((((t0.c0, t0.c0, rt0.c3))<((t0.c0, rt0.c3, vt0.c0)))))>=((CAST('-1986926307' AS BLOB)))), TYPEOF(((((((((((((t0.c0)AND(rt0.c3)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(t0.c0)))OR(t0.c0))), FIRST_VALUE((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ())) OVER () FROM vt0, t0;SELECT DISTINCT ((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))) IS TRUE) FROM t0;SELECT ALL rt0.c0, LENGTH((NOT (vt0.c0))), (- ('578352890')) FROM vt0;SELECT DISTINCT CUME_DIST() OVER () FROM t0, vt0, rt0; -- 0ms;
SELECT ALL ((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)AND(CAST(rt0.c0 AS REAL))))OR((rt0.c0 IN ()))), ((t0.c0)<((((rt0.c1))>=((0.26009530566093075))))), CASE rt0.c0  WHEN CAST(t0.c0 AS NUMERIC) THEN (NOT (t0.c0)) ELSE COUNT(*) END FROM t0 WHERE (TRIM(CASE 0.07428477499777031  WHEN -1.5756605E9 THEN x'' WHEN '687063927' THEN '-1084948022' WHEN 0.05782993348259069 THEN 1.445402787E9 END, CAST(x'' AS BLOB))) GROUP BY ((CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN t0.c0 END)+((('-1680530025') NOT BETWEEN (vt0.c0) AND (rt0.c2)))), (((~ (t0.c0))) ISNULL), ((((t0.c0) IS TRUE))%(((rt0.c0) ISNULL)));SELECT DISTINCT (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c3)) IN ()) FROM t0, vt0 EXCEPT SELECT DISTINCT x'9cae' FROM rt0, t0, vt0 WHERE ((((- (0.5364182448244299))) NOT BETWEEN (((0xffffffff8ab64061) IS FALSE)) AND (((((NULL)OR(NULL)))OR(0.8876440952588484))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0 WHERE (((NULL)||((((-5.2793516E7, 'yT', NULL))<=(('828576741', 0.6746418503326379, 0.6634580755186309)))))) GROUP BY ((((rt0.c1)%(rt0.c1))) NOT BETWEEN (LOWER(rt0.c3)) AND (((rt0.c0)>(rt0.c0))));SELECT ALL CASE WHEN (((rt0.c0, rt0.c1, rt0.c2))>=((t0.c0, rt0.c1, vt0.c0))) THEN ((rt0.c3) IS FALSE) WHEN ((t0.c0)IS NOT(rt0.c2)) THEN (vt0.c0 IN (t0.c0, t0.c0)) WHEN (+ (rt0.c2)) THEN rt0.c2 COLLATE BINARY END FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 COLLATE RTRIM THEN ((rt0.c2) BETWEEN (rt0.c3) AND (t0.c0)) ELSE ((t0.c0) ISNULL) END, DATE(rt0.c3, t0.c0, vt0.c0) COLLATE NOCASE, LTRIM(((((t0.c0)OR(1.262960515E9)))AND(rt0.c3)), ((t0.c0)-(rt0.c2))), (((t0.c0)!=(rt0.c1)) IN ()), ((-1.8534983E8)==(((rt0.c1) ISNULL))) FROM rt0, vt0 WHERE (((((x'9950')AND(((NULL) IS TRUE))))OR(NULLIF(x'', NULL))));SELECT ((rt0.c1) NOTNULL) COLLATE RTRIM FROM vt0;SELECT DISTINCT (- ((~ (rt0.c3)))) FROM vt0, t0;SELECT (((((((((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c3))))AND((- (t0.c0)))))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(x'')))OR(x'00da' COLLATE BINARY)) FROM vt0, rt0, t0 LIMIT -436191201; -- 0ms;
SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))==(((((((((vt0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c3)))) FROM rt0, t0, vt0 WHERE ((('鑃撑OX')>((- (''))))) LIMIT -1793676102; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE ((((CASE WHEN x'be0e' THEN 0Xffffffff9a556622 END, (NOT (0.9777157227595448)), ((x'')<=(1078716667))))!=((((0x1f60d9f5)IS NOT(0xffffffffd215eff0)), ((0.15136818194654023)IS NOT(NULL)), (x'' IN ()))))); -- 0ms;
SELECT 'a돣' FROM vt0, t0, rt0; -- 0ms;
SELECT ALL CAST((((rt0.c1))<((rt0.c2))) AS NUMERIC), (((((rt0.c1))>((t0.c0)))) NOT BETWEEN (((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1))) AND (TRIM(rt0.c0))), '633542504' FROM rt0, t0, vt0 WHERE (((CASE WHEN '1860733108' THEN 0.2637372061215951 ELSE x'87d9' END) BETWEEN (0.2676546548958352) AND (((x'') BETWEEN ('-1992698689') AND ('-1724711054'))))); -- 0ms;
SELECT t0.c0 FROM rt0, t0, vt0 WHERE ((CASE x''  WHEN 'uK6&' THEN 0.7911490569789581 END IN ())) LIMIT -1441948683 OFFSET 1262960515; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c3 THEN t0.c0 END COLLATE NOCASE, CAST(CHAR(rt0.c3) AS INTEGER), CASE WHEN (((rt0.c3))<>(('䀼5(?fU)'))) THEN CAST(vt0.c0 AS REAL) ELSE (- (rt0.c0)) END FROM t0, vt0 WHERE (IFNULL((((x'')) NOT BETWEEN (('526440949')) AND (('2q'))), HEX(DISTINCT NULL)));SELECT RANK() OVER ( RANGE (((rt0.c3, rt0.c2, vt0.c0)) BETWEEN (((rt0.c0 IN (rt0.c2)), (x'7f15' IN ()), ((t0.c0)IS(NULL)))) AND ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c1)), rt0.c3 COLLATE RTRIM, rt0.c3 COLLATE BINARY))) PRECEDING) FROM t0, vt0, rt0;SELECT DISTINCT ((rt0.c0 COLLATE NOCASE) IS TRUE) FROM vt0, rt0 WHERE (((IFNULL(DISTINCT '	ꗚL㩌1LzsN', '.PT Je')) BETWEEN ((('-411734426') NOT NULL)) AND (CASE WHEN 0.694801614426719 THEN x'' ELSE '' END))); -- 1ms;
SELECT DISTINCT (~ (((x'') ISNULL))), (rt0.c3 COLLATE BINARY IN ()), (((CAST(rt0.c1 AS NUMERIC)))>(((~ (t0.c0))))) FROM rt0 INDEXED BY i49, vt0;SELECT ((vt0.c0)*(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)) FROM rt0;SELECT ALL 0.16527314907472856, ((~ (t0.c0)) IN ()), ROUND(rt0.c1, NULL) COLLATE NOCASE FROM rt0 WHERE ('-1271198894') ORDER BY (- (UPPER(vt0.c0)))  NULLS LAST, SUBSTR(UPPER(vt0.c0), (- (vt0.c0))) ASC;SELECT ALL (((rt0.c0 IN ()))*(((vt0.c0) BETWEEN (t0.c0) AND (rt0.c2)))), (~ (CAST('1560077636' AS TEXT))), CASE (+ (rt0.c0))  WHEN CAST(rt0.c2 AS BLOB) THEN (((vt0.c0))<>((NULL))) END FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((vt0.c0)<>(vt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)) FROM t0;SELECT ((((rt0.c0)<>(t0.c0)))IS(CASE t0.c0  WHEN t0.c0 THEN '|.gB u\,' END)), ROW_NUMBER() OVER (), ((SUM(rt0.c0)) ISNULL) FROM vt0, t0, rt0 ORDER BY CAST(((rt0.c2) IS FALSE) AS REAL) DESC  NULLS FIRST;SELECT ALL (~ (rt0.c3)) COLLATE RTRIM, ((((rt0.c2)>>(rt0.c1)))+(((rt0.c3)AND(rt0.c0)))), (((- (rt0.c0))) IS FALSE) FROM rt0, vt0 WHERE (CAST(((0Xffffffffd9e21295)<<('')) AS REAL)); -- 0ms;
SELECT ALL TOTAL((((t0.c0))!=((rt0.c2)))) FILTER(WHERE SQLITE_COMPILEOPTION_USED(((('')) BETWEEN ((vt0.c0)) AND ((rt0.c1))))) OVER () FROM rt0 WHERE (((((((x'')IS('886583163')))OR((((1.761280908E9, 0.9689748402347225, x''))>((x'', NULL, 0.7768953840951472))))))OR('-1517806708')));SELECT DISTINCT ((((((rt0.c1)OR(rt0.c3)))AND(t0.c0))) NOT BETWEEN (((vt0.c0)AND('3l%83v5_'))) AND (((rt0.c1)|(vt0.c0)))) FROM rt0, vt0;SELECT ALL ((~ (vt0.c0)) IN ((+ (rt0.c1)))) FROM rt0 WHERE ((+ (((NULL) NOT BETWEEN (0x1a7ce115) AND (x'')))));SELECT ALL (((((vt0.c0)AND(rt0.c0)))OR(vt0.c0)) IN (((rt0.c2)=(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3)AND(t0.c0)))OR(rt0.c0)) IN ()) FROM rt0, t0, vt0 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN (((-1.653953007E9) BETWEEN (x'ffd8b5c3') AND (x''))) AND ((NULL IN ())))); -- 0ms;
SELECT ALL ((COUNT(*)) NOT BETWEEN (MAX(vt0.c0, rt0.c2)) AND (((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))OR(t0.c0)))AND(vt0.c0)))) FROM vt0, t0, rt0 INTERSECT SELECT ALL UNLIKELY(CAST(rt0.c0 AS NUMERIC)) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(((('1248118211'))>(('}')))) OVER () FROM t0; -- 0ms;
SELECT ALL NULL FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT t0.c0 FROM rt0 WHERE ((LIKELY(0.08395547227569711) IN ()));SELECT COUNT(*) OVER (), -1147468104, ((((vt0.c0 IN ()), ((t0.c0)IS NOT(rt0.c1)), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<((CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END, CAST(x'' AS INTEGER), (~ (rt0.c2))))) FROM t0, vt0 GROUP BY ((CASE WHEN rt0.c2 THEN rt0.c1 END)>=(0.8872543752501414)) HAVING ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))!=(NULLIF(rt0.c3, rt0.c3)));SELECT ALL CAST(t0.c0 AS REAL) FROM t0 ORDER BY TYPEOF(DISTINCT LIKE(vt0.c0, rt0.c2)) ASC  NULLS FIRST;SELECT DISTINCT (rt0.c2 COLLATE RTRIM IN (CASE rt0.c0  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END, LOWER(rt0.c2))) FROM vt0, rt0, t0; -- 0ms;
SELECT ALL (+ (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))), t0.c0, NULL FROM vt0 WHERE (NULL) LIMIT 1786084587;SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)%(((551065476) ISNULL))) FROM rt0, t0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL (((+ (rt0.c1))) ISNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0, t0 WHERE ((NOT (CAST(0.46123702389936805 AS INTEGER))));SELECT 0.1269537270467357 FROM t0, vt0 WHERE (((((',䤘') NOT BETWEEN (0.08004292555406489) AND (x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT (~ ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))) FROM rt0 GROUP BY -1653953007, ((NULL)<(rt0.c2)) COLLATE NOCASE, (~ ((vt0.c0 IN ()))) HAVING (~ (vt0.c0)) COLLATE NOCASE LIMIT -9223372036854775808;SELECT DISTINCT ((((rt0.c3)LIKE(rt0.c3)))>(x'')) FROM t0, rt0; -- 0ms;
SELECT ALL CASE WHEN (rt0.c3 IN ()) THEN CASE WHEN t0.c0 THEN rt0.c3 END WHEN -2008442989 THEN x'' WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((x'89fb') NOT BETWEEN (vt0.c0) AND (t0.c0)) END FROM rt0, vt0 WHERE (CAST('' COLLATE BINARY AS TEXT));SELECT ((LIKE(-7.70314256E8, rt0.c2, 'R')) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c1)) FROM vt0 WHERE ((+ (CASE '876468598'  WHEN '/|,zd' THEN 0.5234666563932225 ELSE x'' END))) ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) DESC  NULLS LAST;SELECT ALL SUM(json(rt0.c1)) OVER () FROM vt0, rt0, t0 LIMIT 367284522 OFFSET 1102727305; -- 3ms;
SELECT DISTINCT (+ (((rt0.c3)&(rt0.c1)))) FROM t0, rt0, vt0; -- 0ms;
SELECT rt0.c3 FROM vt0 WHERE (((((NULL)IS NOT(x''))) BETWEEN ((NULL IN ('-1640477157'))) AND (((('1336090847')) BETWEEN ((0.9315384285062539)) AND ((0X52357a3c))))));SELECT ALL CASE x''  WHEN 0.9559625639320256 THEN (((vt0.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, t0.c0, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c3))) END FROM t0, vt0, rt0 WHERE (((-1.936899596E9)LIKE((((0.21275781180153597)) NOT BETWEEN (('-2066900660')) AND ((-1199862556)))))); -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE BINARY IN ()) FROM rt0, t0 NOT INDEXED WHERE (((((x'') IS FALSE))IS(((633542504)AND(x''))))); -- 0ms;
SELECT DISTINCT ((TRIM(rt0.c2, rt0.c0)) NOTNULL) FROM t0, vt0, rt0 WHERE ((((('1705092527') IS TRUE))OR(((8.76468598E8)>(NULL))))); -- 0ms;
SELECT (- (rt0.c2)) COLLATE RTRIM FROM vt0, t0, rt0 WHERE ((((((-7.54930943E8)<=('-1992913599')), CAST('' AS BLOB), ((x'') NOT BETWEEN ('DO{LᴞQyql') AND (0.42090598329945783))))==((CAST('418753712' AS TEXT), ((NULL)||('-1677980834')), CAST(0.4436490228425276 AS BLOB))))); -- 1ms;
SELECT DISTINCT ((((((((((rt0.c0) NOT NULL))OR((('uk6&')LIKE(t0.c0)))))OR('-1236978697')))AND(((t0.c0)=(0.7596556972242776)))))AND((~ (t0.c0)))) FROM vt0, t0;SELECT CASE ((((rt0.c0)OR(rt0.c3)))AND(vt0.c0))  WHEN ((t0.c0) IS TRUE) THEN (((rt0.c0, vt0.c0, t0.c0))>=((rt0.c1, rt0.c0, rt0.c0))) ELSE ((rt0.c1) NOTNULL) END FROM t0 WHERE (((('~1{|s,')!=(-935872592)) IN ()));SELECT DISTINCT LIKE((- (rt0.c3)), ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0))), ((0xffffffffb9669a04)>=(((rt0.c0) ISNULL))), ((CASE WHEN NULL THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((vt0.c0 IN ()))), CAST(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c2)) AS INTEGER), (((((((('\r#%')AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM FROM vt0, t0 WHERE (CAST(CASE 958216551  WHEN '蔀V1 ' THEN 0.8900188237284775 ELSE x'' END AS NUMERIC)) LIMIT -817929815 OFFSET 1445402787 EXCEPT SELECT ALL rt0.c1, (((((rt0.c2)=(x''))))<>((((rt0.c3)IS NOT(vt0.c0))))), (+ (vt0.c0 COLLATE RTRIM)), (x'' IN ()), GROUP_CONCAT(((rt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))) OVER () FROM rt0, t0, vt0 WHERE ((((0.5960491683121056 IN (x''))) IS FALSE));SELECT DISTINCT rt0.c3 FROM t0, rt0, vt0 WHERE (((('6i\F' IN (x'')))<<((0.8120857740017549 IN (0.8175022874844562))))); -- 1ms;
SELECT ((((((((NULLIF(rt0.c2, rt0.c0))OR(CAST(rt0.c1 AS INTEGER))))OR(((x'')+(t0.c0)))))OR(rt0.c3 COLLATE BINARY)))OR(rt0.c3 COLLATE NOCASE)) FROM rt0, vt0, t0; -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM t0 WHERE ((((((((((((((('0.3308140669056381')AND(NULL)))AND(x'5c06')))AND(NULL)))OR('FG⨉*F-rE~')))AND(0.9768718189329267)))AND('-1264838756')))<(NULL)));SELECT DISTINCT CAST(LOWER(rt0.c0) AS REAL) FROM vt0 WHERE ((NOT (0.4287526963899043)));SELECT DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY FROM rt0 WHERE (((((CASE 0.6631252780441714  WHEN '-1759011625' THEN NULL WHEN x'e7a1' THEN '\nvu⩠)' WHEN '6DW0YFC6' THEN NULL END)AND(CAST('' AS BLOB))))AND(((((NULL)AND(0.25747710132599744)))OR(1.08294546E9))))); -- 0ms;
SELECT DISTINCT 0Xbbad8c3 FROM rt0, t0 ORDER BY ((((rt0.c3, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3))) IN ()) DESC; -- 0ms;
SELECT ALL AVG(CASE rt0.c3  WHEN t0.c0 THEN rt0.c3 END) OVER (), FIRST_VALUE('1053532931') OVER (), (((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)) IN ()) FROM vt0;SELECT COUNT(rt0.c3) OVER (), UNLIKELY(((rt0.c3) BETWEEN (rt0.c3) AND (x''))), json_array(CAST(rt0.c0 AS TEXT), ((t0.c0) ISNULL)), GROUP_CONCAT(((((rt0.c1)AND(vt0.c0)))OR(rt0.c1))) OVER (), COUNT(((vt0.c0)-(t0.c0))) FROM vt0;SELECT (NOT (((rt0.c3)LIKE(t0.c0)))) FROM t0;SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((((rt0.c3, vt0.c0, rt0.c2, vt0.c0, t0.c0))==((vt0.c0, rt0.c1, t0.c0, t0.c0, rt0.c1)))) AND (CASE rt0.c3  WHEN t0.c0 THEN rt0.c0 END)) FROM t0, rt0, vt0 WHERE (((CASE WHEN 'OSTl' THEN '1817390353' ELSE '-185349830' END)*(0x35b0dac8 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE BINARY)/(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c3)))AND(rt0.c3)))) FROM t0;SELECT DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM FROM vt0;SELECT DISTINCT (NOT (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))) FROM t0, rt0 WHERE ((((CAST(NULL AS TEXT), ((NULL)<=(NULL)), ((((0.6956553474864581)AND(x'')))OR(x'')), '|/ALA' COLLATE BINARY, ((-1.147468104E9)!=('0.960864054436709'))))<>(((0.39604695285218827 IN ()), CASE WHEN '1093786618' THEN x'cbb6' END, '-74650865' COLLATE NOCASE, UPPER(NULL), ((((x'')OR('-61936263')))AND(NULL)))))) ORDER BY (((- (rt0.c1))) NOT NULL) ASC, (('䇴q') IS FALSE) ASC; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((rt0.c1)>=(rt0.c2))))) FROM t0, rt0 WHERE ((((LIKE(NULL, '-1936899596', '/')))>((x'' COLLATE NOCASE))));SELECT DISTINCT (rt0.c1 IN ()) COLLATE NOCASE FROM rt0, t0, vt0; -- 0ms;
SELECT ALL MIN((~ (t0.c0)) COLLATE BINARY) FROM rt0, t0, vt0; -- 1ms;
SELECT DISTINCT CAST(TYPEOF(rt0.c1) AS INTEGER) FROM t0, vt0, rt0; -- 0ms;
SELECT ALL CASE WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0)<>(rt0.c2)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN CAST(rt0.c3 AS BLOB) WHEN ((t0.c0)>(rt0.c3)) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(t0.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END FROM vt0, t0 WHERE ((((0x3b44c29)) BETWEEN ((823772861 COLLATE NOCASE)) AND ((NULL))));SELECT DISTINCT CUME_DIST() OVER ( GROUPS  CURRENT ROW EXCLUDE TIES) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) IS FALSE) AS BLOB) FROM rt0;SELECT RANK() OVER (), (((((rt0.c2 IN ()))OR(((rt0.c1)%(rt0.c0)))))OR(COUNT(rt0.c3))), ABS(DISTINCT json_patch(-596556512, rt0.c2)) FROM vt0;SELECT (NOT (((((t0.c0)AND(rt0.c1)))AND(rt0.c2)))) FROM vt0, rt0, t0; -- 0ms;
SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))) IS FALSE) FROM t0, vt0, rt0 WHERE (NULLIF(x'' COLLATE RTRIM, (((x''))<(('-463387435'))))); -- 0ms;
SELECT rt0.c1 FROM t0, rt0 WHERE (((0.34356260778518066 COLLATE BINARY) NOT BETWEEN (CASE NULL  WHEN x'de6c' THEN x'' WHEN '' THEN 'Vb' WHEN NULL THEN '>h' ELSE 'tFNXN' END) AND (((x'dc55') BETWEEN (0.06625279066962331) AND (x'e5be'))))); -- 0ms;
SELECT ALL NULLIF(DISTINCT rt0.c1, t0.c0) COLLATE RTRIM, LENGTH(CAST(rt0.c0 AS BLOB)), SUM((t0.c0 IN (t0.c0))) OVER () FROM rt0, t0, vt0 WHERE (((x'')|(0.8704399177097388)) COLLATE RTRIM) LIMIT 774565427; -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN '<I' ELSE rt0.c2 END) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END) AND (((rt0.c1) NOTNULL))) FROM rt0;SELECT DISTINCT CASE MIN(t0.c0)  WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0)GLOB(t0.c0)) ELSE AVG(rt0.c0) END FROM rt0, t0, vt0 WHERE ((~ (((x'')+(0.33550281479282695))))); -- 1ms;
SELECT DISTINCT COUNT(CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END), CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0)) THEN x'' ELSE 1.705092527E9 END, GROUP_CONCAT(1.865270718E9) OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE GROUP), ((CASE WHEN rt0.c2 THEN t0.c0 END) NOT BETWEEN (NULL) AND (GROUP_CONCAT(rt0.c3))), TRIM(rt0.c2) COLLATE RTRIM FROM rt0, t0;SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) IS FALSE) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT LAG((- (vt0.c0)), LIKE(rt0.c2 COLLATE NOCASE, ((rt0.c1) IS FALSE), '-'), (((~ (rt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) AND (rt0.c0))) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL COUNT(rt0.c3) FROM vt0 WHERE (((((485965552, 1828462119, '-1187489335'))==(('633542504', '', x''))) IN (CAST(x'' AS NUMERIC), x'' COLLATE RTRIM)));SELECT DISTINCT AVG(((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM t0;SELECT DISTINCT (((((rt0.c2) BETWEEN (rt0.c3) AND ('1387614987'))))==((rt0.c2))) FROM vt0 WHERE (CAST(CASE WHEN NULL THEN '' ELSE x'b982' END AS TEXT));SELECT ALL COUNT(((((rt0.c3)OR(t0.c0)))OR(rt0.c1))) FROM vt0, rt0;SELECT ALL CASE json_remove(rt0.c3, rt0.c2)  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c3)%(rt0.c3)) ELSE SUM(t0.c0) END FROM vt0, rt0, t0; -- 0ms;
SELECT ALL (~ (rt0.c2)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)<>(rt0.c0))) OVER ( ORDER BY (((rt0.c1)) NOT BETWEEN (((t0.c0 IN ()))) AND (((((rt0.c2, x'', rt0.c0))==((rt0.c0, rt0.c1, rt0.c0)))))) DESC RANGE CAST(NULL AS INTEGER) COLLATE BINARY PRECEDING) FROM rt0, vt0;SELECT ((vt0.c0 COLLATE RTRIM) IS FALSE) FROM rt0, t0, vt0 WHERE (TYPEOF(DISTINCT (x'' IN ()))) LIMIT 633542504; -- 0ms;
SELECT DISTINCT (((rt0.c3 IN ())) BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (CAST(rt0.c1 AS BLOB))), ((CAST(vt0.c0 AS INTEGER))*(t0.c0)), ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END) ISNULL) FROM rt0, t0;SELECT ((0Xffffffff92195523) NOT BETWEEN ((t0.c0 IN ())) AND ((rt0.c2 IN ()))), ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND('0.21275781180153597')))AND(rt0.c2)) COLLATE RTRIM, CASE WHEN ((t0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) THEN COUNT(*) END FROM vt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)))) AND (((~ (NULL))))) LIMIT 277487278;SELECT DISTINCT (+ (((NULL)/(rt0.c0)))) FROM t0, vt0, rt0 WHERE ((((((((((0.441603177718613 IN ()))AND(((NULL) BETWEEN ('') AND (NULL)))))OR((((((((('-1144058803')OR('-1166456318')))OR(0.11927339940238812)))AND(NULL)))AND(0X678aa405)))))OR(json_array_length(-1.147468104E9))))OR(((((x'')AND('N䇴')))OR(0.6338217924727186))))); -- 0ms;
SELECT ALL NTH_VALUE(((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0))) BETWEEN ((NOT (rt0.c2))) AND ((NOT (rt0.c3)))), CASE WHEN ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)) THEN ((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)))AND('-490905713')))AND(vt0.c0)) WHEN ((rt0.c0)||(rt0.c0)) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN NULL COLLATE RTRIM THEN (rt0.c1 IN ()) END) OVER ( PARTITION BY (((CAST(rt0.c1 AS BLOB)))<(('Qkam)'))), ((((((rt0.c0)>=(rt0.c1)))OR(((t0.c0)*(t0.c0)))))AND((rt0.c3 IN (vt0.c0, '?y'))))) FROM rt0, vt0;SELECT ALL (((vt0.c0 COLLATE BINARY))<((TIME(rt0.c1, rt0.c0, t0.c0)))), MAX((rt0.c3 IN ())), (- (json_array(t0.c0, rt0.c3))), DATE(((rt0.c0)>>(rt0.c0)), (+ (t0.c0)), ((rt0.c3) BETWEEN (vt0.c0) AND (t0.c0))), (NULL IN ()) FROM rt0 WHERE (TYPEOF(DISTINCT ((0x6ce5b822) BETWEEN (0.7109554544016777) AND ('957063396')))) ORDER BY t0.c0 DESC  NULLS FIRST;SELECT ((((rt0.c0)OR(rt0.c3))) IS FALSE) FROM vt0 WHERE (((0xfffffffffc7a0d1e)GLOB(CASE WHEN NULL THEN x'' END)));SELECT CASE WHEN (rt0.c1 IN ()) THEN CASE WHEN x'' THEN rt0.c0 END END FROM t0, vt0 WHERE (((CAST('A' AS INTEGER)) IS FALSE));SELECT AVG(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) OVER (), '1560077636', ((x'505e')==(((t0.c0)>=(rt0.c0)))) FROM vt0, rt0 WHERE (CAST(-1359849621 COLLATE NOCASE AS REAL));SELECT DISTINCT (((~ (rt0.c0))) NOTNULL), CAST(rt0.c3 COLLATE RTRIM AS REAL), ((((((rt0.c1) ISNULL))OR((- (t0.c0)))))OR(((t0.c0)<(rt0.c0)))), ((MAX(rt0.c3))>(NULLIF(rt0.c3, rt0.c1))), NTH_VALUE((~ (x'')), vt0.c0) OVER () FROM rt0, vt0, t0;SELECT DISTINCT ((((((t0.c0)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST('20667077' AS NUMERIC))) FROM rt0 CROSS JOIN t0 ON (NOT ('')) INNER JOIN vt0 ON TRIM(CAST(rt0.c3 AS TEXT), ((rt0.c2)>=(rt0.c3))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOTNULL) FROM rt0 WHERE (CASE ((')') NOTNULL)  WHEN ((('-1992698689')) NOT BETWEEN (('')) AND ((NULL))) THEN ((NULL)<<(1.338902295E9)) ELSE '1840117587' END) ORDER BY LIKE(rt0.c1 COLLATE NOCASE, UPPER(rt0.c0), '㷛') ASC, (((((vt0.c0)OR(rt0.c3)))OR(vt0.c0)) IN (((rt0.c3)>=(rt0.c0)))) DESC  NULLS FIRST;SELECT DISTINCT ((((CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END)OR(CAST(t0.c0 AS INTEGER))))AND((- (NULL)))) FROM rt0 WHERE ((((NOT (0.5516410300571926))) NOTNULL));SELECT ALL CAST(((NULL)<<(rt0.c2)) AS BLOB), x'', rt0.c2 COLLATE NOCASE FROM t0;SELECT DISTINCT ((((NULL)AND((((rt0.c2))!=((vt0.c0))))))OR(((t0.c0)<>(vt0.c0)))) FROM t0, rt0, vt0; -- 1ms;
SELECT DISTINCT ((((+ (rt0.c2)), ((((NULL)AND(rt0.c1)))OR(rt0.c3)), (((rt0.c3, t0.c0, rt0.c3))<((0.024323981050411336, t0.c0, 0X3eae90ab)))))!=((MIN(rt0.c3), (((rt0.c3)) NOT BETWEEN (('.(')) AND ((rt0.c3))), vt0.c0 COLLATE BINARY))), GROUP_CONCAT(((((vt0.c0)AND(rt0.c1)))OR(vt0.c0))), LAG((- ((NOT (vt0.c0)))), TYPEOF(((rt0.c1) IS TRUE)), ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))>((((-2066900660)<<(rt0.c1)))))) OVER ( PARTITION BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) BETWEEN ('	ꗚL㩌1LzsN') AND (((rt0.c0)-(rt0.c0)))), (- (((t0.c0) BETWEEN (-1381477255) AND (t0.c0))))) FROM vt0, rt0;SELECT ALL '-2124439195', CASE WHEN (t0.c0 IN (rt0.c0)) THEN vt0.c0 END, CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) AS BLOB), CAST(rt0.c3 COLLATE RTRIM AS NUMERIC), COUNT(x'') FROM t0;SELECT DISTINCT ((((((t0.c0)GLOB(rt0.c3)))AND(((((rt0.c0)AND(t0.c0)))AND(rt0.c2)))))OR(vt0.c0)) FROM rt0 WHERE (((((0.14880620788311338)==('>3(cs>'))) IS TRUE));SELECT DISTINCT json_quote(rt0.c2), ((NULL) IS TRUE), (COUNT(*) IN (0.37354718566833456)) FROM vt0;SELECT DISTINCT CASE WHEN rt0.c3 THEN 0.8962295809326223 WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END THEN ((rt0.c3) IS TRUE) WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) THEN vt0.c0 END FROM t0 WHERE (0.10139610878953131);SELECT DISTINCT (('-935872592')=(t0.c0)) FROM vt0, t0 WHERE (((((NULL) IS FALSE)) IS FALSE)) LIMIT 533538507 OFFSET -1992698689; -- 0ms;
SELECT ((((rt0.c1)<<(rt0.c1))) BETWEEN ((+ (t0.c0))) AND ((- (rt0.c2)))), (((((rt0.c2))<=((vt0.c0)))) BETWEEN (NULLIF(t0.c0, vt0.c0)) AND (((rt0.c1) ISNULL))), CAST(rt0.c3 AS TEXT) COLLATE NOCASE COLLATE BINARY FROM rt0, vt0 WHERE (CAST(((381562421) NOTNULL) AS NUMERIC));SELECT ALL ROW_NUMBER() OVER () FROM rt0, vt0, t0 WHERE (((((('')OR('EnW')))AND(NULL)) IN ())); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, vt0, t0 WHERE (((((NULL) ISNULL)) NOTNULL)) LIMIT -2026975961; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT CAST(rt0.c1 AS TEXT)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE, CAST(TYPEOF(rt0.c3) AS BLOB) FROM t0 WHERE ((((((('444391701')AND(0Xffffffff8bbae938)))AND(0.3931918266411619))) NOT BETWEEN ((((x''))>((0.9406168561914507)))) AND ('-1082787844')));SELECT ALL CAST(((rt0.c3)AND(rt0.c1)) AS BLOB) FROM vt0, t0, rt0 WHERE (((CAST(610754804 AS BLOB)) ISNULL)) GROUP BY rt0.c1, (((vt0.c0)IS(vt0.c0)) IN ()), CASE WHEN ((rt0.c3)<=(t0.c0)) THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)) ELSE CAST(rt0.c1 AS INTEGER) END LIMIT 364266669; -- 0ms;
SELECT ALL ((((((((0.3422874623349961)OR(((((NULL)OR(rt0.c0)))OR(rt0.c3)))))AND(load_extension(rt0.c2, rt0.c1))))AND(((rt0.c1)*(t0.c0)))))OR(AVG(rt0.c3))) FROM vt0 CROSS JOIN t0 ON ((CAST(rt0.c2 AS INTEGER)) NOT NULL) RIGHT OUTER JOIN rt0 ON (((CAST(rt0.c2 AS BLOB)))<(((vt0.c0 IN ()))));SELECT DISTINCT LIKE(((rt0.c1) NOT NULL), CAST(rt0.c1 AS NUMERIC), 'W') FROM rt0 WHERE (((CAST('Raz1A*T' AS REAL))OR(CASE WHEN 0.23763168342479735 THEN x'' WHEN x'98ad' THEN '1418166363' WHEN '' THEN '363334499' ELSE 'x#' END))); -- 0ms;
SELECT DISTINCT json_array_length((- ('')), (rt0.c3 IN ())) FROM t0 WHERE ((((0.2429096505542584)) BETWEEN (('')) AND ((-1634925854))) COLLATE NOCASE); -- 0ms;
SELECT COUNT(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0, rt0 WHERE (((((((((((0.8425596668809714)<<('\nD')))AND('' COLLATE NOCASE)))AND((('1800144183') BETWEEN ('') AND ('eetA\r	')))))OR(((-1098817873) NOT BETWEEN (NULL) AND ('&Cww줺W')))))AND(x'dcf506e3' COLLATE RTRIM))); -- 1ms;
SELECT ALL rt0.c3 FROM vt0;SELECT DISTINCT ((((rt0.c2) IS TRUE))LIKE((+ (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((t0.c0) IS TRUE))), ((('-868542757' IN (vt0.c0, vt0.c0, rt0.c1)))AND(0.8962295809326223)), TOTAL(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0))), (- (0.6145871029824931 COLLATE RTRIM)), CASE CAST(rt0.c1 AS TEXT)  WHEN ((((((((rt0.c0)OR(rt0.c1)))AND(t0.c0)))OR(NULL)))AND(vt0.c0)) THEN 0.8204020334626764 WHEN rt0.c3 THEN SUM(rt0.c0) WHEN (((rt0.c0)) BETWEEN ((NULL)) AND ((rt0.c1))) THEN (rt0.c0 IN ()) END FROM t0 WHERE ('') ORDER BY CASE WHEN ((rt0.c3)=(rt0.c0)) THEN ((vt0.c0)AND(rt0.c1)) ELSE 0.8435415002130834 END  NULLS FIRST, ((((('m{' IN ()))AND((NOT (rt0.c3)))))AND(1099994204 COLLATE NOCASE));SELECT ALL ((((((((rt0.c2 COLLATE BINARY)AND('')))OR(vt0.c0)))OR(((rt0.c2)AND(rt0.c3)))))OR((((0.8407753695085308, t0.c0, 0.22563651908613191))>=((rt0.c1, rt0.c0, vt0.c0))))) FROM vt0 WHERE ((((((NULL))<=((0.7587173301403106))))<=(((('-', 0.8912526755315783, NULL)) NOT BETWEEN ((717793136, -1551727513, '368861712')) AND ((NULL, 0.3589517486520758, 1871771207))))));SELECT (~ (CASE t0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c2 END)) FROM rt0, vt0 INDEXED BY i8, t0;SELECT DISTINCT AVG(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3) IS TRUE) COLLATE NOCASE, LEAD(((((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)))||(x'd588')), ((((0.3666419002406933)%(vt0.c0))) IS TRUE), ((((-9.46050303E8) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE)) OVER (), ((((GROUP_CONCAT(rt0.c1))OR(((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))))AND(HEX(x'0d09'))) FROM vt0, rt0; -- 0ms;
SELECT (CAST(rt0.c0 AS BLOB) IN (CASE WHEN rt0.c2 THEN rt0.c2 END, rt0.c1)) FROM rt0 WHERE (TRIM((((((((('If~^i/P')AND('1692067160')))AND('仮A]䒻t0|A')))AND('0.5827768454402961')))OR('?P')))); -- 0ms;
SELECT AVG(((rt0.c3) BETWEEN (NULL) AND (rt0.c0))) FROM rt0, vt0 LEFT OUTER JOIN t0 ON ((-128387322)>=(json_extract(rt0.c1, rt0.c2))) WHERE (0.6876123699483822);SELECT ((vt0.c0 COLLATE NOCASE)=(t0.c0)) FROM rt0 WHERE ((((((NULL, 1521238179, '1761280908'))==(('418753712', 0.7700579111175176, x''))))>=(((((((((-874894931)AND(NULL)))AND(x'')))OR('1319857586')))AND(NULL)))));SELECT (AVG(rt0.c2) IN ()), CAST(((t0.c0) NOTNULL) AS TEXT), (+ (((((rt0.c3)AND(vt0.c0)))AND(rt0.c3)))) FROM vt0, rt0, t0 WHERE ((('-230598784') BETWEEN (((x'') NOTNULL)) AND (((NULL)-('-839689066'))))); -- 0ms;
SELECT ALL vt0.c0 FROM rt0, t0 ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END  WHEN ((rt0.c3)||(rt0.c0)) THEN ((t0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) END ASC  NULLS LAST, ((((rt0.c2)IS(t0.c0)))IS(((rt0.c0)/(rt0.c2))))  NULLS LAST, ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 END)<>((+ (rt0.c2))));SELECT COALESCE(DISTINCT (- (rt0.c2)), 0.03316245231212289) FROM vt0 INDEXED BY i49, t0;SELECT DISTINCT TOTAL(SQLITE_COMPILEOPTION_GET(x'')), ((t0.c0)||(((vt0.c0)&(t0.c0)))), LAST_VALUE((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c3 END IN ())) OVER ( ROWS  UNBOUNDED PRECEDING) FROM t0, rt0 WHERE (((((((-1381477255)AND('267061129')))OR(')3Q v[b')))OR(((x'') IS TRUE)))) LIMIT -1918678153 OFFSET 1811108663;SELECT DISTINCT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END)>(((rt0.c0)/(rt0.c0)))) FROM t0 WHERE (((((NULL)||(0.6853099528523268))) BETWEEN (CAST(x'' AS INTEGER)) AND (x'15f2')));SELECT LAG(((((((vt0.c0) BETWEEN (rt0.c2) AND (t0.c0)))AND(((rt0.c0)/(rt0.c3)))))OR(((((t0.c0)AND(rt0.c1)))AND(t0.c0)))), ((((vt0.c0)|(t0.c0)))GLOB(((((vt0.c0)OR(NULL)))AND(rt0.c3)))), (rt0.c2 IN ())) OVER () FROM t0, rt0, vt0 LIMIT -1211691870 OFFSET -2126779676; -- 0ms;
SELECT DATETIME(TOTAL(rt0.c3), 0.4188645676869801, rt0.c1, ((t0.c0) ISNULL), ((((rt0.c3)OR(rt0.c3)))AND(rt0.c2))) FROM rt0, vt0 NOT INDEXED WHERE (-2005527442) ORDER BY ((rt0.c1)<>(rt0.c3)) ASC LIMIT -754930943;SELECT DISTINCT CASE rt0.c2 COLLATE BINARY  WHEN rt0.c1 THEN CASE rt0.c3  WHEN t0.c0 THEN 'admf' WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 ELSE t0.c0 END ELSE TRIM(DISTINCT t0.c0, rt0.c3) END FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT ((((((((UNLIKELY(DISTINCT rt0.c2))AND(rt0.c2)))OR(COUNT(rt0.c2))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0) ISNULL))), ('269339220' IN ()), vt0.c0, (((((rt0.c1))<=((rt0.c1)))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (0X6f5b4203) AND (vt0.c0))) AND (((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)))), LOWER(rt0.c3) COLLATE NOCASE, (((- (rt0.c3))) ISNULL), ((((NULL)OR(CAST(rt0.c1 AS BLOB))))OR((~ (rt0.c3)))) FROM rt0, vt0 WHERE (((((('1794833106') BETWEEN (0.37912899285755663) AND (x''))))<((((((0xffffffffc29d6c81)OR('743793596')))OR(-770314256)))))) GROUP BY x'8aae' HAVING ((((((rt0.c1)AND(t0.c0)))OR(rt0.c2)))<<((~ (rt0.c1))));SELECT DISTINCT CAST((NOT (NULL)) AS TEXT) FROM vt0, t0 WHERE ((NOT (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT COUNT((((rt0.c2))<((x'')))), GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt0.c2) AND ('sHta*z,O'))) FILTER(WHERE ((((((((CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c1 END)AND(0.8695414586328664)))OR(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((vt0.c0)>>(rt0.c1)))))OR((((rt0.c0))<((t0.c0)))))) OVER (), QUOTE(LOWER(DISTINCT vt0.c0)) FROM t0, vt0 WHERE (CAST(UNLIKELY(DISTINCT '-185349830') AS BLOB)) GROUP BY (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND(t0.c0)))AND(t0.c0)) IN ()) HAVING ((CHAR(rt0.c3))<<(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))));SELECT DISTINCT COUNT((- (rt0.c1))) OVER (), (- (vt0.c0)), rt0.c1 FROM t0;SELECT CASE WHEN vt0.c0 THEN t0.c0 WHEN ((((rt0.c3)AND(vt0.c0)))OR(vt0.c0)) THEN ((rt0.c3) IS FALSE) WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN rt0.c0 COLLATE BINARY END FROM rt0, t0, vt0 WHERE (((('' IN ()))==(CASE WHEN '1930507396' THEN 0.04977521219905179 WHEN ',T' THEN x'' WHEN '-1812947069' THEN 'mf6a' END))); -- 0ms;
SELECT CAST((t0.c0 IN (rt0.c2)) AS INTEGER) FROM rt0 WHERE (((((x'')<<(NULL))) BETWEEN ((~ (0.1494331648037347))) AND (x'6f69' COLLATE NOCASE)));SELECT DISTINCT (NOT (rt0.c3 COLLATE BINARY)) FROM t0, vt0 WHERE ((NOT (CAST(x'8be9' AS BLOB))));SELECT ALL (((MAX(t0.c0)))=((LOWER(DISTINCT rt0.c1)))) FROM t0, vt0 WHERE (((x'0f8c') BETWEEN ('-2101038981') AND (-1899487506)) COLLATE NOCASE COLLATE NOCASE);SELECT COUNT(((x'')LIKE(rt0.c2))) FILTER(WHERE (CAST(t0.c0 AS INTEGER) IN ((rt0.c2 IN ('rkﾨuft'))))) OVER (), CAST(((rt0.c3) NOT NULL) AS INTEGER), TOTAL(((rt0.c0) ISNULL)) OVER () FROM t0, rt0 WHERE (CAST(IFNULL(DISTINCT NULL, NULL) AS INTEGER)) ORDER BY (+ (rt0.c0)) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT (((((vt0.c0)AND(rt0.c3)))OR(rt0.c2)) IN (rt0.c0 COLLATE BINARY, ((((((((rt0.c2)AND(rt0.c2)))OR(t0.c0)))OR(t0.c0)))AND(rt0.c2)))) FROM rt0 WHERE ((((((-5.9110114E7, 'L,dh3n(8K', '170311636')) BETWEEN ((NULL, '', 0xc0e74b4)) AND (('-1995697747', x'', '%]V6')))) NOTNULL)) ORDER BY (('Af[YNA*')==(CAST(rt0.c3 AS REAL)))  NULLS LAST;SELECT ((((rt0.c3)OR(rt0.c1))) BETWEEN (((t0.c0)OR(rt0.c1))) AND (x'')) FROM rt0, t0, vt0 WHERE (CAST(CAST(NULL AS BLOB) AS REAL)); -- 0ms;
SELECT ALL ((TRIM(DISTINCT 0.6902014546371027, t0.c0)) ISNULL) FROM t0, rt0 LIMIT 1865270718 OFFSET 1450474288; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (rt0.c0 IN (((vt0.c0) NOTNULL)))) OVER (), AVG(((rt0.c2)>(rt0.c2))) COLLATE BINARY, (((x'') BETWEEN (x'bb19') AND (vt0.c0)) IN ()) FROM t0, vt0, rt0 WHERE (((((NULL)+(x''))) NOTNULL)); -- 0ms;
SELECT ALL SUM((- (rt0.c1))) COLLATE NOCASE, ((((rt0.c3)AND(rt0.c3)))+(0.7911887672026638)), (+ (((0.788394746412378) IS FALSE))) FROM rt0 WHERE ((((x'' IN ())) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS NUMERIC), (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY, (- (2.051407784E9)) FROM vt0;SELECT DISTINCT (CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END IN ()) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT 0.37940265055568123 FROM t0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR('n\zq'))) ISNULL)  NULLS FIRST, (+ (((vt0.c0)GLOB(t0.c0))));SELECT (((((rt0.c3))<=((rt0.c1)))) IS FALSE) FROM t0, rt0, vt0 WHERE (0.583306182000768) GROUP BY (CAST('-575652281' AS BLOB) IN ()) HAVING LIKELIHOOD((((((((('-596556512')OR(t0.c0)))OR(rt0.c3)))AND('1262960515')))AND(rt0.c3)), 0.926312373233119); -- 1ms;
SELECT DISTINCT CAST(t0.c0 AS BLOB), ((MAX(rt0.c0, rt0.c2))IS(((t0.c0) IS FALSE))), COUNT(NULL) OVER () FROM rt0, vt0;SELECT DISTINCT (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c3)))) NOT NULL) FROM rt0, t0 WHERE ((CASE WHEN 0.5846447129471836 THEN NULL WHEN '0.8374890495656173' THEN -1.292197092E9 WHEN '-264260385' THEN 0.2639350387748841 END IN ()));SELECT ALL FIRST_VALUE(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.31911152628051065)) COLLATE NOCASE) OVER () FROM vt0 WHERE ((((('3훲d䠓') NOT BETWEEN (0Xb9e2d69) AND (NULL))) NOT BETWEEN ((NOT (NULL))) AND ((+ (NULL))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((rt0.c0)-(CASE vt0.c0  WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE t0.c0 END)) FROM vt0, t0 LIMIT -1849998262;SELECT DISTINCT MAX(CASE rt0.c3  WHEN '0.0' THEN rt0.c2 ELSE vt0.c0 END) COLLATE RTRIM FROM rt0 ORDER BY CASE ((t0.c0) IS FALSE)  WHEN json_array_length(rt0.c2, rt0.c0) THEN rt0.c2 END  NULLS FIRST, (('-2101038981')AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END));SELECT (+ (((x'')OR(rt0.c2)))) FROM rt0 CROSS JOIN vt0 ON (+ (((0.8788855460777796)>=(t0.c0)))) WHERE ((LIKELIHOOD(0.7446592874237685, 0.2827274185944021) IN (((0.5407967651413281) NOT BETWEEN ('-1378340995') AND ('-790370027')), (((('')AND(x'')))OR(-203422086))))) LIMIT 1428118431 OFFSET -1334033542;SELECT DISTINCT (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))<=(rt0.c3 COLLATE BINARY)) FROM vt0 WHERE ((('	eMw8') NOTNULL)) ORDER BY ((((rt0.c0)||(vt0.c0))) NOT BETWEEN (NULL) AND (((('')) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))), ((((((rt0.c3)OR(t0.c0)))AND(vt0.c0)))/((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ASC;SELECT COUNT(*), CASE (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))  WHEN TIME(rt0.c1, t0.c0, vt0.c0) THEN NULL COLLATE RTRIM ELSE ((rt0.c2)IS NOT(rt0.c2)) END, (NOT ((~ (vt0.c0)))) FROM rt0;SELECT ((CASE ''  WHEN rt0.c3 THEN '-1812947069' WHEN rt0.c1 THEN t0.c0 WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (MIN(rt0.c1))) FROM t0 WHERE (((((((((((((((x'6b10') IS FALSE))OR(ROUND(x'', x''))))OR(JULIANDAY(0.8167931184577781, NULL, x'', 0.41778204215049886, 1925729813, 557593826, '815870364'))))OR(((x'6a3e') IS TRUE))))AND(((((x'')OR(x'')))AND(x'fe7a')))))OR((('1869685406') ISNULL))))AND(NULL))) ORDER BY (- (((x'ef87')>>(t0.c0))))  NULLS LAST;SELECT ALL ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))||(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) FROM t0;SELECT (rt0.c0 COLLATE NOCASE IN ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))), LEAD((((((((((- (rt0.c0)))OR(((NULL) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(CAST(rt0.c3 AS TEXT))))AND(rt0.c3 COLLATE RTRIM)))OR((('') BETWEEN (rt0.c3) AND (rt0.c1)))), ((CASE WHEN rt0.c2 THEN '-2051144628' WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN ((NOT (vt0.c0))) AND (0.8973581491375928)), (~ (1108563739)) COLLATE NOCASE) OVER (), '-985330610' FROM t0, vt0, rt0 WHERE (((('1338902295')) NOT BETWEEN (('D3#口''.I|>')) AND ((''))) COLLATE RTRIM) ORDER BY rt0.c2 ASC  NULLS FIRST; -- 3ms;
SELECT ALL AVG(rt0.c0) FROM rt0, t0, vt0; -- 0ms;
SELECT ALL rt0.c0, (~ (((rt0.c2)/(0.15468562359064342)))), NULLIF(json_valid(vt0.c0), 0.7869719909591122) FROM rt0 WHERE (((('-128387322')) BETWEEN (((((((((((((('')AND(NULL)))AND(x'')))OR(0.8323487996522222)))OR(0.9876075267073191)))OR('-922331781')))AND(NULL)))) AND ((0.7346964501248364 COLLATE NOCASE))));SELECT ALL NULL FROM vt0 GROUP BY ((rt0.c0)<>(vt0.c0)) COLLATE NOCASE HAVING (((((((((((vt0.c0))>=((t0.c0))))AND(((t0.c0)*(rt0.c2)))))AND(((rt0.c0) IS FALSE))))AND((rt0.c2 IN ()))))OR(NULL));SELECT ALL MAX(rt0.c2) COLLATE RTRIM FROM rt0 WHERE ((((('-1026412254' IN ())))<=((((-596556512)<>(x'')))))); -- 0ms;
SELECT ((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))*((rt0.c2 IN (NULL)))), CASE WHEN rt0.c2 COLLATE BINARY THEN '-1e500' COLLATE BINARY ELSE ((t0.c0)<=(vt0.c0)) END, CASE WHEN ((((t0.c0)AND(rt0.c0)))AND(NULL)) THEN rt0.c0 END FROM vt0, t0 NOT INDEXED, rt0 WHERE ((((NULL, 0.8033524435095868, 0.3962886536001048, '*!⒲Jｲ^G,', NULL)) BETWEEN ((((x'') BETWEEN (x'') AND (NULL)), (((x'')) NOT BETWEEN ((0.8623645327488794)) AND ((0.6530811411136705))), ((-1004119214)||(x'')), x'' COLLATE NOCASE, CAST('427722607' AS INTEGER))) AND (((~ (x'')), NULL COLLATE BINARY, x'' COLLATE BINARY, (+ (0.760520010288618)), (('') NOT BETWEEN ('Qkam)') AND (2.050772751E9)))))); -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c3 AS INTEGER))OR(MIN(t0.c0))))OR(HEX(DISTINCT rt0.c2))), ((COUNT(*))<(load_extension(rt0.c1, rt0.c0))), vt0.c0 FROM vt0;SELECT DISTINCT LIKELY(((rt0.c1)>(rt0.c1))) FROM t0, rt0 LIMIT -575652281 OFFSET 669255828 EXCEPT SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE (((((((((((((((0Xffffffff9b9bf714) IS FALSE))AND('' COLLATE NOCASE)))AND(((-771740195)=(NULL)))))AND((((0.9026479395015564))!=((x''))))))AND(((('743793596'))=((x''))))))AND(((0X2ac8a770) NOT BETWEEN ('-2101038981') AND (0.2997894580458147)))))AND(RTRIM(-1.187489335E9))));SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))>=(CAST(rt0.c3 AS REAL))), ((((((((vt0.c0)OR(rt0.c0)))AND(t0.c0)))AND(x'')))AND(rt0.c1)) COLLATE BINARY, (((rt0.c0)!=(rt0.c0)) IN ()) FROM rt0, t0, vt0; -- 1ms;
SELECT DISTINCT (NOT (((((rt0.c1)OR(rt0.c3)))OR(vt0.c0)))), CASE WHEN vt0.c0 THEN rt0.c1 END COLLATE BINARY, CAST(rt0.c3 AS BLOB) FROM rt0, vt0, t0; -- 0ms;
SELECT ALL CAST(AVG(rt0.c2) AS INTEGER), rt0.c1, rt0.c0, NTILE(((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c3)/(rt0.c3)))))OR(((rt0.c0)*(rt0.c1))))) OVER (), AVG(rt0.c0 COLLATE BINARY COLLATE RTRIM), vt0.c0, rt0.c1 FROM rt0 WHERE ((x'' IN ()) COLLATE RTRIM);SELECT ALL (((rt0.c0)) NOT BETWEEN ((x'')) AND ((AVG(rt0.c1)))) FROM rt0, vt0 WHERE ((((((((0.23108245904825075)AND(0Xffffffffa8f8f64e)))OR(NULL))))<>((CASE -5.2793516E7  WHEN 0.8890152912331825 THEN 4.18753712E8 WHEN 0.9684115380535119 THEN '9?' WHEN '' THEN 0.850772381347198 END)))) ORDER BY ((((((((((((rt0.c0)OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND((- (rt0.c2)))))OR(vt0.c0 COLLATE BINARY)))OR((t0.c0 IN ()))))AND(((rt0.c1) BETWEEN (0.840053077713033) AND (rt0.c1)))))AND(rt0.c2)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))=(rt0.c3 COLLATE BINARY)), ((((rt0.c3)-(vt0.c0)))<>((~ (rt0.c1)))), ((((CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN '0.6536732449019592' THEN rt0.c0 END)AND(((t0.c0) ISNULL))))AND(t0.c0 COLLATE BINARY)) FROM rt0;SELECT DISTINCT ((((t0.c0)GLOB(t0.c0)))==(AVG(rt0.c3))), ((((vt0.c0)AND(DATE(rt0.c0, rt0.c1, t0.c0))))OR(((rt0.c3)+(t0.c0)))), t0.c0, rt0.c3, '0.8374890495656173' FROM vt0 WHERE ((((('' COLLATE NOCASE)AND(((((0.8189937884847134)AND('jt긑춶UOl7')))AND(x'')))))OR(CAST(NULL AS NUMERIC)))) GROUP BY (+ (((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c3)))OR(NULL)))OR(t0.c0)))) LIMIT 1449921702 OFFSET -658357916;SELECT DISTINCT LTRIM((t0.c0 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1))) FROM vt0, rt0, t0 WHERE (CASE WHEN (x'' IN ()) THEN COALESCE(NULL, 'kO') END); -- 0ms;
SELECT DISTINCT '-1992698689', ((TOTAL_CHANGES())>(CASE WHEN t0.c0 THEN t0.c0 ELSE '-2059707135' END)), ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(0x6c532d11))) BETWEEN (((t0.c0)<<(rt0.c0))) AND ((NOT (vt0.c0)))) FROM vt0, rt0, t0; -- 0ms;
SELECT CASE ((rt0.c2) NOTNULL)  WHEN (((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2, t0.c0)) AND ((t0.c0, rt0.c2, rt0.c0))) THEN rt0.c2 COLLATE NOCASE ELSE ((x'')==(x'')) END, (- (CAST(t0.c0 AS INTEGER))), ((((COUNT(*))OR(vt0.c0)))AND((t0.c0 IN ()))), (('1987750258') NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))OR(0xba2ed17))) AND ((+ (t0.c0)))), (((SUM(rt0.c2)))=((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0))))) FROM rt0, vt0, t0 WHERE ((~ (('-1021216456' IN (0.7250633031840609))))); -- 0ms;
SELECT (('0.9921953242564747')IS(((vt0.c0)<=(rt0.c0)))), TRIM(UNLIKELY(DISTINCT rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))), ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))<=(vt0.c0 COLLATE RTRIM)) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((x'' COLLATE BINARY)<(0.0721336686998496)), ((((rt0.c0)GLOB(rt0.c3))) NOT BETWEEN (((rt0.c2)|(t0.c0))) AND (((rt0.c0)<(vt0.c0)))), '1426249807' FROM t0, vt0;SELECT CASE WHEN ((rt0.c2)|(vt0.c0)) THEN CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN x'08e61f13' THEN rt0.c2 ELSE rt0.c2 END END FROM vt0, rt0 WHERE ((((((('-1615321526')OR(0.1088885694868239)))OR(NULL)))<<(0.43327248288361775 COLLATE RTRIM)));SELECT DISTINCT ((CAST('' AS NUMERIC)) IS FALSE) FROM t0, vt0, rt0 WHERE ((((('1254562029') ISNULL))=(((x'')OR(')0(O'))))) ORDER BY CASE WHEN ((((t0.c0)AND(rt0.c0)))AND(vt0.c0)) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((rt0.c2)%(t0.c0)) THEN (((rt0.c2)) BETWEEN ((x'415f1e3e')) AND ((t0.c0))) WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c0)) THEN rt0.c3 COLLATE NOCASE ELSE CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END END DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS TEXT))GLOB(CASE rt0.c0  WHEN 0x562718a3 THEN t0.c0 END)) FROM vt0, t0 WHERE (((((1915493792) NOT BETWEEN (x'a7c9') AND (0.8528159968377077))) NOT BETWEEN (CAST(NULL AS REAL)) AND (JULIANDAY('1993920493', x'', NULL, '0.1647575653908493', x''))));SELECT ALL ((rt0.c1)LIKE(rt0.c0)) COLLATE NOCASE FROM t0, vt0, rt0 WHERE (((((((1023140243)<>(x'ffce')))AND((x'' IN ('')))))AND(TYPEOF('1502243015')))); -- 0ms;
SELECT ALL AVG(((((rt0.c1)AND(rt0.c0)))OR(vt0.c0))) FROM rt0 WHERE ((0.20512482527272324 IN ()) COLLATE RTRIM);SELECT DISTINCT t0.c0 FROM rt0, vt0;SELECT DISTINCT ((CASE x''  WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END) IS FALSE), ((((vt0.c0)OR(rt0.c0)))*((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), 1761280908 FROM rt0, t0, vt0 GROUP BY (((vt0.c0)) BETWEEN (((('%풿IXp') BETWEEN (t0.c0) AND (rt0.c0)))) AND ((t0.c0 COLLATE BINARY))) LIMIT -1185119605; -- 1ms;
SELECT DISTINCT (rt0.c0 COLLATE BINARY IN (IFNULL(rt0.c2, rt0.c0), ((rt0.c2)%(rt0.c0)), (rt0.c1 IN (rt0.c0)))) FROM vt0 WHERE (CASE CAST(1116932377 AS BLOB)  WHEN (('') IS FALSE) THEN ((x'')+(NULL)) WHEN CAST(x'ed72' AS NUMERIC) THEN (((('-1705679326')OR(x'6bb9')))OR(x'')) WHEN (((0.34795498642785483))>=(('\nRx0)O#+垀'))) THEN ((0Xffffffffd8fda662)/(0.796708031530458)) END) GROUP BY ((((HEX(DISTINCT rt0.c2))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND ('')))))AND(UNLIKELY(rt0.c3))), rt0.c0, CAST(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END AS NUMERIC);SELECT DISTINCT (((x'ebcd' IN ())) NOT NULL), ((COUNT(*))OR((vt0.c0 IN ()))), CAST(((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)) AS INTEGER) FROM t0, vt0 WHERE (((~ ('1352862270')) IN (json_array_length(NULL), ((('27208958')) BETWEEN ((NULL)) AND ((0.6207938054037476))))));SELECT ALL NULLIF(((((-1154749180)OR(rt0.c3)))AND(rt0.c3)), ((rt0.c3)LIKE(rt0.c2))) FROM t0, rt0 WHERE (CASE WHEN (('-456559321')IS(0X6024218d)) THEN CAST('-1187489335' AS REAL) ELSE ((x'') IS FALSE) END); -- 0ms;
SELECT DISTINCT ((((t0.c0)IS NOT('W7')))*(CAST(rt0.c0 AS TEXT))), ((((t0.c0) NOTNULL)) NOT NULL), LAST_VALUE(((((vt0.c0)OR(rt0.c1)))||(CASE rt0.c1  WHEN t0.c0 THEN NULL ELSE NULL END))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), ((((((rt0.c3)AND(t0.c0)))AND(rt0.c3)))<((NOT (rt0.c2)))), ((rt0.c1)<(vt0.c0)) COLLATE NOCASE FROM t0 CROSS JOIN rt0 ON (((((t0.c0))=((rt0.c0))))!=(rt0.c3)) RIGHT OUTER JOIN vt0 ON ((x'') NOT NULL) WHERE (((('1971437767')) NOT BETWEEN (((x'' IN ()))) AND ((((NULL)*('-1899487506')))))); -- 0ms;
SELECT ((((rt0.c0)<(vt0.c0)))>=((+ (rt0.c2)))) FROM rt0 WHERE (((0xffffffffdc714520 COLLATE RTRIM)IS('xhX' COLLATE NOCASE)));SELECT ALL (((rt0.c3)) BETWEEN ((ROUND(rt0.c0, vt0.c0))) AND ((((rt0.c2) ISNULL)))) FROM vt0, rt0, t0 WHERE ((((x'60ef', '-1724767193', NULL, 5.7835289E8, x'')) BETWEEN ((CAST(-286694748 AS BLOB), ((((((((0.9913017492146022)AND(NULL)))OR(0.28312764537305535)))AND('')))AND(x'')), ((((((((NULL)AND(0.5503220927963711)))AND(x'0cea')))AND(x'')))AND(0.19100978110542055)), CASE '1650926021'  WHEN -1.44278112E9 THEN '1083628308' WHEN NULL THEN x'3ac8' WHEN '0.4266251604580177' THEN 'O(蟫)' ELSE NULL END, (('Gpn')/(NULL)))) AND ((CASE WHEN 0X751398cc THEN x'69feeb5b' END, (('1') NOT BETWEEN ('') AND (NULL)), ('sXIgZ' IN ()), (('1880313402')|('')), CAST('V[z' AS TEXT))))) LIMIT 760823964 OFFSET 2071146436; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT ALL ABS(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))) FROM vt0, rt0, t0 LIMIT 600157105 OFFSET 732417704; -- 0ms;
SELECT DISTINCT CASE (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN ((vt0.c0) BETWEEN (0.8827175124709064) AND (t0.c0)) WHEN x'' COLLATE RTRIM THEN ((((rt0.c1)AND(t0.c0)))AND(rt0.c3)) WHEN UNLIKELY(DISTINCT rt0.c3) THEN (((rt0.c0))<=((t0.c0))) ELSE (rt0.c3 IN ()) END FROM vt0, rt0;SELECT DISTINCT (('')||(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM t0 WHERE (CAST((((NULL)) BETWEEN ((x'0d08')) AND (('4o'))) AS REAL));SELECT ALL ((COUNT(*)) IS TRUE) FROM rt0, t0 GROUP BY (((SQLITE_VERSION()))=((rt0.c1))) HAVING ((((rt0.c2)OR('-884065937')))OR(vt0.c0)) COLLATE RTRIM;SELECT DISTINCT TYPEOF(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END) FROM rt0, vt0 WHERE (x'') GROUP BY TRIM(rt0.c2 COLLATE BINARY), rt0.c1, 0.9459140385277569; -- 0ms;
SELECT ALL rt0.c3 FROM vt0, rt0 ORDER BY CAST((rt0.c1 IN ()) AS TEXT) ASC  NULLS LAST, ((CAST(vt0.c0 AS INTEGER)) IS FALSE) DESC; -- 0ms;
SELECT AVG((+ (t0.c0))) FROM vt0, rt0;SELECT DISTINCT json_remove(((rt0.c0)<<(rt0.c1)), CAST(t0.c0 AS REAL)) FROM vt0;SELECT DISTINCT ((rt0.c0) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)) FROM vt0, rt0, t0; -- 1ms;
SELECT DISTINCT CASE WHEN rt0.c3 THEN 0.018898317781214313 WHEN rt0.c2 THEN SUM(rt0.c0) WHEN ((('?훃9*', rt0.c3, rt0.c3))==((vt0.c0, rt0.c2, rt0.c3))) THEN '' COLLATE BINARY ELSE ((t0.c0)IS NOT(rt0.c1)) END FROM rt0 WHERE ((((~ (''))) BETWEEN ((NULL IN ())) AND (469316540))) LIMIT -1797462905 OFFSET 247878466;SELECT DISTINCT (~ (CAST('-737437703' AS NUMERIC))) FROM t0, vt0, rt0 WHERE (COALESCE((((-1.187489335E9))=((NULL))), (NOT ('')))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c0) NOTNULL)) OVER () FROM vt0 WHERE (((((0.6694987516168165)OR(x'4410')))OR(x'')) COLLATE NOCASE);SELECT rt0.c1, (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND ((((((rt0.c1)OR(rt0.c2)))AND(0.4141042208367257))))), (((NOT (rt0.c2)))==(t0.c0 COLLATE BINARY)) FROM rt0, t0; -- 0ms;
SELECT (~ (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))), ((((((((rt0.c3 COLLATE RTRIM)AND(((rt0.c0)<=(rt0.c1)))))OR(((vt0.c0)<=(rt0.c1)))))OR(COUNT(t0.c0))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))), CASE WHEN ('0.6338217924727186' IN (vt0.c0)) THEN t0.c0 ELSE ((rt0.c3)|(t0.c0)) END FROM vt0, rt0, t0 WHERE (CAST(ABS(DISTINCT x'b469') AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)<=(rt0.c0)) AS NUMERIC) FROM t0 WHERE ((NOT (((NULL)%(x'')))));SELECT ((((((((vt0.c0)OR('rW')))OR(rt0.c0)))OR((~ (rt0.c3)))))OR(json_type(rt0.c0))), UNLIKELY(DISTINCT 0.9432514981016132), ((((rt0.c1)*(rt0.c1)))>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)) FROM t0;SELECT DISTINCT (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0 GROUP BY rt0.c2;SELECT (((rt0.c3 IN ())) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((rt0.c1) BETWEEN (t0.c0) AND (vt0.c0)))), json_array_length(((rt0.c3)GLOB(vt0.c0)), ((rt0.c0)==(rt0.c2))), ((((rt0.c2) IS FALSE))=(CAST(rt0.c2 AS BLOB))) FROM rt0, t0 WHERE ((((NULL) BETWEEN ('-1632982145') AND (NULL)) IN (LIKELY(0.9808867643305913)))) GROUP BY ((((((rt0.c2) NOT NULL))AND(((rt0.c2)>(rt0.c0)))))AND(((x'')/(rt0.c3))));SELECT DISTINCT 'Px' FROM rt0, vt0 ORDER BY LIKELY(UNLIKELY(rt0.c3)), ((((vt0.c0)=(rt0.c2)))<<((+ (rt0.c3)))); -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM t0; -- 0ms;
SELECT ALL ((AVG(rt0.c1))OR(((rt0.c3) IS TRUE))), (((CAST(t0.c0 AS REAL)))=((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))), '-1201619873' FROM t0, rt0 ORDER BY CASE ((((rt0.c1)AND(rt0.c3)))AND(vt0.c0))  WHEN 0.8805277450160108 THEN CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END WHEN 'TRUE' THEN (((t0.c0, rt0.c0, rt0.c2))>=((t0.c0, vt0.c0, t0.c0))) WHEN (~ (-1.292197092E9)) THEN ((rt0.c1)AND(rt0.c2)) END  NULLS LAST;SELECT DISTINCT ((CAST(rt0.c0 AS BLOB)) NOTNULL), AVG(rt0.c0 COLLATE NOCASE COLLATE RTRIM) OVER (), CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE FROM vt0, rt0 WHERE (GLOB(CASE WHEN x'2b64' THEN 0Xffffffffa8f8f64e END, ((0.4344980927765235)|(x''))));SELECT DISTINCT COUNT(vt0.c0) FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT FIRST_VALUE(TRIM(DISTINCT ((vt0.c0) NOTNULL))) OVER () FROM vt0, t0 WHERE (((((((NULL)OR(NULL)))OR(((0Xfffffffffcfa211f) NOT BETWEEN (x'') AND (0x45fa96f0)))))OR(x'' COLLATE RTRIM))) LIMIT -784870315 OFFSET -1632982145; -- 0ms;
SELECT ALL (- (QUOTE(vt0.c0))) FROM t0, rt0 WHERE (((('*ms[\GlxN')||(0xffffffffb1d4e0ce)) IN (NULL COLLATE RTRIM)));SELECT DISTINCT COUNT(*) FROM vt0, t0, rt0; -- 0ms;
SELECT CAST(((vt0.c0)+(t0.c0)) AS REAL) FROM rt0 WHERE ((~ (((('0.8681179418631861'))<((NULL))))));SELECT (~ (rt0.c1)) COLLATE BINARY, RANK() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE TIES), ((rt0.c3)*(t0.c0)) COLLATE NOCASE FROM t0, vt0, rt0 WHERE ((((('E<y2x(R', -900566344, 0.19210296293428952)) BETWEEN ((x'', 0.5296087755911879, NULL)) AND (('1352862270', x'', '|'))) IN ())); -- 0ms;
SELECT (((((((((NOT (x'')))AND((NOT (rt0.c0)))))AND(rt0.c3 COLLATE BINARY)))AND(((((((((((((rt0.c1)AND('Uf')))OR(NULL)))AND(vt0.c0)))OR(rt0.c1)))OR(t0.c0)))OR(vt0.c0)))))OR(rt0.c0 COLLATE BINARY)) FROM vt0, t0, rt0 WHERE (CAST(0.6312099405755299 COLLATE BINARY AS INTEGER)) GROUP BY (NOT (((((((((NULL)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(t0.c0)))) HAVING GROUP_CONCAT((NOT (rt0.c1))); -- 0ms;
SELECT ALL ((((t0.c0)<<(t0.c0)))&(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))) FROM vt0, t0, rt0; -- 0ms;
SELECT CASE x'' COLLATE RTRIM  WHEN COUNT(*) THEN ((t0.c0) NOTNULL) END FROM vt0, t0 GROUP BY rt0.c0, ((NOT (rt0.c2)) IN ()), ((NULL)AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) HAVING (+ ((((t0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c1))<((vt0.c0, rt0.c0, rt0.c3, t0.c0, t0.c0)))));SELECT ALL ((MIN(t0.c0)) IS FALSE), '-754930943' COLLATE BINARY COLLATE RTRIM, ((TOTAL_CHANGES()) IS TRUE) FROM vt0, t0 LIMIT 1577060343 OFFSET -1575660500; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0, t0, vt0 UNION SELECT ALL ((LOWER(t0.c0))+((rt0.c2 IN ()))) FROM t0; -- 1ms;
SELECT ((((((((CAST(rt0.c1 AS BLOB))OR(0.26726225783000634)))OR(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN t0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE 0.10514961542706425 END)))AND(CAST(rt0.c0 AS INTEGER))))AND((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) FROM t0 ORDER BY ((((+ (t0.c0))))<(((+ (rt0.c0))))) ASC  NULLS LAST, ((((t0.c0)||(rt0.c1))) NOT BETWEEN (COALESCE(t0.c0, rt0.c3)) AND (rt0.c3 COLLATE RTRIM)), ((ABS(DISTINCT rt0.c2))%(UNLIKELY(DISTINCT rt0.c3))) ASC  NULLS FIRST LIMIT 971106380 OFFSET -860428200;SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL (((NOT (vt0.c0))) IS TRUE), CAST(CAST(vt0.c0 AS REAL) AS REAL), CASE (NOT (rt0.c0))  WHEN ((t0.c0) NOTNULL) THEN (+ (vt0.c0)) ELSE (((rt0.c1, rt0.c3, vt0.c0))<((rt0.c1, -1.992913599E9, t0.c0))) END FROM vt0, t0, rt0 GROUP BY ((rt0.c1 COLLATE BINARY)IS(((rt0.c3) ISNULL))) HAVING CAST(CAST(vt0.c0 AS REAL) AS NUMERIC); -- 1ms;
SELECT ALL (+ (rt0.c2 COLLATE BINARY)) FROM rt0, t0, vt0 WHERE (json_insert(CASE 0.6917357725884363  WHEN x'' THEN 7.32417704E8 END, CASE 0X42a09f1d  WHEN 'lqvR' THEN x'' WHEN 0.32028195576144725 THEN '-1632982145' WHEN x'' THEN x'' END, CASE WHEN '-1276882724' THEN 0Xffffffffddb03e47 END)); -- 0ms;
SELECT DISTINCT ((((((rt0.c2)-(rt0.c3)))OR(((((((((t0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(0.41249558814958787)))OR(rt0.c3)))))OR(((rt0.c3)|(t0.c0)))) FROM rt0 WHERE (json((((0.07108278320293715)) BETWEEN (('ADMF')) AND ((NULL))))) GROUP BY (+ ((rt0.c0 IN ()))) HAVING ((((((vt0.c0)OR(t0.c0)))OR(rt0.c3))) ISNULL);SELECT DISTINCT (((NOT (rt0.c3)))>(CAST(rt0.c1 AS REAL))) FROM rt0 WHERE (((((('wL(녍', x'edfe', 0x6a063e78))==((-387651200, '', x''))))>>((('YM') NOT BETWEEN ('876468598') AND (0.35208966756547555))))); -- 0ms;
SELECT ALL t0.c0, ((((((rt0.c1)OR(t0.c0)))OR(rt0.c3)))LIKE(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))), LEAD(((rt0.c2)&(t0.c0)) COLLATE BINARY COLLATE RTRIM, CAST(((rt0.c3) IS TRUE) AS REAL), ((((rt0.c0) IS TRUE))*(((rt0.c1)==(rt0.c1))))) OVER () FROM vt0, rt0, t0 WHERE (CASE PRINTF(NULL)  WHEN ((x'41ab')OR(x'')) THEN (('O0') NOT BETWEEN (x'') AND (NULL)) END); -- 0ms;
SELECT DISTINCT CAST(ABS(rt0.c3) AS BLOB) FROM vt0 ORDER BY ABS(DISTINCT (~ (t0.c0)))  NULLS FIRST, (((((rt0.c1)<=(rt0.c1))))>((TRIM(rt0.c0, NULL))))  NULLS FIRST;SELECT ALL ('垀X' IN ()) FROM rt0, vt0 WHERE (((((0.39378868824058766) NOT NULL)) ISNULL)); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((((x'')OR(rt0.c0)))AND(rt0.c0)), COUNT(*), (t0.c0 IN ()))) AND ((((rt0.c3)OR(rt0.c3)), rt0.c0, ((rt0.c0)*(rt0.c0))))), (((rt0.c1 IN ())) NOT BETWEEN ((x'' IN ())) AND ('/~ʍu ')), ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))&(CAST(vt0.c0 AS TEXT))) FROM t0, rt0;SELECT DISTINCT MAX(((rt0.c0)OR(t0.c0))) FROM vt0, rt0 RIGHT OUTER JOIN t0 ON DATE(((t0.c0) BETWEEN (rt0.c1) AND (x'')), (((rt0.c3, t0.c0, rt0.c1))>((t0.c0, rt0.c0, rt0.c1))), ((vt0.c0) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOTNULL) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOTNULL) FROM rt0 WHERE (HEX((- (NULL)))); -- 0ms;
SELECT (('lf')*(MIN(rt0.c1))) FROM t0, vt0 WHERE (ROUND((((0x192a01a6)) BETWEEN (('-1992698689')) AND ((0.31193551279906195))), CASE WHEN 0.7798115606929122 THEN '' END)) LIMIT 773827566;SELECT CAST((vt0.c0 IN ()) AS NUMERIC), CASE CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 END  WHEN HEX(DISTINCT rt0.c0) THEN ((vt0.c0)>>(rt0.c1)) END, (((rt0.c2 COLLATE BINARY, ((rt0.c2)<=(rt0.c3)), json_quote(vt0.c0)))>((((t0.c0) BETWEEN (rt0.c3) AND (vt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), (- (rt0.c0))))) FROM vt0, rt0 WHERE (CAST(((NULL)&(NULL)) AS BLOB));