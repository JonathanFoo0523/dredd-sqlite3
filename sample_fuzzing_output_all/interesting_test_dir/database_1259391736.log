-- Time: 2024/06/07 06:51:42
-- Database: database36
-- Database version: 3.40.0
-- seed value: 1259391736
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM t0; -- 0ms;
ANALYZE; -- 1ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
ALTER TABLE t0 ADD COLUMN c36 REAL; -- 0ms;
END; -- 1ms;
REINDEX; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
CREATE INDEX i35 ON t0(((c0)>(NULL)) COLLATE RTRIM DESC,CASE ((((c0)AND(c36)))AND(c36))  WHEN (((c0, c0, c0)) BETWEEN ((c36, c0, c0)) AND ((c0, c36, c0))) THEN ((c36) NOTNULL) END COLLATE RTRIM); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t0(c36) VALUES ('1051710513'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c36)=(0.9114746172474949); -- 1ms;
UPDATE t0 SET c0=0.10579608437673671 WHERE (CAST('-38023968' AS TEXT) IN ()); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE INDEX IF NOT EXISTS i62 ON t0(((((((((c0 COLLATE NOCASE)AND((NOT (c0)))))OR(CAST(0.10158464790665034 AS REAL))))AND(c36 COLLATE RTRIM)))AND(TYPEOF(DISTINCT c36))) COLLATE NOCASE ASC,NULLIF(DISTINCT c36, c36)); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
REINDEX i35; -- 0ms;
REINDEX i35; -- 0ms;
REINDEX NOCASE; -- 0ms;
REINDEX i62; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t0(c36, c0) VALUES ('Ꚛ}Vꏎ&', NULL); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i91 ON t0(((CAST(c36 AS REAL))<>(((((((((((((c36)OR(c36)))OR(c36)))AND(c36)))OR(c0)))AND(c0)))AND(-2.029411378E9)))),(c36 IN (((c36)IS NOT(c0)))) ASC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i97 ON t0(c36 COLLATE BINARY DESC,(- ((('')LIKE(c36)))) COLLATE NOCASE) WHERE c0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c36) VALUES ('', '1869063834'), (0.3010649019397277, 0x3eafd431), (x'', x'99c3d03f'); -- 0ms;
CREATE UNIQUE INDEX i63 ON t0(CASE WHEN TRIM(c36) THEN CASE c36  WHEN c36 THEN c36 ELSE '-2029411378' END END COLLATE BINARY,(+ ((c36 IN ()))) COLLATE RTRIM); -- 0ms;
CREATE UNIQUE INDEX i53 ON t0((((c36 IN (c36, c36))) NOT BETWEEN (c0) AND (('-38023968' IN ()))) COLLATE NOCASE,CASE WHEN ((c36)AND(c36)) THEN ((c0) IS TRUE) WHEN UPPER(c0) THEN 0x2701a873 WHEN TYPEOF(c36) THEN (((c36, c36, c36))==((c36, c0, c0))) END DESC) WHERE TRIM((+ (c0)), ((((((((((((0x103449bc)AND(c0)))OR(c0)))OR(c0)))OR(c0)))OR(c36)))OR(c0))); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX i35; -- 0ms;
REINDEX; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT '0.0' FROM t0 WHERE ((('1051710513') NOTNULL)); -- 0ms;
SELECT TRIM(MAX(t0.c36), t0.c0) FROM t0 WHERE (CAST((((('271862204')OR(x'')))AND('')) AS BLOB)) ORDER BY 0.8917975600183888  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 WHEN t0.c36 THEN t0.c36 END THEN t0.c0 COLLATE NOCASE ELSE (- (NULL)) END FROM t0; -- 0ms;
SELECT DISTINCT (- ((NULL IN (t0.c0, t0.c36, t0.c36)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, ((((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c0))) NOTNULL), ((((((((((((((((json_extract(t0.c36, t0.c0))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c36)))))OR((t0.c0 IN (t0.c36)))))AND(((t0.c36) NOTNULL))))AND(((t0.c36)%(t0.c0)))))AND((t0.c36 IN ()))))AND(CAST(t0.c0 AS BLOB))))OR((((t0.c36, t0.c0, t0.c36)) NOT BETWEEN ((t0.c0, t0.c36, t0.c36)) AND ((t0.c36, t0.c0, 1869063834))))))AND(((((t0.c36)AND(t0.c36)))OR(t0.c36)))) FROM t0 WHERE (CASE WHEN ((((((((0.681339997926027)AND('1488150756')))OR(NULL)))OR(x'0947')))AND('ꡳd䴹I)\nI떟s')) THEN CAST(0.9154211302427065 AS NUMERIC) END); -- 2ms;
SELECT ((((t0.c36)AND(CASE WHEN t0.c36 THEN x'' WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c0 ELSE 0.7624521572027061 END)))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c36))))) FROM t0 WHERE (CASE WHEN (6.54420083E8 IN ('1191390300')) THEN 853914773 WHEN ((('-2042149872')) NOT BETWEEN ((0.0065583137701366034)) AND (('-2029411378'))) THEN (('2049330489') NOT BETWEEN (x'fac2') AND ('+k')) WHEN 'juiTTp0>F' COLLATE BINARY THEN (('1488150756')+(x'')) END); -- 0ms;
SELECT DISTINCT ((((((t0.c0)AND(t0.c36)))OR(t0.c0)))>=((t0.c36 IN (t0.c36)))) FROM t0 WHERE ((((CAST('hQ' AS INTEGER)))<((NULL COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT (((((((t0.c36))>((t0.c36))))AND((((t0.c0))<((t0.c36))))))AND(((((x'')AND(t0.c0)))AND(t0.c0)))) FROM t0 WHERE (((((NULL)>=(x'')))IS NOT(((654420083) NOT BETWEEN ('3L') AND (NULL))))); -- 0ms;
SELECT ALL (((((((t0.c36, t0.c36, t0.c36)) BETWEEN ((t0.c0, t0.c36, t0.c0)) AND ((t0.c0, t0.c36, t0.c0))))AND((((t0.c36))!=((t0.c0))))))OR(((t0.c0)=(t0.c0)))) FROM t0 LIMIT 616590946 OFFSET 0; -- 0ms;
SELECT ALL CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c36))) AS INTEGER) FROM t0 WHERE ((((('') IS FALSE))+(CASE WHEN 0.3159195934525141 THEN x'' WHEN 0.227821770920269 THEN 853914773 WHEN 0.04393992034916927 THEN x'' ELSE 0.31792666171736306 END))); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT CASE WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN NULL THEN 'I䴹OQ' ELSE t0.c0 END, (t0.c36 IN ()), CAST(t0.c36 AS INTEGER), ((t0.c0)IS(t0.c36))), ((x'bf0095cc')-(t0.c0)) COLLATE RTRIM, COALESCE(DISTINCT ((t0.c0) NOTNULL), (- (t0.c0)), CASE WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c36 THEN t0.c36 END, highlight(t0.c0, t0.c0, t0.c0, t0.c36), (NOT (t0.c36)), 0.8877491307390336) FROM t0 WHERE ((((~ (0.3010649019397277))) ISNULL)); -- 1ms;
SELECT DISTINCT IFNULL(((t0.c0)*('P_%R')), CASE t0.c0  WHEN t0.c36 THEN t0.c36 END) FROM t0; -- 0ms;
SELECT ALL COALESCE(((t0.c0)<<(t0.c36)), CAST(t0.c36 AS TEXT)), ((((NOT (t0.c36))))<>(((~ (t0.c0))))), t0.c36 FROM t0 WHERE ((((('LZ钵5o옝R#온') NOT BETWEEN ('-472866988') AND (NULL))) NOTNULL)) GROUP BY t0.c36, ((((((t0.c0)*(t0.c36)))AND((((t0.c0))>=((t0.c36))))))AND(TRIM(0xfffffffffed4f8a9))), ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c0 ELSE x'a665' END)AND((t0.c0 IN (t0.c36, t0.c0)))))OR(CAST(t0.c36 AS NUMERIC))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((t0.c36)OR(t0.c36)))AND(t0.c0))) OVER (), ((((t0.c0, t0.c36, t0.c36)) NOT BETWEEN ((t0.c36, t0.c0, t0.c0)) AND ((t0.c36, NULL, t0.c0))) IN ()), MAX(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c36))) FROM t0; -- 1ms;
SELECT ALL ((((((t0.c36) BETWEEN (t0.c36) AND (t0.c36)))OR(UPPER(DISTINCT 0.227821770920269))))OR(t0.c36)) FROM t0 WHERE ((((((0.1747289326332302)&(''))))<=((((('271862204')) NOT BETWEEN ((-9.53629144E8)) AND ((NULL))))))); -- 0ms;
SELECT ALL ((((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) FROM t0 WHERE ((('654420083' IN ()) IN ())); -- 0ms;
SELECT DISTINCT t0.c0, ((((((t0.c36) IS FALSE))OR(AVG(x'8257'))))OR(CASE t0.c36  WHEN t0.c36 THEN t0.c36 END)), CUME_DIST() OVER () FROM t0 WHERE (0.6239676122193878); -- 0ms;
SELECT TOTAL((- (t0.c0))) FROM t0 WHERE ((((((NULL) NOT NULL), ('' IN ('')), ((x'')<=('G8}B>-W'))))<((CAST('' AS BLOB), CAST(NULL AS BLOB), CAST(-7289315.0 AS REAL))))) LIMIT 1690997941 OFFSET -1337818774; -- 0ms;
SELECT DISTINCT ((((((t0.c36))!=((t0.c0)))))<>(((NOT (t0.c36))))), ((((t0.c36)%(t0.c36))) NOT BETWEEN (((t0.c0)|(t0.c36))) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0)))), (((((t0.c36)) NOT BETWEEN ((t0.c0)) AND ((t0.c36)))) BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0)=(t0.c0)))) FROM t0; -- 1ms;
SELECT DISTINCT CAST(((t0.c0)>=(t0.c36)) AS INTEGER) FROM t0 WHERE (((NULL) IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT TOTAL(json_array_length(t0.c36, t0.c36)) OVER ( ROWS (((COALESCE(t0.c36, t0.c0)))>((t0.c0 COLLATE RTRIM))) PRECEDING EXCLUDE NO OTHERS) FROM t0 WHERE (((0.8584592188099028 IN ()) IN (NULL))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 WHERE (((('tw\rTp')) NOT BETWEEN ((LOWER(''))) AND (((('') IS TRUE))))); -- 0ms;
SELECT DISTINCT SUM(CAST(t0.c0 AS INTEGER)), TOTAL(((t0.c0) BETWEEN (t0.c0) AND (t0.c36))), t0.c36 FROM t0 WHERE (((((NULL)OR(x'')))OR(NULL)) COLLATE RTRIM) GROUP BY CAST((~ (t0.c36)) AS NUMERIC); -- 0ms;
SELECT ALL GROUP_CONCAT((t0.c36 IN ())), t0.c0, ((LTRIM(t0.c0, t0.c0)) NOTNULL), CASE TYPEOF(DISTINCT t0.c0)  WHEN CAST(t0.c0 AS TEXT) THEN LIKELY(t0.c0) END, SUM(STRFTIME(t0.c36, t0.c0, t0.c0)) OVER () FROM t0; -- 0ms;
SELECT ALL t0.c36 FROM t0 WHERE (((((0.27409175344702696)*(0.3098495698115934)))AND(STRFTIME(NULL, NULL, 'CQ', 0.9241861391155081, '1690997941')))); -- 0ms;
SELECT DISTINCT '-1337818774', COUNT(*) OVER ( ORDER BY t0.c36 DESC  NULLS FIRST), ((((t0.c36) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((((t0.c36)) NOT BETWEEN ((t0.c0)) AND ((t0.c36)))) AND (TOTAL(t0.c36))), ((MAX(t0.c36)) NOT BETWEEN (MAX(t0.c36)) AND (t0.c36 COLLATE RTRIM)), ((((((t0.c36) NOT BETWEEN (t0.c36) AND (t0.c0)))AND((t0.c36 IN ('8o\rm/iꏎb', t0.c0)))))AND(CASE t0.c36  WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN 0xffffffff8ed1d81e WHEN t0.c0 THEN t0.c36 ELSE x'' END)) FROM t0 WHERE (CAST(((((0.848847058741469)OR('0.3159195934525141')))AND(x'')) AS BLOB)); -- 0ms;
SELECT ALL ((((t0.c36)) BETWEEN ((t0.c36)) AND ((t0.c36))) IN (((t0.c36) BETWEEN (t0.c36) AND (t0.c36)))) FROM t0; -- 0ms;
SELECT DISTINCT CASE ((t0.c36)-(t0.c36))  WHEN (((t0.c36)) NOT BETWEEN ((t0.c0)) AND ((0x58b360e4))) THEN CASE t0.c0  WHEN t0.c36 THEN t0.c0 END END, AVG(json_remove(t0.c36, t0.c0, t0.c36, t0.c36) COLLATE NOCASE), ((t0.c0) NOT NULL) FROM t0;SELECT ((CASE WHEN t0.c36 THEN x'' ELSE t0.c36 END)<<(((t0.c36) IS TRUE))), AVG(0.6438312468392894 COLLATE RTRIM COLLATE NOCASE), ((((t0.c36 COLLATE NOCASE)OR(TOTAL(t0.c36))))OR(((t0.c36)||(t0.c36)))) FROM t0 WHERE ((+ (CASE x''  WHEN 8.53914773E8 THEN '1389086670' END))); -- 0ms;
SELECT (t0.c0 IN (t0.c0, t0.c0)) COLLATE RTRIM FROM t0 WHERE (((((x'') ISNULL)) BETWEEN ('-472866988' COLLATE BINARY) AND ((NULL IN ())))); -- 0ms;
SELECT ALL SUM((~ (t0.c0))) FROM t0 GROUP BY LOWER(DISTINCT ((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c36))) HAVING ((((('-2042149872') NOT BETWEEN (t0.c0) AND (t0.c36))))>((((t0.c36)-(t0.c36))))); -- 0ms;
SELECT ALL ((GROUP_CONCAT(t0.c0))GLOB((((t0.c0))==((t0.c0))))), ((t0.c0) BETWEEN (t0.c36) AND (t0.c0)) COLLATE NOCASE, AVG((~ (t0.c36)) COLLATE RTRIM) FILTER(WHERE ((t0.c0)<<((((t0.c0)) BETWEEN ((t0.c0)) AND ((0Xffffffffd9f30937)))))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c0 END)>=(((t0.c36)>(t0.c36)))), ((((((((((t0.c0) BETWEEN (t0.c36) AND (t0.c0)))AND((t0.c36 IN ()))))AND(GLOB(t0.c36, t0.c36))))AND(0.9372957818873331)))AND(((((t0.c36)OR(t0.c36)))OR(t0.c0)))), ((NULL)-((t0.c0 IN ()))) FROM t0 WHERE (('1690997941' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c36 THEN t0.c0 ELSE t0.c0 END)OR(((((t0.c36)OR(t0.c36)))AND(-2029411378)))), (((((t0.c0)AND(t0.c36)))OR(t0.c36)) IN (((((((((t0.c0)OR(t0.c36)))OR(t0.c0)))OR(t0.c36)))OR(t0.c36)), (t0.c0 IN (t0.c36)))), (t0.c36 COLLATE NOCASE IN (CASE t0.c0  WHEN t0.c36 THEN t0.c36 END, CASE WHEN t0.c0 THEN t0.c36 END)) FROM t0; -- 1ms;
SELECT CASE WHEN t0.c36 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((t0.c36)) AND ((t0.c36))) ELSE TOTAL(x'') END FROM t0 WHERE ((((NULL, x'', 'air갶ex.䦼')) NOT BETWEEN ((CASE WHEN NULL THEN '-472866988' ELSE '' END, (NOT ('+k')), (- (0.9418768344585443)))) AND ((((0.09204179898469489) NOT NULL), NULL, (- ('-953629144')))))); -- 0ms;
SELECT x'f14f' FROM t0; -- 0ms;
SELECT json_array_length(((t0.c0)>(t0.c36))) FROM t0 INDEXED BY i53 WHERE (CAST(0Xffffffffe6cceff8 COLLATE NOCASE AS REAL));SELECT GROUP_CONCAT(NULLIF(t0.c0, t0.c0)), (+ (t0.c36 COLLATE BINARY)), FIRST_VALUE(((t0.c36 IN (t0.c0)) IN (((NULL) IS FALSE)))) OVER () FROM t0 WHERE (((((1554796398) NOT BETWEEN (NULL) AND (0.4871843352319579))) IS TRUE)); -- 0ms;
SELECT ((((((t0.c36) NOTNULL))AND(NULLIF(t0.c36, t0.c36))))AND(((t0.c36)=(t0.c36)))) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(COUNT(*)), CAST((t0.c0 IN (t0.c36, x'')) AS NUMERIC), CAST((((t0.c36, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))) AS INTEGER) FROM t0 WHERE (((0.18040249880677983 COLLATE NOCASE)IS NOT((((NULL))<((NULL))))));SELECT DISTINCT (- ('l' COLLATE RTRIM)), TOTAL('AIR갶EX.䦼'), DENSE_RANK() OVER () FROM t0 WHERE (((('-822432714') NOT BETWEEN (NULL) AND ('')) IN ((0.14700744659421883 IN ())))) ORDER BY ((t0.c36 COLLATE NOCASE)<=(t0.c0 COLLATE BINARY)) DESC  NULLS LAST, ((((CASE t0.c0  WHEN t0.c36 THEN t0.c0 WHEN NULL THEN 0Xfffffffff51a6859 WHEN t0.c36 THEN t0.c36 ELSE t0.c0 END)AND(((((t0.c36)AND('Nb+(3')))AND(t0.c0)))))OR(((t0.c0) IS TRUE))) ASC  NULLS FIRST, ((((+ (x''))))!=((t0.c36)))  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(*) FROM t0; -- 0ms;
SELECT ALL (CASE t0.c36  WHEN t0.c36 THEN t0.c0 END IN ()) FROM t0; -- 0ms;
SELECT (~ (CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END)) FROM t0; -- 0ms;
SELECT (('d#A4iT\nl8()')%(UPPER(t0.c36))) FROM t0; -- 0ms;
SELECT ALL CASE t0.c36 COLLATE NOCASE  WHEN (t0.c36 IN ('1869063834')) THEN t0.c0 COLLATE NOCASE END FROM t0; -- 0ms;
SELECT CASE ((t0.c0)<<(t0.c36))  WHEN ((t0.c0)IS(t0.c0)) THEN ((((((((((((t0.c0)AND(t0.c36)))OR(616590946)))OR(0.5317122261396936)))OR(t0.c0)))OR(t0.c36)))OR(t0.c36)) WHEN ((t0.c36) NOT BETWEEN (t0.c36) AND (t0.c36)) THEN t0.c36 COLLATE BINARY WHEN ((t0.c36)%(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c36) AND (t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c36)||(t0.c0)) WHEN (t0.c0 IN ()) THEN IFNULL(DISTINCT '-182818727', t0.c0) END FROM t0 NOT INDEXED WHERE ((('t' COLLATE NOCASE) IS TRUE)) LIMIT -472866988; -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c36 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((t0.c0)IS(0Xffffffffb042816a))) AND (((t0.c0)!=(t0.c36)))) FROM t0; -- 0ms;
SELECT DISTINCT json_type(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN 'L3' ELSE t0.c0 END), ((t0.c36) ISNULL), x'e51e', (- (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN ((t0.c36)<(t0.c36)) END FROM t0 WHERE (CASE ((((x'')OR('22854546')))OR(NULL))  WHEN ((0.9241861391155081)IS NOT(NULL)) THEN ((0.005157576886529847)*(0.1845582404330799)) WHEN CAST(NULL AS NUMERIC) THEN '-38023968' WHEN 506466403 COLLATE NOCASE THEN ((((x'2f45')AND(NULL)))AND(NULL)) ELSE x'ee14' END);SELECT DISTINCT 0xffffffff83c9078f FROM t0 WHERE (((((x'') NOT BETWEEN ('') AND ('-472866988')))AND(NULL))) ORDER BY CASE x''  WHEN ((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CASE WHEN t0.c0 THEN x'' ELSE t0.c36 END WHEN t0.c0 THEN NULL WHEN ((t0.c0) BETWEEN (t0.c36) AND (t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR('')))OR(t0.c0)))OR(t0.c36)) ELSE ((((((((t0.c0)AND(t0.c36)))OR(t0.c0)))OR(0.9153940587256553)))OR(NULL)) END  NULLS LAST, t0.c0 ASC  NULLS LAST, t0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((CAST(NULL AS TEXT))>=(((t0.c36) NOT NULL))), ((((CAST(t0.c0 AS BLOB))AND(((x'5d06') NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(LIKELIHOOD(t0.c0, 0.9404802040997026))), (((t0.c0)) BETWEEN (((t0.c0 IN (t0.c36)))) AND ((t0.c36))) FROM t0 GROUP BY (- (t0.c0 COLLATE RTRIM)) HAVING (~ (((t0.c36)GLOB(t0.c36)))); -- 0ms;
SELECT CAST((NOT (t0.c0)) AS INTEGER) FROM t0 GROUP BY t0.c36, (((((t0.c0)AND(t0.c0))))<>((TYPEOF('u')))), (((((NOT ('-1676305796')))AND(((t0.c36) BETWEEN (t0.c36) AND (t0.c36)))))OR((((t0.c0, t0.c0, t0.c36))<>((t0.c36, NULL, t0.c0))))) ORDER BY ((json_array_length(t0.c0, t0.c36)) NOT BETWEEN (((t0.c36) BETWEEN (t0.c0) AND (t0.c36))) AND ((t0.c0 IN (t0.c36)))) DESC  NULLS LAST;SELECT DISTINCT CAST(t0.c0 AS TEXT) FROM t0 WHERE ('-164533347') ORDER BY (((t0.c36)) BETWEEN ((((((((((t0.c36)OR(t0.c36)))OR(t0.c0)))OR(t0.c0)))OR(t0.c36)))) AND ((t0.c0 COLLATE RTRIM))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((t0.c0))>((t0.c36))))OR(((t0.c0)==(t0.c36)))))AND(t0.c36)) FROM t0 WHERE (CAST(((x'')!=(x'67e3')) AS INTEGER)) ORDER BY t0.c36; -- 0ms;
SELECT ALL AVG(((t0.c36)IS(t0.c0))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (+ (COUNT(t0.c36))) FROM t0 WHERE (((((0.9868170653554527) IS FALSE))GLOB('' COLLATE RTRIM))); -- 0ms;
SELECT (((t0.c36)OR(t0.c0)) IN (COUNT(*))), t0.c36 COLLATE NOCASE, NULLIF(DISTINCT 0.8025850458717484, ((t0.c36)>(t0.c36))) FROM t0 WHERE (CASE WHEN ('-1556987589' IN (0.31697194229038417, '0.848847058741469')) THEN NULLIF(x'', NULL) ELSE CAST('._YR' AS INTEGER) END); -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c36, t0.c0))==((t0.c0, t0.c0, t0.c0))))+(((x'')<(t0.c0)))) FROM t0 WHERE ((((('8o\rm/iꏎb', 0Xa1ab613, x'', '0.14700744659421883', NULL)) NOT BETWEEN ((1288336904, '1263817921', NULL, NULL, 'k}')) AND (('nowⱜH', NULL, NULL, 0.0, x''))) IN (((0xffffffff89146dfe) BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ((CAST(t0.c0 AS TEXT))+(((t0.c36)<<(t0.c36)))), LEAD(ABS(DISTINCT (((t0.c0))=((1.554796398E9)))), (((t0.c0) NOT NULL) IN (SQLITE_COMPILEOPTION_GET(t0.c36), CAST(t0.c36 AS NUMERIC))), (((t0.c0)-(t0.c0)) IN ())) OVER (), CASE WHEN 0.005157576886529847 THEN (((t0.c36)) NOT BETWEEN ((t0.c36)) AND ((''))) ELSE CASE t0.c36  WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN -1521871582 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c36 END END, (CAST(t0.c36 AS BLOB) IN (json_type(t0.c36))), (('-953629144') IS FALSE) FROM t0 WHERE ((CASE NULL  WHEN NULL THEN 'G*' ELSE '1051710513' END IN ())); -- 1ms;
SELECT DISTINCT CAST(2030546780 AS INTEGER) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL NULL, CASE WHEN 1488150756 COLLATE NOCASE THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c36)) WHEN (('!7')*(t0.c0)) THEN ((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c36)) WHEN t0.c36 COLLATE BINARY THEN t0.c0 END, t0.c36 FROM t0 WHERE ((((0.27823027260465305 IN ())) NOT BETWEEN (CASE 627695338  WHEN x'c51d' THEN NULL END) AND (CASE '-1521871582'  WHEN '-1739436931' THEN '0.848847058741469' ELSE x'' END))); -- 0ms;
SELECT ALL COALESCE(((t0.c36)<=(t0.c36)), CASE WHEN t0.c36 THEN t0.c36 END, CAST(t0.c36 AS NUMERIC), ((t0.c36)+(t0.c36))) FROM t0 WHERE (((((-1.676305796E9, x'0e0e', '-0.0'))<=((x'34a0fb28', NULL, NULL))) IN (((((5.06466403E8)OR(1866572906)))OR('!7')), ((0xffffffffb31dbc6b)=('pM[-<'))))); -- 0ms;
SELECT DISTINCT ((((t0.c36)<=(t0.c0)))IS NOT((NOT (2.2854546E7)))) FROM t0 WHERE ((+ ('0.27409175344702696')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT(((t0.c36)+(NULL))) OVER () FROM t0 ORDER BY ((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c0)) COLLATE BINARY DESC, SQLITE_COMPILEOPTION_USED((('230378466') IS FALSE))  NULLS LAST; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), NULL, ((((((t0.c36, t0.c36, t0.c36)) NOT BETWEEN ((t0.c36, t0.c36, t0.c36)) AND ((t0.c0, t0.c36, t0.c0)))))>((TOTAL_CHANGES()))) FROM t0; -- 0ms;
SELECT ALL CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT) FROM t0 WHERE ((+ (((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT MIN(MAX(t0.c36 COLLATE BINARY)) FROM t0 WHERE ((((((('\S#%-0[?u')AND(518170824)))AND((('') NOT BETWEEN (0.5651819889103544) AND (0X7a264d39)))))OR(-90527678 COLLATE RTRIM)));SELECT DISTINCT (((t0.c36)) NOT BETWEEN ((AVG(t0.c36))) AND ((MIN(t0.c36)))), x'da0a0a20', ((t0.c0)/(t0.c36)) COLLATE NOCASE FROM t0 NOT INDEXED WHERE (CAST(((-1394981377)>=(x'')) AS NUMERIC)); -- 0ms;
SELECT ALL ((CAST(t0.c36 AS REAL))>>(((t0.c36)+(t0.c36)))) FROM t0 LIMIT 2090829740 OFFSET 1106367113; -- 0ms;
SELECT ALL CASE ((t0.c36)>(t0.c36))  WHEN (t0.c0 IN ()) THEN (- (t0.c36)) WHEN ((t0.c0) IS TRUE) THEN (t0.c0 IN ()) WHEN CASE WHEN t0.c36 THEN '-1521871582' END THEN ((('1457833521', t0.c0, 0.7029040789065392)) BETWEEN ((t0.c36, t0.c36, 0.32969590069813093)) AND ((t0.c0, t0.c36, t0.c36))) END FROM t0 ORDER BY ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY; -- 0ms;
SELECT COUNT(*), AVG((NOT (t0.c0))) OVER (), (((((((((((t0.c36)AND(t0.c0)))OR(t0.c36)))AND(t0.c36)))OR(t0.c36))))=(((t0.c0 IN ())))) FROM t0 WHERE ((((((-2.47614049E8, x'', x'')) BETWEEN ((x'aaae', 0.10403874057959439, '!7')) AND ((6.27695338E8, 0.6141455457238049, NULL))))*(((122060485) IS FALSE)))); -- 0ms;
SELECT ALL NTH_VALUE(CASE t0.c36  WHEN t0.c36 THEN t0.c0 WHEN (- (t0.c36)) THEN CASE t0.c0  WHEN t0.c36 THEN 0.41254559757802767 END WHEN ((NULL) BETWEEN (t0.c0) AND (t0.c36)) THEN '-638383817' END, LOWER(DISTINCT t0.c0)) OVER ( GROUPS ((((CASE t0.c0  WHEN t0.c36 THEN t0.c36 ELSE t0.c0 END)OR(CASE WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c0 END)))OR(((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c36)))) PRECEDING) FROM t0;SELECT (~ ((NULL IN ()))), (((((t0.c0) IS FALSE)))=((CAST(t0.c0 AS NUMERIC)))), x'' FROM t0 WHERE ((((~ (NULL))) NOTNULL)); -- 0ms;
SELECT ALL CASE ((t0.c0)*(x'54b2'))  WHEN MAX(t0.c0) THEN COUNT(*) WHEN ((t0.c0) NOT NULL) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c36)+(t0.c36)) THEN (t0.c36 IN ()) ELSE CAST(t0.c0 AS BLOB) END FROM t0 WHERE (((- (0xa165ff2)) IN (CAST(']ꑪu첮Z' AS TEXT)))); -- 0ms;
SELECT DISTINCT ((((t0.c36) IS FALSE))&(((((t0.c36)OR(t0.c0)))OR(t0.c36)))), (((t0.c0 IN (t0.c0)))<=(((t0.c0)IS NOT(t0.c36)))), (((((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c36))))<>(((t0.c36 IN ())))) FROM t0 WHERE (CAST((('1560907911') NOT BETWEEN (0.6141455457238049) AND (0.9883567951707961)) AS NUMERIC)); -- 0ms;
SELECT CAST((t0.c36 IN (t0.c0, t0.c36, t0.c36)) AS TEXT) FROM t0 WHERE ((((CAST(NULL AS INTEGER), CASE -1581168396  WHEN NULL THEN NULL END, (+ ('-829340057'))))!=(((0.01739854911705907 IN ()), CAST(0.598051143244098 AS TEXT), (NULL IN ()))))); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE BINARY)>=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT ((((((t0.c0)||(t0.c36)))OR((((t0.c0, t0.c36, 0.3159195934525141)) BETWEEN ((t0.c0, t0.c36, t0.c36)) AND ((t0.c36, t0.c0, t0.c36))))))AND(((t0.c36) BETWEEN (t0.c36) AND (t0.c0)))), ((((t0.c36, x'5ba2', t0.c36)) BETWEEN ((t0.c36, t0.c36, t0.c0)) AND ((t0.c36, t0.c0, t0.c0))) IN ((('')>>(t0.c0)))), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) FROM t0; -- 0ms;
SELECT CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c36 AS NUMERIC) END, ((t0.c36 COLLATE RTRIM)>>(((t0.c36)+(t0.c36)))), (((((t0.c0))<=((t0.c36)))) NOT BETWEEN (t0.c36 COLLATE BINARY) AND (t0.c0)), (+ (t0.c0 COLLATE RTRIM)), CASE (+ (t0.c0))  WHEN x'46ffd48d' THEN CASE WHEN t0.c0 THEN 0.101409270284465 END ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) END FROM t0 WHERE (CAST((((('-423327667')OR(NULL)))AND('132278582')) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((t0.c36)) NOT BETWEEN ((t0.c36)) AND ((t0.c0))) COLLATE RTRIM, CAST((((t0.c0, t0.c36, t0.c0, t0.c36, t0.c36))>((t0.c0, t0.c0, t0.c0, t0.c36, 1296781140))) AS REAL), (~ (((t0.c0) IS FALSE))) FROM t0; -- 0ms;
SELECT DISTINCT ((((CAST(t0.c36 AS BLOB))AND((+ (t0.c36)))))OR(MIN(t0.c0))) FROM t0 GROUP BY ((((((((highlight(x'', t0.c0, t0.c36, t0.c0))AND((+ (t0.c0)))))OR(t0.c36 COLLATE NOCASE)))OR(CAST(t0.c36 AS REAL))))OR(t0.c0)) HAVING highlight(CAST(t0.c36 AS TEXT), t0.c36, ((t0.c36)>=(t0.c0)), ((t0.c36) IS TRUE));SELECT ALL SUM(CASE WHEN x'' THEN t0.c36 END) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c36 COLLATE NOCASE)AND(((t0.c36)&(t0.c0)))))OR(((((t0.c36)OR(t0.c36)))OR(t0.c0)))), CAST(GROUP_CONCAT(t0.c36) AS TEXT), SUM(((-1995149826)IS(t0.c36)) COLLATE BINARY) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c36 COLLATE NOCASE)<=(UPPER(DISTINCT '-682307285'))) FROM t0 WHERE (CASE WHEN (0Xffffffff89146dfe IN ('8鵨')) THEN ((('2>Hov2O^', '-1746905132', '')) BETWEEN ((x'', NULL, NULL)) AND ((NULL, '8o\rm/iꏎb', NULL))) END); -- 0ms;
SELECT t0.c36 COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT SUM(-1.7976931348623157E308) FROM t0; -- 0ms;
SELECT ALL ((t0.c36)&(t0.c36)) COLLATE BINARY FROM t0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (((t0.c36)LIKE(t0.c36))) AND (((t0.c0)AND(t0.c36)))) FROM t0 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT DISTINCT (('-1898850274') ISNULL) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL ((((CAST(t0.c36 AS NUMERIC))AND(CAST(t0.c36 AS BLOB))))AND(CAST(t0.c36 AS NUMERIC))) FROM t0 WHERE (((((((0.554342419550758)AND(0Xffffffff9207b189)))AND(0.4053785757645274)))IS NOT(1453426167))); -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c36))) BETWEEN (CAST(t0.c0 AS REAL)) AND (t0.c36)), ((CASE WHEN t0.c36 THEN t0.c0 ELSE x'48c5' END)IS(((((t0.c0)OR(NULL)))AND(t0.c0)))), GROUP_CONCAT(((t0.c36)/(t0.c36))), 0.7690386138886982, CASE ((t0.c36) BETWEEN (t0.c36) AND (t0.c36))  WHEN ((NULL) BETWEEN (t0.c36) AND (t0.c36)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c36)) WHEN ((t0.c0)<=(t0.c0)) THEN (t0.c36 IN (t0.c36)) WHEN CASE WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c36 END THEN ABS(t0.c0) ELSE (+ (t0.c36)) END FROM t0 LIMIT 1910354122; -- 0ms;
SELECT DISTINCT ((((((((((((json_array(t0.c36, 0.6512268678041604))OR((((t0.c36))>((t0.c36))))))AND(((t0.c36)IS(t0.c36)))))OR(NULLIF(t0.c0, t0.c0))))AND(t0.c36)))AND(NULL)))OR(((((t0.c0)AND(t0.c36)))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT CASE ((t0.c36)<<(0.3198457440698065))  WHEN ((t0.c36) IS FALSE) THEN (t0.c36 IN (t0.c36)) ELSE (((t0.c0, t0.c36, t0.c0))==((NULL, t0.c0, t0.c36))) END FROM t0; -- 0ms;
SELECT ALL (((t0.c36)) BETWEEN ((((t0.c36)*(t0.c36)))) AND ((0Xa165ff2))), CASE UPPER(t0.c0)  WHEN ((t0.c36) IS TRUE) THEN (t0.c36 IN ()) WHEN (~ (t0.c36)) THEN (t0.c36 IN ()) WHEN COUNT(t0.c36) THEN ((t0.c0) IS TRUE) WHEN (((t0.c36, t0.c0, t0.c36))==((t0.c36, t0.c36, x''))) THEN ((((((((t0.c0)OR(t0.c36)))OR(x'a715')))OR(t0.c0)))OR(t0.c36)) WHEN CAST(t0.c0 AS NUMERIC) THEN HEX(DISTINCT t0.c0) END, 0.5019679791385263 FROM t0 WHERE (((((NULL) BETWEEN (0X4a5f1979) AND (x''))) BETWEEN (CASE x'adbe'  WHEN x'fa5b' THEN x'' ELSE 0.5019679791385263 END) AND ((('1488150756')/(x''))))); -- 0ms;
SELECT DISTINCT (((NOT (t0.c0)))/(t0.c36 COLLATE NOCASE)), CAST(COUNT(t0.c0) AS TEXT), ((((t0.c0 IN ())))>=((((((t0.c36)OR(t0.c0)))AND(t0.c36))))) FROM t0 LIMIT 315112372 OFFSET -1665952700; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('PD\r)o')AND(t0.c0))) OVER () FROM t0; -- 0ms;
SELECT LEAD(CAST((~ (t0.c36)) AS INTEGER), ((CASE WHEN t0.c36 THEN t0.c0 ELSE t0.c36 END) BETWEEN (((t0.c36) NOT BETWEEN (t0.c36) AND (t0.c0))) AND (t0.c0 COLLATE RTRIM)), x'') OVER (), (((CASE t0.c36  WHEN t0.c36 THEN '1247746425' WHEN 0.6512268678041604 THEN t0.c36 WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN NULL WHEN t0.c0 THEN NULL ELSE t0.c36 END))<=((CASE WHEN t0.c0 THEN t0.c0 END))), (((654420083)/(t0.c0)) IN (0.8856628019130831, MIN('-38023968'))) FROM t0; -- 0ms;
SELECT SUM(COUNT(t0.c36)) FROM t0 WHERE (((CASE WHEN x'' THEN -1.394981377E9 ELSE NULL END)IS NOT(((NULL)<(x'868c')))));SELECT DISTINCT '-472866988' FROM t0 WHERE ((((NOT ('1106367113')))==((0.6438312468392894 IN ('', x''))))); -- 0ms;
SELECT DISTINCT ((NULL) ISNULL) COLLATE NOCASE, (CASE t0.c0  WHEN t0.c0 THEN t0.c36 ELSE t0.c0 END IN (((((t0.c36)AND(t0.c0)))OR(t0.c36)))), t0.c0, GROUP_CONCAT(((-986982942) BETWEEN (t0.c0) AND (t0.c36))) OVER (), SUM(((t0.c36)GLOB(0xffffffff86474410))) FROM t0 WHERE (((('') BETWEEN ('-1739436931') AND (x'ecb3')) IN ((('-247614049') BETWEEN ('d|똓rVvv') AND (1.453426167E9))))); -- 0ms;
SELECT ALL SUM(GROUP_CONCAT(t0.c0)), CASE WHEN ((NULL)||(t0.c36)) THEN CASE WHEN t0.c36 THEN t0.c36 ELSE t0.c36 END WHEN CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END THEN TRIM(DISTINCT t0.c0) WHEN ((((((((t0.c36)OR(t0.c0)))OR(t0.c36)))AND(t0.c36)))OR(t0.c36)) THEN t0.c36 COLLATE NOCASE ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c36 ELSE x'' END END, (((0X60610a83))>((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) FROM t0 WHERE (CASE (+ (0.34999025482493595))  WHEN (('-1289896853') IS TRUE) THEN CAST('GI' AS REAL) WHEN CAST(x'879e4a4dc5d1' AS TEXT) THEN CAST('654420083' AS TEXT) WHEN ((((0.7429193858923879)AND(x'')))AND(NULL)) THEN CAST('1653557786' AS TEXT) END) ORDER BY ((t0.c0) NOT BETWEEN (t0.c36) AND ('*,AbF2x')) COLLATE NOCASE;SELECT NULLIF(CAST(t0.c0 AS INTEGER), t0.c0 COLLATE RTRIM) FROM t0 WHERE (((((x'')*(0.363229689825898))) IS FALSE)); -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN t0.c0 THEN x'' WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c0 ELSE '1916255917' END) FROM t0 WHERE (((x'')IS NOT(0.43948804797495844)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM(((t0.c36)+(t0.c0))) OVER () FROM t0 WHERE ((NOT (2090829740 COLLATE RTRIM))) GROUP BY (((- (t0.c36))) NOT BETWEEN (((t0.c0)/(t0.c0))) AND ((t0.c36 IN ()))) LIMIT 1540823671 OFFSET -423327667; -- 0ms;
SELECT DISTINCT t0.c0, ((LIKELIHOOD(DISTINCT t0.c0, 0.7862253478798542)) IS TRUE), (t0.c36 IN ()) COLLATE RTRIM FROM t0 WHERE ((CASE WHEN 0.4336142334951878 THEN NULL ELSE '0.3098495698115934' END IN (((NULL)<(0.010972101531583789))))); -- 0ms;
SELECT ALL NTH_VALUE(((t0.c0) IS TRUE) COLLATE NOCASE, ((((t0.c36) NOTNULL)) BETWEEN (t0.c36) AND ((((t0.c0))!=((t0.c36)))))) OVER () FROM t0 ORDER BY (~ (((((t0.c36)OR(t0.c0)))AND(t0.c36)))) ASC, json_array_length((((t0.c36)) NOT BETWEEN ((NULL)) AND ((t0.c36)))), (('0.4053785757645274') NOT NULL) COLLATE BINARY ASC;SELECT DISTINCT (((((t0.c36)AND(t0.c36)))OR(t0.c0)) IN ()), TRIM((~ (t0.c36))), (((((t0.c36)) BETWEEN ((0x78bac5c4)) AND ((t0.c0)))) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c36 AS REAL)) IS FALSE) FROM t0 WHERE ((('isf_K8')>>('0.554342419550758')) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((0Xffffffffc728c628)IS(t0.c36))) ISNULL) FROM t0 GROUP BY 1.22060485E8 COLLATE NOCASE HAVING CASE WHEN COUNT(*) THEN ((t0.c0)+(t0.c0)) WHEN LIKELIHOOD(t0.c0, 0.9421008493953822) THEN ((t0.c0)<(t0.c36)) WHEN t0.c0 THEN t0.c0 COLLATE RTRIM ELSE CAST(t0.c0 AS TEXT) END; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM t0; -- 0ms;
SELECT ((CASE WHEN t0.c36 THEN t0.c0 END) NOT BETWEEN (((x'')LIKE(t0.c36))) AND (((t0.c0)+(t0.c36)))) FROM t0 WHERE (((((((NULL) ISNULL))AND(((NULL) NOTNULL))))OR((((x'0ead'))<=((0X678dc51e)))))); -- 0ms;
SELECT DISTINCT ((((t0.c36)=(t0.c0))) NOTNULL), (((t0.c36 IN (t0.c0))) ISNULL), (t0.c0 IN ()) FROM t0 GROUP BY (((t0.c0))!=(((NOT (t0.c36))))) HAVING ((t0.c36) BETWEEN (((((t0.c0)AND(NULL)))OR(t0.c0))) AND (((t0.c36) BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
SELECT ALL COUNT(CASE t0.c0  WHEN t0.c36 THEN 'N|!H%N' ELSE t0.c0 END) FROM t0 INDEXED BY i35 GROUP BY ((((((((t0.c0)AND(t0.c36)))OR(t0.c0)))AND('0.363229689825898')))OR(QUOTE(t0.c36))) HAVING (NOT (((t0.c36)%(t0.c36)))); -- 0ms;
SELECT ALL SUM(CASE NULL  WHEN t0.c36 THEN t0.c36 END) OVER () FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN MIN(x'b95c') THEN load_extension(t0.c36) WHEN (- (t0.c36)) THEN ((t0.c0)!=(t0.c36)) WHEN ((((t0.c36)OR(t0.c0)))AND(t0.c36)) THEN ((t0.c36) IS TRUE) ELSE ((t0.c36) IS TRUE) END FROM t0 WHERE (CASE WHEN '1846645747' COLLATE RTRIM THEN 0.7850734643638247 COLLATE NOCASE END) ORDER BY t0.c36 ASC  NULLS FIRST, (((t0.c36 IN ()))-(((t0.c0)*(t0.c36)))) ASC  NULLS LAST; -- 0ms;
SELECT ALL CAST(((t0.c0)<<(t0.c36)) AS TEXT), ((((((t0.c36)) NOT BETWEEN (('')) AND (('359244312')))))!=((TYPEOF(t0.c36)))), (((t0.c36, t0.c0, '-7289315')) NOT BETWEEN ((((t0.c0) NOT NULL), (~ (t0.c36)), ((((((((t0.c0)OR(t0.c0)))AND(t0.c36)))OR(t0.c36)))OR(x'')))) AND ((((t0.c0) BETWEEN (t0.c36) AND (t0.c36)), (((t0.c0, t0.c0, -1844989559))>=((t0.c0, NULL, t0.c0))), CAST('' AS NUMERIC)))) FROM t0 WHERE ('j!E%3浺u'); -- 0ms;
SELECT DISTINCT (((t0.c36, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c36) BETWEEN (t0.c0) AND (t0.c0)), CASE t0.c0  WHEN t0.c36 THEN t0.c36 ELSE t0.c36 END, COUNT(*))) AND ((((t0.c36) IS FALSE), t0.c36 COLLATE BINARY, ((t0.c0)>=(t0.c36))))), CASE CASE t0.c36  WHEN t0.c0 THEN t0.c0 WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN (((t0.c36))<=((t0.c0))) THEN (t0.c0 IN ()) END, ((((CASE t0.c36  WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END)AND(x'')))OR(CAST(t0.c0 AS NUMERIC))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))|(t0.c0 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT ALL highlight(((((((((t0.c0)OR(t0.c0)))AND(t0.c36)))OR(t0.c0)))OR(t0.c36)), t0.c36, (~ (t0.c36)), (+ (t0.c36))), t0.c0, ((((t0.c36)LIKE(t0.c0))) BETWEEN (COUNT(t0.c36)) AND (0xffffffffd9f30937)) FROM t0 WHERE (((CASE WHEN '-90527678' THEN 0Xffffffffce279dc3 ELSE ']blRtb~0' END) NOT NULL));SELECT ALL ((t0.c36) IS FALSE), CUME_DIST() OVER ( GROUPS ((((CASE t0.c36  WHEN t0.c0 THEN '0.6141455457238049' WHEN t0.c0 THEN t0.c0 WHEN 'IAnP#E' THEN x'0365' ELSE t0.c36 END)AND((t0.c36 IN (t0.c0, t0.c0)))))AND(((t0.c0) IS TRUE))) PRECEDING EXCLUDE TIES), ((t0.c36) IS FALSE) FROM t0 WHERE (CAST((((NULL)) BETWEEN (('-638383817')) AND ((x''))) AS NUMERIC)) LIMIT -1345027362; -- 2ms;
SELECT ALL t0.c36 FROM t0 WHERE (CASE (('1389086670')=(0.848847058741469))  WHEN (((1560907911)) BETWEEN ((x'93f4')) AND ((-232542664))) THEN NULL END); -- 0ms;
SELECT TOTAL((- (t0.c0))) OVER ( ORDER BY ((((((((((((t0.c36 COLLATE BINARY)AND(((((t0.c36)OR(t0.c36)))AND(t0.c0)))))AND((((('-1877719867')AND(t0.c0)))OR(t0.c36)))))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c36)))OR(t0.c36)))))OR(RTRIM(t0.c0))))OR(((((((((t0.c0)OR(NULL)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST) FROM t0; -- 0ms;
SELECT DISTINCT (NOT (COUNT(*))) FROM t0; -- 0ms;
SELECT t0.c36 FROM t0 WHERE (((((0X48a65cb) NOT BETWEEN ('') AND (x'c91d')))>(NULL))) GROUP BY (((- (t0.c0))) BETWEEN (t0.c0) AND (t0.c0 COLLATE NOCASE)); -- 1ms;
SELECT ALL ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c36)))AND(t0.c36)))*((((t0.c0))<=((t0.c0))))) FROM t0 WHERE (((x'') BETWEEN ((~ (0.7029040789065392))) AND (UPPER(DISTINCT '}z|')))); -- 0ms;
SELECT ALL (((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c0 END)))OR(CAST(t0.c36 AS INTEGER))) FROM t0 WHERE (((((1.453426167E9)/('868773439'))) NOT BETWEEN (CAST(x'5e61' AS BLOB)) AND (((x'8502')-(-1142939160))))) GROUP BY (((((t0.c0))<((t0.c0)))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((((t0.c0)AND(t0.c0)))OR(t0.c0)))), CASE ((t0.c0) BETWEEN (NULL) AND (t0.c0))  WHEN ((t0.c36) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c36)OR(t0.c0)))OR(t0.c36)) WHEN t0.c0 THEN (((t0.c36)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((((t0.c36)OR(t0.c36)))AND(t0.c36)) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c36)))AND(t0.c0)) ELSE ((((t0.c0)OR(t0.c36)))AND(t0.c0)) END, ((((t0.c36)AND(t0.c36)))AND(t0.c0)) COLLATE BINARY; -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN ((((t0.c36)=(t0.c0)))) AND ((((t0.c36)<=(t0.c0))))), LAST_VALUE(((CHAR('1432372601')) NOTNULL)) OVER (), ((CAST(t0.c36 AS REAL))AND(t0.c0)) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END) OVER () FROM t0 WHERE (((((((NULL)*('-1995149826')))AND((1314309615 IN ()))))OR((~ (NULL))))); -- 0ms;
SELECT DISTINCT CAST(json_type(t0.c36) AS NUMERIC) FROM t0 WHERE (x''); -- 1ms;
SELECT ALL ((UPPER('0.7029040789065392'))GLOB(((0xffffffffb2fdf53d) ISNULL))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c36, (((t0.c0) IS TRUE) IN ()), (((('0.7690386138886982')AND(((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c36)))))OR(CASE t0.c36  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN (t0.c36, 0.7382225122758256))) NOT BETWEEN (t0.c36) AND ((((t0.c0, t0.c0, t0.c36))<=((t0.c36, t0.c36, t0.c36))))), (+ (GROUP_CONCAT(t0.c36))), COUNT(*) OVER ( ORDER BY CASE (((t0.c0, 0.9140828526128093, t0.c0)) NOT BETWEEN ((t0.c0, t0.c36, '-1039151954')) AND ((t0.c0, t0.c0, t0.c36)))  WHEN CASE t0.c36  WHEN 1.916255917E9 THEN t0.c0 ELSE t0.c36 END THEN (+ (x'0253aaa0')) END ROWS ((CASE WHEN t0.c0 THEN t0.c0 END)>('1560907911')) PRECEDING EXCLUDE GROUP) FROM t0 WHERE (CASE ((x'9e6b')IS('-1206313414'))  WHEN ((0.6874676623867083) ISNULL) THEN (((('*,abf2x')AND(0.9418768344585443)))OR(0.2039995928602628)) WHEN 0.4672059412508279 COLLATE BINARY THEN ((0.8808154363601617) IS FALSE) WHEN CAST(-1.9597143E7 AS REAL) THEN ((0.9372957818873331) NOT BETWEEN (NULL) AND ('')) ELSE (((0xffffffffece06efb)) NOT BETWEEN ((NULL)) AND ((0.34635944120865836))) END);SELECT DISTINCT (((- (t0.c0)))GLOB((- (t0.c36)))) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE RTRIM IN ()), TOTAL((((t0.c36))<>((t0.c36)))), NTH_VALUE((- ((((t0.c36))>=((t0.c0))))), ((((t0.c0 COLLATE RTRIM)OR(t0.c0)))AND((- (t0.c36))))) OVER () FROM t0 WHERE (CASE WHEN NULL THEN (('1540823671') NOT BETWEEN (0.9354482880601007) AND ('FKeee')) ELSE ((-6.82307285E8)<('2143271808')) END) GROUP BY CAST(t0.c0 COLLATE BINARY AS REAL);SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c0 END) AND (NULL)) FROM t0; -- 0ms;
SELECT DISTINCT MIN(CAST(t0.c36 AS REAL)) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 LIMIT 596732327; -- 0ms;
SELECT DISTINCT COUNT(t0.c36) COLLATE BINARY COLLATE NOCASE, ((((0.18040249880677983)OR((t0.c36 IN (t0.c36)))))OR(COUNT(t0.c0))), (- (((t0.c0)>(t0.c36)))) FROM t0 WHERE (('z_' COLLATE NOCASE IN (CAST(x'' AS BLOB)))) GROUP BY (((((NOT ('#5?v]온')))OR((((t0.c36)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR((t0.c36 IN ()))); -- 0ms;
SELECT t0.c0 FROM t0 WHERE ((((x'', '76178891', 0x6ae4cd8e, 'vjQOzK', '1e500')) BETWEEN ((((('47C/', x'6dd1', '')) BETWEEN ((0.363229689825898, 0.5022594230104759, '824585134')) AND ((NULL, '!7', NULL))), (- (0.47250016886343404)), TRIM(NULL, 0.3334021179172546), ((NULL)||('-1746905132')), (('-1926084104') NOT NULL))) AND ((MAX('690415855', NULL), CAST('1793379726' AS NUMERIC), (~ (169522707)), 0.21677871470138044, CASE WHEN NULL THEN '360860594' ELSE x'86fe' END)))); -- 0ms;
SELECT ALL ((t0.c36) BETWEEN ('0.9153940587256553') AND (t0.c36)) COLLATE BINARY COLLATE RTRIM, CASE 0.9286385914494263  WHEN ((t0.c36) IS TRUE) THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)-(t0.c0)) THEN 0Xffffffff85f5ab0c WHEN ((((t0.c36)OR(t0.c0)))OR(t0.c36)) THEN ((t0.c36)GLOB(t0.c36)) END, (((~ (t0.c36)))>=(((t0.c0) NOT NULL))) FROM t0 LIMIT -107997868; -- 0ms;
SELECT DISTINCT LAG(CASE WHEN t0.c0 THEN NULL WHEN t0.c36 THEN t0.c0 WHEN t0.c36 THEN '-961389261' ELSE t0.c0 END COLLATE BINARY, json_array_length(CAST(t0.c0 AS INTEGER), ((t0.c36)*('-q'))), ((t0.c36)<(((((t0.c0)AND(t0.c36)))OR(t0.c36))))) OVER (), ((((0.35457711124742064)OR(CAST(t0.c0 AS REAL))))AND(ABS(DISTINCT -2.32542664E8))), (((((((((t0.c36 IN (t0.c0, t0.c0)))OR(((t0.c36) BETWEEN (0.5317122261396936) AND (t0.c0)))))OR((t0.c36 IN ()))))OR((NOT (t0.c0)))))OR(t0.c36 COLLATE NOCASE)), (- ((t0.c0 IN (t0.c36)))), LAST_VALUE((+ (CASE WHEN t0.c0 THEN '1NT' END))) OVER () FROM t0;SELECT ALL CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c36))  WHEN (NOT (t0.c0)) THEN load_extension(t0.c36) WHEN (t0.c36 IN ()) THEN CAST(t0.c36 AS TEXT) WHEN MIN(t0.c0) THEN ((t0.c36)GLOB(t0.c36)) ELSE LIKELIHOOD(x'', 0.7030084045302721) END, (((~ (t0.c36))) BETWEEN (((t0.c36) ISNULL)) AND (LIKELIHOOD(DISTINCT t0.c36, 0.5770325360467552))), ((((((t0.c0)AND(0.7580498995858783)))AND(t0.c36)))+(t0.c0 COLLATE BINARY)) FROM t0 WHERE (0X71ddb0ca);SELECT DISTINCT ((((t0.c0) NOTNULL))-((((0.8139835435214077)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0 WHERE ((~ ((x'' IN ())))) GROUP BY (- (CASE t0.c36  WHEN x'' THEN t0.c0 END)); -- 0ms;
SELECT COUNT(*) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c0)AND(t0.c36)))OR(t0.c36)))IS(UNLIKELY(t0.c36))) FROM t0 WHERE (((((x'') NOT BETWEEN ('5?') AND (NULL)))&(((x'5505') NOT BETWEEN (0.7557666503776711) AND ('-513703532'))))) ORDER BY ((((t0.c36) IS FALSE)) BETWEEN ('-376248239') AND ('1247746425')) ASC  NULLS LAST, (t0.c36 IN ()) COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT ALL (((((((((t0.c0 IN (t0.c36)))AND(((('1'))<=((NULL))))))OR(NULLIF(DISTINCT t0.c36, t0.c36))))OR(t0.c36)))AND(0.9091261509289977)) FROM t0; -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN ()) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c36 THEN t0.c36 ELSE t0.c0 END)+(((t0.c36) IS FALSE))) FROM t0; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY t0.c36 ASC  NULLS LAST), (AVG(t0.c36) IN ()), ((((((t0.c36) NOT BETWEEN (NULL) AND ('393599226')))AND(t0.c36)))AND(t0.c36 COLLATE NOCASE)) FROM t0 ORDER BY (((t0.c0)) BETWEEN ((COALESCE(t0.c0, t0.c36, t0.c36, t0.c0))) AND ((((t0.c36) ISNULL)))) ASC, ((((((t0.c36)IS(t0.c36)))AND('-1142939160')))OR(ABS(DISTINCT t0.c0)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((CASE t0.c36  WHEN t0.c0 THEN t0.c36 END))<((0.5091263064338561))) FROM t0 GROUP BY CAST((t0.c0 IN ()) AS TEXT), ((((((t0.c0)IS(t0.c0)))OR((t0.c0 IN (t0.c0, t0.c0)))))AND((- (t0.c36)))), CAST(t0.c36 COLLATE NOCASE AS TEXT) HAVING (+ ((t0.c0 IN (t0.c0, t0.c0)))); -- 0ms;
SELECT DISTINCT (NOT (0.8984516874309137)), COUNT((((((((((((('2090829740')AND(t0.c36)))AND(t0.c0)))OR(t0.c36)))OR(t0.c0)))AND(t0.c36)))AND(t0.c36))) OVER (), (((t0.c0)) NOT BETWEEN (((t0.c0 IN (NULL, '0.598051143244098')))) AND ((LIKELY(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL (((t0.c36, 0.4541715899409473, t0.c0)) NOT BETWEEN ((NULL, COALESCE(DISTINCT t0.c36, t0.c36), ((t0.c0) ISNULL))) AND (((t0.c36 IN (t0.c36, t0.c36)), ((((((((t0.c36)AND(t0.c36)))OR(t0.c0)))OR(t0.c0)))AND(t0.c36)), (t0.c36 IN ())))), json_object(((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c36))<((t0.c36)))), TYPEOF(DISTINCT CAST(t0.c0 AS REAL)) FROM t0 WHERE (NULL) GROUP BY (((((t0.c36)OR(t0.c36)))AND(t0.c0)) IN ()); -- 0ms;
SELECT DISTINCT '0.9154211302427065', '-281732859', AVG((t0.c36 IN (t0.c36))) OVER () FROM t0; -- 0ms;
SELECT COUNT(*) FILTER(WHERE ((((((((t0.c0)OR(t0.c36)))OR(t0.c36)))OR(t0.c0)))OR(t0.c36)) COLLATE NOCASE COLLATE NOCASE) OVER () FROM t0; -- 0ms;
SELECT ((CAST(t0.c36 AS INTEGER))>(CAST(t0.c0 AS TEXT))) FROM t0 WHERE (CASE CAST(1371980286 AS NUMERIC)  WHEN ((x'')>>(0X48421d18)) THEN ((((0.34319360585172776)AND('6{')))OR(NULL)) END); -- 0ms;
SELECT DISTINCT ((((((((t0.c36)OR(CASE WHEN t0.c36 THEN t0.c36 END)))OR(t0.c0)))OR(CAST(t0.c36 AS BLOB))))AND(t0.c0)), (((((t0.c36))==((t0.c36))))OR(t0.c0 COLLATE RTRIM)), LIKELIHOOD(DISTINCT MIN(t0.c0), 0.5473964168724094) FROM t0 WHERE (((~ (-1074795370)) IN (IFNULL(-399449348, NULL)))); -- 0ms;
SELECT DISTINCT CAST(((x'')!=(t0.c36)) AS BLOB) FROM t0 ORDER BY ABS(DISTINCT (- (t0.c0))) DESC; -- 0ms;
SELECT ALL CAST(t0.c36 AS TEXT) FROM t0; -- 0ms;
SELECT ALL (((t0.c36)) BETWEEN ((((x'') BETWEEN (t0.c36) AND (t0.c36)))) AND ((((t0.c0) NOT NULL)))) FROM t0 WHERE (TYPEOF((((((((((((('-1521871582')OR(0.042165210925146024)))AND(-2.029411378E9)))AND(x'')))AND('-1291979459')))OR(x'')))OR(0X75d4f5e6)))); -- 0ms;
SELECT t0.c36 FROM t0 WHERE (LIKELY(((0.711002077423726)!=(-1521871582)))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(CAST(t0.c36 AS INTEGER)), ((((((((((t0.c0) IS TRUE))OR(t0.c36)))AND(ABS(t0.c0))))OR(((0.0065583137701366034)!=(t0.c0)))))OR(CAST(t0.c36 AS REAL))), NULL FROM t0; -- 0ms;
SELECT ALL (+ ((t0.c0 IN ()))) FROM t0 WHERE ((((((0.46534106667592723)OR(0.5814302044688627)))OR(NULL)) IN ())); -- 0ms;
SELECT ALL t0.c0, 'K)K', (((((((((t0.c0)AND(t0.c36)))AND(t0.c0)))AND(t0.c36)))AND(t0.c0)) IN ()) FROM t0 WHERE (((x'')&(0.8110660673836024)) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT t0.c36 FROM t0 WHERE ((((((((((((((((NULL)AND(0.7256346845306998)))OR(NULL)))OR('-2083977329')))OR(315112372)))OR('MQ')))OR('u#Z'))))>=((((NULL) NOT BETWEEN ('-232542664') AND (NULL)))))) LIMIT -109523482; -- 0ms;
SELECT ((t0.c0 COLLATE NOCASE)<(t0.c36 COLLATE NOCASE)), CAST(((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c0)) AS TEXT), (('24441317')/(NULL)) FROM t0 WHERE ((((((('\n')OR(NULL)))OR('j[%Z')))OR(TYPEOF('')))) LIMIT 1247746425; -- 0ms;
SELECT ((CAST(t0.c36 AS REAL))IS NOT((((t0.c36, t0.c0, 0.6429132057239364)) BETWEEN ((t0.c0, t0.c36, t0.c36)) AND ((t0.c36, t0.c36, t0.c36))))) FROM t0 WHERE ((((((((((((((('-1142939160')IS NOT(-1374704859)))OR((((('')AND('1263817921')))OR('ⅤdrmXY7I')))))OR(((((0.005091571338696088)OR(1056328591)))OR(NULL)))))AND((((x'', '-1746905132', '	W'))>((0x48a65cb, x'', 0.8937425314640869))))))AND((('-1923998028')<<(NULL)))))OR(((((((((NULL)OR('1737344286')))OR('-1197438903')))AND('0.9418768344585443')))OR(x'')))))OR((((((((('')OR('290410519')))AND('-1206313414')))AND(NULL)))OR('1561640750'))))); -- 0ms;
SELECT DISTINCT ((((t0.c0)+(t0.c0))) IS FALSE), SUM((t0.c0 IN ())) OVER (), ((((t0.c0)<=(t0.c36)))/(((t0.c0) NOTNULL))), x'', '568937386' FROM t0 WHERE (CASE WHEN CASE WHEN 0.07131366221537683 THEN ')a' END THEN ((NULL)AND(NULL)) WHEN (((('j{QV[A')OR(2056038796)))AND(NULL)) THEN 0.6512268678041604 WHEN 0.5801498403332462 COLLATE RTRIM THEN ((1.263817921E9)|(NULL)) END); -- 1ms;
SELECT DISTINCT ((COUNT(t0.c36)) IS TRUE) FROM t0 WHERE ((~ (CAST('-232542664' AS REAL)))) GROUP BY ((t0.c36)>=(1560907911)) HAVING IFNULL(NULL, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c36))); -- 0ms;
SELECT ALL (((t0.c0) BETWEEN (t0.c36) AND (t0.c0)) IN ()), ((((((t0.c0)/(t0.c0)))OR(((((((((t0.c36)OR(t0.c0)))AND(t0.c36)))AND(t0.c36)))AND(t0.c0)))))AND(t0.c0 COLLATE NOCASE)), (NOT (SUM(t0.c0))) FROM t0 WHERE ((((('1432372601') IS TRUE))!=(((x'')/(NULL))))); -- 0ms;
SELECT ((GROUP_CONCAT(t0.c36))IS(((t0.c36) NOTNULL))) FROM t0 WHERE (((DATE('1866572906', 'A', x'8687')) BETWEEN ((((NULL)) BETWEEN ((x'')) AND ((x'9c7f')))) AND (((NULL) ISNULL)))) GROUP BY ((((0.6429132057239364, t0.c36, t0.c36)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c36, t0.c36, t0.c36))) IN ()) HAVING (((((t0.c0, t0.c0, t0.c36)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((-1.039151954E9, t0.c36, t0.c0)))) NOT BETWEEN (((((((((t0.c36)OR(t0.c36)))OR(t0.c36)))AND(t0.c0)))AND(t0.c0))) AND (((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c36)))); -- 0ms;
SELECT ALL (CAST(t0.c36 AS REAL) IN ()), ((((x'')>=(t0.c36))) NOT BETWEEN (GLOB(t0.c0, t0.c36)) AND (t0.c0 COLLATE NOCASE)), ((((((((((t0.c0)OR(t0.c36)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))<((((t0.c36)) BETWEEN ((t0.c0)) AND ((t0.c0))))), ((((((NULL))<((t0.c0)))))>(('8o\rm/iꏎb'))), ((t0.c36 IN ()) IN ()) FROM t0 WHERE (((((((((((0.5495418333125062)IS(x'')))OR((+ (0.8359179619556969)))))OR(IFNULL(DISTINCT NULL, NULL))))AND(((NULL) NOT BETWEEN ('-276536262') AND ('l')))))OR(((0.719621896950762)>(0.9153940587256553))))); -- 0ms;
SELECT DISTINCT (((t0.c36)) BETWEEN ((t0.c0 COLLATE BINARY)) AND (((((t0.c0, t0.c36, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c36)) AND ((t0.c36, t0.c36, t0.c36)))))), CAST(((t0.c36)IS NOT(t0.c36)) AS TEXT), COUNT(*) FROM t0 WHERE (INSTR(CASE WHEN '7n>睉뱫M,' THEN x'39ed' ELSE '1916255917' END, ((NULL)|('1106367113')))); -- 0ms;
SELECT (((NULL)) NOT BETWEEN ((((((t0.c36)AND(t0.c0)))AND(t0.c36)))) AND ((('ἣ ' IN ())))), ((t0.c0 IN ()) IN ()), (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()), COUNT(*), '271862204' FROM t0 WHERE ((((((NULL)!=(''))))>=(((+ ('-14306683')))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c0))&((t0.c36 IN (t0.c36, t0.c0)))) FROM t0 WHERE (((NULL COLLATE BINARY)OR('-1724455671' COLLATE BINARY))); -- 0ms;
SELECT ALL (+ (MIN(t0.c36))) FROM t0; -- 0ms;
SELECT DISTINCT ((0.21265187923025985)>>(AVG(t0.c0))), (((t0.c36)) NOT BETWEEN (((t0.c0 IN (t0.c0, t0.c36)))) AND ((((NULL) BETWEEN (t0.c0) AND (t0.c36))))), ((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c36)) COLLATE NOCASE FROM t0 WHERE ((((((~ (-7289315)))AND(((x'') BETWEEN (x'a77e') AND (NULL)))))OR((('Ino)첮') NOT BETWEEN (x'') AND ('-953629144'))))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c36 COLLATE NOCASE THEN (t0.c0 IN ()) ELSE t0.c0 END, ((NULLIF(0.554342419550758, t0.c0)) BETWEEN ((((t0.c0))<((NULL)))) AND (CAST(t0.c36 AS INTEGER))), CAST(MAX(t0.c36) AS NUMERIC), ((((((t0.c36) BETWEEN (t0.c0) AND (t0.c36)))AND(t0.c0)))AND(MAX(t0.c0))), (((((t0.c0) ISNULL)))=((t0.c36))) FROM t0 GROUP BY (((+ (t0.c36)))&(x'')), (((~ (t0.c0))) NOT BETWEEN (CASE t0.c36  WHEN t0.c36 THEN t0.c0 ELSE t0.c36 END) AND (t0.c36)), ((LIKELY(t0.c0))>=(IFNULL(t0.c0, t0.c0))) HAVING (COUNT(t0.c0) IN (((t0.c36) IS TRUE), (t0.c0 IN (t0.c36, t0.c0)))); -- 0ms;
SELECT ALL TRIM(DISTINCT ((t0.c0)+(t0.c36))) FROM t0 WHERE (((((((0xa165ff2)%(0.36644619625544217)))AND(x'')))AND('cHag!~w'))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c36 AS BLOB)) NOT BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (((t0.c36) NOT BETWEEN (t0.c36) AND (0.676655993642188)))) FROM t0 WHERE (((((((((NULL)AND('')))AND(-107997868)))OR(0X467dd8cf)))OR((((0.9732426066297101)) NOT BETWEEN (('1050076307')) AND ((NULL)))))); -- 0ms;
SELECT ((GROUP_CONCAT('1818091205')) BETWEEN ((((t0.c36))>((t0.c36)))) AND (((t0.c0) BETWEEN (t0.c36) AND (t0.c36)))) FROM t0 WHERE ((((- (x'')))IS NOT(((1248778873) BETWEEN (8.8597411E7) AND ('-1337818774'))))); -- 0ms;
SELECT ALL LAST_VALUE(((((((((((((t0.c36)AND(t0.c0)))OR(t0.c36)))OR(t0.c36)))OR(((t0.c36)||(t0.c36)))))OR(((t0.c0) NOTNULL))))AND(((t0.c36)GLOB(t0.c0))))) OVER (), TOTAL(AVG(CAST(t0.c36 AS REAL))), CASE WHEN t0.c0 THEN (t0.c36 IN ()) WHEN ((NULL) NOT NULL) THEN (t0.c0 IN ()) WHEN (t0.c36 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c0 ELSE t0.c36 END ELSE CASE t0.c36  WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c36 END END FROM t0 WHERE (((((+ (NULL))))<(((('-/Y43Eꛡx') NOTNULL))))) LIMIT -1264973357 OFFSET 777871833;SELECT DISTINCT LIKELY(CASE WHEN t0.c0 THEN t0.c0 END) FROM t0; -- 0ms;
SELECT ALL COUNT(((t0.c36) ISNULL)), x'', COALESCE(((t0.c36) IS FALSE), (((t0.c0, t0.c36, t0.c36))<=(('-1793454088', t0.c36, NULL))), COUNT(t0.c36), CASE t0.c36  WHEN t0.c36 THEN t0.c36 ELSE t0.c0 END) FROM t0 WHERE ((~ ('[/i1'))); -- 0ms;
SELECT (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE), x'', ((t0.c36 IN ()) IN (((t0.c36)*('-1560631141')))) FROM t0 ORDER BY CAST('-150249123' AS INTEGER) ASC  NULLS FIRST, (((~ (t0.c36)))&(((0.8917975600183888) IS TRUE))) ASC; -- 0ms;
SELECT DISTINCT (((t0.c0))<=((t0.c0))) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT (((((((((((((('-Q')||(t0.c0)))AND((((t0.c0))<((t0.c0))))))OR(CAST(t0.c0 AS REAL))))AND(TOTAL(t0.c36))))OR(COUNT(t0.c0))))OR((((t0.c36)) BETWEEN ((t0.c0)) AND ((2.09082974E9))))))AND(((t0.c36)&(t0.c36)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((CASE t0.c36  WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END)AND(t0.c0 COLLATE NOCASE)))OR(SUM(t0.c36))), (((t0.c0 IN (t0.c36, t0.c36))) BETWEEN (CASE t0.c36  WHEN NULL THEN t0.c0 WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN t0.c0 END) AND (TRIM(t0.c0))), (+ (LIKELY(t0.c0))) FROM t0 ORDER BY ((((((t0.c0)<<('4706307')))OR(TYPEOF(t0.c36))))AND(((((t0.c36)AND(t0.c36)))OR(t0.c36)))); -- 0ms;
SELECT DISTINCT ((t0.c0)||(((t0.c36)LIKE(t0.c0)))), COUNT((t0.c0 IN ())) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES), ((t0.c0)GLOB(NULL)) FROM t0; -- 0ms;
SELECT DISTINCT ((((0.07722809452335566)AND(((t0.c0) NOT NULL))))OR((((t0.c36, t0.c36, t0.c0))<=((t0.c36, t0.c36, t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((((((((t0.c36)AND(t0.c36)))OR(t0.c0)))OR(t0.c0)))OR(t0.c36))), CASE ((t0.c0) NOT NULL)  WHEN ((t0.c36)<>(t0.c36)) THEN LIKE(t0.c0, t0.c36, 'G') WHEN (((t0.c36)) BETWEEN ((t0.c0)) AND ((t0.c36))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((t0.c0) NOTNULL) THEN CASE WHEN t0.c36 THEN t0.c0 END ELSE ((x'')=(t0.c0)) END, TOTAL(t0.c0) FROM t0 ORDER BY (t0.c0 COLLATE RTRIM IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (CASE t0.c0  WHEN t0.c36 THEN t0.c36 END IN ((NOT (t0.c0)))) FROM t0; -- 1ms;
SELECT DISTINCT ((((((((((((t0.c0)AND(t0.c36)))OR(t0.c36)))OR(t0.c36)))AND(t0.c0)))OR(((((((((t0.c36)AND(t0.c36)))OR(t0.c36)))OR(t0.c36)))OR(t0.c36)))))AND(t0.c36 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT ((LAST_INSERT_ROWID()) BETWEEN (t0.c0) AND (CASE WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN '' THEN t0.c36 ELSE t0.c36 END)), AVG('-1938549275') OVER (), ((NULL COLLATE RTRIM) IS FALSE) FROM t0; -- 0ms;
SELECT (((((((('60731224')OR(CASE t0.c36  WHEN t0.c36 THEN t0.c0 ELSE t0.c36 END)))AND(((t0.c0) NOT BETWEEN (0.4656820228417504) AND (t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c36 END)))OR((((t0.c0))>=((t0.c0))))), (+ ((t0.c0 IN ()))), (~ (((t0.c0) BETWEEN (t0.c36) AND (t0.c36)))) FROM t0 WHERE ((~ (-1857079101 COLLATE NOCASE))) LIMIT -320835845 OFFSET -1760165856; -- 0ms;
SELECT (~ (CAST(t0.c0 AS REAL))) FROM t0; -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END) NOTNULL), AVG(((t0.c36)>(t0.c0))) OVER ( PARTITION BY (((t0.c36 COLLATE BINARY))!=((((((t0.c0)AND(t0.c36)))AND(t0.c0))))), ((NULLIF(t0.c36, t0.c0))-((t0.c36 IN ())))), ((((((((((((((t0.c36)OR('][')))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c36))) NOT NULL) FROM t0 WHERE (LIKELY(0.010151646257569813) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT ((((t0.c36)>(t0.c0)))%(((t0.c0) IS TRUE))) FROM t0 WHERE (CASE ('1861822936' IN ())  WHEN ((0.21265187923025985)*(NULL)) THEN (- ('')) WHEN CASE WHEN 'B钵' THEN '' WHEN '-294860634' THEN x'' WHEN '1655574794' THEN -1795531798 END THEN UNLIKELY(DISTINCT x'') WHEN (0.6608760899981582 IN (0.6573197832599418, '')) THEN CAST(NULL AS REAL) ELSE (~ (x'4d9ed78b')) END); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT NULL))>>((t0.c0 IN (t0.c0, t0.c36)))) FROM t0 LIMIT -1926084104; -- 0ms;
SELECT DISTINCT (((((t0.c0)AND(t0.c0)))AND(t0.c0)) IN ((((t0.c36))<((t0.c36))))) FROM t0; -- 0ms;
SELECT (((CASE t0.c0  WHEN NULL THEN t0.c36 END))!=((((t0.c36) NOT NULL)))) FROM t0; -- 0ms;
SELECT ALL x'' FROM t0 WHERE ((((CAST(x'80129f0a' AS REAL)))=(((('L3') NOT NULL))))); -- 0ms;
SELECT ALL SUM((+ (t0.c36))) OVER () FROM t0 WHERE (((CASE NULL  WHEN ' \n' THEN NULL ELSE '' END) NOT NULL)); -- 0ms;
SELECT ALL CASE WHEN (t0.c0 IN ()) THEN GROUP_CONCAT(t0.c0) ELSE NULL END FROM t0; -- 0ms;
SELECT DISTINCT (NOT (((t0.c36)<=(t0.c36)))), (((t0.c0)) NOT BETWEEN (((((t0.c0))>=((t0.c36))))) AND ((MIN(0.3722544638575901, t0.c0)))), ((((HEX(DISTINCT t0.c36))OR((+ (t0.c36)))))AND(COUNT(t0.c36))) FROM t0; -- 0ms;
SELECT ALL (- (CASE t0.c0  WHEN t0.c0 THEN 0.348383406019959 END)) FROM t0; -- 0ms;
SELECT ((((((((-1.676305796E9)OR(x'')))AND(t0.c0)))AND(TYPEOF(t0.c0))))OR(CASE WHEN t0.c36 THEN t0.c36 END)) FROM t0 WHERE (((CAST(0x2926e8ef AS BLOB))GLOB(x'' COLLATE NOCASE))); -- 0ms;
SELECT ((t0.c0) BETWEEN (COUNT(*)) AND (AVG(t0.c36))) FROM t0; -- 0ms;
SELECT COUNT(CAST(t0.c0 AS REAL)) OVER (), (((((t0.c0))==((t0.c0))))>>(MIN(t0.c0))), TOTAL((t0.c0 IN (t0.c0, t0.c0))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c36 AS TEXT))AND(t0.c0 COLLATE NOCASE)) FROM t0 WHERE (UNLIKELY(x'' COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((((t0.c0, t0.c36, t0.c36, t0.c36, t0.c0))>((t0.c0, t0.c0, '1970128735', t0.c0, t0.c0))) IN ()), 916182987, (((((((t0.c36)OR(t0.c36)))AND(t0.c0)), ((t0.c0) NOT NULL), (NOT (t0.c0))))==((CAST(t0.c0 AS NUMERIC), t0.c0, t0.c36 COLLATE BINARY))) FROM t0 WHERE (CAST('0.0' AS INTEGER)); -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((0.027978700152809344)) AND ((t0.c36))) COLLATE NOCASE COLLATE RTRIM, (CAST(t0.c36 AS TEXT) IN ()), CAST(x'' AS INTEGER) FROM t0; -- 1ms;
SELECT DISTINCT ((t0.c36) NOT NULL) FROM t0 WHERE (((CAST(0.3582663046704492 AS TEXT)) BETWEEN (((NULL) NOTNULL)) AND (((-326955722)<=(0.4328686509391868))))); -- 0ms;
SELECT ALL (+ (((t0.c36) BETWEEN (t0.c0) AND (0.14767313987219588)))) FROM t0; -- 0ms;
SELECT ALL 0.41523468831972865 COLLATE RTRIM FROM t0 WHERE ((((+ (1771935151))) BETWEEN (((((x'')AND(x'')))AND(-1871140850))) AND ((((('FHa埔')OR(NULL)))AND('iOO>CR'))))); -- 0ms;
SELECT DISTINCT (~ (t0.c0 COLLATE BINARY)), COUNT(JULIANDAY(t0.c0, t0.c0, t0.c36, t0.c36, x'')), ((((CAST(t0.c36 AS REAL))OR(((t0.c36)>=(x'895e')))))AND(CASE t0.c36  WHEN t0.c36 THEN t0.c36 END)) FROM t0 WHERE (HEX(DISTINCT (x'' IN ()))); -- 0ms;
SELECT (t0.c36 IN ((t0.c36 IN ()))) FROM t0 WHERE ((((HEX(NULL)))<=((((((NULL)AND(0.32114248006041846)))AND(0.36644619625544217)))))); -- 0ms;
SELECT (((AVG(t0.c0)))<((CAST(t0.c36 AS BLOB)))), COUNT(TYPEOF(DISTINCT t0.c0)), (~ (t0.c36)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c36)IS NOT(t0.c36))) NOT NULL) FROM t0; -- 1ms;
SELECT ((t0.c0)GLOB(t0.c0)) COLLATE RTRIM, ABS(DISTINCT (((x'8e83')) NOT BETWEEN ((t0.c36)) AND ((41979188)))), ((t0.c36)&(((t0.c0)<(t0.c36)))) FROM t0 WHERE (CAST((((0X7221f598, 0.7336622072873014, 0.46181464991108123))<=((0X2701a873, '-1633266435', '271862204'))) AS REAL)) GROUP BY (((+ (t0.c0))) IS FALSE) HAVING ((CAST(t0.c0 AS TEXT))>(((t0.c36) ISNULL))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE ((((0.28258358354740387) NOT BETWEEN ('-1e500') AND ('-1206313414')) IN ())); -- 0ms;
SELECT ALL 0.6521772785671829 FROM t0; -- 0ms;
SELECT CAST(MAX(t0.c0) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL ((((NOT (t0.c36))))<((((t0.c36) BETWEEN (t0.c0) AND (t0.c0))))), (((t0.c36)) NOT BETWEEN ((((t0.c0)&(t0.c0)))) AND (((((t0.c0))<=((t0.c36)))))), (('l2儯}/pd')IS NOT((+ (-9.0527678E7)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c36, t0.c0, t0.c0))<((t0.c0, t0.c0, NULL)))) NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE)) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT CAST(MIN(0.2860802971887497, t0.c36) AS TEXT), ((((t0.c36)IS(t0.c0))) BETWEEN (CAST(t0.c0 AS REAL)) AND (TOTAL(t0.c0))), ((((((t0.c36)OR(t0.c0)))OR(t0.c0)))>((0x7597fc2b IN (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c36))>=((t0.c36))))<=(t0.c36 COLLATE BINARY)), ((CASE t0.c0  WHEN t0.c0 THEN t0.c36 END)|(t0.c0)), ((t0.c36)%(t0.c36)) COLLATE NOCASE FROM t0 WHERE (((~ (NULL)) IN ())); -- 0ms;
SELECT DISTINCT CAST(((t0.c0) ISNULL) AS BLOB), ((2.049330489E9) NOTNULL), (('0.09204179898469489')-(json_type(t0.c36))), LIKELY(DISTINCT ((t0.c0) NOT NULL)), CAST(((t0.c36) BETWEEN (t0.c36) AND (t0.c0)) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT AVG(((t0.c0)GLOB(t0.c36))) FROM t0 WHERE ((~ ((NULL IN ('', -1.926084104E9))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) NOT NULL)) OVER ( RANGE ((((t0.c0)<=(t0.c36))) NOT BETWEEN (t0.c0) AND (CASE WHEN t0.c0 THEN t0.c0 END)) PRECEDING), (((((((((t0.c36)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c36)) IN ()), (((('')&(t0.c0))) BETWEEN (((((t0.c0)OR(t0.c36)))OR(t0.c36))) AND (t0.c36)) FROM t0 WHERE (ROUND((NOT (-2.32542664E8)), CASE WHEN NULL THEN 0.4672059412508279 WHEN x'0a94' THEN x'' WHEN 0.5295739508092882 THEN x'' END));SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((- (t0.c36)))) FROM t0 WHERE ((('' COLLATE BINARY)||(((0.6355724427134636)/(NULL))))); -- 0ms;
SELECT COUNT(*), (- ((NOT (t0.c0)))), (((t0.c0)) NOT BETWEEN ((x'')) AND (((('	XBj*')=(t0.c36))))), (NOT (((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c0)))), ((CAST(t0.c36 AS BLOB))IS NOT(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT CASE UNLIKELY(t0.c0)  WHEN highlight(t0.c0, t0.c0, t0.c0, t0.c36) THEN SUM(t0.c0) ELSE ((t0.c0)<<(t0.c0)) END FROM t0 WHERE (((((((((((NULL)OR(0.10041412678975703)))OR(0.7564606649475087)))AND('46870914')))OR(0.07162961808571011))) NOTNULL));SELECT DISTINCT DENSE_RANK() OVER ( ROWS (((x'')%('d#a4it\nl8()')) IN (t0.c36)) PRECEDING) FROM t0; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM t0 WHERE (((CASE x'ba34'  WHEN 'tn䐐>/(' THEN '1800572463' WHEN NULL THEN x'' WHEN 0Xffffffffbbe021e8 THEN NULL END)/((((NULL, x'', NULL, -9.0527678E7, NULL))<((0.9241861391155081, 0.984389651352447, 0xffffffffd56e41f7, '0.042165210925146024', '-1587981357')))))); -- 1ms;
SELECT DISTINCT ((LOWER(t0.c36))>(((t0.c36) BETWEEN (t0.c36) AND (t0.c36)))) FROM t0 WHERE (CASE CAST(NULL AS REAL)  WHEN NULL COLLATE NOCASE THEN load_extension(0.47900136882054245) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(LOWER(DISTINCT t0.c0)), SUM(((t0.c0) IS FALSE)), CAST(SQLITE_COMPILEOPTION_GET(t0.c0) AS TEXT) FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c36 THEN t0.c0 ELSE t0.c36 END)GLOB(TOTAL(t0.c0))) FROM t0 LIMIT -682307285 OFFSET 1130980835; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(NULL) OVER () FROM t0 WHERE (('-1566911697' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT load_extension('-1283831395', ((t0.c36)==(t0.c0))) FROM t0 WHERE (((CAST(NULL AS BLOB))<(x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM) IS TRUE), t0.c0, ((CASE WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN t0.c0 WHEN t0.c36 THEN t0.c0 END) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((t0.c36) BETWEEN (t0.c0) AND (t0.c0)), DATE(t0.c36, t0.c36, t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT CAST((NOT (NULL)) AS REAL), (((~ (t0.c0)))>>((t0.c0 IN ()))), ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c36)))AND(t0.c36))) BETWEEN ((((t0.c36)) BETWEEN ((NULL)) AND ((t0.c36)))) AND (((t0.c0)>=(t0.c36)))) FROM t0; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM t0 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN ((0.14700744659421883 IN ())) AND (((((((((0X261743b7)OR(616590946)))OR(0xffffffffc364f44e)))AND(x'6a92')))AND('eTLLtvJ'))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(0.3031320354613136)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0) BETWEEN (t0.c36) AND (t0.c36)))) FROM t0 LIMIT 1428037827 OFFSET -1926084104; -- 0ms;
SELECT MAX(CAST(t0.c36 AS TEXT)) FROM t0 WHERE (ABS(DISTINCT -8.36264509E8 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT t0.c36, HEX(DISTINCT ((t0.c0)LIKE(t0.c0))), COALESCE(MIN(t0.c36), SUM(t0.c0), CAST(t0.c36 AS TEXT), t0.c36 COLLATE RTRIM), ((TRIM(DISTINCT t0.c0, t0.c0))>=(t0.c36 COLLATE NOCASE)), t0.c0 COLLATE NOCASE COLLATE BINARY FROM t0 WHERE ((((((('-1110129980')GLOB(NULL)))AND(json_type(x''))))AND((x'' IN ())))); -- 1ms;
SELECT DISTINCT ((((((((t0.c0)AND(t0.c36)))AND(t0.c0)))AND(CAST(t0.c36 AS REAL))))AND(t0.c36 COLLATE NOCASE)) FROM t0 WHERE ((((NULL IN ()))||((((x'69e5')) BETWEEN (('-1394981377')) AND ((x'')))))); -- 0ms;
SELECT ALL ((t0.c36 IN (1014812760, t0.c0)) IN ()) FROM t0 WHERE (((('-475892010' IN ()))>=(x'1c5e' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((t0.c0)<(t0.c36)))<=(LOWER(t0.c36))), CASE WHEN ((t0.c36)LIKE(t0.c36)) THEN (- (t0.c0)) WHEN ((((((((t0.c36)OR(t0.c36)))OR(t0.c0)))OR(t0.c0)))AND(t0.c36)) THEN t0.c36 COLLATE NOCASE WHEN ((t0.c36)+(-3.8023968E7)) THEN ((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c36)) END, ((COALESCE(DISTINCT x'', t0.c0)) ISNULL) FROM t0 WHERE ((((NULL))<=((((NULL)!=(x'')))))) GROUP BY (t0.c0 COLLATE RTRIM IN ((- (t0.c36)), (((-1651350684)) BETWEEN ((t0.c0)) AND ((t0.c0))))); -- 0ms;
SELECT ALL (((((((t0.c36, t0.c36, t0.c36, t0.c0, t0.c36)) BETWEEN ((t0.c36, t0.c0, t0.c36, t0.c0, t0.c0)) AND ((t0.c36, t0.c36, t0.c0, t0.c0, t0.c0))))OR(((((t0.c36)AND(t0.c36)))OR(t0.c36)))))AND((((t0.c36))>((t0.c36))))) FROM t0 WHERE ((((('%࠾')/(0xffffffffd7e88409))) IS TRUE)) GROUP BY (((t0.c36 IN ())) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c36)))OR(t0.c0)))); -- 0ms;
SELECT DISTINCT RTRIM(((((-1869007122)OR(t0.c0)))AND(t0.c36))), (+ (((t0.c0) ISNULL))), highlight(((t0.c36)*(t0.c0)), x'e0cb', CASE t0.c36  WHEN t0.c0 THEN t0.c0 END, ((t0.c36)!=(0Xffffffffef18035d))) FROM t0 GROUP BY SUBSTR(((t0.c0) NOT BETWEEN (t0.c36) AND (x'd32d')), CAST(t0.c36 AS REAL)) HAVING ((t0.c36 COLLATE NOCASE)<=((- (t0.c36)))); -- 0ms;
SELECT ALL ((LIKELIHOOD(t0.c0, 0.9485034818258253)) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) AND ((t0.c0 IN ()))), '-/y43eꛡx', (((((((('~5')AND(CAST(t0.c36 AS INTEGER))))AND(CASE t0.c36  WHEN t0.c0 THEN t0.c0 WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c0 END)))OR(((t0.c0) IS TRUE))))OR((((t0.c36, t0.c0, x'b371'))!=((t0.c36, '76178891', t0.c0))))) FROM t0 WHERE (TYPEOF(DISTINCT ABS(NULL))); -- 0ms;
SELECT DISTINCT NTH_VALUE((((t0.c36)) BETWEEN (((((t0.c36)) BETWEEN ((t0.c0)) AND ((t0.c36))))) AND ((NULL))), ((((t0.c0) BETWEEN (t0.c36) AND (t0.c0))) ISNULL)) OVER ( PARTITION BY x'', CASE ((t0.c36)+(t0.c36))  WHEN TRIM(t0.c0) THEN (('1la)1')&(t0.c36)) END, ((((((((((t0.c36)AND(t0.c0)))AND(t0.c36)))OR(t0.c0)))OR(t0.c0)))&(NULL)), (t0.c0 IN (t0.c36, t0.c0)) COLLATE RTRIM), TYPEOF((t0.c0 IN ())), COUNT(t0.c36) OVER () FROM t0; -- 0ms;
SELECT DISTINCT AVG((t0.c0 IN (t0.c36))) OVER (), (((t0.c36)) BETWEEN ((t0.c0)) AND ((((t0.c36)GLOB(t0.c0))))), ((((((((t0.c36)AND(t0.c0)))OR(t0.c0)))AND((('-1180446469') BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t0.c36 THEN t0.c36 END)), ((((((((((t0.c0)OR(t0.c36)))OR(t0.c36)))AND(NULL)))OR(t0.c36))) NOT BETWEEN (((((((((((((t0.c0)AND(t0.c36)))AND(t0.c36)))OR(t0.c36)))AND(t0.c0)))OR(t0.c36)))OR('7n>睉뱫M,'))) AND (((t0.c36)&(t0.c0)))), CAST((t0.c36 IN (t0.c36, t0.c36)) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NULL, 'TN䐐>/(', 0.009701037775146193)) BETWEEN (((((x'')) NOT BETWEEN ((x'')) AND (('-376866295'))), (+ (0.15344359403922692)), ((0.3651586757517912)*(1.106367113E9)))) AND ((NULL COLLATE RTRIM, CAST('-1825837612' AS TEXT), ((((1786459818)AND('363503844')))AND(0Xffffffffcf1ecd28)))))); -- 0ms;
SELECT DISTINCT (- (((t0.c36) NOT NULL))) FROM t0 WHERE (HEX(DISTINCT ((NULL)|(0x6e1193f3)))); -- 0ms;
SELECT DISTINCT x'1f96' FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0 COLLATE NOCASE))=(((('XDVypWi') BETWEEN (t0.c0) AND (t0.c36))))) FROM t0 WHERE ((((('g	W')>(-1926084104))) NOT BETWEEN (HEX('䖿~')) AND ((('*\nG6')*(''))))) LIMIT 1981451142 OFFSET -2043777334; -- 0ms;
SELECT DISTINCT (('969618194') NOTNULL) FROM t0 WHERE (((('')) NOT BETWEEN (((- ('(H\r~Lf')))) AND ((CAST(x'' AS INTEGER))))); -- 0ms;
SELECT ALL NULL, (t0.c0 COLLATE NOCASE IN ()), (CAST(t0.c0 AS TEXT) IN ()) FROM t0 ORDER BY (~ (((t0.c36)IS(t0.c0)))) ASC  NULLS FIRST, ((((CASE '츘^'  WHEN t0.c0 THEN t0.c36 END)OR(((t0.c36)&(t0.c0)))))AND(x'1acf' COLLATE NOCASE)); -- 0ms;
SELECT ALL CAST(CASE NULL  WHEN '-1926084104' THEN t0.c0 ELSE t0.c36 END AS REAL), ((NULL) NOTNULL), (+ (((t0.c36)%(t0.c36)))) FROM t0 WHERE (SUBSTR((NOT (NULL)), CAST(x'' AS BLOB))); -- 0ms;
SELECT t0.c36 FROM t0 GROUP BY CAST(((t0.c36) ISNULL) AS TEXT) HAVING (~ (t0.c0 COLLATE RTRIM)) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c36 THEN t0.c36 WHEN x'' THEN t0.c36 ELSE t0.c0 END) NOT NULL)  NULLS FIRST, ((t0.c0)||(t0.c0)) COLLATE NOCASE ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((t0.c36) NOT BETWEEN (t0.c36) AND (t0.c0)), '-107997868', t0.c36))<(((((t0.c36, t0.c36, t0.c0))<=((0Xffffffffe6b0fa15, x'', t0.c36))), ((t0.c0)+(t0.c36)), t0.c36))) FROM t0 WHERE (((']v') BETWEEN (NULL) AND (((('-1907753398')) BETWEEN ((x'')) AND ((6.27695338E8)))))); -- 0ms;
SELECT ALL ((('1191390300'))<=(((t0.c0 IN (t0.c0))))) FROM t0 WHERE (LTRIM(LIKELIHOOD(NULL, 0.13975164690996478))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c36 COLLATE RTRIM THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c36)))AND(t0.c36)))AND('-953629144')) ELSE t0.c36 COLLATE BINARY END FROM t0; -- 0ms;
SELECT DISTINCT TYPEOF((((t0.c36)) NOT BETWEEN ((t0.c36)) AND ((t0.c0)))) FROM t0 WHERE (((CAST(x'd801' AS NUMERIC)) IS FALSE)); -- 0ms;
SELECT DISTINCT MIN(((((((((t0.c0)AND(t0.c36)))OR(t0.c36)))AND(t0.c0)))AND(t0.c36))) FROM t0 WHERE (((((x'a82e016c')<(NULL)))||((('622966171') BETWEEN (x'') AND (NULL))))) LIMIT 826964546; -- 0ms;
SELECT ALL (((0.37460001240820306))<=((COUNT(t0.c0)))) FROM t0 WHERE ((((~ ('{g~q6,NgA')))|((('mtsv/') NOTNULL)))); -- 0ms;
SELECT DISTINCT (((t0.c36)) BETWEEN (('%sSY')) AND ((((((t0.c36)OR(t0.c0)))OR(t0.c36))))), t0.c36, CASE WHEN ((t0.c0)>>(t0.c0)) THEN t0.c36 WHEN ((t0.c0)<(t0.c36)) THEN ((x'') NOT BETWEEN (t0.c36) AND (t0.c0)) WHEN ((t0.c0)<(0.4220232362357894)) THEN COUNT(*) WHEN ((t0.c36)AND(t0.c0)) THEN ((t0.c36) BETWEEN (t0.c36) AND (t0.c36)) WHEN CASE WHEN t0.c36 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) IS TRUE) END FROM t0 WHERE (CAST((0.1466052674673266 IN ()) AS BLOB)); -- 1ms;
SELECT DISTINCT TOTAL((((t0.c36, t0.c36, t0.c36))>((t0.c0, t0.c36, t0.c0)))) OVER () FROM t0 WHERE ((((0.01914466803559922)) NOT BETWEEN ((((((0.8628291478981414)AND(x'bf60')))AND('CCr/WSl')))) AND (((((('643762243')OR('-1521871582')))OR(NULL)))))); -- 0ms;
SELECT CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c36)) AND ((t0.c36))) THEN UPPER(DISTINCT t0.c36) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c36)) THEN SUM(t0.c36) WHEN t0.c36 COLLATE RTRIM THEN t0.c36 COLLATE NOCASE END FROM t0 WHERE (((('Y6') BETWEEN (x'97be') AND ('616590946')) IN ())); -- 0ms;
SELECT CASE t0.c0  WHEN ((t0.c0) ISNULL) THEN json_valid(t0.c36) WHEN ((t0.c36) NOT BETWEEN ('-2029411378') AND (t0.c0)) THEN CAST(t0.c36 AS NUMERIC) WHEN t0.c0 THEN ((((((((((((t0.c0)AND('w>')))OR(-1.337818774E9)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c36)) ELSE ((t0.c0)IS(NULL)) END FROM t0; -- 0ms;
SELECT DISTINCT UNLIKELY(SUM(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT t0.c36, (((NOT (t0.c36))) ISNULL), NULLIF(((t0.c36) IS FALSE), t0.c36 COLLATE BINARY) FROM t0 LIMIT 1910354122 OFFSET -1746544690; -- 0ms;
SELECT ALL ((((((t0.c36)<<(t0.c36)))AND(IFNULL(t0.c36, t0.c36))))OR((x'' IN ()))) FROM t0; -- 1ms;
SELECT DISTINCT (((t0.c0 IN ())) BETWEEN (((t0.c0)<(t0.c36))) AND (GROUP_CONCAT(t0.c0))), ((CAST(t0.c0 AS BLOB))<(CAST(t0.c36 AS TEXT))), CASE (- (t0.c0))  WHEN t0.c36 COLLATE RTRIM THEN ((t0.c36) BETWEEN (NULL) AND (t0.c36)) END FROM t0; -- 0ms;
SELECT ALL SUM((t0.c36 IN (t0.c0, t0.c36))) OVER (), ((((t0.c0)) NOT BETWEEN ((t0.c36)) AND ((x''))) IN (((((t0.c0)OR(t0.c36)))OR(t0.c0)), (((-1024874049, 0.554342419550758, t0.c0))>=((0.3471029285793822, t0.c36, t0.c0))))), (((((t0.c0 IN ()))AND(((t0.c0) IS FALSE))))OR((t0.c36 IN ()))) FROM t0 WHERE (((((-379825928)<(NULL))) IS TRUE)); -- 0ms;
SELECT (((((((t0.c36, t0.c36, t0.c36))<=((t0.c0, t0.c36, t0.c0))))OR(CAST(t0.c0 AS TEXT))))AND(((((t0.c36)AND(t0.c36)))OR(t0.c36)))) FROM t0; -- 0ms;
SELECT DISTINCT 0.7690386138886982 FROM t0 WHERE ((((((~ (NULL)))OR(('824585134' IN (x'')))))AND(CASE WHEN 0.9712107743325142 THEN NULL END))); -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(((((((((t0.c36)AND(t0.c0)))AND(t0.c36)))OR(x'704e')))AND(t0.c36))), ((0x69efa45e)<=((t0.c36 IN (t0.c36)))), CAST(CAST(t0.c36 AS INTEGER) AS INTEGER) FROM t0; -- 0ms;
SELECT (((NULL) IS FALSE) IN ((NOT (t0.c36)))) FROM t0 WHERE ((('\\r' COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT NTILE((((t0.c36 IN ())) BETWEEN (((t0.c0) IS FALSE)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c36 END))) OVER (), CASE SUM(t0.c0)  WHEN '' THEN ((((t0.c36)AND(t0.c36)))AND(t0.c36)) END, CUME_DIST() OVER () FROM t0 WHERE ((((NULL COLLATE RTRIM))==(((NOT (0.9724539383956702))))));SELECT ALL (((- (t0.c0)))GLOB(json(t0.c0))), ((TOTAL(t0.c0))>((~ (t0.c0)))), CASE ((((((((t0.c36)OR(t0.c36)))AND(t0.c36)))AND(0.10158464790665034)))AND(t0.c0))  WHEN ROUND(t0.c0, -2.083977329E9) THEN COUNT(*) END FROM t0;SELECT DISTINCT ((((CAST(t0.c0 AS NUMERIC))AND(((('2049330489'))<>((t0.c0))))))AND(((t0.c0)>(t0.c36)))) FROM t0; -- 0ms;
SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND (('1997682034')))) IS FALSE), ((t0.c36 COLLATE RTRIM) NOT NULL), ((CASE t0.c0  WHEN t0.c0 THEN t0.c36 WHEN '-2042149872' THEN t0.c0 WHEN t0.c0 THEN t0.c36 END)==(COUNT(*))) FROM t0; -- 0ms;
SELECT CAST((NOT (t0.c0)) AS REAL) FROM t0 WHERE ((((CASE WHEN 'Je' THEN 0.040688750610497926 END))<((UNLIKELY(NULL))))); -- 0ms;
SELECT ALL ((x'')-(CASE WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((t0.c36 COLLATE NOCASE)-(((t0.c36)IS NOT(t0.c0)))), CHAR(((t0.c0) NOT NULL), (NOT (t0.c0)), ((t0.c36)<=(t0.c0))) FROM t0 WHERE ((((0.47250016886343404)) BETWEEN ((((NULL)|('kWs&7')))) AND ((CASE x''  WHEN x'' THEN x'' ELSE x'' END)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE (((((NULL) NOT BETWEEN (519454112) AND ('')))|((('') BETWEEN (0.6850841108612942) AND (NULL))))) LIMIT -682307285 OFFSET 1240542563; -- 0ms;
SELECT ALL TOTAL((t0.c0 IN ())) FROM t0 GROUP BY ((((t0.c36) NOT BETWEEN (t0.c36) AND (t0.c0)))IS(t0.c0)) HAVING (NOT ('95374689')) COLLATE NOCASE LIMIT 2049330489 OFFSET 662982002; -- 0ms;
SELECT ALL ((((0.3635310318924958) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), (('47c/')>>(t0.c36)), ((((((((((((((t0.c36)OR(t0.c36)))OR(0.5317122261396936)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))LIKE((NOT (t0.c36)))) FROM t0 LIMIT -558565483 OFFSET 1313499007; -- 0ms;
SELECT ((((t0.c36) NOT BETWEEN (t0.c36) AND (x'2623')))&(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT CAST(LTRIM(t0.c36, t0.c0) AS NUMERIC) FROM t0 WHERE (((('')) NOT BETWEEN ((1540823671)) AND ((NULL))) COLLATE NOCASE); -- 0ms;
SELECT t0.c36 COLLATE BINARY, t0.c36, (((t0.c36 IN ()))OR(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (TYPEOF(CASE NULL  WHEN 0.07131366221537683 THEN x'' END)); -- 0ms;
SELECT DISTINCT ((t0.c36) NOT NULL) COLLATE RTRIM FROM t0 WHERE (((CASE -836264509  WHEN '2067383809' THEN 868773439 WHEN NULL THEN 0Xffffffff89d1f0d6 WHEN 0.9114746172474949 THEN '' ELSE NULL END) BETWEEN (CASE NULL  WHEN '18S' THEN '' ELSE 0.20673227712561637 END) AND (CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL ((CASE WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (((t0.c0)AND(x''))) AND (t0.c36)), 0.34230394954887766, ((((((t0.c0) NOT BETWEEN ('. ,42') AND (t0.c0)))OR(((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(AVG(t0.c0))) FROM t0 ORDER BY 0X487124fc ASC  NULLS LAST;SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC))&(TOTAL(t0.c0))) FROM t0 WHERE ((~ (0xffffffff8221c67f))); -- 0ms;
SELECT DISTINCT ((((t0.c36)LIKE(t0.c36)))IS NOT((((t0.c0, t0.c36, t0.c0))!=((t0.c36, t0.c0, t0.c0))))), (((~ (t0.c0)))&(((t0.c0)||(t0.c0)))), CASE WHEN t0.c36 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT (NOT (TOTAL(t0.c36))) FROM t0 WHERE (CAST(('S0|' IN ()) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0) NOT NULL) THEN CASE WHEN t0.c0 THEN t0.c0 END END FROM t0 WHERE ((~ ((+ ('1459610561'))))); -- 0ms;
SELECT DISTINCT MIN(((NULL)||(t0.c0))) FROM t0 WHERE ((((('1106367113') NOT BETWEEN (x'7bfe') AND ('_yi.'))) BETWEEN (((x'5db5') BETWEEN (0X279ebb0b) AND (x''))) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN ()) AS INTEGER), t0.c0, (((0.0733076431066707))=((t0.c36))) COLLATE RTRIM FROM t0 LIMIT 1147411463; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT GROUP_CONCAT(CAST(t0.c0 AS TEXT)) COLLATE NOCASE FROM t0 WHERE ((('Ge') IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT ALL LAG(((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c36)))>(CAST(t0.c0 AS BLOB))), ((- (t0.c36)) IN ()), TRIM(DISTINCT CASE t0.c0  WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN NULL ELSE t0.c0 END, ((t0.c0)-(t0.c36)))) OVER () FROM t0 WHERE (((((json_valid(x''))AND(((NULL)||('z}')))))AND(NULL COLLATE RTRIM))) LIMIT -979993156 OFFSET -623188591; -- 0ms;
SELECT DISTINCT ((MAX(t0.c0)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c36) AND (NULL))) AND (0.7547282603000562)), (((x'ae90' IN (t0.c0))) BETWEEN (t0.c36 COLLATE BINARY) AND (((t0.c0)%('-705119301')))), CASE WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN (+ (t0.c36)) WHEN t0.c0 THEN GROUP_CONCAT(t0.c36) WHEN ((t0.c36)IS(t0.c0)) THEN CASE WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c36 ELSE t0.c36 END ELSE t0.c0 COLLATE BINARY END FROM t0 INDEXED BY i35; -- 0ms;
SELECT ALL TIME((~ (t0.c36)), MIN(t0.c0), (t0.c36 IN ())) FROM t0; -- 0ms;
SELECT ((((t0.c36) BETWEEN (t0.c0) AND (t0.c0)))/(CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END)) FROM t0 WHERE (((((('>	jCf') BETWEEN (x'') AND (x''))))>((((-1.995149826E9) NOTNULL))))); -- 0ms;
SELECT DISTINCT (- (((t0.c36) ISNULL))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c36)<>(t0.c0)))*(t0.c36 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT DISTINCT 0.011017715497584901 FROM t0; -- 0ms;
SELECT DISTINCT (CAST(t0.c36 AS NUMERIC) IN (CAST(t0.c36 AS BLOB))), (((t0.c36)>=(t0.c0)) IN ()), (+ (CAST(t0.c0 AS INTEGER))) FROM t0 WHERE ((CASE ''  WHEN NULL THEN NULL ELSE x'' END IN ())); -- 0ms;
SELECT DISTINCT ((((((t0.c36)AND(t0.c0)))AND(t0.c36))) BETWEEN (((x'')<=(0xffffffffb01f8f34))) AND (((t0.c36)+(t0.c36)))) FROM t0 WHERE (((LIKELY(x'')) BETWEEN (((NULL)IS(0.34750528339071873))) AND (((-2042149872) NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT (t0.c0 IN ())) FROM t0 WHERE (((((((-12497514))<=((NULL))), ((NULL)LIKE(NULL)), x'' COLLATE BINARY))<=(((~ (x'')), ((((0.6625159069611772)OR(x'')))AND(0.9947601081667119)), ((NULL)*(0.2039995928602628)))))) GROUP BY ((CASE WHEN t0.c36 THEN t0.c0 END) BETWEEN (t0.c36) AND (((t0.c36)>=(t0.c0)))), x'', '1384643818' HAVING 0.554342419550758; -- 0ms;
SELECT (- (((t0.c0)LIKE(t0.c0)))) FROM t0 WHERE (((('2129298390' IN (NULL))) BETWEEN (((x'') BETWEEN ('-1676305796') AND ('-38023968'))) AND (((-1394981377) NOT BETWEEN (x'cfa6') AND (0.40469406507046635))))); -- 0ms;
SELECT (((t0.c0, t0.c0, t0.c36)) BETWEEN (((((t0.c0, t0.c36, t0.c36)) NOT BETWEEN (('360860594', t0.c0, t0.c0)) AND ((0.681339997926027, -2029411378, t0.c36))), ((t0.c0)GLOB(t0.c36)), (((t0.c36))<=((t0.c0))))) AND ((((t0.c0) NOTNULL), json_insert(t0.c0, t0.c36, NULL), ((t0.c36)GLOB(t0.c36))))) FROM t0 ORDER BY CAST(t0.c36 AS NUMERIC) COLLATE NOCASE DESC, ((json_quote(t0.c0))&(((((t0.c36)AND(t0.c36)))OR(t0.c36)))) ASC;SELECT ALL MAX('-1116038125') FROM t0; -- 0ms;
SELECT DISTINCT AVG((~ (NULL))), ((t0.c0 COLLATE RTRIM)<=(((t0.c36) IS TRUE))), CASE ((((((((t0.c0)OR(t0.c36)))OR(t0.c0)))OR(t0.c36)))OR(t0.c0))  WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c36)OR(t0.c0)))AND(t0.c36)))OR(0.4805418706382608)))OR(t0.c0)) WHEN CASE t0.c36  WHEN t0.c0 THEN 1.69238514E8 WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 ELSE t0.c0 END THEN x'' WHEN AVG(t0.c36) THEN ((t0.c36)<=(t0.c0)) END FROM t0; -- 0ms;
SELECT ALL ((((((t0.c36) NOT NULL))AND((((t0.c0, 'ISF_K8', t0.c0)) NOT BETWEEN ((t0.c36, t0.c0, t0.c36)) AND ((t0.c0, t0.c36, t0.c36))))))OR(CASE WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN ']ꑪu첮Z' WHEN t0.c0 THEN t0.c0 END)) FROM t0 WHERE (((NULL)<(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST('-953629144' AS REAL), (LIKELIHOOD(0.613332955057159, 0.6667305931343315) IN ()), ((((t0.c0)<(t0.c0)))>=((NOT (t0.c0)))) FROM t0 WHERE (CAST(((1.32278582E8)<=(NULL)) AS REAL)); -- 0ms;
SELECT ((COALESCE(DISTINCT 0.7727342028257348, x'79b5')) BETWEEN (LAST_INSERT_ROWID()) AND (((t0.c36)>(t0.c36)))) FROM t0; -- 0ms;
SELECT ((((t0.c36) IS FALSE))>=((t0.c36 IN ()))), NTILE((((LIKELIHOOD(DISTINCT 0.3860945516560862, 0.7666957287728321)))==(((((t0.c36, t0.c36, t0.c0)) NOT BETWEEN ((t0.c36, t0.c0, t0.c36)) AND ((t0.c0, t0.c36, t0.c0))))))) OVER (), (- (MAX(t0.c36))) FROM t0;SELECT DISTINCT (~ ((t0.c36 IN ()))), GROUP_CONCAT(CAST(t0.c0 AS REAL)), ((((t0.c36)>(t0.c0)))>(NULL)) FROM t0 WHERE (LTRIM(((x'') NOT NULL), '506466403' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (((NOT (t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0)<=(t0.c36)))) FROM t0; -- 0ms;
SELECT '(H\r~Lf', t0.c0, t0.c36 FROM t0 WHERE (((((x'')IS NOT(0X29b9fe97))) ISNULL)); -- 0ms;
SELECT ((((((((t0.c0)AND(t0.c36)))OR(t0.c0)))OR(CASE t0.c0  WHEN t0.c36 THEN t0.c36 END)))OR(((t0.c36) NOT BETWEEN (t0.c36) AND (t0.c36)))) FROM t0 WHERE (((0.026768609815660982)+(CASE WHEN x'' THEN NULL WHEN NULL THEN x'' WHEN 0.22766515394707876 THEN '' END))); -- 0ms;
SELECT DISTINCT ((((((t0.c36) IS TRUE))AND(((t0.c36)*(NULL)))))OR(COUNT(t0.c0))) FROM t0; -- 0ms;
SELECT ALL SUM(((t0.c0)>>(t0.c36))), COALESCE(((((x'c2d2')AND(0.35205604163925674)))OR(t0.c0)), t0.c36, CASE t0.c36  WHEN '-1180895469' THEN t0.c36 WHEN 0.7587297618360073 THEN t0.c36 WHEN t0.c0 THEN t0.c36 ELSE t0.c0 END, t0.c36), (((((((t0.c0, t0.c36, t0.c36)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c36))))OR(t0.c0 COLLATE NOCASE)))OR(MAX(t0.c36))) FROM t0 LIMIT 1942845675; -- 0ms;
SELECT ALL NULLIF(((t0.c36) IS FALSE), COUNT(t0.c0)) FROM t0 WHERE (((((((NULL)OR(x'')))OR('')))*(((0.26666641812878045) BETWEEN (x'') AND (230378466))))); -- 0ms;
SELECT ALL t0.c36 FROM t0 WHERE (CASE ((NULL)-(NULL))  WHEN NULL THEN ((((x'')AND(NULL)))AND(-1.14293916E9)) WHEN ((('510295381')) NOT BETWEEN ((x'')) AND (('1737344286'))) THEN (x'' IN ()) WHEN '1825476430' COLLATE BINARY THEN (('') IS TRUE) END) LIMIT -2113833387 OFFSET 1623122797; -- 0ms;
SELECT ALL GROUP_CONCAT(((((t0.c0)OR(t0.c0)))AND(''))) OVER (), ((t0.c36)GLOB(t0.c36)) COLLATE BINARY, ((((CASE WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c36 ELSE t0.c0 END)OR(((t0.c36)>=('')))))OR((NOT (0.22654860109051067)))) FROM t0 WHERE (LOWER((((0Xffffffff89146dfe)) BETWEEN ((x'294b')) AND (('-348980338'))))) ORDER BY ((CASE t0.c36  WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((((((CAST(t0.c36 AS REAL))OR(((t0.c36)>=(t0.c0)))))AND((+ (0.27223964638612175)))))OR(t0.c0 COLLATE NOCASE)))AND(TYPEOF(DISTINCT t0.c0))) FROM t0; -- 0ms;
SELECT ALL SUM(((t0.c36)>(t0.c36))) FILTER(WHERE (~ (((((((((t0.c36)AND(t0.c36)))AND(t0.c0)))OR(t0.c0)))AND(t0.c36))))) OVER ( ORDER BY GLOB(((t0.c36)=(x'26b4')), t0.c0), t0.c0  NULLS LAST, (~ (NULLIF(t0.c0, t0.c36))) ASC ROWS  CURRENT ROW) FROM t0; -- 0ms;
SELECT (NOT (LTRIM(t0.c36))), LEAD(json_object(((((t0.c0)OR(t0.c36)))OR(t0.c0)), ((t0.c36)!=(t0.c36))), (((+ (t0.c0)))<(((t0.c0)IS(t0.c36)))), (((((((((NOT (t0.c0)))AND((((t0.c0)) BETWEEN ((t0.c0)) AND (('7\r'))))))OR((t0.c36 IN ('qS#%-0[Wu')))))OR(LTRIM(t0.c0, t0.c36))))OR((NOT (t0.c0))))) OVER ( PARTITION BY ((CASE x''  WHEN t0.c36 THEN t0.c36 ELSE t0.c36 END) ISNULL), '-1905269166'), (~ (t0.c36)) FROM t0 WHERE (((CAST(NULL AS BLOB))IS(CAST('R5TD)㣱_.D' AS NUMERIC)))) GROUP BY ((((((t0.c36)AND(t0.c36)))OR(t0.c0)))IS NOT(CAST(t0.c36 AS INTEGER))) HAVING (((t0.c0))>=((t0.c0 COLLATE BINARY))) LIMIT 1611104310; -- 0ms;
SELECT DISTINCT (((t0.c36) NOT BETWEEN (t0.c36) AND (t0.c0)) IN ((((t0.c0))<((t0.c0))))) FROM t0; -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'')) BETWEEN ((((NULL) NOT BETWEEN (NULL) AND ('?d	ev+r')))) AND (((NULL IN ()))))) GROUP BY CASE t0.c0  WHEN t0.c36 THEN NULL WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM HAVING MAX(CAST(t0.c0 AS NUMERIC), t0.c36); -- 0ms;
SELECT DISTINCT (t0.c0 IN ('')) FROM t0; -- 1ms;
SELECT ALL (((CASE t0.c36  WHEN t0.c36 THEN 0.8920664107640311 ELSE t0.c0 END))==((((t0.c0)<(t0.c0))))), ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))>=(((t0.c36)<=(t0.c36)))), t0.c0 FROM t0 WHERE (((((459420650) BETWEEN ('') AND ('625004844')))GLOB(CASE x''  WHEN x'' THEN x'' END))); -- 0ms;
SELECT ALL TRIM(DISTINCT 0.1309554454120221) FROM t0; -- 4ms;
SELECT MIN(MAX(((t0.c36)%(t0.c0)))) FROM t0 WHERE (CASE (NULL IN (0.9154211302427065))  WHEN 0.9062843498962556 COLLATE BINARY THEN LIKELY(DISTINCT 0.8917975600183888) END);SELECT DISTINCT CASE WHEN ((t0.c36) IS FALSE) THEN t0.c36 END FROM t0 WHERE (CASE WHEN (((((((('^kt9p7\rpa')AND(NULL)))AND(8.53914773E8)))AND(NULL)))AND(x'')) THEN (NOT ('')) ELSE ((0.0065583137701366034)>('-1844989559')) END); -- 0ms;
SELECT DISTINCT (((t0.c36) IS FALSE) IN ()), ((MIN(t0.c36)) NOTNULL), SUM(((t0.c36)|(t0.c0))) FROM t0 WHERE (((CASE WHEN 'n||FIrfRe' THEN x'' END) NOT BETWEEN ((+ (NULL))) AND (((x'8d18') ISNULL)))) LIMIT -320835845; -- 1ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c36)))>(((t0.c36) IS TRUE))) FROM t0 WHERE (((((x'') BETWEEN (0.28595059309605597) AND (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((+ (t0.c36))))<(((- (t0.c36))))), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c36))) COLLATE BINARY, CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c36))) AS REAL) FROM t0; -- 0ms;
SELECT ((t0.c0)%(((((t0.c36)AND(NULL)))OR(0.6584674425368612)))) FROM t0; -- 0ms;
SELECT ALL TOTAL(((t0.c0)||(t0.c36))) OVER (), ((AVG(t0.c0)) BETWEEN ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) IS TRUE))), MAX(((((t0.c36)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c36 COLLATE NOCASE) NOT BETWEEN (((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((~ (t0.c0)))) FROM t0 ORDER BY (+ (CAST(t0.c36 AS NUMERIC))); -- 0ms;
SELECT ALL ((((t0.c0)<>(t0.c36)))OR(t0.c36 COLLATE RTRIM)) FROM t0 WHERE ((~ ((('S')!=('rP'))))); -- 0ms;
SELECT ALL -1.746905132E9 FROM t0; -- 0ms;
SELECT DISTINCT (~ ((NOT (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(((t0.c0)|(t0.c0))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT MIN(CAST(t0.c36 AS BLOB)) FROM t0; -- 0ms;
SELECT ALL ((((ROUND(-1319668659, t0.c0))OR(CASE t0.c36  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c0 END)))AND((NOT (t0.c0)))) FROM t0 GROUP BY ((((0.288936930356811)AND(((t0.c0)||(t0.c0)))))AND(((('')) NOT BETWEEN ((t0.c36)) AND ((t0.c36))))), ((((((t0.c0)OR(t0.c36)))OR(t0.c36)))!=(((t0.c0) NOT NULL))), ((((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c0))) IS TRUE) HAVING ((TOTAL(t0.c0))||(((((t0.c0)AND(t0.c36)))OR(t0.c0)))); -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c36 COLLATE RTRIM) FROM t0 ORDER BY (CASE WHEN t0.c36 THEN t0.c0 ELSE t0.c36 END IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((x'c3e4') NOT BETWEEN (x'') AND (t0.c0)) COLLATE RTRIM FROM t0 WHERE ((((((((1193759226)OR(-182818727)))OR(0x5bd71a77)), (('-222864090') IS FALSE), (NOT (NULL)), UNLIKELY(0xfffffffff13db59f), ((0x4a5f1979)GLOB(x'')), CASE WHEN x'ab13' THEN 0Xffffffffdf6c73d4 WHEN x'' THEN NULL WHEN 'W{' THEN '+,' ELSE -2028132536 END, (((((((('-1337818774')AND(0.3319538946862095)))OR('-1600219929')))OR('s')))OR('529637409'))))<((NULL, ((((3.15112372E8)AND('I\ZH/0t')))OR(NULL)), UPPER(DISTINCT 0x422fd6d), (~ ('')), '' COLLATE RTRIM, (~ ('쮂U)VP5-')), 0x4742096)))); -- 0ms;
SELECT CAST((t0.c0 IN (t0.c0, 0xffffffff88e8915f)) AS INTEGER), json(COUNT(t0.c36)), ((((((((IFNULL(t0.c36, t0.c0))AND((((t0.c36))<=((t0.c0))))))AND(((NULL)/(t0.c36)))))AND((((t0.c36))<((t0.c36))))))OR((t0.c0 IN (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0 COLLATE NOCASE, ((t0.c0) BETWEEN (t0.c0) AND (x'cd6ccbb4')), ((t0.c0) NOT NULL)))=((ABS(DISTINCT t0.c0), 0.2701100792043811, ((t0.c36) NOTNULL)))), ((((t0.c0)*(0.41626804010286356)))<<(CASE t0.c36  WHEN t0.c36 THEN t0.c36 ELSE t0.c0 END)), CASE WHEN 0.005091571338696088 COLLATE RTRIM THEN ' ' END FROM t0 WHERE (CASE CAST(NULL AS REAL)  WHEN x'' THEN CASE WHEN NULL THEN NULL WHEN NULL THEN '-0.0' WHEN '' THEN NULL END ELSE 'ktDlv&' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT ((((((((UPPER(t0.c36))OR((((t0.c36, t0.c36, t0.c0))<((t0.c36, t0.c36, t0.c36))))))OR('NR')))AND((t0.c0 IN ()))))OR(((t0.c36)OR(t0.c36)))) FROM t0 ORDER BY CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC) ASC  NULLS LAST LIMIT 1883367899; -- 0ms;
SELECT ((t0.c0) BETWEEN (t0.c36) AND (t0.c0)) COLLATE BINARY FROM t0 NOT INDEXED; -- 0ms;
SELECT 0Xffffffffc728c628, 0.019832667547649896, t0.c36 FROM t0; -- 0ms;
SELECT ((x'') ISNULL) FROM t0 ORDER BY CAST(t0.c36 AS INTEGER) DESC  NULLS LAST; -- 0ms;
SELECT GROUP_CONCAT(((x'15a6')IS(t0.c0))) COLLATE BINARY FROM t0 WHERE (((('-438070868')) NOT BETWEEN ((0.41409225277874895)) AND ((''))) COLLATE BINARY); -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((NULL)<<(0.9256559502814532))))); -- 0ms;
SELECT DISTINCT ((((((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c0)))OR((t0.c36 IN (t0.c0)))))OR(t0.c36 COLLATE BINARY)) FROM t0 GROUP BY t0.c0, x'c786', CAST(((t0.c0)/(t0.c36)) AS REAL); -- 0ms;
SELECT ((((t0.c36 IN ())))<(((~ (t0.c36))))), 0X6e1193f3, t0.c36 FROM t0 WHERE (CASE WHEN ((x'')IS NOT(-1844989559)) THEN ((0X3e9e7bca) NOT BETWEEN (0.7708883122729734) AND ('JE')) ELSE HEX(NULL) END); -- 0ms;
SELECT t0.c36 FROM t0 WHERE (CAST(((((x'')AND(x'')))OR('1895268783')) AS NUMERIC)); -- 1ms;
SELECT DISTINCT ((NOT (t0.c36)) IN ()) FROM t0 WHERE ((- (((('3L')) BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT ALL CAST(COUNT(*) AS BLOB) FROM t0 WHERE ('-479651378'); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c36) IS TRUE) THEN t0.c36 ELSE (t0.c36 IN (t0.c0)) END FROM t0 WHERE (CASE ']BLRTB~0'  WHEN ((NULL)AND(NULL)) THEN (NULL IN ()) ELSE ((NULL)*('1296781140')) END) ORDER BY ((IFNULL(t0.c36, t0.c0)) NOT BETWEEN (CAST(t0.c36 AS REAL)) AND ((t0.c36 IN (t0.c36, t0.c36)))) ASC; -- 0ms;
SELECT ((t0.c0 COLLATE RTRIM) BETWEEN (LIKELIHOOD(t0.c36, 0.023465395505754216)) AND (((((t0.c36)AND(t0.c36)))OR(-687579967)))), t0.c36, (((t0.c0, -645301729, t0.c0))==((t0.c36, t0.c0, t0.c36))) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ((((t0.c0 IN (t0.c36))))!=((json_valid(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(t0.c0 AS BLOB) THEN CAST(']v' AS NUMERIC) ELSE t0.c0 COLLATE NOCASE END FROM t0 WHERE (CASE WHEN (('0b')OR(0.0932150571568996)) THEN (('-b>Nc?')>(x'452e')) ELSE (((('WY9Mo0KO')AND(x'')))AND(0.02895220547684141)) END); -- 0ms;
SELECT t0.c0, CAST(t0.c36 COLLATE RTRIM AS NUMERIC), ((HEX(t0.c36)) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE)*(CASE WHEN t0.c0 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT COUNT(*) OVER () FROM t0; -- 0ms;
SELECT ALL 0.018178783380127017, COUNT((t0.c0 IN ())), (((t0.c0)||(t0.c36)) IN ()) FROM t0 GROUP BY x'' HAVING (((((~ (t0.c0)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((t0.c36)AND(t0.c0)))) ORDER BY (((t0.c36 IN (t0.c36)))LIKE((t0.c0 IN (t0.c0)))); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c36))) FROM t0 WHERE (((x'8815')GLOB(x''))) LIMIT -986982942 OFFSET 148474471; -- 0ms;
SELECT DISTINCT (((t0.c36) IS FALSE) IN ()) FROM t0 ORDER BY MAX((NOT (t0.c0)), (t0.c0 IN ())), (((t0.c36)) BETWEEN ((((t0.c36) NOT NULL))) AND (((NOT (t0.c0)))))  NULLS FIRST; -- 0ms;
SELECT ALL x'2f4c' FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 COLLATE RTRIM FROM t0 ORDER BY CASE WHEN ((t0.c0)>>(x'')) THEN ABS(t0.c36) WHEN t0.c0 THEN t0.c36 WHEN ((((NULL)OR(t0.c0)))OR(t0.c36)) THEN (((t0.c0, t0.c0, t0.c36)) NOT BETWEEN ((t0.c0, '0.711002077423726', t0.c36)) AND ((t0.c0, t0.c36, t0.c0))) END  NULLS LAST; -- 0ms;
SELECT ALL (- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c36 END)) FROM t0; -- 0ms;
SELECT DISTINCT NULLIF(((t0.c0) NOTNULL), ((t0.c0)<>(0.006381225318024986))) FROM t0 WHERE ((~ ((~ (0Xffffffffa81d3150))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c0) FROM t0 ORDER BY ((((((t0.c0)&(t0.c36)))OR(t0.c0 COLLATE NOCASE)))OR((t0.c36 IN ()))) ASC, ABS(NULL) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((t0.c36) IS FALSE) FROM t0 ORDER BY ((((NULL) NOTNULL)) NOT NULL)  NULLS LAST, ((x'') NOT BETWEEN ('1916255917') AND (((t0.c0)<>(t0.c36)))) DESC; -- 0ms;
SELECT DISTINCT LAST_VALUE((- (t0.c36))) OVER () FROM t0 WHERE ((((('mBt2F뮒')IS(0.6172221526155386)))AND((('M+.jU-r邇')+('E3FQn'))))); -- 0ms;
SELECT ALL CAST(t0.c36 COLLATE RTRIM AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL t0.c36 FROM t0 WHERE (CASE WHEN NULL THEN x'' WHEN '/]' THEN '' WHEN '[]' THEN 0xffffffff85f5ab0c ELSE 0x628f4a1a END COLLATE BINARY) ORDER BY (((((((t0.c36))>=((t0.c0))))AND((t0.c0 IN ()))))AND(0.0065583137701366034)) DESC  NULLS LAST;SELECT DISTINCT ((MAX(x'8185fbcc'))+(CAST(t0.c36 AS TEXT))) FROM t0 ORDER BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c36 ELSE NULL END)) ASC; -- 0ms;
SELECT ALL ((~ ('. ,42')) IN ((~ (t0.c36)))) FROM t0 GROUP BY ((t0.c0)*(t0.c36)) COLLATE NOCASE, ((((t0.c36) NOTNULL)) BETWEEN ((+ (t0.c36))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c36 END)), (+ (((t0.c36) IS TRUE))), (((~ (t0.c36))) NOT NULL), CASE WHEN (t0.c36 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END; -- 0ms;
SELECT DISTINCT ((((((((t0.c36 COLLATE NOCASE)OR((((t0.c36, t0.c36, t0.c0))>((t0.c0, 0.711002077423726, t0.c0))))))AND(CAST(t0.c36 AS TEXT))))OR(((t0.c36)||('c[w]X%')))))OR((t0.c0 IN ()))) FROM t0 NOT INDEXED WHERE (((('' IN ()))>(0.10403874057959439))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 GROUP BY INSTR(t0.c0, t0.c0) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT x'0cb1', COALESCE(SUM(t0.c36), t0.c36), (((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, 0.6075557889387393)))) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS BLOB)) NOTNULL) FROM t0; -- 0ms;
SELECT ALL t0.c36 COLLATE NOCASE, SUM((- (t0.c36))) OVER ( ROWS  CURRENT ROW), CAST('\rz+N!lOj' AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT t0.c36) COLLATE NOCASE FROM t0 WHERE ((((0.15578583768650622 IN ()))AND(((((((((((((x'f5ef')AND(NULL)))AND('-356727420')))OR(0Xffffffff920cfd11)))OR(x'')))OR(0.9556352511067594)))AND(NULL))))); -- 0ms;
SELECT DISTINCT CASE (NOT (t0.c0))  WHEN CASE t0.c36  WHEN t0.c36 THEN t0.c36 END THEN x'' ELSE ((t0.c36)*(t0.c36)) END FROM t0 GROUP BY (((NOT (t0.c36))) BETWEEN (((t0.c0) BETWEEN (t0.c36) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c36 THEN t0.c36 ELSE t0.c36 END)), (((((t0.c0))<>((t0.c36)))) BETWEEN (0.8516029088837478) AND (CASE t0.c0  WHEN t0.c36 THEN NULL WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN NULL END)), t0.c36 HAVING json_array(CAST(t0.c0 AS INTEGER), CASE WHEN t0.c0 THEN t0.c0 END, ((t0.c0)/(x'')), t0.c0);SELECT DISTINCT (((('') ISNULL)) NOTNULL), SUBSTR(x'', (t0.c0 IN ())), GROUP_CONCAT(CASE t0.c36  WHEN t0.c0 THEN t0.c36 ELSE t0.c0 END) FROM t0; -- 0ms;
SELECT ALL CUME_DIST() OVER (), (((t0.c36 IN ())) NOTNULL), NTH_VALUE(json((((t0.c36, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c36, NULL)) AND ((t0.c36, t0.c0, t0.c0)))), (~ (0Xffffffffcbef92d1))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0) IS FALSE), ((t0.c36)-(t0.c0)), (+ (t0.c36))))<((',~', x'e525', (((t0.c0, t0.c0, t0.c36, t0.c0, t0.c36)) BETWEEN ((t0.c36, t0.c36, t0.c0, t0.c0, t0.c36)) AND ((t0.c36, t0.c0, t0.c36, t0.c0, t0.c36)))))) FROM t0 WHERE ((+ (0.5505319432357024)) COLLATE BINARY); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0 WHERE (((((x'2233')||('<Np/du\n?R')))!=(((x'') NOT BETWEEN ('-23267271') AND (0.34635944120865836))))); -- 0ms;
SELECT (CAST(t0.c36 AS NUMERIC) IN ()) FROM t0 WHERE (((((x'')LIKE('tw\rTp')))>((~ ('Qh'))))) LIMIT 2030546780 UNION SELECT DISTINCT AVG(t0.c36) FILTER(WHERE (((t0.c36)) NOT BETWEEN (((- (t0.c0)))) AND ((((t0.c0) IS FALSE))))) OVER () FROM t0 WHERE (((((((((((((((((0.41261810402794863)OR(0.2814654732406595)))AND(x'')))AND(0.6561098826243875)))OR(0.8883555029612387)))OR(0.9883567951707961)))OR('t/d.Z')))OR((((0Xffffffffdcbf8590))<>((x''))))))OR((('NkNs3tll')%('oO\r埔xd')))));SELECT DISTINCT (76178891 IN ()) COLLATE RTRIM FROM t0 WHERE ((((0.18040249880677983) BETWEEN (NULL) AND (1479964101)) IN (((('359244312', '', NULL)) BETWEEN (('1632367349', x'c10b', x'')) AND ((1.106367113E9, 0xffffffffc40a961c, 0.7624521572027061)))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c36 AS INTEGER)) IS TRUE) FROM t0; -- 0ms;
SELECT ((((NOT (t0.c0))))==((CAST(t0.c36 AS NUMERIC)))), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((COUNT(*), COUNT(*), AVG(t0.c36))) AND ((CASE WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c36 ELSE t0.c0 END, (t0.c0 IN ()), (~ (t0.c36))))), LAG(t0.c0, (((t0.c36 IN ())) NOT NULL), (((t0.c0 COLLATE BINARY))=((((t0.c36)*(t0.c36)))))) OVER () FROM t0 WHERE (((x'ab4a' COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT ((((t0.c36) NOTNULL)) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT ((UPPER(t0.c36))<((('1389086670') BETWEEN (t0.c36) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((('1314309615')=(810718200))) BETWEEN (TRIM(DISTINCT 0.32744638030610296, x'')) AND (TYPEOF(0.5712936796098712)))) GROUP BY (((~ (t0.c36)))OR(t0.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT -1.291979459E9, t0.c36, CAST((+ (t0.c0)) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c36)AND(t0.c36)))AND(t0.c36))) NOT BETWEEN (t0.c0) AND (((((((((t0.c36)AND(0Xfffffffff51a6859)))OR(t0.c0)))AND(t0.c36)))AND(t0.c36)))), NTH_VALUE((((('1086427967')AND(t0.c0)))OR((((t0.c36, t0.c36, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c36)) AND ((NULL, t0.c36, t0.c0))))), CASE ((t0.c0) BETWEEN (t0.c36) AND (t0.c36))  WHEN ((t0.c0) NOT BETWEEN (1.32278582E8) AND (t0.c0)) THEN (- (t0.c0)) ELSE t0.c36 COLLATE RTRIM END) OVER ( ORDER BY CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c36 END THEN (~ (t0.c36)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END ASC  NULLS LAST), ((COUNT(*)) NOT BETWEEN (((t0.c36)||(t0.c0))) AND (((t0.c36)*(t0.c0)))) FROM t0 WHERE (CASE json_insert(NULL, 0.08070862485747887, '-1065031273')  WHEN (((0.28252793749685523))>=((NULL))) THEN (((-1.676305796E9)) NOT BETWEEN ((90204154)) AND ((NULL))) ELSE (- (x'')) END);SELECT (((t0.c36, x'', ((('z')) NOT BETWEEN ((t0.c0)) AND ((t0.c36)))))<=((t0.c36, t0.c36 COLLATE NOCASE, (((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c36, t0.c0)))))) FROM t0; -- 0ms;
SELECT DISTINCT TOTAL((('-990959577')*(t0.c0))) OVER () FROM t0 WHERE (((-1511090081 COLLATE NOCASE)AND(CASE 0.5767533450476383  WHEN 0xffffffffb31dbc6b THEN NULL END))); -- 0ms;
SELECT DISTINCT ((((t0.c36)<=(t0.c0)))GLOB((t0.c0 IN ()))) FROM t0 WHERE ((((((((0xfffffffffaa81181)) NOT BETWEEN (('')) AND ((NULL))))OR('0.010972101531583789' COLLATE RTRIM)))AND(((0.9608932013215687) NOT NULL)))) GROUP BY ((((((t0.c0)>(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND ('1654410740')))))OR(((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c36)))) ORDER BY CASE CASE t0.c0  WHEN t0.c36 THEN t0.c36 ELSE t0.c0 END  WHEN ((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c36)) THEN ((((((((t0.c36)OR(t0.c0)))AND(t0.c36)))AND(t0.c0)))AND(t0.c0)) END  NULLS FIRST; -- 0ms;
SELECT NULLIF(TRIM(DISTINCT t0.c0, t0.c36), ((t0.c0)/(t0.c0))) FROM t0 WHERE (DATE(((((((((NULL)OR(x'')))OR(NULL)))OR(x'95c9250e')))AND(NULL)), ((('-1682089389', x'0196', NULL)) BETWEEN ((0.7910101655172418, -202477555, 1916255917)) AND ((2002220642, x'', 0.5994297879329586))), CASE x''  WHEN '1389086670' THEN 1846645747 ELSE 0.36609610068451415 END)) ORDER BY ((((t0.c36) NOTNULL)) BETWEEN (CAST(t0.c36 AS NUMERIC)) AND (((((t0.c36)AND(t0.c0)))AND(t0.c0)))) ASC; -- 1ms;
SELECT ALL CASE t0.c36 COLLATE NOCASE  WHEN LIKELIHOOD(t0.c36, 0.8374573155015173) THEN ABS(DISTINCT t0.c0) WHEN ((t0.c0) NOT NULL) THEN LTRIM(t0.c0) WHEN t0.c0 COLLATE RTRIM THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c36))) ELSE (t0.c36 IN ()) END FROM t0 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT ((GLOB(t0.c36, t0.c0)) NOT BETWEEN (t0.c36 COLLATE RTRIM) AND (((((((((t0.c0)OR(x'4445303d')))AND(t0.c0)))AND(t0.c36)))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT ((CAST(t0.c0 AS TEXT))<>(t0.c36)), ((((t0.c0)IS NOT(t0.c0)))==(((t0.c36)>=('-667532733')))), (~ ((t0.c36 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST('{E' AS INTEGER))>(((t0.c36)OR(t0.c0)))), CAST(MAX(t0.c0) AS REAL), (((((0xffffffff901444c5)<>(t0.c36))))==((t0.c0 COLLATE BINARY))) FROM t0; -- 0ms;
SELECT (NOT (AVG(x''))) FROM t0 GROUP BY ((SUBSTR(t0.c0, '')) ISNULL), CAST((NOT (t0.c36)) AS REAL), ((x'')IS NOT(((((t0.c36)OR(t0.c36)))AND(t0.c36)))); -- 0ms;
SELECT DISTINCT TIME(t0.c0 COLLATE BINARY, ((t0.c36) NOTNULL), GROUP_CONCAT(t0.c0)), GROUP_CONCAT(((t0.c0)==(t0.c0))) OVER (), ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(TRIM(DISTINCT t0.c0, t0.c36))))OR(((t0.c36) IS FALSE))) FROM t0 WHERE ((((((('1e500')AND(NULL)))OR(NULL)))IS((((x'', 0.15754424983277804, 0.6665805253830561))>=((x'', -809976716, 0.4012900509259234)))))); -- 0ms;
SELECT 1.488150756E9, TOTAL(MAX(t0.c36)) COLLATE RTRIM, (((NOT (t0.c36)))&((((t0.c36, x'', t0.c0))<>((t0.c36, t0.c0, t0.c0))))) FROM t0;SELECT DISTINCT ((CAST(t0.c0 AS TEXT))>(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE ((((((((0.39616754570808344)) NOT BETWEEN ((0.49985219812108905)) AND ((0.8917975600183888))))OR(((((((((((((0.37510142151757253)OR('1486069096')))OR('1106367113')))AND(0.014290337504426986)))OR(0.05988931928879493)))OR(x'')))AND(x'')))))OR(((0.2902106042814281)==(''))))); -- 0ms;
SELECT CASE (((t0.c0))>((t0.c36)))  WHEN (t0.c36 IN (t0.c0)) THEN (((t0.c36, t0.c0, 0.011514248535282268)) NOT BETWEEN ((t0.c0, x'', '/6')) AND ((t0.c36, t0.c0, t0.c36))) WHEN CAST(t0.c0 AS BLOB) THEN COUNT(*) WHEN (('972042196')>(t0.c0)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0) IS TRUE) THEN COALESCE(DISTINCT t0.c0, t0.c36) WHEN ((t0.c36) BETWEEN (t0.c0) AND (t0.c36)) THEN ((t0.c0)>=(t0.c36)) END, ((0.9241861391155081)==(CAST(t0.c36 AS TEXT))), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((t0.c36)AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c36) AND (t0.c36)), (t0.c0 IN (t0.c0)))) AND (((~ (t0.c36)), ((t0.c0)-(t0.c0)), x''))), IFNULL(((((t0.c36)AND(t0.c36)))OR(t0.c0)), t0.c0), load_extension(((t0.c0)%(t0.c36))) FROM t0 WHERE ((~ (((NULL)<<(x'')))));SELECT 0.05452761316578658, (- (x'')), CASE (t0.c36 IN ())  WHEN ((t0.c36) IS TRUE) THEN ('j!E%3浺u' IN (t0.c36, t0.c36)) ELSE ((t0.c0)>(t0.c36)) END, (((t0.c0 IN ())) NOTNULL), ((CASE t0.c36  WHEN t0.c36 THEN t0.c0 ELSE t0.c0 END) NOTNULL) FROM t0 GROUP BY ((((((t0.c36)OR(t0.c36)))AND(t0.c36))) NOT NULL) HAVING AVG(((t0.c0) NOTNULL)); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (((x'7038')) BETWEEN ((t0.c0)) AND ((t0.c36)))) FROM t0 WHERE (((((((((0.4273856299187534)AND('0.9154211302427065')))OR(0.04968681176070178)))OR(1.793379726E9)))AND(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (- (NULL)) FROM t0; -- 0ms;
SELECT ((json_array_length(t0.c36)) BETWEEN (t0.c0) AND (LIKE(t0.c0, 1330227227))) FROM t0 WHERE (json_remove(((0.2552698914839836) IS FALSE), NULL COLLATE BINARY, ABS('0|8h-uG-'), CASE WHEN 'rNY' THEN x'' WHEN -343476477 THEN NULL WHEN 9223372036854775807 THEN '' ELSE '9*%r>%' END)) ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) IS TRUE))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c36 WHEN t0.c0 THEN t0.c0 WHEN t0.c36 THEN '634743322' ELSE t0.c36 END)))  NULLS LAST LIMIT -266264993; -- 0ms;
SELECT CAST((t0.c36 IN ()) AS TEXT) FROM t0; -- 0ms;
SELECT ((x'592cb107' COLLATE NOCASE)IS NOT((((t0.c36))!=((t0.c0))))) FROM t0 WHERE ((('Se')IS NOT(CAST('-682307285' AS BLOB)))); -- 0ms;
SELECT CASE t0.c36  WHEN t0.c36 THEN t0.c0 END COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)>(t0.c36))) NOTNULL) FROM t0 GROUP BY CAST(t0.c0 AS INTEGER) COLLATE NOCASE HAVING (+ (CASE t0.c36  WHEN t0.c36 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c36 THEN t0.c36 END)); -- 0ms;
SELECT ALL CASE ((t0.c36)OR(t0.c0))  WHEN CASE t0.c36  WHEN t0.c0 THEN NULL END THEN ((((((((t0.c36)OR(t0.c0)))AND(0.9883567951707961)))AND(t0.c36)))AND('1949229686')) END FROM t0 WHERE ((((('/6')IS(1.737344286E9))) NOTNULL)); -- 0ms;
SELECT COUNT(*), ((((((t0.c0)OR(t0.c0)))OR(t0.c36)))||(t0.c0)), ((x'')>((- (t0.c0)))) FROM t0 WHERE ((((1978781773, 1263817921, 0.7948776284697243)) NOT BETWEEN ((-1672504099, '1846645747', -770522192)) AND ((-1.64533347E8, 0.9590925546799804, 1.866572906E9))) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT (~ (ABS(t0.c0))), CAST('-1676305796' AS REAL) COLLATE BINARY, ((COALESCE(DISTINCT t0.c36, t0.c36))/(((NULL)GLOB(t0.c0)))) FROM t0 WHERE ((((((NULL) NOT NULL)))<=((((NULL)>=('')))))); -- 0ms;
SELECT DISTINCT (((~ (t0.c0))) ISNULL) FROM t0 WHERE (((((((0.3334021179172546)+('jL')))OR(ABS(DISTINCT NULL))))AND(((((x'b041')OR(NULL)))OR(0.9241861391155081))))); -- 0ms;
SELECT DISTINCT (~ (((t0.c36) BETWEEN (t0.c0) AND (t0.c36)))) FROM t0; -- 0ms;
SELECT ((CASE WHEN t0.c36 THEN t0.c0 END) NOT BETWEEN (QUOTE(t0.c36)) AND ((~ (t0.c0)))), COUNT(*) OVER ( PARTITION BY (LOWER(t0.c36) IN (((x'') BETWEEN (t0.c36) AND (t0.c0)))), ((((t0.c36)>=(t0.c36)))GLOB(((t0.c36)IS(t0.c0))))), ((~ (t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT HEX(CAST(t0.c36 AS TEXT)), -1.039151954E9, (((+ (t0.c0))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c36)>=(t0.c0)) IN ()) FROM t0 ORDER BY (~ (((t0.c0)LIKE(t0.c36)))) ASC  NULLS FIRST; -- 0ms;
SELECT AVG(0Xfffffffffed4f8a9) OVER () FROM t0; -- 0ms;
SELECT ALL ((t0.c36 COLLATE RTRIM) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT SUM((- (0Xffffffffdb00e60d))) OVER () FROM t0 WHERE (((x'' COLLATE NOCASE)!=(CASE WHEN -1881349792 THEN x'' ELSE 853914773 END))); -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c36 IN (t0.c36)) THEN (((t0.c0))>=((t0.c0))) WHEN CASE WHEN NULL THEN t0.c36 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN (t0.c0 IN ()) WHEN MAX(t0.c36) THEN (~ (t0.c0)) WHEN AVG(t0.c0) THEN CASE t0.c36  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c36 WHEN t0.c36 THEN t0.c0 WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 ELSE (~ (t0.c36)) END, x'', CASE WHEN (- (t0.c0)) THEN AVG(0Xffffffffcec39836) ELSE ((((((((t0.c36)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END FROM t0 WHERE (((((CASE x''  WHEN 'S[FE1s' THEN '1e500' END)AND(((-1676167710)IS NOT(0.14582481740023512)))))OR(CASE WHEN x'' THEN 'pV)V' WHEN NULL THEN 0x5e5be0d6 WHEN NULL THEN x'7e17' END))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((+ (0.5482267967617898))) NOT NULL)) OVER (), json_remove(((t0.c0)=(t0.c0)), (t0.c0 IN ())), ((((((((((NULL) NOT BETWEEN (t0.c0) AND (t0.c36)))AND(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c36 AS BLOB))))OR((NOT (t0.c36)))))OR((t0.c36 IN (t0.c36)))) FROM t0 WHERE ((~ (NULL))) GROUP BY ((((t0.c36) IS FALSE)) BETWEEN (t0.c36) AND (((((NULL)OR(t0.c0)))AND(t0.c36)))) HAVING t0.c0; -- 0ms;
SELECT DISTINCT ((((t0.c0)+(t0.c36))) IS FALSE), LEAD((((((t0.c36))<((t0.c0)))) NOT BETWEEN (((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ('Pn8T4\rA.k')), NULLIF((+ (t0.c36)), (t0.c36 IN ())), t0.c0) OVER ( RANGE ((t0.c36) IS TRUE) PRECEDING EXCLUDE NO OTHERS), ((((t0.c36)>>(t0.c0)))LIKE(t0.c0 COLLATE BINARY)) FROM t0 ORDER BY json_patch(t0.c36, t0.c36) COLLATE BINARY ASC, (NOT (((t0.c0)<>(t0.c0))))  NULLS LAST, (((INSTR(t0.c36, t0.c0)))<=((((t0.c36) NOT NULL)))) DESC  NULLS FIRST;SELECT DISTINCT highlight(CASE WHEN t0.c0 THEN t0.c0 END, 0.773479686389652, load_extension(t0.c0), x'') FROM t0;SELECT 'j[%Z' FROM t0; -- 0ms;
SELECT DISTINCT (0.20779134099235075 IN (((((t0.c36)OR(1453426167)))AND(t0.c0)))) FROM t0 WHERE ((((('-1039151954') IS FALSE)) IS FALSE)) LIMIT 1793379726; -- 0ms;
SELECT DISTINCT (~ (((t0.c36) NOT BETWEEN (t0.c36) AND (t0.c36)))) FROM t0 WHERE (CASE WHEN x'' THEN CASE NULL  WHEN '' THEN x'3fd7' END ELSE '1642890699' END); -- 0ms;
SELECT DISTINCT t0.c36 FROM t0 WHERE (LTRIM(MAX(NULL, NULL))); -- 0ms;
SELECT ALL (t0.c0 IN (t0.c36, '(j	8DB')) COLLATE NOCASE FROM t0 WHERE ((((((0Xffffffff8f74248c IN (x'')))OR(((x'')|(0.9709753955871885)))))AND((x'' IN ())))); -- 0ms;
SELECT COUNT(*) FROM t0; -- 0ms;
SELECT DISTINCT (((- (t0.c0)))<=(((((t0.c0)AND(t0.c36)))OR(t0.c0)))) FROM t0 WHERE ((('(.')LIKE(((-1746905132) NOT BETWEEN ('?i䄻?XT1R') AND (-1206313414))))); -- 0ms;
SELECT ALL CAST(CAST(t0.c36 AS TEXT) AS TEXT), ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c36)))GLOB(((((t0.c0)OR(t0.c0)))OR(t0.c36)))), AVG(t0.c0) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0)>(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(LENGTH(t0.c36))) FROM t0 WHERE (CASE WHEN (('wvR{Y⇨4u') NOT BETWEEN (NULL) AND ('\n&')) THEN CAST(2.03054678E9 AS NUMERIC) ELSE (x'3d5e' IN ()) END) LIMIT -1761289756 OFFSET 359244312; -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c36)))AND((+ (NULL)))))OR(((((t0.c36)OR(t0.c36)))OR('-1844989559')))) FROM t0; -- 0ms;
SELECT COUNT(CAST(t0.c36 AS BLOB)) FROM t0 WHERE ((((((0X262d6581)AND(''))))>=((((x'')<=(NULL)))))) LIMIT 1793379726; -- 0ms;
SELECT DISTINCT x'a344' FROM t0 WHERE (((((((0X7e7a2886)) NOT BETWEEN ((NULL)) AND (('-1746905132')))))<(((((0x77f76873)) NOT BETWEEN ((' ်u3x')) AND (('2131039695'))))))); -- 0ms;
SELECT UNLIKELY(((((((((t0.c36)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))), ((t0.c0 COLLATE BINARY)*((((t0.c36, t0.c0, 0.45688343110652185))>((t0.c0, t0.c36, t0.c0))))), ((((((((((((t0.c0)OR(t0.c36)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(TOTAL(t0.c0))))AND(TOTAL(0.496870369752637))) FROM t0 WHERE ((((('690415855')||(NULL))) NOTNULL)) LIMIT 506466403; -- 0ms;
SELECT DISTINCT CASE ((t0.c36) BETWEEN (t0.c36) AND (t0.c36))  WHEN (1453426167 IN ()) THEN 0.9616603583479773 COLLATE RTRIM ELSE ((t0.c36) NOT BETWEEN (t0.c0) AND (t0.c0)) END FROM t0; -- 0ms;
SELECT ALL MIN((((NULL))<>((t0.c0)))), GROUP_CONCAT(t0.c36) OVER (), CASE WHEN ((t0.c0)>=(t0.c36)) THEN ((t0.c0) IS FALSE) ELSE 0.9691576813367053 END FROM t0; -- 0ms;
SELECT UNLIKELY(DISTINCT AVG(t0.c36)), NULL, CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c0 END COLLATE RTRIM FROM t0 WHERE (((GLOB(x'e4f0', '708180610'))==(((((0.22479888142576288)OR(0.3915057952112221)))AND(0.9485578892689083))))); -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT t0.c36))>=(((t0.c0) BETWEEN (t0.c0) AND (0.7647626178796586)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c36 FROM t0 WHERE (((((((('22854546')AND(x'1138')))OR(-2026229929))))<((0Xffffffffe4cfd928)))) GROUP BY ((1616972419) IS TRUE), ((((CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END)AND(((0xffffffffdd376042) IS TRUE))))AND(((t0.c36) IS FALSE))), t0.c36 HAVING ((t0.c0 IN (t0.c0)) IN (((t0.c36)LIKE(t0.c36)))); -- 0ms;
SELECT ALL (((((((((t0.c0 IN ()))OR(((t0.c0) BETWEEN ('/㴩') AND (t0.c0)))))OR((t0.c0 IN (t0.c0, NULL)))))OR(((t0.c36)-(t0.c36)))))AND(((t0.c36) BETWEEN (t0.c36) AND ('-1877719867')))), UNLIKELY(((t0.c0)GLOB(t0.c0))), TRIM(MAX(t0.c36)), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))IS((- (t0.c36)))), ((MAX(t0.c36))-(TOTAL(1.540823671E9))) FROM t0; -- 0ms;
SELECT DISTINCT (NOT ((- (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((((t0.c36)) BETWEEN ((t0.c36)) AND ((t0.c36))))AND(CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END)))AND(t0.c36 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ALL CAST(0.5738376833537812 AS BLOB) FROM t0 WHERE (((((((((NULL COLLATE RTRIM)OR((((0.646679362695275)) BETWEEN ((0Xffffffffb31dbc6b)) AND ((x''))))))OR(((x'4e92') BETWEEN ('-953629144') AND ('')))))AND((((0.6924266595857628)) BETWEEN (('-533561777')) AND ((x''))))))AND(((((((((NULL)AND('|O!')))AND(x'')))OR('')))OR(x''))))); -- 0ms;
SELECT ((((TOTAL(t0.c36))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(CASE '-1039151954'  WHEN t0.c36 THEN '5?' END)) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c36)) BETWEEN ((t0.c36)) AND ((t0.c0))))==(((((t0.c36)AND(t0.c0)))OR(t0.c0)))) FROM t0 LIMIT -422776840; -- 0ms;
SELECT ALL ((json_remove(t0.c0, t0.c36, t0.c36, t0.c36)) NOT BETWEEN (((0.010972101531583789) BETWEEN (t0.c36) AND (t0.c36))) AND (t0.c36 COLLATE RTRIM)) FROM t0;SELECT 0.18792901012167118, (((t0.c0, t0.c0, t0.c36)) BETWEEN ((((t0.c36)==(0.7223155958198219)), (((t0.c0, t0.c0, t0.c36)) NOT BETWEEN (('[]', '', t0.c36)) AND ((t0.c36, t0.c36, t0.c36))), SUM(t0.c36))) AND ((t0.c0, 'X&Fq', TRIM(t0.c36)))), GROUP_CONCAT(json_valid(t0.c36)) OVER () FROM t0; -- 0ms;
SELECT COUNT(CAST(t0.c0 AS NUMERIC) COLLATE BINARY) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM FROM t0 WHERE ((NOT (CAST('518170824' AS INTEGER)))); -- 0ms;
SELECT DISTINCT CASE ((t0.c36)OR(t0.c36))  WHEN t0.c0 THEN t0.c0 ELSE GROUP_CONCAT(t0.c36) END FROM t0; -- 0ms;
SELECT ALL (t0.c36 IN ()), ((((t0.c36)!=(t0.c0)))*(t0.c36)), (((((((t0.c36)OR(t0.c36)))OR(t0.c0))))>((INSTR(t0.c0, t0.c0)))) FROM t0 WHERE ((CASE x'1249'  WHEN NULL THEN '868773439' END IN ())); -- 0ms;
SELECT ALL AVG(((t0.c36)>=(t0.c36))), AVG(0.31027289758957444), t0.c0 FROM t0 WHERE (((((x'')AND(((((x'')AND(0.5444956351879126)))AND(NULL)))))OR('^' COLLATE RTRIM))) LIMIT 2062264465; -- 0ms;
SELECT (t0.c36 IN ()) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, (((((t0.c0, t0.c0, t0.c0))<(('-1898850274', 0xffffffffd26c9169, t0.c0)))) BETWEEN (((t0.c36) BETWEEN (0.27512818087892044) AND (t0.c36))) AND (TOTAL(t0.c0))), ((CHANGES())IS(((t0.c36)<=(t0.c0)))) FROM t0; -- 0ms;
SELECT t0.c0, COUNT(*) OVER (), ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c0) NOT BETWEEN (0.8139835435214077) AND (t0.c0))) AND (((t0.c36)GLOB(t0.c36)))) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c36)&(t0.c0)))OR(TIME(t0.c0, t0.c0, t0.c0))))AND('-107997868')) FROM t0 WHERE (((LTRIM(NULL, 0.45683686653250233))OR((((NULL, 0.48651471285643844, NULL)) NOT BETWEEN ((0.7225714444152875, x'', x'')) AND ((NULL, NULL, NULL)))))); -- 0ms;
SELECT ((((CAST(t0.c36 AS NUMERIC))AND(((t0.c0)>(t0.c0)))))AND(TOTAL(-298328897))) FROM t0 WHERE (CAST(1.866572906E9 AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TOTAL((((t0.c0))>((t0.c36)))), ((LOWER(t0.c0)) ISNULL), (~ ((+ (t0.c0)))) FROM t0 ORDER BY (((t0.c36, t0.c36, t0.c36)) BETWEEN ((t0.c36 COLLATE RTRIM, t0.c0 COLLATE BINARY, ((t0.c36)<=(t0.c0)))) AND (((t0.c36 IN ()), ((t0.c0)IS(t0.c0)), (((t0.c0)) BETWEEN ((t0.c36)) AND ((t0.c36)))))) DESC  NULLS LAST; -- 0ms;
SELECT ((((((((((t0.c36)*(t0.c0)))AND(NULL)))OR(HEX(t0.c0))))OR((((t0.c36))<((t0.c0))))))OR((t0.c0 IN ('-1487601089', t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c36)<<(t0.c0)))IS NOT(((t0.c0)>=(t0.c36)))), ((((t0.c36) NOT NULL))GLOB(ABS(t0.c0))), (- (CASE WHEN t0.c0 THEN t0.c36 WHEN t0.c0 THEN t0.c0 WHEN '0.554342419550758' THEN t0.c36 ELSE t0.c36 END)) FROM t0; -- 0ms;
SELECT DISTINCT ((NULLIF(t0.c0, t0.c36))|(((t0.c36)-(t0.c36)))) FROM t0 GROUP BY (((t0.c0)AND(t0.c36)) IN (NULL, CASE WHEN t0.c0 THEN t0.c36 END)) HAVING ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c36, t0.c0, '372549519')))))<=(((NOT (t0.c36))))); -- 0ms;
SELECT ALL t0.c36 FROM t0 WHERE ((~ (((NULL)+(NULL))))); -- 0ms;
SELECT DISTINCT CAST(((t0.c36) ISNULL) AS TEXT) FROM t0 WHERE ('-2083977329'); -- 0ms;
SELECT DISTINCT LEAD(CASE (NULL IN ('271862204'))  WHEN ((t0.c36)IS(t0.c36)) THEN (t0.c0 IN ()) END, ((+ (t0.c0)) IN ()), (((t0.c36, t0.c0, t0.c0)) BETWEEN (((NOT (t0.c36)), CAST(t0.c36 AS INTEGER), ((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c0 COLLATE RTRIM, ((t0.c36)AND(t0.c0)), (((t0.c0)) BETWEEN ((x'1270')) AND ((''))))))) OVER (), (((t0.c36 IN ()))>(((t0.c36)>(t0.c0)))), ((CAST(t0.c0 AS REAL)) IS TRUE) FROM t0 WHERE (((-1028453017 COLLATE NOCASE) NOT BETWEEN (((x'46b5')/('1914275429'))) AND ('LP퇏_]-Q' COLLATE BINARY))); -- 0ms;
SELECT (((((t0.c0))>((t0.c0))))/(((t0.c36)*(t0.c36)))) FROM t0 WHERE ((((- (0.8527516395967452)))<=(((0.5401601304717506)IS(-489243174))))); -- 0ms;
SELECT (~ (((((((((((((((((t0.c0)AND(t0.c0)))AND(0.572378522595246)))OR(t0.c36)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c36)))OR(t0.c0)))) FROM t0; -- 0ms;
SELECT (((((NOT (t0.c0)))OR(COUNT(*))))OR(json_type(NULL))), ((0Xffffffff95addd10)/(CASE WHEN t0.c36 THEN t0.c0 END)), CASE CASE t0.c36  WHEN t0.c36 THEN t0.c0 END  WHEN ((t0.c36)-(t0.c0)) THEN '-232542664' END FROM t0 WHERE (CASE ((x'')<=(0.5871093350964732))  WHEN ((('T')) NOT BETWEEN ((1.869063834E9)) AND ((x'4bb6'))) THEN ((x'7703') IS FALSE) WHEN ((NULL)-('ae瘿wE!ﳖ0S')) THEN CASE WHEN '176220529' THEN NULL END WHEN ((NULL)>('')) THEN (('-107997868') IS FALSE) ELSE (NOT (NULL)) END) LIMIT 1909753755; -- 0ms;
SELECT ALL (~ ((((t0.c36, t0.c36, t0.c36)) NOT BETWEEN ((t0.c0, t0.c0, t0.c36)) AND ((t0.c36, t0.c36, t0.c36))))) FROM t0 WHERE (((NULL)AND(((('-1702931728'))==((0.3061426761305116)))))); -- 0ms;
SELECT DISTINCT TOTAL((((t0.c36, t0.c0, t0.c36))<((t0.c0, '', t0.c36)))) OVER ( ORDER BY CAST((t0.c36 IN ()) AS TEXT) ASC  NULLS FIRST) FROM t0 GROUP BY UNICODE(t0.c36 COLLATE NOCASE), t0.c0, 'O?R1w' ORDER BY t0.c36 ASC, ((((t0.c0)<<(t0.c0)))<=(((t0.c36)GLOB(t0.c36)))); -- 1ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c36 ELSE t0.c36 END) BETWEEN (((t0.c36) BETWEEN (t0.c36) AND (t0.c36))) AND (t0.c36 COLLATE BINARY)), (((t0.c36)AND(t0.c36)) IN ()), COUNT(*) FROM t0 WHERE ((NULLIF(NULL, -1250937404) IN ())); -- 0ms;
SELECT DISTINCT (- ('')), LIKELY((- (0.01739854911705907))), ((t0.c36 COLLATE BINARY) BETWEEN (((((t0.c36)AND(t0.c0)))OR('1690997941'))) AND (LIKELIHOOD(t0.c0, 0.6064688772567619))) FROM t0 WHERE ((('0.0')>(LIKELY(0.2525171066519116)))); -- 0ms;
