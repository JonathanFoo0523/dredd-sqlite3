-- Time: 2024/06/07 18:16:09
-- Database: database15
-- Database version: 3.40.0
-- seed value: 164011015
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-961998478,2');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.6255149161381213); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, 0.921324700642624, '-961998478', x'7965', ''''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
VACUUM main; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))&(CAST(NULL AS NUMERIC))); -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('K[W籘''n籘L'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '373468640 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x7091102), (667230547), (x'd9b2'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.012970513674949058), (3.7346864E8), (0.5300868157011214); -- 1ms;
PRAGMA main.soft_heap_limit = 3959357550132539454; -- 0ms;
PRAGMA cache_spill = 4048101168310001302; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x1642ade0), (x'b837'), (''); -- 1ms;
CREATE VIRTUAL TABLE rt83 USING rtree(c0, c1, c2, c3, c4, +c5 INTEGER ); -- 0ms;
INSERT OR REPLACE INTO rt83(c0, c5) VALUES ('802506931', x''); -- 0ms;
END; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA temp.wal_autocheckpoint = -6813731676757097983; -- 0ms;
END; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1071918737); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END TRANSACTION; -- 1ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 118034690);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR ABORT INTO rt1(c2, c0) VALUES (x'', '667230547'), ('', NULL), (x'', 866681630); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (3959357550132539454, '', '[?Fioab8', x'', '667230547'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1, c2 UNINDEXED, detail=full); -- 0ms;
INSERT OR IGNORE INTO rt83(c1) VALUES (''); -- 0ms;
INSERT OR FAIL INTO rt1(c3, c2, c1, c0) VALUES (x'', -1561055558, '802506931', x''); -- 0ms;
INSERT OR FAIL INTO rt83 VALUES ('q#iL_I䢳_', NULL, NULL, x'1761', '0.5300868157011214', x''); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((+ (0.4649748227748596)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL), ('-1390395283'), ('373468640'); -- 1ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt83', ''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt83 SET c4=x'', c0=x''; -- 0ms;
UPDATE OR ABORT rt83 SET (c3, c1)=(0.19885259466833916, x'19e8976a') WHERE (((~ (rt83.c1))) ISNULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1530128650); -- 0ms;
UPDATE OR IGNORE rt83 SET c3=x'' WHERE ((0Xffffffffa9667c58) BETWEEN (((rt83.c2) NOT BETWEEN (rt83.c0) AND (rt83.c1))) AND (rt83.c2 COLLATE NOCASE)); -- 0ms;
PRAGMA secure_delete; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DROP TABLE IF EXISTS rt83; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO rt1(c3, c1) VALUES (NULL, x''); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt1 SET c2='h8', c1=x'' WHERE (((vt1.c1 IN ()))-(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END)); -- 0ms;
INSERT OR IGNORE INTO rt1(c4) VALUES (''); -- 1ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt1(c2, c0) VALUES (x'2c9c', x''); -- 1ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (x'', NULL, '1991029590'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt1(c2, c0) VALUES (0xffffffffcd3a60d8, NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt1(c2, c0, c1) VALUES ('w匊k^', '-1946064764', 0.7245148539157464), ('', 0.05842191001977759, NULL), (x'f40e', 0.3615145594756256, 0.8056135344999228); -- 4ms;
INSERT OR IGNORE INTO vt1(c2) VALUES (0.8099574245434549); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('0.012970513674949058'), (''), (0.5479387221314265); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1836849906); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR ROLLBACK rt1 SET (c1)=(0.7743115546325461) WHERE ((((((rt1.c4)|(rt1.c1)))OR(((rt1.c4)/(x'')))))AND(UNLIKELY(DISTINCT rt1.c2))); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0xffffffff82f2e01f); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((rt1.c3 COLLATE RTRIM)|((NOT (vt1.c1)))) FROM rt1, vt1, vt0 WHERE (((((((((((0.7245148539157464) BETWEEN (0.30082585749916946) AND ('')))OR('9-' COLLATE BINARY)))OR((- (x'')))))OR(0.04301962787115288)))AND((('3959357550132539454') NOT BETWEEN (0x2c1e6f73) AND ('-824387580'))))); -- 0ms;
SELECT ((rt1.c2 COLLATE RTRIM) NOT BETWEEN (((rt1.c1)<=(rt1.c2))) AND (json_type(vt1.c0))) FROM vt0, rt1 WHERE ((- (NULL)) COLLATE RTRIM);SELECT DISTINCT (((rt1.c1 IN ())) IS FALSE) FROM rt1, vt1 WHERE (((NULL)>=(x'')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT COUNT(((vt1.c2)|(rt1.c4))) FROM rt1, vt0, vt1 WHERE ((((((((('-8813462')AND(0x67d4afe3)))AND(0.308945225015696)))AND(((NULL) NOTNULL))))AND(CAST('' AS NUMERIC)))) GROUP BY ((((CASE WHEN rt1.c2 THEN rt1.c0 END)AND(((rt1.c3)LIKE(vt1.c0)))))AND(rt1.c2)) HAVING vt1.c1; -- 0ms;
SELECT DISTINCT ((COUNT(*))OR(IFNULL(vt1.c1, rt1.c3))), MIN(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 END), COUNT((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((x'')))) OVER ( ORDER BY ((rt1.c1)-(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST) FROM rt1, vt1 WHERE (((0X51840c7e)&(((0.4283422619457732)*(x'fe4b'))))); -- 0ms;
SELECT DISTINCT vt1.c0, rt1.c4, CAST(((rt1.c1)LIKE(vt1.c2)) AS TEXT) FROM vt1 ORDER BY ((CAST(rt1.c3 AS TEXT)) IS TRUE), ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c4))) IS TRUE)  NULLS LAST, ((vt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;SELECT DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)) COLLATE RTRIM FROM rt1, vt0; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt0.c0) IN ()) FROM vt0, vt1, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1 COLLATE BINARY, ((vt1.c0) IS FALSE), json_insert(vt0.c0, rt1.c4, vt1.c0)))=((rt1.c4, ((((vt0.c0)OR(vt1.c1)))OR(rt1.c0)), rt1.c2 COLLATE BINARY))) FROM vt0, rt1;SELECT DISTINCT (((''))>(((((rt1.c4, rt1.c1, vt1.c2))<((vt0.c0, vt1.c1, rt1.c4)))))) FROM vt0, rt1 WHERE ((((((('-195085396')IS NOT(0.05364243736511942)))AND(((x'')LIKE('1204913631')))))AND(LIKELY('-318282591'))));SELECT (((NOT (vt0.c0))) BETWEEN (((rt1.c0) IS FALSE)) AND (SUM(vt1.c1))) FROM vt0 WHERE (((((((0.035934046444432544)OR(0.29793174571691183)))AND(x'')))||(((NULL)<=('-318282591')))));SELECT DISTINCT CAST(SUM(vt0.c0) AS REAL), (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((0.02656063461990532))), COUNT(((rt1.c3)<=(rt1.c0))) OVER () FROM vt1 WHERE (((NULL) NOT BETWEEN (CASE WHEN '1270186006' THEN NULL ELSE x'' END) AND ((('')>('139987413')))));SELECT DISTINCT TOTAL(vt0.c0 COLLATE RTRIM) FROM rt1, vt1, vt0; -- 1ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN ((vt0.c0)<=(rt1.c1)) WHEN TRIM(vt1.c2, vt1.c2) THEN (((rt1.c0))>=((vt1.c1))) WHEN ((rt1.c4)IS NOT(rt1.c3)) THEN MIN(vt0.c0) WHEN ((rt1.c1)+(rt1.c3)) THEN NULL WHEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) THEN TRIM(rt1.c2) END, (NOT (rt1.c3)), ((PRINTF(vt0.c0))-(((0.9110776850859188)>(vt1.c1)))) FROM vt0 WHERE (NULL);SELECT ALL CASE WHEN ((vt1.c2)>=(vt1.c1)) THEN CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c4 THEN '1329777631' WHEN vt1.c2 THEN 0.5247360720583842 END ELSE (((rt1.c0))<>((vt1.c1))) END, ((vt1.c0 COLLATE NOCASE)|(((vt0.c0) IS FALSE))), vt1.c1 FROM vt1, vt0;SELECT DISTINCT ((vt0.c0) BETWEEN (((vt1.c1) IS FALSE)) AND (((((vt1.c1)AND(rt1.c1)))AND(vt1.c2)))) FROM vt0 LIMIT 373468640;SELECT DISTINCT CAST((rt1.c4 IN (vt1.c0, rt1.c3)) AS BLOB) FROM rt1, vt0 WHERE (((CAST('SPdguU<' AS BLOB))AND(CASE NULL  WHEN '' THEN 0.6328840254671264 END)));SELECT ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE rt1.c4 END)<(x'')), (((((((vt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, vt1.c0, '1249180011')) AND ((rt1.c1, vt1.c1, rt1.c1))))OR(((vt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))))OR((- (866681630)))), ((((((((0Xffffffffc027874a)AND((NOT (rt1.c0)))))OR(DATE(rt1.c0, vt1.c2, vt1.c0))))OR(((rt1.c4)-('-1014806142')))))AND(TYPEOF(rt1.c2))) FROM rt1, vt0;SELECT ((((TYPEOF(DISTINCT rt1.c4))AND(((0.662852906208504)<(vt1.c0)))))AND(0.035934046444432544)) FROM rt1, vt0, vt1 WHERE (CASE WHEN ((((x'cd95')AND('-1071151286')))AND(0Xfffffffff5333713)) THEN NULL COLLATE RTRIM ELSE CAST(x'' AS INTEGER) END); -- 0ms;
SELECT DISTINCT (NOT (TYPEOF(rt1.c0))) FROM vt0;SELECT DISTINCT rt1.c4 FROM vt1;SELECT ALL LIKELY(((((vt1.c1)OR(rt1.c4)))AND(vt1.c1))) FROM rt1, vt1 WHERE ((((x'')) BETWEEN (((x'78534f65' IN ()))) AND ((CASE WHEN x'1bc3' THEN 0.8934434124005483 ELSE 0.6121098848577446 END)))); -- 0ms;
SELECT DISTINCT (((((((((((((rt1.c1 IN ()))OR(((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))))AND(CAST(rt1.c4 AS INTEGER))))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c1))))))AND(rt1.c1)))OR(((rt1.c0)||(rt1.c2)))))OR(UPPER(vt0.c0))) FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c2) ISNULL))*(((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) FROM rt1, vt1 ORDER BY ((((vt0.c0 COLLATE BINARY)OR(NULL)))AND(rt1.c3 COLLATE NOCASE)) DESC;SELECT DISTINCT (CASE WHEN rt1.c2 THEN rt1.c2 END IN (((rt1.c2)>>(rt1.c2)))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))), LTRIM(vt0.c0) COLLATE RTRIM, COUNT(CASE WHEN rt1.c2 THEN rt1.c3 ELSE vt1.c0 END), ((SQLITE_SOURCE_ID())>=(RTRIM('1172436696'))), (+ (((vt1.c1) IS TRUE))) FROM vt1, rt1 WHERE (CAST((('0.19885259466833916')>=('-746330579')) AS REAL)) GROUP BY (((NOT (rt1.c1))) IS TRUE) HAVING RTRIM(vt1.c0 COLLATE BINARY);SELECT DISTINCT ((AVG(vt1.c2))/((rt1.c1 IN (rt1.c0)))) FROM rt1 WHERE (((CASE WHEN '' THEN x'0124' END) BETWEEN ((+ (x''))) AND ((('-847196279') NOT BETWEEN (x'') AND (x''))))) ORDER BY LIKELIHOOD(((vt1.c0)&(rt1.c4)), 0.974942565496413) ASC, '-961998478' ASC;SELECT DISTINCT LAG(((CAST('fꜥw+Zꈠm' AS TEXT))&(CASE rt1.c2  WHEN vt1.c2 THEN rt1.c2 ELSE rt1.c0 END)), (CASE WHEN vt1.c2 THEN vt1.c0 ELSE rt1.c0 END IN ()), ((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) OVER () FROM vt1, rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c4 THEN rt1.c0 END) NOT BETWEEN (((((vt1.c1)AND(vt1.c1)))OR(rt1.c2))) AND (((rt1.c2) NOTNULL))) FROM vt1 WHERE ((((((+ (NULL)))AND(((x'') NOT NULL))))AND(((((NULL)OR(0Xffffffffa2765de4)))AND(0.7102221687569603)))));SELECT DISTINCT (((vt1.c1) ISNULL) IN ()), NTH_VALUE((- (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)))), ((CASE vt0.c0  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c2 END) BETWEEN (vt1.c1) AND (vt1.c1 COLLATE NOCASE))) OVER ( PARTITION BY ((vt0.c0) NOT BETWEEN (0.7524048466024104) AND (((vt1.c0)OR(rt1.c4)))), (rt1.c3 IN (vt1.c0)) COLLATE RTRIM COLLATE NOCASE, (((rt1.c1 IN ())) ISNULL), ((rt1.c0 COLLATE RTRIM)LIKE(rt1.c2))), TOTAL(x'') OVER () FROM vt1, vt0;SELECT ALL ((rt1.c4 COLLATE RTRIM)>((vt1.c1 IN ()))), GROUP_CONCAT(((1.1803469E8)-(vt1.c0))) OVER (), -425246831 FROM rt1 WHERE (((((x'')|(-907455174)))>((NOT (0X46849402)))));SELECT DISTINCT (TRIM(DISTINCT vt1.c1) IN (((rt1.c1)LIKE(rt1.c4)))) FROM vt0, rt1, vt1 WHERE (CASE WHEN ((0xffffffffe5f6eabb)IS(NULL)) THEN 0.38513146073959714 COLLATE BINARY WHEN CAST(x'' AS TEXT) THEN CASE x''  WHEN '975922615' THEN x'' WHEN 0.6255149161381213 THEN 0.19885259466833916 WHEN '' THEN NULL ELSE NULL END WHEN (NULL IN (x'5c776bab')) THEN (~ ('-1930825769')) END); -- 0ms;
SELECT ((((rt1.c0) BETWEEN (vt1.c1) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR(rt1.c1)))AND(vt1.c2))) AND (MIN(vt0.c0))), (((rt1.c0)<=(vt1.c0)) IN ()), ((LOWER(DISTINCT rt1.c2)) IS TRUE) FROM rt1, vt0, vt1; -- 1ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN (((((NULL))>((rt1.c0))))) AND (((NOT (vt1.c2))))), ((((rt1.c4 COLLATE NOCASE)AND(CAST(vt1.c1 AS NUMERIC))))AND(((rt1.c2) ISNULL))), CAST(CASE WHEN vt1.c1 THEN rt1.c2 ELSE NULL END AS REAL) FROM rt1 INNER JOIN vt0 ON LIKE((NOT (vt1.c0)), json_array(vt1.c2, rt1.c4), 'w') FULL OUTER JOIN vt1 ON ((((rt1.c2) NOTNULL))<=(json_valid(rt1.c2))) WHERE (('0.7245148539157464' IN (0.117951514380079, 56040511)) COLLATE RTRIM);SELECT DISTINCT (((vt1.c2)<>(vt0.c0)) IN ()), STRFTIME(rt1.c4, ((rt1.c3) NOT NULL), vt1.c1 COLLATE RTRIM), (NOT (((vt1.c0) NOTNULL))) FROM rt1, vt1 WHERE (ROUND(('&c#౾' IN ('')), ((x'') IS FALSE))); -- 0ms;
SELECT DISTINCT (('' COLLATE NOCASE)<<(json_quote(rt1.c0))) FROM vt0, vt1, rt1; -- 0ms;
SELECT ALL (((rt1.c3)LIKE(rt1.c3)) IN ()), GROUP_CONCAT(CASE WHEN vt1.c1 THEN rt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c0 ELSE vt0.c0 END) FILTER(WHERE CASE vt1.c1  WHEN vt1.c2 THEN rt1.c3 ELSE rt1.c1 END COLLATE NOCASE) OVER (), ((((vt1.c2)LIKE(rt1.c2)))&(CASE rt1.c1  WHEN vt0.c0 THEN '0.7245148539157464' END)), ((rt1.c1)|(CASE WHEN rt1.c2 THEN rt1.c4 END)), (NOT ((rt1.c3 IN (rt1.c2, vt1.c1)))) FROM vt1;SELECT DISTINCT ((((CASE vt1.c1  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN -1.134696542E9 WHEN 0.6255149161381213 THEN vt1.c1 ELSE vt1.c1 END)AND(((rt1.c3) ISNULL))))OR((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))) FROM vt0;SELECT DISTINCT vt1.c2 FROM vt1; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c3) NOT BETWEEN (vt0.c0) AND (vt1.c1)))), (((vt1.c2)==(vt0.c0)) IN ()), CAST(vt1.c2 COLLATE RTRIM AS TEXT), CUME_DIST() OVER (), 0.7264539372284654 FROM vt1 WHERE ((- ((((('0.0')OR(x'7fb9')))AND('-961998478')))));SELECT DISTINCT CAST(rt1.c1 AS NUMERIC) COLLATE BINARY FROM vt1 GROUP BY CAST(CAST(vt1.c1 AS NUMERIC) AS TEXT) HAVING ((rt1.c2)<>(rt1.c2)) COLLATE RTRIM;SELECT CAST((+ (rt1.c3)) AS REAL) FROM vt1 WHERE (COALESCE(DISTINCT ((0.7743115546325461)LIKE('')), ((((x'')AND(x'abb9')))OR(-1946064764))));SELECT ('j唺2' IN ()), LIKE(vt1.c2, vt1.c2) COLLATE RTRIM, ((vt1.c1 IN ()) IN (((rt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) FROM rt1, vt1; -- 1ms;
SELECT DISTINCT ((((vt1.c2 COLLATE RTRIM)OR(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c1 THEN vt1.c2 WHEN vt1.c2 THEN rt1.c0 WHEN '0.05842191001977759' THEN vt1.c2 ELSE 0.3730519745034361 END)))OR(((NULL) BETWEEN (rt1.c3) AND (rt1.c0)))), ((vt0.c0 COLLATE NOCASE) BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (((((((((rt1.c1)OR(x'')))OR(vt0.c0)))OR(rt1.c2)))OR(0x55a50b44)))), (((((vt1.c1)<=(vt1.c0)), ((vt1.c2)%(rt1.c0)), CASE rt1.c4  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END))>=((rt1.c4, ((rt1.c1)LIKE(vt1.c2)), ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))))) FROM vt1, rt1;SELECT DISTINCT ((((((((((rt1.c4)<=(vt0.c0)))AND(COUNT(rt1.c4))))OR(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c4 END)))OR(COUNT(*))))OR(((rt1.c2) NOT BETWEEN (vt1.c2) AND ('-1014806142')))) FROM rt1;SELECT rt1.c4, ((CAST('1367608446' AS TEXT))<>((((vt1.c1)) NOT BETWEEN ((x'')) AND ((rt1.c0))))), GROUP_CONCAT(LOWER(DISTINCT rt1.c4)) OVER () FROM vt0, rt1, vt1 ORDER BY ((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c1)) COLLATE BINARY  NULLS FIRST; -- 19ms;
SELECT DISTINCT (((vt1.c0, (vt0.c0 IN ()), CASE NULL  WHEN vt0.c0 THEN vt1.c0 END))<((((((vt1.c2)AND(NULL)))AND(rt1.c2)), HEX(vt1.c1), COUNT(vt1.c0)))) FROM vt0 WHERE (TYPEOF('740192115') COLLATE RTRIM);SELECT DATETIME(DATETIME(vt1.c2, vt1.c0, rt1.c3), CAST(vt1.c2 AS TEXT), TOTAL(rt1.c1), SQLITE_COMPILEOPTION_GET(rt1.c2), '1741991907') FROM vt0, rt1 WHERE (NULL) ORDER BY ((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c2 THEN vt1.c0 END)%(NULL COLLATE NOCASE));SELECT DISTINCT rt1.c4 FROM rt1, vt1, vt0 WHERE (RTRIM(0.10650354341351775) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)))>=(rt1.c4 COLLATE RTRIM)) FROM vt1, rt1 WHERE ((CASE WHEN 6.67230547E8 THEN '1329777631' END IN ())); -- 0ms;
SELECT (((((vt1.c1))!=(('-940224553'))))>=(COUNT(*))), ((IFNULL(DISTINCT rt1.c3, rt1.c0))<((- (rt1.c0)))), (((CASE WHEN vt1.c0 THEN rt1.c1 END))>=((((rt1.c1) BETWEEN (vt1.c2) AND (rt1.c3))))) FROM vt1 WHERE (CASE (x'' IN ())  WHEN 0.5222435055040748 COLLATE RTRIM THEN (NULL IN ()) END);SELECT DISTINCT CAST(((rt1.c0)>>(vt0.c0)) AS REAL) FROM vt0;SELECT DISTINCT ((CAST(rt1.c4 AS INTEGER)) BETWEEN (CASE rt1.c4  WHEN 'Z7 ' THEN rt1.c3 ELSE rt1.c3 END) AND (NULL)) FROM rt1, vt1; -- 0ms;
SELECT ALL TRIM(DISTINCT vt1.c1) FROM vt0 WHERE ('1208433690');SELECT DISTINCT SUM(((0.821135104995872) IS FALSE)) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS), ((((rt1.c3)IS(rt1.c4))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND ((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((vt1.c1))))), CUME_DIST() OVER () FROM rt1, vt1 WHERE (CAST(json_remove(1741991907, 0.6603543745682788, x'f891', NULL) AS BLOB));SELECT DISTINCT ((rt1.c0) IS FALSE) FROM vt1, vt0;SELECT DISTINCT ((((((NULL) BETWEEN (rt1.c4) AND (vt1.c2)))AND(CASE WHEN rt1.c3 THEN vt0.c0 ELSE '' END)))AND(((((vt0.c0)AND(rt1.c3)))OR(vt1.c0)))), rt1.c0, CASE WHEN json(rt1.c1) THEN COUNT(*) WHEN (- (rt1.c3)) THEN ((vt1.c0) NOT NULL) WHEN vt0.c0 THEN ((((rt1.c4)OR(rt1.c0)))AND(rt1.c1)) END FROM rt1, vt0, vt1 WHERE ((x'' IN ())) LIMIT 1839708615; -- 0ms;
SELECT DISTINCT AVG(CAST(vt1.c2 AS NUMERIC)) FROM vt1, vt0 WHERE ((~ (((NULL)<<(NULL))))); -- 0ms;
SELECT CAST(rt1.c1 COLLATE NOCASE AS BLOB), 0.4557202730619361, CASE WHEN ((vt0.c0) IS FALSE) THEN ((((rt1.c2)AND(vt0.c0)))AND(vt1.c2)) END FROM rt1;SELECT DISTINCT AVG(0X15992247) OVER () FROM rt1 WHERE (((((x'2b2b')OR(x'')))AND(1.204913631E9)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0)) NOT BETWEEN ((- (rt1.c3))) AND ((vt1.c0 IN ()))) FROM rt1;SELECT DISTINCT ((((((vt0.c0)+(0xffffffff83f3e1fa)))OR(((rt1.c3)||(rt1.c3)))))AND(((((rt1.c1)AND(rt1.c3)))OR(rt1.c3)))), (rt1.c4 IN ()), LIKE(((vt0.c0) IS TRUE), CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c1 END) FROM rt1 WHERE (IFNULL(0.600251209988703 COLLATE BINARY, CASE -1060815783  WHEN x'6172' THEN x'eaf8' END));SELECT DISTINCT IFNULL(DISTINCT (((rt1.c0, rt1.c1, vt1.c2))=((vt1.c0, NULL, rt1.c1))), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN rt1.c4 THEN vt0.c0 END) FROM rt1;SELECT DISTINCT COUNT(*), rt1.c2, CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((rt1.c0)<(rt1.c3)) THEN NULL COLLATE BINARY END FROM rt1, vt1 WHERE (((((0.3730519745034361) IS TRUE))/(((NULL) BETWEEN (0.3394894520837036) AND (NULL))))); -- 0ms;
SELECT (((rt1.c4)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN rt1.c3 THEN vt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN vt0.c0 ELSE vt1.c1 END))) FROM rt1, vt0, vt1 WHERE ((NOT ((0.8620212652086835 IN ())))); -- 0ms;
SELECT RANK() OVER ( PARTITION BY (((rt1.c1 IN (vt1.c1))) NOT BETWEEN (CASE vt1.c0  WHEN rt1.c0 THEN rt1.c3 END) AND (rt1.c3 COLLATE RTRIM)), ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 END) NOT BETWEEN (CASE vt1.c2  WHEN vt1.c1 THEN rt1.c2 ELSE rt1.c1 END) AND (CAST(0xffffffffcd56fcdc AS BLOB)))), CASE ((((rt1.c3)AND(vt1.c2)))AND(vt1.c0))  WHEN CASE rt1.c1  WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c2 END THEN vt1.c2 ELSE CASE WHEN rt1.c4 THEN rt1.c1 END END, (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))) BETWEEN (NULL) AND (NULLIF(DISTINCT rt1.c3, vt1.c2))) FROM vt1;SELECT ALL SQLITE_COMPILEOPTION_USED((rt1.c4 IN ())) FROM vt1, vt0 FULL OUTER JOIN rt1 ON (+ (((rt1.c0) NOT NULL))) WHERE (SQLITE_COMPILEOPTION_USED(('J' IN ()))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END THEN '' END, (NOT ((~ (vt0.c0)))), (((((((((((rt1.c0)AND(rt1.c4)))AND(vt0.c0)))AND(rt1.c3)))AND(rt1.c1))))<=((CASE WHEN vt1.c1 THEN rt1.c3 ELSE rt1.c4 END))) FROM vt0, vt1 GROUP BY rt1.c1, vt1.c0, (((rt1.c3)+(vt1.c1)) IN (((vt1.c2)<<(vt1.c1)), ((rt1.c1) BETWEEN (rt1.c2) AND (x''))));SELECT DISTINCT vt0.c0, ((vt1.c0)+((NOT (5.6040511E7)))), SUM(((rt1.c3) IS FALSE)), MIN((rt1.c1 IN (rt1.c1, vt1.c1))), (((vt1.c2)) NOT BETWEEN ((('h8' IN ()))) AND ((CAST(vt1.c1 AS TEXT)))) FROM vt0, rt1 ORDER BY CAST(((rt1.c3) BETWEEN (vt0.c0) AND (vt1.c0)) AS NUMERIC) ASC;SELECT DISTINCT CASE rt1.c2 COLLATE BINARY  WHEN ((rt1.c2) NOTNULL) THEN CASE rt1.c0  WHEN vt0.c0 THEN vt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt1.c2 END WHEN (- (vt1.c2)) THEN ((vt1.c1) IS TRUE) WHEN (vt1.c2 IN ()) THEN CAST(rt1.c4 AS BLOB) ELSE MAX(rt1.c3) END, ((((rt1.c4)<=(vt1.c0))) IS TRUE), ((((((rt1.c0, rt1.c3, vt1.c1)) NOT BETWEEN ((vt1.c0, rt1.c4, rt1.c1)) AND ((rt1.c3, NULL, vt0.c0)))))>=((((rt1.c2)<(vt1.c2))))), CAST(CASE WHEN '1183093762' THEN rt1.c3 ELSE rt1.c1 END AS TEXT), NULLIF(LIKELY(DISTINCT vt0.c0), TOTAL(rt1.c1)) FROM vt1 GROUP BY CAST(CAST(vt1.c2 AS NUMERIC) AS REAL), ((((rt1.c3 IN (rt1.c2))))<=(((((rt1.c4, 0x5225c18c, vt1.c1)) BETWEEN ((rt1.c0, rt1.c0, vt1.c1)) AND ((rt1.c1, vt1.c0, x'')))))), (((vt0.c0 IN (rt1.c3, rt1.c1))) IS FALSE);SELECT ALL ((rt1.c1)/(rt1.c2)) COLLATE RTRIM, MAX(((rt1.c3) NOT BETWEEN (vt1.c1) AND (rt1.c3))), CAST(((rt1.c0) BETWEEN (rt1.c2) AND (1183093762)) AS BLOB) FROM vt1, vt0 WHERE (((((((((0.9602431970839221)AND((((1951518262, 0.9522662594891678, x'')) BETWEEN (('', 0.20273481637616153, x'')) AND (('%', '', 0.5263303621488995))))))OR((((0.15784736455785497)) NOT BETWEEN ((0x2f252e7e)) AND (('wハ'))))))OR((((('975922615')AND('0.4283422619457732')))OR('x2')))))OR('-971665441')));SELECT DISTINCT (((vt0.c0)) BETWEEN ((((((rt1.c1)OR(vt0.c0)))AND(rt1.c1)))) AND (((((vt1.c2))<((vt1.c0)))))) FROM vt0;SELECT DISTINCT '1e500' FROM rt1; -- 0ms;
SELECT DISTINCT (- ((NOT (vt1.c0)))), ')|iA9', ((((NULL) ISNULL)) IS TRUE), GROUP_CONCAT(((rt1.c1)>=(vt1.c1))) OVER (), ((CAST(rt1.c1 AS NUMERIC))-((rt1.c4 IN ()))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT rt1.c2, rt1.c0, ((CAST(x'' AS NUMERIC)) IS TRUE) FROM vt1 WHERE ((~ ((NULL IN ('k#r', x''))))) GROUP BY ((CASE x'3824'  WHEN vt1.c2 THEN '1927793689' END) BETWEEN (((((rt1.c1)AND(vt0.c0)))AND(vt1.c2))) AND (CAST('u鬞' AS INTEGER))), (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)))), vt1.c1 ORDER BY (((vt1.c0)<>(rt1.c1)) IN ((NOT (rt1.c1))));SELECT DISTINCT (((vt1.c1) IS TRUE) IN ()) FROM vt0, vt1 WHERE (((((NULL, NULL, NULL)) NOT BETWEEN (('', NULL, NULL)) AND (('1291648094', 0.16473805746078196, 0.117951514380079))) IN ())) GROUP BY ((CASE WHEN rt1.c3 THEN vt1.c1 END)<=((+ (vt1.c1))));SELECT ((COUNT(*)) NOT BETWEEN (MIN(rt1.c4)) AND (((rt1.c4) BETWEEN (vt1.c2) AND (rt1.c1)))) FROM vt0 WHERE (CASE WHEN ((x'') BETWEEN ('1204419736') AND (x'')) THEN (0x5462be81 IN ()) WHEN (NULL IN ()) THEN (('&d1.F') BETWEEN (0.4944989230536505) AND ('-306279240')) WHEN CASE '0.3394894520837036'  WHEN NULL THEN NULL END THEN (('')||('''')) ELSE LIKELY(-851812136) END) LIMIT -1421970919;SELECT CAST(rt1.c4 AS INTEGER) FROM vt0, vt1, rt1; -- 0ms;
SELECT vt0.c0 FROM vt1 WHERE ((((('BX')OR((NULL IN ()))))OR((x'' IN (0.4944989230536505, 0xffffffffa69c4f6e)))));SELECT DISTINCT DENSE_RANK() OVER () FROM rt1, vt0, vt1; -- 1ms;
SELECT DISTINCT NULL FROM vt0, rt1, vt1; -- 0ms;
SELECT (((- (rt1.c0))) NOTNULL) FROM vt1, rt1 WHERE ((((((~ (-3.77382114E8)))OR((NULL IN (0x6c0ed418, x'')))))OR(CASE x''  WHEN '3ඐ.M힟cd~' THEN '' WHEN '-824387580' THEN NULL WHEN 0xffffffffedbe8cb8 THEN NULL END))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt1.c4 AS TEXT) THEN TOTAL(0.7371347206065004) WHEN rt1.c0 COLLATE RTRIM THEN CAST(rt1.c0 AS NUMERIC) WHEN ((((rt1.c3)AND(vt1.c1)))OR(vt0.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE json_array_length(vt1.c1) END FROM vt0, vt1, rt1 WHERE ((((('') NOT BETWEEN (707240400) AND (x'4171')))<<(((0.26568561132319557)%(x''))))) LIMIT 1447223991 OFFSET -284215624; -- 0ms;
SELECT 1191932974 FROM vt1, rt1, vt0; -- 0ms;
SELECT ((vt1.c1)*(CASE WHEN 0.6781515983443694 THEN vt1.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN 0.11712396845116657 END)) FROM vt1, rt1 WHERE (CASE (('-425246831') IS TRUE)  WHEN UPPER(NULL) THEN LOWER(x'') WHEN ((-2078575632) NOT BETWEEN (x'') AND (x'5ebe')) THEN ((((((((NULL)OR(x'7173')))OR('2020771286')))AND(NULL)))AND(x'cdd2')) WHEN CAST(NULL AS BLOB) THEN CAST(0X3d448b1f AS TEXT) END);SELECT DISTINCT (~ (((rt1.c3)>=(rt1.c4)))) FROM vt1, rt1 WHERE (PRINTF(((x'0fbc') IS FALSE), CAST('Aᄂ_D訦&EvU' AS INTEGER), '' COLLATE BINARY)); -- 1ms;
SELECT ALL CASE COUNT(*)  WHEN AVG(rt1.c1) THEN CAST(rt1.c4 AS INTEGER) ELSE (((x'', vt1.c2, vt1.c0, rt1.c2, NULL))>((rt1.c3, rt1.c1, vt1.c2, rt1.c4, vt1.c0))) END FROM vt0, vt1 ORDER BY (((vt1.c2))<((vt0.c0)));SELECT ((CAST(rt1.c2 AS BLOB)) IS FALSE), (+ (rt1.c3)) COLLATE BINARY, CHAR(((x'') IS TRUE), CASE vt1.c1  WHEN rt1.c2 THEN rt1.c0 END, ((vt1.c0) NOTNULL)) FROM vt0, vt1 NOT INDEXED;SELECT (((rt1.c0, rt1.c2, vt0.c0)) NOT BETWEEN (((rt1.c2 IN (rt1.c0)), ((((rt1.c1)AND(rt1.c1)))OR('1753395244')), MAX(rt1.c0))) AND (((+ (vt1.c2)), (((rt1.c3, vt1.c1, vt1.c0))<=((rt1.c0, vt0.c0, vt0.c0))), ((vt0.c0)IS(rt1.c2))))) FROM vt0;SELECT DISTINCT COUNT(*) FROM rt1 GROUP BY ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c2)) COLLATE RTRIM HAVING ((((((vt1.c0)AND(rt1.c2)))AND(rt1.c2))) ISNULL) ORDER BY CAST(0.3730519745034361 AS TEXT)  NULLS FIRST;SELECT (+ (rt1.c0)) COLLATE NOCASE FROM vt0;SELECT ALL (x'' IN ()), ((COUNT(rt1.c0)) NOT BETWEEN (0.8634402115073501) AND (rt1.c0 COLLATE NOCASE)), ((vt1.c0) ISNULL), SUM(CASE rt1.c3  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 END COLLATE RTRIM), (((((((((((('3^*뛸%i')OR(vt1.c0)))AND(rt1.c2)))AND(NULL)))OR(NULL)))OR(rt1.c2)))AND((rt1.c2 IN ()))) FROM vt1, rt1 WHERE (((NULL COLLATE NOCASE)*(((((NULL)OR(NULL)))AND(-2.078575632E9))))); -- 0ms;
SELECT DISTINCT ((((vt1.c2) ISNULL))AND((NULL IN (NULL)))) FROM rt1 LIMIT -730945986;SELECT (((((rt1.c0, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c1, vt1.c2)) AND ((vt1.c2, rt1.c1, vt0.c0)))) NOT BETWEEN (MIN(rt1.c3)) AND (CAST(rt1.c4 AS REAL))) FROM rt1, vt0 WHERE (((((((('-181192941'))<>((''))))AND(('1393174726' IN (x'b292474c')))))AND((- (NULL))))) ORDER BY NULL ASC;SELECT ALL (~ ((rt1.c1 IN ()))), '-2081168902', ((((vt1.c1)&(vt1.c2))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt1.c0)*(vt1.c0)))) FROM vt1 WHERE ((((((((('3W⛖')OR(x'889f')))OR(NULL)))OR('-2047559944')))OR(0x55af4219)) COLLATE RTRIM);SELECT ALL (~ (vt1.c2)) FROM rt1, vt1, vt0 WHERE ((((('-1602151675')||(x'8bf8'))) IS TRUE)); -- 0ms;
SELECT ((((((rt1.c4)OR(rt1.c1)))OR(x''))) NOTNULL) FROM vt1, rt1 NATURAL JOIN vt0 GROUP BY vt0.c0 HAVING ((LIKELY(vt1.c2))IS NOT((+ (vt1.c0)))) ORDER BY ((((rt1.c2)LIKE(vt1.c2))) NOTNULL)  NULLS FIRST; -- 1ms;
SELECT DISTINCT CASE WHEN 0.6305625928277461 THEN ((rt1.c3) BETWEEN (rt1.c1) AND ('667230547')) ELSE CAST(NULL AS BLOB) END FROM vt1, rt1, vt0 WHERE (((CAST(0.012970513674949058 AS INTEGER))IS NOT((('-1561055558') NOTNULL)))); -- 1ms;
SELECT DISTINCT (~ (RTRIM(vt1.c0))) FROM rt1 WHERE (((x'd3fe' COLLATE RTRIM)IS(CAST(-779092148 AS BLOB))));SELECT AVG((+ (rt1.c0))) FILTER(WHERE ((((rt1.c0)LIKE(rt1.c4)))<((+ (vt0.c0))))) OVER ( RANGE  CURRENT ROW), (vt0.c0 IN ()) COLLATE NOCASE, '/I' COLLATE BINARY, TOTAL(((rt1.c0)<>(vt1.c2))), (((((rt1.c2 IN ()))OR((- (rt1.c3)))))OR((('-824387580')<<(rt1.c0)))) FROM rt1, vt1 WHERE (((((-377382114)) NOT BETWEEN ((0.2578189389619159)) AND ((-847196279))) IN (CASE WHEN x'' THEN '-1685772586' WHEN -4.36802885E8 THEN '-181192941' WHEN ')|ia9' THEN '1191932974' END)));SELECT DISTINCT LIKELY(((((rt1.c0)AND(rt1.c2)))AND(vt1.c2))) FROM rt1, vt1 LEFT OUTER JOIN vt0 ON (((((vt1.c0))<=((rt1.c0)))) BETWEEN (rt1.c3) AND ((rt1.c4 IN (vt1.c1, vt1.c1)))) WHERE (((x'57e5')OR(UNLIKELY(x'')))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST; -- 0ms;
SELECT DISTINCT ((0xffffffff9d6d0848 COLLATE BINARY)<>((rt1.c1 IN ()))) FROM vt0, vt1 WHERE (CASE WHEN 0.14560909529926436 THEN CASE WHEN x'' THEN NULL ELSE NULL END WHEN CASE WHEN '' THEN x'' END THEN CAST(NULL AS REAL) WHEN ((x'')+('-1637162092')) THEN ((0.10650354341351775)<=(x'')) WHEN (('')>(-821479424)) THEN CASE 0.8312068588325684  WHEN 0.8464596923152565 THEN 4.8090664E8 END WHEN TRIM(DISTINCT '') THEN (+ (0.14508364904514637)) ELSE CASE WHEN x'0963' THEN 0.2535571961215717 WHEN x'bf78' THEN 0X530a28c6 WHEN 0Xffffffff8dd0d6e1 THEN NULL WHEN 0.01293981219593976 THEN -8.47196279E8 WHEN x'' THEN '' END END); -- 1ms;
SELECT DISTINCT AVG(((x'') BETWEEN (vt1.c1) AND (vt1.c2))) FROM rt1;SELECT '-1134696542' FROM vt0, rt1 WHERE ((CAST(0.936964455424453 AS REAL) IN ())) GROUP BY vt1.c1, (- (((vt0.c0) IS TRUE))), (((vt1.c0)>>(rt1.c1)) IN ((('0.7264539372284654')OR(rt1.c4)))), CAST(((vt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)) AS BLOB), (((((vt1.c2, rt1.c2, rt1.c4)) BETWEEN ((rt1.c1, rt1.c4, vt1.c2)) AND ((rt1.c3, vt1.c1, vt0.c0))))LIKE((- (vt1.c0))));SELECT DISTINCT ((((~ (rt1.c1))))>((NULL))) FROM vt1 WHERE ((((((('-1450986095')IS NOT(' .gOu4')))AND(CAST(-824387580 AS NUMERIC))))OR(0.9294062918203025 COLLATE BINARY))) GROUP BY (((((vt1.c2)+(vt1.c2))))<((CAST(vt1.c0 AS BLOB)))), SQLITE_COMPILEOPTION_USED(vt1.c0), CAST(((0xfffffffff0a2bfbb) NOT BETWEEN (rt1.c4) AND (0.15784736455785497)) AS INTEGER), json_remove(((vt1.c2)<>(vt1.c0)), rt1.c4 COLLATE BINARY), 'Ew!A' HAVING SUM('-1050512567') ORDER BY (+ (vt1.c1)) COLLATE BINARY DESC  NULLS FIRST;SELECT ALL CAST(((vt1.c1) NOT NULL) AS REAL), rt1.c3, UNLIKELY((NOT (rt1.c1))), '480906640', CAST(((rt1.c1) IS FALSE) AS REAL), (COUNT(*) IN (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c1)))), SUBSTR(((rt1.c0)<=(vt1.c0)), CASE WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt1.c0 END) FROM vt1 WHERE (CAST((NOT (x'')) AS REAL));SELECT DISTINCT ((rt1.c3)-(vt1.c1)) COLLATE BINARY FROM rt1;SELECT ALL ((rt1.c0) NOT BETWEEN ((~ (rt1.c1))) AND ((((vt1.c1, rt1.c2, rt1.c2)) BETWEEN ((rt1.c2, rt1.c3, NULL)) AND ((rt1.c4, 'c!yXa6,', 0.38462741786280386))))) FROM vt1 WHERE (((((0.05966994462735098) NOT NULL))-(SQLITE_SOURCE_ID())));SELECT (('228581630') NOT BETWEEN (COALESCE(DISTINCT 0Xffffffffed933d21, vt1.c1)) AND (json_type(''))) FROM rt1, vt0, vt1 WHERE (((((2.12937168E9) NOT NULL)) IS TRUE));SELECT ((CASE vt1.c1  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END) BETWEEN (((rt1.c1) IS TRUE)) AND (rt1.c2)), LAST_VALUE((((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0Xffffffffde8da7d0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((vt0.c0 IN (vt0.c0)))))) OVER (), CAST((~ (rt1.c0)) AS BLOB) FROM vt0 WHERE ((- (((-1.071151286E9)<=(x''))))) GROUP BY (~ (LOWER(rt1.c4))), ((((rt1.c3))<((rt1.c1))) IN ()), 0.7355675016645621;SELECT DISTINCT (CASE NULL  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END IN (MIN(rt1.c0))) FROM rt1, vt0, vt1 WHERE (CAST(((x'') BETWEEN (x'') AND (x'4a70')) AS INTEGER)); -- 1ms;
SELECT DISTINCT rt1.c1 FROM vt0 NOT INDEXED, rt1 WHERE (LIKELY((((x''))>=(('69231626'))))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c4)) AS INTEGER) FROM rt1 NOT INDEXED, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((rt1.c2)AND(rt1.c4)))AND(((((vt1.c1)OR(rt1.c3)))OR(vt1.c0)))))AND(GROUP_CONCAT(rt1.c0))) FROM vt1;SELECT CAST(((rt1.c4)>=(rt1.c1)) AS TEXT), LOWER(DISTINCT json_type('1381316313')), (rt1.c3 IN ()) COLLATE RTRIM FROM vt0, rt1 WHERE (CASE WHEN (((NULL)) NOT BETWEEN ((x'')) AND ((0.4169877333299522))) THEN CASE 0x55af4219  WHEN NULL THEN '1812911128' END END); -- 0ms;
SELECT ALL LEAD(((HEX(rt1.c2)) BETWEEN (((((((((vt0.c0)AND(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c4))) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c4)))), ((((((rt1.c4)AND(rt1.c0)))AND(rt1.c0))) BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0)))) AND ((((rt1.c0)) BETWEEN (('139987413')) AND ((rt1.c2))))), ((((((((((rt1.c4)AND(rt1.c2)))AND(rt1.c3)))OR(rt1.c3)))OR(rt1.c2))) NOT NULL)) OVER (), ((vt1.c1) BETWEEN (rt1.c3) AND (x'545b911c')) COLLATE BINARY, MIN(CASE WHEN rt1.c1 THEN vt1.c2 ELSE rt1.c4 END) FROM vt0, rt1 WHERE ((((((-4.25246831E8)) NOT BETWEEN (('9-')) AND (('0.04301962787115288')))) IS FALSE));SELECT ALL (((((vt1.c0 IN (rt1.c0, vt1.c1)))AND(((rt1.c0) NOTNULL))))AND(((((rt1.c4)AND(rt1.c1)))OR(rt1.c0)))) FROM rt1, vt0, vt1 WHERE (NULL) LIMIT -1616788125 OFFSET 707240400; -- 0ms;
SELECT (((UPPER(rt1.c1)))>=(((rt1.c2 IN ())))) FROM vt1, rt1, vt0; -- 0ms;
SELECT ALL ((((((rt1.c2)) NOT BETWEEN ((x'')) AND ((vt1.c0)))))<((((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt1.c1))))) FROM vt1;SELECT DISTINCT ((1.839708615E9) NOTNULL), JULIANDAY(x'b5ad' COLLATE BINARY, (('2129371680')-('TRUE')), ((vt1.c2)IS NOT(vt0.c0))), (((((vt1.c1, x'7e06', rt1.c4))<((vt0.c0, vt1.c0, vt1.c0)))) ISNULL) FROM rt1;SELECT ALL (((json_remove(vt1.c1, rt1.c0)))>=((rt1.c0))) FROM vt1 WHERE (COALESCE(DISTINCT NULL, 'n4') COLLATE NOCASE) GROUP BY (((vt0.c0, 0.2667027161940383, vt1.c2)) NOT BETWEEN ((((rt1.c2) NOTNULL), ((vt1.c2) NOTNULL), CAST(vt1.c2 AS TEXT))) AND (((vt0.c0 IN ()), CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END, (((('')AND(vt0.c0)))AND(vt1.c1))))), NULL, (CASE vt1.c0  WHEN vt1.c2 THEN vt1.c0 ELSE rt1.c0 END IN ()) HAVING (((rt1.c2) IS FALSE) IN ());SELECT DISTINCT CAST(CAST(rt1.c2 AS REAL) AS NUMERIC) FROM vt0 GROUP BY NULLIF(vt1.c0, rt1.c3) COLLATE NOCASE;SELECT DISTINCT (((((((vt1.c0))!=((rt1.c1))))AND(((rt1.c0) IS FALSE))))AND(rt1.c1 COLLATE RTRIM)), COUNT(*), (~ (((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) FROM rt1;SELECT ALL ((DATE(vt1.c2, rt1.c1, vt1.c1, 0.936964455424453, rt1.c4))AND(CASE WHEN rt1.c1 THEN rt1.c4 END)) FROM vt1, vt0;SELECT DISTINCT rt1.c1 FROM rt1, vt1, vt0 WHERE ((((((NULL)) NOT BETWEEN (('1#')) AND ((NULL))))IS NOT(((0.2667027161940383)AND(x''))))) GROUP BY ((CASE vt1.c2  WHEN rt1.c4 THEN vt1.c2 ELSE rt1.c3 END) NOTNULL), ((((((rt1.c2)AND(NULL)))OR(vt0.c0)))LIKE(JULIANDAY(vt1.c0, rt1.c1, rt1.c4))), UNLIKELY(((rt1.c1)>=(vt0.c0))); -- 2ms;
SELECT ALL AVG(((vt0.c0) BETWEEN (rt1.c2) AND (vt1.c0))) OVER () FROM rt1 WHERE ((- ((- (0.37454920734967134)))));SELECT ALL ((COUNT(vt0.c0)) NOT NULL) FROM vt0, rt1, vt1; -- 1ms;
SELECT ALL ROW_NUMBER() OVER (), LAST_INSERT_ROWID(), COUNT(*) OVER ( ORDER BY ((COALESCE(vt0.c0, rt1.c2, rt1.c1, vt1.c2)) NOTNULL)  NULLS LAST, ((((((rt1.c0))=((vt1.c1))), CAST(vt1.c0 AS TEXT), ((rt1.c1) NOT BETWEEN (-658986281) AND (vt0.c0))))<=((((rt1.c3) IS TRUE), CASE WHEN rt1.c4 THEN 0.38513146073959714 ELSE rt1.c1 END, ABS(DISTINCT vt1.c0)))) ASC) FROM rt1, vt1, vt0; -- 2ms;
SELECT (TOTAL(rt1.c2) IN ()) FROM vt1; -- 0ms;
SELECT vt0.c0 FROM vt0, rt1 WHERE (((((((0.4607257971278279)GLOB(NULL)))OR(((x'1789')>>('0.9294062918203025')))))AND(CASE WHEN NULL THEN x'0281' END))) GROUP BY ((CASE vt1.c2  WHEN vt0.c0 THEN rt1.c3 ELSE NULL END)||(((rt1.c2) NOT BETWEEN (rt1.c3) AND (vt1.c0)))) HAVING (((((rt1.c4) BETWEEN (rt1.c3) AND (vt1.c0)), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (vt0.c0))))<=((((rt1.c0) NOTNULL), (rt1.c1 IN ()), vt0.c0 COLLATE RTRIM)));SELECT NULL FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN ('XPu6') AND (0.9377757943304875))) BETWEEN (CASE WHEN '-1421970919' THEN x'' END) AND (((x'9eec')||(NULL))))); -- 0ms;
SELECT ALL ((vt1.c1) BETWEEN (((rt1.c3)IS NOT(vt1.c2))) AND (vt1.c0)) FROM rt1, vt1, vt0 WHERE (0.5690439672529624) GROUP BY CASE (((NULL)) BETWEEN ((rt1.c0)) AND ((vt1.c2)))  WHEN rt1.c0 THEN ((vt1.c1)<<(vt0.c0)) ELSE x'' END, ((((rt1.c3)LIKE(rt1.c3))) ISNULL), CASE WHEN (rt1.c3 IN ()) THEN CAST(vt1.c1 AS REAL) WHEN (((vt1.c2, rt1.c4, rt1.c0)) BETWEEN ((rt1.c4, vt1.c2, rt1.c2)) AND ((vt0.c0, 0.2505767512880992, rt1.c2))) THEN ((vt1.c2)<(0xfffffffffe420675)) WHEN (- (vt1.c2)) THEN vt0.c0 COLLATE RTRIM ELSE (~ (NULL)) END; -- 3ms;
SELECT DISTINCT CAST(((((((((x'')OR(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)))OR('-1797720342')) AS REAL) FROM vt0 WHERE (LAST_INSERT_ROWID());SELECT ALL ((((rt1.c1)OR(rt1.c3)))&(json_type(rt1.c0))) FROM vt0 WHERE (((((-1685772586) BETWEEN (x'') AND (0.8289624832459574))) BETWEEN ((0.3817354900482469 IN ())) AND ((NULL IN ()))));SELECT DISTINCT COUNT(*) OVER () FROM rt1, vt1; -- 1ms;
SELECT DISTINCT FIRST_VALUE(((((((((((((CAST(vt0.c0 AS REAL))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)|(NULL)))))AND(vt0.c0 COLLATE BINARY)))AND((vt0.c0 IN ()))))AND(vt0.c0 COLLATE BINARY))) OVER () FROM vt0 WHERE (((x'f6ee3dba' COLLATE NOCASE) BETWEEN (((0.8474165073245601) NOTNULL)) AND (NULL COLLATE NOCASE))); -- 4ms;
SELECT DISTINCT (((+ (x''))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (rt1.c2)) FROM rt1, vt0, vt1; -- 0ms;
SELECT ALL CASE CASE vt1.c1  WHEN rt1.c4 THEN vt1.c2 ELSE rt1.c2 END  WHEN ((rt1.c2)-(rt1.c3)) THEN rt1.c3 COLLATE BINARY ELSE AVG(rt1.c0) END FROM vt1, rt1, vt0; -- 3ms;
SELECT ((('-1e500' IN ()))<<(((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1)))) FROM rt1, vt0 WHERE (NULLIF((('359858521') NOT BETWEEN (x'') AND (x'')), ((0.9870631434508799) ISNULL))); -- 1ms;
SELECT DISTINCT ((rt1.c4) NOT BETWEEN (((vt1.c1)<('tf'))) AND (((rt1.c0) IS TRUE))) FROM vt0;SELECT DISTINCT COUNT(CASE vt0.c0  WHEN 'H8' THEN x'87fd' END) OVER ( ORDER BY ((IFNULL(vt1.c0, rt1.c0))>=(CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c4 WHEN x'' THEN vt1.c1 END)) DESC RANGE  UNBOUNDED PRECEDING) FROM vt1, rt1, vt0 WHERE (((((((((NULL)OR(-1.421970919E9)))OR(0Xb92eefc)))AND(NULLIF(DISTINCT '-971665441', '{'))))OR((('-318282591') BETWEEN ('#z䠬D䋞') AND (''))))) GROUP BY ((vt0.c0) ISNULL) HAVING IFNULL(DISTINCT ((vt0.c0) NOT NULL), TOTAL(rt1.c3)); -- 1ms;
SELECT ((((MAX(vt0.c0))AND(HEX(rt1.c4))))OR(((vt1.c0) NOTNULL))) FROM vt0, rt1, vt1 WHERE (TRIM(((((x'cdb0898d')OR(x'')))OR(NULL)))); -- 0ms;
SELECT ALL 'KP(P', (((((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c2))))AND(CASE WHEN rt1.c1 THEN vt1.c2 END)))OR((((rt1.c2, rt1.c1, rt1.c4, vt1.c1, x'')) BETWEEN ((vt0.c0, rt1.c1, rt1.c4, rt1.c3, rt1.c2)) AND ((vt1.c2, rt1.c0, rt1.c4, 0x3d448b1f, vt1.c2))))), vt1.c2 FROM rt1;SELECT DISTINCT CASE WHEN vt1.c2 THEN (- (vt1.c2)) ELSE ((rt1.c3) ISNULL) END FROM rt1, vt0, vt1 WHERE (CASE WHEN NULL THEN -1.561055558E9 END COLLATE BINARY) ORDER BY (((NOT (rt1.c0))) NOT BETWEEN (CASE 0.9294062918203025  WHEN vt1.c0 THEN vt1.c2 END) AND (CAST(vt1.c1 AS TEXT))), ((-1946064764) IS TRUE) COLLATE RTRIM ASC, ((vt0.c0 IN ()) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT LAG(((((((NULL) IS FALSE))OR((rt1.c3 IN ()))))AND(((rt1.c0)>>(vt0.c0)))), ((vt1.c2 IN ()) IN ()), ((~ (vt1.c1)) IN ())) OVER () FROM vt0, vt1, rt1; -- 0ms;
SELECT ALL (NULL IN ()) FROM vt0 LIMIT -1915693343; -- 0ms;
SELECT DISTINCT ((CASE rt1.c1  WHEN rt1.c1 THEN NULL ELSE vt0.c0 END)=((NOT (vt1.c2)))) FROM vt1, rt1, vt0 WHERE (((CAST(0.5222435055040748 AS NUMERIC)) BETWEEN (((0.1775637170784672) IS FALSE)) AND (0.8523419972537668 COLLATE BINARY))); -- 0ms;
SELECT COUNT(NULLIF(vt1.c0, rt1.c3) COLLATE BINARY) FROM vt1, vt0 WHERE (x'' COLLATE BINARY);SELECT ALL LOWER(DISTINCT CASE WHEN rt1.c0 THEN rt1.c2 END) FROM vt0, rt1, vt1 LIMIT -607430711 OFFSET 740192115; -- 0ms;
SELECT DISTINCT (((((((rt1.c3, vt1.c0, rt1.c0))!=((vt0.c0, rt1.c4, x''))))OR((~ (rt1.c4)))))AND(((vt1.c2)!=(vt1.c1)))) FROM rt1, vt0 WHERE (CASE CASE WHEN NULL THEN '' ELSE x'1c10' END  WHEN NULL COLLATE RTRIM THEN ((x'e9fd')<<('eYPl')) END);SELECT DISTINCT (((CASE '-284215624'  WHEN -971665441 THEN vt1.c1 ELSE vt0.c0 END))<>((rt1.c1 COLLATE NOCASE))) FROM vt1, rt1, vt0 WHERE (((('-1915693343')) NOT BETWEEN ((CASE x''  WHEN x'3d63' THEN NULL END)) AND ((((0.7038149086376612)GLOB(NULL)))))); -- 0ms;
SELECT DISTINCT AVG(((((vt1.c1)AND(vt0.c0)))AND(rt1.c0))) FROM vt0, rt1, vt1 LIMIT 804013369 OFFSET -1569301020; -- 0ms;
SELECT ALL (NOT (CAST(vt1.c2 AS TEXT))) FROM rt1, vt0, vt1 LIMIT 526919817; -- 1ms;
SELECT ALL ((((rt1.c1))<((rt1.c4))) IN ()) FROM vt1 WHERE (((('-1612371762')) NOT BETWEEN ((((x'')OR(x'')))) AND (((('q笫') BETWEEN (0.9207950296251636) AND (0Xffffffff90679c7a)))))); -- 0ms;
SELECT LEAD(vt0.c0, (((((vt0.c0))<((vt0.c0)))) NOTNULL), ((((CAST(vt0.c0 AS REAL))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 0X43169e4d, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT ALL ((rt1.c3)>(vt1.c0)) COLLATE BINARY FROM vt1, rt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN rt1.c1 THEN rt1.c0 END) ISNULL) LIMIT -945890408; -- 0ms;
SELECT ((TOTAL(vt1.c1)) BETWEEN (((vt0.c0)<=(vt0.c0))) AND (TOTAL(vt1.c2))), vt1.c1, ((((rt1.c3)<=(rt1.c1))) IS TRUE) FROM rt1 CROSS JOIN vt1 ON ((((vt1.c2)AND(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (vt1.c2));SELECT (NOT (rt1.c0)), CAST(UNLIKELY(rt1.c4) AS NUMERIC), 1.183093762E9 FROM rt1, vt0 WHERE (((CAST('56040511' AS NUMERIC))%((~ (NULL))))); -- 1ms;
SELECT ALL -2022489094 FROM vt0, rt1; -- 0ms;
SELECT CAST(CASE rt1.c0  WHEN rt1.c3 THEN x'3d23' WHEN rt1.c3 THEN rt1.c2 WHEN 7.90965886E8 THEN vt0.c0 END AS INTEGER), QUOTE(rt1.c2 COLLATE RTRIM), (CAST(rt1.c3 AS TEXT) IN (((rt1.c0)LIKE(vt1.c1)))) FROM vt1;SELECT DISTINCT GROUP_CONCAT((((vt0.c0)) BETWEEN ((0X31df4399)) AND ((rt1.c2)))), CAST(IFNULL(rt1.c3, vt0.c0) AS NUMERIC), MAX(TRIM(DISTINCT vt1.c2)), SUM(((vt1.c1) BETWEEN (x'') AND (rt1.c3))), ((((rt1.c1) ISNULL))AND(json_array(rt1.c0, rt1.c2))) FROM vt0, vt1, rt1; -- 1ms;
SELECT ALL (((((vt0.c0) IS FALSE)))<=((UPPER(DISTINCT vt1.c1)))) FROM vt1 WHERE ((- ((((-8.51812136E8))==((0.5263303621488995)))))) GROUP BY (((NULL))!=((CAST(rt1.c3 AS TEXT)))), rt1.c1, ((((vt1.c0)|(rt1.c2)))|(((rt1.c3)GLOB(vt1.c2))));SELECT DISTINCT ((((rt1.c2)>(rt1.c3))) NOTNULL) FROM vt0 LIMIT -1094996690 OFFSET -29227403;SELECT DISTINCT (+ (CASE rt1.c2  WHEN rt1.c0 THEN vt1.c1 WHEN rt1.c0 THEN vt1.c2 WHEN rt1.c3 THEN vt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN vt1.c1 END)) FROM vt0;SELECT ALL (~ (CAST(vt0.c0 AS INTEGER))) FROM vt1, rt1, vt0 LIMIT -1201976864; -- 0ms;
SELECT CAST((NOT (rt1.c0)) AS INTEGER) FROM vt1 INTERSECT SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, rt1, vt1;SELECT ((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c1) ISNULL))))OR(CAST(rt1.c2 AS REAL))) FROM rt1;SELECT DISTINCT ((rt1.c2)OR(rt1.c0)), CASE CASE WHEN rt1.c3 THEN rt1.c0 ELSE vt1.c1 END  WHEN (NOT (rt1.c0)) THEN ((NULL) NOTNULL) WHEN CASE WHEN vt1.c1 THEN x'' WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END THEN CAST(vt1.c0 AS BLOB) WHEN IFNULL(rt1.c2, x'') THEN ((vt1.c1) ISNULL) ELSE CASE WHEN vt1.c0 THEN rt1.c3 END END, (NOT (vt1.c0)) FROM vt0 NOT INDEXED WHERE ((((-1.134696542E9))<((''))) COLLATE RTRIM);SELECT DISTINCT ((NULL)*(CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt1.c1 END)) FROM vt0, vt1 LIMIT 1174773083 OFFSET -1413624529;SELECT CASE WHEN ((((rt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN ((((((((vt1.c0)OR('P')))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c2)) WHEN ((vt1.c1) NOT NULL) THEN (vt0.c0 IN (rt1.c1)) WHEN ((rt1.c4) BETWEEN (vt1.c1) AND (rt1.c0)) THEN (NOT (vt1.c2)) END, CAST(((vt1.c1)IS NOT(rt1.c4)) AS REAL), (((rt1.c1 IN ())) ISNULL) FROM rt1 WHERE (((('0.5690439672529624' IN ())) BETWEEN ((- (NULL))) AND ((7.40192115E8 IN ()))));SELECT (NOT (TRIM(rt1.c1))) FROM vt0 WHERE (((((((NULL)AND('637455161')))OR(0.146949513613292)))>=(((((x'')AND(NULL)))OR(-7.79092148E8))))) GROUP BY (((CAST(vt1.c2 AS TEXT)))>((CASE WHEN rt1.c2 THEN vt1.c1 END))) HAVING (((((0.1775637170784672, vt1.c1, rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((vt1.c1, rt1.c1, 0.44048190278956545, rt1.c4, vt0.c0)) AND ((rt1.c0, 0.745999529686575, rt1.c1, rt1.c4, vt1.c0)))) NOTNULL);SELECT DISTINCT x'', (((((rt1.c1))=((vt0.c0)))) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (((((rt1.c3)OR(vt1.c2)))AND(vt1.c2)))), (((~ (rt1.c2)))<>(json(rt1.c4))) FROM vt0, vt1 GROUP BY ((((((((((rt1.c4)>>(rt1.c0)))OR(((rt1.c4)==(vt1.c1)))))OR(CAST(rt1.c0 AS TEXT))))AND('9-')))AND(vt1.c2 COLLATE BINARY)), 'GCz1J', CASE LIKE(vt1.c2, rt1.c2, 'n')  WHEN ((rt1.c3)<(rt1.c3)) THEN (rt1.c1 IN ()) ELSE ((vt1.c2) NOT BETWEEN (NULL) AND (vt1.c2)) END ORDER BY CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c1) NOT BETWEEN (NULL) AND (vt1.c2)) WHEN ((vt1.c0)OR(vt0.c0)) THEN LIKELIHOOD(-697397338, 0.8656733147842082) WHEN ((rt1.c4)=(x'')) THEN CASE WHEN rt1.c4 THEN '0.7038149086376612' ELSE rt1.c0 END END ASC  NULLS FIRST, (((rt1.c4, ((vt1.c0) NOT NULL), CASE WHEN rt1.c3 THEN rt1.c4 END))!=((x'e0f6', 0X65f0010c COLLATE NOCASE, ((vt1.c2)IS(rt1.c3))))), rt1.c3;SELECT ALL TOTAL((((vt1.c1))<((rt1.c0)))) FILTER(WHERE ((rt1.c1)>((vt1.c2 IN (vt0.c0))))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM vt1, rt1;SELECT DISTINCT rt1.c1, ((((((((((NULL)>(vt1.c2)))OR(MIN(rt1.c0))))OR(((x'fd9c')+(0xffffffffc7f54fd7)))))OR(((vt1.c2) BETWEEN (vt1.c0) AND (rt1.c3)))))OR(vt1.c2)), ((CAST(NULL AS NUMERIC))GLOB(CASE WHEN rt1.c4 THEN vt0.c0 END)) FROM vt1, vt0;SELECT SUM(rt1.c1) FILTER(WHERE ((vt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE BINARY) OVER (), ((((((vt1.c1)>>(rt1.c1)))OR(NULLIF(DISTINCT rt1.c1, rt1.c3))))AND(((vt1.c0)=(vt1.c1)))), ((TOTAL(rt1.c1))>>(((NULL) ISNULL))) FROM vt0;SELECT DISTINCT ((((CASE x'7c17'  WHEN vt1.c1 THEN rt1.c2 END)OR(((vt1.c1)&(rt1.c4)))))AND(((((((((rt1.c2)AND(rt1.c0)))OR(vt1.c0)))OR(rt1.c3)))OR(rt1.c2)))), CAST(LOWER(-3.18282591E8) AS REAL), ((CASE WHEN vt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c2 END) NOT NULL) FROM vt1, vt0, rt1 GROUP BY (- (rt1.c4)); -- 1ms;
SELECT DISTINCT COUNT(*) FROM rt1, vt0 WHERE (TIME(((NULL) BETWEEN (x'') AND ('-730945986')), ((0.39727376662065295)<=(-1.450986095E9)), CASE WHEN '' THEN x'' WHEN -1.65379884E9 THEN 1.204419736E9 WHEN 0.33731256751367744 THEN x'5256' END)); -- 0ms;
SELECT DISTINCT ((vt1.c2)|(-1634598666)) COLLATE RTRIM FROM vt0, rt1, vt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c3) NOT BETWEEN (vt1.c2) AND (rt1.c0)) AS BLOB) FROM vt0, vt1;SELECT DISTINCT (((('LK')OR((rt1.c2 IN ()))))OR(rt1.c4)) FROM vt1 WHERE ((('' IN ()) IN ()));SELECT ((((((((((((rt1.c3)OR('514578813')))OR(vt1.c1)))OR(vt0.c0)))AND(rt1.c4)))OR(((NULL) IS TRUE))))AND(COUNT(rt1.c2))) FROM vt1;SELECT ALL ((((((((((rt1.c3)AND(vt0.c0)))AND(vt1.c1)))OR('')))OR(rt1.c1)))IS(CASE WHEN rt1.c3 THEN vt1.c2 ELSE rt1.c4 END)), ((((((vt1.c2)!=(rt1.c4)))AND(json_remove(vt1.c1, rt1.c4))))OR(((rt1.c1) IS TRUE))), vt1.c2 FROM rt1, vt1 GROUP BY (((json_patch(vt1.c2, rt1.c1), CASE WHEN vt1.c1 THEN vt1.c1 WHEN rt1.c3 THEN NULL WHEN vt0.c0 THEN vt0.c0 END, vt1.c1))<(((rt1.c2 IN ()), ((vt0.c0) NOTNULL), ((vt1.c0) ISNULL)))) ORDER BY (- (UNLIKELY(vt1.c2)))  NULLS FIRST;SELECT DISTINCT (((NOT (rt1.c2))) NOT NULL) FROM vt0, rt1, vt1; -- 0ms;
SELECT ALL rt1.c2, MAX((rt1.c2 IN ()) COLLATE NOCASE), (- (((rt1.c0)LIKE(0.0944783604182795)))) FROM vt0 WHERE ((((((((NULL))>(('56040511'))))OR((+ (0.815592853288256)))))OR(((x'3adf') BETWEEN (0.7409200348117253) AND (0.1384916444658444)))));SELECT DISTINCT ((UNLIKELY(vt1.c2))>(CAST(rt1.c3 AS TEXT))) FROM vt1, vt0, rt1 WHERE (IFNULL(((0xffffffffd004e0e0) IS TRUE), UPPER(DISTINCT '-1381515333'))); -- 0ms;
SELECT ALL CASE rt1.c1 COLLATE BINARY  WHEN CAST(rt1.c0 AS REAL) THEN (NOT (rt1.c3)) END, (((((rt1.c4)AND(rt1.c3)))AND(vt1.c0)) IN ()), LAG((((rt1.c3, '+3', rt1.c4)) BETWEEN ((((rt1.c0)<=(rt1.c0)), (((rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c4, rt1.c0)) AND ((rt1.c3, rt1.c4, rt1.c1))), rt1.c1)) AND ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, IFNULL(DISTINCT rt1.c2, rt1.c3), (rt1.c1 IN (rt1.c0))))), (HEX(DISTINCT rt1.c2) IN ()), ((x'')&(0.7540633881039891))) OVER () FROM rt1 WHERE (((CAST('0.662852906208504' AS INTEGER)) NOT BETWEEN (((x'')!=('0.2505767512880992'))) AND (((((((((0x1797e727)OR('1839708615')))AND('')))OR(0.9351814399076904)))AND(NULL))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((((rt1.c0)OR(rt1.c4)))AND(vt0.c0)))) AND (('283163010'))) FROM vt1, rt1 WHERE ((((('')+(0xffffffffd3f5072f))) BETWEEN (UNLIKELY(-2132773404)) AND (((NULL) NOT BETWEEN (-7.88188977E8) AND ('975922615')))));SELECT DISTINCT ((((((((CASE WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE vt0.c0 END)AND(((vt1.c1)<<(rt1.c2)))))AND(vt1.c2 COLLATE RTRIM)))AND(vt1.c0)))AND(rt1.c1)) FROM vt0, rt1 WHERE (((CAST(x'dca3b724' AS INTEGER)) BETWEEN (((x'3e75') NOT NULL)) AND ((NOT (''))))) GROUP BY ((((+ (rt1.c1)), TRIM(DISTINCT vt1.c2), (~ (rt1.c1))))>=((((((vt0.c0)AND(vt1.c0)))OR(rt1.c2)), ((rt1.c4)+(vt1.c0)), ((vt1.c1)<(vt1.c2)))));SELECT ALL (NOT (CAST(vt1.c2 AS INTEGER))) FROM vt1, vt0 LIMIT 0 OFFSET 139987413; -- 0ms;
SELECT ALL ((vt1.c2)OR(LOWER(vt1.c1))), LIKELY(UPPER(DISTINCT vt1.c0)), CHAR(((rt1.c0)IS('69231626')), CAST(-245590197 AS INTEGER), ((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c2)))OR(vt1.c2)))OR(vt1.c0))) FROM rt1, vt0 WHERE ((((+ (NULL)))GLOB(-1747991285)));SELECT DISTINCT vt1.c2, (~ ((+ (rt1.c0)))), TOTAL((NOT (rt1.c2))) FILTER(WHERE ((rt1.c0 COLLATE RTRIM) IS FALSE)) OVER ( ORDER BY CAST(rt1.c0 AS INTEGER) DESC  NULLS LAST) FROM vt0 WHERE (((((((NULL)&(x'1d8b')))OR(((x'') BETWEEN (NULL) AND ('')))))AND((x'' IN ()))));SELECT DISTINCT (((rt1.c4) NOTNULL) IN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)))), ((((vt1.c2)GLOB(rt1.c3)))||(((((rt1.c1)AND(rt1.c1)))AND(vt1.c2)))), NULLIF(DISTINCT CASE vt1.c1  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c3 THEN '287346888' WHEN vt1.c0 THEN NULL ELSE rt1.c2 END, ((((rt1.c3)OR(rt1.c4)))OR(rt1.c2))) FROM vt0, vt1 WHERE (ABS(DISTINCT ((0.6552923550089533) NOT BETWEEN (0.4295746437997623) AND (0.16197964917892727))));SELECT CAST((~ (vt1.c2)) AS TEXT), ((((((vt1.c2)AND(rt1.c2)))OR(vt1.c1))) NOT BETWEEN (((rt1.c3)<<(NULL))) AND (IFNULL(rt1.c3, rt1.c1))), LAG('WUf1', CASE x''  WHEN CAST(vt0.c0 AS BLOB) THEN NULLIF(vt0.c0, vt1.c2) END, UNLIKELY(DISTINCT vt0.c0) COLLATE BINARY) OVER () FROM vt1, vt0;SELECT DISTINCT rt1.c1 FROM vt0 WHERE ((- (((0.308945225015696)+(NULL)))));SELECT (((+ (rt1.c3)))GLOB(LOWER('Iw詼u'))), json_quote(((rt1.c0)|(0Xffffffffcf0b339f))), GROUP_CONCAT(CAST(rt1.c4 AS BLOB)) OVER () FROM rt1; -- 0ms;
SELECT ((((vt1.c1)OR(vt0.c0))) BETWEEN (((rt1.c0) NOT BETWEEN ('uTIyj_') AND (rt1.c3))) AND (rt1.c2 COLLATE BINARY)) FROM vt0, rt1 WHERE (TRIM(HEX(DISTINCT '-1915693343')));SELECT DISTINCT rt1.c1 FROM vt1, vt0, rt1 WHERE (1.447223991E9); -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) FROM rt1, vt1 WHERE (CAST(((((x'')AND(NULL)))OR(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT HEX(vt1.c1) FROM rt1, vt1; -- 0ms;
SELECT ALL CASE WHEN (~ (0x4c83ca45)) THEN TRIM(rt1.c2, NULL) ELSE ((vt0.c0)|(vt1.c1)) END, CAST(rt1.c0 COLLATE RTRIM AS NUMERIC), (((((x'9a7f')) BETWEEN ((rt1.c0)) AND ((vt1.c2)))) BETWEEN (x'') AND (((vt1.c1)||(rt1.c2)))) FROM vt0 WHERE ((NOT (((NULL)>(0.6579147950093277))))) GROUP BY (((vt0.c0)!=(rt1.c2)) IN (LIKELIHOOD(rt1.c3, 0.16477694570582135))), ((CASE WHEN rt1.c2 THEN vt0.c0 END)OR(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))), (+ ('	^' COLLATE RTRIM)), rt1.c3, CAST(LIKELY(DISTINCT rt1.c4) AS REAL), (NOT (vt0.c0)), (((rt1.c4)) NOT BETWEEN (((((((((('3^*뛸%I')AND(vt1.c1)))OR(rt1.c1)))OR(vt0.c0)))OR(vt1.c1)))) AND (((((vt0.c0)) BETWEEN ((x'')) AND ((rt1.c2))))));SELECT DISTINCT json_remove(((vt1.c1)&(rt1.c0)), ((vt0.c0)*(rt1.c0)), GROUP_CONCAT(vt0.c0), 0.4558571214175383) FROM vt1, vt0 GROUP BY CASE (+ (vt1.c2))  WHEN ((rt1.c4)%(rt1.c0)) THEN ((vt1.c2) NOT NULL) WHEN ((rt1.c3) NOTNULL) THEN CAST(vt1.c1 AS BLOB) WHEN ((rt1.c0)>>(rt1.c4)) THEN CAST(rt1.c1 AS INTEGER) END, ((((rt1.c0)AND(((((((((rt1.c0)OR(rt1.c1)))AND(vt1.c2)))OR(rt1.c3)))AND(rt1.c3)))))OR(CASE WHEN rt1.c2 THEN vt1.c1 END)), vt1.c2 HAVING LOWER(CAST(vt1.c2 AS INTEGER));SELECT DISTINCT COUNT(*) OVER ( ROWS BETWEEN UNLIKELY(((0.4625334703671491)LIKE(vt0.c0))) FOLLOWING AND  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt1 GROUP BY CASE (((rt1.c4, NULL, vt0.c0))!=((vt1.c0, rt1.c0, rt1.c1)))  WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c2))) THEN ROUND(rt1.c4, vt1.c1) END HAVING CAST(TOTAL(vt1.c1) AS INTEGER);SELECT ALL x'', CAST(COUNT(NULL) AS NUMERIC), ((CAST(vt1.c0 AS TEXT))+(((rt1.c4)GLOB(rt1.c0)))) FROM rt1 WHERE ((((('q#iL_I䢳_')AND(0.7540633881039891)))OR('now')) COLLATE NOCASE COLLATE NOCASE) LIMIT -730945986 OFFSET 1393174726;SELECT GROUP_CONCAT((vt1.c2 IN (rt1.c1, vt1.c1))) OVER () FROM vt0, vt1;SELECT DISTINCT ((((((((GROUP_CONCAT(rt1.c4))OR(TOTAL(rt1.c0))))AND((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))))OR(0.005019492984902119)))AND(MAX(NULL))) FROM vt1, vt0;SELECT DISTINCT (((((rt1.c2)|(rt1.c2)), ((rt1.c1)GLOB(rt1.c2)), (((vt1.c1))!=((rt1.c4)))))!=((GROUP_CONCAT(vt1.c2), (((vt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))), ((vt1.c2) IS FALSE)))), json_array(vt0.c0, rt1.c0) COLLATE BINARY, SUM((- (vt1.c1))) FROM rt1, vt0;SELECT DISTINCT ((((((vt1.c2) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((vt1.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))))AND((~ (NULL)))), ((((rt1.c0) NOTNULL)) NOT NULL), (((((NOT (rt1.c2)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c2) IS TRUE))) FROM rt1, vt0 WHERE ((((((((x'', 0X300ce195, x'')) NOT BETWEEN ((NULL, ' .gou4', 0.9207950296251636)) AND ((0Xfffffffff0a2bfbb, 0.8268860361332635, 0.28290956167181924))))OR(((NULL) NOT BETWEEN (0.15864585122072872) AND (x'')))))AND(((0x3e12fae9) BETWEEN (NULL) AND ('GR')))));SELECT ((0Xffffffffa2f42eba COLLATE RTRIM) BETWEEN ((- (vt1.c1))) AND ((NOT (rt1.c2)))) FROM vt1, vt0 WHERE ((((CASE 0.5112436826193058  WHEN 0.9126202244334333 THEN NULL ELSE '[]' END))<=((x'')))) LIMIT -1528468827 OFFSET -1946064764;SELECT DISTINCT CASE WHEN (vt1.c1 IN ()) THEN ((vt1.c1) ISNULL) WHEN (NOT (vt0.c0)) THEN vt1.c1 WHEN ((rt1.c3)+(vt1.c2)) THEN ((NULL) NOT NULL) END FROM vt1 LIMIT -29227403 OFFSET 597122739;SELECT DISTINCT (+ (((vt1.c1) NOTNULL))) FROM vt1, rt1 WHERE ((0.818491632563237 IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(COUNT(rt1.c1) AS NUMERIC) FROM vt0, rt1 GROUP BY NULL, (((~ (rt1.c1))) BETWEEN ((NOT ('1956237735'))) AND (0.04141972555781348)), CASE WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(rt1.c2 AS NUMERIC) WHEN rt1.c3 COLLATE RTRIM THEN NULL WHEN ((vt0.c0) BETWEEN (0.22986048247537205) AND (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((rt1.c2)) AND ((NULL))) END; -- 1ms;
SELECT (((((((((((rt1.c3, vt1.c0, rt1.c3)) NOT BETWEEN ((vt0.c0, vt1.c2, rt1.c4)) AND ((rt1.c3, rt1.c4, rt1.c3))))OR((((rt1.c4, vt0.c0, rt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c2, vt1.c0)) AND ((vt1.c2, vt1.c1, NULL))))))AND((((rt1.c4)) BETWEEN ((vt1.c1)) AND ((vt0.c0))))))OR(rt1.c1 COLLATE NOCASE)))OR('')) FROM rt1 INNER JOIN vt1 ON CAST('-940224553' AS REAL) WHERE ((NOT ('1612970356' COLLATE NOCASE))) GROUP BY ((((rt1.c1)<(vt1.c0)))<(CASE vt1.c1  WHEN vt0.c0 THEN x'073b' ELSE vt0.c0 END)), 0.7852620187632408, ((NULL) IS TRUE);SELECT ALL LIKELIHOOD(((rt1.c4)>=(vt1.c0)), 0.6526422608831093), (((+ (rt1.c0))) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND (CASE WHEN 0Xffffffff841b73f0 THEN vt1.c0 END)), NULL FROM rt1 LEFT OUTER JOIN vt1 ON vt1.c0 ORDER BY CASE json_type(x'43cf')  WHEN rt1.c3 COLLATE RTRIM THEN ((vt1.c1)||(rt1.c1)) END ASC  NULLS LAST, (((vt1.c2)) NOT BETWEEN ((CASE WHEN rt1.c2 THEN x'0f23' ELSE rt1.c3 END)) AND (((0.957490450160189 IN (rt1.c1, rt1.c0)))))  NULLS FIRST;SELECT DISTINCT CAST(CASE rt1.c0  WHEN '+3' THEN rt1.c0 ELSE vt1.c0 END AS TEXT), ABS(vt1.c2 COLLATE NOCASE), (((rt1.c0 COLLATE BINARY))<(((+ ('-96477351'))))) FROM vt0, rt1, vt1 WHERE (CAST(((NULL)LIKE(x'71b9')) AS INTEGER)) ORDER BY 0.16256950778448032 ASC LIMIT 1393174726 OFFSET 1329777631; -- 0ms;
SELECT ALL rt1.c1 FROM rt1, vt1, vt0; -- 0ms;
SELECT ALL ((CASE rt1.c3  WHEN vt0.c0 THEN vt1.c2 ELSE rt1.c0 END) NOT NULL), CAST((~ (rt1.c4)) AS REAL), ((AVG(rt1.c0)) BETWEEN (((vt1.c1)=(rt1.c2))) AND (-671016925)) FROM rt1, vt1, vt0 WHERE (((0.0822055225856233 COLLATE NOCASE)>>(((NULL) BETWEEN (-1.65379884E9) AND (NULL))))); -- 0ms;
SELECT SUM(MIN('115395772')) FROM vt0;SELECT DISTINCT (+ (vt0.c0)) COLLATE NOCASE, (((((((((((((('3959357550132539454')+(rt1.c2)))OR(((vt1.c2) IS FALSE))))AND((rt1.c1 IN ()))))OR(PRINTF(NULL))))OR(CAST(rt1.c1 AS REAL))))OR(CAST(rt1.c3 AS BLOB))))OR(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c4 WHEN vt1.c0 THEN vt1.c2 END)), CAST(((-2.078575632E9)*(0.8150039329341848)) AS INTEGER) FROM vt0, rt1, vt1 WHERE (CAST((+ (x'a5c3')) AS REAL)); -- 0ms;
SELECT UPPER(DISTINCT GROUP_CONCAT(rt1.c3)) FROM vt1 WHERE (((('')|(x'830bacb23344')) IN ('581434234' COLLATE NOCASE))) GROUP BY ((CASE vt1.c0  WHEN NULL THEN rt1.c1 END) ISNULL);SELECT DISTINCT ((CAST(vt1.c0 AS NUMERIC))/('-401813014')), rt1.c2, CAST((('1402079079') ISNULL) AS NUMERIC) FROM vt0, rt1 WHERE (((((x'' COLLATE BINARY)AND(json_type(x'04bfb904'))))AND(ABS('0.6328840254671264'))));SELECT DISTINCT ((((rt1.c3)AND(vt0.c0)))>(CASE NULL  WHEN vt1.c2 THEN vt0.c0 END)) FROM rt1, vt0 WHERE (CASE '603213684'  WHEN '1196325419' THEN x'' ELSE 0.33221985848160696 END COLLATE NOCASE) GROUP BY (((vt1.c2)OR(vt0.c0)) IN ());SELECT DISTINCT CASE ((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c3))  WHEN ((((rt1.c3)AND(vt1.c2)))OR(rt1.c3)) THEN ((vt1.c2)|(vt1.c1)) END FROM vt1 LIMIT -2078575632;SELECT (((((vt1.c2 IN ()))OR(COUNT(*))))OR(((vt1.c1)<<(vt1.c2)))), CAST((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((vt1.c1))) AS BLOB), ((((rt1.c2)IS(vt1.c2))) BETWEEN (CAST(vt1.c2 AS INTEGER)) AND (((((((((rt1.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(rt1.c2)))) FROM vt0, rt1, vt1; -- 0ms;
SELECT ALL ((((((vt0.c0)>=(rt1.c2)))AND((rt1.c3 IN ()))))AND(LTRIM(-1.946064764E9, vt0.c0))) FROM vt0, vt1, rt1; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1, vt0 NATURAL JOIN vt1 WHERE ((((NULL IN (0.25867028084127563, '-658986281'))) NOT BETWEEN (UNICODE(0.02656063461990532)) AND (CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM vt1 WHERE ((((NULL, '-38264907', x'')) BETWEEN ((TRIM(DISTINCT NULL, NULL), ('280372050' IN ()), CASE WHEN '0.7743115546325461' THEN 'Z7 ' ELSE 0xffffffffe1749017 END)) AND (((('740192115')>(NULL)), ((NULL)||('118034690')), ((x'') NOT BETWEEN ('1643665090') AND ('pxw㺿Mi8q'))))));SELECT DISTINCT CAST(((vt0.c0)IS(vt1.c2)) AS NUMERIC), CASE (vt1.c2 IN ())  WHEN CAST(x'' AS NUMERIC) THEN CAST(vt1.c0 AS REAL) ELSE (NOT (0.10780848806036736)) END, CASE ((((rt1.c0)AND(vt0.c0)))OR(rt1.c1))  WHEN ((((vt1.c1)OR(rt1.c2)))AND(rt1.c0)) THEN '-821479424' ELSE x'' END, (NOT (CAST(rt1.c3 AS TEXT))), ((((vt1.c0)IS(rt1.c3))) NOTNULL) FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT (((rt1.c3 COLLATE NOCASE, COUNT(rt1.c1), ((rt1.c1) BETWEEN (vt1.c0) AND (rt1.c3))))<((((rt1.c3) NOT NULL), (((vt0.c0)) BETWEEN ((rt1.c4)) AND ((x''))), (vt1.c1 IN ())))) FROM vt0, rt1 NOT INDEXED, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c1)<=(rt1.c0)) IN (IFNULL(DISTINCT rt1.c3, rt1.c1), ((NULL) IS FALSE))) FROM vt0, vt1;SELECT NTILE(((json_remove(vt0.c0, rt1.c4, rt1.c0, rt1.c1)) NOT BETWEEN (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c3 END) AND (rt1.c4))) OVER ( ORDER BY (CASE WHEN rt1.c0 THEN vt1.c0 END IN (((vt1.c0)OR(vt1.c1)))) DESC) FROM vt0, rt1 WHERE (CAST((- ('270356183')) AS INTEGER));SELECT ((COUNT(*)) NOT BETWEEN (IFNULL(vt1.c1, vt1.c1)) AND ((NOT (rt1.c0)))), AVG(vt1.c1) FILTER(WHERE CASE WHEN json_insert(x'3e23', rt1.c1, 0.9909929913088517) THEN (rt1.c2 IN ()) END) OVER (), TOTAL(x'5b18') OVER () FROM vt0, rt1, vt1 GROUP BY (((vt1.c2) IS TRUE) IN ()), (((rt1.c0) NOT NULL) IN ()), (((((rt1.c4) ISNULL)))>((((((((((rt1.c0)AND(vt1.c2)))AND(vt0.c0)))OR(rt1.c1)))OR(vt1.c0))))) HAVING (((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((rt1.c1))))+(((rt1.c1)IS NOT(vt1.c2))));SELECT DISTINCT (CASE WHEN vt1.c2 THEN x'f3b4' ELSE vt1.c1 END IN ()) FROM rt1 WHERE ((((- ('8S0쥚^)<?')))%(((x'6670')=(x''))))) LIMIT -1368521474 OFFSET 119299580; -- 1ms;
SELECT DISTINCT CASE CAST(rt1.c0 AS TEXT)  WHEN json_valid(vt1.c2) THEN (rt1.c3 IN (rt1.c0, rt1.c3, rt1.c4, vt1.c1)) END FROM vt0, rt1 WHERE ((('Q')+(((((NULL)AND(NULL)))AND(0.1767097997661401))))) ORDER BY (- ((+ (rt1.c2)))), CAST(vt1.c2 AS NUMERIC)  NULLS FIRST;SELECT ALL (((rt1.c2 IN ()))<=(0.035934046444432544)), (((NOT (rt1.c4)))LIKE(AVG(NULL))), (+ (((rt1.c4)AND(rt1.c1)))), CASE WHEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((rt1.c1))) THEN IFNULL(DISTINCT vt1.c2, vt1.c0) END, (NOT (x'')) FROM vt1, rt1; -- 0ms;
SELECT ((((rt1.c0) NOT BETWEEN (vt0.c0) AND (x'')))<<(CAST(vt1.c0 AS INTEGER))) FROM vt1 WHERE (((-2.047559944E9 COLLATE BINARY) NOTNULL)) ORDER BY (+ (((vt0.c0) IS TRUE)))  NULLS FIRST;SELECT ALL LAST_VALUE(((((((vt1.c2)OR(vt1.c2)))AND(vt1.c2))) NOT BETWEEN ((~ (vt1.c1))) AND (((vt1.c2) NOTNULL)))) OVER (), MIN((+ (rt1.c0))), TYPEOF((2.12937168E9 IN (NULL))) FROM vt1;SELECT ALL ((rt1.c4) NOTNULL) COLLATE RTRIM FROM rt1, vt0, vt1; -- 0ms;
SELECT DISTINCT ((HEX(rt1.c4))IS NOT((((rt1.c2))>((rt1.c4))))) FROM vt1, vt0 WHERE (LAST_INSERT_ROWID() COLLATE BINARY);SELECT CASE -3.09117663E8  WHEN UPPER(DISTINCT rt1.c3) THEN (((vt0.c0))>((rt1.c3))) ELSE (0xffffffffcd56fcdc IN (rt1.c1)) END FROM vt1, rt1;SELECT DISTINCT ((((((((((((AVG(vt1.c2))OR(TOTAL(vt1.c1))))OR(rt1.c2 COLLATE RTRIM)))AND(((rt1.c0) IS FALSE))))OR(UPPER(0.1384916444658444))))AND(((((((((rt1.c0)OR(vt1.c2)))OR(vt1.c2)))OR(rt1.c3)))OR(vt1.c1)))))AND(((rt1.c0)LIKE(rt1.c3)))), x'', LAG(((vt0.c0) NOTNULL), 'h{', ((vt1.c2) NOTNULL) COLLATE NOCASE) OVER ( PARTITION BY ((((CAST(0.03472203744650171 AS TEXT))AND(((vt1.c1) NOT BETWEEN (rt1.c3) AND (0.20769243405657256)))))AND(SQLITE_COMPILEOPTION_USED(rt1.c1))), GLOB((vt1.c1 IN ()), CASE WHEN rt1.c1 THEN vt0.c0 ELSE vt1.c1 END)) FROM vt0, vt1 ORDER BY IFNULL(((vt1.c0)<=(vt1.c2)), (((vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt0.c0, rt1.c4, vt1.c0)))), '975922615', ((CAST(vt0.c0 AS REAL))IS NOT(((vt1.c0) IS TRUE))) ASC  NULLS LAST;SELECT ALL ((((vt1.c2)|(vt1.c1)))<>(((rt1.c1)AND(rt1.c1)))) FROM rt1 WHERE (((((((((((((((x'')OR(NULL)))OR(NULL)))OR(NULL)))AND('L(')))AND(-1.014806142E9)))AND('-681989947'))) BETWEEN (x'' COLLATE BINARY) AND ('8s0쥚^)<?' COLLATE NOCASE)));SELECT DISTINCT (+ (rt1.c2)) COLLATE RTRIM, ((((((rt1.c3)OR(0X372ec07a)))AND(NULL)))=(IFNULL(DISTINCT vt1.c1, rt1.c4))), SUM((((vt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM vt0, vt1, rt1; -- 2ms;
SELECT ALL DENSE_RANK() OVER () FROM vt1, vt0, rt1 WHERE ((+ (0.18388011909237556))); -- 0ms;
SELECT ALL SUM(((rt1.c2)==(rt1.c2))) OVER (), IFNULL(DISTINCT (((rt1.c3))>=(('912999457'))), vt1.c2 COLLATE RTRIM), '-656308531' FROM vt1;SELECT ((((rt1.c2)*(x'eaa5')))==(((vt1.c2)/(0xffffffffb5b445a4)))) FROM vt0;SELECT ALL (('1970289909') IS FALSE) FROM vt0; -- 0ms;
SELECT ALL CASE ((rt1.c1) BETWEEN (rt1.c3) AND (vt1.c1))  WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (NULL)) THEN 0.1500199942094198 WHEN ((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))AND(vt1.c2)))OR(rt1.c1)) THEN ((rt1.c0) BETWEEN (rt1.c3) AND (vt1.c0)) WHEN ((((vt1.c1)OR(rt1.c2)))AND(rt1.c1)) THEN ((((((((x'')AND(rt1.c3)))OR(NULL)))OR(vt1.c2)))OR(rt1.c4)) ELSE vt1.c2 COLLATE NOCASE END FROM vt0;SELECT ALL '-1169924636' FROM vt1, rt1; -- 0ms;
SELECT DISTINCT ((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM, ((rt1.c3) BETWEEN (rt1.c0) AND (8.6668163E8)) COLLATE BINARY, CASE WHEN CASE vt1.c2  WHEN '' THEN vt1.c2 END THEN rt1.c4 WHEN CASE rt1.c2  WHEN 0.35246397542129015 THEN rt1.c4 WHEN rt1.c3 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c2 THEN vt1.c1 END THEN ((NULL)LIKE(rt1.c3)) WHEN (+ (vt1.c1)) THEN ((rt1.c3) BETWEEN (NULL) AND (rt1.c4)) END FROM rt1, vt0 WHERE (((((6.67230547E8 IN (NULL)), (('巤hKlqp') BETWEEN (0.8720312778721687) AND (0.19450430839118626)), CAST(x'' AS BLOB)))<((((-8.21479424E8)>(NULL)), (NULL IN ()), ((NULL)%(x'')))))) ORDER BY (~ (vt1.c1)) COLLATE BINARY, (~ (0.913645866265633)) DESC;SELECT (~ (((((vt0.c0)AND(vt1.c0)))AND(vt1.c2)))) FROM rt1, vt1 LIMIT -658986281 OFFSET 817232591;SELECT GROUP_CONCAT((- (vt1.c1))) FILTER(WHERE ((((rt1.c1) IS TRUE)) NOT NULL)) OVER (), NULL, CAST(rt1.c0 COLLATE BINARY AS NUMERIC) FROM vt1;SELECT DISTINCT ((((rt1.c0)GLOB(vt1.c1)))>(((vt1.c1) IS FALSE))) FROM vt1 WHERE (CASE ('羣p&p\^' IN ())  WHEN ((NULL) ISNULL) THEN TRIM('-1450986095', x'') ELSE ((NULL)AND(NULL)) END);SELECT DISTINCT 0.07799035540412791 FROM rt1 NATURAL JOIN vt1 ORDER BY (((NOT (vt1.c2))) BETWEEN (((((((((rt1.c0)AND(rt1.c1)))AND(vt1.c2)))OR(rt1.c0)))AND(rt1.c4))) AND (((rt1.c4)>>(rt1.c0)))), ((rt1.c0)IS NOT(rt1.c1)) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT (~ (vt1.c0)) COLLATE NOCASE, GROUP_CONCAT(((((rt1.c4)OR(vt1.c1)))OR(x''))) OVER (), ((((((rt1.c3)IS(vt0.c0)))AND(((rt1.c0)LIKE(rt1.c2)))))AND(((('A-xB-%'))<=((rt1.c3))))) FROM rt1 WHERE ((((x'')) BETWEEN ((CASE 0X33a8831e  WHEN x'' THEN x'' END)) AND ((((((((((x'')OR(NULL)))AND(1599201374)))AND('1183287846')))AND(1799120126))))));SELECT ALL UPPER(DISTINCT ((((((((rt1.c4)AND(vt1.c2)))OR(vt1.c1)))AND(rt1.c1)))AND(rt1.c1))) FROM rt1, vt0, vt1 LIMIT -1653798840 OFFSET 1927793689; -- 0ms;
SELECT (((rt1.c2)<<(rt1.c3)) IN (((rt1.c4)/('')))) FROM vt1, vt0;SELECT DISTINCT CAST(rt1.c4 AS INTEGER) FROM vt1, rt1; -- 0ms;
SELECT ((((((rt1.c3) IS TRUE))OR(IFNULL('D', vt1.c0))))OR(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0, rt1, vt1 LIMIT 1622881525; -- 0ms;
SELECT ALL CASE rt1.c1  WHEN ((((((((vt1.c0)OR(vt1.c2)))AND(rt1.c3)))OR(rt1.c0)))AND(vt1.c1)) THEN CASE WHEN vt1.c0 THEN rt1.c2 ELSE vt1.c0 END ELSE CAST(vt1.c2 AS NUMERIC) END FROM rt1, vt1, vt0 WHERE (JULIANDAY(NULL, CASE WHEN x'eb4e' THEN NULL END, (('1415757441')<<(x'')))); -- 0ms;
SELECT DISTINCT ((((rt1.c2)IS(rt1.c2)))<=((rt1.c3 IN ()))), ((((rt1.c0)/(vt1.c2))) IS TRUE), ((TOTAL(vt0.c0))IS NOT(IFNULL(rt1.c4, vt1.c2))) FROM vt1, vt0;SELECT DISTINCT CASE WHEN vt1.c0 COLLATE BINARY THEN ((rt1.c2)GLOB(vt1.c1)) ELSE ((rt1.c0) NOT NULL) END FROM vt0;SELECT ((vt1.c0)GLOB((NOT (vt1.c0)))), COALESCE(DISTINCT (NOT (vt0.c0)), vt1.c2 COLLATE NOCASE, CASE 0.5213027853507768  WHEN rt1.c3 THEN vt1.c2 WHEN vt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 ELSE vt0.c0 END, x''), CAST(rt1.c0 COLLATE BINARY AS BLOB) FROM rt1, vt1 WHERE ((0.5479387221314265 COLLATE BINARY IN ()));SELECT DISTINCT ((CAST(vt1.c0 AS INTEGER))IS NOT(((vt1.c2)||(rt1.c2)))) FROM vt1, vt0, rt1 WHERE (((((-8813462.0) IS TRUE))IS((((('>u+')AND('')))AND(NULL))))); -- 0ms;
SELECT DISTINCT CAST(GLOB(vt1.c2, rt1.c4) AS BLOB), vt1.c1, 0Xffffffffcc611eff FROM rt1 WHERE (((((-7.79092148E8) NOT BETWEEN (0.5597317072103541) AND (-1449414878))) NOTNULL)) GROUP BY (CAST(vt1.c1 AS BLOB) IN ((('1427365311')-(rt1.c3))));SELECT ALL (CAST(vt1.c1 AS INTEGER) IN ()) FROM rt1 WHERE (((((NULL)IS(x'9a3307b485e6')))&((+ (NULL))))) EXCEPT SELECT DISTINCT (~ (rt1.c2)) COLLATE RTRIM FROM vt1 WHERE (((CAST(0.554378520794226 AS BLOB))|(CASE WHEN '-309117663' THEN '#W' END))) LIMIT 1183287846 OFFSET -824387580;SELECT FIRST_VALUE(x'1255') OVER ( ORDER BY ((((NULL)OR(((rt1.c1)|(vt1.c0)))))OR(CAST(vt1.c0 AS BLOB)))  NULLS LAST), ((((((NULL)|(NULL)))OR((~ (vt1.c1)))))OR((+ (rt1.c0)))), json_array_length(((rt1.c2)<<(vt0.c0))) FROM vt1, rt1 WHERE ((((NULL)) BETWEEN (((0.7311587069426291 IN ()))) AND ((CAST('1204913631' AS INTEGER)))));SELECT CASE TYPEOF(vt1.c2)  WHEN vt1.c2 COLLATE RTRIM THEN ((rt1.c4)+(rt1.c2)) END, (((vt1.c1 IN (vt1.c1)))/(AVG(vt1.c1))), GROUP_CONCAT((((rt1.c1))<=((rt1.c4)))) OVER ( ORDER BY (((((((((vt1.c1)OR(vt1.c2)))AND(x'5a9e')))OR(vt1.c2)))OR(vt1.c1)) IN ()) ASC  NULLS LAST) FROM vt1, rt1, vt0; -- 1ms;
SELECT CAST(GROUP_CONCAT(vt1.c2) AS BLOB) FROM vt0, vt1, rt1 WHERE ((((0X7338ba03)) BETWEEN (((((-4.25246831E8, NULL, x'')) BETWEEN ((0.4110904507153298, -611885362, NULL)) AND ((1201162484, '1653028816', NULL))))) AND (((~ ('eﰑ1ࡈ(ED㛙g')))))); -- 0ms;
SELECT DISTINCT (((((((vt1.c1))>=((vt0.c0))))AND(CAST(rt1.c4 AS TEXT))))AND(((rt1.c2)-(rt1.c3)))) FROM vt1 WHERE (((CASE WHEN '' THEN 0.8268860361332635 END)<<(((((0.9294062918203025)AND(0X45e1f6d8)))OR(x'')))));SELECT (('' COLLATE RTRIM)>(0.891795985406193)) FROM vt0, vt1 WHERE ((((((NULL, '<⎑ハ-A|', x'360c'))>((0.4074234305088513, x'', x'')))) NOT BETWEEN ((('')=(NULL))) AND ((((('xfXN')AND(0x7eeba220)))AND(0.45685940508539513))))); -- 0ms;
SELECT GROUP_CONCAT(CAST(0.7232181429111224 AS REAL)) FROM vt0 WHERE (((+ (x'')) IN ())); -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c1)*(rt1.c4))) FROM rt1 WHERE (CAST(((x'ec76')+('3959357550132539454')) AS TEXT)) GROUP BY ((CAST(vt1.c2 AS BLOB)) BETWEEN ((- (rt1.c4))) AND ((vt0.c0 IN ())));SELECT DISTINCT CAST(CAST(rt1.c2 AS INTEGER) AS NUMERIC), '圅', 0.128453225257812, ((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c0))) BETWEEN (rt1.c4 COLLATE RTRIM) AND (((rt1.c1)IS(rt1.c0)))), '' FROM vt0 WHERE (QUOTE(((NULL)IS(x'')))) LIMIT 1708888396 OFFSET 748216763;SELECT DISTINCT CASE WHEN vt1.c2 THEN rt1.c4 ELSE rt1.c4 END COLLATE RTRIM, (0Xffffffffc027874a IN (((((vt1.c2)OR(vt0.c0)))AND(-1569301020)), ((rt1.c3) IS FALSE))), rt1.c4 FROM vt0 WHERE (((x'' IN ()) IN ()));SELECT ALL (((((vt1.c2) NOTNULL)))<=((TRIM(rt1.c1, rt1.c1)))) FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT CAST((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS BLOB) FROM vt0 WHERE ((~ ('-1408481971' COLLATE RTRIM)));SELECT ALL (((vt1.c2)) NOT BETWEEN (('开' COLLATE RTRIM)) AND (((rt1.c1 IN ())))) FROM vt0, vt1, rt1 WHERE (LIKELY(DISTINCT ((((x'')OR(NULL)))OR(0.9151171693783154)))); -- 0ms;
SELECT DISTINCT (((vt1.c2)) NOT BETWEEN ((((vt0.c0)IS(rt1.c1)))) AND ((TOTAL(rt1.c0)))) FROM vt0, vt1, rt1 LIMIT -1616788125 OFFSET 785477779; -- 0ms;
SELECT DISTINCT (((rt1.c4) IS TRUE) IN ()), MIN((('FALSE') BETWEEN (NULL) AND (rt1.c0))) COLLATE NOCASE, rt1.c1 FROM vt0, vt1 WHERE (((((ABS(DISTINCT ''))OR(1853155560)))AND(x'')));SELECT DISTINCT ABS(((vt1.c1)LIKE(rt1.c4))), (((rt1.c2)LIKE(vt0.c0)) IN ()), NTH_VALUE((((HEX(rt1.c2)))<((((NULL)=(rt1.c1))))), ((~ (vt1.c2)) IN ())) OVER () FROM vt0, vt1, rt1;SELECT LIKE((NOT (vt0.c0)), CAST(vt1.c1 AS NUMERIC)), vt1.c1, SUM(((('p<H.a努E%Y')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) FROM vt0, rt1 WHERE (((((((((NULLIF('', 0x52663b7e))OR((('-2008848980') BETWEEN ('K>긺wK\|') AND (x'1cd1')))))AND(('1349309081' IN ()))))OR(CASE 0.4849408942145832  WHEN x'c4ea' THEN -423720682 ELSE 0.8474165073245601 END)))OR('-257769541' COLLATE BINARY)));SELECT DISTINCT (((((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt0.c0))))<((UPPER(vt1.c2)))) FROM vt1, vt0 NOT INDEXED, rt1 WHERE (('1148873936' IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT vt1.c0 COLLATE BINARY FROM vt0, rt1, vt1; -- 0ms;
SELECT DISTINCT 0.6852290203297196 FROM vt0, vt1, rt1; -- 0ms;
SELECT DISTINCT (NOT (vt1.c1 COLLATE RTRIM)), NULLIF(DISTINCT ((vt0.c0)|(x'')), CAST(rt1.c0 AS NUMERIC)), LAST_VALUE(SQLITE_COMPILEOPTION_GET(rt1.c0) COLLATE RTRIM) OVER () FROM rt1 WHERE ((((NULL) IS FALSE) IN (TRIM(0.0944783604182795))));SELECT DISTINCT CAST(((rt1.c0)<=(rt1.c3)) AS INTEGER), ((NULLIF(rt1.c0, vt1.c0))&(rt1.c3 COLLATE RTRIM)), (NOT (CAST(rt1.c1 AS BLOB))) FROM vt1, vt0, rt1 WHERE (CASE x'' COLLATE BINARY  WHEN CAST(NULL AS TEXT) THEN 0x78b76a0e COLLATE RTRIM END); -- 0ms;
SELECT ALL (((((vt0.c0) IS FALSE)))>(((vt1.c2 IN (vt1.c1))))) FROM rt1, vt1;SELECT DISTINCT ((CASE WHEN x'd06a' THEN rt1.c1 WHEN vt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c1 THEN rt1.c2 WHEN vt1.c2 THEN rt1.c2 ELSE '' END)+(LIKELY(DISTINCT NULL))) FROM vt1, vt0 LIMIT 625585564 OFFSET 712963345;SELECT ALL ((vt1.c1 COLLATE NOCASE)/((rt1.c1 IN ()))) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((rt1.c3) BETWEEN (vt1.c0) AND (rt1.c0)))OR(((rt1.c3)||(vt1.c2)))))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 END)) WHERE (((CAST(0xb0f6ddb AS TEXT))*((((0.21130997920065697))!=((x''))))));SELECT ((((vt0.c0)OR(rt1.c0)))OR(rt1.c1)) COLLATE BINARY, (+ (CAST(vt0.c0 AS NUMERIC))), CASE WHEN ((((((((rt1.c4)AND(rt1.c2)))OR(vt1.c2)))AND(vt1.c0)))AND(rt1.c4)) THEN IFNULL(vt1.c0, vt1.c0) ELSE CAST(rt1.c1 AS BLOB) END FROM rt1, vt1, vt0 WHERE ((((x'')) NOT BETWEEN ((((x'25991065') IS TRUE))) AND ((((0.117951514380079)IS NOT(x'')))))) LIMIT -1050512567; -- 0ms;
SELECT (((((((((((rt1.c1))>=((vt1.c0))))AND((+ ('Xam奖y')))))AND(CAST(vt1.c0 AS INTEGER))))OR((((vt1.c2, vt0.c0, rt1.c0))<=(('3ඐ.M힟cd~', rt1.c3, rt1.c4))))))OR(((rt1.c1) IS TRUE))) FROM vt0, vt1 GROUP BY CASE WHEN CAST(0.16987527581992268 AS TEXT) THEN JULIANDAY(NULL, vt1.c2, rt1.c1, NULL, rt1.c0, rt1.c1, vt0.c0) ELSE ABS(vt0.c0) END, (NOT (NULL)), ((((rt1.c4))<((rt1.c2))) IN ()) HAVING (~ ((((rt1.c2))=((rt1.c2))))) LIMIT 1927793689;SELECT DISTINCT (((((vt1.c1)LIKE(0.8336896394785863))))=((x''))), ((((((rt1.c0))>=((rt1.c3)))))>(((vt1.c2 IN ())))), '9v' FROM vt0 WHERE (NULL);SELECT DISTINCT NULL FROM rt1 NOT INDEXED, vt1 WHERE ((NOT ('mnRo\pN>'))); -- 0ms;
SELECT DISTINCT (~ (((0X69cc8747) NOTNULL))) FROM vt0 INNER JOIN rt1 ON LIKELY(DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c3) AND (vt1.c0)));SELECT ALL CAST(vt1.c1 AS BLOB) FROM rt1, vt0, vt1; -- 0ms;
SELECT ((((rt1.c3) NOT BETWEEN (vt1.c1) AND (vt0.c0)))-((vt1.c0 IN ()))), (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)), (NOT (rt1.c2)), vt1.c1 COLLATE BINARY))>((((rt1.c4)AND(vt0.c0)), (rt1.c3 IN ()), ((rt1.c2)>=(rt1.c1))))), ((rt1.c0)>=(vt1.c2)) COLLATE BINARY FROM vt1, rt1 WHERE ((((((1.183287846E9)AND(x'')))OR(x'')) IN ()));SELECT DISTINCT ((((((vt0.c0)LIKE(vt0.c0)))AND(CAST(vt1.c0 AS REAL))))AND(((rt1.c4)*(vt1.c0)))) FROM vt1, rt1, vt0 WHERE (((((((x'3f7c')AND(x'')))OR(0Xffffffffc6158fdf)))*((('么k擠>Z~') NOTNULL)))) GROUP BY rt1.c4 HAVING CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN CASE WHEN rt1.c2 THEN rt1.c4 ELSE vt1.c1 END WHEN (+ (rt1.c0)) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)IS(vt1.c1)) THEN MAX(rt1.c2) ELSE ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) END; -- 1ms;
SELECT DISTINCT COUNT(*), AVG((((NULL, vt1.c0, vt1.c2))>=((vt1.c2, vt1.c1, vt1.c2)))) OVER ( ROWS ((((vt1.c0)>=(rt1.c4)))||(CAST(vt1.c1 AS INTEGER))) PRECEDING EXCLUDE NO OTHERS), (LOWER(DISTINCT rt1.c0) IN (((rt1.c2)!=(vt0.c0)))) FROM vt1, rt1, vt0 WHERE (NULL) LIMIT 1753395244;SELECT (+ (x'd695')), (((+ (vt1.c0))) BETWEEN (CAST(rt1.c0 AS TEXT)) AND (((((vt1.c0)AND(rt1.c3)))AND(rt1.c1)))), ((CASE WHEN rt1.c4 THEN vt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c4 THEN vt1.c0 END)*(UNLIKELY(DISTINCT vt1.c2))) FROM rt1 GROUP BY (((((rt1.c1) ISNULL), ((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c1)), ((rt1.c1)%(rt1.c2))))>(((~ (rt1.c3)), (((rt1.c2))>=((vt1.c1))), ((rt1.c4) IS TRUE)))) HAVING ((CAST(rt1.c0 AS INTEGER))<>((((rt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))));SELECT DISTINCT (((vt0.c0) IS TRUE) IN ((- (vt0.c0)))), ((((((((CASE WHEN rt1.c2 THEN '⯬LM' WHEN rt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE rt1.c0 END)OR((NOT (vt0.c0)))))OR(json_type(rt1.c3))))AND((rt1.c0 IN ()))))OR(rt1.c3 COLLATE BINARY)), PERCENT_RANK() OVER ( RANGE BETWEEN (((vt0.c0 COLLATE BINARY, ((vt0.c0) NOTNULL), ((vt1.c1)<=('?蝊'))))>((IFNULL(DISTINCT rt1.c0, '0.2505767512880992'), CASE vt1.c1  WHEN vt1.c2 THEN vt0.c0 END, LIKELY(DISTINCT rt1.c2)))) PRECEDING AND (- (0.7193351887585296)) FOLLOWING) FROM vt0, rt1 WHERE ((((((NULL, x'0967', x'')) NOT BETWEEN (('1295670922', 'bwg~\', x'')) AND ((1.447223991E9, '-761784796', x'')))) ISNULL));SELECT DISTINCT (((vt0.c0))=((0Xffffffff9e6ae394))) COLLATE NOCASE FROM vt1, rt1 WHERE ((((((NULL)AND(0X2c0aff00)))OR('-2078575632')) IN (((x'')<('-1616788125')))));SELECT ALL COUNT(((vt1.c0) NOT NULL)) FROM rt1, vt1, vt0 WHERE ((((~ (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c2)) AS BLOB) FROM vt1;SELECT ALL (((-1134475309) IS FALSE) IN ()) FROM rt1, vt1 WHERE ((~ (LIKELIHOOD(DISTINCT x'd555', 0.7472242519027433)))); -- 0ms;
SELECT ALL rt1.c2 FROM vt0 WHERE ((((('-332349482') IS FALSE)) NOT BETWEEN (NULL) AND ((NULL IN ('cQI5*琮M')))));SELECT DISTINCT ((((vt1.c2) ISNULL))+(((rt1.c0) BETWEEN (vt1.c2) AND (vt0.c0)))), ((vt1.c0 COLLATE RTRIM) ISNULL), MAX(((rt1.c0) BETWEEN (0.8219972548857464) AND ('I'''))), COUNT(*) OVER ( RANGE BETWEEN ((((((rt1.c1)OR(vt1.c2)))OR(rt1.c4))) NOT BETWEEN (rt1.c1) AND (LIKELIHOOD(DISTINCT vt1.c1, 0.13858142551510566))) FOLLOWING AND  CURRENT ROW EXCLUDE GROUP), ((COUNT(vt1.c2))>(DATETIME(rt1.c4, rt1.c2, vt1.c2, vt0.c0, vt1.c0))) FROM rt1, vt1 WHERE (TRIM(NULL COLLATE BINARY));SELECT ALL NULL FROM vt1, vt0 WHERE (((((x'')!=(''))) BETWEEN ((((x'eb4e529f', 0.7610696276106794, NULL))>=(('2083966959', '1426695986', x'b3a8')))) AND (((1191932974)+(NULL))))) GROUP BY (NULL IN (((vt1.c0) BETWEEN (vt1.c2) AND (rt1.c1)), (- (rt1.c2))));SELECT DISTINCT (+ ((- (vt0.c0)))) FROM rt1 WHERE ((- (((x'')GLOB(x'')))));SELECT ((((vt1.c1)>>(vt1.c2))) IS TRUE), (((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4))) COLLATE NOCASE, ((0Xffffffffabec1fff) NOTNULL) FROM vt1, rt1 GROUP BY CAST(vt1.c1 AS REAL) COLLATE RTRIM HAVING (((vt1.c1 IN (rt1.c0, rt1.c2)))<(CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END));SELECT x'53cd' FROM vt0, rt1; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS TEXT), (((vt1.c1) IS TRUE) IN ()), ((CASE rt1.c1  WHEN vt1.c0 THEN vt0.c0 ELSE rt1.c4 END) IS TRUE), ((CAST('-2038550240' AS BLOB)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN vt1.c1 WHEN rt1.c4 THEN vt0.c0 ELSE rt1.c1 END) AND (((rt1.c3)&(rt1.c3)))), CAST(CASE vt1.c1  WHEN NULL THEN rt1.c1 ELSE vt1.c0 END AS TEXT) FROM rt1 WHERE (((((x'8915')<=('H8'))) BETWEEN (CASE WHEN NULL THEN '\S' ELSE NULL END) AND (CASE WHEN 371551361 THEN 2072864406 WHEN 'p*?V' THEN x'' WHEN NULL THEN 0.058607733822159 ELSE x'4374' END)));SELECT DISTINCT ((((rt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c2))) IN ()) FROM vt0 WHERE (TYPEOF((0.41070053417913 IN (-4.36802885E8)))); -- 0ms;
SELECT ALL 'yS', TRIM(DISTINCT ((vt1.c1) NOT NULL)), 3.62357319E8 FROM vt1, vt0; -- 0ms;
SELECT CASE WHEN CAST(vt0.c0 AS TEXT) THEN (((rt1.c1, vt1.c0, rt1.c0))>((rt1.c0, vt1.c2, vt1.c2))) ELSE (+ (vt0.c0)) END FROM vt1 GROUP BY vt1.c1;SELECT DISTINCT CASE '-716893100'  WHEN ((((rt1.c2)OR(rt1.c4)))AND(rt1.c3)) THEN rt1.c4 END FROM vt0, vt1 WHERE ((- (((-1) BETWEEN (NULL) AND (0.016081537305965843)))));SELECT ALL GROUP_CONCAT(((vt1.c1) IS TRUE)) OVER () FROM vt0 WHERE ((((('uTIyj_')%('F\LH'))) BETWEEN (((NULL) NOT BETWEEN (x'') AND ('1865343129'))) AND (((-730945986)|(0.30587618083398116)))));SELECT ALL SUM(CASE rt1.c0  WHEN vt1.c1 THEN vt0.c0 END COLLATE NOCASE), GROUP_CONCAT((vt1.c1 IN ())) FILTER(WHERE ((rt1.c3 COLLATE NOCASE)>((((rt1.c2, NULL, rt1.c2))<>((vt1.c2, vt1.c1, x'a3ed')))))) OVER (), '-1483746248' FROM vt0, vt1 WHERE (TOTAL_CHANGES());SELECT ALL CAST(rt1.c0 AS REAL) COLLATE BINARY, rt1.c4, (((MIN(vt1.c2)))=((((rt1.c1) NOT NULL)))) FROM vt1, vt0 WHERE ((((('c	zpjA⬻#3')AND(-174350899)))AND(x'')) COLLATE BINARY);SELECT ALL ((((NULL)OR(CASE rt1.c2  WHEN vt1.c2 THEN vt0.c0 ELSE 866681630 END)))OR(CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c4 END)) FROM rt1, vt1, vt0; -- 0ms;
SELECT ALL ((CASE rt1.c1  WHEN vt1.c1 THEN rt1.c0 END)>(((vt1.c0)&(rt1.c1)))) FROM vt0 LIMIT 1369518825;SELECT DISTINCT (+ (((((rt1.c3)AND(vt1.c2)))AND(vt1.c2)))) FROM rt1, vt1, vt0; -- 0ms;
SELECT rt1.c0 FROM vt1, rt1, vt0; -- 0ms;
SELECT DISTINCT (+ ((rt1.c2 IN ()))), ((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c3)) COLLATE BINARY, rt1.c1, ((TOTAL(rt1.c0))IS(rt1.c1 COLLATE BINARY)), CAST(((((rt1.c0)AND(rt1.c4)))OR(rt1.c2)) AS BLOB) FROM vt0, rt1, vt1; -- 0ms;
SELECT ALL MAX(0.03292851054450063) FROM vt1, rt1 WHERE (((((('-980955883', NULL, '2129371680')) BETWEEN ((263375305, 0xffffffffd8256a83, '802506931')) AND (('1791915999', '', '539332381'))))<=(((NULL) BETWEEN (747018641) AND (x''))))); -- 0ms;
SELECT ALL FIRST_VALUE(CASE (((rt1.c0))=((rt1.c3)))  WHEN ((rt1.c4)<=(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE rt1.c3 COLLATE NOCASE END) OVER () FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT ((((NULL)OR('916094692')))AND(x'')))); -- 0ms;
SELECT DISTINCT (('') IS TRUE) FROM vt1, rt1, vt0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN '訦7 (J䦂' THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 END AS REAL) FROM rt1, vt0, vt1; -- 0ms;
SELECT ALL ((((((vt1.c1) NOTNULL))AND(vt1.c0)))OR(CASE WHEN vt0.c0 THEN -2091453810 END)) FROM vt0, vt1, rt1; -- 0ms;
SELECT vt1.c0 FROM rt1 NOT INDEXED WHERE ((~ ((NOT ('|x'))))) GROUP BY ((((((((((rt1.c2)|(vt1.c2)))OR('qz5')))AND(vt1.c1)))AND(rt1.c3)))AND((vt1.c1 IN ())));SELECT DISTINCT MAX(COUNT(*)) FROM vt0, rt1, vt1;SELECT ((((rt1.c3) NOT BETWEEN (rt1.c4) AND (vt1.c1)))AND((rt1.c0 IN (vt0.c0)))) FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c2)AND(vt1.c2)))OR(vt1.c2)))AND(CAST(rt1.c3 AS BLOB))))OR(rt1.c4 COLLATE NOCASE)))AND(((rt1.c1) ISNULL))))OR(rt1.c2 COLLATE BINARY)) FROM rt1, vt1 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt1.c4) ISNULL) FROM vt0, rt1, vt1 WHERE (HEX(((0X1e44d4a0)+(-1.685772586E9)))) GROUP BY ((((vt1.c0)<=(vt1.c0))) NOT NULL) ORDER BY ((30510280 COLLATE NOCASE)IS NOT(CASE WHEN rt1.c0 THEN 0X5fa4b1af ELSE rt1.c2 END)), '-346445853'  NULLS LAST; -- 1ms;
SELECT ALL CASE WHEN CASE WHEN rt1.c0 THEN rt1.c3 END THEN ABS(DISTINCT rt1.c0) WHEN ((vt1.c2)<<(vt1.c2)) THEN COUNT(rt1.c0) WHEN (+ (rt1.c3)) THEN ((vt1.c0)||(vt1.c0)) ELSE GROUP_CONCAT(vt1.c1) END FROM rt1;SELECT DISTINCT (((((rt1.c2) ISNULL)))>=((CAST(vt1.c0 AS TEXT)))) FROM vt1, vt0, rt1 WHERE ((+ (((((NULL)AND(0.02288629508437523)))OR(NULL))))) GROUP BY (((((((((- (rt1.c0)))OR((((rt1.c4, vt1.c2, rt1.c2))>((rt1.c0, rt1.c3, vt1.c1))))))AND(((vt1.c0) NOT NULL))))AND(((rt1.c1)LIKE(NULL)))))OR(((((vt1.c0)OR(rt1.c0)))AND(rt1.c2)))); -- 1ms;
SELECT (- (CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT ALL COUNT(json_insert(vt0.c0, rt1.c2, rt1.c2, vt1.c1, vt0.c0)), vt1.c2, (~ (((((rt1.c0)AND(vt1.c2)))OR(vt0.c0)))) FROM vt0 WHERE (TYPEOF((~ (1938992126))));SELECT ALL ((((vt1.c1)/(rt1.c4))) IS TRUE) FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt1 WHERE ((('1535626236') NOT BETWEEN (NULL) AND (1.183093762E9)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((x'')AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c4)&(vt1.c2)))) FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT (((('-1535152127')AND(((((rt1.c3)AND(vt1.c1)))AND(vt0.c0)))))AND(((vt1.c2) BETWEEN (vt1.c0) AND (rt1.c1)))), (~ (((rt1.c0)GLOB(rt1.c1)))), rt1.c3 FROM rt1;SELECT ALL UPPER(DISTINCT ((rt1.c1) IS TRUE)) FROM rt1, vt1, vt0 WHERE (CAST(CASE WHEN '8S0쥚^)<?' THEN x'' END AS REAL)); -- 0ms;
SELECT DISTINCT ((((((0.36508648720844683) NOT NULL))OR(((x'1f3b') NOT BETWEEN (rt1.c3) AND (rt1.c4)))))AND(CASE WHEN vt1.c1 THEN rt1.c4 WHEN rt1.c1 THEN x'd481' WHEN NULL THEN rt1.c0 END)) FROM vt0, rt1 WHERE (((((NULL) ISNULL)) IS TRUE));SELECT ALL CAST(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)) AS REAL) FROM vt0 WHERE (('-907455174' COLLATE NOCASE IN ('4,' COLLATE NOCASE)));SELECT DISTINCT (((CAST(rt1.c3 AS BLOB), ((vt0.c0) NOT BETWEEN (rt1.c1) AND (vt1.c1)), vt1.c1))>=((((rt1.c2)=(0.14508364904514637)), rt1.c0 COLLATE NOCASE, 'EJf'))), COUNT(UNLIKELY(DISTINCT vt0.c0)) OVER (), rt1.c3 FROM rt1 WHERE (CASE WHEN (('1105121309')<(x'6465')) THEN ((('944330477'))>=((0.3394894520837036))) WHEN (('716684967') NOT BETWEEN (x'') AND ('-1722347234')) THEN (('-1241705871') NOT BETWEEN (NULL) AND ('rt')) WHEN -7.79092148E8 COLLATE RTRIM THEN HEX('1291648094') ELSE NULL COLLATE BINARY END) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((rt1.c1) ISNULL) ELSE NULL END  NULLS FIRST;SELECT ALL ((TRIM(vt1.c2)) BETWEEN (COUNT(vt1.c1)) AND (json_valid(rt1.c0))) FROM vt1;SELECT DISTINCT ((((0.24962254275069917)AND((rt1.c2 IN ()))))AND(0.6121098848577446)), (- (((((rt1.c1)AND(rt1.c2)))AND(vt1.c0)))), (((CAST(rt1.c2 AS REAL)))>=((-8813462.0 COLLATE BINARY))) FROM vt1 WHERE (((CASE x''  WHEN 0.9351814399076904 THEN -5.61141808E8 END) ISNULL)) ORDER BY (+ (CAST(rt1.c3 AS TEXT)));SELECT DISTINCT rt1.c4 FROM vt0, rt1; -- 0ms;
SELECT FIRST_VALUE(((vt1.c0)<<(vt1.c1)) COLLATE RTRIM) OVER () FROM vt1, vt0 LIMIT 1233618382; -- 0ms;
SELECT (((((((((rt1.c3 IN ()))OR(((vt0.c0) NOTNULL))))AND((NOT (vt1.c2)))))AND('1658538778')))OR((((rt1.c4))<=((rt1.c1))))) FROM vt0 WHERE (CAST(((x'')<(0x262bd56d)) AS INTEGER));SELECT 0.8555699821450059, (((((~ ('<⛖U&g')))AND('hR')))OR(((rt1.c2)LIKE(rt1.c4)))), (+ (CHAR(rt1.c4, vt0.c0, vt1.c0))) FROM vt1;SELECT (((vt1.c2)) BETWEEN ((vt1.c2)) AND ((rt1.c3))) COLLATE BINARY, ((rt1.c3 COLLATE NOCASE) NOT NULL), ((((((((CAST(rt1.c1 AS TEXT))AND('lk')))OR(((rt1.c2) NOTNULL))))AND(((rt1.c4) BETWEEN (vt1.c0) AND (rt1.c3)))))OR((((vt0.c0)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))) FROM rt1, vt1, vt0; -- 1ms;
SELECT ALL (vt1.c0 IN ()) COLLATE NOCASE FROM rt1 GROUP BY ((((((vt1.c0)>=(vt1.c0)))AND(rt1.c1)))AND('')) HAVING ((((rt1.c1)&(rt1.c0)))*(AVG(rt1.c2)));SELECT ((((((NULL)AND(rt1.c3)))OR(vt1.c1)))GLOB(((vt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c4)))), '0.5690439672529624', (((rt1.c4 IN ()))+(((vt0.c0)||(vt1.c0)))) FROM vt0, vt1, rt1 WHERE ((NOT ((NULL IN ('-971665441', 0xffffffffd2e5f4f5))))); -- 0ms;
SELECT rt1.c0 FROM vt0, vt1, rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS TEXT)) IS TRUE) FROM vt0, rt1, vt1 WHERE ((CAST(0.3117342676283238 AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT (((((vt1.c1, rt1.c1, vt1.c0, rt1.c4, rt1.c3)) NOT BETWEEN ((rt1.c1, vt1.c1, vt1.c0, rt1.c0, rt1.c2)) AND ((vt1.c2, vt1.c2, rt1.c3, rt1.c0, rt1.c3)))) ISNULL) FROM vt1, vt0 WHERE (CAST('-1812406193' COLLATE NOCASE AS TEXT));SELECT SUM(CAST(vt1.c2 AS REAL)) FROM rt1, vt1, vt0 WHERE (((CASE NULL  WHEN x'' THEN x'' WHEN NULL THEN 323302752 WHEN '0.02656063461990532' THEN NULL ELSE x'' END) NOT BETWEEN (1741991907 COLLATE BINARY) AND (('1329777631' IN ())))) LIMIT -1310922203 OFFSET 2129371680; -- 1ms;
SELECT DISTINCT NTILE(LIKE(((rt1.c1) NOT NULL), (rt1.c1 IN ()))) OVER ( ORDER BY (((rt1.c4) IS FALSE) IN (((rt1.c4)*(rt1.c1)), PRINTF(rt1.c0))), (((((rt1.c2)||(rt1.c1))))>((((vt1.c1) BETWEEN (rt1.c3) AND (vt1.c0))))), (((rt1.c0)<>(NULL)) IN (((vt1.c0)AND(rt1.c2)), (rt1.c2 IN ())))), LIKELIHOOD(x'', 0.6888963574777005), ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt1, rt1, vt0 WHERE ((((((((((((-880337623)AND(x'')))AND(NULL)))OR(x'')))AND(0.9253145646277773)), CAST(x'' AS REAL), ((NULL)<>(''))))<=((((NULL) NOTNULL), TRIM(DISTINCT 0xffffffff9d880130, 'gr'), ((0.33443367211897657) NOT NULL))))); -- 0ms;
SELECT (~ ((-1.637162092E9 IN ()))) FROM vt0, vt1, rt1 WHERE ('wfPhmf'); -- 0ms;
SELECT ALL (((rt1.c0)GLOB(rt1.c2)) IN ((((rt1.c1))<>(('0.5222435055040748'))), ((rt1.c4)>(rt1.c0)))) FROM vt1, rt1 WHERE (NULLIF(NULL, CASE WHEN NULL THEN NULL END)); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((~ (((('1247123424', '', '2117289109'))==((x'', NULL, x'bc17')))))) LIMIT -847196279; -- 1ms;
SELECT DISTINCT (((vt1.c2)) BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((MAX(rt1.c1)))), (((((((rt1.c0)) BETWEEN ((rt1.c4)) AND ((vt1.c1))))AND(0.8681809060522379)))AND(((rt1.c4)%(rt1.c3)))), ((((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c2)))))>((UNICODE(rt1.c2)))) FROM vt0, vt1, rt1 WHERE (CAST((((NULL, '1725220916', '69231626')) BETWEEN ((x'eecf', -4.25246831E8, '(D')) AND (('0.04301962787115288', 0.19649764320399354, NULL))) AS NUMERIC)) LIMIT -1856342307 OFFSET 1367608446; -- 0ms;
SELECT rt1.c4 FROM vt1, vt0;SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, vt1 WHERE (((TIME(0.8620212652086835, 'iv', NULL, x'', 8.02506931E8))<<(NULL))) ORDER BY LIKELIHOOD(CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 ELSE '+3' END, 0.02608744891074355)  NULLS FIRST;SELECT DISTINCT rt1.c4, CASE ((rt1.c3) IS TRUE)  WHEN vt1.c1 COLLATE BINARY THEN CAST(vt1.c2 AS BLOB) ELSE AVG(vt1.c2) END, ((((((((CASE WHEN vt1.c2 THEN vt1.c0 END)AND(rt1.c1)))OR(vt1.c0)))OR(CASE WHEN NULL THEN rt1.c3 END)))AND(AVG(vt1.c1))) FROM vt1, vt0, rt1 WHERE ((((((((((0x2421e4c IN ()))OR(((((((((0.4732021020435232)OR(0x3ab1593d)))OR(858186908)))AND('-13238641')))AND(NULL)))))AND(0x720f7f83)))AND((+ (0Xffffffff8f65bdd0)))))AND((('1381316313') NOT NULL)))); -- 1ms;
SELECT ALL CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) FROM vt1 WHERE (((((((((((NULL)AND(9.75922615E8)))OR(((0.18974030883862325)+(1.415757441E9)))))OR('V\n\r?㛙')))AND(DATE('1432433714', x'', x''))))AND(x'' COLLATE BINARY)));SELECT ALL ((CASE WHEN vt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c2 END)&(((((rt1.c0)OR(vt1.c2)))OR(vt1.c1)))) FROM vt1 ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN x'118c' COLLATE BINARY ELSE (+ (rt1.c1)) END  NULLS FIRST;SELECT DISTINCT MAX(CAST(vt0.c0 AS INTEGER)) FROM vt0 WHERE (0.2884815882341897); -- 0ms;
SELECT ((0.2273075890841253)&(UNICODE(vt0.c0))) FROM rt1, vt0, vt1 LIMIT 84847331; -- 0ms;
SELECT DISTINCT MIN((- (rt1.c1))) FROM rt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(x'') OVER (), rt1.c2, (((0.4793811712551431) IS FALSE) IN ()) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((CAST(rt1.c0 AS NUMERIC))AND(rt1.c0)))OR(CASE NULL  WHEN vt0.c0 THEN vt1.c0 END)) WHERE (CASE ((((0.0793104384244322)OR(x'')))OR(NULL))  WHEN ((x'') NOT BETWEEN (x'') AND ('-244347943')) THEN (+ (NULL)) END);SELECT ALL TRIM(SUM(vt0.c0), CAST(rt1.c2 AS INTEGER)) FROM rt1, vt1, vt0 WHERE (NULLIF(((((((((x'')OR(NULL)))AND(NULL)))OR(0.6421826394248207)))AND(0.48333929966540357)), ((0.921324700642624)%('0.16473805746078196')))); -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (rt1.c4) AND (vt1.c2)))LIKE(CASE WHEN rt1.c2 THEN vt1.c1 WHEN rt1.c3 THEN vt1.c1 WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c1 END)), (((((((((((vt1.c0)AND(rt1.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(rt1.c1))))=((GROUP_CONCAT(rt1.c0)))), CHANGES() FROM vt1, rt1 WHERE (((((x'c4d1')>=(x'3cff')))<=(JULIANDAY('', 'N', 0Xffffffffb3eef8a0, NULL, 0xffffffffccb267cf, x'', NULL)))) ORDER BY ((CASE rt1.c2  WHEN vt1.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c3 THEN x'18ac5d1a' WHEN rt1.c2 THEN vt1.c2 ELSE rt1.c1 END)OR(vt1.c1))  NULLS LAST, '571125518'  NULLS FIRST;SELECT DISTINCT ((x'')AND(JULIANDAY(vt0.c0, rt1.c1, vt1.c1, vt0.c0, vt0.c0))) FROM vt1, rt1, vt0 WHERE (TRIM(DISTINCT (+ (x'')), ((-8.51812136E8) NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
SELECT ((((((rt1.c0)AND(vt0.c0)))AND(rt1.c1))) IS TRUE) FROM rt1 WHERE ((((((707240400)-(x''))))==((('' IN ())))));SELECT PERCENT_RANK() OVER (), COUNT(((rt1.c4)||(vt1.c1))), (((((+ (vt0.c0)))AND(COUNT(*))))OR(NULL)), ((- (vt0.c0)) IN ()), ((((vt1.c0)=(vt1.c1)))AND((- (rt1.c3)))) FROM vt1, rt1, vt0; -- 0ms;
SELECT ALL rt1.c2 FROM vt0, rt1; -- 1ms;
SELECT DISTINCT ((((((((((vt1.c2)+(vt1.c1)))AND(CAST(rt1.c0 AS NUMERIC))))AND(CAST(rt1.c1 AS REAL))))AND(vt1.c0 COLLATE RTRIM)))OR((NOT (rt1.c1)))) FROM rt1, vt0 WHERE (((((0.6274178249416331) NOTNULL)) BETWEEN ((- (x''))) AND (x'3c045377' COLLATE BINARY)));SELECT ((CASE WHEN vt0.c0 THEN rt1.c3 ELSE vt1.c2 END) NOT BETWEEN (((((((((rt1.c3)OR(vt1.c2)))OR('}L痌01aOdz')))OR(rt1.c1)))OR(NULL))) AND (MIN(vt1.c2))), ((((rt1.c0) NOT NULL)) BETWEEN ((NOT (vt1.c2))) AND (LIKE(vt1.c0, rt1.c1))), ((((vt0.c0)+(vt1.c1))) IS FALSE) FROM vt0, vt1, rt1 WHERE ((((NULL IN (0.680461153192668)))<=(CASE NULL  WHEN -1928739055 THEN NULL ELSE '' END))); -- 0ms;
SELECT DISTINCT MAX(rt1.c2) FROM rt1, vt1, vt0 WHERE (CAST(0.25108448817265194 COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT TOTAL(CASE rt1.c2  WHEN rt1.c4 THEN vt1.c1 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c4 THEN vt1.c1 END) FROM vt0, rt1;SELECT ALL (~ (CAST(vt1.c0 AS INTEGER))), MAX(((vt1.c0)+(rt1.c1))), ((vt1.c1)GLOB(((((vt1.c2)AND(rt1.c3)))OR(rt1.c3)))) FROM vt0;SELECT DISTINCT (((rt1.c1)<=(x'')) IN ()) FROM vt0, vt1; -- 0ms;
SELECT ALL SUM(((vt1.c0) NOT NULL)) FROM vt1, vt0; -- 1ms;
SELECT ALL CAST(((x'') IS TRUE) AS REAL) FROM vt0 WHERE ((((('-436802885') NOT BETWEEN (NULL) AND (NULL))) BETWEEN (((NULL)*(NULL))) AND (((('975922615', 0.6501084665335072, 0.8906276614083728))<((0.10521897843313077, -29227403, '698498598')))))) LIMIT 802506931; -- 0ms;
SELECT DISTINCT CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c2)) AS REAL) FROM vt1, vt0 WHERE (CASE WHEN CASE '-233283651'  WHEN NULL THEN 0xffffffffe5d27d23 END THEN (NOT (NULL)) WHEN '978459370' COLLATE NOCASE THEN ((((x'd4d6')OR(0.8056882772699413)))OR('-1685772586')) WHEN ((x'f868')GLOB(NULL)) THEN (('SPdguU<')|(NULL)) ELSE (~ (x'b15e')) END);SELECT ALL ((((((((CAST(rt1.c0 AS BLOB))OR(((vt0.c0) BETWEEN (rt1.c3) AND (rt1.c4)))))AND(((rt1.c1)>=(rt1.c0)))))AND(rt1.c4 COLLATE RTRIM)))OR(RTRIM(vt1.c2))) FROM vt1, rt1;SELECT ALL ((rt1.c2 IN ()) IN ()) FROM rt1, vt1 NOT INDEXED WHERE (x''); -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((0.7577359666062752)) AND ((CAST(rt1.c2 AS NUMERIC)))) FROM vt0, vt1, rt1 ORDER BY ((rt1.c0)>>((((rt1.c3))>=((rt1.c1)))))  NULLS LAST, ((((rt1.c3) NOT NULL))>=(((rt1.c2) IS TRUE))); -- 1ms;
SELECT ALL ((((vt1.c0)>>(vt0.c0))) IS TRUE) FROM rt1 WHERE ((+ ((('䦂ii') NOT BETWEEN (x'') AND ('')))));SELECT DISTINCT CASE WHEN ((((vt1.c0)AND(0.21124342691063203)))AND(rt1.c1)) THEN vt1.c0 COLLATE RTRIM ELSE ((((vt0.c0)AND(vt1.c2)))AND(NULL)) END FROM vt1;SELECT DISTINCT (rtreenode(NULL, vt1.c2) IN ()) FROM vt0, vt1, rt1 WHERE (CASE (('')<<(0X3a0bbc9))  WHEN ('69231626' IN (0.7647980884492225, NULL)) THEN ((((((((NULL)AND(-1.49970549E9)))OR(0.3879254812379539)))AND(0x64afcb9c)))AND(0.6552923550089533)) WHEN CAST('' AS TEXT) THEN ((x'e100')<<('')) WHEN ((((x'')AND(0.7245148539157464)))AND('rt')) THEN HEX('+W⛖') END); -- 0ms;
SELECT ALL (+ (rt1.c3 COLLATE RTRIM)) FROM vt1, vt0;SELECT DISTINCT TOTAL(((rt1.c0) IS FALSE)), (((((rt1.c3))>((vt1.c1)))) ISNULL), CASE WHEN (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c1))) THEN vt1.c1 END FROM vt0, rt1, vt1 WHERE (((CASE NULL  WHEN x'a8a9' THEN x'' END) ISNULL)) GROUP BY ((((vt1.c2)IS(vt1.c2)))&((NOT (rt1.c0)))); -- 7ms;
SELECT AVG((rt1.c4 IN ())) FROM vt0, vt1, rt1 WHERE ((((- (NULL)))>>(((NULL)>=(x''))))) LIMIT -1770953129; -- 0ms;
SELECT rt1.c3 FROM vt1, rt1 WHERE (((x'')==(CASE 0.7051363541423888  WHEN '-1616788125' THEN NULL WHEN 'F\LH' THEN 0x3f4aceba WHEN NULL THEN NULL ELSE -828144790 END))) ORDER BY rt1.c0 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), NTILE((- (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c4 END))) OVER (), COUNT(*) COLLATE NOCASE FROM rt1, vt1;SELECT (((rt1.c2, vt1.c0, rt1.c3)) NOT BETWEEN ((x'', (((rt1.c4, vt0.c0, rt1.c0))>((rt1.c3, rt1.c4, vt1.c2))), '-306279240')) AND (((((rt1.c1))=((rt1.c0))), vt1.c2, ((rt1.c0)==(rt1.c4))))), ((NULL) NOT NULL), ((((vt1.c2) BETWEEN (rt1.c4) AND (vt0.c0))) IS FALSE) FROM vt1, rt1 WHERE (RTRIM(('n}[6Q⅓O' IN ())));SELECT DISTINCT FIRST_VALUE(CAST(((rt1.c0)IS NOT('-723094240')) AS INTEGER)) OVER (), ((((((((((((rt1.c4)AND((rt1.c2 IN ()))))AND(vt1.c2 COLLATE RTRIM)))OR('n}[6Q⅓O')))OR(CASE rt1.c1  WHEN vt1.c2 THEN rt1.c4 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN rt1.c3 END)))OR(CASE WHEN rt1.c1 THEN NULL ELSE rt1.c3 END)))OR((((vt1.c0, rt1.c4, vt1.c1)) BETWEEN ((rt1.c2, rt1.c4, vt1.c2)) AND ((x'59eb', vt1.c0, vt1.c0))))), '-907455174' FROM rt1, vt0 WHERE (((((0.012970513674949058) IS TRUE))LIKE(((0.14508364904514637)=(0.47839231110520497))))) GROUP BY (((((vt1.c0 IN ()))AND(PRINTF(rt1.c0))))OR(((rt1.c1) ISNULL))), (((('0.921324700642624')<(rt1.c2))) NOT NULL), (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((((rt1.c3)>>(rt1.c1))))) HAVING (((((NULL)==(rt1.c1)), ((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c4)))AND(vt1.c1)))AND(rt1.c0)), CASE vt1.c0  WHEN rt1.c4 THEN rt1.c1 END))>((COUNT(rt1.c3), (~ (rt1.c0)), (vt0.c0 IN ()))));SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((+ ((x'' IN (0X2bf5dad2, 1.839708615E9))))); -- 0ms;
SELECT DISTINCT '!ṟ', CASE WHEN TOTAL(vt1.c0) THEN CAST(vt1.c0 AS INTEGER) ELSE TOTAL(vt1.c0) END, (((('1839708615')OR(CASE rt1.c3  WHEN rt1.c3 THEN vt1.c1 ELSE rt1.c4 END)))AND(COUNT('}A'))) FROM vt0 WHERE (((LIKELIHOOD(NULL, 0.3408563251034722)) NOT BETWEEN (((('sFCcmm9gz')) BETWEEN (('0.2578189389619159')) AND ((NULL)))) AND ((((0.20008922444487076)) NOT BETWEEN ((0X46849402)) AND ((NULL))))));SELECT (((NOT (vt0.c0)))/(((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'464c')))) FROM rt1, vt0, vt1 WHERE (((('1951518262' COLLATE BINARY))=(((+ (x'')))))); -- 0ms;
SELECT IFNULL(DISTINCT CAST(rt1.c1 AS NUMERIC), rt1.c0 COLLATE BINARY), ((((vt1.c1)|(rt1.c0))) ISNULL), LOWER(DISTINCT ((((vt1.c1)AND(943939685)))AND(rt1.c0))) FROM vt0, rt1, vt1 WHERE ((((((('-1014806142')-(NULL)))AND((+ ('707240400')))))AND(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1, vt0, vt1 LIMIT 954740048 OFFSET -775722688; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN (vt1.c2, vt0.c0)))>=(LOWER(vt1.c0))) FROM vt1, vt0, rt1 WHERE (((0.5326818813736575)<=(NULL)) COLLATE BINARY) GROUP BY CASE WHEN ((rt1.c0)>=(rt1.c0)) THEN ((rt1.c2) IS FALSE) ELSE CASE WHEN vt1.c0 THEN rt1.c2 ELSE rt1.c3 END END HAVING (((((x'')OR(vt1.c1)))OR(vt1.c0)) IN ((~ (rt1.c4)))); -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1, rt1, vt0 WHERE (((IFNULL(x'', 0.30717661943214325)) IS TRUE)); -- 1ms;
SELECT PERCENT_RANK() OVER ( ORDER BY ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 ELSE vt1.c1 END) NOT BETWEEN (rt1.c0) AND (((rt1.c1) NOT NULL)))  NULLS LAST, NULL ASC  NULLS LAST, CAST(((rt1.c0) NOT BETWEEN (rt1.c4) AND (vt1.c1)) AS INTEGER)) FROM vt0 WHERE (((('-824387580' IN ()))*(((x'83f6')<('713787198'))))) LIMIT -988128956;SELECT ((((rt1.c3 COLLATE BINARY)OR(CAST(rt1.c0 AS TEXT))))OR('1415757441')), MAX(vt1.c1), MIN((- ('k'))) FROM vt0, vt1;SELECT TOTAL((((vt1.c2))==((rt1.c0))) COLLATE NOCASE) FROM vt0;SELECT DISTINCT CAST(((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1)) AS NUMERIC), ((CAST(rt1.c0 AS NUMERIC)) BETWEEN ((+ (vt1.c2))) AND ('649861148')), (((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ()) FROM vt1 WHERE (((((x'24e2') NOTNULL)) NOTNULL));SELECT ALL ((CASE rt1.c0  WHEN vt1.c1 THEN vt1.c2 ELSE rt1.c2 END) NOT NULL), CASE WHEN MIN(rt1.c4) THEN CAST(rt1.c4 AS INTEGER) END, ROW_NUMBER() OVER () FROM vt1, vt0 GROUP BY vt1.c0;SELECT ALL AVG(NULL) FROM vt1, rt1; -- 0ms;
SELECT ALL ((((vt1.c2) IS TRUE))>>(COALESCE(DISTINCT rt1.c2, rt1.c0))), GROUP_CONCAT((('379668201')&(rt1.c1))), ((((NOT (rt1.c1))))!=((((rt1.c1)*(vt1.c1))))), CAST((('NVꜼbt''') BETWEEN (vt0.c0) AND (vt1.c2)) AS NUMERIC), ((rt1.c0)|(rt1.c0)) COLLATE BINARY COLLATE RTRIM FROM vt1, vt0, rt1 WHERE (((((NULL) IS FALSE)) BETWEEN ((0.2865862924008208 IN ())) AND (2.553401016732737E-4))) ORDER BY COALESCE(vt1.c0, (vt1.c1 IN (rt1.c1)))  NULLS LAST LIMIT -1050512567 OFFSET -1500634023; -- 1ms;
SELECT CAST(CAST(rt1.c2 AS INTEGER) AS BLOB), CASE ((NULL)<<(vt1.c1))  WHEN NULL THEN (vt1.c0 IN (rt1.c3)) ELSE ((((rt1.c2)AND(rt1.c1)))AND(vt1.c1)) END, '0.9351814399076904' FROM vt0, rt1, vt1 WHERE (IFNULL(((NULL) BETWEEN (NULL) AND ('(0AP')), ((((((((0.7903924619537444)OR('-84888491')))AND(0.41869473272947455)))AND(x'cb839ed2')))AND(0x1a5e94ba)))); -- 0ms;
SELECT ALL NULL FROM rt1, vt0, vt1; -- 0ms;
SELECT DISTINCT SUBSTR(rt1.c3, vt0.c0 COLLATE RTRIM), (((+ (rt1.c2))) IS TRUE), ((CAST(vt1.c2 AS INTEGER)) NOT BETWEEN (0X506fe494) AND (((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c4)))) FROM rt1, vt1;SELECT DISTINCT FIRST_VALUE((~ (vt1.c1)) COLLATE RTRIM) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (((CAST(rt1.c2 AS TEXT)))<(((NOT (rt1.c1))))) FROM vt0 WHERE ((((x'0e02' IN ())) IS FALSE));SELECT DISTINCT COUNT(((((rt1.c4)OR(vt0.c0)))OR(0.4217931389899915))) FROM vt1, vt0, rt1; -- 0ms;
SELECT ((load_extension(rt1.c0, rt1.c4)) BETWEEN (vt1.c2 COLLATE BINARY) AND ('579586396')) FROM vt1 ORDER BY ((((CAST(rt1.c4 AS NUMERIC))AND((NOT (rt1.c1)))))OR((((0x4086805e, vt0.c0, rt1.c4)) NOT BETWEEN ((rt1.c1, rt1.c0, vt1.c2)) AND ((rt1.c0, rt1.c3, rt1.c4))))) DESC;SELECT (+ ((vt1.c0 IN ()))), ((((rt1.c2) IS TRUE)) IS FALSE), (((~ (rt1.c1))) BETWEEN ((NOT (vt1.c0))) AND (vt0.c0 COLLATE BINARY)) FROM vt1, vt0;SELECT ((((rt1.c4)<=(rt1.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0)))) AND ((((vt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))))), ((((((((((rt1.c1) IS TRUE))OR(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))AND(((vt1.c0) BETWEEN (NULL) AND (vt1.c1)))))OR((('1191932974')+(vt1.c2)))))AND(rt1.c2)), CAST(rt1.c3 AS NUMERIC) FROM vt0, rt1 WHERE (CAST(UPPER(DISTINCT NULL) AS BLOB));SELECT DISTINCT CAST(CAST(0.6518323127566564 AS TEXT) AS INTEGER) FROM rt1, vt1 WHERE (CASE LIKE(x'', x'7aa7')  WHEN (- ('-1016164570')) THEN 0Xfffffffff5913f28 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT CASE ((rt1.c0)||(vt1.c2))  WHEN ((((((((((((vt1.c1)AND(vt1.c1)))AND(rt1.c2)))OR('157827478')))AND(vt0.c0)))AND(rt1.c2)))OR(vt0.c0)) THEN ((((vt1.c2)OR(vt1.c2)))AND(vt1.c2)) ELSE (- (vt1.c0)) END, HEX(rt1.c0) COLLATE NOCASE, LIKELY(DISTINCT vt0.c0) FROM rt1, vt0, vt1 WHERE ((('0.8289624832459574') NOT BETWEEN (CASE x'89d9'  WHEN 0.0680367797556154 THEN NULL WHEN '-318282591' THEN '8_' WHEN '0.9110776850859188' THEN NULL END) AND ((('Jy姕ꆹK ') IS FALSE)))) GROUP BY ((vt1.c1 COLLATE BINARY) IS TRUE) HAVING COUNT(((vt0.c0)IS NOT(rt1.c1))); -- 1ms;
SELECT DISTINCT (~ ((- (rt1.c1)))) FROM vt1 WHERE (CASE ((0.20273481637616153)!=(''))  WHEN CAST('l\' AS BLOB) THEN ((7.90965886E8) NOT BETWEEN (-19600507) AND ('s')) END);SELECT DISTINCT CAST(((vt1.c2)&(vt1.c1)) AS BLOB) FROM vt1 WHERE (((((x'')/(1249180011)))+(((-1421970919) NOT BETWEEN (0.10024192772077123) AND ('1191932974'))))); -- 0ms;
SELECT ((((((x'')AND(vt1.c0)))OR(-1738983614)))LIKE((((vt1.c1, vt0.c0, rt1.c1))<>((vt1.c2, rt1.c1, vt0.c0))))) FROM vt1, rt1, vt0 WHERE (CASE CAST('1437549081' AS REAL)  WHEN ((NULL) BETWEEN ('124364581') AND ('480906640')) THEN CAST(0.1649113603283351 AS REAL) WHEN ((-0.0)+(NULL)) THEN (('')%(NULL)) WHEN (('-1680955926') ISNULL) THEN (('0.4169877333299522') IS TRUE) ELSE ((0.49136329189827577) BETWEEN ('-1499705490') AND ('-257769541')) END); -- 0ms;
SELECT ALL NULLIF((('492045417') NOT BETWEEN (vt1.c0) AND (vt1.c2)), (((vt1.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) FROM vt0, rt1, vt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS TEXT))<<(vt1.c1)) FROM vt1 WHERE (((((((((((((x'4ecf')AND('')))OR('1381316313')))AND(0.8133543465319601)))AND(0.2612299405194156)))AND(CAST(x'' AS NUMERIC))))OR(((NULL)>>(x'')))));SELECT ALL AVG(((rt1.c4)GLOB(0.38513146073959714))) OVER ( ORDER BY (((((((vt1.c1))=((rt1.c1))))AND(((rt1.c0) IS FALSE))))AND((+ (rt1.c2))))  NULLS LAST, ((CASE WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN vt1.c2 ELSE rt1.c3 END) NOTNULL) ASC, ((((vt0.c0)OR(vt1.c1)))OR(rt1.c1)) COLLATE NOCASE) FROM vt0 WHERE (x'');SELECT DISTINCT (- (rt1.c1)) FROM vt0, vt1, rt1 WHERE (x''); -- 0ms;
SELECT ABS(CAST(rt1.c4 AS BLOB)) FROM vt0, rt1; -- 0ms;
SELECT ALL UPPER(vt1.c2 COLLATE BINARY) FROM vt0, rt1, vt1 GROUP BY (('A-xB-%')||(((vt0.c0)%(NULL)))); -- 0ms;
SELECT ALL rt1.c4 FROM vt1, vt0 WHERE (NULLIF(DISTINCT (0.6649143552351952 IN (NULL)), (NULL IN ())));SELECT ALL LEAD(CASE ((vt1.c2)LIKE(vt1.c0))  WHEN LIKELY(vt1.c0) THEN ((vt1.c1)LIKE(vt1.c2)) WHEN ((vt1.c1)-(vt1.c1)) THEN ((vt1.c1) NOTNULL) WHEN ((vt1.c1)<=(vt1.c0)) THEN vt1.c1 WHEN (+ (vt1.c2)) THEN (((vt1.c1)) NOT BETWEEN (('{#FJ')) AND (('490682692'))) WHEN ((NULL)/(vt1.c2)) THEN 1460853752 END, vt1.c0, ((x'')=((((vt1.c0))=((vt1.c0)))))) OVER () FROM vt1 WHERE (CASE ((((0xffffffffaf614efa)AND('-218051973')))OR('1437549081'))  WHEN CASE '么k擠>z~'  WHEN x'' THEN x'' END THEN (((x'')) NOT BETWEEN ((0.662852906208504)) AND ((0.4541966549819245))) WHEN ((((((((1.291648094E9)OR(0.07741888078797532)))AND(x'')))OR('QLm0n!K[')))OR('790965886')) THEN CASE WHEN -735034035 THEN x'b7a4' END WHEN ((0.9542622698409802)AND('''I')) THEN ((NULL) NOT NULL) END) LIMIT -971665441 OFFSET 667230547; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))AND('B')))AND(((((rt1.c0)OR(rt1.c3)))AND(vt1.c1)))))OR(x'cf13')))OR(rt1.c3 COLLATE BINARY)) FROM vt1, vt0 EXCEPT SELECT ALL ((((rt1.c2)IS NOT('L	')))IS(NULL)) FROM vt0, rt1;SELECT DISTINCT COUNT(*) FROM vt0 WHERE ((NOT (CASE x''  WHEN x'5973' THEN '-779092148' ELSE NULL END))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT('1882251648' COLLATE RTRIM), CASE WHEN (rt1.c2 IN ()) THEN CASE vt0.c0  WHEN vt1.c0 THEN rt1.c0 ELSE vt1.c0 END END, (((0.09330976033523375))<((((rt1.c4)LIKE(rt1.c0))))) FROM vt1, vt0, rt1 WHERE (((NULL) ISNULL)) GROUP BY CAST(vt1.c2 COLLATE RTRIM AS REAL) HAVING CASE WHEN ((vt1.c1)-(rt1.c3)) THEN x'03a9' WHEN (((vt1.c2)) BETWEEN ((rt1.c0)) AND (('8S0쥚^)<?'))) THEN (((rt1.c0))>=((rt1.c0))) WHEN CASE WHEN rt1.c1 THEN rt1.c4 END THEN 0.012368619776063183 ELSE (((vt1.c0))==((rt1.c2))) END; -- 2ms;
SELECT DISTINCT TOTAL(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c0))), ((rt1.c0)-((NULL IN (vt1.c0)))), CAST((((rt1.c1)) NOT BETWEEN ((137108975)) AND ((rt1.c1))) AS NUMERIC) FROM vt1, vt0;SELECT ALL (NOT (((vt1.c0) NOT NULL))) FROM rt1, vt1, vt0; -- 0ms;
SELECT ((vt1.c0 COLLATE NOCASE) ISNULL) FROM vt1, vt0 WHERE (x''); -- 0ms;
SELECT x'', ((((((((SUBSTR(vt1.c0, vt1.c2))OR((rt1.c3 IN ()))))AND((((vt1.c0, vt1.c0, vt1.c0))>((rt1.c1, x'', rt1.c2))))))AND((('')=(vt1.c0)))))AND((((rt1.c1, rt1.c0, rt1.c4))!=((rt1.c0, rt1.c1, vt1.c0))))), ((0.8268860361332635)%(x'')) FROM vt0, rt1 WHERE (CASE (((0.9602431970839221, x'', '\n{斩 !H')) NOT BETWEEN ((NULL, '', '790965886')) AND ((NULL, '0.2667027161940383', 0.3381454311637342)))  WHEN CASE '\n'  WHEN x'f6bb' THEN 0.8243079159301472 WHEN 0.38462741786280386 THEN NULL WHEN '-986319684' THEN NULL END THEN CASE WHEN 'v9d' THEN '-849937188' WHEN 0.05364243736511942 THEN '782601954' WHEN 0.7245148539157464 THEN '-2' ELSE x'08ae' END WHEN 0.8605882645818861 THEN json_quote('3ඐ.M힟cd~') WHEN CASE WHEN 0.2770527379370975 THEN x'' END THEN LIKELY(DISTINCT x'') ELSE ('撡u' IN (NULL, NULL)) END) GROUP BY (((x'', vt0.c0, vt0.c0)) NOT BETWEEN ((((rt1.c0)<(rt1.c1)), ((rt1.c1)LIKE(rt1.c4)), 'v㯣w|O[j')) AND ((((vt1.c0)IS NOT(rt1.c3)), ((rt1.c3) NOTNULL), ((vt0.c0) IS FALSE))));SELECT ALL GROUP_CONCAT(((rt1.c2)*(rt1.c4))) OVER ( GROUPS BETWEEN '' PRECEDING AND NULL COLLATE NOCASE FOLLOWING EXCLUDE NO OTHERS), CAST(((vt1.c0)>=(rt1.c0)) AS REAL), rt1.c2 FROM vt0, vt1, rt1 WHERE (((((CAST('1249180011' AS REAL))OR(CASE WHEN NULL THEN 0.13423998991050778 ELSE '116218409' END)))OR((('o ')<(x'')))));SELECT ALL CASE CAST(rt1.c0 AS INTEGER)  WHEN ((((vt1.c1)AND(rt1.c2)))AND(rt1.c4)) THEN (rt1.c3 IN ()) WHEN ((vt1.c1)GLOB(vt0.c0)) THEN (rt1.c4 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) THEN ((vt1.c1) BETWEEN (vt1.c2) AND (NULL)) ELSE (((rt1.c0, rt1.c3, rt1.c0)) BETWEEN ((rt1.c3, vt1.c1, vt1.c2)) AND ((rt1.c0, rt1.c1, rt1.c3))) END FROM vt0, vt1;SELECT DISTINCT rt1.c0 FROM rt1, vt0, vt1 WHERE ((NOT (-666543161 COLLATE NOCASE))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, vt1, rt1 ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC LIMIT 139987413; -- 1ms;
SELECT ALL x'' FROM rt1, vt0, vt1 ORDER BY ((((((((((((vt1.c0 COLLATE NOCASE)OR((((vt1.c0))>((vt1.c1))))))OR(CASE WHEN rt1.c2 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c0 THEN rt1.c4 END)))AND((rt1.c2 IN ('>%4I뷘xD')))))OR((((NULL)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c2))))))AND(CASE rt1.c0  WHEN vt0.c0 THEN 'W4L8' ELSE rt1.c2 END)))AND(-7.30945986E8))  NULLS FIRST; -- 1ms;
SELECT DISTINCT CAST(CAST(rt1.c3 AS REAL) AS NUMERIC) FROM vt1, rt1, vt0; -- 1ms;
SELECT DISTINCT ((rt1.c1)%(rt1.c2)) COLLATE RTRIM COLLATE NOCASE, TOTAL((((0.8395866446803136))>=(('')))) OVER ( ORDER BY CAST(vt1.c0 AS BLOB) COLLATE RTRIM  NULLS LAST), ((((CASE WHEN rt1.c4 THEN 'Z%惰''' END)OR((- (vt1.c0)))))AND(vt0.c0 COLLATE NOCASE)) FROM vt0, vt1, rt1 WHERE ((~ (((0.48699221722237984) NOT BETWEEN (NULL) AND ('-1471521237'))))); -- 0ms;
SELECT DISTINCT COUNT(((rt1.c1)&(rt1.c1))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), rt1.c0, SUM((((rt1.c3))!=((rt1.c1)))) OVER () FROM rt1, vt0, vt1 WHERE (((((((0X2a7caf2d)AND(0.8514041561234769)))AND('k-^V'))) NOT BETWEEN ((((x''))<((x'')))) AND ((- (x''))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c2 THEN rt1.c4 END)AND((((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND (('546845644'))))), ((((rt1.c3) NOT NULL))!=(vt1.c1 COLLATE BINARY)), ((vt1.c0) BETWEEN (SQLITE_SOURCE_ID()) AND (rt1.c0)) FROM vt0, rt1;SELECT DISTINCT TRIM(DISTINCT UNLIKELY(DISTINCT rt1.c1), (~ (vt1.c0))), GROUP_CONCAT(rt1.c1), ((CASE vt1.c2  WHEN rt1.c0 THEN rt1.c4 END)OR(((vt1.c1) IS TRUE))) FROM rt1;SELECT ((((((vt1.c2)AND(rt1.c2)))AND(rt1.c0))) BETWEEN (AVG(NULL)) AND (((rt1.c4) BETWEEN (rt1.c1) AND (0.2321001519877668)))), rt1.c0, ((LIKELY(rt1.c2)) NOT BETWEEN (((0.26568561132319557)==(rt1.c4))) AND ((1621455794 IN ()))) FROM vt0, vt1 WHERE (CASE WHEN '' COLLATE NOCASE THEN (x'' IN ()) WHEN QUOTE(NULL) THEN load_extension(NULL) WHEN CASE '-796005832'  WHEN 1.39987413E8 THEN NULL ELSE 0.8339231548323088 END THEN (((-184839040)) BETWEEN (('勍,zJ')) AND ((NULL))) END) ORDER BY 1381316313 DESC, ((((((((vt1.c2)OR(rt1.c4)))AND(rt1.c1)))AND(CASE vt1.c1  WHEN rt1.c1 THEN vt1.c1 END)))AND(((rt1.c4) ISNULL))) ASC;SELECT DISTINCT vt0.c0 FROM vt1, rt1, vt0; -- 1ms;
SELECT DISTINCT TOTAL(CAST(rt1.c3 AS TEXT)) OVER () FROM vt1, vt0 WHERE (CAST('-849937188' COLLATE RTRIM AS INTEGER));SELECT ALL GROUP_CONCAT(CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END) OVER () FROM vt1;SELECT DISTINCT (((((- (rt1.c0)))AND((vt1.c0 IN (vt0.c0)))))AND(((((vt1.c2)AND(rt1.c3)))OR(rt1.c1)))) FROM rt1 WHERE (CAST(x'' COLLATE BINARY AS NUMERIC));SELECT ALL ((rt1.c0 COLLATE RTRIM)|(SUM(x'fd70'))) FROM vt0 GROUP BY NULLIF(((x'') IS FALSE), CAST(rt1.c4 AS TEXT)), ((((((((((rt1.c3)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c2) IS FALSE)) AND (((vt1.c1)>>(vt1.c1)))), CAST(CASE WHEN rt1.c0 THEN rt1.c1 END AS BLOB) HAVING CASE WHEN ((rt1.c3)&(rt1.c4)) THEN (+ (rt1.c2)) WHEN ((((NULL)OR(vt1.c1)))AND(vt1.c1)) THEN vt1.c0 COLLATE BINARY WHEN json_quote(vt1.c1) THEN ((rt1.c4) NOT BETWEEN (x'52dc') AND (rt1.c3)) ELSE CASE WHEN vt1.c1 THEN x'' ELSE rt1.c1 END END;SELECT DISTINCT ((((rt1.c2)>(vt1.c0)))|(((vt1.c1)<<(rt1.c4)))) FROM vt1 WHERE (((0xffffffffab3e7219)<>(((x'') NOT NULL))));SELECT vt1.c0 FROM rt1, vt0, vt1 WHERE ((((0.2851327884755823 IN ()))GLOB((+ ('-1572552545'))))) GROUP BY '-1450986095', (NOT (NULL)), ((vt0.c0 COLLATE NOCASE)IS(CASE WHEN vt0.c0 THEN vt1.c2 ELSE rt1.c0 END)), CASE WHEN ((rt1.c4)GLOB(vt1.c2)) THEN UNICODE(vt0.c0) ELSE (((rt1.c2)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) END, CASE WHEN rt1.c3 THEN (((rt1.c4)) NOT BETWEEN ((x'')) AND ((rt1.c4))) ELSE rt1.c1 END LIMIT 2020771286; -- 0ms;
SELECT DISTINCT NTILE(CAST(((rt1.c1)/(vt1.c1)) AS TEXT)) OVER (), ((((((vt1.c1) BETWEEN (vt1.c0) AND (rt1.c2)))AND((((rt1.c2))<=((rt1.c4))))))AND((((vt0.c0))>((rt1.c4))))), CAST(MIN(vt1.c0) AS TEXT) FROM vt0, rt1, vt1 WHERE (((((NULL) NOT BETWEEN ('0.4283422619457732') AND ('362357319')))|(((x'ec8f') NOT BETWEEN (x'') AND (0x300ce195)))));SELECT DISTINCT ((LIKELIHOOD(vt1.c1, 0.8377156920917324))IS NOT(CAST(rt1.c4 AS REAL))) FROM rt1, vt1 WHERE (LENGTH(CASE WHEN 760725085 THEN 0.9162844193804246 END)) LIMIT 1842705090; -- 0ms;
SELECT ALL (((((rt1.c0, vt1.c2, rt1.c0))>=((vt0.c0, rt1.c0, rt1.c0)))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((((vt1.c0)AND(vt1.c2)))OR(rt1.c4)))) FROM vt0, vt1, rt1 WHERE (-730945986) GROUP BY x'70fa'; -- 1ms;
SELECT ((MAX(0Xffffffffc8d1239e))+(COUNT(*))), ((x'')OR(CAST('-1499705490' AS TEXT))), ((MIN(vt1.c2)) ISNULL), ((((vt1.c1) IS TRUE)) BETWEEN ((NOT (rt1.c1))) AND (TOTAL(rt1.c2))), (('Oί') BETWEEN (((rt1.c2)>>(rt1.c3))) AND ((((rt1.c2, rt1.c3, rt1.c1))<((rt1.c0, vt0.c0, vt1.c0))))) FROM vt1, rt1 WHERE ((+ ((('1124571861') BETWEEN (NULL) AND (0.5875022817325672))))) LIMIT 866681630 OFFSET 442431037;SELECT DISTINCT rt1.c0 FROM rt1, vt0, vt1 WHERE (TRIM(DISTINCT 'b!~Hሲ?{Fq')); -- 0ms;
SELECT TOTAL('4%*-婳V') FROM vt0, vt1, rt1; -- 1ms;
SELECT (('i\n9E') BETWEEN (((vt1.c1)|(rt1.c1))) AND (x'')) FROM rt1, vt1 ORDER BY ((((((rt1.c2)OR(rt1.c1)))AND(vt1.c2)))<((((vt0.c0)) BETWEEN ((rt1.c4)) AND ((NULL))))) DESC, (((NOT (vt1.c2))) BETWEEN (CASE rt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE NULL END) AND ((+ (rt1.c1))));SELECT PRINTF((+ (vt1.c2))) FROM vt0 WHERE ((- (((x'')GLOB(NULL))))) LIMIT -1752255152;SELECT rt1.c3, ((rt1.c1)IS NOT(rt1.c2)) COLLATE NOCASE, CASE x''  WHEN (rt1.c0 IN (rt1.c1)) THEN ((((((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c2)))OR(rt1.c4)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) ELSE rt1.c2 COLLATE NOCASE END FROM vt0, rt1, vt1 WHERE ((((((((((((NULL)) NOT BETWEEN (('-1421970919')) AND ((x''))))AND('' COLLATE RTRIM)))AND(-847196279 COLLATE RTRIM)))AND(UNLIKELY(0.9351814399076904))))OR((~ (0.8376727446888871))))) LIMIT 1781270014 OFFSET 480906640; -- 0ms;
SELECT ((((((vt1.c0) IS TRUE))AND(NULLIF(rt1.c0, vt1.c2))))OR(LENGTH(vt1.c0))) FROM vt1, rt1 WHERE (((x'4022')/(NULL)) COLLATE NOCASE) GROUP BY ((((((vt1.c0)+(vt1.c1)))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0) BETWEEN (rt1.c4) AND (vt0.c0))));SELECT CAST(rt1.c3 AS NUMERIC), 0.7743115546325461, rt1.c2 FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT ((COUNT(*))*(IFNULL(DISTINCT rt1.c4, vt1.c2))), (+ (((0.8446596707321427) NOT NULL))), (vt1.c0 IN ()) COLLATE BINARY FROM rt1, vt0 WHERE (0x299bef3c) GROUP BY (~ (CASE rt1.c1  WHEN vt1.c1 THEN vt0.c0 WHEN x'05bd' THEN vt1.c0 WHEN vt0.c0 THEN '362357319' END));SELECT ((((vt1.c2 COLLATE RTRIM)OR(((vt0.c0)>>(rt1.c2)))))AND(((vt0.c0) ISNULL))) FROM rt1 WHERE (((((((((((((((((NULL)OR(x'')))OR(NULL)))OR('671321236')))OR(NULL)))OR(0.6001777073428197)))OR('-2081168902')))OR(0.4558571214175383 COLLATE BINARY)))AND(CAST(0.4235821280620202 AS TEXT))));SELECT DISTINCT CASE CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN rt1.c1 ELSE vt1.c0 END  WHEN ((((rt1.c2)AND(rt1.c0)))OR(rt1.c3)) THEN ((((vt1.c2)AND(vt1.c1)))AND(rt1.c1)) WHEN (((((((('')OR(vt1.c2)))AND(rt1.c1)))AND(vt1.c1)))AND(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN CAST(vt1.c0 AS TEXT) THEN rt1.c0 END FROM vt0, vt1 GROUP BY 0.882983704802134 HAVING ((((vt0.c0)|(vt1.c1)))<>(rt1.c2)) ORDER BY ((((((((((((((((x'')AND(rt1.c4)))OR(rt1.c1)))OR(vt1.c0)))OR(vt0.c0)))AND('9iXh')))OR((~ (0X1e1d14e9)))))AND(CAST(rt1.c0 AS BLOB))))OR(0.8478097970358921)) DESC  NULLS FIRST LIMIT 122239082;SELECT ALL GROUP_CONCAT(CASE rt1.c4  WHEN vt1.c0 THEN rt1.c0 END) OVER (), CASE WHEN COUNT(vt1.c2) THEN rt1.c0 WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)) THEN ((rt1.c4) NOT NULL) WHEN (rt1.c3 IN (vt0.c0)) THEN '0.11712396845116657' COLLATE BINARY END, (((((0.208342470633197, vt0.c0, vt1.c2, rt1.c4, rt1.c3)) BETWEEN ((rt1.c2, rt1.c0, rt1.c0, rt1.c3, rt1.c1)) AND ((vt0.c0, rt1.c0, rt1.c4, rt1.c0, 'B'))))OR((rt1.c3 IN ()))) FROM vt1, vt0;SELECT ALL (~ ((((rt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c2))))) FROM vt0, rt1;SELECT DISTINCT HEX(x'd884'), (((((vt1.c0, rt1.c3, vt1.c0, vt1.c2, vt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c4, NULL, -1685772586)) AND ((vt1.c1, rt1.c0, vt1.c2, vt1.c1, NULL))))>(0.9700016302958918)), (((((('-788188977') BETWEEN (vt1.c2) AND (rt1.c2)))OR(((rt1.c2) IS FALSE))))AND(((rt1.c0)<<(rt1.c0)))) FROM rt1, vt0;SELECT DISTINCT ((0.5222435055040748) IS TRUE) FROM rt1 WHERE (((((((0X530a28c6)OR(-1337519806)))AND(-377382114)))IS(((1782016548)%(NULL))))) ORDER BY ((0.8502756878828108) BETWEEN (((rt1.c3)IS(rt1.c1))) AND (((vt1.c1) BETWEEN (vt1.c2) AND (rt1.c1)))) ASC  NULLS FIRST;SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, vt0, vt1 WHERE (((((-2.9227403E7)OR(NULL)))OR('lu')) COLLATE NOCASE); -- 0ms;
SELECT ALL IFNULL(CASE vt0.c0  WHEN rt1.c4 THEN vt1.c0 END, rt1.c1), (NOT (x'')), ((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))IS NOT((NOT (vt1.c2)))) FROM vt1, rt1 WHERE ((((((((((x'4d55')AND('yTfV+s')))OR(x'cb39070d')))OR(0.4222603155384109)))AND('Rn篆0l')) IN ()));SELECT DISTINCT (NOT (((vt1.c0)>>(vt1.c1)))) FROM vt1, vt0 WHERE ((((~ (0.6239611450015935)))>=('0dmPY'))) ORDER BY CAST((~ (rt1.c1)) AS INTEGER) DESC;SELECT ALL NULLIF(DISTINCT (((vt1.c2, rt1.c3, vt0.c0)) NOT BETWEEN (('Pc', rt1.c4, vt1.c1)) AND ((vt0.c0, vt0.c0, '707240400'))), CAST(vt1.c1 AS TEXT)) FROM vt1, rt1 WHERE (((((NULL)<<(0.5586424823324514))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((x'')) AND ((0.7724004168071327)))) AND (NULL)));SELECT ALL (+ (rt1.c2)) COLLATE RTRIM, ((((((rt1.c4))>((vt1.c2)))))<=((CAST(vt1.c1 AS INTEGER)))), SUM((NULL IN (rt1.c0, rt1.c1))) FROM rt1, vt1 WHERE ('E<鐂aIk㗃&') GROUP BY '-1130605658' HAVING (((+ (rt1.c3))) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (x'')); -- 0ms;
SELECT (NOT ((vt1.c1 IN ()))) FROM vt1, vt0, rt1; -- 0ms;
SELECT ALL '' FROM rt1, vt1 WHERE (((((((((((((((((NULL)AND(x'')))OR(0xffffffff9a466e82)))OR('-754348956')))OR(0X62bf437)))OR(0.8194408152595428)))OR(0.5568482296459623)))OR(((0xffffffffa05fae5d)<=(NULL)))))OR(CAST(x'' AS INTEGER)))); -- 0ms;
SELECT DISTINCT TOTAL((NOT (rt1.c4))) FROM vt1 WHERE ('v');SELECT DISTINCT ((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)) COLLATE RTRIM FROM vt0 WHERE (CASE WHEN ((x'') NOT NULL) THEN (- (0.10980800948767211)) WHEN (+ (-3.77382114E8)) THEN ((NULL) IS FALSE) WHEN (('124364581') NOT NULL) THEN ((0.8620212652086835)>>(NULL)) ELSE (NULL IN ('ULFz')) END) LIMIT -1734262722;SELECT CASE COUNT(*)  WHEN ((vt1.c0)||(rt1.c2)) THEN ((((rt1.c2)OR('-779092148')))AND(vt1.c1)) ELSE CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN 0xffffffff8300db0d ELSE vt1.c2 END END, CUME_DIST() OVER (), CASE WHEN rt1.c2 COLLATE RTRIM THEN (vt0.c0 IN (rt1.c1, vt1.c1)) ELSE ((rt1.c4) NOT NULL) END FROM vt0 WHERE (((((0.687610299843029)<('927214160')))+((+ ('&c#౾')))));SELECT rt1.c2 FROM vt0, rt1 WHERE ('C') LIMIT -1134696542 OFFSET 1 EXCEPT SELECT DISTINCT rt1.c2 FROM vt0, vt1, rt1;SELECT ALL 0x7091102 FROM vt1, rt1, vt0; -- 0ms;
SELECT LIKELIHOOD(CAST('-1341269720' AS BLOB), 0.22396380650314263) FROM vt0, rt1; -- 0ms;
SELECT ((((((vt1.c0) IS FALSE))AND(AVG(vt1.c1))))OR(UNLIKELY(0X5d3f99f1))) FROM vt1, vt0, rt1 WHERE (((~ (0xffffffff9e6f8657)) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c2 THEN vt1.c2 ELSE rt1.c1 END COLLATE NOCASE FROM vt1 WHERE ((((((0x40bbdaa3 IN ()))OR(0.7988803383841679 COLLATE BINARY)))OR(CAST(x'' AS TEXT))));SELECT DISTINCT ((((rt1.c2)IS(rt1.c0)))>(((((rt1.c0)OR('0.8934434124005483')))AND(vt1.c1)))) FROM vt0, rt1, vt1; -- 0ms;
SELECT (((vt1.c0)-(rt1.c1)) IN (vt1.c0)) FROM vt0, vt1 WHERE ('-2019690177');SELECT DISTINCT GROUP_CONCAT((((vt1.c0, rt1.c0, rt1.c1)) BETWEEN (('-568613933', vt1.c1, vt1.c2)) AND ((vt1.c2, rt1.c0, rt1.c2)))) FROM rt1, vt1 WHERE (CASE WHEN x'' COLLATE RTRIM THEN ((NULL) IS FALSE) WHEN CASE 0.6552923550089533  WHEN 0.24886980195457586 THEN '0.6603543745682788' WHEN 0.07788439330940977 THEN x'b511' WHEN 0.20923509494738401 THEN -1348896571 WHEN '' THEN '!edoX' WHEN 0.8505528024727815 THEN -1.65379884E9 ELSE '-452301355' END THEN (((('pDd')AND(0.5644398651159952)))OR('n0')) WHEN ((0.662852906208504) NOT BETWEEN (NULL) AND ('')) THEN (NULL IN ()) ELSE ((NULL)|('D43')) END); -- 1ms;
SELECT (~ ((((rt1.c0))<=((rt1.c1))))) FROM vt0, vt1 GROUP BY CASE ((rt1.c2) NOT BETWEEN ('9qT') AND (vt1.c1))  WHEN ((((rt1.c0)OR(rt1.c2)))AND('911297188')) THEN (NOT (vt1.c1)) END;SELECT DISTINCT CUME_DIST() OVER () FROM vt0, rt1, vt1; -- 0ms;
