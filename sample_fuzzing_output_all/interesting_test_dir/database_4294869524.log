-- Time: 2024/06/07 06:35:11
-- Database: database24
-- Database version: 3.40.0
-- seed value: 4294869524
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 INT ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1, detail=none); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '44375'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0.16140395474624603, x'46b4'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE rt0 SET c0=NULL; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (x'', NULL), (1985070409, x''), (x'6ef95e3a', x'47ae145c'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES ('V3bGP', NULL); -- 1ms;
UPDATE vt1 SET (c1, c0)=(1.985070409E9, 0.07766042819631869); -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE vt1; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '9145'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL, NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2, c4) VALUES (x'', NULL, '-2128928847'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (x'', -2128928847); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('1985070409', -2.128928847E9), ('\rHXG|앉', NULL), ('!ᔗNWs', x'ceb6'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1203173349); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (NULL), (0.8325802951998447), (x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.26825317960194794); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '61315'); -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 423302423);\n; -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0.8325802951998447); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c3) VALUES (x'', x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c5)=('1626508973') WHERE ((((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c3))) BETWEEN (((rt0.c0)<<(rt0.c4))) AND ((- (rt0.c4)))); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1913946712); -- 0ms;
UPDATE OR FAIL vt1 SET (c1)=(0Xffffffff93e8d18a) WHERE '280882659'; -- 0ms;
ANALYZE; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 13); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.8773001575342947); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '10356'); -- 1ms;
INSERT OR REPLACE INTO vt1 VALUES (0.6576873260665081, x''), (x'', x''), (NULL, 0xffffffff85e4fd29); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (0Xffffffff8efd28bf, NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0X10bdede3, ''); -- 1ms;
DROP TABLE IF EXISTS rt0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 noskipscan'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '53772'); -- 0ms;
INSERT OR ABORT INTO vt1(c1) VALUES ('-329242388'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt1(c0, c1) VALUES ('1985070409', 0.5250189164492728); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE vt1 SET (c1, c1)=(0.2941959741054523, x'ae06') WHERE (((vt1.c0))=((((vt1.c1)|(vt1.c1))))); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
VACUUM; -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES ('0.07766042819631869', x'ba01'); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.4564917226401882); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -329242388);\n; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (x''); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt1(c1, c0) VALUES ('513573060', NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c0, c1) VALUES (5.1357306E8, 108632872); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c1)=(x'', 0x193b1517) WHERE '-1185380949'; -- 1ms;
INSERT OR FAIL INTO vt1(c1) VALUES (0.03818366388674721); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=1'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('592233679'), (0.02280809810139306), (0X7cf1c166); -- 1ms;
ANALYZE vt1; -- 1ms;
ANALYZE vt1; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt1.c1 FROM vt1 WHERE ((NOT (-1.185380949E9 COLLATE NOCASE))); -- 0ms;
SELECT ALL COUNT(((vt1.c1)<=(vt1.c1))) OVER (), vt1.c0, ((0.7864184184396522) IS TRUE) FROM vt1 WHERE (((((0.6413469618359192)&(-249090183)))>(((0.6664781087915813)<(NULL))))) LIMIT 2096218470; -- 0ms;
SELECT (((((vt1.c1))>=((vt1.c1)))) BETWEEN ('-115263513') AND (vt1.c1 COLLATE NOCASE)) FROM vt1 WHERE (((((NULL)/(NULL)))>=((NOT (NULL))))); -- 0ms;
SELECT MIN(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) FROM vt1; -- 1ms;
SELECT ALL ((MAX(vt1.c0)) NOT BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((- (vt1.c0)))), (('') IS FALSE), ((((vt1.c0)|(vt1.c0))) BETWEEN (RTRIM('-1900442576')) AND ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c1)) AND (('0.16140395474624603', vt1.c0, vt1.c0))))) FROM vt1 ORDER BY ((((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))!=(((vt1.c0 IN ())))) ASC  NULLS FIRST, CAST((vt1.c0 IN ()) AS NUMERIC), ((((vt1.c0) NOT NULL))/(((vt1.c1) NOT BETWEEN (vt1.c0) AND (0x55982512)))) DESC; -- 0ms;
SELECT DISTINCT (NOT ('%g-\a')) FROM vt1 WHERE ((((('1535455921')AND((((((((('0.8325802951998447')AND('-1394047660')))AND(x'')))OR(NULL)))OR(0.3673722562468774)))))AND(CASE -567406142  WHEN 0.3719920836209518 THEN '' ELSE x'' END))); -- 0ms;
SELECT DISTINCT vt1.c0, CAST(NULL AS BLOB) COLLATE NOCASE, ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE BINARY FROM vt1 WHERE (((CAST(NULL AS TEXT)) BETWEEN ((((('1548812931')OR('108632872')))OR(NULL))) AND (TRIM(0.008200754871996452, NULL)))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(CASE WHEN '1436034322' THEN 0.432568271204 ELSE '592233679' END AS REAL)); -- 0ms;
SELECT IFNULL(DISTINCT (vt1.c0 IN ()), ROUND(vt1.c1, vt1.c1)), NULLIF(LIKE(vt1.c1, vt1.c0, '꼃'), (((vt1.c0, '', vt1.c1))=((vt1.c1, vt1.c1, vt1.c0)))), CAST(vt1.c1 COLLATE BINARY AS REAL) FROM vt1 WHERE (((((((x'') IS TRUE))AND((((('\n')AND(0.1119709535811565)))OR(x'')))))OR(0X22308e4))); -- 0ms;
SELECT DISTINCT (((NOT (vt1.c1))) BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 0.9166103096821092 WHEN vt1.c1 THEN vt1.c1 ELSE '-1256083709' END) AND (CASE vt1.c0  WHEN 0.6572886538611595 THEN vt1.c0 END)) FROM vt1 WHERE (highlight(0.9131370796281005, x'', '423302423', x'') COLLATE NOCASE) GROUP BY ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) COLLATE NOCASE, ((((vt1.c1)AND((vt1.c1 IN ()))))AND(LOWER(vt1.c1))), (((TRIM(DISTINCT vt1.c0)))>=((((vt1.c1)<=(vt1.c1))))) HAVING GROUP_CONCAT(((vt1.c1) NOTNULL));SELECT DISTINCT NULL FROM vt1 WHERE (0.9728239004080135); -- 0ms;
SELECT DISTINCT CASE (vt1.c1 IN (vt1.c1))  WHEN ((vt1.c0) ISNULL) THEN LIKELY(DISTINCT vt1.c1) ELSE vt1.c1 END FROM vt1 GROUP BY CHAR((((vt1.c0))==((vt1.c1)))), x'', (((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(NULL)) IN ((+ ('0.6572886538611595')), (- (vt1.c0)))); -- 1ms;
SELECT NULL, ((ABS(vt1.c0))<=(NULL)), (+ ((vt1.c1 IN (vt1.c1, vt1.c0)))) FROM vt1 WHERE (UPPER(x'' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (NOT ((((x'd1cb'))==((vt1.c0))))) FROM vt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(NULL, ((COALESCE(vt1.c0, vt1.c1)) NOT BETWEEN (((0.6866123630169445) NOT NULL)) AND ((((vt1.c1))==((NULL)))))) OVER () FROM vt1 WHERE (x'1ff6') GROUP BY (((((((((((((('Ew')AND(NULL)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))OR(x'')))OR(vt1.c1)) HAVING '-1293394585' ORDER BY JULIANDAY(((vt1.c0) ISNULL), ((vt1.c0)==(vt1.c0)), (~ (vt1.c1)), ((x'')<>(vt1.c1)), ((vt1.c1)||(vt1.c0))) DESC  NULLS LAST LIMIT -257440109 OFFSET -2002082135; -- 0ms;
SELECT DISTINCT (((vt1.c1))<((COUNT(*)))) FROM vt1 GROUP BY UNICODE(vt1.c0 COLLATE NOCASE) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN x'a7a2' THEN vt1.c1 ELSE vt1.c0 END)IS NOT(CAST(vt1.c1 AS TEXT))); -- 0ms;
SELECT DISTINCT ((((0.1557334750978453)OR(((vt1.c1)||(vt1.c1)))))AND(((vt1.c1)>(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT (- (CAST(vt1.c1 AS BLOB))) FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0 COLLATE NOCASE)))OR(((vt1.c1)<(vt1.c1)))) ASC  NULLS FIRST; -- 0ms;
SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>((CAST(vt1.c1 AS REAL)))) FROM vt1; -- 0ms;
SELECT DISTINCT COUNT(TRIM(DISTINCT vt1.c0, vt1.c0)) FILTER(WHERE (((vt1.c0)IS(vt1.c0)) IN (vt1.c1 COLLATE NOCASE))) OVER () FROM vt1 GROUP BY (((x'c385')) NOT BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (NULL)))) AND (((NOT (vt1.c1))))), vt1.c1, ((((json_extract(vt1.c1, vt1.c1, vt1.c0, vt1.c0))OR(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))OR(CASE WHEN vt1.c0 THEN NULL END)), '꼃\' COLLATE BINARY, CAST((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS REAL);SELECT ALL (IFNULL(DISTINCT vt1.c1, vt1.c0) IN ()) FROM vt1; -- 0ms;
SELECT ALL FIRST_VALUE(((vt1.c0 COLLATE NOCASE) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE '118215387' END) AND (CASE vt1.c1  WHEN NULL THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END))) OVER ( RANGE ((((((((vt1.c1)AND(CASE WHEN vt1.c1 THEN vt1.c0 END)))OR(IFNULL(vt1.c0, vt1.c0))))OR((NOT (vt1.c1)))))OR(((vt1.c1)/(vt1.c0)))) PRECEDING), (NOT (x'')), ((vt1.c1)%((((((((('')OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(-1896011585)))) FROM vt1 WHERE ((((x'4c5b'))>=((0.4850605146132627))) COLLATE BINARY);SELECT DISTINCT (+ (MAX(vt1.c1))) FROM vt1; -- 0ms;
SELECT ALL ((CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)*(((vt1.c0)OR(vt1.c0)))) FROM vt1 GROUP BY x'e9ce', ((((((0.8677418140280345)<=(vt1.c1)))AND(ROUND(vt1.c0, vt1.c1))))OR(json_valid(vt1.c1))), (((+ (vt1.c1))) NOT BETWEEN ((((vt1.c1, vt1.c0, vt1.c0, vt1.c1, x''))=((vt1.c1, 879003147, vt1.c0, vt1.c1, vt1.c1)))) AND (CAST(vt1.c1 AS INTEGER))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (vt1.c0) AND (0.18684459261267383))) ISNULL), GROUP_CONCAT(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM) OVER (), (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND (((((4.23302423E8)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))))) FROM vt1; -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM, CAST((vt1.c1 IN ()) AS NUMERIC), GROUP_CONCAT(((vt1.c1)|(vt1.c0))) OVER () FROM vt1 WHERE ((0.6798974713889712 IN ()) COLLATE BINARY) GROUP BY '-482080085', UNLIKELY(((vt1.c1)IS(''))), NULL HAVING MIN(((vt1.c0)>=(vt1.c0)), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS INTEGER) FROM vt1 WHERE (((NULL) IS FALSE)); -- 0ms;
SELECT DISTINCT ((vt1.c1)-(vt1.c1)) FROM vt1; -- 0ms;
SELECT ((COUNT(*)) NOT BETWEEN (vt1.c1) AND (CAST(vt1.c1 AS BLOB))) FROM vt1 LIMIT -1739335410; -- 0ms;
SELECT ALL MIN((((vt1.c1, vt1.c1, vt1.c1))<=((vt1.c0, vt1.c0, vt1.c0)))) FROM vt1 WHERE ((((CAST(0.7257641350982564 AS BLOB)))>=((CAST('' AS NUMERIC))))); -- 0ms;
SELECT DISTINCT (((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) IN (((vt1.c0)LIKE('879003147')))), ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOT BETWEEN (((vt1.c1) NOT BETWEEN ('-728465926') AND (vt1.c1))) AND (CAST(vt1.c1 AS TEXT))), '423302423' FROM vt1 WHERE (CASE ((((NULL)AND(0.635839855234856)))AND(0x234cc4cf))  WHEN ((((x'f46ceb66')OR(NULL)))AND(0xffffffff88aaa6a9)) THEN (((NULL)) NOT BETWEEN ((NULL)) AND (('2000964758'))) END) LIMIT 925970703; -- 0ms;
SELECT ((vt1.c0 COLLATE BINARY)<=(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))), MAX(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))), json_remove(vt1.c1, vt1.c0 COLLATE BINARY), vt1.c1, CASE WHEN vt1.c1 COLLATE BINARY THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN (((vt1.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0))==((vt1.c1, vt1.c1, vt1.c0, vt1.c0, vt1.c1))) THEN vt1.c1 WHEN vt1.c0 COLLATE RTRIM THEN 'Vn~e' COLLATE RTRIM WHEN SUM(vt1.c0) THEN CAST(vt1.c1 AS BLOB) ELSE (0xffffffffd0d5e2c3 IN ()) END FROM vt1 WHERE ((((CAST(NULL AS NUMERIC)))>(((((0.26825317960194794, -58077374, '+-tᗈ<xS5'))>=((x'8716', x'e65e', 'yt'))))))); -- 0ms;
SELECT DISTINCT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT SUM(vt1.c1 COLLATE NOCASE COLLATE RTRIM) FROM vt1 WHERE (((((NULL)AND('-1358171042')))AND('DN?a>')) COLLATE NOCASE); -- 1ms;
SELECT ((((vt1.c0)&(vt1.c0))) NOT NULL), ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))IS(vt1.c1)), 0.36046447734126164 FROM vt1 ORDER BY (~ (((vt1.c0)IS(vt1.c1)))); -- 0ms;
SELECT CAST(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)) AS BLOB) FROM vt1 LIMIT -1739335410; -- 0ms;
SELECT ALL (((NOT (vt1.c1))) NOT NULL) FROM vt1; -- 0ms;
SELECT LIKELIHOOD(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)), 0.4602311723659297) FROM vt1 WHERE ((((+ ('-1813458550'))) BETWEEN (NULL) AND (json_object(-257440109, 403462445)))) ORDER BY 936626835 ASC  NULLS FIRST;SELECT ALL TOTAL((('-0.0') IS TRUE)) FROM vt1; -- 0ms;
SELECT (+ (MAX(vt1.c1))), TOTAL(((((vt1.c0)OR(-257440109)))OR(vt1.c0))), NULL FROM vt1 WHERE (((0Xfffffffffcc39e01 IN ('1626508973')) IN ())) GROUP BY vt1.c0 HAVING CASE 0x67d2c4fe  WHEN ((((((((0.641426456070163)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN 'u)' COLLATE BINARY WHEN ((vt1.c1)>>(vt1.c1)) THEN ((vt1.c1)+(NULL)) WHEN (((vt1.c1, vt1.c1, vt1.c1))==((vt1.c0, vt1.c1, vt1.c0))) THEN ((vt1.c0)<(vt1.c1)) END; -- 0ms;
SELECT DISTINCT (((+ (0.40915992383105215))) ISNULL) FROM vt1 GROUP BY vt1.c1 COLLATE RTRIM HAVING (CASE WHEN vt1.c1 THEN vt1.c1 END IN ()); -- 0ms;
SELECT DISTINCT ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)*(vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE (CASE (('+-Tᗈ<XS5') BETWEEN ('\n') AND (NULL))  WHEN (((0.7864184184396522, NULL, x'b6560c29')) BETWEEN (('', 0.5663888882562808, '[]')) AND ((NULL, ',<j?', '-791289149'))) THEN 0.40915992383105215 COLLATE NOCASE WHEN (~ (0.2031243244180415)) THEN ((NULL)GLOB(0.7941508331720475)) WHEN ((x'')%(0Xffffffffa9cc0e4c)) THEN x'' COLLATE RTRIM ELSE CAST(x'4e8a2c68' AS TEXT) END); -- 0ms;
SELECT ((((vt1.c0 IN (vt1.c0, vt1.c0))))<>((CAST(0xffffffff8efd28bf AS REAL)))) FROM vt1 ORDER BY ((vt1.c1 COLLATE BINARY)<=((+ (vt1.c0)))); -- 0ms;
SELECT DISTINCT ((vt1.c0)|((NOT (vt1.c1)))) FROM vt1 WHERE (((((((''))<>((0.7864184184396522)))))!=((CASE '0.641426456070163'  WHEN x'' THEN NULL ELSE '2D' END)))); -- 0ms;
SELECT CASE WHEN ((vt1.c0)<>(vt1.c1)) THEN (vt1.c0 IN ()) ELSE ((vt1.c1)&(vt1.c0)) END, COUNT(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))) OVER (), ((CASE WHEN vt1.c0 THEN vt1.c1 END) NOTNULL), ((((vt1.c1)AND(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)))OR(vt1.c0)), ((vt1.c0)<=(vt1.c0)) COLLATE BINARY FROM vt1 GROUP BY ((((0.9393097477462119) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOT BETWEEN (((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))) AND (((vt1.c1)&(vt1.c0)))), (LIKELY(vt1.c0) IN ((NOT (vt1.c0)))), ((((((((((vt1.c0) ISNULL))AND(vt1.c1)))AND(((vt1.c1)LIKE(vt1.c1)))))AND(((vt1.c1)>(vt1.c0)))))OR((vt1.c0 IN (vt1.c1)))) ORDER BY (('I<*i	') NOTNULL) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((vt1.c1) ISNULL) COLLATE NOCASE FROM vt1 WHERE (('' IN ())); -- 0ms;
SELECT (((((vt1.c0))<((vt1.c1))))IS(vt1.c0 COLLATE BINARY)) FROM vt1; -- 0ms;
SELECT ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))>>(x'')) FROM vt1; -- 0ms;
SELECT ALL ((vt1.c1)|(CAST(vt1.c1 AS BLOB))) FROM vt1 WHERE ((((((((('1626508973')AND(0.5081644475717118)))OR(NULL)))OR(CAST('' AS NUMERIC))))AND((('')<>('-1825300489'))))); -- 0ms;
SELECT DISTINCT ((4.23302423E8) NOT NULL) FROM vt1 WHERE (((((0.19700093078094927)>('-1354758156'))) IS TRUE)); -- 0ms;
SELECT ALL 271319194 FROM vt1; -- 0ms;
SELECT ALL IFNULL(vt1.c0, vt1.c0) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT 0X7248870, ((((CAST(vt1.c1 AS INTEGER))OR((vt1.c1 IN ()))))OR(CAST(vt1.c0 AS TEXT))), (~ (CAST(vt1.c1 AS INTEGER))) FROM vt1 ORDER BY (((vt1.c1) ISNULL) IN ()); -- 0ms;
SELECT (+ (vt1.c1)), TOTAL(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END) OVER (), (TRIM(vt1.c0, vt1.c0) IN ()) FROM vt1 WHERE ('0.641426456070163'); -- 0ms;
SELECT ALL GLOB(ABS(DISTINCT vt1.c1), ((((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))AND('1436034322')))AND(vt1.c0))) FROM vt1 WHERE (CAST(((x'98ff')<=(NULL)) AS INTEGER)) ORDER BY ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)OR(CASE vt1.c1  WHEN 0xffffffffa7be598c THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)))OR(SQLITE_VERSION())); -- 1ms;
SELECT DISTINCT vt1.c0, ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))>>(IFNULL(vt1.c0, vt1.c0))), (((vt1.c1)) NOT BETWEEN ((CASE 0Xffffffff93776afe  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)) AND (((- (vt1.c0))))) FROM vt1 WHERE (DATE(((x'')>>('-1900442576')), (NULL IN ()), load_extension(x'', NULL)));SELECT ALL NULLIF(((vt1.c0)GLOB(vt1.c0)), ((((vt1.c0)OR(vt1.c1)))OR(vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT 0.07299209872201184 COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT CAST((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) AS REAL) FROM vt1 WHERE (((((((((0.18684459261267383)AND('SSck')))OR(0xffffffffec6028ec)))AND(0.32998037638581956)))AND('1TDMo)2ㄏ')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((vt1.c0)<(vt1.c0)))<=(((vt1.c1)GLOB(NULL)))) FROM vt1 WHERE (CASE WHEN (((x'', '-1256083709', 0.6664781087915813)) NOT BETWEEN ((x'', x'2758', x'')) AND ((x'', '-121594356', 0Xfffffffff1272f79))) THEN (('295959257')||(x'81d5')) ELSE ((('0.7941508331720475')) NOT BETWEEN ((1996008403)) AND (('xK1G'))) END) GROUP BY ((((((((((vt1.c0) NOTNULL))AND(LENGTH(vt1.c1))))AND((((x'', vt1.c1, vt1.c1))<=((vt1.c0, vt1.c1, vt1.c0))))))OR(((vt1.c1)/(vt1.c0)))))OR(((x'') NOT BETWEEN (vt1.c1) AND (vt1.c1)))), CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c1))==((vt1.c0))) END, NULLIF(((((0xfffffffff1272f79)AND(vt1.c0)))OR(vt1.c1)), (((vt1.c0, 0xffffffffe3440aab, vt1.c1))<((vt1.c1, vt1.c0, vt1.c0)))) HAVING CAST(0.8515346196854401 AS NUMERIC); -- 1ms;
SELECT DISTINCT (IFNULL(vt1.c1, vt1.c1) IN (((vt1.c1)>>(vt1.c0)))) FROM vt1; -- 0ms;
SELECT (((+ (vt1.c1))) IS FALSE) FROM vt1 WHERE ('1e500'); -- 0ms;
SELECT DISTINCT UNLIKELY(((x'')>(vt1.c1))), (((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, CAST(NULL AS REAL), ((-1.256083709E9)%(vt1.c0)))) AND (((vt1.c1 IN ()), ((vt1.c1)*(vt1.c0)), vt1.c1))), AVG(((vt1.c1) NOTNULL)) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((x'')) AND ((((x'')>=(vt1.c0))))), TOTAL(((((vt1.c1)OR(vt1.c0)))OR(vt1.c0))) FILTER(WHERE ((NOT (vt1.c0)) IN ())) OVER (), vt1.c0 FROM vt1 WHERE ((~ (0.07456751640589776)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt1.c0)IS(vt1.c1))) IS FALSE) FROM vt1; -- 0ms;
SELECT ALL CAST(0xffffffffde2e11c2 AS BLOB), ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)-(CASE WHEN vt1.c1 THEN vt1.c0 END)), ((vt1.c1 COLLATE RTRIM)GLOB(vt1.c0)), (((SUM(vt1.c0)))>((((vt1.c1) IS FALSE)))), (((vt1.c1 IN ()))AND(((vt1.c1) NOT BETWEEN (vt1.c1) AND (x'')))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c1) IS FALSE)) ISNULL), (((vt1.c0)) NOT BETWEEN ((('h	P1' IN (vt1.c0, vt1.c1)))) AND ((CAST(vt1.c0 AS REAL)))), ((vt1.c1)IS(vt1.c0)) COLLATE BINARY COLLATE NOCASE FROM vt1 WHERE (CAST((('-1480697460') BETWEEN (NULL) AND (''')')) AS NUMERIC)); -- 0ms;
SELECT ALL TOTAL(AVG(CAST(x'074d' AS INTEGER))), LOWER(NULL), ((LOWER(vt1.c1))=(CAST(vt1.c0 AS INTEGER))) FROM vt1 WHERE ((((0.9086046842066656)) NOT BETWEEN ((NULL)) AND (((((NULL))=(('-2062769247')))))));SELECT ALL vt1.c1 FROM vt1 WHERE (((((NULL) NOT BETWEEN (NULL) AND (0Xffffffff99618763)))+(((1534229623) IS TRUE)))); -- 0ms;
SELECT ((((vt1.c1 COLLATE RTRIM)AND(vt1.c0)))AND(((vt1.c1) NOTNULL))), (((vt1.c0 IN ()))>(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))), ((COUNT(vt1.c0))IS NOT(((((vt1.c0)OR(vt1.c0)))OR(NULL)))) FROM vt1 WHERE ('295959257') LIMIT -351963954 OFFSET 2096218470; -- 0ms;
SELECT ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)IS NOT(COUNT(*))), RANK() OVER (), ((vt1.c0 COLLATE BINARY) NOT BETWEEN (SUM(vt1.c1)) AND (((vt1.c0)>=(vt1.c0)))) FROM vt1 WHERE (CASE CAST('\n' AS TEXT)  WHEN ((0.07766042819631869) NOTNULL) THEN (~ (NULL)) END); -- 0ms;
SELECT ALL ((NULL) IS FALSE), CASE vt1.c1 COLLATE BINARY  WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)) THEN (vt1.c1 IN (vt1.c0)) END, ((vt1.c0 IN ()) IN ()), ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c0 END), GROUP_CONCAT((NOT (vt1.c0))) FROM vt1 WHERE (((((CASE WHEN x'' THEN NULL END)AND((('-1358171042')=(NULL)))))AND(((0.577463693640898)OR(577058818))))); -- 0ms;
SELECT DISTINCT ((vt1.c0)<=(((vt1.c1) ISNULL))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(COUNT(vt1.c1) AS INTEGER), CAST((~ (vt1.c0)) AS NUMERIC), CAST(vt1.c0 COLLATE NOCASE AS REAL) FROM vt1 WHERE (((((0.6798974713889712)&(x'')))=((('1707493343')>=('SSck'))))); -- 0ms;
SELECT ALL AVG(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0))) OVER (), x'', ((((CAST(vt1.c0 AS REAL))OR(((vt1.c0)%(vt1.c1)))))OR(AVG(vt1.c0))) FROM vt1 ORDER BY UNLIKELY(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END) ASC; -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER (), CASE ((vt1.c0)%(vt1.c1))  WHEN vt1.c0 THEN vt1.c0 ELSE ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) END, CASE ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))  WHEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END THEN ((vt1.c1)IS NOT(vt1.c1)) END FROM vt1 WHERE (((0.7085935761249161 COLLATE NOCASE)<(((NULL) BETWEEN (0.3719920836209518) AND (0.8207165365259707))))); -- 0ms;
SELECT DISTINCT (~ (COUNT(*))) FROM vt1; -- 0ms;
SELECT DISTINCT COUNT((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) OVER () FROM vt1 GROUP BY ((((vt1.c1)>=(vt1.c0))) IS FALSE) HAVING (('Ah㶁xzI')<=(vt1.c0 COLLATE BINARY)); -- 1ms;
SELECT ALL MIN(CAST(vt1.c0 AS INTEGER)) FROM vt1; -- 0ms;
SELECT ALL (((vt1.c0))>((((x'6b42') NOT BETWEEN (vt1.c1) AND (vt1.c0))))) FROM vt1 LIMIT 1750077986; -- 0ms;
SELECT ALL ((((NULL)OR(((vt1.c0)<>(vt1.c1)))))AND(CAST(vt1.c0 AS BLOB))) FROM vt1 WHERE (((('119834736'))>(('1750077986'))) COLLATE BINARY) GROUP BY vt1.c1 ORDER BY CAST(((vt1.c1)LIKE(vt1.c0)) AS BLOB)  NULLS FIRST; -- 1ms;
SELECT DISTINCT '\nZKY!5 7H', (((vt1.c1 COLLATE NOCASE))!=(((vt1.c1 IN ())))), CAST(((vt1.c0)/(vt1.c0)) AS REAL) FROM vt1 WHERE (UNICODE(LIKELIHOOD(DISTINCT '\WY/4.4', 0.40134361007066155))); -- 0ms;
SELECT DISTINCT (- (LTRIM(vt1.c0, vt1.c0))) FROM vt1 WHERE (load_extension((+ ('-564138378'))));SELECT DISTINCT ((((('\o\n')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))>(((vt1.c0)<(vt1.c0)))) FROM vt1 WHERE (((CASE WHEN -185033453 THEN '>W%XA}r&C' END) ISNULL)) GROUP BY ((CAST(vt1.c0 AS INTEGER)) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0)/(vt1.c0)))) HAVING ((((vt1.c0)>=(vt1.c0))) NOT BETWEEN ('H\nFJ') AND (((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))); -- 0ms;
SELECT ALL (+ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1; -- 0ms;
SELECT (((vt1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL))) AND ((vt1.c1))) FROM vt1; -- 1ms;
SELECT ALL CAST(CAST(vt1.c1 AS TEXT) AS INTEGER) FROM vt1; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (vt1.c1 IN ())) FROM vt1 WHERE (LOWER(DISTINCT CAST('/I' AS REAL))) GROUP BY (((((vt1.c0) BETWEEN (vt1.c1) AND (x'c8bd')), (+ (vt1.c0)), CAST(vt1.c1 AS NUMERIC)))>((((vt1.c0)IS(vt1.c1)), ((((0.3768442820028014)OR(vt1.c1)))AND(vt1.c0)), COALESCE(DISTINCT vt1.c1, 0.6576873260665081)))); -- 0ms;
SELECT DISTINCT ((vt1.c0)&(vt1.c0)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT UPPER(vt1.c1) COLLATE BINARY, ((MAX(vt1.c1)) NOT BETWEEN (json_type(vt1.c0)) AND (AVG('423302423'))), ((vt1.c1) IS FALSE) COLLATE RTRIM FROM vt1 WHERE (((((((((((((load_extension(0.5037796711222027, ''))AND('698987696' COLLATE NOCASE)))AND(0.7219555520642328 COLLATE BINARY)))OR(x'')))OR((0.6538598114203064 IN (NULL)))))AND('Z,X_6\rai')))AND(json_array('1750077986', x'')))); -- 0ms;
SELECT ALL '1436034322' FROM vt1 LIMIT -65851888; -- 0ms;
SELECT DISTINCT (((+ ('1597336589')))*(((vt1.c1) IS FALSE))) FROM vt1 WHERE ('>p') LIMIT 118215387; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE BINARY) ISNULL) FROM vt1 WHERE ((((x'', '}B', 0.9412026565685725)) NOT BETWEEN ((((0.7085935761249161)>>(x'')), (NOT (NULL)), (0.4239774804518722 IN ()))) AND ((((x'')!=(NULL)), ((x'') ISNULL), (NOT ('1707493343')))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c0)IS NOT(vt1.c1))), 119834736, CAST(CAST(vt1.c1 AS NUMERIC) AS REAL), ((TRIM(DISTINCT 0.3000424504580428)) BETWEEN (((vt1.c0)IS(vt1.c0))) AND ((NOT (vt1.c0)))), CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))  WHEN ((vt1.c1)>(vt1.c1)) THEN (+ ('1822429764')) WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) THEN ((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c1)>(vt1.c0)) THEN (NOT (vt1.c1)) ELSE vt1.c0 END FROM vt1 GROUP BY CASE WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (NULL)) THEN vt1.c1 COLLATE NOCASE END, CAST(((NULL)>=(vt1.c1)) AS INTEGER), ((((vt1.c0)AND(vt1.c1)))<>(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))), CAST(((vt1.c0)OR(vt1.c1)) AS TEXT), x'5a3c' HAVING '-2092508640' ORDER BY ((((vt1.c1)-(vt1.c0)))<(((vt1.c1)/(vt1.c0)))), (CAST(vt1.c1 AS NUMERIC) IN ()) ASC, CAST(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT); -- 2ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT DISTINCT MAX(COUNT(*)), ((vt1.c1) ISNULL) COLLATE BINARY COLLATE BINARY, ((vt1.c1 COLLATE NOCASE)IS NOT(((vt1.c1) IS TRUE))), ((((vt1.c1)+(vt1.c0)))=((vt1.c0 IN ()))), ((JULIANDAY(vt1.c1, vt1.c1, vt1.c1))!=(MAX(vt1.c1))) FROM vt1 WHERE ((- ((- (x'')))));SELECT NULL FROM vt1; -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE (CASE WHEN ((0xffffffffdf48b9cc) NOT BETWEEN ('yKH{r-a4') AND (-1.85033453E8)) THEN CASE WHEN x'6227' THEN NULL END ELSE (('') BETWEEN (x'8438461b') AND (x'')) END); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ('6''轍9{'); -- 0ms;
SELECT COUNT(*) OVER () FROM vt1 WHERE (UPPER((('0.6413469618359192') NOT BETWEEN (NULL) AND (-1.721661597E9)))); -- 1ms;
SELECT DISTINCT CASE ((vt1.c1)<<(vt1.c1))  WHEN CASE WHEN '0.03818366388674721' THEN vt1.c0 END THEN ((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) END FROM vt1 WHERE ((((('') NOT BETWEEN (x'ba4b9a07') AND (''))) ISNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN CAST(vt1.c1 AS NUMERIC) ELSE ROUND(vt1.c1, vt1.c1) END FROM vt1; -- 1ms;
SELECT DISTINCT COUNT((((vt1.c0))>((vt1.c0)))) COLLATE RTRIM, NULL, vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT AVG(((vt1.c0)GLOB(vt1.c1))), ((((vt1.c1 IN ())))=((x''))), (((vt1.c1)) NOT BETWEEN (((vt1.c1 IN (vt1.c1)))) AND ((NULL))) FROM vt1 WHERE ((((NULL IN ())) BETWEEN ((+ (x''))) AND ((- (0.5300575627756661))))) GROUP BY (((vt1.c0)|(vt1.c1)) IN (((vt1.c0)<=(vt1.c0)))) HAVING (NOT (vt1.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (((vt1.c0) IS TRUE) IN ()) FROM vt1 WHERE (ABS(DISTINCT x'' COLLATE RTRIM)); -- 0ms;
SELECT ((((((vt1.c0)||(vt1.c0)))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR(((vt1.c1) IS TRUE))) FROM vt1; -- 0ms;
SELECT ALL vt1.c0, (+ (vt1.c1)), (((CAST(vt1.c0 AS BLOB), CAST(vt1.c1 AS BLOB), '1416933077'))>=((((vt1.c1) ISNULL), MAX(vt1.c0), vt1.c1 COLLATE NOCASE))) FROM vt1; -- 0ms;
SELECT DISTINCT NULL, (((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), HEX(vt1.c1), '-1820890370')) AND (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), ((vt1.c0) IS TRUE), ((((((((vt1.c0)AND(vt1.c1)))AND(x'')))AND(vt1.c0)))OR(vt1.c0))))), (vt1.c0 IN (vt1.c0)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0)IS NOT(0.24286897970798071)), ((((x'')OR(vt1.c1)))IS(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))), '295959257' FROM vt1; -- 0ms;
SELECT DISTINCT CAST(MIN(vt1.c1) AS TEXT) FROM vt1 WHERE (CAST(CASE WHEN 1914145875 THEN '-564138378' ELSE '' END AS REAL)); -- 0ms;
SELECT ALL (~ (((((NULL)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1; -- 1ms;
SELECT DISTINCT (NOT (vt1.c0)) COLLATE RTRIM, vt1.c1, LAG(LOWER((vt1.c1 IN ())), (((vt1.c1) NOT NULL) IN ()), ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((NULL)>>(vt1.c1))) AND (vt1.c1 COLLATE NOCASE))) OVER () FROM vt1 WHERE ((((((((('~4MY' COLLATE BINARY)AND(((0Xffffffffcb421292) NOT NULL))))OR(((((((((NULL)OR(0.8010719161083218)))OR(NULL)))OR('824611111')))AND(NULL)))))AND(UPPER(DISTINCT x'e352e52c'))))OR(CASE -5.64138378E8  WHEN 0.8756367241882894 THEN 0.3719920836209518 ELSE 0.5784181495118714 END))); -- 0ms;
SELECT ALL ((x'') NOT NULL), COUNT((~ (vt1.c1))), CAST((vt1.c1 IN ()) AS NUMERIC) FROM vt1 WHERE ((~ (CASE WHEN 0.692786608720255 THEN -1737172581 WHEN 0.13651565212433336 THEN '0.7257641350982564' WHEN NULL THEN NULL ELSE NULL END))); -- 0ms;
SELECT ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c1 AS INTEGER) AS INTEGER) FROM vt1; -- 0ms;
SELECT DISTINCT ABS(json_remove(vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0)) FROM vt1;SELECT ((((vt1.c1)AND(vt1.c1)))<=((vt1.c0 IN (vt1.c0)))) FROM vt1 WHERE (0.6572886538611595 COLLATE RTRIM) GROUP BY (vt1.c0 COLLATE RTRIM IN ()); -- 0ms;
SELECT (((('H\nFJ')/(vt1.c0)))LIKE(vt1.c0)) FROM vt1; -- 0ms;
SELECT FIRST_VALUE(((((NULL)AND(CAST(vt1.c1 AS INTEGER))))OR(CAST(vt1.c0 AS NUMERIC)))) OVER (), vt1.c1, (((((vt1.c0)) BETWEEN ((x'e1e15134')) AND ((vt1.c0))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) FROM vt1 WHERE (((((x'')<>(2107316675))) BETWEEN (CAST('' AS REAL)) AND (((('-564138378'))<=((x'')))))); -- 1ms;
SELECT ALL SUM((- (vt1.c0)) COLLATE NOCASE) OVER (), GROUP_CONCAT(ABS(DISTINCT vt1.c0)) OVER (), COUNT(*) FROM vt1 WHERE (((NULLIF(DISTINCT '0.5250189164492728', '-54288895'))GLOB((((((((('+-tᗈ<xS5')OR('1X䴯S[')))OR(0xff3a016)))OR(x'')))OR(NULL))))); -- 0ms;
SELECT ALL (((vt1.c0)) BETWEEN (((+ (vt1.c1)))) AND ((x''))), x'' COLLATE NOCASE, GROUP_CONCAT(((vt1.c1)%(vt1.c1))) OVER () FROM vt1 WHERE (TYPEOF(((x'cc7b') IS TRUE))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT CAST('-366190537' AS REAL), ((((vt1.c0) IS TRUE))IS NOT((NOT (1020127770)))), (~ (CASE WHEN vt1.c0 THEN vt1.c1 END)) FROM vt1 GROUP BY UNICODE('-1854203446') HAVING TRIM(DISTINCT CAST(vt1.c0 AS INTEGER), CASE vt1.c0  WHEN vt1.c0 THEN x'fc79' ELSE vt1.c0 END); -- 0ms;
SELECT DISTINCT ((655940629)+((+ (vt1.c0)))) FROM vt1 LIMIT 843889622; -- 0ms;
SELECT DISTINCT ((((vt1.c0)>(vt1.c0)))>((+ (vt1.c0)))) FROM vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE), CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN 0Xffffffff93776afe ELSE vt1.c0 END, ((vt1.c1) IS TRUE))) AND (((vt1.c1 IN ()), (('35850468')==(vt1.c0)), (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c1, 0.9354795925052691)) AND ((vt1.c0, vt1.c1, vt1.c1)))))) FROM vt1 WHERE (CAST(CAST(',<j?' AS REAL) AS INTEGER)) LIMIT -940394609 OFFSET 689221258; -- 0ms;
SELECT DISTINCT AVG((((vt1.c1))<=((vt1.c1)))) OVER ( ORDER BY (NOT (((((0.2682496203167988)AND(vt1.c0)))OR(vt1.c0)))) ASC), CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END ELSE CAST(vt1.c1 AS REAL) END, ((((vt1.c1)>(vt1.c0)))<<(CAST(0.4939815208518219 AS INTEGER))) FROM vt1; -- 0ms;
SELECT DISTINCT COUNT((('-884862318') BETWEEN ('') AND (vt1.c1))) FROM vt1; -- 0ms;
SELECT ((((vt1.c0)%(vt1.c1)))<=(((0.03355209288321781) NOT BETWEEN (vt1.c0) AND (x'')))) FROM vt1; -- 0ms;
SELECT ALL (((((vt1.c1) NOTNULL)))==((CAST('' AS INTEGER)))), COALESCE(((vt1.c1)=(vt1.c0)), ((vt1.c0)AND(vt1.c0))), vt1.c0, (((((((((NOT (vt1.c1)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END)))AND(ABS(vt1.c0))))AND(json_array_length(vt1.c1, vt1.c0))))AND(vt1.c1)), TRIM(DISTINCT ((((vt1.c0)AND('-329242388')))OR(vt1.c0)), (~ (vt1.c0))) FROM vt1 ORDER BY CAST(((vt1.c0)%(vt1.c1)) AS TEXT);SELECT 0.8628118980343944 FROM vt1 GROUP BY vt1.c1 COLLATE NOCASE COLLATE RTRIM, (((((~ (vt1.c0)))AND(((vt1.c0)&(NULL)))))OR(vt1.c1)), CAST(x'' AS INTEGER) HAVING CASE WHEN COUNT(x'cf16') THEN HEX(DISTINCT vt1.c0) ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END; -- 0ms;
SELECT ALL ((vt1.c0) NOT BETWEEN (vt1.c1) AND (x'')) COLLATE NOCASE FROM vt1 WHERE ((((NULL) IS FALSE) IN (LIKELIHOOD('-2084371351', 0.7089170953096814)))) GROUP BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (NULL) AND (((NULL) NOTNULL))); -- 0ms;
SELECT DISTINCT ((vt1.c1 COLLATE RTRIM)<((+ (vt1.c1)))) FROM vt1 WHERE (((LTRIM('1707493343'))/('KqHDvQ䳤E2'))); -- 0ms;
SELECT ALL (NOT (UNLIKELY(DISTINCT vt1.c0))) FROM vt1 WHERE (((((((((((((((NULL)<<(NULL)))AND((1536801358 IN (0.030453810968244177)))))OR((((x'', -884862318, NULL, '1438055775', x'')) NOT BETWEEN (('>P', 0.5185034176332892, x'aa22f120', 'r', x'eadd')) AND ((NULL, 0xffffffff9874d99b, 0.995289214994611, x'50a2', '-841048109'))))))AND((('_)')IS(NULL)))))AND(((0.9576246520483257)>>(x'')))))AND(CAST(x'' AS INTEGER))))OR('-2048590551'))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c1)IS(vt1.c0)) THEN vt1.c1 ELSE (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN (('1914145875', vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) END FROM vt1; -- 0ms;
SELECT PERCENT_RANK() OVER (), ((x'')<<(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)), ((x'3218') NOT NULL) FROM vt1 WHERE (((((0.48166921208090274)>=(x''))) IS FALSE)); -- 0ms;
SELECT 0.12999562618798377 COLLATE NOCASE, CUME_DIST() OVER (), NULL FROM vt1 GROUP BY ((((((((vt1.c1)OR(x'')))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)) COLLATE BINARY HAVING ((((('0.432568271204'))>((vt1.c1))))OR(vt1.c0)); -- 0ms;
SELECT ALL (((('kJD}.\r.㥩') NOT NULL))>(((vt1.c1)||(vt1.c1)))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((('m\'))>((vt1.c1))))OR(vt1.c0 COLLATE BINARY)) FROM vt1; -- 0ms;
SELECT ALL NTILE(CAST(((0Xffffffff99618763)LIKE(vt1.c0)) AS TEXT)) OVER () FROM vt1;SELECT DISTINCT vt1.c1, SUM(((vt1.c1)OR(vt1.c1))) OVER (), json_extract(((vt1.c1) IS FALSE), COUNT(vt1.c1)) FROM vt1;SELECT (- ('0.5300575627756661')) FROM vt1 WHERE (((CAST('' AS INTEGER))||(NULL COLLATE RTRIM))) ORDER BY ((((x'')AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))AND(NULL)))OR(vt1.c1)))))AND(CASE WHEN vt1.c1 THEN x'' ELSE '1577808347' END)) ASC; -- 0ms;
SELECT ((((((((LIKELIHOOD(DISTINCT vt1.c0, 0.9691696005725043))OR(vt1.c0 COLLATE BINARY)))AND((- (vt1.c0)))))AND(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)) FROM vt1 WHERE (((((((((((((x'2f25')AND(0.9734465100459274)))OR(x'')))AND(-7.28465926E8)))AND(NULL)))OR(((((((((x'')AND('2131279865')))AND('-249090183')))OR(NULL)))OR(0x267af3c7)))))OR(PRINTF('-1631650727')))); -- 0ms;
SELECT CAST((((vt1.c1, vt1.c0, vt1.c0))>((vt1.c0, vt1.c1, vt1.c0))) AS BLOB), vt1.c1, NULL FROM vt1 LIMIT 476766286 OFFSET -1739335410; -- 0ms;
SELECT DISTINCT CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (vt1.c1 IN ()) ELSE 0.2371721040107334 END FROM vt1 WHERE ((- (((NULL) NOT BETWEEN (x'') AND (''))))); -- 0ms;
SELECT DISTINCT ((+ (vt1.c0)) IN (((((((((vt1.c0)OR(NULL)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) FROM vt1 WHERE (CAST(('Oꅯ' IN ()) AS NUMERIC)); -- 0ms;
SELECT ALL TOTAL(json_array_length(353111584)) OVER (), (((~ (vt1.c1))) IS FALSE), 0.019673389916653794, ((COUNT(*))<(CAST('0.6798974713889712' AS INTEGER))), NTILE(CAST((((vt1.c1))<=((vt1.c0))) AS NUMERIC)) OVER () FROM vt1 GROUP BY vt1.c1 LIMIT -1896011585 OFFSET 1339830903;SELECT CAST(((vt1.c1) ISNULL) AS REAL), NTILE(TYPEOF(DISTINCT CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END)) OVER (), CASE ((vt1.c1) ISNULL)  WHEN vt1.c1 THEN ((vt1.c1) NOT NULL) END FROM vt1 WHERE ((((x'', '', '2076837676', NULL, NULL)) BETWEEN ((load_extension('-134879982'), ((((((((x'')OR(x'')))OR(NULL)))AND(NULL)))AND(x'f5cc6384')), (0.5089181299438584 IN (x'', '-1825300489')), ((((0X2b97df92)OR('')))AND(x'')), (+ (0xffffffffd4947dfa)))) AND (((NULL IN ()), (('')IS(x'aef2')), ((-2.57440109E8)>(x'39e4b264')), ((NULL) NOT BETWEEN (NULL) AND ('H	P1')), CAST(x'' AS REAL)))));SELECT DISTINCT (NOT (((((x'2bbd')OR(vt1.c1)))AND(vt1.c0)))) FROM vt1 WHERE ((((('as')OR(NULL)))OR(',\')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (- (CAST(vt1.c1 AS BLOB))), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM, ((vt1.c0 COLLATE BINARY) NOT BETWEEN ((NOT ('108632872'))) AND (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) FROM vt1 WHERE (1558001780); -- 0ms;
SELECT DISTINCT vt1.c1, (((vt1.c1 IN ())) NOTNULL), UPPER(DISTINCT vt1.c0) FROM vt1 WHERE (CAST((0x11a3fad9 IN (x'b820')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((x'5780')&(vt1.c1)) COLLATE BINARY, '1715543879', (((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((MAX(vt1.c1), (((x'')) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)>=(vt1.c0)))) AND ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)), vt1.c1, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) FROM vt1 WHERE ((((0.4964841175760234) NOT BETWEEN (NULL) AND ('')) IN ())); -- 0ms;
SELECT ALL NTH_VALUE(x'6363', ('75111799' IN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) OVER () FROM vt1;SELECT DISTINCT MAX((((vt1.c1))<((vt1.c0)))) FROM vt1; -- 0ms;
SELECT ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)|(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) FROM vt1; -- 0ms;
SELECT AVG(vt1.c0) FROM vt1; -- 1ms;
SELECT DISTINCT vt1.c1 FROM vt1; -- 0ms;
SELECT LEAD(vt1.c0, ((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(174592908)) COLLATE RTRIM, vt1.c1) OVER () FROM vt1; -- 2ms;
SELECT ALL (('')||(CASE WHEN x'7040' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)), FIRST_VALUE(((((vt1.c1, vt1.c1, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))) IN (((vt1.c1) IS TRUE), (vt1.c1 IN (vt1.c1, vt1.c0))))) OVER (), JULIANDAY(vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE FROM vt1 WHERE ((x'' COLLATE NOCASE IN ((('f_')-(0.15813700288141774))))) GROUP BY (NULL IN ()) HAVING COUNT(*); -- 0ms;
SELECT DISTINCT (((CAST(vt1.c1 AS TEXT)))>(((vt1.c0 IN ())))) FROM vt1 WHERE (UNLIKELY(CASE WHEN -3.29242388E8 THEN '1985070409' END)); -- 0ms;
SELECT CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN MIN(vt1.c1) WHEN vt1.c1 THEN ((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)) WHEN json_object(vt1.c1, vt1.c1) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END, CASE CASE WHEN vt1.c0 THEN vt1.c1 END  WHEN vt1.c0 COLLATE BINARY THEN (('-1354758156')==(vt1.c1)) ELSE ((((((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)) END, ((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))AND((~ (0.7106017237178723)))))OR(vt1.c0)) FROM vt1 WHERE ((NOT ('')) COLLATE BINARY) GROUP BY MIN(vt1.c1, CAST(vt1.c0 AS TEXT)), (((CASE WHEN vt1.c1 THEN NULL END))<(((+ (vt1.c1))))), CASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c1) IS FALSE) ELSE ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END HAVING ((((vt1.c1)&(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c0, vt1.c1, vt1.c0)))));SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (vt1.c1)) FROM vt1 WHERE (CASE WHEN ('-1575994134' IN ()) THEN (('?1') NOT BETWEEN (x'') AND (x'')) WHEN CAST(x'' AS BLOB) THEN ((1.534229623E9)LIKE(NULL)) WHEN ((NULL)<<(0.24252949305199578)) THEN ((x'e70d')IS NOT(0.2825886998857837)) ELSE TYPEOF(DISTINCT NULL) END); -- 0ms;
SELECT DISTINCT CASE vt1.c0  WHEN (vt1.c1 IN ()) THEN ((-2.048590551E9)>(vt1.c0)) WHEN vt1.c0 THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) END FROM vt1 WHERE (CAST(CASE WHEN 0X1 THEN '' END AS NUMERIC)) GROUP BY ((LIKE(vt1.c0, vt1.c1)) NOTNULL) HAVING CASE WHEN ((0.28641742992806596)>>(vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt1.c0 END END; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END THEN ((vt1.c0)-(vt1.c1)) END, (~ (CASE WHEN vt1.c0 THEN vt1.c1 END)), x'', ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))AND('')))AND((- (vt1.c1)))), (~ ((vt1.c1 IN (vt1.c0)))) FROM vt1 WHERE ((((-1572998858 IN ())) NOTNULL)); -- 0ms;
SELECT ALL (((vt1.c0)<<(x'c580')) IN (CAST(vt1.c0 AS NUMERIC))), (((NOT (vt1.c1)))=(TOTAL(vt1.c1))), CAST(vt1.c0 COLLATE NOCASE AS BLOB), CAST(vt1.c1 AS REAL), COUNT(*) OVER ( ORDER BY ((vt1.c0) ISNULL) COLLATE RTRIM, LIKELY(((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))) DESC  NULLS FIRST, ((('824611111' IN ())) IS FALSE) ASC) FROM vt1 WHERE ((((-1820890370) NOT NULL) IN (((NULL) BETWEEN (NULL) AND (0.6806461414677277))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)OR(CAST(vt1.c0 AS TEXT))))AND(((vt1.c1)+(vt1.c0)))), (('698987696')<(vt1.c1)) COLLATE BINARY, CASE WHEN ((vt1.c1)<(vt1.c0)) THEN ((vt1.c0) NOTNULL) END FROM vt1; -- 0ms;
SELECT DISTINCT AVG((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((x'')))), (~ (((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))), (((((((((- (vt1.c0)))OR(((vt1.c1)|(vt1.c0)))))AND((vt1.c0 IN ()))))OR(json_insert(vt1.c1, vt1.c1, vt1.c1))))OR('')) FROM vt1 WHERE (((CASE WHEN NULL THEN NULL WHEN 'WJ5L~<Pq1' THEN NULL WHEN NULL THEN 0.05309136748814913 END) NOT BETWEEN (MIN('5N''ousn┒', 0.881431508449903, NULL, 0.8325802951998447)) AND ('1092904757' COLLATE RTRIM))) GROUP BY CAST(((vt1.c1)LIKE(vt1.c0)) AS REAL); -- 0ms;
SELECT ((((('-1721661597')+(vt1.c0))))<((vt1.c1 COLLATE NOCASE))) FROM vt1; -- 1ms;
SELECT DISTINCT ((NULL)==(MIN(vt1.c0))) FROM vt1 ORDER BY (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) IN ()); -- 0ms;
SELECT ALL ((((0xffffffffc9600e1b) NOT NULL)) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))) AND (((vt1.c0)>>(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN ()))>>(vt1.c0)) FROM vt1; -- 0ms;
SELECT COUNT(*) OVER () FROM vt1; -- 0ms;
SELECT CAST(((vt1.c0)>=(vt1.c1)) AS INTEGER) FROM vt1; -- 0ms;
SELECT x'' FROM vt1 WHERE (((((NULL) NOTNULL))=(((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c1)/(-1979955304)) AS TEXT), CAST(((vt1.c1)/(vt1.c0)) AS REAL), ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN (((vt1.c0) ISNULL)) AND (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))), SUM(CAST(vt1.c1 AS INTEGER) COLLATE NOCASE), (((NOT (vt1.c0)))/(((((vt1.c1)OR(vt1.c1)))OR('1362734107')))) FROM vt1 LIMIT -1631650727; -- 0ms;
SELECT DISTINCT ((((vt1.c1) IS FALSE)) NOT BETWEEN ((+ (vt1.c0))) AND ((vt1.c0 IN (vt1.c1)))), (- ((vt1.c0 IN ()))), (((((vt1.c1))!=((vt1.c0))))OR((vt1.c1 IN (vt1.c1)))), (HEX(vt1.c0) IN (((vt1.c1) NOT NULL), vt1.c1 COLLATE NOCASE)), ((vt1.c1 COLLATE NOCASE) BETWEEN (TRIM(vt1.c1, vt1.c0)) AND (CAST(vt1.c1 AS BLOB))) FROM vt1; -- 0ms;
SELECT (AVG(vt1.c1) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))AND(0x7ade4d2f)))AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN x'' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND(((1.535455921E9) IS FALSE))))OR((vt1.c0 IN ()))) FROM vt1 WHERE (((((('-974049111') NOT NULL), (0Xffffffffd0d5e2c3 IN ()), ((('6WpJ珴E')) NOT BETWEEN ((0.11906577948775499)) AND (('''YaE	z&\n{')))))<=((NULL, (~ (NULL)), ((1136408937)>(NULL)))))); -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1; -- 0ms;
SELECT ((vt1.c1 COLLATE BINARY)IS(NULL)), vt1.c1, (((~ (vt1.c0)))AND((+ (vt1.c1)))) FROM vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt1.c0 COLLATE RTRIM) COLLATE BINARY FROM vt1 WHERE ((((NULL IN ()))GLOB(CASE WHEN '1577808347' THEN 0.6293878066971941 ELSE NULL END))) ORDER BY ((vt1.c1)OR((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c1)))))  NULLS LAST; -- 0ms;
SELECT ALL (((-115263513)) BETWEEN ((0.3654703742089759)) AND (((((vt1.c0, x'', vt1.c1))!=(('鲘h', vt1.c0, -2.49090183E8)))))) FROM vt1 GROUP BY ((((vt1.c1)OR(vt1.c1))) ISNULL), ((vt1.c0)>(vt1.c1)) COLLATE RTRIM, ((((vt1.c1)!=(vt1.c0))) BETWEEN ((((vt1.c0))>=((vt1.c1)))) AND (vt1.c1)) HAVING ('' IN ()); -- 1ms;
SELECT ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END) NOTNULL), ((((vt1.c0) ISNULL)) NOT BETWEEN ('P/') AND ((vt1.c0 IN ()))), GROUP_CONCAT(((vt1.c1)/(x''))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c1)>(vt1.c1)))IS(CAST(vt1.c1 AS BLOB))), 0.2454096797155565, CAST(vt1.c1 AS BLOB), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) COLLATE BINARY, LAST_VALUE('') OVER () FROM vt1; -- 0ms;
SELECT ALL CAST((NOT ('JI.7/')) AS INTEGER) FROM vt1 WHERE (((('-121594356')&(NULL)) IN (CAST(0.5037796711222027 AS BLOB)))); -- 0ms;
SELECT (((- (NULL))) NOT BETWEEN (TOTAL(vt1.c1)) AND (LIKELY(vt1.c1))) FROM vt1; -- 0ms;
SELECT NULL, vt1.c0 COLLATE BINARY, vt1.c0 FROM vt1 WHERE ((CAST('' AS REAL) IN ())); -- 0ms;
SELECT DISTINCT ((((vt1.c0))>=((vt1.c1))) IN (vt1.c1)) FROM vt1 LIMIT 1445389344; -- 0ms;
SELECT ALL ((((vt1.c1)=(vt1.c1)))GLOB((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), '267624470', CASE WHEN (('1tdmo)2ㄏ') BETWEEN (vt1.c1) AND (vt1.c0)) THEN TRIM(DISTINCT x'24eb') ELSE (vt1.c0 IN ()) END FROM vt1; -- 0ms;
SELECT ALL CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN CAST(vt1.c1 AS TEXT) END, (((((((((((((((vt1.c0, vt1.c1, vt1.c1))<=((vt1.c0, -3.66190537E8, vt1.c0))))AND(((vt1.c1) ISNULL))))OR((vt1.c0 IN (vt1.c1)))))AND(vt1.c1 COLLATE BINARY)))AND((((vt1.c1)) BETWEEN ((x'')) AND (('\WY/4.4'))))))AND(((vt1.c1)<(vt1.c1)))))AND('	8rAmw~')), CHANGES() FROM vt1; -- 0ms;
SELECT DISTINCT (((~ (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (COUNT(vt1.c0))), ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) ISNULL), CAST(HEX(vt1.c1) AS NUMERIC) FROM vt1; -- 1ms;
SELECT DISTINCT CAST(TRIM(DISTINCT vt1.c1, vt1.c0) AS REAL) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(AVG(vt1.c0) AS REAL) FROM vt1 WHERE ((NOT ((((106371195, '-1299814978', 0.7224765216572493, 0.2673658985012213, '?k1h2')) BETWEEN ((89475190, NULL, x'954a', x'', NULL)) AND ((NULL, NULL, 0.20899962232341696, 0.3673722562468774, 0.8400110593503695)))))) ORDER BY ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL), ((NULL) BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))))  NULLS LAST, ((vt1.c0) IS FALSE) LIMIT 468762678; -- 0ms;
SELECT ALL ((TRIM(vt1.c1, vt1.c0)) NOT NULL) FROM vt1 WHERE (((CAST(0X12e9414f AS NUMERIC))*((((('Oꅯ')AND(0.2454096797155565)))OR('2107316675'))))); -- 0ms;
SELECT DISTINCT vt1.c0, TOTAL_CHANGES(), ((((((((((((((x'')AND(x'')))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))GLOB(MIN(vt1.c1))), vt1.c1 COLLATE RTRIM, ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) NOT NULL) FROM vt1 WHERE (((CAST(NULL AS REAL))AND(CAST('-447722268' AS NUMERIC)))) GROUP BY ((vt1.c1 COLLATE BINARY)IS NOT(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))), ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1))) NOT BETWEEN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))) AND ((vt1.c0 IN ()))), (((x'') NOTNULL) IN (CAST(2.061389103E9 AS TEXT), vt1.c1 COLLATE NOCASE)); -- 0ms;
SELECT ((vt1.c1)<=(((vt1.c0) NOT BETWEEN (NULL) AND (NULL)))), vt1.c1, SUM(TOTAL(((vt1.c1) ISNULL))) FROM vt1;SELECT CAST(LIKELY(NULL) AS TEXT) FROM vt1; -- 0ms;
SELECT (((~ (vt1.c1)))IS NOT(CAST(vt1.c1 AS TEXT))) FROM vt1; -- 0ms;
SELECT ALL CAST((vt1.c1 IN ()) AS REAL) FROM vt1; -- 0ms;
SELECT CAST((+ (vt1.c1)) AS TEXT), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)) COLLATE NOCASE, (((- (vt1.c0))) ISNULL) FROM vt1 WHERE (((NULL) IS TRUE)); -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1 GROUP BY (((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((('1136408937') NOT BETWEEN (vt1.c1) AND (vt1.c1)), (+ (vt1.c0)), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((vt1.c1)/(vt1.c0)), x'', CASE WHEN vt1.c1 THEN vt1.c1 ELSE x'b2b5' END))) HAVING CAST(((vt1.c1)||(vt1.c1)) AS INTEGER); -- 0ms;
SELECT ((TRIM(vt1.c1)) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c1 COLLATE BINARY)) FROM vt1 WHERE (((((((0.2454096797155565)OR('-1363490221')))AND(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT (((vt1.c0)AND(vt1.c0)) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT CHANGES() FROM vt1 WHERE ('7PQ') GROUP BY ((((((vt1.c1)OR(vt1.c0)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND('1356710293')); -- 0ms;
SELECT CAST((~ (vt1.c0)) AS NUMERIC) FROM vt1 WHERE ('2096218470'); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE vt1.c1  WHEN ((0.5913126049912272)IS(vt1.c0)) THEN TYPEOF(DISTINCT vt1.c1) WHEN ((vt1.c0) BETWEEN ('1836800030') AND (vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) THEN ('>3/Y' IN ()) WHEN ((vt1.c1) ISNULL) THEN ((vt1.c0) IS FALSE) WHEN UNICODE(vt1.c0) THEN (((vt1.c1))>=((vt1.c1))) ELSE '347618689' END) OVER (), COUNT(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.5913126049912272 THEN vt1.c1 ELSE vt1.c1 END), LAST_VALUE(vt1.c0) OVER () FROM vt1; -- 0ms;
SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c1))))|(LIKELY(vt1.c1))), CASE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1))  WHEN 0.8207165365259707 THEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) END, LEAD(((((((vt1.c1)IS(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(MIN(vt1.c0, vt1.c1))), ((~ (vt1.c1)) IN (LIKE(vt1.c0, vt1.c1, '|'))), '1996008403') OVER () FROM vt1 WHERE (((((CAST(0.5784181495118714 AS TEXT))AND((('s9R2Zx6M') NOTNULL))))AND(CAST('0.5663888882562808' AS INTEGER)))); -- 0ms;
SELECT CASE WHEN vt1.c1 THEN vt1.c0 END COLLATE BINARY FROM vt1 LIMIT -2062769247; -- 0ms;
SELECT DISTINCT ((((vt1.c0)&(vt1.c1))) NOT BETWEEN ((+ (vt1.c1))) AND (vt1.c0)), vt1.c0, RANK() OVER () FROM vt1 WHERE (CASE WHEN (('') IS TRUE) THEN CASE WHEN 0.05309136748814913 THEN NULL ELSE NULL END ELSE 0.6210464046224377 END) LIMIT -1358171042 OFFSET -1979884668; -- 0ms;
SELECT DISTINCT '936626835' FROM vt1 WHERE (((('1715850607')<(x'')) IN ())) ORDER BY ((vt1.c0)|(((vt1.c1)!=(vt1.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT SUM(((vt1.c1) ISNULL)) FROM vt1 GROUP BY (((((+ (vt1.c1)))OR(((((((((vt1.c1)AND(vt1.c0)))OR(0.47222660871253086)))AND(vt1.c0)))OR(vt1.c1)))))AND(CASE vt1.c1  WHEN vt1.c0 THEN NULL ELSE '-1721661597' END)), (((vt1.c0)) BETWEEN ((x'')) AND ((((vt1.c0) IS FALSE)))), CASE WHEN vt1.c1 THEN NULL END COLLATE RTRIM, ((((~ ('SSCK')), ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)), ABS(0X77444c96), ((((vt1.c1)AND('f_')))OR(vt1.c1)), 0.11345195437112965 COLLATE BINARY))>=(((vt1.c1 IN (vt1.c0, vt1.c1)), ((vt1.c0)%(vt1.c1)), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c1)/(x'e71b'))))), CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c1)LIKE(vt1.c1)) THEN (vt1.c0 IN (vt1.c1)) WHEN vt1.c0 COLLATE BINARY THEN (NOT (vt1.c1)) WHEN CAST(vt1.c1 AS NUMERIC) THEN ((vt1.c0) IS TRUE) ELSE ((vt1.c0)>(vt1.c1)) END HAVING (vt1.c1 COLLATE NOCASE IN ()); -- 0ms;
SELECT ALL ((vt1.c0)<=(((vt1.c0) IS FALSE))) FROM vt1 WHERE ((~ (((NULL)<(x''))))) GROUP BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) AND ((+ (vt1.c0)))); -- 0ms;
SELECT CAST((((vt1.c0))>((vt1.c0))) AS REAL), (((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS INTEGER))), COUNT(*) OVER (), vt1.c1, ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN ())) ISNULL) FROM vt1; -- 0ms;
SELECT ALL ((((((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END)OR(CAST(vt1.c1 AS INTEGER))))AND(MIN(vt1.c0))))AND(((vt1.c0)==(vt1.c0)))))AND((vt1.c0 IN ()))), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM, vt1.c0 FROM vt1 WHERE ((NOT (NULL COLLATE NOCASE))); -- 1ms;
SELECT ALL CAST(((vt1.c0) IS TRUE) AS TEXT) FROM vt1; -- 0ms;
SELECT (((vt1.c1 IN ()))IS NOT(((vt1.c1) IS FALSE))), (CAST(vt1.c1 AS NUMERIC) IN (TOTAL(vt1.c1))), ((CASE WHEN vt1.c1 THEN vt1.c0 END) BETWEEN (GROUP_CONCAT(vt1.c1)) AND (((vt1.c1) NOT NULL))), CAST(vt1.c1 AS REAL) COLLATE NOCASE, (- (CAST(vt1.c1 AS INTEGER))) FROM vt1 GROUP BY (((vt1.c1 IN ()))<=((- (vt1.c1)))) HAVING CAST(((vt1.c0) IS TRUE) AS REAL) ORDER BY (((((vt1.c0) IS TRUE)))<=((INSTR(vt1.c0, vt1.c1)))) DESC  NULLS FIRST, ((((((vt1.c0) NOT NULL))OR('-1671047572')))AND((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))))); -- 0ms;
SELECT CASE WHEN (~ (vt1.c0)) THEN (+ (vt1.c1)) END, (- (CASE WHEN x'' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN 'mU' END)), ((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt1.c0) NOT NULL)) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT ALL ((vt1.c1 COLLATE NOCASE) IS FALSE) FROM vt1 LIMIT -1897690276 OFFSET 245272397; -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS INTEGER) FROM vt1 LIMIT -206413745; -- 0ms;
SELECT DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c1))<((0x102c009a))), NULL, ((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))) AND ((((vt1.c0)*(vt1.c0)), COUNT(vt1.c1), ((vt1.c1) BETWEEN (x'') AND (vt1.c0))))) FROM vt1 WHERE (((((((235990465)>(x'')))OR(x'' COLLATE RTRIM)))OR(IFNULL(DISTINCT 0.8661283957483213, NULL)))); -- 0ms;
SELECT DISTINCT -121594356 FROM vt1 GROUP BY 1290302566, ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) NOTNULL), CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) ELSE ((vt1.c1)*(vt1.c0)) END;SELECT DISTINCT TYPEOF(MAX(vt1.c0)), UNLIKELY((vt1.c0 IN ())), FIRST_VALUE(CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) OVER () FROM vt1 WHERE (DATE((('-366190537')!=(NULL)), NULLIF(DISTINCT x'', x''), x'cf7e', (('~4MY')<<(-1.39404766E9)), CASE WHEN '-249090183' THEN x'' WHEN NULL THEN x'' WHEN NULL THEN '-90163059' END)); -- 0ms;
SELECT DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT (+ (((vt1.c1)IS(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((1.552345515E9)LIKE(x'')) AS BLOB)); -- 1ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN '(	6' ELSE 0.16140395474624603 END)==(CAST(vt1.c0 AS TEXT))), (((- (vt1.c1))) IS FALSE), NULL, ((((vt1.c1) ISNULL)) NOTNULL), (COUNT(*) IN ()) FROM vt1 WHERE ((~ (COALESCE('925970703', NULL)))); -- 0ms;
SELECT ((vt1.c1 IN (vt1.c0, 0Xffffffffbd2c1834)) IN ()) FROM vt1 WHERE (0.8472866269240908); -- 0ms;
SELECT (((vt1.c1 IN (vt1.c1))) IS TRUE), x'', x'' COLLATE RTRIM FROM vt1 WHERE (CAST(('423302423' IN (NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ())) IS TRUE) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0, 1.534229623E9, vt1.c0)) NOT BETWEEN (((((vt1.c0))<((vt1.c0))), GROUP_CONCAT(vt1.c1), CAST(1.416933077E9 AS INTEGER))) AND ((COUNT(vt1.c0), vt1.c1 COLLATE NOCASE, ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) FROM vt1 WHERE (((CASE WHEN 0.7593393270501609 THEN '403462445' END) NOT BETWEEN ((('U!~hn.C%D')LIKE('-2084371351'))) AND ((+ (NULL))))); -- 0ms;
SELECT DISTINCT ((((vt1.c1)IS(vt1.c0))) NOT BETWEEN ((vt1.c1 IN ())) AND ((((vt1.c1))>((vt1.c0))))), ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) BETWEEN (((vt1.c0)<(vt1.c1))) AND ((vt1.c1 IN ()))), CASE vt1.c1  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END THEN (+ (vt1.c0)) END FROM vt1 WHERE (((((((((((0.9120256735509749) NOTNULL))OR(UNLIKELY(DISTINCT x'7b69ceb1'))))AND(CAST(0.7538634001296982 AS TEXT))))OR(CASE WHEN 0.6903415382136606 THEN x'' END)))AND((+ (x''))))) GROUP BY x'' HAVING CASE WHEN vt1.c1 THEN (NOT (vt1.c1)) END; -- 0ms;
SELECT ALL UPPER(((vt1.c1) IS TRUE)), (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) IN ()), ((((vt1.c1 IN ())))>((vt1.c1 COLLATE RTRIM))) FROM vt1; -- 0ms;
SELECT DISTINCT STRFTIME((vt1.c0 IN ()), ((vt1.c1)AND(vt1.c0)), vt1.c1 COLLATE BINARY) FROM vt1 WHERE (CASE ((1.18215387E8)OR(NULL))  WHEN (((('-1260273128')AND(x'')))OR(0.49352447831680524)) THEN (NOT (0.1557334750978453)) ELSE ((('0.13651565212433336')) NOT BETWEEN ((-1.854203446E9)) AND ((x'7d01'))) END); -- 0ms;
SELECT ALL vt1.c0, GROUP_CONCAT((- (vt1.c1)) COLLATE NOCASE), x'' FROM vt1 WHERE (((0.6806461414677277)||('g5')) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE ((vt1.c1) NOTNULL)  WHEN vt1.c0 COLLATE NOCASE THEN SUM(vt1.c1) WHEN ((((vt1.c1)AND(vt1.c0)))OR(NULL)) THEN ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN vt1.c1 COLLATE RTRIM ELSE (x'' IN (vt1.c1, vt1.c0)) END FROM vt1 WHERE ((((('-1631650727') BETWEEN ('5荽~x]a4|d') AND ('K	[4OvA	暿')))IS(((541877479) NOTNULL)))); -- 0ms;
SELECT ((((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c0))) ISNULL) FROM vt1 ORDER BY vt1.c1 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (vt1.c1)) FROM vt1; -- 0ms;
SELECT ALL (((vt1.c1) NOTNULL) IN ()) FROM vt1 LIMIT -276794104; -- 0ms;
SELECT TOTAL(x'') OVER (), (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END, ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)), vt1.c1))<=(((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), COALESCE(DISTINCT vt1.c1, vt1.c0, vt1.c1, vt1.c1), '-121594356'))), '689221258' FROM vt1; -- 0ms;
SELECT ((((((((json_array_length(vt1.c0, vt1.c0))AND((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c1))))))AND(((vt1.c1) IS FALSE))))AND(COALESCE(-613427568, vt1.c0))))AND(TRIM(DISTINCT vt1.c0, vt1.c0))), ((vt1.c0 COLLATE BINARY) NOT BETWEEN (TRIM(vt1.c0, vt1.c0)) AND ((((vt1.c0))!=((vt1.c1))))), COUNT((((vt1.c0))>((vt1.c0)))) OVER () FROM vt1;SELECT DISTINCT (CASE WHEN vt1.c1 THEN vt1.c0 ELSE x'3f5d' END IN ((- (0.21896490559991777)))), (((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((CAST(vt1.c1 AS TEXT), TOTAL(vt1.c0), ((((((((vt1.c0)AND('gBWL''KG6')))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))) AND ((UPPER(DISTINCT vt1.c0), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (~ (NULL))))), 0.9294672794334015 FROM vt1 WHERE (CAST((((((((('-115263513')AND('')))AND(x'')))AND('hoI')))AND(0.3351127818732059)) AS BLOB)); -- 0ms;
SELECT vt1.c1 FROM vt1 WHERE (((0.3576781672493885) NOT BETWEEN (NULL) AND ('-1024663666')) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT ((+ (vt1.c1)) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (SUM(vt1.c1) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (- (((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))), COUNT(CAST(vt1.c0 AS REAL)) OVER (), AVG((~ (vt1.c1))) FILTER(WHERE (((+ (vt1.c1))) NOT BETWEEN (((((vt1.c1)OR(vt1.c0)))AND(vt1.c1))) AND ((('-587611250')!=(vt1.c0))))) OVER () FROM vt1 WHERE (CASE CAST(0.9575223838490028 AS NUMERIC)  WHEN (((0x6416880, '8\/8A', ''))=(('*''6Z', 0.41012892778319565, '䴯)'))) THEN ((0.5490124317979944) IS TRUE) WHEN ((((((((NULL)OR(NULL)))AND(NULL)))AND(NULL)))OR(0.6077230073327266)) THEN (x'' IN ()) WHEN ((x'') ISNULL) THEN (- ('/7]Qz度')) ELSE CAST(NULL AS NUMERIC) END); -- 0ms;
SELECT ALL CASE ((vt1.c1) IS TRUE)  WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1)&(vt1.c0)) END FROM vt1 WHERE (SQLITE_COMPILEOPTION_GET(0.26470053676119387)); -- 0ms;
SELECT DISTINCT (((((vt1.c1, vt1.c0, 812817080)) NOT BETWEEN ((vt1.c0, vt1.c0, 0.5090190779183456)) AND ((vt1.c0, NULL, vt1.c0))))<<(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)) FROM vt1 WHERE ((((0xfffffffff4236c05)) NOT BETWEEN ((((x'ae4a')*(-2.062769247E9)))) AND ((((NULL) BETWEEN (NULL) AND (0xffffffff9141440e)))))); -- 0ms;
SELECT DISTINCT ((((((vt1.c0) IS FALSE))OR(((vt1.c1)=(vt1.c0)))))AND((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), 0.5141791196334925, ((((vt1.c0) ISNULL))|(((vt1.c1)GLOB(vt1.c0)))) FROM vt1 WHERE (CAST('0.2941959741054523' AS BLOB)); -- 0ms;
SELECT DISTINCT ((((vt1.c0)/(vt1.c1)))<>('-308942249')), vt1.c0, ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)>=(NULL)) FROM vt1 ORDER BY CASE NULL  WHEN ((NULL)LIKE(vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) END ASC; -- 0ms;
SELECT DISTINCT (((((0.5081644475717118)AND(vt1.c1)))AND(vt1.c1)) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (((json_insert(vt1.c1, vt1.c0, vt1.c1), vt1.c1 COLLATE RTRIM, vt1.c1))!=(('1773995422', CAST(vt1.c0 AS NUMERIC), IFNULL(vt1.c0, vt1.c0)))), ((((vt1.c1) NOT NULL))IS NOT(1.136408937E9)), vt1.c0, AVG(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) OVER (), ((((((((((vt1.c0) NOT NULL))OR(((vt1.c1)=(vt1.c0)))))AND(((x'b7b7')OR(vt1.c0)))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))) FROM vt1;SELECT DISTINCT ((vt1.c1)IS(NULL)) FROM vt1 WHERE ((((((('?.UOFvwt')OR(163835330)))OR(NULL)))GLOB((x'' IN ('M''', 0.5636043631819603))))); -- 0ms;
SELECT vt1.c0, COUNT(vt1.c1 COLLATE NOCASE COLLATE NOCASE) OVER ( ORDER BY (NOT (vt1.c0)) COLLATE BINARY DESC), CAST((+ ('')) AS REAL) FROM vt1; -- 0ms;
SELECT ALL ((((((((NULL COLLATE BINARY)OR('')))OR((~ (vt1.c1)))))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0) ISNULL))), CASE WHEN CASE 858248434  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END THEN ((NULL) NOTNULL) ELSE NULL END, LEAD((((NOT (vt1.c1))) BETWEEN (CAST(vt1.c1 AS BLOB)) AND (((vt1.c1) IS TRUE))), IFNULL(DISTINCT (((vt1.c1))<((vt1.c0))), (~ (vt1.c0))), CAST(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC)) OVER () FROM vt1 LIMIT -1367624096 OFFSET 2023387364; -- 0ms;
SELECT DISTINCT ((((vt1.c1))<>((vt1.c0))) IN ()), CAST(((vt1.c0)IS NOT(vt1.c0)) AS BLOB), CAST(ABS(vt1.c1) AS REAL) FROM vt1 LIMIT 671566189 OFFSET 590151340; -- 0ms;
SELECT ((((vt1.c0)+(vt1.c0))) BETWEEN (((0.8886151398129678) IS TRUE)) AND (('-1183040585' IN (vt1.c0, vt1.c1)))) FROM vt1 WHERE (((((x'10fc') NOT BETWEEN (x'') AND ('261936233')))>=(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (NOT (TYPEOF(DISTINCT vt1.c1))), ((((x'')OR((vt1.c0 IN ()))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))), (((vt1.c1, 0.8485308127312626, vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE, GROUP_CONCAT(vt1.c0), ((vt1.c0) NOT NULL))) AND ((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)), (0.4906422126118717 IN ()), load_extension(vt1.c0, vt1.c0)))), ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))OR(vt1.c0)))AND('0.4939815208518219')), vt1.c0 FROM vt1 WHERE (TRIM('1534229623' COLLATE RTRIM, (('cp{ﾊ뙕#EX/')>=(NULL)))); -- 0ms;
SELECT ALL ((((vt1.c1)-(vt1.c1))) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))*(SUBSTR(vt1.c0, vt1.c0))) FROM vt1 WHERE ('-1825300489') ORDER BY ((((vt1.c0)OR(CASE vt1.c0  WHEN x'' THEN vt1.c1 END)))AND(CASE vt1.c1  WHEN vt1.c1 THEN '뛼?' END)) DESC; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1 ORDER BY (~ (CAST(vt1.c1 AS REAL)))  NULLS LAST; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1 WHERE ((+ (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((vt1.c1) NOTNULL) COLLATE BINARY FROM vt1 ORDER BY (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1))))<=(((((vt1.c1))==((vt1.c0)))))) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((vt1.c0) IS TRUE)) IS FALSE) FROM vt1 WHERE (TYPEOF(DISTINCT ((-1739526925) BETWEEN ('D\n5Nb') AND (x'83b2')))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (NULL) AND (vt1.c1)))/(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END)) FROM vt1; -- 0ms;
SELECT CAST((vt1.c0 IN ()) AS REAL) FROM vt1 WHERE (((((x'')%('')))%((('-1635521910')-(NULL))))) LIMIT 191055673; -- 0ms;
SELECT ALL ((x'34fb')>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))) FROM vt1 WHERE (((CASE WHEN NULL THEN -1182546366 ELSE x'' END) NOT NULL)) ORDER BY LIKELIHOOD(DISTINCT vt1.c1 COLLATE NOCASE, 0.7194298218844508), '271319194' DESC  NULLS FIRST, (((NOT (vt1.c1))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (INSTR(vt1.c0, vt1.c1))) ASC; -- 0ms;
SELECT ALL (((vt1.c0 IN ())) NOTNULL) FROM vt1 WHERE ((NOT ((x'' IN ())))); -- 0ms;
SELECT ALL 0Xfffffffff46cd965 FROM vt1 WHERE (CAST(((NULL) NOT BETWEEN (x'') AND (0.0714332075848968)) AS REAL)); -- 0ms;
SELECT ALL TOTAL(((vt1.c0)LIKE(vt1.c0))) OVER (), COUNT(*) OVER (), ((CAST(vt1.c1 AS INTEGER))||((~ (vt1.c1)))) FROM vt1 LIMIT -1229508898 OFFSET -1856729377; -- 0ms;
SELECT DISTINCT ((((vt1.c0)<(vt1.c1))) BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) AND (UNLIKELY(DISTINCT vt1.c1))) FROM vt1 GROUP BY ((vt1.c1 IN ()) IN ()), TRIM(((vt1.c1)>(vt1.c0))), (((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))==((vt1.c1 COLLATE NOCASE))) HAVING ((((NULL)OR(vt1.c0)))OR(vt1.c1)) COLLATE RTRIM; -- 0ms;
SELECT ((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(1.552345515E9)))IS NOT(((vt1.c1)%(vt1.c1)))) FROM vt1 WHERE (((((((x'')*(x'3e78')))AND((-1.256083709E9 IN ()))))AND(('Z' IN (NULL, ''))))); -- 1ms;
SELECT ALL MIN(((vt1.c0) NOTNULL)), ((x'')AND(vt1.c0)) COLLATE NOCASE, SUM(load_extension(vt1.c1)), COUNT((vt1.c0 IN ())) FILTER(WHERE (- (((vt1.c1)>>(vt1.c0))))) OVER (), (~ (-1e500)) FROM vt1 WHERE ((((0X7cbe6fbb)+(NULL)) IN ())); -- 0ms;
SELECT ((((((vt1.c0) NOT NULL))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))))AND((vt1.c0 IN ()))), CASE vt1.c1 COLLATE NOCASE  WHEN '-1303322054' THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (x'')) ELSE x'' END, CUME_DIST() OVER () FROM vt1 WHERE (CAST(NULL COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((((((('1260488038' IN (x'')))AND(((NULL)IS NOT('-1354758156')))))AND(CAST(0X270e7e63 AS INTEGER))))AND(CAST('r1zSv%7' AS NUMERIC))))OR(''))) ORDER BY (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN ()))<=(((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c0)))) FROM vt1 WHERE (CASE WHEN (NULL IN (2.45272397E8)) THEN '-1256083709' COLLATE RTRIM WHEN CAST(1.548812931E9 AS TEXT) THEN (('')/(x'')) WHEN CASE x''  WHEN x'' THEN x'10f2' END THEN ((x'') NOT BETWEEN (0.9254803592865023) AND (' }.<)鿁Y|h')) END); -- 0ms;
SELECT ALL CAST(((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) AS REAL) FROM vt1; -- 4ms;
SELECT ALL CAST(vt1.c1 AS INTEGER) COLLATE RTRIM FROM vt1 WHERE (((((x'') BETWEEN ('h<') AND ('-791289149'))) ISNULL)); -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT ALL ((vt1.c0 COLLATE RTRIM) NOTNULL) FROM vt1 WHERE ((((((x'', '-567406142', NULL))>=((1.7976931348623157E308, x'', 'S_')))) NOTNULL)); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(vt1.c1) COLLATE BINARY, CAST(TOTAL(vt1.c0) AS INTEGER), vt1.c1 FROM vt1; -- 1ms;
SELECT DISTINCT (((- (vt1.c1))) ISNULL) FROM vt1; -- 0ms;
SELECT ALL (((((((((~ (vt1.c0)))AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(((vt1.c1)AND(-1.825300489E9)))) FROM vt1 WHERE (CAST(((0x3934b6ff) NOT NULL) AS REAL)) ORDER BY (+ (QUOTE(vt1.c0))) DESC LIMIT 133507302; -- 0ms;
SELECT CAST(SUM(vt1.c1) AS NUMERIC), RANK() OVER (), ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))%(vt1.c1)) FROM vt1 WHERE (CASE WHEN CAST(NULL AS TEXT) THEN ((-1996201) NOT BETWEEN (x'6725') AND (x'')) ELSE (+ (NULL)) END); -- 0ms;
SELECT ALL ((((NULL) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL), ((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND('谉.')))<=(((vt1.c1) NOTNULL))), COUNT(*) OVER ( ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN NULL WHEN 'F戽vh' THEN vt1.c0 ELSE vt1.c0 END)+(((vt1.c1)<(vt1.c0))))) FROM vt1 GROUP BY CAST(NULL AS REAL) HAVING (~ (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))); -- 0ms;
SELECT ALL ((vt1.c0) BETWEEN (((vt1.c1)IS(vt1.c0))) AND ((('-884862318')IS(vt1.c1)))), DENSE_RANK() OVER (), json_remove(((vt1.c1)>>(vt1.c1)), MAX(vt1.c1), vt1.c0 COLLATE NOCASE, NULL, CASE WHEN vt1.c1 THEN vt1.c1 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1))) FROM vt1 WHERE (CAST(x'08ecbe9a' AS TEXT)) GROUP BY (((((vt1.c0, vt1.c1, vt1.c0))>=((vt1.c1, vt1.c0, vt1.c1))))!=(CAST(vt1.c1 AS REAL))), (+ (vt1.c1)) COLLATE BINARY, CAST(LIKE(vt1.c0, vt1.c1, '0') AS TEXT); -- 0ms;
SELECT ALL (- (((vt1.c1)||(vt1.c0)))) FROM vt1 GROUP BY (((((vt1.c1) IS TRUE)))<=((NULL))) HAVING AVG(((((((((((((vt1.c1)OR(vt1.c1)))OR(2000964758)))OR(vt1.c1)))OR(vt1.c1)))OR('')))AND(vt1.c1))); -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt1.c1) OVER (), CASE ((vt1.c1)>>(vt1.c0))  WHEN ((vt1.c1)>=('-58077374')) THEN SUM(vt1.c0) END, CAST(0.47222660871253086 COLLATE NOCASE AS BLOB) FROM vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0 IN (vt1.c1)))AND(CAST(vt1.c0 AS BLOB))))OR(((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND('6''轍9{')))) FROM vt1; -- 0ms;
SELECT ((((vt1.c0)/(vt1.c0))) BETWEEN (((vt1.c0)%(vt1.c1))) AND ((vt1.c1 IN (vt1.c1, NULL)))) FROM vt1; -- 0ms;
SELECT ((TOTAL(vt1.c1))*(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE (CASE WHEN ((x'') NOT NULL) THEN (0.3444164055217289 IN (1.996008403E9)) WHEN ((0Xffffffffea2c6037)AND('s1b[	CbU')) THEN TYPEOF('-1192781817') WHEN ((((NULL)OR('-329242388')))OR(x'96e3')) THEN CAST(x'6f0a' AS REAL) ELSE CAST('<L)' AS INTEGER) END); -- 0ms;
SELECT DISTINCT AVG(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))), ((vt1.c0)/(((vt1.c1)OR(vt1.c1)))), ((vt1.c0) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ((vt1.c1 IN (vt1.c0)))) FROM vt1 LIMIT 657354543 OFFSET -412941149; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN AVG(vt1.c0) WHEN ((vt1.c1)IS(vt1.c0)) THEN vt1.c0 WHEN LOWER(vt1.c1) THEN MIN(vt1.c0) ELSE (vt1.c1 IN ()) END, CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN CAST(vt1.c1 AS NUMERIC) WHEN SUM(vt1.c0) THEN LOWER(vt1.c0) WHEN vt1.c0 COLLATE NOCASE THEN ((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)) END, (((((0.2373438449442805)>=(vt1.c1))))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))))) FROM vt1 LIMIT -1430579915 OFFSET 880345931; -- 0ms;
SELECT DISTINCT 'A' FROM vt1 WHERE (CAST('' COLLATE BINARY AS REAL)); -- 0ms;
SELECT DISTINCT vt1.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE FROM vt1 WHERE ((((((0.6881005136558924)) NOT BETWEEN ((0.2825886998857837)) AND ((NULL))))GLOB(((('476766286'))<=((NULL)))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c1 THEN vt1.c0 END) IS FALSE), ((vt1.c1 COLLATE BINARY)<=(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))), COALESCE((~ (vt1.c0)), CASE vt1.c1  WHEN vt1.c0 THEN NULL END) FROM vt1 WHERE (((((NULL)&('1641266413'))) NOT BETWEEN (STRFTIME('', x'bd5c361a', '')) AND (((NULL)AND(x''))))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END THEN ((vt1.c0) NOT BETWEEN ('0.577463693640898') AND (vt1.c0)) END FROM vt1 WHERE (CAST(QUOTE(0x1606dcc2) AS BLOB)); -- 0ms;
SELECT LTRIM((- (vt1.c0))) FROM vt1 WHERE (CASE ((0.7106017237178723)>=(NULL))  WHEN x'' THEN CASE NULL  WHEN x'' THEN '-1054987890' ELSE '-1900442576' END ELSE (((0.4239774804518722)) BETWEEN (('1438055775')) AND ((x'e895'))) END) ORDER BY LIKELIHOOD(((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)), 0.6465302982921166)  NULLS FIRST, IFNULL(DISTINCT UNLIKELY(DISTINCT vt1.c1), (vt1.c1 IN ())) DESC; -- 0ms;
SELECT DISTINCT ((((vt1.c1)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))))AND('3PMhX7')) FROM vt1 WHERE ((('(y') BETWEEN (CASE WHEN '᰺syq6*' THEN '267624470' WHEN 1020127770 THEN x'1e1f' WHEN 0.8645301873281126 THEN 0.019719103016616057 ELSE NULL END) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT ALL TOTAL(RTRIM(vt1.c0)) FROM vt1; -- 0ms;
SELECT DISTINCT LOWER(LIKELY(vt1.c0)) FROM vt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1 WHERE (((((('-353579632', NULL, x'0da1')) NOT BETWEEN (('-329242388', '1523091702', '-1394047660')) AND ((-2062110525, x'', -1446244788)))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)))OR(((vt1.c0)<(vt1.c1)))))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)), COUNT(*) OVER (), ((vt1.c0)AND(vt1.c0)) COLLATE NOCASE FROM vt1 WHERE (((x'3db8') NOT NULL) COLLATE BINARY); -- 1ms;
SELECT CAST(NULL AS BLOB) FROM vt1 WHERE ((((NULL)) BETWEEN (((~ (NULL)))) AND ((x'' COLLATE BINARY)))); -- 0ms;
SELECT ALL (AVG(vt1.c1) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0)))=(COALESCE(vt1.c1, vt1.c1))) FROM vt1 WHERE (((TOTAL_CHANGES())+((('')=(3.5850468E7))))); -- 0ms;
SELECT DISTINCT ((((vt1.c1)&(vt1.c0)))LIKE(((vt1.c0)-(vt1.c1)))) FROM vt1 WHERE (NULL) ORDER BY ((((+ (vt1.c0))))>=((vt1.c1)))  NULLS LAST, CASE WHEN vt1.c0 THEN ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)) END ASC  NULLS LAST; -- 0ms;
SELECT (+ (((vt1.c0)<(vt1.c0)))), CAST(vt1.c1 AS BLOB), ((((vt1.c0))==((vt1.c0))) IN ((((vt1.c1))==((vt1.c1))))) FROM vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT LEAD(vt1.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY, DATE(vt1.c0, ((vt1.c1)>(vt1.c1)), (vt1.c1 IN ())), vt1.c1) OVER () FROM vt1 WHERE (((-3.29242388E8) ISNULL) COLLATE BINARY); -- 1ms;
SELECT DISTINCT (~ (((vt1.c1) NOT NULL))), GROUP_CONCAT(((vt1.c0)<<(vt1.c1))), (((((vt1.c0)OR(vt1.c1)), ((vt1.c0)GLOB(vt1.c1)), ((vt1.c0)==(vt1.c1))))>((vt1.c1, NULL COLLATE NOCASE, CAST(vt1.c1 AS REAL)))) FROM vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE (TRIM('2103084582') COLLATE RTRIM) GROUP BY ((vt1.c0)<=(vt1.c1)) COLLATE RTRIM; -- 0ms;
SELECT ALL ((((((vt1.c1) NOT NULL))AND(vt1.c1)))OR(ABS(x''))), MIN(SUM(vt1.c0)), CASE ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))  WHEN CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c1 ELSE vt1.c0 END THEN (((vt1.c0))=((vt1.c0))) ELSE vt1.c1 END FROM vt1;SELECT DISTINCT ('1536801358' IN ()), (((((((((((NULL)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1))))>=((vt1.c1 COLLATE BINARY))), (((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)) IN ()) FROM vt1; -- 0ms;
SELECT ((0x55982512) NOT NULL) FROM vt1 WHERE ((((((((((NULL IN ()))OR('-1300363043')))OR((+ ('670735786')))))OR((+ ('0*Zp&u.c1')))))OR(CAST('' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((LIKELY(vt1.c0)) IS TRUE), ((SUM(NULL)) NOT BETWEEN ((- (vt1.c1))) AND (((vt1.c1)AND(vt1.c1)))), CASE WHEN ((vt1.c1) NOT NULL) THEN ((NULL) BETWEEN (vt1.c0) AND (vt1.c0)) END FROM vt1 WHERE ((((843889622)) NOT BETWEEN ((RTRIM(NULL))) AND ((CASE WHEN '' THEN -1.721661597E9 WHEN NULL THEN '1e500' WHEN NULL THEN '1985070409' END)))); -- 0ms;
SELECT DISTINCT AVG(((((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1))) OVER () FROM vt1 WHERE (x'') LIMIT 1215803001; -- 0ms;
SELECT GROUP_CONCAT((- (vt1.c0))) COLLATE NOCASE FROM vt1 WHERE (CAST(CAST(x'62da' AS NUMERIC) AS BLOB)); -- 0ms;
SELECT DISTINCT ((COALESCE(vt1.c1, vt1.c0, vt1.c1, vt1.c0)) IS FALSE) FROM vt1 WHERE ((((x'')) NOT BETWEEN (((0.8129048162797098 IN ()))) AND ((((('', NULL, x'')) NOT BETWEEN ((0.3221906991936643, 0.7838933133534802, 0.2825886998857837)) AND ((x'', 0X762b84a3, 0.30329638142060034))))))); -- 0ms;
SELECT ((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE (CASE x'' COLLATE BINARY  WHEN ((NULL)!=(-2048590551)) THEN CASE WHEN NULL THEN NULL END END); -- 0ms;
SELECT DISTINCT -1446244788 FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0, NTH_VALUE(((COALESCE(DISTINCT vt1.c0, NULL))LIKE(CAST(vt1.c1 AS TEXT))), ((((vt1.c0)%(vt1.c1))) NOT NULL)) OVER (), MIN(CAST(vt1.c1 AS REAL)) FROM vt1 WHERE (((((LIKELIHOOD(DISTINCT x'25a6', 0.08873208715321923))AND(CASE x''  WHEN 0.7923004658341827 THEN 0.4900029191361809 WHEN '' THEN 0.20344211178214577 WHEN x'ea65' THEN 'P' END)))AND(((x'')LIKE(x'4bdf')))));SELECT DISTINCT SQLITE_VERSION() COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ALL ((LIKELY(vt1.c0))<=((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))), AVG(((0x15c42b0d) IS FALSE)), '-541154463' FROM vt1 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END COLLATE RTRIM, x'', '-1854203446' FROM vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE NULL  WHEN x'' THEN '-1560919919' END))); -- 0ms;
SELECT DISTINCT MAX((((('*w')OR(vt1.c0)))OR(vt1.c0))) FROM vt1 WHERE ((+ ((('-1836630320') NOTNULL)))); -- 0ms;
SELECT MAX(((vt1.c1)>>(vt1.c1))) FROM vt1 GROUP BY ((vt1.c0)=(vt1.c0)) COLLATE NOCASE, CASE WHEN vt1.c1 THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt1.c1)&(vt1.c0)) THEN 'D|c|!w' WHEN vt1.c0 THEN ((vt1.c1) NOTNULL) ELSE ((vt1.c0)/(vt1.c0)) END, (- (((vt1.c1) NOT BETWEEN (vt1.c0) AND ('-894799983')))); -- 0ms;
SELECT ALL CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN ((vt1.c1)LIKE(vt1.c1)) WHEN GROUP_CONCAT(vt1.c0) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (x'')) WHEN vt1.c1 THEN (NOT (vt1.c0)) ELSE ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) END, vt1.c0 COLLATE RTRIM, ((AVG(vt1.c0))<('')) FROM vt1 WHERE (CAST((0xffffffffcd205940 IN ()) AS TEXT)) LIMIT -161323102; -- 1ms;
SELECT ALL NULL, vt1.c0 COLLATE RTRIM, (((((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))OR(((vt1.c1) NOTNULL))))AND(vt1.c0 COLLATE NOCASE)) FROM vt1; -- 0ms;
SELECT ALL ((vt1.c0)||(((vt1.c0) BETWEEN (x'') AND (vt1.c1)))) FROM vt1; -- 0ms;
SELECT ALL 0.3213299657031472, ((LTRIM(vt1.c0))OR(((vt1.c1)IS(vt1.c0)))), ((((vt1.c1)/(vt1.c1)))&(vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE (((((((((('824611111' IN (-730194682)))OR(CASE WHEN x'' THEN 'y|Aw' END)))AND((0.7638235511637006 IN (NULL)))))OR(((x'') NOT BETWEEN ('1090490358') AND (0Xffffffff9bdc7d3f)))))OR(CAST(NULL AS TEXT)))); -- 0ms;
SELECT FIRST_VALUE(((((vt1.c1)==(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (- (1750077986 COLLATE RTRIM)) FROM vt1 WHERE (CASE (~ (x''))  WHEN ((0.8773001575342947)IS(NULL)) THEN '/ᾱ%G' COLLATE BINARY END); -- 0ms;
SELECT ALL ((((vt1.c0)OR(vt1.c1))) IS FALSE), vt1.c1, (+ (GROUP_CONCAT(vt1.c0))) FROM vt1; -- 1ms;
SELECT CASE CASE 1.08632872E8  WHEN vt1.c1 THEN NULL END  WHEN ((vt1.c1)GLOB(vt1.c1)) THEN CAST(vt1.c0 AS TEXT) END FROM vt1; -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT ALL TOTAL((vt1.c0 IN (vt1.c0))) FROM vt1 WHERE ((((x'8ee0' IN (x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((NULL)) AND (((0Xffffffffae49064a IN (vt1.c0))))) FROM vt1; -- 0ms;
SELECT DISTINCT (((((~ (vt1.c1)))OR(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 END)))OR(((vt1.c1)%(vt1.c0)))) FROM vt1 WHERE (NULL); -- 0ms;
SELECT ALL NULL FROM vt1 WHERE (0.061656292620576925 COLLATE NOCASE); -- 0ms;
SELECT (((vt1.c0 IN (vt1.c0))) NOT NULL) FROM vt1 WHERE (((('ᧃ>')) NOT BETWEEN (((('H h8暚n')>=(x'')))) AND ((CASE WHEN 642598565 THEN 0.5138553294313037 END)))); -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c1) NOT NULL)) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT JULIANDAY((+ (vt1.c1)), (NULL IN ()), ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)), NULL COLLATE BINARY, vt1.c1), -119686248 COLLATE NOCASE, COALESCE(((vt1.c1)<<(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))) FROM vt1 WHERE (LIKELIHOOD(DISTINCT x'', 0.6588728709156118) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))-(COUNT(*))) FROM vt1 LIMIT -577965664 OFFSET 750944327; -- 1ms;
SELECT HEX(((vt1.c0) IS FALSE)) FROM vt1 WHERE (((('-1720812348')) BETWEEN ((x'')) AND ((795440833))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((vt1.c1) BETWEEN (vt1.c1 COLLATE BINARY) AND ((vt1.c1 IN ()))), (((vt1.c1)) NOT BETWEEN ((CAST(x'df49' AS NUMERIC))) AND ((((vt1.c1)=(vt1.c1))))), GROUP_CONCAT(vt1.c1) OVER () FROM vt1; -- 0ms;
SELECT ALL LAG((((vt1.c0 IN ())) ISNULL), (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()), (((+ (vt1.c1)))AND(((vt1.c1) NOT NULL)))) OVER (), SUM(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) OVER (), CASE WHEN vt1.c1 THEN vt1.c1 END COLLATE BINARY FROM vt1 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN (0.08535799668207533 IN ()) THEN (('')*(-15666446)) END); -- 0ms;
SELECT CASE vt1.c1  WHEN ((vt1.c1)GLOB(vt1.c0)) THEN (vt1.c1 IN (vt1.c1)) WHEN GROUP_CONCAT(vt1.c1) THEN (vt1.c0 IN ()) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c1)>('')) ELSE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END FROM vt1 NOT INDEXED ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))>(((0.6569764704254366) BETWEEN (vt1.c1) AND (vt1.c0)))) LIMIT 1181366025 OFFSET -185033453; -- 1ms;
SELECT ALL LAST_INSERT_ROWID(), ((CAST(vt1.c0 AS BLOB))*(((vt1.c1)IS(vt1.c1)))), ((((((vt1.c0)=('1826433535')))OR(AVG(vt1.c1))))AND((vt1.c0 IN ('-2041318484', vt1.c1)))), (vt1.c0 IN (vt1.c0, vt1.c1)) COLLATE NOCASE, (((((vt1.c0))<=((vt1.c0)))) NOTNULL) FROM vt1 WHERE ((((((0.5784181495118714))>(('1741866238')))) NOT BETWEEN ((('2037660959')+('1436034322'))) AND (((1577808347) BETWEEN (NULL) AND (''))))) LIMIT -1101329086; -- 0ms;
SELECT DISTINCT ((vt1.c1)>(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE (((('') IS FALSE) IN ())) GROUP BY (((vt1.c1 IN ()))%(((vt1.c1)<>(vt1.c1)))) HAVING (((((''))<((vt1.c0))))OR(vt1.c1 COLLATE NOCASE)); -- 0ms;
SELECT CASE (vt1.c1 IN ())  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN AVG(vt1.c0) ELSE (~ (vt1.c0)) END, ROW_NUMBER() OVER ( GROUPS  CURRENT ROW), ((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (278876343)) FROM vt1; -- 0ms;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((('I%M6G3<]')) BETWEEN (('1416933077')) AND ((''))) AS BLOB)); -- 0ms;
SELECT DISTINCT vt1.c0 COLLATE NOCASE FROM vt1 WHERE ((UPPER(0.5927078106616728) IN ())); -- 0ms;
SELECT DISTINCT AVG(((vt1.c1)==(vt1.c0))), CASE (vt1.c1 IN ())  WHEN ((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)) THEN UPPER('-1358171042') END, (vt1.c1 IN ()), (((((x'', vt1.c0, vt1.c0))<((0.13651565212433336, NULL, vt1.c1))))<=(vt1.c0 COLLATE NOCASE)), (+ ((vt1.c1 IN ()))) FROM vt1 WHERE ((((NULL, '', 0.19224551216664076)) NOT BETWEEN (((('620586531') IS TRUE), (('')AND(x'')), HEX('D.}9'))) AND (((((((((((((('')OR(0Xfffffffff63af771)))OR(1235835989)))OR(x'')))AND(x'')))OR('-2092135477')))OR(x'82f5')), (+ ('1534229623')), (- (x'')))))) GROUP BY (CAST(vt1.c1 AS REAL) IN ()) HAVING (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END IN (((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))) LIMIT 1548812931 OFFSET 897023154; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt1.c1 END) IS TRUE), CASE ((vt1.c1)-(vt1.c0))  WHEN (vt1.c1 IN ()) THEN vt1.c1 ELSE LIKELY(vt1.c0) END, ((((vt1.c0) NOT NULL)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (COUNT(*))) FROM vt1 ORDER BY UNLIKELY(((vt1.c0)OR(vt1.c1))) ASC; -- 0ms;
SELECT DISTINCT MIN(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)), COUNT(vt1.c1)) FROM vt1 WHERE (((((NULL) NOT BETWEEN (NULL) AND (x'')))=(COALESCE(x'', x'')))) ORDER BY CASE NULL  WHEN (((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, 0.05309136748814913)) AND ((vt1.c0, vt1.c0, vt1.c1))) THEN CAST(vt1.c0 AS REAL) END; -- 0ms;
SELECT DISTINCT json_valid(UPPER(vt1.c1)) FROM vt1; -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((vt1.c1) NOT NULL)), (((vt1.c1 IN ()))<<(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))), CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c1) NOT NULL) WHEN ((vt1.c1)<<(vt1.c1)) THEN (~ (vt1.c1)) WHEN '' THEN CAST(vt1.c1 AS BLOB) ELSE CAST(vt1.c0 AS NUMERIC) END, (NOT (((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))), ((((((((CAST(vt1.c1 AS INTEGER))AND((- (vt1.c0)))))OR(((vt1.c1)==(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))AND('' COLLATE NOCASE)) FROM vt1 WHERE (((('-163907727')=(63591595)) IN ())) LIMIT -2077761873 OFFSET 577058818; -- 0ms;
SELECT DISTINCT ((TOTAL_CHANGES())<=(((vt1.c1)|(vt1.c0)))) FROM vt1; -- 0ms;
SELECT vt1.c0, (((((((('RxVpy')AND(((vt1.c1)==(vt1.c0)))))OR(((vt1.c0)&(vt1.c1)))))AND((((vt1.c1))<>((vt1.c1))))))AND(CASE ',<j?'  WHEN vt1.c0 THEN vt1.c1 WHEN 0.5624151934441485 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), ((((vt1.c1 IN (vt1.c1, vt1.c0))))=((MIN('-329242388', vt1.c0)))), MIN(vt1.c0), NULL COLLATE BINARY FROM vt1 WHERE (TYPEOF(x'')); -- 0ms;
SELECT DISTINCT (((('c췉.~<d' COLLATE RTRIM)OR(vt1.c0 COLLATE NOCASE)))AND(vt1.c0 COLLATE RTRIM)), SUM(((vt1.c0)||(265826776))), CAST(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END AS REAL) FROM vt1 LIMIT 645592007; -- 1ms;
SELECT ((vt1.c1)OR(0.08225202492387995)) COLLATE RTRIM FROM vt1 NOT INDEXED WHERE (CAST((((('-791289149')OR('[]')))AND('W')) AS REAL)) GROUP BY rtreenode((vt1.c1 IN ()), ((vt1.c1)&(vt1.c1))); -- 0ms;
SELECT DISTINCT NTILE(((((vt1.c0) IS TRUE)) NOT BETWEEN (vt1.c1) AND ((NOT (vt1.c1))))) OVER ( RANGE BETWEEN CAST(((vt1.c1) NOTNULL) AS REAL) PRECEDING AND  CURRENT ROW) FROM vt1 WHERE (CASE WHEN '-591331286' THEN 0X1d4b0710 ELSE x'' END COLLATE NOCASE);SELECT DISTINCT ((ROUND(vt1.c0, vt1.c1)) ISNULL) FROM vt1; -- 0ms;
SELECT ALL '' FROM vt1; -- 0ms;
SELECT 0x7ade4d2f, (((((((((vt1.c0 IN ()))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))OR((vt1.c0 IN ()))), GROUP_CONCAT((- (vt1.c1))) FILTER(WHERE ((((vt1.c1)<(x''))) NOT BETWEEN ((((vt1.c0))<((vt1.c0)))) AND ((- ('QW|'))))) OVER (), LAG(((((((((vt1.c0)AND(LIKELIHOOD(DISTINCT vt1.c1, 0.6145448362697756))))AND(CASE WHEN x'' THEN vt1.c0 END)))OR(((vt1.c0) IS TRUE))))AND(vt1.c1)), ((((vt1.c0)IS(vt1.c1))) IS TRUE), ((((~ (vt1.c1)), (+ (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))>(((- (vt1.c1)), 0.8934403835721243, 1174668800)))) OVER (), COUNT(*) COLLATE RTRIM FROM vt1; -- 1ms;
SELECT ((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))/(((vt1.c0)-(vt1.c1)))) FROM vt1 WHERE ((+ ((('-185033453')GLOB('%\>sUC'))))) GROUP BY ((CASE WHEN vt1.c1 THEN vt1.c1 END) NOTNULL); -- 0ms;
SELECT (((vt1.c1, vt1.c1, vt1.c1)) BETWEEN (((vt1.c1 IN ()), ((vt1.c1) NOT NULL), MAX(vt1.c0))) AND ((MIN(vt1.c1), (vt1.c0 IN ()), (vt1.c1 IN ())))) FROM vt1 WHERE (CASE (x'' IN ('6''轍9{'))  WHEN (((0.6950552723904175)) BETWEEN (('')) AND (('s9R2Zx6M'))) THEN (((('')AND('I%M6G3<]')))OR(0.7786721366016672)) END); -- 0ms;
SELECT ALL UNLIKELY(DISTINCT CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) FROM vt1; -- 0ms;
SELECT ((vt1.c1) ISNULL) COLLATE RTRIM, 0.6418472583952626, ((CAST(vt1.c1 AS REAL))||(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END)) FROM vt1 ORDER BY ((((vt1.c0)LIKE(vt1.c1))) IS FALSE), ((((((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(-344618413)))AND((~ (vt1.c1)))))AND(vt1.c1 COLLATE BINARY)))OR('689221258')); -- 1ms;
SELECT ((vt1.c1 COLLATE NOCASE)<(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))) FROM vt1; -- 0ms;
SELECT ((((((((load_extension(vt1.c1))OR(CAST(vt1.c0 AS TEXT))))AND(vt1.c0 COLLATE RTRIM)))AND('-1144835226')))AND(((vt1.c1)LIKE(vt1.c0)))) FROM vt1 WHERE (((((NULL) IS TRUE)) NOT NULL));SELECT DISTINCT (- (LIKELIHOOD(DISTINCT vt1.c0, 0.3993896743038545))), (vt1.c0 IN ()), ((((x'ff97')AND(((vt1.c1)<(vt1.c1)))))OR((+ (vt1.c0)))), CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE NOCASE, (((- (vt1.c1)))-(((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))) FROM vt1; -- 0ms;
SELECT DISTINCT LIKELY(((vt1.c0) NOTNULL)), ((0.04921409014649025 COLLATE NOCASE) BETWEEN (((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c1))) AND (vt1.c1)), (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- ((((((((('-2084371351')AND(0Xffffffffdf9251e5)))OR(NULL)))AND(NULL)))AND(x'71c2'))))); -- 1ms;
SELECT (((vt1.c0)GLOB(vt1.c0)) IN (0xffffffffcdde9fd3)) FROM vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT CAST(NULLIF(DISTINCT vt1.c1, vt1.c0) AS REAL), ((UPPER(vt1.c0)) BETWEEN (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))) AND (((((vt1.c1)OR(0.9673138666196124)))AND(vt1.c0)))), (~ (CAST(vt1.c1 AS NUMERIC))) FROM vt1 GROUP BY (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c0, 0.2816793710498219))) COLLATE BINARY, NULL, (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END IN ()) HAVING ((vt1.c1 IN (vt1.c1)) IN ()) ORDER BY (((- (vt1.c0))) NOT NULL), ((((((((CASE WHEN vt1.c1 THEN vt1.c1 END)AND(vt1.c1)))OR(((vt1.c0)=(vt1.c0)))))AND(CAST(vt1.c1 AS INTEGER))))AND(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))  NULLS LAST, (((vt1.c1)) BETWEEN (('mzroRd')) AND ((CAST(vt1.c0 AS NUMERIC)))); -- 0ms;
SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((1.741866238E9))))-((((((((('-1315836878')OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))) FROM vt1 WHERE (((highlight(0.31581832021318146, 0.6135441712416267, 0.16870933470975547, x'')) NOT BETWEEN (NULL COLLATE NOCASE) AND (((-1.737172581E9) BETWEEN (x'') AND (0xffffffff921c2a10)))));SELECT DISTINCT (((((vt1.c0)LIKE(vt1.c0))))>(((~ (vt1.c1))))), 'myb \ry᧊', ((((vt1.c0)AND(vt1.c0)))OR(8.79003147E8)) COLLATE RTRIM FROM vt1; -- 1ms;
SELECT DISTINCT (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((((vt1.c1) IS FALSE), vt1.c1, TOTAL(vt1.c1))) AND ((CAST(vt1.c0 AS INTEGER), ((NULL)IS NOT(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) FROM vt1 WHERE ((NOT ((((NULL)) BETWEEN (('Ew#')) AND (('')))))) GROUP BY ((((vt1.c0)GLOB(vt1.c0))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (CAST(vt1.c1 AS INTEGER))); -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS NUMERIC))<<(x'')) FROM vt1 ORDER BY CAST(((NULL)AND(vt1.c0)) AS INTEGER) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((vt1.c0) NOT NULL)))<((((vt1.c0) NOT NULL)))), (((vt1.c1 IN (vt1.c0)))||(TOTAL(vt1.c1))), ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))IS(CAST(vt1.c1 AS REAL))), (vt1.c1 COLLATE BINARY IN ()), GROUP_CONCAT(CAST(vt1.c0 AS NUMERIC)) OVER ( PARTITION BY ((+ (vt1.c1)) IN ()), ((LOWER(vt1.c0)) ISNULL)) FROM vt1 WHERE (((((((x'f236')OR('i~T>')))OR(0xffffffff956d1d2f))) NOT BETWEEN ('1805529865') AND (((-1.896011585E9) NOT BETWEEN (-2.57440109E8) AND (x''))))); -- 0ms;
SELECT DISTINCT (((((x'')AND(vt1.c1)))OR(vt1.c1)) IN ('0.0', MIN(vt1.c1))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) AS INTEGER) FROM vt1 ORDER BY (((~ (vt1.c0)))OR((vt1.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((((((0.4170318625848195)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))<=(((~ (vt1.c0))))) FROM vt1; -- 0ms;
SELECT DISTINCT CASE ((0.7433689100553141) NOT BETWEEN (vt1.c0) AND (x''))  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END THEN ((vt1.c0)GLOB(vt1.c0)) ELSE COUNT(*) END FROM vt1; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0)+(vt1.c1)) THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0)<<(vt1.c0)) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c0)<>(vt1.c1)) THEN ((vt1.c0) NOTNULL) ELSE (- (vt1.c1)) END FROM vt1 WHERE (((('', '-1540960114', 0.32333129913081726)) BETWEEN ((((1828858366) NOTNULL), (('-567406142')>>(0.4104570961609202)), x'')) AND ((((((((((((((((((NULL)OR(NULL)))AND(x'')))OR('-1896011585')))OR('M')))AND(NULL)))OR('423302423')))OR(x'')))AND(NULL)), ((0.1918499694998257) ISNULL), 0.5089863659266847 COLLATE RTRIM)))) GROUP BY TYPEOF(DISTINCT vt1.c1), ((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))), ((((vt1.c0 IN ()), vt1.c0 COLLATE RTRIM, x'eeec'))>((0xffffffffc42d8cda, (- (vt1.c1)), ((vt1.c1) NOT NULL)))); -- 1ms;
SELECT DISTINCT LAG(((((((((CAST(vt1.c1 AS INTEGER))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((NOT (vt1.c1)))))OR(((vt1.c0) IS FALSE))))AND((vt1.c1 IN ()))), ((CAST(vt1.c0 AS REAL))>=(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END)), CAST(((vt1.c1)||(vt1.c1)) AS INTEGER)) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM vt1 WHERE ((((0x4ed0c01b)<=(NULL)) IN ())); -- 0ms;
SELECT DISTINCT CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS INTEGER) FROM vt1 ORDER BY ((((((((((vt1.c0)<(vt1.c1)))OR(((vt1.c0) IS TRUE))))OR(CASE WHEN NULL THEN vt1.c1 END)))OR(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))OR('835484756' COLLATE BINARY))  NULLS FIRST LIMIT 925970703 OFFSET -9223372036854775808; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((- (vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (+ (NULL)) COLLATE NOCASE FROM vt1 WHERE ('' COLLATE BINARY); -- 0ms;
SELECT DISTINCT MAX(((vt1.c0)|(x''))) FROM vt1; -- 0ms;
SELECT (((+ (vt1.c0))) IS TRUE), ((0.5013451048226649) IS TRUE), (((CAST(vt1.c1 AS NUMERIC), ((NULL) IS FALSE), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c1)<<(vt1.c0)), MAX(vt1.c0)))=(((+ (vt1.c0)), ((vt1.c1) NOTNULL), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)), vt1.c0, ((vt1.c0)||(vt1.c1))))), (('') ISNULL) COLLATE RTRIM COLLATE NOCASE, DENSE_RANK() OVER ( ORDER BY ((((vt1.c0)GLOB(vt1.c1))) ISNULL), vt1.c0 DESC RANGE (+ (((vt1.c1)IS(vt1.c1)))) PRECEDING), ((NULL) BETWEEN (vt1.c1 COLLATE BINARY) AND (((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)))), NTH_VALUE((('')IS(((vt1.c1) NOT NULL))), ((((CAST(vt1.c0 AS NUMERIC))AND(x'')))AND(((vt1.c1)+(vt1.c1))))) OVER ( PARTITION BY '1021198070', vt1.c0) FROM vt1;SELECT DISTINCT NTILE(((NOT (vt1.c0)) IN (CAST(vt1.c0 AS TEXT)))) OVER () FROM vt1 WHERE (CASE WHEN x'e810' COLLATE RTRIM THEN (('')*(x'')) END); -- 0ms;
SELECT ALL COUNT(vt1.c0), '-265335738', ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))&(((vt1.c0)>=(vt1.c1)))), vt1.c0, ((CAST(vt1.c1 AS NUMERIC)) NOTNULL) FROM vt1 WHERE ((LIKELY('') IN ())); -- 0ms;
SELECT DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT CASE (NOT (vt1.c0))  WHEN (~ (vt1.c1)) THEN CAST(vt1.c0 AS TEXT) ELSE 1.996008403E9 END, CASE AVG(vt1.c0)  WHEN vt1.c1 THEN ((x'') BETWEEN (vt1.c0) AND (0.11906577948775499)) ELSE CASE WHEN vt1.c1 THEN vt1.c0 END END, SUM(((vt1.c1)=(vt1.c1))) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM vt1; -- 1ms;
SELECT (NOT ((x'' IN (vt1.c0)))), ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END)), (NOT (((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))) FROM vt1; -- 0ms;
SELECT TOTAL(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))), ((((NULL)LIKE(vt1.c1))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (vt1.c0 COLLATE RTRIM)), ((CAST(NULL AS BLOB))<>(HEX(vt1.c0))) FROM vt1; -- 0ms;
SELECT ALL TOTAL(((vt1.c1)&(vt1.c0))), vt1.c0, NULL FROM vt1 WHERE (']jN'); -- 0ms;
SELECT DISTINCT AVG(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) OVER () FROM vt1 WHERE (TYPEOF((((('1552345515')AND('0.7106017237178723')))OR(x'')))); -- 0ms;
SELECT (((vt1.c0) NOT NULL) IN ()) FROM vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST('TGyኒ|Qz' AS BLOB)) NOT BETWEEN ((('TG鳷ox>')=('^t(YE#?'))) AND ((('Infinity%p3') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((vt1.c0) IS TRUE) COLLATE RTRIM FROM vt1 WHERE (NULL) ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN CAST(vt1.c0 AS NUMERIC) ELSE ((vt1.c1) NOTNULL) END DESC  NULLS FIRST LIMIT 1450777070; -- 1ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END) IS FALSE) FROM vt1 WHERE (TYPEOF('1707493343')) ORDER BY CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END COLLATE NOCASE DESC, UPPER(DISTINCT 9.02753657E8), vt1.c0 ASC  NULLS LAST; -- 0ms;
SELECT ALL (~ (CAST(vt1.c0 AS INTEGER))), (+ (((vt1.c0)OR(vt1.c0)))), COUNT(vt1.c0) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0)))IS(CAST(vt1.c0 AS NUMERIC))), (((vt1.c1)) NOT BETWEEN (((+ (vt1.c0)))) AND ((((vt1.c1)LIKE(vt1.c0))))), vt1.c1 FROM vt1 WHERE ((((CASE NULL  WHEN NULL THEN '1556280555' END, LIKELY(''), CAST(x'' AS REAL)))<=((CAST(x'' AS INTEGER), (~ (NULL)), 0.6538598114203064 COLLATE RTRIM)))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt1 WHERE ((((~ (NULL)))<<(load_extension(0x14b83d81, 0.6673681724193232))));SELECT DISTINCT (((vt1.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c1))))) AND ((NULLIF(DISTINCT vt1.c0, vt1.c0), vt1.c0 COLLATE RTRIM, TOTAL(vt1.c1)))), ((NULL) BETWEEN (((vt1.c1) NOTNULL)) AND ((NOT (vt1.c1)))), (+ (json(vt1.c0))) FROM vt1 WHERE (((((x'') NOT NULL)) NOT BETWEEN (((266448700)OR(NULL))) AND (((NULL)&('[o*'))))); -- 1ms;
SELECT DISTINCT ((((vt1.c0)*(NULL)))IS(CAST(vt1.c1 AS BLOB))), vt1.c1, vt1.c0 FROM vt1; -- 0ms;
SELECT ALL UNLIKELY(DISTINCT ((0.4501583100142469)>=(vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT ((vt1.c1)LIKE(vt1.c1)) COLLATE RTRIM, (((((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1)))) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND (((((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))), ((((vt1.c1)GLOB(vt1.c1))) NOT NULL) FROM vt1 WHERE (CASE WHEN ((((0X41b85f22)AND(x'')))AND('0.07299209872201184')) THEN LOWER(DISTINCT '293296939') ELSE UPPER(DISTINCT '0.8515346196854401') END); -- 0ms;
SELECT DISTINCT ((0.9442964199126528)<=(((0X32ce68ac) ISNULL))) FROM vt1 WHERE ((CHANGES() IN ())) LIMIT -1600201081; -- 0ms;
SELECT DISTINCT (+ (CAST(NULL AS NUMERIC))), (('594694730') NOT BETWEEN (0.15647676763732266) AND ((((x'')) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))), COUNT(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT x'9331' FROM vt1 WHERE ((('347618689' COLLATE RTRIM) BETWEEN (CAST(-7.91289149E8 AS BLOB)) AND (LIKE(NULL, NULL)))); -- 0ms;
SELECT CASE WHEN (NOT (vt1.c0)) THEN ((vt1.c1) IS TRUE) WHEN (((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((0.26825317960194794, vt1.c0, vt1.c1))) THEN ((vt1.c0)<(vt1.c0)) WHEN '245272397' THEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END FROM vt1 WHERE ((((((0X7fffffffffffffff, x'4226', -1900442576)) BETWEEN (('879003147', x'', x'')) AND ((NULL, '-1145584137', 0x40adc55b))))>((('251163106')+(0x4c0023fc))))); -- 0ms;
SELECT DISTINCT CAST(vt1.c1 COLLATE RTRIM AS INTEGER), ((CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN x'de220da3e897' THEN vt1.c0 ELSE vt1.c1 END)IS(((vt1.c1)<(vt1.c1)))), vt1.c0 FROM vt1; -- 0ms;
SELECT ALL vt1.c1 COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) FROM vt1 WHERE ('') LIMIT -866759347; -- 0ms;
SELECT DISTINCT SUM(((vt1.c0)-(vt1.c1))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN -1.73933541E9 END) ISNULL) FROM vt1 WHERE (LIKELIHOOD(((6.89221258E8)-(0.8872241454034528)), 0.7020617869875126)); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) NOTNULL) AS BLOB), CAST(MAX(vt1.c1) AS NUMERIC), ((((vt1.c0)=(vt1.c1)))OR(CAST(vt1.c1 AS NUMERIC))) FROM vt1 WHERE (CASE ((((x'')AND('-137986264')))OR(NULL))  WHEN ((x'')+(NULL)) THEN (('-1721661597') NOTNULL) END); -- 1ms;
SELECT DISTINCT vt1.c1 COLLATE RTRIM FROM vt1 WHERE (((TRIM(0.2882078436219999)) BETWEEN ((- ('ﱷm餺/uG椠'))) AND ((+ (x'b41e'))))); -- 0ms;
SELECT ALL CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE NOCASE FROM vt1; -- 0ms;
SELECT DISTINCT ((COUNT(*))&(SUM(vt1.c0))) FROM vt1 WHERE (((((CAST('1822429764' AS TEXT))OR(((0.9166103096821092) IS TRUE))))OR(CASE ''  WHEN '蘋4KRcRY6N' THEN 1326427340 ELSE x'' END))); -- 0ms;
SELECT CASE WHEN (vt1.c0 IN (vt1.c1)) THEN vt1.c0 COLLATE RTRIM END FROM vt1 GROUP BY ((((vt1.c1, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt1.c1, vt1.c1, vt1.c1))) IN ()) HAVING (- (((vt1.c0) IS TRUE))); -- 0ms;
SELECT DISTINCT ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (0.18684459261267383)) FROM vt1 WHERE (CASE x'1d9a'  WHEN x'e781' COLLATE NOCASE THEN ((0.9086182776407312) NOTNULL) END); -- 0ms;
SELECT DISTINCT x'' FROM vt1 WHERE (CAST(MIN('{)u뎞4 ~', 0.05627795607074082, '', NULL) AS REAL)); -- 1ms;
SELECT DISTINCT (((vt1.c1 IN ())) NOT BETWEEN ((+ (vt1.c1))) AND (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))), CASE WHEN (vt1.c1 IN ()) THEN vt1.c1 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END END, ((CAST(vt1.c0 AS NUMERIC)) NOTNULL) FROM vt1; -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)IS(vt1.c0)))) FROM vt1 NOT INDEXED WHERE ((((((x''))<((x'e051')))) IS FALSE)) GROUP BY 0.40915992383105215 HAVING ((((vt1.c1)<>(vt1.c0))) BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (json_extract(vt1.c0, vt1.c0, vt1.c1, x'3db7'))); -- 0ms;
SELECT LIKELIHOOD(COUNT(*), 0.8787302182819707) FROM vt1 ORDER BY CASE ((vt1.c1) NOT NULL)  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN vt1.c1 ELSE vt1.c1 COLLATE BINARY END; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE (CASE CASE NULL  WHEN 'Z,X_6\rai' THEN x'' END  WHEN ((4.23302423E8)<>(x'')) THEN ((x'') NOTNULL) WHEN (0.01730507100292955 IN (x'')) THEN ((x'abe7') NOT BETWEEN ('1741866238') AND (0.6810578444664922)) WHEN CASE WHEN NULL THEN 0.06852261864618236 END THEN (NULL IN ()) END); -- 0ms;
SELECT ALL vt1.c0 FROM vt1; -- 1ms;
SELECT (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((+ (vt1.c0)), ((vt1.c1)>=(vt1.c1)), ((vt1.c0)+(vt1.c0)))) AND ((vt1.c1, ((vt1.c1)|(vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))), (((- (vt1.c1))) ISNULL), (((COUNT(vt1.c0), (- (vt1.c1)), ((vt1.c1) IS FALSE)))>=((CAST(vt1.c1 AS INTEGER), LIKELY(vt1.c0), x'3c18'))) FROM vt1 WHERE ((+ (((x'7614')>('1914145875'))))) LIMIT -1480697460; -- 0ms;
SELECT ALL (((NOT (vt1.c1)))||(x'ce59')) FROM vt1 WHERE (CAST(NULL AS BLOB)); -- 0ms;
SELECT DISTINCT (+ (((vt1.c1) BETWEEN (0X1) AND (vt1.c0)))) FROM vt1 WHERE (((('564203180' IN ('-843639352', 0.6538922347281614))) NOT BETWEEN (NULL) AND (((x'')%(0.0721684477129304))))); -- 0ms;
SELECT DISTINCT ((((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0))), CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN 0.2070668685479896 THEN vt1.c0 WHEN vt1.c0 THEN '>v' WHEN 0.3079624028626685 THEN x'9f78' END, (vt1.c1 IN ())))<=((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS INTEGER)))) FROM vt1 GROUP BY (((vt1.c0)) BETWEEN (((((vt1.c1, vt1.c0, vt1.c1))>((vt1.c1, vt1.c1, vt1.c1))))) AND ((((vt1.c0)+(vt1.c0))))) HAVING (((vt1.c1) ISNULL) IN (vt1.c1)); -- 0ms;
SELECT DISTINCT AVG(((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))), ((CAST(vt1.c1 AS INTEGER)) BETWEEN (UPPER(DISTINCT vt1.c0)) AND (((vt1.c0) BETWEEN ('-329242388') AND ('9F+{((뒰b')))), CHAR(vt1.c1) FROM vt1 NOT INDEXED GROUP BY (~ (vt1.c0)) COLLATE RTRIM; -- 0ms;
SELECT (vt1.c1 IN ()), ((vt1.c1 COLLATE RTRIM) BETWEEN (NULLIF(x'', vt1.c0)) AND (((vt1.c1)OR(vt1.c0)))), NULL FROM vt1 WHERE ((NOT (((0.010325550161150998)||(0X569b956))))); -- 0ms;
SELECT ((((CAST(vt1.c1 AS NUMERIC))OR(((vt1.c1)OR(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT vt1.c0))*(('3蕔Ri' IN ()))) FROM vt1 WHERE (CAST(CAST(NULL AS TEXT) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (x'38c8') AND (vt1.c0)))>=(MIN(vt1.c0, vt1.c1, vt1.c0, vt1.c1))), COUNT(*), TRIM(DISTINCT ((vt1.c0)<=(vt1.c0))) FROM vt1 WHERE ((((((0.14310154496375294) ISNULL)))>=((((((((((((((0.9275592081795615)AND(x'')))OR(NULL)))AND('/珝')))OR(x'')))OR('1535455921')))AND(0.14321507673035683)))))); -- 0ms;
SELECT DISTINCT ((((((((((vt1.c0)OR(vt1.c1)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))), CASE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))  WHEN x'' THEN vt1.c0 ELSE CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END, (CAST('}饨M_5' AS TEXT) IN (0.9375605145205298, vt1.c1 COLLATE RTRIM)), TOTAL(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))), vt1.c0 FROM vt1 WHERE (CAST(x'' AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((NULL) IS FALSE)) IS TRUE) FROM vt1; -- 0ms;
SELECT DISTINCT ((((MAX(vt1.c1))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))AND(((vt1.c1)>>(vt1.c0)))) FROM vt1 WHERE (((((NULL)IS NOT(NULL))) IS FALSE)); -- 0ms;
SELECT (((vt1.c0)>(vt1.c0)) IN ((+ (vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))), (NOT (((vt1.c1)OR(vt1.c1)))), (+ ((((vt1.c1))=((vt1.c0))))) FROM vt1 WHERE ((((('M\')|(x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))))<<(vt1.c0)) FROM vt1 GROUP BY ((json_object(vt1.c0, vt1.c1)) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));SELECT DISTINCT x'1e07', ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE BINARY, NTH_VALUE((NOT ((~ (vt1.c1)))), vt1.c1) OVER () FROM vt1 WHERE ((TRIM(NULL) IN ())); -- 1ms;
SELECT ALL CASE WHEN ((vt1.c1)GLOB(vt1.c0)) THEN UPPER(vt1.c0) WHEN ((vt1.c0)>(vt1.c1)) THEN CAST(vt1.c1 AS BLOB) WHEN CAST(vt1.c1 AS NUMERIC) THEN ((((vt1.c0)AND(vt1.c0)))OR(x'')) ELSE COUNT(*) END FROM vt1; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(x''))<>(((vt1.c1) NOT NULL))) FROM vt1 WHERE ((((('802453900') BETWEEN (0.5191765202030003) AND (x'1e2a'))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((vt1.c0)<=(vt1.c1)))GLOB(COUNT(*))), CAST(((vt1.c1)-(vt1.c1)) AS BLOB), ((vt1.c0) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (SUM(vt1.c1))) FROM vt1 WHERE (((CASE WHEN x'' THEN 0X695606ae END) BETWEEN ((('') ISNULL)) AND (0.5768966473985784))) GROUP BY ((((vt1.c0)=(vt1.c0))) IS FALSE); -- 0ms;
SELECT '1914145875', COUNT(*), ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((vt1.c1 IN (vt1.c1, vt1.c1)))) FROM vt1 WHERE (CAST(((NULL) ISNULL) AS NUMERIC)); -- 0ms;
SELECT ALL ((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0)))) AND (CASE WHEN x'' THEN 'yD' END)) FROM vt1 WHERE ((~ (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((x'')<=(((vt1.c1) IS FALSE))), CASE WHEN (vt1.c1 IN ()) THEN SUM(vt1.c1) WHEN vt1.c0 THEN (- (vt1.c1)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) ELSE (- (vt1.c1)) END, ((((((vt1.c1)>>(vt1.c1)))OR(x'f743')))AND(GROUP_CONCAT(vt1.c0))) FROM vt1 WHERE (CASE (('쏿oRg28cX䲖') NOT BETWEEN ('uG5') AND (0.5081644475717118))  WHEN ((((((((7708252)AND(x'')))AND(x'')))OR(x'e650')))OR(0x7f08bff9)) THEN CASE WHEN -2.49090183E8 THEN -1.825300489E9 ELSE 0.7117326003910834 END ELSE ((x'') IS TRUE) END); -- 0ms;
SELECT '-841048109' FROM vt1; -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS TEXT))%(vt1.c1)) FROM vt1 WHERE (CAST(((((0.3310872271084203)AND(-8.43639352E8)))AND(x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((vt1.c1)<<(vt1.c0)) COLLATE BINARY, ((MAX(vt1.c1)) NOT NULL), ((GROUP_CONCAT(vt1.c0)) IS FALSE) FROM vt1; -- 0ms;
SELECT DISTINCT x'aca4' FROM vt1 WHERE (CAST(((((x'')AND('-737052038')))OR(NULL)) AS NUMERIC)) ORDER BY vt1.c1 DESC; -- 0ms;
SELECT DISTINCT ((2.131279865E9)+(((vt1.c1)=(vt1.c1)))), GROUP_CONCAT(CAST(vt1.c0 AS REAL)), ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0.20092501709139254 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)&(((NULL)GLOB(vt1.c1)))) FROM vt1; -- 1ms;
SELECT DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT NTILE(((~ (vt1.c0)) IN ())) OVER () FROM vt1 WHERE (((((((((CASE WHEN NULL THEN 0x5f356c0d END)OR((((0.698930639771031, NULL, '1985070409'))<=((x'cfdb', '', 0.6677878475461155))))))OR((NULL IN (0.7219555520642328, 986811435)))))AND((NOT (0.5081644475717118)))))AND(CAST(0x3a3878a6 AS BLOB)))); -- 0ms;
SELECT ALL ((((((((ABS(DISTINCT vt1.c0))OR(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)))))OR(vt1.c0 COLLATE BINARY)))OR(CAST(vt1.c0 AS INTEGER))))OR(TRIM(DISTINCT vt1.c0, vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT LAG(2.131279865E9, ((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE BINARY, (- (((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))))) OVER ( RANGE ((((vt1.c1)LIKE(vt1.c0))) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) AND (((vt1.c1)<<(vt1.c0)))) PRECEDING EXCLUDE TIES), ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 9223372036854775807 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)AND(((((((((vt1.c1)OR(vt1.c0)))AND('cjO\pW')))AND(vt1.c0)))AND(x'')))))OR(CAST(vt1.c0 AS NUMERIC))), ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (0.6806461414677277)))>>(IFNULL(vt1.c0, vt1.c0))) FROM vt1 WHERE (((((ABS(NULL))AND(CASE 0.9412026565685725  WHEN '849589633' THEN x'adc7af38' WHEN 0.5647342903331014 THEN 0.08505483710830641 WHEN NULL THEN '7PQ' ELSE '-1854203446' END)))OR(((NULL)%(NULL)))));SELECT CAST(((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) AS REAL) FROM vt1 GROUP BY CAST(NULLIF(vt1.c0, 'g6o.{㺢') AS NUMERIC), CAST(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END AS INTEGER), (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))<(((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))))); -- 1ms;
SELECT DISTINCT ((((vt1.c0) IS TRUE))LIKE(((vt1.c1) ISNULL))) FROM vt1 WHERE (((CASE WHEN 'W⾗' THEN NULL WHEN '*%' THEN -1467951489 WHEN x'' THEN NULL WHEN '^|' THEN '' WHEN '-1588948050' THEN x'' END)LIKE(((0.03254628241741142) BETWEEN ('1707493343') AND (x'8dd3'))))); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE RTRIM)|(((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))) FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) NOTNULL), ((LOWER(vt1.c0))&(vt1.c0 COLLATE RTRIM)), ((((vt1.c0)<<(vt1.c1)))IS(((vt1.c0) ISNULL))) FROM vt1 WHERE (CAST(x'' COLLATE RTRIM AS REAL)); -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0) IS TRUE) THEN AVG(vt1.c0) END FROM vt1; -- 0ms;
SELECT ALL (+ (vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE ((((('2000964758' COLLATE RTRIM)OR(((NULL) NOT BETWEEN (x'9de9') AND (NULL)))))AND(((0.7273877244956543)AND(0.12701876633596576))))); -- 0ms;
SELECT AVG((~ (vt1.c1))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM vt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('0.7224765216572493') AND (x'')) THEN ((x'') NOT NULL) ELSE ((NULL)&(0xffffffff8c5ab070)) END); -- 0ms;
SELECT DISTINCT (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))), ((CAST(vt1.c0 AS TEXT))AND(json_remove(vt1.c0, vt1.c0))), SQLITE_COMPILEOPTION_GET(vt1.c1 COLLATE BINARY) FROM vt1 LIMIT -980699607 OFFSET 1128917056;SELECT DISTINCT CASE ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ABS(vt1.c0) THEN vt1.c1 WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)OR('A')))OR(NULL)) WHEN ((vt1.c1)>=(vt1.c1)) THEN vt1.c1 COLLATE BINARY ELSE (vt1.c1 IN ()) END FROM vt1; -- 0ms;
SELECT DISTINCT ((vt1.c1) BETWEEN (('⽹' IN ())) AND ((vt1.c1 IN ()))), (((((vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c1))!=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c1)))) NOT NULL), ((((((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (x'0763')))OR(((vt1.c0) ISNULL))))AND(CAST(vt1.c1 AS NUMERIC))))AND(vt1.c0 COLLATE NOCASE)))OR(CASE WHEN vt1.c1 THEN vt1.c1 END)), CASE MIN(vt1.c1)  WHEN vt1.c0 THEN ((vt1.c0)||(vt1.c1)) ELSE vt1.c1 COLLATE BINARY END, (((+ (vt1.c1)))<=(vt1.c1 COLLATE BINARY)) FROM vt1 WHERE ((x'' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT json_quote(vt1.c1) COLLATE BINARY FROM vt1 WHERE (CAST((~ (0.8628118980343944)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE)<((- (vt1.c1)))) FROM vt1 GROUP BY vt1.c0 HAVING ((4.23302423E8) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (0.5661577669007939))) AND (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END)); -- 0ms;
SELECT ((((vt1.c1) NOT BETWEEN (x'7245') AND (vt1.c1))) NOT BETWEEN (CASE vt1.c0  WHEN '1021692872' THEN vt1.c0 END) AND (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)<(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c1)GLOB(vt1.c0))) NOT BETWEEN (((vt1.c0)>(vt1.c0))) AND (TRIM(vt1.c0))) FROM vt1 WHERE (((NULL COLLATE BINARY)-((('1416933077') IS FALSE)))); -- 0ms;
SELECT ALL CASE WHEN (~ (vt1.c0)) THEN LIKELIHOOD(vt1.c1, 0.009111076861126999) END FROM vt1 WHERE (CASE WHEN 'r1zsv%7' THEN CAST(x'' AS BLOB) WHEN (((('\n')OR(x'')))OR(x'')) THEN CAST(0.8961335059099331 AS TEXT) WHEN CAST(824611111 AS NUMERIC) THEN ((0.6533689646141074) IS TRUE) WHEN CAST(NULL AS REAL) THEN (((x'5235', '?d\n', -1.73933541E9)) NOT BETWEEN ((0.12238650011538421, NULL, 0.9554104484305618)) AND ((1.985070409E9, 0.2925450616053862, NULL))) WHEN ((x'') BETWEEN (0.6806461414677277) AND (-940394609)) THEN ((0.5142520049840409) IS TRUE) ELSE NULL COLLATE NOCASE END) GROUP BY ((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0))) AND ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, 0.41313937953889057, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))), (~ (vt1.c0)), LTRIM((((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))), vt1.c0) HAVING COUNT(*); -- 1ms;
SELECT DISTINCT (((vt1.c0))>((vt1.c1))) COLLATE RTRIM FROM vt1 GROUP BY vt1.c0; -- 0ms;
SELECT DISTINCT ((vt1.c0)IS NOT(((vt1.c1)/(vt1.c1)))) FROM vt1; -- 0ms;
SELECT DISTINCT LAG((~ ((+ (vt1.c0)))), vt1.c1 COLLATE RTRIM, ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE) OVER () FROM vt1 WHERE (CAST((('') NOT BETWEEN (NULL) AND (NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT CASE vt1.c0 COLLATE RTRIM  WHEN (~ (vt1.c0)) THEN AVG(vt1.c0) END FROM vt1 WHERE (((LOWER(x'3eed')) NOT NULL)); -- 0ms;
SELECT DISTINCT (~ ((vt1.c0 IN (vt1.c0, vt1.c0)))), TYPEOF(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END), CAST(vt1.c0 COLLATE RTRIM AS INTEGER) FROM vt1; -- 0ms;
SELECT vt1.c0 COLLATE BINARY FROM vt1 WHERE ((((((x'c08e' IN (0.2941959741054523)))OR((NOT ('^_')))))AND((('1348296135')<(-4.82080085E8))))) LIMIT -351963954 OFFSET -391464051; -- 1ms;
SELECT ALL (((('-1721661597')&(vt1.c1))) NOT BETWEEN (UNLIKELY(vt1.c0)) AND (vt1.c0)) FROM vt1 WHERE (((((1.438055775E9) NOT BETWEEN (0.7074626187847952) AND (0.38844859674154897))) BETWEEN ((('592233679') NOT BETWEEN (0.5243801228620446) AND (NULL))) AND ((~ (0Xffffffffecbba34b))))); -- 0ms;
SELECT DISTINCT (NOT (COUNT(*))) FROM vt1; -- 0ms;
SELECT ALL ((CASE vt1.c0  WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN '9223372036854775807' WHEN '-1820890370' THEN vt1.c1 END) NOT BETWEEN (vt1.c1) AND ((~ (vt1.c1)))) FROM vt1 WHERE (((('655940629' IN (0.05309136748814913, '-1144709865', NULL)))=(CAST(-591254458 AS BLOB)))); -- 0ms;
SELECT ALL ((((vt1.c1)&(vt1.c1))) NOT NULL) FROM vt1; -- 0ms;
SELECT ALL (((vt1.c0))<>((vt1.c0))) COLLATE RTRIM, json_patch((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c1)/(vt1.c1))), COUNT(*) OVER ( ORDER BY (+ (vt1.c1)) COLLATE RTRIM DESC  NULLS LAST, -7.91289149E8 DESC, ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0 COLLATE RTRIM)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)) DESC) FROM vt1 LIMIT -1638271056; -- 0ms;
SELECT ALL (GROUP_CONCAT(vt1.c0) IN ()) FROM vt1 WHERE (((((0.9385635107127916) IS TRUE)) IS FALSE)); -- 0ms;
SELECT ALL (NULL IN ()), CASE WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) ELSE (- (vt1.c0)) END, (TOTAL('뛼?') IN ()), TRIM((vt1.c1 IN (vt1.c0)), vt1.c1 COLLATE RTRIM), CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))  WHEN vt1.c1 COLLATE BINARY THEN vt1.c0 WHEN ((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) WHEN vt1.c1 COLLATE RTRIM THEN (((vt1.c1, x'', vt1.c1)) BETWEEN ((vt1.c0, vt1.c1, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c1))) ELSE ((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) END FROM vt1 WHERE (((CASE WHEN NULL THEN -1825300489 WHEN '	\nZp' THEN 0.3673722562468774 WHEN 0.7590452631199535 THEN '~|v粀CA' ELSE -940394609 END)OR(((0Xffffffffc51cbf02)IS('1552345515'))))) GROUP BY CASE NULL  WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN vt1.c0 COLLATE BINARY ELSE (+ (vt1.c1)) END HAVING 0.034391446997278474; -- 7ms;
SELECT DISTINCT (((((vt1.c0 IN ()))AND(((vt1.c1)GLOB(vt1.c1)))))OR(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))), ((vt1.c1)>=(vt1.c0 COLLATE BINARY)), (CAST(vt1.c1 AS NUMERIC) IN (COUNT(*))) FROM vt1; -- 0ms;
SELECT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE FROM vt1 LIMIT -351963954; -- 0ms;
