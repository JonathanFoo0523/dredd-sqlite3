-- Time: 2024/06/07 21:51:54
-- Database: database44
-- Database version: 3.40.0
-- seed value: 4184852144
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER  CHECK ( ((c0) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('\n,M'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('1345590570'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0Xffffffffe78de6d3), (NULL), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
ALTER TABLE t0 ADD COLUMN c66 INT; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('', x''); -- 0ms;
ANALYZE; -- 2ms;
VACUUM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, x'e8a2'); -- 0ms;
PRAGMA temp.journal_mode = PERSIST; -- 0ms;
ALTER TABLE t0 ADD COLUMN c16 BLOB; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO t0(c66) VALUES (0.0973186971076706); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c66) VALUES (0.0973186971076706, x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.0973186971076706; -- 0ms;
INSERT OR REPLACE INTO t0(c66, c0) VALUES ('', NULL), (-4.10130733E8, '1548767497'), (x'', 1.548767497E9); -- 4ms;
INSERT OR IGNORE INTO t0(c16, c0, c66) VALUES ('-410130733', '-410130733', x''); -- 1ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t0(c66) VALUES (NULL); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
PRAGMA main.cache_spill = false; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR REPLACE INTO t0(c16, c66, c0) VALUES (0.8236076333746436, x'', x'8448'); -- 0ms;
INSERT OR IGNORE INTO t0(c66, c16, c0) VALUES (x'906e', 0.30385568221654813, 1702958666); -- 0ms;
COMMIT; -- 0ms;
CREATE INDEX i85 ON t0(((c16)>(c66)) COLLATE BINARY DESC,NULL COLLATE BINARY DESC,((MIN(c66, c66)) NOT BETWEEN (((c66)+(c66))) AND (CASE c66  WHEN c66 THEN c66 END)) DESC); -- 0ms;
INSERT OR IGNORE INTO t0(c66, c16, c0) VALUES (0.6360292105418862, 0.3114024274809256, -52346664); -- 0ms;
END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c16) VALUES (x''); -- 0ms;
PRAGMA incremental_vacuum(-375099002); -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
PRAGMA main.cache_size = 0; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', '', x''); -- 0ms;
INSERT OR IGNORE INTO t0(c16, c66) VALUES (0.43762975635505375, NULL); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c66 TO c37; -- 1ms;
INSERT OR REPLACE INTO t0 VALUES (0Xffffffff8fe1b28f, NULL, 0.8236076333746436); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (-3.75099002E8, '-52346664', '-926456770'), (x'', 0.9683440818523494, '-1881034097'), (x'', '(*.x\', NULL), (x'4de3', NULL, '1548767497'), ('', '-585392755', 0.8326637679976125); -- 0ms;
INSERT OR IGNORE INTO t0(c37, c16, c0) VALUES (NULL, x'', NULL), (x'', '', NULL), ('k\DMyq(''', x'', NULL); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO t0 VALUES (NULL, 0.4512314041458757, x''); -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('', 0.3114024274809256, 0.5175645764180029); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i37 ON t0(CAST(((c37)!=(c37)) AS TEXT),(((c37) NOT BETWEEN (c0) AND (c0)) IN ((((x'', -410130733, c37))<>((c16, c37, c16))))) COLLATE RTRIM,IFNULL(c0, CAST(c16 AS TEXT))) WHERE CASE c37  WHEN c0 THEN c37 WHEN c0 THEN c37 WHEN c16 THEN c37 END COLLATE NOCASE; -- 1ms;
INSERT OR ABORT INTO t0(c16, c37, c0) VALUES (0.651945366542334, x'', '0.30385568221654813'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c37, c16) VALUES (-52346664, '1548767497', '-Df䃘'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c37 TO c74; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c16, c0) VALUES (x'', '-1881034097'); -- 0ms;
INSERT OR IGNORE INTO t0(c74, c16, c0) VALUES ('0.3114024274809256', '', 0.6360292105418862); -- 0ms;
PRAGMA journal_size_limit = -3109172673335621531; -- 0ms;
ANALYZE i37; -- 0ms;
REINDEX i85; -- 0ms;
INSERT OR IGNORE INTO t0(c16) VALUES (x''), ('-518381110'), (0.9683440818523494); -- 0ms;
COMMIT; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1602669696) ISNULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO t0(c16, c74) VALUES (x'', 0.205196831100256), (0.2646527056539647, ''), ('', NULL); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
PRAGMA temp.stats; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c16, c74, c0) VALUES (' y1l-|U*', 0.14448765421825294, 1918906690), ('', NULL, 0.43762975635505375), (x'81e3', 0.9763585554619887, 0Xffffffffea572be8); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'2e94', 0.0207287926902342, x''), (NULL, '1989435796', NULL), ('%J', x'fe72', '887714453'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c74, c16) VALUES ('minutes', '-831172636', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 8ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 FOR EACH ROW  WHEN CASE WHEN ((t0.c16)<=(t0.c16)) THEN ((t0.c0) NOT BETWEEN (t0.c16) AND (t0.c74)) ELSE t0.c74 END BEGIN DELETE FROM t0;END; -- 1ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT CASE WHEN CASE t0.c0  WHEN t0.c16 THEN t0.c16 WHEN t0.c0 THEN t0.c16 WHEN t0.c16 THEN 0xffffffffe62927e1 END THEN t0.c16 ELSE ((t0.c0) NOT BETWEEN (t0.c16) AND (t0.c16)) END FROM t0; -- 0ms;
END; -- 0ms;
INSERT OR ROLLBACK INTO t0(c16, c0, c74) VALUES (0.29884731906302164, x'', 1.34559057E9), (0.7456987618467483, '-205375013', 0.12283917829996716), (0.43762975635505375, 0.43762975635505375, NULL), (679994028, 0.9683440818523494, x'8a4a'), (1.34559057E9, '1548767497', '168944535'); -- 0ms;
INSERT OR IGNORE INTO t0(c16) VALUES (x''); -- 7ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
PRAGMA soft_heap_limit = 679994028; -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
ANALYZE main; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c16 TO c7; -- 0ms;
ALTER TABLE t0 ADD COLUMN c58 REAL; -- 0ms;
REINDEX; -- 0ms;
PRAGMA locking_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CAST(CAST(t0.c0 AS NUMERIC) AS BLOB) FROM t0, v0; -- 0ms;
SELECT DISTINCT (+ (t0.c58 COLLATE NOCASE)), CASE WHEN x'f83b' THEN ((t0.c16)OR(t0.c58)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c58)) THEN CAST(NULL AS REAL) WHEN (+ (t0.c0)) THEN ((v0.c0) NOT BETWEEN (t0.c16) AND (0.9416282212675572)) ELSE ((t0.c58) BETWEEN (t0.c58) AND (t0.c58)) END, ((CASE t0.c16  WHEN t0.c74 THEN t0.c16 ELSE t0.c16 END) ISNULL) FROM v0;SELECT DISTINCT CUME_DIST() OVER () FROM t0, v0 WHERE ((((x'' IN (0.9683440818523494))) ISNULL)); -- 0ms;
SELECT DISTINCT (('-640215108') NOT NULL) FROM v0; -- 0ms;
SELECT ((((t0.c74)IS(t0.c58))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c16)<>(t0.c16)))), CASE WHEN (t0.c74 IN (t0.c58, t0.c0)) THEN ((((t0.c16)AND(t0.c74)))OR(t0.c0)) ELSE NULL END, (((((((((~ (t0.c58)))AND(NULLIF(DISTINCT t0.c74, t0.c16))))OR('168944535')))AND(((t0.c74) BETWEEN (t0.c58) AND (v0.c0)))))OR(MIN(v0.c0))) FROM t0 NOT INDEXED, v0; -- 0ms;
SELECT ALL ((((t0.c0)=(t0.c58))) BETWEEN (CASE WHEN t0.c0 THEN x'' ELSE t0.c0 END) AND (((t0.c74) BETWEEN (t0.c0) AND (t0.c58)))), t0.c16, CAST(v0.c0 AS INTEGER) FROM v0 ORDER BY ((LTRIM(v0.c0, t0.c0))/(ROUND(v0.c0, x'c9cc')))  NULLS LAST;SELECT '1206668136', AVG((((t0.c74))<>(('N	')))), COUNT(CAST(v0.c0 AS BLOB)) FROM v0, t0; -- 0ms;
SELECT ALL AVG(((t0.c58)<(x''))) FROM v0, t0 GROUP BY ((((t0.c16) IS TRUE)) NOT BETWEEN ((v0.c0 IN ())) AND (((t0.c74) BETWEEN (x'') AND (t0.c74)))); -- 0ms;
SELECT DISTINCT (NOT ((- (t0.c58)))), (((CAST(t0.c0 AS NUMERIC), LIKELIHOOD(v0.c0, 0.05557088124625986), MIN(v0.c0)))==((NULLIF(DISTINCT t0.c16, t0.c0), NULL COLLATE NOCASE, ((v0.c0)=(t0.c16))))), NULL FROM v0 WHERE (((((('', x'', x''))<=((NULL, x'c2a8', 1.702958666E9))))>>(CASE WHEN 0.3860721819714743 THEN 0.9827450682436693 WHEN NULL THEN NULL WHEN NULL THEN x'' END)));SELECT DISTINCT (((t0.c16) NOT BETWEEN (t0.c58) AND (t0.c74)) IN (((v0.c0)&(v0.c0)))), t0.c16, t0.c74 FROM v0;SELECT DISTINCT TOTAL((('-498840699')!=(t0.c16))) OVER (), x'', ((v0.c0)AND(t0.c58)) COLLATE RTRIM FROM t0, v0 WHERE (((CASE 0.36411567858863003  WHEN '-1e500' THEN -9.2645677E8 END)LIKE(x'' COLLATE NOCASE))) GROUP BY CAST(t0.c58 AS REAL) HAVING AVG(t0.c0); -- 0ms;
SELECT ALL TRIM(DISTINCT t0.c16 COLLATE RTRIM, t0.c0), x'a73f9f63', (t0.c58 IN ()) FROM v0;SELECT DISTINCT t0.c16 FROM t0, v0 WHERE (((('-205375013')) BETWEEN (((NOT ('679994028')))) AND ((CASE WHEN -4.98840699E8 THEN NULL END)))); -- 0ms;
SELECT DISTINCT ((((t0.c58)<>(t0.c16))) NOT BETWEEN ('') AND (t0.c58)) FROM t0, v0 INDEXED BY i85;SELECT MIN(CAST(t0.c16 AS BLOB)) FROM t0 WHERE ((~ ((('%J')LIKE(x''))))); -- 0ms;
SELECT ALL ((((MAX(x'afc5'))AND(CASE t0.c74  WHEN t0.c0 THEN 0.6567680188997066 ELSE t0.c74 END)))AND(((t0.c74) NOT BETWEEN (-410130733) AND (v0.c0)))) FROM v0, t0 LIMIT -1647458680 OFFSET 1520369991; -- 0ms;
SELECT COUNT(*) FILTER(WHERE ((((((v0.c0)IS NOT(t0.c16)))AND((((t0.c16)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0 COLLATE RTRIM))) OVER () FROM v0, t0 WHERE (((((NULL)IS NOT(NULL))) NOT BETWEEN (((x'')OR(''))) AND ((NOT (0x3b13578e))))); -- 0ms;
SELECT (((((v0.c0))>((-1494385315))))==(CAST(t0.c58 AS INTEGER))), t0.c58, RANK() OVER () FROM v0 WHERE (0.7211856491581646);SELECT CASE WHEN MIN(t0.c0) THEN t0.c58 ELSE ((t0.c74) NOTNULL) END, (v0.c0 COLLATE BINARY IN (((t0.c0)-(t0.c0)))), rtreenode((((t0.c16)) BETWEEN ((v0.c0)) AND ((t0.c58))), 0.7403770371580431) FROM v0, t0 GROUP BY (('168944535')+(t0.c16)) COLLATE BINARY HAVING v0.c0; -- 1ms;
SELECT DISTINCT AVG(JULIANDAY(v0.c0, t0.c16, t0.c16)) OVER ( ORDER BY x'1092' ASC  NULLS FIRST), TRIM(((v0.c0)||(t0.c58)), (~ (t0.c16))), COUNT(CASE t0.c74  WHEN t0.c58 THEN t0.c16 ELSE t0.c58 END), GROUP_CONCAT(CASE t0.c74  WHEN v0.c0 THEN 0xffffffffde0ab071 ELSE x'' END) OVER (), (((t0.c74)==(t0.c74)) IN (TYPEOF(t0.c58), (- (t0.c16)))) FROM v0 ORDER BY (((ABS(t0.c0)))<(((~ (t0.c16))))) ASC  NULLS LAST;SELECT ALL (t0.c58 COLLATE RTRIM IN ()) FROM v0; -- 0ms;
SELECT DISTINCT ((((t0.c0)) BETWEEN ((t0.c58)) AND ((t0.c16))) IN ()) FROM t0, v0 NOT INDEXED WHERE ((- (((-123956038)<>(x''))))); -- 0ms;
SELECT ((((t0.c0)*(t0.c16))) NOT BETWEEN ((t0.c16 IN ())) AND ((((t0.c58)) BETWEEN ((t0.c58)) AND ((t0.c74))))) FROM v0 WHERE (((((NULL)*(x'd353')))AND(((0.35888408997558285)<=('1072415142'))))) GROUP BY (((((t0.c0, v0.c0, t0.c0))==((t0.c74, t0.c58, t0.c0)))) IS TRUE) HAVING ((((((((AVG(t0.c74))OR(((((t0.c16)AND(t0.c58)))OR(t0.c58)))))OR(CASE WHEN t0.c0 THEN t0.c74 WHEN 0.14806433219937332 THEN t0.c58 WHEN t0.c74 THEN t0.c74 END)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c16 WHEN x'31b7' THEN t0.c16 WHEN NULL THEN NULL WHEN t0.c16 THEN t0.c74 END)))OR(((t0.c0) NOTNULL)));SELECT ALL ((COUNT(*)) IS TRUE) FROM t0, v0 WHERE ((+ ((~ (0.7279311769234212))))); -- 0ms;
SELECT DISTINCT 'l~ꮫ 懢MyAS', CAST(((v0.c0)OR(t0.c0)) AS TEXT), (((t0.c58)) BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0))) FROM v0, t0 WHERE (json_array_length((((x''))!=((1.011835362E9))), (('-229208307') BETWEEN (NULL) AND (0.5851900507472646))));SELECT DISTINCT (t0.c58 IN ()), ((CAST(t0.c0 AS TEXT))>>((((t0.c74, v0.c0, t0.c74)) BETWEEN ((x'', t0.c74, t0.c74)) AND ((v0.c0, t0.c16, t0.c74))))), (+ (((t0.c16)&(v0.c0)))) FROM t0, v0 WHERE ('-827331486' COLLATE BINARY COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT ABS(DISTINCT CAST(t0.c16 AS BLOB)), MIN(((((((((t0.c0)AND(v0.c0)))OR(x'')))OR(t0.c74)))AND(t0.c16))), LIKELY((t0.c16 IN ())) FROM v0, t0 WHERE ((NOT (CASE x''  WHEN NULL THEN '-229208307' WHEN NULL THEN 0.46517654415082377 WHEN 0X24fe43c THEN x'cdf8c429' END))); -- 0ms;
SELECT DISTINCT (((CAST(t0.c74 AS BLOB)))<((TYPEOF('')))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c58) NOTNULL), NULL, '-769633697' FROM t0, v0 WHERE (((0.7403770371580431)IS NOT(x'')) COLLATE BINARY) LIMIT 1990456558; -- 0ms;
SELECT (- (((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c16)))) FROM v0, t0 WHERE ((((0.7465808102765772 COLLATE RTRIM))!=((CASE ''  WHEN -568803606 THEN 0.7461092273545024 ELSE x'' END)))); -- 0ms;
SELECT ((((t0.c58) BETWEEN (t0.c0) AND (t0.c16)))-((((t0.c16))<>((t0.c58))))) FROM v0;SELECT ALL CAST(t0.c58 AS BLOB), ((((((((CAST(t0.c16 AS TEXT))AND(v0.c0 COLLATE NOCASE)))AND((- (v0.c0)))))OR(((t0.c16) NOT BETWEEN (t0.c58) AND (1.68944535E8)))))AND(t0.c58)), (+ (CAST(t0.c16 AS REAL))) FROM v0;SELECT DISTINCT COUNT(*) OVER (), ((CASE t0.c58  WHEN t0.c74 THEN v0.c0 ELSE t0.c58 END)IS(v0.c0 COLLATE RTRIM)), (((v0.c0, t0.c16, t0.c58)) BETWEEN ((MIN(t0.c16), MAX(t0.c58), ((v0.c0) ISNULL))) AND ((((NULL) NOT NULL), COUNT(t0.c0), ((t0.c16)&(v0.c0))))) FROM v0, t0 WHERE (((CASE WHEN '&&ddeZ' THEN NULL END) NOT BETWEEN (TRIM(NULL)) AND (((x'') BETWEEN (x'') AND ('-1647458680'))))); -- 0ms;
SELECT 0.3694685481255784 FROM v0, t0 WHERE ((((~ (NULL))) NOT BETWEEN ((('	)f#7') BETWEEN (0.6360292105418862) AND (x''))) AND (((x'') IS FALSE)))); -- 0ms;
SELECT DISTINCT (~ ((((t0.c0, t0.c0, t0.c58, 1948792651, t0.c74))<((t0.c74, t0.c58, t0.c16, v0.c0, t0.c16))))) FROM v0, t0 WHERE (((0.5962460964923055)AND(CASE WHEN 0.3114024274809256 THEN x'b32a' ELSE 'E,' END))) LIMIT -1710277588; -- 0ms;
SELECT (+ (NULL)) FROM v0, t0 WHERE ((((x'')) BETWEEN ((((x'd744')GLOB('-1602669696')))) AND (((((('')OR(0X17b4c76c)))AND(x'82a0')))))) LIMIT 397723500 OFFSET -926456770; -- 0ms;
SELECT t0.c0 FROM v0;SELECT ALL ((((t0.c16) ISNULL)) BETWEEN (((v0.c0)LIKE(t0.c74))) AND (CASE WHEN v0.c0 THEN t0.c74 WHEN t0.c74 THEN t0.c58 WHEN t0.c74 THEN t0.c74 ELSE v0.c0 END)) FROM t0 WHERE (((CAST(x'1a42' AS REAL))|(((x'ef4d')OR(NULL)))));SELECT ALL ((((t0.c0 IN (t0.c16)), t0.c58 COLLATE RTRIM, (+ (t0.c74)), (((t0.c74, t0.c58, t0.c58))<=((t0.c74, t0.c16, v0.c0))), ((((t0.c0)AND(t0.c58)))AND(t0.c74))))<((CAST(t0.c74 AS INTEGER), x'bbc4', (t0.c58 IN ()), CASE t0.c74  WHEN 'o	n8' THEN t0.c16 ELSE t0.c16 END, (v0.c0 IN ())))) FROM v0;SELECT ALL t0.c16 FROM v0;SELECT DISTINCT load_extension(x'', ((t0.c74) IS TRUE)) FROM v0, t0 EXCEPT SELECT DISTINCT GROUP_CONCAT((~ (t0.c16))) OVER ( PARTITION BY NULL, (('')GLOB(((t0.c74)<<(t0.c58)))) GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM v0 WHERE (((((((((CAST(x'c6cb407d' AS TEXT))OR(CAST(0.4399261006340499 AS REAL))))OR(((NULL) NOTNULL))))AND(x'' COLLATE RTRIM)))AND(((NULL)<=('102295134')))));SELECT t0.c16 FROM t0; -- 0ms;
SELECT ALL IFNULL(DISTINCT CAST(t0.c0 AS TEXT), CAST(0.23187548491025067 AS REAL)) FROM t0 INDEXED BY i85, v0 WHERE (0.803923435701823); -- 0ms;
SELECT DISTINCT (((('1345590570')AND((t0.c58 IN (x'', 0.8898210775726669)))))OR(t0.c16)) FROM t0, v0; -- 1ms;
SELECT DISTINCT (((LIKELY(DISTINCT x'2ad0')))<>(((~ (t0.c16))))) FROM t0; -- 0ms;
SELECT ABS(((((((((((((t0.c74)OR(t0.c58)))OR(v0.c0)))OR(t0.c16)))OR(t0.c74)))OR(t0.c16)))AND(t0.c74))) FROM t0, v0; -- 0ms;
SELECT DISTINCT x'4f99' FROM v0, t0 WHERE (')䉄P?'); -- 0ms;
SELECT NULL FROM v0, t0 WHERE ((((NULL IN ('')))%((('-1494385315')<=('1039977108'))))); -- 0ms;
SELECT DISTINCT (((((((((((t0.c58)OR(t0.c16)))AND(t0.c58)))AND(t0.c58)))OR(t0.c16))))>((CASE t0.c58  WHEN t0.c16 THEN t0.c16 WHEN t0.c74 THEN v0.c0 WHEN t0.c0 THEN t0.c16 WHEN t0.c58 THEN t0.c58 WHEN t0.c16 THEN t0.c74 ELSE t0.c74 END))), 0.9763585554619887, (CAST(v0.c0 AS BLOB) IN ((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))))) FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c16) NOT NULL) AS TEXT) FROM t0, v0 WHERE (((((0.34345552015187397)&(0.914103682960578)))<(((((((((x'')AND(x'')))OR(x'')))OR(NULL)))AND(0.7307099902443381))))); -- 0ms;
SELECT DISTINCT CAST(((v0.c0) IS TRUE) AS NUMERIC) FROM t0, v0 WHERE (0.9964639111018896) ORDER BY (((((t0.c58)AND(t0.c0)))AND(v0.c0)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT MIN((('7L')<>(t0.c58))) FROM v0 WHERE (ABS((((((((((((('1990456558')OR(x'')))AND(NULL)))OR('2131430337')))AND('u,hA')))AND(0.5851900507472646)))OR(0.8844822641760735))));SELECT DISTINCT ((CASE t0.c74  WHEN t0.c74 THEN t0.c16 WHEN v0.c0 THEN v0.c0 WHEN t0.c74 THEN t0.c16 END) IS TRUE) FROM t0, v0; -- 1ms;
SELECT t0.c58 FROM v0, t0 WHERE (((((((((NULL COLLATE NOCASE)AND(((NULL)/(0X621f9164)))))AND(UNLIKELY(x'c581b18c'))))AND(((0.19029639038060353)!=(x'')))))OR((0.9964639111018896 IN ())))); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c0 AS NUMERIC))AND((NOT (t0.c0)))))OR(((((((((t0.c74)AND(t0.c74)))OR(t0.c0)))OR(v0.c0)))OR(t0.c0)))), (((((((((('-2115428816')AND(t0.c16)))OR(t0.c0)))OR(t0.c16)))OR(t0.c16))) ISNULL), CASE WHEN (t0.c0 IN ()) THEN ABS(DISTINCT t0.c0) ELSE ((t0.c74) IS TRUE) END FROM v0, t0; -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE BINARY IN ()) FROM t0 WHERE (CAST(((x'')/(0.6363036990587786)) AS INTEGER)) ORDER BY (CAST(t0.c16 AS NUMERIC) IN ()), ((t0.c74 COLLATE BINARY)LIKE(x'')), t0.c0; -- 0ms;
SELECT DISTINCT ((((t0.c16)OR(v0.c0))) NOT NULL) FROM t0;SELECT ALL ((CAST(t0.c0 AS NUMERIC))>>(((t0.c74)OR(t0.c58)))), ((((((t0.c58)AND(x'')))AND(t0.c58)))|(((t0.c16) NOTNULL))), ((((t0.c74) BETWEEN (t0.c16) AND (t0.c16)))-(UPPER(DISTINCT t0.c58))) FROM t0 EXCEPT SELECT DISTINCT ((CAST(t0.c74 AS INTEGER)) IS TRUE), ((v0.c0 COLLATE NOCASE)&((((t0.c58, v0.c0, t0.c0, 2.131430337E9, v0.c0)) BETWEEN ((v0.c0, t0.c58, t0.c16, v0.c0, t0.c16)) AND ((v0.c0, v0.c0, t0.c74, t0.c0, 'hJ*'))))), ((((t0.c16)IS(t0.c0))) ISNULL) FROM v0, t0 WHERE (NULL); -- 0ms;
SELECT ALL 0x59ba7f73 FROM t0 WHERE ((NOT ((NULL IN ())))); -- 0ms;
SELECT ALL t0.c58 FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((IFNULL(DISTINCT t0.c16, v0.c0))AND(CAST(v0.c0 AS NUMERIC))))AND(t0.c16)) FROM t0;SELECT DISTINCT ((((((((DATETIME(t0.c58, v0.c0, t0.c74))OR((((t0.c74, t0.c16, t0.c0)) NOT BETWEEN ((t0.c0, t0.c74, v0.c0)) AND ((t0.c58, t0.c0, t0.c74))))))AND(t0.c16)))OR('FALSE')))AND(((t0.c74)<(v0.c0)))), TYPEOF(DISTINCT t0.c74 COLLATE NOCASE), (CHANGES() IN ()) FROM v0 WHERE (((- (x'')) IN ()));SELECT DISTINCT (- (((t0.c58) NOT BETWEEN (v0.c0) AND (t0.c74)))) FROM t0, v0 WHERE ((((NULL) IS TRUE) IN (0X14345bc2 COLLATE BINARY))) ORDER BY LENGTH((t0.c0 IN (t0.c16, t0.c16))) ASC  NULLS LAST; -- 0ms;
SELECT ((((t0.c0)>(v0.c0))) BETWEEN (t0.c74 COLLATE RTRIM) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c74))))) FROM t0 WHERE ((((x'' IN ())) IS TRUE));SELECT DENSE_RANK() OVER () FROM t0 WHERE (((('-926456770')%('F4.ms')) IN ('-831172636', (- (x'54d1'))))) LIMIT -1914858267; -- 0ms;
SELECT DISTINCT ((((CAST(t0.c74 AS BLOB))AND((((('0.3860721819714743')OR(t0.c16)))AND(t0.c0)))))OR(CAST(t0.c0 AS TEXT))) FROM v0 NOT INDEXED;SELECT DISTINCT 0.569571950308876, SUM(0.27822042949972914 COLLATE NOCASE) OVER (), t0.c16 FROM v0;SELECT ALL ((((((((((v0.c0)AND(NULL)))AND(t0.c0)))OR(t0.c58)))OR(v0.c0)))IS NOT('0.0207287926902342')) FROM t0, v0 WHERE ((+ ((NULL IN ())))) GROUP BY (((((t0.c74)) NOT BETWEEN ((t0.c0)) AND ((0.914103682960578)))) IS TRUE), (+ (x'1671')), ((((((((((((t0.c58)OR(t0.c74)))AND(v0.c0)))AND(v0.c0)))AND('-1710277588')))OR((+ (t0.c16)))))OR(CASE WHEN t0.c16 THEN v0.c0 END)); -- 0ms;
SELECT (~ (CASE WHEN t0.c58 THEN t0.c58 WHEN t0.c0 THEN v0.c0 WHEN t0.c74 THEN '873321566' ELSE t0.c0 END)), (('0.3694685481255784') IS TRUE), ((CAST(v0.c0 AS INTEGER))||(((t0.c74)||(t0.c58)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS BLOB) COLLATE RTRIM, ((((t0.c0) NOTNULL))%((((v0.c0)) BETWEEN ((t0.c16)) AND ((1.548767497E9))))), ((CAST(t0.c58 AS BLOB)) ISNULL), (t0.c58 COLLATE NOCASE IN ()), ((CASE t0.c74  WHEN t0.c74 THEN '1808588215' WHEN t0.c74 THEN t0.c0 WHEN t0.c74 THEN NULL END) NOT BETWEEN (CASE WHEN t0.c16 THEN t0.c16 ELSE t0.c0 END) AND ((NOT (NULL)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((t0.c74) NOT BETWEEN (t0.c16) AND (t0.c16)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT (((NOT (v0.c0))) IS FALSE) FROM t0;SELECT ALL (NOT (v0.c0)), ((((((((t0.c16)OR(t0.c16)))OR(t0.c0)))AND(IFNULL(t0.c58, t0.c0))))OR(CAST(t0.c74 AS BLOB))), ((CAST(v0.c0 AS BLOB)) BETWEEN (json_remove(x'', t0.c58)) AND ((((('898168284')AND(v0.c0)))AND(t0.c16)))) FROM t0 INDEXED BY i37, v0 ORDER BY (((((((((((t0.c16)AND(646109318)))OR(t0.c0)))OR(t0.c58)))AND(t0.c16)), ((((v0.c0)OR(v0.c0)))AND(t0.c16)), (('-123956038') IS FALSE)))>=(((((t0.c58, t0.c0, v0.c0, t0.c58, t0.c0))>=((t0.c74, t0.c16, t0.c74, t0.c74, v0.c0))), CASE WHEN t0.c16 THEN t0.c16 ELSE t0.c58 END, ((((v0.c0)AND(t0.c0)))OR(t0.c0))))) ASC;SELECT DISTINCT (x'5314' IN ()), ((((((v0.c0))>=((t0.c58))), ((t0.c16) NOT BETWEEN (t0.c0) AND (t0.c58)), ((t0.c58) IS FALSE)))<=((((t0.c58) ISNULL), NULL, ((t0.c16) NOT NULL)))), CAST(MAX(v0.c0) AS INTEGER) FROM v0, t0 WHERE (CASE CASE WHEN 0.6591376384085432 THEN ']-qL' ELSE NULL END  WHEN ((0.746214029526087)IS NOT('-568803606')) THEN (('-1019986659')<=(0.5175645764180029)) WHEN (((('-1710277588')OR(-1325521400)))AND('-1019986659')) THEN (('-1417684030') BETWEEN (x'') AND ('907231812')) WHEN IFNULL(DISTINCT 0.9467655466146891, 0.4229260750932743) THEN ((0.8844822641760735) NOTNULL) ELSE ((('x^')) NOT BETWEEN ((NULL)) AND ((NULL))) END); -- 0ms;
SELECT ALL (((t0.c58)) NOT BETWEEN ((LOWER(t0.c74))) AND ((((t0.c58) BETWEEN (t0.c58) AND (t0.c74))))) FROM t0 GROUP BY ((((((((UNLIKELY(DISTINCT t0.c74))AND(((t0.c16) ISNULL))))OR(((t0.c74) IS TRUE))))OR((((t0.c0, t0.c0, v0.c0)) NOT BETWEEN ((x'', t0.c74, t0.c16)) AND ((t0.c74, t0.c16, v0.c0))))))OR((+ (t0.c0)))) HAVING ((((t0.c58)OR(x'be01386b')))OR(t0.c74)) COLLATE BINARY;SELECT (+ (t0.c58)), CAST((((t0.c0, v0.c0, 0.12503950625591864))<>((t0.c16, v0.c0, v0.c0))) AS BLOB), (+ (((t0.c74)*('')))) FROM v0, t0 WHERE (((((((((NULL)AND(NULL)))OR('')))AND(NULL)))OR(0X3e8e63eb)) COLLATE RTRIM); -- 0ms;
SELECT NTILE(((x'') NOT BETWEEN (json_quote(t0.c58)) AND (((t0.c58) IS TRUE)))) OVER ( GROUPS BETWEEN  CURRENT ROW AND CAST(SQLITE_COMPILEOPTION_USED(t0.c74) AS INTEGER) FOLLOWING) FROM t0 WHERE (CAST(0X7fde72df AS TEXT)); -- 0ms;
SELECT ALL ((((t0.c74)) NOT BETWEEN ((t0.c74)) AND ((t0.c58))) IN ()) FROM v0 WHERE (((((((0.18891852932528297)AND(NULL)))AND('-769633697'))) ISNULL)); -- 0ms;
SELECT (((-1.881034097E9))!=((MAX(v0.c0, t0.c74)))) FROM v0 WHERE (CASE WHEN (('-415843900') ISNULL) THEN ((((((((NULL)AND(x'')))OR(NULL)))AND('-769633697')))OR(x'')) END);SELECT DISTINCT CAST(COUNT(*) AS REAL), ((((t0.c74)<=(t0.c58))) NOT NULL), 0.4088202144207558 FROM t0, v0; -- 0ms;
SELECT ALL (NOT (((t0.c16) ISNULL))) FROM t0; -- 0ms;
SELECT ALL SUM(t0.c16) FROM v0;SELECT ALL (((t0.c58 IN (t0.c58))) NOT NULL) FROM v0 WHERE ((((NOT (0.43762975635505375)))IS NOT(x''))) ORDER BY (((v0.c0)IS NOT(t0.c74)) IN ((((t0.c16)) BETWEEN ((t0.c58)) AND ((t0.c16))), (~ (x'')))) ASC;SELECT ALL ((((((((t0.c16)AND(v0.c0)))AND(t0.c16)))AND(TOTAL(v0.c0))))OR((- (t0.c0)))) FROM t0 WHERE (x'');SELECT CASE WHEN COALESCE(t0.c16, t0.c74) THEN (((v0.c0))==((t0.c58))) ELSE (((t0.c74))==((t0.c58))) END FROM t0 WHERE (ABS(DISTINCT ((0.9655706092326467) NOT BETWEEN ('1e.(sC>,-') AND ('')))) LIMIT -926533051;SELECT DISTINCT json_object(((t0.c58)==(t0.c0)), ((((((((t0.c16)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(x''))), (('')*(CAST(t0.c16 AS TEXT))), GROUP_CONCAT(MIN(((v0.c0) ISNULL))) FROM v0 LIMIT 873321566;SELECT DISTINCT x'f568' FROM t0, v0 WHERE ((0.039586099373879025 IN (0.1836241042416944)) COLLATE RTRIM) LIMIT -831172636 OFFSET 1885237052; -- 0ms;
SELECT DISTINCT ((t0.c16)<<(t0.c58)) COLLATE BINARY FROM v0;SELECT t0.c16 FROM t0, v0; -- 0ms;
SELECT ALL CASE WHEN ((t0.c16)*(t0.c16)) THEN CHAR(v0.c0) ELSE ((-5.1838111E8) NOT NULL) END FROM v0, t0 WHERE (((('0.9655706092326467') NOTNULL) IN ())); -- 0ms;
SELECT t0.c16 COLLATE RTRIM FROM v0, t0 ORDER BY (((t0.c58)) NOT BETWEEN ((((((((((t0.c74)OR(t0.c0)))OR(t0.c74)))AND(t0.c0)))AND(t0.c74)))) AND (((NOT (t0.c0)))))  NULLS FIRST; -- 0ms;
SELECT ALL ((CAST(t0.c58 AS BLOB)) ISNULL) FROM t0, v0 WHERE ((NOT (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((LIKELIHOOD('0.8844822641760735', 0.5422118367617287))*(('' IN ())))); -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN ((t0.c58 COLLATE RTRIM)) AND ((CAST(t0.c16 AS INTEGER)))), LIKELY(DISTINCT ((t0.c0)==(v0.c0))), 0.047998087780404264 FROM v0, t0 ORDER BY (((((t0.c0)AND(t0.c0)))AND(t0.c58)) IN ()) DESC, '0' DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((v0.c0) NOTNULL))OR(COUNT(*))))OR(((t0.c74)AND(t0.c74)))) FROM v0, t0 WHERE (((CAST(0.5893202570469409 AS NUMERIC)) BETWEEN ((('-1307375889') NOT BETWEEN ('0.4088202144207558') AND (x''))) AND (((0X32980d40)|(x''))))) GROUP BY ((((((t0.c16)OR(t0.c58)))AND('J+'))) NOT NULL); -- 0ms;
SELECT ALL (~ (((((v0.c0)OR(v0.c0)))OR(t0.c74)))), (SQLITE_COMPILEOPTION_GET(t0.c0) IN ()), (((-415843900)) NOT BETWEEN ((0x200b8843)) AND ((MAX(0xfffffffffa958639)))) FROM v0 WHERE (((0.6445050743542837 IN ()) IN (((NULL) ISNULL))));SELECT ALL (((+ (t0.c16))) NOTNULL), (GROUP_CONCAT(x'') IN ()), ((COUNT(t0.c58))!=(((t0.c16)&(v0.c0)))) FROM t0 WHERE (((CAST(0.28970888065504075 AS REAL)) IS TRUE));SELECT DISTINCT ((SUM(t0.c0)) IS TRUE) FROM v0 WHERE (((CAST('-1075361293' AS REAL))IS NOT(TRIM(DISTINCT '')))) ORDER BY ((((t0.c0) NOTNULL)) NOT BETWEEN (((t0.c0)-(t0.c74))) AND (CASE WHEN -846997534 THEN t0.c0 ELSE v0.c0 END))  NULLS LAST;SELECT DISTINCT v0.c0 FROM v0, t0 LIMIT 991123342; -- 1ms;
SELECT t0.c58 FROM v0 NATURAL JOIN t0 GROUP BY PRINTF(((t0.c0) ISNULL), ((((t0.c16)AND(v0.c0)))AND(t0.c74)), json_patch(t0.c58, v0.c0)), (((t0.c16))!=(('*'))) COLLATE BINARY, (((((t0.c0)>(v0.c0)), t0.c74, ((t0.c16)<(t0.c58))))>(((((t0.c0, t0.c16, t0.c74)) BETWEEN ((t0.c16, v0.c0, t0.c16)) AND ((t0.c58, v0.c0, t0.c0))), ((t0.c74)<>(t0.c58)), CASE v0.c0  WHEN t0.c58 THEN t0.c58 END))) HAVING (('%') IS FALSE); -- 0ms;
SELECT DISTINCT (((((t0.c58) NOT BETWEEN (t0.c0) AND (t0.c0)), (+ (t0.c0)), ((((((((t0.c58)OR(v0.c0)))OR(v0.c0)))OR(t0.c16)))OR(v0.c0))))<=((json_object(t0.c74, t0.c0, t0.c74, t0.c0), ((v0.c0) NOTNULL), ((t0.c16)|(x''))))), GROUP_CONCAT(CAST(v0.c0 AS REAL)), (((v0.c0, t0.c74, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (0.263167286391062) AND (v0.c0)), (((t0.c74, t0.c74, t0.c74))==((v0.c0, t0.c58, t0.c58))), t0.c16)) AND ((((t0.c58) BETWEEN ('270004772') AND (t0.c0)), t0.c58, ((t0.c74) ISNULL)))), CASE WHEN t0.c0 THEN (t0.c74 IN ()) END, ((t0.c58 COLLATE RTRIM) IS TRUE) FROM v0, t0;SELECT DISTINCT (((t0.c74)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c16 ELSE '' END)) AND ((((t0.c0)|(t0.c58))))), ((t0.c74)==(t0.c74)) COLLATE NOCASE, 0.9369207957405736, COALESCE(DISTINCT ((t0.c74)OR(t0.c16)), ((t0.c16)IS NOT(v0.c0)), '^', json_array(t0.c16, t0.c16)), 'G3q8GL.', CASE WHEN v0.c0 THEN json_patch(NULL, t0.c58) END, FIRST_VALUE((((1)&(t0.c74)) IN ())) OVER ( ORDER BY TYPEOF(DISTINCT ((((t0.c0)OR(v0.c0)))OR(v0.c0))) ASC) FROM t0 WHERE (TIME((0.5512659526717028 IN ()), (- (0xffffffffab7fdbc2)), (- ('1461015236'))));SELECT AVG((((t0.c58))>((t0.c74)))) FROM v0, t0 LIMIT 506103368 OFFSET -568803606; -- 0ms;
SELECT (MAX(t0.c16) IN ()), COUNT((- (t0.c0)) COLLATE BINARY), ((t0.c0)||(x'')) COLLATE NOCASE, ((((((t0.c58)) BETWEEN ((t0.c0)) AND ((t0.c58))), CAST(t0.c16 AS INTEGER), ((v0.c0) IS TRUE)))=((((t0.c58)!=(t0.c74)), ABS(t0.c74), '+!'))), (((((t0.c16) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c74, ((t0.c74) IS TRUE)))>((((t0.c16)-(t0.c16)), t0.c74 COLLATE NOCASE, ((t0.c74) BETWEEN (t0.c16) AND (t0.c74))))) FROM t0, v0 WHERE ((NOT ((((((((('')AND(-8.31172636E8)))OR('1062885392')))AND(x'ab41185d')))AND('ﻏ鲳+sWc'))))); -- 1ms;
SELECT DISTINCT (NOT (((v0.c0)>(t0.c16)))) FROM t0 WHERE (((json_array_length(x'')) BETWEEN (LOWER(DISTINCT NULL)) AND (x'' COLLATE BINARY)));SELECT (((t0.c16) IS TRUE) IN ()) FROM v0, t0 WHERE (LIKELIHOOD(DISTINCT (('_7')|(NULL)), 0.785874131391581)); -- 0ms;
SELECT ALL CASE ((v0.c0) NOT BETWEEN (t0.c74) AND (v0.c0))  WHEN ((((t0.c58)OR(t0.c0)))AND(t0.c74)) THEN (((t0.c16, t0.c16, t0.c58))<=((v0.c0, t0.c0, t0.c74))) WHEN 0.7509463001870718 THEN ((t0.c16) IS TRUE) WHEN t0.c74 THEN COUNT(*) WHEN CAST(t0.c0 AS TEXT) THEN t0.c58 COLLATE NOCASE WHEN CASE WHEN t0.c0 THEN t0.c74 WHEN t0.c16 THEN t0.c58 WHEN t0.c0 THEN t0.c16 ELSE v0.c0 END THEN '+1K>' END FROM t0 LIMIT 1548767497 OFFSET -339810924;SELECT (((5.06103368E8))<=(((+ (v0.c0))))) FROM t0, v0 LIMIT 1702958666; -- 0ms;
SELECT ALL CAST(0.9324646385814598 AS REAL) FROM v0 WHERE (0.03184161887391779); -- 0ms;
SELECT t0.c74 FROM v0 WHERE (((((((x'a204')OR(x'')))AND(NULL))) NOT BETWEEN ((((('-1394150723')AND(0.07661343698203871)))AND(']Q*}-Vu酤D'))) AND (CASE WHEN x'' THEN -458171119 END)));SELECT ((((t0.c16)AND((((t0.c74)) NOT BETWEEN ((t0.c16)) AND ((v0.c0))))))AND(((t0.c0) BETWEEN ('641620796') AND (t0.c0)))), ((((t0.c0) IS FALSE)) BETWEEN (((((((((t0.c74)OR(t0.c16)))OR(t0.c0)))AND(t0.c16)))OR(t0.c16))) AND ((((x'27fb94c1')) NOT BETWEEN ((t0.c0)) AND ((t0.c58))))), ((UPPER(t0.c58)) IS FALSE) FROM t0, v0 GROUP BY (((((- (t0.c74)))AND('')))AND((v0.c0 IN ()))), t0.c74, ((t0.c16) NOT NULL) COLLATE BINARY;SELECT DISTINCT ((t0.c58) NOT BETWEEN (t0.c16) AND (t0.c16)) COLLATE BINARY FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOTNULL)) NOT BETWEEN (CAST(t0.c74 AS TEXT)) AND (v0.c0)) FROM t0 WHERE (((CASE WHEN -1088470621 THEN '-1905295189' END)IS(CASE NULL  WHEN x'' THEN x'' WHEN '' THEN '' WHEN '-1742030304' THEN x'' ELSE NULL END)));SELECT DISTINCT CAST(((t0.c16)|(0.0028849563161981173)) AS NUMERIC), (((t0.c16) NOT NULL) IN ()), CASE CAST(t0.c16 AS INTEGER)  WHEN (t0.c16 IN ()) THEN 'H}' WHEN ((t0.c16) NOT NULL) THEN ((((((((t0.c0)AND(t0.c74)))AND(t0.c74)))AND(t0.c74)))OR(t0.c74)) WHEN ((t0.c0) ISNULL) THEN (t0.c0 IN ()) END, ((t0.c74 COLLATE RTRIM) BETWEEN ((((t0.c74, v0.c0, t0.c16))<=((t0.c0, t0.c58, t0.c0)))) AND (CASE t0.c74  WHEN v0.c0 THEN t0.c0 WHEN t0.c16 THEN v0.c0 WHEN t0.c0 THEN t0.c58 WHEN t0.c0 THEN t0.c16 WHEN t0.c74 THEN t0.c74 END)), (x'8fb5' IN (COUNT(v0.c0))) FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c58)+(0.8419976490180514)) AS REAL) FROM v0 GROUP BY CASE ((t0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN 0.9683440818523494 END HAVING CAST((x'' IN ()) AS TEXT);SELECT SQLITE_COMPILEOPTION_USED(GROUP_CONCAT(t0.c16)) FROM v0, t0 WHERE ((((NULL) NOT BETWEEN (NULL) AND (x'ab4c')) IN ())); -- 0ms;
SELECT DISTINCT t0.c0 FROM v0, t0; -- 0ms;
SELECT ALL TOTAL(t0.c0), (rtreenode(t0.c16, t0.c16) IN ()), 0x5a9f0147 FROM t0 WHERE (CAST(((x'ffcc')<=(NULL)) AS NUMERIC)) UNION SELECT DISTINCT ((((t0.c74)OR(0xffffffffe4b0dd11)))AND(v0.c0)) COLLATE NOCASE, AVG(t0.c0) OVER (), ((((CASE WHEN t0.c74 THEN t0.c58 END)OR(((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))))AND(t0.c58 COLLATE RTRIM)) FROM v0 LIMIT -433510431 OFFSET -1745532009;SELECT DISTINCT (- (((((t0.c58)OR('')))OR(v0.c0)))) FROM t0, v0 NOT INDEXED; -- 0ms;
SELECT ALL ((((t0.c16) IS TRUE)) IS TRUE), (((v0.c0 IN ()))LIKE(t0.c0)), (~ (CASE t0.c16  WHEN t0.c74 THEN x'' WHEN t0.c0 THEN t0.c74 WHEN v0.c0 THEN t0.c0 ELSE t0.c58 END)) FROM v0 LIMIT -498840699 OFFSET 834569949;SELECT ((t0.c74 IN (t0.c58)) IN (CASE WHEN t0.c16 THEN t0.c16 WHEN t0.c74 THEN t0.c58 WHEN t0.c58 THEN t0.c16 END)) FROM t0 NOT INDEXED, v0 WHERE ((((((0.7193766655197011))<((NULL)))) IS TRUE)); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) NOTNULL) COLLATE BINARY) FROM t0; -- 0ms;
SELECT ALL 386293454 COLLATE NOCASE FROM t0 WHERE (CASE ((641620796) IS FALSE)  WHEN (((']Q*}-VU酤D')) NOT BETWEEN ((NULL)) AND ((0.5156835917649901))) THEN ABS(NULL) END); -- 0ms;
SELECT ((t0.c58 COLLATE BINARY) BETWEEN (t0.c16) AND (((t0.c0) ISNULL))) FROM t0, v0 GROUP BY (((((t0.c58) IS FALSE)))<((CASE t0.c58  WHEN v0.c0 THEN t0.c0 ELSE t0.c16 END))), ((((t0.c16) BETWEEN (t0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (NULLIF(t0.c0, t0.c0))), ((LTRIM(t0.c74, t0.c0))|(((v0.c0)||(t0.c74)))); -- 0ms;
SELECT DISTINCT (((COUNT(*)))!=((t0.c74))) FROM v0, t0 LIMIT 1713741243 OFFSET 710023554; -- 0ms;
SELECT CASE (NOT (v0.c0))  WHEN (((t0.c58)) BETWEEN ((-1983132512)) AND (('K\n!}&,0'))) THEN UNLIKELY(DISTINCT t0.c16) ELSE t0.c74 COLLATE BINARY END FROM v0 WHERE (((((NULL)&(''))) BETWEEN (CAST('-640215108' AS REAL)) AND (((NULL)OR(x'')))));SELECT DISTINCT CAST(((((v0.c0)OR(v0.c0)))AND(0xffffffffc54828ac)) AS TEXT), COUNT(*) FILTER(WHERE (((((t0.c58, t0.c58, x'aada')) NOT BETWEEN ((t0.c16, v0.c0, t0.c74)) AND ((t0.c74, v0.c0, t0.c74)))) ISNULL)) OVER (), TOTAL((((t0.c74, t0.c0, v0.c0)) NOT BETWEEN ((t0.c58, t0.c16, t0.c0)) AND ((t0.c16, t0.c0, t0.c0)))) OVER () FROM t0 LIMIT 1436579945 OFFSET -881476527;SELECT DISTINCT ROW_NUMBER() OVER () FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c16 AS REAL) COLLATE BINARY, (AVG(t0.c0) IN ((t0.c16 IN ()))), PERCENT_RANK() OVER () FROM t0 WHERE (((((NULL) NOT NULL))-(CAST(NULL AS BLOB)))) GROUP BY ((json_object(t0.c74, v0.c0)) IS FALSE), ((((((((t0.c58 COLLATE RTRIM)AND((- (v0.c0)))))AND(t0.c58)))AND(t0.c74)))OR((v0.c0 IN ()))), ABS(t0.c0 COLLATE BINARY) HAVING '';SELECT CAST(CAST(t0.c58 AS NUMERIC) AS TEXT), ((~ (t0.c74)) IN (v0.c0 COLLATE BINARY)), ((((((t0.c16)>=(t0.c74)))AND(CAST(v0.c0 AS TEXT))))OR(v0.c0 COLLATE NOCASE)) FROM v0 WHERE ('');SELECT DISTINCT CAST(((t0.c16)<<(v0.c0)) AS INTEGER) FROM t0;SELECT ((GROUP_CONCAT(v0.c0))*(((t0.c74) BETWEEN (t0.c16) AND (t0.c58)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT SUM(0.7439395051571838 COLLATE NOCASE COLLATE NOCASE) FROM v0, t0 WHERE (0Xffffffffa0033649); -- 0ms;
SELECT ALL (MAX(t0.c16) IN (v0.c0)) FROM v0, t0 WHERE (0x27e7680b); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET('SvbE') FROM v0, t0 ORDER BY t0.c74, t0.c58 COLLATE NOCASE ASC; -- 0ms;
SELECT AVG(NULL) OVER (), ((((t0.c16)IS(v0.c0)))*(CAST('-498840699' AS INTEGER))), TOTAL(t0.c16) FILTER(WHERE ((0.6473864579724197) ISNULL)) OVER () FROM t0, v0; -- 0ms;
SELECT ALL (~ (t0.c16)), (((((((((0.29884731906302164)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(t0.c0)) IN ()), RANK() OVER () FROM v0 WHERE ((((('') NOT BETWEEN (x'0b83') AND (NULL)))!=(CASE WHEN NULL THEN NULL END))) GROUP BY 0.9903563322532546;SELECT ALL TYPEOF((((t0.c74, t0.c0, v0.c0)) BETWEEN ((t0.c58, '-205375013', t0.c58)) AND ((t0.c74, t0.c74, t0.c16)))) FROM t0, v0 WHERE ('2138929897') GROUP BY (((t0.c16) BETWEEN ('-52346664') AND (v0.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((((t0.c16)||(t0.c58)))!=((((t0.c16, v0.c0, t0.c74))>((t0.c0, t0.c0, t0.c58))))), 'Z}', ((((((t0.c74)OR(t0.c0)))OR(t0.c58)))<(((t0.c74)IS NOT(t0.c0)))) FROM v0, t0 WHERE (((((((((((0.5423223394344201)AND(x'484a9759')))AND(0.995199549989043)))OR(0X24fe43c)))OR(x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((0.6674910526678041)LIKE(t0.c74)))AND(x'')))OR(((t0.c74)IS NOT(t0.c74)))) FROM v0, t0 WHERE ((+ (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT 0.7193766655197011 FROM t0 GROUP BY ((((IFNULL(DISTINCT 0.8139958704822224, t0.c16))OR('1145739183')))OR(JULIANDAY(v0.c0, t0.c16, t0.c58))), ((((CAST(t0.c58 AS INTEGER))OR(t0.c58)))AND(((((v0.c0)AND(NULL)))OR(NULL)))), ((((t0.c74)IS(t0.c0)))GLOB(0x571552c4));SELECT DISTINCT ((((((t0.c74)OR(t0.c0)))OR(t0.c16)))IS(((t0.c58) NOT NULL))), AVG(((((t0.c0)AND(t0.c74)))OR(t0.c74))) COLLATE RTRIM, ((CASE WHEN '-831172636' THEN NULL END)+(CAST(t0.c0 AS NUMERIC))) FROM v0;SELECT ALL ((((t0.c58) ISNULL)) NOT BETWEEN (24429644) AND (t0.c16 COLLATE NOCASE)) FROM t0; -- 4ms;
SELECT DISTINCT (((((((((t0.c74 IN ()))OR(((((((((t0.c16)AND(t0.c16)))AND(t0.c0)))AND(t0.c16)))AND(t0.c58)))))AND(t0.c0 COLLATE RTRIM)))AND(((((t0.c74)OR(t0.c74)))AND(t0.c58)))))OR(((t0.c16)>=(t0.c58)))), GROUP_CONCAT(((t0.c16) NOT BETWEEN (t0.c74) AND (v0.c0))) OVER ( ORDER BY (~ (CASE WHEN t0.c16 THEN t0.c0 ELSE t0.c58 END))  NULLS FIRST), NULL FROM t0 WHERE (((('	3b')<>(0.10589396053558109)) IN (LIKELY(DISTINCT NULL), ((1.68944535E8)>>(-1.5837427E8))))) ORDER BY (NOT (((v0.c0) NOTNULL)))  NULLS LAST LIMIT 1689188333;SELECT DISTINCT ((CAST(t0.c74 AS NUMERIC)) NOT BETWEEN (LIKELY(t0.c0)) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c16)))) FROM t0 WHERE (CAST('' AS REAL));SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))||(t0.c0)) FROM v0, t0 LIMIT 2115084235; -- 0ms;
SELECT DISTINCT ((((((v0.c0)*(t0.c0)))AND(CASE WHEN t0.c74 THEN v0.c0 ELSE t0.c0 END)))OR(((t0.c74) BETWEEN (t0.c16) AND (0.6745376929648907)))) FROM t0;SELECT DISTINCT ((((GROUP_CONCAT(0.29762595362369326))OR(CAST(v0.c0 AS TEXT))))AND(x'')) FROM v0, t0 LIMIT -981166375; -- 0ms;
SELECT DISTINCT AVG((t0.c0 IN ())) OVER () FROM t0 CROSS JOIN v0 ON '-759303313' GROUP BY ((((((((((((t0.c74)AND(t0.c58)))OR(t0.c0)))OR(NULL)))OR(t0.c16)))AND(((v0.c0)LIKE(t0.c16)))))OR(CASE v0.c0  WHEN t0.c16 THEN t0.c58 WHEN t0.c58 THEN v0.c0 WHEN t0.c58 THEN t0.c58 ELSE t0.c16 END)), ((((((((((t0.c58)OR(t0.c16)))OR(t0.c0)))AND(v0.c0)))OR(v0.c0)))<<(CAST(v0.c0 AS TEXT))), (NOT (((t0.c58) NOT BETWEEN (t0.c74) AND (t0.c58)))) HAVING -1905295189; -- 0ms;
SELECT SUM(((t0.c0) ISNULL)) FILTER(WHERE t0.c58) OVER ( ORDER BY ((((t0.c74) NOT NULL)) NOT BETWEEN (t0.c58) AND (((t0.c74)|(t0.c74)))) DESC  NULLS LAST RANGE BETWEEN (((((t0.c16) BETWEEN (t0.c74) AND (t0.c74))))!=((0.9519464527425018))) FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t0, v0 WHERE (((((0.11027508431643629)==(''))) NOT BETWEEN (((('1251094201'))<(('-139919665')))) AND (x'' COLLATE BINARY))) GROUP BY (((((t0.c0))>=((0.14806433219937332))))||(CASE t0.c58  WHEN v0.c0 THEN t0.c74 END)); -- 0ms;
SELECT DISTINCT NTH_VALUE((((((t0.c16)) NOT BETWEEN ((t0.c74)) AND ((t0.c74)))) BETWEEN (((t0.c58)>=(t0.c74))) AND (UNLIKELY(t0.c16))), t0.c58) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND CASE ((((t0.c74)AND(t0.c0)))AND(t0.c0))  WHEN (((t0.c0, t0.c16, t0.c74))>(('>', t0.c16, t0.c74))) THEN 0.6524480137550228 END FOLLOWING EXCLUDE GROUP) FROM t0, v0;SELECT DISTINCT (- (v0.c0)) COLLATE RTRIM, MIN(CAST(t0.c16 AS BLOB)), (((((NOT (t0.c58)))AND(((((((((v0.c0)OR(t0.c0)))OR(t0.c16)))AND(t0.c58)))AND(t0.c74)))))OR(load_extension(t0.c74))) FROM v0;SELECT DISTINCT ROW_NUMBER() OVER () FROM t0, v0 GROUP BY ((((t0.c16) IS TRUE))AND(((t0.c16) NOT BETWEEN (t0.c74) AND (t0.c16)))) HAVING ((((t0.c74) NOT BETWEEN (t0.c0) AND (t0.c74)))>(v0.c0)); -- 0ms;
SELECT DISTINCT ((((t0.c0)) BETWEEN ((t0.c74)) AND ((t0.c16))) IN (t0.c0 COLLATE NOCASE)), ((v0.c0 IN ()) IN (t0.c16)), ((((t0.c16)OR(t0.c0)))<(MIN(t0.c16))) FROM v0 WHERE (((((NULL)|(NULL))) ISNULL));SELECT DISTINCT CASE CASE t0.c74  WHEN v0.c0 THEN t0.c0 END  WHEN CAST(t0.c58 AS TEXT) THEN SUM(t0.c16) END, (((((t0.c0, x'', NULL)) BETWEEN ((t0.c0, t0.c0, t0.c74)) AND ((t0.c16, t0.c58, t0.c58)))) BETWEEN (MAX(t0.c74, t0.c74)) AND (MAX(v0.c0))), RANK() OVER () FROM v0 WHERE (((((NULL) NOTNULL)) BETWEEN (NULLIF(NULL, 0Xffffffffebbee594)) AND (NULL))) ORDER BY ((t0.c16 COLLATE NOCASE) ISNULL)  NULLS LAST LIMIT -1157037772 OFFSET -585030355;SELECT ((x'') IS FALSE) FROM v0 GROUP BY v0.c0 HAVING SUM((t0.c58 IN ())); -- 0ms;
SELECT DISTINCT (t0.c74 IN ()) FROM v0 WHERE (CASE WHEN (((0.022609677427595676, 728036391, x'')) NOT BETWEEN (('', 0.41701382372581264, '358235117')) AND ((x'', 'B(', x''))) THEN ((x'')LIKE(x'')) ELSE (('-158374270') NOT NULL) END); -- 0ms;
SELECT (+ ((((t0.c0))>=((t0.c74))))), ((CASE t0.c58  WHEN '-846997534' THEN t0.c74 ELSE t0.c0 END)%(ABS(DISTINCT v0.c0))), (- ('杞-5t')) FROM v0, t0 WHERE ((~ (((((x'')AND('')))OR('1845098750'))))) ORDER BY 0xffffffffc3343d1d; -- 0ms;
SELECT DISTINCT (v0.c0 COLLATE BINARY IN ()) FROM t0, v0 WHERE (CASE UNLIKELY(x'')  WHEN ((x'') BETWEEN ('-1905295189') AND (x'80c1')) THEN '0.205196831100256' COLLATE NOCASE ELSE '' END); -- 0ms;
SELECT DISTINCT ((((t0.c58)IS NOT(t0.c74)))!=('0.1836241042416944')) FROM t0, v0; -- 1ms;
SELECT ALL CAST(t0.c0 AS INTEGER) COLLATE NOCASE FROM v0, t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c58 THEN ']Q*}-Vu酤D' END) NOT BETWEEN (v0.c0) AND (((((t0.c16)OR(t0.c16)))OR(t0.c16)))) FROM v0, t0 WHERE (((0.8689488958038739) IS FALSE)); -- 0ms;
SELECT LAG(LENGTH(v0.c0), (~ (CAST(t0.c74 AS TEXT))), (((((((((('<#')AND(t0.c0)))OR(t0.c58)))OR(t0.c74)))AND('')))GLOB(((t0.c0)>=(t0.c58))))) OVER () FROM t0, v0 WHERE ((((0.5512659526717028 IN ())) BETWEEN ((- (NULL))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (- (((((t0.c16)OR(t0.c58)))AND(-846997534)))) FROM v0;SELECT (((t0.c16 IN ()))-(((((((((t0.c16)AND(v0.c0)))AND(0.07259915403804229)))OR(v0.c0)))OR('(7s[')))) FROM t0, v0 WHERE (CAST(((0.10604299908715475) IS TRUE) AS INTEGER)); -- 0ms;
SELECT ((CASE v0.c0  WHEN t0.c74 THEN v0.c0 END) BETWEEN (((t0.c74) BETWEEN (t0.c58) AND (t0.c0))) AND (CASE 0.16053198585797512  WHEN '-595523329' THEN t0.c74 END)) FROM t0, v0; -- 0ms;
SELECT (((v0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND (((t0.c74 IN ('yu'))))) FROM v0, t0 INDEXED BY i85 WHERE ((NOT (((x'') ISNULL)))) ORDER BY ((('47673517')&(t0.c74)) IN (t0.c16, CAST(t0.c74 AS NUMERIC))), ABS(((((t0.c74)AND(t0.c74)))OR(v0.c0))) ASC, (((t0.c74, NULL, t0.c58)) NOT BETWEEN (((((t0.c16)) BETWEEN ((t0.c16)) AND ((t0.c0))), (t0.c16 IN ()), (+ (t0.c58)))) AND ((LIKE('751686849', t0.c16), ((t0.c0) BETWEEN (t0.c16) AND ('130584622')), 0x976b64b)))  NULLS FIRST; -- 1ms;
SELECT DISTINCT COUNT(*) FROM v0, t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT AVG(((((v0.c0)OR(t0.c58)))OR(t0.c16))), ROW_NUMBER() OVER (), (((v0.c0) NOTNULL) IN ()), t0.c16, TOTAL(CASE t0.c0  WHEN v0.c0 THEN v0.c0 WHEN t0.c58 THEN t0.c16 WHEN t0.c16 THEN v0.c0 ELSE t0.c74 END) FROM t0, v0; -- 0ms;
SELECT (NOT (((t0.c0) BETWEEN (t0.c74) AND (t0.c0)))) FROM t0, v0; -- 0ms;
SELECT ALL TOTAL(((t0.c16) ISNULL)) FROM v0 GROUP BY ((((((t0.c74)GLOB(t0.c0)))AND(TYPEOF(v0.c0))))AND(((t0.c58) NOTNULL))) HAVING ((UNLIKELY(DISTINCT 0.6837262642242267))<<(v0.c0));SELECT ALL ((((v0.c0) NOT BETWEEN (t0.c58) AND (t0.c58))) NOTNULL) FROM t0, v0 WHERE (((- (NULL)) IN ())); -- 0ms;
SELECT ALL ((((((t0.c74)IS NOT(t0.c74)))AND(COALESCE(t0.c0, t0.c74))))AND(t0.c16)), (NOT (t0.c16)) COLLATE BINARY, ((((v0.c0) NOTNULL))%(((t0.c0)|(t0.c16)))), (((t0.c74) NOT BETWEEN ('') AND (t0.c0)) IN (v0.c0 COLLATE BINARY)), COUNT(*) OVER () FROM t0 WHERE ((NOT (CASE WHEN '_WH' THEN '\rFMPg0D-a' END)));SELECT DISTINCT 'a}h*' FROM t0, v0 WHERE (LIKELIHOOD(DISTINCT (('-388183797') BETWEEN (0.6743434637969219) AND (0xffffffffd6c94ad2)), 0.004805973305862632)); -- 0ms;
SELECT ALL (- (((0.6541052299412817)==(t0.c0)))) FROM v0, t0 WHERE (CASE WHEN CASE WHEN '-831076599' THEN 'o	n8' END THEN (NOT (x'cd29')) ELSE (2.145284831E9 IN (0.6714391528976903)) END); -- 0ms;
SELECT ALL ((((((((((t0.c16)AND(v0.c0)))AND(t0.c0)))AND(t0.c58)))AND(t0.c0))) BETWEEN (((t0.c0)IS(t0.c0))) AND (CASE WHEN t0.c74 THEN t0.c0 WHEN x'b22b' THEN v0.c0 WHEN t0.c0 THEN x'739a' END)) FROM v0, t0 WHERE ((MAX(0.29953017979897134, 0x4ee9d25d) IN ())); -- 1ms;
SELECT ALL v0.c0 FROM t0 WHERE (NULLIF(0Xffffffffb7296650, CASE WHEN 0.7319512448312175 THEN x'' END)) LIMIT 338975682 OFFSET -826133517;SELECT ALL ((CAST(t0.c58 AS REAL))<(CAST(t0.c0 AS INTEGER))) FROM t0, v0 WHERE (((CAST(1.808588215E9 AS REAL))>>(x'7e4c'))) LIMIT -1545336644; -- 0ms;
SELECT ALL x'', ((0Xffffffffbc8de1a1)/(((v0.c0)<=(t0.c16)))), t0.c58 FROM t0, v0; -- 0ms;
SELECT ALL FIRST_VALUE(CASE WHEN ((t0.c16)!=(t0.c58)) THEN ((((t0.c58)OR(v0.c0)))AND(t0.c0)) WHEN x'' THEN json_valid(t0.c0) WHEN v0.c0 THEN (~ (t0.c58)) ELSE ((('-583126069'))<>((v0.c0))) END) OVER () FROM t0, v0; -- 0ms;
SELECT (((- (t0.c16))) NOT BETWEEN (highlight(v0.c0, t0.c74, v0.c0, t0.c0)) AND (((t0.c16)/(t0.c58)))), CAST(CAST(t0.c74 AS REAL) AS TEXT), CASE WHEN CAST(t0.c58 AS NUMERIC) THEN t0.c16 END FROM t0 WHERE ((((('HnG*Y<')GLOB(x''))) BETWEEN ((NOT ('댙'))) AND (((0.5512659526717028) IS FALSE)))) LIMIT 715140112 OFFSET 822503585;SELECT x'' FROM t0, v0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(COALESCE('-1905295189', t0.c74, t0.c74, t0.c0)), CASE WHEN ((t0.c74)-(t0.c74)) THEN (+ (t0.c16)) END, (((t0.c58 IN (t0.c58)))GLOB(((t0.c0) NOT BETWEEN (t0.c16) AND (v0.c0)))) FROM v0 WHERE (((CASE WHEN '-1139542369' THEN x'8f7e' ELSE 2045617167 END) ISNULL));SELECT ALL ((t0.c74)GLOB(t0.c16)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c74))>>((~ (t0.c0)))) FROM t0, v0 GROUP BY ((t0.c16) IS TRUE) COLLATE NOCASE HAVING CAST((t0.c0 IN ()) AS TEXT); -- 0ms;
SELECT ALL CAST(t0.c16 AS BLOB) COLLATE RTRIM FROM t0, v0 ORDER BY x'', (((t0.c0)) BETWEEN ((((((((((t0.c58)AND(-890819100)))AND(t0.c16)))OR(t0.c58)))OR(t0.c58)))) AND ((((t0.c16) ISNULL))))  NULLS FIRST, ((t0.c0 IN ()) IN ((NOT (t0.c74)))) ASC, (((-8.46997534E8))>((t0.c74 COLLATE NOCASE))) DESC; -- 0ms;
SELECT ALL x'' FROM v0, t0 LIMIT -1272618568; -- 0ms;
SELECT DISTINCT t0.c58 FROM v0, t0; -- 0ms;
SELECT COUNT((((v0.c0, t0.c74, t0.c16))>=((t0.c58, x'', t0.c58)))) OVER () FROM v0 WHERE (((json_array(x'', 0.6445050743542837))==(CASE '7Cݯ4S'  WHEN NULL THEN 0.7206343855443557 WHEN 'z}' THEN 9123731875406898234 WHEN x'' THEN NULL WHEN '>1' THEN 0.642366097227536 WHEN x'c7ee1ace' THEN NULL END))) ORDER BY NULL COLLATE NOCASE, (((((0.02772737708043327)) BETWEEN ((t0.c16)) AND ((t0.c58))))/((- (t0.c0)))) DESC  NULLS FIRST;SELECT FIRST_VALUE(NULL) OVER (), (((CAST(t0.c74 AS INTEGER), CASE WHEN t0.c58 THEN t0.c0 ELSE x'de7e' END, t0.c74))>((TYPEOF(t0.c74), (t0.c74 IN ()), CASE t0.c74  WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c16 WHEN t0.c58 THEN t0.c74 END))), ((((t0.c58)<>(t0.c58)))/((((t0.c58))<=((t0.c58))))) FROM v0 WHERE ((((320647641)) BETWEEN (((('494843507')>>(x'')))) AND (((((0Xffffffffadeabae9))>((0.8985806408713743))))))) ORDER BY ((((t0.c16) IS TRUE))<<(((v0.c0)&(x''))))  NULLS LAST, (((((((((((t0.c74)OR(t0.c16)))OR(t0.c0)))OR(t0.c74)))OR(v0.c0)), (~ (t0.c74)), ((t0.c16)IS(t0.c16))))<(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), '0.7439395051571838', -8.46997534E8))), ((((((((((t0.c0)OR(t0.c58)))AND(v0.c0)))OR(t0.c0)))OR(t0.c58)))<=(((t0.c58) NOT NULL))) ASC  NULLS FIRST;SELECT DISTINCT AVG(((t0.c0) IS FALSE)), CAST((((t0.c58, v0.c0, v0.c0)) NOT BETWEEN ((t0.c74, t0.c0, t0.c16)) AND ((t0.c0, v0.c0, t0.c58))) AS INTEGER), ((((((t0.c74)AND(t0.c74)))AND(v0.c0)))||(v0.c0)) FROM v0 GROUP BY 0.7734308818668472;SELECT DISTINCT CUME_DIST() OVER () FROM v0, t0 WHERE (((((((x'9939') BETWEEN ('1552196893') AND (x'')))OR(UNLIKELY(DISTINCT x''))))OR(((x'')=(-703908752))))); -- 0ms;
SELECT DISTINCT '욞''v䗢' COLLATE RTRIM FROM v0 ORDER BY ((CASE t0.c58  WHEN '0.43762975635505375' THEN t0.c0 ELSE t0.c0 END)<(CASE WHEN t0.c16 THEN v0.c0 WHEN t0.c58 THEN t0.c58 WHEN t0.c16 THEN t0.c74 ELSE v0.c0 END)) DESC  NULLS FIRST;SELECT TRIM(DISTINCT 0.13095281299978512, (('*]ڹ剟A,\nwl') IS FALSE)) FROM v0, t0; -- 0ms;
SELECT DISTINCT '[s', (CAST(v0.c0 AS INTEGER) IN ()), ((((v0.c0))>((t0.c0))) IN ()) FROM t0; -- 1ms;
SELECT ALL GROUP_CONCAT(((t0.c16) ISNULL)) FILTER(WHERE ((((t0.c58)*(t0.c58))) BETWEEN (json_quote(t0.c0)) AND ((t0.c58 IN (t0.c74, t0.c74))))) OVER (), (((- (v0.c0))) NOT BETWEEN (t0.c74) AND (COUNT(*))), (~ ((~ (t0.c74)))) FROM v0, t0 WHERE (((((((NULL, 1702958666, '')) BETWEEN (('-9223372036854775808', '-646322574', x'')) AND (('-570568776', 0.33127375079227783, NULL)))))<>((CASE x'1108'  WHEN x'' THEN -5.2346664E7 END)))); -- 0ms;
SELECT DISTINCT t0.c58 FROM v0, t0 WHERE (((((0.20473739865979934)<=(x'')))GLOB(((x'')LIKE(NULL))))); -- 0ms;
SELECT DISTINCT ((((v0.c0) NOTNULL))/(((t0.c16)LIKE(t0.c74)))) FROM t0;SELECT ALL CASE WHEN (((v0.c0)) NOT BETWEEN (('d')) AND ((t0.c74))) THEN ((t0.c0)*(t0.c74)) WHEN CAST(t0.c58 AS TEXT) THEN ((t0.c58)<>(t0.c74)) WHEN (((t0.c58))<((t0.c58))) THEN (t0.c0 IN (v0.c0, NULL)) END FROM v0 WHERE (NULL COLLATE RTRIM);SELECT ALL CASE WHEN t0.c58 COLLATE NOCASE THEN (t0.c58 IN (x'')) WHEN (t0.c58 IN ()) THEN v0.c0 WHEN ((t0.c16) NOT NULL) THEN (((t0.c16)) BETWEEN ((t0.c0)) AND ((t0.c74))) WHEN CAST(t0.c16 AS REAL) THEN (+ (t0.c74)) WHEN (v0.c0 IN ()) THEN t0.c74 COLLATE BINARY ELSE ((x'52f6') NOT BETWEEN (t0.c0) AND (t0.c0)) END FROM v0 WHERE ((CASE WHEN 0X17b4c76c THEN NULL ELSE '1548767497' END IN ())) ORDER BY ((((t0.c74)AND(0.9933814830491844)))OR(t0.c0)) DESC LIMIT 386293454 OFFSET 2101964197;SELECT DISTINCT COALESCE((((t0.c74))>=((t0.c74))), (v0.c0 IN ()), NULL, '2084678072') FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((((((TOTAL(t0.c16))AND((- (v0.c0)))))OR((((v0.c0))<((t0.c16))))))AND(IFNULL(t0.c0, x''))))AND(((t0.c16) NOTNULL))), CAST(CAST(t0.c58 AS BLOB) AS REAL), ABS(t0.c58 COLLATE NOCASE) FROM v0, t0 WHERE (((((('-433510431', x'', '')) BETWEEN (('848825664', x'', 'y圩''^')) AND ((NULL, '350539481', 0.8975473783053222)))) IS TRUE)) LIMIT -2119754727 OFFSET -583126069; -- 0ms;
SELECT DISTINCT ((t0.c58 COLLATE BINARY) BETWEEN (((v0.c0) ISNULL)) AND (CAST(t0.c58 AS TEXT))), ((((t0.c58)==(t0.c0))) NOT BETWEEN ((0.7206343855443557 IN ())) AND ((t0.c16 IN ()))), (((((NULL)IS(t0.c74))))<((t0.c74))), CAST(((t0.c0)IS(t0.c58)) AS TEXT), v0.c0 FROM v0, t0; -- 0ms;
SELECT DISTINCT (((((t0.c74) NOT NULL), MIN(t0.c74), t0.c74 COLLATE NOCASE))>=((CASE WHEN t0.c16 THEN t0.c0 ELSE v0.c0 END, ((t0.c16)<<(t0.c16)), 0.4222859285855497))) FROM t0;SELECT DISTINCT (- (LIKELIHOOD(t0.c58, 0.4620901214379728))) FROM v0, t0; -- 0ms;
SELECT CAST(x'' AS REAL) FROM v0, t0 WHERE (((((((-1914858267)OR('')))OR('397723500')))GLOB(CAST('642301226' AS INTEGER)))); -- 0ms;
SELECT ((((((t0.c16)) BETWEEN ((t0.c58)) AND ((v0.c0)))))<=((CAST('%C[-' AS BLOB)))) FROM t0 WHERE (CASE WHEN x'' THEN (+ (x'70b8')) ELSE ((1.646236004E9)IS NOT('w蘹ក8<찦!m''')) END);SELECT DISTINCT 0x7a5395e6, ((SUM(t0.c0))|(((t0.c16)>>(t0.c0)))), '&', (LIKELY(t0.c74) IN ()), LIKE(CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c74 THEN t0.c16 WHEN t0.c74 THEN v0.c0 END, (v0.c0 IN ()), '>') FROM v0, t0 WHERE ((((('Rn)>	') NOTNULL)) BETWEEN (((1877791973)||(0.4641120278102967))) AND (((0.8803647481262273) IS TRUE)))) LIMIT -363385880; -- 0ms;
SELECT CAST(t0.c0 AS INTEGER) COLLATE RTRIM, IFNULL(((t0.c74) NOT NULL), ((t0.c0) NOTNULL)), (((CASE WHEN t0.c0 THEN t0.c0 END))>((CAST(t0.c74 AS REAL)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM v0, t0; -- 0ms;
SELECT DISTINCT v0.c0 FROM v0 INDEXED BY i37 WHERE (0X7428374b);SELECT DISTINCT x'9661' COLLATE BINARY FROM t0, v0 ORDER BY (((((v0.c0, 0.11136622831052168, t0.c0))<((v0.c0, 0X21fbc1da, v0.c0)))) IS FALSE) DESC; -- 0ms;
SELECT DISTINCT CAST(MIN(t0.c0) AS REAL) FROM v0 WHERE ((CAST('u,ha' AS INTEGER) IN ()));SELECT DISTINCT ((((v0.c0)%(t0.c58))) BETWEEN (0.35888408997558285) AND (t0.c74 COLLATE RTRIM)) FROM t0 WHERE ((((-1865661309 IN ())) IS TRUE));SELECT DISTINCT ((((NULL) NOT BETWEEN (v0.c0) AND (t0.c16))) ISNULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c16)IS(t0.c16)))||(((((((((t0.c0)OR(t0.c74)))OR(t0.c0)))OR(v0.c0)))AND(t0.c58)))) FROM v0, t0 WHERE (((('(7s[' IN ('-1914858267')))/(CAST(x'f251' AS INTEGER)))); -- 0ms;
SELECT ALL MIN(COUNT(((t0.c74) IS TRUE))), (((((t0.c74) ISNULL)))==(((((t0.c58))<=((v0.c0)))))), (+ (((((v0.c0)OR(t0.c0)))AND(t0.c16)))) FROM v0, t0;SELECT DISTINCT ((((((((((((TOTAL(v0.c0))AND(((v0.c0)&(t0.c58)))))OR(((t0.c0) NOT BETWEEN (t0.c74) AND (t0.c74)))))AND((((v0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))))AND((+ (x'')))))AND((0.569571950308876 IN ()))))OR(((t0.c74) NOTNULL))) FROM t0, v0 WHERE ('-1905295189'); -- 0ms;
SELECT DISTINCT ((t0.c58 COLLATE RTRIM)IS NOT(((t0.c16) NOTNULL))) FROM t0, v0 ORDER BY (~ ((('') BETWEEN (t0.c58) AND (t0.c58)))), ((((x'')AND(t0.c74 COLLATE BINARY)))OR(0.13329694094242683 COLLATE RTRIM)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0, v0; -- 0ms;
SELECT (((((t0.c16))>((t0.c0)))) IS FALSE), GROUP_CONCAT(((t0.c58) IS TRUE)) OVER (), t0.c58 COLLATE BINARY COLLATE NOCASE FROM v0, t0 WHERE (CAST(((NULL) BETWEEN (NULL) AND ('*8')) AS TEXT)) LIMIT 1918906690 OFFSET -57599361; -- 0ms;
SELECT ALL ((t0.c0 IN ()) IN ()) FROM v0, t0 WHERE ((((x'f6eb')) BETWEEN ((x'' COLLATE RTRIM)) AND ((NULL)))); -- 0ms;
SELECT NULL FROM v0, t0 WHERE (CAST(LIKELIHOOD(DISTINCT -452864885, 0.6250930739705651) AS INTEGER)); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((t0.c58)<<(t0.c0)), (((t0.c58))>=((t0.c16)))) FROM t0, v0; -- 1ms;
SELECT ALL ((((0.4399261006340499)+(v0.c0))) ISNULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST(AVG(t0.c16) AS INTEGER) FROM v0 ORDER BY ((((((t0.c74)AND(t0.c16)))AND(t0.c0)))GLOB((t0.c58 IN ())));SELECT DISTINCT '-729784830' FROM v0, t0; -- 0ms;
SELECT DISTINCT (((+ (t0.c74)))<<(((x'') BETWEEN (t0.c74) AND (v0.c0)))) FROM v0, t0 WHERE ((((x'3ac6' IN ())) NOT BETWEEN (CAST(0.6197913307909707 AS BLOB)) AND (((x'')>(NULL))))); -- 0ms;
SELECT UNLIKELY('-1287024111') FROM t0, v0 WHERE (((CAST(0.08808265851272146 AS TEXT))>=(((((NULL)OR(0.20547074744192362)))AND(0Xffffffff8817d081))))); -- 0ms;
SELECT LAST_VALUE('ﻏ鲳+sWc' COLLATE RTRIM) OVER (), (((((((((((t0.c58))>((t0.c74))))OR(CAST(v0.c0 AS NUMERIC))))OR(((((t0.c74)OR(t0.c74)))OR(NULL)))))AND((+ (v0.c0)))))AND(t0.c0 COLLATE BINARY)), ((((t0.c58 IN ()), t0.c16, (((v0.c0))>((t0.c58)))))>=((TOTAL(v0.c0), (t0.c74 IN ()), ((((((((((((t0.c0)AND(v0.c0)))AND(0.004452780315162497)))OR(t0.c16)))AND(t0.c16)))OR(t0.c74)))OR(0.42901209595673884))))) FROM t0;SELECT CASE CAST(t0.c16 AS BLOB)  WHEN ((t0.c74)%(x'5895')) THEN json_valid(t0.c0) END, (((((- (t0.c74)))OR(((t0.c58) IS TRUE))))AND((t0.c74 IN (t0.c74)))), x'' FROM v0, t0; -- 0ms;
SELECT ALL ((((CAST(t0.c0 AS REAL))OR((((v0.c0))>(('1436579945'))))))OR(((((((((t0.c74)OR(t0.c74)))OR(t0.c0)))OR(t0.c0)))AND(NULL)))), ((((((t0.c0) BETWEEN (t0.c58) AND (t0.c58)))AND(t0.c16)))OR(v0.c0)), ((v0.c0)<<(v0.c0)) COLLATE RTRIM FROM v0, t0; -- 1ms;
SELECT ALL '-1417684030' FROM v0; -- 0ms;
SELECT (((((t0.c74))!=((t0.c58))))GLOB((+ (t0.c74)))), ((((((t0.c58)AND(t0.c16)))AND(t0.c0)))==(CAST(t0.c58 AS TEXT))), CASE (t0.c0 IN ())  WHEN ((((-861349329)OR(v0.c0)))OR(t0.c58)) THEN CAST(t0.c74 AS NUMERIC) ELSE t0.c16 END FROM v0, t0 WHERE (UNLIKELY((((('/+]b잁.')AND(0x2cc04cde)))AND(x'3f4e')))) GROUP BY CASE ('*8' IN ())  WHEN ((((t0.c74)OR(t0.c74)))OR(v0.c0)) THEN ((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) END; -- 0ms;
SELECT CAST((((t0.c58)) NOT BETWEEN ((v0.c0)) AND ((t0.c58))) AS NUMERIC) FROM v0, t0 WHERE ((((0.8822730067517431)) BETWEEN ((-1.610402231E9)) AND (('2090640079' COLLATE RTRIM)))) ORDER BY ((((((t0.c58)/(t0.c74)))AND(CAST(t0.c74 AS NUMERIC))))OR((t0.c16 IN ())))  NULLS LAST, ((CAST(t0.c74 AS BLOB))IS(((t0.c74) BETWEEN (t0.c74) AND (t0.c58))))  NULLS FIRST, ((((((v0.c0)>>(v0.c0)))AND((- (t0.c16)))))OR(v0.c0 COLLATE BINARY)) ASC LIMIT 2095875725; -- 0ms;
SELECT ALL ((((LIKELY(t0.c74))OR(CAST(t0.c58 AS INTEGER))))AND(((t0.c58) BETWEEN (t0.c0) AND (t0.c58)))) FROM t0, v0 ORDER BY (((((x'fe6401d9', t0.c16, t0.c16))<=((v0.c0, t0.c58, v0.c0))))IS NOT(0.19029639038060353)) DESC; -- 0ms;
SELECT ALL (((- (t0.c74))) NOT BETWEEN (((v0.c0) BETWEEN (t0.c16) AND (v0.c0))) AND (CASE t0.c58  WHEN t0.c58 THEN t0.c0 END)), GROUP_CONCAT((- (v0.c0))) OVER ( PARTITION BY (NOT (((t0.c74) BETWEEN (t0.c58) AND (t0.c0)))), ((((((t0.c58)AND('-137650181')))OR(t0.c16)))AND(v0.c0 COLLATE RTRIM))), ((((((((CAST(t0.c74 AS NUMERIC))AND(CAST(t0.c74 AS INTEGER))))AND(((t0.c0)&(t0.c58)))))OR(((t0.c0)LIKE(v0.c0)))))OR(((t0.c16) NOT BETWEEN (t0.c16) AND (t0.c0)))) FROM v0 GROUP BY (~ ((t0.c0 IN ())));SELECT ((((((((t0.c74)AND(t0.c58)))OR(v0.c0)))AND(t0.c0)))OR(v0.c0)) COLLATE RTRIM, ((((t0.c0)=(t0.c74))) NOT NULL), TYPEOF((+ (t0.c16))) FROM t0 WHERE (((('dev')==(NULL)) IN (x'2c51', (((x'', x'', '506103368'))>=((x'', -1.41768403E9, x'')))))) ORDER BY CAST(t0.c74 COLLATE BINARY AS REAL) ASC;SELECT DISTINCT ((((x'') IS FALSE)) BETWEEN (load_extension(t0.c74)) AND (MIN(t0.c58))) FROM t0 WHERE ((- (SQLITE_SOURCE_ID())));SELECT DISTINCT CAST((- (t0.c16)) AS BLOB) FROM v0 WHERE ((((3.86293454E8 IN ('-90864071', 0X255a6ee)))LIKE(((x'7907')%(-1.881034097E9))))) ORDER BY CASE WHEN ((t0.c58)>=(t0.c58)) THEN CAST(t0.c0 AS REAL) ELSE ((t0.c16)||(t0.c16)) END  NULLS FIRST, CASE CASE WHEN t0.c16 THEN t0.c0 ELSE t0.c58 END  WHEN ((v0.c0)/(t0.c58)) THEN SQLITE_VERSION() WHEN x'' THEN (+ (t0.c74)) WHEN UNLIKELY(DISTINCT t0.c16) THEN v0.c0 COLLATE BINARY ELSE ((v0.c0) BETWEEN (t0.c0) AND (t0.c58)) END DESC  NULLS FIRST, (((~ (t0.c0)))+(t0.c58 COLLATE NOCASE)) DESC  NULLS LAST;SELECT DISTINCT ((t0.c58) BETWEEN (t0.c74) AND (t0.c16)) COLLATE BINARY FROM v0 NOT INDEXED;SELECT DISTINCT (((CAST(v0.c0 AS BLOB), ((((t0.c0)AND(t0.c74)))AND(t0.c0)), (NOT (t0.c0))))<((((t0.c74)||(t0.c0)), ((v0.c0) BETWEEN ('907231812') AND (t0.c0)), ((t0.c74)*(x'54a2'))))) FROM t0 WHERE ((((+ (0X4e6e5849))) BETWEEN ((((('1689188333')OR(-773407373)))OR(x''))) AND (((0.5494765760187783) NOT BETWEEN (x'786b') AND ('338975682')))));SELECT COALESCE(CAST(t0.c58 AS NUMERIC), (((t0.c58))<((t0.c16)))) FROM t0, v0 WHERE ('1206668136'); -- 0ms;
SELECT DISTINCT CASE WHEN ((((t0.c0)OR(t0.c74)))OR(v0.c0)) THEN (v0.c0 IN ()) WHEN ((t0.c74) NOT NULL) THEN 0.832696286549373 WHEN CASE t0.c16  WHEN v0.c0 THEN t0.c74 END THEN v0.c0 COLLATE RTRIM ELSE (t0.c58 IN ()) END, (((v0.c0) NOT NULL) IN ()), (NOT ((t0.c0 IN ()))) FROM v0 WHERE (((CASE WHEN 0.6360292105418862 THEN '-' ELSE 0Xffffffffbae9aa7c END)=(CAST('1548767497' AS REAL))));SELECT DISTINCT (CASE '-502173547'  WHEN t0.c16 THEN 0.1849507799707898 WHEN 0x3b13578e THEN t0.c58 WHEN t0.c58 THEN t0.c74 WHEN t0.c58 THEN v0.c0 WHEN t0.c16 THEN v0.c0 ELSE v0.c0 END IN ()) FROM v0 WHERE (CAST((('') NOT BETWEEN ('1278174977') AND (0.05816270582586214)) AS NUMERIC)); -- 0ms;
SELECT ALL t0.c0, t0.c16, COUNT(*) OVER (), (NOT (((t0.c16) NOT BETWEEN (t0.c74) AND (t0.c0)))), (((t0.c74, v0.c0, t0.c74)) NOT BETWEEN (((t0.c16 IN ()), (((t0.c74)) BETWEEN ((t0.c16)) AND ((t0.c58))), AVG(t0.c58))) AND ((GROUP_CONCAT(t0.c74), ((v0.c0) NOT NULL), ((t0.c16)>=(t0.c16))))) FROM v0;SELECT DISTINCT t0.c74 COLLATE NOCASE FROM t0 WHERE ((('~ᦄk,1g吂働') BETWEEN (NULL) AND (x'c5b0')) COLLATE NOCASE); -- 0ms;
SELECT SUM(CAST(t0.c74 AS TEXT)) OVER (), (((- (t0.c0))) IS FALSE), (((v0.c0 IN (t0.c16, t0.c74))) IS TRUE) FROM t0, v0 WHERE ((((-673537681, 0.2995304657771368, 0.41701382372581264))>=(('-1645728721', NULL, '?G'))) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((CASE WHEN t0.c16 THEN v0.c0 WHEN t0.c16 THEN t0.c16 WHEN t0.c58 THEN t0.c74 END)OR(v0.c0 COLLATE RTRIM)))OR(NULL)), ((((t0.c0)-(v0.c0))) NOT BETWEEN (((t0.c16) IS FALSE)) AND (((v0.c0) IS FALSE))), ((((v0.c0)>(t0.c58))) IS TRUE) FROM t0 WHERE (CAST((('0.9683440818523494') BETWEEN ('-2072449418') AND (NULL)) AS INTEGER));SELECT ALL NULLIF(((t0.c0)==(v0.c0)), t0.c16), ((((t0.c16)AND(t0.c74)))AND(t0.c74)) COLLATE NOCASE, (((t0.c16 IN ()))IS NOT(((x'')IS NOT(t0.c74)))) FROM t0, v0 WHERE (((((((-867254103) BETWEEN (NULL) AND ('DB')))AND(((('-926533051')) BETWEEN (('')) AND ((NULL))))))AND(JULIANDAY('廎\n3', x'', NULL)))); -- 0ms;
SELECT DISTINCT ((0.746214029526087) IS FALSE) FROM v0, t0; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0 LIMIT -1959350935; -- 0ms;
SELECT t0.c58 FROM t0 WHERE (((((('2145284831') NOTNULL)))>((NULL)))); -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (t0.c16 IN ()) WHEN SUM(NULL) THEN DATETIME(v0.c0, v0.c0, t0.c0, v0.c0, '672481517') WHEN ((v0.c0)>>(v0.c0)) THEN ((t0.c16) BETWEEN (t0.c0) AND (t0.c16)) ELSE ((t0.c74) BETWEEN (t0.c16) AND (t0.c58)) END FROM t0, v0 WHERE (CAST((((('')OR(0.7097999936130406)))OR(0Xffffffffe34eec97)) AS REAL)) GROUP BY (- ((- (t0.c58)))), (((t0.c16 IN ())) IS FALSE), (((v0.c0)) BETWEEN ((NULL)) AND ((LOWER(DISTINCT t0.c58)))); -- 1ms;
SELECT ALL (((v0.c0 IN (t0.c74)))/(json_type(t0.c16))) FROM v0 WHERE (CASE CAST('_& 4*[8pi' AS NUMERIC)  WHEN (0.47003864225039804 IN ()) THEN (0.5115054277566122 IN ()) WHEN '-1742030304' THEN CAST(0.7909417226635501 AS TEXT) WHEN '' COLLATE NOCASE THEN x'' COLLATE BINARY END) ORDER BY (~ (x'')), CAST((v0.c0 IN ()) AS TEXT) DESC LIMIT -1554317949 OFFSET -1327108409;SELECT (((((t0.c0)AND(0Xffffffffa0793380)), ((t0.c74)>>(t0.c0)), t0.c16 COLLATE RTRIM))!=((CAST(t0.c74 AS TEXT), TYPEOF(x''), CAST(t0.c16 AS REAL)))), (((t0.c74)) BETWEEN ((v0.c0)) AND ((CAST(t0.c16 AS NUMERIC)))), (((v0.c0) NOTNULL) IN ((((t0.c74, t0.c0, t0.c0))<=((t0.c74, t0.c16, t0.c16))))), (((t0.c16 IN (t0.c16))) BETWEEN (((((x'')AND(v0.c0)))AND(t0.c0))) AND (((t0.c74)>>(t0.c58)))), (((t0.c74)%(t0.c0)) IN ()) FROM t0 WHERE ((('vJz8')OR(0X1780c3d5)) COLLATE RTRIM);SELECT t0.c58 FROM t0, v0 WHERE ((((-1417684030)) NOT BETWEEN ((x'' COLLATE BINARY)) AND ((('-1943537919' IN ()))))); -- 0ms;
SELECT DISTINCT t0.c74 FROM v0;SELECT DISTINCT ((CAST(t0.c16 AS INTEGER))|(CAST(t0.c58 AS INTEGER))) FROM v0, t0 WHERE (CAST(CASE WHEN '' THEN NULL ELSE 'k\r2*n\r\~' END AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(t0.c58 COLLATE BINARY AS NUMERIC) FROM t0 WHERE (CASE WHEN ((x'') IS FALSE) THEN ((x'') IS FALSE) ELSE ((NULL)=('-1602669696')) END) LIMIT 1756387271 OFFSET -569724815; -- 0ms;
SELECT ALL (~ (CAST(t0.c74 AS INTEGER))), (((((v0.c0 IN ()))AND(t0.c58 COLLATE BINARY)))OR(SUM(t0.c74))), (((((t0.c74) ISNULL), v0.c0 COLLATE BINARY, CAST(t0.c16 AS REAL), x'', ((t0.c58) IS TRUE)))>(((t0.c74 IN ()), IFNULL(t0.c74, NULL), ((((t0.c74)OR(t0.c0)))AND(0.10604299908715475)), t0.c0 COLLATE BINARY, CASE t0.c16  WHEN t0.c74 THEN t0.c16 ELSE t0.c74 END))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c16 AS NUMERIC))OR(((v0.c0)==(t0.c0)))), ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c74 AS TEXT)) AND ('FcBZY*BL')), (t0.c16 IN (((t0.c0) BETWEEN (t0.c74) AND (t0.c16)))), (~ (((((((((t0.c16)AND(t0.c74)))OR('1206668136')))OR(t0.c16)))AND(t0.c74)))), SUM((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c74)))) OVER () FROM v0, t0 WHERE ((((NULL) BETWEEN ('(*.x\') AND (0.9297784233586812)) IN ())); -- 1ms;
SELECT ((((NULL)OR(t0.c58))) ISNULL), CAST(SUM(t0.c16) AS TEXT), 0Xfffffffff763036c, ((TOTAL(t0.c0)) NOT BETWEEN (t0.c74) AND (t0.c0 COLLATE BINARY)), ((UPPER(t0.c74)) IS TRUE) FROM v0 GROUP BY ((((t0.c74)>>(v0.c0)))AND(((v0.c0)OR(t0.c16))));SELECT DISTINCT CAST(((t0.c0) NOT NULL) AS TEXT) FROM t0, v0 WHERE ((((('')GLOB(NULL)))<>(((NULL)/(NULL))))); -- 0ms;
SELECT ALL t0.c74 FROM t0; -- 0ms;
SELECT DISTINCT CASE t0.c58  WHEN t0.c58 THEN t0.c0 END COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT COUNT(((t0.c58)LIKE(t0.c16))) FROM t0, v0 WHERE ((((x''))<(('-678592303'))) COLLATE NOCASE); -- 0ms;
SELECT (((t0.c0 IN ())) NOT BETWEEN ((((t0.c58))<=((t0.c16)))) AND (t0.c16)) FROM t0, v0 WHERE (CAST(0xfffffffffce140d8 AS NUMERIC)) GROUP BY CASE ((((((((t0.c74)OR(x'')))AND(t0.c74)))AND(']4M')))OR('9GwFmh}[-'))  WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN t0.c58 COLLATE NOCASE ELSE (- (v0.c0)) END HAVING CASE COUNT(t0.c16)  WHEN ((x'6ba2') IS TRUE) THEN (+ (v0.c0)) WHEN t0.c16 THEN (((t0.c0, t0.c16, t0.c74)) BETWEEN ((t0.c0, t0.c58, t0.c0)) AND ((t0.c74, v0.c0, v0.c0))) WHEN CAST(t0.c58 AS INTEGER) THEN ((((t0.c74)AND(t0.c58)))AND(t0.c58)) ELSE t0.c0 COLLATE BINARY END LIMIT 1410696078 OFFSET -1750771002; -- 1ms;
SELECT ALL (((v0.c0)) BETWEEN (((NOT (t0.c74)))) AND ((((t0.c74) IS FALSE)))), ((((t0.c16) NOT BETWEEN (x'2964d491') AND (t0.c16))) ISNULL), ((((((t0.c74)OR(v0.c0)))AND(t0.c16)))*(((t0.c58)-(NULL)))) FROM v0;SELECT DISTINCT CASE CASE t0.c58  WHEN t0.c58 THEN NULL ELSE t0.c0 END  WHEN '0.27822042949972914' COLLATE NOCASE THEN ((t0.c0) NOTNULL) WHEN CASE WHEN t0.c0 THEN t0.c58 END THEN (t0.c74 IN (t0.c0)) WHEN (+ (t0.c74)) THEN t0.c74 WHEN ((((((((v0.c0)OR(v0.c0)))OR(t0.c16)))OR(t0.c74)))OR(NULL)) THEN CASE WHEN t0.c0 THEN t0.c16 WHEN NULL THEN t0.c74 WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END WHEN (((v0.c0, t0.c0, t0.c74)) BETWEEN ((t0.c0, t0.c74, t0.c0)) AND ((0.9399135678489892, t0.c16, t0.c74))) THEN ((t0.c16) ISNULL) WHEN ((((((((t0.c58)AND(t0.c16)))OR(x'')))AND(t0.c74)))AND(t0.c74)) THEN ((t0.c74)OR(t0.c0)) WHEN (- (t0.c58)) THEN (t0.c16 IN (t0.c74)) END FROM v0, t0 ORDER BY CASE WHEN NULL THEN (NOT (t0.c16)) END  NULLS LAST, (('-1' COLLATE BINARY)AND(((t0.c0) ISNULL)))  NULLS FIRST LIMIT 898168284 OFFSET 1561383924; -- 0ms;
SELECT ALL CASE (- (t0.c58))  WHEN t0.c16 COLLATE RTRIM THEN ((t0.c16) ISNULL) WHEN (~ (t0.c16)) THEN ((t0.c74) BETWEEN (t0.c0) AND (t0.c16)) WHEN t0.c58 THEN CAST(t0.c58 AS BLOB) ELSE 0.6332669805884362 END FROM t0 WHERE (((CASE '-589203157'  WHEN x'' THEN '-0.0' ELSE 0.5050073798281409 END)OR(('<芔>' IN (x''))))) GROUP BY (((~ (t0.c58)))<<((((t0.c16))>((t0.c0))))) HAVING ((((((((((((((((SUM(t0.c58))OR(t0.c0)))OR(x'')))AND(-8.31172636E8)))OR(TYPEOF(t0.c0))))OR(('1154480553' IN ()))))OR(CAST(t0.c74 AS TEXT))))OR((t0.c16 IN ()))))AND(((v0.c0) ISNULL)));SELECT DISTINCT CAST(((v0.c0)<=('')) AS BLOB) FROM t0, v0 LIMIT -1983132512; -- 0ms;
SELECT ALL GROUP_CONCAT(0.9706940489986442) OVER () FROM v0, t0 WHERE (((((((((((0.03184161887391779)OR(0Xffffffffb9db6fe9)))AND('-1112132645')))OR('1758275876')))OR(NULL)))&((~ (-1473612394))))); -- 0ms;
SELECT ALL TRIM((((t0.c0, t0.c0, t0.c74))<=((t0.c58, t0.c74, t0.c58))), t0.c58 COLLATE BINARY) FROM v0;SELECT FIRST_VALUE(CAST(((((((((t0.c16)OR(v0.c0)))AND(t0.c16)))AND(t0.c58)))OR(t0.c58)) AS INTEGER)) OVER (), COUNT(*), CAST('' AS REAL), CASE WHEN ((t0.c74)==(t0.c74)) THEN ((((((((0.5088894767923339)OR(0.18165590045346924)))OR(t0.c74)))OR(t0.c58)))OR(t0.c58)) WHEN (((t0.c74))==((t0.c74))) THEN CASE WHEN t0.c58 THEN t0.c58 END WHEN CASE t0.c16  WHEN v0.c0 THEN t0.c16 ELSE t0.c74 END THEN COALESCE(v0.c0, v0.c0) END, TOTAL((v0.c0 IN ())) FROM t0, v0 ORDER BY ((CAST(v0.c0 AS TEXT)) IS TRUE) ASC; -- 0ms;
SELECT DISTINCT ((((((t0.c58)AND(t0.c74)))AND(t0.c0))) IS FALSE) FROM t0 WHERE ((((x'')>>(NULL)) IN ())); -- 0ms;
SELECT DISTINCT '-224918656' FROM v0, t0 WHERE ((((('VD') NOTNULL))AND(((NULL) BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT ALL CASE IFNULL(DISTINCT t0.c58, v0.c0)  WHEN (((t0.c74)) BETWEEN ((t0.c16)) AND ((t0.c0))) THEN (+ (t0.c0)) WHEN v0.c0 COLLATE RTRIM THEN NULL WHEN x'' THEN ((((NULL)OR(t0.c58)))OR(t0.c0)) ELSE t0.c58 END, (((t0.c58)) NOT BETWEEN ((((t0.c58)>=(t0.c0)))) AND ((CAST(x'c003' AS BLOB)))), ((((((((t0.c58)OR(t0.c0)))AND(t0.c58)))AND(CASE NULL  WHEN t0.c58 THEN t0.c16 WHEN t0.c16 THEN t0.c16 WHEN NULL THEN t0.c16 ELSE v0.c0 END)))AND(((t0.c16)-(t0.c16)))) FROM t0 WHERE (((-1.3255214E9) IS FALSE)) GROUP BY t0.c74 HAVING ((MAX(t0.c16))&((- (t0.c16))));SELECT CASE x''  WHEN v0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c58 THEN t0.c74 END COLLATE RTRIM FROM v0;SELECT ALL ((v0.c0 COLLATE RTRIM) IS FALSE), ((CASE t0.c16  WHEN t0.c74 THEN t0.c16 ELSE v0.c0 END) NOT NULL), x'ec3c' FROM v0, t0; -- 0ms;
SELECT ((((v0.c0)%(t0.c16))) ISNULL), ((CAST(t0.c58 AS BLOB)) NOT BETWEEN ((+ (0xffffffffb21306ef))) AND (AVG(t0.c16))), ((((((t0.c0)AND(t0.c74)))AND(t0.c74)))*(((v0.c0)<(t0.c0)))) FROM t0, v0 WHERE (((CAST(NULL AS TEXT)) NOTNULL)); -- 0ms;
SELECT ALL ((+ (t0.c16)) IN ()) FROM t0, v0 WHERE (0.718164066457795) ORDER BY (STRFTIME(v0.c0, v0.c0, t0.c74) IN ()), ((((t0.c0) IS TRUE)) NOT BETWEEN ((- (t0.c0))) AND ((+ (t0.c74)))) ASC; -- 0ms;
SELECT ALL (((CAST(t0.c16 AS INTEGER)))>((((t0.c16) NOT BETWEEN (t0.c0) AND (-769633697))))), t0.c0, t0.c16, CASE (~ (t0.c16))  WHEN t0.c58 COLLATE NOCASE THEN (t0.c16 IN ()) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c58)*(t0.c74)) WHEN ((t0.c16) IS FALSE) THEN ((t0.c74) NOTNULL) END, (((((t0.c58) BETWEEN (t0.c58) AND (v0.c0)), ((v0.c0)&('\rFMPG0D-A')), (t0.c0 IN ()), COUNT(*), t0.c0))>((((v0.c0)GLOB(t0.c74)), CAST(v0.c0 AS INTEGER), (((t0.c0, t0.c0, v0.c0, NULL, t0.c74, t0.c58, v0.c0)) BETWEEN ((t0.c58, t0.c74, v0.c0, t0.c16, t0.c74, t0.c0, t0.c0)) AND ((t0.c74, t0.c74, -974283157, t0.c58, t0.c0, t0.c0, t0.c74))), CAST(t0.c74 AS NUMERIC), t0.c0 COLLATE RTRIM))) FROM t0 WHERE (NULL);SELECT DISTINCT TOTAL(CASE WHEN t0.c58 THEN v0.c0 END) FROM v0 WHERE (((((((((NULL)OR(NULL)))AND(x'')))OR((('(P .b?cT')/('710023554')))))OR(((0Xffffffff9563ddca) ISNULL))));SELECT ALL RANK() OVER () FROM t0 WHERE ((+ (('0.5423223394344201' IN ())))); -- 0ms;
SELECT DISTINCT CAST(t0.c74 AS BLOB), ((((CAST(v0.c0 AS TEXT))OR((t0.c58 IN ()))))OR(((NULL)/(t0.c0)))), CAST(((t0.c58) IS TRUE) AS NUMERIC) FROM v0, t0 WHERE (((((((((0.33949028697144634)AND(0Xffffffff95f982d7)))AND(0.43158051865280045)))AND((((NULL))>=((NULL))))))AND(0.45429940562479176))); -- 0ms;
SELECT DISTINCT SUM(((((x'')OR(NULL)))AND(t0.c16))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((v0.c0) NOTNULL) IN (CAST(t0.c74 AS INTEGER), '0.4088202144207558' COLLATE BINARY)) FROM t0 WHERE (LOWER(DISTINCT (NULL IN ())));SELECT ALL ((NOT (x'')) IN ()) FROM t0 GROUP BY v0.c0, (COALESCE(t0.c74, t0.c0, t0.c58, t0.c0, t0.c16, v0.c0) IN ()), (((t0.c58)) BETWEEN ((ABS(DISTINCT v0.c0))) AND (((- (t0.c74)))));SELECT DISTINCT MAX(v0.c0) FROM v0, t0 LIMIT -1940021261; -- 0ms;
SELECT ((((t0.c16)>=(t0.c0)))OR(((t0.c58)AND('Z')))), ((json_array_length('-1e500', t0.c16)) BETWEEN ((NOT (t0.c16))) AND (CAST(t0.c58 AS INTEGER))), (((((- (t0.c58)))AND(((v0.c0)>(t0.c16)))))AND(t0.c16 COLLATE BINARY)) FROM t0 WHERE (((((NULL)IS(NULL)))<(((((x'')OR(NULL)))OR(x'')))));SELECT ('-1155605586' IN (CASE WHEN t0.c58 THEN t0.c74 END)), json_valid(((t0.c0) BETWEEN (t0.c58) AND (v0.c0))), TOTAL(COUNT(CAST(t0.c58 AS INTEGER))) FROM v0, t0 WHERE (TRIM(x'' COLLATE BINARY, CAST(NULL AS INTEGER))) ORDER BY (((t0.c0) BETWEEN (t0.c74) AND (t0.c74)) IN ()) ASC  NULLS LAST, (((+ (t0.c58)))%(((t0.c58)<>(0.7211856491581646)))) DESC  NULLS FIRST;SELECT ALL DENSE_RANK() OVER () FROM t0 GROUP BY ((((((((t0.c16)OR(v0.c0)))AND(t0.c16)))OR(((t0.c74) NOT BETWEEN (t0.c58) AND (t0.c58)))))AND(((t0.c16) BETWEEN (t0.c16) AND (t0.c58)))) HAVING ((((t0.c16) BETWEEN (v0.c0) AND (t0.c74))) NOT BETWEEN (CAST(t0.c58 AS NUMERIC)) AND (GROUP_CONCAT(t0.c16)));SELECT NULL FROM t0, v0; -- 0ms;
SELECT DISTINCT ((CASE t0.c16  WHEN t0.c0 THEN t0.c74 WHEN t0.c16 THEN t0.c58 WHEN t0.c0 THEN t0.c16 ELSE t0.c58 END) NOTNULL) FROM t0, v0 WHERE (CASE WHEN ((('s')) BETWEEN ((-228960867)) AND (('1990456558'))) THEN (+ ('-583126069')) ELSE CAST('567892418' AS NUMERIC) END); -- 0ms;
SELECT DISTINCT 0xfffffffff89c94ba FROM v0 WHERE (((((('1091036778' IN ()))AND(((('Tz')) NOT BETWEEN ((x'')) AND ((0.36652342242973945))))))OR(5.70076075E8))); -- 0ms;
SELECT ALL (((t0.c16)) NOT BETWEEN (((+ (t0.c16)))) AND ((0.9169617365818021))), '0.9655706092326467', (((((((t0.c16)OR(NULL)))AND(t0.c0)), COUNT(*), ABS(DISTINCT t0.c16)))>((t0.c74 COLLATE NOCASE, (~ (t0.c0)), (((((((('		')AND(t0.c0)))OR(t0.c0)))AND(v0.c0)))AND(t0.c58))))) FROM t0 WHERE (CAST(LTRIM(0.34877462881310006) AS REAL));SELECT DISTINCT (x'' IN ()) FROM v0 WHERE (((((0.9055887903109203) NOT NULL)) BETWEEN (((0.5356403707467984)<<(x''))) AND (0.23427726799006232 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(v0.c0) FROM v0, t0 GROUP BY CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER); -- 0ms;
SELECT ALL ((((t0.c58) NOT NULL)) IS FALSE) FROM v0 GROUP BY '0.7206343855443557' HAVING ((CASE t0.c74  WHEN t0.c58 THEN t0.c74 END) NOT BETWEEN ((((v0.c0))<((t0.c0)))) AND ((- (t0.c16))));SELECT DISTINCT t0.c0, ((((v0.c0)<(t0.c58)))<(NULL)), ((0.3565782739398997)-((t0.c74 IN ()))) FROM v0, t0; -- 0ms;
SELECT DISTINCT LAG(((((t0.c58 COLLATE BINARY)OR(t0.c58 COLLATE NOCASE)))AND(((v0.c0)<(v0.c0)))), t0.c0, CASE WHEN ((t0.c16) BETWEEN (t0.c0) AND (v0.c0)) THEN IFNULL(DISTINCT t0.c16, t0.c0) WHEN x'' THEN CAST(t0.c74 AS REAL) WHEN CASE t0.c16  WHEN t0.c0 THEN t0.c58 ELSE t0.c58 END THEN t0.c74 COLLATE RTRIM ELSE 'oz1U9A' END) OVER (), ((((t0.c16) BETWEEN (t0.c58) AND (t0.c74))) NOTNULL), TOTAL(((t0.c58)*(t0.c0))) OVER () FROM v0, t0; -- 0ms;
SELECT DISTINCT (((v0.c0 IN (v0.c0)))==(LIKELY(DISTINCT v0.c0))), ((((v0.c0)-(t0.c58)))AND(CASE t0.c0  WHEN t0.c16 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN t0.c16 THEN t0.c58 ELSE t0.c58 END)), (((t0.c0, t0.c0, t0.c0, t0.c58, v0.c0)) NOT BETWEEN ((v0.c0, t0.c16, '646109318', t0.c0, t0.c74)) AND ((v0.c0, t0.c58, t0.c0, t0.c0, '5'))) COLLATE NOCASE COLLATE BINARY FROM t0, v0; -- 0ms;
SELECT DISTINCT (+ (t0.c74 COLLATE NOCASE)) FROM v0;SELECT DISTINCT (+ (COUNT(t0.c74))), (NOT (CAST(t0.c0 AS TEXT))), ((((t0.c0) ISNULL))LIKE(t0.c74)) FROM t0, v0 WHERE (((((((((CASE 'DIZ{XS'  WHEN NULL THEN NULL END)OR(UNLIKELY(0.2758067996211202))))OR(((0.49000095525119125) BETWEEN (-1237831117) AND ('d')))))AND(HEX(DISTINCT x''))))AND(NULL))); -- 0ms;
SELECT CAST(((t0.c58)>(t0.c0)) AS REAL) FROM t0, v0 ORDER BY ((((((t0.c58)OR(t0.c74)))AND(t0.c16)))||((- (v0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT v0.c0, NTILE(((((((t0.c0)IS(t0.c0)))AND(t0.c58 COLLATE NOCASE)))AND(((x'fc18')IS NOT(t0.c0))))) OVER (), v0.c0 FROM v0, t0;SELECT DISTINCT MAX(CASE t0.c74  WHEN x'd3ad' THEN t0.c74 WHEN '-464880382' THEN t0.c58 WHEN t0.c0 THEN t0.c16 ELSE v0.c0 END), t0.c0, CAST(((t0.c58) IS TRUE) AS TEXT) FROM t0 WHERE ('m⿋') GROUP BY (NOT (TRIM(DISTINCT t0.c58, t0.c74)));SELECT t0.c58 FROM t0; -- 0ms;
SELECT PERCENT_RANK() OVER (), ((((((t0.c0)AND(t0.c74)))OR(t0.c74)))>(CASE WHEN '568038260' THEN v0.c0 ELSE t0.c0 END)), (((((v0.c0)) BETWEEN ((x'')) AND ((t0.c74)))) ISNULL), CASE WHEN ((t0.c74) NOT BETWEEN (t0.c74) AND (0x77426ceb)) THEN ((t0.c74)%(t0.c58)) WHEN t0.c58 THEN t0.c16 COLLATE BINARY WHEN ((t0.c0)!=(t0.c0)) THEN ((t0.c74)||(v0.c0)) ELSE CAST(t0.c58 AS NUMERIC) END, DENSE_RANK() OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE GROUP) FROM t0, v0; -- 0ms;
SELECT 0.3089881799779418 FROM v0; -- 1ms;
SELECT DISTINCT HEX(((t0.c16)IS NOT(v0.c0))), t0.c0, CASE '-458171119'  WHEN (+ ('-1116179640')) THEN ((t0.c0)=(v0.c0)) ELSE TYPEOF(DISTINCT t0.c0) END, (((~ (0.880813393771723))) NOTNULL), CAST(((t0.c58)GLOB(t0.c0)) AS BLOB) FROM v0 WHERE ('w8');SELECT DISTINCT ((CASE t0.c74  WHEN t0.c74 THEN t0.c58 ELSE t0.c74 END)GLOB(((v0.c0) NOT BETWEEN (v0.c0) AND ('0.7211856491581646')))) FROM v0 RIGHT OUTER JOIN t0 ON CAST(UNLIKELY(DISTINCT t0.c58) AS INTEGER); -- 0ms;
SELECT CASE WHEN ((t0.c0)%(t0.c58)) THEN v0.c0 COLLATE BINARY WHEN CAST(t0.c74 AS INTEGER) THEN CAST(t0.c74 AS NUMERIC) WHEN (t0.c58 IN ()) THEN t0.c0 ELSE ((t0.c58)AND(t0.c58)) END, RANK() OVER (), ((((t0.c0) IS FALSE))<=(CAST(t0.c58 AS BLOB))) FROM t0 INDEXED BY i37;SELECT DISTINCT ((t0.c16)>(v0.c0)) COLLATE NOCASE FROM t0, v0; -- 0ms;
SELECT ABS(MAX(t0.c58)) FROM t0; -- 0ms;
SELECT ALL (- (t0.c58 COLLATE BINARY)) FROM t0 NOT INDEXED WHERE (x''); -- 0ms;
SELECT ALL json_type(v0.c0), (NOT (((t0.c58) ISNULL))), NTH_VALUE((((t0.c16)) BETWEEN ((((NULL)-(t0.c74)))) AND (((t0.c16 IN (x''))))), ((CAST(t0.c0 AS INTEGER)) NOT NULL)) OVER () FROM t0 WHERE ((((((((((((NULL)OR('c\r')))OR(0.7385243183636997)))OR(NULL)))AND('-1905295189')), (('')<('1885237052')), 0.045925572329406084 COLLATE BINARY))<=(('' COLLATE NOCASE, (NULL IN ()), ((x'')IS NOT(0.9763585554619887))))));SELECT ALL t0.c16 FROM t0, v0 WHERE (CASE WHEN ((0xffffffff9dcdc688) NOT BETWEEN (0.3860721819714743) AND (NULL)) THEN (+ (1.34559057E9)) END); -- 0ms;
SELECT DISTINCT ((((x'')>>(t0.c16))) ISNULL), v0.c0, MIN(((v0.c0)IS NOT(t0.c0))) FROM v0;SELECT DISTINCT (+ (((t0.c74)AND(t0.c0)))) FROM v0, t0 WHERE (((((x'')AND(0.24570099150612223))) NOT BETWEEN (('\rD*}5' IN (x''))) AND (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT t0.c16 FROM t0, v0 LIMIT 1 OFFSET 1011835362; -- 0ms;
SELECT ALL (((t0.c0) IS FALSE) IN ((+ (t0.c74)))) FROM t0 WHERE (((NULL) NOT BETWEEN (NULL) AND ('650044178')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT highlight((~ (v0.c0)), t0.c0, IFNULL(x'', t0.c0), ((t0.c16) IS TRUE)) FROM t0;SELECT DISTINCT ((x'') BETWEEN (t0.c74) AND (v0.c0)) COLLATE NOCASE FROM v0 WHERE (NULLIF(((((x'')AND(NULL)))OR('-1298939946')), ((((0xffffffffab7fdbc2)AND('-2003124577')))AND(''))));SELECT SUM(-90864071) FROM t0; -- 0ms;
SELECT DISTINCT (COALESCE(DISTINCT '', NULL) IN (((t0.c58) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c74) NOT NULL))) FROM v0 WHERE ((((('')AND(x'')))>=(((x'') NOT NULL))));SELECT DISTINCT ((CAST(t0.c58 AS TEXT))>(CASE WHEN t0.c16 THEN t0.c16 END)), ((t0.c0)GLOB(t0.c58)) COLLATE NOCASE, (((- (t0.c0))) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((t0.c0)/(x'f2a1')))), GROUP_CONCAT(((t0.c0)OR(t0.c58))) OVER (), SUM(0xffffffffe9a47186) OVER () FROM v0 WHERE (((NULL) ISNULL) COLLATE BINARY);SELECT ALL DENSE_RANK() OVER (), ((t0.c0 COLLATE RTRIM)<>((x'd602' IN (t0.c74)))), COUNT(t0.c74 COLLATE NOCASE COLLATE BINARY) FROM v0, t0; -- 1ms;
SELECT DISTINCT v0.c0, DENSE_RANK() OVER (), ((((((v0.c0)OR(t0.c0)))OR(t0.c16))) NOT BETWEEN ((v0.c0 IN (v0.c0, '-139919665'))) AND (t0.c74 COLLATE NOCASE)) FROM v0, t0 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN ABS(DISTINCT 'n^|f	U)') ELSE '6j' COLLATE NOCASE END) GROUP BY ((t0.c16 COLLATE NOCASE) IS FALSE); -- 0ms;
SELECT AVG(HEX(DISTINCT v0.c0)) OVER (), NULL, (((((t0.c0 IN ()))OR((- (t0.c16)))))OR(((t0.c0)>>(t0.c74)))) FROM t0 WHERE ('0.9763585554619887') LIMIT -1914858267 OFFSET 1642465947;SELECT DISTINCT (AVG(t0.c0) IN ()) FROM t0 NOT INDEXED LIMIT -579095571 OFFSET 0; -- 0ms;
SELECT ALL (+ (t0.c0 COLLATE BINARY)) FROM v0, t0 WHERE (COALESCE(((((NULL)OR(x'')))OR(x'')), ((x'5ec5') NOTNULL), '廎\n3' COLLATE NOCASE, ((0.5179998219982626)/(x'8c82')))); -- 0ms;
SELECT ALL CAST(((t0.c74) NOT BETWEEN (t0.c16) AND (t0.c74)) AS NUMERIC) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((MIN(t0.c58)) NOTNULL), ((((((((((NULL)OR(v0.c0)))AND(t0.c16)))OR(v0.c0)))OR(v0.c0)))>>(((t0.c0)*(t0.c16)))), (((((t0.c58))>((v0.c0))))OR((~ (0.5133739178607662)))) FROM t0, v0 WHERE (((((((((IFNULL(DISTINCT '5P!?V', 0.21563229631708614))AND(-215927559)))OR((('1702958666')<(x'7869')))))OR((+ (x'')))))AND(CAST('og' AS REAL)))); -- 0ms;
SELECT ALL 0.039586099373879025 FROM t0, v0 WHERE ((((NULL, NULL, -9.0864071E7, '肫v}_', x'')) BETWEEN ((ABS(0.9663964696649745), (('') ISNULL), 0xffffffffc8c7643e COLLATE RTRIM, (((('#XPh')AND(1819632276)))OR(9.91123342E8)), UPPER(DISTINCT 'ǔH2('))) AND ((((NULL) BETWEEN ('-1481906914') AND ('-985328074')), ((-551906148) BETWEEN ('') AND (NULL)), NULL COLLATE BINARY, 0.263167286391062 COLLATE BINARY, (1.702958666E9 IN ('', 0.02164369935453092)))))); -- 0ms;
SELECT DISTINCT (('265653469' COLLATE BINARY)&(CAST(t0.c16 AS REAL))), ROW_NUMBER() OVER (), (NOT (((t0.c16)*(t0.c0)))), (t0.c58 IN ()), x'' FROM t0 WHERE (((0.18898178295814827) NOTNULL)); -- 0ms;
SELECT DISTINCT TIME((NOT (t0.c74)), ((t0.c16) BETWEEN (t0.c58) AND (v0.c0)), (t0.c74 IN ())), (((t0.c16))==(((~ (t0.c58))))), ((t0.c0) NOT BETWEEN (((t0.c16) BETWEEN (t0.c74) AND (t0.c16))) AND (CASE WHEN t0.c58 THEN t0.c16 WHEN NULL THEN v0.c0 WHEN t0.c0 THEN t0.c74 END)) FROM t0, v0 LIMIT 1078160713 OFFSET -1974640900; -- 0ms;
SELECT DISTINCT '4130325' FROM t0 FULL OUTER JOIN v0 ON ((((v0.c0)OR(t0.c74)))AND(t0.c16)) COLLATE RTRIM WHERE (((CASE WHEN NULL THEN 0.16483814096513583 ELSE x'' END)&((('') BETWEEN (0.1436269607839611) AND (0.1412833869943959))))); -- 0ms;
SELECT ALL CAST(((v0.c0) ISNULL) AS BLOB) FROM v0, t0 LIMIT -1569652259; -- 0ms;
SELECT ALL CASE WHEN ((t0.c74) NOT NULL) THEN (- (v0.c0)) WHEN ((t0.c74) BETWEEN (t0.c74) AND (t0.c0)) THEN ((t0.c74)IS NOT(t0.c58)) WHEN (NULL IN ()) THEN ((((((((t0.c0)AND(t0.c58)))OR(t0.c16)))OR(t0.c58)))OR(t0.c16)) ELSE 0X20e6c3ce END FROM t0;SELECT DISTINCT t0.c58 FROM t0 NATURAL JOIN v0 WHERE (((((((((NULL)AND('1039977108')))OR(x'1547')))AND(CAST(NULL AS TEXT))))AND(('-1578016394' IN ())))) GROUP BY ((((load_extension(v0.c0, v0.c0))AND((((t0.c16))<=((t0.c58))))))OR(((v0.c0) ISNULL))); -- 0ms;
SELECT DISTINCT (~ (((t0.c16) NOT NULL))) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) IS TRUE) FROM v0, t0 LIMIT 1258513844; -- 0ms;
SELECT DISTINCT LOWER(TRIM(DISTINCT t0.c16)) FROM t0; -- 0ms;
SELECT DISTINCT (('1505394547' COLLATE RTRIM)<<(((t0.c58)GLOB(t0.c74)))) FROM v0, t0; -- 0ms;
SELECT CASE ((t0.c0) ISNULL)  WHEN LOWER(t0.c74) THEN CASE t0.c16  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((t0.c74)+(t0.c74)) END FROM v0;SELECT ALL (COUNT(t0.c74) IN (((((t0.c16)OR(v0.c0)))OR(0.7675405786636195)))) FROM t0, v0 ORDER BY CAST(((0.9824867168609919) NOT BETWEEN (t0.c0) AND (v0.c0)) AS TEXT), (((NOT (v0.c0)))-(((t0.c0)IS(t0.c0)))) ASC  NULLS FIRST, 0.5548070183161606 DESC  NULLS LAST; -- 0ms;
SELECT ALL (+ (IFNULL(DISTINCT t0.c0, t0.c74))) FROM v0, t0; -- 0ms;
SELECT DISTINCT (CAST(t0.c58 AS REAL) IN (COUNT(*), TOTAL(t0.c16))) FROM t0; -- 0ms;
SELECT DISTINCT (+ (((-1676547574)<<(t0.c0)))) FROM v0 NOT INDEXED WHERE (((((((((((((((((NULL)AND(NULL)))AND(NULL)))OR('-640215108')))OR('')))OR((((NULL)) NOT BETWEEN ((0.487076207402214)) AND ((NULL))))))AND((~ (NULL)))))OR((('') NOT BETWEEN (NULL) AND (x'')))))AND(((('', 0.5215552657498527, 0x649297e1)) NOT BETWEEN ((NULL, NULL, x'ec24')) AND ((0.7151289807358425, NULL, '826304893')))))) GROUP BY CASE ((t0.c58) IS FALSE)  WHEN (t0.c16 IN ()) THEN t0.c0 COLLATE BINARY ELSE x'e407' END HAVING ((((t0.c58)IS NOT(t0.c74)))<=(((t0.c16)>=(t0.c0))));SELECT ((0.9827450682436693) IS FALSE) FROM t0 WHERE (COALESCE(DISTINCT CASE 1.072415142E9  WHEN x'' THEN NULL ELSE '-123956038' END, '-229208307')); -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(t0.c0)  WHEN CAST(t0.c74 AS REAL) THEN COUNT(*) END FROM v0, t0 WHERE ((((((((((((NULL)AND('룾EU>n')))AND('-410130733')))OR('991123342')))OR(0.11027508431643629)), (+ (NULL)), HEX(DISTINCT '{z')))>=(((NULL IN ('102295134')), ((2145284831)LIKE('0.3114024274809256')), ((-57428745) BETWEEN (0.9326418793574486) AND (0.7611507209099012)))))); -- 1ms;
SELECT ALL ((CAST(t0.c16 AS TEXT))/(t0.c58)), CAST((~ (t0.c58)) AS NUMERIC), CASE WHEN ((((t0.c16)OR('3\n')))OR(t0.c58)) THEN t0.c16 END, ('1505394547' IN ()), PERCENT_RANK() OVER ( ORDER BY ((CAST(t0.c0 AS REAL))GLOB(((0.7475721492044395) BETWEEN (t0.c58) AND (t0.c58))))  NULLS FIRST) FROM v0;SELECT ((AVG(t0.c58))!=(CASE v0.c0  WHEN t0.c16 THEN t0.c58 ELSE v0.c0 END)) FROM v0, t0 WHERE (x'2484'); -- 0ms;
SELECT DISTINCT ((((NOT (t0.c58))))==((t0.c58))) FROM v0 GROUP BY 0x5ce9292, CASE WHEN t0.c58 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) WHEN ((x'')<=(-381941951)) THEN ((t0.c58)GLOB(t0.c58)) WHEN ((((t0.c74)AND(v0.c0)))AND(t0.c0)) THEN LTRIM(t0.c74) ELSE CAST(v0.c0 AS INTEGER) END, (((((t0.c16, t0.c74, t0.c0)) BETWEEN ((t0.c16, t0.c74, t0.c58)) AND ((t0.c58, '', t0.c74))))%('-205375013'));SELECT DISTINCT CAST(((v0.c0)AND(t0.c0)) AS TEXT) FROM t0, v0 WHERE (LIKELY(((-1636064175) IS FALSE))) GROUP BY ((t0.c0 COLLATE BINARY)-('1436579945')) HAVING (+ (t0.c0)); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c74)) BETWEEN (((t0.c0)+(t0.c74))) AND (t0.c58 COLLATE BINARY)) FROM v0 WHERE ('CpRUf');SELECT ((((('-1914858267'))=((t0.c0)))) IS FALSE), ((((t0.c0 COLLATE NOCASE)AND(0xffffffffe2765cbe)))AND(((v0.c0) NOT BETWEEN (t0.c74) AND (t0.c74)))), (- (((t0.c16) BETWEEN (t0.c74) AND (t0.c16)))) FROM v0 WHERE (((((((x'') BETWEEN (x'07c3') AND (-5.1838111E8)))AND((+ (624978564)))))OR((((x'', '', NULL))<((-1.610402231E9, NULL, '0.6745376929648907')))))) GROUP BY ((((t0.c58)/(t0.c74)))OR(((t0.c74) IS FALSE))) ORDER BY NULL DESC  NULLS FIRST, ((((((((((((t0.c0)AND(t0.c58)))AND(v0.c0)))AND(TYPEOF(DISTINCT '-380801740'))))AND(t0.c58 COLLATE RTRIM)))AND(((t0.c74) IS TRUE))))AND(((0.6544694080755423)>=(t0.c16)))) DESC, ((((((t0.c0)OR(t0.c58)))OR(v0.c0))) NOT BETWEEN ((t0.c74 IN ())) AND (((((((((t0.c58)OR(t0.c0)))OR(t0.c16)))OR(t0.c0)))OR(t0.c0))));SELECT ALL (((t0.c0 IN ()))>=(json_array_length(t0.c58, t0.c0))) FROM v0;SELECT DISTINCT SUM(((t0.c74) IS TRUE)) OVER () FROM v0;SELECT ALL (((((t0.c16)>=(t0.c74)), v0.c0 COLLATE RTRIM, (+ (t0.c0))))>=((CASE v0.c0  WHEN t0.c16 THEN t0.c0 END, (NOT (t0.c58)), t0.c74 COLLATE BINARY))) FROM v0;SELECT ALL ((CASE t0.c58  WHEN t0.c58 THEN t0.c74 END) BETWEEN (CASE WHEN t0.c74 THEN t0.c58 WHEN v0.c0 THEN t0.c16 WHEN t0.c0 THEN t0.c58 WHEN t0.c74 THEN t0.c16 WHEN t0.c58 THEN t0.c16 ELSE t0.c0 END) AND ((~ (v0.c0)))), CASE ((v0.c0) BETWEEN (t0.c0) AND (v0.c0))  WHEN TRIM(t0.c0, v0.c0) THEN (((t0.c74))>=((t0.c0))) ELSE ((((t0.c58)OR(t0.c74)))OR(t0.c0)) END, (((t0.c0 IN (t0.c0))) ISNULL) FROM t0, v0; -- 2ms;
SELECT DISTINCT CAST(t0.c16 AS REAL) FROM v0;SELECT DISTINCT LAST_VALUE(t0.c74) OVER () FROM t0 WHERE ((('-363385880' COLLATE NOCASE) NOT BETWEEN ('' COLLATE NOCASE) AND ((('') BETWEEN (x'') AND (x'd398'))))); -- 0ms;
SELECT ALL (~ (((t0.c74)IS(t0.c16)))) FROM v0, t0 WHERE (CAST(CAST(0.620429606250512 AS REAL) AS TEXT)) ORDER BY CAST(CASE t0.c58  WHEN v0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c16, t0.c58, t0.c58))>((v0.c0, v0.c0, t0.c16))) COLLATE BINARY FROM v0, t0; -- 0ms;
SELECT DISTINCT t0.c58 FROM v0, t0 WHERE ((NOT ((- ('-415843900'))))); -- 0ms;
SELECT COUNT(*) FILTER(WHERE (((((t0.c58, t0.c74, v0.c0))<=((NULL, t0.c58, t0.c58))))%(((t0.c16)OR(t0.c16))))) OVER () FROM v0 INDEXED BY i37 GROUP BY LOWER(COALESCE(DISTINCT t0.c16, t0.c58)) HAVING (((0.7307475278403026))=(((- (v0.c0)))));SELECT DISTINCT COUNT(*) FROM v0, t0 WHERE ((((x'fd337538' IN ())) NOT BETWEEN (('2131430337' IN ())) AND (((x'') IS FALSE)))); -- 0ms;
SELECT DISTINCT (- (COUNT(t0.c74))) FROM t0, v0 WHERE (((x'b5d7')GLOB((NULL IN ())))) GROUP BY 0.500863630304277, (- (t0.c58)), (NOT ((t0.c16 IN ()))); -- 0ms;
SELECT DISTINCT (((((t0.c58)OR(t0.c0))))<>(((NOT (v0.c0))))) FROM v0, t0 WHERE ((NOT ((NULL IN ())))) ORDER BY (CASE WHEN v0.c0 THEN t0.c74 WHEN v0.c0 THEN t0.c58 WHEN t0.c0 THEN t0.c74 ELSE t0.c16 END IN ()); -- 0ms;
SELECT (((x'' IN (830134836)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c58))))) FROM v0 GROUP BY 0.36220129516105815;SELECT DISTINCT ((v0.c0)|(t0.c74)) COLLATE RTRIM, CAST(CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c74 THEN t0.c58 WHEN t0.c0 THEN t0.c16 ELSE x'' END AS TEXT), ((t0.c16)GLOB(t0.c16)) COLLATE BINARY FROM t0 INDEXED BY i37, v0 GROUP BY ((((t0.c74) NOT BETWEEN (t0.c74) AND (t0.c58)))IS((v0.c0 IN ()))), (~ (CAST(t0.c58 AS TEXT))), ((t0.c0 COLLATE NOCASE) NOTNULL);SELECT DISTINCT ((COUNT(*))>>(CASE x''  WHEN v0.c0 THEN t0.c74 END)), CHAR('-883445744', x'', x'f73b'), (((((t0.c0, t0.c74, t0.c0))>=((t0.c16, v0.c0, t0.c74)))) IS FALSE) FROM v0 ORDER BY CAST(HEX(DISTINCT t0.c0) AS BLOB), ((t0.c0)*(t0.c0)) COLLATE BINARY;SELECT DISTINCT LOWER(((((((((t0.c74)OR(v0.c0)))OR(t0.c74)))AND(v0.c0)))AND('667747668'))), ((((NULL) NOT BETWEEN (t0.c58) AND (v0.c0))) BETWEEN ((((t0.c74, t0.c74, v0.c0))>=(('Z', t0.c16, t0.c74)))) AND (((t0.c58) NOT NULL))), t0.c0 COLLATE NOCASE FROM v0, t0 WHERE (LIKELY(DISTINCT UPPER(DISTINCT '-1322914615'))); -- 0ms;
SELECT DISTINCT ((((v0.c0)!=(t0.c16))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((((v0.c0)AND(t0.c16)))OR(t0.c16)))), MIN(((((v0.c0)OR(t0.c58)))AND(t0.c58))), (((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN (x'b804' COLLATE BINARY)) FROM t0, v0; -- 0ms;
SELECT ALL (TOTAL(t0.c16) IN (CAST(NULL AS BLOB))) FROM t0, v0 GROUP BY CASE WHEN CAST(t0.c74 AS TEXT) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c16 ELSE t0.c74 END WHEN t0.c16 THEN (((t0.c74, t0.c0, t0.c16)) BETWEEN (('-565584922', t0.c58, t0.c16)) AND ((t0.c0, t0.c58, t0.c58))) WHEN t0.c74 COLLATE BINARY THEN ((v0.c0)&(v0.c0)) ELSE INSTR(1989435796, v0.c0) END; -- 1ms;
SELECT ((((((((t0.c58 COLLATE RTRIM)OR((((t0.c58, t0.c74, t0.c58))<((t0.c16, v0.c0, t0.c58))))))OR((+ (v0.c0)))))OR(CASE WHEN v0.c0 THEN t0.c74 ELSE t0.c74 END)))AND(('1145807014' IN ()))), (+ ('0.642366097227536')), ((((t0.c74) NOT BETWEEN (t0.c74) AND (t0.c58))) BETWEEN (CASE WHEN t0.c74 THEN t0.c58 WHEN t0.c0 THEN t0.c58 WHEN t0.c0 THEN '1275917536' ELSE t0.c16 END) AND (COUNT('-137650181'))), ((((v0.c0)&(t0.c0)))||(CAST('*H' AS BLOB))), x'' FROM v0;SELECT DISTINCT ((t0.c74 COLLATE RTRIM) BETWEEN (((t0.c58) IS FALSE)) AND (CAST(t0.c74 AS BLOB))), ((t0.c58) BETWEEN (t0.c0) AND (t0.c58)) COLLATE BINARY, (NOT (((((t0.c58)OR(t0.c74)))AND(v0.c0)))) FROM t0 INDEXED BY i37;SELECT DISTINCT LEAD(t0.c16, (IFNULL(t0.c16, t0.c0) IN ()), (((v0.c0)) NOT BETWEEN ((((v0.c0)<=(x'e00f')))) AND ((NULL)))) OVER () FROM t0, v0 WHERE ((((((((((- (NULL)))OR(((((x'')OR(NULL)))AND(0.34345552015187397)))))AND(CAST(-674320436 AS REAL))))AND(CAST(NULL AS REAL))))AND(CAST(NULL AS BLOB)))) LIMIT 907231812; -- 0ms;
SELECT DISTINCT (((((x'')&(v0.c0))))<=((SUM(t0.c16)))) FROM v0, t0 WHERE ((((0xffffffffa1da694e) BETWEEN (x'') AND (0Xffffffff97f54b97)) IN (CASE 6.41620796E8  WHEN NULL THEN '2131430337' WHEN NULL THEN x'' WHEN NULL THEN NULL WHEN 0.5785488108967246 THEN NULL WHEN '-1905295189' THEN 'H쪔' END))) ORDER BY ((((((0.4121231947961218)AND(t0.c16)))AND(v0.c0))) IS FALSE); -- 0ms;
SELECT (((t0.c58)) NOT BETWEEN ((CAST(t0.c74 AS TEXT))) AND (((t0.c0 IN ())))), t0.c16, (((t0.c74)) NOT BETWEEN ((t0.c16)) AND ((v0.c0))) COLLATE RTRIM FROM t0;SELECT DISTINCT ABS(DISTINCT ((v0.c0)<=(t0.c0))) FROM v0;SELECT ALL '{n' COLLATE RTRIM FROM v0 LIMIT -777402617; -- 0ms;
SELECT DISTINCT ((v0.c0) NOT BETWEEN (t0.c58 COLLATE NOCASE) AND (((v0.c0) IS FALSE))) FROM t0, v0 WHERE ((NOT ('')) COLLATE BINARY); -- 0ms;
SELECT (((~ (t0.c0))) ISNULL) FROM t0, v0 WHERE ((((((NULL)) NOT BETWEEN (('-363385880')) AND ((0x38b907d5))))<=((('-1513107496') BETWEEN (0.31142197822806816) AND ('-160615509'))))); -- 0ms;
SELECT DISTINCT TYPEOF((((t0.c0)) BETWEEN ((t0.c58)) AND ((t0.c16)))) FROM v0;SELECT DISTINCT CASE CASE WHEN t0.c74 THEN v0.c0 WHEN t0.c58 THEN v0.c0 WHEN x'' THEN v0.c0 ELSE t0.c74 END  WHEN CASE WHEN t0.c74 THEN t0.c16 ELSE t0.c0 END THEN ((t0.c58)-(t0.c58)) END, (((((- (t0.c74)))AND((((NULL))==((t0.c16))))))AND(v0.c0 COLLATE RTRIM)), (((t0.c16) NOT BETWEEN (v0.c0) AND (t0.c16)) IN ()) FROM t0, v0 WHERE ((NULL IN ()) COLLATE RTRIM) LIMIT 844281641; -- 0ms;
SELECT DISTINCT (+ (t0.c58)) COLLATE BINARY FROM t0 WHERE (((((1.332146847E9)OR('')))AND('-375099002')) COLLATE NOCASE COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (t0.c58 IN ()) COLLATE NOCASE FROM v0, t0 WHERE ((((((-1700412456, 0xffffffff93026261, 0.18891852932528297, '1918906690', NULL))<=((0.3642053669214662, NULL, '-2115428816', NULL, 1145739183))))>(x'490a' COLLATE BINARY))); -- 0ms;
SELECT ALL ((((CASE '[s'  WHEN t0.c0 THEN v0.c0 END)AND(((t0.c0)AND(t0.c16)))))AND(((v0.c0)<=(v0.c0)))) FROM t0, v0 WHERE (CASE (('306874597')<('-1325521400'))  WHEN ((NULL) NOTNULL) THEN x'6f32a1f1' END); -- 0ms;
SELECT DISTINCT ((t0.c74)|(v0.c0)) COLLATE BINARY FROM t0 WHERE (((CASE NULL  WHEN x'' THEN NULL ELSE NULL END)LIKE(CASE WHEN '-568803606' THEN -4.98840699E8 END))) LIMIT -137650181;SELECT ALL ((CASE v0.c0  WHEN t0.c16 THEN t0.c74 WHEN t0.c16 THEN t0.c58 WHEN v0.c0 THEN t0.c0 WHEN t0.c16 THEN t0.c58 WHEN t0.c74 THEN t0.c0 ELSE v0.c0 END) NOT BETWEEN (load_extension(t0.c74)) AND ((NOT (t0.c74)))) FROM v0, t0;SELECT DISTINCT ((TYPEOF(DISTINCT t0.c74))<=(t0.c74)) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((v0.c0) BETWEEN (((t0.c0) BETWEEN (t0.c74) AND (t0.c0))) AND ((t0.c0 IN ()))), ((((0.5824386990813301) NOT NULL)) ISNULL), AVG((t0.c74 IN (t0.c58))) OVER () FROM v0, t0 WHERE ((((((((((('-1062519595') IS TRUE))AND(1.948792651E9)))OR(NULL)))AND((~ (0.4088202144207558)))))OR(((((((((((((NULL)OR(NULL)))AND(NULL)))AND(x'')))AND(0.1836241042416944)))AND(x'')))OR(-1069483975))))) ORDER BY json_array_length(CAST(t0.c74 AS INTEGER)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((t0.c58)%(t0.c0)))GLOB((- (t0.c74)))), v0.c0, (~ ((((t0.c74)) BETWEEN ((t0.c0)) AND ((t0.c58))))) FROM t0, v0 WHERE (CAST(x'' AS NUMERIC) COLLATE NOCASE COLLATE RTRIM); -- 1ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((CAST(0.8931027166164647 AS REAL))) AND ((((t0.c16) NOT BETWEEN (t0.c58) AND (t0.c0))))), (~ (COUNT(*))), x'' FROM v0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT NULL, x'', (x'' IN (t0.c74)) COLLATE RTRIM FROM v0, t0 GROUP BY ((CAST(t0.c0 AS NUMERIC))>=((+ (t0.c16)))) HAVING (((t0.c74, t0.c58, t0.c74)) BETWEEN (('1646236004', SQLITE_SOURCE_ID(), 0.30385568221654813)) AND ((((t0.c16)LIKE(t0.c74)), t0.c16, (((t0.c58))>=((0.9677076306456224)))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c0) OVER ( ORDER BY CAST(t0.c0 COLLATE BINARY AS BLOB) DESC  NULLS LAST GROUPS  CURRENT ROW EXCLUDE GROUP) FROM v0, t0 WHERE (((((('898168284'))<>((-345878334))))GLOB(LTRIM(NULL)))); -- 0ms;
SELECT ALL TYPEOF(DISTINCT ((t0.c0) NOT NULL)) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((AVG('1011835362'))*(SUM(t0.c74))) FROM v0;SELECT DISTINCT (((+ (x''))) IS FALSE), ((CASE WHEN t0.c58 THEN t0.c74 ELSE t0.c0 END)IS(LIKELY(t0.c58))), ((- (t0.c0)) IN ()) FROM t0 WHERE (CASE -2.115428816E9 COLLATE NOCASE  WHEN ('%t' IN ()) THEN (('-1608121333')%('1488359199')) ELSE ((x'83c0')||('w蘹ក8<찦!m''')) END) LIMIT -879853222; -- 0ms;
SELECT DISTINCT HEX(CAST(v0.c0 AS TEXT)) FROM t0;SELECT NTILE((- (v0.c0 COLLATE RTRIM))) OVER ( GROUPS BETWEEN  CURRENT ROW AND ((((((t0.c58) NOT NULL))OR(NULL)))AND(((t0.c74)<(v0.c0)))) FOLLOWING), 0.1163804706388919, (((t0.c0, t0.c16, t0.c58)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))AND(t0.c74)), (NOT ('-926456770')), v0.c0)) AND ((((t0.c74)IS NOT(NULL)), (+ (t0.c16)), ((t0.c16)>(t0.c58))))), ((SQLITE_VERSION())IS NOT((t0.c0 IN ()))), ((MAX(t0.c74))<(CASE t0.c16  WHEN v0.c0 THEN t0.c74 ELSE t0.c58 END)) FROM v0, t0;SELECT DISTINCT (((t0.c58)) BETWEEN ((MIN('雮j|3A'))) AND (((((t0.c0, t0.c16, t0.c16))<((t0.c58, t0.c16, t0.c74)))))), CAST(((t0.c74)<(t0.c16)) AS INTEGER), ((CAST(t0.c74 AS INTEGER)) NOT BETWEEN (((t0.c16)OR(x''))) AND (CAST('-827331486' AS INTEGER))) FROM t0 WHERE (LIKELY(DISTINCT ((NULL)>=(NULL)))) GROUP BY (((t0.c0, v0.c0, t0.c16)) NOT BETWEEN ((((t0.c58) BETWEEN (t0.c0) AND (t0.c58)), UNLIKELY(DISTINCT v0.c0), (((0.06342262997396386)) BETWEEN ((t0.c58)) AND ((t0.c74))))) AND (((((x''))<=((t0.c0))), ((0x5c505109)IS(t0.c16)), t0.c16 COLLATE RTRIM))) HAVING AVG(CASE t0.c74  WHEN t0.c58 THEN t0.c58 WHEN v0.c0 THEN t0.c58 WHEN t0.c58 THEN t0.c74 END) COLLATE BINARY;SELECT DISTINCT (t0.c16 IN ()), (t0.c0 IN ()), v0.c0 FROM v0, t0 WHERE (CAST(((0.9959650134959238)<<('-34202634')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT v0.c0, (((RTRIM('Bo^*\rk &'), UPPER(DISTINCT NULL), MAX(t0.c74)))=((((1.548767497E9) IS FALSE), SQLITE_COMPILEOPTION_GET(t0.c58), ((((t0.c58)AND(t0.c16)))AND(t0.c74))))), (((t0.c0, t0.c0, v0.c0)) NOT BETWEEN ((LIKELY(v0.c0), HEX(DISTINCT t0.c16), (t0.c74 IN ()))) AND ((STRFTIME(t0.c0, t0.c16, t0.c16, t0.c0, t0.c16), GROUP_CONCAT(t0.c0), (((v0.c0)) NOT BETWEEN ((t0.c58)) AND ((t0.c16)))))) FROM v0;SELECT DISTINCT MIN(((t0.c58)!=(x''))) FROM t0 WHERE ((~ (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (('-2133422153')=(((((t0.c16)OR(v0.c0)))OR(v0.c0)))), ((((((((json_valid(v0.c0))AND(LIKELIHOOD(x'', 0.9909716574791748))))OR(((v0.c0) IS TRUE))))AND(((((((((x'2d527592')AND(t0.c58)))AND(t0.c0)))OR(t0.c16)))AND('漼')))))OR(LIKELIHOOD(DISTINCT t0.c74, 0.2884864960326946))), (('')=(CAST(t0.c0 AS BLOB))) FROM v0, t0 WHERE (((((((((CAST(0.6886440774674933 AS TEXT))OR((x'' IN (-3.39810924E8)))))AND((('1148721013') NOT BETWEEN (91856574) AND (NULL)))))OR((('-985126740')/(6.46109318E8)))))AND(((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT (((t0.c16)) NOT BETWEEN ((((t0.c74)<<(t0.c0)))) AND (((t0.c16 IN ())))) FROM t0, v0 WHERE ((x'' COLLATE BINARY IN ((('-1140093536') NOTNULL)))) ORDER BY ((((((t0.c58)<(t0.c0)))OR(0.2038198281528093 COLLATE RTRIM)))OR(((v0.c0)IS(t0.c74)))) ASC; -- 0ms;
SELECT ALL ((t0.c16)|(t0.c58)) COLLATE BINARY FROM t0 WHERE (CAST('-Uc^\\n ' COLLATE NOCASE AS INTEGER)); -- 1ms;
SELECT DISTINCT '-360443548' FROM t0, v0 WHERE ((0.4597248280803732 IN ())) EXCEPT SELECT DISTINCT 0.6473864579724197 FROM v0, t0 WHERE (CASE '0.7456987618467483' COLLATE NOCASE  WHEN ((NULL)IS NOT(0.23187548491025067)) THEN LOWER('') END); -- 0ms;
SELECT DISTINCT ((CAST(t0.c74 AS REAL))>((((t0.c0, t0.c16, t0.c16))>=((t0.c0, t0.c58, t0.c74))))), (((NULL))<((((((x'')AND(t0.c0)))OR(t0.c0))))), CAST(CASE v0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c74 END AS BLOB) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c16, t0.c16)) NOT BETWEEN ((v0.c0, t0.c16, t0.c58)) AND ((t0.c74, t0.c74, t0.c16))))|(((t0.c0) NOT NULL))), CAST(LOWER(t0.c58) AS TEXT), (((((v0.c0) ISNULL)))=((t0.c0 COLLATE NOCASE))) FROM t0, v0 WHERE ((NOT (((NULL) ISNULL)))); -- 0ms;
SELECT ALL ((((((((CAST(t0.c16 AS TEXT))AND(NULLIF(DISTINCT t0.c74, v0.c0))))AND(((v0.c0)AND(t0.c58)))))OR(t0.c74)))OR(CASE t0.c0  WHEN t0.c58 THEN t0.c0 WHEN t0.c16 THEN t0.c16 WHEN t0.c58 THEN t0.c16 END)) FROM t0 WHERE (0.06874855898629217);SELECT DISTINCT HEX(DISTINCT t0.c74) COLLATE NOCASE COLLATE BINARY FROM t0, v0 GROUP BY (((((+ (t0.c74)))OR(CASE WHEN t0.c58 THEN t0.c16 ELSE t0.c16 END)))AND((((t0.c0, t0.c74, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, t0.c74)) AND ((t0.c0, t0.c74, 'M'''))))) HAVING -1407916349; -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((v0.c0) BETWEEN (NULL) AND (t0.c58))) FROM v0, t0 WHERE ((((0Xffffffffe1f29c28 IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT MAX(TYPEOF(v0.c0), (((t0.c0)) BETWEEN ((t0.c74)) AND ((t0.c16)))) FROM t0;SELECT DISTINCT (((v0.c0, t0.c16, t0.c16, v0.c0, x'')) NOT BETWEEN (((t0.c58 IN (t0.c16)), (((t0.c16))>=((t0.c74))), COUNT(t0.c0), t0.c16 COLLATE RTRIM, t0.c16 COLLATE BINARY)) AND (((t0.c58 IN ()), ((t0.c0)<>(t0.c0)), t0.c58, CASE WHEN x'' THEN t0.c0 WHEN t0.c74 THEN t0.c0 WHEN t0.c16 THEN t0.c0 END, '' COLLATE NOCASE))) FROM t0 WHERE (CHANGES());SELECT DISTINCT 0.7996597469208926 FROM v0, t0 WHERE (((load_extension('</pB'))OR(CAST('\r*v!>)	4' AS REAL)))) LIMIT -424882165 OFFSET 212248136;SELECT COUNT((t0.c74 IN ())) OVER ( PARTITION BY (((t0.c74)) BETWEEN (((t0.c58 IN (t0.c0)))) AND ((t0.c0))), ((((t0.c0)AND(t0.c58)))%(CAST(t0.c74 AS BLOB)))) FROM v0 WHERE (((NULL) NOT BETWEEN (((x'')<<(NULL))) AND ((+ (0.26822710625506874))))) GROUP BY ((((t0.c74) BETWEEN (t0.c58) AND (t0.c16))) NOT BETWEEN ((((t0.c74))<=((t0.c74)))) AND (((t0.c0)>=(t0.c74)))) HAVING CAST(((t0.c74) BETWEEN (t0.c16) AND (t0.c74)) AS BLOB);SELECT ALL ((t0.c0)OR(t0.c16)) COLLATE NOCASE, ((((t0.c16)AND(x''))) IS TRUE), CASE ((t0.c74) IS FALSE)  WHEN ((((t0.c58)AND(t0.c74)))AND(v0.c0)) THEN CASE v0.c0  WHEN t0.c16 THEN NULL WHEN t0.c0 THEN v0.c0 WHEN t0.c74 THEN t0.c16 ELSE '898168284' END END FROM v0 LEFT OUTER JOIN t0 ON ((t0.c16 IN ()) IN ()); -- 0ms;
SELECT (('╆Il-\S?') NOT BETWEEN (((t0.c0) NOTNULL)) AND (json_insert(t0.c0, 1.91890669E9, t0.c16))) FROM v0 WHERE ('2145284831');SELECT DISTINCT (((((t0.c58)GLOB(t0.c0)), COALESCE(DISTINCT t0.c74, t0.c16), t0.c58))>=((CASE t0.c16  WHEN t0.c58 THEN t0.c16 END, (~ (t0.c74)), x'd913'))) FROM t0, v0; -- 0ms;
SELECT ALL (((((t0.c0) IS FALSE)))<>(((((t0.c58))<>((x'19d92743')))))) FROM v0 WHERE (((((NULL) ISNULL)) IS FALSE));SELECT DISTINCT SUM((+ (t0.c74))) OVER () FROM t0, v0 ORDER BY ((t0.c16 IN (t0.c58)) IN ()) DESC  NULLS LAST; -- 1ms;
SELECT ((t0.c16)>(t0.c58)) COLLATE NOCASE FROM t0, v0 INDEXED BY i85 LIMIT 1495598468 OFFSET -508215162;SELECT DISTINCT ((CAST(v0.c0 AS REAL)) ISNULL) FROM t0, v0 WHERE (NULLIF(1.68944535E8, 0.7461092273545024) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (IFNULL(t0.c74, t0.c58) IN ()) FROM t0 WHERE (((((1.461015236E9)<(0.3003808329695915))) NOTNULL)); -- 0ms;
SELECT DISTINCT json_extract(GROUP_CONCAT(t0.c0), NULL), TYPEOF(x'2eff'), ((t0.c0)AND(t0.c16)) COLLATE BINARY FROM v0, t0; -- 0ms;
SELECT DISTINCT t0.c74, SUM(((t0.c74) NOT BETWEEN (t0.c58) AND (t0.c0))), NULL FROM v0, t0 WHERE ((((('710023554' COLLATE RTRIM)AND((((0.39249628763291367, -4.33510431E8, 0X11266079)) NOT BETWEEN (('%', x'', -2.29208307E8)) AND ((0Xffffffffba0fe44c, NULL, 'ZP'))))))AND(((0.022609677427595676)<=(-1881034097))))); -- 0ms;
SELECT DISTINCT AVG(((t0.c74) BETWEEN (v0.c0) AND (''))) OVER () FROM v0, t0 GROUP BY ''; -- 0ms;
SELECT ALL load_extension(((v0.c0) NOTNULL)), t0.c58, ((((t0.c58 COLLATE RTRIM)AND((- (x'9177')))))OR(CASE t0.c58  WHEN t0.c74 THEN t0.c74 WHEN v0.c0 THEN t0.c16 WHEN t0.c58 THEN t0.c0 END)) FROM v0;SELECT GROUP_CONCAT(CASE WHEN t0.c74 THEN t0.c58 ELSE t0.c16 END) FROM t0 LIMIT -846732057 OFFSET -1993846909; -- 0ms;
SELECT DISTINCT (~ ((- (t0.c58)))) FROM t0, v0 ORDER BY LOWER(t0.c74) COLLATE BINARY  NULLS FIRST, (~ (CASE t0.c0  WHEN v0.c0 THEN t0.c16 WHEN NULL THEN t0.c16 WHEN t0.c0 THEN t0.c74 ELSE v0.c0 END))  NULLS FIRST, t0.c58 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT x'') FROM t0, v0; -- 0ms;
SELECT t0.c16, ((t0.c74)IS(COUNT(t0.c74))), GROUP_CONCAT(t0.c16) FROM t0; -- 0ms;
SELECT DISTINCT LOWER(CAST(t0.c74 AS INTEGER)) FROM v0, t0 WHERE (CASE WHEN ((((0.725541053766496)OR('641620796')))OR(NULL)) THEN (NOT (NULL)) ELSE CASE WHEN NULL THEN NULL WHEN x'' THEN NULL WHEN x'' THEN 'a*p4}B' END END); -- 0ms;
SELECT DISTINCT ((t0.c58)<<((((x'4301', t0.c58, t0.c58, t0.c16, t0.c0))=((v0.c0, t0.c74, t0.c58, v0.c0, 0.258903379734453))))) FROM v0, t0 WHERE (((LIKELY('1512252936')) ISNULL)); -- 0ms;
SELECT (+ (t0.c74)) FROM v0, t0 WHERE (((((0X59ba7f73) NOT BETWEEN (0.4888854719404018) AND ('1e.(sc>,-'))) NOT BETWEEN ((NOT (NULL))) AND ((((NULL, x'', 1702958666))==(('샢|', '켢', -1602669696)))))); -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE (((0.06295078492464812)<<((('1914058175')==(NULL))))); -- 0ms;
SELECT ((x'')<=(CASE t0.c58  WHEN t0.c74 THEN t0.c58 WHEN -1881034097 THEN t0.c74 WHEN t0.c74 THEN t0.c58 WHEN t0.c58 THEN v0.c0 WHEN v0.c0 THEN t0.c58 ELSE t0.c0 END)) FROM v0 ORDER BY ((((t0.c74)/(t0.c58))) NOT BETWEEN (CAST(t0.c16 AS TEXT)) AND (SQLITE_COMPILEOPTION_USED(t0.c0))) ASC  NULLS FIRST;SELECT DISTINCT CASE ((t0.c16) ISNULL)  WHEN t0.c0 THEN t0.c74 COLLATE NOCASE WHEN (~ (t0.c16)) THEN x'' WHEN CASE t0.c0  WHEN t0.c16 THEN v0.c0 ELSE v0.c0 END THEN CAST(x'5f34' AS TEXT) END, GROUP_CONCAT((((t0.c16))<=((t0.c16)))), ((SQLITE_SOURCE_ID())AND(CASE WHEN t0.c0 THEN t0.c58 END)) FROM v0 WHERE ('1]') ORDER BY 0.7361397690438621 COLLATE RTRIM;SELECT ALL CAST(((((t0.c0)OR(t0.c0)))OR(t0.c16)) AS TEXT) FROM v0 ORDER BY ((((t0.c16)IS NOT(t0.c74))) NOT BETWEEN ((t0.c0 IN ())) AND ((t0.c74 IN ()))) DESC;SELECT DISTINCT json_array(((t0.c74)>>(v0.c0)), ((t0.c0) BETWEEN (v0.c0) AND (t0.c16))) FROM v0, t0; -- 0ms;
SELECT ALL NULL FROM t0, v0 WHERE ((((((+ (NULL)))OR(CAST('-795937236' AS TEXT))))OR('-137650181' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((t0.c16)) NOT BETWEEN (((t0.c16 IN (t0.c74)))) AND ((CASE t0.c16  WHEN t0.c74 THEN t0.c0 WHEN t0.c58 THEN t0.c58 WHEN t0.c0 THEN t0.c0 ELSE t0.c16 END))) FROM v0 WHERE (((('12b')) BETWEEN ((CASE 'Ḱ!+l*\n'  WHEN 0.9461170581041711 THEN NULL ELSE x'9d08' END)) AND ((CAST(x'' AS INTEGER)))));SELECT DISTINCT (+ (AVG(t0.c16))), MAX(((((t0.c74)AND(t0.c0)))OR(t0.c58))), MIN(NULL) FROM t0 WHERE (LIKELY(('-926533051' IN ()))) GROUP BY ((((((((v0.c0 COLLATE NOCASE)AND(((t0.c16) IS FALSE))))AND((((t0.c16, t0.c58, t0.c0)) BETWEEN ((v0.c0, t0.c58, t0.c0)) AND ((t0.c16, t0.c74, 0.41936032366025944))))))AND(((v0.c0)*(t0.c58)))))OR(t0.c16)) HAVING CAST((v0.c0 IN ()) AS REAL);SELECT RANK() OVER (), COALESCE(t0.c16 COLLATE NOCASE, (((t0.c0)) NOT BETWEEN ((t0.c16)) AND ((t0.c16)))), (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c16)))) FROM t0, v0 ORDER BY ((load_extension(v0.c0)) ISNULL);SELECT DISTINCT NULL FROM v0; -- 0ms;
SELECT DISTINCT ((((t0.c74) NOT BETWEEN (t0.c74) AND (t0.c0))) NOT BETWEEN (SUM(t0.c16)) AND (((v0.c0) IS TRUE))) FROM t0, v0 WHERE (((((0.5357872003438442)) BETWEEN (('9123731875406898234')) AND ((0.642366097227536))) IN ())); -- 0ms;
SELECT ALL CASE ((((((((NULL)AND(t0.c0)))OR(t0.c58)))OR(v0.c0)))AND(t0.c0))  WHEN ((v0.c0)LIKE(t0.c58)) THEN ((t0.c58) NOT BETWEEN (t0.c74) AND (t0.c74)) ELSE (~ (v0.c0)) END FROM v0;SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c74)))) NOTNULL), CASE WHEN CAST(t0.c74 AS BLOB) THEN MAX(t0.c58) END, ((((v0.c0) NOT BETWEEN (t0.c58) AND (t0.c58)))IS NOT((+ (t0.c0)))) FROM t0 WHERE (((((0.995199549989043)AND(((NULL)IS NOT(0x6e9759c6)))))AND(((0.6251523745750673) BETWEEN ('-2020477132') AND (x'')))));SELECT ALL (NOT ((('&\r_J')<>(0.517986703549595)))) FROM v0, t0 ORDER BY (((((((((NOT (t0.c74)))OR(((t0.c16)|(v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(((t0.c0) NOT BETWEEN (x'') AND (v0.c0)))))AND(t0.c0)) DESC  NULLS FIRST, (~ (((((v0.c0)AND(t0.c58)))OR(t0.c74)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT TYPEOF(((v0.c0)||(t0.c16))) FROM t0 GROUP BY (('-48126826')>(NULL)), (NOT ((((t0.c0))=((t0.c74))))), CAST(t0.c0 AS REAL) COLLATE BINARY HAVING x'';SELECT GROUP_CONCAT(t0.c0) FROM t0 WHERE ((('DIZ{XS') NOT BETWEEN (NULL) AND (('-1024642911' IN ())))); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN t0.c58 THEN t0.c16 ELSE v0.c0 END)AND(((t0.c58)|('0.2646527056539647')))))AND(((('0.4088202144207558')) NOT BETWEEN ((t0.c58)) AND ((v0.c0))))))AND(((v0.c0)<<(t0.c74)))))AND(CASE WHEN t0.c74 THEN t0.c58 ELSE t0.c74 END)) FROM t0 WHERE ((NOT (CASE 0.8937859727101231  WHEN NULL THEN NULL END))) GROUP BY ((CASE WHEN v0.c0 THEN t0.c58 END)>=((t0.c0 IN (t0.c58)))) ORDER BY (((x'3910' IN (t0.c0))) NOTNULL) ASC  NULLS FIRST, (((((('') NOT BETWEEN (t0.c58) AND (t0.c74)))AND(((t0.c16)OR(v0.c0)))))AND((t0.c16 IN ()))), CAST(v0.c0 COLLATE NOCASE AS REAL) ASC  NULLS FIRST LIMIT -1337504708 OFFSET -569724815;SELECT CAST(((((t0.c74)AND(t0.c74)))AND(t0.c16)) AS TEXT) FROM v0, t0 WHERE (CASE CASE WHEN '*_' THEN 0.013353838843704335 ELSE x'5788' END  WHEN NULL THEN 0x3f804958 WHEN (NOT ('f''r')) THEN -1.914858267E9 COLLATE BINARY WHEN CASE 396671527  WHEN '-158374270' THEN x'cf83' END THEN (0.36677059605900375 IN ()) END); -- 0ms;
SELECT DISTINCT '-559322922', CAST(RTRIM(v0.c0) AS TEXT), 0.7398837498062001 FROM v0; -- 0ms;
SELECT DISTINCT (((((v0.c0))<=((t0.c0))))-(((t0.c74) IS TRUE))), ((((t0.c74) NOT BETWEEN (t0.c74) AND (t0.c58)))GLOB(((t0.c16)/(t0.c58)))), ((((t0.c58)>(v0.c0)))|(((t0.c0)=(t0.c58)))) FROM v0, t0 WHERE (((CASE WHEN 0.4399261006340499 THEN NULL ELSE NULL END) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((((t0.c16)OR(t0.c0)))AND(t0.c16)))OR(MIN(t0.c16))))AND(v0.c0)) FROM v0, t0 WHERE (((((NULL)|(0.915773316852032)))<=(NULL))) ORDER BY ((CAST(t0.c74 AS REAL)) NOT NULL) ASC, ((t0.c16 IN (t0.c74, t0.c74)) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT (AVG(v0.c0))), ((CASE WHEN t0.c58 THEN t0.c74 END)*(CASE t0.c74  WHEN v0.c0 THEN t0.c0 WHEN t0.c16 THEN '' WHEN t0.c58 THEN t0.c58 END)), ((((((((((v0.c0)OR(t0.c58)))OR(t0.c0)))AND(t0.c16)))OR(t0.c74)))|(((t0.c16) NOT NULL))) FROM v0, t0; -- 0ms;
SELECT ALL MAX((- (t0.c16))) FROM t0, v0; -- 0ms;
SELECT ALL x'35c4' FROM t0, v0 ORDER BY (((((((NULL)AND(v0.c0)))OR(v0.c0)), x'', t0.c74 COLLATE BINARY))<=((CAST(v0.c0 AS INTEGER), ((t0.c16) IS TRUE), CAST(0.9467655466146891 AS INTEGER)))), (((t0.c58)) BETWEEN ((t0.c0)) AND ((t0.c74))) COLLATE BINARY, (((t0.c16 IN (t0.c0, t0.c0))) NOT NULL); -- 0ms;
SELECT ALL ((((t0.c16)AND(t0.c16)))OR(t0.c16)) COLLATE NOCASE, ((((t0.c0) IS FALSE)) BETWEEN (t0.c58) AND (((v0.c0)+(t0.c58)))), LEAD((((t0.c74, '168944535', t0.c58, t0.c74, t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c74) AND (t0.c16)), t0.c74, ((t0.c58) ISNULL), x'', CASE NULL  WHEN 1778290967 THEN t0.c0 WHEN t0.c74 THEN NULL WHEN t0.c58 THEN t0.c58 END)) AND ((SQLITE_COMPILEOPTION_GET(t0.c0), x'8847cfbb', ((t0.c58)-(t0.c74)), NULL, ((' (㧛') NOT NULL)))), LIKE(((t0.c58) NOT BETWEEN ('-1602669696') AND (t0.c0)), (((t0.c74))>((t0.c74))), '}'), (((((((t0.c0))>=((t0.c74))))OR(((((t0.c74)AND(t0.c0)))OR(-0.0)))))OR((t0.c58 IN (t0.c0, t0.c74))))) OVER ( ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c74)))IS(t0.c0 COLLATE RTRIM)) ASC  NULLS LAST) FROM t0;SELECT DISTINCT AVG(((v0.c0)||(t0.c74)) COLLATE NOCASE) FROM v0 WHERE (CASE WHEN ((x'2a31a218')>(0.63809266503633)) THEN (x'faac' IN ()) END);SELECT ALL ((CASE t0.c58  WHEN x'' THEN -1.64745868E9 WHEN t0.c74 THEN 0xffffffffbfe749f3 WHEN t0.c0 THEN x'c7be8635101b' END)&(((t0.c0)GLOB(v0.c0)))), MAX(CAST(t0.c16 AS INTEGER)), (+ (LOWER(t0.c16))) FROM t0, v0 WHERE ((((1.520369991E9)) BETWEEN ((((((x'')OR('<?Kt{9s')))AND(']1G?')))) AND (((('')==(NULL)))))); -- 0ms;
SELECT DISTINCT MAX(((t0.c74)|(t0.c58))) FROM t0; -- 0ms;
SELECT (+ (((t0.c58)OR(t0.c74)))), rtreenode(((t0.c58) NOT BETWEEN (t0.c0) AND (t0.c0)), ('<r' IN ())), (((NULL, t0.c58, v0.c0, t0.c0, t0.c58)) BETWEEN ((t0.c74, t0.c16, v0.c0, t0.c16, t0.c58)) AND ((t0.c0, t0.c0, t0.c16, v0.c0, t0.c16))) COLLATE NOCASE COLLATE RTRIM, ((((((((LIKELY(DISTINCT t0.c16))AND(NULL)))OR(CASE t0.c58  WHEN v0.c0 THEN t0.c58 ELSE t0.c0 END)))AND((t0.c16 IN ()))))AND((v0.c0 IN ()))), LAG(((~ (t0.c58)) IN ()), (((((t0.c0))<>((t0.c58)))) IS TRUE), CASE ((v0.c0) NOT BETWEEN (0.8031965459820358) AND (t0.c74))  WHEN CAST(t0.c58 AS BLOB) THEN ((((t0.c58)OR(t0.c58)))OR('')) ELSE ((t0.c74) NOTNULL) END) OVER ( RANGE  CURRENT ROW EXCLUDE TIES) FROM t0, v0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM v0; -- 0ms;
SELECT (((((t0.c58)) NOT BETWEEN ((t0.c58)) AND ((t0.c58)))) NOT NULL) FROM v0, t0 WHERE ((- (CASE 0.6613621676661234  WHEN '8g' THEN x'' ELSE NULL END))); -- 0ms;
SELECT (((t0.c58 IN ())) IS FALSE), CASE WHEN ((t0.c0)<<(v0.c0)) THEN UNLIKELY(DISTINCT t0.c0) ELSE (~ (v0.c0)) END, (((t0.c74)LIKE(t0.c58)) IN (x'')) FROM t0, v0 WHERE (CAST((((('-276560505')OR(0.5043802859696963)))AND(x'')) AS TEXT)) GROUP BY (((+ (t0.c58))) NOT BETWEEN (COALESCE(DISTINCT t0.c0, t0.c16)) AND (((0.5512659526717028) NOT NULL))), (NOT (((v0.c0) ISNULL))), (((v0.c0, x'', t0.c74)) NOT BETWEEN ((UPPER(v0.c0), t0.c16 COLLATE NOCASE, 'nK')) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c74 THEN v0.c0 WHEN t0.c74 THEN v0.c0 ELSE t0.c0 END, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))), ((((t0.c16)AND(-831172636)))OR(t0.c74))))), ((((t0.c74)) NOT BETWEEN ((t0.c58)) AND ((t0.c58))) IN ()), x'', (((- (t0.c74))) NOT NULL), CASE WHEN ((v0.c0)GLOB('-2025775288')) THEN (((t0.c0))<=((t0.c0))) END; -- 0ms;
SELECT DISTINCT ((((GLOB(v0.c0, t0.c16))AND(((t0.c74) ISNULL))))OR((((x''))!=((v0.c0))))) FROM t0, v0; -- 0ms;
SELECT x'', ((((((t0.c16)OR(t0.c16)))AND(v0.c0))) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.38769737549830285)) AND ((x'' IN ()))), CASE WHEN ((((((((t0.c0)AND(NULL)))AND(0X7c6a36a)))AND(t0.c0)))AND(t0.c58)) THEN ((((((((v0.c0)AND(t0.c58)))AND(v0.c0)))AND(v0.c0)))OR(0.047998087780404264)) WHEN ((t0.c0)<>(v0.c0)) THEN (t0.c16 IN ()) WHEN ((t0.c58)LIKE(t0.c16)) THEN t0.c16 ELSE ((v0.c0)%(t0.c16)) END FROM t0 NOT INDEXED LIMIT 884930980;SELECT ALL ((((((((((t0.c0)OR(t0.c0)))OR(NULL)))OR(t0.c74)))AND(t0.c74))) NOT NULL) FROM t0 WHERE ((HEX(DISTINCT NULL) IN ())); -- 0ms;
SELECT ALL (((((t0.c16, v0.c0, t0.c58))<>((t0.c0, t0.c0, t0.c16))))IS NOT(((((t0.c0)OR(t0.c58)))OR(t0.c16)))), CAST(t0.c0 AS REAL), ((0.6541052299412817)<<(x'')) FROM v0 WHERE (CAST(((0.7401981110617443)<=(NULL)) AS NUMERIC));SELECT ALL ((((t0.c16, v0.c0, t0.c0))>((t0.c58, t0.c0, t0.c58))) IN ()) FROM v0, t0 LIMIT -1647458680 OFFSET 1989435796; -- 1ms;
SELECT DISTINCT (LIKELIHOOD(t0.c16, 0.12785683718567953) IN ()), CAST((- (t0.c0)) AS REAL), CAST(((t0.c74) NOT BETWEEN (t0.c16) AND (v0.c0)) AS TEXT), t0.c58, 0X4279a54b COLLATE RTRIM FROM t0 WHERE ((~ (((NULL)&(0.047998087780404264)))));SELECT ALL CASE HEX(t0.c0)  WHEN NULL THEN (t0.c74 IN (t0.c74)) END FROM t0 WHERE ((((('s') IS FALSE))>>(CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT MAX(((t0.c16)LIKE(t0.c0))) FROM v0 WHERE (((((((((NULL COLLATE BINARY)AND(x'' COLLATE BINARY)))AND((- ('0.7307099902443381')))))AND(((-1496205672) NOTNULL))))OR(NULLIF(NULL, x''))));SELECT ALL ((((AVG(t0.c74))AND((((t0.c16, v0.c0, t0.c0))<>((t0.c74, v0.c0, t0.c0))))))OR(((t0.c0) IS FALSE))) FROM v0, t0 WHERE (((CAST(0.4229260750932743 AS NUMERIC))IS NOT(('' IN ('1345590570', ''))))); -- 0ms;
SELECT ALL ((SQLITE_COMPILEOPTION_GET(t0.c16)) NOTNULL), ((((t0.c74) ISNULL)) NOT BETWEEN ((NOT (t0.c74))) AND (((t0.c58) NOT BETWEEN (v0.c0) AND (t0.c74)))), ((CASE t0.c16  WHEN t0.c74 THEN t0.c16 ELSE t0.c74 END)%((((t0.c16))>((v0.c0))))) FROM v0, t0 WHERE (((((0xffffffffea826b25)GLOB('1646236004'))) IS FALSE)); -- 0ms;
SELECT DISTINCT LAST_VALUE(LOWER((~ (t0.c0)))) OVER () FROM v0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0) BETWEEN (t0.c58) AND (t0.c16)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT t0.c74 COLLATE RTRIM, ((MAX(t0.c74))&(v0.c0 COLLATE NOCASE)), (((t0.c0))!=((((t0.c58) IS TRUE)))) FROM v0 WHERE (UNLIKELY(DISTINCT (('')|(x''))));SELECT CAST(t0.c74 AS TEXT) COLLATE BINARY FROM t0 WHERE (((((0.07932905706909676)<(NULL))) NOTNULL)); -- 1ms;
SELECT DISTINCT CAST((NOT (t0.c0)) AS REAL) FROM v0, t0 LIMIT 984206898; -- 0ms;
SELECT DISTINCT ((TYPEOF(t0.c16))-((((v0.c0))<=((t0.c0))))) FROM t0 LIMIT 991123342;SELECT DISTINCT CASE WHEN SUM(t0.c16) THEN ((t0.c16)*(t0.c0)) WHEN t0.c0 THEN CAST(t0.c16 AS NUMERIC) WHEN ((t0.c16) NOTNULL) THEN (t0.c16 IN ()) ELSE t0.c0 END FROM t0, v0 WHERE (((x'')|((x'' IN ())))); -- 0ms;
SELECT DISTINCT (x'f339' IN ()) COLLATE NOCASE FROM v0, t0 GROUP BY CASE ((t0.c0)>=(t0.c58))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c16)) AND ((t0.c0))) THEN (((t0.c0)) NOT BETWEEN ((t0.c58)) AND ((NULL))) ELSE NULL END; -- 0ms;
SELECT DISTINCT ((t0.c58 IN (t0.c74)) IN ()) FROM t0, v0 WHERE (((((NULL) IS TRUE))IS(x''))) ORDER BY ((((t0.c58)AND(NULL))) IS TRUE) ASC  NULLS FIRST, ((((((t0.c0)) BETWEEN ((t0.c16)) AND ((v0.c0))), NULL, HEX(DISTINCT t0.c0)))<=((v0.c0 COLLATE NOCASE, CAST(t0.c74 AS NUMERIC), ((t0.c58) BETWEEN (t0.c0) AND (t0.c0))))) ASC; -- 0ms;
SELECT DISTINCT ((((t0.c0)LIKE(t0.c16)))%(AVG(t0.c74))) FROM v0, t0 WHERE (SQLITE_COMPILEOPTION_USED(((0.29884731906302164) NOT NULL))); -- 0ms;
SELECT ((CASE WHEN t0.c58 THEN t0.c58 END) IS FALSE), CAST(MAX(v0.c0) AS REAL), COUNT(*) OVER () FROM v0;SELECT CASE AVG(t0.c58)  WHEN CASE WHEN t0.c74 THEN t0.c16 END THEN '(P .B?CT' WHEN (t0.c16 IN ()) THEN COUNT(t0.c58) WHEN json_type(t0.c74) THEN highlight(v0.c0, t0.c58, t0.c58, '-769633697') ELSE (NOT (t0.c74)) END FROM t0, v0 WHERE ((NOT (CAST(0xfffffffface6f2bd AS NUMERIC)))) GROUP BY (((t0.c58)) BETWEEN (((((v0.c0))==((t0.c74))))) AND ((NULL))), CAST(UNLIKELY(t0.c58) AS NUMERIC), ((((v0.c0 IN (t0.c16, t0.c0)), (NOT (x'')), ((t0.c74) IS TRUE)))<=(((((v0.c0))<>((v0.c0))), ((t0.c16)LIKE(t0.c74)), CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c74 THEN t0.c58 WHEN t0.c16 THEN t0.c0 WHEN v0.c0 THEN t0.c16 WHEN t0.c58 THEN t0.c58 END))), v0.c0, v0.c0; -- 0ms;
SELECT DISTINCT MIN(0X66c51601) COLLATE RTRIM FROM t0, v0; -- 0ms;
SELECT 'n^|f	U)', (((t0.c0 IN ()))AND(CASE t0.c16  WHEN v0.c0 THEN t0.c16 END)), (((t0.c74 IN (t0.c0, t0.c58)))>>(MAX(t0.c58))) FROM t0, v0 WHERE ((((('Y	') IS FALSE))==((((((((('-1914858267')AND(0.19114631548146033)))OR(NULL)))AND(NULL)))OR(-375099002))))); -- 1ms;
SELECT DISTINCT ((((t0.c16) NOT NULL)) IS FALSE) FROM t0 WHERE (((0.9364853877957483) NOT NULL)); -- 0ms;
SELECT ALL t0.c74 FROM t0 GROUP BY ((((((t0.c16)OR(0xffffffffa8c1d5e0)))OR(v0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c16 END) AND ((- ('oz1u9a')))) ORDER BY ((((t0.c74)AND(0.32065934616363534)))AND((- (t0.c58)))) DESC  NULLS LAST;