-- Time: 2024/06/07 12:15:33
-- Database: database20
-- Database version: 3.40.0
-- seed value: 4155753420
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 TEXT ); -- 5ms;
ANALYZE t1; -- 0ms;
CREATE UNIQUE INDEX i79 ON t1(CAST(((c0)&(c0)) AS REAL) ASC) WHERE UNLIKELY(((((c0)AND(c0)))AND(c0))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=('+', ''); -- 0ms;
UPDATE t1 SET c0=0.629971821468638; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE t1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '57981'); -- 0ms;
DROP INDEX "i79"; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='0.629971821468638' WHERE SQLITE_COMPILEOPTION_GET(vt0.c0); -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c59 TEXT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1149405992);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1149405992,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 203855976); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX RTRIM; -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('', x''); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES ('Vae瓘'); -- 6ms;
INSERT OR ROLLBACK INTO vt0(c2, c0) VALUES (0X54ff23f5, 0.6888894579700807); -- 8ms;
INSERT OR FAIL INTO t1(c0) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 516715025); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-804726515,3');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ALTER TABLE t1 ADD COLUMN c26 INTEGER; -- 3ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26141'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
UPDATE OR IGNORE t1 SET (c26, c59)=('vae瓘', x'') WHERE ((((((((((((t1.c26)OR(786309780)))AND(t1.c26)))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))OR(json_array(t1.c26, t1.c26))))OR(((((t1.c59)AND(t1.c0)))AND('OGOc')))))AND(CASE t1.c0  WHEN t1.c59 THEN t1.c26 ELSE t1.c26 END)); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15184'); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='1426007029' WHERE ((((vt0.c2)IS(vt0.c0)))-(vt0.c0)); -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
REINDEX  vt0; -- 0ms;
REINDEX; -- 4ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(0x0) WHERE CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c1)) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)) ELSE NULL END; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11898'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c1='Ee\nb', c0=NULL, c0=0xffffffffd008d90d; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (0.5408487465135896, NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1112059681 unordered noskipscan'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-923549563,3');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES ('254801121'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1'), (NULL), (x''); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (''); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43202'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('-467069897'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1197016960); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
UPDATE OR IGNORE t1 SET c59=NULL WHERE CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c59)) THEN ((t1.c59) NOT BETWEEN (t1.c0) AND (t1.c26)) ELSE ((t1.c0)+('-1908246136')) END; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1637154085,12');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (-2082859274, x'9606c462', 0Xffffffffbb7d74d8); -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT MAX((~ (t1.c0))), (((rt0.c4 IN (t1.c59, vt0.c1))) BETWEEN (TOTAL_CHANGES()) AND ((rt0.c0 IN ()))), CAST((vt0.c2 IN (vt0.c2, vt0.c0)) AS INTEGER) FROM vt0, t1;SELECT DISTINCT TRIM(DISTINCT rt0.c0 COLLATE BINARY, t0.c0) FROM t1, rt0;SELECT DISTINCT (((((((((NULL IN (rt0.c2)))OR(0.17083932016038206)))AND(x'2c90')))AND((NULL IN ()))))OR(x'')) FROM rt0, t1 WHERE ((((((((((((((x'')AND(0.629971821468638)))OR('')))OR(1223756073)))AND(-1456326392)))OR('q1')))AND('p{!k''U')) IN (((('-218916846'))<=(('+'))), (((x'')) NOT BETWEEN (('-2082859274')) AND (('Ee\nb')))))) GROUP BY (((vt0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((vt0.c0)!=(vt0.c0))))<=(((((vt0.c1))<=((vt0.c2))), ((vt0.c0) NOTNULL), CASE rt0.c2  WHEN rt0.c0 THEN t1.c26 WHEN rt0.c0 THEN t1.c26 WHEN rt0.c4 THEN t0.c0 END))), (((((((((+ (vt0.c1)))OR(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c0)))))AND(CASE t1.c26  WHEN t1.c59 THEN t1.c26 WHEN rt0.c3 THEN t1.c59 WHEN rt0.c2 THEN vt0.c0 ELSE t1.c26 END)))OR(((vt0.c1) ISNULL))), CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((t1.c26) BETWEEN (vt0.c2) AND (vt0.c2)) END;SELECT CAST(((NULL)||(vt0.c1)) AS INTEGER) FROM rt0;SELECT DISTINCT t1.c0, (NOT (rt0.c4 COLLATE BINARY)), ((((t1.c0)GLOB(x'')))=((rt0.c0 IN (vt0.c2)))) FROM rt0 WHERE ((NOT ('-535868280')));SELECT DISTINCT CUME_DIST() OVER () FROM t1, t0, rt0, vt0; -- 0ms;
SELECT (t1.c59 IN ()), ((rt0.c3 COLLATE BINARY)&(CAST(t0.c0 AS NUMERIC))), ((CAST(t1.c26 AS TEXT))IS NOT((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))) FROM t1 WHERE (((((((((('-467069897')AND(x'')))OR(NULL)))AND(NULL)))AND('nowsA')) IN ()));SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))IS(vt0.c1)), (+ (ABS(DISTINCT rt0.c3))), NULL FROM t1, t0 WHERE (TRIM('1584404339', NULL) COLLATE NOCASE);SELECT ALL CASE WHEN rt0.c3 THEN t1.c0 END COLLATE NOCASE FROM rt0, t0, vt0, t1 WHERE (0.79578025749563); -- 1ms;
SELECT ((((COALESCE(DISTINCT rt0.c1, rt0.c3))AND(GROUP_CONCAT(vt0.c2))))AND(((NULL) BETWEEN (vt0.c1) AND (rt0.c2)))) FROM t1, rt0 WHERE (CASE WHEN ((x'') IS FALSE) THEN ((((NULL)OR(x'')))OR(x'')) WHEN ((0x31cb1469)>('2140256726')) THEN '' WHEN ((0.17083932016038206)!=(-1.7976931348623157E308)) THEN (('879695522')!=(-2.082859274E9)) WHEN ((NULL)|('-535868280')) THEN ((('	&3'))>((0.5837157482946069))) WHEN CASE WHEN NULL THEN '-86298661' END THEN ((NULL)OR(NULL)) END);SELECT DISTINCT ((CASE rt0.c0  WHEN t1.c26 THEN vt0.c0 ELSE vt0.c1 END) NOTNULL), IFNULL(((rt0.c1)+(t1.c59)), (+ (rt0.c0))), (NOT (t1.c59)) FROM vt0;SELECT t0.c0 FROM t1, vt0;SELECT ALL ((CAST(t0.c0 AS BLOB)) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (((t1.c59) NOT NULL))), LAST_VALUE(((t1.c26)IS(CASE WHEN t1.c0 THEN t1.c26 END))) OVER ( GROUPS  CURRENT ROW), CAST((t1.c0 IN (t1.c59)) AS BLOB) FROM t1 WHERE (CASE WHEN NULLIF(DISTINCT 0.8052201732631487, 0.4259089908656092) THEN CAST(NULL AS REAL) WHEN 'n|tp*	' COLLATE NOCASE THEN CAST('0.8052201732631487' AS TEXT) WHEN (~ (NULL)) THEN ((x'') NOT BETWEEN ('835392617') AND (x'')) ELSE 0.5665917153844332 COLLATE RTRIM END);SELECT ALL SUM(((rt0.c2) BETWEEN (vt0.c0) AND (t1.c59))), CAST(SUM(rt0.c3) AS REAL), (((((0.17083932016038206, rt0.c4, t1.c0))=((vt0.c1, t1.c0, vt0.c1))))||(((vt0.c2) NOT NULL))) FROM t0, vt0, rt0, t1 WHERE (((x'') NOT NULL) COLLATE BINARY) ORDER BY CASE WHEN TRIM(NULL) THEN HEX(NULL) END ASC; -- 0ms;
SELECT ALL ((+ (vt0.c0)) IN ()) FROM rt0 ORDER BY (((((vt0.c1, rt0.c2, t1.c0, rt0.c0, 2.609241481684732E-4)) BETWEEN ((t1.c26, t1.c59, rt0.c1, vt0.c1, vt0.c2)) AND ((rt0.c2, t1.c26, t1.c0, rt0.c0, t0.c0)))) IS TRUE) DESC  NULLS LAST LIMIT 1521155719;SELECT ((CASE WHEN '-1876666768' THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN t1.c59 THEN t1.c26 ELSE rt0.c0 END)IS(((rt0.c4) ISNULL))) FROM vt0, rt0, t0;SELECT ALL ((vt0.c2) NOT NULL) COLLATE BINARY FROM t0, t1, rt0, vt0 INTERSECT SELECT DISTINCT CASE rt0.c0  WHEN ((rt0.c0)-(rt0.c1)) THEN ((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)) ELSE (((rt0.c2, t1.c59, rt0.c1))<=((rt0.c3, t1.c26, rt0.c0))) END FROM t0;SELECT DISTINCT (AVG(vt0.c0) IN (CAST(vt0.c2 AS REAL))) FROM vt0, rt0, t0 WHERE (0.3734573712274176); -- 0ms;
SELECT CHANGES(), ((((vt0.c0)AND(CASE WHEN x'' THEN rt0.c3 ELSE t1.c59 END)))OR(CAST('R' AS BLOB))), JULIANDAY((0.16992758489946413 IN (t1.c59)), ABS(7.8630978E8), vt0.c2, (rt0.c2 IN (t0.c0)), ((vt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1))) FROM vt0, t1, t0, rt0 WHERE ((((((x'') BETWEEN (x'') AND (0.43204697159273764))))<>((NULL COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT CASE rt0.c2 COLLATE BINARY  WHEN (((t1.c26, vt0.c0, vt0.c1)) BETWEEN ((rt0.c4, rt0.c3, '')) AND ((rt0.c1, t0.c0, rt0.c0))) THEN (NOT (vt0.c1)) END FROM rt0, t1, t0 WHERE (CAST(((('#hꊦ qE㩌7'))>=(('-1637154085'))) AS REAL));SELECT DISTINCT ((rt0.c3 COLLATE NOCASE)>=(CHANGES())), ((rt0.c3 COLLATE BINARY)<<(((vt0.c0) ISNULL))), ((((rt0.c3) BETWEEN (vt0.c1) AND (vt0.c1)))GLOB(((t1.c0) NOT NULL))) FROM t0, rt0, t1;SELECT DISTINCT CASE WHEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c2 END THEN ((t1.c26)<<(t0.c0)) END, (CAST(t1.c0 AS REAL) IN ()), ((MIN(rt0.c2))||(LIKE(t0.c0, vt0.c2))) FROM t1, vt0, rt0;SELECT COUNT(*) FROM t0, t1; -- 0ms;
SELECT ALL (((vt0.c1, NULL, rt0.c1)) BETWEEN ((((',,') IS FALSE), (NOT (rt0.c0)), ((0Xffffffff83da16f6) BETWEEN (t0.c0) AND (rt0.c0)))) AND ((('' IN ()), ((rt0.c4) NOT BETWEEN (x'') AND (rt0.c0)), CAST(t1.c0 AS BLOB)))), (((t0.c0)) NOT BETWEEN ((((rt0.c1)IS NOT(t1.c0)))) AND ((((rt0.c0) IS TRUE)))), NTH_VALUE(CAST(t0.c0 AS TEXT), ((((((((((rt0.c4)AND(1.426007029E9)))OR(t1.c0)))AND(rt0.c0)))AND(rt0.c3)))IS(CAST(t1.c59 AS NUMERIC)))) OVER () FROM rt0, vt0, t0, t1 WHERE (((((((((((((x'')OR(x'')))OR('1584404339')))OR('-0.0')))AND('')))OR(CAST('9223372036854775807' AS INTEGER))))OR(CASE WHEN NULL THEN x'' END))); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c2) AS REAL) FROM t0, t1;SELECT ALL AVG(((rt0.c4)%(rt0.c3))) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((((t1.c0)%(rt0.c4))) ISNULL), (- ('' COLLATE NOCASE)), ((CAST(rt0.c3 AS NUMERIC)) BETWEEN ('\\quSPsc') AND (((rt0.c1) NOT NULL))) FROM t1, t0, vt0 WHERE (-1.65035145E9 COLLATE NOCASE);SELECT DISTINCT CAST(((vt0.c1)*(t1.c26)) AS INTEGER), (((t0.c0)-(rt0.c0)) IN ()), ((0.6130688913812852)IS(CAST(rt0.c1 AS REAL))) FROM t1, t0;SELECT ALL ((json_type(0.79578025749563)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c2) IS TRUE))) FROM t0, t1, vt0 WHERE (((((NULL)+(-1149405992)))<>(NULL COLLATE RTRIM))); -- 0ms;
SELECT (rt0.c4 IN ((((rt0.c3)) BETWEEN ((t1.c59)) AND ((rt0.c0))), (((rt0.c0)) BETWEEN ((vt0.c2)) AND ((t0.c0))))), HEX(CAST(t1.c26 AS NUMERIC)), AVG(rt0.c0) OVER ( ORDER BY ''  NULLS LAST) FROM vt0, t1, rt0, t0; -- 0ms;
SELECT NULL FROM rt0, vt0, t0 WHERE ((0.79578025749563 COLLATE NOCASE IN ())) LIMIT -1908246136; -- 0ms;
SELECT DISTINCT RANK() OVER (), COUNT(HEX(DISTINCT t1.c0)), LEAD(NULL, (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END IN (CAST(vt0.c0 AS INTEGER))), (- (''))) OVER () FROM vt0 WHERE (CAST(CAST(x'' AS BLOB) AS NUMERIC)) GROUP BY (LIKELIHOOD(vt0.c0, 0.05767674663484179) IN ()), highlight((vt0.c2 IN (rt0.c3)), '*h/#2mJlb', t1.c0 COLLATE BINARY, ((((((((((((x'')AND(t1.c26)))OR(t1.c26)))OR(vt0.c2)))AND(t0.c0)))OR(rt0.c4)))AND(t1.c59))), CAST(CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 0.4324705783537237 THEN rt0.c4 WHEN t1.c59 THEN rt0.c1 WHEN t1.c0 THEN t0.c0 ELSE rt0.c1 END AS INTEGER) HAVING (- (((x'') BETWEEN (rt0.c4) AND (t1.c26)))) ORDER BY ((((rt0.c2)<<('q1')))LIKE(x'')) ASC, ((((rt0.c2) ISNULL))=(((vt0.c2)GLOB(t1.c59)))) ASC  NULLS FIRST;SELECT ALL CAST(((t1.c59) NOT BETWEEN (rt0.c4) AND (rt0.c2)) AS INTEGER) FROM t1, t0 WHERE ((((((NULL))>((NULL)))) BETWEEN (((('1112059681'))>((NULL)))) AND (NULL))) LIMIT -958745540;SELECT ALL ((((rt0.c0)GLOB(t1.c0)))<>((- (vt0.c2)))), TOTAL(((vt0.c0)<(rt0.c1))) OVER (), t1.c26 FROM vt0, t0, t1 WHERE (TRIM(DISTINCT CASE WHEN '-1398541953' THEN 0.13569565487035762 ELSE '' END, (('0.79578025749563')>(0.8765688493493407))));SELECT DISTINCT ((0.6656580999953581)&(t1.c59)) COLLATE NOCASE FROM vt0 NOT INDEXED, t1 WHERE ((((((0.05021838833950476 IN ()))OR(x'd617')))OR(((992066375) IS FALSE)))) ORDER BY ((((rt0.c4)OR(((rt0.c0)<<(vt0.c2)))))OR(((t0.c0) IS FALSE))) ASC;SELECT DISTINCT AVG(CAST(vt0.c0 AS NUMERIC)) OVER ( ORDER BY (((t0.c0, rt0.c3, vt0.c1, '', rt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN t1.c59 WHEN 0.030285556417067094 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c0 END, 0.7764234889706135, rt0.c4 COLLATE BINARY, ((((((((t0.c0)AND(rt0.c1)))AND(t1.c0)))OR(rt0.c0)))OR(vt0.c0)), ((rt0.c3) IS FALSE))) AND ((((t1.c59)&(t0.c0)), x'', CASE WHEN rt0.c3 THEN vt0.c0 WHEN t1.c59 THEN vt0.c2 WHEN vt0.c2 THEN t1.c59 ELSE rt0.c3 END, rt0.c1, ((vt0.c0)/(t0.c0)))))) FROM rt0, t1 GROUP BY t1.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM, (((- (rt0.c0)))%(((rt0.c4)LIKE(t1.c26)))), (((((+ (rt0.c4)))OR(((t1.c0) BETWEEN (t1.c0) AND (-1479671989)))))OR(((rt0.c0) BETWEEN (vt0.c2) AND (t0.c0)))), json_patch(((t1.c26)||('896070510')), (rt0.c0 IN ())), TRIM(DISTINCT ((t0.c0)>(rt0.c3)), ((t1.c0)%(rt0.c3))) ORDER BY IFNULL((vt0.c1 IN ()), (+ (rt0.c0)))  NULLS FIRST;SELECT t1.c26 FROM t1, t0, vt0 WHERE (((x'' COLLATE NOCASE) NOTNULL)); -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), COUNT(json_remove(t1.c26, rt0.c2)) OVER (), (((vt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((t1.c59 IN ())))) FROM rt0 WHERE (CAST((- ('_ps	ka')) AS NUMERIC));SELECT SUM((t1.c26 IN ())) FILTER(WHERE COALESCE(DISTINCT (rt0.c4 IN (rt0.c2)), (-1149405992 IN (rt0.c4, vt0.c2)))) OVER (), (NOT ((((rt0.c4, 2.140256726E9, rt0.c2))<=((t1.c59, vt0.c2, vt0.c2))))), ((CASE WHEN rt0.c3 THEN t1.c26 WHEN vt0.c2 THEN rt0.c3 WHEN t0.c0 THEN t1.c0 END) IS TRUE) FROM vt0, t0, rt0, t1 WHERE (((((((NULL)OR(0Xffffffff8fd43a4c)))OR(0.4980927221085891)))<(((0.6643072819129827) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) BETWEEN (vt0.c2) AND (CAST(vt0.c0 AS REAL))) FROM vt0, t1, t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM t0, vt0, t1, rt0; -- 0ms;
SELECT ALL COUNT(0.3263506882444841) OVER ( RANGE CAST((((rt0.c4, vt0.c2, rt0.c4))<((0Xc2cdcde, rt0.c4, t1.c59))) AS TEXT) PRECEDING EXCLUDE TIES) FROM t1, t0, rt0 INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c1))) NOT BETWEEN (rt0.c3) AND (x'a4a5')) WHERE ((~ ((((NULL, 0.5142788099844815, 0Xffffffffaca3f17f, 992066375, 0.4870928559050214)) BETWEEN (('', 0xffffffff9da1a2a6, x'', -1104258308, x'987a')) AND (('', 992066375, x'', '', x''))))));SELECT ALL rt0.c2 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)LIKE(vt0.c2 COLLATE NOCASE)), ((- (t0.c0)) IN (((x'')<=(0.5280261078557861)))), (NOT (NULL)), ((CASE t1.c59  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN ('254801121') AND (CAST(vt0.c1 AS NUMERIC))), (((vt0.c1)GLOB(t1.c26)) IN ()) FROM t0, vt0, rt0 WHERE (((((0.6076552870149837)&('ﭡ⿛,'))) NOT BETWEEN (CASE 896070510  WHEN NULL THEN 0.8058828829299344 END) AND (LIKELY(x''))));SELECT DISTINCT rt0.c2 FROM t1 WHERE (((((((((0Xffffffffbb7d74d8 COLLATE BINARY)OR((+ (1.521155719E9)))))AND(('-1149405992' IN ()))))AND((('1234094242') BETWEEN (x'') AND (NULL)))))AND(((NULL) NOT BETWEEN (0Xffffffff83da16f6) AND ('-636566340')))));SELECT ((t1.c0 IN (t0.c0)) IN (((t1.c0)<(t1.c59)))) FROM rt0, vt0, t1, t0 ORDER BY (~ (((((rt0.c2)AND(t1.c26)))OR(t0.c0)))), (~ (((NULL)IS NOT(rt0.c3)))) LIMIT -1295559444; -- 0ms;
SELECT ALL (((vt0.c0 IN ())) IS TRUE) FROM t1, rt0, t0 WHERE ((~ (((x'') BETWEEN ('0.5408487465135896') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN t1.c59 THEN rt0.c0 END)LIKE(((vt0.c1)==(rt0.c1)))) FROM vt0 GROUP BY vt0.c1;SELECT ALL LAST_VALUE(x'8a90') OVER () FROM rt0, t0; -- 1ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS TEXT) AS INTEGER) FROM vt0, t0, t1 WHERE (CAST((('lu⿛x')AND(NULL)) AS TEXT));SELECT DISTINCT ((NULL) BETWEEN (((vt0.c1) IS FALSE)) AND (((t1.c59)LIKE(rt0.c1)))), (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(t1.c59)))OR(t1.c0)) IN (CASE t1.c59  WHEN t0.c0 THEN t1.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE t1.c0 END, NULL)), CAST(((rt0.c3)||(vt0.c1)) AS INTEGER) FROM t0, vt0, rt0, t1; -- 0ms;
SELECT DISTINCT (((((t1.c0))<=((vt0.c1))))>(0.5142788099844815)) FROM t1, rt0, vt0, t0 WHERE ((((('_<') NOT BETWEEN (0.9833798832566149) AND (0.06820835203610442)))*(((-9.23549563E8) NOT NULL)))); -- 0ms;
SELECT HEX(DISTINCT vt0.c2) COLLATE RTRIM FROM vt0, rt0, t1; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((t1.c59)) AND ((((vt0.c2)+(t1.c59))))) FROM t0, rt0;SELECT CAST(t1.c0 AS TEXT) FROM rt0, t0, t1, vt0; -- 0ms;
SELECT ALL (((((-626154094)|(rt0.c0))))!=((rt0.c1 COLLATE RTRIM))) FROM t0, rt0, vt0, t1; -- 0ms;
SELECT DISTINCT ((LIKELY(DISTINCT 0.4980927221085891)) NOT BETWEEN ((((vt0.c0, rt0.c0, 0.43204697159273764))>((rt0.c3, rt0.c4, rt0.c1)))) AND (((((rt0.c1)OR(t1.c26)))OR(rt0.c1)))), ((((x'9e08')AND(TRIM(0.7168703781533189))))AND(LENGTH(vt0.c2))), CASE ((rt0.c2)GLOB(rt0.c4))  WHEN t0.c0 THEN ((NULL)>=(rt0.c3)) ELSE UPPER(t1.c0) END FROM vt0, t0, rt0 GROUP BY ((((((rt0.c1)AND(t1.c26)))AND(rt0.c2))) ISNULL), ((((t1.c59 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c0)))))AND(CASE t1.c26  WHEN t1.c59 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 ELSE t0.c0 END)), (((vt0.c2)LIKE(rt0.c3)) IN ()) HAVING ((((rt0.c4))=((vt0.c2))) IN ());SELECT DISTINCT ((ABS(DISTINCT t1.c0)) IS FALSE) FROM vt0, t1; -- 0ms;
SELECT ALL (((TOTAL(t1.c26)))<=(((- (vt0.c1))))), ((((vt0.c1)<('wn>?F삅~s')))>>(t1.c59 COLLATE RTRIM)), ((CAST(t1.c26 AS BLOB))%(((((((((t1.c59)AND(t1.c0)))OR(NULL)))AND(rt0.c2)))OR(vt0.c1)))), TYPEOF(LIKELY(vt0.c2)), CASE WHEN (((vt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) THEN ((((t0.c0)OR(rt0.c4)))OR(rt0.c3)) ELSE MIN(t1.c26) END FROM vt0, t0 WHERE (((('896070510')) NOT BETWEEN ((CAST(0.8480461168152018 AS INTEGER))) AND (((((('835392617')OR(NULL)))OR(NULL))))));SELECT rtreenode((((t0.c0))<>((rt0.c4))), CASE rt0.c4  WHEN vt0.c2 THEN rt0.c2 END), NTH_VALUE(CASE json_extract(vt0.c2, t1.c26)  WHEN ((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE IFNULL(rt0.c1, rt0.c0) END, CAST(t1.c59 COLLATE BINARY AS REAL)) OVER ( ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))*(vt0.c2)) ASC  NULLS FIRST), CAST(((t1.c0)||(rt0.c1)) AS NUMERIC) FROM vt0, t1, rt0 WHERE (((((x'')%('	m3'))) NOT NULL)) LIMIT 786309780 OFFSET 1184193390;SELECT DISTINCT t0.c0 FROM rt0, vt0 WHERE (((0.0699665964201045 COLLATE RTRIM)GLOB(CASE WHEN '軩YF' THEN 0.10571537316328805 WHEN NULL THEN 0.24651400425236192 WHEN x'' THEN 0.41035562148828986 ELSE '' END)));SELECT ALL ((CASE t1.c59  WHEN rt0.c2 THEN vt0.c1 END)+(((t1.c26) NOT NULL))), (- (vt0.c1 COLLATE NOCASE)), t1.c26 FROM rt0, t0 WHERE ((~ (('()' IN ()))));SELECT ALL COUNT(((vt0.c2) IS TRUE)) FILTER(WHERE (vt0.c0 COLLATE NOCASE IN ())) OVER ( ORDER BY ABS(DISTINCT ((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))  NULLS FIRST, CASE WHEN ((vt0.c0)+(rt0.c2)) THEN 2.609241481684732E-4 ELSE ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1)) END) FROM rt0, vt0, t1;SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY CASE WHEN json_valid(rt0.c4) THEN x'd7bf' END ASC, CASE ((((t1.c26)AND(t1.c0)))OR(rt0.c2))  WHEN CASE WHEN rt0.c0 THEN vt0.c2 WHEN NULL THEN 0.9417469262939824 WHEN rt0.c1 THEN t0.c0 END THEN ((rt0.c3)OR(t1.c26)) ELSE ((t1.c59) NOT BETWEEN (rt0.c2) AND (t1.c0)) END  NULLS FIRST) FROM t1, vt0, t0, rt0; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1; -- 1ms;
SELECT DISTINCT CAST((+ (rt0.c4)) AS INTEGER), ((((((t1.c0)LIKE(rt0.c2)))OR((- (t1.c59)))))AND(MIN(rt0.c1))), ((CAST(t1.c0 AS BLOB))>(LOWER(DISTINCT rt0.c3))) FROM rt0 WHERE ((COALESCE(x'', ']Q', NULL, NULL) IN ())) GROUP BY (+ (x'ca51f3a4cddf')), (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND (('Zi*'))))LIKE(TYPEOF(t1.c59))), ((COALESCE(vt0.c2, vt0.c2, rt0.c3, rt0.c3))<((t0.c0 IN ()))), ((((((((UPPER(DISTINCT rt0.c1))AND(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END)))AND(CASE WHEN rt0.c1 THEN vt0.c1 END)))OR(CAST(rt0.c1 AS TEXT))))AND(CAST(rt0.c1 AS NUMERIC))), CAST(((rt0.c0)>>(vt0.c2)) AS REAL);SELECT ALL TIME(MIN(rt0.c4), CAST(rt0.c1 AS BLOB), vt0.c0 COLLATE BINARY), CAST(SQLITE_COMPILEOPTION_USED(rt0.c1) AS TEXT), ((-1922649710) BETWEEN (CASE WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c2 THEN NULL ELSE rt0.c4 END) AND (((vt0.c1)IS(rt0.c3)))) FROM rt0, t1, t0 WHERE ((((('0.41035562148828986')*('-804726515')))/(CASE WHEN 0x25d21dfe THEN ',,' ELSE '0.3263506882444841' END)));SELECT DISTINCT SUM((((rt0.c3))!=((vt0.c1)))) FROM t0, t1, rt0, vt0 GROUP BY rt0.c0 LIMIT 1430130551 OFFSET 1377838389; -- 0ms;
SELECT DISTINCT x'', ((((t1.c0) NOT NULL))>>(t0.c0)), TRIM(MAX(rt0.c4)) FROM t0, t1 WHERE (CAST(CASE WHEN NULL THEN x'' ELSE 0.8594555715722326 END AS TEXT));SELECT ((((x'')OR((- (vt0.c0)))))OR(MAX(rt0.c3))), IFNULL(DISTINCT rt0.c4, ((rt0.c2)OR(1003305179))), LEAD((((''))<(((rt0.c0 IN ('-775487624'))))), ((((0X76ef73a1)&(rt0.c2)))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN '-9223372036854775808' WHEN rt0.c2 THEN vt0.c1 END)), (((NOT (vt0.c2))) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt0.c1 THEN 0.9469729921298676 END))) OVER () FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT CASE ((((t0.c0)AND(vt0.c0)))OR(t1.c26))  WHEN CAST(rt0.c3 AS REAL) THEN 0.3734573712274176 ELSE TIME(rt0.c3, rt0.c1, rt0.c4) END, ((rt0.c3 IN ()) IN ()), IFNULL(rt0.c0 COLLATE RTRIM, rt0.c0 COLLATE RTRIM) FROM t1, t0, vt0 WHERE ((NOT (x''))) LIMIT -923549563;SELECT DISTINCT (((t1.c26)) NOT BETWEEN (((((t1.c59))<>((t1.c0))))) AND ((TOTAL(rt0.c0)))) FROM vt0, t1, t0, rt0 GROUP BY vt0.c0, CAST(((t1.c0) NOT BETWEEN ('-831813775') AND (rt0.c1)) AS REAL), ((t1.c59)LIKE(x'0c8f')) COLLATE BINARY HAVING json_extract('*H/#2MJLB', (rt0.c0 IN ()));SELECT DISTINCT ((((rt0.c1)%(vt0.c2)))-(((((((((-1450925089)OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))OR(vt0.c0)))) FROM vt0 GROUP BY ((~ (t1.c0)) IN (((t1.c26) IS FALSE))) HAVING ((((CASE NULL  WHEN x'7c7f' THEN t1.c26 WHEN 'GqIy-Yv' THEN rt0.c3 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END)OR(((((t1.c0)AND(t1.c26)))AND(t1.c59)))))AND((((rt0.c4, rt0.c4, vt0.c2, t0.c0, 'D', 'YE4氷JCᐷ', rt0.c1))<=((vt0.c2, vt0.c0, 0.7215047965831813, rt0.c2, t1.c26, t0.c0, '400288792')))));SELECT DISTINCT ((((((vt0.c0)AND(t0.c0)))OR(rt0.c4))) ISNULL) FROM t1, rt0, t0 WHERE (NULL) LIMIT -1398541953 OFFSET 835392617;SELECT DISTINCT ((((((((((rt0.c4)/(t1.c26)))OR((('')LIKE(vt0.c0)))))AND(CASE WHEN t0.c0 THEN t1.c26 WHEN rt0.c2 THEN t1.c26 WHEN vt0.c0 THEN vt0.c1 END)))AND(CAST(t1.c59 AS INTEGER))))OR(((rt0.c3) NOT BETWEEN (-5.3586828E8) AND (t1.c0)))), CAST(((vt0.c2)+(rt0.c0)) AS TEXT), ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))<<(rt0.c0 COLLATE BINARY)) FROM rt0, vt0 WHERE ((NOT (((((((((0Xffffffff99a78fd0)OR('0.5408487465135896')))AND(0.975718175076551)))OR(NULL)))OR(-1))))) GROUP BY ((((rt0.c0))>=((rt0.c0))) IN ((((t1.c0))!=((rt0.c3))))) HAVING rt0.c2;SELECT DISTINCT rt0.c1 FROM t1, rt0, t0, vt0; -- 0ms;
SELECT ALL NULLIF(((vt0.c1)+(t1.c0)), rt0.c1) FROM rt0, t1, vt0; -- 0ms;
SELECT DISTINCT MAX(vt0.c1) FROM t0, t1;SELECT LAG(x'', LOWER(CASE WHEN vt0.c2 THEN t1.c59 ELSE vt0.c0 END), ((CASE WHEN t1.c0 THEN t1.c26 END) ISNULL)) OVER () FROM vt0, t1; -- 0ms;
SELECT ((((AVG(t1.c0))AND((vt0.c1 IN ()))))AND(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3)))) FROM t1, vt0, rt0, t0 LIMIT 715685319; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c3) NOT BETWEEN (t1.c0) AND (t1.c26)))) FROM vt0, t0, t1;SELECT (+ ((t1.c0 IN ()))), vt0.c0, vt0.c2 FROM rt0, t0, t1;SELECT x'', COUNT(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE) OVER (), RANK() OVER () FROM rt0, vt0, t1 WHERE (CAST((('-1569763006')=(0.5335306026775093)) AS INTEGER)); -- 0ms;
SELECT ALL TOTAL((((vt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c59))) COLLATE RTRIM) OVER () FROM vt0, t1 WHERE (((((((NULL) NOT NULL))OR(((0.04676331105000098)>=(-1.92264971E9)))))OR(((1.426007029E9) IS TRUE)))) GROUP BY CAST(t1.c59 AS REAL) COLLATE NOCASE;SELECT ABS(DISTINCT (((vt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))), TOTAL('2140256726') OVER (), vt0.c2 FROM t1, t0, rt0, vt0; -- 1ms;
SELECT DISTINCT (NOT (IFNULL(t0.c0, rt0.c2))) FROM vt0, rt0;SELECT DISTINCT (((((~ (rt0.c1)))AND(CAST(t1.c0 AS TEXT))))OR(t0.c0)) FROM vt0, t1, rt0, t0 WHERE (DATETIME(CASE x''  WHEN '-90869074' THEN 0.24325993728241857 ELSE 0.5022879633159871 END, ((x'0a64')!=(-2.082859274E9)), (('⿛^&aT/bd') BETWEEN (0.8058828829299344) AND (x'')))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)OR(rt0.c4)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)))==(CAST(t1.c0 AS BLOB))) FROM t0;SELECT PRINTF(t1.c0) COLLATE NOCASE, (((CAST(rt0.c0 AS TEXT), ((t1.c26) NOT NULL), ((((t1.c0)OR(vt0.c1)))OR(t0.c0))))>=(((((t1.c26))!=((t0.c0))), COUNT(*), 0.04676331105000098))), TOTAL(((t1.c59) IS TRUE)) FROM t0, rt0, t1, vt0 WHERE ((((((0.7120228154832718)) NOT BETWEEN ((NULL)) AND ((NULL)))) IS FALSE)); -- 0ms;
SELECT DISTINCT (- ((((t1.c59)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c0))))) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c1)) NOTNULL), CASE WHEN rt0.c3 COLLATE BINARY THEN (- (vt0.c2)) ELSE rt0.c4 END, CASE WHEN ((((t1.c0)OR(vt0.c2)))OR(t1.c0)) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c26))) END, NULLIF(DISTINCT vt0.c1 COLLATE BINARY, t1.c59 COLLATE NOCASE), ((((CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c2 THEN t1.c59 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END)AND(((t1.c59)>=(vt0.c1)))))AND(((t1.c0) IS FALSE))) FROM t0, rt0 WHERE ('');SELECT DISTINCT COUNT(*) OVER () FROM t1; -- 0ms;
SELECT ALL AVG((((rt0.c4, rt0.c4, rt0.c4, 0.33634753268233786, 0.32177223346273953))<((rt0.c4, vt0.c1, t1.c59, rt0.c4, vt0.c2)))) OVER () FROM t0, vt0, rt0, t1 LIMIT 879695522 OFFSET 1521155719; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN t1.c26 ELSE t1.c0 END COLLATE RTRIM FROM rt0, vt0, t1, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)IS NOT(t1.c0)))AND(t1.c0 COLLATE NOCASE)) FROM rt0, t1; -- 0ms;
SELECT ALL CASE (t1.c59 IN (rt0.c0))  WHEN CASE WHEN vt0.c2 THEN rt0.c2 ELSE t1.c0 END THEN ((vt0.c1)>(rt0.c1)) WHEN ((t1.c26)>=('')) THEN (rt0.c3 IN (vt0.c2)) WHEN vt0.c2 COLLATE BINARY THEN rt0.c1 COLLATE BINARY ELSE CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN '7蝑' WHEN vt0.c0 THEN '' ELSE rt0.c3 END END FROM rt0, vt0, t1 WHERE (NULL) ORDER BY ((((rt0.c1)%(vt0.c2))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE t1.c0 END) AND (CASE WHEN t1.c59 THEN rt0.c2 WHEN vt0.c2 THEN rt0.c3 WHEN vt0.c1 THEN vt0.c2 END)) ASC, ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 END)IS NOT(((t1.c0) BETWEEN (rt0.c1) AND (t0.c0)))) ASC  NULLS FIRST LIMIT 478922325 OFFSET 1995404193;SELECT ALL (((vt0.c0 IN (rt0.c4)))GLOB(NULLIF('Vp\r', x''))) FROM t1, t0;SELECT DISTINCT NULL FROM t1 LIMIT -262572438; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS TEXT) COLLATE BINARY FROM t0, rt0, vt0; -- 0ms;
SELECT ALL AVG(((rt0.c2)IS NOT(t1.c59))) OVER ( ORDER BY CAST(vt0.c2 AS NUMERIC) COLLATE NOCASE  NULLS LAST), GROUP_CONCAT(((rt0.c1)*(t1.c26))) OVER (), CAST(((rt0.c3) IS FALSE) AS BLOB) FROM vt0, rt0, t1, t0; -- 2ms;
SELECT (vt0.c1 IN (t1.c26)) COLLATE NOCASE FROM t1 NATURAL JOIN rt0;SELECT DISTINCT (NOT (TOTAL_CHANGES())) FROM t0, vt0 LIMIT -636566340; -- 0ms;
SELECT DISTINCT t1.c26 COLLATE BINARY FROM vt0, t0, rt0, t1 WHERE (json_valid(((0.17159566532681503)<>('k荒n玡M')))); -- 0ms;
SELECT ((((((rt0.c0)GLOB(rt0.c0)))AND(t1.c59)))AND(CAST(rt0.c1 AS BLOB))) FROM t0 WHERE (((((((((((((((((((((NULL)OR(0.4324705783537237)))AND(x'9a3f')))OR(NULL)))AND(0.3723123222377809)))AND('-1398541953')))OR('324611383')))AND(((-1.054905289E9) ISNULL))))OR(CAST(0X54ff23f5 AS NUMERIC))))OR(CASE WHEN '8Re㙛nh' THEN 554409918 ELSE 0.7215047965831813 END)))AND((('')<(x'05c907e3')))));SELECT DISTINCT DENSE_RANK() OVER () FROM rt0 WHERE (((NULL COLLATE NOCASE)>((~ (x''))))); -- 0ms;
SELECT DISTINCT ((((0.21100580282645975)OR(((vt0.c0)LIKE(vt0.c1)))))OR(UNICODE(t1.c0))) FROM t1, vt0, t0 WHERE (CASE '-549728919' COLLATE RTRIM  WHEN json('1682632946') THEN ((((((((x'')OR('DR')))AND(0xffffffffab2bca61)))AND('1995404193')))AND(x'048c')) END); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT ((t1.c26) BETWEEN (rt0.c0) AND (rt0.c1)), 0.4128037292476112) FROM rt0, t0, vt0 WHERE ((((0Xfffffffff9800eb4)||('-1456326392')) IN ()));SELECT (~ (LOWER(DISTINCT vt0.c2))) FROM t0, t1, rt0, vt0 WHERE ((((((5.54409918E8, x'', 0.9567631964859413)) NOT BETWEEN ((0.4720916298617125, -8.04726515E8, x'')) AND ((NULL, 0.8038306836913345, 0x49258751))))|(((0.25197413502216015) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)AND(8.537292827690557E-4)))AND(rt0.c2)))OR('1112059681')))AND(t1.c26))) NOT BETWEEN (CASE vt0.c2  WHEN t1.c0 THEN NULL ELSE t1.c26 END) AND (rt0.c0)) FROM t0 WHERE (((((NULL)OR(NULL)))AND(x'')) COLLATE BINARY);SELECT ALL UNLIKELY(((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0))), MAX((((('1710749484')OR(rt0.c2)))OR(t1.c59))), ((((((((((((vt0.c2)OR('1521088576')))AND(vt0.c2)))OR(0.4448560433540335)))OR(t1.c0)))AND(((t1.c59) BETWEEN (vt0.c2) AND (rt0.c0)))))OR(CAST(vt0.c1 AS NUMERIC))), CASE (((t1.c59))<((t1.c26)))  WHEN (~ (vt0.c2)) THEN ((t1.c26) IS FALSE) WHEN ((t1.c59)|(rt0.c1)) THEN (vt0.c1 IN ()) WHEN COALESCE(rt0.c3, rt0.c2) THEN rt0.c2 ELSE (((vt0.c2))<((rt0.c1))) END, ROW_NUMBER() OVER () FROM vt0, rt0, t1; -- 0ms;
SELECT ((((x'e652')+(vt0.c2)))GLOB(t1.c59)), x'', (rt0.c1 IN ()), CASE WHEN LOWER(vt0.c2) THEN CASE vt0.c1  WHEN rt0.c3 THEN vt0.c0 END ELSE NULL END, ((MIN('LPZHY,C+'))LIKE(((((((((vt0.c1)AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c3)))OR(rt0.c3)))), CAST(((t0.c0) BETWEEN (t1.c59) AND (rt0.c1)) AS REAL), ((((rt0.c1)*(74739512)))OR((((vt0.c1, rt0.c1, rt0.c4))<((vt0.c1, t1.c59, vt0.c2))))) FROM t0, rt0, t1, vt0 WHERE (json_quote(CASE WHEN 0.8883325336572124 THEN NULL END)) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c1) IS TRUE))) AND (((NOT (rt0.c0))))) DESC; -- 0ms;
SELECT DISTINCT ((((t0.c0))<>((t1.c59))) IN (CAST(rt0.c4 AS INTEGER))), (((((((((((((vt0.c0)OR(rt0.c3)))AND(t1.c26)))OR(rt0.c2)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c1)) IN ()), t1.c26, TRIM(DISTINCT QUOTE(t1.c59)), 1521155719 FROM rt0, vt0, t1, t0; -- 0ms;
SELECT (((('f.ᕅDz{^*V')OR('{Jo0K')))OR(SUM(t1.c26))) FROM vt0, rt0, t0, t1; -- 0ms;
SELECT DISTINCT (((('1e500')|(t1.c0))) BETWEEN (NULL) AND (CASE WHEN t1.c26 THEN vt0.c0 WHEN t1.c26 THEN t0.c0 WHEN t1.c59 THEN rt0.c3 END)) FROM vt0 NOT INDEXED, t1, t0 WHERE (CAST(x'' COLLATE BINARY AS INTEGER));SELECT DISTINCT ((((rt0.c2)|(vt0.c0)))-(((rt0.c2)>=(t1.c0)))) FROM t0, vt0, rt0;SELECT SUM(COUNT(t1.c0)) FROM t1, vt0;SELECT ALL (((((t1.c26)<<(rt0.c3)), ((vt0.c2) NOT BETWEEN (t1.c0) AND (NULL)), (- (rt0.c3))))<=(('9R|G!fm', ((vt0.c2)>=(rt0.c3)), (vt0.c2 IN (vt0.c2, vt0.c1))))) FROM t1, rt0 WHERE (((((x'') ISNULL)) NOT BETWEEN ((('0.4720916298617125')AND(x'fa61'))) AND (CASE 195539352  WHEN '' THEN 0.9715908577685493 END)));SELECT (((t1.c59 IN ())) BETWEEN ('835392617') AND (MIN(t1.c0))) FROM t1, vt0, t0 LIMIT 1112059681; -- 0ms;
SELECT DISTINCT CASE WHEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c4)) THEN (((rt0.c0))>((vt0.c0))) END FROM vt0, rt0, t1 WHERE ((+ ((~ (0X59396102))))) GROUP BY ((t1.c0 COLLATE NOCASE) NOTNULL) HAVING rt0.c2 LIMIT -1908246136; -- 0ms;
SELECT DISTINCT COUNT(((0.7933475351308797) NOT BETWEEN (t1.c26) AND (rt0.c2))) OVER (), ((((((rt0.c4)OR(t1.c0)))AND(x'3f30'))) NOT NULL), ((vt0.c0)<(vt0.c2)) COLLATE RTRIM FROM t0, rt0, t1, vt0; -- 0ms;
SELECT ALL TIME((+ (rt0.c4)), (NOT (vt0.c1)), (rt0.c0 IN ())) FROM vt0 WHERE (CASE IFNULL('', 0.4324705783537237)  WHEN (((0.7717529195377655))=((x''))) THEN ((x'')GLOB('0.10571537316328805')) END);SELECT ALL CAST(((vt0.c1)GLOB(t0.c0)) AS REAL) FROM vt0, rt0, t0; -- 0ms;
SELECT ((((x'' IN ()), ((rt0.c4)%(rt0.c3)), rt0.c3))>=((rt0.c0, '875687803', vt0.c1 COLLATE BINARY))) FROM rt0 WHERE (((((x'5639' COLLATE RTRIM)OR((+ (NULL)))))OR((('睕 !') IS FALSE)))) GROUP BY CASE NULL COLLATE NOCASE  WHEN 0.12041385148950601 THEN t1.c0 COLLATE BINARY END HAVING t1.c0;SELECT DISTINCT COUNT(((rt0.c4) BETWEEN (t0.c0) AND (t1.c26))), (((rt0.c4)>=(t1.c0)) IN ()), ((t1.c0) ISNULL) COLLATE NOCASE FROM t0 WHERE (0Xffffffff9137fc21);SELECT DISTINCT SUM(t1.c0) FROM t0 WHERE (((('#hꊦ qe㩌7', '1496932610', '-2125179022')) NOT BETWEEN ((TRIM(DISTINCT 'vp\r', x''), ((((NULL)OR('-923549563')))OR(NULL)), -6.3656634E8)) AND ((CASE x'4507ffb2'  WHEN '835392617' THEN 0.03076378480768005 WHEN '0.9567631964859413' THEN NULL WHEN 1728714053 THEN NULL ELSE -9.5874554E8 END, ((0.5253920039347214) NOT NULL), ((((0.1382245059327285)AND(x'')))AND('-1693638689'))))));SELECT TOTAL(NULL) FROM t1, rt0, t0, vt0; -- 0ms;
SELECT ALL (rt0.c2 IN ()) COLLATE RTRIM FROM vt0, rt0, t0; -- 0ms;
SELECT (((((0.24651400425236192, t0.c0, t0.c0)) NOT BETWEEN ((t1.c0, rt0.c4, vt0.c0)) AND ((rt0.c0, t1.c26, t1.c26))))>=(TOTAL(rt0.c0))), ((((((t1.c59) BETWEEN (t1.c59) AND (vt0.c1)))AND(RTRIM(rt0.c2))))AND(COALESCE(DISTINCT t0.c0, vt0.c1, NULL, vt0.c1, t0.c0, t1.c59))), TRIM(DISTINCT ((((t1.c26)OR(vt0.c0)))OR(rt0.c4))) FROM vt0, rt0, t1 WHERE (((((((((x'')AND((((x''))<>(('1496932610'))))))AND(CAST('R' AS REAL))))AND(((((x'')AND(-1295559444)))OR('-355771614')))))AND(QUOTE('-1717071920'))));SELECT ALL CASE WHEN (rt0.c3 IN ()) THEN t1.c59 COLLATE BINARY WHEN (((t0.c0, rt0.c3, t1.c59))<((rt0.c3, rt0.c2, rt0.c4))) THEN '1426007029' WHEN ((t1.c59)IS NOT(vt0.c2)) THEN t1.c0 COLLATE BINARY ELSE CASE WHEN t1.c59 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN t0.c0 THEN vt0.c2 END END, x'', ((((rt0.c2) ISNULL)) NOT NULL) FROM t1 NOT INDEXED WHERE ((((('Ee\nb')<(x'15dde676')))LIKE(('' IN (NULL, x'')))));SELECT DISTINCT (((NOT (x'3f77'))) ISNULL), (~ (((((((((rt0.c4)OR(t1.c0)))OR(t1.c26)))AND(t1.c0)))AND(vt0.c2)))), DENSE_RANK() OVER () FROM rt0, vt0 ORDER BY TRIM(CAST(t1.c26 AS BLOB));SELECT SQLITE_SOURCE_ID(), ((x'd05a')|((((t1.c59))>=((vt0.c1))))), ((((((((rt0.c3)AND(t0.c0)))OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY FROM vt0, rt0 ORDER BY TRIM(DISTINCT (((t1.c59))>=((vt0.c2))))  NULLS FIRST, (((((vt0.c0))>=((rt0.c3)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE WHEN rt0.c3 THEN rt0.c0 END));SELECT DISTINCT NTILE((((~ (t0.c0))) ISNULL)) OVER (), ABS(((rt0.c2)/(rt0.c0))), ((((t0.c0)<<(rt0.c3))) NOTNULL) FROM t0 WHERE (CAST((+ (x'')) AS INTEGER));SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND ('\ -')) AS NUMERIC), CASE WHEN SUM(vt0.c2) THEN (((t1.c59)) NOT BETWEEN ((rt0.c4)) AND ((vt0.c0))) WHEN STRFTIME(vt0.c2, rt0.c1, NULL) THEN x'' WHEN (t1.c26 IN ()) THEN t1.c59 COLLATE NOCASE END, t0.c0 COLLATE NOCASE FROM rt0 WHERE ((((0.5142788099844815, '1043561093', '0.1382245059327285')) BETWEEN (('-1741898826' COLLATE NOCASE, '*[', (~ (x'')))) AND ((0x3bcd38db, ((('TTꁃg좤e_9v', x'', x'')) BETWEEN ((0x2fba124a, '', '-415375266')) AND ((x'5a57', 0.41143807483360684, NULL))), ((x'674c62ed')>(x'bb7c')))))) GROUP BY ((((((((rt0.c1)AND(((rt0.c1) BETWEEN (t1.c0) AND (vt0.c0)))))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(t1.c0 COLLATE RTRIM)), 0.3508022751988866, CAST(rt0.c0 AS TEXT) HAVING (((rt0.c4 IN (rt0.c2)))<((~ (rt0.c1))));SELECT DISTINCT load_extension(((((rt0.c0)OR(rt0.c4)))OR(t1.c0)), CAST(vt0.c1 AS INTEGER)), COUNT(*) OVER ( ROWS BETWEEN  CURRENT ROW AND ((TRIM(rt0.c4)) NOT BETWEEN (((rt0.c0) IS TRUE)) AND ((~ (rt0.c4)))) PRECEDING EXCLUDE TIES), COUNT(MAX(x'06045dad')) FROM vt0 WHERE ((((((((('634527230' COLLATE RTRIM)OR((0.9167378108409798 IN ()))))OR(((-2.18916846E8) BETWEEN (-13946171) AND (0x346f16a2)))))AND(TRIM(0x210b9fbe))))AND(((x'')<=('')))));SELECT ALL COUNT(*) OVER () FROM vt0, t0, t1 LIMIT -1741898826 OFFSET -831813775; -- 0ms;
SELECT CASE WHEN CASE WHEN rt0.c0 THEN vt0.c2 ELSE vt0.c2 END THEN (rt0.c4 IN ()) END, (((vt0.c0 IN ()))LIKE(vt0.c2 COLLATE BINARY)), UNLIKELY(rt0.c1) COLLATE RTRIM FROM t1, t0, vt0, rt0; -- 0ms;
SELECT ((((rt0.c0) IS FALSE)) NOTNULL), COUNT(((t0.c0)OR(rt0.c0)) COLLATE NOCASE), ((((rt0.c2)IS NOT(vt0.c1)))<(LTRIM(rt0.c2))) FROM t1, rt0 NOT INDEXED, vt0, t0 EXCEPT SELECT DISTINCT CASE WHEN (+ (rt0.c3)) THEN CAST(t1.c59 AS REAL) ELSE t0.c0 COLLATE NOCASE END, ((((t1.c0))>=((rt0.c4))) IN (SUM(t1.c26))), t1.c59 FROM rt0, t0, t1, vt0; -- 1ms;
SELECT ((t1.c26)<(t1.c0)) COLLATE BINARY FROM t0;SELECT (+ (CASE t1.c59  WHEN rt0.c0 THEN rt0.c1 END)), (~ (t0.c0 COLLATE BINARY)), x'' FROM rt0, vt0 WHERE (CASE json_extract(x'6b44', -6.3656634E8, -1.858601951E9, x'')  WHEN (('1669124897') BETWEEN (790610465) AND ('㤈놘z㩌(U[')) THEN ((x'')LIKE('879695522')) ELSE json_array_length(NULL, -990493632) END);SELECT DISTINCT rt0.c1, (((((t1.c59))!=((vt0.c2))))GLOB(NULL COLLATE RTRIM)), CASE CASE WHEN t1.c0 THEN t1.c0 END  WHEN ((rt0.c0)IS(t1.c59)) THEN rt0.c2 ELSE ((rt0.c3) BETWEEN (vt0.c2) AND (t0.c0)) END FROM vt0, t0 WHERE ((- ((-2018633756 IN ()))));SELECT DISTINCT ((AVG(t1.c59)) BETWEEN (((t1.c0) NOT NULL)) AND (COUNT(*))) FROM vt0, rt0, t1, t0 WHERE ((- (0.8953058341108345)) COLLATE RTRIM) LIMIT -1858601951 OFFSET -1174240594; -- 0ms;
SELECT ALL (((vt0.c0))<((vt0.c0))) COLLATE NOCASE, COUNT(*), CAST(((((vt0.c1)AND(vt0.c0)))OR(t1.c59)) AS REAL) FROM t0;SELECT ALL ((vt0.c2)>(0.676286236401323 COLLATE BINARY)) FROM vt0, rt0, t0, t1 WHERE (PRINTF(('-1650351450' IN (0X3bece8be)))); -- 1ms;
SELECT DISTINCT rt0.c0 FROM t1;SELECT DISTINCT ((((NULL)IS NOT(vt0.c0))) IS FALSE), (- ((NOT (t1.c0)))), CASE WHEN ((((rt0.c4)AND(rt0.c2)))AND(t0.c0)) THEN 'V}' WHEN ((t1.c26) NOT BETWEEN (rt0.c2) AND (vt0.c2)) THEN CASE t1.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN NULL WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN '875924965' THEN CAST(vt0.c0 AS TEXT) WHEN (+ (t0.c0)) THEN json_array_length(rt0.c3) WHEN rt0.c4 THEN (rt0.c3 IN ()) END FROM t0;SELECT rt0.c4 FROM vt0, t0, t1, rt0 LIMIT -855970003 OFFSET 1743062647 INTERSECT SELECT DISTINCT ((GROUP_CONCAT(rt0.c0)) NOT BETWEEN ((t1.c26 IN (x'', t1.c0))) AND (((rt0.c1) IS FALSE))) FROM t1, vt0, rt0;SELECT ALL (~ (((((vt0.c0)AND(t1.c0)))OR(rt0.c4)))) FROM t0, vt0, t1, rt0; -- 0ms;
SELECT ALL (((vt0.c1, rt0.c4, t0.c0, rt0.c1, vt0.c2)) BETWEEN ((SUM(t0.c0), TOTAL(vt0.c1), (rt0.c1 IN ()), rt0.c1 COLLATE NOCASE, ((vt0.c2)<<(t1.c59)))) AND ((((rt0.c3) IS TRUE), CASE rt0.c3  WHEN vt0.c1 THEN 'bve}NzT' WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN t1.c0 ELSE t1.c26 END, HEX(DISTINCT t1.c26), rt0.c1, (((rt0.c1, vt0.c1, t1.c59))>=((t1.c26, rt0.c0, rt0.c0)))))), -9.23549563E8, rt0.c0 FROM vt0, rt0 WHERE (CASE WHEN ((NULL) BETWEEN (x'9abbb4bade6c') AND (NULL)) THEN (('-1793121792')!=(0X2ede2294)) END);SELECT DISTINCT CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c26)) AS REAL) FROM t0, vt0 WHERE ((+ ((((0.06563005561950774, 0.985423115210358, '', 0.8129347972180685, x''))>=((x'be80', x'', -2.018633756E9, '0.5022879633159871', 0.22354894795607338)))))) ORDER BY (((('듊Wm蝑j%(' COLLATE BINARY)AND((((vt0.c0))<>(('195539352'))))))AND(LIKELIHOOD(vt0.c2, 0.765704790273553)))  NULLS FIRST;SELECT (~ (COUNT(*))), t1.c59, (((t1.c26, rt0.c1, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN 8.75687803E8 WHEN vt0.c1 THEN t1.c59 WHEN t1.c59 THEN rt0.c4 END, ((vt0.c2)AND(t1.c26)), ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c2)))) AND ((CAST(t1.c0 AS INTEGER), ((((rt0.c3)OR(vt0.c0)))OR(rt0.c2)), ((t1.c0)AND(t1.c26))))), ((MIN(t0.c0)) BETWEEN (((((((((((((rt0.c4)OR(t1.c59)))AND(t1.c26)))OR(rt0.c4)))OR(t0.c0)))AND(rt0.c0)))OR(t1.c26))) AND ((NOT (NULL)))), (rt0.c3 COLLATE RTRIM IN (rt0.c4 COLLATE RTRIM)), ((CAST(rt0.c0 AS TEXT))>=(rt0.c4 COLLATE NOCASE)), IFNULL(CAST(t1.c59 AS TEXT), (+ (rt0.c0))) FROM rt0 GROUP BY ((((t1.c26)AND(((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(rt0.c2 COLLATE NOCASE));SELECT DISTINCT (- (rt0.c0)) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT ((((0.40920018891389687)AND(rt0.c0))) NOT BETWEEN ((- (rt0.c3))) AND (CASE t1.c59  WHEN rt0.c4 THEN vt0.c0 END)) FROM rt0, t1, t0, vt0 WHERE (CAST(0.7431728352415101 AS REAL) COLLATE BINARY) ORDER BY rt0.c1  NULLS FIRST, ((((t0.c0) IS FALSE))>=(((((((((((((rt0.c3)AND(rt0.c2)))AND(-1e500)))AND(t0.c0)))OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t1.c0) IS TRUE))-((~ (rt0.c3)))) FROM rt0, t1, t0; -- 1ms;
SELECT DISTINCT PRINTF(LOWER(rt0.c0)) FROM t1 WHERE ('') GROUP BY x'' COLLATE BINARY;SELECT DISTINCT TRIM(DISTINCT (+ (rt0.c2)), ((rt0.c4)|('-215008959'))), (((((rt0.c1) ISNULL), STRFTIME(t1.c59, vt0.c0, vt0.c0), CAST(t1.c26 AS TEXT), ((t0.c0) ISNULL), (rt0.c0 IN ()), CAST(vt0.c2 AS INTEGER), ((((NULL)AND(vt0.c1)))AND(t1.c59)), t1.c0 COLLATE BINARY, (((vt0.c0))>((vt0.c2)))))<=(((((t0.c0))<((t1.c0))), CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END, (+ (NULL)), ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c26)), ((((t1.c0)AND(rt0.c0)))OR(NULL)), CAST(rt0.c0 AS REAL), (- (rt0.c2)), ((vt0.c1) NOTNULL), DATE(t1.c26, vt0.c1, t1.c26)))), GROUP_CONCAT(((t1.c59) IS FALSE)) FROM rt0, t0, vt0 WHERE (((((x'714b') NOT BETWEEN (NULL) AND (0.29767255178122454)))OR(CAST(NULL AS REAL)))) GROUP BY 'v' HAVING ((x'')OR(AVG(t0.c0))) LIMIT -299744135;SELECT ((CAST(rt0.c4 AS REAL)) NOTNULL) FROM rt0, t0 WHERE (((((x''))>=((x''))) IN ())) GROUP BY ((((((((((rt0.c3)==(vt0.c2)))OR((NOT (t1.c0)))))OR(((rt0.c4) ISNULL))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((t0.c0)OR(rt0.c4)))OR(NULL)))) HAVING (((AVG(1.521155719E9)))<((((((rt0.c2)OR(t1.c0)))AND(vt0.c1)))));SELECT DISTINCT (- (((rt0.c0)+(rt0.c3)))) FROM t1, vt0;SELECT (((((- (rt0.c1)))AND(vt0.c1)))AND(((t1.c26)||(vt0.c2)))) FROM rt0 WHERE (((((LOWER('-775487624'))OR((x'' IN ()))))AND((+ ('-1525702937')))));SELECT DISTINCT 0.42626837959853847 COLLATE NOCASE FROM rt0, t1, vt0, t0 WHERE (CASE CASE WHEN NULL THEN 0.5067987949237542 END  WHEN (('0.40920018891389687') NOT NULL) THEN (NULL IN ()) WHEN CASE WHEN 0xfffffffff059766a THEN '-218916846' END THEN x'' WHEN '^R%O' COLLATE BINARY THEN CAST(x'69af' AS REAL) WHEN '' THEN (('')||(NULL)) WHEN ((0.6400105145164731) BETWEEN ('-990493632') AND (-908183534)) THEN CAST('	b氷䶺gE' AS NUMERIC) ELSE (((((((('O\n')OR(0.4870928559050214)))OR(x'')))OR(x'8b72')))OR('490694962')) END); -- 0ms;
SELECT (((((vt0.c0))<((x'')))) ISNULL) FROM t1, vt0, rt0; -- 0ms;
SELECT ALL (~ (0.8645332621922304 COLLATE NOCASE)) FROM vt0, t1 WHERE (LOWER(DISTINCT (((x'4802'))>((0.7711331943282425))))); -- 0ms;
SELECT (t1.c0 COLLATE RTRIM IN (((rt0.c2)<<(rt0.c0)), ((rt0.c2)|(rt0.c2)))), x'', LOWER(rt0.c4) COLLATE BINARY FROM vt0 WHERE ((((x'')) BETWEEN ((NULL COLLATE RTRIM)) AND ((((x'8e28') BETWEEN ('') AND ('-1729689189')))))) GROUP BY CASE WHEN CAST(t1.c0 AS REAL) THEN (((t0.c0))>=((rt0.c0))) ELSE CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c1 WHEN t1.c59 THEN vt0.c2 END END, ((x'') NOT BETWEEN (((t1.c59) IS TRUE)) AND ('1642607838')), ((t1.c0) BETWEEN (vt0.c2) AND (CAST(rt0.c4 AS NUMERIC))) LIMIT 2140256726 OFFSET 9223372036854775807;SELECT ALL ((((vt0.c2) BETWEEN (t0.c0) AND (rt0.c2))) NOT NULL), (t1.c26 IN ()) COLLATE NOCASE, COUNT((vt0.c2 IN (t1.c26))) OVER ( PARTITION BY json_quote(x'18f5'), CAST(((((((((rt0.c0)OR(t1.c59)))AND(rt0.c0)))OR(t1.c59)))AND(rt0.c0)) AS BLOB) RANGE  UNBOUNDED PRECEDING), ((((((vt0.c2)OR(x'')))OR(rt0.c1))) IS TRUE), CAST(CASE WHEN rt0.c3 THEN vt0.c2 ELSE t0.c0 END AS NUMERIC) FROM rt0, vt0;SELECT DISTINCT CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC) FROM t1, vt0, rt0 ORDER BY ((((TYPEOF(DISTINCT t1.c0))OR(t0.c0)))OR('2U'))  NULLS LAST;SELECT DISTINCT (vt0.c2 COLLATE RTRIM IN ()), FIRST_VALUE(((((json_patch(rt0.c3, t1.c26))OR(((((vt0.c0)AND(t0.c0)))OR(t1.c26)))))AND(t1.c26))) OVER (), ((((AVG(t0.c0))OR(vt0.c1 COLLATE BINARY)))OR(rt0.c1 COLLATE RTRIM)) FROM vt0, t0, t1, rt0 GROUP BY t1.c59; -- 0ms;
SELECT ALL ((json_insert(t1.c0, vt0.c2, vt0.c0, vt0.c2, t0.c0, t1.c26, rt0.c4))IS(((((vt0.c0)AND(rt0.c1)))AND(vt0.c1)))) FROM rt0;SELECT NULL FROM rt0 WHERE (UPPER(DISTINCT ((0.9851261944997491) NOT BETWEEN (x'') AND ('}ko驧 ꠧC')))); -- 0ms;
SELECT ((((((((CAST(t1.c0 AS INTEGER))AND(NULLIF('-86298661', vt0.c0))))AND(x'')))OR(((t0.c0) IS TRUE))))OR((rt0.c1 IN ()))) FROM t1 WHERE ((((('400288792') NOT BETWEEN ('0.29767255178122454') AND (1610072392)))IS NOT(load_extension('7cJ-u')))) ORDER BY LOWER(CASE t1.c26  WHEN t1.c0 THEN vt0.c1 END), (rt0.c1 IN (rt0.c2)) DESC  NULLS LAST LIMIT 434700005 OFFSET -1694680498;SELECT SUM((vt0.c1 IN ())), ((CASE WHEN t1.c59 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN t0.c0 THEN '' END)GLOB((rt0.c1 IN (vt0.c1)))), ((CASE vt0.c0  WHEN rt0.c2 THEN t1.c59 END) ISNULL) FROM t1;SELECT '-782264161' FROM rt0, t0 CROSS JOIN vt0 ON INSTR(((rt0.c4)+(t0.c0)), ((t1.c59) NOT BETWEEN (t1.c0) AND (0.3723123222377809)));SELECT CAST((((vt0.c1))>=((rt0.c3))) AS INTEGER), (((((vt0.c0)) BETWEEN (('ဍ)uB氷/*|H')) AND ((rt0.c2))))>>(CAST(t1.c0 AS NUMERIC))), ((((vt0.c1) BETWEEN (rt0.c0) AND (t1.c26))) NOT BETWEEN ((vt0.c1 IN ())) AND (LOWER(NULL))) FROM t0;SELECT ((rt0.c3)<>(CAST(rt0.c2 AS NUMERIC))), -23977970, AVG(((rt0.c3)||(vt0.c2))) COLLATE NOCASE FROM t1, t0 WHERE (CAST(((0.9832709192000169) IS FALSE) AS TEXT));SELECT SUM(((vt0.c0)/(t1.c26))) FROM rt0, t0 LIMIT -1793121792;SELECT ALL ((t1.c26)LIKE(rt0.c2)) COLLATE BINARY FROM t1, t0, rt0 WHERE (CAST(TYPEOF(x'bdea') AS TEXT)); -- 0ms;
SELECT ALL CAST(vt0.c0 AS REAL) COLLATE BINARY COLLATE RTRIM FROM t1, t0, rt0;SELECT DISTINCT CAST(CASE WHEN vt0.c2 THEN rt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t1.c26 ELSE vt0.c1 END AS INTEGER) FROM t0, vt0 ORDER BY CAST(CAST(t1.c0 AS TEXT) AS BLOB) DESC;SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN rt0.c3 ELSE rt0.c3 END) AND ((((rt0.c1, vt0.c2, t1.c59)) BETWEEN ((vt0.c2, rt0.c4, rt0.c3)) AND ((vt0.c0, rt0.c2, rt0.c0))))) FROM rt0;SELECT DISTINCT ((((vt0.c2) IS FALSE))||(((vt0.c2) ISNULL))) FROM vt0, t1, rt0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c1, t0.c0, t1.c26)) BETWEEN ((rt0.c2, ((t1.c26)IS(vt0.c2)), 0.4950079983633263)) AND ((((((vt0.c1)OR(rt0.c0)))OR(t0.c0)), (t1.c0 IN ()), (NOT (rt0.c4))))) FROM rt0, vt0, t1, t0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(NULL)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))IS NOT(rt0.c2)) FROM vt0 ORDER BY (- (((rt0.c3)<(vt0.c0)))) ASC, ((LOWER(rt0.c2)) BETWEEN ((t0.c0 IN ())) AND (((rt0.c1)LIKE(NULL)))) DESC;SELECT DISTINCT ((((CASE t1.c26  WHEN rt0.c2 THEN rt0.c0 END)AND(x'ebad')))OR(((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c4)))) FROM t0, rt0, t1, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)-(rt0.c2)) AS BLOB) FROM t1, vt0, t0 LIMIT -935056062;SELECT DISTINCT GROUP_CONCAT(CASE WHEN t0.c0 THEN 5.54409918E8 ELSE rt0.c1 END) FROM rt0, t1;SELECT (((x'') NOT BETWEEN (t1.c26) AND (vt0.c1)) IN ()) FROM vt0 WHERE (LOWER((('YE4氷JCᐷ') NOTNULL))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c3) NOT BETWEEN (vt0.c2) AND (rt0.c3)))) FROM rt0, vt0 WHERE (((((x'') BETWEEN ('') AND (x'')))IS NOT((+ (',o()'))))) LIMIT -958745540; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c0 AS REAL)) OVER () FROM rt0, vt0, t1; -- 0ms;
SELECT rt0.c1, CAST(LTRIM(t1.c26, NULL) AS TEXT), ((rt0.c4)IS NOT(t1.c26)) COLLATE BINARY FROM t0, vt0, rt0;SELECT ALL (- (rt0.c1 COLLATE BINARY)) FROM rt0 GROUP BY json_object((rt0.c2 IN (rt0.c2)), LIKELY(DISTINCT rt0.c4)) HAVING rt0.c3; -- 0ms;
SELECT (~ (rt0.c1)) FROM t1, t0 WHERE (((634527230 COLLATE RTRIM)IS NOT(((0.9724549253654589) NOT BETWEEN (x'') AND ('foQF')))));SELECT DISTINCT (((rt0.c1)IS(vt0.c0)) IN ()) FROM rt0 NOT INDEXED, vt0, t1, t0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0;SELECT DISTINCT vt0.c0 FROM t0, vt0, rt0, t1 WHERE ((~ ((((0.29767255178122454)) NOT BETWEEN ((x'831a')) AND ((0.6184083458681877)))))); -- 0ms;
SELECT DISTINCT vt0.c2 FROM rt0, vt0, t1, t0; -- 0ms;
SELECT json_patch(JULIANDAY(rt0.c3, rt0.c1, rt0.c4), t0.c0) FROM vt0;SELECT IFNULL(DISTINCT (+ (rt0.c3)), t0.c0 COLLATE RTRIM), CAST(t1.c59 AS BLOB) COLLATE RTRIM, (AVG(t1.c59) IN (((vt0.c1) IS FALSE))) FROM rt0, t0 WHERE (('y6E' COLLATE RTRIM IN ())) GROUP BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (x''));SELECT (((((t1.c0, rt0.c2, vt0.c1))>=((rt0.c2, rt0.c1, rt0.c4)))) IS FALSE), (((vt0.c1) ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN t1.c26 ELSE vt0.c0 END)), ((((x'f69f')+(t1.c26))) BETWEEN (NULL) AND (TIME('-1852721734', rt0.c0, t0.c0))) FROM rt0, t0, vt0, t1 WHERE ((((('1669124897')>=(9.92066375E8))) NOT BETWEEN ((- ('0.7764234889706135'))) AND (x'689b'))) GROUP BY (CASE rt0.c4  WHEN NULL THEN t1.c0 ELSE vt0.c1 END IN (((rt0.c0)=(rt0.c2)), ((t1.c59)=(rt0.c2)))) HAVING CAST(x'72b8' AS BLOB); -- 0ms;
SELECT (NOT ((t1.c26 IN ()))) FROM vt0, t0 WHERE (CAST((0.8904980178264439 IN ()) AS INTEGER)) LIMIT -1870929871 OFFSET 823919219; -- 0ms;
SELECT ALL ((((t0.c0)>>(t1.c0))) NOT BETWEEN ((((t1.c26))>=((rt0.c0)))) AND ((~ (rt0.c3)))), (NOT ((t1.c0 IN ()))), (((SQLITE_VERSION(), NULL, NULLIF(vt0.c0, vt0.c0)))=((LIKE(t1.c59, t0.c0, '-'), UNLIKELY(DISTINCT -1693638689), t0.c0))) FROM rt0 WHERE ((NOT (CASE WHEN 0.7711331943282425 THEN x'34ed' END))) UNION ALL SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN ((((vt0.c2))>=((t0.c0)))) AND ((0.9247266841506486 IN (NULL)))), (~ ((t0.c0 IN ()))), ((((((((CAST(t1.c26 AS REAL))AND(GLOB(rt0.c1, vt0.c1))))AND(x'')))OR((- (0xffffffffa984a3df)))))OR(x'')) FROM t0, t1, vt0 WHERE ((x'd85f' IN ()) COLLATE BINARY);SELECT ALL CAST(((((t1.c0)AND(rt0.c4)))AND(t0.c0)) AS BLOB) FROM rt0 WHERE (CAST((+ (x'1d86')) AS NUMERIC));SELECT DISTINCT AVG(TRIM(DISTINCT -1154569576, t1.c26)) FROM t1 NATURAL JOIN vt0; -- 2ms;
SELECT DISTINCT CASE CASE t1.c26  WHEN vt0.c1 THEN rt0.c3 WHEN t1.c0 THEN rt0.c0 WHEN t1.c59 THEN vt0.c2 ELSE rt0.c2 END  WHEN (+ (rt0.c1)) THEN CASE rt0.c0  WHEN vt0.c2 THEN rt0.c1 WHEN t1.c26 THEN rt0.c3 WHEN t1.c59 THEN 0.47103227666851666 END WHEN GROUP_CONCAT(rt0.c2) THEN ((rt0.c4)||(rt0.c2)) WHEN ((t1.c59)GLOB(rt0.c1)) THEN ((vt0.c0) NOT NULL) WHEN (t1.c26 IN (t1.c26)) THEN MIN(t1.c59) WHEN (((rt0.c3, vt0.c2, rt0.c4)) NOT BETWEEN ((vt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c3, vt0.c2, rt0.c0))) THEN x'' END FROM t0, rt0;SELECT DISTINCT (((rt0.c1 COLLATE NOCASE))<(((- (vt0.c2))))), SUM((~ (vt0.c2))) COLLATE RTRIM, CAST(((((rt0.c4)AND(t1.c59)))OR(rt0.c1)) AS INTEGER) FROM t0, vt0, rt0 WHERE (CASE ((0.301352218305486)|(0.5534372155822613))  WHEN json_patch('961584632', '-1295559444') THEN ('634527230' IN ()) ELSE (('-1637154085') NOT BETWEEN (NULL) AND ('0.17083932016038206')) END);SELECT DISTINCT ((((vt0.c2) IS FALSE))IS(((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)))) FROM rt0 WHERE ((x'47ff' COLLATE RTRIM IN ((('0,!d<C(')>=(x'')), (NULL IN ()))));SELECT DISTINCT ((((CAST(rt0.c4 AS REAL))AND(LTRIM(rt0.c2, t1.c26))))OR(CASE vt0.c0  WHEN rt0.c4 THEN vt0.c0 END)), ((((vt0.c2) NOTNULL)) NOTNULL), t1.c26 FROM t0;SELECT DISTINCT TOTAL(((t1.c59) IS TRUE)), ((rt0.c0)<>(vt0.c2)) COLLATE NOCASE, ((rt0.c0)GLOB(IFNULL(rt0.c2, vt0.c2))) FROM t0, rt0, t1 GROUP BY CASE ((vt0.c2)/(t1.c26))  WHEN CASE WHEN t1.c59 THEN vt0.c1 END THEN (x'' IN ()) END HAVING ((rt0.c0 IN ()) IN ());SELECT ALL vt0.c2 FROM t0, vt0; -- 0ms;
SELECT ALL ((((MAX(t1.c59))OR(MIN(t1.c59))))AND(((((rt0.c3)AND(rt0.c1)))OR(vt0.c0)))), (((rt0.c2, t1.c59, rt0.c1)) NOT BETWEEN ((((t1.c26)+('254801121')), MIN(vt0.c0), SQLITE_SOURCE_ID())) AND ((((t0.c0)OR(t0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (x'')), (((t0.c0))>=((t1.c0)))))), (((rt0.c4 IN ())) NOT BETWEEN (GLOB(rt0.c0, t1.c0)) AND (((vt0.c0) BETWEEN (t1.c59) AND (t1.c59)))) FROM rt0;SELECT (NOT ((rt0.c3 IN ()))), (((rt0.c2)) NOT BETWEEN ((((((t1.c0)AND(vt0.c2)))AND(t0.c0)))) AND (((- (''))))), vt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON (((+ (vt0.c2))) NOT NULL);SELECT DISTINCT x'43c9' FROM t1; -- 0ms;
SELECT ALL TOTAL((NOT (rt0.c2))) FILTER(WHERE ((((t1.c26)IS(t1.c59)))LIKE(((rt0.c2) BETWEEN (x'') AND ('-218916846'))))) OVER (), 0.0, CAST(MAX(t1.c26) AS REAL) FROM rt0, t0, vt0, t1 WHERE (((x'9c64' IN (0.5679104645546749)) IN ((((NULL)) NOT BETWEEN ((0.2095518524137352)) AND ((x'f4fa')))))); -- 0ms;
SELECT (NOT (((t1.c26)&(rt0.c4)))) FROM rt0, t0;SELECT DISTINCT ((((NULL)IS NOT(t1.c26))) NOTNULL) FROM t0, t1, vt0, rt0 WHERE (((('561205728')) BETWEEN (((x'ebea' IN (NULL, NULL)))) AND ((NULL)))); -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c4)AND(t0.c0)))OR(t1.c0)))OR(vt0.c0)))OR('1541965737')))AND(vt0.c0)))AND(t1.c26)))AND((('-1054905289')/(vt0.c0)))) FROM t0 CROSS JOIN t1 ON ((t1.c0) BETWEEN (rt0.c2) AND (vt0.c2)) COLLATE BINARY RIGHT OUTER JOIN rt0 ON x'' WHERE (((((((1073144119)OR(NULL)))AND(665134231))) NOT BETWEEN (NULL COLLATE NOCASE) AND (((((((((790610465)OR('z?')))OR(NULL)))AND(NULL)))AND(1250357172))))) GROUP BY ((((rt0.c0)+(vt0.c2)))==(json_patch(1513893453, vt0.c1))) HAVING (json(vt0.c1) IN ());SELECT DISTINCT ((t1.c26 COLLATE BINARY) NOTNULL) FROM t1, rt0, t0 WHERE ((((NULL)) NOT BETWEEN ((x'7198')) AND ((0Xf2ff4e1))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT AVG((NOT (t1.c0))) OVER () FROM rt0, t0, vt0;SELECT DISTINCT (((rt0.c3 IN ())) NOTNULL), ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c4)))>(((((t1.c59)AND(t1.c0)))OR(vt0.c1)))), GROUP_CONCAT(TYPEOF(rt0.c1)) OVER ( RANGE CAST(t1.c0 AS REAL) PRECEDING EXCLUDE TIES) FROM t1 GROUP BY ((vt0.c1 COLLATE BINARY)+(t1.c0 COLLATE RTRIM)), ((NULL) NOT BETWEEN (((rt0.c2) BETWEEN (vt0.c2) AND (rt0.c4))) AND (0.6205311346182564)), TYPEOF(DISTINCT NULL) HAVING ((- (x'')) IN (t0.c0 COLLATE BINARY));SELECT ALL TYPEOF(t1.c26) FROM t1, t0, rt0; -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) BETWEEN ((((t1.c26))<=(('-1e500')))) AND (rt0.c4)), ((((((((((rt0.c3) IS FALSE))OR(CAST(vt0.c2 AS NUMERIC))))OR((((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(((vt0.c2)<(t1.c0)))))OR(IFNULL(DISTINCT rt0.c1, vt0.c2))), (((~ (rt0.c4))) BETWEEN ((+ (t0.c0))) AND (rt0.c4)) FROM vt0, rt0, t1 WHERE ((CAST(0xffffffff90245670 AS BLOB) IN ()));SELECT ALL (((((vt0.c1)) NOT BETWEEN (('u')) AND ((t0.c0)))) BETWEEN (((rt0.c1)>=(rt0.c1))) AND (t1.c59 COLLATE BINARY)) FROM t1, vt0, t0 WHERE (CAST((('(#Oܻ6?q')<<(0.11902833263393586)) AS INTEGER));SELECT DISTINCT ((((CASE x'd3d0'  WHEN vt0.c0 THEN rt0.c2 WHEN t1.c26 THEN t1.c0 WHEN rt0.c1 THEN t1.c0 END)AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(t0.c0 AS BLOB))) FROM t1, rt0, vt0;SELECT ALL ((0.1565076052087332)%((rt0.c0 IN ()))) FROM t1; -- 0ms;
SELECT DISTINCT COUNT(NULL) OVER ( ORDER BY ((rt0.c0 COLLATE NOCASE)/(((((rt0.c4)AND('-535868280')))AND(0.2244057099905914)))) ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((rt0.c1))) DESC, ((0.8933517011923132 COLLATE NOCASE)*(((vt0.c2) IS TRUE))) ASC) FROM vt0, t0, rt0 GROUP BY ((((QUOTE(t0.c0))OR((NOT (t1.c0)))))AND((~ (t1.c59))));SELECT ALL (COUNT(vt0.c0) IN ()), COUNT(((t1.c0) BETWEEN (vt0.c1) AND (rt0.c4))), ROW_NUMBER() OVER ( ORDER BY ''  NULLS FIRST) FROM t1, rt0, vt0, t0 WHERE (CAST('0.13569565487035762' COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT DISTINCT (+ (CASE rt0.c3  WHEN rt0.c4 THEN t1.c59 END)), CASE rt0.c1  WHEN rt0.c2 THEN vt0.c1 END COLLATE BINARY, AVG(rt0.c4) FROM rt0 GROUP BY CAST(NULL AS NUMERIC);SELECT ALL NTH_VALUE(vt0.c0, (NOT (((((vt0.c1)AND(vt0.c2)))AND(vt0.c1))))) OVER (), MIN(vt0.c1), ((CAST(t0.c0 AS BLOB))GLOB((NOT (vt0.c0)))) FROM vt0;SELECT DISTINCT t0.c0 FROM t0, vt0, t1; -- 0ms;
SELECT rt0.c0 FROM rt0, t0, t1 LIMIT 204266718 OFFSET 657298767; -- 0ms;
SELECT DISTINCT COUNT(rt0.c2) FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))/(((t1.c59) NOTNULL))) WHERE ((((-1.569763006E9)) NOT BETWEEN ((x'f719' COLLATE NOCASE)) AND (('-1e500' COLLATE BINARY))));SELECT DISTINCT json_object((~ (t1.c26)), ((((t1.c26)OR(t1.c26)))OR(rt0.c1))) FROM rt0, t1, vt0; -- 0ms;
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (((((x'' COLLATE NOCASE)AND((('MJK.JKyr')&(0x7b23cc23)))))OR(0.4495512333240518 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT MIN('-293869689', ((rt0.c0)>(rt0.c0)), '-Br^2n', UNLIKELY(vt0.c1)), (((~ (NULL))) IS FALSE), CASE (t1.c0 IN ())  WHEN rt0.c0 THEN NULL ELSE ((x'e2e208c9')<>('-2125209273')) END FROM rt0, t1;SELECT ((((rt0.c1 IN (vt0.c1, vt0.c1))))!=((CASE vt0.c2  WHEN t1.c59 THEN rt0.c2 END))), rt0.c4, ((((t1.c59)|(0.7431728352415101)))>=(((t1.c26)AND(NULL)))) FROM vt0, t0, t1, rt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c2)))GLOB((((x'')) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))), (((((' ცk&' IN (t1.c59)))AND((NOT (vt0.c0)))))AND(rt0.c1 COLLATE NOCASE)), ((0.9698730567857226)IS NOT(t1.c59)) FROM t1, rt0, t0, vt0 WHERE (((CAST(-5.49728919E8 AS BLOB))GLOB(((x'')/('1005381822'))))); -- 1ms;
SELECT ALL CAST(((rt0.c4)=(t0.c0)) AS NUMERIC) FROM vt0, rt0 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) AS REAL) FROM vt0 WHERE (((('S[-HL\') IS FALSE) IN ())) ORDER BY (rt0.c0 IN (((((rt0.c3)OR(rt0.c2)))AND('835392617')), '-14567046')) DESC;SELECT DISTINCT (((~ (rt0.c0))) NOT NULL) FROM t0 WHERE (((2140256726)==(NULL)) COLLATE NOCASE);SELECT DISTINCT (CAST(vt0.c0 AS REAL) IN (((x'') NOT NULL))) FROM t0 WHERE (((TRIM('﫱b맖]<S<'))>=('-1143196069' COLLATE RTRIM)));SELECT DISTINCT (((rt0.c1))>((vt0.c0))) COLLATE RTRIM FROM vt0, t1, t0 WHERE ((((('<(UmU') NOT BETWEEN (NULL) AND (NULL)))<<(((x'')IS('mc')))));SELECT CAST((((rt0.c1, t1.c26, rt0.c1)) BETWEEN ((rt0.c4, vt0.c1, x'ea4f')) AND ((x'', vt0.c0, t1.c59))) AS TEXT) FROM vt0, rt0;SELECT ALL (((t1.c59)*(rt0.c4)) IN (t1.c59 COLLATE NOCASE)) FROM rt0 WHERE (CAST(CASE '-2125179022'  WHEN NULL THEN '-1054905289' ELSE '\' END AS BLOB)) ORDER BY ((rt0.c0 COLLATE NOCASE)-((((t0.c0, rt0.c1, rt0.c2))<((rt0.c2, t1.c26, t1.c0))))) ASC, ((((((t1.c59) BETWEEN (rt0.c1) AND (vt0.c1)))AND(CAST(t0.c0 AS INTEGER))))OR('\4ks鬳')), (((CAST(0.8915389876703006 AS TEXT)))<=((((rt0.c4)>(t1.c59))))) DESC;SELECT CASE CASE vt0.c1  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c3 THEN t1.c0 WHEN t1.c26 THEN vt0.c1 END  WHEN DATE(t1.c0, vt0.c1, rt0.c0) THEN CASE WHEN rt0.c0 THEN rt0.c4 WHEN t1.c26 THEN rt0.c4 WHEN vt0.c2 THEN t1.c0 END ELSE t1.c0 END FROM t1, t0 WHERE (((CASE 0xffffffff90c26913  WHEN 'ye4氷jcᐷ' THEN x'' END)+(((NULL)/(1785159333)))));SELECT CUME_DIST() OVER () FROM vt0, t0; -- 0ms;
SELECT ALL CASE WHEN (~ (rt0.c2)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (rt0.c4)) WHEN CASE vt0.c0  WHEN vt0.c2 THEN rt0.c3 END THEN CASE vt0.c0  WHEN rt0.c4 THEN t1.c0 ELSE NULL END WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (t1.c26)) THEN 2088147578 ELSE MAX(rt0.c1) END FROM vt0 WHERE (0x1b56336) LIMIT -2096558202;SELECT CAST(((t0.c0)&('896070510')) AS INTEGER), (- (NULL)) COLLATE RTRIM, TOTAL(((((0.6130688913812852)AND(t0.c0)))AND(vt0.c2))) FILTER(WHERE (~ ((((t1.c0))>=((rt0.c0)))))) OVER () FROM rt0, vt0, t0, t1; -- 0ms;
SELECT DISTINCT (((((rt0.c1)OR(t1.c0)))OR(t1.c26)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT t1.c26 FROM t0 WHERE (x'0330');SELECT DISTINCT vt0.c2 FROM vt0; -- 0ms;
SELECT json_patch(t1.c59, 0.08679283885153488) COLLATE NOCASE FROM rt0 WHERE ((CAST('?濖zS' AS INTEGER) IN ()));SELECT DISTINCT TYPEOF(t1.c59) FROM rt0, t0, vt0 LIMIT 257259349 OFFSET 652577673;SELECT ((load_extension(vt0.c0, t1.c26))!=(((rt0.c3) IS TRUE))), AVG(t1.c26) OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW), ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (MIN(vt0.c1))) FROM t0, t1, vt0;SELECT ALL rt0.c0 COLLATE RTRIM, json_object(((((t0.c0)AND(t1.c59)))OR(rt0.c4)), MAX(rt0.c2)), ((((vt0.c2)OR((((vt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c3, 0Xffffffff8cc9c438)) AND ((rt0.c1, vt0.c1, rt0.c4))))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE t1.c0 END)) FROM t1, vt0, rt0, t0;SELECT DISTINCT CAST(CASE WHEN vt0.c2 THEN rt0.c1 END AS REAL) FROM vt0 WHERE (((((LIKE('4334860', 'bN⏡', '0'))OR(((965713849)!=('258539328')))))OR(((0.985423115210358) BETWEEN ('1227196241') AND (0xfffffffffadb2fdb)))));SELECT DISTINCT CASE ((rt0.c0) NOT NULL)  WHEN ((rt0.c1)>>(t1.c0)) THEN ((((rt0.c0)OR(t1.c0)))AND(rt0.c0)) WHEN ((rt0.c0)>>(x'7239')) THEN (((t1.c59, rt0.c4, rt0.c4)) NOT BETWEEN ((t1.c0, -123933335, rt0.c0)) AND ((vt0.c0, t1.c26, t1.c0))) WHEN '257259349' THEN (((t0.c0)) NOT BETWEEN ((t1.c59)) AND ((t1.c0))) END FROM t0, t1 LIMIT -1176646600;SELECT ((('')==(vt0.c2)) IN ()), ((((rt0.c3)LIKE(t0.c0))) NOTNULL), ((((((rt0.c2)+(rt0.c0)))OR(((((((((vt0.c2)AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c2)))AND(x'')))))AND(CAST(t1.c59 AS NUMERIC))) FROM vt0;SELECT DISTINCT (((((((rt0.c2))<((rt0.c1))))AND((rt0.c0 IN (vt0.c0)))))OR(((vt0.c2) NOT NULL))), GROUP_CONCAT((- (rt0.c3))) OVER ( ORDER BY json_valid(t1.c26) COLLATE NOCASE ASC), 0.1041324126530998 FROM t1, vt0, rt0, t0 WHERE (CASE WHEN 0.9761956348157964 COLLATE BINARY THEN CASE WHEN x'' THEN 0Xffffffffdb808748 END END); -- 1ms;
SELECT ALL ((((((((rt0.c1 COLLATE BINARY)OR(((((rt0.c4)AND(t0.c0)))OR(t1.c59)))))OR(CAST(rt0.c1 AS REAL))))AND(COALESCE(vt0.c0, rt0.c4))))AND(CASE vt0.c1  WHEN rt0.c4 THEN rt0.c2 END)) FROM rt0, t1;SELECT ALL COUNT(((((t1.c26)AND(t1.c0)))AND(rt0.c3))) FROM rt0, vt0 WHERE (x'');SELECT TOTAL(CHAR(vt0.c2)) OVER ( ORDER BY CAST(((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c3)) AS TEXT) DESC), CAST(TOTAL(vt0.c2) AS BLOB), CAST(t1.c26 COLLATE RTRIM AS INTEGER) FROM t0, rt0, t1, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE))LIKE(((NULL) IS FALSE))), t1.c26, '4C' FROM vt0 WHERE (((((NULL)IS NOT('D)덵Su뮶*MO'))) BETWEEN (MIN('', x'', '哬Ꮠ', x'')) AND (NULL COLLATE BINARY)));SELECT DISTINCT NULL, rt0.c2, MIN((+ (vt0.c0))) FROM rt0;SELECT DISTINCT (((rt0.c3) ISNULL) IN ()), CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(t1.c59)) THEN ((((rt0.c0)AND(t1.c26)))AND(x'')) WHEN rt0.c4 THEN COUNT(*) WHEN '' THEN (rt0.c2 IN ()) ELSE ((rt0.c3)OR(rt0.c0)) END, ROW_NUMBER() OVER () FROM t0 ORDER BY (((rt0.c1 IN ()))>=(((t1.c26)IS(t1.c0))))  NULLS LAST LIMIT -958745540;SELECT ALL ((((rt0.c2)||(t1.c26))) BETWEEN (x'') AND ((~ (vt0.c0)))) FROM t0, t1;SELECT ALL ('-1959294527' IN ()) FROM t1, rt0; -- 0ms;
SELECT ALL 0.7788000058771652, CAST((NULL IN ()) AS BLOB), ((LOWER(DISTINCT rt0.c1)) BETWEEN (((((((((rt0.c2)AND(rt0.c3)))OR(t1.c59)))OR(vt0.c1)))AND(vt0.c0))) AND ('')), LAST_VALUE(CAST(((t1.c26) NOT NULL) AS NUMERIC)) OVER (), CASE WHEN t1.c0 COLLATE BINARY THEN MAX(rt0.c1) END FROM t1, rt0, vt0, t0 WHERE (LIKELY(DISTINCT (NULL IN ()))); -- 0ms;
SELECT CAST((((t1.c59)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) AS BLOB) FROM rt0, t0;SELECT DISTINCT 0xffffffffe4291437 FROM rt0, vt0 LIMIT -383495389; -- 0ms;
SELECT ALL CAST(COUNT(vt0.c0) AS TEXT) FROM t1 WHERE (((((-396445963) NOTNULL))IS(((NULL)-('[]'))))) GROUP BY (- ((NOT (t1.c26))));SELECT DISTINCT ((((t0.c0)GLOB(vt0.c0)))>>((+ (rt0.c2)))) FROM t1 WHERE ((('' COLLATE RTRIM)IS(((NULL)>(x'accfcee2')))));SELECT CASE WHEN COUNT(*) THEN (t1.c26 IN ()) END FROM t1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT CAST((((883650247))>((rt0.c4))) AS NUMERIC) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT TRIM((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))) FROM rt0, vt0, t0;SELECT DISTINCT TOTAL((((rt0.c2, rt0.c0, vt0.c2))>=((rt0.c2, t0.c0, vt0.c0)))) FROM rt0, t1, vt0, t0 UNION ALL SELECT DISTINCT rt0.c0 FROM vt0;SELECT ALL (- (((t0.c0)AND(rt0.c2)))) FROM rt0, t0, vt0 WHERE (((x'335f0979' COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE WHEN '8tSqG' THEN ((rt0.c2)<(t1.c59)) END, CASE COUNT(t0.c0)  WHEN t1.c59 THEN json_array_length(rt0.c1, t1.c0) ELSE ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, (~ (((vt0.c1) NOT BETWEEN (rt0.c1) AND ('')))) FROM vt0, t1, t0 WHERE (CASE WHEN '' THEN '1619592852' ELSE 0.3263506882444841 END COLLATE RTRIM) GROUP BY (((- (rt0.c4))) NOT NULL) HAVING ((LIKELY(rt0.c4)) ISNULL);SELECT (((((- (rt0.c0)))OR(TOTAL(vt0.c1))))OR(CAST(t0.c0 AS REAL))), ((rt0.c4 COLLATE NOCASE)<>(((t1.c26) BETWEEN (vt0.c2) AND (t1.c26)))), ((CASE WHEN rt0.c4 THEN t0.c0 END) NOT NULL) FROM t1, t0;SELECT ((rt0.c4) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((t1.c26)!=(t0.c0)))) FROM t1, vt0 WHERE (ABS((NULL IN ()))) LIMIT -854529952 OFFSET -1124046909;SELECT DISTINCT ((((CAST(0.0873585733069967 AS NUMERIC))AND(CASE rt0.c0  WHEN rt0.c1 THEN t1.c0 END)))OR(((x'e355') NOT BETWEEN (rt0.c3) AND (rt0.c4)))) FROM vt0, t0 WHERE (NULLIF(((x'')LIKE(x'')), ('-1763824396' IN ())));SELECT DISTINCT CAST(((((rt0.c0)AND(t0.c0)))AND(t1.c0)) AS TEXT) FROM rt0, vt0, t0;SELECT DISTINCT '1521088576' FROM t0, t1 WHERE ((((('400288792') NOT BETWEEN (NULL) AND ('/j')))IS(((((((((0.9895197404004914)AND(x'')))AND('')))AND(NULL)))AND(NULL))))); -- 0ms;
SELECT DISTINCT AVG((t1.c0 IN ()) COLLATE RTRIM), ((CAST(rt0.c0 AS BLOB))!=(((t1.c0) NOT BETWEEN (t1.c26) AND (vt0.c0)))), (((vt0.c2)) BETWEEN ((t1.c59 COLLATE NOCASE)) AND ((COUNT('-90869074')))) FROM vt0, rt0, t0;SELECT UPPER(((t1.c59) BETWEEN (rt0.c0) AND (rt0.c3))) FROM t1 WHERE ((((x'' IN ())) IS TRUE));SELECT ALL ((((((((((vt0.c1)OR(rt0.c1)))AND(t0.c0)))AND(rt0.c1)))OR(rt0.c1)))IS NOT(((('☆')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))), (((t1.c0) BETWEEN (t0.c0) AND (rt0.c4)) IN ()), LAG(((CAST(t1.c59 AS TEXT))IS NOT(CASE WHEN t1.c0 THEN t1.c26 WHEN t1.c26 THEN t1.c26 WHEN t1.c59 THEN t1.c0 END)), (+ ((t0.c0 IN ()))), (((((t1.c0)OR(t0.c0)))AND(t1.c59)) IN ())) OVER ( ORDER BY ((((t0.c0) ISNULL)) BETWEEN (((vt0.c1)<(rt0.c4))) AND (((rt0.c2)GLOB(t1.c26)))), ((((rt0.c1)LIKE(rt0.c0)))>(rt0.c2))  NULLS LAST, vt0.c2) FROM t0, t1 WHERE (((NULL COLLATE RTRIM)IS(('I' IN ('-2125179022', 0.703428810010064)))));SELECT DISTINCT vt0.c1, ((((t1.c59)&(t0.c0))) BETWEEN ('') AND ((rt0.c0 IN ()))), (t1.c0 IN ()) COLLATE NOCASE FROM rt0, vt0;SELECT ALL x'' FROM t1, t0, rt0, vt0; -- 0ms;
SELECT COUNT('<\nr1') FROM rt0, t0 ORDER BY ((rt0.c2) BETWEEN (((t1.c26) ISNULL)) AND (((rt0.c1)IS NOT(x''))))  NULLS LAST, t1.c0;SELECT DISTINCT ((CASE t1.c59  WHEN vt0.c2 THEN vt0.c2 END) IS FALSE) FROM t0, rt0 WHERE ((((((((((('921510885') NOT NULL))OR(TRIM(x'', 0x484d3a13))))OR(CAST(0.8212494755326352 AS INTEGER))))AND(((x'20de') BETWEEN ('-640111172') AND (0x603268f0)))))OR(('AꚐU' IN (0.6502123416973146)))));SELECT ALL ((vt0.c2) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE FROM vt0, t1;SELECT (((NULL COLLATE BINARY))<=((((vt0.c2) IS TRUE)))) FROM t0, rt0, vt0 WHERE (CAST('' AS BLOB) COLLATE NOCASE) ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((t0.c0))))AND(rt0.c0 COLLATE NOCASE)))AND(((t1.c26) IS FALSE))))OR((NOT (vt0.c1)))))OR(((rt0.c1)*(rt0.c2)))) ASC;SELECT ALL COUNT(*) FILTER(WHERE CHAR(((rt0.c2) NOT NULL))) OVER () FROM rt0, t0 LIMIT -1498473298 OFFSET 1710749484; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT t0.c0 COLLATE NOCASE, 0.7305600467944814), ((((rt0.c4)AND(rt0.c4)))OR(t1.c26)) COLLATE RTRIM, CAST(CASE t0.c0  WHEN vt0.c0 THEN t1.c59 END AS REAL) FROM t0, rt0, t1, vt0 WHERE (((((0.5067987949237542))<((NULL))) IN ())); -- 0ms;
SELECT AVG(((((((((vt0.c2)OR(rt0.c4)))OR(t1.c59)))OR(vt0.c2)))OR(t0.c0))) OVER () FROM vt0, rt0, t1 WHERE ((NOT ((('-1637154085') NOTNULL)))) LIMIT 574675028 OFFSET 1710749484;SELECT DISTINCT AVG(((t1.c26) NOT BETWEEN (rt0.c4) AND (rt0.c3))) OVER (), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)) COLLATE NOCASE, ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t1.c0))) IS TRUE) FROM rt0, t1;SELECT ALL (('3''l2!') NOT NULL) FROM t1, rt0 WHERE ((((NULL IN ('1854305130'))) IS FALSE)) ORDER BY ((((((((((vt0.c1)OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c1)))AND(t1.c26)))%(((0.21849188483355908)&(rt0.c4)))), ((+ (vt0.c0)) IN ((((rt0.c0))>=((vt0.c2))), CASE WHEN rt0.c3 THEN vt0.c2 END))  NULLS LAST, UPPER(((t1.c59)>>(rt0.c1)))  NULLS LAST;SELECT DISTINCT CAST(rt0.c0 AS REAL) COLLATE NOCASE FROM t0;SELECT CAST(((rt0.c1) NOTNULL) AS BLOB) FROM rt0, t1, t0, vt0; -- 1ms;
SELECT DISTINCT COUNT(*), (((((vt0.c0))>((rt0.c0))))*(((vt0.c2)OR(0.7350965774866107)))), COUNT(AVG((((t1.c0, t1.c0, rt0.c4)) BETWEEN ((vt0.c0, vt0.c1, rt0.c0)) AND ((0.6597331426179482, '-215008959', vt0.c0))))) FROM t0, rt0, t1, vt0 WHERE ((((0.7120228154832718, x'0654', '.絸B|?9J\n\n', NULL, '835392617')) NOT BETWEEN ((((('1255652472')) BETWEEN ((NULL)) AND (('74739512'))), json_extract(0.5297066152650177, ''), (~ ('1153239133')), ((x'e076') IS TRUE), ((0X59396102) BETWEEN ('Lz') AND ('-90869074')))) AND ((CASE WHEN x'' THEN '4oy' WHEN '' THEN 0x71993cf5 WHEN '0.9567631964859413' THEN '1119512377' END, (- ('([')), (((((((('>jenIdm')AND(NULL)))OR('-855970003')))OR('')))OR(-1.0904814E8)), (- ('-1014426507')), (('-1322194917')||(NULL))))));SELECT DISTINCT (((t0.c0) BETWEEN (t1.c59) AND (vt0.c0)) IN ()) FROM t0, t1 WHERE (CAST(CASE WHEN 0Xfffffffffadb2fdb THEN '-337810814' END AS REAL)) ORDER BY (((((rt0.c2)) BETWEEN ((t1.c59)) AND ((t0.c0))))-(CAST(t0.c0 AS BLOB)))  NULLS LAST, (((t1.c59, CAST(rt0.c0 AS TEXT), LAST_INSERT_ROWID()))<=((((vt0.c0)|(rt0.c2)), ((rt0.c1) NOTNULL), CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)));SELECT DISTINCT COUNT(*) FROM rt0 NOT INDEXED, t1; -- 0ms;
SELECT ALL ((CASE WHEN t1.c0 THEN 100544480 ELSE t0.c0 END) IS FALSE) FROM rt0 ORDER BY CASE 0.4774484716348918  WHEN ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN (((rt0.c2, vt0.c0, rt0.c1))<=((rt0.c2, vt0.c2, rt0.c2))) END  NULLS FIRST;SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM vt0, rt0, t1, t0; -- 0ms;
SELECT DISTINCT SUM((t0.c0 IN ())), TYPEOF(DISTINCT GROUP_CONCAT(rt0.c4)), (NOT (((((((((t1.c59)AND(vt0.c2)))OR(t1.c0)))AND(rt0.c0)))OR(vt0.c0)))) FROM t1, rt0, vt0, t0 ORDER BY ABS(UNLIKELY(DISTINCT vt0.c1)) DESC  NULLS LAST LIMIT 835392617; -- 0ms;
SELECT DISTINCT (((t1.c26, 0Xffffffffc71474d6, vt0.c0, t1.c0, rt0.c1)) NOT BETWEEN ((((((vt0.c1)AND(t0.c0)))AND('Yf')), 1234094242, TOTAL('1521088576'), CAST(t1.c59 AS BLOB), ((vt0.c2)<(vt0.c0)))) AND (('-869881775494580015T736 -8076816810366838812-1390T1773 -3020101719638335666 ', ((t1.c26) IS TRUE), ((rt0.c4) ISNULL), ((vt0.c2) NOTNULL), ((rt0.c3)GLOB(rt0.c3))))), ((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE BINARY, CAST(((vt0.c2)IS NOT(rt0.c3)) AS NUMERIC) FROM rt0, t1, t0 WHERE ((('})')>>(x'')) COLLATE RTRIM) GROUP BY ((((rt0.c2) ISNULL))>=(((t1.c0) NOT NULL)));SELECT ALL '800723530', ((((vt0.c1)<(vt0.c2))) ISNULL), CASE CAST(vt0.c2 AS REAL)  WHEN ((rt0.c4) BETWEEN (t1.c59) AND (rt0.c0)) THEN '' ELSE CAST(rt0.c3 AS BLOB) END FROM t0, t1, vt0 WHERE (((((0xffffffffab2bca61)LIKE(NULL))) NOT BETWEEN (1134316846 COLLATE RTRIM) AND ((0.17083932016038206 IN ())))) LIMIT 194096899;SELECT DISTINCT ((((((t1.c0)AND(t1.c0)))AND(t1.c59))) NOTNULL), ((t1.c0)|(rt0.c0)) COLLATE RTRIM, ((CASE WHEN vt0.c1 THEN rt0.c1 END)|(UPPER(vt0.c2))) FROM t1, rt0;SELECT DISTINCT (NOT (COUNT(*))) FROM vt0, rt0, t1, t0 GROUP BY ((t1.c0 IN ()) IN ()); -- 0ms;
SELECT ALL ((((COUNT(rt0.c0))OR(x'9249')))AND(((t1.c59) BETWEEN (t1.c26) AND (rt0.c2)))) FROM vt0, t1, rt0; -- 0ms;
SELECT ((((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (0.3496581252785189) AND (x'f168')), ('896070510' IN ()), ((((((t1.c59))<>((vt0.c2))), CAST(NULL AS NUMERIC), ((t0.c0)IS(t0.c0))))<=(((+ (t1.c59)), CASE t1.c26  WHEN vt0.c2 THEN t1.c26 END, 0.3017138293102224))) FROM rt0 WHERE (CASE ((NULL)-(''))  WHEN ((((((((((((0.9499125274750896)AND(0.8980868415910129)))AND(NULL)))OR(0.778644574124948)))OR(x'')))OR(NULL)))OR('-1717071920')) THEN x'' ELSE ((x'') IS FALSE) END);SELECT ALL ((rt0.c2)>>(vt0.c1)) COLLATE NOCASE FROM rt0, t0, vt0, t1; -- 4ms;
SELECT ALL ((((rt0.c0) NOTNULL))<(rt0.c4)) FROM t1, rt0, t0, vt0; -- 0ms;
SELECT '1112059681' FROM vt0, t1; -- 0ms;
SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(CAST('-1525702937' AS TEXT))))AND(CAST(rt0.c2 AS BLOB))), ((((rt0.c1) IS TRUE)) BETWEEN (-1.908246136E9) AND (((x'')*(t1.c59)))), ((-3.55771614E8)AND(x'')) FROM rt0, t0, t1, vt0 WHERE (CAST(CAST('-1881916852' AS REAL) AS REAL)); -- 0ms;
SELECT DISTINCT t1.c0 FROM t1, vt0, rt0, t0; -- 0ms;
SELECT ALL (+ (CASE rt0.c3  WHEN rt0.c0 THEN t1.c0 END)) FROM t1 WHERE (x'');SELECT ((CAST(t1.c59 AS REAL)) BETWEEN (((t1.c0) BETWEEN (rt0.c0) AND (vt0.c0))) AND ('-1054905289')) FROM t0, vt0, rt0 WHERE (((rtreenode(x'', ''))-(json_insert('⿛^&at/bd', NULL, x''))));SELECT DISTINCT GROUP_CONCAT(((vt0.c2) ISNULL)) OVER ( ORDER BY (((((vt0.c1 IN ()))AND(CAST(rt0.c3 AS BLOB))))AND(((t1.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))) DESC), ((json_object(rt0.c1, t0.c0))*(CAST(rt0.c1 AS NUMERIC))), ((((((vt0.c0)/(NULL)))AND(rt0.c4)))AND(((rt0.c2)+(t1.c0)))) FROM t1, t0 WHERE ('-831813775');SELECT DISTINCT CASE ((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c59))  WHEN CAST(t1.c59 AS BLOB) THEN (t1.c59 IN (t0.c0)) ELSE (((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) END, CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC), LAG(x'' COLLATE RTRIM, ((((- (rt0.c0))))<>(((~ (rt0.c0))))), TYPEOF((((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2))!=((rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c4))))) OVER () FROM rt0 WHERE (0.24716222745268812);SELECT ALL ((rt0.c1) NOT NULL) COLLATE BINARY FROM rt0, t0, vt0, t1; -- 0ms;
SELECT DISTINCT (- (MAX(t1.c59))), (json_valid(vt0.c2) IN ()), ((NULL)*(CAST(rt0.c1 AS BLOB))) FROM vt0, rt0;SELECT ALL 0Xfffffffff2f39812 FROM t0, vt0 WHERE (((((0.03568459067085383)AND(0.6012239844887881)))OR('0.5022879633159871')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) IS TRUE))AND(CAST(rt0.c3 AS NUMERIC))))AND(CASE vt0.c2  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c1 END)) FROM t0, vt0, t1 WHERE ((- (STRFTIME('', 1001857456, 'oQ'))));SELECT CASE (((rt0.c1)) NOT BETWEEN ((t1.c59)) AND ((rt0.c0)))  WHEN GROUP_CONCAT(t0.c0) THEN ((rt0.c2)||(0.9143184412196165)) ELSE TRIM(rt0.c0, t1.c0) END FROM t1, t0 WHERE ((+ (PRINTF(''))));SELECT ALL t0.c0 FROM vt0, t0 WHERE ((((('*[n2fBi]')AND(x'f312')))||(x''))); -- 0ms;
SELECT ((((t1.c26) IS FALSE))IS NOT(TRIM(DISTINCT rt0.c1))) FROM t0, t1, rt0 WHERE ((((0.8585158802185962)) BETWEEN ((((x'') NOTNULL))) AND ((((((((((((((NULL)AND('875687803')))AND(0.6856017924250379)))AND(0.8235001472717939)))OR(x'84c1')))AND(x'51db')))AND('-1107348657')))))); -- 0ms;
SELECT DISTINCT ((SUBSTR(rt0.c4, rt0.c3)) NOTNULL) FROM t0 WHERE ((0.22922715610159783 IN ()) COLLATE RTRIM) LIMIT 1;SELECT LAST_VALUE(t0.c0) OVER (), ROW_NUMBER() OVER (), LEAD((((((((((- (t0.c0)))AND(((((t0.c0)OR('-1411859260')))AND(t0.c0)))))AND('aQ+G*_c[')))OR(CAST(t0.c0 AS TEXT))))AND(t0.c0)), t0.c0, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)%((t0.c0 IN (x'', t0.c0))))) OVER (), (((t1.c0) NOTNULL) IN ()), vt0.c0 FROM t0 LIMIT 508894186;SELECT DISTINCT COUNT('-2131970870'), ((((vt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3)))*(CAST(vt0.c0 AS TEXT))), CAST(NULL AS NUMERIC), ((((vt0.c1)==(t1.c0))) NOT BETWEEN (((rt0.c3)/(rt0.c2))) AND (0.7033405466050837)), NULL, ((t0.c0 COLLATE NOCASE) NOTNULL), vt0.c2 FROM t0, t1, vt0, rt0 LIMIT -908183534; -- 0ms;
SELECT ALL CASE WHEN 1.005381822E9 THEN CASE WHEN t1.c0 THEN rt0.c2 ELSE rt0.c4 END END FROM t0, rt0 WHERE ((NULL COLLATE BINARY IN ()));SELECT DISTINCT CAST(CAST(rt0.c3 AS INTEGER) AS NUMERIC) FROM t1 ORDER BY (((t1.c26)) BETWEEN ((t1.c26 COLLATE NOCASE)) AND (((((rt0.c0, t1.c59, rt0.c2))<=((t1.c26, rt0.c4, vt0.c1))))));SELECT ALL MAX(CAST(rt0.c0 AS REAL)) FROM rt0, t0 WHERE (((((0.9087801511684376)<>(0.5060842043887667)))<<(TRIM(DISTINCT NULL)))); -- 0ms;
SELECT DISTINCT rt0.c1, (((((rt0.c1))<>((t1.c59)))) NOT BETWEEN ((((rt0.c0))>((vt0.c1)))) AND (MAX(rt0.c1))), CASE rt0.c3  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY FROM rt0, vt0 WHERE (CAST(1338524210 AS NUMERIC));SELECT ((CASE WHEN x'' THEN x'' END) NOT BETWEEN (SUM(rt0.c1)) AND ('1710749484')) FROM t1 WHERE (CAST(((-8.31813775E8)OR(x'c26e')) AS INTEGER));SELECT ALL rt0.c1 FROM vt0, rt0, t0 WHERE ((NOT (CASE WHEN NULL THEN 0.9851261944997491 WHEN NULL THEN NULL WHEN x'e9c3' THEN '0.9417469262939824' END))); -- 0ms;
SELECT DISTINCT (vt0.c2 IN (((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((t1.c0))))) FROM vt0, rt0, t1 WHERE (((json_object(NULL, 0.9253767475555544)) BETWEEN (x'6f6b' COLLATE BINARY) AND (((-4.15375266E8) NOTNULL))));SELECT GROUP_CONCAT(((((t1.c59)OR(rt0.c1)))AND('321158376'))) FROM vt0, t1 WHERE ((((((0.9165229104071466))=((0.8904980178264439)))) BETWEEN (CASE 0.6773442049928181  WHEN 0.9106829949168798 THEN '800723530' END) AND (CAST(NULL AS TEXT))));SELECT ALL CAST(((rt0.c3)%(NULL)) AS INTEGER) FROM vt0, t1;SELECT ((rt0.c3)OR(0.76023683632054)) COLLATE NOCASE, SUM(((t1.c0) BETWEEN (t1.c26) AND (t1.c0))), (+ (((((NULL)AND(x'')))OR(rt0.c1)))) FROM vt0, t1, rt0 WHERE ((('') BETWEEN ((('1227531224')LIKE(NULL))) AND (((0x254b44ce) IS FALSE)))); -- 0ms;
SELECT (((((((NULL)AND(t1.c0)))OR(t1.c26))))>=((CAST(vt0.c1 AS NUMERIC)))), (((rt0.c4, rt0.c4, t0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, t1.c26, t1.c26, t1.c26, vt0.c1)) AND ((rt0.c0, vt0.c2, vt0.c2, t1.c59, rt0.c0))) COLLATE RTRIM, (((((((((t0.c0)OR(rt0.c3)))OR('1743062647')))AND(t1.c59)))AND(vt0.c2)) IN (t1.c26 COLLATE RTRIM, rt0.c2)) FROM rt0, t0, vt0;SELECT DISTINCT 0.14308039045265752 FROM t1, rt0, t0, vt0; -- 1ms;
SELECT (((t1.c0, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, ((t0.c0)%(0.8731926871962966)), CASE WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c3) NOTNULL), '-1693600219', ((vt0.c1) NOT NULL)))) FROM vt0 WHERE (HEX(DISTINCT (NULL IN ())));SELECT ALL (CAST(rt0.c4 AS REAL) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT AVG(rt0.c3) OVER () FROM t1 WHERE (((LIKELY(-1143196069)) BETWEEN ((((x''))>((NULL)))) AND ((- (0X3896b2fa)))));SELECT DISTINCT ((CASE t1.c59  WHEN t1.c59 THEN vt0.c0 END) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c2) IS FALSE))) FROM rt0 WHERE (((- (x'')) IN ())) ORDER BY CAST(CAST(t0.c0 AS REAL) AS BLOB) ASC  NULLS LAST;SELECT (NOT (CAST(rt0.c2 AS TEXT))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM t1, rt0;SELECT NULL, ((vt0.c2)||(((vt0.c2)&(vt0.c1)))), CASE WHEN '' THEN (((vt0.c2, vt0.c0, t0.c0, t0.c0, vt0.c0)) BETWEEN ((t1.c0, t1.c0, t1.c26, vt0.c2, 1901198267)) AND ((vt0.c0, t1.c59, rt0.c0, rt0.c0, rt0.c4))) END FROM vt0, rt0 WHERE (((((0.8883325336572124) NOT BETWEEN (x'245c') AND ('\n[n鼺Ln*'))) BETWEEN ((('1521088576')AND(-988915074))) AND ((~ (0.9680821188822701))))) LIMIT -1955025629 OFFSET -622151169;SELECT (((vt0.c1)) NOT BETWEEN ((((rt0.c2)IS NOT(vt0.c1)))) AND ((x''))) FROM t1 WHERE (CAST((('-989939708')-(x'23ca')) AS TEXT));SELECT CASE t1.c59  WHEN ((t1.c59)OR(rt0.c0)) THEN rt0.c4 END, -1741898826, (+ (CASE rt0.c2  WHEN rt0.c0 THEN t1.c59 END)) FROM rt0 WHERE ((((x'')) BETWEEN ((((NULL) NOT BETWEEN (NULL) AND ('軩yCB')))) AND (((x'5ec81c94' IN (x'', x''))))));SELECT DISTINCT UPPER(DISTINCT ((vt0.c2)LIKE(rt0.c2))) FROM t1 WHERE ((((((NULL)OR(NULL)))AND('')) IN ()));SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c2) AND (rt0.c0)) AS NUMERIC) FROM rt0 WHERE ((NULL IN (0.24425875946475906)) COLLATE RTRIM);SELECT DISTINCT (- ((((rt0.c3))>((t0.c0))))), AVG((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c2)))), SUM(rt0.c4 COLLATE NOCASE COLLATE NOCASE) OVER ( PARTITION BY CASE WHEN CAST(rt0.c3 AS REAL) THEN ((vt0.c2) IS TRUE) ELSE vt0.c1 END, ((((t0.c0) IS FALSE)) BETWEEN (rt0.c0) AND (x''))) FROM t0, rt0 ORDER BY ((0.8139181539463113)<<((((rt0.c1, vt0.c0, rt0.c3))<>((rt0.c0, rt0.c4, rt0.c0)))));SELECT DISTINCT ((CASE t0.c0  WHEN rt0.c0 THEN NULL END) BETWEEN (((rt0.c3) ISNULL)) AND ((0X31cb1469 IN ()))) FROM t1, rt0 WHERE ((((NOT ('ﰡT{}')))-(CAST('0.6400105145164731' AS TEXT))));SELECT DISTINCT ((x'')/((~ (t1.c26)))), DENSE_RANK() OVER (), ((((CAST(t1.c0 AS BLOB))AND(((((((((-1022401290)OR(t0.c0)))AND(rt0.c2)))OR(rt0.c4)))AND(t0.c0)))))AND('ᝳQB')) FROM vt0, t1, t0, rt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS INTEGER))<=(x'fbe4')) FROM t0, vt0, rt0; -- 0ms;
SELECT CASE WHEN (t1.c0 IN (vt0.c2, rt0.c0)) THEN CASE t0.c0  WHEN rt0.c4 THEN -2.13197087E9 END END FROM t0;SELECT DISTINCT (((((rt0.c3, '', t0.c0))<((vt0.c1, x'3165', rt0.c2)))) IS TRUE), ((((((rt0.c4) ISNULL))AND(t0.c0 COLLATE NOCASE)))AND(((vt0.c1)+(vt0.c2)))), SUM(((rt0.c1)-(rt0.c2))) OVER () FROM vt0, rt0 WHERE ((((NULL)) BETWEEN ((json_array_length(x'', NULL))) AND (((+ ('1307556855'))))));SELECT DISTINCT TOTAL(((vt0.c1)LIKE(vt0.c2))) OVER (), SQLITE_SOURCE_ID(), ((vt0.c1) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), MAX(MAX(CASE WHEN t1.c26 THEN NULL WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 END)), (+ (CAST(vt0.c0 AS NUMERIC))) FROM rt0, vt0, t1 LIMIT 466466920 OFFSET -1134455135 INTERSECT SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))) BETWEEN (t0.c0) AND (x'' COLLATE NOCASE)), (((vt0.c0, ((vt0.c2)%(rt0.c0)), vt0.c2))!=((CASE WHEN x'' THEN '' END, (t0.c0 IN ()), (~ ('670773138'))))), DENSE_RANK() OVER (), ((((rt0.c2)AND(rt0.c3))) NOTNULL), DENSE_RANK() OVER () FROM t0 INNER JOIN t1 ON t1.c59 COLLATE NOCASE RIGHT OUTER JOIN rt0 ON ((CAST(t1.c0 AS INTEGER))!=(CASE WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END)) WHERE (((NULLIF(DISTINCT '0.3263506882444841', x'0aec')) BETWEEN (((x'')<>(0Xffffffffd831385e))) AND (('9R|G!fm' IN ()))));SELECT DISTINCT rt0.c4, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((MIN(rt0.c2)))), CASE WHEN vt0.c0 THEN 0X2d79998e WHEN vt0.c2 THEN t1.c59 WHEN rt0.c3 THEN vt0.c2 WHEN t1.c59 THEN t1.c59 WHEN 'XKG' THEN t0.c0 ELSE -1284296239 END COLLATE NOCASE, ((((((t1.c26) BETWEEN (t0.c0) AND (vt0.c2)))AND(CASE WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END)))OR(UPPER(vt0.c2))), (CAST(t1.c26 AS TEXT) IN (((vt0.c0)+(rt0.c3)), (((rt0.c2))>((vt0.c2))))) FROM t1 GROUP BY (- ((((vt0.c0)) BETWEEN ((t1.c26)) AND ((rt0.c1))))), (- (rt0.c0)) COLLATE BINARY, NULL;SELECT AVG(CASE rt0.c1  WHEN '-1822847255' THEN t1.c59 WHEN vt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END) OVER () FROM t0, t1, vt0, rt0 ORDER BY rt0.c1 ASC  NULLS LAST; -- 0ms;
SELECT ((vt0.c2 COLLATE RTRIM) IS FALSE), (((((rt0.c2))=((t1.c0))))<(((((t1.c59)AND(rt0.c1)))OR(rt0.c3)))), (- (CAST(t1.c59 AS TEXT))), (((rt0.c0 IN (t1.c0, t1.c0)))OR(((t1.c0) ISNULL))), ((((rt0.c0)AND(rt0.c3))) NOT BETWEEN (((rt0.c4)/(t1.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)) FROM t0, rt0 WHERE ((CASE '_/mHJDﭡ⏵'  WHEN NULL THEN NULL ELSE NULL END IN (((0.9926769693458724)|('\2')))));SELECT CAST((((vt0.c1, t0.c0, NULL)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c4, t1.c59, rt0.c0))) AS INTEGER) FROM t1 WHERE (CAST((~ (x'')) AS BLOB));SELECT DISTINCT ((SUM(rt0.c4))|(x'9a23')) FROM vt0, t0 WHERE (CAST((x'' IN ('0.11902833263393586')) AS BLOB)) GROUP BY (((((((((((vt0.c1))>((t1.c0))))OR(CAST(rt0.c1 AS NUMERIC))))AND(CASE vt0.c2  WHEN t1.c0 THEN rt0.c3 ELSE t1.c59 END)))AND(((rt0.c0) NOTNULL))))OR(((rt0.c4)OR(0.8052201732631487)))) HAVING ((((((vt0.c0)OR(vt0.c2)))OR((t1.c0 IN (rt0.c4, rt0.c0)))))AND(((rt0.c2)IS NOT(t1.c26))));SELECT ALL SQLITE_COMPILEOPTION_GET(((rt0.c1) NOT BETWEEN (t1.c26) AND (t1.c26))) FROM t1, t0, vt0, rt0 ORDER BY -1025972380  NULLS LAST;SELECT DISTINCT CASE CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN t1.c26 WHEN t1.c59 THEN t1.c59 ELSE t1.c59 END  WHEN TRIM(DISTINCT rt0.c0, vt0.c0) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c59)) ELSE TRIM(t0.c0) END, (((((rt0.c2 IN ()))AND(CAST(t1.c59 AS NUMERIC))))AND(highlight(rt0.c3, t1.c59, vt0.c1, rt0.c0))), ((((((vt0.c1)AND(t0.c0)))OR(0.6047497696518368)))>=(MAX(rt0.c0))) FROM t0, t1, rt0 LIMIT -1971938818;SELECT DISTINCT (((vt0.c2)) BETWEEN (((~ (t0.c0)))) AND ((((((t1.c0)AND(t1.c26)))OR(rt0.c3))))), json_insert(t1.c59, t0.c0, rt0.c4) COLLATE RTRIM, CASE (((t1.c59)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))  WHEN (~ (t1.c26)) THEN (((rt0.c0))>((t0.c0))) WHEN vt0.c1 THEN rt0.c2 COLLATE NOCASE WHEN (((t1.c26)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((t0.c0)AND(t1.c59)) WHEN CASE WHEN vt0.c2 THEN 0.3276244294127322 END THEN x'b33e' WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c4)OR(rt0.c4)))AND(t1.c0)) END FROM t0, rt0, t1 NOT INDEXED WHERE ((NOT (0.5144559664188835)));SELECT ALL MIN((((vt0.c1, NULL, t1.c0)) BETWEEN ((vt0.c1, vt0.c2, rt0.c0)) AND ((t0.c0, t0.c0, x'')))) FROM rt0, vt0, t1, t0; -- 1ms;
SELECT ALL ((x'') IS TRUE) FROM t1, rt0, vt0; -- 0ms;
SELECT ((t1.c0 COLLATE NOCASE) NOT BETWEEN (MIN(t1.c59)) AND (CASE rt0.c2  WHEN t1.c26 THEN NULL ELSE vt0.c1 END)) FROM vt0 WHERE (((((((((((-990493632)OR('{}')))AND(0X29cf6bf1)))AND(x'')))OR(x'')))IS(x'98e0'))) GROUP BY LIKELIHOOD(DISTINCT t0.c0 COLLATE BINARY, 0.584622680977081);SELECT DISTINCT ((GROUP_CONCAT(rt0.c0))<<(((((((((rt0.c4)OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c2)))) FROM rt0;SELECT DISTINCT ((x'')+(((x'')>=(vt0.c2)))) FROM vt0, rt0, t0 WHERE (((x'') NOTNULL) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) NOTNULL) FROM t0, rt0;SELECT ((((t1.c0, t0.c0, t1.c59))<>((0.8914934709232827, t0.c0, 'TTꁃg좤e_9v'))) IN (((((((((rt0.c4)OR(rt0.c1)))OR(vt0.c1)))AND(t1.c59)))OR(rt0.c3)))) FROM t0 WHERE ((CASE WHEN 'Pu5튏G' THEN '96992097' WHEN '23109989' THEN x'' WHEN x'406f' THEN x'' END IN ()));SELECT x'' FROM t1, t0, rt0, vt0 WHERE (((LOWER(DISTINCT NULL)) BETWEEN (CASE WHEN NULL THEN x'7d3d' END) AND (((NULL)&(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c2)>=(vt0.c2)))==(((t1.c26) BETWEEN (vt0.c2) AND (t1.c59)))) FROM t1, rt0, t0;SELECT DISTINCT CASE WHEN ('' IN (vt0.c0, rt0.c3)) THEN (vt0.c0 IN ()) ELSE (NOT (t1.c0)) END, (((t1.c26) NOT BETWEEN (rt0.c4) AND (vt0.c1)) IN ()), COUNT(*) OVER () FROM vt0, rt0 NOT INDEXED, t0 WHERE (CAST('' AS INTEGER) COLLATE NOCASE);SELECT DISTINCT (((t1.c26) IS FALSE) IN ()) FROM t1, rt0, t0, vt0 WHERE (((- (0Xffffffffe1681b38)) IN ())); -- 0ms;
SELECT rt0.c4 FROM rt0, t0, t1, vt0 NOT INDEXED WHERE (((((CASE NULL  WHEN 0Xffffffffd1c6ff78 THEN NULL ELSE x'' END)OR((('Ybd䵪')>(0.2244057099905914)))))AND(((0xffffffff843f5e21) IS FALSE)))); -- 0ms;
SELECT DISTINCT LEAD((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c4)) IN ()), (((NOT (rt0.c0)))+(rt0.c2)), t0.c0) OVER ( ORDER BY ((((vt0.c0) BETWEEN (t0.c0) AND (t1.c59)))GLOB((((rt0.c4))>=((x'c9ab644b')))))  NULLS FIRST), (((vt0.c2)) BETWEEN ((rt0.c1)) AND ((((rt0.c1) NOT NULL)))), vt0.c1 FROM rt0, t0 WHERE (CAST(((x'a112') NOTNULL) AS INTEGER)) LIMIT -1199250087;SELECT ALL ((((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))GLOB(((rt0.c0) ISNULL))) FROM t0, t1 WHERE (((((0.3158438807640448)%('')))/(((((NULL)AND('')))AND(0.5577386751189165)))));SELECT (((((((('6hS{' COLLATE NOCASE)AND((((rt0.c2)) BETWEEN ((t1.c0)) AND ((t0.c0))))))AND((~ (rt0.c0)))))AND(NULL)))AND(((t0.c0)<<(t1.c59)))) FROM vt0, rt0, t0;SELECT DISTINCT ((rt0.c1) ISNULL) COLLATE BINARY FROM t0, t1, rt0 WHERE ((((((((((NULL IN (NULL)))OR(((x'') NOT BETWEEN ('-1') AND (0.394864224231942)))))AND(((0.9256283283984635)GLOB(NULL)))))AND(((NULL) BETWEEN (x'2437') AND ('554409918')))))OR(NULL))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED(CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c2 END), (((((((((vt0.c2)AND('')))OR(0.6843446632082626)))OR(t1.c26)))AND(t1.c0)) IN ()), (((+ (t1.c0)))&(ROUND(t1.c0, rt0.c0))) FROM vt0;SELECT ((rt0.c1)|(vt0.c0)) COLLATE RTRIM COLLATE RTRIM FROM vt0 WHERE (((x'' COLLATE NOCASE)|(((0.7933475351308797) NOT BETWEEN (x'') AND (0Xfffffffff9800eb4))))) GROUP BY ((CAST(rt0.c1 AS NUMERIC))<=(0.2862177834482943));SELECT DISTINCT GROUP_CONCAT(((rt0.c4)&(rt0.c0))) FROM t0, t1 WHERE ((- ((((((((('195539352')AND('ucW^M뚋G')))AND('LxT')))OR('Fba(Bya)')))AND(0.43204697159273764)))));SELECT DISTINCT (+ (TYPEOF(t1.c0))) FROM t1; -- 0ms;
SELECT ALL vt0.c1, NULL, ((- (t0.c0)) IN ()) FROM t0, t1;SELECT DISTINCT IFNULL(rt0.c2, rt0.c2) COLLATE BINARY FROM rt0, vt0, t1 WHERE (CASE ((NULL) IS TRUE)  WHEN ((((0.6400105145164731)AND(0.6130688913812852)))OR('1720058650')) THEN CAST(83636761 AS BLOB) ELSE CASE ''  WHEN NULL THEN NULL WHEN NULL THEN 0x7f91b9d6 WHEN 1.426007029E9 THEN '1184193390' END END); -- 0ms;
SELECT ALL CAST(x'' AS INTEGER), ((((RTRIM(t1.c26))AND((+ (t1.c59)))))AND(CASE 0Xffffffffc6325110  WHEN 0.4720916298617125 THEN t0.c0 WHEN t1.c59 THEN t1.c0 WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c0 END)), ((((CASE WHEN t1.c0 THEN 0.6656580999953581 ELSE t1.c0 END)OR(CASE rt0.c4  WHEN t1.c26 THEN t0.c0 WHEN vt0.c0 THEN NULL WHEN rt0.c3 THEN vt0.c2 WHEN t1.c0 THEN vt0.c2 WHEN vt0.c0 THEN rt0.c0 END)))OR(CAST(rt0.c2 AS NUMERIC))) FROM t1 WHERE (x'');SELECT DISTINCT ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) NOT NULL), COUNT(*) OVER (), CAST(((rt0.c4) BETWEEN (t0.c0) AND (vt0.c0)) AS INTEGER) FROM vt0, t0 ORDER BY ((t1.c59 COLLATE NOCASE) ISNULL) ASC  NULLS LAST;SELECT DISTINCT ((((vt0.c0)AND(rt0.c1))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c0)))) AND ((NOT (t1.c59)))) FROM rt0;SELECT DISTINCT COUNT(*), ((CAST(x'' AS TEXT))/((((rt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c0))))), ((((rt0.c2)<=(rt0.c3))) IS FALSE), AVG(CASE rt0.c4  WHEN t1.c59 THEN rt0.c3 ELSE rt0.c2 END) OVER (), NTH_VALUE(((NULL) NOT BETWEEN (((vt0.c2)<(vt0.c2))) AND (((vt0.c2)|(t0.c0)))), (- ('-1876666768')) COLLATE RTRIM) OVER () FROM t0, vt0;SELECT ALL ((NULL)IS NOT(CASE t1.c0  WHEN rt0.c1 THEN NULL ELSE vt0.c2 END)) FROM vt0, t1, t0;SELECT DISTINCT ((((rt0.c3) NOTNULL)) BETWEEN ((((t0.c0)) BETWEEN ((rt0.c3)) AND ((vt0.c2)))) AND (((rt0.c3) BETWEEN (t0.c0) AND (-2.62572438E8)))) FROM vt0, t1;SELECT ALL ((((-355771614) IS FALSE)) BETWEEN (((rt0.c4) IS TRUE)) AND (AVG(rt0.c3))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c2  WHEN '715685319' THEN t1.c26 END IN ()), (((((t1.c26) NOTNULL)))>((((rt0.c1)/(t0.c0))))), (((CAST(t1.c26 AS REAL)))>((TYPEOF(DISTINCT vt0.c2)))) FROM t1, rt0, t0;SELECT DISTINCT CAST(CASE WHEN t1.c0 THEN rt0.c4 END AS BLOB) FROM t0, t1 WHERE (((((((NULL)) BETWEEN ((1995404193)) AND ((0.9167378108409798))), ((NULL) NOT NULL), x'' COLLATE RTRIM))>(((((('zK')AND(NULL)))AND('')), CASE 1957448724  WHEN NULL THEN NULL WHEN x'' THEN NULL WHEN 0.009097342554055254 THEN -1487507881 ELSE '0.9567631964859413' END, (x'' IN ())))));SELECT ((((t1.c26)LIKE(t0.c0)))+((((rt0.c2))=((t0.c0))))), ((((0x3626eb8e) BETWEEN (rt0.c3) AND (vt0.c0)))&((t0.c0 IN ()))), ((t1.c59 IN ()) IN (rt0.c4 COLLATE NOCASE)) FROM t1, vt0 WHERE (HEX(DISTINCT (((195539352)) BETWEEN ((0.711638499856748)) AND ((x'')))));SELECT DISTINCT COUNT(*) FROM t1, rt0, vt0, t0 WHERE ((((x'9355' IN ())) IS FALSE)); -- 1ms;
SELECT DISTINCT (((((t1.c0))<=((rt0.c3)))) ISNULL), 0X73db4dba, AVG((+ (vt0.c1))) OVER () FROM t1, vt0, t0;SELECT ALL t1.c26 FROM vt0, t0, rt0 WHERE ((~ (CASE ''  WHEN -90869074 THEN 1675942657 ELSE 0xffffffff9c456d12 END)));SELECT DISTINCT ((((x'')+(t1.c59)))|((vt0.c1 IN ()))) FROM t1, t0 WHERE (((((CAST(0.4705399338151933 AS REAL))OR(NULL)))AND(((((((((x'')AND(x'')))OR(0.8883325336572124)))OR(NULL)))AND(NULL))))) LIMIT 554409918 OFFSET 430831561; -- 1ms;
SELECT DISTINCT 0.13260621537289785 COLLATE BINARY FROM rt0, t0, vt0, t1 WHERE (((CAST('➝' AS BLOB))OR((('') IS TRUE)))) GROUP BY '96992097' HAVING (((~ (t1.c26))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((((vt0.c2))<((rt0.c2))))); -- 0ms;
SELECT DISTINCT (((t1.c59 IN ())) NOT NULL), CAST('HzCFgMX' AS TEXT), t1.c26 FROM t1, rt0; -- 0ms;
SELECT ALL TOTAL(TOTAL((rt0.c0 IN ()))) FROM vt0, rt0, t1, t0;SELECT ALL (((0.6124430439899546 IN ()))IS(rt0.c4)) FROM t1 LIMIT 1234094242 OFFSET -437984658;SELECT ALL GROUP_CONCAT((t1.c26 IN (t1.c0))) FROM t1, t0, rt0, vt0 GROUP BY LIKELIHOOD((((rt0.c4, t1.c59, rt0.c3)) NOT BETWEEN ((t1.c0, rt0.c1, t1.c0)) AND ((rt0.c4, rt0.c2, vt0.c0))), 0.48757367795553674), ((NULL) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((t1.c0)-(rt0.c2)))), CASE WHEN ((((((((rt0.c4)AND(0.7075068826042917)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)) THEN x'3234' WHEN ABS(x'') THEN (vt0.c2 IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((t1.c0) ISNULL) END HAVING ((((t1.c26)LIKE(vt0.c0))) BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND ((+ (rt0.c4)))); -- 0ms;
SELECT ALL (~ (((t1.c59)<<(rt0.c2)))) FROM t1;SELECT DISTINCT (((t0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))) AND ((TYPEOF(DISTINCT rt0.c3)))) FROM t1, vt0, rt0 WHERE (NULL);SELECT (((vt0.c2, rt0.c2, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS BLOB), CASE NULL  WHEN vt0.c1 THEN t1.c0 WHEN t1.c59 THEN rt0.c3 WHEN t0.c0 THEN t1.c0 ELSE '' END, ((((rt0.c0)OR(vt0.c2)))AND(vt0.c2)))) AND (((- (t0.c0)), COUNT(*), 0.23408554663065861 COLLATE NOCASE))) FROM rt0, t1, vt0 WHERE (CASE WHEN (('1227196241') NOTNULL) THEN ((0X553e0f77)/('')) ELSE CASE WHEN '-959919964' THEN 0.34580098985726304 END END);SELECT DISTINCT ((CAST(t1.c0 AS BLOB))>(CAST(vt0.c2 AS TEXT))) FROM t1, t0, vt0, rt0 ORDER BY ((((0.7717529195377655 COLLATE RTRIM)OR((rt0.c0 IN ()))))OR(((x'')>(rt0.c2)))) ASC, LIKELY(((rt0.c3) BETWEEN (vt0.c2) AND (t0.c0))); -- 0ms;
SELECT DISTINCT AVG(((((((((rt0.c1)OR(t0.c0)))AND(rt0.c4)))AND(vt0.c2)))AND(rt0.c2))) FILTER(WHERE (((NOT (NULL))) NOTNULL)) OVER (), CASE WHEN ((t1.c26)>>(t1.c26)) THEN rt0.c4 WHEN (+ (rt0.c4)) THEN SUM(t1.c0) WHEN ((((((((rt0.c1)OR(t1.c0)))AND(t0.c0)))AND(vt0.c2)))OR(rt0.c0)) THEN (-1.693638689E9 IN ()) END, (((vt0.c0)) BETWEEN ((CAST(t1.c0 AS REAL))) AND ((((t1.c26) IS FALSE)))) FROM t1 WHERE (ABS(CAST(x'' AS INTEGER))) LIMIT -849267649;SELECT ALL CAST(t0.c0 AS BLOB) COLLATE RTRIM FROM t1, t0; -- 0ms;
SELECT ((CAST(t1.c26 AS BLOB))OR(t1.c59 COLLATE NOCASE)), (rt0.c1 IN ()), (TRIM(t1.c59) IN (((t1.c0)>>(x'')), CASE rt0.c0  WHEN t1.c26 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c2 WHEN x'' THEN t1.c26 WHEN rt0.c1 THEN NULL WHEN t1.c26 THEN vt0.c0 ELSE rt0.c0 END)) FROM t1;SELECT ALL ((- (rt0.c1)) IN ((NOT (t0.c0)))), AVG(((vt0.c2)*(rt0.c3))) FILTER(WHERE rt0.c4) OVER (), ((CAST(rt0.c2 AS BLOB)) NOT NULL), ((((t1.c26)LIKE(t0.c0)))/(((((NULL)OR(rt0.c0)))OR(rt0.c3)))), CASE WHEN ((rt0.c2) ISNULL) THEN '-636566340' END FROM t1, vt0 LIMIT -1364621976;SELECT ALL UPPER(DISTINCT (- (t1.c59))), TOTAL(((t1.c0)&(rt0.c1))) OVER (), (- (((1521155719)=(t1.c59)))) FROM t0, t1 GROUP BY (((rt0.c1, rt0.c3, vt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((((vt0.c2)<>(t1.c59)), ((t0.c0) NOT BETWEEN (-1953415764) AND (vt0.c1)), ((NULL) BETWEEN (vt0.c1) AND (rt0.c0)), (+ (vt0.c0)), ((NULL)IS NOT(t1.c26)))) AND ((((vt0.c1)!=(rt0.c0)), ((((t0.c0)AND(NULL)))OR(t1.c0)), (~ (rt0.c2)), (rt0.c1 IN ()), (NOT (rt0.c3))))) HAVING TYPEOF(DISTINCT ((0.7325149977367502)LIKE(t1.c26)));SELECT DISTINCT (- (((('')) NOT BETWEEN ((rt0.c4)) AND ((NULL))))) FROM t1, vt0, t0, rt0 WHERE ((((('')/(x'1798'))) IS TRUE)); -- 0ms;
SELECT ((((((rt0.c4)) BETWEEN ((t1.c0)) AND ((t1.c26)))))!=((t0.c0 COLLATE BINARY))) FROM t0, rt0, t1 INTERSECT SELECT CASE WHEN (~ (rt0.c2)) THEN (- (t0.c0)) WHEN (t1.c59 IN ()) THEN GROUP_CONCAT(t0.c0) WHEN GROUP_CONCAT(t1.c26) THEN CAST(rt0.c4 AS INTEGER) ELSE COUNT(vt0.c0) END FROM vt0, t1;SELECT (((((rt0.c1) IS TRUE)))!=(((('0.0') NOTNULL)))) FROM rt0 ORDER BY ((rt0.c4 IN (rt0.c0, vt0.c2)) IN ()); -- 0ms;
SELECT DISTINCT ((((CAST(t1.c26 AS REAL))AND(((t1.c26) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND((+ (t1.c59)))) FROM vt0 LIMIT -1552454457;SELECT (((rt0.c3)) BETWEEN (((- (t0.c0)))) AND ((((rt0.c4)*(vt0.c2))))) FROM rt0, t1, t0, vt0 LIMIT 1944344680 OFFSET -2018633756; -- 0ms;
SELECT DISTINCT ((((t0.c0)AND(t1.c0)))OR(rt0.c3)) COLLATE BINARY FROM rt0 WHERE (LOWER((((x''))>(('-86298661'))))) LIMIT 45501973 OFFSET -1650351450;SELECT ALL (((((t1.c26)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) NOT NULL) FROM t1, rt0, vt0; -- 0ms;
SELECT (((rt0.c4)) NOT BETWEEN ((IFNULL(t1.c0, t0.c0))) AND ((SUM(rt0.c3)))) FROM t0, t1, vt0, rt0 WHERE (CAST('-1396135029' AS NUMERIC)) GROUP BY (((rt0.c1)<=(rt0.c4)) IN (((rt0.c3) IS TRUE))); -- 0ms;
SELECT ((((((vt0.c2)OR(rt0.c0)))AND(NULL))) BETWEEN (t1.c0 COLLATE RTRIM) AND (((vt0.c0)&(vt0.c0)))), CAST(CASE WHEN t1.c59 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c2 WHEN rt0.c4 THEN t0.c0 ELSE 0.6094653627673121 END AS TEXT), ((((((rt0.c3) IS TRUE))OR(rt0.c0)))AND(((((((((t1.c59)AND(t0.c0)))OR(t1.c0)))OR(vt0.c0)))AND(t1.c0)))) FROM rt0 WHERE ((((CAST('' AS INTEGER)))!=((-1.3946171E7 COLLATE RTRIM)))) LIMIT 377490454 OFFSET 1180909246;SELECT DISTINCT LIKELY(DISTINCT ((((t1.c26)OR(rt0.c1)))OR(rt0.c2))) FROM t1, vt0, t0 NOT INDEXED, rt0 ORDER BY CASE WHEN ((((t1.c26)OR(vt0.c0)))OR(t0.c0)) THEN ((rt0.c1)IS NOT(rt0.c1)) ELSE INSTR(vt0.c1, vt0.c1) END, ((CAST(x'' AS TEXT)) NOT NULL) ASC  NULLS LAST; -- 0ms;
SELECT ALL (('889068731')OR(t1.c26 COLLATE RTRIM)), (CAST(t0.c0 AS INTEGER) IN (((vt0.c2)IS(rt0.c4)))), (((t0.c0 IN ())) BETWEEN (LIKE(vt0.c0, t0.c0)) AND (((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))OR(t1.c0)))) FROM t1, t0 GROUP BY CASE (vt0.c1 IN ())  WHEN CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN ((rt0.c3) IS TRUE) ELSE vt0.c0 COLLATE NOCASE END, ((CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END) ISNULL), CASE WHEN (t1.c26 IN (t1.c59)) THEN SQLITE_COMPILEOPTION_GET(NULL) WHEN ((t1.c26)>=(vt0.c1)) THEN CASE WHEN rt0.c4 THEN rt0.c0 WHEN t1.c26 THEN 'QJO' WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN t0.c0 THEN (vt0.c2 IN (t1.c0, vt0.c0)) ELSE ((vt0.c0)>('_7^!C')) END;SELECT ((((t1.c0)-(rt0.c4)))&(CAST(rt0.c0 AS NUMERIC))) FROM t1 GROUP BY (- (NULLIF(DISTINCT vt0.c0, rt0.c4))), ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)||(((((((((((((vt0.c1)OR(vt0.c2)))AND(rt0.c1)))AND(rt0.c4)))AND(t1.c26)))OR(t1.c0)))OR(vt0.c2)))), ((((rt0.c3)AND(t1.c59)))AND(t1.c26)) COLLATE BINARY;SELECT DISTINCT (((~ (0.8790494139610628)))%(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)))), rt0.c2, (((((((vt0.c2)AND(t1.c0)))OR(NULL))))<((((vt0.c0)-(t0.c0))))) FROM t1, rt0 LEFT OUTER JOIN vt0 ON (~ ((t1.c0 IN ()))) WHERE ((~ ((('-959919964')GLOB('0.975718175076551')))));SELECT DISTINCT t1.c0, ((((((((0xffffffff852a0669)AND(CASE t1.c59  WHEN rt0.c3 THEN t0.c0 END)))AND((((vt0.c0, vt0.c1, t1.c0, vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c1, t1.c59, vt0.c2, rt0.c2, -5.3586828E8)) AND ((vt0.c1, NULL, rt0.c0, t1.c0, rt0.c0))))))OR(CAST(vt0.c0 AS TEXT))))AND(((t1.c59) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), MAX((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE) FROM t1, t0, vt0 WHERE (((('-1143196069', '/[e._P8', x'1ad6')) BETWEEN ((NULL, NULL, 'Kꡃ')) AND (('1097075216', x'', 'tKJm9'))) COLLATE NOCASE);SELECT (((((((((NOT (rt0.c0)))AND(((vt0.c2)IS(t1.c26)))))AND(((((((((t1.c0)AND(vt0.c1)))AND(rt0.c4)))OR(t1.c0)))OR(rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM rt0, t0 WHERE (((CASE WHEN '' THEN x'' ELSE '''ᑩe蘮eu#' END) NOTNULL)) LIMIT 1001196646;SELECT DISTINCT (~ (CAST(t1.c59 AS INTEGER))) FROM vt0, rt0, t1 WHERE (CAST((NOT ('')) AS INTEGER)) LIMIT -1717071920; -- 0ms;
SELECT ALL ((((t0.c0)|(0x52202535)))<=(TOTAL(rt0.c0))) FROM rt0, vt0 WHERE (((CAST(NULL AS NUMERIC))*(0.8176618861415973))) ORDER BY ((vt0.c2) NOT BETWEEN (((t1.c59) IS TRUE)) AND ((((rt0.c2))<>((vt0.c1))))) ASC  NULLS FIRST;SELECT DISTINCT CASE WHEN ((vt0.c2)<(t1.c0)) THEN ((((((((((((t0.c0)OR(t1.c26)))OR(rt0.c1)))OR(t1.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) WHEN '{_h	' THEN (NULL IN ()) WHEN ((vt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)) THEN rt0.c4 COLLATE BINARY END FROM t1, t0 WHERE (CAST((NULL IN (NULL, x'')) AS NUMERIC));SELECT DENSE_RANK() OVER () FROM vt0, t0, rt0, t1 WHERE (((((('')) BETWEEN ((0X78d00b59)) AND ((7.15685319E8))))|(NULL))); -- 0ms;
SELECT TOTAL((rt0.c1 IN ())), ((((vt0.c0 COLLATE RTRIM)AND(0.6985408114896086)))OR(((x'0872') NOTNULL))), CAST(vt0.c2 AS TEXT) COLLATE BINARY FROM rt0, vt0, t0, t1 LIMIT 1244738223 OFFSET 1379539192; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)>=(t1.c0)))OR(LIKE(NULL, rt0.c0, '1'))))AND(((((((((rt0.c0)AND(rt0.c2)))OR(-3.55771614E8)))OR(rt0.c0)))OR(rt0.c3)))))OR(((rt0.c3)<=(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) FROM vt0, rt0 WHERE ((+ ((((NULL, x'318f', x''))==(('+b<%*\7', x'', 759868175))))));SELECT ALL NULLIF(DISTINCT '0.7764234889706135', ((t0.c0)>>(rt0.c3))) FROM t0, vt0, t1, rt0; -- 0ms;
SELECT ((AVG(rt0.c4))+(t1.c0)) FROM t0, rt0, vt0;SELECT DISTINCT ((rt0.c2) NOT BETWEEN (t0.c0) AND (t1.c0)) COLLATE RTRIM, CAST((((t1.c26)) BETWEEN ((vt0.c1)) AND ((t1.c59))) AS BLOB), CAST(LOWER(rt0.c0) AS BLOB) FROM vt0, rt0, t1 ORDER BY CAST(vt0.c2 COLLATE BINARY AS INTEGER) DESC  NULLS LAST;SELECT (((t1.c59) NOT BETWEEN (vt0.c2) AND (t1.c26)) IN ()) FROM t1, rt0 GROUP BY (((NOT (x''))) BETWEEN ((((x'', vt0.c2, t1.c59)) NOT BETWEEN (('FALSE', vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1)))) AND (((((t1.c0)AND(rt0.c1)))AND(vt0.c2))));SELECT (((((((((NOT (vt0.c2)))OR(((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)))))OR(vt0.c2 COLLATE NOCASE)))OR(((t1.c59)IS NOT(t1.c0)))))OR(((vt0.c1)>=(t0.c0)))) FROM rt0;SELECT ALL 0.9549393128365323 FROM rt0, vt0, t1; -- 0ms;
SELECT ALL t0.c0 COLLATE BINARY FROM vt0, t0, rt0 ORDER BY highlight(((t0.c0)||(rt0.c4)), ((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c1)), CAST(vt0.c0 AS TEXT), (rt0.c1 IN ())), (((((rt0.c1, vt0.c0, rt0.c1))=((rt0.c0, rt0.c4, t1.c0))))>(vt0.c1 COLLATE BINARY));SELECT (((vt0.c0)) BETWEEN ((t1.c59)) AND ((rt0.c1))) COLLATE RTRIM FROM rt0, t1, t0 WHERE (((CAST(0Xffffffff81545772 AS BLOB))%(((NULL)=('-1700536095')))));SELECT DISTINCT x'5f9d', GROUP_CONCAT(HEX(vt0.c2)) OVER (), (+ (((((NULL)AND(rt0.c4)))OR(rt0.c1)))) FROM vt0, t0, rt0, t1 LIMIT -450661043; -- 0ms;
SELECT ((((NULL)OR(((t0.c0)IS('YE4氷JCᐷ')))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) FROM vt0, rt0, t1 WHERE (IFNULL(DISTINCT CAST(NULL AS REAL), ((x'37bc') BETWEEN (x'') AND (-1.741898826E9)))) ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN NULL COLLATE NOCASE THEN LIKELY(vt0.c0) ELSE CAST(rt0.c3 AS BLOB) END DESC;SELECT ALL CASE WHEN rt0.c3 THEN ((((((((rt0.c1)AND(vt0.c2)))OR(t1.c0)))OR(rt0.c0)))AND(rt0.c1)) ELSE t1.c0 END FROM t0, t1 WHERE (CAST('1666027952' AS BLOB)) GROUP BY ((0Xffffffffe08340b0)|(((vt0.c2)OR(vt0.c1))));SELECT ALL LIKELY(DISTINCT NULL COLLATE NOCASE), ((((rt0.c1)AND(rt0.c0)))AND(MIN(t1.c26))), (((t1.c59, t1.c59, rt0.c2)) BETWEEN (((+ (t1.c26)), json_object(rt0.c2, NULL), ((rt0.c4) NOT BETWEEN (vt0.c0) AND (t1.c0)))) AND ((load_extension(vt0.c1), ((rt0.c4)==(t1.c0)), rt0.c1))) FROM t0 ORDER BY CAST(((rt0.c0) BETWEEN (t1.c0) AND (vt0.c2)) AS REAL) DESC;SELECT ALL x'' COLLATE BINARY, (t0.c0 IN ()), ((((t0.c0)OR(t1.c26)))AND(rt0.c4)) COLLATE RTRIM FROM rt0, t1 WHERE (((x'' COLLATE BINARY) NOTNULL)) GROUP BY (((((rt0.c2 IN ()))OR('')))AND(vt0.c0 COLLATE BINARY));SELECT ALL ((COUNT(t1.c0))&(((rt0.c0) IS TRUE))), CASE 0.06820835203610442  WHEN (rt0.c4 IN (rt0.c2, t1.c26)) THEN (vt0.c0 IN ()) WHEN ((t1.c0)<(rt0.c0)) THEN ((((((((t0.c0)OR(vt0.c1)))AND(t1.c59)))OR(vt0.c0)))AND(t1.c59)) WHEN (NOT (t0.c0)) THEN ((rt0.c3) IS FALSE) WHEN ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2) IS TRUE) WHEN ((t0.c0)GLOB(t1.c59)) THEN TOTAL(t1.c26) END, CAST(((t1.c59)<=(rt0.c4)) AS BLOB), ((((AVG(rt0.c1))AND(CAST(rt0.c2 AS REAL))))AND(CAST(t0.c0 AS BLOB))), ((((((((rt0.c3)AND(rt0.c0)))AND(t1.c0)))AND('')))AND(rt0.c3)) FROM t0, vt0, t1 WHERE ((((-1e500)) NOT BETWEEN ((x'e427' COLLATE RTRIM)) AND (((((1583290168))>((0Xfffffffffe1dc755)))))));SELECT DISTINCT (((~ (t1.c59)))<=(rt0.c2 COLLATE BINARY)), CAST(LOWER(DISTINCT t1.c26) AS NUMERIC), ((rt0.c4)OR((((rt0.c1, rt0.c0, rt0.c4))<=((rt0.c0, rt0.c2, t1.c0))))) FROM t0, t1;SELECT TRIM((NOT (t1.c59)), x'') FROM t0, vt0 NOT INDEXED, rt0, t1 WHERE (((CASE NULL  WHEN '-545669032' THEN x'' ELSE NULL END)<=(((0x5a46d773) BETWEEN (x'') AND ('2140256726'))))); -- 0ms;
SELECT NULL, NULL, COALESCE(TRIM(DISTINCT rt0.c4, t1.c0), (((t0.c0, rt0.c3, rt0.c0))<>((x'', rt0.c2, rt0.c2)))) FROM vt0;SELECT ALL ((((vt0.c0)>=(rt0.c2))) BETWEEN (((t1.c0)<>(t0.c0))) AND (((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) FROM t0, t1, rt0 ORDER BY CAST(SQLITE_VERSION() AS BLOB) ASC, ((((vt0.c2)IS NOT(rt0.c4))) ISNULL) ASC LIMIT -415375266;SELECT rt0.c2 FROM t1 WHERE ((NOT (((0x520d35ea) BETWEEN (0X5d2e34a0) AND (NULL)))));SELECT ((((((((vt0.c2)AND(vt0.c1)))AND(t1.c0)))AND(((t1.c59) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(IFNULL(rt0.c1, vt0.c2))), ((MAX(t0.c0))||((((rt0.c0))<>((rt0.c0))))), MIN(MIN(MAX(vt0.c2))) FROM t0, rt0, t1, vt0 WHERE ((((((((((('8re㙛nh')OR('875924965')))OR(((NULL)==('-1781538486')))))OR((('s') NOTNULL))))AND(0.6513385616634829 COLLATE NOCASE)))OR((0Xffffffffbede4a5b IN (x'')))));SELECT DISTINCT (((- (rt0.c2))) ISNULL), (((~ (t1.c59))) NOT NULL), ((((rt0.c4)-(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END) AND (((vt0.c2) BETWEEN (rt0.c3) AND (x'')))), ((rt0.c1 COLLATE RTRIM) ISNULL), ((((rt0.c4)AND(UPPER(vt0.c1))))AND(((vt0.c2)/(t1.c26)))) FROM vt0, t0, t1 LIMIT 238980908;SELECT DISTINCT (NOT ((- (vt0.c0)))) FROM t0;SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((AVG(rt0.c2))) AND (((NOT (rt0.c1))))) FROM t1, t0 WHERE (((('-355771614', 962741734, x'')) NOT BETWEEN ((ABS('1600336347786254430T-7607294965762513904 -1381033935141237679T1322 1119 1492-1844-'), ABS(x'd43f3978'), (0.6076552870149837 IN ()))) AND (((0xffffffff8b9a31c2 IN ()), ((0.11021767191537912)IS NOT(0.7751381916240214)), CASE 0.49317741555509165  WHEN 1.005381822E9 THEN NULL ELSE x'' END))));SELECT GROUP_CONCAT(((vt0.c0) IS TRUE)), (((t1.c0 IN ())) IS FALSE), ((AVG(t1.c59))|(CAST(rt0.c4 AS INTEGER))) FROM vt0, t1, t0, rt0; -- 0ms;
SELECT ALL ((((((((((((rt0.c0)OR(t1.c0)))OR(vt0.c0)))OR(LIKELIHOOD(rt0.c4, 0.7036857412242807))))OR((- (vt0.c0)))))AND((((rt0.c3, rt0.c4, vt0.c2, vt0.c1, t1.c0))<>((t0.c0, NULL, t0.c0, rt0.c3, rt0.c3))))))AND(((rt0.c2)!=(t0.c0)))), (((((+ (rt0.c0)))AND(((t0.c0) IS TRUE))))OR(t0.c0)), (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))LIKE(t1.c59 COLLATE RTRIM)) FROM t1, rt0;SELECT ALL DENSE_RANK() OVER ( GROUPS rt0.c0 PRECEDING EXCLUDE GROUP) FROM vt0, t0, rt0 WHERE (json_extract(((1.95539352E8) IS FALSE), ((('-0.0')) BETWEEN ((0.2415096879283477)) AND ((NULL))))); -- 0ms;
SELECT DISTINCT ((((((t1.c0) BETWEEN ('') AND ('')))OR(((vt0.c2) ISNULL))))AND(CASE vt0.c0  WHEN t1.c0 THEN NULL ELSE rt0.c2 END)), COUNT(*), ((MAX(t1.c0)) NOT NULL) FROM t1;SELECT (- (((vt0.c0) NOT NULL))) FROM t0 WHERE (((0.5971915596229964) NOT BETWEEN (367030369) AND ('1816810442')) COLLATE BINARY);SELECT DISTINCT AVG(json_extract(vt0.c0, rt0.c2, rt0.c1, vt0.c1)) OVER ( PARTITION BY ((((rt0.c2) IS FALSE)) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((vt0.c1)/(rt0.c4)))), t1.c26) FROM rt0 WHERE (((CAST('k' AS TEXT))IS NOT(((((x'fb84')AND('7!K0u')))AND(NULL))))) LIMIT 287917779 OFFSET -186299649;SELECT ((0.4172030484247242)%(((t1.c0)+(vt0.c1)))) FROM rt0, t0 WHERE (((225803005 IN (NULL)) IN ()));SELECT ALL CHAR(((rt0.c3) IS TRUE), ((((rt0.c0)OR(vt0.c0)))OR(rt0.c3)), (rt0.c1 IN (t1.c0))), ((((vt0.c0)==(rt0.c0)))||(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))), 0.16233783514472222 FROM t0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((t1.c26)>(t0.c0)))<=(t0.c0))  NULLS FIRST;SELECT (SUM(vt0.c2) IN ()) FROM rt0, t1; -- 0ms;
SELECT ((((786309780)AND(CASE t1.c26  WHEN rt0.c3 THEN rt0.c3 END)))OR(((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))), (CASE WHEN rt0.c0 THEN t1.c59 END IN ()), (((t1.c0)) BETWEEN (((((t1.c26, rt0.c1, t0.c0)) NOT BETWEEN ((vt0.c2, rt0.c1, rt0.c1)) AND ((vt0.c1, t1.c0, vt0.c2))))) AND (((- (t1.c0))))) FROM vt0, t1, rt0, t0 WHERE (CASE 'd৆'  WHEN 0xffffffffeacb5b22 THEN 0X670a1545 ELSE 0xffffffff8fd29a3d END COLLATE RTRIM) LIMIT 875687803; -- 0ms;
SELECT DISTINCT CAST(t1.c59 COLLATE RTRIM AS REAL) FROM rt0 GROUP BY CAST((NOT (t1.c59)) AS NUMERIC);SELECT DISTINCT (~ (((vt0.c1) NOT BETWEEN (t1.c26) AND (rt0.c3)))) FROM t1, t0 WHERE (LOWER((('800723530') IS TRUE)));SELECT ((0.4950079983633263) BETWEEN (((vt0.c2) IS TRUE)) AND (vt0.c1 COLLATE BINARY)) FROM t0, vt0, rt0, t1 WHERE (CAST((((x'')) BETWEEN ((NULL)) AND ((NULL))) AS NUMERIC)); -- 0ms;
SELECT (COUNT(rt0.c3) IN (rt0.c0 COLLATE RTRIM)), CASE ((vt0.c0) NOT BETWEEN (t1.c59) AND (rt0.c3))  WHEN t1.c0 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN t1.c0 ELSE rt0.c1 END END, ((((((((((vt0.c0)+(rt0.c2)))OR(vt0.c2)))AND(((rt0.c4)+(x'')))))OR(TRIM(DISTINCT t1.c0, t1.c0))))AND(('0.9832709192000169' IN ()))) FROM t0 WHERE (0.5335306026775093);SELECT ALL x'' FROM rt0; -- 0ms;
SELECT ALL (((NOT (rt0.c0))) BETWEEN ((((t0.c0)) BETWEEN ((rt0.c0)) AND ((NULL)))) AND ((~ (t1.c0)))) FROM t1, vt0, t0, rt0 WHERE (TYPEOF(DISTINCT TYPEOF(DISTINCT '324611383'))); -- 0ms;
SELECT x'0358', CASE x''  WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c59))) THEN rt0.c2 COLLATE BINARY ELSE ((vt0.c1)+(rt0.c2)) END, (((((rt0.c3)) NOT BETWEEN ((t1.c59)) AND ((t1.c0)))) BETWEEN (((t1.c0)=(rt0.c4))) AND (((((vt0.c0)OR(vt0.c2)))AND(t1.c26)))) FROM rt0, t0 GROUP BY ((CASE WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END) NOT BETWEEN (((rt0.c4)>=(rt0.c4))) AND (CAST(rt0.c0 AS BLOB)));SELECT (~ (((vt0.c0)||(t1.c59)))), COUNT(*), ((ABS(t0.c0))-('{}')) FROM rt0, t1, t0, vt0; -- 0ms;
SELECT DISTINCT (((t1.c59)) NOT BETWEEN (((~ (x'443a')))) AND ((((0.3607319913876469) BETWEEN (0.04991000274278168) AND (vt0.c0))))) FROM vt0, t1 NOT INDEXED WHERE (0.4869050371829253) LIMIT -936830712 OFFSET 529548956; -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN t0.c0 THEN NULL ELSE rt0.c0 END) FROM t0, t1;SELECT DENSE_RANK() OVER (), ((COUNT(vt0.c0))=(NULL)), ((((t1.c0)AND(t1.c59)))LIKE(TOTAL(rt0.c3))) FROM rt0 WHERE (CASE CAST(1205288825 AS TEXT)  WHEN CAST(0X2656d587 AS TEXT) THEN ('1521155719' IN ()) END) LIMIT -663234601;SELECT DISTINCT ((((((t0.c0)OR(vt0.c2)))AND(t1.c59)))/(0.4673672694055281)), LIKELY(DISTINCT ((rt0.c4)GLOB(t1.c26))), ((GLOB(rt0.c3, rt0.c3))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN t1.c26 ELSE rt0.c1 END)) FROM t0, vt0, rt0;SELECT DISTINCT ((((vt0.c0)OR(rt0.c4)))OR(rt0.c4)) COLLATE NOCASE FROM t1 NATURAL JOIN t0;SELECT DISTINCT (+ (((rt0.c1) NOTNULL))) FROM t0, t1, vt0 GROUP BY ((((rt0.c0) ISNULL))IS NOT(((rt0.c1)|(vt0.c0)))) HAVING rt0.c0;SELECT DISTINCT 0.7764234889706135 FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT CASE CASE NULL  WHEN t1.c26 THEN rt0.c0 END  WHEN NULL THEN (~ (vt0.c2)) WHEN rt0.c1 THEN ((t1.c0) BETWEEN (rt0.c2) AND (vt0.c0)) WHEN rt0.c2 THEN rt0.c4 ELSE ((t1.c26)<=(t1.c0)) END FROM rt0 ORDER BY ((t1.c0 COLLATE BINARY) IS TRUE) ASC  NULLS LAST, (((((((('-13946171')OR(((rt0.c4)!=(t1.c0)))))OR(json_array_length(t1.c26))))AND(CAST(t0.c0 AS BLOB))))AND(((rt0.c2)IS NOT(t1.c59))))  NULLS FIRST, CAST(((((rt0.c2)AND(t1.c0)))AND(t1.c26)) AS INTEGER);SELECT ALL (SUM('-958745540') IN ()) FROM vt0, t0, t1, rt0 WHERE (((((((((LIKELIHOOD(x'', 0.9393446498463572))OR(json(0X541e759))))OR(DATE(-87925179, '1071703619', x'', 0.4977871668198789, ' ᲪK&'))))AND(CASE WHEN x'8806' THEN NULL ELSE NULL END)))OR(((0.25197413502216015)>=(x''))))); -- 0ms;
SELECT DISTINCT COUNT(((((vt0.c1)OR(vt0.c2)))OR(rt0.c4))) OVER ( ORDER BY vt0.c1  NULLS LAST, CASE WHEN ((((vt0.c2)OR(rt0.c0)))OR(rt0.c3)) THEN COALESCE(DISTINCT t0.c0, rt0.c2) END ASC, ((((vt0.c2 IN ())))>=((NULL)))  NULLS FIRST), CASE WHEN rt0.c4 COLLATE RTRIM THEN ((((vt0.c2)OR(rt0.c4)))AND(t0.c0)) ELSE ((vt0.c1) NOTNULL) END, CASE vt0.c0 COLLATE NOCASE  WHEN (((('\rvo')AND(t0.c0)))AND(vt0.c1)) THEN CAST(NULL AS NUMERIC) WHEN MAX(rt0.c3) THEN TRIM(rt0.c4, rt0.c3) WHEN ((vt0.c0)IS(rt0.c0)) THEN CASE vt0.c1  WHEN t1.c26 THEN rt0.c3 END ELSE (rt0.c1 IN (t1.c26, t1.c0)) END FROM t1, rt0, t0, vt0; -- 4ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) NOT NULL) FROM t1, vt0, t0, rt0 WHERE ((CAST('' AS REAL) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c4, vt0.c1, rt0.c0)) NOT BETWEEN (((((t1.c59)) NOT BETWEEN ((rt0.c1)) AND ((x'64f2'))), rt0.c3 COLLATE BINARY, t1.c0 COLLATE NOCASE)) AND ((((t1.c59)=(vt0.c1)), ((vt0.c0)AND(rt0.c0)), ((vt0.c1)||(t1.c0))))) FROM t0, t1, rt0 WHERE ((- (NULL COLLATE BINARY)));SELECT DISTINCT t0.c0, (((('-1494883675')OR(((((t0.c0)AND(t1.c59)))OR(rt0.c4)))))AND(vt0.c1 COLLATE BINARY)), QUOTE(CASE WHEN t0.c0 THEN rt0.c4 END) FROM rt0, t1;SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (t1.c59) AND (t1.c0)))&((vt0.c2 IN ()))) FROM t0, vt0, t1, rt0 GROUP BY CASE ((0.8038306836913345)<<(rt0.c0))  WHEN ((((((((rt0.c4)AND(rt0.c0)))OR(1.682632946E9)))AND(x'')))AND(t1.c0)) THEN NULL ELSE ((rt0.c4)OR(vt0.c2)) END; -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)AND(vt0.c0)))OR(t1.c59))) NOTNULL), TOTAL((- (rt0.c3))) FILTER(WHERE (- (((((((((((((rt0.c1)AND(rt0.c4)))AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)))OR(vt0.c1)))AND(vt0.c2))))) OVER (), ((((((rt0.c0)OR(vt0.c2)))AND(vt0.c2))) NOT NULL) FROM vt0 WHERE (((x'7f96') BETWEEN ('-2110045003') AND ('j_lᰮot')) COLLATE NOCASE);SELECT DISTINCT CASE WHEN CASE vt0.c1  WHEN rt0.c3 THEN t1.c59 WHEN rt0.c1 THEN vt0.c2 WHEN t1.c26 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c2 END THEN COUNT('') ELSE ((rt0.c4)<(rt0.c0)) END, t1.c26, (((((+ (rt0.c3)))AND(MIN(vt0.c0))))AND(((rt0.c0)>(t0.c0)))) FROM t1, vt0;SELECT DISTINCT (~ ((~ (rt0.c0)))), (((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c2))))IS((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c2))))), ((((t0.c0) BETWEEN (vt0.c2) AND (rt0.c0)))>>(t1.c26 COLLATE NOCASE)) FROM vt0, t1 WHERE (CASE WHEN (('j&v{d#LnP') NOT BETWEEN ('') AND (x'')) THEN ((0.7067326379627404)|(x'')) WHEN json(x'') THEN (('듊Wm蝑j%(')<>(NULL)) WHEN ((x'') NOT BETWEEN ('-109048140') AND (x'')) THEN SQLITE_VERSION() WHEN (('875924965') BETWEEN (0.8315051633122329) AND (x'')) THEN ((('-467069897'))<>(('/V'))) WHEN (('0.2095518524137352')IS NOT('')) THEN (((x'df78', -9.59919964E8, 0.24651400425236192)) NOT BETWEEN ((NULL, x'', NULL)) AND ((0.6087073684896764, x'', 0.6205311346182564))) ELSE LIKELIHOOD(NULL, 0.12724782133187174) END);SELECT DISTINCT ((rt0.c2) BETWEEN (t0.c0) AND (NULL)) COLLATE RTRIM FROM t1 ORDER BY (NOT (((rt0.c3) IS TRUE))), ((t1.c0 COLLATE RTRIM) BETWEEN (((rt0.c0) BETWEEN (t1.c0) AND (rt0.c2))) AND (((vt0.c1)|(vt0.c0)))) ASC  NULLS LAST;SELECT DISTINCT ((COUNT(rt0.c0))&(((rt0.c0)IS(rt0.c0)))) FROM rt0 WHERE (x'') ORDER BY rt0.c2 ASC  NULLS FIRST, rt0.c4 ASC, HEX((- (t1.c0))) DESC;SELECT ALL (((rt0.c4)) BETWEEN (((rt0.c1 IN (rt0.c0)))) AND ((((rt0.c4) IS FALSE)))) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT (NOT (TOTAL_CHANGES())) FROM t1 WHERE ('af'); -- 0ms;
SELECT ((TOTAL(t1.c26))||(CASE WHEN '73779219' THEN t1.c59 WHEN t1.c59 THEN rt0.c4 WHEN rt0.c3 THEN t1.c0 END)) FROM rt0, t1 WHERE (CAST(x'' COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT (((rt0.c4 IN (vt0.c1))) IS TRUE), ((((vt0.c0) IS FALSE))<<(COUNT(*))), COUNT(CAST(vt0.c0 AS INTEGER)) FROM t1, vt0;