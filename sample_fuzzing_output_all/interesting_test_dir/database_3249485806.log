-- Time: 2024/06/06 00:46:43
-- Database: database6
-- Database version: 3.40.0
-- seed value: 3249485806
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1, prefix = 583); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 REAL ); -- 1ms;
UPDATE OR FAIL rt1 SET (c0)=(0.9155135497598648); -- 0ms;
REINDEX  rt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(1003080799) WHERE ((CAST(vt0.c1 AS BLOB))LIKE((((vt0.c1))!=((vt0.c0))))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(0xfad6d4f); -- 0ms;
REINDEX  rt1; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c2)=('', 0.19489952643314323); -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE rt1 SET c3='-253040926', c2=x''; -- 0ms;
UPDATE rt1 SET (c1, c1)=('챟+', -1434788543); -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0='-253040926' WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END) IS TRUE); -- 0ms;
PRAGMA incremental_vacuum(-253040926); -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (NULL, 'mx-?z', '86761380', x''); -- 1ms;
INSERT OR IGNORE INTO rt1 VALUES ('챟+', x'', '-1434788543', 'QD356T-8023220085766138754-8236680790151271068--ᕠE'), (x'', 0.07521751655632358, -1091693216, '챟+'), ('-241077316', NULL, '>w朚d	\Kw', '-510040294'); -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL, x'786e'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INT ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 1ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 BEFORE INSERT ON t0 FOR EACH ROW  WHEN ((t0.c0 IN ()) IN ()) BEGIN UPDATE t0 SET (c0)=(x'') WHERE CASE ((((t0.c0)AND(t0.c0)))OR(t0.c0))  WHEN ((t0.c0) NOT NULL) THEN (((('1106646719')AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0)-(t0.c0)) END;SELECT RAISE(FAIL, 'asdf');END; -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
ANALYZE; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES ('', NULL); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
PRAGMA temp.journal_mode = DELETE; -- 0ms;
PRAGMA ignore_check_constraints; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
DELETE FROM t1 WHERE ((((((((NULLIF(t1.c0, NULL))OR(0.7374936851278024)))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3, c1, c3)=(NULL, 0.05294136088655155, x'1b2d'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c2, c3) VALUES ('1003080799', x'', '-1434788543'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 1ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES (-5.10040294E8); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (0X3bc9cc5f, '0.9155135497598648', x'1d4d', 0Xffffffffaa7add41), (0x71a0451a, x'15ae', NULL, 2.63023951E8), ('2A_F', NULL, '156495955', x'0ec4'); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c61; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (''); -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1401758422);\n; -- 0ms;
REINDEX; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c3=0.7892916999981622, c1='1076360996' WHERE CAST(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) AS BLOB); -- 1ms;
UPDATE OR IGNORE t1 SET (c0)=(0.3503435291831227) WHERE (+ (t1.c0 COLLATE NOCASE)); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES ('-384544680'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT CASE WHEN 0.40802233297088597 THEN CASE 0.5013923645702727  WHEN 0.8509860994765008 THEN vt0.c0 END WHEN MIN(vt0.c1) THEN CASE rt1.c3  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c1 END WHEN MAX(vt0.c1) THEN CAST(rt1.c3 AS REAL) ELSE ((t1.c0)IS NOT(x'')) END FROM vt1, t1, vt0, rt1 WHERE (((('')) BETWEEN ((NULL)) AND (((- ('I9v*gV')))))); -- 0ms;
SELECT ALL vt1.c0, UNLIKELY(DISTINCT rt1.c1), rt1.c2, ((rt1.c3)&(vt1.c0)), ((CASE WHEN vt1.c0 THEN rt1.c1 END)IS(((rt1.c3)+(rt1.c0)))), (rt1.c1 COLLATE BINARY IN ()), (((vt0.c0)) NOT BETWEEN ((NULL)) AND (((- (vt1.c0))))) FROM vt0 WHERE (CAST(x'' AS NUMERIC) COLLATE NOCASE);SELECT DISTINCT DENSE_RANK() OVER () FROM t1, vt1, rt1 ORDER BY vt0.c0;SELECT ALL GROUP_CONCAT((+ (rt1.c0))) FROM vt0, rt1; -- 0ms;
SELECT CAST(COUNT(*) AS NUMERIC), ((rt1.c2)LIKE(rt1.c2)), CASE ((vt1.c0) ISNULL)  WHEN t1.c0 THEN vt0.c1 COLLATE RTRIM ELSE CAST(vt0.c0 AS NUMERIC) END FROM t1, rt1, vt0, vt1; -- 0ms;
SELECT (rt1.c0 IN (t1.c0)) COLLATE BINARY FROM vt1, rt1, t1, vt0; -- 0ms;
SELECT ((x'1f91') BETWEEN (GROUP_CONCAT(vt0.c0)) AND (((((vt0.c1)AND(NULL)))OR(vt0.c1)))), ((((vt0.c1) NOT BETWEEN (rt1.c3) AND (0.40802233297088597))) NOT NULL), json_patch((rt1.c0 IN ()), rt1.c0 COLLATE NOCASE) FROM rt1, vt0 NOT INDEXED LIMIT -410291729; -- 0ms;
SELECT CAST(t1.c0 AS INTEGER) FROM vt0;SELECT DISTINCT ((((((((((t1.c0) IS FALSE))OR((~ (rt1.c3)))))OR(((0Xffffffff9a480f31) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(x'efb8')))OR(rt1.c1 COLLATE RTRIM)) FROM vt0, rt1, vt1, t1 WHERE (((CASE WHEN x'' THEN '662062664' WHEN '1578707796' THEN '-1091693216' WHEN x'eed7' THEN 0.00867831972347688 ELSE NULL END)<((('^6燯e>K4')/(0.6265230190962441))))) ORDER BY ((CASE WHEN rt1.c1 THEN vt0.c0 END)>>((- (rt1.c2)))) DESC; -- 0ms;
SELECT DISTINCT (((('')AND((- (t1.c0)))))OR(vt0.c1 COLLATE BINARY)), ((rt1.c0)LIKE('''N~푃<^)m')), ((((((rt1.c3)>(vt0.c1)))AND(QUOTE(rt1.c3))))OR(-384544680)) FROM vt1, vt0, rt1 WHERE (((((NULL)AND(x'541e')))LIKE((NOT (NULL)))));SELECT ALL ((((rt1.c2) ISNULL))||(((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))), vt1.c0, ((rt1.c1) NOT NULL) FROM vt1, t1;SELECT DISTINCT (NOT ((- (vt1.c0)))), CASE rt1.c3 COLLATE BINARY  WHEN CAST(rt1.c0 AS NUMERIC) THEN ((vt1.c0) IS TRUE) END, CASE WHEN ((((rt1.c1)AND(vt1.c0)))OR(rt1.c0)) THEN ((vt0.c1)<>(rt1.c0)) WHEN CAST(rt1.c1 AS NUMERIC) THEN (rt1.c2 IN ()) WHEN CAST(rt1.c1 AS REAL) THEN (NOT (vt1.c0)) ELSE CAST(rt1.c3 AS NUMERIC) END, ((((vt0.c1)*(vt0.c0))) BETWEEN (CAST(rt1.c2 AS BLOB)) AND ((vt0.c1 IN (rt1.c1)))), vt0.c0 FROM vt0, rt1 NOT INDEXED, vt1, t1 WHERE (CAST(((NULL) NOT NULL) AS NUMERIC)); -- 0ms;
SELECT (('-1088017844' COLLATE NOCASE)<=(rt1.c2 COLLATE BINARY)) FROM vt1 WHERE ((+ ((NULL IN ()))));SELECT DISTINCT ((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))>(rt1.c2)), CAST(rt1.c1 COLLATE NOCASE AS NUMERIC), ((vt0.c0 COLLATE RTRIM) ISNULL) FROM t1;SELECT ALL 0.19489952643314323 FROM rt1, vt0, t1 WHERE (CAST(1401758422 AS REAL)); -- 0ms;
SELECT DISTINCT ((NULL)||(rt1.c2)) COLLATE BINARY COLLATE BINARY FROM vt1, t1, vt0;SELECT DISTINCT ((rt1.c2)!=(rt1.c1)) COLLATE NOCASE FROM vt0, vt1, rt1 WHERE (CASE '-1938407377' COLLATE NOCASE  WHEN CASE NULL  WHEN '1578707796' THEN '' WHEN 0.46039513809925703 THEN x'2f1c6e2d' WHEN NULL THEN NULL ELSE '''N~푃<^)m' END THEN 'Qwz' ELSE ((NULL)OR(0.35324883875085666)) END); -- 1ms;
SELECT DISTINCT '-510040294', (((((((((((t1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))OR(((vt1.c0)>(rt1.c3)))))OR(((vt0.c0)-(rt1.c2)))))OR(ABS(t1.c0))))AND((vt0.c0 IN ()))), ((((((((((rt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(rt1.c1)))OR(t1.c0)))/(((rt1.c1) ISNULL))) FROM vt1, vt0, t1, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c3) NOTNULL)) NOTNULL) FROM rt1, vt1, t1; -- 0ms;
SELECT ALL json_remove(((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)), CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END, AVG(rt1.c1), TOTAL(vt0.c0)) FROM vt0, rt1, t1, vt1; -- 0ms;
SELECT DISTINCT rt1.c2 FROM vt0, rt1 WHERE ((((NULL IN (NULL, '-2084644137')))%(0.40802233297088597 COLLATE RTRIM))) LIMIT 484287140; -- 0ms;
SELECT TOTAL(COALESCE(DISTINCT rt1.c0, rt1.c0)) OVER () FROM rt1, t1, vt0 WHERE ((+ (CASE WHEN '-Y' THEN 1003080799 WHEN x'' THEN x'' WHEN 'n1g7' THEN NULL ELSE x'e0b6' END))) GROUP BY (- (((((rt1.c3)AND(vt0.c1)))OR(vt1.c0)))) HAVING (((rt1.c3))=((rt1.c3))) COLLATE RTRIM COLLATE RTRIM;SELECT DISTINCT (((('-493891224')||(rt1.c2)))<(rt1.c0 COLLATE BINARY)) FROM vt0, vt1, rt1, t1; -- 0ms;
SELECT CAST((((vt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS TEXT) FROM vt1;SELECT CASE ((0.6570457447767674)LIKE(vt1.c0))  WHEN (~ (rt1.c3)) THEN (- (vt0.c0)) WHEN 0.6732246382311127 THEN rt1.c3 WHEN NULL THEN COUNT(-4.10291729E8) WHEN (rt1.c1 IN ()) THEN CAST(vt0.c1 AS INTEGER) WHEN '-1' THEN ((rt1.c3)LIKE(rt1.c2)) END, MIN(SUM(((((((((vt0.c0)AND(vt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c3)))), MAX(((rt1.c2)<(rt1.c0))) FROM vt1 WHERE (((((-2.084644137E9) IS FALSE)) NOTNULL));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 WHERE ((NOT (((NULL) NOT BETWEEN ('0.0') AND ('j?'))))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((((rt1.c3))!=((rt1.c0))))) AND (((NOT (rt1.c3))))) FROM vt0 WHERE (DATE('-1831646697', 'Tk', x'93c6') COLLATE RTRIM);SELECT ALL SUM((- (rt1.c1))) OVER (), (((vt0.c1)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND ((((vt1.c0) ISNULL)))), (vt1.c0 COLLATE BINARY IN ()) FROM vt1, t1, vt0;SELECT DISTINCT NULL, ABS(TRIM(vt0.c0, rt1.c3)), ((CAST(rt1.c1 AS REAL)) IS FALSE) FROM vt0;SELECT ((((((rt1.c3)AND(vt0.c1)))AND(vt0.c0))) ISNULL), CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN UNLIKELY(rt1.c1) THEN rt1.c3 END, (((vt0.c1 IN ()))>=(CAST(rt1.c1 AS NUMERIC))) FROM t1 WHERE ((((('1322363669')>>('Tk')))/(((-4.10291729E8)IS NOT('KI')))));SELECT DISTINCT (((((vt0.c1, vt0.c1, '1423632268')) BETWEEN ((rt1.c1, t1.c0, rt1.c2)) AND ((t1.c0, rt1.c2, rt1.c3))))<<(((rt1.c1)IS(rt1.c3)))), x'e3e5', (((((rt1.c1))>((vt0.c1))))OR(CASE WHEN 0.4275365762050325 THEN vt0.c0 END)) FROM vt1, t1, vt0, rt1 NOT INDEXED; -- 0ms;
SELECT 0.963750965396449, RANK() OVER (), vt1.c0 COLLATE BINARY FROM vt0, t1 WHERE ((((('0.6570457447767674'))>=((NULL))) IN ()));SELECT DISTINCT '', ((MAX(vt0.c1))>(((vt0.c0)/(NULL)))), (((rt1.c3)) BETWEEN ((TOTAL(rt1.c2))) AND ((COUNT(vt0.c1)))) FROM rt1, vt1, t1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE NOCASE FROM rt1, vt1, vt0, t1; -- 0ms;
SELECT ALL ((((TYPEOF(vt0.c0))OR(ABS(DISTINCT rt1.c0))))AND(((t1.c0) BETWEEN ('TRUE') AND (rt1.c1)))) FROM t1, vt0, rt1, vt1 WHERE (((CAST(5.90619616397059E-4 AS BLOB)) BETWEEN (CAST(745710345 AS BLOB)) AND ((~ (-1.091693216E9))))) ORDER BY CASE WHEN ((t1.c0)LIKE(rt1.c2)) THEN ((vt1.c0)>=(t1.c0)) END DESC  NULLS LAST, (((((vt0.c1))<((vt1.c0))))%(((vt0.c0)/(rt1.c3)))) DESC, ((rt1.c0)<=(1e500)) COLLATE NOCASE ASC, ((((((rt1.c0)OR(vt0.c1)))OR(vt0.c1)))IS(((vt1.c0) IS TRUE))); -- 0ms;
SELECT ALL ((((((((((((((((rt1.c0)OR(t1.c0)))AND(rt1.c3)))AND(vt1.c0)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c0)))AND(rt1.c1 COLLATE RTRIM)))OR(((((rt1.c0)OR(t1.c0)))AND(0.5013923645702727)))) FROM vt0, t1, rt1 ORDER BY ((ABS(DISTINCT NULL))&(vt1.c0)) LIMIT -1972102459 OFFSET 811583324;SELECT DISTINCT ((((0Xffffffffa9e9bfad)OR((NOT (0.013364812795118253)))))AND((((rt1.c3)) NOT BETWEEN ((x'3d1d')) AND ((rt1.c0))))) FROM rt1 WHERE (CASE CASE WHEN 'qwz' THEN '1458890111' ELSE NULL END  WHEN ((((x'')AND(0x29333703)))OR(0.0414100442494707)) THEN UNLIKELY(DISTINCT 0Xffffffffeab9724a) END); -- 1ms;
SELECT ((rt1.c1 COLLATE RTRIM)||(CASE rt1.c2  WHEN rt1.c3 THEN vt0.c1 END)), NTILE(CASE (((rt1.c3)) BETWEEN ((t1.c0)) AND ((rt1.c1)))  WHEN ((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c2)) THEN json_object(rt1.c2, rt1.c1) WHEN rt1.c2 THEN ((((t1.c0)OR(rt1.c0)))OR(rt1.c3)) WHEN (((rt1.c0))==((rt1.c1))) THEN NULL END) OVER (), CAST(NULL AS TEXT) FROM vt0, rt1, t1 WHERE (CAST(((237521841)&(0.5573054705656992)) AS BLOB)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ROWS BETWEEN (~ (vt0.c0)) FOLLOWING AND  UNBOUNDED FOLLOWING) FROM t1, vt1, vt0, rt1 ORDER BY (NOT (((rt1.c0)AND(rt1.c3))))  NULLS LAST LIMIT -1274654986; -- 0ms;
SELECT ((((((((rt1.c2)AND(vt0.c1)))OR(rt1.c0)))OR(vt1.c0 COLLATE NOCASE)))OR((((rt1.c2, vt0.c1, rt1.c3)) BETWEEN ((vt0.c1, t1.c0, vt1.c0)) AND ((vt0.c0, rt1.c1, NULL))))) FROM vt0, rt1, t1, vt1 GROUP BY (((((t1.c0, rt1.c3, vt1.c0))<((vt0.c1, 0.10117450812415285, rt1.c3))))%(((vt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)))), (((rt1.c0)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0)%(t1.c0))))), ((rtreenode(0.35324883875085666, vt0.c0)) NOT BETWEEN (-327465952) AND (CAST('615255045' AS INTEGER))); -- 0ms;
SELECT DISTINCT rt1.c3 FROM t1 WHERE (((0.07265331596303037) IS FALSE) COLLATE NOCASE) ORDER BY ((rt1.c3 COLLATE BINARY) NOT BETWEEN ((((rt1.c3, vt0.c0, rt1.c0))=((vt0.c1, vt0.c0, rt1.c1)))) AND (((rt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))), t1.c0  NULLS LAST, rt1.c0  NULLS FIRST;SELECT DISTINCT ((((rt1.c2 COLLATE RTRIM)OR(TOTAL(0.2351755225376576))))AND(t1.c0)) FROM rt1, vt1, t1 WHERE (((((0.6294511689846488 COLLATE NOCASE)AND(CASE WHEN '-2128673710' THEN 0.7331519715609295 END)))AND(LIKELIHOOD(NULL, 0.9457736993952066)))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt1.c3 AS REAL) THEN (t1.c0 IN ()) ELSE (((rt1.c3))!=((vt0.c0))) END FROM vt1 WHERE (((((263023951)||(0x24ac0c05)))GLOB(((-356945334) NOT BETWEEN (0.4246981694369484) AND ('?*(O0m7x4')))));SELECT ALL CASE '59582711'  WHEN rt1.c3 THEN ((((((((vt1.c0)AND(t1.c0)))OR(vt0.c1)))OR(rt1.c2)))OR(rt1.c3)) WHEN (rt1.c1 IN ()) THEN 1.578707796E9 WHEN COUNT(*) THEN TRIM(rt1.c0) ELSE rt1.c2 END FROM t1, rt1;SELECT TOTAL('') FROM vt0, t1, vt1, rt1 ORDER BY ((rt1.c1) NOT NULL) COLLATE RTRIM ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((rt1.c3) NOT BETWEEN (vt1.c0) AND (rt1.c3)) COLLATE NOCASE, ((CASE WHEN rt1.c1 THEN rt1.c1 END)*(CASE t1.c0  WHEN rt1.c1 THEN vt1.c0 END)), ROW_NUMBER() OVER ( RANGE (0.4275365762050325 IN ()) PRECEDING), x'' COLLATE NOCASE, ((CAST(t1.c0 AS BLOB)) NOT BETWEEN ((rt1.c0 IN ())) AND (x'92dd')) FROM t1, rt1, vt0, vt1;SELECT ALL ((CAST(rt1.c1 AS REAL)) NOT BETWEEN ((((rt1.c0, t1.c0, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c2, vt0.c0, vt1.c0)))) AND (t1.c0)) FROM vt1 WHERE ((('29586841') NOT BETWEEN ((x'' IN ())) AND ((('0.0414100442494707') BETWEEN (x'') AND ('''{')))));SELECT DISTINCT SUM(GROUP_CONCAT(((((rt1.c0)OR(0.880402471537921)))AND(vt0.c1)))) FROM vt0, t1 WHERE ((((((0.5492623873270636))==((0.6348157770967902))))-('-1434788543')));SELECT ((vt0.c0)<(vt0.c0)) COLLATE NOCASE FROM vt1, vt0 NOT INDEXED; -- 1ms;
SELECT DISTINCT (((((rt1.c3) NOT BETWEEN (vt0.c1) AND (rt1.c2))))!=((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) FROM vt0, vt1, t1, rt1 WHERE ((((0.12257719788857369 IN (x'')))>(((x'')<<('-1831646697'))))); -- 0ms;
SELECT DISTINCT ((SUM(rt1.c0)) ISNULL), CASE WHEN MAX(x'') THEN CHAR(t1.c0) END, (- (CASE rt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN t1.c0 THEN vt1.c0 WHEN 0.40985894650715304 THEN vt0.c1 END)) FROM t1, vt1, vt0, rt1 GROUP BY (((x'') IS FALSE) IN ()) HAVING COUNT(*); -- 0ms;
SELECT ((((rt1.c3) IS FALSE)) NOT BETWEEN (((rt1.c1)>>(vt0.c1))) AND (((-485988795)+(rt1.c3)))) FROM vt0 LIMIT -27344614;SELECT ((((((rt1.c3) ISNULL))OR(vt0.c0)))AND((((vt0.c0))=((vt0.c1))))) FROM vt1, vt0, t1;SELECT DISTINCT ((COUNT(vt0.c0)) IS TRUE), 0.05449412376957119, ((((rt1.c0)==(vt1.c0))) NOTNULL) FROM rt1 ORDER BY (~ (rt1.c1)) COLLATE BINARY COLLATE BINARY DESC, (((vt0.c0)) NOT BETWEEN (('u⣷|Av')) AND ((HEX(DISTINCT vt0.c0)))), 0X4d16416d ASC;SELECT DISTINCT GROUP_CONCAT(((((t1.c0)AND(t1.c0)))AND(vt1.c0))) FROM rt1, vt1, vt0, t1; -- 0ms;
SELECT ALL (vt0.c1 IN ()), CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS BLOB), (((rt1.c3)) BETWEEN ((((((vt0.c0)AND(rt1.c1)))OR(vt1.c0)))) AND ((COUNT(t1.c0)))), (((((((vt1.c0)OR(t1.c0)))AND(vt0.c0))))!=((MAX(t1.c0)))), CASE NULL  WHEN ((rt1.c1) NOTNULL) THEN rt1.c1 COLLATE BINARY END FROM vt1, rt1, vt0;SELECT DISTINCT ((((((((('')AND(vt1.c0)))AND(vt0.c1)))OR(rt1.c3)))AND(rt1.c2)) IN ()) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((vt1.c0) NOT NULL)), rt1.c2, (~ (((vt0.c1) NOT BETWEEN (rt1.c2) AND (x'')))) FROM rt1, vt0 WHERE (CAST(((NULL) IS FALSE) AS NUMERIC)) ORDER BY TOTAL_CHANGES() LIMIT -952026450;SELECT DISTINCT ((((rt1.c3)||('''n~푃<^)m'))) NOT BETWEEN ((vt0.c0 IN (t1.c0))) AND ((rt1.c0 IN ()))) FROM rt1, vt1 WHERE (((((((((((('5.90619616397059E-4')AND('-327465952')))AND('K6gm')))OR(NULL)))OR('u_Iq')), (('-936418328')||(NULL)), PRINTF(x'')))>=((CASE WHEN '-434319399' THEN NULL ELSE x'8eee' END, CAST(x'' AS INTEGER), (((NULL))>((NULL))))))) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 END, 'now\U'  NULLS LAST;SELECT ALL COUNT(*), (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3))))!=(((((0.7578266322536059))<=((rt1.c0)))))), CASE ((vt0.c0)==(vt0.c0))  WHEN MAX(vt1.c0) THEN NULL ELSE ((rt1.c1)IS NOT(rt1.c2)) END FROM rt1;SELECT ALL '', AVG(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE t1.c0 END) FILTER(WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c0))) IS TRUE)) OVER ( ORDER BY CASE ((vt0.c0)|(vt0.c1))  WHEN rt1.c2 THEN ((rt1.c2)>(rt1.c3)) WHEN UNLIKELY(rt1.c3) THEN ((rt1.c2) IS FALSE) WHEN '0.00867831972347688' THEN (0Xffffffffffffffff IN ()) END DESC), CASE 0.5769235904298696  WHEN COUNT(*) THEN GROUP_CONCAT(t1.c0) END FROM t1, rt1, vt0 WHERE (((NULL) BETWEEN (NULL) AND ('醊OB2')) COLLATE BINARY COLLATE BINARY); -- 1ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 ELSE rt1.c1 END)<(CAST(vt0.c1 AS INTEGER))), (((((vt1.c0, rt1.c1, vt1.c0, rt1.c2, rt1.c0))==((rt1.c2, rt1.c1, vt0.c1, vt1.c0, rt1.c0)))) BETWEEN (x'') AND (0xffffffffa9e9bfad)), CASE SQLITE_VERSION()  WHEN COUNT(*) THEN (NOT (vt1.c0)) WHEN LIKELIHOOD(0.3774931365630748, 0.7686174205974032) THEN ROUND(rt1.c2, vt1.c0) WHEN NULL THEN LOWER(DISTINCT rt1.c1) WHEN ((((t1.c0)OR(vt0.c1)))AND(vt0.c0)) THEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN rt1.c2 COLLATE RTRIM THEN ((vt0.c0)OR(rt1.c3)) ELSE ((((NULL)AND(vt0.c0)))AND(vt0.c0)) END FROM vt0, rt1;SELECT ALL (((((rt1.c3, rt1.c2, t1.c0))<((rt1.c2, t1.c0, vt0.c1)))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (rt1.c3 COLLATE NOCASE)) FROM t1, vt0;SELECT ALL CAST(((vt0.c0) NOT NULL) AS NUMERIC) FROM t1, rt1;SELECT DISTINCT (COUNT(*) IN ()) FROM vt1, t1; -- 1ms;
SELECT -1818434262, TOTAL(vt1.c0), (((0.05427605110629974)) BETWEEN ((((((((((vt0.c0)AND(t1.c0)))OR(rt1.c1)))OR(NULL)))AND(vt0.c0)))) AND ((AVG(vt0.c0)))) FROM vt0, rt1, vt1, t1; -- 0ms;
SELECT DISTINCT ((((vt0.c1)-(rt1.c2)))==(((rt1.c0) IS TRUE))) FROM rt1 LIMIT -2123318738;SELECT ALL CAST(((rt1.c3) IS TRUE) AS TEXT) FROM vt1 NATURAL JOIN rt1 WHERE (CAST(CASE 0.12257719788857369  WHEN 'OI' THEN '671440432' ELSE x'' END AS NUMERIC)) ORDER BY rt1.c1 DESC; -- 0ms;
SELECT ((((NULL) IS TRUE)) IS TRUE) FROM vt0, vt1 WHERE ((('-1520118717')>=((('ᕠ?uRS')+(''))))); -- 0ms;
SELECT DISTINCT SUM((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3)))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM vt0 WHERE ((((NULL) IS TRUE) IN ()));SELECT DISTINCT x'', ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE RTRIM, (((rt1.c1))<=((rt1.c0))) COLLATE BINARY FROM vt1, rt1, t1 WHERE (LTRIM((1906328858 IN ()), ('' IN (NULL)))); -- 0ms;
SELECT ((((vt0.c0 COLLATE NOCASE)AND(rt1.c3)))AND((('-30903820') ISNULL))) FROM vt1, t1, vt0 NOT INDEXED, rt1 ORDER BY 0.963750965396449 DESC; -- 0ms;
SELECT DISTINCT (((~ (t1.c0)))|(((vt0.c0)>(rt1.c2)))) FROM vt0, rt1;SELECT DISTINCT ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))&(UNLIKELY(vt1.c0))), (((CASE WHEN rt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt1.c0 THEN 0.2013015482862729 END))<=((CAST(t1.c0 AS REAL)))), GROUP_CONCAT(((x'9085') NOTNULL)) OVER ( ORDER BY LOWER(((((rt1.c3)OR(vt1.c0)))AND(rt1.c0)))  NULLS FIRST, (((((NOT (rt1.c0)))OR(((rt1.c1) BETWEEN (t1.c0) AND (rt1.c0)))))OR((+ (vt0.c1)))) DESC) FROM vt0, rt1;SELECT DISTINCT SUM(((vt1.c0)<<(rt1.c1))), (((+ (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (CASE rt1.c3  WHEN x'5e55' THEN vt0.c0 ELSE vt1.c0 END)), CAST((t1.c0 IN ()) AS REAL) FROM rt1, vt1, vt0, t1 WHERE (LIKELY(DISTINCT 0.40174197383536836)); -- 0ms;
SELECT DISTINCT '?' FROM vt0, vt1, rt1, t1 LIMIT 1025624301; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1, t1, vt1, vt0; -- 0ms;
SELECT DISTINCT (((((t1.c0, rt1.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, rt1.c3, rt1.c2)) AND ((rt1.c3, t1.c0, rt1.c0))))-((rt1.c1 IN ()))) FROM rt1, t1, vt1 GROUP BY ((((CAST(vt0.c1 AS INTEGER))AND(((rt1.c3)|(rt1.c3)))))AND((+ (vt1.c0)))) HAVING TRIM(vt1.c0);SELECT CASE MAX(vt0.c1)  WHEN (('xV^s') NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN rt1.c1 END FROM vt0, rt1, t1, vt1 WHERE ((((NULL)AND('2132556822')) IN ())) ORDER BY ((((((((0.9791620869202725)OR((+ (rt1.c1)))))OR(rt1.c0)))AND(LOWER(t1.c0))))OR(((t1.c0) IS FALSE))) ASC; -- 0ms;
SELECT NTILE((((rt1.c2) NOT NULL) IN (((((rt1.c3)OR(vt0.c1)))OR(rt1.c2)), CAST(0.9593660053588131 AS BLOB)))) OVER () FROM rt1, vt0; -- 0ms;
SELECT ALL json_array_length((rt1.c3 IN ())) FROM t1 ORDER BY ((CASE WHEN vt0.c0 THEN rt1.c0 ELSE '-944018852' END) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))) AND (((((t1.c0)AND(rt1.c0)))OR(rt1.c0)))) ASC  NULLS LAST;SELECT GROUP_CONCAT(((vt0.c0) NOTNULL)) OVER () FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (+ (t1.c0)) THEN (- ('%->0r?f_')) END WHERE ((((((((((((((((('1423632268')AND(x'1dc7')))AND(NULL)))OR((- ('263023951')))))AND((('484287140') NOT BETWEEN (711049501) AND ('662062664')))))AND((('-9223372036854775808') NOT NULL))))AND(((('0.3774931365630748', '691222275', NULL)) NOT BETWEEN (('8f|', 0.45403935950110086, 0.932380176088278)) AND ((0.4500636252400356, '', ')'))))))OR(((NULL) BETWEEN ('') AND (x'de30')))))OR((((x'')) NOT BETWEEN (('-952026450')) AND ((NULL)))))) GROUP BY (CASE vt0.c0  WHEN x'' THEN rt1.c2 ELSE rt1.c2 END IN ()), CAST(rt1.c1 AS INTEGER), CAST(CASE WHEN rt1.c0 THEN rt1.c2 END AS TEXT);SELECT ALL (((vt0.c0, vt0.c0, t1.c0)) NOT BETWEEN (((- (rt1.c1)), ((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(rt1.c0)))AND(rt1.c3)), ((((rt1.c2)AND(rt1.c0)))OR(rt1.c2)))) AND (((NOT (0.5254534175863776)), NULLIF(vt0.c1, rt1.c0), ((rt1.c2) NOT BETWEEN ('2A_F') AND (rt1.c1))))), '', (((rt1.c1) IS TRUE) IN (CAST(rt1.c0 AS NUMERIC), NULL)) FROM vt1, rt1, t1, vt0 WHERE (CASE WHEN (NULL IN ()) THEN NULL COLLATE NOCASE ELSE CAST('1320617507' AS TEXT) END); -- 0ms;
SELECT ALL (NULL COLLATE RTRIM IN ()) FROM t1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), vt1.c0, json_type(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END) FROM rt1, t1 GROUP BY NULL;SELECT ALL DENSE_RANK() OVER () FROM vt1; -- 0ms;
SELECT ((CASE WHEN rt1.c1 THEN vt1.c0 ELSE t1.c0 END)>=((- ('/r頇O24')))) FROM vt1, vt0 WHERE (((((((x'') NOTNULL))OR(0.9155135497598648 COLLATE BINARY)))AND(CAST(6.62062664E8 AS NUMERIC)))) GROUP BY ((((vt0.c1)IS NOT(vt0.c0))) BETWEEN (((t1.c0)<(vt0.c0))) AND ((('e')%(t1.c0)))) HAVING ((((t1.c0)<=(rt1.c1)))GLOB((rt1.c2 IN ())));SELECT ((((((vt1.c0)OR(rt1.c3)))OR(vt0.c1))) BETWEEN (((((((((((((x'')OR(rt1.c0)))OR(0xffffffff9a205ee0)))AND(t1.c0)))AND(NULL)))AND(x'')))OR(vt0.c0))) AND (((vt0.c0) ISNULL))) FROM t1, rt1, vt1 WHERE ((NOT (NULL)) COLLATE NOCASE);SELECT CASE WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (-207865750)) THEN (((vt1.c0))>((rt1.c1))) WHEN (vt0.c1 IN ()) THEN ((('.7gW*2w')) BETWEEN ((vt1.c0)) AND ((vt0.c1))) WHEN ((rt1.c0)<(0xffffffff811f0452)) THEN LOWER(x'377c') ELSE ((rt1.c1) NOTNULL) END FROM vt1, rt1, vt0; -- 0ms;
SELECT DISTINCT NULL, (((4.8428714E8))>=((CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN x'' THEN vt0.c0 END))), CASE WHEN (('y\_^, Z?')+(rt1.c3)) THEN rt1.c2 ELSE (rt1.c1 IN ()) END FROM t1, vt0;SELECT DISTINCT ((((vt1.c0) IS FALSE))GLOB((vt0.c1 IN ()))) FROM rt1, t1, vt0, vt1; -- 0ms;
SELECT ALL ((0xffffffffc7bb6a5c COLLATE NOCASE)GLOB(rt1.c2 COLLATE NOCASE)), ((CASE WHEN rt1.c1 THEN t1.c0 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1))) AND (GROUP_CONCAT(vt0.c1))), (((((vt0.c1)) BETWEEN ((rt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((rt1.c0)<(rt1.c0))) AND (((((((((rt1.c3)AND(rt1.c0)))AND(vt0.c1)))OR(rt1.c0)))OR(rt1.c0)))) FROM t1 WHERE ('-10874545');SELECT CAST(vt1.c0 AS TEXT) FROM vt1, vt0, rt1; -- 0ms;
SELECT COUNT(*) OVER () FROM t1, vt0; -- 0ms;
SELECT DISTINCT rt1.c1 FROM vt1, t1 LIMIT 831565153 OFFSET 484287140;SELECT ALL ((rt1.c0)-(rt1.c0)) COLLATE RTRIM FROM vt1, vt0;SELECT CAST((rt1.c3 IN (rt1.c2)) AS REAL) FROM t1, rt1; -- 0ms;
SELECT DISTINCT ((- (vt0.c0)) IN ()) FROM rt1, vt0, t1, vt1; -- 0ms;
SELECT ALL AVG(json_array_length(vt0.c1)) OVER ( RANGE BETWEEN ((((rt1.c3)+(x'')))!=(CAST(rt1.c3 AS BLOB))) PRECEDING AND ((((rt1.c1) NOT NULL))<((vt0.c1 IN (vt1.c0)))) PRECEDING) FROM rt1, vt0;SELECT DISTINCT (((((NOT ('fozfO༱8扎')))OR((~ (t1.c0)))))OR((NOT ('662062664')))) FROM vt1, t1 WHERE (CASE WHEN ((0.21411273670977893)=(0.033181169453711856)) THEN (('ki')GLOB(0X54aa83d5)) WHEN ((NULL)>=(x'')) THEN 0.7398559093404138 COLLATE BINARY WHEN ((x'a5b6')>>(0xffffffffe32cd2a1)) THEN ((NULL) BETWEEN (0Xffffffffd4e036a9) AND (0.2938081268492788)) ELSE (((x''))>=((1))) END) GROUP BY (((rt1.c3 IN ())) BETWEEN ((- (x''))) AND (NULL)), CAST(((((rt1.c0)AND(rt1.c1)))OR(vt0.c0)) AS BLOB), ABS(CASE t1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN '484287140' THEN vt1.c0 ELSE vt1.c0 END);SELECT DISTINCT CAST(((rt1.c3) IS TRUE) AS NUMERIC), ((TOTAL(t1.c0)) IS FALSE), (((rt1.c3)) BETWEEN (((((rt1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))) AND ((json_remove(vt1.c0, NULL, rt1.c3, vt0.c0, rt1.c2, rt1.c2)))) FROM vt0, vt1, t1, rt1;SELECT DISTINCT (- (rt1.c0)) COLLATE RTRIM FROM t1, rt1, vt1 WHERE (((CASE WHEN 0.5573054705656992 THEN x'' ELSE x'' END)+(x''))); -- 0ms;
SELECT CASE TRIM(DISTINCT vt0.c0, vt0.c1)  WHEN TOTAL(vt0.c1) THEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (vt0.c1)) END, ((CAST(vt0.c0 AS REAL)) IS FALSE), ((((((rt1.c1)OR(vt0.c1)))AND(vt0.c0))) NOT NULL) FROM vt1, rt1, t1, vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS REAL))&(TRIM(rt1.c3, 'Yj玼7'))) FROM rt1, vt1, t1;SELECT ALL AVG((((vt0.c1, vt0.c0, rt1.c0)) BETWEEN ((t1.c0, rt1.c2, rt1.c2)) AND ((vt0.c0, rt1.c0, rt1.c2)))) OVER () FROM vt0, t1, rt1, vt1 GROUP BY (NULL IN ()) COLLATE NOCASE, ((((rt1.c2 COLLATE NOCASE)OR(LIKELIHOOD(rt1.c0, 0.36211127382764086))))OR(((vt1.c0) BETWEEN (vt0.c1) AND (rt1.c3)))), ((vt1.c0) IS TRUE), CAST((+ (vt1.c0)) AS INTEGER), (((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, rt1.c0, rt1.c3))) COLLATE RTRIM HAVING rt1.c0; -- 1ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(rt1.c3), CASE WHEN vt0.c1 THEN SUM(vt0.c1) ELSE TYPEOF(rt1.c0) END, CASE WHEN ((rt1.c1) BETWEEN (-1089782146) AND (rt1.c1)) THEN GROUP_CONCAT(vt0.c1) END FROM vt0 ORDER BY x'' DESC  NULLS FIRST;SELECT DISTINCT (rt1.c3 IN ()) COLLATE NOCASE FROM rt1, vt1, vt0, t1 WHERE ((((((- (NULL)))AND(CAST(0.29675368252760004 AS TEXT))))AND((((0.01350463218430975))<((NULL)))))) ORDER BY SQLITE_VERSION() DESC; -- 0ms;
SELECT x'b141' FROM t1, vt0, rt1, vt1; -- 0ms;
SELECT ALL t1.c0, HEX(((NULL)%(0.29675368252760004))), NULL FROM vt0;SELECT ALL MIN(MIN(((x'')>>(vt0.c1)))), (+ ('-510040294')), ((NULL)&((((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))) FROM vt1, t1, vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))>=((((vt1.c0)%(vt0.c1))))), '~Z';SELECT DISTINCT ((((rt1.c2)<(rt1.c2)))*((NOT ('')))) FROM vt0 WHERE (LIKELIHOOD((+ (NULL)), 0.15017173399996486));SELECT vt1.c0 FROM vt1; -- 1ms;
SELECT ALL ((((((vt0.c0)+(vt1.c0)))AND(rt1.c2)))AND(IFNULL(vt0.c0, vt0.c0))), (((t1.c0, t1.c0, rt1.c3)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END, (~ (1.458890111E9)), (rt1.c2 IN ()))) AND ((0.5573054705656992 COLLATE RTRIM, rt1.c2 COLLATE NOCASE, CAST(rt1.c2 AS INTEGER)))), ((LIKELY(0.31168786999414444)) NOT BETWEEN (MAX(vt1.c0)) AND (CAST(rt1.c3 AS NUMERIC))), NULL, ((((vt1.c0) BETWEEN (rt1.c3) AND (rt1.c0))) NOT BETWEEN (((0.7331519715609295) ISNULL)) AND (((vt1.c0)||(vt0.c0)))) FROM vt0, t1, rt1, vt1 WHERE (IFNULL(((x'')IS('-1166620725')), ((-1706553551) NOT BETWEEN (NULL) AND (0xffffffff8170ba2e)))); -- 0ms;
SELECT DISTINCT MAX((vt0.c1 IN ())), ((((MIN(vt0.c0))OR(rt1.c0)))OR(TRIM(DISTINCT vt1.c0))), CAST(((x'') NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS BLOB) FROM rt1;SELECT ALL CASE WHEN ((rt1.c3) NOTNULL) THEN '-1166620725' WHEN ((rt1.c2)>(rt1.c3)) THEN ((t1.c0) NOT BETWEEN (')U>GRD') AND (rt1.c2)) WHEN HEX(DISTINCT rt1.c2) THEN ((vt0.c1)LIKE(rt1.c0)) END, CAST(t1.c0 AS INTEGER) COLLATE BINARY, ((t1.c0) ISNULL) COLLATE RTRIM FROM vt0, t1, vt1, rt1 WHERE (((((((0.4150422702755717)OR(0.9155135497598648)))OR(NULL)))IS('-207865750' COLLATE BINARY))) GROUP BY (- ('aYa!N*{-)')) LIMIT 1508406416 OFFSET 882838102; -- 0ms;
SELECT DISTINCT (CASE WHEN t1.c0 THEN rt1.c2 END IN ((((vt0.c0))>=((rt1.c3))))) FROM vt1, rt1, vt0;SELECT CAST(vt1.c0 AS NUMERIC), CAST((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((NULL))) AS INTEGER), ((((((((((t1.c0)OR(rt1.c3)))AND(rt1.c1)))AND(vt0.c1)))OR(t1.c0)))IS(CAST(rt1.c2 AS REAL))) FROM vt0, rt1, vt1 WHERE ((((x'0a02')<=('')) IN ())) ORDER BY (NOT ((NOT (t1.c0)))) DESC;SELECT ALL (NOT (((rt1.c1)&(vt0.c0)))) FROM vt1 WHERE (((CASE WHEN 0.4500636252400356 THEN 'u_Iq' WHEN -2.0786575E8 THEN ')n' WHEN x'' THEN '28416007' ELSE 'Up' END)GLOB((((x'6bc0', -2052971021, '0.5573054705656992')) NOT BETWEEN ((NULL, 0.8251328604962841, '-1051668001')) AND ((NULL, '*件z2', '-2084644137'))))));SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE (x'' IN ())  WHEN ((((((((NULL)AND(NULL)))AND('챟+')))AND('1508406416')))OR('-1831646697')) THEN ((NULL)IS('XRR8?o럙\r啖')) ELSE MIN('A<z%D*WG6', '811583324') END) GROUP BY ((((vt1.c0) IS FALSE)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (rt1.c3)) HAVING (COUNT(*) IN ());SELECT ALL ((-145640429) NOT BETWEEN (((rt1.c3) IS FALSE)) AND (MIN('0.7398559093404138'))) FROM t1, vt0 WHERE (((('-1520118717')) NOT BETWEEN ((((0.00867831972347688)==(NULL)))) AND ((CAST(NULL AS REAL)))));SELECT DISTINCT TRIM(((x'') BETWEEN (rt1.c2) AND (vt0.c0))), CASE CAST(rt1.c3 AS REAL)  WHEN ((vt0.c0)<<(-4.85988795E8)) THEN ((x'') NOT BETWEEN (vt1.c0) AND (vt0.c0)) END, ((((((rt1.c2)|('1pkks석')))OR(LAST_INSERT_ROWID())))OR(GROUP_CONCAT(rt1.c1))) FROM rt1, vt1, vt0 WHERE ((((x'', '-1752692658', 0.12847362751786362)) BETWEEN ((CASE 1782444577  WHEN 0X618a19fe THEN x'' WHEN 0.40809249118338886 THEN 0.06528144220694088 WHEN 0X2a8a5069 THEN 0.8013295052211412 ELSE 0.45974945084328145 END, NULLIF('2092272456', 0.6678092555763973), CAST(NULL AS BLOB))) AND ((TRIM(DISTINCT x'', ''), (('oM')*(-986356509)), CAST(0.9915020841497452 AS NUMERIC))))); -- 1ms;
SELECT ALL AVG(CAST(vt0.c0 AS TEXT) COLLATE RTRIM) FROM vt1, rt1, vt0 WHERE (CAST(((x'') NOT BETWEEN (0X7887eee9) AND (NULL)) AS BLOB)) GROUP BY ((((load_extension(rt1.c0))OR(((rt1.c3)<(rt1.c3)))))AND((NOT ('')))) HAVING ((json_insert(rt1.c2, rt1.c0, vt0.c0, rt1.c3, t1.c0))OR(((x'') BETWEEN (rt1.c1) AND (t1.c0)))) ORDER BY IFNULL(DISTINCT (+ (rt1.c1)), (((t1.c0, rt1.c3, vt0.c0))<=((rt1.c2, 0.9962604223704318, rt1.c3)))) DESC;SELECT DISTINCT rt1.c2 COLLATE NOCASE, CAST(TOTAL_CHANGES() AS REAL), (((((vt0.c0) NOT BETWEEN (rt1.c3) AND (vt1.c0))))=((MIN(t1.c0)))) FROM rt1, vt1, t1, vt0; -- 0ms;
SELECT ((t1.c0) NOT BETWEEN (UPPER(DISTINCT vt1.c0)) AND (CASE t1.c0  WHEN rt1.c2 THEN vt0.c0 END)) FROM t1, rt1, vt1 WHERE (((((0.7314440775472444)*(NULL)))-((('704538802')||('-194134105')))));SELECT ALL ((((vt1.c0))>=((NULL))) IN ()) FROM rt1, vt0, t1 WHERE ((NOT (HEX(x'')))); -- 0ms;
SELECT SUM((rt1.c3 IN ())), (((((((((vt0.c1)AND(rt1.c0)))AND(rt1.c0)))OR(vt0.c0)))AND(vt1.c0)) IN ((((rt1.c1, t1.c0, rt1.c1, rt1.c3, vt1.c0)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c0, vt1.c0, t1.c0)) AND ((vt0.c0, '998112995', rt1.c0, 0Xffffffff94131418, rt1.c1))))), (((vt0.c1, t1.c0, rt1.c2)) BETWEEN ((CAST(rt1.c1 AS BLOB), (~ ('-1497546910')), ((t1.c0) NOTNULL))) AND ((((((vt1.c0)OR(rt1.c1)))AND(rt1.c2)), ((rt1.c2)<=(vt0.c0)), ((vt1.c0) BETWEEN (rt1.c2) AND (vt1.c0))))) FROM vt0;SELECT DISTINCT (+ ((((t1.c0))<((vt0.c0))))), (((t1.c0)) BETWEEN ((((((((((t1.c0)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c3)))OR(t1.c0)))) AND ((t1.c0))), (((((NULL)AND(rt1.c0)))AND(t1.c0)) IN ((NOT (rt1.c2)))) FROM rt1, vt0, vt1, t1 WHERE (((((((NULL)AND('')))OR(NULL)))IS NOT(((((0Xffffffffaa7add41)AND(NULL)))AND(''))))); -- 0ms;
SELECT (('pA-Z\r9k') BETWEEN (vt0.c1 COLLATE RTRIM) AND (x'')) FROM rt1, vt0, t1 WHERE ((((('')OR('711049501')))OR(x'7bae')) COLLATE BINARY); -- 0ms;
SELECT FIRST_VALUE(((TRIM(t1.c0)) IS FALSE)) OVER (), ((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 END) NOT BETWEEN ('2A_F') AND (CAST(vt0.c0 AS INTEGER))), ((((rt1.c0) IS FALSE)) IS TRUE) FROM t1 WHERE (CAST((0.01350463218430975 IN ()) AS NUMERIC));SELECT DISTINCT ((((rt1.c0)GLOB(rt1.c3)))GLOB(GLOB(rt1.c0, vt0.c0))) FROM vt0, vt1 WHERE (((((x'')-('')))IS NOT(((0.6751770877533838)AND(x'8a86'))))) GROUP BY (((((((rt1.c1))!=((rt1.c1))))OR(CASE vt0.c1  WHEN vt1.c0 THEN rt1.c1 ELSE t1.c0 END)))AND(t1.c0 COLLATE RTRIM)) HAVING MIN(((t1.c0)*(vt0.c1)) COLLATE RTRIM);SELECT ALL (((((((((((((NOT (rt1.c2)))AND((rt1.c2 IN ()))))AND(vt0.c1)))AND((t1.c0 IN ()))))AND(CAST(t1.c0 AS INTEGER))))AND(((((vt1.c0)AND(vt1.c0)))AND(rt1.c0)))))AND((vt0.c0 IN (vt0.c1)))), (((((rt1.c0)!=(rt1.c1))))<(((rt1.c3 IN (rt1.c3, rt1.c0))))), vt0.c1 FROM vt1, vt0, t1, rt1 WHERE (LTRIM(CAST('' AS INTEGER), (NULL IN (x'5d12')))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (~ ((((vt1.c0, vt0.c0, x'573e'))>=((rt1.c3, '-80436571', rt1.c3))))), ((COALESCE(DISTINCT rt1.c3, vt0.c1)) NOT BETWEEN (((((rt1.c3)OR(0Xffffffffc6379a1d)))OR(rt1.c3))) AND (x'371d')), (~ (x'c5b6')) FROM vt0;SELECT DISTINCT ((((((vt0.c1)AND(vt0.c1)))OR(rt1.c1))) NOT BETWEEN (((((rt1.c1)OR(rt1.c2)))OR(rt1.c0))) AND (((vt0.c1) NOT BETWEEN (rt1.c2) AND (t1.c0)))), CASE WHEN vt0.c0 THEN (((rt1.c1)) BETWEEN ((t1.c0)) AND ((vt1.c0))) END, CAST(MIN(t1.c0) AS INTEGER) FROM rt1, vt0, t1, vt1 WHERE (json_valid(0.9741547006611776)); -- 1ms;
SELECT DISTINCT ((CAST(rt1.c1 AS BLOB)) NOTNULL) FROM vt1;SELECT ((CASE WHEN rt1.c2 THEN rt1.c2 END) IS FALSE) FROM rt1, vt1 GROUP BY (TRIM(DISTINCT rt1.c0) IN (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING rt1.c3 LIMIT -1434788543;SELECT ALL '-520149234' COLLATE RTRIM FROM vt0 WHERE ('D럙7QRU감5'); -- 0ms;
SELECT DISTINCT (+ (LIKELIHOOD(DISTINCT 0.0026942003064738262, 0.5589818388274045))) FROM rt1, vt1, vt0 WHERE (CASE GLOB(0X2a61c11d, 0.45539578532870806)  WHEN CAST(0.5899837364606092 AS INTEGER) THEN (('a<z%d*wg6')<>('1431100843')) ELSE '-1312845917' END); -- 0ms;
SELECT (((((vt0.c1 IN (t1.c0)))AND((rt1.c1 IN ()))))OR(JULIANDAY(rt1.c1, 'o{hm', rt1.c3))) FROM vt0, vt1, rt1, t1 ORDER BY ((rt1.c2 IN ()) IN ())  NULLS FIRST, (((t1.c0))>=((rt1.c1))) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN (rt1.c2 IN ()) THEN 0.9510129124467713 ELSE (rt1.c2 IN ()) END, ((((HEX(rt1.c3))AND(MAX(vt0.c1))))AND(rt1.c3)), (rt1.c0 IN (t1.c0, vt0.c1)) COLLATE BINARY FROM rt1, vt1, vt0, t1; -- 0ms;
SELECT ((((((((0.09841927879613943 COLLATE NOCASE)OR(((rt1.c1)%(vt1.c0)))))AND(rt1.c0 COLLATE NOCASE)))AND((~ (vt0.c0)))))OR(((rt1.c3)>>(vt1.c0)))), SUM(((((vt1.c0)OR(rt1.c0)))OR(vt0.c0))) FILTER(WHERE CASE (- (rt1.c0))  WHEN (vt0.c0 IN ()) THEN rt1.c1 WHEN (((0x28055e30, vt0.c0, rt1.c1))<=((rt1.c1, vt1.c0, vt0.c0))) THEN (t1.c0 IN ()) WHEN (rt1.c2 IN ()) THEN (NOT (t1.c0)) ELSE rt1.c2 COLLATE BINARY END) OVER (), vt1.c0 FROM vt0, rt1, t1, vt1 GROUP BY ((((((rt1.c0)AND('263023951')))AND(rt1.c1)))&(CASE WHEN rt1.c0 THEN vt0.c0 END)) ORDER BY (~ ((vt0.c0 IN ('-578029583'))))  NULLS FIRST LIMIT 1246421059; -- 1ms;
SELECT DISTINCT IFNULL(rt1.c0, vt1.c0) COLLATE RTRIM FROM rt1, vt0;SELECT DISTINCT (((('-30903820')*(rt1.c3)))!=(((rt1.c0) NOTNULL))) FROM rt1, vt1 WHERE ((~ (((-1434788543) IS TRUE)))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((-0.0)*(((rt1.c1) IS TRUE))) FROM vt1, t1 WHERE ((((((0.32372735009286) IS FALSE), HEX(0.8902151688538911), ((NULL) ISNULL), (((NULL, NULL, x'1f94')) NOT BETWEEN ((x'', NULL, '1094854095')) AND ((x'', x'', NULL))), ((x'') BETWEEN (x'') AND (''))))<>((((((NULL)OR(NULL)))OR(2120537040)), CAST(x'' AS NUMERIC), (+ (NULL)), ((0.21924283288600166) NOT NULL), (0.3516917297983613 IN ())))));SELECT DISTINCT vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT MIN(CASE WHEN x'497c' THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 WHEN '' THEN rt1.c0 END), (+ (t1.c0)), ((TIME(rt1.c0, rt1.c3, vt0.c0)) ISNULL) FROM vt1, t1, rt1, vt0 WHERE (((((((NULL)*(x'')))AND((0.9526330657013764 IN ()))))AND((('')<(''))))) GROUP BY '&'; -- 0ms;
SELECT ALL (((~ (rt1.c2))) NOT BETWEEN (((vt0.c0)>(-840275753))) AND ((+ (vt0.c1)))) FROM rt1 WHERE (((0Xffffffffa61c4a98)LIKE(x'ecd4')) COLLATE RTRIM);SELECT DISTINCT ((((- (rt1.c0))))<((x''))) FROM vt0;SELECT ((((((((CASE rt1.c1  WHEN t1.c0 THEN rt1.c3 ELSE NULL END)OR(CASE vt0.c1  WHEN t1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE vt0.c1 END)))OR((~ (rt1.c1)))))AND(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)) FROM vt0 WHERE (COALESCE(NULL, ((0.07521751655632358) BETWEEN ('-972843854') AND (NULL)), CASE '-263416145'  WHEN 1637172495 THEN 0.2134264893112956 ELSE 0.2351755225376576 END, 1094854095, (0.579534727194426 IN (0.7283597044531986)), 377579763 COLLATE BINARY));SELECT t1.c0, ((((vt0.c1 IN ()), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END, (- (vt0.c1))))<=((vt0.c1, ((rt1.c3)|(t1.c0)), (- (rt1.c3))))), MIN(((rt1.c1)>=(rt1.c1)), ((rt1.c3)IS NOT(vt1.c0))) FROM vt1 LIMIT 1401758422 OFFSET 273018576;SELECT ALL TOTAL(((vt0.c1)AND(t1.c0))) OVER (), ((((((((((t1.c0)>>(t1.c0)))OR(CAST(vt0.c0 AS REAL))))OR(json_remove(rt1.c1, vt0.c1))))AND(-1290130590)))AND(((rt1.c0)LIKE(NULL)))), COUNT((NOT (t1.c0))) FILTER(WHERE (~ ((((rt1.c3, rt1.c3, rt1.c1)) BETWEEN ((vt0.c1, vt0.c0, rt1.c1)) AND ((t1.c0, rt1.c2, rt1.c0)))))) OVER () FROM t1, vt1, rt1 WHERE (((((((((TYPEOF(DISTINCT 'a'))OR(((('We3Bxa*', '509427778', NULL))<((x'', x'', 0.28331411171047716))))))OR((~ (0Xffffffffe6e75d2d)))))OR(highlight(x'', '~''v+W偘\r', 'rR', 0X4ed59f3b))))AND(CASE WHEN '' THEN 0x13cbf59 ELSE x'' END)));SELECT ((((((rt1.c0) NOT NULL))OR(json_array_length(0.11697695703294264, rt1.c2))))OR(((rt1.c0) NOT BETWEEN (1676240739) AND (rt1.c0)))) FROM vt1, t1, rt1, vt0;SELECT DISTINCT ((((0.8509860994765008)AND((+ (rt1.c0)))))AND(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c3 ELSE rt1.c0 END)) FROM vt0, rt1, vt1 WHERE (((((0.8348275032524527) NOT NULL))>=(UPPER(0.8574555049293991)))); -- 0ms;
SELECT json_insert(CAST(rt1.c3 AS REAL), rt1.c2 COLLATE RTRIM, ((((((((vt0.c1)AND(vt1.c0)))OR(rt1.c1)))OR(t1.c0)))AND(vt0.c1)), CAST(t1.c0 AS TEXT), 0.6023905889394171) FROM vt1, rt1, vt0;SELECT ((((~ (t1.c0))))>=((((rt1.c3)!=(t1.c0))))) FROM rt1 WHERE ((((((((((('-510040294')AND(0.8130484549927275)))OR(NULL)))OR(0.5769235904298696)))OR('e\n3甌UT'))) BETWEEN ((+ (0.3646367082601313))) AND (0Xfad6d4f))) LIMIT 769463314;SELECT DISTINCT HEX(rt1.c3), ((((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((rt1.c1 IN ()))))AND(json_array(rt1.c2, vt0.c0))), CAST(((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c2)))AND(vt0.c0)))AND(vt1.c0)) AS BLOB) FROM rt1, vt1, vt0, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(0.5784957266140242) FILTER(WHERE CASE WHEN ((vt0.c1)OR(rt1.c3)) THEN (NOT (rt1.c3)) END) OVER () FROM vt0, vt1 RIGHT OUTER JOIN t1 ON CASE WHEN ((vt0.c1) NOTNULL) THEN (rt1.c0 IN ()) WHEN CAST('' AS REAL) THEN (((t1.c0))==((rt1.c1))) WHEN vt1.c0 THEN ((rt1.c3)IS(rt1.c1)) END FULL OUTER JOIN rt1 ON CASE WHEN (rt1.c3 IN ()) THEN (vt0.c0 IN (rt1.c1, x'')) WHEN vt0.c1 COLLATE NOCASE THEN (~ (rt1.c2)) WHEN CAST(t1.c0 AS REAL) THEN ((t1.c0)OR(vt1.c0)) END LIMIT 1757587182;SELECT ((((t1.c0) IS TRUE)) NOT BETWEEN (((vt1.c0)/(vt0.c1))) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT ((((((0x1c37599)<=(rt1.c3)))AND(0xffffffffd36e773f)))AND((0.04140395780975192 IN (rt1.c3)))) FROM vt1, rt1, t1, vt0; -- 0ms;
SELECT (MAX(rt1.c1) IN ()) FROM rt1, vt1; -- 0ms;
SELECT SUM(((rt1.c2)-(t1.c0))) FROM rt1, t1, vt1; -- 1ms;
SELECT ALL CASE WHEN t1.c0 THEN CASE t1.c0  WHEN 347527776 THEN rt1.c2 END ELSE ((t1.c0)>=(rt1.c2)) END FROM vt1, vt0, t1, rt1 WHERE ((+ ((((x'ffd7'))>((' 4䮱\r')))))) ORDER BY ((((CASE WHEN rt1.c3 THEN vt0.c1 END)OR(vt1.c0)))AND(CASE WHEN t1.c0 THEN rt1.c0 END)); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((t1.c0) NOTNULL)))) FROM vt1 NOT INDEXED, t1, rt1, vt0 GROUP BY (((t1.c0 IN (vt0.c1))) BETWEEN (((((((((vt1.c0)OR(rt1.c1)))OR(t1.c0)))OR(vt0.c0)))AND(vt0.c0))) AND ('-593945059')) HAVING ((((((((vt1.c0 COLLATE RTRIM)OR((((rt1.c1, vt0.c0, 0.8919881915094247))>=((vt1.c0, rt1.c0, rt1.c2))))))AND(CASE rt1.c2  WHEN vt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c0 END)))OR(CASE WHEN vt1.c0 THEN t1.c0 WHEN vt1.c0 THEN rt1.c3 WHEN NULL THEN rt1.c0 ELSE rt1.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN vt0.c1 END)); -- 0ms;
SELECT rt1.c1 FROM t1 WHERE (((((0.3646367082601313) NOT BETWEEN ('1420461013') AND (-1.49754691E9))) NOTNULL)) ORDER BY (((vt0.c1 IN ()))=(COALESCE(rt1.c3, rt1.c1))) LIMIT 59582711;SELECT highlight((vt0.c0 IN ()), (NOT (rt1.c2)), ((vt1.c0) ISNULL), rt1.c3) FROM rt1, vt1, t1, vt0 WHERE (LIKE(NULL, 0.90258806572635) COLLATE NOCASE); -- 0ms;
SELECT ALL ((vt0.c0) ISNULL) FROM vt0; -- 0ms;
SELECT CASE WHEN ((((t1.c0)OR(rt1.c1)))OR(rt1.c3)) THEN ((vt0.c0)!=(rt1.c0)) ELSE ((rt1.c2) BETWEEN (t1.c0) AND (NULL)) END FROM vt1;SELECT ALL (((rt1.c1)OR(rt1.c2)) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT MAX(((t1.c0)|(NULL)), IFNULL(vt0.c1, rt1.c2), CASE rt1.c3  WHEN vt1.c0 THEN t1.c0 WHEN x'38bf' THEN rt1.c0 WHEN rt1.c2 THEN vt0.c1 END, ((t1.c0)>>(vt1.c0))) FROM vt1, vt0, rt1;SELECT ALL '1094854095' COLLATE BINARY FROM vt0 WHERE (0.4150422702755717) GROUP BY TRIM(DISTINCT CASE rt1.c2  WHEN rt1.c0 THEN '-1698207797' END, CAST('WE3BXA*' AS TEXT));SELECT DISTINCT FIRST_VALUE(((((((rt1.c1) NOT NULL))AND(((rt1.c0)IS(rt1.c2)))))OR(((rt1.c1)>(rt1.c2))))) OVER () FROM rt1 WHERE ((((0Xffffffffbd273e62 IN ())) BETWEEN ((-1674524101 IN ())) AND ((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((((((((CAST(rt1.c2 AS INTEGER))OR((((t1.c0))<((vt1.c0))))))OR((rt1.c3 IN ()))))OR(CASE WHEN '-1929630977' THEN rt1.c2 WHEN t1.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 ELSE rt1.c1 END)))AND(((vt0.c1)GLOB(rt1.c3)))) FROM rt1, t1, vt1, vt0; -- 0ms;
SELECT DISTINCT (- (((rt1.c1) ISNULL))) FROM vt1, t1 WHERE (0.29580273232748444);SELECT DISTINCT ((((t1.c0)||(vt0.c1))) NOT NULL), TOTAL(((((t1.c0)AND(rt1.c1)))OR(rt1.c1))) COLLATE NOCASE, json_remove(((vt0.c0)GLOB(vt1.c0)), (((vt1.c0))<>((vt0.c1)))) FROM vt0, vt1, t1, rt1; -- 0ms;
SELECT ALL ((UNLIKELY('qQyE7-<䮱)')) ISNULL) FROM rt1, vt1, t1, vt0 WHERE ((+ ((x'' IN ('', '?EXIH[%h'))))) LIMIT -1602328703; -- 0ms;
SELECT ((CASE WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c1 THEN NULL END)<(SUM('-1185636363'))) FROM rt1, vt0 WHERE (CASE WHEN ((((0.963750965396449)AND('0.40985894650715304')))OR(NULL)) THEN ((((x'')AND('PPD')))AND(-325490925)) WHEN ((0.7892033995743348)GLOB('0.21924283288600166')) THEN ((0.9102814736485176)<(NULL)) WHEN (x'' IN (0.04596396310082562, '0.9526330657013764')) THEN CAST(NULL AS INTEGER) END) GROUP BY (((- (rt1.c1))) NOT BETWEEN (((0.3419549490454248)|(rt1.c1))) AND (((rt1.c1) IS FALSE))), ((vt1.c0)+((vt0.c0 IN (vt0.c0)))), ((rt1.c0) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND ((rt1.c2 IN ()))) HAVING x'' LIMIT 572828232;SELECT SQLITE_SOURCE_ID() FROM vt0, vt1, rt1, t1 WHERE (((((((NULL) NOTNULL))OR((NOT (x'')))))OR(CAST(NULL AS TEXT)))); -- 0ms;
SELECT COUNT(((rt1.c3) IS TRUE)) OVER () FROM vt1, rt1, vt0 WHERE (((COALESCE(0Xffffffffcabf063c, '1483062825')) NOT BETWEEN ((((('-1972102459')AND(x'')))OR('{}'))) AND ((((0.19854837642168432)) BETWEEN ((0.2333261495694361)) AND ((x'')))))); -- 0ms;
SELECT ALL (((((rt1.c3))<=((rt1.c1))))&(((NULL)OR('')))) FROM vt1, vt0, rt1, t1 WHERE (((((((((((0.9741547006611776) IS TRUE))OR((('164757479') BETWEEN (x'') AND ('1431100843')))))AND((((('~nf')AND(NULL)))OR(NULL)))))OR(((((x'139c')OR('1322363669')))OR(1.423632268E9)))))OR(((x'')&('-1296492230'))))) UNION ALL SELECT SUM((rt1.c1 IN ())) OVER () FROM t1; -- 0ms;
SELECT DISTINCT MAX((~ (t1.c0))) FROM vt1, t1, vt0, rt1 WHERE (((0.8941535933853156 COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT DISTINCT (((((('-30903820')AND(rt1.c3)))OR(vt0.c1))) NOT BETWEEN (((rt1.c3) IS TRUE)) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))))), (((COALESCE(vt0.c0, rt1.c2)))<(((t1.c0 IN ())))), COALESCE(DISTINCT (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((t1.c0))), ((rt1.c2)-(vt1.c0)), ((((vt0.c0)OR(vt0.c0)))OR(rt1.c1)), ((rt1.c0)GLOB('e/')), 0.2103774088424244, x''), ((CAST(rt1.c0 AS BLOB))%((vt0.c1 IN ()))), 0.05377243636390949 FROM rt1 WHERE ((((+ (0.7194540038238476))) BETWEEN (((-1061016391) IS FALSE)) AND ((NOT (0xffffffff811f0452))))) LIMIT 1445467279;SELECT ((((rt1.c2) NOTNULL))||(ROUND(rt1.c3, rt1.c1))) FROM t1 WHERE (((('235076133')+(0X0)) IN ()));SELECT DISTINCT (+ (CAST(rt1.c3 AS NUMERIC))) FROM vt0, rt1; -- 0ms;
SELECT ((((rt1.c0)IS NOT(t1.c0))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (0.4007120165021111)), CAST(((t1.c0)>>(rt1.c1)) AS NUMERIC), ((vt0.c1 IN ('632995043')) IN ()) FROM t1, vt1, rt1 WHERE (0.8429865548578391);SELECT DISTINCT CASE WHEN CAST(vt1.c0 AS REAL) THEN (NOT (rt1.c0)) WHEN t1.c0 COLLATE NOCASE THEN load_extension(rt1.c2) WHEN CAST(vt1.c0 AS BLOB) THEN IFNULL(rt1.c3, vt0.c0) END FROM vt1, vt0, rt1, t1; -- 0ms;
SELECT ALL ((0.9499876547625247) IS TRUE) FROM vt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN vt0.c1 END) NOTNULL), (((vt0.c1 IN (rt1.c1)))+(((vt0.c0) NOT NULL))), FIRST_VALUE(CAST(((((rt1.c3)OR(rt1.c0)))AND(t1.c0)) AS BLOB)) OVER () FROM t1, rt1, vt1 ORDER BY ((t1.c0)IS(x'bd90')) COLLATE RTRIM DESC;SELECT DISTINCT DENSE_RANK() OVER (), LAST_VALUE(CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)||(vt0.c1)) THEN (vt0.c1 IN ()) END) OVER (), LAG(((((((vt1.c0) NOTNULL))OR((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))))OR(vt0.c0 COLLATE RTRIM)), ((0.17537230159630657 IN ()) IN ()), '-317629659') OVER () FROM vt0, vt1 WHERE (x''); -- 1ms;
SELECT DISTINCT rt1.c3 FROM t1, vt0;SELECT (((((rt1.c3, vt0.c0, rt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, rt1.c3)) AND ((t1.c0, vt0.c0, NULL)))) BETWEEN (((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c0))) AND (((vt0.c0) IS FALSE))) FROM rt1, t1, vt0 LIMIT 2087490754 OFFSET 1874825610;SELECT TOTAL('0.00867831972347688') FROM vt1 RIGHT OUTER JOIN vt0 ON (((+ (rt1.c1)))<=(((vt0.c0)OR(rt1.c0)))) LEFT OUTER JOIN rt1 ON CASE ((t1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0))  WHEN vt0.c0 THEN ((rt1.c0)|(vt0.c0)) ELSE CAST(vt1.c0 AS BLOB) END FULL OUTER JOIN t1 ON CAST((vt0.c0 IN ()) AS REAL) WHERE (CAST('1003080799' AS NUMERIC));SELECT ALL (((+ (rt1.c1))) NOT NULL) FROM t1, vt1, rt1, vt0; -- 0ms;
SELECT ALL NULLIF(SQLITE_COMPILEOPTION_GET(vt1.c0), CAST(vt1.c0 AS TEXT)) FROM t1, rt1;SELECT COUNT(*) FILTER(WHERE ((((((((CAST(rt1.c2 AS INTEGER))OR(t1.c0 COLLATE BINARY)))AND(((((((((((((rt1.c1)AND(vt0.c1)))AND(vt0.c0)))AND(NULL)))OR(0.7381603715747311)))AND(vt1.c0)))AND(rt1.c3)))))OR(LIKE(NULL, '156495955'))))OR(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) OVER (), 0.8966757791711433, (- (CASE WHEN '-969434595' THEN rt1.c0 WHEN 'BU' THEN rt1.c2 WHEN t1.c0 THEN 0.4246981694369484 WHEN rt1.c3 THEN vt0.c1 WHEN t1.c0 THEN vt1.c0 ELSE rt1.c2 END)) FROM vt0, vt1, rt1 WHERE (((((x'') IS FALSE)) IS FALSE));SELECT DISTINCT ((((vt0.c1)<=(rt1.c0))) IS TRUE) FROM vt0, rt1 GROUP BY (CASE WHEN 1076360996 THEN rt1.c1 ELSE rt1.c2 END IN ()) LIMIT -619118325 OFFSET 2022174441; -- 0ms;
SELECT rt1.c3 FROM rt1, vt0, t1 WHERE (LIKELY(DISTINCT NULL) COLLATE BINARY) LIMIT -1415630759; -- 0ms;
SELECT LAST_VALUE(NULL) OVER ( GROUPS BETWEEN (((((((((((((~ (vt0.c1)))OR(CAST(rt1.c0 AS TEXT))))AND(NULL)))OR((rt1.c1 IN ()))))OR((vt0.c1 IN ()))))OR(((rt1.c3) NOT BETWEEN (rt1.c3) AND (vt0.c0)))))OR((((vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, t1.c0)) AND ((vt0.c0, x'', rt1.c3))))) FOLLOWING AND CAST('-1088017844' AS REAL) PRECEDING EXCLUDE GROUP) FROM rt1;SELECT DISTINCT COUNT(((('-840275753')) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) OVER (), vt0.c1, CAST(((rt1.c0) NOT NULL) AS TEXT), x'', (((vt0.c0)&(rt1.c1)) IN ()) FROM vt0, vt1, t1 GROUP BY NULL, ((vt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c0)GLOB(x'ea78'))) AND (COALESCE(DISTINCT rt1.c0, rt1.c0, vt0.c0, vt1.c0, rt1.c3, rt1.c2))), (((rt1.c3)) NOT BETWEEN ((((vt0.c0)>=(vt1.c0)))) AND ((((((vt0.c1)OR(0.9743216487067846)))AND(rt1.c3)))));SELECT DISTINCT ((vt1.c0) NOT NULL), ((- (rt1.c0)) IN ()), (0.7789346292615311 IN ()) FROM rt1, vt0;SELECT DISTINCT (((rt1.c3) BETWEEN (rt1.c3) AND (t1.c0)) IN (CAST(rt1.c1 AS BLOB))) FROM t1, vt1 WHERE (CAST(((x'') IS FALSE) AS BLOB));SELECT CUME_DIST() OVER () FROM t1, vt1, rt1 WHERE ((('0,') BETWEEN (0.04673670951678366) AND ('-578029583')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (rt1.c3 IN ()) FROM t1, rt1, vt1; -- 0ms;
SELECT DISTINCT ((((t1.c0) NOTNULL))/(COALESCE(DISTINCT rt1.c0, rt1.c1))), '-js#' COLLATE BINARY, ABS(TRIM(vt1.c0)) FROM vt1, t1 WHERE (-1110542481) GROUP BY (((((((((((vt0.c1)AND(rt1.c0)))AND(vt0.c1)))AND(rt1.c2)))AND(rt1.c2))))<((CASE WHEN t1.c0 THEN rt1.c2 END))) HAVING '-R槒9qYDo';SELECT GROUP_CONCAT(((vt0.c0) BETWEEN (0.933263083413073) AND (vt0.c1))) FROM rt1;SELECT DISTINCT ((LIKELIHOOD(vt0.c1, 0.13885206001772588)) ISNULL), (((~ (t1.c0)))OR(rt1.c2 COLLATE RTRIM)), CASE WHEN vt1.c0 THEN (+ (vt0.c1)) ELSE ((t1.c0)AND(NULL)) END FROM vt0, rt1, vt1, t1 ORDER BY (- (CAST(vt0.c1 AS NUMERIC))) ASC; -- 0ms;
SELECT DISTINCT x'' FROM t1 LIMIT 9223372036854775807; -- 0ms;
SELECT ALL (((rt1.c0 IN ()))GLOB((((rt1.c0))<((x''))))) FROM vt0, t1, vt1, rt1 WHERE ((((~ (-1810689000)))<>(((((x'')OR(NULL)))AND('|#'))))) ORDER BY ((ABS(DISTINCT rt1.c3))>=(NULL)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((rt1.c0)&(vt1.c0))))<((json_array_length(rt1.c0)))), (((((vt1.c0)|(rt1.c2))))>=(((((vt0.c0))>((vt1.c0)))))), STRFTIME(rt1.c1, rt1.c2, rt1.c1) COLLATE RTRIM FROM rt1, vt0, t1;SELECT ALL (NOT ((vt0.c1 IN ()))) FROM t1, vt0, rt1, vt1; -- 0ms;
SELECT UPPER((rt1.c0 IN ())), (vt1.c0 IN ()) COLLATE BINARY, CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER) FROM vt0, rt1, t1; -- 0ms;
SELECT DISTINCT COUNT(CAST(rt1.c3 AS INTEGER)) OVER (), (NOT (((vt0.c0)==(rt1.c2)))), (((COUNT(*)))<((MAX(t1.c0)))) FROM t1, vt1, rt1;SELECT DISTINCT ((CASE rt1.c2  WHEN vt1.c0 THEN t1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 END)<=(COUNT(*))), (((2120537040) NOT NULL) IN (((((vt1.c0)OR(vt1.c0)))OR(rt1.c1)))), (((~ (rt1.c2)))!=((- (rt1.c0)))) FROM rt1, t1;SELECT DISTINCT (+ (((rt1.c3)IS NOT('-1274654986')))) FROM rt1, t1, vt1, vt0 ORDER BY CAST(LIKELIHOOD(rt1.c0, 0.05260921238842031) AS TEXT)  NULLS FIRST, (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN x'bb9e' THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN 0.474839417321985 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE vt0.c1 END))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT LEAD(CASE WHEN x'e591' THEN ((vt0.c1) IS TRUE) ELSE vt0.c1 COLLATE RTRIM END, TOTAL_CHANGES(), ((vt0.c0 IN (vt0.c0, t1.c0)) IN ())) OVER ( ORDER BY ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2)))|(((rt1.c0) IS FALSE)))) FROM vt0, t1 WHERE (CASE CASE '0Y!Ec'  WHEN x'' THEN '{}' WHEN '-384544680' THEN 'aYa!N*{-)' WHEN 0.2291119558851159 THEN x'' END  WHEN ((NULL)>('-1337333214')) THEN ((0.23488720121023354) NOT NULL) WHEN ('kkNmgc' IN ()) THEN ((0.1865648056969541) NOT NULL) WHEN CAST(NULL AS INTEGER) THEN ((x'')|('')) END);SELECT DISTINCT ((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))) ISNULL), ((((((rt1.c3)) NOT BETWEEN ((vt0.c1)) AND ((NULL)))))==(((NOT (t1.c0))))), 0.5745351084194391 FROM t1;SELECT DISTINCT ((((((vt1.c0)IS NOT(vt0.c1)))AND(((vt0.c1) BETWEEN (vt0.c0) AND (rt1.c2)))))AND(vt0.c0)) FROM rt1, vt1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END FROM vt1, rt1;SELECT CASE WHEN (((('1e500')AND(vt0.c0)))AND(rt1.c0)) THEN rt1.c3 END FROM vt0;SELECT DISTINCT (((((vt0.c0)IS NOT(vt1.c0)), CHAR(x'ee56'), CAST(t1.c0 AS NUMERIC)))>=((((1.508406416E9) NOT BETWEEN (vt1.c0) AND (0X7cb58b48)), (((vt0.c0))!=((rt1.c0))), CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) FROM vt1;SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1 WHERE (COALESCE((+ ('1963622020')), ((((x'')OR(0x4027f724)))OR('أ?N\.u')), 0.7892033995743348, NULL)); -- 0ms;
SELECT ((rt1.c3)IS(vt0.c1)) COLLATE RTRIM FROM t1, vt1, vt0;SELECT (((rt1.c0 IN ('-1752692658', vt0.c0)))%(rt1.c0)) FROM t1, rt1 GROUP BY (- (vt1.c0)) COLLATE NOCASE, CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN HEX(t1.c0) WHEN (((rt1.c0, vt1.c0, rt1.c1)) BETWEEN ((vt0.c1, vt1.c0, rt1.c2)) AND ((t1.c0, vt0.c1, rt1.c1))) THEN ((vt0.c0)>=(0xfffffffffbbb445c)) WHEN ((t1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c1)) THEN NULL END, ((((x'')AND(((NULL)=(t1.c0)))))AND(rt1.c0));SELECT DISTINCT (+ (0.1791524965370419)), (rt1.c0 COLLATE BINARY IN ()), x'7944' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE -986356509  WHEN TYPEOF(rt1.c3) THEN ((rt1.c1)IS NOT(vt1.c0)) END FROM vt1, rt1, vt0 GROUP BY CAST(((t1.c0) NOTNULL) AS NUMERIC), (((- (rt1.c0)))<<(CAST(x'6fc25007' AS BLOB))), (((t1.c0 IN ())) IS TRUE) HAVING RTRIM(CAST(rt1.c0 AS REAL));SELECT DISTINCT (((((rt1.c0))<=((vt0.c0)))) IS FALSE) FROM vt0, t1;SELECT CASE WHEN x'' THEN (((rt1.c3))<=((rt1.c1))) ELSE (NOT (rt1.c0)) END FROM t1, rt1, vt1, vt0; -- 0ms;
SELECT ALL ((CASE rt1.c0  WHEN vt0.c1 THEN rt1.c2 END)||(((x'')*(rt1.c1)))) FROM t1, vt0, rt1 WHERE (CASE WHEN ((x'') NOT BETWEEN (0.9711631341770827) AND ('-493891224')) THEN (x'9ec9' IN ()) ELSE ((NULL) NOTNULL) END); -- 0ms;
SELECT DISTINCT SUM(rt1.c3) FROM t1 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0))) BETWEEN (rt1.c3 COLLATE BINARY) AND ((((vt0.c1))<((rt1.c2))))) DESC  NULLS FIRST, ((((rt1.c3)IS NOT(rt1.c1)))&(rt1.c0 COLLATE NOCASE)) DESC;SELECT DISTINCT ((rt1.c2) BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM FROM vt0, rt1, vt1, t1; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1, vt1 WHERE (LIKELIHOOD(((NULL) BETWEEN (NULL) AND (0.8432451154008345)), 0.8433654104249282)) LIMIT 580965332; -- 0ms;
SELECT DISTINCT ((HEX(vt1.c0))>>(((rt1.c2)LIKE(vt0.c0)))) FROM vt1, vt0, t1, rt1 NOT INDEXED; -- 0ms;
SELECT CASE ((rt1.c3) ISNULL)  WHEN ((rt1.c0)=(t1.c0)) THEN (NOT (NULL)) ELSE CASE rt1.c1  WHEN x'' THEN rt1.c2 ELSE vt0.c0 END END, rt1.c2, (((((((rt1.c0))!=((rt1.c2))))OR(CASE t1.c0  WHEN rt1.c1 THEN t1.c0 END)))OR(rt1.c3)) FROM t1, rt1 WHERE (CAST('1466412048' COLLATE RTRIM AS BLOB));SELECT ALL SUM(vt1.c0) OVER () FROM vt0, rt1 WHERE (SQLITE_COMPILEOPTION_USED(((x'')LIKE('roQn'))));SELECT ALL json_remove((('-1063117931') NOT BETWEEN (vt1.c0) AND (rt1.c2)), (((rt1.c2, rt1.c0, t1.c0)) BETWEEN ((vt0.c1, rt1.c3, rt1.c3)) AND ((rt1.c3, vt1.c0, rt1.c3)))) FROM rt1, vt1, t1 WHERE (x'');SELECT DISTINCT TOTAL(CASE rt1.c1  WHEN rt1.c1 THEN t1.c0 ELSE vt1.c0 END) FROM vt0, vt1;SELECT ALL x'' FROM vt1, t1; -- 0ms;
SELECT DISTINCT LEAD(CASE NULL  WHEN (NOT (rt1.c2)) THEN ((rt1.c2)>=(rt1.c0)) ELSE ((((((((vt0.c1)AND(vt0.c0)))OR(rt1.c1)))OR(rt1.c2)))OR(vt1.c0)) END, ((((((t1.c0) ISNULL))AND(vt1.c0 COLLATE RTRIM)))AND((~ (t1.c0)))), ((CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c0 END) IS FALSE)) OVER () FROM rt1, vt1, t1, vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE BINARY FROM t1, vt0, rt1, vt1 WHERE (x''); -- 0ms;
SELECT (((((~ (rt1.c1)))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND(((vt1.c0) IS TRUE))) FROM rt1, vt0, vt1 WHERE ((((((((((x'')OR(NULL)))AND('⥓燁G6G5먮T')))AND(NULL)))OR(x'')) IN ())); -- 0ms;
SELECT '	!eqOW''', ((IFNULL(rt1.c0, rt1.c1)) NOT BETWEEN (((rt1.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)), ((NULL) BETWEEN (TRIM(DISTINCT vt1.c0, t1.c0)) AND (SUM(vt1.c0))) FROM rt1, vt0, t1, vt1; -- 0ms;
SELECT DISTINCT (((rt1.c3) NOTNULL) IN ()) FROM vt1, t1, rt1, vt0; -- 0ms;
SELECT ALL vt0.c0 FROM rt1, vt0; -- 0ms;
SELECT (((MIN(vt0.c0)))>=((CAST(t1.c0 AS BLOB)))) FROM vt1, rt1, vt0 WHERE ((+ ((((x'', x'', NULL)) BETWEEN (('ZL', x'', x'')) AND ((x'', '2132556822', x'')))))) GROUP BY CASE WHEN '1322363669' COLLATE RTRIM THEN ((vt0.c1)LIKE(rt1.c3)) ELSE ((rt1.c2)>(rt1.c2)) END, CASE WHEN 0xffffffff92d34a17 THEN UNLIKELY(rt1.c0) WHEN (vt0.c1 IN ()) THEN CASE WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c3 WHEN 0.10117450812415285 THEN rt1.c1 END WHEN ((rt1.c2)<=(vt0.c0)) THEN CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END END, (rt1.c0 IN ()), t1.c0, ((CASE WHEN rt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END) IS TRUE) HAVING MAX(SUM(rt1.c3 COLLATE RTRIM)) LIMIT 745710345 OFFSET -1039346327;SELECT ((TOTAL(vt0.c0))==((rt1.c1 IN ()))) FROM rt1, vt1, vt0 GROUP BY json_type(((vt0.c1) NOTNULL)), (((CAST(t1.c0 AS TEXT)))<>((NULLIF(DISTINCT rt1.c3, rt1.c0)))), ((((((rt1.c2)AND(t1.c0)))AND(vt1.c0)))/(((vt0.c0)==(vt0.c1)))), ((vt0.c1 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (((((((((rt1.c3)OR(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))), ((((t1.c0)==(rt1.c0))) ISNULL);SELECT CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER), ((((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c3 WHEN vt1.c0 THEN x'' WHEN 0.9526330657013764 THEN t1.c0 ELSE vt0.c1 END)OR(((t1.c0) IS TRUE))))AND(TRIM(DISTINCT vt1.c0))), CAST(rt1.c1 AS BLOB) COLLATE NOCASE, (((vt0.c0 IN ())) NOT NULL), LIKELIHOOD(DISTINCT ((((rt1.c2)OR(vt1.c0)))OR(rt1.c2)), 0.4161860106835801) FROM vt0 LIMIT -622451236;SELECT ((x'')+(((rt1.c2) IS FALSE))) FROM t1, vt1, rt1, vt0; -- 0ms;
SELECT ((CAST(1369015617 AS TEXT)) NOTNULL), (((rt1.c1 IN ())) BETWEEN ((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) AND ((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))), HEX(vt0.c0 COLLATE BINARY) FROM rt1, vt0 WHERE (((((((1.578707796E9) ISNULL))OR('-1166620725')))AND((+ (x''))))) ORDER BY ((((t1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))||((((t1.c0))=((rt1.c0))))) DESC  NULLS LAST, ((((vt0.c1) IS FALSE))>=(((((x'')AND(vt1.c0)))AND(t1.c0)))) ASC  NULLS FIRST, CASE WHEN (~ (vt1.c0)) THEN ((rt1.c2) IS TRUE) END  NULLS LAST;SELECT DISTINCT (((rt1.c3) IS FALSE) IN (rt1.c0 COLLATE RTRIM)), ((((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))OR(((rt1.c1)&(rt1.c2)))))OR(TOTAL(vt0.c1))), ((((((((((((vt1.c0)AND(vt0.c0)))OR(t1.c0)))OR(COUNT(*))))AND(MAX(t1.c0))))OR(CAST(vt1.c0 AS BLOB))))AND((vt1.c0 IN (rt1.c1, rt1.c1)))) FROM vt0, vt1, t1;SELECT DISTINCT CAST('b_' AS REAL) COLLATE RTRIM FROM t1 WHERE (((((NULL COLLATE RTRIM)OR(((-1515593161)<<(-1938407377)))))OR((((0.3684205014582328))>((x'')))))); -- 0ms;
SELECT ALL (CASE WHEN x'a38d' THEN t1.c0 ELSE vt0.c0 END IN ('5.*b' COLLATE NOCASE)) FROM vt0 WHERE (((((('-510040294', NULL, 0.26603408563528363))<=((0.900164723861434, 0.37508679669283074, 0x4930a5dc))))>>(((((0.22693756638548512)AND('-80436571')))OR(0.85930433574305)))));SELECT DISTINCT LEAD(((0.1651258904264089)/(((0.4693070225995879) NOTNULL))), NULL, ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1))) OVER (), ((t1.c0) IS TRUE), ((rt1.c2)IS((vt0.c1 IN ()))) FROM vt0 WHERE (TRIM(DISTINCT CASE WHEN x'' THEN x'' WHEN 0.09055966231274537 THEN 'p''I' WHEN 0.6058922179571613 THEN NULL END, LAST_INSERT_ROWID()));SELECT DISTINCT (((t1.c0)) BETWEEN ((MAX(rt1.c1))) AND ((AVG(rt1.c1)))), ((vt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)) COLLATE RTRIM COLLATE RTRIM, (((((rt1.c1)|(t1.c0)), ((rt1.c2)=(vt1.c0)), (NOT (rt1.c0))))<>(((rt1.c2 IN ()), (vt0.c1 IN ()), ((rt1.c1)GLOB(vt0.c1))))) FROM vt0 WHERE ((((NULL, '⚹M#{J\', NULL)) BETWEEN ((CAST('0.09841927879613943' AS NUMERIC), (((NULL, x'', NULL)) BETWEEN ((x'', '370461506', x'e380')) AND ((0.22414183411765387, 0.07983067438866731, x''))), ((((NULL)AND(NULL)))OR('K6gm')))) AND (((((('0G(ul')AND('')))AND(NULL)), (('63')GLOB(NULL)), CASE -1.706553551E9  WHEN 0.4526068392016125 THEN NULL WHEN 0.4205555513274677 THEN x'33215f68' WHEN '-1603953808' THEN ' 6੖J' END))));SELECT DISTINCT '0.9962604223704318' FROM rt1, vt0, t1; -- 0ms;
SELECT ALL ((rt1.c0)IS NOT('m0V7bX')) FROM rt1, vt0, vt1, t1 WHERE (CASE WHEN ((((2.12053704E9)OR(x'')))AND('')) THEN (('-2128673710') NOT BETWEEN (NULL) AND (NULL)) ELSE (((('੖|')OR('')))AND(NULL)) END); -- 0ms;
SELECT ALL (~ (MIN(t1.c0))), CASE WHEN AVG(vt0.c1) THEN (t1.c0 IN ()) END, CASE WHEN vt1.c0 THEN vt0.c0 END FROM t1, vt0, vt1 LIMIT 1578707796; -- 0ms;
SELECT ALL (+ (((vt0.c1)==(rt1.c3)))) FROM vt0;SELECT LAST_VALUE(CASE CAST(vt0.c0 AS INTEGER)  WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c0)<=('WD')) ELSE vt0.c1 END) OVER () FROM vt0, t1 WHERE ((('615255045' COLLATE RTRIM) BETWEEN (((0xffffffffcda17df5) BETWEEN ('3el᫅') AND ('1714848017'))) AND (((NULL)>=(x''))))); -- 0ms;
SELECT DISTINCT CAST(MIN(0.49985737217804194) AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING) FROM t1, vt1 WHERE (((CAST(x'' AS INTEGER)) NOTNULL)); -- 0ms;
SELECT ALL CASE (rt1.c0 IN ())  WHEN rt1.c0 COLLATE NOCASE THEN rt1.c2 COLLATE NOCASE WHEN ((rt1.c1)<(rt1.c1)) THEN (NOT (rt1.c2)) WHEN ((t1.c0)<(vt1.c0)) THEN x'' ELSE 0.7104724915726608 END FROM vt0, vt1 GROUP BY x'';SELECT DISTINCT (((((((((((((vt0.c0 IN (vt0.c0)))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.c1)AND(t1.c0)))))AND(((rt1.c1) ISNULL))))AND(((vt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'bd90')))))OR(((vt1.c0)IS NOT(rt1.c1)))) FROM rt1, vt1, t1 GROUP BY (((rt1.c1 IN ())) NOT BETWEEN ((((rt1.c0, vt1.c0, 0.04596396310082562)) NOT BETWEEN ((rt1.c2, rt1.c2, vt0.c0)) AND ((rt1.c0, rt1.c1, rt1.c0)))) AND (((rt1.c0) NOTNULL))), rt1.c2, ((0Xffffffffcf4adcc7) ISNULL) HAVING ROUND(((rt1.c2)*(NULL)), (((rt1.c3, '-J2_ᳬO?<', rt1.c3)) NOT BETWEEN ((rt1.c0, vt1.c0, rt1.c2)) AND ((rt1.c0, vt0.c0, vt0.c0))));SELECT DISTINCT (NOT (((rt1.c3) ISNULL))) FROM vt0, vt1, t1 WHERE (CAST(CAST(-1.831646697E9 AS INTEGER) AS BLOB)) ORDER BY CASE WHEN CAST(rt1.c3 AS TEXT) THEN 0.9954833461357221 END DESC;SELECT ((CASE ''  WHEN vt0.c0 THEN rt1.c3 END) ISNULL) FROM rt1, vt1, t1 WHERE (0.3987209896065881);SELECT DISTINCT ((((((rt1.c3)OR(vt1.c0)))OR(rt1.c2)))<=(x'')) FROM rt1, vt0, t1 WHERE ((((((NULL)OR(0.9381495827238082)))OR('oF쟝u')) IN ((((((((('꯺]I')AND(NULL)))AND(x'0338')))OR(NULL)))OR(''))))) GROUP BY CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER), 0.4150422702755717, (((json_extract(rt1.c1, vt0.c1, rt1.c3, vt0.c1)))<((0x79594275))) ORDER BY (((vt1.c0, '1106646719', '')) BETWEEN ((('1026251329' IN ()), ((vt0.c1)AND(rt1.c1)), vt1.c0 COLLATE BINARY)) AND ((((rt1.c2)LIKE(rt1.c0)), NULL, UPPER(DISTINCT rt1.c3)))) ASC  NULLS FIRST, (((t1.c0, rt1.c3, rt1.c2)) BETWEEN ((((vt1.c0)!=('0.45539578532870806')), (((0X6f27ab1a, rt1.c3, rt1.c3))<((rt1.c0, rt1.c1, rt1.c2))), (((vt0.c0))>((rt1.c1))))) AND (((((vt1.c0, rt1.c0, rt1.c3))!=((t1.c0, rt1.c2, rt1.c0))), (- (rt1.c0)), ((8.676138E7)LIKE(vt0.c1))))) ASC  NULLS FIRST;SELECT ALL GROUP_CONCAT(t1.c0) FROM vt1 GROUP BY ((((((rt1.c2, t1.c0, rt1.c2)) NOT BETWEEN ((NULL, vt0.c1, NULL)) AND ((rt1.c2, NULL, rt1.c2)))))<=(((((vt0.c0))<((vt0.c0)))))), (((CAST(vt1.c0 AS INTEGER), ((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)), (~ (rt1.c0))))>((((rt1.c0)<<('-160638366')), '-497023973', ((vt0.c0)<=(rt1.c3))))), ((((rt1.c1)LIKE(rt1.c0))) ISNULL) ORDER BY TOTAL_CHANGES()  NULLS FIRST;SELECT ALL '扎%>' FROM t1, vt0, rt1, vt1 WHERE (LOWER(DISTINCT NULL COLLATE NOCASE)) LIMIT -1274654986 OFFSET -248273034; -- 0ms;
SELECT CAST(((vt0.c1) BETWEEN (rt1.c0) AND (rt1.c1)) AS TEXT), (- (CASE WHEN vt0.c1 THEN rt1.c1 END)), (((NOT (vt1.c0)))&((((rt1.c1))>((rt1.c0))))), (((CAST(t1.c0 AS NUMERIC)))>=((((vt0.c0) BETWEEN (t1.c0) AND (rt1.c1))))), ((MIN(vt0.c1)) BETWEEN (rt1.c0) AND (CAST(vt1.c0 AS INTEGER))) FROM t1, vt1, rt1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM)|(((rt1.c2) NOT NULL))); -- 1ms;
SELECT ((LIKELIHOOD(vt1.c0, 0.07028756051657314)) IS FALSE) FROM rt1, vt1, t1 WHERE ('MO䚳\.{omH'); -- 0ms;
SELECT ALL MAX(CAST(rt1.c2 AS TEXT)), CAST(t1.c0 COLLATE NOCASE AS BLOB), ((CAST(vt1.c0 AS BLOB)) BETWEEN (rt1.c2 COLLATE RTRIM) AND (SUM(vt0.c0))) FROM vt0, t1, rt1;SELECT NULL FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c1))) NOT BETWEEN ((rt1.c1 IN (rt1.c0))) AND (((rt1.c2) NOTNULL))), '861275221', ('' COLLATE RTRIM IN (((rt1.c0) BETWEEN (1.508406416E9) AND (vt0.c1)))) FROM vt1, vt0, t1, rt1; -- 0ms;
SELECT TOTAL((rt1.c2 IN ())) OVER ( ORDER BY (~ (CAST(rt1.c1 AS INTEGER)))  NULLS FIRST) FROM vt0, rt1, t1, vt1 WHERE (((((('-410291729') BETWEEN (x'c11a') AND ('3<'))))>=(((~ (0xfffffffffeb30922)))))); -- 0ms;
SELECT DISTINCT CAST(CAST(0Xffffffffe9145058 AS BLOB) AS REAL) FROM rt1, t1 LIMIT 2106103104 OFFSET 1454385201; -- 0ms;
SELECT ALL ((((rt1.c2)AND(AVG(vt0.c1))))AND((vt0.c1 IN ()))) FROM vt0, vt1, t1 WHERE (JULIANDAY((0xffffffffe17c8fee IN ()), ((((((((NULL)OR('')))OR(NULL)))AND(0xffffffff923380ab)))OR('')), (((-1709154592)) BETWEEN ((-969434595)) AND ((-1.312845917E9))))); -- 0ms;
SELECT ALL NTILE(NULL) OVER ( GROUPS (((NOT (rt1.c3)))&(((rt1.c3)<>(rt1.c1)))) PRECEDING) FROM rt1, t1, vt1 UNION ALL SELECT SUM(rt1.c0) FROM t1, rt1, vt1, vt0;SELECT DISTINCT COUNT(*) OVER ( GROUPS  CURRENT ROW) FROM t1, vt0; -- 1ms;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, rt1 NOT INDEXED WHERE ((((NULL IN ())) BETWEEN (((0.7636150209119711) NOT NULL)) AND ((- ('1740167637'))))) LIMIT -493891224 OFFSET 84110365; -- 0ms;
SELECT DISTINCT ((DATETIME(rt1.c1, rt1.c3, vt0.c0)) NOT NULL) FROM vt0, vt1;SELECT DISTINCT CAST(rt1.c3 AS REAL) FROM rt1, vt1 WHERE (((((((((x'')AND((NULL IN ()))))OR(((-0.0)=(0.04596396310082562)))))AND(CASE NULL  WHEN -2052971021 THEN 0.5092222273173207 WHEN x'' THEN 0.2508652124655303 WHEN 0.43101951213677214 THEN '' END)))OR(CAST(0.7374936851278024 AS INTEGER)))) LIMIT -1520118717; -- 0ms;
SELECT DISTINCT ((json_array_length(rt1.c0, rt1.c1)) NOTNULL) FROM t1 WHERE (CAST(x'' COLLATE BINARY AS BLOB));SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (LOWER(DISTINCT NULL)))) LIMIT -1946129654 OFFSET 10238072; -- 0ms;
SELECT (((~ (rt1.c0)))LIKE('-727927388')), ((((rt1.c1)OR(vt1.c0)))OR(IFNULL(DISTINCT 831565153, vt0.c1))), ((vt0.c0 COLLATE NOCASE)AND((('cU\') IS FALSE))) FROM vt1, vt0, t1, rt1 WHERE ((((NULL)) NOT BETWEEN ((CASE 0xffffffffc1b726b2  WHEN NULL THEN -9.86356509E8 WHEN x'' THEN x'' WHEN x'' THEN NULL WHEN 0.9510129124467713 THEN NULL WHEN x'' THEN '' END)) AND ((1838101329 COLLATE BINARY)))) ORDER BY (((rt1.c0 IN ()))>=((~ (vt0.c1)))), CASE WHEN (NOT (NULL)) THEN CASE WHEN rt1.c1 THEN t1.c0 END END DESC; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0))) BETWEEN (((vt0.c1)>(vt1.c0))) AND (((vt0.c1)>=(rt1.c1)))) FROM vt1, vt0, t1, rt1 WHERE ((((0Xffffffffb7caf482, NULL, 0.9629648753062059)) BETWEEN ((CAST('0.45403935950110086' AS REAL), (+ ('K6gm')), ('' IN ('Z>')))) AND (((NULL IN ()), (0.09841927879613943 IN ()), ((NULL) IS FALSE))))); -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((((rt1.c2 COLLATE BINARY)OR(vt0.c1 COLLATE RTRIM)))OR(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))), PERCENT_RANK() OVER () FROM vt0, rt1; -- 0ms;
SELECT ALL ((((rt1.c2)AND(vt0.c0)))OR(CAST(rt1.c0 AS TEXT))) FROM vt0, vt1 WHERE (CAST(DATE(x'', ')', 'HDU') AS BLOB));SELECT ((((rt1.c2) ISNULL)) BETWEEN (((vt0.c0)<>(rt1.c1))) AND (CAST(rt1.c1 AS NUMERIC))), ((((vt1.c0)<(vt1.c0)))*((+ (rt1.c3)))), ((((rt1.c3)AND(rt1.c3)))AND(NULL)) COLLATE BINARY FROM t1, rt1 WHERE ((~ (0xffffffffcdea68d7))) ORDER BY t1.c0 ASC  NULLS FIRST;SELECT DISTINCT rt1.c0 FROM t1, rt1, vt1, vt0 WHERE (((NULL) IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT ALL 'EWq' FROM t1, vt0, vt1, rt1 WHERE (((CASE 0.5152348221743046  WHEN NULL THEN x'' ELSE NULL END) NOTNULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((t1.c0)OR(rt1.c2)))AND(t1.c0))), CASE (+ (rt1.c3))  WHEN LOWER(rt1.c2) THEN (NOT (rt1.c3)) WHEN rt1.c0 COLLATE RTRIM THEN (((NULL))<((vt1.c0))) WHEN ROUND(rt1.c2, 0.9305188619409626) THEN CAST(x'' AS INTEGER) ELSE GROUP_CONCAT(rt1.c2) END, (((vt1.c0, rt1.c1, rt1.c0)) NOT BETWEEN (((((vt1.c0))>((rt1.c1))), x'', vt1.c0 COLLATE NOCASE)) AND ((SUM(vt1.c0), ((t1.c0)+(vt1.c0)), ((rt1.c0)>>(vt0.c1))))) FROM t1 WHERE (((NULL)|(((('')) BETWEEN ((0.6028886705207879)) AND ((x'c8e8')))))) GROUP BY (~ (NULL)) HAVING (((rt1.c1 COLLATE BINARY))==((CASE WHEN vt1.c0 THEN vt1.c0 END))) LIMIT -524461814;SELECT (((~ (t1.c0)))AND(vt1.c0 COLLATE BINARY)) FROM vt0;SELECT DISTINCT CAST(CAST(vt0.c1 AS NUMERIC) AS NUMERIC) FROM vt1, rt1, t1, vt0; -- 1ms;
SELECT ((((t1.c0)&(t1.c0))) NOT BETWEEN (((((((((((((vt0.c1)OR(rt1.c2)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(NULL)))AND(vt0.c0))) AND (SQLITE_COMPILEOPTION_GET(rt1.c1))) FROM t1, vt1 LEFT OUTER JOIN rt1 ON (- (CASE WHEN vt0.c0 THEN rt1.c2 ELSE t1.c0 END)) RIGHT OUTER JOIN vt0 ON ((+ (vt0.c0)) IN ()) WHERE (((('147364109' IN ())) IS FALSE));SELECT ALL ((((rt1.c3)OR(vt0.c1)))OR(rt1.c3)) COLLATE RTRIM FROM vt0, t1, vt1 WHERE (((((NULL) IS FALSE)) NOT NULL));SELECT CASE WHEN ((rt1.c2)-(rt1.c2)) THEN (((rt1.c0)) NOT BETWEEN (('549505354')) AND ((rt1.c1))) ELSE vt1.c0 COLLATE BINARY END FROM t1 WHERE (((NOT (0.49665568321833053)) IN ()));SELECT ALL NULLIF(DISTINCT ((rt1.c1)=(rt1.c2)), ((rt1.c2) NOT BETWEEN ('-253040926') AND (rt1.c2))), TYPEOF(DISTINCT ((vt1.c0)*(t1.c0))), (- (rt1.c1)) COLLATE NOCASE FROM rt1, t1, vt0, vt1 WHERE (((((((((CAST('weekday0l' AS TEXT))AND((NULL IN ()))))OR(((NULL)>=(0x349f0a56)))))OR(-1166620725)))AND(''))); -- 0ms;
SELECT DISTINCT (((rt1.c1)) BETWEEN ((COUNT(*))) AND ((CAST(rt1.c2 AS REAL)))), ((vt1.c0)<=(rt1.c1)), ROW_NUMBER() OVER () FROM rt1, vt1 WHERE (CAST(CAST(NULL AS REAL) AS REAL)); -- 0ms;
SELECT DISTINCT ('0.013364812795118253' IN ()) FROM t1, vt1, vt0 WHERE (RTRIM(((0X43a7df33)GLOB(NULL)))); -- 0ms;
SELECT ALL (((-944018852))!=(((0.8335115628812921 IN ())))) FROM rt1, t1, vt0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS BLOB))=(json_quote(t1.c0))), ((rt1.c1 COLLATE RTRIM) IS TRUE), ((vt1.c0 COLLATE BINARY) IS TRUE) FROM t1, rt1, vt0;SELECT DISTINCT (~ (((x'a330')<<(x'ad35')))), RTRIM((~ (rt1.c3))), ((('{2K]p'))>((vt0.c1 COLLATE NOCASE))), SUM((((rt1.c1)) NOT BETWEEN ((x'bf8d')) AND ((vt1.c0)))), CASE WHEN ((((rt1.c0)OR(t1.c0)))OR(rt1.c1)) THEN NULL ELSE CASE WHEN rt1.c3 THEN t1.c0 WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c3 THEN vt1.c0 ELSE rt1.c1 END END FROM vt1, rt1, vt0, t1 WHERE (((CASE WHEN NULL THEN x'' WHEN NULL THEN ',dCni⭔?_' WHEN NULL THEN x'e0d6' WHEN x'' THEN 0x2a61c11d WHEN 0.7892916999981622 THEN 'm0V7bX' ELSE '36j휥?]	' END) BETWEEN (((0.29653272630226557)<(NULL))) AND (((NULL) NOT BETWEEN (2.092272456E9) AND (0.7219562218671887))))); -- 0ms;
SELECT GROUP_CONCAT(CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c3 END COLLATE NOCASE) FROM vt1, t1 GROUP BY t1.c0 HAVING ((((('-1709154592', rt1.c1, vt1.c0)) BETWEEN ((rt1.c1, t1.c0, vt0.c1)) AND ((vt0.c1, 0.6345887419374391, vt1.c0))))<=(((vt1.c0)IS(rt1.c1))));SELECT ALL ((vt0.c0) IS TRUE) COLLATE BINARY FROM vt1, vt0; -- 0ms;
SELECT ((json_object(vt0.c1, rt1.c3))=(((((((((vt0.c0)AND(vt1.c0)))AND(rt1.c1)))AND(rt1.c1)))AND(vt0.c1)))) FROM rt1, vt0;SELECT GROUP_CONCAT(((vt0.c1) BETWEEN (vt1.c0) AND (rt1.c1))) FROM vt1, t1 WHERE (0.3274937938741833);SELECT ALL ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt1.c0) ISNULL))) FROM t1 WHERE (((-4.83601759E8 IN ('200931451')) IN ((~ (NULL))))) ORDER BY ((((((((rt1.c3 COLLATE BINARY)AND(((t1.c0)*(rt1.c1)))))OR((NOT (vt0.c0)))))AND(((rt1.c0)==(rt1.c2)))))AND(((vt0.c1)!=(vt1.c0)))) ASC  NULLS LAST;SELECT (((rt1.c2, rt1.c1, vt0.c1)) NOT BETWEEN ((((vt0.c1) IS TRUE), ((((((((vt0.c0)OR(rt1.c2)))OR(t1.c0)))OR(vt0.c1)))OR(t1.c0)), (('0.9526330657013764')LIKE(rt1.c2)))) AND ((SUM(rt1.c0), AVG(rt1.c0), t1.c0 COLLATE RTRIM))) FROM vt0, vt1;SELECT DISTINCT (((((vt0.c0)<(NULL))))<=((MAX(rt1.c0)))) FROM rt1;SELECT DISTINCT TOTAL(((((rt1.c2)AND(vt0.c1)))OR(NULL))) OVER ( ORDER BY (~ ((((NULL))>((rt1.c2))))) DESC  NULLS FIRST) FROM t1, rt1, vt0, vt1; -- 0ms;
SELECT DISTINCT 0.8902151688538911 FROM vt0, rt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0, rt1;SELECT DISTINCT ((((CASE rt1.c0  WHEN NULL THEN vt0.c0 END)OR(INSTR(rt1.c0, rt1.c2))))OR(((((((((rt1.c1)AND(vt1.c0)))AND(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))) FROM rt1 WHERE ((+ (CAST(1.322363669E9 AS REAL))));SELECT ALL ((MIN(rt1.c3))GLOB(vt1.c0 COLLATE NOCASE)), (((+ (vt0.c1)))=(((vt0.c0) IS FALSE))), ((((((t1.c0)%(rt1.c0)))OR((rt1.c0 IN (rt1.c3)))))OR(CASE WHEN rt1.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c2 WHEN t1.c0 THEN rt1.c3 ELSE t1.c0 END)) FROM rt1, vt1 ORDER BY ((TRIM(DISTINCT rt1.c2, rt1.c3))/((((vt0.c1))!=((vt0.c0))))), (((rt1.c1) IS FALSE) IN (t1.c0));SELECT ALL (((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)) IN (((rt1.c1)&(rt1.c1)))) FROM rt1, t1, vt0, vt1 WHERE (TRIM((((x'', -986356509, '*')) NOT BETWEEN ((0.8629292255193197, '1025624301', '薞')) AND ((x'', 0xffffffffcdea68d7, 1.578707796E9))))); -- 0ms;
SELECT DISTINCT (('0.05294136088655155') NOT BETWEEN (CASE rt1.c3  WHEN vt0.c1 THEN vt0.c0 END) AND (COUNT(*))), CHAR(((rt1.c2)|(vt0.c0))), (((((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0)))) IS FALSE), (((0.3503435291831227) IS FALSE) IN ()), 'n{' FROM rt1, vt1, t1;SELECT DISTINCT TYPEOF((NOT (rt1.c0))), (((rt1.c2)+(rt1.c3)) IN ()), (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((TRIM(DISTINCT rt1.c1, rt1.c3)))), COUNT(t1.c0) OVER (), SUM(CAST(vt1.c0 AS REAL)) OVER () FROM vt0, rt1, vt1;SELECT rt1.c1 FROM vt0, t1, vt1 WHERE (((((((NULL)&(NULL)))AND((('0.4500636252400356')&(NULL)))))OR(UPPER('-285574052'))));SELECT ALL RANK() OVER (), CASE WHEN ((vt1.c0) NOT BETWEEN (1782444577) AND (vt0.c1)) THEN (((rt1.c3, t1.c0, rt1.c3, vt0.c0, rt1.c1))=((vt1.c0, rt1.c1, t1.c0, vt1.c0, x''))) ELSE ((rt1.c1) NOTNULL) END, ((rt1.c0)>(rt1.c1)) COLLATE RTRIM FROM vt0, rt1, vt1, t1 WHERE ((((('5侀') NOT NULL))IS(((0x1d1a4ba9) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((+ (rt1.c2)))&(AVG(rt1.c0))), ((((rt1.c2) IS FALSE))IS NOT(json_insert(rt1.c2, rt1.c2, rt1.c0, rt1.c0, rt1.c3))), ((LOWER(DISTINCT rt1.c3)) NOT NULL) FROM vt1, t1;SELECT CASE CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c1 END  WHEN ((rt1.c2) IS TRUE) THEN ((t1.c0) ISNULL) END, ((((((((((vt0.c0)=(rt1.c2)))AND((((vt1.c0))=((165067635))))))OR(((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(vt0.c0)))))AND((rt1.c0 IN ()))))AND(((rt1.c0)&(vt0.c0)))), NULL FROM vt0, vt1 GROUP BY (NOT (0.5391035353686545)) HAVING ((((vt0.c0 COLLATE BINARY)AND(rt1.c1 COLLATE NOCASE)))AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0))));SELECT DISTINCT (- ((NOT (rt1.c3)))) FROM vt0 NOT INDEXED;SELECT ALL ((((((((((((rt1.c2)OR(vt1.c0)))OR(vt0.c1)))AND(MIN(rt1.c1))))AND(CASE x''  WHEN vt1.c0 THEN vt0.c1 ELSE rt1.c1 END)))OR(t1.c0)))OR(0.9155135497598648)), vt0.c0, (~ (((rt1.c1) IS FALSE))) FROM rt1, vt1 WHERE (UPPER(DISTINCT (x'72a0' IN (',', 0xffffffffdef23dd9))));SELECT DATE(((((((((vt0.c0)OR(rt1.c2)))OR(rt1.c3)))AND(rt1.c2)))OR(vt0.c1)), ((((NULL)OR(rt1.c2)))OR(rt1.c2)), ((t1.c0) IS TRUE)) FROM vt1, t1 WHERE (TRIM(DISTINCT (NOT ('-1550983896'))));SELECT DISTINCT (((rt1.c2)) NOT BETWEEN (((- (0.7463479341157763)))) AND ((((((rt1.c3)OR(rt1.c1)))AND(vt1.c0))))) FROM vt0, rt1 WHERE ((('1466412048')||(x'f7a63056')) COLLATE NOCASE);SELECT (((t1.c0))<=((vt0.c1))) COLLATE BINARY FROM t1;SELECT ((((((rt1.c2, rt1.c3, rt1.c2))>((vt0.c1, x'', vt0.c1)))))>=((((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c1)))OR(vt1.c0)))OR(vt0.c1))))) FROM rt1, vt0, t1 WHERE (UNLIKELY(DISTINCT CAST('' AS REAL)));SELECT CASE ((rt1.c3)GLOB(rt1.c3))  WHEN vt1.c0 THEN CASE WHEN rt1.c3 THEN t1.c0 END END FROM rt1, vt0;SELECT DISTINCT (((((vt0.c1, rt1.c3, rt1.c1)) BETWEEN ((rt1.c1, vt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c2, vt1.c0))))=(((rt1.c2)%(t1.c0)))) FROM vt0;SELECT DISTINCT CAST('' AS NUMERIC) FROM t1, vt1, vt0, rt1; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0)))) AND ((vt1.c0 IN ()))), CASE COUNT(*)  WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE CAST(vt1.c0 AS INTEGER) END, ((((rt1.c1)*(vt1.c0)))>(((vt0.c0)&('z')))) FROM vt1, t1;SELECT ((((rt1.c1)OR(rt1.c3)))AND(vt1.c0)) COLLATE BINARY FROM t1 WHERE (CASE ((x'') NOT BETWEEN (x'af6ac52c') AND (0.2333261495694361))  WHEN '(V51Au\䔚' COLLATE RTRIM THEN ((x'')GLOB(')A')) END);SELECT CAST(((vt0.c0)IS(rt1.c2)) AS REAL), ((CASE WHEN t1.c0 THEN vt0.c0 ELSE rt1.c1 END) IS TRUE), CAST((vt0.c1 IN ()) AS TEXT) FROM rt1, t1, vt1, vt0; -- 1ms;
SELECT ((vt0.c0 COLLATE RTRIM) IS FALSE), (('-80436571')<>(((((rt1.c1)OR(vt0.c1)))AND(rt1.c3)))), ((((vt0.c0 COLLATE BINARY)OR(((((rt1.c1)OR(rt1.c3)))AND(x'')))))AND(CAST(t1.c0 AS TEXT))) FROM t1, rt1 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (CASE WHEN vt0.c0 THEN t1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN '-1509656342' THEN vt1.c0 ELSE vt1.c0 END) AND (((vt0.c1) IS FALSE))) DESC;SELECT ((((rt1.c0))<>((vt0.c1))) IN ()) FROM rt1, t1, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE '-145640429'  WHEN rt1.c3 THEN vt0.c0 END), ((((HEX(rt1.c2))OR((+ (x'b101')))))AND((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND (('-188541939'))))), ((rt1.c3 COLLATE BINARY) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) IS FALSE))) FROM rt1;SELECT DISTINCT ((((vt0.c0 IN ())))==((rtreenode(t1.c0, rt1.c3)))) FROM vt1, vt0, rt1 LIMIT -2105977514 OFFSET -1434788543;SELECT DISTINCT CAST(vt0.c1 AS NUMERIC) FROM rt1, vt0, t1, vt1 WHERE (CASE CAST(0.4993675917957121 AS BLOB)  WHEN CAST(0.8533226564633323 AS TEXT) THEN ((-5.78029583E8) BETWEEN (x'') AND ('')) WHEN ((NULL) NOT BETWEEN (0.8985774131662682) AND (1.636440574E9)) THEN (((NULL, NULL, 0.5822595496779788, NULL, NULL)) BETWEEN ((NULL, 0.4100118392183645, '-114772007', x'', 614845586)) AND ((x'5ee8', x'f227', 0.012459129694211146, '*g', '814795697'))) WHEN (- (0.9741547006611776)) THEN (((('v')AND(x'')))OR(0.24106274916160952)) ELSE COALESCE(NULL, NULL) END); -- 0ms;
SELECT DISTINCT ((((vt0.c0)=(NULL)))%(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0, t1, rt1; -- 0ms;
SELECT ALL AVG((vt1.c0 IN (x'', t1.c0))) OVER (), (NOT (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c0 END)), ((((484287140) IS TRUE)) IS FALSE) FROM t1, vt0, vt1, rt1; -- 1ms;
SELECT ALL (+ ((((rt1.c0, rt1.c0, NULL, rt1.c2, rt1.c1))>((rt1.c0, vt0.c0, t1.c0, vt0.c0, rt1.c0))))) FROM vt0, rt1, vt1 WHERE (CAST((+ (0.5802633229314504)) AS REAL)) ORDER BY (NOT (0.7113122931761467)) DESC, ((DATE(rt1.c0, rt1.c3, vt0.c1))&((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c3)))))  NULLS LAST;SELECT TIME(((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c0)), ((rt1.c1)%(rt1.c1)), TRIM(DISTINCT rt1.c0, vt1.c0)) FROM rt1, vt0, t1;SELECT DISTINCT ((((((((((vt1.c0)<=(1167769596)))OR(CASE WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN vt0.c0 END)))AND(((vt0.c1) BETWEEN (rt1.c2) AND (NULL)))))AND(((t1.c0) NOT NULL))))OR((x'' IN ()))) FROM rt1, t1, vt1 GROUP BY (((rt1.c3 IN (rt1.c3, 'P(He', rt1.c2))) IS TRUE);SELECT DISTINCT (- (CASE WHEN rt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN '-1752692658' WHEN x'' THEN rt1.c1 ELSE rt1.c3 END)) FROM vt0, rt1, vt1 GROUP BY (vt0.c0 IN ()) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1, vt0, vt1, t1; -- 0ms;
SELECT DISTINCT ((t1.c0) IS FALSE) COLLATE RTRIM FROM t1, rt1 WHERE ((((0.9426366033632616)) NOT BETWEEN ((json_type(0))) AND (('-1960936302' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT ((rt1.c3)<=(vt0.c1)) COLLATE NOCASE FROM t1, vt0, rt1 WHERE ((NULL COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT LEAD(CAST(rt1.c3 AS NUMERIC) COLLATE NOCASE, NULL, json_object(CAST(t1.c0 AS TEXT), 0.8672623243602263)) OVER () FROM rt1, t1 WHERE (CASE WHEN CASE '-1751342221'  WHEN '[ꦉ' THEN NULL WHEN '-508450145' THEN '123712063' WHEN '1508406416' THEN '0G(UL' END THEN HEX('622650423') WHEN CAST('dPj/' AS INTEGER) THEN ((NULL) NOT NULL) WHEN (0.006954129586211 IN ()) THEN (((((((('662062664')AND(0.4051248423913997)))OR('APzPa''a')))OR(NULL)))OR(NULL)) END) GROUP BY ((((rt1.c1 COLLATE NOCASE)OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c2 THEN NULL WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c3 END)))AND(NULL));SELECT ALL TOTAL(((((0.5784957266140242)OR(vt0.c1)))OR(t1.c0))) FILTER(WHERE CASE WHEN ((rt1.c0) NOT NULL) THEN t1.c0 COLLATE BINARY END) OVER () FROM t1, vt0, rt1; -- 0ms;
SELECT LAG(CASE rt1.c2 COLLATE BINARY  WHEN CASE vt0.c1  WHEN vt0.c0 THEN 0.3274819787886366 ELSE rt1.c0 END THEN NULL ELSE CAST(vt1.c0 AS NUMERIC) END, (((((NULL) NOT BETWEEN (rt1.c2) AND (vt1.c0))))<=((vt0.c0 COLLATE NOCASE))), NULL) OVER () FROM rt1, vt0, t1, vt1; -- 0ms;
SELECT DISTINCT SUM(x'') FROM t1, vt1, vt0 RIGHT OUTER JOIN rt1 ON (~ (vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((((rt1.c0)%(rt1.c1)))<<((NOT (rt1.c3)))) FROM rt1, t1, vt0 WHERE ((((((('')AND('')))AND(0.9513104933015594)))GLOB((((0.3375688965135383, NULL, -2128673710))>(('', x'', x'')))))); -- 0ms;
SELECT ALL ((((((t1.c0)OR(rt1.c1)))OR(rt1.c2))) NOT BETWEEN ((((vt0.c0))>((vt1.c0)))) AND ((((t1.c0))<((rt1.c1))))) FROM t1 WHERE (((('EmoB')LIKE(0.7347959193588436)) IN ()));SELECT ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))>(TOTAL_CHANGES())), ((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c2)))AND(((t1.c0) BETWEEN (rt1.c1) AND (vt1.c0)))))OR((vt0.c0 IN ()))), (('') NOT NULL), 1.320617507E9, vt1.c0 FROM t1, rt1;SELECT DISTINCT CASE GROUP_CONCAT(t1.c0)  WHEN (rt1.c0 IN (rt1.c0, t1.c0)) THEN AVG(t1.c0) ELSE ((vt1.c0)IS NOT(vt1.c0)) END, AVG(vt0.c0), (((((((rt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))))AND(TRIM(DISTINCT vt1.c0, vt0.c1))))AND(rt1.c2)) FROM vt0, vt1, t1 FULL OUTER JOIN rt1 ON json_valid(CASE WHEN vt0.c1 THEN vt1.c0 ELSE t1.c0 END); -- 0ms;
SELECT (((vt0.c1)) NOT BETWEEN ((((rt1.c1)IS(rt1.c1)))) AND (((- (vt0.c0))))), (+ (CAST(t1.c0 AS BLOB))), ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN ((+ (rt1.c3))) AND (rt1.c1)), LOWER(DISTINCT SQLITE_SOURCE_ID()), (rt1.c3 IN ()) FROM t1, rt1, vt1 WHERE ((((x'', x'', '')) BETWEEN ((CASE NULL  WHEN -1.515593161E9 THEN '' WHEN 0.04472021949012128 THEN 305354895 WHEN '' THEN -1840588573 WHEN '1028969045' THEN '' WHEN '1320617507' THEN NULL END, CASE WHEN 'u_Iq' THEN 0.1475705028877723 ELSE 0.09768710977903239 END, ((((((((((((x'')AND('宑2dtgcH|<')))AND('1072623101')))OR('s')))OR('')))AND(-1274654986)))OR(0.9102814736485176)))) AND ((x'' COLLATE BINARY, (((('680006065')OR(1502887428)))AND('1636440574')), (('㲺	섚tL\r') IS FALSE))))) ORDER BY (((((rt1.c1))>((t1.c0))))-(((t1.c0)AND(vt1.c0))))  NULLS FIRST LIMIT -1996152169;SELECT DISTINCT ((GROUP_CONCAT(NULL)) NOT BETWEEN ((+ (rt1.c0))) AND ((NOT (rt1.c1)))) FROM rt1; -- 0ms;
SELECT ((CAST(rt1.c1 AS BLOB)) NOTNULL), SUM(HEX(vt1.c0)) COLLATE RTRIM, CAST(((((((((vt0.c1)AND(rt1.c2)))AND(vt0.c1)))AND(t1.c0)))AND(rt1.c1)) AS INTEGER) FROM t1, rt1, vt0, vt1; -- 1ms;
SELECT DISTINCT (+ (SUM(rt1.c1))) FROM t1 WHERE (CASE WHEN ((NULL)<(0.732126730949747)) THEN (0xffffffffa564d443 IN ()) WHEN CASE NULL  WHEN 0X3bc9cc5f THEN x'fcb1' END THEN NULL COLLATE NOCASE WHEN (((('u_iq')AND('M]F(J<9w')))OR(0xffffffffb4064ef6)) THEN UNLIKELY('~Z') WHEN (('%	')||(x'')) THEN '' WHEN 8.11583324E8 COLLATE NOCASE THEN ((('108853160'))==(('9^\r4n'))) END) LIMIT -2036992805;SELECT ALL (((rt1.c3)=(t1.c0)) IN (COUNT(*))) FROM vt1, rt1;SELECT ALL GROUP_CONCAT((~ (rt1.c1))), rt1.c2, CASE ((rt1.c0) NOT NULL)  WHEN ((rt1.c1)<(rt1.c3)) THEN (((rt1.c3))>=((vt0.c0))) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END FROM t1 LIMIT 1094854095 OFFSET -1160061057;SELECT ALL (((rt1.c1, rt1.c2, x'')) NOT BETWEEN ((((((((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))AND(t1.c0)))OR(rt1.c1)), ((rt1.c1)|(rt1.c1)), ((((rt1.c2)OR(rt1.c3)))OR(rt1.c2)))) AND (('322879046', ((((vt1.c0)OR(rt1.c0)))OR(vt0.c1)), ((((rt1.c0)OR(t1.c0)))OR(vt0.c1))))), (NOT (((vt1.c0) IS FALSE))), GROUP_CONCAT(UPPER(rt1.c3)) OVER ( ORDER BY ((CASE WHEN t1.c0 THEN rt1.c2 END) NOTNULL)  NULLS FIRST, UNLIKELY(DISTINCT LAST_INSERT_ROWID())  NULLS LAST) FROM vt0, rt1 LIMIT 2026263398 OFFSET -417390818;SELECT ((((((((AVG(vt1.c0))AND(((((vt1.c0)AND(rt1.c1)))OR(rt1.c0)))))OR(((0.14847036509494327) BETWEEN (rt1.c2) AND (t1.c0)))))AND(vt1.c0)))AND(MAX(rt1.c2))) FROM t1, vt1, rt1, vt0; -- 0ms;
SELECT CASE WHEN ((rt1.c2) NOT NULL) THEN ((1.431100843E9)IS(rt1.c3)) ELSE CASE WHEN t1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN '0Y!EC' THEN t1.c0 END END FROM t1 NOT INDEXED, rt1 WHERE (CASE CAST(0.08044171032852665 AS REAL)  WHEN ((0.7314440775472444) IS FALSE) THEN (('') BETWEEN (x'') AND (x'')) WHEN CAST(0.08477801529945483 AS REAL) THEN (NULL IN (x'')) WHEN (NOT (NULL)) THEN 0.0038816363897339334 END) GROUP BY (~ (((rt1.c0)&(rt1.c1)))), ((((((((rt1.c3)AND(rt1.c3)))AND(NULL)))AND(vt1.c0)))OR('QGE㪮')), ((((vt1.c0)IS(vt0.c1))) BETWEEN (rt1.c3) AND (('P<ew' IN ()))) HAVING CASE vt0.c1  WHEN vt0.c0 THEN rt1.c0 ELSE vt1.c0 END COLLATE RTRIM;SELECT ALL ((vt1.c0 IN ()) IN ()) FROM vt0, t1 WHERE (((('䙈') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c2)-(vt0.c1)) THEN CASE rt1.c3  WHEN vt0.c0 THEN rt1.c0 WHEN '' THEN vt0.c1 WHEN rt1.c2 THEN rt1.c2 END END FROM vt1, rt1, vt0, t1; -- 0ms;
SELECT ((((((rt1.c0)OR(vt1.c0)))OR(rt1.c1)))%((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((t1.c0))))), (+ (NULL)), COUNT(rt1.c2) FROM vt0, rt1, t1 WHERE (((CAST('567141225' AS REAL)) NOT BETWEEN (((NULL) NOT BETWEEN (x'') AND (''))) AND ((0xffffffff83818b16 IN (x''))))) GROUP BY ((((((((rt1.c0)OR(((((((((vt0.c1)OR(rt1.c0)))OR(NULL)))OR(rt1.c2)))AND(rt1.c0)))))OR(CAST(vt0.c0 AS INTEGER))))OR(TRIM(vt0.c1))))AND(rt1.c3)) HAVING GROUP_CONCAT(0X7b003c88);SELECT ALL TOTAL(((t1.c0)AND(rt1.c0))) FROM vt0, rt1;SELECT DISTINCT CASE ((rt1.c1) BETWEEN (vt0.c1) AND (vt1.c0))  WHEN GROUP_CONCAT(vt1.c0) THEN (vt0.c0 IN ()) END FROM vt1 WHERE (((((((((((0x3d21c8ed)AND('x YTFnB뀐?')))OR(0xe4f613e)))OR(0.2206432259574318)))OR('6T~5'))) IS TRUE));SELECT DISTINCT ((rt1.c0)IS NOT('u\')) FROM vt1, vt0, rt1 WHERE (CASE ((NULL)<<(x'a173a1dd'))  WHEN CASE WHEN 0X18969914 THEN 0.9054276739161128 ELSE NULL END THEN (((x'3b0cf989')) NOT BETWEEN ((NULL)) AND ((0.09841927879613943))) ELSE CASE WHEN NULL THEN 'WFo~R' END END) ORDER BY CASE vt0.c1  WHEN rt1.c0 THEN rt1.c2 END COLLATE BINARY ASC  NULLS LAST, CASE WHEN UPPER(DISTINCT vt0.c0) THEN (((vt1.c0, vt0.c1, vt0.c0, '765669836', rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c0, vt0.c0, rt1.c2, t1.c0)) AND ((rt1.c3, rt1.c1, rt1.c3, vt0.c0, vt1.c0))) ELSE (((vt0.c0))<((vt0.c0))) END DESC;SELECT DISTINCT SUM(((rt1.c2)<<(rt1.c2))), rt1.c0, NULL FROM t1, vt1, vt0, rt1 WHERE (CASE WHEN 256960782 THEN 'L' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))==(0Xffffffff9b3ea6f2)), ((rt1.c2) IS FALSE), (((vt0.c0 IN (rt1.c0, rt1.c1))) ISNULL), x'eb93', rt1.c2 FROM vt0, t1;SELECT DISTINCT CAST(((((vt0.c0)AND(vt1.c0)))OR(rt1.c1)) AS BLOB), CUME_DIST() OVER ( GROUPS BETWEEN ((COALESCE(DISTINCT 0.43927612401656024, vt0.c0))*(t1.c0)) PRECEDING AND CASE ((rt1.c3)>(rt1.c1))  WHEN NULL THEN NULLIF(rt1.c3, 671440432) ELSE ((t1.c0)%(vt0.c1)) END FOLLOWING EXCLUDE TIES), ((SUM(rt1.c2)) IS TRUE) FROM rt1, vt1;SELECT DISTINCT ((COUNT(t1.c0)) NOT NULL) FROM rt1, vt1 WHERE (((((691222275)==('9/')))/((NOT (x'')))));SELECT LIKELIHOOD(DISTINCT (vt0.c1 IN ()), 0.06952862881299327), MAX(vt0.c0), SUM(HEX(rt1.c2)) OVER () FROM t1, rt1, vt0 WHERE (CAST((x'' IN (x'', NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT COUNT(*), CAST(COUNT(*) AS NUMERIC), ((((CASE rt1.c1  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END)OR(CASE rt1.c0  WHEN vt0.c1 THEN rt1.c2 WHEN x'bd21' THEN vt0.c0 WHEN vt0.c0 THEN rt1.c2 END)))OR((~ (rt1.c1)))), (((((rt1.c2) IS FALSE)))<(((rt1.c2 IN ())))), ((UNLIKELY(DISTINCT 1606079989))/(json_valid(rt1.c1))) FROM t1;SELECT DISTINCT ((CASE rt1.c2  WHEN vt0.c1 THEN vt1.c0 ELSE -1164240860 END) NOT BETWEEN (rt1.c2) AND (((((NULL)AND(rt1.c3)))OR(rt1.c3)))), ((((rt1.c1)OR(vt0.c1))) BETWEEN ('''_*bOVWN' COLLATE BINARY) AND (SUM(rt1.c3))), CASE WHEN ((rt1.c1)=(t1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(rt1.c2)) WHEN CASE WHEN rt1.c1 THEN NULL END THEN ((((((((vt1.c0)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)) WHEN ((rt1.c2)OR(vt1.c0)) THEN ((((((((vt0.c1)OR('831565153')))AND(rt1.c3)))AND(NULL)))AND(t1.c0)) WHEN (((0.3419549490454248, vt0.c1, vt0.c1)) NOT BETWEEN ((t1.c0, rt1.c1, rt1.c3)) AND ((x'', rt1.c2, vt0.c1))) THEN ((rt1.c0) BETWEEN (vt1.c0) AND (rt1.c1)) WHEN CASE WHEN rt1.c2 THEN rt1.c3 END THEN COUNT(vt0.c0) WHEN '' THEN vt0.c1 WHEN json_array_length(t1.c0, rt1.c2) THEN 0.016951076571363632 ELSE x'' END FROM rt1, vt1, t1;SELECT (((+ (vt1.c0))) IS TRUE) FROM vt0, vt1, rt1, t1 LIMIT -114772007; -- 0ms;
SELECT ALL ((rt1.c0)+(TYPEOF(rt1.c0))), ((rt1.c0 COLLATE BINARY)>((((rt1.c2))>((vt0.c1))))), COUNT(*) OVER () FROM vt0, rt1, vt1 WHERE (((CAST(x'' AS TEXT)) IS FALSE)) LIMIT -434319399; -- 0ms;
SELECT DISTINCT ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE, (((((vt0.c0 IN ()))OR(((vt0.c0)&(t1.c0)))))OR(((rt1.c1) NOTNULL))), (- ((vt1.c0 IN (t1.c0, t1.c0)))) FROM t1, vt0, vt1, rt1 WHERE ((((((((((NULL IN (NULL, x'', 0x49430ee3)))AND(((((948535756)AND('-js#')))OR(0.9380808238952847)))))AND((('662062664') BETWEEN (NULL) AND (102926833)))))AND(('1143391720' IN (0xffffffffbe8ef5e8)))))OR(((('2092272456')) BETWEEN ((1423641751)) AND ((0.41855599433976975)))))); -- 0ms;
SELECT ALL (~ ((rt1.c1 IN ()))) FROM rt1 WHERE (NULLIF(DISTINCT (((0.13722102558053928))!=((0.5335983877864648))), LOWER(x''))); -- 0ms;
SELECT DISTINCT (((((t1.c0))!=((vt0.c1)))) BETWEEN (UPPER(DISTINCT rt1.c1)) AND (((vt0.c1) IS TRUE))) FROM vt1, rt1;SELECT ALL ((TOTAL(rt1.c3))||(CAST(t1.c0 AS REAL))), CAST(((((rt1.c2)AND(vt1.c0)))AND(rt1.c3)) AS REAL), MIN(rt1.c2) COLLATE NOCASE COLLATE NOCASE FROM vt0, rt1, vt1, t1; -- 0ms;
SELECT CASE CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt1.c0 END  WHEN (((rt1.c1)) NOT BETWEEN ((0Xffffffffe0ff270e)) AND ((vt1.c0))) THEN ((rt1.c2)>>(rt1.c3)) ELSE ((((((((vt1.c0)AND('')))AND(vt1.c0)))OR(vt0.c1)))AND(rt1.c1)) END, ((((((((rt1.c3)OR(((rt1.c1)IS NOT(t1.c0)))))AND(INSTR(vt0.c0, rt1.c0))))AND(CAST(vt0.c1 AS TEXT))))OR((((vt0.c0))<((rt1.c1))))), COUNT(COALESCE(DISTINCT rt1.c0, rt1.c2)), ((((rt1.c1)>(rt1.c2))) BETWEEN (COALESCE(rt1.c2, vt0.c0)) AND (((rt1.c3)<=(rt1.c1)))), (('')<=(TYPEOF(vt1.c0))) FROM t1, vt1 FULL OUTER JOIN rt1 ON (((rt1.c1 IN (rt1.c0)))+(((t1.c0) BETWEEN (NULL) AND (t1.c0)))) GROUP BY (NOT (((t1.c0) ISNULL)));SELECT DISTINCT (- (rt1.c0)) COLLATE RTRIM, PERCENT_RANK() OVER (), ((((vt0.c1) NOT NULL)) NOTNULL), ((CAST(vt0.c0 AS BLOB))AND(((t1.c0) BETWEEN (t1.c0) AND ('')))), NTH_VALUE((((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) ISNULL), (((vt1.c0, '59582711', vt0.c0)) NOT BETWEEN (('', SQLITE_COMPILEOPTION_GET(vt0.c0), vt0.c1)) AND ((vt1.c0, (((vt0.c0))=((vt0.c0))), (t1.c0 IN ()))))) OVER () FROM vt0, vt1, t1;SELECT DISTINCT (((((vt0.c0))=((rt1.c0)))) NOT NULL) FROM t1, rt1, vt0, vt1 WHERE (CAST((NOT (0.13694087502792796)) AS BLOB)); -- 0ms;
SELECT DISTINCT TOTAL(x''), LEAD(((((+ (0.9169682176910162)), ((rt1.c3) NOT BETWEEN (rt1.c2) AND ('t뽸')), load_extension(vt0.c1)))>=(((((vt0.c0, NULL, vt0.c0)) BETWEEN ((rt1.c1, vt0.c1, rt1.c3)) AND ((NULL, x'', x'b538'))), rt1.c2, x'0ea0'))), (((rt1.c0) NOTNULL) IN (vt0.c0)), CAST(CASE WHEN 0.90258806572635 THEN rt1.c1 END AS INTEGER)) OVER ( ORDER BY HEX(DISTINCT vt0.c0 COLLATE RTRIM)  NULLS LAST), ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)))GLOB((('0.19854837642168432')IS NOT(rt1.c0)))) FROM vt1, vt0, rt1 LIMIT 0 OFFSET 716158227;SELECT ALL ((((x'')-(t1.c0)))+(CAST(rt1.c3 AS BLOB))), (- ((~ (vt0.c1)))), (~ (AVG(rt1.c1))) FROM rt1, vt1, t1 WHERE (CASE ((((0.7648595256569063)AND(0X7a765c03)))AND(0.7892916999981622))  WHEN (NULL IN (-485988795)) THEN ((x'ecb3') BETWEEN (NULL) AND (NULL)) WHEN 0.7331519715609295 COLLATE BINARY THEN ((0.4500636252400356) NOT NULL) WHEN (-1962406224 IN ()) THEN '-1434788543' COLLATE BINARY ELSE HEX('-ꊥ') END);SELECT ((((vt1.c0 COLLATE NOCASE)AND((((rt1.c1))>=(('뛃p'))))))OR(rt1.c3)) FROM t1, rt1, vt0;SELECT ALL COALESCE(DISTINCT 0.8013295052211412, vt0.c0) FROM rt1, vt1, vt0, t1 WHERE ((((((((((x'' IN ()))OR((((0X7d5025e)) BETWEEN (('-1818434262')) AND (('-483601759'))))))OR(((0.3491262868175946)<<('1578707796')))))AND(((((0X3efbbe7)OR(0X54aa83d5)))OR(NULL)))))AND((((0xffffffffe26266bd))=(('-356945334')))))) ORDER BY ((((((((t1.c0 COLLATE NOCASE)OR(CAST(rt1.c1 AS TEXT))))OR(((rt1.c0)||(vt1.c0)))))OR(CAST(rt1.c2 AS INTEGER))))OR(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END) FROM vt0, t1 LIMIT -528208059 OFFSET -1972102459;SELECT SUM(((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c0))) OVER ( GROUPS CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) PRECEDING EXCLUDE GROUP) FROM vt1, vt0, t1;SELECT ALL -7.23503447E8 FROM rt1 WHERE ((((CAST(0X15b20b AS NUMERIC)))=((((0.2938081268492788) BETWEEN ('1508406416') AND (0.24304178488048944)))))) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt1.c0) ISNULL)))) DESC;SELECT TOTAL(CASE rt1.c1  WHEN vt0.c0 THEN vt0.c1 END) COLLATE RTRIM, ((((rt1.c1))>((rt1.c2))) IN (((((((((((((vt1.c0)OR(NULL)))OR(rt1.c2)))AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(rt1.c1)), (((t1.c0))!=((vt0.c1))))), ((vt0.c1) NOT NULL) FROM rt1, vt1, vt0, t1 GROUP BY CAST((NOT (rt1.c2)) AS REAL) HAVING (((((((((rt1.c0 IN (rt1.c3)))OR(vt0.c1 COLLATE RTRIM)))AND(MIN(vt0.c1))))OR(LOWER(DISTINCT rt1.c2))))AND(((x'') NOT BETWEEN (vt0.c1) AND (0.6830496863335224)))) LIMIT 1565822523 OFFSET -220015376; -- 0ms;
SELECT ((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<=((MAX('-1148667481')))) FROM vt0 WHERE ((~ (CASE WHEN NULL THEN x'ac11' END)));SELECT (((rt1.c0, '-327465952', vt0.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)), (- (rt1.c0)), CASE WHEN rt1.c3 THEN rt1.c3 WHEN x'' THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 END)) AND ((GROUP_CONCAT(rt1.c2), ((t1.c0)/(vt0.c0)), (((rt1.c1))=((-1.45640429E8)))))) FROM vt0;SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c2))) BETWEEN (((((((((rt1.c3)AND(vt0.c1)))AND(t1.c0)))OR(vt0.c0)))OR(vt0.c1))) AND (COUNT(*))) FROM rt1;SELECT (((rt1.c0 IN ()))AND(((t1.c0)>=(0.23763726658759243)))) FROM vt0, vt1, t1, rt1 WHERE ((((+ (x''))) BETWEEN (UPPER(DISTINCT 'dn[\s')) AND ((((522685811, 0Xffffffff8e4b52bd, 0X7be8d124)) BETWEEN ((0.6912306240529581, 0.7563363856061558, -936418328)) AND ((NULL, x'', NULL)))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt1 WHERE ((((+ (',j')))!=(((NULL)LIKE(NULL))))); -- 0ms;
SELECT t1.c0 FROM rt1;SELECT DISTINCT (((((vt1.c0)) BETWEEN ((rt1.c0)) AND ((vt1.c0))))<(((vt0.c1) IS TRUE))) FROM vt1, vt0, t1, rt1 WHERE (ABS(CASE 'd+4'  WHEN NULL THEN 1906328858 END)); -- 0ms;
SELECT DISTINCT ((('Sp')+(t1.c0)) IN ()) FROM rt1, vt0, t1, vt1 NOT INDEXED ORDER BY DATETIME(TYPEOF(vt0.c0), rt1.c0, t1.c0), (((x'')==(rt1.c3)) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((x'')AND(((NULL)==(vt0.c0)))))AND(((rt1.c3) IS FALSE))), GROUP_CONCAT(CASE vt0.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END) OVER ( ORDER BY (NOT (vt0.c1)) COLLATE BINARY  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0))) BETWEEN ((((rt1.c0))==((rt1.c2)))) AND (CASE WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c1 END)) DESC), NULLIF((NOT (vt0.c1)), ((t1.c0)+(rt1.c1))), COUNT((- (vt0.c0))), (CASE vt0.c0  WHEN 0.8902151688538911 THEN rt1.c3 WHEN NULL THEN rt1.c3 WHEN vt0.c0 THEN rt1.c3 END IN ()) FROM t1 WHERE (DATETIME(((('-80436571')) BETWEEN ((0.6294511689846488)) AND ((0.7247186034155613))), (('') NOTNULL), (x'' IN ())));SELECT DISTINCT 0.06528144220694088 COLLATE BINARY FROM vt1; -- 1ms;
SELECT ((((((rt1.c0)AND(vt1.c0)))AND(rt1.c3))) BETWEEN (CAST('1824211004' AS BLOB)) AND (((vt0.c0)+(rt1.c3)))) FROM rt1;SELECT DISTINCT ((((((((CASE rt1.c0  WHEN x'' THEN vt0.c1 ELSE vt0.c1 END)OR(((((((((vt1.c0)AND(t1.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(rt1.c1)))))OR((vt0.c0 IN ()))))OR(TOTAL(vt0.c1))))OR(rt1.c2)) FROM vt1 ORDER BY ((((((((rt1.c0 COLLATE BINARY)AND(NULL)))AND(((((NULL)OR(NULL)))AND(vt0.c0)))))OR(((rt1.c1) IS TRUE))))OR(CAST(rt1.c3 AS INTEGER))) LIMIT -260661804;SELECT ALL TYPEOF((~ (rt1.c0))) FROM vt0, rt1, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0) NOTNULL), (- (((t1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))), SUM((vt1.c0 IN ())) FROM rt1 WHERE ((((998112995 IN ())) IS TRUE));SELECT ALL ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c3 ELSE vt0.c1 END) NOTNULL), (- (((rt1.c0)<(vt1.c0)))), (((NOT (rt1.c3)))-(((((((((vt0.c1)AND(rt1.c1)))OR(rt1.c3)))OR(x'96a9')))AND(NULL)))) FROM rt1, vt0, vt1, t1; -- 0ms;
SELECT ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN (CHANGES()) AND ('-1331534480')) FROM vt1, t1, rt1 WHERE (((((0.06528144220694088) NOT BETWEEN (-2.084644137E9) AND (NULL)))|((('o9Vz') IS FALSE)))); -- 0ms;
SELECT DISTINCT TOTAL((((rt1.c1, rt1.c2, 0.4342190115135165)) BETWEEN ((t1.c0, rt1.c0, vt0.c0)) AND ((rt1.c1, rt1.c1, rt1.c0)))) FROM vt0, t1;SELECT (+ (vt1.c0 COLLATE RTRIM)) FROM t1, vt1, rt1, vt0 LIMIT 1578707796; -- 1ms;
SELECT (((t1.c0)) NOT BETWEEN ((((rt1.c3)LIKE(vt0.c0)))) AND ((TOTAL(rt1.c2)))), vt0.c1, DENSE_RANK() OVER () FROM vt1, t1 WHERE ((((('~~') IS FALSE)) NOTNULL)) GROUP BY 0.9755516626931193 HAVING '254729882';SELECT DISTINCT CAST(CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN t1.c0 END AS TEXT) FROM t1, vt0, rt1 WHERE (((('2120537040' IN ()))<<(LIKELIHOOD('', 0.5743365405897275)))) ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END) NOTNULL)  NULLS LAST, rt1.c2 ASC  NULLS LAST, (((t1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)) IN ())  NULLS LAST;SELECT DISTINCT (NOT (GROUP_CONCAT(vt0.c0))) FROM rt1 CROSS JOIN vt0 ON ((((((vt1.c0)AND(rt1.c3)))AND(t1.c0))) IS TRUE) LEFT OUTER JOIN vt1 ON (- (((('-384544680')) NOT BETWEEN ((rt1.c0)) AND ((t1.c0))))) CROSS JOIN t1 ON TRIM(((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))) WHERE (((((~ ('')), ((((x'a81a')AND('6c')))OR(0.3196786314369682)), 1.7976931348623157E308 COLLATE NOCASE))==((NULL COLLATE RTRIM, (((x'', 0.35585639812304526, 0.8871833678323006)) BETWEEN ((0.5357908642704592, 1150097107, 'kua2	]')) AND (('', 0.9351813437278539, 0.7512919198108959))), (+ (1221576044)))))) LIMIT -1497546910 OFFSET 2028844858;SELECT DISTINCT vt0.c0, (((vt0.c0) ISNULL) IN ()), CASE (((vt0.c1, rt1.c3, rt1.c2, rt1.c3, rt1.c0)) BETWEEN ((-1207536800, t1.c0, t1.c0, rt1.c2, NULL)) AND ((rt1.c0, '638022290', vt0.c0, rt1.c0, rt1.c0)))  WHEN ((((((((0.8585859033877409)OR(rt1.c1)))AND(vt0.c1)))AND(t1.c0)))OR(rt1.c3)) THEN t1.c0 WHEN ((rt1.c3) BETWEEN (rt1.c2) AND (vt0.c0)) THEN ((vt0.c1)%(t1.c0)) WHEN CAST(rt1.c1 AS REAL) THEN CASE vt0.c1  WHEN NULL THEN vt1.c0 END ELSE (((vt1.c0))>=((rt1.c1))) END FROM t1 RIGHT OUTER JOIN rt1 ON ((((((t1.c0)<(vt0.c1)))AND(CASE WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN t1.c0 WHEN t1.c0 THEN rt1.c3 END)))AND((t1.c0 IN ()))) WHERE ((('?JFMj\n')%(NULL)) COLLATE NOCASE) GROUP BY (((vt0.c1) BETWEEN ('쬎ꛎ') AND (vt0.c1)) IN (rtreenode(rt1.c1, rt1.c0))) HAVING ((((x'') IS TRUE)) NOTNULL);SELECT ((rt1.c1)>(CASE WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c3 END)) FROM vt1, t1 WHERE (1.246421059E9);SELECT ALL LAST_VALUE(((((vt0.c1)LIKE(vt1.c0))) NOT BETWEEN (vt0.c0) AND (CHANGES()))) OVER ( GROUPS  CURRENT ROW), MAX(vt1.c0 COLLATE BINARY, (- (rt1.c2)), ((rt1.c3)&(rt1.c0)), ((vt1.c0) IS FALSE)), ((((CAST(vt0.c0 AS BLOB))AND((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((t1.c0))))))AND(rt1.c1)) FROM vt1, rt1, vt0 WHERE (LIKELIHOOD(0.9849506841328829, 0.5963731083201927));SELECT DISTINCT CAST(t1.c0 COLLATE BINARY AS REAL) FROM t1, rt1, vt0, vt1 GROUP BY (((rt1.c3, vt0.c0, rt1.c0, vt0.c0, t1.c0)) BETWEEN ((vt0.c1, rt1.c0, ((rt1.c0)||(rt1.c3)), (NOT (vt0.c1)), (- (rt1.c1)))) AND ((((rt1.c3)+(vt0.c0)), rt1.c2 COLLATE NOCASE, ((((NULL)OR(-1e500)))AND(-5.10040294E8)), (rt1.c1 IN ()), (('1458890111') NOT BETWEEN (rt1.c3) AND (t1.c0))))) HAVING TOTAL(CAST(rt1.c1 AS REAL)); -- 0ms;
SELECT DISTINCT ((((((rt1.c1)OR(vt0.c1)))OR(vt0.c0)))||((+ (0.8428226107385995)))), (((vt0.c0 IN (rt1.c2, t1.c0)))+(CASE WHEN vt0.c0 THEN '-1169763170' ELSE rt1.c2 END)), (SUM(rt1.c1) IN (json_array(rt1.c3, rt1.c0, rt1.c0, vt1.c0))), (((rt1.c3 IN ())) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt1.c1) AND (t1.c0))) AND (HEX(vt0.c1))), CAST(((((((((rt1.c0)AND(vt1.c0)))OR(rt1.c1)))OR(vt0.c0)))OR(rt1.c3)) AS TEXT) FROM vt0, rt1, vt1 WHERE ((('BY P') NOTNULL)) ORDER BY ROUND(t1.c0 COLLATE BINARY, (t1.c0 IN ())) DESC  NULLS FIRST, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt1.c2))) COLLATE NOCASE;SELECT ALL ((rt1.c3) BETWEEN (((rt1.c1) IS FALSE)) AND (((vt1.c0)-(vt1.c0)))), ((rt1.c0) ISNULL), (- (((rt1.c3) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt1, rt1 WHERE (CAST(CASE WHEN 0.05732095915182034 THEN '쾒q' END AS REAL)) GROUP BY ((((rt1.c2) NOT BETWEEN (t1.c0) AND (rt1.c1))) ISNULL) HAVING CASE WHEN CAST(rt1.c2 AS INTEGER) THEN ((t1.c0) NOT NULL) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) END;SELECT DISTINCT (~ (rt1.c0)) COLLATE RTRIM FROM t1, vt1, vt0 WHERE (((((((x'')IS('')))OR((x'' IN ()))))OR(LIKELY(DISTINCT ''))));SELECT DISTINCT ((((((((TOTAL(NULL))OR(((('-1373259700')) NOT BETWEEN ((vt0.c0)) AND (('e\n3甌UT'))))))OR(((vt1.c0)!=(vt0.c1)))))AND(((((rt1.c0)OR('1106646719')))OR(vt0.c0)))))AND(CASE rt1.c2  WHEN 'Z+⩌pv\r' THEN 0.45539578532870806 ELSE rt1.c3 END)) FROM vt1;SELECT DISTINCT ((0.7892916999981622) ISNULL) FROM t1, rt1, vt1, vt0; -- 1ms;
SELECT ALL (- (vt0.c0)) COLLATE BINARY FROM rt1 WHERE (((((CASE WHEN 0xffffffffd1b90cbd THEN NULL ELSE NULL END)OR(('-1752692658' IN ()))))AND((('b,) BnCwY')-(NULL))))) LIMIT 237521841 OFFSET 1075180138;SELECT DISTINCT CAST(((((vt1.c0)AND('''z')))AND(t1.c0)) AS REAL), ((+ (rt1.c0)) IN ()), ((CAST(rt1.c0 AS BLOB)) IS FALSE) FROM rt1 NOT INDEXED, vt1, vt0, t1; -- 0ms;
SELECT ((((((rt1.c1)<<(NULL)))OR(rt1.c0)))AND(((x'') NOT BETWEEN (vt0.c0) AND (t1.c0)))) FROM vt0, rt1, t1 WHERE (((x'2c05') NOT BETWEEN (0.559419759492059 COLLATE BINARY) AND (((0.32322449288313937) NOT NULL)))) GROUP BY (~ (SQLITE_COMPILEOPTION_GET(t1.c0))) HAVING vt0.c1 COLLATE NOCASE; -- 0ms;
SELECT DISTINCT rt1.c0 FROM t1 WHERE (((-602479482 IN ()) IN ((('') NOTNULL), (NOT (0.9093246821488308)))));SELECT DISTINCT ((((vt1.c0)IS(rt1.c0)))>(((vt0.c0)|(rt1.c0)))) FROM rt1, t1, vt0;SELECT (((vt1.c0 IN (rt1.c3)))||((rt1.c2 IN (rt1.c3)))), ((0Xffffffffd96ede84) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CASE rt1.c2  WHEN NULL THEN rt1.c1 END)), CASE t1.c0 COLLATE NOCASE  WHEN ((((vt1.c0)OR(vt0.c0)))OR(rt1.c0)) THEN COUNT(rt1.c2) ELSE CAST(rt1.c3 AS INTEGER) END FROM rt1 NOT INDEXED WHERE ((('') NOT BETWEEN (NULL COLLATE NOCASE) AND (((x'') NOT NULL))));SELECT DISTINCT CASE LIKELIHOOD(vt0.c1, 0.2594890677321169)  WHEN (rt1.c0 IN ()) THEN COUNT(*) ELSE ((vt0.c0)+(vt1.c0)) END FROM vt1, t1, rt1, vt0 WHERE (CAST(((x'cadd') IS TRUE) AS BLOB)); -- 0ms;
SELECT rt1.c0 COLLATE NOCASE FROM t1, vt1, rt1 WHERE (CASE (NOT (0.7606807569467268))  WHEN CAST(0.9504216742159429 AS NUMERIC) THEN CASE x'b502'  WHEN x'8dde' THEN '1225288814' ELSE NULL END ELSE ((('272824358', '(rAn7^', NULL))<=((x'ab6e', 'dR', '-80436571'))) END); -- 0ms;
SELECT TOTAL(((vt0.c1)>(rt1.c3))) FILTER(WHERE x'4db4') OVER () FROM t1, vt0 WHERE (((((((0.43249346148327106)AND(0.1585714367511737)))OR(0.8069532169869412)))*(0.5142134877189847 COLLATE RTRIM)));SELECT CHANGES(), ((ABS(rt1.c3)) IS FALSE), (((TRIM(DISTINCT rt1.c3), ((vt1.c0)IS NOT(t1.c0)), ((t1.c0) NOTNULL)))<=((((vt0.c1)-(vt0.c0)), (((vt0.c0))<((rt1.c3))), ((rt1.c1) IS FALSE)))) FROM vt1, vt0 WHERE (x'dfc9') LIMIT -1296081287;SELECT DISTINCT ((((t1.c0) IS FALSE)) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (rt1.c3 COLLATE RTRIM)) FROM rt1 NOT INDEXED, t1, vt1; -- 0ms;
SELECT (vt0.c0 IN ()) FROM t1 WHERE ((CASE '118282736'  WHEN 0.6695126006210776 THEN NULL WHEN '-2123318738' THEN 'H署' WHEN '0.6732246382311127' THEN x'' ELSE -873109337 END IN (x'' COLLATE BINARY))) LIMIT -1193566568 OFFSET 1974382027; -- 0ms;
SELECT DISTINCT CAST((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))) AS INTEGER) FROM rt1, vt1, vt0; -- 0ms;
SELECT ALL vt1.c0 FROM rt1;SELECT ALL (~ (SUM(x''))) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (CAST(rt1.c0 AS REAL)) AND (((rt1.c1) IS TRUE))), 'Y浬&?Kh᷸y', ((vt0.c0) ISNULL) FROM t1, rt1;SELECT ((vt0.c1 COLLATE NOCASE)<<(((vt1.c0)!=(rt1.c2)))) FROM vt0, rt1, vt1, t1; -- 0ms;
SELECT DISTINCT (((rt1.c1)AND(rt1.c1)) IN ()), rt1.c1, ((((rt1.c1) IS FALSE))>(((vt0.c0)<=(rt1.c0)))) FROM t1, rt1;SELECT DISTINCT ((COUNT(rt1.c2))*(CASE WHEN x'' THEN rt1.c0 END)), TYPEOF(DISTINCT ((((((((t1.c0)AND(rt1.c3)))OR(rt1.c2)))AND(rt1.c1)))AND(vt1.c0))), ((((json_array(vt1.c0, vt0.c1))AND((((t1.c0, rt1.c0, vt0.c0, '-2105977514', rt1.c2)) BETWEEN ((rt1.c3, rt1.c3, rt1.c3, rt1.c0, rt1.c1)) AND (('651603761', vt0.c0, vt0.c1, vt1.c0, vt0.c1))))))OR(((vt0.c1)>=(vt0.c1)))), CAST((((rt1.c3))<>((t1.c0))) AS TEXT), COUNT(*) OVER () FROM vt1, vt0, rt1, t1 WHERE (x''); -- 0ms;
SELECT CAST((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0))) AS INTEGER) FROM vt1, t1 WHERE ((((((0x448e26bd IN ()))AND((('') ISNULL))))AND(TYPEOF(DISTINCT NULL))));SELECT DISTINCT (((((- (t1.c0)))OR(0X349f0a56)))OR((((vt1.c0))>=((t1.c0))))), MIN(NULL), (((+ (x'')))|(0.612554445128928)) FROM t1, vt0, rt1, vt1 WHERE ((- (0.12847362751786362)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt1.c2)OR(((rt1.c1) NOTNULL))))OR(((((vt0.c1)AND(x'')))OR(NULL)))) FROM t1 WHERE ((- ((+ (x'e995')))));SELECT ALL ((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c0)))AND(NULL)))OR((~ (rt1.c2)))))OR(COUNT(*))))OR('0.932380176088278')) FROM rt1, vt0, t1, vt1; -- 0ms;
SELECT (NOT (rt1.c1)) COLLATE NOCASE FROM vt0, rt1, t1, vt1; -- 0ms;
SELECT DISTINCT (((t1.c0 IN (vt0.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 END) AND ((~ (rt1.c2)))) FROM rt1, t1 ORDER BY ((rt1.c0 COLLATE RTRIM)IS(vt0.c1))  NULLS FIRST, rt1.c0 ASC;SELECT DISTINCT (((NULL)/(vt1.c0)) IN (AVG('\''lK4'))) FROM vt0 WHERE (((((1677550158)|('\r8s4'))) NOT BETWEEN ('') AND (UNLIKELY(NULL))));SELECT '-1481028434' FROM vt1, rt1, t1, vt0 GROUP BY CASE WHEN 1.7976931348623157E308 THEN ((((((((vt0.c1)AND(vt0.c1)))AND(rt1.c1)))OR(vt1.c0)))OR(rt1.c2)) END; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c3)||(rt1.c3))) FROM t1 ORDER BY json_insert(CAST(rt1.c2 AS INTEGER), ((0.498932646850894) IS TRUE), (rt1.c3 IN (rt1.c0, rt1.c2))) ASC  NULLS LAST;SELECT DISTINCT ((((((((x'52bb')OR(x'')))OR(t1.c0)))OR(((rt1.c2)>(rt1.c3)))))OR(LIKELIHOOD(DISTINCT rt1.c3, 0.6305970752827419))) FROM vt0, rt1, t1, vt1; -- 0ms;
SELECT CAST((((rt1.c1, rt1.c2, vt0.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, vt0.c0)) AND ((rt1.c3, rt1.c0, rt1.c2))) AS TEXT), ((((((((((vt0.c1)AND(rt1.c0)))AND(NULL)))AND(rt1.c3)))OR(rt1.c0)))||(CASE rt1.c2  WHEN rt1.c0 THEN vt1.c0 END)), (((+ (rt1.c0)))LIKE(CASE 2.37521841E8  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END)) FROM rt1, t1 ORDER BY (((((vt0.c0) IS TRUE)))>=((CASE vt0.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END))), (NOT ((~ (rt1.c3)))) ASC;SELECT ALL rt1.c3, ((((((((rt1.c1)AND(vt0.c1)))OR('')))AND((((vt1.c0, rt1.c1, vt0.c1, rt1.c1, NULL))<((rt1.c3, vt1.c0, '-2128673710', vt0.c0, rt1.c0))))))AND(vt0.c0 COLLATE NOCASE)), CASE NULL  WHEN rt1.c0 COLLATE RTRIM THEN ((t1.c0) NOTNULL) ELSE rt1.c1 COLLATE RTRIM END FROM vt0, vt1, t1, rt1 LIMIT -1905331897; -- 0ms;
SELECT DISTINCT CASE CAST(vt1.c0 AS NUMERIC)  WHEN ((rt1.c1) NOT NULL) THEN TYPEOF(rt1.c0) WHEN rt1.c3 COLLATE RTRIM THEN ((rt1.c3)<=(rt1.c3)) WHEN ((vt0.c1)IS NOT(t1.c0)) THEN ((vt1.c0)*(rt1.c1)) END FROM t1, vt1 WHERE (CASE load_extension(0.45840677556517584)  WHEN (('34954334') BETWEEN (NULL) AND (935670218)) THEN CASE x''  WHEN NULL THEN NULL END END) ORDER BY CASE CAST(rt1.c1 AS NUMERIC)  WHEN vt0.c1 THEN 582163581 WHEN rt1.c0 THEN HEX(rt1.c1) WHEN CASE WHEN rt1.c3 THEN vt0.c1 END THEN ((t1.c0)<=(vt0.c1)) ELSE ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c1)) END;SELECT ALL LAG((((CAST(vt1.c0 AS TEXT), ((rt1.c3)AND(vt1.c0)), ((rt1.c1)AND(vt1.c0))))>=(((((vt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt1.c0))), ((rt1.c1)<=(rt1.c1)), ((t1.c0) BETWEEN (t1.c0) AND (rt1.c0))))), CASE CAST(rt1.c0 AS INTEGER)  WHEN (t1.c0 IN (t1.c0)) THEN (rt1.c1 IN ()) ELSE (rt1.c1 IN ()) END, LIKELY((((rt1.c0, rt1.c0, rt1.c2))=((rt1.c1, rt1.c3, rt1.c1))))) OVER () FROM vt1, rt1, t1; -- 0ms;
SELECT ALL x'' COLLATE BINARY COLLATE RTRIM FROM rt1, t1, vt0, vt1 WHERE ((((0x24fc4dfd)) BETWEEN (('%->0r?f_')) AND ((x''))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT COUNT(((0.5075402400573653) BETWEEN (vt0.c1) AND (rt1.c3))) FROM vt0, vt1, t1, rt1 WHERE ((CAST(0.1761493784624003 AS TEXT) IN (('-114772007' IN ())))) ORDER BY CASE '2079252387'  WHEN CAST(t1.c0 AS TEXT) THEN (rt1.c1 IN ()) WHEN t1.c0 THEN ((((-278581534)OR(vt1.c0)))AND(t1.c0)) WHEN ((vt0.c0)-(rt1.c2)) THEN (- (rt1.c0)) END DESC; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt1, vt0, t1 GROUP BY ((CASE WHEN 0.6265230190962441 THEN rt1.c0 END) NOT NULL), (NOT (vt1.c0)), (t1.c0 IN ()) COLLATE RTRIM LIMIT 485497796 OFFSET -253040926;SELECT ALL (((t1.c0) BETWEEN (rt1.c1) AND (rt1.c3)) IN ((((vt0.c0))=((vt1.c0))), CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c0 WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c3 WHEN 0xed9b0f8 THEN rt1.c0 ELSE vt1.c0 END)) FROM rt1, vt0, t1 WHERE (CAST(((381067116)|(0.235727855178666)) AS NUMERIC));SELECT DISTINCT '-1434788543' FROM rt1, vt0 WHERE ((((((('|pJm2') IS TRUE))OR(((('1677550158')) BETWEEN ((0.5931588365764695)) AND ((x'ef02'))))))OR((NULL IN ())))); -- 1ms;
SELECT COALESCE(UNLIKELY(rt1.c0), (vt0.c1 IN ()), ((t1.c0) BETWEEN ('1458890111') AND (rt1.c1)), ((((((((((((rt1.c0)AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c1)))AND(vt0.c0))) FROM t1, vt0, rt1 NOT INDEXED, vt1 WHERE ((NULL COLLATE NOCASE IN ())) GROUP BY (~ ((((vt0.c0, vt1.c0, rt1.c3))=((t1.c0, vt0.c0, rt1.c1))))), (- (NULL)), ((((NULL)AND(TYPEOF(DISTINCT vt0.c0))))OR(((vt1.c0)<>(rt1.c3)))) HAVING COUNT(*) COLLATE NOCASE; -- 0ms;
SELECT ALL CAST('9e' COLLATE NOCASE AS REAL) FROM vt1, vt0, rt1, t1; -- 0ms;
SELECT DISTINCT COUNT('') FROM rt1, vt1, t1 WHERE ((x'e907' COLLATE RTRIM IN (CAST(NULL AS NUMERIC), json(0xffffffffdd1e7e92)))); -- 0ms;
SELECT (COUNT(*) IN ()) FROM rt1, vt0, t1, vt1 WHERE (CASE (~ (0.7152406439403362))  WHEN '0.28331411171047716' THEN ((0.06199764669002494)IS('f<!G')) END) ORDER BY (NOT (CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, (('401918534') IS FALSE); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT 0.412300067361004, t1.c0 COLLATE NOCASE) FROM vt1, rt1, t1, vt0 ORDER BY (NOT (rt1.c3)); -- 0ms;
SELECT ALL ((CASE WHEN t1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c3 THEN t1.c0 WHEN t1.c0 THEN rt1.c3 END)<=((rt1.c0 IN ()))) FROM t1, vt1;SELECT DISTINCT '' FROM rt1, vt1, vt0, t1 LIMIT -731116447 OFFSET -1153160129; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt1.c3 THEN rt1.c0 ELSE vt0.c1 END)AND((vt1.c0 IN (rt1.c2, x'')))))AND((((rt1.c1, rt1.c0, vt0.c1, rt1.c0, vt0.c1))<>((rt1.c1, vt0.c0, rt1.c0, vt0.c0, vt1.c0))))) FROM t1, vt0, rt1;SELECT DISTINCT ((('')) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)))) AND ((rt1.c1 COLLATE RTRIM))) FROM vt0 WHERE ((((('')<(0.9381574126550494))) ISNULL));SELECT DISTINCT LIKELY('0.9102814736485176' COLLATE NOCASE) FROM t1, vt0 GROUP BY (CAST(rt1.c2 AS TEXT) IN ()) HAVING vt0.c1 COLLATE NOCASE COLLATE NOCASE; -- 0ms;
SELECT ALL ((((t1.c0) IS FALSE))*(MAX(t1.c0))) FROM vt1, vt0 WHERE (((((x'')<>(NULL)))>=((((('-569016361')AND(NULL)))AND(NULL)))));SELECT DISTINCT UNLIKELY(DISTINCT ((vt0.c0) BETWEEN (NULL) AND (rt1.c1))) FROM t1, vt1 WHERE ((((('GJ') NOT BETWEEN (NULL) AND (-27344614))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(0.7809244627647628 AS TEXT)))) LIMIT 1231855003;SELECT DISTINCT (NOT ((((0.47810373479156165))<=((t1.c0))))), (((((rt1.c0, x'', rt1.c2))<=((t1.c0, vt0.c0, vt0.c1))))LIKE((((vt0.c1))<((rt1.c1))))), ((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))OR(NULL)))AND(((t1.c0) NOT NULL))) FROM t1, rt1, vt0, vt1 WHERE ((('-1606178018') IS TRUE) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE FROM rt1, vt1, t1 WHERE ((((((('') NOT BETWEEN ('^6燯e>k4') AND (x'fd5e')))OR(CAST(NULL AS REAL))))OR(CASE WHEN x'' THEN 0.3846925686842486 WHEN 0.7956665475957674 THEN 1006731252 WHEN NULL THEN 0.41140390435297336 END))); -- 0ms;
SELECT rt1.c2 FROM t1, rt1 WHERE ('' COLLATE RTRIM); -- 0ms;
SELECT ALL (vt0.c1 IN ()), CAST(TRIM(DISTINCT 0.7314440775472444) AS REAL), FIRST_VALUE(SQLITE_COMPILEOPTION_USED((- (rt1.c1)))) OVER () FROM vt1, rt1, t1, vt0 WHERE (LIKELIHOOD(((0Xffffffffa5f7809b) NOT BETWEEN (x'') AND (x'')), 0.8906965104649966)); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM, (((rt1.c1, ((rt1.c1)LIKE(vt1.c0)), ((rt1.c0)!=(rt1.c2)), vt1.c0 COLLATE BINARY, ((vt1.c0)AND(vt1.c0))))!=((((t1.c0) NOT NULL), x'' COLLATE NOCASE, (+ ('484287140')), CASE WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN t1.c0 THEN rt1.c3 ELSE rt1.c2 END, ((t1.c0)+(t1.c0))))), (- (((NULL) BETWEEN (rt1.c2) AND (rt1.c1)))) FROM t1, vt1, rt1, vt0; -- 0ms;
SELECT DISTINCT (~ (rt1.c0 COLLATE NOCASE)) FROM vt0;SELECT DISTINCT json_insert(rt1.c0, rt1.c0 COLLATE BINARY, ((rt1.c0) ISNULL)) FROM t1, rt1 ORDER BY CASE WHEN rt1.c2 THEN CAST(t1.c0 AS NUMERIC) WHEN CASE WHEN rt1.c2 THEN vt0.c0 END THEN t1.c0 COLLATE NOCASE WHEN ((vt1.c0)<(vt0.c0)) THEN rt1.c1 COLLATE BINARY END, NULL  NULLS LAST;SELECT LEAD(((((vt1.c0)||(vt1.c0))) NOTNULL), (~ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 556196006 THEN '-1277684524' WHEN vt1.c0 THEN vt1.c0 END)), TRIM(DISTINCT ((((((((vt1.c0)OR(vt1.c0)))OR('1994837841')))OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))<=((vt1.c0))))) OVER (), '-1016704735', ((((rt1.c3) ISNULL))|(x'')) FROM vt1 WHERE (((0X461df89c)AND((('')-(0x1cdda2a4)))));SELECT ALL AVG('') FROM rt1; -- 0ms;
SELECT LAG(((((vt1.c0)%(rt1.c2)))<<(CASE t1.c0  WHEN rt1.c2 THEN rt1.c3 ELSE vt0.c0 END)), ((CAST(rt1.c2 AS NUMERIC))>=((- (t1.c0)))), vt0.c0 COLLATE BINARY) OVER (), NULLIF(((vt1.c0)>>(t1.c0)), x'2b37eec555c2'), AVG((((((((('')AND(rt1.c3)))AND(rt1.c2)))AND(vt1.c0)))OR(x''))) OVER ( ORDER BY CASE WHEN x'153152f9' THEN vt1.c0 COLLATE NOCASE WHEN LOWER(DISTINCT rt1.c1) THEN ((((((((rt1.c0)OR(rt1.c2)))OR(vt0.c1)))OR(rt1.c2)))OR(rt1.c0)) WHEN ((vt0.c1)+(vt0.c1)) THEN CASE WHEN t1.c0 THEN t1.c0 END ELSE ((rt1.c2) BETWEEN (vt0.c1) AND (rt1.c3)) END) FROM vt1, t1, rt1, vt0 WHERE (''); -- 0ms;
SELECT ALL x'9f1a' FROM t1, vt0, vt1; -- 0ms;
SELECT DISTINCT UNLIKELY((rt1.c3 IN ())) FROM rt1, vt0 INNER JOIN vt1 ON ((CASE rt1.c2  WHEN rt1.c1 THEN 0.9069009332088724 ELSE t1.c0 END)%(TYPEOF(vt0.c0))) WHERE (NULL);SELECT ALL ((((rt1.c0) NOTNULL)) IS FALSE) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT MAX(((vt0.c1)*(x'4d61'))) FROM rt1, vt1, t1, vt0; -- 0ms;
SELECT DISTINCT ((vt1.c0) BETWEEN (rt1.c1) AND (x'')) COLLATE NOCASE FROM rt1;SELECT ALL json_extract(((((rt1.c0)OR(rt1.c3)))OR(vt0.c1)), CAST(rt1.c3 AS BLOB)) FROM t1, rt1;SELECT DISTINCT ((((rt1.c1)&(rt1.c0)))&((+ (vt0.c1)))), (((((vt0.c1)AND('-30903820')))AND(vt0.c0)) IN (((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))), CASE CASE vt1.c0  WHEN rt1.c2 THEN vt0.c1 ELSE rt1.c1 END  WHEN ((vt1.c0) NOT NULL) THEN (((vt0.c0, vt0.c0, rt1.c0)) BETWEEN ((vt0.c0, NULL, rt1.c1)) AND ((rt1.c2, '59582711', vt1.c0))) END, MIN(((rt1.c0)IS NOT(rt1.c2))), t1.c0 FROM rt1, vt0, t1 NOT INDEXED WHERE (((CAST(8.11583324E8 AS INTEGER)) IS TRUE)) GROUP BY (~ (((vt0.c1) BETWEEN (rt1.c3) AND (t1.c0)))), IFNULL(DISTINCT NULL COLLATE BINARY, vt1.c0), ((((((((((t1.c0)GLOB(vt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR(((('1672384126')) NOT BETWEEN ((vt1.c0)) AND ((rt1.c1))))))OR(CAST(rt1.c2 AS REAL))))OR((vt1.c0 IN ()))) HAVING COUNT(*) ORDER BY CASE rt1.c2  WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN vt0.c1 WHEN t1.c0 THEN rt1.c3 ELSE vt0.c1 END COLLATE NOCASE DESC  NULLS FIRST;SELECT DISTINCT ((((rt1.c1)&(vt1.c0)))IS(((t1.c0)>=(vt0.c1)))) FROM vt0 WHERE (NULL);SELECT DISTINCT ((((((0.9587940886683229) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(CASE WHEN rt1.c1 THEN rt1.c3 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 END)))OR(((vt1.c0) NOT BETWEEN (rt1.c0) AND (t1.c0)))), ((((rt1.c3) IS TRUE)) IS FALSE), (((vt0.c0 IN (vt1.c0)))OR(rt1.c1 COLLATE NOCASE)) FROM vt0 WHERE ((((((((((('') BETWEEN (x'') AND ('-W9(xQ')))OR('1619485797')))AND(CASE WHEN '-2128673710' THEN '2080220633' WHEN NULL THEN x'' WHEN '-253040926' THEN 0.46039513809925703 ELSE 0.25403824249121265 END)))AND(((x'') NOT BETWEEN (NULL) AND ('')))))OR(NULL)));SELECT (((rt1.c0) BETWEEN (rt1.c0) AND ('')) IN ()), (((((((rt1.c3)OR(rt1.c0)))OR(vt1.c0))))>(((vt0.c1 IN ())))), ((((((vt0.c1)OR(rt1.c2)))OR(rt1.c3))) BETWEEN (LIKE(rt1.c0, vt0.c1)) AND (rt1.c3)) FROM rt1 NOT INDEXED WHERE (TYPEOF(DISTINCT (('1401758422') IS TRUE)));SELECT DISTINCT TOTAL(((('l\rg')) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2)))) FROM rt1, t1;SELECT DISTINCT ((((x'5ec0')AND(vt1.c0)))AND(((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c2)))) FROM t1, vt1, rt1 WHERE (LOWER((0.2365736439311873 IN ()))) GROUP BY ((t1.c0) IS FALSE) COLLATE RTRIM COLLATE NOCASE, ((((rt1.c2) NOTNULL)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 END) AND (CAST(rt1.c0 AS REAL))), (((rt1.c2)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((((rt1.c3)GLOB(rt1.c2)))));SELECT DISTINCT json((('⚹M#{J\')>=(rt1.c0))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)*(vt1.c0)))OR(((rt1.c1) NOT NULL))))AND(CAST(vt0.c1 AS INTEGER))) FROM vt0, rt1, t1, vt1 GROUP BY CHAR(((((rt1.c0)AND(x'3d6e')))AND(rt1.c1))), (((t1.c0 IN ()))AND(((((rt1.c2)AND(rt1.c3)))OR(vt0.c1)))), LIKELY(DISTINCT CAST(rt1.c3 AS BLOB)) HAVING COALESCE(rt1.c2, rt1.c0) COLLATE BINARY;SELECT TRIM(AVG(vt1.c0), COUNT(*)) FROM t1, vt0 WHERE (x'2ecf') LIMIT 1410791048 OFFSET -1977657418;SELECT ((MIN(rt1.c3))>(vt0.c1 COLLATE BINARY)) FROM rt1, vt0, vt1, t1; -- 0ms;
SELECT DISTINCT (((x'', '-1938407377', t1.c0)) BETWEEN (((+ (rt1.c2)), ((rt1.c0)<>(-2.41077316E8)), ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) AND (((((rt1.c1))<=((rt1.c2))), (vt0.c1 IN (rt1.c1)), MAX(rt1.c2)))) FROM vt1, rt1, vt0, t1 WHERE ((((('j?')||(x'')))||(((x'') NOT BETWEEN (NULL) AND (''))))); -- 0ms;
