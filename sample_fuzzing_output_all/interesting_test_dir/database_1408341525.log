-- Time: 2024/06/07 02:42:55
-- Database: database25
-- Database version: 3.40.0
-- seed value: 1408341525
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE rt0 SET c2=x'932cd840' WHERE ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ((+ (rt0.c1))) AND (rt0.c0)); -- 1ms;
CREATE TABLE t0 (c0 REAL ); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.9933301584557913 WHERE CAST(t0.c0 COLLATE NOCASE AS NUMERIC); -- 0ms;
PRAGMA busy_timeout = 10000; -- 2ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1, c2 UNINDEXED); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.2621977518807648) WHERE ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)*(((rt0.c1)<(rt0.c2)))); -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR FAIL vt0 SET c2=NULL WHERE CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER); -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1524454037,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 152081725); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53570'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
UPDATE OR FAIL t0 SET c0=NULL, c0=NULL WHERE ((t0.c0)IS(t0.c0)) COLLATE NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.6246813034260057 AS NUMERIC)  WHEN (x'' IN (NULL, 0.9933301584557913)) THEN ((('-1524454037')) BETWEEN (('-1524454037')) AND ((NULL))) ELSE (- (x'')) END; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1524454037,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58532'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA journal_size_limit = 6478100341246105029; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM t0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1627029681); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18463'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 1ms;
UPDATE t0 SET (c0)=(x'') WHERE ((t0.c0 IN ()) IN (CAST(t0.c0 AS TEXT), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0, c1) VALUES (x'e48b', x'', 'MT	 [潙DY'); -- 0ms;
CREATE INDEX IF NOT EXISTS i27 ON t0(((((c0) IS TRUE)) ISNULL) COLLATE NOCASE) WHERE x'6f61'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c2='.hvܵ?[5' WHERE ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2))) ISNULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
UPDATE OR ABORT vt0 SET (c1, c1, c1)=(0.6246813034260057, 0.2943845672980425, NULL) WHERE ((vt0.c0 COLLATE BINARY)||(CAST(vt0.c1 AS NUMERIC))); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER UPDATE ON t0 FOR EACH ROW  BEGIN DELETE FROM rt0;END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
UPDATE rt0 SET c1='.Fa,uU', c2=0.07225623020310312 WHERE NULLIF(DISTINCT rt0.c0, rt0.c2); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.07225623020310312) WHERE (((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)<>(vt0.c2))) AND ((((vt0.c0, NULL, vt0.c1))<=((vt0.c0, -1860192518, vt0.c1))))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 136766891); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(NULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(0.8244844387905891); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE rt0 SET (c1)=('0.2621977518807648'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
DROP TABLE IF EXISTS t0; -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=(NULL) WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c1 COLLATE BINARY)); -- 0ms;
COMMIT; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c0='' WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (rt0.c1) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE x'4323' END)); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA temp.mmap_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.21868592584135826) WHERE (('-1156981647')<((rt0.c2 IN (rt0.c1, rt0.c1)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c1)=(0.5897048170503427) WHERE (- (LOWER(DISTINCT vt0.c2))); -- 0ms;
PRAGMA main.default_cache_size = 1535947612; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (NULL, 0.07508881974071457); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((0x5b8cb35c)=('\r%')); -- 0ms;
UPDATE OR ABORT vt0 SET c2=0.6804690501614998; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42751'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1030851597); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1)=('A.') WHERE TRIM((('') NOT NULL)); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES ('I덜', NULL); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE rt0 SET c2=x'' WHERE ((((0.9933301584557913)GLOB(rt0.c0))) NOT BETWEEN (UPPER(DISTINCT rt0.c2)) AND (rt0.c1)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52819'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32464'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41769'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '61453'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '465'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38480'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-985498735,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'' WHERE (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END IN ()); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'12f8'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31275'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=867251878,6');\n; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c1=NULL; -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt0.c2)))AND(vt0.c1))) NOTNULL) FROM rt0, vt0 WHERE (((NULLIF(x'', 0.5897048170503427))>((~ (NULL))))) LIMIT -1555249097 OFFSET 1058599499; -- 0ms;
SELECT ALL ((CAST('-1860192518' AS TEXT)) NOTNULL) FROM vt0 WHERE (((((('') ISNULL), x'' COLLATE BINARY, ((x'') BETWEEN (NULL) AND (0xffffffffe5b98ab4))))>=(((((((((('173602199')AND(0Xffffffffc5427b91)))OR('gt㚦|揦')))AND('1826523803')))AND(-4.40825164E8)), ((((NULL)OR(0.8171162867429901)))AND(0.9933301584557913)), CASE WHEN '1426858885' THEN 0.07508881974071457 WHEN NULL THEN '0.9933301584557913' WHEN NULL THEN x'' END)))); -- 0ms;
SELECT ALL (((JULIANDAY(vt0.c0, vt0.c0, vt0.c0), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), ((rt0.c0)*(vt0.c1))))<>(((vt0.c0 IN ()), COALESCE(DISTINCT rt0.c2, NULL), CAST(rt0.c0 AS REAL)))) FROM rt0, vt0 WHERE (((((('vG4,J') BETWEEN (647346217) AND (NULL))))==(('420540251' COLLATE RTRIM)))); -- 1ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((((((((x'53e0')OR(vt0.c2)))AND(vt0.c1)))OR(')G')))OR(x'')))) AND ((CASE WHEN rt0.c0 THEN 0.11758086046500371 ELSE vt0.c2 END))) FROM vt0, rt0 WHERE (JULIANDAY(COALESCE(DISTINCT '-738936068', x'dc78', '722109569', '-22340725'), ((x'8160') NOT NULL), (0.8236082466450673 IN ()))); -- 0ms;
SELECT ALL MAX(((rt0.c2)*(rt0.c2))) COLLATE BINARY, rt0.c0, ((rt0.c2) NOTNULL) COLLATE RTRIM FROM rt0, vt0 WHERE ((((NOT (NULL)))>>(((NULL)|('358979263'))))); -- 0ms;
SELECT x'', ((((0.968773447327884)AND(((-9.85498735E8) ISNULL))))AND(CAST(vt0.c2 AS NUMERIC))), SUM(vt0.c0) FROM rt0, vt0 WHERE (((((0xffffffffba0f7137)IS(NULL))) NOT NULL)) GROUP BY (((((((((+ (rt0.c0)))OR(rt0.c0 COLLATE NOCASE)))AND(json_array(rt0.c0, rt0.c2, vt0.c2, vt0.c1))))OR(rt0.c1 COLLATE NOCASE)))OR(CAST(vt0.c2 AS INTEGER))) HAVING (NOT (((vt0.c0)IS(vt0.c1)))); -- 0ms;
SELECT (+ (rt0.c1)) FROM vt0;SELECT CUME_DIST() OVER () FROM rt0, vt0 WHERE ((((CAST(x'' AS NUMERIC)))>((((('')) BETWEEN (('u&u\')) AND ((''))))))); -- 0ms;
SELECT ALL (((((rt0.c2))<>((vt0.c2))))|(0xffffffffa34cc837)), TOTAL(CASE 0x31fc02e2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c2 END) OVER (), TOTAL(CASE WHEN rt0.c0 THEN rt0.c2 END), AVG(((rt0.c1)LIKE(vt0.c0))) OVER (), '7t\f' FROM vt0;SELECT DISTINCT NULL, ((LIKELY(DISTINCT NULL)) NOT NULL), (NOT (((rt0.c0)%(rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT ((vt0.c2) NOT NULL) FROM rt0 WHERE (((LIKELIHOOD(0.289813406992816, 0.2062612353351967)) NOT BETWEEN (((((x'')AND(0.8171162867429901)))OR(0Xffffffffa34cc837))) AND (x'' COLLATE BINARY)));SELECT DISTINCT ((((vt0.c0 COLLATE BINARY)AND((rt0.c1 IN ()))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)), vt0.c0, ((((vt0.c0)&(rt0.c0)))>((((rt0.c2, rt0.c1, vt0.c1))=((rt0.c0, vt0.c2, vt0.c0))))) FROM rt0 WHERE ((((x'' COLLATE RTRIM))==(((NOT (NULL)))))) ORDER BY (CASE rt0.c2  WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 ELSE vt0.c0 END IN ())  NULLS LAST, IFNULL(((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)), ((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)));SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((((rt0.c0)AND(vt0.c2)))AND(vt0.c1)))))AND(CAST(rt0.c2 AS NUMERIC))) FROM vt0, rt0 WHERE ((NOT (NULL))) LIMIT -802106467 OFFSET 1569371800; -- 1ms;
SELECT CASE WHEN ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)) THEN (+ (vt0.c1)) ELSE NULL END, vt0.c2, (- (rt0.c2)) COLLATE NOCASE FROM vt0 WHERE ((0.017798300829743874 IN ()) COLLATE BINARY) GROUP BY ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c2))) NOTNULL) HAVING LIKELY(((((rt0.c0)OR(vt0.c0)))OR(vt0.c0)));SELECT ((vt0.c1)IS((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))) FROM rt0 WHERE (((((((x'3683')OR('647346217')))AND(NULL))) BETWEEN ((~ ('2084320312'))) AND (((((((((NULL)AND('-440825164')))OR(NULL)))AND(x'')))OR('DGP8< %~')))));SELECT ALL AVG((vt0.c1 IN ())) OVER (), UNLIKELY(((((rt0.c2)OR(x'')))OR(vt0.c0))), ((NULL)AND(CAST(rt0.c1 AS NUMERIC))) FROM rt0, vt0 GROUP BY (((~ (rt0.c1))) BETWEEN (((((((((vt0.c1)AND(rt0.c1)))AND(vt0.c1)))AND(rt0.c1)))OR(rt0.c2))) AND ((vt0.c2 IN ()))) HAVING CAST(vt0.c2 AS NUMERIC) COLLATE NOCASE; -- 1ms;
SELECT DISTINCT ((((rt0.c2)%(vt0.c2))) IS FALSE) FROM vt0;SELECT DISTINCT (((CAST(vt0.c2 AS INTEGER), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE NOCASE, CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c1 END, COUNT(*)))>(((rt0.c0 IN ()), UNLIKELY(vt0.c1), CAST(0.10602254957851398 AS INTEGER), COUNT(rt0.c1), json_type(rt0.c1)))), (((((((vt0.c1)AND(rt0.c2)))OR(rt0.c1))))=((((rt0.c0)AND(vt0.c2))))), (((vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (('u&u\'))) FROM rt0;SELECT DISTINCT vt0.c0 FROM vt0, rt0 LIMIT -89538010; -- 0ms;
SELECT DISTINCT ((CAST(NULL AS REAL)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c2) IS FALSE))) FROM vt0 LIMIT -820851541;SELECT DISTINCT (- (vt0.c2)) COLLATE NOCASE FROM vt0, rt0; -- 1ms;
SELECT DISTINCT (NULLIF(vt0.c1, vt0.c0) IN ()) FROM rt0; -- 0ms;
SELECT ALL (- (((((((((rt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(rt0.c1)))OR(vt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT rt0.c0 FROM rt0 GROUP BY ((ABS(DISTINCT vt0.c2))%(rt0.c2 COLLATE BINARY)) HAVING ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN -1704194273 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE) ORDER BY TIME((rt0.c1 IN ()), vt0.c0, CAST(rt0.c2 AS REAL)), vt0.c0 DESC;SELECT ALL CASE vt0.c0  WHEN CAST(x'' AS BLOB) THEN CAST(rt0.c2 AS BLOB) END FROM vt0, rt0; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt0, rt0; -- 0ms;
SELECT ((('1058599499', CASE vt0.c0  WHEN rt0.c2 THEN 0x74c4ccdc WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END, (+ (vt0.c1))))>((MIN(vt0.c1, vt0.c0), ((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c0)), MIN(vt0.c2)))) FROM vt0, rt0 WHERE ((- (((('', x'', 'Bḁ'))>=((-7.38936068E8, NULL, '')))))); -- 0ms;
SELECT UNLIKELY(DISTINCT CAST('AYkl39' AS REAL)) FROM vt0, rt0 WHERE (((CASE 0Xffffffffcf2d5619  WHEN 0xffffffffa1c1fb0f THEN x'7fb5' ELSE 1239132818 END)>(CAST(x'' AS REAL)))) ORDER BY ((NULL)|(CASE WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c2 THEN 806038520 WHEN vt0.c1 THEN rt0.c0 END))  NULLS LAST; -- 0ms;
SELECT ((((vt0.c2)>=(0.289813406992816))) IS FALSE), COUNT(COUNT(*)), (~ (NULL)), COUNT(rt0.c2), json_patch(((vt0.c2) BETWEEN (vt0.c0) AND (0.5897048170503427)), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) FROM rt0 WHERE (CAST(0.9933301584557913 COLLATE BINARY AS INTEGER)) GROUP BY (NOT (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))), vt0.c2, rt0.c1;SELECT DISTINCT DATETIME(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((NULL) BETWEEN (rt0.c2) AND ('1644558558')), ((((vt0.c1)AND(rt0.c2)))AND(rt0.c0))), ((((vt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))AND(((rt0.c0) ISNULL))), CASE WHEN ((rt0.c0)>=(0.019414045349262832)) THEN CASE WHEN rt0.c2 THEN 0.01645539794285633 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN NULL THEN ((((vt0.c2)AND(vt0.c0)))AND(rt0.c1)) WHEN SUM(vt0.c0) THEN (rt0.c1 IN ()) END FROM rt0, vt0 GROUP BY ((((vt0.c0))>=((vt0.c1))) IN ()); -- 1ms;
SELECT ((((((((('0.8171162867429901')AND(0.5119498812794079)))OR(rt0.c1)))AND(rt0.c0)))OR(vt0.c0)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL (((rt0.c2)>(vt0.c0)) IN (((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c2)))AND(rt0.c2)))) FROM rt0 GROUP BY (((x'63e5' IN (rt0.c2)))<(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c1 END));SELECT NULL FROM rt0, vt0 WHERE (CAST(-1.555249097E9 COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT ((((rt0.c0)OR(vt0.c2)))OR(vt0.c0)) COLLATE BINARY FROM vt0, rt0 WHERE ((x'0496' IN ()) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt0.c2 THEN rt0.c1 WHEN 0.9026834106327516 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c2 END)OR(CAST(rt0.c2 AS BLOB))))OR(((rt0.c0)<=(rt0.c1)))) FROM rt0 WHERE (CAST(NULL AS TEXT));SELECT DISTINCT (MAX(vt0.c1) IN ()) FROM vt0, rt0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT ALL 0.8265239857166753 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)IS NOT(rt0.c0))) NOT NULL) FROM rt0, vt0 WHERE (((NULL COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) ISNULL) AS BLOB) FROM vt0, rt0 WHERE (((((CAST(0.285663510284601 AS NUMERIC))AND((((NULL)) BETWEEN ((x'567e')) AND ((0.23384906693144458))))))AND((((NULL))!=(('[')))))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c2)>>(vt0.c0)) AS INTEGER), vt0.c1, SUM(x'582b') FROM rt0 WHERE (((('HS' IN ('0.2943845672980425'))) NOT BETWEEN ((('966678836') NOT BETWEEN (x'') AND (-1e500))) AND (((NULL)IS NOT('')))));SELECT ALL (- (vt0.c0)) COLLATE RTRIM FROM rt0 WHERE (CAST(NULL AS BLOB) COLLATE NOCASE);SELECT DISTINCT CASE -1634943579  WHEN ((rt0.c1)GLOB(vt0.c1)) THEN (vt0.c0 IN (rt0.c0)) ELSE ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)) END, (((('\㚦iC鐲') NOTNULL)) NOTNULL), (MAX(vt0.c2, rt0.c2) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TRIM((vt0.c2 IN ()), MIN(vt0.c1)) FROM vt0, rt0 GROUP BY ((('1749881221')) BETWEEN ((((rt0.c1)/(vt0.c1)))) AND ((LOWER(DISTINCT rt0.c0)))), json_array((rt0.c0 IN ()), (- (vt0.c0)), PRINTF(rt0.c1), '966678836'), (((rt0.c2 IN (vt0.c0, vt0.c2)))<=(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) HAVING ((((((vt0.c2)!=(rt0.c0)))OR(((vt0.c0)IS NOT(rt0.c1)))))OR(COUNT(vt0.c2))); -- 0ms;
SELECT ALL ((LOWER(rt0.c1))GLOB(((((vt0.c2)OR(vt0.c1)))OR(rt0.c0)))) FROM vt0 WHERE (CASE CASE x''  WHEN NULL THEN 0.11419121964393264 ELSE 'UYpbA7a' END  WHEN (('') BETWEEN (0.7648197622554447) AND ('')) THEN ((x'') IS FALSE) ELSE ((269941754)/(0.2732695112145064)) END);SELECT DISTINCT (((NOT (rt0.c2)))LIKE(((rt0.c0)%(vt0.c1)))) FROM rt0;SELECT ALL 0.36540110629510925 FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((rt0.c1)AND(rt0.c0 COLLATE NOCASE)))AND((~ (vt0.c2)))))OR(((rt0.c0) IS TRUE))))AND((NOT (rt0.c1)))), ((((rt0.c0)IS NOT(vt0.c2))) NOT NULL), NULL FROM vt0 WHERE ((((- ('&V+Y코S5')))<<(UNLIKELY(DISTINCT x''))));SELECT DISTINCT ((LIKELIHOOD(rt0.c0, 0.991584371635862))>>(CAST(rt0.c2 AS TEXT))) FROM rt0 NOT INDEXED WHERE (((x'605f')>(x''))); -- 0ms;
SELECT DISTINCT json_patch(CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END, CAST(rt0.c0 AS NUMERIC)) FROM rt0 CROSS JOIN vt0 ON CASE CASE vt0.c0  WHEN rt0.c2 THEN vt0.c2 END  WHEN (- (vt0.c1)) THEN ((vt0.c0)>(vt0.c0)) ELSE CASE vt0.c2  WHEN rt0.c2 THEN x'' END END WHERE (((CASE NULL  WHEN ')3G]' THEN NULL WHEN 'c怶sKzw' THEN '' WHEN '-1704194273' THEN x'' ELSE 0.023773015972541 END) NOT BETWEEN (((((NULL)OR('K}]9JD Ub')))OR('vG4,J'))) AND (((0.8175983270143177)>>(0.48121866575325567))))); -- 0ms;
SELECT ALL (((((vt0.c2) IS FALSE)))<>(((((rt0.c2, vt0.c1, rt0.c1))>=((vt0.c2, rt0.c1, rt0.c1)))))), vt0.c1 COLLATE NOCASE, (((vt0.c2 IN ()))GLOB(x'' COLLATE BINARY)) FROM rt0 NATURAL JOIN vt0 WHERE ((((0.1266610379253451) ISNULL) IN ((((('JOD>PTc')AND('-1040861141')))OR('1426858885')), ((((((((NULL)AND(0.17426094434517725)))AND(0.7561733683302182)))OR('4{')))OR(-8.19112423E8))))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) AND ((AVG(rt0.c2)))), DENSE_RANK() OVER ( ORDER BY ((CASE WHEN 0.7405920282921623 THEN vt0.c0 END) NOT BETWEEN ('1535947612' COLLATE RTRIM) AND (CAST(vt0.c2 AS BLOB)))  NULLS FIRST GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES), CAST((~ (rt0.c2)) AS REAL), CASE WHEN ((rt0.c0)||(NULL)) THEN vt0.c1 END, x'' FROM rt0 UNION SELECT ALL CASE CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END  WHEN ((rt0.c0)||(vt0.c2)) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c2)) ELSE CAST(rt0.c0 AS TEXT) END, ((((((((rt0.c1)AND(vt0.c1)))OR(vt0.c2)))OR((vt0.c0 IN ()))))AND(CAST(rt0.c0 AS REAL))), (((RTRIM(vt0.c2)))<((NULL))), CAST(((vt0.c1) BETWEEN (vt0.c2) AND (rt0.c1)) AS NUMERIC), PERCENT_RANK() OVER () FROM rt0, vt0 WHERE (((CAST(x'' AS REAL)) BETWEEN (CAST(NULL AS NUMERIC)) AND ((('')LIKE(NULL)))));SELECT DISTINCT AVG(DATE(vt0.c0, rt0.c1, vt0.c1)) FROM rt0;SELECT DISTINCT (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c2))))>((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END))) FROM rt0 LIMIT -1581122801 OFFSET -89538010;SELECT DISTINCT (CASE WHEN vt0.c2 THEN '' WHEN rt0.c2 THEN -1356267414 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ()) FROM rt0 WHERE (x'') LIMIT -593589051 OFFSET -89538010; -- 0ms;
SELECT SUM(((vt0.c1)<<(rt0.c2))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0, rt0 WHERE (((((((((((0.5259788623136046)AND(8.38599394E8)))AND(NULL)))OR('Pŵ#')))OR(x'7c2a')))|((x'' IN (NULL))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) ISNULL), ((CAST(vt0.c0 AS BLOB))<>(CASE WHEN vt0.c1 THEN rt0.c1 END)), SUM(CAST(1.959054556E9 AS INTEGER)) FROM rt0, vt0 WHERE (CAST(TRIM(DISTINCT x'46d77a927aef') AS BLOB)); -- 0ms;
SELECT DISTINCT CAST(vt0.c2 AS TEXT) COLLATE RTRIM COLLATE RTRIM, x'', HEX(DISTINCT TRIM(vt0.c0)) FROM rt0 NOT INDEXED, vt0 WHERE ('[') ORDER BY ((rt0.c2 COLLATE RTRIM) IS TRUE) ASC; -- 0ms;
SELECT DISTINCT TOTAL(CAST(NULL AS INTEGER)) FROM vt0, rt0 WHERE ((((((('AYkl39')AND('W7')))AND(0.04067248797646639)))<(ABS(NULL)))); -- 0ms;
SELECT rt0.c2 FROM vt0 GROUP BY CAST(((rt0.c1)LIKE(rt0.c1)) AS TEXT) LIMIT 1040844212 OFFSET -397931149;SELECT DISTINCT (+ (((vt0.c0)|(x'')))) FROM rt0, vt0 GROUP BY (+ (rt0.c0 COLLATE RTRIM)) HAVING ((rt0.c1 COLLATE RTRIM) NOTNULL) LIMIT 69236229 OFFSET 253558942; -- 0ms;
SELECT ALL (((CAST(rt0.c0 AS INTEGER), ((vt0.c2)&(rt0.c0)), MAX(vt0.c1)))>=((x'' COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), (vt0.c0 IN ())))), (- (((((((((vt0.c1)AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))), CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END FROM rt0, vt0 WHERE ((CAST('' AS NUMERIC) IN ())); -- 0ms;
SELECT ALL AVG(CAST(rt0.c2 AS NUMERIC)) OVER () FROM vt0 WHERE (((((((((TYPEOF(NULL))AND((((0.1337924925473878))<((x''))))))OR(((('<rscbnp', NULL, NULL, '', x'')) BETWEEN (('-599909162', x'd5a7', x'4f62', '', 0x5b61464b)) AND (('?8', '350887425', 0.6177523316745434, -278244045, 0.6500171454654364))))))OR((x'df78' IN ()))))OR(('1426858885' IN ()))));SELECT DISTINCT ((((LAST_INSERT_ROWID())OR((((rt0.c1, vt0.c0, x''))<=((rt0.c2, rt0.c2, vt0.c1))))))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0;SELECT MIN((((vt0.c2))<((vt0.c1)))) FROM vt0 WHERE (CASE WHEN ((NULL)>(NULL)) THEN ((((0.8175983270143177)AND(NULL)))AND(2084320312)) END); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END) NOT BETWEEN (x'bbdc') AND (((vt0.c1) IS FALSE))) FROM vt0, rt0; -- 0ms;
SELECT ALL (((SUM(vt0.c0)))<(((rt0.c2 IN (rt0.c0, vt0.c2))))) FROM vt0 WHERE (((((-1524454037)!=(NULL)))<<(((x'd63f') ISNULL)))) LIMIT 1287439217 OFFSET -2050758532;SELECT ((((0.41074028917536265)OR(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND(CHANGES())), (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('')))) NOTNULL), (LIKE(0.7938166221245232, rt0.c1) IN ()) FROM rt0 ORDER BY CAST(ABS(rt0.c0) AS INTEGER);SELECT DISTINCT LAST_INSERT_ROWID(), (NOT (vt0.c0)) COLLATE NOCASE, (NOT (vt0.c0)), CAST(((rt0.c2) NOT BETWEEN (vt0.c1) AND (x'')) AS TEXT), vt0.c0 FROM vt0 WHERE (TRIM(DISTINCT (((('2൳')AND('')))AND(NULL))));SELECT DISTINCT ((MAX(0xffffffff9911d9e3))/(NULL COLLATE NOCASE)) FROM vt0 WHERE ((((NULL IN ())) NOT NULL)); -- 0ms;
SELECT ALL (~ (rt0.c2)) COLLATE BINARY FROM vt0 WHERE (UNLIKELY(DISTINCT (- (x'29de'))));SELECT DISTINCT CASE ((((vt0.c0)OR(rt0.c0)))OR(rt0.c1))  WHEN ((vt0.c2)<(rt0.c0)) THEN (((vt0.c1))>=((vt0.c1))) ELSE ((rt0.c1)==(vt0.c0)) END FROM vt0, rt0 WHERE ((- (((0.20878342397016936)-('['))))); -- 0ms;
SELECT AVG(((rt0.c2) NOT NULL)), CAST(x'' AS TEXT), ((json_object(vt0.c1, vt0.c0))&(NULL)) FROM rt0 WHERE (CAST((((NULL, 'Qp?# qir', 0.5119498812794079)) BETWEEN ((x'', 1749881221, 0Xffffffffcf12ccab)) AND (('urF', 0X672369a7, x''))) AS TEXT));SELECT DISTINCT (('0.8236082466450673')OR(((vt0.c1) IS TRUE))) FROM vt0, rt0 WHERE ((((((NULL))==((0.6517113620650224))))<<(UNLIKELY(DISTINCT 0.2675882283719032)))); -- 0ms;
SELECT CAST(rt0.c0 COLLATE RTRIM AS INTEGER) FROM vt0, rt0 WHERE ((((('-1584720677')>(NULL))) BETWEEN (LOWER(0.535520964593395)) AND ((((0.10615220201409592))>((x'')))))); -- 0ms;
SELECT DISTINCT ((((vt0.c2) NOT BETWEEN (vt0.c2) AND ('kt'))) NOT BETWEEN (LOWER(DISTINCT vt0.c0)) AND (JULIANDAY(rt0.c0, vt0.c2, rt0.c1))) FROM vt0 WHERE (CAST(((0.75333542431382) NOT NULL) AS NUMERIC));SELECT ALL CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) THEN (((vt0.c0, rt0.c1, vt0.c2))=((rt0.c0, rt0.c0, vt0.c1))) ELSE ((((((((vt0.c2)OR(rt0.c1)))AND(0.6177523316745434)))AND(vt0.c0)))OR(rt0.c0)) END FROM rt0 WHERE (((((((((((0.75333542431382)AND(0.487537363015487)))OR(0.6366661259085333)))AND(0.1444995711333792)))OR('D,SV!\rH/')))>(CAST(x'' AS TEXT))));SELECT DISTINCT GROUP_CONCAT((NOT (vt0.c2))) FILTER(WHERE CASE WHEN (NOT (vt0.c0)) THEN (((rt0.c2, rt0.c0, vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((vt0.c1, vt0.c0, rt0.c2, vt0.c2, rt0.c2)) AND ((vt0.c0, rt0.c2, NULL, rt0.c0, vt0.c2))) ELSE CAST(rt0.c1 AS TEXT) END) OVER () FROM vt0 WHERE ((NOT ((+ (NULL)))));SELECT ALL AVG(CAST(NULL AS INTEGER)) OVER () FROM rt0 WHERE (CAST(((0.49191722986808706)%(NULL)) AS BLOB)); -- 1ms;
SELECT ALL SQLITE_VERSION() COLLATE RTRIM, (((NOT (vt0.c2)))OR(vt0.c1)), (((rt0.c2 IN (vt0.c0)))OR(((NULL) IS FALSE))) FROM rt0, vt0 NOT INDEXED; -- 0ms;
SELECT (CASE WHEN vt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN vt0.c2 THEN rt0.c0 END IN ()) FROM vt0, rt0 WHERE ((- (NULL))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT ALL (~ (((vt0.c1) IS FALSE))) FROM vt0, rt0 WHERE (((((0Xffffffff9d0a7beb) ISNULL))<((('3u')<=(NULL))))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CASE NULL  WHEN x'' THEN ((((0.017798300829743874)OR('n')))AND(0.5687066830592472)) ELSE (((((((('G(Z/0Q''')AND(x'')))OR(NULL)))AND('1535947612')))OR(x'7f85')) END) UNION SELECT ALL (~ (rt0.c0)) COLLATE RTRIM FROM rt0, vt0 WHERE (CASE WHEN UPPER(x'81e0') THEN CAST(0.5141131279327034 AS INTEGER) ELSE x'' END) GROUP BY (((rt0.c2 IN ()))<<(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)))), LIKELY(((rt0.c0)LIKE(vt0.c2))), ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c2) NOT NULL)) AND ((+ (vt0.c2)))); -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))>((0.38696188401423404))) FROM rt0, vt0; -- 0ms;
SELECT ((0Xffffffff8748edf9)==((((vt0.c1))<=((rt0.c1))))) FROM rt0, vt0 WHERE (CASE WHEN (((0.6246813034260057, x'', '-985498735')) BETWEEN (('[.q喺FLY', x'e1d1', x'9b2c')) AND ((x'', NULL, '0.8244844387905891'))) THEN '-736382010' COLLATE BINARY ELSE CAST(0.987890486073239 AS TEXT) END) LIMIT -1671339978; -- 0ms;
SELECT DISTINCT (~ (((vt0.c1)<<(8.0603852E8)))) FROM rt0 WHERE (LIKE((('1296396121') BETWEEN ('') AND (0.4999390848487405)), (0xffffffffae0d4d92 IN ()))) GROUP BY (+ (x'')), CAST(CAST(rt0.c0 AS BLOB) AS TEXT), ((rt0.c1 IN (vt0.c2)) IN (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)))) HAVING x'';SELECT DISTINCT (((rt0.c2 IN ()))%(TOTAL(rt0.c0))), vt0.c2, LAG(((NULLIF(DISTINCT vt0.c2, vt0.c1)) IS TRUE), ((vt0.c2 IN ()) IN ()), CASE ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2))  WHEN ((vt0.c2)+(vt0.c2)) THEN UNICODE(vt0.c2) ELSE rtreenode(vt0.c0, vt0.c1) END) OVER () FROM vt0 WHERE ((((~ (NULL))) NOTNULL));SELECT (~ (NULL)) FROM rt0 WHERE ((('-1731485511' COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE NOCASE) NOT NULL) FROM rt0 WHERE ((((((((NULL)OR(NULL)))AND(NULL))))>((((0.487537363015487)<<(0.7049955425263214)))))) ORDER BY ((rt0.c0 COLLATE RTRIM)>>('358979263'))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c2)<=(rt0.c1)))IS(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c2 END)), (((rt0.c0)) BETWEEN (((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END))), (- (CHANGES())) FROM vt0, rt0 WHERE ((~ ((+ (''))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) BETWEEN (vt0.c2) AND ('-1356267414')))OR((~ ('397347894')))))AND(CASE vt0.c2  WHEN rt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN 0Xffffffff9cba61ee WHEN vt0.c2 THEN '420540251' END)))OR(NULL)))OR((('') BETWEEN (vt0.c0) AND (vt0.c2)))) FROM rt0 GROUP BY (CAST(rt0.c0 AS TEXT) IN ());SELECT ((((vt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))GLOB(((vt0.c1) NOTNULL))) FROM vt0, rt0; -- 0ms;
SELECT ALL COALESCE(((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)), ((vt0.c2)<=(vt0.c2)), ((vt0.c2) BETWEEN (vt0.c2) AND (x'')), ((vt0.c1)OR(0.044425466484207754))) FROM rt0;SELECT FIRST_VALUE((((vt0.c0)>=(vt0.c0)) IN (CAST(rt0.c1 AS BLOB)))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM vt0, rt0; -- 1ms;
SELECT ALL ((x'') NOT BETWEEN ((vt0.c2 IN ())) AND (ABS(rt0.c2))), ((((((vt0.c1)OR(rt0.c2)))AND(vt0.c0))) ISNULL), CAST(CASE rt0.c2  WHEN vt0.c2 THEN x'' END AS BLOB) FROM vt0 WHERE (((x'')<=(' n⎅1&4 ')) COLLATE BINARY);SELECT DISTINCT LEAD(((rt0.c0) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))), ((((vt0.c2)AND((vt0.c0 IN ()))))OR(vt0.c2)), LTRIM(CAST(x'' AS BLOB), ((((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(rt0.c1)))) OVER ( ORDER BY json_array_length('-1860192518') COLLATE BINARY) FROM rt0 FULL OUTER JOIN vt0 ON ((NULL)||(((vt0.c1)+(vt0.c1)))) WHERE (0.4773517816674073); -- 0ms;
SELECT DISTINCT '1180296954', ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)=(((vt0.c0) IS TRUE))), ((CAST(rt0.c2 AS NUMERIC))|(((((((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR('')))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))OR(rt0.c1)))) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT MAX(((rt0.c2)<>(rt0.c0))), CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS NUMERIC), (NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT IFNULL(vt0.c0, ROUND(vt0.c2, rt0.c0)), ((((x'') BETWEEN (rt0.c0) AND (vt0.c2))) IS TRUE), (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) AND ((AVG(vt0.c0)))) FROM rt0, vt0 LIMIT -1726883357 INTERSECT SELECT DISTINCT rt0.c0, CASE WHEN ((vt0.c0)|(rt0.c0)) THEN ((rt0.c2) IS TRUE) WHEN NULL THEN (- (vt0.c0)) WHEN (~ (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) END, (- (CAST(NULL AS TEXT))) FROM vt0 WHERE ((HEX(0.25042460517147425) IN ()));SELECT DISTINCT ((CAST(0.5429890126389738 AS BLOB))IS NOT(COUNT(vt0.c1))) FROM vt0, rt0 GROUP BY vt0.c2 HAVING vt0.c2; -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c1))=(((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))), DENSE_RANK() OVER (), (((+ (vt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (CAST(vt0.c1 AS INTEGER))) FROM vt0, rt0 WHERE (CAST((((x'2d7b')) BETWEEN (('4f')) AND ((''))) AS NUMERIC)); -- 0ms;
SELECT CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN rt0.c2 THEN ((vt0.c2)IS(vt0.c1)) ELSE ((rt0.c0) BETWEEN (vt0.c1) AND (-3.22381311E8)) END FROM rt0, vt0 WHERE (((json_quote(NULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT (+ ('-1393007642')) FROM vt0, rt0 WHERE ((((0.07498132896381171 IN ()))IS((+ (NULL))))); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c0)>>('		ahTn&aj'))) FROM vt0, rt0; -- 0ms;
SELECT ((rt0.c1)>=(vt0.c2)) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c0)) IS FALSE) FROM rt0, vt0 WHERE (((((('Ss')) BETWEEN (('-685834084')) AND ((NULL)))) BETWEEN (((1749881221) ISNULL)) AND ((((((((('H?e?\rC	Y')OR(x'')))AND('939023403')))OR('1826523803')))OR(-132675332))))) LIMIT 1003003296; -- 0ms;
SELECT ALL (((rt0.c1, rt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c1, vt0.c2))) COLLATE BINARY FROM vt0 WHERE (UNLIKELY(((x'') NOT BETWEEN (x'61e9') AND ('199933862')))) ORDER BY (('~i')||(((((((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(125002867)))) ASC;SELECT DISTINCT (((((rt0.c0)OR(vt0.c2)))OR(rt0.c2)) IN ()), (((((vt0.c0))<=((vt0.c0))))AND(((rt0.c2)<(rt0.c0)))), (((NOT (NULL)))LIKE(vt0.c1 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT CAST(0.17282381910654998 COLLATE BINARY AS NUMERIC) FROM rt0, vt0 WHERE ((((LOWER(x'')))<=((((x'') BETWEEN (0X2b0a8481) AND ('')))))); -- 0ms;
SELECT ALL IFNULL(DISTINCT rt0.c1, vt0.c1) COLLATE NOCASE FROM rt0 WHERE (CASE WHEN '' THEN (((('1781890278')OR(0.10615220201409592)))AND(x'88cc')) WHEN TRIM(x'41f4', x'') THEN x'2841' COLLATE BINARY WHEN (0Xffffffffcf2d5619 IN ()) THEN (('-696960143')>(x'8a6e')) ELSE ((('-1156981647')) BETWEEN ((-255814606)) AND (('966678836'))) END) LIMIT -245012870 OFFSET -576256904;SELECT DISTINCT (((vt0.c2)) NOT BETWEEN ((((((vt0.c2)AND(vt0.c2)))AND(rt0.c2)))) AND ((((rt0.c2)<=(vt0.c2))))), COUNT(*), CAST(MAX(rt0.c0) AS REAL) FROM rt0, vt0 WHERE (((x'c1e8' COLLATE NOCASE) IS FALSE)) GROUP BY ((((rt0.c0) BETWEEN ('') AND (rt0.c1))) BETWEEN ((0.15701540114720713 IN ())) AND (((((((((vt0.c2)AND(rt0.c1)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c0)))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC))OR(((rt0.c0) NOT NULL))), (+ (rt0.c2 COLLATE BINARY)), MAX(((('WR', rt0.c0, vt0.c2)) BETWEEN ((rt0.c0, vt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c2)))) FROM rt0, vt0; -- 1ms;
SELECT ALL SUM(((((rt0.c0)AND(rt0.c1)))AND(vt0.c0))), MAX((+ (rt0.c0)) COLLATE BINARY), ((((((((CAST(vt0.c0 AS REAL))OR(SUM(rt0.c0))))OR(x'fca1ce23' COLLATE BINARY)))AND(((((((((vt0.c0)AND(vt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(vt0.c1)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)!=(x'')) IN ()), TOTAL(((vt0.c2)|(rt0.c1))) FILTER(WHERE ((CAST(vt0.c0 AS BLOB))>(CAST(rt0.c0 AS NUMERIC)))) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW), '-397931149' COLLATE RTRIM FROM vt0, rt0 WHERE (CAST(('H钭' IN ()) AS NUMERIC)) LIMIT -1704439127; -- 0ms;
SELECT ALL NULL FROM vt0, rt0 WHERE (CASE COALESCE('1741425153', '-943006898')  WHEN ((NULL) NOT NULL) THEN ((NULL)IS NOT('-1555249097')) ELSE ((((((((0X7c1e9779)OR('-1906861155')))OR('iSfG	j7')))OR(NULL)))OR('-2050758532')) END); -- 0ms;
SELECT ALL COUNT(((0.6805963962674465) BETWEEN (NULL) AND (rt0.c1))) OVER () FROM vt0 WHERE (((NULL COLLATE NOCASE)LIKE(LIKE('l.', '1496470368'))));SELECT ALL CAST('.hvA?[5' AS TEXT), ((((vt0.c1)||(0.5168687248511258)))OR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 END)), NTH_VALUE(CASE ((vt0.c1)OR(vt0.c0))  WHEN ((x'')=(vt0.c0)) THEN (NOT (vt0.c0)) WHEN UNLIKELY(vt0.c2) THEN 0.6226222117044902 WHEN ((vt0.c1)>=(vt0.c1)) THEN x'' COLLATE RTRIM ELSE CASE WHEN '2088902381' THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN 0.35422001945386894 THEN vt0.c2 ELSE x'93bd' END END, ((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)LIKE(((vt0.c2)+(NULL))))) OVER () FROM vt0;SELECT ALL COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, rt0; -- 1ms;
SELECT ALL NULL, GROUP_CONCAT(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END), vt0.c0 FROM vt0, rt0 GROUP BY (+ (vt0.c1 COLLATE NOCASE)) HAVING (((rt0.c0))<=((rt0.c0))) COLLATE RTRIM; -- 0ms;
SELECT ((((((0X127d5d51)OR(rt0.c2)))OR(vt0.c1)))>((NOT (rt0.c0)))), ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))IS(((vt0.c1) IS FALSE))), (((rt0.c1)) BETWEEN ((MIN(vt0.c0))) AND ((((rt0.c2) BETWEEN (NULL) AND (rt0.c0))))) FROM rt0, vt0; -- 0ms;
SELECT 0Xffffffffe1d0c7d8 FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*), CAST(rt0.c0 COLLATE BINARY AS BLOB), ((((((((vt0.c1)AND(LIKELIHOOD(vt0.c1, 0.8188748681300864))))OR((('0.2943845672980425') BETWEEN (rt0.c0) AND (vt0.c2)))))AND(((rt0.c1)AND(rt0.c2)))))OR((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM vt0 LIMIT -639963242;SELECT ALL ((vt0.c2 COLLATE BINARY) ISNULL) FROM vt0; -- 0ms;
SELECT ((((vt0.c2)<=(rt0.c2)))AND(x'c28b')) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((vt0.c1)GLOB(rt0.c2)))GLOB(HEX(vt0.c0))), (~ ((+ (vt0.c0)))), CASE vt0.c2  WHEN ((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)) THEN ((((vt0.c1)AND(rt0.c1)))OR(vt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END FROM rt0 WHERE ('') ORDER BY ((((vt0.c1)/(vt0.c1))) NOT BETWEEN (((0.4856711326295011) NOTNULL)) AND (CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ASC;SELECT ALL x'8eb7' FROM vt0, rt0 WHERE ((((- (x''))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((((((vt0.c2 COLLATE BINARY)AND(((NULL)||(rt0.c1)))))OR(CAST(vt0.c2 AS REAL))))OR((0.15819085070648142 IN ()))))AND(rt0.c2 COLLATE BINARY)), ((0.17606602178493513)*(SUM(vt0.c0))), SUM(x'') OVER () FROM rt0, vt0 WHERE (((((('397347894')AND(NULL)))OR(x'')) IN ())); -- 0ms;
SELECT DISTINCT (~ ((vt0.c1 IN (vt0.c1)))) FROM vt0, rt0 WHERE (LOWER(((x'')&('420540251')))); -- 0ms;
SELECT CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c1)<(rt0.c0)) THEN ((rt0.c0)>(vt0.c0)) WHEN COUNT(*) THEN CAST(vt0.c2 AS NUMERIC) WHEN ((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c1)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((((((((rt0.c2)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c2) IS TRUE) END FROM rt0 WHERE (CASE ((NULL)>>(0.5104996439873987))  WHEN ((((x'')OR(NULL)))OR(x'')) THEN ((0X33b136a6) IS TRUE) ELSE 0.8171162867429901 COLLATE BINARY END) LIMIT 358979263;SELECT DISTINCT '0.4773517816674073', CASE WHEN TRIM(DISTINCT vt0.c2) THEN (((vt0.c0)) BETWEEN ((NULL)) AND ((3.97347894E8))) ELSE 0.7791634096816827 END, ((((((rt0.c1)AND(vt0.c2)))OR(-972522336)))LIKE(((vt0.c1) NOTNULL))) FROM rt0, vt0 WHERE (LTRIM(((((-563749541)OR(NULL)))AND(NULL)), ((x'') ISNULL))); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE BINARY, ((LIKELIHOOD(DISTINCT vt0.c1, 0.9518393798724059))||(SUM(vt0.c1))), (((vt0.c2)) NOT BETWEEN ((((vt0.c2) IS FALSE))) AND (((+ (0.0010055894379094044))))) FROM rt0 WHERE ((~ ((~ (0.596894003033773))))) GROUP BY (NOT (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) HAVING (+ ((rt0.c1 IN ()))) LIMIT -89538010 OFFSET -2068741740;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN ((vt0.c0 IN ('PŴ#'))) AND (LTRIM(rt0.c2, 1643893747))), MIN((vt0.c0 IN ())), CAST(CASE vt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS NUMERIC) FROM vt0, rt0 WHERE (((((0.19435984824073604)-(NULL))) NOT BETWEEN (0.12105162206072007) AND (CASE WHEN NULL THEN '' END))); -- 1ms;
SELECT ((CAST(NULL AS REAL))GLOB(NULL)) FROM vt0 WHERE ((((json_object(9.39023403E8, 0.2467553036731842), (((('-2050758532')AND('')))AND('0.9026834106327516')), (((((((('-1909261576')OR(x'2756')))OR(NULL)))OR(x'b244')))AND('Bv/ aPY'))))>((((0.4853107338434065)IS NOT('')), LIKE(-519107790, '1047987119'), ('498075150' IN ())))));SELECT DISTINCT vt0.c1 COLLATE BINARY, (((vt0.c1)) NOT BETWEEN (((+ (rt0.c0)))) AND (('A.'))), CASE (+ (rt0.c0))  WHEN vt0.c0 THEN ((vt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END THEN CASE x''  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END WHEN MAX(',#쒈Ogq') THEN (+ (rt0.c2)) ELSE ((rt0.c2)GLOB(vt0.c1)) END FROM rt0 WHERE ((('.Fa,uU' COLLATE RTRIM) NOT BETWEEN ((NOT (x''))) AND (((('')) NOT BETWEEN ((-1.156981647E9)) AND ((-1.660257301E9))))));SELECT TOTAL(ABS(DISTINCT vt0.c0)) OVER (), NULLIF(((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)), (((rt0.c1, vt0.c1, rt0.c0))!=((vt0.c0, vt0.c1, rt0.c2)))), (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((vt0.c1) NOT BETWEEN (0.5104996439873987) AND (rt0.c2))))), CASE WHEN ((((((((vt0.c0)OR(x'')))AND(rt0.c0)))AND('-1177330546')))OR(vt0.c2)) THEN ((vt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (rt0.c1 IN ()) END, ((~ (vt0.c1)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE ((((0x2184a695, x'9bd0', 0.11175579482741982))<(('1959054556', NULL, 0Xffffffffde0e12ea))) COLLATE NOCASE) LIMIT 1817855506; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS REAL) AS TEXT) FROM rt0 WHERE (UNLIKELY(UPPER(0.638480828668813))) ORDER BY ((((((((((rt0.c0)/(rt0.c2)))AND((- ('-2050758532')))))AND(((rt0.c2) NOTNULL))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0)<(rt0.c0))))  NULLS LAST;SELECT ((((vt0.c0) NOT BETWEEN (-6.85834084E8) AND (rt0.c0)))AND(((vt0.c1)IS(rt0.c0)))) FROM rt0 WHERE (((' _C b') IS FALSE)) ORDER BY ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))AND(CASE vt0.c1  WHEN NULL THEN vt0.c2 END)))AND(((rt0.c0)|(vt0.c1))));SELECT '-22340725' FROM rt0, vt0 GROUP BY (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB), x'55e1', vt0.c1 COLLATE BINARY)) AND ((((((rt0.c1)OR(rt0.c0)))AND(vt0.c2)), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)), ((vt0.c0)>>(vt0.c1))))); -- 0ms;
SELECT ALL GROUP_CONCAT(''), ((((MIN(vt0.c1))AND(((vt0.c2) NOT NULL))))AND(LOWER(vt0.c2))), ((((vt0.c1) ISNULL))+(((rt0.c2)<(vt0.c0)))) FROM vt0 WHERE (((NULL) NOT NULL) COLLATE BINARY);SELECT ALL (((((rt0.c0) ISNULL)))<=((((vt0.c1)/(rt0.c1))))) FROM rt0, vt0 WHERE (((0.3496802090698192)>>('9(')) COLLATE NOCASE) ORDER BY NULL; -- 0ms;
SELECT DISTINCT TOTAL(((((((((rt0.c0)AND(vt0.c2)))OR(rt0.c2)))AND(vt0.c2)))OR(vt0.c2))) OVER (), json_patch(PRINTF(vt0.c0), (+ ('1074161787'))), vt0.c2 FROM vt0;SELECT DISTINCT ((((vt0.c1)<(vt0.c2))) ISNULL) FROM rt0 WHERE ((((-1303686554)+(0.2546169226562235)) IN ())) GROUP BY ((((vt0.c2)GLOB(rt0.c0))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (NULL));SELECT DISTINCT CASE WHEN '-972522336' THEN ((vt0.c0)!=(vt0.c0)) ELSE ((vt0.c0)>=(vt0.c1)) END FROM rt0, vt0 WHERE (((ABS(0xffffffffb3959514)) NOTNULL)); -- 0ms;
SELECT ((((((((TOTAL(rt0.c2))AND(0.5806547344316003)))AND(((x'e7da') ISNULL))))OR(((vt0.c1)LIKE(rt0.c2)))))OR((('KnG.') BETWEEN (vt0.c0) AND (rt0.c1)))), ((GROUP_CONCAT(rt0.c1)) BETWEEN (((vt0.c1)&(vt0.c0))) AND ((~ (rt0.c2)))), CAST(CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER) FROM rt0, vt0 WHERE ((+ ((('1e500')+(1676357512))))); -- 0ms;
SELECT DISTINCT IFNULL(TOTAL_CHANGES(), CAST(rt0.c2 AS BLOB)), (- (CAST(rt0.c1 AS BLOB))), ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<<(((((vt0.c2)AND(rt0.c2)))AND(rt0.c1)))) FROM rt0 WHERE (CASE ((NULL)/(' _c b'))  WHEN ((x'') NOTNULL) THEN ((((0.6968823762794509)AND('0.7561733683302182')))OR(NULL)) ELSE ((((((((-1173393097)AND('%⦅/{ꂹ[鏋/]')))OR(NULL)))OR('ye~ZAj')))OR(0X74adfd9a)) END);SELECT DISTINCT UPPER(CAST(rt0.c0 AS BLOB)) FROM vt0, rt0 WHERE (CAST((((NULL))!=((1180296954))) AS NUMERIC)) GROUP BY ')G', UPPER(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END), (rt0.c2 COLLATE RTRIM IN ()); -- 2ms;
SELECT ALL ((((vt0.c1)>=(vt0.c0)))>>(((vt0.c1)-(rt0.c0)))), (((vt0.c2)) BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c2 END)) AND ((((rt0.c1)>(rt0.c2))))), (NOT (CAST(x'' AS INTEGER))) FROM vt0, rt0; -- 0ms;
SELECT ALL AVG(rt0.c0) FROM vt0 WHERE ((((((0.9991669259369852) BETWEEN ('-1555249097') AND (NULL))))<(((NOT (''))))));SELECT DISTINCT ((0X5be155fa) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM, (+ (CASE x''  WHEN rt0.c2 THEN vt0.c1 WHEN NULL THEN x'6833' WHEN x'' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c2 END)), ((((vt0.c0, vt0.c0, vt0.c1, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, 0.12464955000242983, vt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c0))) IN ()) FROM vt0 WHERE (TRIM(((NULL) BETWEEN (NULL) AND ('-397931149')))) ORDER BY DATE(((('')) BETWEEN ((vt0.c1)) AND ((rt0.c0))), vt0.c1, ((('??vu'))<=((rt0.c2))))  NULLS FIRST;SELECT ALL (COUNT(vt0.c2) IN (((rt0.c0)IS NOT(rt0.c2)), TYPEOF('꼴'))) FROM vt0 WHERE (CASE WHEN ((('0.11175579482741982', x'98f0', NULL)) BETWEEN ((x'', x'', -3.97931149E8)) AND (('954009616', x'4c32', 0xffffffffb23dd3b2))) THEN ('zVa' IN (NULL, x'')) ELSE '첫*Ⴖ' END);SELECT ALL (((NOT (vt0.c1))) NOT BETWEEN (((((((((NULL)OR(vt0.c0)))OR(rt0.c1)))OR('-820851541')))AND(rt0.c1))) AND (((rt0.c0)>>(rt0.c0)))) FROM vt0, rt0 WHERE ((('!}x* ࣬') NOT NULL)); -- 0ms;
SELECT DISTINCT TOTAL(CASE rt0.c1  WHEN 0.2829772277081515 THEN vt0.c0 END) FROM vt0;SELECT ALL CAST(CAST(vt0.c2 AS BLOB) AS REAL) FROM rt0, vt0 WHERE (TYPEOF(CASE WHEN x'a7d32b5c' THEN NULL END)); -- 0ms;
SELECT ALL ((rt0.c2)!=(0Xffffffffb9cd6356)) COLLATE BINARY, ((UPPER(DISTINCT rt0.c2))IS((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('('))))), json_patch(vt0.c2 COLLATE RTRIM, (NOT (rt0.c1))), (((vt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN 0xffffffffb1659877 THEN vt0.c0 WHEN vt0.c0 THEN 0.2945849472601856 ELSE rt0.c0 END)) AND ((CASE WHEN vt0.c2 THEN 0.07045836921734394 END))), TOTAL(LIKELIHOOD(vt0.c1, 0.17655911774926547)) FROM rt0 WHERE (CAST((0.17282381910654998 IN (0X63be654d)) AS INTEGER));SELECT DISTINCT CAST(((vt0.c1) IS FALSE) AS NUMERIC) FROM rt0;SELECT ALL MIN((vt0.c2 IN (x'b692')), HEX(rt0.c0)) FROM vt0, rt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt0, rt0 WHERE (((x'') BETWEEN ('-278244045') AND (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((vt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE), AVG(((('-1310380540'))>((vt0.c0))) COLLATE NOCASE) OVER (), ((((vt0.c1) NOTNULL))IS(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END)) FROM rt0, vt0 WHERE ((((0.6182753742602907 IN ())) NOT NULL)) ORDER BY ((CAST(vt0.c2 AS INTEGER))IS((((rt0.c1, vt0.c0, rt0.c2))<=((vt0.c1, rt0.c0, vt0.c0))))) DESC  NULLS LAST; -- 1ms;
SELECT ALL rt0.c2 FROM vt0, rt0 WHERE ((JULIANDAY('+K', '0.19435984824073604', 'A.', '', 0.19754365636934212, '1730374055', x'') IN (((x'')*(0.22411589908306362))))); -- 0ms;
SELECT SUM(((rt0.c2)<(rt0.c1))) FILTER(WHERE (- ((rt0.c2 IN ())))) OVER (), 0.07154732787778828, CAST(MAX(vt0.c0) AS NUMERIC) FROM rt0, vt0 ORDER BY rt0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT LIKELY(0xbeabfa6) FROM vt0 LIMIT 397347894; -- 0ms;
SELECT ((((((((((((rt0.c0)OR(vt0.c2)))AND('')))OR(((vt0.c0) NOT NULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((((vt0.c0)OR(vt0.c2)))OR(x'9818')))))OR(((vt0.c2)IS NOT(vt0.c2)))) FROM vt0, rt0 LIMIT -1356267414; -- 0ms;
SELECT CUME_DIST() OVER () FROM rt0, vt0 WHERE (((((((('\n_]')AND('CesZPm')))OR(NULL)), ((NULL) BETWEEN (x'') AND (0.8438286998029659)), ((x'1e22')<>(''))))<=(((- (NULL)), ('-985498735' IN (x'')), (('') IS TRUE))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 NOT INDEXED, rt0 NOT INDEXED WHERE ((((CAST(NULL AS REAL)))<((CASE WHEN '1180296954' THEN NULL ELSE x'' END)))); -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt0.c2)))OR(vt0.c2)) COLLATE RTRIM FROM rt0, vt0 WHERE ((((((-2.050758532E9, NULL, 'gt㚦|揦'))>=((x'', 0.0010055894379094044, ''))))AND(((0x5a1da11f)%(NULL))))); -- 0ms;
SELECT ((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(PRINTF(vt0.c0))))AND(MIN(vt0.c2))))AND(((rt0.c0)GLOB(rt0.c1)))), ((CASE WHEN 0x3f18f24b THEN rt0.c1 ELSE vt0.c2 END) BETWEEN (CAST(rt0.c0 AS TEXT)) AND (((vt0.c0)/(rt0.c1)))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) COLLATE NOCASE, (((((rt0.c2))>((vt0.c1)))) NOT NULL), UNLIKELY(DISTINCT ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(vt0.c2)))OR(rt0.c0))) FROM vt0 GROUP BY ((((rt0.c1) NOTNULL))/(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c1 IN ()) IN ()), vt0.c0;SELECT ALL DENSE_RANK() OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((CAST(rt0.c2 AS REAL)))<>((((rt0.c1) NOT NULL)))), vt0.c1, CASE ((((((((vt0.c2)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1))  WHEN GROUP_CONCAT(rt0.c1) THEN ((rt0.c0) NOT NULL) END FROM vt0 WHERE (LIKELIHOOD(DISTINCT (('-506411048')>>(-1671339978)), 0.333393614655609));SELECT ((vt0.c1)+(rt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((0.5621382692144097) NOT BETWEEN ('-176730964') AND (x'')) IN ()));SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS NUMERIC) FROM rt0; -- 0ms;
SELECT AVG(((vt0.c0) BETWEEN (vt0.c2) AND (0x4207605))) OVER (), (~ (vt0.c0)), (NOT (MIN(vt0.c2))) FROM rt0;SELECT ALL vt0.c1, CASE WHEN (rt0.c1 IN (vt0.c2)) THEN rt0.c1 END, LEAD(((ROUND(rt0.c1, vt0.c1))<<(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))), ((CAST(rt0.c1 AS TEXT))&((rt0.c1 IN ()))), (~ (((vt0.c0)<(vt0.c2))))) OVER ( PARTITION BY JULIANDAY(COALESCE(DISTINCT vt0.c2, rt0.c1), CASE WHEN x'3721' THEN vt0.c2 END, CAST(rt0.c1 AS INTEGER)), (rt0.c0 IN (vt0.c2)) COLLATE NOCASE) FROM vt0, rt0 WHERE ((((('')>(NULL)))+(((('-1909261576', NULL, x''))>((NULL, x'', -1742881832)))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(ABS(rt0.c2))))OR(rt0.c2 COLLATE NOCASE)) FROM vt0, rt0; -- 0ms;
SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT (NOT ('-519107790')) FROM vt0 WHERE ((((- ('')))/((- (0.23384906693144458))))); -- 0ms;
SELECT DISTINCT CAST(((((rt0.c0)AND(vt0.c2)))OR(vt0.c0)) AS NUMERIC) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS REAL) AS NUMERIC) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (NOT ((+ (x'f2d8')))) FROM vt0 WHERE (CAST((NOT (0.2564686251170739)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)||(vt0.c2)))GLOB(((rt0.c2)AND(vt0.c1)))), ((CASE vt0.c1  WHEN rt0.c2 THEN 3.10205777E8 END) BETWEEN ((- (vt0.c1))) AND (((vt0.c1)LIKE(vt0.c1)))), CAST(MAX(x'') AS NUMERIC) FROM rt0, vt0 WHERE (((('-1564747300' IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT LAG(0.1337924925473878, ((json('')) NOT BETWEEN (HEX(vt0.c2)) AND ((~ (vt0.c1)))), CAST((rt0.c2 IN (vt0.c1, vt0.c1)) AS TEXT)) OVER (), vt0.c2, (((((~ (rt0.c0)))OR(LIKELY(''))))AND(CASE WHEN vt0.c2 THEN rt0.c0 WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)), ((MAX(vt0.c2)) IS TRUE), ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))OR(rt0.c0))) AND (((((vt0.c1)AND(vt0.c0)))OR(rt0.c2)))) FROM rt0, vt0 WHERE (json_insert(CAST(NULL AS TEXT), 0.7090696501272189, x'f5f5' COLLATE RTRIM));SELECT ((vt0.c1 COLLATE RTRIM)LIKE(x'0062')) FROM rt0, vt0 WHERE ((((-2025263623)) BETWEEN ((SQLITE_VERSION())) AND (('0.8265239857166753' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (SUM(rt0.c2) IN ()), rt0.c1, rt0.c2 FROM vt0 INTERSECT SELECT DISTINCT (+ ((((rt0.c2))>((vt0.c1))))), (NOT (CAST(rt0.c1 AS NUMERIC))), ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END) AND (CAST(rt0.c2 AS INTEGER))) FROM vt0;SELECT (((vt0.c2)<>(rt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE rt0.c2 END)) FROM rt0;SELECT DISTINCT NTH_VALUE(((CAST(vt0.c1 AS NUMERIC))GLOB(json_array_length(rt0.c1))), CAST((((vt0.c1, vt0.c2, rt0.c1))!=((vt0.c1, vt0.c1, 3.58979263E8))) AS BLOB)) OVER () FROM rt0, vt0;SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE ((HEX(DISTINCT NULL) IN ())); -- 0ms;
SELECT ((((UPPER(vt0.c2))AND(((0.1104537454279545) ISNULL))))AND(1.73602199E8)) FROM rt0, vt0; -- 0ms;
SELECT ((((vt0.c1)||(rt0.c0)))<=(LIKELIHOOD(vt0.c0, 0.9538708749714442))) FROM vt0 GROUP BY (+ (((rt0.c2)||(rt0.c2))));SELECT DISTINCT CASE TOTAL(rt0.c0)  WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c2)OR(rt0.c2)))OR(rt0.c0)) END FROM rt0, vt0 GROUP BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2) NOTNULL)) AND (((((rt0.c0)AND(0.4435381765309452)))OR(rt0.c0)))) HAVING (((((((rt0.c2)AND(vt0.c1)))OR(rt0.c0)), vt0.c0 COLLATE BINARY, SUM(rt0.c1)))>((UPPER(DISTINCT rt0.c0), ((0.7199310026463294)%(vt0.c0)), vt0.c0))); -- 0ms;
SELECT DISTINCT (((~ (vt0.c1)))>>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), NULL, ((((vt0.c2) NOT BETWEEN (0.38031465669386355) AND (rt0.c0)))IS(LIKE(vt0.c2, rt0.c2, '%'))) FROM vt0;SELECT DISTINCT ((((((vt0.c2) BETWEEN (vt0.c2) AND (rt0.c0)))AND((((vt0.c1))<((vt0.c1))))))AND(CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 END)) FROM vt0, rt0; -- 0ms;
SELECT TYPEOF(DISTINCT '-1514716848') FROM vt0 WHERE ('-440825164') GROUP BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))) AND (((vt0.c1 IN ()))));SELECT ALL (vt0.c2 IN ()) FROM vt0, rt0; -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))>=(0.41097621702715714)) FROM vt0 WHERE (CAST((('#') NOTNULL) AS BLOB)); -- 0ms;
SELECT ALL (~ (((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))), TOTAL(((rt0.c1)>(vt0.c1))), (('639786619' COLLATE NOCASE) BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) AND ((rt0.c2 IN ()))) FROM vt0;SELECT DISTINCT ((vt0.c1)<(((vt0.c0) BETWEEN (-595692942) AND (vt0.c1)))) FROM rt0, vt0 WHERE (CASE WHEN (((-1523804916, 0.17845205547391874, NULL)) NOT BETWEEN ((-7.38936068E8, '0.044425466484207754', '-1040861141')) AND ((NULL, '', NULL))) THEN ((x'') NOT NULL) END); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(json_object('N룤fY)4~J{', NULL) AS INTEGER)); -- 0ms;
SELECT DISTINCT '-819112423', vt0.c1, (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((vt0.c1, rt0.c0, vt0.c0)) AND ((vt0.c1, x'', rt0.c0))))==(((vt0.c1) BETWEEN (1.003003296E9) AND (vt0.c2)))) FROM vt0, rt0 WHERE ((((NULL COLLATE BINARY))==(((NOT (x'')))))) ORDER BY CAST(vt0.c2 AS INTEGER) COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT ALL (NOT (NULL)) FROM vt0, rt0 GROUP BY (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, (- (vt0.c2)), (x'' IN ())))>((((x'')<<(rt0.c0)), (((rt0.c0, rt0.c0, vt0.c0, vt0.c1, rt0.c1)) BETWEEN ((vt0.c2, vt0.c0, rt0.c0, 0x4490c35c, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c2, vt0.c2, 0.6619260247283133))), ((vt0.c2)AND(vt0.c2))))) HAVING rt0.c1 COLLATE RTRIM; -- 0ms;
SELECT ALL ((vt0.c2) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))), ((((((((vt0.c1 COLLATE RTRIM)AND(((NULL)!=(0.08815784993942288)))))OR(((((vt0.c2)AND(rt0.c0)))OR(vt0.c0)))))AND((((rt0.c1, rt0.c0, '~&')) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, x''))))))OR(((rt0.c1)>>(vt0.c0)))), x'' FROM vt0, rt0 ORDER BY json_array(rt0.c0, json_array(rt0.c1, vt0.c0, rt0.c1, vt0.c2));SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT LEAD((((NOT (vt0.c2))) BETWEEN ((((vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((vt0.c1, vt0.c2, rt0.c0)) AND ((vt0.c0, vt0.c2, rt0.c2)))) AND ((((vt0.c2))!=((rt0.c1))))), CASE CASE WHEN 0.8611725926038751 THEN vt0.c2 WHEN vt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END  WHEN (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c0))) THEN rt0.c0 WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) WHEN (((vt0.c0, vt0.c2, vt0.c2)) BETWEEN ((vt0.c1, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, vt0.c0))) THEN LIKELIHOOD(DISTINCT vt0.c2, 0.4872367010049956) WHEN ((((vt0.c2)AND(vt0.c0)))AND(rt0.c2)) THEN (((('-1131979800')OR(vt0.c2)))OR(rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c2 IN (vt0.c0)) END, RTRIM(CAST(rt0.c0 AS INTEGER))) OVER (), ((((((vt0.c1)OR('1058599499')))AND(vt0.c1))) NOT BETWEEN (((vt0.c0)+(rt0.c0))) AND (0Xffffffffc6087ca0 COLLATE BINARY)), HEX(DISTINCT ((rt0.c0)/(rt0.c0))) FROM rt0, vt0 WHERE (CASE COALESCE(-1.860192518E9, '1683146034')  WHEN ((0.6034924298957434) ISNULL) THEN ('1e500' IN ()) WHEN (~ (x'')) THEN (x'' IN ()) WHEN ((23910580) NOT BETWEEN (NULL) AND ('')) THEN 0.31063542380477305 COLLATE NOCASE ELSE '221701893' COLLATE RTRIM END); -- 0ms;
SELECT ALL NTH_VALUE(CASE WHEN (NOT (vt0.c0)) THEN (~ (vt0.c2)) END, UPPER(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) OVER () FROM vt0 WHERE (STRFTIME((('0.4999390848487405')OR(NULL)), CASE WHEN NULL THEN 0x69e9fb48 ELSE x'' END, (NOT (NULL)), (('420540251')<<('1287439217')), ((x'')>=('-1665506834')))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt0 WHERE (CAST(NULL COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt0.c0)<=(vt0.c1)))>=(((vt0.c0) ISNULL))) FROM vt0, rt0 WHERE ((((((''))<(('k7txV8U賛'))))<(CASE WHEN '1255822766' THEN '[}J썱u' END))); -- 1ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN TOTAL_CHANGES() WHEN rt0.c2 THEN ((0X59325360) BETWEEN (rt0.c1) AND (vt0.c1)) WHEN SUM(vt0.c0) THEN ((vt0.c1) ISNULL) ELSE CAST(vt0.c1 AS REAL) END, (~ (CASE WHEN vt0.c2 THEN rt0.c2 ELSE rt0.c2 END)), (((+ (vt0.c1))) BETWEEN (((NULL)/(rt0.c2))) AND (((vt0.c1)!=(0.8500537346278799)))) FROM rt0;SELECT DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY, ((((((((((rt0.c1)AND(rt0.c2)))AND((vt0.c0 IN ()))))AND(((vt0.c1) NOTNULL))))AND(MAX(vt0.c2))))OR(MAX(rt0.c2))), LAST_INSERT_ROWID() FROM rt0 WHERE (NULL) ORDER BY ((rt0.c0) NOT NULL) ASC, ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT NULL) LIMIT -985498735;SELECT (((vt0.c2)) BETWEEN (((x'' IN (vt0.c0)))) AND ((((rt0.c1) BETWEEN (vt0.c2) AND (NULL))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(0Xffffffffde65dd5b AS NUMERIC) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((vt0.c1) BETWEEN (x'') AND (''))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((((vt0.c1) ISNULL))OR(PRINTF(rt0.c1, vt0.c2, x'3838', rt0.c2, 0.4969887820984056))))OR(((rt0.c0) NOT NULL))), (((vt0.c0 IN ()))%('')), ((((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR((NOT (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM rt0;SELECT ALL (((((rt0.c2, vt0.c0, vt0.c2)) NOT BETWEEN ((rt0.c2, vt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))=(rt0.c1)), (((((rt0.c0, vt0.c1, vt0.c1)) BETWEEN ((x'', vt0.c0, 0.7000053994972197)) AND ((rt0.c2, '166635035', rt0.c0))))%(vt0.c1)), ((((rt0.c0)||(vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c1))) AND (SUM(rt0.c1))) FROM rt0 GROUP BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE BINARY, CASE 1e500 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c2 COLLATE RTRIM WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c2)))AND(NULL)))AND(x'')) THEN vt0.c1 COLLATE NOCASE WHEN COALESCE(NULL, rt0.c2) THEN ((x'')AND(vt0.c1)) END, vt0.c0;SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))IS(vt0.c0)) FROM rt0, vt0 WHERE (((((('-60146398', 0.7270072150448312, -2.55814606E8))=((2107927385, 0.11549954649843175, 0Xffffffffe798b61a))))LIKE(((NULL) BETWEEN ('EuS﬏DB8R') AND (0X2c622c61))))); -- 0ms;
SELECT ALL CAST((vt0.c2 IN ()) AS REAL), AVG(((vt0.c1) NOTNULL)), ((LIKELY(DISTINCT rt0.c2)) NOTNULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT vt0.c2))<>(IFNULL(vt0.c1, rt0.c1))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (CAST(rt0.c1 AS REAL) IN (rt0.c1)) FROM vt0 WHERE ((('-1909261576') NOT BETWEEN (x'') AND ('682518840')) COLLATE BINARY);SELECT DISTINCT ((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL), DENSE_RANK() OVER ( ROWS BETWEEN ((((+ (rt0.c1))))<=(('⹵*'))) PRECEDING AND (((rt0.c2) BETWEEN (0x1910ef5b) AND (x'4096')) IN ()) FOLLOWING EXCLUDE GROUP), (NOT ((((vt0.c1, rt0.c1, vt0.c1))>((rt0.c0, '-444872829', '0.7938166221245232'))))) FROM vt0, rt0 WHERE (((((x'') NOT BETWEEN ('850970171') AND ('J&AF>')))LIKE(CAST('1179096237' AS REAL)))) ORDER BY ((((x'') ISNULL))IS NOT(NULL COLLATE BINARY)) DESC  NULLS LAST; -- 0ms;
SELECT NTH_VALUE(CASE (- (0.3764291739018535))  WHEN (~ (rt0.c0)) THEN '-1620945161' WHEN ((rt0.c0) IS FALSE) THEN vt0.c1 WHEN COALESCE(DISTINCT rt0.c1, '0.8500537346278799') THEN NULLIF('kng.', vt0.c1) ELSE (('Pr 쨶yDTbr')AND(vt0.c2)) END, (((vt0.c2)-(rt0.c1)) IN ())) OVER () FROM vt0, rt0 WHERE ('溊Nx,.?') ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)<(((rt0.c2) NOTNULL))) DESC  NULLS FIRST, HEX(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))  NULLS FIRST, ((((vt0.c2)-('Qp?# qir'))) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, vt0.c2, vt0.c2)))) AND (((x'0cfe')&(0.21260771914532184)))) DESC; -- 1ms;
SELECT DISTINCT ((COUNT(*))IS NOT(((rt0.c2) NOTNULL))), (+ ((~ (vt0.c2)))), x'', (((rt0.c0)) NOT BETWEEN (((((vt0.c1))==((vt0.c1))))) AND ((0.5714104609774151))), 0.17282381910654998 FROM vt0 WHERE (CASE WHEN CASE 0.2863673895160649  WHEN 'GyyVN\rU뢉' THEN '' END THEN load_extension(x'', '1184515499') WHEN ((((NULL)AND(NULL)))OR('Bv/ aPY')) THEN (~ ('!c')) WHEN (((-1704194273))>=((0.6988907712880227))) THEN '	U~' ELSE x'd341' COLLATE RTRIM END) GROUP BY (((0.009104663225556697) IS FALSE) IN ());SELECT (NOT ((('λ<\nbN冊J''') BETWEEN ('S6') AND (vt0.c1)))) FROM rt0 WHERE ((0.38056691111408747 IN ('M~')) COLLATE NOCASE);SELECT DISTINCT ((((((rt0.c1, vt0.c2, NULL))>((rt0.c1, rt0.c0, vt0.c2))), ((x'0813') IS FALSE), json_object(rt0.c1, rt0.c2, vt0.c0, rt0.c1)))==((LTRIM(rt0.c0, rt0.c1), x'9a9f', CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) FROM vt0 WHERE (UPPER(NULL));SELECT (NOT ((+ (NULL)))) FROM rt0 WHERE (CAST((((('7J')AND(-5.06411048E8)))OR('*i')) AS INTEGER)); -- 0ms;
SELECT ((vt0.c2) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (CASE WHEN vt0.c2 THEN rt0.c0 ELSE vt0.c1 END)) FROM rt0;SELECT DISTINCT ((CAST(rt0.c0 AS TEXT)) IS TRUE) FROM rt0; -- 0ms;
SELECT ALL x'' FROM rt0, vt0; -- 0ms;
SELECT ALL (((((vt0.c2 IN ()))AND(rt0.c2 COLLATE RTRIM)))AND(((rt0.c2)>(rt0.c1)))) FROM rt0, vt0 WHERE ((+ ((-584942857 IN ())))) ORDER BY (~ (rt0.c2 COLLATE NOCASE)); -- 0ms;
SELECT CAST(((vt0.c0)!=(vt0.c1)) AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT x'f724', LEAD(CASE WHEN ((rt0.c0) ISNULL) THEN (rt0.c2 IN ()) ELSE ((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) END, rt0.c2, ((rt0.c0)/(NULL)) COLLATE BINARY) OVER ( PARTITION BY CASE WHEN CASE WHEN vt0.c1 THEN NULL WHEN rt0.c1 THEN vt0.c0 WHEN x'9c44' THEN rt0.c1 END THEN ((rt0.c2) NOT BETWEEN ('js') AND (rt0.c1)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c1)) END, (UNLIKELY(vt0.c1) IN ((((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, '788988823', rt0.c0, vt0.c2, rt0.c0))), ((rt0.c2)%(vt0.c2)))) ROWS ((NULL)>>(vt0.c0 COLLATE BINARY)) PRECEDING), (((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c2))) COLLATE NOCASE FROM rt0 GROUP BY (((CASE WHEN x'' THEN rt0.c2 END, ((rt0.c2)IS NOT(rt0.c2)), json_object(rt0.c1, rt0.c2)))=(((rt0.c0 IN ()), ((vt0.c1) NOT NULL), NULL))) HAVING (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN (((~ (vt0.c2)), CASE WHEN rt0.c1 THEN vt0.c2 END, ((vt0.c0) NOTNULL))) AND (((rt0.c1 IN ()), RTRIM(vt0.c1), TRIM(DISTINCT rt0.c1)))) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))OR(rt0.c1)) THEN vt0.c2 WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c2)||(vt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (x'9eb2') AND (rt0.c2)) THEN rt0.c0 END  NULLS LAST;SELECT DISTINCT '-1909261576' FROM vt0, rt0 ORDER BY (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(NULL)))AND(vt0.c1)) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt0.c1)-(vt0.c2)))<>(((vt0.c0)<(rt0.c0)))) FROM vt0, rt0 WHERE (((-7.38936068E8)>('-22340725')) COLLATE BINARY); -- 0ms;
SELECT ALL LOWER(DISTINCT (((rt0.c2))=((vt0.c1)))) FROM rt0 WHERE ((((((0.58718823480314 IN ()))OR(((((x'')OR('ﺃ>zv63	-')))OR(-736382010)))))OR(0.31159323887765056)));SELECT DISTINCT (+ (((vt0.c0) ISNULL))), TOTAL(((vt0.c0) BETWEEN (vt0.c1) AND (NULL))) OVER (), ((((vt0.c1)IS NOT(vt0.c2)))<(((vt0.c0) IS TRUE))) FROM vt0 WHERE ((COALESCE(DISTINCT 0xffffffff98cba0b9, 0Xfffffffff73c6521) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c1) ISNULL)) IS FALSE), CASE WHEN (((rt0.c2))<((vt0.c0))) THEN rt0.c1 COLLATE NOCASE ELSE TOTAL(x'30be') END, vt0.c1, CAST((- (rt0.c2)) AS NUMERIC), (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'' END, ((rt0.c2)=(vt0.c2)), ((0.8567420702718419) ISNULL)))>(((rt0.c2 IN (vt0.c1)), ((rt0.c2) ISNULL), (- (rt0.c0))))) FROM vt0 WHERE (((((1947680551)IS NOT(NULL))) NOT BETWEEN (((0Xffffffffb6f29aad) BETWEEN ('838599394') AND (x''))) AND (CAST(789760325 AS BLOB))));SELECT DISTINCT ABS(rt0.c2) FROM vt0, rt0 WHERE (((((ABS(DISTINCT -803013453))AND(((NULL)<<(937365087)))))AND(CAST('0.19435984824073604' AS TEXT)))) LIMIT -1455283566; -- 0ms;
SELECT ((((json_valid(vt0.c0))AND(((vt0.c2)<<(vt0.c2)))))OR(((rt0.c2) IS FALSE))), ((vt0.c1 COLLATE RTRIM)OR(((vt0.c2) NOTNULL))), vt0.c1 FROM vt0, rt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (COUNT(*)) AND ('2082379641')) FROM vt0, rt0 WHERE ((((x'91d0' COLLATE NOCASE))>((((0.5714852645122446) IS TRUE))))); -- 1ms;
SELECT CAST(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)) AS TEXT), ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))>=(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)))), ((CASE WHEN vt0.c0 THEN vt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END) NOT BETWEEN (GROUP_CONCAT('숨턉')) AND (rt0.c0 COLLATE NOCASE)), (((~ (rt0.c0))) NOT NULL), ROW_NUMBER() OVER () FROM vt0;SELECT SUM((((vt0.c1, vt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, NULL)) AND ((vt0.c2, rt0.c2, vt0.c0)))) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT vt0.c2, ((rt0.c2)LIKE(rt0.c2))) FROM rt0, vt0 WHERE ((((+ ('-1909261576'))) BETWEEN (SQLITE_COMPILEOPTION_USED(NULL)) AND ((NULL IN (NULL, 1340954773))))); -- 0ms;
SELECT ALL ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))<>(vt0.c2)), ((((rt0.c2)%(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c2))) AND (((((rt0.c2)AND(rt0.c0)))OR(vt0.c2)))), AVG(((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1))) OVER () FROM vt0 WHERE (CAST(((NULL) ISNULL) AS REAL));SELECT DISTINCT vt0.c0 FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((' NO4#uZ{F' COLLATE BINARY)) AND ((((rt0.c0)||(rt0.c1))))); -- 0ms;
SELECT ALL LEAD(((+ (rt0.c0)) IN (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE, ((CAST(rt0.c0 AS INTEGER))GLOB(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))))) OVER ( PARTITION BY vt0.c1, (((((vt0.c0 IN ()))OR(((((rt0.c0)OR(vt0.c2)))AND(rt0.c1)))))AND(((((vt0.c2)AND(rt0.c1)))AND(rt0.c2))))) FROM rt0;SELECT DISTINCT ((((vt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))>((- (rt0.c1)))) FROM rt0 WHERE (CASE (~ (NULL))  WHEN ((x'')|(x'')) THEN (((('-943006898')OR(0.28907630245695515)))AND(x'34ff')) END) LIMIT -119861840;SELECT ALL ((((rt0.c1)<=(vt0.c1))) IS TRUE) FROM rt0 ORDER BY rt0.c1 COLLATE RTRIM LIMIT -696960143;SELECT ((((0.10347693080949871)AND(((((0.8082872236338796)AND(rt0.c1)))OR(rt0.c0)))))AND(((vt0.c2)+(rt0.c2)))) FROM rt0 FULL OUTER JOIN vt0 ON (- (((('0.5687066830592472')) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))); -- 0ms;
SELECT ((((((((vt0.c1)OR(rt0.c1 COLLATE BINARY)))OR(rt0.c0)))OR(((vt0.c1)||(rt0.c1)))))AND(vt0.c0 COLLATE BINARY)) FROM rt0 WHERE (UPPER(NULLIF(DISTINCT '-322381311', x'278c')));SELECT DISTINCT vt0.c1 COLLATE BINARY FROM vt0, rt0 WHERE (HEX(DISTINCT (((6.63408468E8))!=((NULL))))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) ISNULL) AS TEXT) FROM vt0 WHERE ((0X697e03c8 IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NULL FROM rt0, vt0 WHERE (0.5943872830377552); -- 0ms;
SELECT ALL AVG(rt0.c2) FROM rt0; -- 0ms;
SELECT ALL (((vt0.c1 IN ()))>=((((rt0.c2, rt0.c0, vt0.c1, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, '-120514528', vt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c1, 0.5255603478656603, vt0.c2))))) FROM rt0 WHERE ((TRIM(-1.32675332E8) IN ()));SELECT (((CASE WHEN vt0.c1 THEN rt0.c0 END))>((CAST(NULL AS TEXT)))), (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 END IN ()), (((((-5.1910779E8) NOT BETWEEN (rt0.c2) AND (vt0.c2))))<((((rt0.c0)GLOB(rt0.c2))))) FROM vt0;SELECT DISTINCT vt0.c1, ((((vt0.c1)<=(vt0.c1))) BETWEEN (NULL) AND ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))), (MIN(rt0.c0) IN ()) FROM rt0 WHERE (COALESCE(((((((((((((0.17592511266605182)OR(NULL)))OR(x'2a62')))AND(0.027630572606244463)))OR('391243714')))OR('0.10615220201409592')))OR(NULL)), ((((0Xffffffff8a6a723c)OR('3볨b')))OR(NULL))));SELECT NULL FROM vt0 WHERE (CASE WHEN (-2111494648 IN ()) THEN '-1156981647' COLLATE BINARY ELSE ((1533101643)GLOB(NULL)) END); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c2 AS BLOB) AS BLOB) FROM vt0 GROUP BY CAST(CASE WHEN vt0.c2 THEN rt0.c2 ELSE vt0.c2 END AS NUMERIC), (x'' IN (((vt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), ((LIKELY(DISTINCT vt0.c2)) NOT BETWEEN (((NULL)LIKE(rt0.c2))) AND (((vt0.c1) IS FALSE)));SELECT DISTINCT (~ (x'3b511a17')), CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN 'Y' THEN rt0.c1 END COLLATE RTRIM, TYPEOF(((rt0.c0) IS FALSE)), (((((rt0.c2))<((rt0.c1))))GLOB(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)), SQLITE_COMPILEOPTION_USED(vt0.c2) FROM rt0;SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)))GLOB(((rt0.c0) NOT BETWEEN (vt0.c0) AND ('1658663246')))) FROM rt0, vt0; -- 0ms;
SELECT TRIM(((vt0.c1) ISNULL), (vt0.c0 IN ())) FROM vt0 WHERE ((((('*eZ')IS NOT(0xb0e2373))) NOT BETWEEN ((((NULL))=((-9.85498735E8)))) AND (((1.058599499E9) BETWEEN (x'') AND (0.790972710908148))))); -- 0ms;
SELECT ALL 'vG4,J' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt0.c0)AND(vt0.c2)))AND(rt0.c0)) THEN (- (rt0.c2)) WHEN (~ (vt0.c2)) THEN vt0.c1 WHEN NULLIF(DISTINCT vt0.c1, vt0.c2) THEN ((rt0.c2)+(vt0.c0)) ELSE NULL COLLATE BINARY END FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c1)<=(rt0.c0))) NOTNULL), CAST(GROUP_CONCAT(rt0.c1) AS TEXT), (((+ (rt0.c0)))|((vt0.c1 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT MIN(rt0.c1, rt0.c0) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((- (((NULL) ISNULL)))) ORDER BY ''  NULLS FIRST, ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) IN ()) DESC; -- 0ms;
SELECT ((NULLIF(DISTINCT rt0.c2, vt0.c1))%(rt0.c0 COLLATE BINARY)) FROM vt0, rt0; -- 0ms;
SELECT ALL ((+ (rt0.c1)) IN (rt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT ALL CASE (((vt0.c0))>((vt0.c0)))  WHEN CAST(0.5460112772539764 AS REAL) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) END, TOTAL(((((vt0.c2)AND(vt0.c0)))AND(vt0.c2))), json_array_length(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))) FROM vt0;SELECT ALL (- (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, vt0 WHERE ((x'' COLLATE RTRIM IN ())) GROUP BY (((vt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((''))); -- 0ms;
SELECT NULL FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)IS(CAST(rt0.c1 AS NUMERIC))), SUM(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END) OVER (), SQLITE_VERSION() FROM rt0 LIMIT 1642430405 OFFSET 1244797867;SELECT DISTINCT (((CASE WHEN rt0.c2 THEN 0.19435984824073604 WHEN vt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 END, ((rt0.c2) IS FALSE), ((((vt0.c1)OR(rt0.c2)))OR(vt0.c1))))<=((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c2)), ((rt0.c1)IS(rt0.c2)), ((rt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))) FROM rt0, vt0 WHERE (((((('Ta\rD_', x'614d', 0.35809888364101783)) BETWEEN ((-2.06874174E9, x'', NULL)) AND ((NULL, NULL, 1126089651)))) BETWEEN (0xffffffff8df3584d) AND (CAST('' AS BLOB)))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL LEAD(rt0.c0, CAST(CAST(vt0.c1 AS REAL) AS NUMERIC), NULL) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (+ (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT 0Xffffffffab57f61e FROM rt0, vt0 ORDER BY CAST((~ (vt0.c1)) AS NUMERIC) ASC  NULLS LAST; -- 0ms;
SELECT ((COUNT(*))<<((- (vt0.c2)))), (- (AVG(rt0.c0))), COUNT(((rt0.c2)OR(rt0.c2)) COLLATE NOCASE) FROM vt0 GROUP BY (NOT (vt0.c1)) COLLATE NOCASE, CAST(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c2)) AS BLOB), ((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (-721171667) AND (((((vt0.c2)AND(vt0.c1)))OR('G^箐W\')))) HAVING CAST((rt0.c0 IN ()) AS TEXT);SELECT DISTINCT ((((SUM(vt0.c0))OR((vt0.c2 IN (vt0.c0)))))OR(CASE WHEN NULL THEN rt0.c2 END)) FROM rt0 NATURAL JOIN vt0; -- 1ms;
SELECT CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (- (CASE 'UMhILhz3'  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (x'');SELECT DISTINCT ((((rt0.c0)>(vt0.c1))) BETWEEN ((NOT (rt0.c1))) AND (GROUP_CONCAT(rt0.c2))), rt0.c0, NTH_VALUE(CASE 0x365c12e8  WHEN rt0.c2 THEN 0.4853107338434065 ELSE rt0.c0 END COLLATE NOCASE, ((((vt0.c2 IN ())))<=((TRIM(rt0.c0, rt0.c2))))) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) IS TRUE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (('-89538010') NOT BETWEEN (rt0.c1) AND (x'' COLLATE NOCASE)) FROM rt0, vt0 WHERE (((((']Hf0ɏ(6 M')>(0.795114295730672))) BETWEEN (CASE WHEN '1003003296' THEN NULL END) AND ((('0.8500537346278799')&('-1418143221'))))); -- 0ms;
SELECT ALL TRIM(DISTINCT 'R') FROM vt0, rt0 WHERE ((((((0.9766375215938646)>(x''))))>(((- (x'')))))) LIMIT -694153994; -- 0ms;
SELECT DISTINCT LEAD(vt0.c1 COLLATE NOCASE, ((CAST(vt0.c2 AS NUMERIC))/(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN NULL ELSE vt0.c1 END)), ((((vt0.c2) IS TRUE))<<(((((vt0.c0)OR(vt0.c2)))AND(vt0.c0))))) OVER (), (((rt0.c0, vt0.c2, vt0.c1)) BETWEEN ((((NULL)*(rt0.c0)), CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c2 END, (- (vt0.c2)))) AND ((((rt0.c1) ISNULL), ((((((((((((vt0.c0)OR(rt0.c0)))OR(vt0.c2)))AND(vt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)), ((rt0.c0) NOT BETWEEN (vt0.c2) AND ('806038520'))))), CAST(LOWER(rt0.c2) AS REAL) FROM vt0 LIMIT 1276399999 OFFSET -1769783306;SELECT DISTINCT CASE (vt0.c2 IN ())  WHEN vt0.c2 THEN (vt0.c1 IN ()) WHEN (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN UNLIKELY(vt0.c0) WHEN (((rt0.c0, -878633971, rt0.c0))<>((0.4714754084372237, rt0.c2, vt0.c0))) THEN rt0.c0 COLLATE BINARY ELSE (+ (vt0.c1)) END FROM vt0;SELECT DISTINCT rt0.c1, ((CAST(-1.731485511E9 AS NUMERIC)) NOT BETWEEN (vt0.c2) AND ((NOT (vt0.c0)))), CAST(MAX(rt0.c2) AS INTEGER) FROM rt0;SELECT NULL, ((vt0.c0) IS TRUE) COLLATE RTRIM, GROUP_CONCAT(((vt0.c1)<>(rt0.c1))) FROM vt0 WHERE ((~ (x'')) COLLATE NOCASE);SELECT CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c1)/(rt0.c2)) WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c2 AS NUMERIC) WHEN rt0.c0 THEN 0.2943845672980425 ELSE COUNT(*) END FROM rt0 WHERE ((UPPER(DISTINCT NULL) IN ())) GROUP BY ((rt0.c1) NOTNULL) COLLATE RTRIM COLLATE BINARY HAVING (load_extension(vt0.c2, vt0.c1) IN (CAST(vt0.c1 AS REAL), ((vt0.c1) IS TRUE)));SELECT DISTINCT ((rt0.c2)IS NOT(rt0.c0)), CAST(((((rt0.c2)OR(rt0.c1)))AND(vt0.c1)) AS BLOB), ((((MIN(rt0.c2))OR(((vt0.c2) BETWEEN (0.061205579868740756) AND (rt0.c1)))))AND(((vt0.c1)GLOB(rt0.c0)))) FROM vt0, rt0 WHERE (CASE WHEN (('1072101058') ISNULL) THEN ((x'c53eb1fdbdae') BETWEEN (0.22411589908306362) AND (0.738556676691841)) ELSE CAST(0.1337924925473878 AS NUMERIC) END); -- 1ms;
SELECT ALL ((COALESCE(DISTINCT vt0.c2, vt0.c0, vt0.c2, rt0.c0))>=(CASE WHEN rt0.c0 THEN vt0.c1 END)) FROM vt0, rt0 LIMIT -551577787 OFFSET 112508203; -- 0ms;
SELECT CASE SUM(vt0.c0)  WHEN vt0.c0 THEN vt0.c1 COLLATE NOCASE ELSE CHANGES() END, ((((NOT (vt0.c0))))==(((+ (rt0.c2))))), (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND (((~ (rt0.c0))))) FROM vt0;SELECT DISTINCT LIKELY(DISTINCT (- (vt0.c2))) FROM rt0, vt0 WHERE (rtreenode(((NULL)<(0.3669321112130963)), CASE NULL  WHEN '}\rUJa+z斄?' THEN 0.3989527091481797 WHEN x'037c' THEN '-686271046' WHEN -7.3638201E8 THEN x'51ff' ELSE '0.5429890126389738' END)); -- 0ms;
SELECT (COALESCE('', rt0.c1) IN ()) FROM vt0; -- 0ms;
SELECT CASE ((vt0.c1)-(vt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN (vt0.c1 IN (rt0.c0)) ELSE (+ (vt0.c2)) END FROM vt0 WHERE (((((+ (0x17af0c36))))<(('603197357' COLLATE RTRIM))));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((x''))), CAST(CAST(vt0.c2 AS REAL) AS NUMERIC), 'Ta\rD_' FROM rt0 WHERE ((- (((0Xffffffff90d278ab) IS TRUE))));SELECT '1663199054' FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (CAST(vt0.c1 AS TEXT))) FROM vt0, rt0 WHERE (CAST((NULL IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))>=((0.18957478884338153))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM, LAST_VALUE(((rt0.c1) ISNULL) COLLATE NOCASE) OVER (), ((CASE WHEN -1.726883357E9 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c2  WHEN rt0.c2 THEN rt0.c2 END) AND (((vt0.c0) NOTNULL))) FROM vt0, rt0 WHERE (CASE NULL  WHEN ((((NULL)AND(NULL)))AND('')) THEN (((NULL))<=((x''))) WHEN (NOT (-2.050758532E9)) THEN ((0Xffffffffc6087ca0) NOT BETWEEN (-2.2340725E7) AND (x'')) WHEN (('-943006898') NOT BETWEEN ('-1581122801') AND (NULL)) THEN CASE '(C'  WHEN '2088902381' THEN 0.9728733119307139 ELSE '숨턉' END ELSE ((0.9990712224301453)>=(x'')) END); -- 1ms;
SELECT (- (1851314803)), ((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))/(CAST(rt0.c0 AS BLOB))), vt0.c1 FROM vt0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END) IS TRUE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(vt0.c2) AS TEXT) FROM vt0, rt0 WHERE (CASE WHEN ('-1584720677' IN ()) THEN ((((0xffffffffbd7d7fab)AND(NULL)))OR('칏U')) ELSE CASE WHEN NULL THEN NULL ELSE x'' END END) GROUP BY ((((rt0.c1)<>(rt0.c0))) NOT BETWEEN (((rt0.c1)>=(vt0.c0))) AND (CAST(rt0.c1 AS REAL))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) BETWEEN (vt0.c1) AND (-1.173393097E9))  WHEN ((rt0.c0)%(rt0.c0)) THEN (- (vt0.c2)) END FROM vt0;SELECT TOTAL(CAST(vt0.c2 AS REAL)) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), ((((((rt0.c0)*(vt0.c0)))AND(((rt0.c1)GLOB(vt0.c2)))))AND(vt0.c1 COLLATE RTRIM)), ((CAST('x{' AS REAL))IS NOT(vt0.c1)) FROM rt0;SELECT DISTINCT TOTAL('6k&UTa[' COLLATE RTRIM) OVER () FROM rt0, vt0 WHERE (DATE('-1704439127' COLLATE RTRIM, ((0.5805926509940454)AND(-696960143)), (+ (0.553246992505104)))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 LIMIT -342471858 OFFSET -1721422576; -- 0ms;
SELECT x'', ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ('-317668006')), COUNT(*) COLLATE RTRIM FROM rt0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (((x'') ISNULL)) AND ((- (x'')))));SELECT DISTINCT (((((rt0.c2))>=((rt0.c1))))GLOB(TRIM(rt0.c0, vt0.c2))) FROM rt0 WHERE (((x'' IN ()) IN ())) ORDER BY ((((((vt0.c0)AND(rt0.c1)))AND(vt0.c2)))<(CAST(vt0.c2 AS NUMERIC))), (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0.7407646307449746))))||(((rt0.c1) BETWEEN (rt0.c1) AND (x''))))  NULLS LAST;SELECT DISTINCT (((rt0.c2 IN (vt0.c2, vt0.c0)))=(((vt0.c2) ISNULL))), AVG(TYPEOF(rt0.c0)), COALESCE(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)), (('') ISNULL), ABS(DISTINCT vt0.c1), HEX(DISTINCT rt0.c2)) FROM rt0 WHERE (0.6246813034260057);SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) NOT NULL), ((((((rt0.c2)GLOB(vt0.c2)))OR(0.08020679775489514)))OR(((vt0.c0)|(rt0.c0)))), (((((vt0.c2 IN ()))AND(((-824669089)>>(vt0.c2)))))OR(TRIM(DISTINCT rt0.c0))), ((rt0.c2 IN (rt0.c0)) IN (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))), ((INSTR(rt0.c2, rt0.c0)) BETWEEN (vt0.c1) AND (MIN(rt0.c0))) FROM vt0, rt0 WHERE ((((- (x''))) ISNULL)); -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1)))) FILTER(WHERE (- (CASE WHEN -2.06874174E9 THEN rt0.c2 ELSE vt0.c1 END))) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((- (rt0.c2))) NOT BETWEEN (COUNT(rt0.c2)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))), ABS(INSTR(vt0.c2, rt0.c2)), (+ (((rt0.c0)>(vt0.c1)))) FROM rt0 WHERE (CAST(((' n6!4ƏW')GLOB('269381534')) AS NUMERIC));SELECT DISTINCT (((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN (vt0.c0, ((vt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c2)))) FROM rt0;SELECT DISTINCT SQLITE_VERSION() FROM rt0, vt0; -- 0ms;
SELECT 0xfffffffffc7b192e FROM rt0 WHERE (((((((0.02173683139611693)AND(x'a71b')))AND(NULL))) NOT BETWEEN ((((x''))!=(('S6')))) AND (((NULL)<('1749881221'))))) ORDER BY (+ (((vt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) DESC;SELECT ALL CASE (+ (rt0.c0))  WHEN NULL THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END WHEN vt0.c2 THEN ((rt0.c0) NOTNULL) END, ((CASE vt0.c2  WHEN NULL THEN rt0.c0 END)|(((rt0.c2)IS NOT(vt0.c2)))), TOTAL(CASE WHEN vt0.c0 THEN x'' END) OVER () FROM rt0 WHERE ((- (((((0.8342422072351179)AND('*a')))AND(NULL)))));SELECT DISTINCT TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE) OVER ( ORDER BY (((rt0.c2 IN ())) NOTNULL)  NULLS FIRST) FROM rt0, vt0 WHERE (0x4d456f59) ORDER BY CASE ((rt0.c1) IS FALSE)  WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c2)) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(rt0.c1)) THEN vt0.c2 COLLATE NOCASE ELSE x'5b25' END; -- 0ms;
SELECT DISTINCT COUNT(SUM(CAST(rt0.c1 AS INTEGER))), CAST(vt0.c0 AS REAL), COUNT(*) OVER ( ORDER BY UPPER(0X4cbcc371)  NULLS FIRST) FROM vt0;SELECT ((vt0.c1)IS NOT(LOWER(vt0.c1))) FROM vt0, rt0 WHERE (((CASE 'j'  WHEN 0.3496802090698192 THEN x'' WHEN '-599909162' THEN '2145584194' WHEN 'x\誒)숦DDm' THEN NULL END)<<(((0.1444806770034096) IS TRUE)))) ORDER BY ((vt0.c2)>=(vt0.c2)) COLLATE NOCASE DESC  NULLS LAST, CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c2)<<(rt0.c0)) END  NULLS FIRST; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, rt0 WHERE (CAST(((NULL) NOT NULL) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND(COUNT(rt0.c1))))OR(((rt0.c1) NOT NULL))) FROM vt0 INNER JOIN rt0 ON vt0.c2; -- 0ms;
SELECT DISTINCT ((((CASE vt0.c0  WHEN vt0.c2 THEN rt0.c0 END)AND(((vt0.c0) ISNULL))))AND((vt0.c1 IN ()))) FROM rt0 WHERE ((((('-1534254381')LIKE('498075150'))) BETWEEN (CASE WHEN x'' THEN 0.4963440970388481 ELSE 'XZ' END) AND (NULL))); -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS TEXT)))>=(((vt0.c1 IN ())))) FROM vt0; -- 0ms;
SELECT json_valid((vt0.c2 IN ())), vt0.c0, CASE WHEN (+ (vt0.c2)) THEN vt0.c0 END FROM vt0 WHERE (NULL); -- 5ms;
SELECT DISTINCT TRIM(DISTINCT (vt0.c2 IN (vt0.c0, rt0.c2))) FROM rt0, vt0 WHERE ((((((0.5311218883012031)>=(x''))))>=((UNICODE(0Xffffffffd2f0c90a))))); -- 0ms;
SELECT ALL ((rt0.c2) NOT BETWEEN (vt0.c2) AND (rt0.c2)) COLLATE RTRIM FROM rt0;SELECT ALL RANK() OVER () FROM rt0, vt0; -- 1ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL) FROM rt0, vt0 WHERE (CAST((((NULL))==((0.11419121964393264))) AS REAL)); -- 0ms;
SELECT ALL TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 END) FROM rt0 GROUP BY (((rt0.c2 IN ())) NOTNULL), CASE WHEN rt0.c0 THEN '-1524454037' ELSE CAST(vt0.c2 AS INTEGER) END, (((((((0X56d9233f)AND(rt0.c1)))AND(rt0.c1)), vt0.c2 COLLATE NOCASE, (- (vt0.c0))))>((CAST(vt0.c2 AS INTEGER), ((rt0.c2) BETWEEN (vt0.c1) AND (x'')), x'04bd'))) HAVING COUNT(*);SELECT ALL CASE (rt0.c2 IN (rt0.c1))  WHEN (NOT (rt0.c2)) THEN ((vt0.c1) NOTNULL) ELSE rt0.c2 COLLATE RTRIM END FROM rt0, vt0 LIMIT 2084320312 OFFSET -278244045; -- 0ms;
SELECT CAST(CAST(vt0.c2 AS INTEGER) AS INTEGER), ((vt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE, ((((((((CASE x'8950'  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)AND(((vt0.c2)<(rt0.c2)))))OR(TYPEOF(vt0.c2))))AND(COUNT(*))))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0 WHERE (CASE '-1495976501' COLLATE RTRIM  WHEN ((-696960143)<=('O')) THEN ((NULL) NOTNULL) END);SELECT DISTINCT (rt0.c2 IN ()), (((rt0.c0 IN ()))/(((rt0.c1) ISNULL))), ((((rt0.c0) NOT NULL))IS(vt0.c0)), (((('479264207')LIKE(vt0.c1))) IS TRUE), UPPER(DISTINCT ((rt0.c1) ISNULL)) FROM rt0, vt0; -- 0ms;
SELECT ((vt0.c2)!=(((((vt0.c2)AND(vt0.c2)))OR(rt0.c1)))) FROM vt0, rt0 ORDER BY HEX(DISTINCT CAST('2084320312' AS TEXT)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((vt0.c0)IS NOT(vt0.c2)), 0.8653752313765632), ((vt0.c2)<(rt0.c0)) COLLATE NOCASE, rt0.c1 FROM rt0, vt0 ORDER BY CAST(((rt0.c1) NOT BETWEEN (vt0.c2) AND (0.1266610379253451)) AS NUMERIC) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((CAST(vt0.c0 AS BLOB))<(vt0.c1 COLLATE NOCASE))) OVER (), AVG(GROUP_CONCAT(0Xffffffff9cba61ee)), AVG(rt0.c2) FROM rt0, vt0;SELECT ALL ((vt0.c1 COLLATE RTRIM) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT CASE CHANGES()  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1)) THEN CASE rt0.c1  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END ELSE UPPER(DISTINCT vt0.c2) END, CASE (rt0.c1 IN ())  WHEN NULL THEN CASE WHEN rt0.c0 THEN rt0.c0 END ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) END, COUNT(STRFTIME(rt0.c1, vt0.c1, vt0.c1, vt0.c1, rt0.c1)) FROM rt0, vt0 WHERE (((((0.19754365636934212)OR(NULL)))OR(0.24561725842559623)) COLLATE RTRIM); -- 1ms;
SELECT (CAST(rt0.c1 AS NUMERIC) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT 0.6507097622574668, (+ (((((((((((((vt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(vt0.c2)))), CAST(UPPER(rt0.c1) AS REAL) FROM vt0;SELECT DISTINCT (SUM('') IN (((rt0.c0)-(rt0.c2)), 0xffffffffc30fe1e7)) FROM rt0 WHERE ('1179096237'); -- 0ms;
SELECT DISTINCT CAST(((((vt0.c2)OR(rt0.c2)))OR(vt0.c2)) AS REAL), DENSE_RANK() OVER ( GROUPS ((~ (vt0.c0)) IN ()) PRECEDING EXCLUDE GROUP), AVG(((0.630697896571791) NOTNULL)) OVER ( ORDER BY CASE ((rt0.c1) IS TRUE)  WHEN (((rt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((vt0.c2, 0x7c1e9779, rt0.c1))) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END ELSE ((vt0.c2) IS TRUE) END  NULLS LAST), CASE WHEN TRIM(DISTINCT vt0.c1, rt0.c0) THEN (NOT (rt0.c1)) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN LOWER(vt0.c0) WHEN ((vt0.c0)/(vt0.c2)) THEN 1305183934 ELSE x'f054' END, (((((rt0.c0 IN ()))AND(-2.4501287E8)))OR(((((vt0.c2)AND(0xffffffffe23f9239)))OR(rt0.c1)))) FROM vt0, rt0 WHERE (((((((x'') BETWEEN (NULL) AND ('0.5621382692144097')))OR(TRIM(1.730374055E9, x'955916a5'))))AND((((('-1584720677')AND('477664513')))OR('-867897371'))))) LIMIT -1135127825 OFFSET 1882108614; -- 1ms;
SELECT AVG(0Xfffffffff9950900) FROM rt0, vt0 WHERE ((('彨붫') NOT BETWEEN (NULL) AND ('-1779251391')) COLLATE BINARY); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (NULL) AND (vt0.c2)))|('')) FROM rt0, vt0 WHERE (((((0.6262601092457452, 0.9010267551122428, x'')) NOT BETWEEN ((NULL, x'c81c', 'o5*v')) AND ((x'', NULL, 'S应wO'))) IN ())); -- 0ms;
SELECT DISTINCT LIKELY(((((vt0.c1)AND(rt0.c1)))AND(rt0.c1))) FROM vt0 WHERE ((((('-423870614') BETWEEN (1337469982) AND (NULL))) IS FALSE));SELECT (((((rt0.c1, rt0.c0, vt0.c1))>=((vt0.c2, rt0.c2, rt0.c0)))) BETWEEN ((NOT (vt0.c1))) AND ((((x'')) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) FROM rt0, vt0 WHERE (((TRIM(DISTINCT x'56ec'))-(' ?r	q' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT ALL (~ (((rt0.c2) IS FALSE))), ((((1.7976931348623157E308)<<(vt0.c2)))>>(((rt0.c0)OR(rt0.c0)))), RANK() OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL (((((rt0.c2))>((vt0.c2)))) IS TRUE) FROM rt0;SELECT ((((vt0.c0)OR(rt0.c1))) NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (((vt0.c0)/(vt0.c2)))) FROM rt0;SELECT (((rt0.c2 IN ())) NOT BETWEEN (rt0.c1) AND (SQLITE_SOURCE_ID())), (((vt0.c2 IN ())) NOT NULL), TOTAL(vt0.c0) OVER () FROM vt0 WHERE (json_type(((NULL) NOT BETWEEN (x'') AND (x''))));SELECT ALL ((((rt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))<=(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))<>(((((vt0.c0)OR(vt0.c1)))AND(rt0.c0)))), ((-1906861155)|('858182339')), (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((vt0.c1))) FROM vt0;SELECT DISTINCT vt0.c1, 0.6954607088967489 COLLATE BINARY, ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN vt0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c1))) AND (((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)))) FROM rt0 WHERE ((CASE WHEN 0X7c1e9779 THEN '1826523803' ELSE NULL END IN ()));SELECT ((((COUNT(vt0.c1))AND((rt0.c2 IN ()))))OR(UNLIKELY(DISTINCT vt0.c0))), TOTAL((((vt0.c0, rt0.c1, x''))>=((rt0.c0, vt0.c2, vt0.c2)))), '' FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c1 AS INTEGER)  WHEN (((vt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1))) THEN MAX(vt0.c2) ELSE CASE vt0.c0  WHEN 0.25202489955169616 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c2 END END FROM vt0, rt0 WHERE ((((NOT (0.3152485324096983))) NOT BETWEEN (((0.816597110980989)+(x''))) AND (((0.6441925516527587)>=(0.10225781265214462))))) LIMIT 939023403 OFFSET -245012870; -- 0ms;
SELECT ALL ((((vt0.c2) BETWEEN (vt0.c1) AND (rt0.c0))) BETWEEN (((vt0.c2)!=(rt0.c0))) AND (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))) FROM vt0;SELECT ALL '-278244045' COLLATE RTRIM FROM vt0 WHERE ((((NULL) NOT NULL) IN (json_object('U&U\', '799347167'), (x'' IN ())))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), (((vt0.c0, vt0.c1 COLLATE BINARY, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))<=((((vt0.c1) NOT NULL), vt0.c1 COLLATE NOCASE, ((((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2))))), 825931551 FROM rt0;SELECT DISTINCT (CAST(rt0.c2 AS TEXT) IN ()), CAST((vt0.c2 IN ()) AS INTEGER), ((((((rt0.c2)%(vt0.c2)))OR((((vt0.c0))<>((rt0.c2))))))AND((((('-1361475983')OR(rt0.c2)))AND(rt0.c1)))) FROM rt0 WHERE (((((2.53558942E8) ISNULL))=(x'' COLLATE RTRIM)));SELECT DISTINCT CASE ((rt0.c0)OR(x''))  WHEN ((vt0.c1)==(rt0.c1)) THEN CASE vt0.c2  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN '0.8265239857166753' ELSE vt0.c1 END ELSE (rt0.c1 IN (rt0.c1)) END FROM rt0 WHERE (TRIM(0.9740147019145775 COLLATE NOCASE, ((((0.6226222117044902)AND(0.5152027096347653)))OR(0.13036837119214173)))) ORDER BY CASE CAST(rt0.c0 AS TEXT)  WHEN ((rt0.c1)OR(rt0.c0)) THEN ((vt0.c0) NOTNULL) END DESC;SELECT DISTINCT ((((rt0.c2) IS TRUE)) NOTNULL) FROM vt0, rt0; -- 3ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 END)&(vt0.c0 COLLATE BINARY)), (- (AVG(vt0.c1))), ((vt0.c0 COLLATE RTRIM)IS(((vt0.c1)==(rt0.c0)))) FROM vt0 WHERE (((((((((0.2609476678185897)AND('2084320312')))OR(0.8683501861069659)))OR(-1156981647)))OR(804980533)) COLLATE RTRIM);SELECT ALL MIN((rt0.c1 IN ())), ((((rt0.c2) ISNULL)) NOTNULL), (NOT (((vt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c1)))) FROM vt0, rt0 GROUP BY CAST(((vt0.c0)&(vt0.c1)) AS REAL); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE)/(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))AND(rt0.c1)))OR(rt0.c0)))) FROM rt0 WHERE ((('-1679588465' COLLATE NOCASE) BETWEEN ((+ ('g8'))) AND ((x'' IN ()))));SELECT LAG((~ (((((((((vt0.c1)OR(0.3092996634944879)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))), ((((vt0.c0) NOT NULL))-(((vt0.c1) IS TRUE))), ((((((vt0.c0)OR(vt0.c0)))AND(x''))) BETWEEN (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END) AND (((vt0.c2) ISNULL)))) OVER ( GROUPS  CURRENT ROW) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))==((LIKE(vt0.c0, rt0.c1, '{')))), CAST((vt0.c1 IN ()) AS BLOB), TRIM(rt0.c1 COLLATE NOCASE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c2, vt0.c0, x''))>((vt0.c0, rt0.c1, rt0.c1))) AS REAL) FROM vt0;SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT '', CAST(((vt0.c0)%('1287439217')) AS TEXT), ((((vt0.c1)&(vt0.c2)))>>((((vt0.c0, '-278244045', vt0.c0)) BETWEEN ((rt0.c1, rt0.c1, '-89538010')) AND ((vt0.c2, vt0.c0, vt0.c0))))) FROM rt0 WHERE (ABS(((-3.97931149E8)+('0.8500537346278799')))) LIMIT 1949829467 OFFSET 867251878;SELECT DISTINCT CASE WHEN (((x'8d61', vt0.c2, vt0.c2))==((rt0.c0, vt0.c1, vt0.c2))) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0)IS(vt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((vt0.c2)-(vt0.c0)) THEN TRIM(vt0.c2) WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) WHEN ((rt0.c0)*(rt0.c0)) THEN rt0.c2 ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c2)) END FROM rt0, vt0 GROUP BY (((CASE WHEN 0.9150374499886474 THEN vt0.c1 END, (((((((('h钭_5댷﫸')AND(vt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c1))))>=((x'', vt0.c2 COLLATE RTRIM, (NOT (vt0.c0))))); -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c2 AS BLOB)) FROM vt0 WHERE (((LIKELY('s6')) BETWEEN (((x'7563') BETWEEN (x'') AND (-255814606))) AND (CAST(x'5f0a6261' AS BLOB)))); -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE ((((NULL, NULL, 'Rq''%P4')) BETWEEN ((CAST('>!h*J6' AS BLOB), CASE WHEN ')w2F' THEN NULL ELSE NULL END, (('-1312042601') NOT BETWEEN (x'') AND (923538344)))) AND ((0.9374020431125215, '-1156981647' COLLATE RTRIM, ((((((((0.7113600967208141)AND(0.210488149977609)))AND('-1671339978')))OR(0.5042736845038416)))AND(0.05165001635424549)))))); -- 0ms;
SELECT ALL TYPEOF(((vt0.c0)<<(vt0.c0))) FROM vt0 WHERE (((((('_,'))=((0.7505656098363996)))) NOT BETWEEN ('hI' COLLATE BINARY) AND ((~ ('310205777'))))); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1) NOT NULL)), (((((('0.5897048170503427')OR(rt0.c0)))OR(-2.025263623E9)))IS(((rt0.c0)>=(rt0.c0)))), (((((0.9745914050242648)AND(rt0.c1))))<=(((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))), ((HEX(DISTINCT rt0.c0))IS((rt0.c1 IN ()))), (((rt0.c0 IN (rt0.c1, rt0.c0)))-(((vt0.c2)IS NOT(rt0.c1)))) FROM rt0, vt0 WHERE (CAST(((((((((NULL)AND(x'')))OR(x'')))OR('~M^')))AND(NULL)) AS INTEGER)); -- 1ms;
SELECT ALL x'' FROM rt0, vt0 WHERE (0X59325360); -- 0ms;
SELECT ALL json_remove(rt0.c0, DATE(rt0.c0, rt0.c1, vt0.c0)) FROM vt0 LIMIT -241581159 OFFSET -446568573;SELECT DATETIME(vt0.c0, ((vt0.c2)!=(vt0.c0)), ((rt0.c0)||(NULL))) FROM vt0, rt0; -- 1ms;
SELECT ALL ((LOWER(vt0.c0))/(GROUP_CONCAT(rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT ALL (+ ((rt0.c2 IN ()))), (((rt0.c0 IN ())) NOT BETWEEN (HEX(rt0.c0)) AND ((rt0.c0 IN ()))), ((((rt0.c2 COLLATE RTRIM)AND(SUM(rt0.c0))))OR((vt0.c0 IN ()))) FROM vt0, rt0 WHERE (CAST((('k}]9jd ub')>('뛺<8G*e')) AS TEXT)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c2 IN (x'339e', vt0.c1))) FROM rt0, vt0 WHERE ((((((x'396bd13b')=(722109569)), CAST('-1212212232' AS TEXT), '-1128260516' COLLATE BINARY, (x'0ca0' IN ()), ((0.7669114418688108)LIKE(NULL))))!=((CASE '~0T+m'  WHEN NULL THEN x'e400e683' WHEN '' THEN 0.47125466330454047 WHEN x'1909e24f' THEN '-639963242' ELSE NULL END, ((((((((x'')OR(NULL)))OR(NULL)))OR('-1909261576')))AND('-1704194273')), 0.289813406992816, ((0.7702817943415905) NOTNULL), (0.43638846780985785 IN ()))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))AND(vt0.c2)))) AND ((vt0.c0 COLLATE RTRIM))) FROM vt0, rt0 WHERE ((((NULL) NOT BETWEEN (0Xffffffffe6741081) AND (0.5030659790559785)) IN ())); -- 0ms;
SELECT TOTAL(vt0.c0), CAST(((vt0.c0)<<(rt0.c0)) AS BLOB), (((rt0.c0 IN ())) BETWEEN (((rt0.c2)>>(vt0.c0))) AND (CAST(vt0.c2 AS NUMERIC))) FROM vt0;SELECT DISTINCT (((- (vt0.c2))) NOT NULL), '?', CASE WHEN ((rt0.c2)AND('G')) THEN (+ (vt0.c2)) ELSE ((vt0.c2)<<(vt0.c0)) END FROM rt0, vt0 WHERE ((((((')ྨ s-')) NOT BETWEEN ((x'')) AND ((NULL))))GLOB(((0.2774626628347434)AND(0.2791284372497719))))); -- 0ms;
SELECT DISTINCT '' FROM rt0, vt0 WHERE (CASE ((((-1102770037)OR('933271097')))OR(x''))  WHEN '-22340725' THEN CASE x''  WHEN '/I' THEN NULL ELSE '2084320312' END WHEN NULL THEN 0.8795800050941825 WHEN '-1008841854' COLLATE BINARY THEN 0.8175983270143177 COLLATE RTRIM END); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM)*(COUNT(vt0.c2))) FROM vt0 WHERE ((- ((('xInIR__F') NOT BETWEEN (x'') AND (''))))); -- 0ms;
SELECT ((CASE WHEN rt0.c0 THEN rt0.c1 END)OR(MAX(rt0.c2))) FROM vt0, rt0 GROUP BY (((rt0.c2)>>(NULL)) IN ()); -- 0ms;
SELECT ((JULIANDAY(rt0.c2, 'fv', NULL))-(MAX(x''))), (('nxOet97%x')>>(((rt0.c1) ISNULL))), (((vt0.c2)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))) AND ((UNICODE(NULL)))) FROM vt0, rt0 WHERE ((- (((x'') BETWEEN (-2.2340725E7) AND (x''))))) LIMIT -937759116; -- 0ms;
SELECT DISTINCT (NOT (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c2 THEN rt0.c1 WHEN vt0.c2 THEN rt0.c0 END)) FROM rt0, vt0 WHERE ((('-1428541388')LIKE(0X428997a1)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT TOTAL('〿') FILTER(WHERE HEX(DISTINCT (rt0.c2 IN ()))) OVER ( ORDER BY (NOT (NULL)), (CASE WHEN vt0.c0 THEN rt0.c1 END IN ())  NULLS FIRST) FROM vt0, rt0; -- 0ms;
SELECT (+ ((((rt0.c0))>=((vt0.c1))))), ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))GLOB(CASE WHEN rt0.c0 THEN vt0.c2 ELSE vt0.c1 END)), (((((((((('')>=(rt0.c0)))OR(vt0.c1)))AND(((vt0.c2)=(vt0.c1)))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))OR(((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))) FROM vt0 WHERE ('-1342126181');SELECT DISTINCT (NOT (rt0.c1)) COLLATE BINARY, FIRST_VALUE((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE RTRIM) OVER (), (((~ (vt0.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c2)) AND ((rt0.c0, vt0.c2, rt0.c2))))) FROM rt0, vt0 WHERE ((NOT (((0.5341205948947987)OR(x'3e2a'))))) ORDER BY rt0.c2 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((NOT (0.25042460517147425))))>(((vt0.c1 IN ())))) FROM vt0; -- 0ms;
SELECT DISTINCT json_insert(CAST(vt0.c1 AS BLOB), vt0.c0 COLLATE BINARY, rt0.c2) FROM rt0 RIGHT OUTER JOIN vt0 ON ((x'')==(((vt0.c0)!=(vt0.c0)))); -- 2ms;
SELECT SUM(CASE WHEN x'883a' THEN '-802106467' ELSE rt0.c0 END) OVER ( ORDER BY (rt0.c2 IN (rt0.c2)) COLLATE RTRIM) FROM rt0, vt0 WHERE (((((((NULL) BETWEEN ('') AND (0.8237248198207394)))OR(((NULL) NOT NULL))))OR(CASE WHEN x'' THEN '-x''0)' WHEN 0xffffffffcf12ccab THEN x'67e5' WHEN '' THEN 0.5183725677120242 END))); -- 0ms;
SELECT ALL (CAST(vt0.c2 AS REAL) IN ()) FROM vt0; -- 0ms;
SELECT ((((vt0.c1)-(rt0.c0)))IS NOT((~ (vt0.c1)))) FROM vt0, rt0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((((((0.569025302921046)OR(vt0.c2)))OR(vt0.c2)))) AND ((((rt0.c0) IS TRUE)))) FROM vt0 WHERE (((x'c958') NOT NULL) COLLATE RTRIM);SELECT DISTINCT ((((((((((vt0.c2)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1))) ISNULL) FROM rt0;SELECT ((rt0.c2) ISNULL) FROM rt0 WHERE ((+ (((((0.12902929110385963)OR('-1173393097')))AND(x''))))); -- 0ms;
SELECT DISTINCT SUM('?7 \z') OVER () FROM vt0 WHERE (CAST(CASE 0.3580143835240003  WHEN x'08d7677f' THEN 0Xffffffff816f029b END AS REAL)); -- 0ms;
SELECT CAST(((((((((((((vt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)) AS TEXT) FROM rt0 WHERE (((0.2548409172143906 COLLATE NOCASE)>(((('1533101643')) NOT BETWEEN (('kng.')) AND ((0.415711688736796))))));SELECT DISTINCT highlight(CASE WHEN NULL THEN vt0.c2 END, ((((rt0.c0)AND(vt0.c2)))AND(vt0.c0)), ((vt0.c1)!=(vt0.c2)), CAST(rt0.c1 AS BLOB)) FROM vt0, rt0;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOTNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c2, vt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, x'1fd00a06')) AND ((vt0.c1, rt0.c1, vt0.c2))))IS NOT(rt0.c0 COLLATE RTRIM)) FROM vt0;SELECT ALL CASE WHEN (+ (rt0.c1)) THEN ((rt0.c2)+(rt0.c1)) END, 1932841655, (((((((rt0.c1))<((rt0.c1))))OR(((rt0.c2)||(vt0.c1)))))OR(vt0.c1 COLLATE RTRIM)) FROM rt0, vt0 UNION ALL SELECT DISTINCT (((vt0.c1 IN (rt0.c2)))<>(rt0.c0 COLLATE RTRIM)), (((CAST(vt0.c1 AS BLOB)))<=(((+ (rt0.c2))))), DATE(((vt0.c1) NOT NULL), CAST(rt0.c2 AS BLOB), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) FROM vt0 NATURAL JOIN rt0 WHERE (((((('1426858885')) BETWEEN ((NULL)) AND (('-1524454037')))) NOT BETWEEN (((((NULL)AND(867251878)))OR(''))) AND (((0.8175983270143177)>(NULL))))) ORDER BY (((vt0.c2)) BETWEEN ((((((vt0.c2)OR(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c2)-(rt0.c1))))) DESC, (((((rt0.c1)=(rt0.c2))))>((((0.5570451435826661)<<(vt0.c2)))))  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC)) ISNULL) ASC  NULLS FIRST;SELECT DISTINCT (((LENGTH(0.03103251351042091), NULLIF(vt0.c0, vt0.c1), ((vt0.c0)-(rt0.c1))))<>(((+ (rt0.c0)), CAST(vt0.c0 AS TEXT), ((rt0.c0)LIKE(vt0.c1))))) FROM vt0 WHERE ((((((x'')) BETWEEN ((NULL)) AND ((x''))))=(((NULL)<(x'69ea')))));SELECT ALL MIN(((vt0.c0)-(rt0.c1))) FROM rt0;SELECT DISTINCT (((vt0.c1)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND (((NOT (rt0.c2))))) FROM rt0 WHERE ((+ (ABS(DISTINCT x''))));SELECT (((vt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ()) FROM vt0, rt0 WHERE ((((((((((('}4')AND(0.5687066830592472)))OR(-2068741740)))OR(NULL)))OR(x'0a71fab3'))) BETWEEN (CASE WHEN 'F-746930244998465952T8896824666145245990-1770-760-8314268044319123588T)vv8CZ' THEN 0xffffffffef6a5533 ELSE NULL END) AND (CHANGES()))); -- 0ms;
SELECT DISTINCT CHANGES() FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c2)))) BETWEEN ((((vt0.c2))>=((vt0.c1)))) AND (vt0.c2 COLLATE BINARY)) FROM rt0, vt0; -- 1ms;
SELECT rt0.c0 COLLATE RTRIM, LAG(((((((((CAST(vt0.c0 AS REAL))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (x'1f9a') AND (vt0.c1)))))OR(((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 END)), ((('-397931149') NOTNULL) IN (UNLIKELY(vt0.c0))), ((((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c0))<=((vt0.c1))))))OR(LIKELY(vt0.c2)))) OVER (), ((x'133b') IS FALSE) FROM vt0;SELECT DISTINCT (vt0.c0 IN ()), ((TOTAL(rt0.c1)) ISNULL), CASE ((((vt0.c2)OR(0.535520964593395)))OR(vt0.c1))  WHEN ((vt0.c1)>>(rt0.c1)) THEN CAST(rt0.c1 AS BLOB) ELSE CAST(rt0.c0 AS TEXT) END FROM rt0 WHERE (((((518497268)<(x''))) IS FALSE)) LIMIT -2025263623;SELECT DISTINCT 'ৄUe#' FROM vt0; -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY)%((+ (rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ((0X67cc0a01)OR(rt0.c0)), AVG(((rt0.c2)IS NOT(NULL))), CAST(0.4336692051526039 AS TEXT) FROM rt0, vt0 WHERE ((((0.7743312683408274, NULL, '0.15701540114720713')) NOT BETWEEN ((((((0.8885847663051106)OR(x'')))AND(0.2528582233615606)), ((2109981073) BETWEEN (x'') AND ('0.4853107338434065')), CASE WHEN '1040844212' THEN -2.55814606E8 WHEN x'' THEN NULL WHEN 0x4a152603 THEN 0.2467553036731842 ELSE x'a8ab' END)) AND (((('	V')IS('-1507949161')), ((NULL)IS NOT(x'')), ((0.3688097089754575)==('')))))); -- 0ms;
SELECT ALL ((((- (rt0.c0)), 0.9962308324103811 COLLATE BINARY, ((vt0.c2)>=(vt0.c1))))<(((rt0.c0 IN ()), TOTAL(NULL), CAST(vt0.c0 AS BLOB)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NULLIF(COUNT(*), vt0.c0) FROM vt0 ORDER BY ((((rt0.c1)<(rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN '-1584720677' THEN vt0.c1 ELSE 0.9861784841335746 END))  NULLS FIRST;SELECT DISTINCT NTILE(((((rt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)) OVER (), TYPEOF(COUNT(NULL)), NTILE(((((((((x'')AND(((rt0.c1) ISNULL))))OR(CAST(rt0.c1 AS NUMERIC))))OR((((vt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR((~ (vt0.c2))))) OVER () FROM vt0 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c2))==((rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE rtreenode(rt0.c1, rt0.c2)  WHEN ((NULL)<<(vt0.c0)) THEN ((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)) ELSE TOTAL(vt0.c2) END FROM rt0, vt0 WHERE ((((((NULL)+('1712478341')), 0.596894003033773 COLLATE NOCASE, json_array_length(NULL)))==((DATE(NULL, 0x4327392d, '', NULL, NULL), ((x'')|('Em\r\r')), ((((((((0Xffffffffa1de98d6)AND('')))OR(NULL)))OR(NULL)))OR(x'')))))); -- 0ms;
SELECT DISTINCT ((vt0.c1) BETWEEN (x'') AND (vt0.c1)) COLLATE RTRIM, CASE SUM(vt0.c1)  WHEN vt0.c2 THEN ((rt0.c0)>=(rt0.c0)) END, (COALESCE(vt0.c1, vt0.c0) IN ()) FROM rt0, vt0 WHERE (((x'04c3ee53' COLLATE RTRIM)IS NOT(CASE x''  WHEN 1959054556 THEN '-1860192518' ELSE x'' END))); -- 0ms;
SELECT DISTINCT TRIM(0x49dbaa92), CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS REAL), ((vt0.c0 COLLATE NOCASE)LIKE(((vt0.c2) ISNULL))) FROM rt0;SELECT vt0.c2 COLLATE NOCASE, (NOT (((((rt0.c1)AND(vt0.c1)))OR(vt0.c0)))), NULL FROM vt0;SELECT DISTINCT ((TRIM(vt0.c0))LIKE(MAX(rt0.c2))) FROM rt0;SELECT CAST(((rt0.c2)<=(x'')) AS BLOB), (((((rt0.c1) IS FALSE)))>((((((((((vt0.c1)OR(0.26843729362042523)))OR(vt0.c0)))AND(vt0.c2)))AND(rt0.c1))))), ((((vt0.c0)==(vt0.c0))) ISNULL) FROM vt0, rt0 WHERE ((- (((NULL)<('199933862'))))); -- 0ms;
SELECT ALL ((((rt0.c2)GLOB(vt0.c1)))*(('1533101643' IN ()))), ((CAST(rt0.c0 AS INTEGER)) IS FALSE), SUM(x'') FROM rt0;SELECT DISTINCT (~ ((rt0.c2 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c2)>=(vt0.c0)))OR((vt0.c2 IN ()))))AND(x'')) FROM rt0, vt0 WHERE (json_patch(((((((((0x1aab57aa)OR(NULL)))OR(NULL)))OR(0.6987170149584462)))OR(NULL)), -2.050758532E9)); -- 0ms;
SELECT ALL vt0.c0 FROM rt0, vt0 LIMIT -347070843 OFFSET 2088902381; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>>(rt0.c0))) ISNULL) FROM vt0, rt0 UNION SELECT SUM(CAST(vt0.c0 AS BLOB)) FROM vt0 LIMIT 657585706; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1)OR(vt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))/(CAST(NULL AS INTEGER))), ((((vt0.c0)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(CAST(vt0.c2 AS INTEGER))), CAST(CASE WHEN rt0.c2 THEN vt0.c0 END AS INTEGER) FROM rt0 WHERE ((x'' COLLATE RTRIM IN ()));SELECT DISTINCT (((((rt0.c0) ISNULL)))!=((((vt0.c0)>>('-162667970'))))), (((NULL, vt0.c2, rt0.c2)) BETWEEN ((CAST(vt0.c2 AS NUMERIC), (vt0.c0 IN ()), CASE WHEN '-49275893' THEN rt0.c1 END)) AND ((((rt0.c1)||(vt0.c1)), ((vt0.c1) IS FALSE), (vt0.c2 IN ())))), ((CASE vt0.c2  WHEN 0x154ad5f7 THEN vt0.c1 WHEN '-1719826201' THEN vt0.c1 WHEN rt0.c2 THEN x'' ELSE rt0.c1 END)||((((vt0.c0, rt0.c0, '-v缾&*Vη\r'))<=((rt0.c0, rt0.c2, vt0.c1))))) FROM rt0, vt0; -- 0ms;
SELECT (((vt0.c0 IN (vt0.c1, vt0.c1))) NOT BETWEEN (((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))) AND (COUNT(rt0.c2))), highlight(((vt0.c0) NOT NULL), CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END, ((((vt0.c1)OR(vt0.c0)))AND(rt0.c0)), ((vt0.c0)*(vt0.c1))), 0.6106361661450581, (((rt0.c1 IN (vt0.c0))) ISNULL), TOTAL(PRINTF(rt0.c1) COLLATE RTRIM) FROM rt0 WHERE ((((('bḁ')GLOB(NULL)))>=((((('''d')AND(x'')))OR(x'bd01')))));SELECT CASE (~ (rt0.c2))  WHEN (((rt0.c0))<>((rt0.c1))) THEN CAST(vt0.c1 AS TEXT) END FROM vt0, rt0 WHERE ((NOT ((~ (0Xffffffffbdd63d27))))) ORDER BY ((vt0.c2 IN ()) IN ()) DESC; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0 WHERE ('-1559289639') UNION ALL SELECT ALL ((rt0.c0 COLLATE BINARY)*((('-1704194273') IS FALSE))) FROM vt0, rt0 WHERE ((((-1645900657) NOT NULL) IN ())) ORDER BY ((((vt0.c1)OR(rt0.c1)))OR(((rt0.c2)IS NOT(x'')))) ASC;SELECT (NOT ('498075150')), (((x''))>(((vt0.c0 IN ())))), NULLIF(DISTINCT vt0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0))) FROM vt0, rt0 WHERE (CASE CAST(0Xffffffffc7cadb4e AS REAL)  WHEN ((NULL)OR(0.35422001945386894)) THEN ((0.6461949593460805) BETWEEN ('js') AND (1779214867)) ELSE ((0.688120682938094)>>(-1167068788)) END) ORDER BY ((CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END) NOT BETWEEN (137835110) AND (rt0.c2 COLLATE BINARY)); -- 0ms;
SELECT ALL (((rt0.c1 IN (vt0.c2, rt0.c0)))IS NOT(SQLITE_COMPILEOPTION_USED(vt0.c1))), INSTR(x'', ((rt0.c0) NOT NULL)), CAST(rt0.c1 COLLATE RTRIM AS REAL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT LAG(CAST((((rt0.c1))==((vt0.c0))) AS TEXT), ((((vt0.c1)%(rt0.c2))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND (((rt0.c1) ISNULL))), 7237573) OVER (), CAST((- (rt0.c2)) AS INTEGER), ((CASE WHEN rt0.c0 THEN rt0.c1 END)&(TOTAL(vt0.c0))), x'', (- (((rt0.c2)AND(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ALL COUNT(*) OVER ( PARTITION BY LTRIM(((((((((vt0.c1)AND(rt0.c2)))AND('1543569781')))OR(vt0.c0)))OR(rt0.c2)), ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2))), CASE (vt0.c0 IN ())  WHEN ((0.0)>=(vt0.c1)) THEN CAST(vt0.c0 AS TEXT) WHEN vt0.c0 COLLATE RTRIM THEN ((x'ccb9') BETWEEN (rt0.c2) AND (vt0.c2)) WHEN (rt0.c2 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) ELSE CASE rt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE rt0.c0 END END), ((((NULL)LIKE(rt0.c0)))>('-1251523126')), CAST(((((rt0.c1)AND(vt0.c1)))AND(vt0.c2)) AS INTEGER) FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT ((NULL) NOT BETWEEN (((vt0.c1)<=(vt0.c1))) AND ((vt0.c1 IN ()))) FROM vt0 WHERE ((((('bW-㎲')*(x'')))-(((((x'622f')AND(0.7354000538608403)))OR('1225562800'))))); -- 0ms;
SELECT ALL ((((rt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))<>(vt0.c2 COLLATE RTRIM)), (((+ (vt0.c1)))LIKE(((NULL)||(vt0.c2)))), load_extension(rt0.c2, vt0.c2) COLLATE BINARY FROM vt0;SELECT DISTINCT 'b.' FROM vt0, rt0 WHERE (((((695815591)/('<x囀9An'))) NOT BETWEEN (CASE x'9fb8bb04'  WHEN 0.5925851216824142 THEN '1240384648' ELSE 0x399e5934 END) AND (CASE WHEN '' THEN -1.524454037E9 END))) GROUP BY ((CAST(rt0.c1 AS INTEGER))/(vt0.c1 COLLATE NOCASE)), ((((rt0.c1)OR(vt0.c1))) NOT NULL), (~ (UNLIKELY(rt0.c0))), (((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((vt0.c2, rt0.c2, rt0.c0)) AND ((vt0.c2, rt0.c2, rt0.c2)))) IS TRUE), ((((((((((((rt0.c2 COLLATE NOCASE)OR((((((((('1329195625')OR(NULL)))OR(vt0.c2)))OR(rt0.c0)))AND(vt0.c2)))))OR(((rt0.c0)&(rt0.c1)))))AND((rt0.c2 IN (rt0.c1)))))AND(CAST(vt0.c0 AS BLOB))))AND(((vt0.c2)IS NOT(vt0.c2)))))AND((~ (rt0.c0)))) HAVING (~ (rt0.c1)) COLLATE NOCASE; -- 0ms;
SELECT ALL ((UPPER(vt0.c1))>=(((1.180296954E9) BETWEEN (rt0.c0) AND (vt0.c0)))) FROM vt0;SELECT (((rt0.c2)LIKE(rt0.c0)) IN ()) FROM rt0 WHERE (CAST(((x'') NOTNULL) AS BLOB)) GROUP BY ((rt0.c2)IS NOT(vt0.c2)) COLLATE RTRIM HAVING CAST((rt0.c1 IN ()) AS INTEGER);SELECT DISTINCT ((((vt0.c2)OR('jdPEvlZ+l')))+(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))) FROM vt0, rt0 WHERE (((((-2123281485) IS FALSE)) NOT BETWEEN (CAST(x'' AS REAL)) AND (CAST(0.6628890243301401 AS REAL)))) LIMIT -1088205320; -- 1ms;
SELECT DISTINCT ((((rt0.c0) IS FALSE))!=(rt0.c1 COLLATE BINARY)) FROM rt0 GROUP BY 0.487537363015487; -- 0ms;
SELECT ALL CASE WHEN CAST(vt0.c0 AS REAL) THEN (NOT (rt0.c0)) END, (NOT ((rt0.c2 IN ()))), AVG(MAX(COUNT(*))) FROM vt0 ORDER BY rt0.c2 ASC, ((((NULL)<=(vt0.c1)))%((rt0.c2 IN ())))  NULLS FIRST;SELECT ALL LOWER(((vt0.c1) IS FALSE)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt0 WHERE (((x'')|('-2050758532')) COLLATE RTRIM);SELECT COUNT(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END) OVER () FROM vt0, rt0 WHERE ((((((((((('칏U') NOT NULL))AND((('-22340725')OR(NULL)))))AND((('')<>('0.4773517816674073')))))OR(LIKELY(DISTINCT 'R[u'))))AND(((('-1468674566', 0.20878342397016936, '\r%', 'l+\U', '1473552695'))<=((x'', NULL, 0x6f7f6eca, x'', x'f2a3')))))); -- 0ms;
SELECT DISTINCT '0.487537363015487' FROM rt0; -- 0ms;
SELECT DISTINCT (((- (rt0.c1)))==(((vt0.c1)%(vt0.c1)))), (((rt0.c0 IN ()))>>((((vt0.c2))>((0.28768914893522))))), ((vt0.c2 COLLATE NOCASE)<=(CAST(rt0.c0 AS BLOB))) FROM vt0 ORDER BY (((- (rt0.c0)))LIKE((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) ASC  NULLS FIRST LIMIT 344673127 OFFSET -1555249097;SELECT DISTINCT AVG(((rt0.c0) NOT NULL)) OVER (), ((vt0.c2) NOT BETWEEN (CASE rt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) AND (TYPEOF(DISTINCT rt0.c1))), NULL COLLATE RTRIM FROM vt0, rt0 WHERE (((0.8139673983174671)>>('199933862')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT '-1909261576' FROM vt0 LIMIT 1578627541 OFFSET -1700790094; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS TEXT), CASE json_type('-0.0')  WHEN TOTAL(rt0.c1) THEN ((rt0.c2) NOTNULL) END, (- ((rt0.c1 IN ()))) FROM vt0 WHERE (((((')3G]')||(''))) NOT BETWEEN ('' COLLATE RTRIM) AND ((('Pr 쨶yDTbr')OR(x'')))));SELECT DISTINCT (((((((((((('-926348456')OR(vt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND((((rt0.c1, vt0.c2, rt0.c0))=((vt0.c2, vt0.c0, vt0.c1))))))OR((NOT (vt0.c0)))) FROM vt0 WHERE ((((((((((~ (NULL)))OR(((('')) NOT BETWEEN ((2.088902381E9)) AND ((x''))))))OR(json_array_length('쥬', NULL))))AND('0.2467553036731842' COLLATE NOCASE)))OR((((NULL))>((x''))))));SELECT CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c2))) THEN COUNT(*) ELSE AVG(rt0.c1) END FROM vt0 WHERE (CAST(CAST('' AS INTEGER) AS NUMERIC)) LIMIT 1543569781 OFFSET -748534628;SELECT AVG('1179096237') OVER () FROM rt0, vt0 WHERE (((x'')GLOB(-736382010 COLLATE BINARY))); -- 0ms;
SELECT NULLIF(CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, (~ (rt0.c0))) FROM vt0 ORDER BY (- (((vt0.c0)*(rt0.c2))))  NULLS LAST, ((((((rt0.c0) IS FALSE))OR(vt0.c0)))AND((- (vt0.c2)))) DESC, (((('&㐬[' IN ())))>=((vt0.c1 COLLATE RTRIM)));SELECT DISTINCT ((MIN(vt0.c1))GLOB(CASE x''  WHEN vt0.c0 THEN NULL END)) FROM vt0, rt0 ORDER BY ((((vt0.c2) IS TRUE)) IS TRUE), ((((SQLITE_COMPILEOPTION_USED(']'))AND((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((NULL))))))OR((((vt0.c2, NULL, vt0.c2))>=((vt0.c2, rt0.c0, rt0.c0))))); -- 0ms;
SELECT ALL MAX(((vt0.c0)&(vt0.c0))) FROM rt0, vt0 NOT INDEXED GROUP BY ((((rt0.c2)LIKE(vt0.c0)))&(CAST(rt0.c2 AS INTEGER))) HAVING rt0.c1; -- 0ms;
SELECT ((((TOTAL(0.6968823762794509))AND(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND(rt0.c2)) FROM rt0 WHERE (CASE WHEN CASE WHEN x'' THEN 'jY녕GeNM4p' ELSE NULL END THEN UPPER(0xfffffffff7a93166) ELSE ((x'')OR(0.4344829818625989)) END);SELECT DISTINCT (('#+d')>=(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c2)))) FROM rt0, vt0 WHERE (((TYPEOF(DISTINCT x''))LIKE((('-162667970')&(0X1d648bac))))); -- 0ms;
SELECT DISTINCT AVG('h㵠㽶2*㡱evg') OVER () FROM vt0 WHERE (CAST((('')/(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT CASE ((rt0.c0)/(vt0.c0))  WHEN ((vt0.c2)==(0.9499639483762422)) THEN (rt0.c1 IN (-1004841794)) END FROM vt0 WHERE ((((TYPEOF(x'e757'), (- ('0.07225623020310312')), CASE WHEN x'b0da' THEN NULL END, (((NULL, 0.11419121964393264, 0.5687066830592472))=((NULL, 0X3d958f2d, '0.07225623020310312'))), (('-608179123') NOT NULL)))!=((x'ae6c4df1' COLLATE NOCASE, (x'' IN ()), LOWER(NULL), ((((x'')AND(0.17606602178493513)))OR('-1868760357')), ((0.12892745414069717) IS FALSE)))));SELECT ALL ((((x'')OR(CAST(rt0.c1 AS TEXT))))AND(CAST(vt0.c0 AS TEXT))) FROM vt0, rt0 WHERE ((-972522336 IN ()) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (x'') AND (vt0.c2))) IS FALSE) FROM rt0, vt0 WHERE ((((((x'6ca3')) NOT BETWEEN ((x'')) AND ((x'')))) BETWEEN (((x'')||(1324686360))) AND (((0.5309887244865028) BETWEEN (1371113172) AND (NULL))))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, rt0 ORDER BY (x'' IN ())  NULLS FIRST; -- 0ms;
SELECT ALL TOTAL(LIKE(rt0.c0, vt0.c2, '0')) OVER () FROM vt0 WHERE (NULLIF(DISTINCT ((('0.21868592584135826')) NOT BETWEEN ((0Xffffffffd030d39d)) AND ((x''))), TRIM('')));SELECT DISTINCT CASE vt0.c1  WHEN CASE WHEN vt0.c1 THEN rt0.c2 ELSE NULL END THEN COUNT(*) END FROM vt0;SELECT DISTINCT ((((((rt0.c0)OR(rt0.c1)))AND(vt0.c1))) ISNULL), CUME_DIST() OVER ( ORDER BY CAST(((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)) AS BLOB) DESC, CAST((~ ('-149698390')) AS INTEGER)), (~ ((NOT (rt0.c1)))) FROM vt0 NOT INDEXED, rt0 WHERE (((((0xffffffff96d30178)|('')))/((('FALSE')<=('ceszpm'))))); -- 1ms;
SELECT ALL json_object(vt0.c1 COLLATE NOCASE, vt0.c1 COLLATE RTRIM) FROM rt0, vt0;SELECT ((SUM(vt0.c0))&(UNLIKELY(vt0.c0))) FROM vt0 WHERE (((((0.6177523316745434)AND((- (0.5514295877280839)))))OR(SQLITE_COMPILEOPTION_GET(NULL)))); -- 0ms;
SELECT ALL CASE (((vt0.c1))>((rt0.c2)))  WHEN x'd33f' THEN AVG(rt0.c2) ELSE (~ (vt0.c0)) END FROM rt0, vt0 WHERE ((('1569371800') NOT BETWEEN ((~ (-1.32675332E8))) AND (CAST('397347894' AS TEXT)))) GROUP BY CAST(CASE WHEN vt0.c0 THEN 858075087 ELSE rt0.c2 END AS NUMERIC); -- 0ms;
SELECT vt0.c2 FROM vt0 NOT INDEXED WHERE (CASE WHEN -1581122801 THEN 'dgp8< %~' END COLLATE NOCASE); -- 0ms;
SELECT ALL COUNT(0Xffffffff8f4c99f1) OVER () FROM rt0, vt0 WHERE (((x'')IS(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((((((((+ (vt0.c2)))OR((~ (rt0.c0)))))AND((rt0.c0 IN ()))))OR(CAST(vt0.c1 AS TEXT))))AND(((NULL)>>(rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((((((((((rt0.c2)AND(rt0.c2)))OR('')))AND(x'4c47')))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(COALESCE(vt0.c0, vt0.c2))))AND((NOT (rt0.c2)))), vt0.c0, ((((rt0.c0) NOT NULL)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CASE -1555249097  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)) FROM vt0;SELECT DISTINCT (((((1722341200 IN ()))OR(((x'')&(rt0.c0)))))OR(((rt0.c0)%(vt0.c0)))) FROM vt0 WHERE ((((-707831208 IN (x'', 0.2943845672980425))) NOT BETWEEN ((((0.18868918209025343, x'8609', '1080686522')) NOT BETWEEN ((0.5886063088736414, 0.19783172458305076, 0.4796483886131012)) AND ((x'', NULL, 0.5119498812794079)))) AND (((NULL) NOT BETWEEN (x'96e4') AND (-2.78244045E8)))));SELECT (load_extension(rt0.c1) IN ()) FROM rt0, vt0 LIMIT -638686957; -- 0ms;
SELECT DISTINCT vt0.c1 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) AND ((0X368da5eb))), (NOT (((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))), ((CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c2 END) BETWEEN (vt0.c1) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt0.c0)))) FROM vt0 WHERE (((1959054556 IN ()) IN ()));SELECT (- ((vt0.c0 IN (vt0.c0)))) FROM rt0, vt0 LIMIT -880775014 OFFSET -600340322; -- 0ms;
SELECT DISTINCT ((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt0.c0)<=(rt0.c2))) AND (((rt0.c2)<(vt0.c2)))) FROM rt0 NOT INDEXED;SELECT DISTINCT CAST(((((vt0.c2)OR(rt0.c0)))AND(rt0.c1)) AS NUMERIC), CAST(LOWER(vt0.c0) AS NUMERIC), COUNT(*) OVER () FROM rt0, vt0 GROUP BY (NOT (CAST(rt0.c1 AS NUMERIC))), '0.07225623020310312', ((((((vt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))OR((vt0.c1 IN ()))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))); -- 0ms;
SELECT (vt0.c2 IN (IFNULL(vt0.c1, rt0.c0))) FROM rt0 WHERE (((((x'') NOT BETWEEN (0.11175579482741982) AND ('-1571010261'))) BETWEEN ((('-802106467')>=(x''))) AND ('\rOev_sBn덃' COLLATE BINARY)));SELECT ((NOT (rt0.c2)) IN ()) FROM rt0, vt0 GROUP BY ((((vt0.c2) IS TRUE))||(((((((((0.0044723458366636715)AND(vt0.c1)))AND(rt0.c0)))OR(vt0.c1)))AND(rt0.c0)))), (((((vt0.c2, vt0.c1, vt0.c1))>=((vt0.c1, rt0.c1, rt0.c1))))<=(CAST(vt0.c1 AS NUMERIC))), CAST(SQLITE_COMPILEOPTION_USED(rt0.c1) AS REAL); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT MIN(((rt0.c1)AND(vt0.c2))) FROM vt0, rt0 ORDER BY CASE rt0.c2  WHEN ((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt0.c2)*(rt0.c2)) ELSE SQLITE_SOURCE_ID() END ASC; -- 0ms;
SELECT DISTINCT ((((((vt0.c2)>>('	-''}ge')))OR(CASE WHEN 0.08706593183352329 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)))OR(CASE WHEN vt0.c2 THEN rt0.c2 END)), CASE vt0.c1 COLLATE NOCASE  WHEN (((rt0.c0, rt0.c2, vt0.c0, rt0.c0, rt0.c0))<=((rt0.c1, vt0.c2, vt0.c1, rt0.c0, rt0.c0))) THEN (vt0.c0 IN ()) ELSE vt0.c1 END, (((- (0.1600862222269448))) IS FALSE) FROM rt0, vt0 WHERE (((('-1157306936' IN ())) ISNULL)); -- 0ms;
SELECT ALL ((rt0.c1 IN ()) IN ()) FROM rt0, vt0 WHERE (((((x'')&(0.709910515347674))) NOT NULL)) GROUP BY CAST((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT), ABS(((vt0.c0)/(x''))), (((((rt0.c2)LIKE(rt0.c2))))<((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0))))), NULLIF(((((rt0.c0)OR(vt0.c0)))AND(rt0.c2)), (x'862a' IN ())), (((x'')) BETWEEN ((vt0.c2)) AND ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(rt0.c0))))); -- 0ms;
SELECT ((((SUM(rt0.c1))AND(COUNT(*))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c2) BETWEEN (rt0.c0) AND (x''))  WHEN (NOT (vt0.c0)) THEN NULL WHEN vt0.c2 COLLATE RTRIM THEN MAX(vt0.c1) WHEN CASE rt0.c0  WHEN NULL THEN vt0.c0 END THEN TOTAL(vt0.c0) ELSE (NOT (rt0.c1)) END, ((((rt0.c2)IS(rt0.c2))) IS FALSE), (vt0.c1 COLLATE RTRIM IN ()), (((~ (vt0.c1)))||((~ (rt0.c0)))), x'318a' FROM rt0 WHERE (json_extract(ABS('0.9991669259369852'), CASE NULL  WHEN '691509775' THEN 0.09390242045504871 ELSE x'' END)) GROUP BY (((rt0.c0 IN ())) IS FALSE), ((rt0.c2 COLLATE NOCASE)<<((((rt0.c2, vt0.c0, rt0.c0))<((rt0.c2, vt0.c0, rt0.c1))))), CASE ((vt0.c0)%(vt0.c1))  WHEN (+ (rt0.c0)) THEN ((rt0.c1)*(rt0.c0)) WHEN CAST(rt0.c0 AS NUMERIC) THEN (NULL IN ()) WHEN LIKE(vt0.c1, rt0.c0, '{') THEN CASE rt0.c1  WHEN vt0.c2 THEN rt0.c2 END WHEN (vt0.c2 IN ()) THEN vt0.c1 WHEN ((rt0.c2)&(vt0.c1)) THEN (((vt0.c2))>=((vt0.c1))) WHEN ((rt0.c1) ISNULL) THEN (- (rt0.c1)) WHEN ((((rt0.c2)AND(rt0.c1)))OR('T㣸')) THEN CASE WHEN vt0.c1 THEN NULL END ELSE CASE WHEN vt0.c2 THEN vt0.c0 WHEN '-1665506834' THEN vt0.c2 WHEN rt0.c1 THEN vt0.c2 END END, CASE WHEN '0.019414045349262832' THEN ((vt0.c1)==(rt0.c2)) END, x'' HAVING ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) NOTNULL);SELECT DISTINCT ((~ (rt0.c1)) IN ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) FROM vt0, rt0 LIMIT -519107790 OFFSET 323242523; -- 0ms;
SELECT DISTINCT 0.7558946227922275 FROM rt0, vt0 ORDER BY '1179096237'; -- 0ms;
SELECT ALL ((vt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM, ((- (vt0.c0)) IN ()), ((((vt0.c0) BETWEEN (vt0.c2) AND (-889191199)))<=(((rt0.c1)||(vt0.c0)))) FROM vt0;SELECT DISTINCT ((json_type(rt0.c2))!=(((rt0.c1) BETWEEN (0.3544409861265172) AND (vt0.c0)))), SUBSTR(COUNT(vt0.c0), ((vt0.c1) IS FALSE)), ((COUNT(*)) ISNULL) FROM vt0, rt0; -- 0ms;
SELECT (MAX(rt0.c1) IN ()), ((('\nJ]' IN ()))||('3-(Wr8[')), CAST(vt0.c2 COLLATE BINARY AS BLOB) FROM vt0, rt0 WHERE ((((((0.07498132896381171)) NOT BETWEEN ((NULL)) AND ((0.4450280107229909))))*((('112080338') NOTNULL)))) LIMIT -972522336 OFFSET 659071802; -- 0ms;
