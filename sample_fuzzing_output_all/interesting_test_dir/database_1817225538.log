-- Time: 2024/06/07 09:15:07
-- Database: database38
-- Database version: 3.40.0
-- seed value: 1817225538
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, c2 UNINDEXED); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2, c0) VALUES (x'', 0.5018386080907076, x''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=740140790,6');\n; -- 1ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0xffffffff83e5e372, '609508679', ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
PRAGMA main.default_cache_size = 604966159; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c2) VALUES (x'', NULL); -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', 7.4014079E8); -- 1ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((((((48575380)AND(vt0.c2)))OR(NULL)))!=(LIKELY(DISTINCT vt0.c0))) FROM vt0 WHERE ((NOT ('D.8O'))) GROUP BY CASE WHEN (('') BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c2) ISNULL) END, (((vt0.c2 IN ())) NOTNULL), CAST(((vt0.c0)<>(vt0.c1)) AS BLOB); -- 0ms;
UPDATE OR IGNORE vt0 SET c2=NULL WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR ABORT INTO vt0(c1, c2) VALUES ('5115156555432436861', -1255297735), ('609508679', 0x122ecf5e), (x'', 0.2531902824604634); -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 1ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
CREATE TEMP TABLE t0 (c0 INT ); -- 0ms;
UPDATE OR REPLACE vt0 SET (c2)=('604966159') WHERE (NOT (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))); -- 0ms;
INSERT OR REPLACE INTO vt0(c2, c1, c0) VALUES (NULL, 754917485, 3.0505763E8), (x'', 0x2c1da6f6, '305057630'), ('CtN', x'', x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c41; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c2) VALUES (503726588, x'4f79'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.7641375424316025, 0.12439970032057901, x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (x'', x''), (NULL, '48575380'), (-1537265420, '740140790'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2, c1) VALUES (7.54917485E8, NULL, 0.832660126702468), ('', NULL, 'K\6\(ヴ{S'), (5.03726588E8, '-1686840482', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES ('-2082086030', '740140790'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1686840482'); -- 0ms;
INSERT OR ABORT INTO vt0(c0, c2) VALUES ('', '554973362'); -- 0ms;
ANALYZE; -- 1ms;
CREATE UNIQUE INDEX i11 ON t0((- (((c41) NOT BETWEEN (c41) AND (c41))))) WHERE json_insert((+ (c41)), ((c41) ISNULL), CAST(c41 AS BLOB), ((c41)AND(c41)), (((c41, c41, c41))>=((c41, c41, '609508679')))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 2ms;
END; -- 0ms;
PRAGMA cache_size = -2086016566347699340; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE vt0 SET c1='#t', c2=x'', c1='-1034109747'; -- 1ms;
REINDEX BINARY; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (0.7380686883289085, 0.0626033803972097), (-2.08208603E9, 554973362), ('Z', 'u/Dp'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''), (TRIM(DISTINCT (('0.12439970032057901')*(-1965902992)))), (''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.8383790284812362, 0.16049758148081505); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
UPDATE OR FAIL t0 SET c41=0.12439970032057901; -- 0ms;
UPDATE OR IGNORE t0 SET (c41)=('0.0626033803972097'); -- 0ms;
UPDATE OR IGNORE t0 SET c41=-436878247; -- 0ms;
UPDATE OR IGNORE t0 SET (c41)=(x'') WHERE (((+ (t0.c41))) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (-436878247), (0.055692958795502734), (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (0X36dd91a3, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c41) VALUES ('#t'), ('0.8383790284812362'), (x''); -- 0ms;
INSERT OR ABORT INTO t0(c41) VALUES ('1163361189'); -- 0ms;
INSERT OR IGNORE INTO t0(c41) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0x240f0d0f); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (0x589554a0); -- 1ms;
REINDEX i11; -- 0ms;
REINDEX i11; -- 0ms;
REINDEX i11; -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA application_id = -9043916804936639930; -- 2ms;
REINDEX  vt0; -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1486181536);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1539626365,8');\n; -- 0ms;
UPDATE vt0 SET c2=x'f6e5', c0='0.7641375424316025'; -- 2ms;
INSERT OR REPLACE INTO t0 VALUES ('5115156555432436861'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('-1542372302'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1, c2) VALUES (0x56af3b86, -1460621422, 0X6a41b6cb); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0x9fae4f7); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES (NULL, x''); -- 0ms;
INSERT OR FAIL INTO t0(c41) VALUES (NULL), (NULL), (x''); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL), ('dP'), ('&|'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CAST((((v0.c0))<=((vt0.c1))) AS NUMERIC) FROM v0, t0;SELECT DISTINCT CASE NULL  WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c2)) THEN (('1726982887')*(vt0.c2)) WHEN (v0.c0 IN ()) THEN 167437559 WHEN ((vt0.c2) NOT NULL) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END FROM v0;SELECT GROUP_CONCAT(CAST(vt0.c1 AS INTEGER)) OVER () FROM vt0, t0 WHERE (CASE WHEN ((((x'')OR(0.2531902824604634)))OR(x'')) THEN LIKELIHOOD(0x3c9adc40, 0.6671514908770095) ELSE CASE WHEN 0.6787121323140317 THEN -1686840482 ELSE 0.5018386080907076 END END) LIMIT -1460621422 OFFSET -1255297735; -- 0ms;
SELECT DISTINCT CASE (vt0.c2 IN (vt0.c1, vt0.c2))  WHEN ((((NULL)AND(0.6787121323140317)))AND(vt0.c1)) THEN SUM(t0.c41) ELSE x'4008c051' END, ((vt0.c2)=(vt0.c0)) COLLATE BINARY, (((AVG(vt0.c2), ROUND(vt0.c0, t0.c41), ((t0.c41)<=(vt0.c1))))<>((0.20457880309134235, CAST(vt0.c1 AS NUMERIC), '1016781888'))) FROM vt0, t0, v0 GROUP BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (('1189832396') IS FALSE) ELSE vt0.c1 END, v0.c0, CAST(((vt0.c1) IS TRUE) AS REAL) HAVING 0x3c9adc40 ORDER BY TYPEOF(t0.c41); -- 1ms;
SELECT DISTINCT TOTAL(CAST(vt0.c1 AS BLOB)) OVER () FROM v0 GROUP BY CAST(0.055692958795502734 COLLATE BINARY AS TEXT) HAVING (+ (t0.c41 COLLATE RTRIM));SELECT 0X64de630b FROM t0, vt0, v0 WHERE ((((('-1034109747' IN ())))=((((NULL)/('336470509')))))) ORDER BY CAST(((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)) AS NUMERIC)  NULLS FIRST; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c1)AND(t0.c41))) OVER ( ORDER BY ((((((((((vt0.c2) BETWEEN (vt0.c1) AND (t0.c41)))OR(vt0.c0 COLLATE BINARY)))AND((v0.c0 IN ()))))AND(TRIM(DISTINCT vt0.c2))))AND((+ (vt0.c1)))) DESC, (('u/dp') ISNULL)) FROM t0, v0, vt0 WHERE ((((((+ ('-994930449')))AND(((x'27e6')GLOB('')))))OR(('0.7380686883289085' IN (NULL))))) ORDER BY CAST(vt0.c2 AS REAL) COLLATE NOCASE; -- 0ms;
SELECT TYPEOF(vt0.c2) FROM v0, vt0 WHERE ('D.8O'); -- 1ms;
SELECT DISTINCT (((vt0.c1)IS NOT(v0.c0)) IN ()), (((t0.c41)) NOT BETWEEN (((vt0.c0 IN (vt0.c1)))) AND ((CASE WHEN v0.c0 THEN t0.c41 ELSE vt0.c2 END))), (((vt0.c1) NOTNULL) IN ()) FROM t0, v0;SELECT ALL ((CAST(vt0.c0 AS NUMERIC))+(CAST(vt0.c1 AS BLOB))) FROM v0, t0, vt0 INDEXED BY i11 WHERE (CASE WHEN (('1990413502')IS('-555274646')) THEN '-1974807179' COLLATE RTRIM WHEN CAST(0xffffffff83fc1aac AS NUMERIC) THEN 'O꾒Q' WHEN CAST(NULL AS BLOB) THEN NULLIF(x'', NULL) ELSE (('1454324614')+(x'0629')) END);SELECT DISTINCT ((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((-1093388140))), vt0.c0 COLLATE RTRIM, (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c2)))))!=((ABS(DISTINCT vt0.c1), SUM(vt0.c2), ((vt0.c2)IS NOT(t0.c41))))), TOTAL(CAST(v0.c0 AS BLOB)), CASE WHEN vt0.c2 THEN t0.c41 ELSE t0.c41 END COLLATE BINARY FROM v0, vt0;SELECT DISTINCT IFNULL(((vt0.c2) BETWEEN (t0.c41) AND (v0.c0)), ((t0.c41)<(vt0.c0))) FROM v0, t0, vt0; -- 1ms;
SELECT ALL CAST((('Zphr') BETWEEN (vt0.c1) AND (vt0.c2)) AS BLOB), ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((v0.c0 IN ()))))OR(MAX(v0.c0))), ((((((((TRIM(v0.c0))AND(vt0.c1)))OR(NULL)))AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((-1.460621422E9 IN ()))) FROM vt0 NOT INDEXED;SELECT DISTINCT UPPER(DISTINCT CASE WHEN t0.c41 THEN vt0.c0 END) FROM t0;SELECT ALL ((COUNT(*)) NOT BETWEEN (((x'') BETWEEN (t0.c41) AND (v0.c0))) AND ((((vt0.c2))=((v0.c0))))), ((LENGTH(vt0.c1)) NOT BETWEEN ((((v0.c0))<((vt0.c2)))) AND (CASE t0.c41  WHEN vt0.c0 THEN vt0.c2 WHEN v0.c0 THEN t0.c41 WHEN vt0.c1 THEN vt0.c0 ELSE NULL END)), ((AVG(vt0.c1)) IS TRUE) FROM t0, v0 GROUP BY CASE ((t0.c41) ISNULL)  WHEN t0.c41 THEN CASE WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END END;SELECT DISTINCT ((t0.c41)LIKE(t0.c41)) COLLATE NOCASE FROM t0, v0, vt0 WHERE ((~ ((((x'e06d')) BETWEEN ((0.7072550167359202)) AND (('	{Zh텽zc')))))); -- 0ms;
SELECT DISTINCT TOTAL(vt0.c0) OVER () FROM t0, vt0, v0; -- 0ms;
SELECT ((CAST(vt0.c0 AS BLOB))==(CASE '740140790'  WHEN vt0.c1 THEN t0.c41 END)), ((vt0.c1 COLLATE NOCASE) BETWEEN (MAX(x'')) AND (0.7380686883289085)), ((((((((json_array_length(t0.c41))AND(((vt0.c1)LIKE(vt0.c2)))))OR(t0.c41 COLLATE BINARY)))OR((vt0.c0 IN (vt0.c2, t0.c41)))))AND('qT>\rqC')) FROM vt0, t0, v0 WHERE ((+ (NULLIF(DISTINCT 1.189832396E9, NULL)))) GROUP BY (UNLIKELY(DISTINCT t0.c41) IN (((0.08138961193800887) IS TRUE), ((t0.c41)/(vt0.c2)))); -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE RTRIM)>>(x'')) FROM t0, v0 LIMIT -310840741; -- 0ms;
SELECT ALL ((((v0.c0)-(vt0.c2))) NOTNULL) FROM t0 GROUP BY vt0.c2 HAVING ((((v0.c0) IS TRUE)) ISNULL);SELECT DISTINCT x'24ad' FROM t0, vt0 WHERE (((CASE WHEN NULL THEN NULL ELSE 0.018375389072272208 END) ISNULL)); -- 0ms;
SELECT CAST(CAST('1135312772' AS REAL) AS NUMERIC) FROM v0, t0 WHERE (((CASE ''  WHEN -1304524133 THEN x'' END) IS FALSE)) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END)<=(((x'')>(t0.c41)))), ('1832926617' IN ());SELECT DISTINCT 0xffffffffae930637 COLLATE NOCASE FROM v0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c2)) NOT BETWEEN ((- (vt0.c0))) AND (((t0.c41) NOT BETWEEN (0.49322505011015505) AND (vt0.c0)))), NULL, (((t0.c41 IN (vt0.c0, t0.c41, vt0.c0)))<=((t0.c41 IN ()))) FROM t0;SELECT DISTINCT TOTAL(((vt0.c1)/(vt0.c2))) FROM vt0, t0 LIMIT 1454324614; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))AND(v0.c0)))AND(vt0.c2)))>=(((vt0.c2) NOT BETWEEN ('1016781888') AND (t0.c41)))) FROM v0, t0;SELECT ALL vt0.c0 FROM t0;SELECT DISTINCT SUM(((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt0.c2))), SUM(TOTAL((NOT (vt0.c2)))), ((((CAST(v0.c0 AS TEXT))OR(vt0.c2)))AND(((v0.c0) IS TRUE))) FROM v0;SELECT ALL (CAST(vt0.c0 AS INTEGER) IN ()) FROM v0 WHERE (6.04966159E8); -- 1ms;
SELECT ALL MIN((('-1542372302') IS TRUE)) FROM v0, vt0; -- 1ms;
SELECT CASE WHEN CASE WHEN vt0.c0 THEN t0.c41 END THEN NULL ELSE ((((x'9834259e')AND(t0.c41)))AND(v0.c0)) END FROM vt0, v0, t0; -- 0ms;
SELECT (((((((v0.c0)AND(t0.c41)))OR(vt0.c2))))>=((NULL))), SUM(((vt0.c0)%(t0.c41)) COLLATE RTRIM), ((vt0.c0)-('MNGtU懵')) FROM v0, vt0;SELECT ALL CAST(((t0.c41)||(vt0.c0)) AS TEXT) FROM v0, vt0;SELECT DISTINCT t0.c41 FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c1)&(vt0.c0))) COLLATE NOCASE FROM t0, vt0, v0; -- 1ms;
SELECT (TOTAL(vt0.c1) IN ()) FROM t0 ORDER BY (((NOT (t0.c41))) IS TRUE) DESC; -- 0ms;
SELECT (vt0.c2 IN ()) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL CAST(t0.c41 AS INTEGER) FROM vt0 GROUP BY ((((v0.c0 IN (v0.c0, vt0.c2))))<=(((('|挋')<=(vt0.c1))))) LIMIT 1291351296;SELECT DISTINCT CAST(((vt0.c2)IS(vt0.c2)) AS TEXT) FROM t0, vt0 WHERE (((((CAST(0Xffffffffffffffff AS REAL))AND(((((x'b5c5')AND(x'')))AND(0X6e561c3d)))))AND('0.6787121323140317'))); -- 0ms;
SELECT ALL CASE vt0.c0  WHEN ((vt0.c1) IS FALSE) THEN -1115531961 WHEN vt0.c1 THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE t0.c41 END WHEN vt0.c2 COLLATE RTRIM THEN 'x%W' END FROM t0, v0, vt0; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT v0.c0))GLOB(TOTAL(t0.c41))), AVG((((vt0.c2))>=((vt0.c0)))), 0.38176053977103974 FROM v0;SELECT DISTINCT ((((t0.c41)<<(vt0.c1)))GLOB(CAST(vt0.c0 AS REAL))) FROM vt0, t0, v0 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT (((((((('1258956078')AND((~ (v0.c0)))))OR(vt0.c1)))AND(CAST(vt0.c1 AS BLOB))))OR(x'')) FROM t0;SELECT ALL (t0.c41 IN ()) FROM vt0, t0 WHERE (((x'a253') ISNULL)); -- 0ms;
SELECT DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE NOCASE FROM vt0, v0 WHERE (CASE WHEN (('') BETWEEN ('xF\rS<,') AND (x'')) THEN TRIM(1524683084, 0.5412910277277738) WHEN 6.04966159E8 COLLATE BINARY THEN CASE 'mj&[]'  WHEN 1.990413502E9 THEN 0X46fcafc9310fa47d ELSE 0.9489133438874441 END WHEN ((NULL) ISNULL) THEN ((x'af0e')=('붏|ytZ')) END) LIMIT 1954624004; -- 0ms;
SELECT DISTINCT 0.16756008794323263 FROM t0; -- 0ms;
SELECT DISTINCT (+ (v0.c0)) FROM t0, v0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM v0, t0, vt0 WHERE (((x'') NOT BETWEEN ('') AND (((x'')IS(0x211438b2))))) LIMIT -555274646 OFFSET -1286663277; -- 3ms;
SELECT ALL ((((vt0.c1)-(vt0.c2))) BETWEEN (CAST(t0.c41 AS INTEGER)) AND (x'e1ad')) FROM t0 RIGHT OUTER JOIN vt0 ON CAST(((((((((vt0.c1)OR(t0.c41)))OR(vt0.c1)))OR(vt0.c1)))AND(t0.c41)) AS TEXT) RIGHT OUTER JOIN v0 ON CAST('-511545984' COLLATE NOCASE AS NUMERIC); -- 0ms;
SELECT DISTINCT (t0.c41 IN ()) FROM t0 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT ((((((t0.c41)%(vt0.c0)))AND(CASE WHEN NULL THEN t0.c41 END)))AND(((1819561486) NOT BETWEEN (v0.c0) AND (vt0.c1)))) FROM v0 WHERE (CAST(0.6630113275191922 AS INTEGER));SELECT DISTINCT (((v0.c0 IN ()))-(((v0.c0) NOT BETWEEN (vt0.c2) AND (t0.c41)))), (NOT (NULL)), ((CASE WHEN vt0.c2 THEN t0.c41 WHEN -1908205818 THEN t0.c41 WHEN vt0.c2 THEN t0.c41 END)<=(((vt0.c1) NOTNULL))), (((((((((('')OR(t0.c41)))OR(t0.c41)))AND(v0.c0)))OR(vt0.c2))) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (((((-136481921)OR(vt0.c1)))OR(0.185012282312502)))), (~ ((((vt0.c1)) NOT BETWEEN ((v0.c0)) AND ((t0.c41))))) FROM t0, v0 WHERE ((((('') IS FALSE)) NOT BETWEEN (UPPER(0X64de630b)) AND (((-1153226774)&('-875440976')))));SELECT ALL (- (vt0.c2 COLLATE NOCASE)) FROM v0 LEFT OUTER JOIN t0 ON vt0.c1 WHERE (CASE WHEN NULL COLLATE BINARY THEN ((('-1703492361', '-1034109747', x''))<=((NULL, '1454324614', -1458550475))) END);SELECT ALL NTILE(NULL) OVER ( ORDER BY ((CAST(t0.c41 AS BLOB))<(CAST(v0.c0 AS REAL))) ASC  NULLS FIRST, ((vt0.c1 COLLATE RTRIM) BETWEEN ((vt0.c2 IN ())) AND (LIKELIHOOD(vt0.c1, 0.40692822009176266)))) FROM v0, t0, vt0 WHERE (((((0.7664573910843218) IS TRUE)) NOT BETWEEN ((((('1539626365')OR('2143445054')))AND('l'))) AND ('0.0626033803972097'))) ORDER BY ((vt0.c0) NOT NULL) DESC, ((t0.c41) NOT NULL) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT -1193263477, vt0.c2, TOTAL(((vt0.c0)%(vt0.c1))) OVER () FROM t0, vt0 WHERE ((('&l') IS FALSE)) ORDER BY (((((v0.c0 IN ()))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE 0.6460234163073256 END)))OR('|FVB7'))  NULLS FIRST, ((((v0.c0)%(vt0.c1))) IS TRUE) ASC;SELECT ALL ((((0.9507421398274266)OR((NOT (t0.c41)))))AND(v0.c0 COLLATE BINARY)), v0.c0, ((v0.c0 COLLATE NOCASE) BETWEEN (CASE t0.c41  WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND (((((t0.c41)OR(vt0.c0)))AND(v0.c0)))) FROM vt0 WHERE (NULL);SELECT ALL COUNT(*), v0.c0, (((~ (vt0.c2))) NOTNULL) FROM vt0, t0;SELECT ALL vt0.c0 FROM t0, vt0, v0; -- 0ms;
SELECT DISTINCT ((((((((IFNULL(DISTINCT vt0.c2, v0.c0))AND(CAST(vt0.c1 AS INTEGER))))OR(CAST(vt0.c1 AS REAL))))OR(((0.8907524133676734)>=(vt0.c1)))))OR((v0.c0 IN ()))), CASE (('878791814') IS TRUE)  WHEN ((0.20795149936559065)==(vt0.c1)) THEN v0.c0 COLLATE NOCASE WHEN (NOT (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 END WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c2)IS NOT(v0.c0)) END, 0.2141586260891638 FROM t0, v0 WHERE (('1317477332' IN ()));SELECT DISTINCT (LOWER(DISTINCT vt0.c1) IN (TYPEOF(vt0.c1), v0.c0)) FROM vt0, t0 LEFT OUTER JOIN v0 ON CAST(((v0.c0)>>(1558295620)) AS TEXT) ORDER BY (((vt0.c2))==((vt0.c2))) COLLATE RTRIM ASC  NULLS LAST, ((UNICODE(vt0.c0))+(CAST(v0.c0 AS TEXT))); -- 0ms;
SELECT DISTINCT 0.7978928522708864 FROM vt0, t0 WHERE (CASE NULL  WHEN 0.6427512531704325 THEN NULL WHEN '754917485' THEN x'' WHEN NULL THEN '1015994398' ELSE -1649854315 END COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT DISTINCT v0.c0 FROM v0, t0 WHERE ((+ ((- (0.6561980404592398))))) ORDER BY ((((((vt0.c1)AND(v0.c0)))AND(t0.c41))) NOT BETWEEN (json_insert('FE{', vt0.c2, vt0.c2)) AND (CAST(vt0.c1 AS NUMERIC)));SELECT ALL CASE WHEN CASE WHEN NULL THEN t0.c41 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END THEN (- (vt0.c0)) WHEN ((((v0.c0)OR(vt0.c2)))AND(vt0.c1)) THEN ((v0.c0) NOT BETWEEN (NULL) AND (t0.c41)) WHEN highlight(vt0.c1, vt0.c2, v0.c0, t0.c41) THEN CAST(v0.c0 AS NUMERIC) WHEN ((((v0.c0)AND(vt0.c1)))AND(v0.c0)) THEN CAST(t0.c41 AS NUMERIC) WHEN ((t0.c41) ISNULL) THEN json_quote(vt0.c2) WHEN ((((((((vt0.c1)AND('G~')))AND(x'')))AND(vt0.c0)))AND('')) THEN ((t0.c41)GLOB(vt0.c2)) WHEN MAX(v0.c0) THEN x'' END, NULL, SUM(((t0.c41)<=(v0.c0))) FROM vt0 WHERE (CASE WHEN CASE '-1908205818'  WHEN 'xF\rS<,' THEN x'' ELSE -1654270323 END THEN (878791814 IN (NULL, NULL)) WHEN ((0.8909553050402326)||(x'ba5e')) THEN CASE WHEN 2042926491 THEN NULL END WHEN (- (0x189aea53)) THEN ('' IN (NULL, 0.8597464780659666)) END) LIMIT 1171126270;SELECT DISTINCT LAG(NULL, (+ ((v0.c0 IN ()))), CAST(t0.c41 AS NUMERIC)) OVER (), t0.c41, FIRST_VALUE((((vt0.c0, vt0.c2, vt0.c2, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c0)*(vt0.c1)), ((((((((t0.c41)AND(v0.c0)))AND(vt0.c1)))OR(t0.c41)))AND(v0.c0)), ((v0.c0) BETWEEN (vt0.c2) AND (v0.c0)), ((v0.c0)==(vt0.c1)), v0.c0 COLLATE BINARY)) AND (((~ (vt0.c2)), vt0.c1 COLLATE BINARY, CAST(t0.c41 AS REAL), vt0.c0 COLLATE RTRIM, ((t0.c41) BETWEEN (vt0.c0) AND (t0.c41)))))) OVER ( RANGE BETWEEN TRIM(x'') PRECEDING AND '-1275808690' FOLLOWING EXCLUDE TIES) FROM vt0, t0, v0 WHERE (((('1090981739') NOT NULL) IN ()));SELECT DISTINCT v0.c0, (CASE v0.c0  WHEN vt0.c0 THEN 0.7328751488505535 WHEN NULL THEN '' WHEN vt0.c1 THEN v0.c0 END IN (((vt0.c2) BETWEEN (v0.c0) AND (vt0.c2)))), RANK() OVER (), ((vt0.c2 COLLATE NOCASE) NOTNULL), json_patch(0x72478c2c, (- (v0.c0))) FROM vt0, v0, t0 WHERE (CASE WHEN ('-511545984' IN (0.9675456660532192)) THEN CASE -1366096329  WHEN 0.16049758148081505 THEN x'' ELSE '1481453139' END WHEN ((((NULL)OR('-249556295')))AND(x'117fca68')) THEN 0.017903982514487327 WHEN CAST('\n' AS REAL) THEN NULL ELSE 'O ?a5a囇I' COLLATE NOCASE END); -- 1ms;
SELECT DISTINCT (((t0.c41 IN ()))||((((v0.c0))=((t0.c41))))) FROM v0 GROUP BY COALESCE((vt0.c2 IN (t0.c41)), CASE v0.c0  WHEN x'5108' THEN vt0.c0 ELSE vt0.c0 END, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((t0.c41) NOT BETWEEN ('1454324614') AND (vt0.c0))) HAVING (t0.c41 IN ());SELECT ALL (vt0.c2 IN (((v0.c0) ISNULL), ((vt0.c2) ISNULL))) FROM vt0, v0 WHERE (((NULL)>('878791814')) COLLATE BINARY); -- 0ms;
SELECT ((((((((CASE vt0.c2  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL ELSE vt0.c2 END)OR(MAX(vt0.c1))))OR(NULLIF(t0.c41, t0.c41))))AND(((NULL) ISNULL))))AND(((v0.c0) IS FALSE))), CASE CAST(v0.c0 AS INTEGER)  WHEN CASE WHEN 1.524683084E9 THEN t0.c41 WHEN v0.c0 THEN t0.c41 WHEN vt0.c0 THEN t0.c41 ELSE NULL END THEN 0.8383790284812362 WHEN -1908205818 THEN vt0.c1 COLLATE BINARY WHEN AVG(v0.c0) THEN CAST('\n셂' AS INTEGER) END, (~ ((t0.c41 IN ()))) FROM v0, vt0, t0 WHERE ((((((((((+ ('1524683084')))OR(CASE WHEN NULL THEN -1642863430 ELSE 0xfffffffff5fda809 END)))OR(((x'')>=(NULL)))))AND((((x''))==((NULL))))))AND('' COLLATE NOCASE))) GROUP BY NULL; -- 0ms;
SELECT ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c2 COLLATE RTRIM)) FROM v0;SELECT ((vt0.c1)<(vt0.c1)) COLLATE RTRIM FROM v0 WHERE ('2028254105');SELECT ALL CAST(LIKELY(v0.c0) AS NUMERIC) FROM v0 WHERE ((((NULL, ')H?羄', 1.990413502E9)) NOT BETWEEN (((((-98362416)) BETWEEN ((NULL)) AND ((NULL))), ((0.9527292803513663) BETWEEN ('') AND (0x106eac42)), ((1917291564)*('68580016')))) AND ((NULL, (('') BETWEEN ('-1034109747') AND ('9223372036854775807')), CAST('-1229259796' AS NUMERIC))))); -- 0ms;
SELECT DISTINCT ('VJq䬭曌' IN ()) FROM t0, v0, vt0; -- 0ms;
SELECT DISTINCT STRFTIME(((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c2)))OR(t0.c41)))OR(v0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)), ((((((((((((vt0.c2)OR(vt0.c1)))OR(t0.c41)))OR(t0.c41)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) FROM v0 RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (vt0.c1 IN (vt0.c0, t0.c41)), json_array_length(vt0.c0)) INNER JOIN t0 ON ((((t0.c41)IS(vt0.c1))) NOT NULL) WHERE (((x'')>(CASE WHEN '6)' THEN NULL WHEN 711135866 THEN 'B2\Eu6' WHEN x'91ab' THEN 0.2599698683680277 ELSE -1227665842 END)));SELECT ALL (((t0.c41)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((0.185012282312502) BETWEEN (v0.c0) AND (vt0.c1))))) FROM t0, vt0, v0; -- 1ms;
SELECT ((vt0.c1)+('EzQ,~L?')) COLLATE RTRIM FROM vt0, t0 WHERE (((CASE WHEN '-1965902992' THEN 1.291351296E9 WHEN x'ef63' THEN '-1382705806' WHEN x'' THEN '' END) NOT BETWEEN ((NULL IN ())) AND (TRIM('1016781888', 0Xffffffff8a013efc)))); -- 0ms;
SELECT (((vt0.c2)) BETWEEN ((COALESCE(424696177, vt0.c0))) AND (('-1415812709'))) FROM t0, v0, vt0 WHERE (-92345829); -- 0ms;
SELECT ALL (((((((t0.c41))<((t0.c41))))AND(json_array_length(v0.c0, v0.c0))))OR(t0.c41)) FROM vt0, t0 WHERE (CASE WHEN (x'' IN ()) THEN ((NULL)IS NOT(x'')) WHEN ((((((((x'f728')OR('-1537265420')))AND(x'')))OR('')))AND(0Xffffffffba94c2d7)) THEN '-1286663277' COLLATE NOCASE WHEN ((x'')>(NULL)) THEN x'd756' END);SELECT DISTINCT GROUP_CONCAT(NULL) FROM v0 WHERE (CAST((('0.16756008794323263')!=('1558295620')) AS REAL)); -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) COLLATE BINARY, ((v0.c0 IN ()) IN ()), json_patch((~ (vt0.c0)), ((vt0.c0)<(vt0.c0))), ((((((((((x'') ISNULL))AND(((vt0.c2)<<(vt0.c0)))))AND(((t0.c41) NOT BETWEEN (v0.c0) AND (vt0.c2)))))OR(vt0.c0 COLLATE BINARY)))AND(((NULL) NOTNULL))), ((0x2f3ab344)OR(((vt0.c0) IS FALSE))), (~ (((vt0.c0) NOT BETWEEN ('QWsq') AND (v0.c0)))), (~ (vt0.c0)) FROM vt0, t0, v0 LIMIT -1229259796 OFFSET -2121867971; -- 0ms;
SELECT DISTINCT NULL FROM vt0, t0, v0 WHERE ((NOT (((0xffffffff83fc1aac)>=(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c2)LIKE(t0.c41))) NOT BETWEEN (UPPER(v0.c0)) AND (t0.c41 COLLATE BINARY)), (((((t0.c41) IS TRUE), (((vt0.c0, vt0.c1, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c41, t0.c41, vt0.c2, v0.c0)) AND ((t0.c41, vt0.c1, v0.c0, vt0.c1, vt0.c2))), (NOT (v0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.46473741315399664))>((vt0.c2 COLLATE BINARY, ((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c1)))OR(v0.c0)))AND(0.9545841459777202)), t0.c41 COLLATE NOCASE, 0Xffffffffc4fbb186, ((((vt0.c2)OR(v0.c0)))AND(vt0.c0))))), SUM((vt0.c2 IN ())) FILTER(WHERE CASE vt0.c1 COLLATE NOCASE  WHEN vt0.c1 COLLATE NOCASE THEN (+ ('FALSE')) ELSE (+ (vt0.c0)) END) OVER () FROM vt0 WHERE (((((TRIM(DISTINCT x'', 0.49133326942509903))OR((('2093307075') NOT BETWEEN (0x9e086d9) AND (x'')))))AND(((('1916500828', 1.832926617E9, NULL))<>((NULL, x'', '-990137978'))))));SELECT ALL CAST(CASE WHEN vt0.c2 THEN vt0.c1 ELSE t0.c41 END AS INTEGER) FROM v0, vt0;SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')))AND((NOT (NULL)))) FROM t0, vt0 WHERE (((((x'')>=('aU)b'))) IS TRUE)) GROUP BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE BINARY) AND (t0.c41)) HAVING (((NULL)%(vt0.c0)) IN ()); -- 0ms;
SELECT ((CASE v0.c0  WHEN vt0.c2 THEN vt0.c0 END)==((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c41))))) FROM v0, t0 WHERE (((((NULL)AND(x''))) NOT BETWEEN (((0.26583548354933717) NOT BETWEEN (']|3ny*햞') AND (NULL))) AND ((('-894075022')<(1.189832396E9)))));SELECT DISTINCT ((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 END)IS NOT(COUNT(*))), ((t0.c41)GLOB(0.22316124158579909)), (((((v0.c0)OR(vt0.c2)))OR(t0.c41)) IN (((NULL)<=(vt0.c1)))) FROM t0, vt0 ORDER BY ((((((((((vt0.c2)OR(x'')))AND(vt0.c0)))AND(t0.c41)))OR(vt0.c1))) BETWEEN (TYPEOF(DISTINCT x'')) AND (v0.c0));SELECT AVG(vt0.c2) OVER (), ((vt0.c0)+(vt0.c2)) COLLATE BINARY COLLATE NOCASE, (IFNULL(DISTINCT t0.c41, vt0.c2) IN ((- (vt0.c2)))) FROM t0, vt0, v0 WHERE (CAST(NULL AS BLOB)) ORDER BY CASE WHEN ((vt0.c2)IS('-879473875')) THEN ABS(vt0.c1) WHEN CAST(t0.c41 AS NUMERIC) THEN ((vt0.c0)IS(vt0.c0)) WHEN (+ (x'')) THEN CASE t0.c41  WHEN vt0.c2 THEN vt0.c2 END ELSE ((vt0.c1)||(vt0.c1)) END; -- 1ms;
SELECT DISTINCT LIKE(t0.c41, t0.c41) COLLATE BINARY, (((TOTAL(vt0.c2), vt0.c1, ((((vt0.c0)AND(434068547)))AND(vt0.c0))))!=((((vt0.c1)AND('0.8907524133676734')), x'eaa6', vt0.c2))), CUME_DIST() OVER ( ORDER BY (vt0.c2 IN ((((vt0.c2)) BETWEEN ((vt0.c2)) AND (('{vwCa'))))) ASC), (+ (t0.c41 COLLATE NOCASE)), ((((vt0.c0)|(v0.c0)))=((+ (vt0.c1)))) FROM v0, vt0, t0; -- 0ms;
SELECT CAST(((((((((((((vt0.c0)OR(t0.c41)))OR(vt0.c2)))OR(vt0.c2)))AND(v0.c0)))AND(vt0.c2)))AND(vt0.c1)) AS BLOB) FROM v0, vt0, t0 WHERE ((((0.37547156539455395)) BETWEEN (((0.12414834343150372 IN (0.38176053977103974, x'')))) AND ((('' IN ()))))) ORDER BY ((SQLITE_COMPILEOPTION_GET(v0.c0))LIKE((t0.c41 IN (t0.c41))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT TOTAL(MIN((((vt0.c2, vt0.c1, vt0.c1, v0.c0, vt0.c1)) BETWEEN ((t0.c41, vt0.c0, vt0.c2, v0.c0, v0.c0)) AND ((vt0.c2, t0.c41, t0.c41, vt0.c2, v0.c0))))), ((((v0.c0) IS FALSE)) BETWEEN (CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 END) AND (t0.c41)), ((((vt0.c0, v0.c0, 1016781888))>=((t0.c41, 0x12540393, vt0.c2))) IN ()) FROM v0, vt0, t0;SELECT ALL GROUP_CONCAT((vt0.c1 IN ())) FROM vt0, t0, v0 NOT INDEXED LIMIT -1034109747; -- 0ms;
SELECT ALL LEAD(((CAST(x'' AS NUMERIC))<<(vt0.c0 COLLATE BINARY)), (+ (0.4092687254650701)), vt0.c0) OVER () FROM vt0 WHERE ((((NOT (NULL))) BETWEEN (((x'') NOT BETWEEN (x'') AND (NULL))) AND ((('-249556295')>=(1.851137085E9))))) GROUP BY CASE WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) ELSE ((t0.c41) IS TRUE) END HAVING ((NULL)>((v0.c0 IN ())));SELECT DISTINCT MIN(MIN(v0.c0 COLLATE BINARY)), (((vt0.c0) ISNULL) IN ()), t0.c41 FROM t0, v0, vt0 WHERE (json_object((NULL IN ('l', NULL)), 0x42e174bd, (('')||(x'')), ((NULL) IS TRUE))) GROUP BY (((((-0.0)) BETWEEN ((0.24905028699092835)) AND ((vt0.c2))))IS NOT((~ (t0.c41)))) HAVING (((((((((((v0.c0))<((t0.c41))))OR(NULL)))OR(LIKELY(vt0.c0))))OR(CASE t0.c41  WHEN v0.c0 THEN 0.3230763349401178 END)))OR((('980252288')>>(v0.c0))));SELECT NULL FROM v0 GROUP BY NULLIF(vt0.c2, ((v0.c0)IS(vt0.c2))) HAVING 0.4674912933895994 ORDER BY (((((v0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((x'a8cd', v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c1))))OR(((((((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c2)))AND('812446176')))AND(t0.c41)))OR(vt0.c1)))) DESC  NULLS FIRST;SELECT DISTINCT ((vt0.c1 IN ()) IN ()) FROM vt0, v0 INNER JOIN t0 ON v0.c0 WHERE (UNLIKELY((x'' IN ()))); -- 0ms;
SELECT ((t0.c41)GLOB(((((t0.c41)AND(vt0.c2)))AND(vt0.c2)))) FROM v0, vt0;SELECT DISTINCT CAST(v0.c0 AS INTEGER) FROM vt0, v0; -- 0ms;
SELECT ALL TOTAL(CAST(vt0.c1 AS INTEGER)) FROM v0;SELECT DISTINCT (((((v0.c0, vt0.c2, vt0.c2))==((t0.c41, vt0.c2, 'ZcJm*'))))||(((((((((((((vt0.c2)AND(v0.c0)))OR(vt0.c2)))OR(t0.c41)))AND(v0.c0)))OR(vt0.c2)))AND(NULL)))), LAG('{VWCA' COLLATE RTRIM, (((vt0.c2)) NOT BETWEEN ((x'')) AND ((vt0.c2 COLLATE RTRIM))), (+ (vt0.c2)) COLLATE RTRIM) OVER (), COUNT(*) FROM vt0 WHERE ((((((((NULL)) NOT BETWEEN ((NULL)) AND ((x''))))AND(((0X4cf87500)+('BtJ3핵w볍')))))OR((~ ('-92345829'))))) UNION SELECT ALL ((COUNT(*)) IS FALSE), NTH_VALUE(CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c41 ELSE vt0.c0 END COLLATE RTRIM, (((((vt0.c0))<=(('x%W')))) NOT BETWEEN (((vt0.c2) IS TRUE)) AND ((((x''))=((vt0.c1)))))) OVER (), (vt0.c1 IN ()) COLLATE BINARY FROM vt0, v0, t0 WHERE ((((x'')) NOT BETWEEN ((((NULL)GLOB(NULL)))) AND (((('') NOT NULL)))));SELECT DISTINCT ((((CAST(t0.c41 AS TEXT))AND(((v0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))AND((vt0.c0 IN (v0.c0, vt0.c2)))) FROM vt0, v0, t0; -- 1ms;
SELECT DISTINCT ((((t0.c41) IS TRUE)) BETWEEN ((((0.6383538626869542)) NOT BETWEEN ((0.10098142898470075)) AND ((vt0.c0)))) AND (LIKELIHOOD(v0.c0, 0.1769744883880464))), TOTAL(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) OVER (), (CASE WHEN x'' THEN vt0.c2 ELSE '' END IN ((+ (v0.c0)))), ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) NOT BETWEEN (((((vt0.c0)OR(t0.c41)))AND(vt0.c2))) AND (((((v0.c0)AND(vt0.c2)))OR(v0.c0)))), SUM(x'') FROM vt0;SELECT vt0.c2 FROM vt0, v0, t0; -- 0ms;
SELECT DISTINCT AVG((NULL IN ())) FROM v0, vt0 GROUP BY CASE WHEN (~ (vt0.c1)) THEN vt0.c0 END; -- 0ms;
SELECT DISTINCT SUM((NOT (vt0.c2))) FROM vt0, t0 WHERE ((CASE 0x36dd91a3  WHEN '-1498072470' THEN x'' END IN ())); -- 1ms;
SELECT DISTINCT ((((((vt0.c1) NOTNULL))AND(((vt0.c1)>(vt0.c1)))))OR(HEX(DISTINCT vt0.c1))) FROM v0, vt0, t0 ORDER BY RTRIM(vt0.c2)  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (NULL))) NOT BETWEEN ((t0.c41 IN ())) AND ((((vt0.c0, v0.c0, x'b36d'))=((vt0.c0, t0.c41, t0.c41)))))  NULLS FIRST; -- 0ms;
SELECT ALL GROUP_CONCAT(NULL) OVER ( ORDER BY (((((vt0.c1)<>(vt0.c0))))>((((vt0.c1) BETWEEN (vt0.c2) AND (t0.c41))))), ((((((v0.c0)OR(vt0.c2)))AND(vt0.c1))) NOT NULL)  NULLS LAST) FROM vt0, t0 WHERE ((x'7fc4' IN ()));SELECT CASE t0.c41  WHEN v0.c0 THEN NULL WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((((vt0.c2) BETWEEN (t0.c41) AND (vt0.c2)))) AND ((vt0.c1 COLLATE BINARY))), ((COUNT(*)) NOTNULL) FROM vt0, v0 WHERE (((('0.20457880309134235', -550825552, NULL)) NOT BETWEEN ((x'', 0.8909553050402326, NULL)) AND ((x'', 0xffffffffb745634b, x''))) COLLATE NOCASE);SELECT CASE UNICODE(vt0.c1)  WHEN ((t0.c41) ISNULL) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE NULL END FROM v0, t0;SELECT CASE (t0.c41 IN (x'', vt0.c1))  WHEN (v0.c0 IN ()) THEN CASE v0.c0  WHEN vt0.c2 THEN v0.c0 WHEN vt0.c2 THEN v0.c0 WHEN x'' THEN vt0.c1 END WHEN ((1851137085)-(t0.c41)) THEN (vt0.c0 IN ()) WHEN ((vt0.c2) NOTNULL) THEN '-1286663277' ELSE ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END FROM t0 WHERE (NULL);SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c1 THEN t0.c41 WHEN t0.c41 THEN v0.c0 WHEN x'6859' THEN vt0.c1 END) NOT BETWEEN (((578660458) ISNULL)) AND (CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 END)), GROUP_CONCAT(((vt0.c0)IS(vt0.c2))) OVER (), 0.13869120748498576 COLLATE RTRIM FROM vt0 ORDER BY (((NOT (vt0.c1)))OR((- (t0.c41)))) ASC  NULLS FIRST, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) IN ()) DESC LIMIT -1 OFFSET -1190877336;SELECT ALL (~ ((NULL IN ()))) FROM v0 WHERE ('1819561486') GROUP BY CASE v0.c0  WHEN (v0.c0 IN (vt0.c0, vt0.c2)) THEN ((v0.c0)|(vt0.c0)) ELSE ((-1460621422)|(0.437190404081365)) END HAVING ((NULL) IS TRUE);SELECT ALL ((((((t0.c41)AND(vt0.c1)))AND(v0.c0)))<<((((vt0.c2))>((vt0.c0))))) FROM vt0 WHERE ((+ ((x'' IN ('-136481921')))));SELECT DISTINCT DATETIME(((((t0.c41)OR(vt0.c2)))AND(vt0.c2)), vt0.c2, vt0.c1 COLLATE NOCASE), ((LTRIM(vt0.c2))|((+ (vt0.c2)))), (((((vt0.c0 IN ()))OR((v0.c0 IN ()))))OR(CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 END)) FROM vt0, v0;SELECT DISTINCT ((((((((COUNT(*))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c41 ELSE t0.c41 END)))OR(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)*(vt0.c2)))))OR(((vt0.c0) IS TRUE))), (((vt0.c0 IN ()))&(((t0.c41) BETWEEN (vt0.c1) AND (v0.c0)))), HEX(DISTINCT NULLIF(DISTINCT vt0.c2, t0.c41)) FROM vt0 WHERE (((((-718611970 COLLATE BINARY)OR(0.49133326942509903)))OR(((NULL) NOT BETWEEN (NULL) AND (0X50165858))))) GROUP BY ((((((((vt0.c1)AND((~ (t0.c41)))))AND(CAST(v0.c0 AS INTEGER))))OR((vt0.c2 IN (x'')))))AND((- (vt0.c1))));SELECT ((0.33117165479075816)==(vt0.c2)) COLLATE BINARY FROM t0;SELECT vt0.c1 FROM vt0, v0 WHERE (((ABS('Zk'))<(((((x'')AND(NULL)))OR('-1193263477'))))); -- 0ms;
SELECT DISTINCT SUM(((v0.c0) BETWEEN (vt0.c2) AND (v0.c0))) FROM v0, t0, vt0 LIMIT 1163361189; -- 0ms;
SELECT DISTINCT (((((((((vt0.c1 IN (v0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(((t0.c41)=(vt0.c2)))))OR(SUM('-194913333'))))AND(((((((((v0.c0)OR(vt0.c2)))AND(t0.c41)))AND(vt0.c1)))OR(v0.c0)))) FROM v0, t0 WHERE (NULL);SELECT DISTINCT LAST_VALUE((((+ (v0.c0)))*(((vt0.c2)<(''))))) OVER () FROM vt0, v0, t0 WHERE (1045205917); -- 0ms;
SELECT ((((((v0.c0)<>(vt0.c0)))OR(x'1253')))OR(json_remove(t0.c41, NULL, vt0.c2, v0.c0))) FROM v0, vt0, t0 WHERE ((~ (TRIM(DISTINCT '攃k.&EX')))); -- 0ms;
SELECT DISTINCT (((((vt0.c0))==((t0.c41)))) BETWEEN ((+ (vt0.c2))) AND (((t0.c41)GLOB(vt0.c2)))), 1114828673, x'' FROM vt0 WHERE (CAST(((('-333876581')) BETWEEN ((0X7fc2603e)) AND ((0.09012170888101012))) AS TEXT)) GROUP BY ABS(DISTINCT v0.c0 COLLATE NOCASE), ((((((t0.c41) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND('-1908205818')))OR(((v0.c0) IS TRUE))), (((vt0.c1) NOT NULL) IN (((v0.c0) IS TRUE)));SELECT DISTINCT (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), HEX(DISTINCT t0.c41), (((vt0.c0, v0.c0, v0.c0))>=((vt0.c0, t0.c41, t0.c41)))))!=((ABS(t0.c41), t0.c41 COLLATE BINARY, LIKELIHOOD(vt0.c1, 0.08047874272868139)))) FROM vt0, t0, v0 WHERE (((('-92345829')||('')) IN ())); -- 0ms;
SELECT (~ (0xfffffffff7d81549)) FROM t0, v0, vt0 WHERE (((CASE NULL  WHEN NULL THEN 130405517 END) BETWEEN (((x'')|(x''))) AND (NULL))); -- 0ms;
SELECT DISTINCT '0.7380686883289085' FROM v0, vt0; -- 0ms;
SELECT ALL ((CASE WHEN t0.c41 THEN t0.c41 END)>>(((v0.c0)IS NOT(v0.c0)))) FROM v0, vt0, t0; -- 0ms;
SELECT ALL ((vt0.c2)&(t0.c41)) COLLATE RTRIM FROM v0, vt0, t0 WHERE (((((((((((((x'' COLLATE BINARY)AND((- ('9ly1EꞐꊏ')))))AND(((NULL) ISNULL))))AND((- (0.08585175946722157)))))AND((((x'8a44962fd434', -1.686840482E9, x'49876023'))>=((799976021, '	L', 1215957156))))))OR(TOTAL_CHANGES())))OR((~ (1189832396))))); -- 0ms;
SELECT DISTINCT ((((0.6942909334536105) BETWEEN (vt0.c0) AND (vt0.c2))) BETWEEN (COUNT(*)) AND (((((((((v0.c0)OR(t0.c41)))OR(v0.c0)))AND(0.18774188495230193)))AND(vt0.c0)))) FROM v0, vt0, t0 WHERE (CASE (((0.3013290970546716))==(('')))  WHEN (-1382705806 IN (0.41407922903435923)) THEN (((((((('1015994398')AND(0.2053133270732156)))AND(1990413502)))OR(x'')))OR(0.3859904945287713)) ELSE (('P[帞u jlF')LIKE(x'')) END); -- 0ms;
SELECT (((vt0.c0)AND(t0.c41)) IN ((((vt0.c1)) BETWEEN ((t0.c41)) AND ((v0.c0))))) FROM vt0, v0, t0; -- 0ms;
SELECT DISTINCT vt0.c0, (~ (json(vt0.c2))), (+ (((((t0.c41)OR(vt0.c1)))AND(vt0.c1)))) FROM t0;SELECT DISTINCT ((vt0.c2 IN (v0.c0, vt0.c0)) IN ()), 0.6478631603543339, (~ (0Xffffffffaf792168)) FROM v0, vt0, t0 WHERE ((((((NULL)) NOT BETWEEN ((x'')) AND ((1.191493007E9)))) ISNULL)); -- 0ms;
SELECT DISTINCT MAX((~ (vt0.c2))), CASE WHEN ((vt0.c2)LIKE(vt0.c0)) THEN vt0.c0 ELSE t0.c41 END, ((v0.c0) IS FALSE) COLLATE NOCASE FROM vt0, v0, t0; -- 0ms;
SELECT DISTINCT ((((((((((((((((v0.c0)AND(509697529)))AND(v0.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(((t0.c41)LIKE(v0.c0)))))AND((((t0.c41)) NOT BETWEEN ((t0.c41)) AND ((NULL))))))OR(COUNT(vt0.c1))))OR(((((vt0.c2)AND(t0.c41)))AND(vt0.c2)))) FROM t0 WHERE (((((((0.18239420344367008)OR(x'efa3')))AND(NULL)))+(IFNULL(0.5056904484530769, x'0e69'))));SELECT DISTINCT NTILE((NOT (vt0.c1 COLLATE BINARY))) OVER (), ((vt0.c2 COLLATE NOCASE) NOT BETWEEN (CHANGES()) AND ((((vt0.c1)) BETWEEN ((v0.c0)) AND ((t0.c41))))), '2042926491' FROM vt0, v0, t0;SELECT (~ (ABS(DISTINCT vt0.c1))) FROM v0, vt0, t0 WHERE (((((('-2020833676')OR('-1092726642')))OR(x'')) IN (((NULL) NOT NULL)))); -- 0ms;
SELECT vt0.c2 FROM t0 GROUP BY (+ (vt0.c2)) COLLATE BINARY HAVING ((((t0.c41) NOT BETWEEN (vt0.c1) AND (t0.c41)))-(((((vt0.c2)OR(0.8793791308044423)))OR(vt0.c2))));SELECT CAST(((((t0.c41)AND(vt0.c1)))AND(v0.c0)) AS REAL) FROM t0, v0 WHERE (LENGTH(((0.4514002668623929) NOT BETWEEN (x'') AND (0x784e55d7))));SELECT DISTINCT ((t0.c41) BETWEEN (((v0.c0) BETWEEN (t0.c41) AND (vt0.c2))) AND ((v0.c0 IN (v0.c0)))) FROM v0 WHERE (((CASE ''  WHEN x'' THEN '0.49322505011015505' WHEN x'' THEN 'Ty ?' WHEN 0.5777290384526322 THEN x'fafd' ELSE 849880418 END) NOT BETWEEN (x'') AND (CASE x'00dd'  WHEN '|hp0-v' THEN '0.5412910277277738' ELSE 0.36538814146726517 END)));SELECT DISTINCT ((((((((vt0.c2)OR(t0.c41)))AND(vt0.c2)))OR(GROUP_CONCAT(t0.c41))))OR((- (vt0.c1)))) FROM t0 WHERE (NULL);SELECT DISTINCT CASE ((t0.c41)!=(v0.c0))  WHEN vt0.c0 THEN ((t0.c41) IS FALSE) END FROM v0 GROUP BY (((vt0.c0 IN ()))<(CASE WHEN NULL THEN v0.c0 END)) HAVING GROUP_CONCAT(((t0.c41) NOTNULL));SELECT DISTINCT ((((CAST(vt0.c2 AS INTEGER))AND(((v0.c0)AND(vt0.c0)))))OR(((((((((vt0.c1)OR(vt0.c2)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))), (t0.c41 IN ()) COLLATE NOCASE, (((v0.c0)&(vt0.c2)) IN ()), (((t0.c41)) BETWEEN ((v0.c0)) AND ((((vt0.c2)AND(t0.c41))))), COUNT(*) FROM v0;SELECT DISTINCT (((vt0.c2 IN ())) NOT NULL) FROM t0, vt0, v0 LIMIT -1286663277 OFFSET -1857417286; -- 0ms;
SELECT DISTINCT LAG(COALESCE(DISTINCT COALESCE(t0.c41, t0.c41), (((t0.c41)) NOT BETWEEN ((t0.c41)) AND ((NULL)))), ((((t0.c41) ISNULL)) NOTNULL), ((((t0.c41)OR((~ (t0.c41)))))OR(((t0.c41)=(t0.c41))))) OVER () FROM t0 GROUP BY ((vt0.c0)%(((vt0.c0)==(vt0.c1)))), (((((- (v0.c0)))OR(CAST(vt0.c2 AS INTEGER))))OR(((vt0.c2) ISNULL))), (((x'd9b5' IN (vt0.c0)))<=(LIKELIHOOD(DISTINCT vt0.c1, 0.37209086807920355)));SELECT DISTINCT GROUP_CONCAT(NULLIF(vt0.c1, vt0.c2)), (+ ((+ (vt0.c1)))), ((((vt0.c1)IS(vt0.c2)))>>(vt0.c0)) FROM vt0, v0 WHERE (((((('-555274646')=(NULL))))>((CAST(x'd9003cea' AS TEXT))))); -- 1ms;
SELECT DISTINCT IFNULL(((((((((v0.c0)AND(vt0.c2)))AND(vt0.c0)))AND(t0.c41)))AND(vt0.c1)), x'') FROM v0, t0 WHERE (CAST(-1240097075 AS NUMERIC) COLLATE NOCASE) ORDER BY load_extension((NOT (vt0.c1))) DESC;SELECT DISTINCT (((vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) AND ((CAST(t0.c41 AS REAL)))) FROM t0, v0 GROUP BY ((((((NULL)AND(vt0.c1)))OR(vt0.c1)))%(v0.c0 COLLATE RTRIM)) HAVING CAST(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN t0.c41 THEN vt0.c1 WHEN vt0.c2 THEN v0.c0 END AS BLOB);SELECT vt0.c2 FROM vt0, t0, v0; -- 0ms;
SELECT DISTINCT (~ (((vt0.c2) IS TRUE))) FROM vt0 WHERE (((CAST(NULL AS TEXT)) IS FALSE)) INTERSECT SELECT DISTINCT ((((((t0.c41)OR(vt0.c2)))OR(v0.c0)))+((+ (t0.c41)))) FROM v0, vt0 WHERE (x'');SELECT ALL CASE WHEN CASE WHEN v0.c0 THEN vt0.c1 ELSE t0.c41 END THEN ((((((((t0.c41)OR(vt0.c1)))AND(vt0.c2)))AND(v0.c0)))OR('')) ELSE ((t0.c41) NOT BETWEEN (vt0.c1) AND (t0.c41)) END FROM t0, vt0, v0; -- 1ms;
SELECT DISTINCT 0.7534093499313255 FROM vt0; -- 0ms;
SELECT ((json_patch(vt0.c2, v0.c0)) BETWEEN ((('2143445054')==(vt0.c0))) AND (vt0.c0)) FROM vt0, v0;SELECT ALL ((((vt0.c0) NOT NULL))/(HEX(DISTINCT vt0.c2))) FROM vt0 WHERE (((((NULL)<('1454324614'))) ISNULL)); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) BETWEEN (t0.c41) AND (vt0.c0))) FILTER(WHERE 1.819561486E9 COLLATE BINARY) OVER () FROM t0, vt0, v0 WHERE (((json_patch(x'', NULL))-(((((((((-1532955199)AND(NULL)))OR(NULL)))OR(0.5312890954691027)))OR('-1435874341')))));SELECT DISTINCT ((v0.c0 IN (1851137085)) IN ()) FROM vt0, v0 WHERE (CAST(CASE WHEN NULL THEN 0.13667385725282644 WHEN -1.153226774E9 THEN x'' WHEN -595494765 THEN x'' ELSE '-555274646' END AS TEXT)); -- 0ms;
SELECT (((vt0.c0, vt0.c2, vt0.c1)) NOT BETWEEN ((MAX(vt0.c1), (v0.c0 IN ()), LIKELY(vt0.c0))) AND ((((((t0.c41)OR(t0.c41)))AND(vt0.c0)), CAST(v0.c0 AS TEXT), TOTAL(v0.c0)))) FROM vt0, v0, t0 WHERE (UPPER(DISTINCT (((((((('0.5018386080907076')OR(0.832660126702468)))AND(-9223372036854775808)))AND(x'adef')))AND(x'')))) LIMIT 1258250692; -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY (((vt0.c0 IN ())) BETWEEN (CASE vt0.c2  WHEN v0.c0 THEN t0.c41 WHEN vt0.c0 THEN NULL WHEN 0.46989899174602634 THEN vt0.c2 END) AND (((vt0.c0) IS TRUE)))  NULLS FIRST) FROM v0, vt0;SELECT DISTINCT '424696177' FROM t0, vt0, v0 WHERE (((CAST(NULL AS NUMERIC))*(((1955027368)/(x''))))); -- 0ms;
SELECT x'' FROM vt0, v0, t0 WHERE ((((4.12805715E8)) NOT BETWEEN (((x'' IN ()))) AND ((0.2599698683680277 COLLATE RTRIM)))) ORDER BY t0.c41 COLLATE RTRIM COLLATE NOCASE ASC, GLOB(CAST(v0.c0 AS BLOB), LOWER(DISTINCT vt0.c1)) ASC  NULLS LAST; -- 0ms;
SELECT ((((((((((t0.c41)>>(vt0.c2)))OR(((vt0.c1)/(v0.c0)))))AND(339897069)))OR(((vt0.c2)<=(vt0.c0)))))AND(INSTR(vt0.c2, v0.c0))) FROM t0, vt0, v0 WHERE (CAST(CASE WHEN NULL THEN x'' END AS TEXT)) LIMIT -1756012416 OFFSET -1223714214; -- 0ms;
SELECT (((((((((v0.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)) IN ()) FROM vt0 WHERE (CAST(('878791814' IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT UNICODE(((v0.c0)/(v0.c0))) FROM vt0, t0 WHERE ((((((((NULL)OR(x'')))OR(NULL)), ((((NULL)OR('')))OR(0.05507928270256479)), NULL COLLATE BINARY))>=(((- (NULL)), ('503726588' IN (0.33138713256245644)), ((NULL) IS FALSE))))) ORDER BY ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))*(((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c41))));SELECT DISTINCT COUNT(TYPEOF(DISTINCT t0.c41)) OVER () FROM vt0, v0 WHERE ((((CASE 1533102982  WHEN 0.9675456660532192 THEN NULL END))<=((((1165255117)&(NULL)))))) LIMIT 604966159 OFFSET 2028254105;SELECT ALL ((((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))AND(t0.c41)))AND(vt0.c2)))-((((vt0.c1, vt0.c1, v0.c0)) BETWEEN ((t0.c41, vt0.c0, v0.c0)) AND ((vt0.c2, t0.c41, vt0.c0))))) FROM v0, vt0, t0; -- 1ms;
SELECT ALL (((vt0.c0) IS FALSE) IN (((t0.c41)LIKE(vt0.c0)))), CASE rtreenode(x'', vt0.c0)  WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c0)) END, COUNT(((t0.c41)<=(vt0.c2))) OVER () FROM vt0 WHERE (((((NULL) NOT NULL)) BETWEEN ((NULL IN ('2143445054'))) AND (412805715 COLLATE BINARY))) GROUP BY CAST((- (vt0.c1)) AS NUMERIC) HAVING x'2806';SELECT DISTINCT (((- (vt0.c2)))LIKE(((vt0.c1)!=(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR((t0.c41 IN (vt0.c1, vt0.c0)))) FROM t0, vt0 WHERE (x'bbd4') ORDER BY ((NULL) IS TRUE); -- 0ms;
SELECT DISTINCT CASE ((vt0.c1)*(vt0.c2))  WHEN ((vt0.c2) IS FALSE) THEN COUNT(vt0.c2) END, CASE WHEN (+ (vt0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((t0.c41) IS TRUE) END, ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))) AND (((((((((t0.c41)OR(t0.c41)))AND(t0.c41)))OR(t0.c41)))OR(vt0.c2)))) FROM vt0, v0, t0 WHERE ((((0.16113299272639636)) BETWEEN ((NULL COLLATE BINARY)) AND (((x'db74' IN ()))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS('\n셂')))LIKE(CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c2 END)) FROM t0;SELECT DISTINCT ((((IFNULL(vt0.c0, '>]NqK'))OR(((vt0.c1)/(vt0.c1)))))AND(COUNT(vt0.c2))), COUNT(*), t0.c41 FROM t0, v0;SELECT ALL (((vt0.c2)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND ((((vt0.c1) IS FALSE)))) FROM t0, v0, vt0; -- 0ms;
SELECT DISTINCT (TOTAL(vt0.c1) IN ((v0.c0 IN (vt0.c1, v0.c0)))) FROM t0 INDEXED BY i11, v0;SELECT ((GROUP_CONCAT(vt0.c2)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((t0.c41)LIKE(vt0.c1)))) FROM vt0, t0 LIMIT 1729718915 OFFSET -411957058; -- 0ms;
SELECT DISTINCT (+ (vt0.c1)), (+ (CASE WHEN 0.3812554193479307 THEN vt0.c0 WHEN NULL THEN t0.c41 WHEN vt0.c0 THEN t0.c41 WHEN 0.49133326942509903 THEN '503726588' WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)), (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE NOCASE FROM vt0, v0 WHERE (((((LIKELIHOOD('1558295620', 0.34386261796152473))OR('-496513143')))OR(((x'1627') ISNULL))));SELECT DISTINCT ((CAST(t0.c41 AS NUMERIC))>(((vt0.c2)<=(v0.c0)))) FROM v0 WHERE ((((NOT (0.21667927782261642))) BETWEEN (((0.6615100695326802) IS TRUE)) AND ((((('-310840741')OR(x'0e00')))OR(0.09012170888101012))))) GROUP BY ((((((((NULL)AND(vt0.c1 COLLATE RTRIM)))AND((((vt0.c0))>=((vt0.c2))))))AND(((vt0.c2) NOT NULL))))AND(vt0.c1 COLLATE RTRIM)) HAVING ((COUNT(*)) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((NOT (v0.c0))));SELECT CAST(vt0.c0 AS NUMERIC) FROM t0, v0, vt0; -- 0ms;
SELECT ALL (((((t0.c41 IN (vt0.c2)))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))AND(CASE WHEN vt0.c1 THEN 'K2y	g' ELSE vt0.c1 END)) FROM vt0, v0, t0 WHERE ((((('7f') NOT NULL))|(CASE 0.4191061061184431  WHEN 'DZ࿲%jY>d' THEN x'' WHEN '.駑b+/g~' THEN 0.6524478773384275 WHEN '-310840741' THEN '0.3013290970546716' WHEN 0.40829604103343686 THEN NULL WHEN NULL THEN x'6e04' ELSE x'' END))); -- 1ms;
SELECT DISTINCT ((((((((v0.c0)OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((v0.c0) IS TRUE))))OR(TOTAL(vt0.c0))))OR(((NULL) NOT NULL))) FROM t0, vt0, v0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c1 AS TEXT) IN ()), (- (CAST(t0.c41 AS INTEGER))), '-684192889' FROM vt0, v0;SELECT ALL (((- (t0.c41)))/(((vt0.c1) NOTNULL))) FROM t0, v0 WHERE ((((((NULL, '*', ''))=((x'', 1158114920, 'I)Kc'))))LIKE(965273679)));SELECT DISTINCT vt0.c2, GROUP_CONCAT((+ (NULL))), t0.c41 FROM vt0, v0 WHERE (CASE WHEN ('-280757190' IN ()) THEN UNLIKELY(DISTINCT NULL) END);SELECT (((t0.c41 IN ())) NOT BETWEEN (0.7260275341539424) AND ((- (vt0.c2)))) FROM t0, v0, vt0; -- 0ms;
SELECT DISTINCT ((((NULL)OR(((vt0.c0)=(v0.c0)))))AND(0.495045495184414)), 0.7783610755286151, (((((1761677531))>=((t0.c41))))IS(((vt0.c1)<(0.001163703749198941)))) FROM vt0, t0, v0 WHERE (CASE WHEN (('')-(0X6fb1348e)) THEN (- (0.6787121323140317)) ELSE CAST('1987401415' AS INTEGER) END); -- 0ms;
SELECT DISTINCT LAG(((((((((((t0.c41)OR('y}')))OR(t0.c41)))AND(vt0.c1)))AND(vt0.c0)))IS NOT((((t0.c41)) BETWEEN ((x'')) AND ((vt0.c2))))), vt0.c2, NULL) OVER (), ((((vt0.c1)IS(vt0.c2))) BETWEEN (((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (COUNT(vt0.c0))), x'' FROM vt0, t0;SELECT ALL ((json_insert(-1.227665842E9, vt0.c2, v0.c0)) ISNULL), json_array_length(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))), MAX((v0.c0 IN ())), UPPER(((v0.c0)GLOB(t0.c41))), ((((x'4051') ISNULL))LIKE(COUNT(*))) FROM v0, vt0 WHERE (((((((NULL)LIKE(0X65b39900)))AND(((((((((x'4b98f8ed')OR(NULL)))OR(x'')))AND('305057630')))OR(x'')))))OR(('336470509' IN ('0b')))));SELECT DISTINCT ((((((((CAST(vt0.c1 AS BLOB))AND(vt0.c1)))OR(((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) FROM v0 WHERE ((((((((((((((x'' IN ()))AND((('l') IS TRUE))))AND(CASE WHEN 0.9889196849658676 THEN x'' WHEN '1016781888' THEN NULL WHEN 0.6327945987219038 THEN 'i)kc' END)))AND(CAST(0.31061909274628197 AS INTEGER))))AND(CASE -83667634  WHEN '-990137978' THEN '1558295620' WHEN 0Xffffffffffde1386 THEN x'aaec' WHEN 0.9829714123244685 THEN 0.30136931611493234 END)))AND(0.6427512531704325 COLLATE RTRIM)))OR(-167925751)));SELECT DISTINCT 0.6908990145392565 FROM vt0, t0, v0 WHERE ((((NULL)/(x'eabe')) IN ())) LIMIT -1649854315 OFFSET -1542372302; -- 0ms;
SELECT ALL (((((((((NOT (v0.c0)))AND(TOTAL(0.47394967833239465))))OR(COUNT(v0.c0))))AND(x'')))AND((((t0.c41)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))) FROM t0;SELECT ALL (((v0.c0)) BETWEEN (((v0.c0 IN (v0.c0, v0.c0)))) AND (((vt0.c2 IN ())))), ((((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN t0.c41 THEN vt0.c2 END)OR((((t0.c41, NULL, v0.c0))<>((vt0.c1, t0.c41, vt0.c1))))))AND(AVG(vt0.c2))), t0.c41 FROM v0, vt0 WHERE (((((0.4900986781343556)*(NULL)))&((+ ('! ')))));SELECT ALL FIRST_VALUE(CAST(((v0.c0) IS FALSE) AS REAL)) OVER ( ORDER BY TYPEOF(((t0.c41)<=(vt0.c2)))), (COUNT(vt0.c2) IN ()), CASE WHEN vt0.c0 THEN vt0.c1 WHEN t0.c41 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END COLLATE NOCASE, (((((('')>>('x%W')))AND(((((((((vt0.c1)OR(vt0.c0)))OR(t0.c41)))AND(v0.c0)))AND(vt0.c0)))))OR(((v0.c0) NOT BETWEEN (t0.c41) AND (v0.c0)))), CAST(CASE WHEN v0.c0 THEN vt0.c2 ELSE vt0.c2 END AS NUMERIC) FROM v0, t0, vt0; -- 0ms;
SELECT DISTINCT CASE ((((NULL)OR(vt0.c2)))OR(vt0.c2))  WHEN GROUP_CONCAT(vt0.c2) THEN (((('')OR(t0.c41)))AND(v0.c0)) ELSE (vt0.c0 IN (vt0.c2, t0.c41)) END FROM v0;SELECT NULL FROM vt0 WHERE ((((('')>>('1916500828')))==((('')=('y[9'))))); -- 1ms;
SELECT ALL (x'' IN ()) FROM vt0, t0 WHERE ((((((~ ('1291351296')))AND(((0.31189087120096415)IS NOT('1258956078')))))OR(0.4504018213538671))); -- 0ms;
SELECT DISTINCT (((((vt0.c1)) BETWEEN ((t0.c41)) AND ((x''))))OR((((t0.c41))<((vt0.c2))))), UNLIKELY(((NULL)IS NOT(0.7911128617235916))), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) COLLATE BINARY FROM v0, vt0, t0; -- 0ms;
SELECT '1990413502' FROM vt0, v0, t0; -- 0ms;
SELECT ((((v0.c0)>>(t0.c41)))>((vt0.c0 IN ()))), COUNT(((v0.c0) BETWEEN (v0.c0) AND (vt0.c2))) OVER (), ((((vt0.c2)<=(t0.c41))) BETWEEN (v0.c0) AND ('F')) FROM t0 INNER JOIN v0 ON (- (v0.c0)) COLLATE NOCASE COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((vt0.c0)OR(vt0.c0)))%((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) WHERE (((((((((0.7803836473909963)OR('-249556295')))AND(0Xffffffffb0c2e68f)))AND((- (-1213342528)))))OR((('-1584634203') NOT BETWEEN (0.368866398730315) AND (NULL))))) GROUP BY '1851137085', TIME(CASE WHEN v0.c0 THEN vt0.c0 WHEN t0.c41 THEN vt0.c0 WHEN NULL THEN vt0.c2 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c2 THEN NULL END, ((vt0.c0)-('MNGTU懵')), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)), ((vt0.c0) IS FALSE), (t0.c41 IN (vt0.c1, vt0.c0))), (+ ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))) HAVING CASE '1832926617'  WHEN ((v0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) THEN (((('')AND(0.4254899834267981)))AND(NULL)) END; -- 0ms;
SELECT ALL (((NOT (vt0.c2))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND ((t0.c41 IN ()))) FROM v0 LIMIT -1366096329;SELECT DISTINCT ((NULL) ISNULL) FROM vt0, v0, t0 WHERE (('-555274646' IN ())); -- 0ms;
SELECT DISTINCT ((((v0.c0)|('}?x\rG')))==(((vt0.c0) ISNULL))), ((('-511545984' IN ()))IS NOT(CAST(t0.c41 AS NUMERIC))), ((SQLITE_SOURCE_ID()) ISNULL) FROM vt0, t0;SELECT DISTINCT NULL FROM vt0, t0 LIMIT -2082086030; -- 1ms;
SELECT (((((0.760875831880705)-(t0.c41))))>((json(t0.c41)))) FROM vt0, t0, v0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL))<>(vt0.c2)) FROM t0, v0 WHERE (('' IN ()));SELECT DISTINCT SUM((~ (vt0.c0))) FROM v0, vt0, t0 ORDER BY x'' DESC  NULLS LAST; -- 0ms;
SELECT ALL json_object(((x'') NOT BETWEEN (vt0.c2) AND (t0.c41)), ((vt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)), (((t0.c41)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((t0.c41) NOT BETWEEN (vt0.c1) AND (vt0.c2))) FROM vt0, t0 WHERE (((0.15735785039191252) NOT BETWEEN ('-994930449') AND (((NULL) ISNULL)))) LIMIT -1979629828;SELECT DISTINCT TYPEOF(v0.c0 COLLATE BINARY), (((+ (vt0.c2))) NOTNULL), CASE WHEN v0.c0 THEN TOTAL(vt0.c0) ELSE CASE WHEN vt0.c2 THEN t0.c41 WHEN vt0.c2 THEN t0.c41 WHEN vt0.c1 THEN v0.c0 END END, ((((('-1782540754' IN ()))AND(((0Xffffffff83e5e372)+(t0.c41)))))AND(COUNT(t0.c41))), CAST(((vt0.c2) NOT BETWEEN (t0.c41) AND (t0.c41)) AS NUMERIC) FROM vt0, v0 WHERE (((('0.22316124158579909', NULL, NULL)) BETWEEN (((+ (0X5d8513df)), ((x'')>=(x'4d54')), ((x'') NOT BETWEEN ('') AND (NULL)))) AND (((((('1663537492')AND(x'')))AND(0.0997877384632948)), ((((((((0.04840481525646212)OR(x'')))OR(0.2849424594407147)))AND(0x52fdfcfd)))OR(x'')), NULL))));SELECT DISTINCT CASE CAST(vt0.c2 AS NUMERIC)  WHEN (+ (t0.c41)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(NULL)))AND(v0.c0)) END FROM v0 WHERE ((((x'')) NOT BETWEEN (((+ (0.7297688473712121)))) AND (((+ (NULL))))));SELECT (NOT (vt0.c2 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT 1.7976931348623157E308 FROM t0, vt0 NOT INDEXED, v0 WHERE (((((NULL)OR('-429018807')))AND('1987401415')) COLLATE NOCASE); -- 0ms;
SELECT ALL UNLIKELY(DISTINCT (((vt0.c0))==((vt0.c0)))) FROM v0, t0, vt0 WHERE (NULLIF('636918355', ((x'ec8f') BETWEEN (1102733108) AND (x'aea4')))); -- 1ms;
SELECT ALL '1851137085', ((CAST(t0.c41 AS INTEGER))>=(vt0.c2 COLLATE NOCASE)), (((((((vt0.c1))<((v0.c0))))OR(GROUP_CONCAT(vt0.c1))))AND(((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c0)))) FROM v0, vt0 WHERE (CASE ((0.014836754444488398)<(0Xffffffffc1d2416b))  WHEN (0xffffffffc25cbccd IN ()) THEN ((NULL) BETWEEN (x'') AND (x'')) END) LIMIT -801462471;SELECT DISTINCT IFNULL((vt0.c0 IN (vt0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1))) FROM t0, vt0, v0 WHERE ((((NULL IN ())) NOT BETWEEN ((((0.6566650520695555))>=((0.4349556838452129)))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (NOT (LIKELIHOOD(vt0.c1, 0.18791279223015922))) FROM vt0 WHERE (x''); -- 0ms;
SELECT (((((((v0.c0))>((v0.c0))))AND((- (x'6a88')))))OR(CAST(vt0.c0 AS NUMERIC))) FROM t0 WHERE (((((('-1895449811'))<>((NULL)))) NOT BETWEEN (x'') AND (((0.13869120748498576)+(NULL)))));SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)) OVER (), ((vt0.c1) NOTNULL), (+ (CASE vt0.c2  WHEN t0.c41 THEN vt0.c2 WHEN 'ｊy{佲y-J' THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)) FROM t0;SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((t0.c41)OR(vt0.c1))))), ((v0.c0)%((NOT (vt0.c1)))), CAST(((((((((vt0.c1)OR(vt0.c0)))OR(t0.c41)))AND(vt0.c1)))OR(0.22550396728472089)) AS BLOB) FROM v0, vt0, t0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))<=(((((((((vt0.c2)AND(v0.c0)))OR(vt0.c0)))AND(t0.c41)))OR(t0.c41)))); -- 0ms;
SELECT DISTINCT LOWER(vt0.c0) COLLATE RTRIM FROM t0, v0 WHERE ((CAST(0.39844914808811327 AS NUMERIC) IN ()));SELECT ALL CAST(CAST(vt0.c2 AS NUMERIC) AS TEXT), ((0.8083119812489734) ISNULL), (- (2120359491)), (((vt0.c2)IS NOT(vt0.c2)) IN ()), ((CAST(vt0.c1 AS TEXT)) IS TRUE) FROM t0;SELECT DISTINCT (((t0.c41)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c0 END)) AND (((~ (x'828f'))))) FROM v0, t0;SELECT DISTINCT ((((vt0.c0)|(v0.c0))) NOTNULL) FROM t0, v0 WHERE ((('666020902')<=(0.6615100695326802)) COLLATE NOCASE) ORDER BY (+ (vt0.c0)) ASC  NULLS LAST, (('-1187160672') NOT BETWEEN (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c2)))AND(vt0.c0)))AND(v0.c0))) AND (((((t0.c41)AND(vt0.c0)))AND(vt0.c2)))) ASC  NULLS FIRST, (((vt0.c1)|(vt0.c0)) IN ())  NULLS FIRST;SELECT DISTINCT TYPEOF(DISTINCT vt0.c0) FROM v0, t0, vt0 WHERE (((LOWER(0.8335603300415151)) BETWEEN (((NULL)|(x'e78d'))) AND (((NULL)&('l'))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (IFNULL((NOT ('jd4G')), (((0.07045785278978245)) NOT BETWEEN ((0.8936412321812108)) AND (('6~Z⍻'))))); -- 0ms;
SELECT LAST_VALUE(vt0.c1 COLLATE NOCASE) OVER () FROM vt0, t0, v0; -- 0ms;
SELECT DISTINCT NULL, ((((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) NOTNULL))), 0.10935090451505058 FROM vt0 WHERE (((x'') BETWEEN (0.22665669235923214) AND ('820088423')) COLLATE NOCASE);SELECT DISTINCT GROUP_CONCAT(((v0.c0) NOTNULL)) OVER () FROM v0 WHERE (NULLIF(',nowu', 0X71633f21) COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT ALL ((((t0.c41)>(vt0.c2))) NOT BETWEEN ((((vt0.c2, t0.c41, vt0.c1)) BETWEEN ((vt0.c2, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, t0.c41)))) AND (((((((((v0.c0)AND(x'')))OR(vt0.c2)))AND(0.5207543844439746)))OR(vt0.c0)))) FROM t0, vt0 INDEXED BY i11, v0;SELECT DISTINCT (- (v0.c0 COLLATE RTRIM)), CAST((- ('~t')) AS NUMERIC), x'' FROM vt0 ORDER BY ((0.5888864487568801) IS TRUE) ASC  NULLS LAST;SELECT ALL (~ (vt0.c1 COLLATE NOCASE)), CAST('+둎ㇶp' AS INTEGER), ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END) NOT NULL) FROM vt0, t0, v0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT ((((CAST(t0.c41 AS NUMERIC))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END)))OR(((v0.c0) IS FALSE))) FROM v0 WHERE (((((0X4ff5b0ac)|(0.7328751488505535))) NOTNULL)) GROUP BY ((((((((vt0.c2)AND(v0.c0)))AND(t0.c41)))AND(t0.c41)))AND(t0.c41)) COLLATE RTRIM HAVING ((((t0.c41) NOT BETWEEN (vt0.c1) AND (t0.c41)))<(CAST(t0.c41 AS NUMERIC)));SELECT DISTINCT CASE vt0.c0  WHEN v0.c0 THEN t0.c41 ELSE vt0.c1 END COLLATE BINARY, ((COUNT(t0.c41))>=(0xffffffffb52dad39)), MIN(((v0.c0)>(v0.c0))) FROM t0;SELECT ALL CAST(RTRIM(x'4a64') AS BLOB) FROM t0, v0 INDEXED BY i11 WHERE ((- (0.35854016904290054 COLLATE RTRIM)));SELECT ALL ((((((((((vt0.c2) BETWEEN (t0.c41) AND (vt0.c1)))OR(((vt0.c2) ISNULL))))OR(PRINTF(0xffffffffd1bce394))))OR(t0.c41 COLLATE RTRIM)))AND(vt0.c2)), vt0.c0, TRIM(COUNT(t0.c41), ((vt0.c1)IS NOT(t0.c41))) FROM t0 WHERE (((LIKELIHOOD(-9.94930449E8, 0.43717879846621255))OR(((0.2267701005251801) BETWEEN (x'') AND ('31Vk')))));SELECT ALL DATE(((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(x'')))OR(vt0.c1)), x'', ((t0.c41) NOT NULL)) FROM vt0;SELECT ((NULLIF(DISTINCT vt0.c1, v0.c0))>(v0.c0)) FROM v0, vt0, t0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM t0, v0, vt0 WHERE ('1880281469'); -- 0ms;
SELECT DISTINCT (('㐋')LIKE(((vt0.c1) BETWEEN (t0.c41) AND (vt0.c0)))), ((NULL)AND((t0.c41 IN ()))), ((NULL) BETWEEN (((v0.c0)||(vt0.c2))) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))) FROM v0, vt0, t0 WHERE ((~ (((('', '1519371534', x''))=((x'', '', 0.825991816693079)))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c1)AND(t0.c41)))AND(vt0.c1))) NOT BETWEEN (((((((((NULL)OR(t0.c41)))AND(v0.c0)))OR(NULL)))AND('0.13869120748498576'))) AND (QUOTE(t0.c41))) FROM vt0, v0;SELECT DISTINCT COUNT(*) FROM v0, vt0; -- 1ms;
SELECT ALL (((vt0.c2)) NOT BETWEEN ((CASE vt0.c2  WHEN vt0.c0 THEN v0.c0 END)) AND ((((vt0.c2) BETWEEN (vt0.c0) AND (t0.c41))))) FROM v0, t0 WHERE (((((((((x'')AND(0.3230763349401178)))OR(x'')))OR(x'5e5d')))OR(x'3128ca64e2e5')) COLLATE NOCASE);SELECT DISTINCT ((CASE vt0.c1  WHEN v0.c0 THEN vt0.c2 WHEN vt0.c2 THEN t0.c41 WHEN vt0.c1 THEN t0.c41 END) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN t0.c41 ELSE vt0.c2 END) AND (TYPEOF(DISTINCT v0.c0))), AVG((~ (t0.c41))), (((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS TEXT))) AND (((vt0.c2 IN (-1153226774))))) FROM vt0 GROUP BY vt0.c1 ORDER BY ((((('⁭텽W9*l')OR(t0.c41)))AND(t0.c41)) IN (((vt0.c0)<=(0.2638572518866159)))) ASC  NULLS FIRST, (((v0.c0, t0.c41, v0.c0)) NOT BETWEEN ((LIKELY(DISTINCT x''), CAST(vt0.c1 AS TEXT), t0.c41)) AND ((UNLIKELY(vt0.c1), (vt0.c1 IN (vt0.c0, t0.c41)), UNLIKELY(DISTINCT x'')))) DESC  NULLS FIRST, (((('-1589851086')OR(json_extract(vt0.c1, vt0.c1, v0.c0, v0.c0))))AND(LIKELIHOOD(vt0.c0, 0.9237570538264314)));SELECT DISTINCT ((((v0.c0) NOT NULL)) ISNULL) FROM t0 GROUP BY (((+ (vt0.c2))) NOT NULL) HAVING ((904041299 IN ()) IN ());SELECT DISTINCT LIKELIHOOD(((vt0.c1)>(vt0.c2)), 0.7273277226434379) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((CAST('711135866' AS BLOB))) AND ((CASE WHEN 0.7496749880332504 THEN '-1382705806' ELSE x'037a' END)))); -- 1ms;
SELECT DISTINCT CASE CASE v0.c0  WHEN vt0.c2 THEN vt0.c2 END  WHEN ((t0.c41)>(v0.c0)) THEN ((t0.c41) ISNULL) WHEN ((t0.c41)<(vt0.c0)) THEN UNICODE(vt0.c1) WHEN AVG(NULL) THEN LOWER(DISTINCT t0.c41) END, t0.c41, ((((COUNT(0.495045495184414))OR(CASE WHEN vt0.c0 THEN t0.c41 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c41 END)))AND(((x'2515')==(vt0.c2)))) FROM v0, vt0 WHERE (((((']쐠x') IS TRUE))LIKE(((x'') IS TRUE))));SELECT t0.c41, '', ((((vt0.c0) BETWEEN (t0.c41) AND (v0.c0))) BETWEEN ((- (vt0.c2))) AND ((+ (vt0.c0)))) FROM t0, vt0, v0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM v0;SELECT ALL t0.c41 FROM vt0, t0 WHERE (((UNICODE(x'')) NOT NULL)); -- 0ms;
SELECT ALL ((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)|(vt0.c2)), ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.22198945403308423))) NOT BETWEEN ('1172885681' COLLATE NOCASE) AND (HEX(DISTINCT v0.c0))), '-1060733532', t0.c41, FIRST_VALUE(CAST(CASE t0.c41  WHEN vt0.c0 THEN vt0.c2 END AS NUMERIC)) OVER () FROM vt0, v0, t0; -- 1ms;
SELECT DISTINCT COUNT((((vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, t0.c41, vt0.c0)) AND ((vt0.c1, vt0.c2, NULL)))) OVER () FROM vt0, v0;SELECT ((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))AND(vt0.c2)))AND(COUNT(vt0.c1))))AND(((vt0.c0) IS TRUE))) FROM t0, vt0, v0 WHERE ((((((((((('﫠mx{*|')AND(0.9572129796564737)))OR(x'')))OR(x'ba4e')))AND(0xffffffffdbd71cc3)))*(CASE WHEN x'' THEN -1.227665842E9 END))); -- 0ms;
SELECT DISTINCT t0.c41 FROM vt0, t0, v0 WHERE ((((((((((x'')AND(0.6327945987219038)))OR('')))AND(NULL)))AND(7.11135866E8)) IN ())); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT vt0.c2, 0.5499264678586406))+(CAST(vt0.c2 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT DISTINCT ABS((((vt0.c0))=((x'')))), COUNT(CAST(v0.c0 AS NUMERIC)), SUM(((vt0.c2) BETWEEN (vt0.c1) AND (t0.c41))) OVER () FROM t0, vt0 WHERE (CASE WHEN ((1.090981739E9) NOT BETWEEN (-829761458) AND (0.2849424594407147)) THEN (('') NOT BETWEEN (NULL) AND (x'63c3')) WHEN ((NULL)IS NOT(x'')) THEN ((((x'3f80')OR(x'')))OR('1539626365')) WHEN ((((0.27180850176203364)AND(0xffffffff8ad2b370)))OR(NULL)) THEN ((540750472) NOT BETWEEN (NULL) AND (x'')) ELSE (('-1092608843')<>(x'')) END) ORDER BY ((vt0.c1) NOT BETWEEN ('>}') AND (vt0.c2)) COLLATE NOCASE DESC;SELECT ((NULL)IS(CAST(vt0.c1 AS BLOB))), COUNT(((t0.c41) BETWEEN (vt0.c0) AND (0.424406705690655))), LIKELIHOOD(LIKELIHOOD(DISTINCT v0.c0, 0.20584024847788807), 0.13795964711526865) FROM vt0, t0 WHERE (((0.13434404719408544) NOT BETWEEN ('-1458550475') AND (-8.39163403E8)) COLLATE BINARY);SELECT (((vt0.c0 IN ()))/(TRIM(DISTINCT vt0.c2))), ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) IS FALSE), (t0.c41 IN ()) COLLATE NOCASE FROM vt0, v0, t0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)>>(v0.c0)) AS REAL), (((((t0.c41 IN ()))OR((((vt0.c1))!=((vt0.c2))))))AND(vt0.c1 COLLATE RTRIM)), (((- (v0.c0))) BETWEEN (((vt0.c2) NOT NULL)) AND (((((((((vt0.c2)AND(vt0.c2)))AND(0.454760966977109)))OR(vt0.c2)))OR(vt0.c2)))) FROM t0, v0, vt0 WHERE (CAST(CASE WHEN 1461202521 THEN '+(' ELSE 'o废''R/V5 붏' END AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)==(v0.c0))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (t0.c41) AND (vt0.c1))) AND (x'')) FROM v0, t0, vt0 WHERE ((((('0.7534093499313255')IS(0.7695404828192369))) NOT NULL)); -- 0ms;
SELECT ALL ((((vt0.c0)&(vt0.c0)))<(((t0.c41)IS(vt0.c1)))) FROM t0 WHERE ((((x'') ISNULL) IN ())) LIMIT -1406556107 OFFSET -1115531961;SELECT DISTINCT HEX(DISTINCT DATETIME(t0.c41, x'', vt0.c0)) FROM t0, v0;SELECT DISTINCT v0.c0, HEX((~ (vt0.c2))), (((((vt0.c0) BETWEEN (t0.c41) AND (vt0.c2))))>=((CAST(v0.c0 AS REAL)))) FROM vt0, t0, v0 ORDER BY ((CAST(vt0.c1 AS TEXT))OR(((((vt0.c0)AND(vt0.c2)))OR(t0.c41))))  NULLS LAST, CAST((NOT (vt0.c2)) AS REAL); -- 1ms;
SELECT SUM((vt0.c1 IN ('D''''b8,xp'))) OVER ( RANGE  CURRENT ROW), ((((((0.7778209889649217)>(t0.c41)))AND('')))AND(((v0.c0) NOT NULL))), CAST(((vt0.c1) NOT NULL) AS BLOB), 0.11524602555957142, 0.2970372359786507 FROM vt0;SELECT ALL 1.880281469E9, LIKELY(((((0.5018386080907076)OR(vt0.c2)))OR(vt0.c1))), ((1.692295947E9)*(((vt0.c2) IS FALSE))) FROM vt0, v0 ORDER BY 0.04847217296731743 ASC  NULLS LAST, ((((vt0.c2) NOT BETWEEN ('1068802730') AND (t0.c41)))*(CASE vt0.c0  WHEN 'ZcJm*' THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;SELECT DISTINCT ((v0.c0) ISNULL) COLLATE BINARY FROM t0 WHERE (ABS(0.36668787470726993));SELECT (vt0.c0 IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE v0.c0 COLLATE NOCASE  WHEN ((t0.c41)>>(t0.c41)) THEN ((vt0.c2) ISNULL) WHEN ((vt0.c0) NOT BETWEEN ('') AND (v0.c0)) THEN CASE v0.c0  WHEN vt0.c2 THEN vt0.c0 END WHEN (v0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) ELSE ((vt0.c2)>(vt0.c1)) END, vt0.c0, CAST(vt0.c0 AS TEXT) FROM v0 INDEXED BY i11, t0, vt0;SELECT ALL LEAD((((((vt0.c1)<>(vt0.c2))))<=((((vt0.c0)+(vt0.c0))))), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY, (- (v0.c0)) COLLATE BINARY) OVER ( ORDER BY (NOT ((v0.c0 IN ()))) DESC  NULLS LAST, ((((((v0.c0)AND(v0.c0)))OR(t0.c41))) BETWEEN ((((((((('㶙\')OR(v0.c0)))AND(t0.c41)))AND(vt0.c1)))OR(vt0.c2))) AND (((((t0.c41)OR(t0.c41)))AND(vt0.c0)))) ASC GROUPS BETWEEN CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((vt0.c2)>(v0.c0)) THEN NULL ELSE NULL END PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM vt0, v0 WHERE (0x32ccac9f COLLATE RTRIM);SELECT DISTINCT 's*oB,pgr', SUM(((((vt0.c0)OR(vt0.c1)))AND(t0.c41))) OVER (), AVG((((t0.c41)) BETWEEN ((t0.c41)) AND ((vt0.c0)))), ((CAST(vt0.c1 AS INTEGER)) NOTNULL), (((vt0.c1 IN ())) NOT NULL) FROM v0, vt0;SELECT DISTINCT ((((((NULL) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND(DATETIME(vt0.c2, vt0.c2, t0.c41))))OR(vt0.c0)) FROM t0, v0, vt0 WHERE (((json_patch(NULL, x'')) BETWEEN (CASE NULL  WHEN '9V6N	wb\n' THEN x'' ELSE x'c028' END) AND ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)AND(((v0.c0)||(vt0.c2)))))OR((NOT (v0.c0)))) FROM t0, v0 WHERE (0.8294243394448492);SELECT ALL json_remove(t0.c41, '!''', vt0.c2, vt0.c2) COLLATE BINARY, (NOT ((v0.c0 IN (vt0.c2)))), CUME_DIST() OVER () FROM t0 NOT INDEXED WHERE (2042926491) GROUP BY CASE CASE '652901485'  WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c41 THEN v0.c0 ELSE vt0.c1 END  WHEN (((vt0.c1)) BETWEEN ((t0.c41)) AND ((vt0.c1))) THEN (((t0.c41)) NOT BETWEEN ((v0.c0)) AND (('0.47394967833239465'))) END HAVING UPPER(DISTINCT ((t0.c41) NOTNULL));SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, '-136481921'))))IS(((vt0.c2) NOT BETWEEN (vt0.c0) AND (x'')))) FROM t0 WHERE (((((((x'') IS FALSE))AND(0.37200415613408877 COLLATE RTRIM)))AND((((NULL))!=((NULL)))))) LIMIT 1102813821;SELECT DISTINCT (((t0.c41, vt0.c0, vt0.c2)) BETWEEN ((', S''6炷^p', t0.c41, ((t0.c41) ISNULL))) AND ((SQLITE_COMPILEOPTION_USED(v0.c0), (~ (vt0.c2)), CASE WHEN vt0.c1 THEN x'2f47' ELSE v0.c0 END))) FROM v0, vt0, t0; -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0, vt0 WHERE ((((0.14281243503900354)/(1213552890)) IN ())) GROUP BY CASE (((t0.c41))==((-9.2345829E7)))  WHEN ((vt0.c1) IS FALSE) THEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c41))) WHEN (NOT (t0.c41)) THEN ((vt0.c0)<>(vt0.c2)) WHEN (t0.c41 IN ()) THEN (((vt0.c0))<>((vt0.c2))) ELSE (~ (v0.c0)) END;SELECT DISTINCT (((((v0.c0 IN ()))AND(NULL)))OR(((t0.c41)AND(NULL)))) FROM vt0 ORDER BY CASE t0.c41 COLLATE BINARY  WHEN ((v0.c0)LIKE(vt0.c1)) THEN ((0.7621263607673208) IS FALSE) WHEN ((vt0.c1) NOT NULL) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c2) NOTNULL) ELSE CAST(x'' AS INTEGER) END DESC;SELECT DISTINCT CAST(vt0.c1 AS TEXT) COLLATE BINARY FROM t0 NOT INDEXED, v0 WHERE (((((((((((((0.9262342572736874)AND(x'')))OR(740386144)))AND('')))AND(NULL)))OR(-1.67925751E8 COLLATE NOCASE)))AND(COALESCE(DISTINCT '424696177', 0.10186400403050522))));SELECT DISTINCT ((((((v0.c0) ISNULL))AND(CAST(0.23063419020368958 AS BLOB))))AND(CAST(v0.c0 AS INTEGER))) FROM vt0, v0 WHERE (((((((0.9742694525677094)IS NOT(x'')))AND(((0.018375389072272208) IS TRUE))))AND(COALESCE(DISTINCT 0.1030941177522029, 0.20275036240807476, NULL, 920490403)))); -- 1ms;
SELECT ALL AVG('-793362583') OVER (), COUNT(((v0.c0) IS TRUE)), (((t0.c41, v0.c0, vt0.c0)) BETWEEN ((((((((((v0.c0)OR(vt0.c0)))AND(t0.c41)))OR(vt0.c0)))AND(vt0.c0)), t0.c41 COLLATE RTRIM, (((vt0.c2))<=((v0.c0))))) AND ((((((vt0.c0)AND(v0.c0)))AND(v0.c0)), t0.c41, (vt0.c1 IN (vt0.c0, vt0.c1))))) FROM vt0;SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-2020874689'))>((x'')))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(v0.c0)))AND(NULL)))AND(vt0.c2)))OR(vt0.c2)))AND(((((vt0.c0)OR(vt0.c2)))OR(x'')))))AND(NULL)), ((NULL)%(TYPEOF(DISTINCT '2134707165'))), ((CAST(t0.c41 AS REAL)) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (vt0.c2)) FROM vt0 WHERE ((((('2129499077')OR(''))) NOTNULL)) ORDER BY (((((t0.c41))<=((NULL)))) NOT NULL) DESC  NULLS LAST;SELECT ALL ((((((((('')OR(v0.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(t0.c41)) IN ()) FROM t0 WHERE (x''); -- 0ms;
SELECT ((((v0.c0)<=(vt0.c0))) NOT BETWEEN (((((((((t0.c41)AND(0X24545d47)))OR(vt0.c2)))AND(vt0.c1)))OR(v0.c0))) AND (((vt0.c2)|(x'')))), (((vt0.c0 IN ()))<=(((vt0.c1)IS NOT(v0.c0)))), CAST(0.40130585237269023 AS NUMERIC) FROM t0, v0, vt0 WHERE ((NOT (((0X6db124f6) NOT NULL)))); -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE)LIKE(vt0.c0)), (- (((vt0.c1)/(vt0.c0)))), (UPPER(DISTINCT vt0.c1) IN ()) FROM v0 INDEXED BY i11, vt0, t0;SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON UPPER(COALESCE(DISTINCT vt0.c1, vt0.c2)) WHERE ((((NULL)) BETWEEN ((ABS(NULL))) AND ((((-436878247)IS NOT(-1.458550475E9)))))) ORDER BY ((((((vt0.c2)AND(v0.c0)))AND(vt0.c1)))IS NOT((- ('68580016')))) ASC; -- 0ms;
SELECT DISTINCT ((((((((((v0.c0)+(vt0.c2)))AND(((t0.c41)&(v0.c0)))))OR(CASE vt0.c0  WHEN v0.c0 THEN t0.c41 WHEN t0.c41 THEN x'' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)))OR(t0.c41 COLLATE NOCASE)))AND(NULL)), (COUNT(x'370b') IN ((NOT (t0.c41)))), ((vt0.c2)%((v0.c0 IN ()))) FROM v0, t0, vt0 ORDER BY ((((vt0.c1 IN (t0.c41, vt0.c2)), vt0.c1, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))<>((((vt0.c1)AND(vt0.c0)), t0.c41, (((vt0.c2, vt0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c2)) AND ((v0.c0, vt0.c0, vt0.c0))))))  NULLS FIRST; -- 0ms;
SELECT ((((t0.c41) BETWEEN (v0.c0) AND (v0.c0)))<=((NOT (vt0.c0)))) FROM vt0, v0 WHERE (((COALESCE(DISTINCT 1.832926617E9, '')) NOT BETWEEN (0X4001a63a COLLATE RTRIM) AND (0.6788097010937677)));SELECT ALL UNLIKELY(DISTINCT CAST(vt0.c2 AS TEXT)) FROM vt0, t0 WHERE ((((0.5758388821527769)) NOT BETWEEN ((((((x'')OR('0.5018386080907076')))AND(0Xffffffffad959572)))) AND ((CAST(x'' AS BLOB))))); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c2)>>(vt0.c1)) THEN CAST(NULL AS INTEGER) ELSE ((vt0.c2) BETWEEN (t0.c41) AND (vt0.c0)) END, ((((vt0.c2)-(vt0.c0))) BETWEEN (((vt0.c2)<=(v0.c0))) AND ((((vt0.c2)) BETWEEN ((v0.c0)) AND ((vt0.c2))))), ABS((- (vt0.c1))) FROM v0, t0, vt0 WHERE (((((x'')AND('\rV')))AND(0.15613417146099828)) COLLATE BINARY) LIMIT -1164655913; -- 0ms;
SELECT (((((t0.c41)>>(v0.c0)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)), CAST(vt0.c0 AS BLOB)))==((SUM(vt0.c1), vt0.c1 COLLATE NOCASE, CAST(vt0.c1 AS INTEGER)))) FROM t0;SELECT DISTINCT TOTAL((vt0.c1 IN ())) FROM t0, vt0, v0; -- 0ms;
SELECT (NOT (CASE vt0.c1  WHEN 0.7786017206795679 THEN v0.c0 END)) FROM vt0;SELECT DISTINCT (((vt0.c0)+('-827978165')) IN (vt0.c2)) FROM vt0, t0 GROUP BY ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN (((((((((0.08605535481422033)AND(t0.c41)))OR(vt0.c1)))AND(vt0.c0)))AND(v0.c0))) AND (((vt0.c2)<<(vt0.c0))));SELECT DISTINCT LAG(v0.c0, CAST(((vt0.c1) ISNULL) AS INTEGER), SQLITE_COMPILEOPTION_USED((vt0.c2 IN ()))) OVER (), ((((((((((0X3921cefa)AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (((v0.c0)IS(t0.c41))) AND ('48575380')), 0X7cc554c3 COLLATE NOCASE, (vt0.c0 COLLATE BINARY IN ()), ((((vt0.c1)>=(v0.c0))) IS TRUE) FROM v0, vt0, t0 WHERE (((((((((CAST(NULL AS REAL))OR(((1.990413502E9) NOTNULL))))OR(0Xffffffffa9104935)))OR(0.32422588452844436)))AND((x'' IN ())))); -- 1ms;
SELECT DISTINCT CAST(vt0.c2 COLLATE BINARY AS REAL), ((((((v0.c0)!=(vt0.c1)))OR(((t0.c41) NOT BETWEEN (vt0.c2) AND (NULL)))))OR(json_valid(t0.c41))), CASE t0.c41  WHEN vt0.c0 THEN t0.c41 END COLLATE NOCASE FROM vt0, v0, t0 GROUP BY ((('1806488713', vt0.c2, vt0.c1, vt0.c0, vt0.c2)) BETWEEN ((((t0.c41) NOT BETWEEN (v0.c0) AND (vt0.c0)), ((t0.c41)LIKE(vt0.c1)), (- (vt0.c1)), t0.c41 COLLATE NOCASE, ((v0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) AND (((NOT (vt0.c1)), ((t0.c41) NOTNULL), (vt0.c1 IN ()), ((vt0.c1)<(vt0.c2)), -1537265420))) HAVING ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))+(((v0.c0) NOTNULL))); -- 0ms;
SELECT ALL ((CASE 0.5777290384526322  WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN t0.c41 WHEN vt0.c1 THEN NULL END)=(CAST(v0.c0 AS NUMERIC))), MAX(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))), ((0.3708666967128844)<(MAX(vt0.c2))) FROM v0 LIMIT 1990413502;SELECT DISTINCT CAST(((((NULL)AND(v0.c0)))AND('''O')) AS TEXT) FROM vt0, v0 WHERE ((((('-98362416')<('c>%i')))&(json_remove(5.115156555432437E18, 389981649))));SELECT DISTINCT ((CASE WHEN t0.c41 THEN vt0.c2 END)<>(IFNULL(vt0.c2, t0.c41))) FROM v0, vt0;SELECT DISTINCT 0.1935571667397622 FROM t0, vt0 WHERE (((x'')&(('2099604949' IN (0.9909975901814695, NULL))))) GROUP BY CAST((~ (v0.c0)) AS INTEGER) HAVING (((vt0.c1) ISNULL) IN ());SELECT (((((vt0.c1, t0.c41, vt0.c1))==((v0.c0, v0.c0, vt0.c0))))>(((((((((NULL)OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c41)))), GROUP_CONCAT(((vt0.c2) NOTNULL)) OVER (), 0xffffffffffffffff FROM t0, vt0;SELECT DISTINCT CASE WHEN COUNT(vt0.c0) THEN UPPER(DISTINCT vt0.c2) ELSE (v0.c0 IN (vt0.c0)) END FROM v0, vt0, t0 GROUP BY ((((((vt0.c1)OR(vt0.c0)))AND(v0.c0)))LIKE(((t0.c41)<=(NULL)))); -- 0ms;
SELECT (((vt0.c0, vt0.c2, t0.c41)) NOT BETWEEN ((COALESCE('-1164655913', v0.c0), NULL, (NULL IN ()))) AND ((CASE WHEN vt0.c0 THEN vt0.c2 END, ((0Xfffffffff321eafb)%(vt0.c0)), CAST(vt0.c2 AS INTEGER)))) FROM vt0, t0;SELECT ALL vt0.c0, LEAD(CAST(json_valid(v0.c0) AS INTEGER), (+ (609508679)) COLLATE BINARY, ((CASE WHEN v0.c0 THEN v0.c0 END)=(v0.c0))) OVER (), COUNT(*) FROM v0 WHERE ((((0.5943726430495406, '|', 0.9232994884345922)) NOT BETWEEN (((~ (x'')), ('-268928185' IN ('f+', x'286219f8')), LIKELIHOOD(DISTINCT 0.49064547635866496, 0.7088281001620853))) AND (((+ (0.004435813391243992)), CAST(x'' AS INTEGER), CAST(1990413502 AS INTEGER)))));SELECT ALL (((((vt0.c2) NOT BETWEEN (t0.c41) AND (vt0.c2))))<=((((vt0.c1)>>(t0.c41))))) FROM v0 WHERE (ABS(0.21667927782261642) COLLATE RTRIM);SELECT ALL (~ (((x'') NOTNULL))) FROM v0, vt0, t0 WHERE ((((((((((('')AND('-1164655913')))OR('DZ࿲%jY>d')))AND('1081393344')))OR(0Xffffffffdd9bf7fe))) BETWEEN (NULL) AND (CASE 0.7641644212399541  WHEN 0Xffffffffd417b7f4 THEN 0xffffffff9e13e4ba WHEN '0.18239420344367008' THEN NULL WHEN 0xffffffffdead42e1 THEN '' ELSE 451642916 END))) GROUP BY ((((((((((v0.c0)AND(t0.c41)))AND(v0.c0)))AND('᎓6')))AND(vt0.c0)))<=(json_insert(vt0.c0, x'9a87', vt0.c1, v0.c0, vt0.c1))); -- 0ms;
SELECT DISTINCT CAST(t0.c41 AS BLOB) COLLATE BINARY FROM vt0, v0, t0 WHERE (((((x'')AND(x'')))LIKE(('^l서CV	{,' IN ())))) ORDER BY ((NULLIF(vt0.c0, vt0.c2)) NOT NULL)  NULLS FIRST, NULL; -- 0ms;
SELECT DISTINCT AVG((~ (v0.c0))) OVER (), vt0.c2 COLLATE BINARY, ((v0.c0 COLLATE NOCASE) BETWEEN (((((v0.c0)OR(vt0.c1)))OR(vt0.c1))) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)) FROM vt0 INDEXED BY i11 WHERE (((('609508679' IN ()))<<((((x''))>=((-295148520))))));SELECT ALL (~ (((vt0.c0) BETWEEN (0.23945131988540724) AND (t0.c41)))) FROM vt0 ORDER BY 0x3c9adc40 DESC LIMIT -996474446 OFFSET 1454324614;SELECT ALL ((v0.c0 COLLATE BINARY) NOTNULL), ((((t0.c41) IS FALSE))>>((vt0.c2 IN (vt0.c0)))), CASE CASE WHEN v0.c0 THEN 0.606334530687763 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END  WHEN ((vt0.c1) BETWEEN ('-682501621') AND (v0.c0)) THEN (- (vt0.c2)) WHEN ((vt0.c2) IS TRUE) THEN ((((NULL)OR(v0.c0)))AND(vt0.c0)) WHEN ((t0.c41) IS TRUE) THEN ((((((((vt0.c1)OR(vt0.c2)))OR(0.7430559776179889)))OR(v0.c0)))OR(t0.c41)) ELSE CAST(v0.c0 AS INTEGER) END FROM v0, t0 WHERE ((((((0.4195165328142074)+('-1929456290'))))>=(((x'52430446' IN ())))));SELECT ((((t0.c41)=(vt0.c2))) IS TRUE) FROM v0;SELECT DISTINCT (((vt0.c2)) BETWEEN ((CASE WHEN vt0.c1 THEN v0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN NULL END)) AND (((~ (t0.c41))))) FROM v0, t0 GROUP BY ((vt0.c0 COLLATE RTRIM)OR(((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))), (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE RTRIM, (((t0.c41)LIKE(0.6407466910646323)) IN (((vt0.c1)*(vt0.c1)), vt0.c0));SELECT ALL CAST(v0.c0 AS BLOB) COLLATE BINARY FROM v0, t0; -- 0ms;
SELECT ((+ (vt0.c2)) IN ()) FROM t0, v0 WHERE (((x'')LIKE(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) COLLATE NOCASE, NTILE(((((x'') NOT NULL)) BETWEEN (((vt0.c1)%(vt0.c2))) AND ((+ (t0.c41))))) OVER (), ((((vt0.c2 IN (vt0.c0))))>=((NULLIF(DISTINCT ')eHe', vt0.c2)))) FROM t0, vt0, v0 WHERE (((((-264224725)IS NOT(x'48b5'))) NOT NULL)) LIMIT 613162168 OFFSET 1507963782;SELECT DISTINCT (((v0.c0, t0.c41, t0.c41)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (v0.c0)), (t0.c41 IN ()), (- (v0.c0)))) AND ((v0.c0 COLLATE RTRIM, ((vt0.c2)<(v0.c0)), GROUP_CONCAT(vt0.c2)))) FROM t0, vt0, v0 WHERE (((((0.368866398730315) BETWEEN ('-611687632') AND (NULL)))LIKE(CASE x'fc27'  WHEN '-415694337' THEN x'a39f' ELSE '1쐿(qL/' END))); -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN '''\rdv' ELSE vt0.c0 COLLATE NOCASE END FROM vt0, v0, t0 WHERE ((- ((~ (x''))))); -- 0ms;
SELECT DISTINCT (- (((vt0.c2)IS NOT(vt0.c1)))) FROM vt0, t0 GROUP BY (((vt0.c0) IS FALSE) IN (((vt0.c1) NOT NULL))) HAVING (((+ (v0.c0))) ISNULL);SELECT ALL vt0.c0, (+ ((- (v0.c0)))), (((vt0.c1 IN (vt0.c1))) BETWEEN (((t0.c41) BETWEEN (vt0.c2) AND (vt0.c1))) AND (((v0.c0)IS(0.6516803824428797)))), (((vt0.c2 IN (vt0.c2))) BETWEEN (((t0.c41) NOT BETWEEN (v0.c0) AND (vt0.c0))) AND (vt0.c1)), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)))<(t0.c41 COLLATE NOCASE)) FROM v0, t0 GROUP BY vt0.c0;SELECT ROW_NUMBER() OVER () FROM vt0, t0, v0 WHERE ((((('-462472369')/(0.4220971195993015))) BETWEEN ((('') NOT BETWEEN (NULL) AND (1819561486))) AND (CASE 0.02143845404078848  WHEN 0.7151111521362575 THEN 'NYh貋/V' WHEN NULL THEN '854080055' WHEN '' THEN x'' ELSE '136139704' END))); -- 1ms;
SELECT DISTINCT FIRST_VALUE(CAST(((vt0.c0) ISNULL) AS NUMERIC)) OVER (), ((t0.c41)=(t0.c41)) COLLATE RTRIM, ((((((vt0.c0)AND(vt0.c2)))OR(t0.c41))) IS FALSE) FROM vt0;SELECT (vt0.c1 IN ()) COLLATE BINARY COLLATE NOCASE FROM v0, t0, vt0 NOT INDEXED GROUP BY ((v0.c0)>(vt0.c2)) COLLATE BINARY HAVING TRIM(DISTINCT UPPER(DISTINCT vt0.c0), vt0.c1); -- 0ms;
SELECT ALL TOTAL((vt0.c0 IN ())) OVER () FROM v0, t0; -- 0ms;
SELECT ALL CASE (t0.c41 IN ())  WHEN ((((vt0.c2)AND(v0.c0)))AND(t0.c41)) THEN (- (vt0.c0)) END FROM vt0, t0, v0 WHERE (((('' COLLATE NOCASE, ('-1484098615' IN ()), CASE NULL  WHEN NULL THEN -1974807179 END))>((((((((((NULL)AND('1726982887')))OR(x'')))AND(x'')))AND(0.5335931185480263)), 0x688c3a61, (+ (0xffffffff89f23156)))))); -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0, vt0, v0 WHERE (1917291564); -- 0ms;
SELECT ALL (NOT ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c41))))) FROM v0, vt0 WHERE (((CASE WHEN 0.44634377364992484 THEN NULL WHEN 'C/' THEN 1917291564 WHEN NULL THEN x'' END)&((((1025162841)) NOT BETWEEN ((0.6787121323140317)) AND ((0.36538814146726517))))));SELECT DISTINCT CASE TOTAL(vt0.c2)  WHEN (NOT (0X22913810)) THEN ((vt0.c2) IS TRUE) END, COUNT(*), x'' FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c2 THEN v0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN 0xffffffff8ad2b370 THEN vt0.c0 END, COUNT(v0.c0), ((t0.c41) BETWEEN ('볍SYqy*') AND (v0.c0)), ((vt0.c1) NOTNULL), (+ (vt0.c0))))<((COALESCE(DISTINCT NULL, vt0.c1, vt0.c1, vt0.c2), (vt0.c1 IN ()), ((vt0.c1)=(vt0.c1)), ((vt0.c2) NOTNULL), ((vt0.c0)=(v0.c0))))), ((CAST(vt0.c0 AS TEXT))>=(((vt0.c0)<<(vt0.c2)))), NTILE(vt0.c0) OVER () FROM vt0, v0, t0 WHERE (((-1077630714)+('1191493007')) COLLATE RTRIM COLLATE BINARY);SELECT DISTINCT AVG(((vt0.c1)IS(v0.c0))), CAST(vt0.c0 COLLATE NOCASE AS NUMERIC), '5_vs', (- (((vt0.c1) NOTNULL))), ((t0.c41)OR(((NULL) NOT BETWEEN (t0.c41) AND (v0.c0)))) FROM vt0, v0, t0 WHERE (((('m')) NOT BETWEEN ((NULL)) AND ((NULL COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(v0.c0 AS NUMERIC) THEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END ELSE t0.c41 END FROM v0, t0 WHERE (((((json_type(x''))AND(((NULL)%(NULL)))))OR((('-1153226774')%(x'')))));SELECT DISTINCT (+ ((t0.c41 IN ()))) FROM v0, vt0, t0; -- 0ms;
SELECT ALL CAST(vt0.c1 COLLATE NOCASE AS NUMERIC), ((t0.c41)%(vt0.c1)) COLLATE NOCASE, ((((v0.c0)>>(vt0.c0))) ISNULL) FROM vt0, v0, t0; -- 1ms;
SELECT DISTINCT LAG(0.3823815689533624, ((v0.c0 COLLATE RTRIM) ISNULL), ((((t0.c41) NOTNULL))|(t0.c41))) OVER () FROM vt0, v0, t0; -- 0ms;
SELECT ALL (((vt0.c0 IN ()))LIKE(((4.12805715E8)%(t0.c41)))) FROM t0, vt0 WHERE (((0xffffffffff72dc27)&('-167925751')) COLLATE BINARY); -- 0ms;
SELECT LIKELY(t0.c41) COLLATE NOCASE, (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<=((CASE vt0.c2  WHEN vt0.c1 THEN '' ELSE vt0.c0 END))), (- ((('-2034371162')GLOB(vt0.c1)))) FROM vt0 WHERE (((((NULL) IS TRUE)) BETWEEN (CAST(0.46989899174602634 AS NUMERIC)) AND ((NOT (NULL)))));SELECT (((1.454324614E9))<=((CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))), CAST(((t0.c41) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER), ((t0.c41 COLLATE BINARY)IS((~ (vt0.c2)))), (((NOT (vt0.c2)))||(MIN(vt0.c1))), COUNT(*) FROM t0, v0;SELECT ALL ((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE FROM v0 WHERE (CASE CAST(1.163361189E9 AS INTEGER)  WHEN (((-8.75440976E8))>=((NULL))) THEN TIME('', 0xd93a5b1, '-990137978') END);SELECT DISTINCT ((UPPER(DISTINCT vt0.c1)) IS TRUE), (((((- (vt0.c1)))OR((NOT (vt0.c0)))))AND((~ (0.32909606076838194)))), (((UPPER(-1551298911)))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) FROM t0 INDEXED BY i11 WHERE (json_array_length(((('-98362416', NULL, '2R\n]')) BETWEEN ((0.24129183483259742, '2028254105', 0.9460519871233124)) AND (('-875440976', NULL, '#t'))), ((-1.703492361E9)|('-1537265420'))));SELECT (((CASE vt0.c2  WHEN 1481418194 THEN vt0.c2 ELSE NULL END))>((((((NULL)AND(t0.c41)))OR(t0.c41))))), CUME_DIST() OVER ( ORDER BY ((+ (vt0.c0)) IN ())  NULLS FIRST), ((((x'd949')-(t0.c41)))<(CASE WHEN vt0.c1 THEN vt0.c0 END)) FROM t0 ORDER BY ((CASE WHEN vt0.c1 THEN NULL WHEN vt0.c2 THEN '1916500828' WHEN v0.c0 THEN vt0.c1 END)<=(((((((((t0.c41)AND(t0.c41)))OR(v0.c0)))AND(vt0.c1)))AND(vt0.c1)))), (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST, CAST(((v0.c0) IS FALSE) AS NUMERIC);SELECT DISTINCT ((CAST(vt0.c2 AS REAL))GLOB((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))) FROM vt0 WHERE (CASE WHEN ('264445547' IN ()) THEN (~ (x'9d83')) WHEN CAST('740140790' AS INTEGER) THEN 0.4155000742373275 WHEN CASE WHEN '0.4900986781343556' THEN NULL END THEN ((((NULL)OR(NULL)))OR('TFOi')) WHEN CAST(NULL AS REAL) THEN (('2R\n]') NOTNULL) WHEN CAST(x'' AS NUMERIC) THEN TYPEOF(NULL) END) LIMIT -722205465; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (- (CAST(v0.c0 AS NUMERIC)))) OVER ( PARTITION BY ((((0.4337226093715094) BETWEEN (vt0.c0) AND ('㐋'))) NOTNULL), (((vt0.c0)||(v0.c0)) IN ())), ((vt0.c2)+(v0.c0)) COLLATE NOCASE, ((x'')*((((vt0.c0)) BETWEEN ((t0.c41)) AND ((0.0626033803972097))))), ((NULL) BETWEEN ((- (vt0.c1))) AND (SUM(t0.c41))), COUNT(*) OVER () FROM t0, v0, vt0 WHERE (TYPEOF(DISTINCT ((NULL)%(NULL)))); -- 1ms;
SELECT ((((vt0.c2)>>(vt0.c0)))==(((t0.c41)>>(1880281469)))) FROM v0, vt0 WHERE (((((NULL) BETWEEN ('kU') AND (NULL)))AND(((0.07248413711184887) NOTNULL))));SELECT DISTINCT TYPEOF(CAST(vt0.c0 AS TEXT)) FROM v0, vt0, t0 LIMIT -315027822; -- 0ms;
SELECT DISTINCT ((((4.857538E7)OR(t0.c41 COLLATE BINARY)))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM v0, t0, vt0 WHERE (((((('0.12439970032057901')) BETWEEN (('Sb')) AND ((x'fb7f')))) BETWEEN (LIKE(0X453d73f3, 0Xffffffffc6010729, '-')) AND (json_patch('핽-', '609508679'))));SELECT DISTINCT CAST(((vt0.c1)LIKE(vt0.c2)) AS BLOB) FROM t0 LIMIT -1642197229 OFFSET 1482032940;SELECT DISTINCT t0.c41, CAST((NOT (v0.c0)) AS NUMERIC), t0.c41 FROM vt0, v0, t0 WHERE (((((NULL) NOT BETWEEN (0.6033576631927072) AND (NULL))) BETWEEN (x'1036' COLLATE NOCASE) AND (CASE NULL  WHEN '' THEN NULL ELSE 0x4cf87500 END))); -- 0ms;
SELECT DISTINCT 0.2623365764036286 FROM vt0, t0 WHERE (((((x'') NOTNULL))|((('xiL]')LIKE('-1115531961'))))); -- 0ms;
SELECT DISTINCT vt0.c2, ((((((((GROUP_CONCAT(t0.c41))OR(((('', 1317477332, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((t0.c41, t0.c41, vt0.c2))))))AND(vt0.c0)))OR((NOT (vt0.c2)))))AND(CAST(vt0.c0 AS TEXT))), x'' FROM vt0, t0;SELECT ((((((((vt0.c2)OR(t0.c41)))AND(vt0.c0)))OR('265699194' COLLATE BINARY)))OR((~ (vt0.c2)))), ((NULL) IS FALSE) COLLATE RTRIM, ((CASE t0.c41  WHEN vt0.c1 THEN t0.c41 END) IS TRUE) FROM t0;SELECT DISTINCT UNLIKELY(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))) FROM vt0, v0 WHERE (((((NULL)AND(NULL)))AND(0.8520361345357761)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((vt0.c0))<((vt0.c1))) COLLATE NOCASE FROM t0, vt0; -- 0ms;
SELECT ALL (((('p0' COLLATE NOCASE)OR(((t0.c41) BETWEEN (v0.c0) AND ('')))))OR((- (vt0.c0)))), CASE (- (v0.c0))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (t0.c41)) THEN (NOT (vt0.c0)) END, ((((v0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)))>(CASE WHEN v0.c0 THEN vt0.c1 END)) FROM vt0, t0, v0 WHERE (CASE WHEN ((x'103f') BETWEEN (NULL) AND (x'')) THEN NULL WHEN ((x'')LIKE(689766351)) THEN UNLIKELY(DISTINCT 0.9016600376649345) WHEN LOWER(0.38043437323843066) THEN 0xffffffffcdfb61f5 ELSE CAST(0.4095667213902573 AS NUMERIC) END) LIMIT 314385296; -- 0ms;
SELECT DISTINCT vt0.c1, (('') IS FALSE), ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (t0.c41) AND (((vt0.c2)>=(vt0.c1)))) FROM v0, vt0 WHERE (((((('^l서CV	{,')<(NULL))))<>((x'c47f'))));SELECT ALL (CASE v0.c0  WHEN vt0.c2 THEN 'z#' WHEN '磚(acM~v&]' THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END IN ()) FROM vt0, t0, v0; -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN (t0.c41) AND (v0.c0)) COLLATE RTRIM COLLATE BINARY FROM vt0, t0;SELECT DISTINCT ((CAST(vt0.c2 AS NUMERIC))AND(((vt0.c0) IS TRUE))), ((((t0.c41)AND(v0.c0)))&(vt0.c1)), (- (NULL)), ((LTRIM(vt0.c0)) NOT BETWEEN (((vt0.c0)|(v0.c0))) AND ((((t0.c41, t0.c41, t0.c41)) NOT BETWEEN ((vt0.c0, t0.c41, vt0.c1)) AND ((0.16756008794323263, vt0.c2, v0.c0))))), (((vt0.c2 IN (vt0.c1, vt0.c2))) IS FALSE) FROM v0, t0, vt0 WHERE ((((0xffffffff8a4ad575)) NOT BETWEEN ((((NULL)&('-389811367')))) AND ((-9.2345829E7 COLLATE NOCASE)))); -- 1ms;
SELECT ((((((((((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))AND(((vt0.c1)&(vt0.c2)))))OR(((vt0.c2) NOT NULL))))AND(PRINTF(vt0.c2, vt0.c0, v0.c0))))AND(((vt0.c0) BETWEEN (0.21667927782261642) AND (vt0.c1)))) FROM t0, vt0, v0; -- 0ms;
SELECT DISTINCT ((((t0.c41) IS FALSE)) BETWEEN (((v0.c0)-(vt0.c0))) AND (((t0.c41) BETWEEN (vt0.c2) AND (vt0.c0)))), (((vt0.c0, t0.c41, v0.c0)) BETWEEN (((vt0.c1 IN ()), ((t0.c41) NOT NULL), ((vt0.c0)||(vt0.c1)))) AND (((t0.c41 IN ()), (~ (vt0.c1)), ((t0.c41)+(v0.c0))))), COUNT(AVG(vt0.c1 COLLATE RTRIM)), vt0.c2 COLLATE BINARY, LIKELY(DISTINCT 'Iv' COLLATE NOCASE) FROM vt0 WHERE (((((((NULL) NOT BETWEEN (0.3601055579615644) AND (x'')))AND(((x'')IS NOT(NULL)))))OR(NULL))) LIMIT -1730417950;SELECT DISTINCT ((vt0.c2) NOT BETWEEN (vt0.c0) AND ((('\k') IS TRUE))) FROM vt0 WHERE (((((NULL)||('B,a|H')))&(ROUND('lR', '1175035880')))); -- 0ms;
SELECT ALL CAST((x'' IN ()) AS REAL) FROM t0 WHERE ((((json_insert(NULL, 0.3473060407892873, '792376132')))==((((0.6383538626869542) NOTNULL))))); -- 0ms;
SELECT DISTINCT vt0.c2 FROM v0, t0 WHERE (((((((0.6765149465669938)OR(0.8709825983176581)))OR(NULL))) BETWEEN ((0.3526859252201109 IN ())) AND (((NULL) BETWEEN (0.8576049201523855) AND (NULL))))) GROUP BY ((((((v0.c0)OR(t0.c41)))AND(v0.c0)))GLOB((vt0.c2 IN ())));SELECT COUNT(*) OVER () FROM t0, v0, vt0; -- 1ms;
SELECT TRIM(((((vt0.c1)OR(t0.c41)))OR(v0.c0))) FROM vt0, v0, t0 NOT INDEXED; -- 0ms;
SELECT COUNT(vt0.c2) OVER (), (((v0.c0)) NOT BETWEEN (((- (t0.c41)))) AND (((((vt0.c1))>=((0.2141586260891638)))))), (IFNULL(DISTINCT t0.c41, vt0.c1) IN (CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c41 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END)) FROM t0 WHERE (((((x'47ae') IS TRUE)) BETWEEN (((x'') BETWEEN (x'') AND (x''))) AND ('0.7641375424316025'))) ORDER BY CAST(CAST(t0.c41 AS REAL) AS REAL)  NULLS FIRST;SELECT SUM(((vt0.c0)==(vt0.c2))) OVER ( ROWS (((x'') NOT NULL) IN ()) PRECEDING EXCLUDE NO OTHERS), ((((v0.c0)OR(CASE vt0.c0  WHEN vt0.c1 THEN NULL WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 END)))OR(((vt0.c2) ISNULL))), ((((vt0.c0)AND(ROUND(t0.c41, t0.c41))))AND(vt0.c1 COLLATE RTRIM)), ((((t0.c41) IS TRUE)) NOT NULL), (~ (x'e9ed')) FROM v0, vt0 GROUP BY CASE WHEN t0.c41 THEN vt0.c1 END COLLATE RTRIM HAVING vt0.c0;SELECT DISTINCT (+ ((~ (v0.c0)))) FROM v0; -- 1ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ((- (t0.c41)))), CAST(((t0.c41) IS FALSE) AS INTEGER), CAST(((vt0.c0) NOT NULL) AS REAL) FROM vt0, t0; -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY CASE (((vt0.c0))<>((t0.c41)))  WHEN vt0.c1 THEN ((NULL)IS NOT(v0.c0)) ELSE (('1769948281')LIKE(v0.c0)) END ASC) FROM v0 WHERE ((((~ (NULL)))IS NOT(((x'9339')AND(NULL))))) ORDER BY vt0.c0;SELECT DISTINCT v0.c0 FROM v0, t0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(t0.c41 COLLATE NOCASE)))AND(json_insert(v0.c0, vt0.c0, vt0.c0))) DESC, CAST(vt0.c0 COLLATE NOCASE AS REAL)  NULLS LAST;SELECT DISTINCT (+ (t0.c41 COLLATE RTRIM)), ((((vt0.c1)IS NOT(t0.c41)))+(((vt0.c1) NOTNULL))), ((((vt0.c0) ISNULL))+(vt0.c0)) FROM t0, vt0, v0 WHERE (TRIM((- ('425120393')), ((0.1462685284882892) NOT BETWEEN (0.2717231831518043) AND ('663528921')))); -- 0ms;
SELECT DISTINCT (((t0.c41 IN ())) IS FALSE) FROM vt0, t0 LIMIT 979967300; -- 0ms;
SELECT DISTINCT x'1a9cc543' FROM t0; -- 0ms;
SELECT ALL vt0.c0 FROM v0, vt0, t0; -- 1ms;
SELECT ALL CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c0 THEN vt0.c2 END AS REAL) FROM t0, vt0, v0 WHERE ((((x'df12')) BETWEEN ((CAST('0.4514002668623929' AS NUMERIC))) AND (((('-1227665842') ISNULL))))) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((vt0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1)))AND(((v0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(CASE WHEN -8.39163403E8 THEN vt0.c0 ELSE vt0.c0 END)), ((((t0.c41) NOTNULL))&(((vt0.c2)%(vt0.c2)))), (('-1304524133')%(((vt0.c2)<=(t0.c41)))) FROM vt0, v0;SELECT DISTINCT CAST(vt0.c0 AS TEXT) FROM vt0, v0 WHERE ((305057630 IN (IFNULL(0.4193602010284563, NULL)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))LIKE(MAX(vt0.c2))) FROM vt0, t0 WHERE (HEX(COALESCE(NULL, 0.8905380298363899))) LIMIT -435044030;SELECT CASE ((((((((t0.c41)OR(vt0.c0)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c2))  WHEN ((vt0.c0)OR(vt0.c1)) THEN '' WHEN t0.c41 COLLATE RTRIM THEN ((vt0.c1)+(vt0.c2)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END THEN AVG(vt0.c2) END FROM v0, vt0, t0 WHERE (((0X5bc4d57d)||(0.1113736813841657)) COLLATE BINARY); -- 1ms;
SELECT (((vt0.c2)||(v0.c0)) IN ()), SUM('') OVER ( ORDER BY UNLIKELY(DISTINCT t0.c41) COLLATE BINARY ASC  NULLS LAST, LTRIM((~ (v0.c0)), (vt0.c2 IN ()))), AVG(CASE WHEN '208573836' THEN vt0.c0 END) OVER () FROM v0 GROUP BY vt0.c0;SELECT DISTINCT ((((((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))AND((((vt0.c1, vt0.c2, vt0.c0))>=((0.2322697320512861, vt0.c0, vt0.c2))))))OR(((t0.c41) IS FALSE))) FROM vt0, t0, v0; -- 0ms;
SELECT ((548352749)LIKE(CASE WHEN vt0.c2 THEN vt0.c1 ELSE 0xffffffffaa39de4b END)), (((((((t0.c41)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(STRFTIME(v0.c0, vt0.c0, v0.c0))))AND(CAST(vt0.c0 AS BLOB))), ((((vt0.c2)OR(t0.c41)))+(COALESCE('{Q', vt0.c1))), (((vt0.c0))>=((NULL))) COLLATE NOCASE, (NOT ((+ (0.4063406805101972)))) FROM vt0, v0;SELECT DISTINCT 0.001163703749198941, ((+ (t0.c41)) IN ()), COUNT(vt0.c2) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))))<((CAST(vt0.c1 AS REAL)))), CAST('-879473875' AS INTEGER), ((CAST(vt0.c2 AS NUMERIC)) NOTNULL) FROM v0, t0;SELECT ALL CAST(((vt0.c0)+(vt0.c0)) AS TEXT) FROM vt0, v0 WHERE ((((((NULL) NOT NULL)))<((x'')))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((v0.c0) IS TRUE)), ((CAST(vt0.c2 AS REAL))-(SUM(v0.c0))), CAST((('Us')<>(1.524683084E9)) AS TEXT) FROM t0, vt0, v0; -- 0ms;
SELECT DISTINCT (((x'')-(vt0.c0)) IN ()) FROM t0, vt0, v0; -- 1ms;
SELECT DISTINCT ((CHAR(0.21945341465532153))%(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) FROM vt0;SELECT ALL CASE CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END  WHEN SUM(vt0.c0) THEN json_insert(vt0.c0, vt0.c2, vt0.c1) WHEN ((((((((t0.c41)OR(vt0.c0)))AND(vt0.c1)))OR(t0.c41)))OR(x'')) THEN (- (vt0.c2)) WHEN ((((v0.c0)OR(vt0.c1)))OR(vt0.c2)) THEN json_type(vt0.c2) END FROM v0, t0, vt0 GROUP BY ((((t0.c41) NOTNULL))IS(0.22856649786706207)), (((((((((('950225360')AND(t0.c41)))AND(vt0.c2)))AND(vt0.c2)))AND(0.4900986781343556))) NOT BETWEEN (NULL) AND (((vt0.c2) NOT BETWEEN (v0.c0) AND (t0.c41)))), (((((vt0.c1))<>((vt0.c1))))<(CAST(vt0.c0 AS REAL))) HAVING ((NULL)LIKE((v0.c0 IN ()))); -- 0ms;
SELECT ((vt0.c1)>(x'')) COLLATE RTRIM, CAST((((v0.c0, t0.c41, x'f0e5e75e'))<>((v0.c0, vt0.c1, v0.c0))) AS INTEGER), v0.c0 FROM v0, vt0, t0 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT CASE (+ (vt0.c2))  WHEN (((vt0.c1, v0.c0, 0.17293382331412555))>=((vt0.c2, vt0.c0, vt0.c0))) THEN vt0.c2 ELSE CAST(v0.c0 AS TEXT) END FROM t0, v0, vt0 WHERE (CASE WHEN ((((NULL)OR(x'')))OR(x'')) THEN ((NULL)IS NOT(x'')) END); -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM t0 WHERE ((((CAST(x'' AS BLOB)))=((CASE WHEN 0.4924055978678721 THEN '' WHEN 0.3351192140522036 THEN 0Xffffffffd45cc729 WHEN 0Xffffffffdee72e6a THEN '-1674246364' END)))); -- 0ms;
SELECT ((CAST(vt0.c0 AS REAL)) NOT NULL), CUME_DIST() OVER (), ((((vt0.c2)OR(vt0.c1)))OR(t0.c41)) COLLATE NOCASE FROM vt0, v0, t0; -- 0ms;
SELECT DISTINCT (+ (((t0.c41) IS TRUE))) FROM v0, vt0 WHERE (((('iZ6C'))!=((x'a36a'))) COLLATE RTRIM);SELECT CAST(TYPEOF(t0.c41) AS INTEGER) FROM vt0 LIMIT 277287057;SELECT AVG(((((((((t0.c41)AND(vt0.c1)))OR(vt0.c2)))OR(t0.c41)))AND(vt0.c1))) FILTER(WHERE '2028254105') OVER ( GROUPS BETWEEN (NOT (CAST(vt0.c1 AS REAL))) FOLLOWING AND ((v0.c0) NOTNULL) COLLATE BINARY PRECEDING) FROM vt0, t0, v0 WHERE (((-349917499 IN ()) IN ()));SELECT DISTINCT (NOT (LIKELY(DISTINCT t0.c41))), NULL, vt0.c0, CAST(COUNT(vt0.c1) AS BLOB), (((vt0.c1) BETWEEN (x'b75d') AND (t0.c41)) IN ()) FROM t0, v0;SELECT DISTINCT CAST(((v0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS BLOB) FROM vt0 WHERE ((~ ('690778359' COLLATE NOCASE)));SELECT ALL ((vt0.c0)LIKE(CAST(vt0.c2 AS TEXT))), (~ (t0.c41)) COLLATE RTRIM, CUME_DIST() OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((vt0.c2 IN ())) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM t0, vt0; -- 0ms;
SELECT DISTINCT LOWER(MAX(t0.c41)), ((((vt0.c2)||(v0.c0))) BETWEEN ((-555274646 IN ())) AND (CAST('vjq䬭曌' AS BLOB))), vt0.c1 FROM vt0, t0, v0; -- 0ms;
SELECT DISTINCT CASE CASE WHEN vt0.c1 THEN t0.c41 ELSE vt0.c1 END  WHEN LTRIM(vt0.c2, vt0.c2) THEN ((((((((t0.c41)AND(t0.c41)))AND(v0.c0)))OR(v0.c0)))OR(t0.c41)) ELSE ((((t0.c41)OR(t0.c41)))OR(vt0.c2)) END FROM v0, t0, vt0 ORDER BY CAST((+ (vt0.c2)) AS INTEGER) DESC; -- 0ms;
SELECT CASE WHEN t0.c41 THEN ((vt0.c0)<=(vt0.c0)) END FROM t0, v0, vt0 WHERE ((LIKELIHOOD(DISTINCT '', 0.029677088568342058) IN ())); -- 0ms;
SELECT (('1189832396')<<(CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t0.c41 THEN v0.c0 ELSE x'' END)), NULL, NULL FROM vt0, v0 WHERE ((((('448848165')*('HE')))>=(((('0.12414834343150372'))>((NULL))))));SELECT CASE (((vt0.c2))<=((vt0.c2)))  WHEN CAST('1056831664' AS BLOB) THEN (('')AND(t0.c41)) WHEN (v0.c0 IN (x'a928')) THEN ((((((((vt0.c2)OR(t0.c41)))AND(vt0.c0)))OR(v0.c0)))AND(t0.c41)) WHEN v0.c0 COLLATE NOCASE THEN TOTAL(vt0.c2) ELSE ((vt0.c2)%(vt0.c2)) END FROM t0, v0;SELECT DISTINCT AVG(UPPER(DISTINCT vt0.c1)) FROM vt0, v0; -- 0ms;
SELECT DISTINCT AVG((((('-374227521')OR(t0.c41)))AND(t0.c41))) FROM v0, vt0 NOT INDEXED WHERE ((- (((NULL)|(0.8326083656045079)))));SELECT DISTINCT CAST(((v0.c0)%(vt0.c0)) AS TEXT) FROM vt0, t0, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((+ (vt0.c2))), vt0.c1, ((((CAST(t0.c41 AS INTEGER))OR(MAX(vt0.c2, v0.c0))))OR(UPPER(vt0.c0))) FROM t0, vt0, v0 WHERE ((+ ((1.258956078E9 IN (894052867))))) ORDER BY ((('1558295620' IN (vt0.c0, '1191493007')))||(CAST(vt0.c0 AS TEXT))); -- 0ms;
SELECT DISTINCT ((((('0.05507928270256479')-(t0.c41))))<((CASE WHEN 7.11135866E8 THEN vt0.c1 WHEN t0.c41 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END))) FROM t0 WHERE (((((0.05314204760605701))<=((NULL))) IN ()));SELECT DISTINCT COALESCE(DISTINCT (vt0.c2 IN ()), CAST(vt0.c2 AS INTEGER), t0.c41, ((t0.c41)>=(v0.c0))) FROM t0, vt0 WHERE ((((('740140790') IS TRUE))=(x'' COLLATE RTRIM)));SELECT ALL ((((t0.c41) IS TRUE)) NOT BETWEEN (t0.c41) AND (((vt0.c1)>>(vt0.c1)))) FROM t0 GROUP BY ((SQLITE_VERSION())>>(((vt0.c0)IS(v0.c0)))), ((NULL) NOTNULL), 0.6166021154048801 HAVING CASE WHEN (vt0.c1 IN ()) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 0.698571525664032 ELSE t0.c41 END WHEN vt0.c2 COLLATE RTRIM THEN ((((t0.c41)AND(v0.c0)))AND(t0.c41)) WHEN ((1395762750) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END ELSE ((vt0.c2)+(vt0.c1)) END;SELECT DISTINCT (+ (x'd6a51e11')) FROM t0, vt0 WHERE ((STRFTIME(0.7978928522708864, 1721767637, 0.8893480444391572) IN (((NULL)AND('2074585713'))))); -- 0ms;
SELECT DISTINCT t0.c41, TIME(TOTAL(vt0.c0), CASE vt0.c0  WHEN v0.c0 THEN x'd4bb' END, (NOT (vt0.c1)), (vt0.c0 IN ()), vt0.c1 COLLATE RTRIM), CAST(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(v0.c0)) AS BLOB) FROM v0, vt0 WHERE ('1171126270') GROUP BY (~ ((NOT (v0.c0)))), ((((vt0.c2 IN ())))>((((vt0.c0) IS TRUE)))), ((((((((v0.c0 COLLATE BINARY)AND(((vt0.c1) NOT NULL))))AND(((t0.c41)+(vt0.c2)))))AND(v0.c0 COLLATE RTRIM)))AND(((vt0.c1) ISNULL))) HAVING ((PRINTF(t0.c41, vt0.c1, v0.c0)) IS FALSE) ORDER BY ((0.2849424594407147) BETWEEN (v0.c0) AND (((vt0.c2)/(v0.c0)))) DESC;SELECT DISTINCT LIKELIHOOD('1481453139', 0.21998890967295415) FROM t0, v0; -- 0ms;
SELECT DISTINCT QUOTE((v0.c0 IN ())), CASE WHEN vt0.c1 THEN x'' ELSE vt0.c2 END COLLATE BINARY, ((((((((((((((vt0.c2)AND(vt0.c1)))OR(v0.c0)))AND(1.191493007E9)))AND(t0.c41)))OR(vt0.c0)))AND(v0.c0)))|((- (v0.c0)))) FROM t0, v0 WHERE (CAST(((x'') NOT BETWEEN ('-833616724') AND (NULL)) AS BLOB));SELECT ALL ((vt0.c2 COLLATE NOCASE) NOT BETWEEN ('70724720') AND (((vt0.c2) ISNULL))) FROM v0, t0, vt0 WHERE ((('-1e500')*(0.956738869841609 COLLATE BINARY))); -- 0ms;
SELECT ALL AVG(v0.c0) FROM vt0, v0, t0 WHERE (CHAR(NULL COLLATE NOCASE)) GROUP BY (+ ((~ (t0.c41)))); -- 0ms;
SELECT DISTINCT CASE ((v0.c0)*(vt0.c1))  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c2 WHEN vt0.c1 THEN CAST(vt0.c2 AS INTEGER) WHEN ((vt0.c1) IS TRUE) THEN COUNT(t0.c41) ELSE ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) END FROM v0 WHERE (((TOTAL_CHANGES()) IS FALSE));SELECT DISTINCT CASE WHEN (((NULL, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c2, t0.c41)) AND ((NULL, vt0.c2, t0.c41))) THEN ((vt0.c2)<=(v0.c0)) WHEN t0.c41 COLLATE BINARY THEN vt0.c2 COLLATE RTRIM WHEN TYPEOF(vt0.c1) THEN CASE vt0.c1  WHEN v0.c0 THEN 0X435976a8 ELSE vt0.c0 END END, vt0.c1, SQLITE_SOURCE_ID() FROM vt0, v0, t0; -- 1ms;
SELECT DISTINCT (((((x'cea2', v0.c0, t0.c41, vt0.c1, vt0.c0))==((vt0.c1, v0.c0, vt0.c1, vt0.c0, vt0.c1))))GLOB(vt0.c1)) FROM t0, v0, vt0 WHERE ((CAST(162713669 AS BLOB) IN ((~ (0Xffffffffb34f1393))))); -- 0ms;
SELECT ALL (((- (vt0.c0)))>>(SUM(t0.c41))) FROM v0, t0, vt0 WHERE ((NOT (0.30136931611493234 COLLATE BINARY))); -- 0ms;
SELECT CAST(((vt0.c1)/(v0.c0)) AS NUMERIC) FROM t0 WHERE ((((('0.9527292803513663') BETWEEN (1.692295947E9) AND (x''))) BETWEEN (NULL) AND (0.49504057455375183 COLLATE RTRIM))) GROUP BY x'';SELECT DISTINCT ((((((t0.c41)<(t0.c41)))OR(((v0.c0) IS TRUE))))OR(1.917291564E9 COLLATE BINARY)) FROM v0, t0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM v0 WHERE (ABS(DISTINCT (0X34a41cbd IN ('1987401415')))); -- 1ms;
SELECT DISTINCT (LIKELIHOOD(x'', 0.7307567264012206) IN ()) FROM v0 WHERE (CASE ((((NULL)OR(x'')))OR(''))  WHEN ('167437559' IN ()) THEN ((x'') NOT BETWEEN (x'') AND ('')) ELSE (('K2y	g') IS TRUE) END); -- 0ms;
SELECT DISTINCT (v0.c0 IN ((v0.c0 IN ()), vt0.c1 COLLATE BINARY)) FROM t0, vt0 LIMIT -1642863430 OFFSET 1055729244;SELECT DISTINCT ((vt0.c2 COLLATE NOCASE)GLOB((- (vt0.c1)))) FROM t0;SELECT ((vt0.c2) NOT BETWEEN (((v0.c0)+(vt0.c2))) AND (CASE WHEN vt0.c1 THEN t0.c41 WHEN v0.c0 THEN 0.38183462868024654 WHEN vt0.c2 THEN t0.c41 ELSE vt0.c1 END)) FROM v0 WHERE ((((x'36b8')) NOT BETWEEN ((0.2531902824604634)) AND (((('-1773109649')GLOB(0.22256703930462718))))));SELECT ALL ((0.7641375424316025 COLLATE BINARY) NOT BETWEEN (((vt0.c2)IS NOT(vt0.c1))) AND (UPPER(DISTINCT vt0.c2))) FROM v0 WHERE (TYPEOF(((-8.39163403E8)<<(0.07252431648692192))));SELECT DISTINCT (((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1)<=(v0.c0))) AND ((~ ('Vt')))), ((vt0.c1)<('풰 ')), ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (TOTAL(v0.c0)) AND (CASE 0.0626033803972097  WHEN '' THEN v0.c0 END)), (((vt0.c1)%(vt0.c0)) IN ()), ((CAST(t0.c41 AS TEXT))<>(vt0.c2 COLLATE NOCASE)) FROM v0 WHERE ((((0.16756008794323263)) NOT BETWEEN (((('p0')IS NOT('')))) AND ((0Xffffffffeb9b5cbf COLLATE BINARY)))) GROUP BY ((((vt0.c1)>(t0.c41))) IS FALSE) HAVING (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)) IN (COUNT(*)));SELECT ALL IFNULL(DISTINCT vt0.c1, t0.c41) COLLATE BINARY, ((CASE WHEN vt0.c2 THEN t0.c41 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN v0.c0 END) ISNULL), '1336290529' FROM t0 WHERE (((x'')!=(1e500)) COLLATE NOCASE);SELECT DISTINCT 'e⯹' COLLATE BINARY, CASE 0.40829604103343686  WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c0)-(NULL)) ELSE LIKELIHOOD(DISTINCT 0.8085770005142435, 0.39527366327261304) END, x'806f' FROM t0 WHERE (CASE x''  WHEN RTRIM(0.16582013262478967) THEN ((-1728924814) NOTNULL) END);SELECT DISTINCT x'8ff2dccf' FROM t0 WHERE (((NULL)>>(((-1.415812709E9)<=(0.9879578055905807))))); -- 0ms;
SELECT ALL ((((((vt0.c0)IS(v0.c0)))AND((((vt0.c0, vt0.c2, v0.c0))==(('~S', v0.c0, t0.c41))))))AND(json_patch(vt0.c0, v0.c0))) FROM vt0, t0, v0 WHERE (UPPER(DISTINCT CASE WHEN 0.7910500673864787 THEN x'' END)); -- 0ms;
SELECT DISTINCT ((((((t0.c41)OR(vt0.c2)))OR(v0.c0))) NOT NULL) FROM v0, t0, vt0 WHERE (TRIM(CAST('' AS REAL), 0.5617610176620341 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (('')>>(MIN(t0.c41))) FROM v0, vt0 WHERE (CASE WHEN ((x'') IS FALSE) THEN CAST(0X29a708ad AS BLOB) WHEN CASE WHEN NULL THEN -1163350544 WHEN '905546650' THEN '-1382705806' WHEN NULL THEN 1.539626365E9 END THEN ((0.9476734400715227)GLOB(0.7260275341539424)) WHEN '792376132' THEN CASE WHEN 0.4092687254650701 THEN '' END END);SELECT ((CAST(-297736140 AS REAL)) NOT BETWEEN (-1521493111) AND ((((vt0.c1))>=((vt0.c2))))), (NOT (vt0.c2)) COLLATE NOCASE, COUNT(*) FROM v0, vt0, t0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c1) BETWEEN (x'') AND (v0.c0))) OVER ( ORDER BY CAST(v0.c0 COLLATE RTRIM AS BLOB)), (+ (((((vt0.c2)AND(vt0.c0)))OR(0.5969869245993512)))), vt0.c1 FROM vt0 WHERE ((((NOT (0X5ecae802))) IS FALSE)) GROUP BY t0.c41, (((v0.c0, 0.37804145406811773, v0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE), ((vt0.c2) IS FALSE), GLOB(vt0.c1, vt0.c1))) AND ((NULL, '', CAST(t0.c41 AS TEXT)))), ((((t0.c41)<(NULL))) NOT BETWEEN (x'ba60') AND (v0.c0 COLLATE BINARY)) HAVING UNLIKELY((~ (vt0.c2))) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(0xffffffffe1f97c4b)) THEN ((v0.c0) NOT BETWEEN (t0.c41) AND (v0.c0)) END  NULLS LAST;SELECT ALL CASE WHEN (NOT (-1526121020)) THEN v0.c0 END, GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN v0.c0 THEN t0.c41 END), vt0.c2 FROM v0 WHERE ((((0.6881835734193534)) NOT BETWEEN ((-1.255297735E9)) AND ((CASE WHEN NULL THEN '' WHEN 0.10490674264867583 THEN NULL WHEN 0.02178834642065297 THEN '5115156555432436861' WHEN -1.965902992E9 THEN NULL WHEN '792376132' THEN NULL END)))) ORDER BY (((vt0.c2 COLLATE NOCASE))<(((((vt0.c1, vt0.c1, v0.c0, v0.c0, vt0.c1))<=(('-1293225437', vt0.c1, t0.c41, vt0.c2, vt0.c2)))))), (((x'4c97')) BETWEEN (((NOT (v0.c0)))) AND ((CASE v0.c0  WHEN 'qwsq' THEN vt0.c1 END))) ASC;SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((0.10098142898470075) BETWEEN ((((x'f89b'))>=((0.4235048985165617)))) AND ((~ (''))))) LIMIT 1218667619 OFFSET 2143445054; -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE RTRIM)+(COALESCE(vt0.c0, v0.c0))) FROM vt0, t0;SELECT DISTINCT (((((((((vt0.c2 IN (vt0.c0, vt0.c1)))OR((((t0.c41))==((vt0.c1))))))OR(((vt0.c2)+(vt0.c2)))))AND(t0.c41 COLLATE NOCASE)))OR(((vt0.c2) IS TRUE))) FROM v0, vt0, t0; -- 0ms;
SELECT NTILE(((((vt0.c2))<((v0.c0))) IN ())) OVER () FROM v0, t0, vt0 WHERE (((((0.47394967833239465)IS NOT(0xffffffff8d8d10d9)))GLOB((('-1604788764')>=('1189832396'))))); -- 0ms;
SELECT ALL ((COUNT(*))!=((v0.c0 IN ()))), (((((t0.c41)) NOT BETWEEN ((vt0.c0)) AND (('-810121353')))) NOT BETWEEN ((NOT (vt0.c1))) AND (((((v0.c0)OR('')))AND(vt0.c0)))), (- ((((vt0.c2))!=((t0.c41))))), CASE WHEN json_extract('', v0.c0) THEN GROUP_CONCAT(vt0.c2) END, (((NOT (vt0.c1))) BETWEEN (vt0.c2) AND (MIN(t0.c41))) FROM vt0, v0;SELECT (~ (CASE vt0.c2  WHEN vt0.c0 THEN v0.c0 END)) FROM vt0, v0; -- 0ms;
SELECT DISTINCT 1917291564 FROM v0, vt0, t0 ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE t0.c41 END) NOT BETWEEN (LIKELIHOOD(vt0.c2, 0.7686700739918969)) AND (((((((((vt0.c2)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT NTH_VALUE((~ (((vt0.c2) ISNULL))), CASE ((vt0.c2)=('℻|'))  WHEN CAST(t0.c41 AS INTEGER) THEN ((vt0.c2)<<(vt0.c0)) WHEN (t0.c41 IN ()) THEN NULL WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN ('-886976237') AND (vt0.c1)) ELSE CASE WHEN vt0.c0 THEN vt0.c2 END END) OVER (), (CASE vt0.c2  WHEN vt0.c0 THEN x'ce18' WHEN vt0.c2 THEN vt0.c0 WHEN '' THEN vt0.c2 END IN (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))), '1917291564' FROM vt0, t0 GROUP BY ((vt0.c1)<<(((vt0.c2)<=(vt0.c0)))) LIMIT 376843045;SELECT DISTINCT 0.9862624393769696, ('' IN (COUNT(*))), (((vt0.c2)) BETWEEN (((((t0.c41))=((vt0.c0))))) AND ((v0.c0))) FROM t0 WHERE ((((((0x56af3b86)) NOT BETWEEN ((x'')) AND ((-1.115531961E9))))IS NOT(CASE ',''BQgAk(p'  WHEN 275688514 THEN 'ep' END)));SELECT COUNT(*) OVER ( PARTITION BY CAST(vt0.c1 AS BLOB), v0.c0) FROM t0 GROUP BY (('''}<{')/(vt0.c1 COLLATE BINARY)) HAVING (CASE t0.c41  WHEN x'' THEN vt0.c1 END IN ());SELECT ALL json_valid(CASE '0.13667385725282644'  WHEN v0.c0 THEN t0.c41 WHEN v0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END) FROM t0, v0, vt0 LIMIT -249556295 OFFSET -821513048; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) OVER (), ((((((((((vt0.c1)AND(t0.c41)))OR(t0.c41)))AND('920490403')))OR(vt0.c2))) BETWEEN (COUNT(vt0.c2)) AND (CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 ELSE t0.c41 END)), ((t0.c41)-(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((('')IS NOT('-2121867971')) IN ())) ORDER BY (((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ()) ASC  NULLS FIRST;SELECT (CASE WHEN vt0.c1 THEN vt0.c2 END IN (AVG(v0.c0), CAST(vt0.c0 AS BLOB))) FROM vt0;SELECT ALL (- (vt0.c1)) COLLATE RTRIM FROM t0, vt0; -- 0ms;
SELECT (((vt0.c1)LIKE(t0.c41)) IN ('1679353357')), AVG(((((vt0.c0)AND(t0.c41)))AND(vt0.c2))) OVER (), (((- (v0.c0)))IS((0x6ff15751 IN ()))) FROM vt0 WHERE (x'');SELECT ALL (- ((~ (vt0.c2)))), x'', (~ (CASE WHEN vt0.c1 THEN vt0.c0 END)), '-1742528286', ((((vt0.c2)IS(t0.c41)))OR(CAST(vt0.c0 AS NUMERIC))) FROM t0, v0 WHERE (UNICODE(x'')) ORDER BY t0.c41  NULLS LAST;SELECT DISTINCT (((- ('0.31189087120096415'))) IS TRUE) FROM vt0, t0 WHERE (((((0.9256582393335695) NOT BETWEEN (0.5451740530705506) AND (x'')))OR(((NULL)*(x''))))); -- 0ms;
SELECT DISTINCT SUM((v0.c0 IN ())) FROM vt0, v0, t0 WHERE (((((((0.9858535116230751)AND('!䲾4Wdr>')))AND((('-1352631758') NOT BETWEEN (0.4047893850447303) AND (NULL)))))OR(HEX(NULL)))) LIMIT -879473875; -- 0ms;
SELECT ALL (AVG(NULL) IN ()), (- (((vt0.c1)+(vt0.c0)))), AVG(((0.7730874492622369)+(vt0.c2)) COLLATE RTRIM) OVER (), (((((NULL)OR(v0.c0)))AND(v0.c0)) IN ()), ((t0.c41 COLLATE BINARY)>(((((vt0.c0)AND(v0.c0)))AND('1191493007')))) FROM vt0, v0, t0 ORDER BY (((((+ (v0.c0)))AND(((vt0.c0)>(v0.c0)))))AND(((t0.c41) NOT BETWEEN (vt0.c1) AND (x'')))); -- 1ms;
SELECT DISTINCT NTH_VALUE((x'898a' IN ()) COLLATE NOCASE, (((('')AND(vt0.c1))) NOT BETWEEN (vt0.c0) AND ((vt0.c2 IN ())))) OVER () FROM vt0 LIMIT -992503443 OFFSET 1678891208;SELECT DISTINCT (vt0.c2 COLLATE RTRIM IN (CAST(v0.c0 AS NUMERIC), MAX(vt0.c0))) FROM vt0, t0, v0 LIMIT 1199830259 OFFSET -1455076290; -- 1ms;
SELECT ALL ((vt0.c1)/(CASE x''  WHEN vt0.c2 THEN t0.c41 ELSE vt0.c1 END)) FROM v0 WHERE ((((((x'')<(0X7d28d9ed)), '-1' COLLATE BINARY, (~ (''))))<((CAST(NULL AS BLOB), ((x'b0de')==('1819561486')), NULL COLLATE NOCASE))));SELECT ((((((vt0.c1)AND('-387535567')))OR(vt0.c2)))==((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) FROM vt0 GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT RANK() OVER (), (((v0.c0, t0.c41, '-1964607680')) NOT BETWEEN ((COUNT(vt0.c0), ((t0.c41)==(v0.c0)), COUNT(vt0.c0))) AND ((((('TRUE'))>=((vt0.c2))), vt0.c2, ((vt0.c0)=(t0.c41))))), NULL FROM vt0, v0, t0 ORDER BY LIKELY(((t0.c41) BETWEEN (t0.c41) AND (v0.c0)))  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c41 FROM vt0, v0 WHERE (((((x'') BETWEEN (NULL) AND (x'9c89')))<(((((((((-1373845332)AND('')))OR(1851137085)))AND('-555274646')))OR(NULL)))));SELECT DISTINCT CAST(SUBSTR(0xffffffffb23e8a9b, vt0.c1) AS INTEGER) FROM vt0, t0, v0 WHERE (((((('i#%f3&3䐲s' IN ()))AND((('33818860')||(',nowu')))))OR((((0X79c4dd4e, 'Z', '1387995340'))<((503726588, x'afd5', '-657074777')))))); -- 1ms;
SELECT DISTINCT COUNT(*), NULL, LEAD((((~ (t0.c41))) IS TRUE), ((TRIM(vt0.c2))<>((vt0.c2 IN (vt0.c2)))), (CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END IN ())) OVER (), 1773175549, UNLIKELY(DISTINCT '{}C6') FROM vt0, t0, v0 WHERE (CASE CAST(x'' AS INTEGER)  WHEN NULL THEN CASE WHEN NULL THEN '-1215696119' END END); -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ('1214313352')))+(CAST(vt0.c1 AS TEXT))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ ((vt0.c0 IN ()))), (((t0.c41)) BETWEEN ((CASE WHEN vt0.c2 THEN t0.c41 ELSE '-1' END)) AND ((vt0.c2))), (((vt0.c0, t0.c41, vt0.c1)) NOT BETWEEN ((CAST(t0.c41 AS NUMERIC), GROUP_CONCAT(vt0.c2), v0.c0)) AND ((CAST('' AS INTEGER), LOWER(vt0.c0), TOTAL(v0.c0)))) FROM t0 INDEXED BY i11, vt0, v0 WHERE ((((((((('7/y3贤')AND(1135312772)))OR(NULL)))AND(((((NULL)OR(0.7534093499313255)))OR(0.8096029796089136)))))OR('1904997126')));SELECT DISTINCT 0xffffffffb67c95f4 FROM t0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)AND(x'1b27')) AS INTEGER) FROM vt0 WHERE ((((+ (x''))) NOT BETWEEN (((-1665398937)!=(0.5478205759683752))) AND (((((0.3684205987504531)OR(0.0075475769133498405)))AND('a9'))))); -- 0ms;
SELECT DISTINCT vt0.c2, ROW_NUMBER() OVER (), (((CASE WHEN t0.c41 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c41 THEN vt0.c1 ELSE vt0.c0 END))<=(((('^Zoi兝H')OR(t0.c41))))) FROM v0;SELECT DISTINCT LEAD(CAST(CAST(vt0.c1 AS REAL) AS TEXT), (CAST(v0.c0 AS INTEGER) IN (LIKELY(DISTINCT 'C/'))), (NOT ((+ (vt0.c1))))) OVER () FROM v0, vt0, t0; -- 0ms;
SELECT ALL ((v0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)), (((vt0.c0 IN ()))|((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))), CASE WHEN ((v0.c0)-(vt0.c2)) THEN vt0.c2 ELSE (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((t0.c41))) END FROM vt0, v0 WHERE (LOWER(DISTINCT CASE 0.3803150534393279  WHEN NULL THEN 'ezq,~l?' ELSE x'' END));SELECT (((v0.c0) NOT BETWEEN (vt0.c1) AND (t0.c41)) IN ()) FROM v0, vt0, t0 WHERE ((((('-845435332')AND('87LvZ+*')))AND(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (vt0.c0)) THEN ((((vt0.c0)AND(v0.c0)))OR(NULL)) END FROM vt0, v0; -- 1ms;
SELECT DISTINCT x'52b5' FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((v0.c0) BETWEEN (t0.c41) AND (vt0.c0)))>=(COUNT(*))), v0.c0, (- (COUNT(*))) FROM vt0, v0 WHERE ((+ (CAST(x'' AS BLOB))));SELECT DISTINCT (NOT ((vt0.c2 IN ()))) FROM vt0 WHERE (((('' IN ()))*(7.4014079E8 COLLATE NOCASE))); -- 0ms;
SELECT ((t0.c41)/(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))), (('e[' COLLATE RTRIM) IS TRUE), CAST((- (t0.c41)) AS REAL) FROM t0;SELECT x'', (((vt0.c2 IN ()))<<(((vt0.c0)<>(vt0.c1)))), (((((v0.c0)AND(vt0.c0)))OR('1002263911')) IN ()) FROM vt0 WHERE (((-244965583 COLLATE BINARY)>(((420741923)|(NULL))))); -- 0ms;
SELECT DISTINCT CAST(((0xffffffff90f7adb8) IS FALSE) AS NUMERIC), 0.9393893519830053, TOTAL(vt0.c2) FROM t0;SELECT ALL ((vt0.c2 IN (vt0.c1)) IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) FROM t0, vt0 LIMIT -2121867971 OFFSET 1485458882; -- 0ms;
SELECT ALL COUNT(((vt0.c0)OR(t0.c41))), ((COUNT(t0.c41))LIKE(((vt0.c1) BETWEEN (t0.c41) AND (vt0.c1)))), ((((vt0.c0) NOTNULL)) IS TRUE) FROM vt0, v0, t0; -- 0ms;
SELECT ALL ((COUNT(vt0.c2)) NOT BETWEEN ((v0.c0 IN ())) AND (0.38835470069691547)) FROM v0 NOT INDEXED LEFT OUTER JOIN t0 ON json_remove(t0.c41 COLLATE BINARY, CASE WHEN x'' THEN vt0.c0 END, CASE WHEN 0.7156443848625351 THEN vt0.c0 ELSE t0.c41 END, ((t0.c41)||(vt0.c2))) GROUP BY (((vt0.c0 IN (t0.c41)))/((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))));SELECT DISTINCT ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c41)))!=(CASE WHEN t0.c41 THEN vt0.c0 ELSE vt0.c2 END)), (((~ (vt0.c2))) NOT BETWEEN (((v0.c0) BETWEEN (t0.c41) AND (vt0.c2))) AND ((((vt0.c0, vt0.c0, vt0.c0))>((v0.c0, v0.c0, vt0.c1))))), (NOT (vt0.c1)) COLLATE RTRIM FROM t0 WHERE (((((((NULL)AND('-2060400795')))AND(NULL))) ISNULL));SELECT DISTINCT v0.c0 FROM t0;SELECT DISTINCT CASE ((vt0.c1) IS FALSE)  WHEN NULL THEN ((vt0.c2)AND(vt0.c1)) END FROM vt0, v0, t0 WHERE (((6.8580016E7 IN ()) IN ())) GROUP BY ((vt0.c2)%((vt0.c2 IN ()))), ((((TYPEOF(DISTINCT t0.c41))OR(((v0.c0)GLOB(vt0.c2)))))OR(((vt0.c1)LIKE(0.8069263162681423)))), (((NULL))>((((v0.c0) ISNULL)))), ((((t0.c41)<=(vt0.c0)))||(((t0.c41)+(NULL)))), CAST((NOT (t0.c41)) AS REAL) HAVING (((((vt0.c2, vt0.c2, vt0.c1))>=((v0.c0, t0.c41, vt0.c1)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (x'')); -- 0ms;
SELECT ALL CAST(CASE NULL  WHEN vt0.c0 THEN t0.c41 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c2 THEN vt0.c1 END AS REAL) FROM vt0, t0, v0; -- 1ms;
SELECT ALL CAST(json_array_length(vt0.c1, t0.c41) AS REAL), json_extract((vt0.c1 IN ()), (((t0.c41, vt0.c1, 0.13148270526766614))<((v0.c0, vt0.c1, v0.c0)))), ((((0.32942582955036315) NOT BETWEEN (vt0.c2) AND (t0.c41))) ISNULL) FROM vt0 WHERE (x'');SELECT (((((v0.c0)AND(vt0.c1)))AND(vt0.c1)) IN ()) FROM t0, vt0 WHERE (((((((x'')OR(x'')))AND('yC'))) IS FALSE)); -- 0ms;
SELECT ((((v0.c0) BETWEEN (vt0.c0) AND (NULL)))OR(CAST(v0.c0 AS TEXT))) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((CAST(0.9119390097696374 AS REAL))) AND ((IFNULL(x'8ab4', NULL)))));SELECT ALL (((vt0.c0) NOT NULL) IN ()) FROM vt0, v0, t0; -- 0ms;
SELECT CAST(vt0.c2 AS REAL) FROM t0, v0;SELECT DISTINCT ((((v0.c0) NOTNULL))>>(COUNT(*))), (((vt0.c0)) NOT BETWEEN ((COALESCE('', x'34a3'))) AND (((((vt0.c2, v0.c0, v0.c0))<=((t0.c41, vt0.c1, t0.c41)))))), CAST(vt0.c2 AS TEXT) COLLATE BINARY, (((vt0.c0 IN (v0.c0, vt0.c0))) BETWEEN (CASE WHEN t0.c41 THEN vt0.c0 ELSE vt0.c2 END) AND ((+ (vt0.c2)))), ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))AND(GROUP_CONCAT(t0.c41))))AND(MAX(vt0.c0))) FROM t0, v0 WHERE (((NULL COLLATE RTRIM)LIKE((2090861429 IN ()))));SELECT x'6adbb161' FROM v0, vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c2 IN ()) AS TEXT), (- ((NOT (t0.c41)))), ((vt0.c0)LIKE(CASE WHEN t0.c41 THEN v0.c0 WHEN t0.c41 THEN vt0.c2 WHEN vt0.c2 THEN 0.8982878499980125 END)) FROM t0, v0;SELECT DISTINCT t0.c41 FROM vt0, v0 WHERE (((-726858702) BETWEEN (QUOTE('.h')) AND (CAST(x'4521c31b' AS INTEGER)))) LIMIT 1504974734 OFFSET 318241458;SELECT (LOWER(DISTINCT vt0.c2) IN ((+ (t0.c41)))) FROM vt0, t0, v0 ORDER BY ((CAST(t0.c41 AS TEXT))||(((t0.c41)OR(v0.c0))))  NULLS LAST, ((CAST(v0.c0 AS BLOB))||(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT 878791814 OFFSET 1291351296; -- 1ms;
SELECT vt0.c1, NULL, (+ ((t0.c41 IN (vt0.c2)))) FROM vt0, t0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM v0, t0 ORDER BY x'' DESC  NULLS FIRST, NULL ASC  NULLS LAST; -- 0ms;
SELECT ALL t0.c41, CAST(((vt0.c2) BETWEEN (NULL) AND (vt0.c2)) AS BLOB), ((((vt0.c0) IS TRUE))>((~ (NULL)))) FROM t0 WHERE ('k2o)JX');SELECT CAST('711135866' AS REAL) FROM t0, v0, vt0 WHERE ((((((0.6830572117436601)) NOT BETWEEN ((0.964438781711504)) AND ((NULL))))>=(CAST(113380544 AS INTEGER)))) GROUP BY (- (v0.c0 COLLATE BINARY)); -- 0ms;
SELECT '1917291564' COLLATE NOCASE COLLATE RTRIM FROM v0 LIMIT 740140790; -- 0ms;
SELECT ALL CAST(((((0.3404401078668631)AND('')))OR(t0.c41)) AS BLOB) FROM t0, v0 WHERE (((((NULL) NOT BETWEEN ('937946543') AND ('48575380')))LIKE(json_patch('', x''))));SELECT DISTINCT ((((vt0.c2)IS(vt0.c2))) IS FALSE) FROM t0;SELECT DISTINCT ((t0.c41 IN (vt0.c1, vt0.c0)) IN ()) FROM vt0, t0, v0; -- 0ms;
