-- Time: 2024/06/07 07:29:05
-- Database: database0
-- Database version: 3.40.0
-- seed value: 589499300
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1634883592,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('-1634883592', (((((((((- (951690211)))AND(CAST(0.4254477742276406 AS INTEGER))))AND(((x'') BETWEEN (0.439818206368474) AND ('951690211')))))AND(((x'') NOT BETWEEN ('-1634883592') AND (0.6249450860169582)))))OR((NULL IN ()))), NULL, 0.571177838035566, 'L	Znkdfb'), (-1.634883592E9, 0.2859797588786579, 1670584302, 'L	Znkdfb', NULL), (1.670584302E9, '0.6249450860169582', NULL, x'', '-1233287852'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'3f5d'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '54302'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37412'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35755'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1145608167); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.439818206368474); -- 0ms;
UPDATE rt1 SET c1=x'', c1=x'' WHERE CASE rt1.c2 COLLATE NOCASE  WHEN (0.7410901908443366 IN (rt1.c1, rt1.c3, rt1.c1)) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) END; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL), ('-m'), ('_'); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2068254864);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 951690211);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13044'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA cache_spill; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (x'eb566239'), (NULL); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1062253858); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (-1.233287852E9); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.7070251822351441), (0.8809394254224056), (NULL); -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3, c4, c0, c2) VALUES (x'9964', '1616172191', 2.068254864E9, NULL, -1634883592); -- 0ms;
INSERT OR FAIL INTO rt1(c3, c2, c4) VALUES (NULL, NULL, 1933342980), (x'', 'ElN		k|#0', 'Cꟸ'), (0.4177868740823193, NULL, 0.8809394254224056); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (''), (9.51690211E8); -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(x'029b'); -- 0ms;
PRAGMA main.journal_mode = TRUNCATE; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (',wfKa싖U'), ('ElN		k|#0'), (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('1933342980', 0.8875131088745775, ((load_extension(0xffffffff8758c2d6, -1278209493)) BETWEEN ((NULL IN ())) AND ((((0.9857657988274572))=((0.42979721106477886))))), 0.3858285535461947, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('1309203411'), (x'1565'), (((((((x'')AND(-991414635)))AND(0X733c7904))) IS TRUE)); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c4, c1, c2, c0, c3) VALUES (0.265196101263071, '', 0.6249450860169582, x'', 0x59d400eb); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c1, c4) VALUES ('{TA', 0.07530683649059067, NULL), (0.5014154902039832, 'l	znkdfb', 's0开'), (1309203411, 1629649366, 0.5294795534082554); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(x'') WHERE (((('' IN ()), ((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)), ((rt1.c4) ISNULL)))<((CAST(rt1.c2 AS TEXT), ((rt1.c2)<=(rt1.c0)), (rt1.c1 IN ())))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1068284839);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7964'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1194908067);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2105430647);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('2018019968'), ('Cr~}'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.7389954206110603), (1.629649366E9), ('1694398870'); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c0) VALUES (x'', '2101170622'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 343173473); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1163908468,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=881592693,5');\n; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(x'') WHERE TRIM(DISTINCT vt0.c0 COLLATE NOCASE); -- 1ms;
PRAGMA main.automatic_index; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1651778039,3');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1136415947); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15852'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1697079394);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 881415168); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1019744400,6');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 503638778); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((~ (vt0.c0)))))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)AND(vt0.c0)))); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE (+ (((vt0.c0) IS FALSE))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46638'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12631'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2038357255); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c4, c0, c2) VALUES (0.265196101263071, -1255920551, '1933342980', '-1285445370'); -- 0ms;
INSERT OR REPLACE INTO rt1(c4, c1, c2, c0) VALUES (x'9b23', 0.08741712718348682, 483098802, 862377611); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.4829565254318131); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c3) VALUES (x'', x''); -- 1ms;
INSERT OR ABORT INTO rt1(c3) VALUES (NULL), (0.40035188881277217), ('O/p.'); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c1, c3, c2) VALUES (x'f14e', '', 0x37f3174, '-1233287852'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('S,'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, '1616172191', '>*8L3tw*<', '1933342980', NULL); -- 0ms;
UPDATE rt1 SET (c0)=(0.9917093223836391) WHERE ((((rt1.c4)OR(rt1.c2)))AND(rt1.c3)) COLLATE BINARY; -- 0ms;
UPDATE rt1 SET c4=NULL WHERE CAST(((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)) AS INTEGER); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.application_id = 8083926794724079097; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c4, c3, c2, c1) VALUES ('881592693', NULL, x'f3f7', 0.8062853406973464, 0x17161d1a); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-889131197'), (0.40035188881277217), (x''); -- 0ms;
INSERT OR ABORT INTO rt1(c3) VALUES ('1956560899'); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (x''); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1509451224); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 521580759); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X2bdc04ee); -- 0ms;
PRAGMA integrity_check; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((rt1.c2)<=(rt1.c4)) COLLATE BINARY FROM rt1, vt0; -- 0ms;
SELECT ALL ((((rt1.c2)<=(rt1.c3))) NOT NULL) FROM rt1 WHERE (((CASE x'e7a0'  WHEN x'' THEN '0.9917093223836391' ELSE 0.5564209003684056 END)IS NOT(((0.1205666793597443) NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((rt1.c0) NOT BETWEEN ('TX') AND (rt1.c4)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)))) FROM rt1, vt0 WHERE (CHANGES()); -- 0ms;
SELECT DISTINCT 0x6054d49f FROM rt1, vt0; -- 0ms;
SELECT DISTINCT ((((rt1.c3)<(rt1.c3))) BETWEEN (TOTAL(vt0.c0)) AND (((rt1.c2) NOTNULL))), rt1.c0, x'558c' FROM vt0 LIMIT -631223996;SELECT (((((((((rt1.c1 IN ()))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c4 END)))AND((((rt1.c0))>((rt1.c2))))))AND(rt1.c0)))OR(((rt1.c3)*(rt1.c2)))) FROM rt1 WHERE (CASE ((NULL) BETWEEN ('-1548065145') AND (735839470))  WHEN ((1721658955) NOTNULL) THEN ((('-1412550287')) BETWEEN ((x'2c17')) AND ((x''))) END);SELECT ALL ((((((((((rt1.c4) IS FALSE))AND(CAST(rt1.c3 AS NUMERIC))))AND(vt0.c0 COLLATE RTRIM)))AND(((((NULL)OR(rt1.c1)))OR(vt0.c0)))))OR(CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN '0.42979721106477886' THEN rt1.c0 END)) FROM rt1, vt0 WHERE (((('-1285445370' IN ())) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt1.c2  WHEN vt0.c0 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END THEN CAST(rt1.c1 AS REAL) WHEN (vt0.c0 IN ()) THEN ((rt1.c1)<(rt1.c1)) WHEN ((rt1.c2)=(rt1.c2)) THEN CAST(rt1.c2 AS BLOB) END FROM rt1, vt0 WHERE (((((CAST('-1351655949' AS INTEGER))OR(((((((((x'd986')OR(0x3259570b)))AND(0X1cc50c40)))AND(NULL)))AND(x'')))))OR(((0.4885386935772196) IS TRUE)))); -- 0ms;
SELECT DISTINCT SUM(PRINTF(rt1.c1)) OVER ( ORDER BY x'' ASC  NULLS LAST), ((vt0.c0) IS TRUE), (+ ((+ (rt1.c2)))), (+ ('2068254864')), ((json_extract(rt1.c1, rt1.c0)) NOT BETWEEN ((vt0.c0 IN (rt1.c3, rt1.c4))) AND (SUM(rt1.c4))) FROM rt1 WHERE (((((CASE NULL  WHEN NULL THEN '0.4177868740823193' WHEN 0x4ed81dbc THEN NULL WHEN 1.670584302E9 THEN 0.4829565254318131 END)AND(((((0.526752341386761)AND('䗙Ӯi4&9eAo')))OR('')))))OR(CAST(1315577002 AS INTEGER))));SELECT ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((rt1.c0)>>(rt1.c2)))) FROM vt0 GROUP BY (~ (((rt1.c0) NOTNULL)));SELECT ALL CAST((vt0.c0 IN ()) AS NUMERIC), (((rt1.c4 IN ())) NOT BETWEEN (((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))) AND ((('o')|(vt0.c0)))), CAST(SUM(vt0.c0) AS REAL) FROM rt1, vt0 WHERE (LOWER(json_valid(0.5813965875054214))); -- 0ms;
SELECT DISTINCT (~ (0.571177838035566)) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE WHEN vt0.c0 THEN (((vt0.c0))==((vt0.c0))) END) OVER () FROM vt0; -- 0ms;
SELECT LEAD(((rt1.c3)-(rt1.c0)) COLLATE NOCASE, ((((rt1.c0)IS NOT(rt1.c2)))||(((rt1.c3)<(rt1.c0)))), (((rt1.c1 IN (rt1.c0, rt1.c4)))>>((NOT (rt1.c3))))) OVER (), MAX(CAST(rt1.c4 AS NUMERIC)), CAST((vt0.c0 IN ()) AS BLOB) FROM rt1; -- 0ms;
SELECT (((('''')AND((rt1.c4 IN ()))))AND(rt1.c2 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT rt1.c2) COLLATE RTRIM FROM rt1, vt0 WHERE (((((CASE WHEN NULL THEN '-1559177240' ELSE '735839470' END)AND(('951690211' IN ()))))OR(NULL))) LIMIT -1060364351; -- 0ms;
SELECT (SUM(rt1.c3) IN ('TX')) FROM rt1 WHERE (((highlight(x'3dac', '483098802', x'', NULL)) ISNULL));SELECT DISTINCT x'' FROM rt1, vt0; -- 0ms;
SELECT ALL (((rt1.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((MIN(rt1.c3)))) FROM vt0, rt1; -- 1ms;
SELECT ALL (((rt1.c1)) NOT BETWEEN (((~ (rt1.c0)))) AND (((+ ('u'))))) FROM vt0 WHERE (((((NULL)OR(0.2738639681977857)))AND(0.6173995349318088)) COLLATE NOCASE);SELECT DISTINCT AVG(rt1.c3 COLLATE BINARY COLLATE BINARY) FROM rt1, vt0 ORDER BY ((x'') NOT NULL); -- 0ms;
SELECT ALL SUM(((rt1.c3) BETWEEN ('2115844219') AND (x''))) OVER (), COUNT((NOT (rt1.c2))), (~ ((NOT (rt1.c4)))), UNLIKELY(CAST(x'd3e4' AS REAL)), (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c4)) IN ()) FROM vt0, rt1 WHERE (((CASE WHEN x'8ee5' THEN 0.7027319174120008 ELSE '-1351655949' END)<>(('' IN ())))); -- 0ms;
SELECT DISTINCT ((AVG(rt1.c2)) NOT BETWEEN (((((x'')AND(rt1.c3)))OR(rt1.c1))) AND ((((NULL))<>((rt1.c1))))), MIN(CASE rt1.c3  WHEN rt1.c4 THEN rt1.c1 END) COLLATE NOCASE, (~ (((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)))) FROM rt1, vt0 WHERE ((x'' IN ())); -- 0ms;
SELECT DISTINCT UNLIKELY(CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c1 END) FROM vt0;SELECT DISTINCT ((((((rt1.c1) IS TRUE))AND((- (rt1.c4)))))OR(AVG(rt1.c3))) FROM vt0, rt1; -- 1ms;
SELECT ALL ((LIKELY(DISTINCT 0x2774e269))*(MAX(rt1.c2))) FROM vt0, rt1 WHERE (((((0xfffffffff8cc3e9e)&(-1222082020)))*((('|t')OR(NULL))))) LIMIT 735839470; -- 0ms;
SELECT DISTINCT CAST(((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c1)) AS REAL), CAST(CAST('1633737107' AS NUMERIC) AS NUMERIC), ((((vt0.c0)OR(rt1.c2)))OR(vt0.c0)) COLLATE NOCASE FROM rt1, vt0; -- 0ms;
SELECT DISTINCT ((((((rt1.c3)OR(rt1.c0)))OR(rt1.c2))) BETWEEN (((rt1.c0) NOT BETWEEN ('-1163908468') AND (x'3619'))) AND ((rt1.c3 IN ()))) FROM rt1, vt0 WHERE (CASE WHEN '1' THEN 0.7027319174120008 END COLLATE BINARY) LIMIT -1436376351 OFFSET 735839470; -- 0ms;
SELECT DISTINCT (CAST(rt1.c3 AS BLOB) IN ((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))), rt1.c4, MAX(GLOB(rt1.c0, rt1.c3)), ((((((x'')AND(vt0.c0)))OR('7412388'))) NOT BETWEEN (rt1.c4 COLLATE BINARY) AND (CAST(vt0.c0 AS BLOB))), (((+ (rt1.c3)))-((((vt0.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c2))))) FROM rt1 WHERE (((HEX('-375539051'))&(CAST('2068254864' AS TEXT))));SELECT ALL (((rt1.c3)) NOT BETWEEN ((((rt1.c4)&(rt1.c0)))) AND (((('2075584687')IS NOT(vt0.c0))))) FROM rt1 WHERE ((((NOT ('')))>=((0.9870527227959061 IN ()))));SELECT DISTINCT rt1.c1, ((NULL) NOT BETWEEN (rt1.c1) AND (CAST(rt1.c2 AS BLOB))), LAG(((((rt1.c2) IS TRUE))IS NOT(((rt1.c4)OR(vt0.c0)))), (+ (((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c1)))), (+ ((((rt1.c4))=((rt1.c2)))))) OVER () FROM vt0, rt1 WHERE ((+ (CAST(x'' AS NUMERIC)))) ORDER BY rt1.c3; -- 0ms;
SELECT ALL AVG(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c2 END) OVER ( ORDER BY ((((rt1.c4) NOT BETWEEN (vt0.c0) AND (rt1.c2)))<(INSTR(rt1.c3, rt1.c3))) ASC) FROM rt1 WHERE ((((NULL) ISNULL) IN ()));SELECT DISTINCT TRIM(CAST(rt1.c0 AS REAL)) FROM rt1 WHERE (((((((0.7150952878835274) NOT NULL))OR(CASE 0.10667767120225646  WHEN x'5079' THEN '?v育O,' WHEN 'I g,.Bm㭤' THEN '-2105430647' WHEN '0.7150952878835274' THEN x'' WHEN '2105886497' THEN 0xffffffffed9945d9 WHEN 'uo' THEN NULL ELSE 0.4824913962639157 END)))AND(CAST(NULL AS NUMERIC)))) ORDER BY (~ (rt1.c4 COLLATE RTRIM))  NULLS LAST; -- 0ms;
SELECT ALL rt1.c0, LIKELY(MAX(rt1.c0)), ((((rt1.c0)>=(rt1.c4))) BETWEEN ((rt1.c2 IN (vt0.c0, vt0.c0))) AND (((rt1.c4)IS NOT(rt1.c4)))) FROM vt0 WHERE (((((NULL) IS TRUE))<<(NULL COLLATE RTRIM)));SELECT DISTINCT (((((rt1.c1)<(rt1.c3))))<((CASE WHEN rt1.c4 THEN rt1.c1 ELSE vt0.c0 END))) FROM rt1, vt0; -- 0ms;
SELECT ((((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)))AND(vt0.c0)))AND(rt1.c2))) NOTNULL) FROM rt1 GROUP BY ((((((vt0.c0)AND(2.018019968E9)))OR(0xffffffff95255368)))<=((((51410766))<>((rt1.c1))))), ((((x'')OR((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))))))AND(((rt1.c1)IS(rt1.c3)))), (((vt0.c0 IN (rt1.c1)))IS(CASE WHEN rt1.c1 THEN rt1.c1 END));SELECT ALL rt1.c1, x'', COUNT(*) OVER () FROM vt0, rt1 WHERE ((((-123412277)/(x'7fd17f67')) IN ((('') BETWEEN ('-9223372036854775808') AND (x''))))) ORDER BY ((((rt1.c1)AND(rt1.c2)))OR(x'')) COLLATE NOCASE, DATE(CAST(rt1.c3 AS TEXT), CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 ELSE vt0.c0 END, (rt1.c1 IN ()), ((vt0.c0)<(rt1.c3)), 'ui'); -- 0ms;
SELECT ALL ((((vt0.c0)>(rt1.c2)))*(((rt1.c1)|(rt1.c1)))) FROM rt1 WHERE (((((0X6c8e4ac8) ISNULL))>=(CASE '1670386401'  WHEN NULL THEN NULL WHEN NULL THEN x'' WHEN 0X63d87798 THEN '' WHEN '(fY<憩' THEN '2018019968' WHEN '-1194908067' THEN NULL ELSE NULL END)));SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c3 END) BETWEEN ('-810606815') AND (IFNULL(DISTINCT rt1.c1, rt1.c4))) FROM vt0;SELECT ALL CAST(((rt1.c3)<<(vt0.c0)) AS NUMERIC) FROM vt0 WHERE ((NULL COLLATE BINARY IN (((x'bcbe')GLOB(-1.163908468E9)), '')));SELECT rt1.c0 FROM rt1, vt0 GROUP BY ((rt1.c4)<<(rt1.c3)) COLLATE BINARY, ((x'') BETWEEN (TIME(rt1.c0, rt1.c4, rt1.c4)) AND (((rt1.c0)>>(rt1.c2)))), ((((((rt1.c1)AND(vt0.c0)))AND(rt1.c4)))LIKE((rt1.c2 IN ()))); -- 0ms;
SELECT CASE (+ (vt0.c0))  WHEN rt1.c0 THEN LENGTH(rt1.c3) ELSE (rt1.c2 IN ()) END, rt1.c3, COUNT(NULL) OVER () FROM vt0, rt1 LIMIT -1647560591 OFFSET 129376200; -- 1ms;
SELECT (AVG(rt1.c0) IN ()) FROM rt1, vt0 WHERE (0.12392413264249758); -- 0ms;
SELECT ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c4)) COLLATE BINARY FROM rt1 WHERE (CAST(((('X3#롟', NULL, 0.8875131088745775))!=(('-2010332294', '951690211', 0.1607052645943633))) AS INTEGER)) GROUP BY LENGTH((('-m')OR(rt1.c4))), (((rt1.c4)) BETWEEN ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))) AND (((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))), LIKELIHOOD(DISTINCT ((rt1.c0) ISNULL), 0.244546338321738) HAVING ((TOTAL(rt1.c2)) IS TRUE);SELECT ALL MIN(((vt0.c0)|(rt1.c4)), rt1.c0) FROM vt0 WHERE (((CAST(8.81592693E8 AS REAL))/(-1288074621)));SELECT ALL TOTAL(((rt1.c3) NOT NULL)) OVER ( RANGE  CURRENT ROW) FROM vt0, rt1 WHERE ((((0xffffffffd430fd6d)IS(-1.20832354E8)) IN (CASE x''  WHEN '' THEN -2099150517 ELSE '-674823834' END))); -- 1ms;
SELECT DISTINCT (((rt1.c3 IN ()))&(((rt1.c0) IS TRUE))), ((((rt1.c2) IS FALSE)) NOT NULL), (((rt1.c1)) BETWEEN ((CHANGES())) AND ((rt1.c1 COLLATE BINARY))), ((((0X5935c33f)IS NOT(rt1.c4)))IS NOT('')), (TOTAL(rt1.c1) IN ()) FROM vt0, rt1 WHERE (((NULL COLLATE NOCASE)OR(0.23283549291555095))); -- 0ms;
SELECT ALL COUNT(CAST(vt0.c0 AS REAL)) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN (+ (rt1.c3)) THEN (- (rt1.c1)) ELSE json_array(vt0.c0, rt1.c2) END, (('1616172191') ISNULL), COUNT(*) FROM vt0, rt1 WHERE (((0.11270256927684463 COLLATE RTRIM)==((NOT (5.866738E7))))) ORDER BY ((((rt1.c1)GLOB(rt1.c0))) IS TRUE), (((NULL, ((rt1.c4)<=(rt1.c2)), 0.9396437437332823, ((rt1.c0)>(rt1.c3)), rt1.c3 COLLATE BINARY))>=((x'', ((rt1.c3) IS FALSE), (rt1.c0 IN ()), ABS(rt1.c4), (NOT (vt0.c0))))) ASC  NULLS FIRST, CAST(((rt1.c3) ISNULL) AS REAL) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT '468433450' FROM rt1 WHERE (((((NULL)AND('2105886497')))OR(((NULL)+(x''))))); -- 1ms;
SELECT DISTINCT (((IFNULL(rt1.c3, rt1.c2)))==((((rt1.c3)-(0.4829565254318131))))), (+ ((vt0.c0 IN (rt1.c0)))), AVG(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END) OVER () FROM rt1, vt0 WHERE (((CASE WHEN NULL THEN 0.35959526584930024 WHEN 0.3425432269261556 THEN NULL WHEN 0.9857657988274572 THEN NULL ELSE NULL END) NOT BETWEEN (((x'') NOT BETWEEN (x'') AND ('&C5Ue#a'))) AND ((+ (x''))))) UNION ALL SELECT DISTINCT ((rt1.c0 IN ()) IN ((rt1.c1 IN (rt1.c1)))), NTILE((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CAST('-1412550287' AS REAL))) AND ((((vt0.c0)||(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))!=((x'04cd', vt0.c0, vt0.c0))), (0X18c460da IN (vt0.c0)))))) OVER (), ROW_NUMBER() OVER () FROM vt0;SELECT DISTINCT ((((rt1.c4) ISNULL)) NOT NULL) FROM vt0;SELECT ALL (((((((rt1.c2)AND('TX')))OR(rt1.c3)), rt1.c1, ((rt1.c2) NOT NULL)))<(((rt1.c2 IN ()), x'', ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))))), (+ (rt1.c3)) COLLATE RTRIM, CAST(0X53d72a34 AS NUMERIC) FROM vt0, rt1 WHERE ((((~ ('0.8875131088745775'))) BETWEEN (CASE NULL  WHEN 0X43c9729a THEN '2101170622' END) AND ((- (0X7266309c))))); -- 0ms;
SELECT '2018019968' FROM rt1 WHERE ((((NULL))<>(((('r9nowE89f*')<>(x'')))))); -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT (x'fbe5' IN ()) FROM rt1, vt0 WHERE ((NOT ((((0.07655526611234909)) BETWEEN ((0.1751772462841623)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT CAST(rt1.c4 AS BLOB) FROM rt1, vt0 WHERE ((~ (CASE WHEN 'JY' THEN 0.16819709520454962 WHEN x'' THEN 757105548 WHEN 271833743 THEN NULL ELSE '681532741' END))); -- 0ms;
SELECT DISTINCT CAST(CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 END AS TEXT) FROM vt0 ORDER BY rt1.c4 COLLATE RTRIM ASC  NULLS LAST;SELECT CASE SQLITE_COMPILEOPTION_USED(1068284839)  WHEN ((vt0.c0)>(rt1.c2)) THEN vt0.c0 COLLATE BINARY WHEN rt1.c2 THEN json_patch(vt0.c0, rt1.c3) WHEN (rt1.c3 IN (rt1.c0)) THEN rt1.c0 WHEN ((rt1.c4) NOT BETWEEN (x'') AND ('0.6249450860169582')) THEN ((rt1.c3) ISNULL) WHEN rt1.c3 COLLATE BINARY THEN CAST(rt1.c3 AS INTEGER) ELSE (~ (rt1.c0)) END FROM vt0, rt1 WHERE ((- (CAST(x'' AS BLOB)))); -- 0ms;
SELECT ALL (rt1.c3 IN (rt1.c4)) COLLATE BINARY FROM rt1, vt0 WHERE ((('') NOT BETWEEN (CASE ''  WHEN NULL THEN '-909239059' END) AND (((-1699899570)%('%s'))))); -- 1ms;
SELECT ALL LAG((((CASE WHEN rt1.c2 THEN rt1.c4 END))==((((vt0.c0) NOT NULL)))), ((- (NULL)) IN ()), ((rt1.c2)AND(((rt1.c1)<=(vt0.c0))))) OVER () FROM vt0, rt1; -- 0ms;
SELECT ALL LEAD(((((vt0.c0)AND(rt1.c0)))%(((('0.5014154902039832'))<=((rt1.c4))))), CASE WHEN CASE 'L	Znkdfb'  WHEN '2068254864' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c0 THEN 0.9777122258023878 END THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (x'')) WHEN ((vt0.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)) THEN ((rt1.c3)>(rt1.c4)) WHEN ((rt1.c4) IS TRUE) THEN ((rt1.c2) NOTNULL) ELSE (rt1.c1 IN ()) END, (((rt1.c2)>=('-1548065145')) IN ())) OVER (), (((((+ (rt1.c2)))OR(TOTAL(rt1.c4))))AND(((rt1.c3)IS(rt1.c0)))), CASE (NOT (rt1.c0))  WHEN ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)) THEN CASE WHEN rt1.c3 THEN rt1.c0 WHEN ')4' THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END END FROM rt1, vt0; -- 1ms;
SELECT ((CAST(rt1.c2 AS NUMERIC)) NOTNULL) FROM rt1, vt0 GROUP BY ((((rt1.c4) ISNULL)) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c4 END) AND ((((rt1.c2))>((rt1.c3))))); -- 0ms;
SELECT DENSE_RANK() OVER (), CASE WHEN ((rt1.c3)<=(rt1.c3)) THEN ((rt1.c4) NOT BETWEEN (vt0.c0) AND (0.03143713455651542)) END, (+ (CAST(rt1.c4 AS INTEGER))) FROM rt1;SELECT CASE WHEN ((vt0.c0)AND(rt1.c2)) THEN (((rt1.c0, rt1.c2, rt1.c2))>((0.8062853406973464, rt1.c2, vt0.c0))) ELSE SUM(vt0.c0) END FROM vt0 WHERE ((('-1647560591') BETWEEN (x'eea2') AND (x'fcce')) COLLATE RTRIM);SELECT ALL LEAD(((((vt0.c0) ISNULL)) NOT NULL), (((((((((((vt0.c0))==((vt0.c0))))AND((+ (vt0.c0)))))OR(((vt0.c0)IS(-123412277)))))OR(vt0.c0 COLLATE RTRIM)))AND((vt0.c0 IN (vt0.c0)))), (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN ()))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(NULL))) OVER ( ORDER BY x'' ASC), 'cꟸ' COLLATE RTRIM, (+ (CAST(rt1.c4 AS INTEGER))) FROM vt0 WHERE (((COALESCE(0Xffffffffa1ce8541, x'')) ISNULL));SELECT DISTINCT ((rt1.c4 COLLATE NOCASE) BETWEEN (rt1.c1) AND (((rt1.c4)IS NOT(rt1.c4)))), ((GROUP_CONCAT(rt1.c4)) BETWEEN ((((rt1.c3, rt1.c4, vt0.c0))>((vt0.c0, rt1.c4, vt0.c0)))) AND (((rt1.c2)||('0.08741712718348682')))), vt0.c0 FROM rt1;SELECT DISTINCT ((((((rt1.c4) BETWEEN (rt1.c1) AND (vt0.c0)))OR((('1721587900') NOT BETWEEN (vt0.c0) AND (rt1.c4)))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c4)))) FROM vt0 WHERE (CAST(((NULL)<>(129376200)) AS NUMERIC));SELECT DISTINCT MAX((- (rt1.c0)), json_array_length(rt1.c2, rt1.c2)) FROM rt1, vt0 WHERE ((((((((NULL)) BETWEEN ((NULL)) AND ((NULL))))AND((~ (NULL)))))OR((('M|RT凬b싖d') NOT NULL))));SELECT ALL CAST((rt1.c0 IN ()) AS INTEGER) FROM vt0, rt1 WHERE (((((('976344041', 'Cꟸ', NULL))<=((NULL, NULL, 0.6012704364494977))))>>(CASE WHEN NULL THEN x'' WHEN NULL THEN 0Xfffffffff53fe68a WHEN 0.5679694701843284 THEN 0.34614510342867155 WHEN -8.89131197E8 THEN 0X52ae735e WHEN NULL THEN 0.7027319174120008 END))); -- 0ms;
SELECT COUNT(CASE WHEN rt1.c0 THEN '3[' END) FROM rt1, vt0 WHERE (((0X27ad1010) NOT BETWEEN ('-m') AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt1.c2) ISNULL) IN ()) FROM rt1 WHERE (CASE (((x'')) NOT BETWEEN ((x'')) AND ((NULL)))  WHEN (('')LIKE('-909239059')) THEN (('')+(NULL)) WHEN (((0.9900042044365523)) BETWEEN ((-1.288074621E9)) AND ((-62625526))) THEN ((0x4a8b88a6) NOT BETWEEN (0.4055916821083455) AND (x'21d8')) WHEN CASE x''  WHEN 0.6484437783044359 THEN -734986899 END THEN ((0.39502492777140197) NOT BETWEEN (NULL) AND (0.6012704364494977)) WHEN TYPEOF(NULL) THEN CAST(0xffffffffcfaf1f21 AS NUMERIC) WHEN 0Xffffffffd7c70166 COLLATE RTRIM THEN 'M|RT凬b싖d' ELSE CASE WHEN x'' THEN 'o῁!DC櫒<n.' WHEN NULL THEN 0.34784587695624336 WHEN x'' THEN NULL WHEN NULL THEN '' WHEN -1255920551 THEN x'' END END); -- 1ms;
SELECT (~ ((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))))) FROM vt0, rt1; -- 0ms;
SELECT NTH_VALUE(((CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY)), (+ (((vt0.c0) NOTNULL)))) OVER () FROM vt0 WHERE (((('-120832354'))>(('0.4177868740823193')))); -- 0ms;
SELECT DISTINCT SUM(((((rt1.c1)OR(rt1.c1)))AND(rt1.c0))) COLLATE RTRIM FROM rt1 LIMIT 2115844219; -- 0ms;
SELECT DISTINCT (+ (((((rt1.c1)OR(rt1.c2)))AND(rt1.c4)))) FROM rt1; -- 0ms;
SELECT ((0.3858285535461947)<(vt0.c0)), (((rt1.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c4))))) AND ((CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c2 WHEN '*᳭' THEN rt1.c1 ELSE rt1.c2 END))), ((((CAST(rt1.c0 AS INTEGER))OR(CAST(rt1.c2 AS BLOB))))OR(((rt1.c1) NOT NULL))) FROM vt0 LIMIT -1278209493 OFFSET -283266401;SELECT DISTINCT NTH_VALUE((((((rt1.c2, x'', '1255277726', rt1.c1, rt1.c4))>=((rt1.c2, rt1.c3, rt1.c4, rt1.c2, rt1.c0)))) NOT BETWEEN (STRFTIME(x'', rt1.c2, '1068284839')) AND (((rt1.c0)==(rt1.c1)))), ((-771240567)-(CAST(rt1.c1 AS NUMERIC)))) OVER () FROM rt1 WHERE (((CASE 1351017485  WHEN 0.03143713455651542 THEN x'' WHEN x'' THEN 'AT' WHEN x'' THEN '-1255920551' ELSE 0.4742213119996883 END)>=('-2010332294' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c2 AS INTEGER) AS INTEGER) FROM rt1; -- 0ms;
SELECT CAST(((vt0.c0)>=(rt1.c0)) AS NUMERIC) FROM rt1 WHERE (CAST('0.9917093223836391' AS BLOB));SELECT ((rt1.c0 COLLATE NOCASE)!=(COALESCE(DISTINCT rt1.c0, rt1.c2))) FROM rt1, vt0; -- 1ms;
SELECT DISTINCT ((NULLIF(rt1.c2, rt1.c1))<=((~ (rt1.c1)))) FROM rt1; -- 0ms;
SELECT ALL (+ ((+ (rt1.c0)))), CAST(((((rt1.c4)AND(rt1.c3)))OR(rt1.c4)) AS TEXT), ((CASE WHEN vt0.c0 THEN rt1.c0 END) BETWEEN ((x'' IN (rt1.c3))) AND (TOTAL(rt1.c2))) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT (((CASE WHEN rt1.c1 THEN rt1.c3 END))<(((rt1.c2 IN ())))), (SUM(rt1.c2) IN ()), (((((rt1.c2))>=((rt1.c1))))IS(COUNT(*))) FROM vt0, rt1; -- 0ms;
SELECT (((- (vt0.c0))) ISNULL), ((x'')GLOB(TRIM(rt1.c2))), ((CASE NULL  WHEN rt1.c1 THEN rt1.c4 ELSE vt0.c0 END) BETWEEN (((rt1.c0)AND(rt1.c1))) AND (((NULL)<<(rt1.c3)))) FROM rt1, vt0; -- 0ms;
SELECT ((((rt1.c1)IS NOT(rt1.c1))) ISNULL), (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3)) IN ()), (((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c3)) IN ()) FROM rt1; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0 WHERE ((((((('537992441') IS FALSE))AND(NULL COLLATE BINARY)))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((+ (rt1.c1)))||(json_type(rt1.c0))) FROM vt0, rt1; -- 0ms;
SELECT ALL ((rt1.c3) NOT NULL), (((rt1.c0)%(rt1.c2)) IN ()), CASE WHEN CAST(rt1.c3 AS NUMERIC) THEN (NOT (vt0.c0)) ELSE ((vt0.c0)AND(rt1.c3)) END FROM vt0, rt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt1.c4 AS NUMERIC))) AND ((LOWER(vt0.c0)))); -- 1ms;
SELECT ((((vt0.c0) IS FALSE))+((+ (vt0.c0)))) FROM rt1;SELECT DISTINCT json_patch(CAST(vt0.c0 AS REAL), MAX(rt1.c2)) FROM rt1 WHERE (((1380707475 COLLATE NOCASE) BETWEEN (TRIM(DISTINCT 0.8006034794286014, x'')) AND ((NULL IN (NULL))))) ORDER BY ((rt1.c2) NOTNULL) COLLATE NOCASE ASC  NULLS LAST, (((rt1.c0 IN (rt1.c2))) NOTNULL) DESC LIMIT -676186479;SELECT ALL GROUP_CONCAT(((rt1.c1)+(rt1.c0))) OVER () FROM rt1 WHERE ((((('2061752390')-(x''))) BETWEEN ('') AND (((((((((0.34163906154537005)AND(NULL)))AND(-2024310221)))AND(-754650391)))OR(NULL))))); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0, rt1.c1, 0.20217832828445348))<((rt1.c2, rt1.c3, rt1.c4))) AS BLOB), CAST(COUNT(*) AS BLOB), rt1.c3 FROM vt0, rt1 WHERE (((((('-771240567'))<>((x''))))>>('51410766' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((((0x5322eb99)%(rt1.c1))))>((CAST(rt1.c2 AS NUMERIC)))) FROM vt0;SELECT DISTINCT (((rt1.c4)) BETWEEN (((((vt0.c0, rt1.c4, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((x'', x'', rt1.c2))))) AND ((rt1.c2 COLLATE NOCASE))) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT CAST(rt1.c0 COLLATE RTRIM AS INTEGER) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT CASE 'X3#롟'  WHEN (- (rt1.c0)) THEN UNLIKELY(DISTINCT 0.9885532310780213) ELSE x'9a58' END FROM vt0;SELECT DISTINCT COUNT(*), ((((rt1.c2) ISNULL)) IS TRUE), ((((rt1.c1) BETWEEN (rt1.c4) AND (vt0.c0)))<(COUNT(*))) FROM rt1;SELECT ALL FIRST_VALUE(((((((0.9402228330695588)LIKE(rt1.c0)))AND(CAST(rt1.c0 AS REAL))))AND(rt1.c0))) OVER () FROM rt1, vt0 WHERE ((((('-2074155462') NOTNULL))<=(LIKE(-6.2625526E7, x'', '1')))); -- 0ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN (('')) AND ((rt1.c2))) COLLATE RTRIM FROM rt1 WHERE ((- ((('') IS TRUE)))) GROUP BY ((CASE WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN '' THEN rt1.c4 ELSE rt1.c3 END) IS FALSE);SELECT DISTINCT ((((vt0.c0)&(0xffffffffcfaf1f21)))/(COUNT(vt0.c0))) FROM vt0 WHERE (((((((((((((0.549324129911061)AND(0.029749334406634298)))AND(0.11270256927684463)))OR((0X6c1c91f1 IN ()))))OR('0.7070251822351441')))AND(('' IN ()))))AND(((x'')+(x'111b'))))) LIMIT -1651778039 OFFSET 769437359; -- 0ms;
SELECT DISTINCT ((((((((rt1.c3 COLLATE RTRIM)AND(((rt1.c1)=(rt1.c1)))))AND(((rt1.c3)<>(rt1.c2)))))AND(json_array_length(rt1.c2, vt0.c0))))AND(CASE WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c3 END)) FROM vt0 GROUP BY ((CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 END)<=((~ (435324455)))), (((((rt1.c1)>>(rt1.c1))))=((rt1.c1 COLLATE NOCASE))), (rt1.c3 IN ()) COLLATE RTRIM;SELECT CUME_DIST() OVER () FROM rt1, vt0 WHERE (((((0.9352655490441173) BETWEEN (NULL) AND (NULL))) ISNULL)) ORDER BY vt0.c0; -- 0ms;
SELECT AVG(CASE WHEN rt1.c0 THEN rt1.c1 ELSE vt0.c0 END) FROM vt0 ORDER BY CAST((- (rt1.c2)) AS REAL)  NULLS FIRST;SELECT DISTINCT ((((rt1.c0) BETWEEN (rt1.c2) AND (vt0.c0)))AND((- (NULL)))) FROM vt0, rt1; -- 1ms;
SELECT DISTINCT ((((rt1.c3)GLOB(rt1.c2))) NOT NULL), AVG(((NULL) NOT BETWEEN (rt1.c3) AND (vt0.c0)) COLLATE BINARY) OVER (), (- (CAST(rt1.c2 AS NUMERIC))) FROM vt0;SELECT ((((rt1.c0 COLLATE NOCASE)OR(((((rt1.c4)AND(rt1.c2)))AND(rt1.c2)))))AND(((rt1.c3)%(rt1.c1)))) FROM vt0, rt1 WHERE (CASE (('')>=(6.81532741E8))  WHEN CAST(x'' AS BLOB) THEN x'0381f374' COLLATE RTRIM ELSE (('0.7150952878835274') BETWEEN (NULL) AND (NULL)) END); -- 2ms;
SELECT DISTINCT load_extension(rt1.c1, CAST(rt1.c3 AS TEXT)), (((rt1.c3)AND(rt1.c1)) IN (('_萉' IN ()))), CAST(((vt0.c0)IS(rt1.c3)) AS REAL) FROM rt1, vt0;SELECT CASE (('1721587900')=(rt1.c2))  WHEN (rt1.c2 IN ()) THEN rt1.c4 COLLATE RTRIM WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)) THEN rt1.c1 COLLATE BINARY WHEN TYPEOF(rt1.c2) THEN ((rt1.c2)IS(rt1.c2)) END, ((((STRFTIME('', NULL, rt1.c2))AND((rt1.c4 IN ()))))AND(COUNT(*))), LOWER(((vt0.c0) IS TRUE)) FROM rt1, vt0 ORDER BY ((((((x'')>>(rt1.c3)))AND((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((vt0.c0))))))AND((((rt1.c4, x'8d4c', rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c0, rt1.c1))))) ASC; -- 0ms;
SELECT COUNT(*) FILTER(WHERE rt1.c2) OVER () FROM vt0, rt1; -- 1ms;
SELECT DISTINCT rt1.c4, CASE WHEN ((((rt1.c0)OR(rt1.c3)))AND(vt0.c0)) THEN rt1.c4 WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) THEN '' WHEN ((rt1.c1)OR(rt1.c4)) THEN (('1322786236') ISNULL) ELSE rt1.c2 END, ((((((((MAX(rt1.c3))AND(rt1.c4 COLLATE BINARY)))OR('2081668373')))AND(SUM(rt1.c2))))AND(((((rt1.c2)OR(rt1.c0)))OR(vt0.c0)))), (~ (GROUP_CONCAT(rt1.c1))), MAX(rt1.c1) FROM rt1 WHERE ((('-2105743720') NOTNULL));SELECT COALESCE((~ (rt1.c1)), ((((((((rt1.c4)OR(rt1.c3)))AND(vt0.c0)))AND(NULL)))OR(rt1.c1))), ((CASE rt1.c1  WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c3 END) ISNULL), ((HEX('1434612369')) NOT BETWEEN (((rt1.c3)%(rt1.c0))) AND (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c4)))) FROM rt1 NOT INDEXED WHERE ((((((((((('wkAA.')AND(x'')))AND(x'b8f5')))OR('-1732978067')))OR(0.6032107678173089)))>>(((('-1245322148')) NOT BETWEEN ((NULL)) AND (('129376200')))))) LIMIT 1765050585 OFFSET 888855411;SELECT DISTINCT LOWER(((rt1.c3) NOT NULL)) FROM rt1 WHERE (((((NULL)==(x'')))<(((x'')<=(NULL))))) GROUP BY (~ ((+ (rt1.c1)))), (((rt1.c1 COLLATE RTRIM))<((CAST(rt1.c4 AS REAL)))), x'2445'; -- 0ms;
SELECT GROUP_CONCAT((~ (rt1.c1))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt0, rt1 WHERE (UPPER(((0.2859797588786579)AND(x'')))); -- 0ms;
SELECT ALL (((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) COLLATE NOCASE FROM vt0 WHERE (LOWER((('')<=(0.8887624177390165))));SELECT DISTINCT NULL, ((HEX(DISTINCT rt1.c0))/(((((900314094)OR(rt1.c1)))AND(vt0.c0)))), (((vt0.c0)) BETWEEN (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))) AND (((- (rt1.c1))))) FROM rt1 WHERE (((((0Xffffffffd7e379c5)) BETWEEN ((NULL)) AND ((x''))) IN ((x'd8de' IN ())))) GROUP BY (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1)) IN (((rt1.c2)||(rt1.c3)))) HAVING MAX((((x'', x'', rt1.c3))>=((rt1.c0, rt1.c2, rt1.c1))));SELECT DISTINCT CAST(((rt1.c4)IS(rt1.c4)) AS NUMERIC) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c4)))OR(rt1.c4)))AND('')))OR(rt1.c4)) COLLATE RTRIM FROM vt0, rt1 WHERE ((((- (NULL)))==(CASE ''  WHEN x'16aa' THEN NULL WHEN x'dd66' THEN 0.3858285535461947 WHEN x'' THEN '1416685507' WHEN 0.018366666395264852 THEN x'6427' WHEN x'' THEN x'' ELSE '0.6249450860169582' END))); -- 0ms;
SELECT DISTINCT NULL FROM rt1, vt0 WHERE ((+ (-1505019520 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (~ (((rt1.c3)IS(rt1.c3)))), COUNT(*), FIRST_VALUE(CASE WHEN json_type(vt0.c0) THEN (58667380 IN ()) WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)>=(vt0.c0)) THEN LIKELIHOOD(vt0.c0, 0.9002004395403332) ELSE ((vt0.c0)IS(vt0.c0)) END) OVER ( ORDER BY ((((rt1.c1)&(rt1.c0))) BETWEEN (x'') AND (8.81592693E8))) FROM vt0 WHERE ((((x'')) BETWEEN (((NULL IN ()))) AND ((STRFTIME(x'6d10', x'', '')))));SELECT DISTINCT CASE ((rt1.c0)<>(rt1.c2))  WHEN ((((rt1.c3)OR(rt1.c4)))OR(rt1.c3)) THEN (NOT (-1331474611)) ELSE ((rt1.c0)>(rt1.c1)) END FROM rt1; -- 0ms;
SELECT ((CASE WHEN rt1.c3 THEN rt1.c3 END) IS FALSE) FROM vt0 WHERE (((x'' COLLATE NOCASE)<>((((NULL)) NOT BETWEEN ((x'')) AND ((NULL))))));SELECT ((vt0.c0 COLLATE NOCASE)<<('-859920711')) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT NULL FROM rt1 RIGHT OUTER JOIN vt0 ON ((((rt1.c0)IS(rt1.c1))) NOTNULL) WHERE ('-1634883592'); -- 0ms;
SELECT ALL MAX(x'94aaf85b') FROM vt0 WHERE (((CAST(NULL AS INTEGER))-(0.20036966725187377))); -- 0ms;
SELECT DISTINCT CASE (NOT (rt1.c3))  WHEN (~ (rt1.c1)) THEN (- (rt1.c2)) END FROM rt1 GROUP BY ((CAST(rt1.c1 AS REAL)) NOT BETWEEN (((rt1.c1)<>(rt1.c3))) AND ((rt1.c3 IN (rt1.c2)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c3))) OVER () FROM rt1, vt0 WHERE (((0.32515178025979863 COLLATE BINARY) NOT NULL)); -- 1ms;
SELECT DISTINCT rt1.c3, (((rt1.c2) ISNULL) IN ()), IFNULL(DISTINCT rt1.c0, rt1.c3) COLLATE NOCASE, (- (CASE WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c4 THEN '-909239059' WHEN vt0.c0 THEN rt1.c3 END)), TOTAL(((vt0.c0)IS NOT(rt1.c3))) OVER () FROM vt0 GROUP BY (329973517 IN ()), CASE vt0.c0  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN '' ELSE x'1c4ed75d' END COLLATE BINARY, HEX((~ (rt1.c2))) HAVING ((MAX('*R8	+?y')) NOT NULL);SELECT ALL ((((rt1.c0) NOT NULL))=(((rt1.c1)AND(rt1.c2)))) FROM vt0 WHERE (CASE LIKELIHOOD(DISTINCT 0.9995128174215109, 0.5668657721509072)  WHEN 0.5207288593169095 COLLATE RTRIM THEN ((x'') IS TRUE) END);SELECT ALL DENSE_RANK() OVER () FROM rt1, vt0; -- 0ms;
SELECT DISTINCT ((rt1.c4)OR(rt1.c4)) COLLATE NOCASE FROM vt0, rt1 ORDER BY ((CASE WHEN rt1.c1 THEN '3s,de' END)IS NOT((((rt1.c3))<>((rt1.c3)))))  NULLS LAST; -- 1ms;
SELECT DISTINCT MIN(((rt1.c1) ISNULL)) FROM rt1 WHERE ((((CAST('B搦M4' AS INTEGER)))!=((json_array_length('862093081', NULL))))) GROUP BY (((((rt1.c4)AND(rt1.c1)))AND('1811959039')) IN ((((vt0.c0, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, NULL, 0.9358768031439854)) AND ((rt1.c1, rt1.c1, rt1.c4))), (+ (vt0.c0)))), (((rt1.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((((rt1.c0))>=((rt1.c4)))))), (+ (CAST(rt1.c2 AS INTEGER))) HAVING (((GROUP_CONCAT(rt1.c1)))=((CAST(rt1.c3 AS INTEGER))));SELECT ALL ((CAST(rt1.c1 AS BLOB))IS NOT(((rt1.c1)>(rt1.c3)))), SUBSTR(GROUP_CONCAT(0.8192625165387266), (~ (vt0.c0))), CASE WHEN COUNT(vt0.c0) THEN MAX(vt0.c0) END FROM rt1;SELECT DISTINCT rt1.c2 FROM vt0, rt1 WHERE (CASE WHEN ((0.16434144503797998) IS TRUE) THEN NULL WHEN ((('1821264584')) NOT BETWEEN ((NULL)) AND (('PG'))) THEN CASE WHEN 0xffffffffa4d905e2 THEN NULL WHEN x'd8e3' THEN 0.13961416591372244 WHEN '' THEN NULL END WHEN 5.37992441E8 THEN ((('R/ZE{I_')) BETWEEN ((NULL)) AND ((NULL))) ELSE INSTR('-122100492', NULL) END); -- 0ms;
SELECT ALL CASE rt1.c1 COLLATE RTRIM  WHEN COUNT(rt1.c2) THEN AVG(rt1.c4) WHEN SUM(rt1.c3) THEN (((NULL))<=((rt1.c1))) WHEN CASE WHEN vt0.c0 THEN rt1.c4 ELSE NULL END THEN rt1.c2 WHEN (- (vt0.c0)) THEN rt1.c0 WHEN ((vt0.c0)%(rt1.c2)) THEN (+ (rt1.c3)) END FROM vt0, rt1 WHERE ((- (CASE WHEN '1440831708' THEN '1540635060' WHEN 0.2869918374503668 THEN -1222082020 WHEN x'' THEN x'' WHEN x'864ba9cd' THEN x'44e3' WHEN '' THEN '()' ELSE '' END))); -- 0ms;
SELECT DISTINCT CASE WHEN 0.16891541669305288 THEN rt1.c1 WHEN NULL COLLATE BINARY THEN CAST(rt1.c4 AS NUMERIC) WHEN CAST(rt1.c0 AS NUMERIC) THEN (+ (rt1.c1)) WHEN ((((rt1.c0)OR(vt0.c0)))AND(rt1.c1)) THEN ((((((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c0)))AND(rt1.c3)) WHEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END THEN (((rt1.c1, rt1.c2, rt1.c4))<=((rt1.c4, vt0.c0, rt1.c2))) END FROM vt0 WHERE (CAST(((NULL) NOT BETWEEN ('4A+') AND ('_')) AS TEXT)) GROUP BY CASE (+ (rt1.c2))  WHEN IFNULL(rt1.c1, rt1.c2) THEN rt1.c3 COLLATE NOCASE END HAVING MAX((rt1.c2 IN ())) COLLATE RTRIM;SELECT (rt1.c1 IN (rt1.c1)) COLLATE BINARY FROM rt1 WHERE ((((((0.9352655490441173) NOTNULL)))>((CAST(x'' AS TEXT))))); -- 0ms;
SELECT ALL CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 ELSE NULL END AS NUMERIC), rt1.c1, COUNT(*) FROM vt0 WHERE (((IFNULL(0.03848114880076703, 'wx4e'))IS NOT(((((((((x'd3f3')OR(0.82057364256637)))AND(x'b0c9')))OR('')))OR('')))));SELECT DISTINCT ((CAST(rt1.c3 AS INTEGER)) BETWEEN (((((vt0.c0)OR(x'd806')))AND(NULL))) AND (rt1.c2 COLLATE RTRIM)), ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 END)*(CAST(rt1.c3 AS INTEGER))), (x'9f2d' IN ()) FROM vt0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN TRIM(DISTINCT rt1.c1) THEN (rt1.c2 IN (vt0.c0)) WHEN x'' THEN MAX(vt0.c0) WHEN GROUP_CONCAT(rt1.c0) THEN json_array(rt1.c1, vt0.c0) WHEN (((rt1.c2))>((rt1.c0))) THEN TOTAL(rt1.c0) WHEN CAST(rt1.c0 AS NUMERIC) THEN COUNT(vt0.c0) END FROM rt1, vt0 WHERE ((('0.7027319174120008' COLLATE BINARY)IS NOT(CASE ''''  WHEN NULL THEN '-814631530' WHEN 0.33323459330551364 THEN NULL WHEN '-1697079394' THEN -1.0197444E9 END))) LIMIT 31172071 OFFSET 1703589329; -- 1ms;
SELECT DISTINCT rt1.c3 FROM rt1, vt0 LIMIT -1853434383 OFFSET 2101050889 EXCEPT SELECT ((((((rt1.c1)OR(0.34784587695624336)))OR(x''))) BETWEEN (((((rt1.c4)AND(vt0.c0)))OR(rt1.c2))) AND ((vt0.c0 IN ()))) FROM rt1 ORDER BY rt1.c0 ASC  NULLS LAST;SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, rt1 LIMIT 1919299740; -- 0ms;
SELECT MIN(UPPER(rt1.c1), ((rt1.c4) BETWEEN (vt0.c0) AND (rt1.c2)), ((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)), ((vt0.c0)>>(vt0.c0))) FROM vt0;SELECT ALL ((((((((rt1.c0)OR(rt1.c1)))AND(((vt0.c0) ISNULL))))AND(MIN(rt1.c1))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))) FROM rt1, vt0 WHERE ((CASE 2115844219  WHEN 0.5564209003684056 THEN NULL END IN ())); -- 0ms;
SELECT ALL vt0.c0 FROM rt1;SELECT rt1.c1, AVG((rt1.c3 IN ())) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS), rt1.c2 FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 END) NOT NULL) FROM rt1;SELECT DISTINCT CAST((((rt1.c1, rt1.c2, rt1.c0, vt0.c0, rt1.c3)) NOT BETWEEN ((vt0.c0, rt1.c2, -1.647560591E9, rt1.c0, x'a1d2')) AND ((rt1.c1, rt1.c1, rt1.c2, rt1.c4, rt1.c3))) AS TEXT) FROM rt1 WHERE (((~ ('')) IN ()));SELECT DISTINCT rt1.c4, COUNT('䫈m0g%') OVER (), (AVG(rt1.c4) IN ((rt1.c0 IN (vt0.c0)))) FROM rt1 GROUP BY (((rt1.c3)) NOT BETWEEN (((- (x'')))) AND ((((((((((x'8ef8')OR(x'')))OR(rt1.c4)))AND('-1547257884')))OR(rt1.c1))))), (((((rt1.c2))<=((0.11719198929741936))))GLOB(rt1.c1)), ((json_type(rt1.c2)) NOT BETWEEN (CAST(rt1.c4 AS REAL)) AND (((((x'20e2')OR(rt1.c3)))OR(rt1.c2)))) LIMIT 726997314;SELECT DISTINCT x'' FROM vt0 WHERE (((NULL COLLATE RTRIM)AND(NULLIF(DISTINCT 'X.O', NULL)))) LIMIT 463945964 OFFSET -623506620; -- 1ms;
SELECT ALL (~ ((((rt1.c2, rt1.c1, rt1.c3)) BETWEEN ((rt1.c1, vt0.c0, rt1.c3)) AND ((rt1.c2, vt0.c0, vt0.c0))))) FROM rt1 NATURAL JOIN vt0 WHERE (((((((x'acd6')AND(x'')))AND(NULL)))<=(((NULL)>=(NULL))))); -- 0ms;
SELECT ALL (((rt1.c3, vt0.c0, rt1.c3)) BETWEEN ((((rt1.c3)&(rt1.c1)), TIME(rt1.c4, rt1.c2, rt1.c0), (vt0.c0 IN (rt1.c1)))) AND (((((((((('976344041')AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)), CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 END, MIN(vt0.c0)))) FROM vt0, rt1 WHERE (CASE WHEN (((NULL))<=(('0.7150952878835274'))) THEN (~ (0.8006034794286014)) WHEN (('')IS(NULL)) THEN NULL COLLATE NOCASE WHEN CAST(0.5910044324714137 AS INTEGER) THEN CAST(x'' AS NUMERIC) END); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)<=(rt1.c3))) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((SUM(vt0.c0))OR((~ (rt1.c2)))))OR(vt0.c0)))OR(((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)))))AND(COUNT(*))), ((NULL) BETWEEN (NULL) AND ((NOT (rt1.c3)))), ((((rt1.c1)IS(vt0.c0)))+(rt1.c1)), (((((rt1.c3, vt0.c0, rt1.c2)) BETWEEN ((vt0.c0, rt1.c1, rt1.c2)) AND ((NULL, rt1.c0, rt1.c0))))<<(vt0.c0 COLLATE BINARY)), rt1.c1 FROM rt1, vt0 WHERE (((((CAST(x'2472' AS REAL))AND((NOT (-1025485630)))))AND((((NULL)) BETWEEN ((NULL)) AND ((0.3328979949097348)))))); -- 0ms;
SELECT DISTINCT ((((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c3)))<(((vt0.c0)<<(rt1.c4)))), ((COALESCE(DISTINCT rt1.c4, rt1.c4))<>(rt1.c0)), UPPER(DISTINCT vt0.c0) FROM rt1;SELECT DISTINCT (((- (rt1.c2)))OR(UNICODE(rt1.c1))), rt1.c3 COLLATE BINARY, ((0.4885386935772196) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c1))) AND (((rt1.c0)/(rt1.c2)))) FROM rt1 WHERE (CAST(NULL AS INTEGER) COLLATE RTRIM) GROUP BY (~ ((+ (rt1.c0)))) HAVING (((- (rt1.c3))) IS TRUE);SELECT DISTINCT ((((((rt1.c2)AND(rt1.c3)))AND(rt1.c2)))&(((rt1.c2)&(vt0.c0)))) FROM rt1, vt0; -- 0ms;
SELECT TOTAL(CASE rt1.c1  WHEN rt1.c3 THEN x'' ELSE 0xffffffff9dcc3871 END), COUNT(*) OVER (), UNLIKELY(x'') FROM rt1 GROUP BY ((((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c3)))>(CAST(rt1.c3 AS INTEGER))); -- 0ms;
SELECT ALL LAG((((((vt0.c0))=((rt1.c0)))) BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE)), rt1.c1 COLLATE RTRIM, ((+ (rt1.c1)) IN ())) OVER () FROM rt1, vt0 WHERE ((- (0.6363090446727685)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TOTAL(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 END) FROM vt0 WHERE (((CASE WHEN x'' THEN NULL WHEN 0.0032687329161920076 THEN NULL WHEN x'' THEN '9223372036854775807' ELSE 0.8971002538495283 END)%(0.8189785184373964))) LIMIT -1258068421 OFFSET 415523034;SELECT MAX(CAST(rt1.c3 AS INTEGER)) FROM vt0 WHERE (CASE WHEN ('1137275546' IN ()) THEN (+ (0x669e6e4b)) END) GROUP BY ((CAST(rt1.c3 AS NUMERIC))||(((((((((((((vt0.c0)AND(rt1.c0)))OR(rt1.c0)))AND(x'')))AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c0)))) HAVING ((NULL)>>(vt0.c0 COLLATE BINARY));SELECT ALL rt1.c1 FROM rt1; -- 1ms;
SELECT DISTINCT CASE CAST(NULL AS REAL)  WHEN ((vt0.c0)%(rt1.c2)) THEN ((rt1.c1)*(rt1.c2)) END, NULL, CAST(vt0.c0 AS INTEGER) FROM rt1;SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))LIKE(((((rt1.c4)AND(vt0.c0)))AND(vt0.c0)))) FROM rt1, vt0 ORDER BY CAST(rt1.c1 AS REAL) COLLATE BINARY ASC, ((rt1.c3)IS(rt1.c4)) COLLATE RTRIM, MAX(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)), UPPER(rt1.c4))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt1.c3, rt1.c4, rt1.c4)) NOT BETWEEN ((rt1.c2, ROUND(rt1.c2, vt0.c0), ((rt1.c4) ISNULL))) AND ((((((vt0.c0)AND(vt0.c0)))OR(rt1.c0)), (((rt1.c4)) BETWEEN ((rt1.c2)) AND ((vt0.c0))), CAST(rt1.c0 AS INTEGER)))) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((((rt1.c0)%(rt1.c3)))) AND ((COUNT(vt0.c0)))) FROM rt1, vt0 WHERE (((((((((x'' COLLATE NOCASE)AND(NULL COLLATE RTRIM)))OR(((0X53f65558) BETWEEN (NULL) AND (NULL)))))OR((((x''))<>((0.7535677722381484))))))OR((+ (x''))))); -- 0ms;
SELECT (((rt1.c1, NULL, vt0.c0)) BETWEEN ((CASE rt1.c4  WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c1 END, (+ (rt1.c0)), 0xffffffffef1db29f)) AND ((rt1.c4, ABS(DISTINCT 0.575115688694973), ((0.2715809788545178)<('P#莌HCa0d'))))), rt1.c3, 0.8205614438741898 FROM vt0, rt1 WHERE (((NULL)==('0.571177838035566' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (-1.351655949E9 IN ((+ (rt1.c0)))), NULL, (((((- (rt1.c2)))AND(1169470227)))AND('')) FROM vt0 WHERE (ABS(((('1956560899')) NOT BETWEEN ((0.2832087922555435)) AND ((NULL)))));SELECT ALL ((((vt0.c0)>(x'')))GLOB(((rt1.c2)-(vt0.c0)))) FROM rt1 WHERE (((((COALESCE(DISTINCT '-1634883592', '-910915361'))OR((NULL IN (NULL)))))AND(((((((((x'')OR(0.578662878526602)))AND(NULL)))OR(0.7650134476979886)))OR(0.25838039189923934)))));SELECT DISTINCT COUNT(((rt1.c2)*(rt1.c1))) OVER ( ROWS  CURRENT ROW), TOTAL(((rt1.c1)&(vt0.c0))), (((CAST(rt1.c0 AS INTEGER), CASE WHEN rt1.c2 THEN rt1.c1 ELSE '' END, MAX(rt1.c0)))<=((AVG(rt1.c3), ((rt1.c1)<(vt0.c0)), MAX(rt1.c4)))) FROM rt1;SELECT DISTINCT ((((((rt1.c3)AND('?&')))AND(rt1.c1))) NOT BETWEEN (rt1.c0) AND ((((rt1.c4, rt1.c2, vt0.c0, rt1.c3, vt0.c0))<>((rt1.c1, ']R&-롟hkci', rt1.c3, rt1.c2, rt1.c0))))) FROM rt1 WHERE (x'f2ac');SELECT ALL rt1.c2 FROM rt1, vt0 WHERE (((((x'') NOT BETWEEN (x'') AND (NULL))) IS TRUE)); -- 0ms;
SELECT ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) COLLATE BINARY, (((((rt1.c3 IN (rt1.c0)))AND((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c3))))))OR(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), ((((((rt1.c4)-(rt1.c0)))OR(GROUP_CONCAT(rt1.c1))))AND(((rt1.c2)>(rt1.c2)))) FROM vt0 LIMIT 1670386401 OFFSET 1721658955;SELECT rt1.c1 FROM vt0;SELECT (((- (rt1.c0))) NOT BETWEEN (HEX(DISTINCT rt1.c3)) AND (((NULL)>>(rt1.c2)))) FROM vt0;SELECT ALL GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0))), CASE WHEN rt1.c0 COLLATE BINARY THEN IFNULL(rt1.c3, rt1.c0) ELSE ((rt1.c1) IS FALSE) END, COUNT(TRIM(rt1.c3)) OVER () FROM rt1, vt0;SELECT DISTINCT SUM(NULL) FROM rt1, vt0 WHERE (((0X669d58bc)>>(0.4143794140421533)) COLLATE NOCASE); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), COUNT(CAST(vt0.c0 AS NUMERIC)), (((((rt1.c2)AND(x'92d2')))AND(360950817)) IN ()) FROM vt0 LIMIT 1933342980 OFFSET 1156536742; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT rt1.c3))||(AVG(rt1.c1))), ((vt0.c0)IS(rt1.c0)) COLLATE RTRIM, CAST(LIKELIHOOD(rt1.c1, 0.6910114986917839) AS BLOB), x'', (((rt1.c1)) BETWEEN ((COUNT(x''))) AND (((((rt1.c0, rt1.c0, rt1.c0))=((rt1.c3, '387325210', rt1.c2)))))) FROM vt0 ORDER BY CASE WHEN (- (rt1.c4)) THEN CAST(rt1.c2 AS NUMERIC) ELSE ((('!L#')) BETWEEN ((rt1.c1)) AND ((rt1.c3))) END  NULLS LAST LIMIT -558585563;SELECT DISTINCT NULL, vt0.c0, ((((rt1.c2)OR(((rt1.c0)GLOB(rt1.c3)))))AND(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)))), ((((vt0.c0)*(rt1.c1))) ISNULL), GROUP_CONCAT(((x'')<(rt1.c0))) OVER () FROM vt0;SELECT ((rt1.c3 IN ()) IN ()) FROM vt0, rt1 WHERE ((('' COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((((((x'', 0.9995128174215109, NULL, NULL, NULL)) NOT BETWEEN ((-734986899, NULL, x'48896741', x'', -2010332294)) AND ((NULL, x'', x'', NULL, ''))))=(('-1759606146' IN (NULL))))); -- 0ms;
SELECT DISTINCT rt1.c0, (((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c3)))OR(rt1.c3))))=((vt0.c0 COLLATE BINARY))), (((~ (rt1.c1))) ISNULL) FROM rt1, vt0 WHERE (((((('-556086646') ISNULL)))!=((NULL)))); -- 0ms;
SELECT DISTINCT (- (((vt0.c0)-(0.7866694842936076)))), (((rt1.c4 COLLATE RTRIM))>((((rt1.c2)OR(rt1.c4))))), NULLIF(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 ELSE x'' END, (- (rt1.c4))) FROM rt1 WHERE ((NOT ((('') NOTNULL)))) ORDER BY CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN ((rt1.c1)<(x'')) WHEN CAST(rt1.c2 AS REAL) THEN vt0.c0 WHEN (((rt1.c3))>((vt0.c0))) THEN (+ (rt1.c1)) END DESC;SELECT DISTINCT ((CASE rt1.c2  WHEN rt1.c4 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c0 WHEN NULL THEN rt1.c4 END)>=(rt1.c2 COLLATE NOCASE)) FROM rt1 WHERE ((CASE NULL  WHEN -1.0197444E9 THEN 0.7006561001849223 WHEN '' THEN '1670386401' WHEN x'' THEN x'' ELSE '' END IN ()));SELECT COUNT(*) FROM rt1, vt0 GROUP BY UPPER(DISTINCT (vt0.c0 IN ())), CAST(((rt1.c0)-('O/,f\n')) AS REAL), ((((rt1.c4) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ORDER BY 9.51690211E8  NULLS FIRST; -- 1ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED((((vt0.c0))>=((rt1.c2)))), CASE (vt0.c0 IN ())  WHEN ABS(rt1.c4) THEN ((rt1.c0)-(vt0.c0)) END, ((((rt1.c4)OR(rt1.c3))) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((vt0.c0)))) AND ((rt1.c2 IN ()))) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID(), (((rt1.c4)-(vt0.c0)) IN ((- (rt1.c2)))), ((rt1.c4 COLLATE BINARY)>=((rt1.c4 IN (rt1.c4)))) FROM rt1;SELECT DISTINCT 0.9290927641027316 FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((('^^F' IN (rt1.c2, rt1.c3)))) AND (((rt1.c0 IN (NULL))))) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2)==(rt1.c4)))LIKE((NOT (rt1.c2)))) FROM rt1 WHERE (x'4d90'); -- 0ms;
SELECT DISTINCT (((((rt1.c4, rt1.c1, rt1.c0, rt1.c4, rt1.c2))>((rt1.c2, vt0.c0, rt1.c3, rt1.c1, rt1.c2))))AND('1[')) FROM rt1 WHERE ((((((((NULL))<=((x'18f3'))))OR(((('0.6484437783044359'))<((-8.10606815E8))))))AND(CASE x'0b77'  WHEN NULL THEN '-771240567' ELSE x'' END)));SELECT DISTINCT ((((NOT (rt1.c4))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c4))))) FROM vt0 WHERE (((CASE 0.11520699062534823  WHEN x'' THEN 0.8989701342582986 ELSE 1104294972 END)<(x''))) LIMIT -642512940;SELECT DISTINCT 0.05902809300509271, COUNT(((rt1.c1)||(vt0.c0))) OVER ( GROUPS CAST(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END AS NUMERIC) PRECEDING), (((rt1.c1)|(rt1.c3)) IN (SUM(rt1.c0))) FROM rt1, vt0 WHERE (ABS(0.5377497355747081 COLLATE RTRIM));SELECT ALL LIKELY(DISTINCT (rt1.c4 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(rt1.c2)))==(GLOB(rt1.c2, rt1.c2))) FROM rt1, vt0 WHERE (CAST(CASE WHEN x'' THEN '(YX' ELSE -1412550287 END AS NUMERIC)); -- 0ms;
SELECT SUM((((((((('883065542')AND(rt1.c3)))OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c3))), TOTAL((+ ('0.11719198929741936'))), ((NULLIF(rt1.c2, rt1.c2)) NOTNULL) FROM vt0 WHERE (((CASE WHEN NULL THEN x'addd3b4b' ELSE '<' END)IS((x'' IN (NULL, '-2105430647')))));SELECT (((vt0.c0)) NOT BETWEEN ((((rt1.c0)AND(rt1.c0)))) AND ((SQLITE_COMPILEOPTION_GET(rt1.c1)))) FROM rt1, vt0 WHERE (CASE WHEN x'' THEN (x'' IN ('1250658470')) ELSE '' COLLATE BINARY END) GROUP BY ((('ui') IS TRUE) IN (CAST(rt1.c2 AS TEXT))); -- 0ms;
SELECT DISTINCT ((((rt1.c2)AND((((vt0.c0))<=((rt1.c3))))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) FROM vt0, rt1 WHERE (((('D+b\n'))>=((('' IN ()))))); -- 0ms;
SELECT ALL ((((((rt1.c2)OR(rt1.c3)))AND(vt0.c0))) BETWEEN (x'') AND ((rt1.c1 IN (rt1.c0)))) FROM rt1 WHERE (((x'09fc' COLLATE BINARY) NOT BETWEEN (('2XxmN1᝽' IN ())) AND ((((0.6074818626788215, 0.42979721106477886, x'')) BETWEEN (('483098802', 0.22786415519806014, 0.21114194327058888)) AND ((0Xffffffff8ab3c700, NULL, '	*'))))));SELECT DISTINCT ((((rt1.c2) IS TRUE)) NOTNULL), 0X18a78c95, rt1.c1 FROM vt0;SELECT DISTINCT TOTAL(((vt0.c0)<<(vt0.c0))) OVER () FROM rt1 WHERE ((0.7707168330552134 COLLATE NOCASE IN ()));SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((-1580300991 COLLATE BINARY)) AND ((CAST(rt1.c3 AS BLOB)))) FROM rt1, vt0; -- 0ms;
SELECT ALL rt1.c1, ((IFNULL(DISTINCT rt1.c1, rt1.c2))>(COUNT(*))), GROUP_CONCAT(x'db16') OVER () FROM rt1 WHERE ((((((x'')) NOT BETWEEN ((0.15154434563932817)) AND ((NULL)))) BETWEEN ((('661971561') NOT BETWEEN (x'') AND (749017160))) AND (x''))); -- 0ms;
SELECT DISTINCT CAST(AVG(rt1.c0) AS BLOB) FROM vt0;SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))) AND (((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))))), (((rt1.c3, rt1.c2, rt1.c2)) BETWEEN (((((rt1.c1))>((vt0.c0))), (((vt0.c0))!=((rt1.c0))), (((rt1.c2))<((vt0.c0))))) AND ((MIN(rt1.c2), (NOT (rt1.c3)), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0))))), CASE (('')*(rt1.c1))  WHEN (rt1.c3 IN (rt1.c3, rt1.c1)) THEN ((vt0.c0) ISNULL) END, rt1.c3, COUNT((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c4)))) OVER (), COALESCE(DISTINCT CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 END, (rt1.c1 IN ())), rt1.c1 FROM rt1;SELECT ALL DENSE_RANK() OVER () FROM vt0, rt1 WHERE (((('-1951040625' COLLATE RTRIM))==((((((8.44715787E8)AND(x'')))AND(NULL)))))) ORDER BY (- (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))) ASC  NULLS FIRST; -- 0ms;
SELECT (((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))-(vt0.c0)) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(x'' COLLATE RTRIM));SELECT ALL PERCENT_RANK() OVER () FROM vt0; -- 1ms;
SELECT ALL ((rt1.c1)+(HEX(DISTINCT vt0.c0))) FROM rt1, vt0 WHERE (((NULL)IS NOT((-1963052768 IN ('-1288074621', x'80c9'))))); -- 0ms;
SELECT DISTINCT ((((rt1.c3)!=(rt1.c3)))IS(x'')) FROM vt0 WHERE (((((0.6287733339095507 IN ())))!=((((((NULL)OR(-429778514)))AND(x'ed95')))))) ORDER BY (((((((rt1.c2)OR(rt1.c0)))AND(rt1.c4))))>=((((((rt1.c0)AND(rt1.c2)))AND(NULL)))));SELECT DISTINCT (NOT ((rt1.c0 IN (rt1.c4)))), ((rt1.c2 COLLATE BINARY)<=(((rt1.c0)||('-1996241813')))), (((0.9885532310780213))>=((((((rt1.c4)AND(rt1.c2)))AND(NULL))))), ((((0.3425432269261556)/(rt1.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0)))) AND ((rt1.c0 IN ()))), ((((((rt1.c1) NOTNULL))AND(NULLIF(rt1.c4, 0.25838039189923934))))OR(rt1.c1 COLLATE BINARY)) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((rt1.c3 COLLATE NOCASE) ISNULL) FROM vt0 WHERE ((((0.9279743860300883 IN (NULL))) ISNULL));SELECT ALL (((rt1.c4)/(rt1.c0)) IN ()) FROM rt1, vt0 WHERE ((((0.4254477742276406 IN ())) IS FALSE)); -- 0ms;
SELECT ((((((((((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c2)))OR(CAST(rt1.c2 AS REAL))))OR(CAST(rt1.c0 AS NUMERIC))))OR(((rt1.c3) BETWEEN (x'') AND (rt1.c0)))))OR(AVG(rt1.c2))) FROM vt0 WHERE (x'') LIMIT 1255277726;SELECT ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN ((+ (rt1.c2))) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0))))) FROM rt1 WHERE (CAST(((NULL)>=(NULL)) AS TEXT));SELECT DISTINCT (((((rt1.c3, rt1.c2, rt1.c4)) BETWEEN ((rt1.c0, rt1.c4, rt1.c0)) AND ((rt1.c3, rt1.c2, rt1.c0)))) ISNULL), MIN(UNLIKELY(DISTINCT rt1.c3)), (((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c4, ((rt1.c1)!=(rt1.c1)), (rt1.c4 IN ()))) AND ((((rt1.c4)||(rt1.c0)), ((rt1.c2)>(rt1.c4)), MIN(rt1.c3)))), -1285445370, (rt1.c2 IN (CASE WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END)) FROM vt0;SELECT DISTINCT CASE (rt1.c4 IN ())  WHEN 0.42107783165159596 THEN (((rt1.c4))!=((rt1.c3))) END FROM vt0, rt1 GROUP BY ((((rt1.c2) IS TRUE))LIKE((~ (rt1.c0)))) HAVING ((MIN(rt1.c2))*(x'')); -- 1ms;
SELECT DISTINCT (((((-548248928 IN (rt1.c0)))AND((NOT (rt1.c2)))))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))), ((json_extract(vt0.c0, vt0.c0)) NOT BETWEEN (((rt1.c4)&(rt1.c4))) AND (CAST(vt0.c0 AS NUMERIC))), ((((rt1.c3)-(rt1.c2))) IS TRUE) FROM rt1, vt0 WHERE ((((CAST(0.7234581902644015 AS NUMERIC)))>=(((NOT ('-1808944952')))))) GROUP BY 0x7bb6e8af HAVING (~ (vt0.c0));SELECT CAST(((rt1.c3)!=(rt1.c0)) AS NUMERIC) FROM rt1; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT MAX(((rt1.c2)*(rt1.c1)) COLLATE NOCASE) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0, CASE CAST(rt1.c3 AS NUMERIC)  WHEN (+ (-3.75539051E8)) THEN rt1.c3 END, (((((rt1.c3))==((rt1.c3)))) BETWEEN (((x'')>>(rt1.c4))) AND (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((((((((((~ ('')))AND(CASE WHEN x'cffe' THEN x'ae27' END)))AND(((('1956560899'))<=((''))))))AND(LENGTH('-991414635'))))AND((NOT ('s/#<Db')))));SELECT ((((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((x''))), rt1.c0 COLLATE RTRIM, (((rt1.c1, rt1.c4, rt1.c2))==((rt1.c2, 0.5929021565222525, rt1.c0)))))=((((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c4)), rt1.c4, rt1.c3 COLLATE BINARY))) FROM vt0;SELECT DISTINCT CASE ((rt1.c3)%(rt1.c0))  WHEN CASE WHEN rt1.c0 THEN rt1.c3 END THEN rt1.c1 ELSE CAST(vt0.c0 AS NUMERIC) END FROM vt0, rt1 WHERE (CAST(CAST(x'' AS NUMERIC) AS REAL)); -- 0ms;
SELECT (+ (rt1.c3)) FROM vt0;SELECT ALL CAST(((rt1.c4)>(rt1.c0)) AS INTEGER) FROM vt0, rt1 WHERE (((((x'')OR('p''D')))OR(x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((rt1.c4)) BETWEEN ((rt1.c1)) AND ((vt0.c0))))<<(((rt1.c4) BETWEEN (rt1.c1) AND (vt0.c0)))) FROM vt0, rt1; -- 0ms;
SELECT ALL (rt1.c0 IN (((rt1.c4)%(rt1.c4)), (+ (rt1.c4)))) FROM rt1, vt0 WHERE (((((rtreenode(x'', NULL))OR(((((x'')AND(x'')))AND(x'')))))AND(((x'a7c7') ISNULL)))); -- 0ms;
SELECT ALL '\r|F鋖_廒' COLLATE NOCASE, TYPEOF(ABS(DISTINCT rt1.c3)), ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c2)))OR(((rt1.c3)!=(vt0.c0)))) FROM vt0 WHERE ('') GROUP BY (((CAST(vt0.c0 AS REAL)))<=((0x733c7904))) ORDER BY ((((rt1.c1 IN ()), (+ (rt1.c2)), (- (rt1.c1))))<=((rt1.c1 COLLATE BINARY, CAST(x'' AS TEXT), rt1.c4))) DESC  NULLS LAST LIMIT 1510763483 OFFSET -1288074621;SELECT DISTINCT CAST(vt0.c0 AS REAL) COLLATE RTRIM, SUM((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))), ((SUM(rt1.c4))!=('1522494162')) FROM rt1;SELECT ((NULL)GLOB((('38y7RZE') NOTNULL))), x'', AVG(0.9763014837708403), ((CASE WHEN rt1.c1 THEN rt1.c1 END) ISNULL), ((((rt1.c0)<(vt0.c0)))+(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c3 END)) FROM rt1, vt0; -- 0ms;
SELECT ALL CAST(((rt1.c1)*(rt1.c4)) AS REAL), ((vt0.c0) NOTNULL), TOTAL(TIME(vt0.c0, rt1.c3, rt1.c1)), MIN(vt0.c0), (((rt1.c1, rt1.c4, rt1.c2)) NOT BETWEEN ((MAX(rt1.c0), ((((rt1.c4)OR(rt1.c2)))OR(rt1.c3)), 0.5673838778235202 COLLATE RTRIM)) AND ((((((rt1.c1)AND(NULL)))OR(rt1.c2)), (rt1.c4 IN ()), ((((rt1.c4)OR(rt1.c4)))OR(rt1.c2))))) FROM vt0 WHERE ((((('862377611')GLOB(x'')))<(HEX(DISTINCT 100283010))));SELECT MAX(((((((((NULL)OR(rt1.c4)))AND(rt1.c4)))OR(0xffffffffd0d2575d)))AND(vt0.c0))), rt1.c2, NULL FROM vt0 WHERE (LIKELIHOOD(DISTINCT NULL, 0.03787166862752922));SELECT ALL TOTAL((rt1.c4 IN ())) FROM vt0 ORDER BY '1382650400' DESC; -- 0ms;
SELECT ALL rt1.c4, NULL, (('')=(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))) FROM rt1;SELECT ((((rt1.c0)||(vt0.c0))) BETWEEN (CASE rt1.c1  WHEN vt0.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c0 END) AND ('}''KW''3')) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT vt0.c0, CAST(TRIM(rt1.c3) AS NUMERIC), (((rt1.c1 IN (rt1.c2)))LIKE(((rt1.c3) NOTNULL))) FROM vt0;SELECT ALL MIN((+ (rt1.c0))) FROM vt0, rt1 ORDER BY (((rt1.c4, vt0.c0, rt1.c2, rt1.c3, rt1.c0)) BETWEEN ((CAST(rt1.c4 AS TEXT), ((((((((vt0.c0)AND(rt1.c0)))AND(rt1.c0)))OR(NULL)))OR(rt1.c4)), CAST(0.08699279734448051 AS TEXT), TYPEOF(rt1.c0), ((vt0.c0)=(rt1.c3)))) AND ((((((rt1.c2)AND(rt1.c4)))OR(rt1.c1)), ((((NULL)OR(rt1.c1)))AND(rt1.c1)), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END, rt1.c4, (rt1.c1 IN (vt0.c0))))) ASC, x'' DESC; -- 0ms;
SELECT TOTAL(((rt1.c3) IS TRUE)) OVER (), NULLIF(NULL, ((rt1.c1)>(rt1.c4))), (~ (((rt1.c0)>>(vt0.c0)))), ((rt1.c2) NOT BETWEEN ((('753682064')AND(x''))) AND ((((rt1.c2, rt1.c4, rt1.c1))>=((rt1.c2, rt1.c2, rt1.c0))))), '2041989855' FROM rt1, vt0 GROUP BY (((((rt1.c1 IN ()))OR(COALESCE(DISTINCT rt1.c1, vt0.c0))))OR(CAST(rt1.c3 AS REAL))), CAST(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END AS INTEGER), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3))) NOT BETWEEN ((rt1.c4 IN ())) AND (((0.5961547288941584)-(vt0.c0)))); -- 1ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (rt1.c1) AND (NULL)))>>(x'40ab')) FROM vt0 WHERE (((((CAST(1789175277 AS TEXT))AND('0.42979721106477886' COLLATE NOCASE)))AND((((0.5207288593169095))<=((-2.099150517E9))))));SELECT CAST((+ (rt1.c1)) AS INTEGER) FROM rt1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt1;SELECT (((('-1454928853')OR(CASE WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 END)))OR(CASE rt1.c0  WHEN -1699899570 THEN rt1.c3 ELSE rt1.c0 END)) FROM vt0 WHERE (((CAST(x'' AS BLOB))*(((x'114d0034')/(x'a3b0'))))) ORDER BY vt0.c0 ASC;SELECT LAST_VALUE(TRIM(DISTINCT (rt1.c4 IN ()), rt1.c1)) OVER (), GROUP_CONCAT(((((((((rt1.c0)OR('387325210')))AND(rt1.c0)))AND(x'')))OR(x'2299'))) OVER (), CAST((rt1.c1 IN ()) AS TEXT) FROM vt0, rt1 WHERE (CASE WHEN CASE x'aaefc33b'  WHEN x'' THEN 'oO' WHEN '-1580300991' THEN NULL WHEN 'uUx&' THEN 0xffffffffa3ba6687 END THEN (NULL IN ('883921767', '')) WHEN (('wkaa.')<>('|X\?\#✥R1')) THEN (((('499177832')OR(0xffffffffb3398a83)))AND('-2073370880')) WHEN ((0.44527883359500897)<=('l*')) THEN ((NULL)>>('0.3328979949097348')) ELSE ((0.0586592593577121)&(x'af25')) END); -- 1ms;
SELECT DISTINCT ((TOTAL(vt0.c0)) NOT BETWEEN (((rt1.c1)>>(rt1.c0))) AND (vt0.c0 COLLATE RTRIM)), ((((rt1.c1 IN ())))<=((((((rt1.c3)OR(rt1.c0)))OR(vt0.c0))))), FIRST_VALUE((((rt1.c4, rt1.c2, vt0.c0, rt1.c0, rt1.c2, rt1.c0, rt1.c2)) BETWEEN ((((-1.278209493E9)<<(rt1.c1)), ((((((((rt1.c4)AND(0.018366666395264852)))OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c3)), ((NULL) IS TRUE), rt1.c4 COLLATE RTRIM, ((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)), (((x''))>((rt1.c4))), (('PG') IS TRUE))) AND ((rt1.c3 COLLATE NOCASE, CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 END, NULL, (((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c3))), LAST_INSERT_ROWID(), ((rt1.c4) IS FALSE), (rt1.c0 IN ()))))) OVER ( ORDER BY json_array_length(((rt1.c3)||(rt1.c4))), ((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN '' WHEN '+d' THEN rt1.c4 WHEN rt1.c1 THEN 0.9655605589929774 ELSE rt1.c1 END)GLOB(((rt1.c0)<(rt1.c2)))) ASC  NULLS FIRST), COUNT(*) OVER ( ORDER BY (((rt1.c3, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c4, '1322786236', '')) AND (('1094758264', rt1.c4, rt1.c0))) COLLATE RTRIM  NULLS LAST), x'' FROM rt1, vt0;SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c3 AS REAL))) AND ((((rt1.c1) IS FALSE)))) FROM rt1 WHERE (TYPEOF(CAST('-991414635' AS TEXT))); -- 0ms;
SELECT ((((((rt1.c2)OR(0xffffffffef1db29f)))OR(rt1.c1))) IS FALSE) FROM rt1, vt0 WHERE (CASE WHEN x'' THEN (NOT (NULL)) WHEN LOWER(x'') THEN (+ (0x772c4e50)) WHEN (- (-1163908468)) THEN ((x'fe27596b') NOTNULL) WHEN (NULL IN (0.4756088091088623)) THEN (('-90862094') NOTNULL) WHEN (((('0.16891541669305288')OR('R/ZE{I_')))OR(x'')) THEN ((NULL)*('zQD')) ELSE (x'' IN ()) END) LIMIT -1093643626; -- 0ms;
SELECT DISTINCT 0.5679694701843284 COLLATE NOCASE COLLATE NOCASE FROM vt0 WHERE (CASE WHEN ((-1351655949) IS FALSE) THEN '483098802' ELSE IFNULL(0X7e1d387b, 'a') END); -- 0ms;
SELECT DISTINCT x'', ((((rt1.c1))>=((rt1.c2))) IN ()), ((COUNT(*)) BETWEEN (CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 END) AND (CAST(rt1.c1 AS TEXT))) FROM vt0 WHERE (((('-1728855038', 0.027747201767911345, x'')) NOT BETWEEN (('-68555371', NULL COLLATE BINARY, ((((NULL)AND(1.255277726E9)))OR('160099082')))) AND ((NULL, LIKELY(DISTINCT 0.7732587313215532), x'' COLLATE NOCASE))));SELECT ((MAX(rt1.c3)) ISNULL), CAST((((vt0.c0))>((rt1.c2))) AS BLOB), (((('-644686129')OR(((((vt0.c0)OR(rt1.c2)))OR(rt1.c4)))))OR(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c3)))) FROM vt0, rt1 WHERE (((CAST('1956560899' AS REAL))/((('9uZ^') BETWEEN ('1821264584') AND (-1.436376351E9))))) LIMIT 2115844219; -- 0ms;
SELECT NULL FROM vt0, rt1 LIMIT -444746559; -- 0ms;
SELECT DISTINCT ((((((rt1.c2)AND(rt1.c2)))OR(rt1.c4))) BETWEEN (CAST(rt1.c4 AS TEXT)) AND (((rt1.c0)=(rt1.c0)))) FROM rt1 WHERE (LOWER((('-1194908067') IS TRUE))); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)AND(rt1.c0)))OR(vt0.c0))) BETWEEN (',wfka싖u') AND ((NOT (vt0.c0)))) FROM rt1 WHERE (CASE (~ ('1137275546'))  WHEN CASE NULL  WHEN 1288423011 THEN NULL END THEN ((0X6160d993)==(-1548065145)) ELSE (((-1.0197444E9)) NOT BETWEEN (('665653264')) AND ((''))) END);SELECT ALL (CAST(rt1.c4 AS REAL) IN ()) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c0)) BETWEEN ((0X3259570b)) AND ((rt1.c0))) COLLATE RTRIM FROM vt0;SELECT (((((('0.20217832828445348') NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))AND(json_type(rt1.c1))), AVG((rt1.c0 IN (rt1.c4))) FILTER(WHERE 0.13348275141855515) OVER (), ((((rt1.c3)IS(rt1.c4))) IS FALSE) FROM vt0 WHERE ((((~ (0.9870527227959061)))==(LOWER(DISTINCT x'702a0141'))));SELECT ALL (((((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))AND(CAST(rt1.c1 AS BLOB))))AND(((((rt1.c0)AND(rt1.c1)))AND(rt1.c3)))) FROM vt0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN (- (1629832297)) THEN ('1387164510' IN ()) ELSE (((x''))==(('1670761597'))) END);SELECT ((rt1.c1)*(rt1.c0)) COLLATE RTRIM FROM rt1, vt0; -- 0ms;
SELECT ALL SUM('-1182651543') OVER () FROM vt0 WHERE (((-940215531 COLLATE RTRIM)>((('') NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ((((rt1.c3) BETWEEN (rt1.c3) AND (',(_d')))LIKE(((vt0.c0) NOTNULL))), GROUP_CONCAT((x'' IN ())) OVER (), ((rt1.c1) IS FALSE) COLLATE BINARY FROM rt1, vt0 WHERE ((CASE x''  WHEN x'4e8dfd70' THEN x'' END IN ())) LIMIT -1094829212; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt1.c1) NOT BETWEEN (x'6ec9') AND (rt1.c3))) OVER () FROM vt0;SELECT DISTINCT CAST(LIKELY(DISTINCT rt1.c1) AS TEXT), (((((4.6843345E8))>=((rt1.c3))))<=(rt1.c0 COLLATE NOCASE)), x'f558efd1' FROM rt1 ORDER BY TRIM((rt1.c1 IN (rt1.c0)), ((rt1.c3)<<(rt1.c0))), (((((((((((rt1.c4, vt0.c0, 189045509))>=((vt0.c0, rt1.c1, rt1.c1))))OR(rt1.c0)))OR(CASE rt1.c3  WHEN vt0.c0 THEN rt1.c4 ELSE vt0.c0 END)))AND(((rt1.c4) NOTNULL))))OR('-165693345' COLLATE NOCASE));SELECT ((((CAST(rt1.c0 AS INTEGER))AND(GROUP_CONCAT(rt1.c3))))AND((rt1.c2 IN (rt1.c4)))) FROM vt0;SELECT DISTINCT NTH_VALUE(((((rt1.c3)OR(rt1.c4)))<>(LOWER(rt1.c2))), '-1198213609') OVER ( GROUPS  CURRENT ROW) FROM rt1 ORDER BY (((((((('838498501')AND(((rt1.c4)>=(vt0.c0)))))AND(rt1.c3)))AND(CASE WHEN 0.12392413264249758 THEN vt0.c0 END)))OR(((((rt1.c2)AND(rt1.c4)))OR(rt1.c2))))  NULLS LAST;SELECT rt1.c1, UNLIKELY(DISTINCT rt1.c3) COLLATE NOCASE, ((rt1.c1) IS TRUE) COLLATE BINARY FROM rt1; -- 0ms;
SELECT GROUP_CONCAT((rt1.c4 IN ())) OVER () FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((STRFTIME(rt1.c4, vt0.c0, rt1.c1, rt1.c2, rt1.c1))OR(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN 0.3636934424346674 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN rt1.c3 THEN rt1.c0 ELSE vt0.c0 END)))AND(rt1.c3)))AND(COUNT(rt1.c4))) FROM rt1;SELECT DISTINCT AVG(((rt1.c1) IS FALSE)) OVER () FROM vt0;SELECT DISTINCT ((0Xffffffffdab55fa4)%(x'')) FROM vt0, rt1; -- 1ms;
SELECT ALL CAST(CAST(rt1.c4 AS NUMERIC) AS INTEGER) FROM vt0 LIMIT -1233287852;SELECT ALL ((0.7148094838500186)IS(LIKELIHOOD(rt1.c0, 0.7492687823971358))) FROM rt1; -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt1.c1 AS TEXT)) OVER () FROM vt0 WHERE (((((x'd28b') ISNULL)) NOT BETWEEN (CASE WHEN 0X5935c33f THEN -1512949702 ELSE x'' END) AND (((0.9870527227959061)+(0.5178815837396886))))) GROUP BY LENGTH(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0))), CAST((((x'', rt1.c3, rt1.c3)) BETWEEN ((x'', rt1.c3, NULL)) AND ((rt1.c4, rt1.c3, rt1.c4))) AS INTEGER), LOWER(DISTINCT ((rt1.c0)%(rt1.c4)));SELECT ALL (0.8971002538495283 IN ()) FROM rt1, vt0; -- 0ms;
SELECT ALL LOWER(DISTINCT CAST(rt1.c2 AS TEXT)) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT (((((rt1.c0, rt1.c3, rt1.c0))=((vt0.c0, 0.549324129911061, '')))) NOTNULL) FROM vt0;SELECT CAST((rt1.c2 IN (rt1.c1)) AS TEXT) FROM vt0 WHERE (((('-1957314680')) BETWEEN ((',' COLLATE NOCASE)) AND ((((-3.08722215E8)||(NULL))))));SELECT DISTINCT ((((rt1.c4)/(rt1.c2)))<=(((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c3)))), GROUP_CONCAT((((0.07530683649059067))<=((rt1.c4)))) OVER (), GROUP_CONCAT(((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c3)))AND(vt0.c0))) FROM vt0, rt1 ORDER BY CASE WHEN (~ (rt1.c1)) THEN (+ (rt1.c1)) END LIMIT -1083462647 OFFSET 916413316; -- 0ms;
SELECT ALL (((NOT (rt1.c4))) NOT BETWEEN ((vt0.c0 IN ())) AND (json_patch(rt1.c4, vt0.c0))) FROM vt0 WHERE (('a' IN ('~k0{|')) COLLATE RTRIM) GROUP BY (((((vt0.c0))>((rt1.c2)))) IS TRUE) HAVING ((rt1.c1) NOTNULL) COLLATE NOCASE;SELECT ALL ((NULL COLLATE RTRIM)LIKE(((rt1.c3) ISNULL))) FROM rt1 WHERE (((('-123412277', 2.018019968E9, -800594422)) NOT BETWEEN ((x'104b' COLLATE RTRIM, ((0.710367607738315) NOT BETWEEN (0.05360416819950964) AND (0.6384141602104091)), CAST(NULL AS TEXT))) AND (((~ ('1727338950')), ((x'')%('-1094829212')), (~ (0x1fa93a67)))))); -- 0ms;
SELECT DISTINCT ((((HEX(vt0.c0))AND((+ (rt1.c0)))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0, rt1; -- 1ms;
SELECT ((MAX(rt1.c2))LIKE(((((rt1.c3)OR(0x5cfb9b2d)))AND(rt1.c0)))), 1.507066091E9, (rt1.c0 IN ()) FROM vt0;SELECT ((rt1.c1) IS FALSE) COLLATE RTRIM, (vt0.c0 IN ()) COLLATE BINARY, (((((rt1.c1, rt1.c3, rt1.c2)) BETWEEN ((rt1.c4, NULL, rt1.c3)) AND ((vt0.c0, rt1.c1, rt1.c1)))) NOTNULL) FROM vt0 WHERE (((0.36408379371969635)>('')) COLLATE BINARY) LIMIT 1765035825;SELECT ((((((((((((((vt0.c0)|(rt1.c1)))OR(((((((((rt1.c2)AND(rt1.c0)))OR(2.068254864E9)))OR(rt1.c3)))AND(rt1.c1)))))OR(CASE WHEN rt1.c1 THEN rt1.c4 ELSE vt0.c0 END)))AND(((0.40187494201800156) IS TRUE))))OR(((rt1.c0) IS TRUE))))AND((+ (rt1.c0)))))AND(vt0.c0 COLLATE NOCASE)), ((((rt1.c4) IS FALSE)) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((((vt0.c0))<=((rt1.c2))))), CASE 6.61971561E8  WHEN ((rt1.c4) ISNULL) THEN CASE rt1.c3  WHEN '' THEN rt1.c1 END ELSE CAST(rt1.c0 AS INTEGER) END FROM rt1, vt0 WHERE (((('횋q2mL')-(x'')) IN ((+ (NULL)), 0.5621557482803168 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (~ ((- (rt1.c1)))) FROM rt1, vt0 WHERE (CASE (((((((('-1701853070')OR('1329962324')))OR(x'')))AND(0xffffffffca720c21)))OR('{NY'))  WHEN ((-1559177240)<<('')) THEN IFNULL(0.7532471879416478, 'z0') END); -- 0ms;
SELECT DISTINCT (((((rt1.c2))>((rt1.c3))))>=((rt1.c4 IN ()))) FROM rt1, vt0 WHERE (CASE WHEN ((0.9203122803621299) BETWEEN (x'') AND (0Xffffffffc5225fd5)) THEN ((((0X6e22c65c)AND(1721658955)))AND('N')) WHEN ((0Xffffffffc8b8ee1a) BETWEEN (NULL) AND ('-1288074621')) THEN (('9223372036854775807')>=(x'')) WHEN -0.0 THEN (~ (x'')) END); -- 1ms;
SELECT DISTINCT (((+ (vt0.c0))) IS FALSE), RANK() OVER (), CAST(((((vt0.c0)AND(vt0.c0)))OR(1250658470)) AS REAL) FROM rt1;SELECT ALL ABS((((rt1.c4))>=((rt1.c0)))), COUNT(CAST(x'8722208d' AS BLOB)), COUNT(*) OVER () FROM rt1 WHERE (((CAST(x'' AS INTEGER)) IS TRUE)) LIMIT -768050853; -- 0ms;
SELECT ALL CAST(rt1.c4 AS INTEGER) COLLATE RTRIM FROM vt0;SELECT ALL ((rt1.c4)LIKE(CAST(rt1.c1 AS TEXT))), ((((vt0.c0) IS TRUE)) NOT NULL), TRIM(DISTINCT (~ (vt0.c0))) FROM rt1, vt0 WHERE ((((('-2024226090')>>(x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((CAST(NULL AS TEXT), rt1.c4 COLLATE BINARY, (rt1.c0 IN ())))<>((rt1.c2 COLLATE BINARY, MAX(vt0.c0), TRIM(rt1.c2)))) FROM vt0, rt1 WHERE (((((x'')>=(NULL))) IS TRUE)); -- 0ms;
SELECT ALL ((rt1.c3) ISNULL) COLLATE NOCASE, (((rt1.c4, rt1.c2, rt1.c1, rt1.c2, rt1.c3)) NOT BETWEEN ((((rt1.c1)>>(rt1.c1)), ABS(rt1.c3), (NOT (rt1.c3)), (rt1.c3 IN ()), ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)))) AND ((COUNT(rt1.c1), ((vt0.c0)<<(rt1.c4)), AVG(rt1.c1), ((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)), ((vt0.c0)<=(rt1.c2))))), ((GROUP_CONCAT(rt1.c2))%(((0Xfffffffff8a4e0cb) BETWEEN (vt0.c0) AND (rt1.c2)))) FROM rt1, vt0; -- 1ms;
SELECT DISTINCT rt1.c4 FROM vt0, rt1 LIMIT 7412388; -- 0ms;
SELECT UNLIKELY(DISTINCT ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1))), ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))IS(((rt1.c0) IS FALSE))), ((((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c4))) AND ((((rt1.c4, vt0.c0, rt1.c2, rt1.c1, vt0.c0))>((rt1.c3, rt1.c4, rt1.c3, rt1.c4, vt0.c0))))) FROM rt1;SELECT ALL CASE WHEN ((rt1.c1) BETWEEN (rt1.c1) AND (NULL)) THEN 0X749ec003 WHEN rt1.c4 THEN TRIM(rt1.c0) WHEN (((rt1.c3))<((vt0.c0))) THEN ((rt1.c0) ISNULL) ELSE rt1.c0 COLLATE BINARY END FROM rt1, vt0; -- 0ms;
SELECT UPPER(DISTINCT (((vt0.c0))<=((rt1.c4)))) FROM rt1 GROUP BY ((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) IN ()) HAVING MAX((rt1.c3 IN (x'4ef1', NULL)));SELECT TRIM(CAST(rt1.c1 AS INTEGER)), rt1.c2, (((rt1.c0)/(0.5765760810649906)) IN ()) FROM vt0 WHERE (((((((NULL)OR(NULL)))AND('|l'))) BETWEEN ((('') BETWEEN (0.5650173870242197) AND ('}+u#'))) AND ((~ (x'')))));SELECT rt1.c1 FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c1)OR(vt0.c0)))AND(rt1.c0)))*(UPPER(DISTINCT vt0.c0))) FROM rt1, vt0; -- 0ms;
SELECT (('690864413')IS NOT((((0.4190083622728086)) BETWEEN ((NULL)) AND ((vt0.c0))))) FROM vt0, rt1; -- 0ms;
SELECT '38y7rze' FROM vt0, rt1 WHERE (CASE ((('v)', 0.2593133211702445, 0.9885532310780213)) BETWEEN ((0.024766381264625492, x'', x'')) AND (('1246184753', '1192056200', x'87d5')))  WHEN ((-1.060364351E9) NOTNULL) THEN CASE 0.5927365262215927  WHEN x'' THEN x'18da' ELSE x'' END END) ORDER BY ((CAST(rt1.c1 AS INTEGER))AND(((vt0.c0)||(rt1.c4)))) ASC; -- 0ms;
SELECT ((((((rt1.c4)*(rt1.c1)))AND(CASE rt1.c3  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c0 WHEN 'o῁!DC櫒<n.' THEN rt1.c1 ELSE rt1.c3 END)))OR((rt1.c2 IN ()))) FROM vt0, rt1 WHERE (((((('')LIKE(x'a2ed'))))>(((((('-1895450213')OR(0.4885386935772196)))AND('-734986899')))))); -- 0ms;
SELECT ALL ((((CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END)AND(COALESCE(rt1.c2, rt1.c3, vt0.c0, rt1.c2))))AND((rt1.c0 IN ()))) FROM vt0 WHERE (x'') INTERSECT SELECT DISTINCT (((('-2064559965')AND((rt1.c3 IN (rt1.c3)))))AND(((rt1.c2) ISNULL))) FROM vt0, rt1; -- 1ms;
SELECT rt1.c0 FROM vt0, rt1; -- 0ms;
SELECT DISTINCT (((((((((~ (rt1.c2)))OR(((rt1.c4) NOT NULL))))OR((NOT (vt0.c0)))))AND(((((((((rt1.c1)AND(rt1.c4)))OR(rt1.c4)))OR(rt1.c4)))OR(rt1.c0)))))OR(CAST(rt1.c4 AS INTEGER))) FROM vt0 WHERE (226244289);SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c4 COLLATE BINARY)) AND ((AVG(rt1.c0)))) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c4)IS NOT(rt1.c0))))<=((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))))) FROM vt0;SELECT ALL CUME_DIST() OVER ( ROWS (((((NOT (rt1.c3)))AND(vt0.c0 COLLATE RTRIM)))AND((rt1.c2 IN (rt1.c1)))) PRECEDING) FROM rt1, vt0; -- 1ms;
SELECT ((COUNT(rt1.c1))OR(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c1)))), ((((((rt1.c0)OR(vt0.c0)))OR('㘃q(P'))) NOT BETWEEN ((rt1.c1 IN ())) AND ((rt1.c1 IN (rt1.c1)))), LEAD(((((vt0.c0)<=(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS BLOB))), CASE ('(fY<憩' IN (vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY ELSE vt0.c0 END, (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)*('F3')))))) OVER () FROM vt0 GROUP BY ((rt1.c3)<<(((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2))));SELECT DISTINCT CAST((rt1.c3 IN (vt0.c0)) AS INTEGER) FROM rt1, vt0 GROUP BY (((rt1.c0))<>((vt0.c0 COLLATE BINARY))) ORDER BY json_extract(x'', (((vt0.c0))>((0.1205666793597443))))  NULLS LAST;SELECT rt1.c3, ((((rt1.c1)OR(rt1.c3 COLLATE BINARY)))AND(SQLITE_SOURCE_ID())), ((STRFTIME(rt1.c4, rt1.c1, rt1.c3)) NOTNULL) FROM vt0, rt1 GROUP BY LIKELY(DISTINCT ((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c0)LIKE(rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c0)>(rt1.c3))) OVER () FROM vt0, rt1 WHERE (((NOT (x'7a17')) IN (CAST(-180361590 AS TEXT)))); -- 0ms;
SELECT ALL CAST(((rt1.c3)AND(rt1.c0)) AS INTEGER) FROM rt1; -- 0ms;
SELECT DISTINCT (rt1.c3 IN ()) COLLATE BINARY FROM vt0, rt1 WHERE ((~ (DATETIME(0Xffffffff95255368, NULL, x'')))); -- 0ms;
SELECT DISTINCT ((((rt1.c4) NOT BETWEEN (x'ac14') AND (x'32da'))) IS FALSE), ((rt1.c3) IS FALSE), ((((((((vt0.c0)OR((((rt1.c4))==((rt1.c4))))))AND(CAST(rt1.c0 AS INTEGER))))AND(rt1.c4 COLLATE BINARY)))OR(((rt1.c1) IS FALSE))) FROM rt1;SELECT DISTINCT ((SUM(vt0.c0))IS NOT((+ (rt1.c2)))) FROM rt1 WHERE (CAST(CAST(-162310142 AS NUMERIC) AS BLOB));SELECT ALL (+ (rt1.c3)) FROM vt0 WHERE ((((x'f0da' IN (-3.08722215E8))) NOTNULL));SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c3))))), CAST(MAX(rt1.c2, rt1.c3) AS INTEGER), ((((vt0.c0)==(vt0.c0))) ISNULL) FROM vt0, rt1 WHERE (((((('cQS', '-1745495790', 0.563842542091875, '1282228866', x'')) BETWEEN (('2133455132', '\nDs\	', 0.9592258881606097, x'b3be', NULL)) AND (('', x'', '524410816', NULL, 0X7e0a8322))))&(((NULL) BETWEEN (x'') AND (0.1878121292635232))))); -- 0ms;
SELECT AVG((rt1.c4 IN ())) FROM rt1, vt0 WHERE ((((((x'', 0.40777199959249033, '1422049843')) NOT BETWEEN (('-1283899645', '0.2738639681977857', '-771240567')) AND ((1.616172191E9, x'3f67', 'Ch'))))|(CASE WHEN x'' THEN x'' END))); -- 0ms;
SELECT ALL CAST((((rt1.c2, rt1.c0, rt1.c3))<=((rt1.c4, rt1.c2, rt1.c0))) AS BLOB) FROM vt0;SELECT ALL ((((rt1.c3)<>(rt1.c0)))|(CAST('-62625526' AS TEXT))) FROM vt0, rt1 WHERE (((x'') NOT BETWEEN (0X72e3f27f COLLATE RTRIM) AND ((+ (NULL))))) LIMIT 1137275546 OFFSET 1387164510; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0)=(rt1.c0)))) FROM rt1, vt0 GROUP BY NULL ORDER BY load_extension(CASE WHEN rt1.c3 THEN rt1.c4 END, SUBSTR(rt1.c3, rt1.c0))  NULLS LAST LIMIT 434745528;SELECT ALL ((CASE vt0.c0  WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN x'' ELSE rt1.c3 END) IS TRUE), ((AVG(rt1.c3))|(rt1.c3)), (((((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((vt0.c0))))AND((rt1.c1 IN ()))))AND(rt1.c4 COLLATE BINARY)) FROM rt1, vt0 GROUP BY rt1.c2; -- 0ms;
SELECT ALL ((((rt1.c0)>=(0xffffffffdc89abc1)))IS NOT(rt1.c0)) FROM vt0;SELECT DISTINCT RANK() OVER ( ROWS  UNBOUNDED PRECEDING), CASE WHEN (x'' IN ()) THEN ((rt1.c1) NOTNULL) WHEN ((rt1.c2)<>(rt1.c4)) THEN ((vt0.c0)<(rt1.c2)) WHEN (((rt1.c0))=((rt1.c2))) THEN ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1)) ELSE (rt1.c1 IN ('1468080296', rt1.c1)) END, ((((rt1.c2)&(rt1.c1)))GLOB(2.105886497E9)), ((rt1.c2 COLLATE RTRIM)>=(379795231)), 0.8086891822176476 FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c4)))<>(rt1.c2 COLLATE NOCASE)), ((0.8199064652176208) NOT BETWEEN (rt1.c0) AND (((rt1.c2)IS(vt0.c0)))), vt0.c0 FROM rt1, vt0 WHERE ((CASE x''  WHEN x'' THEN 0xffffffffd430fd6d ELSE '468433450' END IN ())) LIMIT -1484066875 OFFSET 688326218; -- 0ms;
SELECT SUM((rt1.c3 IN ())) OVER () FROM rt1, vt0 WHERE ((+ (((0.6158029729340107) NOT NULL)))); -- 0ms;
SELECT ALL (+ (((vt0.c0) IS FALSE))) FROM rt1, vt0 WHERE (''); -- 0ms;
SELECT ALL '347330645' FROM vt0 WHERE (CASE WHEN ((x'') BETWEEN (x'') AND (NULL)) THEN (((''))==((NULL))) END); -- 0ms;
SELECT LEAD(CASE WHEN ((((rt1.c2)OR(rt1.c2)))OR(rt1.c1)) THEN vt0.c0 ELSE ((x'b1e9')%(rt1.c4)) END, (((NULL IN ())) ISNULL), ((((rt1.c1) ISNULL))&(CASE WHEN vt0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c2 END))) OVER ( PARTITION BY CASE (NOT (rt1.c3))  WHEN 0.82057364256637 THEN (rt1.c2 IN ()) END, CASE (('T{') NOT BETWEEN (rt1.c1) AND (vt0.c0))  WHEN ((rt1.c0) ISNULL) THEN ((rt1.c3)/(rt1.c2)) WHEN vt0.c0 COLLATE RTRIM THEN ((rt1.c2) NOTNULL) WHEN ((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE (- (vt0.c0)) END), rt1.c1, AVG((((rt1.c0, rt1.c2, rt1.c1))<((NULL, rt1.c3, rt1.c3)))) FROM vt0, rt1 WHERE ((((('') NOT BETWEEN (x'') AND (0.878557407284899))) NOTNULL)) GROUP BY ((CASE WHEN 0.03848114880076703 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c3 END)>(CASE WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)); -- 0ms;
SELECT DISTINCT (((((0.517268350875605)/(rt1.c0))))>=((vt0.c0))), '-2110677569', NULLIF(((((((((rt1.c4)AND(NULL)))AND(rt1.c3)))OR(rt1.c2)))OR(rt1.c3)), '0.8062853406973464'), (vt0.c0 COLLATE RTRIM IN ()), CAST((rt1.c0 IN ()) AS NUMERIC) FROM vt0, rt1 WHERE ((+ ((0.8482061792267657 IN ())))); -- 1ms;
SELECT DISTINCT ((((((((MAX(rt1.c2))OR((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))))OR(CASE WHEN 0X16d3ddae THEN rt1.c3 ELSE rt1.c1 END)))OR(NULL)))OR(NULLIF(rt1.c3, rt1.c0))), ((((CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 ELSE rt1.c1 END)AND((((rt1.c2, rt1.c3, rt1.c1))<((rt1.c2, rt1.c4, rt1.c3))))))AND(((rt1.c2) IS TRUE))), SUM(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c2 ELSE vt0.c0 END) OVER () FROM vt0 INNER JOIN rt1 ON (- (rt1.c0)) WHERE (((CASE NULL  WHEN 0.7464984026495983 THEN 0.7763678559751276 END)IS NOT(CASE WHEN 0.8286509644962333 THEN x'' END))); -- 0ms;
SELECT DISTINCT (rt1.c3 COLLATE RTRIM IN (rt1.c3 COLLATE NOCASE)) FROM vt0, rt1; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c1)!=(rt1.c3))), MIN('714-748 -5051231028559425311T528 839-'), ((((('609126438') NOT BETWEEN (vt0.c0) AND (rt1.c0))))<((TOTAL(vt0.c0)))), rt1.c2, CASE ((rt1.c4) NOT NULL)  WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END THEN (~ (rt1.c3)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN ((rt1.c3)LIKE(rt1.c2)) WHEN ((((((((rt1.c0)OR(vt0.c0)))OR(rt1.c2)))AND(rt1.c3)))OR(rt1.c0)) THEN rt1.c1 COLLATE RTRIM END FROM rt1;SELECT DISTINCT CASE MAX(rt1.c0)  WHEN (((rt1.c1))<((rt1.c1))) THEN CASE rt1.c3  WHEN rt1.c4 THEN NULL END END FROM rt1; -- 0ms;
SELECT DISTINCT SUM(DATETIME(rt1.c4, rt1.c0, rt1.c4, rt1.c3, vt0.c0)) OVER ( ORDER BY LOWER(CAST(rt1.c2 AS REAL)) ASC  NULLS LAST) FROM vt0 WHERE ((((NULL)||(0.34614510342867155)) IN ()));SELECT DISTINCT ((MAX(rt1.c0)) BETWEEN ('') AND (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE ((((NULL) BETWEEN (x'') AND (NULL)) IN ())) LIMIT 1746575778;SELECT DISTINCT (+ (vt0.c0)) FROM rt1, vt0 LIMIT 366765717; -- 0ms;
SELECT DISTINCT (rt1.c3 IN (rt1.c2)) COLLATE BINARY FROM rt1 WHERE (IFNULL('yꓯ6)cS\n', x'') COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((- (rt1.c4))) NOT NULL) FROM vt0 WHERE (((((('651517407') NOT NULL), 0.13503286783737734, CASE 0.1418574504240293  WHEN 'AT' THEN NULL END))==(('-375539051' COLLATE NOCASE, ((0X1bebba2a) BETWEEN (NULL) AND (0xffffffffe0827967)), ((((x'')AND('1919299740')))OR('1250658470'))))));SELECT ALL rt1.c0 FROM vt0;SELECT ALL ((CAST(rt1.c4 AS INTEGER)) IS FALSE), ((((((rt1.c0) IS FALSE))AND(CASE WHEN '1315577002' THEN rt1.c0 END)))OR(rt1.c1 COLLATE BINARY)), CAST(rt1.c0 COLLATE RTRIM AS TEXT) FROM vt0;SELECT DISTINCT (('{TA') BETWEEN ((vt0.c0 IN ())) AND ('-238427477')), ((x'' COLLATE RTRIM) BETWEEN ((((vt0.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))) AND (((0.6255953014048452) ISNULL))), TYPEOF(DISTINCT '-198928956') FROM rt1 WHERE ((0.2953321187012603 IN ()));SELECT ((GROUP_CONCAT(rt1.c2))-(GROUP_CONCAT(rt1.c4))) FROM rt1; -- 0ms;
SELECT ALL MIN((((rt1.c2, rt1.c4, rt1.c3, rt1.c0, rt1.c2))!=((rt1.c4, rt1.c0, rt1.c2, vt0.c0, rt1.c1)))), LEAD(((vt0.c0)+((vt0.c0 IN (vt0.c0, NULL)))), (- (((((vt0.c0)OR(rt1.c0)))AND(rt1.c3)))), ((vt0.c0) ISNULL)) OVER (), CAST((((rt1.c3))<((rt1.c4))) AS INTEGER) FROM rt1, vt0 ORDER BY ((((rt1.c3, rt1.c4, rt1.c0))>=((vt0.c0, rt1.c2, rt1.c1))) IN ()) DESC  NULLS LAST, (((+ (vt0.c0))) NOTNULL) ASC  NULLS FIRST; -- 0ms;
SELECT ((((rt1.c4) IS FALSE)) ISNULL) FROM rt1, vt0 WHERE (CASE WHEN (((x'b41f')) BETWEEN (('')) AND ((-622224135))) THEN (NULL IN (x'')) ELSE -8.89131197E8 END); -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 WHEN vt0.c0 THEN rt1.c0 END IN ('IHjk')), GROUP_CONCAT((rt1.c0 IN (rt1.c0, rt1.c2)) COLLATE BINARY), CAST((((-1.288074621E9, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c4)) AND ((rt1.c3, rt1.c1, vt0.c0))) AS REAL) FROM rt1 WHERE ((- ((('1969080116')<>(0.37271675004960314)))));SELECT 0Xffffffff9dc0c997 COLLATE BINARY FROM rt1; -- 0ms;
SELECT ALL (((rt1.c3)/(rt1.c1)) IN ()) FROM rt1 LIMIT -308722215; -- 0ms;
SELECT (NOT (CASE rt1.c1  WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END)) FROM vt0 WHERE (((((NULL)<=(0.8356403876443835)))GLOB((NULL IN (x'7101'))))) ORDER BY LIKE(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2)), CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END) DESC  NULLS FIRST, (((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c4)) IN ()) DESC  NULLS LAST;SELECT ALL rt1.c0 FROM rt1, vt0 ORDER BY (((+ (rt1.c4))) IS TRUE) ASC; -- 1ms;
SELECT DISTINCT CAST((('') ISNULL) AS NUMERIC), (NOT (rt1.c3)), ((rt1.c4) IS FALSE), ABS(DISTINCT ((rt1.c0)GLOB(rt1.c2))), rt1.c3 COLLATE NOCASE, (- (((rt1.c3)/(rt1.c3)))), ((CASE WHEN rt1.c3 THEN '' ELSE rt1.c1 END) NOTNULL) FROM vt0, rt1 NOT INDEXED WHERE ((NOT (((0.34279413955595717) NOT NULL)))); -- 0ms;
SELECT CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt1.c4)*(rt1.c0)) WHEN (rt1.c4 IN ()) THEN (NOT (vt0.c0)) WHEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c3)) THEN (NOT (vt0.c0)) ELSE (rt1.c4 IN ()) END FROM vt0;SELECT '-1037816974' FROM rt1 WHERE (((CASE x''  WHEN x'881e' THEN x'37de' WHEN 5.866738E7 THEN NULL WHEN NULL THEN NULL WHEN x'497a' THEN -1688176965 WHEN x'' THEN '' ELSE 0.18859392690068377 END)<>(CAST(0.05166584637219174 AS NUMERIC)))) LIMIT 1250658470 OFFSET 1836444394; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c2)>(rt1.c3)) THEN MIN(vt0.c0) WHEN CASE WHEN vt0.c0 THEN rt1.c0 WHEN NULL THEN rt1.c1 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN x'381d' THEN rt1.c4 END THEN (rt1.c1 IN ()) WHEN rt1.c3 THEN ((rt1.c2)|(rt1.c3)) WHEN ((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c0)) THEN rt1.c3 WHEN (+ (rt1.c2)) THEN ((rt1.c4)>>(vt0.c0)) END, (((rt1.c3)) NOT BETWEEN ((((((x'')AND(rt1.c0)))OR(rt1.c2)))) AND (((((vt0.c0, rt1.c3, '-M'))==((rt1.c2, rt1.c2, x'ad82')))))), (((rt1.c2, rt1.c4, rt1.c2)) BETWEEN ((rt1.c2, ((rt1.c2)%(rt1.c4)), NULL)) AND ((rt1.c1 COLLATE RTRIM, (~ (vt0.c0)), ((('2097191419'))<>((x'57f8')))))) FROM rt1;SELECT DISTINCT DENSE_RANK() OVER () FROM rt1, vt0 WHERE (CAST((('-518793393') BETWEEN (x'') AND ('1936019743')) AS TEXT)); -- 0ms;
SELECT 0.12171109611605158 FROM vt0 WHERE (LOWER(CAST(x'' AS BLOB))); -- 0ms;
SELECT (((((((((rt1.c4)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c4)) IN ()), (+ ((- (rt1.c3)))), (x'' IN ()) FROM rt1 WHERE (((((((259453518)&(NULL)))AND((x'7f67' IN ('1364222377')))))AND('-1060364351'))); -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c0 THEN rt1.c4 ELSE rt1.c4 END IN ()), ((((((((((((CAST(rt1.c0 AS NUMERIC))AND((rt1.c4 IN ()))))AND((((']z')) BETWEEN ((rt1.c2)) AND ((rt1.c4))))))AND(COUNT(*))))OR(((rt1.c0)||(rt1.c0)))))AND(rt1.c4)))AND(CAST(rt1.c2 AS REAL))), ((vt0.c0) NOT NULL) COLLATE BINARY FROM vt0 WHERE ((((- ('')))LIKE((1512877257 IN ('o/,f\n')))));SELECT ((((rt1.c4)||(vt0.c0))) BETWEEN ((rt1.c0 IN (rt1.c3))) AND ((((rt1.c4))<=((rt1.c4))))) FROM vt0, rt1 GROUP BY ((CASE WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)IS(-1.194908067E9)) HAVING TOTAL(((x'19b784df')IS(rt1.c1))); -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1; -- 0ms;
SELECT (((+ (rt1.c0))) NOT NULL) FROM rt1, vt0 GROUP BY rt1.c3 HAVING (((rt1.c1, rt1.c3, rt1.c2)) BETWEEN ((GROUP_CONCAT(rt1.c4), AVG(rt1.c0), CAST(rt1.c3 AS INTEGER))) AND ((((rt1.c2) IS TRUE), ((rt1.c2)-(rt1.c4)), 'AT'))); -- 0ms;
SELECT DISTINCT (((((((((rt1.c2)OR(rt1.c4)))AND(rt1.c1)))AND(rt1.c3)))AND(NULL)) IN ((NOT (rt1.c1)))) FROM vt0, rt1 WHERE ((((0.2715809788545178, x'', 1248954220)) BETWEEN (((('-940398824') NOTNULL), (NOT (NULL)), (-6.2625526E7 IN ()))) AND (((('W싖W') IS TRUE), ((NULL) IS TRUE), 0xffffffff9ad89f9e)))); -- 0ms;
SELECT DISTINCT ((rt1.c2) NOT BETWEEN ((rt1.c4 IN ())) AND (CASE ''  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c4 END)), CAST(((rt1.c2) IS TRUE) AS REAL), COUNT((vt0.c0 IN (rt1.c3))) FILTER(WHERE ((((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)))>((((rt1.c2))>((rt1.c1)))))) OVER () FROM vt0 RIGHT OUTER JOIN rt1 ON ((((0.33323459330551364) BETWEEN (vt0.c0) AND (vt0.c0)))+(rt1.c4 COLLATE RTRIM)) WHERE ((((- (0.16891541669305288))) ISNULL)) LIMIT -1351655949 OFFSET -2132365993; -- 0ms;
SELECT ('-338105876' IN ()) FROM vt0 WHERE (NULL) GROUP BY rt1.c4 HAVING SQLITE_SOURCE_ID() LIMIT 1351017485 OFFSET -1576159037;SELECT DISTINCT ((((((((rt1.c1)AND(rt1.c3)))OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c1)) COLLATE RTRIM FROM rt1, vt0 WHERE (((HEX(x''))AND(((((((((0xffffffff951a99b5)OR('LcPAR')))OR(x'')))AND('-1163908468')))AND(NULL))))); -- 0ms;
SELECT rt1.c1 FROM vt0;SELECT MAX(CAST(rt1.c4 AS BLOB)) FROM vt0 WHERE (((((0Xffffffff81e37f6a)+(NULL))) NOT NULL));SELECT ALL NULL FROM rt1, vt0; -- 0ms;
SELECT ((((rt1.c4)+(rt1.c0)))<(((NULL) NOTNULL))), 0X1dcb5a87, ((((vt0.c0 IN (vt0.c0))))<>(((+ (rt1.c3))))), ((CAST(rt1.c1 AS NUMERIC)) IS FALSE), ((((rt1.c3) NOT NULL)) NOT BETWEEN (CAST(rt1.c2 AS TEXT)) AND (LOWER(rt1.c1))) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT MIN((((rt1.c3))>=((vt0.c0)))) FROM vt0 WHERE ((((x'') NOT BETWEEN ('q *') AND (-725025426)) IN ()));SELECT DISTINCT ((((rt1.c4)!=(vt0.c0))) IS FALSE), (((~ (rt1.c3)))IS NOT(((rt1.c2) NOTNULL))), ((((vt0.c0)<=(rt1.c2)))GLOB(CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c4 END)), ((QUOTE(vt0.c0)) BETWEEN (((((((((rt1.c4)AND(rt1.c2)))OR(552094962)))AND(rt1.c3)))AND(rt1.c3))) AND ((~ (rt1.c2)))), NULL FROM rt1 WHERE ((((NULL IN (479632259))) ISNULL));SELECT ALL ((((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))), ((rt1.c3) ISNULL), ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)), ((rt1.c3)<=(rt1.c3)), 0.9777122258023878))<>(((((rt1.c1))>(('-258777344'))), ((vt0.c0)<=(rt1.c1)), MIN(rt1.c4), (rt1.c2 IN ()), ((((rt1.c2)OR(rt1.c2)))AND(rt1.c1))))) FROM rt1 GROUP BY (((rt1.c1 IN ()))LIKE(((rt1.c2)+(vt0.c0)))) HAVING COUNT(CASE WHEN -268584133 THEN rt1.c0 ELSE vt0.c0 END) LIMIT -423601258 OFFSET -556398298;SELECT DISTINCT ((((((((ABS(DISTINCT rt1.c4))OR(MAX(vt0.c0))))AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)))))AND(CASE rt1.c3  WHEN rt1.c0 THEN rt1.c4 END)))OR(((rt1.c2)+(rt1.c0)))) FROM vt0 GROUP BY ((CASE WHEN rt1.c2 THEN rt1.c4 END)<<(CAST(vt0.c0 AS REAL))), ((rt1.c2) BETWEEN (CASE WHEN vt0.c0 THEN rt1.c4 END) AND (((vt0.c0) IS TRUE))), COALESCE(DISTINCT NULL, (rt1.c1 IN ()));SELECT ALL (((vt0.c0)) BETWEEN (((- (rt1.c1)))) AND ((rt1.c2 COLLATE BINARY))), GROUP_CONCAT(json_insert(rt1.c4, 0xffffffff8e962485, rt1.c3)) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE TIES), ((((vt0.c0)%(rt1.c0)))*(((rt1.c3) ISNULL))), (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE NOCASE, AVG(((0x7eeb3a63) BETWEEN (586606412) AND (rt1.c2))) OVER (), NTH_VALUE(((((((rt1.c0)<<(rt1.c2)))OR(x'')))AND((x'' IN ()))), ((((vt0.c0)IS(vt0.c0)))<(DATE(vt0.c0, vt0.c0, vt0.c0)))) OVER (), AVG(((rt1.c1)>=(rt1.c3))) OVER ( ORDER BY (+ ((rt1.c1 IN ()))) DESC) FROM rt1, vt0 WHERE ((((((0.11719198929741936)) NOT BETWEEN ((0.6765833935080163)) AND ((x'7f57'))))OR((('661971561')AND(NULL)))));SELECT DISTINCT UNICODE(((rt1.c3) BETWEEN (rt1.c3) AND (vt0.c0))), CAST((NOT (rt1.c3)) AS INTEGER), COUNT(((rt1.c4) IS FALSE)) OVER () FROM vt0 LIMIT 1367223355;SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((CAST(rt1.c3 AS BLOB))) AND ((x''))) FROM vt0, rt1 WHERE (((((((((CAST('-1135161507' AS BLOB))OR(((x'')/('QDT[[(}q')))))AND((1364222377 IN (x'', x'93fb')))))AND(((NULL)<<('810248142')))))OR(((-572590362)|('9uZ^'))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN (((+ (rt1.c2)))) AND (((rt1.c3 IN ())))), ((((rt1.c0) NOT NULL))>=(TYPEOF(rt1.c1))), ((((rt1.c1)/(vt0.c0)))<(AVG(vt0.c0))) FROM vt0 GROUP BY ((((rt1.c4)OR(((((rt1.c2)OR(rt1.c4)))OR(rt1.c2)))))AND(CAST(rt1.c0 AS REAL)));SELECT DISTINCT CASE ((((vt0.c0)AND(rt1.c0)))OR(rt1.c2))  WHEN (vt0.c0 IN ()) THEN (((rt1.c4))==((rt1.c3))) WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)) THEN ((((rt1.c4)OR(rt1.c1)))OR(rt1.c3)) WHEN (rt1.c0 IN ()) THEN rt1.c3 COLLATE RTRIM ELSE ((rt1.c1)/('')) END FROM vt0, rt1; -- 0ms;
SELECT x'' FROM vt0; -- 0ms;
SELECT '-2125771119' FROM vt0, rt1 GROUP BY IFNULL(rt1.c4, (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))) HAVING (((rt1.c1)>>(rt1.c2)) IN ()); -- 0ms;
SELECT DISTINCT ((UNLIKELY(rt1.c1))+(TYPEOF(DISTINCT rt1.c4))) FROM rt1 INNER JOIN vt0 ON NULL WHERE (((('-1194908067')-(NULL)) IN (((('1633737107'))<(('-84196126'))), NULL))); -- 0ms;
SELECT ((((rt1.c2)%(rt1.c2))) IS FALSE), ('1894909391' IN (rt1.c1)) COLLATE RTRIM, (((((rt1.c3))<=((rt1.c2)))) BETWEEN ((((rt1.c3))>((rt1.c3)))) AND (((((rt1.c3)OR(vt0.c0)))AND(rt1.c4)))), AVG('4潢A') OVER (), (~ (((rt1.c4)IS NOT(rt1.c2)))) FROM vt0 WHERE (CAST(((0.0806607789317132)!=(58667380)) AS INTEGER)) LIMIT 1322786236;SELECT ALL (rt1.c4 IN ()) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT (((rt1.c4)IS(rt1.c4)) IN ()) FROM vt0 WHERE (((('-164052692')GLOB(x'')) IN ((NULL IN ())))); -- 1ms;
SELECT DISTINCT (('-180361590') BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CAST(rt1.c4 AS NUMERIC))), (((((rt1.c2))<((0.527855753652333))))%(308649096)), ((((0.07655526611234909)AND(((((vt0.c0)OR(rt1.c0)))OR(rt1.c2)))))OR(CAST(vt0.c0 AS TEXT))) FROM vt0, rt1; -- 0ms;
SELECT ((((rt1.c0 IN (rt1.c4, rt1.c3)), SUM('2105886497'), NULLIF(DISTINCT rt1.c4, 'w~')))<=(((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1))), x'', CASE WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN vt0.c0 END))) FROM rt1 NATURAL JOIN vt0 WHERE ((((-3.75539051E8)) BETWEEN ((CASE 0.4777651642152927  WHEN x'' THEN '}T' END)) AND (((((1987799936)) BETWEEN (('1125801023')) AND ((x'045a'))))))); -- 0ms;
SELECT ((0.6520799540254052)||(((vt0.c0)/(rt1.c0)))), CASE WHEN GROUP_CONCAT(rt1.c1) THEN rt1.c3 COLLATE NOCASE END, (CAST(rt1.c2 AS INTEGER) IN ()) FROM rt1;SELECT SUM(TOTAL(((rt1.c2) NOT BETWEEN (rt1.c2) AND (0.8887624177390165)))) FROM vt0 WHERE ((((+ ('129376200')))|((('1721587900') BETWEEN (NULL) AND (x'')))));SELECT ((((CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c1 COLLATE RTRIM)))AND(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 END)) FROM vt0, rt1 WHERE (CASE WHEN ((0.571177838035566) NOT NULL) THEN CAST('-180361590' AS BLOB) WHEN CAST(0.6003053420826507 AS BLOB) THEN ((-1404934426)*(0Xffffffff8758c2d6)) WHEN ((x'') IS TRUE) THEN ((((-308722215)AND('r㑚芵j*w')))OR(0.4885386935772196)) END); -- 1ms;
SELECT ALL ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt1.c3))) NOT BETWEEN (DATE(rt1.c2, rt1.c0, rt1.c1)) AND ((~ (rt1.c3)))), vt0.c0, ((((NULL)OR(((rt1.c4)+(vt0.c0)))))OR(COUNT(*))) FROM rt1 WHERE (((ROUND(x'', NULL))IS(IFNULL(x'', '1406609972')))) LIMIT 665653264;SELECT DISTINCT (((((rt1.c4, vt0.c0, rt1.c3)) BETWEEN ((x'', vt0.c0, rt1.c4)) AND ((rt1.c1, rt1.c2, rt1.c0))))-(rt1.c2)), (NOT ((((rt1.c4, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, 0.7922160199096374, rt1.c1)) AND ((387325210, rt1.c0, rt1.c4))))), ((NULLIF(DISTINCT rt1.c3, vt0.c0)) BETWEEN ((((rt1.c2))>((rt1.c2)))) AND (((rt1.c0) NOT NULL))), ((((0.7278585257146918 IN (rt1.c1))))<=((CASE vt0.c0  WHEN rt1.c1 THEN rt1.c4 ELSE vt0.c0 END))), ((CAST(rt1.c0 AS TEXT)) NOT NULL) FROM rt1, vt0 WHERE ((((((-187847876, -1000455890, '')) BETWEEN ((NULL, '', x'')) AND (('-771240567', x'', NULL)))) BETWEEN (TRIM('6265313')) AND (((0.49244397453008526)AND(x''))))); -- 0ms;
SELECT (~ (rt1.c1 COLLATE RTRIM)) FROM rt1, vt0 WHERE (CAST(((('1496695615', x'', 1.956560899E9)) BETWEEN (('', 0.2647151948301407, '1919299740')) AND ((NULL, 1.068284839E9, x'6df7'))) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((NOT (rt1.c1))) NOT BETWEEN (((((0.9290927641027316)OR(rt1.c0)))AND(vt0.c0))) AND ((((rt1.c2, x'e855', rt1.c4, rt1.c1, rt1.c2))>((rt1.c0, rt1.c4, vt0.c0, vt0.c0, rt1.c1))))), ((((rt1.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM, ((NULLIF(rt1.c2, rt1.c1))GLOB(MIN(-1.233287852E9))) FROM rt1 NOT INDEXED;SELECT DISTINCT (((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)) IN ()), CAST(rt1.c0 AS NUMERIC) COLLATE NOCASE, SUM(((rt1.c4)GLOB(rt1.c0))) OVER ( ORDER BY (((rt1.c3)) NOT BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((rt1.c2 COLLATE BINARY))) DESC  NULLS FIRST) FROM vt0 WHERE (((('1670386401') NOT BETWEEN (NULL) AND (0xffffffffa547da97)) IN ((~ ('''⸲	['))))) LIMIT -1889447008;SELECT (CAST(rt1.c2 AS REAL) IN ()) FROM rt1, vt0; -- 0ms;
SELECT ALL rt1.c1, CAST(((rt1.c2)LIKE(rt1.c2)) AS REAL), QUOTE((rt1.c3 IN (rt1.c1, rt1.c3, rt1.c1))) FROM vt0, rt1 WHERE ((((NULL)) NOT BETWEEN ((((NULL) IS FALSE))) AND ((COALESCE(x'', 'P87DeO17>'))))); -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY CASE (((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))  WHEN rt1.c3 COLLATE NOCASE THEN CASE WHEN rt1.c2 THEN rt1.c3 END END  NULLS LAST), ((((vt0.c0)AND(rt1.c2)))AND((~ (rt1.c4)))), rt1.c1, SUM((x'' IN ())) OVER ( ORDER BY ((((((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)))OR(((rt1.c2)OR(rt1.c0)))))OR((((rt1.c4))<=((rt1.c3))))))AND(((NULL) BETWEEN (rt1.c3) AND (rt1.c4)))))OR(((((rt1.c1)AND(rt1.c4)))OR(vt0.c0)))) ASC  NULLS LAST, (~ (((rt1.c2) IS FALSE)))  NULLS LAST, LIKELIHOOD(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1)), 0.35434388587961163)), CAST((rt1.c3 IN ()) AS INTEGER) FROM rt1, vt0; -- 1ms;
SELECT ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c4 END) NOT BETWEEN ((rt1.c4 IN ())) AND ('51410766')) FROM vt0, rt1; -- 1ms;
SELECT DISTINCT ((CAST(rt1.c2 AS INTEGER)) ISNULL) FROM rt1; -- 0ms;
SELECT CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS INTEGER) FROM vt0, rt1 WHERE ((('~Sz⟗n/j5' COLLATE RTRIM) BETWEEN (((NULL) IS FALSE)) AND ('-2092068731'))) LIMIT 1; -- 0ms;
SELECT TYPEOF(CAST(vt0.c0 AS BLOB)) FROM vt0 WHERE (((NULLIF(6.81532741E8, 0.2715809788545178)) BETWEEN (CAST('-1834419569' AS TEXT)) AND ((((('MfMRYKES|')OR('0.11719198929741936')))OR(757105548))))) ORDER BY 0Xfffffffffb0b82bd ASC, CASE WHEN ((rt1.c2)&('-1580300991')) THEN (- (vt0.c0)) ELSE ((rt1.c4) NOTNULL) END  NULLS LAST, (((+ (vt0.c0)))+(x'')) DESC LIMIT -1163908468;SELECT DISTINCT ((((- (vt0.c0))))>=((((x'e8c1') BETWEEN (rt1.c3) AND (x'b1ac'))))) FROM vt0, rt1 WHERE ((NULL IN ()) COLLATE BINARY) GROUP BY COALESCE(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), TRIM(DISTINCT vt0.c0), ((vt0.c0)OR(vt0.c0)), (- (vt0.c0))) LIMIT 1250658470 OFFSET 537992441; -- 0ms;
SELECT CAST(INSTR(rt1.c3, rt1.c0) AS INTEGER) FROM vt0 GROUP BY NULL;SELECT ALL (((vt0.c0)) NOT BETWEEN ((((((rt1.c4)AND(rt1.c4)))OR(rt1.c1)))) AND ((CASE vt0.c0  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))) FROM vt0;SELECT LIKELY(((((((((rt1.c3)OR(rt1.c4)))AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c1))) FROM vt0, rt1 WHERE (((((0.7357199926178648) NOT BETWEEN (NULL) AND (0.5910044324714137)))||(((('1349686129', 0.17814043906324384, NULL))!=((1072176414, '-827889545', '0.35959526584930024')))))) LIMIT 7412388 OFFSET -240446694; -- 0ms;
SELECT ALL NULLIF(((rt1.c0) IS TRUE), (rt1.c1 IN ())) FROM rt1, vt0 WHERE ((((NULL) NOT NULL) IN ('-1255920551'))) LIMIT 210979321; -- 0ms;
SELECT DISTINCT (((NOT (rt1.c1)))GLOB(((rt1.c2)<(NULL)))) FROM vt0, rt1 WHERE ((((0xffffffffb5d0bd91))<=((0.5614785811720596))) COLLATE RTRIM) EXCEPT SELECT ALL (((((rt1.c0)=(rt1.c0))))=(((+ (vt0.c0))))) FROM vt0, rt1 WHERE ((((('()') BETWEEN (0xfffffffff029575c) AND (x'')))GLOB((((x''))<((0.3927766644481129)))))) GROUP BY ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c3 END)*(rt1.c1)), (((rt1.c0 IN (rt1.c3)))>=('-104001850')), 0.5084792543872949 HAVING CAST(TOTAL(rt1.c2) AS BLOB); -- 0ms;
SELECT DISTINCT ((MIN(rt1.c0))AND(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))), CAST(((rt1.c1)||(rt1.c1)) AS NUMERIC), ((((rt1.c2)>(rt1.c1))) BETWEEN ((((rt1.c4, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, rt1.c1, vt0.c0)) AND ((rt1.c1, rt1.c4, rt1.c0)))) AND (CAST(rt1.c2 AS BLOB))) FROM vt0 WHERE ((((x'4cde', '9P', 'l峾f', '-1412550287', '#U\*uM')) BETWEEN (('0.8189785184373964', (((x''))>=(('783031633'))), (((0.4361845119302753)) NOT BETWEEN ((x'')) AND ((x''))), (+ (NULL)), ((x'6e24')-(0Xffffffff9b9604da)))) AND ((CASE WHEN x'' THEN '-1351655949' WHEN 'hTcx77]%' THEN 0.9049829592894777 WHEN '-1670283732' THEN -1192862166 END, ((NULL) NOT BETWEEN ('+3T|1-500000!BS') AND (NULL)), (((NULL, -1092056753, ')')) BETWEEN ((0.9352655490441173, NULL, 0.03132127565472387)) AND ((x'1bbd', 0.6439914472065698, NULL))), TRIM(-1559177240, '0.34163906154537005'), x'' COLLATE RTRIM))));SELECT DISTINCT ((((vt0.c0)=(rt1.c2))) BETWEEN (TYPEOF(DISTINCT rt1.c3)) AND ((((vt0.c0))<=((rt1.c1))))) FROM vt0;SELECT DISTINCT rt1.c4, ((CASE WHEN rt1.c1 THEN rt1.c3 ELSE vt0.c0 END) BETWEEN (COUNT(rt1.c0)) AND ((vt0.c0 IN ()))), GLOB((vt0.c0 IN ()), rt1.c2 COLLATE NOCASE), LAST_VALUE(rt1.c0) OVER (), (((rt1.c4)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM)) AND ((((rt1.c2) NOTNULL)))) FROM rt1 WHERE (((((((0.5208980516234843)AND('-877590129')))AND(((('-1559177240', '58667380', x'')) BETWEEN ((NULL, '1*G\nj', '-75226022')) AND (('s9L?', NULL, 'rEZ.[Z'))))))AND((((NULL, '0.2715809788545178', '1721587900')) NOT BETWEEN ((x'', 0.7590279685961709, x'f477')) AND ((NULL, 0xffffffffa911234a, 0.2859797588786579))))));SELECT NTILE((((0.5813965875054214)) BETWEEN ((((((rt1.c2)AND(rt1.c0)))AND('')))) AND (('-1580300991')))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT CAST('CN' AS REAL) FROM vt0; -- 1ms;
SELECT ALL CAST(((rt1.c0)>(0.4824913962639157)) AS TEXT) FROM vt0 NATURAL JOIN rt1 WHERE (((((-1.580300991E9) BETWEEN ('974920152') AND ('1670386401')))OR((('1364222377') BETWEEN ('0.9352655490441173') AND (x''))))); -- 0ms;
SELECT DISTINCT ((((rt1.c1)<=(rt1.c1)))AND(((rt1.c3)>>(rt1.c4)))) FROM vt0, rt1 WHERE (IFNULL(DISTINCT CAST(-9.09239059E8 AS NUMERIC), ((0.16017239131306338)>=('\r|F鋖_廒')))) LIMIT -1052948594; -- 0ms;
SELECT (((('1387164510')/(rt1.c0))) NOT BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))) AND (CAST(rt1.c0 AS TEXT))), AVG(((rt1.c0) ISNULL)), rt1.c1 FROM vt0 WHERE ((((('421707107') IS FALSE)) NOTNULL));SELECT ALL AVG(CAST(rt1.c3 AS REAL)) FROM rt1 LIMIT 2115844219 OFFSET -1348038388; -- 0ms;
SELECT x'2fd1' FROM vt0, rt1 LIMIT 1457082113 OFFSET 1791044368; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((SUM(rt1.c0))GLOB(((rt1.c1) IS FALSE))), CAST((rt1.c3 IN ()) AS NUMERIC) FROM vt0, rt1 WHERE (CASE ((x'f8a6')||(NULL))  WHEN -688780302 COLLATE NOCASE THEN '665653264' COLLATE NOCASE WHEN ('483098802' IN ()) THEN (('-217732240')+(0xffffffff84163291)) WHEN ((x'')<(NULL)) THEN CASE WHEN 0.9146845396488752 THEN 0.5443258303039411 END ELSE (((1187490536, 0.9857657988274572, 0.35529875168405745)) NOT BETWEEN ((0x7c46e631, x'4c25', x'0f19')) AND ((-278369690, '-1192884113', 231648460))) END) ORDER BY CAST(((rt1.c2) IS TRUE) AS INTEGER) ASC  NULLS FIRST; -- 0ms;
SELECT AVG(((rt1.c4)*(rt1.c2))) OVER () FROM vt0 LIMIT 215418898;SELECT DISTINCT TRIM(DISTINCT AVG(rt1.c1)) FROM vt0, rt1 ORDER BY (NOT (load_extension(rt1.c0, rt1.c0))); -- 0ms;
SELECT DISTINCT '1616172191' FROM vt0 WHERE (((('-165693345', NULL, x'cd99')) NOT BETWEEN ((CASE WHEN x'' THEN 0.9870527227959061 WHEN 0X1033da8f THEN x'' WHEN NULL THEN 0.3328979949097348 ELSE 0.9402228330695588 END, x'' COLLATE NOCASE, (((-1314279096)) NOT BETWEEN ((0.039067943317065534)) AND ((0.1588581563020668))))) AND ((CASE '951690211'  WHEN NULL THEN '' ELSE 'G-.baJ{秎' END, '2018019968' COLLATE BINARY, ((-1233287852)IS('1496695615')))))); -- 0ms;
SELECT ALL ((((rt1.c0)+(rt1.c2)))|(((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c2)))OR('0V')))AND(vt0.c0)))), rt1.c1, (((rt1.c1)LIKE(rt1.c2)) IN ()) FROM vt0;SELECT AVG(((((rt1.c0)OR(rt1.c3)))AND('52464662'))), (('') NOTNULL) COLLATE RTRIM, ((rt1.c2 COLLATE BINARY) NOT BETWEEN (0.1619605500897341) AND ((((rt1.c0))==((rt1.c4))))) FROM rt1 WHERE (CAST(((0.673964109252474) BETWEEN (844715787) AND (0.791081772420344)) AS REAL)); -- 0ms;
SELECT ((((rt1.c4)+(rt1.c0))) NOT BETWEEN (rt1.c4 COLLATE NOCASE) AND (vt0.c0)) FROM vt0 LIMIT -871065832;SELECT DISTINCT ((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))) IS FALSE), vt0.c0, ((rt1.c1)>>(AVG(rt1.c2))) FROM vt0 GROUP BY ((QUOTE(rt1.c0)) NOT NULL);SELECT DISTINCT ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c4)))OR(((rt1.c0) IS FALSE))), ROW_NUMBER() OVER (), (((((~ (rt1.c3)))OR(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)))))OR(((('-2141440600', rt1.c2, NULL))=((rt1.c1, rt1.c1, rt1.c0))))) FROM vt0 WHERE ((((-1.8036159E8 IN ()))>>(CASE WHEN x'' THEN 0.44642907795462217 END))) LIMIT -1580300991 OFFSET 381933569;SELECT TOTAL(LAST_INSERT_ROWID()) OVER ( ORDER BY ((((rt1.c1) IS TRUE)) NOT BETWEEN (((((vt0.c0)OR(rt1.c0)))AND(NULL))) AND (CASE WHEN x'873f' THEN rt1.c1 ELSE vt0.c0 END)) ASC, ((((((rt1.c2)>(vt0.c0)))OR(((rt1.c4)<<(rt1.c0)))))AND(((rt1.c3) IS TRUE)))  NULLS FIRST) FROM rt1, vt0 GROUP BY CAST((- (rt1.c2)) AS INTEGER); -- 1ms;
SELECT DISTINCT (NOT (rt1.c0 COLLATE BINARY)) FROM rt1, vt0 WHERE (CASE ((1.7976931348623157E308)<=('v)'))  WHEN NULL COLLATE BINARY THEN ((((0.5594577589539945)AND(0.6642589767390376)))OR(x'18d9')) WHEN ((0X18795199)>=(x'')) THEN LIKE(NULL, 0.5561430782976643) WHEN ((0.7389954206110603) NOT NULL) THEN ((((x'')AND(NULL)))OR(NULL)) ELSE 0.7150952878835274 END) GROUP BY (('H&^') NOTNULL); -- 0ms;
SELECT DISTINCT CASE rt1.c3  WHEN x'' THEN NULL WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c3 END COLLATE RTRIM FROM vt0;SELECT DISTINCT (('')=(x'')) FROM vt0, rt1 WHERE ((NOT (((0.8403110797953983)AND(x'b5a9'))))); -- 0ms;
SELECT ALL ((rt1.c0)|(CASE WHEN rt1.c4 THEN rt1.c3 END)) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c4 COLLATE NOCASE) IS FALSE) FROM rt1, vt0 LIMIT 1629649366 OFFSET 271833743; -- 0ms;
SELECT TRIM((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))), ((rt1.c0)|(vt0.c0))) FROM rt1 WHERE ((((((846591792)&('-1217919523'))))!=((CASE NULL  WHEN '387325210' THEN 0Xffffffffb728821c ELSE 'f30|3' END)))) LIMIT -1987057472 OFFSET 735839470;SELECT ((SUM(rt1.c0))>=((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))), RANK() OVER ( RANGE BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING), COUNT(((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c4))) FROM rt1, vt0; -- 0ms;
SELECT (NOT (((rt1.c1) BETWEEN (x'') AND (rt1.c2)))), NTILE((((- (rt1.c3)))>>(((((rt1.c3)AND(rt1.c4)))AND(x''))))) OVER (), 0.9281659264342433 FROM vt0, rt1 WHERE (CAST(('' IN ()) AS BLOB)); -- 1ms;
SELECT DISTINCT RTRIM(CAST(rt1.c2 AS INTEGER)), ((rt1.c1)-(vt0.c0)) COLLATE RTRIM, NTH_VALUE(((CAST(rt1.c0 AS BLOB))GLOB(((0.301296535776018) NOT BETWEEN (rt1.c4) AND (rt1.c1)))), ((rt1.c1 COLLATE BINARY) NOT NULL)) OVER () FROM rt1 WHERE (((UNLIKELY(DISTINCT x'3bb64f62'))GLOB((('[\e1')/(0.281835476710391))))) LIMIT -1941798047 OFFSET 271833743;SELECT DISTINCT COUNT(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE) OVER ( ORDER BY 0.22500767311891234), '765056088', rt1.c3, ((((vt0.c0) IS TRUE)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((0.571177838035566)) AND ((rt1.c0)))) AND (rt1.c3 COLLATE RTRIM)), ((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)) COLLATE BINARY FROM vt0, rt1; -- 0ms;
SELECT ALL HEX('1989172190'), COUNT(*), COUNT(((vt0.c0)<(rt1.c3))) OVER () FROM vt0;SELECT COUNT(((rt1.c4)<<(rt1.c1))), ((rt1.c3 COLLATE BINARY) NOTNULL), vt0.c0 COLLATE NOCASE FROM vt0;SELECT DISTINCT 0.8729665961882916 COLLATE BINARY, ((COUNT(*)) NOTNULL), ((MAX(rt1.c4)) IS FALSE) FROM vt0 NOT INDEXED, rt1 WHERE (((0.39502492777140197 COLLATE RTRIM) BETWEEN ((('') NOT BETWEEN (0.13961416591372244) AND (NULL))) AND (((0X5f22d3f7)=(0.5910044324714137))))); -- 0ms;
SELECT ((('LX')) BETWEEN (((0.6318758513967355 IN ()))) AND ((NULL))), ((((rt1.c0, rt1.c3, rt1.c3))<=((rt1.c2, rt1.c0, rt1.c0))) IN ((((rt1.c3, rt1.c3, rt1.c3)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c3, rt1.c0))))), (((('-1037630798')) BETWEEN ((rt1.c3)) AND ((rt1.c0))) IN ()) FROM rt1 WHERE (((CAST(0.25838039189923934 AS BLOB))-((NOT (0.46774071911001447))))) UNION SELECT SUM(((rt1.c3)>>(vt0.c0))) OVER (), ((rt1.c0) NOT BETWEEN (MAX(vt0.c0)) AND (x'')), CAST(MIN('') AS INTEGER) FROM vt0;SELECT DISTINCT CASE (((NULL, rt1.c4, vt0.c0))=((vt0.c0, vt0.c0, rt1.c2)))  WHEN rt1.c4 COLLATE NOCASE THEN (+ (rt1.c3)) END FROM vt0;SELECT DISTINCT x'' FROM vt0, rt1; -- 0ms;
SELECT DISTINCT AVG((+ (rt1.c4))) FROM vt0, rt1; -- 1ms;
SELECT DISTINCT LEAD(rt1.c3, ((CAST(rt1.c2 AS TEXT))<(CASE rt1.c4  WHEN 0.37652011678552 THEN rt1.c1 END)), ((((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4)))AND(NULL)))OR(CAST(NULL AS NUMERIC)))) OVER () FROM rt1 WHERE (CASE WHEN ((x'2f153c61') IS TRUE) THEN ((((x'')AND('f31V]	')))OR(0.05980755527495707)) END) ORDER BY (((+ (rt1.c4)))<<(((rt1.c0)=(rt1.c4))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE rt1.c4  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END) IS FALSE) FROM vt0 LIMIT -1647560591;SELECT DISTINCT (CASE vt0.c0  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 END IN ()) FROM vt0 WHERE (PRINTF('', UPPER(DISTINCT 2.115844219E9), ((((0.0659905704739574)AND(2115844219)))AND(0.8750705698223396)))); -- 0ms;
SELECT ALL '-17396600', rt1.c1 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY, (+ (((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) FROM rt1;SELECT ALL CASE WHEN rt1.c2 THEN rt1.c4 WHEN ((0Xffffffffa97e3261) BETWEEN (rt1.c3) AND (rt1.c0)) THEN ((rt1.c0)>=(rt1.c1)) WHEN ((vt0.c0) IS FALSE) THEN NULL WHEN CASE rt1.c4  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN TRIM(rt1.c1) WHEN ((rt1.c2) NOT NULL) THEN vt0.c0 ELSE ((rt1.c0) ISNULL) END FROM vt0 WHERE ((('1241049836')OR(((NULL) BETWEEN (1406609972) AND (x'3c23')))));SELECT (((~ (rt1.c1)))AND(rt1.c4)), rt1.c1, LAG((('2105886497')<(CAST(rt1.c2 AS TEXT))), (((rt1.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((((rt1.c2)IS NOT(rt1.c1)), (- (rt1.c2)), CASE WHEN vt0.c0 THEN rt1.c3 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END)) AND ((((rt1.c0)OR(rt1.c2)), (rt1.c3 IN ()), ((rt1.c2)IS(rt1.c3))))), ((+ (rt1.c4)) IN ())) OVER () FROM vt0, rt1 WHERE ((((x'')) NOT BETWEEN ((((0X4208205e)GLOB(x'')))) AND ((((0.3328979949097348)<<('')))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END) BETWEEN (((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c1))) AND (((rt1.c3)OR(vt0.c0)))) FROM rt1 GROUP BY ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 END)>=(((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c3)))), NULL, (((+ (rt1.c1))) IS TRUE);SELECT AVG(TOTAL(x'' COLLATE NOCASE)) FROM vt0, rt1;SELECT DISTINCT (rt1.c0 IN ()) COLLATE BINARY COLLATE BINARY FROM rt1 WHERE ('271833743'); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 LIMIT 2027197157 OFFSET -1375822752; -- 0ms;
SELECT COUNT((NOT (rt1.c1)) COLLATE BINARY) OVER () FROM vt0, rt1 WHERE (((NOT (1.670584302E9)) IN (UNICODE('')))); -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(-1792715928)  WHEN ((rt1.c1)/(rt1.c1)) THEN HEX(rt1.c3) WHEN TOTAL(rt1.c4) THEN ((rt1.c2)OR(rt1.c1)) WHEN (rt1.c2 IN (rt1.c3)) THEN ((((((((((((rt1.c2)AND(x'843d')))AND(rt1.c0)))AND(rt1.c4)))OR(rt1.c3)))OR(rt1.c3)))AND(NULL)) END FROM rt1 WHERE (CASE WHEN SQLITE_VERSION() THEN HEX(-1213827178) WHEN (('0.11270256927684463') NOT BETWEEN (NULL) AND ('1e500000')) THEN ('np|礄' IN (0.15147015274049902)) WHEN ('287302550' IN ()) THEN TYPEOF(1.255277726E9) END); -- 0ms;
SELECT rt1.c0 FROM vt0 WHERE (CASE NULL  WHEN (~ (0.35959526584930024)) THEN LOWER(0.3184423232828526) END);SELECT DISTINCT GROUP_CONCAT((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((vt0.c0)))) OVER () FROM vt0 WHERE (((((0.9963912906559065)<<(0.1258331101255198))) BETWEEN (((0.6603645305266872)/('0.4742213119996883'))) AND ((~ ('')))));SELECT ALL (((TOTAL(vt0.c0), vt0.c0 COLLATE BINARY, (+ (rt1.c0))))!=((rt1.c0, ((0.8722688354512287)=(NULL)), (rt1.c4 IN (rt1.c3))))) FROM vt0, rt1 WHERE (CASE 'q1'  WHEN x'' THEN x'' WHEN '	*' THEN x'' WHEN x'd2f8' THEN 0xffffffffbc84ae3c END COLLATE NOCASE) LIMIT -315994279; -- 0ms;
SELECT DISTINCT ((((rt1.c2)<(rt1.c3)))>>(rt1.c1)) FROM rt1, vt0 WHERE (((CAST(x'8541' AS INTEGER))|(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(ABS(rt1.c1)) OVER () FROM vt0, rt1 WHERE (((CAST(6.65653264E8 AS REAL)) BETWEEN (((x'29c7') ISNULL)) AND (((1059353108)LIKE(4.82675776E8))))) LIMIT -855613528; -- 1ms;
SELECT DISTINCT (((NOT (vt0.c0))) NOT BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) AND (NULL)) FROM vt0 WHERE (LOWER(NULL COLLATE NOCASE));SELECT DISTINCT (((rt1.c1, rt1.c2, rt1.c3))<>((rt1.c3, 0.5775667493452916, rt1.c2))) COLLATE RTRIM FROM vt0, rt1 WHERE (UPPER(DISTINCT CAST(0.5813640592485971 AS TEXT))); -- 0ms;
SELECT DISTINCT COUNT(((rt1.c2) ISNULL)) OVER ( RANGE BETWEEN CASE (rt1.c0 IN ())  WHEN ((rt1.c2) NOTNULL) THEN (((996715288))<=((rt1.c4))) ELSE SQLITE_COMPILEOPTION_USED(vt0.c0) END PRECEDING AND  CURRENT ROW), CAST(0.08903972454886666 AS BLOB), AVG(CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 ELSE rt1.c4 END), (+ (((rt1.c1) BETWEEN (rt1.c0) AND (vt0.c0)))), NULL FROM vt0, rt1 WHERE ((((('-322058867') NOT NULL)) NOT BETWEEN (LOWER(DISTINCT 0.11719198929741936)) AND (x'4b2d' COLLATE RTRIM)));SELECT CAST(((((rt1.c1)AND(vt0.c0)))OR(rt1.c4)) AS TEXT), ((NOT (rt1.c0)) IN (CASE rt1.c2  WHEN NULL THEN rt1.c2 END)), ((((((vt0.c0)<<(vt0.c0)))AND(CASE rt1.c2  WHEN vt0.c0 THEN 0.682166494336522 ELSE rt1.c3 END)))OR(CAST(0.35354123760495026 AS INTEGER))) FROM vt0;SELECT DISTINCT (NOT (MIN(rt1.c0))) FROM vt0, rt1; -- 4ms;
SELECT DISTINCT COUNT(((rt1.c3) ISNULL)) OVER ( ORDER BY (((((rt1.c1))=((rt1.c0)))) IS FALSE) DESC, (CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c3 END IN ()) ASC), AVG(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) FILTER(WHERE rt1.c3) OVER ( ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))|(CAST(rt1.c3 AS INTEGER))) DESC), TOTAL(CASE WHEN rt1.c1 THEN rt1.c4 END) FROM vt0;SELECT DISTINCT '' FROM rt1 LIMIT -2024226090 OFFSET 2138924294; -- 0ms;
SELECT DISTINCT SUM(CAST(rt1.c4 AS BLOB)) FROM rt1, vt0 WHERE (((x'') NOTNULL) COLLATE BINARY); -- 1ms;
SELECT DISTINCT x'' FROM vt0 GROUP BY (((rt1.c1)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) AND ((rt1.c3 COLLATE NOCASE))) HAVING rt1.c2;SELECT DISTINCT ((((rt1.c2) NOT NULL)) NOT NULL), CASE WHEN (rt1.c2 IN ()) THEN (rt1.c2 IN (x'6a00', rt1.c4)) END, ((((CASE rt1.c2  WHEN 0.39841526832424856 THEN x'9fc9' ELSE vt0.c0 END)OR(COUNT(*))))OR(((rt1.c3) IS TRUE))) FROM vt0;SELECT DISTINCT -163566798 FROM vt0; -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c0 AS TEXT)), '-810606815' COLLATE BINARY, 0.9870527227959061 FROM vt0 WHERE (json_insert(UNLIKELY(x'a9c0'), (('-1222082020') NOTNULL), NULL COLLATE RTRIM));SELECT LAST_VALUE((- (((rt1.c4) NOTNULL)))) OVER (), CASE ((rt1.c1) NOTNULL)  WHEN ((vt0.c0)-(-1592143039)) THEN MIN(rt1.c2) WHEN CASE WHEN rt1.c3 THEN rt1.c0 END THEN COUNT(rt1.c0) WHEN COUNT(*) THEN LIKELY(rt1.c0) ELSE MIN(rt1.c3) END, ABS(DISTINCT LIKELY(DISTINCT rt1.c2)) FROM rt1;SELECT DISTINCT ((vt0.c0) BETWEEN (((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c0))) AND (((rt1.c3) NOTNULL))) FROM vt0, rt1 WHERE (((((((((-1651778039)AND(x'')))AND(x'')))OR(NULL)))AND(0.6725856543196904)) COLLATE NOCASE) GROUP BY x'1c07', ((((rt1.c4) IS TRUE))IS(rt1.c2)), (((rt1.c1)/(rt1.c2)) IN ()) HAVING ((((rt1.c1)>(rt1.c1))) BETWEEN (((((rt1.c3)AND(vt0.c0)))OR(rt1.c2))) AND (NULL)); -- 0ms;
SELECT DISTINCT (((rt1.c3 IN ())) NOTNULL), rt1.c0, (NOT (CASE WHEN rt1.c2 THEN '1068284839' END)) FROM vt0, rt1 WHERE ('4䜡v8涂'); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT ((((rt1.c2)>(rt1.c2)))>>(vt0.c0)) FROM vt0, rt1 GROUP BY CAST(vt0.c0 AS REAL) HAVING AVG(((rt1.c1)*(rt1.c2))) LIMIT 1847671279; -- 0ms;
SELECT DISTINCT '757105548', ((((NULL)OR(-1118994022)))AND(rt1.c0 COLLATE BINARY)), CAST(rt1.c1 AS TEXT) FROM vt0, rt1; -- 1ms;
SELECT ((SUM(rt1.c2))IS(((x'')GLOB(rt1.c0)))), FIRST_VALUE((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0)))) NOT NULL)) OVER (), (((((rt1.c3))<>((rt1.c3)))) BETWEEN (((rt1.c3)OR(rt1.c4))) AND ((('-120832354') ISNULL))) FROM vt0;SELECT DISTINCT ((rt1.c4 COLLATE NOCASE)OR('hJ' COLLATE BINARY)), ((((rt1.c0)OR(x'adc3')))AND(rt1.c4 COLLATE BINARY)), CASE rt1.c3  WHEN 0.3130528065213045 THEN vt0.c0 END COLLATE BINARY FROM vt0 WHERE (((((((((((((CAST('1890682383' AS BLOB))AND((NULL IN (0.5660260345415575)))))OR(TRIM(0.25838039189923934, NULL))))OR('1821264584')))AND(((1.670386401E9)=(NULL)))))OR(((((0xffffffffabec4e2f)AND(NULL)))OR(x'')))))AND((NOT (0X669d58bc)))));SELECT ((((((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c1)))AND(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))OR(rt1.c4)) COLLATE NOCASE FROM rt1, vt0 WHERE ('-1200323419'); -- 0ms;
SELECT DISTINCT (((rt1.c2 IN ()))/((~ (rt1.c2)))) FROM vt0;SELECT ALL SUM(((((rt1.c1)OR(rt1.c1)))OR(rt1.c4))) OVER () FROM rt1, vt0 GROUP BY ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c4)))IS NOT(CAST(rt1.c4 AS NUMERIC))), ((((((((((NULL)AND(rt1.c4)))AND(rt1.c4)))OR(rt1.c3)))AND(0.760471290935881)))IS(TIME(rt1.c4, 0.8368565861570242, rt1.c2))), x'' HAVING -1436376351; -- 5ms;
SELECT ALL ((((rt1.c2)IS(rt1.c4)))<=(((rt1.c2) NOTNULL))) FROM vt0;SELECT CAST(rt1.c3 AS NUMERIC) FROM vt0 WHERE ((~ ((('') IS TRUE))));SELECT DISTINCT (((AVG(vt0.c0)))!=((SUM(vt0.c0)))) FROM rt1 WHERE (ROUND((((NULL))>=((x''))), (('-1233287852')<<('['))));SELECT DISTINCT ((((rt1.c0) ISNULL))IS NOT(rt1.c4)), TOTAL((rt1.c3 IN ())), NULL, ((((NULL) IS FALSE)) BETWEEN (((NULL)|(rt1.c1))) AND (((x'') IS TRUE))), ((TRIM(DISTINCT rt1.c4, rt1.c2))>=(vt0.c0)) FROM vt0 WHERE ((((NOT (NULL)))-((- (x'')))));SELECT ALL '2105886497' FROM rt1 WHERE (((((0.2869918374503668) NOT BETWEEN (0xffffffffa308a292) AND ('\np}5'))) BETWEEN (CAST(0.9525242627942649 AS NUMERIC)) AND (CASE WHEN NULL THEN '2004961509' END))); -- 0ms;
SELECT ALL '?', rt1.c2, GROUP_CONCAT(x'') FROM rt1, vt0 WHERE (((((NULL) ISNULL))&(json(0.08740611075790217)))); -- 0ms;
SELECT DISTINCT ((x'') BETWEEN ((((rt1.c4)) BETWEEN ((vt0.c0)) AND ((rt1.c0)))) AND (rt1.c1)) FROM vt0 WHERE (MIN(CASE WHEN '-570483988' THEN 0.09267031102363554 WHEN x'' THEN '-1285445370' WHEN '-1903733552' THEN x'b0082422' ELSE NULL END, (+ (NULL)))) LIMIT -430699050;SELECT DISTINCT ((rt1.c4) IS FALSE) COLLATE RTRIM FROM vt0, rt1 WHERE ((('' COLLATE BINARY)<<(load_extension(NULL, x''))));SELECT (~ (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c2)))), ((((vt0.c0)GLOB(rt1.c3)))>=('')), ((((((((((vt0.c0)AND(rt1.c2)))OR(NULL)))OR(rt1.c1)))OR(rt1.c2)))<=(vt0.c0)) FROM vt0, rt1 ORDER BY GLOB((+ (vt0.c0)), (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ()))/((((vt0.c0))<>((rt1.c0))))), ((rt1.c0) NOT NULL), ((rt1.c2) IS FALSE) FROM rt1, vt0; -- 0ms;
SELECT ALL ((0.6173995349318088)<('0.23283549291555095')), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) COLLATE BINARY COLLATE RTRIM, CAST(ABS(rt1.c2) AS TEXT) FROM vt0;SELECT DISTINCT SUM(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE) OVER () FROM vt0, rt1 WHERE (ABS(DISTINCT x'') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c4 AS INTEGER))AND(CAST(rt1.c3 AS REAL))))OR(((((rt1.c1)AND(rt1.c0)))AND(vt0.c0)))) FROM rt1, vt0; -- 0ms;
