-- Time: 2024/06/07 10:52:48
-- Database: database16
-- Database version: 3.40.0
-- seed value: 4140944116
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INT , +c6 INTEGER ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
DELETE FROM rt0 WHERE '-1204935907'; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
REINDEX; -- 0ms;
UPDATE rt0 SET (c0, c0)=(0X2be45aba, 0.8328041177910912) WHERE ((rt0.c3)AND(rt0.c2)) COLLATE RTRIM; -- 1ms;
UPDATE rt0 SET c1=NULL, c5=-898088476; -- 0ms;
ANALYZE rt1; -- 0ms;
PRAGMA main.cache_size; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(NULL) WHERE (((('')GLOB(rt1.c2))) NOTNULL); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1)=('', x'') WHERE load_extension(rt0.c4 COLLATE NOCASE); -- 0ms;
END; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 1ms;
UPDATE OR IGNORE rt1 SET (c1)=(NULL) WHERE CASE rt1.c2  WHEN ((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1)) THEN UPPER(rt1.c2) WHEN UPPER(rt1.c2) THEN (- (rt1.c2)) WHEN ((((0.6792014275937792)AND(rt1.c1)))OR(rt1.c1)) THEN 1268027783 ELSE NULL END; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET c5=x'e05ccd4e'; -- 0ms;
UPDATE rt1 SET c1=x'28c8f541', c1=x'', c2=NULL WHERE (NOT ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0Xffffffffb4c18e0a); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES (x'', 0.6818030219191733, NULL); -- 1ms;
UPDATE OR FAIL rt1 SET (c1)=(0.3336505479746742); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.8328041177910912; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES ('踊Eo', -898088476, 'Q'), (x'', NULL, x''), ('eaMYfhg', x'60d1', NULL); -- 1ms;
INSERT OR ABORT INTO rt1 VALUES (0.4011827490110753, 0.016133415084192526, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c6) VALUES (x''); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA journal_mode; -- 0ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
UPDATE rt1 SET c1=1293436415; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c1)=(NULL) WHERE NULLIF(MAX(rt1.c0, rt1.c2, rt1.c2, rt1.c1), rt1.c0); -- 0ms;
UPDATE rt0 SET (c1)=(x'') WHERE (~ (((rt0.c6)AND(rt0.c5)))); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-898088476 2'); -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES ('oO'), (x''), ('eaMYfhg'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c6, c3, c1) VALUES ('-1204935907', 0.6644969408881046, 0.5175354634997578, x'3d43'), ('', x'963416c3', '-898088476', 0X20546889), (x'', 0X2c9a2037, x'', 7.48298295E8); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES ('H_', ''); -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (x'21eb'); -- 0ms;
PRAGMA main.journal_size_limit = -7330857821636771542; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR FAIL rt1 SET c1=x'81680f58', c2=NULL WHERE ((((rt1.c1) NOTNULL))%(rt1.c0)); -- 1ms;
UPDATE OR IGNORE rt0 SET (c4)=(1502619082) WHERE (((((rt0.c1)OR(rt0.c2)), rt0.c6, (((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4)))))>=(((rt0.c5 IN ()), (((rt0.c6))>((rt0.c6))), ((rt0.c2) NOT NULL)))); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.6028229393146931 WHERE (((rt0.c2)) BETWEEN ((((rt0.c6) IS FALSE))) AND ((((rt0.c5)|(rt0.c3))))); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL LEAD(TRIM(DISTINCT x'', rt1.c0), ((((rt1.c0)==(rt1.c2))) IS FALSE), (- ((- (rt1.c1))))) OVER () FROM rt1 WHERE (((-849199224 COLLATE RTRIM)>(HEX('736385722')))); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(x'') WHERE (((rt1.c0) IS FALSE) IN ()); -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (x'', NULL); -- 0ms;
PRAGMA short_column_names = false; -- 1ms;
PRAGMA threads = -1753634046664206997; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES ('*eM''8)r'); -- 0ms;
INSERT OR REPLACE INTO rt0(c6, c1, c2, c4, c5, c0) VALUES (((((NULLIF(x'', 0.36459768112427826))OR(((('0.3336505479746742', x'', 0.4011827490110753))<((0.09612842451171688, '-898088476', 'S᛿%踊s雪v'))))))OR(x'')), 0.6818030219191733, x'', 0.48148759796238083, NULL, '-944054532'); -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c6, c4, c0) VALUES (0.9042561023332849, x'', x'', 1293436415); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE rt0 SET c5=NULL, c6='0.8328041177910912' WHERE ((((rt0.c6) ISNULL))/(((rt0.c2)/(rt0.c4)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2080374833'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1) VALUES ('rB', '1894196982'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(0X599025ca) WHERE (((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))))<=((rt1.c1 COLLATE NOCASE))); -- 0ms;
PRAGMA main.threads = 5842985954951388415; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2)=(NULL, x'6842') WHERE ((((rt0.c5)LIKE(rt0.c6)))>=('*E踊UQ⌝EgY')); -- 0ms;
ANALYZE main; -- 1ms;
REINDEX  rt0; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', 0.054680541735062205, x'9d62'); -- 0ms;
UPDATE rt1 SET (c2)=(-1533833069); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (x'daad', 0.016133415084192526, x'4505'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (x'432a', x'', 0.08128335785877339), ('0.016133415084192526', '', ''), (NULL, 0x2c9a2037, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE rt1 SET c0='-1193322684', c2=0.893973703448032; -- 0ms;
PRAGMA temp.application_id = -8796467220682739936; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c1, c2) VALUES (0.6792014275937792, '-1533833069'); -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (''), (''), (0.016133415084192526), (x''), (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (0X1bed385e, '1502619082', 1502619082); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c5, c0) VALUES (x'ba84', 'twgFlT', '~zQ]E+<\n '); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(0X55ee1a4) WHERE load_extension(0.339389776471385 COLLATE BINARY, ((rt1.c1)==(rt1.c1))); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.11996058994683378, c0='g'''; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(0.702891603812341); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3=0x2c8fcf7f, c3=x'' WHERE CAST(((((rt0.c1)AND(rt0.c6)))AND(rt0.c0)) AS BLOB); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (1157109503, x'', 0.7330731240049332); -- 0ms;
UPDATE rt1 SET c1=NULL; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (NULL, NULL); -- 0ms;
UPDATE rt0 SET (c0)=(x'b8ea'); -- 0ms;
UPDATE rt0 SET c4=''; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
UPDATE OR FAIL rt0 SET c6=0.6143976426889272, c2=NULL; -- 1ms;
PRAGMA busy_timeout = 10000; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c6, c2, c1, c5, c3, c4) VALUES (339437271, '-1459260566', '1894196982', 'Xv', x'00dd3556', x'', '542402697'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT AVG(((rt0.c5)%(rt0.c2))), NTILE(((rt1.c2)-(rt1.c1)) COLLATE NOCASE COLLATE BINARY) OVER (), ((((rt0.c2)<<(rt1.c2)))<=(CASE rt1.c0  WHEN NULL THEN rt0.c1 ELSE rt0.c3 END)) FROM rt1;SELECT DISTINCT ((((rt0.c5)-(rt0.c5)))IS(0.3183076062104121)), CAST(rt1.c1 AS BLOB), (((((((((rt1.c2)AND(rt0.c3)))AND(rt0.c1)))OR(rt1.c0)))AND(rt0.c5)) IN ()), (((rt0.c3) NOT NULL) IN ()), COUNT(NULLIF(rt0.c5, rt0.c5)) OVER () FROM rt0 WHERE (CAST(NULL AS BLOB) COLLATE RTRIM);SELECT ALL (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((MAX(rt0.c1)))), ((TOTAL(rt0.c1))>(((((rt1.c1)OR(rt1.c1)))AND(0.016133415084192526)))), CASE CASE rt0.c4  WHEN rt1.c0 THEN rt1.c2 END  WHEN ((rt0.c5) IS TRUE) THEN (((rt0.c2, rt1.c0, rt1.c2)) NOT BETWEEN ((rt0.c6, rt0.c2, rt0.c4)) AND ((rt0.c3, NULL, rt0.c0))) ELSE rt1.c2 COLLATE RTRIM END FROM rt1, rt0 WHERE ((((x'd3a0' IN ())) NOT BETWEEN ((((NULL, x'', NULL))>=((0.15277031898753235, '', NULL)))) AND (((((NULL)AND(x'')))AND(x'890d'))))) ORDER BY (((((rt1.c1)AND(rt0.c0))))<=(('')))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((- (rt0.c0)))>(rt0.c1)), rt0.c1, rtreenode(CHAR(rt0.c6, rt0.c3, rt0.c3), ((rt0.c3) NOT NULL)) FROM rt1, rt0 LIMIT -595028561 OFFSET -595028561; -- 0ms;
SELECT DISTINCT CASE ((((rt0.c1)OR(rt1.c0)))AND(rt0.c2))  WHEN CAST(rt1.c2 AS INTEGER) THEN (((7.48298295E8, rt0.c1, rt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt1.c0)) AND ((rt0.c4, rt1.c2, rt1.c0))) ELSE rt1.c2 COLLATE BINARY END, ((((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c2)))OR(((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c5)))), HEX(((0.09985097687931155)!=(rt0.c0))) FROM rt1, rt0; -- 0ms;
SELECT ALL LOWER(DISTINCT ((('-2092276712'))>((rt0.c0)))) FROM rt0, rt1 WHERE (UNLIKELY(DISTINCT (('Iv') ISNULL))) GROUP BY (((rt0.c2)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c0)))OR(rt0.c1)))) AND ((((((rt0.c2)AND(rt1.c1)))AND(rt1.c0))))), ((((((rt0.c2)<(rt0.c6)))OR(CAST(rt1.c2 AS REAL))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c6))))), CASE rt0.c6 COLLATE RTRIM  WHEN CAST(rt0.c6 AS BLOB) THEN rt0.c3 WHEN (~ (rt0.c0)) THEN rt0.c6 COLLATE BINARY WHEN ((rt1.c0)-(rt0.c0)) THEN (rt0.c6 IN (rt0.c3)) ELSE ((rt1.c0) IS TRUE) END; -- 0ms;
SELECT ALL (((rt0.c6 IN ())) NOT NULL), (((((rt0.c6))<((rt0.c1)))) IS TRUE), (~ (rt0.c5)) COLLATE RTRIM FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c0)) IN ()) FROM rt0 WHERE (((0.031651899330136235) BETWEEN (NULL) AND (x'')) COLLATE NOCASE) LIMIT 805780328; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT rt0.c3)) NOT NULL), '㾈]', CASE ((rt0.c2) BETWEEN (NULL) AND (rt0.c5))  WHEN CASE NULL  WHEN NULL THEN rt0.c3 END THEN rt0.c1 COLLATE NOCASE ELSE rt0.c1 COLLATE NOCASE END FROM rt0 WHERE (((((x'')IS NOT(0.3486173473791767)))>((((NULL, '4a', '805780328')) BETWEEN ((0.08306513347956024, '-997851560', NULL)) AND (('1088824980', '805780328', 0.4846038810759944)))))); -- 0ms;
SELECT ((NULL)IS NOT(((rt0.c1)+('1157109503')))) FROM rt0 LIMIT 473420839 OFFSET 379295738 UNION SELECT DISTINCT (~ (LIKELIHOOD(DISTINCT rt1.c2, 0.4452824583268449))) FROM rt1 FULL OUTER JOIN rt0 ON (- (((rt0.c6)<>(rt0.c1))));SELECT ALL (MIN(rt0.c6) IN ()) FROM rt1, rt0 ORDER BY '-903930119'  NULLS FIRST; -- 0ms;
SELECT DISTINCT TRIM(NULL, '0.0') FROM rt1 WHERE ((((NOT (379295738))) BETWEEN (('0.6644969408881046' IN ())) AND ((- (x'd426'))))); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt0 WHERE (CAST((((x''))!=((NULL))) AS INTEGER));SELECT ((((rt0.c3)=(rt0.c6)))GLOB(MIN(rt0.c2))) FROM rt1;SELECT DISTINCT ((((((((((rt1.c0)OR(rt0.c4)))AND(rt0.c5)))AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ((rt1.c1 IN ())) AND (ABS(DISTINCT rt1.c2))), (((rt0.c4, rt0.c2, rt0.c5)) NOT BETWEEN ((((rt0.c6)/(rt0.c5)), (rt1.c0 IN (rt0.c5)), ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c4)))) AND ((CASE WHEN 0.8366617093388145 THEN rt0.c3 END, ((((rt1.c1)OR(rt1.c1)))AND(rt0.c0)), ((((rt1.c1)OR(rt0.c3)))OR(rt1.c1))))), (rt0.c4 IN (rt1.c0, rt1.c2)) COLLATE BINARY FROM rt1 WHERE ((~ (NULL)) COLLATE NOCASE);SELECT NULL COLLATE RTRIM, (((rt0.c6))==((NULLIF(rt0.c3, '379295738')))), CASE WHEN COUNT(*) THEN (rt0.c4 IN ()) END, rt1.c2, ((((((((((NULL)>>(rt0.c5)))OR(((((((((rt1.c1)AND(rt0.c3)))OR(rt0.c5)))AND(rt0.c0)))AND(rt0.c5)))))AND(CASE x''  WHEN rt0.c2 THEN rt1.c0 END)))AND(((rt1.c2)OR(rt0.c3)))))AND((('902426463') IS TRUE))) FROM rt1, rt0; -- 0ms;
SELECT ((CAST(rt0.c4 AS NUMERIC))>((rt0.c6 IN ()))), ((((rt0.c5) BETWEEN (rt0.c5) AND (rt1.c2))) NOT BETWEEN ((+ (rt1.c1))) AND (rt0.c0 COLLATE RTRIM)), ((((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)))OR(rt1.c2)))AND(rt0.c6)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c6 END)))OR(AVG(rt0.c4))) FROM rt1, rt0 WHERE (CASE WHEN (~ (NULL)) THEN ((0X1b1a83c6) NOT BETWEEN (0Xffffffff95bb2133) AND (0.04579820337602181)) WHEN (((('1702615350')OR('-1459260566')))OR(x'')) THEN TRIM(DISTINCT 0.006053211110447321, 0.08328604407010742) WHEN 0.6030555446841928 COLLATE NOCASE THEN (~ (NULL)) ELSE NULL END); -- 0ms;
SELECT ALL CAST(CAST(rt0.c6 AS REAL) AS NUMERIC) FROM rt0, rt1 WHERE ((((('0.3486173473791767')|(0.2668394249869086))) IS TRUE)); -- 0ms;
SELECT ((((rt0.c0 COLLATE BINARY)AND(rt0.c6 COLLATE NOCASE)))AND((((rt1.c2))<=((rt1.c2))))), ((((rt0.c0) NOT NULL))|('1245222655')), TOTAL((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((rt0.c5, rt0.c1, rt0.c1)) AND ((x'3c32', rt0.c6, rt0.c0)))) OVER () FROM rt0, rt1; -- 0ms;
SELECT COUNT(((rt1.c0) NOTNULL)) FROM rt0, rt1 WHERE ((CAST(0.8209824564335498 AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c1)>=(rt0.c1))) BETWEEN (SUM(rt1.c0)) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt1.c2)))) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c6 AS TEXT))%(rt1.c1 COLLATE NOCASE)) FROM rt0, rt1 WHERE (CAST((+ (0.9042561023332849)) AS TEXT)); -- 0ms;
SELECT ALL LEAD(UNLIKELY(DISTINCT CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c4 THEN rt1.c2 WHEN rt0.c4 THEN rt1.c2 ELSE rt1.c0 END), (((((((((rt0.c3)AND(rt0.c6)))OR(rt0.c1)))AND(rt0.c4)))OR(rt1.c0)) IN (CASE WHEN rt0.c5 THEN rt0.c6 END)), ((((rt0.c4 IN (rt1.c2))))=(((((rt0.c5, rt0.c6, 1268027783))<=((rt1.c1, rt0.c3, rt0.c0))))))) OVER (), ABS(CAST(rt0.c6 AS NUMERIC)), (rt0.c5 IN (LIKELIHOOD(rt1.c2, 0.17066316729608721), ((0xffffffffacf8d06c)LIKE(rt1.c0)))) FROM rt0, rt1; -- 0ms;
SELECT SUM(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c6 END), COUNT(((rt1.c1) BETWEEN (rt0.c6) AND (rt1.c1))), CASE ((rt1.c1)&(rt0.c1))  WHEN ((rt1.c2)<(rt0.c1)) THEN (NOT (x'')) ELSE ((rt0.c2) NOT NULL) END, PERCENT_RANK() OVER (), CASE rt0.c6  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END COLLATE BINARY FROM rt1, rt0 GROUP BY NULL, (((rt0.c1 IN ()))-((((rt0.c2)) BETWEEN ((rt0.c6)) AND ((rt0.c5))))), rt0.c0 HAVING (((('_iV')OR(((rt1.c1)|(rt0.c6)))))AND(((rt0.c3)<>(x'')))); -- 1ms;
SELECT DISTINCT (CAST(rt0.c5 AS REAL) IN (COUNT(*))) FROM rt0; -- 2ms;
SELECT DISTINCT CAST((rt0.c4 IN (rt0.c2)) AS NUMERIC), (+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))), MIN(((rt0.c5)-(rt0.c4))) FROM rt1, rt0 WHERE (((((((((((x'')OR(x'')))AND((('*E踊UQ⌝EgY')OR(0x3dc1de32)))))AND((((NULL))>=(('1105730962'))))))OR(json_quote(x''))))AND((((0.37566829851328))==(('&踊''e(Ui'))))));SELECT DISTINCT ((((rt0.c4) BETWEEN (rt0.c2) AND (rt1.c1)))<>(rt1.c0 COLLATE NOCASE)) FROM rt0, rt1; -- 0ms;
SELECT ALL (((rt1.c2)) BETWEEN ((SUM(rt0.c1))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))), '-1204935907', (((rt0.c3 IN (rt1.c2))) NOT NULL) FROM rt0, rt1 WHERE ('') GROUP BY rt0.c4 COLLATE RTRIM, COALESCE(rt0.c1, rt1.c2) COLLATE NOCASE, json_quote(((((rt0.c3)AND(rt0.c2)))OR(rt0.c3))), CAST(NULL AS REAL), (((NOT (rt0.c4)))IS((rt0.c1 IN (rt0.c6)))) HAVING CAST(((rt0.c1)GLOB(1.268027783E9)) AS NUMERIC); -- 0ms;
SELECT ALL (((AVG(rt1.c1)))<((((((rt0.c2)OR(rt1.c2)))OR(rt0.c1))))), ((('-1924030581')-(rt0.c6)) IN ()), ((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c6 END) BETWEEN (((rt0.c5)/(rt1.c2))) AND (GROUP_CONCAT(rt0.c1))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c0)>=(rt0.c2)))AND((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))))OR(((rt1.c1)+(rt0.c1)))), x'', ((((((rt0.c0)GLOB(rt0.c6)))OR((rt0.c1 IN ()))))OR((((rt0.c1, rt0.c5, rt0.c5)) NOT BETWEEN ((rt0.c5, rt0.c2, rt0.c4)) AND ((rt0.c3, rt0.c5, rt0.c3))))) FROM rt0 GROUP BY ((rt1.c0) BETWEEN (((rt0.c0)>(rt0.c3))) AND (CAST(rt1.c1 AS INTEGER))) HAVING ((((((rt1.c2) IS FALSE))AND(((('jVGOdS\r')) NOT BETWEEN ((rt0.c4)) AND ((rt1.c2))))))AND(((NULL)LIKE(rt0.c0))));SELECT ALL LEAD(CAST(CAST(rt1.c2 AS INTEGER) AS REAL), (((rt1.c1, rt1.c1, rt1.c0))<((rt1.c1, rt1.c2, rt1.c2))) COLLATE BINARY, TRIM(DISTINCT CAST(rt1.c2 AS NUMERIC))) OVER ( ORDER BY (((~ (rt0.c3))) BETWEEN (((((((((rt0.c4)OR(rt0.c5)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))) AND (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST) FROM rt1;SELECT ((((rt1.c1) NOTNULL)) IS TRUE) FROM rt0 WHERE (('' IN ()) COLLATE NOCASE) LIMIT -157613439;SELECT ALL COUNT(*) OVER () FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)) BETWEEN (((NOT (rt0.c6)))) AND ((CAST(rt0.c5 AS TEXT)))); -- 0ms;
SELECT (+ (((rt0.c4) NOT BETWEEN (x'5d752349') AND (rt0.c5)))), SUM(((rt1.c0) NOTNULL)) OVER ( ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c0, rt1.c1, rt1.c1) IN ((('3C>^5_e<~') NOT BETWEEN (rt1.c0) AND (NULL)))) DESC  NULLS FIRST, CASE rt0.c3 COLLATE BINARY  WHEN x'' THEN ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)) ELSE COALESCE(rt0.c4, rt1.c1, rt0.c0, rt1.c1) END DESC  NULLS FIRST, ((rt0.c0) ISNULL)  NULLS LAST, ((((rt0.c3)>(0.30781370920197637)))||((rt0.c6 IN ()))) ASC  NULLS LAST), GROUP_CONCAT((((rt0.c0, x'b117', rt1.c1))>=((rt0.c4, rt0.c6, rt0.c6)))) FROM rt1, rt0 WHERE ((((((('0.016133415084192526')<>('-1204935907')))AND((('') BETWEEN (x'2a0c') AND (NULL)))))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL UNLIKELY((rt0.c1 IN ())), (((rt0.c0)!=(rt1.c2)) IN ()), CAST(GROUP_CONCAT('454722502') AS REAL) FROM rt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt0.c0))))|('-1262383606')) WHERE (CAST((NULL IN ()) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((CAST('' AS TEXT))OR((NOT ('')))))AND((('-1199594511')>(rt0.c6)))) FROM rt0 WHERE (CAST(((((x'')AND(-9.9785156E8)))OR(0.70789272734739)) AS BLOB)); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0, rt1 WHERE ((((((0.27653621186077915 IN ()))OR((((((((('1245222655')AND(0.5209001880213529)))AND(0.2123004782144009)))OR('-898088476')))OR(']Z0wBg<')))))AND(((x'')GLOB(x'3183'))))); -- 1ms;
SELECT ALL ((MIN(rt0.c2))<(((x'e3641eea')IS NOT(rt1.c2)))), NULL, COUNT(*) FROM rt0, rt1 WHERE ((((((NULL) BETWEEN (x'') AND (NULL))))<=((((('-1416726611'))<((x'cc0e'))))))); -- 0ms;
SELECT DISTINCT LAG(NULLIF(rt1.c1 COLLATE NOCASE, ((rt1.c1)<=(rt1.c2))), CASE ((x'') NOT BETWEEN (rt1.c1) AND (x''))  WHEN ((-1.57613439E8) IS FALSE) THEN (((rt1.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c1))) END, (((rt1.c0 IN ()))=(((1857868526)>=(NULL))))) OVER (), (((rt0.c6 IN ()))OR(rt0.c5 COLLATE BINARY)), (((NOT (rt0.c1)))*(rt0.c3 COLLATE BINARY)) FROM rt1;SELECT ALL 1.268027783E9, (('-1392979860') BETWEEN (((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c4 COLLATE RTRIM)), 0.7566806726968506 FROM rt0 WHERE (((0.14769691618298353) NOT BETWEEN ('1601083114') AND (NULL)) COLLATE RTRIM);SELECT DISTINCT ((rt1.c2)||(((rt1.c0)+(rt1.c2)))) FROM rt0;SELECT DISTINCT json_array((((rt0.c0))<=((rt0.c2))), ((rt1.c0) IS FALSE)), FIRST_VALUE(CAST(((rt1.c1) BETWEEN (rt1.c0) AND (NULL)) AS NUMERIC)) OVER ( ORDER BY SUBSTR(rt1.c2, rt0.c3) COLLATE RTRIM COLLATE BINARY  NULLS FIRST), (- (((rt0.c0)==(rt0.c5)))), (((rt0.c0)*(rt0.c1)) IN ()), TRIM(rt1.c1) FROM rt1;SELECT DISTINCT SUM(CASE WHEN rt0.c1 THEN rt0.c6 END) OVER ( ORDER BY (((((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c2))))>(((rt0.c4 IN ())))) DESC  NULLS LAST, rt0.c4  NULLS LAST), ((((NULL) IS TRUE))IS(((rt0.c6)&(rt0.c6)))), CAST(TOTAL(rt0.c6) AS REAL), ((rt0.c1)>=(((x'') IS FALSE))), CAST(DATETIME('473420839', rt0.c4, rt0.c4, rt0.c5, rt1.c1, rt1.c1, rt0.c3) AS NUMERIC) FROM rt1 WHERE ((((((0.11936273387403062)) NOT BETWEEN ((x'')) AND ((x'')))) NOT BETWEEN ((((0.18710740364921108))<=(('90104228')))) AND (CAST(x'' AS TEXT))));SELECT rt1.c0, ((((rt0.c6)OR(rt0.c3))) BETWEEN (((rt0.c2)<<(rt0.c3))) AND (((rt0.c3) ISNULL))), ((((TRIM(rt1.c2, rt1.c2))AND(CASE rt0.c5  WHEN rt0.c4 THEN rt1.c1 ELSE 0.22554649694887274 END)))AND(json_valid(rt1.c1))) FROM rt0 WHERE ((x'' IN ()) COLLATE RTRIM);SELECT (- (CASE rt0.c5  WHEN x'' THEN rt0.c0 END)) FROM rt0, rt1; -- 0ms;
SELECT ALL ((rt0.c0)&(TOTAL(rt0.c1))) FROM rt1, rt0 WHERE ((- (x'' COLLATE RTRIM))) ORDER BY 0.12894008175955518 COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT MAX(((((((((x'')OR(rt0.c2)))OR(rt1.c2)))OR(rt0.c1)))AND(rt0.c6)), LTRIM(rt0.c0)), (((((rt1.c1))>((rt0.c1))))<(0.42037437122002697)), (NOT (COUNT(rt0.c6))) FROM rt1, rt0 ORDER BY CAST(((rt1.c0)<<(rt0.c5)) AS BLOB) DESC; -- 0ms;
SELECT DISTINCT LIKE(((rt1.c2)IS NOT(rt0.c2)), (((rt1.c0))<>((rt0.c4))), '0') FROM rt1, rt0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN (- (0.15200585842108738)) THEN NULL END); -- 1ms;
SELECT CAST(0X1 AS TEXT), (((((rt0.c2))==((rt1.c1))))+(x'c6e6')), (~ (COUNT(rt0.c2))), rt0.c1, CASE WHEN rt0.c0 THEN ((rt0.c4) ISNULL) ELSE (~ (rt1.c1)) END FROM rt0 NOT INDEXED LIMIT 1193488398;SELECT DISTINCT FIRST_VALUE('-299697114') OVER (), ((((((rt0.c5) NOT BETWEEN (0.5175354634997578) AND (rt0.c3)))OR(CAST(rt1.c2 AS BLOB))))AND((+ (rt0.c6)))), GROUP_CONCAT(rt0.c6 COLLATE BINARY), (NOT (rt0.c2)), GROUP_CONCAT(LIKELIHOOD(rt0.c5, 0.2228385426615227)) FROM rt1, rt0; -- 0ms;
SELECT ALL LIKELY(DISTINCT ((rt0.c0)OR(rt1.c1))) FROM rt0;SELECT ALL ((((((rt0.c1)<(rt1.c1)))AND(CAST(rt0.c1 AS INTEGER))))AND(((rt0.c4)=(rt0.c0)))) FROM rt0;SELECT ((((rt1.c1)|(rt0.c4))) NOTNULL) FROM rt1, rt0 ORDER BY (((~ (rt0.c5)))/((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))))); -- 0ms;
SELECT ALL (((CAST('R&Jꮘ' AS TEXT)))!=((0.39065321173584655))) FROM rt0 WHERE (CAST(((('0.0')) NOT BETWEEN ((x'')) AND ((-8.49199224E8))) AS BLOB)); -- 0ms;
SELECT ALL (((((rt0.c6)IS NOT(rt1.c1))))>((AVG(rt1.c0)))) FROM rt1, rt0 LIMIT -151214180; -- 0ms;
SELECT TOTAL(CAST(rt0.c3 AS REAL)) OVER () FROM rt1 WHERE ((((0.054680541735062205) ISNULL) IN (((x'11cf')==('0.18710740364921108')))));SELECT DISTINCT CAST(load_extension(rt0.c1) AS BLOB) FROM rt1;SELECT ((rt1.c1)<=(CASE rt0.c4  WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c4 THEN 0.29929165928689727 WHEN 0.8518289089766161 THEN rt1.c0 END)) FROM rt0, rt1 WHERE (((NULLIF(DISTINCT 'k옢UGqJ.~', 0.946166539197345))<(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (rt0.c6)) THEN (((rt0.c2))<=((rt0.c5))) WHEN ((((rt1.c1)OR(rt0.c3)))AND(rt0.c0)) THEN ((((((((rt0.c3)OR('466789612')))AND('-1459260566')))OR(x'')))OR(rt0.c0)) WHEN 4.66789612E8 THEN ((rt1.c1) NOT BETWEEN (0.35247974908062996) AND (rt1.c1)) ELSE ((rt0.c0) IS FALSE) END, (((((rt1.c2))>=((rt0.c3)))) NOTNULL), ((rt0.c0) BETWEEN (CAST(rt0.c5 AS NUMERIC)) AND (CAST(rt0.c0 AS INTEGER))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c2 COLLATE RTRIM)), rt0.c4, CASE (rt0.c0 IN (rt1.c2))  WHEN ((rt0.c2) NOTNULL) THEN '1157109503' END FROM rt1 WHERE (((0.9258866648248685)IS NOT((~ ('Q'))))) GROUP BY ((((((((((rt0.c4)AND(rt0.c0)))OR('1193488398')))AND(rt0.c1)))OR(rt0.c4)))*(((rt1.c2)IS NOT(rt1.c0)))), ((((((rt0.c4))<((rt0.c4)))))<((IFNULL(DISTINCT rt1.c2, rt0.c4)))), (rt1.c2 IN (rt0.c4)) COLLATE BINARY HAVING (((NULL IN ())) BETWEEN (rt0.c1) AND (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))));SELECT (NOT (((0.7836227244744579) NOT BETWEEN (rt1.c2) AND (rt0.c5)))), TOTAL(((rt0.c1) IS TRUE)), ((((rt1.c1)LIKE(x'')))+(CAST(rt0.c0 AS NUMERIC))) FROM rt0, rt1 GROUP BY ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)) COLLATE BINARY HAVING ((((((rt0.c6)OR(rt0.c5)))OR(0.6857722201736993)))+(rt0.c6)); -- 0ms;
SELECT ALL (((('1268027783')AND(0.27273479376633825)))AND(rt0.c1)) COLLATE BINARY FROM rt1 WHERE ((((x'')) BETWEEN (((((NULL)) NOT BETWEEN ((x'9169')) AND (('-654546005'))))) AND ((((((NULL)OR(NULL)))AND(''))))));SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER)) NOTNULL) FROM rt0, rt1 ORDER BY CAST(CAST(rt1.c2 AS REAL) AS INTEGER) DESC LIMIT 597610139; -- 0ms;
SELECT ALL ((CASE rt0.c5  WHEN rt0.c0 THEN rt0.c0 END)LIKE(json_quote(rt0.c5))) FROM rt0 FULL OUTER JOIN rt1 ON x''; -- 0ms;
SELECT CAST((rt0.c4 IN ()) AS NUMERIC) FROM rt1, rt0 WHERE ((((+ (x'6ffd')))LIKE(x'' COLLATE BINARY))); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE NOCASE)*(((rt1.c0)||(rt1.c1)))) FROM rt1, rt0; -- 0ms;
SELECT ALL '' FROM rt0 ORDER BY CASE rt0.c5 COLLATE BINARY  WHEN (('-1568870318')+(rt0.c0)) THEN rt0.c5 ELSE CAST(rt1.c0 AS INTEGER) END ASC  NULLS LAST;SELECT DISTINCT ((('805780328')LIKE(x'9dc6fbd4')) IN ()), 1e500 COLLATE NOCASE, LAG(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))OR(CASE WHEN rt0.c0 THEN rt0.c5 END)))AND(rt0.c3)), CAST(((((rt0.c1)AND(rt0.c5)))OR(rt1.c1)) AS BLOB), CASE CAST(rt1.c1 AS TEXT)  WHEN (- (rt0.c4)) THEN rt0.c5 ELSE rt0.c4 COLLATE NOCASE END) OVER () FROM rt0, rt1 WHERE ((- (((')Ks') BETWEEN (0x2c8fcf7f) AND (0.4933704518928903))))); -- 0ms;
SELECT DISTINCT MAX(rt0.c1 COLLATE BINARY COLLATE RTRIM) FROM rt1, rt0 ORDER BY CAST(rt0.c3 AS REAL) ASC; -- 0ms;
SELECT DISTINCT ((rt0.c6) IS TRUE) COLLATE BINARY FROM rt0, rt1 WHERE ((- (CAST(x'91c0' AS TEXT)))); -- 0ms;
SELECT ALL (((rt0.c1 IN (rt0.c1, rt0.c4))) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND (((rt0.c6)-(rt0.c2)))), (CAST(rt0.c0 AS TEXT) IN ()), ((DATE(rt0.c2, rt0.c3, rt0.c2))%(('*E踊UQ⌝EGY' IN ()))) FROM rt1, rt0; -- 1ms;
SELECT ALL rt1.c2 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((COUNT(rt0.c5)))>=((((rt0.c6)>(rt0.c0))))) FROM rt1 WHERE (CASE WHEN ((NULL)>=('941708663')) THEN ((NULL) BETWEEN (0X21cc3b7a) AND (NULL)) ELSE CASE 0.006053211110447321  WHEN 0X4d1845ff THEN NULL END END) GROUP BY (((rt0.c0))>=((rt0.c0))) COLLATE NOCASE, QUOTE((rt1.c2 IN ())), ((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))OR(0Xffffffffbf816d5b)))AND(rt0.c6)) COLLATE BINARY, ((((rt0.c5)AND(rt1.c1)))AND(rt0.c2)) COLLATE NOCASE COLLATE NOCASE, ((((rt0.c5)-(rt1.c0)))<=(rt0.c2)), (~ ((NOT (rt1.c0)))), (ABS(DISTINCT '-2075475122') IN ()) HAVING COUNT(*);SELECT DISTINCT (((rt1.c0 IN ())) BETWEEN (CAST(rt0.c3 AS BLOB)) AND (COUNT(rt1.c2))) FROM rt1 NATURAL JOIN rt0 GROUP BY LIKELY((((rt0.c4)) NOT BETWEEN ((rt0.c6)) AND ((x'')))); -- 0ms;
SELECT ((((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2))) IN ()), ((((rt0.c3)OR(rt0.c2))) NOT BETWEEN ((rt0.c6 IN ())) AND ((rt1.c0 IN ()))), LIKELY((rt0.c1 IN ())) FROM rt0, rt1 WHERE (load_extension((NOT (x''))));SELECT ((rt1.c2)<(TOTAL(rt0.c2))) FROM rt1 WHERE (CASE WHEN CASE NULL  WHEN 0.32266571073256156 THEN NULL END THEN (((x''))<=((NULL))) ELSE (('')<=(NULL)) END);SELECT DISTINCT (~ (rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS REAL)) NOT NULL) FROM rt0;SELECT DISTINCT '379295738' FROM rt1; -- 0ms;
SELECT ALL SUM(CASE rt0.c1  WHEN rt1.c2 THEN rt0.c4 END) OVER (), (((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))>(rt0.c2)), SUM(((((((((rt0.c2)AND(rt1.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c0))) OVER ( ORDER BY ((((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c1))) NOT BETWEEN (((((rt0.c2)AND(rt0.c5)))AND(rt1.c2))) AND (CAST(rt0.c3 AS BLOB))) ASC, (((((rt1.c2))>=(('-1204935907')))) NOT BETWEEN (TYPEOF(DISTINCT rt1.c1)) AND (((rt0.c3) NOTNULL))) ASC  NULLS FIRST), rt0.c6, ((TOTAL(NULL))>=(rt1.c2 COLLATE BINARY)) FROM rt1, rt0 WHERE (CAST((((0.27653621186077915)) BETWEEN ((0.6028753501076938)) AND (('V>s'))) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (- (rt1.c0)), CAST(TRIM(DISTINCT rt0.c0, rt1.c0) AS REAL), LTRIM((~ (rt0.c1))) FROM rt0 WHERE ((SQLITE_VERSION() IN (GLOB(721897459, ''), ('1438107170' IN (x'')))));SELECT ALL ((((rt0.c2)/(rt0.c0)))LIKE((rt1.c2 IN (rt0.c6)))) FROM rt0 NATURAL JOIN rt1 WHERE ((((('4A')|(0.5115503755141076)))>=(HEX(DISTINCT '-893525147')))); -- 0ms;
SELECT COUNT(NULL), (((rt1.c1)) NOT BETWEEN (((rt0.c5 IN (rt1.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3))))), CAST((rt0.c4 IN ()) AS NUMERIC) FROM rt0;SELECT COUNT(CASE rt0.c4  WHEN rt1.c0 THEN rt0.c6 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c0 END) OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c5 AS INTEGER)) OVER () FROM rt0, rt1 WHERE (((NULL COLLATE BINARY)|(((0.15721858710716086) BETWEEN (x'') AND (0.3625260836530384))))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c0)-(rt1.c1))) OVER ( RANGE  CURRENT ROW) FROM rt1, rt0; -- 1ms;
SELECT CAST(AVG(NULL) AS TEXT) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (rt0.c6 IN ()) COLLATE RTRIM, COUNT(*), ((IFNULL(rt0.c1, rt0.c6))<(CAST(rt0.c1 AS BLOB))) FROM rt1 WHERE (((((0.3819999757421456)) BETWEEN ((0.010157229484738406)) AND ((NULL))) IN ())) ORDER BY (((rt1.c0)>(rt0.c2)) IN (((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (((rt1.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c5, x'', rt0.c0)) AND ((rt0.c1, rt0.c5, rt0.c6)))));SELECT NULLIF(rt0.c3 COLLATE BINARY, (+ (rt0.c0))) FROM rt1 ORDER BY (+ (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c1 ELSE rt0.c5 END)) ASC  NULLS LAST;SELECT ((rt1.c1)OR(LTRIM('-283288397', rt0.c1))) FROM rt0 ORDER BY (+ ((- (rt0.c5)))) DESC;SELECT DISTINCT AVG((NOT (rt0.c1))) OVER ( ORDER BY 0.03628597191075755 DESC, (((((rt0.c1))>=((rt0.c4))))*(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c5)))) ASC, ((((((rt0.c3)|(rt0.c5)))AND(LIKELY(rt0.c0))))AND((rt1.c0 IN ()))) DESC), rt0.c2, CAST(((rt0.c3)/(rt0.c3)) AS TEXT) FROM rt1 WHERE ((((('')GLOB(-283288397))) NOT BETWEEN (-247766688 COLLATE NOCASE) AND (TYPEOF(DISTINCT '-1550015846'))));SELECT DISTINCT ((((((((((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)))OR(NULL)))AND(((rt0.c6) IS TRUE))))AND((rt1.c1 IN (rt0.c5, rt0.c4)))))AND((- (rt1.c2)))))OR(((rt0.c3)/(rt1.c2)))))OR(((rt0.c0)==(rt0.c5)))), -1.082036901E9, CASE rt0.c3  WHEN x'50b3' THEN '캛' WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN '' WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt1.c1 END COLLATE BINARY FROM rt1, rt0 WHERE ((((x'')<>('h_')) IN ((((0.14769691618298353))>((x'c5a7'))), ((NULL)-(-1577230463))))); -- 0ms;
SELECT CAST(rt1.c2 AS BLOB) COLLATE RTRIM FROM rt0, rt1 WHERE (((((NULL) IS TRUE))<<(((x'')|('#'))))); -- 0ms;
SELECT DISTINCT (((((rt1.c0))<=((rt1.c2)))) BETWEEN (((rt0.c6) IS TRUE)) AND (((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c0)))), (((~ (rt0.c5)))<>((rt0.c0 IN (rt0.c3, rt0.c4)))), ((((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c1))) NOT NULL), ((rt0.c0)<=('2080374833')), ((CAST(0.6644969408881046 AS REAL)) NOTNULL) FROM rt0 WHERE ((- (((0) BETWEEN (NULL) AND (0.7194594414041177)))));SELECT DISTINCT (+ (CAST(-1.082036901E9 AS BLOB))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((rt0.c5)OR(rt0.c5)))AND(rt0.c5)))OR(rt1.c1)))AND(rt1.c2)) COLLATE RTRIM, CASE ((((((((NULL)OR(rt0.c6)))OR(rt1.c0)))OR(rt0.c5)))OR(rt1.c2))  WHEN ((rt1.c0)>(rt0.c5)) THEN ((((rt0.c4)OR(rt1.c2)))AND(rt0.c2)) WHEN ((((((((rt1.c1)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)) THEN TOTAL(NULL) WHEN (rt0.c6 IN ()) THEN CAST(rt1.c1 AS BLOB) END, SUBSTR(((rt1.c0)/(rt0.c1)), (NOT (rt1.c0))) FROM rt0;SELECT DISTINCT ((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))=((((rt1.c0)<=(rt0.c5))))) FROM rt0 WHERE (CAST(INSTR(NULL, -1.57613439E8) AS TEXT));SELECT ((rt0.c6)IS(((rt0.c1) NOT NULL))) FROM rt1, rt0 WHERE ((((0.005984942670208215)) NOT BETWEEN (((((NULL))<=(('&踊''e(Ui'))))) AND (((((('883495827')OR(x'')))AND(0x744c6010)))))) ORDER BY UNLIKELY(DISTINCT ((rt1.c2)AND(rt0.c2))) ASC  NULLS FIRST, LIKELIHOOD(DISTINCT rt0.c3, 0.7775417929705218); -- 0ms;
SELECT ALL rt0.c4, (((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)) IN (CASE WHEN rt0.c6 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c6 THEN rt1.c1 END)), CASE WHEN ((rt1.c0)AND(rt0.c6)) THEN rt1.c0 COLLATE NOCASE WHEN ((rt0.c6)-(NULL)) THEN ((rt0.c5)AND(rt1.c1)) WHEN TRIM(rt0.c2) THEN ((rt0.c4)!=(rt0.c6)) ELSE ((rt1.c0) NOT NULL) END FROM rt0, rt1 WHERE (((((0.35247974908062996) IS TRUE))GLOB(LIKELIHOOD(DISTINCT 0.704889183615993, 0.07451973456010996)))); -- 0ms;
SELECT DISTINCT (((((NOT (rt1.c2)))AND(rtreenode(rt1.c2, rt0.c3))))AND(CASE 0x732d06ce  WHEN rt0.c5 THEN 0.7202858747182488 WHEN rt0.c0 THEN rt0.c5 WHEN rt1.c0 THEN NULL ELSE rt0.c1 END)), LAG(((((((((((rt1.c0)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c0)))<>(((rt0.c5)&(rt0.c2)))), (((rt0.c4 COLLATE RTRIM))!=((CASE rt0.c6  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END))), ((((rt1.c0)LIKE(rt0.c2)))>=(CAST(rt0.c4 AS REAL)))) OVER (), (('-1533833069' COLLATE NOCASE) IS FALSE) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT ((0.6030555446841928) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt1.c2)) FROM rt1, rt0 WHERE ((+ (((0.3706652915289782) NOT NULL)))); -- 1ms;
SELECT (((((rt1.c0))<>((rt0.c2)))) NOT BETWEEN ((+ (rt0.c2))) AND (rt0.c0)) FROM rt1 LIMIT -425732551;SELECT ALL ((((rt0.c5 IN ())))>((COUNT(rt0.c6)))), (- (((((rt0.c5)AND(rt1.c2)))AND(rt0.c0)))), AVG(((((rt0.c2)OR(rt0.c0)))OR(rt0.c6))) FROM rt0, rt1 ORDER BY HEX(DISTINCT (NOT (rt1.c1))); -- 0ms;
SELECT ALL ((((((((((rt0.c5)AND(rt0.c5)))OR(0.9365383351149459)))OR(rt1.c1)))AND(rt0.c3))) NOTNULL) FROM rt0, rt1 WHERE ((((('CI1⳻z') BETWEEN (NULL) AND (''))) BETWEEN (0.5858256783936172 COLLATE NOCASE) AND ((x'6a1c' IN ())))); -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS NUMERIC) FROM rt1 WHERE (((~ (NULL)) IN ())) GROUP BY (((rt0.c3) NOT NULL) IN ()), ((((HEX(rt1.c2))AND((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))))OR(rt0.c1 COLLATE BINARY)), 0.973566371050948 HAVING ((CAST(rt0.c1 AS REAL)) BETWEEN (rtreenode(rt0.c0, rt0.c2)) AND (COUNT(rt0.c0)));SELECT DISTINCT (- (rt0.c3)) COLLATE NOCASE, (((rt1.c2, rt0.c4, rt0.c6)) NOT BETWEEN ((json_type(rt0.c1), (((rt0.c4, rt1.c0, rt0.c5))!=((rt1.c2, rt0.c1, rt1.c1))), rt1.c1 COLLATE NOCASE)) AND ((((((((((rt0.c3)OR(rt1.c1)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c6)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN -1459260566 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 END, (rt0.c2 IN ())))), (CASE rt0.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c5 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c2 END IN ()), ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c4)) COLLATE BINARY, ((SUM(rt0.c4)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND ((NOT (rt0.c3)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT AVG(CASE WHEN 'v>s' THEN x'' END) COLLATE RTRIM, ((((((((((((rt1.c2)AND('	C?cqHf')))OR(rt0.c1)))AND(rt0.c4)))AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c5)) COLLATE RTRIM, (((((((rt0.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt1.c2, '460733892', rt0.c5)) AND ((rt1.c1, rt0.c5, rt1.c2))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt1.c0)))))AND(NULL)) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT TOTAL(CASE rt0.c0  WHEN rt0.c1 THEN '1436713980' WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c6 ELSE NULL END) FROM rt0, rt1 WHERE (CASE WHEN ((0.18399043350979527)<('882747321')) THEN (((NULL)) BETWEEN ((NULL)) AND ((NULL))) ELSE (0.09612842451171688 IN (0.17482596339816225, 0.7068389935672647)) END); -- 0ms;
SELECT ((CAST(rt1.c0 AS BLOB)) IS TRUE) FROM rt0, rt1 WHERE (((((CAST('\nc{%' AS BLOB))OR(CASE 0.04521890636006887  WHEN '' THEN x'' END)))OR(CAST('-1753378611' AS INTEGER)))); -- 0ms;
SELECT ((rt1.c2) IS FALSE) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((1815105265))))LIKE(NULLIF(DISTINCT rt1.c0, rt0.c2))) FROM rt1, rt0 WHERE (LIKELY(((((x'')AND(-1753378611)))AND(0.7864503047334309)))); -- 0ms;
SELECT DISTINCT '' FROM rt0 WHERE (((((x'')||(0.7005041939916467))) BETWEEN (((-1933140357)>=(NULL))) AND (((((0.4826249221410266)OR('1709160378')))AND(675845452))))); -- 0ms;
SELECT (((rt1.c0) NOTNULL) IN (ABS(DISTINCT rt0.c2))) FROM rt0, rt1; -- 0ms;
SELECT ALL 0.613319863502652 COLLATE BINARY FROM rt1, rt0 WHERE (((((((((((((NULL)AND(x'fab3')))OR('1932330702')))OR('339437271')))AND(x'')))OR((x'' IN (NULL)))))AND(0.12222998979444666))) GROUP BY (~ (rt1.c2)) COLLATE NOCASE HAVING ((((rt0.c5)GLOB('IF')))>=((rt0.c6 IN ()))); -- 0ms;
SELECT DISTINCT CASE rt0.c5  WHEN ((((((((rt0.c3)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)) THEN rt0.c6 COLLATE RTRIM WHEN ((rt1.c1) IS FALSE) THEN COALESCE(DISTINCT rt0.c6, rt1.c1, rt1.c0, rt0.c6) WHEN NULL THEN NULLIF(DISTINCT rt0.c4, rt1.c1) END, ((CAST(rt0.c0 AS BLOB))IS((NOT (rt0.c3)))), COUNT(*), NULLIF(((rt0.c3) ISNULL), (- (rt0.c1))), (((rt0.c5)) BETWEEN ((CASE rt0.c6  WHEN rt1.c0 THEN rt0.c0 ELSE 0X540380a3 END)) AND ((CAST(rt1.c2 AS INTEGER)))) FROM rt1;SELECT DISTINCT '踊EO' FROM rt0, rt1 WHERE (IFNULL((((x'356d'))<>((''))), CASE WHEN -1.5121418E8 THEN x'2dd2' END)); -- 0ms;
SELECT DISTINCT (- ((rt1.c0 IN ()))) FROM rt0; -- 0ms;
SELECT ('Htl)	' IN (SUM(rt0.c2), CASE WHEN rt0.c6 THEN rt1.c1 END)), (((rt0.c2)) BETWEEN ((-1.416726611E9)) AND (('uAeu\3rꓬB[]'))), ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) COLLATE NOCASE FROM rt0, rt1 WHERE ((((('' COLLATE NOCASE)OR((('-151214180') BETWEEN (0.15843472085221766) AND (0.43678883325813)))))AND(((NULL)|(x''))))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt0 WHERE (((('zmn혚\n')/('1374378476')) IN ())) ORDER BY ((((rt0.c1) BETWEEN (rt0.c5) AND (rt1.c0)))/(0.8250190613340919)) DESC;SELECT NULLIF(DISTINCT CAST(rt0.c1 AS BLOB), ((rt0.c6)!=(rt0.c5))) FROM rt1 WHERE ((((('166132430')>=(0.7561766955123501))) BETWEEN ((((0.22749818587526838, x'bcad', 1142721978, x'3d87', NULL))<((NULL, 0.03450287807478003, NULL, 0.940756926941622, x'')))) AND ((('1502619082')|(0.2892550811425133)))));SELECT DISTINCT COUNT(rt0.c5) FROM rt1, rt0 WHERE (CAST((- (x'b749')) AS INTEGER)) LIMIT 1478329297 OFFSET -903930119; -- 0ms;
SELECT ALL rt1.c0 FROM rt0;SELECT ALL CASE WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c2 END COLLATE RTRIM, MIN(((((rt0.c5)AND(rt1.c0)))OR(rt0.c0))), ((((((rt1.c1))<=((rt1.c1)))))<=((rt0.c4))) FROM rt1;SELECT DISTINCT ((((rt1.c0)OR(rt0.c6)))OR(rt0.c2)) COLLATE RTRIM FROM rt0, rt1 WHERE (((((LIKELIHOOD(DISTINCT '-1913099899', 0.5244108729719964))OR((('VE')<>(1857868526)))))AND(IFNULL(NULL, '1064320560')))) ORDER BY ((rt1.c1 COLLATE BINARY) ISNULL); -- 1ms;
SELECT ALL ((MIN(rt1.c0))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) FROM rt0;SELECT DISTINCT ((MIN(rt0.c6))==('-1416726611')) FROM rt0, rt1 WHERE (CAST(((x'4ad9')||(x'')) AS REAL)) ORDER BY (((rt0.c4 IN ())) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt1.c1 END) AND (((rt0.c2)*(rt0.c5)))) ASC; -- 0ms;
SELECT DATETIME((rt0.c5 IN ()), ((((rt0.c4)AND(rt0.c3)))AND(-1416726611)), (((((((('')AND(rt0.c3)))AND(rt1.c1)))AND(rt1.c2)))AND(rt0.c1))) FROM rt1, rt0 WHERE (((NULL)*(NULL)) COLLATE BINARY) GROUP BY (+ ((rt0.c3 IN ()))) HAVING CASE rt1.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c6 END COLLATE NOCASE; -- 0ms;
SELECT ALL rt0.c6 FROM rt0 WHERE (CASE CAST(x'' AS TEXT)  WHEN (('R៑gh*	\\rY') IS TRUE) THEN (('-1028731252')%(x'2b05')) ELSE 1467173077 END); -- 1ms;
SELECT DISTINCT (COUNT(rt1.c2) IN ()) FROM rt1, rt0 WHERE ((((x'' IN (x'')))<>((('BN') NOT BETWEEN (NULL) AND (0.6028229393146931))))); -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE NOCASE FROM rt0 NOT INDEXED, rt1 LIMIT -676980291 OFFSET 1702615350; -- 0ms;
SELECT DISTINCT RANK() OVER (), CAST(-1.459260566E9 AS INTEGER), (NULL IN (json_array_length(rt1.c1))) FROM rt1, rt0 WHERE (CAST((((NULL, '\ⶨi*', 0.5221287360094163, NULL, 0.14533647072389255)) NOT BETWEEN ((0.12913720188884736, NULL, 0.12235768278335635, '-898088476', '1142721978')) AND ((NULL, NULL, '5I!', '-247766688', x''))) AS BLOB)); -- 0ms;
SELECT (CAST(NULL AS REAL) IN ()) FROM rt1 FULL OUTER JOIN rt0 ON (((((rt0.c2)+(rt0.c1)), rt0.c6, rt0.c1 COLLATE RTRIM))>((((rt0.c5) ISNULL), ((rt0.c3)>=(rt1.c2)), ((rt0.c5)>(rt0.c6))))) WHERE (((((0.7242082647171755)*('')))=(COALESCE(0.6457680828485756, 0.22362736345834644)))); -- 1ms;
SELECT DISTINCT ((rt0.c5 COLLATE NOCASE) NOT NULL) FROM rt0, rt1 WHERE ((((NOT ('')))IS(NULL))) GROUP BY NULL; -- 0ms;
SELECT DISTINCT ((((rt0.c2)>(rt0.c4))) IS FALSE), rt0.c6, x'' FROM rt1 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (((0.12755500177203938) IS TRUE)) AND (((NULL)AND('173858719')))));SELECT ((((((rt0.c0, rt0.c1, rt0.c5, rt1.c0, rt0.c5))>((NULL, rt0.c5, rt1.c1, rt1.c1, rt1.c1)))))>=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))) FROM rt0 ORDER BY x'';SELECT ALL LAG((NOT (NULL)), (((rt0.c2))<((rt0.c6))) COLLATE BINARY, (((rt0.c3))>((rt0.c0))) COLLATE BINARY) OVER () FROM rt0; -- 0ms;
SELECT ALL (((rt1.c2)) BETWEEN ((json(NULL))) AND ((x'5fa9'))), AVG(((rt0.c2) BETWEEN (rt0.c0) AND (x'')) COLLATE NOCASE) OVER (), COUNT(rt0.c6 COLLATE RTRIM) COLLATE RTRIM FROM rt0 ORDER BY json_quote(rt1.c2) COLLATE RTRIM  NULLS FIRST;SELECT ALL (MAX(rt0.c5) IN (rt1.c2 COLLATE BINARY)) FROM rt1 WHERE (((('{!q')) BETWEEN ((((NULL)<('VM')))) AND ((((((NULL)AND('0.43678883325813')))AND('1643027119'))))));SELECT DISTINCT ((0.7263623419086974)LIKE(rt1.c0)) FROM rt1, rt0 WHERE ((+ (('-283288397' IN ())))); -- 0ms;
SELECT DISTINCT CAST(CHAR(rt0.c0) AS NUMERIC) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT LAG((((((x'4abf'))>=((rt0.c4)))) BETWEEN (((rt0.c1)&(rt1.c1))) AND ((rt0.c5 IN (rt0.c5)))), ((rt0.c1 COLLATE RTRIM) ISNULL), ((NULL) NOTNULL)) OVER () FROM rt1, rt0; -- 0ms;
SELECT ALL (((- (rt0.c2))) BETWEEN (rt0.c3 COLLATE RTRIM) AND (LIKELIHOOD(DISTINCT NULL, 0.5970232014169956))) FROM rt1 GROUP BY ((CASE rt1.c1  WHEN rt0.c3 THEN rt0.c2 ELSE NULL END)<=((+ (rt1.c1)))) HAVING ((((rt0.c6) NOT BETWEEN ('噥i') AND (rt1.c1)))<=((((rt1.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c3)) BETWEEN ((rt0.c1, rt1.c2, rt1.c0, rt0.c5, rt0.c1)) AND ((rt0.c2, 9.41708663E8, rt0.c6, rt0.c5, rt0.c6)))));SELECT (rt1.c0 COLLATE NOCASE IN ()), json_remove(IFNULL(DISTINCT rt0.c3, rt0.c2), rt0.c5 COLLATE RTRIM), NTH_VALUE(CAST((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) AS INTEGER), -1.416726611E9) OVER ( ORDER BY LIKELIHOOD(DISTINCT LIKELIHOOD(rt0.c2, 0.12270601978729712), 0.7850270990285433) DESC) FROM rt1, rt0 GROUP BY (NOT ((- (rt1.c1)))) HAVING rt1.c0 ORDER BY CASE ((rt0.c1)==(rt0.c2))  WHEN (((rt0.c6, rt1.c1, rt0.c0, rt1.c1, rt0.c1))==((rt0.c4, rt0.c6, rt0.c1, rt1.c2, rt0.c4))) THEN CASE rt0.c2  WHEN rt0.c6 THEN rt0.c2 END END;SELECT ALL GROUP_CONCAT((((rt0.c2))==((x'')))) FROM rt1, rt0 WHERE (((((0.9258866648248685) IS FALSE)) ISNULL)); -- 0ms;
SELECT x'f516', CAST(rt0.c3 AS REAL), MIN(((rt1.c1) BETWEEN (rt0.c5) AND (rt0.c0))) FROM rt1;SELECT SUM(((rt0.c1) IS TRUE)), LAG(((LOWER(rt1.c1))/(TRIM(DISTINCT rt0.c6))), (- (NULL)), (((x'2254')) BETWEEN ((((rt0.c4)>(rt0.c4)))) AND ((((rt0.c1)>(NULL)))))) OVER (), (((((((rt0.c4, rt0.c5, rt0.c0))>=((rt1.c0, rt0.c3, rt0.c5))))OR((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))))AND((((-1205458404)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) FROM rt0, rt1 WHERE (('-1269013351' IN ())) GROUP BY (((rt1.c2)) NOT BETWEEN ((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)))) AND ((NULL))) HAVING (('xUqy\r_{.')LIKE((((rt0.c0, rt0.c2, '')) NOT BETWEEN ((rt1.c1, rt0.c6, rt1.c0)) AND ((rt0.c1, ']KTd', rt0.c4))))) LIMIT -1974140755 OFFSET 470516325; -- 0ms;
SELECT SUM(CASE WHEN rt0.c1 THEN 0.8391447337791753 ELSE rt1.c2 END) OVER ( GROUPS 0.702891603812341 PRECEDING EXCLUDE TIES), rt0.c2, UPPER(ABS(rt0.c1)) FROM rt1;SELECT ((((x'')<(rt0.c4)))IS NOT(CAST(rt0.c0 AS REAL))) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (TOTAL(rt0.c6))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (rt0.c1 IN (((x'')/('l|')), ((rt0.c6) ISNULL))) FROM rt1, rt0; -- 0ms;
SELECT ALL rt1.c2 FROM rt0 GROUP BY (rt0.c3 IN ()) HAVING (((CASE rt0.c6  WHEN 0.2630028364183987 THEN rt0.c4 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN rt1.c2 END, rt1.c1 COLLATE RTRIM, CASE rt0.c6  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c6 END))<=((((rt0.c1) IS TRUE), CASE WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c2 END, ((rt0.c1)*(rt1.c2))))) LIMIT -207694248 OFFSET 554208791;SELECT DISTINCT CASE WHEN CASE rt0.c4  WHEN '5(*KpTNr' THEN rt1.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c1 END THEN (rt0.c6 IN ()) END, FIRST_VALUE((((~ (rt1.c2)))>=(((rt1.c1)&(rt1.c1))))) OVER (), ((((rt0.c4) NOT NULL))&(((((rt0.c2)AND('1c')))AND(rt0.c2)))) FROM rt1 WHERE ((((CAST(x'' AS NUMERIC), ((0Xffffffffb163bcfd) NOT NULL), 0.8235434018620563))>((TRIM(-0.0), (0.26116224180402414 IN ()), CASE ''  WHEN NULL THEN x'4879' ELSE 0.7224688745596526 END)))) GROUP BY ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c4)))AND(((rt0.c4)||(rt0.c5)))))AND((((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND (('-510400370'))))), CAST(((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c4)))AND(rt1.c0)))AND(rt0.c5)) AS TEXT), CASE (rt1.c0 IN (rt1.c0, rt0.c2))  WHEN (((NULL))>((rt1.c0))) THEN NULL COLLATE NOCASE ELSE rt0.c5 END, rt0.c3, LOWER(rt0.c5 COLLATE RTRIM);SELECT ROW_NUMBER() OVER () FROM rt1, rt0 WHERE (CAST(((x'') IS FALSE) AS INTEGER)); -- 0ms;
SELECT DISTINCT MAX(((rt0.c3)==(rt0.c5))) FROM rt0 LIMIT 1193488398 OFFSET 721897459; -- 0ms;
SELECT GLOB(CAST(rt1.c1 AS INTEGER), TOTAL(rt1.c0)) FROM rt0 CROSS JOIN rt1 ON (((((rt1.c0, rt1.c0, rt1.c2))<=((rt0.c1, rt0.c1, rt0.c5))))LIKE(((rt0.c6) NOT BETWEEN ('470516325') AND (rt1.c0)))); -- 0ms;
SELECT DISTINCT ((SUBSTR(rt1.c2, rt0.c6)) IS TRUE) FROM rt1, rt0 WHERE ((((((NULL IN (x'', NULL)))AND(CASE '1709160378'  WHEN '' THEN x'' WHEN 1.932330702E9 THEN x'' WHEN 1.06432056E9 THEN '|R ⴳe-' END)))AND(((NULL) NOT BETWEEN (NULL) AND (-1459260566))))); -- 0ms;
SELECT ((('z1', rt1.c2, rt0.c6)) BETWEEN ((((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c2)), (- (rt0.c3)), CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 END)) AND ((NULL, CAST(rt0.c4 AS REAL), CASE WHEN 0Xffffffffb8453b98 THEN rt0.c2 ELSE rt1.c0 END))) FROM rt0 WHERE (ABS(DISTINCT ((((0.940756926941622)AND(NULL)))OR(0.9092304838523811))));SELECT CASE (rt0.c5 IN (rt0.c6))  WHEN ((rt0.c2)+(rt0.c3)) THEN (rt0.c0 IN ()) ELSE rt0.c3 END FROM rt0, rt1 LIMIT 539075793 OFFSET 767579749; -- 1ms;
SELECT DISTINCT CAST((((rt1.c0))<((rt0.c5))) AS INTEGER) FROM rt0 WHERE (NULLIF(((0.19836115228012918) BETWEEN (NULL) AND (-1949083696)), (((''))<(('7>Q[ẞf')))));SELECT ALL ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((+ ('1116549639'))) AND (((rt0.c6)+(rt0.c5)))), AVG(json_valid(rt0.c0)) OVER (), TOTAL((NOT (rt0.c2))), INSTR(0.14769691618298353, (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt1.c0)))), ((CHANGES()) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) FROM rt1, rt0 WHERE (UPPER(DISTINCT (('')IS(NULL)))) LIMIT 1378758812; -- 0ms;
SELECT DISTINCT AVG(CASE WHEN rt0.c6 THEN rt0.c1 ELSE rt1.c0 END) FROM rt1;SELECT CASE NULL  WHEN (((rt1.c1))<=((rt0.c4))) THEN NULL ELSE (NOT (rt0.c3)) END FROM rt1, rt0 NOT INDEXED; -- 0ms;
SELECT ((((((((((rt0.c5)==(rt1.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c4 END)))AND((rt0.c0 IN ()))))AND((rt0.c5 IN ()))))AND(((rt1.c2) NOT NULL))), CASE WHEN NULL THEN UNICODE(rt1.c0) ELSE rt0.c0 COLLATE RTRIM END, ((rt1.c1 IN ()) IN ()) FROM rt1;SELECT DISTINCT ((((rt1.c2) NOT NULL))OR((- (rt0.c2)))) FROM rt0, rt1; -- 0ms;
SELECT (((rt1.c2)%(rt0.c6)) IN ()) FROM rt1; -- 0ms;
SELECT ALL rt1.c0 FROM rt0, rt1 WHERE ((((0.9388442566537368 IN ()))IS NOT(0.4192123090116491))); -- 0ms;
SELECT LAG(((((NULL) IS FALSE))||(((rt0.c3) IS FALSE))), ((0.12922601180238935) NOT BETWEEN (0Xffffffff85a9ce8f) AND (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)))), (((rt0.c0) NOT NULL) IN (x''))) OVER (), CASE WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c1)>>(rt1.c2)) WHEN NULLIF(rt0.c1, rt0.c6) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END WHEN CAST(rt0.c6 AS INTEGER) THEN rt1.c1 WHEN '-157613439' THEN (~ (rt1.c0)) WHEN ((rt0.c6)IS NOT(x'')) THEN (+ (rt0.c2)) END, (((((rt0.c5, 0xffffffff98311d64, rt1.c0)) NOT BETWEEN ((rt1.c2, rt0.c1, rt0.c3)) AND ((rt0.c5, rt0.c3, rt0.c0))))<((rt1.c2 IN (rt0.c4)))) FROM rt1, rt0; -- 1ms;
SELECT ALL GROUP_CONCAT(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c6 END), DENSE_RANK() OVER (), (((((rt1.c1 IN (rt0.c3)))AND((NOT (NULL)))))AND(((rt0.c4)|(0.2780800004802858)))) FROM rt0 ORDER BY rt0.c5  NULLS LAST LIMIT 1095505716;SELECT DISTINCT CAST(((rt0.c4) IS TRUE) AS NUMERIC) FROM rt1, rt0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN CAST(0.7005041939916467 AS INTEGER) THEN DATETIME(-1531384888, '', 0.7419838573881646, x'', '-1550015846') ELSE CASE WHEN '-2035576833' THEN 'dp9yZ-d' END END); -- 0ms;
SELECT DISTINCT ((rt0.c5 COLLATE NOCASE) IS FALSE) FROM rt1 WHERE ((((x'', 0xffffffffbf3b0e03, 0.645352644349406))<=((NULL, 0.2431904215630909, 0.09612842451171688))) COLLATE BINARY);SELECT DISTINCT TOTAL(((rt0.c2)%(0X41e81d92))) OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (~ (((((rt0.c3)AND(rt0.c1)))AND(rt1.c2)))) FROM rt0, rt1 WHERE ((((((((x'42e6')) BETWEEN ((851843503)) AND ((1142721978))))OR(((x'')>>(x'')))))AND(CASE NULL  WHEN x'' THEN '-1205458404' WHEN 0xfffffffffb0ae475 THEN 0xffffffffef1dc4eb WHEN NULL THEN NULL ELSE NULL END))) GROUP BY ((rt0.c2) ISNULL) COLLATE NOCASE, CAST(CAST(rt1.c2 AS REAL) AS REAL), ((- (0.2892550811425133)) IN (((rt0.c0) IS TRUE), (('-435065312')>(rt0.c5)))) HAVING ((CAST(rt0.c6 AS TEXT))*(json_type(rt0.c3))); -- 0ms;
SELECT DISTINCT ((((0.06748653791442427) ISNULL))*(((rt0.c2) ISNULL))) FROM rt0, rt1 WHERE ((((('-1534412449', x'', x'')) BETWEEN (('-96044073', '1295649891', '')) AND ((NULL, x'789e', 0.9498309570126905))) IN ())) LIMIT 454722502 OFFSET -729740514; -- 0ms;
SELECT ALL CASE WHEN rt0.c3 THEN CAST(rt1.c0 AS INTEGER) ELSE (((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND (('-1568870318'))) END, x'' COLLATE RTRIM, ((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c0))) BETWEEN (((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))) AND (rt0.c1)) FROM rt0, rt1 WHERE ((+ (CAST('z\' AS REAL)))); -- 0ms;
SELECT ALL (((~ (rt1.c1))) BETWEEN (rt0.c4) AND (CAST('1400520819' AS TEXT))) FROM rt1 WHERE ((((CASE NULL  WHEN NULL THEN NULL ELSE x'' END))!=((((x'')<(9.02426463E8))))));SELECT DISTINCT ((- (rt0.c6)) IN ((('*]')GLOB(rt1.c1)))) FROM rt0;SELECT DISTINCT CAST(((((NULL)AND(rt0.c0)))OR(rt1.c2)) AS INTEGER) FROM rt0 WHERE (CAST(LTRIM(x'', -2066725268) AS INTEGER));SELECT DISTINCT rt0.c0 FROM rt0, rt1 WHERE (((((NOT ('''E,h(WA'))))<((((((x'')AND('-1913099899')))AND(948280760)))))); -- 0ms;
SELECT DISTINCT ABS(((((rt0.c5)AND(rt0.c4)))OR(rt0.c6))), CASE WHEN (('')*(rt1.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt1.c2)) END, ((CASE WHEN rt1.c0 THEN rt1.c2 END) NOTNULL) FROM rt0, rt1 WHERE (((CASE NULL  WHEN '542402697' THEN x'' ELSE NULL END)AND(((NULL) BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ALL '473420839' FROM rt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((CASE WHEN NULL THEN rt0.c0 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c2 THEN '-447139224' ELSE rt1.c2 END, rt0.c2, (~ (rt1.c2))))>((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c0)), ((rt0.c0) IS FALSE), CASE WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 ELSE rt0.c1 END))) FROM rt1 ORDER BY ' \' ASC  NULLS FIRST;SELECT ALL (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) FROM rt1, rt0; -- 0ms;
SELECT (rt0.c0 COLLATE BINARY IN ()), (((rt1.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c2)IS(rt0.c4))))), (((((rt0.c5, rt0.c5, rt0.c2))>((rt1.c0, rt0.c1, '')))) NOT BETWEEN (((rt0.c3)|(''))) AND ((- (rt0.c5)))) FROM rt1, rt0 WHERE (((((((NULL) BETWEEN (NULL) AND (0.7564073671601549)))AND(LIKELIHOOD(0.942958853299926, 0.08677062888482379))))AND((~ (0x35e77a8b))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)OR('833579075')) AS INTEGER) FROM rt1 NOT INDEXED, rt0 WHERE ((- ('Yu*&\n'))) ORDER BY ((((rt0.c0)AND((rt0.c2 IN (x'')))))AND(((rt0.c3)*(rt0.c0)))) DESC  NULLS FIRST, (((((rt0.c6, rt1.c2, rt1.c2)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c5)) AND ((rt0.c4, rt0.c1, rt0.c1))))==((rt1.c0 IN ()))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c0) ISNULL) THEN rt0.c6 WHEN CAST(rt0.c4 AS NUMERIC) THEN rt0.c3 COLLATE NOCASE WHEN (((rt0.c6))=((rt0.c6))) THEN SUM(8.05780328E8) WHEN rt1.c2 THEN rt0.c4 COLLATE BINARY WHEN ((rt0.c3) NOTNULL) THEN rt0.c6 COLLATE BINARY ELSE ((rt0.c1) IS FALSE) END, rt1.c1, ((CASE rt0.c5  WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c0 END)<<((rt1.c0 IN (rt0.c4)))) FROM rt0 ORDER BY CAST(rt0.c2 COLLATE NOCASE AS NUMERIC), (((rt1.c2, CAST(rt1.c1 AS BLOB), NULL COLLATE RTRIM))>((CASE WHEN rt1.c0 THEN rt0.c5 END, (((rt0.c3, rt0.c2, rt1.c1))<((rt1.c2, rt1.c1, rt1.c0))), rt0.c6))) ASC;SELECT ((((((rt0.c1)*(rt1.c1)))OR(((rt0.c6)AND(rt0.c5)))))OR(CASE WHEN rt0.c6 THEN 0.40707416816420594 WHEN x'' THEN rt1.c1 WHEN rt0.c2 THEN '2067172329' END)) FROM rt0, rt1 WHERE (((((((x'7adc')OR('-299697114')))AND(x'4b0c'))) NOT NULL)); -- 0ms;
SELECT ((0.010157229484738406) NOT NULL) FROM rt1; -- 0ms;
SELECT DISTINCT CAST((('')<(rt0.c2)) AS BLOB) FROM rt0, rt1; -- 0ms;
SELECT x'', (((- (rt0.c0)))LIKE(rt0.c5 COLLATE BINARY)), rt0.c0 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (rt0.c4 IN ()) COLLATE BINARY FROM rt0, rt1 WHERE (((('Xv')<<('1031451340')) IN (((0.05920340698373294) IS FALSE), ((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT (NOT ((((rt1.c2, rt0.c1, NULL)) NOT BETWEEN ((0.5059290960478774, rt1.c2, rt0.c2)) AND ((rt0.c2, rt1.c1, rt0.c2))))), ((rt1.c1)LIKE(((((((((((((rt0.c4)OR(rt0.c5)))AND('524093579')))AND(rt0.c5)))AND(rt1.c1)))OR(rt0.c2)))AND(rt0.c1)))), SUM((((rt1.c2))!=((0.7566806726968506)))) COLLATE RTRIM FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c0) NOT BETWEEN (rt0.c3) AND (rt1.c2)) THEN x'ba48' END, ((AVG(rt0.c3))GLOB(COUNT(rt0.c5))), CAST('1951162384' AS BLOB) FROM rt1;SELECT rt0.c6 FROM rt1;SELECT ALL '-1028731252' FROM rt0, rt1 WHERE ((((0Xffffffffc9809066 IN (x'')))!=((x'0ac9' IN ())))); -- 0ms;
SELECT ALL CAST(rt0.c0 AS INTEGER) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c6 IN ()) FROM rt1; -- 0ms;
SELECT (((rt1.c1) NOT NULL) IN ()) FROM rt0 WHERE ((x'' COLLATE NOCASE IN ())); -- 0ms;
SELECT ALL CASE ((rt1.c0) NOT BETWEEN (rt0.c3) AND (rt1.c2))  WHEN ((rt0.c5) IS TRUE) THEN CASE rt1.c2  WHEN rt0.c4 THEN 'b}JV' ELSE rt1.c2 END END FROM rt0 WHERE ((- (((NULL) NOT BETWEEN (NULL) AND (0.7864503047334309)))));SELECT DISTINCT ((((((rt1.c0)-(rt0.c6)))AND(NULL)))OR(NULL)), CASE CASE rt1.c1  WHEN NULL THEN rt0.c2 ELSE rt0.c0 END  WHEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN CASE WHEN rt0.c6 THEN rt1.c0 END END, COUNT(*) OVER () FROM rt0 WHERE (('-1193322684' IN ()));SELECT ALL GROUP_CONCAT(((rt0.c2)%(0.6166367849825357))) FROM rt1 WHERE (((((0X2e0240c)AND(NULL)))OR('-1924030581')) COLLATE BINARY) LIMIT -1550015846 OFFSET -1577230463;SELECT json(rt1.c0) COLLATE NOCASE, DATE(((rt0.c0) ISNULL), SUM(rt0.c3), (NOT (rt0.c3))), (+ (rt0.c4 COLLATE NOCASE)) FROM rt1 ORDER BY ((((rt1.c2)=(rt0.c4)))<<(CAST(rt1.c1 AS INTEGER))) ASC  NULLS FIRST;SELECT DISTINCT LEAD(rt0.c1 COLLATE RTRIM COLLATE BINARY, ((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE rt0.c1  WHEN rt0.c5 THEN rt1.c2 ELSE rt0.c4 END)))AND(CASE WHEN rt1.c2 THEN rt0.c6 END)), (((rt0.c6)IS(rt1.c2)) IN ())) OVER (), (((((~ ('-1257315798')))AND(AVG('468531294'))))OR((((rt1.c2, x'', rt0.c4))==((rt0.c6, rt0.c2, rt0.c0))))), ((((((rt1.c2)IS NOT(rt1.c2)))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))))AND(NULL)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT UPPER((rt0.c4 IN ())) FROM rt0 WHERE ((CAST('-997851560' AS NUMERIC) IN ())) GROUP BY rt1.c0 HAVING ((CASE WHEN NULL THEN x'' END)*(rt0.c1));SELECT DISTINCT CASE WHEN ((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3)) THEN rt0.c0 COLLATE BINARY ELSE ((((rt1.c0)AND(rt0.c0)))OR(rt0.c0)) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c2) IS FALSE)) BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c6, rt0.c6, rt0.c6))>=((rt0.c6, rt0.c2, rt0.c2))))) FROM rt0;SELECT ALL ((((((NULL)<<(rt0.c0)))AND(x'e1fe')))OR(((rt0.c4)*(rt0.c5)))) FROM rt1;SELECT ((((((((0.5936367782731116)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((((rt0.c3)OR(rt0.c3)))AND(rt1.c0))) AND ((- (rt1.c0)))) FROM rt1 ORDER BY (((rt1.c1, rt0.c4, rt1.c0, rt0.c3, 'Q}')) NOT BETWEEN ((((((rt0.c4)AND(rt1.c1)))OR(rt0.c0)), ((((rt0.c3)OR(rt0.c5)))OR(rt1.c2)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c2 END, ((((NULL)OR(rt1.c0)))AND(rt0.c0)), (((x'857ea48c', rt0.c4, rt0.c1, rt0.c3, rt1.c1))<=((rt0.c0, rt0.c0, rt1.c1, rt0.c6, rt1.c1))))) AND ((((rt0.c6)>>(rt1.c2)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c6 END, CAST(rt0.c4 AS REAL), (~ (rt1.c1)), highlight(-1.416726611E9, rt0.c6, rt0.c5, rt0.c1)))) ASC  NULLS FIRST, CAST(CAST(rt1.c1 AS INTEGER) AS REAL), (IFNULL(DISTINCT rt0.c0, rt1.c1) IN ());SELECT DISTINCT CASE ((NULL) BETWEEN (rt1.c2) AND (x'b8236232'))  WHEN (+ (rt1.c1)) THEN CAST(rt1.c1 AS TEXT) WHEN (((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c5))) THEN ((rt0.c1) NOT NULL) WHEN TOTAL(rt0.c5) THEN ((((rt0.c6)AND(rt1.c0)))AND(rt0.c2)) WHEN 1.293436415E9 THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END WHEN ((rt0.c6) IS TRUE) THEN (- (rt0.c6)) END, (((rt1.c2)) NOT BETWEEN ((((rt0.c6)IS NOT(rt1.c0)))) AND (((NOT (rt0.c2))))), x'' FROM rt1;SELECT DISTINCT CUME_DIST() OVER ( ORDER BY CAST(((rt0.c4)=(rt1.c0)) AS BLOB) DESC, (((rt1.c2 IN (rt0.c1, rt0.c6)))IS NOT(rt1.c2 COLLATE NOCASE)) DESC  NULLS LAST, (((~ (rt1.c2)))<=(((rt0.c1)LIKE(rt0.c2)))) ASC  NULLS FIRST) FROM rt0;SELECT ALL (((rt0.c1 COLLATE BINARY))>((((rt0.c4) IS FALSE)))), '166132430', GLOB((+ (rt0.c3)), rt0.c3 COLLATE RTRIM) FROM rt0 LIMIT 1226306; -- 0ms;
SELECT DISTINCT 0.2713291638995916 FROM rt1, rt0; -- 0ms;
SELECT COUNT((((rt1.c2, rt0.c4, rt1.c2))<=((rt0.c4, rt0.c5, rt0.c1)))) OVER () FROM rt1, rt0 GROUP BY CASE (NOT ('|ꐕ{Zia'))  WHEN ((rt1.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) WHEN CAST(rt0.c6 AS NUMERIC) THEN CASE rt0.c6  WHEN rt0.c6 THEN rt0.c2 WHEN 0Xffffffffa2f1d243 THEN rt0.c2 WHEN rt0.c4 THEN x'da3a' WHEN rt0.c2 THEN rt0.c3 WHEN x'3b11' THEN rt1.c1 END WHEN rt1.c0 THEN ((rt0.c5)IS NOT(rt0.c2)) WHEN 0.1640805497875698 THEN ((rt0.c2) ISNULL) WHEN ((rt1.c0) NOT NULL) THEN '-472624640' END HAVING (- (((rt0.c6) BETWEEN (rt0.c2) AND (rt1.c1)))); -- 1ms;
SELECT DISTINCT MAX((rt1.c0 IN (rt1.c1))), CAST((rt0.c3 IN ()) AS BLOB), ((((rt0.c1)<<(rt0.c3))) BETWEEN (rt1.c1) AND (('' IN ()))) FROM rt1, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (('5Cif*I')<>(AVG(rt0.c1))) FROM rt0, rt1 WHERE (((((((x'')OR(0.8372050672220811)))AND(NULL))) NOT BETWEEN ((('0.7202858747182488')*(''))) AND (CAST(NULL AS NUMERIC)))) ORDER BY (((rt1.c1) IS FALSE) IN ()); -- 0ms;
SELECT 0.44128125832042975, (((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE BINARY COLLATE RTRIM, CAST(rt0.c4 AS TEXT) COLLATE RTRIM FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((NULL IN ()))-(((rt0.c2)=(0xfffffffff7bc2f4f)))) FROM rt1, rt0 WHERE (UNLIKELY(CASE 0.2892550811425133  WHEN NULL THEN NULL END)); -- 0ms;
SELECT DISTINCT ((NULL)&(0.8616479626384629)), (((rt1.c1)) BETWEEN ((rt0.c4)) AND ((MIN(rt1.c1)))), ((rt1.c1) BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE BINARY FROM rt1 WHERE ((NOT (((((((((((((0.0)AND(NULL)))OR(0.5410394284970508)))AND('767579749')))AND(1932330702)))AND(-2.99697114E8)))AND('805780328')))));SELECT ((((((((((rt0.c4)==(rt0.c6)))OR((('-1684244345') NOT BETWEEN (rt0.c6) AND (rt0.c6)))))AND(rt0.c1 COLLATE BINARY)))AND(rt0.c5 COLLATE BINARY)))AND(QUOTE(2.2910313E8))), (((TRIM(DISTINCT rt0.c0)))<=((((rt1.c1) NOTNULL)))), ((((NULL) NOT NULL)) BETWEEN (-32126733) AND (((rt1.c2)+(rt0.c3)))) FROM rt1 LIMIT -676980291;SELECT ALL CAST(((rt0.c4) ISNULL) AS TEXT) FROM rt1 WHERE (CAST('F' AS REAL));SELECT DISTINCT '0.9365383351149459' FROM rt1 WHERE ((CAST(0.11936273387403062 AS INTEGER) IN ('-1933140357', (('-1696376731') NOT NULL)))); -- 0ms;
SELECT ALL ((((rt1.c0) NOT BETWEEN (0x2c3b1b4e) AND (rt0.c1)))/(rt0.c5 COLLATE BINARY)) FROM rt0;SELECT DISTINCT COUNT(*), (((((rt0.c4) IS TRUE), ((rt1.c1) IS TRUE), rt0.c0))>=(((rt0.c4 IN (rt0.c1)), ((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)), '-157613439'))), LEAD(((rt0.c6 COLLATE NOCASE)||(((rt0.c6) NOTNULL))), ((rt0.c6)-(rt0.c0 COLLATE BINARY)), ((((rt0.c1)%(0.5155846650006655)))%(rt0.c2 COLLATE NOCASE))) OVER ( ORDER BY CASE ((rt0.c6)>=(rt0.c4))  WHEN ((rt0.c4) IS TRUE) THEN NULL ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c6)) END DESC) FROM rt1, rt0 WHERE (CASE 0.2078819608533916  WHEN '-2146337206' THEN '1409689152' COLLATE NOCASE WHEN '-247766688' THEN (((('TWGFLT')OR('抡')))AND('EHQ쉼')) WHEN (((x''))<>(('Cﳥ'))) THEN CASE WHEN '' THEN '0.6030555446841928' WHEN 0.29213793796301557 THEN 0xffffffffecc2e6c5 WHEN NULL THEN 0.976972776277918 END ELSE 0.7927426671739971 END) ORDER BY (((((rt0.c4, rt1.c2, rt0.c3)) BETWEEN ((rt0.c5, rt0.c2, rt0.c0)) AND ((rt0.c6, rt1.c1, rt0.c3))))*(rt0.c1 COLLATE RTRIM)); -- 0ms;
SELECT ((((((x'', rt0.c4, 'kY#I[3')) NOT BETWEEN ((rt0.c0, rt0.c5, rt0.c1)) AND ((rt0.c2, rt0.c1, rt1.c0))), (~ (rt0.c3)), ((rt0.c5) NOTNULL)))==((rt0.c1, rt1.c2 COLLATE BINARY, CAST(1436713980 AS REAL)))), ((rt1.c0)>>(CAST(rt0.c2 AS NUMERIC))), (((+ (rt0.c2))) NOT BETWEEN (((((rt0.c4)AND(rt0.c1)))OR(''))) AND (rt0.c0)) FROM rt1 GROUP BY ((((((((rt0.c0)AND(rt0.c6)))OR(rt1.c1)))AND(rt0.c1 COLLATE BINARY)))OR(((NULL)>>(rt1.c2)))) ORDER BY rt1.c1 DESC  NULLS FIRST;SELECT DISTINCT COUNT(*), rt0.c2, (((rt0.c3 IN (0.06335483428110122))) IS FALSE) FROM rt0, rt1 WHERE (CASE x''  WHEN TRIM(x'') THEN -1.782898381E9 WHEN '977312380' THEN ((-374135675)>('')) WHEN CASE NULL  WHEN -595028561 THEN 0.6437623660318356 WHEN NULL THEN -2.075475122E9 WHEN '' THEN '頿b0' ELSE 0.12432410874824973 END THEN (NOT (NULL)) END); -- 0ms;
SELECT ALL (- ((x'' IN ('iG')))) FROM rt1, rt0 ORDER BY (((UNLIKELY(DISTINCT rt0.c3), '0.32266571073256156' COLLATE RTRIM, CASE WHEN rt0.c1 THEN rt0.c4 WHEN 0.21842092918700973 THEN x'' WHEN rt0.c5 THEN rt1.c1 ELSE rt0.c3 END))<((rt0.c0, ((rt0.c3)=(rt0.c3)), ((rt0.c3) IS FALSE)))) DESC; -- 0ms;
SELECT (((rt1.c1 IN ()))/(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)))), (((rt1.c0)) NOT BETWEEN (((('1095909478')&(rt0.c6)))) AND (((((0.48767426606215947)) BETWEEN ((rt0.c4)) AND ((rt0.c6)))))), CASE WHEN NULL THEN ((rt0.c6)<>(rt0.c5)) END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c2, CASE WHEN '' THEN UPPER(x'01f2') ELSE x'' END, LAST_VALUE(0.3486173473791767) OVER () FROM rt1 WHERE (TYPEOF((x'' IN ()))); -- 0ms;
SELECT CASE '壈''p'  WHEN rt1.c1 THEN rt1.c1 END COLLATE NOCASE, rt0.c4, 0.6959264954571164 FROM rt0 ORDER BY ((((((')q') IS FALSE))AND((~ (rt0.c2)))))AND((rt1.c1 IN ()))) LIMIT 463285499 OFFSET -2046566727;SELECT DISTINCT ((NULL)<=((((rt0.c2))>((rt0.c5))))) FROM rt1 WHERE (((('&\r/p' IN ()))&(NULLIF(DISTINCT 0.4034368491040329, x'2ed8'))));SELECT ((CAST(rt0.c3 AS NUMERIC))GLOB(CAST(rt0.c4 AS REAL))) FROM rt0, rt1; -- 0ms;
SELECT ((((((((rt0.c2)OR(rt0.c0)))OR(x'1202')))AND((~ (rt1.c1)))))AND(rt0.c6 COLLATE NOCASE)), rt0.c4, CAST((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c4))) AS TEXT) FROM rt1, rt0 WHERE ((((((NULL IN ()))OR(((x'') NOTNULL))))AND((('~x') BETWEEN (-436267055) AND (NULL))))) LIMIT -1542466744; -- 0ms;
SELECT DISTINCT (+ (((rt0.c6)==(rt0.c0)))) FROM rt1 WHERE (((((NULL)+(-283288397))) NOT BETWEEN (('ve' IN ())) AND (((NULL)+('-903930119'))))) ORDER BY (NOT (rt0.c5)) ASC, NULL COLLATE NOCASE;SELECT DISTINCT ((('{}', ((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)), ((rt0.c6) IS TRUE)))<(((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c5))), TRIM(rt0.c4, x'6164'), PRINTF(rt1.c0)))) FROM rt1;SELECT DISTINCT LAST_VALUE(CASE (rt1.c2 IN (rt1.c0, rt1.c0))  WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)) THEN ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)) WHEN (((NULL)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) WHEN CAST(rt1.c1 AS NUMERIC) THEN ((rt1.c2)>>(rt1.c1)) WHEN (rt1.c0 IN ()) THEN 0.20630676637682288 WHEN ((rt1.c0) NOT NULL) THEN (((rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c1, NULL, rt1.c1))) END) OVER (), (((rt1.c0)>=(rt0.c4)) IN (((((((((rt0.c4)AND(rt0.c0)))OR(0.27273479376633825)))OR(rt0.c3)))AND(rt0.c0)))), ((((((((x'd4f1' COLLATE NOCASE)AND(((rt1.c2) NOT NULL))))AND(CASE 0.05645243253770982  WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c5 END)))OR((rt0.c0 IN ()))))AND((rt0.c1 IN ()))) FROM rt1 LIMIT 1835157612 OFFSET 2080374833;SELECT DISTINCT COUNT(GROUP_CONCAT((- (rt0.c3)))) FROM rt1 WHERE (CAST((~ (NULL)) AS BLOB)) ORDER BY TYPEOF(rt0.c4);SELECT (((CASE rt1.c0  WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c0 END, CASE WHEN rt0.c5 THEN rt1.c2 END, CAST(rt1.c1 AS REAL), CAST(rt1.c0 AS REAL), ((rt0.c6) BETWEEN (rt0.c6) AND (rt1.c1))))<=((UNLIKELY(DISTINCT rt0.c1), CAST(rt1.c0 AS INTEGER), LIKELY(rt0.c2), rt1.c2 COLLATE RTRIM, rt0.c5))) FROM rt0, rt1 LIMIT -1727731574; -- 1ms;
SELECT DISTINCT ((rt0.c1)!=(rt0.c1)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt1.c0)=(rt1.c0)) AS TEXT) FROM rt0 CROSS JOIN rt1 ON (((~ (rt0.c4))) BETWEEN ((('xg') BETWEEN (4.60733892E8) AND (rt1.c0))) AND (((rt0.c3)=(rt0.c6)))) WHERE (UPPER(((NULL) NOT BETWEEN (x'bc63ec33') AND ('1653776270')))); -- 0ms;
SELECT DISTINCT (((rt0.c6)) NOT BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((0.39217932410308787))) FROM rt0, rt1 WHERE ((- (CASE x''  WHEN '-978850693' THEN '' WHEN 'CwcAsx' THEN '6Fj' WHEN x'9ecd' THEN 0.8061301279386525 WHEN 'iQ' THEN NULL WHEN 0X5dab6fbe THEN NULL END))) GROUP BY ((rt1.c1 COLLATE NOCASE)-(((rt1.c0)==(rt0.c2)))) HAVING MAX((rt0.c0 IN ())); -- 0ms;
SELECT rt0.c1 FROM rt0 WHERE ((((((('d')>=(NULL)))OR(((x'21e55485') ISNULL))))AND((NOT (0.14523702362625335))))) ORDER BY (+ ((NOT (0.9303120462221705)))), ((('1438107170'))>((((rt0.c5)|(rt0.c0)))))  NULLS LAST; -- 1ms;
SELECT IFNULL(rt0.c0, rt0.c6), '-898088476' COLLATE BINARY, (((rt0.c3 IN ())) BETWEEN (((((x'')OR(rt1.c1)))AND(rt0.c4))) AND (rt1.c1)) FROM rt0;SELECT DISTINCT (((rt0.c4)) BETWEEN ((((rt0.c4)>(rt1.c0)))) AND ((MIN(rt0.c2)))) FROM rt0;SELECT DISTINCT rt1.c1, ((((rt0.c1)*(rt0.c4))) IS FALSE), (((rt0.c5 IN ())) IS TRUE) FROM rt1, rt0 WHERE (CAST(CAST(x'' AS BLOB) AS BLOB)); -- 0ms;
SELECT DISTINCT ((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE NOCASE, COUNT(CAST(x'' AS NUMERIC)), COUNT(*) OVER () FROM rt0;SELECT ALL 0.21421142502837887 FROM rt0 LIMIT -735644596; -- 0ms;
SELECT DISTINCT '0.7836227244744579' FROM rt1, rt0 GROUP BY ABS(DISTINCT ((rt1.c0)>(rt0.c4))), rt0.c1 COLLATE NOCASE COLLATE BINARY COLLATE BINARY, (((((NOT (rt0.c2)))AND(((rt1.c0)||(rt1.c0)))))AND(HEX(DISTINCT rt0.c4))) HAVING ((+ (rt0.c6)) IN ()); -- 0ms;
SELECT ALL rt1.c0, (NOT (((rt1.c2)>(rt1.c0)))), CASE WHEN rt0.c6 COLLATE RTRIM THEN ((rt1.c1)IS(rt0.c5)) END FROM rt0, rt1; -- 0ms;
SELECT AVG('186''i') OVER (), AVG(NULL), ((CAST(rt0.c2 AS TEXT))>=(rt0.c3)) FROM rt0 WHERE (((((load_extension(NULL))OR(CAST(']1*' AS TEXT))))OR((('5i!') NOT BETWEEN ('') AND (NULL))))) LIMIT -1368133265;SELECT (NOT (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c6)))) FROM rt1 GROUP BY (0.7242082647171755 IN ());SELECT DISTINCT MAX(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt1.c1))) FROM rt0, rt1 WHERE (CAST('' AS REAL) COLLATE RTRIM); -- 0ms;
SELECT ALL rt0.c2 FROM rt1, rt0 WHERE (((((((x'', '1502619082', 0x680cf987)) NOT BETWEEN ((0.9563505979759368, 0.471417752084754, '1896130564')) AND ((x'', '166132430', x'')))))>((3.39437271E8 COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((x'') IS FALSE) COLLATE RTRIM FROM rt0 WHERE (((((514217866 COLLATE RTRIM)AND(CASE WHEN '' THEN NULL ELSE x'00e6' END)))AND((((NULL)) NOT BETWEEN ((NULL)) AND ((-1447842920)))))); -- 0ms;
SELECT ('0.8328041177910912' IN ()) FROM rt0, rt1; -- 0ms;
SELECT (((- (rt0.c5))) IS FALSE) FROM rt0 LEFT OUTER JOIN rt1 ON (NOT (((((x'')OR(rt1.c1)))AND(rt0.c1)))); -- 0ms;
SELECT ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt1.c2 COLLATE RTRIM)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS NUMERIC)) BETWEEN (rt1.c1 COLLATE RTRIM) AND (rt1.c1 COLLATE RTRIM)) FROM rt0, rt1 WHERE (CAST(0x5604f236 AS TEXT)); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c4)))AND(rt0.c5))) BETWEEN (rt0.c6) AND (MIN(rt1.c0))) FROM rt0, rt1 LIMIT -1086946924 OFFSET 551090631; -- 0ms;
SELECT DISTINCT ((((NOT (rt0.c1)), x'5bc4', CAST(rt0.c0 AS REAL)))<((SUM(rt0.c1), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), highlight(rt0.c0, rt0.c6, rt0.c6, rt0.c3)))) FROM rt1, rt0 EXCEPT SELECT AVG(((rt1.c0) NOT NULL)) FROM rt1 WHERE (((CAST(x'd9e9' AS NUMERIC))<=((((NULL, 'twgFlT', x'')) NOT BETWEEN ((852709537, -1290717248, '186''i')) AND (('Mt', NULL, NULL)))))); -- 0ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((TYPEOF(rt0.c1))) AND ((json_quote(rt0.c3)))) FROM rt1;SELECT ALL (+ (((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt1 WHERE ((((1.709160378E9 IN (x''))) IS TRUE));SELECT ALL ((((((rt1.c1)>>(rt0.c1)))AND(GROUP_CONCAT(rt0.c4))))OR((- (rt0.c5)))), COUNT(*), ((rt0.c3)&((((rt0.c4, rt0.c6, rt0.c5))<=((rt1.c0, rt0.c5, rt1.c1))))) FROM rt1;SELECT DISTINCT CASE ((rt1.c1)%(rt1.c2))  WHEN (1.951162384E9 IN ()) THEN ((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c5)) WHEN AVG(rt0.c5) THEN CASE rt1.c2  WHEN rt0.c0 THEN rt0.c3 END WHEN ((rt0.c0)<=(rt0.c5)) THEN LOWER(rt0.c3) END FROM rt1 LIMIT -422776166 OFFSET -151214180;SELECT ALL (- ((- (rt0.c0)))), (((rt0.c6))<=((((rt0.c5) IS FALSE)))), (((0.30746434254495403)) BETWEEN ((((rt1.c1)LIKE(rt1.c2)))) AND ((((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c1))))) FROM rt0 WHERE ((((((')vNVaw') BETWEEN (NULL) AND (1.409515683E9))))<>((((x'') BETWEEN (0X4aca506) AND (0X6715797d))))));SELECT ALL (NOT (HEX(DISTINCT rt1.c2))), (NOT ((NOT (0Xffffffff91cc5d69)))), LEAD(rt0.c3, (((rt0.c3 IN ())) NOT BETWEEN (COALESCE(rt0.c1, rt1.c0)) AND (((((((((rt1.c2)OR(rt0.c5)))OR(rt0.c3)))OR(0.7561766955123501)))AND(rt0.c4)))), CASE WHEN ((((x'')OR(rt1.c1)))AND(x'9f629824')) THEN (rt0.c2 IN ()) ELSE TYPEOF(DISTINCT rt1.c1) END) OVER ( ORDER BY ((CAST(rt1.c2 AS INTEGER)) ISNULL) DESC, (CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c4 WHEN rt0.c6 THEN rt1.c0 ELSE rt0.c1 END IN ((rt0.c3 IN (rt1.c2)))) ASC  NULLS FIRST) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1; -- 0ms;
SELECT ((rt1.c2)OR(((rt0.c0)<<(rt1.c1)))), (('C0W' COLLATE RTRIM) NOT BETWEEN (rt0.c5 COLLATE NOCASE) AND ((rt0.c1 IN ()))), rt0.c4 FROM rt0 LIMIT 906883233;SELECT ALL (((rt1.c0 IN ())) NOT NULL), ((CAST(rt0.c6 AS REAL))LIKE(((rt1.c1)GLOB(rt0.c5)))), rt0.c0, ((COUNT(*))+('	c?cqhf')), CASE ((rt0.c5) ISNULL)  WHEN rt0.c3 THEN (NOT (rt0.c4)) END FROM rt1;SELECT DISTINCT CAST((((rt0.c4))!=((rt0.c0))) AS NUMERIC), NTH_VALUE(NULL, NULL) OVER (), ((x'' COLLATE BINARY)LIKE(((rt0.c2) NOT BETWEEN (rt0.c5) AND ('0.6028229393146931')))) FROM rt1 NATURAL JOIN rt0 WHERE ((((~ ('-296718182')))=(highlight('935899324', NULL, NULL, 0.1520159137518574))));SELECT (((('a>ᅲ(Dl')OR(ABS(DISTINCT rt1.c0))))OR(NULL)) FROM rt0, rt1; -- 0ms;
SELECT ALL ((((rt0.c3) IS TRUE)) NOT NULL) FROM rt0 GROUP BY ((0.737775727090201)AND(((rt1.c1)/(rt1.c2)))), ((((((rt0.c6)LIKE(rt0.c4)))AND(CAST(rt0.c2 AS TEXT))))OR(((rt0.c6)-(rt0.c4)))), ((((rt0.c4)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))) IN ((((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((rt1.c0, rt0.c0, rt0.c5)) AND ((rt1.c0, rt0.c1, rt0.c3))))), (((('z1')AND(((((((((((((NULL)AND(NULL)))AND(rt1.c0)))AND('1235750485')))OR(rt0.c1)))OR(rt1.c2)))OR(rt1.c0)))))AND(NULL COLLATE NOCASE)), ((((rt0.c2 IN ()), ((rt1.c0)IS(rt1.c1)), ((((((((rt0.c2)AND(rt0.c4)))OR(rt1.c1)))OR(rt1.c2)))AND(rt0.c2))))>=(((((0.08128335785877339)) BETWEEN ((rt0.c5)) AND ((rt0.c0))), (((rt0.c4))>=((rt0.c4))), ((((rt1.c0)OR(rt0.c1)))AND(rt1.c0))))) HAVING (((- (rt0.c4))) BETWEEN (rt0.c6) AND (((((rt0.c1)AND(rt1.c2)))OR(rt1.c2))));SELECT DISTINCT CASE WHEN MIN(rt1.c0) THEN ((0.7924961807287442) NOT BETWEEN (rt0.c4) AND (rt1.c2)) ELSE CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c3 END END FROM rt0, rt1 WHERE (('' IN ()) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c4, (NOT (((rt0.c5) BETWEEN (rt1.c1) AND (rt0.c4)))), ((((rt0.c3 COLLATE NOCASE)OR((rt0.c5 IN ()))))OR(((NULL) IS TRUE))) FROM rt1, rt0 WHERE ((~ (x'')) COLLATE NOCASE); -- 0ms;
SELECT (- ((+ (0.7645341915542244)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((-654546005)OR(rt1.c1 COLLATE RTRIM)))AND(rt0.c1 COLLATE BINARY)) FROM rt1, rt0 WHERE ((((((('805780328')AND(NULL)))AND(1293436415)))>=((('') ISNULL)))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS INTEGER))IS((+ (rt0.c5)))) FROM rt1;SELECT DISTINCT ((((((((((((rt0.c5)OR(rt0.c0)))OR(rt0.c6)))OR(((((x'588b')AND(rt0.c3)))OR(rt0.c4)))))AND(MAX(rt0.c0))))AND(((rt0.c4)LIKE(rt1.c0)))))OR(CASE rt0.c0  WHEN rt1.c2 THEN x'' ELSE rt1.c1 END)) FROM rt1, rt0 WHERE (((0xffffffff95bb2133) NOT BETWEEN ((((NULL)) BETWEEN (('-1204935907')) AND ((-1.974140755E9)))) AND ((((0.7808254019932436)) BETWEEN ((0.1769816561469436)) AND ((x'ccb3')))))); -- 0ms;
SELECT TRIM(DISTINCT x'ac94') FROM rt1, rt0 LIMIT 602122081 OFFSET -1012202729; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c6 THEN rt0.c3 ELSE rt1.c0 END COLLATE RTRIM COLLATE RTRIM FROM rt1 WHERE (((((((0.534186294442866)OR('YziW')))OR('xs*cyQ}')))=(CASE x''  WHEN NULL THEN -1974140755 WHEN 'p\r-8h' THEN '1052467385' WHEN '&옭' THEN '' END)));SELECT ALL (((rt0.c2, rt0.c0, rt0.c6)) NOT BETWEEN ((((rt1.c1) ISNULL), rt0.c0 COLLATE BINARY, (((rt0.c6))<=((rt0.c4))))) AND ((TRIM(DISTINCT rt0.c0), rt0.c4 COLLATE RTRIM, ((((NULL)AND(rt1.c1)))OR(rt0.c6))))) FROM rt1, rt0 WHERE ((+ (json_patch(0.15027967939807518, 0.7750463124754325)))) GROUP BY CASE WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN CASE WHEN rt1.c1 THEN NULL ELSE rt1.c1 END WHEN ((rt0.c2)<(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c5)))AND(rt1.c1)) END HAVING rt1.c1; -- 1ms;
SELECT ALL ROW_NUMBER() OVER (), NULL, rt0.c5, (((((rt0.c6))<((rt1.c0))))%(GROUP_CONCAT(rt0.c6))), ((CAST('173858719' AS NUMERIC)) NOTNULL) FROM rt1 GROUP BY NULL COLLATE NOCASE HAVING rt1.c0 LIMIT -157090139;SELECT ALL TOTAL(((rt1.c1)IS(rt1.c1))) OVER () FROM rt1 WHERE (((((x'')AND(''))) BETWEEN (((x'')-(0.656139704844252))) AND ((~ (-1.7976931348623157E308))))); -- 0ms;
SELECT DISTINCT MIN(((((rt0.c1)OR(rt0.c3)))AND(rt0.c1))), (((((rt1.c1) NOT BETWEEN (rt0.c6) AND (rt0.c1))))>((((rt0.c2)=(rt0.c2))))), json_insert(rt0.c6, rt0.c5, rt1.c1) COLLATE NOCASE, CAST((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) AS INTEGER), GROUP_CONCAT(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))) OVER () FROM rt1 WHERE (CASE WHEN ((x'cf20') NOT BETWEEN (0.5301408764986786) AND (NULL)) THEN CAST(x'' AS INTEGER) WHEN (-1001264773 IN ('0.8209824564335498', '1898257456')) THEN (x'' IN ()) WHEN ((0.8196750813663558) ISNULL) THEN ('1245222655' IN ()) ELSE (+ (0.058785476746657794)) END) ORDER BY ((((rt0.c0)-(rt1.c1)))<<('-1388932816')), CASE WHEN ((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c2)) THEN ((rt0.c5)>>(rt0.c5)) END DESC;SELECT CAST(rt1.c2 AS BLOB) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT rt0.c0, ((rt0.c1 IN ()) IN (((rt0.c2) ISNULL), CAST(rt0.c1 AS BLOB))), (NOT (CAST(rt1.c1 AS BLOB))) FROM rt1, rt0 WHERE ((~ (CASE NULL  WHEN -838746027 THEN 'sR㸰O\' WHEN -1.44784292E9 THEN -892831387 WHEN x'' THEN NULL ELSE 0.7058724951654008 END))) ORDER BY (+ (CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 ELSE rt1.c2 END))  NULLS FIRST, (((rt0.c6)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c5))))), (~ (((rt0.c1) IS TRUE))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((COUNT(rt1.c0))/(((((rt0.c0)OR(rt0.c4)))OR(rt1.c2)))), ((MIN(rt0.c3)) IS TRUE), (((rt0.c0 IN ()))GLOB(((rt0.c0) BETWEEN (x'') AND (rt0.c3)))) FROM rt0, rt1 WHERE (((0Xffffffffe1649607)|(0.9427146223247265)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1, rt0 WHERE (((((((0.7325917663276226)==('')))OR((('Y2')<>(101228057)))))OR((((0.991003199182098)) BETWEEN (('')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT CAST(rt1.c1 COLLATE BINARY AS TEXT) FROM rt0 WHERE ((((('77092611')LIKE(NULL))) IS FALSE));SELECT DISTINCT ((((rt0.c2) BETWEEN (rt1.c1) AND (0xffffffffcd623f88)))/(((rt0.c5) BETWEEN (rt0.c6) AND (rt0.c5)))), rt0.c3, CASE WHEN rt0.c2 COLLATE RTRIM THEN 362872432 COLLATE RTRIM ELSE CAST(rt0.c4 AS INTEGER) END FROM rt0 WHERE (CASE ((0.32588788544868086)OR('-570753323'))  WHEN (NOT (0.6028753501076938)) THEN ((0xffffffff9ff9ca9e) NOT NULL) ELSE ((NULL) IS TRUE) END);SELECT ALL ((('_oL') NOTNULL) IN (rt1.c1 COLLATE BINARY)), CASE WHEN 0xffffffffa4939093 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt1.c0 ELSE 0.3006122034662654 END COLLATE BINARY, COUNT(*) OVER ( ORDER BY (((rt1.c1, rt0.c0, rt0.c2))>=((rt0.c4, rt0.c4, rt0.c4))) COLLATE NOCASE DESC  NULLS FIRST) FROM rt0 WHERE (CASE HEX(-1913099899)  WHEN x'' COLLATE RTRIM THEN ((0.018481633518594887) BETWEEN ('-1967569377') AND (0X51eb59ec)) ELSE NULL END);SELECT ALL AVG(rt0.c1) OVER () FROM rt1, rt0; -- 0ms;
SELECT ']r', ((((((((((rt1.c1) BETWEEN (rt1.c0) AND (x'11a5')))AND(rt1.c2)))AND(((rt0.c3)<(rt1.c2)))))AND(LTRIM(0X143b66d7))))AND((('1987419729')==(rt0.c2)))), (rt0.c4 COLLATE RTRIM IN ()) FROM rt1, rt0 WHERE (((((((('473420839')AND(3.79295738E8)))OR(x''))))<(('*eM''8)r' COLLATE RTRIM)))); -- 0ms;
SELECT ALL ((((((NULL)OR(rt0.c1)))OR(rt0.c4))) ISNULL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c6) BETWEEN ('0.18399043350979527') AND (rt0.c6)))IS(rt0.c4 COLLATE RTRIM)) FROM rt1, rt0 GROUP BY -1.262383606E9, (x'' IN ()), (((((((((((x''))<=((rt1.c1))))AND(((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))))OR(TRIM(rt1.c1))))OR(0.4846038810759944)))OR(((((rt0.c0)OR(rt1.c2)))OR(rt0.c3)))), (((NULL IN (rt0.c6, rt0.c4))) NOTNULL), ((((json_quote(rt0.c0))AND(CASE rt1.c2  WHEN rt0.c6 THEN rt1.c1 END)))OR(((rt1.c0)IS(NULL)))); -- 0ms;
SELECT ALL ((((((rt1.c2)OR(rt0.c0)))AND(rt0.c4))) BETWEEN (((rt0.c4) NOTNULL)) AND (CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)), NULLIF(0.49389209187330974 COLLATE RTRIM, rt1.c2), ((SQLITE_SOURCE_ID())+(rt0.c0)), ((((load_extension(rt1.c1, rt0.c5))OR(AVG(rt1.c0))))OR(((rt1.c0)==(rt0.c4)))), NULL COLLATE RTRIM FROM rt0 WHERE (IFNULL(DISTINCT ((0.48529449913567546)|('7l<	')), ((NULL) BETWEEN ('454722502') AND (0.17847441918166185))));SELECT ALL (((((rt0.c5) NOT BETWEEN (rt0.c6) AND (rt0.c4))))>(((+ (rt1.c0))))), ((((AVG(rt1.c2))OR(SUM(rt1.c0))))AND(((rt0.c4) NOTNULL))), AVG(((rt0.c5) BETWEEN (rt1.c0) AND (rt1.c2))) OVER () FROM rt1, rt0; -- 0ms;
SELECT CASE (rt0.c6 IN ())  WHEN (~ (rt0.c4)) THEN ((rt0.c3) NOTNULL) WHEN CAST(rt1.c0 AS REAL) THEN GROUP_CONCAT(rt0.c2) WHEN ((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c3)) THEN (- (rt0.c6)) END FROM rt1 WHERE ((TOTAL_CHANGES() IN ()));SELECT ((((NOT (rt1.c1))))>(((rt1.c0 IN ())))) FROM rt0 WHERE (((((0.691727179449202)>=('')))-(CAST(x'' AS TEXT))));SELECT ALL ((((0.9464276865431561) NOT NULL)) ISNULL) FROM rt1 WHERE (CAST(((NULL) IS TRUE) AS BLOB)); -- 0ms;
SELECT ((rt0.c4)<=(rt1.c2 COLLATE RTRIM)) FROM rt1;SELECT ((CASE rt0.c5  WHEN x'' THEN rt0.c6 WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt0.c1))) AND (rt0.c2)) FROM rt0 WHERE ((((NULL)) BETWEEN ((NULL)) AND ((NULL))) COLLATE BINARY) ORDER BY x'' ASC;SELECT (((((((((((((x'' IN ()))OR(CAST(rt0.c2 AS NUMERIC))))OR(MIN(rt0.c1))))AND(((rt0.c6) NOT BETWEEN (rt0.c3) AND (rt1.c2)))))OR(1619531843)))OR(rt1.c1 COLLATE BINARY)))OR(LIKELIHOOD(rt1.c0, 0.9456973116072862))) FROM rt1, rt0 WHERE (((NOT ('')) IN ((('觀%') ISNULL)))) ORDER BY ((rt0.c3) BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5))) AND ((~ (rt1.c2)))) ASC  NULLS LAST; -- 0ms;
SELECT ((((rt0.c3) IS FALSE)) ISNULL), (~ ((- (rt0.c1)))), ((((((rt0.c6)>>(rt0.c0)))OR(((((rt1.c0)OR(rt0.c1)))OR(rt1.c2)))))OR(CASE WHEN rt0.c5 THEN rt1.c0 END)) FROM rt1 WHERE (((((x'') BETWEEN ('') AND ('1018272421'))) ISNULL));SELECT (NOT (COUNT(rt1.c1))) FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c3 COLLATE BINARY) OVER ( ORDER BY (- (((((((((rt0.c0)OR(rt0.c6)))AND(NULL)))AND(rt0.c0)))OR(rt0.c0)))), ((NULL)>=(((((((((rt0.c0)OR(rt0.c6)))OR(rt0.c2)))OR(rt1.c2)))OR(rt0.c0))))), AVG(((rt1.c1)/(rt0.c5))) OVER (), ((SQLITE_SOURCE_ID())>=(((rt0.c0)AND(rt1.c2)))), CAST(((rt0.c4) ISNULL) AS INTEGER), ((NOT (rt1.c0)) IN ()) FROM rt0, rt1 WHERE (NULL); -- 0ms;
SELECT CASE rt0.c3  WHEN rt0.c2 THEN 0.5300064536153501 END COLLATE RTRIM FROM rt0 WHERE (CAST((((('-400980439')OR('456135483')))AND(-936537041)) AS BLOB)) GROUP BY CAST((- (rt0.c4)) AS INTEGER); -- 0ms;
SELECT ALL CASE ((x'') NOT BETWEEN (rt1.c1) AND (rt0.c0))  WHEN (0.4357823507765266 IN (rt0.c5, rt0.c6)) THEN ((rt1.c2)|(rt0.c1)) END FROM rt0, rt1 WHERE (CASE WHEN CASE WHEN x'' THEN NULL WHEN '' THEN 0.7001522052246111 WHEN x'' THEN '229103130' END THEN x'' ELSE MIN(x'', '-595028561') END) GROUP BY rt0.c1, '0.006053211110447321', ((((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c2))) IS TRUE) HAVING ABS(((rt0.c4) BETWEEN (5.42402697E8) AND ('-131710776'))); -- 0ms;
SELECT MIN(TOTAL((rt0.c1 IN ()))), ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 ELSE NULL END)IS NOT(((rt0.c1)!=(rt0.c0)))), rt0.c6 COLLATE BINARY FROM rt0, rt1;SELECT DISTINCT ((((((rt0.c3)IS(rt0.c4)))OR(COUNT(rt1.c0))))OR(UNLIKELY(DISTINCT 0.4920606255537403))) FROM rt0, rt1 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((((((rt0.c6)AND(rt0.c1)))OR(1502555639)))) AND (((rt0.c0 IN ())))), ((((((((rt1.c2)AND(((rt1.c1)LIKE(rt0.c3)))))AND(CASE WHEN rt1.c2 THEN rt0.c0 END)))AND(CAST(rt1.c1 AS NUMERIC))))OR(((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c0)))), (NOT (((rt0.c3) ISNULL))) FROM rt1, rt0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0, rt1 GROUP BY (((rt0.c0)) NOT BETWEEN ((NULLIF(DISTINCT rt0.c4, rt0.c0))) AND (((((rt1.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c2)))))) HAVING (((((rt0.c5, rt0.c3, rt0.c2)) NOT BETWEEN ((rt1.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c4, rt1.c0)))) IS TRUE); -- 1ms;
SELECT DISTINCT UNLIKELY(DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND (('0.0')))), (NOT (((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c2)))), TOTAL_CHANGES() FROM rt1, rt0 WHERE (CAST(CASE '-1974140755'  WHEN x'' THEN '567032698' WHEN 0.3625260836530384 THEN '0.946166539197345' WHEN -1.44784292E9 THEN 0.7202858747182488 WHEN 1.268027783E9 THEN NULL WHEN '' THEN '546210826' ELSE -1082036901 END AS TEXT)); -- 0ms;
SELECT DATE(CAST(rt1.c0 AS BLOB), (((0.5647901397820583))!=((0xffffffffd03e673d))), json_quote(rt0.c6)) FROM rt1, rt0; -- 0ms;
SELECT '0.6857722201736993', CASE WHEN ((rt0.c5)<=(rt1.c2)) THEN SUM(rt1.c1) END, ((rt0.c0) NOT BETWEEN ((((x'0536'))=((rt0.c3)))) AND (CAST(rt1.c1 AS BLOB))) FROM rt1, rt0 WHERE (((CAST('1245222655' AS NUMERIC))<(((0.45639293421306293) ISNULL)))) ORDER BY ((((rt0.c3)<(x'8e9c'))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c1)))) AND (((((((((rt1.c2)OR(rt0.c5)))OR(rt0.c1)))OR(rt0.c6)))OR(rt1.c0)))) ASC; -- 0ms;
SELECT ((COALESCE(rt0.c6, rt1.c2, rt0.c4, NULL, rt0.c0, rt0.c4)) IS FALSE) FROM rt1, rt0 WHERE (0Xffffffff834a6418) ORDER BY CASE WHEN rt1.c2 THEN (~ (rt1.c0)) ELSE ((rt0.c6) IS FALSE) END; -- 1ms;
SELECT COUNT(*) FROM rt0, rt1; -- 0ms;
SELECT ALL (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((MAX(NULL)))) FROM rt0, rt1 WHERE (CASE WHEN CASE WHEN 1857868526 THEN -1984456160 END THEN ((('1374378476'))>((NULL))) ELSE (((379295738))<(('-425732551'))) END); -- 0ms;
SELECT ((((('-247766688') IS TRUE)))=((json_array_length(rt0.c6, rt0.c4)))) FROM rt1 WHERE (CAST(NULL COLLATE NOCASE AS TEXT));SELECT DISTINCT (((NOT (rt1.c1))) ISNULL), (((rt0.c3 IN ()))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c5 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c3 END)), (((NULL IN ())) NOT NULL) FROM rt1, rt0 WHERE (((((0.702891603812341) NOTNULL)) NOT BETWEEN (((((x'')OR(NULL)))AND('eaMYfhg'))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT SUM(ROUND(rt1.c0, rt0.c0)) OVER ( ORDER BY (((rt1.c2)>=(rt0.c3)) IN ())  NULLS LAST, NULLIF(CAST(rt1.c0 AS NUMERIC), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c6))) DESC  NULLS FIRST) FROM rt0 WHERE (json_remove(NULL COLLATE RTRIM, ((-344510780)*(0.04579820337602181))));SELECT ALL rt1.c2 COLLATE NOCASE, ((rt0.c5)+(CASE -1744391809  WHEN rt1.c2 THEN x'' ELSE rt1.c0 END)), (((rt1.c1, rt0.c0, '805780328')) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt1.c1))), rt1.c1 COLLATE RTRIM, HEX(rt0.c6))) AND ((COUNT(rt1.c0), rt0.c5, (rt0.c3 IN (rt0.c0))))) FROM rt1 CROSS JOIN rt0 ON rt0.c2; -- 0ms;
SELECT DISTINCT rt1.c2, ((MAX(rt1.c0)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ('')), rt1.c0 FROM rt0 LIMIT 720531068 OFFSET 1676507139;SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE) FROM rt1, rt0; -- 0ms;
SELECT ALL ((rt1.c0)LIKE(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c6 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c1 END)) FROM rt1;SELECT (AVG(rt0.c3) IN ()) FROM rt1 WHERE ((((NOT (x''))) IS TRUE)) LIMIT 1374378476 UNION ALL SELECT ALL ((((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c5)))OR(x'')))AND(rt1.c1)))%(rt0.c2 COLLATE RTRIM)) FROM rt1 WHERE (((((',-ﰦ䙙\we') ISNULL))*((- ('-1326726133'))))) INTERSECT SELECT DISTINCT ((GROUP_CONCAT(rt1.c0))GLOB(rt0.c1 COLLATE BINARY)) FROM rt1 WHERE (((CASE WHEN -1647441614 THEN NULL WHEN NULL THEN '-849199224' WHEN 0.1213075460282882 THEN '襚.d' END) IS TRUE));SELECT DISTINCT CASE WHEN ((rt0.c4) BETWEEN (0.3280524125471148) AND (rt0.c4)) THEN rt0.c1 WHEN CASE WHEN 0.946166539197345 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c1 END THEN (+ (rt0.c4)) WHEN (('1036115506')<=(rt1.c1)) THEN CASE WHEN rt0.c4 THEN x'' WHEN NULL THEN rt1.c1 WHEN rt0.c4 THEN rt1.c1 ELSE x'' END ELSE CAST(0.7864503047334309 AS BLOB) END, COUNT(((rt0.c5)AND(rt0.c5))) OVER (), rt0.c0 FROM rt0 WHERE ((CASE 1.932330702E9  WHEN -903930119 THEN NULL ELSE x'' END IN (NULL COLLATE RTRIM)));SELECT DISTINCT (((((rt1.c1) IS FALSE)))>=((CAST(rt1.c0 AS REAL)))) FROM rt0;SELECT DISTINCT (((((rt1.c2))!=((rt1.c0)))) ISNULL), TOTAL(((rt1.c2)*(rt1.c2)) COLLATE RTRIM), CAST(CAST(rt0.c3 AS BLOB) AS REAL) FROM rt0;SELECT ALL rt0.c6 FROM rt1 WHERE (CAST(CAST('466789612' AS TEXT) AS REAL)) LIMIT -202781595;SELECT ROW_NUMBER() OVER () FROM rt1, rt0 WHERE (QUOTE((0.7242082647171755 IN ()))) GROUP BY (('' IN ()) IN ()), (((rt0.c6)) NOT BETWEEN ((HEX(DISTINCT rt0.c0))) AND ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c1))))), ((CAST(rt0.c1 AS TEXT)) IS FALSE) HAVING ((0.6481604715396626)|((((rt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt0.c6, rt0.c5, rt0.c6)) AND ((rt1.c0, rt1.c1, rt1.c2))))) LIMIT 1671927658 OFFSET -1199594511; -- 0ms;
SELECT ALL CAST(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c5)) AS BLOB) FROM rt0, rt1; -- 0ms;
SELECT TRIM(DISTINCT MAX(rt0.c5)) FROM rt0, rt1; -- 0ms;
SELECT SUM(CAST(rt0.c4 AS NUMERIC)) FROM rt0, rt1; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c2)IS NOT(rt0.c5))) FROM rt0, rt1 WHERE (UPPER(DISTINCT (0.5175354634997578 IN ()))); -- 0ms;
SELECT ALL ((((rt0.c3) IS FALSE)) IS FALSE), (((~ (rt1.c1))) BETWEEN ('-1988839442') AND ((+ (rt0.c3)))), ((LOWER(DISTINCT rt0.c5)) IS TRUE) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT MAX(x'') FROM rt1 WHERE ((-1.933140357E9 COLLATE RTRIM IN ())); -- 1ms;
SELECT ALL CAST(rt1.c1 COLLATE BINARY AS TEXT) FROM rt0, rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT AVG(CASE rt0.c5  WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END), (NOT ((((rt0.c4))>=((rt1.c0))))), (CAST(rt0.c0 AS TEXT) IN (CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c2 WHEN 907390448 THEN rt0.c2 END)) FROM rt1 ORDER BY ((CAST(rt1.c1 AS BLOB))<=(LIKELY(rt0.c4))) DESC  NULLS FIRST;SELECT DISTINCT ((rt0.c3 COLLATE NOCASE) NOT BETWEEN ((((rt0.c1))<((rt0.c6)))) AND (rt1.c2 COLLATE BINARY)) FROM rt1, rt0; -- 0ms;
SELECT ALL rt0.c4 FROM rt0; -- 0ms;
SELECT ((0.47951942634968014)<(rt0.c4)) FROM rt1, rt0 WHERE (((('~zq]e+<\n ' IN ())) NOT BETWEEN (((NULL)&(-2068608927))) AND (((('-766300086')) BETWEEN (('')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT ((rt0.c6) IS FALSE) COLLATE NOCASE FROM rt0 LIMIT -370571540 OFFSET -1348502882; -- 0ms;
SELECT DISTINCT ((json_type(rt0.c3))IS NOT(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((0.6660971150120015)OR(rt0.c1)))), (((rt0.c5, rt0.c4, rt0.c6)) BETWEEN ((((rt0.c3)<=(rt0.c6)), (((x'', rt0.c3, rt1.c2)) BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c6, rt1.c0))), SQLITE_COMPILEOPTION_GET(rt1.c1))) AND ((((((rt0.c1)OR(rt1.c1)))OR(rt0.c4)), NULL, TIME(rt1.c2, rt1.c1, rt0.c1)))), ((((((rt0.c6) BETWEEN (rt0.c4) AND (rt0.c2)))OR(((rt0.c4)<(x'')))))AND(rt0.c4)), (((((-1.262383606E9, rt0.c6, rt1.c1))=((rt0.c4, rt1.c2, rt1.c1)))) BETWEEN (((rt1.c0)+(rt0.c4))) AND (((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c5)))) FROM rt0;SELECT DISTINCT LEAD(rt0.c2, IFNULL(DISTINCT (~ (rt0.c0)), ((rt0.c5)LIKE(rt0.c6))), CASE WHEN ((((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c5)))AND(rt0.c6)))OR(rt0.c3)))OR(x'')) THEN ((rt0.c0) IS TRUE) END) OVER () FROM rt0 WHERE ('\r''xb'); -- 0ms;
SELECT ALL CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC) FROM rt0 WHERE (((NULL) NOTNULL)); -- 0ms;
SELECT ALL ((rt1.c2)>('')) COLLATE RTRIM FROM rt0 WHERE ((((((('-256548139')AND('-676980291')))AND(NULL))) ISNULL));SELECT DISTINCT CAST((((rt0.c6))<((rt1.c0))) AS BLOB) FROM rt1;SELECT DISTINCT CUME_DIST() OVER (), CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt1.c2)==('1e500')) THEN ((((rt0.c0)OR(rt1.c1)))OR(rt0.c3)) WHEN -1.269013351E9 COLLATE BINARY THEN COUNT(*) WHEN ((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c6)) THEN ((1873680877)-(rt1.c0)) ELSE MAX(x'') END, ((rt0.c6) BETWEEN (rt0.c3) AND (rt1.c0)) COLLATE BINARY FROM rt0, rt1 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE NOCASE ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((rt0.c2))<((rt0.c3))) IN (((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt1.c1)), CAST(rt0.c2 AS BLOB))) FROM rt1 WHERE (((((-411361063)) BETWEEN ((0.6971267749417993)) AND ((NULL))) IN ())) ORDER BY (+ (rt1.c0)) COLLATE RTRIM;SELECT ALL ((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)) COLLATE BINARY FROM rt0 NOT INDEXED;SELECT DISTINCT (((rt0.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))) AND ((((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c4))))) FROM rt0, rt1 LIMIT -386450654 OFFSET -1579413060; -- 0ms;
SELECT DISTINCT ((((('')AND(rt1.c2)), ((rt0.c3)IS(rt0.c6)), CAST(rt0.c6 AS NUMERIC)))=((((((rt0.c3)OR(rt0.c6)))OR(rt0.c1)), ((rt0.c5)IS NOT(rt0.c2)), ((rt0.c5)IS NOT(rt0.c6))))), rt0.c4, (((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)) IN ()) FROM rt1, rt0 WHERE (((((x'599f') NOT BETWEEN ('-1411878279') AND (NULL)))|(((1293436415)=(x''))))); -- 1ms;
SELECT DISTINCT (~ (COUNT(*))) FROM rt1 WHERE (LENGTH((((x'9b57', x'', 0.9610074354687037, '+~a(5W)', x''))<((x'6e9a', '540772305', x'', NULL, x''))))); -- 0ms;
SELECT rt1.c1 FROM rt1 WHERE (1.709160378E9) GROUP BY CASE WHEN (NOT (rt0.c4)) THEN CAST(rt0.c4 AS TEXT) END HAVING ((((rt1.c0) BETWEEN ('-1006570447') AND (rt0.c2)))IS(rt1.c1 COLLATE RTRIM));SELECT DISTINCT rt1.c0 FROM rt0, rt1; -- 0ms;
SELECT CASE ((-1385038338)+(rt0.c1))  WHEN rt0.c1 THEN JULIANDAY(rt0.c2, rt0.c4, rt1.c0) ELSE -1467011397 END FROM rt0;SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c3 ELSE 'pZe|r❾AL' END COLLATE BINARY FROM rt0, rt1 GROUP BY ((((((((((rt1.c1) IS FALSE))AND(((((rt1.c2)OR(rt0.c3)))AND(rt0.c1)))))AND(((rt1.c2)IS(rt0.c4)))))AND(((((((((rt0.c0)OR(rt1.c0)))OR(rt0.c6)))OR(rt0.c0)))OR(rt0.c4)))))OR(rt0.c4 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT NULL)) IS TRUE) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c2) NOT NULL) THEN (+ (rt1.c2)) WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c0))) THEN ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))AND(rt1.c2)))OR(rt0.c3)) WHEN CAST(rt1.c0 AS NUMERIC) THEN (((rt0.c2, rt0.c2, '{a.lT*')) NOT BETWEEN ((rt0.c5, rt1.c1, rt0.c6)) AND ((rt0.c0, rt1.c1, rt0.c2))) END FROM rt1, rt0; -- 0ms;
SELECT ALL (rt0.c4 COLLATE RTRIM IN ()), (((rt0.c5)) NOT BETWEEN (((((rt1.c2))>((x''))))) AND ((((((rt0.c4)AND(rt0.c5)))AND(rt1.c2))))), ((rt0.c5) BETWEEN (LOWER(rt1.c1)) AND (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 END)) FROM rt1;SELECT DISTINCT 0.7276340329773702 FROM rt0 WHERE (CAST(0.6818030219191733 COLLATE BINARY AS REAL)) ORDER BY (~ (NULL)), (((('902426463') IS TRUE))<<(((((rt0.c6)OR(rt0.c3)))OR(rt0.c2))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1) IS TRUE))AND(rt1.c0 COLLATE RTRIM)))AND((- (rt0.c4)))))OR(DATETIME(rt0.c0, rt0.c2, rt0.c6))))OR(ABS(DISTINCT rt0.c6))) FROM rt0 WHERE (CAST((+ ('-1528121631')) AS NUMERIC));SELECT DISTINCT x'', SUBSTR(COALESCE(rt1.c2, rt0.c1, rt1.c0, rt1.c1), x''), CAST((((rt0.c5)) BETWEEN ((rt1.c2)) AND ((rt1.c2))) AS NUMERIC) FROM rt1;SELECT ALL CUME_DIST() OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c0 END) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)), ((((rt0.c3)LIKE(rt1.c1))) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((~ (rt0.c6)))), ((((rt0.c5 COLLATE RTRIM)AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))))))OR(SUM(rt0.c2))) FROM rt1 WHERE ((((('2129756011')*(0.2194736594608524))) ISNULL));SELECT DISTINCT (((((rt0.c3, rt1.c0, rt1.c2))==((rt0.c6, rt1.c0, rt0.c5))))||(SQLITE_VERSION())) FROM rt0, rt1 WHERE (((((x'') NOTNULL)) NOT BETWEEN (((x'') IS FALSE)) AND (CASE '19880991'  WHEN 485814474 THEN x'' ELSE '' END))); -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c4) AND ('N '))) NOT BETWEEN (((rt0.c4)<=(rt0.c4))) AND ((((((((('')OR(rt1.c0)))OR(rt1.c0)))OR(rt0.c4)))AND(rt0.c5)))) FROM rt0;SELECT ALL NULL FROM rt1; -- 0ms;
SELECT ALL GROUP_CONCAT((((rt0.c2)) NOT BETWEEN ((0.14589968694856437)) AND ((rt0.c4)))) COLLATE NOCASE FROM rt0 WHERE (((((166132430)>=('1910542711'))) NOTNULL)) ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN (((rt0.c5))==((rt1.c1))) THEN 0.03574357171891762 WHEN ((rt0.c2) NOT NULL) THEN CAST(rt1.c1 AS NUMERIC) WHEN CAST(rt1.c0 AS INTEGER) THEN COALESCE(rt0.c6, rt0.c6) END, PRINTF(TRIM(rt0.c5, rt1.c0)) ASC  NULLS FIRST, ((((rt1.c2) IS FALSE))IS(rt0.c2)) DESC  NULLS FIRST;SELECT (((rt0.c2)) BETWEEN ((((rt0.c5)>=(rt0.c5)))) AND ((rt0.c3 COLLATE BINARY))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN (rt0.c4))) BETWEEN (rt0.c5) AND (rtreenode(rt0.c0, rt1.c1))) FROM rt0, rt1 GROUP BY ((((((rt0.c5)OR(rt0.c1)))AND(rt0.c4)))IS NOT(CASE WHEN -903930119 THEN rt1.c2 ELSE rt0.c5 END)), ((((((((CAST(rt0.c4 AS NUMERIC))AND(((rt1.c1)>>(x'')))))AND(((rt0.c2)*(rt0.c0)))))OR(CAST(rt0.c1 AS REAL))))AND(rt0.c0)), (- (CAST(rt1.c1 AS INTEGER))) HAVING CAST((rt1.c2 IN (rt1.c0)) AS INTEGER) ORDER BY (- ((rt0.c3 IN ()))) ASC, (NOT (((rt0.c1) BETWEEN (rt0.c0) AND (x'ad1b')))) ASC; -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((SUM(rt1.c1))) AND (((rt0.c5 IN ())))), ((CASE rt0.c2  WHEN rt1.c1 THEN rt1.c0 END) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (CAST(rt0.c1 AS NUMERIC))), (((rt0.c4, rt0.c2, rt1.c2))==((x'', rt0.c1, rt0.c2))) COLLATE RTRIM FROM rt1, rt0 WHERE (((((NULL) IS FALSE)) NOT BETWEEN (((x'') NOT BETWEEN (x'b00dbec5') AND (0.58408436621201))) AND (((('倈&Oᛘ'))==((x'c96b')))))) LIMIT 1088824980; -- 0ms;
SELECT DISTINCT rt0.c6 FROM rt0 WHERE ((((('.D')<(NULL)))|(CASE WHEN NULL THEN '-160258506' END))); -- 0ms;
SELECT ALL rt0.c5 FROM rt1;SELECT DISTINCT ((((rt0.c4)IS(rt0.c0))) ISNULL), (rt0.c6 COLLATE NOCASE IN ('2069473920')), HEX(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c6 THEN rt1.c2 END) FROM rt0;SELECT rt0.c2 COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c2 AS REAL) AS REAL) FROM rt0, rt1 WHERE (x'') GROUP BY (((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))>=((rt1.c2 IN ()))) ORDER BY load_extension(((rt0.c4) NOT BETWEEN (rt0.c0) AND (0.946166539197345))) ASC, (((rt0.c4, rt0.c5, rt0.c3, rt0.c6, '1036115506'))<((rt1.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c3))) COLLATE RTRIM DESC  NULLS LAST; -- 0ms;
SELECT ALL ((rt1.c0) IS FALSE), ROW_NUMBER() OVER (), rt1.c1 FROM rt0 CROSS JOIN rt1 ON rt1.c0 WHERE (((CASE 0.4826249221410266  WHEN 0xffffffffb3b44ca3 THEN NULL WHEN '-283288397' THEN '' WHEN x'' THEN 7.67579749E8 END)==(NULLIF(DISTINCT '', 'Ib')))); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c4) BETWEEN (rt0.c6) AND (rt0.c6))), (((rt0.c6)GLOB('0.22554649694887274')) IN ()), ((x'')OR(-581555161 COLLATE NOCASE)) FROM rt0, rt1 WHERE (x''); -- 0ms;
SELECT ALL ((rt1.c1)==(ABS(rt0.c3))), CHANGES(), rt0.c2 FROM rt1 WHERE ((((0X65dfb7ba COLLATE RTRIM))<((NULL))));SELECT ALL COUNT(*), CAST((rt0.c5 IN ()) AS TEXT), (('-1201492848' COLLATE NOCASE)||(LIKELIHOOD(DISTINCT rt1.c1, 0.8199913170974472))) FROM rt0, rt1 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC)); -- 0ms;
SELECT DISTINCT 0.16473869671634733, '', rt0.c2 FROM rt1 WHERE ((NOT (ABS(DISTINCT NULL))));SELECT ALL ((rt1.c2)>=(NULL)) FROM rt1, rt0 WHERE (((((']?#w') IS TRUE))OR(MAX(NULL, x'e353')))); -- 0ms;
SELECT CAST(CASE WHEN rt1.c2 THEN rt0.c6 ELSE rt0.c1 END AS NUMERIC) FROM rt0, rt1 WHERE (((((0xfffffffff54cc811) BETWEEN (x'') AND (NULL))) IS FALSE)); -- 0ms;
SELECT ALL ((CAST(NULL AS REAL))LIKE(((rt0.c2)GLOB('{}m')))), RANK() OVER (), rt0.c1 FROM rt1;SELECT ALL ((((((0X0)AND(rt1.c1)))AND(rt1.c2)))>=(((((((((rt0.c6)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c6)))AND(rt1.c1)))) FROM rt1 WHERE (NULLIF(DISTINCT (('468531294')GLOB(NULL)), (x'6f06' IN ()))) ORDER BY (((((rt0.c6, rt1.c2, rt1.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, rt1.c0, rt0.c1)))) BETWEEN ((rt0.c3 IN ())) AND (((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c5)))) ASC;SELECT DISTINCT CAST((rt1.c1 IN ()) AS NUMERIC), ((rt0.c1) IS TRUE) COLLATE RTRIM, (((rt1.c1 COLLATE RTRIM))>=((((rt0.c5)&(rt0.c5))))) FROM rt1;SELECT ALL ((TRIM(DISTINCT rt1.c0))IS NOT(((rt0.c2)<=(rt1.c0)))) FROM rt1 WHERE ((+ (((0xffffffff9df9f2de)LIKE(' *+'))))) GROUP BY CAST(0.7174950889102661 AS INTEGER) HAVING UPPER(0.8277090733752354 COLLATE BINARY);SELECT ALL ((rt0.c2 IN ()) IN ()) FROM rt0, rt1; -- 0ms;
SELECT NULL FROM rt1 WHERE (((NULL) BETWEEN ((('1210767921')LIKE(0.08128335785877339))) AND (0x2848954c))); -- 0ms;
SELECT ALL ((((rt0.c1)OR(rt1.c0)))|(((((rt0.c1)AND(rt0.c6)))AND('')))) FROM rt0 UNION ALL SELECT ((((rt0.c4)%(rt1.c2))) ISNULL) FROM rt1, rt0 WHERE (((0.25083320923081753 COLLATE RTRIM) IS FALSE));SELECT ((CAST(rt0.c0 AS NUMERIC)) IS FALSE), ((COUNT(*))%((+ (rt0.c0)))), AVG((NOT (''))) OVER () FROM rt0, rt1 WHERE (((((x'') NOT NULL))||(0.6544539793091291))) LIMIT 542402697 OFFSET -849199224; -- 0ms;
SELECT DISTINCT ((((rt0.c1)||(0.6054785786401085))) IS FALSE) FROM rt0, rt1 WHERE (((((('')) NOT BETWEEN ((0.6823463034664429)) AND ((0.09985097687931155)))) NOT BETWEEN (((((x'')AND(NULL)))AND('-1175459590'))) AND ((('1036115506')AND(NULL))))) LIMIT 1142721978 OFFSET 675845452; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0 WHERE ((NOT ((NOT (NULL))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c6)))) IS TRUE) DESC, NULL;SELECT ALL SQLITE_COMPILEOPTION_USED(CAST(rt0.c3 AS NUMERIC)) FROM rt1;SELECT (+ ((((rt0.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) FROM rt0;SELECT ALL rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c2)IS NOT(rt0.c4)) THEN 0x14c935f0 ELSE ((rt0.c2)LIKE(rt0.c0)) END FROM rt1, rt0 WHERE (((0Xffffffffb8df5744) IS FALSE) COLLATE BINARY); -- 0ms;
SELECT ALL CASE WHEN (+ (rt0.c2)) THEN ((rt0.c6) BETWEEN (rt0.c1) AND (rt0.c1)) END FROM rt1 WHERE ((0.8518289089766161 COLLATE BINARY IN ())) GROUP BY CASE WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN (- (rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN (0.3486173473791767 IN ()) ELSE CASE WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c4 END END HAVING (((rt1.c2 IN ()))>=(((rt0.c4)%(rt0.c6))));SELECT DISTINCT LAST_VALUE(((((rt1.c2) IS FALSE))>=(((rt1.c0)+(rt1.c0))))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(x'1e97') OVER () FROM rt0 WHERE (LIKELY(DISTINCT '5i!' COLLATE BINARY)); -- 0ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c5))) NOT NULL), SUM(((rt0.c2)|(rt0.c6))) COLLATE NOCASE, CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c6)) AS TEXT) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c5, rt1.c1, rt0.c0)) NOT BETWEEN ((rt1.c0, rt0.c6, rt0.c6)) AND ((rt0.c1, '''K!ᝋxpwe', rt0.c2)))) ISNULL), GROUP_CONCAT((x'fba0' IN ())), 0.7898581207383116 FROM rt0 WHERE (((CASE ',//d醸x,0'''  WHEN '' THEN NULL ELSE NULL END) IS TRUE));SELECT ALL LAST_VALUE((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c2))))=(((((rt1.c2))=((rt1.c2))))))) OVER ( ORDER BY CAST((~ (rt0.c6)) AS TEXT)), CUME_DIST() OVER (), '1036115506' FROM rt1;SELECT (((MIN(rt0.c5)))>=((CAST('(U' AS REAL)))), CAST(((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c0)) AS TEXT), rt1.c0 FROM rt1;SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c1) AND (x'')))>=(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c5)))), rt0.c2, 't2' COLLATE BINARY FROM rt0, rt1 WHERE ((NOT (CASE WHEN '0.3819999757421456' THEN x'' ELSE 1363860338 END))) GROUP BY ((((((x'4ed0') ISNULL))AND(((((rt0.c1)AND(rt1.c2)))AND(rt1.c1)))))OR(((rt0.c5)<<(rt0.c3)))) ORDER BY (- ((rt1.c2 IN (rt0.c6, rt0.c4)))) DESC, (- ((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((rt1.c2))))) DESC; -- 0ms;
SELECT (((((rt0.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))))*(CAST(rt0.c4 AS NUMERIC))) FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c1 END) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (((rt0.c4)*(NULL))))  NULLS LAST;SELECT ALL ((TYPEOF(DISTINCT rt0.c2)) BETWEEN (rt1.c0 COLLATE BINARY) AND ((rt1.c0 IN ()))) FROM rt1, rt0; -- 0ms;
SELECT ((rt1.c1) NOT NULL) COLLATE BINARY FROM rt0 WHERE ((((NULL IN ()))>>((('') BETWEEN (x'b540') AND (0.3819999757421456)))));SELECT ALL (+ (rt1.c0)), COALESCE(((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c6)), ((rt0.c5)GLOB(rt1.c1)), ((rt0.c2)!=(rt0.c0)), (+ (rt0.c6))), json_patch(rt0.c3, rt0.c2) COLLATE BINARY FROM rt1;SELECT ALL ((rt0.c5) IS TRUE) COLLATE NOCASE FROM rt1, rt0 WHERE (IFNULL((((0.06393990051093834, '-791421682', NULL))=(('-1447842920', '-1508966125', 0.016103620707033306))), (((('Fhe16<녧')OR(NULL)))OR('Is_Y7')))); -- 0ms;
SELECT ALL (((rt0.c1 IN ())) BETWEEN (SQLITE_VERSION()) AND ((rt0.c0 IN ()))) FROM rt0 LIMIT 387565281; -- 0ms;
SELECT (UPPER(rt0.c1) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT (~ (rt0.c6)) FROM rt1;SELECT COUNT(*) FROM rt0; -- 0ms;
SELECT (((rt0.c6) NOTNULL) IN ()) FROM rt1, rt0 WHERE (IFNULL(DISTINCT 0.3967383753147057 COLLATE NOCASE, CAST('554097048' AS INTEGER))) LIMIT -436267055; -- 0ms;
SELECT DISTINCT rt0.c6, ((((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0)))IS NOT((((rt0.c6, rt0.c1, 166132430))<((rt0.c6, rt0.c3, rt0.c6))))), COUNT(*) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ())) ISNULL) FROM rt1 ORDER BY ((((CAST(rt0.c1 AS TEXT))OR(((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c6)))OR(rt0.c3)))OR(rt0.c3)))))OR((~ (rt1.c0)))) ASC  NULLS LAST, ((CAST(rt0.c5 AS REAL))GLOB(((rt1.c1) IS FALSE)))  NULLS FIRST, rt0.c0 ASC;SELECT DISTINCT ((COUNT(rt0.c6))OR((rt0.c5 IN ()))) FROM rt1, rt0; -- 0ms;
SELECT ALL ((x'')>>((- (rt1.c2)))) FROM rt1 WHERE (CASE ((NULL)GLOB(x''))  WHEN CASE ''  WHEN NULL THEN '-1782898381' END THEN CASE WHEN 0Xffffffff83cd0330 THEN '1659055528' ELSE x'ee0d' END END); -- 0ms;
SELECT ((((rt0.c4))!=((rt1.c2))) IN ((NOT (rt0.c5)))) FROM rt1, rt0 WHERE (((('', NULL, x'9e92')) BETWEEN (('-1804044387', 0.5876106335719338 COLLATE NOCASE, (('1597939257') NOT BETWEEN (x'5132') AND ('-256800978')))) AND ((((((((((x'5bd0')AND(0xefabc31)))AND('')))OR(468531294)))OR('U悏')), (((0.6696767088384007, '23423167', 0.267807612390645)) BETWEEN ((NULL, 0.4814558491288954, 0x65014c08)) AND ((x'', x'', 'sy胁KG\rT'))), ABS(DISTINCT x'80da'))))) LIMIT 1175203045 OFFSET -956960031; -- 1ms;
SELECT ALL ((CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt1.c2 THEN rt0.c2 END) BETWEEN (0.005984942670208215) AND ((NOT (rt0.c5)))) FROM rt0 WHERE (ABS(DISTINCT (((''))==((x'b131'))))) LIMIT -1933140357 EXCEPT SELECT DISTINCT (((rt1.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c4))<=((rt0.c3))), CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)) AND ((CASE rt0.c6  WHEN rt0.c4 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c6 WHEN rt1.c0 THEN x'0b13' ELSE rt0.c5 END, (((rt0.c4))>((rt0.c4))), (NOT (rt0.c1))))) FROM rt1 ORDER BY CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) ASC  NULLS LAST;SELECT DISTINCT MAX('1036115506'), GROUP_CONCAT(((NULL)||(rt1.c2))), ((rt0.c3)+(((rt0.c4)IS(rt0.c2)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT LAG(((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))AND(CAST(rt1.c2 AS REAL))), ((CAST(rt1.c0 AS INTEGER))LIKE(rt0.c6)), (((rt0.c4, rt1.c0, 0X540380a3)) BETWEEN ((((rt0.c6) ISNULL), (rt0.c5 IN ()), ((rt0.c5) IS TRUE))) AND ((SQLITE_VERSION(), (- (rt0.c2)), ((rt1.c2)>=(0.44072360920883347)))))) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (rt0.c2 IN (rt0.c4)) COLLATE RTRIM FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c2) IS FALSE))!=(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c3)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS REAL)) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c2)OR(rt0.c1)))) FROM rt0 WHERE (((((('->' IN ()))AND(NULL)))AND(((((x'')AND('38301859')))OR(x''))))) LIMIT 1046668679; -- 0ms;
SELECT DISTINCT ((((rt0.c6)<(rt0.c0))) BETWEEN (((((rt0.c1)AND(rt0.c6)))AND(rt0.c5))) AND ((~ (rt1.c1)))) FROM rt0, rt1 WHERE (HEX(((x'9618') BETWEEN ('625948155') AND (1.951162384E9)))); -- 0ms;
SELECT ALL rt0.c3 FROM rt0, rt1 WHERE ('Ee'); -- 0ms;
SELECT DISTINCT ((((rt0.c4)&(rt0.c5)))>>((((rt0.c1)) NOT BETWEEN (('-1753378611')) AND ((rt0.c3))))) FROM rt0 WHERE ((('Gp') BETWEEN (')KS') AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))<>(COALESCE(rt1.c0, rt1.c1))) FROM rt0, rt1 WHERE ((1.7976931348623157E308 IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NULL, rt0.c3, (((rt0.c0))>((rt1.c1))) COLLATE RTRIM, MAX(rt0.c2), AVG(CASE WHEN '-944054532' THEN rt0.c2 END) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c0)) ISNULL) FROM rt0 WHERE (((941708663)IS(NULL)) COLLATE NOCASE); -- 0ms;
SELECT ((((rt0.c6) NOT BETWEEN (rt1.c1) AND (rt0.c4)))+(((rt0.c0)&(rt0.c1)))) FROM rt0;SELECT -1.533833069E9 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY CAST(rt0.c4 AS INTEGER), ((((rt0.c2)>>(rt0.c3)))<=((+ (rt0.c5))))), (((NULL)) BETWEEN ((((rt0.c5) IS TRUE))) AND ((((rt1.c0)<(rt0.c5))))), COUNT(*) OVER () FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (rt1.c1 COLLATE BINARY IN ()), rt0.c2, ((rt0.c2 COLLATE RTRIM)/(((rt0.c1) ISNULL))), NTH_VALUE(TRIM(DISTINCT rt1.c0, -1831127755), ((rt1.c2 COLLATE RTRIM) IS TRUE)) OVER (), (('')LIKE(CASE WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)) FROM rt1 ORDER BY ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c4))) AND (((rt0.c0)&(rt0.c4)))) DESC  NULLS LAST;SELECT DISTINCT (NOT (CASE WHEN rt0.c1 THEN rt1.c2 END)), TOTAL((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))), CAST(LTRIM(rt0.c0) AS BLOB) FROM rt0, rt1; -- 0ms;
SELECT ((rt0.c6 COLLATE RTRIM) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND ((rt0.c5 IN (rt1.c0)))), CASE WHEN rt0.c3 THEN (((0.17482596339816225, rt0.c1, rt1.c2, rt0.c5, rt1.c2)) NOT BETWEEN ((rt1.c0, rt0.c5, rt1.c2, rt0.c6, rt1.c1)) AND ((rt0.c1, 2.2910313E8, rt0.c3, NULL, rt0.c3))) WHEN (rt1.c2 IN ()) THEN ('0.2668394249869086' IN ()) WHEN ((((rt0.c3)OR(rt0.c2)))OR(rt0.c5)) THEN (((rt1.c1))<((rt1.c1))) WHEN (NOT (rt1.c0)) THEN '-1560629590' WHEN (('_-)liỹj') ISNULL) THEN NULL ELSE ((rt0.c2)|(rt0.c5)) END, '54*''R}', ((((rt1.c2)OR(rt1.c1))) IS FALSE), ((((rt0.c1)AND(rt0.c4)))IS NOT(CAST(rt0.c6 AS INTEGER))) FROM rt1, rt0 ORDER BY CAST(rt1.c2 AS BLOB) ASC  NULLS FIRST; -- 1ms;
SELECT ALL SUM((rt0.c4 IN (rt0.c0))) FILTER(WHERE ((rt0.c6) BETWEEN (rt0.c1) AND (rt1.c2)) COLLATE NOCASE) OVER ( PARTITION BY rt0.c0, ((CASE WHEN rt0.c4 THEN rt0.c0 END)AND((rt0.c5 IN (rt0.c6, rt0.c0))))) FROM rt0, rt1 WHERE ((('匸D*')-(0.8691611869816834)) COLLATE RTRIM); -- 0ms;
SELECT AVG(((((((((rt1.c0)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c5))) OVER () FROM rt1, rt0 WHERE (((0.6441011816425146 IN (NULL)) IN (((0xffffffffec2bb709)>(NULL)), (- (-1457991619))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((UPPER(DISTINCT rt0.c1))AND(((rt1.c2)*(rt1.c0)))))AND(rt1.c0 COLLATE NOCASE)))OR(((rt0.c5)>(rt0.c3)))))OR(MIN(rt0.c0))), ((SUM(rt0.c6))>=((NOT ('549124016')))), (((rt0.c6) BETWEEN (rt1.c2) AND (rt1.c1)) IN (((rt0.c6)||(rt0.c5)), COUNT(rt0.c6))), (COUNT(*) IN (((rt0.c6)<=(NULL)))), CAST(rt0.c6 AS BLOB) COLLATE BINARY FROM rt1, rt0 WHERE (((((((((CAST(NULL AS REAL))AND((((x'2942')) NOT BETWEEN (('20')) AND (('-1686065276'))))))OR(CASE x'15df'  WHEN '-157613439' THEN 'TRUE' ELSE NULL END)))OR((('nowU+')<=(0.9476845444667644)))))AND(((NULL) BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT rt0.c6 FROM rt0, rt1 WHERE (((0.8250190613340919 COLLATE BINARY) NOT BETWEEN ((NULL IN ())) AND (((((((((x'')OR('2067622519')))OR(-4.25732551E8)))AND(0.7118640395321018)))AND(0.8682873716884814))))); -- 0ms;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((0.7561766955123501)|(0.15277031898753235)))&(((x'') NOT BETWEEN (x'') AND ('-2092276712'))))) LIMIT -1972734537 OFFSET 1436713980; -- 0ms;
SELECT DISTINCT '' FROM rt0; -- 0ms;
SELECT DISTINCT (~ (rt0.c6)) COLLATE NOCASE, CASE WHEN ((rt1.c0) ISNULL) THEN NULL ELSE rt1.c2 END, ((((567032698) NOT BETWEEN (rt1.c1) AND (rt1.c2))) IS TRUE) FROM rt1, rt0 WHERE (((((NULL) BETWEEN (0.10352722342977361) AND ('z1'))) ISNULL)) LIMIT 1116582065; -- 0ms;
SELECT DISTINCT ((((rt0.c3)*(rt0.c4)))+(CASE WHEN rt0.c0 THEN rt0.c3 END)), AVG(((((NULL)OR(rt0.c6)))AND(rt0.c2))) FILTER(WHERE ((((((rt0.c2) NOTNULL))AND(CASE rt1.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c0 END)))AND(json_extract(x'505b', rt0.c2)))) OVER (), MAX(((((rt0.c0)AND(rt0.c5)))AND(rt0.c1))) FROM rt1;SELECT (((rt0.c5, rt0.c4, rt1.c1)) NOT BETWEEN ((rt0.c1, MAX(']1*'), rt0.c4)) AND ((TYPEOF(DISTINCT rt0.c3), CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END, (rt0.c1 IN ())))), rt0.c0, ((((LIKELIHOOD(DISTINCT rt0.c0, 0.3395602463317391))OR((NOT (rt1.c1)))))OR(((4.73420839E8) IS FALSE))) FROM rt1 WHERE ((+ (0.07964781748285987 COLLATE NOCASE)));SELECT DISTINCT PERCENT_RANK() OVER (), LAG(DATE(CAST(rt1.c1 AS REAL), CASE rt1.c1  WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE NULL END, JULIANDAY(rt1.c2, rt0.c1, rt0.c5)), CASE WHEN ((((((((rt0.c5)OR(rt0.c6)))AND(rt0.c4)))OR(0.5377288759792566)))OR(rt0.c1)) THEN SQLITE_VERSION() WHEN CAST(rt1.c2 AS INTEGER) THEN (~ (rt0.c6)) WHEN ((rt1.c0) NOT BETWEEN (rt0.c3) AND (rt1.c0)) THEN RTRIM(rt1.c1) ELSE highlight(rt1.c1, rt0.c4, rt1.c1, '-918283248') END, CASE WHEN rt0.c4 THEN CASE rt0.c1  WHEN rt0.c5 THEN rt1.c2 END WHEN ((rt0.c4)+(rt0.c6)) THEN ((rt0.c6) NOT BETWEEN (rt1.c1) AND (rt0.c3)) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c5)) THEN rt0.c3 WHEN ((rt0.c1)AND(rt1.c1)) THEN CAST(rt0.c6 AS NUMERIC) END) OVER ( GROUPS  CURRENT ROW), rt0.c5 FROM rt0, rt1 LIMIT -535004611; -- 0ms;
SELECT DISTINCT rt0.c3, ((CAST(rt0.c6 AS TEXT)) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (CASE WHEN rt0.c1 THEN rt1.c1 ELSE 0.38788923045104706 END)), CASE ((rt0.c3)IS NOT(rt0.c5))  WHEN rt1.c0 THEN rt0.c4 COLLATE BINARY END FROM rt0 LIMIT -198616222 OFFSET 549124016;SELECT DISTINCT CASE WHEN rt0.c2 THEN rt0.c5 ELSE (rt0.c5 IN (rt0.c4)) END FROM rt1 GROUP BY CAST(GLOB(rt1.c2, rt0.c1) AS NUMERIC) HAVING x'';SELECT DISTINCT CAST(((rt0.c0) ISNULL) AS NUMERIC) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((((~ (rt1.c1)))AND(rt1.c2)))AND((NOT (rt1.c1)))) FROM rt0;SELECT COUNT((((rt0.c5, rt0.c1, rt0.c6)) BETWEEN ((rt0.c0, rt1.c0, rt0.c4)) AND ((rt1.c2, rt1.c2, rt0.c6)))) FROM rt1;SELECT ALL ((((rt0.c3)*(rt1.c0))) NOT BETWEEN ((((rt0.c3, rt0.c1, rt1.c0)) BETWEEN ((rt0.c2, rt1.c2, rt1.c2)) AND ((rt0.c6, rt0.c1, rt0.c5)))) AND (rt1.c0 COLLATE BINARY)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2)))!=((+ (rt0.c2)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1; -- 1ms;
SELECT ((CASE rt0.c0  WHEN -0.0 THEN rt0.c2 ELSE rt1.c1 END)=(MIN(rt0.c4))) FROM rt0, rt1 WHERE ((- (CASE ''  WHEN NULL THEN x'dbd0' ELSE 0.35247974908062996 END))) GROUP BY CASE '-903930119'  WHEN CAST(rt0.c5 AS INTEGER) THEN (((rt1.c1, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c6, rt0.c0, rt0.c2)) AND ((rt1.c0, rt0.c2, rt0.c0))) END HAVING (((((rt0.c0 IN (rt0.c3, rt1.c2)))OR(rt0.c4)))AND(TOTAL(rt0.c0))); -- 0ms;
SELECT ALL CAST(rt0.c0 AS BLOB) FROM rt1, rt0 WHERE ((((('-483138515')*(0.15379972436058642)))|(CASE WHEN -948882314 THEN 0.9716835727707408 WHEN NULL THEN NULL WHEN x'' THEN NULL ELSE '274953796' END))); -- 0ms;
SELECT CASE TOTAL(rt0.c0)  WHEN (((((((((((('JQ')AND(rt0.c5)))OR(rt0.c2)))OR(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)) THEN ((rt0.c4)<=(rt0.c5)) ELSE 0.2578443644027272 END FROM rt1;SELECT DISTINCT GROUP_CONCAT(((rt0.c4) NOT NULL)) FROM rt1, rt0 LIMIT 783773962 OFFSET -143208802; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c4) BETWEEN (rt0.c6) AND ('CwcAsx')) THEN ((((((((((((rt0.c6)AND(rt0.c4)))AND(rt1.c0)))AND(rt1.c0)))AND(rt0.c4)))AND(0.12781466973008992)))OR(rt0.c3)) END FROM rt1, rt0; -- 0ms;
SELECT ALL (((NULL, rt0.c5, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c5 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c1 END, ((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c6)), NULL)) AND ((CAST(rt0.c5 AS REAL), ((((((((rt0.c5)OR(x'')))OR(rt0.c5)))AND(rt0.c0)))AND(rt1.c0)), rt1.c1))) FROM rt0 WHERE (LIKELIHOOD(DISTINCT CASE 0.1552846003573929  WHEN x'' THEN 1490320494 WHEN 0.5804989297697101 THEN '-654546005' WHEN 721897459 THEN 0.4703333382287608 END, 0.668504004633466));SELECT DISTINCT ((((((((((((rt1.c1)AND(rt1.c1)))AND(rt0.c0)))OR(((rt0.c1)+(rt0.c5)))))OR(rt0.c0)))AND(CAST(rt1.c0 AS NUMERIC))))OR(rt0.c3 COLLATE NOCASE)), 0.3183076062104121, (((rt0.c1 IN ()))AND('')) FROM rt1 NOT INDEXED, rt0 WHERE (((((((0x35c9ef5f)||(x'cdae')))AND(((0.3378837142765846) IS FALSE))))OR((NOT (-1110036831))))); -- 0ms;
SELECT DISTINCT (CAST(rt1.c2 AS INTEGER) IN ()) FROM rt1, rt0 WHERE (((NULL)&((- (NULL))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)==(rt0.c6)))|(((rt0.c6) NOTNULL))) FROM rt0 WHERE (((x'' COLLATE BINARY) BETWEEN (((NULL)&(0Xffffffff80a3d848))) AND (((x'')OR('P\r-8H'))))); -- 0ms;
SELECT ((((AVG(rt1.c2))AND((((x'0f52')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))))OR((rt1.c0 IN (rt1.c1, rt1.c1)))) FROM rt1 WHERE (0.3085746306321009) GROUP BY ((rt0.c6 IN ()) IN ()) HAVING ((((((rt0.c5)OR(rt1.c0)))AND(rt0.c5)))=((rt0.c2 IN (rt0.c4))));SELECT DENSE_RANK() OVER (), SUM(((rt1.c0)%(rt0.c0))), (((rt0.c0 IN ()))GLOB((((rt0.c1))>=((0X2848954c))))), LEAD(((0.8195292037622928) BETWEEN (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))) AND ((+ (rt1.c2)))), CAST(CASE WHEN x'' THEN rt1.c0 ELSE rt1.c0 END AS INTEGER), CAST(CAST(rt1.c0 AS TEXT) AS TEXT)) OVER (), (((CAST(rt1.c1 AS NUMERIC), rt0.c5 COLLATE BINARY, ((rt0.c1) IS TRUE)))>=((((rt1.c1)LIKE(rt1.c2)), rt0.c6 COLLATE BINARY, ((rt0.c0) IS TRUE)))) FROM rt1 ORDER BY ((rt1.c1 COLLATE NOCASE)<<(NULL))  NULLS FIRST;SELECT DISTINCT 0.9136487279100349 FROM rt1 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (((NULL) NOTNULL)) AND ((NOT (x''))))) GROUP BY IFNULL(DISTINCT LIKELY(rt0.c2), ((rt0.c5)+(rt1.c1)));SELECT ALL SUM((rt0.c1 IN ())), CUME_DIST() OVER ( GROUPS ((rt0.c0) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3))) AND (((rt0.c4)IS NOT(1.951162384E9)))) PRECEDING), CASE AVG('1218665691')  WHEN CASE WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c6 END THEN ((rt1.c0)AND(rt1.c1)) END FROM rt0 WHERE (((x'' IN ()) IN ((~ ('')))));SELECT ALL CAST(CASE 'Pl'  WHEN rt0.c0 THEN rt0.c6 ELSE rt1.c1 END AS NUMERIC), MAX((((rt0.c1, rt0.c6, rt1.c2)) NOT BETWEEN ((rt0.c5, rt0.c3, rt0.c0)) AND ((rt0.c2, rt0.c3, 0.7357557238287477)))), LAST_VALUE((((CAST(7.21897459E8 AS NUMERIC)))!=((rt1.c0 COLLATE RTRIM)))) OVER () FROM rt1;SELECT DISTINCT rt0.c6 FROM rt0, rt1 WHERE (CAST(x'' AS NUMERIC) COLLATE RTRIM); -- 0ms;
SELECT ALL COUNT(*) OVER (), rt0.c2, LAST_VALUE(ABS(DISTINCT rt0.c2) COLLATE NOCASE) OVER () FROM rt1, rt0 WHERE ((((LIKE('*p}6tWn[q', NULL)))=((((0.4906552321472697) BETWEEN ('') AND ('-1836234660')))))) GROUP BY (rt0.c5 IN ()), ((((((((((rt0.c1)AND(rt0.c5)))AND(((rt1.c2) NOTNULL))))AND(rt1.c0 COLLATE RTRIM)))AND(((rt0.c4)|(rt0.c0)))))AND(rt1.c1)), rt0.c3 HAVING ((json_insert(x'4f91', rt0.c0, rt1.c2))GLOB(rt1.c2)); -- 0ms;
SELECT DISTINCT CASE rt0.c6  WHEN ((NULL) ISNULL) THEN MIN(rt0.c5) WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt1.c0)) THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) THEN CAST(rt1.c2 AS TEXT) WHEN (+ (rt0.c6)) THEN TOTAL(rt0.c3) WHEN ((rt0.c2)IS NOT(rt1.c0)) THEN rt0.c3 END FROM rt1 WHERE ((((x'c0a5')) BETWEEN ((CASE WHEN NULL THEN '-729369053' WHEN '}撙6[퐧S' THEN 0X21cc3b7a WHEN x'' THEN 0.8762725840244902 ELSE 0.2906259444058312 END)) AND ((COALESCE(DISTINCT x'', 0.940756926941622, x'', '-1001661808')))));SELECT DISTINCT (MAX(rt1.c2) IN ()), ((CASE rt0.c6  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c3)))), (((rt0.c4)) BETWEEN ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c5)))) AND ((((rt0.c4)>>(rt1.c2))))) FROM rt0, rt1 WHERE (((('1558968529')) BETWEEN ((NULL COLLATE NOCASE)) AND ((CASE WHEN NULL THEN '0.5115503755141076' ELSE x'' END)))); -- 0ms;
SELECT ALL COUNT(((rt1.c1)>(rt0.c6))), (~ (GROUP_CONCAT(rt1.c1))), (((((rt0.c6)) BETWEEN ((rt1.c0)) AND (('1436713980'))))IS NOT(x'' COLLATE NOCASE)) FROM rt1 GROUP BY CAST(UNICODE(rt0.c3) AS INTEGER);SELECT ALL NULL FROM rt1, rt0 WHERE (((0.27273479376633825 COLLATE RTRIM) BETWEEN (UNLIKELY(DISTINCT '')) AND (0.22749818587526838))); -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c2)AND(rt1.c0)))OR(rt0.c4)))OR(NULL)))AND(rt0.c6)))OR(rt0.c6)))AND('-1416726611')))+(((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c0)))) FROM rt0 WHERE (CASE ((((NULL)AND(NULL)))AND(''))  WHEN load_extension(NULL, 0.43678883325813) THEN ((NULL) BETWEEN ('-207694248') AND ('0.04521890636006887')) WHEN (('')/('N/!0*IE')) THEN ((NULL)IS(x'd0a8')) WHEN UPPER(0.7864503047334309) THEN CAST(NULL AS INTEGER) ELSE CAST(0.9318360301311909 AS INTEGER) END);SELECT DISTINCT UPPER(json_object(rt0.c2, rt0.c6)) FROM rt1 LIMIT 1043854196 OFFSET -1514908295;SELECT DISTINCT (~ (MAX(rt1.c2))) FROM rt0, rt1; -- 0ms;
SELECT ((rt0.c1 COLLATE NOCASE) NOTNULL) FROM rt1 WHERE ((((0xffffffffab219e9e IN ())) NOTNULL));SELECT LOWER((~ (rt1.c0))), ((((rt0.c0)-(rt0.c2)))>>(x'')), NULL FROM rt0;SELECT ALL (((((rt0.c1)OR(rt0.c6)))OR(rt0.c3)) IN (0x21088e17)) FROM rt1 WHERE ((((0X450c024c)<<(0.9891106507970596)) IN ()));SELECT ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(TRIM(DISTINCT rt1.c1, rt0.c4))))OR(((((rt0.c5)AND(rt0.c6)))OR(rt0.c3)))) FROM rt1, rt0; -- 1ms;
SELECT ALL (CASE rt1.c1  WHEN '0.5175354634997578' THEN rt0.c4 END IN (rt0.c4 COLLATE NOCASE, (((rt0.c6, rt1.c0, 'z1')) NOT BETWEEN ((rt1.c1, rt0.c5, rt0.c5)) AND ((rt0.c0, rt1.c2, rt0.c4))))) FROM rt0 WHERE ((((x'7b1a')) BETWEEN ((ROUND(x'', '.0'))) AND ((x'746b')))) ORDER BY rt0.c6;SELECT UPPER(DISTINCT x'') FROM rt1, rt0 LIMIT -1262383606 OFFSET -2075475122; -- 0ms;
SELECT ALL (((NOT (rt1.c0)))+(CASE rt0.c5  WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c1 THEN 0.016133415084192526 END)), ((((rt0.c5)+(rt0.c3))) NOT NULL), ((AVG(rt0.c3))>=(((rt1.c1) IS TRUE))) FROM rt0;SELECT (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c6 THEN 'q3' WHEN rt0.c4 THEN rt0.c3 ELSE x'eac2' END)) AND ((UNLIKELY(rt0.c1)))) FROM rt0 WHERE (LAST_INSERT_ROWID() COLLATE RTRIM) ORDER BY rt0.c6 ASC, ('1821327430' IN ()), CASE (((rt0.c2))>((rt0.c3)))  WHEN ((rt0.c0) BETWEEN (rt1.c0) AND (rt1.c0)) THEN (rt1.c1 IN ()) WHEN LOWER(rt0.c1) THEN ((rt0.c5)|(rt0.c0)) WHEN (rt0.c1 IN (rt0.c5)) THEN ((rt0.c2)IS(rt0.c3)) ELSE rt0.c2 END DESC LIMIT 941708663 OFFSET 229103130;SELECT DISTINCT CAST(((rt0.c0) IS FALSE) AS TEXT), CASE WHEN rt0.c6 THEN LIKELIHOOD(DISTINCT rt1.c2, 0.6011494091706631) ELSE ((rt0.c0)*(rt1.c2)) END, ((((x'') BETWEEN (rt1.c1) AND (rt1.c1))) IS TRUE) FROM rt1 WHERE (((CASE ''  WHEN ')4W긂#i' THEN x'' WHEN x'' THEN x'' WHEN '-1205458404' THEN x'' ELSE '6(())''' END)<(x'a638' COLLATE RTRIM))) ORDER BY ((CAST(rt1.c2 AS TEXT)) IS TRUE);SELECT rt1.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE FROM rt1 WHERE ((((NULL, '-1e500', x'')) BETWEEN ((((x'') BETWEEN (0.15843472085221766) AND (NULL)), (NOT (x'')), CASE WHEN x'' THEN 0.16969600087219316 WHEN NULL THEN NULL WHEN 0.163993524649514 THEN '-1205022704' END)) AND (('-903930119' COLLATE BINARY, CAST('?ZLD' AS INTEGER), ((x'')==('1834436644')))))); -- 0ms;
SELECT ((IFNULL(DISTINCT rt0.c1, rt0.c6))LIKE(CASE rt1.c2  WHEN rt1.c1 THEN rt0.c0 END)) FROM rt0, rt1 WHERE ((((('2073059590') ISNULL))-(((x'') NOT BETWEEN (NULL) AND (0.9578702051430903))))); -- 0ms;
SELECT CAST(RTRIM(rt0.c1) AS BLOB) FROM rt1, rt0 WHERE ((~ (CASE -1199594511  WHEN x'' THEN x'' WHEN NULL THEN '[n)<Z' WHEN 'W[' THEN '' ELSE x'' END))) GROUP BY (NOT (CAST(rt0.c1 AS REAL))) LIMIT 558371781; -- 0ms;
SELECT DISTINCT rt0.c5, rt0.c2, (((CASE WHEN rt0.c6 THEN rt0.c4 END))=((((rt0.c1)&(rt0.c5))))) FROM rt1;SELECT DISTINCT (NULLIF(rt0.c1, rt1.c0) IN ()) FROM rt1 WHERE (((CAST(0.36328517780987 AS REAL)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((TRIM(DISTINCT rt0.c4, rt1.c0))OR(MAX(rt0.c1))))AND('' COLLATE NOCASE)), COUNT((- (rt1.c0))), ((((rt0.c4 COLLATE RTRIM)AND((+ (0x1b763dc4)))))AND((rt0.c3 IN ()))), (((rt1.c1)<=('1951162384')) IN (((rt0.c1)GLOB(rt1.c0)))), ((MIN(rt0.c1))*(((rt0.c4)<(rt0.c5)))) FROM rt0 ORDER BY CASE rt0.c5 COLLATE RTRIM  WHEN ((rt1.c0)%(0.6533026683161903)) THEN rt0.c1 COLLATE BINARY ELSE ((rt0.c5) IS FALSE) END;SELECT DISTINCT ((MAX(rt0.c0)) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c5))) AND (((rt0.c5)-(rt0.c6)))) FROM rt0, rt1 GROUP BY rt0.c2 HAVING (((rt1.c2 IN ()))|(x'')); -- 0ms;
SELECT DISTINCT COUNT(CASE rt0.c0  WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c6 END), (((rt0.c2 IN ()))<=((rt0.c2 IN (rt1.c0, rt0.c0)))), NTH_VALUE(CASE (NOT (0.6606478921867918))  WHEN -1.5121418E8 THEN (((x'06f9')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0))) WHEN (((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, '1333663316', rt0.c3)) AND ((rt0.c6, rt0.c4, rt0.c0))) THEN CASE WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c6 END WHEN (((0.7287276769513129, rt0.c5, rt0.c6))=((0xffffffffccddb0d9, rt0.c4, rt0.c3))) THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c5)))OR(rt0.c3)) ELSE (('+JrjXoD3') IS TRUE) END, ((CAST(rt0.c4 AS TEXT))IS((((rt0.c5))=((rt0.c6)))))) OVER () FROM rt0 GROUP BY '觀%', '', (rt0.c6 IN ()) ORDER BY (rt1.c0 IN (((rt0.c2)GLOB(0.8958684862269259)))), '1643027119' DESC;SELECT DISTINCT ((((rt0.c2)<>(rt0.c5))) IS FALSE) FROM rt0, rt1 WHERE (JULIANDAY((x'' IN (-1318863619)), (NOT (0.4166867460031689)), CAST(0.9311932258004618 AS TEXT))); -- 0ms;
