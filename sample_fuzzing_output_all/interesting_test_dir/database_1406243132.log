-- Time: 2024/06/07 07:28:43
-- Database: database32
-- Database version: 3.40.0
-- seed value: 1406243132
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 INT , c1 INT , c2 INTEGER , c3 INTEGER , c4 TEXT ); -- 3ms;
UPDATE OR IGNORE t0 SET c4=x'5ef7', c2='-1393506244' WHERE ((((- (t0.c2))))>=((((t0.c0)IS NOT(t0.c2))))); -- 1ms;
UPDATE OR REPLACE t0 SET c1=NULL; -- 1ms;
INSERT OR REPLACE INTO t0 VALUES ('', x'', '', -1.393506244E9, x'3692'), (0.5196171742532166, -0.0, 0.6882258900582072, '108067776', 0x4057f29d), (NULL, CAST(NULL AS TEXT) COLLATE RTRIM, '-1393506244', NULL, '-1393506244'), (NULL, NULL, x'', 0.7745087165228755, 0.2819679335231482), (NULL, NULL, 0X4057f29d, '14390533', NULL); -- 2ms;
ALTER TABLE t0 ADD COLUMN c81 BLOB; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c2=-805927915, c0=NULL WHERE NULL; -- 1ms;
REINDEX BINARY; -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
COMMIT; -- 0ms;
PRAGMA shrink_memory; -- 2ms;
PRAGMA temp.threads = -5282060729761580499; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c3=0X3022692c; -- 4ms;
UPDATE OR FAIL t0 SET c0=0.7745087165228755, c0=NULL, c2=1.08067776E8; -- 0ms;
PRAGMA main.cell_size_check; -- 1ms;
UPDATE OR ABORT t0 SET c4=NULL; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1, c81) VALUES (NULL, 0x4b2ceafd, 0.16713865180996956), (0xffffffffb2bb6da4, '}|', 0.5679708065206197), (x'', 0.4405943889733659, 0.7745087165228755); -- 0ms;
INSERT OR ABORT INTO t0(c1, c4, c2, c0, c81) VALUES (NULL, '&Y', '', '-1296339548', 'E0 '), ('0.5679708065206197', NULL, NULL, x'', x''), ('807561516', x'', NULL, -1.393506244E9, x''); -- 0ms;
PRAGMA main.recursive_triggers; -- 1ms;
UPDATE t0 SET (c4)=(0.658422113007172); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c3)=(0.2812104832275488) WHERE ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c4)) COLLATE RTRIM; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c81, c1, c81)=('q', 0.2812104832275488, '+\9/G[Mx'); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
COMMIT; -- 0ms;
UPDATE t0 SET (c4)=('-1'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA locking_mode; -- 0ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET c0=x'' WHERE ((COALESCE(DISTINCT '1373921213', '807561516')) NOT BETWEEN (t0.c0) AND ((t0.c2 IN (14390533)))); -- 2ms;
UPDATE OR IGNORE t0 SET (c4)=(0.4405943889733659); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
REINDEX  t0; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 AFTER INSERT ON t0 FOR EACH ROW  BEGIN SELECT RAISE(IGNORE);END; -- 3ms;
UPDATE OR IGNORE t0 SET (c81, c81, c81)=(1.373921213E9, '1764164333', 0.2812104832275488); -- 0ms;
UPDATE t0 SET (c1)=(x'b421'); -- 6ms;
ANALYZE t0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET c3=0.6951649035214407 WHERE (((CAST(t0.c1 AS NUMERIC), ((t0.c4) BETWEEN (t0.c0) AND (t0.c3)), t0.c0))>(((((t0.c4)) NOT BETWEEN ((t0.c2)) AND ((0.3150433387627196))), CAST(t0.c1 AS REAL), t0.c0))); -- 1ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
DELETE FROM t0 WHERE ((SUBSTR(NULL, '14390533')) NOT NULL); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c3, c0, c81, c1) VALUES (0.3206495368726707, 1.08067776E8, '3洿5E', NULL, 0.2819679335231482); -- 1ms;
INSERT OR ROLLBACK INTO t0(c4, c81, c1, c3, c2, c0) VALUES (0xffffffffb4d821bb, (((((((((((NULL))!=(('q'))))AND((('') ISNULL))))OR(1073974139 COLLATE NOCASE)))OR(((-1757815001)<(0.3524164747694024)))))AND(NULL COLLATE RTRIM)), NULL, 384290246, NULL, NULL); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (x'bc64', '-1534205360', CAST(SUBSTR(x'', NULL) AS TEXT), x'f852', x'c034', NULL); -- 5ms;
UPDATE t0 SET (c1)=(NULL) WHERE rtreenode((~ (x'')), t0.c3); -- 0ms;
REINDEX; -- 1ms;
REINDEX; -- 0ms;
ALTER TABLE t0 ADD COLUMN c52 INTEGER; -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('384290246'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c4)=(0.658422113007172); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL), (1090193631), (x''); -- 0ms;
UPDATE OR REPLACE t0 SET c3=NULL WHERE ((((t0.c4)<>(t0.c1)))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=749157739 noskipscan'); -- 1ms;
UPDATE OR IGNORE t0 SET c81=0xfffffffff9811d1d WHERE ((((((((CASE WHEN t0.c1 THEN t0.c4 END)AND(((t0.c4) ISNULL))))OR((~ (t0.c81)))))OR((((t0.c0))<>((t0.c1))))))AND(((t0.c0) IS TRUE))); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO t0(c81, c2, c4, c3, c52) VALUES ('384290246', x'', NULL, '-805927915', x''), ('-1393506244', 'D0', 'q', NULL, 'ᙉiF7*椟'), ('1e500', '1720036970', NULL, NULL, NULL); -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA incremental_vacuum(-2037852937); -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET (c0)=('K!갃\rP]qtG'); -- 7ms;
CREATE INDEX IF NOT EXISTS i82 ON t0(((CASE WHEN c4 THEN c1 WHEN c3 THEN c52 WHEN 0.4436691808997809 THEN c0 ELSE c1 END) ISNULL) COLLATE BINARY,(CASE 0.6240504954966168  WHEN c81 THEN c0 WHEN 0X2a9e6ccd THEN c3 WHEN c0 THEN c1 ELSE c1 END IN ()) COLLATE RTRIM,CAST(((c3)>=(x'9603')) AS NUMERIC) COLLATE RTRIM,((((((((((c0)+(c4)))AND((c52 IN ()))))OR('-1162147104')))OR((c4 IN (c81)))))AND(((((NULL)AND(c52)))AND(c52)))),(((c3, c3, c81)) NOT BETWEEN ((UNLIKELY(DISTINCT c4), ((c2)OR(x'b14d')), CAST(c81 AS REAL))) AND ((CAST(c0 AS TEXT), (c1 IN ()), (x'273a' IN ('807561516', c2))))) COLLATE NOCASE,x'' ASC,NULLIF(c4, c1) COLLATE RTRIM COLLATE NOCASE); -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0.6101056901095874); -- 2ms;
REINDEX RTRIM; -- 0ms;
UPDATE t0 SET c0=NULL, c3=0.17690892445822382 WHERE ((((((((((((NULL)AND(0.965664123785139)))AND(t0.c81 COLLATE NOCASE)))AND((t0.c52 IN ()))))AND(t0.c81 COLLATE RTRIM)))OR(((t0.c3)IS NOT(t0.c1)))))OR((t0.c1 IN (t0.c1)))); -- 3ms;
PRAGMA cache_size = 0; -- 0ms;
UPDATE OR ABORT t0 SET c1='0.3524164747694024', c52=0.4294281056628214, c0=490199309 WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'52ce', c3='1079505565'; -- 1ms;
CREATE VIRTUAL TABLE vt5 USING fts4(c0, notindexed=c0, tokenize=simple); -- 1ms;
INSERT INTO vt5(vt5, rank) VALUES('pgsz', '10794'); -- 0ms;
INSERT INTO vt5(vt5) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE t0 SET (c4)=('-805927915') WHERE (((t0.c2 COLLATE RTRIM))<((CASE WHEN t0.c0 THEN t0.c52 END))); -- 0ms;
INSERT INTO vt5(vt5, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt5(vt5) VALUES('merge=-1367086315,5');\n; -- 0ms;
INSERT INTO vt5(vt5) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES (NULL); -- 0ms;
REINDEX; -- 3ms;
UPDATE OR ABORT vt5 SET (c0)=(NULL) WHERE vt5.c0; -- 0ms;
PRAGMA temp.threads; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT t0.c2 FROM vt5, t0; -- 0ms;
SELECT ALL t0.c1 FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c4)) BETWEEN (((((t0.c2)) BETWEEN ((t0.c81)) AND ((t0.c52))), ((vt5.c0)<>(t0.c0)), ((((t0.c81)AND(vt5.c0)))OR(vt5.c0)))) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c81)), t0.c52, t0.c3))) DESC;SELECT DISTINCT (t0.c2 IN ()) COLLATE NOCASE FROM vt5; -- 0ms;
SELECT DENSE_RANK() OVER () FROM t0 WHERE (CASE WHEN (+ (0.5166628281080101)) THEN ((x'') NOTNULL) ELSE CAST(NULL AS REAL) END); -- 0ms;
SELECT ((((t0.c0)=(t0.c52)))||(CASE WHEN t0.c4 THEN t0.c2 WHEN 7.49157739E8 THEN t0.c1 WHEN t0.c4 THEN t0.c52 ELSE t0.c4 END)) FROM vt5 WHERE (CASE WHEN (NOT (x'')) THEN ((((x'')AND(NULL)))AND('||9d뇝j|S')) END);SELECT LEAD((~ (((NULL) BETWEEN (t0.c52) AND (t0.c81)))), ((((((t0.c81) NOT BETWEEN (t0.c52) AND (t0.c4)))OR(vt5.c0 COLLATE RTRIM)))AND((t0.c81 IN ()))), t0.c2) OVER () FROM vt5, t0; -- 0ms;
SELECT TOTAL((((t0.c2)) BETWEEN ((t0.c3)) AND ((t0.c2)))) OVER () FROM t0 GROUP BY json_patch(((t0.c81) ISNULL), CASE WHEN t0.c52 THEN t0.c1 WHEN t0.c81 THEN t0.c4 WHEN t0.c52 THEN t0.c2 ELSE vt5.c0 END) HAVING MIN(NULL);SELECT ALL PERCENT_RANK() OVER ( ORDER BY CAST(((((NULL)OR(vt5.c0)))OR('Nἑ')) AS BLOB) ASC) FROM t0, vt5 WHERE (0.298810355363581); -- 0ms;
SELECT (((CASE t0.c1  WHEN t0.c81 THEN t0.c81 ELSE t0.c4 END))<>((CASE t0.c81  WHEN t0.c3 THEN t0.c81 END))) FROM vt5, t0 WHERE (NULL) ORDER BY MAX((+ (t0.c2)), CAST(t0.c4 AS NUMERIC))  NULLS LAST; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0, vt5 WHERE ((((- (-148234479)))%((((0x4057f29d))!=((-1.08978915E8)))))); -- 0ms;
SELECT DISTINCT UPPER((t0.c3 IN (t0.c81))), (~ ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((vt5.c0))))), ((((vt5.c0)OR(t0.c1)))OR(NULL)) COLLATE RTRIM FROM t0;SELECT DISTINCT (- ((~ ('(.')))) FROM vt5, t0 WHERE (LOWER(DISTINCT CASE WHEN 'I姻[&' THEN ',Cj(' WHEN x'' THEN 3.84290246E8 WHEN '-1296339548' THEN x'482a' ELSE 1.373921213E9 END)); -- 0ms;
SELECT DISTINCT (((((t0.c52 IN ()))OR((+ (vt5.c0)))))AND((NOT (t0.c52)))), ((((t0.c1)<>(vt5.c0)))||(TOTAL(t0.c81))), CAST(AVG(t0.c1) AS BLOB) FROM t0, vt5; -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), (((((t0.c3)>=(t0.c81))))>(((((t0.c3)) BETWEEN ((t0.c81)) AND ((t0.c2)))))), t0.c81 FROM t0, vt5; -- 0ms;
SELECT DISTINCT CASE (((t0.c1)) NOT BETWEEN ((t0.c3)) AND ((t0.c4)))  WHEN SUM(NULL) THEN t0.c4 END FROM vt5 LIMIT 1764164333;SELECT ALL (UNLIKELY(t0.c2) IN ()), CUME_DIST() OVER (), (rtreenode(t0.c3, t0.c52) IN ()) FROM t0, vt5 LIMIT 14390533; -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c1))<<(LOWER(x''))), (((CASE WHEN t0.c4 THEN t0.c1 ELSE x'' END, (+ (NULL)), ((t0.c1) IS FALSE)))<((NULL, CASE WHEN t0.c4 THEN t0.c3 ELSE t0.c0 END, CASE WHEN t0.c81 THEN t0.c81 END))), CASE ((t0.c0)*(vt5.c0))  WHEN UPPER(t0.c2) THEN SUM(t0.c0) WHEN (('t넃')<(t0.c1)) THEN t0.c81 WHEN ((vt5.c0)!=(t0.c1)) THEN t0.c2 COLLATE RTRIM END FROM t0, vt5 WHERE (((CASE WHEN 0X40313460 THEN -1868336971 WHEN x'2b70' THEN '7c' WHEN 0.5196171742532166 THEN x'' END) ISNULL)); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS TEXT)) ISNULL), (((((t0.c52) NOT BETWEEN (t0.c1) AND (NULL))))==((((t0.c2) BETWEEN (t0.c52) AND (t0.c81))))), t0.c52, ((json_patch(t0.c4, t0.c3)) IS FALSE), (NOT (CASE '1076966496'  WHEN t0.c0 THEN t0.c2 WHEN vt5.c0 THEN t0.c3 WHEN t0.c81 THEN t0.c81 END)) FROM t0, vt5; -- 0ms;
SELECT ALL LOWER(((t0.c2) NOTNULL)) FROM vt5 WHERE (CASE ('-683868284' IN (0.3150433387627196))  WHEN CASE 0xffffffff9de312c5  WHEN 0.4591606086778264 THEN '3洿5E' END THEN ((NULL)*(1079505565)) WHEN 0.14962650791342758 THEN ((0.09265732425756623) NOTNULL) WHEN (+ (0.7936278264299108)) THEN (('-181198833')IS NOT(-2113475131)) END) ORDER BY (+ (CAST(0Xffffffffd20bf2af AS NUMERIC))) ASC;SELECT ALL (((t0.c2, vt5.c0, '1547780589')) BETWEEN ((((t0.c3)==(t0.c4)), t0.c81, ((('-1080211459'))!=((t0.c2))))) AND ((((t0.c4)==(t0.c4)), '0.2819679335231482', t0.c0))), TRIM(t0.c52), (((vt5.c0, t0.c2, -798408850))<((vt5.c0, vt5.c0, t0.c3))) COLLATE RTRIM, ((((t0.c2) IS FALSE)) NOT BETWEEN ((- (t0.c2))) AND ((+ (t0.c4)))), ABS(DISTINCT t0.c3) COLLATE BINARY FROM t0;SELECT DISTINCT t0.c3 FROM vt5 LIMIT 1331481874;SELECT ALL ((0X5c4141ed) BETWEEN (t0.c52 COLLATE RTRIM) AND ((((t0.c0))!=((vt5.c0))))) FROM t0;SELECT DISTINCT (((((t0.c3))<((vt5.c0)))) IS TRUE) FROM t0 WHERE ((- (0.16713865180996956 COLLATE BINARY))) GROUP BY (((((vt5.c0, t0.c52, t0.c2)) BETWEEN ((t0.c3, t0.c52, t0.c0)) AND ((t0.c4, x'ccbe', 0.2432849282291667))))>>(((t0.c4) NOT BETWEEN (t0.c81) AND (t0.c2))));SELECT ((+ (t0.c2)) IN ()) FROM vt5 WHERE (CAST('1547780589' COLLATE RTRIM AS REAL)); -- 0ms;
SELECT DISTINCT CAST('1117453679' AS INTEGER), SUM(0.27383378057924035) OVER ( ORDER BY ((((CASE t0.c3  WHEN t0.c2 THEN t0.c2 ELSE '' END)OR(t0.c2 COLLATE BINARY)))AND((((('-1244942620')AND(t0.c3)))AND(vt5.c0))))  NULLS LAST), TOTAL(t0.c52 COLLATE RTRIM) OVER () FROM t0, vt5 WHERE (((NULL) NOT BETWEEN (x'' COLLATE NOCASE) AND ((817607133 IN ('-805927915', x''))))); -- 0ms;
SELECT ALL CASE ((t0.c4)OR(t0.c2))  WHEN ((t0.c3)<<(vt5.c0)) THEN ((t0.c81)&(t0.c81)) ELSE ((vt5.c0) ISNULL) END FROM t0, vt5 WHERE ((~ ((+ (x'a1fd'))))); -- 0ms;
SELECT ((((((((((((t0.c2)AND(t0.c52)))AND(t0.c0)))OR(t0.c4)))OR(t0.c3)))AND(t0.c2)))OR(NULL)) COLLATE RTRIM, (((t0.c0)+(t0.c0)) IN ()), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c81)) COLLATE BINARY FROM t0, vt5; -- 0ms;
SELECT (t0.c52 IN ()) COLLATE RTRIM, '8gPl[X', LIKELIHOOD(DISTINCT (t0.c52 IN ()), 0.441673481266311) FROM vt5, t0 GROUP BY t0.c2 COLLATE RTRIM LIMIT -491286851 OFFSET -491286851; -- 0ms;
SELECT CAST(t0.c52 AS NUMERIC) COLLATE RTRIM FROM vt5;SELECT ALL (((t0.c0)) NOT BETWEEN ((((t0.c2)/(t0.c0)))) AND ((((t0.c4) IS TRUE)))) FROM vt5;SELECT DISTINCT NULLIF(DISTINCT TOTAL_CHANGES(), t0.c4), '0.7936278264299108', t0.c4, GROUP_CONCAT(((((((((((((vt5.c0)AND(t0.c81)))OR(t0.c2)))OR(t0.c2)))AND(0.7857045878926062)))AND(t0.c2)))AND(t0.c4))), COUNT((t0.c81 IN ())) OVER () FROM t0 WHERE ((CAST(x'' AS TEXT) IN ())) LIMIT 2114631978;SELECT ((((t0.c1)IS(t0.c0))) NOT NULL) FROM t0 WHERE ((+ (LOWER(DISTINCT 0.7892724168008144)))); -- 0ms;
SELECT ALL ((((((t0.c52)OR(t0.c1)))AND(t0.c1)))>(t0.c1 COLLATE RTRIM)) FROM t0, vt5 WHERE (TYPEOF('91176501') COLLATE BINARY); -- 0ms;
SELECT DISTINCT (NOT (CAST(t0.c52 AS INTEGER))), CASE ((((vt5.c0)OR(t0.c4)))AND(t0.c0))  WHEN ((((t0.c52)OR(t0.c52)))OR(t0.c0)) THEN vt5.c0 ELSE ((t0.c0)>=(t0.c4)) END, CAST(t0.c0 AS BLOB) FROM vt5 GROUP BY ((CASE t0.c52  WHEN NULL THEN t0.c52 END) NOT BETWEEN (vt5.c0 COLLATE BINARY) AND ('?2ૠB\A'));SELECT DISTINCT (((((((((- (t0.c52)))OR(TOTAL(t0.c81))))AND(CASE t0.c52  WHEN t0.c52 THEN t0.c4 WHEN t0.c52 THEN t0.c0 WHEN t0.c1 THEN t0.c81 ELSE 'uT<q-9&' END)))OR(((t0.c1) ISNULL))))OR((+ (t0.c4)))) FROM vt5;SELECT ALL t0.c4 FROM t0, vt5 WHERE (((((0xe199568) BETWEEN (0.4405943889733659) AND (x'6a56'))) ISNULL)); -- 0ms;
SELECT ALL ((((((t0.c81)>(t0.c2)))OR(((t0.c52)LIKE(t0.c81)))))OR(((t0.c81)<>(t0.c1)))), 'SPO-~S,gy', ((((t0.c0) NOT BETWEEN (t0.c52) AND (t0.c3))) NOT NULL) FROM vt5, t0 WHERE (((0.1865401859515945)>>('91176501')) COLLATE NOCASE) ORDER BY TOTAL_CHANGES() ASC; -- 0ms;
SELECT DISTINCT AVG(((NULL) ISNULL)), t0.c0, ((((((t0.c52) NOT BETWEEN (t0.c2) AND (t0.c1)))AND((t0.c4 IN ()))))OR(AVG(vt5.c0))) FROM vt5 WHERE (CASE WHEN (NULL IN ()) THEN (((NULL, 0.779772195404579, x'd067'))>((NULL, x'4719', '807561516'))) ELSE 0xffffffffb32c097a END) LIMIT 951976959;SELECT DISTINCT t0.c1 FROM t0, vt5 WHERE ((- (TIME('', NULL, 0.9730138870607065)))); -- 0ms;
SELECT ALL NULL FROM t0 WHERE (TRIM(DISTINCT NULLIF(DISTINCT 0x23a1e06d, NULL), ((x'bdd4') ISNULL))); -- 0ms;
SELECT NULL FROM vt5 LIMIT -1833313897; -- 0ms;
SELECT DISTINCT (('+wm?ppy\')<(((x'') IS TRUE))) FROM t0 GROUP BY (((t0.c4)/(t0.c1)) IN (CASE t0.c1  WHEN t0.c1 THEN t0.c3 WHEN 0.3524164747694024 THEN vt5.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END, CASE vt5.c0  WHEN '2^^ꠤ*Mლ྆Y' THEN t0.c52 ELSE t0.c81 END)) HAVING (((0.6698285739166651))<>((t0.c0))) COLLATE NOCASE COLLATE RTRIM;SELECT DISTINCT (((t0.c4, vt5.c0, vt5.c0)) BETWEEN (((- (vt5.c0)), t0.c2, t0.c4)) AND ((((t0.c81) BETWEEN (t0.c0) AND (t0.c0)), '-1534205360', COALESCE(t0.c4, t0.c81)))) FROM t0, vt5; -- 0ms;
SELECT ALL (t0.c2 IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT t0.c0, 0.7154585995523413))>((- (t0.c4)))) FROM vt5, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT x'', (- (CASE t0.c3  WHEN 0.5679708065206197 THEN t0.c3 END)), SUM(((((((((((((t0.c81)AND(t0.c2)))AND(vt5.c0)))AND(t0.c4)))AND('V/')))OR(t0.c3)))AND(t0.c2))) OVER () FROM t0, vt5 WHERE ((((x'726c' IN ()))!=(json_remove(951976959, '', 0.5196171742532166, 0.23238492496332486))));SELECT DISTINCT CAST(((((vt5.c0)AND(x'')))OR(t0.c1)) AS INTEGER) FROM t0, vt5 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST(TOTAL(t0.c2) AS NUMERIC) FROM t0; -- 0ms;
SELECT ALL INSTR('', CASE x''  WHEN vt5.c0 THEN '' END) FROM t0, vt5 WHERE ((+ (((NULL) NOT BETWEEN ('-760852751') AND (0.6698285739166651))))) LIMIT 783981112 OFFSET -1810691174; -- 1ms;
SELECT DISTINCT IFNULL(((t0.c81) BETWEEN (t0.c2) AND (t0.c3)), NULL) FROM vt5, t0 GROUP BY json_patch(((t0.c2) BETWEEN (t0.c3) AND (t0.c1)), ((t0.c52)>(t0.c4))) HAVING CAST((((t0.c52, t0.c1, vt5.c0)) BETWEEN ((t0.c52, vt5.c0, t0.c3)) AND ((t0.c52, vt5.c0, t0.c2))) AS REAL); -- 0ms;
SELECT DISTINCT ((((((t0.c81) NOT BETWEEN (t0.c4) AND (vt5.c0)))AND(((t0.c2) BETWEEN ('-17468929') AND (t0.c2)))))AND((- (t0.c3)))) FROM vt5;SELECT ALL ((CASE t0.c52  WHEN t0.c1 THEN t0.c81 END)||((~ (t0.c4)))), CASE WHEN CASE WHEN t0.c4 THEN t0.c81 END THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c81)OR(t0.c3)) THEN CASE vt5.c0  WHEN t0.c4 THEN t0.c1 END WHEN ((vt5.c0)GLOB(t0.c52)) THEN (NOT ('-1367086315')) END, ((((MAX(t0.c1))AND('uT<q-9&')))OR(CAST(t0.c81 AS NUMERIC))), LOWER(DISTINCT ((t0.c2)OR(t0.c0))), ((ABS(t0.c52)) NOTNULL), CAST((-1e500 IN ()) AS BLOB), ((TRIM(t0.c4, t0.c0)) ISNULL) FROM vt5, t0; -- 1ms;
SELECT DISTINCT (t0.c2 IN ()), ((CASE t0.c81  WHEN t0.c3 THEN t0.c52 END)*((((t0.c0)) BETWEEN ((vt5.c0)) AND ((t0.c52))))), 'd˭몤2' FROM vt5, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (+ (t0.c3)) COLLATE NOCASE FROM vt5;SELECT DISTINCT SUM(((x'') NOT BETWEEN (t0.c2) AND (t0.c2))) FROM t0, vt5 WHERE (((((CASE WHEN NULL THEN x'e922' WHEN NULL THEN 0.3285832345604902 WHEN NULL THEN NULL ELSE '-863280985' END)AND((- ('1506220456')))))OR(((('783981112')) NOT BETWEEN ((0.2819679335231482)) AND ((NULL)))))); -- 0ms;
SELECT COUNT(*) FROM vt5, t0 WHERE ((NOT ((('')!=(''))))); -- 0ms;
SELECT ALL CAST((((t0.c52)) NOT BETWEEN ((t0.c4)) AND ((t0.c3))) AS BLOB) FROM vt5, t0; -- 1ms;
SELECT ALL '' FROM vt5, t0 GROUP BY ((t0.c0) IS TRUE) HAVING '炵X'; -- 0ms;
SELECT DISTINCT CAST(vt5.c0 AS INTEGER) COLLATE BINARY FROM vt5, t0; -- 0ms;
SELECT DISTINCT CHAR((((t0.c0)) BETWEEN ((vt5.c0)) AND ((t0.c3)))) FROM t0;SELECT ALL (((((((((- (t0.c52)))OR(CASE WHEN t0.c52 THEN t0.c1 ELSE t0.c3 END)))AND((NOT (x'd27b')))))OR(((t0.c2) IS TRUE))))AND(vt5.c0)), AVG(t0.c52), CAST(CAST(0.6484192529745925 AS TEXT) AS INTEGER), ROW_NUMBER() OVER ( ORDER BY (('J|n\<-')<(((t0.c52) NOT BETWEEN (t0.c52) AND (x'')))) ASC), (~ (LIKE(t0.c81, vt5.c0))) FROM t0, vt5 WHERE (CASE CASE WHEN x'' THEN NULL WHEN '-137978836' THEN 0xfffffffff9c8cbe0 WHEN x'2ecf' THEN 556228885 END  WHEN (NOT (0.27090175939055317)) THEN (('Xtt!ql')LIKE(715025613)) ELSE ((NULL)>>(NULL)) END); -- 0ms;
SELECT ALL (~ (CASE t0.c1  WHEN t0.c52 THEN vt5.c0 ELSE vt5.c0 END)) FROM vt5 WHERE ('TRUE');SELECT CAST(COUNT(*) AS REAL) FROM t0, vt5 WHERE (((0.3150433387627196)-('NJ')) COLLATE NOCASE); -- 0ms;
SELECT ALL '' FROM vt5, t0 WHERE (CASE 8.17607133E8  WHEN '1138363820' THEN 0.837322300695123 END COLLATE BINARY) GROUP BY ((((t0.c4)<>(t0.c4))) NOTNULL), ((((((((((((t0.c4 COLLATE RTRIM)OR(((('+FO.y', t0.c52, t0.c3))>((t0.c52, t0.c4, t0.c0))))))AND((((t0.c0)) BETWEEN ((vt5.c0)) AND ((vt5.c0))))))AND(((t0.c81)GLOB(t0.c2)))))AND(vt5.c0 COLLATE RTRIM)))OR(((((t0.c3)OR(t0.c3)))AND(t0.c52)))))AND(CAST(t0.c52 AS NUMERIC))), (((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c52 THEN t0.c52 WHEN t0.c4 THEN t0.c2 ELSE t0.c2 END))<=((t0.c52 COLLATE RTRIM))) HAVING NULL; -- 0ms;
SELECT DISTINCT ((t0.c0) IS TRUE), '221927032', (((t0.c4 IN ())) ISNULL) FROM t0, vt5 WHERE (((LOWER(0xffffffffe589e8ea)) ISNULL)); -- 0ms;
SELECT ((t0.c52) IS TRUE) COLLATE BINARY FROM vt5;SELECT DISTINCT t0.c3, ((CAST(t0.c81 AS TEXT)) ISNULL), ROW_NUMBER() OVER () FROM vt5 WHERE (((('')) BETWEEN ((((NULL) NOT NULL))) AND (((+ (''))))));SELECT DISTINCT COUNT(*) OVER () FROM vt5, t0 WHERE ((((('I_+>!o') NOT BETWEEN (x'') AND (x'')))OR('} ˭FUgꭍ縌'))) LIMIT -781180452; -- 1ms;
SELECT DISTINCT CAST(CASE t0.c52  WHEN t0.c1 THEN t0.c4 ELSE t0.c4 END AS INTEGER) FROM vt5 ORDER BY CAST(DATE(t0.c1, t0.c4, vt5.c0) AS TEXT)  NULLS LAST, ABS(t0.c81) COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST, (- (((t0.c0) IS FALSE))) DESC;SELECT ((MAX(t0.c81))<((+ (t0.c81)))) FROM vt5, t0 GROUP BY (((vt5.c0)) NOT BETWEEN ((t0.c1)) AND (('1433973759'))) COLLATE BINARY HAVING 0.08021127881338852; -- 6ms;
SELECT DISTINCT ((((t0.c1) NOTNULL))&(CAST(0.7220467478163055 AS NUMERIC))) FROM vt5 WHERE (((TIME('', '\rLe', 0X297cb27f)) BETWEEN ((('') NOT BETWEEN (NULL) AND (x''))) AND ((NOT ('-805927915')))));SELECT ALL '-1810691174', RANK() OVER (), (((t0.c1 COLLATE RTRIM))<((UNICODE(NULL)))) FROM t0, vt5 GROUP BY t0.c81, (~ (((t0.c52) ISNULL))), CASE ((t0.c81)<=(t0.c1))  WHEN ((t0.c2) NOT NULL) THEN TRIM(t0.c52, t0.c1) END HAVING CAST(t0.c4 AS REAL); -- 0ms;
SELECT ((((0.7642596739824773) NOT BETWEEN (t0.c4) AND (vt5.c0)))<=((t0.c4 IN ()))) FROM t0 WHERE (PRINTF((~ (0.7936278264299108)), RTRIM(1547780589), CAST('5fr]' AS TEXT)));SELECT 1636674878 FROM vt5 WHERE (highlight(-32795325, (~ (NULL)), (((('+FO.y')AND(NULL)))OR(0.5196171742532166)), NULL)); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c4 THEN t0.c2 ELSE t0.c81 END AS TEXT) FROM vt5, t0 WHERE (CASE WHEN 0Xffffffffacf0c83c COLLATE BINARY THEN LIKELY('') WHEN ((((x'5f68')AND('J뇝')))AND('-1968761916')) THEN CASE WHEN NULL THEN 0.42228938454712883 END WHEN NULL THEN CASE x''  WHEN x'' THEN 0.25965013150883054 END ELSE ((((NULL)OR('0FᏄP')))OR(0.4436691808997809)) END); -- 1ms;
SELECT ALL NULL, (((((((t0.c2, t0.c2, '-1013913861')) NOT BETWEEN ((0X4b2ceafd, t0.c0, t0.c81)) AND ((t0.c81, t0.c81, t0.c52))))AND(TRIM(DISTINCT t0.c52, t0.c3))))AND(COALESCE(t0.c4, t0.c3))), (vt5.c0 IN ()) FROM t0; -- 0ms;
SELECT ALL COUNT(((t0.c52)>>(t0.c1))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c3 COLLATE RTRIM AS INTEGER) FROM vt5;SELECT LEAD(((t0.c81) ISNULL), 0x54235d66, NULL) OVER () FROM t0 WHERE ((- ((- ('ᔙლz'))))); -- 0ms;
SELECT ALL (t0.c52 COLLATE BINARY IN ()) FROM t0, vt5 WHERE ((((((NULL))>((''))))AND(((NULL)*(1.079505565E9))))); -- 0ms;
SELECT DISTINCT vt5.c0, ((('-1162147104')) BETWEEN (((- (t0.c2)))) AND (((NOT (t0.c81))))), ((((((t0.c81)OR(vt5.c0)))AND(t0.c2))) BETWEEN (((t0.c3) IS FALSE)) AND ((((t0.c1, t0.c4, t0.c4)) BETWEEN ((t0.c2, t0.c0, t0.c4)) AND ((t0.c1, t0.c1, t0.c3))))) FROM vt5, t0 WHERE ((json_array_length(x'') IN (((NULL)>('284587869')), 0.6884565981491065 COLLATE NOCASE))) GROUP BY (NULLIF(t0.c2, t0.c52) IN ()) HAVING ((((x'')AND(((t0.c52) IS FALSE))))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c4 END));SELECT DISTINCT (((((((t0.c1)OR(t0.c81)))OR(t0.c3)), ((t0.c81) BETWEEN (t0.c81) AND (t0.c81)), ((t0.c3)AND(t0.c1))))>((t0.c52 COLLATE NOCASE, CAST(vt5.c0 AS TEXT), CASE WHEN t0.c81 THEN x'' END))) FROM t0 WHERE (((((((x'57bb')OR(-1244942620)))OR(NULL)))>>(((x'')+(0.5354927744800475)))));SELECT DISTINCT CASE ((t0.c1) NOT BETWEEN (t0.c52) AND (t0.c0))  WHEN (- (t0.c81)) THEN x'' ELSE x'' END, (((UPPER(DISTINCT t0.c52), t0.c2 COLLATE BINARY, ((((t0.c3)AND(t0.c52)))OR(t0.c0))))>(((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c0))), (~ (vt5.c0)), (((t0.c52)) NOT BETWEEN ((t0.c1)) AND ((t0.c81)))))), CASE WHEN 0.6145619245300035 THEN t0.c52 COLLATE RTRIM WHEN LIKELIHOOD(DISTINCT t0.c81, 0.6544559586443123) THEN ((t0.c2) NOT BETWEEN (vt5.c0) AND (t0.c81)) WHEN ((t0.c81) ISNULL) THEN ((vt5.c0) IS TRUE) END FROM t0;SELECT DISTINCT (((((x'', t0.c2, t0.c4, t0.c52, t0.c0)) NOT BETWEEN ((t0.c1, t0.c4, '', t0.c3, t0.c1)) AND ((t0.c2, t0.c52, t0.c0, t0.c3, t0.c2))))*(CASE t0.c4  WHEN t0.c0 THEN t0.c3 ELSE vt5.c0 END)), COUNT(((t0.c4) NOTNULL)), ((HEX(vt5.c0))&(t0.c81)) FROM vt5;SELECT DISTINCT SQLITE_COMPILEOPTION_USED((NOT (t0.c4))) FROM vt5;SELECT DISTINCT ((vt5.c0) IS TRUE) FROM t0 ORDER BY (((((t0.c0)|(t0.c3))))==((CASE WHEN t0.c2 THEN t0.c0 END)))  NULLS LAST;SELECT TOTAL(CASE t0.c81  WHEN t0.c3 THEN vt5.c0 ELSE 0.10042093559927079 END) OVER (), NTILE(LIKELIHOOD(t0.c2 COLLATE NOCASE, 0.09535377465083761)) OVER (), (((((vt5.c0))>=((t0.c81)))) NOT BETWEEN (t0.c4) AND ((t0.c2 IN (t0.c81)))) FROM t0, vt5; -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0, vt5 WHERE ((~ ((((x'', NULL, x'5b5b'))==((0.9064519167309961, 1.08067776E8, 0.16878396833540643)))))); -- 0ms;
SELECT ((COUNT(t0.c4)) ISNULL) FROM vt5, t0; -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(t0.c1, 0.5819131157696288))<(CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c52 THEN 0.7476416422756783 WHEN t0.c3 THEN vt5.c0 END)) FROM t0;SELECT (((UNLIKELY(t0.c3), t0.c3 COLLATE BINARY, t0.c52))>((CASE WHEN t0.c1 THEN t0.c52 ELSE t0.c52 END, ((t0.c1) NOT BETWEEN (t0.c4) AND (t0.c52)), ((t0.c2) NOTNULL)))), ((((((((TOTAL(t0.c52))AND(COUNT(*))))OR(CAST(t0.c81 AS REAL))))OR(((t0.c1)&(t0.c52)))))AND(COUNT(*))), NTH_VALUE(CAST(CASE x''  WHEN t0.c1 THEN vt5.c0 END AS INTEGER), (~ ((- (t0.c1))))) OVER ( ORDER BY ((CASE t0.c52  WHEN vt5.c0 THEN t0.c4 WHEN t0.c81 THEN t0.c4 WHEN x'' THEN t0.c0 END) IS TRUE) ASC) FROM vt5, t0 WHERE ((((((((((('-473282078')!=(NULL)))OR(((NULL) BETWEEN ('-1297460330') AND ('ᙉiF7*椟')))))AND(((x'')/(x'32fa')))))OR((((((((('266825023')OR(0.8834477269919124)))OR('790061691')))OR('0.4436691808997809')))AND(0.39000142420608597)))))AND((((7.83981112E8, '', 'TcKF<\Zu%'))<((NULL, '-1833313897', 0.6882258900582072))))));SELECT DISTINCT NULL, ((0.39000142420608597) NOT NULL), ((t0.c81) BETWEEN (t0.c52) AND (t0.c3)) COLLATE RTRIM COLLATE BINARY FROM t0 WHERE ('oErE'); -- 0ms;
SELECT ((COALESCE(DISTINCT t0.c81, t0.c2)) BETWEEN (CASE WHEN t0.c81 THEN t0.c52 END) AND (CAST(vt5.c0 AS BLOB))) FROM vt5, t0 WHERE ((((NULL) NOT BETWEEN ('瀁{4') AND ('E0 ')) IN ((NOT (-8.63280985E8))))); -- 0ms;
SELECT DISTINCT CASE WHEN LIKELIHOOD(DISTINCT t0.c1, 0.7920989566515322) THEN CAST(t0.c52 AS NUMERIC) END FROM t0, vt5 WHERE (9.51976959E8); -- 1ms;
SELECT DISTINCT NULL, ((((t0.c52)&(vt5.c0)))IS NOT(((((t0.c52)OR(t0.c81)))OR(t0.c2)))), (((((t0.c2)OR(t0.c2)))OR(vt5.c0)) IN (0.16719099104973512)) FROM vt5;SELECT DISTINCT (((t0.c1))>((t0.c1 COLLATE RTRIM))) FROM t0, vt5 ORDER BY ((t0.c81)AND(t0.c0)) COLLATE BINARY ASC  NULLS FIRST LIMIT -32795325; -- 0ms;
SELECT DISTINCT (((t0.c81 IN (t0.c2, vt5.c0))) NOT NULL), IFNULL(DISTINCT ((vt5.c0) IS FALSE), ((t0.c3)|(t0.c4))), 0.2141020694373027 FROM t0 WHERE (CAST((0.3233876834245639 IN ()) AS REAL));SELECT DISTINCT (+ (vt5.c0 COLLATE BINARY)), ((('-1013913861' IN (t0.c2))) ISNULL), NULL FROM t0 WHERE (((x'') ISNULL) COLLATE NOCASE);SELECT ALL ((((t0.c1) NOT NULL))<(AVG(t0.c52))), COUNT(*), CASE ((t0.c3)||(t0.c3))  WHEN GROUP_CONCAT(t0.c81) THEN x'' WHEN '\rs볮_' THEN (- (t0.c3)) WHEN ((t0.c4) NOT NULL) THEN t0.c3 COLLATE BINARY END FROM vt5, t0 WHERE (((((((((((-582998728)OR('-1297991300')))OR(0.43088387951866836)))OR('F\䌶~C')))AND(NULL)))/(((x'')/(x''))))); -- 1ms;
SELECT DISTINCT CAST(t0.c4 AS INTEGER) FROM t0 WHERE (CASE WHEN CHANGES() THEN ((((((((x'1bc5')OR(NULL)))OR(0.2141020694373027)))AND(x'')))AND(NULL)) END); -- 0ms;
SELECT ((t0.c3)&(t0.c52)) COLLATE NOCASE, t0.c1, (((t0.c81 IN ())) IS TRUE) FROM t0 WHERE ((- (CASE NULL  WHEN NULL THEN 0X21276115 END))); -- 0ms;
SELECT DISTINCT '184345476', (((t0.c2)+(t0.c3)) IN ()), COUNT(*) OVER () FROM t0, vt5 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((t0.c1, t0.c81, t0.c1)) NOT BETWEEN ((((t0.c3) BETWEEN (t0.c3) AND (t0.c2)), ((NULL)-(t0.c1)), CASE WHEN t0.c81 THEN t0.c1 ELSE t0.c4 END)) AND ((NULLIF(DISTINCT '', NULL), ((t0.c81) BETWEEN (vt5.c0) AND (vt5.c0)), t0.c0))), ((((0.11104576885570139) NOT BETWEEN (t0.c52) AND (0Xfffffffff939fa6e)))-(((t0.c52) BETWEEN (0.763512062456205) AND (t0.c52)))), (((((t0.c4) NOTNULL)))<=(((((t0.c0, vt5.c0, vt5.c0))<>((vt5.c0, vt5.c0, t0.c3)))))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c81) NOT BETWEEN (t0.c52) AND (t0.c1)) AS BLOB) FROM vt5, t0 GROUP BY CAST(t0.c52 AS NUMERIC) ORDER BY IFNULL(t0.c2 COLLATE BINARY, '-1459130113') DESC; -- 0ms;
SELECT DISTINCT HEX(DISTINCT x'8946') FROM vt5, t0 WHERE ((((('U_넾-Z') BETWEEN (x'd2d7') AND (0.5089431860810315))) BETWEEN (x'') AND (NULL COLLATE BINARY))); -- 0ms;
SELECT (+ (COUNT(*))) FROM t0, vt5 WHERE (((NULL COLLATE NOCASE) BETWEEN (((((((((0.12044820337483764)OR(1584496883)))AND(x'')))AND(x'7551')))AND(x''))) AND (TYPEOF('2054305593')))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt5 WHERE (CAST((((NULL, '951976959', 696038015)) NOT BETWEEN ((x'cffe', 0.6340447913954324, x'')) AND ((x'9553', NULL, NULL))) AS INTEGER)) LIMIT 2106324404 OFFSET -683268880; -- 0ms;
SELECT ALL CASE WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c81)) THEN ((t0.c4) NOT BETWEEN (vt5.c0) AND (vt5.c0)) ELSE 0.7785116989342543 END FROM t0;SELECT ((t0.c81)<(((((t0.c81)OR(t0.c81)))AND(t0.c0)))), CAST(((t0.c52)%(-913037185)) AS REAL), ((t0.c52) NOT BETWEEN (((t0.c4)>>(t0.c81))) AND (((('1926455005')) BETWEEN ((t0.c3)) AND ((t0.c52))))) FROM t0, vt5 WHERE (((CASE 7.49157739E8  WHEN NULL THEN -1.968761916E9 END)||((((x''))<=(('epC/y\nHb	')))))); -- 1ms;
SELECT ((((NULL)OR(((((t0.c52)OR(0.6882258900582072)))OR(t0.c52)))))AND(MAX(t0.c0))), (((((0.12260101660217615, t0.c4, vt5.c0))>((t0.c3, t0.c1, t0.c52)))) NOT BETWEEN (-414781915) AND (((((((((t0.c1)OR(t0.c1)))OR(t0.c4)))AND(t0.c2)))OR(t0.c3)))), COUNT(((t0.c0)>>(t0.c3))), TYPEOF(((t0.c81)==(t0.c1))), t0.c52 FROM vt5, t0; -- 0ms;
SELECT DISTINCT (- ((((vt5.c0))==((t0.c3))))) FROM vt5, t0 WHERE (((((0.5148367196283136)%(0.9773850040098424)))+(((x'')LIKE(0.5166628281080101))))); -- 0ms;
SELECT (1049270983 COLLATE RTRIM IN (((t0.c1) IS FALSE))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c3 FROM vt5 INDEXED BY i82, t0;SELECT DISTINCT t0.c2 FROM vt5, t0 GROUP BY ((((((vt5.c0) NOT BETWEEN (t0.c1) AND (vt5.c0)))OR(((vt5.c0)&(t0.c3)))))OR(((((t0.c0)AND(t0.c2)))OR(vt5.c0)))) HAVING ((vt5.c0) IS FALSE); -- 0ms;
SELECT ALL LAG(CASE t0.c4 COLLATE NOCASE  WHEN CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN '0.16719099104973512' THEN t0.c4 WHEN NULL THEN t0.c0 END THEN CASE WHEN t0.c52 THEN t0.c0 END ELSE COALESCE(t0.c3, t0.c52) END, CASE WHEN ((t0.c52)%(t0.c52)) THEN ((t0.c81) IS FALSE) WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c4 END THEN CASE NULL  WHEN vt5.c0 THEN t0.c52 ELSE vt5.c0 END WHEN vt5.c0 THEN t0.c0 COLLATE RTRIM ELSE CASE t0.c52  WHEN '3' THEN t0.c81 WHEN t0.c4 THEN t0.c3 WHEN vt5.c0 THEN t0.c52 ELSE t0.c3 END END, ((vt5.c0)>=(((t0.c2)/(t0.c0))))) OVER (), SUM(CASE WHEN t0.c3 THEN t0.c2 END), 1.662260809E9 FROM vt5, t0 ORDER BY LOWER(CASE t0.c3  WHEN t0.c52 THEN t0.c52 END)  NULLS FIRST, TRIM(t0.c1)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c0))>=((t0.c1))) COLLATE RTRIM FROM t0, vt5; -- 0ms;
SELECT ALL (t0.c81 IN ()), t0.c81, ((((t0.c2) IS FALSE)) NOT NULL) FROM t0 CROSS JOIN vt5 ON 'uh'; -- 0ms;
SELECT ALL (((((t0.c3, t0.c1, t0.c3, '826466143', t0.c2)) BETWEEN ((t0.c4, vt5.c0, t0.c2, t0.c4, t0.c4)) AND ((t0.c1, t0.c3, t0.c3, vt5.c0, t0.c1))))>=(((t0.c0) IS FALSE))), t0.c52, (((t0.c0)) BETWEEN ((COUNT(*))) AND ((SUM(t0.c52)))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT ((t0.c0) NOT NULL) FROM t0 WHERE ((CAST('-582998728' AS BLOB) IN ())); -- 0ms;
SELECT ALL ((((((((((((((((vt5.c0)AND(t0.c3)))AND(t0.c0)))AND(-1.296339548E9)))AND(t0.c4)))AND(t0.c1)))OR(t0.c1)))AND('eE{ithiER')))AND(t0.c0 COLLATE NOCASE)), (((t0.c2 IN ()))*(((vt5.c0) BETWEEN (t0.c3) AND (t0.c81)))), (((((t0.c0 IN ()))AND(CAST(t0.c1 AS REAL))))OR(((t0.c3)>>(t0.c4)))) FROM t0;SELECT CAST(t0.c81 AS REAL) COLLATE NOCASE FROM vt5;SELECT (((t0.c3)) BETWEEN ((CAST(vt5.c0 AS REAL))) AND ((CAST(vt5.c0 AS TEXT)))), ((vt5.c0) NOT NULL), json_array_length(LIKELIHOOD(DISTINCT t0.c3, 0.7035717175830524)) FROM vt5;SELECT DISTINCT SUM(((t0.c52)>(t0.c52))) OVER () FROM t0, vt5 WHERE (((('904224984' IN (NULL)))>=((((('F')OR(0x59c719a8)))OR(x''))))); -- 0ms;
SELECT DISTINCT ((t0.c2) NOTNULL), AVG(((t0.c52) ISNULL)) OVER (), LAST_INSERT_ROWID() FROM vt5 WHERE (((0xffffffffd20bf2af)IS(NULL)) COLLATE BINARY);SELECT ALL (((t0.c1, t0.c3, '-1561230750', t0.c52, t0.c2)) BETWEEN ((GROUP_CONCAT(t0.c4), t0.c4 COLLATE RTRIM, CASE t0.c0  WHEN NULL THEN NULL ELSE t0.c2 END, t0.c81 COLLATE RTRIM, t0.c1)) AND ((RTRIM(t0.c2), ((t0.c1) BETWEEN (t0.c4) AND (t0.c81)), (((t0.c52))>=((t0.c81))), ((t0.c1) BETWEEN ('1261234941') AND (t0.c81)), CAST(t0.c2 AS INTEGER)))) FROM t0, vt5 WHERE ((- (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((((((t0.c1)OR(t0.c2)))OR(t0.c81)))AND('돿G')))OR(x'')), ABS(DISTINCT CAST(t0.c0 AS BLOB)), (- ((- (t0.c4)))) FROM vt5, t0; -- 1ms;
SELECT ALL ((((t0.c2)*(t0.c4)))<(MIN(t0.c3))), TRIM(COUNT(*), CASE WHEN vt5.c0 THEN t0.c52 ELSE -760475430 END), IFNULL(load_extension(t0.c52, t0.c2), CAST(vt5.c0 AS INTEGER)) FROM vt5, t0;SELECT CUME_DIST() OVER (), TOTAL(((t0.c52)<<('1834381313'))) FILTER(WHERE ((((((((vt5.c0 COLLATE RTRIM)OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c4)OR(t0.c4)))))AND(CASE WHEN t0.c81 THEN t0.c2 WHEN t0.c2 THEN t0.c52 WHEN t0.c2 THEN t0.c3 ELSE t0.c0 END)))AND(((t0.c4) NOT BETWEEN (t0.c1) AND (t0.c0))))) OVER (), ((((((x'') NOT NULL))OR(((t0.c3)=(t0.c0)))))AND((((t0.c2)) NOT BETWEEN ((t0.c4)) AND ((t0.c4))))) FROM vt5, t0; -- 0ms;
SELECT ((((0.5469117949188953)AND(CASE WHEN '1256498230' THEN t0.c4 WHEN ',cj(' THEN '' WHEN t0.c3 THEN t0.c2 ELSE t0.c3 END)))OR(t0.c1 COLLATE NOCASE)) FROM t0 WHERE ((((x'5773')) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((((0.8978205811012643)<=(0.6484192529745925)))))) GROUP BY (((+ (t0.c3)))GLOB(TYPEOF(t0.c0))); -- 0ms;
SELECT DISTINCT CASE ((((((((((((vt5.c0)OR(NULL)))AND(t0.c52)))OR(t0.c1)))OR(t0.c2)))OR(t0.c1)))OR(t0.c0))  WHEN ((t0.c0) NOT NULL) THEN (~ (t0.c81)) ELSE CASE t0.c1  WHEN t0.c52 THEN vt5.c0 ELSE t0.c81 END END FROM vt5, t0 WHERE ((+ (x'61dc')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(((vt5.c0)%(t0.c0)) AS NUMERIC) FROM t0, vt5; -- 0ms;
SELECT DISTINCT 0.2035125922995038 FROM t0 GROUP BY CASE WHEN ((((t0.c1)AND(NULL)))OR(t0.c0)) THEN 0.27383378057924035 END HAVING TYPEOF(((NULL)-(t0.c1))); -- 0ms;
SELECT DISTINCT NULL, COUNT(*) OVER (), load_extension(((((t0.c3)OR(t0.c3)))OR(t0.c4))) FROM t0 WHERE (CASE WHEN (NOT (0xffffffffd0a7f8c4)) THEN (x'' IN (NULL, '-1455153036')) WHEN ((x'')>=(1720036970)) THEN CAST(0Xffffffff9739df27 AS REAL) WHEN ' rh%9' THEN (- ('-108978915')) ELSE ((((x'')AND(x'5e86')))AND(NULL)) END);SELECT DISTINCT CAST(((((t0.c81)AND('1547780589')))AND('-337458459')) AS TEXT) FROM vt5;SELECT ALL (((((t0.c81)) NOT BETWEEN ((t0.c81)) AND ((vt5.c0))))*(CASE t0.c2  WHEN t0.c4 THEN t0.c52 WHEN t0.c2 THEN t0.c1 WHEN vt5.c0 THEN t0.c4 ELSE t0.c4 END)), ((((((((((t0.c2)>>(t0.c81)))AND(CASE WHEN t0.c4 THEN t0.c52 WHEN t0.c4 THEN vt5.c0 WHEN t0.c1 THEN x'2984' END)))OR(CASE WHEN t0.c4 THEN t0.c2 ELSE t0.c81 END)))AND(CASE t0.c0  WHEN 'Y<E-O''q2' THEN t0.c52 END)))OR(IFNULL(t0.c1, t0.c2))), ((((NOT (t0.c81)), (- (t0.c2)), ((t0.c52)LIKE(t0.c3))))<((CASE WHEN t0.c3 THEN t0.c4 END, CAST(t0.c0 AS REAL), ((((t0.c1)OR(t0.c4)))AND(vt5.c0))))) FROM t0, vt5; -- 0ms;
SELECT DISTINCT (+ (t0.c52)) FROM t0, vt5 WHERE (((x'') IS FALSE)); -- 0ms;
SELECT DISTINCT TOTAL((('3')||(t0.c4))) OVER () FROM vt5;SELECT ALL ((((t0.c4)+(t0.c1))) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((((t0.c52)AND(t0.c4)))OR(t0.c81)))) FROM t0 LIMIT 1286607724 OFFSET 91176501; -- 0ms;
SELECT ALL NULL FROM vt5, t0; -- 0ms;
SELECT ALL ((CASE WHEN t0.c81 THEN NULL ELSE t0.c52 END)*(t0.c1)), ((((t0.c52)!=(t0.c0)))+(((vt5.c0) NOT NULL))), ((((('R\rZ%') NOT BETWEEN (t0.c4) AND (t0.c4))))!=(((t0.c52 IN (0.09265732425756623, t0.c3))))) FROM vt5 NOT INDEXED NATURAL JOIN t0; -- 1ms;
SELECT NULL FROM t0 WHERE (((('', x'', -387240130)) BETWEEN ((NULL, 0.779772195404579, 2.114631978E9)) AND ((x'a916', 1.092402414E9, x''))) COLLATE NOCASE); -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(CAST('隳_' AS INTEGER)), (((t0.c0)) NOT BETWEEN ((((t0.c52) NOTNULL))) AND ((LIKELY(DISTINCT t0.c1)))), ((((((t0.c52)OR(vt5.c0)))AND(t0.c3))) NOT BETWEEN (CASE WHEN t0.c3 THEN t0.c4 END) AND (((((((((NULL)OR(t0.c3)))OR(t0.c2)))OR(t0.c0)))AND(t0.c0)))), (((t0.c1 COLLATE BINARY))>((t0.c1))), t0.c52 COLLATE BINARY FROM t0, vt5 WHERE (((((NULL) NOT NULL))OR('X7'))) GROUP BY ((CASE WHEN t0.c0 THEN t0.c1 ELSE vt5.c0 END)|(((((((((t0.c2)OR(t0.c2)))OR(t0.c52)))OR(t0.c1)))AND(t0.c52)))) HAVING ((CAST(t0.c3 AS NUMERIC))+(0.9160431519813854)) ORDER BY ((ABS(t0.c4))>=(CASE WHEN t0.c4 THEN t0.c0 ELSE t0.c81 END))  NULLS LAST; -- 0ms;
SELECT ALL (((t0.c0) BETWEEN (NULL) AND (t0.c1)) IN ()), ((((((t0.c3) IS FALSE))OR((NOT (t0.c1)))))AND(((((((((t0.c3)OR(t0.c1)))AND(vt5.c0)))OR(x'')))OR(t0.c4)))), CASE 'M0Er' COLLATE RTRIM  WHEN NULLIF(DISTINCT t0.c4, t0.c52) THEN (((t0.c1))<>((t0.c4))) ELSE COUNT(t0.c4) END FROM t0;SELECT x'' FROM t0 LIMIT 1786535512; -- 0ms;
SELECT ALL '1584496883' FROM vt5 ORDER BY ((json_array(t0.c4, vt5.c0)) NOTNULL) ASC, ((CAST(t0.c4 AS INTEGER))-((((t0.c1))>((vt5.c0)))));SELECT ALL ((MIN(t0.c52))<=((t0.c1 IN (t0.c4)))), TOTAL(0.3373401434813811), ((((t0.c3) ISNULL))GLOB(CASE t0.c0  WHEN t0.c1 THEN t0.c3 END)) FROM vt5 WHERE (UPPER(((((-1.2979913E9)AND(x'')))AND(''))));SELECT GROUP_CONCAT((t0.c81 IN ())) FROM t0, vt5; -- 0ms;
SELECT CAST(RTRIM(t0.c1) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c3 COLLATE RTRIM) ISNULL) FROM t0 GROUP BY (('-1169092368') BETWEEN (CASE WHEN NULL THEN t0.c81 ELSE t0.c81 END) AND (((vt5.c0)IS(t0.c81)))) HAVING IFNULL(LIKELY(DISTINCT t0.c81), CAST(0.621101630543394 AS INTEGER)) ORDER BY (NOT (((t0.c4) IS TRUE))) DESC  NULLS FIRST;SELECT (~ (json_array_length(t0.c2, vt5.c0))) FROM vt5 GROUP BY (+ (((t0.c52) NOT BETWEEN (t0.c4) AND (t0.c0)))) HAVING t0.c3 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM;SELECT DISTINCT (((t0.c3)) NOT BETWEEN ((((t0.c4) BETWEEN (t0.c2) AND (t0.c3)))) AND ((((t0.c2) BETWEEN (t0.c2) AND ('M?tUqc]D'))))), (((t0.c4 COLLATE BINARY))>((CAST(vt5.c0 AS NUMERIC)))), (((((NULL IN ()))OR(((t0.c52)IS NOT(t0.c1)))))OR(x'')) FROM vt5 GROUP BY ((CASE WHEN t0.c3 THEN vt5.c0 WHEN t0.c4 THEN t0.c4 WHEN NULL THEN vt5.c0 END)&(TOTAL_CHANGES())), (- (CAST(vt5.c0 AS INTEGER))), t0.c81 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM HAVING COUNT(AVG(((t0.c0)<>(t0.c2))));SELECT DISTINCT ((CAST(-6.83868284E8 AS INTEGER))*((~ (t0.c2)))) FROM vt5, t0 WHERE (load_extension(CAST('魅]xqD#R' AS BLOB))) LIMIT -1836808356; -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (vt5.c0) AND (t0.c81)) FROM t0;SELECT DISTINCT ((((((((((t0.c81)AND(t0.c3)))OR(t0.c81)))AND(t0.c4)))AND(t0.c4))) NOT BETWEEN ((t0.c1 IN ())) AND ((((t0.c81)) BETWEEN ((t0.c0)) AND ((t0.c52))))) FROM vt5 GROUP BY t0.c4 HAVING (((((t0.c4)) NOT BETWEEN ((t0.c4)) AND ((t0.c4)))) BETWEEN (((t0.c81)-(t0.c1))) AND ((vt5.c0 IN (t0.c2))));SELECT (((((((((- (t0.c81)))OR(((((0.7325646900983447)AND(t0.c3)))OR(t0.c3)))))OR(vt5.c0 COLLATE BINARY)))AND(CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE vt5.c0 END)))OR(((t0.c81)&(t0.c3)))), FIRST_VALUE(x'') OVER (), TOTAL(CAST(t0.c3 AS TEXT)) COLLATE RTRIM FROM vt5;SELECT DISTINCT x'11da', t0.c2, LENGTH(((t0.c2) ISNULL)) FROM t0 WHERE (CAST(CAST(0.42228938454712883 AS TEXT) AS REAL)); -- 0ms;
SELECT TOTAL(x'') OVER (), CAST(t0.c52 AS BLOB) COLLATE NOCASE, (vt5.c0 COLLATE RTRIM IN ()) FROM vt5, t0 WHERE ((~ (''))) ORDER BY ((((vt5.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (((t0.c52) NOTNULL)) AND (NULL)), (((((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c1))))<=((t0.c2 COLLATE NOCASE))), CASE WHEN ((t0.c81)=(t0.c1)) THEN ((t0.c3)<=(t0.c3)) ELSE (x'' IN (t0.c81)) END ASC; -- 0ms;
SELECT DISTINCT ((((COUNT(*))AND(COUNT(t0.c2))))OR(SUM(t0.c1))) FROM vt5, t0 ORDER BY (- (((t0.c3) NOT NULL))); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT (((-1260904005, t0.c4, 0.04003057927142062, t0.c52, t0.c81)) NOT BETWEEN ((x'', t0.c1, t0.c0, t0.c81, vt5.c0)) AND ((t0.c81, vt5.c0, t0.c4, NULL, t0.c3))), (t0.c4 IN ())), t0.c3, DENSE_RANK() OVER () FROM t0;SELECT ALL (~ ((t0.c81 IN ()))) FROM vt5, t0; -- 0ms;
SELECT ((((t0.c3)OR(t0.c2)))AND(t0.c4)) COLLATE BINARY FROM t0, vt5 WHERE (((CAST('1715438208' AS BLOB))LIKE(CASE WHEN NULL THEN 0.24306152418214533 WHEN 'K|鿹ඎW(' THEN NULL WHEN x'' THEN x'c4ee7c53' WHEN 0.9270825044931624 THEN '魅]xqd#r' WHEN -6.83868284E8 THEN x'ca6a' ELSE NULL END))); -- 0ms;
SELECT ALL (((t0.c2)) BETWEEN ((((t0.c4)LIKE(t0.c81)))) AND ((COUNT(*)))), (((t0.c52)) NOT BETWEEN ((NULL)) AND ((TRIM(DISTINCT '', t0.c3)))), vt5.c0 FROM t0 WHERE ((((NULL)) NOT BETWEEN ((((NULL)<<(0.9438638186268391)))) AND ((((0.23238492496332486) NOT BETWEEN (-1.08978915E8) AND (x'')))))) GROUP BY (((t0.c1)<>(t0.c1)) IN ());SELECT ALL (CAST(t0.c4 AS REAL) IN ()), GROUP_CONCAT(UPPER(DISTINCT t0.c0) COLLATE RTRIM), CAST((t0.c0 IN ()) AS NUMERIC) FROM t0, vt5 WHERE ((((~ (0.9349895782723985))) ISNULL)) ORDER BY JULIANDAY(((t0.c0)%(t0.c2)), (((t0.c2))<((vt5.c0))), '1485237106') DESC  NULLS LAST, (~ (LIKELY(t0.c4))) DESC; -- 0ms;
SELECT DISTINCT (- (t0.c3)) COLLATE NOCASE, ((((((t0.c0)>=(t0.c52)))AND((((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c52))))))OR((~ (t0.c1)))), CASE ((t0.c81) IS FALSE)  WHEN MAX(t0.c3) THEN (NOT (vt5.c0)) END FROM t0;SELECT GROUP_CONCAT(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c4 END) FROM t0; -- 0ms;
SELECT ALL '622536644' FROM vt5; -- 0ms;
SELECT (NOT (t0.c0)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT COUNT(*) OVER () FROM vt5, t0; -- 0ms;
SELECT (CASE t0.c2  WHEN t0.c3 THEN t0.c1 END IN ((((t0.c2))<>((t0.c3))))) FROM t0, vt5; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) NOT BETWEEN (vt5.c0) AND (t0.c2))) FROM t0;SELECT DISTINCT GROUP_CONCAT((((t0.c3)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))), ((((((((((((t0.c3)AND(t0.c81)))AND(t0.c4)))OR((((NULL))<=((t0.c3))))))AND(CAST(t0.c1 AS TEXT))))OR(COUNT(t0.c1))))OR(((((x'')OR(vt5.c0)))AND(t0.c81)))), CASE (((t0.c1))<=((t0.c52)))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c52)) END FROM t0;SELECT ALL GROUP_CONCAT(COUNT(*)) FROM t0, vt5;SELECT DISTINCT (~ (((t0.c0) ISNULL))), TOTAL((((t0.c52, t0.c52, t0.c2)) NOT BETWEEN ((vt5.c0, x'', t0.c2)) AND ((t0.c4, t0.c0, t0.c52)))) OVER (), ((0X5791ea8f) BETWEEN (CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN vt5.c0 WHEN '-1721847549' THEN vt5.c0 END) AND (CASE WHEN t0.c81 THEN t0.c1 END)), t0.c52, '8.91DPH' FROM vt5, t0 WHERE ((((('v/')-(-1223838991))) NOT BETWEEN (((0.20143534856859424)>>(x''))) AND (((x'')AND(NULL))))); -- 0ms;
SELECT DISTINCT vt5.c0 FROM vt5 WHERE ((+ (1007751046)) COLLATE NOCASE) ORDER BY ((((((t0.c2)AND(t0.c3)))OR(t0.c2))) NOTNULL)  NULLS LAST;SELECT DISTINCT ((((t0.c81)|(t0.c0)))%(CAST(t0.c0 AS BLOB))) FROM t0 GROUP BY vt5.c0, TRIM(0.937810749071338), ((t0.c0) NOTNULL) COLLATE NOCASE HAVING x'f8d1';SELECT ((((t0.c3)<(t0.c2)))+((t0.c52 IN (t0.c4)))), RANK() OVER (), ((((t0.c0)AND(t0.c3)))>((- (t0.c1)))) FROM vt5 WHERE (0.39206618998767473);SELECT DISTINCT AVG(TOTAL_CHANGES()) OVER () FROM vt5, t0 WHERE ((~ ('5c&v' COLLATE NOCASE))); -- 0ms;
SELECT NULL FROM t0 WHERE ('-36808197'); -- 0ms;
SELECT ALL (((('now')AND(((vt5.c0) NOT BETWEEN (t0.c4) AND (t0.c4)))))OR(((vt5.c0)+(t0.c0)))) FROM vt5;SELECT ALL ((((t0.c1)OR(t0.c4)))AND(t0.c1)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL ((-1393506244 COLLATE RTRIM)&(x'')) FROM vt5 LIMIT 578626983 OFFSET -1013913861; -- 0ms;
SELECT ROW_NUMBER() OVER (), CASE WHEN vt5.c0 COLLATE NOCASE THEN vt5.c0 COLLATE NOCASE ELSE ((t0.c52) BETWEEN (t0.c81) AND (vt5.c0)) END, ((CASE t0.c3  WHEN t0.c81 THEN t0.c81 END)%((t0.c0 IN ()))) FROM vt5, t0 GROUP BY ((t0.c52) ISNULL) HAVING ((MIN(t0.c52))<((('oErE')*(t0.c52)))); -- 0ms;
SELECT (+ (t0.c52 COLLATE RTRIM)) FROM vt5, t0; -- 0ms;
SELECT (((+ (vt5.c0))) IS TRUE) FROM t0, vt5 WHERE ((((0.9919291472783697)) BETWEEN ((NULL)) AND (((('449192775')|(NULL)))))) LIMIT 1117453679 OFFSET -1313931996; -- 0ms;
SELECT COUNT(((t0.c81)==(t0.c52))) OVER ( GROUPS BETWEEN x'e0347ca08e33' FOLLOWING AND  UNBOUNDED FOLLOWING) FROM vt5, t0 ORDER BY ((((t0.c1 COLLATE NOCASE)AND((t0.c0 IN ()))))OR((t0.c3 IN (t0.c3)))) DESC; -- 1ms;
SELECT ALL t0.c2, CASE WHEN vt5.c0 COLLATE RTRIM THEN t0.c52 ELSE t0.c1 COLLATE NOCASE END, ((0.8788624091223325)+(t0.c0)) COLLATE RTRIM FROM t0, vt5; -- 0ms;
SELECT DISTINCT CAST(GLOB(t0.c52, vt5.c0) AS BLOB) FROM vt5 WHERE (((0.526851665309633 COLLATE BINARY) BETWEEN ((((-2.113475131E9, '-913037185', x'b7b0', 0.7458370911903229, '', 'Km', 0.6295117537493334))>((x'4cae', x'', '었P', '0.6951649035214407', x'51e0', 0.8107576269893824, '#e')))) AND ((- ('-1182329743')))));SELECT ALL (((t0.c1)IS NOT(t0.c4)) IN (((((t0.c81)OR(t0.c2)))AND(t0.c1)), (- (vt5.c0)), ((((t0.c52)OR(t0.c1)))OR(t0.c1)), SUM(vt5.c0))), COUNT((- (t0.c3))) FILTER(WHERE CAST(CAST(vt5.c0 AS BLOB) AS INTEGER)) OVER (), vt5.c0 FROM vt5, t0 WHERE (((x'')|(NULL)) COLLATE NOCASE) ORDER BY t0.c0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING), CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c52 THEN '0.7785116989342543' WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END COLLATE RTRIM, ((((t0.c4, t0.c3, vt5.c0)) BETWEEN ((t0.c2, t0.c81, t0.c81)) AND ((t0.c3, t0.c4, t0.c3))) IN ()) FROM vt5 WHERE (((((CAST(NULL AS TEXT))OR(((x'')>(0X4a4ec420)))))AND((NOT ('807561516')))));SELECT ALL (((NOT (t0.c0))) BETWEEN (((t0.c3)||(t0.c0))) AND ((((t0.c4, t0.c52, NULL, t0.c3, t0.c81))<((0.02750522160244262, t0.c3, t0.c2, t0.c0, t0.c1))))) FROM vt5 WHERE (((('0V', x'', NULL)) NOT BETWEEN ((NULL, (~ (x'')), ((0X5685c67f) BETWEEN (x'') AND (0Xffffffffbbcc41a2)))) AND (((NULL IN ()), json_extract(0X442803e6, x'da4b'), '1628382031')))) ORDER BY ((((((((((vt5.c0) NOT NULL))OR(((NULL)>=(t0.c1)))))AND(json_quote(t0.c3))))AND(CASE t0.c3  WHEN t0.c2 THEN t0.c0 ELSE vt5.c0 END)))OR(t0.c2)) ASC  NULLS FIRST, NULLIF(t0.c0, CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)  NULLS FIRST, (((((((((NOT (vt5.c0)))OR(((t0.c4)-(t0.c0)))))AND(((((((((((((x'855274ad')OR(t0.c52)))OR(vt5.c0)))AND(t0.c0)))AND(t0.c4)))OR(t0.c0)))OR(t0.c4)))))AND(t0.c52)))OR(((t0.c2) NOT BETWEEN (t0.c81) AND (t0.c52)))) DESC;SELECT DISTINCT (((((((((t0.c3 IN (t0.c4)))AND(((((t0.c81)AND(t0.c81)))OR(t0.c4)))))OR(((((t0.c1)AND(t0.c81)))AND(vt5.c0)))))OR(((((((((t0.c4)OR(0.9981432595525754)))OR(vt5.c0)))AND(t0.c52)))OR(t0.c2)))))OR((((t0.c81)) BETWEEN ((vt5.c0)) AND ((t0.c81))))) FROM t0, vt5 LIMIT 1547780589; -- 0ms;
SELECT CAST(((t0.c1)>=(vt5.c0)) AS INTEGER), MAX(((t0.c2) NOT BETWEEN (t0.c4) AND (t0.c2))), CASE WHEN ((t0.c81) BETWEEN (vt5.c0) AND (t0.c81)) THEN LOWER(DISTINCT t0.c1) END FROM vt5, t0 WHERE (CASE WHEN ((('-0.0')) BETWEEN ((480735079)) AND ((''))) THEN (~ (x'')) ELSE (~ (-2091877579)) END); -- 1ms;
SELECT DISTINCT ((((t0.c0)>=(NULL)))<(NULL)) FROM t0 WHERE (((STRFTIME(NULL, 'eE{ithiER', x''))>>(CASE 1e500  WHEN '+W' THEN 1.547780589E9 WHEN '631269663' THEN x'' WHEN NULL THEN x'' END))); -- 0ms;
SELECT ((CASE WHEN t0.c1 THEN t0.c4 END)GLOB(((t0.c2) NOT NULL))), (((NOT (t0.c81)))>>((+ (t0.c2)))), ((NULL)>>((t0.c1 IN ()))) FROM t0 WHERE ((((('390928897')IS NOT('rKMh'))) NOT BETWEEN ((('-1364762056') BETWEEN (NULL) AND (NULL))) AND ((NOT (''))))); -- 0ms;
SELECT DISTINCT AVG((~ (t0.c2))) OVER () FROM vt5 INDEXED BY i82;SELECT DISTINCT (UPPER(DISTINCT t0.c2) IN (NULLIF(t0.c1, t0.c52), (((t0.c1)) BETWEEN ((t0.c52)) AND ((t0.c2))))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT CASE (((t0.c52)) NOT BETWEEN ((t0.c2)) AND ((t0.c3)))  WHEN CAST(vt5.c0 AS REAL) THEN AVG(t0.c1) ELSE ((((NULL)OR(t0.c0)))OR(t0.c3)) END FROM vt5, t0; -- 1ms;
SELECT NULL, ((((t0.c1)>(vt5.c0)))==(CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt5.c0 THEN t0.c4 ELSE t0.c2 END)), (((t0.c2)) NOT BETWEEN ((MAX(t0.c2))) AND ((CAST(t0.c52 AS REAL)))) FROM vt5, t0 WHERE (CAST((~ ('')) AS TEXT)); -- 0ms;
SELECT DISTINCT vt5.c0 FROM vt5, t0 GROUP BY (t0.c0 COLLATE BINARY IN ()), ((((((t0.c1)OR(t0.c3)))AND(t0.c52))) BETWEEN ((((t0.c4)) BETWEEN ((NULL)) AND ((vt5.c0)))) AND (((t0.c4) BETWEEN (t0.c1) AND (-3.6808197E7)))), t0.c3; -- 0ms;
SELECT FIRST_VALUE((+ ((t0.c0 IN (t0.c2))))) OVER ( PARTITION BY LIKE(t0.c4, t0.c81, 'f') COLLATE RTRIM, CASE WHEN t0.c4 COLLATE RTRIM THEN ((t0.c0)&(t0.c0)) ELSE (t0.c2 IN ()) END), CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c4)|(t0.c52)) WHEN '0.6484192529745925' THEN CAST(t0.c2 AS TEXT) WHEN CASE WHEN t0.c81 THEN t0.c4 END THEN x'' ELSE ((t0.c0)<(t0.c81)) END, ((((INSTR(vt5.c0, vt5.c0))AND((t0.c0 IN ()))))AND(((t0.c0)=(t0.c81)))) FROM t0, vt5 WHERE (((((((((((((x'a2c0ea2c')OR('3')))AND(x'')))AND('N_')))OR(0.5666327135771647)))AND(0.2534650320318258)))AND(x'')) COLLATE RTRIM); -- 0ms;
SELECT CASE CAST(t0.c3 AS INTEGER)  WHEN 0.253919414899642 THEN ((NULL)|(t0.c0)) END FROM t0 WHERE (((CAST('-1753583968' AS INTEGER)) NOT BETWEEN (((x'') IS FALSE)) AND (((0.3855486634844043)==(NULL))))) LIMIT -216600748 OFFSET 1707186637; -- 0ms;
SELECT ALL CASE WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c81 END THEN t0.c3 END FROM vt5 INDEXED BY i82;SELECT DISTINCT (((t0.c3, t0.c2, 438800555)) BETWEEN ((NULL, (t0.c3 IN ()), t0.c4 COLLATE BINARY)) AND ((((t0.c4)>=(NULL)), ((NULL)LIKE(t0.c2)), CAST(t0.c52 AS REAL)))) FROM vt5;SELECT MIN((('') NOT BETWEEN (t0.c1) AND (vt5.c0)), CASE WHEN t0.c52 THEN vt5.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c3 THEN vt5.c0 ELSE t0.c81 END), '-1393506244', (((t0.c2, t0.c0, '1876835322')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c52)), ((((x'5cf2')AND(t0.c2)))AND(t0.c4)), '-760475430')) AND ((vt5.c0 COLLATE NOCASE, CAST(t0.c3 AS NUMERIC), LOWER(vt5.c0)))) FROM vt5 ORDER BY t0.c0  NULLS LAST;SELECT DISTINCT TOTAL((- (vt5.c0))) FROM t0, vt5 WHERE ((NOT (CAST(x'7f81' AS NUMERIC)))); -- 0ms;
SELECT ((((x'') IS TRUE)) NOT NULL), (HEX(DISTINCT t0.c1) IN ()), ((t0.c2) IS FALSE) FROM vt5 WHERE (NULL) ORDER BY IFNULL(DISTINCT NULLIF(t0.c3, t0.c0), t0.c1 COLLATE RTRIM) DESC  NULLS LAST, CASE vt5.c0  WHEN t0.c4 THEN t0.c2 ELSE x'52bd' END COLLATE BINARY  NULLS FIRST;SELECT ((t0.c0 COLLATE BINARY) BETWEEN ((+ (t0.c52))) AND (0Xffffffffe8f1de16)) FROM vt5 WHERE (CASE WHEN (((NULL, 0.02323939859783053, NULL))<>((x'6f65', 0.5196171742532166, '}{'))) THEN ((0.7892724168008144) NOTNULL) WHEN TRIM(DISTINCT x'') THEN (('0.3233876834245639') BETWEEN ('1384318053') AND (x'')) WHEN CASE WHEN '-491286851' THEN NULL END THEN 0X618dad3e END);SELECT ALL (~ ((t0.c3 IN ()))) FROM t0 WHERE ((((((((((~ ('')))OR((((6.96038015E8, '4M]?', 0.7737366618901987)) NOT BETWEEN ((1834381313, -1721847549, NULL)) AND ((0xfffffffff16957f1, NULL, 'hDd'))))))OR(x'' COLLATE RTRIM)))AND((~ (-1.757815001E9)))))OR(CASE 0.5687164582145366  WHEN '흜>൞o' THEN 0x5ef7bf59 ELSE 'X{8F' END))); -- 0ms;
SELECT DISTINCT 0.444948073077842, (- (((t0.c4)>>(x'')))), ((t0.c52 IN ()) IN (((t0.c0)AND(t0.c3)), (t0.c2 IN ()))) FROM vt5 GROUP BY (((NOT (t0.c3))) NOT BETWEEN (HEX(DISTINCT t0.c81)) AND ((((t0.c0))>=((t0.c1)))));SELECT (((t0.c4)) BETWEEN ((t0.c4 COLLATE RTRIM)) AND ((t0.c0 COLLATE NOCASE))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT ((((LIKELY(t0.c81))AND((('-445842023') ISNULL))))OR(((t0.c0) BETWEEN (t0.c1) AND (t0.c81)))) FROM vt5 ORDER BY ((((t0.c3, t0.c1, t0.c0))!=((t0.c0, -683268880, x''))) IN ()), (((vt5.c0 IN (t0.c4)))/(((t0.c4) IS FALSE)))  NULLS LAST;SELECT DISTINCT (- (((t0.c2) ISNULL))) FROM t0 WHERE ((((((NULL)) BETWEEN (('575567259')) AND ((x''))))IS NOT(CASE NULL  WHEN x'' THEN 0X40313460 END))) ORDER BY 'm뛢~v|NN' ASC  NULLS FIRST, (((((((((((t0.c4)) NOT BETWEEN ((t0.c1)) AND ((vt5.c0))))AND((((t0.c81))<((0.039314222203171156))))))AND(CASE t0.c3  WHEN t0.c4 THEN t0.c0 WHEN t0.c3 THEN t0.c4 WHEN 0.08265459177698986 THEN t0.c2 END)))OR('%%')))AND(((t0.c81) NOTNULL)))  NULLS LAST;SELECT ALL CAST(t0.c4 AS BLOB) FROM t0, vt5; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END)GLOB((((vt5.c0, t0.c52, t0.c52)) BETWEEN ((x'', t0.c1, vt5.c0)) AND ((t0.c4, t0.c2, t0.c4))))) FROM t0, vt5 WHERE ((+ (((x'') IS TRUE)))); -- 0ms;
SELECT ALL ((((t0.c81) NOT NULL)) IS FALSE) FROM vt5;SELECT load_extension('-760475430', CAST(t0.c81 AS TEXT)) FROM vt5;SELECT AVG(vt5.c0), ((((-1685684978)AND((t0.c52 IN (t0.c81, t0.c0)))))OR(0.05689599365173703)), CASE WHEN ((t0.c81) IS FALSE) THEN t0.c0 ELSE TRIM(DISTINCT t0.c0) END FROM vt5, t0; -- 0ms;
SELECT ALL ((TRIM(DISTINCT vt5.c0)) NOT NULL) FROM vt5, t0; -- 0ms;
SELECT (+ ('521831342')) FROM vt5 WHERE (((((((x'7c25')<<('Y<E-O''Q2')))AND((0.08265459177698986 IN ()))))AND(((0xfffffffff7c69c2c) ISNULL)))); -- 0ms;
SELECT DISTINCT ((('2\\n' IN ()))<=(((t0.c81)<>(t0.c4)))), json_insert(t0.c52, ((t0.c1)%(t0.c0)), CASE t0.c1  WHEN t0.c2 THEN t0.c81 WHEN vt5.c0 THEN t0.c81 WHEN t0.c81 THEN t0.c4 WHEN NULL THEN t0.c3 WHEN t0.c1 THEN 0.3989769631396035 END), (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt5.c0)))) NOTNULL) FROM t0;SELECT ALL PERCENT_RANK() OVER () FROM vt5 INNER JOIN t0 ON ((CASE t0.c1  WHEN NULL THEN t0.c4 ELSE t0.c81 END)<((x'' IN ()))); -- 0ms;
SELECT ALL COUNT(*) FROM vt5, t0 WHERE (((((((NULL)OR('M?tUqc]D')))OR(818904076)))IS NOT(0.6882258900582072 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT t0.c52 COLLATE NOCASE), COUNT(*), AVG(((t0.c0) NOTNULL)) OVER (), ROW_NUMBER() OVER (), (((0.33688076738272077)) BETWEEN ((((vt5.c0) NOTNULL))) AND ((((0.2910545754447571) NOT BETWEEN (t0.c1) AND (t0.c81))))) FROM t0, vt5 EXCEPT SELECT DISTINCT GROUP_CONCAT(((vt5.c0)==(t0.c4))), ((t0.c0)>>(((vt5.c0)/(t0.c2)))), CASE NULL  WHEN ((t0.c2) NOT NULL) THEN ((t0.c2)IS(t0.c2)) ELSE (t0.c2 IN ()) END, MIN(0.7749309686955934), (((((vt5.c0)GLOB(t0.c3)), AVG(t0.c3), ((t0.c81)<(t0.c2))))>((((vt5.c0)AND(t0.c0)), CASE WHEN t0.c1 THEN t0.c81 WHEN t0.c2 THEN t0.c52 WHEN t0.c2 THEN t0.c3 WHEN t0.c1 THEN vt5.c0 WHEN t0.c1 THEN x'' ELSE t0.c2 END, (t0.c1 IN ())))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT (t0.c52 IN ()) COLLATE RTRIM FROM vt5; -- 0ms;
SELECT ALL ((((t0.c0)>>(t0.c2)))OR(CAST(0xffffffff9c63bf4d AS REAL))) FROM vt5, t0 WHERE ((((0X6726604c IN ()))!=(('88!ls!N' IN ())))) ORDER BY ((CASE WHEN NULL THEN t0.c0 END)*(CASE WHEN t0.c4 THEN t0.c52 ELSE t0.c3 END)) ASC, (((t0.c1)) BETWEEN (((((t0.c4, t0.c3, t0.c2)) NOT BETWEEN ((t0.c3, t0.c0, x'')) AND ((t0.c4, t0.c2, vt5.c0))))) AND (((t0.c1 IN ())))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT LIKELY((- (t0.c0))) FROM vt5;SELECT ALL (GROUP_CONCAT('') IN (((t0.c2) BETWEEN (vt5.c0) AND (t0.c4)), ((((vt5.c0)AND(t0.c3)))AND(t0.c52)))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT (((t0.c4)) BETWEEN ((CASE WHEN '妩RAb' THEN vt5.c0 ELSE 0.22400271492555734 END)) AND ((((t0.c81) BETWEEN (t0.c1) AND (t0.c81))))), ((0.6816085652588956 COLLATE BINARY) BETWEEN (((((t0.c0)AND(t0.c52)))OR(t0.c52))) AND (((t0.c81) NOT NULL))), CASE (+ (t0.c1))  WHEN INSTR(t0.c52, t0.c4) THEN ((t0.c0)<=(t0.c1)) ELSE MAX(t0.c3) END, json_remove(CASE vt5.c0  WHEN t0.c1 THEN t0.c81 WHEN vt5.c0 THEN t0.c4 WHEN 0.46929572260295205 THEN t0.c2 END, (t0.c1 IN ())), COUNT(UPPER(DISTINCT t0.c0)) OVER () FROM t0, vt5; -- 1ms;
SELECT TOTAL('0.4294281056628214') FROM t0; -- 0ms;
SELECT ALL SUM(((t0.c3)|(t0.c52))) OVER (), GROUP_CONCAT(CASE WHEN t0.c3 THEN t0.c52 END) OVER (), TRIM(t0.c1) COLLATE BINARY COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(LTRIM(vt5.c0)) COLLATE BINARY, t0.c3, JULIANDAY(t0.c0, t0.c0, t0.c0) COLLATE NOCASE FROM t0 WHERE (HEX((((NULL)) NOT BETWEEN ((0.6635904147444399)) AND ((x'cf9c')))));SELECT DISTINCT (((vt5.c0)) NOT BETWEEN ((CAST(1261234941 AS TEXT))) AND ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY (((t0.c0))<=((CAST(NULL AS REAL))))), (NOT (((t0.c1) IS FALSE))), ((t0.c1 COLLATE NOCASE)>(SUM(vt5.c0))) FROM vt5, t0 LIMIT 616449880; -- 0ms;
SELECT DISTINCT CAST(((((x'')OR(t0.c3)))OR('')) AS REAL) FROM t0, vt5 WHERE (((x'')-(NULL COLLATE BINARY))); -- 0ms;
SELECT ALL ((((((((((t0.c2)AND(0.7424512537521779)))AND(t0.c52)))OR(t0.c4)))OR(t0.c4))) ISNULL) FROM vt5, t0 GROUP BY ((t0.c52)-(t0.c4 COLLATE NOCASE)), TRIM(DISTINCT x''), (((t0.c1 IN (t0.c1)))IS NOT(vt5.c0 COLLATE BINARY)) HAVING (((((((t0.c81)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))OR(((t0.c0)+(vt5.c0)))))OR(t0.c1)); -- 1ms;
SELECT DISTINCT CAST((NOT (x'')) AS REAL) FROM t0, vt5 WHERE (((NULL COLLATE RTRIM) NOTNULL)) ORDER BY (~ ((- (t0.c1))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE NOCASE FROM t0 WHERE ((+ (x'3f8c'))); -- 0ms;
SELECT DISTINCT (- ((+ (x'')))) FROM vt5; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c1)/(0Xffffffff8dc649b0)) THEN CAST(t0.c3 AS INTEGER) END FROM vt5 WHERE (((((((((NULL)AND('')))OR(NULL)))OR((NOT ('3')))))AND(((('} ˭FUGꭍ縌', NULL, x'd9bd')) NOT BETWEEN ((x'', 0.16713865180996956, '649364263')) AND (('rBiw''xi', 0x56cc3ecb, 0xffffffffbd494e82))))));SELECT DISTINCT CASE CASE WHEN t0.c3 THEN t0.c0 WHEN t0.c3 THEN t0.c2 WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END  WHEN (t0.c52 IN ()) THEN (NOT (vt5.c0)) WHEN (((t0.c4)) NOT BETWEEN ((t0.c2)) AND ((vt5.c0))) THEN json_quote(NULL) WHEN ((((t0.c81)OR(t0.c52)))AND(t0.c4)) THEN t0.c4 END, CAST(CASE t0.c2  WHEN vt5.c0 THEN t0.c2 ELSE t0.c2 END AS TEXT), (((t0.c2)) BETWEEN ((CAST(t0.c52 AS REAL))) AND ((((t0.c3) NOT BETWEEN (t0.c52) AND (t0.c3))))) FROM t0 WHERE (x'a5cfc188');SELECT DISTINCT json_array((x'' IN (t0.c4)), ((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c1)), ((t0.c4) BETWEEN ('(') AND (t0.c2)), (((t0.c3))=((t0.c52))), CAST(t0.c1 AS INTEGER), ((t0.c1) BETWEEN (t0.c52) AND (vt5.c0))), t0.c1, (- (CASE t0.c0  WHEN t0.c3 THEN t0.c4 ELSE t0.c4 END)) FROM vt5;SELECT DISTINCT CASE COUNT(vt5.c0)  WHEN (t0.c81 IN (t0.c1)) THEN ((t0.c0) NOT NULL) END, CAST((t0.c52 IN ()) AS BLOB), GROUP_CONCAT((('') NOT BETWEEN (t0.c3) AND (t0.c4))) OVER ( ORDER BY t0.c1 DESC RANGE BETWEEN  CURRENT ROW AND ((t0.c3)LIKE(t0.c0)) PRECEDING) FROM t0, vt5 WHERE ((NOT (CAST(x'' AS NUMERIC)))) LIMIT -1604771906 OFFSET -1680335790 INTERSECT SELECT MAX(NULLIF(DISTINCT t0.c81, t0.c4)), ((t0.c4 COLLATE NOCASE) BETWEEN (t0.c0) AND (((((t0.c4)OR(t0.c3)))OR(t0.c2)))), UNLIKELY(t0.c4) FROM t0, vt5 WHERE (((((((0.1623623551979282)OR(NULL)))OR(-2.44863997E8)))<(CAST(0.8296790459591092 AS BLOB))));SELECT TOTAL(t0.c3) OVER (), ((TRIM(t0.c1)) NOT BETWEEN (((((((((t0.c81)AND(t0.c1)))AND(t0.c81)))OR(t0.c4)))OR(t0.c4))) AND (t0.c4 COLLATE NOCASE)), t0.c2 FROM vt5;SELECT DISTINCT ((((t0.c3) NOT BETWEEN (t0.c2) AND (t0.c81)))+(SUM(t0.c3))), (+ (CAST(vt5.c0 AS TEXT))), (((((((('⟤')OR(-1.393506244E9)))OR((t0.c52 IN (t0.c4)))))OR(((t0.c81)-(t0.c1)))))OR(((((((((t0.c4)OR(t0.c1)))OR(t0.c1)))OR(vt5.c0)))AND(t0.c81)))) FROM vt5, t0 GROUP BY (~ ((((t0.c81)) NOT BETWEEN ((t0.c1)) AND ((t0.c4))))), (NOT (((vt5.c0) IS FALSE))), ((((CASE WHEN 0.0019779567402073983 THEN vt5.c0 ELSE t0.c2 END)AND((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((x'd3d9'))))))AND(STRFTIME(t0.c0, vt5.c0, vt5.c0))), CASE CAST(t0.c81 AS NUMERIC)  WHEN ((vt5.c0)|(t0.c1)) THEN ((vt5.c0)IS NOT(vt5.c0)) END, x'' COLLATE BINARY LIMIT -1244942620 OFFSET 1150302562; -- 0ms;
SELECT CAST((((t0.c0, t0.c4, t0.c52))<((t0.c4, t0.c52, '0.23238492496332486'))) AS NUMERIC) FROM t0, vt5 GROUP BY ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END) NOT BETWEEN ((((t0.c52)) NOT BETWEEN ((vt5.c0)) AND ((t0.c81)))) AND (((vt5.c0) IS TRUE))), ((((CASE WHEN t0.c0 THEN t0.c81 END)AND(((t0.c81) BETWEEN (t0.c52) AND (t0.c4)))))AND(0.9351316906296787)), ((((t0.c4) NOT BETWEEN (t0.c2) AND (t0.c3))) NOTNULL); -- 0ms;
SELECT DISTINCT (- (CASE WHEN '29L涾' THEN t0.c1 END)), COUNT(*) OVER (), ((NULL COLLATE BINARY)||(((t0.c0) NOT BETWEEN (t0.c81) AND (t0.c81)))), LEAD('Oἑ', ((t0.c4)<=(((t0.c4)AND('')))), CAST(((t0.c1) IS TRUE) AS REAL)) OVER (), CAST(COALESCE(DISTINCT vt5.c0, t0.c0, t0.c1, t0.c81, t0.c1, x'') AS BLOB) FROM t0 NOT INDEXED, vt5; -- 0ms;
SELECT DISTINCT ((((t0.c3, t0.c1, t0.c1, t0.c81, t0.c0)) BETWEEN ((vt5.c0, t0.c2, t0.c0, x'', t0.c81)) AND ((t0.c3, t0.c1, t0.c81, t0.c81, t0.c81))) IN ()), ((((((((vt5.c0)AND((- (t0.c81)))))AND(t0.c0 COLLATE BINARY)))AND((((t0.c0)) BETWEEN ((t0.c81)) AND ((t0.c52))))))OR(CAST(t0.c52 AS BLOB))), CASE GROUP_CONCAT(t0.c0)  WHEN COUNT(t0.c1) THEN CAST(t0.c2 AS INTEGER) ELSE (t0.c0 IN ('-1')) END FROM t0, vt5; -- 0ms;
SELECT '', COUNT(*) OVER (), 0.25506501188101305 FROM t0, vt5 WHERE (TYPEOF(NULL COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (((CAST(t0.c81 AS BLOB)))=((AVG(t0.c4)))) FROM vt5, t0; -- 0ms;
SELECT CAST(t0.c4 AS INTEGER) COLLATE RTRIM FROM vt5 WHERE (x'7bf40314') ORDER BY (CASE WHEN t0.c0 THEN vt5.c0 WHEN t0.c4 THEN t0.c3 WHEN t0.c0 THEN t0.c0 END IN ()) DESC;SELECT DISTINCT ((CASE t0.c52  WHEN NULL THEN t0.c3 END) NOT BETWEEN (((t0.c81) BETWEEN (t0.c0) AND (t0.c3))) AND (t0.c52 COLLATE BINARY)), (((t0.c0)) BETWEEN ((((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c2)))) AND ((((t0.c52) ISNULL)))), (+ (((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 ORDER BY ((((UNICODE(t0.c3))AND(NULL)))AND(NULL)) ASC; -- 0ms;
SELECT DISTINCT ((NULL) NOT NULL), COUNT(*), t0.c0, COUNT(CASE t0.c52  WHEN ']N' THEN NULL WHEN vt5.c0 THEN t0.c3 WHEN '1090193631' THEN t0.c4 END), ((NOT (t0.c52)) IN ((t0.c52 IN ()), (('Xtt!ql')AND(t0.c1)), UPPER(t0.c0))) FROM t0, vt5 WHERE (UPPER((('ﵯ') IS TRUE))); -- 0ms;
SELECT DISTINCT CASE NULL  WHEN t0.c2 THEN ((t0.c81)GLOB('')) WHEN ((t0.c4) BETWEEN (t0.c2) AND (t0.c0)) THEN (t0.c4 IN ()) WHEN ((t0.c81)%(vt5.c0)) THEN t0.c4 END FROM t0, vt5 WHERE (CASE WHEN CAST('1079505565' AS REAL) THEN (~ ('d瀁')) WHEN CASE WHEN NULL THEN NULL WHEN 0.7741252869200578 THEN NULL WHEN 0.6951649035214407 THEN '244747886' WHEN NULL THEN x'' WHEN 0xffffffffac57eeb1 THEN NULL END THEN ((x'')!=(0xffffffffbc798da8)) WHEN (('-863280985')>>(NULL)) THEN (- ('A3F')) END); -- 0ms;
SELECT DISTINCT 0x1b77d595 FROM vt5; -- 0ms;
SELECT ((((((t0.c0)IS NOT(x'')))AND(CASE WHEN NULL THEN vt5.c0 ELSE t0.c3 END)))OR(((t0.c1) BETWEEN (t0.c3) AND (t0.c3)))) FROM vt5 WHERE (((('vg')) NOT BETWEEN (((~ ('뇝湚''Y྆7K빇')))) AND ((CAST('0.5666327135771647' AS BLOB)))));SELECT DISTINCT ((t0.c52) ISNULL) COLLATE RTRIM FROM vt5, t0 WHERE (((CAST(x'1be34037' AS INTEGER))GLOB(((('', '*⺏H?}\\n/G', 0xffffffffbce1db8e))>((x'41da', NULL, NULL)))))); -- 0ms;
SELECT DISTINCT load_extension(((((((((t0.c81)OR(t0.c81)))AND(x'814d')))AND(t0.c52)))OR(t0.c52)), (((0.3469191770496006, t0.c4, t0.c1)) NOT BETWEEN ((t0.c81, t0.c81, vt5.c0)) AND ((t0.c52, t0.c2, 'UॺI_[m')))) FROM vt5;SELECT DISTINCT CASE WHEN CASE t0.c52  WHEN t0.c3 THEN vt5.c0 ELSE t0.c2 END THEN CAST(t0.c2 AS BLOB) WHEN ABS(t0.c0) THEN ((0.588663237155567) BETWEEN (t0.c3) AND (t0.c3)) WHEN CAST(t0.c0 AS REAL) THEN CAST(t0.c0 AS NUMERIC) END, ROW_NUMBER() OVER (), ((COUNT(*)) IS FALSE) FROM t0, vt5; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c2 THEN t0.c3 END) ISNULL) FROM t0 GROUP BY CAST(t0.c52 AS NUMERIC); -- 0ms;
SELECT DISTINCT ((((COUNT(*))OR(AVG(t0.c81))))OR((~ (vt5.c0)))) FROM vt5 ORDER BY CAST(t0.c3 AS TEXT) COLLATE RTRIM ASC, ((t0.c4) IS FALSE)  NULLS FIRST, CASE ((t0.c4)>=(t0.c2))  WHEN (0x7a723739 IN ()) THEN (t0.c3 IN ()) ELSE t0.c52 END  NULLS LAST;SELECT DISTINCT (+ (NULLIF(DISTINCT t0.c2, t0.c2))) FROM vt5, t0; -- 0ms;
SELECT ALL MIN(CASE WHEN t0.c4 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c52 THEN t0.c3 END) FROM vt5;SELECT ALL ((((((t0.c1)AND(vt5.c0)))OR(x'f420d056' COLLATE NOCASE)))OR(((((t0.c1)AND(vt5.c0)))OR(t0.c2)))) FROM vt5 WHERE (((('0.6295117537493334')) BETWEEN ((0.4738514463115274)) AND (('-1128536520'))) COLLATE BINARY);SELECT ALL CASE x'' COLLATE RTRIM  WHEN ((((t0.c81)AND(t0.c2)))OR(t0.c0)) THEN ((t0.c2) NOT NULL) END FROM t0, vt5 WHERE (((0.44492512099232506 COLLATE RTRIM)=(((x'') NOTNULL)))); -- 0ms;
SELECT (((~ (vt5.c0)))+(((t0.c2)+(t0.c3)))), (TRIM(DISTINCT t0.c52, t0.c2) IN ()), (((~ (t0.c52)))*(t0.c81)) FROM vt5, t0 WHERE (CASE (~ (x'c9f0'))  WHEN -1228794599 COLLATE BINARY THEN NULL COLLATE BINARY END); -- 1ms;
SELECT ALL (((t0.c2, t0.c81, t0.c52)) NOT BETWEEN ((((t0.c81) BETWEEN (t0.c2) AND (t0.c3)), x'', (((t0.c0))<=((t0.c0))))) AND ((((t0.c2)IS NOT(t0.c2)), CASE x''  WHEN t0.c4 THEN t0.c3 WHEN t0.c2 THEN 0x297cb27f WHEN vt5.c0 THEN t0.c2 END, CASE WHEN t0.c52 THEN vt5.c0 WHEN t0.c4 THEN t0.c4 WHEN t0.c4 THEN t0.c1 END))) FROM t0 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN '|{jS' WHEN 0X3d8a6e16 THEN ((0.02645133647634834) BETWEEN ('807561516') AND (x'')) WHEN CAST(1.834381313E9 AS REAL) THEN CAST(-7.70968913E8 AS NUMERIC) END);SELECT (((((((((vt5.c0 IN ()))OR(CASE WHEN t0.c1 THEN t0.c81 END)))AND(t0.c4)))OR(((vt5.c0) BETWEEN (t0.c52) AND (t0.c1)))))AND(t0.c3 COLLATE NOCASE)) FROM vt5, t0 WHERE ((((39902055)) NOT BETWEEN (('2097275654')) AND ((CAST(x'b304' AS REAL))))) GROUP BY CAST((((t0.c4, t0.c4, t0.c52))>((t0.c1, t0.c3, t0.c52))) AS BLOB); -- 0ms;
SELECT DISTINCT t0.c2 FROM t0 WHERE ((((((((x'')OR(-1.08978915E8)))AND('1092402414'))))>=((CASE x''  WHEN NULL THEN 0.892346984761373 WHEN x'' THEN 4.90199309E8 WHEN -7.6047543E8 THEN x'a22a' WHEN '*C' THEN -7.9840885E8 WHEN 0.2344314119769887 THEN '1007751046' END)))); -- 0ms;
SELECT DISTINCT ((((~ (t0.c1))))>(((NOT (t0.c3))))) FROM vt5, t0 WHERE (((((((((UNLIKELY(0Xffffffff83bcf1cb))OR(((0.2141020694373027) IS FALSE))))AND(x'84a2')))OR((~ (0.24306152418214533)))))OR(CAST(0x55889add AS NUMERIC)))) GROUP BY vt5.c0 HAVING CASE ((t0.c4) NOTNULL)  WHEN highlight(t0.c3, t0.c1, t0.c1, t0.c2) THEN GLOB(t0.c3, t0.c3) WHEN (t0.c52 IN ()) THEN ((t0.c2)-(t0.c1)) WHEN ((t0.c2)||(t0.c1)) THEN t0.c4 COLLATE RTRIM WHEN ((t0.c2)<('-1244942620')) THEN ((((t0.c1)AND(t0.c3)))AND(t0.c52)) WHEN (t0.c2 IN ()) THEN ((((((((vt5.c0)OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1)) END; -- 0ms;
SELECT DISTINCT ((t0.c4) BETWEEN (((t0.c0) BETWEEN (t0.c3) AND ('?ᣏOD㛹8Z'))) AND (((t0.c3) BETWEEN (t0.c1) AND (vt5.c0)))) FROM vt5 WHERE ((+ (CAST('-781180452' AS BLOB))));SELECT DISTINCT (((t0.c2)<=(t0.c2)) IN ((NOT (t0.c3)))) FROM t0 WHERE (((((-1393506244)OR(NULL)))>=(CAST(102925945 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT t0.c3, 0.018446447499247176) COLLATE NOCASE FROM vt5, t0; -- 0ms;
SELECT ((((((((((t0.c4)+(t0.c81)))AND(t0.c1 COLLATE RTRIM)))OR((t0.c81 IN ()))))OR(GROUP_CONCAT(t0.c1))))AND(CAST(t0.c2 AS REAL))) FROM vt5, t0; -- 0ms;
SELECT ALL (((vt5.c0, t0.c2, x'')) BETWEEN ((((t0.c52) IS TRUE), 'u7e閰~Zq', ((t0.c4) NOT NULL))) AND ((((t0.c1) IS TRUE), ((vt5.c0)<(t0.c0)), (t0.c2 IN ())))) FROM vt5;SELECT ALL ((NULLIF(DISTINCT t0.c4, vt5.c0)) IS FALSE), ((vt5.c0)AND(t0.c2)) COLLATE BINARY, ((((((((t0.c4 COLLATE BINARY)OR(((((((((t0.c0)OR(t0.c4)))AND(t0.c4)))OR('\rJk')))AND(t0.c0)))))OR((('1672327486')/(t0.c1)))))AND(0.7049218227880372)))AND(CAST(t0.c52 AS BLOB))), ((((t0.c1)AND((- (t0.c1)))))AND(ABS(t0.c3))), CAST(LIKELY(DISTINCT t0.c2) AS NUMERIC) FROM t0;SELECT CASE ((((x'')OR(t0.c2)))AND(t0.c81))  WHEN ((((((((((((t0.c3)AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))AND(t0.c2)))OR(t0.c4)))OR(vt5.c0)) THEN t0.c52 ELSE ((t0.c1)-(t0.c2)) END FROM vt5, t0; -- 0ms;
SELECT DISTINCT ((t0.c3 COLLATE BINARY) NOTNULL) FROM vt5;SELECT DISTINCT ((CAST(t0.c3 AS TEXT)) ISNULL) FROM vt5, t0 WHERE (((((((((x'6e58')OR(0.5548219386180765)))OR(x'')))AND(NULL)))AND('-683868284')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT NULL FROM vt5 WHERE ((((('C *%,') BETWEEN (x'1abd') AND ('}Q')))|(NULLIF(DISTINCT 0.17943290821451618, NULL)))); -- 0ms;
SELECT ((((t0.c4)OR(t0.c0)))OR(x'8255')) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), ((((t0.c81) NOTNULL))>((t0.c0 IN ()))), (((t0.c2 IN ())) NOTNULL), ((((NULL)OR(AVG(t0.c0))))AND(GROUP_CONCAT(vt5.c0))), (((((t0.c1) NOT BETWEEN (NULL) AND (vt5.c0)), ((vt5.c0)&(696038015)), CASE t0.c2  WHEN vt5.c0 THEN t0.c2 ELSE vt5.c0 END))>=((AVG(t0.c81), ((((t0.c1)AND(t0.c81)))AND(t0.c52)), (vt5.c0 IN (t0.c0))))) FROM vt5;SELECT DISTINCT CASE t0.c1 COLLATE NOCASE  WHEN ((((((((t0.c1)AND(t0.c81)))AND(t0.c52)))AND(t0.c3)))AND(t0.c1)) THEN t0.c1 COLLATE NOCASE ELSE 0Xffffffffeb5b2569 END FROM t0, vt5; -- 0ms;
SELECT ALL ((t0.c1)!=(t0.c2)) COLLATE BINARY COLLATE RTRIM FROM t0 WHERE ((((~ (x'2e91'))) IS TRUE)); -- 0ms;
SELECT ((((t0.c52)<>(t0.c52)))OR(AVG(t0.c4))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT x'f83a' COLLATE NOCASE, ((CASE t0.c81  WHEN t0.c1 THEN t0.c3 WHEN t0.c0 THEN t0.c4 WHEN t0.c52 THEN t0.c1 ELSE vt5.c0 END) BETWEEN ((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((1.073974139E9)))) AND (x'')), ((((t0.c3)GLOB(t0.c0)))-(CASE t0.c3  WHEN vt5.c0 THEN t0.c3 ELSE t0.c1 END)) FROM t0 GROUP BY CAST((((t0.c52, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c1, t0.c3, t0.c81))) AS NUMERIC);SELECT DISTINCT (MAX(t0.c0) IN (CAST(t0.c1 AS BLOB), ((t0.c81)IS(t0.c3)), ((t0.c1) NOT NULL))), COUNT(*) OVER (), ((((t0.c0) NOTNULL))+(COALESCE(DISTINCT vt5.c0, t0.c3))) FROM t0;SELECT t0.c3 FROM t0, vt5; -- 0ms;
SELECT (t0.c3 IN ()), (((NOT (t0.c2))) NOTNULL), (t0.c2 IN ()) FROM t0 NOT INDEXED, vt5 LIMIT 554420691 OFFSET 2131147506; -- 0ms;
SELECT DISTINCT CASE (t0.c52 IN ())  WHEN CASE WHEN t0.c3 THEN vt5.c0 ELSE t0.c2 END THEN AVG(t0.c2) END FROM vt5;SELECT ALL t0.c2, LEAD(CASE WHEN ((NULL) NOT NULL) THEN ((vt5.c0) BETWEEN (vt5.c0) AND (vt5.c0)) ELSE CASE vt5.c0  WHEN vt5.c0 THEN vt5.c0 ELSE vt5.c0 END END, CASE WHEN vt5.c0 THEN vt5.c0 END COLLATE BINARY, ((((vt5.c0) BETWEEN (vt5.c0) AND (vt5.c0)))<<(CASE vt5.c0  WHEN vt5.c0 THEN 0.8384374946852464 END))) OVER (), ((CAST(t0.c2 AS NUMERIC)) BETWEEN (((vt5.c0)+(t0.c52))) AND (t0.c2)), MAX(UNICODE(t0.c4)), (((t0.c81, ((t0.c1)LIKE(t0.c52)), 'P-ﵯYiO'))>=((NULL, SUM(t0.c2), ((((t0.c4)OR(t0.c81)))OR(t0.c3))))) FROM vt5;SELECT ALL GROUP_CONCAT(((vt5.c0)==(vt5.c0))) FROM vt5 ORDER BY 0.8890747898661705; -- 0ms;
SELECT 0.06910470758264009, 0.6554202488025641, (- (((t0.c52) IS FALSE))) FROM vt5, t0 WHERE ((((('1969732260')AND(x'3fce')))%(((0.8107576269893824) BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT ALL AVG(((t0.c1) IS FALSE)) OVER ( ORDER BY ((((t0.c0) NOT NULL)) BETWEEN (((t0.c2) NOT BETWEEN (NULL) AND (t0.c81))) AND ((((t0.c0, t0.c81, t0.c4)) NOT BETWEEN (('-913037185', t0.c4, t0.c2)) AND ((t0.c81, t0.c3, t0.c52))))) ASC  NULLS FIRST), 2.36557672E8, t0.c0 FROM t0 WHERE (((IFNULL(NULL, NULL)) NOT BETWEEN (('' IN ())) AND ((((x'')) BETWEEN ((NULL)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT ((((((t0.c2)<=(t0.c3)))OR((NOT (t0.c1)))))OR((((t0.c2, t0.c0, t0.c81)) BETWEEN ((t0.c3, '-1037909175', t0.c81)) AND ((t0.c0, t0.c4, t0.c3))))), (LIKELY(t0.c81) IN ()), (((((((t0.c81)) NOT BETWEEN ((t0.c4)) AND (('Ac'))))AND(t0.c1 COLLATE BINARY)))OR(((t0.c81)>=(t0.c81)))) FROM t0; -- 0ms;
SELECT (((t0.c2))>=((t0.c81))) COLLATE NOCASE FROM t0, vt5 WHERE (((((((((((((((x'')<<(x'')))AND(((((NULL)OR('T*!rbE(K&')))AND(0.9270825044931624)))))AND(CASE WHEN 0.47033969863378045 THEN NULL ELSE 2.21927032E8 END)))AND(((x'f818')IS(x'')))))OR(((x'19fc')&(0.9599075332719263)))))OR((NULL IN ()))))AND((- ('0.9773850040098424'))))); -- 0ms;
SELECT DISTINCT t0.c4 FROM t0 WHERE (((1.360046116E9) NOT BETWEEN ((((NULL, 'c_p0_R', 0.7313492158673421, 'Wk萕6', 0.6009548112033598)) BETWEEN (('-921646708', NULL, 0.6732172300080196, NULL, 0Xffffffffffccd767)) AND (('-1968761916', 0x7fffffffffffffff, NULL, 1189141300, 0.03548071100531325)))) AND (LOWER(-508746374)))); -- 0ms;
SELECT DISTINCT (((((vt5.c0)%(vt5.c0))))<(((((t0.c52)) BETWEEN ((t0.c3)) AND ((t0.c2)))))) FROM vt5, t0 WHERE ((~ (((x'868e') IS FALSE)))); -- 0ms;
SELECT DISTINCT ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c3)) COLLATE RTRIM FROM t0, vt5; -- 0ms;
SELECT DISTINCT (((((((((~ ('ᩯeP훆')))OR(NULL COLLATE BINARY)))AND((((t0.c0, NULL, t0.c3)) NOT BETWEEN ((t0.c2, vt5.c0, t0.c1)) AND ((t0.c2, t0.c1, NULL))))))OR(t0.c52)))AND((t0.c3 IN ()))), (((t0.c3, t0.c3, t0.c52)) NOT BETWEEN ((t0.c2 COLLATE NOCASE, (t0.c52 IN ()), x'')) AND ((((vt5.c0) NOTNULL), (((vt5.c0, vt5.c0, 0.24044613212362442, x'', t0.c2))=((t0.c1, t0.c2, NULL, '*YY)f昫\', t0.c3))), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0))))), (NOT ((t0.c0 IN (vt5.c0)))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c52 THEN NULL ELSE t0.c81 END IN ()) FROM t0, vt5 WHERE (((((((((((((CASE x''  WHEN '-333263219' THEN 0.375999442095744 ELSE '㘻W6?B' END)OR(((((((((x'0fba')AND(-546368415)))AND(x'9968')))OR('-755017933')))AND('0.4405943889733659')))))OR(((NULL)GLOB(0.3545332806637329)))))AND(((x'e0e9') NOT BETWEEN (0.5110484207750101) AND (x'')))))OR(CAST('t+' AS REAL))))AND(CAST(-1325507225 AS NUMERIC))))AND((('')==(x''))))) GROUP BY CASE WHEN t0.c0 THEN (t0.c1 IN ()) WHEN ((t0.c2) BETWEEN (NULL) AND (t0.c4)) THEN ((t0.c1) IS TRUE) WHEN (((t0.c0))>=((t0.c0))) THEN ((vt5.c0)GLOB(t0.c3)) END LIMIT 14390533 OFFSET 1084254616; -- 0ms;
SELECT ALL (- ((- (t0.c2)))) FROM t0, vt5; -- 0ms;
SELECT ALL CAST('e|龂♬^P>nk' AS NUMERIC), (+ (DATETIME(t0.c1, t0.c2, t0.c81))), (COUNT(x'125d') IN ()) FROM t0, vt5 WHERE (NULL); -- 0ms;
SELECT ALL (- (((((((((t0.c1)OR(t0.c4)))AND(t0.c81)))AND(t0.c2)))OR(t0.c3)))), CASE WHEN SUBSTR(t0.c52, t0.c4) THEN (('')-(t0.c52)) ELSE t0.c81 END, '1_Q' FROM t0, vt5 WHERE (((((-1631310389) ISNULL)) BETWEEN (NULL) AND ((((('dsDL3')AND('r3*\9Fw,')))AND(0.5666327135771647))))); -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0; -- 0ms;
SELECT ((MAX(t0.c2))GLOB((((t0.c52))!=((t0.c81))))) FROM vt5, t0 ORDER BY ((vt5.c0 COLLATE BINARY)<<(((((t0.c81)AND(t0.c0)))AND(t0.c81))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((t0.c4)-(t0.c81))) BETWEEN (x'') AND (x'')) FROM vt5;SELECT DISTINCT (((((t0.c52)<(t0.c4)), MAX(t0.c0), CAST(t0.c4 AS INTEGER)))>((t0.c52 COLLATE NOCASE, ((t0.c81)>=(vt5.c0)), ABS(t0.c0)))) FROM t0 WHERE (rtreenode(((x'ea2f') ISNULL), CASE x''  WHEN 0.895377797562732 THEN 0.06737377564507918 WHEN '\rc볮_' THEN 0xffffffffc94d89b4 WHEN 7.15025613E8 THEN NULL END));SELECT ALL t0.c4 FROM t0, vt5; -- 0ms;
SELECT DISTINCT COALESCE(-568762805, 0.8172328263725325, (t0.c2 IN (t0.c1, t0.c0)), ((((t0.c1)AND(t0.c2)))AND(t0.c81))) FROM vt5 LIMIT 1261234941;SELECT t0.c0 FROM vt5;SELECT ALL TOTAL(((vt5.c0)<(t0.c81))) FROM t0, vt5 WHERE (CASE '-1228794599'  WHEN NULL THEN NULL ELSE x'9b958c76' END COLLATE RTRIM); -- 0ms;
SELECT ((t0.c2 COLLATE NOCASE) BETWEEN (vt5.c0 COLLATE BINARY) AND (t0.c81 COLLATE BINARY)), t0.c52, ((CASE WHEN t0.c81 THEN t0.c0 WHEN t0.c1 THEN NULL WHEN t0.c52 THEN t0.c2 WHEN t0.c81 THEN t0.c3 WHEN 0.5354927744800475 THEN t0.c81 ELSE t0.c4 END) IS FALSE) FROM vt5 ORDER BY ((t0.c4 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (t0.c52))  NULLS FIRST;SELECT DISTINCT CAST(((t0.c1)==(t0.c52)) AS BLOB) FROM vt5, t0; -- 0ms;
SELECT CASE (- (t0.c4))  WHEN ((((t0.c0)OR(t0.c81)))OR(t0.c2)) THEN ((((((((t0.c1)AND(t0.c3)))AND(t0.c81)))OR(t0.c81)))OR(t0.c0)) WHEN ((t0.c81)|(t0.c1)) THEN CASE WHEN t0.c52 THEN t0.c81 END WHEN (NOT (vt5.c0)) THEN ((t0.c52)>=(t0.c52)) ELSE ((((t0.c81)AND(t0.c52)))AND(t0.c1)) END FROM vt5, t0; -- 0ms;
SELECT (((t0.c81, t0.c3, t0.c1, t0.c3, vt5.c0)) BETWEEN ((0Xffffffffa85d2fb5, t0.c52, t0.c0, t0.c3, t0.c52)) AND ((-1633504830, t0.c4, '', t0.c2, t0.c4))) COLLATE RTRIM, ((((t0.c0)+(t0.c2)))*((~ (t0.c1)))), ((t0.c52) BETWEEN (((t0.c81)<<(vt5.c0))) AND (((t0.c4)AND(t0.c1)))) FROM vt5, t0 WHERE (json_array_length((('')GLOB(NULL)))); -- 1ms;
SELECT DISTINCT (((t0.c3 IN (t0.c52))) NOT BETWEEN (CASE t0.c1  WHEN vt5.c0 THEN t0.c2 END) AND (((t0.c3)+(t0.c1)))) FROM t0 WHERE (((((((((((x'')<>('0.8107576269893824')))AND(((0.5122203641136138) ISNULL))))OR(((('vA', '-1810691174', x'c6905272'))<=((0x109e7dac, x'b4cddcb5', NULL))))))OR(((((((((((((NULL)OR(0.6926746134823047)))AND(1.506220456E9)))AND('Jx]Q')))OR(NULL)))OR(NULL)))AND(0.31592341421723014)))))OR(((x'')<=(x'')))));SELECT DISTINCT ((((vt5.c0) BETWEEN ('') AND (t0.c3)))<<(LOWER(DISTINCT t0.c2))), (((NOT (0.2963395207469198))) NOTNULL), NTH_VALUE(CASE WHEN ((t0.c1) NOTNULL) THEN LOWER(t0.c0) WHEN CAST(t0.c4 AS INTEGER) THEN rtreenode(t0.c0, '348967543') WHEN ((t0.c4)<=(t0.c3)) THEN ((t0.c81)<<(t0.c0)) WHEN (t0.c0 IN ()) THEN ((t0.c1) ISNULL) WHEN t0.c4 COLLATE BINARY THEN ((t0.c52)IS(t0.c52)) ELSE ((t0.c0)&(t0.c3)) END, ((((((((((t0.c0)AND(vt5.c0)))AND(t0.c2)))AND(t0.c1)))AND(t0.c52))) NOT BETWEEN (CAST(vt5.c0 AS NUMERIC)) AND (((t0.c3) BETWEEN (t0.c4) AND (t0.c0))))) OVER () FROM t0, vt5; -- 0ms;
SELECT ALL ((TRIM(DISTINCT NULL)) IS TRUE) FROM t0, vt5 GROUP BY t0.c81, (+ (((t0.c81)LIKE(t0.c3)))), (((t0.c3)) BETWEEN ((((t0.c0)*(0xfffffffff1ed131c)))) AND ((CASE WHEN NULL THEN t0.c0 WHEN t0.c3 THEN t0.c81 WHEN t0.c1 THEN t0.c2 END))), ((t0.c4)<<(((t0.c81)GLOB(t0.c3)))), t0.c0 HAVING CAST(((((0.253919414899642)OR(vt5.c0)))OR(t0.c81)) AS REAL); -- 1ms;
SELECT ALL CAST(((t0.c81) NOT BETWEEN (t0.c0) AND (vt5.c0)) AS REAL), ((CAST(t0.c2 AS TEXT)) BETWEEN ((t0.c4 IN (t0.c4))) AND (t0.c4)), LIKELIHOOD(0.9380647851916023, 0.7353505479528225) FROM vt5 WHERE ((('') NOT BETWEEN (',UbL') AND ('14390533')) COLLATE RTRIM);SELECT DISTINCT ((CAST('783981112' AS NUMERIC))>(MAX('#e'))), ((t0.c2)AND(t0.c81)) COLLATE BINARY, CASE ((t0.c52)<=(t0.c0))  WHEN CASE NULL  WHEN t0.c2 THEN t0.c4 ELSE t0.c4 END THEN (((t0.c3)) NOT BETWEEN ((t0.c2)) AND ((vt5.c0))) END, (((vt5.c0))<(((((t0.c4)) NOT BETWEEN ((vt5.c0)) AND ((t0.c4)))))), CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c1) NOTNULL) ELSE MAX(t0.c0) END FROM t0 WHERE ((((+ (0Xffffffffe09061ea))) BETWEEN (((NULL) IS FALSE)) AND ((('-781180452')*('169706872')))));SELECT DISTINCT TOTAL(((((t0.c3)OR(t0.c52)))AND(t0.c0))) FILTER(WHERE (((t0.c1)IS NOT(t0.c2)) IN ())) OVER ( ROWS json_array_length((~ (t0.c81))) PRECEDING EXCLUDE GROUP) FROM vt5, t0; -- 0ms;
SELECT DISTINCT (((((t0.c1, -7.60852751E8, t0.c1))>=((t0.c2, t0.c0, x'2bdd'))))||((NOT (t0.c3)))) FROM t0, vt5 WHERE (DATE(((0Xffffffffabbadacb) NOT NULL), (- (0.438394871138712)), MAX('ﾄ2', '0.837322300695123', '2109398649', 'a3f'))); -- 0ms;
SELECT ALL t0.c2 FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c4) IS FALSE) AS REAL), ((UNLIKELY(t0.c0))!=(MAX(t0.c1))), (NOT (t0.c81 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT DISTINCT (CASE WHEN vt5.c0 THEN t0.c81 END IN (vt5.c0 COLLATE NOCASE, HEX(DISTINCT t0.c52))) FROM t0, vt5; -- 0ms;
SELECT (+ (((((((((t0.c4)AND('-913037185')))AND(t0.c1)))AND(t0.c3)))AND(t0.c81)))) FROM t0, vt5 WHERE (((LAST_INSERT_ROWID())IS NOT(((('-1025266867'))<=(('')))))); -- 0ms;
SELECT AVG(((vt5.c0)>(t0.c4)) COLLATE NOCASE) OVER (), ((((((t0.c52, t0.c52, vt5.c0, t0.c2, t0.c0)) NOT BETWEEN ((t0.c2, t0.c52, t0.c4, t0.c81, t0.c0)) AND ((vt5.c0, t0.c1, t0.c4, 0.48374551644944497, t0.c0)))))<>((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))), ((((t0.c4)GLOB(t0.c3))) BETWEEN (((((t0.c52)AND(t0.c1)))AND(vt5.c0))) AND (((((((((((((vt5.c0)AND(t0.c2)))OR(t0.c4)))OR(911183092)))AND(NULL)))AND(x'')))AND(t0.c52)))) FROM t0, vt5; -- 0ms;
SELECT ALL NTH_VALUE(((t0.c2) NOT NULL), ((CAST(t0.c2 AS BLOB)) IS TRUE)) OVER () FROM t0, vt5; -- 0ms;
SELECT DISTINCT x'6d0991c2' COLLATE BINARY FROM vt5; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c52 THEN t0.c0 ELSE t0.c52 END AS NUMERIC), LEAD(GLOB(CASE WHEN NULL THEN t0.c81 WHEN t0.c52 THEN t0.c81 WHEN t0.c0 THEN t0.c0 ELSE t0.c4 END, t0.c52 COLLATE NOCASE), CAST(CASE vt5.c0  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END AS NUMERIC), SUBSTR((NOT (NULL)), NULLIF(vt5.c0, t0.c1))) OVER (), CASE WHEN ((NULL)IS NOT(t0.c81)) THEN COUNT(*) ELSE CASE WHEN t0.c81 THEN vt5.c0 ELSE t0.c1 END END, (SUBSTR(t0.c2, t0.c81) IN ()), ((((t0.c81)AND(t0.c3)))AND(t0.c0)) COLLATE BINARY FROM vt5, t0; -- 0ms;
SELECT (((- (t0.c0))) BETWEEN (((vt5.c0)|(t0.c1))) AND (((t0.c52) NOTNULL))) FROM t0, vt5 WHERE ((((('-32795325')*(-1587637271)))AND(1.090193631E9 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT COUNT(t0.c3) OVER (), (~ (((((t0.c1)AND(t0.c1)))OR(t0.c4)))), t0.c3 COLLATE BINARY FROM vt5 WHERE (CASE WHEN ('1720036970' IN (0Xffffffffd2ac10da)) THEN CASE WHEN NULL THEN NULL END WHEN ((x'') IS TRUE) THEN NULL WHEN CAST(0.9730138870607065 AS INTEGER) THEN ((4.90199309E8)<<(0.8616795319045633)) ELSE CAST(0.6491877217110061 AS NUMERIC) END);SELECT ALL ((- ('-1346379166')) IN ((0Xffffffff9fa293ec IN ()), t0.c2 COLLATE RTRIM)) FROM vt5 WHERE (CASE 0X5231b18c COLLATE NOCASE  WHEN CAST(NULL AS TEXT) THEN ((0X517581e) IS TRUE) END);SELECT DISTINCT ((UNLIKELY(t0.c0))>>(t0.c1 COLLATE NOCASE)) FROM vt5, t0 LIMIT -1025266867 OFFSET -1228794599; -- 0ms;
SELECT DISTINCT (- (TRIM(t0.c3))) FROM t0 GROUP BY t0.c4, ((((((((CASE t0.c81  WHEN '0.20143534856859424' THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN 1662260809 THEN t0.c3 END)AND(vt5.c0)))AND(((0.23315388813695437)>=(t0.c0)))))AND(ABS(DISTINCT t0.c52))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c3 WHEN 0.5311953676643646 THEN t0.c81 WHEN 1411603814 THEN t0.c4 ELSE '|)' END)), (((NOT (t0.c81)))==(((t0.c2)OR(t0.c52)))) HAVING (((vt5.c0)>>(t0.c52)) IN ());SELECT DISTINCT t0.c81, 0.2734344357533969, (((((vt5.c0))!=((vt5.c0))))<(MAX(t0.c2))) FROM t0, vt5 WHERE (CAST(((0xffffffffd4c7be7c)>>(x'3836')) AS REAL)) ORDER BY (- (t0.c0)) COLLATE NOCASE DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((t0.c1) NOT NULL)) IS TRUE) FROM vt5, t0 WHERE (CAST(((x'8feb') BETWEEN ('-2127590755') AND (-205693163)) AS NUMERIC)); -- 0ms;
SELECT ((t0.c81 COLLATE RTRIM) NOT BETWEEN (((t0.c1)<(t0.c3))) AND (CAST(vt5.c0 AS INTEGER))) FROM t0 GROUP BY ((x'') NOT NULL) HAVING CAST(((t0.c1)/(t0.c4)) AS TEXT);SELECT DISTINCT (NOT ('-181198833')) COLLATE NOCASE FROM vt5, t0; -- 0ms;
SELECT ALL ((((COUNT(t0.c0))OR(CAST(t0.c0 AS BLOB))))AND(CAST(vt5.c0 AS BLOB))), ((((t0.c3) NOTNULL))IS(((t0.c1) BETWEEN (t0.c4) AND (t0.c52)))), MAX(json(vt5.c0), ((t0.c52) IS FALSE), vt5.c0, json_remove(t0.c1, t0.c2, t0.c4, NULL)) FROM t0 WHERE (CAST('1261234941' COLLATE RTRIM AS INTEGER)) LIMIT 1856841152 OFFSET 2147353162;SELECT ALL (((t0.c2) NOTNULL) IN (t0.c81, (t0.c4 IN ()))) FROM t0, vt5 WHERE ((((NULL)) BETWEEN ((CASE NULL  WHEN NULL THEN -7.81180452E8 WHEN -7.60852751E8 THEN '-1654535600' WHEN 0.15901790445324493 THEN '6_姻돿\r' END)) AND ((((136386156)IS('')))))); -- 0ms;
SELECT ALL (~ (NULLIF(t0.c4, t0.c2))) FROM t0 WHERE (CAST((('0.20143534856859424') NOT BETWEEN (x'bf05') AND (NULL)) AS NUMERIC)) ORDER BY t0.c52 COLLATE RTRIM  NULLS FIRST LIMIT -1500993764 OFFSET -896284389; -- 0ms;
SELECT DISTINCT ((t0.c4 COLLATE RTRIM)<<(0xffffffff9879d94f)) FROM vt5 WHERE ((((0X4057f29d) IS FALSE) IN (CASE WHEN '14390533' THEN '1547780589' WHEN x'' THEN -1593246562 WHEN '+W' THEN '' ELSE NULL END)));SELECT ((t0.c4)-(CAST(t0.c2 AS TEXT))), (((t0.c81)) NOT BETWEEN ((CAST(t0.c4 AS TEXT))) AND ((((t0.c81) BETWEEN (t0.c2) AND (t0.c0))))), ((((((((NULL)AND(CASE t0.c3  WHEN t0.c81 THEN t0.c3 WHEN t0.c52 THEN t0.c3 WHEN t0.c52 THEN t0.c52 END)))OR((((t0.c52, t0.c2, t0.c3))=((x'6df7c7f8', 0.8790994438327518, t0.c2))))))OR(((((t0.c3)OR(t0.c4)))AND(t0.c2)))))AND((+ (t0.c4)))) FROM t0 WHERE (json_insert(CASE WHEN x'' THEN 0.46430303408082074 ELSE x'' END, ((0.24189956481560249) NOT BETWEEN ('787105828') AND ('-728520430')), ((((0.3110142384800053)AND('呹*&?e)&')))OR('仱c')), CASE WHEN NULL THEN '-1757815001' WHEN 316575527 THEN 0.6244415664547913 WHEN '490199309' THEN NULL END, ((0Xffffffffc390e6fb)AND('1523499977')))) ORDER BY t0.c2 DESC LIMIT -1835206417 OFFSET 1917099269;SELECT DISTINCT RANK() OVER ( ORDER BY (((x'adad', t0.c4, CAST(vt5.c0 AS BLOB)))!=(((NOT (vt5.c0)), (~ (vt5.c0)), (t0.c2 IN ())))) ASC  NULLS FIRST) FROM vt5;SELECT DISTINCT (0X61c9dc3e IN ()) FROM t0, vt5; -- 0ms;
SELECT ALL LIKE(((vt5.c0) NOT BETWEEN (t0.c52) AND (t0.c52)), vt5.c0, '-') FROM t0 WHERE (x'');SELECT COALESCE((((t0.c3, t0.c1, t0.c0))<>((t0.c0, vt5.c0, vt5.c0))), CASE t0.c2  WHEN t0.c3 THEN vt5.c0 ELSE t0.c2 END) FROM t0 WHERE (((((x'') NOT NULL)) IS TRUE)) GROUP BY (NOT (COALESCE(t0.c3, -1.228794599E9))) HAVING ((((t0.c52)>=(t0.c1))) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((t0.c0) IS FALSE)));SELECT ALL CASE WHEN CASE t0.c52  WHEN t0.c0 THEN NULL ELSE 0.8186706924287428 END THEN TRIM(DISTINCT t0.c1) ELSE ((t0.c4)||(t0.c2)) END FROM vt5 GROUP BY (((vt5.c0)) BETWEEN ((((t0.c4) NOT BETWEEN (vt5.c0) AND (t0.c2)))) AND ((((((t0.c2)AND(t0.c4)))OR(t0.c52))))), (+ (1.117453679E9)), ((t0.c81)%(((((((((t0.c3)OR(t0.c3)))OR('W-5{j''9')))OR(vt5.c0)))AND(t0.c4))));SELECT DISTINCT ((t0.c2) NOT NULL) FROM t0 WHERE (((('1411603814')) NOT BETWEEN ((CASE WHEN x'' THEN x'' WHEN 'Z9cE껤(ZL' THEN NULL WHEN NULL THEN 0.2141020694373027 END)) AND ((NULLIF(0.9043147573393436, ''))))); -- 0ms;
SELECT ALL (((NULL))<((((vt5.c0)<=(t0.c52))))) FROM t0, vt5 WHERE ((+ (((((((((x'')AND(NULL)))AND(x'326f')))AND(0.44469905849545344)))AND(NULL))))); -- 1ms;
SELECT DISTINCT CAST(((t0.c4)&(t0.c4)) AS REAL) FROM vt5, t0 GROUP BY COALESCE(DISTINCT CAST(t0.c81 AS NUMERIC), ((t0.c0) IS TRUE)) HAVING CAST(((t0.c3)+(t0.c52)) AS NUMERIC) LIMIT -683268880; -- 0ms;
SELECT DISTINCT ((((vt5.c0) IS FALSE))IS(COUNT(*))) FROM t0, vt5; -- 0ms;
SELECT x'' FROM t0 LIMIT 1070083028 OFFSET -1646062907; -- 0ms;
SELECT t0.c4, ((((t0.c81) NOTNULL)) IS TRUE), ((x'')GLOB(t0.c0)) COLLATE BINARY COLLATE BINARY FROM vt5 WHERE ((('1612634460' IN (0.8649423312788529)) IN ()));SELECT DISTINCT ROW_NUMBER() OVER (), t0.c3, (TOTAL(vt5.c0) IN (((vt5.c0) BETWEEN (t0.c52) AND (vt5.c0)))) FROM vt5 WHERE ((CASE WHEN '' THEN 0xfffffffffe7b0dba WHEN 0Xffffffffd7f757bf THEN 'R~' WHEN '' THEN NULL END IN ((('J뇝')|(''))))) ORDER BY CAST((+ (t0.c0)) AS INTEGER) ASC, (((((vt5.c0, vt5.c0, t0.c3))>=((t0.c3, t0.c1, t0.c81)))) NOT BETWEEN (LIKELY(t0.c4)) AND (((t0.c2) ISNULL))) DESC  NULLS FIRST;SELECT DISTINCT CAST(((t0.c3)<<(t0.c0)) AS TEXT) FROM t0; -- 1ms;
SELECT DISTINCT ((((t0.c1 COLLATE BINARY)OR((- (t0.c1)))))OR('1779069360')) FROM vt5, t0 GROUP BY CAST(t0.c4 COLLATE BINARY AS TEXT) HAVING ((((t0.c4)==(t0.c4))) BETWEEN (((t0.c0) NOT NULL)) AND ((((t0.c0, vt5.c0, t0.c81))=((t0.c0, t0.c3, t0.c52))))); -- 0ms;
SELECT ALL ((((t0.c0))!=((t0.c52))) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt5, t0 GROUP BY ((((((((t0.c4)OR(t0.c3)))AND(t0.c1)))OR(t0.c81 COLLATE NOCASE)))AND((((t0.c0))==((t0.c0))))); -- 0ms;
SELECT DISTINCT (CASE WHEN vt5.c0 THEN vt5.c0 ELSE t0.c2 END IN ()), ((vt5.c0)|(((((((((t0.c81)AND(t0.c4)))OR(vt5.c0)))OR('-805927915')))AND(vt5.c0)))), (((t0.c52 IN ()))GLOB((((t0.c4)) BETWEEN (('-1025266867')) AND ((vt5.c0))))) FROM vt5;SELECT DISTINCT LAG((((0.6951649035214407) NOT NULL) IN ()), (NOT (CAST(t0.c2 AS NUMERIC))), CAST((t0.c0 IN ()) AS INTEGER)) OVER () FROM t0, vt5 WHERE (((((('399914355', 1.13836382E9, '2D')) NOT BETWEEN ((0x7567baa4, '1373921213', '755933285')) AND ((0xffffffff897acb15, '571665598', '-760852751')))) BETWEEN (((x'') NOT BETWEEN (x'273b') AND ('UYWc'))) AND (CASE WHEN '1063504547' THEN '0.7745087165228755' END))); -- 0ms;
SELECT DISTINCT UPPER((((t0.c1, t0.c1, vt5.c0))!=((t0.c3, t0.c2, t0.c0)))), DENSE_RANK() OVER (), ((((((t0.c4)) NOT BETWEEN ((t0.c0)) AND ((vt5.c0)))))==(('1433973759'))) FROM t0 LIMIT 1089138274 OFFSET 727680726;SELECT ((COUNT(*)) NOTNULL) FROM vt5; -- 0ms;
SELECT DISTINCT ((8.07561516E8)|(TRIM(t0.c1, t0.c52))) FROM t0, vt5 WHERE (((((((NULL)AND('Jt(s GaJ')))OR('g')))>>(CASE x''  WHEN '91176501' THEN '990407102' WHEN 0.7326960793004115 THEN '2' WHEN x'' THEN 0.5469117949188953 ELSE '903444108' END))) LIMIT 1567572565; -- 0ms;
SELECT DISTINCT '1333795893', ((t0.c1 IN ()) IN ()), (COUNT(*) IN ()) FROM vt5, t0; -- 0ms;
SELECT DISTINCT '-1534205360', CASE CASE WHEN t0.c0 THEN t0.c81 ELSE t0.c4 END  WHEN t0.c1 THEN TOTAL(t0.c3) ELSE (~ (t0.c1)) END, NULL FROM vt5, t0 WHERE ((((((NULL) NOT BETWEEN (x'') AND ('-2105977080')), ('<16' IN (NULL, x'541c')), (('UV')>(0.2236598012299369)), (- (NULL)), (- (x''))))<((CASE WHEN NULL THEN x'0472' ELSE x'' END, (((((((('696038015')AND('1969732260')))OR(x'')))OR(x'1e73')))OR(NULL)), ((NULL)GLOB(NULL)), (- (NULL)), CASE WHEN NULL THEN x'' ELSE '-148234479' END)))) ORDER BY json_insert(((((t0.c2)AND(t0.c1)))OR(t0.c0)), (((t0.c3)) BETWEEN ((t0.c1)) AND ((t0.c52))), t0.c0) DESC  NULLS FIRST, TRIM(-808336033 COLLATE NOCASE, ((t0.c4) IS TRUE))  NULLS LAST; -- 0ms;
SELECT ((((t0.c2)OR(t0.c81)))*('')), ((vt5.c0)<=(t0.c0)) COLLATE RTRIM, json((+ (t0.c4))) FROM vt5;SELECT ((CASE WHEN 0.9740483039280807 THEN '' END)*((t0.c4 IN ()))) FROM t0 WHERE ((~ ((~ ('-1791715948'))))); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT t0.c1, ((((t0.c81)AND(t0.c4)))AND(t0.c3))) FROM vt5 WHERE (NULLIF('1359813990', ((0.6694868111157488)|(0.44800447253635023)))) UNION ALL SELECT DISTINCT ((t0.c4) NOTNULL) FROM t0 WHERE (((json_remove(x'', 0.706898296370743))/(x''))) GROUP BY ((0.6062049095837494) NOT BETWEEN (((t0.c1)&(t0.c0))) AND (((t0.c3) NOTNULL)));SELECT DISTINCT MAX(((t0.c52) BETWEEN (t0.c81) AND (t0.c81))), ((((((t0.c1) NOTNULL))AND('WR')))OR(HEX(t0.c52))), SUM(((t0.c1) NOT NULL)) OVER ( ORDER BY t0.c3  NULLS LAST) FROM t0, vt5 LIMIT -174376421 OFFSET -556376093; -- 0ms;
SELECT ALL CAST(((t0.c0)IS(t0.c1)) AS TEXT) FROM t0 WHERE (CAST(TRIM(DISTINCT 0.6789611935697372) AS REAL)) ORDER BY (((vt5.c0)/(t0.c3)) IN ()) LIMIT 782103213; -- 0ms;
SELECT UPPER(((vt5.c0)IS(t0.c52))) FROM t0, vt5 WHERE (((('')) BETWEEN ((((('-108978915'))=(('⓰ 1wq>}'))))) AND (((('[') NOT NULL))))) GROUP BY ((((t0.c81) ISNULL)) NOT NULL), (((('-1393506244') BETWEEN ('') AND (t0.c3))) NOT BETWEEN ((((0Xffffffffdd402538, t0.c52, t0.c2))!=((t0.c3, t0.c0, t0.c81)))) AND ('0.5196171742532166')), LTRIM(((t0.c4) NOT NULL)) HAVING ((((((((((((t0.c2)AND(vt5.c0)))AND(vt5.c0)))AND(t0.c4)))OR(t0.c81)))OR(((((t0.c2)AND(t0.c3)))OR(t0.c3)))))OR(CASE WHEN t0.c52 THEN t0.c4 WHEN t0.c81 THEN t0.c1 WHEN t0.c3 THEN t0.c2 ELSE t0.c52 END)); -- 0ms;
SELECT ((vt5.c0) ISNULL) COLLATE BINARY FROM vt5 WHERE (CASE WHEN DATETIME(x'', NULL, '5o', -1.37978836E8, x'') THEN CASE WHEN '1972830513' THEN 0.3096056649008163 WHEN x'' THEN 0.4457088964668202 WHEN 0.9872751631922757 THEN NULL ELSE x'' END WHEN CAST(x'' AS INTEGER) THEN (((('E')AND(NULL)))OR(0.9618380053253468)) WHEN COALESCE('뇝湚''Y྆7K빇', 1092402414) THEN NULL END); -- 0ms;
SELECT DISTINCT ((((t0.c2) NOTNULL))+(((t0.c52)>(t0.c4)))), ((t0.c4)/(((t0.c2) NOT BETWEEN (t0.c81) AND (t0.c1)))), TOTAL(CAST(vt5.c0 AS REAL) COLLATE BINARY) FROM t0, vt5; -- 0ms;
SELECT DISTINCT CAST(vt5.c0 AS TEXT) COLLATE NOCASE FROM t0;SELECT DISTINCT (CAST(t0.c3 AS TEXT) IN ()), ((((((((x'')AND(((NULL)>(t0.c52)))))OR(SUM(t0.c52))))AND(CASE WHEN t0.c1 THEN t0.c52 END)))AND(((t0.c2) NOTNULL))), (((((t0.c4, vt5.c0, t0.c2))>((t0.c81, t0.c81, t0.c4)))) BETWEEN (((t0.c3)>=(t0.c1))) AND (TRIM(t0.c52, vt5.c0))) FROM t0, vt5 LIMIT -1944218224 OFFSET 1030349572; -- 0ms;
SELECT ALL ((t0.c81)!=(t0.c1)) COLLATE RTRIM, ((UPPER(DISTINCT t0.c3))|(((t0.c0)-(t0.c52)))), load_extension(json_remove(t0.c81, t0.c3), (t0.c0 IN (vt5.c0))) FROM vt5 INDEXED BY i82, t0 WHERE (((CASE NULL  WHEN NULL THEN NULL WHEN 0.8479008727769094 THEN x'' WHEN 1048563504 THEN NULL WHEN NULL THEN '>M4\r''*' WHEN NULL THEN NULL ELSE x'f563' END) IS TRUE)) ORDER BY CAST(t0.c0 AS TEXT) COLLATE NOCASE DESC  NULLS FIRST;SELECT CASE WHEN ((((t0.c3)OR(vt5.c0)))OR(t0.c1)) THEN t0.c0 COLLATE NOCASE WHEN t0.c1 COLLATE NOCASE THEN ((((t0.c0)OR(x'')))AND(t0.c81)) WHEN (t0.c0 IN ()) THEN DATE(x'', t0.c1, vt5.c0, t0.c0, vt5.c0, t0.c2, t0.c1) END FROM vt5 LIMIT 1433973759 OFFSET -794298172;SELECT DISTINCT MIN(((t0.c4) NOTNULL)) FROM vt5, t0 WHERE ((((~ (NULL))) NOT NULL)); -- 0ms;
SELECT ALL (((((t0.c0 IN ()))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))))OR(((((((((NULL)OR(t0.c52)))AND(t0.c3)))OR(t0.c81)))OR(t0.c3)))) FROM t0, vt5 WHERE (((((LIKELY(NULL))AND((((x'2935', '-1297460330', 0.9146030734646611))>(('-1810691174', 0.5822910881007642, '*{O}'))))))OR(((((1.007751046E9)AND(x'')))AND(x''))))); -- 0ms;
SELECT t0.c81 FROM t0 CROSS JOIN vt5 ON (((((((((t0.c0 IN (vt5.c0)))AND(((t0.c81) NOT BETWEEN (vt5.c0) AND (t0.c52)))))AND((+ (vt5.c0)))))OR(((t0.c3) IS TRUE))))OR(t0.c81)) GROUP BY ((((0.763512062456205) BETWEEN (t0.c3) AND (t0.c3)))||(((t0.c52)|(x'')))) HAVING (t0.c1 IN ((t0.c2 IN ()))); -- 0ms;
SELECT ALL ((t0.c0 COLLATE NOCASE)<=(COUNT(*))), ((((((((CAST(t0.c0 AS BLOB))OR(t0.c1)))OR(CAST(t0.c0 AS NUMERIC))))OR((((t0.c81, vt5.c0, t0.c81)) BETWEEN ((t0.c81, t0.c81, vt5.c0)) AND ((t0.c2, t0.c0, vt5.c0))))))AND(CAST(t0.c4 AS BLOB))), (((((((((t0.c1)AND(t0.c52)))OR(t0.c0)))OR(t0.c4)))AND(t0.c1)) IN ()) FROM vt5, t0 WHERE ((((('ﵯ') IS FALSE)) NOT BETWEEN ((('k')||('396694262'))) AND (CASE WHEN 0.0570500593679234 THEN 0.4596144485907828 WHEN '' THEN '' WHEN '-36808197' THEN '-1162147104' WHEN '0%' THEN 0.5484532390911618 WHEN '' THEN 1705409203 END))); -- 1ms;
SELECT DISTINCT ((SUM(t0.c81)) BETWEEN ((NOT (t0.c52))) AND (TOTAL(t0.c2))), ((((((t0.c0)>>(t0.c4)))AND(RTRIM(t0.c4))))OR(CAST(t0.c3 AS BLOB))), (CAST(t0.c1 AS REAL) IN (t0.c81, (t0.c0 IN ()))) FROM t0 WHERE (CASE '*G|8K' COLLATE RTRIM  WHEN (~ (-794298172)) THEN CAST(NULL AS NUMERIC) WHEN 0.4330233215396073 THEN json_array(x'', x'') WHEN ((((((((0.9988769363703736)OR('-1221057295')))OR(0.11104576885570139)))OR(0.068741400943787)))AND(-1.260904005E9)) THEN ABS('') END); -- 0ms;
SELECT vt5.c0 FROM t0, vt5 WHERE (CAST('0.9981432595525754' COLLATE RTRIM AS REAL)); -- 0ms;
SELECT DISTINCT CAST(json_insert(t0.c52, t0.c81, t0.c0) AS INTEGER), LIKELIHOOD(((t0.c4)AND(t0.c3)), 0.016437193772038672), SUM(((vt5.c0) NOT BETWEEN (t0.c52) AND (t0.c3)) COLLATE BINARY) OVER () FROM t0;SELECT ((((((((((t0.c52) NOT BETWEEN (vt5.c0) AND (t0.c4)))OR(t0.c52 COLLATE RTRIM)))AND(CAST(t0.c4 AS BLOB))))AND(((t0.c4)<(t0.c2)))))AND(t0.c1)) FROM vt5, t0 WHERE (((0.4405943889733659 IN ()) IN ())); -- 0ms;
SELECT (+ (CASE t0.c4  WHEN x'e5b3' THEN t0.c2 END)) FROM t0 WHERE (((UPPER(DISTINCT 'X,')) NOTNULL)) LIMIT -299361436 OFFSET 1658963309; -- 0ms;
SELECT DISTINCT NULL, t0.c4, TRIM(t0.c3), (t0.c3 COLLATE BINARY IN ()), (NOT (t0.c4 COLLATE RTRIM)) FROM vt5 WHERE ((+ (((0.7524909739305546)%(x''))))) LIMIT -847605747;SELECT ALL t0.c52 COLLATE NOCASE FROM vt5 WHERE (((((x'')|(0.4037134664522858)))<<((('sbq{h(')IS('C *%,')))));SELECT DISTINCT NULLIF(((t0.c3)OR(t0.c1)), t0.c2) FROM t0; -- 0ms;
SELECT ALL ((SUM(x''))/(CASE WHEN t0.c81 THEN t0.c0 WHEN vt5.c0 THEN t0.c2 WHEN t0.c4 THEN '' ELSE t0.c52 END)) FROM vt5 WHERE (CAST(((NULL)%(0.33113534349984064)) AS TEXT)) GROUP BY (((((((t0.c4)) BETWEEN ((vt5.c0)) AND ((t0.c3))))OR(((((t0.c52)OR(t0.c1)))OR(t0.c81)))))AND(((t0.c0)+(t0.c81)))), ((((((((((((t0.c3)AND(NULL)))OR(t0.c1)))AND((((NULL, t0.c2, t0.c4)) BETWEEN ((NULL, vt5.c0, t0.c1)) AND ((t0.c2, -1.968761916E9, t0.c52))))))OR((- (vt5.c0)))))OR(((t0.c3) BETWEEN (vt5.c0) AND (t0.c0)))))AND((+ (t0.c4)))), CASE WHEN t0.c3 THEN t0.c4 END COLLATE NOCASE HAVING (((((((t0.c52)AND(vt5.c0)))AND(t0.c52))))<=((MIN(t0.c2))));SELECT ALL 783981112, COUNT(*), TOTAL((t0.c2 IN ())) COLLATE RTRIM FROM vt5, t0 WHERE (((LIKE('', NULL))>>(((0xffffffffe88892f9) IS TRUE)))); -- 1ms;
SELECT DISTINCT CASE CAST(x'c3bb' AS REAL)  WHEN ((((NULL)AND(t0.c0)))OR(vt5.c0)) THEN (((t0.c81)) BETWEEN ((t0.c52)) AND ((t0.c81))) END FROM t0, vt5; -- 0ms;
SELECT ALL COUNT(CAST(t0.c0 AS INTEGER)), '1584496883', ((((t0.c0 COLLATE NOCASE)AND(((t0.c0)-(t0.c1)))))OR(((vt5.c0) BETWEEN (vt5.c0) AND (t0.c0)))) FROM vt5, t0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT 2.84587869E8), '', (+ (x'6443')) FROM vt5; -- 0ms;
SELECT COUNT(ABS(vt5.c0)) OVER ( ORDER BY CASE 1373921213  WHEN ((((t0.c81)AND(vt5.c0)))OR(t0.c52)) THEN CAST(vt5.c0 AS TEXT) END ASC), (+ (((t0.c3)>(vt5.c0)))), AVG(x'7c63') OVER () FROM t0 WHERE (CAST(x'62cd' COLLATE RTRIM AS REAL)) LIMIT 594396764;SELECT DISTINCT CAST(((t0.c1) BETWEEN (t0.c1) AND (t0.c0)) AS TEXT), LIKELY(DISTINCT (- (t0.c1))), CAST(SUM(t0.c4) AS NUMERIC) FROM vt5 LIMIT -1769098887;SELECT CASE WHEN UPPER(DISTINCT t0.c52) THEN (NOT (t0.c2)) ELSE t0.c1 COLLATE NOCASE END FROM vt5 WHERE (((((NULL)+(x''))) NOT NULL)) LIMIT -2039861566;SELECT ALL HEX(DISTINCT ((t0.c1) BETWEEN (t0.c81) AND (t0.c0))) FROM vt5, t0; -- 0ms;
SELECT (t0.c0 COLLATE NOCASE IN ()) FROM t0 WHERE ((((- (0xfffffffff4ff4baa))) NOT BETWEEN (((294044517) NOT BETWEEN (x'') AND (0.9349895782723985))) AND (CASE WHEN 0.5799378754010801 THEN '''' END))); -- 0ms;
SELECT (((t0.c52 IN (t0.c52)))>=(((t0.c3)AND(t0.c52)))) FROM t0, vt5; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(t0.c81) IN ()) FROM vt5, t0 WHERE (((((((NULL)OR('278276693')))AND('3')))==(SQLITE_COMPILEOPTION_GET('')))) ORDER BY (t0.c3 IN (vt5.c0)) COLLATE BINARY  NULLS FIRST, t0.c52  NULLS FIRST, ((((t0.c1) NOT BETWEEN (t0.c81) AND (t0.c1)))/(CASE t0.c4  WHEN 0Xffffffffc2e3ab4d THEN t0.c52 WHEN t0.c1 THEN t0.c0 WHEN t0.c4 THEN t0.c1 END)) DESC; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS TRUE))<<((- ('0.526851665309633')))) FROM vt5, t0 WHERE ((9.1176501E7 IN (((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN (t0.c81, t0.c0)) AS TEXT) FROM t0, vt5; -- 0ms;
SELECT ALL NULL FROM vt5; -- 0ms;
SELECT DISTINCT t0.c52 FROM t0, vt5 NOT INDEXED LIMIT 1044844516; -- 0ms;
SELECT CASE COALESCE(DISTINCT t0.c3, t0.c2)  WHEN CAST(t0.c1 AS TEXT) THEN (((t0.c52, t0.c0, t0.c1))<((t0.c52, 0.14962650791342758, t0.c1))) ELSE (t0.c0 IN ()) END FROM t0, vt5 WHERE ((NOT ((('-760475430') NOT NULL)))); -- 0ms;
SELECT DISTINCT UNLIKELY(CASE WHEN x'519456d7' THEN t0.c1 ELSE t0.c3 END) FROM t0, vt5; -- 0ms;
SELECT DISTINCT 0.04083166282890349 FROM t0, vt5 NOT INDEXED WHERE (CAST(CAST(NULL AS REAL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((t0.c2)>>(t0.c2)) IN (((vt5.c0) NOT NULL))) FROM vt5;SELECT ALL (NOT (t0.c1 COLLATE BINARY)) FROM vt5 WHERE (((MAX(NULL, x'ff7b')) BETWEEN (LAST_INSERT_ROWID()) AND (((0.2255692160335504) NOT BETWEEN (643346008) AND ('oj')))));SELECT ((CAST(t0.c81 AS BLOB))<((((t0.c4))>(('|+Cuga]'))))), (((((~ (t0.c1)))AND((NOT (t0.c52)))))AND(MAX(t0.c3))), SUM(((t0.c1) BETWEEN (t0.c81) AND (t0.c4))) OVER () FROM vt5;SELECT CAST(((vt5.c0)AND(t0.c2)) AS REAL) FROM t0, vt5 WHERE (((NULL) BETWEEN ((~ (0.9212206040871411))) AND ((NULL IN ('-1013913861'))))); -- 0ms;
SELECT DISTINCT (((((t0.c81)-(t0.c2))))==((GROUP_CONCAT(t0.c0)))) FROM t0, vt5 WHERE (x'8f473f12') ORDER BY CASE (t0.c81 IN ())  WHEN CAST(vt5.c0 AS REAL) THEN ((((t0.c4)OR(t0.c3)))AND(t0.c52)) WHEN (t0.c1 IN ()) THEN CAST(t0.c81 AS TEXT) WHEN t0.c1 THEN ((t0.c81) NOTNULL) ELSE (((t0.c0)) BETWEEN ((x'2861')) AND (('-915729946'))) END DESC, (~ (CAST(t0.c1 AS NUMERIC))), t0.c1 DESC; -- 3ms;
SELECT COUNT((NOT (vt5.c0))) FROM vt5, t0 WHERE ((((('I姻[&')LIKE(x'b631'))) NOT BETWEEN ('1433973759') AND ((('') BETWEEN ('') AND (x''))))); -- 0ms;
SELECT ((t0.c52) NOT BETWEEN (((t0.c3) BETWEEN (-1.29746033E9) AND (t0.c0))) AND (((t0.c81) ISNULL))) FROM vt5 ORDER BY ((((load_extension(t0.c2, t0.c1))AND(((vt5.c0)>=(t0.c2)))))AND(LIKELIHOOD(DISTINCT t0.c52, 0.7268517439492262))) DESC, ((CASE t0.c1  WHEN t0.c52 THEN t0.c0 ELSE 1.331481874E9 END) NOT BETWEEN (((t0.c81) BETWEEN (t0.c2) AND (t0.c81))) AND (((0x8f1c04a) NOT BETWEEN (t0.c0) AND (t0.c52))));SELECT DISTINCT SUM(AVG((- (t0.c4)))) FROM t0;SELECT LAG(x'', (((-1833313897 IN (NULL)))&(((vt5.c0) ISNULL))), (~ ((vt5.c0 IN (NULL))))) OVER () FROM vt5, t0 WHERE ((((((((NULL)) BETWEEN ((-781180452)) AND ((0.219456394136041))))OR(((x'3df3')||(0.3373401434813811)))))AND(MAX('I]', x'', NULL, NULL)))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0)>(t0.c1))) OVER ( ORDER BY ((t0.c81)-((((t0.c3)) BETWEEN (('0.16719099104973512')) AND ((t0.c52)))))  NULLS FIRST, ((((t0.c2)OR(x'')))AND(t0.c1)) COLLATE BINARY, (((('y')|(t0.c1)))<((((t0.c52)) NOT BETWEEN ((vt5.c0)) AND ((t0.c0))))) ASC, (TRIM(t0.c3, t0.c4) IN ())  NULLS FIRST) FROM vt5, t0; -- 0ms;
SELECT ALL NTH_VALUE(IFNULL(((t0.c4) IS FALSE), t0.c4 COLLATE NOCASE), (((~ (t0.c0)))||(((((t0.c81)AND(t0.c0)))OR(t0.c3))))) OVER (), (((t0.c2 IN (t0.c1)))>>(ROUND(vt5.c0, 0.7458370911903229))), t0.c3 FROM vt5, t0; -- 0ms;
SELECT t0.c0 FROM t0 ORDER BY ABS(DISTINCT t0.c81 COLLATE BINARY) ASC  NULLS FIRST; -- 0ms;
SELECT ALL FIRST_VALUE(CASE (((0.9687407100128882))<((t0.c0)))  WHEN 'Z6' THEN ((t0.c52) NOTNULL) ELSE (t0.c1 IN (t0.c1)) END) OVER () FROM t0, vt5 WHERE (((((0X5e7180f3)IS(0.7217311652099809)))<>((('1303060507') BETWEEN ('2054305593') AND (0.5108106863704386))))); -- 0ms;
SELECT DISTINCT RANK() OVER ( RANGE  CURRENT ROW EXCLUDE GROUP) FROM t0, vt5; -- 0ms;
SELECT ALL TYPEOF(DISTINCT CAST(vt5.c0 AS NUMERIC)) FROM t0 ORDER BY CASE WHEN ((((((((t0.c1)AND(t0.c3)))AND(vt5.c0)))AND(t0.c1)))AND(t0.c3)) THEN 'WZ' WHEN t0.c2 THEN LIKELY(t0.c2) WHEN NULL THEN ABS(t0.c0) WHEN (t0.c3 IN ()) THEN (((t0.c4, t0.c1, t0.c2))>=((t0.c1, t0.c3, t0.c2))) WHEN CASE WHEN t0.c81 THEN 0.708699174420852 WHEN t0.c4 THEN t0.c0 WHEN '0.9773850040098424' THEN t0.c52 ELSE t0.c81 END THEN t0.c81 END ASC;SELECT DISTINCT CASE t0.c4 COLLATE NOCASE  WHEN (- (t0.c4)) THEN (('1543428821') BETWEEN (t0.c81) AND (vt5.c0)) WHEN ((t0.c1) ISNULL) THEN LIKELY(t0.c52) WHEN t0.c4 COLLATE RTRIM THEN (t0.c3 IN ()) END FROM t0, vt5 WHERE (CAST(((0Xffffffffd8d05d3a) IS FALSE) AS INTEGER)); -- 0ms;
SELECT ALL ((((QUOTE(t0.c81))OR((~ (NULL)))))AND(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c3 END)), (((- (7.90061691E8))) BETWEEN (((((0X7e5a574b)OR(vt5.c0)))OR(t0.c4))) AND ((((t0.c1)) BETWEEN ((t0.c52)) AND ((t0.c0))))), ((((t0.c0)<=(t0.c81)))AND(((((t0.c1)OR(t0.c52)))OR(t0.c3)))) FROM vt5, t0 WHERE ((+ (CAST(520908357 AS BLOB)))) ORDER BY ((t0.c81 COLLATE NOCASE) ISNULL), (NOT ((- (t0.c81))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt5 WHERE ((((+ (x'')))IS(CASE WHEN -1.296339548E9 THEN x'' WHEN x'' THEN 'A-i\l_' WHEN 0.5200859319648772 THEN '' END))); -- 0ms;
SELECT DISTINCT ((t0.c4)+(0.6917865994367703)), CUME_DIST() OVER (), (((((t0.c3) NOT NULL)))>(((NOT (t0.c1))))) FROM t0 INDEXED BY i82, vt5 WHERE ((x'' IN ())); -- 0ms;
SELECT ((((t0.c0 COLLATE NOCASE)AND(((((t0.c3)AND(vt5.c0)))OR(t0.c0)))))AND(CHAR(t0.c52))), CAST(((((t0.c81)AND(t0.c2)))OR('J>')) AS BLOB), DATETIME(((((t0.c4)AND(vt5.c0)))AND(t0.c52)), (((t0.c81, t0.c1, t0.c2)) BETWEEN ((vt5.c0, t0.c4, vt5.c0)) AND ((vt5.c0, t0.c3, t0.c3))), t0.c81 COLLATE BINARY, 233605116, (t0.c3 IN (vt5.c0))) FROM t0, vt5; -- 0ms;
SELECT DISTINCT (((~ (t0.c1)))IS(((t0.c0) BETWEEN (t0.c4) AND (t0.c81)))) FROM vt5, t0 INDEXED BY i82 WHERE ((('Zb\') NOT BETWEEN (0.12723269906727674) AND (x'')) COLLATE RTRIM); -- 0ms;
SELECT ALL x'9412' FROM t0 LIMIT 994787908 OFFSET 91176501; -- 0ms;
SELECT (((((((t0.c81)AND(t0.c3)))OR(t0.c4)), (NOT (t0.c81)), IFNULL(DISTINCT t0.c2, t0.c3)))=((((t0.c3) IS TRUE), (((vt5.c0, t0.c52, t0.c3)) BETWEEN ((t0.c0, t0.c4, t0.c1)) AND ((vt5.c0, vt5.c0, t0.c0))), ((NULL) BETWEEN (t0.c1) AND (t0.c2))))), ((t0.c1)+(((t0.c2)&(t0.c81)))), (+ (CAST(t0.c3 AS BLOB))) FROM vt5, t0 WHERE (((((((((((x'a7bd') NOTNULL))OR((('269988225')>(NULL)))))OR(x'')))OR(((0xffffffff9de312c5)||('Vl{窘?4ｵg')))))AND(((0.3206495368726707)<>('91176501'))))); -- 0ms;
SELECT DISTINCT ((PRINTF(t0.c2, t0.c3, t0.c4))<(0.1814720175734631)) FROM vt5;SELECT DISTINCT (+ (CAST('1360046116' AS REAL))) FROM vt5, t0; -- 1ms;
SELECT DISTINCT (NOT (x'')) FROM t0, vt5 ORDER BY TRIM(CAST(t0.c4 AS REAL), t0.c52 COLLATE BINARY); -- 0ms;
SELECT ALL ((((t0.c0) NOTNULL))/(GROUP_CONCAT(t0.c81))), MIN(CAST(t0.c1 AS TEXT)), (~ (vt5.c0)) COLLATE RTRIM FROM t0;SELECT DISTINCT CAST(((t0.c3) BETWEEN (vt5.c0) AND (t0.c1)) AS REAL) FROM vt5 WHERE ((NOT (((('')) NOT BETWEEN (('')) AND ((NULL))))));SELECT DISTINCT ((((((t0.c0) BETWEEN (t0.c81) AND (t0.c1)))OR(((t0.c0)/(t0.c3)))))OR((((t0.c2, t0.c2, t0.c1, t0.c0, t0.c1))>=((t0.c0, t0.c3, t0.c0, vt5.c0, t0.c1))))), LEAD(CAST(((vt5.c0) BETWEEN (vt5.c0) AND (vt5.c0)) AS INTEGER), (((('556228885') NOTNULL))&(((vt5.c0)>=(vt5.c0)))), (((vt5.c0)) BETWEEN ((SQLITE_VERSION())) AND ((((((((((vt5.c0)AND(vt5.c0)))AND(vt5.c0)))OR(vt5.c0)))AND(vt5.c0)))))) OVER (), MIN(x'') FROM vt5 WHERE ((CAST(NULL AS REAL) IN ()));SELECT ALL COUNT(*) OVER (), CAST(t0.c81 COLLATE BINARY AS INTEGER), TRIM(((vt5.c0) NOTNULL)) FROM vt5 WHERE (((x'')LIKE((((x''))<>((x''))))));SELECT DISTINCT t0.c3, (((t0.c0 COLLATE NOCASE))<=((CAST(t0.c81 AS TEXT)))), (((~ (t0.c1))) NOTNULL), CAST(((((t0.c81)OR(t0.c3)))AND(t0.c4)) AS TEXT), ((((((vt5.c0)AND(vt5.c0)))AND(t0.c1))) NOTNULL) FROM t0;SELECT ALL ((t0.c81) NOT BETWEEN (t0.c81) AND (t0.c2)) COLLATE RTRIM FROM vt5, t0 WHERE ((((0.6506379477774292)) NOT BETWEEN (((('-1228794599') BETWEEN (NULL) AND (0.8102104507661541)))) AND ((0.9451048433023345)))); -- 0ms;
SELECT DISTINCT (HEX(t0.c0) IN (((t0.c52) NOT NULL), UNLIKELY(t0.c52))) FROM vt5, t0 WHERE ('-582998728') GROUP BY ((CAST(t0.c52 AS TEXT)) ISNULL), CASE WHEN ((t0.c0) NOT NULL) THEN ((vt5.c0) NOT NULL) ELSE ((t0.c81) ISNULL) END, ABS(-129535712) COLLATE NOCASE HAVING (NULL IN (GROUP_CONCAT(t0.c2), ((t0.c3)%(t0.c4)))); -- 0ms;
SELECT DISTINCT CASE WHEN (NOT (t0.c2)) THEN ((t0.c81)|(vt5.c0)) ELSE (+ (t0.c81)) END FROM vt5;SELECT DISTINCT (CASE vt5.c0  WHEN t0.c0 THEN vt5.c0 ELSE t0.c2 END IN ()) FROM vt5 NOT INDEXED, t0; -- 0ms;
SELECT ALL (+ (((t0.c0) ISNULL))) FROM t0, vt5 WHERE ((((CASE ''  WHEN x'' THEN x'1c72' WHEN 0.3150433387627196 THEN '1117453679' WHEN 0.8390045061540794 THEN -652751881 ELSE 0.6514867208509566 END))<=((0.9177428206058407)))); -- 1ms;
SELECT CASE (((t0.c81)) NOT BETWEEN ((t0.c3)) AND ((t0.c52)))  WHEN (~ (t0.c1)) THEN ((vt5.c0)%(vt5.c0)) END FROM vt5;SELECT DISTINCT (((((t0.c4)) BETWEEN ((t0.c1)) AND ((t0.c81)))) BETWEEN (((t0.c1)IS(t0.c52))) AND (CASE vt5.c0  WHEN t0.c2 THEN x'' END)), NTILE(((((((((CAST(vt5.c0 AS INTEGER))AND(((((NULL)OR(t0.c3)))AND(t0.c4)))))OR((~ (t0.c0)))))AND(TYPEOF(t0.c81))))OR(vt5.c0))) OVER (), (+ ((~ (t0.c3)))), MAX(((t0.c2)==(t0.c52))), TOTAL(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) OVER () FROM t0 INDEXED BY i82, vt5 WHERE ((((0x4526bdc6)) NOT BETWEEN ((CASE '1720036970'  WHEN x'' THEN 1.411603814E9 ELSE '862925426' END)) AND (((((1.7976931348623157E308, NULL, ''))<(('vg', '', '4Ed'))))))) ORDER BY CAST((vt5.c0 IN ()) AS REAL) ASC;SELECT DISTINCT CUME_DIST() OVER (), (CAST(t0.c2 AS TEXT) IN (((((t0.c0)OR(t0.c2)))OR(t0.c1)), ((vt5.c0)>=(t0.c3)))), (+ (((t0.c2)<(t0.c81)))) FROM vt5 WHERE (((('W2툕IseD') IS TRUE) IN ()));SELECT ALL CASE WHEN ((t0.c3) NOTNULL) THEN t0.c0 WHEN (((t0.c3))>((NULL))) THEN COUNT(*) WHEN ((((t0.c4)AND(t0.c4)))AND(0X7e0ab92a)) THEN (~ (NULL)) END, LIKELIHOOD(DISTINCT t0.c81 COLLATE NOCASE, 0.9148849837400747), t0.c52 FROM vt5, t0 INDEXED BY i82 WHERE (0.51665593907987); -- 1ms;
SELECT DISTINCT (- (t0.c4 COLLATE BINARY)) FROM vt5 WHERE (CAST((~ (x'')) AS INTEGER));SELECT DISTINCT (((((((NULL))=((t0.c52))))AND((NOT (t0.c2)))))AND(((((((((t0.c3)AND(t0.c81)))OR(NULL)))AND(0.7892724168008144)))OR(t0.c81)))) FROM vt5 GROUP BY '-148234479', CAST((- (t0.c3)) AS BLOB), (((t0.c3)) BETWEEN (((((t0.c4))<=((vt5.c0))))) AND (((('ᔙლz')IS NOT(t0.c2)))));SELECT DISTINCT ((0.04431776439409496) NOTNULL) FROM vt5 LIMIT -1044962745; -- 0ms;
SELECT ALL CAST(IFNULL(t0.c3, t0.c4) AS TEXT) FROM vt5 WHERE (((('-1051787859')) NOT BETWEEN ((((((((((((((x'97c3')AND(-1.025266867E9)))OR(x'2179ba03')))OR(x'')))OR(NULL)))AND(0.7917051506310261)))OR('-794298172')))) AND (((+ (0.5396159614890205))))));SELECT DISTINCT (~ (((t0.c4) IS FALSE))) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS INTEGER))&(json_array_length(x'1506f36d', t0.c4))) FROM t0;SELECT DISTINCT CASE ((t0.c4) NOT NULL)  WHEN ((((t0.c1)OR(x'ee15')))OR(t0.c4)) THEN CAST(t0.c4 AS TEXT) ELSE ((t0.c2)%(t0.c3)) END FROM t0 WHERE (((((('0.5679708065206197') BETWEEN (x'5a28') AND (0.38210991622591706))))<=(('{')))) ORDER BY ((((((((t0.c81)OR(vt5.c0)))OR(t0.c81)))AND(((vt5.c0) BETWEEN (t0.c2) AND (vt5.c0)))))OR(CAST(vt5.c0 AS INTEGER)))  NULLS LAST, (((t0.c2 IN ())) IS TRUE) DESC;SELECT DISTINCT ((AVG(t0.c52)) IS FALSE) FROM vt5, t0 WHERE ((((0.3855486634844043 IN ()))&((((x'', '-449565975', NULL))<=((0.41744980652719255, NULL, x'')))))); -- 0ms;
SELECT DISTINCT '-1264902611' FROM t0, vt5 WHERE (((+ (0.7952114126854675)) IN ())); -- 0ms;
SELECT ALL TRIM(((t0.c81)OR(t0.c3)), vt5.c0), (((((t0.c3)) NOT BETWEEN ((t0.c81)) AND ((t0.c4))))>(((t0.c52) IS FALSE))), CUME_DIST() OVER () FROM t0;SELECT ALL '0.05689599365173703' FROM t0; -- 0ms;
SELECT ((((((((((((t0.c3)OR(t0.c2)))OR(t0.c3)))AND(NULL)))OR(vt5.c0)))OR(((((t0.c1)OR(t0.c2)))OR(t0.c1)))))OR(((t0.c0) IS TRUE))) FROM t0;SELECT DISTINCT (((t0.c3)) NOT BETWEEN (((- (vt5.c0)))) AND ((CASE WHEN t0.c52 THEN t0.c52 END))) FROM vt5 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT x'7506' FROM vt5, t0 WHERE (((1.411603814E9 IN (1862117616)) IN ())); -- 0ms;
SELECT DISTINCT ABS(((t0.c81) NOT NULL)) FROM vt5;SELECT ((((t0.c4) IS TRUE))=(((((((((vt5.c0)OR(t0.c4)))AND(vt5.c0)))AND(t0.c3)))OR(t0.c1)))) FROM vt5 WHERE (NULL);SELECT CAST((~ (t0.c52)) AS TEXT) FROM vt5;SELECT LEAD(((((vt5.c0)<<(vt5.c0))) NOT BETWEEN ((('-427834935') BETWEEN (vt5.c0) AND (vt5.c0))) AND ((~ (vt5.c0)))), LAST_INSERT_ROWID() COLLATE NOCASE, (((0.5687164582145366) NOTNULL) IN ())) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), (((((((((~ (vt5.c0)))OR(((t0.c2)GLOB(t0.c1)))))OR((~ (t0.c81)))))OR((- (t0.c52)))))OR((t0.c52 IN ()))), (((((t0.c0 IN (t0.c81)))OR(((t0.c81)<<(t0.c2)))))AND(t0.c52 COLLATE RTRIM)) FROM vt5 GROUP BY ((TRIM(DISTINCT t0.c3, 0.5638419785177251)) ISNULL), json_type(CASE WHEN t0.c52 THEN t0.c4 END), t0.c3 ORDER BY (CASE WHEN vt5.c0 THEN t0.c2 END IN (((t0.c1) NOT BETWEEN (t0.c81) AND (vt5.c0)))), ((t0.c3 COLLATE BINARY)>=(CAST(t0.c3 AS REAL))) ASC  NULLS FIRST;SELECT DISTINCT ((CAST(t0.c2 AS TEXT)) NOT NULL) FROM t0, vt5 WHERE (CAST('-760475430' COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT DISTINCT ((((t0.c4)>>(vt5.c0))) IS TRUE), ((vt5.c0)%(t0.c81)) COLLATE RTRIM COLLATE RTRIM, AVG(t0.c3) OVER (), ((((vt5.c0)|(t0.c0))) BETWEEN (t0.c52) AND (((t0.c52) NOT NULL))), CAST(((t0.c2)-(t0.c81)) AS REAL) FROM vt5, t0 WHERE ((((((0.8164428685101659, NULL, NULL))>((NULL, x'', '볮L')))) NOT NULL)) LIMIT 1992529168 OFFSET 1850342397; -- 0ms;
SELECT CAST(t0.c0 COLLATE RTRIM AS BLOB) FROM vt5, t0 WHERE ((((0.4294281056628214) ISNULL) IN ())); -- 0ms;
SELECT DISTINCT COUNT(((((((((((((t0.c3)OR(t0.c81)))AND(t0.c2)))AND(t0.c1)))OR(vt5.c0)))OR(t0.c3)))OR(t0.c4))), TOTAL(((t0.c0) NOT NULL)) OVER (), t0.c0 FROM vt5, t0 WHERE ((~ (x'19a5' COLLATE BINARY))); -- 0ms;
SELECT ALL LIKE(CASE WHEN vt5.c0 THEN t0.c3 WHEN t0.c4 THEN t0.c1 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, ((((((((t0.c52)AND(vt5.c0)))OR(t0.c52)))OR(t0.c1)))OR(t0.c2))) FROM vt5 WHERE (((('2143306654', -1.757815001E9, x'')) NOT BETWEEN ((((0x46b2cd52) NOT BETWEEN (NULL) AND (0.43618044795691313)), (- ('-1297991300')), x'')) AND ((((NULL) ISNULL), ('\rF' IN ()), NULL COLLATE BINARY))));SELECT ALL COUNT(*) OVER () FROM t0 WHERE (json_array_length(TYPEOF(x'2f8c'), ((0.33009440447899097)/(NULL)))) LIMIT 92133735 OFFSET 111397215;SELECT ALL (+ ('3')) FROM vt5, t0 WHERE ((+ ('Fr' COLLATE BINARY))); -- 0ms;
SELECT t0.c81 FROM vt5 WHERE (NULL) GROUP BY ((((t0.c0)GLOB(t0.c81))) NOTNULL), (((((t0.c0)&(t0.c3)), CAST(0Xffffffffd6b5fe74 AS NUMERIC), (+ (t0.c2))))=(((((((((('')AND(0.10465435772067222)))AND('')))OR(t0.c4)))OR(t0.c3)), CAST(vt5.c0 AS NUMERIC), ((t0.c4) NOTNULL)))), ((t0.c2 IN ()) IN (x'a210')), CAST(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c81 END AS TEXT), ((((vt5.c0) ISNULL))<(((t0.c4)>(t0.c4)))) HAVING CASE ((t0.c2)IS(t0.c4))  WHEN NULL THEN t0.c81 COLLATE BINARY END;SELECT DISTINCT CUME_DIST() OVER () FROM vt5 WHERE (TRIM(((0X2eba9a38)&('0.39000142420608597')))); -- 0ms;
SELECT DISTINCT CAST((t0.c3 IN ()) AS REAL) FROM t0, vt5; -- 0ms;
SELECT ALL (((((((t0.c4)AND(t0.c2)))AND(t0.c2))))>=((((t0.c0) NOT NULL)))), ((((vt5.c0)+(t0.c3))) ISNULL), (((((t0.c81, t0.c0, t0.c4)) BETWEEN ((t0.c3, t0.c1, t0.c4)) AND ((t0.c4, t0.c52, t0.c81)))) NOT NULL), ((SUM(t0.c52))<=(((((t0.c81)OR(t0.c3)))AND(x'')))), ABS(DISTINCT ((t0.c3) BETWEEN (t0.c1) AND (t0.c52))) FROM vt5 INTERSECT SELECT (~ (t0.c2)) COLLATE NOCASE, CAST(t0.c52 AS BLOB) COLLATE RTRIM, TOTAL(LIKELIHOOD(DISTINCT '', 0.29303228997506237)), t0.c52, 'd-' FROM t0, vt5;SELECT ((((vt5.c0) IS TRUE)) NOT NULL) FROM t0 WHERE (((0.12489472119780676) NOT NULL) COLLATE NOCASE) ORDER BY (((CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN vt5.c0 WHEN t0.c81 THEN vt5.c0 ELSE vt5.c0 END))<=(((((((((('')OR(t0.c4)))OR(t0.c0)))AND(NULL)))AND(vt5.c0)))));SELECT DISTINCT t0.c4 FROM t0, vt5; -- 0ms;
SELECT DISTINCT ((t0.c4 IN ()) IN ()) FROM vt5, t0; -- 0ms;
SELECT DISTINCT (- (t0.c4 COLLATE BINARY)), json_array_length(((t0.c0)&(t0.c81))), ((t0.c3) IS FALSE) COLLATE BINARY FROM vt5 WHERE ('h羏B') GROUP BY (((t0.c2, vt5.c0, t0.c3)) NOT BETWEEN ((((t0.c4)=(t0.c1)), NULL, CAST(t0.c81 AS REAL))) AND ((SQLITE_COMPILEOPTION_USED(t0.c3), t0.c52, ((t0.c0) ISNULL)))), x'', CAST('5Ck' AS REAL), (NOT ((+ (t0.c0)))), ((vt5.c0)AND(t0.c4)) COLLATE NOCASE HAVING '0.5469117949188953';SELECT FIRST_VALUE(((vt5.c0 COLLATE BINARY) ISNULL)) OVER (), CUME_DIST() OVER (), CASE vt5.c0 COLLATE BINARY  WHEN ((((t0.c3)OR(t0.c2)))AND(t0.c0)) THEN CASE t0.c81  WHEN t0.c52 THEN t0.c1 WHEN vt5.c0 THEN t0.c4 WHEN t0.c2 THEN t0.c52 WHEN t0.c4 THEN t0.c3 WHEN NULL THEN 0.23238492496332486 END END FROM vt5 ORDER BY COALESCE(UNLIKELY(vt5.c0), ((t0.c0) IS TRUE)) DESC  NULLS LAST;SELECT DISTINCT ((CASE vt5.c0  WHEN '|{jS' THEN t0.c52 WHEN NULL THEN 1.584496883E9 WHEN t0.c0 THEN vt5.c0 ELSE t0.c81 END)+(CAST(t0.c4 AS NUMERIC))), CAST(t0.c81 AS REAL), ((t0.c3) NOT BETWEEN (t0.c1) AND (t0.c52)) COLLATE RTRIM COLLATE RTRIM, ((((t0.c3) BETWEEN (t0.c52) AND (t0.c0))) IS TRUE), (NOT (CAST(t0.c52 AS REAL))) FROM t0, vt5; -- 0ms;
SELECT (((t0.c1)) NOT BETWEEN ((((((t0.c3)AND(t0.c4)))AND(t0.c1)))) AND (((((t0.c3)) BETWEEN ((t0.c52)) AND ((t0.c81)))))) FROM vt5;SELECT ALL ((((t0.c81)>>('108067776')))<(DATE(t0.c0, '9B', t0.c4))) FROM vt5 WHERE (((((x'') BETWEEN (NULL) AND (0.5148367196283136))) BETWEEN ((0.6295117537493334 IN (0Xffffffffb4daecd2))) AND (CAST(NULL AS TEXT))));SELECT ALL TRIM(((t0.c1) IS TRUE)) FROM vt5, t0; -- 0ms;
SELECT DISTINCT ((((((((((((t0.c4)OR(t0.c1)))OR(t0.c4)))AND(((t0.c0)&(t0.c0)))))OR(((t0.c3) NOT BETWEEN (t0.c3) AND (t0.c4)))))AND((+ (t0.c81)))))OR(GROUP_CONCAT(t0.c0))), (+ (((vt5.c0)%(t0.c81)))), t0.c0, CAST(ABS(DISTINCT t0.c52) AS NUMERIC), ((vt5.c0 COLLATE RTRIM)>(((t0.c3)-(t0.c1)))) FROM t0, vt5 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((('-1811457877' IN ())) IS FALSE) FROM vt5, t0 WHERE ((((('.G_8TN(')=(0.09668603784562946)))GLOB((('-108978915') BETWEEN (0X580cb27d) AND (x''))))); -- 1ms;
SELECT DISTINCT MAX((((t0.c2, t0.c4, t0.c2))>((t0.c4, 'M뛢~V|NN', 0Xffffffffe2ed2e95)))) FROM vt5 WHERE (CASE WHEN ((NULL)<=('9kI阾c')) THEN ((0.2035125922995038) NOT BETWEEN (0.526851665309633) AND (996801494)) WHEN (- (x'')) THEN (('+/''\(') NOT NULL) WHEN (- (0.9058721908541366)) THEN ((((1.433973759E9)AND(NULL)))AND(0.25965013150883054)) END) ORDER BY (NOT (t0.c3)) ASC  NULLS LAST;SELECT DISTINCT IFNULL((t0.c3 IN ()), ((t0.c3) BETWEEN (t0.c1) AND (t0.c1))), (((t0.c3, t0.c2, t0.c2, 1.662260809E9, t0.c4)) NOT BETWEEN ((t0.c0, t0.c2, ((t0.c3) BETWEEN (t0.c0) AND (t0.c3)), ((vt5.c0) NOT BETWEEN (t0.c4) AND (t0.c3)), rtreenode(t0.c2, t0.c1))) AND (((t0.c1 IN ()), NULL, (((t0.c0, t0.c3, vt5.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c4)) AND ((t0.c3, t0.c0, t0.c0))), CAST(t0.c0 AS NUMERIC), CASE WHEN t0.c1 THEN NULL WHEN t0.c2 THEN t0.c81 WHEN vt5.c0 THEN t0.c3 END))), GROUP_CONCAT(((t0.c0) NOT NULL)) OVER (), t0.c4, rtreenode(CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN '790061691' WHEN t0.c52 THEN t0.c52 ELSE t0.c1 END, ((t0.c1)AND(t0.c4))) FROM vt5 WHERE (((((NULL) NOT BETWEEN (x'') AND ('-805927915'))) BETWEEN (((0.14182426102736756)IS NOT(0.2647577257916778))) AND (CASE WHEN '1183063462' THEN NULL WHEN '^\rJ^}' THEN x'' WHEN NULL THEN x'' END))) LIMIT 545012525 OFFSET 1640284437;SELECT ALL ((((NOT (NULL))))!=((t0.c0))), (((('9Y) X {h2')AND(((t0.c4)=(t0.c4)))))OR(((((((((NULL)AND(t0.c81)))OR(t0.c0)))OR(t0.c0)))OR(t0.c2)))), LAST_INSERT_ROWID(), ((((t0.c1)OR(((t0.c3) IS FALSE))))AND(((t0.c3)+(vt5.c0)))), (NOT (MAX(t0.c2))) FROM t0;SELECT ALL CAST(((t0.c1)LIKE(t0.c2)) AS INTEGER) FROM vt5, t0 WHERE (COALESCE(((0x6adfec3c)GLOB('1159746780')), ((NULL)*(-181198833)), NULL COLLATE NOCASE, ((x'') BETWEEN (NULL) AND (NULL)), ((x'a160')IS NOT(0x7567baa4)), CASE WHEN -473282078 THEN '瀁{4' ELSE NULL END)); -- 0ms;
SELECT DISTINCT t0.c1 FROM vt5, t0 WHERE (((CASE ''  WHEN 0.9313422583450097 THEN x'' ELSE 0.9277412178074487 END) ISNULL)); -- 0ms;
SELECT DISTINCT ((((t0.c2) IS TRUE)) IS TRUE) FROM t0 ORDER BY ((t0.c81)||(((vt5.c0) NOTNULL)))  NULLS LAST, LIKELIHOOD(DISTINCT (~ (t0.c0)), 0.46346618249559246)  NULLS LAST;SELECT (+ (MIN(t0.c1))) FROM vt5;SELECT DISTINCT GROUP_CONCAT(((0.7055307046346108)==(t0.c52))) FROM t0, vt5 GROUP BY ((t0.c4 IN (t0.c52, t0.c52)) IN (CAST(t0.c2 AS REAL), t0.c1 COLLATE RTRIM)) HAVING (t0.c81 COLLATE NOCASE IN ()); -- 0ms;
SELECT ((((t0.c3) NOT NULL))<=(((t0.c4)<(t0.c0)))), COUNT(((((((((t0.c0)AND(0.7693786457838517)))OR(t0.c81)))AND(t0.c2)))AND(t0.c4))) OVER (), (+ (CAST(t0.c3 AS TEXT))) FROM t0, vt5 WHERE (LIKELY(DISTINCT ((x'f67c') BETWEEN ('-181198833') AND ('300965333')))); -- 1ms;
SELECT DISTINCT json_type(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) FROM vt5, t0; -- 0ms;
