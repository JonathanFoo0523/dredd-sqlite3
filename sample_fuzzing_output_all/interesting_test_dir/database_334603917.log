-- Time: 2024/06/07 11:50:34
-- Database: database17
-- Database version: 3.40.0
-- seed value: 334603917
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 REAL ); -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (-480439682), ('1415293229'), ('-480439682'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c3)=(NULL, '1415293229'); -- 1ms;
REINDEX  rt0; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(NULL)))AND('1415293229')) IN ()); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
END TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3) VALUES ('', 0xffffffffaa7fb913, 's'); -- 1ms;
REINDEX; -- 0ms;
PRAGMA main.stats; -- 0ms;
PRAGMA secure_delete; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL GROUP_CONCAT(LIKELY(rt0.c1)) OVER () FROM rt0 WHERE ((CAST(NULL AS REAL) IN ())); -- 1ms;
UPDATE rt0 SET c1=0.3453604042217425; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c3=x'8b29' WHERE ((rt0.c0) NOT NULL) COLLATE NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c3, c0, c1) VALUES (x'', NULL, '2097112105', 0.3453604042217425); -- 0ms;
INSERT OR FAIL INTO rt0(c3, c1) VALUES ('-480439682', x''), (0.04472712053494643, '-1434470125'), (0.7072668673566495, x''), ('0.7072668673566495', NULL), (x'4658', '\n)'), (NULL, -677309770), (0.679881370203377, 0.07850619464407738); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c0, c1) VALUES (-273056562, 0.2733415194631251, NULL); -- 1ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0Xffffffffe8262d1d), (0.9465774065085828), (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x'6068'), ('bjD%x^y'), (x'5d67'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('-400151267'); -- 0ms;
DELETE FROM rt0 WHERE (((rt0.c3 IN ())) IS TRUE); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END; -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ((UNLIKELY(DISTINCT rt0.c1))>=(rt0.c2 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT BETWEEN (((rt0.c2)LIKE(rt0.c3))) AND (GROUP_CONCAT(rt0.c3))), '-273056562', ((('1527942086' IN ())) BETWEEN (rt0.c3) AND (CAST(NULL AS BLOB))), CASE ((rt0.c3) BETWEEN (0.8985802458174699) AND (rt0.c3))  WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END THEN (((rt0.c2))!=((rt0.c3))) END, TOTAL(((rt0.c2) IS TRUE)) FROM rt0 WHERE (UPPER(CAST(x'' AS BLOB))); -- 0ms;
SELECT DISTINCT CAST((rt0.c3 IN ()) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c1)<=(rt0.c3))) FROM rt0 WHERE (((((0.6378553340976743)-(NULL)))<=(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((x'675c') BETWEEN (CAST(rt0.c3 AS TEXT)) AND (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0 WHERE (UPPER(DISTINCT 0xffffffffaa7fb913) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE AVG(rt0.c2)  WHEN MIN(rt0.c3) THEN HEX(-740002578) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 0Xffffffffefb97cce WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(0X5b128bc6)))OR(rt0.c0)))AND(rt0.c3)) THEN CASE WHEN rt0.c3 THEN 0.36145257727203206 END END, CASE WHEN ((rt0.c3) BETWEEN (NULL) AND (rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(0.029371884410149263)))AND('*\5P瓮o')) END, ((rt0.c3)AND('1376567111')) COLLATE BINARY FROM rt0; -- 6ms;
SELECT DISTINCT ((((rt0.c0) IS FALSE)) NOT BETWEEN (((rt0.c3)&(rt0.c1))) AND (rt0.c0 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT CASE WHEN ((rt0.c1)<>(rt0.c0)) THEN COALESCE(DISTINCT rt0.c1, x'') WHEN rt0.c3 THEN CAST(rt0.c0 AS NUMERIC) WHEN rt0.c2 COLLATE RTRIM THEN UPPER('-480439682') ELSE (- (rt0.c3)) END FROM rt0 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (NOT (rt0.c0)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE ((- (((2086502211) ISNULL)))); -- 0ms;
SELECT ALL ((MAX(rt0.c1))+(x'f52c' COLLATE NOCASE)), 1906816823, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))+((NULL IN ()))) FROM rt0 WHERE ((CAST(354133888 AS REAL) IN (COALESCE(NULL, 'Z', 0xfffffffff4358670, '1a', '1906816823', x''), ((NULL)AND(0.99005802935237))))); -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE (ABS(DISTINCT (('qU') IS FALSE))); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE BINARY)-(COUNT(*))) FROM rt0; -- 0ms;
SELECT DISTINCT json_array_length(rt0.c0 COLLATE BINARY) FROM rt0 WHERE (((((((((((((('(g' IN ()))AND(((((x'')OR(-137064459)))AND(0.2028635716996764)))))OR(CAST('2086502211' AS TEXT))))OR(CASE WHEN x'4031' THEN NULL END)))AND(((((((((0.42261249168138904)OR(x'')))AND('z9hAp')))AND(NULL)))OR(NULL)))))OR(((('-941820205', '{5Y7㘆hM', '1503004606', x'd93e', '910759169'))<>(('s', NULL, -1.676528122E9, 0.0, '0.99005802935237'))))))OR(LIKE('1376567111', '1083079558', 'D')))); -- 0ms;
SELECT (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((((rt0.c2)<=(0.4977734761682695))))) FROM rt0 WHERE (((TRIM(NULL))>(x''))); -- 0ms;
SELECT ((((x'')AND(rtreenode(rt0.c3, rt0.c2))))OR(ABS(DISTINCT rt0.c1))) FROM rt0 NOT INDEXED; -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'160a' ELSE rt0.c0 END))) FROM rt0 WHERE (((+ (0Xfffffffff18c3e03)) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END THEN rt0.c3 END, PRINTF(rt0.c0), PERCENT_RANK() OVER () FROM rt0 WHERE (((CASE 0.6800736537026278  WHEN NULL THEN NULL WHEN 0.679881370203377 THEN 'X' WHEN NULL THEN x'' END) IS TRUE)); -- 1ms;
SELECT DISTINCT x'', CUME_DIST() OVER (), ((NULL)<<((((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) FROM rt0; -- 0ms;
SELECT ALL CAST(0.9502423202608345 AS INTEGER) FROM rt0; -- 0ms;
SELECT COUNT(((rt0.c0)GLOB(rt0.c3))) OVER () FROM rt0 WHERE (((CASE x''  WHEN '' THEN 'wM%x' ELSE NULL END)IS((((0.04813822101511889, NULL, '0.4977734761682695')) BETWEEN (('-2092278150', x'48c2', 'Hc')) AND (('0.8985802458174699', NULL, '1503004606')))))); -- 0ms;
SELECT (((rt0.c3, rt0.c0, rt0.c2)) BETWEEN (((+ (rt0.c0)), ((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)), (rt0.c3 IN ()))) AND ((((rt0.c1)<>(rt0.c1)), rt0.c1 COLLATE RTRIM, ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT (- ((~ (rt0.c3)))) FROM rt0 LIMIT 1527942086 OFFSET -1143368679; -- 0ms;
SELECT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN (COUNT(*))) FROM rt0 LIMIT -137064459; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT ALL rt0.c0, TOTAL(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))), TRIM(CASE WHEN rt0.c3 THEN rt0.c1 END) FROM rt0; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)), 0.6570184611351281) FROM rt0 WHERE (CAST(('-P''c' IN ()) AS BLOB)); -- 0ms;
SELECT DATETIME((rt0.c0 IN ()), IFNULL(DISTINCT rt0.c0, rt0.c1), (rt0.c0 IN ())) FROM rt0; -- 0ms;
SELECT 0.3453604042217425 FROM rt0 NOT INDEXED WHERE (((('-197818768' IN ('1083079558')))>(((x'05a3d3aa') NOTNULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c2))) NOT NULL) FROM rt0; -- 0ms;
SELECT ALL (LIKE(rt0.c2, rt0.c2, '1') IN ()), ((((rt0.c3)=(rt0.c1))) IS TRUE), ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (SUM(rt0.c1)) AND (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0 WHERE ((((-310014287) IS FALSE) IN ())); -- 0ms;
SELECT CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC), ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END) NOT NULL), (x'ad2b' IN (MAX(rt0.c0), CAST(rt0.c0 AS TEXT))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))) AND (((rt0.c2)<=(rt0.c3)))) FROM rt0 WHERE (CASE '-210595827' COLLATE NOCASE  WHEN ((0.1982615472566841) IS TRUE) THEN ((0x4c63e83c) NOT BETWEEN (3.54133888E8) AND (x'')) END) GROUP BY (+ (rt0.c0)) HAVING CASE WHEN (~ (rt0.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)) THEN AVG(rt0.c1) WHEN CASE 1.281615932E9  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END THEN rt0.c3 END; -- 0ms;
SELECT ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)))<=(((rt0.c1) ISNULL))) FROM rt0 EXCEPT SELECT CHANGES() FROM rt0 GROUP BY ((((((rt0.c2)>=(rt0.c0)))OR((NULL IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) ORDER BY ((rt0.c0)IS(rt0.c3 COLLATE BINARY)), ((((rt0.c3)<=(rt0.c2))) NOT NULL) ASC, (((((0.9502423202608345)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))<=(((((rt0.c3)AND(0.3010993175011102)))AND(rt0.c2)))) ASC  NULLS LAST;SELECT DISTINCT ((json(rt0.c2)) BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) AND (rt0.c2)), CASE WHEN ((rt0.c1) ISNULL) THEN NULLIF(rt0.c0, rt0.c3) WHEN ((rt0.c1)GLOB(rt0.c1)) THEN LIKELY(-2.09227815E9) WHEN (- (rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'1483')) ELSE CAST(rt0.c1 AS INTEGER) END, rt0.c3 FROM rt0 WHERE (CASE WHEN ((1.415293229E9) NOT BETWEEN (-2016604938) AND (0xffffffffc56c1e05)) THEN (('') IS TRUE) WHEN ((('-1676528122', x'e46e', 0.03195548553925387, NULL, '5~8svTC')) BETWEEN (('&', 0.8740164208423676, 1.7976931348623157E308, 0.8490257578631594, 0.6481612351158759)) AND ((NULL, 0.35857429949495945, 0x408e7b86, '', NULL))) THEN PRINTF(x'') WHEN (0.19095127163565084 IN ()) THEN ((0.6481612351158759) BETWEEN ('-1339038095') AND (0.4421708194057602)) END); -- 0ms;
SELECT ALL GROUP_CONCAT(CASE x''  WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END), CUME_DIST() OVER (), NULL FROM rt0 WHERE ((('}f	x')>(0.8888808292343598 COLLATE BINARY))); -- 0ms;
SELECT ((((((((rt0.c3)OR(((rt0.c3) ISNULL))))OR((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(SUM('1470940515'))))AND((+ (rt0.c3)))) FROM rt0; -- 0ms;
SELECT '-677309770' FROM rt0 WHERE ((((~ (x''))) ISNULL)); -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (TRIM(CASE x''  WHEN NULL THEN NULL END, (('')>>('/> Q(+')))); -- 0ms;
SELECT DISTINCT ((rt0.c0)||(0.42099066054296974)) FROM rt0 WHERE (CAST((('1415293229') BETWEEN (0xfffffffff8a40b57) AND (NULL)) AS INTEGER)) ORDER BY (((rt0.c3))!=((rt0.c0))) COLLATE RTRIM ASC, CASE WHEN ((0x2847d746) IS TRUE) THEN IFNULL(DISTINCT rt0.c2, rt0.c2) END DESC, NULL, ((((rt0.c0)>=(rt0.c1))) NOT BETWEEN (((rt0.c3)<>('-1161298693'))) AND ((NOT (rt0.c1)))) ASC LIMIT -1676528122 OFFSET 1816162828; -- 1ms;
SELECT DISTINCT (((((rt0.c0 IN (rt0.c3)))AND(((rt0.c2)>(NULL)))))AND((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c3, -4.80439682E8, rt0.c2))))) FROM rt0 LIMIT 81566182 OFFSET -677309770; -- 0ms;
SELECT DISTINCT (- ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))), (((NOT (rt0.c0)))/((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))))), ((((((rt0.c3) ISNULL))AND(((rt0.c2)&(rt0.c1)))))OR(((rt0.c1)>(rt0.c2)))), (((rt0.c1)) BETWEEN ((rt0.c3 COLLATE NOCASE)) AND ((((rt0.c1)||(rt0.c3))))), ((((rt0.c2 IN ())))>=((((rt0.c1)|(rt0.c1))))) FROM rt0 ORDER BY LOWER(DISTINCT CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END), COALESCE(((rt0.c1)+(rt0.c1)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))  NULLS LAST, (NOT (((rt0.c0)IS NOT(rt0.c1)))), ((((rt0.c0)OR((rt0.c2 IN ()))))AND(LIKELY(rt0.c1))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((rt0.c3)<<(rt0.c3)))OR(rt0.c1 COLLATE RTRIM)))AND(x'')) FROM rt0; -- 0ms;
SELECT ALL NTH_VALUE(((rt0.c3)>>('-740002578')) COLLATE BINARY, ((((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2))) IS TRUE)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c3) IS TRUE))OR(rt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END)), ((CAST(0.11252528614301038 AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (COUNT(*))), SUM((rt0.c2 IN ())) OVER () FROM rt0 WHERE (UPPER(((NULL) NOTNULL))); -- 1ms;
SELECT DISTINCT (((3.54133888E8)) BETWEEN ((AVG(rt0.c3))) AND ((((0X7cff6429)&(rt0.c0))))) FROM rt0 ORDER BY ((((((rt0.c0) ISNULL))AND(rt0.c1)))AND(TYPEOF(rt0.c0))); -- 0ms;
SELECT (('S\r)Mw') BETWEEN ((- (rt0.c0))) AND (((rt0.c3) NOT BETWEEN (-2.10595827E8) AND (rt0.c2)))) FROM rt0; -- 0ms;
SELECT ((((CAST(rt0.c0 AS NUMERIC))OR(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) FROM rt0 WHERE (CAST((+ (x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2)AND(rt0.c1))) OVER (), GROUP_CONCAT((((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c0)))) OVER (), ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt0.c1)<(rt0.c2)))), ((TOTAL(rt0.c0))OR(((rt0.c0)GLOB(rt0.c0)))), ((((TOTAL_CHANGES())AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS TEXT))+(rt0.c3)), (rt0.c0 IN ()) COLLATE BINARY, COUNT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0))) OVER ( GROUPS BETWEEN  CURRENT ROW AND (UNLIKELY(rt0.c2) IN ()) PRECEDING EXCLUDE TIES) FROM rt0;SELECT AVG(CASE WHEN rt0.c1 THEN rt0.c0 END) OVER () FROM rt0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0 WHERE (((((((0X77645187)AND(NULL)))AND(NULL)))IS NOT(x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL SUM(((rt0.c0)GLOB(rt0.c0)) COLLATE BINARY) OVER () FROM rt0 WHERE (((((0.5063477375767161)>(0.4243766065622394)))!=((~ ('-123466921'))))); -- 0ms;
SELECT CAST((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS INTEGER) FROM rt0 WHERE ((((681688691) NOT BETWEEN (x'') AND ('2086502211')) IN ())); -- 0ms;
SELECT ALL ((((((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)AND(((rt0.c1) IS TRUE))))AND((~ (rt0.c3)))))AND(x'dbd9' COLLATE BINARY)))AND(CAST(rt0.c2 AS REAL))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1, ((CAST(rt0.c1 AS TEXT))OR((rt0.c0 IN ()))), ((((rt0.c0)%(rt0.c2))) ISNULL) FROM rt0 WHERE ((((+ (0.03195548553925387)))+(0.2028635716996764 COLLATE NOCASE))); -- 0ms;
SELECT AVG((rt0.c0 IN ())) OVER ( GROUPS ((((HEX(rt0.c1))OR((~ (rt0.c0)))))AND(rt0.c1 COLLATE NOCASE)) PRECEDING), (- (rt0.c1 COLLATE RTRIM)), (((~ (rt0.c0)))*(AVG(rt0.c0))) FROM rt0 WHERE ((- (0.44217200176592764))) GROUP BY CASE WHEN CAST(x'' AS NUMERIC) THEN (rt0.c0 IN (rt0.c1, rt0.c0)) END HAVING (((((rt0.c1)LIKE(rt0.c3)), UNLIKELY(rt0.c2), (((rt0.c2, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, '-1434470125')) AND ((rt0.c3, rt0.c3, rt0.c3)))))<(((rt0.c2 IN ()), rt0.c1, (((rt0.c0))==(('')))))); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN ('')) FROM rt0; -- 0ms;
SELECT CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB), (ABS(DISTINCT rt0.c2) IN ()), ((((rt0.c2)*(rt0.c3))) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c3 COLLATE RTRIM)) FROM rt0 WHERE ((((('-242467325') ISNULL))GLOB(CASE x''  WHEN '⿸P' THEN 0.2270638309605375 WHEN 1 THEN 1906816823 WHEN NULL THEN '' END))) GROUP BY ((x'23e1')|((rt0.c2 IN ('1091385972', rt0.c1)))) ORDER BY CASE ((rt0.c3)!=(rt0.c1))  WHEN CASE rt0.c1  WHEN 0.04813822101511889 THEN rt0.c1 END THEN (~ (rt0.c3)) WHEN (+ ('-941820205')) THEN ((rt0.c0) ISNULL) WHEN (+ (rt0.c1)) THEN ((rt0.c3)+(rt0.c1)) END ASC; -- 0ms;
SELECT (((NOT (rt0.c0)))=(((rt0.c1)&(rt0.c3)))) FROM rt0; -- 0ms;
SELECT ((((((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(354133888)))AND(rt0.c1)))OR(rt0.c0)))AND(0.16104114565545957)))AND(rt0.c2))) NOT NULL) FROM rt0 WHERE (((((('-1859292392' IN ()))OR(((((NULL)OR(1691158077)))OR(-6.7730977E8)))))AND(CAST(1470940515 AS NUMERIC)))) UNION ALL SELECT DISTINCT ((((rt0.c3)>=(rt0.c0)))<((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, rt0.c0, rt0.c3))))) FROM rt0 UNION ALL SELECT DISTINCT 0.44217200176592764 FROM rt0 WHERE (CAST(NULL AS REAL)); -- 0ms;
SELECT DISTINCT CAST((((rt0.c3, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c2, x'')) AND ((rt0.c3, rt0.c0, rt0.c3))) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE (x'') ORDER BY ((((rt0.c0) ISNULL))>>((rt0.c1 IN (rt0.c1)))) DESC  NULLS FIRST; -- 0ms;
SELECT (((NOT (rt0.c2)))OR((+ (0.597280827931406)))) FROM rt0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((rt0.c0)<=(rt0.c3)))<(IFNULL(DISTINCT rt0.c3, rt0.c0))) DESC; -- 0ms;
SELECT DISTINCT ((rt0.c3) NOT BETWEEN (((rt0.c2)LIKE(rt0.c2))) AND ('⛖|Q')) FROM rt0 WHERE ((NOT ((('1880074871') ISNULL)))); -- 1ms;
SELECT DISTINCT (- ((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c3))))), rt0.c2, (((NOT ('O')))==(CAST(rt0.c1 AS BLOB))), CASE (~ (rt0.c1))  WHEN MAX(rt0.c3) THEN ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) ELSE ((rt0.c0) ISNULL) END, '-273056562' FROM rt0 WHERE (LIKELY(((0.9502423202608345) IS FALSE))) GROUP BY CAST((rt0.c2 IN ()) AS BLOB) ORDER BY (((rt0.c0))<(((- (rt0.c2)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((('XI_|Ce\n}d')>>(rt0.c0)))&('')), (NOT (rt0.c3)) COLLATE BINARY COLLATE BINARY, LAG(NULL COLLATE BINARY, ((CAST(rt0.c3 AS BLOB)) NOTNULL), (((((NOT (rt0.c1)))AND((~ (rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN rt0.c3 THEN rt0.c1 END))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), CAST(rt0.c2 COLLATE NOCASE AS BLOB), rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)OR(rt0.c1)) IN (((rt0.c2)<<(rt0.c2)), ((rt0.c2) IS TRUE))), (((rt0.c1 IN (rt0.c3))) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c0))>((rt0.c0, rt0.c1, rt0.c0, -946015463, rt0.c2)))) AND (0.14557531416502634)), rt0.c0 FROM rt0 WHERE ((NOT (((((((((x'ccf0')OR(0.9344869143320969)))OR(x'')))AND(NULL)))AND(0.1456421537259217))))); -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL (- ((rt0.c1 IN ()))) FROM rt0 WHERE (ABS(CAST('' AS BLOB))) ORDER BY CAST(CASE rt0.c2  WHEN rt0.c0 THEN 0.3087836832957629 ELSE rt0.c3 END AS TEXT), rt0.c2, NULL  NULLS LAST; -- 1ms;
SELECT DISTINCT TRIM(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END), CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END AS BLOB), (json_array(rt0.c0, x'') IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c0))=((rt0.c1))) THEN x'a85e' WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c1 AS INTEGER) WHEN ((rt0.c2) NOTNULL) THEN rt0.c3 ELSE ((x'') BETWEEN (rt0.c0) AND (rt0.c2)) END, rt0.c3, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((rt0.c0)<=(rt0.c0))) AND (rt0.c0 COLLATE RTRIM)) FROM rt0 WHERE ((((('')OR((NOT (0.597280827931406)))))OR(((0.6936469555904878) NOT NULL)))) LIMIT 593841974 OFFSET -2146555646; -- 0ms;
SELECT DISTINCT '' FROM rt0; -- 0ms;
SELECT CASE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN (NOT (rt0.c0)) WHEN (((rt0.c3))>=((rt0.c0))) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND ('')) END FROM rt0; -- 1ms;
SELECT LTRIM(((rt0.c1)>>(rt0.c2))) FROM rt0 ORDER BY x'535a' DESC; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)+(rt0.c2)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0)-(rt0.c1)))))AND(CASE WHEN rt0.c2 THEN rt0.c3 END)))OR(NULL)), ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)<(NULL COLLATE RTRIM)), rt0.c1, UNICODE(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(',?')))AND(rt0.c3))), ((-339939713 COLLATE NOCASE) NOTNULL), ((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c3))) ISNULL) FROM rt0 GROUP BY (rt0.c3 IN (rt0.c1)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE (((((NULL)AND(x'')))|('-1098764296' COLLATE RTRIM))) ORDER BY (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((json_valid(rt0.c0), ((rt0.c2)<>(rt0.c0)), (- (rt0.c3)))) AND ((((((rt0.c3)OR(0.5175070814934124)))OR(rt0.c3)), CAST(rt0.c0 AS TEXT), ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c2)<=(rt0.c3))) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((x'a46b') BETWEEN (x'9941') AND (x'b8a3')))) GROUP BY rt0.c0; -- 0ms;
SELECT ALL CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2)||(rt0.c3)) END FROM rt0; -- 0ms;
SELECT DISTINCT (UNLIKELY(rt0.c3) IN ()) FROM rt0; -- 0ms;
SELECT rt0.c1 COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT (- (rt0.c2 COLLATE RTRIM)) FROM rt0 WHERE (((NULL COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) OVER (), CAST((rt0.c2 IN ()) AS NUMERIC), CASE (((rt0.c2)) NOT BETWEEN (('-2031101638')) AND ((rt0.c1)))  WHEN ((rt0.c1)==(rt0.c1)) THEN SUM(rt0.c2) WHEN CAST(rt0.c0 AS BLOB) THEN (rt0.c1 IN ()) WHEN (- (rt0.c3)) THEN rt0.c1 END FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT MAX(((rt0.c2)%('-256365114'))) COLLATE BINARY FROM rt0 LIMIT 681688691 OFFSET 1503004606; -- 1ms;
SELECT (((rt0.c0)) BETWEEN ((COUNT(rt0.c3))) AND ((CASE NULL  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END))), MIN(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3))), (- ('tQ#碒')) COLLATE NOCASE, (((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)) IN ((NOT (rt0.c2)))), ((0.7333064059886245) BETWEEN ('1013538499') AND (NULL)) FROM rt0 GROUP BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END THEN ((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)) WHEN 'PQ' THEN rt0.c0 WHEN ((x'') NOTNULL) THEN COALESCE(DISTINCT rt0.c1, '-740002578') ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (0xffffffffa6894033)) END, CAST(((x'')<>(rt0.c2)) AS BLOB), (((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) AND ((x''))); -- 0ms;
SELECT ((AVG(rt0.c1)) NOT BETWEEN (rt0.c3) AND (rt0.c0 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)AND(rt0.c3 COLLATE NOCASE)))AND(CAST(rt0.c0 AS INTEGER))) FROM rt0 WHERE ((((('-1017369813')AND(x'')))OR('-482430374')) COLLATE BINARY); -- 1ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS REAL) THEN (rt0.c3 IN ()) END FROM rt0; -- 0ms;
SELECT DISTINCT (COALESCE(DISTINCT rt0.c3, rt0.c3) IN (((rt0.c0)AND(rt0.c2)), (rt0.c3 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (0.11244921926829532))) NOT BETWEEN (((rt0.c1)%(rt0.c1))) AND (GROUP_CONCAT(rt0.c1))), ((((((rt0.c2)OR(0.8801056722926117)))AND(rt0.c0))) BETWEEN (((((rt0.c2)AND(rt0.c0)))OR(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT (- (MAX(rt0.c3))) FROM rt0; -- 0ms;
SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt0.c2)>>(rt0.c2)))))AND(TOTAL(rt0.c1))) FROM rt0 WHERE (((((('52{B}Mi')<(''))))!=(((+ (-2.73056562E8)))))) LIMIT -310014287 OFFSET 2003063175; -- 0ms;
SELECT ALL (NOT (CAST(0.20537449962085563 AS TEXT))) FROM rt0 WHERE (x'') ORDER BY ((rt0.c0) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND ((('-2031101638')LIKE(NULL))))  NULLS FIRST; -- 0ms;
SELECT ALL (+ ((rt0.c1 IN (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((('''}aḅ')OR('' COLLATE BINARY)))OR(rt0.c0)) FROM rt0 WHERE (CAST(('FV' IN ()) AS INTEGER)) GROUP BY ((rt0.c3) BETWEEN (((rt0.c0)-(rt0.c3))) AND (((rt0.c1) ISNULL))) HAVING ((COUNT(rt0.c3)) BETWEEN (CAST(rt0.c3 AS REAL)) AND ((~ (rt0.c1)))) ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE BINARY ASC; -- 0ms;
SELECT DISTINCT ((rt0.c3) NOT NULL) COLLATE BINARY FROM rt0 WHERE (('-2146555646' IN ()) COLLATE RTRIM) ORDER BY CAST(rt0.c3 AS TEXT) ASC  NULLS LAST; -- 1ms;
SELECT ALL COALESCE(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c0)>(rt0.c0)), rt0.c2 COLLATE NOCASE, (NOT (rt0.c3))), ((CASE WHEN rt0.c1 THEN rt0.c3 END)-(((rt0.c2)IS(rt0.c1)))), CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))OR((- (rt0.c3)))))AND((~ (rt0.c1)))) FROM rt0 LIMIT 683632954 OFFSET 1; -- 0ms;
SELECT DISTINCT x'', ((((SUM(rt0.c0))AND(((rt0.c3)>(rt0.c0)))))OR(((rt0.c1) ISNULL))), ((rt0.c3)*(rt0.c1)) COLLATE RTRIM FROM rt0 WHERE ((((x'', 0X1074f7e6, '')) BETWEEN (((('')<(0.35857429949495945)), x'', CASE WHEN x'ce30' THEN '' ELSE -1937540957 END)) AND (((-2.73056562E8 IN ()), ((x'a95d')>>(0.4351218383157057)), (('-1937540957') IS TRUE))))); -- 0ms;
SELECT DISTINCT 0X5e423b39 FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c0  WHEN (~ (rt0.c2)) THEN (- (rt0.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c1)) END, (- (0.3453604042217425)) COLLATE RTRIM, (((rt0.c2)) NOT BETWEEN ((CAST(x'' AS BLOB))) AND ((((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1))))) FROM rt0 WHERE ((((((0.8270665664028423, 0.8113230779999066, x'')) BETWEEN ((0.5439064392752136, NULL, '-256365114')) AND (('_!rn>T', NULL, ' J')))) NOTNULL)) LIMIT 1982055092 OFFSET -398327036; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS BLOB)) BETWEEN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c2))) AND (((rt0.c3) IS FALSE))), ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) IS TRUE), (((('0.1982615472566841', rt0.c3, rt0.c0))<=((rt0.c0, rt0.c0, rt0.c1))) IN ()), CASE WHEN rt0.c2 THEN ((rt0.c2)|(rt0.c2)) ELSE rt0.c3 END, CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN CAST(rt0.c0 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c3)||(rt0.c1)) END FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c2)AND(rt0.c2))), CAST(((rt0.c2)>>('-1571619988')) AS BLOB), ((rt0.c3) BETWEEN (COUNT(rt0.c1)) AND (CAST(rt0.c2 AS BLOB))), ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)!=(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))), (- (CASE rt0.c2  WHEN NULL THEN rt0.c0 END)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(UPPER(0.9769937117181438) AS NUMERIC) FROM rt0 WHERE (HEX(((NULL)<=(276101094)))) UNION ALL SELECT LTRIM(CASE WHEN NULL THEN rt0.c3 END, ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))) FROM rt0 GROUP BY (((~ (rt0.c0)))&(((rt0.c0) IS FALSE))), (~ (rt0.c1)) COLLATE RTRIM, CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN ((rt0.c2)|(rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((((((rt0.c1)OR(rt0.c0)))OR(0.8204610833845101)))AND(rt0.c0)))AND(rt0.c1)) THEN (rt0.c1 IN (NULL)) END ORDER BY ((NULL) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND ('0.36145257727203206')) ASC  NULLS LAST;SELECT DISTINCT ((MIN(rt0.c3))<=(MAX(rt0.c0))) FROM rt0 WHERE ((LENGTH(1.281615932E9) IN ())); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES(), (((rt0.c3 COLLATE BINARY, ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), GROUP_CONCAT(rt0.c3)))>((rt0.c0 COLLATE RTRIM, COUNT(rt0.c2), CAST(rt0.c3 AS NUMERIC)))), CASE WHEN ((NULL)/(rt0.c3)) THEN ((((0.847207186903732)AND(rt0.c2)))AND(rt0.c0)) ELSE ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) END FROM rt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), CASE ((rt0.c3)-(rt0.c2))  WHEN MIN(rt0.c2) THEN rt0.c1 END, ((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)AND(COUNT(x''))))AND(((rt0.c0)+(x'c1e2')))))OR(AVG(rt0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'')))), (((((rt0.c1)IS(rt0.c0))))<=((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))), ((((rt0.c1) IS TRUE)) NOT BETWEEN (((rt0.c3)IS NOT(rt0.c2))) AND (((((NULL)AND(rt0.c2)))AND(rt0.c0)))) FROM rt0 ORDER BY NULL, ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.060093634220427794 ELSE rt0.c2 END) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND ((((rt0.c2, rt0.c0, rt0.c1))<((rt0.c1, rt0.c1, rt0.c2))))) ASC  NULLS LAST; -- 0ms;
SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))>>(((rt0.c0) ISNULL))), ((CAST(rt0.c2 AS NUMERIC))*(NULL)), (~ (((rt0.c0) NOT NULL))) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0)&(rt0.c2))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c1 COLLATE RTRIM)), (NOT (MIN(rt0.c3))), ((('') NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) FROM rt0 WHERE (((((((((((((UPPER('457909528'))OR(CAST(x'' AS TEXT))))OR(((0.5964850853773738)=(0x68b6bfce)))))AND((+ ('-1129914123')))))OR(x'')))OR((-1161298693 IN ('1328666650', 0.3087836832957629)))))AND((((((((((((('')AND('FALSE')))OR('橬B9')))AND(-339939713)))OR('-2016604938')))AND('763929227')))OR(NULL))))); -- 1ms;
SELECT ALL (- (((rt0.c3)LIKE(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((rt0.c3)%(rt0.c0)))) FROM rt0 WHERE (((((NULL)<(x''))) NOT NULL)); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0 WHERE ((((NOT (''))) NOT BETWEEN ((((0.7216134644521282, NULL, 0.2861744724396905))==((0.93117015139344, NULL, NULL)))) AND (0.438721493060482 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((((rt0.c1)&(rt0.c0))))==((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)/(rt0.c0))) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))) AND (CAST(rt0.c0 AS BLOB))) FROM rt0 WHERE (((((NULL)LIKE(0X76a2408a))) NOT BETWEEN (0Xffffffff8ec55b76) AND (CASE '0'  WHEN -1.017369813E9 THEN '' END))); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c2) NOT NULL))) FROM rt0 WHERE (((NULL COLLATE NOCASE)>>(((x'')IS('pX⿸x'))))); -- 0ms;
SELECT ALL AVG(NULL) FROM rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) DESC; -- 0ms;
SELECT DISTINCT UPPER(((rt0.c3)||(rt0.c3))), NULL, (((((x'6ece')OR(rt0.c3)))OR(rt0.c2)) IN ()) FROM rt0 WHERE (((((NULL)LIKE('1470940515'))) NOT BETWEEN (('746193708' IN (0.8270665664028423, NULL))) AND (((((x'')OR(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END) FROM rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT AVG((rt0.c3 IN (rt0.c0))) FROM rt0 WHERE (CAST(((NULL)<('')) AS NUMERIC)); -- 0ms;
SELECT ALL ((- (rt0.c0)) IN (((rt0.c1)GLOB(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((NOT (rt0.c1)) IN (((rt0.c3)%(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ((0.04230547714474353) NOTNULL) FROM rt0 WHERE ((CASE WHEN '675796806' THEN 128981422 WHEN x'' THEN NULL WHEN x'' THEN x'' END IN ())); -- 0ms;
SELECT DISTINCT NTILE((NOT (rt0.c3))) OVER () FROM rt0;SELECT DISTINCT ((TOTAL(''))GLOB(CAST(rt0.c1 AS BLOB))), ((CAST(rt0.c1 AS INTEGER))<<(TOTAL(rt0.c2))), NTILE(((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))=((+ (rt0.c2))))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))), CAST((0.2028635716996764 IN (rt0.c1, rt0.c1)) AS NUMERIC), 0.3142808112338308 FROM rt0 WHERE ((((0.9056701389480691)) BETWEEN ((((('-197818768', 0x16b7c9c6, 0x3469478b)) NOT BETWEEN (('', -1052075477, 0x7cff6429)) AND ((NULL, 2.097112105E9, '1013538499'))))) AND (((('')==(NULL)))))) GROUP BY (NOT ((rt0.c1 IN ()))); -- 0ms;
SELECT ALL (~ ((rt0.c3 IN (rt0.c2)))), (~ (x'')), CASE WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END THEN CAST(rt0.c0 AS TEXT) WHEN (((rt0.c1))=((rt0.c0))) THEN UNLIKELY(rt0.c0) WHEN JULIANDAY(rt0.c1, rt0.c0, rt0.c3) THEN rt0.c0 END FROM rt0 WHERE (((NULL) NOT BETWEEN (NULL) AND (NULL)) COLLATE BINARY) GROUP BY (((rt0.c0 IN (rt0.c0))) NOT BETWEEN ((NOT (rt0.c3))) AND ((rt0.c3 IN ()))), (((CAST(rt0.c3 AS TEXT)))>=((rt0.c0))), CASE WHEN x'1188' THEN (~ (rt0.c0)) ELSE UNLIKELY(rt0.c2) END HAVING MIN((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE BINARY) LIMIT -137064459 OFFSET 470035466; -- 0ms;
SELECT x'' FROM rt0 WHERE ((((('S\r)Mw')OR(x'')))AND(0.17132774406481854)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((HEX(rt0.c1)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (TRIM(rt0.c2, x'236b'))) FROM rt0 WHERE (CAST(UNLIKELY(x'7c51') AS REAL)); -- 0ms;
SELECT DISTINCT CASE WHEN TYPEOF(DISTINCT rt0.c2) THEN ((rt0.c3)<=(rt0.c0)) END, NULL, UNLIKELY(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))) FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)) AS REAL) FROM rt0 WHERE (((((((((((0.40424646637211914)OR(0.6786949272644864)))AND('e')))OR('-409366264')))OR(x''))) NOT BETWEEN ((- (0x2249ba11))) AND (CAST(x'37b3' AS BLOB)))) ORDER BY ((((rt0.c1) ISNULL))/(rt0.c3)) DESC; -- 0ms;
SELECT TRIM(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c1)AND(rt0.c3))), x'', ((rt0.c1)+(rt0.c3)) COLLATE NOCASE FROM rt0 WHERE (((((('862685239', '-1500954573', NULL))!=((x'', 0.9648724232829117, NULL))))<>(((NULL)=(0.4351218383157057))))) LIMIT 2078539030; -- 0ms;
SELECT DISTINCT MAX((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c3)))) FROM rt0; -- 1ms;
SELECT UPPER(((rt0.c0) NOT NULL)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND('-946015463')))AND(rt0.c2)))%(((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))) FROM rt0 ORDER BY (((((rt0.c3)AND(rt0.c1)))AND('r&')) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST, CASE WHEN ((rt0.c0) NOTNULL) THEN IFNULL(DISTINCT rt0.c0, 0.2810522407865874) END ASC; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT ((-1800420907)AND(rt0.c0)), 0.5799809830459116) FROM rt0 WHERE ((- (((NULL) IS TRUE)))) GROUP BY ((rt0.c1)|(rt0.c2)) COLLATE BINARY, ((((NULL)OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((rt0.c3)<=(rt0.c2)))), rt0.c3 HAVING rt0.c2; -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt0.c2 AS REAL)) OVER () FROM rt0; -- 0ms;
SELECT ALL (NOT (CAST(rt0.c1 AS TEXT))) FROM rt0 WHERE (((CASE WHEN '-516172401' THEN 0.585921136580978 ELSE '^c7~ 㙠Bzo' END) IS FALSE)); -- 0ms;
SELECT ALL (~ ((NOT (rt0.c0)))) FROM rt0 WHERE (((0.7695634539500492) NOT BETWEEN ('O') AND ('-197818768')) COLLATE RTRIM); -- 0ms;
SELECT ALL DATE(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)), CASE WHEN rt0.c0 THEN 681688691 END, ((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)), rt0.c1) FROM rt0 WHERE ((((((((((('>')OR('{잮ᑃF䋜')))AND(x'0dca')))AND('0.9344869143320969')))AND(x''))) IS FALSE)); -- 0ms;
SELECT CASE WHEN (rt0.c2 IN ()) THEN NULL ELSE ((rt0.c3)AND(rt0.c1)) END FROM rt0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE ((+ ((((x''))<((x'')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))=(((rt0.c1) IS TRUE))) FROM rt0 WHERE (CAST(((NULL) BETWEEN (0.8801056722926117) AND (0.2810522407865874)) AS INTEGER)) GROUP BY SQLITE_COMPILEOPTION_GET((- (rt0.c0))) HAVING ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)>((- (rt0.c0)))); -- 0ms;
SELECT (- (((rt0.c3)>(rt0.c1)))), x'', ((((((rt0.c0)<(rt0.c2)))OR(((rt0.c1) IS FALSE))))AND(((rt0.c0) NOTNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT (~ (TRIM(x''))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS REAL)) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (COUNT(*))) FROM rt0 WHERE (((NULL) BETWEEN ('-923062795') AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (CAST(rt0.c1 AS TEXT) IN ()), (((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, (((rt0.c2, rt0.c2, rt0.c1))>=((rt0.c2, '', rt0.c3))), SQLITE_COMPILEOPTION_GET(rt0.c1))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN 'se' THEN rt0.c0 WHEN '{6}' THEN rt0.c0 ELSE rt0.c0 END, '', (rt0.c0 IN (rt0.c3))))), DENSE_RANK() OVER ( ORDER BY (- (CAST('-1952398306' AS TEXT))) DESC), ((CAST(rt0.c0 AS INTEGER))/((+ (rt0.c1)))), CASE CAST(rt0.c2 AS BLOB)  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN ((rt0.c1)>>(rt0.c3)) END, (NOT ((rt0.c2 IN ()))), rt0.c1 FROM rt0 WHERE (CAST(((((((((((((x'')AND(0.1982615472566841)))OR(x'')))OR(0.05773803311453296)))OR('^?z)&')))OR(NULL)))OR(0.42274097755018514)) AS REAL)); -- 1ms;
SELECT DISTINCT ((CASE WHEN '-1098764296' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END)<<(0.10261104087297934)) FROM rt0 GROUP BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))&((NOT (rt0.c1)))); -- 0ms;
SELECT (((('') NOTNULL))GLOB(((rt0.c2)+('Cp|&bOx3r')))) FROM rt0 WHERE ((((((('td')) BETWEEN (('1527942086')) AND (('N\hTCeq罃')))))<(('')))); -- 0ms;
SELECT ALL CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS BLOB) FROM rt0 WHERE (((ABS(DISTINCT 1844886553)) BETWEEN ('-2025436300') AND (((NULL)<(x''))))) GROUP BY ((((((((rt0.c1 COLLATE NOCASE)AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c3)<(rt0.c0)))))OR(((rt0.c2)IS NOT(rt0.c1)))))OR((~ (rt0.c3)))) HAVING ((TIME(rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3 IN (rt0.c0))) AND (HEX(DISTINCT rt0.c2))); -- 0ms;
SELECT ALL ((((rt0.c1)AND((~ (rt0.c3)))))OR(AVG(rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL (('')>=(CAST(rt0.c3 AS NUMERIC))) FROM rt0 WHERE (((NULL)/(0.16810492720887227)) COLLATE NOCASE); -- 0ms;
SELECT ALL (~ (CAST(rt0.c1 AS INTEGER))) FROM rt0 WHERE (((LTRIM(x'4626', NULL)) BETWEEN ((((('!譍㺍')AND(1.906816823E9)))AND('1383675791'))) AND (((0.785660172638373) NOT BETWEEN ('Z랣') AND ('-1110152179'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)>=(rt0.c0))) NOT NULL) FROM rt0 WHERE ('-601166401'); -- 0ms;
SELECT AVG(rt0.c1) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0 WHERE (((((TYPEOF(x''))AND(0.09484144105794245)))AND((- (x''))))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((((0.7445525922672794)) BETWEEN ((((NULL) IS FALSE))) AND (((((('-1973715475')OR(x'')))OR(x'')))))); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN CASE WHEN rt0.c2 THEN rt0.c3 END THEN (~ (rt0.c3)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END WHEN ((rt0.c2)||(rt0.c2)) THEN rt0.c3 WHEN (rt0.c2 IN (rt0.c1, rt0.c0)) THEN GROUP_CONCAT(rt0.c1) ELSE rt0.c3 COLLATE NOCASE END, ((TIME(rt0.c0, rt0.c3, rt0.c0, rt0.c3, rt0.c0))!=(NULLIF(NULL, rt0.c1))), ((((((rt0.c3) NOT NULL))AND(TOTAL(rt0.c1))))OR(((rt0.c3) ISNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE BINARY)>(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)), TYPEOF(rt0.c0 COLLATE NOCASE), COUNT(*) FILTER(WHERE LIKELY(rt0.c3)) OVER () FROM rt0 ORDER BY CAST(rt0.c3 AS NUMERIC) DESC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c1 IN ())) FROM rt0; -- 1ms;
SELECT DISTINCT (((((rt0.c2) NOTNULL)))>((((((((((rt0.c3)AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))AND('8/]'))))) FROM rt0 LIMIT -1420224622 OFFSET -1098764296; -- 0ms;
SELECT ((SQLITE_COMPILEOPTION_GET(rt0.c3))==(IFNULL(1.906816823E9, rt0.c0))) FROM rt0 WHERE ((('-2068500032')IS(x'')) COLLATE BINARY) LIMIT 715729367 OFFSET -1129914123; -- 0ms;
SELECT COUNT(*), FIRST_VALUE((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) IS FALSE)) OVER (), CASE LAST_INSERT_ROWID()  WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c2)>>(rt0.c2)) END, TOTAL(RTRIM(rt0.c2) COLLATE RTRIM) OVER (), ((CASE rt0.c0  WHEN 0.4226148893217143 THEN rt0.c1 ELSE rt0.c3 END)<(TRIM(rt0.c1, rt0.c2))) FROM rt0 WHERE ((NULL IN (CASE NULL  WHEN 9.77015875E8 THEN 6.75796806E8 ELSE x'' END, ((NULL) NOT BETWEEN (508081618) AND (x'd1cc'))))); -- 0ms;
SELECT ALL MIN(((rt0.c1)GLOB(rt0.c2))), UPPER((((rt0.c0)) NOT BETWEEN ((0.36304820755263467)) AND ((rt0.c0)))), ((((((rt0.c2)+(rt0.c0)))AND(rt0.c3 COLLATE RTRIM)))OR((+ (rt0.c2)))) FROM rt0 WHERE ((+ (CAST(NULL AS REAL)))) LIMIT 394663632; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1))) OVER (), CASE WHEN 'wM%x' THEN ((rt0.c0) BETWEEN (rt0.c2) AND (NULL)) WHEN rt0.c0 COLLATE BINARY THEN ABS(rt0.c3) WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN rt0.c2 COLLATE NOCASE WHEN (((rt0.c1))>=((rt0.c3))) THEN rt0.c2 COLLATE NOCASE WHEN rt0.c3 COLLATE RTRIM THEN (- (rt0.c2)) END, (((((rt0.c1 IN (rt0.c2)))OR(((rt0.c1)/(rt0.c0)))))OR(rt0.c1 COLLATE BINARY)) FROM rt0 WHERE ((((((+ (0.8478723068527884)))AND((((NULL))<((NULL))))))OR((NOT (NULL))))) ORDER BY '' DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT MAX(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM) FROM rt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT (((NULL))>((COUNT(x'')))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN TOTAL(rt0.c1) THEN (+ (0.7167281956111967)) ELSE CAST(rt0.c1 AS TEXT) END, COUNT(*), GROUP_CONCAT((((rt0.c2, rt0.c3, rt0.c2))>((rt0.c1, rt0.c2, rt0.c2)))), (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE NOCASE, UNLIKELY(DISTINCT ((rt0.c2) NOTNULL)), 0.11677045744141723, TRIM(DISTINCT ((rt0.c1)*(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2) IS TRUE))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE NULL END)))OR(('!譍㺍' IN (rt0.c0)))), CASE WHEN ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (((rt0.c1))>((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END WHEN rt0.c2 THEN TOTAL(rt0.c2) END, SUM((rt0.c0 IN ())) FROM rt0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT LIKE('wa', rt0.c2, '0')), LAG(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM, (((~ (rt0.c2)))>=(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)), (- ((((rt0.c0)) NOT BETWEEN ((x'')) AND ((0.8716129686863656)))))) OVER (), ((((rt0.c1, '-2031101638', rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, 0xffffffffb877bb0c)) AND ((rt0.c3, rt0.c2, rt0.c2))) IN ()) FROM rt0 LIMIT -1784821842 OFFSET -1493136799; -- 4ms;
SELECT DISTINCT (((~ (rt0.c2))) NOT BETWEEN (SUM(rt0.c1)) AND (((rt0.c3)/(rt0.c2)))) FROM rt0 WHERE (UNLIKELY(((((x'')OR(0.40424646637211914)))OR('')))); -- 0ms;
SELECT DISTINCT (NOT ((rt0.c3 IN (rt0.c3)))) FROM rt0 WHERE ((((((((((- (0.11252528614301038)))OR(((0.9344869143320969)>(x'')))))AND(((-923062795)OR('v')))))OR(CHAR(0xffffffff82417892, x'7b0a', 1e500))))AND(HEX('47CO1a')))); -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN (((((rt0.c2))>=((rt0.c0))))) AND (((+ (rt0.c2))))) FROM rt0; -- 0ms;
SELECT (((rt0.c3)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE)) AND (((rt0.c3 IN (NULL, rt0.c3))))), rt0.c2, (NOT (rt0.c3)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL x'', CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c0) IS TRUE) END, '' FROM rt0; -- 0ms;
SELECT ((x'')IS(CAST(rt0.c3 AS TEXT))) FROM rt0; -- 0ms;
SELECT DISTINCT AVG(LIKELIHOOD(rt0.c3, 0.5699809405821555)) OVER ( ORDER BY (rt0.c3 IN ()) COLLATE NOCASE  NULLS FIRST) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT LIKELY(rt0.c3) COLLATE BINARY, load_extension((rt0.c2 IN (rt0.c2)), (0X277129db IN (rt0.c1))), (((rt0.c3)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) FROM rt0 WHERE (((((0.6829345949489372) NOTNULL))>=(TRIM(DISTINCT 0.027374097140340448)))); -- 0ms;
SELECT DISTINCT x'7581a4f6790a', HEX(((rt0.c2) NOT NULL)), ((MIN(rt0.c0))<<(((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c3)))) FROM rt0 WHERE (((((x'd32e4a07') IS FALSE)) NOT BETWEEN ((('WF') NOT BETWEEN ('1383675791') AND (NULL))) AND (CAST(0.33547270181421474 AS INTEGER)))) LIMIT -1952398306 OFFSET -1469175609; -- 0ms;
SELECT ALL ((((CAST(rt0.c0 AS BLOB))OR(((rt0.c0) IS TRUE))))OR(MIN(rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT JULIANDAY(((rt0.c3) IS TRUE), ((rt0.c2) NOTNULL), ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) FROM rt0 WHERE ('1281615932') ORDER BY CASE WHEN rt0.c3 THEN 0Xffffffff8a5b7ded WHEN ((rt0.c2)LIKE(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN (NULL IN ()) THEN (rt0.c2 IN (rt0.c2)) WHEN IFNULL(rt0.c0, rt0.c0) THEN CAST(rt0.c2 AS TEXT) WHEN CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c1) IS FALSE) END ASC  NULLS LAST; -- 0ms;
SELECT ALL (rt0.c1 IN (rt0.c2, rt0.c0)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL MAX(CAST(rt0.c2 AS NUMERIC)) FROM rt0 WHERE (((CAST(NULL AS INTEGER)) IS TRUE)); -- 0ms;
SELECT ALL TRIM(((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))), x'f034', CASE rt0.c2  WHEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))) THEN ((rt0.c1)>=(rt0.c0)) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((x''))) END FROM rt0 WHERE (((((CAST('-552216537' AS REAL))AND(((NULL) ISNULL))))AND(((x'')LIKE(NULL))))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))OR('-923062795')), LAST_INSERT_ROWID() COLLATE BINARY, CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((1191194965) BETWEEN (rt0.c3) AND (rt0.c3)) THEN (((rt0.c0, rt0.c1, rt0.c1))<((rt0.c3, rt0.c1, rt0.c1))) END FROM rt0; -- 1ms;
SELECT ((((rt0.c3)AND((rt0.c0 IN ()))))AND(((rt0.c2) IS TRUE))) FROM rt0; -- 0ms;
SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))OR(MAX(rt0.c1))))OR(((0Xfffffffff174a823)*(rt0.c0)))), (((rt0.c0)>(rt0.c2)) IN ()), ((json_array_length(rt0.c3)) NOT NULL) FROM rt0 WHERE ((((CHAR(0.8746791218741071)))=((((NULL) NOT BETWEEN ('Pj') AND (x'')))))) LIMIT -2146555646 OFFSET -398327036; -- 0ms;
SELECT DISTINCT 'DBR1' FROM rt0 WHERE (((((x'') NOTNULL))<<((((NULL))>((x'')))))); -- 0ms;
SELECT ALL ((rt0.c2)>=(SUM(rt0.c0))) FROM rt0 LIMIT -1231043923; -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c3)) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) OVER () FROM rt0 WHERE (0.40496694675274547) GROUP BY CASE WHEN (((rt0.c3, rt0.c1, rt0.c1))!=((rt0.c1, rt0.c3, rt0.c0))) THEN rt0.c1 COLLATE BINARY END, ((rt0.c1 COLLATE BINARY)||((rt0.c3 IN (rt0.c2, rt0.c2)))), ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))|(((rt0.c3)/(rt0.c0)))); -- 0ms;
SELECT ALL (MAX(rt0.c3) IN ()), ((NULL)<<(GROUP_CONCAT(rt0.c1))), UNLIKELY(DISTINCT ((rt0.c0)/(rt0.c0))) FROM rt0 WHERE (((((NULL)%(NULL))) NOT NULL)) LIMIT -339939713 OFFSET 514957970; -- 0ms;
SELECT ((NOT (rt0.c3)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL))+(SUM(rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c2) IS TRUE)) BETWEEN (0.2861744724396905) AND (rt0.c1)), ((CAST(rt0.c0 AS BLOB)) NOT NULL), (~ (CAST(rt0.c3 AS REAL))), MAX(((rt0.c1)>>(rt0.c2))), GROUP_CONCAT(rt0.c3) OVER (), rt0.c0, (~ (CAST(rt0.c0 AS INTEGER))) FROM rt0 WHERE (((((CAST(x'' AS NUMERIC))AND(CASE x''  WHEN '0.36145257727203206' THEN 0X1a27ef53 ELSE NULL END)))OR((('-1666429929') NOT NULL)))); -- 0ms;
SELECT DISTINCT CASE (((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c3)))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN 'gyJj' WHEN rt0.c1 THEN rt0.c0 END THEN CASE WHEN rt0.c2 THEN '' ELSE rt0.c3 END END FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3 IN ()))AND(((rt0.c0)-(rt0.c1)))))OR(((rt0.c0) NOT NULL))) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1)==((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT 0.271535341783545 FROM rt0 WHERE (((((((((0.2424908862069023 COLLATE BINARY)OR(((x'') NOTNULL))))OR(json_object(NULL, x''))))AND((((x'', '1771186183', -941820205))>((NULL, -923062795, ''))))))AND(((0.047747840485054094) ISNULL)))) GROUP BY NULLIF(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)), ((((rt0.c0)AND(rt0.c3)))AND(rt0.c1))) HAVING CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)<<(rt0.c2)) END; -- 0ms;
SELECT (((((((((rt0.c1)AND(rt0.c1)))AND(0.11693563519514849)))AND(x'')))OR(rt0.c3)) IN (CAST(8.1566182E7 AS REAL))), (((rt0.c1) NOTNULL) IN ()), (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END IN ()), CAST(rt0.c0 AS BLOB) COLLATE BINARY, x'' FROM rt0; -- 1ms;
SELECT DISTINCT (- (COUNT(rt0.c1))) FROM rt0 WHERE (COALESCE(DISTINCT ((0x132e8e8f)IS NOT(NULL)), ((-9.82770171E8) IS TRUE), ((x'')<('-607325798')), ((NULL)+(NULL)), 'No&' COLLATE RTRIM, x'9402')); -- 0ms;
SELECT DISTINCT ((((0.5677228885012898)<(rt0.c2))) ISNULL), (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()), rt0.c3 FROM rt0 LIMIT -24342300; -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN (((- (rt0.c2)))) AND (((((rt0.c1))<>((rt0.c2)))))), MAX(((rt0.c3)LIKE(rt0.c1))), NTILE(x'') OVER ( ORDER BY CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c1)>=(rt0.c1)) WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c2) NOT NULL) WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c3) ISNULL) ELSE rt0.c0 END DESC) FROM rt0 WHERE ((((('SMW\n') IS FALSE)) NOTNULL));SELECT DISTINCT CAST((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) AS BLOB) FROM rt0; -- 1ms;
SELECT DISTINCT ((COUNT(rt0.c3)) ISNULL) FROM rt0 WHERE ((('') ISNULL)); -- 0ms;
SELECT ((((((((((rt0.c0)LIKE(rt0.c1)))OR(((((rt0.c1)AND(NULL)))OR(rt0.c2)))))OR(((rt0.c3)>=(rt0.c1)))))AND(CAST(rt0.c1 AS INTEGER))))OR(rt0.c0 COLLATE BINARY)) FROM rt0 WHERE ((~ (NULL))); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(rt0.c3, 0.7571472086335324)) BETWEEN (((rt0.c3)&(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)) FROM rt0 LIMIT 582317289 OFFSET -1973715475; -- 0ms;
SELECT DISTINCT ((json_array('-607325798', rt0.c3))==(1682888789)) FROM rt0 WHERE (GLOB((-1.434470125E9 IN ()), (((467598186))>(('-2008431834'))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt0; -- 1ms;
SELECT DISTINCT CAST(UNLIKELY(NULL) AS BLOB), AVG((rt0.c0 IN (rt0.c3))) OVER (), ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) NOT NULL) FROM rt0 WHERE (((('323205037')>('\n\r1dJB')) IN ())); -- 0ms;
SELECT DISTINCT ((((((rt0.c3)AND(rt0.c3)))AND(NULL))) BETWEEN (CASE rt0.c3  WHEN rt0.c3 THEN '-208053349' ELSE rt0.c0 END) AND (((rt0.c1)>(rt0.c3)))), ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END) NOTNULL), CAST(((((rt0.c2)AND(x'8b83')))OR('s\r)mw')) AS NUMERIC) FROM rt0 WHERE (CAST(x'' AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((((rt0.c2)OR(rt0.c3)))AND(''']U옍rnUC'))))<((rt0.c3))) FROM rt0 WHERE (CASE WHEN ((NULL) BETWEEN (0.10865543144637202) AND (x'')) THEN LOWER(DISTINCT x'fcaa') ELSE '0.5677228885012898' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT (((((rt0.c3)<<(rt0.c1))))<>(((- (rt0.c3))))), LIKELY(((rt0.c3) NOTNULL)), CAST((rt0.c1 IN (rt0.c1)) AS BLOB) FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN 0.4657802067007486 ELSE ((NULL) BETWEEN ('2086502211') AND ('1013538499')) END); -- 0ms;
SELECT ALL ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)OR(rt0.c1 COLLATE NOCASE)))OR((((rt0.c2, rt0.c1, rt0.c1, rt0.c3, rt0.c0))>=((rt0.c3, rt0.c2, rt0.c1, rt0.c3, rt0.c2))))) FROM rt0 WHERE (((CAST(0.4554865553721973 AS TEXT)) NOTNULL)) ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c3), SUBSTR(HEX(rt0.c0), ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))  NULLS FIRST, CAST(rt0.c0 AS TEXT) DESC; -- 0ms;
SELECT DISTINCT '', ((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))/(((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(0.7123236596446778)))), COALESCE(((rt0.c3)>>(rt0.c2)), ((rt0.c0)>(rt0.c0)), ((rt0.c3)+(rt0.c3)), rt0.c0), ((((rt0.c1)|(rt0.c2)))IS((((rt0.c3, x'10f0', rt0.c1))>=((rt0.c1, rt0.c0, rt0.c2))))), ROW_NUMBER() OVER () FROM rt0 WHERE ((((('G&7kHbrf')%(862685239))) BETWEEN ((((-1.973715475E9))<=((x'6933')))) AND (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((rt0.c2)IS NOT(rt0.c3)) IN ()), (((rt0.c3)) NOT BETWEEN ((((rt0.c2) ISNULL))) AND ((((rt0.c1)/(rt0.c3))))), ((((rt0.c0) ISNULL)) NOT BETWEEN ((NOT (rt0.c2))) AND (((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))) FROM rt0 WHERE (LIKE(STRFTIME(0.07440869770731784, NULL, 0.4095876309500628, x'38f4', x''), (~ (NULL)))); -- 0ms;
SELECT ALL ((('0.8204610833845101')) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '-1593549554' END)) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))))) FROM rt0 WHERE (CAST((+ (NULL)) AS REAL)); -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE ((- (NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT NULL, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))), (((((((rt0.c0))<((rt0.c3))))AND(MAX(rt0.c1))))OR(((rt0.c1) IS FALSE))), DATETIME(((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)), UNLIKELY(rt0.c3), ((rt0.c0)GLOB(rt0.c3))) FROM rt0 NOT INDEXED WHERE (CAST(((4.70035466E8) NOTNULL) AS REAL)); -- 0ms;
SELECT DISTINCT ((((((((CAST(rt0.c1 AS BLOB))AND(CAST(rt0.c0 AS INTEGER))))AND(CAST(rt0.c3 AS BLOB))))AND(((rt0.c2)>>(rt0.c3)))))AND(((rt0.c2) IS FALSE))) FROM rt0 WHERE (((((NULL) NOTNULL))<>(CAST('661437650' AS REAL)))); -- 0ms;
SELECT DISTINCT rt0.c1, ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM, (((rt0.c2 IN ()))>=(COUNT(*))) FROM rt0 WHERE ((((0.026411171079620654) BETWEEN (x'91a1') AND (x'')) IN ())) LIMIT 1305790183 OFFSET 1183315083; -- 0ms;
SELECT ALL ((((((((((rt0.c2)<=(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c1 IN ()))))AND(CAST(rt0.c3 AS INTEGER))))OR(((rt0.c3)<>(rt0.c2)))) FROM rt0 WHERE ((((((0.6988461820135583)&(x'')), CASE NULL  WHEN '~Ӯ' THEN 'gyJj' END, CASE 'l1b\rrTiY\n'  WHEN '377187898' THEN 0.03195548553925387 WHEN 0.3010993175011102 THEN NULL WHEN 0x6a185c9 THEN 0X408e7b86 ELSE x'bc87' END))>=((CASE NULL  WHEN 0.46815634771098524 THEN 0Xffffffffb4638c52 WHEN x'dc43bbdd2206' THEN 0.18090890271162352 WHEN 'AL6Wmu' THEN x'' ELSE NULL END, (((0.3771059575106005))=((''))), x'33c7' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT LAG('-1098764296', rt0.c0, (((((rt0.c0 IN (rt0.c0)))OR(CAST(rt0.c1 AS INTEGER))))AND((- (rt0.c0))))) OVER () FROM rt0 WHERE (IFNULL(DISTINCT json(1.083079558E9), (~ (NULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN TOTAL(rt0.c2) THEN json_patch(rt0.c3, rt0.c2) WHEN ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN rt0.c2 THEN (((0.5117751746361459)) BETWEEN ((rt0.c3)) AND ((NULL))) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END, (((0.5439064392752136 IN ()))GLOB(rt0.c2)), rt0.c0 FROM rt0 WHERE ((+ (CASE WHEN x'92d5' THEN 0.9403666307906455 ELSE '' END))); -- 0ms;
SELECT (~ (CAST(rt0.c1 AS TEXT))), IFNULL(rt0.c3, '1982055092' COLLATE BINARY), 0Xfffffffff17cfe1d FROM rt0 WHERE ((((CASE WHEN 0.8985802458174699 THEN NULL END))==((CAST(x'' AS BLOB))))); -- 0ms;
SELECT ((- (rt0.c1)) IN ()) FROM rt0; -- 0ms;
SELECT (((rt0.c2, rt0.c3, rt0.c1)) BETWEEN (('-373762182', ((x'') IS FALSE), (((rt0.c0))>((NULL))))) AND ((rt0.c3, 0.4104816814734211, ((rt0.c0)<=(rt0.c0))))) FROM rt0 WHERE ((((NULL IN (NULL))) BETWEEN ((((0Xffffffffbb1ac25b))==((x'')))) AND ((('879314827') IS TRUE)))); -- 0ms;
SELECT DISTINCT UNLIKELY(rt0.c1) COLLATE NOCASE FROM rt0 WHERE (((NULL COLLATE BINARY)>=(((x'c0ed') ISNULL)))); -- 0ms;
SELECT SUM(((rt0.c2)||(rt0.c3))) FROM rt0 WHERE (CASE WHEN '&N' COLLATE NOCASE THEN (('1982055092')%(x'ee00')) WHEN (0.4977734761682695 IN ()) THEN ((((((((x'')AND(NULL)))AND(x'c7054c6d')))OR(0.34364068832982797)))AND(NULL)) WHEN ((NULL)<(0.4421708194057602)) THEN ((NULL)>=('-1191259012')) END); -- 0ms;
SELECT DISTINCT ((((rt0.c1)|(rt0.c1))) NOT NULL) FROM rt0 WHERE (SQLITE_VERSION()) UNION SELECT HEX(DISTINCT x'') FROM rt0; -- 0ms;
SELECT ((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)) COLLATE NOCASE FROM rt0 WHERE (((((((((((0.12706102724320878) BETWEEN (0.5793499498639861) AND ('0.6378553340976743')))OR((((x'', x'', NULL))>=((-68717549, 0X1307d56b, x''))))))OR(((0.4657802067007486)>>('▧I')))))OR(((x'') BETWEEN (x'') AND (0.658750135140671)))))OR(((x'4f36') ISNULL)))); -- 0ms;
SELECT COUNT((rt0.c2 IN (rt0.c1))), CAST((((rt0.c0))!=((rt0.c2))) AS REAL), CASE WHEN ((rt0.c2)>(rt0.c1)) THEN COALESCE(rt0.c3, rt0.c1, rt0.c3, rt0.c1) END FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE; -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY)>>(CAST(rt0.c1 AS INTEGER))) FROM rt0 WHERE (CAST((- (1981959113)) AS INTEGER)); -- 0ms;
SELECT (((~ (rt0.c1)))LIKE(x'')) FROM rt0 ORDER BY -273056562  NULLS LAST;SELECT DISTINCT ((CAST(rt0.c0 AS BLOB)) BETWEEN ((rt0.c2 IN ())) AND ((((rt0.c2))>=((rt0.c3))))), ((((rt0.c3)LIKE(rt0.c0)))&((NOT (rt0.c2)))), (+ (((rt0.c2) IS FALSE))), x'' COLLATE RTRIM, CAST(((rt0.c2) NOTNULL) AS INTEGER) FROM rt0; -- 0ms;
SELECT RTRIM((rt0.c2 IN ())), ((((rt0.c3)<<(rt0.c1))) IS TRUE), ((((rt0.c2)GLOB(rt0.c1))) IS TRUE) FROM rt0 WHERE (CASE WHEN (+ (0.8888808292343598)) THEN (('2035093079')||(NULL)) END) LIMIT -1475545665; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0) ISNULL))AND(((rt0.c1) IS FALSE))))OR(HEX(rt0.c1))))OR(0.9355598916230796)))AND(LOWER(0.6404067479861038))) FROM rt0; -- 0ms;
SELECT ALL (((CAST(rt0.c1 AS INTEGER)))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END))) FROM rt0; -- 0ms;
SELECT ((-1314802249) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 END)) FROM rt0 LIMIT 1778844633 OFFSET -949445884; -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE x''  WHEN x'' THEN 0.8465259676459563 END) ISNULL)); -- 0ms;
SELECT ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))) BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c1)) FROM rt0 WHERE (CASE CAST(0.3142808112338308 AS REAL)  WHEN (((NULL)) NOT BETWEEN ((-2.42467325E8)) AND ((0.06816460574593297))) THEN (('橬B9') BETWEEN (x'95ae') AND (NULL)) ELSE UPPER(DISTINCT 0X49e212fc) END); -- 0ms;
SELECT DISTINCT (((((rt0.c1) NOT BETWEEN ('{5y7㘆hm') AND (rt0.c2)), rt0.c2, json_object(rt0.c1, rt0.c3, rt0.c1, rt0.c0)))>=((((rt0.c3)>(rt0.c1)), ((rt0.c1)>>(rt0.c1)), CAST(rt0.c0 AS BLOB)))) FROM rt0 WHERE (((CASE '-1784821842'  WHEN x'' THEN 0.46056268723643257 ELSE -6.07325798E8 END) ISNULL)); -- 0ms;
SELECT (~ (COUNT(rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c0))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c3) IN ()) FROM rt0 LIMIT 1189849515 OFFSET -1855068055; -- 0ms;
SELECT ((((rt0.c3)<>(rt0.c1)))<(CAST(rt0.c0 AS TEXT))) FROM rt0 WHERE (0.08405540135867984); -- 0ms;
SELECT DISTINCT (CAST(rt0.c0 AS REAL) IN ()), TOTAL(((rt0.c3)LIKE(rt0.c0))) COLLATE BINARY, ((((rt0.c1)IS NOT(rt0.c3)))<(x'')) FROM rt0 WHERE ((~ (((x'')<<(NULL))))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0 WHERE (((((('^?z)&')) BETWEEN ((x'b9f6')) AND ((x'1973')))) ISNULL)); -- 0ms;
SELECT ((CAST(rt0.c2 AS REAL))>(((rt0.c0) IS FALSE))) FROM rt0 WHERE (CASE WHEN NULL THEN ((x'490a') ISNULL) END); -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS TRUE)) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT (~ (rt0.c1)) COLLATE BINARY FROM rt0 WHERE ((((x'8b83' IN ()))*(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT SUM((~ (rt0.c3))) FROM rt0 WHERE (CAST((('*PffG')IS NOT(0.535799562045579)) AS TEXT)); -- 0ms;
SELECT ALL ((((rt0.c1)<>(rt0.c1)))|(CAST(rt0.c2 AS INTEGER))) FROM rt0; -- 0ms;
SELECT (- (TRIM(0.7782056671956843, rt0.c0))) FROM rt0; -- 0ms;
SELECT CAST(rt0.c3 COLLATE BINARY AS NUMERIC), 'z9hAp', CAST(NULL AS NUMERIC), MIN(((rt0.c2) NOT NULL)), CAST(json_type(0.1652628761273388) AS INTEGER) FROM rt0 WHERE (CASE WHEN 0.5217515752021104 COLLATE BINARY THEN (+ (-1.7976931348623157E308)) WHEN (('590467358')/(1.7976931348623157E308)) THEN '4મ' COLLATE RTRIM WHEN CAST(x'' AS TEXT) THEN (((x'dc87', x'', 'qV'))<>(('0.11244921926829532', 0.17132774406481854, NULL))) END) UNION ALL SELECT DISTINCT CASE WHEN (rt0.c1 IN ()) THEN rt0.c3 WHEN UNLIKELY(rt0.c3) THEN COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c1, rt0.c2) WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN -1.47223731E8 THEN rt0.c1 END THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END, CAST(rt0.c0 COLLATE NOCASE AS BLOB), LIKELY(TOTAL(NULL)), ((json_array_length(rt0.c0))/(MAX(rt0.c2))), json_array_length((+ (rt0.c3)), IFNULL(rt0.c1, 0.5490831343684398)) FROM rt0; -- 1ms;
SELECT ALL ((rt0.c3 COLLATE NOCASE) IS TRUE) FROM rt0 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT DISTINCT (((((rt0.c2)IS NOT(NULL))))>(((~ (rt0.c2))))), COUNT(',') OVER (), CAST(((((rt0.c1)AND(1033697125)))OR(rt0.c3)) AS BLOB), rt0.c0, CASE WHEN TOTAL(rt0.c3) THEN ((rt0.c0)>=(rt0.c0)) ELSE COUNT(rt0.c0) END FROM rt0 WHERE (CASE WHEN ((0.785660172638373) BETWEEN (NULL) AND ('0.4095876309500628')) THEN (NOT (' J')) WHEN ('-476384855' IN ('295175842')) THEN 0.12981729401003705 WHEN (NOT (0.9250325848912485)) THEN ((((((((0.4542820604002995)OR('')))OR('{5y7㘆hm')))OR(NULL)))AND(NULL)) END); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1)<>(rt0.c1)) END FROM rt0; -- 0ms;
SELECT ((((rt0.c2)<=(rt0.c0)))IS NOT(((rt0.c2) ISNULL))) FROM rt0 WHERE ((((- ('')))||(2.086502211E9 COLLATE BINARY))) LIMIT 9223372036854775807; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)>>(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))) FROM rt0 WHERE (CAST(NULL AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND(((rt0.c3)/(rt0.c2)))), (CAST(rt0.c2 AS BLOB) IN ()), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(rt0.c2))>(CASE WHEN rt0.c0 THEN rt0.c0 END)) FROM rt0 WHERE ('0.33547270181421474'); -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c0 AS BLOB)), CASE ((rt0.c0) NOT NULL)  WHEN rt0.c3 COLLATE NOCASE THEN x'' WHEN ((rt0.c3)=(rt0.c3)) THEN rt0.c3 COLLATE RTRIM WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)) THEN ((rt0.c3) IS FALSE) END, (rt0.c1 IN ()) COLLATE BINARY FROM rt0 WHERE ((('126300911' COLLATE RTRIM)<<(((((((((0.42099066054296974)AND('601898968')))OR(NULL)))OR(-1500954573)))OR(0.48715943835454745))))) GROUP BY ((CAST(rt0.c3 AS NUMERIC))<=(rt0.c1)), (CAST(rt0.c3 AS TEXT) IN ()), CASE WHEN 'Ea,r' THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) WHEN (((rt0.c3))>=((rt0.c1))) THEN (((rt0.c1))>=((rt0.c1))) WHEN (('0.679881370203377')<=(rt0.c2)) THEN ((x'610e') NOT NULL) ELSE DATE(rt0.c0, rt0.c0, rt0.c2, 'B{N7*O', rt0.c3) END; -- 1ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)-(rt0.c3))) BETWEEN (rt0.c2) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)), (((((rt0.c1)&(rt0.c0))))==((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))), (((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c3)GLOB(rt0.c1)))) FROM rt0; -- 4ms;
SELECT ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) IS FALSE) FROM rt0 WHERE (((0.9525211788368868) NOT NULL)) ORDER BY (NOT ('-677309770')) ASC  NULLS FIRST, '1083079558'  NULLS LAST; -- 0ms;
SELECT DISTINCT rt0.c1, CAST(((rt0.c1)LIKE(rt0.c2)) AS INTEGER), ((((x'9977')AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)))AND(0X520cbf47)) FROM rt0 WHERE (IFNULL(DISTINCT CASE '1C༾.6#'  WHEN NULL THEN NULL ELSE 0.6478111090606491 END, CAST(4.70035466E8 AS BLOB))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 1ms;
SELECT DISTINCT CASE WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END THEN (((rt0.c1, rt0.c1, rt0.c3, rt0.c3, rt0.c3))>=((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1))) END FROM rt0 GROUP BY (~ (rt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT LIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE x'4b6b' END) FROM rt0; -- 1ms;
SELECT 0.2787806260628771 FROM rt0 NOT INDEXED WHERE (CASE WHEN (- (NULL)) THEN 'Cla76' WHEN ((0.9260933075543862)||('0.4095876309500628')) THEN (((NULL, 0.19688646481396888, NULL)) BETWEEN ((1441175372, 0.22667787627172697, 0x70b835d7)) AND (('-1339038095', NULL, x'0906'))) WHEN (('-1952398306') ISNULL) THEN CASE WHEN '-941820205' THEN 'GP7' WHEN 0.7402366041940653 THEN ')-	YZ' WHEN 0X33e5eabe THEN 0Xfffffffffa524e68 END END); -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE ((~ (((x'') IS TRUE)))); -- 0ms;
SELECT ((((rt0.c2)IS NOT(rt0.c3))) NOT BETWEEN (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 END) AND ((- (rt0.c1)))), NULL, ((((rt0.c1)<>(rt0.c3)))>=(((rt0.c3)&(0x53b44a95)))) FROM rt0; -- 0ms;
SELECT DISTINCT LAG(((highlight(rt0.c3, rt0.c3, rt0.c3, rt0.c3)) NOTNULL), ((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))>(rt0.c2)), CAST(((rt0.c2)>=(rt0.c0)) AS NUMERIC)) OVER ( ORDER BY '1978661219' DESC  NULLS FIRST, ((rt0.c1) IS TRUE) DESC  NULLS LAST), COUNT(*) OVER (), (((NOT (rt0.c3)))<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)) FROM rt0;SELECT DISTINCT (((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c2) AND (NULL)), SUM(UNLIKELY(DISTINCT rt0.c1)) OVER (), ((((((rt0.c0) NOT NULL))OR(CASE rt0.c3  WHEN rt0.c0 THEN x'4dac' WHEN rt0.c1 THEN '>7' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c1) IS TRUE))) FROM rt0 WHERE (CAST((- (NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT '-563393833' FROM rt0; -- 0ms;
SELECT ALL ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)<<(INSTR(rt0.c1, rt0.c3))) FROM rt0 GROUP BY ((rt0.c2) IS FALSE); -- 0ms;
SELECT DISTINCT (~ (((rt0.c1)+(rt0.c2)))) FROM rt0 WHERE ((LIKELIHOOD(x'7758', 0.7780082045763836) IN ())) ORDER BY CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN rt0.c1 ELSE json_array_length(rt0.c2, rt0.c2) END DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((('B{N7*O')LIKE(rt0.c1))) NOTNULL) FROM rt0 WHERE (x'5f71'); -- 0ms;
SELECT (- (COUNT(rt0.c1))) FROM rt0 WHERE (((((((-1157348143)OR(0.5175070814934124)))AND(0x64cd063d))) BETWEEN (('0.847207186903732' IN (NULL))) AND ((0Xffffffff90c5a0bb IN (0.36983337617223866, NULL))))); -- 0ms;
SELECT ((((rt0.c0)*(rt0.c2)))!=(AVG(rt0.c1))), LOWER('1844886553'), CASE WHEN (rt0.c0 IN (rt0.c1)) THEN AVG(rt0.c0) ELSE SUM(rt0.c0) END FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE NOCASE IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(rt0.c2) OVER ( ORDER BY CAST(((rt0.c3) IS TRUE) AS INTEGER) DESC  NULLS FIRST, rt0.c3 ASC  NULLS LAST) FROM rt0 LIMIT 1691158077; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c3)%(0.3681881038843492))) OVER () FROM rt0 WHERE (((((x'') NOT BETWEEN ('-2092278150') AND (0.26774516377393665))) IS FALSE)); -- 0ms;
SELECT ((rt0.c1) NOT NULL) COLLATE RTRIM FROM rt0 WHERE (((((x'') NOT BETWEEN ('') AND (x'')))||(CAST(-339939713 AS INTEGER)))); -- 0ms;
SELECT ALL ((x'4556')AND(CAST(rt0.c0 AS BLOB))) FROM rt0; -- 0ms;
SELECT ALL '1942819101', ((((((((TOTAL(rt0.c1))AND(CAST(rt0.c0 AS TEXT))))OR(rt0.c3)))OR(rt0.c3 COLLATE BINARY)))AND(rt0.c0)), CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0) ISNULL) END FROM rt0 WHERE (((((((((((x'f08f') NOT BETWEEN ('90]ｻ') AND (0.9298588969649438)))OR((((0xffffffff959dc7ae)) BETWEEN ((0.35346503098853654)) AND ((x'af10'))))))OR((((('LNaN猘')AND(x'')))OR(NULL)))))OR(((NULL)>(NULL)))))AND(x'913d' COLLATE NOCASE))) LIMIT 1328666650; -- 0ms;
SELECT ALL rt0.c0, UPPER(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END), 'Ko#/U}a' FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)|(0.09533247558237912)))>=(LIKELY(rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 END)OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(0.16071032275953756)) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM) ISNULL) FROM rt0 WHERE (((('1942819101' IN (0.026411171079620654, 0.4095876309500628))) NOT NULL)); -- 1ms;
SELECT ALL MIN(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) FROM rt0; -- 0ms;
SELECT ALL rt0.c3, (+ (CASE rt0.c2  WHEN rt0.c0 THEN '910759169' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN 0x71a7b737 ELSE rt0.c2 END)), (((((rt0.c2)AND(rt0.c3)))AND(NULL)) IN ()) FROM rt0 WHERE (CAST((NULL IN ()) AS BLOB)); -- 0ms;
SELECT CAST(QUOTE(rt0.c0) AS BLOB) FROM rt0 WHERE ((((NULL IN ()))>(2.003063175E9 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT TOTAL('-1298115612') OVER (), ((NULL)!=((((rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c2, rt0.c3, 0Xffffffffe13bd58f))))), ((((((rt0.c3)AND(-1.800420907E9)))AND(rt0.c0))) IS TRUE) FROM rt0 WHERE ((('?aBY')GLOB(0.7858029090483224)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE '1503004606'  WHEN ((rt0.c2) ISNULL) THEN (- (rt0.c0)) WHEN UPPER(rt0.c3) THEN (((rt0.c3, rt0.c1, rt0.c1, rt0.c2, rt0.c1))<((rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c0))) WHEN ((((rt0.c0)OR(rt0.c0)))OR('Ut-')) THEN (((rt0.c2))>=((x''))) ELSE ((rt0.c2)||(rt0.c3)) END, x'', 1.470940515E9, ((((0.8533030199968922) BETWEEN (rt0.c0) AND (rt0.c1)))!=('1581398841')), TOTAL(((rt0.c3)|(rt0.c2))) OVER () FROM rt0; -- 1ms;
SELECT ((0X6494cff4)>(rt0.c3)) COLLATE BINARY FROM rt0 WHERE ((((((((('4મ')AND(NULL)))AND(x'e10f08b4')))AND(((NULL)%(1841782094)))))AND(UNICODE(NULL)))); -- 0ms;
SELECT DISTINCT 0.3407540954828452, (((rt0.c0)) BETWEEN ((((rt0.c1) IS FALSE))) AND ((MAX(rt0.c2)))), ((rt0.c2)%(TOTAL(rt0.c1))) FROM rt0 WHERE ((((((0.4833064953844689 IN ()))AND((- ('')))))OR((0.5015274653657839 IN ())))); -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c3)) IS TRUE) FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT '611080883' FROM rt0; -- 0ms;
SELECT ((((CASE '-1143368679'  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END)AND((- (rt0.c3)))))AND(rt0.c1)) FROM rt0 WHERE ((((~ (x''))) ISNULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c1)IS(rt0.c1))) OVER ( PARTITION BY (((((((((rt0.c3 IN (rt0.c2)))OR(CAST(rt0.c0 AS NUMERIC))))OR(((rt0.c2)AND(rt0.c0)))))AND(((((rt0.c2)OR(rt0.c0)))AND(0.21557939329909748)))))AND((rt0.c1 IN ()))), CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN LAST_INSERT_ROWID() WHEN CAST(rt0.c0 AS TEXT) THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN 0.388098782782199 END WHEN rt0.c0 THEN (((rt0.c0))<=((rt0.c3))) ELSE (('-482430374') BETWEEN (rt0.c0) AND (rt0.c3)) END ROWS (((rt0.c3 COLLATE NOCASE))<>(('-772329451'))) PRECEDING) FROM rt0;SELECT CUME_DIST() OVER (), DENSE_RANK() OVER (), -722177634 FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2)))IS NOT(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST; -- 0ms;
SELECT DISTINCT LIKE((NOT (rt0.c2)), ((rt0.c1) NOTNULL)) FROM rt0 WHERE (CAST(IFNULL(17546896, 32825618) AS NUMERIC)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 0.21225761044898006 END)=('1266733789'))  NULLS FIRST; -- 0ms;
SELECT 'I3', COUNT(*) OVER (), ((HEX(DISTINCT rt0.c1))IS(GROUP_CONCAT(rt0.c2))) FROM rt0; -- 0ms;
SELECT (- ((('-1085816631') IS FALSE))) FROM rt0; -- 0ms;
SELECT (((rt0.c3)*(rt0.c2)) IN (((rt0.c2)<=(rt0.c1)))) FROM rt0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN ((0.6684492932487123)LIKE(x'dd8e')) THEN NULL END); -- 0ms;
SELECT ALL ((((rt0.c1) IS FALSE))==(rt0.c1)) FROM rt0 NOT INDEXED GROUP BY rt0.c1 HAVING ((~ (rt0.c3)) IN ()); -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c0 END) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) FROM rt0 WHERE ((CAST('s' AS TEXT) IN (CAST('1779406151' AS BLOB), '-2052257879' COLLATE BINARY))) GROUP BY ((((json_object(rt0.c0, rt0.c2))OR(CAST(rt0.c0 AS BLOB))))OR(rt0.c1 COLLATE BINARY)), (((rt0.c1)IS NOT(rt0.c3)) IN ()), rt0.c1 HAVING (((((rt0.c0))>((rt0.c1))))==(QUOTE(rt0.c0))); -- 0ms;
SELECT DISTINCT 0.20459967825232528 FROM rt0 WHERE ((((((''']U옍rnUC' IN ()))OR(0.2270638309605375)))OR((((0.40693647570270064, NULL, '-398327036'))==((x'', '<', NULL)))))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT HEX(DISTINCT rt0.c2)) FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))=(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG(((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) OVER () FROM rt0 ORDER BY ((rt0.c2)IS NOT('-1937908298')) COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c0, LAG(IFNULL(DISTINCT ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)), (((rt0.c2))>((rt0.c1)))), (((((rt0.c3))<>((rt0.c1))))LIKE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), rt0.c0) OVER (), TRIM(DISTINCT rt0.c0) COLLATE NOCASE FROM rt0; -- 1ms;
SELECT ALL json_array_length(MIN(rt0.c3), rt0.c0), (- (GROUP_CONCAT(rt0.c0))), CASE WHEN ((1847155918)>>(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '-1952398306' END ELSE ((((rt0.c3)AND(-1217303310)))AND(rt0.c2)) END FROM rt0;SELECT SUM(((rt0.c0) IS TRUE)) COLLATE NOCASE, ((TYPEOF(rt0.c2)) NOTNULL), (((0.15161689973818793 IN ()))==(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))), rt0.c2, ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c0) AND (x''))) AND (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))) FROM rt0; -- 1ms;
SELECT ALL HEX(DISTINCT ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) FROM rt0 WHERE ((((((((('-400151267')OR((((0X28a1be73, '678218857', 0Xffffffffc21c4ea0))<>(('c逡벴	}}', 'c', x'34c6'))))))OR(COALESCE('ᗄ6Tr', x'25d4'))))OR(0Xffffffff898791c4)))AND(1982055092))); -- 0ms;
SELECT ALL TOTAL(CASE WHEN rt0.c2 THEN rt0.c1 END) FROM rt0; -- 0ms;
SELECT ALL ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END) BETWEEN (rt0.c3) AND (rt0.c1 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0 WHERE ((((((NULL) IS TRUE)))>=((((((x'383819c4')AND(x'')))OR(0.6338035359029188)))))); -- 0ms;
SELECT ALL STRFTIME(x'', ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)), MIN(rt0.c2)), RANK() OVER (), CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS INTEGER), NULL, COUNT(*) FROM rt0 WHERE ((((('')|(x'215d')))*(-1.571619988E9 COLLATE NOCASE))) GROUP BY CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END COLLATE NOCASE, TRIM(DISTINCT 'kM뮷xYH'), ((rt0.c1 IN (rt0.c1)) IN ()), CASE NULL  WHEN 0.68116312104247 THEN ((rt0.c0)+(rt0.c1)) WHEN ((rt0.c3)IS NOT(rt0.c0)) THEN NULL WHEN (- (rt0.c3)) THEN (rt0.c1 IN (rt0.c3)) ELSE rt0.c2 END, rt0.c2 LIMIT -242467325; -- 0ms;
SELECT ALL COUNT(((rt0.c2) IS FALSE)), (CASE WHEN rt0.c3 THEN rt0.c2 END IN ()), ((((rt0.c3)&(rt0.c3))) NOT BETWEEN (((rt0.c2)+(NULL))) AND (((rt0.c2)=(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC)) NOTNULL) FROM rt0 WHERE (((((((0.667678220811776)) NOT BETWEEN ((x'')) AND (('G&7kHbrf')))))<>(((~ (NULL)))))); -- 0ms;
SELECT ALL MAX('0.4243766065622394') FROM rt0 WHERE (((x'' COLLATE NOCASE)<(((x'') NOT NULL)))) LIMIT -638602669 OFFSET -2025436300; -- 0ms;
SELECT CAST(rt0.c1 AS REAL) COLLATE NOCASE FROM rt0 GROUP BY CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC), LOWER((- (rt0.c0))), ((((rt0.c3)>(rt0.c1)))IS((+ (rt0.c1)))), rt0.c2 COLLATE NOCASE COLLATE BINARY, ((rt0.c3)GLOB(rt0.c0)) COLLATE NOCASE HAVING rt0.c0; -- 1ms;
SELECT DISTINCT LAG(CASE CAST(rt0.c0 AS NUMERIC)  WHEN rt0.c3 THEN SQLITE_SOURCE_ID() END, CAST(0.1676934588682294 AS BLOB), (((~ (rt0.c3))) NOTNULL)) OVER () FROM rt0 WHERE (((NULL)/((((x''))>=(('ꎥ1y')))))) ORDER BY (((((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c0))))&((rt0.c0 IN ()))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS TEXT))%(((rt0.c0) IS FALSE))) FROM rt0 WHERE (CASE (((-9.46015463E8, x'', x''))>=((NULL, 236830166, x'bb1e')))  WHEN ((NULL)=(x'3c5d')) THEN IFNULL(DISTINCT '.r', -1654686225) ELSE ((0.0640868053000333) NOT NULL) END); -- 0ms;
SELECT DISTINCT (((((rt0.c3))>=((rt0.c0)))) BETWEEN ((rt0.c3 IN (rt0.c3, rt0.c3))) AND ((+ (rt0.c0)))) FROM rt0 WHERE ((NOT ((('273419706')<<(x''))))) ORDER BY ((((((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))))OR(CAST(0X4ce5b2e2 AS TEXT))))AND(NULL)))AND(CAST(rt0.c2 AS NUMERIC))) DESC; -- 0ms;
SELECT DISTINCT rt0.c2, MAX(((x'')|(rt0.c2))), CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN (rt0.c1 IN (rt0.c3)) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)) WHEN (((rt0.c0))<=((0.42274097755018514))) THEN CAST(rt0.c3 AS BLOB) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END THEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) ELSE (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) END FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) NOT NULL) AS BLOB) FROM rt0; -- 0ms;
SELECT (+ ((((NULL, x'1b34', rt0.c1))==((rt0.c0, rt0.c0, rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)<=(rt0.c2)) IN ()) FROM rt0 LIMIT 381143494; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)*(rt0.c3)))AND(CAST(rt0.c2 AS NUMERIC))))OR(COUNT(rt0.c3))) FROM rt0 WHERE ((((-869041007)) BETWEEN ((CASE WHEN -1.052075477E9 THEN 0.19095127163565084 END)) AND ((NULL)))); -- 0ms;
SELECT DISTINCT CAST((- (rt0.c3)) AS INTEGER), (~ (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN '1219448531' ELSE rt0.c2 END)), rt0.c2 FROM rt0 WHERE (CAST(((((0.2424908862069023)AND(x'')))OR(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((rt0.c0)IS NOT(rt0.c3)) COLLATE NOCASE, (GROUP_CONCAT(rt0.c1) IN ((((rt0.c0))>((rt0.c1))), ((rt0.c2)*(rt0.c3)))), COUNT(*) OVER () FROM rt0 WHERE (((0.1562696936780259 IN (0.11693563519514849)) IN ())) ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))<=(UNLIKELY(DISTINCT rt0.c2))); -- 0ms;
SELECT ((((rt0.c2)IS(rt0.c2)))!=(((rt0.c0)-(rt0.c1)))), UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))), rt0.c0 FROM rt0 GROUP BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY, (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ((((rt0.c0))>=((rt0.c1))))), (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))))>=(((('-1002326641') IS TRUE)))) HAVING TOTAL(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))); -- 0ms;
SELECT DISTINCT ((rt0.c3)/(rt0.c2)) COLLATE RTRIM, FIRST_VALUE(CASE CAST(rt0.c0 AS TEXT)  WHEN rt0.c3 COLLATE NOCASE THEN (rt0.c1 IN (rt0.c2, rt0.c2)) END) OVER (), CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE NULL END  WHEN ((rt0.c1)|(rt0.c2)) THEN ((rt0.c1)<>(rt0.c2)) ELSE rt0.c3 END FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3)<(SUM(rt0.c2))) FROM rt0; -- 1ms;
SELECT DISTINCT LAG(PRINTF(((rt0.c3) NOT BETWEEN ('z9hAp') AND (rt0.c1))), ((CAST('8xkZZ>ow' AS REAL)) BETWEEN (SQLITE_COMPILEOPTION_USED(rt0.c3)) AND (((rt0.c3)<('1441927773')))), ((CASE rt0.c2  WHEN 0.29007053808359584 THEN rt0.c0 ELSE rt0.c2 END)<=(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c3))))) OVER () FROM rt0 WHERE (CASE (-1618330320 IN ())  WHEN ((0.1661073307542188)>('0.44217200176592764')) THEN (0.9116878486863802 IN (0.306465792813174)) END); -- 0ms;
SELECT ALL (((rt0.c1, x'', rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c3) BETWEEN (x'') AND (rt0.c3)), TRIM(x'dfad92df', rt0.c1), LIKELY(DISTINCT rt0.c1), ((rt0.c1)AND(rt0.c0)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((SQLITE_SOURCE_ID(), ((rt0.c1)&(rt0.c0)), ((rt0.c3)||(rt0.c0)), ((rt0.c2)<(rt0.c3)), rt0.c1))), CAST(rt0.c3 AS REAL), ((TIME(rt0.c3, rt0.c1, rt0.c1)) BETWEEN (rt0.c3) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)) FROM rt0 WHERE ((('1742706959')AND(0X2249ba11)) COLLATE BINARY) ORDER BY (~ (((rt0.c1)IS(rt0.c3)))) ASC; -- 0ms;
SELECT ALL COALESCE(((rt0.c2)+(rt0.c0)), (- (rt0.c3)), ((rt0.c3) IS TRUE), rt0.c0, MIN(rt0.c0), ((rt0.c1) IS TRUE)) FROM rt0 WHERE (((((((((((x'') BETWEEN ('nm!qgRX') AND ('1514504547')))AND(0.029371884410149263)))AND(((((x'5e53')AND(x'')))OR('-1471871281')))))OR(CAST('' AS INTEGER))))OR((NULL IN ())))); -- 0ms;
SELECT DISTINCT CAST(rt0.c3 AS BLOB) FROM rt0; -- 0ms;
SELECT COUNT(*) FROM rt0 WHERE ((~ (((NULL) BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((x'8206', rt0.c0, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c3))) IN ()) FROM rt0; -- 0ms;
SELECT rt0.c3 FROM rt0 WHERE (CASE WHEN (((-1897766677))>=(('204220787'))) THEN ((('-480439682', x'', NULL)) NOT BETWEEN (('', x'', NULL)) AND ((x'', NULL, 1120474241))) WHEN (+ (NULL)) THEN NULL WHEN '' COLLATE RTRIM THEN (((0.4425983483394941)) NOT BETWEEN (('470035466')) AND ((NULL))) END); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((~ (CASE WHEN '-1420224622' THEN '1383675791' ELSE 0.42099066054296974 END))); -- 0ms;
SELECT CASE ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND('W')))OR(rt0.c2))  WHEN ((((rt0.c1)AND(rt0.c3)))OR(rt0.c2)) THEN (0.7002831201461271 IN (rt0.c3)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c0)&(rt0.c1)) WHEN rt0.c0 THEN x'f670' END FROM rt0 WHERE ('1906816823'); -- 0ms;
SELECT x'3207', ((((rt0.c1) NOTNULL))OR((((rt0.c3))<((rt0.c0))))), CASE (('Q~ecvVZDQ') BETWEEN (rt0.c0) AND (rt0.c2))  WHEN TRIM(rt0.c2) THEN ((rt0.c0)&(rt0.c1)) END, CASE WHEN rt0.c2 THEN rt0.c3 END COLLATE RTRIM COLLATE NOCASE, ((((rt0.c3)<(rt0.c1))) BETWEEN (-1838827538) AND (rt0.c2)) FROM rt0 WHERE ((x'' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT CASE ((rt0.c2)<=(rt0.c3))  WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 END THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c0)GLOB(rt0.c0)) THEN (((rt0.c1))<=((rt0.c2))) WHEN rt0.c3 COLLATE RTRIM THEN json_object(NULL, rt0.c2) WHEN ((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END FROM rt0 WHERE (((((((0X481a642a) NOT NULL))AND(((((((((0xffffffffb4d5290d)AND(NULL)))OR(x'586e')))AND(x'')))OR(x'')))))AND(NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((COUNT(0.9662601289738959)) ISNULL), ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c3)<=(rt0.c2)))), COUNT(((rt0.c2)*(rt0.c3))) OVER ( ORDER BY ((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), CASE WHEN rt0.c3 THEN rt0.c3 END, (~ (rt0.c0))))<(((~ (rt0.c3)), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND (('bv'))), (- (rt0.c0))))), (rt0.c2 IN (rt0.c3)) DESC RANGE ((IFNULL(rt0.c0, rt0.c0))==(((rt0.c2)<=(rt0.c1)))) PRECEDING) FROM rt0 UNION ALL SELECT TRIM(DISTINCT (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c1, NULL)) AND ((rt0.c1, rt0.c3, rt0.c1)))), CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS NUMERIC), COUNT(MAX(rt0.c1, rt0.c3)) FROM rt0 ORDER BY NULL;SELECT DISTINCT 0xffffffffce07d210 COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c3))||(((rt0.c3)-(rt0.c1)))) FROM rt0 WHERE (json_array_length(NULL, ((((0.18655337944975248)AND(x'')))OR('-705795476')))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)&(rt0.c2))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN ((rt0.c2) IS TRUE) ELSE rt0.c2 COLLATE BINARY END FROM rt0 GROUP BY rt0.c3 HAVING rt0.c1 LIMIT -1058640711; -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c0 AS BLOB)) FROM rt0 WHERE (MIN(((NULL) NOT BETWEEN (0.8678920487858288) AND (0.5038644266987661)), ((0xffffffff82acf9ae) NOT BETWEEN (NULL) AND ('-644073888')), (+ ('-1899668618')), ((x'dfe0') BETWEEN (NULL) AND ('vwb')))) ORDER BY 'Hc' DESC; -- 0ms;
SELECT ALL (((rt0.c1)LIKE(rt0.c1)) IN (((rt0.c2)==(rt0.c3)))) FROM rt0; -- 1ms;
SELECT DISTINCT (((- (rt0.c0))) NOT BETWEEN (json_type(rt0.c0)) AND ((rt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT ((rt0.c1)<<(rt0.c1)) FROM rt0 WHERE ((((((NULL)) NOT BETWEEN (('')) AND ((NULL)))) BETWEEN ((((1.581398841E9, 0.8764060077703949, x'')) NOT BETWEEN ((-705795476, NULL, NULL)) AND (('924805748', '', NULL)))) AND (((0.17132774406481854) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c0 THEN rt0.c3 END)AND(x'f4d1')))OR(CAST(rt0.c3 AS NUMERIC))) FROM rt0 WHERE (((((((((0.8985802458174699)OR(NULL)))AND('1816162828')))OR((('-1017369813') BETWEEN (NULL) AND ('1503004606')))))OR(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT ALL ((rt0.c3 COLLATE RTRIM)IS(((rt0.c0)%(rt0.c3)))), NULLIF(HEX(NULL), ((rt0.c2)<>(rt0.c3))), (((CASE WHEN rt0.c2 THEN rt0.c2 END))==((CAST(rt0.c1 AS INTEGER)))) FROM rt0 WHERE (((((((0.9074802546220537)OR(NULL)))OR(x'')))>=(((x'')LIKE(x'304c'))))); -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((rt0.c2))) FROM rt0 WHERE (((((((x'')OR(-2025436300)))AND(NULL)))<((+ (NULL))))); -- 0ms;
SELECT DISTINCT (((rt0.c1 COLLATE NOCASE, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))=(((((0.277264249980279)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c1)|(rt0.c2)), (+ (rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((0.021542214168491114) NOTNULL))OR((rt0.c1 IN ()))))AND(CAST(rt0.c1 AS REAL))))OR(1.013538499E9)))OR((((rt0.c1))==((rt0.c0))))) FROM rt0 LIMIT -705795476; -- 0ms;
SELECT DISTINCT IFNULL(((0.8746791218741071) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((0X64cd063d) NOTNULL)), TOTAL(rt0.c2) OVER (), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((CAST(rt0.c2 AS TEXT)))) FROM rt0; -- 0ms;
SELECT ((((rt0.c2) IS FALSE)) BETWEEN ((rt0.c1 IN ())) AND (rt0.c1 COLLATE BINARY)), rt0.c0, AVG(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) OVER ( ROWS ((rt0.c2 IN ('-398327036', rt0.c3)) IN ()) PRECEDING EXCLUDE CURRENT ROW) FROM rt0 WHERE ((((((((((('')-(x'd91d')))AND(CAST(x'' AS REAL))))AND((NULL IN (296307492, '-z%[碒i')))))AND(((NULL)||(-1868349193)))))AND((((x'')) NOT BETWEEN ((NULL)) AND (('-1859292392')))))); -- 0ms;
SELECT ALL ((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c1)))AND(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(rtreenode(rt0.c3, rt0.c2))))OR(NULL)))AND(json_array_length(rt0.c0, rt0.c2))) FROM rt0 WHERE (HEX(DISTINCT (((((((('-946015463')AND(NULL)))AND(-1.110152179E9)))OR(0.6690903997871657)))AND(-1.420224622E9))));SELECT DISTINCT ((TYPEOF(rt0.c3))-(rt0.c3 COLLATE NOCASE)) FROM rt0 WHERE (((CASE x'5325'  WHEN -1937540957 THEN 0.2930736558225975 END) ISNULL)) ORDER BY ((((rt0.c3)<>(rt0.c0))) BETWEEN (((rt0.c3)OR(rt0.c0))) AND (CAST(rt0.c0 AS REAL))) ASC; -- 0ms;
SELECT DISTINCT ((CASE 0.17132774406481854  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)=(AVG(NULL))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY) BETWEEN ((~ (rt0.c2))) AND ('~x軄(h鷜?')) FROM rt0; -- 0ms;
SELECT (((~ (rt0.c0))) ISNULL) FROM rt0 WHERE (((((((('-1662130264'))=((x''))))OR(((x'bdba') NOTNULL))))OR(((NULL)<(-1.7976931348623157E308))))) ORDER BY (((rt0.c3, rt0.c0, NULL)) NOT BETWEEN ((LOWER(rt0.c0), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c2 AS BLOB))) AND ((CAST(rt0.c2 AS REAL), (((rt0.c2, rt0.c1, '0.0'))=((rt0.c2, rt0.c2, rt0.c3))), CAST(rt0.c3 AS INTEGER))))  NULLS FIRST; -- 0ms;
SELECT (rt0.c1 IN ()) FROM rt0 WHERE (((((NULL)<=(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)) AS NUMERIC) FROM rt0 LIMIT 745271118 OFFSET 575257105; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)==(rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN rt0.c0 WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN CAST(rt0.c3 AS INTEGER) ELSE UPPER(rt0.c0) END FROM rt0 WHERE (((((('-312719904', x'', '-1937540957')) NOT BETWEEN ((NULL, x'', '77188423')) AND ((-1.784821842E9, x'', '81566182'))))|(((-1.098764296E9) NOTNULL)))); -- 0ms;
SELECT x'b550f907' FROM rt0; -- 0ms;
SELECT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()), ((rt0.c2)&((rt0.c2 IN ()))), x'584d' FROM rt0 EXCEPT SELECT ((((x'0b03')/(rt0.c3))) NOT BETWEEN (((rt0.c1)%(rt0.c2))) AND ('-1937540957')), COUNT(*) OVER ( ROWS BETWEEN  CURRENT ROW AND (((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((rt0.c2 COLLATE BINARY))) PRECEDING EXCLUDE TIES), CASE ((rt0.c0) NOTNULL)  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END THEN MIN(rt0.c1) ELSE ((((rt0.c3)OR(x'1c70')))OR(rt0.c0)) END FROM rt0 ORDER BY (((((rt0.c1))==((rt0.c2))))IS(((rt0.c2) IS TRUE)))  NULLS FIRST;SELECT DISTINCT (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL), (NOT (rt0.c3)), ((x'a187')==(-2.031101638E9)))) AND (((((rt0.c0, rt0.c3, rt0.c0, rt0.c3, '*Pj1h'))<=((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c3))), (~ (rt0.c0)), NULL))), TOTAL(rt0.c1), ((((rt0.c1)+(rt0.c0)))+((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((x''))))) FROM rt0 WHERE ((~ (-4.80439682E8)) COLLATE NOCASE) GROUP BY CASE (+ (rt0.c2))  WHEN (((rt0.c0, rt0.c2, rt0.c2))>((rt0.c1, rt0.c2, rt0.c1))) THEN (rt0.c0 IN ()) END HAVING (NOT (AVG('\12C?S'))); -- 0ms;
SELECT (~ (x'4a36df82')) FROM rt0; -- 0ms;
SELECT LAG(CAST(NULL AS BLOB), CASE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END  WHEN (rt0.c1 IN ()) THEN rt0.c1 WHEN (((x''))<((rt0.c3))) THEN LIKELIHOOD(rt0.c2, 0.9476847886615725) WHEN CAST(rt0.c0 AS BLOB) THEN (((rt0.c1, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c2))) END, ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))OR(((0.6893730232433467) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR((((rt0.c0, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c2, rt0.c1)))))) OVER () FROM rt0 WHERE (((UNLIKELY(x'')) NOTNULL)) GROUP BY rt0.c1 HAVING (highlight(rt0.c3, rt0.c0, NULL, rt0.c1) IN ()); -- 1ms;
SELECT ALL (CAST(rt0.c1 AS TEXT) IN ()), (((CAST(rt0.c2 AS NUMERIC)))<(('꤭'))), (((rt0.c3) BETWEEN (rt0.c0) AND (0.7675525380236176)) IN ()) FROM rt0 ORDER BY (((rt0.c3, rt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END)) AND ((CAST(rt0.c2 AS INTEGER), ((rt0.c3)<<(rt0.c1)), (('qU') NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS LAST; -- 0ms;
SELECT ALL ((((rt0.c1) BETWEEN (0.4646974740842532) AND (rt0.c3)))=(rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)>>(rt0.c2)))==((((rt0.c1))>(('⿸P'))))) FROM rt0 WHERE ((~ ((x'' IN (''))))) ORDER BY (- ((rt0.c2 IN ()))) ASC; -- 0ms;
SELECT CASE WHEN LIKELIHOOD(rt0.c1, 0.8206545518344245) THEN ((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)) END, ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)))OR(x'9703')))OR(NULL)))AND(rt0.c3)))AND(((rt0.c2)LIKE(rt0.c1)))), MAX(((((((((rt0.c3)OR(rt0.c3)))OR(x'')))AND(x'')))OR(rt0.c0)), ((((rt0.c0)OR(rt0.c2)))AND('-1105178236'))) FROM rt0; -- 1ms;
SELECT rt0.c0 FROM rt0 LIMIT -738706747 OFFSET -49121215; -- 0ms;
SELECT DISTINCT ((((rt0.c1)-(rt0.c1)))*(((rt0.c2)%(rt0.c2)))) FROM rt0 WHERE (((((NULL)IS(x''))) NOT BETWEEN (CAST('-1937540957' AS TEXT)) AND (CASE 'w\rg'  WHEN NULL THEN 0.7417190578433407 END))); -- 0ms;
SELECT DISTINCT LIKELY(LAST_INSERT_ROWID()), COUNT(((rt0.c1)>(NULL))) OVER (), SUM(0.6845533217398523) OVER ( ORDER BY ((IFNULL(DISTINCT rt0.c0, -1.23466921E8)) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c3 THEN 0.5888200902747169 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) FROM rt0; -- 1ms;
SELECT ALL ((((rt0.c3) IS FALSE))/((rt0.c2 IN ()))) FROM rt0 WHERE ((NOT ((+ (NULL))))) ORDER BY rt0.c2 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG(NULL) OVER ( ROWS  UNBOUNDED PRECEDING) FROM rt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c0)-(rt0.c1))) OVER () FROM rt0 WHERE (x'3c1d' COLLATE RTRIM) LIMIT 1838137097; -- 0ms;
SELECT COUNT(*), ((((rt0.c1)&(rt0.c2)))-((rt0.c1 IN (rt0.c0, rt0.c1)))), rt0.c2, TRIM(DISTINCT UNICODE(rt0.c2)), CAST(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) AS TEXT) FROM rt0 GROUP BY ((((rt0.c2)<=(rt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (CAST(rt0.c0 AS NUMERIC))); -- 0ms;
SELECT ALL (((COUNT(*)))=(((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL)))))), ((((rt0.c1) BETWEEN (x'') AND (rt0.c3)))<(((rt0.c3) ISNULL))), TIME(((rt0.c2)>>(rt0.c2)), rt0.c1 COLLATE NOCASE, AVG(rt0.c3)), LEAD(0.08918290162880083, highlight(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END, (rt0.c1 IN ()), (rt0.c0 IN ()), (+ (rt0.c1))), ((((((((((rt0.c0)<<(rt0.c0)))AND(rt0.c3 COLLATE RTRIM)))OR((((rt0.c0))>((rt0.c1))))))AND(CAST(rt0.c3 AS TEXT))))AND(CASE WHEN rt0.c0 THEN rt0.c3 END))) OVER (), ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c1) IS TRUE))))OR((((rt0.c0))<>((rt0.c1))))) FROM rt0;SELECT DISTINCT ((((rt0.c1, rt0.c0, rt0.c1))==((rt0.c0, rt0.c3, rt0.c0))) IN ()) FROM rt0 ORDER BY CAST(rt0.c3 COLLATE BINARY AS INTEGER)  NULLS LAST; -- 0ms;
SELECT ALL CAST((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS TEXT) FROM rt0 WHERE (((CASE -752680529  WHEN x'' THEN NULL ELSE '-482430374' END) BETWEEN (((('0.4351218383157057', x'', '310467494'))==(('刭X)', x'', 0x5b128bc6)))) AND (CASE WHEN NULL THEN 0.2589851547408697 END))) GROUP BY rt0.c1; -- 1ms;
SELECT DISTINCT (((rt0.c3, rt0.c1, rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), rt0.c1 COLLATE NOCASE, COUNT(rt0.c3), ((rt0.c1)*(x'b964')), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END, ((rt0.c2)>>(rt0.c1)), (((rt0.c3, rt0.c3, rt0.c3))==(('-2025436300', rt0.c0, -1973715475))), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c3, rt0.c3, rt0.c1))<>((rt0.c0, rt0.c1, rt0.c3)))))), ((rt0.c0 COLLATE NOCASE) IS FALSE), SUM(rt0.c3) FROM rt0; -- 0ms;
SELECT ALL ((COUNT(*)) NOT NULL), DATE(CAST(rt0.c0 AS TEXT), (rt0.c3 IN ()), (((rt0.c1))<=((x'632b'))), COUNT(rt0.c3), ((rt0.c1) ISNULL)), ((((((rt0.c0)LIKE(rt0.c1)))AND(rt0.c1 COLLATE RTRIM)))OR(CAST(rt0.c0 AS NUMERIC))) FROM rt0 GROUP BY ((UPPER(DISTINCT rt0.c3)) IS TRUE) HAVING (((((((((('-2043638020')AND(rt0.c1)))AND(0.6501685735183729)))AND(rt0.c1)))AND(rt0.c1))) NOT NULL); -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) ISNULL)  WHEN MIN(NULL) THEN rt0.c1 END, PERCENT_RANK() OVER ( RANGE  CURRENT ROW), '-1500954573' FROM rt0 WHERE (CAST(((NULL) NOTNULL) AS BLOB)); -- 0ms;
SELECT ALL ((rt0.c0) BETWEEN ((rt0.c0 IN ())) AND ((((rt0.c0))==((rt0.c2))))) FROM rt0 WHERE (IFNULL(0.9039888559982685, x'') COLLATE NOCASE); -- 0ms;
SELECT TOTAL(((rt0.c2) NOTNULL)) OVER (), ((rtreenode('', '2042913706')) IS FALSE), NTH_VALUE((LTRIM(rt0.c0, rt0.c2) IN (CAST(rt0.c3 AS BLOB))), 0.813210715524062) OVER () FROM rt0 WHERE (((((CAST(0.8980186866286421 AS REAL))OR(('0.17132774406481854' IN ()))))AND(((0.7123236596446778) ISNULL)))); -- 0ms;
SELECT (GLOB(rt0.c3, rt0.c1) IN (rt0.c1 COLLATE BINARY, CHANGES())) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND ((rt0.c1))) FROM rt0 WHERE ((((('ធH')) BETWEEN (('6B')) AND ((1.383675791E9))) IN (((x'05de')AND(0X2ceed802)), (x'17b7' IN (0.2424908862069023, -660910577))))); -- 0ms;
SELECT DISTINCT SUM(NULL) OVER () FROM rt0 GROUP BY x'' HAVING NULL; -- 0ms;
SELECT DISTINCT NTH_VALUE(0.3009234528924237 COLLATE RTRIM, (((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (CASE WHEN 0.11629521758350381 THEN rt0.c1 END))) OVER () FROM rt0; -- 1ms;
SELECT LAST_VALUE((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt0 WHERE (0.271535341783545) GROUP BY (((rt0.c0, '1281615932', x'd907c8cdab02')) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER), CASE rt0.c2  WHEN x'' THEN rt0.c2 END, rt0.c0 COLLATE RTRIM)) AND ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)), (+ (rt0.c3)), ((rt0.c2)/(rt0.c3))))) ORDER BY rt0.c2 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (GROUP_CONCAT(rt0.c1))) FROM rt0 WHERE ((- ((((((((('v1*⤂A')OR(x'')))OR(x'4a19')))OR(x'')))OR('Gu'))))); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT rt0.c0) COLLATE RTRIM FROM rt0 LIMIT -197818768; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE RTRIM IN ()) FROM rt0 WHERE ((~ (CASE x''  WHEN x'' THEN x'' END))); -- 0ms;
SELECT ALL (((CAST(rt0.c0 AS INTEGER)))<((TOTAL(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0)))GLOB(NULLIF(rt0.c3, rt0.c1))) FROM rt0 GROUP BY (+ ((rt0.c1 IN (rt0.c2)))) HAVING CASE (rt0.c0 IN ())  WHEN RTRIM(rt0.c1) THEN ((NULL)&(rt0.c1)) END; -- 0ms;
SELECT DISTINCT ((((rt0.c1 COLLATE NOCASE)AND(TYPEOF(rt0.c2))))AND(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0 WHERE (((((CASE 0.8740164208423676  WHEN NULL THEN 0.91624859602671 END)OR((((x'1588', NULL, NULL)) BETWEEN (('l', '-1670727773', -3.98327036E8)) AND ((x'c03a', 1880074871, 0.44892138496396505))))))OR((('0.14557531416502634') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ALL ((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))) AND (rt0.c3 COLLATE NOCASE)), ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END) AND (CAST(rt0.c3 AS INTEGER))), CAST(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END AS NUMERIC) FROM rt0 WHERE (((+ (0.99005802935237)) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c2)<=(rt0.c2)) IN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))), COUNT(*), (((rt0.c1) NOTNULL) IN ()) FROM rt0 WHERE ((((((x'') NOT BETWEEN (0.4301751993496602) AND (0x4b624cf6)), IFNULL(x'ae99', NULL), CAST(1990234223 AS REAL)))>=(((('381143494') NOT NULL), ((0.20537449962085563) BETWEEN ('9p') AND (NULL)), (('-480439682')<<('1844886553')))))); -- 0ms;
SELECT DISTINCT x'c6a8', rt0.c1, (('') NOT BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM, ((((rt0.c0) NOT BETWEEN ('4b_[') AND ('1049087046')))GLOB(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))), ((GROUP_CONCAT(rt0.c0))IS NOT(rt0.c0)) FROM rt0 WHERE (INSTR(((0x259baa5f) NOTNULL), ((0.597280827931406)>>('')))); -- 0ms;
SELECT ALL ((((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c1)))AND(('-147223731' IN ()))))OR((((rt0.c3))<=((rt0.c2))))) FROM rt0 WHERE (((CASE WHEN 0.47434519964466093 THEN x'9112' WHEN '0.03195548553925387' THEN '' WHEN 0.06457691199962967 THEN NULL ELSE 'zo' END)IS(CASE 0.6069565013666874  WHEN x'' THEN '-1002601476' END))); -- 0ms;
SELECT DISTINCT (((- (rt0.c3)))/(TOTAL(0.9933580796984894))) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((((rt0.c1)AND('<ꍚ')))AND(rt0.c2)))) FROM rt0 WHERE ((CAST(NULL AS TEXT) IN ((((('-1851723982')AND('-398327036')))AND('-2025436300'))))); -- 0ms;
SELECT ((LIKELIHOOD(DISTINCT rt0.c1, 0.7190262511587642)) NOT NULL), ((((NOT (x''))))!=((SUM(rt0.c2)))), NTH_VALUE(((((((NULL)LIKE(rt0.c3)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(((rt0.c1) NOT NULL))), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) OVER ( ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (rt0.c2 COLLATE BINARY)) DESC) FROM rt0 WHERE (((((((0.8260927513784863)AND(x'')))AND(NULL))) BETWEEN ((((0xfffffffffd086640, 0.24140996817121974, x''))>((x'', '', 0.9375490726591778)))) AND (((0.40984703506964815)>=(NULL))))) ORDER BY CAST(rt0.c3 COLLATE NOCASE AS TEXT);SELECT DISTINCT AVG((rt0.c1 IN ())), (((rt0.c2, rt0.c3, rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((NULL, ((rt0.c0) NOTNULL), (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB), COALESCE(rt0.c0, rt0.c1))) AND ((((rt0.c0)|(rt0.c1)), rt0.c1, LIKELY(DISTINCT rt0.c2), NULLIF(DISTINCT 0.11050568767834379, rt0.c1), ((rt0.c3)<(rt0.c0))))), (+ (((rt0.c0)=(rt0.c3)))) FROM rt0 LIMIT -747373056; -- 0ms;
SELECT DISTINCT (((rt0.c1)>(rt0.c0)) IN ()) FROM rt0 WHERE (UNLIKELY(DISTINCT (- (0.16061340513949185)))); -- 0ms;
SELECT DISTINCT ((('-950556932' IN ())) NOT BETWEEN (AVG(rt0.c3)) AND ((rt0.c1 IN (rt0.c2, rt0.c0)))) FROM rt0 WHERE (((((((('', NULL, NULL, '', NULL)) BETWEEN (('', 1443870785, 0.8170936945614378, '', '')) AND ((NULL, '', x'', NULL, x''))))AND(CASE '⛖|Q'  WHEN 0.09484144105794245 THEN NULL END)))OR(CASE WHEN -1915342148 THEN -579332090 ELSE '' END))) GROUP BY rt0.c3; -- 0ms;
SELECT ALL (((((rt0.c0))>=((rt0.c0))))<<(rt0.c3)) FROM rt0; -- 0ms;
SELECT LAG(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))AND((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR((rt0.c2 IN ()))), CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((0.574435006271465))) THEN (rt0.c0 IN ()) ELSE rt0.c3 END, ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (((rt0.c3)<<(rt0.c1))) AND ((rt0.c1 IN ())))) OVER (), ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND((NOT (rt0.c1)))))OR(((rt0.c3)>>(rt0.c0)))))AND((~ (rt0.c2)))))AND(-1.098764296E9)), ((((MAX(x'', 84234361, rt0.c3, rt0.c2))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR('')), (((rt0.c0 COLLATE BINARY, ((rt0.c0) NOTNULL), TIME(rt0.c2, rt0.c0, rt0.c1)))<=((CAST(rt0.c3 AS NUMERIC), ((0.7794692884963204)|(rt0.c1)), ((rt0.c0)<=(rt0.c3))))), (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (COUNT(rt0.c3))) FROM rt0 WHERE (((((((((x'')AND('蠷l')))AND(0.321999042609715)))AND(1.503004606E9)))AND(CASE '0.8716129686863656'  WHEN x'' THEN x'f499' END))); -- 0ms;
SELECT DISTINCT SUBSTR(CASE WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3)<=(rt0.c3))) FROM rt0 WHERE (((x'')GLOB('')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c3)>>(rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c1)*(rt0.c1)))) FROM rt0 WHERE (((CASE '-2016604938'  WHEN x'0788' THEN x'' ELSE x'2637' END)LIKE((+ (NULL))))); -- 0ms;
SELECT DISTINCT (((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)) IN ()) FROM rt0 LIMIT 1758476698 OFFSET -210595827; -- 0ms;
SELECT DISTINCT ((((rt0.c2)<>(rt0.c0)))IS(rt0.c0 COLLATE RTRIM)) FROM rt0 WHERE (0.14508347357901996 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) ORDER BY (((rt0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB), ((rt0.c3)<(rt0.c0)), NULL)) AND ((((rt0.c2)<<(NULL)), (rt0.c0 IN (rt0.c3)), ((rt0.c1)>=(rt0.c3)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c2)>>(rt0.c1)))*((+ (rt0.c1)))) FROM rt0 LIMIT -1462823834; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c1))) IS FALSE) FROM rt0 WHERE (((((x'c0fe')AND(CASE '504371054'  WHEN x'' THEN -705795476 ELSE 0.08307777119897808 END)))AND(((0.679881370203377) NOT BETWEEN ('') AND (' j'))))) GROUP BY ((((((((((((CAST(rt0.c2 AS NUMERIC))OR(((rt0.c3)LIKE('4')))))AND((rt0.c0 IN ()))))OR(((NULL)AND(rt0.c3)))))OR(((rt0.c1)LIKE(x'd78d')))))OR((((rt0.c2))<((rt0.c3))))))OR(TRIM(DISTINCT rt0.c1, rt0.c3))); -- 1ms;
SELECT ALL ((ABS(DISTINCT rt0.c2))<=((- (rt0.c2)))) FROM rt0 ORDER BY ((0.6936469555904878 IN ()) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c3) BETWEEN (rt0.c3) AND (NULL)) IN ()) FROM rt0 WHERE (((((NULL) IS FALSE)) NOT BETWEEN (((NULL) BETWEEN (NULL) AND (NULL))) AND ((('1691158077')-('-1'))))); -- 0ms;
SELECT ((CAST(rt0.c1 AS REAL))<<((- (rt0.c3)))), (rt0.c1 COLLATE RTRIM IN ('xaI*|h0,')), (((((rt0.c2) NOTNULL), (- (rt0.c0)), ((NULL) BETWEEN (rt0.c1) AND (rt0.c3))))<((((rt0.c3)<>(rt0.c1)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))), COUNT(rt0.c2)))), '-804466892', CASE rt0.c0  WHEN x'' THEN rt0.c1 ELSE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) END FROM rt0; -- 0ms;
SELECT DISTINCT CASE (((rt0.c0))>=((rt0.c3)))  WHEN ((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) THEN rt0.c2 WHEN ((rt0.c0) IS TRUE) THEN CAST(0.04615903423092982 AS BLOB) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (NOT (rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END, (((rt0.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, TIME(rt0.c1, rt0.c2, rt0.c3, rt0.c3, rt0.c3), -363964984, (- (rt0.c2)), ABS(rt0.c1))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, (+ (rt0.c1)), (((rt0.c1))>=((rt0.c1))), CAST(rt0.c2 AS NUMERIC), rt0.c3 COLLATE BINARY))), ((((rt0.c1) NOTNULL))&(((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))), ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)))>>(CAST(rt0.c2 AS NUMERIC))), (LIKELIHOOD(rt0.c0, 0.5407103439237522) IN ()) FROM rt0 WHERE ((~ ((('-1270604479') ISNULL)))); -- 0ms;
SELECT ALL (- ((rt0.c3 IN ()))), COUNT(*) OVER ( ORDER BY ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))>((+ (rt0.c2)))) DESC  NULLS FIRST ROWS BETWEEN CASE rt0.c0 COLLATE RTRIM  WHEN CAST(rt0.c3 AS TEXT) THEN CAST(rt0.c0 AS BLOB) END FOLLOWING AND CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END COLLATE RTRIM PRECEDING EXCLUDE TIES), NULL FROM rt0 WHERE (TYPEOF(x'73d7' COLLATE BINARY));SELECT (((rt0.c0)) BETWEEN (((rt0.c2 IN (rt0.c3, rt0.c1)))) AND ((rt0.c0))), CAST(COALESCE(DISTINCT rt0.c0, rt0.c0) AS TEXT), (- (rt0.c3)) FROM rt0; -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c2)) NOT BETWEEN (((rt0.c1)-(rt0.c2))) AND (((rt0.c3)IS(rt0.c3)))), (((- (rt0.c1))) NOT BETWEEN ((((rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, '0.3453604042217425', rt0.c2)) AND ((0xffffffff8a350018, rt0.c2, rt0.c1)))) AND (((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))), (((CAST(rt0.c1 AS BLOB)))>=(((((rt0.c3, rt0.c2, rt0.c2))>((rt0.c1, NULL, rt0.c2)))))) FROM rt0 WHERE (((NULL)IS(CASE x''  WHEN 0.10865543144637202 THEN x'' ELSE NULL END))); -- 0ms;
SELECT ALL (NOT (((rt0.c2)GLOB(rt0.c1)))) FROM rt0 WHERE ((((0.12505045091027833 IN ())) BETWEEN ((((((((('-1786921078')OR(0.07850619464407738)))AND(NULL)))AND(x'')))AND(6.75796806E8))) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT ((rt0.c1) NOT BETWEEN (((((rt0.c3)OR(rt0.c1)))OR(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)), (- ((rt0.c0 IN (rt0.c3)))), (((rt0.c2))<>((rt0.c1))) FROM rt0; -- 0ms;
SELECT ((((rt0.c3)GLOB(-2007982843))) NOTNULL), NULL, (((rt0.c2)) BETWEEN ((rt0.c1)) AND (((~ (rt0.c1))))) FROM rt0 WHERE (CAST(((0.07440869770731784) ISNULL) AS TEXT)); -- 0ms;
SELECT DISTINCT AVG(CAST(']O' AS REAL)) OVER () FROM rt0 WHERE (CASE CASE 'Z'  WHEN 0.6378553340976743 THEN 'ꎥ1y' ELSE x'd176' END  WHEN CASE WHEN 0.8270665664028423 THEN '2086502211' ELSE x'' END THEN ((NULL) ISNULL) ELSE NULL END); -- 0ms;
SELECT DISTINCT (NOT (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN 0.37768296467327067 THEN rt0.c0 WHEN x'' THEN rt0.c1 END)) FROM rt0 WHERE (CASE (((NULL)) NOT BETWEEN ((0xffffffffba5baee6)) AND (('')))  WHEN (x'a128' IN ()) THEN -4.82430374E8 COLLATE BINARY ELSE ((675796806)<=('1703501747')) END); -- 1ms;
SELECT '0.8985802458174699', CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER), ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM FROM rt0 WHERE ((((NULL) NOT NULL) IN ())) GROUP BY CAST(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) AS INTEGER) ORDER BY NULL, CAST(NULLIF(rt0.c1, rt0.c3) AS NUMERIC) ASC; -- 0ms;
SELECT UNLIKELY((((rt0.c0))==(('0.5439064392752136')))), ((((((((rt0.c2 COLLATE BINARY)AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)))OR(IFNULL(DISTINCT rt0.c3, rt0.c1))))AND(((rt0.c1)IS NOT(rt0.c3)))))OR(rt0.c1 COLLATE NOCASE)), (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))OR(CAST(rt0.c0 AS REAL))))OR(MAX(rt0.c3))) FROM rt0 GROUP BY x'dc72ffbc'; -- 0ms;
SELECT rt0.c2, NULL, PERCENT_RANK() OVER (), COUNT(*), CASE (- (rt0.c2))  WHEN COALESCE(rt0.c2, rt0.c2) THEN ((rt0.c1)IS(rt0.c0)) WHEN ((rt0.c3) ISNULL) THEN '1033334197' WHEN (((rt0.c1))!=((rt0.c1))) THEN rt0.c0 COLLATE BINARY ELSE (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END FROM rt0; -- 0ms;
SELECT NULL FROM rt0 WHERE (((UPPER('')) NOT BETWEEN ((('')==(0.3478807851110006))) AND ((+ (0.6128078338707194))))) LIMIT 1180288617; -- 0ms;
SELECT MIN(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))AND(NULL)))OR(rt0.c2)))OR(rt0.c3))), ((rt0.c3) ISNULL), (((((rt0.c0)|(rt0.c0))))!=((((rt0.c3) IS FALSE)))) FROM rt0; -- 1ms;
SELECT DISTINCT ((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c2)>(rt0.c2)))))AND(((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)))) FROM rt0 WHERE (((('XiOB|')) BETWEEN (((((((((('%SjL')OR('-210595827')))AND(0X3953d725)))OR(x'3687')))AND('1e500')))) AND ((MIN(NULL, 0.8603247116721016))))); -- 0ms;
SELECT DISTINCT CASE json_valid(rt0.c1)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c3) IS TRUE) END FROM rt0 WHERE ((((('OJPt') NOT NULL))*(NULL))) INTERSECT SELECT ALL CAST(((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (67109914)))))AND(CAST(rt0.c0 AS TEXT))))AND((rt0.c1 IN (rt0.c3, rt0.c1, x'')))))OR(CAST(rt0.c2 AS INTEGER))) FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c1 END)) AND ((CAST(rt0.c0 AS REAL)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c3)IS(rt0.c0)))>(CASE rt0.c2  WHEN '' THEN rt0.c0 ELSE rt0.c3 END)) FROM rt0 ORDER BY (NOT (rt0.c1)) DESC, CAST(TRIM(rt0.c3) AS INTEGER) ASC; -- 0ms;
SELECT -1176551126, (ABS(DISTINCT rt0.c3) IN ()), (- ((((rt0.c1))=((rt0.c2))))), ((CAST(rt0.c1 AS INTEGER))&((rt0.c3 IN ()))), ((rt0.c0) NOT NULL) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE BINARY FROM rt0 WHERE (TRIM(DISTINCT ((x'') IS TRUE))); -- 5ms;
SELECT DISTINCT ((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))) AND (rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE ((((NOT (1510574858))) ISNULL)); -- 0ms;
SELECT DISTINCT (((rt0.c0))>((((rt0.c2)>=(rt0.c3))))) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN COALESCE(DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), LAST_VALUE((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM) OVER (), (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END IN (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))OR(NULL)), (~ (rt0.c1)))) FROM rt0 GROUP BY (((('t5')AND((- (0.8490257578631594)))))OR(TRIM(rt0.c1))) HAVING ((((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))||((((rt0.c2))>((rt0.c0))))) LIMIT -1549273668 OFFSET -147223731; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c1)!=(rt0.c1))), rt0.c1, (+ (((rt0.c3)<(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1)*((rt0.c0 IN ()))) FROM rt0 WHERE (((('8wBNk')) NOT BETWEEN (((((0.7216134644521282, x'6303', NULL))>((-9.82770171E8, '268480046', 'mQ'))))) AND ((CAST(NULL AS TEXT))))) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))) ASC  NULLS LAST, (rt0.c0 IN ()) ASC; -- 0ms;
SELECT ALL ((((rt0.c0)LIKE(rt0.c1)))LIKE(CASE WHEN rt0.c1 THEN rt0.c2 END)) FROM rt0 WHERE ((CAST(NULL AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c3)<=(rt0.c2)))/(CAST(rt0.c0 AS BLOB))) FROM rt0 WHERE (CAST(((0.01123515597554603) IS FALSE) AS NUMERIC)) ORDER BY TOTAL_CHANGES(), (((rt0.c1)) NOT BETWEEN (((NOT (',')))) AND ((rt0.c0 COLLATE NOCASE)))  NULLS FIRST, ((((- (rt0.c0))))<(((+ (rt0.c0))))); -- 0ms;
SELECT DISTINCT (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) NOT BETWEEN (((rt0.c3)IS NOT(rt0.c0))) AND (x'a56a')) FROM rt0 GROUP BY NULLIF(DISTINCT (- (2063705754)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) HAVING (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0)))) NOT BETWEEN (NULL) AND ((((rt0.c1))<=((rt0.c1))))) LIMIT -160307277 OFFSET 763929227; -- 0ms;
SELECT ALL CHAR(CAST(rt0.c1 AS NUMERIC), ((rt0.c2) ISNULL), (NULL IN ())) FROM rt0 WHERE (((((0x582853c0) NOTNULL))&(((96902344) ISNULL)))); -- 0ms;
SELECT DISTINCT TOTAL(0.9502423202608345) OVER () FROM rt0 WHERE (CASE (- (x''))  WHEN ((NULL) BETWEEN (NULL) AND (NULL)) THEN '128981422' COLLATE BINARY WHEN ((NULL)<=('0.6800736537026278')) THEN ((((((((x'')OR(0.6380523228273273)))OR('')))AND('1507017436')))OR(0.003590723637573179)) WHEN CASE WHEN 0.7333064059886245 THEN x'' WHEN '-482430374' THEN '0.3087836832957629' WHEN 'VMvtn' THEN 0.657143708087205 END THEN CAST(0.023559627683931605 AS TEXT) ELSE (0.03713458530845237 IN ()) END); -- 0ms;
SELECT ALL MIN(((rt0.c3)GLOB(x''))) COLLATE RTRIM FROM rt0 WHERE ('-612902272' COLLATE NOCASE); -- 1ms;
SELECT (((rt0.c2 IN (rt0.c2))) NOT BETWEEN (((rt0.c2)OR(rt0.c2))) AND (GROUP_CONCAT(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))) IS FALSE) FROM rt0 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT ALL (('1906816823')%(rt0.c3)) COLLATE BINARY, (((+ (rt0.c1))) NOT BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), (COUNT(*) IN ()) FROM rt0; -- 0ms;
SELECT ALL CAST(((rt0.c1)%(rt0.c3)) AS BLOB) FROM rt0 LIMIT -1143368679; -- 0ms;
SELECT ALL NTH_VALUE(((((rt0.c2)IS NOT(rt0.c3)))IS(TYPEOF(NULL))), (~ ((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c2)))))) OVER (), ((TOTAL_CHANGES()) NOT NULL), 0.7216134644521282 COLLATE RTRIM FROM rt0;SELECT DISTINCT (((SUM(rt0.c2)))>=((rt0.c0))) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE 0.3975651387754464 END FROM rt0 GROUP BY (((((((((((rt0.c0))>((rt0.c2))))OR(((rt0.c2) IS FALSE))))AND(((rt0.c0)IS(rt0.c1)))))OR(((rt0.c3) ISNULL))))OR((+ (rt0.c0)))), ((((NULL)/(rt0.c0))) NOT BETWEEN (6.75796806E8) AND ((~ (rt0.c1)))), (((+ (rt0.c0))) IS FALSE) HAVING '0.7695634539500492'; -- 0ms;
SELECT DISTINCT NTILE(rt0.c3) OVER () FROM rt0 WHERE (CAST(0.6535168033211476 COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT LEAD(((rt0.c1)IS('6xA+k̄C')) COLLATE NOCASE, (((- (rt0.c0))) IS FALSE), (((NULL IN (rt0.c2)))<=(((rt0.c3)LIKE(rt0.c2))))) OVER (), (('1998275476') BETWEEN (rt0.c0 COLLATE BINARY) AND (((((((((rt0.c1)OR(NULL)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)))), rt0.c2 COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ABS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) FROM rt0; -- 0ms;
SELECT ((GROUP_CONCAT('j̬RMEi')) NOT BETWEEN (((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))) AND ('-2051842694')) FROM rt0; -- 0ms;
SELECT ALL (NOT (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(x'4a12')))) FROM rt0 WHERE ((((NULL, x'', NULL, NULL, -1899668618, ',堖D/(B', x'')) NOT BETWEEN (((('A><!s+') NOT NULL), CAST('1328666650' AS NUMERIC), ((('0')) BETWEEN ((-6.07325798E8)) AND ((1.581398841E9))), (((((((('-1')AND(-377401674)))AND(x'67a8')))OR(0.6561678976950601)))OR(NULL)), ((x'') NOT BETWEEN (-2146555646) AND ('-229202507')), IFNULL(0.8789225143032663, x''), ((('*PFFG'))<((x'd6fd'))))) AND (((('')/(NULL)), '977015875' COLLATE RTRIM, (('') NOT BETWEEN ('頕Nhy\rK') AND (0.32207989635874046)), ((NULL)%(0xffffffff86efd93a)), NULL, TRIM('-1176337352', x''), (- (NULL)))))); -- 0ms;
SELECT ALL ((rt0.c0)OR(rt0.c2)) COLLATE RTRIM COLLATE RTRIM, (~ (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)), ((LIKELIHOOD(rt0.c3, 0.06600696051397725)) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) AND ((~ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)OR(CASE WHEN rt0.c3 THEN NULL END)))AND(NULL)) FROM rt0; -- 0ms;
SELECT DISTINCT (CASE rt0.c2  WHEN rt0.c1 THEN x'2a40' END IN ()) FROM rt0 ORDER BY ((((rt0.c1))<((rt0.c2))) IN ()), -157051350 ASC  NULLS FIRST LIMIT 381143494;SELECT ALL (((-1706145475)) BETWEEN ((CAST(rt0.c3 AS REAL))) AND ((CAST(rt0.c3 AS INTEGER)))) FROM rt0 WHERE (((((NULL)||(NULL)))|(NULL COLLATE NOCASE))) GROUP BY (((((rt0.c3)) BETWEEN (('vwb')) AND ((rt0.c3)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((rt0.c1)+(rt0.c2)))) HAVING CAST((+ (rt0.c3)) AS TEXT); -- 0ms;
SELECT DISTINCT json_object(rt0.c0, rt0.c3) COLLATE NOCASE COLLATE RTRIM FROM rt0 LIMIT -1859292392 OFFSET -1052075477;SELECT (((0.29585413445369657)) NOT BETWEEN ((((rt0.c0)-(0.271535341783545)))) AND ((COALESCE(DISTINCT rt0.c1, rt0.c0)))) FROM rt0; -- 0ms;
SELECT LIKELIHOOD(DISTINCT (- (rt0.c0)), 0.5499561993750043) FROM rt0; -- 0ms;
SELECT CAST((- ('%%')) AS REAL), CAST(((((rt0.c3)OR(rt0.c2)))OR(rt0.c0)) AS BLOB), ((CAST(rt0.c3 AS TEXT)) NOT NULL) FROM rt0 WHERE (((0.19453604886113107 COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT ALL UPPER(DISTINCT UNICODE(rt0.c2)), (+ (rt0.c0)), ((rt0.c1 IN ()) IN (COUNT(*), ((rt0.c0)>(rt0.c0)))) FROM rt0 WHERE ((((('2137685452')+(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((0.2871763937005404) NOT BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (0.4354980219389729)) FROM rt0 WHERE (((('-1658475463', NULL, 'eoF|V4QC')) NOT BETWEEN ((CASE '1449253528'  WHEN NULL THEN 0.017156524241807913 WHEN NULL THEN -788556651 WHEN NULL THEN 0.3043480578182074 END, (('뽇6')<(x'8ce3')), CAST('' AS BLOB))) AND ((x'' COLLATE BINARY, CAST(0.9777795358958229 AS BLOB), json_extract(x'e986fab0', NULL, '879314827', 0.08053726559671281))))); -- 0ms;
SELECT (((rt0.c2)<>(rt0.c0)) IN (CAST(rt0.c3 AS REAL), 1.756807118E9)) FROM rt0 WHERE ((('[c' COLLATE BINARY) NOT BETWEEN ((('&') BETWEEN (8.1566182E7) AND ('1612909874'))) AND (0Xffffffffa6894033))); -- 0ms;
SELECT MIN('-203219294'), LAST_VALUE(NULL) OVER (), CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE NOCASE FROM rt0 WHERE ('\]bm\LPwH') GROUP BY CAST((- (rt0.c3)) AS INTEGER) HAVING 0.21351340755263237 ORDER BY rt0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT (UPPER(DISTINCT 1264602772) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN COALESCE(rt0.c0, rt0.c1) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END END, CASE '1468513641'  WHEN rt0.c3 THEN rt0.c1 END COLLATE RTRIM, ((((((((NULL)OR((- (0.679881370203377)))))AND(CAST(rt0.c0 AS NUMERIC))))OR(((rt0.c0) IS TRUE))))AND(json_remove(rt0.c1, rt0.c1))) FROM rt0 WHERE ((('0.19095127163565084')/(NULL)) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (rt0.c2 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN load_extension(rt0.c1) THEN rt0.c1 COLLATE BINARY END, GROUP_CONCAT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) OVER ( RANGE  UNBOUNDED PRECEDING), (- (rt0.c3)) FROM rt0 ORDER BY ((rt0.c2 COLLATE BINARY) BETWEEN ((- (rt0.c1))) AND (((rt0.c1) NOTNULL)));SELECT (((NOT (923051436)))|(AVG(rt0.c0))) FROM rt0 WHERE (CAST(((0.7170411946818135) NOTNULL) AS TEXT)); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE ((0Xffffffffc87d9393)==(NULL))  WHEN RTRIM(NULL) THEN CASE ''''  WHEN 'qFZX3Ut' THEN x'd25c6ef2' WHEN '' THEN 0.4735476737859008 WHEN 0.438721493060482 THEN 0.7409125328902393 END WHEN (+ (1.376567111E9)) THEN CASE WHEN NULL THEN 'BN∊^8F*	z' WHEN x'' THEN 'zQEF' WHEN -1.420224622E9 THEN 0.42274097755018514 ELSE 0Xffffffffbac7fcfb END WHEN ((1844886553) NOT BETWEEN ('345604548') AND (NULL)) THEN ((1013538499)IS(1.383675791E9)) END); -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY FROM rt0; -- 1ms;
SELECT ALL (rt0.c2 IN ()) FROM rt0 GROUP BY ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) IN ()), (((~ (rt0.c0)))-(((rt0.c1)LIKE(rt0.c2)))), (((((rt0.c3))!=((rt0.c1)))) IS FALSE) HAVING ((((((((((((CASE rt0.c2  WHEN '*A' THEN rt0.c3 ELSE rt0.c1 END)OR((rt0.c1 IN ()))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))))OR(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))OR(HEX(DISTINCT rt0.c3))))OR((rt0.c2 IN ()))))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN 0.7405578642131222 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)); -- 0ms;
