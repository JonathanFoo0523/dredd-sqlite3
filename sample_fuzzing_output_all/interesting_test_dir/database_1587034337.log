-- Time: 2024/06/06 02:57:06
-- Database: database37
-- Database version: 3.40.0
-- seed value: 1587034337
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=NULL, c3=x'' WHERE (~ ((((rt0.c0))<=((rt0.c3))))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0) VALUES (LENGTH((0X38e7870f IN ())), x''); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA main.short_column_names = false; -- 1ms;
REINDEX RTRIM; -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES ('455161881'), ('f∎'), (4.55161881E8); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c1) VALUES (x'', NULL, x''), (x'', '{61F*>', x''), (0.9341727465671953, NULL, ''); -- 1ms;
PRAGMA optimize; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES ('ጸ\rt^}ꊻbD'), (NULL), (x''); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1, c4) VALUES ('954697487', '', '455161881'); -- 1ms;
PRAGMA auto_vacuum; -- 0ms;
PRAGMA main.automatic_index = false; -- 1ms;
INSERT OR REPLACE INTO rt0(c4, c0, c3, c2) VALUES (-3.02570994E8, NULL, 0.972140155988467, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES ('f1_*'); -- 0ms;
UPDATE rt0 SET c1=NULL; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 BLOB , +c4 INTEGER ); -- 1ms;
PRAGMA temp.application_id; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, 0.30712220413069335, x'db07', 0X3ee311e7, 9.54697487E8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c3=0.9310100326683893; -- 1ms;
UPDATE OR FAIL rt1 SET (c4, c2)=(0.40675242839289394, NULL); -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c4=x''; -- 0ms;
VACUUM temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c0)=('', 0.16141922624650662); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c3, c2, c4, c1) VALUES (0.3440309769525405, 1.347986107E9, '聖_hv)Tw', 'eꆻ', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (NULL, ''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c4) VALUES ('5ᇧ'); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (x''); -- 0ms;
PRAGMA temp.cache_spill = 5618851025749631752; -- 0ms;
UPDATE OR IGNORE rt0 SET c3='-1921153618'; -- 1ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (x''), (0.25953168655434566), (0x1f5d577c); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES (758983479); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c4, c0, c2) VALUES (0.5151677433657244, '0.25953168655434566', NULL, 'ጸ\rt^}ꊻbD'); -- 0ms;
ANALYZE; -- 1ms;
DROP TABLE IF EXISTS rt0; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=NULL WHERE LTRIM((((rt1.c1, rt1.c2, rt1.c0, rt1.c1, rt1.c3)) NOT BETWEEN ((0.4205923372766003, rt1.c0, rt1.c2, rt1.c3, rt1.c3)) AND ((rt1.c1, rt1.c0, rt1.c3, rt1.c2, rt1.c0))), (((rt1.c0, rt1.c4, rt1.c0))>=((rt1.c3, rt1.c0, rt1.c2)))); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c4)=(0.5258306022704075, 0.30712220413069335); -- 1ms;
REINDEX; -- 0ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (x'', ''), ('饉WMi*0x', x'4e0b'), (NULL, '-77526319'); -- 0ms;
ANALYZE; -- 2ms;
INSERT OR IGNORE INTO rt1(c2, c0, c3, c1) VALUES ('vY+P', '0.3440309769525405', '', x'e38b'), (NULL, 0.31290000444404775, NULL, NULL), (x'', 0.15981976166238543, NULL, x''); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c4, c1) VALUES (7.58983479E8, '77802207', '-1363843139'), (x'15b0', '-1819937867', '1347986107'), (x'b3bd', '', '-1293200279'); -- 0ms;
INSERT OR FAIL INTO rt1(c1, c4) VALUES (5.83958614E8, x'febf'); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', (- (-2051872946)) COLLATE NOCASE COLLATE NOCASE, '-741930957', 0x4e71f0c8, x''); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c4, c3) VALUES (-1594790566, 0.7131790461855035); -- 6ms;
INSERT OR ABORT INTO rt1(c2, c1, c4) VALUES (x'', '5ᇧ', '449981296'), ('+24', x'', x'd872'), ('l|䯏褻', '-804195521', '-302570994'); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c1) VALUES (0.16141922624650662, 0.5478695566691127), ('垊f', x'fb44'), (NULL, x''); -- 0ms;
UPDATE rt1 SET (c1, c3)=(x'1393', NULL) WHERE (CAST(rt1.c0 AS INTEGER) IN ()); -- 0ms;
COMMIT TRANSACTION; -- 17ms;
INSERT OR ABORT INTO rt1(c1, c3) VALUES ('e䉫f<1E', 0.8763250867607537), (x'', '1055068647'), (1055068647, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (NULL); -- 5ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0.14910798251865287); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c3, c0, c4, c2) VALUES (0.6403699658544351, 'Y8', '5ᇧ', -1817955976), (x'0c29', x'', '-1401135598', x''), (x'', '-741930957', -1819937867, NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c4, c2, c3) VALUES (NULL, '', NULL), (NULL, NULL, '-1921153618'), (x'2afc', '-302570994', '-752842437'); -- 9ms;
INSERT OR ROLLBACK INTO rt1(c4, c1, c3) VALUES ('2*Ec&', 0.38062018954579446, NULL); -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA application_id = 8281995921913853284; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c4, c0) VALUES (NULL, NULL, '-302570994'), (NULL, NULL, '0.9310100326683893'), (NULL, 0.4640753490967283, 'l'); -- 1ms;
INSERT OR IGNORE INTO rt1(c4, c2, c0) VALUES (0.32541243812077136, NULL, x''); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt1 SET c1=NULL WHERE CASE NULL  WHEN (~ (rt1.c1)) THEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2)) END; -- 4ms;
UPDATE OR ROLLBACK rt1 SET (c1)=(0.6721186943863309) WHERE rt1.c2; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA temp.default_cache_size = -1660548394; -- 0ms;
INSERT OR FAIL INTO rt1(c3, c4) VALUES (NULL, '193908931'), (x'', NULL), (NULL, 0.6758283887868617); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT 0.16794782094666816 FROM rt1 ORDER BY (~ (rt1.c0)) DESC, ((((((((((((NULL)OR(((rt1.c4)LIKE(rt1.c4)))))OR(rt1.c3 COLLATE NOCASE)))OR((- (rt1.c4)))))OR(((rt1.c4)+(rt1.c0)))))AND(CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)))OR(((rt1.c4) IS TRUE))) ASC  NULLS FIRST, ((CAST(rt1.c0 AS NUMERIC)) NOT NULL); -- 0ms;
SELECT DISTINCT rt1.c3 FROM rt1 UNION ALL SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((((((x'efd1e852') NOTNULL)))<>((((-752842437) NOT BETWEEN (NULL) AND (x'')))))); -- 0ms;
SELECT DISTINCT CAST(((7.58983479E8)%(rt1.c3)) AS TEXT) FROM rt1 WHERE (x'7f76'); -- 1ms;
SELECT DISTINCT AVG((('1893240173')+(rt1.c4))), (rt1.c0 IN ()) COLLATE RTRIM, MIN((rt1.c0 IN (rt1.c2))) FROM rt1 WHERE (((x'bd4e' COLLATE NOCASE) NOT BETWEEN ((('1413650475') NOTNULL)) AND (CAST(x'' AS INTEGER)))) ORDER BY ((('-1053422783', rt1.c3, rt1.c4, NULL, rt1.c3)) BETWEEN (((rt1.c4 IN (rt1.c3)), x'037b28f3', NULL, (~ (rt1.c1)), rt1.c1 COLLATE BINARY)) AND ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)), CASE rt1.c0  WHEN NULL THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END, ((((rt1.c3)AND(rt1.c2)))OR(rt1.c1)), (- (rt1.c0)), TRIM(rt1.c1)))) DESC, ((((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))OR((+ (rt1.c0)))))AND((rt1.c0 IN ()))) ASC;SELECT ALL NULL FROM rt1; -- 0ms;
SELECT DISTINCT MIN(((rt1.c2)%(rt1.c4))) FROM rt1 WHERE (((((((x'')OR(x'')))AND(x'd058'))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOTNULL)) BETWEEN (MAX('1320888329')) AND (((rt1.c2)|(rt1.c0)))) FROM rt1 LIMIT -1594790566; -- 0ms;
SELECT DISTINCT ((TOTAL_CHANGES()) NOT BETWEEN (TOTAL(rt1.c4)) AND (((rt1.c3) NOTNULL))), RANK() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND CAST(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)) AS TEXT) PRECEDING EXCLUDE TIES), CAST((rt1.c4 IN ()) AS NUMERIC), ((((((((((((NULL)AND(CASE '0.16794782094666816'  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END)))OR(((rt1.c2) BETWEEN (rt1.c0) AND (NULL)))))OR(CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END)))OR(TRIM(rt1.c4))))OR(AVG(rt1.c3))))OR(AVG(0.17856244289923184))), ((((rt1.c0)+(rt1.c0)))/('')) FROM rt1; -- 0ms;
SELECT ALL NTILE(((((CASE rt1.c2  WHEN rt1.c4 THEN rt1.c1 END)AND(((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c0)))))AND(((0.09143372780149428) IS TRUE)))) OVER (), (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c3)) IN ()), SUM(((rt1.c2)<=(rt1.c2))) FROM rt1 LIMIT 583958614 OFFSET 997592288;SELECT CAST(rt1.c0 AS REAL) FROM rt1 WHERE (''); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1; -- 1ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((((rt1.c2)OR(rt1.c4))))), ((0.5158868640218432)-(-1890192731)) COLLATE NOCASE, rt1.c3 FROM rt1; -- 0ms;
SELECT (~ ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) FROM rt1; -- 0ms;
SELECT (((((rt1.c2, rt1.c4, rt1.c1))>((rt1.c3, rt1.c3, rt1.c2))))|(((rt1.c3)IS(rt1.c3)))) FROM rt1; -- 0ms;
SELECT (- (((x'')>=(rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(SUM(((rt1.c3)>>(0.5457509982514452)))) FROM rt1 GROUP BY ((((rt1.c3 COLLATE RTRIM)AND(rt1.c2 COLLATE BINARY)))OR(rt1.c4));SELECT DISTINCT SUM((NOT (rt1.c1))) FROM rt1 WHERE (((('\nF3~8*㴔og')) NOT BETWEEN (((('526210940') NOT BETWEEN ('-549149255') AND (-1.890192731E9)))) AND (((((('	^n]~_')OR(x'')))AND('jy褻(')))))) GROUP BY ((CAST(rt1.c3 AS INTEGER))>((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))))) HAVING AVG(((rt1.c0)=(rt1.c2))); -- 0ms;
SELECT ALL (- ((rt1.c3 IN ()))) FROM rt1 WHERE ((((x'156b') NOT BETWEEN (NULL) AND ('Ij3SkJ-.')) IN (CAST('wKOdzF&mt' AS NUMERIC), '45&7' COLLATE RTRIM))); -- 1ms;
SELECT ALL (((((rt1.c3))<>((rt1.c2)))) NOT NULL), GROUP_CONCAT(''), ((- (rt1.c1)) IN (CAST(rt1.c1 AS NUMERIC))) FROM rt1; -- 0ms;
SELECT DISTINCT (((TRIM(DISTINCT rt1.c0, rt1.c0), -484257406, (((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)), NULL))<((SQLITE_VERSION(), rt1.c1 COLLATE BINARY, CAST(rt1.c3 AS INTEGER), ((rt1.c1) ISNULL), x'3188'))), AVG((('	p') NOTNULL)), RTRIM(rt1.c0 COLLATE NOCASE) FROM rt1; -- 0ms;
SELECT DISTINCT (((CASE rt1.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c0 END, CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 END, rt1.c1))!=((0.972140155988467, rt1.c3 COLLATE NOCASE, (((rt1.c2))<=((x'')))))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c3) NOT NULL))AND(((((rt1.c1)AND(rt1.c3)))AND(rt1.c4)))))AND(((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c4)))), DENSE_RANK() OVER (), ((((rt1.c0) NOT NULL))&(json_valid(rt1.c4))), COUNT(*), LAST_VALUE(NULL) OVER () FROM rt1; -- 0ms;
SELECT ((CAST(rt1.c1 AS NUMERIC)) NOT NULL), ((CAST(0.7356638091565648 AS INTEGER)) BETWEEN ((('317509666') IS TRUE)) AND (((rt1.c4)<=(rt1.c2)))), SUM(((x'') BETWEEN ('gy') AND (rt1.c0))) OVER () FROM rt1 LIMIT -623856724; -- 0ms;
SELECT ((SUM(rt1.c3)) BETWEEN (LIKELY(rt1.c0)) AND ((rt1.c2 IN ()))), CASE (NOT (rt1.c3))  WHEN ((rt1.c1)<=(rt1.c4)) THEN ((rt1.c2) NOT NULL) END, rt1.c0 FROM rt1; -- 0ms;
SELECT DISTINCT (((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 END, ((rt1.c2) IS FALSE), ((rt1.c4) NOT BETWEEN ('+0') AND (rt1.c1))))<(((((rt1.c1))>=((rt1.c2))), CASE WHEN NULL THEN rt1.c1 END, rt1.c4 COLLATE RTRIM))) FROM rt1 LIMIT 1340166834 OFFSET -741930957; -- 0ms;
SELECT DISTINCT ((((((rt1.c2))<=((rt1.c3))), CASE WHEN rt1.c4 THEN rt1.c4 END, NULL))<>((rt1.c4, ((((rt1.c4)AND(x'')))AND(rt1.c0)), (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c3)))))) FROM rt1 WHERE (json_insert(((0.9152966180563368) NOT BETWEEN (x'') AND (5.2621094E8)), ((((1320655841)AND('')))OR(NULL)), (- (0.9402204857438463)))) ORDER BY (((rt1.c3)) NOT BETWEEN ((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 END)) AND (((~ (rt1.c4))))) ASC  NULLS LAST LIMIT 1029213004 OFFSET 619782087; -- 0ms;
SELECT DISTINCT CASE ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c4))  WHEN COUNT(*) THEN CAST(rt1.c1 AS REAL) ELSE (((rt1.c4)) NOT BETWEEN ((NULL)) AND ((rt1.c4))) END FROM rt1; -- 0ms;
SELECT DISTINCT (((+ (rt1.c3)))+(rt1.c1)) FROM rt1; -- 0ms;
SELECT DISTINCT ((((0.11795690943557313)OR(UPPER(rt1.c2))))AND(((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c4)))OR(rt1.c3)))OR(0.16004263324922285)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((0X38c44bcf COLLATE RTRIM)>=(((rt1.c3)||(rt1.c3)))) FROM rt1 WHERE (((((NULL COLLATE RTRIM)AND((((x'', 0.5458952095813421, 0.11979555765929684)) NOT BETWEEN ((0.03146078868538149, x'', '-1514746247')) AND (('-1514746247', x'', x'9bf7'))))))AND(LIKELIHOOD(DISTINCT '1808002502', 0.4701101050942984)))); -- 0ms;
SELECT ((((rt1.c4)OR(rt1.c4))) NOT BETWEEN (MIN(rt1.c0)) AND ((rt1.c2 IN (rt1.c2)))), rt1.c4, ((((((rt1.c1)OR(rt1.c3)))AND(rt1.c1)))<>((((rt1.c3))<=((0.7356638091565648))))) FROM rt1 WHERE (((CASE '718510530'  WHEN '~' THEN x'a8d9' END)*(IFNULL(DISTINCT '-1401135598', NULL)))) LIMIT -1297357136 OFFSET -594736681; -- 0ms;
SELECT ALL TOTAL((((rt1.c3)) NOT BETWEEN ((0.8763250867607537)) AND ((rt1.c0)))) OVER ( ORDER BY ((UNLIKELY(DISTINCT rt1.c2))/((+ (rt1.c3)))) DESC  NULLS LAST, (((rt1.c4 COLLATE NOCASE))!=((load_extension(rt1.c2, rt1.c3)))) DESC  NULLS LAST, (((((rt1.c1) ISNULL)))<>((LAST_INSERT_ROWID()))) DESC  NULLS LAST) FROM rt1;SELECT ALL UNICODE(CASE WHEN rt1.c2 THEN rt1.c1 END) FROM rt1; -- 0ms;
SELECT (((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END, ((x'')&(rt1.c4)), (+ (rt1.c1))))>((((rt1.c1) IS FALSE), (((rt1.c3))==(('0.11795690943557313'))), CAST(rt1.c4 AS REAL)))) FROM rt1 WHERE (((((((0xffffffffe5946640) IS TRUE))OR(CASE NULL  WHEN '' THEN NULL WHEN -1401135598 THEN 'R赭<_,' WHEN 583958614 THEN '-335903203' END)))AND(x'cdc6'))); -- 0ms;
SELECT COALESCE(((rt1.c2)/(rt1.c2)), rt1.c3), MAX(((((rt1.c1)OR(rt1.c1)))OR(rt1.c3))), json_remove((((rt1.c0))<>((rt1.c3))), ((rt1.c1) IS TRUE), ((NULL) NOTNULL), (rt1.c0 IN ())) FROM rt1 LIMIT -118418632;SELECT (~ (rt1.c3)) FROM rt1 WHERE (('-453677538' COLLATE BINARY IN (((NULL) BETWEEN ('997592288') AND ('379811085'))))) ORDER BY ((CASE rt1.c2  WHEN 1.320888329E9 THEN rt1.c0 END)>=((((rt1.c2, rt1.c2, rt1.c1)) BETWEEN ((0X6807ba9c, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, NULL))))) ASC, ((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c1 END)!=(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))), NULL LIMIT -1938320724 OFFSET -1515029306; -- 0ms;
SELECT DISTINCT 0.6844347048026393, ((((('''')) BETWEEN ((rt1.c3)) AND ((rt1.c3)))) BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4))) AND (x'52df')), ((rt1.c4) IS TRUE) COLLATE NOCASE FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((rt1.c2, rt1.c0, rt1.c3)) BETWEEN (((rt1.c1 IN ()), (+ (rt1.c0)), 'b9')) AND ((CAST(rt1.c1 AS TEXT), ((((rt1.c4)AND(rt1.c0)))OR(-1830025022)), ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c3))))) FROM rt1 LIMIT 1836341130; -- 0ms;
SELECT ALL rt1.c0 FROM rt1; -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM FROM rt1 WHERE (((('垊f')) BETWEEN (((('YDㅸ') ISNULL))) AND (((((((((('1745336988')AND(0.04943791420891852)))OR(0.387682316763738)))OR(x'abc6')))OR('-1323062572')))))); -- 0ms;
SELECT DISTINCT (((((((((+ (rt1.c1)))OR((rt1.c3 IN ()))))OR(((rt1.c4)IS NOT(rt1.c3)))))OR((+ (rt1.c0)))))OR((NOT (rt1.c0)))) FROM rt1; -- 0ms;
SELECT ALL ((rt1.c4)&(CASE WHEN rt1.c1 THEN rt1.c4 END)), ((((((((rt1.c0)OR(SQLITE_SOURCE_ID())))OR(((rt1.c0)IS(rt1.c3)))))AND(((rt1.c1)GLOB(rt1.c4)))))OR(GROUP_CONCAT(rt1.c0))), CAST((rt1.c2 IN (rt1.c1, rt1.c0)) AS TEXT) FROM rt1 ORDER BY ((CASE x'b0cb'  WHEN rt1.c1 THEN '1029213004' ELSE rt1.c3 END)|(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))); -- 0ms;
SELECT ALL rt1.c3 FROM rt1 WHERE ((NOT (CAST(0xffffffffc1360b41 AS TEXT)))) ORDER BY STRFTIME(CAST(rt1.c2 AS NUMERIC), CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 END, CAST(rt1.c4 AS TEXT)) LIMIT -980770054 OFFSET 1320888329; -- 0ms;
SELECT DISTINCT rt1.c2, DENSE_RANK() OVER (), ((NOT (rt1.c2)) IN ()) FROM rt1; -- 0ms;
SELECT rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT ((TYPEOF(DISTINCT 0.3644053574492889)) NOT BETWEEN ((((rt1.c4, x'', 0.6832422415060465)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c0)) AND ((rt1.c3, rt1.c1, rt1.c0)))) AND ((NOT (0.0)))) FROM rt1 WHERE ((- (CASE WHEN x'f4c0' THEN x'9091' ELSE 0.3910229430979092 END))); -- 0ms;
SELECT DISTINCT ((TYPEOF(rt1.c4))-(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FROM rt1 WHERE (CAST((('1991674706') NOTNULL) AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(SUM(x'') AS NUMERIC), CASE WHEN (((rt1.c4, rt1.c3, rt1.c3)) BETWEEN ((rt1.c3, rt1.c0, rt1.c4)) AND ((rt1.c3, 0.9679207694029107, '!3'))) THEN rt1.c1 COLLATE RTRIM END, (((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 ELSE x'e29e' END))!=((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c3 END))) FROM rt1 GROUP BY ((CASE rt1.c2  WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END) IS TRUE), ((rt1.c0 COLLATE BINARY) NOTNULL), ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE NOCASE, (((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) IN ()), '619782087' HAVING ((rt1.c0 COLLATE RTRIM) NOTNULL) ORDER BY (~ (CAST(NULL AS REAL))) DESC, ((((((((((((((((rt1.c3 COLLATE RTRIM)AND(rt1.c2)))AND(((rt1.c3)>>(rt1.c1)))))AND((((((((('')OR(rt1.c2)))AND(NULL)))OR(rt1.c4)))AND(rt1.c4)))))AND(rt1.c2)))AND(json_insert(rt1.c1, rt1.c1, rt1.c2, rt1.c0, rt1.c0))))AND(CAST(rt1.c2 AS INTEGER))))OR(x'')))AND(CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c2 END)) ASC, rt1.c4  NULLS FIRST;SELECT DISTINCT CAST((rt1.c1 IN ()) AS TEXT) FROM rt1; -- 0ms;
SELECT DISTINCT (NOT (COUNT(*))) FROM rt1; -- 0ms;
SELECT ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c2))) NOTNULL) FROM rt1; -- 0ms;
SELECT ALL ((((((rt1.c4)OR(rt1.c0)))AND(rt1.c4))) BETWEEN (((rt1.c3) ISNULL)) AND (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))), GROUP_CONCAT((rt1.c3 IN (rt1.c1))), ((CAST(rt1.c3 AS INTEGER)) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c4))) AND (TOTAL(rt1.c2))) FROM rt1 WHERE (highlight(COALESCE('1691815449', NULL), ((((((((NULL)AND('-1819937867')))AND('')))OR(1388173252)))OR(NULL)), (('908980251')<=(NULL)), ((-1.938320724E9) NOT BETWEEN ('1055068647') AND (NULL))));SELECT DISTINCT TOTAL(CAST(rt1.c0 AS TEXT)) OVER (), TOTAL((NOT (rt1.c1))), CAST(((((rt1.c3)OR(rt1.c4)))OR(NULL)) AS TEXT) FROM rt1 WHERE (CASE WHEN (- ('Y8')) THEN ((((((((x'')AND(x'')))OR(x'd247')))OR(x'4295')))OR('807000665')) WHEN ROUND(x'c082cd78', 0xffffffffa0f16d5a) THEN ((x'') NOT BETWEEN ('') AND (x'')) WHEN CASE WHEN x'' THEN '	p' END THEN -1537430810 COLLATE RTRIM ELSE ('-118418632' IN ()) END); -- 0ms;
SELECT CASE WHEN TOTAL(rt1.c1) THEN CAST(rt1.c2 AS TEXT) ELSE NULL END FROM rt1 WHERE (((CASE WHEN -1781941175 THEN x'fcc2' ELSE NULL END) IS FALSE)); -- 0ms;
SELECT ALL (((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c1)) IN (((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))), ((((rt1.c3) NOT NULL))&(((rt1.c3)LIKE(rt1.c3)))), CAST((NULL IN ()) AS TEXT) FROM rt1 WHERE (CASE WHEN ((NULL)-(0.09399587745341675)) THEN CASE ''  WHEN NULL THEN NULL ELSE 0.045644656001058936 END WHEN ((x'9918')!=(NULL)) THEN (((NULL)) NOT BETWEEN ((NULL)) AND (('-L'))) WHEN 0.33989484994192254 COLLATE BINARY THEN (- ('1808002502')) WHEN ((-5.94736681E8) NOTNULL) THEN ((0.7060376168349953) NOT BETWEEN (0.5158868640218432) AND (NULL)) WHEN '-1890192731' THEN ((x'') ISNULL) END); -- 0ms;
SELECT DISTINCT AVG(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))) OVER ( RANGE (((rt1.c2)&(rt1.c3)) IN ((- (rt1.c3)), ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)))) PRECEDING EXCLUDE TIES), COUNT(TYPEOF(x'')) OVER (), ((CAST(rt1.c4 AS NUMERIC)) BETWEEN ((rt1.c4 IN ())) AND (((rt1.c0)LIKE(rt1.c0)))) FROM rt1 WHERE (((CAST(0.6631714880911234 AS BLOB))%(((x'')IS('2048853496')))));SELECT DISTINCT MIN((rt1.c3 IN ())) FROM rt1 WHERE (CAST(0.2293095253204379 AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT NTH_VALUE(((((rt1.c2)>=(rt1.c0)))||(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END)), ((rt1.c0) BETWEEN ((rt1.c4 IN ())) AND (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c3))))) OVER (), CAST(rt1.c3 AS REAL) COLLATE BINARY, rt1.c1 FROM rt1 WHERE (CASE TIME(x'', '0.6832422415060465', 0.6721186943863309)  WHEN (x'b2c0ce77' IN ()) THEN ((0.1339444374471892)/('')) END) LIMIT 193908931; -- 0ms;
SELECT ((CAST(rt1.c4 AS BLOB))IS(((('-1906241986')) NOT BETWEEN ((rt1.c3)) AND (('807000665'))))), ((((0X25e0ae1) BETWEEN (rt1.c1) AND (rt1.c2)))||(CAST(rt1.c2 AS TEXT))), AVG(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) OVER () FROM rt1; -- 1ms;
SELECT ALL ((((((rt1.c1)-(rt1.c2)))AND(rt1.c1 COLLATE RTRIM)))AND(('-484257406' IN (rt1.c4, rt1.c0)))) FROM rt1 GROUP BY NULL HAVING AVG((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4)))); -- 0ms;
SELECT ALL TOTAL(((rt1.c1) ISNULL)) OVER ( PARTITION BY '_fiㅸKM', ((CAST(rt1.c0 AS NUMERIC))*(((((rt1.c2)AND(rt1.c3)))AND(rt1.c1))))), CASE WHEN ((rt1.c0) IS TRUE) THEN (0.9980490692300377 IN ()) END, ((rt1.c3) NOT NULL) FROM rt1 WHERE ((((x'741b', '', 0.9679207694029107)) NOT BETWEEN (((((x''))<=((x'0bad'))), ((x'8c63')<(0xffffffff899faa7d)), x'' COLLATE BINARY)) AND (((+ (x'')), (('?')-('Ij3ekJ-.')), COALESCE(0.4093205452153216, '~r薮Q'))))); -- 0ms;
SELECT DISTINCT ((AVG(rt1.c2)) NOT NULL) FROM rt1 WHERE (CASE CAST('' AS NUMERIC)  WHEN (+ (0.3945182433511084)) THEN CAST('P%睈' AS REAL) ELSE NULL COLLATE BINARY END); -- 0ms;
SELECT CAST((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))) AS INTEGER), AVG(DATETIME(rt1.c4, 0.7387547867713794, rt1.c4, rt1.c3, rt1.c3)), rt1.c0 FROM rt1; -- 1ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN (('322841967' COLLATE NOCASE)) AND (((NOT (rt1.c1))))) FROM rt1 WHERE (CASE ((0.3440309769525405) BETWEEN (x'd63e') AND ('1320655841'))  WHEN ((x'')AND('gwg!5.ࣂ}H')) THEN ((0xffffffff8eed2870) BETWEEN ('pZ2ࣂo		') AND (0Xffffffff9e9f30da)) WHEN (((x''))<((-7.52842437E8))) THEN 295532360 COLLATE BINARY WHEN HEX(x'ca0d') THEN ((NULL) BETWEEN (4.55161881E8) AND ('583958614')) END); -- 0ms;
SELECT DISTINCT (- (((((rt1.c0)AND(rt1.c3)))OR(rt1.c1)))), LAG(CASE ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((rt1.c0)IS(rt1.c3)) THEN CAST(rt1.c1 AS INTEGER) ELSE rt1.c0 END, (~ (((((((((rt1.c4)AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c3)))), (~ (((((((((rt1.c2)AND(rt1.c3)))AND(NULL)))OR(rt1.c3)))OR(rt1.c2))))) OVER ( PARTITION BY rt1.c3, NULLIF('~', ((((rt1.c0)AND(rt1.c4)))AND(rt1.c1))) ORDER BY json_array((rt1.c4 IN (rt1.c3, rt1.c3)), rt1.c4 COLLATE BINARY), ((((rt1.c0) NOTNULL))%(LOWER(rt1.c0)))  NULLS FIRST), ((((((rt1.c3)AND(rt1.c2)))AND(rt1.c0))) NOT BETWEEN (json_extract(rt1.c2, rt1.c4)) AND (rt1.c4 COLLATE BINARY)) FROM rt1 WHERE (((((NULL) BETWEEN (1.893240173E9) AND (x'9eae'))) IS TRUE)); -- 0ms;
SELECT (((('1867000783')|(rt1.c0)))IS NOT(rt1.c2 COLLATE BINARY)), CASE CASE rt1.c4  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END  WHEN ((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)) THEN MAX('') WHEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN NULL THEN rt1.c2 END THEN x'4ade' WHEN (NULL IN ()) THEN COUNT(*) END, (((x'14ad')) NOT BETWEEN ((((rt1.c3)<<(rt1.c1)))) AND ((rt1.c3 COLLATE BINARY))) FROM rt1; -- 0ms;
SELECT ALL IFNULL(rt1.c0 COLLATE NOCASE, (((rt1.c3, rt1.c2, rt1.c1))!=((rt1.c3, rt1.c4, rt1.c0)))) FROM rt1 WHERE (((((((((((0xffffffffe8871cbb)-(0.7356638091565648)))AND(('4H7૖⡰s>' IN ()))))AND(((0.5806580626487011) IS TRUE))))OR(((((0.6579063825662641)AND('')))OR(1566806582)))))AND((+ (0X2b512259))))); -- 0ms;
SELECT ((rt1.c0) IS TRUE) FROM rt1; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))), ROW_NUMBER() OVER (), (CAST(0.5457509982514452 AS TEXT) IN ((NOT (rt1.c0)), ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) FROM rt1; -- 0ms;
SELECT ALL ((((((((((rt1.c1)<=(rt1.c2)))OR(NULL COLLATE RTRIM)))OR(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c4)))))OR(((rt1.c3)IS(rt1.c3)))))AND(((('726737497')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))))) FROM rt1 WHERE ((((NULL, 0.10762562064893344, '<	jI*c5', x'6fdb', '')) BETWEEN (((((x'569b'))>=((x'9f0a'))), LENGTH(NULL), CAST('-558874173' AS TEXT), ((0.3644053574492889) BETWEEN ('6Gk1ab3') AND (-7.7526319E7)), CAST('' AS REAL))) AND (((('0.4093205452153216')LIKE(0.7941160546116534)), (('~5') NOT BETWEEN (0Xfffffffff6f046c1) AND (NULL)), (('0.9679207694029107')/('b''ad')), (('-1817955976')|(0x2d3d2b37)), (('0.7387547867713794') NOT NULL))))); -- 0ms;
SELECT DISTINCT ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c4))) NOT BETWEEN (((rt1.c3)=(rt1.c2))) AND ('')), ((rt1.c4)<=(((((((((0.12035077796665739)OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c4)))OR(rt1.c2)))), CASE rt1.c1  WHEN (rt1.c1 IN (rt1.c0)) THEN CASE rt1.c4  WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END ELSE ((rt1.c4) ISNULL) END FROM rt1; -- 0ms;
SELECT ((((((((rt1.c1 COLLATE NOCASE)AND(json_insert(rt1.c4, rt1.c1, rt1.c2))))AND(rt1.c1)))AND(0.9210147616820854)))OR(((-1906241986)*(rt1.c3)))) FROM rt1 WHERE ((((0.8259237671285914 IN ()))+((~ ('')))));SELECT DISTINCT ((rt1.c3 IN (rt1.c2, rt1.c4)) IN (MAX(rt1.c3), ((('-110287872')) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST((((rt1.c1))<=((rt1.c0))) AS BLOB) FROM rt1 WHERE (1413650475); -- 1ms;
SELECT ALL CASE LIKELY(rt1.c4)  WHEN ((rt1.c4) IS FALSE) THEN (+ (rt1.c4)) END FROM rt1 GROUP BY rt1.c1 HAVING ((SUM(rt1.c3))&((((rt1.c0, rt1.c2, 0.2836086847866891))>((rt1.c4, rt1.c0, rt1.c0))))); -- 0ms;
SELECT -1.18418632E8 COLLATE BINARY FROM rt1; -- 0ms;
SELECT DISTINCT CAST((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND (('-615987146'))) AS TEXT) FROM rt1; -- 0ms;
SELECT ALL json_type(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0))) FROM rt1 WHERE (((('193908931') BETWEEN ('') AND (x'a795')) IN ())); -- 0ms;
SELECT DISTINCT ((CASE rt1.c0  WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c3 END) IS TRUE) FROM rt1 WHERE ((((-212935941) NOT NULL) IN ())); -- 0ms;
SELECT DISTINCT CAST(rt1.c1 AS NUMERIC) FROM rt1 WHERE (((CASE 0Xffffffffb4c7fbfc  WHEN NULL THEN 0.18874744262002308 ELSE 0X47901d3 END) ISNULL)); -- 0ms;
SELECT DISTINCT AVG(((rt1.c3)>(rt1.c4))) OVER (), ((1.055068647E9)IS NOT(((x'') ISNULL))), ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c4 END) BETWEEN ('-1594790566') AND ((+ (rt1.c0)))) FROM rt1 WHERE (((LIKELIHOOD(DISTINCT '-338165360', 0.140233957394008))+(((0X7a1f05f8) BETWEEN ('	U\	J') AND ('鈶^'))))) LIMIT -364328534 OFFSET 313000610; -- 0ms;
SELECT ALL 0.3910229430979092 FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (JULIANDAY(CAST(0.7060376168349953 AS BLOB), ((x'') IS TRUE), (((0.25000108868042137)) NOT BETWEEN ((x'b516')) AND ((0.41576910618941665))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt1.c1) FROM rt1; -- 0ms;
SELECT DISTINCT (('')||(GROUP_CONCAT(0.3460167021876609))), NTILE(CAST(rt1.c1 AS TEXT) COLLATE BINARY) OVER (), CAST(((rt1.c2)-(rt1.c0)) AS INTEGER) FROM rt1 ORDER BY 0.6952457268056018 DESC  NULLS LAST, CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c0)||(rt1.c2)) END  NULLS FIRST, ((rt1.c4)LIKE(((rt1.c2)IS NOT(rt1.c3))))  NULLS FIRST;SELECT DISTINCT AVG((NOT (rt1.c4))) OVER () FROM rt1 WHERE (((0.5005781514517089 IN (0.8244005668508873)) IN ())); -- 0ms;
SELECT DISTINCT ((((rt1.c4)==(rt1.c4))) IS FALSE), CAST(((rt1.c2)<(rt1.c4)) AS TEXT), (((CAST(rt1.c4 AS NUMERIC)))<=((GROUP_CONCAT(rt1.c1)))) FROM rt1 WHERE (((((((((((0X517e0485)AND(NULL)))AND(NULL)))OR('')))AND(x'19a6'))) BETWEEN ((-1371249654 IN ())) AND ('1701348942'))); -- 0ms;
SELECT ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c4)))+(((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c4)))) FROM rt1 GROUP BY CASE WHEN UNICODE(rt1.c3) THEN ((((rt1.c4)AND(rt1.c0)))AND(rt1.c0)) WHEN ((rt1.c2)>(rt1.c4)) THEN '' WHEN (- (NULL)) THEN LOWER(DISTINCT rt1.c0) ELSE CAST(rt1.c1 AS BLOB) END, (((((((rt1.c3)AND(rt1.c2)))OR(rt1.c3))))>((CASE WHEN rt1.c3 THEN NULL END))), ((CAST(rt1.c4 AS BLOB)) NOT BETWEEN ((rt1.c2 IN ())) AND (rt1.c3 COLLATE NOCASE)) HAVING ''; -- 1ms;
SELECT ALL LAG(CAST(((rt1.c3) NOT BETWEEN (rt1.c0) AND ('6hewrXo%5')) AS BLOB), ((((rt1.c4)AND((rt1.c1 IN ()))))OR(CASE rt1.c3  WHEN '' THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 END)), (- (rt1.c2))) OVER ( PARTITION BY rt1.c3, CAST((('1691815449') BETWEEN ('4\') AND (rt1.c4)) AS REAL)) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c4))) NOT BETWEEN (CASE rt1.c3  WHEN NULL THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN x'3b3c' THEN rt1.c2 END) AND (((rt1.c3) NOTNULL))) FROM rt1 WHERE ((+ (CAST('[+(\rtr)' AS INTEGER)))) LIMIT -1778923476 OFFSET 1163093154; -- 0ms;
SELECT (((('1588140952') NOTNULL))|(((rt1.c4)<>(rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT (((((((rt1.c2, rt1.c3, rt1.c4))==((rt1.c3, rt1.c3, rt1.c4))))AND((- (rt1.c1)))))AND(rt1.c1)), (LIKELIHOOD(rt1.c4, 0.1664150640701879) IN ()), ((((rt1.c1) IS TRUE))&(((rt1.c2)|(rt1.c2)))) FROM rt1 WHERE ((CASE WHEN 'l1v\xh톂3d' THEN 0.5821419557624689 ELSE '0.32541243812077136' END IN ())); -- 0ms;
SELECT ALL ((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3))) AND ((((0xffffffff9385f3b5))>((rt1.c3))))) FROM rt1 ORDER BY (((rt1.c1))=((rt1.c0))) COLLATE NOCASE DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((('583958614' IN (0.3574548159733668, -1994115715))) NOT NULL)); -- 1ms;
SELECT (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c4)) IN ()), LIKELIHOOD(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)), 0.39674057488719605), (((((rt1.c2)) BETWEEN ((NULL)) AND ((rt1.c1))))LIKE(((((rt1.c2)OR(rt1.c1)))OR(rt1.c0)))) FROM rt1 WHERE ((~ (HEX(0Xffffffff9ddbdc19)))); -- 0ms;
SELECT ALL CAST(((rt1.c2)>=(rt1.c3)) AS TEXT) FROM rt1 WHERE (CASE (0.35050055126791724 IN ())  WHEN ('0.7356638091565648' IN ()) THEN CASE '-1401135598'  WHEN NULL THEN 0xffffffffdb3d235f END END) LIMIT 1985979592; -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN ((+ (''))) AND (rt1.c1 COLLATE RTRIM)) FROM rt1 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN (rt1.c0, rt1.c4)))<=(313000610)), x'', (((rt1.c3)>(rt1.c4)) IN (((rt1.c1) ISNULL))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c4) BETWEEN (NULL) AND (rt1.c3)) IN ()) FROM rt1 WHERE (CAST(((NULL)AND(0X0)) AS REAL)); -- 0ms;
SELECT DISTINCT ((rt1.c2) BETWEEN (((rt1.c0) IS TRUE)) AND (MAX(rt1.c1))) FROM rt1 WHERE (((ABS(0.3300111011688365)) IS FALSE)); -- 0ms;
SELECT ALL ((CAST(rt1.c4 AS NUMERIC))IS NOT(((rt1.c4)IS(NULL)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((MIN(rt1.c0)) NOTNULL) FROM rt1 LIMIT -818793285; -- 1ms;
SELECT ALL (~ (rt1.c3)) COLLATE BINARY FROM rt1 WHERE ((((NOT (''))) BETWEEN ((+ (0xffffffffc1360b41))) AND (((0xffffffffc6c75a86) BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT ((COUNT(rt1.c0)) IS FALSE) FROM rt1 ORDER BY ((COALESCE(rt1.c4, rt1.c1))AND((rt1.c0 IN ()))) DESC;SELECT ALL ((rt1.c2 COLLATE NOCASE) BETWEEN (0X3e7f0c85 COLLATE NOCASE) AND (rt1.c2 COLLATE RTRIM)) FROM rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(rt1.c3 AS TEXT) COLLATE BINARY) OVER () FROM rt1 WHERE ((((((((((('1836341130')AND(NULL)))AND(0xfffffffff991df93)))AND(x'')))AND('-1196004035'))) NOT BETWEEN (((NULL) NOT BETWEEN (x'8c54') AND (-1.778923476E9))) AND (HEX(DISTINCT '<	jI*c5')))); -- 0ms;
SELECT ((((rt1.c0) NOT BETWEEN (0.17612450743103958) AND (rt1.c4)))GLOB((rt1.c1 IN (rt1.c2)))) FROM rt1 WHERE ((((x'', x'7553', NULL)) NOT BETWEEN ((((0.17614372238132459) ISNULL), ((0.943191084924624)+(0.8928121790022957)), CAST('334545374' AS NUMERIC))) AND ((1320655841, ((x'')LIKE(x'6fcb')), ((0.3426642939605271)<=(0.40628259796166755)))))); -- 0ms;
SELECT ALL COALESCE(COUNT(rt1.c2), ((rt1.c1)IS NOT(rt1.c0)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END, AVG(rt1.c0), rt1.c2, ((rt1.c4) ISNULL)), ((rt1.c1) BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) AND (rt1.c0)), x'', IFNULL(((rt1.c1) IS FALSE), (~ (rt1.c2))), (CASE rt1.c4  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 END IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT LAG(((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN 0.013516459316155527 ELSE rt1.c0 END) BETWEEN ((rt1.c3 IN ())) AND (rt1.c2)), NULL COLLATE BINARY, ((((((((rt1.c4)AND((((rt1.c3))>((rt1.c4))))))OR(((rt1.c0)<<(rt1.c1)))))AND(LENGTH(rt1.c1))))AND((rt1.c3 IN (rt1.c0, rt1.c2))))) OVER ( ROWS BETWEEN NULL PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM rt1 WHERE (CAST(((((((((((((x'ca8dfc6a')AND('J3')))AND('⭚.+?]쀙hW/')))OR(NULL)))AND(x'')))AND(x'aab9')))AND('lꚞ')) AS TEXT)); -- 0ms;
SELECT (((((rt1.c4)AND(rt1.c2)))AND(rt1.c1)) IN (LIKE(rt1.c1, rt1.c0))) FROM rt1 ORDER BY (((NOT (rt1.c3))) ISNULL)  NULLS LAST, (((((((((((rt1.c4)) BETWEEN ((rt1.c1)) AND (('FdUlV(#'))))OR((((((((('We')OR(rt1.c0)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR((- (rt1.c1)))))AND(((((rt1.c1)OR(rt1.c1)))OR(rt1.c3)))))OR((((rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c4, rt1.c4, rt1.c0)) AND ((rt1.c4, rt1.c0, rt1.c1, rt1.c4, rt1.c2)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE NOCASE, (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) COLLATE NOCASE, CASE x''  WHEN NULL THEN rt1.c2 ELSE (NOT (rt1.c3)) END FROM rt1 WHERE ((('45')&((('o')<(x''))))); -- 0ms;
SELECT ALL '-393798469' COLLATE NOCASE, json_quote(''), ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) IN ()) FROM rt1 LIMIT 1047277309; -- 0ms;
SELECT ((+ (rt1.c2)) IN ()) FROM rt1 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN (CASE WHEN -5.58874173E8 THEN NULL ELSE x'' END) AND ((- (NULL))))) GROUP BY CASE (rt1.c0 IN ())  WHEN CASE WHEN rt1.c3 THEN NULL WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c4 END THEN ((rt1.c1)+(rt1.c1)) ELSE LIKELY(DISTINCT rt1.c1) END; -- 1ms;
SELECT ALL CASE WHEN (- (rt1.c1)) THEN ((rt1.c1) NOT NULL) WHEN (rt1.c2 IN ()) THEN CAST(rt1.c2 AS REAL) WHEN ((((((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c4)))AND('-1297357136')))OR(rt1.c1)))OR(rt1.c4)) THEN ((rt1.c1)IS(rt1.c3)) END, ((CASE WHEN rt1.c1 THEN rt1.c4 END)>(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)), SUM(((rt1.c0)<(rt1.c2))) OVER () FROM rt1 WHERE (CASE (('-201741282')OR(808553768))  WHEN CASE NULL  WHEN NULL THEN NULL WHEN x'0dae' THEN 0X713f3853 WHEN '-804195521' THEN '1556481046' ELSE NULL END THEN ((((((((NULL)OR(0.15160738009551833)))AND(0X6b04dfd)))AND(NULL)))AND('-1091291982')) ELSE ((((x'')OR(x'5d78')))OR(0.9820246118622612)) END) ORDER BY ((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))) IN (((rt1.c4) ISNULL))) ASC  NULLS FIRST; -- 0ms;
SELECT ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)OR(((((((((rt1.c4)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c4)))) FROM rt1 WHERE (((((('-558874173'))<=((0Xffffffffe5282fa4)))) BETWEEN ((('-1971639296') NOT BETWEEN (0.6005243060094481) AND (0.7083564996903386))) AND (((-2.051872946E9)||(NULL))))); -- 0ms;
SELECT COUNT(*) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT CAST(rt1.c4 AS NUMERIC) COLLATE NOCASE FROM rt1 GROUP BY CASE (((rt1.c1))==((rt1.c2)))  WHEN (~ (rt1.c0)) THEN ((((rt1.c4)AND(0.9768406491234982)))OR(rt1.c0)) ELSE GLOB(rt1.c2, rt1.c3) END, ((((rt1.c3)+(rt1.c1))) IS TRUE), UNLIKELY('0.09399587745341675') HAVING ((((((rt1.c2) IS TRUE))OR((+ (rt1.c1)))))OR(((rt1.c1)&(rt1.c2)))); -- 3ms;
SELECT (((~ (rt1.c1))) NOTNULL) FROM rt1 LIMIT 610467346; -- 0ms;
SELECT DISTINCT (((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END))>=((((rt1.c0)>=(rt1.c3))))), (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))) COLLATE RTRIM, ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL) FROM rt1; -- 0ms;
SELECT DISTINCT 0Xffffffffde83426b FROM rt1 WHERE (((NULL COLLATE NOCASE)<=((('q') IS FALSE)))); -- 0ms;
SELECT SUM(CAST(rt1.c0 AS NUMERIC)), SUM(CAST(rt1.c1 AS NUMERIC)) OVER ( ORDER BY CASE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c4 END  WHEN rt1.c1 COLLATE NOCASE THEN rt1.c2 ELSE (((rt1.c4, rt1.c1, rt1.c1))>=((rt1.c3, rt1.c2, x''))) END ASC), (- (NULL)) FROM rt1 WHERE (((((NULL)GLOB(-519776082))) IS FALSE)); -- 0ms;
SELECT ((CAST(rt1.c1 AS INTEGER)) BETWEEN (((rt1.c2)GLOB(0.6743791298108801))) AND (SUM(x''))) FROM rt1 WHERE (((((((((CAST(0.4057294557151665 AS TEXT))AND((x'' IN ()))))AND(x'9fac')))AND(((NULL)<<(0X1da1d1c5)))))OR(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1; -- 0ms;
SELECT x'', (- (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))), ((CAST(NULL AS INTEGER)) ISNULL) FROM rt1 WHERE ((('' COLLATE RTRIM)+(((NULL)<=(0.44851690360075547))))) LIMIT -820879512; -- 1ms;
SELECT DISTINCT ((((rt1.c4 IN (rt1.c0)), ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)), 0Xffffffffbe0d130e))<=(((~ (rt1.c0)), CAST(0.8430598177030194 AS BLOB), GROUP_CONCAT(rt1.c2)))), ((COUNT(*)) NOT BETWEEN (NULL) AND (((('ukz'))>=((rt1.c0))))), rt1.c1, UPPER(DISTINCT ((rt1.c2)>>('7LmAQ'))), 0Xffffffffd7be35b4 FROM rt1 WHERE ((((NULL)) BETWEEN ((((NULL) IS FALSE))) AND (((((0.9158856395863115))>((0.2922317240869631))))))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)>>(rt1.c4)) AS NUMERIC) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (((~ (rt1.c0))))), (((0.24267137819199514)) NOT BETWEEN ((((rt1.c1) BETWEEN ('') AND (rt1.c0)))) AND ((CASE WHEN rt1.c0 THEN rt1.c1 END))), 619782087 FROM rt1 WHERE ((+ (((((NULL)AND(x'')))AND('FALSE'))))) LIMIT -60382042 INTERSECT SELECT ABS(DISTINCT AVG(rt1.c0)), ((CAST(rt1.c1 AS TEXT))IS(((rt1.c0)<>(rt1.c1)))), (~ (((((rt1.c0)OR(x'')))AND(rt1.c0)))) FROM rt1 WHERE ((NOT ((('1')IS(-1569936684)))));SELECT DISTINCT CASE ((rt1.c0)&(rt1.c2))  WHEN MAX(rt1.c4) THEN ((rt1.c1) NOT NULL) ELSE ((rt1.c4) NOTNULL) END FROM rt1 WHERE ((((0.23109584147195195)*('299443246')) IN ())); -- 0ms;
SELECT DISTINCT (((rt1.c3 COLLATE RTRIM, ((rt1.c0)LIKE(rt1.c1)), 0.8460515626133107))<=(('-233664548', SUM(rt1.c2), ((rt1.c4)/(rt1.c0))))) FROM rt1; -- 0ms;
SELECT (- (rt1.c3 COLLATE RTRIM)), (-1.10287872E8 IN ()), (((((rt1.c3 IN (rt1.c2)))AND((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))))AND(GROUP_CONCAT(rt1.c1))) FROM rt1; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((x'')GLOB(rt1.c3))) FROM rt1; -- 0ms;
SELECT CAST('{-' COLLATE NOCASE AS INTEGER) FROM rt1 WHERE (((UPPER('VJŅ')) IS TRUE)); -- 0ms;
SELECT ALL ((rt1.c2 IN ()) IN ()) FROM rt1 WHERE (TRIM(CAST('-453677538' AS REAL))) GROUP BY HEX(rt1.c0) COLLATE RTRIM HAVING IFNULL(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1)), (((rt1.c3, rt1.c4, rt1.c4)) BETWEEN ((rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c0, rt1.c4, rt1.c1)))); -- 0ms;
SELECT DISTINCT (((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))>=(rt1.c4)) FROM rt1 LIMIT -2043425230; -- 0ms;
SELECT DISTINCT UNICODE(((rt1.c4) NOTNULL)) FROM rt1 WHERE (((((((2.048853496E9)AND('1953679165')))AND('0.9768406491234982'))) IS FALSE)) ORDER BY TRIM((x'' IN ()), (- (rt1.c3))); -- 0ms;
SELECT ALL CAST(((rt1.c4) NOT BETWEEN ('-1646535655') AND (rt1.c3)) AS BLOB) FROM rt1; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt1 LIMIT 1975086025; -- 0ms;
SELECT DISTINCT (((((((rt1.c4)OR(rt1.c1)))OR(rt1.c1))))<=((((((rt1.c1)OR(rt1.c2)))AND(rt1.c4))))) FROM rt1 WHERE (((((1.93908931E8)&(x'd7dbef8b'))) IS TRUE)); -- 0ms;
SELECT (((rt1.c1)<(rt1.c4)) IN ()), (((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))) COLLATE BINARY, MIN(((rt1.c2)|(rt1.c2))) FROM rt1 ORDER BY ((((NULL)>(x''))) NOT NULL)  NULLS LAST, 0.7690324958099516 DESC  NULLS LAST; -- 1ms;
SELECT IFNULL(CAST(rt1.c4 AS BLOB), ((rt1.c0)>(rt1.c1))), AVG(((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3))), (((rt1.c0 IN (rt1.c1)))<(rt1.c0)) FROM rt1 WHERE ((x'a07f' IN ()) COLLATE BINARY) LIMIT 586433474; -- 0ms;
SELECT ALL x'', GROUP_CONCAT(rt1.c2) OVER (), rt1.c3 FROM rt1 WHERE ((((~ (x'4fb8'))) IS FALSE)) GROUP BY ((((((((CAST(rt1.c0 AS REAL))AND(((rt1.c4)<=(rt1.c4)))))AND(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt1.c0)LIKE(rt1.c3)))))OR(CASE WHEN rt1.c0 THEN rt1.c0 END)), ((((x'') NOT BETWEEN (rt1.c0) AND (rt1.c3))) NOT BETWEEN (CAST(rt1.c3 AS REAL)) AND (((rt1.c0) BETWEEN (rt1.c0) AND (x'88719d21')))), ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c2)))<>(rt1.c4)); -- 0ms;
SELECT ALL (~ (x'')) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1))) IS TRUE), ((((~ (rt1.c1))))<=(((- (rt1.c3))))), GROUP_CONCAT(CASE WHEN '' THEN rt1.c1 ELSE rt1.c1 END COLLATE BINARY) OVER () FROM rt1 LIMIT -1633734438 OFFSET -110287872; -- 0ms;
SELECT ALL CAST(CASE ''  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c1 END AS INTEGER) FROM rt1 WHERE ((((((NULL)OR('-638149590')))OR(2.048853496E9)) IN ())); -- 0ms;
SELECT DISTINCT CAST(((rt1.c2) ISNULL) AS NUMERIC) FROM rt1 WHERE (((((x'') ISNULL)) ISNULL)) ORDER BY rt1.c4  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ('-500175113'); -- 1ms;
SELECT ALL ((~ (NULL)) IN ()), ((((((((((rt1.c0) IS TRUE))OR(LIKELIHOOD(rt1.c2, 0.6332161994674056))))OR(rt1.c4 COLLATE BINARY)))AND(MAX(rt1.c0))))OR(((((rt1.c0)OR(rt1.c3)))AND(rt1.c4)))), (((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))))=((MIN(rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT '-2117911276' FROM rt1 WHERE ((('')AND(CASE WHEN '/tKh' THEN 0Xffffffffd85d07ce ELSE 0.7131790461855035 END))) ORDER BY (((NOT (rt1.c2))) BETWEEN (((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))) AND ((((rt1.c4, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, -1878557420, rt1.c3)) AND ((rt1.c4, rt1.c1, rt1.c3)))))  NULLS LAST; -- 0ms;
SELECT ALL COUNT(((rt1.c2) ISNULL)) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1; -- 0ms;
SELECT ((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)GLOB((rt1.c1 IN ()))) FROM rt1 WHERE ((((x'' COLLATE BINARY))>(((('1867000783') BETWEEN (x'') AND ('0.4057294557151665')))))) GROUP BY (((((((rt1.c2))!=((rt1.c3))))AND(((rt1.c0)<=(rt1.c4)))))OR(CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END)), ((((CAST(rt1.c3 AS TEXT))AND(((rt1.c4) NOT BETWEEN (0.9222115038764442) AND (rt1.c3)))))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)))), ((LIKELY(DISTINCT rt1.c4))OR(rt1.c0)) HAVING (+ ((rt1.c4 IN ()))); -- 0ms;
SELECT ALL (((((rt1.c4)>=(rt1.c2))))>=((((rt1.c4) IS TRUE)))) FROM rt1; -- 0ms;
SELECT DISTINCT (((('')+(rt1.c0))) BETWEEN (rt1.c4) AND (NULL)) FROM rt1; -- 0ms;
SELECT DISTINCT HEX((rt1.c3 IN ())) FROM rt1 WHERE ((NULL IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT AVG(((rt1.c3) NOT NULL)) FROM rt1; -- 0ms;
SELECT ALL ((((((rt1.c1)AND(rt1.c1)))AND(rt1.c4)))IS(((rt1.c0) IS TRUE))) FROM rt1; -- 0ms;
SELECT DISTINCT (((x'' IN (rt1.c1))) ISNULL) FROM rt1 WHERE ((((('-623856724')<(NULL))) NOT BETWEEN ((((0x469c8216)) BETWEEN ((NULL)) AND ((0.5158868640218432)))) AND (((((-1.363843139E9)OR(NULL)))OR(x''))))) GROUP BY ((((((((x'')AND(rt1.c4)))OR(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4)))))AND(((rt1.c4)>=(rt1.c0)))))AND((NOT (rt1.c0)))); -- 0ms;
SELECT ((CAST(rt1.c2 AS TEXT))+((((rt1.c0))>=((rt1.c3))))) FROM rt1 LIMIT 1939606125 OFFSET 1358623004; -- 0ms;
SELECT ALL (((rt1.c0 IN ()))<=(NULL)) FROM rt1 WHERE ((CASE WHEN '2146489844' THEN '955!R' END IN ())); -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END AS REAL)) OVER () FROM rt1 WHERE (ABS(CASE WHEN '1316090056' THEN '-1819937867' END)) ORDER BY (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)) IN ()); -- 1ms;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ((((0.5529008179501569) NOT BETWEEN ('-1646159006') AND (NULL)) IN ())) LIMIT 370319803; -- 0ms;
SELECT ALL ((LIKELIHOOD(rt1.c2, 0.7550159339749419))|(((rt1.c2)>(rt1.c4)))) FROM rt1 WHERE ((((0.6417912718302505)<('AƉ>0')) IN ('807000665'))) GROUP BY (+ (((rt1.c0)|(rt1.c0)))); -- 0ms;
SELECT (((rt1.c1)>>(rt1.c1)) IN ((('') ISNULL), ((rt1.c2)<<(rt1.c3)))), CASE ((rt1.c0) NOT NULL)  WHEN (rt1.c4 IN ()) THEN 0Xffffffff8c61cc77 END, ((rt1.c1 IN (rt1.c4)) IN ()) FROM rt1 GROUP BY ABS((((rt1.c1, '', rt1.c1))<>((rt1.c1, '', rt1.c0)))) LIMIT 760785751 OFFSET 172506785; -- 0ms;
SELECT NTH_VALUE(CAST(((((x'')OR(rt1.c2)))AND(x'18aa')) AS REAL), CAST((+ (rt1.c2)) AS BLOB)) OVER (), CAST(((((rt1.c1)AND(NULL)))AND(NULL)) AS NUMERIC), DATETIME(SUM(rt1.c0), ((rt1.c0)!=(rt1.c4)), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c1)), rt1.c0 COLLATE BINARY, TYPEOF(rt1.c4)) FROM rt1;SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((((0.30960249985884103) NOT BETWEEN (-393798469) AND (x'')))||((('-1819937867')AND(x''))))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT TYPEOF(DISTINCT rt1.c2)), NULL, CAST(rt1.c0 AS INTEGER) FROM rt1 WHERE (((-338165360) NOT BETWEEN ((~ (0xffffffffda4907b7))) AND (CAST('-980770054' AS REAL)))); -- 0ms;
SELECT DISTINCT (((((((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c4)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)) IN ()), (((- (rt1.c1)))|((rt1.c2 IN (rt1.c0)))), ((((((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)))OR(((((((((rt1.c3)OR(rt1.c4)))OR(rt1.c2)))AND(rt1.c1)))AND(0.26936303566870523)))))OR(((rt1.c0)/(0.76991344105903)))) FROM rt1; -- 0ms;
SELECT TOTAL('-238782406') FROM rt1 ORDER BY CASE CASE rt1.c1  WHEN rt1.c4 THEN rt1.c1 END  WHEN CAST(rt1.c2 AS BLOB) THEN (((rt1.c4))<=((-152025407))) END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((((('1204211124') IS TRUE)) BETWEEN (CAST(NULL AS REAL)) AND (((((0.4818986073547963)OR('0.5821419557624689')))AND(''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0))) OVER () FROM rt1 WHERE (((((('') BETWEEN (-804195521) AND (x'd06a094e')), NULL COLLATE RTRIM, ((0.9760462750767357) BETWEEN (0.507848472050377) AND (0.8430598177030194))))<((CASE WHEN NULL THEN NULL ELSE 0x6d1b6290 END, '97183282', 'PE*?{z憫ꆻ' COLLATE BINARY)))); -- 0ms;
SELECT AVG('-26410731'), 1.340166834E9, CAST(CAST(rt1.c1 AS BLOB) AS INTEGER), '-110287872', ((((rt1.c1 COLLATE RTRIM)AND(rt1.c4)))AND(((((((((rt1.c4)AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))) FROM rt1 ORDER BY ((((rt1.c0)>=(0Xffffffffebd80190)))GLOB((+ (rt1.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt1.c2)) BETWEEN ((CASE WHEN '1503889828' THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)) AND ((CASE rt1.c1  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END))) FROM rt1; -- 1ms;
SELECT DISTINCT COALESCE(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END, COUNT(rt1.c3)) FROM rt1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt1 WHERE (CASE WHEN CASE WHEN NULL THEN 1991674706 WHEN 0.8135466440258369 THEN 0.44851690360075547 WHEN NULL THEN x'' ELSE '77802207' END THEN ((0.7055433278161387)<<(x'')) ELSE ((((-364328534)AND('1643602347')))OR('-1514746247')) END); -- 0ms;
SELECT DISTINCT ((((((((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(x'd477')))AND((+ (rt1.c0)))))OR(ABS(rt1.c4))) FROM rt1 WHERE ((('5ᇧ')<<(0x38e1d1c0)) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ('K(4B\nW' IN (GROUP_CONCAT(rt1.c2))) FROM rt1 WHERE ((+ ((((((((((((('')OR(0.3598332462274013)))AND(0.8043138798167122)))OR(0.25953168655434566)))AND(0Xffffffff95c9bc49)))AND(NULL)))AND(NULL))))); -- 0ms;
SELECT rt1.c2 FROM rt1; -- 0ms;
SELECT ALL (~ (CAST(rt1.c2 AS INTEGER))), (((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4)) IN ()), ROW_NUMBER() OVER () FROM rt1 ORDER BY ((((rt1.c1)*(rt1.c2)))<(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c3)))); -- 0ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) AND ((((((rt1.c3)AND(rt1.c2)))AND(rt1.c3))))), (TOTAL(rt1.c0) IN ()), HEX((~ (rt1.c4))) FROM rt1; -- 1ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((((rt1.c0)>>(x'')))) AND ((NULL))) FROM rt1 WHERE (NULL); -- 0ms;
SELECT ALL -838827119 FROM rt1 WHERE (ABS(DISTINCT '718510530') COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NULL FROM rt1 WHERE ((~ (NULL)) COLLATE BINARY) ORDER BY CASE WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c1)IS NOT('1051534090')) WHEN ((rt1.c0)/(rt1.c1)) THEN rt1.c1 COLLATE NOCASE WHEN (- (rt1.c0)) THEN 0.6844347048026393 COLLATE RTRIM ELSE (+ (rt1.c0)) END DESC; -- 0ms;
SELECT (((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))LIKE(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c4)))), MIN((rt1.c4 IN (rt1.c2)) COLLATE RTRIM), ((CASE '237878141'  WHEN rt1.c0 THEN x'' WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 END) IS FALSE) FROM rt1 WHERE (((((NULL) IS FALSE)) IS FALSE)) GROUP BY COALESCE(DISTINCT TRIM(rt1.c1, rt1.c1), ((rt1.c3) ISNULL), CAST(rt1.c0 AS NUMERIC), 471377562); -- 0ms;
SELECT DISTINCT 'D8鯡Z' FROM rt1 WHERE ((((((-5.61823125E8)) BETWEEN (('')) AND ((-5.61823125E8)))) NOT NULL)); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c4 IN (rt1.c4))) NOT BETWEEN (x'699b554d') AND ((rt1.c1 IN ()))) FROM rt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (((0.09922188370413265)IS NOT('-77526319'))) AND (((NULL)*(NULL))))); -- 1ms;
SELECT DISTINCT ((((rt1.c3)||(rt1.c0)))*(GROUP_CONCAT(rt1.c3))) FROM rt1 GROUP BY CAST(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c2)) AS NUMERIC), (NOT (((rt1.c4) NOT NULL))), (((((rt1.c4))==((rt1.c4)))) NOT BETWEEN (((rt1.c4)IS(rt1.c1))) AND ((((rt1.c4, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c1, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c0))))) HAVING (((NOT (NULL))) NOT NULL); -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( ORDER BY '75039187') FROM rt1 WHERE ((+ (((0.647102235794467) NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((NULLIF(rt1.c3, rt1.c0))LIKE(((rt1.c4)!=(rt1.c3)))) FROM rt1 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ALL (('')<=(rt1.c0)) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN ((- (rt1.c2))) AND ((((rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((rt1.c3, rt1.c3, rt1.c3)) AND ((rt1.c2, rt1.c2, rt1.c4))))) FROM rt1; -- 0ms;
SELECT DISTINCT '' FROM rt1 GROUP BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))||(rt1.c1)); -- 0ms;
SELECT DISTINCT (((((rt1.c3, '936066335', rt1.c1)) NOT BETWEEN ((3.79811085E8, rt1.c3, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4)))) NOTNULL) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c2) ISNULL) FROM rt1 WHERE (((((('-118418632') NOT BETWEEN (NULL) AND ('1893240173'))))>((CASE 0.7860976225995056  WHEN x'f597' THEN 'v%' WHEN NULL THEN 0.11795690943557313 WHEN 0.2631198511434397 THEN 2019033367 ELSE '0.6579063825662641' END)))) LIMIT -723369659 OFFSET 99688149; -- 1ms;
SELECT ALL ((((x'e20a')>(x'68bd'))) BETWEEN (rt1.c3 COLLATE NOCASE) AND (CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END)) FROM rt1; -- 0ms;
SELECT (('') NOT NULL) FROM rt1; -- 0ms;
SELECT DISTINCT SUM(((rt1.c3) NOT NULL)) FROM rt1; -- 0ms;
SELECT (+ (rt1.c0)) COLLATE NOCASE, (((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))))<(1199034539)), AVG(CAST(rt1.c2 AS INTEGER)) FROM rt1; -- 0ms;
SELECT DISTINCT SUM(CASE rt1.c2  WHEN rt1.c2 THEN '-561823125' WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 END) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT NTH_VALUE((NULL IN ()), CAST(CAST(rt1.c3 AS TEXT) AS TEXT)) OVER (), CASE WHEN ((rt1.c3) ISNULL) THEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END END, ((((rt1.c3)AND(((rt1.c2)>>(rt1.c0)))))AND((('0.40675242839289394')*(rt1.c4)))) FROM rt1;SELECT DISTINCT ((CAST(rt1.c0 AS BLOB))GLOB(((rt1.c3)IS(rt1.c0)))) FROM rt1 WHERE (((((((((((-1363843139)OR('27281')))AND(NULL)))OR(x'')))AND('\rP'))) BETWEEN (CAST('-615987146' AS REAL)) AND ((('FALSE')IS('1367213189'))))) LIMIT -1320002275 OFFSET 1285292152; -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY CASE WHEN CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END THEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN rt1.c2 THEN (((rt1.c0, rt1.c4, NULL)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c0)) AND ((rt1.c3, rt1.c2, rt1.c3))) WHEN CASE WHEN rt1.c1 THEN rt1.c4 END THEN CASE rt1.c3  WHEN rt1.c1 THEN rt1.c4 END END, IFNULL(DISTINCT (rt1.c1 IN (rt1.c0)), LTRIM(x'')), 0.5144364162946694, rt1.c1), ((json_object(rt1.c0, rt1.c3)) NOT NULL), CAST(((x'') NOT BETWEEN (rt1.c4) AND (rt1.c4)) AS NUMERIC) FROM rt1 WHERE (CAST((('')+('1163093154')) AS REAL));SELECT DISTINCT 0.20287504236215237, rt1.c2, SUM(rt1.c1) FROM rt1 WHERE (CASE (NOT (''))  WHEN (('~}')&(0.34395183576424027)) THEN CAST('0.7690324958099516' AS TEXT) WHEN (((((((('-1293200279')AND(0.4421306845563394)))OR('583958614')))OR(x'')))OR(0.9341727465671953)) THEN x'' WHEN CASE x''  WHEN -1938320724 THEN '{' ELSE x'eae9' END THEN ((((x'')AND(0.7919039681407225)))OR('-1774760331')) ELSE ((NULL) NOTNULL) END); -- 0ms;
SELECT DISTINCT UPPER(((0.5258306022704075) BETWEEN (rt1.c2) AND (rt1.c1))) FROM rt1; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt1 ORDER BY rt1.c1  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS NUMERIC)) IS FALSE) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END AS TEXT), ((((rt1.c3 IN ()), (((rt1.c2, rt1.c4, rt1.c2)) BETWEEN ((NULL, rt1.c2, rt1.c0)) AND ((rt1.c2, rt1.c3, rt1.c0))), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c1, (rt1.c1 IN ())))!=((CHANGES(), ((-1144302222)%(rt1.c3)), rt1.c0, (NOT (rt1.c3)), rt1.c1))), COUNT(*) FROM rt1 WHERE (((IFNULL(DISTINCT x'b10f', 0.6525677817791531))IS((- (NULL))))); -- 0ms;
SELECT NTH_VALUE(CAST(CAST(rt1.c3 AS INTEGER) AS REAL), NULL) OVER () FROM rt1;SELECT ALL ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))IS((rt1.c0 IN (rt1.c3)))) FROM rt1 WHERE (((CASE WHEN 0.9707058431956794 THEN 0.43992632627251116 END) BETWEEN (((x'')==(x'4d0b'))) AND (CASE NULL  WHEN x'' THEN '' END))) GROUP BY (((((((('')AND(CASE rt1.c1  WHEN rt1.c1 THEN '-77257943' WHEN rt1.c0 THEN rt1.c1 WHEN NULL THEN rt1.c0 END)))AND(((((((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c4)))))AND(rt1.c1 COLLATE NOCASE)))AND(((rt1.c0)<(NULL)))) HAVING CAST(CAST(rt1.c1 AS BLOB) AS INTEGER); -- 0ms;
SELECT ALL ((('1643602347'))<(((rt1.c3 IN ())))) FROM rt1 WHERE (((1.745336988E9 IN ('')) IN ())); -- 0ms;
SELECT rt1.c1 FROM rt1 WHERE ((((('1316100811')OR(3.9717601E7)))AND('1745336988')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)AND(rt1.c4)))OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c4)))<<(CAST(rt1.c4 AS BLOB))) FROM rt1 LIMIT 2064287506; -- 0ms;
SELECT ALL (((('-1819937867')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))) IN (COUNT(*))), LAST_VALUE(x'') OVER (), AVG(CAST(rt1.c1 AS BLOB)) FROM rt1; -- 1ms;
SELECT (('<2TQ~S_' IN (rt1.c2)) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c4)AND(rt1.c4)))AND(rt1.c2)) IN (((rt1.c4)!=(rt1.c4)))) FROM rt1 WHERE (((NULL COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT ALL (- (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 END)), CASE WHEN (+ (rt1.c4)) THEN UPPER(rt1.c3) END, rt1.c1 FROM rt1 WHERE ((('')!=(NULL)) COLLATE NOCASE) GROUP BY ((((0x11ec1b91)AND(rt1.c3)))OR(((rt1.c3)*(rt1.c3)))) HAVING (+ (LIKELIHOOD(rt1.c3, 0.8445179358417737))); -- 0ms;
SELECT CAST(rt1.c1 AS INTEGER) FROM rt1; -- 0ms;
SELECT ALL SUM(((rt1.c0) NOT NULL)) OVER ( ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (TRIM(rt1.c4, rt1.c1))) DESC  NULLS FIRST) FROM rt1 WHERE (((((0.3392364169428621) ISNULL))<(((-1.986024835E9) NOT BETWEEN (0.013516459316155527) AND (NULL))))); -- 0ms;
SELECT ALL ((0Xffffffffedf7220e) BETWEEN (((rt1.c2)=(''))) AND ((- (rt1.c3)))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(rt1.c1 COLLATE RTRIM AS BLOB) FROM rt1 WHERE (((CASE x''  WHEN x'' THEN '1351085239' END)*((('0.3910229430979092') ISNULL)))) LIMIT 2085407549; -- 0ms;
SELECT DISTINCT ((rt1.c2) NOTNULL) COLLATE RTRIM, ((((CASE x'f3fa'  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)OR(HEX(rt1.c4))))AND(MIN(rt1.c2))), ((((rt1.c4)IS(1.388173252E9))) NOT BETWEEN (((rt1.c2)<<(rt1.c1))) AND ((rt1.c0 IN (0.2685259215660184)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c1 COLLATE BINARY) NOT BETWEEN (json_remove(rt1.c0, rt1.c2)) AND ((rt1.c1 IN ()))) FROM rt1;SELECT DISTINCT '-152025407' FROM rt1 WHERE (((x'' IN (NULL)) IN ())); -- 0ms;
SELECT DISTINCT rt1.c0 COLLATE BINARY FROM rt1 WHERE ((((('1737388389') BETWEEN (0.17417496432414958) AND (x'')))IS(((((0.2521399513695378)OR(0.3644053574492889)))AND(0xffffffffd1b797d0))))); -- 0ms;
SELECT DISTINCT ((rt1.c4) NOTNULL) COLLATE RTRIM FROM rt1 WHERE (((((((0Xffffffffcde308fa) ISNULL))OR(NULL COLLATE NOCASE)))OR(((NULL)>('Zc[<*?l '))))); -- 0ms;
SELECT DISTINCT ((((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) IS FALSE), 0.22167508159220883, (- (rt1.c4 COLLATE RTRIM)) FROM rt1; -- 0ms;
SELECT DISTINCT (~ (rt1.c1)) COLLATE BINARY FROM rt1 WHERE (((('')) NOT BETWEEN ((load_extension(NULL))) AND ((('7]' IN ())))));SELECT GROUP_CONCAT((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) FROM rt1; -- 1ms;
SELECT DISTINCT (NOT (rt1.c3)) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT ALL AVG((- (rt1.c3))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((IFNULL(DISTINCT rt1.c4, rt1.c1))AND(((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))) FROM rt1 WHERE (CAST(((x'') NOT NULL) AS REAL)); -- 0ms;
SELECT ((HEX(rt1.c0)) NOT BETWEEN (((rt1.c3) IS TRUE)) AND (ABS(DISTINCT rt1.c3))) FROM rt1; -- 0ms;
SELECT NULL, CASE COUNT(rt1.c0)  WHEN ((rt1.c2)AND(rt1.c3)) THEN ((rt1.c3) IS TRUE) WHEN ((rt1.c0)=(rt1.c3)) THEN ((rt1.c1) NOTNULL) WHEN CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END THEN ((rt1.c2)AND(rt1.c4)) ELSE (((rt1.c3, rt1.c0, rt1.c0))>=((rt1.c4, rt1.c4, 'O#nyR'))) END, (((rt1.c4 IN ())) IS TRUE) FROM rt1 WHERE (((((x'') BETWEEN ('I␀') AND ('1947661210')))IS NOT('WI?n~'))); -- 0ms;
SELECT MAX(rt1.c2, rt1.c1 COLLATE BINARY) FROM rt1 WHERE ((('[j' COLLATE RTRIM)>=(((x'') BETWEEN (1.991674706E9) AND ('垊f'))))); -- 0ms;
SELECT ALL CASE WHEN (rt1.c4 IN (rt1.c4)) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((1.367213189E9)&(rt1.c3)) THEN ((rt1.c1)AND(rt1.c1)) WHEN (('1533982963') NOT BETWEEN (rt1.c0) AND (x'')) THEN ((rt1.c0) IS FALSE) END, ((((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c4)))OR('1784257530')))AND(rt1.c3)))<=(LTRIM(rt1.c4, rt1.c1))), AVG(JULIANDAY(rt1.c2, rt1.c3, rt1.c2)) OVER () FROM rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END)|((rt1.c2 IN ()))) FROM rt1 WHERE ((NOT (((((x'')OR('<Jebq')))OR(x''))))); -- 0ms;
SELECT ALL (~ (CAST(rt1.c3 AS NUMERIC))) FROM rt1 WHERE ((((CASE WHEN 0.9126931239236123 THEN NULL END, CAST(NULL AS TEXT), (('0.5806580626487011') BETWEEN ('1413650475') AND ('0.31290000444404775')), ((((((((NULL)OR(-263111273)))OR(NULL)))AND('77802207')))AND(x'')), (((('1808002502')OR(0X625eecd6)))OR(NULL))))!=(((NOT (0.3998952746444443)), '2~' COLLATE NOCASE, (('QySSM')!=('1424523264')), (x'' IN (NULL)), ((998764262) NOT BETWEEN (0.049965708683249455) AND ('-1818549172')))))) GROUP BY (('744229470') BETWEEN (((rt1.c4)*(rt1.c4))) AND (((rt1.c0)|(rt1.c0)))) HAVING (NOT ((rt1.c4 IN (rt1.c4)))); -- 0ms;
SELECT (((CAST(rt1.c2 AS BLOB)))<((CAST(rt1.c0 AS REAL)))) FROM rt1 GROUP BY CASE CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c3 END  WHEN ((rt1.c0) IS FALSE) THEN (+ (rt1.c2)) ELSE ((rt1.c0)|(rt1.c0)) END, ((((((rt1.c3)AND(rt1.c4)))OR(rt1.c0)))<(CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN x'' WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c0 END)), ((((rt1.c4)OR(rt1.c1)))AND(LOWER(rt1.c1))) HAVING CASE (NOT (rt1.c2))  WHEN ((rt1.c0)GLOB(rt1.c2)) THEN 'CZ' END; -- 0ms;
SELECT ALL ((rt1.c4 IN ()) IN ()), LIKELY(DISTINCT rt1.c2), (~ (CAST(rt1.c2 AS INTEGER))) FROM rt1; -- 1ms;
SELECT TOTAL(rt1.c0), ((0X6da64d58)<<(((rt1.c4)>(rt1.c4)))), (((((rt1.c4, rt1.c1, rt1.c4)) BETWEEN ((rt1.c2, rt1.c0, rt1.c2)) AND ((rt1.c4, rt1.c4, NULL))))-(rt1.c3)) FROM rt1 LIMIT 583958614; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (-1.10287872E8))) OVER () FROM rt1; -- 0ms;
SELECT ((((rt1.c2)LIKE(rt1.c3))) BETWEEN (0.3237161000302484) AND (((((rt1.c1)OR(rt1.c2)))OR('-751228804')))), rt1.c0, (((~ (NULL)))AND(((rt1.c3) BETWEEN (rt1.c4) AND ('202352867')))), ((((((rt1.c3)&(rt1.c4)))AND((('') IS FALSE))))OR(((rt1.c2)|(rt1.c1)))), CAST('' AS NUMERIC) FROM rt1 WHERE ((((('D8鯡Z')IS NOT(0xffffffff85cbe82d)))=(CAST(x'' AS TEXT)))); -- 0ms;
SELECT GROUP_CONCAT(((rt1.c4)IS(rt1.c3))) OVER ( PARTITION BY rt1.c3, (((rt1.c3)IS(rt1.c2)) IN ())) FROM rt1 GROUP BY (((~ (rt1.c2)))>>(rt1.c2)), rt1.c2, rt1.c4 LIMIT -91225325; -- 0ms;
SELECT DISTINCT MAX(((rt1.c3)<(x'e836'))) FROM rt1; -- 0ms;
SELECT ALL SUM(rt1.c0) OVER () FROM rt1 ORDER BY ((((((rt1.c3)+(rt1.c4)))OR(((rt1.c1)-(rt1.c1)))))AND(x'aed5'))  NULLS FIRST; -- 1ms;
SELECT ALL (+ (((((((((x'')AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c4)))), json_remove(((((((((rt1.c0)AND(x'')))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2)), COUNT(*)), (- (0.03217438582367016)) FROM rt1 ORDER BY (((((rt1.c1))<>((rt1.c3))))*((rt1.c0 IN ()))) ASC LIMIT -622792658;SELECT ALL (+ (rt1.c2)) COLLATE RTRIM FROM rt1 WHERE (x'0c57'); -- 0ms;
SELECT DISTINCT CAST(TOTAL(0.01899921476790989) AS NUMERIC), CAST(AVG(rt1.c3) AS NUMERIC), UNICODE(CASE WHEN rt1.c0 THEN rt1.c3 END) FROM rt1 WHERE (CAST(LIKELIHOOD(DISTINCT 'O#nyR', 0.2866712585172322) AS NUMERIC)); -- 0ms;
SELECT DISTINCT NULL FROM rt1; -- 0ms;
SELECT (CAST(rt1.c1 AS INTEGER) IN ()) FROM rt1 WHERE (((((((0.3574548159733668) IS TRUE))AND(((NULL)+('1413650475')))))AND((x'' IN ())))); -- 0ms;
SELECT (NOT (rt1.c2 COLLATE RTRIM)), CASE WHEN CASE rt1.c1  WHEN NULL THEN rt1.c0 END THEN '3xln' END, CASE WHEN HEX(rt1.c3) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (NULL)) WHEN rt1.c2 THEN rt1.c1 WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))) THEN (rt1.c1 IN ()) WHEN ((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)) THEN ((rt1.c4)-(rt1.c1)) WHEN ((rt1.c2) IS TRUE) THEN CAST('GnD孿* ' AS INTEGER) ELSE ROUND(NULL, rt1.c0) END FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((((((((-1.261962244E9, '-741930957', NULL))<((x'', NULL, '1145230512'))))AND('P''#t' COLLATE RTRIM)))AND((('98527278') BETWEEN (x'') AND ('-110287872'))))); -- 1ms;
SELECT MAX(((rt1.c0)>>(rt1.c2))) FROM rt1 GROUP BY LOWER((((rt1.c2, rt1.c3, rt1.c3))!=((rt1.c1, '', rt1.c2)))); -- 0ms;
SELECT LIKELY(((0.5369757180163452) ISNULL)) FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS TEXT)) NOTNULL) FROM rt1 WHERE ((~ ((~ (x''))))); -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1 WHERE ((((((NOT (1682942295)))OR((0.31016423478127897 IN (0.10704736805710113)))))OR(((((((((-1.515029306E9)OR('or')))AND('-0.0')))OR(NULL)))AND(0X75c2eb9e))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( GROUPS  CURRENT ROW) FROM rt1 WHERE (((x'') IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)IS NOT(0.8073681915812277)) AS TEXT) FROM rt1; -- 0ms;
SELECT (rt1.c4 COLLATE NOCASE IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c3 COLLATE NOCASE)&(((rt1.c2)==(rt1.c4)))), ((rt1.c2) IS FALSE), (~ (CASE rt1.c2  WHEN NULL THEN rt1.c1 END)) FROM rt1 WHERE (((((((x'')AND(x'')))OR(NULL)))<((((x''))<>((0.29374450512008643)))))) GROUP BY ((((((rt1.c3)LIKE(rt1.c0)))AND(json_remove('', '-1906241986'))))OR((((rt1.c4))<>((rt1.c0))))), CAST(((rt1.c0) IS TRUE) AS NUMERIC), (((- (x''))) ISNULL); -- 1ms;
SELECT DISTINCT (((NOT (rt1.c4)))<=(CASE WHEN rt1.c1 THEN -1890192731 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)) FROM rt1 WHERE ('-'); -- 0ms;
SELECT ALL rt1.c1 FROM rt1 WHERE ((((((((((((((('-1651966023') ISNULL))OR((((((((('39717601')OR(NULL)))OR('Tbz')))AND(x'')))AND(0.8763250867607537)))))OR(((0.6210091345890757)*('0.6403699658544351')))))AND(((0.7060376168349953)GLOB(NULL)))))AND(0.4057294557151665 COLLATE NOCASE)))OR((0.3229965760783493 IN ()))))OR(((('-1165858782'))==((-3.3816536E8)))))); -- 0ms;
SELECT DISTINCT AVG(0.943191084924624) FROM rt1 WHERE ((((((x''))=((0.6201370195918394)))) ISNULL)) UNION SELECT DISTINCT ((((rt1.c0 IN (rt1.c1))))!=((((((rt1.c3)OR(rt1.c1)))AND(rt1.c4))))) FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c3) ISNULL)) FROM rt1 WHERE (NULL); -- 0ms;
SELECT ALL (NULL IN ()), CASE rt1.c3 COLLATE BINARY  WHEN CAST('1991674706' AS REAL) THEN rt1.c0 WHEN MIN(rt1.c0) THEN (((rt1.c1))==((rt1.c1))) WHEN (- (rt1.c0)) THEN ((rt1.c4) IS FALSE) ELSE x'17e3' END, ((((((((UPPER(rt1.c3))OR((((x'', rt1.c4, rt1.c2, rt1.c0, rt1.c1)) BETWEEN ((rt1.c3, rt1.c3, rt1.c0, rt1.c2, rt1.c2)) AND ((rt1.c3, rt1.c4, rt1.c3, rt1.c0, rt1.c4))))))AND(ABS(rt1.c2))))AND(rt1.c2)))AND(((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))) FROM rt1 UNION SELECT DISTINCT (((AVG(rt1.c2), rt1.c3, (rt1.c0 IN ())))<=((rt1.c0, ((rt1.c4) NOT BETWEEN ('') AND (rt1.c0)), CAST(rt1.c3 AS NUMERIC)))), CASE WHEN (((rt1.c3))<=((rt1.c4))) THEN (- (rt1.c3)) END, CASE WHEN (((rt1.c4, rt1.c4, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c4)) AND ((rt1.c2, rt1.c4, rt1.c0))) THEN (((rt1.c0))>((rt1.c2))) WHEN (rt1.c3 IN ()) THEN rt1.c1 WHEN (- (rt1.c2)) THEN (rt1.c2 IN ()) END FROM rt1 WHERE (0Xffffffff89098bcc) ORDER BY (((NULL)) NOT BETWEEN ((TRIM(DISTINCT rt1.c1))) AND (((((rt1.c1, rt1.c0, rt1.c2))=((rt1.c3, rt1.c1, rt1.c1))))))  NULLS LAST, rt1.c3  NULLS FIRST LIMIT 759210754;SELECT ALL CAST(((('1745336988'))>=((rt1.c3))) AS BLOB), CAST(GROUP_CONCAT(0.2293095253204379) AS TEXT), ((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c1))) NOT BETWEEN (((rt1.c3)+(rt1.c0))) AND ((~ (rt1.c3)))) FROM rt1; -- 1ms;
SELECT DISTINCT COUNT(((rt1.c3)IS(rt1.c3))), ((rt1.c2 COLLATE NOCASE)%(NULLIF(rt1.c2, ''))), (((rt1.c3 IN (rt1.c1))) NOT BETWEEN ((- (rt1.c0))) AND (CASE WHEN rt1.c1 THEN rt1.c4 END)) FROM rt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) THEN rt1.c2 COLLATE BINARY ELSE ((((rt1.c2)OR(rt1.c0)))AND(x'')) END FROM rt1 ORDER BY (((((rt1.c0, rt1.c2, rt1.c4, rt1.c0, rt1.c3)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3, rt1.c3, rt1.c3)) AND ((rt1.c3, rt1.c0, rt1.c0, rt1.c2, rt1.c0))))>=(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3))))  NULLS LAST, CASE (NOT (rt1.c4))  WHEN ((rt1.c4) NOTNULL) THEN (- (rt1.c4)) END; -- 0ms;
SELECT DISTINCT ((rt1.c1) ISNULL) COLLATE NOCASE FROM rt1 WHERE (NULL); -- 0ms;
SELECT (+ (MAX(rt1.c1))), '', (((- (rt1.c2)))GLOB(UPPER(DISTINCT rt1.c0))) FROM rt1 WHERE (CASE LIKELIHOOD('1752979304', 0.9014749698892014)  WHEN x'e548a39a' COLLATE RTRIM THEN ((0.5005781514517089) NOT BETWEEN ('1026887389') AND ('-1830025022')) WHEN CAST(-1198587877 AS NUMERIC) THEN (((-1844828757, 'tb', x''))=((0.45804875216641694, NULL, NULL))) WHEN (~ (NULL)) THEN ((('', '.\r/K', NULL)) NOT BETWEEN (('-980770054', -1.778923476E9, '-0#StQ5WW')) AND ((0.26918204492018727, -1207384149, '908975238'))) ELSE ((0.674201420813768) BETWEEN (0.6946526602799947) AND (-5.49149255E8)) END) LIMIT -616750241 OFFSET -1311814098; -- 0ms;
SELECT ALL CASE rt1.c1 COLLATE RTRIM  WHEN 1e500 THEN ((rt1.c0)OR(rt1.c3)) WHEN (+ (rt1.c2)) THEN (rt1.c0 IN ()) WHEN ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c1)) THEN (~ (rt1.c4)) ELSE json_object('', rt1.c4) END FROM rt1 WHERE (CAST((((449981296))<>((0.30898107071010983))) AS TEXT)); -- 1ms;
SELECT NTH_VALUE('-364328534', 0.928312010271142) OVER (), TOTAL(((((rt1.c0)AND(rt1.c4)))AND(rt1.c4))) OVER ( ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)) THEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c0 END ELSE ((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c2)) END), ((NULL) IS FALSE) FROM rt1;SELECT ALL (NOT (CAST(rt1.c3 AS INTEGER))) FROM rt1; -- 0ms;
SELECT DISTINCT UPPER(CAST(rt1.c2 AS TEXT)), UPPER(rt1.c3 COLLATE BINARY), ((MAX(rt1.c0))OR((NOT (rt1.c4)))) FROM rt1; -- 0ms;
SELECT LAST_VALUE(CAST(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c4 END AS NUMERIC)) OVER (), (x'' IN ()), ((((((rt1.c0)GLOB(rt1.c3)))AND((+ (rt1.c3)))))OR((+ (rt1.c3)))) FROM rt1; -- 0ms;
SELECT DISTINCT (((- (rt1.c4))) BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c3)))) AND (TOTAL(rt1.c2))), ((((((((CASE NULL  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c2 END)OR(((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))))AND(((((((((((((rt1.c4)OR(rt1.c2)))OR('0')))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c1)))OR(rt1.c2)))))OR(CAST(rt1.c1 AS TEXT))))AND(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c3)))), ((((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END)OR(((rt1.c3) IS TRUE))))AND(CASE rt1.c0  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c1 END)) FROM rt1 WHERE (((((1.055068647E9)>=(x''))) ISNULL)); -- 1ms;
SELECT ALL CASE CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c1 END  WHEN rt1.c3 THEN LIKELY(DISTINCT rt1.c2) WHEN ((rt1.c0)+('0dH覆i⯃')) THEN ((NULL)||(rt1.c1)) WHEN (((0xb79efa))<((x'62f1'))) THEN ((rt1.c1)<<(rt1.c0)) END FROM rt1 WHERE (((((((((CAST(NULL AS INTEGER))OR(CAST(1308975104 AS INTEGER))))OR(NULL COLLATE RTRIM)))AND((('1553235619')<=('Y''I<VQJ9')))))OR(CAST('1836341130' AS INTEGER)))); -- 0ms;
SELECT DISTINCT IFNULL(CASE rt1.c0  WHEN NULL THEN rt1.c3 END, CASE rt1.c1  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END), AVG(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c4)) COLLATE RTRIM), LAG(CASE (- (rt1.c3))  WHEN (rt1.c4 IN ()) THEN LENGTH(rt1.c0) ELSE ((((NULL)AND(rt1.c0)))OR(rt1.c4)) END, ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))AND(rt1.c4 COLLATE RTRIM)))OR(((rt1.c0) IS TRUE))), ((LIKELIHOOD(DISTINCT rt1.c4, 0.8589338596028363))<=(((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4))))) OVER () FROM rt1 WHERE ((('-334666313' COLLATE RTRIM)<<(ABS('')))); -- 0ms;
SELECT DISTINCT GLOB(CAST(rt1.c1 AS BLOB), (NOT (rt1.c1))) FROM rt1; -- 0ms;
SELECT DISTINCT LIKELY(rt1.c1) COLLATE BINARY FROM rt1 WHERE ((0.5640351101731376 COLLATE NOCASE IN ())); -- 0ms;
SELECT ALL ((rt1.c2) NOTNULL) FROM rt1; -- 0ms;
SELECT ALL SUM(rt1.c2) FROM rt1 GROUP BY (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))) NOT NULL), (NOT (CASE rt1.c2  WHEN x'' THEN rt1.c0 END)), (CAST(rt1.c2 AS BLOB) IN (rt1.c2)) HAVING CASE CAST(rt1.c3 AS NUMERIC)  WHEN ABS(DISTINCT rt1.c3) THEN rt1.c3 WHEN ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c2)) THEN rt1.c1 COLLATE NOCASE WHEN (+ ('370319803')) THEN (rt1.c2 IN (rt1.c4)) ELSE CASE WHEN rt1.c1 THEN rt1.c4 END END ORDER BY ((((rt1.c4))<>((rt1.c4))) IN (NULL))  NULLS FIRST, ((COALESCE(DISTINCT rt1.c1, rt1.c1))*(((((rt1.c4)AND(rt1.c2)))OR(rt1.c4)))); -- 0ms;
SELECT (((rt1.c3, rt1.c4, rt1.c1)) BETWEEN ((CAST(rt1.c4 AS BLOB), rt1.c0 COLLATE BINARY, ((rt1.c4)>(rt1.c1)))) AND ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)), rt1.c2))) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c2) BETWEEN (NULL) AND (rt1.c3))) BETWEEN ('iq0Y[,|x') AND ((rt1.c0 IN (rt1.c1, rt1.c2)))) FROM rt1 WHERE (((CAST(x'' AS NUMERIC))<=('[7OM' COLLATE RTRIM))) ORDER BY UPPER(rt1.c2) COLLATE NOCASE ASC; -- 0ms;
SELECT ALL CAST(rt1.c4 COLLATE NOCASE AS NUMERIC) FROM rt1 WHERE (((((CAST(x'' AS NUMERIC))OR((x'' IN ()))))AND(0.11795690943557313 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((rt1.c0)+(rt1.c0)))/(((rt1.c2) IS TRUE))), ((+ (rt1.c3)) IN ()), ((ABS(DISTINCT rt1.c2))%(UNLIKELY(rt1.c2))) FROM rt1 WHERE (((('VJŅ'))<=((CASE x'445f'  WHEN 0.055783922207460535 THEN x'' WHEN x'' THEN '-768811985' WHEN x'' THEN x'' ELSE x'' END)))); -- 0ms;
SELECT ALL ((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c4)))OR(rt1.c1)) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT json_array_length(((rt1.c3)<(rt1.c3)), ((rt1.c4)>=(rt1.c3))), json_object((rt1.c3 IN ()), TOTAL(rt1.c3)), ((((1.367213189E9)AND((rt1.c2 IN ()))))AND(0.8028077055367683)), PERCENT_RANK() OVER (), COALESCE(DISTINCT (rt1.c2 IN ()), rt1.c4) FROM rt1 GROUP BY ((((rt1.c2))<=((rt1.c1))) IN (CAST(rt1.c3 AS REAL), ((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c3))));SELECT ALL (rt1.c3 COLLATE BINARY IN ()), ((((rt1.c4) NOT BETWEEN (rt1.c0) AND (x''))) NOTNULL), (rt1.c3 IN ()) FROM rt1 WHERE (CAST((('') NOTNULL) AS INTEGER)); -- 1ms;
SELECT ALL CAST(-1.297357136E9 AS TEXT) FROM rt1 WHERE (CAST(json_type(-1637156919) AS REAL)); -- 0ms;
SELECT ((rt1.c0) NOT NULL) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT (~ (((x'')>>(rt1.c0)))), CUME_DIST() OVER (), rt1.c3, FIRST_VALUE(((rt1.c1) IS FALSE)) OVER (), ((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c4 END)-(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 END)) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((0.18460533444117855 IN (((x'c573')<=(NULL)), (((0X78cfd725, '-1906241986', NULL, '0.6403699658544351', -2.61449399E8))>=((0.5183478930261208, 0.18447783457096223, '\nZau', x'', x'e5de')))))) LIMIT -18880985 OFFSET 1239833930; -- 0ms;
SELECT ABS(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN x'' ELSE rt1.c2 END) FROM rt1 WHERE (MIN(x'57fe', '-2067054436') COLLATE BINARY) GROUP BY (((x''))<=((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0))))) HAVING CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC); -- 0ms;
SELECT ALL ((CASE rt1.c3  WHEN rt1.c0 THEN x'' END) NOT BETWEEN ((x'' IN ())) AND (rt1.c1)) FROM rt1 WHERE ((((+ ('-393798469'))) BETWEEN (((NULL)-(NULL))) AND (CASE 0X6a5daae  WHEN 0.6067525978429231 THEN NULL ELSE 77802207 END))); -- 0ms;
SELECT DISTINCT TOTAL('TzHc9z8') FROM rt1 GROUP BY rt1.c4 HAVING CAST(CAST(rt1.c3 AS REAL) AS INTEGER); -- 1ms;
SELECT DISTINCT CASE WHEN ((rt1.c0) NOTNULL) THEN rt1.c3 ELSE CAST(rt1.c2 AS INTEGER) END FROM rt1 WHERE (((((GLOB(-1938320724, '0.7083564996903386'))OR(((NULL)|(x'')))))AND(((0xffffffffe5946640)!=('-1015527302'))))); -- 0ms;
SELECT ((((CASE rt1.c2  WHEN NULL THEN rt1.c4 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN '1230230133' WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 END)AND(((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))))AND((((rt1.c1))!=((rt1.c4))))) FROM rt1 WHERE (((CAST('NN' AS TEXT))==(CASE WHEN NULL THEN NULL WHEN '0.9222115038764442' THEN -1099856072 WHEN x'' THEN 121687318 ELSE NULL END))); -- 0ms;
SELECT DISTINCT CAST((~ (rt1.c4)) AS TEXT) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c4)/(((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))) FROM rt1; -- 0ms;
SELECT CAST(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c0)) AS BLOB) FROM rt1 WHERE ((('-1634701209') BETWEEN ((x'fae8' IN ())) AND ((- (x'd73b'))))); -- 0ms;
SELECT DISTINCT (((rt1.c1)+(rt1.c3)) IN (CAST('583958614' AS NUMERIC))), CUME_DIST() OVER (), ((((((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)))AND((- (rt1.c2)))))AND(NULL)))OR(UNLIKELY(rt1.c1))))OR((((rt1.c1))>((rt1.c0))))) FROM rt1 WHERE ((((CASE x'1125'  WHEN x'27c6' THEN 0.5529008179501569 WHEN 379811085 THEN NULL WHEN NULL THEN x'533c' ELSE '[z' END))=((((0Xffffffffdd2e5643)>>(NULL)))))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)=(NULL)) AS REAL), CAST(((x'') BETWEEN (rt1.c1) AND (rt1.c2)) AS REAL), (((((rt1.c1))!=((NULL)))) NOT BETWEEN (TOTAL(rt1.c1)) AND (((rt1.c4)>=(rt1.c0)))) FROM rt1 ORDER BY CAST(x'' AS BLOB)  NULLS FIRST; -- 1ms;
SELECT DISTINCT NULL FROM rt1; -- 0ms;
SELECT ALL LEAD(x'', ((NULLIF(DISTINCT rt1.c1, rt1.c2))<>(('x/Uo4祗->' IN (rt1.c4)))), (((~ (rt1.c4)))*(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))) OVER () FROM rt1 GROUP BY CASE (((rt1.c0, rt1.c4, rt1.c0))<>((rt1.c1, rt1.c0, NULL)))  WHEN '-1293200279' THEN CAST(rt1.c0 AS INTEGER) ELSE STRFTIME(0.4205923372766003, rt1.c3, rt1.c1, rt1.c1, rt1.c4) END, ((((rt1.c0)AND(((rt1.c2)|(rt1.c2)))))AND((((rt1.c1))>((rt1.c4))))), CAST((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND (('726737497'))) AS INTEGER); -- 0ms;
SELECT ((rt1.c4 IN ()) IN ()), (NOT (CASE rt1.c1  WHEN x'3661' THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END)), (((((rt1.c4)LIKE(rt1.c3))))<((((rt1.c2) BETWEEN (rt1.c0) AND ('i!Xᨣ'))))) FROM rt1 WHERE (((NULLIF(DISTINCT '-644205213', 0.17951066774650382))&((((x'', x'', ''))==((x'da14', 0.020537401205199424, NULL)))))); -- 0ms;
SELECT DISTINCT MAX(CAST(rt1.c2 AS BLOB)) FROM rt1; -- 0ms;
SELECT (('cX.멱z灞') IS TRUE) FROM rt1 WHERE ((((NULL, 0.5457509982514452, x'')) NOT BETWEEN ((0.6508744486400553, '1480706876', x'')) AND ((0.46923381119438445, '-930729824', x''))) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((MAX(rt1.c3)) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (rt1.c0)) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN AVG(rt1.c4) THEN CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c2 END WHEN ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c2)) THEN (rt1.c0 IN ()) WHEN (~ (rt1.c1)) THEN (('a*') BETWEEN (rt1.c2) AND (rt1.c3)) END, ((((rt1.c0)==(rt1.c4)))*(CASE WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END)), ((CASE rt1.c4  WHEN 'FALSE' THEN rt1.c4 END)/(CAST(rt1.c4 AS NUMERIC))) FROM rt1 WHERE ((((((((((((((((('1978970886')AND(NULL)))AND(x'')))AND(x'')))OR(0.9768406491234982)))OR(((x'')>('-1371249654')))))AND(CASE WHEN x'' THEN 0Xffffffffb3deb19a ELSE 0.009657131511378148 END)))OR(NULL)))AND(NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((((((((((((rt1.c1)%(rt1.c2)))OR(0.6721186943863309 COLLATE RTRIM)))AND((- (rt1.c1)))))AND('')))AND(((((rt1.c4)OR('1927178416')))OR(rt1.c3)))))OR((((rt1.c2))=((rt1.c4))))))AND(((((rt1.c1)AND(rt1.c3)))AND(x'')))), (- (rt1.c0)) COLLATE NOCASE COLLATE NOCASE, COUNT(*) OVER () FROM rt1 WHERE (CASE CAST(x'8dd4e45c' AS INTEGER)  WHEN (NULL IN ()) THEN CAST(0.3614711873051235 AS REAL) END) LIMIT -1778923476 OFFSET -1890192731; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN '-1730746015' THEN rt1.c1 ELSE rt1.c1 END COLLATE BINARY, rt1.c4, ((((rt1.c3)-(rt1.c2))) NOTNULL) FROM rt1 WHERE (((((((((((-752842437)OR(NULL)))AND(x'')))AND(x'')))OR(0.10948436686509899))) ISNULL)); -- 0ms;
SELECT RANK() OVER () FROM rt1; -- 0ms;
SELECT 0.9456485634362218 FROM rt1 WHERE (((SQLITE_COMPILEOPTION_GET(NULL))>>(((0.256713212214863)LIKE('-2122247756'))))) ORDER BY 0.17614372238132459 DESC; -- 1ms;
SELECT ALL rt1.c1 FROM rt1 LIMIT -1626468203 OFFSET 1899919902; -- 0ms;
SELECT ALL rt1.c3, (('1494008497')IS(((rt1.c1)LIKE(rt1.c1)))), (rt1.c2 IN (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN '860628859' END)) FROM rt1 WHERE (((((0.8120112754548938)<=(0.16794782094666816)))>((('vY+P')<(''))))); -- 0ms;
SELECT ALL CAST((~ (rt1.c2)) AS NUMERIC), ((CAST(rt1.c4 AS NUMERIC)) ISNULL), ((((rt1.c1)&(x''))) IS TRUE) FROM rt1; -- 0ms;
SELECT DISTINCT ((0.8254239518141414) NOT NULL), TOTAL(rt1.c0) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), (((rt1.c2)) NOT BETWEEN ((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END)) AND (((((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) FROM rt1; -- 0ms;
SELECT ALL CAST((- (rt1.c1)) AS TEXT) FROM rt1 WHERE ((((x'')) BETWEEN ((((((NULL)AND(x'')))OR('39717601')))) AND ((NULLIF(0.9326054502120249, -453677538))))); -- 0ms;
SELECT ALL (((((((((((((rt1.c1 IN ()))AND((~ (rt1.c1)))))AND(rt1.c4 COLLATE NOCASE)))AND(((rt1.c0) NOTNULL))))AND(CASE WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c2 END)))AND(((rt1.c2)IS(rt1.c3)))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))) FROM rt1; -- 0ms;
SELECT ALL CAST(rt1.c2 AS REAL) FROM rt1 WHERE ((~ (TRIM(x'', NULL)))); -- 0ms;
SELECT DISTINCT DATETIME(rt1.c2, CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 END, (NOT ('-771899191')), ((rt1.c2) IS FALSE), CAST(rt1.c4 AS NUMERIC)), (rt1.c0 IN ('1860088741')) COLLATE NOCASE, (((-1.830025022E9 IN ())) NOT BETWEEN ((rt1.c3 IN ())) AND (((((rt1.c1)OR(rt1.c4)))AND(rt1.c0)))) FROM rt1 WHERE (((CASE WHEN x'' THEN '0.5005781514517089' ELSE NULL END) NOT NULL)); -- 0ms;
SELECT UPPER(((rt1.c1) NOT BETWEEN (0.7710893761242722) AND (0.6847137466782269))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c3)||(rt1.c4)))OR(-2.051872946E9)))OR(((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))) FROM rt1 ORDER BY CAST((rt1.c3 IN ()) AS INTEGER) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((0.05628543745802839) ISNULL) FROM rt1 WHERE (CAST('-27238738' AS NUMERIC)) ORDER BY NULL; -- 0ms;
SELECT DISTINCT ((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)) COLLATE RTRIM, x'0264', INSTR(((rt1.c3)GLOB(rt1.c3)), (~ (rt1.c4))) FROM rt1; -- 2ms;
SELECT ((((rt1.c4)!=(rt1.c1))) NOT BETWEEN (((((x'')OR(rt1.c1)))AND(rt1.c3))) AND ((NOT ('-804195521')))) FROM rt1 WHERE (LIKELY(((0.0699715295718013) ISNULL))); -- 0ms;
SELECT ALL ((rt1.c2) NOTNULL) COLLATE NOCASE, CAST(((rt1.c3)!=(rt1.c1)) AS INTEGER), ((rt1.c4)+(COUNT(rt1.c0))) FROM rt1 GROUP BY ((SQLITE_VERSION()) NOT BETWEEN ((((rt1.c1))=((rt1.c3)))) AND (CAST(rt1.c1 AS REAL))); -- 0ms;
SELECT DISTINCT (CAST(rt1.c1 AS NUMERIC) IN ()), (NOT (((((rt1.c1)AND(rt1.c1)))AND(rt1.c4)))), CASE WHEN (((rt1.c4))<>((rt1.c4))) THEN ((((((((rt1.c4)AND(rt1.c0)))AND(0xffffffffe322d182)))AND(rt1.c0)))OR(rt1.c0)) WHEN CASE NULL  WHEN rt1.c0 THEN rt1.c0 WHEN 0.4057294557151665 THEN x'c68c' WHEN rt1.c1 THEN rt1.c4 END THEN CAST(rt1.c4 AS NUMERIC) WHEN ((((rt1.c4)OR(x'')))OR(rt1.c1)) THEN (('')<=(rt1.c3)) ELSE ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)) END FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c3) NOTNULL)) NOTNULL) FROM rt1; -- 0ms;
SELECT ALL (((('-1819937867')OR(((((0.26808139806168296)OR(rt1.c1)))AND(rt1.c3)))))OR(AVG(rt1.c3))) FROM rt1 WHERE (((((x'5c92' COLLATE RTRIM)AND((NOT ('0.16004263324922285')))))AND(((('R赭<_,'))<=(('')))))) ORDER BY ((((rt1.c2) NOTNULL)) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT MIN(rt1.c4, ('0.5458952095813421' IN ()), SUM(rt1.c0), (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE ((rt1.c2) ISNULL)  WHEN rt1.c2 THEN rt1.c2 END FROM rt1; -- 0ms;
SELECT DISTINCT x'', CASE WHEN rt1.c3 THEN 1691815449 ELSE rt1.c0 END COLLATE BINARY, ((((((((rt1.c0)OR((rt1.c0 IN ()))))OR(CAST(rt1.c2 AS INTEGER))))OR('-653404944')))OR((((rt1.c3))==((rt1.c1))))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c0))) NOTNULL) FROM rt1; -- 0ms;
SELECT DISTINCT SUM(rt1.c3), ((((x'')OR((rt1.c2 IN ()))))OR(MIN(rt1.c1))), COUNT(TRIM(rt1.c1, rt1.c1)) OVER () FROM rt1 WHERE ((((x'')) BETWEEN ((0.9179037874644952)) AND ((NULL)))); -- 0ms;
SELECT (NOT (2053633452)) FROM rt1 ORDER BY ((rt1.c0) BETWEEN (NULL) AND (rt1.c1)) COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT ('I !' IN ()) FROM rt1; -- 0ms;
SELECT ALL ((rt1.c0)||(((rt1.c2)==(rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT TOTAL(rtreenode(rt1.c0, rt1.c4)) OVER (), ((((((rt1.c3)*(rt1.c1)))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))))OR(((rt1.c4) ISNULL))), RANK() OVER (), (((rt1.c0)) NOT BETWEEN (((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c2))))) AND ((rt1.c0))), SUM(CAST(rt1.c0 AS BLOB)) FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(NULL) OVER (), (((MAX(rt1.c3)))<((((rt1.c3)OR(1.367213189E9))))), COUNT((- (rt1.c0))) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c3 END) FILTER(WHERE TRIM((rt1.c1 IN ()))) OVER () FROM rt1; -- 0ms;
SELECT ALL (((((((((((((((rt1.c1)) BETWEEN ((0.5365009683114933)) AND ((rt1.c0))))AND(((rt1.c4) NOTNULL))))OR(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE '7' END)))OR(((rt1.c2) ISNULL))))AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)))))AND(TYPEOF(rt1.c0))))AND(TIME(rt1.c3, '?', 0.7624538539958982))) FROM rt1; -- 0ms;
SELECT ALL (((NOT (rt1.c2))) BETWEEN (CASE WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c2 END) AND ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))), (rt1.c0 IN ()), (((rt1.c4, 1566806582, rt1.c1)) BETWEEN ((rt1.c3, ((rt1.c3) NOT BETWEEN (rt1.c1) AND (x'ab46')), ((((rt1.c2)OR(rt1.c4)))OR(rt1.c3)))) AND ((MAX(rt1.c4), ((rt1.c1)-(rt1.c3)), (((rt1.c0, rt1.c3, x'')) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c1)) AND ((rt1.c4, rt1.c1, rt1.c1)))))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c2)AND(rt1.c0)))AND(NULL)))&(GROUP_CONCAT(rt1.c2))) FROM rt1; -- 0ms;
SELECT ALL (- (((rt1.c2)%(0Xffffffff8f55f2a5)))), ((rt1.c4) BETWEEN (CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END) AND (((rt1.c0)%(rt1.c1)))), x'' FROM rt1 WHERE ((~ (json_valid(NULL)))); -- 0ms;
SELECT DISTINCT CASE CASE rt1.c4  WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 END  WHEN CAST(rt1.c4 AS REAL) THEN CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c4 END WHEN ((rt1.c0) IS FALSE) THEN (- (rt1.c2)) WHEN UNICODE(rt1.c0) THEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END END FROM rt1 WHERE ((+ (0.21982973518040483 COLLATE RTRIM))); -- 0ms;
SELECT ALL (((rt1.c3)) NOT BETWEEN ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))) AND ((UNLIKELY(rt1.c3)))) FROM rt1 WHERE ((((((((2131059876)AND(0Xfffffffff1f32a3b)))OR('-980770054')), DATE(NULL, x'', x'', x'', NULL), CAST('-1328121111' AS REAL)))<=((((758983479)<>('bZorrL')), (x'' IN ()), ((0X5dae5b07)OR(NULL)))))) ORDER BY CAST((NOT (rt1.c1)) AS TEXT) DESC  NULLS LAST; -- 0ms;
SELECT COUNT(*), CAST(SUBSTR(rt1.c4, rt1.c4) AS INTEGER), (((rt1.c1 IN ()))|(((rt1.c4) ISNULL))) FROM rt1 WHERE ((((CAST('' AS NUMERIC)))>=((highlight('4\', NULL, x'', 1670178098)))));SELECT DISTINCT ((rt1.c3) NOTNULL) FROM rt1 WHERE (((((((NULL)<=('1320655841')))OR((('Hf') IS FALSE))))OR(('' IN (0Xffffffff81c33d14))))); -- 0ms;
SELECT ALL json(((rt1.c3)>>(rt1.c0))) FROM rt1 WHERE (((CASE 0.19587514055311017  WHEN NULL THEN NULL WHEN x'' THEN x'' WHEN '1054622342' THEN 'R[i]' ELSE '' END) BETWEEN (((x'') NOT BETWEEN ('1rೠ') AND ('0.4093205452153216'))) AND (((x'')||(NULL))))); -- 0ms;
SELECT DISTINCT ((rt1.c2)+(rt1.c4)) COLLATE RTRIM FROM rt1 GROUP BY CAST((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) AS INTEGER); -- 0ms;
SELECT DISTINCT LEAD((0.3460167021876609 COLLATE BINARY IN (0.4153406170615991, (rt1.c3 IN ()))), ((rt1.c3 COLLATE BINARY) NOT BETWEEN (((rt1.c4)IS(rt1.c1))) AND ((rt1.c4 IN ()))), ((((LIKELIHOOD(x'', 0.7470693579957642))AND(((rt1.c3) IS TRUE))))AND((~ (rt1.c0))))) OVER () FROM rt1; -- 0ms;
SELECT TRIM(rt1.c3) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS INTEGER)) BETWEEN (rt1.c2 COLLATE NOCASE) AND (rt1.c1)), rt1.c0, NTILE((~ (rt1.c4)) COLLATE RTRIM) OVER () FROM rt1 WHERE ((((((NULL))<=(('49578813')))) NOT BETWEEN (((0.43064107999890977)LIKE(x''))) AND (CASE WHEN '1700302797' THEN NULL WHEN x'' THEN 0.4490588308179766 WHEN x'' THEN NULL END))); -- 0ms;
SELECT DISTINCT ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c4 END) NOT BETWEEN (rt1.c4 COLLATE RTRIM) AND ('!&77')), GROUP_CONCAT(rt1.c2) OVER (), ((rt1.c0 COLLATE BINARY) NOT BETWEEN (ABS(DISTINCT rt1.c4)) AND (COUNT(*))) FROM rt1 WHERE (CAST((('') NOTNULL) AS REAL)); -- 0ms;
SELECT DISTINCT (((rt1.c4)) BETWEEN ((CASE rt1.c4  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 END)) AND ((((((rt1.c2)AND(rt1.c3)))AND(rt1.c3))))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c4 IN (rt1.c3, rt1.c3))) IS FALSE) FROM rt1 ORDER BY NULL; -- 1ms;
SELECT DISTINCT ((((((((rt1.c0)AND(rt1.c2)))OR('1745336988')))OR(rt1.c0)))OR(NULL)) COLLATE NOCASE FROM rt1 WHERE (((0.2754173981742567) BETWEEN (CAST(NULL AS TEXT)) AND ('-578916312'))); -- 0ms;
SELECT ALL (+ (((rt1.c0)!=(rt1.c4)))), (((~ (rt1.c1)))=((+ (rt1.c0)))), rt1.c3 FROM rt1 GROUP BY ((((((rt1.c2)<('*^')))OR(((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))))OR((rt1.c2 IN ()))); -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1; -- 0ms;
SELECT DISTINCT json_array_length(((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)), (rt1.c0 IN ())) FROM rt1 WHERE (((ABS(NULL))!=((((((((('2f>')AND('1597302807')))OR(0.8257632165243506)))AND(NULL)))AND(NULL))))) GROUP BY json_remove((rt1.c0 IN ()), rt1.c0 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE (((((0.8849109811129598)>>(0.6758283887868617))) IS TRUE)); -- 0ms;
SELECT ALL ((((rt1.c0) NOT NULL)) ISNULL), ((rt1.c2)<(rt1.c1)) COLLATE RTRIM, NULL FROM rt1 WHERE (CAST(0.6014653925693039 AS NUMERIC)); -- 0ms;
SELECT DISTINCT (+ (CAST(rt1.c4 AS INTEGER))) FROM rt1 WHERE (((((NULL)>=(-1463415334))) NOTNULL)); -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt1.c4 THEN rt1.c4 END)), CASE ((rt1.c4)==(rt1.c4))  WHEN ((NULL) NOTNULL) THEN rt1.c3 COLLATE BINARY END, rt1.c0 FROM rt1 WHERE (TRIM(((0X421c5fb3) ISNULL))); -- 0ms;
SELECT DENSE_RANK() OVER ( ROWS  UNBOUNDED PRECEDING) FROM rt1; -- 0ms;
SELECT ALL NULL FROM rt1 WHERE (((x'')IS((0.45464131856398615 IN ())))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((NULL))<=((rt1.c0)))) OVER ( ORDER BY rt1.c2 DESC  NULLS LAST, CAST(((rt1.c4)*(rt1.c0)) AS REAL) DESC RANGE BETWEEN ((CAST(rt1.c0 AS INTEGER))!=(CAST(rt1.c3 AS INTEGER))) PRECEDING AND ((((rt1.c4)LIKE(rt1.c2)))+(rt1.c0)) PRECEDING EXCLUDE NO OTHERS), (('-487817542' COLLATE RTRIM)-(GROUP_CONCAT(rt1.c2))), ((((TYPEOF(rt1.c0))OR((((rt1.c0))>=((rt1.c0))))))AND(((rt1.c4)!=(rt1.c0)))) FROM rt1 WHERE (((((x'') BETWEEN (NULL) AND (0X51e09a4a))) IS FALSE)) LIMIT -372398237 OFFSET -2062323444;SELECT DISTINCT 0.1475398692700438 FROM rt1 WHERE (CASE NULL COLLATE RTRIM  WHEN NULL COLLATE RTRIM THEN ((0.3764932712101856)OR(0.7169292906517875)) ELSE ((((0.5358000372782195)AND(0.019659855491934608)))OR(x'8b32')) END); -- 0ms;
SELECT rt1.c1 FROM rt1 ORDER BY (((NOT (rt1.c3)))>=(((rt1.c2)>(rt1.c2)))) ASC  NULLS FIRST; -- 0ms;
SELECT CASE ((((rt1.c2)AND('y8')))OR(rt1.c0))  WHEN rt1.c3 COLLATE RTRIM THEN ((rt1.c4)/(rt1.c3)) WHEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (- (NULL)) WHEN ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4)) THEN CAST(rt1.c2 AS REAL) ELSE ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)) END, ((rt1.c4 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt1.c0 THEN '549894094' ELSE rt1.c3 END) AND (ABS(rt1.c3))), (((+ (rt1.c2))) IS FALSE), CAST(rt1.c4 AS INTEGER), ((rt1.c3 COLLATE NOCASE)&(((rt1.c1)<<(rt1.c0)))) FROM rt1 WHERE (0.19480512065595612) ORDER BY (NOT (CASE WHEN '&zz' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 END)); -- 0ms;
SELECT ((rt1.c2)+(rt1.c0)) COLLATE RTRIM FROM rt1 WHERE (CAST(NULL AS TEXT)); -- 0ms;
SELECT ((TOTAL(rt1.c3))>(rt1.c3 COLLATE RTRIM)), ROW_NUMBER() OVER (), ((NULL) NOT NULL) COLLATE NOCASE FROM rt1 WHERE ((CAST(x'b779' AS REAL) IN ())); -- 0ms;
SELECT ALL GROUP_CONCAT((rt1.c1 IN (rt1.c4))), CASE WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END THEN MAX(rt1.c4) ELSE (- (rt1.c4)) END, NTH_VALUE((((((rt1.c3 IN ()))OR((rt1.c1 IN ()))))AND(CASE rt1.c2  WHEN rt1.c4 THEN rt1.c4 END)), ((((((((rt1.c2)AND(rt1.c4)))AND(rt1.c3)))OR(((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c3)))OR(rt1.c4)))))AND(-2.051872946E9))) OVER () FROM rt1 GROUP BY ((((((rt1.c2)AND(rt1.c4)))AND('wkodzf&mt')))%(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END));SELECT ALL LAG(((CASE rt1.c1  WHEN x'2ce9' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c3 END)<<(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)), (+ (load_extension(rt1.c0, rt1.c2))), (NOT (((rt1.c4) NOTNULL)))) OVER ( ROWS CAST(rt1.c2 AS TEXT) PRECEDING), (rt1.c0 COLLATE RTRIM IN ()), CASE '1697761745'  WHEN ((rt1.c1)GLOB(rt1.c3)) THEN (rt1.c0 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (0xffffffff9966be28)) END FROM rt1 WHERE ((~ ((((((((('-1322965156')OR('}X-26v[')))OR(0xffffffff9ddbdc19)))OR(0.18155601573282765)))OR(x'')))));SELECT DISTINCT json_valid(((rt1.c3)>=(rt1.c2))), (((rt1.c3)) NOT BETWEEN (((((rt1.c1))>((rt1.c1))))) AND ((rt1.c1 COLLATE NOCASE))), ((((rt1.c0)>>(rt1.c4)))<(((rt1.c4)<>(rt1.c2)))) FROM rt1 LIMIT 916682132 OFFSET 1879192550; -- 1ms;
SELECT DISTINCT rt1.c3 FROM rt1 WHERE ((((0.7498083111394518) BETWEEN (x'2a31') AND (-741930957)) IN ())) GROUP BY (- (json_array(rt1.c3, rt1.c4))), (((((rt1.c3 IN (rt1.c0, '-549149255')))OR(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))))OR((((rt1.c0))!=((rt1.c3))))), ((((rt1.c2) IS FALSE))<(rt1.c2)) HAVING COUNT(*); -- 0ms;
SELECT ALL COUNT(CASE WHEN rt1.c4 THEN rt1.c4 ELSE x'5ba1' END) OVER () FROM rt1 GROUP BY CAST(rt1.c1 AS REAL) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT LOWER(0.806227449045653) FROM rt1; -- 0ms;
SELECT DISTINCT CASE rt1.c1  WHEN CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END THEN 0.3829168771937751 ELSE (NOT (rt1.c4)) END FROM rt1 WHERE (CAST(((0.7020692931010359)>(NULL)) AS INTEGER)); -- 0ms;
SELECT ALL ((((rt1.c2)/(rt1.c3)))-((((rt1.c1))<((rt1.c0))))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c4)<=(rt1.c4)) THEN ((rt1.c3) IS FALSE) END FROM rt1 WHERE (CAST(((-1.293200279E9)GLOB('{')) AS INTEGER)); -- 0ms;
SELECT ALL rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c0)==(rt1.c2)))OR(ABS(DISTINCT rt1.c4))))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))), GROUP_CONCAT(((x'')==(rt1.c0))) OVER (), ((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))) IN ()) FROM rt1 WHERE (CASE WHEN 0.04148183138595929 THEN 0.1742958931855101 END COLLATE RTRIM); -- 1ms;
SELECT DISTINCT GLOB(('LgG\EY쐧' IN ()), (- (rt1.c0))) FROM rt1 WHERE (((((CAST(-1.660548394E9 AS INTEGER))OR(('U\' IN (x'')))))OR((('Y顊蠁') NOT BETWEEN ('TVV') AND (-6.16750241E8))))); -- 0ms;
SELECT ALL LTRIM(AVG(rt1.c3), (rt1.c1 IN ())) FROM rt1 WHERE ((((x'' IN (0.11114915973279371, x'')))<<(CASE WHEN x'0f047880' THEN -786110369 ELSE 0.09502452894799596 END))) GROUP BY CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN 0.9262567713791965 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END COLLATE BINARY, CAST(UPPER(rt1.c1) AS REAL), ((((rt1.c1, rt1.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c3, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c1))) IN ()) HAVING IFNULL(((0.18874744262002308)>=(rt1.c2)), ((rt1.c2)==(rt1.c2))); -- 1ms;
SELECT DISTINCT (((rt1.c0 IN ())) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((((''))=((rt1.c3))))) FROM rt1; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT rt1.c1 COLLATE NOCASE, '1445382693') FROM rt1; -- 0ms;
SELECT DISTINCT ((NULL COLLATE BINARY)IS NOT((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)) COLLATE BINARY, ((SUM(rt1.c1))+(((((((((rt1.c4)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))), (NOT (rt1.c0)) FROM rt1; -- 0ms;
SELECT ALL ((((CAST(rt1.c1 AS TEXT))OR(((rt1.c2) IS FALSE))))AND(((rt1.c3)<=(rt1.c2)))) FROM rt1 WHERE ((((0.9424332662375021 IN ())) NOT BETWEEN ((('nt')&('-779266561'))) AND (CAST(-1112578173 AS INTEGER)))); -- 0ms;
SELECT DISTINCT CAST(rt1.c4 COLLATE NOCASE AS BLOB) FROM rt1 WHERE ((((x'6786')) BETWEEN ((NULL COLLATE RTRIM)) AND ((COALESCE(0.6832422415060465, NULL))))) LIMIT -1293200279 OFFSET 1195798252; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((~ (rt1.c4))) FROM rt1; -- 0ms;
SELECT ALL ((AVG(rt1.c3))==((- (rt1.c3)))) FROM rt1; -- 1ms;
SELECT ALL (- ((rt1.c3 IN ()))) FROM rt1 ORDER BY (- (((rt1.c4)!=(rt1.c2)))) DESC, rt1.c1, (('-pG*') IS TRUE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((rt1.c1, rt1.c1, rt1.c2)) BETWEEN ((GROUP_CONCAT(rt1.c2), ((rt1.c4) IS FALSE), (rt1.c4 IN ()))) AND ((CAST(rt1.c0 AS TEXT), ((((rt1.c2)OR(rt1.c4)))AND(rt1.c4)), MAX(rt1.c1)))) FROM rt1 WHERE ((('-397041889' COLLATE RTRIM)=((0.15001946739941385 IN ())))); -- 0ms;
SELECT ALL (rt1.c2 IN ()) FROM rt1 WHERE (((((0.3870898372433874 COLLATE RTRIM)OR(LIKELIHOOD(DISTINCT -5.58874173E8, 0.5061331656488662))))AND(((((0.5994994190831126)AND(0.9820246118622612)))OR(NULL))))) ORDER BY rt1.c4 ASC  NULLS FIRST, (((((rt1.c3))<((rt1.c0)))) ISNULL) ASC; -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((-1015064309) NOTNULL)), (((((rt1.c1)AND(rt1.c4)))AND(rt1.c0)) IN (((rt1.c3) IS TRUE), ((rt1.c2)>(NULL)))), CAST(CASE rt1.c1  WHEN x'' THEN rt1.c1 END AS TEXT) FROM rt1 WHERE (((CASE NULL  WHEN '' THEN x'2191a362' END) NOT NULL)) ORDER BY (((((- (rt1.c3)))OR(((rt1.c1)>(rt1.c4)))))OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))), SUM(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))), CAST(((rt1.c3)>>(rt1.c2)) AS INTEGER) FROM rt1 WHERE (x''); -- 0ms;
SELECT ALL AVG(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END COLLATE BINARY) FROM rt1 WHERE ('') GROUP BY UNLIKELY((- (rt1.c1))), UNLIKELY((rt1.c4 IN ())), CASE WHEN ((rt1.c4) BETWEEN (rt1.c0) AND (1089474825)) THEN rt1.c2 WHEN ((((rt1.c3)AND(rt1.c4)))AND(rt1.c0)) THEN ((rt1.c1)%('-1660548394')) WHEN ((rt1.c4)-(NULL)) THEN ((rt1.c0)AND(rt1.c3)) END HAVING '1643602347'; -- 1ms;
SELECT CASE AVG(rt1.c0)  WHEN 1874541488 THEN ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)) END FROM rt1 WHERE (TRIM(DISTINCT HEX(DISTINCT 'w銬jJ*'''))); -- 0ms;
SELECT CAST(((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)) AS NUMERIC) FROM rt1 WHERE (LIKELY((~ ('')))) ORDER BY (((((((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c2)))AND(NULL)))OR(rt1.c4)))AND(rt1.c1)) IN ()) ASC; -- 0ms;
SELECT DISTINCT CASE NULL COLLATE BINARY  WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4))) THEN rt1.c0 COLLATE BINARY END, (NOT (CASE rt1.c4  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c4 END)), CASE SUM(rt1.c0)  WHEN ((rt1.c0)>(rt1.c1)) THEN (NOT (rt1.c3)) WHEN CAST(rt1.c2 AS INTEGER) THEN CASE NULL  WHEN rt1.c3 THEN rt1.c2 END WHEN (+ (rt1.c1)) THEN ((rt1.c3)OR('*kꊻXiQN')) ELSE (+ (rt1.c1)) END FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ()))/(rt1.c0)) FROM rt1 WHERE ((- ((('469978463')>=('143229621'))))) ORDER BY rt1.c1  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((x'') NOT BETWEEN (rt1.c4) AND (rt1.c3))))>=((((rt1.c0)<=(rt1.c1))))) FROM rt1 ORDER BY NULL DESC  NULLS FIRST, ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c3)||(rt1.c0))) AND (rt1.c2)) ASC  NULLS FIRST, (json_valid(rt1.c0) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE CHANGES()  WHEN ((((rt1.c3)OR(rt1.c3)))OR(rt1.c3)) THEN CASE WHEN rt1.c2 THEN rt1.c2 END ELSE ((rt1.c0)%(x'')) END, ((NULL) NOT BETWEEN (((NULL)IS(rt1.c2))) AND ((rt1.c3 IN (rt1.c3)))), TOTAL('-1994115715') OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND CASE '1837756368'  WHEN ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)) THEN (((rt1.c2, rt1.c1, 0.8396216617511784))==((rt1.c1, rt1.c4, rt1.c4))) ELSE ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c4)) END FOLLOWING EXCLUDE NO OTHERS) FROM rt1;SELECT DISTINCT (((rt1.c4)) BETWEEN ((CAST(x'' AS INTEGER))) AND ((((rt1.c4) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) FROM rt1; -- 1ms;
SELECT DISTINCT CAST(CAST(rt1.c1 AS TEXT) AS REAL) FROM rt1; -- 0ms;
SELECT DISTINCT NULLIF('', (rt1.c0 IN ())), AVG(UNLIKELY('-1323062572')), '-1515029306' FROM rt1 WHERE ((((x'')&(-1908661800)) IN ())); -- 0ms;
SELECT (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND ((((((rt1.c1)AND(rt1.c4)))OR(rt1.c3))))) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c0) NOT NULL) AS NUMERIC), CAST(((rt1.c4) IS TRUE) AS BLOB), (rt1.c2 IN ()) FROM rt1 WHERE (((((-3.93798469E8)OR(((x'') BETWEEN (x'') AND (500164561)))))AND((('-453677538') NOT BETWEEN (-1994115715) AND ('187600715'))))); -- 0ms;
SELECT ALL SUM(((rt1.c3)%(rt1.c1))) OVER ( RANGE BETWEEN rt1.c3 FOLLOWING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM rt1 WHERE (CASE WHEN (('5*U不*\r') IS FALSE) THEN (NOT (NULL)) END);SELECT DISTINCT GROUP_CONCAT(AVG(CASE rt1.c4  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN x'9bd5' WHEN rt1.c2 THEN rt1.c3 END)), CASE WHEN (rt1.c2 IN ()) THEN (rt1.c3 IN ()) END, ((((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 END)OR(((rt1.c0)<>(rt1.c2)))))OR(((((rt1.c4)OR(rt1.c1)))OR(rt1.c4)))) FROM rt1;SELECT DISTINCT (((rt1.c0)) BETWEEN ((((rt1.c3)>=(rt1.c1)))) AND ((((rt1.c4)AND(rt1.c3))))), rt1.c4, 0.24633985695767957 FROM rt1; -- 0ms;
SELECT ALL NULL FROM rt1; -- 0ms;
SELECT DISTINCT -4.43259328E8 FROM rt1 UNION ALL SELECT DISTINCT (+ (MAX(rt1.c2))) FROM rt1; -- 0ms;
SELECT ALL (((((rt1.c0, rt1.c1, rt1.c0))>((rt1.c4, rt1.c4, rt1.c4)))) BETWEEN (CASE '-152025407'  WHEN 0xffffffffcc2725a8 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN 0.9679207694029107 ELSE rt1.c1 END) AND (((rt1.c2)%(rt1.c0)))) FROM rt1 WHERE (((((((((NULL)OR('f∎')))AND(-3.02570994E8)))AND(((-2.051872946E9)IS(NULL)))))OR(((((0.25021122478875735)OR(NULL)))AND(x'ea2e'))))) GROUP BY ((((rt1.c3)AND(rt1.c3)))OR((('-1042819349')IS(rt1.c0)))); -- 0ms;
SELECT '' FROM rt1 ORDER BY ((((((((CAST(NULL AS TEXT))AND(((NULL)GLOB(rt1.c0)))))OR(((0.6862936330447778) NOT BETWEEN (rt1.c2) AND (rt1.c2)))))AND((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))))AND(x'f049cf86' COLLATE RTRIM)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((rt1.c0 IN ()))AND(((rt1.c3) IS TRUE))))OR(rt1.c0)) FROM rt1 WHERE (((((((NULL)AND('1723308144')))OR(''))) NOT BETWEEN ((((((((('-980770054')AND(0.2028534866832885)))OR(x'c47a')))AND(x'')))AND(''))) AND ((('')+(0X5442982b))))); -- 0ms;
SELECT DISTINCT (((- (rt1.c0))) BETWEEN (LOWER(rt1.c1)) AND (((rt1.c3) NOT NULL))), ((rt1.c1) BETWEEN (((0.039660683030366406)<(rt1.c4))) AND ((+ (rt1.c0)))), (((((rt1.c0)IS NOT(rt1.c3))))=((CAST(rt1.c1 AS NUMERIC)))) FROM rt1 ORDER BY (((rt1.c3 IN ()))<<((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))))  NULLS LAST, ((COALESCE(rt1.c2, rt1.c0, rt1.c4, NULL))-(((rt1.c1) IS FALSE)))  NULLS FIRST, CAST((((rt1.c2))<((rt1.c4))) AS TEXT) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT (SUM(rt1.c3))) FROM rt1 WHERE ((x'' IN (0.26090144709107355, NULL)) COLLATE NOCASE) LIMIT -1401135598; -- 1ms;
SELECT DISTINCT ((rt1.c2)*(rt1.c2)) COLLATE BINARY FROM rt1; -- 0ms;
SELECT ALL (+ ((- ('-191390454')))) FROM rt1 WHERE ((((- ('916669411')))>=(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((((((4.55161881E8)OR((rt1.c2 IN ()))))OR(CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)))OR(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)))))OR(((rt1.c3)*(rt1.c0)))), ((((((((MAX(rt1.c4))OR(rt1.c0 COLLATE NOCASE)))OR(SUM(rt1.c4))))AND(((((((((((((x'')OR(rt1.c1)))AND(rt1.c3)))OR(rt1.c3)))AND(NULL)))AND(rt1.c1)))AND(rt1.c3)))))OR(((((rt1.c4)OR(rt1.c1)))OR(0.6915919925854123)))), (+ ((((rt1.c4))<=((rt1.c0))))), ((rt1.c0 COLLATE RTRIM)IS NOT(CASE WHEN rt1.c4 THEN rt1.c2 END)), x'' COLLATE NOCASE FROM rt1 WHERE (((x'')/(-1830025022)) COLLATE NOCASE COLLATE BINARY) ORDER BY (NOT (x'')) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c4)))OR(rt1.c2)))OR(rt1.c1))) IS TRUE) FROM rt1 WHERE ('449981296'); -- 0ms;
SELECT UPPER(((rt1.c1)<(rt1.c2))) FROM rt1; -- 0ms;
SELECT CASE rt1.c1  WHEN ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c4)) THEN CAST(rt1.c0 AS REAL) WHEN MIN(rt1.c3) THEN (rt1.c3 IN (rt1.c0)) WHEN ((rt1.c0)>=(rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c4)) END FROM rt1 WHERE ((((((('j') NOT BETWEEN (NULL) AND (0.27678805005609675)))OR(((('-1038830694', x'', 0.7131790461855035))<(('', '0.5258306022704075', ''))))))AND(0.17126615342544627))); -- 0ms;
SELECT DISTINCT 'z|', (((((rt1.c3))=((rt1.c2)))) BETWEEN (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))) AND (COUNT(*))), 0.9854680062326421 FROM rt1; -- 1ms;
SELECT DISTINCT NULL FROM rt1; -- 0ms;
SELECT '799756340' FROM rt1 GROUP BY (+ (CAST(rt1.c2 AS TEXT))), rt1.c0, (+ (((rt1.c0)==(rt1.c1)))) HAVING ((((rt1.c1) NOT NULL))-(((rt1.c4) NOT NULL))); -- 0ms;
SELECT DISTINCT (+ (CASE rt1.c1  WHEN rt1.c4 THEN rt1.c0 END)) FROM rt1; -- 0ms;
SELECT DISTINCT 0.6966351338574486 FROM rt1 GROUP BY UNLIKELY(DISTINCT ((((((((rt1.c3)OR(rt1.c4)))AND(rt1.c2)))AND(rt1.c1)))AND(NULL))), (((((+ (rt1.c4)))OR(CAST('' AS NUMERIC))))AND(LIKELIHOOD(rt1.c3, 0.25426503934429157))), CASE ((((((((rt1.c3)OR(rt1.c3)))AND(0.34171385440139546)))OR(rt1.c4)))AND(rt1.c3))  WHEN (rt1.c0 IN ()) THEN rt1.c4 ELSE (rt1.c0 IN ()) END; -- 0ms;
SELECT ALL MIN(NULL), (((rt1.c3)<>(rt1.c4)) IN ()), rt1.c1 FROM rt1 WHERE ((+ (((x'')>('-1906241986'))))); -- 0ms;
SELECT (((rt1.c2)) BETWEEN ((((((((((((((rt1.c3)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c3)))OR('')))OR(rt1.c3)))) AND ((((rt1.c4) IS TRUE)))) FROM rt1 WHERE (((((0X12058a01) ISNULL)) IS TRUE)) UNION ALL SELECT DISTINCT ((rt1.c3 COLLATE BINARY)>(rt1.c2 COLLATE NOCASE)) FROM rt1 WHERE (((((NULL) NOT BETWEEN (x'') AND ('')))+(CASE WHEN '-1371249654' THEN NULL WHEN '193908931' THEN '266328663' WHEN 1991674706 THEN '-458151354' ELSE NULL END))); -- 0ms;
SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c2 THEN NULL ELSE rt1.c1 END)GLOB(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)) FROM rt1 WHERE ((((-997871765)) BETWEEN ((((((NULL)OR('1163093154')))AND(NULL)))) AND ((0.19103456488475778 COLLATE NOCASE)))); -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 WHERE ((~ (((-3.35903203E8)LIKE(x'94d8'))))); -- 0ms;
SELECT DISTINCT (- (((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2)))) FROM rt1 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT (+ (((rt1.c1)&(rt1.c0)))) FROM rt1 WHERE (((((NULL)-(x''))) NOT BETWEEN (((((((((0.17856244289923184)AND(0.7501122258138063)))AND(0.17856244289923184)))AND(x'')))AND(-676951024))) AND ((('{}<u') BETWEEN (-1.261962244E9) AND (NULL))))); -- 0ms;
SELECT ALL (((rt1.c2)) NOT BETWEEN (((((rt1.c0, rt1.c0, rt1.c2))>((rt1.c2, rt1.c3, rt1.c0))))) AND ((((rt1.c4)%(rt1.c1))))), ((((rt1.c2)IS NOT(rt1.c0)))||(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)), ((CASE WHEN rt1.c0 THEN rt1.c3 END)<=(((rt1.c4)<(rt1.c0)))) FROM rt1 WHERE ((~ (CASE ''  WHEN 0.45113044900960886 THEN -623856724 ELSE 0Xffffffff8111f47a END))); -- 0ms;
SELECT DISTINCT (rt1.c4 IN ()) FROM rt1 WHERE (((((((x'a9ec')AND('1991674706')))AND(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT MIN(((((rt1.c1)AND(rt1.c2)))AND(rt1.c3))), CAST(((rt1.c1)=(rt1.c0)) AS INTEGER), ((((ROUND('908980251', rt1.c2))OR(((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))))AND((~ (rt1.c0)))) FROM rt1; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY IFNULL(DISTINCT rt1.c3 COLLATE RTRIM, (rt1.c0 IN ())) ASC, (NOT (rt1.c1 COLLATE NOCASE)) ASC, rt1.c2 DESC  NULLS FIRST RANGE BETWEEN  UNBOUNDED PRECEDING AND ((((rt1.c0)>=(rt1.c3)))>(CAST(rt1.c3 AS TEXT))) FOLLOWING) FROM rt1 WHERE (SQLITE_VERSION());SELECT DISTINCT ((((((rt1.c4)OR(rt1.c0)))AND(rt1.c0))) NOT NULL) FROM rt1 WHERE (CAST((((x'7f47'))>((NULL))) AS TEXT)); -- 1ms;
SELECT DISTINCT CASE (NOT (0Xffffffffa0f16d5a))  WHEN TRIM(DISTINCT rt1.c4, rt1.c4) THEN -561823125 ELSE ((rt1.c0) IS TRUE) END FROM rt1 WHERE (CASE WHEN ((NULL)%(0.8046580077429745)) THEN TRIM('Dn9\n/zn') WHEN (('tx') NOTNULL) THEN NULL COLLATE NOCASE WHEN ((NULL)/(x'')) THEN (0x5ce3afe9 IN ()) END) ORDER BY ((((rt1.c0)IS(rt1.c0))) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT ((((((rt1.c1)||(rt1.c2)))AND(((rt1.c1)>(0.32541243812077136)))))OR((~ (rt1.c3)))), SUM((NOT (rt1.c0))) OVER (), GROUP_CONCAT(((rt1.c4)<=(rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT NULL FROM rt1; -- 0ms;
SELECT ((((-1.594790566E9 IN (rt1.c3))))>(((((rt1.c3))<((-837699327)))))), (((rt1.c2)GLOB(rt1.c2)) IN ()), (CAST(rt1.c3 AS TEXT) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE RTRIM) BETWEEN (CAST(rt1.c0 AS BLOB)) AND (rt1.c3 COLLATE RTRIM)), CAST(rt1.c0 AS NUMERIC) COLLATE NOCASE, CASE ((rt1.c0) NOTNULL)  WHEN ((rt1.c4) IS FALSE) THEN CAST(rt1.c2 AS NUMERIC) ELSE (~ (rt1.c3)) END FROM rt1 ORDER BY ((((rt1.c4)OR(rt1.c4)))GLOB((rt1.c0 IN ()))) ASC, (((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))GLOB(rt1.c0))  NULLS LAST; -- 0ms;
SELECT ALL '' FROM rt1 WHERE (CASE WHEN ((x'')+(0.5154769811696537)) THEN ((-2.117911276E9)==('')) END) GROUP BY (~ (((x'') ISNULL))) HAVING (((MAX(rt1.c2)))<((0.31290000444404775))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1 ORDER BY (((rt1.c4)) BETWEEN (((+ (rt1.c4)))) AND ((CAST(rt1.c1 AS TEXT)))) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT (((rt1.c1 COLLATE NOCASE))<=((x''))), COUNT(((rt1.c3)*(x''))), AVG((0.7170379380013274 IN (rt1.c2))) FROM rt1 WHERE (CASE ((x'')==(x'7a3a'))  WHEN CAST('-152025407' AS INTEGER) THEN 'プ>aH6Tw˙' COLLATE RTRIM ELSE (~ (169229235)) END); -- 0ms;
SELECT DISTINCT COUNT(ABS(rt1.c0)) FROM rt1; -- 0ms;
SELECT CAST(rt1.c1 AS TEXT) COLLATE RTRIM, (((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))<((((952388559) NOT BETWEEN (rt1.c3) AND (rt1.c1))))), ((((rt1.c3) NOTNULL)) ISNULL), ((((((((((rt1.c2) NOTNULL))OR((((rt1.c3))<((rt1.c4))))))OR(((6.19782087E8) NOTNULL))))OR(rt1.c0 COLLATE NOCASE)))AND(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c1)))AND(rt1.c3)))), ((COUNT(rt1.c0))||('')) FROM rt1 WHERE (CAST((~ (NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT CASE rt1.c0  WHEN rt1.c4 THEN rt1.c2 END COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT CAST(MIN(rt1.c2) AS BLOB) FROM rt1 WHERE (((((x'22dc') NOT BETWEEN (NULL) AND (NULL)))GLOB((('-519205338')>(x'e311'))))); -- 0ms;
SELECT DISTINCT UNLIKELY(((NULL)&(rt1.c2))), CAST(((rt1.c1)GLOB(rt1.c2)) AS BLOB), TOTAL(CASE x'4fa9'  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) FILTER(WHERE (((rt1.c4))==((rt1.c0))) COLLATE RTRIM) OVER () FROM rt1 WHERE ('-261449399') GROUP BY ((rt1.c3)GLOB(rt1.c1)) COLLATE BINARY, ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE BINARY, CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2)) THEN (rt1.c1 IN ()) END; -- 1ms;
SELECT DISTINCT ((rt1.c4)>((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))) FROM rt1 WHERE (CASE ((0.6005243060094481) NOTNULL)  WHEN x'' COLLATE RTRIM THEN (-2.117911276E9 IN ()) ELSE CASE x''  WHEN -1348309415 THEN x'' ELSE '2127052528' END END) ORDER BY (((((rt1.c4, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c4)) AND ((rt1.c4, rt1.c4, rt1.c3))))>>(CASE WHEN rt1.c3 THEN rt1.c4 END)) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((CAST('1367213189' AS TEXT)))>((((rt1.c1) BETWEEN (rt1.c3) AND ('-1035968769'))))) FROM rt1 WHERE (((((((x'f949') NOT BETWEEN (x'') AND (0.24924964399988903)))OR(((('N')) BETWEEN (('')) AND (('-1053422783'))))))OR(((((NULL)AND('-1921153618')))AND(0x7303190c))))); -- 0ms;
SELECT ALL ((rt1.c2) BETWEEN (((rt1.c1)LIKE(rt1.c4))) AND (CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c4 END)), ((((rt1.c1)AND(CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 END)))OR(rt1.c1 COLLATE NOCASE)), (((rt1.c3)) NOT BETWEEN (((+ (rt1.c2)))) AND ((CAST(rt1.c3 AS INTEGER)))) FROM rt1 WHERE ('7LmAQ') ORDER BY ((x'') IS FALSE); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2))) NOTNULL) FROM rt1; -- 0ms;
SELECT ALL GROUP_CONCAT((rt1.c2 IN (rt1.c2))) OVER () FROM rt1 WHERE ((((('') NOTNULL))AND(((((0.8259237671285914)OR(x'')))OR(0xffffffff9385f3b5))))) ORDER BY ((((rt1.c3)IS NOT(rt1.c0)))||(CAST(rt1.c4 AS BLOB))); -- 1ms;
SELECT 'gT' FROM rt1 WHERE (((('-1')) BETWEEN ((((x'')&(x'198c')))) AND ((CAST('619782087' AS NUMERIC))))) LIMIT 1526341841 OFFSET 1891290599; -- 0ms;
SELECT ALL ((CAST(rt1.c1 AS REAL)) NOT NULL) FROM rt1 GROUP BY rt1.c1, (~ (rt1.c1)) COLLATE RTRIM COLLATE RTRIM, ((((NULL) NOT BETWEEN (rt1.c1) AND (NULL)))|(((((rt1.c4)AND(NULL)))AND(rt1.c2)))) HAVING ((COUNT(*))&(rt1.c4 COLLATE RTRIM)); -- 0ms;
SELECT GROUP_CONCAT((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c4)))) OVER () FROM rt1; -- 0ms;
SELECT ALL CAST((NOT (rt1.c2)) AS BLOB) FROM rt1; -- 0ms;
SELECT ALL LEAD((('U鈶')IS NOT((rt1.c4 IN ()))), rt1.c0 COLLATE BINARY, rt1.c4) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c3) NOT BETWEEN ((((0.10616461803874777))==((rt1.c1)))) AND (((rt1.c3)IS(rt1.c1)))) FROM rt1 LIMIT -1707836478 OFFSET -1; -- 0ms;
SELECT GROUP_CONCAT(-80493829) OVER () FROM rt1 WHERE (((CAST('Aw' AS REAL))|((('2049742089')&('-1986024835'))))); -- 1ms;
SELECT DISTINCT CAST(NULL AS TEXT), rt1.c2, ((CASE rt1.c3  WHEN rt1.c1 THEN rt1.c2 END) BETWEEN ((rt1.c0 IN ())) AND (CASE WHEN rt1.c4 THEN x'' ELSE rt1.c4 END)) FROM rt1 WHERE (CAST((x'c047' IN ()) AS NUMERIC)) ORDER BY ABS((~ (rt1.c1))) DESC; -- 0ms;
SELECT DISTINCT CAST(((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)) AS REAL), SQLITE_VERSION(), (((rt1.c1)) BETWEEN ((CASE rt1.c1  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c3 END)) AND ((CHAR(rt1.c0, NULL, rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2) IS TRUE)) NOT BETWEEN (-1423443265) AND (((rt1.c3) NOTNULL))) FROM rt1; -- 0ms;
SELECT DISTINCT (((((((rt1.c2, rt1.c2, rt1.c4, rt1.c2, rt1.c0)) BETWEEN ((x'', rt1.c1, rt1.c4, '>N\nt', rt1.c2)) AND ((rt1.c1, rt1.c3, rt1.c4, 379811085, rt1.c0))))OR(rt1.c1)))OR((((NULL))==((rt1.c1))))) FROM rt1; -- 0ms;
SELECT ALL SUM((((rt1.c1, NULL, rt1.c2))=((rt1.c2, rt1.c1, rt1.c2))) COLLATE BINARY) OVER (), (((rt1.c1)) NOT BETWEEN ((x'7073')) AND ((CAST(rt1.c2 AS BLOB)))), COUNT(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c4)))OR(rt1.c3)))OR(rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE COUNT(rt1.c0)  WHEN ((rt1.c4)IS NOT(rt1.c1)) THEN ((((((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)) ELSE (+ (rt1.c1)) END, CASE LIKELY(rt1.c1)  WHEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)) THEN ((rt1.c1)>=('0.15160738009551833')) END, ((NULL) IS TRUE) FROM rt1 WHERE (CASE WHEN ((0.5870266990076076) NOT BETWEEN ('∎\n') AND (0xffffffffe8871cbb)) THEN ((NULL)AND(x'8992')) ELSE ((x'')/(NULL)) END) ORDER BY (('379811085')AND((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))))  NULLS FIRST, (+ (((((rt1.c0)OR(0.761193106071178)))OR(rt1.c2)))) DESC  NULLS LAST LIMIT 1596343296 OFFSET 856638687; -- 1ms;
SELECT PERCENT_RANK() OVER () FROM rt1 WHERE (UNLIKELY(DISTINCT CAST(0.4998197131650136 AS TEXT))); -- 0ms;
SELECT CAST(((rt1.c1)IS NOT(rt1.c2)) AS NUMERIC) FROM rt1 GROUP BY (~ ('-561823125')) HAVING (NOT (((((rt1.c3)OR(rt1.c4)))OR(rt1.c3)))); -- 0ms;
SELECT ALL GROUP_CONCAT(x'') OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (NOT ('-741930957' COLLATE RTRIM)), ((SUM('')) NOT BETWEEN (((((rt1.c1)AND(rt1.c4)))OR(rt1.c4))) AND (((rt1.c2)+(NULL)))), PERCENT_RANK() OVER (), 'S_odh&dG' COLLATE NOCASE, ((((rt1.c0, rt1.c4, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c3, rt1.c3, rt1.c3))) IN (CASE WHEN rt1.c0 THEN rt1.c1 END)) FROM rt1; -- 0ms;
SELECT DISTINCT (- ((rt1.c1 IN (rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT NULL FROM rt1 WHERE ((('6975866233618729562-')<<(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((rt1.c3) IS TRUE))&(rt1.c2)), '2~', NULLIF(DISTINCT CASE rt1.c4  WHEN rt1.c2 THEN rt1.c4 END, (- (rt1.c0))), LEAD(CAST(((rt1.c3)IS NOT(rt1.c1)) AS TEXT), (((rt1.c4, 0.8425150265376494, rt1.c0)) BETWEEN ((rt1.c0, rt1.c4, rt1.c1)) AND ((rt1.c0, rt1.c4, rt1.c0))) COLLATE NOCASE, (- (rt1.c2)) COLLATE BINARY) OVER (), CUME_DIST() OVER () FROM rt1 GROUP BY '955!R' HAVING (((((rt1.c2)AND(rt1.c2)))AND(rt1.c1)) IN (((rt1.c0) BETWEEN (x'5a311313') AND (rt1.c0)), (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))); -- 0ms;
SELECT (((((rt1.c3, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0))))<=((((x'', rt1.c4, rt1.c1, rt1.c1, rt1.c1))=((rt1.c0, rt1.c4, rt1.c2, rt1.c4, NULL))))), CAST((((rt1.c0, rt1.c2, rt1.c4)) NOT BETWEEN ((rt1.c0, rt1.c3, rt1.c2)) AND ((rt1.c1, x'9d53', rt1.c2))) AS BLOB), ROW_NUMBER() OVER () FROM rt1; -- 0ms;
SELECT ALL (((NOT (rt1.c1)))||(IFNULL(DISTINCT rt1.c4, rt1.c2))) FROM rt1; -- 0ms;
SELECT ALL MAX(((rt1.c3)>(rt1.c3))) COLLATE BINARY FROM rt1; -- 0ms;
SELECT DISTINCT AVG(((NULL) IS TRUE)) OVER () FROM rt1; -- 0ms;
SELECT MAX(CAST(rt1.c0 AS NUMERIC)) FROM rt1 WHERE ((((x'')|(-396396853)) IN ((('gy') NOT NULL), x''))); -- 0ms;
SELECT ALL ((((((((((rt1.c4)>>(rt1.c0)))AND(((rt1.c2)AND(NULL)))))AND(((x'df93') NOT BETWEEN (rt1.c4) AND (rt1.c0)))))AND('rI')))AND(QUOTE(rt1.c3))), (LIKELIHOOD(DISTINCT rt1.c2, 0.9278348418805943) IN (GROUP_CONCAT(x'805a'))), SQLITE_COMPILEOPTION_GET(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1))) FROM rt1; -- 0ms;
SELECT DISTINCT (+ (CAST(rt1.c4 AS NUMERIC))) FROM rt1 WHERE (CAST((NULL IN ()) AS TEXT)); -- 1ms;
SELECT DISTINCT rt1.c2, ((((rt1.c3)<>(rt1.c4))) NOT BETWEEN (SUM(rt1.c1)) AND (rt1.c2 COLLATE NOCASE)), CASE CAST(rt1.c2 AS REAL)  WHEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)) THEN ((((rt1.c3)AND(rt1.c2)))OR(rt1.c4)) END, (((rt1.c4)<(rt1.c3)) IN ()), LEAD((((rt1.c4 IN ()))<(((rt1.c2)>>(rt1.c3)))), (+ (((rt1.c4)<=(rt1.c3)))), CAST((rt1.c1 IN ()) AS BLOB)) OVER () FROM rt1 GROUP BY ((((rt1.c2)AND(rt1.c3)))OR(rt1.c3)) COLLATE NOCASE, ((rt1.c2 COLLATE BINARY)-(((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c0)))), CASE WHEN CASE WHEN rt1.c4 THEN rt1.c0 END THEN (rt1.c4 IN (rt1.c0, rt1.c1)) ELSE rt1.c1 COLLATE BINARY END HAVING HEX(rt1.c1) COLLATE NOCASE; -- 0ms;
SELECT ALL COUNT(*) FROM rt1; -- 0ms;
SELECT ((((((((((rt1.c0)<(rt1.c4)))OR(MIN(rt1.c2))))OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c4)))))OR((~ (rt1.c2)))))AND(rt1.c4)), (((+ (rt1.c2))) BETWEEN (rt1.c1) AND (((((rt1.c4)OR(rt1.c3)))OR(rt1.c3)))), ((CAST(rt1.c0 AS BLOB)) IS FALSE) FROM rt1 WHERE ((((+ (NULL)))/(((x'5be4')OR(NULL))))) LIMIT -484257406 OFFSET 923996867; -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (0.6417912718302505) AND (rt1.c2))) NOT NULL), CASE (((rt1.c1, rt1.c0, rt1.c2))==((rt1.c1, rt1.c0, rt1.c3)))  WHEN rt1.c4 THEN ((rt1.c4) IS FALSE) END, LIKELY(GROUP_CONCAT(rt1.c1)) FROM rt1; -- 0ms;
SELECT ((x'4ef8') NOT BETWEEN ((((rt1.c2))>((rt1.c1)))) AND (SUM(rt1.c4))) FROM rt1; -- 0ms;
SELECT ALL ((GROUP_CONCAT(rt1.c1))>((((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((x''))))) FROM rt1 WHERE (((((((((x'3e59b02b7120')OR(0.5768432929882785)))AND(0.2486476410209919)))AND(((NULL) BETWEEN (0.47138420721401986) AND (x'')))))OR('370319803'))); -- 1ms;
SELECT DISTINCT ((json_insert(rt1.c4, rt1.c0, rt1.c0, rt1.c0, rt1.c0)) BETWEEN ('W7%m_') AND (x'4ca7')) FROM rt1;SELECT DISTINCT AVG((('⍟<聖v')<<(rt1.c3))) OVER (), DENSE_RANK() OVER (), COUNT(*) OVER ( GROUPS CASE ((rt1.c0)%(rt1.c4))  WHEN ((rt1.c1) NOT NULL) THEN TIME(rt1.c2, rt1.c3, rt1.c4) ELSE ((((rt1.c3)AND(rt1.c3)))AND(rt1.c2)) END PRECEDING) FROM rt1 ORDER BY ABS((rt1.c4 IN (rt1.c1))), 0.6765388222945384  NULLS FIRST, ((-1.7976931348623157E308) NOT NULL);