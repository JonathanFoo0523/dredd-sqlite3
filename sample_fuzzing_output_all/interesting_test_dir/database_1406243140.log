-- Time: 2024/06/07 07:28:43
-- Database: database40
-- Database version: 3.40.0
-- seed value: 1406243140
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT ); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
ANALYZE; -- 5ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR REPLACE INTO t0 VALUES (x''), (x''), (x'fdf6'); -- 1ms;
UPDATE t0 SET c0=NULL WHERE ((('dN' IN ())) IS FALSE); -- 0ms;
UPDATE OR REPLACE t0 SET c0='d2', c0=NULL, c0=0.8020682670216401; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1202754348'); -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR FAIL t0 SET c0=0Xffffffffbd673dc6, c0=0.13805524428074867; -- 0ms;
UPDATE OR IGNORE t0 SET c0='533935742'; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''), (0xffffffffae2ea0ad), ('1156379051'), (0x23717f00), (5.33935742E8); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
ANALYZE temp; -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
UPDATE OR FAIL t0 SET c0='{qE)l}'; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL) ON CONFLICT(c0) DO NOTHING; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.3056784534704149), (NULL), ('-1216837507'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'', x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
CREATE INDEX i56 ON t0(c0) WHERE CAST(((((c0)AND(c0)))AND(c0)) AS REAL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x'5454'); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
ALTER TABLE t0 ADD COLUMN c51 INT; -- 0ms;
UPDATE OR IGNORE t0 SET c51=x'212e' WHERE t0.c51; -- 0ms;
REINDEX i56; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c51=-1e500, c0='2I!U0%', c0='/ꂭ ?'; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c51) VALUES ('1906006525'), ('1906006525'), (-1732142932); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('80222104') WHERE ((ABS(t0.c0)) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND ((t0.c0 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c51)=(x''); -- 0ms;
UPDATE OR REPLACE t0 SET (c51)=('yh#(B') WHERE CASE WHEN (NULL IN ()) THEN (t0.c51 IN (t0.c0)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=1536262530, c0=NULL WHERE (((0.33679435121532986)) NOT BETWEEN (((~ (t0.c51)))) AND ((t0.c0))); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.3056784534704149); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('', x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1637631183'; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (0.7938614942852431), (NULL); -- 1ms;
UPDATE OR REPLACE t0 SET c51='533935742'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1983993502 unordered'); -- 0ms;
UPDATE t0 SET c51=0.10931797595321968, c0=0Xffffffffa7f89efd WHERE (((((t0.c0)+(t0.c51))))>((((t0.c0) BETWEEN (t0.c51) AND (t0.c0))))); -- 0ms;
ANALYZE i56; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.3056784534704149'), (x''), (5.33935742E8); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c51)=('{QE)L}', -444044534); -- 0ms;
ALTER TABLE t0 ADD COLUMN c72 REAL; -- 0ms;
VACUUM; -- 0ms;
UPDATE OR IGNORE t0 SET (c51, c51, c0)=(x'1cde', x'73b5', -115253672); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'5a5d', '', 0.9713468375016148), (NULL, 'dN', NULL), ('0.0', 'r', 0.7288740783776503); -- 0ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ANALYZE i56; -- 0ms;
INSERT OR REPLACE INTO t0(c0, c72) VALUES ('E&Hm2m', x''); -- 0ms;
INSERT OR FAIL INTO t0(c51) VALUES (0.6074337977429691), (''), (0.9310998839979079); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET c72=NULL, c51='{F' WHERE (((((t0.c51)GLOB(t0.c72)), ((t0.c51)&(t0.c51)), json(t0.c72)))<((((((((((t0.c0)OR(t0.c0)))OR(t0.c51)))OR(t0.c72)))AND(t0.c51)), ((t0.c51) IS FALSE), (((t0.c72)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c51=0.05702032780905675; -- 1ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ANALYZE i56; -- 1ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c51=-1372675923; -- 0ms;
UPDATE t0 SET c72='1253013874' WHERE ((t0.c51)=(t0.c0)) COLLATE BINARY; -- 0ms;
UPDATE t0 SET (c72)=('JZ%?') WHERE ((((x'') NOT BETWEEN (t0.c51) AND (t0.c72)))LIKE(CASE t0.c0  WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN t0.c72 WHEN t0.c51 THEN t0.c0 ELSE t0.c72 END)); -- 0ms;
VACUUM; -- 0ms;
UPDATE OR IGNORE t0 SET (c51, c51)=(x'', x'') WHERE ((((t0.c0)LIKE(t0.c0)))*(CASE t0.c51  WHEN t0.c72 THEN x'' WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c72 END)); -- 0ms;
PRAGMA stats; -- 0ms;
REINDEX i56; -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET (c51)=(1110981118) WHERE t0.c0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DROP INDEX IF EXISTS "i56"; -- 1ms;
UPDATE OR IGNORE t0 SET (c51)=('JW'); -- 0ms;
UPDATE t0 SET (c0)=(x''); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (+ (((x'') NOT BETWEEN (t0.c0) AND (t0.c72)))), t0.c72, CAST(t0.c72 AS BLOB) FROM t0 WHERE (((0.13805524428074867) BETWEEN (((NULL) IS FALSE)) AND (CAST(x'' AS REAL)))) ORDER BY ((NULL IN ()) IN ()); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c51) NOT NULL)) FROM t0 WHERE ((((((((1.983993502E9)) NOT BETWEEN ((NULL)) AND ((0.8595953088533642))))OR(((x'')-('-37361174')))))OR(((0.18320682417793321)<>('Sb'))))); -- 0ms;
SELECT CASE NULLIF(t0.c72, t0.c0)  WHEN (t0.c0 IN (t0.c51)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c72)) ELSE t0.c72 COLLATE BINARY END FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c72, t0.c51)) BETWEEN ((CASE t0.c0  WHEN t0.c72 THEN t0.c51 ELSE t0.c51 END, LENGTH(t0.c72), (~ (t0.c51)))) AND ((((t0.c0) NOT NULL), (NOT (0.10476244740366014)), (((t0.c72))<>((t0.c72)))))), (((((- (t0.c0)))OR(t0.c0)))OR(((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c51)))), ((SQLITE_COMPILEOPTION_USED(1110981118)) NOT BETWEEN (((t0.c51)=(t0.c72))) AND (t0.c51 COLLATE BINARY)) FROM t0; -- 1ms;
SELECT DISTINCT NULL FROM t0 WHERE (((((((((0.3509910804379326)OR(NULL)))OR(x'16d1')))AND(0.5103870287280571)))OR(0.11088889956476677)) COLLATE NOCASE) ORDER BY CAST(((0.09789643972761308) BETWEEN (t0.c51) AND (t0.c51)) AS NUMERIC) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT t0.c72 FROM t0 WHERE (((((x'059f')<=(0.4713413008830374)))AND(((0.5938491359770722)AND(x'b98a'))))); -- 0ms;
SELECT ALL CAST(t0.c51 AS INTEGER) FROM t0; -- 0ms;
SELECT ((((((((((t0.c51) IS TRUE))OR(((t0.c72) IS FALSE))))AND(COUNT(t0.c72))))AND(t0.c51)))AND(((t0.c72)GLOB(t0.c72)))) FROM t0 WHERE (CASE WHEN 0.9310998839979079 THEN CAST('1565683556' AS NUMERIC) ELSE CASE x''  WHEN x'' THEN x'' END END) ORDER BY (((+ (t0.c72))) NOT BETWEEN ((((t0.c51)) NOT BETWEEN ((t0.c0)) AND ((t0.c72)))) AND (t0.c51 COLLATE RTRIM)); -- 0ms;
SELECT ALL LAST_VALUE((NOT (t0.c51 COLLATE BINARY))) OVER () FROM t0 WHERE (CAST(NULL COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT (+ (((t0.c51)OR(t0.c51)))) FROM t0 WHERE (((((2011221722) NOT BETWEEN ('') AND (''))) BETWEEN ((('-1383809293') NOT BETWEEN (-5.8853421E7) AND ('2i!u0%'))) AND (((-151278134) ISNULL)))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c51 AS TEXT)) BETWEEN (((t0.c51) IS FALSE)) AND (((t0.c51)<>(t0.c72)))) FROM t0 WHERE ((- ((((('-1244113096')OR('533935742')))OR(NULL))))); -- 0ms;
SELECT DISTINCT (((CAST(t0.c0 AS INTEGER)))>=((((t0.c72) NOT BETWEEN (t0.c0) AND (t0.c72))))) FROM t0; -- 0ms;
SELECT (NOT ('80222104')) FROM t0 WHERE (CASE WHEN MIN(NULL, x'') THEN TRIM('2041922637', '-871832132') WHEN (('0.3509910804379326') BETWEEN ('') AND (0.20478896494832832)) THEN (((x'', '0.05702032780905675', 0.9793852372016755)) NOT BETWEEN ((NULL, 1e500, x'')) AND ((NULL, 'r', x''))) WHEN ((('', '', 0.40887031810236474)) BETWEEN (('-1372675923', x'', '0.18320682417793321')) AND ((NULL, NULL, NULL))) THEN ((0.6433007023873839) BETWEEN (NULL) AND (-1.476878595E9)) ELSE (('Ig<n9{') NOTNULL) END) GROUP BY ((x'')IS((+ (t0.c0)))), CASE WHEN (t0.c0 IN ()) THEN ((((t0.c72)AND(NULL)))AND(t0.c0)) WHEN t0.c51 THEN TIME(t0.c51, t0.c72, t0.c0) WHEN (~ (t0.c72)) THEN '-1216837507' END, '2011221722'; -- 0ms;
SELECT CAST(LIKELY(DISTINCT t0.c51) AS NUMERIC) FROM t0; -- 0ms;
SELECT (((+ (t0.c0))) BETWEEN (((t0.c72)GLOB(-551518987))) AND ((- (t0.c51)))) FROM t0 WHERE ((((x'9aab', 'E祲', NULL)) BETWEEN (((('毉tM\S')IS('SB')), CASE NULL  WHEN x'' THEN 'PF' WHEN '77934600' THEN '-1732142932' WHEN 2011221722 THEN 0.904357973736994 WHEN -1189965804 THEN NULL WHEN 0.9713468375016148 THEN '1280994370' END, ',M{x' COLLATE NOCASE)) AND ((NULLIF(DISTINCT '2114372088', NULL), ((x'd19ac832') ISNULL), CAST('495618635' AS BLOB))))) GROUP BY (((t0.c72)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((CAST(0.5362857660787453 AS BLOB)))); -- 0ms;
SELECT ALL STRFTIME(((t0.c72) NOTNULL), CASE WHEN '-1216837507' THEN t0.c72 ELSE '' END, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c51)))), (NOT (NULL)), NULLIF(CASE t0.c51  WHEN t0.c0 THEN t0.c0 ELSE 295975637 END, ((t0.c51)AND(t0.c72))) FROM t0; -- 0ms;
SELECT DISTINCT ((0.5604348509957543) NOT BETWEEN (x'd523') AND (ABS(t0.c51))) FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT ALL t0.c51 FROM t0 WHERE ((((((('YH#(B')OR(0.2735275448422275)))AND(x''))) ISNULL)) LIMIT -1372675923; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) ISNULL)), ((t0.c0) BETWEEN (((((((((t0.c72)AND(t0.c0)))AND(t0.c51)))OR(t0.c0)))AND(t0.c72))) AND (-1476878595)), ((('U>S ')) BETWEEN ((((t0.c51) ISNULL))) AND (((- (t0.c72))))) FROM t0; -- 0ms;
SELECT DISTINCT CASE '-100546569'  WHEN AVG(t0.c72) THEN ((t0.c72)AND(t0.c72)) WHEN MIN(t0.c0) THEN ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72)) WHEN (((t0.c72))>=((t0.c51))) THEN MAX(t0.c0) ELSE ((((((((t0.c72)OR(t0.c72)))AND(t0.c0)))OR(t0.c72)))OR(t0.c0)) END FROM t0; -- 0ms;
SELECT ALL MAX(CASE WHEN t0.c0 THEN t0.c0 END), ((((t0.c72)<(t0.c72))) IS FALSE), COUNT(*) OVER () FROM t0 WHERE (CAST(((((((((NULL)OR('^ynl娨')))AND(0.917856095706115)))AND(NULL)))AND(x'')) AS TEXT)) GROUP BY ((((((NULL, t0.c0, '-263162581')) BETWEEN ((t0.c72, t0.c0, t0.c72)) AND ((t0.c0, 0.9179469887734973, t0.c51)))))<((TOTAL_CHANGES()))), (((((t0.c72)) BETWEEN ((t0.c72)) AND ((t0.c72)))) NOT BETWEEN ((- ('0.40887031810236474'))) AND (CAST('9223372036854775807' AS TEXT))), (+ (t0.c72 COLLATE RTRIM)) ORDER BY t0.c0  NULLS LAST, (((CASE WHEN t0.c51 THEN t0.c0 END))<=((CAST(t0.c72 AS TEXT))))  NULLS FIRST; -- 0ms;
SELECT (- (((t0.c51)+(t0.c51)))) FROM t0 WHERE ((+ (CASE WHEN x'' THEN 0Xffffffffa4df647d ELSE '/ꂭ ?' END))) ORDER BY t0.c51, CASE WHEN t0.c72 THEN ((t0.c72)-(t0.c72)) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST('gG' AS INTEGER) FROM t0; -- 0ms;
SELECT ALL (((~ (0.03964086159661373))) NOT NULL) FROM t0 WHERE (IFNULL(((NULL) IS TRUE), CAST(NULL AS NUMERIC))) LIMIT 888973055 OFFSET -1676181305; -- 0ms;
SELECT DISTINCT SUBSTR((NOT (t0.c72)), t0.c72), (NOT (t0.c0)), TOTAL(((((t0.c0)AND(t0.c51)))OR(t0.c0)) COLLATE NOCASE) FROM t0 WHERE (2.95975637E8) ORDER BY NULLIF(DISTINCT t0.c51, NULL) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT ((((((t0.c51) NOT BETWEEN (t0.c72) AND (t0.c51)))OR((+ (t0.c0)))))OR((t0.c51 IN ()))) FROM t0 WHERE (CAST(NULL AS INTEGER) COLLATE BINARY); -- 0ms;
SELECT NTILE(((((((((x'')OR(t0.c72 COLLATE BINARY)))AND(json_remove(t0.c72, t0.c51))))AND((NOT (t0.c72)))))AND(((t0.c0)&(t0.c72))))) OVER ( ORDER BY ((((0.2608498148919072) IS TRUE)) IS FALSE) DESC, ((t0.c72) NOTNULL) COLLATE BINARY) FROM t0 LIMIT 570497092;SELECT DISTINCT CASE WHEN LOWER(t0.c72) THEN (t0.c72 IN (t0.c72)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51)) THEN CASE t0.c51  WHEN t0.c0 THEN 0.7938614942852431 END WHEN (- (t0.c51)) THEN t0.c51 WHEN COUNT(t0.c51) THEN t0.c0 COLLATE RTRIM WHEN (~ (t0.c72)) THEN x'' END FROM t0 WHERE ((~ (CASE WHEN x'a1fe' THEN 0.9242519087885117 END))); -- 0ms;
SELECT DISTINCT (((('') BETWEEN (t0.c0) AND (t0.c51))) NOT BETWEEN (t0.c51 COLLATE RTRIM) AND (CAST(t0.c51 AS TEXT))) FROM t0 WHERE (((84838213 IN ()) IN (CAST(x'' AS NUMERIC)))) ORDER BY (NULL IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT CAST(CASE WHEN t0.c51 THEN 0xffffffffee0a2d73 WHEN t0.c72 THEN t0.c72 WHEN t0.c51 THEN 0X4300eafd ELSE t0.c72 END AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT '-1383809293' COLLATE RTRIM, (t0.c0 COLLATE NOCASE IN ()), (((t0.c51 IN ())) NOT BETWEEN ((NOT (t0.c51))) AND (CHANGES())) FROM t0; -- 0ms;
SELECT ALL 0.18151653720166694 FROM t0 WHERE (((NULL) NOT BETWEEN (x'b4dd18a1') AND (0.10931797595321968)) COLLATE BINARY) GROUP BY CAST((t0.c0 IN (t0.c0, t0.c51, t0.c72)) AS BLOB) HAVING t0.c0; -- 0ms;
SELECT ALL CAST(t0.c72 COLLATE NOCASE AS BLOB), ((((((((((t0.c0)OR('1906006525')))OR(t0.c72)))OR(t0.c72)))OR(t0.c0)))<<((NOT (t0.c0)))), CAST(((t0.c72) NOT BETWEEN (t0.c0) AND (t0.c72)) AS NUMERIC) FROM t0 WHERE ((((NOT (0X7121050b)))|(((x'') BETWEEN ('2041922637') AND (0.5103870287280571))))); -- 0ms;
SELECT DISTINCT AVG(ABS(DISTINCT t0.c72)) OVER () FROM t0 WHERE ((((x'', NULL, '-1528863619')) NOT BETWEEN (((- (0.6133966840447603)), NULL COLLATE BINARY, CASE 0X6e6202df  WHEN x'' THEN x'' ELSE x'' END)) AND ((((('1828364349'))>=((0.9263117184565836))), CAST(x'8e61' AS NUMERIC), (NULL IN ()))))) ORDER BY (((((t0.c0)IS(t0.c72))))>((json_extract(t0.c51, t0.c51))))  NULLS FIRST;SELECT ALL (NOT (json_type(''))) FROM t0 WHERE (((((((('-1280775004')AND('/ꂭ ?')))OR(x'')), CASE WHEN NULL THEN NULL ELSE 'years' END, (x'' IN (x''))))<=((json_array_length(1e500, NULL), (- ('-1676181305')), (~ ('1')))))) ORDER BY t0.c51 ASC  NULLS FIRST, ((json_remove(t0.c72, t0.c51, t0.c0, 'JW'))|(((t0.c72)*(t0.c72)))) DESC  NULLS LAST;SELECT DISTINCT CAST((- (t0.c72)) AS INTEGER), CUME_DIST() OVER ( ORDER BY CASE WHEN CAST(t0.c72 AS TEXT) THEN t0.c51 END DESC  NULLS FIRST GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), (((LIKELIHOOD(t0.c72, 0.448989984312156), LIKELIHOOD(t0.c0, 0.9386093445209622), ((t0.c72)/(t0.c0))))>=((t0.c0 COLLATE NOCASE, CAST(t0.c72 AS REAL), (t0.c72 IN ())))) FROM t0 WHERE ((((((((((NULL)OR(NULL)))OR(NULL)))OR(x'fee4')))OR(0.7779842476510135)) IN ((NULL IN ()), ((('')) NOT BETWEEN ((0Xffffffffbdead9df)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT CAST(CASE NULL  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS NUMERIC), ((t0.c0)||(t0.c51)) COLLATE RTRIM, LIKE(((0X17134065) NOTNULL), ((t0.c72) NOT BETWEEN (t0.c0) AND ('Z㕌撫6l''x')), '-') FROM t0 LIMIT 1536262530 OFFSET 2114372088; -- 0ms;
SELECT DISTINCT ((((t0.c0)-(x''))) IS TRUE), LIKELY((- (t0.c72))), SUM(0.14394791536018514) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c51 AS TEXT) COLLATE RTRIM, ((((t0.c72)OR(t0.c72)))AND(GROUP_CONCAT(t0.c0))), GROUP_CONCAT(((t0.c51)<=(t0.c72)) COLLATE NOCASE) FILTER(WHERE (((((NULL, t0.c0, t0.c51)) BETWEEN ((x'', t0.c72, t0.c72)) AND ((t0.c72, t0.c72, t0.c72)))) NOT BETWEEN (((t0.c51)>=(t0.c0))) AND ((t0.c51 IN ())))) OVER () FROM t0 WHERE ((((((((((391525679)OR('1280994370')))OR('-1528863619')))AND(x'90c4')))AND(NULL)) IN (((x'daafb1fc')AND('-551518987'))))); -- 0ms;
SELECT DISTINCT (NOT (t0.c0 COLLATE NOCASE)), ((((t0.c72) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL), ((((t0.c0)AND((((t0.c51))>((t0.c72))))))OR(0.4477009222002767)), CAST((((t0.c72))<>((t0.c0))) AS TEXT), (((((((t0.c0)AND(t0.c72)))AND(t0.c51))))>(((t0.c51 IN (t0.c51))))) FROM t0 WHERE (CASE WHEN NULL THEN 0x35f688b8 END COLLATE RTRIM) GROUP BY CAST((((t0.c51)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB) HAVING CAST(((t0.c0)>>(t0.c0)) AS INTEGER); -- 0ms;
SELECT DISTINCT ((((t0.c72)<(t0.c0)))IS(((t0.c51)/(t0.c51)))), NULL, ((t0.c0) BETWEEN (t0.c51) AND (t0.c51)) COLLATE RTRIM FROM t0 WHERE (CAST(('' IN ()) AS INTEGER)); -- 0ms;
SELECT t0.c72 FROM t0 WHERE (CAST(NULL AS BLOB)); -- 0ms;
SELECT DISTINCT NULLIF((+ (NULL)), NULL), CAST(((t0.c0)IS(t0.c0)) AS NUMERIC), (- (t0.c0)) FROM t0 ORDER BY ((((((((((t0.c0)OR(t0.c51)))OR(t0.c0)))OR(t0.c51)))AND('|	|M2S'))) IS TRUE)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t0.c51, t0.c72, '')) BETWEEN ((((t0.c0) IS FALSE), (((t0.c51)) BETWEEN ((t0.c72)) AND ((NULL))), (t0.c0 IN ()))) AND ((t0.c72, CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c51 END, (~ (t0.c51))))), COUNT(*), RANK() OVER () FROM t0; -- 0ms;
SELECT ALL (((t0.c51)) BETWEEN ((((t0.c72)<(t0.c72)))) AND ((((t0.c51)>=(t0.c72))))) FROM t0 WHERE (((((0.9263117184565836)GLOB(0.3056784534704149))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((((((((t0.c72)AND(t0.c0)))AND(t0.c51)))AND(NULL)))OR(t0.c51)))IS((t0.c0 IN (t0.c51, t0.c51)))), CAST((((t0.c0))!=((t0.c72))) AS BLOB), (((t0.c0 IN (t0.c51)))>(t0.c51)) FROM t0 WHERE (0.6433007023873839); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c72) OVER (), (((+ (t0.c51))) IS TRUE), NTILE((t0.c72 IN ())) OVER () FROM t0 WHERE (((((CASE WHEN x'' THEN NULL WHEN 0.6856760842295605 THEN NULL WHEN '' THEN NULL ELSE x'a615' END)AND((NULL IN ()))))AND(((0.9181833125940901) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((t0.c51)||(t0.c51)) COLLATE BINARY, (- (CASE WHEN t0.c51 THEN t0.c0 WHEN t0.c51 THEN t0.c72 WHEN t0.c0 THEN t0.c51 ELSE t0.c0 END)), CAST('5ミZlqmOV' AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((8.88973055E8) NOTNULL))AND(CAST(t0.c0 AS NUMERIC))))OR(CASE t0.c51  WHEN t0.c51 THEN t0.c72 END)))OR(((t0.c72) IS TRUE))))AND(((t0.c51)+(t0.c72)))), ((MIN(t0.c51))+((t0.c51 IN (t0.c72)))), 'v2' FROM t0; -- 1ms;
SELECT ((((((((t0.c51)AND(((t0.c72) BETWEEN (t0.c51) AND (t0.c72)))))OR(((((t0.c51)OR(t0.c72)))AND(t0.c51)))))OR(((t0.c72) NOT BETWEEN (t0.c51) AND (t0.c72)))))AND((((t0.c51)) NOT BETWEEN ((t0.c72)) AND ((t0.c51))))), DENSE_RANK() OVER (), ((((((t0.c0)GLOB(t0.c72)))OR((- (t0.c0)))))OR(((t0.c0) IS FALSE))) FROM t0; -- 0ms;
SELECT ALL CASE WHEN '533935742' THEN (NOT (t0.c72)) ELSE (+ (x'1f5a')) END FROM t0; -- 0ms;
SELECT ALL SQLITE_SOURCE_ID(), CAST(t0.c0 COLLATE BINARY AS TEXT), AVG((~ (t0.c51))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM t0 WHERE ((((('ewミ')<>('l%'))) IS FALSE)); -- 0ms;
SELECT DISTINCT (CAST(t0.c72 AS BLOB) IN (LOWER(DISTINCT NULL))), (~ (t0.c0 COLLATE NOCASE)), DENSE_RANK() OVER () FROM t0 WHERE (CASE WHEN ((0.7288740783776503) ISNULL) THEN (((0.07757549687381948, 0.9663926794945001, NULL, 0.5404054640485662, 0Xffffffffec8ff74e))==(('QJB', '0.9713468375016148', NULL, '', NULL))) END) ORDER BY (((t0.c72)) BETWEEN ((((t0.c51) ISNULL))) AND (((((t0.c72, t0.c72, t0.c0))>=((t0.c0, t0.c72, t0.c51)))))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))IS(CASE t0.c72  WHEN t0.c0 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN '995265953' THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*), (- (ABS(DISTINCT t0.c0))), ((((t0.c51) NOTNULL))LIKE(t0.c51)) FROM t0 WHERE ((((((((((NULL IN ()))OR('1110981118' COLLATE RTRIM)))AND(('?Rl\n' IN (0X1691df18)))))OR(((0.35195020275427036)-(NULL)))))OR((((5.9464064E8)) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT t0.c51, GROUP_CONCAT(TRIM(DISTINCT t0.c72)) OVER (), ((t0.c72) IS TRUE) FROM t0 WHERE (CASE WHEN UPPER('') THEN (((x'', x'', '0.5938491359770722'))>((NULL, NULL, NULL))) ELSE ('L˟HY+]!E' IN ()) END); -- 0ms;
SELECT ALL ((('' IN (1.637631183E9))) BETWEEN (((t0.c51) NOTNULL)) AND ((- (t0.c72)))) FROM t0 WHERE ((NOT (x'')) COLLATE NOCASE) LIMIT -911343053; -- 0ms;
SELECT DISTINCT HEX(CAST(t0.c51 AS NUMERIC)) FROM t0 LIMIT -1; -- 0ms;
SELECT DISTINCT CAST((NOT (t0.c72)) AS NUMERIC), LAST_VALUE((((t0.c0, t0.c51, t0.c0)) NOT BETWEEN ((COALESCE(DISTINCT t0.c0, t0.c0), (('N76UlQL\') NOT BETWEEN (t0.c0) AND (t0.c0)), (((t0.c51, t0.c72, t0.c72)) NOT BETWEEN ((t0.c72, t0.c51, t0.c51)) AND ((t0.c72, t0.c0, t0.c51))))) AND (((~ (t0.c51)), ((t0.c72)*(t0.c72)), ((t0.c0)%(t0.c0)))))) OVER (), CASE WHEN 0.9214644895428894 THEN ((((t0.c0)AND(x'')))OR(t0.c0)) WHEN ((((t0.c72)AND(t0.c51)))AND(t0.c72)) THEN ((((((((t0.c51)AND(t0.c72)))AND(t0.c51)))OR(t0.c72)))OR(t0.c0)) WHEN ((t0.c72) BETWEEN (2.95975637E8) AND (t0.c0)) THEN (((NULL, '-1050726796', t0.c51)) NOT BETWEEN ((t0.c72, t0.c51, t0.c0)) AND ((t0.c0, t0.c0, t0.c72))) ELSE ((t0.c72)!=(0.2078626284185463)) END FROM t0 WHERE ((('q盂') BETWEEN (((x'c098')<(')p'))) AND (NULL))); -- 0ms;
SELECT DISTINCT json_type(t0.c0) COLLATE BINARY FROM t0;SELECT ((((((((((t0.c72) NOTNULL))AND(t0.c0)))OR(t0.c0)))OR(CASE WHEN t0.c51 THEN t0.c72 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c51 END)))OR((- (0x35ad348b)))) FROM t0; -- 0ms;
SELECT DISTINCT ((UNICODE(t0.c0)) NOT BETWEEN (((((((((t0.c0)OR(t0.c72)))AND(t0.c51)))AND(t0.c0)))AND('0.9214644895428894'))) AND (((t0.c51) NOT BETWEEN (t0.c0) AND (NULL)))) FROM t0; -- 1ms;
SELECT ALL CAST(SUM(t0.c72) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT ((TIME(t0.c51, t0.c0, t0.c72)) NOTNULL) FROM t0 LIMIT 344892188; -- 0ms;
SELECT CAST(((NULL)IS(t0.c51)) AS BLOB), (MIN(t0.c0) IN (((((t0.c0)AND(t0.c51)))AND(t0.c72)), ((t0.c0) NOTNULL))), CASE WHEN t0.c0 THEN (((t0.c51)) BETWEEN ((t0.c0)) AND ((t0.c0))) END FROM t0 WHERE (CAST((+ (0.6483624701762105)) AS INTEGER)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c72 IN ())) OVER ( ORDER BY CAST((((t0.c0, t0.c51, t0.c51)) BETWEEN ((t0.c0, t0.c72, t0.c0)) AND ((t0.c0, t0.c72, t0.c72))) AS INTEGER) ASC) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0) NOTNULL) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT (((NOT (t0.c72))) ISNULL) FROM t0; -- 0ms;
SELECT (((((t0.c72, t0.c51, t0.c72)) NOT BETWEEN ((t0.c51, t0.c72, t0.c0)) AND ((t0.c0, t0.c72, t0.c0))))%((+ (t0.c72)))) FROM t0 WHERE ((((('1279734391' IN ())))!=((CAST(0.786908189929671 AS TEXT))))); -- 0ms;
SELECT ROUND(((t0.c51) BETWEEN (t0.c51) AND (t0.c72)), ((t0.c72)>(t0.c0))), (~ (((((((((t0.c51)OR(x'')))AND(t0.c72)))OR(t0.c0)))AND(t0.c72)))), ((((((t0.c51))=((t0.c51)))))<=(((t0.c51 IN (t0.c51))))) FROM t0; -- 0ms;
SELECT ALL ((t0.c0)*(t0.c0)) COLLATE NOCASE FROM t0 NOT INDEXED WHERE ((((~ (-9223372036854775808))) BETWEEN (CASE WHEN '-1372675923' THEN 0.6700036059576172 END) AND (('yh#(B' IN ())))) LIMIT 1660201509 OFFSET 188463500; -- 0ms;
SELECT DISTINCT ((((t0.c72)IS NOT(t0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CAST(t0.c51 AS REAL))) FROM t0 WHERE (TRIM(((0xffffffffa1495db8) IS FALSE))); -- 0ms;
SELECT ALL ((IFNULL(DISTINCT 0xffffffffe0f7b56c, t0.c51))IS(((((((((t0.c72)OR(t0.c72)))OR(t0.c0)))OR(t0.c0)))OR(t0.c51)))) FROM t0 LIMIT -52189623; -- 0ms;
SELECT DISTINCT t0.c51 FROM t0; -- 0ms;
SELECT ALL ((((t0.c51) NOTNULL)) IS FALSE), (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB))) AND ((MIN(t0.c51)))), CASE CAST(t0.c51 AS INTEGER)  WHEN ((t0.c51) ISNULL) THEN LIKE(t0.c51, t0.c51) END FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c72)<>(t0.c72)) COLLATE RTRIM FROM t0 WHERE (((DATE(x'', '', NULL, 0.7115290211537972, 0.2990893320918715))-((('-1162902009') IS TRUE)))); -- 0ms;
SELECT DISTINCT CASE WHEN UNLIKELY(t0.c0) THEN CAST(t0.c51 AS REAL) ELSE ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c51)) END FROM t0 NOT INDEXED WHERE (x''); -- 0ms;
SELECT DISTINCT t0.c51 FROM t0 WHERE (CASE WHEN CAST(x'' AS REAL) THEN (('C>Bc*s5(揠')<>(0.904357973736994)) END); -- 0ms;
SELECT DISTINCT (((t0.c72 IN ())) NOT NULL) FROM t0; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS BLOB)) IS TRUE) FROM t0 GROUP BY t0.c0, ((NULL) BETWEEN (CAST(t0.c72 AS NUMERIC)) AND (((t0.c72)-(t0.c51)))), ((((t0.c0) NOTNULL))<(CASE t0.c72  WHEN t0.c72 THEN t0.c72 WHEN t0.c0 THEN t0.c72 WHEN t0.c51 THEN t0.c0 ELSE t0.c51 END)) HAVING ((ABS(t0.c72)) NOT BETWEEN (AVG(t0.c0)) AND (((t0.c72)<=('0')))); -- 0ms;
SELECT DISTINCT ((t0.c72)>>(t0.c72)), ((t0.c72) BETWEEN (t0.c51) AND (t0.c51)) COLLATE NOCASE, COUNT(((t0.c72) NOTNULL)) OVER () FROM t0 WHERE ((((((NOT (-1355240939)))OR(x'')))OR(json_array_length('tL')))) ORDER BY ((t0.c72)GLOB(QUOTE(t0.c51))) ASC LIMIT 995265953 OFFSET -975538311;SELECT ALL ((UPPER(DISTINCT t0.c0)) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c72)>(t0.c72)))) FROM t0 WHERE (((CASE x''  WHEN x'' THEN '-1476878595' WHEN '[]' THEN x'c73a' WHEN NULL THEN '1983993502' END) NOT BETWEEN (((0.8423282236079359) NOT NULL)) AND ((((NULL))>=(('-1117307450')))))); -- 1ms;
SELECT ALL ((((rtreenode(t0.c72, t0.c0))AND((((t0.c72, t0.c51, x'')) NOT BETWEEN ((t0.c51, t0.c0, t0.c0)) AND ((t0.c0, t0.c72, t0.c0))))))AND((+ (t0.c51)))), '1670803010' COLLATE RTRIM, '' FROM t0 WHERE (((((x'5a28') BETWEEN (NULL) AND ('1601319542')))<(COALESCE(0.20478896494832832, '1191122299')))); -- 0ms;
SELECT ((((CASE t0.c72  WHEN t0.c72 THEN t0.c0 WHEN t0.c72 THEN t0.c51 WHEN t0.c51 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)<(t0.c72)))))OR(t0.c72)) FROM t0 WHERE (((ABS(DISTINCT '-Pg2'))AND(GLOB(0.8526265930355419, x'')))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) IS FALSE)) FROM t0 WHERE ((((0.21066670076432048)) NOT BETWEEN ((TYPEOF(0x3b528da1))) AND (((+ (x'')))))); -- 0ms;
SELECT (~ ((t0.c72 IN (t0.c72)))) FROM t0 WHERE (CAST(CAST(1.28099437E9 AS TEXT) AS INTEGER)) LIMIT -1632881641 OFFSET -1533672455; -- 0ms;
SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((t0.c51)) AND ((t0.c0))))*(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE ((((0.09752396146523101 IN (x'57910801', x'')))AND((((('1565683556')OR('l7T')))OR('-52189623'))))) GROUP BY '1279734391' HAVING CAST('mꎮU)SAj' AS REAL) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((((t0.c72)) NOT BETWEEN ((t0.c72)) AND ((t0.c0))))LIKE(((t0.c51)<=(t0.c0)))), t0.c0, LAST_VALUE(((((((t0.c0)AND(t0.c51)))OR(0xffffffffc5da7779)))GLOB(((t0.c51)>>(t0.c0))))) OVER () FROM t0 WHERE ('-1108682273'); -- 0ms;
SELECT AVG((+ (t0.c72))) OVER (), t0.c0, ((CAST(t0.c51 AS INTEGER))-(((((t0.c72)OR(t0.c0)))AND(t0.c51)))), ((CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c72 THEN t0.c72 WHEN t0.c0 THEN t0.c72 WHEN t0.c0 THEN t0.c72 WHEN t0.c72 THEN t0.c51 END)&(((t0.c0)&(t0.c72)))), CUME_DIST() OVER () FROM t0 WHERE ((0.779013000989472 IN ())); -- 1ms;
SELECT DISTINCT (((+ (t0.c72)))<=((((t0.c72, '', t0.c0))>((t0.c51, t0.c0, t0.c51))))), ((NULL)<=(((t0.c72) BETWEEN (t0.c72) AND (t0.c0)))), CASE t0.c0  WHEN ((t0.c72) IS TRUE) THEN COALESCE(DISTINCT t0.c51, t0.c51, t0.c51, t0.c72) END FROM t0 UNION SELECT PERCENT_RANK() OVER ( ROWS BETWEEN  CURRENT ROW AND ((((t0.c0)-(t0.c0)))IS NOT(CASE t0.c51  WHEN t0.c72 THEN t0.c0 WHEN t0.c0 THEN 0.9145492564980534 WHEN t0.c0 THEN NULL END)) PRECEDING EXCLUDE GROUP), (('0.7115290211537972')>(t0.c51)), ((TOTAL(t0.c51))/((((t0.c72))!=((t0.c0))))) FROM t0;SELECT ALL (((t0.c0))<>((t0.c51))), (~ (CASE WHEN t0.c0 THEN t0.c72 END)), (((t0.c51 IN (t0.c0))) IS TRUE) FROM t0 WHERE (CAST(CAST('533935742' AS BLOB) AS BLOB)) ORDER BY (((+ (t0.c72))) ISNULL)  NULLS FIRST, '-112137222' DESC; -- 2ms;
SELECT ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c51 WHEN t0.c72 THEN x'' END) BETWEEN ((- (t0.c72))) AND (TOTAL(t0.c51))) FROM t0 ORDER BY LOWER(CAST(t0.c72 AS NUMERIC)) LIMIT -1616647292 OFFSET 1326422165; -- 0ms;
SELECT DISTINCT ((t0.c72) IS FALSE) FROM t0; -- 0ms;
SELECT ALL ((((((((t0.c0)AND(t0.c51)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN '' END)))OR(('' IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT (((COUNT(*)))<>((((t0.c0) ISNULL)))) FROM t0; -- 0ms;
SELECT DISTINCT (- (((t0.c51) NOT BETWEEN (t0.c0) AND (t0.c72)))) FROM t0 WHERE ((((0.9310998839979079 COLLATE RTRIM, (x'' IN (x'')), ((((x'c99b')AND(0.374286466747936)))AND(NULL))))<=((((0.8719192534887675) NOTNULL), (((('-444044534')OR(NULL)))AND(-1.202754348E9)), ((NULL) BETWEEN (0x7e06c1f8) AND ('-1540742286')))))) GROUP BY CASE WHEN t0.c72 THEN t0.c0 ELSE t0.c51 END COLLATE NOCASE ORDER BY ((((CAST(NULL AS BLOB))OR((((t0.c51)) BETWEEN ((t0.c72)) AND ((t0.c0))))))AND(t0.c72 COLLATE NOCASE))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c72 THEN t0.c51 END) BETWEEN (t0.c51 COLLATE NOCASE) AND ((t0.c51 IN ()))) FROM t0; -- 1ms;
SELECT ((CAST(t0.c0 AS NUMERIC)) IS FALSE), (((NOT (0.906808244036361)))<=((((t0.c51, t0.c51, t0.c51)) BETWEEN ((t0.c0, '188463500', t0.c51)) AND ((t0.c51, t0.c72, t0.c51))))), (((t0.c72)) NOT BETWEEN ((CASE WHEN t0.c51 THEN t0.c0 ELSE t0.c0 END)) AND ((HEX(x'')))) FROM t0 WHERE ('U>S ' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT t0.c72, (t0.c72 IN ()), ((t0.c51)IS NOT(t0.c51)), ((t0.c72) NOT BETWEEN (t0.c0) AND (t0.c0))) FROM t0 ORDER BY ((((t0.c72) IS FALSE)) IS TRUE) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c51))) AND (((t0.c72) BETWEEN (t0.c0) AND (t0.c72)))) FROM t0 WHERE (STRFTIME((('zt')IS('')), LIKE(0.9617763816788154, 0.4784394383520343, '-'), (((('1596746857')OR(NULL)))OR('w!')))); -- 0ms;
SELECT ALL '5k''[\n(' FROM t0 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (((NULL) NOT BETWEEN ('6-') AND (x''))) AND (-2.63162581E8))); -- 0ms;
SELECT (((t0.c72 COLLATE BINARY))<((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c51 END))) FROM t0 WHERE (CAST(x'5d0c' COLLATE NOCASE AS REAL)); -- 0ms;
SELECT (((((- (t0.c0)))OR(((((t0.c72)AND(t0.c0)))AND(t0.c0)))))OR(CASE t0.c51  WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN t0.c51 END)) FROM t0 WHERE (((NULL COLLATE NOCASE) BETWEEN (CHANGES()) AND (('' IN ())))); -- 0ms;
SELECT ALL (t0.c72 COLLATE RTRIM IN (((t0.c51) NOT NULL))) FROM t0 WHERE ((((~ (0xffffffffc5da7779))) NOTNULL)); -- 0ms;
SELECT ALL (+ (CAST(t0.c72 AS INTEGER))), COUNT(((((t0.c72)OR(t0.c51)))OR(NULL))), DENSE_RANK() OVER () FROM t0 WHERE (((CAST(NULL AS TEXT))<<(((NULL)||('Xa쐨'))))) ORDER BY ((t0.c72)<=(((t0.c0)>(t0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((t0.c0)) NOT BETWEEN (((((t0.c51))==((t0.c72))))) AND ((t0.c51 COLLATE NOCASE))) FROM t0 WHERE (((((((('[]'))!=((0.2363281674094183))))AND(((((x'a065876d')OR('Bv*>ᕻ')))AND('')))))AND(((x'') IS FALSE)))) ORDER BY CAST(((((t0.c0)AND(t0.c0)))OR(t0.c72)) AS TEXT) ASC  NULLS LAST, (((((t0.c0)/('0.6483624701762105'))))>((t0.c51 COLLATE RTRIM)))  NULLS FIRST, ((CAST(t0.c0 AS TEXT))IS(CASE t0.c72  WHEN t0.c51 THEN t0.c0 WHEN t0.c72 THEN t0.c72 WHEN t0.c51 THEN t0.c0 END)) DESC LIMIT 1513235891; -- 0ms;
SELECT DISTINCT ((((((t0.c0) NOT BETWEEN (t0.c72) AND (t0.c72)))AND(-1.15253672E8)))OR(((t0.c51)-(t0.c72)))), CASE t0.c51  WHEN ((t0.c0)<>(t0.c0)) THEN (- (t0.c72)) ELSE t0.c72 COLLATE RTRIM END, NULL FROM t0 WHERE (((CAST('1881831016' AS TEXT))AND((((('-1108682273')AND(0Xffffffff8c8f6157)))AND('^膂]\q '))))); -- 0ms;
SELECT CAST(CAST(t0.c72 AS REAL) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c72)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) FROM t0 WHERE (((0.34489881173143144)>((x'' IN ())))) ORDER BY t0.c0 DESC  NULLS FIRST LIMIT -1534695326 OFFSET 986593453; -- 0ms;
SELECT (((~ (t0.c72))) NOT NULL) FROM t0 WHERE (CASE WHEN ((((0.9214644895428894)AND(NULL)))OR('1036277588')) THEN (- (0.11177505095335083)) ELSE (((0.8719947989881317))<((0.11088889956476677))) END); -- 1ms;
SELECT DISTINCT ((((GLOB(t0.c51, t0.c51))OR(((t0.c51)>(NULL)))))OR('%\nkF')), t0.c72, (- (t0.c0)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ALL (~ (LIKELIHOOD(DISTINCT t0.c51, 0.48101870967428706))) FROM t0 WHERE (((NULLIF(DISTINCT 0.5648335506647274, NULL)) NOT BETWEEN ((+ (NULL))) AND ((+ (1.884635E8))))); -- 0ms;
SELECT DISTINCT CAST('-861068567' AS TEXT), ((t0.c0 IN (t0.c0)) IN ()), SQLITE_COMPILEOPTION_USED(((t0.c0) BETWEEN (t0.c0) AND (t0.c51))), CASE (((((((('s')AND(t0.c0)))AND(t0.c0)))OR(t0.c72)))OR(t0.c0))  WHEN t0.c72 COLLATE NOCASE THEN (('921898224')IS(t0.c0)) END, x'' FROM t0; -- 0ms;
SELECT ALL GLOB(NULL, SUM(t0.c51)) FROM t0 WHERE ((NULL IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((((t0.c51)AND('0.6433007023873839')))AND(t0.c51))) NOTNULL), CAST(((0.43106723342367725)>=(x'c20f')) AS TEXT), (SUM(t0.c72) IN ()), ((((t0.c72) BETWEEN (0xffffffffb91823d2) AND (t0.c72))) ISNULL), t0.c72 FROM t0 WHERE (CASE WHEN (('') NOT BETWEEN ('') AND (NULL)) THEN HEX(NULL) ELSE (0xfffffffffef21f33 IN ()) END) LIMIT -1511546557 OFFSET -1280775004; -- 0ms;
SELECT ALL '77934600', 0.8912362693307166, ((CASE WHEN t0.c51 THEN t0.c72 WHEN t0.c72 THEN t0.c51 WHEN t0.c51 THEN 0xfffffffffef21f33 ELSE t0.c51 END) NOTNULL) FROM t0; -- 0ms;
SELECT ALL json((t0.c0 IN ())), CAST(((t0.c72) NOTNULL) AS TEXT), ((0.003233229866405063)>>(((t0.c72) BETWEEN (t0.c0) AND (t0.c72)))) FROM t0; -- 1ms;
SELECT DISTINCT x'' FROM t0 WHERE ((+ ((~ (''))))); -- 0ms;
SELECT DISTINCT CASE t0.c0 COLLATE BINARY  WHEN 0X5da355b1 THEN CAST(t0.c72 AS BLOB) WHEN -5.8853421E7 THEN ((((((((t0.c72)OR(t0.c72)))OR(x'')))OR(t0.c72)))AND(t0.c72)) WHEN t0.c72 THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) ELSE (((t0.c0))>((t0.c72))) END FROM t0 WHERE ((((0.97176337444333)) BETWEEN (((+ (x'')))) AND ((((((x'1c15')AND('싾盂57~汩s')))OR(x'')))))) GROUP BY ((CAST(t0.c72 AS INTEGER)) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND ((+ (t0.c72)))), (((t0.c72, t0.c0, NULL)) BETWEEN (('FALSE', ((t0.c72)=(t0.c51)), ((t0.c51)==(t0.c51)))) AND ((NULL, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c72, t0.c0, t0.c72)) AND ((t0.c0, t0.c51, '{}'))), ((((t0.c72)OR(t0.c72)))AND(t0.c51))))), x'' LIMIT -1216837507; -- 0ms;
SELECT DISTINCT (((((t0.c0 IN ()))OR(((t0.c72)%(t0.c72)))))AND(((((((((t0.c72)OR(t0.c72)))AND(t0.c51)))OR(t0.c0)))AND(t0.c72)))), CAST((~ (0.40814971252809396)) AS BLOB), NTILE((+ (((t0.c0)<<(NULL))))) OVER () FROM t0 WHERE ((((NULL COLLATE BINARY))<>(((((-1046015982))<((0.47267895811921246))))))) LIMIT 570497092; -- 0ms;
SELECT CASE t0.c72  WHEN ((((t0.c0)OR(t0.c51)))OR(t0.c72)) THEN GROUP_CONCAT(t0.c0) WHEN (t0.c51 IN ()) THEN ((t0.c0)<>(NULL)) WHEN x'' THEN CASE WHEN t0.c72 THEN t0.c72 END END FROM t0; -- 0ms;
SELECT ((((t0.c72 COLLATE RTRIM)OR((t0.c0 IN ()))))OR(t0.c0)), ((((t0.c0)&(t0.c72)))AND((+ (t0.c72)))), (+ (((t0.c0) NOT BETWEEN (t0.c72) AND (t0.c72)))), (((t0.c51)) NOT BETWEEN ((x'')) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))), x'122f' FROM t0 WHERE (((((~ (x''))))<((LIKE('6Sq', 0.9207747252456512, 'f'))))); -- 0ms;
SELECT CHAR(((t0.c51)IS(t0.c51))) FROM t0 ORDER BY CAST(CASE WHEN t0.c72 THEN t0.c51 END AS NUMERIC) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT LEAD(x'', CASE x''  WHEN t0.c51 COLLATE RTRIM THEN CASE WHEN t0.c72 THEN t0.c0 END WHEN 0.15578686613892034 THEN SQLITE_SOURCE_ID() WHEN CASE t0.c72  WHEN t0.c72 THEN t0.c51 WHEN t0.c51 THEN t0.c0 WHEN t0.c72 THEN t0.c72 WHEN t0.c51 THEN t0.c72 WHEN t0.c72 THEN t0.c72 END THEN ((t0.c0) ISNULL) END, ((t0.c0 IN (t0.c72, t0.c72)) IN ())) OVER () FROM t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((227173663) BETWEEN (t0.c72) AND (t0.c0))) NOT NULL), TYPEOF(((t0.c72)/(t0.c0)))) OVER (), TOTAL(MIN(((0.7581989969823005)OR(t0.c51)))), ((COALESCE(t0.c51, t0.c0))IS(CAST(t0.c51 AS TEXT))) FROM t0 WHERE ((((NULL, 0.7302898141540072, x''))=(('뿬㉶2_*}k', NULL, ''))) COLLATE BINARY);SELECT DISTINCT CASE CAST(t0.c51 AS TEXT)  WHEN t0.c51 THEN (+ (t0.c72)) ELSE ((t0.c72)*(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c51 IN ())) ISNULL) FROM t0 ORDER BY ((t0.c0) IS FALSE) COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((t0.c72) BETWEEN (t0.c72) AND (t0.c72)))>(((((t0.c51)AND(x'')))OR(t0.c51)))) FROM t0; -- 0ms;
SELECT DISTINCT (+ (((((t0.c51)OR(0.8354116183452883)))OR(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT '360938985', COALESCE((((0.1732963133757397))!=((t0.c51))), ((((t0.c72)AND(t0.c0)))AND(t0.c72))), ((((((((((t0.c0)<<(t0.c51)))AND(TYPEOF(t0.c51))))AND((t0.c51 IN (t0.c72, t0.c51)))))AND((x'' IN (t0.c72)))))OR(((t0.c72)>=(t0.c72)))) FROM t0 WHERE ((CASE WHEN '' THEN '-1050726796' WHEN 0x65331f01 THEN NULL WHEN 0.4589067078503216 THEN '1253013874' END IN ())); -- 0ms;
SELECT DISTINCT MIN(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) FROM t0 WHERE (CAST(((0xffffffff94bd354c) NOTNULL) AS BLOB)) GROUP BY ((((x'ce4b')||(t0.c0))) IS TRUE); -- 1ms;
SELECT DISTINCT MAX(((((t0.c51)AND(t0.c0)))AND(t0.c51))) FROM t0; -- 0ms;
SELECT DISTINCT SUM((~ (t0.c72))) OVER (), ((((t0.c51)<=(t0.c0))) IS FALSE), (((t0.c72 IN ())) NOT BETWEEN (UNLIKELY(t0.c72)) AND (((t0.c72) NOTNULL))) FROM t0 WHERE (((((((((x'')OR((- (x'')))))AND((('|D') BETWEEN (x'') AND (NULL)))))AND(CASE WHEN x'' THEN 0.9039806403563926 WHEN x'' THEN NULL WHEN NULL THEN 0X25a9a3ae END)))AND(CAST(0.45956660754691603 AS BLOB)))); -- 0ms;
SELECT ALL ((TYPEOF(t0.c51))/((NOT (t0.c0)))), ((((t0.c72) NOT BETWEEN (t0.c0) AND (t0.c0)))IS(CAST(t0.c51 AS REAL))), ((NULL)>>(UNLIKELY(t0.c72))) FROM t0 WHERE ((- (((('2114372088', 0.1456337722704546, NULL)) BETWEEN ((0.9883523329059253, x'', NULL)) AND ((NULL, x'', '[n[')))))) GROUP BY json_valid((((t0.c51, t0.c0, t0.c72, t0.c72, t0.c0)) BETWEEN ((t0.c72, t0.c0, t0.c72, t0.c0, t0.c72)) AND ((t0.c72, t0.c51, t0.c51, t0.c72, t0.c51)))); -- 0ms;
SELECT ALL ((COUNT(*))-(((((t0.c0)AND(t0.c51)))AND(t0.c0)))), ((((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c51))) NOTNULL), (((t0.c51, t0.c51, t0.c0)) NOT BETWEEN ((((t0.c51)<<(t0.c72)), (((t0.c72)) NOT BETWEEN ((t0.c51)) AND ((t0.c72))), 7.79346E7)) AND (((NOT (t0.c0)), CAST(t0.c0 AS NUMERIC), '-1602548074'))) FROM t0; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((((t0.c51) IS TRUE))) AND ((t0.c51))) FROM t0 WHERE (HEX('-1616647292' COLLATE RTRIM)); -- 0ms;
SELECT ALL (((((('1529198989')|(t0.c0)))AND(CAST(t0.c72 AS BLOB))))OR((- (t0.c0)))) FROM t0 WHERE (LOWER((('-52141994')-(NULL)))); -- 0ms;
SELECT ALL ((((t0.c51) ISNULL)) BETWEEN (((((NULL)AND(t0.c72)))OR(t0.c51))) AND (TIME(t0.c72, t0.c72, t0.c72))) FROM t0 WHERE ((((~ ('PF')))||('-1912968914'))); -- 0ms;
SELECT ALL CHANGES() FROM t0; -- 0ms;
SELECT ((CAST(t0.c72 AS INTEGER)) BETWEEN (((t0.c72) NOT BETWEEN (0.09752396146523101) AND (t0.c0))) AND (t0.c0)) FROM t0; -- 0ms;
SELECT ALL (((((t0.c72 IN ()))OR(t0.c0 COLLATE RTRIM)))AND(((t0.c72)>(t0.c0)))), ((-444044534) IS FALSE), t0.c0 FROM t0 UNION SELECT DISTINCT ((t0.c0 COLLATE RTRIM)IS NOT(x'')), ((((((((GROUP_CONCAT(t0.c72))OR((t0.c51 IN (t0.c0, t0.c0)))))OR(((t0.c51) IS FALSE))))OR(t0.c0)))OR(t0.c72 COLLATE BINARY)), GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c72 ELSE t0.c72 END) FROM t0; -- 0ms;
SELECT DISTINCT (+ ((((t0.c51))<((t0.c51))))), ((t0.c0 COLLATE BINARY)<=((t0.c0 IN (t0.c72)))), ((((t0.c0) BETWEEN (t0.c51) AND (t0.c72)))>(((t0.c0)%('')))) FROM t0 NOT INDEXED WHERE (CAST((NULL IN (x'6631')) AS BLOB)); -- 0ms;
SELECT DISTINCT (((+ (0.786908189929671))) NOTNULL), (((t0.c72 IN ()))>(((t0.c51)==(-9.75538311E8)))), (+ ((t0.c51 IN (t0.c72, t0.c0)))) FROM t0; -- 0ms;
SELECT (((((((((((t0.c72, t0.c51, t0.c51))<((t0.c72, t0.c0, t0.c0))))AND(t0.c0 COLLATE BINARY)))OR(((t0.c0) IS FALSE))))OR((t0.c72 IN ()))))AND((t0.c51 IN ()))) FROM t0 WHERE (((((('')+(NULL)), ((0.5938491359770722)AND(NULL)), CAST('' AS INTEGER)))<((x'', CAST('-1511546557' AS TEXT), NULL COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (((t0.c51) BETWEEN (x'') AND (t0.c72)) IN (TYPEOF(t0.c72))), TOTAL(((t0.c0)>=(t0.c0))), TOTAL(((t0.c72) BETWEEN (t0.c72) AND (t0.c72))) OVER () FROM t0 WHERE ((((((NULL, -1540742286, NULL)) NOT BETWEEN ((0.6366563883476423, 0.3245758786980627, '-1365472580')) AND (('970746452', x'bf30', 0.9310998839979079))))AND(LIKELY('0.45956660754691603')))); -- 0ms;
SELECT ALL CASE ((x'')&(t0.c51))  WHEN t0.c0 COLLATE NOCASE THEN LIKELY(t0.c72) ELSE ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c51)) END FROM t0 WHERE ((+ (((0.35182858209481416)LIKE(x''))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c51 THEN t0.c51 ELSE t0.c0 END AS REAL) FROM t0 WHERE (((x'')LIKE((('') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((CASE WHEN t0.c51 THEN t0.c0 WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN t0.c72 WHEN t0.c51 THEN t0.c72 WHEN t0.c72 THEN t0.c72 END)AND((NOT (t0.c51)))))OR(t0.c0)) FROM t0 WHERE (((('', '._', x'')) BETWEEN ((x'3f51', x'', NULL)) AND ((NULL, '0.5648335506647274', NULL))) COLLATE NOCASE); -- 0ms;
SELECT ((CAST(t0.c72 AS NUMERIC)) BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c72))) AND (((t0.c0) ISNULL))) FROM t0 WHERE ((((((((((((NULL))=((NULL))))AND((((NULL, x'', '2011221722', NULL, '1326422165')) NOT BETWEEN ((NULL, 0X2538c1c7, '<5ȳZ', '387137637', -1.280775004E9)) AND ((0.9179469887734973, x'', 0.6518083408453752, '0.05702032780905675', 0.262227014129926))))))AND(CAST(x'' AS INTEGER))))OR((((x'7e1a')) NOT BETWEEN ((NULL)) AND (('-1638868991'))))))OR('J'))) LIMIT -911343053 OFFSET 595510014; -- 0ms;
SELECT CASE WHEN (+ (t0.c72)) THEN UNLIKELY(DISTINCT t0.c51) END, CAST((((t0.c72))<>((x''))) AS BLOB), MIN((t0.c72 IN ()), LOWER(DISTINCT t0.c72), 'Z8Gu1<h*', ((t0.c51) NOTNULL)) FROM t0 WHERE (((NULL COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT ALL t0.c72, CASE (((1.67080301E9)) NOT BETWEEN ((t0.c72)) AND ((t0.c51)))  WHEN ((t0.c72) NOTNULL) THEN (- (t0.c51)) WHEN COUNT(*) THEN CASE t0.c72  WHEN t0.c0 THEN t0.c51 END WHEN (((t0.c0))<=((NULL))) THEN GROUP_CONCAT(t0.c0) ELSE CAST(t0.c51 AS INTEGER) END, CAST(t0.c0 AS TEXT) FROM t0 ORDER BY ((CAST('unoy' AS BLOB)) BETWEEN (CASE WHEN t0.c72 THEN t0.c0 END) AND (t0.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT t0.c0, NTH_VALUE(((x'')IS NOT(((((t0.c72)AND(t0.c72)))OR(t0.c0)))), ((t0.c0)<(t0.c72)) COLLATE NOCASE) OVER (), NTILE(((((t0.c72) IS FALSE))&(CASE WHEN t0.c72 THEN t0.c72 WHEN t0.c51 THEN t0.c51 WHEN t0.c72 THEN t0.c51 WHEN t0.c0 THEN t0.c51 WHEN t0.c72 THEN t0.c72 ELSE t0.c0 END))) OVER () FROM t0 WHERE (CASE ((0.6673983318939886)>('>#'))  WHEN ((('')) BETWEEN ((NULL)) AND ((x''))) THEN (('Wv	뿐s8㉷') BETWEEN (-1.511546557E9) AND ('-274062585')) WHEN (('') BETWEEN (NULL) AND (0.25729479260241306)) THEN '//' WHEN CAST(-1.51278134E8 AS INTEGER) THEN (NOT ('')) ELSE ((1.884635E8)+(NULL)) END); -- 1ms;
SELECT t0.c72 FROM t0 ORDER BY CASE (t0.c51 IN ())  WHEN ABS(t0.c72) THEN ((t0.c72) IS TRUE) END LIMIT -1189965804; -- 0ms;
SELECT DISTINCT (CAST(t0.c0 AS TEXT) IN (((((((((t0.c72)OR(t0.c0)))AND(t0.c0)))AND(t0.c51)))AND(t0.c0)))), ((CAST(t0.c51 AS BLOB)) BETWEEN (((t0.c72)>=(t0.c0))) AND ('-646331352')), LIKELIHOOD(((t0.c51) ISNULL), 0.12462617304156487) FROM t0 WHERE ((((((NULL) NOT BETWEEN (0.28877346430434125) AND (NULL))))<=((CAST('\c{I.ze' AS INTEGER))))) ORDER BY (((t0.c72)) NOT BETWEEN ((t0.c72 COLLATE BINARY)) AND ((((0.5056287141011825)%(t0.c72))))) DESC, (((((((((((((t0.c72 IN ()))AND((((t0.c72, t0.c72, t0.c51)) NOT BETWEEN ((t0.c51, t0.c0, t0.c51)) AND ((t0.c72, t0.c0, t0.c0))))))AND((((x'b644'))>=((t0.c72))))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(UNLIKELY(DISTINCT t0.c51))))OR((t0.c51 IN (t0.c0)))))AND((((t0.c72)) BETWEEN ((t0.c0)) AND ((t0.c51))))) ASC  NULLS LAST, (((t0.c0, t0.c72, t0.c51)) BETWEEN (((NOT (t0.c0)), (((t0.c0))=((t0.c0))), t0.c72 COLLATE RTRIM)) AND ((CAST(t0.c72 AS BLOB), CAST(t0.c72 AS REAL), CASE t0.c51  WHEN t0.c0 THEN t0.c51 ELSE t0.c0 END))) DESC; -- 0ms;
SELECT ALL ((TOTAL(t0.c51)) IS TRUE), ((t0.c51) BETWEEN (NULL) AND (t0.c72)) COLLATE RTRIM, ((((NULL)IS(t0.c51)))>=(CASE t0.c0  WHEN t0.c72 THEN t0.c51 ELSE t0.c0 END)) FROM t0 WHERE (((((0.3245758786980627) NOT BETWEEN ('E&Hm2m') AND (NULL)))|(0.887152726364499 COLLATE RTRIM))) ORDER BY (((((((((t0.c72)OR('-263162581')))OR(t0.c51)))AND(t0.c51)))AND(t0.c51)) IN ()); -- 0ms;
SELECT t0.c51 FROM t0 NOT INDEXED; -- 0ms;
SELECT ((((((((((t0.c72)<<(t0.c51)))OR(CAST(t0.c72 AS INTEGER))))OR(((NULL)%(t0.c0)))))OR((t0.c0 IN (t0.c72)))))OR(TIME(t0.c51, t0.c72, t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT (+ (0.8503670044183265)) COLLATE BINARY, NULLIF(DISTINCT t0.c0, t0.c51) COLLATE NOCASE, t0.c0 FROM t0; -- 0ms;
SELECT ALL t0.c51 FROM t0 WHERE (((0.1298042717328758) NOT BETWEEN ('kK0') AND (x'b5e0')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((NULL) IS TRUE), (((((((((t0.c72)AND(t0.c51)))OR(t0.c72)))OR(1.565683556E9)))OR(t0.c51)) IN (((t0.c51)==(t0.c51)))), (0.9214644895428894 IN ()) FROM t0; -- 0ms;
SELECT COUNT(*) FROM t0 GROUP BY (- (((((t0.c72)OR(t0.c51)))OR(t0.c0)))) ORDER BY (CAST(t0.c0 AS INTEGER) IN (((0.1732963133757397) IS TRUE))), (((t0.c72 IN ('I2ꔾ')))OR(((t0.c72)||(t0.c72))))  NULLS LAST; -- 0ms;
SELECT (((t0.c72)<=(t0.c51)) IN (CASE t0.c0  WHEN t0.c72 THEN 'YU' WHEN t0.c72 THEN t0.c51 WHEN t0.c0 THEN t0.c51 ELSE t0.c72 END)), t0.c72, ((CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c72 THEN t0.c72 WHEN t0.c0 THEN t0.c0 ELSE t0.c51 END)IS(((t0.c51) NOT NULL))) FROM t0 WHERE ((((((((((((('Xa쐨')OR('years')))AND('-1199514153')))AND(x'')))OR(((('-520637076'))<((-0.0))))))OR(((x'') BETWEEN ('') AND (0Xffffffffd109fafe)))))OR(('-1806877054' IN ())))) ORDER BY '84838213' ASC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN ((t0.c0) ISNULL) THEN (NOT (t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT COUNT(t0.c0)) FROM t0 WHERE (((((((((((x'b3f70683')|(0.5738720494663662)))AND((NOT (NULL)))))AND((((NULL, 0.9883523329059253, NULL))>=(('-1189965804', 'r', 0.6700036059576172))))))OR(0.39013447028896064 COLLATE BINARY)))AND(((((0.7075522564861084)AND(x'')))OR(0.7765375844523904))))) GROUP BY (t0.c72 IN ()) HAVING (+ (((((t0.c0)AND(t0.c51)))OR(t0.c51)))); -- 1ms;
SELECT ALL ((((PRINTF(t0.c72))OR(((t0.c51)>=(t0.c51)))))AND(t0.c51 COLLATE BINARY)) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED((('')=('')))); -- 0ms;
SELECT DISTINCT (- (t0.c0 COLLATE NOCASE)), (((((NOT (t0.c51)))OR(TYPEOF(t0.c0))))AND(t0.c0 COLLATE BINARY)), COUNT((+ (t0.c72)) COLLATE RTRIM) OVER ( ORDER BY CASE -5.20637076E8  WHEN TRIM(DISTINCT 0.31990952199259914) THEN t0.c72 COLLATE BINARY ELSE ((t0.c72) BETWEEN (t0.c72) AND (t0.c51)) END ASC), (+ (t0.c51 COLLATE RTRIM)), COALESCE(DISTINCT COALESCE(DISTINCT t0.c51, t0.c72, t0.c0, t0.c0), MIN(t0.c51)) FROM t0 LIMIT -1280775004; -- 0ms;
SELECT DISTINCT (((- (t0.c51))) NOT BETWEEN ('' COLLATE RTRIM) AND (x'' COLLATE RTRIM)) FROM t0 LIMIT 1979973844; -- 0ms;
SELECT DISTINCT ((((t0.c72)IS NOT(t0.c0)))>>(((((t0.c0)OR(t0.c51)))AND(t0.c0)))), (((- (t0.c72))) NOT NULL), '', (((t0.c72)) BETWEEN ((CAST(t0.c51 AS NUMERIC))) AND ((((t0.c72) NOTNULL)))), MIN(t0.c0) FROM t0; -- 0ms;
SELECT NULL, CAST(t0.c72 AS TEXT), NTILE(t0.c72) OVER ( RANGE  CURRENT ROW) FROM t0;SELECT t0.c72 FROM t0; -- 0ms;
SELECT ALL SUM((((t0.c0))<=((t0.c72)))) FROM t0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((t0.c72)%(t0.c0))), ((((('0.6366563883476423')<(t0.c0))))=((CASE WHEN t0.c0 THEN t0.c72 WHEN t0.c0 THEN t0.c51 WHEN t0.c72 THEN t0.c51 ELSE t0.c72 END))), (CASE WHEN t0.c72 THEN t0.c0 WHEN t0.c72 THEN t0.c51 WHEN t0.c51 THEN t0.c0 END IN ()) FROM t0 WHERE (((('T') BETWEEN ('2/\') AND ('519921837')) IN (((NULL)&('2/\'))))) LIMIT 1046890205; -- 0ms;
SELECT DISTINCT (((t0.c51))<((((((((((t0.c51)AND(t0.c51)))OR(t0.c72)))AND(t0.c0)))AND(t0.c51))))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c51 IN ()))IS NOT(t0.c51)) FROM t0 WHERE (((CAST(NULL AS BLOB))||(CAST(0.5926150081095434 AS INTEGER)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((- (t0.c72))) FROM t0; -- 0ms;
SELECT ALL ((((((((json_quote('塮6G柡g4'))AND(((t0.c51) ISNULL))))OR(CASE WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END)))AND(CAST(t0.c0 AS NUMERIC))))OR(COALESCE(t0.c72, 0.802044472570659))) FROM t0; -- 0ms;
SELECT DISTINCT (((+ (t0.c72)))IS NOT((((t0.c51)) NOT BETWEEN ((t0.c72)) AND ((t0.c72))))) FROM t0 WHERE ((((((0.5938491359770722, -1585282243, NULL))>(('', '1232066449', NULL)))) NOT BETWEEN (((('')) BETWEEN ((0.5743445520995941)) AND (('#7')))) AND (CASE WHEN NULL THEN 0Xfffffffff6fbadca WHEN NULL THEN NULL WHEN NULL THEN 'a	' ELSE '' END))); -- 0ms;
SELECT DISTINCT (~ ((+ (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (- (((t0.c0) BETWEEN (t0.c51) AND (-1.00546569E8)))) FROM t0; -- 0ms;
SELECT DISTINCT ((QUOTE('-551518987'))GLOB(json_valid(t0.c51))) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((t0.c51 COLLATE BINARY)=(((t0.c51)/(t0.c72)))) FROM t0; -- 0ms;
SELECT DISTINCT SUM((+ (t0.c51))) OVER () FROM t0; -- 0ms;
SELECT (((t0.c51 IN (t0.c51))) IS TRUE), (((t0.c51) BETWEEN (t0.c0) AND (t0.c0)) IN ()), ((((((((((((t0.c72)AND(t0.c72)))AND(t0.c0)))AND(ABS(DISTINCT t0.c72))))AND(MAX(t0.c72))))AND((((t0.c72))>((t0.c72))))))AND(t0.c51 COLLATE BINARY)) FROM t0 WHERE (((CAST(1.851917023E9 AS INTEGER)) BETWEEN ((((('')AND('M{6/l1')))AND(NULL))) AND ((('') ISNULL)))); -- 0ms;
SELECT ALL (+ (((t0.c0) ISNULL))) FROM t0 WHERE ((((~ (x''))) BETWEEN ((('84838213')+('0.35195020275427036'))) AND (((9.95265953E8) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((json_quote(t0.c51))<(((t0.c0) ISNULL))), t0.c51 COLLATE NOCASE, ((((('-1636209699', x'', t0.c51)) NOT BETWEEN ((t0.c0, '-1511546557', t0.c72)) AND ((t0.c51, t0.c0, t0.c0)))) BETWEEN (t0.c72 COLLATE BINARY) AND (COUNT(t0.c0))), (1036277588 IN ()), (((((t0.c0)/(t0.c0))))>(((((x'')) BETWEEN ((-1824603353)) AND ((t0.c0)))))) FROM t0 WHERE ((NOT (CASE 0x719b59fd  WHEN 0.868960486236535 THEN 'w7FuIꄥꪯ' WHEN 6.31874478E8 THEN NULL WHEN 0X1e91b45a THEN 0.4180081577720165 WHEN x'' THEN '' WHEN x'' THEN '80222104' ELSE 0Xffffffffb778887d END))); -- 0ms;
SELECT DISTINCT ((LOWER(t0.c72))GLOB(((t0.c72) IS FALSE))) FROM t0 WHERE ((((((x'') NOT BETWEEN (0X479473ba) AND (-85840170))))>((CAST(0.6837010296812241 AS BLOB))))) GROUP BY '㽂_灜bMLLe!', CASE WHEN ']d' COLLATE NOCASE THEN x'c290de13' ELSE (- (t0.c72)) END, 1.513235891E9 HAVING t0.c0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE ((CASE x''  WHEN '' THEN '-263162581' END IN ())); -- 0ms;
SELECT ((('0.0', ((t0.c0) NOT BETWEEN (t0.c72) AND (t0.c72)), ((t0.c72)>(''))))>=((SQLITE_COMPILEOPTION_GET(t0.c0), LIKELY(DISTINCT t0.c0), ((((t0.c51)AND(t0.c0)))AND(t0.c0))))) FROM t0 WHERE ((((((- (NULL)))OR(((((((((-687166001)OR(NULL)))AND(0x6d16eb4d)))OR(NULL)))AND(-1119757637)))))AND((((x'')) NOT BETWEEN (('')) AND ((0.9965679651217905)))))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c72 THEN (t0.c72 IN (t0.c72, t0.c51)) ELSE CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN t0.c51 END END FROM t0 GROUP BY ((((((t0.c72)AND(t0.c72)))OR(t0.c72))) IS FALSE), (('d梕fXkGO')*(NULL)), ((CASE WHEN t0.c72 THEN t0.c51 END)<=('0.9145492564980534')) HAVING (t0.c0 COLLATE RTRIM IN ()); -- 0ms;
SELECT DISTINCT CAST(t0.c72 AS TEXT) COLLATE RTRIM, (((((t0.c72, t0.c51, '77934600'))<((t0.c0, t0.c72, t0.c51))))IS(((t0.c72)>(t0.c0)))), ((((t0.c72)||(NULL)))LIKE(CASE WHEN t0.c72 THEN t0.c51 END)) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((1.637631183E9)) AND ((t0.c0))) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL ((SQLITE_COMPILEOPTION_GET(t0.c72)) BETWEEN (((t0.c0)==(t0.c51))) AND (t0.c51)) FROM t0 WHERE ((((((0.7464425712059641, '-617337974', x'')) NOT BETWEEN ((NULL, 'Tk~N^랷a', 0.7661559498757574)) AND ((-1761387692, x'', 0.9263117184565836)))) NOT BETWEEN ((('-1391543557')&(''))) AND (((x'')>>(0.38215611298692387))))); -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(TRIM(DISTINCT t0.c0, t0.c72)), ((CAST(t0.c72 AS NUMERIC))+(IFNULL(x'7cfa', t0.c72))), CAST(t0.c51 AS REAL) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT json_object((+ (t0.c72)), (~ (t0.c51))) FROM t0 WHERE ((((((0Xffffffffc2fc63e0) ISNULL)))>=((UPPER('388513794'))))); -- 0ms;
SELECT ((t0.c0) BETWEEN (t0.c51 COLLATE BINARY) AND ((0.43012276926865023 IN (t0.c0)))), AVG(((t0.c0)LIKE(t0.c51))), ((NULL) IS FALSE) COLLATE BINARY FROM t0; -- 0ms;
SELECT UPPER(DISTINCT 'A') FROM t0 WHERE (COALESCE(DISTINCT '2㫒]qi0qጶ?', '-1117307450') COLLATE RTRIM); -- 0ms;
SELECT ((((t0.c72)OR(t0.c51)))AND(t0.c51)) COLLATE NOCASE FROM t0 WHERE (((((('-1023646752')) BETWEEN (('q쟖 {i')) AND (('1572371432')))) BETWEEN (((x'2b75')*(NULL))) AND ((+ (0.8354116183452883))))); -- 1ms;
SELECT ALL (+ ((t0.c51 IN ()))), t0.c72, MAX(TYPEOF(t0.c0)) FROM t0 WHERE (COALESCE(DISTINCT (('-430015301')<>(0.6428025793770082)), NULL)) GROUP BY IFNULL(t0.c72 COLLATE RTRIM, ((t0.c51) IS TRUE)) HAVING CASE COALESCE(t0.c51, NULL)  WHEN ((t0.c0)<<(NULL)) THEN t0.c72 ELSE ((t0.c72)GLOB(t0.c0)) END; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(t0.c51)))OR(t0.c51)))AND(t0.c72)))AND(t0.c51)))<(CAST(t0.c72 AS TEXT))), ((t0.c51 COLLATE NOCASE) ISNULL), ((CASE t0.c51  WHEN t0.c0 THEN t0.c51 ELSE t0.c72 END)>(CASE t0.c0  WHEN t0.c51 THEN t0.c51 WHEN t0.c72 THEN t0.c0 WHEN t0.c51 THEN t0.c72 END)) FROM t0 WHERE (((((CAST(NULL AS TEXT))OR(')h')))OR(ABS(DISTINCT 0.7819183483246451)))) LIMIT 1036277588 OFFSET -58853421; -- 0ms;
SELECT (((t0.c72, t0.c0, t0.c51, t0.c72, t0.c51)) BETWEEN ((((t0.c0)-(t0.c51)), ((t0.c51)!=(t0.c51)), CAST(t0.c0 AS INTEGER), LOWER(DISTINCT t0.c0), ((t0.c51) ISNULL))) AND ((COUNT(t0.c51), COALESCE(t0.c51, t0.c51), GROUP_CONCAT(2.95975637E8), (~ (t0.c51)), ((t0.c51) BETWEEN (t0.c51) AND (t0.c72))))) FROM t0 WHERE ((('' COLLATE BINARY) BETWEEN (((x'0664')=('*R'))) AND (LIKELIHOOD('2004296084', 0.2820534504047443)))); -- 0ms;
SELECT DISTINCT CASE (+ (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN CAST(t0.c72 AS NUMERIC) WHEN ((t0.c0) NOT BETWEEN (0.8354116183452883) AND (0.9617763816788154)) THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c51) BETWEEN (t0.c0) AND (t0.c72)) THEN CAST(t0.c0 AS REAL) ELSE AVG(t0.c72) END, ((((0.7681009872972525)IS NOT(NULL)))|(TOTAL(t0.c72))), DENSE_RANK() OVER ( ORDER BY ((((NULL COLLATE NOCASE)OR((('-1533672455') NOT BETWEEN (t0.c0) AND (t0.c72)))))AND(((NULL)+(t0.c51))))  NULLS FIRST) FROM t0; -- 0ms;
SELECT DISTINCT '77934600' FROM t0 WHERE ((((('#*')<=(0.6064449410781151))) NOT BETWEEN (((0.9242519087885117) ISNULL)) AND (CASE 0xffffffffee9c28ba  WHEN 'unoy' THEN NULL WHEN 'I' THEN 299730153 WHEN NULL THEN NULL ELSE x'' END))) GROUP BY TYPEOF(DISTINCT ((t0.c72) NOT BETWEEN (t0.c72) AND (t0.c72))); -- 0ms;
SELECT ALL CASE (((t0.c51))<>((t0.c0)))  WHEN -6.46331352E8 THEN (t0.c72 IN (t0.c72)) END FROM t0 WHERE ('-931050231'); -- 0ms;
SELECT CAST('342840674' AS NUMERIC) FROM t0 WHERE (((PRINTF(x'')) NOT BETWEEN ((((x'')) NOT BETWEEN ((NULL)) AND ((7.79346E7)))) AND (LIKELIHOOD('F~njx7%2', 0.8064922730021687)))); -- 0ms;
SELECT CASE CASE WHEN t0.c51 THEN t0.c0 END  WHEN CASE t0.c51  WHEN t0.c72 THEN t0.c0 WHEN t0.c72 THEN '˟cNfFz[' WHEN t0.c51 THEN t0.c51 ELSE x'' END THEN ((x'84d1')/(t0.c0)) END FROM t0 WHERE (CAST((+ (NULL)) AS NUMERIC)) LIMIT 606611387; -- 0ms;
SELECT DISTINCT (NOT (RTRIM(t0.c51))), CASE CASE t0.c51  WHEN 0.34272453458972396 THEN t0.c72 END  WHEN t0.c51 THEN t0.c51 COLLATE NOCASE END, TRIM(DISTINCT (((t0.c72, t0.c72, t0.c51))<>((t0.c72, t0.c0, t0.c0)))) FROM t0; -- 0ms;
SELECT ALL ((((((((((t0.c0) NOT BETWEEN (t0.c51) AND (t0.c51)))AND((t0.c0 IN (t0.c72)))))OR((t0.c51 IN ()))))AND(COUNT(t0.c0))))AND(((t0.c51) IS TRUE))), ((((t0.c0 COLLATE RTRIM)OR(TIME(t0.c51, t0.c72, x'', t0.c0, t0.c0))))AND(((((((((t0.c0)OR(t0.c51)))AND(t0.c0)))AND(t0.c72)))AND(t0.c51)))), LOWER(DISTINCT CAST(t0.c51 AS TEXT)) FROM t0 WHERE (((('1494622761')) BETWEEN ((((NULL)&('995265953')))) AND (((x'' IN ()))))); -- 0ms;
SELECT DISTINCT CASE ((((((((t0.c72)OR(t0.c51)))OR(t0.c51)))AND(t0.c51)))OR(t0.c0))  WHEN ((t0.c0) ISNULL) THEN CASE WHEN t0.c72 THEN t0.c72 END ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END, ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL), (((-1.189965804E9 COLLATE BINARY))>((((t0.c51)&(t0.c0))))) FROM t0; -- 0ms;
SELECT t0.c0, ((COUNT(*)) IS TRUE), CASE WHEN t0.c51 THEN (((-100546569)) BETWEEN ((t0.c0)) AND ((t0.c72))) WHEN (t0.c0 IN (t0.c72)) THEN ((0.3914606038163987) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((t0.c72) NOT BETWEEN (t0.c51) AND (t0.c51)) THEN (+ (t0.c51)) END FROM t0; -- 0ms;
SELECT (((t0.c51 IN ())) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((TYPEOF(t0.c51))AND((((t0.c72)) NOT BETWEEN ((t0.c0)) AND ((x''))))))AND((((((((('')AND(t0.c0)))OR(t0.c72)))AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)LIKE(t0.c72)))))AND((t0.c72 IN ()))) FROM t0; -- 0ms;
SELECT LAG((IFNULL(DISTINCT t0.c72, t0.c0) IN ()), (NOT (CAST(t0.c51 AS INTEGER))), (+ ((((t0.c0))>((t0.c51)))))) OVER () FROM t0 WHERE (CASE '.p黽|l12cb'  WHEN (('r1Cz+	') IS TRUE) THEN 'Pk3XWb^P' COLLATE BINARY END) GROUP BY ((CAST(t0.c0 AS INTEGER)) IS FALSE) HAVING ((t0.c51) NOT BETWEEN ((NOT (t0.c72))) AND ((t0.c72 IN ()))) LIMIT 1191122299 OFFSET 423826638; -- 0ms;
SELECT ALL RANK() OVER () FROM t0 WHERE ((((0x44f9f288) BETWEEN (x'') AND ('kk0')) IN (((((2029188119)AND('ExmTd(')))AND(x'')), x'ee46'))) LIMIT -1189314656; -- 0ms;
SELECT DISTINCT (((((t0.c51, t0.c72, t0.c72)) NOT BETWEEN ((t0.c72, t0.c51, t0.c0)) AND ((t0.c72, t0.c51, t0.c51)))) NOT BETWEEN (CAST(1533514755 AS REAL)) AND (t0.c0 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT ALL ((((t0.c51, t0.c51, t0.c51)) BETWEEN ((t0.c51, t0.c0, t0.c51)) AND ((t0.c72, t0.c0, t0.c0))) IN ()) FROM t0 WHERE (json_array(((NULL) NOT BETWEEN (0.6564423731897676) AND (x'')), ('-1023646752' IN ()))); -- 0ms;
SELECT DISTINCT CAST(t0.c51 AS BLOB) FROM t0 WHERE (((4.65462443E8) BETWEEN ('' COLLATE BINARY) AND ((('218050783') IS FALSE)))); -- 0ms;
SELECT DISTINCT ((t0.c72) NOT BETWEEN ((t0.c51 IN ())) AND ((((t0.c72, t0.c0, t0.c72))!=((t0.c51, '', NULL))))) FROM t0 WHERE (CAST(0Xffffffff89e9f8c9 COLLATE BINARY AS BLOB)); -- 0ms;
SELECT DISTINCT TOTAL(CAST(t0.c0 AS REAL)) OVER () FROM t0; -- 0ms;
SELECT ALL ((t0.c72) BETWEEN (t0.c72) AND (INSTR(t0.c0, t0.c51))) FROM t0 ORDER BY ((SQLITE_VERSION()) IS FALSE) DESC; -- 0ms;
SELECT CAST(t0.c0 AS NUMERIC) FROM t0 WHERE ((~ ((((NULL, x'', NULL)) NOT BETWEEN (('ꨕ\r', NULL, '')) AND (('', 0.7416310831122525, '膂gMLQvᗓ]')))))); -- 0ms;
SELECT ALL TOTAL((((t0.c51)) NOT BETWEEN ((t0.c0)) AND ((t0.c51)))), x'', TOTAL((t0.c51 IN ())) OVER (), ((((((((((t0.c0) IS TRUE))OR(MIN(t0.c72))))AND(COUNT(NULL))))OR(t0.c0 COLLATE RTRIM)))OR(((t0.c51)>(t0.c0)))), CAST(((((((((((((t0.c51)OR(t0.c0)))OR(t0.c51)))OR(t0.c0)))OR(t0.c51)))OR(t0.c72)))OR(0.6700036059576172)) AS NUMERIC) FROM t0 WHERE (CASE NULL COLLATE BINARY  WHEN UNLIKELY('-1589027400') THEN 'years' END); -- 0ms;
SELECT CAST(CAST(t0.c72 AS BLOB) AS NUMERIC), t0.c51, ((CAST('-326109362' AS INTEGER))OR(GROUP_CONCAT(t0.c51))) FROM t0 ORDER BY t0.c72 ASC, (((t0.c72)) BETWEEN ((UNLIKELY(DISTINCT t0.c72))) AND ((((t0.c0) BETWEEN (t0.c51) AND (t0.c51))))); -- 0ms;
SELECT ((t0.c51) NOT NULL) FROM t0 WHERE (((((((x'')-(x'')))OR(((NULL) NOT NULL))))OR(((x'bfdd') BETWEEN (0.9500194567358942) AND ('C싾'))))); -- 0ms;
SELECT DISTINCT t0.c51, LIKELY(DISTINCT ((((t0.c72)OR(t0.c72)))AND(t0.c0))), CAST(((t0.c72)/(t0.c72)) AS BLOB) FROM t0 WHERE ((((x'e7d7' IN (9.00543627E8)))>=((('0.5056287141011825')&('529102386'))))) GROUP BY (((((t0.c51))=((t0.c72))))/(CAST(t0.c51 AS REAL))), CAST(((((((((((((t0.c0)OR(t0.c72)))OR(t0.c0)))OR(t0.c51)))OR(t0.c72)))AND(t0.c51)))OR(t0.c72)) AS TEXT), ((((((t0.c0)AND(t0.c51)))AND(((t0.c72) NOTNULL))))OR(t0.c0)); -- 0ms;
SELECT ALL CASE WHEN '640445422' THEN CAST(t0.c72 AS REAL) ELSE CAST(t0.c51 AS BLOB) END FROM t0 NOT INDEXED INTERSECT SELECT ALL CASE TRIM(DISTINCT t0.c0)  WHEN MAX(t0.c72) THEN (NOT (t0.c72)) WHEN ((t0.c51) ISNULL) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c72)) WHEN t0.c72 COLLATE RTRIM THEN 0.856958896581894 ELSE (((t0.c72)) BETWEEN ((t0.c0)) AND ((t0.c51))) END FROM t0 LIMIT 661903997; -- 1ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c72))!=(CAST(t0.c72 AS BLOB))), ((x'') IS TRUE), SUM(CASE t0.c51  WHEN t0.c0 THEN '-1189600302' WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN t0.c72 ELSE t0.c72 END) OVER () FROM t0; -- 0ms;
SELECT CAST(t0.c72 AS NUMERIC) COLLATE RTRIM FROM t0; -- 0ms;
SELECT ROUND(CASE t0.c0  WHEN t0.c72 THEN t0.c0 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c72 WHEN t0.c72 THEN t0.c72 WHEN t0.c51 THEN t0.c72 WHEN t0.c72 THEN t0.c51 WHEN t0.c51 THEN t0.c51 ELSE t0.c72 END, ((t0.c51)-(t0.c72))), t0.c72, COALESCE(t0.c0 COLLATE NOCASE, t0.c0, ((t0.c51) BETWEEN (t0.c0) AND ('1p')), CASE WHEN t0.c72 THEN t0.c0 ELSE t0.c72 END, CAST(t0.c51 AS TEXT), (t0.c0 IN ())) FROM t0; -- 0ms;
SELECT TYPEOF(CAST(t0.c0 AS REAL)) FROM t0; -- 0ms;
SELECT ((((t0.c72)*(t0.c51))) NOT BETWEEN ((+ (x''))) AND (NULL)) FROM t0 LIMIT -1487823718; -- 0ms;
SELECT CAST(((t0.c72)>>(t0.c0)) AS TEXT) FROM t0; -- 0ms;
SELECT t0.c72 FROM t0 WHERE ((CASE '놫M↿pZꢸ畩7'  WHEN 314839181 THEN '' WHEN 0.8710068899438357 THEN 0.18790585552489059 WHEN NULL THEN '1401103136' END IN ())); -- 0ms;
SELECT (CASE t0.c0  WHEN t0.c0 THEN t0.c51 ELSE t0.c51 END IN ()) FROM t0 LIMIT -1428091343; -- 0ms;
SELECT (- (t0.c0)) COLLATE BINARY FROM t0 WHERE (((((((((NULL)OR(NULL)))AND(NULL)))OR('1116523721')))OR(((0.9214644895428894)GLOB('sb'))))); -- 0ms;
SELECT ((CAST(t0.c51 AS TEXT))!=((((x''))<=((0.8020682670216401))))), ((((t0.c51)AND((NOT (t0.c0)))))AND(((t0.c51)<<(t0.c51)))), (((t0.c72)) BETWEEN ((CASE t0.c0  WHEN t0.c51 THEN t0.c72 WHEN t0.c51 THEN t0.c0 WHEN t0.c72 THEN t0.c0 ELSE t0.c51 END)) AND (((('657662661')+(t0.c0))))) FROM t0 WHERE (CAST(CASE WHEN NULL THEN 's0oJ' END AS TEXT)); -- 0ms;
SELECT DISTINCT (((+ (t0.c72)))>(x'')) FROM t0 WHERE (STRFTIME(CASE x''  WHEN x'' THEN NULL END, (+ ('_')), (('1828364349') NOTNULL), NULL COLLATE NOCASE, (((('1135529012')AND(x'')))AND(0.192037397382111)))); -- 0ms;
SELECT (((((((((((t0.c0))!=((t0.c51))))OR((((t0.c72, t0.c51, t0.c51)) BETWEEN ((t0.c51, NULL, t0.c0)) AND ((t0.c51, '0.10931797595321968', t0.c72))))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c72)))))AND(((t0.c51) IS FALSE))))AND(((((t0.c72)OR(t0.c51)))OR(t0.c51)))) FROM t0 WHERE ((('}2fR-(\r' COLLATE NOCASE)&(0.22774045180707136))); -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c51))<((t0.c0))) THEN ((t0.c0) NOT BETWEEN (t0.c51) AND (t0.c51)) WHEN LIKELIHOOD(DISTINCT t0.c0, 0.8174131336214266) THEN ((t0.c72) NOT BETWEEN (t0.c51) AND (t0.c51)) WHEN (((t0.c72)) NOT BETWEEN ((t0.c72)) AND ((t0.c0))) THEN t0.c51 COLLATE NOCASE END FROM t0 WHERE (((TRIM(DISTINCT x'78f3')) BETWEEN (LENGTH('-100546569')) AND (CAST(0.9041516750465611 AS TEXT)))); -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN ((t0.c51)) AND ((((t0.c72)<<(t0.c0))))) FROM t0 WHERE (CASE WHEN (((x'')) NOT BETWEEN ((NULL)) AND ((x''))) THEN CASE ''  WHEN x'' THEN 0.5325278942253506 ELSE 0.296430575057567 END ELSE ((x'') IS FALSE) END); -- 0ms;
SELECT DISTINCT ((((((((t0.c51)OR(t0.c0)))AND(t0.c51)))AND(NULL)))OR(t0.c0)) COLLATE BINARY COLLATE BINARY FROM t0 WHERE ((((0.4270211586485748)) BETWEEN (((((x'')) BETWEEN ((0.03964086159661373)) AND ((1570985393))))) AND ((((NULL) NOTNULL))))); -- 0ms;
SELECT DISTINCT MIN((NOT (0.9713468375016148))) FROM t0 GROUP BY (t0.c51 COLLATE BINARY IN ()), ((((t0.c72) BETWEEN (t0.c72) AND (t0.c51)))/(t0.c51)), ((t0.c51 COLLATE NOCASE)<=(CAST(0x67f9e345 AS REAL))), ((((t0.c72) NOT NULL))%((((t0.c51, t0.c0, t0.c0)) BETWEEN ((-37361174, t0.c51, t0.c51)) AND ((t0.c51, t0.c51, t0.c72))))), (((+ (t0.c51)))%(ABS(t0.c0))) ORDER BY ((((((t0.c72)OR(0.9539947231071753)))OR('汩^/')))AND(((((((((((((((((t0.c72)OR(t0.c72)))AND(t0.c72)))AND(NULL)))OR(t0.c72)))AND(t0.c51)))OR(t0.c0)))AND(t0.c72)))OR(t0.c0)))) DESC, ((((t0.c0)/(t0.c51)))>=((+ (t0.c72))))  NULLS LAST; -- 0ms;
SELECT DISTINCT AVG((t0.c0 IN ())) OVER (), NTH_VALUE((((t0.c0)) NOT BETWEEN ((((t0.c72) BETWEEN (t0.c72) AND (NULL)))) AND ((t0.c72 COLLATE RTRIM))), (((((((t0.c72, t0.c72, t0.c0)) BETWEEN ((t0.c0, t0.c72, t0.c72)) AND ((x'', t0.c0, t0.c0))))AND(((t0.c51)>>(t0.c51)))))AND(t0.c51 COLLATE NOCASE))) OVER (), COALESCE(DISTINCT LIKELIHOOD(t0.c72, 0.5164083669286171), MIN(t0.c72), (t0.c0 IN ()), ((t0.c0) NOT NULL)) FROM t0 GROUP BY CAST(t0.c72 AS INTEGER);SELECT MAX(t0.c72 COLLATE BINARY COLLATE BINARY) FROM t0 WHERE ((NOT (((0.9164350550021166)IS(NULL))))); -- 0ms;
SELECT JULIANDAY((NOT (t0.c72)), (t0.c0 IN ()), (NULL IN ())) FROM t0; -- 0ms;
SELECT DISTINCT COUNT((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c72)))) FROM t0 GROUP BY (t0.c51 IN ()), CASE WHEN (- (t0.c0)) THEN json_extract(t0.c72, t0.c72) ELSE (NOT (t0.c51)) END, LIKELIHOOD(t0.c0, 0.4928622131455096); -- 1ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((json_object(t0.c72, t0.c51))) AND ((t0.c51 COLLATE BINARY))) FROM t0 WHERE (((1539436103 COLLATE BINARY) ISNULL)) GROUP BY CASE WHEN (~ (t0.c0)) THEN 0.07087095709631686 WHEN (((t0.c72)) NOT BETWEEN ((t0.c72)) AND ((t0.c72))) THEN CASE t0.c51  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c72 AS NUMERIC) THEN t0.c0 WHEN x'' THEN 'N76UlQL\' WHEN rtreenode(t0.c51, t0.c72) THEN CAST(t0.c51 AS BLOB) ELSE ((t0.c0)=(t0.c0)) END, CASE t0.c72  WHEN t0.c0 THEN t0.c72 WHEN t0.c0 THEN t0.c0 WHEN t0.c72 THEN t0.c72 WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END COLLATE NOCASE, t0.c72; -- 0ms;
SELECT DISTINCT (((((t0.c51)<(t0.c72))))<=((((t0.c0) BETWEEN (t0.c51) AND (t0.c51))))), (((t0.c51)) NOT BETWEEN (((+ (t0.c51)))) AND ((CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c0 WHEN t0.c51 THEN t0.c72 ELSE t0.c51 END))), CAST(t0.c51 AS REAL) FROM t0; -- 0ms;
SELECT AVG((t0.c51 IN ())) OVER (), ((((t0.c51)%(t0.c0)))*((((t0.c51))<=((t0.c72))))), ABS(DISTINCT ((t0.c72) NOT BETWEEN ('218050783') AND (t0.c72))) FROM t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE ((- (CASE WHEN NULL THEN 0.4304806900175917 ELSE '	Yy^' END))); -- 0ms;
SELECT DISTINCT (((t0.c72))>=((((t0.c72) NOTNULL)))) FROM t0; -- 0ms;
SELECT ((COUNT(*))==((NOT (t0.c0)))) FROM t0 ORDER BY ((t0.c72 IN ()) IN ()) ASC; -- 0ms;
SELECT DISTINCT ((0.5347729539567316) BETWEEN (TRIM(DISTINCT t0.c72)) AND (t0.c51)), LAG((((((((t0.c0))<=((x''))))AND((t0.c72 IN (t0.c0, NULL, t0.c51)))))OR((- (t0.c72)))), CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)GLOB(t0.c72)) ELSE (t0.c51 IN (t0.c72, t0.c0)) END, CAST(x'770e' AS INTEGER)) OVER (), ((((- (t0.c0))))=((((t0.c72)<>(t0.c0))))) FROM t0 WHERE ((((((NULL)<<(NULL)), (('') BETWEEN (x'') AND (x'b09a81a9')), ((('oVbfF뻳')) BETWEEN ((x'')) AND (('U')))))=((CASE 1.124133629E9  WHEN '' THEN NULL ELSE x'' END, UNLIKELY('Y7'), ((((NULL)AND(NULL)))AND('vCw揠摽7 ')))))); -- 0ms;
SELECT ALL ((((CASE NULL  WHEN NULL THEN t0.c0 ELSE t0.c72 END)OR(x'2f88' COLLATE RTRIM)))AND(((t0.c0)GLOB(t0.c72)))) FROM t0 GROUP BY (((SUBSTR(t0.c0, t0.c72)))==((CASE WHEN t0.c51 THEN t0.c72 ELSE t0.c72 END))) ORDER BY (+ (t0.c0 COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT CASE (t0.c51 IN (NULL, t0.c51, t0.c0))  WHEN t0.c0 THEN (t0.c72 IN ()) END, LAST_VALUE(0.5536881934697114) OVER (), ((CAST(t0.c72 AS REAL))-((((t0.c72)) BETWEEN ((t0.c51)) AND ((t0.c0))))) FROM t0; -- 0ms;
SELECT ALL ((t0.c0 COLLATE BINARY) ISNULL) FROM t0 LIMIT 1977125924; -- 0ms;
SELECT DISTINCT SUM(0.6641206573714816) FROM t0; -- 0ms;
SELECT DISTINCT '}2fr-(\r' FROM t0 WHERE (CAST(('_md3!2.' IN ()) AS INTEGER)) LIMIT 1472849669 OFFSET -594909833; -- 0ms;
SELECT DISTINCT NTILE(((t0.c51 COLLATE BINARY) BETWEEN (((((((((t0.c72)AND(t0.c51)))OR(t0.c51)))AND(t0.c51)))AND(t0.c0))) AND (((t0.c0)=(t0.c72))))) OVER () FROM t0 WHERE (CAST(SQLITE_VERSION() AS TEXT));SELECT DISTINCT 0.3372664139553361 FROM t0 GROUP BY (((((((t0.c72)OR(t0.c0)))AND(t0.c0)), (+ (t0.c72)), t0.c72))==((((((t0.c51)AND(t0.c0)))OR(t0.c72)), NULLIF(DISTINCT t0.c72, t0.c51), ((t0.c0)*(t0.c51))))); -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c0)))OR(t0.c72)))+((((t0.c51, 0.8688597418161019, t0.c51)) BETWEEN ((t0.c72, t0.c72, t0.c72)) AND ((t0.c51, t0.c51, t0.c72))))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c51)) BETWEEN (((((t0.c72))<=((t0.c72))))) AND ((((t0.c0)+(t0.c0))))) FROM t0 WHERE (json_array_length(('tPi膂2?/y' IN (0.597480652315187)))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c72)||(t0.c0))) OVER () FROM t0 WHERE ((((0xffffffffa861521f) NOT BETWEEN (x'8a05') AND (NULL)) IN ())) LIMIT -1355240939; -- 0ms;
SELECT DISTINCT (t0.c72 COLLATE BINARY IN ()) FROM t0 WHERE (((CAST(2.18050783E8 AS TEXT))AND((('''*IE') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((t0.c72) ISNULL))&(((((t0.c0)OR(t0.c72)))AND(t0.c51)))) FROM t0 WHERE (CAST(((NULL) NOTNULL) AS BLOB)); -- 0ms;
SELECT ((((((((((((((t0.c0)AND('''k')))OR(t0.c0)))OR(t0.c51)))OR(t0.c72)))AND(t0.c51)))OR(t0.c0))) IS FALSE), TOTAL(((t0.c51) BETWEEN (t0.c51) AND (t0.c51))), ROW_NUMBER() OVER (), CASE WHEN ((t0.c0)LIKE(t0.c51)) THEN CAST(t0.c72 AS TEXT) ELSE t0.c72 END, SUM((t0.c51 IN ())) COLLATE NOCASE FROM t0 WHERE (((('')) NOT BETWEEN ((CASE WHEN 0.7890857456783434 THEN x'' END)) AND (((((x'4229'))==((x''))))))); -- 1ms;
SELECT ((t0.c51 IN ()) IN (TRIM(t0.c51))), CASE t0.c72 COLLATE BINARY  WHEN (- (t0.c51)) THEN MIN(t0.c72) WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN t0.c51 THEN t0.c51 ELSE NULL END WHEN t0.c72 THEN t0.c72 COLLATE NOCASE ELSE ((t0.c0)&(t0.c51)) END, t0.c0 FROM t0 WHERE ((~ (((NULL) BETWEEN (NULL) AND (0.4589067078503216))))); -- 0ms;
SELECT GROUP_CONCAT(t0.c51) FROM t0 WHERE (((((x'')>>(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT (((CASE WHEN t0.c0 THEN t0.c51 ELSE t0.c0 END))>=((GROUP_CONCAT(t0.c72)))) FROM t0 WHERE (((0.09752396146523101 COLLATE RTRIM) NOTNULL)); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0 WHERE ((((((0.3507702731875757)AND(x'b5c7')))OR(x'')) IN ())); -- 0ms;
SELECT CASE NULL  WHEN ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c72)) THEN json_array_length(t0.c51, t0.c51) WHEN t0.c0 THEN (+ (t0.c51)) WHEN UNLIKELY(DISTINCT t0.c51) THEN CAST(t0.c51 AS REAL) END FROM t0 WHERE ((UNLIKELY('') IN ())); -- 0ms;
SELECT DISTINCT (('-1382788247')|(((t0.c51) NOT BETWEEN (t0.c0) AND (t0.c72)))) FROM t0 WHERE (NULL); -- 0ms;
SELECT LAG(']늜', CAST(((t0.c0) NOT NULL) AS REAL), ((((CAST(t0.c72 AS BLOB))OR(CAST(t0.c0 AS INTEGER))))AND(((t0.c51)LIKE(t0.c0))))) OVER (), (t0.c72 IN ()), AVG(((t0.c0) ISNULL)) FILTER(WHERE ((((t0.c51) IS TRUE))GLOB(x''))) OVER () FROM t0 WHERE (CAST(NULL AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT FIRST_VALUE(t0.c0 COLLATE NOCASE) OVER () FROM t0 GROUP BY ((((t0.c72) BETWEEN (t0.c72) AND (t0.c51)))IS(t0.c0 COLLATE NOCASE)), 0.08266651371340883, CASE WHEN ((((t0.c0)OR(t0.c72)))AND(t0.c0)) THEN ((x'')>=(t0.c72)) END HAVING ((((t0.c0))!=((t0.c72))) IN ()); -- 0ms;
SELECT TYPEOF(DISTINCT ((t0.c72) NOTNULL)), FIRST_VALUE(QUOTE(NULL)) OVER (), ((((((((x'')OR(t0.c0)))OR(t0.c51)))OR(((t0.c51)%(t0.c72)))))AND(t0.c72 COLLATE BINARY)) FROM t0 WHERE (((CASE NULL  WHEN NULL THEN -2092082401 END) IS TRUE)) ORDER BY CASE ((t0.c51)-('595510014'))  WHEN ((t0.c51)!=(t0.c72)) THEN CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c72 THEN t0.c0 WHEN t0.c72 THEN t0.c72 ELSE x'017a' END ELSE (((t0.c51))<=((t0.c72))) END  NULLS LAST; -- 1ms;
SELECT DISTINCT SUM((NOT (t0.c51)) COLLATE BINARY), (((t0.c72, 0.12927901222891391, t0.c72)) BETWEEN ((((((t0.c72)OR(t0.c72)))OR(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c51) AND (t0.c72)), ((((t0.c72)OR(t0.c51)))AND(1.28099437E9)))) AND ((((((t0.c0)OR(t0.c72)))OR(t0.c51)), '', ((((((((t0.c51)OR(t0.c0)))OR(t0.c72)))AND(t0.c72)))AND(t0.c51))))), TOTAL(((t0.c0)>=(NULL))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c0)&(t0.c51))))) FROM t0; -- 0ms;
SELECT ALL TOTAL(CAST(t0.c51 AS INTEGER)) FROM t0; -- 0ms;
SELECT ALL (((((t0.c72)OR(0X6a8fa7c4)))OR(t0.c72)) IN (((((t0.c72)AND(t0.c72)))AND(t0.c72)))) FROM t0 WHERE (CAST((('')<(1917868404)) AS TEXT)); -- 0ms;
SELECT (~ (t0.c72)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ((((COALESCE(DISTINCT t0.c72, t0.c72))OR(t0.c72)))AND(t0.c0 COLLATE BINARY)) FROM t0; -- 1ms;
SELECT ((t0.c0)!=((((t0.c72, t0.c0, t0.c51, t0.c0, t0.c0))!=((t0.c51, t0.c0, t0.c0, t0.c51, t0.c51))))) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c72  WHEN t0.c0 THEN t0.c0 ELSE t0.c51 END)<<((((t0.c72, t0.c0, t0.c0, t0.c72, t0.c72))=((t0.c51, t0.c72, t0.c51, t0.c0, t0.c51))))) FROM t0; -- 0ms;
SELECT (+ (t0.c51)) COLLATE BINARY COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT ((x'') NOT NULL), TOTAL(((t0.c51)<=(t0.c72))) OVER (), NULL FROM t0 ORDER BY CAST(t0.c0 AS REAL) ASC  NULLS FIRST LIMIT -911343053; -- 0ms;
SELECT CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c51)) AND ((t0.c0))) THEN ((t0.c51)&(t0.c51)) END, ((CAST(t0.c72 AS INTEGER)) NOT BETWEEN (CASE WHEN t0.c72 THEN t0.c51 ELSE t0.c72 END) AND ((((t0.c0))==((t0.c51))))), AVG(CASE t0.c0  WHEN t0.c72 THEN t0.c51 END) FROM t0 WHERE (CASE 'nUEX'  WHEN ('1124133629' IN ()) THEN (0.7226560447732897 IN ()) END); -- 0ms;
SELECT (~ (LIKELIHOOD(DISTINCT t0.c0, 0.8231479583788184))) FROM t0 WHERE (LOWER(DISTINCT (~ ('詋5')))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((x'')OR((NOT (t0.c51)))))OR((t0.c51 IN ()))) FROM t0 WHERE (0.7644406664988268 COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((((t0.c0)OR(t0.c72))))==((8.88973055E8))) FROM t0 WHERE ((((- (x'')))+(('䞢9h骐<D1' IN ('-1974446860'))))) GROUP BY x'', (((+ (t0.c0)))-(((t0.c0)LIKE(t0.c0)))), ((CASE 0.2780098017119931  WHEN t0.c72 THEN t0.c72 END) IS TRUE); -- 0ms;
SELECT DISTINCT 0.44708270164251496, SUM(CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c0 END COLLATE BINARY) OVER ( ORDER BY (x'18d6' COLLATE BINARY IN ()) ASC  NULLS LAST), (((t0.c0))<((((((t0.c0)AND(t0.c0)))AND(t0.c72))))) FROM t0 WHERE (((((((((((0.663281748308185) BETWEEN ('') AND (-402179931)))OR((('/H|/TH))')*(NULL)))))OR(((('')) BETWEEN ((x'1e81')) AND ((x'9128'))))))OR('Z~')))OR(((0.6650783950043502) BETWEEN (NULL) AND (-1.189600302E9))))) LIMIT 98025464 OFFSET -100546569; -- 0ms;
SELECT ALL (NOT ((+ (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c51)OR(t0.c51)))OR(t0.c51)))AND(t0.c0)))OR(t0.c72))) NOT NULL) FROM t0 WHERE ((~ (ABS('1290693635')))); -- 0ms;
SELECT DISTINCT (((((t0.c72))==((t0.c51)))) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT -38835255 FROM t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ROWS  CURRENT ROW) FROM t0 NOT INDEXED; -- 0ms;
SELECT '1124133629' FROM t0 WHERE (((NULL) NOT BETWEEN ((0.972203395496104 IN ())) AND (CAST('膂gmlqvᗓ]' AS BLOB)))); -- 0ms;
SELECT CAST(CAST(t0.c51 AS BLOB) AS NUMERIC) FROM t0 WHERE (((((NULL) NOTNULL))%(((x'')<(1.326422165E9))))); -- 0ms;
SELECT ALL (((- (t0.c51)))/(((t0.c72) BETWEEN (t0.c0) AND (t0.c51)))) FROM t0 WHERE (((CASE '^#싲 䡪&	d'  WHEN NULL THEN 'fO' END) IS TRUE)) ORDER BY ((CAST(t0.c72 AS NUMERIC))AND(HEX(t0.c51)))  NULLS LAST; -- 0ms;
SELECT (+ (t0.c51)), RANK() OVER (), (((t0.c72, 'BUkUdx', t0.c51)) NOT BETWEEN ((t0.c0, t0.c72, t0.c0)) AND ((t0.c72, t0.c51, t0.c51))) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT t0.c72, ((MAX(t0.c0))-((t0.c51 IN ('0.45581885231812125')))), ((((((t0.c51) BETWEEN (t0.c0) AND (t0.c0)))OR(CASE x'5bec'  WHEN t0.c72 THEN t0.c0 ELSE t0.c0 END)))OR(CAST(t0.c72 AS REAL))), COUNT(*) OVER (), CASE t0.c0  WHEN t0.c72 THEN t0.c51 END COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT CAST((~ (t0.c51)) AS INTEGER) FROM t0 WHERE (NULL); -- 0ms;
SELECT TRIM(((t0.c51)GLOB(t0.c51))) FROM t0 WHERE (UPPER((0Xffffffffce77bdfd IN ()))); -- 0ms;
SELECT DISTINCT MIN(LOWER(t0.c0)) FROM t0 ORDER BY json(((((t0.c0)AND(0x4c473277)))OR(t0.c72))) ASC  NULLS FIRST; -- 0ms;
SELECT (((t0.c0) IS TRUE) IN ()) FROM t0; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((COUNT(*))) AND ((SUM(t0.c0)))), t0.c0, COUNT('995265953') FROM t0 EXCEPT SELECT DISTINCT ((0xffffffffb778887d)>>(((t0.c51) NOT BETWEEN (t0.c0) AND (t0.c51)))), (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c72 END))=((GROUP_CONCAT(t0.c0)))), t0.c51 FROM t0 WHERE (((CASE 'k'  WHEN -791481260 THEN x'' END)*(((((((((0.21066670076432048)AND(x'')))AND('1580015396')))AND('1348668480')))OR(0.08934488825263409))))) GROUP BY (((t0.c72) IS TRUE) IN (((t0.c0)IS NOT(t0.c0)))), (NOT (CAST(t0.c72 AS NUMERIC))), (((t0.c51, t0.c0, t0.c51)) BETWEEN ((t0.c51, CAST(t0.c0 AS REAL), CAST(t0.c51 AS INTEGER))) AND (((+ (t0.c0)), (~ (t0.c0)), x'e4c9' COLLATE NOCASE))) HAVING (- ((((t0.c0))>=((t0.c51))))); -- 0ms;
SELECT DISTINCT ((json_extract(x'c497', t0.c51))+(UPPER(DISTINCT 0X338e0905))), t0.c0, ROW_NUMBER() OVER () FROM t0;SELECT DISTINCT LAG(CASE WHEN t0.c51 THEN ((t0.c0) ISNULL) ELSE ((t0.c0) IS FALSE) END, CAST(((t0.c0)AND(t0.c51)) AS BLOB), load_extension(((t0.c51) NOT NULL))) OVER () FROM t0 GROUP BY ((t0.c72) NOT NULL) COLLATE NOCASE HAVING '95742796';SELECT ALL CASE WHEN -1.280775004E9 THEN ((x'd12e')*(t0.c51)) ELSE AVG(t0.c51) END FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0) BETWEEN (t0.c51) AND (t0.c0))) FILTER(WHERE ((((((t0.c72) NOT BETWEEN (t0.c51) AND (t0.c72)))OR(((t0.c0)<<(t0.c51)))))AND((((t0.c0))==((t0.c0)))))) OVER ( ORDER BY x''  NULLS FIRST) FROM t0 WHERE ((((((2.18050783E8) NOT BETWEEN (NULL) AND (NULL))))<>((0.6338497953492839 COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (((t0.c72)>>(t0.c0)) IN ()) FROM t0 WHERE (((NULL COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 ORDER BY CAST(((t0.c51)IS NOT(t0.c51)) AS INTEGER) DESC; -- 0ms;
SELECT DISTINCT (+ (CASE t0.c72  WHEN t0.c0 THEN t0.c72 WHEN t0.c72 THEN 'j/YA' WHEN t0.c72 THEN 9.21898224E8 END)), 0.5269390015065208, GROUP_CONCAT((t0.c0 IN (t0.c72))) OVER () FROM t0 WHERE (CASE WHEN (('s0oJ') NOTNULL) THEN 'c6' COLLATE RTRIM WHEN ((x'de76') NOT NULL) THEN x'' COLLATE NOCASE WHEN '-610901275' COLLATE NOCASE THEN NULL ELSE NULL END) ORDER BY (((t0.c0))<=((t0.c0))) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT ((((t0.c51 IN ())))<=((MIN(t0.c72)))) FROM t0 WHERE (((('-326109362')) NOT BETWEEN ((((((x'14dc')AND(0.7902503154544106)))AND('L\rc')))) AND ((((-8.71832132E8) IS FALSE))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(NULL)) NOT NULL) FROM t0 WHERE (((CAST('1279734391' AS BLOB))>=(0Xffffffff968723d0 COLLATE NOCASE))) ORDER BY json_object(CAST(t0.c51 AS INTEGER), (((t0.c51, t0.c0, t0.c0))>((t0.c72, t0.c72, t0.c72)))) ASC; -- 0ms;
SELECT DISTINCT (((((t0.c51, t0.c51, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c51)))) ISNULL) FROM t0 WHERE (((((((((0.6956745437910947)OR(CASE WHEN '' THEN NULL END)))AND((((('HC鉔522z^')OR(x'')))OR(NULL)))))OR(CASE ''  WHEN NULL THEN x'' WHEN NULL THEN 0Xfffffffff49af07d WHEN '^ynl娨' THEN x'' ELSE -624992797 END)))OR(((((x'91f4a6b6')AND(-1.936760489E9)))OR(x'7564'))))); -- 0ms;
SELECT ALL ((COALESCE(DISTINCT '-1355240939', t0.c51)) NOTNULL), ((((t0.c0) NOT NULL))|(CASE t0.c51  WHEN 0.18320682417793321 THEN t0.c51 ELSE t0.c51 END)), (((('')AND(t0.c72)))%((((t0.c51))<>((t0.c0))))) FROM t0 WHERE (((((NULL) NOT BETWEEN (0.25729479260241306) AND (0.30538508263033937))) NOT BETWEEN (NULL COLLATE BINARY) AND ((((0xfffffffff0efcf0f)) NOT BETWEEN (('-1372675923')) AND ((NULL)))))) LIMIT -410357728 OFFSET -1702871574; -- 0ms;
SELECT DISTINCT (- (((t0.c72)<<(t0.c0)))), (COUNT(t0.c0) IN ()), (((t0.c51 COLLATE RTRIM, CAST(t0.c51 AS NUMERIC), (t0.c72 IN ())))>=(((t0.c72 IN ()), MIN('Z!ꇷ6[bxQ'), CAST(t0.c0 AS TEXT)))) FROM t0; -- 0ms;
SELECT (- (((t0.c0)<>(t0.c0)))) FROM t0 WHERE (((IFNULL(0.6473156093824906, '1660201509'))&(CASE WHEN 0X702a7668 THEN NULL END))) LIMIT -1108682273 OFFSET 1970057627; -- 0ms;
SELECT ALL CASE WHEN ((((t0.c0)AND(t0.c72)))AND('O G''naKx')) THEN CAST(t0.c72 AS INTEGER) WHEN CAST(t0.c51 AS BLOB) THEN ((((t0.c51)AND(t0.c51)))AND(t0.c72)) WHEN (t0.c51 IN ()) THEN (NOT (t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((t0.c0 IN (t0.c72))) AND ((((t0.c72, t0.c51, t0.c0))<>((t0.c72, t0.c72, t0.c51))))), ((((t0.c72, t0.c0, t0.c51))!=((t0.c72, t0.c0, '⵮'))) IN (CAST(t0.c51 AS NUMERIC))), (((+ (t0.c51)))AND(AVG(t0.c72))) FROM t0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY x''; -- 0ms;
SELECT DISTINCT (((t0.c51)) BETWEEN ((json_valid(t0.c51))) AND ((t0.c51 COLLATE BINARY))) FROM t0 WHERE ((((+ ('3d'))) BETWEEN ('' COLLATE NOCASE) AND (((x'') BETWEEN (0X463126c9) AND ('?y{|UL3'))))); -- 0ms;
SELECT DISTINCT CAST(((NULL) BETWEEN (t0.c51) AND (t0.c0)) AS NUMERIC) FROM t0; -- 0ms;
SELECT ((((t0.c51)AND(((0X4980dd93) IS TRUE))))OR(((t0.c51)>(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0)-(t0.c51))))<((((t0.c72)IS(t0.c51))))) FROM t0; -- 1ms;
SELECT ALL (((AVG(t0.c72)))<>((((((((((t0.c51)OR(t0.c72)))AND(t0.c0)))AND(t0.c72)))OR(t0.c72))))) FROM t0 GROUP BY ABS(DISTINCT CASE t0.c51  WHEN t0.c0 THEN t0.c51 ELSE t0.c51 END), CASE WHEN CAST(t0.c51 AS INTEGER) THEN (((t0.c72))<=((t0.c51))) WHEN t0.c72 THEN t0.c72 WHEN (~ (t0.c72)) THEN (((t0.c72, t0.c72, t0.c51)) NOT BETWEEN ((t0.c0, t0.c72, t0.c72)) AND ((t0.c72, x'', t0.c51))) ELSE t0.c0 END, CAST((~ (t0.c72)) AS REAL) ORDER BY ((((((t0.c51)>=(t0.c72)))OR(t0.c51)))OR(((t0.c72) NOT NULL))); -- 0ms;
SELECT ALL x'4bac' FROM t0; -- 0ms;
SELECT ALL CAST(((t0.c72)IS NOT(t0.c72)) AS INTEGER), COUNT(*) COLLATE RTRIM, COUNT(((t0.c51) NOT NULL)) FROM t0 WHERE (CAST(CAST('-339319525' AS TEXT) AS TEXT)) ORDER BY NULLIF(CASE t0.c0  WHEN t0.c51 THEN t0.c72 WHEN t0.c72 THEN NULL WHEN t0.c0 THEN t0.c72 WHEN t0.c72 THEN t0.c51 WHEN t0.c72 THEN t0.c51 ELSE t0.c0 END, (+ (t0.c51))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((t0.c51) IS TRUE), CASE WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END) FROM t0; -- 0ms;
SELECT DISTINCT ((TYPEOF(t0.c72)) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c72)) THEN (+ (t0.c0)) ELSE (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, 0.24318659894931782))) END FROM t0; -- 0ms;
SELECT COUNT(LENGTH(t0.c51)) OVER () FROM t0 WHERE ((NOT ((((('{}')OR('497408428')))AND(0.8672544001266119))))); -- 0ms;
SELECT DISTINCT (((t0.c0)-(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT json_quote((((t0.c51, t0.c72, t0.c0)) NOT BETWEEN ((t0.c72, t0.c0, t0.c51)) AND ((t0.c0, t0.c72, t0.c51)))) FROM t0; -- 0ms;
SELECT ((((t0.c72)AND(t0.c51)))OR(t0.c72)) COLLATE BINARY, CASE t0.c0  WHEN t0.c72 THEN t0.c51 END COLLATE BINARY, ((((t0.c51)AND(t0.c0)))AND(t0.c72)) COLLATE BINARY FROM t0 WHERE ((((~ (NULL)))LIKE(CASE 'P\n'  WHEN 0.917856095706115 THEN 1993374089 END))) LIMIT 1128234910; -- 1ms;
SELECT DISTINCT (((t0.c0 IN ())) BETWEEN (t0.c51) AND (UNLIKELY(DISTINCT t0.c72))), MIN(CAST(0.45956660754691603 AS NUMERIC)), CASE CASE WHEN t0.c51 THEN t0.c72 END  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c72)) ELSE (((t0.c72, t0.c0, t0.c51, t0.c0, t0.c72))<>((t0.c51, t0.c0, t0.c0, t0.c51, t0.c0))) END FROM t0 WHERE ((NOT (((((0xffffffff9d5da508)OR(x'')))AND(-30460303))))); -- 0ms;
SELECT (((CAST(t0.c72 AS REAL)))<(((((t0.c0))>=((t0.c51)))))) FROM t0; -- 0ms;
SELECT DISTINCT ((NOT (t0.c0)) IN ()) FROM t0 WHERE ((+ (((NULL) BETWEEN (0xffffffffcf7c3508) AND (-1120551801))))); -- 0ms;
SELECT DISTINCT NULL FROM t0 WHERE (((((0.30849013092683175) IS TRUE)) NOT BETWEEN (((0Xffffffffced28ece)>=(x''))) AND (((NULL) IS TRUE)))); -- 0ms;
SELECT CAST((((((((('')OR(t0.c51)))AND(t0.c72)))AND(t0.c0)))AND(t0.c72)) AS NUMERIC) FROM t0 LIMIT 1401027538 OFFSET 1637631183; -- 0ms;
SELECT TOTAL(-861068567) OVER () FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c51 COLLATE BINARY AS BLOB) FROM t0; -- 0ms;
SELECT STRFTIME(COUNT(''), CAST(t0.c72 AS TEXT), ((t0.c0) BETWEEN (NULL) AND (t0.c72))) FROM t0; -- 0ms;
SELECT ((((((((((t0.c72)/(t0.c51)))OR(CAST(t0.c51 AS NUMERIC))))AND(((t0.c0) ISNULL))))OR((('<&KRng') NOT BETWEEN (t0.c0) AND (t0.c51)))))OR(t0.c0)) FROM t0 WHERE (((NULL) NOT BETWEEN (0.8912362693307166) AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(ABS(t0.c72)) FROM t0 WHERE (0.6961439743637103); -- 1ms;
SELECT DISTINCT ((COUNT(*))<(COUNT(*))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0, 'IJO胇睲Y', t0.c72, t0.c72, t0.c51, t0.c72, t0.c72))<((t0.c0, t0.c51, t0.c51, t0.c72, t0.c0, t0.c51, t0.c0))))>((((t0.c72)) NOT BETWEEN ((t0.c0)) AND ((t0.c72))))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)||(t0.c0)) IN (((('905349304')) BETWEEN ((t0.c72)) AND ((t0.c51))))) FROM t0 WHERE ((-1.476878595E9 IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL ((t0.c72)<<(t0.c72)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT LOWER(DISTINCT NULL), PERCENT_RANK() OVER (), TOTAL(((0.4656425010740589) IS FALSE)) FILTER(WHERE ((((((((LIKE(x'', t0.c0, 'y'))OR((NOT (t0.c0)))))AND(CASE WHEN t0.c72 THEN 0.6130390355533974 WHEN t0.c72 THEN t0.c72 WHEN t0.c0 THEN t0.c72 END)))AND((+ (t0.c72)))))AND(CAST(t0.c72 AS INTEGER)))) OVER () FROM t0 WHERE (((((((x'') NOT BETWEEN (NULL) AND (x'')))OR(((-579899384)<(x'0577')))))AND(CAST(0.8660232946783907 AS REAL)))); -- 0ms;
SELECT DISTINCT ((((NULL)==(t0.c72)))<<(t0.c72 COLLATE NOCASE)) FROM t0 WHERE (ABS(0.76170037340949) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (t0.c51)) THEN t0.c51 WHEN CAST(t0.c51 AS INTEGER) THEN (- (NULL)) WHEN CASE t0.c51  WHEN t0.c51 THEN t0.c0 ELSE t0.c72 END THEN t0.c51 END, ((CASE 'r1cz+	'  WHEN t0.c0 THEN t0.c72 WHEN t0.c0 THEN '831259887' WHEN t0.c51 THEN t0.c51 END)|(t0.c51 COLLATE BINARY)), (((t0.c72 IN ()))==(((t0.c0)&(t0.c51)))) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c51  WHEN t0.c0 THEN t0.c51 END) ISNULL) FROM t0 LIMIT -911343053; -- 0ms;
SELECT DISTINCT ((t0.c72 COLLATE BINARY)-((t0.c0 IN ()))) FROM t0 WHERE (((((json_type(5.09343071E8))OR(((((((((x'')AND('')))AND('509343071')))OR('0.2735275448422275')))OR(x'')))))OR(((x'') BETWEEN ('途ugb') AND ('+X'))))) ORDER BY ((((((t0.c0))<=((t0.c51))), (('-551518987') NOT BETWEEN (t0.c0) AND (t0.c51)), t0.c72))=(((t0.c72 IN ()), NULL, (t0.c0 IN ())))); -- 0ms;
SELECT (+ ((((t0.c0, t0.c51, t0.c0))<((t0.c72, t0.c51, t0.c72))))), (((t0.c51)) NOT BETWEEN ((t0.c0)) AND ((CASE WHEN t0.c72 THEN x'' END))), ((((((((t0.c0)OR(t0.c72)))OR(t0.c51)))OR(CASE WHEN t0.c51 THEN t0.c0 END)))AND(CAST(t0.c0 AS INTEGER))) FROM t0 WHERE ((- (CASE -1202754348  WHEN x'f9b8' THEN 'mKW6lt|' END))); -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((CAST(NULL AS REAL))) AND (('L>'))) FROM t0 WHERE ((CAST(NULL AS INTEGER) IN ())); -- 0ms;
SELECT ALL NTILE(NULL) OVER () FROM t0 WHERE (-1729351660);SELECT ((((t0.c51)+(t0.c72)))<<((~ (t0.c72)))) FROM t0 WHERE (((CAST('[n[' AS INTEGER))IS(((NULL) IS TRUE)))); -- 0ms;
SELECT t0.c0 FROM t0 WHERE ((0.2285155092645874 IN ()) COLLATE BINARY); -- 0ms;
SELECT t0.c72, COUNT(*) OVER ( RANGE BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING), (json_patch(t0.c72, t0.c0) IN ()) FROM t0 WHERE ((0.2205990643600072 IN ()) COLLATE RTRIM) LIMIT -326109362; -- 0ms;
SELECT ALL ((((t0.c72)/(t0.c0)))>=(((t0.c51)<=(t0.c0)))) FROM t0 WHERE (UNLIKELY(((0X2fcbf409) NOT NULL))); -- 0ms;
SELECT DISTINCT COUNT(((t0.c0)IS(t0.c51))) FROM t0; -- 0ms;
SELECT CAST(t0.c51 AS BLOB) FROM t0 WHERE (CASE (~ (NULL))  WHEN ((']1D32^')&(NULL)) THEN ((0x242c4f2) BETWEEN (x'') AND (NULL)) WHEN (('-17686733') NOT BETWEEN (x'') AND (1.279734391E9)) THEN CAST(NULL AS REAL) WHEN (- ('0.11088889956476677')) THEN ((0.4787950736256259) BETWEEN ('-17686733') AND ('-326109362')) END); -- 0ms;
SELECT DISTINCT '1638115651' FROM t0; -- 1ms;
SELECT ALL t0.c51 FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c51)|(t0.c72)))<<((t0.c72 IN ()))) FROM t0; -- 0ms;
SELECT ((LIKE(t0.c0, t0.c72, '0'))%(((t0.c72) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (ABS(CAST(NULL AS NUMERIC))); -- 0ms;
SELECT DISTINCT ((((t0.c72)>=('xn!Ἷ3\r	'))) NOT BETWEEN (t0.c72 COLLATE BINARY) AND (((t0.c51)==(t0.c0)))) FROM t0 WHERE (CASE ((NULL) BETWEEN (x'') AND (1.884635E8))  WHEN (('0') NOT BETWEEN (0X115e9222) AND (x'')) THEN 1.637631183E9 WHEN ((NULL)||(0X3aa751c0)) THEN NULL WHEN ((((((((']')OR('Bm')))AND('싾盂57~汩s')))OR(-713619051)))OR('-1540742286')) THEN ((0.26953365199037993) IS TRUE) END); -- 0ms;
SELECT DISTINCT (((((t0.c72)) NOT BETWEEN ((t0.c51)) AND ((t0.c72))))*((+ (t0.c72)))), (+ (t0.c72 COLLATE NOCASE)), TYPEOF(((t0.c72) IS TRUE)) FROM t0 WHERE ((((~ ('1214626952')))|(((2.011221722E9) ISNULL)))); -- 0ms;
SELECT ALL (((t0.c72)) BETWEEN ((t0.c72)) AND ((NULL))) COLLATE RTRIM FROM t0 WHERE (((((((((CASE WHEN x'6e31' THEN 0.6345860348270381 ELSE 'aHꚃ3' END)AND(((NULL)=(x'')))))OR((('') NOTNULL))))OR(((((0X7c369002)AND(x'')))OR(NULL)))))AND((((('351195093')OR(0X3888e052)))OR(0.2767273654373621))))); -- 0ms;
SELECT DISTINCT (((t0.c51)) BETWEEN ((CASE t0.c0  WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c72 WHEN t0.c0 THEN t0.c51 END)) AND (((t0.c51 IN ())))) FROM t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT ((SUM(t0.c0))>(TYPEOF(t0.c72))) FROM t0 WHERE (CASE '1601319542' COLLATE BINARY  WHEN (- (NULL)) THEN ((('-999706369', 0.4589067078503216, NULL))<((NULL, '2001386194', '-873841241'))) END) LIMIT 1897989387; -- 1ms;
SELECT ALL t0.c72 FROM t0 WHERE ((((((218050783) NOT BETWEEN (NULL) AND (NULL))))>(((((0.42575814271313284, NULL, x'')) BETWEEN ((1226966041, '465462443', 'l7[')) AND (('', NULL, x''))))))); -- 0ms;
SELECT DISTINCT UNICODE(((t0.c72)|(t0.c72))), CAST(ROUND(0xffffffff87ef1acf, t0.c51) AS NUMERIC), (+ ((((t0.c0)) BETWEEN ((t0.c51)) AND ((t0.c51))))), (~ ((((t0.c72, t0.c51, t0.c0)) BETWEEN ((t0.c0, t0.c72, t0.c72)) AND ((t0.c0, t0.c0, t0.c51))))), NTH_VALUE(((((t0.c51)>(t0.c51)))<=(((((t0.c0)AND('-1968926490')))OR(t0.c51)))), ((CAST(t0.c0 AS TEXT))||(DATE(t0.c72, t0.c72, t0.c51)))) OVER () FROM t0;SELECT ALL COUNT(*), ((CAST(t0.c72 AS NUMERIC)) ISNULL), ((((((((((t0.c51)AND('j')))AND(t0.c72)))OR(NULL)))AND(t0.c0))) NOT BETWEEN ((t0.c72 IN ())) AND (((((((((t0.c72)AND(t0.c72)))OR(t0.c72)))OR(t0.c0)))OR(t0.c72)))) FROM t0 WHERE (CASE WHEN (((1.28099437E9))==((NULL))) THEN (x'' IN ()) WHEN ((('?7vg', x'', NULL))<=((-1.202754348E9, x'a8088c01', x''))) THEN (- ('')) WHEN ((0.4766389286884539) NOT BETWEEN (x'') AND (5.70497092E8)) THEN CASE x''  WHEN 0.1257470476015855 THEN NULL END ELSE CASE WHEN '' THEN 0.20034524254892028 WHEN -709978257 THEN 0.7897005108921474 WHEN x'7728' THEN '1660201509' ELSE 0.9034020189105232 END END); -- 0ms;
SELECT ALL (((t0.c0) BETWEEN (t0.c51) AND (t0.c51)) IN ()), (~ ((0.30535984754517254 IN ()))), CASE ((((0.48079025051174173)AND(t0.c51)))AND(t0.c51))  WHEN ((t0.c51)<(t0.c51)) THEN ((NULL) BETWEEN (t0.c72) AND (t0.c51)) END FROM t0 WHERE (((0.5093635758494399) BETWEEN (0.24688176906157366) AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(((t0.c72)*(t0.c51)) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT ALL t0.c51 FROM t0; -- 0ms;
SELECT '162862907' FROM t0 WHERE (CAST(NULL COLLATE RTRIM AS BLOB)); -- 0ms;
SELECT DISTINCT (((t0.c72)GLOB(t0.c72)) IN ()) FROM t0 WHERE (CASE CASE WHEN NULL THEN x'' ELSE '834859026' END  WHEN ((x'f6e3')||('1973188679')) THEN CASE 0.8534017281742448  WHEN '-1224078445' THEN 0.031212427483349847 ELSE NULL END END); -- 0ms;
SELECT DISTINCT ((t0.c51)|((((t0.c0)) BETWEEN ((t0.c72)) AND ((t0.c0))))), AVG(t0.c0) OVER (), ((((((t0.c51)OR(t0.c51)))AND(t0.c0)))>>((t0.c51 IN ()))) FROM t0 ORDER BY ((((t0.c0, t0.c72, t0.c51))>((t0.c0, t0.c51, t0.c0))) IN (t0.c0 COLLATE NOCASE)) ASC  NULLS LAST, ((x'')<<(((t0.c0) NOT NULL))) ASC  NULLS LAST; -- 0ms;
SELECT ALL (((0.35009905175418 COLLATE NOCASE))>=((((t0.c72)/(t0.c51))))), AVG(((t0.c51)>=(t0.c0))) OVER (), COUNT(t0.c0 COLLATE RTRIM) OVER () FROM t0 WHERE (((((((x'')OR('%+')))OR(CAST(x'' AS REAL))))AND(0.18320682417793321))) ORDER BY (- (((t0.c51)=(t0.c51)))) DESC; -- 0ms;
SELECT DISTINCT (+ (((t0.c72)<<(t0.c0)))), t0.c72, t0.c51 FROM t0; -- 0ms;
SELECT DISTINCT NTILE(CASE IFNULL(t0.c72, t0.c0)  WHEN ((t0.c51) ISNULL) THEN HEX(DISTINCT t0.c51) ELSE ((t0.c72)*(t0.c72)) END) OVER () FROM t0 GROUP BY '-871832132';SELECT ALL GROUP_CONCAT(NULL), (+ (t0.c51 COLLATE NOCASE)), ((((((t0.c0)||(t0.c72)))AND(CASE WHEN t0.c72 THEN t0.c72 END)))AND(MAX(t0.c51))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(-9.11343053E8 AS NUMERIC) FROM t0 WHERE (CASE WHEN ('-1476878595' IN (0.517789105767083)) THEN ((x'') NOTNULL) WHEN NULL COLLATE NOCASE THEN ((((0.5258679296340236)OR('-911343053')))AND(x'')) WHEN ((0.4125458615734279)+(x'')) THEN (+ ('e9on*')) ELSE (x'2986b723' IN ()) END) UNION SELECT COUNT(((t0.c0) NOT NULL)) FROM t0 WHERE (((((((((CASE WHEN NULL THEN 0Xffffffffb778887d ELSE NULL END)OR((~ (NULL)))))AND(1.637631183E9)))AND(LAST_INSERT_ROWID())))AND((NULL IN (x''))))); -- 0ms;
SELECT ALL COUNT(*) COLLATE BINARY FROM t0; -- 1ms;
SELECT DISTINCT CASE WHEN t0.c0 COLLATE RTRIM THEN t0.c0 WHEN t0.c72 THEN (((t0.c51)) BETWEEN ((t0.c51)) AND ((t0.c0))) WHEN MAX(t0.c72) THEN CASE t0.c0  WHEN 0xffffffffa1495db8 THEN t0.c72 END ELSE (((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c72, t0.c51))) END FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c72) NOTNULL)))<=((((t0.c51)>=(t0.c0))))), COUNT(*), x'' FROM t0 WHERE (((((x'') BETWEEN (0.7581989969823005) AND (NULL)))LIKE(((((x'a0a9')OR(NULL)))AND(0.8230755629549796))))) GROUP BY NULLIF(((t0.c0) IS FALSE), '-1216837507'), ((((t0.c51)>(t0.c72)))+(CAST(t0.c51 AS REAL))), (('Fd[TH|') NOT BETWEEN (t0.c51) AND (t0.c72)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT SUM(-1897638204) FROM t0 WHERE (CASE WHEN x'f4bb' THEN ((x'8bae')-(0.5056287141011825)) WHEN (0.6173868976495015 IN ()) THEN (('')IS('2114372088')) WHEN (- ('2114372088')) THEN SQLITE_COMPILEOPTION_GET(0.259244380701963) END); -- 0ms;
SELECT ALL COUNT(t0.c51), ((((((((COUNT(*))AND((t0.c72 IN ()))))AND(CASE t0.c0  WHEN t0.c72 THEN t0.c51 ELSE t0.c72 END)))AND(((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c0)))))AND(MAX(t0.c0))), ((t0.c51)<<(t0.c72)) COLLATE RTRIM FROM t0 WHERE (((LAST_INSERT_ROWID()) ISNULL)); -- 0ms;
SELECT DISTINCT (CASE t0.c0  WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c72 WHEN t0.c72 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 END IN ()), t0.c72, (((((t0.c72 IN (t0.c0)))OR(CAST(t0.c51 AS TEXT))))OR((t0.c0 IN (t0.c51, t0.c0)))), (TRIM(t0.c51) IN ()), ((UPPER(DISTINCT t0.c72))<=(((((0.09789643972761308)AND('548501270')))OR(t0.c72)))) FROM t0 WHERE (CASE WHEN (((x'077b')) BETWEEN ((0.32116575012377224)) AND ((0.9035305343124204))) THEN (x'' IN ()) ELSE (('a?[') NOT BETWEEN (x'') AND (0x7d770667)) END); -- 0ms;
SELECT DISTINCT (+ (((t0.c0) NOTNULL))) FROM t0; -- 0ms;
SELECT ((CASE WHEN t0.c0 THEN t0.c51 WHEN x'a595' THEN t0.c0 WHEN t0.c51 THEN x'' ELSE t0.c0 END) NOT NULL) FROM t0; -- 1ms;
SELECT ALL (((((t0.c0) IS TRUE)))>(((- (t0.c0))))) FROM t0 LIMIT 391525679; -- 0ms;
SELECT DISTINCT ((CASE WHEN NULL THEN t0.c72 END)<<(t0.c0)) FROM t0 WHERE (((((((((((('Y%DH}jt'))<((0x4f0f9895))))AND((NOT (-930702647)))))AND((('1703229449') IS FALSE))))OR(((('귊?')) NOT BETWEEN ((NULL)) AND ((x''))))))AND((('a]ｲ<9') NOT BETWEEN (x'') AND (-4.44044534E8))))); -- 0ms;
SELECT DISTINCT ((x'') IS TRUE) FROM t0 ORDER BY CAST(0.7482006373950112 AS BLOB)  NULLS LAST, ((TYPEOF(t0.c51)) BETWEEN (((t0.c0)<=(t0.c51))) AND (t0.c0 COLLATE RTRIM)) DESC  NULLS LAST; -- 0ms;
SELECT NULLIF(t0.c51 COLLATE NOCASE, CASE NULL  WHEN t0.c72 THEN t0.c0 END) FROM t0; -- 0ms;
SELECT DISTINCT AVG(((((((((t0.c51)OR(t0.c0)))OR(t0.c51)))OR(t0.c72)))OR(t0.c72))), (t0.c72 IN ((NOT (t0.c51)), t0.c51)), (((((((((((t0.c51)) BETWEEN ((t0.c0)) AND ((t0.c51))))AND(((((((((t0.c0)OR(1317987968)))AND(t0.c0)))AND(t0.c72)))AND(t0.c0)))))AND((~ ('-2055708277')))))AND(CAST(t0.c51 AS BLOB))))AND(CAST(t0.c72 AS INTEGER))) FROM t0 WHERE ((~ (NULL))); -- 0ms;
SELECT ALL ((((((((((t0.c51)<<(t0.c0)))OR((((t0.c72, t0.c51, t0.c51)) NOT BETWEEN (('1129740022', t0.c72, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND((~ (t0.c72)))))OR(((t0.c72)&(t0.c72)))))OR(((t0.c72)LIKE(t0.c51)))) FROM t0; -- 1ms;
SELECT DISTINCT (((t0.c51 IN ()))>=(((t0.c51) BETWEEN (t0.c51) AND (t0.c0)))), t0.c72, ((((t0.c0) NOT BETWEEN (t0.c51) AND (t0.c51))) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) END, AVG((+ (t0.c72))), CUME_DIST() OVER ( ORDER BY ((((-5.51518987E8)|(t0.c72))) NOT BETWEEN (t0.c72) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, ((load_extension(t0.c51))<(((0.014950553385110088) NOT BETWEEN (t0.c72) AND ('172756299')))) ASC  NULLS FIRST, ((((((t0.c0)&(t0.c72)))OR(((t0.c0)>>(t0.c0)))))OR(COALESCE(DISTINCT t0.c0, t0.c51))) DESC  NULLS LAST) FROM t0 WHERE ((TYPEOF(DISTINCT NULL) IN ()));SELECT ALL AVG((((t0.c51, t0.c51, t0.c51)) NOT BETWEEN ((t0.c72, t0.c0, x'')) AND ((t0.c72, t0.c72, t0.c72))) COLLATE BINARY), ((((((t0.c0)-(t0.c51)))OR(MAX(t0.c72))))AND((t0.c72 IN ()))), x'', ((t0.c51)&(t0.c51)) COLLATE NOCASE, MIN(((t0.c72)OR(t0.c51))), ((COUNT(*)) IS TRUE), 'O?Qiy]>' FROM t0 WHERE ((- ((('U//')IS NOT('[s	r꾗vK1'))))); -- 0ms;
SELECT (((t0.c51) NOTNULL) IN ()), ((CASE t0.c0  WHEN t0.c51 THEN NULL WHEN t0.c51 THEN t0.c72 WHEN t0.c72 THEN t0.c72 END)>=(x'')), TOTAL('D+	qQ^' COLLATE NOCASE), CAST(((((((((t0.c0)OR(0.3492864542975538)))OR(t0.c72)))AND(t0.c0)))AND(t0.c51)) AS BLOB), ((SQLITE_SOURCE_ID())|((t0.c0 IN (t0.c51)))) FROM t0; -- 0ms;
SELECT ALL ((t0.c0)GLOB(t0.c72)) COLLATE BINARY FROM t0 WHERE ((NULL COLLATE RTRIM IN ())); -- 0ms;
SELECT ALL CAST(CAST(t0.c72 AS NUMERIC) AS REAL), (+ ((+ (0.6319133220845399)))), CAST(x'c9dd' AS INTEGER) FROM t0 WHERE (((('8{')) BETWEEN (((+ (x'5808')))) AND ((NULL)))); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c51 THEN x'd76d' END)!=((- (t0.c0)))), CAST((((t0.c72, -326109362, t0.c72, t0.c0, t0.c0)) BETWEEN ((t0.c51, t0.c0, t0.c72, t0.c51, t0.c72)) AND ((t0.c51, t0.c51, t0.c72, t0.c0, t0.c72))) AS NUMERIC), ((((t0.c72) BETWEEN (t0.c0) AND (t0.c51))) NOT BETWEEN (t0.c72) AND ((t0.c51 IN (t0.c51)))), (((NULL))=((((((t0.c72)OR(t0.c51)))OR(t0.c0))))), SUM(((('1045062717')) NOT BETWEEN ((t0.c0)) AND ((t0.c72)))) FROM t0 WHERE (ABS(DISTINCT (NULL IN (NULL)))) GROUP BY ((-1779658644)||(TRIM(DISTINCT t0.c72))) LIMIT -454716131 OFFSET 1961454208; -- 1ms;
SELECT DISTINCT (- (t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, (((t0.c0 IN (t0.c0, t0.c72)))IS(t0.c51 COLLATE NOCASE)), ((((((NULL)AND(t0.c72)))OR(t0.c0))) NOTNULL) FROM t0 WHERE (x''); -- 0ms;
SELECT ALL (- (((t0.c51)&(t0.c72)))) FROM t0 WHERE ((((x'')) BETWEEN ((CAST(0Xffffffffebf38659 AS NUMERIC))) AND ((json_array_length(0.8861650580621994, '0.2990893320918715')))));SELECT DISTINCT (((0.8354116183452883))>=((((t0.c0) IS TRUE)))) FROM t0 WHERE (((CAST(1.28099437E9 AS NUMERIC))-('iQ' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT COUNT(((t0.c72) IS FALSE)) FROM t0 WHERE (((((0.4589067078503216)%(-185321525)))>((((('')OR(x'')))AND(0.15940013859785673))))); -- 0ms;
SELECT ALL ((CASE t0.c51  WHEN t0.c51 THEN t0.c72 ELSE t0.c72 END)<=(CASE t0.c72  WHEN t0.c72 THEN t0.c51 END)), (+ (((t0.c72) NOT NULL))), LEAD(CASE CASE WHEN t0.c51 THEN t0.c0 END  WHEN ((t0.c0)OR(t0.c0)) THEN ((((t0.c51)AND(0Xffffffffe900fad9)))OR(t0.c51)) WHEN ((((((((((((t0.c51)OR(t0.c72)))OR(t0.c51)))AND(t0.c51)))OR(t0.c0)))OR(t0.c51)))AND(t0.c0)) THEN ((t0.c0)<=(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c72) AND (t0.c0)) THEN (((t0.c51)) NOT BETWEEN ((t0.c51)) AND ((t0.c0))) END, JULIANDAY(t0.c51, t0.c51, '0.9039806403563926', LIKELY(DISTINCT t0.c0), '2064028335'), (((((('0.21066670076432048')AND(t0.c51)))AND(t0.c72)))>((~ (t0.c72))))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c51, t0.c72, t0.c0, t0.c0, t0.c51)) BETWEEN ((CASE WHEN t0.c72 THEN t0.c51 ELSE t0.c0 END, CASE WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END, COUNT(*), t0.c0, '墮\rr')) AND ((((t0.c72)-(t0.c72)), COUNT(t0.c72), t0.c51, t0.c0, ((t0.c51)+(t0.c72))))) FROM t0 WHERE (x'1ff0') LIMIT -1364657119; -- 0ms;
SELECT DISTINCT ((((((t0.c72)*(0.6636246783892846)))OR((((t0.c51)) BETWEEN ((t0.c72)) AND ((t0.c51))))))OR(((((((((t0.c72)AND(t0.c0)))OR(t0.c51)))AND(t0.c0)))OR(t0.c72)))) FROM t0 WHERE ((((((0.7662947013326831 IN ()))OR((('')&(0x2898f61b)))))AND(((x'')IS NOT(-1.632881641E9))))); -- 0ms;
SELECT ALL CASE ((t0.c72) BETWEEN (t0.c72) AND (t0.c51))  WHEN (1326422165 IN (t0.c72, '')) THEN t0.c0 COLLATE RTRIM ELSE ((NULL) ISNULL) END, MIN(((t0.c72)GLOB(t0.c0))), NULL FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN 'UUyZ|S5It' THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c51 END END FROM t0 WHERE ((json_quote(0.9499414913473683) IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT NULL))>(((0Xffffffffa2823c15) NOT BETWEEN (t0.c0) AND (2010657717)))) FROM t0 WHERE ((((((0xffffffffbaaf8607 IN ()))AND(NULL COLLATE BINARY)))AND(x''))); -- 0ms;
SELECT DISTINCT (((((t0.c72)) BETWEEN ((t0.c51)) AND ((t0.c72)))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c72 ELSE t0.c51 END)) FROM t0; -- 0ms;
SELECT ALL (NOT ((~ (t0.c72)))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), ((((((((((t0.c0) ISNULL))OR(LOWER(DISTINCT t0.c72))))OR((~ (t0.c72)))))AND(t0.c72)))AND((NOT (t0.c0)))), (t0.c0 IN ()) FROM t0 LIMIT -1785867025; -- 0ms;
SELECT ALL TOTAL((((t0.c0)) NOT BETWEEN ((t0.c72)) AND ((t0.c72)))) OVER () FROM t0 WHERE ((((NULL IN ('-97675495', '594640640'))) NOT BETWEEN ((((((((((((('#7')AND(0.10004052575293498)))AND(1.881831016E9)))OR(-1.023646752E9)))AND(0Xb3bb98c)))AND('391525679')))AND('525170648'))) AND ((~ (x''))))); -- 0ms;
SELECT ALL CASE ((t0.c51)%(t0.c51))  WHEN t0.c72 THEN t0.c51 COLLATE NOCASE ELSE (- (t0.c51)) END FROM t0; -- 0ms;
SELECT DISTINCT t0.c72, COUNT(((t0.c51)<(t0.c51))) OVER ( ORDER BY LIKELIHOOD(DISTINCT ((t0.c72)>>(t0.c72)), 0.8138519395578363) ASC), LTRIM(t0.c72, t0.c51) COLLATE BINARY COLLATE RTRIM FROM t0 WHERE (((((((x'e0c3')>=('')))AND((((('')OR(x'')))OR('˟cNfFz[')))))AND((~ (-3.26109362E8))))); -- 1ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT ALL CASE WHEN t0.c51 THEN AVG(t0.c0) ELSE CAST(t0.c72 AS INTEGER) END FROM t0; -- 0ms;
SELECT ALL CAST((t0.c0 IN ()) AS NUMERIC), ROW_NUMBER() OVER ( ORDER BY ((((TRIM(DISTINCT t0.c72, t0.c51))OR(t0.c72 COLLATE RTRIM)))OR(((t0.c72) NOT BETWEEN (t0.c0) AND (0X2fdda9f4)))) ASC  NULLS FIRST), CASE ((t0.c51)>(t0.c0))  WHEN (((t0.c0, t0.c51, NULL))!=((t0.c72, 0X5a3225b3, t0.c51))) THEN ((((t0.c72)OR(t0.c72)))OR(x'')) END FROM t0; -- 0ms;
SELECT DISTINCT CAST(-312065468 AS NUMERIC) FROM t0 WHERE (((((('-1748700965')/('''SB'))))!=(((NOT (0.7706475019694004)))))); -- 0ms;
SELECT DISTINCT ((((((((t0.c51)AND(x'')))OR(t0.c51)))AND(t0.c51)))OR(t0.c72)) COLLATE BINARY, highlight(((t0.c0)||(t0.c0)), CASE t0.c72  WHEN t0.c51 THEN 0.730731731409377 WHEN t0.c72 THEN t0.c72 WHEN t0.c0 THEN t0.c0 ELSE t0.c51 END, '', (t0.c51 IN ())), MIN(((t0.c0)<(t0.c72))) FROM t0;SELECT ((((t0.c72) IS TRUE)) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0 WHERE (((CAST(0.8587993551934762 AS NUMERIC))IS((((('-1077850583')AND(NULL)))OR(0.15823709462643998))))) LIMIT -442787777 OFFSET -1764027425; -- 0ms;
SELECT ALL (((t0.c0 IN ()))==(((t0.c72) IS FALSE))) FROM t0; -- 0ms;
SELECT ALL SUM('1319181899') FILTER(WHERE ROUND(CASE WHEN t0.c72 THEN t0.c51 END, CAST(t0.c51 AS TEXT))) OVER ( GROUPS json_remove((t0.c0 IN ()), t0.c0) PRECEDING EXCLUDE NO OTHERS), CAST((- (t0.c72)) AS REAL), ((NULL) BETWEEN (((x'')IS(NULL))) AND ((NOT (t0.c72)))) FROM t0;SELECT DISTINCT ((CASE WHEN t0.c72 THEN t0.c72 ELSE t0.c72 END)IS(x'')) FROM t0 WHERE ((('years')>=((('IMVAxK?]') IS FALSE)))) GROUP BY CAST((t0.c0 IN ()) AS NUMERIC), ((((t0.c0)=(t0.c51)))||(((((t0.c72)OR(t0.c51)))OR(t0.c51)))), (((((t0.c72, t0.c0, t0.c72))!=((t0.c51, x'', t0.c51))))*(CAST(t0.c51 AS BLOB))) ORDER BY ((t0.c51 COLLATE NOCASE)>(((((t0.c72)OR(t0.c0)))OR(t0.c51)))); -- 0ms;
SELECT t0.c51 FROM t0 WHERE (CASE ((NULL)IS('1221855529'))  WHEN -1606757038 THEN 0.4589067078503216 END); -- 0ms;
SELECT DISTINCT CAST((+ (t0.c51)) AS NUMERIC) FROM t0 WHERE ((NOT (TRIM('unoy', 'm0')))); -- 0ms;
SELECT DISTINCT ((('995265953')) BETWEEN ((((t0.c51) NOT NULL))) AND ((t0.c0 COLLATE BINARY))), COUNT(((t0.c51) BETWEEN (t0.c72) AND (0.021668046956988984))) OVER (), t0.c51 FROM t0 GROUP BY TRIM(DISTINCT (((t0.c72, t0.c51, t0.c0, 'jq', t0.c0))<>((t0.c72, t0.c51, t0.c51, t0.c0, '#&.\r?6E\5'))), ((((((((t0.c0)OR(t0.c72)))OR(t0.c51)))OR(t0.c0)))AND(t0.c72))) HAVING ((NULL IN ()) IN ()); -- 0ms;
SELECT (((((t0.c51)AND(t0.c51)))AND(t0.c51)) IN ()) FROM t0 ORDER BY (((t0.c72)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c72) ISNULL))))  NULLS FIRST; -- 0ms;
SELECT ALL (((t0.c72, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c51)AND(t0.c51)))AND(t0.c0)), ((x'') BETWEEN (x'd6dc') AND (t0.c51)), CHAR(t0.c51))) AND ((AVG(t0.c0), (t0.c72 IN ()), ((t0.c51)<(t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 WHERE (((CASE WHEN '' THEN 0xffffffffce2c8721 WHEN '-596435027' THEN '-2107430734' WHEN '' THEN 1313105215 END) NOT BETWEEN ((((('-857754126')AND(x'aa43')))OR(0.4713413008830374))) AND (((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT (((t0.c0)|(t0.c51)) IN ()), COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW), ((((((t0.c0)OR(t0.c51)))AND(CAST(t0.c0 AS REAL))))OR(((t0.c0) NOT BETWEEN (0.7811571062110944) AND (t0.c51)))) FROM t0 WHERE ((((- (x''))) BETWEEN ('-208075299') AND ((x'' IN ())))) LIMIT -765034468 OFFSET 1565683556; -- 0ms;
SELECT DISTINCT ((((((((((((x'' COLLATE NOCASE)AND('' COLLATE NOCASE)))AND(2.18050783E8)))OR(NULL)))OR(((t0.c0) NOTNULL))))OR((+ ('P*')))))AND(CASE t0.c51  WHEN t0.c0 THEN t0.c0 WHEN t0.c72 THEN '' WHEN t0.c0 THEN t0.c72 END)) FROM t0 WHERE (((NULL) NOT BETWEEN ('!.9xH') AND (x'')) COLLATE NOCASE) ORDER BY ((((t0.c51)AND(CAST(t0.c51 AS BLOB))))OR(MIN(t0.c51, t0.c51, t0.c72, t0.c72))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (NOT ((((t0.c51)) NOT BETWEEN ((t0.c51)) AND ((t0.c72))))) FROM t0 WHERE (((('m	[6]'))=((NULL)))) GROUP BY (((CAST(t0.c51 AS BLOB), ((((t0.c51)OR(t0.c72)))OR(t0.c51)), (- (t0.c0))))==((t0.c72, ((t0.c51)!=(t0.c51)), (((t0.c72, t0.c51, t0.c72)) NOT BETWEEN ((t0.c0, 0.44353304532372917, t0.c51)) AND ((t0.c0, t0.c51, t0.c0)))))) HAVING ((SQLITE_SOURCE_ID()) BETWEEN (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((NULL) NOT BETWEEN (t0.c72) AND (t0.c0)))); -- 0ms;
SELECT DISTINCT ((CASE t0.c72  WHEN '' THEN t0.c0 ELSE t0.c72 END) NOT NULL), STRFTIME((t0.c72 IN ()), ((t0.c0) NOT NULL), (~ (t0.c51)), (~ (t0.c72)), TOTAL(t0.c72)), (((t0.c51))<=((t0.c0))) COLLATE NOCASE FROM t0 WHERE (CAST(CAST(0.20027984349341432 AS BLOB) AS INTEGER)) LIMIT -112137222; -- 0ms;
SELECT DISTINCT x'a515' COLLATE NOCASE FROM t0 WHERE (((-1732142932)>>(((0.28877346430434125) NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ALL x'bf6e' FROM t0 WHERE (((CAST(x'' AS REAL)) ISNULL)); -- 0ms;
SELECT ALL ((((t0.c0)OR(t0.c51)))OR(t0.c0)) COLLATE RTRIM, COUNT(*), (((((- (t0.c0)))AND(CASE WHEN 0.25729479260241306 THEN t0.c72 ELSE NULL END)))OR((((t0.c72, t0.c51, t0.c72)) BETWEEN ((t0.c0, t0.c0, t0.c51)) AND ((t0.c51, t0.c51, t0.c72))))), GROUP_CONCAT(CAST(t0.c51 AS TEXT)) OVER ( PARTITION BY ((((((t0.c51)AND(t0.c51)))OR(t0.c0))) NOT NULL), ((((((t0.c72)OR(NULL)))OR(t0.c0)))IS(((t0.c0) BETWEEN (t0.c72) AND (t0.c0)))) ORDER BY (((((x'4188') BETWEEN (t0.c51) AND (t0.c0)), (((t0.c51)) NOT BETWEEN ((t0.c51)) AND ((t0.c0))), t0.c51))<=((((t0.c0) BETWEEN (x'3750') AND (t0.c51)), t0.c72, TIME(t0.c0, t0.c72, t0.c51)))) DESC  NULLS LAST GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), ((AVG(t0.c51))<>((t0.c72 IN ()))) FROM t0; -- 1ms;
SELECT ((((((((((t0.c0)AND(t0.c51)))AND(t0.c0)))OR(t0.c72)))OR(-785333703))) ISNULL) FROM t0 WHERE (((((-1.383809293E9)=('')))<>(((x'ac95')==('l f?. L0}'))))); -- 0ms;
SELECT ALL CASE WHEN (NULL IN ()) THEN ((t0.c72) IS FALSE) END FROM t0; -- 0ms;
SELECT LAG((- (((t0.c72) NOT BETWEEN (NULL) AND (t0.c51)))), t0.c72, '9 H6E''X{') OVER () FROM t0; -- 0ms;
SELECT DISTINCT '' FROM t0; -- 0ms;
SELECT DISTINCT json_object(UPPER(t0.c0), '-1926982465') FROM t0 WHERE (((((0.7628191804037922)AND('우#fX')))OR(NULL)) COLLATE NOCASE); -- 0ms;
SELECT ALL MAX((t0.c0 IN ())), ((t0.c51 COLLATE NOCASE) IS FALSE), CAST(MIN(t0.c0) AS BLOB) FROM t0 WHERE (((((-1089564613)OR(((1.851917023E9) ISNULL))))OR(CASE '1091663206'  WHEN NULL THEN x'c11c' ELSE '' END))); -- 0ms;
SELECT DISTINCT (((((((x'')) BETWEEN ((t0.c72)) AND ((t0.c0))))OR(((t0.c0)AND(t0.c72)))))AND(COUNT(t0.c72))) FROM t0 WHERE (COALESCE(DISTINCT NULL, '1279734391', NULL, NULL, 0.6396285777476591, x'') COLLATE RTRIM) ORDER BY (((((((t0.c0)) BETWEEN ((t0.c72)) AND ((t0.c51))))AND(CAST(t0.c0 AS REAL))))OR(LIKE(t0.c72, t0.c0)))  NULLS LAST LIMIT -1737225457; -- 0ms;
SELECT ALL (COUNT(t0.c72) IN (t0.c51)) FROM t0; -- 0ms;
SELECT (- ((((t0.c72, t0.c51, t0.c51)) BETWEEN ((t0.c0, t0.c51, x'852ad7d9')) AND ((0X6bda0973, x'', t0.c0))))) FROM t0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN UNLIKELY(DISTINCT '-380158480') WHEN ((NULL)<(0.644339609234694)) THEN CAST(NULL AS TEXT) WHEN CASE WHEN x'' THEN '-17686733' WHEN '-2061602944' THEN 0.15653648643384088 WHEN x'' THEN NULL WHEN x'' THEN NULL WHEN '1326422165' THEN 0.4784394383520343 END THEN (- (-1383809293)) END); -- 0ms;
SELECT ((0.6478313681829474)<>(QUOTE(t0.c0))) FROM t0 WHERE ((+ (('' IN ())))) LIMIT 896052564 OFFSET 1218242687; -- 0ms;
SELECT (('533935742') NOTNULL), (((t0.c72)) NOT BETWEEN ((CAST(t0.c72 AS INTEGER))) AND ((((t0.c72) BETWEEN (t0.c51) AND ('549647787'))))), CASE WHEN ((t0.c72)<=(t0.c72)) THEN x'' COLLATE NOCASE ELSE (- (t0.c0)) END FROM t0; -- 0ms;
SELECT ((((t0.c0) BETWEEN (t0.c51) AND (t0.c72)))<=((('跣*')<(t0.c0)))) FROM t0 WHERE ((NOT (''))); -- 0ms;
SELECT DISTINCT AVG(CAST(0.05702032780905675 AS NUMERIC)) OVER () FROM t0 WHERE ((((('-1025782132') NOT BETWEEN (0xfffffffff9215e58) AND ('0.1298042717328758'))) IS FALSE)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(ABS(DISTINCT t0.c72)), (MAX(t0.c72) IN (t0.c0 COLLATE NOCASE)), t0.c51 FROM t0 WHERE (((413591516 COLLATE NOCASE)-(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((t0.c72) BETWEEN (t0.c72) AND (t0.c51))) NOT BETWEEN (((t0.c51)LIKE(t0.c0))) AND (CASE t0.c51  WHEN t0.c0 THEN t0.c51 END)) FROM t0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 WHERE (CAST(((0.30342263005263925) NOT BETWEEN (x'') AND (0.5917851695082217)) AS BLOB)); -- 0ms;
SELECT ALL LEAD((((t0.c51, t0.c51, t0.c72)) NOT BETWEEN ((((t0.c72)|(x'')), (- (t0.c51)), CAST(t0.c72 AS INTEGER))) AND (((t0.c0 IN ()), t0.c0 COLLATE RTRIM, CAST('1447276233' AS TEXT)))), ((((t0.c51) BETWEEN (t0.c72) AND (t0.c51))) NOT NULL), LOWER(DISTINCT t0.c72)) OVER (), 0Xffffffffe5886b0a, (((t0.c51)) NOT BETWEEN ((LTRIM(t0.c72, t0.c51))) AND ((MAX(t0.c72)))), ((CAST(NULL AS REAL)) IS FALSE), ((((t0.c72) BETWEEN (t0.c72) AND (t0.c72)))/(((t0.c72) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (CASE CASE WHEN 0.8912362693307166 THEN x'8d0b' END  WHEN ((x'6442') NOT BETWEEN (NULL) AND (0.9907104336463178)) THEN CASE WHEN '' THEN 0X7121050b ELSE x'' END WHEN (NOT ('1279734391')) THEN CAST(0X58ac5280 AS REAL) WHEN 9.21898224E8 COLLATE NOCASE THEN CAST(0.45956660754691603 AS TEXT) END); -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT t0.c72 FROM t0; -- 0ms;
SELECT ALL HEX((((t0.c0))>((t0.c0)))) FROM t0 WHERE (CASE NULL  WHEN x'' THEN NULL WHEN 0x24e63f8d THEN x'' WHEN '-1202754348' THEN 0xffffffffd5510adc ELSE '0.1732963133757397' END COLLATE BINARY) LIMIT -112137222; -- 0ms;
SELECT DISTINCT ((UPPER(t0.c51))>(CASE t0.c72  WHEN t0.c51 THEN t0.c0 ELSE t0.c0 END)), NTH_VALUE((~ (((t0.c72) NOT BETWEEN (t0.c51) AND (t0.c72)))), (((((t0.c0)IS NOT(t0.c0))))>=((t0.c0)))) OVER (), ((((t0.c0) ISNULL)) NOT NULL) FROM t0 WHERE ((((NULL IN ())) NOT NULL)) ORDER BY ((((((t0.c72)OR(NULL)))AND(t0.c51)))IS NOT(t0.c72 COLLATE BINARY))  NULLS LAST;SELECT ((((t0.c0 COLLATE BINARY)AND(t0.c72)))AND(t0.c0)) FROM t0 GROUP BY (((- (t0.c72)))&(((((0.20478896494832832)OR('-1589027400')))AND(t0.c72)))) HAVING ((((t0.c51)IS(NULL))) NOT BETWEEN (CASE ''  WHEN t0.c51 THEN t0.c72 ELSE t0.c72 END) AND ((t0.c0 IN ()))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT ALL ((((AVG(t0.c51))AND((NOT (t0.c0)))))OR(((((t0.c51)AND(t0.c51)))OR(t0.c51)))) FROM t0; -- 0ms;
SELECT DISTINCT AVG(((t0.c72)+(t0.c51))), ((((t0.c51) NOT NULL))AND((((t0.c72))>=((t0.c0))))), TOTAL(((t0.c51) IS FALSE)) FROM t0 GROUP BY NULL HAVING (((((t0.c51)<('')), ((((t0.c51)AND(t0.c0)))AND(t0.c51)), t0.c0 COLLATE BINARY))>((MIN(t0.c0), ((t0.c51) IS FALSE), ((t0.c0) NOTNULL)))); -- 0ms;
SELECT DISTINCT ((t0.c72)IS NOT(t0.c72)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT (- (t0.c51)), JULIANDAY(MIN(t0.c0), CASE NULL  WHEN t0.c72 THEN t0.c72 END, CASE WHEN t0.c0 THEN t0.c72 ELSE t0.c72 END, CASE t0.c51  WHEN t0.c0 THEN t0.c51 WHEN t0.c72 THEN NULL WHEN t0.c51 THEN t0.c72 ELSE t0.c0 END, CASE x''  WHEN t0.c51 THEN NULL WHEN t0.c72 THEN t0.c72 WHEN t0.c72 THEN t0.c0 END, t0.c72 COLLATE RTRIM, (t0.c72 IN ())), ((t0.c0)<>(t0.c72)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c72 WHEN t0.c72 THEN t0.c0 WHEN t0.c51 THEN t0.c72 END), TOTAL(x''), CAST(CASE WHEN x'' THEN t0.c0 ELSE t0.c0 END AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT ((('-871832132') IS FALSE) IN ()) FROM t0; -- 0ms;
SELECT (~ (t0.c51)) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0 LIMIT -326109362; -- 0ms;
SELECT CAST(((t0.c51) IS FALSE) AS NUMERIC), t0.c72, ((CAST(t0.c0 AS TEXT))=((((t0.c72))==((t0.c51))))) FROM t0 ORDER BY CAST((~ (t0.c72)) AS BLOB) ASC LIMIT -148174578 OFFSET -867177636; -- 0ms;
SELECT '-2052787280' FROM t0 WHERE (((((('|6pG+')/(NULL))))>=((-1.511546557E9)))); -- 0ms;
SELECT DISTINCT t0.c51 COLLATE RTRIM, (((0.07397134441508202 IN ())) ISNULL), ((((t0.c72 IN ())))==((((t0.c72) NOT NULL)))) FROM t0; -- 0ms;
SELECT CASE WHEN ((t0.c72) BETWEEN (t0.c51) AND (t0.c0)) THEN t0.c0 WHEN ((t0.c51)<>(t0.c51)) THEN ((t0.c51) NOT BETWEEN (t0.c72) AND (t0.c0)) WHEN (((t0.c51))<=((t0.c72))) THEN LOWER(t0.c51) WHEN '-326331467' THEN CAST(t0.c51 AS BLOB) WHEN ((t0.c72)&(t0.c51)) THEN ((((t0.c51)OR(t0.c51)))OR(t0.c51)) END, CASE (((t0.c72))<>((t0.c0)))  WHEN CAST(t0.c51 AS TEXT) THEN ((t0.c72) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c51 COLLATE NOCASE THEN ((t0.c72)LIKE(t0.c72)) WHEN t0.c72 COLLATE NOCASE THEN CAST(t0.c51 AS BLOB) ELSE t0.c72 END, ((((t0.c51)/(t0.c72))) BETWEEN (((((NULL)AND(t0.c72)))OR(t0.c72))) AND (((t0.c0) NOT BETWEEN (t0.c51) AND (t0.c0)))), CASE WHEN ((t0.c72)|(t0.c51)) THEN ((t0.c72)%(t0.c72)) ELSE ((((t0.c51)OR(t0.c72)))OR(t0.c0)) END, AVG(LIKELY(DISTINCT t0.c72)) FROM t0 WHERE (((((x'')IS('UTS '))) IS TRUE)); -- 0ms;
SELECT ALL FIRST_VALUE(((((t0.c0)-(t0.c51))) IS FALSE)) OVER () FROM t0 WHERE (((((816156653) BETWEEN (NULL) AND (2.95975637E8)))>>((NOT (NULL))))); -- 0ms;
SELECT DISTINCT (((t0.c72, 0.30154667408112723, t0.c0)) BETWEEN (((+ (t0.c51)), ((((NULL)AND(t0.c72)))OR(t0.c72)), COUNT(t0.c51))) AND ((((t0.c51)>>(t0.c0)), -1936760489, ((t0.c72)IS NOT(t0.c0))))) FROM t0 WHERE ((((~ (NULL))) BETWEEN ('0.28877346430434125') AND (('1907641881' IN ())))); -- 0ms;
SELECT ALL (((((t0.c0))>((-1.79953938E9)))) IS TRUE), COALESCE(DISTINCT ((((t0.c51)OR(t0.c51)))AND(t0.c0)), ((t0.c72) NOT BETWEEN (t0.c51) AND (t0.c72))), ((t0.c72)IS(t0.c51)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT 0.4389368161155456 FROM t0 WHERE (((((((((((x'a5e7')AND(1.897989387E9)))OR('#*Fꎮxm楼')))OR(0.5344852229182393)))AND('vR')))%(((-582294811)<<(-3.8835255E7))))) GROUP BY (~ ((((0.8055315634259762)) NOT BETWEEN ((t0.c0)) AND ((t0.c51))))), ((t0.c51 IN ()) IN ((((t0.c72)) NOT BETWEEN ((t0.c51)) AND ((t0.c72))))), CASE WHEN ((t0.c0)+(t0.c51)) THEN (t0.c72 IN ()) ELSE ((t0.c51)|(t0.c51)) END; -- 0ms;
SELECT DISTINCT (((((t0.c0) BETWEEN (t0.c72) AND (t0.c72))))<=(((((t0.c51, t0.c72, t0.c51)) NOT BETWEEN ((t0.c72, '-1936760489', t0.c0)) AND (('	<', x'', t0.c51)))))) FROM t0; -- 0ms;
SELECT ALL MAX(((0.1732963133757397) NOTNULL)) FROM t0 ORDER BY ((IFNULL('0.9310998839979079', t0.c51)) BETWEEN (CASE WHEN t0.c72 THEN t0.c51 ELSE t0.c72 END) AND (((t0.c51)LIKE(t0.c72)))) ASC; -- 0ms;
SELECT ALL CAST(COUNT(*) AS BLOB) FROM t0 ORDER BY (LAST_INSERT_ROWID() IN ())  NULLS FIRST, ((NULL COLLATE BINARY)+((('')%(t0.c72)))), CAST(((t0.c51) BETWEEN (t0.c0) AND ('1279734391')) AS INTEGER); -- 0ms;
SELECT DISTINCT (((t0.c72 IN (t0.c51)))*(MIN(t0.c51))) FROM t0 WHERE ((('-311229701' COLLATE RTRIM)%(((x'f7ce') IS TRUE)))); -- 0ms;
SELECT (~ (((('1244431347', t0.c72, t0.c0)) NOT BETWEEN ((t0.c51, t0.c72, t0.c0)) AND ((t0.c51, t0.c0, t0.c72))))), (((CAST(t0.c0 AS INTEGER)))=(((- (t0.c0))))), (t0.c0 IN ()), (NOT ((NOT (t0.c72)))), ((((CASE t0.c72  WHEN t0.c51 THEN t0.c0 ELSE t0.c51 END)OR(CAST(t0.c51 AS BLOB))))AND(((t0.c72) NOTNULL))) FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c72)) AND ((t0.c0))))>>(t0.c0)) DESC; -- 1ms;
SELECT PERCENT_RANK() OVER () FROM t0 GROUP BY (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c51)))AND(t0.c0)) IN (CASE WHEN t0.c51 THEN t0.c51 ELSE t0.c72 END)) ORDER BY x'' COLLATE RTRIM ASC  NULLS FIRST, CASE ((t0.c51) ISNULL)  WHEN (('') BETWEEN (t0.c0) AND (t0.c72)) THEN '631874478' END ASC; -- 0ms;
SELECT ALL ((COUNT(t0.c0)) NOT BETWEEN (((((((((t0.c72)OR(t0.c51)))OR(t0.c51)))AND(t0.c51)))AND(t0.c0))) AND (AVG(t0.c72))), ((AVG(t0.c72))%(((t0.c0)<(t0.c51)))), CASE WHEN (t0.c72 IN ()) THEN (- (t0.c51)) WHEN MIN(t0.c72) THEN (t0.c0 IN ()) WHEN ((t0.c51)IS NOT(t0.c0)) THEN ((t0.c0)!=(t0.c72)) WHEN ((t0.c72) ISNULL) THEN ((t0.c51)IS NOT(t0.c72)) WHEN MAX(t0.c72) THEN t0.c51 ELSE x'' END FROM t0 GROUP BY CASE (t0.c51 IN (t0.c72))  WHEN ((((((((t0.c51)AND(t0.c51)))OR(t0.c0)))AND(t0.c51)))OR(t0.c72)) THEN CASE t0.c72  WHEN t0.c0 THEN t0.c0 END WHEN CASE t0.c51  WHEN t0.c72 THEN t0.c51 WHEN t0.c0 THEN t0.c0 WHEN t0.c72 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c72)IS(t0.c0)) WHEN ((((0xffffffffc2fc63e0)OR(t0.c72)))AND(t0.c51)) THEN CASE WHEN '-1732142932' THEN t0.c72 ELSE t0.c0 END ELSE CAST(t0.c72 AS INTEGER) END HAVING CAST(t0.c0 AS NUMERIC); -- 0ms;
SELECT DISTINCT ((((t0.c0)||(t0.c51))) BETWEEN ((+ (t0.c0))) AND ((((t0.c72, t0.c0, t0.c51)) NOT BETWEEN ((t0.c72, t0.c51, t0.c51)) AND ((t0.c72, t0.c72, t0.c0))))) FROM t0 WHERE (((('豒<1BIejt' IN (0.9043947226456104, 0.948491499151718))) NOTNULL)); -- 0ms;
SELECT (NOT (t0.c72 COLLATE RTRIM)) FROM t0 WHERE ((((('')+(0.2864926844461242)))==(((NULL) NOTNULL)))); -- 0ms;
SELECT ALL MAX((((0x63a60d9)) NOT BETWEEN (('')) AND ((t0.c51)))) FROM t0 WHERE ((((0.46500346651357605) BETWEEN (0.7398534345662615) AND (x'')) IN ('-1830301522' COLLATE NOCASE, (('-1757928311')AND(1283990543))))); -- 0ms;
SELECT (SUM(t0.c51) IN ()) FROM t0; -- 0ms;
