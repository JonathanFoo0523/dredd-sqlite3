-- Time: 2024/06/07 06:35:12
-- Database: database55
-- Database version: 3.40.0
-- seed value: 4294869555
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER NOT NULL ON CONFLICT REPLACE CHECK ( ((CASE WHEN c2 THEN c1 ELSE c0 END)IS NOT((c1 IN ())))) , c1 BLOB NOT NULL UNIQUE CHECK ( ((c2 COLLATE BINARY)IS NOT((~ (c0))))) , c2 INT ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2); -- 1ms;
ANALYZE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX  vt1; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
REINDEX  vt1; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '40067'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 300197672); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1639121498); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA threads; -- 0ms;
END; -- 0ms;
PRAGMA temp.threads; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '15189'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-818831393,14');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '37964'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '30137'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '22004'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 129557118); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
CREATE INDEX i29 ON t0(c2 ASC,(((((c2, c1, c2, 'Hj', c2))<=((c1, c0, c0, c2, c1)))) NOT NULL) COLLATE RTRIM ASC,CASE (((NULL))<((c2)))  WHEN ((c2) BETWEEN (c0) AND (c1)) THEN ((c2)<>(c1)) END ASC); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '17145'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.9993987870025836) WHERE (((t0.c1 COLLATE RTRIM, ((t0.c1)|(t0.c2)), (t0.c1 IN ())))>=((json_type(t0.c2), (t0.c1 IN (t0.c0)), ((t0.c2)LIKE(t0.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c1) VALUES (0X3d4ab1a7, 1028305319); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 2ms;
UPDATE OR IGNORE t0 SET c2=-396279704, c0=x'', c0=x'' WHERE CASE ((((((((t0.c2)OR(t0.c2)))OR(t0.c0)))OR(t0.c1)))OR(t0.c0))  WHEN CAST(t0.c2 AS REAL) THEN NULL END; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 18ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
ANALYZE t0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 19ms;
PRAGMA short_column_names; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i34 ON t0(NULL ASC,(NOT (CASE c1  WHEN c1 THEN c0 WHEN c2 THEN c1 WHEN c0 THEN c1 WHEN c1 THEN c1 WHEN c2 THEN c1 ELSE c1 END)) ASC,((((c1) NOTNULL))IS((c2 IN ())))) WHERE ((CASE c0  WHEN c2 THEN x'' ELSE c1 END) ISNULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0x7e86ca2c) WHERE (NOT ((+ (t0.c1)))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i33 ON t0((((((c0)) NOT BETWEEN ((c2)) AND ((c1)))) NOT BETWEEN (((c1)!=(c1))) AND ('_9*+tAK')),(+ (CAST(c1 AS BLOB))) COLLATE BINARY DESC,CASE WHEN (~ (NULL)) THEN ((x'')+(0.6549581185989388)) END COLLATE RTRIM) WHERE CAST((('977165255')<=(c2)) AS NUMERIC); -- 1ms;
END TRANSACTION; -- 1ms;
VACUUM; -- 2ms;
PRAGMA wal_autocheckpoint = 5358899221468105672; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c17; -- 3ms;
REINDEX; -- 0ms;
CREATE INDEX i47 ON t0(((CAST(c17 AS NUMERIC)) ISNULL) COLLATE RTRIM,((CASE WHEN c0 THEN c0 ELSE c1 END)<(((c0) IS FALSE))) COLLATE RTRIM ASC,CAST((((c17)) BETWEEN ((c0)) AND ((c17))) AS NUMERIC) COLLATE NOCASE ASC); -- 10ms;
VACUUM temp; -- 0ms;
ANALYZE vt1; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(('-1350654400' IN ()), (+ (NULL))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c1, c17, c0) VALUES (NULL, 0.6309688969216772, NULL), ('-397030103', NULL, x'3790'), (x'', '-1626846211', 0.22119700196915837); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (1956899375), (0.7941590474509455), ('-871424770'), ('1031678331'), (x''); -- 9ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 REAL , c1 REAL , c2 TEXT ); -- 0ms;
PRAGMA temp.stats; -- 0ms;
END; -- 0ms;
ANALYZE; -- 2ms;
REINDEX; -- 1ms;
PRAGMA busy_timeout; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((((vt1.c0, t0.c1, vt1.c1)) BETWEEN ((t0.c0, t1.c2, t0.c1)) AND ((t1.c2, vt0.c1, vt1.c2))))||(SQLITE_VERSION())) FROM vt0, t0, t1 WHERE (CASE WHEN (NOT (x'')) THEN ((x'') ISNULL) END) ORDER BY (vt1.c0 COLLATE NOCASE IN (((vt0.c1)<(t1.c1)))) DESC, ((+ (vt1.c1)) IN ()) ASC, ((((((((t1.c0)OR(t1.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt1.c0)) COLLATE BINARY;SELECT DISTINCT CASE CAST(t0.c0 AS REAL)  WHEN ((vt1.c1)>>(vt0.c0)) THEN MAX(vt0.c0) ELSE (+ (t1.c1)) END FROM vt0, t1 WHERE (((CASE WHEN NULL THEN 693845568 ELSE x'' END) NOT NULL));SELECT DISTINCT (((t1.c0 IN (vt1.c1))) IS TRUE) FROM t0, t1, vt0 NOT INDEXED WHERE (((LOWER(DISTINCT 0Xffffffffda0f6b47))!=(('8?R[J7^' IN ()))));SELECT DISTINCT ((t0.c1 COLLATE RTRIM)+(GROUP_CONCAT(t0.c1))) FROM t1, t0, vt0, vt1 WHERE (((NULL) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE t1.c0  WHEN LIKELY('v[-') THEN ((((vt0.c1)AND(vt0.c0)))AND(vt1.c2)) ELSE CASE x'3761'  WHEN t1.c2 THEN vt0.c1 END END, (- (((t1.c1) NOT BETWEEN (vt0.c1) AND (t1.c1)))), '' FROM t0 WHERE ((~ ((- (NULL)))));SELECT DISTINCT ((json_object(t0.c1, vt1.c1))>=(CAST(t1.c0 AS INTEGER))) FROM t0, vt1, t1, vt0 GROUP BY ((CAST(vt1.c1 AS REAL))GLOB(CAST(t1.c1 AS NUMERIC))), (- ((+ (vt0.c1)))), ((((t0.c1, vt0.c0, t0.c1, vt0.c1, t0.c17)) BETWEEN ((vt0.c0, vt1.c0, t1.c0, t1.c2, vt1.c1)) AND ((vt1.c2, t0.c1, vt0.c0, vt1.c1, vt0.c0))) IN ()); -- 0ms;
SELECT CASE TOTAL(vt1.c2)  WHEN LIKELY(t1.c1) THEN ((t0.c17) NOT NULL) END FROM vt0, t1, t0, vt1 WHERE (((((0.8638832310612055)<(x'')))+((('FALSE') NOTNULL)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((((((((((t1.c1)AND('-56644367')))AND(t1.c2)))OR(t0.c0)))OR('-1306294799')))) AND ((json_array(t1.c1, t1.c1, vt1.c1, t0.c17)))) DESC; -- 1ms;
SELECT DISTINCT ((x'') NOT NULL) FROM vt1, t1, t0; -- 0ms;
SELECT DISTINCT ((CAST(t1.c2 AS INTEGER))+(((vt0.c0)!=(t1.c1)))) FROM vt0, t1; -- 0ms;
SELECT ALL (('-871424770')AND(t0.c17)) COLLATE BINARY FROM vt0, t0, t1; -- 0ms;
SELECT DISTINCT x'', LIKE((vt0.c1 IN (vt0.c1)), COUNT(*)), (0.22119700196915837 IN (((vt0.c1)OR(vt0.c1)), ((vt1.c0)LIKE(vt1.c0)))) FROM vt1;SELECT ALL ((((vt0.c1)OR(t1.c1))) NOT BETWEEN ((((vt1.c2))>=((t1.c2)))) AND (((((vt0.c1)OR(t0.c17)))AND(t0.c17)))) FROM t1 WHERE ((((x'')<=(x'')) IN ()));SELECT json(((vt0.c0)/(t1.c0))) FROM vt1, t1, t0;SELECT DISTINCT (((t1.c0 IN ()))+((~ (t1.c0)))), CUME_DIST() OVER (), ((vt1.c0 COLLATE BINARY)LIKE(vt1.c1)) FROM t1 GROUP BY (((((((((NOT (t1.c0)))OR(((('f+', t1.c0, 0.030140111954151227)) BETWEEN ((vt0.c0, t1.c2, vt0.c0)) AND ((vt0.c1, vt1.c1, t1.c2))))))OR(((t1.c2)&(vt0.c1)))))AND(((t1.c1)/(t1.c0)))))AND(TRIM(DISTINCT t1.c2))) LIMIT -1350654400 OFFSET -871424770;SELECT DISTINCT ((CASE vt1.c2  WHEN t0.c17 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 END) IS FALSE) FROM vt1, vt0, t1, t0 WHERE (((('1028305319' IN ()))==((x'' IN (x''))))); -- 0ms;
SELECT DISTINCT (~ (((vt1.c2) NOT BETWEEN (x'7399') AND (vt0.c1)))) FROM t0, vt0, t1 CROSS JOIN vt1 ON ((((t1.c2)/(t1.c1))) NOTNULL) WHERE ((- ((('-1350654400')=(0.916233634559343))))) UNION SELECT IFNULL(DISTINCT ((((((((((((vt0.c0)OR(t0.c17)))AND(vt1.c2)))OR(vt1.c2)))AND('')))OR(t1.c0)))OR(t1.c0)), (- ('765191609'))) FROM t1, t0, vt0 RIGHT OUTER JOIN vt1 ON (((((('693845568') ISNULL))AND(CASE WHEN vt0.c1 THEN '' WHEN vt1.c2 THEN t0.c17 WHEN vt0.c0 THEN t1.c0 END)))AND(((vt1.c1)&(vt1.c1)))); -- 0ms;
SELECT ALL ((((vt0.c1)<<(vt1.c1)))&(TRIM('0.22119700196915837', t1.c2))) FROM vt1, t1, vt0 WHERE (((('{}', 0.5185263865136104, NULL)) NOT BETWEEN ((((NULL) IS FALSE), ((0.6549581185989388) NOT BETWEEN (0.961272118571883) AND (NULL)), CASE WHEN NULL THEN 0.6549581185989388 ELSE '' END)) AND ((UNLIKELY(DISTINCT '}0kpvCb'), 0.48217188106485 COLLATE BINARY, NULL COLLATE NOCASE)))); -- 0ms;
SELECT ALL (+ (((t1.c1)/(t1.c0)))) FROM t0, vt0, t1; -- 0ms;
SELECT ((((vt1.c1)LIKE(vt1.c0))) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (CAST(vt1.c1 AS NUMERIC))), CASE WHEN IFNULL(DISTINCT vt1.c0, t0.c0) THEN t0.c1 ELSE CAST(vt1.c0 AS BLOB) END, CAST(x'' AS INTEGER) FROM vt0, t0, t1, vt1; -- 0ms;
SELECT AVG(CAST(NULL AS NUMERIC)), (((vt0.c1 COLLATE NOCASE, (t1.c2 IN ()), ((vt1.c1)!=(t1.c0))))>((((vt1.c0)*('637416714')), CAST(vt1.c2 AS REAL), t1.c1))), ((((t0.c1)|(t0.c17)))==(vt1.c2 COLLATE NOCASE)) FROM t0, vt1, t1;SELECT DISTINCT '-636523705' FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((t1.c0, COALESCE(vt0.c0, vt0.c0), 0.9671388878932939))!=((vt0.c1, CASE t1.c2  WHEN t0.c17 THEN t0.c0 WHEN x'' THEN vt1.c2 WHEN t1.c2 THEN vt1.c2 WHEN vt1.c0 THEN t0.c1 WHEN t1.c1 THEN t1.c2 END, (+ (t1.c1))))), ((((vt0.c0)GLOB(t0.c17)))IS(json_extract(t0.c0, t1.c2))), ((NULL COLLATE BINARY) IS FALSE) FROM t1, vt0, vt1, t0 WHERE (0xffffffffe8614068); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c2)>=(vt0.c1))) OVER ( PARTITION BY ((((t0.c1)AND(vt1.c0)))AND(vt1.c1)) COLLATE BINARY, 0.961272118571883 GROUPS (((((vt0.c1, t0.c17, t1.c0)) BETWEEN ((vt0.c0, t1.c0, vt1.c0)) AND ((vt1.c2, vt1.c2, vt0.c0)))) NOT NULL) PRECEDING) FROM vt0 GROUP BY ((((((((((((t1.c1 COLLATE BINARY)AND(json_array_length(vt1.c2, NULL))))AND(t1.c0)))AND(NULL)))OR(((vt1.c1) NOT BETWEEN (vt0.c0) AND (0Xffffffffdfceb461)))))AND(t1.c1)))OR(vt0.c0));SELECT DISTINCT ((CASE ''  WHEN NULL THEN t1.c1 WHEN t0.c1 THEN vt1.c2 WHEN t0.c17 THEN vt1.c2 ELSE vt1.c0 END)LIKE((vt1.c2 IN (t0.c17, t1.c0)))), CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) THEN (vt0.c1 IN ()) END, x'' FROM vt0 WHERE (((((0.2871459278427365)||('765191609'))) NOT BETWEEN (NULLIF(DISTINCT 0.7517300781960216, 2122762796)) AND (('QX' IN ('0.8638832310612055', 0.9736504947729477)))));SELECT ALL COALESCE(DISTINCT ((NULL) NOTNULL), ((x'') BETWEEN (vt1.c2) AND (t1.c2))) FROM t1, t0 WHERE (((('' IN ())) BETWEEN (((x'9533') IS TRUE)) AND ((('-1370150767')OR(''))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN t1.c1 END)AND(((t1.c0)OR(t1.c1)))) ASC  NULLS FIRST;SELECT DISTINCT ((0.08820468408784354 COLLATE NOCASE) IS TRUE) FROM t1, vt0, t0, vt1 WHERE (((x'')==(0xffffffffaf7ea640)) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((t0.c0)>(vt0.c1)))||(((((((((t1.c0)AND(t1.c2)))OR(t1.c0)))OR(vt1.c0)))AND(t1.c2)))), (((t0.c17 IN ()))>=(((t1.c0) NOT BETWEEN (t1.c1) AND (t0.c1)))), IFNULL(DISTINCT NULLIF(DISTINCT 0.26973787056801923, t0.c17), (+ (t0.c1))) FROM vt1, vt0;SELECT DISTINCT '294974260', CASE WHEN TIME(vt1.c2, t0.c0, vt1.c0) THEN CASE WHEN t0.c17 THEN t0.c0 ELSE t1.c2 END END, GROUP_CONCAT(((vt0.c0)>>(vt1.c2))) FROM t0, vt1, t1 WHERE (STRFTIME(('-䁨 [' IN (NULL)), x'7a1d' COLLATE RTRIM, '-676961157' COLLATE NOCASE, CAST(x'95fa' AS TEXT), (('') IS TRUE)));SELECT ((CASE WHEN t1.c1 THEN t1.c1 ELSE '' END)IS(((vt1.c2) BETWEEN (t1.c2) AND (0.18946345927109454)))), ((((((vt1.c0) IS FALSE))OR(((vt1.c0)<>(t1.c0)))))AND(((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))), ((vt1.c1 COLLATE BINARY) NOT BETWEEN ((~ (vt1.c1))) AND (((((x'')OR(vt1.c1)))OR(x'')))) FROM vt0, t0, t1 WHERE (((('637416714', '', '-1533999953')) BETWEEN ((((1200319622)>('BW/jL')), (('-1e500') BETWEEN ('-1') AND (-291568362)), CASE WHEN 0.7608401764920383 THEN '*H璫ZL.' ELSE '977165255' END)) AND ((((NULL) NOT NULL), ((NULL)/(NULL)), ((0Xffffffffedde1c57)AND(NULL)))))) ORDER BY (((CAST(vt1.c2 AS TEXT)))>(((((vt1.c0))<>((vt1.c0))))));SELECT DISTINCT CAST((((vt0.c1))=((vt1.c1))) AS TEXT) FROM t1, t0, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((((0.7608401764920383)) BETWEEN (('0.961272118571883')) AND ((x''))))); -- 0ms;
SELECT COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE (((((1491374989) IS TRUE))<(((NULL)!=(NULL))))); -- 0ms;
SELECT ALL (((((t0.c17)) BETWEEN ((t1.c2)) AND ((t1.c1))))>=(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c17)))), CAST(t0.c0 AS BLOB) COLLATE RTRIM, t0.c0 FROM t0, vt0, t1; -- 0ms;
SELECT DISTINCT JULIANDAY(((((vt0.c1)AND('0.26973787056801923')))OR(vt1.c0)), t1.c1, '-56644367' COLLATE NOCASE, COUNT(vt1.c1), x''), COALESCE((t1.c2 IN ()), CASE vt0.c1  WHEN t1.c1 THEN vt1.c0 END), ((((~ (t1.c0)), ((t0.c0)==(vt0.c0)), (((vt1.c2)) BETWEEN ((t0.c17)) AND ((t1.c2)))))<=(((t0.c1 IN ()), (~ (vt1.c1)), COUNT(vt1.c0)))) FROM vt0, t1, t0 LIMIT -636523705 OFFSET -1533999953;SELECT ((((t1.c2)|(t0.c1))) NOTNULL) FROM t0;SELECT DISTINCT LAST_INSERT_ROWID() FROM t1, vt1, vt0, t0; -- 0ms;
SELECT DISTINCT '4L[.)' FROM t1, t0, vt0 WHERE ((((x'')) NOT BETWEEN ((((((NULL)AND('')))OR(NULL)))) AND (((-1604424675 IN ()))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t0.c1 THEN t1.c2 WHEN t0.c0 THEN t1.c2 WHEN t1.c1 THEN vt0.c1 ELSE vt1.c2 END) OVER ( ORDER BY ((((((((NULL)OR(vt1.c1)))OR(RTRIM(t1.c0))))AND((('')IS(vt0.c0)))))AND(t0.c17)) DESC, (('_g儗/U6M') NOT BETWEEN (vt1.c0) AND (0Xffffffff9f084bfd)) DESC, CASE WHEN (((x'f68b'))>=((t0.c0))) THEN HEX(vt0.c1) ELSE t1.c2 END), (((((NULL)AND(t1.c1)))AND(NULL)) IN ()), ((((t1.c2) BETWEEN (t0.c1) AND (0.3369576912926471)))||((NOT (x'')))) FROM t1, vt1, vt0, t0 WHERE ((((+ ('O')))GLOB(CAST(x'' AS BLOB)))) LIMIT 2007333447; -- 0ms;
SELECT (((t1.c2 IN ())) BETWEEN ((vt0.c1 IN ())) AND (ROUND(vt1.c0, 1030061306))), ((t0.c17) NOT BETWEEN (vt1.c2) AND (vt0.c0)) COLLATE RTRIM, vt0.c0 FROM t0, vt1, vt0 WHERE (x'' COLLATE NOCASE); -- 0ms;
SELECT ((t0.c1 COLLATE RTRIM)-(((x'')<<(t0.c0)))), ((((t1.c2)|(t1.c0))) ISNULL), COUNT(CAST(vt0.c1 AS TEXT)) OVER () FROM t0 WHERE (CASE WHEN ((x'b0d9') BETWEEN (NULL) AND ('')) THEN CAST('' AS REAL) WHEN ((('6G'))==((0xfffffffff89eacd8))) THEN (- ('1416624608')) WHEN CAST(-540101535 AS BLOB) THEN -1.533999953E9 COLLATE BINARY END) LIMIT -1350654400;SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c17 THEN t1.c2 WHEN vt1.c0 THEN 1.030061306E9 WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c2 THEN t1.c2 ELSE vt0.c0 END)OR(CASE vt0.c1  WHEN t0.c17 THEN vt0.c1 END)))AND((('Yh') ISNULL))) FROM vt0, t1 WHERE (((('4l[.)')||(0.2871459278427365)) IN ((((x'598a'))<>((1860992819))))));SELECT DISTINCT CASE (+ (vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN vt1.c1 WHEN (((('')AND(t1.c1)))AND(vt1.c2)) THEN CASE WHEN t0.c1 THEN vt0.c1 ELSE t0.c17 END WHEN t0.c1 COLLATE BINARY THEN '-301810204' ELSE ((t1.c2)*(t1.c2)) END, (((t0.c0) BETWEEN (t1.c1) AND (t0.c1)) IN ()), ((AVG(vt1.c1)) NOT BETWEEN ((((vt0.c1))>((vt1.c0)))) AND (((vt1.c0) NOT NULL))) FROM vt0, t0, t1, vt1; -- 0ms;
SELECT ALL vt1.c0 FROM t0, vt1, vt0 WHERE (((((((x'')IS(0Xffffffffa3589d33)))OR(highlight(2124704968, x'', -651354212, NULL))))OR(CASE 0x478b6c86  WHEN 0x3d7e297b THEN NULL END)));SELECT DISTINCT ((vt1.c0 COLLATE RTRIM) ISNULL) FROM t1, vt0, vt1, t0 ORDER BY (((((((((~ (vt0.c1)))OR(CAST(t1.c0 AS NUMERIC))))AND(t1.c0 COLLATE RTRIM)))OR(((vt0.c0)>(t1.c1)))))AND(CASE t0.c1  WHEN vt0.c1 THEN t1.c0 END)), ((IFNULL(DISTINCT t1.c1, vt1.c0)) BETWEEN (vt1.c0) AND (vt0.c1)) ASC  NULLS FIRST, (((((x'') NOT NULL), vt1.c1, ((t0.c1) IS FALSE)))>((((vt0.c0)=(t0.c17)), ((t0.c1) NOT BETWEEN (t0.c0) AND (vt1.c2)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))); -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT vt0.c0)) NOTNULL), ((COALESCE(0.5421399000485322, t1.c1))AND(TOTAL(vt1.c0))), (((vt1.c2)) NOT BETWEEN ((((((vt0.c1)AND(t0.c0)))AND(x'c78b')))) AND (((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((x'4b04')))))) FROM vt1, t1 WHERE (((0.20291958755184802) NOT NULL));SELECT ALL ((((((((0.43663569567763116)AND(CAST(vt0.c1 AS TEXT))))OR(((t0.c1) NOT NULL))))AND(x'')))OR(vt0.c1)) FROM vt0;SELECT vt0.c0, ((((NULL COLLATE RTRIM)OR(t0.c1 COLLATE BINARY)))OR(0.5112958008858471)), (((((t0.c17))<>((vt1.c2)))) BETWEEN (((vt1.c1) IS FALSE)) AND (((t1.c2)GLOB(t0.c0)))) FROM t0, vt0 GROUP BY (NOT ((((vt0.c0, vt1.c2, t1.c2, t1.c2, t0.c1))!=((vt0.c0, t1.c2, t1.c0, t1.c1, t1.c1))))), (((((t0.c1)AND(vt1.c2)))AND(vt1.c2)) IN ()), NULLIF('Hj', (t1.c2 IN (t1.c2, t0.c17)));SELECT ALL AVG((+ (NULL))) OVER () FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN vt0.c0 THEN t0.c17 END)) FROM t0, t1, vt1 GROUP BY CAST(CAST(t1.c1 AS REAL) AS REAL), (x'' IN ()), NULLIF(((t0.c1)>=(vt0.c1)), (t1.c2 IN ()));SELECT (~ ((((t1.c0))<((t1.c0))))) FROM t0, vt1, vt0, t1; -- 0ms;
SELECT ALL ((((((vt1.c1) IS TRUE))AND((t0.c1 IN ()))))OR(MAX(t0.c0))), ((((vt0.c1) NOTNULL))&((((t0.c17)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))), (((vt1.c1)) NOT BETWEEN ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((((vt0.c0) NOT NULL)))), vt0.c1, TOTAL((+ (t1.c1))) FROM t0, vt1;SELECT DISTINCT ((((t0.c0 IN (t1.c1)), ((vt0.c1) BETWEEN (vt1.c1) AND (t0.c1)), t1.c1 COLLATE RTRIM))<((CAST(vt1.c0 AS REAL), json(vt1.c0), ((t0.c1)*(t0.c17))))), (((t0.c0) NOTNULL) IN ()), t1.c2 FROM vt1 NOT INDEXED, vt0;SELECT 0.026229847094212166 FROM t1, vt0, t0, vt1; -- 0ms;
SELECT ALL x'' FROM vt1, vt0, t0 WHERE (NULL) EXCEPT SELECT DISTINCT AVG((((t1.c0, t1.c1, vt1.c0, x'', t0.c0)) NOT BETWEEN ((t0.c0, t1.c2, t1.c1, vt0.c1, t0.c17)) AND ((t1.c1, 0.15221774856596482, vt1.c1, vt0.c0, t1.c2)))) OVER () FROM vt0, t1, vt1 WHERE (NULL);SELECT t0.c1, (CAST(t1.c0 AS REAL) IN ()), ((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))=('O')) FROM vt0, t1, vt1, t0 ORDER BY ((((vt1.c0) BETWEEN (t1.c0) AND (t0.c1)))*(IFNULL(DISTINCT vt0.c1, t1.c2)))  NULLS FIRST, 0Xffffffffa3589d33, COALESCE(DISTINCT vt0.c0, t0.c17) COLLATE RTRIM DESC; -- 1ms;
SELECT DISTINCT '-1370150767' FROM t0, t1 WHERE (CASE WHEN NULLIF(0x3d4ab1a7, '936183429') THEN 0.7030188865784368 WHEN (+ (x'c134')) THEN TRIM(DISTINCT '', 0.16702159581241827) WHEN (('354073731') BETWEEN (x'19ab') AND (-8.7142477E8)) THEN ((NULL) IS FALSE) ELSE (((0.11420105584480678)) BETWEEN (('*HNZL.')) AND ((0xffffffff8eea327b))) END); -- 0ms;
SELECT vt0.c1, CASE json_array_length(t1.c2, vt1.c1)  WHEN ((((vt0.c1)OR(x'b98b')))AND(t0.c17)) THEN t1.c0 COLLATE NOCASE WHEN GROUP_CONCAT(t0.c0) THEN (((0.916233634559343)) BETWEEN ((vt0.c1)) AND ((t1.c0))) WHEN CASE WHEN vt1.c2 THEN t1.c0 WHEN t1.c0 THEN t0.c17 WHEN vt1.c2 THEN t0.c17 ELSE vt1.c1 END THEN (((t0.c1, vt1.c2, t0.c1))<((t0.c17, vt1.c2, t0.c0))) ELSE (((t1.c0, t0.c17, vt1.c1, t0.c0, vt1.c2)) NOT BETWEEN ((t1.c0, vt0.c0, vt1.c1, t0.c1, t0.c17)) AND ((t1.c0, vt1.c1, t0.c17, t0.c1, vt0.c0))) END, ((((((((vt1.c2)OR(979431584)))OR(((t1.c0) NOT BETWEEN (x'c73c') AND ('0.8638832310612055')))))OR((~ (t1.c1)))))AND((~ (vt1.c0)))) FROM t0, t1;SELECT CASE WHEN (~ (t1.c2)) THEN (((t0.c0)) BETWEEN ((vt0.c1)) AND ((x'26db1f00'))) ELSE ((vt0.c1)&(t1.c0)) END FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(LIKELIHOOD('1416624608', 0.7367865122415915)));SELECT DISTINCT ((t1.c0) BETWEEN ((vt0.c0 IN (t0.c17))) AND (CASE 0.3904315429184143  WHEN t1.c0 THEN t0.c17 WHEN vt0.c0 THEN t1.c2 WHEN t1.c1 THEN t1.c2 ELSE '693845568' END)) FROM vt1, vt0, t1 WHERE (((((CAST(x'9d8a' AS INTEGER))OR(CAST('0.5185263865136104' AS INTEGER))))OR(x'' COLLATE NOCASE)));SELECT DISTINCT (((((vt1.c0, t0.c1, vt0.c0, vt1.c0, t1.c2))==((t0.c1, vt0.c1, vt1.c1, t0.c1, t0.c17))))<((((vt1.c0, t1.c2, t1.c2))<((t0.c1, t1.c0, vt1.c2))))) FROM vt0, t0, vt1, t1 ORDER BY (NOT (t0.c17)) COLLATE NOCASE COLLATE NOCASE  NULLS LAST LIMIT -1852901688; -- 0ms;
SELECT DISTINCT (((t0.c17 IN ())) NOT BETWEEN ((NOT (vt1.c0))) AND (TRIM(t1.c2))) FROM t1, vt1, vt0 WHERE ('rc'); -- 0ms;
SELECT CAST((vt0.c0 IN (vt1.c2)) AS NUMERIC), ABS(DISTINCT ((t0.c0)IS NOT(t0.c1))), ((CASE WHEN 0Xffffffffee9f0516 THEN t0.c0 END) BETWEEN (NULL) AND (t1.c1)) FROM t1, vt0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) BETWEEN (CAST(vt1.c2 AS INTEGER)) AND ((t1.c2 IN (NULL)))) RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(vt1.c1 AS NUMERIC) THEN CASE vt1.c0  WHEN t0.c1 THEN t0.c0 END ELSE ((vt0.c1) IS FALSE) END WHERE ((((- (0.15221725991864532)))&(x'')));SELECT DISTINCT (((t0.c0 IN ()))AND(((t0.c1)-(x'a7d9')))) FROM vt1, t0 WHERE (((((x'')*('	~'))) ISNULL)); -- 0ms;
SELECT DISTINCT t0.c0, MIN(json_array_length(vt0.c1)), (- (((vt1.c2) BETWEEN (vt0.c1) AND (vt1.c2)))) FROM vt1, t1;SELECT DISTINCT ((CASE vt1.c0  WHEN t0.c17 THEN t1.c2 ELSE t0.c1 END) IS TRUE) FROM vt0;SELECT DISTINCT '' FROM t1 ORDER BY ((((((vt0.c1)AND(t1.c0)))AND(vt0.c0))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND (NULL))  NULLS LAST LIMIT 1428036115 OFFSET -1983607718;SELECT ALL NULL FROM vt1, t0, t1 EXCEPT SELECT DISTINCT (t1.c0 IN ()) FROM t0, vt0, vt1 WHERE (CAST(('8?r[j7^' IN ()) AS BLOB)); -- 0ms;
SELECT ALL ((((((((((t1.c0)OR(vt1.c1)))OR(t0.c0)))AND(vt0.c0)))AND(t0.c1)))|(((vt1.c2)%(vt1.c1)))), ((-953809713)IS NOT((((vt1.c1)) BETWEEN ((t1.c1)) AND ((t0.c0))))), (((((NOT (t0.c1)))AND(((vt1.c0)=(t1.c2)))))OR('-1604424675')) FROM vt1 WHERE (((((x'')>=('-1995067425'))) NOT NULL));SELECT ((((CASE WHEN t0.c17 THEN vt1.c2 ELSE vt0.c0 END)AND(CAST(t1.c0 AS NUMERIC))))OR((NOT ('-822570929')))) FROM t0 ORDER BY ((((((('eA', t1.c1, t1.c2)) BETWEEN ((vt1.c1, vt1.c2, vt0.c1)) AND ((x'', '322985135', vt1.c2))))OR((t1.c0 IN ()))))OR((- (t1.c2)))) LIMIT 1688005339 OFFSET 354073731;SELECT ((t0.c0)GLOB(t1.c0)) COLLATE RTRIM, (((t1.c0)) NOT BETWEEN (((((t0.c17)) NOT BETWEEN ((t1.c2)) AND ((vt1.c2))))) AND ((((t0.c1) NOTNULL)))), DENSE_RANK() OVER () FROM vt1 WHERE (CASE WHEN ((((((((0.7517300781960216)AND(-1604424675)))AND('iL')))OR(x'6ff2')))AND('2h')) THEN (('	~') NOT NULL) ELSE json_insert(-444190014, NULL, '}뻣') END) LIMIT 235764640;SELECT (COALESCE(vt1.c2, vt0.c0) IN (vt1.c0, vt1.c2)) FROM t0, vt1, t1, vt0 GROUP BY CASE WHEN ((vt1.c2) ISNULL) THEN vt1.c2 COLLATE RTRIM ELSE ((t1.c2)IS(vt1.c2)) END, ((CASE t1.c2  WHEN vt0.c0 THEN t1.c2 END) ISNULL), CASE ((NULL)<(t1.c2))  WHEN 0.5605730339616435 THEN (NOT (t0.c17)) ELSE ((t1.c0) NOT BETWEEN (vt1.c2) AND (t1.c2)) END; -- 0ms;
SELECT DISTINCT MIN(t1.c2 COLLATE NOCASE) FROM vt1, t0, vt0 WHERE (CASE (x'' IN ())  WHEN 0Xfffffffff463c9d1 COLLATE RTRIM THEN ((0.7288757954430712)GLOB(0.7404271209963177)) END) LIMIT -2131127655 OFFSET 2124704968;SELECT DISTINCT (((t1.c1)<<(t0.c17)) IN ()) FROM t0, t1, vt0, vt1; -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS BLOB))&(((t0.c1) BETWEEN (t1.c1) AND (vt1.c0)))) FROM t0 WHERE ('632376661') ORDER BY (((((((((NOT (vt1.c1)))AND(t1.c1)))OR((NOT (vt1.c2)))))AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((vt1.c0))))))OR(RTRIM(NULL))) DESC  NULLS LAST;SELECT DISTINCT ((((NOT (t1.c2))))>((t0.c17 COLLATE NOCASE))) FROM vt1 WHERE (((('')<=('-486243984')) IN ())) ORDER BY ((((((((((vt1.c2)*(vt1.c1)))AND(CAST(vt0.c1 AS INTEGER))))AND((+ (vt0.c0)))))AND(CAST(vt1.c2 AS BLOB))))AND((+ (t1.c0))));SELECT DISTINCT ((((((t0.c17)AND(x'')))OR(t1.c1)))>>((~ (t1.c2)))) FROM vt1;SELECT DISTINCT (vt0.c1 COLLATE NOCASE IN ()) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (((((vt1.c0))<>((t1.c2))))IS NOT(((vt0.c1)%(3.54073731E8)))) FROM t1, t0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((CAST(t1.c1 AS TEXT)) IS FALSE) FROM t1; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1, t1 NOT INDEXED WHERE (LOWER((NULL IN ()))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c17 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 WHEN t0.c0 THEN t1.c1 ELSE t1.c2 END) ISNULL) FROM vt1 WHERE ((+ (TRIM('-397030103')))) GROUP BY ((((CHANGES())AND(((t1.c2) IS FALSE))))OR(CAST(vt1.c2 AS TEXT))) HAVING TOTAL(MAX(CAST(t0.c0 AS BLOB)));SELECT ALL (MAX(t1.c2) IN (t0.c17 COLLATE BINARY)) FROM vt0, t1, vt1 WHERE ((((x'', x'', NULL))!=((x'', NULL, x''))) COLLATE BINARY);SELECT DISTINCT (((t1.c2 IN ()))==(((t0.c0) NOT BETWEEN (x'') AND (t0.c0)))) FROM vt1, t1 GROUP BY CAST(CASE vt1.c2  WHEN 0.3080663720480489 THEN vt1.c0 END AS INTEGER);SELECT DISTINCT TOTAL(((((vt0.c0)OR(vt1.c2)))OR(t0.c1))) OVER () FROM t1, vt1, vt0, t0 WHERE (CASE WHEN NULL THEN 0X625b5117 END COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT DATETIME(((vt0.c1)>=(t0.c0)), ((((((((vt0.c1)OR(t0.c0)))AND(vt1.c0)))AND(vt1.c2)))OR(t0.c0)), (- (vt1.c2))) FROM vt0, vt1, t0, t1 WHERE (((((- (0.410634799661698))))>(((('') ISNULL))))); -- 1ms;
SELECT (((((0X69eaffdf IN (vt1.c0)))AND(vt1.c2 COLLATE NOCASE)))OR(CAST(t0.c0 AS REAL))) FROM t1 WHERE (1688005339) GROUP BY SQLITE_COMPILEOPTION_USED(((vt1.c1) IS TRUE)) HAVING ((((CAST(vt0.c1 AS TEXT))OR(((vt1.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))))OR(CAST(vt1.c0 AS NUMERIC)));SELECT DISTINCT ((((json_remove(vt1.c2, t1.c1))AND((+ (t0.c17)))))AND(((vt1.c0) NOTNULL))), (((((t0.c17)OR(vt0.c1)), 0xffffffffdfceb461, COUNT(*)))<((0.7941590474509455, (t0.c17 IN ()), (NOT (t1.c0))))), CASE WHEN vt0.c0 COLLATE RTRIM THEN NULL WHEN (((vt1.c2))!=((vt1.c2))) THEN CAST(vt1.c1 AS INTEGER) WHEN (vt1.c2 IN (vt1.c1, t0.c0)) THEN vt1.c2 COLLATE RTRIM END FROM t1, vt1, vt0 GROUP BY vt1.c2;SELECT NULLIF(DISTINCT ((vt0.c1)/(vt1.c1)), ((vt1.c2)=(t0.c0))), NULL, x'3477eff1' FROM t1, vt1, vt0, t0 WHERE (((((NULL)!=(NULL)))>(('-162768371' IN (-1.370150767E9))))); -- 0ms;
SELECT DISTINCT CAST(AVG(vt1.c2) AS BLOB), (+ (((((t1.c0)AND(vt0.c0)))AND(vt1.c1)))), ((t0.c1) IS FALSE) FROM vt1, t0 GROUP BY (+ (vt0.c0)) COLLATE NOCASE HAVING TOTAL(vt0.c0);SELECT (((~ (t1.c2))) IS FALSE) FROM vt1, t0;SELECT DISTINCT ((((t1.c0)==(vt1.c2))) BETWEEN (NULL COLLATE RTRIM) AND (((vt0.c1)LIKE(t1.c2)))) FROM t0;SELECT DISTINCT (((CAST(vt1.c0 AS BLOB)))>=((CAST(t1.c2 AS REAL)))), CAST(((((t0.c0)OR(t0.c1)))OR(t1.c0)) AS NUMERIC), (((- (vt1.c2))) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS REAL))) FROM vt1, t1, vt0 WHERE (LIKELIHOOD(DISTINCT CAST('0.9671388878932939' AS BLOB), 0.43632200150459755));SELECT DISTINCT CASE ((((t1.c2)AND(vt0.c1)))AND(t0.c17))  WHEN ((((vt1.c0)OR(vt0.c1)))AND(t0.c0)) THEN CAST(vt1.c1 AS TEXT) ELSE CASE t1.c2  WHEN vt1.c1 THEN vt1.c0 END END FROM vt1 WHERE (CAST(CAST(0xffffffffa3589d33 AS NUMERIC) AS BLOB));SELECT DISTINCT (~ (CAST(t0.c17 AS NUMERIC))) FROM vt1, vt0, t0, t1; -- 1ms;
SELECT ALL (((((vt0.c0, vt1.c0, t1.c2)) BETWEEN ((vt1.c0, vt0.c1, vt1.c2)) AND ((vt1.c0, vt0.c0, t1.c0))))||(TOTAL(vt1.c2))), (NOT (CASE t1.c2  WHEN vt0.c1 THEN t0.c0 WHEN t0.c1 THEN t1.c2 WHEN vt1.c0 THEN vt0.c1 END)), x'' FROM t0 LIMIT -1194838562 OFFSET -1263925826;SELECT ALL (UPPER(vt0.c1) IN (((vt1.c1)%(vt0.c0)), 0.973262539576847 COLLATE BINARY)), (((vt1.c0))!=(((NOT (vt0.c1))))), (('1627274879')||(CASE vt1.c1  WHEN t1.c0 THEN vt1.c2 ELSE t1.c1 END)) FROM t0, vt1, t1, vt0 ORDER BY (~ (((t0.c17) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC; -- 0ms;
SELECT ALL vt0.c1 FROM vt0, vt1, t1 WHERE (((((('-288553394')>(x'')), (('') NOTNULL), ((0.007910787081942816)IS(x'2120'))))<((CASE 0.4251551179419254  WHEN NULL THEN 0.40003953289059224 ELSE NULL END, (('1200319622') NOT BETWEEN (x'') AND (NULL)), (((0Xffffffffa3509e2f)) BETWEEN (('-1194838562')) AND ((x'4be6'))))))); -- 0ms;
SELECT CASE WHEN x'3887' THEN CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c2 WHEN t1.c0 THEN vt1.c1 ELSE vt0.c0 END WHEN t0.c1 COLLATE BINARY THEN (- (t0.c1)) WHEN CASE WHEN t1.c1 THEN vt0.c0 END THEN json_array_length(vt0.c1) END FROM vt0, vt1, t1 WHERE (x'3a06');SELECT GROUP_CONCAT(((((NULL)OR(t1.c2)))OR(t1.c2))) FROM vt1, vt0, t1 ORDER BY (((vt0.c1 IN (t0.c0, t0.c0)))IS NOT((((vt1.c0))<>((vt0.c1))))) ASC;SELECT CASE WHEN 0Xffffffff8a830574 THEN 'a\n*vg[TAF' WHEN ((t0.c17) NOTNULL) THEN (((vt1.c1))<((vt1.c2))) WHEN ((t0.c1)<(t1.c1)) THEN json_valid(t1.c2) END, ABS(DISTINCT ((((t1.c1)AND(vt0.c0)))AND(t0.c0))), ((((vt1.c0)=(vt1.c1))) BETWEEN (CAST(t0.c0 AS REAL)) AND (((t1.c0) BETWEEN (t1.c2) AND (t1.c2)))), 0.2871459278427365, (((t0.c1, vt0.c0, vt1.c1)) NOT BETWEEN (((vt0.c1 IN ()), HEX(t0.c17), GROUP_CONCAT(t0.c17))) AND ((((vt1.c1)-(vt1.c2)), ((t0.c0) BETWEEN (t0.c1) AND (vt1.c1)), (vt1.c2 IN (t0.c1))))) FROM vt0;SELECT ((GROUP_CONCAT(vt1.c0)) ISNULL), (((((((vt0.c0, t1.c2, vt1.c2)) NOT BETWEEN ((vt0.c0, vt1.c2, t0.c0)) AND ((vt1.c2, vt1.c2, t1.c0))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))))AND(((vt1.c2)|(t1.c1)))), CASE WHEN -9.53809713E8 THEN MIN(vt1.c0, vt1.c0) ELSE ((vt0.c0)AND(0.36336636174179693)) END FROM vt0 WHERE (NULL);SELECT ((TOTAL(vt0.c0)) BETWEEN ((t0.c1 IN (vt1.c0))) AND (CAST(vt0.c0 AS NUMERIC))), ((((((vt1.c0)AND(t1.c1)))AND(vt1.c2))) ISNULL), t1.c0 FROM vt0 LIMIT -21209678;SELECT ALL ((((t0.c17)LIKE(vt1.c2)))AND(((t0.c0)IS NOT(vt1.c0)))) FROM vt0 GROUP BY (((((('iMP')OR(vt1.c2)))OR(t1.c1))) IS FALSE) HAVING CASE LOWER(vt0.c1)  WHEN ((vt1.c1)/(vt0.c1)) THEN t0.c17 COLLATE NOCASE WHEN CASE t1.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END THEN ((t0.c0) IS TRUE) WHEN (~ (t1.c0)) THEN ((vt1.c2)IS NOT(vt1.c2)) WHEN ((vt1.c2)OR(vt1.c1)) THEN NULL WHEN ((t0.c1) BETWEEN ('-257383191') AND (t1.c0)) THEN NULL ELSE ((t0.c17) IS TRUE) END ORDER BY ((((t1.c1)=(vt1.c0))) IS FALSE);SELECT ALL '-1995067425' FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE x'00aaf51c'  WHEN t0.c1 THEN t0.c0 END) NOT NULL) FROM vt0 WHERE ((CASE NULL  WHEN '' THEN 0xfffffffffd66ff19 ELSE '-21209678' END IN (NULL)));SELECT (~ ((vt1.c1 IN ()))) FROM vt1, t0 ORDER BY 0.7404271209963177 ASC; -- 0ms;
SELECT ALL CASE WHEN (t0.c17 IN ()) THEN SQLITE_COMPILEOPTION_GET(vt1.c2) WHEN ((t1.c2)||(t1.c0)) THEN COUNT(*) WHEN ((vt1.c0)<(t0.c0)) THEN CASE vt1.c0  WHEN vt1.c2 THEN t1.c1 WHEN t1.c1 THEN vt1.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c1 THEN vt1.c1 WHEN t0.c1 THEN t1.c0 END WHEN json_valid(vt1.c0) THEN ((vt1.c0) ISNULL) WHEN (0.3301353809037795 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (t0.c17)) END, CASE ((vt0.c1)||(t0.c17))  WHEN (t0.c0 IN ()) THEN ((vt1.c1) NOT BETWEEN (0.3619539176027907) AND (t0.c0)) WHEN TOTAL(vt1.c2) THEN 0.6978461050971327 WHEN ((t0.c1)<(vt1.c0)) THEN ((((((((t0.c17)OR(t0.c1)))OR(vt1.c1)))AND(x'')))AND(t1.c1)) ELSE x'' COLLATE BINARY END, ((((vt1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)))|(GROUP_CONCAT(vt1.c0))) FROM vt1 ORDER BY (((vt1.c0) BETWEEN (vt1.c2) AND (t1.c2)) IN ());SELECT DISTINCT COUNT(*) OVER ( ORDER BY CASE WHEN 'f햎(\rJrv%' THEN ((vt1.c1) IS FALSE) ELSE NULL END DESC  NULLS LAST) FROM t1, vt0 WHERE ((((NULL) NOT BETWEEN (NULL) AND (0.7941590474509455)) IN ((~ ('8?9A]8v')))));SELECT ALL vt0.c0 FROM t1, vt0; -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) FROM t0 WHERE ((((((0.7761517825495009)+(x'')), CAST(NULL AS TEXT), x'0f5c', CASE NULL  WHEN 0.928259072934493 THEN x'69dc' WHEN 0Xffffffffdd463b6c THEN 'be纗bH' WHEN 'r' THEN '94' ELSE NULL END, ((x'') BETWEEN ('0.5112958008858471') AND (0.5289865868728978)), NULL, ((-1661787059) NOT BETWEEN (x'') AND (NULL))))<=(('곘∕', (((('347726342')AND(0.5393828687667648)))OR('<\rk')), (x'' IN ()), ((x'')=('')), CASE x''  WHEN '-1897254277' THEN x'' WHEN NULL THEN 0.11420105584480678 WHEN x'cc34' THEN '-1604424675' ELSE x'' END, STRFTIME(1564226241, x'', x'', 'Hj', 0.8638832310612055), ((NULL) BETWEEN ('958989364') AND (x'')))))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0, t1, t0 ORDER BY vt1.c1, ((((((((((vt1.c1)AND(0.02985367697243213)))AND(vt0.c1)))OR(vt0.c1)))AND(t1.c1))) IS TRUE) ASC  NULLS LAST;SELECT DISTINCT ((((((((((((((vt1.c1)AND(t0.c0)))AND(vt0.c1)))OR(x'')))AND(vt1.c2)))OR(vt1.c2)))AND(vt0.c1)))+((vt1.c0 IN ()))) FROM t1, vt1, t0, vt0; -- 0ms;
SELECT ((vt0.c0 IN ()) IN (((((t0.c0)OR(vt1.c2)))OR(vt1.c1)))), load_extension(((x'') NOT BETWEEN (t1.c0) AND (t1.c2)), ((t0.c1) NOT NULL)), ((((((vt0.c1)IS NOT(t0.c1)))OR(((t0.c0)IS(t1.c0)))))OR(((t0.c0) ISNULL))) FROM t0, vt1, vt0 WHERE (CAST((((0.7874628435838567, '-54151052', '1737053869'))<>((NULL, NULL, 0.19386572421297887))) AS INTEGER));SELECT DISTINCT AVG(UNLIKELY(DISTINCT t0.c1)), ((- (vt0.c0)) IN (LIKELIHOOD(DISTINCT t1.c2, 0.5774175820785395), '-1058919786')), AVG((t1.c0 IN ('L', t0.c17))), 0X546ff9e0, (((vt1.c2)+(t1.c2)) IN ()) FROM vt0, vt1 WHERE (CASE x'28e4'  WHEN ((2007333447)GLOB('1735003662')) THEN (('1860992819')<(-1556620356)) WHEN TRIM(0.3360953343729861, 2102982553) THEN NULL WHEN CAST(NULL AS TEXT) THEN '1777008607' ELSE (((('1516885500')OR(x'8327')))OR('-1661787059')) END) LIMIT -56644367;SELECT DISTINCT CASE ((vt1.c2)+(t0.c17))  WHEN HEX(vt0.c1) THEN (- (t1.c0)) END, ((((vt0.c1)<(vt1.c0))) BETWEEN (((t0.c0) IS TRUE)) AND (((vt1.c1)<=(t0.c17)))), (NOT (CAST(vt1.c1 AS NUMERIC))) FROM vt0 WHERE (ABS(DISTINCT (- (0xffffffffdfceb461))));SELECT ALL AVG(((((NULL)OR(t1.c0)))OR(t0.c0))) OVER ( ORDER BY ((((x'ace1') ISNULL))||((~ (t0.c0)))) DESC), vt1.c2, COUNT(ROUND(t1.c2, t0.c17)) OVER () FROM vt1 WHERE (((((NOT (x'd80c62eca68a'))))>((TIME(0.3839854612228124, x'', NULL, -2.131127655E9, '*H,᱗uﴗ')))));SELECT DISTINCT (((t1.c1 IN (t1.c1, vt1.c0))) BETWEEN (((((vt1.c2)OR(t0.c17)))AND(vt1.c2))) AND (((vt0.c1)/(vt1.c2)))) FROM t1, vt0;SELECT ALL LIKELIHOOD(DISTINCT ((((t1.c0)OR(t1.c0)))AND(vt1.c0)), 0.35892749581648065) FROM t0, vt0, vt1, t1 WHERE (GLOB(((0.2506655847758913) NOTNULL), NULL COLLATE NOCASE)); -- 0ms;
SELECT ALL GLOB(TYPEOF(t1.c2), COUNT(*)) FROM t0 INDEXED BY i29, t1, vt0 WHERE (((((0.8618221366726474) ISNULL))<(-1194838562 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((((vt0.c0))>((t0.c1)))) NOTNULL) FROM vt1, t0;SELECT ALL ((((t0.c0)=(vt1.c0)))=((NULL IN ()))), CASE WHEN (vt0.c1 IN ()) THEN (((t1.c0, t0.c1, t1.c0)) NOT BETWEEN ((t0.c17, t0.c17, t1.c1)) AND ((t0.c1, vt1.c2, NULL))) ELSE (t1.c0 IN ()) END, CAST(((t0.c0) ISNULL) AS NUMERIC) FROM vt0;SELECT DISTINCT (CASE 0Xffffffffc6499f1b  WHEN t1.c1 THEN vt1.c1 END IN (((vt0.c0)>=(t0.c0)))), ROW_NUMBER() OVER (), ((CAST(vt0.c0 AS BLOB)) BETWEEN (((t0.c1)<>(vt1.c1))) AND (((vt1.c2) NOT BETWEEN (t1.c1) AND (vt0.c0)))) FROM t0, vt0;SELECT DISTINCT (vt1.c0 IN ()) FROM vt1, vt0 WHERE (((('')) NOT BETWEEN ((TOTAL_CHANGES())) AND ((CASE 0.16702159581241827  WHEN 2.007333447E9 THEN '-444190014' ELSE '-1306294799' END)))); -- 0ms;
SELECT DISTINCT (((((((((((('-194786863')AND((t1.c2 IN ()))))OR(((t1.c2) NOT NULL))))AND(t0.c1 COLLATE BINARY)))OR(((NULL)GLOB(t0.c1)))))AND(CAST(t0.c1 AS INTEGER))))OR((((t0.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) FROM t0, t1 NOT INDEXED, vt0 WHERE ((- ((NULL IN (x''))))); -- 0ms;
SELECT CASE vt0.c1  WHEN (('-1014659810') IS TRUE) THEN ((((t0.c1)OR(vt0.c1)))AND(t0.c1)) END, AVG((vt0.c1 IN ())), (((vt1.c1, t1.c2, t1.c0)) BETWEEN ((rtreenode(t1.c0, t0.c1), (((t0.c1)) BETWEEN ((vt1.c2)) AND ((t0.c0))), CAST(vt1.c0 AS TEXT))) AND (((+ (t1.c1)), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (t0.c17)), 0.026229847094212166))) FROM vt0, vt1 WHERE (((((((((0.14015084439733438)AND(NULL)))AND(0.5028457045096341)))OR('1737053869')))AND('')) COLLATE RTRIM);SELECT ALL ((((vt1.c0, t1.c2, t1.c0))<((vt1.c1, t0.c0, t0.c1))) IN ()), (~ (MAX(t0.c1))), (NOT (TRIM(DISTINCT t0.c0))) FROM vt1, t1, vt0 WHERE (UPPER(DISTINCT '-䁨 [') COLLATE NOCASE);SELECT DISTINCT (((vt1.c0) IS TRUE) IN ()) FROM vt1 WHERE ((((NULL IN ('w!{&8'))) BETWEEN ((+ (0.9584294421229116))) AND ((((('4l[.)')AND(NULL)))OR(x''))))) ORDER BY (- ((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c0)<>(vt1.c0))) FROM t0, vt1, t1, vt0 LIMIT 1200319622 OFFSET -1370150767; -- 3ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE CASE 0Xffffffffdcf6bad5  WHEN (((t0.c0, t0.c1, t0.c0))<>((t1.c0, t0.c1, t1.c1))) THEN (((t1.c1)) BETWEEN ((t0.c0)) AND ((t1.c0))) END) OVER (), (((t0.c17)) NOT BETWEEN ((CAST('j\r/B' AS TEXT))) AND (((vt1.c1 IN ())))), LIKELIHOOD(DISTINCT vt0.c0, 0.8178184734123366) COLLATE BINARY FROM vt0 WHERE (((((1.416624608E9)GLOB('-540101535'))) BETWEEN ('-486243984' COLLATE RTRIM) AND (1030061306))) GROUP BY vt1.c2 COLLATE BINARY;SELECT ALL (~ (CAST(vt0.c0 AS REAL))), (~ (CASE t0.c0  WHEN t0.c17 THEN vt0.c0 END)), 0.7840208801052371 FROM vt1, t1 WHERE ((((((1.030061306E9, NULL, -933424885)) BETWEEN (('-273836608', 'be纗bh', '-1711851547')) AND ((x'', '7d', 0.7608401764920383))))IS(CASE 'L9pA\nQ{U'  WHEN 0.3497215146448319 THEN '-1164434647' WHEN 0.9222729172599026 THEN x'' WHEN NULL THEN x'' ELSE NULL END))) ORDER BY (((CAST(NULL AS NUMERIC)))==((((((vt0.c1)OR(t0.c1)))OR(t1.c0))))), json(LIKELIHOOD(t1.c1, 0.6391772656882657)), (('-1078273878') IS TRUE) ASC;SELECT DISTINCT CASE ((vt0.c1)AND(vt0.c1))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.6067923020677342) THEN ((vt0.c1) IS TRUE) WHEN '\rBoU3' THEN t0.c17 COLLATE RTRIM WHEN t0.c17 THEN ((vt0.c1)-(NULL)) END FROM vt1, t0, vt0 GROUP BY ((((vt1.c0)<>('0.3904315429184143')))>=(((x'') ISNULL))); -- 0ms;
SELECT ((((((((((vt1.c1) BETWEEN (vt1.c0) AND (t1.c2)))AND((((t1.c1)) BETWEEN ((t1.c1)) AND ((vt0.c0))))))AND(MAX(t0.c1))))AND((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((x''))))))OR(((vt1.c1) IS TRUE))) FROM vt1;SELECT ALL x'' FROM t1, vt0, vt1 WHERE (((CASE WHEN NULL THEN x'' ELSE '-1669847458' END) NOT BETWEEN (((0.4031912937480643)GLOB(''))) AND (UNLIKELY('ᗥLR!Zg%')))); -- 0ms;
SELECT ALL (((vt0.c1 IN (vt0.c0, vt1.c2, t0.c1))) IS FALSE), t1.c2, t0.c0 FROM vt0;SELECT ALL ((t1.c0)>=(t0.c1)) COLLATE NOCASE, CAST('693845568' AS TEXT), vt0.c1, 'a\n*vg[TAF', MIN(((vt1.c2) IS FALSE)) FROM t0, t1;SELECT ((((((((((t1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)))AND(CASE t0.c17  WHEN vt1.c2 THEN t1.c2 ELSE vt1.c1 END)))OR(((vt0.c1) NOTNULL))))AND(COUNT(*))))AND((t1.c1 IN ()))), ((((vt0.c1) BETWEEN (vt1.c1) AND (vt0.c0))) ISNULL), ((((vt1.c0)=(t0.c17)))&(json_array(t0.c0, t1.c2, t0.c1, NULL))) FROM vt1, t1, t0 WHERE (ABS(DISTINCT ((((x'')OR('')))AND(NULL))));SELECT DISTINCT (-304210857 COLLATE RTRIM IN ()) FROM t0 WHERE ((('-171244996' COLLATE BINARY)%(((0.6528778453931028)<=(0xffffffffd0946e3a))))); -- 0ms;
SELECT ALL SUM(((vt0.c0) BETWEEN (vt1.c0) AND (t1.c2))) OVER () FROM t0, t1, vt0, vt1 GROUP BY ((((t1.c0) IS TRUE))GLOB(highlight(vt1.c2, t1.c1, t1.c1, vt1.c1))); -- 0ms;
SELECT vt1.c1, (((t1.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((t0.c1 COLLATE NOCASE))), CAST(CAST(vt1.c0 AS TEXT) AS BLOB) FROM vt0, t0, vt1 LIMIT -2021795596;SELECT DISTINCT vt1.c1 FROM vt1, t0 WHERE ((- (NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL (((((((((((t1.c1)OR(t0.c1)))OR(t0.c0)))OR(t0.c1)))OR('0.8239203207097007'))))<((((((((((vt0.c1)AND(vt1.c0)))OR(t1.c2)))OR(vt1.c1)))AND(t0.c1))))) FROM t1, vt0, t0, vt1 ORDER BY vt1.c1 LIMIT 1031678331 OFFSET -1626846211; -- 1ms;
SELECT t1.c1 FROM vt0, t0, vt1 WHERE (((((0.4505252921813555 IN ())))<=((((((((((NULL)OR(NULL)))OR(0xffffffff877dd8f4)))OR('_]\r+tAK')))OR(0.5281199026391264)))))) ORDER BY ('1777008607' IN ())  NULLS FIRST;SELECT DISTINCT (((~ (t0.c1)))GLOB(x'')) FROM t1, t0, vt0, vt1 WHERE ((~ (1.956899375E9)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT FIRST_VALUE((NOT (((t0.c0) IS TRUE)))) OVER () FROM t0, t1, vt0, vt1 GROUP BY ((vt0.c0)>=(vt0.c0)) COLLATE BINARY HAVING ((NULL)IS NOT(((t0.c17)==(t1.c1)))); -- 0ms;
SELECT DISTINCT '0.20291958755184802', (((vt0.c0)) NOT BETWEEN (((((t1.c1)) NOT BETWEEN ((vt0.c1)) AND ((NULL))))) AND ((((((t1.c2)OR('')))AND(t1.c2))))), GROUP_CONCAT(vt1.c2) OVER () FROM t0, vt1 WHERE (((CAST(x'71ac' AS INTEGER)) NOT BETWEEN ((0.5153755045568196 IN (0X3a60f0a0))) AND (CASE '-1912815900'  WHEN NULL THEN x'' WHEN '506293180' THEN 'G\r<L' WHEN 0.8268008731088676 THEN 0.07002963965914066 END))) GROUP BY (- (((((t0.c17)AND(t1.c2)))AND(0.012232390295348505)))), (- (((t1.c0) ISNULL))), vt1.c2 HAVING ((t0.c1) ISNULL) COLLATE BINARY;SELECT DISTINCT (((vt0.c0)AND(t1.c1)) IN (t1.c1, (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c1))))) FROM vt0 ORDER BY (((load_extension(t1.c0, t1.c2)))>(((- (t1.c2)))))  NULLS FIRST;SELECT DISTINCT CAST((+ (t0.c1)) AS INTEGER), ((((((vt0.c1)OR(vt0.c1)))OR(t1.c1))) NOT BETWEEN (((t0.c0)|(t1.c2))) AND (t1.c2)), (((t1.c0))<=((t0.c0))) COLLATE NOCASE FROM vt1 WHERE (((((CASE x''  WHEN '' THEN 0.6528778453931028 END)AND((NOT ('1493864790')))))OR(((0.7874628435838567)*('1163910678')))));SELECT ALL vt0.c0 FROM t1, vt0, vt1 NOT INDEXED NATURAL JOIN t0 WHERE (x'') LIMIT 154174555; -- 0ms;
SELECT DISTINCT vt0.c1 FROM t1 INDEXED BY i34, vt0, vt1 WHERE ((((('C}입Q4') BETWEEN (x'') AND (0.6722329715210814))) ISNULL));SELECT (NULL IN ()), x'' COLLATE NOCASE, NULL FROM t1, t0; -- 0ms;
SELECT ALL MIN(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN t1.c1 WHEN t1.c1 THEN vt0.c0 END) FROM t0, vt1, t1, vt0 ORDER BY json_valid(vt1.c2 COLLATE BINARY), CASE WHEN CASE WHEN vt1.c2 THEN t0.c0 ELSE t0.c17 END THEN t0.c0 COLLATE BINARY END; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT (NOT (t1.c0)), 0.32342031943825655), ((((((((CAST(vt1.c1 AS REAL))OR(t0.c17)))OR(NULL)))OR(CAST(vt1.c0 AS NUMERIC))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c17 ELSE vt1.c2 END)), json(((vt0.c0) NOT NULL)) FROM vt0 WHERE ((((0.6894362814176499, x'', 'JUM5g')) BETWEEN (((~ (-486243984)), (+ (NULL)), 0xffffffffffffffff)) AND (((~ (-1.3506544E9)), (((('312492567')OR(x'')))AND(0.6331685364688769)), CAST(0.1025416797612071 AS NUMERIC)))));SELECT ALL (((t0.c0, 0.614654504948758, t0.c0)) BETWEEN ((x'741b' COLLATE RTRIM, (+ (vt0.c0)), t0.c1)) AND ((MAX(t1.c1), ((vt0.c1)*(t0.c0)), ((vt1.c2) IS FALSE)))), TOTAL(CASE WHEN vt1.c2 THEN t0.c1 WHEN t1.c0 THEN 0Xffffffffc92bcb4e WHEN t1.c1 THEN t1.c0 ELSE t1.c2 END) FILTER(WHERE (((t1.c2)IS(t1.c2)) IN ())) OVER ( ORDER BY (NULL IN (TYPEOF(vt1.c2)))), TOTAL(((vt1.c1) NOT BETWEEN (t1.c2) AND (vt1.c2))) OVER (), ((t0.c17 COLLATE NOCASE)LIKE((NOT (vt1.c2)))), ((((t1.c2)+(t0.c0))) NOT BETWEEN ((vt1.c2 IN ())) AND (((vt1.c1)&(t1.c1)))) FROM vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY ('-1240973826' IN (((vt0.c1)OR(t0.c0)))) DESC  NULLS LAST;SELECT DISTINCT CAST((((t0.c17)) BETWEEN ((vt0.c1)) AND ((t1.c2))) AS INTEGER) FROM t1, vt0, vt1 WHERE ((((((('0.26973787056801923')AND(x'')))OR(0xffffffffc9122d5b))) NOT BETWEEN ('1030061306' COLLATE BINARY) AND (CAST(9.77165255E8 AS NUMERIC))));SELECT ALL t0.c0 FROM vt1;SELECT (+ (((t1.c1)AND(0.9584294421229116)))) FROM t0 GROUP BY (NOT (((t0.c1) BETWEEN (vt0.c0) AND (vt1.c2))));SELECT ALL CAST(((((((((t1.c2)OR(t0.c1)))AND(t0.c1)))AND(vt0.c1)))OR(vt0.c0)) AS INTEGER) FROM vt0, vt1 WHERE ((((((('-1194838562', 'U ->LR.N', x''))<=(('', NULL, 1266619691))), ((0Xffffffffe043502c)||(0.5225187572952935)), (('-257383191') IS TRUE)))!=((CASE 0.40120479869908277  WHEN NULL THEN 0.1441673367009556 WHEN x'7b26' THEN 'Z뱐pH\nx闂' WHEN 'g' THEN '1688005339' END, x'', NULL COLLATE BINARY))));SELECT ALL (((vt1.c0 IN ())) NOT BETWEEN (((t0.c17) NOTNULL)) AND (((vt1.c1) IS FALSE))) FROM vt0, t0, t1;SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt1.c1) AND ('+-oW4YU')) AS NUMERIC) FROM vt0;SELECT DISTINCT NTH_VALUE(CASE WHEN NULLIF(DISTINCT t0.c17, t1.c0) THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c1) BETWEEN (t1.c1) AND (t0.c17)) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.9754232448873493) WHEN TRIM(DISTINCT t0.c0, x'76ca') THEN ((((t0.c0)OR(t1.c2)))OR(vt0.c1)) END, '-953809713') OVER (), (((vt1.c1, vt1.c2, t1.c0)) NOT BETWEEN ((((vt0.c1) BETWEEN (t0.c0) AND (t1.c1)), -2.1209678E7, ((((t0.c17)OR(0.028180424571147555)))OR(vt0.c1)))) AND (((- (t0.c1)), CAST(-214418487 AS INTEGER), CASE WHEN t1.c1 THEN vt0.c0 END))), 'r}' FROM vt0, t1, t0, vt1; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) IS FALSE)), CAST(TOTAL(vt0.c0) AS INTEGER), 0X77a57a47 FROM t1 WHERE ((((x'')) BETWEEN ((('1564226241' IN ()))) AND (((((0.4443120846053775)) NOT BETWEEN ((-1.23818792E8)) AND (('')))))));SELECT ((t1.c1)-((vt1.c0 IN (vt0.c0)))) FROM vt0, vt1, t1 WHERE (((('f{}*')) BETWEEN ((0.24950748693221314)) AND (('\r<Lv'))) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((vt1.c1)) NOT BETWEEN ((t0.c17)) AND ((t1.c1)))))==((0.29514007946013177))) FROM t1, vt1, t0 WHERE (((-21209678 COLLATE NOCASE)LIKE(((-1454622486)>=(NULL))))); -- 1ms;
SELECT DISTINCT ((CASE x''  WHEN vt0.c1 THEN '-676961157' END)<(CAST(vt0.c1 AS TEXT))) FROM t0 WHERE (((CAST(NULL AS REAL))&(CASE WHEN x'f866' THEN 0.3495178390546001 END)));SELECT DISTINCT NULL FROM t1, t0, vt1, vt0 WHERE (((CASE 0.692626618702212  WHEN 0.9222729172599026 THEN '99327392' END)<<((NULL IN ())))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY (((((- (t0.c1)))OR(t0.c0 COLLATE NOCASE)))AND((~ (t0.c17))))  NULLS FIRST) FROM t0, t1, vt1, vt0 WHERE (NULLIF((x'' IN ()), '㒍i>IၛtVK⑍')); -- 1ms;
SELECT CAST(((t0.c1) NOT NULL) AS TEXT) FROM t0, vt1 WHERE (x'') GROUP BY (((t1.c2)) BETWEEN (((((0.9584294421229116))==(('i{'))))) AND ((((NULL)>(t0.c1))))), CASE (((t1.c2, t0.c17, t1.c0))=((t1.c2, t0.c0, vt0.c0)))  WHEN ((t0.c1)<>(vt0.c0)) THEN ((t0.c17) BETWEEN (t1.c1) AND (0.8575857696752869)) ELSE CASE vt0.c1  WHEN vt1.c0 THEN NULL END END, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t1.c2)))<<((t0.c0 IN ()))) HAVING ((((((t1.c0)||(vt1.c2)))OR((vt1.c1 IN (t1.c0)))))OR((~ (t0.c17))));SELECT ALL ((((vt0.c1)<(t1.c2)))>>((- (t0.c0)))) FROM t0, vt0, vt1, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(UNLIKELY(t1.c2)) OVER () FROM vt0 WHERE (((CASE WHEN 0.5633818420391206 THEN NULL WHEN 0.7822445243940878 THEN 0.9829821739807201 WHEN 810128195 THEN x'' WHEN 0X25759c2e THEN NULL WHEN NULL THEN x'ed14' ELSE 0.19386572421297887 END)IS(((NULL)<(NULL)))));SELECT DENSE_RANK() OVER (), vt1.c2 COLLATE BINARY, DENSE_RANK() OVER () FROM vt1, vt0 WHERE ((((0.8749669982087588))>=((0xffffffffbc7cd3f1))) COLLATE BINARY); -- 0ms;
SELECT (((vt0.c1, vt0.c0, t1.c2)) NOT BETWEEN ((((vt1.c0) IS TRUE), ((((t0.c17)AND(t1.c1)))AND(vt0.c0)), SUM(vt1.c1))) AND (((~ (vt1.c1)), ((vt1.c1) ISNULL), ((vt1.c2)LIKE(t0.c17))))) FROM vt0, vt1, t1;SELECT DISTINCT COUNT(0.7690058238097381) COLLATE RTRIM, 0.7551548920647811, ((((t0.c17)OR((NOT (t0.c1)))))OR(((t1.c1)<(t0.c0)))) FROM vt1, t0, vt0;SELECT DISTINCT ((t1.c0) ISNULL) FROM t0, vt1 ORDER BY '' ASC  NULLS FIRST;SELECT ALL CASE WHEN IFNULL(t0.c1, vt1.c2) THEN ((t1.c1) NOT BETWEEN (t1.c0) AND (t0.c1)) WHEN vt1.c1 THEN ((vt1.c0)-(t0.c17)) WHEN (NOT (t1.c2)) THEN vt0.c1 END FROM vt1 WHERE (CAST((0xffffffffd0946e3a IN ()) AS NUMERIC));SELECT ALL RANK() OVER ( ORDER BY ((((t1.c2)&(t0.c0))) NOT BETWEEN (NULL COLLATE RTRIM) AND (CAST(vt0.c1 AS BLOB))) DESC) FROM t0, t1, vt0 WHERE (((x'56e3')<<('O')) COLLATE BINARY) LIMIT -671124387; -- 0ms;
SELECT vt0.c0 FROM vt1, vt0 WHERE (CASE NULL  WHEN 0Xfffffffff9d6ce70 THEN 0.26125709165792765 END COLLATE BINARY); -- 0ms;
SELECT DISTINCT LAST_VALUE((((t1.c2) BETWEEN (t1.c2) AND (t1.c1)) IN ())) OVER () FROM t1 WHERE ((- ('Ed'))); -- 1ms;
SELECT DISTINCT RANK() OVER ( PARTITION BY 0.1963604096534194, ((((((((LAST_INSERT_ROWID())OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))))AND(CASE t1.c0  WHEN vt1.c2 THEN vt0.c1 END)))AND(UNLIKELY(t0.c0))))OR(vt1.c0))) FROM vt0, t1;SELECT DISTINCT (+ (0.8990828467819936)) FROM t1, t0, vt0, vt1; -- 0ms;
SELECT ((((((t1.c1)AND(vt0.c0)))AND(vt1.c2))) BETWEEN (((((vt1.c1)OR(t0.c0)))OR(t0.c0))) AND (AVG(vt0.c0))) FROM t1, t0;SELECT t1.c1 FROM t0;SELECT DISTINCT x'', TOTAL(0X7fffffffffffffff), (((((t1.c0, vt0.c0, t0.c17, vt1.c0, t1.c2))>((vt1.c1, vt1.c2, t1.c1, vt1.c1, 0.3904315429184143))))>(x'')) FROM t1 WHERE (CHAR((~ (NULL)), ((x'') NOT BETWEEN ('(b') AND (x'')), ((((((((0.2074894065319468)AND('芤UdYVph')))AND('')))AND('1833598615')))OR(x'')))) GROUP BY (NOT (0X460fc13e)) HAVING UPPER(DISTINCT vt1.c0);SELECT DISTINCT (((- (vt1.c0))) BETWEEN (((vt1.c1)<=(NULL))) AND (t0.c0)) FROM t1, vt0 WHERE (((LIKE(NULL, NULL, '-')) ISNULL));SELECT DISTINCT COUNT(vt0.c1 COLLATE NOCASE COLLATE RTRIM) FROM vt1 WHERE ((936183429 COLLATE BINARY IN ()));SELECT DISTINCT (CAST(vt1.c2 AS BLOB) IN ()) FROM t1, vt1, vt0, t0 WHERE (((((((NULL)OR('D\')))OR(NULL)))OR(CASE '2102982553'  WHEN 0.14015084439733438 THEN '-1669847458' END))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((((((t1.c1)AND(NULL)))OR(0.007910787081942816)))AND(-968253669)))AND(((t1.c1) IS TRUE))), 0.6673083574489287 FROM t1 WHERE (((CAST(x'' AS TEXT))IS(((((0.35808362068390076)OR('0.48217188106485')))AND(0.9295057485045671))))); -- 1ms;
SELECT (((((((('a\n*vg[taf')OR(x'')))OR(vt1.c0)))AND((vt0.c1 IN ()))))OR(((t1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) FROM vt1, t1 WHERE ((((x'9ec8') NOT NULL) IN ()));SELECT CHANGES(), t1.c0, (((vt1.c0, t0.c0, t1.c0)) BETWEEN ((CASE WHEN vt1.c2 THEN t0.c17 ELSE vt0.c0 END, CAST(t0.c1 AS REAL), ((t1.c1)>=(t0.c1)))) AND (((- (t0.c1)), (((vt0.c1, t1.c2, -3.20596507E8))>=((vt1.c1, x'4680', vt1.c1))), ((t1.c1)>(vt1.c0))))) FROM vt1, t1, vt0, t0; -- 0ms;
SELECT ALL SUM(((t0.c0) ISNULL)) FROM t1, t0 RIGHT OUTER JOIN vt0 ON (- (t0.c0 COLLATE BINARY)); -- 0ms;
SELECT NTH_VALUE((((t0.c17)) BETWEEN (((t0.c0 IN (vt0.c1, vt0.c0)))) AND ((((vt1.c1)-(vt1.c1))))), ((((vt1.c2) NOT BETWEEN (t1.c1) AND (vt1.c1))) NOT NULL)) OVER (), 322985135, NULL FROM t1, t0, vt1, vt0; -- 0ms;
SELECT ALL ((vt0.c1)<(t0.c0)) COLLATE BINARY FROM vt0 FULL OUTER JOIN vt1 ON ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) IS TRUE) WHERE (((('#BHpTTR,')<(0.13322094054096922)) IN ()));SELECT ALL (((- (t1.c1)))OR(ABS(vt1.c2))) FROM vt0;SELECT ALL TOTAL(CAST(t0.c0 AS TEXT)), ((((((((vt1.c0)OR(t1.c1)))AND(vt1.c2)))AND(vt0.c1 COLLATE NOCASE)))AND(((t0.c17) ISNULL))), ((((vt1.c1)GLOB(t0.c1)))>=(((vt1.c0)!=(t1.c2)))) FROM t0, t1, vt0, vt1 WHERE (-2000850609) GROUP BY ((CAST(vt0.c0 AS NUMERIC))-(((((vt1.c2)AND(NULL)))AND(t0.c1)))) LIMIT -676301425; -- 1ms;
SELECT CAST(GROUP_CONCAT(t1.c2) AS TEXT) FROM vt1;SELECT DISTINCT CASE ((t0.c0) NOTNULL)  WHEN ((vt1.c1)<(t0.c0)) THEN ((NULL) BETWEEN (t0.c0) AND (t1.c0)) ELSE ((t0.c0) BETWEEN (t0.c1) AND (t0.c17)) END FROM vt1;SELECT DISTINCT TOTAL((+ (x'09d3'))) FROM vt1, vt0, t1 RIGHT OUTER JOIN t0 ON CAST(((vt0.c0)IS(t1.c0)) AS INTEGER) WHERE (((((((x'6ee7')OR(1.7976931348623157E308)))AND(NULL))) NOT BETWEEN (((((NULL)OR(NULL)))OR(x''))) AND (CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT TRIM(CAST(t1.c0 AS REAL)) FROM vt0, t0 WHERE (CASE WHEN ((NULL)GLOB(x'b396a30b')) THEN ((NULL) IS TRUE) WHEN ((((((((435687334)AND(0.7858097966905527)))AND(NULL)))AND(x'1b1a')))OR(0.013994167388204137)) THEN 0Xffffffff8d7426d5 COLLATE RTRIM WHEN x'49e2' THEN ((0Xffffffff89c48c5a)OR(NULL)) WHEN ((0.3360953343729861) NOT BETWEEN (0.00404149034945156) AND (NULL)) THEN (((NULL, 't<sSzcV嶲p', '-1490174237')) BETWEEN (('', x'', 'f/')) AND (('-1556620356', NULL, x'4b5c'))) WHEN (+ ('1353751764')) THEN 0Xffffffffb043b089 COLLATE RTRIM END);SELECT DISTINCT CAST(MAX(t0.c0) AS NUMERIC), MAX(((t1.c1) NOT BETWEEN (t1.c2) AND (vt1.c2))), (((t1.c1))<>((t0.c17))) COLLATE BINARY COLLATE RTRIM FROM vt0, t1, t0 WHERE (((((1.245541547E9) NOT BETWEEN (x'') AND ('-162768371'))) BETWEEN (x'') AND (QUOTE('O')))) ORDER BY '-143462534'  NULLS LAST;SELECT DISTINCT t1.c0 FROM t1, t0, vt0, vt1 WHERE (((((((((load_extension(x'02f3'))AND(((((NULL)AND('1956899375')))OR(NULL)))))AND(ROUND(0.8248815361480554, '[<'))))AND((- (-1738070040)))))AND((((x'', 0.38285041519130036, 0X25b14d55)) NOT BETWEEN ((x'', NULL, '')) AND ((0.6334890037192987, x'', x'')))))); -- 0ms;
SELECT (((((vt0.c1, t1.c2, vt1.c2, vt0.c1, 0.5052938310241459)) BETWEEN ((vt1.c2, t0.c1, t0.c1, t1.c2, vt1.c2)) AND ((t0.c0, vt1.c1, vt0.c1, t1.c0, t0.c1))))-(vt1.c1)), (((((t0.c17)OR(t0.c1)))AND(t1.c2)) IN ()), ((((IFNULL(DISTINCT '2122762796', vt1.c1))AND(TYPEOF(DISTINCT t0.c0))))AND('xj')), ((((vt1.c0)<=(vt1.c0)))<<('*H,᱗uﴗ')), SUM(CAST(t0.c1 AS INTEGER)) FROM vt1, t0;SELECT DISTINCT ((((CAST(vt1.c2 AS REAL))OR((~ (vt0.c1)))))AND('0.7608401764920383')) FROM t0 LIMIT -1537633050;SELECT DISTINCT TOTAL(t1.c0) OVER () FROM vt1, t0, t1 WHERE ((((NULL)<<(x'')) IN (CASE WHEN x'' THEN 0.8749669982087588 ELSE 0X69d64977 END))); -- 0ms;
SELECT COUNT('') FROM t0, vt1, t1, vt0 LIMIT 5053820; -- 0ms;
SELECT ALL (((+ (t1.c1)))%(((vt0.c1) IS TRUE))) FROM vt0 WHERE ((+ ((('') IS TRUE))));SELECT DISTINCT CAST(CAST(t1.c0 AS REAL) AS TEXT) FROM vt1, vt0;SELECT ALL NULL FROM t0, vt0, t1 WHERE ((((('0.3080663720480489')LIKE(0.0)))<((((NULL, '', 0.8557785834173857)) BETWEEN ((0.3554258580893934, 0.07965390896734836, '492059355')) AND ((NULL, 0.5112958008858471, 0.7030188865784368)))))); -- 0ms;
SELECT ALL (((vt1.c2) BETWEEN (t1.c0) AND (vt1.c1)) IN ()), ((((vt0.c1)<(vt1.c1))) NOT NULL), CAST((vt0.c0 IN (vt1.c2)) AS REAL) FROM t1 NOT INDEXED, vt1 WHERE (((('-784392626' IN ('0.0'))) NOTNULL));SELECT DISTINCT TRIM(DISTINCT NULL, CASE t1.c2  WHEN t1.c0 THEN 't2?n)	' END), t1.c0, PERCENT_RANK() OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM vt1, t1 WHERE ((((x'24bd') IS FALSE) IN ())); -- 0ms;
SELECT ((- (0.15221774856596482)) IN ()) FROM t0, vt0, vt1; -- 0ms;
SELECT LAST_VALUE(((((((((((((((((t0.c17)AND(t0.c0)))OR(vt1.c2)))OR(t1.c0)))AND(vt1.c1)))OR(((vt1.c2)>(x'')))))AND('q}GA+' COLLATE NOCASE)))AND(vt1.c2)))OR((- (t1.c0))))) OVER ( GROUPS  UNBOUNDED PRECEDING), TOTAL(((vt1.c2) ISNULL)) OVER (), NULL FROM vt1, t1, t0 WHERE ((((((1860992819))=((x''))))*(CASE WHEN x'' THEN x'' END))) GROUP BY (((((('-1533999953')<<(t1.c0)))AND((('-1490174237') NOT BETWEEN (t1.c1) AND (t0.c0)))))AND(((vt1.c0)/(t0.c17)))) LIMIT -802694608 OFFSET -1869060919; -- 0ms;
SELECT ALL ((t1.c1 IN ()) IN ()), ((((vt1.c0) NOTNULL)) IS FALSE), x'', ((((t1.c1)<<(vt1.c0))) NOT BETWEEN ((('7d') BETWEEN (t0.c1) AND (t0.c1))) AND (SUM(vt0.c1))), SQLITE_SOURCE_ID() FROM vt1, t0, t1, vt0; -- 0ms;
SELECT DISTINCT (((+ (t1.c2)))+(NULL)), x'4362', TRIM((+ (t0.c1)), CASE WHEN t0.c17 THEN vt1.c0 WHEN t0.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END) FROM vt0, t0 GROUP BY CAST(x'' AS NUMERIC);SELECT CASE WHEN ((t1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)) THEN ((vt0.c1) NOT NULL) ELSE ((t0.c0)<(t0.c0)) END FROM t1 NOT INDEXED, t0 WHERE (CASE WHEN 0.5970015643986053 COLLATE BINARY THEN ((x'')/(NULL)) WHEN (('2124704968') NOT NULL) THEN (NULL IN ()) WHEN (~ (x'')) THEN ((NULL) NOT BETWEEN (NULL) AND ('')) ELSE '' END);SELECT DISTINCT vt1.c1 FROM t0, t1 WHERE (((((CASE '	~'  WHEN 0.8618221366726474 THEN NULL END)AND('235764640')))AND(CASE WHEN '#eᷴO' THEN x'' END)));SELECT DISTINCT (json(t1.c1) IN ()) FROM vt1, t0; -- 0ms;
SELECT ALL (((NOT (vt1.c0)))=(COUNT(*))) FROM vt1, t1, vt0, t0 WHERE ((~ (((0.5940956426853429) NOT BETWEEN (0.14015084439733438) AND ('2046917560'))))); -- 0ms;
SELECT DISTINCT ABS((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((t1.c1)))) FROM t0, vt1, vt0, t1 WHERE ((((x'aa43' IN ())) BETWEEN (CASE WHEN 'G&' THEN 0.9584294421229116 END) AND (((0.20186631956766254)==(x''))))); -- 0ms;
SELECT ALL CASE (('	\dzY,~Z') NOT NULL)  WHEN ((t1.c1) BETWEEN (x'') AND (vt1.c2)) THEN ((t1.c1) IS TRUE) END FROM t1, vt0, t0, vt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1, vt0, t1, t0 WHERE (CAST(IFNULL(-1499120070, '-28065299') AS INTEGER)); -- 0ms;
SELECT DISTINCT MAX(vt1.c1 COLLATE NOCASE), (~ (CAST(t1.c1 AS TEXT))), ((t0.c0) NOT BETWEEN ((t1.c2 IN ())) AND (((vt1.c1)|(vt1.c0)))) FROM vt1, vt0 WHERE (((((((((LIKELY('a*'))AND(CASE WHEN x'' THEN x'' END)))OR(((-70934175)LIKE(x'e47a')))))OR((('\r<Lc') NOT BETWEEN (x'') AND (x'')))))OR(((0.7187295262777126) BETWEEN (x'') AND ('0.19386572421297887')))));SELECT CASE WHEN ((vt0.c1)>(t0.c1)) THEN ((t1.c0) NOTNULL) ELSE ((t0.c17) NOT BETWEEN (t1.c1) AND (t1.c0)) END FROM vt0, vt1, t0, t1 GROUP BY (((((t1.c1))>((t1.c0))))>(((t1.c1) IS FALSE))), ((((t0.c0)IS NOT(vt0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((vt1.c2)) AND ((t1.c1)))) AND (t1.c0)), CAST(((t0.c0)LIKE(t0.c0)) AS NUMERIC); -- 0ms;
SELECT ALL ((SUM(t1.c2))%(COUNT(t1.c2))) FROM t1, vt1 GROUP BY ((((((t1.c0)OR(t1.c2)))OR(t1.c0)))&(((t0.c17)==(t1.c1)))) HAVING (((vt1.c2 IN ())) IS TRUE);SELECT ((CAST(vt0.c0 AS NUMERIC)) IS FALSE) FROM vt1 WHERE ((((((('1384087614') NOTNULL))OR(NULL COLLATE RTRIM)))AND((('-1222500200')<('')))));SELECT DISTINCT (~ (((t1.c1)!=(vt1.c0)))) FROM vt0, vt1 WHERE ((((((x'')<=(-1.490174237E9)), (((x'')) BETWEEN ((0x3d657cfa)) AND ((-818831393))), ((((((((0.3495178390546001)AND(NULL)))OR('qJ')))AND(x'2d71')))OR(NULL))))=(((('')<<(x'')), (0X5b204d93 IN ()), (+ (NULL))))));SELECT ALL (((t1.c2)) BETWEEN ((((NULL) NOT BETWEEN (t1.c2) AND (t0.c1)))) AND ((((t0.c1) BETWEEN (t0.c1) AND (t0.c0))))) FROM vt1, t1 INNER JOIN t0 ON ((t0.c0)/(0Xfffffffff772ef7a)) COLLATE BINARY CROSS JOIN vt0 ON CAST(vt0.c0 COLLATE NOCASE AS BLOB) WHERE (CAST(((((0.2871459278427365)OR(-1.23818792E8)))AND(9.58989364E8)) AS TEXT)); -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT CAST((vt0.c1 IN ()) AS REAL) FROM t1 WHERE (((CASE 0.8378331722042289  WHEN x'4d13b5d8' THEN 0x5b9c1b02 WHEN NULL THEN NULL WHEN '' THEN '-304210857' ELSE NULL END)||((0.07112912221085554 IN ())))) LIMIT 1735003662; -- 0ms;
SELECT ALL ((CASE WHEN vt1.c1 THEN t0.c17 END)LIKE(((((t0.c0)AND(t0.c1)))AND(vt0.c1)))) FROM t0, vt1;SELECT DISTINCT vt1.c1 FROM t1 WHERE (((((((1.428036115E9)OR(0xfffffffffb997fa4)))AND('璐e\3g8A㉻')))==((('r}') BETWEEN (NULL) AND (x''))))) GROUP BY ((((((((((((t0.c17)OR(t0.c17)))OR(t0.c0)))AND(t1.c0)))OR(vt0.c0)))AND(NULLIF(DISTINCT t0.c0, t1.c0))))AND(LIKELY(DISTINCT vt0.c1)));SELECT ALL (+ (CAST(vt0.c0 AS TEXT))), (('V\GB') IS FALSE), TYPEOF(CAST(t1.c1 AS NUMERIC)) FROM t1;SELECT DISTINCT RANK() OVER (), CASE WHEN x'a3c8' THEN (((vt1.c2, 0.45847349438915497, vt0.c1)) NOT BETWEEN ((x'', t0.c1, t1.c1)) AND ((t1.c1, t0.c1, vt1.c2))) ELSE ((t1.c2)==(vt0.c1)) END, (t1.c0 IN ()) COLLATE BINARY FROM t0, vt0, t1, vt1 WHERE ((((((NULL IN ()))OR((((NULL))!=((0.35939511523375245))))))AND((('1342404187')IS('97'))))); -- 1ms;
SELECT GROUP_CONCAT(((t1.c2) IS FALSE)) FROM t0;SELECT ALL MAX(((t0.c1) NOTNULL)) FROM t0 CROSS JOIN vt1 ON ((-674233139)IS NOT(((t0.c1) NOT BETWEEN (vt1.c0) AND (t1.c2)))) FULL OUTER JOIN vt0 ON (- (((t0.c17) NOT BETWEEN (vt1.c2) AND (t0.c17)))) CROSS JOIN t1 ON vt1.c1 WHERE ((((((('')>>(x'')))AND(NULL COLLATE NOCASE)))AND(SQLITE_COMPILEOPTION_GET(0xffffffff9b88345a)))) LIMIT 818173923 OFFSET 683509889;SELECT ((CAST(x'99a1' AS REAL)) BETWEEN ((vt0.c0 IN (vt0.c1))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN 0.09829038497992959 THEN t0.c0 ELSE vt0.c1 END)), ((MAX(vt1.c2)) NOT BETWEEN (AVG(t1.c2)) AND (vt1.c1)), (((- (t0.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN '' WHEN t1.c0 THEN vt1.c0 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 ELSE '' END)), CAST((vt1.c0 IN ()) AS TEXT), ROW_NUMBER() OVER () FROM vt1, t1, vt0, t0 WHERE (((((+ (0.3488726665691825)), ((0.4108879264149168)<<(NULL)), ((0.6403237725878393) IS TRUE), ((x'')&('1428036115')), ((NULL) IS FALSE)))>(((((x'')) BETWEEN (('7d')) AND ((2.007333447E9))), ((0x4118fdd) NOTNULL), x'', (x'b3e0c98b' IN ()), x'')))); -- 0ms;
SELECT DISTINCT (+ (((((vt0.c1)OR(t1.c0)))AND(t0.c1)))), (SUM('-1556620356') IN ((- (t0.c17)), CAST(t0.c17 AS NUMERIC))), IFNULL(('-829827097' IN ()), (((t0.c1))=(('-1604424675')))), CASE WHEN CASE WHEN t0.c1 THEN vt1.c1 END THEN ((t0.c0) BETWEEN (t1.c0) AND (t1.c2)) END, IFNULL(((((t1.c1)OR(t1.c0)))OR(vt1.c2)), CASE WHEN '-1365166986' THEN vt0.c0 ELSE t0.c0 END) FROM t0, vt0, t1 GROUP BY t0.c1, ((((((vt1.c2)OR(vt1.c2)))OR(vt0.c1))) IS FALSE), ((((((((CASE WHEN t1.c2 THEN vt0.c0 END)AND((NOT (t1.c0)))))AND(vt1.c0)))AND(CASE t1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c2 END)))AND((((vt1.c1, vt1.c2, t0.c1))<(('SZ햎T놊+<|', t0.c0, t1.c1)))));SELECT ((((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c1 END)OR(t1.c2 COLLATE BINARY)))AND(((vt1.c2)IS(vt1.c1)))), CAST(vt0.c0 AS TEXT) COLLATE NOCASE, MIN(((((0X242558d8)AND(vt0.c1)))OR(vt1.c2))) FROM t1, t0, vt1, vt0; -- 0ms;
SELECT ALL NTH_VALUE(CASE ((t1.c1) BETWEEN (t0.c1) AND (t1.c2))  WHEN (vt0.c0 IN ()) THEN ((t0.c0) BETWEEN (t0.c17) AND (t1.c1)) WHEN CAST(t1.c1 AS INTEGER) THEN 0.6863116958731704 WHEN (t1.c0 IN ()) THEN (vt1.c2 IN ()) ELSE CAST(t1.c0 AS BLOB) END, (((0xffffffffee9f0516, t0.c1, t1.c1)) BETWEEN (((vt0.c0 IN (-4.86243984E8)), ((t1.c2)<=(t1.c1)), ((t0.c0)AND(vt0.c1)))) AND ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2)), vt0.c0, (- (vt0.c0)))))) OVER () FROM vt1, t0, vt0, t1; -- 0ms;
SELECT DISTINCT (- ((((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c17))))) FROM t0, t1, vt1, vt0 LIMIT 354073731; -- 0ms;
SELECT DISTINCT MIN(((((t1.c2)OR(0.7974484715657382)))AND(t1.c2)), (NOT (vt1.c0)), (((t0.c1))>((t1.c0))), ((vt0.c1) BETWEEN (t1.c1) AND (t0.c17))) FROM t1 WHERE ((((((NULL)) BETWEEN (('682467012')) AND ((-3.97030103E8))))>(0.7874628435838567)));SELECT LIKELY(DISTINCT TYPEOF(DISTINCT t0.c17)) FROM t0, t1, vt0, vt1; -- 0ms;
SELECT DISTINCT t1.c1, (- ((((t1.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))), COUNT(*) FROM t1, vt0, t0, vt1 WHERE (CAST(('' IN ()) AS INTEGER)) ORDER BY ((((vt0.c1) NOT NULL))LIKE(((t1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c2)))) ASC; -- 1ms;
SELECT DISTINCT AVG(((t0.c1) IS FALSE)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt1, vt0 WHERE (1.7976931348623157E308);SELECT (+ (CASE t1.c0  WHEN 'B' THEN t0.c0 END)) FROM t0 NOT INDEXED CROSS JOIN t1 ON ((((vt1.c2)OR(t0.c0)))AND(vt0.c0)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON (+ (CAST(vt1.c0 AS NUMERIC))) WHERE ((('HuTSHlkz')|(x'')) COLLATE NOCASE);SELECT DISTINCT vt1.c0, CHAR(GROUP_CONCAT(t1.c2), (+ (t1.c2)), (((vt0.c1, vt1.c2, t1.c2))<((t1.c2, vt0.c0, vt1.c1)))), ((((t0.c1 COLLATE NOCASE)OR(UPPER(vt0.c1))))OR(((t1.c0)==(vt1.c0)))) FROM t0, vt0 NOT INDEXED WHERE ((((NULL IN (x'', '-397827387')))<(CASE x''  WHEN x'' THEN x'd4be' END))) LIMIT 1492355896;SELECT CASE '936183429' COLLATE RTRIM  WHEN t0.c17 THEN NULL END, t0.c17, (((vt0.c0)) BETWEEN ((((t1.c0)!=(vt1.c2)))) AND (((~ (t0.c1))))) FROM vt1 WHERE (((CAST(0.8926136695151468 AS REAL))=(0.5278595257088212 COLLATE BINARY)));SELECT ((t0.c0) IS TRUE) COLLATE BINARY FROM vt1, vt0 NOT INDEXED, t0; -- 0ms;
SELECT ALL NULL, ((((vt1.c0)&(t1.c1)))<<(vt1.c2)), x'', (((t1.c0 IN (vt1.c1))) NOTNULL), (((((t1.c1))!=((0.35808362068390076))))IS(((((vt0.c1)AND(t1.c1)))OR('')))) FROM t1, t0, vt0;SELECT ALL SUM(((t1.c0)!=(t1.c0))) OVER () FROM vt1 WHERE ((NOT (((NULL)+(2131398611)))));SELECT DISTINCT 'Qz̮/g', (((t1.c1)) BETWEEN ((((vt0.c1) ISNULL))) AND (('0.40120479869908277'))), LAG(((LIKE(t1.c2, t0.c17)) NOT BETWEEN (((((1.5168855E9)OR(t1.c0)))OR(t1.c1))) AND (((t0.c1)LIKE(vt0.c1)))), x'', CASE CASE vt0.c0  WHEN t0.c0 THEN x'db45' END  WHEN ((((NULL)AND(t0.c0)))AND(x'')) THEN ((((t0.c1)OR(t0.c1)))OR(t1.c2)) END) OVER () FROM vt0, t1, t0; -- 0ms;
SELECT DISTINCT CAST((t0.c1 IN ()) AS INTEGER), '-477289094', ((0x216d08f3) BETWEEN (-1.554997713E9) AND (((vt1.c1) IS FALSE))) FROM t0, vt1; -- 0ms;
SELECT ALL (vt1.c2 IN ()), (('-540761056') NOT NULL), GROUP_CONCAT(((vt1.c2)==(t1.c0))) FROM t1, vt1, vt0; -- 0ms;
SELECT ALL ((t1.c0) BETWEEN (t1.c0) AND (vt1.c2)) COLLATE BINARY, ((IFNULL(vt1.c2, vt0.c1))/(((t1.c0) NOT BETWEEN (vt1.c1) AND (t0.c17)))), vt0.c0 FROM vt0, t0 WHERE ((((((NULL) BETWEEN (x'') AND ('-143462534'))))!=((((0.4852514511852004)+(x'd6fa'))))));SELECT DISTINCT vt0.c0 COLLATE NOCASE FROM t0 WHERE (((((('|')>(x'')), 0.15412558110033547, (((('-1626846211')OR(x'')))OR(NULL))))>((CAST(NULL AS BLOB), CAST(0x710c55f9 AS NUMERIC), ((NULL)AND(0.7811395777620657))))));SELECT ALL (NOT (((0.16611425996120954) NOT NULL))) FROM vt0, t0, vt1, t1; -- 0ms;
SELECT ALL (((t0.c1) NOT NULL) IN (((t1.c0) IS FALSE))), ((vt0.c1) BETWEEN (t1.c2) AND (0x5d3c32c1)) COLLATE BINARY, ((((((((LIKELY(vt1.c0))AND((t0.c0 IN ()))))AND(MIN(vt0.c0, vt0.c0))))OR(t1.c2 COLLATE BINARY)))AND(((vt1.c2)||(vt1.c0)))) FROM vt0, vt1;SELECT ALL (('1e500') BETWEEN (vt1.c2) AND (NULL)) COLLATE RTRIM FROM t0, vt1, t1, vt0; -- 0ms;
SELECT DISTINCT (((((t1.c0 IN (vt1.c2, t1.c2)))AND(((((t1.c2)AND(x'')))AND(vt1.c1)))))AND(((vt1.c0) IS TRUE))) FROM t1 WHERE ((((((((((x'')AND(-1458961866)))OR(-1994961218)))AND('')))OR(0.6673083574489287)) IN (CASE WHEN NULL THEN NULL ELSE x'4f8f' END)));SELECT MAX((- (t0.c17))) FROM vt0, vt1, t1 WHERE (((((('235764640')) NOT BETWEEN ((0.8703457165242919)) AND (('977165255'))))OR((('0.5281199026391264') NOT BETWEEN (0xffffffffdea139da) AND ('>3DbaS252')))));SELECT DISTINCT CASE WHEN ((vt0.c0) ISNULL) THEN CASE WHEN vt1.c0 THEN t0.c17 END ELSE NULLIF(vt0.c0, vt0.c1) END FROM t0;SELECT DISTINCT vt1.c0 FROM vt0, t1, vt1, t0 WHERE ((((0.4981364546746472, '_v^<8	2	''', 0.8659595055089654)) BETWEEN (((+ (NULL)), CAST(x'' AS REAL), (NULL IN ()))) AND (((((0xfffffffff253914d, NULL, NULL))>=((NULL, NULL, 0.5972278712831893))), '810469219' COLLATE NOCASE, (('xZ') NOT NULL))))); -- 0ms;
SELECT DISTINCT (~ ((+ (t1.c1)))), LEAD((json_extract(t0.c1, t0.c1) IN ()), (((t0.c1 IN (vt1.c0, 0.4706967309792649)))||((((t0.c0))==((t0.c1))))), ((((vt1.c1) NOT NULL))<>(((t1.c1)>>(t0.c1))))) OVER (), ((((vt1.c1) NOTNULL))+(CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN '곘∕' WHEN vt1.c2 THEN vt0.c0 END)), NULL, -0.0 COLLATE BINARY FROM t1, t0, vt0, vt1 LIMIT 1491374989; -- 1ms;
SELECT ALL ((GROUP_CONCAT(0.1846391236621976))<(((vt1.c2)LIKE(vt0.c0)))) FROM t0 ORDER BY ((0.19386572421297887)IS NOT((0.25719071475734123 IN (t1.c2))))  NULLS FIRST;SELECT DISTINCT CAST(CAST(t0.c17 AS NUMERIC) AS NUMERIC) FROM t1, vt0, t0, vt1 WHERE ((((x'')LIKE(x'')) IN ())); -- 0ms;
SELECT ALL CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ALL ((((-4.86243984E8)AND((vt0.c1 IN ()))))OR(((vt1.c0)<=(t1.c1)))) FROM vt0, t0, t1;SELECT DISTINCT GROUP_CONCAT(CASE WHEN t0.c1 THEN t1.c2 WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c1 END) FILTER(WHERE ((((t1.c1) NOT NULL)) ISNULL)) OVER () FROM t1 INDEXED BY i47, t0, vt0, vt1 LIMIT 1109900133;SELECT ((t1.c2 COLLATE NOCASE) IS FALSE) FROM t1 WHERE (NULL); -- 0ms;
SELECT ALL vt1.c2, CASE ((((vt0.c0)AND(vt1.c1)))OR(NULL))  WHEN vt1.c1 THEN vt1.c0 WHEN ((t0.c0) NOT BETWEEN (vt1.c2) AND (t1.c0)) THEN ((t1.c0) NOT NULL) WHEN x'f279' THEN ABS(DISTINCT t1.c2) WHEN vt0.c0 COLLATE RTRIM THEN LIKE(t0.c0, t1.c0) WHEN x'' THEN (t0.c17 IN ()) END, (((((((((t0.c17)AND(t1.c2)))OR(t0.c17)))OR(vt0.c1)))OR(t1.c2)) IN ()), ((CAST(0.8874219144186313 AS REAL))IS NOT(CASE t1.c2  WHEN NULL THEN t0.c1 END)), (((vt0.c0)) BETWEEN (((NOT (t0.c1)))) AND ((((((t0.c17)AND(vt1.c2)))OR(vt0.c1))))) FROM vt1 WHERE (NULL);SELECT ALL NULL COLLATE NOCASE, CASE WHEN ((((t0.c0)OR(vt0.c1)))AND(t0.c0)) THEN (((t1.c1)) BETWEEN ((vt1.c1)) AND ((t1.c1))) END, GROUP_CONCAT((- (vt0.c1))) OVER (), CAST(((vt1.c2) NOTNULL) AS BLOB), GROUP_CONCAT(CAST(t1.c1 AS BLOB)) FROM vt1, t0 WHERE ((x'' IN ()) COLLATE BINARY);SELECT DISTINCT (NOT (((t0.c17) NOT BETWEEN (t1.c1) AND (t0.c0)))) FROM t0, vt0, vt1 WHERE ((((NULL) IS TRUE) IN ()));SELECT vt0.c0, CAST(((t1.c0)/(vt1.c0)) AS NUMERIC), (((CASE t0.c17  WHEN t1.c0 THEN vt1.c1 ELSE t0.c0 END))>=(((((vt1.c0))>=((vt0.c0)))))), CAST(GROUP_CONCAT(vt0.c1) AS BLOB), ((((vt0.c0)IS NOT(vt0.c0)))IS NOT(CASE vt0.c1  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN t1.c2 WHEN t1.c2 THEN t0.c1 END)) FROM vt1;SELECT (((t0.c0) ISNULL) IN (vt1.c1 COLLATE RTRIM)) FROM t0;SELECT ((((((vt1.c0)AND(t1.c1)))AND(t0.c17)))%((((t0.c17, t1.c1, vt1.c1))<>((t1.c0, t0.c0, x''))))) FROM vt0, t0, vt1, t1 WHERE (((((('u&')LIKE(0.8434344033061443))))<=((('6>' IN ()))))); -- 0ms;
SELECT DISTINCT (((((((((t1.c2)OR(vt1.c2)))OR(t0.c0)))AND(t1.c2)))OR(vt1.c1)) IN ()) FROM t0, vt0 WHERE (CAST(0.8470958576700225 AS NUMERIC) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0)>=(t0.c1))) OVER (), (NOT ((vt0.c0 IN ()))), vt0.c0 FROM t1, t0, vt1;SELECT DISTINCT CAST(TRIM(DISTINCT vt0.c1, t1.c1) AS BLOB) FROM vt0, t0, vt1 WHERE ('-171244996');SELECT CAST(t0.c1 AS BLOB) FROM t0 WHERE (load_extension((('1261033979')<<(NULL)))); -- 0ms;
SELECT DISTINCT ((CAST(t1.c1 AS REAL)) NOT NULL) FROM vt0, t1; -- 1ms;
SELECT DISTINCT TYPEOF(DISTINCT ((vt1.c1) BETWEEN (vt1.c2) AND ('Q~y8ve~'))) FROM t1, t0, vt0, vt1 WHERE ((((NULL, 0Xffffffffa7b3cc5b, '0.8575857696752869')) NOT BETWEEN ((CAST(x'' AS NUMERIC), ((('-795578822')) BETWEEN ((0X60fe3e7f)) AND ((0X77a57a47))), CAST(0.7551548920647811 AS INTEGER))) AND ((NULL COLLATE NOCASE, ((((NULL)AND(0Xffffffffc66082df)))AND('1558690334')), NULL)))); -- 0ms;
SELECT ALL COUNT(*) FROM t1, vt1, t0 INDEXED BY i29 WHERE (((((x'' IN ()), CAST(0x5ec0eb35 AS NUMERIC), ((((((((NULL)AND(x'b308')))OR('1627274879')))AND(NULL)))AND(NULL))))>=((((((((((0x8b25770)AND(0.16187975870446103)))OR(0.7874128245299137)))OR(2011400265)))AND(x'f3bd')), ((0.13040088857955157) NOT BETWEEN (x'e425fe53') AND (1610492537)), DATE('0.7874628435838567', x'', '-1396113735'))))); -- 0ms;
SELECT (((((vt0.c1) NOTNULL), (t0.c1 IN ()), (NOT (t1.c2))))<>((rtreenode(vt1.c2, vt1.c2), x'', (vt0.c0 IN (t1.c1))))) FROM t1 WHERE (((((((((((((((((NULL)AND(NULL)))AND('d''')))AND((NULL IN (x'')))))AND(CAST(x'6959' AS INTEGER))))OR((NULL IN ()))))AND((('-444190014') NOT BETWEEN ('1305973464') AND (x'')))))OR(('-444190014' IN ()))))OR((NULL IN ()))));SELECT (SQLITE_COMPILEOPTION_GET(vt1.c2) IN ()) FROM vt0, t0, t1, vt1 WHERE ((NOT (((0.8691501445487906)AND(NULL))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c17 AS REAL))/(((((t1.c2)OR(t1.c1)))OR(vt0.c1)))), CAST(((((((((((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)))OR(vt1.c2)))AND(t0.c0)))OR(t0.c17)))OR(t1.c2)) AS REAL), (((((-6.76961157E8 IN ()))AND((('9yN') BETWEEN (t1.c1) AND (vt0.c0)))))OR(((t0.c17) BETWEEN (t1.c0) AND (t1.c2)))) FROM t1, t0, vt0;SELECT (((t0.c0 IN (t1.c0))) IS TRUE), (~ ((((NULL, vt1.c1, t1.c0, t1.c1, t1.c0))=((vt1.c2, t1.c2, vt1.c0, t0.c0, vt1.c1))))), ((((t1.c0)>>(t1.c2))) BETWEEN (AVG(t0.c0)) AND (((((vt0.c1)OR(vt0.c0)))AND(t1.c2)))) FROM vt1;SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, vt0, t0 WHERE (((((((NULL)OR('1027157931')))OR(NULL)))>(((0.9445878830552144) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((~ (vt1.c2)) IN ()) FROM t0, vt0 WHERE ((((NULL)) NOT BETWEEN ((TYPEOF(DISTINCT NULL))) AND (((NOT (x'')))))); -- 0ms;
SELECT CAST(GROUP_CONCAT(0Xffffffff8c71c4d7) AS REAL), ((((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))<<(((((vt1.c0)OR(vt1.c2)))OR(t1.c2)))), vt0.c1 FROM t0 WHERE ((((1.737053869E9)IS NOT(NULL)) IN ()));SELECT 'Pjch9' FROM t1, t0 WHERE (CAST((x'' IN (NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT (((t0.c1 IN (t0.c1, NULL)))*((- (vt1.c2)))), AVG(((vt0.c1) NOT BETWEEN (0x4f7a435e) AND (t1.c1))) OVER (), NULLIF(DISTINCT t1.c1, TYPEOF(DISTINCT t0.c17)) FROM t1, t0, vt1, vt0 GROUP BY (t1.c0 IN ()) HAVING CAST(((((t0.c1)OR(t1.c1)))OR(t1.c0)) AS REAL); -- 0ms;
SELECT ALL CAST(((((((((vt1.c2)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(vt1.c0)) AS REAL), (((((('rퟑ')OR(vt0.c1)))AND(((t0.c0)GLOB(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)), (~ (MAX(vt1.c1))) FROM vt0, t1, t0 WHERE (ABS(DISTINCT 'V/'));SELECT (NOT (vt1.c1 COLLATE NOCASE)), NTH_VALUE((((t1.c0)||(0.665941589370878)) IN ()), ((((t1.c2)AND(t1.c2)))OR(t1.c1)) COLLATE BINARY) OVER (), t1.c2 FROM t1;SELECT ALL CASE WHEN vt0.c1 THEN t1.c1 WHEN NULL THEN t1.c0 WHEN t0.c1 THEN t1.c1 ELSE t1.c0 END COLLATE RTRIM FROM t0, t1, vt0; -- 0ms;
SELECT DISTINCT ((((t0.c17 IN (vt0.c1, vt1.c2))))<>(((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c1)))))), load_extension(COUNT(*), (t1.c0 IN (vt0.c0))), CAST(((t1.c0) IS TRUE) AS NUMERIC) FROM t0, t1, vt0;SELECT AVG((~ (vt1.c2))) FROM vt1, vt0, t1 WHERE (((((NULL)) BETWEEN (('0.961272118571883')) AND ((0.8139425757335284))) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN t1.c0 THEN t1.c1 ELSE t0.c17 END THEN ((t1.c2)=(vt1.c2)) WHEN ((((t1.c0)AND(vt1.c2)))AND(vt0.c1)) THEN CAST(vt1.c0 AS TEXT) WHEN ((((vt1.c0)OR('3vJsu]Ck')))OR(t1.c1)) THEN (vt1.c1 IN (t1.c0)) ELSE ((vt0.c1) BETWEEN (t1.c0) AND (t0.c0)) END FROM vt0, t0, t1;SELECT ALL ((((((((vt1.c2)OR(t1.c2)))AND(vt1.c2)))AND(t0.c0)))OR(t1.c1)) COLLATE BINARY, ((((((((((((t1.c1)OR(vt1.c2)))AND(vt1.c2)))OR(((((((((t1.c2)OR(t0.c17)))AND(t0.c17)))OR(vt1.c2)))OR(vt1.c2)))))OR(COUNT(*))))OR(IFNULL(DISTINCT t0.c0, t1.c0))))AND(((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), ((NULL) NOTNULL) FROM t1, t0;SELECT COUNT((1739924460 IN ())) OVER () FROM vt1 ORDER BY ((t1.c0) IS TRUE) COLLATE BINARY, '-291568362' DESC;SELECT DISTINCT NULL FROM vt0; -- 1ms;
SELECT GROUP_CONCAT((((0.14153288169717226))<=((t0.c1))) COLLATE RTRIM) OVER () FROM vt0, vt1;SELECT DISTINCT '347726342' COLLATE BINARY FROM vt1 WHERE (ABS(CASE 0x1d9fe36f  WHEN x'' THEN '554249577' WHEN 0.4667596347461975 THEN NULL WHEN '188282216' THEN x'5433' END)) GROUP BY (LTRIM(t0.c17) IN ()) HAVING ((((((t0.c17)OR(t1.c2)))AND(vt0.c1)))%(t0.c0));SELECT DISTINCT ((t1.c0)||(t0.c0)) COLLATE RTRIM FROM t1, vt0, vt1 WHERE (CAST(NULLIF('\R䁨', x'') AS NUMERIC)) LIMIT -292959620;SELECT ALL COUNT((('1650151703')AND(t0.c0))) FROM vt0, t1, t0, vt1 WHERE ((((CASE WHEN '1074395590' THEN 0x13755727 WHEN 0.67105793825493 THEN -268896020 WHEN 0.9290362798839135 THEN '' ELSE x'' END))!=((((0.9130684223219722) IS FALSE))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)))*(((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))) FROM t0, vt0, vt1, t1 WHERE (COALESCE(NULL, '1Ydwo', x'e6c9', x'') COLLATE RTRIM) ORDER BY ((CAST(t0.c0 AS REAL))*(-1.94786863E8)) ASC; -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE (MAX((- (x'')), (+ (0.4317340215220806)))) LIMIT -550245757; -- 0ms;
SELECT vt1.c0, ((+ (t0.c0)) IN (SQLITE_SOURCE_ID())), t0.c0, LAG(SQLITE_COMPILEOPTION_GET(MAX(t1.c0, t1.c1, vt1.c2, t1.c2)), CAST(((((vt1.c0)AND(vt1.c0)))OR(t1.c1)) AS INTEGER), t1.c0) OVER (), COUNT(((((((((t1.c0)AND(vt0.c1)))AND(t1.c0)))OR(t0.c17)))AND(t0.c17))) OVER () FROM vt0, t1, vt1 WHERE ((NOT ((((0Xffffffffb4aa05be)) BETWEEN (('% ')) AND (('0.5112958008858471')))))) ORDER BY ((t0.c17) BETWEEN (((vt0.c1) NOTNULL)) AND ((+ (t0.c0)))) ASC  NULLS LAST;SELECT DISTINCT CASE (~ (t1.c1))  WHEN (- (t0.c17)) THEN (NOT (t1.c1)) END, ((((vt1.c0)OR(((((t0.c0)AND(t0.c0)))AND(vt1.c2)))))OR(((vt1.c1)IS(t0.c17)))), ((((t0.c17)GLOB(vt1.c2))) IS TRUE) FROM vt0, t0 ORDER BY ((((vt1.c2))>=((t0.c0))) IN ()), (STRFTIME(t0.c0, vt0.c0, vt1.c0, vt0.c1, t0.c1, 'pHwK䋈}쥳', t1.c1) IN ()) ASC  NULLS FIRST;SELECT DISTINCT TOTAL(((t1.c0)>=(vt1.c2))) FILTER(WHERE (((JULIANDAY(vt0.c1, t1.c2, t0.c17, vt0.c1, t0.c17)))>((CAST(t1.c1 AS INTEGER))))) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS) FROM t1, vt0, t0;SELECT ALL (NOT (json_remove(t1.c2, vt1.c0))) FROM vt0, vt1, t1; -- 0ms;
SELECT ALL CAST(vt0.c0 AS REAL) FROM vt1, t0;SELECT DISTINCT SUM((t0.c17 IN (vt0.c1))) OVER () FROM vt0, t1, t0; -- 0ms;
SELECT ALL COUNT(((((t1.c1)AND(t0.c1)))OR(t0.c17))), (((((t0.c0 IN (t1.c1, t1.c0)))OR(SUM(t0.c1))))AND(NULL COLLATE BINARY)), (((((((((NOT (vt1.c0)))OR(0Xffffffff8f81073f COLLATE BINARY)))OR(SUM(vt0.c1))))AND(CASE t1.c1  WHEN 0xffffffffeecd064e THEN t1.c0 WHEN vt1.c1 THEN t1.c1 WHEN t1.c0 THEN t0.c0 ELSE vt1.c0 END)))OR(LIKELY(vt1.c0))) FROM vt1, t1;SELECT DISTINCT (((((NOT (t1.c2)))OR(((((((((((((0.3296939702791981)AND(t1.c2)))OR(t0.c0)))AND(t1.c0)))OR(t1.c0)))AND(vt0.c1)))OR(t1.c2)))))OR(CAST(vt1.c0 AS INTEGER))) FROM t1;SELECT DISTINCT ((((LOWER(t0.c17))OR(((t0.c17) IS FALSE))))AND(((t1.c0) IS TRUE))) FROM t0, t1, vt0 WHERE ((('x끠84,') NOT BETWEEN (x'd8df') AND (x'f83c')) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((vt1.c1)IS(vt0.c0))) BETWEEN (CAST(x'' AS REAL)) AND (((t0.c1)+(t1.c1)))) FROM vt1, t0;SELECT DISTINCT CASE (vt1.c1 IN (t0.c0, t0.c1))  WHEN t0.c0 COLLATE NOCASE THEN t0.c17 WHEN NULL THEN (~ (vt0.c1)) WHEN ((t0.c17)IS(vt1.c1)) THEN AVG('') ELSE CASE vt0.c0  WHEN vt1.c1 THEN '54' WHEN vt1.c2 THEN t1.c0 WHEN t1.c1 THEN vt1.c2 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END END, (- (((t1.c0) IS FALSE))), (~ (((((t0.c1)AND(vt0.c0)))OR(vt1.c2)))) FROM t1 WHERE (((('Ო\n[7k곱f6')) NOT BETWEEN (((+ (x'')))) AND ((CAST(0.6919292746813922 AS TEXT)))));SELECT ((NULL)IS NOT(((vt0.c0) ISNULL))), ((((GROUP_CONCAT(t0.c17))OR(HEX(vt1.c0))))OR((vt1.c1 IN ()))), CAST(json_insert(t1.c0, t1.c2, t0.c0) AS NUMERIC), t1.c0, MIN(0.7825506172893799) FROM t0, vt1;SELECT ALL CAST(((t1.c0)-(vt0.c1)) AS REAL) FROM t1, vt1 WHERE (((CASE x''  WHEN '0.15221725991864532' THEN '147814617' ELSE 0.9642826312813189 END) BETWEEN (((0Xffffffffc385851e)<(0.9671388878932939))) AND (CASE WHEN x'73bb' THEN '-1650022793' WHEN x'e26b' THEN x'' WHEN x'' THEN '' WHEN NULL THEN NULL WHEN x'' THEN 0xffffffff8a31de9b END))) GROUP BY (vt1.c0 IN ()) COLLATE RTRIM, (t0.c1 COLLATE BINARY IN ()), CAST(t0.c0 COLLATE BINARY AS REAL);SELECT ALL ((CAST(t0.c17 AS REAL))<(((vt1.c2) BETWEEN (t0.c1) AND (vt1.c2)))) FROM vt0, t1, t0, vt1; -- 0ms;
SELECT DISTINCT (((t1.c0, t0.c0, vt1.c2)) BETWEEN (((t0.c0 IN (t1.c1)), ((t0.c1)IS(t0.c0)), vt1.c0 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (t0.c0) AND (NULL)), (vt1.c1 IN ()), ((vt0.c0)LIKE(vt1.c0))))), '', ((vt1.c2 IN ()) IN ()) FROM t0 WHERE ((0.29079686980370334 COLLATE RTRIM IN ((NOT (0Xffffffffc5ca1d63)))));SELECT DISTINCT CASE (~ (t1.c1))  WHEN ((vt1.c2) NOT BETWEEN (vt0.c0) AND (t0.c17)) THEN ((t0.c17) BETWEEN (vt0.c0) AND (t0.c0)) ELSE ((vt1.c2)GLOB(t0.c17)) END FROM vt1, vt0, t1, t0 WHERE (((CASE 0Xfffffffff8a99217  WHEN 0.5809108061883144 THEN 0.7574892704320835 ELSE x'ef11' END) NOT BETWEEN ((-1632459950 IN ())) AND (x''))); -- 0ms;
SELECT DISTINCT vt1.c0, ((t0.c1)>>((((vt1.c2, t1.c1, t0.c0))==((vt1.c2, vt0.c1, vt1.c1))))), (MAX(vt1.c2) IN ()) FROM vt0, t1, vt1 WHERE (CAST(((0.9271343404650864)>=(NULL)) AS NUMERIC)) GROUP BY ((((((((t0.c0)AND(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 END)))OR(((vt1.c1)>>(t1.c0)))))OR(CAST(vt0.c1 AS BLOB))))OR(vt1.c2));SELECT DISTINCT (- (LIKE(0.692626618702212, t0.c17, '뙐'))) FROM t0 WHERE (TRIM(DISTINCT (((((((('')AND('-386333227')))AND('0.11420105584480678')))AND('G_3')))OR('0.928259072934493')))); -- 0ms;
SELECT ALL (((+ (vt1.c1))) NOT BETWEEN ((+ (t1.c2))) AND (t0.c17)) FROM t0, t1, vt1, vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN (vt0.c0, vt1.c1)) AS BLOB) FROM vt1, t1 INDEXED BY i34, t0, vt0 WHERE (CASE WHEN (('!Y') BETWEEN ('-162768371') AND (0x676a0e0e)) THEN 0Xffffffffdb2cd4e9 COLLATE BINARY END);SELECT DISTINCT MIN(IFNULL(vt1.c0, vt1.c1)) FROM vt1, t1 GROUP BY ((CAST(vt1.c2 AS BLOB))|((((t1.c1, vt1.c2, vt1.c0)) NOT BETWEEN ((t1.c0, vt1.c2, NULL)) AND ((t1.c1, t1.c2, vt1.c0))))); -- 0ms;
SELECT DISTINCT NULLIF((((vt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t1.c2))), (((vt1.c2))>=((t1.c1)))), '1491458776', ((0.25400114789733474)%(CASE WHEN t1.c2 THEN t0.c1 ELSE t0.c17 END)) FROM vt0;SELECT CASE WHEN CASE t0.c1  WHEN vt1.c2 THEN vt0.c1 END THEN (t1.c2 IN ()) ELSE ((t0.c0) BETWEEN (vt1.c0) AND (t0.c17)) END FROM t1, vt1, vt0;SELECT DISTINCT SUM(NULL) OVER () FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((((((0.4678013490891616)OR((t1.c2 IN ()))))AND(((vt1.c0) NOT BETWEEN (0.8758780373488085) AND (t0.c1)))))AND(CAST(vt1.c0 AS INTEGER))))OR(highlight(',v*z9no*F', t1.c0, vt1.c2, vt1.c2))) FULL OUTER JOIN t1 ON x'';SELECT t1.c2 FROM t1, vt0 WHERE (CASE WHEN ((x'73b4')>>(456918847)) THEN x'9741' WHEN ((0.2837225419154773) IS FALSE) THEN ((((NULL)OR(0.6511563526991125)))OR(-926284040)) WHEN '' COLLATE RTRIM THEN ((x'') BETWEEN (NULL) AND (0.8638832310612055)) END); -- 0ms;
SELECT CASE WHEN ((t1.c1) BETWEEN (vt0.c1) AND (vt1.c2)) THEN ((t1.c2)>>(x'')) END FROM vt1, t1, t0 WHERE (0.7065702280814373);SELECT DISTINCT (((+ (t1.c1))) NOT BETWEEN (((((vt0.c0)OR(t1.c1)))AND('2102982553'))) AND (NULL)) FROM vt1, t1 WHERE (('2102982553' IN ()));SELECT ALL CASE WHEN vt0.c1 THEN vt1.c2 ELSE t1.c1 END COLLATE RTRIM, t1.c1, ((vt0.c1) IS FALSE) COLLATE NOCASE FROM t0, vt0 WHERE (((((('-749736478', x'', NULL)) BETWEEN ((9.36183429E8, 555240713, 1650151703)) AND ((x'', '-1971494172', 0.7874628435838567)))) NOTNULL));SELECT CASE WHEN '' THEN ((((((((t0.c0)OR(vt1.c2)))OR(t1.c0)))AND('-1554997713')))AND(vt0.c1)) END FROM vt1, vt0, t0;SELECT UPPER(((vt0.c1)OR(NULL))) FROM vt0, t1 ORDER BY (((t0.c0)-(x'328f')) IN ())  NULLS FIRST; -- 1ms;
SELECT CASE ((t1.c0)LIKE(t1.c0))  WHEN ((vt0.c0) BETWEEN (t1.c2) AND (t0.c1)) THEN ((t0.c17)>(vt0.c1)) END FROM t1, vt1, vt0 GROUP BY CAST(((t0.c17) ISNULL) AS NUMERIC) HAVING ((((x'') NOT BETWEEN (vt1.c2) AND (vt0.c1))) BETWEEN ((t1.c0 IN (t0.c1))) AND (((t0.c17) NOTNULL))) ORDER BY x'' COLLATE BINARY ASC  NULLS LAST;SELECT DISTINCT (((NOT (vt0.c0)))LIKE(t0.c0 COLLATE RTRIM)) FROM vt0 NATURAL JOIN vt1;SELECT ((CASE t0.c17  WHEN t1.c0 THEN NULL END) BETWEEN ((((t1.c2)) BETWEEN ((vt0.c1)) AND ((t0.c1)))) AND (((NULL) NOT BETWEEN (t1.c2) AND (t1.c0)))), ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)) COLLATE RTRIM, UNLIKELY(((vt1.c2) NOT BETWEEN (vt0.c0) AND (0.9843640304322444))) FROM vt1, t0, vt0 WHERE ((((~ ('Ee')))!=(CASE WHEN x'' THEN 0.5482646468777518 END)));SELECT DISTINCT ((CAST('s颵*u&j' AS INTEGER)) IS FALSE) FROM t1, vt0, t0; -- 0ms;
SELECT ALL (((t1.c0)>(vt0.c1)) IN ()) FROM vt0 ORDER BY (((('-171244996' COLLATE NOCASE)AND(vt0.c1)))OR(((vt0.c1)OR(vt1.c2)))) ASC  NULLS LAST;SELECT ((((vt0.c0)/(t1.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t1.c2) AND (NULL))) AND (SUM(vt1.c2))) FROM t0, vt0, t1 WHERE (((((0.9688747511678534)>('0.1025416797612071')))LIKE(x'' COLLATE NOCASE))) ORDER BY vt1.c0  NULLS LAST, ((t1.c2) NOT BETWEEN (((x'0d22')=(t1.c0))) AND (((((t1.c1)AND(0.2871459278427365)))AND(vt0.c1)))) DESC;SELECT DISTINCT (((((vt1.c0)<<(t1.c2)), TOTAL(t1.c0), t1.c2))<>((vt1.c0, t1.c2, CAST(t0.c1 AS BLOB)))) FROM t1 WHERE ((((NULL))==((NULL))) COLLATE NOCASE);SELECT DISTINCT ((t1.c0)OR(t0.c1)) COLLATE NOCASE FROM t0, vt1 WHERE (((((x'bd5ee306') IS FALSE)) NOT NULL));SELECT DISTINCT t1.c0 FROM vt1, vt0, t1, t0 WHERE ((((('') BETWEEN ('-676961157') AND ('-636523705'))) NOT BETWEEN (((0.6309688969216772)|(0.6470555319286936))) AND (((-1.62768371E8) NOTNULL)))); -- 0ms;
SELECT DISTINCT COUNT(*), (TRIM(t0.c1) IN ()), ((((t1.c0 COLLATE NOCASE)AND('9')))AND(x'4a19')) FROM t0, t1, vt0; -- 0ms;
SELECT ALL CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) FROM t1, vt0;SELECT ALL ((((((((((((((t0.c1)OR(t1.c1)))OR(t0.c17)))AND(t1.c1)))OR(t0.c1)))AND(t0.c1)))OR(vt0.c0)))&(NULL)), 0.6528778453931028, (NOT (t0.c1)) COLLATE NOCASE FROM t0 WHERE (CASE WHEN (-5.87810091E8 IN ('-227788917', '-1565576792')) THEN (+ ('')) END);SELECT DISTINCT TOTAL(((t0.c1) BETWEEN (vt1.c0) AND (t0.c0))) OVER (), (((vt1.c0, vt1.c2, vt1.c0)) NOT BETWEEN ((((t0.c1) NOT BETWEEN (vt1.c1) AND (t0.c0)), MIN(vt1.c0), SUM(vt0.c0))) AND ((((((vt1.c0)OR(t1.c1)))AND(vt0.c0)), (('-1350654400')%(t1.c2)), ((t1.c1) NOT BETWEEN (vt0.c0) AND (t0.c1))))), CASE AVG(vt0.c1)  WHEN SUM(vt1.c1) THEN (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c17, vt1.c1)) AND ((vt1.c2, vt1.c2, t1.c0))) ELSE (((t1.c1, t1.c2, t1.c2))<>((t1.c0, vt0.c0, t1.c2))) END FROM t1, t0, vt1, vt0 LIMIT -1039336 OFFSET -35934341; -- 0ms;
SELECT TOTAL(((t1.c0) IS TRUE)) OVER () FROM t1; -- 0ms;
SELECT LIKELY((NOT (vt0.c1))) FROM vt0 ORDER BY (((vt0.c1) IS FALSE) IN ()) DESC; -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c1)))<=((~ (t1.c1)))) FROM t1, t0, vt0, vt1 WHERE (CASE CASE 0.14208615809793834  WHEN '-1604151720' THEN '' END  WHEN (((('')AND(x'dfc2')))OR(x'')) THEN ((x'2fde') NOT BETWEEN (NULL) AND (x'')) WHEN ((x'')/(x'')) THEN (NULL IN ()) WHEN ((NULL)-(0.3671817547426649)) THEN (('\r<Lv')IS(0.6302105170877403)) END); -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t1.c0) AND (0Xffffffffaf60c065))) NOT BETWEEN ('1200319622' COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM)) FROM vt0, t1, vt1, t0 GROUP BY (((t0.c17)<(t0.c1)) IN ()), (('')%(((t1.c0) BETWEEN (t0.c17) AND (vt0.c0)))), CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END AS TEXT); -- 0ms;
SELECT ALL (((vt1.c1)) NOT BETWEEN ((0.985086012875372)) AND ((HEX(DISTINCT t0.c0)))) FROM vt1, t1, t0, vt0; -- 0ms;
SELECT t0.c0, MAX(((t0.c0)<>(t0.c17))), ((COUNT(vt1.c0)) NOT BETWEEN (vt0.c0) AND (NULL)), (((vt0.c0))<=((vt1.c0))) COLLATE BINARY, ((SUM(t1.c2)) NOT BETWEEN (((t0.c0) NOT BETWEEN (vt1.c0) AND (t1.c1))) AND ((t0.c1 IN ()))) FROM vt1, t0, vt0, t1 WHERE (-1.3506544E9) ORDER BY ((((0.6677841797960192)<=(t1.c1))) NOT BETWEEN (((t0.c17) IS TRUE)) AND (CASE vt1.c1  WHEN vt1.c2 THEN t1.c2 ELSE vt1.c0 END)) ASC  NULLS FIRST, (((vt1.c0, vt0.c0, t1.c1, vt1.c0, t0.c17)) BETWEEN ((((vt1.c2)<<(t1.c1)), ((t0.c17)==(vt1.c1)), (vt1.c0 IN ()), ((((vt1.c0)AND(t0.c1)))AND('Be#?')), t0.c0 COLLATE RTRIM)) AND ((((vt1.c1) IS FALSE), ((vt1.c2)LIKE(t1.c0)), (((783940361)) BETWEEN ((t1.c1)) AND (('2122762796'))), (+ (t1.c1)), 0xffffffffe65a8903))); -- 1ms;
SELECT ALL GROUP_CONCAT(((t0.c0)>(vt0.c1))) OVER () FROM vt0 INDEXED BY i33;SELECT DISTINCT x'' FROM vt0, vt1, t1 WHERE (((NULLIF(DISTINCT 0.6199790333520419, 0.4443120846053775))&(UPPER(x'')))) LIMIT 1948699596; -- 0ms;
SELECT DISTINCT (NOT ((vt1.c2 IN ()))), ((TOTAL_CHANGES()) BETWEEN ((((-5.87810091E8, t0.c17, t1.c2)) NOT BETWEEN ((vt1.c1, vt0.c0, t0.c17)) AND ((vt0.c0, vt1.c0, t0.c1)))) AND (CAST(t1.c2 AS NUMERIC))), ('2N' IN (NULL, json_extract('~82', vt1.c1, t0.c1, vt1.c1))) FROM vt0;SELECT SUM('-636523705') FROM vt1, t1, t0 INDEXED BY i34 WHERE (CASE '' COLLATE BINARY  WHEN ((NULL)&('232475445')) THEN CAST(0.34908303317566614 AS NUMERIC) ELSE CAST(NULL AS TEXT) END);SELECT MIN(((vt1.c1)>(vt0.c0))), (((CAST(vt0.c0 AS NUMERIC), CASE WHEN t1.c0 THEN t0.c1 END, 'l}굩h|诹'))==(((x'c895' IN (t1.c1)), t1.c0, NULL))), LAST_VALUE('6>') OVER ( ORDER BY ((x'6d5a') NOT NULL)  NULLS LAST) FROM t0 INDEXED BY i33, vt1 WHERE (CAST(((((x'7c145c75')AND(-2010358953)))OR(NULL)) AS BLOB));SELECT ALL ((((0.49593945953736607)>=(t1.c1))) NOT NULL) FROM t0, t1, vt0, vt1 WHERE ((~ (((0x6d9de225) ISNULL)))) ORDER BY JULIANDAY(((t1.c2)>>(t1.c1)), (vt1.c2 IN ()), (t1.c2 IN (t0.c17, t1.c2))); -- 0ms;
SELECT ALL (((t1.c2)) NOT BETWEEN ((MAX(t1.c2))) AND ((((vt1.c2) BETWEEN (t1.c0) AND (vt1.c0))))) FROM vt1, vt0, t1 WHERE ((((('-968253669', 'FRC', x'')) BETWEEN ((0xffffffffa05e6c1d, 0.4951837848374693, 'm2')) AND (('-1350654400', '-1983607718', x'84bc'))) IN ())); -- 0ms;
SELECT COUNT(*) OVER () FROM t0, vt0, vt1 WHERE ('-1306294799' COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (('-705771282')/(0.7790989044303778)) COLLATE NOCASE, MAX((vt0.c0 IN ())), ((((+ (t0.c17))))!=((((vt1.c2) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM t0 WHERE (COALESCE(DISTINCT (1483321726 IN ()), x''));SELECT DISTINCT 0.5827188637499298 FROM t0, t1, vt1, vt0; -- 1ms;
SELECT DISTINCT x'', (AVG(vt1.c1) IN ()), DENSE_RANK() OVER ( PARTITION BY ((((vt1.c2)OR((('1164036961') BETWEEN (t0.c0) AND (t1.c1)))))AND(((vt0.c0) NOT BETWEEN (vt1.c2) AND (t0.c17)))), (((t1.c0) ISNULL) IN (NULLIF(t1.c2, vt0.c0)))) FROM vt1 WHERE (CAST(((0.7698939382798685) NOT BETWEEN ('') AND (-1.23818792E8)) AS TEXT));SELECT (CAST(vt1.c0 AS BLOB) IN ((+ (vt1.c0)))) FROM vt0, t1, vt1 GROUP BY ('958989364' IN ()) HAVING ((((vt0.c0)GLOB(vt1.c2)))>(CASE WHEN vt0.c1 THEN vt1.c2 ELSE t1.c1 END)) ORDER BY ((0.037613055450791744) IS FALSE); -- 0ms;
SELECT (((NULL) NOT BETWEEN (vt1.c2) AND ('977165255')) IN ()), ((~ (t0.c0)) IN ()), NULL FROM vt0; -- 0ms;
SELECT TYPEOF(t1.c1) COLLATE RTRIM, (((vt1.c2)) NOT BETWEEN ((COALESCE(DISTINCT vt0.c1, 1, 0.853799582066387, t1.c1))) AND (((t0.c0 IN (t0.c1))))), UPPER(CASE t0.c0  WHEN x'' THEN t1.c0 END) FROM t0, t1, vt0 GROUP BY (((('1967462285')AND(((t1.c2)|(t0.c17)))))AND(TYPEOF(t0.c0))) HAVING CAST(t1.c1 AS REAL);SELECT DISTINCT 9223372036854775807 FROM t1, vt1, vt0, t0 WHERE (((CAST(0.00680091250290249 AS INTEGER)) BETWEEN (((1030802532) IS FALSE)) AND (((((0.7924433449377244)AND('0.961272118571883')))OR(0.08730308419570487))))) GROUP BY CASE WHEN x'70ab' THEN t0.c1 END COLLATE NOCASE LIMIT 1357453145 OFFSET -1669847458; -- 0ms;
SELECT DISTINCT NULL FROM t1 WHERE ((('1976870014') IS FALSE)) GROUP BY ((json_patch(vt0.c1, t0.c17)) IS TRUE), ((CAST(t1.c2 AS BLOB)) BETWEEN (vt0.c1) AND (((t0.c1) IS TRUE))), (((((((((((t0.c0)AND(vt0.c1)))AND(t0.c1)))OR(vt0.c0)))OR(0.31346537183333445))))<=((LTRIM(vt0.c0)))), (((+ (vt1.c1)))AND(CASE vt1.c0  WHEN t1.c1 THEN t1.c0 END)), -1015567919 HAVING ((CAST(t0.c0 AS NUMERIC)) BETWEEN (QUOTE(vt1.c2)) AND (((t0.c17)LIKE(vt1.c1))));SELECT (((((vt1.c2 IN (vt0.c1)))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (vt1.c1)))))AND(((t0.c0)=(t0.c17)))), ((CASE WHEN t0.c1 THEN t1.c2 ELSE t0.c0 END) BETWEEN (((t0.c0) NOTNULL)) AND (t0.c1 COLLATE NOCASE)), (NOT (CASE WHEN vt0.c0 THEN t1.c0 WHEN vt1.c0 THEN t1.c1 WHEN t1.c1 THEN vt1.c2 END)) FROM t1 GROUP BY ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE NOCASE, CASE WHEN ((vt1.c2) NOT NULL) THEN ((t1.c2) NOT BETWEEN (vt0.c0) AND (t1.c0)) END, 0.9980988433137978 LIMIT -818831393;SELECT ALL (CAST(t1.c1 AS REAL) IN (x'')) FROM t1; -- 0ms;
SELECT DISTINCT (+ (vt0.c1)) FROM vt0, t1, t0, vt1 WHERE (CAST((+ (0.6549581185989388)) AS BLOB)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN 347726342 THEN t0.c0 COLLATE RTRIM END FROM t1;SELECT ALL ((((((t1.c2)AND(vt1.c0)))AND(vt1.c1)))<(NULL)) FROM vt1 WHERE (((- (x'')) IN ()));SELECT DISTINCT CASE WHEN MIN(t0.c17) THEN vt1.c1 COLLATE NOCASE ELSE CASE WHEN vt0.c0 THEN vt1.c2 ELSE t1.c0 END END, SUM(CASE vt0.c1  WHEN 'RK' THEN t1.c2 END), ((((vt1.c1)+(vt1.c1))) BETWEEN (CASE t0.c17  WHEN vt1.c0 THEN vt1.c2 END) AND ((((-5.4151052E7, x'', vt1.c1))<>((t1.c0, vt1.c0, vt0.c0))))), (((((t0.c0, vt0.c1, t1.c2)) NOT BETWEEN (('D\', vt0.c0, t0.c0)) AND ((t1.c2, t0.c17, t0.c0)))) NOT NULL), (((~ (vt1.c1))) ISNULL) FROM t0, vt0, vt1;SELECT DISTINCT ((((((((vt0.c1)OR(t1.c2)))AND(vt1.c2)))OR((0.3730225722128808 IN ()))))OR(GROUP_CONCAT(vt0.c0))), (~ (SUM(t1.c2))), CAST(COUNT(t1.c1) AS REAL) FROM t0, t1 WHERE (((('곘∕') NOT NULL) IN ())) GROUP BY ((CAST(t0.c1 AS REAL))<(((t1.c1)*(vt1.c1)))) HAVING (((+ (x'9851')))>>(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c2 END));SELECT ALL CASE WHEN 0xfe90298 THEN t1.c2 WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t0.c0 END COLLATE RTRIM, '1629757973', '1564226241', ((vt1.c2) IS TRUE) COLLATE NOCASE, ((((vt1.c1)!=(t0.c1)))<<(((t1.c1)>(0.5153755045568196)))), vt0.c1, LOWER(DISTINCT CAST(t0.c17 AS BLOB)) FROM t1 WHERE ((('-539540478' IN ()) IN ((((((((('-566440465')AND(']6{<v~.DN')))AND(x'')))OR(NULL)))AND(0.19362015129556764)))));SELECT DISTINCT ((((((t1.c1)OR(t1.c0)))OR(vt1.c0))) NOT BETWEEN (((t0.c1)!=(t1.c2))) AND (((((vt1.c2)AND(t1.c2)))AND(t1.c1)))), ((((vt0.c0 COLLATE NOCASE)OR((((-1983607718, t1.c0, vt1.c1))!=(('A4', vt0.c0, t1.c0))))))AND((t1.c2 IN (t0.c1)))), ((vt1.c1)>(vt0.c1)) COLLATE NOCASE FROM t1, t0, vt1, vt0 WHERE (HEX(((0.9993987870025836) NOT BETWEEN (x'a905') AND ('-1310826850')))); -- 0ms;
SELECT DISTINCT ((((t1.c0) NOT NULL))GLOB(CAST(vt1.c2 AS BLOB))), '1001078069', ((((t0.c1) IS TRUE)) NOT BETWEEN ((+ (t0.c17))) AND ((+ (t0.c1)))) FROM vt1, vt0, t1 WHERE (((CAST(0.3904315429184143 AS TEXT)) BETWEEN (CAST('' AS INTEGER)) AND (((NULL) NOTNULL))));SELECT DISTINCT ((((vt1.c1)||(t0.c1))) NOT NULL) FROM t1, vt1, vt0;SELECT DISTINCT (((t1.c2)LIKE(vt1.c0)) IN ()), (+ (((((vt0.c0)AND(vt1.c2)))OR(t0.c17)))), NULLIF(vt1.c0, (t0.c1 IN ())) FROM t0, vt1 WHERE ((((('6{R-%Qa_')%(-1.556620356E9)))IS((((0.006602681175452041)) BETWEEN ((NULL)) AND (('%{KM1'))))));SELECT ALL NULL FROM t0, t1, vt1, vt0 WHERE (CAST(((x'3940558f')>>('')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c0 AS INTEGER))OR(vt0.c1)))AND(vt0.c1)), ((('-1332226924'))>=((((t0.c17) ISNULL)))), COUNT(((((vt1.c2)OR(vt0.c1)))AND(vt1.c1))) FROM vt0, vt1 ORDER BY ((COALESCE(DISTINCT vt1.c0, vt0.c0))AND((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1)))))  NULLS FIRST, ((((CASE WHEN t1.c2 THEN t1.c1 WHEN t1.c2 THEN vt1.c0 WHEN t0.c0 THEN t1.c2 WHEN t0.c0 THEN t1.c0 WHEN vt1.c1 THEN t0.c1 END)AND(((((((((t0.c17)OR(vt1.c0)))AND(t1.c2)))OR(t1.c2)))OR(t0.c17)))))AND(CAST(t1.c2 AS INTEGER)))  NULLS LAST;SELECT ALL (('jF3Db(?')-((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c2))))), ((((((t1.c0) NOT BETWEEN ('987775435') AND (vt1.c0)))AND(TOTAL(t0.c17))))AND(COALESCE(DISTINCT t0.c1, t1.c0))), (- (t1.c2 COLLATE RTRIM)) FROM vt0;SELECT 0.07436766271349515, MAX(((((x'')AND(0.6084638952279873)))OR(vt1.c1)), (~ ('458983650'))), (('\rBoU3')<=(vt0.c0)) FROM t0 WHERE ((((((((((x'c858')OR('~MYoo2''\t')))OR(-2140738230)))AND(x'35a2')))OR('')) IN ('' COLLATE RTRIM, x'')));SELECT DISTINCT ((((((((CAST(t1.c2 AS NUMERIC))OR(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))))OR(t1.c0 COLLATE RTRIM)))AND((~ ('-1078273878')))))OR(t0.c17)) FROM vt0, vt1 WHERE ((+ ((NULL IN ('Vy')))));SELECT DISTINCT (- (vt0.c0)), vt0.c1, AVG(CAST(vt0.c0 AS INTEGER)) OVER ( ORDER BY (NOT (vt0.c0 COLLATE RTRIM))  NULLS FIRST), ((CASE WHEN t0.c17 THEN 0.3072531250640753 END)GLOB(CAST(vt0.c0 AS TEXT))), vt1.c0 FROM vt0, vt1, t0 WHERE (((((((0.6283144869464169)>=('0.3360953343729861')))OR((('')LIKE('0.29514007946013177')))))AND(0.8274553574949977 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT AVG(t1.c0) FROM t1; -- 1ms;
SELECT ((((t0.c1)+(t0.c1))) NOT BETWEEN ((~ (t1.c0))) AND (t1.c1 COLLATE BINARY)), CASE MIN(vt1.c0)  WHEN ((t0.c17) NOT NULL) THEN ((vt1.c1)AND(t1.c1)) END, (((t1.c0)==(vt1.c0)) IN (((t0.c0)AND(vt1.c1)), CASE t1.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c2 WHEN t1.c0 THEN vt1.c2 END)) FROM t1 WHERE (((((((((((x'') NOT BETWEEN (0.5605730339616435) AND (0x5e54f22c)))AND((('-1995067425')-(-6.51354212E8)))))AND((x'' IN ()))))AND(x'')))AND(CASE ''  WHEN x'' THEN '' END))) ORDER BY (vt0.c0 COLLATE NOCASE IN (((((t1.c1)OR(t0.c17)))OR(t0.c0))));SELECT DISTINCT LAG(x'', CAST(LIKE(vt1.c1, t0.c1) AS NUMERIC), CASE ''  WHEN ((((x'')AND(vt1.c0)))OR(vt1.c0)) THEN (vt1.c2 IN (t0.c0, t0.c1)) ELSE t0.c17 COLLATE NOCASE END) OVER (), ((SUM(t1.c1)) BETWEEN (((((((((t0.c1)AND(vt0.c1)))OR(vt1.c1)))OR(t1.c2)))AND(vt0.c1))) AND ((NOT (t1.c1)))), (((('1316805005')AND(((x'')<=(vt0.c1)))))OR(((t1.c1)<<(t0.c0)))) FROM t0, vt1;SELECT DISTINCT ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN ('672081328' COLLATE RTRIM) AND (json_extract(t0.c0, vt0.c0))) FROM t0 GROUP BY ((t1.c2 COLLATE RTRIM)<=(((((((((vt1.c2)OR(t1.c0)))OR(vt0.c1)))OR(t0.c0)))AND(vt1.c0)))) HAVING CAST(vt0.c1 AS REAL) COLLATE BINARY;SELECT ((((t1.c1)<<(t0.c0))) BETWEEN ((x'' IN ())) AND (((t0.c17) IS TRUE))) FROM vt0, t1, vt1;SELECT DISTINCT ((TOTAL(t0.c17)) IS FALSE) FROM vt0 ORDER BY ((((((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))AND((((NULL)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))))OR((~ (vt0.c1))))  NULLS FIRST;SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0)) COLLATE BINARY, RTRIM(vt0.c0), ((((vt1.c1)&(vt1.c1)))>(((vt0.c1)||(vt1.c0)))) FROM t1, vt1, vt0; -- 0ms;
SELECT (+ (((t0.c17) NOT BETWEEN (t1.c2) AND (vt1.c1)))) FROM vt1, vt0, t0 WHERE ((((((((((('')/(x'2b63')))AND((+ (x'c94a')))))AND(CASE 0.10269404770706803  WHEN 0.5977722489920322 THEN NULL ELSE NULL END)))OR((((NULL)) BETWEEN (('✞al')) AND ((0.9699461792179412))))))OR((~ (0.6309688969216772))))) LIMIT -77515120 OFFSET 1206988557;SELECT x'' FROM vt1, t1, t0, vt0 WHERE ((NOT (CASE 0.5003619393238927  WHEN '1063767310' THEN x'ab55' END))); -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c17)) ISNULL) FROM vt0, vt1, t0 WHERE ((~ (((NULL)/('Tc&aC!''S'))))); -- 0ms;
SELECT DISTINCT CASE CAST(x'' AS BLOB)  WHEN 2.122762796E9 THEN CASE WHEN t0.c17 THEN vt0.c0 ELSE vt0.c1 END ELSE (t1.c1 IN ()) END FROM t1 WHERE (((((NULL)|('')))+((((x'8cc7')) BETWEEN ((NULL)) AND ((0.8483083737345691))))));SELECT DISTINCT 'O' FROM vt1, t0; -- 0ms;
SELECT DISTINCT (('-194786863') BETWEEN (TOTAL(vt0.c0)) AND (vt0.c1)) FROM vt1, vt0, t0, t1; -- 0ms;
SELECT DISTINCT ((((t0.c17))<((vt1.c0))) IN ()) FROM t1, vt0; -- 0ms;
SELECT ALL vt1.c0 FROM vt1, vt0, t1 WHERE (NULL); -- 0ms;
SELECT CASE WHEN (((vt1.c1)) NOT BETWEEN (('D')) AND ((vt0.c1))) THEN NULL ELSE CAST(vt0.c0 AS NUMERIC) END FROM vt0 LIMIT -1737847463;SELECT ((((vt0.c0)-(t1.c0)))&(SUM(t0.c17))), CASE ((t0.c17) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CASE WHEN NULL THEN t1.c0 END THEN (~ (vt1.c1)) ELSE CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 END END, t0.c17 FROM t1, vt1;SELECT GROUP_CONCAT(TOTAL((NOT (vt1.c1)))), TYPEOF(((t1.c0) NOTNULL)), NTH_VALUE(LOWER(DISTINCT CAST(vt1.c2 AS TEXT)), ((((vt1.c1)&(vt1.c0)))>>(((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2))))) OVER () FROM vt1 WHERE (x'7552');SELECT DISTINCT (((vt1.c1 IN ())) NOTNULL) FROM t1, t0 WHERE (CASE ((NULL) BETWEEN ('0.8638832310612055') AND (x'0812'))  WHEN x'' COLLATE BINARY THEN CASE WHEN x'' THEN NULL WHEN 1944352216 THEN '0.3360953343729861' WHEN '-123818792' THEN 3.22985135E8 END ELSE -587810091 COLLATE RTRIM END); -- 0ms;
SELECT NTH_VALUE(CAST(vt0.c0 AS BLOB) COLLATE NOCASE, '-1400376136') OVER () FROM vt0 WHERE ((NOT (NULL))) LIMIT 442746798 OFFSET 1777008607; -- 0ms;
SELECT NULL, ((((((((vt1.c0)OR(vt1.c2)))AND(vt1.c2)))OR(vt0.c0)))AND(t1.c0)) COLLATE NOCASE, ((0Xffffffffec468636)==((+ (vt1.c2)))) FROM t1, vt1, t0, vt0 WHERE (((((0.13461154919642748, x'', NULL))!=(('322985135', -5.87810091E8, 0.6215229714455058))) IN ())); -- 0ms;
SELECT DISTINCT ((((x'c0cc') NOT BETWEEN (0Xffffffffadc2279c) AND (t1.c1)))IS NOT(((vt1.c1) BETWEEN (t1.c1) AND (vt1.c2)))) FROM t0, vt1, vt0;SELECT DISTINCT (((vt1.c1, 0.4241201013719478, vt1.c0)) BETWEEN ((((vt1.c2)<=(vt1.c1)), (+ (vt0.c1)), ((((vt1.c2)AND(vt1.c2)))OR(x'')))) AND ((((vt1.c2)+(t1.c1)), ((vt1.c2)-(vt0.c0)), '6]pu'))) FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT LIKELY(((vt1.c1)<>(t0.c1))) FROM t0;SELECT DISTINCT ((CASE WHEN t0.c17 THEN x'7174b1c8' END) BETWEEN (((vt0.c0) ISNULL)) AND ((vt1.c1 IN (t0.c1)))) FROM t0, vt1;SELECT (- (json(t1.c0))) FROM t1, vt0, t0, vt1; -- 2ms;
SELECT DISTINCT ((CAST(t0.c0 AS BLOB))<=(((((vt1.c0)AND(vt1.c1)))OR(t0.c17)))), GROUP_CONCAT(((vt1.c1) NOT BETWEEN (t0.c17) AND (NULL))) OVER ( PARTITION BY (((t1.c0)) BETWEEN ((t0.c17)) AND ((((vt0.c1) BETWEEN (t0.c0) AND (t1.c0))))), NULL), TRIM(((((((((t0.c1)OR(vt1.c1)))AND(t0.c1)))OR(vt1.c2)))OR(t1.c0))) FROM t0, t1;SELECT DISTINCT GROUP_CONCAT(COUNT(TRIM(vt1.c2))) FROM vt1;SELECT ALL ((vt0.c0 COLLATE RTRIM) NOTNULL) FROM t1, t0;SELECT x'b290' FROM t0, t1 WHERE ((((((- ('-43581671')))OR(('' IN ()))))OR((x'ac83' IN (0x6402c5c6))))); -- 0ms;
SELECT (((TOTAL(vt1.c1), (((vt1.c0))<=((vt0.c0))), (x'' IN (NULL))))=((0.04662532655264773, COUNT(t0.c0), (~ (vt1.c2))))) FROM t0;SELECT TOTAL(((x'')%(t1.c1))) FROM t0, vt1;SELECT ALL CAST('-818831393' AS REAL) FROM vt0, t1 WHERE ((+ (CASE WHEN '-1164434647' THEN 'ea>cD,vls' END))); -- 0ms;
SELECT DISTINCT (((t1.c0) NOTNULL) IN ()) FROM vt1, t0, t1, vt0 ORDER BY x'dc35'  NULLS LAST, ((CAST(t0.c1 AS BLOB)) NOTNULL)  NULLS FIRST, ABS((+ (vt1.c1))); -- 0ms;
SELECT ALL ((NOT (t0.c0)) IN ()) FROM vt1, t1, t0 WHERE ((((0.40711403787610734)<>(x'')) IN ())); -- 0ms;
SELECT DISTINCT RTRIM((NOT (0.5537507950220071))), ((CAST(x'' AS TEXT))IS(vt0.c1 COLLATE RTRIM)), CAST(GROUP_CONCAT(t1.c0) AS REAL) FROM vt1, vt0 NOT INDEXED, t1, t0; -- 0ms;
SELECT ((((vt0.c0)GLOB(t0.c0)))GLOB(CAST(t0.c17 AS TEXT))) FROM vt0, t1 WHERE (((((0.8700263667174196) IS TRUE))%((('-818831393')>=(x''))))) ORDER BY TIME(CAST(vt1.c2 AS REAL), CASE WHEN t0.c17 THEN vt0.c0 END, (t0.c0 IN ()), CAST(t0.c0 AS NUMERIC), (0.93504063554052 IN (vt1.c1))) ASC;SELECT DISTINCT (COUNT(*) IN ()) FROM vt0, t1, vt1 WHERE (CAST(((NULL) IS FALSE) AS BLOB)); -- 0ms;
SELECT ((((t0.c0)LIKE(vt0.c0)))==(CASE vt0.c1  WHEN NULL THEN t0.c1 ELSE vt1.c2 END)) FROM vt1, t0, vt0, t1 ORDER BY load_extension(CASE WHEN 322985135 THEN 0.32442048761826425 END, (((vt0.c1))<=((vt1.c1))))  NULLS FIRST; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM t1, vt1, vt0 WHERE (((((((0.8649171601892159) IS TRUE))AND((((1784813866)) BETWEEN ((x'2c03')) AND ((-3.04210857E8))))))OR((((NULL))>=((NULL)))))); -- 0ms;
SELECT DISTINCT CAST((((vt1.c2))=(('-582599828'))) AS TEXT) FROM t1, vt1, t0 WHERE (CAST(CASE 0.09550119806568391  WHEN '~Ly湸z5D' THEN NULL WHEN -1.995067425E9 THEN NULL WHEN 1.031678331E9 THEN '378597175' ELSE x'cdf5' END AS BLOB)); -- 0ms;
SELECT DISTINCT ((0.692626618702212)=(vt1.c0)) COLLATE NOCASE FROM t0, vt1, t1, vt0; -- 0ms;
SELECT ALL ((((t0.c0)<(vt1.c2))) BETWEEN (((vt1.c2)<(t1.c2))) AND ((vt1.c0 IN (vt0.c0)))) FROM t1, t0;SELECT DISTINCT ((t1.c0 COLLATE RTRIM) NOT BETWEEN (LIKE(vt0.c0, t0.c1)) AND ((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((t1.c0))))) FROM vt1, t1, t0, vt0; -- 0ms;
SELECT DISTINCT ((('' IN ()))||(x'')) FROM t1, t0, vt0, vt1; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((COUNT(*))) AND (((~ (t0.c0))))) FROM vt1, vt0, t1;SELECT ALL 6.32376661E8 FROM vt1, t1, t0, vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(0x384700b8)))); -- 0ms;
SELECT ALL CASE WHEN vt1.c1 THEN t1.c2 ELSE t1.c0 END COLLATE NOCASE, LAST_VALUE(CASE CASE WHEN '' THEN vt0.c0 END  WHEN (((vt0.c1))=((x''))) THEN ((t0.c0)LIKE(vt0.c0)) END) OVER ( PARTITION BY (((((t1.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))%(((t1.c2)<<(vt1.c2)))), vt0.c1 GROUPS  CURRENT ROW EXCLUDE GROUP), vt0.c1 FROM vt0, t0 WHERE (CAST((('1796534790')*(0.8643708210777366)) AS NUMERIC));SELECT CASE WHEN 0.19972303588453166 THEN (NOT (vt1.c1)) ELSE ((t1.c2)/(vt1.c1)) END FROM vt0, t1;SELECT ALL (((vt1.c0 IN ()))IS('1031678331')) FROM t1, vt0 WHERE ((((NULL, NULL, 0.07002963965914066)) BETWEEN ((((x'')/(0.322286383679229)), x'51a85036', (((((((('PHWK䋈}쥳')AND('-587810091')))OR('-1511850995')))OR('}t')))AND(x'')))) AND ((((x'9102') NOTNULL), (('')+(0.6331685364688769)), CASE WHEN 'f햎(\rJWv%' THEN NULL WHEN x'' THEN NULL WHEN '-2063470363' THEN x'' END)))); -- 0ms;
SELECT ALL ((t0.c1) BETWEEN (t1.c0) AND (t1.c0)) COLLATE NOCASE FROM vt0, vt1, t0, t1 ORDER BY ((vt0.c0)*(t1.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (((SUM(vt0.c1)))==((SUBSTR(t0.c1, t1.c0)))), ((LIKELIHOOD(vt1.c0, 0.9263807076792416)) NOT NULL), ((((((((CASE WHEN t1.c2 THEN vt0.c1 WHEN t0.c17 THEN vt1.c1 WHEN vt1.c1 THEN x'' END)AND(COALESCE(vt0.c1, x'', t1.c1, t1.c1))))AND(((vt0.c0)<<(vt0.c1)))))AND(NULLIF(vt0.c0, t1.c1))))AND(x'0c11')) FROM t1 INDEXED BY i33, vt1 WHERE (19537607);SELECT DISTINCT (((((t1.c0, vt0.c1, vt1.c1))<((t1.c2, t1.c1, t0.c17))))GLOB(vt0.c0)) FROM vt1, t0, t1 WHERE (CHANGES());SELECT (((vt0.c1, vt1.c2, vt1.c2)) NOT BETWEEN (((NOT (t1.c1)), CAST(vt1.c0 AS BLOB), ((((vt1.c1)OR(vt0.c0)))AND(t0.c1)))) AND ((GROUP_CONCAT(t1.c0), TOTAL(t1.c0), ((((t1.c1)AND(vt1.c0)))AND(vt1.c2))))) FROM vt1, t0, t1, vt0 WHERE (NULLIF(((x'')%('')), CAST(2124704968 AS NUMERIC))); -- 0ms;
SELECT ABS(DISTINCT (((t0.c1, vt1.c2, '?䁋I''a-z')) BETWEEN ((vt1.c2, t1.c2, t1.c0)) AND ((vt0.c0, '-1554473677', vt0.c1)))) FROM vt0 WHERE (((0.7941590474509455) BETWEEN (((x'') NOT BETWEEN (NULL) AND (x''))) AND (0.3232444021287447)));SELECT DISTINCT FIRST_VALUE((((CAST(t0.c17 AS NUMERIC), ((((((((t0.c1)AND(vt1.c2)))AND(t0.c1)))AND(t0.c1)))AND(vt1.c0)), (+ (t0.c0))))<((t0.c1, (((t0.c0, vt1.c1, t0.c17)) NOT BETWEEN ((vt1.c0, vt1.c0, t0.c1)) AND ((t0.c0, vt0.c0, vt0.c0))), ((vt1.c2)*(vt1.c2)))))) OVER (), COUNT(((t1.c0)<=(t1.c1))) COLLATE NOCASE, t1.c1 FROM vt1, t0, vt0;SELECT ((((t0.c1)*(vt1.c1)))%((((t0.c1)) NOT BETWEEN ((t1.c2)) AND ((vt1.c2))))) FROM vt1, t1, t0, vt0; -- 0ms;
SELECT DISTINCT NULL, TOTAL((((0.6313491020874558, vt0.c0, t1.c2))<=((vt0.c1, vt1.c2, t0.c17)))) OVER (), ((UNLIKELY(t1.c1))+((((vt1.c1))=((t1.c2))))) FROM vt0, t0, vt1, t1 WHERE (JULIANDAY(((0.5331813726514316) NOT NULL), ((NULL)GLOB(x'9c09')), ((NULL)!=(NULL)))); -- 0ms;
SELECT ALL ((((((((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))OR(t0.c1)))||(((t1.c2)&(t1.c1)))) FROM vt0, t1, vt1, t0 WHERE (((((0.3382061638921321) IS FALSE)) ISNULL)); -- 2ms;
SELECT ALL ((LAST_INSERT_ROWID())-(((((vt1.c1)OR(t1.c1)))AND(t0.c0)))) FROM vt0, t1, vt1 WHERE (((CASE '1556630359'  WHEN x'795d' THEN NULL END)IS(CAST(x'' AS TEXT))));SELECT ((((((vt1.c2)AND(vt1.c1)))AND(t0.c1))) IS FALSE) FROM vt0, t1, t0, vt1; -- 0ms;
SELECT ALL AVG((((vt1.c1))>((vt1.c2)))) OVER ( GROUPS (569291463 IN ()) PRECEDING) FROM t0, vt1 NOT INDEXED, t1 WHERE (json_insert(((0.4857750866594709) NOTNULL), (('1089530664')>=(x'')), (+ (x'08fcd49c'))));SELECT DISTINCT (((vt1.c2 IN (t1.c2, vt0.c1))) NOTNULL) FROM vt0, t1, t0;SELECT ((t0.c0 COLLATE NOCASE)+(((0x7d58f799) ISNULL))) FROM vt0, t1, vt1 ORDER BY ('-206056673' IN ())  NULLS LAST;SELECT DISTINCT ((x'') NOTNULL) FROM vt1, t0, t1; -- 0ms;
SELECT ((((((((t0.c0)AND(CAST(vt1.c2 AS INTEGER))))OR(((vt0.c0)!=(t1.c2)))))AND(CAST(vt1.c2 AS TEXT))))OR(((-1014659810) NOT BETWEEN (t0.c0) AND (x'')))) FROM t0, t1, vt1, vt0; -- 0ms;
SELECT ALL (((t1.c2)) NOT BETWEEN ((t1.c2)) AND ((((t0.c17)>>(vt1.c2))))) FROM t0, t1, vt0 WHERE (((LIKE(NULL, ''))OR(LIKE('G_3', 0.9993768980016519, '箠'))));SELECT DISTINCT COUNT(*) OVER () FROM vt1, t0, vt0, t1 WHERE ((((NULL) BETWEEN ('-1164434647') AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((((vt1.c1))>=((''))))+(vt1.c2 COLLATE RTRIM)) FROM t1, t0 WHERE ((((NOT (0.47690781311455754)))>>('Bo'))) GROUP BY CASE t0.c0  WHEN (+ (vt0.c0)) THEN (~ (t1.c2)) END, CAST((- (vt1.c1)) AS REAL), ((((t0.c17)*(vt1.c2)))LIKE((t1.c2 IN (t1.c1, vt1.c0))));SELECT DISTINCT LIKELIHOOD(COUNT(*), 0.12432392722441055) FROM t1, t0, vt1, vt0 WHERE (((((0.16996730641380364) IS FALSE))|(NULL))); -- 0ms;
SELECT DISTINCT (('-273836608')GLOB((NOT (vt0.c0)))) FROM vt0, t0, t1 LEFT OUTER JOIN vt1 ON CAST(((t0.c17)|(t1.c1)) AS TEXT) WHERE ((((NULL)&(0.2182284384609039)) IN (((9.36183429E8)>(''))))); -- 0ms;
SELECT ((((((x'')AND(vt1.c1)))OR(t0.c1))) BETWEEN (t0.c1) AND (((t1.c0)<>(t1.c2)))) FROM vt1, vt0, t1 WHERE ((((- (NULL)))GLOB(CASE WHEN 0x649ceadb THEN 2026609856 ELSE 'eq' END)));SELECT DISTINCT CASE (~ (t0.c1))  WHEN '' THEN t1.c0 COLLATE BINARY WHEN ((t1.c1)-(t0.c17)) THEN COUNT(vt0.c0) WHEN ((t1.c0)<(t1.c1)) THEN (t0.c17 IN ()) ELSE (('-795578822')IS(vt0.c1)) END, x'8a36', NULL FROM t1, vt0 WHERE ((((0.05016988281166923) BETWEEN (x'') AND (0.5932420537526808)) IN ()));SELECT ((((t0.c1) ISNULL))>=(((vt0.c1) NOT BETWEEN (0x8d74855) AND (t1.c1)))), ((CASE vt1.c0  WHEN vt0.c1 THEN t1.c1 END) NOT BETWEEN (((vt0.c1)|(vt1.c1))) AND ((t0.c1 IN (t1.c1)))), vt1.c0 FROM t0, vt0 WHERE (((load_extension(0.31920992094674383, 0.4011503360670092)) NOT NULL)) LIMIT -1783009391 OFFSET 544018027;SELECT DISTINCT (x'' IN ()) FROM t1, vt1, t0 WHERE (NULL); -- 0ms;
SELECT 0.7480090340309543, LIKELIHOOD(DISTINCT (~ (vt0.c1)), 0.18984434139871087), CASE AVG(vt0.c0)  WHEN t0.c17 THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (t0.c1)) WHEN 0.671876288799009 THEN CAST(t0.c1 AS TEXT) WHEN ((((vt1.c1)AND('')))OR(t0.c0)) THEN ((vt1.c1)-(t1.c1)) END FROM t0, vt1, vt0;SELECT DISTINCT NTH_VALUE((~ (((vt0.c1)/(x'6230')))), ((((vt0.c0)*(t1.c0)))<<(((t1.c1)>(vt0.c0))))) OVER (), ((((((((vt1.c2)AND(((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR((NOT (t0.c17)))))OR(CASE WHEN t1.c2 THEN vt1.c2 END)))AND(t1.c0)), TRIM(vt1.c0) FROM t1, vt0 WHERE ((((('0.07002963965914066')!=(NULL))) NOT NULL));SELECT (~ (((t1.c1) IS TRUE))), (((t1.c1, vt1.c0, vt1.c0)) BETWEEN ((CAST(t0.c17 AS REAL), vt0.c0, ((vt0.c1)IS NOT(t1.c0)))) AND ((0.2971771847877065, ((((((((t0.c1)AND(t1.c2)))OR(vt1.c2)))AND(vt1.c0)))AND(t1.c0)), CAST(t0.c1 AS TEXT)))), CAST(((vt0.c1)==(t0.c17)) AS REAL) FROM t1, t0, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST('' AS REAL) COLLATE RTRIM, (('0.8618221366726474') BETWEEN (x'') AND (((t1.c0)IS(t1.c2)))), CAST(CASE WHEN t0.c1 THEN vt1.c0 ELSE t1.c0 END AS BLOB) FROM vt0 WHERE (((((('')) NOT BETWEEN ((0Xffffffffb78b55c6)) AND ((x'5461'))))<>(((-8.7142477E8)<>('1089390980'))))) LIMIT -1101496136 OFFSET 975354359;SELECT ALL ((CASE WHEN vt0.c0 THEN t0.c1 ELSE vt1.c1 END)IS NOT('1]_7*MH')), t1.c2, ABS(CAST(vt1.c1 AS NUMERIC)) FROM t1 ORDER BY t0.c0  NULLS LAST, ((((t1.c0)>(vt0.c0)))<>(t1.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((vt1.c0)>=(vt1.c1)))=(((vt1.c0) NOT BETWEEN (vt1.c2) AND (t1.c0)))) ASC;SELECT DISTINCT ((CASE WHEN t1.c2 THEN vt0.c0 END) BETWEEN (0.18851085747088725) AND (CAST(vt1.c2 AS BLOB))) FROM t1, vt0 LIMIT -1194838562 OFFSET 66017803;SELECT DISTINCT ((((((t0.c17, t1.c1, NULL))<(('rc', t0.c1, t0.c17))), (('ᗥLR!ZG%')<>(vt1.c1)), vt1.c2 COLLATE BINARY))<=((((((vt1.c1)OR(t0.c1)))OR(vt0.c0)), MIN(t1.c1), CAST(vt1.c1 AS BLOB)))) FROM t1, t0 WHERE (((CASE '-1742273698'  WHEN x'0f77' THEN '' END) NOT BETWEEN ('-1852901688' COLLATE NOCASE) AND (((('1627274879')) BETWEEN ((x'')) AND ((0Xffffffffedde1c57))))));SELECT DISTINCT (+ ((t0.c0 IN (t0.c17, t0.c1)))) FROM t1, vt1, t0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((t0.c17))) COLLATE BINARY FROM vt0 WHERE ('642660333') ORDER BY (((SQLITE_COMPILEOPTION_GET(vt0.c1), vt0.c0 COLLATE BINARY, CASE WHEN t0.c0 THEN t1.c2 END))<(((((vt0.c0, t1.c2, t0.c1)) NOT BETWEEN ((t1.c1, t1.c0, t0.c17)) AND ((t0.c17, t1.c1, vt0.c0))), INSTR(vt1.c0, t0.c1), vt0.c1))) ASC;SELECT ALL CAST((t0.c1 IN ()) AS INTEGER) FROM vt1, t1, t0; -- 0ms;
SELECT ALL ((t0.c17 COLLATE NOCASE)LIKE((~ (vt0.c1)))) FROM t0 ORDER BY ((((vt1.c0) NOT NULL))IS NOT(((t1.c1)==(vt0.c1)))) ASC;SELECT DISTINCT 2059968345 FROM vt1 WHERE (((((CAST('-291568362' AS NUMERIC))AND(COALESCE(DISTINCT x'', -1762028030, NULL, 0.9534909638795787))))OR(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((((t0.c0)&(0.15221774856596482))))==((((t1.c1)>>(vt1.c0))))) FROM t0;SELECT ALL (- ((~ (t1.c0)))) FROM vt0, vt1, t0 WHERE ((((((((((((('8?R[J7^')OR(x'')))AND(NULL)))OR(CASE WHEN 'S^<' THEN 0.7784068365227118 ELSE '' END)))AND(x'' COLLATE RTRIM)))AND((((x''))>((0.5112958008858471))))))AND(CAST(0.8326544526470809 AS INTEGER))));SELECT DISTINCT CAST(((t1.c0)=(t1.c2)) AS NUMERIC), (((vt1.c2 IN (t1.c0)))!=((+ (t0.c0)))), CASE WHEN '' COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN t1.c2 WHEN t0.c1 THEN t1.c1 WHEN '-2058123791' THEN vt1.c1 END END FROM vt0, t1, vt1, t0 GROUP BY COALESCE(t0.c0, ((t0.c1) NOTNULL)) HAVING CASE (t1.c0 IN ())  WHEN ((vt1.c1)%(vt1.c1)) THEN vt0.c0 ELSE DATETIME(204218811, t0.c17, NULL) END; -- 0ms;
SELECT ALL ((((vt1.c0 COLLATE RTRIM)AND(('' IN ()))))AND(t0.c17)) FROM t1, t0 INDEXED BY i33, vt1 LIMIT 1245541547 OFFSET -1556620356;SELECT DISTINCT 0.46542479600979625 FROM vt0, vt1, t1; -- 0ms;
SELECT ((NULL) NOT BETWEEN (((t1.c1)<<(vt0.c1))) AND (((t1.c2)%(t1.c2)))) FROM vt1, vt0, t0, t1; -- 0ms;
SELECT UPPER(((vt1.c2)LIKE(t1.c1))), (((((((((((('')AND(((t1.c2)%(t0.c1)))))AND(LIKELY(t0.c1))))OR((x'' IN (NULL)))))OR(t1.c1)))AND(((t0.c17) NOT NULL))))AND(0.7922896667680157)), MAX(x'dbfc') FROM t1, t0, vt0;SELECT ALL (((t0.c1, vt1.c1, x'fe53d9d1')) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((t1.c2)) AND ((vt1.c0))), TOTAL(vt0.c1), '')) AND (((((t1.c0))<((vt1.c2))), (- (vt1.c0)), ('' IN (t1.c2))))) FROM t0, vt0, vt1;SELECT COUNT(((vt0.c1)+(0.09635793808970994))) FROM t1, t0, vt0; -- 0ms;
SELECT ALL ((((((((vt1.c1)AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)))OR((+ (vt0.c0)))))AND((~ (vt0.c1)))))OR(CAST(vt1.c0 AS NUMERIC))) FROM vt1, t1, vt0, t0; -- 0ms;
SELECT ABS(((((((((t0.c17)AND(vt1.c2)))OR(t0.c1)))OR(t0.c1)))OR(''))), CUME_DIST() OVER (), ((CAST(vt0.c0 AS INTEGER))GLOB(CAST(vt0.c0 AS REAL))) FROM t0, vt1 WHERE (CAST((NOT (-2.1209678E7)) AS NUMERIC));SELECT DISTINCT SUM(CASE WHEN vt1.c1 THEN '\lO' END) FROM vt1 ORDER BY (- (t1.c1)) ASC  NULLS LAST;SELECT (TOTAL(t1.c0) IN (CAST(t1.c1 AS INTEGER))), COUNT(*), 0xffffffffd379b03f FROM vt1, vt0, t0 LIMIT 2127573206;SELECT (((vt1.c2))>=((t0.c17))) COLLATE NOCASE, (NOT (t1.c2)), (((t1.c0, ((vt1.c0) BETWEEN (vt1.c2) AND (t1.c1)), CAST(vt0.c1 AS INTEGER), ((t0.c17)IS(t0.c0)), vt1.c1 COLLATE RTRIM))>=((((vt0.c1) NOT BETWEEN (vt1.c1) AND (NULL)), ((vt1.c1) NOT BETWEEN (t1.c1) AND (vt1.c1)), (t0.c17 IN ()), (((vt1.c2, t0.c17, vt1.c1, t1.c0, 0.14760244914338982)) BETWEEN ((-1.490174237E9, vt0.c1, t1.c2, t1.c2, t0.c17)) AND ((t0.c17, t0.c0, vt1.c1, vt0.c1, vt0.c1))), vt1.c1 COLLATE NOCASE))) FROM vt1, t0 WHERE ((((0.6673543406867042)) BETWEEN ((CASE WHEN NULL THEN '1735003662' WHEN 'DWL1[' THEN 9.58989364E8 WHEN 0.2009407758128554 THEN '' ELSE x'6158' END)) AND (((('-1833465811')IS('-1897254277'))))));SELECT DISTINCT LIKELY(DISTINCT ((t1.c0)||(t1.c1))) FROM vt1;SELECT DISTINCT ((((t0.c0)>(t0.c1))) NOT BETWEEN (((vt1.c1)%(vt1.c0))) AND (COUNT(vt0.c0))), GROUP_CONCAT(CASE WHEN t0.c17 THEN t1.c0 ELSE vt1.c1 END), GROUP_CONCAT(x'a811') OVER (), COUNT(*), json_patch(SQLITE_COMPILEOPTION_GET(vt0.c0), t1.c0 COLLATE BINARY) FROM t1, vt1, t0 WHERE (CASE ((NULL)%(NULL))  WHEN (('0.026229847094212166')=(NULL)) THEN ((0Xffffffff8f4fafba)>=('dw)rDqK>n')) WHEN CAST(x'' AS REAL) THEN ((((NULL)OR(x'9cc8df3d')))AND('')) WHEN (NULL IN (x'')) THEN (('+eC8/') IS TRUE) END);SELECT ((vt0.c1 COLLATE BINARY) NOTNULL) FROM vt1, vt0 WHERE (CAST(((-1173856078)GLOB(0.9055878075556091)) AS BLOB)); -- 1ms;
SELECT ALL (((t1.c0)) NOT BETWEEN ((((t1.c0) IS TRUE))) AND ((CAST(vt1.c1 AS TEXT)))) FROM vt0, vt1, t0;SELECT DISTINCT CAST(' %' COLLATE BINARY AS REAL) FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((t0.c0)AND(TOTAL(vt1.c1))) FROM vt0, t0, t1, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c2) IS FALSE)) NOT NULL) FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(((0.18043194167630383) NOT NULL)));SELECT ALL vt1.c1, ((((((((((((((((vt1.c2)AND(vt0.c1)))OR(vt0.c1)))OR(vt1.c2)))OR(t1.c1)))OR(vt1.c1)))OR(t0.c0)))AND((((t0.c17)) NOT BETWEEN ((t0.c1)) AND ((t1.c2))))))OR(((0X37cd0685)>=(t0.c0)))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c17)) COLLATE NOCASE FROM vt0, vt1, t0;SELECT (((((vt1.c1))>=((vt1.c1))))IS(((t0.c1)<=(vt1.c1)))) FROM vt0, t1, vt1 WHERE ((((x'' IN ())) BETWEEN (CAST(x'' AS BLOB)) AND ((('KXQXJ') IS TRUE))));SELECT DISTINCT ((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((((vt1.c0)OR(t0.c1)))AND(vt0.c0))) AND (((t0.c17)|(t1.c0)))), vt0.c0, (+ (((t0.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)))), CAST(TRIM(DISTINCT t0.c0) AS INTEGER), ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 WHEN NULL THEN t1.c1 WHEN t0.c1 THEN vt1.c0 ELSE vt1.c1 END)<>(((vt1.c1) IS FALSE))) FROM vt1, vt0, t1, t0 WHERE ((((('t<sszcv嶲p')OR(NULL)))OR(NULL)) COLLATE NOCASE) ORDER BY (((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))<=(((((vt1.c1))>=((t0.c1)))))) DESC; -- 1ms;
SELECT (('H,/m')<<(((t1.c0)<<(t0.c17)))), ((vt1.c1 COLLATE NOCASE)IS(vt1.c0 COLLATE NOCASE)), ((CAST(vt1.c2 AS TEXT))>=(CASE t0.c1  WHEN 0.457094789119997 THEN vt1.c1 ELSE t0.c17 END)) FROM t0, vt1, vt0 WHERE (((((0.542856919145186 IN (NULL, NULL))))<=(((('133293547')<<('0.916233634559343'))))));SELECT ALL json_insert((vt0.c1 IN ()), '294974260', CASE t0.c17  WHEN vt1.c2 THEN vt1.c1 END), ((((vt1.c1) IS FALSE)) BETWEEN ((NOT (t0.c17))) AND (CAST(t1.c0 AS TEXT))), (CASE t1.c0  WHEN t1.c1 THEN t0.c17 END IN ()) FROM vt0, vt1, t0, t1; -- 0ms;
