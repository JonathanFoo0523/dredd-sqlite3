-- Time: 2024/06/07 17:54:40
-- Database: database16
-- Database version: 3.40.0
-- seed value: 1144487816
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 2ms;
CREATE TEMPORARY TABLE t0 (c0 INT NOT NULL ON CONFLICT REPLACE UNIQUE CHECK ( ((((((c0) NOT NULL))AND((+ (c0)))))OR(INSTR(c0, c0)))) ); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET c0=NULL WHERE t0.c0; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.7927367709164755), (NULL), ('-1495498473'), (NULL), ('-1495498473'); -- 1ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (((((NULL) BETWEEN (-1.495498473E9) AND (x'')))>=(((NULL) NOT BETWEEN (0.6165625059619746) AND (x'43cd'))))), (0.8140555073055671); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i6 ON t0((((c0)>>('-1495498473')) IN (((c0)/(0xffffffffa790a60d)))) COLLATE BINARY) WHERE json_valid((c0 IN ())); -- 0ms;
CREATE TEMP TABLE t1 (c0 REAL ); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES ('1975310166'); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES ('28GT'), (NULL), ('-1592158094'); -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (0.9063482824600246); -- 1ms;
COMMIT; -- 0ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (x''); -- 1ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT DENSE_RANK() OVER () FROM t0 LEFT OUTER JOIN t1 ON t0.c0 WHERE (((('-1483692531')) BETWEEN (((0.15215907339101087 IN ()))) AND (((('-1644714811')+(NULL)))))); -- 0ms;
CREATE INDEX i42 ON t1(x'' DESC) WHERE (((((c0))<=((c0)))) IS TRUE); -- 0ms;
REINDEX i42; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO t1 VALUES (NULL); -- 0ms;
ANALYZE i42; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES ('0.6165625059619746'), (0.6310651634957352), (0.8468766914337806); -- 0ms;
REINDEX; -- 0ms;
REINDEX RTRIM; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE t1; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.7927367709164755), (-1.592158094E9), (''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
DROP INDEX "i6"; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX i46 ON t0(CASE (~ (NULL))  WHEN (NOT (c0)) THEN ((c0)|(c0)) END ASC) WHERE (- (CAST(c0 AS REAL))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM main; -- 1ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL), (NULL), ('-506390263'); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL), ('-1592158094'), (NULL); -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (x'4558'); -- 0ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr2 AFTER INSERT ON t1 BEGIN INSERT OR IGNORE INTO t0 VALUES (x''), (0.8468766914337806), (NULL);END; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('J&㰁	Cg bx'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('/]gr)B!'), (''), (0.18240195125358816); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('266125551'), ('958610433'), (x''); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.8140555073055671), (NULL), (x''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL), (0.23798811165642297), (0.7821427414532717); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('0.0'); -- 0ms;
ANALYZE main; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((highlight(t0.c0, v0.c0, t0.c0, rt0.c1))/(((rt0.c2) IS TRUE))) FROM t1, rt0 WHERE (CASE CASE WHEN '' THEN '4~!hUv' END  WHEN (x'' IN ()) THEN ((((-267752308)AND(NULL)))OR('-267752308')) WHEN TIME(x'', x'075e', 0.6965483878106435) THEN LIKELY('-465726089') WHEN ((NULL)%(x'')) THEN ((((((((x'')AND('473219859')))AND(0.7572557194366722)))AND('s ')))OR(0.6310651634957352)) END);SELECT DISTINCT GROUP_CONCAT((+ (rt0.c2))) FROM v0, rt0, t1, t0 WHERE (CAST((((4.73219859E8, 0.8124231777456773, 0.1552274103443585))==(('', NULL, x'25b1'))) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((((((((NOT (rt0.c0)))AND(((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE WHEN t1.c0 THEN t0.c0 WHEN x'' THEN NULL WHEN rt0.c2 THEN rt0.c2 ELSE t1.c0 END)))OR((v0.c0 IN (v0.c0, rt0.c1, rt0.c0)))))OR(CAST(v0.c0 AS TEXT))) FROM v0, rt0, t1, t0; -- 1ms;
SELECT ALL NULL, CAST(rt0.c0 COLLATE RTRIM AS INTEGER), AVG((((rt0.c1, -1.592158094E9, x''))>((t1.c0, t1.c0, rt0.c1)))), (((rt0.c0 COLLATE BINARY))>=((((((rt0.c1)AND(rt0.c0)))AND(t1.c0))))), TYPEOF(DISTINCT ((t0.c0) BETWEEN (v0.c0) AND (v0.c0))) FROM v0, t0, t1, rt0 ORDER BY ((DATETIME(rt0.c2, rt0.c2, t0.c0)) BETWEEN (NULL COLLATE NOCASE) AND (CAST(rt0.c2 AS NUMERIC))); -- 0ms;
SELECT ALL ((((v0.c0)&(t0.c0)))<>(rt0.c1 COLLATE BINARY)) FROM t1;SELECT DISTINCT v0.c0 FROM v0, t1; -- 0ms;
SELECT ALL ((((rt0.c1)GLOB(t0.c0)))&('')), ((((CASE WHEN t1.c0 THEN rt0.c2 END)AND(t0.c0 COLLATE BINARY)))AND(CHANGES())), NULL FROM t1;SELECT CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END AS BLOB), ((((((((NULL)OR(t0.c0 COLLATE BINARY)))AND(0.7281386817640606)))OR((- (x'3dae')))))AND(((rt0.c2)+(t0.c0)))), (((rt0.c0 IN (v0.c0, rt0.c0))) IS TRUE) FROM rt0 WHERE ('YL');SELECT DISTINCT NULLIF(DISTINCT (((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))), (((v0.c0))>=((v0.c0)))) FROM rt0;SELECT DISTINCT (NOT (((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))), ((GROUP_CONCAT(rt0.c0)) BETWEEN ('') AND (0.5964396059516021)), FIRST_VALUE(((rt0.c2 COLLATE RTRIM)LIKE(t1.c0 COLLATE NOCASE))) OVER () FROM rt0, t1, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN (('-267752308')) AND ((((rt0.c0) NOT NULL)))) FROM v0, rt0, t1, t0 GROUP BY ((LTRIM(v0.c0, rt0.c0))AND(NULLIF(DISTINCT t0.c0, t0.c0))); -- 0ms;
SELECT SUM(t1.c0), t1.c0, x'8648' FROM t0 GROUP BY ((v0.c0 COLLATE BINARY) ISNULL), ((-267752308 COLLATE RTRIM)-(CAST(rt0.c2 AS INTEGER))), ((rt0.c2) NOT NULL) HAVING AVG(((rt0.c1) NOTNULL));SELECT rt0.c1 FROM rt0, v0, t0 WHERE (CAST(ABS('611845674') AS NUMERIC)); -- 1ms;
SELECT ALL CAST(x'' AS NUMERIC) FROM t0, v0, t1 WHERE (TRIM((((-1.7976931348623157E308))<=((''))))); -- 0ms;
SELECT (MIN(rt0.c0) IN ()), UNLIKELY(AVG(rt0.c0)), TRIM(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 WHEN t0.c0 THEN rt0.c0 ELSE NULL END, ((((((((0.05741866023240905)OR(rt0.c2)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))), (+ ('')), (((((v0.c0)/(t1.c0)), t1.c0, ((rt0.c0) NOT NULL)))<((MIN(t0.c0), GROUP_CONCAT(t0.c0), ((t1.c0)LIKE(v0.c0))))) FROM t0, v0, rt0 ORDER BY json_insert(((rt0.c2)&(t0.c0)), ((v0.c0) IS FALSE), (((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0))>=((rt0.c2, rt0.c1, v0.c0, t0.c0, rt0.c1))));SELECT LEAD(((t0.c0)IS(rt0.c0)) COLLATE BINARY COLLATE BINARY, (((t0.c0 COLLATE RTRIM, (((t1.c0))==((t1.c0))), CASE rt0.c1  WHEN x'' THEN v0.c0 WHEN t1.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END))<((((((v0.c0)AND(rt0.c2)))AND(rt0.c2)), CAST(rt0.c2 AS INTEGER), (t1.c0 IN ())))), CAST(t0.c0 AS NUMERIC) COLLATE BINARY) OVER (), SQLITE_COMPILEOPTION_GET(CASE t1.c0  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 WHEN t0.c0 THEN t1.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN t0.c0 END), CAST((0Xfffffffff0f73390 IN ()) AS TEXT) FROM v0, rt0, t0, t1 WHERE ((CASE WHEN '1682080857' THEN 0.062078689498969 WHEN x'821ac47c' THEN x'' WHEN -2.52234864E8 THEN NULL ELSE x'' END IN ((('KaV)') ISNULL), 'hm' COLLATE RTRIM))) GROUP BY load_extension(CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN v0.c0 THEN rt0.c0 END); -- 0ms;
SELECT rt0.c1, DENSE_RANK() OVER ( ORDER BY (((rt0.c2) NOT NULL) IN ((t0.c0 IN (t0.c0)))) ASC), ((((((((v0.c0)OR(NULL)))AND(rt0.c0)))AND(x'')))OR(rt0.c0 COLLATE NOCASE)), TRIM(((rt0.c2)<<(rt0.c0))), ((v0.c0)<=(rt0.c0)) COLLATE BINARY FROM t0, t1, v0;SELECT DISTINCT (((~ (t1.c0))) NOTNULL) FROM v0, t1 WHERE ((LTRIM(0.8124231777456773) IN ())); -- 0ms;
SELECT ALL '-1294505933' FROM v0, rt0, t0; -- 0ms;
SELECT DISTINCT ((((NOT (rt0.c1))))<=((v0.c0))) FROM t1, rt0 WHERE (LIKE((0.6965483878106435 IN ()), NULL COLLATE NOCASE));SELECT ALL (+ (rt0.c1 COLLATE BINARY)) FROM v0 WHERE (TYPEOF(DISTINCT ((NULL) ISNULL))) ORDER BY CAST((rt0.c1 IN (rt0.c1)) AS NUMERIC) ASC  NULLS LAST;SELECT DISTINCT CAST(((rt0.c2)+(v0.c0)) AS REAL) FROM v0, t1, rt0, t0; -- 1ms;
SELECT ((CAST(t1.c0 AS NUMERIC)) IS FALSE), ((((((((x'' COLLATE RTRIM)AND(v0.c0 COLLATE BINARY)))AND(((t0.c0)GLOB(rt0.c1)))))AND(((v0.c0)AND(t1.c0)))))OR(rt0.c2 COLLATE RTRIM)), ROW_NUMBER() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t0, t1, v0;SELECT DISTINCT MAX(((rt0.c2)>=(v0.c0))), ((((((t1.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))OR('()')))AND(COUNT(v0.c0))), COALESCE(DISTINCT t0.c0, v0.c0) FROM t1, rt0;SELECT DISTINCT LIKELY(rt0.c1) COLLATE RTRIM FROM rt0, t1; -- 0ms;
SELECT DISTINCT MAX(CAST(0.11503003187498706 AS INTEGER)) FROM rt0, t1 WHERE ('-'); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, t0, v0; -- 0ms;
SELECT ALL MAX(t0.c0), CAST('!' AS NUMERIC), ((((((rt0.c1)>=(rt0.c2)))AND(((((((((((((rt0.c2)OR(rt0.c2)))OR(t1.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(t1.c0)))OR(t0.c0)))))OR(v0.c0)) FROM t0, t1, rt0, v0 WHERE (-910290121); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) BETWEEN (CAST(NULL AS TEXT)) AND (((((t0.c0)AND(NULL)))AND(rt0.c1)))), UNLIKELY(DISTINCT (- ('0.9063482824600246'))), ((((rt0.c0)<=(t0.c0))) IS FALSE) FROM rt0, t0 WHERE (CASE WHEN (((NULL))>=((x''))) THEN MIN('hJENQQOeN', 0x112887bb) WHEN (x'' IN ()) THEN ((('502101854', 0Xffffffffe43d9577, 'd''Y')) NOT BETWEEN ((861547535, 0.2691030352865549, NULL)) AND ((NULL, '', 0Xffffffff9df7a4c5))) WHEN (((x'31b384d9')) NOT BETWEEN ((-1597073592)) AND (('eLb'))) THEN (((0.20363017445414078)) NOT BETWEEN (('-1597073592')) AND ((0.1791282057292739))) ELSE (+ (0.9659978633048131)) END); -- 2ms;
SELECT DISTINCT NTH_VALUE(((NOT (x'')) IN ()), ((((rt0.c0)<>(v0.c0))) BETWEEN (LIKE(rt0.c1, rt0.c2)) AND (LIKELIHOOD(rt0.c0, 0.7014355271187347)))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND t0.c0 FOLLOWING), GROUP_CONCAT((NOT (rt0.c2))), CAST(6.11845674E8 AS REAL) FROM t0, rt0, v0;SELECT DISTINCT '' FROM t0, t1, v0, rt0 ORDER BY (- (((((((((t0.c0)AND(rt0.c2)))OR(t1.c0)))AND(t1.c0)))AND('')))), ((rt0.c1) NOT NULL) COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN t1.c0 WHEN rt0.c2 THEN x'd62f' ELSE t1.c0 END) COLLATE RTRIM, (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>((((((((((v0.c0)OR('D.Mf/q	')))OR(t0.c0)))AND(rt0.c0)))AND(t0.c0))))), AVG(CASE WHEN t1.c0 THEN t0.c0 END) OVER (), ((((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(t1.c0)))OR(t0.c0)))OR((((''))==((rt0.c0))))))AND((rt0.c0 IN (v0.c0)))), LEAD(CAST(rt0.c1 COLLATE RTRIM AS BLOB), ((ABS(rt0.c1)) NOTNULL), rt0.c0) OVER () FROM v0, t0, rt0 WHERE ((((0.6491988508006995 IN ())) NOT NULL)) LIMIT -776574071 OFFSET 861547535;SELECT DISTINCT ((CASE v0.c0  WHEN t0.c0 THEN x'' WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)<>(LOWER(DISTINCT t1.c0))) FROM t0;SELECT ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE) FROM v0, t0 WHERE (NULL);SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((t1.c0)) AND ((TOTAL(rt0.c0)))) FROM t1, t0, v0 INDEXED BY i46, rt0 WHERE ((((0xffffffffa0ce9748)<=(2.87868859E8)) IN ()));SELECT DISTINCT IFNULL(DISTINCT ((rt0.c1) BETWEEN (t1.c0) AND ('	')), v0.c0 COLLATE NOCASE) FROM t0 NOT INDEXED, rt0;SELECT ((('0.11503003187498706'))=((rt0.c0))) COLLATE RTRIM FROM v0 WHERE (((((((((IFNULL(NULL, x''))AND((('-1644714811') NOTNULL))))AND(CASE WHEN x'1c23' THEN 0.3318832252879549 END)))AND(((x'c2a9') BETWEEN (0.48346799144274244) AND ('-910290121')))))OR((('')|(0.11591548068326218))))) LIMIT -1802470850;SELECT (((((rt0.c1 IN ()))AND(((0.677034860321753) NOT NULL))))OR(v0.c0)), ((((((((CAST(t1.c0 AS BLOB))OR(((NULL)LIKE(v0.c0)))))AND(CASE WHEN rt0.c2 THEN v0.c0 ELSE 'oQ' END)))OR(((((v0.c0)AND(NULL)))AND(t0.c0)))))OR(CAST(rt0.c0 AS BLOB))), COUNT(*) OVER (), ((rt0.c0)<>(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), v0.c0 FROM t1 GROUP BY (((x''))=(((NOT (v0.c0))))) HAVING (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END));SELECT DISTINCT GROUP_CONCAT(rt0.c1) OVER (), ((SUM(rt0.c1))|('歞Ia㰁3[*%')), ((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))|(rt0.c1)) FROM rt0;SELECT '}葙' FROM rt0, t1, v0 WHERE (((NULL COLLATE RTRIM) BETWEEN (CAST(0xffffffffd5866b5e AS REAL)) AND (CASE WHEN '-1495498473' THEN 356030539 END))); -- 0ms;
SELECT (((t0.c0)) BETWEEN (((((t1.c0, rt0.c0, v0.c0))>=((rt0.c2, rt0.c0, t0.c0))))) AND (((+ (t0.c0))))) FROM rt0, t1, v0, t0 INDEXED BY i42;SELECT '-' FROM t1, v0, rt0 WHERE ('brL#' COLLATE BINARY); -- 0ms;
SELECT CASE ((t1.c0) IS TRUE)  WHEN ((NULL)IS NOT(rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (0.11368965481489735) AND (t0.c0)) END FROM v0 WHERE (((CASE WHEN NULL THEN x'db7c' END)<>(((((x'')AND(0.7120898519791966)))AND('O/'))))) GROUP BY v0.c0 ORDER BY ((CAST(rt0.c1 AS BLOB))==('262569902'))  NULLS FIRST, LOWER(v0.c0) COLLATE BINARY;SELECT (((+ (t0.c0)))||(NULL)), LAST_VALUE((((rt0.c1 COLLATE BINARY, ((rt0.c0) ISNULL), t1.c0))>=((NULL, ((v0.c0)%(t1.c0)), (NOT (rt0.c1)))))) OVER (), CASE WHEN ((rt0.c0) ISNULL) THEN rt0.c0 COLLATE BINARY WHEN (((t0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, '')) AND ((rt0.c0, rt0.c2, v0.c0))) THEN ((((rt0.c2)OR(v0.c0)))AND(v0.c0)) WHEN ((0.45348638060656377) IS FALSE) THEN (((NULL))<=((rt0.c1))) END FROM t1, t0, rt0, v0 WHERE ((((('SD.M	U鋮', x'', '')) NOT BETWEEN (('oQ', NULL, '')) AND (('669092658', '', x''))) IN ((((NULL)) NOT BETWEEN ((0.10523673219951568)) AND ((0.24305073752109618)))))) LIMIT -1802470850 OFFSET 363953059; -- 0ms;
SELECT DISTINCT TOTAL(SQLITE_SOURCE_ID()) FILTER(WHERE NULL) OVER () FROM t0 INNER JOIN v0 ON CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) AS REAL) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0) IS FALSE))OR(rt0.c2)))AND((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((v0.c0)))));SELECT DISTINCT (- (t1.c0 COLLATE BINARY)) FROM v0, t1, rt0, t0 WHERE (((((('-1592158094')AND(0.31170045332272867)))OR(NULL)) IN ())); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((t0.c0) IS FALSE)), (((~ (rt0.c1))) NOT BETWEEN (((rt0.c2)%(t0.c0))) AND (t1.c0)), (((((t0.c0))>=((rt0.c0))))>=(((((v0.c0)AND(t1.c0)))OR(rt0.c2)))) FROM v0, rt0, t1, t0 NOT INDEXED WHERE (((((((x'df5e')IS(x'')))AND(((x'')||('ELB')))))AND(((((0.11368965481489735)OR('&Y')))AND(x''))))); -- 0ms;
SELECT (rt0.c1 COLLATE NOCASE IN ()) FROM t0, t1, v0; -- 0ms;
SELECT DISTINCT CASE COUNT(5.02101854E8)  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (t1.c0)) THEN rt0.c1 COLLATE BINARY ELSE ((((rt0.c1)OR(t1.c0)))AND(v0.c0)) END FROM t1, v0;SELECT DISTINCT CASE WHEN COUNT(NULL) THEN ((((((((t0.c0)AND(t0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)) WHEN rt0.c2 COLLATE BINARY THEN t1.c0 COLLATE RTRIM WHEN (t1.c0 IN ()) THEN rt0.c0 COLLATE NOCASE END, GROUP_CONCAT((((rt0.c2))<((t0.c0)))), ((CAST(NULL AS REAL))IS NOT(v0.c0 COLLATE NOCASE)) FROM t0;SELECT CAST(CAST(v0.c0 AS BLOB) AS TEXT), (((t0.c0)) NOT BETWEEN (((rt0.c2 IN (rt0.c1, x'')))) AND (((((t1.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))), (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)), rt0.c2, ((t0.c0) IS FALSE))) FROM t0, t1, rt0;SELECT DISTINCT rt0.c1 COLLATE BINARY, (- (CAST(t0.c0 AS TEXT))), CAST(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END AS REAL) FROM t0, rt0 WHERE (((CAST('1완2殉y꓅#' AS BLOB)) NOTNULL)) GROUP BY ((((((((((((((rt0.c2)AND(v0.c0)))AND(rt0.c1)))AND(t1.c0)))AND(rt0.c1)))AND(rt0.c2)))AND('-506390263'))) NOT NULL), ((((rt0.c2) NOTNULL))||(((rt0.c1) IS TRUE))), CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (v0.c0))  WHEN CAST(rt0.c1 AS BLOB) THEN SQLITE_COMPILEOPTION_GET(rt0.c2) WHEN ((t0.c0)IS(t0.c0)) THEN (+ (rt0.c1)) WHEN x'5248' THEN ((rt0.c1) ISNULL) ELSE ((t0.c0)LIKE(t1.c0)) END;SELECT DISTINCT CASE WHEN UNLIKELY(t1.c0) THEN ((t1.c0)>(rt0.c0)) ELSE ((t1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END FROM v0, rt0, t1 WHERE ((((x'')) BETWEEN (('?1')) AND ((((x'')%(x'')))))); -- 0ms;
SELECT DISTINCT v0.c0 FROM t1 WHERE (CAST(x'' AS NUMERIC));SELECT DISTINCT ((((rt0.c1)*(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) AND ((rt0.c0 IN (rt0.c2, rt0.c2)))) FROM t1 WHERE (((0.6674404544562109 COLLATE RTRIM)LIKE(((1171076237) BETWEEN (x'b5c6') AND (-1483692531))))) GROUP BY ((((t0.c0 IN ())))>=(((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, t0.c0, rt0.c0)) AND ((v0.c0, rt0.c2, NULL)))))), ((((rt0.c1) ISNULL)) NOTNULL), (((CAST(rt0.c1 AS NUMERIC)))<((CAST(rt0.c2 AS INTEGER))));SELECT DISTINCT AVG(CASE WHEN -1.644714811E9 THEN rt0.c1 END) FROM t1 WHERE (CAST(((((-1936266988)OR(0xffffffffeb418192)))OR('*>')) AS TEXT));SELECT (((rt0.c1) NOT BETWEEN (t0.c0) AND (v0.c0)) IN ()) FROM t1, rt0, v0, t0; -- 0ms;
SELECT DISTINCT (((NULL)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0) ISNULL)))) FROM rt0, t0;SELECT ALL ((((CAST(v0.c0 AS NUMERIC))AND(CHAR(t1.c0))))AND(((rt0.c0) ISNULL))), (((rt0.c0)%(rt0.c1)) IN ()), (~ (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 END)), TOTAL(CAST(rt0.c2 AS TEXT)) OVER (), COUNT(CASE WHEN rt0.c1 THEN rt0.c1 END) FROM t1 WHERE (TYPEOF(DISTINCT ((((((((NULL)OR(0.6513721685876008)))OR(0.09704497052733951)))OR('323138703')))AND(x''))));SELECT ALL (((rt0.c1, rt0.c1, t1.c0)) NOT BETWEEN (((+ (rt0.c0)), (t1.c0 IN ()), load_extension(rt0.c1, t1.c0))) AND ((((t1.c0) BETWEEN (0.6020831647483725) AND (rt0.c0)), CAST(t0.c0 AS NUMERIC), CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END))) FROM t0 LIMIT 1375334166;SELECT ALL GROUP_CONCAT((rt0.c1 IN ())) FROM t1, rt0 WHERE ((((0.7927367709164755))=(('.[2'))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NTILE(TRIM(((v0.c0)<(rt0.c2)))) OVER ( ORDER BY (((rt0.c2 COLLATE BINARY, (rt0.c2 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0))))>=((((rt0.c2)LIKE(t0.c0)), UPPER(rt0.c1), ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0))))) DESC  NULLS FIRST) FROM t0, v0, rt0 LIMIT 262569902;SELECT ((((rt0.c0)AND(t0.c0)))AND(rt0.c0)) COLLATE RTRIM FROM v0;SELECT ALL TOTAL(((t1.c0)|(t1.c0)) COLLATE BINARY) OVER () FROM rt0, v0, t1, t0 WHERE (x'dc4d') GROUP BY TRIM(0.1552274103443585), ((((((t1.c0) NOTNULL))OR((- (v0.c0)))))AND((rt0.c1 IN ()))), (((rt0.c1)!=(rt0.c2)) IN ());SELECT DISTINCT (((t0.c0)==(rt0.c0)) IN ()) FROM v0, t1, t0; -- 0ms;
SELECT CAST(CASE rt0.c1  WHEN t0.c0 THEN '' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END AS TEXT), ((((v0.c0)-(rt0.c1)))|(((t0.c0)AND(rt0.c1)))), ((~ (v0.c0)) IN ()), ((CAST(rt0.c2 AS REAL))OR(UPPER(DISTINCT v0.c0))), AVG(rt0.c2) OVER () FROM t0, t1, rt0, v0 WHERE (CAST(((((NULL)AND(0.25232878181001106)))OR(x'')) AS REAL)) LIMIT -1495498473 OFFSET 2145931552; -- 0ms;
SELECT UNLIKELY(((v0.c0)-(t1.c0))) FROM v0, rt0, t1, t0; -- 0ms;
SELECT ALL (((t1.c0 IN ()))&(CAST(t1.c0 AS INTEGER))) FROM t1; -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN (t0.c0)) AS NUMERIC), ((0.11503003187498706) BETWEEN (rt0.c1 COLLATE RTRIM) AND ((- (t1.c0)))), (((((5.02101854E8)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))<<(json_extract(t0.c0, t1.c0))) FROM t1, t0 NOT INDEXED, v0 WHERE ('沌l[2Nq흖E{' COLLATE NOCASE);SELECT (((((rt0.c2))<>((NULL)))) NOT NULL) FROM t0, t1, v0 WHERE ((((((NULL, 0.7202586761216725, '356030539', NULL, 0.17003269460582338)) BETWEEN ((NULL, 0.3946615293690183, NULL, NULL, x'')) AND ((0xffffffffedea2ca1, NULL, 0X15b17ba3, 0.7277315681998116, NULL))))%((- (x''))))) ORDER BY rt0.c0;SELECT MAX(((0X2874ddc0)IS(v0.c0))) FROM rt0 WHERE (x'');SELECT ALL ((((x'')AND(((rt0.c2)*(rt0.c1)))))AND(SQLITE_SOURCE_ID())) FROM v0, t0, t1 LIMIT 1083130503 OFFSET -465726089;SELECT CAST(((v0.c0) BETWEEN (rt0.c0) AND (t0.c0)) AS BLOB), ((((CASE WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END)AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0x61519e06)))), TOTAL(((((0xffffffffd5866b5e)OR(rt0.c0)))OR(rt0.c1))) OVER () FROM t0;SELECT DISTINCT HEX(rt0.c2), (((NULL, 0X201b9634, rt0.c2, v0.c0, rt0.c0)) NOT BETWEEN ((((v0.c0)>(rt0.c0)), ((t0.c0)IS(v0.c0)), ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)), (((rt0.c0, 1305222916, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c0, rt0.c1, t1.c0))), ((rt0.c0)+(rt0.c2)))) AND ((CASE ''  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN rt0.c1 WHEN '678747584' THEN v0.c0 WHEN 0.7240529796882982 THEN t0.c0 END, DATE(rt0.c2, 0.07969961402729742, rt0.c0), ((('', '266125551', t0.c0)) BETWEEN ((t1.c0, rt0.c2, t0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))), ((('0.3946615293690183', NULL, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, 0.3946615293690183)) AND ((v0.c0, rt0.c0, rt0.c1))), (t1.c0 IN ())))), (((t1.c0)) NOT BETWEEN ((((v0.c0)-(rt0.c1)))) AND ((((v0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0))))) FROM v0, t0, t1 WHERE (CAST((((',', x'', 'rr{', '-1671706158', NULL))<(('', 0.2097892704697525, 0.5048405105837739, -9223372036854775808, 0.9432353345286434))) AS BLOB));SELECT ALL ((((rt0.c2) ISNULL))!=(x'')), SUM(CAST(rt0.c2 AS BLOB) COLLATE RTRIM) OVER (), ((CAST(rt0.c2 AS INTEGER)) ISNULL) FROM t0 WHERE ((((0.6192660583293421) BETWEEN (0.471311720123458) AND (473219859)) IN ()));SELECT DISTINCT TOTAL(x'c6b8e211') OVER ( ORDER BY CAST(rt0.c1 AS TEXT) DESC, TRIM(((((rt0.c1)AND(v0.c0)))AND(t1.c0))) DESC) FROM t0, v0, rt0, t1; -- 0ms;
SELECT ALL ((HEX(t1.c0))>=(AVG(t0.c0))) FROM rt0;SELECT ALL STRFTIME(rt0.c1 COLLATE RTRIM, rt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN t0.c0 END) FROM rt0 WHERE (((((x'' COLLATE RTRIM)OR((0.7771765156560304 IN ()))))OR(CAST(0.1263257547005483 AS TEXT))));SELECT DISTINCT (- ((('-506390263')*(v0.c0)))) FROM t0, t1, rt0;SELECT ALL (t1.c0 IN ((- (v0.c0)))) FROM t1, rt0, t0, v0 WHERE ('1521926478' COLLATE RTRIM); -- 0ms;
SELECT ALL TRIM(v0.c0 COLLATE NOCASE, ((t0.c0)AND(rt0.c2))), (((((rt0.c1)OR(rt0.c0)))OR(v0.c0)) IN (((rt0.c0) IS TRUE), CAST(t0.c0 AS INTEGER))), ROW_NUMBER() OVER () FROM rt0, v0, t1, t0 WHERE (CAST((~ (NULL)) AS INTEGER)); -- 0ms;
SELECT (((- (rt0.c1)))IS NOT(((((v0.c0)OR(rt0.c0)))OR(t0.c0)))) FROM v0, rt0, t1, t0 WHERE ((NOT (LIKE('-1644714811', 2.87868859E8, 'L')))); -- 1ms;
SELECT ((((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(((('262569902'))<=((rt0.c0))))))AND(((t1.c0)+(t1.c0)))) FROM rt0, v0 WHERE (CAST(LIKE(0.07969961402729742, 0.0896109077677898, 'N') AS BLOB)) ORDER BY (~ ((~ (t0.c0)))) ASC, ((((CAST(rt0.c2 AS TEXT))AND(v0.c0 COLLATE NOCASE)))AND(t1.c0))  NULLS LAST;SELECT 0.2097892704697525, rt0.c1, NTILE((((((((((- (0.36733539398253756)))AND(((t1.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(CAST(t1.c0 AS NUMERIC))))OR(((t1.c0)>=('-1382247114'))))) OVER () FROM t0, v0, t1, rt0 WHERE (((CAST('-776574071' AS TEXT))<=(CASE '317139082'  WHEN 0.16559252584896644 THEN x'4cef' END))); -- 0ms;
SELECT DISTINCT ((v0.c0) IS TRUE) FROM t0 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)))AND(((((((((t0.c0)OR(t0.c0)))AND(rt0.c2)))OR(v0.c0)))AND(t1.c0)))))OR(rt0.c0)))AND(((t0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN rt0.c0 END)))OR(t1.c0 COLLATE NOCASE)))AND(rt0.c2 COLLATE NOCASE)) CROSS JOIN v0 ON ((((LIKELY(rt0.c0))OR(LTRIM(t0.c0))))OR(v0.c0)) INNER JOIN t1 ON (('/Q') IS FALSE);SELECT ALL INSTR(((((((((t0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(t0.c0)), ((v0.c0)/(rt0.c1))) FROM t1;SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (rt0.c2) AND ((rt0.c1 IN ()))) FROM v0, rt0 WHERE (COALESCE(861547535 COLLATE NOCASE, ((('')) BETWEEN ((0X78c0e549)) AND (('-1671706158'))))); -- 0ms;
SELECT UNLIKELY(IFNULL(DISTINCT t1.c0, rt0.c1)) FROM t0, t1, rt0 WHERE (((((((x'')OR(0.9957457409666584)))AND(x''))) IS FALSE)) ORDER BY (((HEX(DISTINCT rt0.c0)))>=(((~ (rt0.c1)))))  NULLS FIRST LIMIT -202629379 OFFSET -1259719936; -- 0ms;
SELECT ALL ((t1.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) COLLATE BINARY, ((rt0.c0 COLLATE NOCASE)IS(rt0.c1)), (((rt0.c0)) NOT BETWEEN ((((v0.c0)IS NOT(t1.c0)))) AND ((CAST(rt0.c0 AS INTEGER)))) FROM v0;SELECT '-2059824402' FROM t0, rt0, v0, t1; -- 0ms;
SELECT IFNULL(DISTINCT (rt0.c1 IN (rt0.c1, t0.c0)), CAST(t0.c0 AS TEXT)) FROM v0, rt0, t1, t0 WHERE (CAST((((x'')) BETWEEN ((NULL)) AND ((x'3fb2'))) AS TEXT)); -- 0ms;
SELECT DISTINCT (+ (((rt0.c2)||(rt0.c2)))) FROM v0, t0, t1 WHERE (((((((NULL)) NOT BETWEEN ((x'')) AND ((0.49570989474914307)))))<=(((NULL IN ('611845674', NULL))))));SELECT (((NOT (t0.c0)))!=(CASE WHEN t1.c0 THEN v0.c0 END)) FROM t1, t0 WHERE (((0.2296053123014038 COLLATE NOCASE)&(NULL)));SELECT ALL ('-2060797193' IN ()) FROM t0, t1, v0; -- 0ms;
SELECT DISTINCT LAG((((((((t0.c0)AND(t0.c0)))AND(t0.c0))))<=((0.13346309748542695 COLLATE BINARY))), ABS(t0.c0 COLLATE NOCASE), (- (((t0.c0)=(t0.c0))))) OVER () FROM t0 WHERE (((('' IN ()))>=(CAST(0.7297391458129686 AS TEXT)))) LIMIT -1802470850; -- 0ms;
SELECT DISTINCT ((((((((t1.c0)OR(t0.c0)))OR(t0.c0)))AND(t1.c0)))AND(v0.c0)) COLLATE NOCASE FROM rt0 RIGHT OUTER JOIN v0 ON 0.7277315681998116 INNER JOIN t0 ON (((((rt0.c1)GLOB(rt0.c2))))<>((rt0.c2))) WHERE ((((x'de43')) NOT BETWEEN (((((((((((((('194631108')AND(0X1342b48f)))AND('xv')))OR(NULL)))OR(NULL)))OR(0.6477507570977566)))OR('(oh1)Cn0煘')))) AND ((((x'')-(NULL))))));SELECT ALL (((((rt0.c0 IN ()))OR(CAST(rt0.c0 AS NUMERIC))))AND(((((t1.c0)AND(rt0.c1)))OR(t0.c0)))) FROM t1 GROUP BY ((x'' COLLATE BINARY) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))) LIMIT -902484820 OFFSET 8494046;SELECT CASE CASE WHEN rt0.c0 THEN v0.c0 END  WHEN (+ (t1.c0)) THEN CAST(t0.c0 AS INTEGER) WHEN ABS(DISTINCT rt0.c2) THEN ((t0.c0)>>(rt0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN rt0.c0 COLLATE NOCASE END, (((- (rt0.c2))) NOT NULL), (((x'')<<(rt0.c0)) IN ()) FROM v0, rt0 WHERE ((((('C臚')>(0.7821427414532717))) IS TRUE));SELECT DISTINCT NULL FROM t0, rt0, v0, t1 WHERE (((((((NULL) BETWEEN ('-1592158094') AND (0.3946615293690183)))OR(((((((((x'27b3')OR(x'')))AND(-1.597073592E9)))AND('-712610978')))AND(122300444)))))OR(((x'') NOT NULL)))); -- 1ms;
SELECT DISTINCT ((rt0.c0 IN ()) IN ()) FROM v0, rt0; -- 0ms;
SELECT ALL CAST(((t1.c0)=(rt0.c0)) AS BLOB) FROM rt0 WHERE ((((NULL, 'Mb>HQ/OQI', 0.23798811165642297)) BETWEEN ((((((((((NULL)AND(NULL)))AND(x'')))AND('-1682559793')))OR(0.6165625059619746)), (('-1592158094')IS NOT('2179655')), (('122300444') ISNULL))) AND (((('-1277791912') NOT NULL), (NOT ('0.09704497052733951')), ((x'ed94') IS FALSE))))) ORDER BY (+ (LENGTH(0.31170045332272867)));SELECT ((rt0.c1) BETWEEN (v0.c0 COLLATE RTRIM) AND ((-1597073592 IN ()))), rt0.c2, (((rt0.c2) BETWEEN (v0.c0) AND (t0.c0)) IN ()) FROM t0 WHERE ((((('-1597073592') IS FALSE))AND((0.4354350152534131 IN ()))));SELECT ALL rtreenode(t1.c0, COUNT(t1.c0)), '-1313544576', CASE UNLIKELY(v0.c0)  WHEN '0.8140555073055671' COLLATE BINARY THEN (('x(')IS NOT(rt0.c0)) WHEN ((rt0.c0) IS FALSE) THEN SQLITE_COMPILEOPTION_GET(t0.c0) WHEN ((((t1.c0)AND(t0.c0)))AND(rt0.c2)) THEN t0.c0 ELSE COUNT(t1.c0) END FROM v0, t0, t1, rt0 GROUP BY ((((rt0.c1) NOTNULL))-(t0.c0)) HAVING CASE WHEN ((v0.c0) BETWEEN (rt0.c1) AND (t1.c0)) THEN (((t0.c0))<((t0.c0))) ELSE t0.c0 END ORDER BY CAST(IFNULL(DISTINCT -1671706158, v0.c0) AS NUMERIC); -- 0ms;
SELECT ALL '-0.0', ((v0.c0 COLLATE BINARY) IS TRUE), ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)AND((('1701755863')GLOB(rt0.c0)))))OR(((t1.c0)GLOB(t1.c0)))) FROM v0, rt0, t0, t1; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS INTEGER) COLLATE BINARY FROM v0 WHERE (((0.6310651634957352 COLLATE BINARY) IS FALSE)) ORDER BY CASE NULL  WHEN ((rt0.c1) IS FALSE) THEN ((((rt0.c2)AND(rt0.c2)))AND(v0.c0)) ELSE ((((t0.c0)OR(rt0.c0)))OR(v0.c0)) END ASC  NULLS FIRST, ((rt0.c1) IS FALSE) COLLATE RTRIM;SELECT ((((rt0.c1) NOT BETWEEN (t1.c0) AND ('')))/(rt0.c1)) FROM t1;SELECT DISTINCT ((v0.c0)<=(rt0.c2)) COLLATE BINARY FROM rt0, v0, t1, t0 GROUP BY ((CASE rt0.c0  WHEN '0.13346309748542695' THEN v0.c0 END) ISNULL) HAVING COUNT(*); -- 0ms;
SELECT json_array_length(((((v0.c0)AND(rt0.c1)))AND(v0.c0)), ((t1.c0)*(v0.c0))), NULL, AVG(LOWER(DISTINCT rt0.c0)) OVER () FROM v0, rt0 ORDER BY (rt0.c0 IN ()) COLLATE RTRIM, ((((rt0.c1)==(rt0.c0))) NOT NULL)  NULLS LAST, ((((v0.c0) NOTNULL))AND((rt0.c2 IN (t0.c0)))) DESC  NULLS LAST;SELECT COUNT(*) FROM t1; -- 0ms;
SELECT ALL ((CAST(v0.c0 AS NUMERIC))GLOB((((rt0.c0)) BETWEEN (('-1636412029')) AND ((rt0.c0))))) FROM rt0, v0, t0, t1 WHERE (NULL COLLATE NOCASE) ORDER BY ((NULL)%((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))  NULLS FIRST, (((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c1)), ((t1.c0) NOTNULL), ((t0.c0)|(t0.c0))))<(((v0.c0 IN ('[fc|^완鸆')), CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END, t1.c0)))  NULLS FIRST LIMIT -1067712190; -- 1ms;
SELECT ALL highlight(((t0.c0)||(rt0.c1)), v0.c0 COLLATE BINARY, rt0.c2, ((((rt0.c0)AND(rt0.c2)))AND(t1.c0))) FROM v0, rt0;SELECT (+ (((((t1.c0)OR(x'')))OR(t1.c0)))) FROM t0, rt0;SELECT ALL MIN((rt0.c2 IN (rt0.c2))) FROM rt0, t1 WHERE ((+ ('''')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((v0.c0 COLLATE BINARY))<>((((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))))) FROM rt0, t1, t0 UNION ALL SELECT ALL NULL FROM t1 WHERE ((+ ('-803090130')) COLLATE NOCASE) LIMIT 1840164640 OFFSET -1609375208;SELECT DISTINCT 0.28300258937514555 FROM t0 LIMIT -465726089; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE NOCASE IN (COUNT(rt0.c0))) FROM t0, t1, rt0 WHERE ((((('-1277791912')>>(NULL)))<=('1415676294' COLLATE BINARY))) LIMIT -1592158094; -- 0ms;
SELECT ALL x'' FROM v0, t0, t1, rt0; -- 1ms;
SELECT DISTINCT COUNT(t0.c0) OVER (), ((((t0.c0 COLLATE BINARY)OR(678747584)))OR(rt0.c1 COLLATE BINARY)), SUM((rt0.c1 IN (rt0.c2))) OVER () FROM t0, v0 WHERE ('-1259719936' COLLATE BINARY);SELECT ((t1.c0)&(v0.c0)) COLLATE RTRIM, PERCENT_RANK() OVER (), ((((rt0.c1) NOT NULL)) IS FALSE) FROM t0, t1, v0 GROUP BY ((t1.c0)!=(CAST(t0.c0 AS TEXT)));SELECT ALL (+ (CAST(rt0.c0 AS TEXT))) FROM v0, t0, t1;SELECT DISTINCT TOTAL(CASE 0.4693376624319242  WHEN v0.c0 THEN t0.c0 END COLLATE BINARY) OVER () FROM rt0, v0, t0 LIMIT 678747584; -- 0ms;
SELECT ALL (NOT (LOWER(rt0.c2))) FROM v0, t1, t0, rt0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c1)>=(t0.c0)))) FROM v0, t0, t1, rt0 WHERE ((((NULL)) NOT BETWEEN ((CASE x'764e'  WHEN '{~' THEN '262569902' END)) AND ((((x'2d79') BETWEEN ('') AND (-1277791912)))))) ORDER BY (+ (t1.c0)) ASC, (+ (((v0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)))) LIMIT 2120878081; -- 1ms;
SELECT ALL (~ (t0.c0)) FROM v0, t0, rt0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c0) BETWEEN (rt0.c2) AND (t1.c0)))-((((rt0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))) FROM v0, t0, t1, rt0 GROUP BY CAST((NOT (rt0.c2)) AS BLOB), (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) ISNULL), (((- (t0.c0))) ISNULL) ORDER BY ((((((((((((t1.c0)OR(v0.c0)))AND(rt0.c1)))AND(STRFTIME(t1.c0, t1.c0, rt0.c0))))OR(CAST(rt0.c1 AS INTEGER))))AND(CAST(x'' AS TEXT))))OR(((v0.c0)==(rt0.c0)))); -- 0ms;
SELECT DISTINCT (((('-')&(v0.c0))) IS TRUE), (~ (TRIM(DISTINCT v0.c0, t0.c0))), ((t1.c0)IS NOT(CASE WHEN rt0.c2 THEN t1.c0 ELSE t1.c0 END)) FROM t0 WHERE (LIKELIHOOD(DISTINCT ((((((((x'e8d92b75')AND(NULL)))AND('0.4354350152534131')))OR(437184799)))OR(0.2838292216923609)), 0.56011970939822)) ORDER BY (((('')OR(((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))))AND(NULL)), ((LENGTH(rt0.c1))IS NOT(((((((((t1.c0)OR(x'')))AND(t0.c0)))AND(rt0.c2)))OR(v0.c0))))  NULLS FIRST, (((+ (0Xffffffffc4c51608)))GLOB(((((((((rt0.c2)AND(t0.c0)))OR(0.32073492813715465)))OR(t1.c0)))OR(rt0.c1)))) ASC  NULLS LAST;SELECT DISTINCT (((~ (t0.c0)))GLOB((('') BETWEEN (v0.c0) AND (t1.c0)))) FROM rt0, v0, t0, t1; -- 0ms;
SELECT rt0.c1 FROM t0, v0, t1, rt0 WHERE (((('611845674')) NOT BETWEEN (((('2179655') NOT NULL))) AND ((((0.08175457114144258) NOT BETWEEN (NULL) AND (x'')))))); -- 0ms;
SELECT DISTINCT CASE WHEN (((t1.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND (('4]%h(G', t0.c0, v0.c0))) THEN rt0.c1 END, DATETIME('4]%h(g', (NOT (rt0.c2)), (rt0.c1 IN ())), x'', CASE WHEN ((((v0.c0)OR(t1.c0)))AND(v0.c0)) THEN CASE NULL  WHEN v0.c0 THEN v0.c0 END WHEN ((rt0.c2)!=(t1.c0)) THEN (~ (rt0.c0)) WHEN t1.c0 THEN CAST(rt0.c0 AS REAL) WHEN ((t1.c0) BETWEEN (0.07511790101284177) AND (NULL)) THEN ((rt0.c1) NOTNULL) WHEN v0.c0 COLLATE BINARY THEN CAST(rt0.c2 AS NUMERIC) ELSE ((v0.c0) IS TRUE) END, ((rt0.c1 COLLATE RTRIM)<>((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))) FROM rt0 INDEXED BY i46 WHERE ((((NOT ('返'')phz\n<'))) ISNULL)) LIMIT -1979908034;SELECT ALL CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC), LEAD('-252234864', CAST((((rt0.c0))=((rt0.c1))) AS NUMERIC), CASE COALESCE(DISTINCT NULL, rt0.c1)  WHEN ((rt0.c0) ISNULL) THEN (- (v0.c0)) ELSE (rt0.c0 IN ()) END) OVER (), (SQLITE_COMPILEOPTION_USED(rt0.c1) IN ()) FROM t1, v0 INDEXED BY i46, rt0 WHERE (('97709210' COLLATE NOCASE IN ()));SELECT DISTINCT (((~ (rt0.c0))) BETWEEN ((((((((('')OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(x'842c'))) AND (rt0.c1)), ((t1.c0) BETWEEN ((rt0.c2 IN ())) AND (LIKELIHOOD(rt0.c1, 0.9619557443355957))), ((NULL) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (t1.c0))) AND (((-804849788)-(rt0.c1)))) FROM rt0;SELECT ((((rt0.c0, v0.c0, t0.c0))==((rt0.c2, t1.c0, t0.c0))) IN (UPPER(DISTINCT t1.c0), rt0.c1)) FROM rt0 WHERE ((('')IS(IFNULL(DISTINCT '1974756145', NULL)))) GROUP BY (((+ (rt0.c1))) BETWEEN (((t0.c0) ISNULL)) AND (LIKELY(rt0.c2))) HAVING ((LENGTH(rt0.c0))!=(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))));SELECT ((v0.c0 COLLATE BINARY) ISNULL) FROM t0, v0, rt0 WHERE (CASE WHEN PRINTF(NULL) THEN ((NULL) IS FALSE) WHEN ((((((((x'')OR(0.4727113429766422)))AND(0.34929075292158074)))OR('0.11368965481489735')))OR('-993716728')) THEN (((('㦷h')AND('-1979908034')))AND(0Xffffffff94907a3e)) WHEN ((NULL) NOT BETWEEN ('538678836') AND ('0.23798811165642297')) THEN (((x'', '', NULL)) NOT BETWEEN (('o?', '\r!VkoO㎐Vl', NULL)) AND ((NULL, 0.46799728534200213, '-646649358'))) ELSE json_remove('뭡XxFenA]', 0.9528019885225839, 0xffffffff8c96e914, x'3722', 'c_\np', '-') END); -- 0ms;
SELECT ((((rt0.c2) IS FALSE)) IS FALSE), MIN(((t0.c0) NOT NULL)), CASE ((rt0.c1)>>(t0.c0))  WHEN rt0.c0 COLLATE NOCASE THEN CASE WHEN t0.c0 THEN rt0.c1 ELSE '-165140519' END ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) END FROM rt0, t1, v0;SELECT CUME_DIST() OVER (), SUM((rt0.c2 IN ())) OVER (), CASE (t0.c0 IN ())  WHEN ((t1.c0)LIKE(v0.c0)) THEN ((rt0.c2) BETWEEN (t0.c0) AND (t0.c0)) END FROM v0 INDEXED BY i6, t0;SELECT DISTINCT (((t1.c0 COLLATE RTRIM))>=((CAST(rt0.c1 AS NUMERIC)))) FROM rt0, v0, t0;SELECT DISTINCT ((NOT (rt0.c1)) IN ()) FROM t1, v0 WHERE (((LIKELIHOOD(x'0bdb', 0.20465151021448302))<(CAST(x'' AS BLOB)))); -- 0ms;
SELECT rt0.c2 COLLATE BINARY COLLATE NOCASE FROM v0, t0, t1 WHERE (((((((0.45554768063707896)AND(-993716728)))OR('-1592158094'))) NOT BETWEEN ((('1415676294')GLOB(0.022297243397047084))) AND (x'' COLLATE BINARY)));SELECT AVG((~ (rt0.c1))) OVER () FROM rt0, v0, t0, t1 WHERE (0.3946615293690183); -- 1ms;
SELECT DISTINCT TOTAL((+ (rt0.c1))) OVER (), (- (CAST(rt0.c2 AS REAL))), ((((v0.c0)|(rt0.c0))) IS FALSE) FROM v0 WHERE ((+ (CAST(0Xffffffffae4609cc AS NUMERIC))));SELECT PRINTF('669092658', ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0))), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE COLLATE NOCASE, 388759490 FROM v0, t1 ORDER BY ((((t1.c0) NOTNULL)) IS FALSE) ASC  NULLS LAST;SELECT DISTINCT ((((CAST(rt0.c1 AS TEXT))OR(v0.c0)))AND((t0.c0 IN ()))) FROM t1 WHERE ((~ (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END IN (t0.c0 COLLATE NOCASE)) FROM rt0, v0, t0, t1 NOT INDEXED WHERE (((((0.0) NOT BETWEEN (NULL) AND ('1701755863'))) BETWEEN (((0.5053283871171393) IS FALSE)) AND (((0.5480412001391629) NOT BETWEEN (x'') AND (''))))); -- 0ms;
SELECT LTRIM((rt0.c0 IN ()), COUNT(rt0.c0)) FROM t1, rt0, t0, v0 WHERE (((((x'860a') NOTNULL))&(((-7.76574071E8)>=(x'a794'))))); -- 0ms;
SELECT COALESCE(AVG(rt0.c1), SQLITE_COMPILEOPTION_USED(rt0.c1), ((0.8873477691818237)LIKE(v0.c0)), ((((t1.c0)OR('-2036016661')))OR(rt0.c1))) FROM rt0, t0, t1;SELECT DISTINCT ((((t0.c0)AND(t0.c0)))OR(v0.c0)) COLLATE BINARY FROM rt0 WHERE (((((NULL)LIKE('-1771870395'))) NOT NULL));SELECT DISTINCT (((COUNT(*), ((v0.c0)+(rt0.c1)), ((rt0.c2) BETWEEN (v0.c0) AND (t0.c0))))<((v0.c0 COLLATE NOCASE, v0.c0, (((rt0.c0, t0.c0, rt0.c2))<=((t0.c0, t0.c0, rt0.c0)))))) FROM v0, t1, t0;SELECT DISTINCT CUME_DIST() OVER () FROM t1, t0, rt0, v0 LIMIT -751473190 OFFSET -1487232811; -- 0ms;
SELECT ALL SUM(((rt0.c2)<=(t1.c0))) OVER (), CAST(((t1.c0) NOT NULL) AS BLOB), DATE(v0.c0, TIME(t0.c0, '2074786657', t1.c0), (rt0.c0 IN (rt0.c2))) FROM rt0, t1, t0 FULL OUTER JOIN v0 ON CHANGES() WHERE (DATE(((1560660299) NOT NULL), (('')>>(NULL)), x'b1c1' COLLATE RTRIM)); -- 0ms;
SELECT ALL ((((((((((-1597073592)AND(v0.c0)))OR(t0.c0)))OR(t1.c0)))OR(v0.c0))) BETWEEN ((((rt0.c2, rt0.c1, t1.c0))>=((t0.c0, t1.c0, t1.c0)))) AND (rt0.c1 COLLATE RTRIM)) FROM v0, t1;SELECT DISTINCT ((((v0.c0) NOTNULL)) IS TRUE) FROM t0, v0, rt0, t1 ORDER BY (((rt0.c1, rt0.c0, t0.c0)) BETWEEN ((HEX(v0.c0), CASE t1.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END, ((((v0.c0)OR(rt0.c0)))OR(v0.c0)))) AND ((((v0.c0) NOT NULL), (v0.c0 IN ()), (rt0.c2 IN ()))))  NULLS FIRST; -- 1ms;
SELECT DISTINCT (+ (((rt0.c2)<=(rt0.c0)))) FROM v0, t0, rt0, t1 WHERE (((0.15332162156344908) ISNULL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((rt0.c2))>((v0.c0))))<(rt0.c2 COLLATE NOCASE)), CASE WHEN NULLIF(rt0.c2, t0.c0) THEN ((t0.c0)|(v0.c0)) END, CAST(((rt0.c2) NOT NULL) AS NUMERIC), CAST(t0.c0 AS INTEGER), (v0.c0 IN ()) FROM v0, t0, t1 ORDER BY ((((NOT (rt0.c2))))<((rt0.c1 COLLATE RTRIM)))  NULLS FIRST, ((((((((CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)AND(((((2.120878081E9)OR(rt0.c1)))AND(t1.c0)))))AND(((rt0.c2)IS NOT(0x1cbdd1de)))))AND(((v0.c0) NOTNULL))))AND(json_object(rt0.c2, rt0.c1)))  NULLS FIRST;SELECT ALL MIN(((x'')<<(t1.c0))) FROM t1; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (v0.c0) AND ('-1592158094'))) IS FALSE) FROM t0 WHERE (CASE WHEN ((x'')%('507200574')) THEN ((((0.675782816830084)AND(0.2211013944890916)))AND(0.6513721685876008)) ELSE (+ (0.19424386868507082)) END);SELECT LAST_VALUE(((CAST(NULL AS INTEGER)) NOTNULL)) OVER () FROM t1 WHERE (CAST(json_type('323138703') AS INTEGER)) GROUP BY (- ((x'b940' IN ()))), CASE WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE NOCASE, (CAST(rt0.c0 AS INTEGER) IN ());SELECT DISTINCT ((((t0.c0)GLOB(rt0.c2)))||(((((rt0.c2)OR(rt0.c0)))AND(t0.c0)))) FROM v0, t1, rt0 LIMIT 1595878695 OFFSET -202629379;SELECT DISTINCT ((SUM(0xffffffffc663c82e)) IS TRUE) FROM rt0 LEFT OUTER JOIN t0 ON (((((NULL))<((rt0.c2)))) BETWEEN (t1.c0) AND (((((t1.c0)AND(rt0.c2)))OR(0.006572934376537054)))) WHERE (((CAST(0.11821469030785625 AS BLOB))+((0.15588331950921674 IN (0.49570989474914307, 0.736586290552413))))) ORDER BY x'8350', (((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) ASC  NULLS LAST;SELECT DISTINCT CASE WHEN (rt0.c1 IN ()) THEN ((v0.c0) NOT NULL) END FROM rt0 WHERE (((('')) BETWEEN ((NULL)) AND ((NULL))) COLLATE BINARY);SELECT DISTINCT (((t0.c0) IS TRUE) IN ()), DENSE_RANK() OVER (), '-1592158094' FROM rt0, t0; -- 0ms;
SELECT DISTINCT SUM(CAST(rt0.c1 AS BLOB)) FROM t0 NOT INDEXED WHERE ((((0.9978288892074452) NOT BETWEEN ('''') AND ('-1997524901')) IN (CAST(x'' AS REAL))));SELECT LEAD((((rt0.c2, t1.c0, t0.c0)) BETWEEN (((NOT (rt0.c0)), CASE rt0.c2  WHEN '861547535' THEN rt0.c1 ELSE rt0.c2 END, CASE WHEN t0.c0 THEN rt0.c2 END)) AND ((((rt0.c2) NOTNULL), ((t1.c0) BETWEEN (t1.c0) AND (rt0.c0)), ((rt0.c1)<(rt0.c2))))), ((((((0.027720619521550582) NOT BETWEEN (rt0.c0) AND (x'')))AND((NOT (v0.c0)))))OR(rt0.c2)), ((t0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c0) AND (((t0.c0) NOTNULL)))) OVER () FROM v0, t0, rt0, t1; -- 0ms;
SELECT DISTINCT AVG(((rt0.c0) BETWEEN (t0.c0) AND (x'00d7'))) FROM t1, rt0, v0, t0; -- 0ms;
SELECT DISTINCT ((('', t0.c0, rt0.c2)) NOT BETWEEN (((('') NOT BETWEEN (rt0.c1) AND (v0.c0)), (('-1682559793') NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c0) IS FALSE))) AND ((v0.c0, (('0.8124231777456773') IS TRUE), (((rt0.c2)) BETWEEN ((v0.c0)) AND ((NULL)))))), v0.c0, t1.c0 FROM v0, t1 WHERE ('1932974949' COLLATE RTRIM COLLATE BINARY);SELECT (((((rt0.c1)AND(t0.c0)))AND(NULL)) IN ()), (((+ (rt0.c0)))!=(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(-1412044407)))OR(v0.c0)))), rt0.c0, '<KS)', (SUM(t1.c0) IN ()) FROM t0 GROUP BY json(((rt0.c0)<=(t0.c0))), '),', rt0.c2;SELECT ALL ((TYPEOF(DISTINCT rt0.c2))AND((((rt0.c1))<((t0.c0))))) FROM rt0, t1 WHERE (((CAST(x'' AS TEXT))IS(x'44f8' COLLATE RTRIM))) LIMIT 825644982;SELECT DISTINCT 0.6230961076775652 FROM t0, rt0 WHERE (CAST(x'' AS REAL) COLLATE BINARY) GROUP BY ((v0.c0 COLLATE BINARY) NOT NULL);SELECT (((x'ab81'))=((TOTAL('-1057244695')))), (CASE WHEN t0.c0 THEN t0.c0 END IN ()), (((MIN(t1.c0)))<((((t1.c0)>(rt0.c0))))) FROM rt0, t1, t0, v0 WHERE (json_type((~ (0.9579953796159053)))); -- 0ms;
SELECT DISTINCT TRIM(((((t1.c0)OR(rt0.c2)))AND(t0.c0))) FROM v0, rt0, t0;SELECT DISTINCT (((((NOT (rt0.c0)))AND(((0Xffffffffd628573d) BETWEEN (v0.c0) AND (rt0.c0)))))AND(CASE t0.c0  WHEN rt0.c1 THEN x'2657' ELSE rt0.c2 END)) FROM t1 WHERE (((NULL)>=(x'')) COLLATE NOCASE) GROUP BY CAST(((rt0.c2)GLOB(rt0.c2)) AS TEXT) ORDER BY CAST(((((v0.c0)AND(t0.c0)))OR(rt0.c2)) AS BLOB)  NULLS LAST;SELECT NULL FROM t0, v0, rt0, t1 ORDER BY (((('0.736586290552413')*(rt0.c0))) NOTNULL)  NULLS FIRST, ((((LOWER(DISTINCT t1.c0))OR(v0.c0)))AND(((x'') NOTNULL))), 1608837692;SELECT ALL '156154762' FROM t0, rt0, t1; -- 0ms;
SELECT ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY FROM t1, t0, v0, rt0; -- 1ms;
SELECT ALL (((rt0.c2)) BETWEEN ((TOTAL(rt0.c2))) AND ((((rt0.c2) NOTNULL)))), MAX((~ (v0.c0))), (((v0.c0, rt0.c2, t0.c0)) NOT BETWEEN ((((rt0.c0)&(rt0.c1)), CASE rt0.c1  WHEN t1.c0 THEN v0.c0 ELSE '-788996731' END, ((((((((t0.c0)AND(rt0.c1)))OR(t1.c0)))AND(rt0.c2)))OR(NULL)))) AND ((((rt0.c0) NOT NULL), ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)), AVG(v0.c0)))) FROM v0, t0, rt0 INDEXED BY i46, t1;SELECT PERCENT_RANK() OVER ( ROWS  CURRENT ROW), ((rt0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM, ((MAX(rt0.c0)) NOT NULL), ((((((((CASE WHEN t0.c0 THEN t1.c0 END)OR((((rt0.c0, rt0.c2, rt0.c1, rt0.c1, v0.c0))>((rt0.c0, rt0.c2, rt0.c1, v0.c0, v0.c0))))))OR(0.19424386868507082)))OR(((t1.c0) IS TRUE))))AND((((v0.c0))==((rt0.c2))))), NTH_VALUE(((t0.c0 COLLATE BINARY)=((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, v0.c0)) AND ((t0.c0, rt0.c1, rt0.c1))))), (NOT (-1771870395))) OVER () FROM t0, v0, rt0 LIMIT -751933873 OFFSET -1371141684;SELECT DISTINCT ((x'') BETWEEN ('-939250574') AND (COUNT(t0.c0))) FROM v0, rt0 WHERE (((CASE WHEN NULL THEN 0.65204378739579 END) IS TRUE)) ORDER BY ((((rt0.c1)||(rt0.c0))) IS FALSE) ASC;SELECT DISTINCT (('-1487232811')LIKE(((rt0.c0)>=(v0.c0)))) FROM t0, t1 ORDER BY ((CASE WHEN rt0.c1 THEN 0.5653563288831158 END)!=(((t1.c0)LIKE(v0.c0))))  NULLS FIRST;SELECT ALL HEX(DISTINCT v0.c0), SUM(TRIM(rt0.c1, v0.c0)), x'5d19' FROM v0, t0, t1 GROUP BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END AS NUMERIC);SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER))OR((+ (rt0.c1)))), (((rt0.c2)) BETWEEN ((CASE '1862360959'  WHEN rt0.c2 THEN t1.c0 END)) AND ((((v0.c0)==(rt0.c0))))), '&y' FROM t1 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c0)=(rt0.c2)) THEN LIKE(t0.c0, t1.c0, 'u') WHEN TRIM(rt0.c1) THEN ((-2047672781) BETWEEN (t1.c0) AND (t0.c0)) WHEN (('fI,|O-?.')>(rt0.c0)) THEN x'60f9' END RIGHT OUTER JOIN t0 ON ((((v0.c0)IS NOT(rt0.c2)))IS(CASE WHEN rt0.c2 THEN rt0.c0 END)) WHERE (CASE WHEN NULL THEN NULL END COLLATE NOCASE) GROUP BY ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY;SELECT ((+ (rt0.c2)) IN ()) FROM t1, t0, rt0, v0; -- 0ms;
SELECT ALL (+ (v0.c0)) COLLATE RTRIM, CAST(rt0.c2 COLLATE BINARY AS REAL), ((((0.49131848671252376)+(rt0.c0)))<<(LIKELIHOOD(DISTINCT t1.c0, 0.24814988170824126))) FROM t1, v0, rt0, t0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), t1.c0, json_patch(t0.c0, MIN(t1.c0)) FROM rt0, t0 WHERE ((((NULL IN ())) BETWEEN (((('-202629379')) NOT BETWEEN (('-1976298588')) AND ((-2.059824402E9)))) AND (''))) LIMIT -1671706158 OFFSET 1851461466;SELECT DISTINCT COUNT(LOWER(DISTINCT rt0.c1)) COLLATE RTRIM FROM v0, t0 WHERE (((((((']3?b''') BETWEEN (0X5a5af2a9) AND (NULL)))OR(0.2681204718813571)))AND((('356030539')<=(x'')))));SELECT x'331a', CASE (NOT (rt0.c1))  WHEN SUM(t0.c0) THEN ((t0.c0) IS TRUE) ELSE (((rt0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))) END, ((v0.c0)/(rt0.c0)) COLLATE NOCASE FROM v0, t1 WHERE ((((((NULL))<(('-vigD6QA')))) NOTNULL)) GROUP BY ((CASE t1.c0  WHEN rt0.c2 THEN x'' WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 END)OR((rt0.c2 IN ()))) HAVING (NOT (rt0.c2 COLLATE BINARY));SELECT DISTINCT CASE CASE WHEN 0.45348638060656377 THEN 0.36050220815686973 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END  WHEN (NOT (rt0.c1)) THEN json_array_length(rt0.c0) END, rt0.c2, ((((rt0.c0)>=(t1.c0))) NOT BETWEEN (HEX(DISTINCT rt0.c0)) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM v0 ORDER BY NULL ASC  NULLS LAST;SELECT DISTINCT ((CASE WHEN rt0.c0 THEN t0.c0 END)=((((rt0.c0))>=((v0.c0))))) FROM t1 RIGHT OUTER JOIN t0 ON (((~ (rt0.c0)))=(t0.c0)) CROSS JOIN rt0 ON CASE WHEN (+ (rt0.c0)) THEN (((0xffffffff8323edaa, t0.c0, t1.c0)) NOT BETWEEN ((rt0.c2, t0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0))) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (t1.c0) AND (rt0.c2)) WHEN ((t0.c0)|(t1.c0)) THEN (~ (rt0.c0)) ELSE (v0.c0 IN (rt0.c0, rt0.c1)) END WHERE (x'');SELECT DISTINCT AVG(t1.c0) OVER () FROM t1 WHERE ((NOT (CASE x'0e3a'  WHEN NULL THEN 0xffffffffbf438d89 WHEN '' THEN x'' WHEN 0.7320555191956988 THEN NULL END))); -- 0ms;
SELECT ((CASE t0.c0  WHEN '' THEN v0.c0 END)|(CASE v0.c0  WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c2 WHEN x'37d4' THEN '0.6310651634957352' ELSE v0.c0 END)) FROM t0 NOT INDEXED, v0, rt0, t1 WHERE ((('0.6310651634957352') IS TRUE)); -- 1ms;
SELECT '-701999299' FROM v0; -- 0ms;
SELECT ALL ((((NULL) BETWEEN (t1.c0) AND (NULL))) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((t0.c0 IN ()))) FROM t0, rt0, v0 WHERE ((((NULL)) NOT BETWEEN ((((('-1340310866')) BETWEEN ((NULL)) AND (('顋w'))))) AND ((CAST('2109877794' AS REAL)))));SELECT DISTINCT (((rt0.c2, t0.c0, t0.c0)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))), (((('-701999299')AND(rt0.c0)))AND(1.22300444E8)), ((rt0.c0)/(NULL)))) AND ((CASE WHEN v0.c0 THEN t0.c0 END, ((t0.c0)IS NOT(rt0.c1)), ((v0.c0)%(2.66125551E8))))), TYPEOF(((((((((t0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c2))), ((0.4791625436967025)<=(((t1.c0)&(rt0.c1)))) FROM v0, rt0, t1, t0 GROUP BY (((t0.c0)!=(rt0.c2)) IN (((rt0.c0)>(rt0.c0)))) HAVING ((((((rt0.c0)>(rt0.c1)))AND(v0.c0)))OR(((NULL)!=(rt0.c0)))) LIMIT 989091049 OFFSET -1636412029; -- 0ms;
SELECT DISTINCT COUNT(*), ((((rt0.c2)*(t1.c0))) NOTNULL), t1.c0 FROM t1;SELECT ALL FIRST_VALUE(v0.c0) OVER () FROM v0, rt0; -- 1ms;
SELECT DISTINCT ((0xffffffff852abaf7)OR(CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 END)) FROM t1, rt0, t0, v0 WHERE ((((((('0.17003269460582338')AND(0.7336393508124704)))AND(CAST(NULL AS NUMERIC))))OR(CASE ''  WHEN '-414237215' THEN NULL ELSE '-1744808855' END))) LIMIT -1036406752 OFFSET 1575787647; -- 0ms;
SELECT SUM(((rt0.c1)*(rt0.c0))) OVER () FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)OR(t1.c0)))OR(v0.c0)))<(t1.c0)) FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT 0.8584317347435568 COLLATE NOCASE, COUNT(((rt0.c2)-(rt0.c0))) OVER ( ROWS BETWEEN  CURRENT ROW AND (((rt0.c2 IN (t1.c0)))<(LENGTH(v0.c0))) FOLLOWING), GROUP_CONCAT(CASE WHEN rt0.c2 THEN t1.c0 END) FROM v0 INDEXED BY i6, t0 WHERE (((((('' IN (x'')))OR(((0.675782816830084)<(NULL)))))OR('1323966889' COLLATE BINARY)));SELECT DISTINCT load_extension(CASE WHEN v0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 END), CASE ''  WHEN CAST(0.9432353345286434 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) END, CASE WHEN ((rt0.c2)/(t1.c0)) THEN ((rt0.c2)OR(v0.c0)) ELSE ((rt0.c2)IS NOT(x'')) END FROM t0, v0, rt0, t1 WHERE (CASE WHEN '-527416137' THEN '788447578' ELSE 0.5653563288831158 END COLLATE NOCASE) GROUP BY (+ (((t1.c0) NOTNULL))), ((t0.c0)IS(((v0.c0)<<(t1.c0)))), 0.5699005168896472 HAVING CASE t1.c0  WHEN ABS(rt0.c1) THEN CAST(rt0.c1 AS BLOB) END; -- 0ms;
SELECT DISTINCT CASE WHEN AVG(rt0.c1) THEN CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END ELSE ((0.3946615293690183)GLOB(rt0.c1)) END FROM t1 INNER JOIN rt0 ON (((t1.c0)+(t1.c0)) IN (CAST(t1.c0 AS REAL))) WHERE ((((NULL IN ('502101854', '-1869120654'))) NOT NULL));SELECT rt0.c0, x'', AVG(((rt0.c0)<(rt0.c0))) OVER () FROM v0 WHERE (CAST(NULL AS NUMERIC) COLLATE RTRIM) GROUP BY ((t0.c0) BETWEEN (((rt0.c2)>>(x''))) AND ((rt0.c2 IN ()))), ((((NULL IN ()), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), SQLITE_VERSION()))<>((CAST(rt0.c0 AS TEXT), t0.c0 COLLATE NOCASE, ((((((((rt0.c1)AND(rt0.c2)))AND(t0.c0)))OR(v0.c0)))OR(v0.c0))))), CASE WHEN 0.3380290371276694 THEN (((rt0.c2)) NOT BETWEEN ((0.23315745517159991)) AND ((v0.c0))) WHEN 'x(' THEN (NOT (t1.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((v0.c0)==(rt0.c0)) ELSE ((t0.c0)-(t1.c0)) END HAVING (((t1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(v0.c0)))OR(v0.c0)), ((rt0.c1)LIKE(rt0.c1)), CASE rt0.c1  WHEN v0.c0 THEN t1.c0 ELSE rt0.c0 END)) AND ((((t1.c0)<>(v0.c0)), ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)), (((0.0446253405971212))<=((rt0.c1)))))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS TEXT) ASC  NULLS LAST;SELECT DISTINCT ((t1.c0)&(NULLIF(rt0.c0, rt0.c2))) FROM t1, v0, t0;SELECT DISTINCT (((v0.c0 IN (rt0.c1)))LIKE(CAST(rt0.c2 AS NUMERIC))), CASE ((rt0.c2)AND(t1.c0))  WHEN CAST(t0.c0 AS REAL) THEN CHAR(t0.c0) ELSE QUOTE(v0.c0) END, (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2))))LIKE((NOT (rt0.c1)))), (((v0.c0 IN ()))*('Z&qN')), '' FROM v0, t0 WHERE (LIKELIHOOD(DISTINCT ((0.80995547108336)&('')), 0.3329972620822218)) LIMIT 406370798;SELECT ALL ((('Xn{O+yd', rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, x'9bee')) AND ((x'd503', rt0.c2, v0.c0))) COLLATE RTRIM, v0.c0, ((((v0.c0) NOT NULL)) NOT BETWEEN (((v0.c0)<(rt0.c0))) AND ((((rt0.c2))<((rt0.c1))))), ((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT((((v0.c0))=((rt0.c1))))), rt0.c0 FROM t1, t0 WHERE ((- (((0.5053283871171393)OR(NULL)))));SELECT CAST(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER) FROM v0, t1;SELECT ALL (+ (((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)))) FROM rt0, t1, v0, t0 WHERE ((((('')AND(x'')))/((('') NOTNULL)))); -- 0ms;
SELECT ALL (t0.c0 IN (((v0.c0)-(t1.c0)))), GROUP_CONCAT(((0.6020831647483725) NOT NULL)), (NOT (GROUP_CONCAT(v0.c0))) FROM rt0, v0, t1, t0; -- 0ms;
SELECT t0.c0 FROM v0, t0, t1 WHERE ((~ (NULLIF(DISTINCT x'fa43', 0Xffffffff89fd003e)))); -- 0ms;
SELECT ((((rt0.c0)IS(rt0.c0)))GLOB(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(v0.c0)))AND(t1.c0)))) FROM rt0, t1 WHERE (((CAST('1248779794' AS REAL)) BETWEEN (TIME('678747584', 0xfffffffffdab17c6, NULL, 0.431987829626687, NULL)) AND (load_extension(0xffffffffbb6f9ca5, NULL))));SELECT DISTINCT ((rt0.c2) BETWEEN (t1.c0) AND (NULL)) COLLATE BINARY FROM t0, rt0, t1, v0 WHERE ((~ (x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT json_array_length(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)), (((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c0)))) FROM t0 WHERE (']3?B''') GROUP BY (((t1.c0))<((t0.c0))) COLLATE NOCASE HAVING (rt0.c0 COLLATE RTRIM IN ()) LIMIT -2127259090;SELECT ALL CAST(((t1.c0) NOT NULL) AS INTEGER) FROM v0, rt0, t0 WHERE (LIKELY(-1294505933 COLLATE BINARY));SELECT ALL DENSE_RANK() OVER (), SUM((NOT (t1.c0)) COLLATE NOCASE), ((((((x'') NOT BETWEEN (rt0.c0) AND (v0.c0)))OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1)&(rt0.c2)))) FROM t0, t1, rt0, v0 LIMIT -620353810; -- 1ms;
SELECT ALL x'', DENSE_RANK() OVER ( ORDER BY ((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))>=(HEX(DISTINCT rt0.c1)))), SQLITE_COMPILEOPTION_USED(((NULL)>(rt0.c1))) FROM t1, rt0, v0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (- (t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) WHEN ((t1.c0)+('132729432')) THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (0.5476861156963109)) THEN (~ (rt0.c2)) ELSE ((rt0.c2)*(rt0.c0)) END, (((t1.c0)) NOT BETWEEN ((CAST(x'44798f9e' AS INTEGER))) AND (((('362388249') IS TRUE)))), ((HEX(DISTINCT rt0.c2)) IS TRUE) FROM rt0 WHERE (1840164640);SELECT CASE COUNT(*)  WHEN (t1.c0 IN ()) THEN ((t0.c0) BETWEEN (t1.c0) AND (rt0.c1)) ELSE ((rt0.c1) IS FALSE) END FROM v0, t1, t0 WHERE (UNLIKELY(CAST(NULL AS REAL)));SELECT DISTINCT (- (CAST(t1.c0 AS INTEGER))) FROM t1, rt0; -- 0ms;
SELECT ALL rt0.c0 COLLATE BINARY FROM t0 NOT INDEXED WHERE (((((x'')&(0.27869880016623727)))||(((-1.682559793E9)%(''))))) LIMIT 120745351 OFFSET -1971908165;SELECT ALL MAX(MIN(rt0.c0)), ((((t0.c0)LIKE(0.15215907339101087))) BETWEEN ((v0.c0 IN ())) AND (CASE WHEN rt0.c2 THEN 79726087 ELSE v0.c0 END)), GROUP_CONCAT(((rt0.c0)IS NOT(rt0.c2))) OVER () FROM v0, t0 WHERE ((('᧥')<>(((0.677034860321753)*(NULL))))) ORDER BY 0.2211013944890916 DESC, ((((((v0.c0)OR(t1.c0)))OR(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)) DESC;SELECT DISTINCT (((+ (v0.c0)))<<(((((t0.c0)OR(t1.c0)))AND(rt0.c2)))) FROM v0 WHERE (-1121381244);SELECT ALL CAST(rt0.c2 AS TEXT) FROM v0 GROUP BY (((-7.88996731E8)) BETWEEN (('()')) AND ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))))), (~ (rt0.c1)) COLLATE RTRIM, ((((t0.c0) ISNULL)) NOTNULL);SELECT ALL (~ ((v0.c0 IN ()))) FROM v0, t1, t0, rt0; -- 0ms;
SELECT ALL (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((t1.c0))))&((NOT (rt0.c2)))) FROM v0, t0, rt0, t1 GROUP BY (((rt0.c0)) NOT BETWEEN (((((v0.c0))!=((rt0.c1))))) AND (((rt0.c0 IN ())))) HAVING 'i_'; -- 0ms;
SELECT ALL x'', ((CAST(rt0.c0 AS TEXT))+(CAST(rt0.c0 AS REAL))), (- (CASE v0.c0  WHEN t0.c0 THEN rt0.c0 END)) FROM v0, t1 WHERE (CAST((+ (NULL)) AS REAL));SELECT DISTINCT CAST((- (rt0.c2)) AS TEXT), ((CASE WHEN rt0.c2 THEN t1.c0 WHEN rt0.c1 THEN x'd250' WHEN rt0.c2 THEN v0.c0 END) NOT NULL), ((CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)<(CAST(rt0.c2 AS INTEGER))) FROM v0, t0;SELECT DISTINCT (- (CASE WHEN v0.c0 THEN rt0.c0 WHEN 0.27020232522649523 THEN v0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN rt0.c0 ELSE v0.c0 END)), (((t1.c0)IS NOT(t1.c0)) IN ()), ((((x'', t1.c0, rt0.c1))>(('⢊f度ifu[M', rt0.c1, rt0.c2))) IN (MIN(rt0.c1))) FROM rt0, v0, t0 WHERE (((((x'')!=('1736544152'))) NOT BETWEEN (CAST(1.682080857E9 AS REAL)) AND (0.4037905320201307))) GROUP BY (((((- (t0.c0)))AND(((t0.c0) IS TRUE))))OR(rt0.c1 COLLATE RTRIM)), ((((t1.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) ISNULL), (((rt0.c1, rt0.c0, '')) NOT BETWEEN ((((((t0.c0)AND(t1.c0)))AND(rt0.c0)), (('-1382247114')>>(t0.c0)), (+ (rt0.c1)))) AND ((((((((((rt0.c1)OR(rt0.c0)))OR(NULL)))AND(rt0.c2)))AND(v0.c0)), COALESCE(rt0.c0, rt0.c1), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END))) HAVING ((((rt0.c2) ISNULL))*((~ (rt0.c2)))) ORDER BY CASE (((rt0.c0, t1.c0, v0.c0))>=((rt0.c2, rt0.c2, rt0.c0)))  WHEN t0.c0 THEN (~ (rt0.c0)) WHEN ((v0.c0) IS FALSE) THEN CAST(0.9246295540578406 AS NUMERIC) WHEN CAST(rt0.c2 AS TEXT) THEN ((((t1.c0)OR(v0.c0)))OR(rt0.c1)) END DESC;SELECT (NULL IN ()) FROM t0, v0, rt0, t1; -- 0ms;
SELECT DISTINCT (((t0.c0, rt0.c2, 0.32073492813715465)) BETWEEN ((rt0.c2, ((((t0.c0)AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER))) AND ((CASE WHEN rt0.c0 THEN t1.c0 END, MIN(rt0.c1), MAX(rt0.c1)))) FROM t1, rt0 WHERE ((((((((((('R')OR(-1.644714811E9)))OR(0.0079063654798468)))OR(NULL)))OR('-1536951676'))) BETWEEN (CAST(-1429242033 AS INTEGER)) AND ((- (''))))) LIMIT 1163522374;SELECT rt0.c1 FROM t1, v0, rt0, t0; -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS TEXT)) ISNULL) FROM rt0, t0, v0, t1; -- 0ms;
SELECT DISTINCT (((t1.c0 IN ())) IS TRUE) FROM rt0 INDEXED BY i6, v0 WHERE (((((NULL)-(NULL))) NOT NULL));SELECT ALL json_array_length(((rt0.c1)<>(rt0.c2)), (~ (t1.c0))) FROM t0, t1, rt0, v0 WHERE ((((((NULL, x'29cb', '<*'))>((NULL, NULL, NULL))))&((((('118971832')AND(0.16559252584896644)))AND(1171076237))))) ORDER BY CASE NULLIF(rt0.c1, 0.5251650917561034)  WHEN (((t1.c0, NULL, rt0.c0)) BETWEEN ((t0.c0, t1.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, t0.c0))) THEN (t0.c0 IN ()) END DESC; -- 0ms;
SELECT CAST(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN t0.c0 WHEN rt0.c2 THEN t1.c0 END AS BLOB), ((((v0.c0)>=(t1.c0))) BETWEEN (((t0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) AND (((((x'')OR(t0.c0)))OR(rt0.c1)))), IFNULL(((rt0.c1)/('?1')), ((rt0.c0)!=(rt0.c0))) FROM v0, rt0, t0, t1 WHERE ((json_quote('*_p	 l9	') IN ())); -- 0ms;
SELECT ALL ((((((((((rt0.c2) IS FALSE))AND(NULL)))OR((~ (t0.c0)))))OR(((v0.c0) BETWEEN (NULL) AND (v0.c0)))))OR(CASE WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 WHEN v0.c0 THEN 0xffffffffdc04f30b WHEN t0.c0 THEN rt0.c1 WHEN v0.c0 THEN t1.c0 ELSE t0.c0 END)) FROM t0, v0, rt0, t1; -- 1ms;
SELECT ALL ((((v0.c0)OR(rt0.c2)))AND(v0.c0)) COLLATE RTRIM FROM v0, t0, rt0, t1 WHERE ('*_p	 l9	'); -- 0ms;
SELECT (((((((((rt0.c1)AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t1.c0)) IN ()) FROM t1, t0, v0; -- 0ms;
SELECT RANK() OVER (), (~ ('-902484820')), '17561820' FROM v0, t1, t0, rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))GLOB(x'')), CASE rt0.c1 COLLATE BINARY  WHEN t1.c0 THEN ((v0.c0) IS FALSE) END DESC  NULLS FIRST; -- 0ms;
SELECT ALL x'80d8' FROM t1, rt0 WHERE (UPPER(DISTINCT ((x'') NOT BETWEEN ('194631108') AND (0.006572934376537054)))); -- 0ms;
SELECT DISTINCT DATE((~ (rt0.c2)), AVG(rt0.c0), CAST(rt0.c1 AS TEXT)) FROM t1, v0 NOT INDEXED, t0 WHERE ((~ ((('-207817314') NOT BETWEEN ('vU') AND (NULL)))));SELECT DISTINCT CASE WHEN t1.c0 COLLATE BINARY THEN ((rt0.c1)*(t0.c0)) WHEN '' THEN rt0.c0 COLLATE BINARY WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN INSTR(rt0.c0, x'') END FROM v0, rt0, t0, t1; -- 0ms;
SELECT ((CASE WHEN v0.c0 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c2 ELSE rt0.c0 END)<<((rt0.c0 IN ()))) FROM v0, t1 WHERE (CASE ('885443047' IN (0.9820953685814662, '-1495498473'))  WHEN CAST(x'73ca' AS BLOB) THEN (NOT (x'19b32373')) WHEN ((x'ad71')>(NULL)) THEN x'' COLLATE NOCASE WHEN ((NULL) ISNULL) THEN CAST('542924426' AS BLOB) ELSE json_array(0.8840613507416193, x'') END);SELECT (((rt0.c1 IN (v0.c0))) IS TRUE), ((+ (rt0.c2)) IN ((rt0.c1 IN ()), CASE WHEN 0.45418745270185734 THEN rt0.c1 WHEN v0.c0 THEN '' WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END)), CASE CASE WHEN rt0.c1 THEN rt0.c2 END  WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(0x268e56ad)))AND(v0.c0)))OR(t0.c0)) THEN ((rt0.c1)=(rt0.c0)) WHEN TRIM(DISTINCT rt0.c2) THEN ((t0.c0) NOT NULL) WHEN CASE rt0.c1  WHEN t1.c0 THEN rt0.c2 END THEN ((rt0.c1)||(rt0.c1)) WHEN (((rt0.c2, v0.c0, t0.c0)) NOT BETWEEN ((rt0.c2, x'', v0.c0)) AND ((0.7297391458129686, v0.c0, rt0.c2))) THEN CAST(v0.c0 AS NUMERIC) WHEN (v0.c0 IN ()) THEN rt0.c1 COLLATE BINARY END FROM t1, v0;SELECT DISTINCT ((CAST(t1.c0 AS BLOB)) NOT BETWEEN ((+ (rt0.c2))) AND (rt0.c2 COLLATE NOCASE)) FROM v0 WHERE (((RTRIM(NULL)) NOT NULL));SELECT DISTINCT ((((CASE t0.c0  WHEN rt0.c0 THEN x'' WHEN v0.c0 THEN t1.c0 WHEN rt0.c2 THEN t1.c0 ELSE '-646649358' END)AND(CASE WHEN v0.c0 THEN '-1186211476' ELSE 0.15330229393321537 END)))AND(((v0.c0) BETWEEN (rt0.c2) AND (t0.c0)))) FROM t1, v0, t0 WHERE ((((0.7771765156560304)) NOT BETWEEN (((('') IS TRUE))) AND (((('-1597073592')/('⠜oO#<Z䊜d'))))));SELECT DISTINCT (rt0.c1 COLLATE BINARY IN ()), GROUP_CONCAT((((rt0.c2, rt0.c2, t0.c0))<=((t0.c0, rt0.c1, rt0.c1)))) OVER (), (((((((((- (t1.c0)))AND(('339864989' IN (t1.c0, rt0.c1)))))OR((-943952202 IN ()))))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END)))OR(((t1.c0) ISNULL))) FROM t1, rt0, v0 WHERE (CAST(CASE WHEN NULL THEN x'7068' WHEN '-2059824402' THEN x'7919ea32' WHEN x'' THEN 784100887 END AS TEXT));SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c0))) IS FALSE) FROM v0, rt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN TOTAL(t1.c0) THEN ((rt0.c1)%(rt0.c0)) END FROM rt0, t1; -- 0ms;
SELECT ALL ((((NULL COLLATE RTRIM)OR(((t0.c0) IS TRUE))))AND((+ (t0.c0)))), rt0.c0, ((((t0.c0)+(rt0.c0)))IS(((0.7336393508124704) NOTNULL))) FROM t1, v0, t0;SELECT DISTINCT COUNT(CAST(t0.c0 AS NUMERIC) COLLATE BINARY) FROM t1, v0, t0, rt0 WHERE ((((('')&(x'')))<=((((((((('-1344807175')OR(0xfa67fae)))OR(x'772a')))OR(NULL)))OR(''))))); -- 0ms;
SELECT DISTINCT MAX(((x'ab277abd')GLOB(rt0.c0))), ((((x'd810') NOT BETWEEN (v0.c0) AND (t0.c0))) IS FALSE), AVG(((x'') BETWEEN (rt0.c1) AND (rt0.c0))) FILTER(WHERE ((((x'626d')IS NOT(rt0.c1)))||(((((((((v0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(v0.c0))))) OVER () FROM v0, t0, rt0, t1 GROUP BY CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)) AS REAL) LIMIT 0; -- 0ms;
SELECT TRIM((rt0.c2 IN ()), json_object(t0.c0, rt0.c2, rt0.c2, rt0.c2)) FROM v0, t0, t1;SELECT (((NOT (t1.c0))) NOT BETWEEN (((rt0.c0)>(v0.c0))) AND ('歞Ia㰁3[*%' COLLATE RTRIM)) FROM t1, rt0;SELECT DISTINCT ((GROUP_CONCAT(t0.c0))<>(UNLIKELY(rt0.c0))), COUNT(NULL) OVER (), ((t0.c0) NOT BETWEEN (rt0.c1) AND (-1.487232811E9)) COLLATE NOCASE FROM v0, rt0, t0 GROUP BY ((((((rt0.c0)/(rt0.c0)))AND(((t0.c0) NOT BETWEEN ('') AND (t0.c0)))))AND((((rt0.c2))>((t1.c0))))), (((((t0.c0, v0.c0, t1.c0))>((v0.c0, t0.c0, rt0.c1)))) BETWEEN ((('(*]') NOT BETWEEN (v0.c0) AND (0.5431551952626754))) AND (t1.c0 COLLATE NOCASE)), (((v0.c0)) BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (rt0.c0)))) AND ((v0.c0))) LIMIT 2025907529;SELECT DISTINCT rt0.c2, ((+ (t0.c0)) IN ()), (- (rt0.c2)) FROM t1, v0 WHERE ((('<uC솒g') NOT BETWEEN (CASE WHEN 0.09143676900407804 THEN NULL END) AND (CASE '0.6230961076775652'  WHEN NULL THEN NULL END)));SELECT ALL CASE WHEN (- (rt0.c0)) THEN (t1.c0 IN (rt0.c2)) WHEN NULL THEN ((t0.c0)LIKE(v0.c0)) WHEN CAST(rt0.c1 AS BLOB) THEN CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c0 END WHEN ((rt0.c2)OR(v0.c0)) THEN SUM(rt0.c1) WHEN COUNT(rt0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN rt0.c0 ELSE t1.c0 END END FROM t0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB))|(rt0.c0)) WHERE ((CASE WHEN '-1277791912' THEN ')M{z5V㞧' END IN ())) GROUP BY (((rt0.c2)>(v0.c0)) IN ((((('34220252')AND(t0.c0)))AND(rt0.c2))));SELECT DISTINCT (CAST(rt0.c1 AS BLOB) IN ((rt0.c1 IN (rt0.c2)))) FROM rt0, t0; -- 0ms;
SELECT ((rt0.c2)OR(((t1.c0) NOT NULL))) FROM v0;SELECT DISTINCT (~ (((x'4652') IS TRUE))), ((v0.c0)+(((rt0.c1) IS FALSE))), (+ (((t1.c0)IS NOT(v0.c0)))) FROM t0, rt0, t1 LIMIT 200101022;SELECT ALL x'' FROM t1, v0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) AS NUMERIC) FROM v0, t1, t0, rt0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT (NOT (t1.c0))) FROM v0 WHERE (((((((((CAST(x'8e1d' AS BLOB))AND(NULL COLLATE NOCASE)))OR((((0.38009308938333797, NULL, NULL)) NOT BETWEEN ((x'', 0.8529082221961621, '41e500000.dK')) AND ((0.5890424821373027, NULL, ''))))))AND(CAST(0xffffffffc21994e2 AS REAL))))AND((((0.9579953796159053, NULL, NULL, -895246650, NULL))>(('2/휵LT昖F', 0.09729071673516165, NULL, x'', '㦷I}m'))))));SELECT DISTINCT CAST(((((v0.c0)OR(rt0.c1)))AND(rt0.c0)) AS REAL), TOTAL(CASE WHEN rt0.c2 THEN v0.c0 WHEN t1.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 ELSE '0' END) OVER (), (((x''))<(((((v0.c0)) BETWEEN ((NULL)) AND ((rt0.c0)))))) FROM t1 WHERE ((((x'', x'', NULL)) BETWEEN ((0.43960604550909654 COLLATE NOCASE, ((((NULL)AND('x#3ഛz◾9{')))OR(0.16700930163231775)), ((-850004155) NOTNULL))) AND ((((x'')<('1171076237')), (~ ('763564963')), (('') IS FALSE)))));SELECT DISTINCT ((((((rt0.c0)AND(t1.c0)))AND(t0.c0))) NOTNULL) FROM v0, rt0, t1, t0 WHERE (((CAST('-1592158094' AS TEXT))%(((0.24442483782670998) IS FALSE)))); -- 0ms;
SELECT DISTINCT (('0	*\Ka')<(((rt0.c2)+(v0.c0)))), CASE WHEN rt0.c2 THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c0)) ELSE (t1.c0 IN ()) END, CASE WHEN (((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))) THEN ((t0.c0) BETWEEN (t0.c0) AND (v0.c0)) END FROM rt0, t0, t1 WHERE (CAST(CAST('1932974949' AS REAL) AS INTEGER));SELECT DISTINCT (((((t1.c0 IN (rt0.c1, rt0.c2)))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (NULL)))))OR(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0 ORDER BY (rt0.c2 IN (t1.c0)) COLLATE NOCASE ASC;SELECT DISTINCT ((x'') NOT NULL) FROM rt0, t1; -- 0ms;
SELECT DISTINCT (NOT (CAST(t0.c0 AS NUMERIC))) FROM v0;SELECT t1.c0 FROM t1 LIMIT 1655681273 OFFSET -65517532; -- 0ms;
SELECT ALL '〃9Zj1>2a]' FROM t0, v0, t1 ORDER BY (+ (((rt0.c0)GLOB(t1.c0)))) DESC, (- (((((t1.c0)AND(t1.c0)))OR(rt0.c2)))) ASC;SELECT ROW_NUMBER() OVER () FROM v0 INDEXED BY i6, t0 WHERE (((((('-1613214507') ISNULL)))<=(('''i'))));SELECT ALL ((('-573331239')GLOB('WC')) IN ()) FROM t0, v0, rt0 ORDER BY (+ (((rt0.c0)<(rt0.c2))))  NULLS FIRST; -- 0ms;
SELECT CAST(CAST(0.7367097576040271 AS REAL) AS BLOB) FROM v0, t0 WHERE ((((0.5160905248979639) BETWEEN ('Cd~i') AND (1e500)) IN ())); -- 0ms;
SELECT DISTINCT 0X39ef403a, (((v0.c0, t1.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((CAST(x'' AS INTEGER), MAX(rt0.c1), (+ ('-348028526')), ((t0.c0) BETWEEN (rt0.c1) AND (x'')), (((v0.c0, NULL, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, v0.c0)) AND ((t1.c0, rt0.c2, rt0.c1))))) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)), NULL, CASE t0.c0  WHEN t1.c0 THEN rt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN v0.c0 ELSE t1.c0 END, rt0.c0, CAST(v0.c0 AS REAL)))), (- (CAST(t1.c0 AS TEXT))) FROM rt0, t0, t1;SELECT (((rt0.c1)) BETWEEN ((MAX(v0.c0))) AND ((rt0.c2))) FROM rt0 CROSS JOIN v0 ON (((((rt0.c0, v0.c0, rt0.c2))>((rt0.c2, v0.c0, v0.c0))))LIKE(((((rt0.c2)OR(t1.c0)))AND(t1.c0)))) FULL OUTER JOIN t0 ON ((((rt0.c1 IN (rt0.c0, v0.c0, rt0.c0)), 0.34231037277327003, '-1979908034'))=((IFNULL(rt0.c0, 'q'), CAST(rt0.c2 AS REAL), ((t0.c0) IS TRUE)))) INNER JOIN t1 ON (((rt0.c0))>=((((rt0.c1)||(t1.c0)))));SELECT DISTINCT CASE WHEN '0.2296053123014038' THEN t0.c0 ELSE t1.c0 END COLLATE RTRIM FROM t1 ORDER BY ((((('1154333262'))=((rt0.c2)))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) AND (((t0.c0) BETWEEN (v0.c0) AND (rt0.c2)))) ASC;SELECT DISTINCT MIN(v0.c0, CASE WHEN t1.c0 THEN NULL ELSE rt0.c1 END) FROM v0 WHERE ((+ (ABS(-280650930)))) GROUP BY x'a70c';SELECT (((rt0.c0) ISNULL) IN (t0.c0 COLLATE RTRIM, rt0.c0 COLLATE BINARY)) FROM rt0, v0, t0, t1 WHERE ('-202629379') LIMIT 1004220601; -- 0ms;
SELECT (((~ (t0.c0)))==(((t1.c0) IS FALSE))), 0.27655386633268864, (((- (rt0.c0)))||(((rt0.c0) IS FALSE))) FROM t0, t1;SELECT DISTINCT ((((t0.c0) BETWEEN (NULL) AND (rt0.c0)))+(((((rt0.c2)AND(rt0.c0)))OR(t1.c0)))) FROM v0, t0, rt0 WHERE (CAST((NULL IN ('-1894768406', x'')) AS INTEGER));SELECT ALL LENGTH(v0.c0) COLLATE NOCASE, 0Xffffffff9c5bc9d2, (((- (0.6192660583293421))) NOTNULL), UNLIKELY(DISTINCT (~ (rt0.c2))), (((CASE WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN '156154762' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END, ((t0.c0) ISNULL), CASE WHEN v0.c0 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN 'I~' THEN rt0.c1 ELSE rt0.c2 END))<>((((((x'')OR(t0.c0)))AND(rt0.c0)), CAST(rt0.c0 AS INTEGER), CAST(rt0.c1 AS REAL)))) FROM rt0, v0, t1, t0; -- 1ms;
SELECT ALL MAX(((rt0.c1)<>(rt0.c0))) FROM rt0, t1, t0 NOT INDEXED; -- 0ms;
SELECT ALL t0.c0, (((- (rt0.c1)))>=(((((((((rt0.c0)OR(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))), (((v0.c0)) BETWEEN ((((rt0.c1)/(t1.c0)))) AND ((((t1.c0)%(v0.c0))))) FROM v0, t0, rt0;SELECT DISTINCT (- (CAST(t0.c0 AS REAL))), (LIKELY(t1.c0) IN ()), TYPEOF((v0.c0 IN ())) FROM rt0 WHERE (CASE (((('-1436396057')AND(356030539)))AND('1065711156'))  WHEN CAST(-117319469 AS INTEGER) THEN CASE 0.09019241660313393  WHEN NULL THEN 'G槤GPe䱅5[>' END WHEN (('1383334426')-('1988703334')) THEN CASE WHEN x'5565' THEN 'WK' END WHEN CASE 0.1593782358349608  WHEN NULL THEN '1728682547' ELSE 731034163 END THEN ((x'') ISNULL) ELSE (- (x'')) END);SELECT ALL 6.11845674E8 FROM rt0, t1, t0, v0; -- 0ms;
SELECT DISTINCT ((TYPEOF(rt0.c2))>(((rt0.c2) IS TRUE))) FROM v0 ORDER BY ((((0X7baabb61)>=(t1.c0)))>=(((x'')%(rt0.c1))));SELECT DISTINCT GROUP_CONCAT(COUNT(((((t1.c0)OR(rt0.c1)))OR(t1.c0)))) FROM t1, v0;SELECT DISTINCT ((t1.c0)*(CAST(rt0.c2 AS INTEGER))), (- (((rt0.c1)-(rt0.c0)))), ((((json_patch(rt0.c2, t0.c0))OR(CAST(0.0896109077677898 AS TEXT))))OR(t1.c0 COLLATE RTRIM)) FROM rt0, t0, t1, v0; -- 0ms;
SELECT DISTINCT (((rt0.c1, t1.c0, v0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c1))), t0.c0, ((rt0.c2)<<(t0.c0)))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN x'' WHEN v0.c0 THEN v0.c0 END, ((rt0.c0)==(v0.c0)), CAST(t0.c0 AS BLOB)))) FROM t1, v0, t0, rt0; -- 0ms;
SELECT (((rt0.c1 IN (rt0.c2)))GLOB((+ (NULL)))) FROM rt0, t0 WHERE (((((x'') ISNULL))=((((x'fde5', '', NULL))<=((0x10909541, '-262965314', x'')))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)) AS REAL), ((CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE '|R9HNl7' END) BETWEEN (((((t1.c0)AND(v0.c0)))OR(NULL))) AND (t0.c0 COLLATE RTRIM)), (((TOTAL(rt0.c1)))>((GROUP_CONCAT(rt0.c2)))) FROM rt0;SELECT DISTINCT LEAD(UNLIKELY(DISTINCT TYPEOF(rt0.c0)), '1608837692', ((rt0.c0)AND(rt0.c0)) COLLATE RTRIM) OVER (), ((((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))) NOT BETWEEN ((((rt0.c2, t0.c0, rt0.c0))>((v0.c0, t1.c0, rt0.c0)))) AND (v0.c0 COLLATE BINARY)), '[ᮝ' FROM rt0 WHERE ((((x'')) BETWEEN ((TRIM(x'', x'd926'))) AND (((~ ('uz'))))));SELECT ALL UNLIKELY(rt0.c0) FROM v0 WHERE (((-5.06390263E8) ISNULL) COLLATE BINARY);SELECT (+ (((v0.c0)LIKE(rt0.c2)))), (NOT (((NULL)<(t1.c0)))), CAST((((t0.c0, rt0.c0, x'')) NOT BETWEEN ((rt0.c0, rt0.c1, t1.c0)) AND ((v0.c0, rt0.c2, v0.c0))) AS INTEGER), COUNT(*), ((MIN(rt0.c2))|(NULL)) FROM rt0, t0 WHERE ((+ ('1139888244' COLLATE BINARY)));SELECT ALL ((x'763f4f48') BETWEEN (((0.8663999039405228) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((NULL IN (rt0.c0)))), UNLIKELY(DISTINCT (v0.c0 IN ())), ((((((((((((t0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(t1.c0)))OR(rt0.c2)))AND(((t1.c0)-(t1.c0)))))OR(CASE WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END)) FROM t0, t1, rt0 GROUP BY rt0.c2;SELECT DISTINCT MIN((((rt0.c1, rt0.c2, '-2120603132')) NOT BETWEEN ((rt0.c2, rt0.c1, 0X75b46331)) AND ((t0.c0, t0.c0, rt0.c0)))), ((((rt0.c1) IS TRUE)) IS FALSE), ((NULL) NOT BETWEEN ('0.25232878181001106') AND (CAST(v0.c0 AS TEXT))), TOTAL(rt0.c0), ((((v0.c0) NOTNULL))*(NULLIF(DISTINCT t0.c0, t1.c0))) FROM v0 ORDER BY ((((((t1.c0)AND(t1.c0)))OR(rt0.c1)))>>(rt0.c2)) DESC  NULLS LAST;SELECT DISTINCT COUNT(((rt0.c0) BETWEEN (rt0.c1) AND (' ma8v臚T'))), ROUND(AVG(v0.c0), (((v0.c0))==((t0.c0)))), (((((('),')AND(rt0.c0)))OR(rt0.c0)))%(rt0.c2)) FROM rt0, v0 WHERE (UNLIKELY(DISTINCT ((x'ec35') BETWEEN (x'') AND ('919099141'))));SELECT DISTINCT '0.7336393508124704', CAST(rt0.c0 COLLATE NOCASE AS BLOB), ((((t1.c0) NOTNULL))GLOB((rt0.c1 IN ()))) FROM v0, t0 WHERE (CASE WHEN ((NULL)&(0.562059663178942)) THEN ((0Xffffffffa1199872)%(0.9595348343206139)) END);SELECT rt0.c2 FROM v0, rt0 WHERE (((((((((x'')OR(0Xffffffffb7b6a48e)))OR(NULL)))OR(((((0.9432353345286434)AND(x'30d2')))AND(x'47eb62be')))))OR(((x'')*(''))))); -- 0ms;
SELECT ((CASE rt0.c1  WHEN x'cff2' THEN rt0.c2 END)<>(v0.c0)) FROM t0, t1 WHERE ((((((('AA0)')<=('C(')))OR(UPPER(x''))))OR(((NULL)+(NULL)))));SELECT DISTINCT CAST(((rt0.c2) BETWEEN (v0.c0) AND (t0.c0)) AS REAL) FROM t1 WHERE (((NULL COLLATE RTRIM) NOT NULL)) LIMIT 1326390489;SELECT DISTINCT LAG(CASE (NOT (t1.c0))  WHEN t1.c0 COLLATE RTRIM THEN t0.c0 COLLATE NOCASE END, ((((t1.c0) BETWEEN (x'') AND (t1.c0))) NOT BETWEEN (load_extension(t0.c0, t0.c0)) AND (t1.c0 COLLATE RTRIM)), (+ (((t1.c0)OR(t1.c0))))) OVER () FROM t1, t0 WHERE ((((- ('')))OR(((x'')IS NOT('2112210500')))));SELECT ALL CASE ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CASE 'l'  WHEN rt0.c1 THEN rt0.c0 END THEN (t0.c0 IN ()) END FROM rt0, t1 GROUP BY (((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((t1.c0, '', rt0.c2)))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)))) HAVING ((rt0.c1)!=(rt0.c1)) COLLATE BINARY ORDER BY ((((v0.c0) IS FALSE))OR(((rt0.c0)AND(v0.c0)))), CAST(((((v0.c0)AND(v0.c0)))OR(rt0.c1)) AS NUMERIC)  NULLS LAST;SELECT ALL (v0.c0 COLLATE NOCASE IN (t1.c0 COLLATE NOCASE)) FROM t0, rt0 ORDER BY ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(CAST(t0.c0 AS BLOB)));SELECT DISTINCT rt0.c0 FROM v0, t1, t0, rt0 WHERE ((((NOT ('-40230285')))==((((0.4241707922033623))>(('-821214613')))))); -- 1ms;
SELECT DISTINCT t0.c0 FROM t0, rt0, t1, v0; -- 0ms;
SELECT ALL AVG((t0.c0 IN ())) FILTER(WHERE (((('-405323083')OR(((v0.c0) BETWEEN (t1.c0) AND (rt0.c1)))))AND((t1.c0 IN ())))) OVER (), CASE WHEN (((t1.c0))<>((t0.c0))) THEN ((v0.c0)<=(x'93bf')) END, ((SQLITE_COMPILEOPTION_USED(t0.c0))<<(TRIM(t1.c0))) FROM t1 GROUP BY CASE WHEN (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((t0.c0, t0.c0, rt0.c1)) AND ((t1.c0, rt0.c1, rt0.c0))) THEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END HAVING 1458856572 ORDER BY (((('')AND((v0.c0 IN ()))))OR(((x'') NOTNULL))), '';SELECT ALL '', (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('M[ A堎')))) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (CAST(t0.c0 AS INTEGER))), ((((((((((((rt0.c1)OR(rt0.c2)))AND(t0.c0)))OR(v0.c0)))AND(v0.c0)))OR(highlight(rt0.c1, x'', rt0.c1, t0.c0))))AND(((((rt0.c2)AND(rt0.c2)))AND(v0.c0)))) FROM t0, t1, v0 WHERE ((((0.65204378739579)!=(x'')) IN ()));SELECT ALL ((((x'944f') NOT BETWEEN (rt0.c1) AND (rt0.c2)))||(((rt0.c0) NOTNULL))), v0.c0, COUNT(CAST(v0.c0 AS NUMERIC)) COLLATE NOCASE, CASE WHEN NULL THEN COUNT(rt0.c1) END, t0.c0 FROM v0, t1, rt0 WHERE (((((NULL) BETWEEN ('<h') AND ('-602311155')))>>((('-202629379')LIKE(x'')))));SELECT DISTINCT CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c0 WHEN 0Xbdcedc THEN rt0.c1 ELSE t0.c0 END COLLATE NOCASE, ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(CASE WHEN '-993716728' THEN rt0.c1 ELSE t0.c0 END)), ((((((((CAST(t0.c0 AS TEXT))OR((~ (0.06654419236684328)))))AND(LIKELY(DISTINCT x'2bf7'))))AND(((((v0.c0)OR(rt0.c2)))OR(v0.c0)))))OR(MIN(v0.c0))) FROM rt0, t0, v0, t1 WHERE ((('()' IN ()) IN (INSTR(NULL, x'')))) ORDER BY ((rt0.c1) NOT BETWEEN (t0.c0) AND ('-506390263')) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
SELECT '#1' FROM v0, rt0; -- 0ms;
SELECT DISTINCT LAG(rt0.c1, CAST(v0.c0 AS REAL) COLLATE NOCASE, rt0.c0) OVER ( ORDER BY ((((((rt0.c0)LIKE(rt0.c2)))OR(((v0.c0)=(t0.c0)))))OR(((rt0.c1)AND(t0.c0)))) ASC  NULLS LAST) FROM rt0, v0, t0, t1; -- 1ms;
SELECT ALL ((((0.3364922110581444)>(t1.c0)))LIKE((t1.c0 IN (t0.c0)))), (((v0.c0)) NOT BETWEEN (((((''))<=(('976652282'))))) AND (((~ ('bSc'))))), ((MIN(v0.c0))LIKE(MAX(t0.c0))) FROM t0, t1, v0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM v0; -- 0ms;
SELECT ALL SUM(CAST(v0.c0 AS NUMERIC)) OVER (), ((((rt0.c1)<>(rt0.c2))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1)*(t0.c0)))), AVG(CASE 'Tu'  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END) FROM t0, v0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2)GLOB('wLCr翽}o2')) COLLATE NOCASE COLLATE BINARY, ((((((((((t1.c0)OR(rt0.c0)))AND(v0.c0)))AND(rt0.c0)))AND(t0.c0)))*(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)))), (((rt0.c2, t0.c0, t0.c0)) BETWEEN ((rt0.c2, rt0.c1, MAX(v0.c0))) AND ((SUM(rt0.c0), (rt0.c2 IN ()), AVG(v0.c0)))) FROM rt0, t0 WHERE (0.4603397763720697) LIMIT -1671706158 OFFSET 188106168;SELECT ALL (((((t0.c0)) BETWEEN ((rt0.c1)) AND ((t1.c0)))) NOT BETWEEN (((t1.c0)+(t0.c0))) AND (TYPEOF(DISTINCT rt0.c1))) FROM v0;SELECT CAST((~ (rt0.c2)) AS NUMERIC) FROM t1 INNER JOIN t0 ON ((((v0.c0) NOT NULL))+(CAST(t0.c0 AS INTEGER))) WHERE (((x'') BETWEEN (((0.5300187441005323)>(''))) AND (TIME(x'69ca', 0.9690578336203013, -701999299)))) LIMIT 266125551 OFFSET -751933873;SELECT (((t1.c0)*(t0.c0)) IN ()) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((NULL) ISNULL) FROM t0 WHERE (((-712610978)IS(x'e328')) COLLATE NOCASE) ORDER BY ((CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 END) BETWEEN (((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(t1.c0 AS TEXT)));SELECT (((rt0.c0) IS FALSE) IN (((1454532665) NOT BETWEEN (v0.c0) AND (rt0.c2)), ((t1.c0)IS NOT(v0.c0)))) FROM t1, v0;SELECT ALL PERCENT_RANK() OVER (), LTRIM((((rt0.c1))<>((rt0.c1)))), CAST(rt0.c1 AS INTEGER) FROM rt0, t1; -- 1ms;
SELECT DISTINCT SUM((+ (rt0.c1))) FILTER(WHERE (((NOT (rt0.c2))) NOT NULL)) OVER () FROM rt0, t0, v0; -- 0ms;
SELECT CASE CASE t0.c0  WHEN x'7f5438fa' THEN rt0.c1 END  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL)) THEN (((t0.c0))!=((rt0.c0))) ELSE rt0.c2 COLLATE RTRIM END, ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))>=(TOTAL(t0.c0))), (((t1.c0))>=((t1.c0))) COLLATE BINARY FROM rt0, t0, v0 WHERE (x'');SELECT ALL x'7a48' FROM v0, t1; -- 0ms;
SELECT DISTINCT COUNT((rt0.c2 IN ())) OVER (), ((((rt0.c1)IS(rt0.c2))) IS TRUE), (((v0.c0)) BETWEEN ((((((t1.c0)AND(rt0.c1)))AND(v0.c0)))) AND ((((t1.c0) IS FALSE)))) FROM t0, t1, v0;SELECT DISTINCT ((SQLITE_SOURCE_ID())|((('1䈼\nI')OR(v0.c0)))) FROM t1, v0, t0 ORDER BY (((t0.c0 IN ())) IS FALSE) DESC  NULLS FIRST; -- 0ms;
SELECT ((CAST(rt0.c0 AS REAL))<=(((rt0.c2) NOT NULL))), (((('t鸆Q')OR(COUNT(t1.c0))))AND(rt0.c2)), x'' COLLATE RTRIM, HEX(((rt0.c2) NOTNULL)), COUNT(((t0.c0)|(v0.c0))) OVER () FROM t0;SELECT DISTINCT (((((rt0.c0))<((NULL)))) NOT NULL) FROM v0, t1 GROUP BY CAST((((v0.c0))!=((t0.c0))) AS REAL), (((((((((t0.c0)AND(rt0.c2)))OR(t1.c0)))AND(rt0.c2)))AND(538678836)) IN ()), ((((((((LIKELY(DISTINCT rt0.c1))OR((NULL IN ()))))AND(t0.c0)))OR(rt0.c1 COLLATE BINARY)))OR((~ (t1.c0)))) HAVING SUM(((((t1.c0)OR(t1.c0)))OR(rt0.c2)));SELECT DISTINCT TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 END) FROM v0, t1, rt0 CROSS JOIN t0 ON (NOT (0.30257576550434484 COLLATE NOCASE)); -- 0ms;
SELECT (NOT (CAST(rt0.c0 AS TEXT))), TOTAL(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END), ((((rt0.c0) BETWEEN (t0.c0) AND (v0.c0)))=(CASE t0.c0  WHEN t1.c0 THEN t1.c0 ELSE rt0.c0 END)) FROM rt0, v0;SELECT DISTINCT ((((((((((((SUM(0.543663961945696))OR(GROUP_CONCAT(t1.c0))))OR(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((NULL, rt0.c2, rt0.c0)) AND ((rt0.c0, '-803090130', rt0.c2))))))OR(((v0.c0)&(rt0.c0)))))AND(CASE rt0.c2  WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 ELSE t1.c0 END)))AND(((0.008473525598175824)&(rt0.c2)))) FROM t0, v0, rt0, t1 WHERE ((CASE WHEN NULL THEN x'' ELSE 'O!oahT' END IN ())); -- 1ms;
SELECT DISTINCT (NOT (((((((((rt0.c1)OR(rt0.c0)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))) FROM rt0 WHERE (((((0.5209208371204755) ISNULL))<(-466008471 COLLATE NOCASE)));SELECT DISTINCT TOTAL((rt0.c1 IN ())) FROM t0, rt0 ORDER BY rt0.c0, (((~ (t1.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN 0x313657b6 ELSE rt0.c1 END) AND (CASE v0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)) ASC LIMIT -1483692531;SELECT ((((rt0.c0)%(t0.c0))) NOT BETWEEN ((((-348028526, rt0.c0, t0.c0)) BETWEEN ((t0.c0, t1.c0, t0.c0)) AND ((t0.c0, v0.c0, rt0.c2)))) AND (((rt0.c1)&(t0.c0)))) FROM rt0, v0 WHERE (highlight(((x'') ISNULL), ((NULL) IS TRUE), (((0.512811927749418, 0.5375917641500215, 0Xffffffffacefaf40)) BETWEEN ((NULL, x'', x'')) AND ((NULL, NULL, '-1239538391'))), ((0xffffffffd021d12e) NOT BETWEEN (-1.259719936E9) AND (1420845475)))) GROUP BY ((COALESCE(DISTINCT rt0.c1, v0.c0, rt0.c0, 0.8826539743452412)) ISNULL);SELECT DISTINCT HEX(((rt0.c2)<>(t0.c0))) FROM v0, t1 GROUP BY CAST(((((t0.c0)AND(t1.c0)))OR(v0.c0)) AS TEXT), (NOT (((v0.c0)>>(rt0.c2)))), t1.c0;SELECT DISTINCT COUNT(*) OVER () FROM v0, t0 LEFT OUTER JOIN rt0 ON (t1.c0 IN ()) WHERE (((('*z', NULL, x'')) BETWEEN (((- ('2078962843')), ((0.6500918115798303) BETWEEN (-7.12610978E8) AND (NULL)), (((((((('0.0')OR(1378265843)))OR(NULL)))OR(NULL)))OR(0.9611760987363315)))) AND (((('Xu[]''P') BETWEEN (0.47123227101936527) AND (-1325174998)), (('')GLOB(NULL)), MIN(NULL, x'7247'))))); -- 0ms;
SELECT ALL CASE (- (t1.c0))  WHEN rt0.c0 THEN SUM(t1.c0) END FROM rt0, t1 WHERE (CASE WHEN NULL THEN 0.11423201445037601 END COLLATE NOCASE); -- 3ms;
SELECT DISTINCT 0.6880276450920348, LAST_VALUE((((('b[')OR(rt0.c1)))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))))) OVER (), (((((+ (t0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c1, t1.c0, t0.c0))<=((t0.c0, t1.c0, t0.c0))))) FROM rt0;SELECT ALL ((MIN(t0.c0)) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CAST(rt0.c1 AS REAL))) FROM rt0, t1, t0, v0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1)) COLLATE NOCASE) OVER () FROM t1 NOT INDEXED, t0, v0, rt0 WHERE (((x'') NOT NULL)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY (((((((((rt0.c2 IN (t0.c0, t1.c0)))AND(rt0.c0)))OR(t1.c0)))OR(MIN(t0.c0, rt0.c1))))AND(v0.c0 COLLATE BINARY))  NULLS LAST), ((load_extension(rt0.c2, rt0.c2))GLOB(CAST(t1.c0 AS NUMERIC))), rtreenode(CAST(t0.c0 AS NUMERIC), rt0.c1 COLLATE RTRIM) FROM t0, rt0, t1, v0 WHERE (((CAST(NULL AS REAL)) ISNULL)); -- 0ms;
SELECT ALL (((rt0.c2)&(NULL)) IN ()), SUM(json_type(t1.c0)) FILTER(WHERE (((rt0.c0)GLOB(t0.c0)) IN ())) OVER (), ((rt0.c1 COLLATE BINARY)IS NOT(CAST(t1.c0 AS NUMERIC))) FROM v0 FULL OUTER JOIN t0 ON CAST(((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)) AS REAL) LEFT OUTER JOIN t1 ON (- ('-2060797193'));SELECT DISTINCT FIRST_VALUE(CASE v0.c0  WHEN v0.c0 THEN ((t1.c0)/(v0.c0)) WHEN (t1.c0 IN (t1.c0, t1.c0)) THEN v0.c0 COLLATE NOCASE WHEN COALESCE(t1.c0, t1.c0) THEN CAST(v0.c0 AS INTEGER) ELSE (t1.c0 IN ()) END) OVER () FROM v0, t1; -- 0ms;
SELECT DISTINCT ((((t0.c0)AND(t1.c0)))OR(rt0.c1)) COLLATE RTRIM, FIRST_VALUE(((((rt0.c1) NOTNULL)) NOT NULL)) OVER ( PARTITION BY COALESCE(DISTINCT ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (+ (rt0.c0))), x'a491', CASE WHEN ((t1.c0)AND(x'')) THEN (NOT (rt0.c1)) ELSE ((('WK')) BETWEEN ((t0.c0)) AND ((t0.c0))) END, (CAST(t1.c0 AS INTEGER) IN (''))), FIRST_VALUE((((t1.c0) BETWEEN (t1.c0) AND (0.7234691007296782)) IN (CAST(rt0.c2 AS BLOB)))) OVER () FROM rt0, t0, t1; -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)&(rt0.c2)) THEN ((((t0.c0)AND(v0.c0)))OR(rt0.c0)) WHEN t0.c0 COLLATE BINARY THEN (('')%(rt0.c2)) WHEN ((((t1.c0)AND(rt0.c1)))AND(t1.c0)) THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) ELSE (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END FROM rt0 WHERE ('-910290121');SELECT ALL ((x'') NOT BETWEEN (UNLIKELY(t1.c0)) AND (((rt0.c2)LIKE(rt0.c0)))) FROM t0 NOT INDEXED WHERE ((((((0.4729887097357218 IN ()))OR(-1412044407)))OR(CAST('q㦷' AS INTEGER)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND (((0.3926022107914333 IN ())))) DESC;SELECT DISTINCT (((('') ISNULL))=(rt0.c0)), ((TOTAL(rt0.c1)) NOT BETWEEN (((t0.c0)>=(rt0.c0))) AND (AVG(t1.c0))), (((v0.c0)-(rt0.c0)) IN ()) FROM rt0, t1, t0, v0; -- 0ms;
SELECT DISTINCT DATE((t1.c0 IN ()), ((rt0.c2)<=(rt0.c0)), t0.c0, rt0.c1, (t1.c0 IN ())) FROM t1, t0;SELECT ALL (((t1.c0)=(rt0.c2)) IN ()) FROM t1, rt0, v0 WHERE (((((NULL) ISNULL)) NOT BETWEEN ((((''))>((x'')))) AND ((0.7386072498616818 IN (-751933873))))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0, rt0, t1, v0 WHERE (CAST(((0.0441078909794369) IS FALSE) AS BLOB)) LIMIT 441020721 OFFSET 254744406; -- 0ms;
SELECT DISTINCT ((((rt0.c2)!=(rt0.c1))) NOT NULL) FROM t1 WHERE ((((((0X313657b6)OR(NULL)))OR(NULL)) IN ())) GROUP BY (- ((t0.c0 IN ()))) ORDER BY ((((x''))>((rt0.c0))) IN ())  NULLS LAST;SELECT DISTINCT (- (rt0.c2)) COLLATE BINARY FROM t1, rt0 INDEXED BY i6, t0;SELECT DISTINCT CAST(((t0.c0) IS TRUE) AS NUMERIC), AVG(((rt0.c1)==(v0.c0))), (((t1.c0)) BETWEEN (((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((((t0.c0) IS TRUE)))) FROM t1 NOT INDEXED, v0, rt0, t0; -- 0ms;
SELECT ALL SUM(CAST(rt0.c0 AS TEXT)) FROM v0;SELECT (((NOT (v0.c0))) NOTNULL) FROM t0, t1, v0, rt0 WHERE (ROUND(((0.7892826889432477)LIKE('')), '-803090130')) GROUP BY CAST(TRIM(DISTINCT rt0.c0, t0.c0) AS REAL) HAVING (((rt0.c2 IN ())) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (COUNT(*))) LIMIT -716393650 OFFSET 1491821021; -- 0ms;
SELECT ((t0.c0) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((((rt0.c2, t0.c0, '', rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t1.c0, t1.c0, v0.c0)) AND ((rt0.c0, rt0.c2, -9.93716728E8, v0.c0, v0.c0))))) FROM v0 WHERE ((NOT (CAST(0.05693389262794213 AS INTEGER))));SELECT DISTINCT NULL FROM t0, v0, t1 WHERE ((((~ (NULL)))OR('-993716728'))); -- 1ms;
SELECT DISTINCT (((rt0.c0 COLLATE RTRIM))<=((CAST(v0.c0 AS BLOB)))) FROM rt0, t1 INDEXED BY i6, t0 WHERE (((CAST(0.5228677794282947 AS TEXT)) BETWEEN (CASE WHEN '1595878695' THEN '0.18240195125358816' ELSE -261149990 END) AND ((~ (NULL)))));SELECT CASE AVG(rt0.c1)  WHEN (((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN t0.c0 COLLATE RTRIM ELSE CASE rt0.c0  WHEN rt0.c1 THEN t1.c0 WHEN v0.c0 THEN rt0.c0 WHEN t1.c0 THEN t0.c0 END END, ((((((((((rt0.c0)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))IS(((rt0.c2)LIKE(rt0.c1)))), ((((rt0.c1)>=(v0.c0)))<(((t1.c0)*(t0.c0)))) FROM rt0 WHERE ((((NOT ('-601876246')))>((('-1291283897') IS FALSE)))) LIMIT -839297653;SELECT (v0.c0 IN ()) COLLATE NOCASE FROM t0 LIMIT -1574280171; -- 0ms;
SELECT ((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(t1.c0)))OR(rt0.c2)))/(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM t0, v0, rt0 WHERE (((((-1636412029)>(0.7485839519594739)))LIKE((('x#3ഛz◾9{')||(427197882)))));SELECT DISTINCT ((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) FROM t0, t1, rt0, v0 WHERE (((((((-165140519) NOT BETWEEN (x'97fd1715') AND (NULL)))AND((+ (-1.716688412E9)))))OR(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE ((('1483675349' COLLATE RTRIM)IS NOT(((0.7493092977895797) IS FALSE)))); -- 0ms;
SELECT ALL COUNT(CASE t1.c0  WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END COLLATE BINARY), ((((((((((((((((NULL)AND(t1.c0)))AND(rt0.c0)))OR(v0.c0)))OR(rt0.c1)))OR(((((rt0.c1)OR(0.05741866023240905)))AND(t1.c0)))))AND(((t1.c0)AND(t1.c0)))))AND(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND((NOT (rt0.c0)))), (((((((((((rt0.c1)) NOT BETWEEN ((0.0959721125862526)) AND ((t1.c0))))OR(((rt0.c2) IS FALSE))))OR(ABS(rt0.c2))))OR(t1.c0 COLLATE NOCASE)))AND(t0.c0 COLLATE NOCASE)) FROM rt0, t1 GROUP BY NULLIF(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)), CAST(t0.c0 AS BLOB)) ORDER BY ((((t0.c0)OR(rt0.c2)))OR(CAST(rt0.c1 AS BLOB))) DESC  NULLS FIRST;SELECT ALL (SQLITE_SOURCE_ID() IN (t1.c0)), (((v0.c0) BETWEEN (t0.c0) AND (NULL)) IN (((t0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)), t0.c0 COLLATE RTRIM)), ((NULL)GLOB(((rt0.c2)%(rt0.c0)))), ((t1.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE, ((((rt0.c2) NOTNULL)) NOT NULL) FROM t0, t1, v0, rt0 WHERE (TYPEOF(NULL COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()) FROM rt0, v0, t0, t1 WHERE ((('5' COLLATE NOCASE) IS TRUE)) ORDER BY ((rt0.c2)LIKE(((v0.c0) BETWEEN (t1.c0) AND (rt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((MAX(v0.c0))-(((v0.c0)&(v0.c0)))) FROM t1, rt0, t0, v0 GROUP BY CAST((- (rt0.c1)) AS REAL), ((CAST(0.9579953796159053 AS INTEGER))>>('!cL')), (((~ (t1.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 WHEN t1.c0 THEN rt0.c1 END)); -- 1ms;
SELECT DISTINCT ((('-1592158094', (~ (rt0.c1)), SUM(rt0.c2)))>((NULL, x'', '1560660299' COLLATE NOCASE))) FROM rt0, v0; -- 0ms;
SELECT ALL ((((t1.c0)GLOB(t0.c0))) ISNULL) FROM t1 WHERE (0.668167583882613);SELECT t1.c0 FROM t1; -- 0ms;
SELECT (NOT (CAST(rt0.c0 AS BLOB))) FROM t1 WHERE (CASE WHEN CAST(x'6087' AS REAL) THEN ((935185346) NOT NULL) WHEN CASE x''  WHEN '285487741' THEN '' WHEN '2120878081' THEN NULL WHEN x'' THEN 0.5234513734934824 ELSE 0.023404313050251924 END THEN ((NULL) NOTNULL) WHEN (('1701755863')>>('')) THEN ((0.20706943882024564) IS FALSE) ELSE (('-2059824402') IS TRUE) END) INTERSECT SELECT DISTINCT CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END THEN (+ (NULL)) ELSE t0.c0 END FROM t0, rt0;SELECT ALL ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c2 END) BETWEEN (rt0.c1 COLLATE NOCASE) AND (NULL)) FROM t0, t1 GROUP BY ((((t0.c0 COLLATE NOCASE)OR(((((((((t1.c0)AND(t1.c0)))OR(v0.c0)))AND(rt0.c2)))OR(v0.c0)))))OR(((((((((rt0.c2)AND(v0.c0)))AND(rt0.c1)))AND(t1.c0)))AND(v0.c0)))), ((t1.c0)IS((- (t0.c0)))), ((((CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END)OR(CAST(t0.c0 AS INTEGER))))OR(UPPER(rt0.c2))) HAVING ((('')) NOT BETWEEN ((NULL COLLATE BINARY)) AND ((ABS(rt0.c0))));SELECT DISTINCT (((CASE WHEN rt0.c0 THEN t1.c0 ELSE '0.9528019885225839' END))!=((((rt0.c0) IS FALSE)))) FROM t1, v0, t0;SELECT ((rt0.c1) BETWEEN (((v0.c0)||(v0.c0))) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))) FROM rt0 WHERE (-914509274 COLLATE RTRIM);SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER))>(((t0.c0) BETWEEN (t0.c0) AND (v0.c0)))) FROM rt0, t0 WHERE (((x'da8c' COLLATE NOCASE)/(((((x'a9415605')AND(0.5137029598659315)))AND(x'')))));SELECT DISTINCT CASE WHEN COUNT(rt0.c1) THEN ((rt0.c1) NOT NULL) END FROM t1 WHERE (((((0.5776498058279066)<<(x'')))*(0.8721191843876744)));SELECT DISTINCT x'ce84', ((rt0.c1 COLLATE BINARY)%(v0.c0)), COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING) FROM t1, t0, rt0, v0 WHERE (CAST(CAST(NULL AS NUMERIC) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))*(((v0.c0)>>(t1.c0)))) FROM v0 WHERE ((((((((((('') BETWEEN (0.8493726501656612) AND (NULL)))OR(((0.23063287403785637)+('0.1791282057292739')))))AND(('W ' IN ()))))AND(((('>\r~', x'e583', '-1313544576'))!=(('1973401195', 0.1368173444912265, '-1682559793'))))))AND(((x'297f')||(NULL)))));SELECT DISTINCT ((((1167534100) NOT BETWEEN (rt0.c2) AND (rt0.c1)))<<((((t0.c0))<=((rt0.c0))))) FROM t1 WHERE (((0.6539835873712624)|((('')>(NULL)))));SELECT ((((t0.c0)%(rt0.c0)))/(rt0.c1 COLLATE NOCASE)) FROM rt0, v0 WHERE ((~ (x'')) COLLATE RTRIM) GROUP BY (((+ (rt0.c0))) BETWEEN (((((((((((((rt0.c2)AND(t0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(t1.c0)))AND(rt0.c1)))AND(t0.c0))) AND (CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 END)) HAVING ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE COLLATE RTRIM LIMIT 1516529527 OFFSET -1067712190;SELECT ALL (+ ((((t0.c0))==((rt0.c2))))), (+ (v0.c0 COLLATE RTRIM)), TOTAL(rt0.c1) OVER () FROM rt0, t1 WHERE ((+ (6.78747584E8 COLLATE RTRIM)));SELECT ALL ((COUNT(*)) NOTNULL) FROM v0, rt0, t1; -- 0ms;
SELECT DISTINCT (+ (((rt0.c0)%(rt0.c0)))), ((((((((((((((v0.c0)OR('223138145')))AND(rt0.c0)))AND(t1.c0)))AND(t1.c0)))AND(v0.c0)))AND(rt0.c1)))<<(COUNT(rt0.c2))), ((((CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN 0.4597931526950433 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE t0.c0 END)OR((NOT (rt0.c1)))))AND((rt0.c0 IN (rt0.c2, t1.c0)))) FROM t1, v0, t0, rt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOTNULL)  NULLS LAST, TYPEOF(rt0.c1) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 INDEXED BY i46 WHERE (0.05809211593440289);SELECT DISTINCT (TOTAL(rt0.c2) IN (rt0.c2)) FROM v0, t0, t1;SELECT DISTINCT ((((t0.c0) IS TRUE)) NOTNULL) FROM v0, t0, rt0; -- 0ms;
SELECT DISTINCT ((((v0.c0) IS TRUE)) BETWEEN ((((t0.c0))!=((t0.c0)))) AND (COUNT(*))) FROM t0, rt0 WHERE ((((((('''2Fw歞6')<>(0.37126215895009007)))AND(((x'') NOT BETWEEN (NULL) AND (0X75d72a90)))))OR(x'' COLLATE BINARY)));SELECT GROUP_CONCAT(((rt0.c2)/(t1.c0))) FROM t0, rt0, v0 WHERE ((~ ('-751933873')) COLLATE NOCASE) GROUP BY 0.34274981696269247;SELECT DISTINCT QUOTE(((0.1604497294702255) NOT BETWEEN (rt0.c1) AND (rt0.c0))) FROM t0, v0, t1, rt0; -- 0ms;
SELECT DISTINCT (+ (t0.c0 COLLATE BINARY)), (((rt0.c2)) BETWEEN (((+ (t0.c0)))) AND ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))), ((((v0.c0)OR(rt0.c0 COLLATE BINARY)))OR((((v0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))))) FROM t0, v0 ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c1)*(t1.c0)) WHEN ((rt0.c1)*(rt0.c1)) THEN (~ (t1.c0)) WHEN (((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))) THEN rt0.c2 ELSE CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN NULL WHEN t1.c0 THEN rt0.c0 END END, (((rt0.c0)) BETWEEN ((rt0.c1)) AND (((~ (v0.c0)))))  NULLS FIRST;SELECT DISTINCT COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS), (~ (((rt0.c0) IS TRUE))), (((rt0.c2)) BETWEEN (((NOT (t1.c0)))) AND ((CAST(rt0.c2 AS TEXT)))) FROM t0 WHERE (rtreenode((((0.6418015084793226)) NOT BETWEEN ((NULL)) AND ((x'8f42'))), 0xffffffffd5866b5e COLLATE RTRIM));SELECT DISTINCT TOTAL_CHANGES(), (- (json_patch(-2.036016661E9, v0.c0))), (((rt0.c0))=((t0.c0))) COLLATE RTRIM, CAST(COUNT(v0.c0) AS INTEGER), GROUP_CONCAT(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM t0, v0 WHERE (UPPER(((((0X335a2c0f)OR('')))OR(1.595878695E9)))) GROUP BY ((LIKELY(v0.c0)) IS TRUE);SELECT DISTINCT (((t1.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND ('0.07969961402729742')))) AND ((CAST(rt0.c2 AS INTEGER)))), ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (((rt0.c1)>=(t0.c0))) AND (((((((((t1.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR('-826676403')))), ((CASE WHEN t1.c0 THEN rt0.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN rt0.c1 ELSE x'' END) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) AND (SUM(rt0.c1))) FROM v0 WHERE (((('')) NOT BETWEEN ((-865688716)) AND ((CASE x''  WHEN x'fcc6' THEN NULL ELSE 0.2296053123014038 END))));SELECT ALL CAST(CASE WHEN NULL THEN t0.c0 END AS TEXT), ((0.37226768129263954 COLLATE RTRIM)!=(rt0.c1)), GROUP_CONCAT(((t1.c0)AND(rt0.c2)) COLLATE RTRIM) OVER ( GROUPS BETWEEN  CURRENT ROW AND ((((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0))) BETWEEN ((((v0.c0))<((rt0.c0)))) AND (((t0.c0)IS NOT(rt0.c1)))) PRECEDING EXCLUDE GROUP) FROM v0 WHERE ((NOT ((('y0</') NOTNULL)))) LIMIT -617004600 OFFSET -1277791912;SELECT DISTINCT t1.c0 FROM rt0 WHERE (((((('j#', '뫷L', '5vf}F%w'))==((0.8231807731800402, 0.062078689498969, 1.415676294E9))))||((x'508677ef' IN ())))) ORDER BY CAST(CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END AS BLOB)  NULLS LAST;SELECT ALL MIN(((t0.c0)*(NULL))) FROM v0, t0, t1 WHERE (0.589060150982718); -- 2ms;
SELECT DISTINCT rt0.c1, ((((((((((((v0.c0)AND(rt0.c0)))OR(v0.c0)))AND(rt0.c1)))AND(0.5679440177575318)))AND(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE, COALESCE(((rt0.c2) NOTNULL), ((rt0.c0) NOT NULL)) FROM t1, rt0;SELECT COUNT(*) FILTER(WHERE rt0.c0) OVER () FROM rt0, t1; -- 0ms;
SELECT (- (t1.c0 COLLATE RTRIM)), (((t1.c0) BETWEEN (rt0.c2) AND (0.7821427414532717)) IN ()), (((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c2)IS NOT(t0.c0))))) FROM rt0, v0, t0;SELECT DISTINCT (((rt0.c1)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((CAST(rt0.c0 AS TEXT)))) FROM v0, rt0, t0, t1 WHERE ((((((NULL))>=(('k\r!셎'))))>((('1297068102') NOT BETWEEN (x'') AND ('28*PiB!K0'))))); -- 0ms;
SELECT DISTINCT LAG(((((NOT (t0.c0))))>=(((t0.c0 IN ())))), CAST(((t0.c0)>(t0.c0)) AS NUMERIC), CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE))==(((0.677034860321753) IS FALSE))), (NOT (rt0.c0)), ((((t1.c0 IN (rt0.c2))))!=(((((t1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) FROM t0, v0;SELECT DISTINCT ('0.45554768063707896' IN (CAST(v0.c0 AS REAL))), ((CAST('-1259719936' AS BLOB)) BETWEEN (CASE WHEN rt0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (((((((((v0.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(rt0.c2)))), AVG((((v0.c0, t1.c0, rt0.c2))>=((NULL, v0.c0, t1.c0))) COLLATE NOCASE) OVER () FROM rt0, t1 WHERE ((+ ((0.20622421958584047 IN ())))) GROUP BY LOWER(DISTINCT v0.c0);SELECT DISTINCT 0X436d5352, rt0.c1, (((((((t0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))OR(rt0.c1 COLLATE RTRIM)))OR(((')u[&S*M')%(t1.c0)))) FROM v0, t0 WHERE (ROUND(IFNULL('323138703', NULL), ((('')) NOT BETWEEN ((NULL)) AND ((1.083130503E9)))));SELECT ALL -1932633387, CAST(((((((((v0.c0)AND(rt0.c1)))OR(NULL)))AND(NULL)))AND(v0.c0)) AS NUMERIC), CAST(SUM(v0.c0) AS REAL) FROM rt0, t0, v0; -- 0ms;
SELECT DISTINCT TOTAL(t0.c0 COLLATE RTRIM COLLATE NOCASE) OVER () FROM t1 GROUP BY (((NOT (rt0.c0))) ISNULL) HAVING 0xffffffff9c5bc9d2;SELECT DISTINCT (t0.c0 IN ()) COLLATE BINARY FROM t1, rt0, v0 WHERE (((((x'4e25')=(NULL))) BETWEEN (((x'47a6') IS TRUE)) AND (((x'') NOTNULL)))); -- 0ms;
SELECT (((t0.c0)OR(t0.c0)) IN (('1527213296' IN ()))), rt0.c1, t1.c0 FROM rt0, t1 WHERE (((CAST(x'' AS REAL))LIKE(((0.9404420533148341)%('r⽤r')))));SELECT ALL (+ (t1.c0)) COLLATE BINARY FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((SQLITE_VERSION())LIKE(GROUP_CONCAT(t1.c0))) FROM v0;SELECT ALL ((((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)OR(highlight(v0.c0, t1.c0, x'0df9', t0.c0))))OR(rt0.c1)) FROM rt0, t1 WHERE ((~ ('2120878081' COLLATE BINARY)));SELECT ALL ((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) BETWEEN (NULLIF(v0.c0, rt0.c1)) AND ((0.9957457409666584 IN ()))), CAST((t0.c0 IN ()) AS BLOB), TOTAL(CASE WHEN t1.c0 THEN t0.c0 WHEN '-1257929620' THEN x'' WHEN rt0.c1 THEN rt0.c0 END) OVER () FROM v0, rt0, t1, t0 GROUP BY CASE WHEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END THEN ((v0.c0)IS(NULL)) ELSE ((t1.c0)/(rt0.c0)) END, (('	沌PE,HJ,') NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c0) NOTNULL))), (((((rt0.c2, 0.3658097652697767, x'c4a84166'))=((v0.c0, rt0.c0, t0.c0))))LIKE((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((t1.c0))))); -- 0ms;
SELECT LIKELIHOOD(DISTINCT v0.c0 COLLATE RTRIM, 0.4881979381676951) FROM rt0, t0, v0 GROUP BY ((CAST(v0.c0 AS NUMERIC)) NOTNULL), (- ((((t0.c0))=((v0.c0))))), ((rt0.c0)IS(rt0.c0)) COLLATE NOCASE HAVING ((((rt0.c0)OR(t0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND ((((v0.c0, rt0.c2, v0.c0)) BETWEEN ((t0.c0, rt0.c0, t1.c0)) AND ((t0.c0, v0.c0, rt0.c0)))));SELECT DISTINCT ((((rt0.c0)>(v0.c0))) ISNULL) FROM t1 GROUP BY (CAST(t1.c0 AS INTEGER) IN (v0.c0 COLLATE BINARY)) HAVING (NOT (t1.c0)) COLLATE BINARY ORDER BY ((((rt0.c2) IS FALSE)) IS FALSE) DESC  NULLS FIRST, ((CASE WHEN '-663627998' THEN rt0.c2 END)LIKE(rt0.c2))  NULLS LAST, ((CAST(rt0.c2 AS INTEGER))||(((rt0.c2)/(rt0.c1))));SELECT DISTINCT (~ (((v0.c0)AND(t0.c0)))) FROM t0 ORDER BY ((COALESCE(rt0.c1, rt0.c2, t0.c0, rt0.c1))==(((rt0.c2) NOT BETWEEN (t0.c0) AND (v0.c0)))), x'' COLLATE BINARY;SELECT ALL CASE WHEN TYPEOF(DISTINCT rt0.c0) THEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) END FROM rt0, v0, t1, t0 WHERE ((NOT ((+ ('1560660299'))))); -- 0ms;
SELECT DISTINCT LTRIM(((v0.c0) NOT NULL)), rt0.c1, CASE ((t0.c0)AND(0.7005283411644286))  WHEN ((t0.c0)|(t0.c0)) THEN ((rt0.c2) IS FALSE) END, PERCENT_RANK() OVER (), (NOT (rt0.c1)) FROM t0 WHERE ((((+ (NULL))) IS TRUE));SELECT DISTINCT FIRST_VALUE(CASE WHEN ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END) OVER () FROM t1, v0, t0 GROUP BY CAST(((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1)) AS INTEGER);SELECT DISTINCT CAST(t0.c0 AS REAL) COLLATE RTRIM FROM t1, v0, t0, rt0 WHERE (((0.49414979679586013) ISNULL)); -- 0ms;
SELECT ALL ((((~ (t1.c0))))==(((rt0.c1 IN ())))), ((MAX(v0.c0))|((v0.c0 IN ()))), MIN(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE t1.c0 END COLLATE BINARY) FROM v0, t1 RIGHT OUTER JOIN t0 ON CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1)GLOB(t0.c0)) WHEN ((((0.7143260344054241)OR(rt0.c0)))OR('hCZ.&')) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((rt0.c0)AND(rt0.c2)))AND(t1.c0)) THEN ((t0.c0)/(t0.c0)) END LEFT OUTER JOIN rt0 ON x'';SELECT DISTINCT CAST(rt0.c2 AS REAL) FROM t0 NOT INDEXED, v0, t1;SELECT DISTINCT ((0.679133359822518)|(1.22300444E8)), v0.c0, ((((COUNT(*))AND(((v0.c0)OR(t1.c0)))))OR(CASE NULL  WHEN v0.c0 THEN v0.c0 END)) FROM rt0, t0 NOT INDEXED, v0, t1; -- 0ms;
SELECT ALL x'', ((rt0.c1)||(((rt0.c1) NOT BETWEEN (NULL) AND ('1415676294')))), (((((t1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((v0.c0, t1.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))))/(CAST(t1.c0 AS INTEGER))) FROM rt0 WHERE ((((((((((363953059)OR(-7.5147319E8)))AND(0x6b2de751)))OR(NULL)))OR(x'')) IN ()));SELECT DISTINCT CASE ((v0.c0) NOTNULL)  WHEN t0.c0 THEN (('-') BETWEEN (v0.c0) AND (rt0.c2)) ELSE v0.c0 COLLATE NOCASE END, TOTAL_CHANGES() COLLATE BINARY, (((((rt0.c1 IN ()))AND(((t0.c0) BETWEEN (rt0.c2) AND (v0.c0)))))AND(t1.c0)) FROM t0 NOT INDEXED, t1, v0, rt0; -- 0ms;
SELECT x'' FROM t0; -- 0ms;
SELECT CASE ((t0.c0) NOTNULL)  WHEN ((t0.c0)<(v0.c0)) THEN LOWER(t1.c0) ELSE CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END END, (((((rt0.c0)) NOT BETWEEN (('-267752308')) AND ((t1.c0)))) BETWEEN ((- (rt0.c0))) AND (CASE t1.c0  WHEN rt0.c1 THEN v0.c0 END)), COUNT(*) OVER () FROM t0;SELECT CASE ((rt0.c2)OR(rt0.c2))  WHEN (rt0.c0 IN (rt0.c0)) THEN ((t0.c0)GLOB(rt0.c0)) END, rt0.c2, ROW_NUMBER() OVER ( ORDER BY HEX(NULL) ASC  NULLS FIRST, (((((t1.c0)&(t0.c0))))<>(((((rt0.c2))<((t1.c0)))))) ASC  NULLS LAST) FROM t0, rt0, t1, v0; -- 0ms;
SELECT ALL ((CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 END) NOT BETWEEN ((((rt0.c2))<=((v0.c0)))) AND (rt0.c0)) FROM rt0, v0;SELECT ALL HEX(((v0.c0)==(t1.c0))) FROM t0, rt0, v0, t1 WHERE (x'') ORDER BY ((((~ (rt0.c0))))<=((((v0.c0)LIKE(rt0.c1))))), (((t0.c0 IN ()))IS(CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 END)) ASC  NULLS LAST; -- 0ms;
SELECT ALL 1.632738822E9, LAST_VALUE((NOT (t1.c0 COLLATE RTRIM))) OVER ( PARTITION BY ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))+(((rt0.c2)<(rt0.c1)))), (- (((t1.c0)-(t1.c0))))), CASE WHEN v0.c0 THEN ((t1.c0)IS NOT(rt0.c2)) WHEN t1.c0 COLLATE BINARY THEN ((rt0.c1)AND(t0.c0)) WHEN CAST(rt0.c2 AS INTEGER) THEN t1.c0 ELSE t1.c0 END, t0.c0 COLLATE NOCASE, ((NOT (rt0.c1)) IN (((t0.c0) NOT BETWEEN ('-1661706421') AND (rt0.c2)))) FROM rt0, t0, v0, t1 WHERE (((x'c37f') NOT NULL) COLLATE BINARY) GROUP BY ((((rt0.c1)&(v0.c0))) BETWEEN ((((rt0.c2))<=((rt0.c0)))) AND ((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))))), (((+ (rt0.c0))) ISNULL), ((((rt0.c2 IN ())))>=((((rt0.c0)>=(t0.c0))))); -- 0ms;
SELECT ALL load_extension(t0.c0 COLLATE RTRIM), -2060797193, TYPEOF(rt0.c1 COLLATE NOCASE) FROM t1, t0, rt0, v0; -- 1ms;
SELECT 0.7821427414532717 FROM t1, rt0, v0, t0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) ISNULL)  WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(rt0.c1 AS BLOB) END FROM t0, t1, v0 WHERE (((json_type(0x43825616)) NOT BETWEEN (CAST(0.670127172448951 AS TEXT)) AND (SQLITE_COMPILEOPTION_GET(0x70845192))));SELECT ALL (((rt0.c2 IN (rt0.c0, t0.c0)))!=(((((rt0.c1)AND(t1.c0)))OR(rt0.c2)))) FROM t0, t1, v0, rt0 WHERE (0x7f304bb3); -- 0ms;
SELECT (((((rt0.c2))>=(('FALSE'))))>=(x'')) FROM t1 CROSS JOIN v0 ON CASE WHEN ((((t1.c0)AND(rt0.c2)))OR(rt0.c1)) THEN (~ (t1.c0)) END WHERE ((((NULL IN (722560992))) IS FALSE)) ORDER BY CAST(CASE t1.c0  WHEN t0.c0 THEN rt0.c0 WHEN 0.17955090917455252 THEN rt0.c2 WHEN rt0.c2 THEN x'' ELSE rt0.c1 END AS TEXT) DESC  NULLS LAST, HEX(rt0.c2 COLLATE RTRIM) DESC;SELECT COUNT(*) OVER () FROM v0, t0, t1 WHERE (CASE (~ ('1023928185'))  WHEN ((NULL) BETWEEN (370561299) AND (0Xb99d5c4)) THEN ((0.3405090924310403)<(-1483692531)) END); -- 0ms;
SELECT DISTINCT ((((((((((t1.c0) IS TRUE))OR((v0.c0 IN ()))))OR(((v0.c0)!=(rt0.c2)))))AND(CAST(t1.c0 AS REAL))))OR(((rt0.c2)IS(v0.c0)))) FROM t1 WHERE (((((((3.17139082E8)OR(NULL)))OR(0.04946442779498528)))||(-2.059824402E9)));SELECT DISTINCT ((((rt0.c2) NOT NULL))=((- (t1.c0)))), ((((((((((rt0.c1)OR(NULL)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))<<(COUNT(*))), v0.c0 FROM t0 WHERE ((((0.49508906020441257 IN ())) NOT BETWEEN (0X2d962e61) AND (CAST('hm' AS BLOB)))) UNION SELECT DISTINCT (((t1.c0)IS(rt0.c1)) IN (v0.c0)), rt0.c2, COUNT(((rt0.c2)<=(t1.c0))) FROM v0 WHERE (((NULL IN ()) IN ()));SELECT DISTINCT (+ (NULL)), UPPER(rt0.c2 COLLATE NOCASE), rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (SUM(rt0.c2)) AND ((((rt0.c0))>((rt0.c2))))), LIKELY(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))), NULL FROM t1, t0, v0, rt0; -- 0ms;
SELECT ALL CAST((rt0.c2 IN ()) AS REAL) FROM v0; -- 0ms;
SELECT DISTINCT CASE COUNT(rt0.c2)  WHEN rt0.c1 THEN CAST(t1.c0 AS NUMERIC) ELSE (((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END FROM t0, rt0, v0, t1; -- 0ms;
SELECT DISTINCT ((v0.c0 IN ()) IN (((((((((v0.c0)OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))AND(0Xffffffffd021d12e)))), rt0.c1, ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (rt0.c2) AND (((v0.c0) ISNULL))) FROM t0, v0, rt0, t1 WHERE (((((x'63c8') NOTNULL))&(PRINTF(0.5823219405868748)))); -- 1ms;
SELECT DISTINCT SUM(v0.c0) FROM rt0, t0;SELECT DISTINCT (~ (((((rt0.c0)OR(t0.c0)))OR(rt0.c0)))) FROM v0;SELECT ALL ((HEX(DISTINCT rt0.c1)) ISNULL) FROM v0, t0 LIMIT -935842612 OFFSET -1577147877;SELECT ALL NULL COLLATE RTRIM FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((SUM(t1.c0))) AND (((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))), ((((0.5682830440076743) BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((t0.c0) BETWEEN (rt0.c0) AND (v0.c0)))), TOTAL((+ (t0.c0))) OVER () FROM t1, v0, rt0, t0; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0)>(t0.c0))) OVER () FROM t0, v0, rt0 WHERE ((('-26044242' IN ()) IN ())); -- 0ms;
SELECT DISTINCT CAST(((t1.c0) ISNULL) AS REAL) FROM v0, t0, rt0 ORDER BY ('13319394' COLLATE BINARY IN (((t1.c0) NOTNULL))) ASC;SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ('502101854') AND (((v0.c0)/(rt0.c1)))), ((rt0.c2)>=(json_array(v0.c0, 1.305222916E9))), UPPER(DISTINCT ((rt0.c2) IS FALSE)), (t1.c0 IN (v0.c0 COLLATE BINARY)), NULL FROM t0, t1, rt0 WHERE (CAST(((x'') IS TRUE) AS REAL));SELECT DENSE_RANK() OVER () FROM v0, rt0 WHERE (((0.3386191156829922) NOT BETWEEN ('UX蹻#蚀' COLLATE RTRIM) AND (CASE WHEN 2179655.0 THEN 0.037757190037544186 END))); -- 0ms;
SELECT ALL CASE SUM(rt0.c0)  WHEN NULL THEN (- (v0.c0)) ELSE ((0.01743301828318189) BETWEEN (rt0.c0) AND (rt0.c2)) END, ((rt0.c0)<<(v0.c0)) COLLATE BINARY, (((t1.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((rt0.c0) BETWEEN (t1.c0) AND (rt0.c1))))) FROM t1 WHERE (((('-772673894')) BETWEEN (('ZY')) AND (('2145931552'))) COLLATE BINARY);SELECT ALL ((SUM(v0.c0))&(CAST(v0.c0 AS INTEGER))) FROM rt0;SELECT DISTINCT ((((((((CAST(v0.c0 AS TEXT))AND(((rt0.c2)GLOB(rt0.c2)))))OR(rt0.c1)))OR((~ (rt0.c1)))))OR((((t0.c0))>=((t1.c0))))) FROM t0, t1;SELECT DISTINCT (+ (((((t1.c0)AND(v0.c0)))AND(rt0.c2)))) FROM v0 FULL OUTER JOIN t1 ON CAST(((v0.c0) BETWEEN (t1.c0) AND (v0.c0)) AS BLOB) ORDER BY TRIM(DISTINCT ((v0.c0) IS FALSE), ((v0.c0)+(t1.c0))) DESC;SELECT ALL COUNT(*) OVER ( PARTITION BY CASE WHEN ((v0.c0)*(rt0.c0)) THEN ((v0.c0) BETWEEN (t0.c0) AND (t1.c0)) ELSE ((rt0.c1)||(t1.c0)) END, ((((t1.c0))>((rt0.c2))) IN ()) ORDER BY ((CAST(t0.c0 AS REAL)) NOT BETWEEN ((v0.c0 IN ())) AND ((((t0.c0))>=((t1.c0))))) ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM v0;SELECT ALL ((((t0.c0)AND(COUNT(*))))AND((t1.c0 IN ()))) FROM rt0, t1, v0, t0 ORDER BY ((0x74a281c) IS FALSE) ASC; -- 0ms;
SELECT DISTINCT t0.c0, CASE rt0.c2 COLLATE RTRIM  WHEN CAST(t0.c0 AS TEXT) THEN ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)) WHEN (((t0.c0, rt0.c0, t0.c0, t1.c0, rt0.c0)) BETWEEN ((v0.c0, rt0.c0, 2143959040, rt0.c2, v0.c0)) AND ((t0.c0, t1.c0, rt0.c2, v0.c0, t1.c0))) THEN ((v0.c0)<=(rt0.c0)) WHEN IFNULL(0.441118522217528, rt0.c2) THEN ((t1.c0)-(rt0.c1)) ELSE CAST(rt0.c2 AS BLOB) END, ((((TOTAL(t1.c0))OR(json_valid(rt0.c0))))OR(DATETIME(rt0.c2, rt0.c0, rt0.c1))) FROM t0, v0, rt0;SELECT DISTINCT (((rt0.c1) NOTNULL) IN ()), (NOT (NULL)), '-1382247114' FROM t0; -- 0ms;
SELECT DISTINCT CAST((- (rt0.c2)) AS TEXT), 8.25644982E8, t1.c0 FROM t1, t0 WHERE ((('-74244917')<<(0.11821469030785625)) COLLATE BINARY) LIMIT 1776005808;SELECT DISTINCT TIME(CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END, MAX(rt0.c1), v0.c0 COLLATE NOCASE, (~ (t0.c0)), ((t1.c0)GLOB(t1.c0))) FROM rt0, t0, t1, v0 WHERE ((+ ((NOT ('-1067432121'))))); -- 0ms;
SELECT ALL '-1057244695', t1.c0, CASE WHEN COUNT(*) THEN json_array(t0.c0, 0Xffffffff9e7eabb2) WHEN t0.c0 COLLATE NOCASE THEN (rt0.c1 IN (rt0.c1, v0.c0)) WHEN '-2059824402' THEN CASE WHEN rt0.c2 THEN '-1997524901' END ELSE ((t1.c0)GLOB(rt0.c1)) END FROM v0, t0, t1 GROUP BY ((NOT (rt0.c0)) IN ());SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END)OR(rt0.c2)))AND(CAST(rt0.c1 AS TEXT))), ((CAST(v0.c0 AS NUMERIC))AND(v0.c0 COLLATE NOCASE)), (((t1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE NOCASE, ((CASE rt0.c2  WHEN t0.c0 THEN v0.c0 END)/(MAX(rt0.c1))), COUNT(*) OVER () FROM t0, t1 WHERE ('-2036016661');SELECT DISTINCT ((((((rt0.c2)OR(t1.c0)))OR(rt0.c2))) NOTNULL) FROM t1, v0, rt0 WHERE ((((x'e7cc'))>=(((('-1294505933')=(0.9847511416041043)))))); -- 0ms;
SELECT (((~ (v0.c0)))<<(MAX(t1.c0))), COUNT(MAX(rt0.c1, rt0.c1) COLLATE NOCASE) FILTER(WHERE ((CASE rt0.c2  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN '2145931552' THEN rt0.c0 ELSE v0.c0 END)GLOB(((v0.c0) IS TRUE)))) OVER (), LIKELIHOOD((rt0.c2 IN ()), 0.8365273521516771) FROM t0, v0;SELECT ALL CAST((- (rt0.c0)) AS REAL) FROM t0, rt0, t1, v0; -- 0ms;
SELECT ALL (((rt0.c2 IN ()))|((+ (rt0.c2)))), x'', ((v0.c0)LIKE(CAST(t0.c0 AS REAL))) FROM rt0, t0, v0; -- 1ms;
SELECT ((((rt0.c2) ISNULL)) IS TRUE), ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (('-1644714811' IN ())) AND (NULL)), CAST(((rt0.c2)LIKE(t1.c0)) AS REAL) FROM t1, v0, t0;SELECT ALL SUM(rt0.c0) OVER () FROM v0, t0, rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((v0.c0) ISNULL)) OVER () FROM rt0, t0 WHERE (((((((NULL)OR('')))AND(0.08122189409981861))) BETWEEN (CASE WHEN NULL THEN NULL ELSE 0.5697862499576243 END) AND ((0.5061237745852415 IN ()))));SELECT ALL (((rt0.c1 IN ())) BETWEEN ((((t1.c0))==((0xffffffff9ba3f60b)))) AND (SQLITE_COMPILEOPTION_USED(v0.c0))) FROM v0, t0, t1 WHERE (CASE CASE WHEN NULL THEN '' WHEN 'qfb' THEN NULL WHEN NULL THEN x'4593' ELSE x'8443cdf2' END  WHEN x'' COLLATE BINARY THEN UNLIKELY(DISTINCT 1147971837) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0) OVER (), ((SUM(rt0.c2)) NOT BETWEEN (((rt0.c1)>=(t1.c0))) AND ('8k')), ((CASE WHEN t1.c0 THEN rt0.c2 ELSE t1.c0 END)>=((t0.c0 IN ()))) FROM t1, t0 WHERE ((('8494046' IN ()) IN ()));SELECT ALL (((((+ (rt0.c2)))AND(((((t0.c0)OR(rt0.c2)))AND(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM t0, t1 WHERE (CASE WHEN CAST(0.9724380624639153 AS TEXT) THEN (- ('1701755863')) ELSE ('-776574071' IN ()) END);SELECT DISTINCT (~ (AVG(t1.c0))), (CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END IN (((t1.c0) IS FALSE))), (CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 END IN ()) FROM rt0, v0, t1 NOT INDEXED, t0 WHERE (CAST((('#fc_')-(0.5699005168896472)) AS BLOB)); -- 0ms;
SELECT CAST(CAST(rt0.c0 AS INTEGER) AS REAL) FROM v0, rt0, t0, t1; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS INTEGER), ((((((((rt0.c2 COLLATE NOCASE)AND(CASE WHEN rt0.c2 THEN rt0.c2 END)))AND('-1259719936')))OR(t1.c0)))AND(NULL)), ((0.1611151051278381)*(((((((((rt0.c2)OR(x'')))AND(t1.c0)))AND(rt0.c0)))OR(rt0.c1)))) FROM t0 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN ((((NULL, x'7619', x''))==((0.5264496594023981, '', x'd320')))) AND ((~ (2112210500)))));SELECT (- (CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 END)) FROM v0 WHERE (((('|')||(2.071433172E9)) IN ()));SELECT ALL (+ (((((rt0.c0)OR(v0.c0)))OR(v0.c0)))), x'c5c339bf', (((+ (v0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1 COLLATE NOCASE)) FROM v0, t0, t1, rt0 WHERE (((((((((((0Xffffffff853992ee)AND(NULL)))OR('%BqK\r({r')))OR('沌l[2Nq흖E{')))OR(x'ce21'))) BETWEEN (((x'') NOT BETWEEN (x'') AND (NULL))) AND (load_extension(NULL)))); -- 1ms;
SELECT ALL MAX(LIKELIHOOD(DISTINCT t0.c0, 0.925300229458301)), CASE (rt0.c2 IN (rt0.c2))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((v0.c0)AND(rt0.c0)))AND(rt0.c0)) WHEN (('') NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN t1.c0 THEN ((t1.c0)IS(rt0.c2)) END, ((((((t1.c0)OR(rt0.c2)))AND(rt0.c2))) IS FALSE) FROM t1, rt0 ORDER BY ((((t1.c0) IS TRUE))+(((t1.c0) BETWEEN (v0.c0) AND (rt0.c2)))), CAST(CASE WHEN rt0.c2 THEN t1.c0 END AS BLOB) DESC  NULLS FIRST;SELECT DISTINCT CASE COUNT(rt0.c1)  WHEN SQLITE_VERSION() THEN (((t0.c0))>=((rt0.c1))) ELSE '+P' END FROM v0, rt0;SELECT ALL ((rt0.c2 IN (v0.c0)) IN ()) FROM t0 WHERE ((((('11424026') NOT BETWEEN (0.8355243691016181) AND (0.8944054842219157))) BETWEEN ((((x'79ef')) NOT BETWEEN ((0.7428619884105956)) AND ((0X73f22184)))) AND ((NOT ('E\TSx3W6y'))))) GROUP BY (((((((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c0))))OR((+ (t0.c0)))))OR(((rt0.c2)>>(t0.c0)))), '1495587114', (((rt0.c0 IN ('/')))-(((rt0.c0) NOT BETWEEN (v0.c0) AND (-977509508)))) HAVING ((rt0.c2) NOT NULL) COLLATE RTRIM;SELECT DISTINCT ROW_NUMBER() OVER (), ((((v0.c0)OR(t0.c0)))AND(rt0.c1)) COLLATE BINARY, ((((rt0.c1)AND(rt0.c0)))OR(t1.c0)) COLLATE BINARY FROM t1, v0, t0, rt0 LIMIT -1467186400; -- 0ms;
SELECT ((CASE WHEN t1.c0 THEN v0.c0 END) BETWEEN (MAX(v0.c0)) AND (((rt0.c2)IS(NULL)))) FROM v0, rt0;SELECT DISTINCT ((((v0.c0)<<(rt0.c0)))GLOB(HEX(t0.c0))), AVG(TOTAL(v0.c0)), ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((((rt0.c2)OR(t1.c0)))OR(rt0.c0))) AND (rt0.c2 COLLATE NOCASE)) FROM rt0;SELECT DISTINCT (t0.c0 IN ()) COLLATE NOCASE FROM t0 WHERE ((NOT ((NULL IN ())))); -- 0ms;
SELECT v0.c0, (rt0.c0 IN ()) COLLATE BINARY, RTRIM(((t1.c0) BETWEEN (0.5418851221073345) AND (rt0.c0))) FROM rt0, t1, v0 WHERE (((((x'b4f7')AND(x'49ba'))) BETWEEN (((0.19812330407440115)||(x''))) AND (CAST('1935992005' AS BLOB)))) GROUP BY (((+ (rt0.c0))) BETWEEN ('zdIm') AND (CASE rt0.c2  WHEN 'e杅GjA뜢' THEN 2179655 WHEN rt0.c2 THEN t1.c0 WHEN t1.c0 THEN NULL END)), rt0.c0, 0.16017726058943604 COLLATE NOCASE; -- 0ms;
SELECT DISTINCT SUM(((((rt0.c0)AND(t1.c0)))OR(x''))) OVER (), CASE WHEN t0.c0 THEN ((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0)) END, json_array_length('-1623292097', t0.c0 COLLATE BINARY) FROM v0 LEFT OUTER JOIN rt0 ON ((CASE t0.c0  WHEN v0.c0 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END) NOT BETWEEN (((rt0.c0)>>(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) CROSS JOIN t1 ON ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))OR((rt0.c1 IN (t0.c0)))))OR(((rt0.c2) IS FALSE)));SELECT DISTINCT x'', ((CASE WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END)&(rt0.c2 COLLATE NOCASE)), CAST((((t1.c0, rt0.c2, v0.c0))>=((rt0.c1, rt0.c2, rt0.c0))) AS INTEGER) FROM v0, t0 GROUP BY (v0.c0 COLLATE BINARY IN ());SELECT DISTINCT CASE WHEN MAX(v0.c0) THEN ((t0.c0) BETWEEN (rt0.c1) AND (v0.c0)) WHEN rt0.c2 THEN (~ (rt0.c0)) WHEN ((rt0.c1)>=(t1.c0)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) END FROM v0, t1, t0, rt0 WHERE ((('iYUY짒\nES' COLLATE RTRIM)*((((0Xffffffffa154feed))>(('Lഛ,8A]槤kP')))))); -- 0ms;
SELECT DISTINCT LAG(((NULL)|(CAST(t1.c0 AS REAL))), (((t1.c0)&(rt0.c1)) IN ((('-751473190') BETWEEN (rt0.c2) AND (rt0.c0)))), ((((((rt0.c0)OR('xv')))AND(NULL)))>=(rt0.c0 COLLATE RTRIM))) OVER ( ORDER BY CASE ((((t1.c0)OR(rt0.c0)))AND(0.3286892550452586))  WHEN ((((rt0.c2)AND(rt0.c0)))OR(t0.c0)) THEN t1.c0 COLLATE NOCASE ELSE ((((((((rt0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))AND(rt0.c1)) END  NULLS LAST) FROM t1, rt0 LIMIT 678747584;SELECT DISTINCT IFNULL(((('97709210'))!=((rt0.c2))), '1493641753') FROM t1;SELECT DISTINCT 1871582168, 0.32612107845636285, COUNT(MAX(rt0.c1, '''?')) OVER () FROM v0 WHERE (((0xffffffffc4c51608) NOT NULL) COLLATE RTRIM);SELECT TRIM(DISTINCT '648777805'), CASE ((rt0.c2)=(rt0.c0))  WHEN ((v0.c0)/(rt0.c2)) THEN ((t0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)) ELSE ((NULL)+(t1.c0)) END, CASE GROUP_CONCAT(t1.c0)  WHEN MIN(t0.c0) THEN ((((((((rt0.c0)AND(t0.c0)))OR(t0.c0)))OR(t1.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (rt0.c0) AND (t0.c0)) END FROM t0;SELECT CAST(((v0.c0)*(t0.c0)) AS BLOB) FROM v0, rt0, t0; -- 0ms;
SELECT DISTINCT '-57139618' FROM rt0, v0, t0 ORDER BY (((((('-1412044407')AND(NULL)))AND(rt0.c2))) ISNULL); -- 0ms;
SELECT DISTINCT ((((rt0.c1)+(rt0.c1))) BETWEEN (UPPER(rt0.c2)) AND (ROUND(rt0.c2, NULL))), ((((t1.c0)>>(v0.c0)))>(t0.c0)), ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE) FROM t0, t1, rt0 WHERE (CAST(((0.9382415122388266)AND(NULL)) AS TEXT));SELECT DISTINCT ((((((rt0.c0)OR(v0.c0)))OR(rt0.c2)))||((+ (t1.c0)))) FROM t0, v0, t1, rt0 WHERE (CASE WHEN (NULL IN ()) THEN ((NULL) IS TRUE) ELSE NULL END); -- 0ms;
SELECT DISTINCT CASE WHEN ((8494046.0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c2)))AND('[hp.y')) END FROM v0, t0, rt0 LIMIT 611845674 OFFSET -277005780; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))-(TOTAL(t1.c0))) FROM t0 GROUP BY (NOT ((t0.c0 IN ()))) HAVING MAX(LIKE(t0.c0, NULL));SELECT CASE WHEN (((t1.c0, t1.c0, rt0.c2)) BETWEEN ((rt0.c1, t0.c0, t1.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))) THEN v0.c0 COLLATE NOCASE WHEN (t1.c0 IN ()) THEN ('0.07969961402729742' IN ()) WHEN (NOT (t0.c0)) THEN ((t0.c0)<<(rt0.c0)) END FROM t0;