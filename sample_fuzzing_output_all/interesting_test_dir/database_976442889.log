-- Time: 2024/06/07 01:34:48
-- Database: database89
-- Database version: 3.40.0
-- seed value: 976442889
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB UNIQUE PRIMARY KEY NOT NULL CHECK ( (((NOT (c0)))IS NOT((c0 IN ())))) ); -- 2ms;
ANALYZE t0; -- 1ms;
UPDATE OR REPLACE t0 SET c0=x'9321', c0=NULL WHERE ((((t0.c0 IN (t0.c0)), t0.c0 COLLATE NOCASE, t0.c0))<=((0x362ecd8c COLLATE RTRIM, ((t0.c0)=(t0.c0)), ((t0.c0)|(t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0='909036940' WHERE DATETIME(((t0.c0)LIKE(t0.c0)), ((((((((((((t0.c0)AND(x'4eb8')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)), (NOT (t0.c0)), ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(909036940)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)), (((t0.c0, t0.c0, t0.c0))<>((t0.c0, '', t0.c0))), ((t0.c0)IS NOT(t0.c0)), (+ (t0.c0))); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('909036940'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (''), (NULL), ('1083139661'), (''), (0X49355b6a); -- 11ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('I G5M{M'), (0.343957151498717), (0.4528886334168797); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.6774139724930993); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1488217349), (0.7035838087865129), (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=NULL; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE t0 SET (c0, c0)=(x'', '-1876747369'); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
CREATE INDEX IF NOT EXISTS i62 ON t0(CAST(((c0)IS(c0)) AS NUMERIC)) WHERE CAST(c0 AS TEXT); -- 12ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET c0='}	dW9(' WHERE LIKELIHOOD(DISTINCT ((t0.c0) IS FALSE), 0.4961279018407261); -- 0ms;
ANALYZE t0; -- 3ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('909036940'), (0xc4113d2), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xffffffffad51b133); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=323920968 WHERE (('-1876747369')>=(x'')); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c0=-1.488217349E9 WHERE ((TRIM(t0.c0))+(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 7ms;
ANALYZE; -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL, c0=NULL WHERE (~ (CAST(t0.c0 AS REAL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('}	DW9(', NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL), ('0.6774139724930993'), (''); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''), (0x6822952), (x''); -- 0ms;
UPDATE OR ABORT t0 SET c0=-1743343091, c0=NULL, c0=-1.743343091E9; -- 1ms;
UPDATE OR IGNORE t0 SET c0='109193554', c0='1083139661' WHERE ((t0.c0) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)|(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE ((((CAST(t0.c0 AS NUMERIC))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(UPPER(DISTINCT t0.c0))); -- 0ms;
UPDATE OR ABORT t0 SET c0=x'75003736'; -- 0ms;
UPDATE t0 SET (c0, c0)=(NULL, 'IGbS{') WHERE ((((((((((t0.c0)&(t0.c0)))OR(((((602144026)OR(t0.c0)))OR(t0.c0)))))OR(((t0.c0) IS FALSE))))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 6ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(NULL, x'', x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=('IQJ<', x'0b21', NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0Xffffffff94b00f84), (x'8c83'), (323920968); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.01221425711044788); -- 0ms;
VACUUM main; -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.2408917796860719); -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(x'', x'', NULL) WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('vQ/<'); -- 0ms;
ANALYZE t0; -- 0ms;
REINDEX  t0; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.7550334655314813); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('205591506'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x'aca9'); -- 0ms;
UPDATE OR ABORT t0 SET c0=0.7550334655314813, c0=0.1979261638362806; -- 0ms;
UPDATE t0 SET (c0)=('fE'); -- 2ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)<((~ (t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('i)'); -- 16ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.45662890544326584 WHERE LIKELIHOOD(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), 0.7003580583380978); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-1993142471', c0=x'e2e8' WHERE t0.c0; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
ANALYZE; -- 12ms;
ANALYZE i62; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xffffffff90231b97), (NULL), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('5<'), (0.17731866661537543), (0xffffffff90231b97); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.8555227296409502 WHERE ((t0.c0) NOTNULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('323920968'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
UPDATE t0 SET (c0)=(834139466); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=(0X5cfa90f1) WHERE (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, ((t0.c0)AND(t0.c0)), CAST(t0.c0 AS INTEGER), 0.2937085590914712, TYPEOF(t0.c0))) AND (((t0.c0 IN ()), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.8971799466448317 END, ((t0.c0)<=(t0.c0)), (+ (t0.c0)), (~ (t0.c0))))); -- 3ms;
UPDATE OR ROLLBACK t0 SET (c0)=(592678469); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('yg', 0.7550334655314813); -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE; -- 0ms;
PRAGMA shrink_memory; -- 1ms;
ANALYZE t0; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.32877744896522376); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (NULL), (''), (0x6261df31); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('ὰ.'); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE OR IGNORE t0 SET c0='-1876747369'; -- 0ms;
UPDATE t0 SET (c0, c0, c0)=(NULL, 0.8971799466448317, NULL) WHERE CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0, c0)=('A/', x'd78e', x'3f8e', '摟u“&z~'''); -- 5ms;
UPDATE t0 SET (c0)=('0.45662890544326584') WHERE CASE ((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))  WHEN (- (t0.c0)) THEN ((t0.c0) NOT NULL) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 THEN t0.c0 WHEN 1650581297 THEN ((t0.c0)OR(t0.c0)) WHEN NULL THEN (((t0.c0, 'i)', '[u? n')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', t0.c0, t0.c0))) END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
UPDATE OR ABORT t0 SET c0='' WHERE CASE WHEN CASE WHEN 0.883618808768781 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE ((t0.c0) IS FALSE) END; -- 7ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP INDEX IF EXISTS "i62"; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''), (NULL), (NULL); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'1e6e'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((- (t0.c0))) BETWEEN ((((0.9104046955260467)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) FROM t0 WHERE ((((((NULL))<(('-1488217349'))))&(CASE 'IQJ<'  WHEN NULL THEN 0.8378297863822486 ELSE 1.09193554E8 END))); -- 0ms;
SELECT DISTINCT CASE ((t0.c0)GLOB(t0.c0))  WHEN SQLITE_COMPILEOPTION_GET(t0.c0) THEN CAST(t0.c0 AS INTEGER) WHEN t0.c0 THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c0 AS NUMERIC) ELSE '0.4528886334168797' END FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, CASE WHEN CASE WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END, DENSE_RANK() OVER () FROM t0 WHERE (((((CASE 0.826753675539895  WHEN 1584272772 THEN '1G' END)AND(0.32877744896522376)))OR(1228233578 COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((t0.c0)>=(t0.c0))) BETWEEN ('56307602') AND (0.01221425711044788)) FROM t0 WHERE (CAST((- (NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT '๸pjs5''i+' FROM t0; -- 0ms;
SELECT DISTINCT (NULL IN ()), GROUP_CONCAT(((t0.c0)OR(0.7872303951083801))), t0.c0 FROM t0 WHERE ((((NULL)%('-160262981')) IN ())); -- 0ms;
SELECT (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT -564693938, ((((t0.c0)%(t0.c0))) IS FALSE), (((t0.c0 COLLATE BINARY))=(((- (t0.c0))))), (COUNT(*) IN ()), COUNT(*) FROM t0 WHERE (CAST(CAST(0.8461005079337557 AS TEXT) AS TEXT)); -- 0ms;
SELECT DISTINCT (x'' IN ()), NTILE((((t0.c0)||(t0.c0)) IN (CAST(t0.c0 AS NUMERIC), LIKE(t0.c0, t0.c0), ((t0.c0)||(t0.c0))))) OVER (), CASE WHEN HEX(DISTINCT t0.c0) THEN ((t0.c0) ISNULL) ELSE ((t0.c0)/(t0.c0)) END FROM t0; -- 0ms;
SELECT ((t0.c0) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT '' FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) NOTNULL) FROM t0 WHERE (((CASE WHEN x'' THEN '3m' ELSE x'' END)AND(((NULL) NOT NULL)))); -- 0ms;
SELECT ((MIN(t0.c0)) NOT NULL), (((t0.c0 IN ())) BETWEEN (COUNT(*)) AND (((x'') ISNULL))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>=((NOT (t0.c0)))), x'', (((t0.c0)) BETWEEN ((t0.c0)) AND ((CASE WHEN t0.c0 THEN x'' END))) FROM t0 WHERE ((((((('Y~h')OR(-564693938)))OR(''))) NOT BETWEEN (((0.12593846026994915)<(x''))) AND (((((x'6b41')AND('')))OR(NULL))))); -- 0ms;
SELECT ALL ((SUM('-1488217349')) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT (((- (t0.c0)))/((~ (t0.c0)))) FROM t0 GROUP BY CAST(((t0.c0)-(t0.c0)) AS NUMERIC), CHAR(x'', HEX(DISTINCT t0.c0), (t0.c0 IN ()), t0.c0 COLLATE NOCASE, CAST(t0.c0 AS BLOB)), t0.c0; -- 0ms;
SELECT DISTINCT (NOT ((t0.c0 IN ()))) FROM t0 WHERE (((((0xffffffffc0075bdd)AND(NULL)))OR(0.44047654334392283)) COLLATE NOCASE); -- 0ms;
SELECT ALL CAST(((t0.c0) NOT NULL) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT LAG(((t0.c0)/(t0.c0)) COLLATE BINARY, (((t0.c0 IN (t0.c0, t0.c0)))IS NOT((((t0.c0, 0.39551744762702046, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))), CAST(((1094587971)>(t0.c0)) AS TEXT)) OVER () FROM t0; -- 0ms;
SELECT NTH_VALUE((~ (CAST(t0.c0 AS INTEGER))), 0.8555227296409502) OVER (), ((NULL)%(((t0.c0)<(t0.c0)))), GROUP_CONCAT(CAST(t0.c0 AS BLOB)) FILTER(WHERE (~ (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) OVER () FROM t0 WHERE (HEX((('Zk''|,')<=(0.17500200651514997))));SELECT GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), '/\rhVfkmonths{S5', COUNT(*) OVER ( RANGE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE) PRECEDING EXCLUDE NO OTHERS) FROM t0 WHERE ((((0Xfffffffff6493374 IN ())) BETWEEN ('27vW[' COLLATE NOCASE) AND (CAST(0.9398433382882415 AS TEXT))));SELECT DISTINCT x'461a' FROM t0; -- 0ms;
SELECT ALL ((((((((CAST(t0.c0 AS REAL))OR(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((- (t0.c0)))))OR(0.6544670200379236)) FROM t0 WHERE (((((((((CAST(NULL AS NUMERIC))OR(((0xffffffff909eeda8) ISNULL))))OR(((NULL) IS FALSE))))OR(((0.8863589448723685)OR(NULL)))))OR(CASE 873486434  WHEN '7w''|' THEN 1.559924977E9 ELSE 0.2937085590914712 END))); -- 0ms;
SELECT CASE ((t0.c0)LIKE(t0.c0))  WHEN t0.c0 THEN (~ (t0.c0)) WHEN NULL THEN ((t0.c0) NOT NULL) WHEN UNLIKELY(DISTINCT t0.c0) THEN t0.c0 COLLATE RTRIM ELSE ((t0.c0)>(t0.c0)) END FROM t0; -- 0ms;
SELECT LIKELIHOOD(DISTINCT t0.c0 COLLATE BINARY, 0.43453106031486866), (((((NULL)AND(t0.c0)))OR(t0.c0)) IN (UNLIKELY(DISTINCT t0.c0))), ((-1598274581)%(((t0.c0)|(t0.c0)))) FROM t0 WHERE (0.4956925217574024); -- 0ms;
SELECT (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE ((+ ((('') IS FALSE)))); -- 0ms;
SELECT ALL '-691557804' COLLATE BINARY FROM t0; -- 0ms;
SELECT LOWER(DISTINCT (+ (t0.c0))), (NOT (((t0.c0)*(t0.c0)))), ((((t0.c0) NOTNULL))OR(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND (((t0.c0) NOTNULL))) FROM t0 ORDER BY ((((((((-192366946)AND(CAST(t0.c0 AS REAL))))AND((NOT (t0.c0)))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(t0.c0))  NULLS LAST; -- 0ms;
SELECT ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) BETWEEN ((t0.c0 IN (t0.c0))) AND (TOTAL(t0.c0))), ((NULL) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (LOWER(t0.c0))), ((((((t0.c0)AND(t0.c0)))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))), ((t0.c0) IS TRUE) COLLATE RTRIM COLLATE BINARY, (- (t0.c0 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT DISTINCT '-2092251888' FROM t0 LIMIT 502692871; -- 0ms;
SELECT DISTINCT (NOT ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))) FROM t0 WHERE ((((0.8745081934027584 IN ())) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS TEXT) FROM t0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (0.2408917796860719) AND ('3.HGFoZ')) THEN (((NULL)) BETWEEN ((5.02692871E8)) AND ((''))) ELSE 'B\n' COLLATE BINARY END); -- 0ms;
SELECT (x'' COLLATE NOCASE IN ()) FROM t0 WHERE (CASE WHEN '2145952939' COLLATE BINARY THEN '0.8745081934027584' ELSE (('1226239204') IS TRUE) END); -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND (((t0.c0 IN (t0.c0))))) FROM t0 WHERE (((((-1e500) IS TRUE)) BETWEEN (((NULL) NOT BETWEEN (-183594622) AND (0.861589261040311))) AND (((0.04612369101410563) BETWEEN (x'') AND (x'fe2fa4c5'))))); -- 0ms;
SELECT ((CAST(t0.c0 AS NUMERIC))==(((t0.c0)GLOB(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT MIN(((t0.c0)>(t0.c0))), ((((((((NULL)OR(t0.c0)))OR(t0.c0)))OR(t0.c0 COLLATE BINARY)))OR(t0.c0 COLLATE BINARY)), UPPER(DISTINCT ((t0.c0)GLOB(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0 COLLATE RTRIM)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0)) FROM t0; -- 0ms;
SELECT CAST(1.083139661E9 AS NUMERIC) FROM t0 WHERE (((((x'')>=(0.02623147367673484)))|(((0Xfffffffff75a9f88)-('958751613'))))) ORDER BY ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(NULL)))AND(CAST(t0.c0 AS REAL))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (('1941283931' IN (t0.c0, t0.c0)))), ((MAX(t0.c0)) ISNULL), COUNT(((t0.c0) ISNULL)) FROM t0 GROUP BY (((((t0.c0) ISNULL)))>=((t0.c0 COLLATE RTRIM))) HAVING (((((((t0.c0)OR('lo')))OR(t0.c0)), TOTAL(t0.c0), (t0.c0 IN ())))>((COUNT(t0.c0), ((t0.c0) NOTNULL), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))); -- 0ms;
SELECT ALL 0X76e1b019 COLLATE NOCASE, CASE WHEN NULL THEN COALESCE(t0.c0, t0.c0) ELSE HEX(t0.c0) END, MIN(((t0.c0) NOT BETWEEN (x'3120f5cf') AND (NULL))), SUM(((t0.c0) NOTNULL)) FILTER(WHERE ((((t0.c0)|(t0.c0)))LIKE(0x79c90351))) OVER (), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((0.2292995948419132)%(t0.c0)), t0.c0 COLLATE RTRIM, COUNT(t0.c0))) AND ((((t0.c0)IS NOT(t0.c0)), 0.4540191754844236, ((t0.c0)IS NOT(t0.c0))))) FROM t0; -- 0ms;
SELECT ALL ((TOTAL_CHANGES()) IS TRUE) FROM t0 WHERE (1.650581297E9); -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN t0.c0 THEN t0.c0 END)) FROM t0 WHERE (TRIM(DISTINCT NULL, x'') COLLATE BINARY); -- 0ms;
SELECT MAX(LOWER(x'')) FROM t0 WHERE (((((NULL) BETWEEN (0.16941699245032205) AND ('-1889947620')))-(LOWER(DISTINCT '')))); -- 0ms;
SELECT ALL (((x'88c3'))>((LOWER(t0.c0)))) FROM t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE ((((~ (NULL))) NOT NULL)); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0 LIMIT -1868632664; -- 0ms;
SELECT ((highlight(t0.c0, t0.c0, t0.c0, x'8cd8')) NOT BETWEEN ('') AND (((t0.c0)IS(t0.c0)))) FROM t0 WHERE (((NULL COLLATE NOCASE)+(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((t0.c0 IN ()) IN ()), ((-1244947329)IS NOT(((((((((t0.c0)OR(x'e5cc')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))), FIRST_VALUE((((((('-568845389') IS TRUE))AND((NOT (t0.c0)))))AND(t0.c0 COLLATE BINARY))) OVER (), CAST(((t0.c0) IS FALSE) AS INTEGER), LOWER(NULL COLLATE BINARY) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE BINARY IN ()) FROM t0 WHERE ((CAST(0.3522586642625639 AS TEXT) IN ())); -- 1ms;
SELECT DISTINCT json_array_length(t0.c0 COLLATE NOCASE) FROM t0 WHERE (ABS(((((((((0.6149232614837057)AND(x'')))OR(x'')))OR(x'1434')))OR(0xffffffffde57744e)))) GROUP BY CAST(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND('')) AS INTEGER) HAVING ((LOWER(DISTINCT t0.c0))<<(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
SELECT ((((t0.c0)%(NULL))) IS FALSE), (+ (t0.c0)), highlight(((t0.c0)<=(t0.c0)), COUNT(t0.c0), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), t0.c0) FROM t0;SELECT CAST(t0.c0 AS NUMERIC) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NOT (0.05861501879666875)))+((('๸pjs5''i+') NOT BETWEEN ('ὰ.') AND (0.2937085590914712))))); -- 0ms;
SELECT ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY FROM t0 WHERE ((((0.026209487563546796, 0xffffffffa6e7da28, NULL)) NOT BETWEEN ((((x'd0f8637435d0') NOT BETWEEN (0.6774139724930993) AND (x'')), TOTAL_CHANGES(), 0.6581464419113956 COLLATE BINARY)) AND (((+ ('\n!px')), ((0.8863589448723685)LIKE('')), ((1.559924977E9)GLOB(NULL)))))) GROUP BY (((((t0.c0)AND(t0.c0)))AND(NULL)) IN (TOTAL_CHANGES(), CASE t0.c0  WHEN '-1494754776' THEN t0.c0 END)); -- 0ms;
SELECT DISTINCT ((((x'3dfb')%(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) AND (((t0.c0) NOTNULL))) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT FIRST_VALUE(t0.c0) OVER () FROM t0 WHERE (((CASE WHEN 0.2590867454168776 THEN 0Xffffffffa2755ac3 ELSE 0xffffffffb5042a44 END) NOT BETWEEN ((('DX!ZVO')LIKE(NULL))) AND (((x'')*(NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN LIKELY(DISTINCT t0.c0) WHEN ((t0.c0)AND(x'')) THEN (((x'bda7b0d4')) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN NULL THEN '909036940' WHEN LTRIM(t0.c0, t0.c0) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)GLOB(t0.c0)) THEN CAST(t0.c0 AS TEXT) ELSE COUNT(t0.c0) END FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT '', ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (t0.c0) AND ((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0))))), 0.8847760557564904 FROM t0; -- 0ms;
SELECT LIKELY(CAST(t0.c0 AS BLOB)) FROM t0 ORDER BY (- (CAST(t0.c0 AS TEXT))) DESC, t0.c0; -- 0ms;
SELECT IFNULL((t0.c0 IN ()), t0.c0) FROM t0 LIMIT 1977559199; -- 0ms;
SELECT DISTINCT ((TRIM(t0.c0))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))), GROUP_CONCAT((((t0.c0))>((t0.c0)))) OVER (), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ()) FROM t0 WHERE (CASE WHEN 1732381151 THEN '蹅Xs8%9৘B' ELSE x'' END COLLATE BINARY) GROUP BY (((((t0.c0) ISNULL)))=((t0.c0 COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT CAST(((t0.c0) NOTNULL) AS NUMERIC), SUM(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM), ((((t0.c0)<(t0.c0)))<>((((t0.c0))<((t0.c0))))) FROM t0 LIMIT -550124956 OFFSET -1756506174; -- 0ms;
SELECT ALL MIN(LIKE(t0.c0, t0.c0)) FROM t0 WHERE ((((((('-1868632664')-(x'')))AND(CAST(NULL AS TEXT))))AND(CASE WHEN -568845389 THEN NULL ELSE x'' END))) GROUP BY ((t0.c0 IN ()) IN (CASE WHEN t0.c0 THEN t0.c0 ELSE 0xffffffffd6c7aa54 END)), (- (((t0.c0)|(t0.c0)))), ((t0.c0 COLLATE RTRIM)<>(((((((((t0.c0)OR(t0.c0)))AND('-1648064428')))OR(t0.c0)))AND(t0.c0)))) HAVING GROUP_CONCAT((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))); -- 0ms;
SELECT (t0.c0 IN ()) FROM t0 NOT INDEXED WHERE (CAST(((0.5996917076687666) BETWEEN (0.49237296736058656) AND ('')) AS INTEGER)); -- 0ms;
SELECT ALL CASE WHEN (('0.01221425711044788') NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN ((t0.c0) NOTNULL) THEN (t0.c0 IN ()) WHEN GROUP_CONCAT(t0.c0) THEN 0X5978f423 ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT load_extension((-1.6297486E8 IN (t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0))) FROM t0 WHERE (UPPER(NULL)); -- 0ms;
SELECT ALL LTRIM(((t0.c0) IS FALSE)) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE NOCASE IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.07787144615117625 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0) IS FALSE))))AND(CAST(t0.c0 AS NUMERIC))), (((t0.c0, t0.c0, NULL, t0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)|(t0.c0)), UNLIKELY(t0.c0), GLOB(t0.c0, t0.c0))) AND ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, GROUP_CONCAT(''), (t0.c0 IN ()), (~ (t0.c0)), t0.c0))), ((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY FROM t0; -- 0ms;
SELECT 0x408f664d FROM t0; -- 0ms;
SELECT DISTINCT ((MIN(t0.c0)) BETWEEN (AVG(t0.c0)) AND ((- (t0.c0)))) FROM t0 WHERE (CAST(LOWER(-1494754776) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((-1.743343091E9)||(t0.c0))) IS FALSE), (((t0.c0))>((t0.c0))) COLLATE BINARY, CASE WHEN ((x'')<>(0.613635934827788)) THEN t0.c0 WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN CASE t0.c0  WHEN '3.hgfoz' THEN t0.c0 END WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END FROM t0 WHERE (((((((0.014300783337134693)OR(NULL)))AND(0.18258238356569934))) ISNULL)); -- 0ms;
SELECT DISTINCT LAG(CAST(((t0.c0)IS(t0.c0)) AS REAL), ((((NULL) IS FALSE))==(t0.c0)), (((t0.c0)) NOT BETWEEN ((((((((((0.2535250201682058)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND (((t0.c0 IN ()))))) OVER () FROM t0 WHERE ((((((((((-550124956)OR(0.6014501362439336)))OR(NULL)))AND(NULL)))AND(x'6c2d')) IN ())) EXCEPT SELECT ALL ((t0.c0 IN ()) IN ()) FROM t0 WHERE (MIN(CASE WHEN 0.48902327737666207 THEN '' WHEN x'' THEN x'c66b' WHEN -1.60262981E8 THEN x'' END, CAST(NULL AS NUMERIC), (((('YQz')AND('')))AND('')), (((((((('-1876747369')AND(-971038800)))AND(x'6357')))OR(0.1105029973086804)))OR('\1{*0i~3')))); -- 1ms;
SELECT ALL (((x'ff45')) BETWEEN (((- (t0.c0)))) AND ((t0.c0 COLLATE RTRIM))), NULLIF(t0.c0, t0.c0) COLLATE BINARY, ((((((((TOTAL(t0.c0))OR(MAX(t0.c0))))OR(CAST(t0.c0 AS BLOB))))AND((t0.c0 IN (0x25469858, t0.c0)))))OR((~ (t0.c0)))) FROM t0 WHERE (CASE NULL COLLATE RTRIM  WHEN UNLIKELY(DISTINCT x'b5a2') THEN '*e\rd厑s	,' ELSE (+ ('56307602')) END); -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(t0.c0))) NOTNULL) FROM t0 WHERE ((((x'') BETWEEN (-1916779877) AND (x'')) IN ())); -- 0ms;
SELECT COUNT(*) OVER () FROM t0 WHERE (CAST(json_remove(0.17513197811729275, NULL, '-1749684615', 'YQz') AS TEXT)); -- 0ms;
SELECT DISTINCT '422696798' FROM t0 WHERE ((('-14000254') NOT BETWEEN (x'7f72') AND (0.43530033665486156)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((t0.c0)OR((- (t0.c0)))))OR(NULL COLLATE NOCASE)) FROM t0 WHERE ('1732381151'); -- 0ms;
SELECT ALL (json_extract(t0.c0, -1.073259555E9) IN (((t0.c0)+(0.9111821189017203)))), AVG(CAST(t0.c0 AS REAL)), ((t0.c0 IN ()) IN ()), (((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)<<(t0.c0))))), MAX(((t0.c0) NOT BETWEEN (t0.c0) AND (0Xffffffffd278cc67))) FROM t0 WHERE ((((('')<(NULL)))*(CAST('0.02623147367673484' AS BLOB)))) GROUP BY CAST(t0.c0 COLLATE BINARY AS INTEGER) HAVING CASE ((((t0.c0)OR(t0.c0)))OR(t0.c0))  WHEN ((t0.c0)>(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN t0.c0 COLLATE RTRIM THEN (t0.c0 IN ()) WHEN (NOT ('-813752292')) THEN TRIM(NULL) WHEN ((t0.c0)*(t0.c0)) THEN (+ (t0.c0)) WHEN (- (t0.c0)) THEN (NOT (t0.c0)) ELSE t0.c0 COLLATE RTRIM END; -- 0ms;
SELECT ((t0.c0)+(t0.c0)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT x'' COLLATE BINARY, ((MAX(t0.c0))LIKE(TOTAL(t0.c0))), COUNT(((t0.c0) NOT NULL)) FROM t0 LIMIT 1501099043; -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN ((t0.c0)) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))), ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((((t0.c0))>((t0.c0))))), CASE (((t0.c0))>((t0.c0)))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN CASE t0.c0  WHEN 0.44511255975465447 THEN t0.c0 ELSE t0.c0 END ELSE (((t0.c0))!=((t0.c0))) END FROM t0; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(t0.c0 AS INTEGER) THEN CAST(t0.c0 AS BLOB) END, LAST_VALUE(CASE t0.c0  WHEN t0.c0 THEN '656357570' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE RTRIM) OVER (), (((~ (t0.c0)))GLOB((- (t0.c0)))), MIN(MAX('422696798', t0.c0)), (((t0.c0))!=(((((t0.c0))>((t0.c0)))))) FROM t0; -- 0ms;
SELECT TOTAL(CASE WHEN 0.7945643210435193 THEN t0.c0 ELSE t0.c0 END) OVER ( PARTITION BY CAST(((t0.c0) IS FALSE) AS REAL), TRIM(DISTINCT (((('0.07787144615117625')OR(t0.c0)))AND(t0.c0)), HEX(DISTINCT t0.c0))) FROM t0; -- 1ms;
SELECT DISTINCT ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 END)), (((t0.c0 COLLATE RTRIM, ((((((((t0.c0)OR(0.9763325762354607)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), CAST(t0.c0 AS NUMERIC)))>=((((t0.c0)GLOB(t0.c0)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) IS TRUE)))), COUNT(CAST(t0.c0 AS NUMERIC)) FROM t0; -- 0ms;
SELECT AVG(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM t0 WHERE (((((x'98d1') NOTNULL)) NOT BETWEEN (CASE 0x1b92c5ca  WHEN 0xffffffffbd9cc0d0 THEN NULL END) AND (((x'')+(''))))); -- 0ms;
SELECT ((((((NULL)OR(t0.c0)))AND(t0.c0)))GLOB(((t0.c0) ISNULL))), (((+ (t0.c0))) BETWEEN ((t0.c0 IN ())) AND (t0.c0)), (((t0.c0)|(x'd28a1e00')) IN ()) FROM t0 WHERE ((x'' IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) ISNULL) FROM t0; -- 0ms;
SELECT ALL (((t0.c0 IN ())) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))<=((x'', t0.c0, t0.c0)))) AND (((t0.c0) BETWEEN ('-899183546') AND (x'1ef7')))) FROM t0; -- 0ms;
SELECT ALL (~ (t0.c0)), (t0.c0 IN ()), t0.c0 FROM t0 WHERE (((LIKELIHOOD(DISTINCT 1.977559199E9, 0.7770016136634268)) NOT NULL)) LIMIT -1403367690 OFFSET -1212832397; -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.017789681740670638, t0.c0))))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM t0 ORDER BY (NOT ((t0.c0 IN (t0.c0, t0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT TYPEOF(DISTINCT t0.c0) COLLATE RTRIM, COUNT((~ (t0.c0))), t0.c0 FROM t0 WHERE (UNLIKELY(DISTINCT CASE WHEN 0.8309408757886078 THEN x'' END)); -- 0ms;
SELECT t0.c0 FROM t0 WHERE (((((x'b971' COLLATE RTRIM)OR(((0.3086583038013424) NOTNULL))))OR((NULL IN ())))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 WHERE (((x'e2d5')%('8e뚞/6X')) COLLATE RTRIM) INTERSECT SELECT DISTINCT CASE WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END FROM t0 GROUP BY (CAST(t0.c0 AS TEXT) IN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)), t0.c0, LOWER(DISTINCT (+ (t0.c0))) HAVING t0.c0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((((t0.c0)>=(t0.c0)))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))), (('1650581297')>(t0.c0)) COLLATE RTRIM, COUNT(((t0.c0)=(x''))) OVER ( ORDER BY 0.4515395335444581 ASC  NULLS LAST) FROM t0; -- 0ms;
SELECT (((t0.c0 IN ()))GLOB((((t0.c0))<((t0.c0))))), ((CAST(t0.c0 AS NUMERIC)) BETWEEN ((+ (t0.c0))) AND (((t0.c0)LIKE(t0.c0)))), ((t0.c0) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT COUNT((0.14101764448548548 IN ())) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS INTEGER) FROM t0 GROUP BY ((((((((CAST(t0.c0 AS TEXT))AND((~ ('-138018098')))))OR(((9.0903694E8)IS(t0.c0)))))OR(((((x'17178a91')AND(t0.c0)))AND(t0.c0)))))AND((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))))) HAVING (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0, ((t0.c0)AND(t0.c0)), t0.c0, (((t0.c0))<=((t0.c0))))) AND ((LOWER(t0.c0), ((t0.c0) ISNULL), t0.c0 COLLATE RTRIM, x'', (NOT (t0.c0))))) ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0)<(t0.c0)) THEN (- (t0.c0)) END, COUNT((t0.c0 IN ())) FILTER(WHERE ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) BETWEEN ((t0.c0 IN ())) AND (t0.c0 COLLATE RTRIM))) OVER (), ((((('-1456070800')AND(-1456070800)))AND(t0.c0)) IN ()) FROM t0 WHERE ((882493935 IN ()) COLLATE BINARY) ORDER BY NULLIF((((t0.c0))!=((t0.c0))), t0.c0)  NULLS LAST; -- 0ms;
SELECT ALL TIME(((t0.c0)<<(t0.c0)), ((t0.c0)>=(x'')), GROUP_CONCAT(t0.c0), ((t0.c0) IS FALSE), ((t0.c0) NOT NULL)) FROM t0 WHERE (CAST(UNLIKELY(DISTINCT 0.9060942544420736) AS TEXT)); -- 0ms;
SELECT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<((((t0.c0)/(t0.c0))))) FROM t0; -- 0ms;
SELECT ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((((t0.c0)OR(NULL)))OR(t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), ((CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)GLOB(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((((NULL)AND(LOWER(t0.c0))))AND((((((((('1503677029')OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT MAX(((t0.c0) NOTNULL)), ((((((((((t0.c0) IS TRUE))OR((- (t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))OR(t0.c0)))OR(CAST('>' AS INTEGER))), ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((((t0.c0)) BETWEEN ((NULL)) AND ((t0.c0))))))AND(NULL)) FROM t0 WHERE (0.944017104913381); -- 0ms;
SELECT (((t0.c0) ISNULL) IN ()) FROM t0; -- 0ms;
SELECT (('370458707') NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0)), CAST(((t0.c0) IS FALSE) AS TEXT), MIN(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) FROM t0 LIMIT 1539457592 OFFSET 816713424; -- 0ms;
SELECT (((+ (t0.c0)))OR(((t0.c0)==(t0.c0)))) FROM t0 WHERE (CASE ((x'')IS NOT('C5n쉤'))  WHEN ((((((((x'')AND(0.8253373093122072)))OR(0.6215943545703786)))OR(NULL)))OR('-2049442917')) THEN CHANGES() ELSE CASE 0.8863589448723685  WHEN '' THEN NULL ELSE NULL END END); -- 0ms;
SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))*(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))) FROM t0 WHERE ((((((('') NOT NULL))AND(((x'')>>(0.6215943545703786)))))AND((('-917278892') NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT AVG((t0.c0 IN ())) OVER ( ROWS  CURRENT ROW) FROM t0 WHERE (CAST(COALESCE(-9.17278892E8, 5.6307602E7) AS BLOB)); -- 0ms;
SELECT DISTINCT SUM(COUNT(*)) FROM t0;SELECT DISTINCT FIRST_VALUE((((((t0.c0))==((x''))))||((((t0.c0))<=((t0.c0)))))) OVER () FROM t0 WHERE (((((NULL)>(NULL)))&('0.8253373093122072'))); -- 1ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((GROUP_CONCAT(t0.c0))) AND ((CAST(t0.c0 AS INTEGER)))), ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL), AVG(MIN((((t0.c0))>((-899183546))))) FROM t0 WHERE (((((ABS(DISTINCT NULL))AND(CASE '1539457592'  WHEN '!#' THEN 0.6398735392422074 ELSE NULL END)))OR((~ ('0.017789681740670638'))))) LIMIT 163316649 OFFSET 1385047698;SELECT ALL (~ (((t0.c0)IS NOT(t0.c0)))), COUNT(*) OVER (), MAX(((t0.c0) ISNULL)) FROM t0 WHERE (CASE WHEN CAST(']' AS NUMERIC) THEN ((('-138018098', '-1378322311', NULL))<=((x'', '', '/\rhVfkmonths{S5'))) END) LIMIT -1737438831; -- 0ms;
SELECT DISTINCT LAST_VALUE((((t0.c0 IN (t0.c0))) BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) OVER () FROM t0 ORDER BY CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN TRIM(DISTINCT t0.c0) THEN ((t0.c0)<<(0xffffffffb209e1fc)) ELSE ((t0.c0)IS NOT(t0.c0)) END  NULLS FIRST; -- 0ms;
SELECT ((LENGTH(t0.c0))>=(t0.c0)) FROM t0 WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN ((0.7550334655314813)%(x'')) ELSE CASE WHEN '0.4540191754844236' THEN '-1203481711' END END) GROUP BY (((t0.c0)<(x'')) IN ()); -- 0ms;
SELECT DISTINCT 0.21281779783243915, COUNT(*), NULL FROM t0 GROUP BY ((0.6365793600093252) ISNULL), ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) ISNULL), (((((t0.c0)OR(t0.c0)))OR(-9.17278892E8)) IN ((t0.c0 IN ()))); -- 0ms;
SELECT DISTINCT CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER) FROM t0 WHERE (x'e60d') GROUP BY (((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, NULL)) AND ((t0.c0, t0.c0, t0.c0))))OR(t0.c0 COLLATE RTRIM)))AND(CASE x''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) HAVING CAST(t0.c0 AS BLOB) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (((t0.c0) IS TRUE) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT CASE t0.c0  WHEN NULL THEN t0.c0 ELSE t0.c0 END) FROM t0 LIMIT -2048885324; -- 0ms;
SELECT ALL ((t0.c0 COLLATE RTRIM)IS NOT(((t0.c0) NOTNULL))) FROM t0 WHERE (CASE WHEN ((0.34906933248307204)&('')) THEN (((((((('1994502169')AND(0.7889290341354841)))AND('0.017789681740670638')))AND('-1460717912')))AND(NULL)) END); -- 0ms;
SELECT ALL (('-971038800')<<(json_array_length(t0.c0))) FROM t0 WHERE ((((NULL)-('W p}1q')) IN ('-1743343091'))); -- 0ms;
SELECT AVG(CAST(t0.c0 AS TEXT) COLLATE NOCASE), ((((MAX(t0.c0))OR(AVG(t0.c0))))OR(CAST(t0.c0 AS INTEGER))), (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))>((CASE t0.c0  WHEN t0.c0 THEN '739943543' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) IS TRUE) AS INTEGER) FROM t0 LIMIT 205591506; -- 0ms;
SELECT DISTINCT t0.c0, ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE), LAG(((t0.c0)IS NOT(((t0.c0) BETWEEN (NULL) AND (t0.c0)))), ((t0.c0) ISNULL), CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS BLOB)) OVER () FROM t0 WHERE (0.7126161792872372 COLLATE NOCASE); -- 0ms;
SELECT (((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0))))), ((((NOT (t0.c0))))>(('Q|5얊'))), json_array_length(t0.c0, 'i)') FROM t0 LIMIT 1568540999 OFFSET -899439772;SELECT DISTINCT ((t0.c0 COLLATE RTRIM) BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), CASE ((t0.c0)LIKE(t0.c0))  WHEN SUM(t0.c0) THEN (- (t0.c0)) ELSE (t0.c0 IN (t0.c0, t0.c0)) END, ((((0.8999493407712829)OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) FROM t0 WHERE (CASE WHEN '-1466040539' THEN LIKELIHOOD('1385047698', 0.3086902951256617) ELSE (- (NULL)) END); -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c0))>=(UNLIKELY(DISTINCT t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)<>(t0.c0)))), CAST(t0.c0 AS BLOB) COLLATE RTRIM, (((((t0.c0)AND('')))OR(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((((t0.c0)<(t0.c0)))) AND ((LIKE(t0.c0, t0.c0)))) FROM t0 WHERE (CHANGES()) GROUP BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)/(CASE WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE (CAST((('242888314')GLOB(x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((- (t0.c0))) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0) IS FALSE) COLLATE NOCASE) OVER () FROM t0; -- 0ms;
SELECT ALL NULL FROM t0; -- 0ms;
SELECT ((t0.c0 COLLATE BINARY)-(((t0.c0)<=('-448245125')))) FROM t0; -- 0ms;
SELECT DISTINCT (~ (TOTAL_CHANGES())), ((((((((CAST(t0.c0 AS NUMERIC))OR(t0.c0 COLLATE RTRIM)))AND((((t0.c0))>=((t0.c0))))))OR(AVG(t0.c0))))OR((0.2666458477890552 IN ()))), (((((((((t0.c0 IN ()))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(CAST(t0.c0 AS REAL))))OR((NOT (t0.c0)))))OR(t0.c0)) FROM t0 WHERE ((((x'') IS TRUE) IN ())); -- 0ms;
SELECT ALL CASE WHEN ((t0.c0)<(x'')) THEN MAX(t0.c0) ELSE t0.c0 END, ((((t0.c0)IS NOT(t0.c0))) IS FALSE), TOTAL(((t0.c0)+(t0.c0))) OVER () FROM t0 GROUP BY ((((t0.c0)/(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (TRIM(t0.c0, t0.c0))) HAVING (t0.c0 IN (t0.c0, t0.c0)) COLLATE RTRIM; -- 0ms;
SELECT ALL 0.19539660331163766 FROM t0 WHERE ((((json_quote(NULL)))>=((HEX(NULL))))); -- 0ms;
SELECT DISTINCT (+ (((t0.c0) ISNULL))), ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE), ((((t0.c0) NOT NULL))*((t0.c0 IN ('vQ/<')))) FROM t0 WHERE (UPPER(('놤\rR' IN (0Xffffffffce26a133)))) ORDER BY NULL DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT FIRST_VALUE(DATETIME('1994502169', ((t0.c0)LIKE(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT NTILE(COALESCE(DISTINCT ((t0.c0) NOTNULL), t0.c0)) OVER (), (((t0.c0, t0.c0, t0.c0)) BETWEEN (((- (t0.c0)), (((t0.c0, t0.c0, 0x5bc2d976))!=((t0.c0, t0.c0, t0.c0))), ((t0.c0) NOTNULL))) AND (((t0.c0 IN ()), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0))))), (+ ('')) FROM t0 WHERE ((+ (NULL COLLATE RTRIM))) GROUP BY ((('lo') IS TRUE) IN ()) HAVING ((((t0.c0, t0.c0, 0.1979261638362806)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) IN ()); -- 0ms;
SELECT DISTINCT CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN 0.39221518645267683 THEN 1.53949631E9 END, (((t0.c0))<((t0.c0))) COLLATE NOCASE, ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0)LIKE(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND('1100779112')))) FROM t0; -- 0ms;
SELECT (+ (((t0.c0)AND(t0.c0)))) FROM t0 WHERE (((((NULL)>(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(-1979183519 COLLATE NOCASE AS REAL), ((((((((t0.c0)AND(((t0.c0) IS TRUE))))OR((t0.c0 IN ()))))AND((t0.c0 IN ()))))OR(((t0.c0) NOT BETWEEN (0.44567554507889773) AND (t0.c0)))), LIKELIHOOD(UNLIKELY(t0.c0), 0.5487675039103093), ((((((((json_quote(t0.c0))AND(((t0.c0)<<(t0.c0)))))OR(CAST(t0.c0 AS NUMERIC))))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 END)), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.04764896679928177 END) IS FALSE) FROM t0;SELECT ALL ((((t0.c0)OR('#~B)PQ/')))OR(t0.c0)) COLLATE RTRIM FROM t0 WHERE ((((0.5988429310780308) BETWEEN ('{') AND (0.037693366469203515)) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE (((- (-8.99439772E8)) IN ())) GROUP BY (+ (('1970646233' IN (t0.c0)))) LIMIT -941470572 OFFSET 834139466; -- 0ms;
SELECT ALL RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)>=(t0.c0)) IN ()) FROM t0 WHERE ((+ (((163316649) NOTNULL)))); -- 0ms;
SELECT COUNT((NOT (t0.c0))), COUNT(*) OVER (), (~ (t0.c0 COLLATE RTRIM)) FROM t0 WHERE ((((NULL, ((595028572)GLOB(x'')), (- (NULL))))>((CASE WHEN NULL THEN NULL ELSE 0.5727724472597832 END, (((0Xffffffffb90d685f)) BETWEEN ((NULL)) AND ((0.7046596152259846))), ((0.5835379890676907)/(0.1756952619244293)))))) GROUP BY CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN (((0.9763325762354607))==((t0.c0))) THEN ((t0.c0)IS('-1159844057')) END HAVING CASE WHEN (+ (t0.c0)) THEN COUNT(*) ELSE '422696798' END; -- 0ms;
SELECT ALL CASE WHEN (('1517714734')IS(t0.c0)) THEN x'' ELSE CAST(t0.c0 AS REAL) END, (NOT ((t0.c0 IN ()))), CAST(t0.c0 AS NUMERIC) COLLATE NOCASE FROM t0 GROUP BY (- (t0.c0)) HAVING ((((t0.c0)<(t0.c0))) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) NOTNULL))); -- 1ms;
SELECT ALL ((0.47362157823830786) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT (('-1756506174')IS NOT(CASE WHEN t0.c0 THEN t0.c0 ELSE NULL END)) FROM t0; -- 0ms;
SELECT ALL ((COUNT(t0.c0))/(((t0.c0) IS TRUE))), t0.c0, (((t0.c0 IN ()))-(TYPEOF(t0.c0))) FROM t0 WHERE (x'') LIMIT 1559924977 OFFSET 463314418; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS TRUE)) IS FALSE) FROM t0; -- 0ms;
SELECT ALL '|uxHzG' FROM t0 WHERE (((((((NULL) BETWEEN (x'') AND (NULL)))OR(CASE WHEN '1568540999' THEN -992029347 END)))AND((NULL IN (0Xffffffffe6b9f932, NULL))))); -- 0ms;
SELECT GROUP_CONCAT((NOT (t0.c0))) FROM t0 WHERE (CAST(((('1539496310'))!=(('V4'))) AS BLOB)); -- 0ms;
SELECT DISTINCT (((~ (t0.c0)))+(((t0.c0)LIKE(t0.c0)))) FROM t0 WHERE (x'9482'); -- 0ms;
SELECT DISTINCT NULL COLLATE RTRIM FROM t0 ORDER BY (((((((((((x'')AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))<=((((t0.c0)>=(x'b8d8'))))) ASC  NULLS FIRST, t0.c0; -- 0ms;
SELECT DISTINCT CAST((((t0.c0)) NOT BETWEEN ((0.15107955039468746)) AND ((t0.c0))) AS REAL) FROM t0; -- 0ms;
SELECT LOWER(DISTINCT x''), HEX(t0.c0 COLLATE RTRIM), CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER) FROM t0 WHERE ((- (('1100779112' IN (524686184, 0.6425042294934461))))); -- 0ms;
SELECT DISTINCT ((((t0.c0)||(t0.c0)))+(t0.c0)) FROM t0; -- 0ms;
SELECT NULL FROM t0; -- 0ms;
SELECT DISTINCT SUM(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))), (~ (t0.c0 COLLATE NOCASE)), (((((((t0.c0)OR(t0.c0)))OR(t0.c0))))<=((((((t0.c0)OR(t0.c0)))OR(t0.c0))))) FROM t0 WHERE ((((NOT ('5<')))IS NOT((('1083139661') BETWEEN ('1130902538') AND (x'cbde'))))) ORDER BY (('蘲MR0' COLLATE RTRIM)&((+ (t0.c0)))), NULL  NULLS FIRST, ((CAST(t0.c0 AS INTEGER))<<(((t0.c0)IS(t0.c0)))); -- 0ms;
SELECT ALL ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE FROM t0 WHERE (CAST(((x'39ae')!=('2043216721')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), LAST_VALUE(CASE t0.c0 COLLATE NOCASE  WHEN (+ (0.5213984521377664)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) IS TRUE) END) OVER ( PARTITION BY ((((((((((t0.c0) NOTNULL))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((t0.c0)==(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND((- (t0.c0)))), ((t0.c0 COLLATE BINARY)<=(CAST(t0.c0 AS INTEGER)))), (((x'') IS TRUE) IN ()) FROM t0 WHERE ((((((1028551483 IN (x'')))AND((0.8461005079337557 IN ('0.17500200651514997')))))OR(((((NULL)OR(NULL)))OR(x''))))) GROUP BY (((t0.c0 IN ())) BETWEEN ((NOT (t0.c0))) AND ((t0.c0 IN ()))) HAVING (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))<=(((t0.c0 IN ())))); -- 1ms;
SELECT CASE 'e'  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN LTRIM(t0.c0) END FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0) IS TRUE), ((t0.c0)<<(t0.c0)), t0.c0 COLLATE NOCASE)) AND ((t0.c0 COLLATE RTRIM, t0.c0 COLLATE BINARY, load_extension(t0.c0, t0.c0)))), LIKELIHOOD(DISTINCT LIKELIHOOD(t0.c0, 0.7224435841784173), 0.13236664452418712), CUME_DIST() OVER ( PARTITION BY (t0.c0 COLLATE BINARY IN ()), ((t0.c0) NOTNULL)), CAST(t0.c0 AS REAL) COLLATE RTRIM, ((((((((((0.846053508018538)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND('|uxHzG')))LIKE('-1916779877')) FROM t0 GROUP BY '' HAVING (((((t0.c0) ISNULL), (t0.c0 IN ()), x''))>=(((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-1.756506174E9))), ((t0.c0)-(t0.c0)), ((t0.c0)+(t0.c0))))); -- 0ms;
SELECT '251988431', (- (t0.c0)), ((t0.c0)||((t0.c0 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT (+ (((((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0)<=(t0.c0))))==((COUNT(NULL)))), TOTAL(0.28153167315068695) OVER (), ((((t0.c0) NOTNULL))%(((t0.c0)%(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(CAST(t0.c0 AS BLOB)) FROM t0 WHERE (((HEX(0.578265391817395))LIKE((((0.42046915001313745)) NOT BETWEEN ((0.2518957385797995)) AND ((NULL)))))) EXCEPT SELECT DISTINCT ((((t0.c0)|(t0.c0))) ISNULL) FROM t0 WHERE ((((CASE WHEN '1' THEN x'ff22' END, 0.3770781307909574 COLLATE BINARY, (((((((('-2005333882')OR('eA')))AND(NULL)))OR(0.6931864769428999)))OR(NULL))))<>(((0.7472246983055044 IN ()), UPPER(NULL), (('-274311837') NOT NULL))))); -- 0ms;
SELECT DISTINCT CAST(STRFTIME(t0.c0, t0.c0, t0.c0) AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT LEAD(CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB), (((((t0.c0))<=((t0.c0)))) NOT BETWEEN ((- (t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), ((t0.c0)<(t0.c0))) OVER () FROM t0; -- 0ms;
SELECT ALL ((x'dba1') NOT BETWEEN (((t0.c0) ISNULL)) AND ((+ (t0.c0)))) FROM t0 GROUP BY (((((t0.c0))<=((NULL))))+(t0.c0)) HAVING NULLIF(t0.c0, ((t0.c0)<<(t0.c0))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT GLOB((t0.c0 IN (t0.c0, t0.c0)), t0.c0) FROM t0 LIMIT 2043216721 OFFSET 816713424; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))/(CAST(t0.c0 AS TEXT))) FROM t0; -- 0ms;
SELECT DISTINCT NULLIF(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)<>(t0.c0))) FROM t0; -- 0ms;
SELECT ((t0.c0 COLLATE NOCASE)>(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((json_valid(NULL))>=(t0.c0)) FROM t0 WHERE ((((((((((- ('0.7945643210435193')))AND(0.5870261835349577 COLLATE RTRIM)))OR((('.|]2]L斩')<=(0Xffffffffd2b9bfb1)))))AND(((-1.88994762E9)+(x'')))))AND(CAST('1708090463' AS BLOB)))); -- 0ms;
SELECT DISTINCT (((+ (t0.c0))) NOT BETWEEN (ABS('z(UU]Kpm')) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (CAST(((('')) NOT BETWEEN (('-14000254')) AND ((NULL))) AS NUMERIC)); -- 0ms;
SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<((t0.c0 IN (0.955608772188968)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0, NULL, t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0, t0.c0, -2049442917)))) NOT NULL) FROM t0 LIMIT -564693938; -- 0ms;
SELECT TOTAL(((((t0.c0)OR(t0.c0)))OR(t0.c0))) FROM t0 LIMIT -2030128458; -- 0ms;
SELECT (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (0.3638992800633357)))) FROM t0; -- 0ms;
SELECT ((t0.c0)GLOB(((t0.c0)==(t0.c0)))) FROM t0 WHERE ((((((((((('-41132477')OR('-145055864')))AND(0.9015953727279976)))OR(NULL)))AND(0.26509307027561857))) IS TRUE)); -- 0ms;
SELECT ALL json_extract(((((t0.c0)OR(t0.c0)))AND(t0.c0)), TOTAL(t0.c0)) FROM t0;SELECT ALL ('MwJ-(' IN (AVG(t0.c0))) FROM t0 WHERE (json_patch(UPPER(''), TYPEOF(DISTINCT 0.3465829276729291)));SELECT DISTINCT CASE WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0)<<(t0.c0)) END, CASE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN 0.6346743192938328 THEN ((t0.c0) IS FALSE) ELSE (t0.c0 IN ()) END, t0.c0 FROM t0 ORDER BY json_remove(t0.c0 COLLATE NOCASE, 0.8001454548903745, (NOT (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0))) ASC LIMIT 279984446;SELECT DISTINCT CASE (((t0.c0))<((t0.c0)))  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) ELSE ((t0.c0)AND(t0.c0)) END FROM t0 WHERE (((CASE 'm4'  WHEN NULL THEN 0.08586817831477189 ELSE x'4dc0' END)|(LIKELY(DISTINCT '-944021256')))); -- 1ms;
SELECT DISTINCT ((CAST(t0.c0 AS REAL))-(AVG(t0.c0))), ((((']h') IS FALSE))<<(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))), GROUP_CONCAT((t0.c0 IN ())) FILTER(WHERE TYPEOF((- (t0.c0)))) OVER () FROM t0 WHERE ((- (((0.9763325762354607)>=(NULL))))); -- 1ms;
SELECT CASE WHEN t0.c0 COLLATE NOCASE THEN '8e뚞/6X' WHEN t0.c0 THEN (NOT (t0.c0)) WHEN SUM(t0.c0) THEN (((t0.c0))<=((t0.c0))) ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END FROM t0 WHERE ((IFNULL(DISTINCT x'0f06', NULL) IN ((('1149781054') ISNULL)))); -- 0ms;
SELECT COUNT(*), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE RTRIM)), (((((((((NOT (t0.c0)))AND(((t0.c0)<=(t0.c0)))))OR((t0.c0 IN (t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT DISTINCT MAX(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), LAG((((((t0.c0 IN ()))AND(((t0.c0)>>(x'b54a')))))AND(t0.c0)), (~ ('1977559199')), (((((t0.c0) NOT NULL)))<=(((~ (t0.c0)))))) OVER (), FIRST_VALUE((((0.08146979021122491)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) OVER () FROM t0 WHERE (0X1614c053); -- 0ms;
SELECT ALL (((t0.c0, t0.c0, t0.c0)) BETWEEN ((TOTAL_CHANGES(), GROUP_CONCAT('958751613'), (~ (t0.c0)))) AND ((CAST(t0.c0 AS NUMERIC), (~ (t0.c0)), (t0.c0 IN (t0.c0))))) FROM t0 WHERE (((']h') ISNULL)); -- 0ms;
SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0 WHERE (CAST(((x'') IS TRUE) AS TEXT)); -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c0)) BETWEEN (CAST(3.23920968E8 AS BLOB)) AND (((t0.c0)|(t0.c0)))) FROM t0; -- 0ms;
SELECT NULL, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE(((((t0.c0)AND(t0.c0)))AND(t0.c0)))), LAST_VALUE(CASE t0.c0 COLLATE RTRIM  WHEN '&\ne' THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) NOTNULL) WHEN 0Xffffffff8f59b01c THEN x'fbe2' END) OVER () FROM t0 WHERE (((((NULL)/('-1203481711')))AND(((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((MAX(t0.c0))AND(COUNT(t0.c0))))AND(1283971138)), ((CAST('1732381151' AS REAL))<>(((((t0.c0)AND(t0.c0)))OR(t0.c0)))), (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (LOWER(((x'')||('')))); -- 0ms;
SELECT ((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0) ISNULL))))OR(((t0.c0)>(t0.c0)))))AND(((t0.c0)<(t0.c0)))))OR((t0.c0 IN ()))), ((t0.c0)<(STRFTIME(0.9506788167190668, t0.c0, t0.c0))), t0.c0 FROM t0 WHERE ((((NULL) BETWEEN ('.\n6#H[%') AND ('')) IN ())); -- 0ms;
SELECT ((((t0.c0) IS FALSE))|(t0.c0)) FROM t0 ORDER BY x'', TRIM(DISTINCT ((((((((t0.c0)OR(0.05861501879666875)))AND(t0.c0)))AND(t0.c0)))AND(-1985566458)), ((((((((t0.c0)OR(0.5589534781384556)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))); -- 0ms;
SELECT ((AVG(t0.c0))-((t0.c0 IN ()))), 0.053078985137147594, t0.c0 FROM t0 WHERE ((- ((((('yi')OR('P9]9g(')))OR(NULL))))); -- 0ms;
SELECT DISTINCT (((((('838116651') BETWEEN (t0.c0) AND (t0.c0)))OR(((((t0.c0)AND(t0.c0)))AND('-138018098')))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT ALL (((json_object(t0.c0, t0.c0)))>=((MAX(t0.c0)))), ((t0.c0)LIKE(t0.c0)) COLLATE BINARY, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)<<((((t0.c0))!=((t0.c0))))), TRIM(DISTINCT ((t0.c0)<=(t0.c0))), ((((t0.c0)OR(((t0.c0) NOT BETWEEN (0.15716063048365303) AND (t0.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.03664673887634551 END)) FROM t0;SELECT DISTINCT (((t0.c0)) BETWEEN ((QUOTE(t0.c0))) AND ((((t0.c0)GLOB(t0.c0))))) FROM t0 WHERE (CASE WHEN NULL THEN 0.2689410703572187 END COLLATE BINARY) ORDER BY QUOTE(CAST(t0.c0 AS INTEGER))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(SUM('') AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT x'6284' FROM t0; -- 0ms;
SELECT ALL (((((t0.c0) NOT NULL)))<>((((t0.c0)<<(t0.c0))))) FROM t0 WHERE (((((((-925519261)AND(0.7800407150615041)))OR('-162974860'))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0x5496a8c7 THEN NULL ELSE t0.c0 END))<(((+ (t0.c0))))), LAG((((t0.c0 IN ())) NOT BETWEEN (((t0.c0)||(t0.c0))) AND (CAST(t0.c0 AS REAL))), CASE WHEN ((t0.c0)<=(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN ((t0.c0) IS TRUE) THEN CAST(t0.c0 AS TEXT) WHEN ((t0.c0)||(t0.c0)) THEN t0.c0 COLLATE NOCASE ELSE t0.c0 END, ((t0.c0) NOT BETWEEN (2080006047) AND (NULL)) COLLATE NOCASE) OVER (), CAST(((t0.c0)<(t0.c0)) AS INTEGER) FROM t0 WHERE ((((0.0676542180167431, NULL, x'9b47')) NOT BETWEEN (((+ (NULL)), (- ('-1868632664')), (NULL IN ()))) AND (((NOT ('0.9111821189017203')), NULL, '뗈.6Coci' COLLATE NOCASE)))) LIMIT 328538699 OFFSET 1251705448; -- 0ms;
SELECT ALL COUNT(((((t0.c0)AND(t0.c0)))OR('z['))), ((((UNLIKELY(DISTINCT t0.c0))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(TOTAL(t0.c0))), (((((((t0.c0))<((t0.c0))))OR(((t0.c0)<=(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT COUNT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) COLLATE NOCASE FROM t0 LIMIT 1226239204 OFFSET -1484559600; -- 0ms;
SELECT ALL ((0.4956925217574024)&(((t0.c0)GLOB('Sp')))) FROM t0; -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE (CASE WHEN CAST(NULL AS BLOB) THEN ((((x'')AND('')))AND(-1.387155149E9)) ELSE ((('g#)bl')) BETWEEN (('wk[S}CTt''')) AND ((x'b265'))) END); -- 1ms;
SELECT ((((t0.c0 COLLATE RTRIM)OR(CASE t0.c0  WHEN NULL THEN t0.c0 ELSE t0.c0 END)))AND(((((((((0Xffffffffa9a6623b)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE NULL END)=((t0.c0 IN ()))), 'a(3n' FROM t0; -- 0ms;
SELECT DISTINCT COUNT(CASE NULL  WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) OVER () FROM t0 WHERE (((((NULL) IS FALSE))<=(x'' COLLATE NOCASE))) LIMIT -2123152191 OFFSET -2048885324; -- 0ms;
SELECT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()), ((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOTNULL))))AND(SQLITE_COMPILEOPTION_USED(t0.c0))))OR((~ (t0.c0)))), COUNT(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))) OVER ( GROUPS  CURRENT ROW) FROM t0 ORDER BY (((t0.c0)) BETWEEN ((CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))); -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, ((t0.c0) ISNULL), (+ (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0)-(t0.c0)))) AND ((CAST(0.7829994542839582 AS BLOB), x'', ((t0.c0)>>(t0.c0)), (~ ('D|zVi')), 0.6486674569037139))) FROM t0 INTERSECT SELECT GROUP_CONCAT(t0.c0) FROM t0 ORDER BY (((t0.c0)&(t0.c0)) IN ()) ASC  NULLS FIRST;SELECT (NULL IN ()) COLLATE RTRIM FROM t0 WHERE (((((x'6bf5') BETWEEN ('IGbS{') AND (x'ed09'))) NOT BETWEEN (((((1994502169)AND('881235691')))OR(8.82493935E8))) AND (CAST(x'' AS TEXT)))); -- 0ms;
SELECT ALL (- (CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE ((((0.9145069734920691 IN (0x4817e0bc))) IS TRUE)) LIMIT 56307602 OFFSET 127684763; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c0 AS TEXT) AS INTEGER) FROM t0 WHERE (((NULL) NOTNULL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT ALL ((t0.c0) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((t0.c0 IN ()))) FROM t0 WHERE ((((NULL IN ())) NOTNULL)); -- 0ms;
SELECT (((t0.c0)) BETWEEN ((LOWER(t0.c0))) AND ((t0.c0 COLLATE RTRIM))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||(CAST(t0.c0 AS BLOB))), ((((COUNT(x'3222'))OR(CAST(t0.c0 AS BLOB))))AND(t0.c0 COLLATE NOCASE)), (((- (t0.c0))) IS FALSE), ((((t0.c0)IS NOT(t0.c0)))|((+ (t0.c0)))) FROM t0 WHERE ((+ ((('-1680889476')||(x''))))); -- 0ms;
SELECT DISTINCT ((((t0.c0)/(t0.c0))) NOT BETWEEN (x'7bd9') AND (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT ALL CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 END WHEN (((t0.c0, 0.44567554507889773, t0.c0))!=((t0.c0, t0.c0, t0.c0))) THEN ('0.2292995948419132' IN ()) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.21080198215721502 END THEN CAST(x'' AS TEXT) WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN 0.5876233975858409 WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((t0.c0)>>(t0.c0)) ELSE ((t0.c0)AND(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT (~ (t0.c0 COLLATE BINARY)) FROM t0 ORDER BY (+ (((t0.c0)||(t0.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL SUM(CAST(t0.c0 AS TEXT)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE NOCASE, (((t0.c0)) NOT BETWEEN ((((t0.c0)||(t0.c0)))) AND ((t0.c0 COLLATE NOCASE))) FROM t0 WHERE ((+ (0.7241686762509035 COLLATE BINARY))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))LIKE(LIKELY(DISTINCT t0.c0))) DESC  NULLS LAST LIMIT 830619160; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS INTEGER))IS NOT(((NULL) ISNULL))) FROM t0 LIMIT -1876747369 OFFSET -167024079; -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))), NULLIF(((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(t0.c0)))OR(t0.c0)), (t0.c0 IN ())), highlight(t0.c0, t0.c0, t0.c0, t0.c0) COLLATE RTRIM FROM t0 WHERE (((((NULL)<=(0.026209487563546796)))==((('') NOT BETWEEN (x'3774') AND (' f\n]D[]h쭺zk'))))); -- 0ms;
SELECT HEX(CASE WHEN t0.c0 THEN t0.c0 END) FROM t0 WHERE (((((((0.38896925998442633)OR('|uxhzg')))OR(1960577496)))LIKE((('DX!ZVO') NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN (((((t0.c0, 0.1891877587430134, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, NULL, t0.c0))))) AND ((((t0.c0) ISNULL)))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0) NOTNULL) COLLATE RTRIM, (CASE WHEN '958751613' THEN '' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()), CAST(t0.c0 AS BLOB) COLLATE BINARY FROM t0; -- 1ms;
SELECT DISTINCT RANK() OVER () FROM t0 WHERE ((((NULL COLLATE BINARY))<(((x'' IN (0Xffffffffe548527b, 0.3977555807945895)))))) ORDER BY ((((t0.c0)>=(t0.c0))) ISNULL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c0 END) BETWEEN (t0.c0 COLLATE RTRIM) AND ('a([i+ ')) FROM t0 WHERE ((((~ ('FALSE')))<=((0.44567554507889773 IN ())))); -- 0ms;
SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('n''')))) BETWEEN ((~ (t0.c0))) AND (LIKELIHOOD(DISTINCT t0.c0, 0.6451799504709915))) FROM t0; -- 0ms;
SELECT ALL CAST(SQLITE_COMPILEOPTION_GET(t0.c0) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), CAST(t0.c0 AS NUMERIC))) AND ((t0.c0 COLLATE RTRIM, CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (+ (x''))))), (NOT (NULL)), ((((x'')OR(((t0.c0)GLOB(t0.c0)))))OR(t0.c0)) FROM t0 WHERE ((((('cuF?', NULL, 0.45586185454461203, 1643825905, NULL))==((NULL, 0.34336123108627636, 0.03941327040903542, 0.28153167315068695, x'770f'))) IN ())); -- 0ms;
SELECT LAST_INSERT_ROWID() FROM t0; -- 0ms;
SELECT ALL TRIM(((((t0.c0)OR(t0.c0)))AND(t0.c0)), COUNT(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT (- (((t0.c0)-(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT 0.972371416190079 FROM t0 WHERE ((((('!#' IN (-707448613))))>=((CAST(0.730263955621283 AS INTEGER))))) ORDER BY '' DESC  NULLS FIRST, t0.c0 DESC, (((((t0.c0)) BETWEEN ((t0.c0)) AND (('163316649'))))OR(t0.c0)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t0.c0)*(t0.c0)) IN ()), ((GROUP_CONCAT(t0.c0))*(t0.c0)), ((json_object(x'', t0.c0))IS NOT(((t0.c0)>(t0.c0)))) FROM t0 WHERE (x'2fc9');SELECT (- (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 2144717971 WHEN t0.c0 THEN '3m' END)) FROM t0 WHERE ('\8fD嶽ZdM'); -- 1ms;
SELECT DISTINCT (AVG(t0.c0) IN ()) FROM t0; -- 0ms;
SELECT (((t0.c0 IN ()))||(NULL)) FROM t0 WHERE (CASE WHEN (NOT ('')) THEN ((1460442691) ISNULL) END); -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE FROM t0 WHERE (((((0.900870538762105) NOT BETWEEN ('-1276288158') AND (x'')))+((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM)GLOB(((t0.c0) NOTNULL))) FROM t0 WHERE (((((0.6937246456766423) IS FALSE))IS('-215072317' COLLATE BINARY))) LIMIT 970480555; -- 0ms;
SELECT ALL CAST(CASE WHEN t0.c0 THEN t0.c0 END AS REAL) FROM t0 WHERE (CAST('' AS NUMERIC) COLLATE BINARY COLLATE RTRIM) LIMIT -1119673251 OFFSET -1648064428; -- 0ms;
SELECT ALL (('-943077036') BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)/(t0.c0)))) FROM t0 WHERE (CASE ((0.8055905859585508)AND(1722962388))  WHEN ('' IN ()) THEN TYPEOF(1.100779112E9) END) GROUP BY ((NULLIF(t0.c0, t0.c0)) BETWEEN ((t0.c0 IN (t0.c0, t0.c0))) AND (((t0.c0)!=(t0.c0)))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE BINARY, CAST(t0.c0 AS REAL) COLLATE RTRIM; -- 1ms;
SELECT ALL CASE t0.c0 COLLATE NOCASE  WHEN CAST(t0.c0 AS INTEGER) THEN (((t0.c0))=((t0.c0))) END, CASE ((t0.c0)GLOB(t0.c0))  WHEN NULLIF(DISTINCT t0.c0, t0.c0) THEN ((t0.c0) IS FALSE) ELSE ((t0.c0) IS FALSE) END, ((AVG(t0.c0)) NOT NULL) FROM t0 WHERE (((('O', 0.227149115057505, 0.31901400104472133, '-899183546', NULL)) BETWEEN ((CAST(NULL AS NUMERIC), (((NULL))>((NULL))), (0x30effeb9 IN ()), ((((x'')OR(x'')))AND('E#')), ((0.49365548188878483)LIKE(x'')))) AND ((CASE WHEN 0.7889290341354841 THEN 0.846053508018538 END, (((x'')) BETWEEN (('X]n?')) AND (('1539496310'))), CASE WHEN '882493935' THEN 0.39221518645267683 WHEN NULL THEN '-1456222965' WHEN '' THEN -1.749684615E9 ELSE 0Xffffffff985f923e END, ((x'') NOT BETWEEN (1.09193554E8) AND (5.92678469E8)), ((((((((1083139661)AND(x'439f')))AND('163316649')))OR(x'')))AND(0.39111237756260053)))))); -- 0ms;
SELECT DISTINCT ((NULLIF(t0.c0, t0.c0)) IS TRUE) FROM t0 GROUP BY ((('\n\rP&?a', (NOT (t0.c0)), (((t0.c0))>((t0.c0))), t0.c0, LIKELY(t0.c0)))>((((t0.c0)%(t0.c0)), t0.c0, CAST(t0.c0 AS NUMERIC), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (~ (NULL))))) HAVING ((((x'') IS FALSE))!=(NULLIF(DISTINCT t0.c0, t0.c0))) LIMIT 574106205 OFFSET 599739040; -- 0ms;
SELECT ALL ((((t0.c0) IS FALSE)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)&(t0.c0)))), ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) ISNULL), AVG(COUNT(*)) FROM t0;SELECT DISTINCT t0.c0 FROM t0 WHERE (((((CAST('-1212832397' AS REAL))OR((('p)Gv샐') NOT BETWEEN (NULL) AND (109193554)))))OR(('3' IN ())))); -- 0ms;
SELECT DISTINCT ((((LIKELIHOOD(t0.c0, 0.6034175147976042))AND((t0.c0 IN ()))))OR(NULL)) FROM t0 ORDER BY (+ (SQLITE_SOURCE_ID()))  NULLS LAST LIMIT -1287624622 OFFSET 323920968; -- 0ms;
SELECT ALL ((MIN(t0.c0)) NOT BETWEEN (AVG(t0.c0)) AND (NULL)) FROM t0 WHERE ((+ ((~ (x''))))); -- 0ms;
SELECT DISTINCT AVG(((((t0.c0)AND(t0.c0)))AND(t0.c0))) OVER () FROM t0 WHERE ((((((0.19539660331163766))>=((0.6425042294934461))))*(((NULL) BETWEEN (0.15107955039468746) AND (''))))) GROUP BY UNLIKELY((t0.c0 IN ())) HAVING (((t0.c0 IN (t0.c0, t0.c0)))>>(CAST(t0.c0 AS TEXT))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC))%(((t0.c0) NOTNULL))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)OR(0.6923212580178096)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(((t0.c0)*(t0.c0)))) FROM t0 WHERE ('-160262981') ORDER BY ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND('')))AND(t0.c0)) COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((TYPEOF(t0.c0))>(((t0.c0)|('1536886703')))) FROM t0; -- 0ms;
SELECT ALL GROUP_CONCAT((- (t0.c0))) OVER () FROM t0 WHERE (((((((0.8313496785858583)OR(x'')))AND(NULL))) IS TRUE)); -- 1ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0 WHERE (((LAST_INSERT_ROWID())%(CASE NULL  WHEN NULL THEN x'19a3' WHEN '-1241765453' THEN NULL WHEN x'49f8' THEN '-23806372' END))) GROUP BY ((((-1.488217349E9) NOTNULL))||(((t0.c0)>=(t0.c0)))), -813752292, (t0.c0 IN (t0.c0)) COLLATE NOCASE ORDER BY CASE t0.c0 COLLATE BINARY  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)||(t0.c0)) ELSE CAST(t0.c0 AS REAL) END;SELECT t0.c0 FROM t0 LIMIT 106019406; -- 0ms;
SELECT DISTINCT ((((t0.c0 COLLATE RTRIM)OR((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE ((((((('-813752292')||(x'5def')))OR((NOT (0Xffffffff9569e2fd)))))AND((('1070002889') NOT BETWEEN ('-7314688') AND (0.8723090957492381))))) GROUP BY IFNULL(((t0.c0)IS NOT(t0.c0)), UNLIKELY(DISTINCT t0.c0)); -- 0ms;
SELECT DISTINCT (t0.c0 IN ((t0.c0 IN (t0.c0)))), RANK() OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND LIKELIHOOD(((t0.c0)<(t0.c0)), 0.725363810287835) FOLLOWING), CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB) FROM t0; -- 0ms;
SELECT ALL ((t0.c0 COLLATE NOCASE) NOTNULL), CAST((~ ('-1737438831')) AS REAL), 0x53218d7b FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS TRUE))<=(t0.c0)) FROM t0 WHERE (CASE (~ ('-151434013'))  WHEN (- (0.013844347969648396)) THEN ((NULL) NOT BETWEEN (x'') AND (NULL)) END); -- 0ms;
SELECT ((((((t0.c0)LIKE(t0.c0)))AND((NULL IN ()))))AND(((t0.c0)=(t0.c0)))) FROM t0 ORDER BY t0.c0  NULLS FIRST, ((CASE WHEN t0.c0 THEN t0.c0 END)IS((+ (t0.c0)))) DESC  NULLS FIRST, (((((((((t0.c0 IN ()))OR(((x'')||(t0.c0)))))OR(t0.c0)))AND('205591506')))OR((+ (t0.c0)))); -- 0ms;
SELECT DISTINCT ((t0.c0)OR(t0.c0)) COLLATE BINARY FROM t0 WHERE ((((((((((NULL)AND(',傫68KQ5⫖鄗')))AND(x'')))OR(x'414b')))AND(0.6134842511805809)) IN ())); -- 0ms;
SELECT ALL ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (MIN(t0.c0)) AND ('422696798')) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, LEAD((NOT (t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))), (~ (t0.c0))) OVER (), t0.c0 FROM t0 ORDER BY ((((t0.c0)<=(t0.c0)))IS NOT(CASE WHEN t0.c0 THEN t0.c0 WHEN x'7902' THEN t0.c0 WHEN '882493935' THEN 0.1846818047088553 ELSE t0.c0 END)) ASC  NULLS FIRST, (+ (t0.c0)); -- 0ms;
SELECT (- (((t0.c0)>(t0.c0)))) FROM t0 WHERE (((highlight(NULL, '-1307975172', 602144026, 1941283931)) NOTNULL));SELECT DISTINCT CASE (t0.c0 IN ())  WHEN (+ (t0.c0)) THEN json_patch(t0.c0, '') ELSE ((t0.c0)GLOB(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT '' FROM t0 WHERE (CASE ((' !?mvUq') BETWEEN (x'2a2e') AND (NULL))  WHEN INSTR('', 'E*') THEN (((('y')OR('-1990870442')))AND(2080052389)) END); -- 0ms;
SELECT AVG(((((t0.c0)OR(t0.c0)))AND(t0.c0))) OVER (), UNLIKELY(((t0.c0)AND(t0.c0))), FIRST_VALUE(((t0.c0 IN ()) IN ())) OVER () FROM t0 WHERE (((((0.6603040258342874)|('^\fp'))) NOTNULL)); -- 0ms;
SELECT ALL (- (((t0.c0)>>(t0.c0)))) FROM t0 WHERE (((((((NULL)OR('')))AND('')))/((NOT ('kT'))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 LIMIT 1620352102 OFFSET 625383512; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT ((t0.c0)+(t0.c0)), 0.8391162016595859), t0.c0, ((((((1.732381151E9) NOT NULL))OR(0.7126161792872372)))AND((- (t0.c0)))) FROM t0 WHERE (CASE WHEN ((NULL) BETWEEN (NULL) AND (NULL)) THEN (0.6774703141116518 IN ()) WHEN ((((((((0.3522586642625639)AND(x'9513')))AND(x'')))OR('1762817509')))AND(0x3925637d)) THEN (('VS') ISNULL) WHEN ((NULL)/('P9]9g(')) THEN '' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT 0xffffffff99688d51 FROM t0; -- 0ms;
SELECT LAG((((t0.c0) IS TRUE) IN (((t0.c0) NOT BETWEEN (x'') AND (t0.c0)), ((((t0.c0)OR('1423509302')))AND(t0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))))), ((((((((((0.29683631807212896)LIKE(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN '417174011' WHEN x'13058dba' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR((NOT (t0.c0)))))AND(((t0.c0)&(t0.c0)))))OR((((((((('')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) OVER (), (+ (t0.c0)), ((((t0.c0)LIKE(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (1.09193554E8) AND (t0.c0))) AND (((t0.c0) ISNULL))), ((~ (t0.c0)) IN ((t0.c0 IN (0Xffffffff9dc48854)), LIKELY(DISTINCT t0.c0))), (((CAST(t0.c0 AS INTEGER)))=((t0.c0 COLLATE BINARY))) FROM t0 WHERE (((0.4349479931879149 IN ()) IN ())) LIMIT 2145952939; -- 1ms;
SELECT ((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))) NOTNULL) FROM t0 WHERE (((((NULL)+(0.15103999301359539))) NOT NULL)) LIMIT -1754690611; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c0 IN ())) FROM t0 ORDER BY (0.6541485862261902 IN ()) COLLATE NOCASE  NULLS LAST, (((t0.c0) NOTNULL) IN ())  NULLS FIRST, CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)%(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((t0.c0)<=(t0.c0))) FROM t0; -- 0ms;
SELECT COUNT('^') OVER () FROM t0; -- 0ms;
SELECT ALL MAX(MIN(t0.c0)) COLLATE NOCASE FROM t0;SELECT ((((((((861614663)AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)OR('462603722')))OR(t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0; -- 0ms;
SELECT ALL (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)OR(x'')))AND(t0.c0)), ((t0.c0)==(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(0.44047654334392283)))AND(t0.c0)))OR(t0.c0)), CAST(t0.c0 AS TEXT), 0.05145695068441847))) FROM t0 LIMIT -1976510047 OFFSET 56307602; -- 0ms;
SELECT CAST(t0.c0 AS INTEGER) FROM t0 GROUP BY (NOT (CAST(t0.c0 AS TEXT))) HAVING ('' COLLATE BINARY IN ()); -- 0ms;
SELECT DISTINCT MIN('0.3770781307909574') FROM t0 WHERE (((((NULL IN ())))>=(('P]')))) GROUP BY (((t0.c0 IN ()))GLOB(((((t0.c0)AND(t0.c0)))OR(t0.c0)))) HAVING ((t0.c0) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (COUNT(t0.c0))); -- 1ms;
SELECT DISTINCT ((x'')=(NULLIF(t0.c0, t0.c0))) FROM t0 WHERE (((0.19428562478014622)>(((0.5862716172944158)|(0.7755761104368047))))); -- 1ms;
SELECT DISTINCT CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) FROM t0; -- 0ms;
SELECT (NOT (COUNT(*))) FROM t0 WHERE ((((((0xffffffffcf612e36 IN ('-1889947620')))AND(((0.9398433382882415) IS FALSE))))AND(CAST(0.30238208297419167 AS TEXT)))); -- 0ms;
SELECT ALL 6.5635757E8, (((((t0.c0)<=(t0.c0))))==((((t0.c0) NOTNULL)))), LAG((~ (UPPER('w/+Y	'))), t0.c0, ((((t0.c0 IN ())))<=((NULL)))) OVER (), ROUND(CAST(t0.c0 AS INTEGER), TRIM(t0.c0)), IFNULL(t0.c0, t0.c0) COLLATE NOCASE COLLATE NOCASE FROM t0; -- 0ms;
SELECT (- (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT (t0.c0 IN ()), (t0.c0 IN ())) FROM t0 ORDER BY t0.c0 DESC; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))|(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))), CASE t0.c0  WHEN (~ (0Xed0a538)) THEN (t0.c0 IN ()) ELSE ((t0.c0)%(NULL)) END, t0.c0 COLLATE NOCASE FROM t0 WHERE (((((((0X75df289f, x'', '-836329165')) BETWEEN (('-1876747369', '-813752292', 0x57207389)) AND ((NULL, 1.732381151E9, 0x2dc9e754))), ((x'da6b')*(1564912147)), (NOT (0.8745081934027584))))>=((CAST(NULL AS NUMERIC), x'' COLLATE NOCASE, (('') BETWEEN (-1.876747369E9) AND (1501099043)))))); -- 0ms;
SELECT DISTINCT ((((((t0.c0) ISNULL))OR(((t0.c0)<(t0.c0)))))AND(CAST(t0.c0 AS NUMERIC))), ROW_NUMBER() OVER (), AVG(((NULL)>>(t0.c0))) OVER () FROM t0 WHERE (load_extension(TRIM(1539457592), '739943543'));SELECT (0.11051743168062311 IN ()) COLLATE RTRIM FROM t0 WHERE (CAST((- (0.07582658869684489)) AS INTEGER)) ORDER BY CASE WHEN ((t0.c0)/(t0.c0)) THEN (t0.c0 IN (t0.c0, t0.c0)) END; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0)GLOB(t0.c0)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS BLOB))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((t0.c0)-(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) FROM t0; -- 0ms;
SELECT json_remove(((((t0.c0)OR(t0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), (NOT (((t0.c0)IS NOT(t0.c0)))), ((((((((CAST(t0.c0 AS TEXT))OR((((''))<((t0.c0))))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0)<(t0.c0)))))OR(((t0.c0) NOT NULL))) FROM t0;SELECT DISTINCT SUM((t0.c0 IN ())) FROM t0; -- 1ms;
SELECT ((((t0.c0 IN ())))==(((((t0.c0, t0.c0, t0.c0))==((x'', t0.c0, t0.c0)))))), (((t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE))) AND ((0xffffffff8dc0429b COLLATE BINARY))), (((((t0.c0)IS NOT(t0.c0))))<((((t0.c0)-(t0.c0))))) FROM t0; -- 0ms;
SELECT ((t0.c0 COLLATE RTRIM) IS TRUE) FROM t0 WHERE (((x'') BETWEEN (CAST(1.584272772E9 AS TEXT)) AND (x'4318' COLLATE NOCASE))); -- 0ms;
SELECT ALL MAX(((t0.c0) IS TRUE)) FROM t0 WHERE (NULL); -- 0ms;
SELECT ((t0.c0 IN ()) IN (x'')) FROM t0 WHERE (((((0.5593095909008753) NOT BETWEEN ('1003331501') AND (NULL)))/((~ (x''))))); -- 0ms;
SELECT DISTINCT ((((t0.c0 COLLATE RTRIM)AND((~ (t0.c0)))))OR((NOT (t0.c0)))), CAST((t0.c0 IN ()) AS REAL), ((((t0.c0) IS FALSE)) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN (((((t0.c0))>=((t0.c0))))) AND ((((((((((((((NULL)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(NULL))))) FROM t0 NOT INDEXED WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST(t0.c0 COLLATE RTRIM AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c0)))AND(t0.c0))) IS TRUE) FROM t0 WHERE ((((0X7c87e9ac)&(0.024843017191966466)) IN (((1294389928)>>(x''))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS BLOB)) IS TRUE) FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT (((((t0.c0 IN ()))AND((t0.c0 IN ()))))AND(((t0.c0)>>(t0.c0)))) FROM t0; -- 0ms;
SELECT CAST(((t0.c0) IS FALSE) AS BLOB) FROM t0; -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE (((- ('0.9398433382882415')) IN ('' COLLATE BINARY, TRIM(DISTINCT NULL)))); -- 0ms;
SELECT ALL ((((- (t0.c0))))>=((((t0.c0) IS TRUE)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)==(0xffffffffee901e38)))LIKE(TOTAL(t0.c0))) FROM t0 WHERE (CASE '687766531'  WHEN -2.048885324E9 THEN '588875764' ELSE x'' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((NULL)<=(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((t0.c0) NOTNULL) IN ()), ((((x'')GLOB(t0.c0)))IS(json_array_length(t0.c0))), LOWER(DISTINCT ((x'')=(t0.c0))), (((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))=((CASE WHEN t0.c0 THEN t0.c0 END))), (- (t0.c0)) COLLATE NOCASE FROM t0;SELECT DISTINCT CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) FROM t0 WHERE (json_quote(((NULL) IS FALSE))) GROUP BY ('47471957' IN ()) COLLATE NOCASE HAVING CAST(CAST(t0.c0 AS NUMERIC) AS BLOB) ORDER BY (((((t0.c0))>((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c0) IS TRUE))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((x'', t0.c0, t0.c0, t0.c0, t0.c0)))) ISNULL), ((t0.c0 COLLATE BINARY) NOT BETWEEN (((0.4685317678026274) IS TRUE)) AND (((t0.c0)*(t0.c0)))), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND ((NOT (NULL)))) FROM t0; -- 0ms;
SELECT ((((NOT (t0.c0))))>=(((~ (t0.c0))))) FROM t0 WHERE (CAST(((((x'')OR(x'')))OR(NULL)) AS INTEGER)) GROUP BY (t0.c0 IN ()) COLLATE NOCASE, (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))==(t0.c0)), ((((t0.c0 COLLATE RTRIM)AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(t0.c0)); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((((((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR((~ (t0.c0)))))OR(NULL)))OR(((t0.c0)==(t0.c0)))))AND(CHANGES())))OR('-1477850379' COLLATE BINARY)))AND(((t0.c0) IS TRUE)))) OVER (), ((GROUP_CONCAT(t0.c0))<>(((t0.c0)&(t0.c0)))), ((((((((t0.c0)OR(COUNT(t0.c0))))OR(MAX(t0.c0))))AND(((t0.c0)IS NOT(t0.c0)))))AND(t0.c0)) FROM t0; -- 1ms;
SELECT DISTINCT ((((t0.c0)AND(NULL)))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0 GROUP BY ((((t0.c0) IS TRUE))>>(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), CASE (((t0.c0))>((t0.c0)))  WHEN TYPEOF(DISTINCT t0.c0) THEN CHANGES() END, 'py' HAVING NULL; -- 0ms;
SELECT DISTINCT COUNT(CAST(t0.c0 AS REAL)) FROM t0 ORDER BY x'' COLLATE BINARY ASC  NULLS LAST, 0.9071446505187412; -- 0ms;
SELECT DISTINCT (x'' IN ()) FROM t0 WHERE ('\n!PX'); -- 0ms;
SELECT DISTINCT SUM('|f0-0BD!'), ((CASE WHEN x'' THEN t0.c0 ELSE t0.c0 END)%(NULL)), GROUP_CONCAT(((((t0.c0)AND(t0.c0)))OR('0.5835379890676907'))) OVER () FROM t0; -- 0ms;
SELECT x'e77a' FROM t0 WHERE (CAST(((NULL)>=(')[')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))IS(((((t0.c0)AND(0xffffffffd40c1aa7)))OR(t0.c0)))), CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (1081944676)) THEN ((0X1931d75e)-(t0.c0)) WHEN (t0.c0 IN ()) THEN ((t0.c0)>>(t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(t0.c0 AS TEXT) ELSE t0.c0 COLLATE BINARY END, (((t0.c0)) NOT BETWEEN ((COUNT(t0.c0))) AND (((~ (t0.c0))))) FROM t0 WHERE ((((0.18281407299787877 IN ())) NOT NULL)) ORDER BY ((t0.c0) IS FALSE) COLLATE NOCASE, t0.c0 DESC  NULLS LAST, (((((t0.c0) IS FALSE), (NULL IN (t0.c0)), ((t0.c0)||(t0.c0))))<=(((t0.c0 IN (t0.c0, t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0)>=(NULL))))) DESC; -- 0ms;
SELECT ALL CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (0.6215943545703786)) AS BLOB) FROM t0 WHERE (CASE CASE WHEN 0Xffffffff8a080e61 THEN x'' WHEN x'' THEN '-326662029' WHEN x'' THEN x'f3061e8c' ELSE '-1243355886' END  WHEN CAST(0.41197405503530726 AS INTEGER) THEN ((0xffffffffd278cc67)%('')) WHEN (~ ('834139466')) THEN CASE WHEN x'' THEN x'' END WHEN (('雃b9C')GLOB('OP89')) THEN (((1243124106))!=(('-1829232130'))) WHEN ((0.6769426625559928)AND(-899439772)) THEN ((x'459f')<=(x'9327')) WHEN (NOT (x'')) THEN 0.5084868202119317 ELSE '-2048885324' COLLATE NOCASE END) LIMIT -1113800496 OFFSET 1760016371; -- 0ms;
SELECT ALL CAST(CAST(t0.c0 AS REAL) AS REAL) FROM t0 WHERE (((+ (NULL)) IN ())); -- 0ms;
SELECT ((t0.c0) NOTNULL) COLLATE NOCASE FROM t0 WHERE (((0.28594219433268486) BETWEEN ('1650581297') AND (NULL)) COLLATE BINARY) LIMIT -192366946 OFFSET -1387155149; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (MAX(t0.c0, t0.c0)) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (((((x'1de5')) BETWEEN ((x'')) AND ((''))) IN ())); -- 0ms;
SELECT DISTINCT ((t0.c0)%(t0.c0)) COLLATE NOCASE, HEX(DISTINCT ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))), (((t0.c0)) NOT BETWEEN ((0.47878244532663783)) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) FROM t0; -- 0ms;
SELECT ALL NTILE((COALESCE(t0.c0, t0.c0, t0.c0, t0.c0) IN ())) OVER () FROM t0 WHERE (CASE WHEN (+ (0.3468694476152595)) THEN ((0.5387631020928413)!=('909036940')) END) GROUP BY (((t0.c0)) NOT BETWEEN ((json_valid(NULL))) AND ((t0.c0))) HAVING (('-1552757277')>=((('-1203481711') BETWEEN (t0.c0) AND (t0.c0))));SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '0.6581464419113956' END) BETWEEN (t0.c0 COLLATE BINARY) AND (TOTAL(t0.c0))), CASE WHEN t0.c0 COLLATE BINARY THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END ELSE CAST(t0.c0 AS REAL) END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE FROM t0 WHERE (((0.41627778635780477) BETWEEN ((('') NOT BETWEEN (NULL) AND ('-156882514'))) AND ((((''))<>((x'')))))); -- 0ms;
SELECT DISTINCT TRIM(AVG(t0.c0), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) FROM t0; -- 0ms;
SELECT ALL CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0)<(x'')))OR((((t0.c0))<>((t0.c0))))))AND(((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(0.9672043517587842)))) FROM t0 WHERE ((((- (NULL))) NOT BETWEEN (('-1e500' IN ())) AND (3.23920968E8 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN (t0.c0))) NOT BETWEEN ('') AND (((t0.c0)*(t0.c0)))), ((ABS(t0.c0)) BETWEEN (t0.c0) AND (((t0.c0)!=(t0.c0)))), (- (t0.c0 COLLATE RTRIM)), (NOT (((((((((t0.c0)AND('j#\rmjeF')))AND(t0.c0)))OR(0.5641036071117547)))AND(t0.c0)))), (- ((t0.c0 IN ()))) FROM t0 INTERSECT SELECT DISTINCT ((CAST(t0.c0 AS BLOB))>=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), t0.c0, ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT NULL), MIN(t0.c0, CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0))==((0xffffffffb62e92ae, t0.c0, t0.c0))), ABS(DISTINCT t0.c0)), ((COUNT(*)) IS TRUE) FROM t0; -- 0ms;
SELECT ALL TYPEOF(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), NULL, ((((t0.c0) BETWEEN (t0.c0) AND ('27vw['))) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT (((MIN(x'6de7', t0.c0), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, TOTAL(t0.c0), (t0.c0 IN ()), CAST(t0.c0 AS REAL), (t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c0 ELSE t0.c0 END))>=((CAST(t0.c0 AS INTEGER), ((t0.c0)OR(t0.c0)), t0.c0, (t0.c0 IN ()), MIN(t0.c0), CAST(t0.c0 AS BLOB), t0.c0))), COUNT(*), ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0) NOTNULL))))OR((t0.c0 IN (602144026)))), CAST((('282843182') NOT BETWEEN (x'') AND (t0.c0)) AS TEXT), SUM(((t0.c0)%(t0.c0))) OVER ( ORDER BY ((CAST(t0.c0 AS BLOB))>=(CAST(t0.c0 AS INTEGER))) ASC) FROM t0 WHERE ('0.861589261040311') GROUP BY ((t0.c0)<=(t0.c0)) COLLATE NOCASE, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (0.6971987836101813 COLLATE BINARY)), (((0.5758939066196073, t0.c0, 0Xffffffff9816b20d)) NOT BETWEEN ((TRIM(DISTINCT t0.c0, t0.c0), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((t0.c0) IS FALSE))) AND (((~ (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0)|(t0.c0))))); -- 0ms;
SELECT ALL CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0)-(t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0) BETWEEN (5.92678469E8) AND (NULL)) WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND (('0.7126161792872372'))) THEN t0.c0 END FROM t0; -- 0ms;
SELECT DISTINCT (- (((t0.c0)&(t0.c0)))), ((t0.c0) NOTNULL), t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE WHEN 0.20932742832226703 THEN 0.5849020787098173 ELSE x'522a6894' END COLLATE BINARY) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN ((t0.c0 IN ())) AND ((t0.c0 IN ()))); -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) IS FALSE) FROM t0 ORDER BY NULL; -- 1ms;
SELECT CASE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))  WHEN ('G E?A' IN ()) THEN ((t0.c0) ISNULL) ELSE GROUP_CONCAT(t0.c0) END FROM t0 ORDER BY ((((t0.c0)||(t0.c0)))<(((t0.c0)|(t0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (((t0.c0)) NOT BETWEEN (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.3708593997348524, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))) AND ((CASE WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) FROM t0 WHERE ((CAST(x'' AS NUMERIC) IN ())); -- 0ms;
SELECT (- (AVG(t0.c0))) FROM t0; -- 0ms;
SELECT ALL ((t0.c0 COLLATE NOCASE)<(CASE t0.c0  WHEN -2.092251888E9 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0 WHERE (((0x13ccf308 COLLATE RTRIM)IS NOT(CASE 0.9398433382882415  WHEN 0x6e6782ba THEN x'' WHEN '0.28153167315068695' THEN 0Xffffffffec389e2f WHEN 0X49fa64cf THEN x'0ee4' ELSE NULL END))) LIMIT -159082788 OFFSET 816713424; -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN ((((t0.c0, t0.c0, x''))<=((t0.c0, t0.c0, t0.c0)))) AND (MAX(t0.c0))), (('FALSE')<=(MAX(t0.c0))), (((t0.c0 IN (t0.c0)))%(CAST('' AS INTEGER))) FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOTNULL)) IS FALSE) FROM t0 WHERE (((CASE WHEN '䓾' THEN 0.5150490001553211 ELSE 648444194 END) NOTNULL)); -- 0ms;
SELECT TOTAL((((t0.c0, t0.c0, t0.c0, 0.15107955039468746, t0.c0))<=((t0.c0, t0.c0, t0.c0, 0Xffffffff85d7fb9b, t0.c0)))) OVER () FROM t0 WHERE ((+ ((~ (x''))))); -- 0ms;
SELECT ALL t0.c0 FROM t0 LIMIT -940857084; -- 0ms;
SELECT ALL ((HEX(DISTINCT t0.c0)) NOTNULL), (((MAX(NULL)))==((UNLIKELY(DISTINCT '')))), LEAD(((((((t0.c0) BETWEEN (x'') AND (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR(x'')))))OR(CAST(t0.c0 AS TEXT))), CAST(LAST_INSERT_ROWID() AS NUMERIC), LOWER(DISTINCT ((((t0.c0)AND(t0.c0)))OR(t0.c0)))) OVER ( PARTITION BY ((((NOT (t0.c0))))<>((((t0.c0)<<(t0.c0))))), t0.c0) FROM t0 WHERE (((PRINTF(0.8461005079337557)) BETWEEN ((((('')AND('')))OR(x''))) AND ((0X69f876f6 IN ())))) GROUP BY ((((t0.c0) NOTNULL)) ISNULL) HAVING (((- (t0.c0))) NOT BETWEEN (((t0.c0)=(0.2992373142077509))) AND (t0.c0)); -- 0ms;
SELECT DISTINCT (t0.c0 IN (t0.c0, t0.c0)) COLLATE RTRIM, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (t0.c0)), CASE WHEN (t0.c0 IN ()) THEN t0.c0 END FROM t0 WHERE (((((((((0.1848662896036387 COLLATE RTRIM)AND((- (-1.460717912E9)))))AND(('F' IN (0.8530289868950293)))))AND((((NULL, -1.737438831E9, x'6411'))>=((0.4894394186731085, -1316045510, x''))))))OR(CAST(-1.4000254E7 AS BLOB)))) LIMIT 2074601809; -- 0ms;
SELECT DISTINCT SUM(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM t0; -- 1ms;
SELECT DISTINCT (((NULL IN ())) BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((t0.c0 IN ()))), ((((((((((((((t0.c0) NOTNULL))OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0 COLLATE BINARY)))AND((t0.c0 IN ()))))AND(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), t0.c0 COLLATE RTRIM FROM t0 WHERE ((((NULL)GLOB(0.09084315751710437)) IN ())); -- 0ms;
SELECT ALL (((t0.c0 COLLATE RTRIM))=(((('-84076081')|(t0.c0))))) FROM t0 WHERE ((((x'')) NOT BETWEEN ((0.9768190187287142)) AND ((-712840624)))); -- 0ms;
SELECT ALL x'' FROM t0 WHERE (CAST(((x'') BETWEEN ('1372499346') AND ('2006695300')) AS REAL)) GROUP BY t0.c0 HAVING (((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))) COLLATE RTRIM; -- 0ms;
SELECT CASE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))  WHEN CAST(t0.c0 AS INTEGER) THEN 'I G5M{M' WHEN NULL THEN '}5i' WHEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (NULL IN (t0.c0)) ELSE t0.c0 END FROM t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE ((((((('C	^%꬀')<=(NULL)))OR(((NULL)+('-1737438831')))))OR((('0.39551744762702046') IS FALSE)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c0 END)!=(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT IFNULL(t0.c0 COLLATE BINARY, ((t0.c0)/(t0.c0))) FROM t0; -- 0ms;
SELECT ALL t0.c0, (((t0.c0)%(t0.c0)) IN ()), LAG((~ (NULL)), ((((t0.c0 COLLATE NOCASE)AND(1583506422)))OR(CAST(t0.c0 AS NUMERIC))), (((((((t0.c0))>((0.20024334190583937))))OR(CAST(0.23729190267062328 AS BLOB))))AND(((t0.c0)IS NOT(t0.c0))))) OVER () FROM t0 GROUP BY LIKELIHOOD(DISTINCT ((t0.c0)&(t0.c0)), 0.32342562663614804) LIMIT -1073259555; -- 0ms;
SELECT FIRST_VALUE((((t0.c0) IS FALSE) IN (((t0.c0) NOT NULL), ((t0.c0)=(t0.c0))))) OVER ( ROWS  CURRENT ROW), (CAST(t0.c0 AS BLOB) IN ()), ((~ (t0.c0)) IN ((+ (t0.c0)))), ((~ (t0.c0)) IN ()), FIRST_VALUE(t0.c0) OVER () FROM t0 WHERE ((((('')-(x'')))>=(((0.07787144615117625)+(x''))))); -- 0ms;
SELECT DISTINCT MIN(((t0.c0) NOTNULL)) FROM t0; -- 0ms;
SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))OR(UNICODE(t0.c0))) FROM t0 INTERSECT SELECT ALL json_object(t0.c0 COLLATE BINARY, x'') FROM t0 WHERE ((~ ((((x'e10b')) BETWEEN ((NULL)) AND ((x''))))));SELECT DISTINCT (((t0.c0)*(t0.c0)) IN ()) FROM t0 WHERE (((~ (NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC))>(t0.c0)) FROM t0 WHERE (CASE WHEN CASE ''  WHEN '-1633174205' THEN NULL WHEN NULL THEN 0.0614670228601224 WHEN 0.1729974492954489 THEN 'Kw' WHEN NULL THEN x'b4b8' WHEN 'I)' THEN '' ELSE '' END THEN LIKELY(x'a4ed') WHEN (+ (0.22533220591207148)) THEN 0.44063448631742363 WHEN NULL COLLATE RTRIM THEN '56307602' COLLATE BINARY END); -- 0ms;
SELECT (- (t0.c0)), ((((t0.c0 IN ()), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (~ (t0.c0))))>=((((((((((0.8011478112373699)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(1.977559199E9)), ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (((0Xffffffff9b06f131, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('-1258018236', t0.c0, t0.c0)))))), ((CAST(t0.c0 AS REAL)) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((LOWER(t0.c0)) BETWEEN ('-1258018236') AND (0.2816447933814117)) FROM t0 WHERE ((CASE NULL  WHEN NULL THEN NULL WHEN NULL THEN x'5e1a' WHEN '쉤''O' THEN x'cff5' WHEN x'6b63' THEN '!3' WHEN 0.3631333130294079 THEN 0.49956442055986316 ELSE '' END IN ((((NULL))=((NULL)))))); -- 0ms;
SELECT DISTINCT (~ ((- (t0.c0)))) FROM t0 GROUP BY ((t0.c0 COLLATE NOCASE) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT CAST(SUM(t0.c0) AS BLOB), -1892804499, (((t0.c0, t0.c0, NULL)) BETWEEN (((t0.c0 IN (t0.c0)), x'', ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))) AND ((t0.c0, ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), t0.c0))) FROM t0 WHERE (((('')) NOT BETWEEN ((((NULL) IS TRUE))) AND ((0.25370008458405013)))); -- 0ms;
SELECT ALL COUNT(CASE '1242361125'  WHEN t0.c0 THEN t0.c0 END) OVER () FROM t0; -- 0ms;
SELECT (+ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), ((CAST(t0.c0 AS INTEGER))/(((t0.c0) NOTNULL))), PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT CAST(x'' COLLATE BINARY AS TEXT), ABS(t0.c0) COLLATE BINARY, (((t0.c0 IN ())) NOT BETWEEN (HEX(t0.c0)) AND (CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE (((LIKELIHOOD(x'b918', 0.6140758451696827))|(NULL COLLATE RTRIM))) GROUP BY UPPER(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))); -- 0ms;
SELECT DISTINCT (- (t0.c0)) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE CAST(t0.c0 COLLATE BINARY AS INTEGER)) OVER () FROM t0 WHERE (CAST(CASE x'7bba9d44'  WHEN -1.494754776E9 THEN 'u^' ELSE NULL END AS INTEGER)) ORDER BY CASE ((('0.7889290341354841', t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) ELSE TIME(t0.c0, t0.c0, t0.c0) END; -- 0ms;
SELECT GROUP_CONCAT(((t0.c0)>=(t0.c0))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM t0; -- 0ms;
SELECT ALL GROUP_CONCAT((~ (t0.c0))), ((+ (t0.c0)) IN ()), ((((((t0.c0)<(t0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))) FROM t0 WHERE ((((x'c1b8')>(0x2c1aa477)) IN ())) ORDER BY '!MKv<ᇷ.'; -- 0ms;
SELECT DISTINCT 'cuF?' FROM t0 WHERE ((CASE WHEN 989235728 THEN 0.7910536745803126 END IN ())) LIMIT -1; -- 0ms;
SELECT CASE ((((t0.c0)AND(t0.c0)))AND(t0.c0))  WHEN t0.c0 THEN NULL COLLATE BINARY ELSE (+ (t0.c0)) END FROM t0 WHERE (((((LOWER(0.4520461855809387))OR((+ (0X15530571)))))OR(CASE WHEN 0.6723629300386368 THEN '-1113800496' END))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((CAST(0.9391843179673868 AS BLOB))/(((t0.c0) NOTNULL))), ((((((t0.c0)-(t0.c0)))OR((x'' IN ()))))AND(((t0.c0) NOTNULL))) FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((t0.c0 IN (t0.c0))) AND (t0.c0 COLLATE NOCASE)) ASC; -- 0ms;
SELECT ((((((t0.c0) NOTNULL))OR(0.43530033665486156)))OR(((t0.c0)>=(t0.c0)))), ((((t0.c0 IN ()), GROUP_CONCAT(t0.c0), '-1749684615'))>((((t0.c0)<(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN -1731204846 THEN t0.c0 END, TOTAL(t0.c0)))), (0.01221425711044788 IN ()) FROM t0; -- 0ms;
SELECT ALL COUNT(*) OVER (), MIN(((0xffffffff8a080e61) IS TRUE)), CAST(t0.c0 AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT ((((NULL)OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(MIN(t0.c0))) FROM t0; -- 1ms;
SELECT DISTINCT (((((0.8001491750739202) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)-(t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0))))<>(((- (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END, t0.c0 COLLATE NOCASE))), MAX(CAST(t0.c0 AS REAL)), ((CAST(t0.c0 AS REAL))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 GROUP BY (((((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (t0.c0) AND (((0.5399358350798925) BETWEEN (t0.c0) AND (t0.c0)))), (TRIM(t0.c0) IN (((t0.c0)=(t0.c0)), t0.c0)), ((t0.c0)IS NOT('wF{')); -- 0ms;
SELECT (t0.c0 IN ()) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE (~ (t0.c0)) END, (+ (1.242361125E9)), CAST((t0.c0 IN ()) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL INSTR(t0.c0, CASE 0.6327501367776459  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) FROM t0 WHERE (('0.2408917796860719' COLLATE RTRIM IN (((0Xffffffffa8ef36a8)>>(0.04065749531596985))))) LIMIT 2096473473; -- 0ms;
SELECT ALL CAST(t0.c0 COLLATE NOCASE AS INTEGER) FROM t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE ((~ (((0.3770781307909574)IS(NULL))))); -- 0ms;
SELECT ALL GROUP_CONCAT(((x'bd9a')/(t0.c0))) OVER ( GROUPS  CURRENT ROW), ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR((((t0.c0))==((t0.c0))))))AND(t0.c0)), CASE CAST(t0.c0 AS BLOB)  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)>(NULL)) ELSE t0.c0 COLLATE RTRIM END FROM t0; -- 0ms;
SELECT ((CASE t0.c0  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 1083139661 THEN t0.c0 END) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))), (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(TOTAL(t0.c0))), CAST('-1403367690' AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT MIN(CASE WHEN t0.c0 THEN t0.c0 WHEN 'bFw吸' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) FROM t0; -- 0ms;
SELECT DISTINCT AVG(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))), ((t0.c0)%(GROUP_CONCAT(''))), (((x'', (((t0.c0)) BETWEEN ((t0.c0)) AND (('lo'))), ((((t0.c0)AND(t0.c0)))OR(t0.c0))))<=((UNLIKELY(t0.c0), (NOT (t0.c0)), t0.c0 COLLATE RTRIM))) FROM t0 WHERE ((('505885530')GLOB('')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((t0.c0) NOT NULL)) BETWEEN (((((t0.c0)AND(t0.c0)))AND(t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT (((((t0.c0 IN ()))AND(t0.c0)))AND(CAST(t0.c0 AS BLOB))) FROM t0 WHERE (0.8753317366421963); -- 0ms;
SELECT ALL SUM(MAX(t0.c0, NULL)) OVER (), ((((t0.c0))!=((t0.c0))) IN (t0.c0 COLLATE RTRIM)), LIKELIHOOD(DISTINCT ((t0.c0)=(t0.c0)), 0.40561452892124594) FROM t0 WHERE (LAST_INSERT_ROWID()) ORDER BY ((t0.c0) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) DESC; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(t0.c0 AS NUMERIC)) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0, 0Xffffffffedc7f362, 'tI', NULL, t0.c0)) NOT BETWEEN ((((t0.c0) IS TRUE), (((t0.c0))>=((t0.c0))), ABS(DISTINCT t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 END)) AND ((NULL, ((t0.c0) BETWEEN (t0.c0) AND (x'')), CAST(t0.c0 AS INTEGER), MAX(0.8610748010995628), t0.c0))) FROM t0 LIMIT 1793841949 OFFSET -1358473926; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT ((((((109193554)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, '1503677029')))) AND (CAST(t0.c0 AS NUMERIC))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0))!=((x'')))) ISNULL), AVG(((t0.c0)<=(1.568540999E9))), CASE WHEN ((t0.c0) IS TRUE) THEN GROUP_CONCAT(t0.c0) WHEN GROUP_CONCAT(t0.c0) THEN (+ (t0.c0)) WHEN ((t0.c0) IS FALSE) THEN NULL ELSE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -1645385924, t0.c0))) END FROM t0 ORDER BY COALESCE(DISTINCT (~ (t0.c0)), (('wpa')GLOB(t0.c0)))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((t0.c0 IN ()), (- (t0.c0)), COUNT(*)))>(((t0.c0 IN (t0.c0)), '0.5727724472597832', CAST(x'9557' AS BLOB)))) FROM t0; -- 0ms;
SELECT ALL '0.5870261835349577', NULL, '2145952939' FROM t0 WHERE (((CASE WHEN x'eb44' THEN NULL ELSE '' END) NOT NULL)); -- 0ms;
SELECT DISTINCT (~ (t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c0 AS BLOB) AS TEXT) FROM t0 WHERE (((((0.9398433382882415)AND(x'')))AND(0.9060942544420736)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((t0.c0)<(NULL))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT TRIM(((t0.c0)||(t0.c0))), ((((((((t0.c0)AND(t0.c0)))AND(HEX(DISTINCT t0.c0))))AND((t0.c0 IN ()))))OR((NOT (t0.c0)))), NTILE((+ ((((t0.c0, t0.c0, t0.c0))<((NULL, t0.c0, t0.c0)))))) OVER ( ORDER BY RTRIM(t0.c0) COLLATE NOCASE DESC  NULLS FIRST, ((- (t0.c0)) IN ((((NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))), ((CAST(t0.c0 AS INTEGER))<(t0.c0)), ((t0.c0 COLLATE BINARY) NOTNULL) FROM t0;SELECT DISTINCT ((('D*콆dj˃R<'))>((CAST(t0.c0 AS REAL)))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(('-1627933856' IN ())) OVER (), (+ (t0.c0)) COLLATE RTRIM, t0.c0 FROM t0 WHERE (CASE (('424074583')*('-564693938'))  WHEN ((((((((((((-678643418)AND('-2071053721')))AND(0.6132089523883613)))AND('1510980489')))OR(x'')))OR('')))OR('-1460717912')) THEN ((((0.007673232361360638)AND('1242361125')))OR('\r!_dQ_n')) END); -- 0ms;
SELECT DISTINCT SUM((t0.c0 IN ())) COLLATE BINARY FROM t0 WHERE (ABS(DISTINCT (NULL IN ()))); -- 0ms;
SELECT DISTINCT (CAST(t0.c0 AS REAL) IN ()), ((((t0.c0) NOT BETWEEN (t0.c0) AND (0Xffffffff9870c991)))OR(((t0.c0)>(t0.c0)))), t0.c0 FROM t0 WHERE (((CAST('CY' AS TEXT)) IS FALSE)); -- 1ms;
SELECT ALL MIN(((t0.c0) IS TRUE)) FROM t0 WHERE (((CASE '165773126'  WHEN 1.242361125E9 THEN NULL END) ISNULL)); -- 0ms;
SELECT DISTINCT (((((t0.c0))>((t0.c0)))) NOTNULL) FROM t0 WHERE (CASE ((x'8f09') NOTNULL)  WHEN ((-691557804) BETWEEN ('1503677029') AND ('')) THEN (('602144026')-(x'2ef27ff2')) WHEN x'f521d4f9' COLLATE NOCASE THEN (('G6GJ8*')AND(NULL)) WHEN CASE WHEN x'' THEN NULL ELSE 'vGolWs' END THEN (~ (x'')) ELSE ((x'')IS('-1652803036')) END); -- 0ms;
SELECT DISTINCT (LIKELIHOOD(t0.c0, 0.519466673199547) IN ()) FROM t0 WHERE ((((((NULL, x'', ''))==(('-1073259555', '-971038800', 0.6602253651512606)))) BETWEEN (NULL COLLATE BINARY) AND ((x'01b6' IN (NULL, NULL))))); -- 0ms;
SELECT AVG(NULL) FROM t0 WHERE ((((((((((x'' IN ()))OR(((((x'')AND(NULL)))AND(x'')))))AND(((x'')>(0.3713931111792249)))))AND(((((x'ea1b')AND('-1916626422')))AND(0.04626107443510763)))))AND((NOT ('1556510483'))))) LIMIT 625383512; -- 0ms;
SELECT AVG(((t0.c0)=(t0.c0))) FROM t0 WHERE (((CAST('816713424' AS TEXT)) ISNULL)) ORDER BY ((((((t0.c0))<=((t0.c0)))))=((((((t0.c0)OR(t0.c0)))AND(t0.c0)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) FROM t0 WHERE ((((('')|(''))) NOT BETWEEN (((NULL) NOTNULL)) AND ('0.4956925217574024' COLLATE NOCASE))) LIMIT 323920968; -- 0ms;
SELECT ALL (NOT ('-1372969149')), ((((t0.c0) NOT BETWEEN (x'bf35') AND (t0.c0)))LIKE(CAST(t0.c0 AS REAL))), MIN(((t0.c0)/(0.9402759773551921))) FROM t0; -- 0ms;
SELECT CASE WHEN ((t0.c0) IS FALSE) THEN '[u? n' ELSE ((t0.c0)<<(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, ((((SUM(0.14706743758846108))OR(CAST(t0.c0 AS BLOB))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), t0.c0 FROM t0 WHERE (((',5	v' IN ()) IN ())); -- 0ms;
SELECT ALL CASE CAST(t0.c0 AS REAL)  WHEN ((0.2666458477890552) ISNULL) THEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END FROM t0 WHERE (((('1225817061' COLLATE BINARY))<(((('\2')%(x'')))))); -- 0ms;
SELECT COUNT(*) FROM t0; -- 0ms;
SELECT CASE (((t0.c0))<((t0.c0)))  WHEN (((t0.c0, x'', t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(NULL)) ELSE CAST(t0.c0 AS TEXT) END FROM t0; -- 0ms;
SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT ALL NULL FROM t0 WHERE (((0.9566817401184488 COLLATE BINARY) ISNULL)); -- 0ms;
SELECT DISTINCT ((((t0.c0)&(t0.c0))) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c0) NOTNULL))) FROM t0 WHERE ((((0.6470645385223267)) NOT BETWEEN ((CASE WHEN NULL THEN '-1979183519' ELSE 1.994502169E9 END)) AND ((((0.4187501009246912) IS FALSE))))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOT NULL), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (0.882434444309467) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))), ((((t0.c0) NOT BETWEEN (t0.c0) AND ('748317494')))IS NOT((((t0.c0, t0.c0, t0.c0, t0.c0, 0X7914e9e4)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, 0.9398433382882415, t0.c0, t0.c0))))), (UNLIKELY(t0.c0) IN ()), 'u^' FROM t0 GROUP BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE x'' END) IS TRUE); -- 0ms;
SELECT DISTINCT LAG(0.1756952619244293, ((t0.c0) IS TRUE) COLLATE RTRIM, '-1729460917') OVER (), (CASE WHEN -121607955 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END IN ()), (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((x''))) FROM t0 WHERE (((((ABS(NULL))AND(x'')))OR((('')LIKE(0.667266272395379))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((t0.c0)AND(t0.c0)))OR(t0.c0))), MAX(NULL), x'a26e' FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS REAL) COLLATE NOCASE FROM t0 GROUP BY (((((t0.c0)>(t0.c0))))>((t0.c0))), (((t0.c0, t0.c0, t0.c0)) BETWEEN (((NOT (t0.c0)), ((t0.c0)>=(0X49f6729a)), LIKE(t0.c0, t0.c0))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'190c' THEN t0.c0 END, LIKELIHOOD(DISTINCT t0.c0, 0.24058803545028318)))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY; -- 0ms;
SELECT ALL ((0Xffffffffac5a4ef6) NOT BETWEEN (TOTAL(t0.c0)) AND (((t0.c0)IS(t0.c0)))) FROM t0; -- 0ms;
SELECT CAST(SUM(t0.c0) AS NUMERIC) FROM t0 WHERE ((~ ('-9223372036854775808')) COLLATE BINARY) LIMIT 1100779112 OFFSET 654391957; -- 0ms;
SELECT DISTINCT TOTAL((NOT (t0.c0))) FROM t0 WHERE ((+ (((0.4638025910776199) NOTNULL)))); -- 0ms;
SELECT DISTINCT (((((((((t0.c0)OR('0.02623147367673484')))OR(x'')))AND(t0.c0)))OR(t0.c0)) IN (((t0.c0)!=(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL ((t0.c0) NOTNULL) COLLATE BINARY FROM t0 WHERE ((~ (((((x'5672')OR(-2.048885324E9)))OR(0.08495979761079464))))) INTERSECT SELECT DISTINCT ((-1800401020) NOT BETWEEN ((((t0.c0))<=((t0.c0)))) AND (((((x'')AND(t0.c0)))AND('')))) FROM t0 WHERE ((((6.25383512E8 IN ()))%(CAST(NULL AS REAL)))); -- 0ms;
SELECT CASE WHEN MIN(t0.c0) THEN CAST(t0.c0 AS INTEGER) END FROM t0 LIMIT 1539496310; -- 0ms;
SELECT ALL ((COUNT(*))IS(((t0.c0) IS FALSE))) FROM t0 WHERE (CASE WHEN NULL THEN NULL ELSE x'' END COLLATE RTRIM) ORDER BY (('Z(i]s') NOTNULL) ASC  NULLS FIRST; -- 0ms;
SELECT ALL LAG(SQLITE_COMPILEOPTION_GET(CAST(t0.c0 AS NUMERIC)), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN '2138907438' ELSE t0.c0 END, ((t0.c0)&(t0.c0)), ((t0.c0)IS NOT(t0.c0)))) AND ((CAST(t0.c0 AS INTEGER), (- (1.503677029E9)), ((x'') NOTNULL)))), ABS(DISTINCT (t0.c0 IN ()))) OVER () FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE); -- 0ms;
SELECT ((x'' COLLATE NOCASE) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)))) AND (((((t0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))))) FROM t0 ORDER BY CASE WHEN CASE t0.c0  WHEN t0.c0 THEN 'ὰ.' END THEN ((((((((t0.c0)AND(t0.c0)))OR('0.5213984521377664')))AND(t0.c0)))OR(t0.c0)) ELSE (t0.c0 IN ()) END, ((((t0.c0) IS TRUE))+(((t0.c0)|(t0.c0)))); -- 0ms;
SELECT DISTINCT ((((NULL)OR(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))AND(CAST('0.2408917796860719' AS TEXT))) FROM t0 GROUP BY (~ (((t0.c0)-(t0.c0)))) HAVING MIN(((t0.c0) IS TRUE)); -- 0ms;
SELECT (((((t0.c0))<=((t0.c0))))%(((t0.c0) ISNULL))) FROM t0 LIMIT 958751613 OFFSET -1889947620; -- 0ms;
SELECT DISTINCT TOTAL(GROUP_CONCAT(NULL)) COLLATE RTRIM FROM t0 GROUP BY ((CAST(t0.c0 AS REAL))||((t0.c0 IN ()))) ORDER BY ((((t0.c0)AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE DESC;SELECT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS TRUE), TOTAL(CAST(t0.c0 AS INTEGER)) OVER ( GROUPS t0.c0 PRECEDING), AVG((t0.c0 IN (t0.c0))) FROM t0 GROUP BY ((((t0.c0) BETWEEN (1139384572) AND (t0.c0)))IS(((t0.c0)>(t0.c0)))) HAVING CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE; -- 0ms;
SELECT DISTINCT NTILE((NOT (t0.c0 COLLATE BINARY))) OVER ( ORDER BY ((CASE 0.06685203794249495  WHEN 0.6808705290672638 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1072070344' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.35167943135552115 END)&(t0.c0)) DESC), (((t0.c0, 0.31124772972399295, t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, CAST(t0.c0 AS TEXT), ((t0.c0)>(t0.c0)))) AND ((CAST(t0.c0 AS REAL), (- (t0.c0)), AVG(t0.c0)))), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) ISNULL), ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)*(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), CASE WHEN ((0.8431623855925239) IS FALSE) THEN ((((((((NULL)AND(t0.c0)))AND(0.8863589448723685)))OR(t0.c0)))OR(t0.c0)) ELSE CAST('Qԣ' AS INTEGER) END FROM t0 WHERE (((UNLIKELY('-1847705292')) ISNULL));SELECT DISTINCT RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), TOTAL(x'395d' COLLATE RTRIM) OVER (), ((UNLIKELY(t0.c0))*((- (6.5635757E8)))), t0.c0, 0.5668667687730752 FROM t0 WHERE (((('*l9[G')IS('958751613')) IN ())); -- 0ms;
SELECT ALL CASE (t0.c0 IN ())  WHEN t0.c0 THEN t0.c0 COLLATE NOCASE ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (NULL)) END FROM t0 WHERE (((0.9018478723019248) IS FALSE) COLLATE RTRIM) GROUP BY CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0) NOT NULL) THEN 0.9530120395883388 END, UPPER(t0.c0 COLLATE NOCASE), (((t0.c0) NOT BETWEEN (t0.c0) AND (2.42888314E8)) IN (((t0.c0)<(t0.c0)))) HAVING (((NULL))=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) LIMIT 1317174263; -- 0ms;
SELECT DISTINCT ((SUM(t0.c0)) NOT BETWEEN ((NOT (t0.c0))) AND (x'')) FROM t0; -- 0ms;
SELECT (((t0.c0 COLLATE BINARY))>=(((NOT (t0.c0))))) FROM t0 WHERE ((((('')OR(x'' COLLATE NOCASE)))AND(('' IN (x''))))); -- 0ms;
SELECT ALL ((ABS(DISTINCT t0.c0))|((((x'', '', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 1.732381151E9, t0.c0))))), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))>>((+ (t0.c0)))), '1<3' FROM t0 LIMIT 1650581297 OFFSET -971038800; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) NOT BETWEEN ('') AND (t0.c0)) AS NUMERIC), ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))GLOB(CAST(t0.c0 AS NUMERIC))), (((LIKELIHOOD(t0.c0, 0.8043706304412578)))<((TRIM(t0.c0)))) FROM t0 GROUP BY (+ (IFNULL(t0.c0, t0.c0))), CAST(((t0.c0)%(t0.c0)) AS REAL), CASE ((t0.c0)GLOB(t0.c0))  WHEN ('yMth' IN ()) THEN t0.c0 COLLATE RTRIM WHEN (((NULL))>((t0.c0))) THEN CAST(t0.c0 AS TEXT) WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (t0.c0 IN ()) END; -- 0ms;
SELECT ALL CASE (t0.c0 IN ())  WHEN LIKE(t0.c0, t0.c0, '0') THEN (t0.c0 IN ()) WHEN (- (t0.c0)) THEN ((t0.c0) NOTNULL) WHEN CAST(t0.c0 AS REAL) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(747088431)))OR(t0.c0)) ELSE ((((((((x'1aed')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) END FROM t0; -- 0ms;
SELECT (((((t0.c0))!=((t0.c0)))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (t0.c0)), ((((x'')<(t0.c0)))!=((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))))), ((((t0.c0)OR(t0.c0))) NOT BETWEEN ((~ (t0.c0))) AND (t0.c0)) FROM t0; -- 1ms;
SELECT DISTINCT SUM((((t0.c0))<((t0.c0)))), CASE (- (t0.c0))  WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN NULL THEN '1500183887' WHEN ((x'5bf1')/(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN SUM(t0.c0) THEN ((t0.c0) ISNULL) WHEN (- (t0.c0)) THEN ((t0.c0)>=(t0.c0)) ELSE NULLIF(DISTINCT t0.c0, t0.c0) END, (((t0.c0)/(t0.c0)) IN (((t0.c0) IS TRUE))) FROM t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (t0.c0)) ASC  NULLS LAST, ((('') NOT NULL) IN ()) ASC; -- 0ms;
SELECT (((t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))), t0.c0, (((t0.c0 IN ()))%(((t0.c0) NOT BETWEEN (t0.c0) AND (x'')))), ((((CAST(t0.c0 AS NUMERIC))OR(((t0.c0)|(t0.c0)))))OR(CAST('' AS REAL))), (~ ((+ (t0.c0)))), ('' IN ()), (((0.5550238040743649))<((t0.c0))) COLLATE BINARY FROM t0 GROUP BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE '1343861156'  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, LIKELY(t0.c0), (t0.c0 IN (t0.c0)))) AND ((((t0.c0)*(t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), t0.c0))); -- 0ms;
SELECT ((NOT (t0.c0)) IN ()), PERCENT_RANK() OVER ( ORDER BY t0.c0  NULLS LAST), SUM(((t0.c0)IS(t0.c0))), ((((((((((t0.c0)>(t0.c0)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST('㛚z\.' AS REAL))))OR(((t0.c0)IS(t0.c0)))))OR(((t0.c0)OR(t0.c0)))), CASE SUM(t0.c0)  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (NOT (t0.c0)) END FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c0 END)!=(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0)>=(t0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE (CASE (+ (NULL))  WHEN ((NULL) NOT BETWEEN ('1100779112') AND (x'')) THEN ((0.9331390142050754)/(NULL)) ELSE TRIM(DISTINCT NULL, 'd]') END) GROUP BY ((LIKELIHOOD(t0.c0, 0.7680107406011007))<=(((t0.c0) NOTNULL))) HAVING CAST(((t0.c0) IS TRUE) AS INTEGER); -- 0ms;
SELECT t0.c0 FROM t0 WHERE (((((('-417431811', 163316649, NULL)) BETWEEN (('%d', x'aa06', -1.466040539E9)) AND (('Qm0\rEgufs', '-1376114176', 1.568540999E9))))<<((('-917278892') NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)+(t0.c0)))AND(((t0.c0)GLOB(t0.c0)))))OR(t0.c0 COLLATE NOCASE)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 WHERE ((((((x''))>((NULL))))LIKE(ROUND(0xffffffffcf7f201c, x'')))); -- 0ms;
SELECT DISTINCT TOTAL(0.18258238356569934) FILTER(WHERE (((NOT (t0.c0))) NOT BETWEEN (((t0.c0)<<(t0.c0))) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) OVER (), (~ (CAST(t0.c0 AS REAL))), (((t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))) AND ((t0.c0))) FROM t0 WHERE ((((x'') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN SUBSTR(t0.c0, t0.c0) THEN ((t0.c0)<(x'e788')) ELSE (t0.c0 IN ()) END FROM t0 WHERE (((IFNULL(DISTINCT 0.3652183548942455, NULL)) BETWEEN (((NULL)*(NULL))) AND (0.4955462083918598))); -- 0ms;
SELECT DISTINCT (((((t0.c0))>(('nV')))) NOT BETWEEN ((~ (''))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0 WHERE (CAST(x'' AS INTEGER) COLLATE BINARY) GROUP BY (((NOT (t0.c0))) ISNULL); -- 0ms;
SELECT DISTINCT (- (((t0.c0) ISNULL))), (NOT (0.90650746989344)), ((((t0.c0) ISNULL)) NOT BETWEEN ((t0.c0 IN ())) AND (((NULL) IS TRUE))) FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE) NOT NULL), ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))+(((0.9855600768257953) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT (+ (((t0.c0)<>(x'6c63')))) FROM t0; -- 0ms;
SELECT AVG(((((((((t0.c0)OR(0.6519286317445243)))AND(t0.c0)))AND(NULL)))OR(t0.c0))) FROM t0 WHERE (CASE WHEN (((0.5646057141450544))<=(('}5i'))) THEN CAST('\nvg2D3>' AS INTEGER) END); -- 0ms;
SELECT COUNT(*), (+ (t0.c0 COLLATE BINARY)), LIKELIHOOD(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), 0.7541454407462272) FROM t0; -- 0ms;
SELECT (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))LIKE(LENGTH(t0.c0))) FROM t0 WHERE (((((x'') IS TRUE))IS(CASE NULL  WHEN '-1494754776' THEN 'g#)bl' END))); -- 0ms;
SELECT DISTINCT (((((((t0.c0)AND(t0.c0)))OR(t0.c0))))<(((((NULL, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '', t0.c0)) AND ((0xffffffffa0bc43eb, t0.c0, t0.c0)))))) FROM t0 GROUP BY ((t0.c0)<(CAST(t0.c0 AS NUMERIC))), (+ ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, 0.7277259670667003, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))), ((t0.c0 IN (t0.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0) ISNULL))AND(NULL)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((((((((t0.c0)AND(x'873a')))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(LIKELIHOOD(DISTINCT t0.c0, 0.9595475268396726))) FROM t0; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), (((t0.c0))>=((((t0.c0)-(t0.c0))))), ((((t0.c0) ISNULL))+(CASE '-670454458'  WHEN t0.c0 THEN '625383512' ELSE NULL END)) FROM t0; -- 0ms;
SELECT ((((t0.c0)LIKE(t0.c0))) NOT NULL) FROM t0; -- 0ms;
SELECT 0.06228221612599394, AVG(PRINTF(t0.c0, t0.c0, t0.c0)) OVER (), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)>(CASE WHEN t0.c0 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT ALL (((((t0.c0) NOT NULL)))<=(((('l+*%^H')!=('0.7126161792872372'))))) FROM t0 GROUP BY ((CAST(t0.c0 AS BLOB)) NOT BETWEEN ((t0.c0 IN (x''))) AND (t0.c0 COLLATE NOCASE)), (((CAST(t0.c0 AS REAL), (+ (t0.c0)), x''))>=((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS NUMERIC), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))), CASE WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) END, ((((t0.c0)%(t0.c0))) IS TRUE), (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()) ORDER BY ((((((('摟u“&z~'''))>((t0.c0))))OR(CAST(t0.c0 AS TEXT))))OR(UNLIKELY(t0.c0))), t0.c0  NULLS FIRST, CAST('1721876484' AS BLOB)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((t0.c0))>((t0.c0))))OR('-145055864')))OR((+ (t0.c0)))), (- (((t0.c0)OR(t0.c0)))), -899183546 FROM t0 WHERE (CASE WHEN NULL THEN (x'' IN ()) END); -- 0ms;
SELECT ALL CAST(t0.c0 AS TEXT) COLLATE RTRIM FROM t0 LIMIT -1488217349; -- 0ms;
SELECT DISTINCT ((UNLIKELY('y'))GLOB(((t0.c0)AND(t0.c0)))), ((MAX(t0.c0))&(((((t0.c0)AND(t0.c0)))OR(t0.c0)))), '' FROM t0 WHERE (((CASE WHEN NULL THEN 0.2593171513629098 END)-(((x'201c') NOTNULL)))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c0))||(TRIM(DISTINCT t0.c0))), (CAST(t0.c0 AS NUMERIC) IN ()), ((+ (t0.c0)) IN ()) FROM t0 GROUP BY ((CAST(t0.c0 AS REAL)) ISNULL) HAVING GROUP_CONCAT((- (t0.c0))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ROWS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t0 WHERE (((json_array_length(0.7642687373170391, 0.7540668866918091)) BETWEEN ((~ (x''))) AND (CAST(x'e9fe' AS INTEGER))));SELECT ((((t0.c0) IS TRUE))+(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 GROUP BY (((t0.c0) NOTNULL) IN ()), SQLITE_VERSION(), (NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) HAVING json_object(GROUP_CONCAT(t0.c0), (('')>>(t0.c0))) ORDER BY 0.532443181049844, t0.c0, ('' IN ()); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0) IS TRUE) COLLATE RTRIM) FROM t0 WHERE (((('422696798')) BETWEEN (((('1731367906')|(NULL)))) AND ((((NULL)/('A1}lz ')))))) LIMIT 1648035268 OFFSET -1971338600; -- 0ms;
SELECT ALL CAST(MIN('-274867620', t0.c0) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(CAST(t0.c0 AS INTEGER))))OR(t0.c0)) FROM t0 WHERE ((((+ ('422696798')))/(TYPEOF(NULL)))); -- 0ms;
SELECT ALL ((~ (0.4533215424902818)) IN ()) FROM t0 LIMIT 942524472; -- 0ms;
SELECT DISTINCT ((((((t0.c0)OR(t0.c0)))OR(NULL))) IS TRUE), (NOT (json_patch(t0.c0, t0.c0))), (((t0.c0 IN ())) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0;SELECT DISTINCT (((((t0.c0 IN (t0.c0)))AND(TRIM(t0.c0))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) FROM t0 INTERSECT SELECT ALL 0.40641391504091395 FROM t0 WHERE ((NOT (((((((((NULL)OR(0.0591405577280526)))AND(0.1417086771883097)))AND(NULL)))OR(0.6922326770684457))))); -- 0ms;
SELECT DISTINCT (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (0X5bc24238)))), ((((t0.c0)&(t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND ((~ (t0.c0)))), (+ (t0.c0 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT (((('') NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE) FROM t0 WHERE ((+ (((NULL) NOTNULL)))) ORDER BY ((t0.c0 IN ()) IN ((t0.c0 IN ()), (+ (t0.c0)))); -- 0ms;
SELECT '-1756506174', CASE NULL  WHEN '1' THEN ((t0.c0)|(t0.c0)) WHEN ((t0.c0)IS(t0.c0)) THEN COUNT(*) WHEN (t0.c0 IN (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) END, ((((t0.c0)*(t0.c0)))%(CAST(0.4586788889979788 AS TEXT))), 'AYsk].E3#', SUM(((t0.c0)GLOB(t0.c0)) COLLATE NOCASE) FILTER(WHERE ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(0.09491892997996931)))||(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) OVER () FROM t0 WHERE (((((1960577496)>>(NULL)))>=(CAST(1.977559199E9 AS INTEGER)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 WHERE ((~ ((('mG')==(-899439772))))); -- 1ms;
SELECT ((t0.c0)*(t0.c0)) COLLATE RTRIM FROM t0 WHERE ((((((x'' IN ()))AND(CASE WHEN '-1e500' THEN '1242361125' END)))OR(((x'')>=('1343861156'))))) ORDER BY (~ (CAST(t0.c0 AS NUMERIC)))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)+(t0.c0)) AS INTEGER) FROM t0; -- 0ms;
SELECT ((MAX(t0.c0))+(t0.c0 COLLATE NOCASE)) FROM t0; -- 0ms;
