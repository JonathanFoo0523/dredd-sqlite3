-- Time: 2024/06/07 21:51:55
-- Database: database84
-- Database version: 3.40.0
-- seed value: 4184852184
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL CAST((vt0.c1 IN ()) AS INTEGER) FROM vt0 LIMIT 14518341 OFFSET -1879591915; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE vt0; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1942499976); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
DROP VIEW v0; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''), ('-1545147129'), ('s	a2l'); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x'', c0=NULL; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA cache_spill = 3953794243332204018; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=(x'', '-1545147129'); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 367267720); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.mmap_size = 4783533223275323328; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-670269492') NOTNULL) AS BLOB); -- 0ms;
PRAGMA journal_size_limit = -4888766097669782225; -- 0ms;
UPDATE vt1 SET c0='793609068'; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS INTEGER) FROM vt1; -- 0ms;
SELECT ALL NTILE(vt0.c1) OVER () FROM vt0;SELECT CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c2)) ELSE CAST(vt1.c0 AS REAL) END, (((((x'1863')OR(vt1.c2)))OR(vt1.c1)) IN (vt0.c0 COLLATE NOCASE)), GROUP_CONCAT(((vt1.c0)==(vt1.c2))) FROM vt1 WHERE (((CAST(NULL AS INTEGER))&(((-1.545147129E9)>(x''))))) LIMIT -670269492 OFFSET 1301438770;SELECT ALL vt1.c1 FROM vt0, vt1 WHERE ((((((((((('')OR('-1971147120')))OR(0.841603749420781)))AND('0.841603749420781')))OR('')))LIKE(((x'') BETWEEN ('O}u2됕	詄xh') AND (0.4506752313978566))))) ORDER BY IFNULL(NULL, ((vt1.c0)LIKE(vt0.c1))), (~ (vt1.c0)) DESC; -- 1ms;
SELECT DISTINCT (((NOT (vt0.c0))) IS TRUE) FROM vt1, vt0 WHERE (((((CAST(x'a4ca' AS BLOB))OR(CASE '0C'  WHEN 7.027655743648831E-4 THEN 0.5909803774925755 ELSE '1301438770' END)))OR(STRFTIME(-719833621, x'', NULL)))) GROUP BY CAST(((vt1.c1)GLOB(vt0.c1)) AS TEXT); -- 0ms;
SELECT ALL (((((vt0.c1)&(vt1.c1))))>(((((vt1.c0, vt0.c0, vt1.c2))>=((0x727b7306, vt0.c1, vt1.c2)))))), (((vt0.c1)) BETWEEN ((((vt1.c1) IS FALSE))) AND ((((vt1.c1)LIKE(vt1.c2))))), NTILE(((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((0.6507594750508836)LIKE(vt1.c1))) AND (CAST(vt1.c1 AS BLOB)))) OVER () FROM vt1 WHERE (NULLIF(load_extension(x'', NULL), (~ ('㗫')))) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY ASC  NULLS LAST;SELECT MIN(SUM((((0.7608373930215633)) BETWEEN ((vt1.c1)) AND ((NULL))))) FROM vt0, vt1 WHERE ((((+ (NULL))) NOT BETWEEN ((NOT ('썘1'))) AND ((('22186564') NOT BETWEEN (NULL) AND (NULL))))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c2)))IS((((NULL, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, vt1.c1, vt1.c2)) AND ((vt1.c0, vt0.c0, vt1.c2)))));SELECT ALL CAST(((vt1.c2) NOT BETWEEN (NULL) AND (vt1.c2)) AS REAL), ((((((((((vt0.c1) IS TRUE))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)))OR(CASE vt0.c1  WHEN 'p[఻{窐x' THEN x'46e5' END)))AND((((vt1.c2))!=((vt0.c0))))), (((vt1.c2)) BETWEEN ((((vt1.c1)OR(vt0.c1)))) AND ((((((vt1.c0)AND(vt1.c0)))OR(x''))))) FROM vt0, vt1 WHERE (((((x'') BETWEEN ('-1879591915') AND (0.06725824989502227)))IS(((NULL) NOT NULL)))); -- 0ms;
SELECT CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE, vt1.c2, RTRIM(CAST(vt0.c0 AS NUMERIC)) FROM vt1, vt0 WHERE ((((('0C')AND(((0.7608373930215633)&(0.9589826119714128)))))AND('1101914524'))); -- 0ms;
SELECT DISTINCT (NOT (x'')), (((vt0.c0)) BETWEEN ((vt1.c2)) AND ((x''))), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))AND((vt1.c2 IN (vt1.c1)))))OR(UPPER(vt0.c0))) FROM vt1, vt0 WHERE (((NULL)=(0.15527271556353217)) COLLATE RTRIM) ORDER BY json_object((vt1.c0 IN ()), ((((vt1.c1)AND(vt0.c0)))OR(vt1.c0))), (NOT (((vt0.c0)-(vt1.c2)))), COALESCE('1920692998', vt0.c1, 1.920692998E9, vt1.c1) COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT ((COUNT(vt1.c1)) BETWEEN (CAST(vt1.c1 AS INTEGER)) AND ((vt1.c1 IN ()))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT CASE WHEN vt0.c1 THEN (vt1.c2 IN ()) END FROM vt0, vt1 WHERE (((((NULL, NULL, 0.4506752313978566)) NOT BETWEEN ((0x1c51cc90, 0X1c51cc90, 0.03416118393141798)) AND (('', NULL, NULL))) IN (((((NULL)OR('')))AND('')), ((('Sg'))>((NULL)))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt1.c1 THEN vt1.c1 END AS BLOB) FROM vt0;SELECT DISTINCT COUNT(*) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM, ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))<=(vt0.c1)), ((((vt1.c1)=(vt0.c1))) NOT BETWEEN ((~ ('-1915056234'))) AND ((((-1.78370884E9))>((vt1.c0))))) FROM vt1, vt0 WHERE (CASE WHEN (('Hshwx')/(NULL)) THEN CASE WHEN x'' THEN x'' WHEN x'' THEN 0xfffffffffc40ed96 WHEN 0x408069c4 THEN 'fMSVjt-^|' ELSE x'' END ELSE CAST(x'd6e1' AS INTEGER) END); -- 0ms;
SELECT DISTINCT ((((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))) NOT BETWEEN ((+ (vt1.c2))) AND (((vt0.c0)GLOB(vt0.c0)))) FROM vt0, vt1 WHERE ((((((((x'', x'', '-670269492', x'8db7', x'a1c1'))<>(('', x'', ')1k0VwJ', -1362209387, '?ZE.\r,'))))AND('-1002010986' COLLATE NOCASE)))OR(((0.3321022158432575)>(x''))))) GROUP BY CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT); -- 0ms;
SELECT DISTINCT vt1.c2 FROM vt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0)<=(NULL)))/(vt1.c1)) FROM vt0, vt1 WHERE (((((x'')<<('-1002010986'))) BETWEEN ('' COLLATE BINARY) AND ((NOT ('1146978910'))))); -- 0ms;
SELECT CAST(((vt1.c0)==(vt1.c1)) AS INTEGER) FROM vt0, vt1 WHERE (CASE (('')*(x'ca8dda4f'))  WHEN ((x'')LIKE(NULL)) THEN CASE WHEN x'' THEN NULL WHEN 0.5794795188231588 THEN x'' WHEN '1146978910' THEN 0.5794795188231588 ELSE 0.7975465146831983 END ELSE (((x'9963'))<((''))) END); -- 0ms;
SELECT DISTINCT (('~)/,6')>=(((((vt0.c0)AND(vt1.c2)))OR(vt0.c0)))), ((vt0.c1 COLLATE RTRIM) ISNULL), (CAST(vt1.c2 AS TEXT) IN ()) FROM vt1, vt0 WHERE (LOWER(CAST('-1783708840' AS INTEGER))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c1 END)>>(14518341)) FROM vt0 WHERE (x'') GROUP BY ((((vt1.c2)AND(vt1.c1)))AND(x'3e86')) ORDER BY ('0.6507594750508836' IN ()) ASC, (((vt1.c2)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND (((+ (vt1.c0))))) DESC  NULLS LAST LIMIT 603603775 OFFSET 873792829;SELECT ((COUNT(*))<<(x'db78')), CASE WHEN vt1.c2 THEN vt0.c1 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c1 END COLLATE BINARY, '' FROM vt0, vt1 WHERE ((((NULL) NOTNULL) IN ())) LIMIT 1782767510 OFFSET 1388940451; -- 0ms;
SELECT LAST_VALUE(0.026505613880365875) OVER () FROM vt0, vt1; -- 0ms;
SELECT NTILE(((vt0.c1)<<(vt0.c0)) COLLATE NOCASE) OVER () FROM vt0;SELECT ((851031874) ISNULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c2)!=('-1247915860'))) NOT BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c2)))), CAST(((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)) AS INTEGER), (((1.78276751E9)>(vt0.c1)) IN ()) FROM vt1; -- 0ms;
SELECT ALL ((vt1.c2 COLLATE BINARY) NOTNULL) FROM vt1; -- 0ms;
SELECT ALL (- (((vt1.c1)%(x'')))) FROM vt0;SELECT DISTINCT (+ (((vt1.c2) ISNULL))), (vt1.c1 COLLATE RTRIM IN (json_valid(vt1.c1))), CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))  WHEN CAST(vt0.c1 AS TEXT) THEN CASE vt0.c1  WHEN vt1.c2 THEN vt1.c2 ELSE vt0.c0 END ELSE TRIM(DISTINCT vt1.c0) END FROM vt1, vt0 ORDER BY CASE (('') NOT BETWEEN (vt1.c1) AND (vt1.c1))  WHEN ((vt1.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt1.c1 COLLATE RTRIM END ASC, ((((((vt1.c2, vt1.c2, vt1.c1))<=((vt0.c1, vt0.c0, vt1.c0))), CAST(vt1.c1 AS BLOB), ((((((((vt1.c2)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt0.c1))))<=((INSTR(0.21433151434361264, vt0.c0), ((vt1.c2)OR(vt0.c0)), CASE WHEN '1986109055' THEN vt1.c2 END)))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((NULL)+(vt1.c1 COLLATE RTRIM)) FROM vt0 WHERE (CAST((~ (x'2c3b')) AS NUMERIC));SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))OR(((vt0.c1)<(vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)), GROUP_CONCAT(CAST(vt1.c1 AS BLOB)) OVER (), RANK() OVER () FROM vt0 WHERE (1782767510);SELECT SUM(((vt1.c0) NOT NULL)), (NOT (CAST(vt1.c2 AS TEXT))), GROUP_CONCAT(((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2))) OVER () FROM vt0;SELECT DISTINCT CASE (+ (vt1.c1))  WHEN (vt0.c1 IN ()) THEN ((vt0.c1)=(vt1.c1)) ELSE ((vt1.c0)*(vt0.c1)) END FROM vt0 WHERE (CASE WHEN UPPER(x'606e') THEN ('uC栆nYv#B' IN (NULL, NULL)) END);SELECT DISTINCT ',4v*Kn5''r' COLLATE NOCASE, LOWER(DISTINCT (vt1.c2 IN ())), ((((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1))) NOTNULL), MAX(((vt0.c1)<>(vt1.c2))), TRIM(DISTINCT vt1.c0, vt0.c0 COLLATE BINARY) FROM vt1 NOT INDEXED, vt0 LIMIT 1782767510; -- 0ms;
SELECT ALL TOTAL(((((vt1.c1)OR(vt0.c1)))AND(vt1.c2))) FROM vt1, vt0 WHERE ((((((NULL) NOT BETWEEN (x'') AND (-714984951))))=((CAST('9PIx9J' AS BLOB))))); -- 0ms;
SELECT DISTINCT CASE WHEN 0.03542368240057758 THEN vt1.c1 END FROM vt1; -- 0ms;
SELECT (LTRIM(vt1.c1) IN ()) FROM vt1 WHERE ((((0xffffffff895216b3)>>(NULL)) IN ())); -- 0ms;
SELECT ((((((((0.7345194956812996)AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt1.c2) BETWEEN (vt1.c2) AND (vt0.c1)))))OR(((vt0.c1) NOT NULL))))AND(CAST(vt1.c1 AS BLOB))) FROM vt0, vt1; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c2) NOT NULL) THEN vt0.c1 WHEN ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c2)))OR(vt0.c1)) THEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) WHEN vt1.c0 THEN SUM(vt1.c2) END FROM vt0, vt1 WHERE (CASE (- (NULL))  WHEN CASE WHEN x'' THEN 0.5563274667811647 END THEN (('1147549683')<>(0x76619e7f)) END); -- 0ms;
SELECT ((((((vt1.c1)OR(vt0.c1)))OR(vt0.c1)))>=(((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(vt1.c0)))) FROM vt1;SELECT DISTINCT ((((vt0.c0)&(vt1.c1))) NOTNULL), CASE (('22186564')GLOB(vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0)) END, ROW_NUMBER() OVER () FROM vt1, vt0 WHERE (((((NULL COLLATE NOCASE)AND(x'3b1c')))AND(((x'')<<(NULL))))) LIMIT -1682666189 OFFSET -2084203837; -- 0ms;
SELECT AVG(CAST(vt1.c0 AS REAL)) OVER (), (~ (vt1.c2)), LEAD((vt1.c2 IN (CASE vt1.c2  WHEN vt0.c0 THEN vt1.c1 END)), (vt1.c2 IN ()) COLLATE BINARY, ((CASE vt1.c0  WHEN vt0.c1 THEN '-1244746586' WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END)%(((((vt0.c0)OR(NULL)))AND(vt1.c0))))) OVER () FROM vt1, vt0; -- 1ms;
SELECT CUME_DIST() OVER (), COUNT(((vt1.c1)||(vt1.c1))) FILTER(WHERE ((vt1.c1)OR(vt0.c0 COLLATE RTRIM))) OVER (), (((((((vt1.c2)OR('')))OR(vt1.c1))))>(((vt1.c2 IN ())))) FROM vt0;SELECT (((vt0.c1)) NOT BETWEEN ((0.6380986110111356)) AND ((vt1.c2))) FROM vt1, vt0; -- 0ms;
SELECT ALL vt1.c2 FROM vt1 NOT INDEXED GROUP BY ((((vt1.c0) BETWEEN (0.841603749420781) AND (vt1.c0))) IS FALSE) HAVING ((vt0.c0 COLLATE NOCASE) IS TRUE);SELECT ALL (((vt1.c0) IS TRUE) IN (CAST(vt1.c2 AS BLOB))), (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END IN ()), -1712014817 FROM vt1, vt0 WHERE (((((((((((0.6507594750508836) ISNULL))OR(0.044729005263836275)))OR(CAST(NULL AS BLOB))))OR((('-1244746586') ISNULL))))AND(CASE x''  WHEN '-1247915860' THEN '0r	,F磧D~' WHEN NULL THEN x'3798' WHEN ')fk0VwJ' THEN x'' END))); -- 0ms;
SELECT DISTINCT ((((vt1.c2)+(vt0.c0))) IS FALSE), (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)IS(vt0.c0))))), CAST(LENGTH(vt1.c2) AS NUMERIC), ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c2 END) IS TRUE), (- ((((vt1.c2, vt0.c0, vt1.c0, vt0.c1, vt1.c2)) NOT BETWEEN ((vt0.c0, vt0.c1, vt1.c1, vt1.c0, vt1.c2)) AND ((vt1.c1, vt1.c2, '0.4506752313978566', 0.40687783780037956, '1257662470'))))) FROM vt1, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT MIN(((vt1.c1) IS FALSE)), ((CAST(vt0.c0 AS REAL))*(((vt0.c0)>>(0.29534556345228913)))), ((LAST_INSERT_ROWID())AND(vt0.c0 COLLATE RTRIM)) FROM vt0, vt1 WHERE ((((x'' IN ('-469529325'))) BETWEEN (((((x'b73f')AND(0.9070623453069512)))OR(NULL))) AND (((((x'')OR(x'')))OR(''))))) LIMIT -218334097; -- 0ms;
SELECT (((vt1.c1 IN ())) IS TRUE) FROM vt1 WHERE (CAST('-1481948655' AS INTEGER) COLLATE BINARY) GROUP BY (- ('-218334097')) HAVING ((load_extension(vt1.c2, vt0.c0)) NOT BETWEEN (CASE vt1.c1  WHEN vt0.c1 THEN vt0.c0 END) AND (((vt0.c0) IS FALSE)));SELECT DISTINCT (((vt0.c1) NOT BETWEEN (x'caed') AND (vt1.c2)) IN (vt0.c1 COLLATE RTRIM)) FROM vt1, vt0 WHERE ((('䂝㌺ww<\')>((+ (1146978910))))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt1 WHERE ((((((('Hshwx') NOT NULL))AND((((x'', NULL, 0.6619520110241053))>=((x'd52d', '0.044729005263836275', 0.5794795188231588))))))OR((- (0.6343064515142687))))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) NOT NULL) AS REAL) FROM vt1 WHERE (((((NULL) NOT BETWEEN (0X4a031610) AND ('-2048310951'))) BETWEEN (((((((((x'')AND(0x479e2d86)))AND(NULL)))OR(-1173698680)))AND(NULL))) AND ((NOT ('1782767510'))))) GROUP BY ((((vt1.c1)<<(vt1.c2))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CAST(vt1.c1 AS BLOB))), (((((vt0.c0)OR(vt0.c1))))!=(((vt1.c2 IN ())))), ((CAST(vt1.c0 AS INTEGER))/(((((vt1.c1)AND(vt1.c1)))OR(vt0.c1)))) HAVING 0.03542368240057758;SELECT DISTINCT (((((((vt1.c0))>((vt1.c2))))AND(COUNT(*))))AND(((((vt1.c1)OR(vt1.c2)))OR(vt0.c1)))) FROM vt0 WHERE (((0.30574294003708125)*(x'')) COLLATE NOCASE);SELECT DISTINCT AVG(json_object(-1.879591915E9, vt1.c0) COLLATE RTRIM), ((UNLIKELY(vt0.c1)) NOTNULL), (~ (vt1.c1)) COLLATE BINARY FROM vt0, vt1 WHERE ((((NULL, 0.5424904330133669, 'q?')) BETWEEN ((('-1971147120' IN ('-1391336199')), ((0.9046414284615137) BETWEEN ('-2084320348') AND (x'')), TRIM(DISTINCT x''))) AND ((((-540682893) IS TRUE), CASE '~'  WHEN 0.9589826119714128 THEN 0.38845931198982764 WHEN '4催' THEN '' WHEN NULL THEN x'' END, UPPER(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt1.c1))<=((vt0.c1))) IN ()) FROM vt0 WHERE ('Ch]喕%l4䅙+' COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE UNLIKELY(DISTINCT vt1.c0)  WHEN COUNT(vt0.c1) THEN (vt1.c1 IN ()) WHEN ((((vt1.c2)AND(vt0.c0)))AND(vt1.c2)) THEN vt0.c0 WHEN (((vt1.c2, vt0.c0, vt0.c0)) BETWEEN ((vt1.c1, vt1.c2, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c2))) THEN vt0.c1 COLLATE NOCASE WHEN ('-1021742308' IN ()) THEN ((vt0.c1)GLOB(vt1.c1)) WHEN 0.9778705432147544 THEN ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END, (((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()), json_valid((vt0.c0 IN (vt0.c1, vt0.c1))), (((((vt1.c1)>(vt1.c2))))==(((((vt1.c1))<((vt0.c1)))))), TOTAL((((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))) FROM vt0, vt1 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(((0.3809596622162279) NOT BETWEEN (NULL) AND (vt1.c1)))))AND((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((vt0.c1, vt1.c2, x'22c9'))))) DESC; -- 0ms;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0, ((((((((((((vt1.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt1.c0)))AND('9223372036854775807')))OR(vt0.c1 COLLATE BINARY)))OR(vt1.c2)), x'99fbdffa' LIMIT -502277368 OFFSET 609585900; -- 0ms;
SELECT ALL json_array_length(((((((((vt1.c2)AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1))) FROM vt0 WHERE ((((('0.30574294003708125') BETWEEN (NULL) AND (x'681e14d9'))) NOT NULL));SELECT DISTINCT ((LTRIM(vt0.c1)) BETWEEN ((+ (vt0.c0))) AND (x'')) FROM vt0 WHERE (LOWER(DISTINCT LIKELY(NULL))); -- 0ms;
SELECT 0.9119162084890702 FROM vt0 WHERE ((((((NULL)OR('')))OR(NULL)) IN ())); -- 0ms;
SELECT ALL CASE WHEN vt1.c0 THEN vt1.c1 END COLLATE RTRIM, RANK() OVER (), json_patch(SUM(vt1.c0), (vt0.c0 IN ())) FROM vt1; -- 0ms;
SELECT CAST(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)) AS TEXT) FROM vt1, vt0 WHERE (TRIM(DISTINCT x'67b91262')) ORDER BY ((vt1.c1) ISNULL) ASC  NULLS FIRST; -- 0ms;
SELECT ALL 0.16515466387826327, ((((vt0.c0)AND(vt1.c2)))AND((('')IS(vt0.c0)))), vt1.c2 FROM vt0 WHERE (((((NULL) IS TRUE)) NOT NULL)) LIMIT 890082953;SELECT DISTINCT FIRST_VALUE((((vt1.c1 IN ())) IS TRUE)) OVER (), (((((vt0.c0)GLOB(vt0.c1)), (- (NULL)), json_extract(vt1.c0, vt1.c2)))<((((vt1.c0)|(vt0.c0)), (vt0.c0 IN ()), (~ (vt1.c2))))), ((((vt1.c0)/(vt1.c2))) BETWEEN (vt1.c2) AND (COALESCE(vt0.c0, vt1.c1, vt1.c0, vt1.c0))), (((vt1.c2)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND (((vt0.c1 IN ())))), ((CASE vt0.c1  WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-1568011205' THEN vt0.c1 ELSE vt0.c1 END)IS(((vt0.c1)*(vt1.c1)))) FROM vt0, vt1 WHERE (CASE WHEN NULL THEN (('Qx') ISNULL) WHEN (((('-1514642756')OR(NULL)))OR(x'')) THEN (((']', -1314129805, -1340015280, x'', NULL))>=((0.16401951459233444, -1545147129, NULL, NULL, x''))) WHEN ((NULL)/('14518341')) THEN ((0.6507594750508836)<=('')) END); -- 0ms;
SELECT ALL vt0.c1 FROM vt1 GROUP BY (+ (((vt0.c0) NOTNULL)));SELECT ALL TRIM(vt0.c0) FROM vt1, vt0 WHERE (NULL); -- 0ms;
SELECT ((((NULL)>(vt1.c2)))|(vt0.c1 COLLATE NOCASE)) FROM vt1 WHERE (((0.503120455537624 IN (x'44aa')) IN ((((((((((((('?(gjw*c')OR('-1391336199')))OR(NULL)))AND(NULL)))OR(-1.391336199E9)))OR('852806079')))AND(0.7622704013447532)), 0.8015925296281997))) GROUP BY (+ (''));SELECT (vt1.c2 COLLATE NOCASE IN (LOWER(x''))) FROM vt0, vt1 WHERE ((((('') NOT NULL)) BETWEEN ((0.9026864355191285 IN ())) AND ((((('')AND(x'')))OR(1.082157508E9))))); -- 0ms;
SELECT (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)), CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)) THEN (- (vt0.c0)) ELSE LIKELY(DISTINCT vt1.c1) END, COALESCE(DISTINCT vt0.c0, vt0.c1) COLLATE RTRIM, ((((vt1.c2)OR(0X8a70a25))) IS TRUE), CASE ((vt1.c1) IS FALSE)  WHEN ((((((((vt1.c2)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND('-2005042544')) THEN ((vt1.c0) NOT NULL) ELSE ((vt0.c0)GLOB(vt1.c2)) END FROM vt1 WHERE ((- ('531294877'))) GROUP BY ABS(((vt1.c0)IS(vt1.c1))) HAVING ((LAST_INSERT_ROWID())GLOB(((vt1.c2) ISNULL)));SELECT DISTINCT FIRST_VALUE((((- (vt0.c0))) IS TRUE)) OVER () FROM vt1, vt0 WHERE (((x'aa5e' IN (0.9778705432147544)) IN (((((((((0.7887312392649556)AND(x'')))AND(x'')))OR('')))OR(x'')), (('')<(x''))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c0)))OR(x'')))OR(((vt0.c0)>=(vt0.c0)))) FROM vt1 NATURAL JOIN vt0 WHERE (MAX(LIKELY('1177009921'), ((((((((((((0.6507594750508836)AND(NULL)))OR(0.16515466387826327)))OR(0.27436879008208903)))AND(NULL)))AND('')))AND(NULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN GROUP_CONCAT(vt1.c1) THEN CAST(vt1.c2 AS INTEGER) WHEN vt1.c2 THEN ((vt0.c0)IS(vt1.c1)) WHEN (((vt0.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, 'Y##쑈', vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c2))) THEN CAST(vt1.c0 AS BLOB) ELSE CASE WHEN vt0.c1 THEN vt1.c2 END END FROM vt0, vt1 ORDER BY ((vt1.c1)LIKE(((vt1.c2)*(vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT vt1.c1 COLLATE BINARY COLLATE NOCASE FROM vt0, vt1 WHERE (CASE 2078558050  WHEN (- (0X7fa669c4)) THEN (('Am5') NOT NULL) ELSE (('2141612484')<=(x'')) END); -- 0ms;
SELECT ALL LOWER(vt1.c1), ((vt1.c0) IS FALSE) COLLATE RTRIM, ((((((((((((vt1.c1)AND(x'0efc')))OR('0.15527271556353217')))AND((~ (vt0.c1)))))OR(x'b316')))AND(((vt1.c2)AND(vt1.c2)))))OR((((vt1.c1, vt1.c2, vt0.c0)) NOT BETWEEN ((vt1.c2, vt1.c2, vt1.c2)) AND ((0.6851213827768513, vt0.c0, vt1.c1))))) FROM vt1, vt0; -- 0ms;
SELECT (((vt1.c0 IN ()))||(COALESCE(vt1.c1, vt0.c0, vt1.c2, vt0.c1))), (((CASE vt1.c2  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END, MIN(vt0.c0), ((((vt1.c1)AND(NULL)))AND(vt0.c1))))<>(((vt1.c1 IN ()), ((vt1.c0)GLOB(vt1.c2)), vt1.c1 COLLATE RTRIM))), CAST(CASE vt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS TEXT), COUNT((('')LIKE(vt0.c1))), (((((((vt1.c0, NULL, vt1.c0)) BETWEEN ((vt0.c1, vt1.c1, vt1.c0)) AND ((vt1.c1, vt0.c0, vt1.c2))))OR((vt1.c0 IN ()))))AND(vt0.c1)) FROM vt0 WHERE ((~ (x'')) COLLATE BINARY);SELECT (- (vt1.c1)) FROM vt1, vt0 ORDER BY (((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('艞!pDqTH'))))AND(1594009127)))AND(((vt1.c2)+(vt1.c2)))))OR(((vt0.c1)IS(vt0.c1)))))AND(((vt0.c0)<=(vt0.c0)))) DESC; -- 0ms;
SELECT ALL (((vt1.c0)=(vt1.c0)) IN ()), (((vt0.c0, vt0.c0, vt1.c2)) BETWEEN (((vt0.c1 IN (vt1.c0)), ((vt1.c2) NOTNULL), ((((((((NULL)OR(vt1.c2)))OR(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))) AND ((COUNT(*), vt1.c2 COLLATE BINARY, ((((((((vt0.c1)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c1))))), CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) NOTNULL) ELSE CAST(vt1.c0 AS NUMERIC) END FROM vt1, vt0; -- 0ms;
SELECT ALL ((((0.3321022158432575)LIKE(vt0.c0)))*(CASE vt0.c0  WHEN '1708375319' THEN vt1.c1 END)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 END)AND(((vt1.c0)==(vt1.c2)))))AND(GROUP_CONCAT(x''))) FROM vt1 WHERE (((((145164837)||(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT CAST(((vt1.c1)GLOB(vt0.c1)) AS REAL), (((vt1.c1 IN ()))%(((vt1.c0) NOT NULL))), ((vt1.c0)|('1257662470')) COLLATE BINARY FROM vt0;SELECT ALL (((((vt1.c2, vt1.c1, vt1.c0))==((vt1.c1, vt0.c1, vt1.c0)))) NOT BETWEEN (x'' COLLATE BINARY) AND (((vt0.c0)IS NOT(vt1.c0)))) FROM vt0, vt1 WHERE (((((0.9925007153941854)IS NOT(NULL)))<(CAST(NULL AS BLOB)))) LIMIT -1468749460; -- 0ms;
SELECT ALL ((((vt1.c1) NOT BETWEEN ('O}u2됕	詄Zh') AND (vt1.c0))) NOTNULL) FROM vt0, vt1 WHERE (((((((NULL)OR('Yfw')))OR(''))) IS FALSE)); -- 0ms;
SELECT ALL (((('0.6851213827768513')IS NOT(vt1.c2)))OR(vt1.c1)), NULL, AVG(MAX(vt1.c2, vt0.c0)) OVER () FROM vt1, vt0; -- 1ms;
SELECT DISTINCT CAST(NULL AS TEXT) COLLATE BINARY FROM vt0 WHERE (UNLIKELY(((x'') IS FALSE))); -- 0ms;
SELECT DISTINCT (((-1.879591915E9)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END)) AND ((vt0.c0))) FROM vt1 WHERE (CAST((0.36918915013046416 IN ()) AS INTEGER));SELECT ((rtreenode(vt0.c1, vt1.c0)) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND (((vt1.c2) BETWEEN (vt1.c2) AND (vt0.c1)))) FROM vt0 WHERE ((((x'', '-103405237', 0.15881149710639042)) BETWEEN ((CAST(1.920692998E9 AS TEXT), (0.9644319360674742 IN ()), (~ ('1906026618')))) AND (((('0.7975465146831983')||('9vbK|~칰r')), CAST(0.7438790441222457 AS NUMERIC), (((x''))=((-103405237))))))) LIMIT -1991108941;SELECT ALL ((((CASE vt0.c0  WHEN 1.201548678E9 THEN vt1.c0 END)AND(vt1.c0 COLLATE RTRIM)))OR((vt1.c2 IN ()))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((TRIM(DISTINCT NULL))OR((NOT (vt1.c2)))))AND('-688454057')) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1) NOTNULL) IN ()) FROM vt1, vt0 WHERE (((x'1edc') BETWEEN (x'6188') AND (NULL)) COLLATE BINARY COLLATE BINARY) GROUP BY CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt0.c1 ELSE vt1.c1 END COLLATE BINARY LIMIT -2092983741 OFFSET -1362209387; -- 0ms;
SELECT SUM(((vt1.c0)IS NOT(vt1.c1))) COLLATE BINARY FROM vt1; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( RANGE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)) COLLATE NOCASE PRECEDING) FROM vt1 LEFT OUTER JOIN vt0 ON (NOT (((vt0.c0) ISNULL))) WHERE ((((x'c5e5')+(x'')) IN ())) LIMIT 1987262420 OFFSET 531294877;SELECT ((((vt1.c2, vt0.c1, x'')) NOT BETWEEN ((vt1.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c1, vt0.c1))) IN ()), vt1.c0, ((CAST(vt0.c1 AS REAL)) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt1.c1 IN ()))) FROM vt1;SELECT DISTINCT ((((((vt0.c1)AND(vt1.c2)))AND(vt0.c0))) BETWEEN (TYPEOF(vt1.c2)) AND ((vt1.c1 IN (vt0.c0)))), ((CAST(vt0.c1 AS TEXT))<>(CASE WHEN vt1.c1 THEN vt0.c0 END)), (~ (CAST(vt1.c2 AS BLOB))) FROM vt1 WHERE (((((((NULL)IS(NULL)))AND((('*)N있Lc島')-('嫻-}YU\r')))))OR(CAST('\nc*c.B,' AS NUMERIC)))) LIMIT -2084203837;SELECT DISTINCT ((LIKELIHOOD(DISTINCT vt1.c2, 0.1883663172659118))AND('' COLLATE RTRIM)) FROM vt1, vt0; -- 0ms;
SELECT ALL vt1.c0 FROM vt0;SELECT (CAST(vt1.c2 AS BLOB) IN (CAST(vt1.c1 AS BLOB))) FROM vt1 WHERE ((((((((((-1682666189)AND('*')))AND(0.060918349713343756)))AND(x'')))OR(NULL)) IN ('嫻-}YU\r' COLLATE BINARY))); -- 0ms;
SELECT SUM(MAX(CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END)), (((vt1.c2 IN (vt1.c0, vt1.c0))) NOT BETWEEN (((vt1.c1)>>(vt0.c1))) AND (CASE 0.26532628964882377  WHEN vt0.c0 THEN vt1.c0 END)), SUM((((vt1.c2, vt1.c1, vt0.c1))>((vt1.c1, vt1.c0, vt0.c1)))) OVER () FROM vt1, vt0;SELECT (((((((((vt0.c0)AND(x'')))AND(vt1.c2)))OR(vt1.c0)))AND(vt1.c1)) IN ()), CASE GROUP_CONCAT(vt1.c2)  WHEN CAST(vt1.c2 AS NUMERIC) THEN CAST(NULL AS TEXT) WHEN '' THEN ((vt1.c1)<<(vt1.c2)) WHEN CAST(vt1.c1 AS BLOB) THEN ((vt0.c0)OR(NULL)) WHEN ((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)) THEN (vt1.c1 IN ()) WHEN ((vt0.c0)=(vt0.c1)) THEN GROUP_CONCAT(vt1.c0) END, (vt1.c1 IN ()) COLLATE RTRIM FROM vt0;SELECT rtreenode(vt0.c1, vt0.c1) COLLATE BINARY, (NOT ((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))), ((COUNT(*))<<((((vt0.c1))<((vt0.c0))))) FROM vt1 GROUP BY '', vt0.c0, (((vt1.c1)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((((NULL) NOTNULL)))), 'F', ((((((vt1.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt1.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c1, vt0.c0)))))<>((((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))));SELECT DISTINCT (NOT (vt0.c1)) FROM vt1;SELECT (((((vt1.c0)OR(vt0.c1)), LIKELY(DISTINCT vt1.c0), ((vt0.c1)OR(vt1.c1))))!=((((vt1.c2) NOT BETWEEN ('썘1') AND ('a')), ((vt0.c0)==(vt0.c0)), (((vt0.c1))<=((vt0.c1)))))) FROM vt1 LIMIT -238266771 OFFSET -103405237;SELECT DISTINCT ((CAST(vt1.c1 AS INTEGER))IS(COUNT('q''		ohd퐼'))) FROM vt1 WHERE ((+ (((0.32954656009074823) BETWEEN (x'') AND (x'2c5b'))))) ORDER BY DATE(((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))AND('猆*S&i l')))OR(vt1.c1)), vt0.c0, UPPER(vt0.c1))  NULLS LAST, CASE WHEN CASE WHEN vt1.c2 THEN vt0.c1 END THEN CASE WHEN vt0.c0 THEN vt1.c0 END ELSE vt1.c0 COLLATE RTRIM END ASC, ((((CAST(vt1.c0 AS BLOB))AND((vt0.c0 IN ()))))AND(CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST;SELECT DISTINCT ((((vt1.c0 COLLATE NOCASE)AND((vt0.c1 IN ()))))OR((((vt0.c0))>=((vt1.c0))))) FROM vt0;SELECT ALL COUNT(((NULL)<<(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) BETWEEN (highlight(vt1.c2, NULL, vt0.c1, vt0.c1)) AND ((246062306 IN (vt1.c0, vt0.c0)))) FROM vt1 LIMIT 402341918 OFFSET 940021904;SELECT -2.18334097E8, ((vt1.c1 COLLATE BINARY)GLOB(CAST(vt1.c2 AS NUMERIC))), CASE (- (vt0.c0))  WHEN 0.03542368240057758 THEN LOWER(DISTINCT vt1.c0) ELSE NULL END FROM vt1;SELECT ((((((((((((vt1.c0 COLLATE BINARY)OR(0.9960290448783826)))AND((- (vt1.c0)))))OR(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c2)))AND(vt1.c1)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c2)))))OR(vt1.c1 COLLATE NOCASE)))OR(((((vt1.c2)OR(vt1.c1)))OR(vt0.c0)))))OR(((x'') BETWEEN (vt0.c1) AND (vt1.c0)))) FROM vt1, vt0 ORDER BY '-1821160144'  NULLS LAST, (((vt0.c1))==((vt1.c2))) COLLATE RTRIM  NULLS LAST, ((((vt0.c1) IS FALSE)) ISNULL) DESC; -- 0ms;
SELECT DISTINCT (((((~ (vt1.c2)))AND(json_array_length(vt1.c1, vt0.c1))))AND((((vt1.c2)) BETWEEN ((vt0.c1)) AND ((vt1.c2))))) FROM vt0, vt1; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt1 WHERE ((((NULL)IS NOT(1.24171624E9)) IN (('' IN ()), (((((((('0.9960290448783826')OR(NULL)))OR('0.6619520110241053')))OR(NULL)))OR(x'aec7'))))) ORDER BY 1.906026618E9  NULLS FIRST, 0.27731356003423535 ASC  NULLS FIRST; -- 0ms;
SELECT ((vt1.c2) IS TRUE) COLLATE NOCASE, (NOT (vt0.c1)) COLLATE BINARY, MAX(vt1.c2) FROM vt1, vt0 WHERE ((((((-492106645)) NOT BETWEEN ((NULL)) AND (('476987500')))) NOT BETWEEN (((NULL) NOTNULL)) AND (load_extension('-1853245932', NULL)))); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM FROM vt1 WHERE (((((('(P﫱\nM~i>' IN ()))AND(x'')))AND(0xffffffffe2ab0c6b COLLATE NOCASE))) GROUP BY ((vt1.c1 IN ()) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c2)))) HAVING ((((vt0.c1) ISNULL)) NOT NULL);SELECT DISTINCT NULLIF(x'', vt1.c1) FROM vt0;SELECT DISTINCT (((+ (vt0.c0))) IS TRUE) FROM vt0, vt1 WHERE ((((((((((+ (0.6475409013296785)))AND(((NULL)<>('')))))OR('1606666914' COLLATE RTRIM)))OR(HEX(NULL))))OR((((x'09c7')) BETWEEN (('0.9644319360674742')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT AVG(TOTAL(vt1.c1)) COLLATE BINARY, ((SUM(vt1.c0)) NOT BETWEEN ((((vt0.c0, vt1.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c1, vt1.c1)))) AND (((vt1.c0)/(vt1.c2)))), (((vt1.c2) IS FALSE) IN ()) FROM vt1 WHERE ((((~ (0.46210752493427243))) NOT BETWEEN ('-2084320348' COLLATE BINARY) AND (CAST(NULL AS NUMERIC))));SELECT DISTINCT (NULL IN (vt0.c1, vt0.c0)) COLLATE BINARY, x'8b77', AVG(ABS(DISTINCT vt1.c1)) FILTER(WHERE LOWER(DISTINCT (((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c1, vt0.c1, vt0.c1)) AND ((vt1.c0, vt0.c1, 0X719ba87a))))) OVER () FROM vt1, vt0; -- 0ms;
SELECT ALL (((vt1.c1 IN ())) ISNULL) FROM vt1 WHERE (CHAR(NULL, (('즿bKkX!}')*('-785190500')), ((((((((NULL)OR('')))AND('A{')))AND('[frY')))OR(-2090180233)))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED((~ (vt1.c1))) FROM vt1 WHERE (((((((-1362209387) NOT BETWEEN (x'') AND ('0.8015925296281997')))OR((0.8887544889869627 IN ()))))OR(((NULL) BETWEEN (NULL) AND (0xffffffffa3e6ed07))))) GROUP BY LOWER(((vt0.c0)/(vt1.c2)));SELECT DISTINCT LOWER(DISTINCT ((((((((vt0.c0)AND(vt1.c1)))OR(NULL)))OR(vt0.c0)))AND(vt1.c2))), CASE WHEN (+ (vt1.c1)) THEN ((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)) ELSE CAST(vt0.c1 AS NUMERIC) END, (UPPER(vt1.c2) IN ((- (vt0.c1)))), NTILE(((CAST(vt0.c1 AS NUMERIC)) IS TRUE)) OVER ( PARTITION BY ((~ (vt1.c1)) IN (((vt1.c0)<=(vt1.c2)), ((vt1.c2)==(vt0.c0)))), (NOT (CHAR(vt1.c1)))), CASE WHEN ((vt1.c0)<>(vt1.c1)) THEN TOTAL_CHANGES() END FROM vt0 WHERE (TRIM(DISTINCT (NOT ('D>2t[F')), (((('475122832')OR('#dV(0')))OR(NULL)))) ORDER BY (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ASC  NULLS FIRST, (((((vt1.c2)OR(vt0.c0)))OR(vt1.c1)) IN (((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c0))))  NULLS LAST;SELECT ALL ((((((((((vt0.c0)AND(NULL)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))<<(vt0.c0 COLLATE NOCASE)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT 0X3238fb82, (((((vt1.c1) NOT NULL), '842595202', vt1.c0))<((((vt0.c1)<>(vt1.c1)), NULL, ((vt1.c2) NOTNULL)))), ((vt1.c1)&(vt1.c0)) COLLATE NOCASE FROM vt1;SELECT CASE IFNULL(vt0.c1, vt0.c1)  WHEN ((vt0.c1) IS TRUE) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((((vt0.c0)OR(vt1.c2)))OR(vt0.c1)) THEN vt1.c1 WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c2)) THEN DATE(vt1.c0, vt0.c0, vt1.c2) ELSE 0.7975465146831983 END FROM vt0 LIMIT 851031874;SELECT DISTINCT (((((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((0.10562929747944638, vt0.c0, vt1.c1)) AND ((vt0.c0, vt1.c2, vt0.c1)))) IS FALSE) FROM vt1 WHERE (((('')) NOT BETWEEN ((((NULL)==(x'a82f')))) AND ((IFNULL(0Xffffffff82e15101, NULL)))));SELECT DISTINCT CAST(((vt1.c1) NOT NULL) AS INTEGER) FROM vt0;SELECT ALL ((((vt0.c0)+(vt0.c1)))<((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0))))), CAST(vt1.c1 COLLATE BINARY AS REAL), vt1.c1 FROM vt1, vt0 WHERE (LIKELY(UPPER(DISTINCT 0Xedccfc8))); -- 0ms;
SELECT ((0.5812150357651189) IS TRUE) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt1.c2 FROM vt0, vt1 WHERE ((((((((((((((('-1892139800')OR(0.5548602460493606)))OR('p[఻{窐x')))OR(-2.18334097E8)))OR(NULL)))OR('-230452397')))AND(x'')))OR(288643445))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt1.c1 AS INTEGER)) FROM vt1 GROUP BY ((((((((((((vt1.c2)OR(((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))))OR((vt1.c2 IN (vt1.c0, vt0.c0)))))OR(RTRIM(vt1.c0))))OR(NULL)))AND(x'')))OR(CAST(vt0.c0 AS REAL)));SELECT DISTINCT ((((vt0.c1) BETWEEN (vt1.c1) AND (vt0.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((0.34095677474028996)*(vt1.c1)))) FROM vt1 WHERE (ABS(CASE x''  WHEN '┤s].}t65' THEN 0.7021620583633936 END));SELECT ALL (((NULL))!=((CAST(vt1.c0 AS BLOB)))), (('')<<(LOWER(vt1.c2))), ((((AVG(vt1.c0))AND((NOT (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) FROM vt0 WHERE (CAST(((x'4537') IS FALSE) AS REAL));SELECT DISTINCT ((((vt0.c0) NOT NULL))>((('')==(vt0.c0)))) FROM vt1, vt0 WHERE ((('-540682893') BETWEEN (NULL) AND (0Xffffffffb5ceaca6)) COLLATE RTRIM); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((743666815)) AND ((vt1.c2))), LAST_VALUE(TYPEOF(CASE 0x68c46acb  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) OVER (), TRIM((('') NOT BETWEEN (vt1.c0) AND (vt1.c1)), (vt0.c0 IN (vt1.c0))) FROM vt0;SELECT DISTINCT ROUND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))), vt1.c0 COLLATE BINARY) FROM vt0, vt1 WHERE (((((('1065769723')%(x'ac0a'))))>((((0.2159810660109326) IS FALSE))))) GROUP BY ((((x'')OR((~ (vt0.c1)))))OR((vt0.c1 IN ()))), (- (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))), (((vt1.c2 IN ()))&(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))), (((vt0.c0 IN ()))LIKE((('~') ISNULL))), (((vt0.c1)) NOT BETWEEN ((((vt0.c0)<=(vt1.c0)))) AND ((((vt1.c2) BETWEEN (0x141456ba) AND (vt1.c1))))) HAVING x'5761'; -- 1ms;
SELECT NULL FROM vt1; -- 0ms;
SELECT DISTINCT (- ((NOT (NULL)))) FROM vt1 WHERE (((((x'a612') ISNULL))<(((NULL) NOT BETWEEN ('-0.0') AND (NULL))))); -- 0ms;
SELECT ALL x'ef17' FROM vt1 WHERE (((((0.40596758580005365)) NOT BETWEEN ((0.560762335812345)) AND ((0.2580949791554137))) IN ())); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT NULL COLLATE BINARY, UPPER((- (vt1.c2))), ((NULL) NOT BETWEEN (0.30849769472592825) AND (vt1.c2)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0)-(vt1.c1)))*((((vt1.c0, 'QVm{}Y', vt0.c0)) NOT BETWEEN ((0.7021620583633936, vt0.c0, vt0.c1)) AND ((vt1.c1, vt0.c1, NULL))))) FROM vt0 WHERE ((((0X3f865afb, x'', NULL)) NOT BETWEEN ((x'920a', CAST(0.40687783780037956 AS TEXT), (((('GK')OR(0.2263334238501874)))AND('k')))) AND ((INSTR(0.9977117310464366, x''), CAST(0.7941795177911202 AS INTEGER), ((NULL) IS TRUE)))));SELECT DISTINCT ((((((vt0.c0)OR(0.0814685368308059)))AND(vt0.c0)))/(IFNULL(x'0eca', vt0.c1))), TYPEOF(MAX(vt1.c0)), (('-1173698680' COLLATE NOCASE)LIKE(((vt0.c1) NOT NULL))), (+ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)))), vt0.c1 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN 'r!\rJc|1' THEN vt0.c1 ELSE vt0.c1 END) BETWEEN (COUNT(vt1.c2)) AND (COUNT(*))), SUM((vt0.c0 IN ())) FILTER(WHERE COALESCE(DISTINCT ((vt1.c1)OR(vt1.c0)), ((vt0.c0) IS TRUE), (((vt1.c2)) BETWEEN ((vt0.c1)) AND ((vt1.c2))), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)))) OVER (), ((((vt1.c0)>(vt1.c2))) NOTNULL) FROM vt1;SELECT CASE (~ (0.12392782796695323))  WHEN ((vt1.c1) NOTNULL) THEN (vt1.c1 IN ()) ELSE CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 END END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt1.c2))<((vt0.c1)))) NOT NULL) FROM vt0, vt1 WHERE (((LTRIM(NULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT AVG((((vt1.c0)) BETWEEN ((0.21433151434361264)) AND ((vt0.c0)))) FROM vt1, vt0 WHERE ((((((NULL)>(NULL))))>=((((NULL)IS NOT('\dPpG')))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, vt1 ORDER BY '1947078647' DESC  NULLS LAST LIMIT -40796270 OFFSET -1173698680; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1, vt0 LIMIT -900410520 OFFSET 1098975030; -- 0ms;
SELECT DISTINCT (((vt1.c2 IN ())) NOT NULL), CAST((NOT (vt1.c2)) AS NUMERIC), CAST(((vt1.c2)IS(vt1.c1)) AS INTEGER), -702409591, (((vt1.c0) ISNULL) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c2)) AS REAL) FROM vt1 WHERE ((((((NULL))<((NULL)))) NOT BETWEEN (LTRIM(1051158975)) AND (((('1915111414')) BETWEEN ((NULL)) AND ((0.9283846503595989))))));SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)))OR(((vt1.c2)IS NOT(vt0.c0)))), (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN x'96df' ELSE vt0.c1 END IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))), vt0.c1 FROM vt1, vt0 WHERE (((((x'68a20bc0') NOT BETWEEN ('603603775') AND (x''))) ISNULL)); -- 0ms;
SELECT ALL ((((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS FALSE) FROM vt0 GROUP BY (+ (((((((((vt1.c1)OR(vt1.c2)))OR(x'')))OR(vt1.c1)))AND(vt1.c0))));SELECT DISTINCT (NOT ('-1344643634')) FROM vt0; -- 0ms;
SELECT DISTINCT (((AVG(vt0.c0)))<=((CAST(vt0.c1 AS TEXT)))) FROM vt0, vt1 GROUP BY CASE (((vt1.c1, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt1.c1, vt1.c2)) AND ((vt1.c2, vt0.c1, vt1.c1)))  WHEN vt1.c0 THEN ((vt0.c0)AND(vt1.c0)) END HAVING ((('-1783708840', CAST(vt1.c1 AS REAL), ((vt1.c1)<=(vt1.c2))))>=((MAX(vt1.c1), (vt0.c1 IN ()), CASE vt1.c0  WHEN vt1.c2 THEN vt0.c0 ELSE vt0.c1 END))) LIMIT -1853245932; -- 0ms;
SELECT DISTINCT ((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c2)) AND ((vt0.c1, vt0.c0, vt1.c0))) IN ()) FROM vt0, vt1 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((CAST(x'c902' AS TEXT)))), CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN ((vt1.c2) NOTNULL) ELSE 'y##쑈' END  NULLS FIRST; -- 0ms;
SELECT ALL ((CASE vt1.c1  WHEN NULL THEN vt1.c0 WHEN vt1.c2 THEN vt0.c1 WHEN vt1.c2 THEN vt1.c1 END)*(1.78276751E9)), ((((vt1.c2)>>(vt1.c2))) NOTNULL), (((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) FROM vt1;SELECT DISTINCT ((json_array_length(vt1.c0, vt0.c1)) BETWEEN (x'') AND ((vt1.c2 IN ()))), NULLIF(vt0.c0, 0.5812150357651189) COLLATE NOCASE, CASE CAST(vt1.c1 AS NUMERIC)  WHEN vt1.c1 THEN CASE WHEN vt0.c0 THEN vt1.c0 END END FROM vt0, vt1 LIMIT 749574589; -- 1ms;
SELECT ALL SUM(((vt0.c1)IS(vt0.c0))) OVER () FROM vt1 WHERE ((('R{Q\na8' COLLATE NOCASE) BETWEEN ('胃r' COLLATE NOCASE) AND (CAST(x'' AS REAL)))) LIMIT -790952134;SELECT (((vt1.c1)/(vt0.c0)) IN ()), MIN(((((NULL)AND(vt0.c0)))OR(vt0.c1)), AVG(vt1.c0), vt0.c1 COLLATE BINARY, INSTR(vt0.c1, '-111357068'), ((NULL)>>(vt1.c0)), CAST(vt0.c0 AS INTEGER)), vt1.c2 FROM vt1, vt0 WHERE (0.7112150726294734) LIMIT 24706899; -- 0ms;
SELECT DISTINCT (+ ((+ (vt1.c0)))), (((vt1.c1 IN ()))>(MAX(vt0.c0))), CASE WHEN vt0.c1 COLLATE BINARY THEN (((vt1.c2))<=((vt1.c2))) ELSE 0.04719392730868133 END FROM vt0;SELECT ALL (((((vt1.c2, vt1.c0, vt1.c1))>((vt1.c1, vt0.c0, vt1.c0)))) NOTNULL), ((CAST(vt1.c1 AS BLOB)) NOT NULL), TOTAL(((vt1.c1) IS TRUE)) OVER () FROM vt1, vt0; -- 0ms;
SELECT ALL CAST(((vt0.c1)>=(vt0.c0)) AS INTEGER) FROM vt1, vt0 WHERE (((((1.594009127E9) NOT BETWEEN (NULL) AND (NULL)))>>((NOT (0x175b200c))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((vt0.c1) BETWEEN (((vt0.c0) IS TRUE)) AND ((vt0.c0 IN ())))) OVER () FROM vt0 WHERE ((((((('') NOTNULL))AND(UNLIKELY(x''))))OR((NOT (0xffffffffbc0ef04b))))); -- 0ms;
SELECT ((((vt1.c1) IS TRUE))LIKE(((vt0.c1)<<(vt1.c1)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((vt1.c1) ISNULL), COUNT(vt1.c1)), ((vt1.c0) NOT BETWEEN (((NULL) NOT BETWEEN (vt0.c0) AND (vt1.c1))) AND (((vt1.c1)&(vt1.c2)))), vt1.c1 FROM vt1 WHERE ((((('I *l9r*')<=(x'')))AND(0xffffffff887d7a90 COLLATE NOCASE)));SELECT DISTINCT MIN(((vt1.c1)<>(vt0.c1)), LIKELY(vt1.c2)), GROUP_CONCAT((vt1.c1 IN (vt0.c1, vt1.c2))) FILTER(WHERE CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN (vt0.c0 IN (vt1.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE (vt1.c0 IN (vt1.c0, vt1.c1)) END) OVER ( ROWS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE GROUP), ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) FROM vt0, vt1 WHERE (((0.8129089361998582) NOT BETWEEN ((0xffffffffb5ceaca6 IN ())) AND (((NULL) IS TRUE)))); -- 1ms;
SELECT DISTINCT ((((x'')OR(((vt1.c1) NOT NULL))))OR(((vt0.c1)<=(vt0.c0)))), ((NULL COLLATE NOCASE) NOT NULL), (((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c2)) IN ()) FROM vt0 WHERE (((0.9528096417223159 COLLATE RTRIM)<<(((0Xffffffffa73d28d4) NOTNULL))));SELECT (~ (((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0 ORDER BY ((((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))OR((((vt1.c1))<((vt1.c1))))))OR('\nC*C.B,')))OR(LIKELY(DISTINCT vt0.c0))))OR(((x'')<(vt1.c0))));SELECT DISTINCT ((LIKELIHOOD(DISTINCT vt1.c1, 0.47829664220188706))>>(((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)))) FROM vt1; -- 0ms;
SELECT DISTINCT vt0.c1, CASE (vt0.c0 IN ())  WHEN (vt1.c2 IN ()) THEN (('-1983757165') NOT NULL) END, COUNT(CASE vt0.c0  WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt0.c1, vt0.c1, vt1.c0, vt1.c0, vt1.c0))!=(('', vt0.c0, vt0.c0, vt1.c0, vt0.c0)))) IS TRUE) FROM vt1, vt0 WHERE (((((((-5.40682893E8)AND(759012869)))AND(x''))) IS FALSE)) GROUP BY CASE WHEN ((vt1.c2)&(vt0.c1)) THEN NULLIF(vt1.c2, vt1.c1) ELSE (('hP')/(vt1.c1)) END HAVING vt1.c2; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt1.c0 AS TEXT)) FROM vt1, vt0 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT DISTINCT (vt1.c2 IN ()), CASE CAST(vt1.c1 AS TEXT)  WHEN vt1.c2 THEN ((((vt0.c0)AND(vt1.c1)))AND(vt1.c0)) END, (- (COUNT(-1.17369868E9))), QUOTE(vt1.c1 COLLATE BINARY), COUNT(CAST(vt1.c1 AS BLOB)), ((((~ (vt1.c2))))>=((MIN(vt0.c0)))), ((IFNULL(vt0.c0, vt1.c0)) BETWEEN (load_extension(vt1.c1, vt1.c2)) AND (SUM(vt0.c0))) FROM vt0, vt1;SELECT DISTINCT (- ((NOT (vt1.c1)))) FROM vt0, vt1; -- 0ms;
SELECT ALL (CAST(vt0.c1 AS INTEGER) IN (SUM(vt0.c1), vt0.c1)), vt1.c1, LOWER(((vt1.c0)%(vt1.c0))), x'', vt1.c2 COLLATE BINARY FROM vt1 WHERE (x'');SELECT DISTINCT NULL, ((((((((((vt1.c0) NOT BETWEEN (x'') AND (x'396e')))AND(((vt1.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)))OR(vt0.c0 COLLATE RTRIM)), vt1.c0 FROM vt1 GROUP BY (~ (vt0.c1 COLLATE NOCASE)), SQLITE_VERSION() COLLATE NOCASE, CAST(((vt1.c2) IS FALSE) AS INTEGER) HAVING (((vt1.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1 COLLATE RTRIM)));SELECT ((((~ (vt1.c2))))<=(((NOT (vt1.c0))))), HEX(CAST(vt1.c2 AS REAL)), ((((vt1.c1) IS TRUE)) BETWEEN (NULL) AND (NULLIF(vt1.c1, vt1.c1))) FROM vt0, vt1 WHERE (CASE ((0.14517568241212497) NOT BETWEEN (x'') AND (x''))  WHEN 'PM' THEN ('475122832' IN ()) END); -- 0ms;
SELECT ALL (CAST(vt1.c2 AS TEXT) IN ()), vt0.c0, PERCENT_RANK() OVER () FROM vt1, vt0 WHERE ((((CAST(NULL AS BLOB), NULL, (((((((('}N-bh廄1Q')AND(0.026505613880365875)))OR(0.7990800898189301)))OR(x'')))AND(0.48931756615480515))))>=(((+ (0.9690486450280212)), (+ (x'')), (((NULL, '1435005439', 0Xffffffff9d192bb2)) NOT BETWEEN (('-1879591915', x'e1dc47d0', 0.40655420954056665)) AND ((-5.40682893E8, 0.048746170611196016, x''))))))) GROUP BY (0.032398283596892896 IN ()), (CASE WHEN vt0.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN vt0.c1 THEN '|+~챛' END IN ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c1))))), '0.5909803774925755'; -- 0ms;
SELECT LEAD(((TYPEOF(vt0.c1)) ISNULL), ((((((((((vt0.c0)||(vt1.c2)))AND(((vt0.c1)+(vt1.c0)))))OR(((vt1.c2)IS(vt1.c1)))))AND((vt0.c1 IN ()))))AND(NULL)), (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c2)))) ISNULL)) OVER ( PARTITION BY ((((vt1.c0) ISNULL))<<((+ (vt0.c0)))), 8.51031874E8 ORDER BY IFNULL(DISTINCT vt1.c2, vt0.c0) COLLATE NOCASE ASC  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt0.c0 END)LIKE(vt1.c1 COLLATE BINARY))  NULLS LAST) FROM vt0, vt1 WHERE (((NULL)*(CASE WHEN '-1e500' THEN NULL ELSE x'' END))) GROUP BY CASE x'1076'  WHEN NULL THEN ((vt1.c2) NOT NULL) WHEN ((x'0756')IS NOT(vt0.c0)) THEN ((vt0.c1)%(vt0.c0)) WHEN (NOT (vt1.c1)) THEN LOWER(DISTINCT vt1.c2) END HAVING GROUP_CONCAT(((vt0.c0) ISNULL)); -- 0ms;
SELECT ALL ((((vt1.c2)IS(vt0.c1)))GLOB(((vt0.c1)==(NULL)))) FROM vt1 WHERE (x'f7df');SELECT DISTINCT CASE vt1.c1  WHEN CAST(x'' AS REAL) THEN ((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c1)) END FROM vt0, vt1; -- 0ms;
SELECT ALL (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c2)) IN ()) FROM vt1 WHERE (CAST((x'' IN ()) AS INTEGER)) GROUP BY (((CAST(vt1.c2 AS REAL), ((vt1.c1) NOTNULL), vt1.c1 COLLATE RTRIM))>(((((vt0.c1, vt1.c0, vt1.c2)) NOT BETWEEN ((vt1.c1, vt0.c1, vt1.c0)) AND ((vt0.c1, vt1.c1, vt0.c0))), '-696322686', ((vt1.c0)+(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST, (~ (vt1.c1 COLLATE BINARY)) ASC  NULLS FIRST;SELECT DISTINCT SUBSTR(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt1.c0) BETWEEN (x'') AND (vt1.c2))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT MAX(((vt1.c0)>>(vt1.c0))) FROM vt0 WHERE ((((('') ISNULL)) NOT BETWEEN (((((((((-2048310951)OR(0.6407254709743471)))OR(NULL)))AND(0.9690486450280212)))OR(NULL))) AND (SQLITE_SOURCE_ID()))) GROUP BY ((CASE WHEN vt1.c2 THEN vt0.c1 END)%(((vt0.c1) NOT BETWEEN (vt1.c0) AND (x'5b25')))), (((vt1.c1, vt0.c0, vt1.c1)) BETWEEN (((~ (vt1.c1)), (vt1.c2 IN ()), CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)) AND ((((vt1.c2)GLOB('1606666914')), ((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c1)), vt0.c1))), ((-1374846598) IS TRUE);SELECT DISTINCT ((vt0.c0 COLLATE BINARY) BETWEEN ((NULL IN ())) AND (vt0.c1)) FROM vt0, vt1 WHERE (SUBSTR(x'', LIKELIHOOD(x'', 0.01870112168646143))) LIMIT 1678717279 OFFSET -1920034675; -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0 NOT INDEXED, vt1 WHERE (CAST((('gQ,''')OR('-1846954703')) AS INTEGER)); -- 0ms;
SELECT DISTINCT CASE (- (vt1.c1))  WHEN vt1.c1 THEN CASE vt0.c1  WHEN -1173698680 THEN vt0.c1 END ELSE vt1.c0 END FROM vt0, vt1 ORDER BY vt0.c0  NULLS FIRST, ((-1914850195) BETWEEN (((vt0.c1)!=(0.7112150726294734))) AND (((((((((vt1.c1)AND(vt1.c2)))OR(vt0.c1)))OR(-1.24791586E9)))AND(vt0.c1))))  NULLS LAST; -- 2ms;
SELECT (((vt0.c0)) NOT BETWEEN ((MIN(vt1.c0))) AND ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) FROM vt0 WHERE ((NOT ((('㗫')IS NOT(0.26889638305034236))))) GROUP BY (+ (vt1.c2)) COLLATE BINARY, ((((((vt1.c2)OR(vt0.c1)))AND(vt0.c1)))||((+ (vt0.c1)))), CASE WHEN vt0.c0 COLLATE BINARY THEN ((x'') IS FALSE) WHEN ((vt0.c0)=(vt1.c0)) THEN x'' WHEN (vt1.c0 IN ()) THEN vt1.c2 COLLATE BINARY ELSE (- (vt0.c0)) END;SELECT COUNT(*) FROM vt0, vt1 WHERE ((((~ (NULL)))/(CASE WHEN 0.5099296863874582 THEN '974276433' END))); -- 0ms;
SELECT ALL (((vt1.c0 IN ())) IS FALSE), (SUM(vt0.c1) IN (TYPEOF(DISTINCT vt0.c0))), 1.708375319E9 FROM vt0, vt1; -- 0ms;
SELECT (NOT (vt1.c2)) COLLATE RTRIM, GROUP_CONCAT((-1.682666189E9 IN ())), ((((((((vt0.c1)OR(vt1.c2)))OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)) COLLATE BINARY FROM vt1 WHERE ((- (((x'')%('W戒')))));SELECT ((CAST(vt0.c0 AS TEXT)) BETWEEN ((402341918 IN ())) AND (((((((((vt0.c1)OR(vt1.c0)))OR(vt1.c1)))OR('1757702859')))AND(vt0.c1)))), CASE WHEN CAST(vt1.c0 AS REAL) THEN TRIM(DISTINCT vt1.c2) ELSE x'' END, CAST((vt1.c1 IN ()) AS NUMERIC) FROM vt0 WHERE (CASE WHEN ((0.20601425605040669)||('')) THEN 0X23fa433f COLLATE RTRIM WHEN '' THEN (+ ('1987262420')) WHEN 1.30143877E9 THEN CASE WHEN '-1545147129' THEN '890082953' ELSE x'' END END) LIMIT 603603775 OFFSET -293048477;SELECT DISTINCT (((('2051621614') NOT BETWEEN (vt1.c0) AND (vt1.c2)))IS(0.692666542734146)) FROM vt0 WHERE (((((NULL COLLATE NOCASE)OR((('')&('-2048310951')))))AND(((NULL)IS(x'')))));SELECT DISTINCT (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((LTRIM(vt1.c0, 0.8376775935493309), (NOT (vt1.c1)), ((vt1.c2)<<(vt1.c2)))) AND ((((vt1.c0)LIKE(vt1.c0)), ((vt1.c2) BETWEEN (vt1.c1) AND (vt0.c1)), (((vt1.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.c2, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0)))))), ((((vt1.c0) NOT NULL))*(MAX('1301438770', vt0.c1, vt0.c1, vt1.c0, vt0.c1, vt0.c1))), CAST(((vt1.c2)<(vt1.c2)) AS INTEGER) FROM vt0, vt1 WHERE (((((NULL)>>(0.3597222058707019)))%(((x'')||(NULL))))) LIMIT 2063348538; -- 0ms;
SELECT DISTINCT 0.1387991235748579 FROM vt1, vt0 LIMIT 64860835 OFFSET -1314129805; -- 0ms;
SELECT DISTINCT json_extract(vt1.c2 COLLATE BINARY, (~ (vt0.c1))) FROM vt1 NATURAL JOIN vt0 WHERE (CASE (0.9026864355191285 IN ())  WHEN CAST('131208053' AS INTEGER) THEN (((0.9381673318727686, 1920692998, NULL))<=((NULL, x'', 0Xffffffffc8d20b16))) ELSE ((0Xffffffffe2400554)<<('i(')) END); -- 0ms;
SELECT DISTINCT CASE WHEN 0.05275284269239422 THEN CAST(vt1.c0 AS BLOB) END FROM vt1, vt0 WHERE (CAST(((0.26234720422321234) NOT NULL) AS REAL)) ORDER BY (((vt0.c1)>>(0.523492605183629)) IN (((vt1.c2) BETWEEN (vt0.c1) AND (vt0.c0)), ((((vt1.c2)AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt1.c0)LIKE(CAST(x'' AS INTEGER))) FROM vt1 WHERE (TRIM(DISTINCT ((-1)LIKE(NULL)))); -- 0ms;
SELECT DISTINCT MAX((vt0.c0 IN ())) FROM vt1, vt0 LIMIT 852806079; -- 0ms;
SELECT DISTINCT (((((((((~ (vt1.c2)))OR((vt1.c0 IN ()))))AND((vt1.c1 IN ()))))AND((((('57124449')AND(vt1.c0)))OR(vt0.c1)))))OR(((vt1.c0) BETWEEN ('') AND (vt0.c1)))) FROM vt0 WHERE ((((((0xffffffffea557372))!=((x'')))) NOT NULL));SELECT DISTINCT AVG((+ (vt0.c1))) OVER (), (((- (vt1.c1))) BETWEEN ((vt1.c2 IN (vt0.c0))) AND (vt1.c0 COLLATE RTRIM)), (((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) FROM vt0, vt1 WHERE ((((0.8272443126263741)) BETWEEN ((((x'')LIKE(0x2905a849)))) AND (('u#' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT NTILE(CASE ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))  WHEN ((vt0.c0) NOTNULL) THEN CAST(vt0.c1 AS TEXT) WHEN vt0.c0 THEN (((vt0.c1))!=((vt0.c0))) WHEN ((vt0.c0)<=(vt0.c0)) THEN (vt0.c1 IN (vt0.c0)) END) OVER () FROM vt0 WHERE ((- ((('Q''		OHD퐼')<=(0.20548746584148847))))); -- 0ms;
SELECT ALL CAST(vt1.c0 AS REAL) FROM vt1 WHERE ((((NOT ('1111197508')))%((('1947078647')+(0Xffffffff8c044030))))); -- 0ms;
SELECT DISTINCT ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c2)))IS NOT(((vt0.c0) NOTNULL))) FROM vt1, vt0; -- 0ms;
SELECT (NOT (CAST(vt0.c1 AS TEXT))), ((((-0.0)AND((((0Xffffffff9189b614, vt1.c2, vt0.c0))>((vt1.c0, vt1.c0, vt1.c0))))))AND(vt1.c0)), (((vt0.c1)) NOT BETWEEN (('475122832' COLLATE BINARY)) AND ((((vt0.c0)+(vt1.c2))))) FROM vt0 GROUP BY ((((vt1.c2) IS FALSE)) IS TRUE), json_quote(vt1.c2 COLLATE NOCASE), ((CAST('-314371736' AS INTEGER))IS(vt0.c1)), (vt1.c2 COLLATE RTRIM IN ((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))), (((vt1.c2)) BETWEEN ((((vt1.c1) NOTNULL))) AND ((vt1.c1))) LIMIT -1149710984;SELECT DISTINCT '' FROM vt0, vt1 WHERE ((((((0.6380986110111356)) BETWEEN ((x'')) AND (('-1568011205'))))<=((((NULL, 0.8940773408189493, '', '', '842595202'))=(('-1765419177', NULL, 0.3902267751589651, 0.5363488645815113, x'')))))); -- 0ms;
SELECT DISTINCT (CAST(vt1.c2 AS BLOB) IN ()) FROM vt0; -- 0ms;
SELECT (((vt1.c0 IN ())) IS TRUE), (CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END IN ((vt1.c1 IN ()))), (TYPEOF(DISTINCT vt1.c0) IN ()) FROM vt0 WHERE (0Xffffffffba0ac788);SELECT DISTINCT 0xfffffffff16cacb8, ((vt0.c0 COLLATE RTRIM)AND((((vt1.c0))>((vt1.c2))))), (((0.7622704013447532)AND(vt1.c2)) IN ()), ((CASE vt0.c0  WHEN vt1.c2 THEN vt0.c0 END)<=(ABS(DISTINCT vt0.c1))), (((- (vt0.c1)))OR(CASE vt1.c1  WHEN vt0.c1 THEN x'eec7' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END)) FROM vt1, vt0 WHERE ((((- (6.12422716E8)))*(CAST(x'8c41' AS BLOB)))); -- 0ms;
SELECT ((((vt0.c1)%(vt0.c0))) NOT BETWEEN ((vt1.c1 IN ())) AND (vt0.c1 COLLATE NOCASE)), ((((NULL)OR(((vt1.c1)<(vt1.c2)))))AND(((0x3573faf1) ISNULL))), 0X64b04ae4 FROM vt1 WHERE (CAST(-1340015280 AS REAL) COLLATE BINARY);SELECT DISTINCT (((vt0.c1) NOTNULL) IN ()) FROM vt0; -- 0ms;
SELECT CAST((((vt1.c1))<((vt1.c2))) AS NUMERIC) FROM vt0;SELECT DISTINCT SUM(SUM(CAST(vt0.c0 AS TEXT))), CAST(vt0.c1 COLLATE RTRIM AS REAL), (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) FROM vt1 GROUP BY (vt1.c0 COLLATE RTRIM IN (((vt1.c1) ISNULL), ((((vt1.c2)AND(vt0.c1)))OR(vt1.c2))));SELECT DISTINCT ((TIME(vt1.c2, vt1.c2, vt1.c0)) IS TRUE) FROM vt0, vt1 WHERE (TYPEOF((~ (-1401529394)))) LIMIT 277007984; -- 1ms;
SELECT DISTINCT AVG((- (0xffffffff88a67a7d))) OVER () FROM vt0, vt1 GROUP BY '476987500' HAVING CAST(CAST(vt0.c1 AS INTEGER) AS TEXT) ORDER BY (((~ (vt0.c1)))<(((((vt0.c0)OR(vt1.c0)))AND(vt1.c2))))  NULLS FIRST, (CAST(vt0.c0 AS NUMERIC) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT CASE vt0.c1  WHEN x'' THEN (+ (vt1.c0)) ELSE NULL END FROM vt0;SELECT DISTINCT vt0.c0 FROM vt0, vt1 LIMIT 540223860; -- 0ms;
SELECT MIN(((vt0.c0)GLOB(vt1.c2))) FROM vt0, vt1; -- 0ms;
SELECT ALL (- ((vt1.c0 IN (vt1.c1)))) FROM vt0 WHERE (((CAST(0.830989037954498 AS NUMERIC))GLOB(((0.49751253729133094) NOTNULL))));SELECT DISTINCT ((((vt0.c1)OR(vt1.c2 COLLATE NOCASE)))OR((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1 WHERE ((((('1451152390')%(93919833))) NOT BETWEEN (0xffffffff8ae8ee0a) AND ((('-1991108941') BETWEEN (0.5424904330133669) AND (2.88643445E8)))));SELECT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c1)))||(((vt0.c1)<(vt1.c2)))) FROM vt0;SELECT GROUP_CONCAT(JULIANDAY(vt1.c2, vt1.c1, vt1.c1, vt0.c1, vt1.c2)) FROM vt0 ORDER BY CASE ((vt1.c0) IS FALSE)  WHEN x'' THEN ((vt1.c0)-(vt0.c0)) END DESC, CASE WHEN (NOT (vt1.c2)) THEN json_valid(vt1.c2) END ASC  NULLS FIRST, CAST(CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 END AS INTEGER) ASC;SELECT DISTINCT (((vt0.c1 IN ()))<=(((vt1.c0)<(vt0.c0)))) FROM vt0, vt1 ORDER BY (NOT (((vt0.c0)<(vt0.c0)))); -- 0ms;
SELECT DISTINCT 'B>', ((((vt1.c2) IS TRUE))<=(((((((((vt1.c2)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c2)))AND(vt0.c1)))), (((vt0.c1)) NOT BETWEEN (((+ (vt1.c1)))) AND ((vt1.c1 COLLATE BINARY))) FROM vt0;SELECT DISTINCT (((('^cKV,cB')AND(vt1.c1)))AND(COUNT(x''))) FROM vt1 WHERE (CAST(((1686250299) BETWEEN ('890082953') AND ('{崼썘+m_KBG')) AS REAL)); -- 1ms;
SELECT ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))%((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT ALL CASE LIKE(vt0.c0, vt0.c1, '!')  WHEN json_valid(vt1.c2) THEN CAST(vt0.c0 AS BLOB) WHEN CASE vt1.c2  WHEN vt0.c1 THEN vt1.c1 END THEN (('') IS FALSE) WHEN ((0.9977117310464366)>(vt1.c0)) THEN (((vt0.c0))==((vt1.c2))) END FROM vt1, vt0 WHERE (CASE WHEN ((x'')/(0X5fc3caa2)) THEN (('~') NOT BETWEEN (1.7976931348623157E308) AND ('L<L3/J')) END) GROUP BY CASE (((vt1.c2, vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c2, vt1.c1, vt0.c0)))  WHEN vt1.c0 THEN vt1.c0 END HAVING (((((vt0.c0))!=((NULL)))) BETWEEN (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c2))) AND (LOWER(DISTINCT vt1.c0))); -- 0ms;
SELECT DISTINCT (((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)) IN ()), (NOT (vt0.c0)), ((((((((((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)))AND(vt0.c1)))OR(LTRIM(vt1.c0))))OR((- (vt1.c2)))))AND(((vt0.c1) IS TRUE))) FROM vt0, vt1 WHERE ((((NOT (x''))) NOTNULL)); -- 0ms;
SELECT ALL (((vt1.c1)) BETWEEN (((~ (vt1.c1)))) AND ((HEX(vt1.c0)))) FROM vt0, vt1 WHERE (CASE WHEN (((x'85cc')) BETWEEN ((1782767510)) AND ((1.201548678E9))) THEN x'' WHEN '뼁' COLLATE RTRIM THEN ((0.085977826289927) IS FALSE) WHEN (((7.027655743648831E-4, x'85bd1e5b', NULL)) NOT BETWEEN ((NULL, x'', '-1338679468')) AND ((1994592683, '0.3597222058707019', NULL))) THEN x'' END); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((vt0.c1)|('-104151992'))) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt0.c0) NOTNULL)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(0.3630289311160201) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (NOT (((vt1.c0)+(vt1.c1)))) FROM vt1 NOT INDEXED, vt0 WHERE (CAST(x'' AS TEXT) COLLATE BINARY); -- 0ms;
SELECT ALL ((((((vt1.c1)OR(vt1.c2)))OR(vt1.c0)))||(((((vt1.c2)AND(vt1.c0)))OR(vt1.c2)))), LAST_VALUE(((((vt1.c0)>=(vt1.c2)))<(((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c2)))AND(vt0.c1)))AND(vt1.c2))))) OVER (), ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)+(AVG(vt0.c0))), (((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE), ((SUM(vt0.c0))<<((vt0.c1 IN ()))) FROM vt1, vt0; -- 0ms;
SELECT ALL ((vt1.c0)AND(vt1.c1)) COLLATE BINARY FROM vt1, vt0 WHERE ((~ (CAST(0.762157502823271 AS INTEGER)))); -- 0ms;
SELECT DISTINCT MAX(((vt0.c0)||(vt1.c0))) FROM vt1;SELECT DISTINCT x'0d3a' FROM vt1 WHERE ((((((((((('-1362209387') ISNULL))OR((NOT (0.9701755099625727)))))OR(SQLITE_VERSION())))OR((- (0.5015229754501987)))))AND((((('ch]喕%l4䅙+')AND('851031874')))OR(NULL))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1, vt0 INTERSECT SELECT CASE WHEN ((((vt1.c2)OR(vt1.c1)))AND(vt1.c2)) THEN (vt0.c1 IN ()) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.6851213827768513 END END FROM vt1, vt0; -- 0ms;
SELECT CAST(((((vt0.c1)OR(vt1.c1)))AND(vt1.c1)) AS NUMERIC) FROM vt0, vt1 WHERE (((((DATETIME(x'b355', '-1444242990', 0.2889136703664046, x'', x''))OR('-670269492' COLLATE RTRIM)))AND(CAST(x'849afa2c' AS INTEGER)))); -- 0ms;
SELECT ALL ((MIN(vt1.c0, x''))*((vt1.c0 IN (vt1.c1)))) FROM vt1, vt0; -- 0ms;
SELECT ALL COUNT(json_array_length(vt1.c1, vt0.c0) COLLATE NOCASE) OVER () FROM vt0, vt1 WHERE ((((0.6320336165244201))>((NULL))) COLLATE RTRIM); -- 0ms;
SELECT UPPER((((vt1.c2, vt0.c0, vt1.c2))>=((vt0.c0, vt1.c2, vt1.c0)))) FROM vt0, vt1 WHERE (((((((x'')+(NULL)))AND(((0.9283846503595989) ISNULL))))AND((x'5cb3' IN ())))); -- 0ms;
SELECT ((((vt1.c0)OR(vt1.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (MIN(vt1.c2))), GROUP_CONCAT(((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c0))) OVER (), AVG((~ (vt1.c2))) FROM vt1 WHERE ((NULL COLLATE RTRIM IN ()));SELECT DISTINCT ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE NULL END)/((vt0.c0 IN (vt1.c1)))) FROM vt0 WHERE ((NOT ((((NULL))>((0Xffffffffbbe76707))))));SELECT DISTINCT (((vt1.c2, vt0.c0, vt1.c2)) NOT BETWEEN ((CAST(vt0.c1 AS TEXT), GROUP_CONCAT(vt0.c1), x'')) AND ((((0.8883461476522574)/(vt1.c1)), CAST(vt1.c2 AS NUMERIC), CASE vt0.c0  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c1 END))) FROM vt1, vt0 WHERE (((CASE '1805231312'  WHEN '32059092' THEN 0.3542132342580172 WHEN x'' THEN 0.4506752313978566 WHEN 0xfffffffff2439353 THEN '940021904' ELSE 0X1c51cc90 END)|((('-103405237') IS TRUE)))); -- 0ms;
SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE) FROM vt1, vt0; -- 0ms;
SELECT ALL CAST((+ (vt0.c1)) AS NUMERIC), CASE WHEN NULL THEN ((vt0.c1)%(vt0.c1)) END, (((vt0.c0, vt1.c2, vt1.c2)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), MAX(vt1.c0))) AND ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)), ((vt1.c0) IS TRUE), ((vt1.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(vt1.c2) OVER () FROM vt1, vt0; -- 0ms;
SELECT (NOT (COALESCE(vt1.c0, 0X585f3194))) FROM vt0;SELECT (~ (CASE WHEN vt1.c2 THEN vt0.c0 END)) FROM vt1, vt0; -- 0ms;
SELECT CAST(((vt0.c1)/(vt1.c0)) AS TEXT), (- (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)), '-29360653' FROM vt1, vt0 GROUP BY STRFTIME((vt0.c1 IN (vt1.c0)), ((((vt0.c0)OR(vt1.c0)))OR(vt1.c2)), CAST(vt1.c0 AS INTEGER), ((vt1.c2) IS TRUE), ((vt1.c1)+(vt1.c2))), (((((((((vt1.c0)AND(vt1.c2)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c1)) IN (((((((((((((vt0.c1)OR(vt0.c1)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c2)))AND(0.6783476326984674)))OR(vt1.c2)))), (+ (json(vt1.c0))); -- 0ms;
SELECT ALL vt0.c0 FROM vt1 WHERE (((((((NULL) NOT BETWEEN ('BR3䂮l	Gh|') AND ('1083299908')))AND(CASE ''  WHEN NULL THEN '0.7887312392649556' ELSE 0X78951c71 END)))OR(((NULL) BETWEEN ('3kRuF') AND ('-268476037'))))) ORDER BY (((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c2)) IN (((vt0.c0) NOTNULL)));SELECT (+ (0.6171229192586798)) FROM vt0, vt1 WHERE (((0X3b39c6ee COLLATE NOCASE) NOT BETWEEN (LTRIM(x'9acca743')) AND (((x'1b5c')!=(x''))))); -- 0ms;
SELECT DISTINCT (NOT (((((vt0.c0)OR(vt1.c2)))AND(vt0.c1)))), ((((((vt1.c2)AND(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (vt1.c2 COLLATE BINARY) AND (CAST(vt1.c0 AS NUMERIC))), (((vt1.c1))==((vt1.c2))) COLLATE RTRIM COLLATE NOCASE, (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()), CAST(LIKELIHOOD(vt0.c0, 0.411256731578473) AS NUMERIC) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (((vt1.c0)|(vt1.c2))) AND (NULL)), NULL, ((((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(NULL))) BETWEEN (((vt0.c1)==(vt0.c0))) AND (ABS(vt1.c0))) FROM vt1 WHERE ((((('0.6507594750508836' COLLATE NOCASE)AND(TRIM(DISTINCT NULL))))AND((((0.3495614381191746))>((0.3354876475789844))))));SELECT DISTINCT ((((((((-0.0)AND(((vt1.c2) NOT NULL))))AND((~ (vt0.c1)))))AND(vt0.c0)))AND(CAST(vt1.c0 AS NUMERIC))) FROM vt1 WHERE (NULL) GROUP BY (((vt0.c0 COLLATE NOCASE, ((((((((x'')OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)), (~ (vt1.c1))))>=((vt0.c1 COLLATE NOCASE, ((vt1.c0)LIKE(x'')), (vt1.c2 IN ())))) LIMIT 546569011 OFFSET -2048310951;SELECT (((0.6383145090997118, ((vt0.c0) NOTNULL), CASE WHEN vt1.c2 THEN vt1.c1 END))!=((CAST(vt0.c0 AS TEXT), (('-1638218263') NOT NULL), '-1362209387'))), vt1.c1, CASE WHEN x'' COLLATE NOCASE THEN ((((((((vt1.c1)OR(vt0.c0)))OR('0C')))AND(vt1.c1)))AND(vt1.c1)) END FROM vt1 WHERE (((((-2.18334097E8))>(('1262423086'))) IN ())) GROUP BY (((vt1.c2, vt0.c1, vt1.c1))<=((vt1.c2, vt0.c1, '0.32954656009074823'))) COLLATE NOCASE;SELECT DISTINCT (('') NOTNULL), ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt0.c1 WHEN x'0dfe' THEN vt1.c1 ELSE vt0.c1 END) NOT NULL), ((AVG(vt1.c0))||(vt0.c0 COLLATE BINARY)) FROM vt1 GROUP BY ((((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN '-666021577' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c2 ELSE 'Y##쑈' END)OR(((vt1.c1)||(vt1.c2)))))AND(((((((((vt1.c1)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c2)))) ORDER BY vt1.c1;SELECT ALL (- ('-1615331348')) FROM vt1 ORDER BY ((((x'81ed')OR(((vt0.c0)-(vt0.c0)))))OR(((vt0.c0)+(vt1.c1)))) DESC  NULLS LAST;SELECT DISTINCT (MAX(vt0.c0) IN ()), (vt0.c1 IN (((vt1.c2)+(vt0.c1)))), CAST(json_object(vt1.c1, vt1.c0, vt1.c0, vt0.c0) AS TEXT) FROM vt0 WHERE (((((((0X5841fa1b)OR(0.006752695997283009)))OR(NULL)))<((((0.7219509086746917, ']', x'')) NOT BETWEEN ((x'6bcc', 0.23276163595097954, '(')) AND ((0.8922715375007556, x'', '0.2580949791554137'))))));SELECT DISTINCT x'' FROM vt1 WHERE (CASE WHEN TOTAL_CHANGES() THEN ((NULL)+(x'2390')) WHEN ((NULL) NOTNULL) THEN NULL COLLATE RTRIM WHEN x'' THEN ('R{Qca8' IN (0.29180489847351165, NULL)) END) ORDER BY CAST((- (vt0.c1)) AS BLOB) ASC;SELECT DISTINCT NULLIF(DISTINCT x'', CAST(vt1.c0 AS BLOB)) FROM vt0 WHERE (((((((x'')OR(-262842197)))AND(-1.8921398E9)))OR(CASE '0.20548746584148847'  WHEN NULL THEN 0.05275284269239422 WHEN x'd6d9' THEN -1160429411 WHEN x'd3d6' THEN NULL END)));SELECT DISTINCT UNLIKELY(vt1.c1) FROM vt1 ORDER BY ((vt1.c1 COLLATE BINARY) BETWEEN ((vt1.c0 IN ())) AND (vt1.c2)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)))OR(vt0.c1)))OR(vt0.c0)) IN ()), NTH_VALUE(LIKELY(CASE vt0.c0  WHEN NULL THEN vt0.c0 END), ((vt0.c1) NOTNULL)) OVER (), ((CAST(vt0.c0 AS TEXT)) BETWEEN (CAST(vt1.c0 AS REAL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c2 END)) FROM vt0 WHERE (((((CAST(x'' AS TEXT))OR(NULL COLLATE NOCASE)))AND(TYPEOF(DISTINCT '-2048310951')))) GROUP BY ((((vt0.c1) NOT BETWEEN ('9	') AND (vt0.c0))) BETWEEN ((~ (vt1.c2))) AND (CAST(vt1.c0 AS REAL))) HAVING '851031874';SELECT CASE (- (vt1.c0))  WHEN ((vt1.c0) NOT NULL) THEN json_insert(vt1.c1, vt1.c2, vt1.c1, vt1.c0, vt1.c1) ELSE ((vt0.c1) NOTNULL) END, CASE WHEN CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c1 END THEN ((vt0.c1) NOTNULL) ELSE (vt1.c1 IN (vt1.c2)) END, ((SUM(vt1.c0))<>('')) FROM vt0, vt1; -- 0ms;
SELECT ALL 0.3809596622162279 FROM vt1, vt0 WHERE ((CASE 0.3494813461629813  WHEN 'U''A8' THEN '-688454057' ELSE -949992590 END IN ())); -- 0ms;
SELECT ((CAST(vt1.c2 AS BLOB))<('-99435777')), MAX((vt0.c0 IN ())), TOTAL(CAST(x'' AS INTEGER)) FROM vt1, vt0 WHERE (CASE RTRIM(NULL)  WHEN CAST(0.2933889704078718 AS INTEGER) THEN (('-676531714') BETWEEN ('~)/,6') AND (x'9a63')) END); -- 0ms;
SELECT DISTINCT ((((((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c0)))AND(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))AND(json_extract(vt1.c2, vt1.c2))) FROM vt0 WHERE (((((NULL) NOT BETWEEN (0X6a93915d) AND (NULL))) NOT NULL));SELECT ALL PERCENT_RANK() OVER ( ORDER BY CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c2 END  WHEN (+ (vt1.c1)) THEN (vt1.c1 IN (vt1.c0)) ELSE (vt1.c1 IN ()) END  NULLS FIRST), (+ (HEX(vt1.c2))), AVG((vt0.c1 IN ())) OVER () FROM vt1 LEFT OUTER JOIN vt0 ON CASE WHEN TYPEOF(DISTINCT vt0.c0) THEN vt0.c0 WHEN ((vt1.c1)IS(vt1.c2)) THEN CASE vt0.c1  WHEN vt1.c2 THEN vt1.c1 WHEN vt0.c1 THEN NULL WHEN vt1.c1 THEN vt1.c0 END WHEN ((vt1.c0)%(vt0.c1)) THEN (vt1.c1 IN ()) END; -- 0ms;
SELECT CASE CAST(vt0.c1 AS REAL)  WHEN ((((((((vt1.c2)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c2)))OR(vt1.c1)) THEN LIKELY(vt1.c0) ELSE (+ (vt0.c0)) END, CAST(vt1.c0 AS REAL), CASE (vt1.c1 IN ())  WHEN ((vt0.c0) NOTNULL) THEN (~ (vt0.c1)) ELSE (- (vt1.c0)) END, ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN (ABS(vt1.c2))), 'b#.L' FROM vt1;SELECT DISTINCT CAST((vt1.c1 IN ()) AS NUMERIC) FROM vt1, vt0 LIMIT 1281262469 OFFSET -2005042544; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE (LIKELY((((0.46210752493427243))>=((''))))); -- 0ms;
SELECT DISTINCT (((((vt0.c1)>(vt0.c0))))=(((((vt1.c2))>=((vt0.c1)))))), ((NULLIF(DISTINCT vt0.c1, 0.9283846503595989)) IS FALSE), CASE ((((0xffffffffebb35e1a)AND(vt0.c0)))OR(vt1.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt1.c0 COLLATE NOCASE END FROM vt0 GROUP BY ((((0.5909803774925755) BETWEEN (vt0.c0) AND (vt1.c1))) NOTNULL);SELECT ALL (((vt0.c1 IN ()))/((- (vt1.c1)))), vt1.c1, (~ ((((vt0.c1, vt1.c1, vt1.c0))=((vt0.c0, vt1.c1, vt1.c1))))), ((DATE(vt1.c2, vt0.c1, vt1.c2)) NOTNULL), (((((NULL IN (vt0.c1, vt1.c2)))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END)))AND(((vt1.c0) NOTNULL))) FROM vt1;SELECT DISTINCT (((+ (vt0.c0))) NOTNULL) FROM vt0 WHERE (((((0.30956499711476715) NOT NULL)) BETWEEN (CAST(0.4079884458847196 AS BLOB)) AND ((- (NULL))))) LIMIT -2091233156 OFFSET -610654707; -- 1ms;
SELECT DISTINCT x'' COLLATE NOCASE FROM vt1 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) NOT NULL) FROM vt0, vt1 WHERE ((- (HEX(0.3579274857007081)))); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS REAL)  WHEN ((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt1.c0 IN ()) ELSE ((vt0.c0)AND(vt1.c0)) END FROM vt1;SELECT ((((0.11931149340283331)||(vt1.c2)))/((vt0.c1 IN ()))) FROM vt1, vt0 WHERE ((((CAST('慷z㳨<EC0(''' AS INTEGER)))<>((((((((((NULL)AND('476987500')))OR(249352136)))AND(NULL)))OR(NULL)))))); -- 0ms;
SELECT (COUNT(vt1.c2) IN ((((vt1.c1, vt1.c0, vt0.c1))<((vt0.c1, NULL, vt0.c1))), x'67d2')) FROM vt1 WHERE ((((((0.16467360314519564))<>((NULL)))) IS TRUE));SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN 0x1f590f73 ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)) END FROM vt0 WHERE (((0.4312672156018549)|(NULL)) COLLATE NOCASE) LIMIT -1726673752;SELECT ALL (((+ (vt0.c1)))%(((vt1.c0)LIKE(vt1.c0)))) FROM vt0, vt1 ORDER BY ((vt1.c0) IS FALSE) COLLATE RTRIM  NULLS LAST, CASE (+ (vt1.c0))  WHEN vt1.c0 THEN (vt1.c1 IN (vt1.c1, 0.6133972819149386)) END; -- 0ms;
SELECT ((((vt1.c1)%(vt0.c1)))IS NOT(((vt1.c2) NOTNULL))) FROM vt1 LIMIT -825216393 OFFSET 1920692998;SELECT TRIM(((('-953411640', '-1641257660', vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c2, vt1.c2)) AND (('[myKE⁺	F', vt1.c2, 'JWz4T')))), (((((vt0.c1, vt1.c2, '')) BETWEEN ((vt1.c2, vt1.c0, vt1.c1)) AND ((vt1.c1, vt1.c2, vt1.c2))))&(((vt1.c1)IS NOT(vt1.c2)))), ((((((((((vt0.c0) IS TRUE))AND((vt1.c2 IN ()))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt0.c1)<>(vt0.c0)))))OR(NULLIF(DISTINCT vt1.c2, vt1.c1))) FROM vt0 GROUP BY ((CAST(vt1.c2 AS REAL)) NOT BETWEEN ((('3\nceFy')|(vt1.c0))) AND ((~ (x'1006'))));SELECT DISTINCT ((vt1.c0) BETWEEN (vt1.c1) AND (x'')) COLLATE RTRIM, COUNT(((((vt1.c1)AND(vt1.c2)))OR(NULL))) OVER (), ((TOTAL(vt0.c0))<<(CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)) FROM vt0, vt1 WHERE (((NULL)IS(((((2125225549)OR(x'96d86c9f')))AND(0.9831203604962834))))) GROUP BY ((CAST(vt1.c2 AS BLOB))IS NOT(((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c1)))) HAVING ((CASE WHEN vt1.c0 THEN vt1.c2 END) ISNULL); -- 0ms;
SELECT ((vt0.c0) BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) AND ((vt1.c0 IN (vt0.c1)))), ((((vt0.c0)>>(vt1.c1)))>(((vt1.c1) IS FALSE))), CAST(((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS INTEGER) FROM vt1, vt0; -- 0ms;
SELECT SUM((((vt0.c0))>=((vt0.c1)))) COLLATE NOCASE, FIRST_VALUE(((CAST(vt0.c0 AS TEXT)) BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) OVER (), CAST(vt1.c1 COLLATE BINARY AS INTEGER) FROM vt0 WHERE ((~ (json_quote('mY~'))));SELECT DISTINCT (vt1.c0 IN ()) FROM vt0 WHERE ((('Z%')<<(x'6707'))); -- 0ms;
SELECT ALL vt1.c2 FROM vt0, vt1; -- 0ms;
SELECT ALL CAST((NOT (vt1.c0)) AS INTEGER) FROM vt1 WHERE ((((('1888378373') BETWEEN (0X584a6717) AND (x''))) IS TRUE)); -- 0ms;
SELECT ALL (('476987500' IN (vt1.c2)) IN ()) FROM vt1 WHERE (LIKELY(DISTINCT ((x'')&(0.26532628964882377)))); -- 0ms;
SELECT ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)), (x'' IN ()), LEAD(CASE (((vt0.c1))<>((vt0.c1)))  WHEN ((((vt0.c1)OR(0.7977654206197312)))OR(vt1.c1)) THEN ((((vt1.c1)AND(vt0.c1)))AND(vt1.c1)) ELSE ((vt1.c1) NOT NULL) END, (((vt0.c1) ISNULL) IN (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 END)), ((('-1745010676')) NOT BETWEEN ((((vt1.c1)AND(vt1.c1)))) AND (((vt1.c0 IN (vt0.c0)))))) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1, vt0 NOT INDEXED; -- 0ms;
SELECT ALL (((((vt1.c0)OR(vt0.c1))))>=((((vt0.c1) NOTNULL)))) FROM vt1, vt0; -- 0ms;
SELECT ((((vt1.c2)<=(vt1.c1))) NOTNULL) FROM vt0, vt1 WHERE (NULL) ORDER BY CAST(((vt1.c1) NOT NULL) AS TEXT)  NULLS LAST; -- 0ms;
SELECT ((((vt1.c1)<=(vt1.c0)))<=((vt1.c2 IN ()))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT AVG(0.32705350419230994), (((((vt0.c1, vt1.c1, vt0.c1, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c1, vt1.c2, vt0.c0, vt0.c0, vt1.c1)) AND ((vt0.c1, vt1.c2, vt1.c0, vt0.c1, vt1.c1)))) NOT BETWEEN (vt1.c2 COLLATE RTRIM) AND ((vt0.c1 IN ()))), vt0.c0 FROM vt1;SELECT ALL x'' FROM vt1, vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))&(((vt1.c0) NOT NULL))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE NOCASE FROM vt1 WHERE ((CASE x'4764'  WHEN x'' THEN x'' END IN ())); -- 0ms;
SELECT DISTINCT vt1.c2 FROM vt1; -- 0ms;
SELECT ((COUNT(vt0.c1))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1)))), vt1.c1, (((vt0.c1, CAST(vt1.c0 AS BLOB), vt1.c0))>((CASE WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt0.c0 ELSE vt0.c0 END, vt1.c2 COLLATE RTRIM, CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 END))) FROM vt0;SELECT (vt1.c1 IN (vt1.c2)) COLLATE RTRIM FROM vt0 WHERE ((((NULL)) BETWEEN (('-1572140800')) AND ((((1335211171) ISNULL)))));SELECT DISTINCT TRIM(((((((((vt0.c1)OR(']RPo9*Q\r^')))AND(vt0.c0)))AND(vt0.c1)))OR(NULL))) FROM vt0, vt1 WHERE (CAST(((((((((0.07411728359367842)AND('6E')))OR('-1')))AND(0.3741808411819866)))OR(NULL)) AS NUMERIC)) GROUP BY NULL, (((vt1.c2 IN ()))%(((vt0.c0)|(vt1.c1)))), LIKELIHOOD((vt1.c1 IN ()), 0.14847983679283905); -- 0ms;
SELECT ((vt1.c2)|(vt1.c2)) COLLATE NOCASE, TOTAL('TjI澉0') OVER (), (- ((vt1.c2 IN (vt1.c0, vt1.c1)))) FROM vt1; -- 0ms;
SELECT ALL HEX(DISTINCT COUNT(*)) FROM vt0, vt1 ORDER BY CASE WHEN json_array(vt0.c0, vt0.c1, vt1.c1, vt1.c1) THEN ((vt0.c1)=(vt1.c2)) ELSE (+ (vt1.c1)) END DESC LIMIT -1821160144 OFFSET 912714994; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0)>(vt1.c0)) END FROM vt0, vt1 WHERE (CASE (+ ('1146978910'))  WHEN (NOT ('-551176722')) THEN IFNULL('0.16401951459233444', 0x3dfdbae3) WHEN CASE WHEN 'nQY' THEN '950536159' WHEN 0.8122993545048764 THEN '793609068' WHEN '0.26889638305034236' THEN x'840e' END THEN (('531294877') NOT BETWEEN (x'a85b') AND (0.7112150726294734)) WHEN (0Xffffffffad11e4f9 IN ()) THEN ((x'7fb7')+(1.147549683E9)) END); -- 0ms;
SELECT (~ (((vt1.c0)IS NOT(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT CAST(((vt1.c1)AND(vt0.c0)) AS TEXT) FROM vt0;SELECT SUM((- (vt1.c0))), AVG((vt0.c1 IN ())), json_valid(TRIM(vt1.c0)) FROM vt0, vt1 WHERE (((((x'c63c') NOT BETWEEN (NULL) AND (x''))) BETWEEN ((x'' IN (NULL))) AND ((('J⪠')IS NOT(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))<>(json_array_length(vt1.c2))), 735790205, (((((((vt1.c1)AND(vt0.c0)))OR('y^?'))))<=((((vt0.c0)-(vt0.c0))))) FROM vt1 ORDER BY ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)))OR(CASE vt0.c0  WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c0))));SELECT ((((NULL)|(vt1.c0))) IS FALSE) FROM vt1; -- 0ms;
SELECT ALL ((((0X4af66806) IS FALSE))OR(((x'a504')%(vt1.c1)))) FROM vt0;SELECT NULL FROM vt0, vt1; -- 0ms;
SELECT ALL ((DATE(vt0.c1, vt0.c1, vt0.c1)) NOT NULL) FROM vt1, vt0 WHERE (CASE ((0.03309144687481114) BETWEEN ('2U') AND (0xffffffffb4c0e0a1))  WHEN (NOT (x'')) THEN ((x'')<=(NULL)) WHEN x'' COLLATE NOCASE THEN ((-4.079627E7) ISNULL) WHEN (NOT (x'6c73')) THEN (('1782767510')IS NOT(0xffffffff8dda8f96)) END); -- 0ms;
SELECT AVG(((vt1.c2) IS TRUE)) OVER (), (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))>((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))), ((((vt0.c0)OR(vt1.c2)))>>((NOT (vt1.c0)))) FROM vt0 LIMIT -580271582;SELECT ALL SUM(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 LIMIT -1481948655 OFFSET 1388940451;SELECT ALL x'' FROM vt0 WHERE ((~ (((0X30453a60) BETWEEN (NULL) AND (0.16401951459233444))))); -- 0ms;
SELECT DISTINCT (((vt1.c1, vt1.c1, vt1.c1)) NOT BETWEEN ((CAST(vt0.c1 AS REAL), (+ (vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)) AND ((NULL, ((vt1.c2)<<(vt1.c0)), (('-52871519')GLOB(vt1.c1))))), MAX(-714984951), -406524672 COLLATE NOCASE FROM vt1 WHERE ((((CAST(NULL AS TEXT)))<=((CAST(0.8098945326452819 AS REAL)))));SELECT ((((((vt1.c2)=(vt1.c0)))OR((vt0.c0 IN (vt1.c1)))))AND(0.9045069802438316)) FROM vt1;SELECT DISTINCT GROUP_CONCAT(((vt1.c0)/('vz>*'))) OVER () FROM vt0 WHERE (CAST((('-1694216849') BETWEEN (NULL) AND ('0.9119162084890702')) AS REAL)) GROUP BY 0.22161182621451037;SELECT TOTAL(HEX(vt0.c0) COLLATE NOCASE) OVER (), SUM(vt0.c1), (vt1.c2 COLLATE NOCASE IN ()) FROM vt1 WHERE ((((((x'') NOT BETWEEN (NULL) AND (NULL))))>((CAST(']~' AS INTEGER))))) LIMIT 1594009127;SELECT DISTINCT ((CAST(vt0.c1 AS TEXT)) NOT NULL), ((((('\ y>rf{\}')AND(vt0.c0)))AND(vt1.c2)) IN (vt1.c2)), SUM(((((vt1.c2)OR(vt1.c1)))AND(vt1.c2))) FROM vt1, vt0; -- 0ms;
SELECT ALL CASE TOTAL(vt1.c2)  WHEN 1947078647 THEN CASE vt1.c1  WHEN vt0.c0 THEN 1.14697891E9 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END WHEN ((vt0.c1)|(vt1.c0)) THEN (~ (vt1.c0)) WHEN ((vt1.c0)IS(vt1.c2)) THEN MAX(vt1.c0) ELSE vt0.c1 COLLATE RTRIM END, (((((vt1.c1)-(vt0.c0))))<((vt1.c0))), vt0.c1 COLLATE NOCASE, ((((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)IS(vt0.c1)))), x'', vt1.c0, x'' FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CASE (((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c1)))  WHEN vt1.c2 COLLATE RTRIM THEN x'' ELSE ((((vt0.c0)OR('793609068')))AND(vt1.c1)) END FROM vt1;SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1 WHERE (((CAST('-2090180233' AS TEXT)) BETWEEN (LIKELY('0.04719392730868133')) AND (('0.3809596622162279' IN ())))); -- 0ms;
SELECT DISTINCT AVG(CAST(vt1.c1 AS NUMERIC)) OVER ( ORDER BY ((((vt0.c1)IS(vt1.c2))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (UNLIKELY(vt0.c1))) DESC  NULLS LAST) FROM vt1 WHERE (((CASE x'ab9b500d'  WHEN NULL THEN '-180935388' WHEN '1708375319' THEN NULL WHEN '{mH\r \r/}c' THEN '380268932' ELSE NULL END)=(((0.43357660515209184) BETWEEN ('1177009921') AND (x'b166')))));SELECT ALL ((vt0.c1) BETWEEN (x'') AND (TOTAL(vt1.c1))) FROM vt0, vt1 WHERE ((((((('0.8129089361998582')OR(0.7536010107577198)))AND('1832295723'))) IS FALSE)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1 WHERE (NULL);SELECT DISTINCT ((CASE WHEN vt1.c1 THEN -1879591915 ELSE vt1.c2 END)GLOB(vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE ((((288643445)<<(0.5424904330133669)) IN (x'2fa2' COLLATE NOCASE, ((((-1314129805)OR(2.141612484E9)))OR(NULL))))) ORDER BY ((((((((((vt0.c0)IS(vt1.c1)))OR(((vt1.c2)<>(vt1.c1)))))OR(CAST(vt0.c1 AS TEXT))))OR((- (vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (''))));SELECT DISTINCT (((((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))))=((CASE WHEN vt1.c1 THEN vt1.c2 END))) FROM vt1;SELECT (((((((vt0.c0))>=((vt1.c1))))OR(((vt1.c0)|(vt0.c1)))))OR(((vt1.c0)LIKE(vt1.c2)))) FROM vt0 WHERE ('') GROUP BY CAST(((vt0.c1) IS FALSE) AS BLOB);SELECT DISTINCT CASE WHEN vt1.c2 THEN ((vt0.c1)>(vt0.c0)) WHEN (+ (vt0.c1)) THEN 0.5901614146448918 COLLATE RTRIM WHEN 0.9925007153941854 THEN (((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt0.c1))) ELSE (((vt1.c2, vt1.c0, '-738602098', vt0.c0, vt1.c0, vt1.c1, vt1.c2)) BETWEEN ((vt0.c1, vt0.c0, vt1.c1, vt1.c0, vt1.c1, vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c1, vt1.c1, vt1.c0, vt0.c0, vt1.c1))) END, CASE WHEN (NOT (vt1.c1)) THEN vt0.c1 COLLATE RTRIM ELSE COUNT(*) END, ((((((vt1.c0)OR(vt1.c2)))AND(vt0.c1))) IS FALSE) FROM vt1;SELECT ((COUNT(*))/(CAST(vt0.c0 AS REAL))) FROM vt0, vt1 WHERE (((((CASE WHEN NULL THEN 0.7208854793160253 ELSE x'' END)OR(((NULL)-(0.7990800898189301)))))AND((0.9907075684597172 IN (x''))))); -- 0ms;
SELECT ALL 0.15173793527246004 FROM vt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST(((vt0.c1) ISNULL) AS TEXT)) OVER (), CAST(vt0.c1 AS REAL) COLLATE BINARY, ((((vt0.c1)|(vt0.c0))) IS TRUE) FROM vt0 WHERE (CASE CAST(0X7a45aa3f AS NUMERIC)  WHEN (+ ('-2109885408')) THEN ((NULL) ISNULL) END); -- 1ms;
SELECT DISTINCT (((((('-1314129805')OR(vt1.c2)))AND(vt0.c1)))|(vt0.c0 COLLATE RTRIM)) FROM vt1, vt0 WHERE (((-1822060283) BETWEEN ((('~')IS('Bt>lECgHw'))) AND ((- (8.90082953E8))))) LIMIT -103405237 OFFSET 1201548678; -- 0ms;
SELECT ALL MIN(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1))) FROM vt0 ORDER BY NULLIF(DISTINCT ROUND(vt1.c0, vt0.c1), CASE vt1.c1  WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt1.c2 END)  NULLS FIRST, (((((NOT (vt1.c1)))AND(NULL)))OR((+ (vt0.c1)))) DESC  NULLS LAST, (((vt1.c1 IN ())) NOT BETWEEN (LOWER(vt0.c1)) AND (((vt1.c2)>>(0X24558aec)))) ASC  NULLS LAST;SELECT CAST('1070401194' AS NUMERIC) FROM vt1, vt0 WHERE (((COALESCE('p609', NULL, '1382729147', NULL))OR(((-104151992) NOT BETWEEN (0xffffffffb16be763) AND (NULL))))); -- 0ms;
SELECT (((((vt1.c2)) BETWEEN ((vt0.c0)) AND (('-515438033'))))GLOB(vt1.c0 COLLATE RTRIM)) FROM vt0, vt1 WHERE ('?V2~j'); -- 0ms;
SELECT ALL ((((vt0.c1)<=(vt1.c1))) NOTNULL), ((((+ (vt1.c1))))==((AVG(vt1.c1)))), MAX(((-1.17369868E9)GLOB(vt1.c2)) COLLATE RTRIM) FROM vt1;SELECT ALL (((vt0.c0) BETWEEN (vt1.c2) AND (vt1.c2)) IN (vt1.c1 COLLATE BINARY)), (((vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((vt1.c1))), vt0.c0 FROM vt1 GROUP BY 0.01854653417575869;SELECT DISTINCT ((vt0.c1) NOTNULL) FROM vt1, vt0; -- 0ms;
SELECT ALL LOWER(DISTINCT (((vt0.c1, vt1.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt1.c0, vt1.c2, vt1.c1, vt1.c0)))), 0.9859688062599812 COLLATE RTRIM, ((((vt0.c0 COLLATE NOCASE)OR(0.38847225555700216)))OR(((vt1.c1)*(vt1.c1)))) FROM vt0;SELECT CAST(vt0.c1 AS INTEGER) FROM vt0, vt1 GROUP BY (+ ((vt0.c1 IN ()))); -- 0ms;
SELECT DISTINCT ((vt0.c0)IS(vt0.c0)) COLLATE RTRIM, COALESCE((((vt0.c1, vt1.c2, vt1.c1))!=((vt0.c1, vt1.c2, vt0.c0))), CAST('993000284' AS TEXT)), (+ (TRIM(DISTINCT vt1.c2))), (((~ (vt0.c0)))-(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))), ((COUNT(*)) IS FALSE) FROM vt0 LIMIT -494769279 OFFSET 1757702859;SELECT ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM, CASE vt1.c2  WHEN vt1.c0 THEN CASE vt1.c0  WHEN -1.391336199E9 THEN vt1.c1 END ELSE '' END, CAST(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c2)))OR(vt1.c2)) AS TEXT) FROM vt0 GROUP BY '-743398184' HAVING CASE vt1.c0  WHEN CAST(vt1.c1 AS BLOB) THEN LTRIM(NULL, vt0.c1) ELSE (vt0.c1 IN ()) END LIMIT -1821160144;SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) NOT NULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c2 FROM vt1 ORDER BY ((((x'67a2')AND(((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(((vt1.c1)OR(vt0.c1))))  NULLS FIRST;SELECT ((((vt1.c1)LIKE(vt0.c0)))LIKE(((((vt1.c0)AND(vt1.c1)))OR(vt1.c2)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT((((vt0.c0))<((vt1.c0))) COLLATE BINARY) OVER (), vt1.c0, CASE WHEN STRFTIME(vt1.c1, vt0.c1, vt0.c1, vt0.c1, vt1.c0) THEN ((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END FROM vt1, vt0 WHERE (((((CASE WHEN NULL THEN x'' WHEN 0.6945750389555954 THEN NULL WHEN x'b8f7' THEN NULL END)OR(CAST(x'' AS INTEGER))))AND(CASE 0X512f9e4b  WHEN 0X4af66806 THEN x'591e' WHEN '' THEN '' WHEN x'' THEN x'' END))); -- 0ms;
SELECT DISTINCT '3\nceFy' FROM vt1; -- 0ms;
SELECT DISTINCT CAST(TOTAL_CHANGES() AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COALESCE((~ (vt0.c0)), CAST(vt1.c0 AS TEXT), ((vt1.c0)%(vt1.c2)), (- (vt1.c2))), COALESCE('-1682666189', ((vt1.c1) NOTNULL)), COUNT(*) FROM vt0;SELECT DISTINCT ((((vt1.c2)>(vt1.c0))) NOT BETWEEN (((vt0.c1)/(vt1.c2))) AND (((vt0.c1) NOTNULL))), MIN(ROUND(vt1.c2, vt1.c2)), (~ (((1.388940451E9)IS(vt1.c0)))) FROM vt0 WHERE (COALESCE(DISTINCT LOWER(DISTINCT NULL), (- (0.012271557418192858))));SELECT DISTINCT CUME_DIST() OVER (), 0.9205377529302102, (- ((~ (vt1.c2)))) FROM vt1, vt0; -- 1ms;
SELECT ALL GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c0 END) OVER ( RANGE  CURRENT ROW), ((((vt0.c0)OR(vt0.c1))) NOT NULL), ((((vt1.c1 COLLATE NOCASE)AND(((vt1.c2)<<(vt1.c2)))))AND(vt1.c0 COLLATE BINARY)) FROM vt0 LIMIT 1730117159;SELECT ((((vt0.c0) BETWEEN ('i*r禰\뫿''') AND (vt0.c0))) NOT NULL), CAST(((vt1.c1)AND(-1.682666189E9)) AS NUMERIC), (((((vt1.c1, vt1.c1, vt1.c0))=((vt1.c2, vt1.c0, vt1.c2)))) IS TRUE) FROM vt0;SELECT ALL (- (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)) FROM vt0 WHERE (((((x'587f')IS NOT(NULL)))>((- ('b0L⥋-o-羒')))));SELECT DISTINCT (((x''))==((((vt1.c2)&(vt1.c2))))), CASE WHEN '+gb3ꃜ' THEN ((vt1.c2)<=(vt1.c2)) ELSE (((vt1.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END, (NOT (vt1.c0)), vt1.c0, CAST(TOTAL(vt1.c2) AS BLOB) FROM vt0;SELECT ALL CASE COUNT(*)  WHEN (vt1.c2 IN ()) THEN ((((vt1.c2)OR(vt1.c2)))OR(vt1.c2)) END FROM vt1, vt0 LIMIT -710116316 OFFSET -719833621 UNION SELECT ALL ((vt1.c1) IS TRUE) FROM vt0, vt1 WHERE (((((660497172)<<(0.32880937316417014)))<<(json_valid(0.46071053151849184))));SELECT DISTINCT ((((((vt1.c2)OR(vt1.c0)))AND(vt0.c0))) NOT NULL), ((CAST(vt1.c2 AS INTEGER)) IS TRUE), CHAR(COUNT(*)), ((((((((((vt1.c1)!=(vt1.c2)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))))OR(vt1.c0 COLLATE RTRIM)))OR((((vt0.c0)) BETWEEN ((vt1.c2)) AND ((vt0.c1))))))OR((- (vt1.c2)))), (((((((((- (vt0.c0)))OR(CASE WHEN 0X313920bc THEN vt1.c2 WHEN '-314937112' THEN vt1.c1 WHEN vt1.c2 THEN x'' ELSE vt1.c2 END)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))))OR(((vt0.c1)>(vt1.c1)))))AND(0.6265127312040715)) FROM vt0, vt1 WHERE (((UPPER(DISTINCT NULL)) BETWEEN ((((('-957674074')AND(x'e622eab6')))OR(NULL))) AND ((('-785190500') BETWEEN ('u#') AND (0.19005128170018137))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)!=(vt1.c2)))<=(vt1.c2 COLLATE NOCASE)), COUNT(*) OVER ( ORDER BY (~ (vt0.c1 COLLATE RTRIM))  NULLS LAST), SQLITE_SOURCE_ID() FROM vt0, vt1; -- 1ms;
SELECT DISTINCT ((((vt1.c2)&(vt1.c1))) IS FALSE) FROM vt1; -- 0ms;
SELECT DISTINCT AVG(LIKELY(vt1.c2)), LAG((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((x'62e5') IS TRUE), (~ (vt1.c2)), (vt1.c2 IN ()))) AND ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)), (vt1.c2 IN ()), vt1.c1))), CAST(((vt1.c0)*(vt1.c2)) AS BLOB), 0.285513759021783) OVER (), GROUP_CONCAT(0.26889638305034236) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT NULL, CASE WHEN ABS(vt1.c2) THEN ((vt1.c0) ISNULL) ELSE (vt0.c1 IN ()) END, ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c2))) BETWEEN (((vt0.c1)==(vt0.c0))) AND (CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((vt1.c1)OR(vt1.c1)))AND(vt0.c0))) BETWEEN (((vt1.c1)||(vt1.c1))) AND (((vt1.c1) ISNULL))) FROM vt0, vt1 WHERE (((((x'' IN ()), (((NULL, 0.4602216329293992, NULL)) NOT BETWEEN ((0.707637125761448, x'12ed', 0.7738048689025706)) AND ((NULL, x'', x''))), ((NULL) IS TRUE), (('0.5099296863874582') IS FALSE), '3KRUF'))<=((((x'')>(x'')), (+ (NULL)), ((0.1036817805041188)+(0.30849769472592825)), ((0xffffffffc319731c) ISNULL), ((((1314738092)OR(x'184d')))AND('cT')))))); -- 0ms;
SELECT ALL ((TOTAL(vt0.c0)) NOT NULL) FROM vt1, vt0; -- 0ms;
SELECT UPPER(DISTINCT ''), ((((((((((((((vt0.c1)AND(vt1.c2)))OR('1594009127')))AND(vt1.c2)))AND(vt0.c1)))AND(vt1.c2)))OR(vt1.c2))) BETWEEN (0.6752589302917626) AND (((('U''A8')) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))), x'' FROM vt0 WHERE (((((((((((NULL)AND('.l')))OR(NULL)))OR('1658124376')))OR(0.2572332173176445)))OR((('X畭x{9[N') ISNULL)))) ORDER BY 1.78276751E9  NULLS LAST;SELECT DISTINCT CAST((vt1.c2 IN ()) AS BLOB) FROM vt1, vt0 WHERE (CASE SUBSTR(x'', '1028987055')  WHEN NULLIF(DISTINCT 0Xffffffffbe9211ed, 'y\r') THEN (+ (NULL)) END) ORDER BY (((((vt1.c1)%(vt0.c0))))<=((((vt0.c0) NOTNULL)))); -- 0ms;
SELECT ALL ((json_array_length(vt1.c1, vt0.c1)) NOT NULL), ((((vt0.c0)) BETWEEN ((vt1.c2)) AND ((vt1.c2))) IN ()), (- (((vt0.c0)==(vt1.c2)))) FROM vt0 ORDER BY (((vt1.c0, vt1.c0, vt0.c1)) NOT BETWEEN (((((vt1.c0)) BETWEEN (('-1545147129')) AND ((vt1.c0))), CASE WHEN vt0.c1 THEN vt0.c1 END, ((vt1.c1)>(vt0.c1)))) AND (((((vt1.c2))>=((vt1.c2))), vt1.c0, ((vt1.c2) NOTNULL))))  NULLS LAST;SELECT DISTINCT CAST(COUNT(vt1.c1) AS BLOB), CAST(vt0.c0 AS TEXT) COLLATE BINARY, vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT COUNT(*) OVER () FROM vt1, vt0 WHERE ((((((((((('')AND(NULL)))OR('246062306')))OR(2.46062306E8)))OR(NULL)))<<(x''))); -- 0ms;
SELECT DISTINCT '94959752', vt0.c0, (((COUNT(*)))=(((vt1.c0 IN (vt1.c1, vt1.c2))))) FROM vt0 WHERE (((HEX(DISTINCT '-133103091')) IS TRUE));SELECT ALL ((UPPER(''))+(22186564)) FROM vt1 WHERE (((-1.481948655E9)%(NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT ((('-2004691206')<>(0.5737920641097525))))); -- 0ms;
SELECT SUM(((vt0.c0)OR(vt0.c1))), TOTAL(((vt1.c1)GLOB(vt1.c1))), CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c1 END AS REAL) FROM vt1 WHERE (CAST(CAST(x'' AS TEXT) AS REAL));SELECT ALL vt1.c1 FROM vt1, vt0; -- 0ms;
SELECT ((((((((((vt1.c2) BETWEEN (vt0.c1) AND (vt1.c0)))OR(0.4568351928820188)))OR((- (vt0.c1)))))AND(vt1.c2 COLLATE NOCASE)))AND(((NULL)LIKE(vt1.c1)))), (- (CAST(vt1.c2 AS INTEGER))), (((((vt0.c1, x'', '.磧'))==((NULL, vt0.c0, vt1.c1)))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) FROM vt0, vt1 WHERE (TYPEOF(CASE NULL  WHEN NULL THEN 0X6b875124 WHEN 0.060918349713343756 THEN '_o' WHEN 873792829 THEN 'Cx8्c^,v' END)); -- 0ms;
SELECT TYPEOF(CAST(vt0.c0 AS REAL)) FROM vt0 WHERE (((((((1721736000) IS FALSE))OR(ABS(DISTINCT 0.3265165122624172))))OR((('jj')%(''))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)&(vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c1))  WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c0) IS TRUE) WHEN ((vt1.c2)*(vt0.c0)) THEN ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt0.c1)) WHEN NULLIF(DISTINCT vt0.c0, vt1.c1) THEN MAX(vt0.c1) END, (~ ((vt0.c1 IN ()))), ((((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c1)))OR(0.03663002222575695)))AND(vt0.c0)))OR(vt0.c1)))OR((~ (vt1.c0)))) FROM vt1;SELECT DISTINCT (COUNT(vt1.c0) IN (((vt1.c2) ISNULL))), NTH_VALUE((((vt1.c1)) BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((((vt1.c2)*(vt1.c0))))), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))OR(CASE vt1.c2  WHEN vt1.c2 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) OVER (), CUME_DIST() OVER () FROM vt1 WHERE ((~ (((NULL) IS TRUE))));SELECT CASE WHEN 0.8438917077766068 THEN (NOT (vt1.c2)) WHEN (vt1.c0 IN (vt1.c2, vt1.c2)) THEN (((vt1.c0))<=((vt0.c1))) WHEN CAST(vt1.c2 AS NUMERIC) THEN (vt1.c0 IN ()) WHEN vt1.c2 COLLATE BINARY THEN (('0.30849769472592825')>=(0.2938040668771156)) WHEN (vt0.c0 IN (vt0.c1)) THEN LOWER(vt0.c1) ELSE ((('-230810676', '-0.0', vt1.c0))>=((vt1.c0, x'2659', vt0.c1))) END FROM vt0;SELECT ALL ((UNLIKELY(DISTINCT vt0.c0)) ISNULL) FROM vt1 WHERE ((load_extension('', 0.3758289509816606) IN ()));SELECT DISTINCT '', CUME_DIST() OVER (), AVG(SQLITE_SOURCE_ID()) FROM vt1 LIMIT 476987500 OFFSET 613689748; -- 0ms;
SELECT TOTAL(((vt1.c1)GLOB('0.46210752493427243'))) FROM vt0 WHERE ('');SELECT DISTINCT ((((vt1.c1)GLOB(vt1.c1)))-(((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c2)))) FROM vt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt1.c2 END) IS FALSE) FROM vt1;SELECT DISTINCT ((((vt0.c1) NOTNULL))IS NOT((vt0.c0 IN (vt1.c1, vt1.c2)))) FROM vt0, vt1 WHERE (((0.8966332791360683) NOT BETWEEN (CASE 0.9778705432147544  WHEN x'4263' THEN '0.560762335812345' WHEN '.愞' THEN x'' WHEN 0.6066109200724727 THEN '-1465348744' END) AND (((x'7d5cb7ea')OR(NULL))))); -- 0ms;
SELECT DISTINCT ((((CAST(vt1.c1 AS NUMERIC))AND((vt1.c2 IN ()))))OR(vt1.c0)), PERCENT_RANK() OVER (), ((COALESCE(vt0.c1, vt1.c2)) IS TRUE) FROM vt1;SELECT DISTINCT (((~ (vt1.c0))) BETWEEN (x'') AND (CAST(vt0.c1 AS INTEGER))), (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END))), SUM((((vt1.c1))<((vt0.c0)))) FROM vt1, vt0 EXCEPT SELECT ALL CASE WHEN x'' THEN vt0.c1 WHEN 'PM' THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE, TRIM(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c2))), (NOT ((vt1.c0 IN ()))) FROM vt0 WHERE (CASE WHEN ((((0.8211973254097772)AND('251719258')))OR(0.9902843192733013)) THEN 0.692666542734146 ELSE UNLIKELY(DISTINCT NULL) END) GROUP BY (((((-2020357097) NOT BETWEEN (vt1.c0) AND (vt0.c1))))<=((((vt1.c2)&(vt0.c0))))), (((+ (vt0.c1))) NOT BETWEEN ((+ (vt1.c2))) AND (((vt0.c0) NOTNULL))), (vt1.c1 IN ()) COLLATE BINARY;SELECT DISTINCT CUME_DIST() OVER () FROM vt1, vt0 LIMIT 1045916653; -- 0ms;
SELECT ALL x'18a6', ((((vt1.c1)-('145164837')))/(((((((((0.9949952095135584)AND(NULL)))OR(0.692666542734146)))OR(vt0.c1)))OR(vt0.c0)))), -1399442894 FROM vt0;SELECT DISTINCT (('774247779')|(GROUP_CONCAT(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((((0.041929144054276724, vt1.c2, vt0.c0, vt1.c2, vt1.c2))<((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt1.c2))) AS TEXT), x'', NTH_VALUE(((((vt1.c0) IS FALSE)) NOT NULL), ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(((((vt0.c1)AND(vt1.c1)))AND(vt0.c1))))) OVER () FROM vt0, vt1 WHERE (CASE 'cT'  WHEN '0.04719392730868133' THEN '268956651' WHEN 0.0 THEN 0.6872768812528747 WHEN x'' THEN NULL WHEN NULL THEN x'' WHEN 0xffffffffd8b518a5 THEN x'' END COLLATE RTRIM); -- 1ms;
SELECT DISTINCT 0.523492605183629, GLOB((('1201548678')LIKE(vt1.c1)), vt1.c0 COLLATE RTRIM), GROUP_CONCAT((((vt1.c2, vt0.c0, vt1.c1)) BETWEEN ((vt1.c0, vt0.c1, vt1.c2)) AND ((vt1.c0, vt1.c1, vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT COUNT(*) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c1)) AS INTEGER) FROM vt0, vt1 WHERE (((CAST(NULL AS INTEGER)) NOT NULL)); -- 0ms;
SELECT ALL ((((((vt1.c2, vt0.c1, vt1.c0))>=((vt0.c1, vt0.c1, vt1.c0)))))>=((MIN(vt1.c1)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CASE (((NULL)) NOT BETWEEN ((0.8333487544299435)) AND (('')))  WHEN CASE WHEN NULL THEN NULL END THEN CASE WHEN '2093864291' THEN 0.52432166891299 ELSE '' END ELSE '' COLLATE BINARY END) LIMIT -541376990 OFFSET -957054625; -- 0ms;
SELECT ALL vt1.c0 FROM vt0 WHERE (CASE ((0.2855072179127862) BETWEEN ('gq,''') AND (0.6161427742706682))  WHEN x'' COLLATE NOCASE THEN (NOT (x'd247')) ELSE 890082953 END);SELECT ALL ((vt0.c0 COLLATE RTRIM) BETWEEN ((NOT (vt1.c1))) AND ((vt0.c0 IN (vt1.c0)))) FROM vt1, vt0 WHERE (CASE NULL  WHEN CASE WHEN NULL THEN NULL END THEN ((((1.757702859E9)AND(x'')))OR(0.12031903336088201)) END); -- 1ms;
SELECT COUNT(((-582505459) NOT NULL)), (NOT (((vt0.c0)>(vt0.c0)))), ((((vt1.c0)IS NOT(vt1.c2))) ISNULL) FROM vt1, vt0 WHERE ((((IFNULL(x'f3ed', x'')))>=((CAST(1189453882 AS INTEGER))))); -- 1ms;
SELECT DISTINCT ((0X17415ba9) ISNULL) FROM vt0 WHERE ('') LIMIT 531294877; -- 0ms;
SELECT DISTINCT vt1.c2, ((CASE WHEN vt1.c1 THEN '565268193' ELSE vt1.c0 END) BETWEEN (NULL) AND (vt1.c2 COLLATE RTRIM)), CAST((NULL IN ()) AS BLOB) FROM vt1, vt0; -- 0ms;
SELECT (((vt0.c1, vt1.c0, vt1.c2, vt0.c1, vt1.c2)) BETWEEN ((vt0.c1 COLLATE RTRIM, CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END, TOTAL(vt0.c0), ((vt1.c2)||(vt1.c1)), vt0.c0)) AND (((+ (vt0.c0)), ((vt0.c0)OR(vt1.c2)), ((vt0.c0) ISNULL), ((((vt1.c1)OR(vt1.c2)))AND(vt0.c0)), (('-857045713') BETWEEN (0.7371053858382556) AND (vt1.c2))))) FROM vt1 WHERE (HEX(DISTINCT (NULL IN ())));SELECT DISTINCT (- (COUNT(*))) FROM vt1; -- 0ms;
SELECT DISTINCT (((+ (vt0.c1)))&(UNLIKELY(DISTINCT vt1.c2))), CAST(((vt1.c0)<=(vt1.c1)) AS BLOB), (((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c2))))GLOB(((((vt0.c1)OR(vt1.c1)))OR(vt1.c1)))) FROM vt0;SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((('1714012513') NOT BETWEEN (vt1.c0) AND ('946130798')), (vt1.c0 IN (vt0.c1, vt0.c1)), LIKE(vt1.c2, '[m', 'k'))) AND ((SQLITE_VERSION(), (~ ('0.5099296863874582')), ''))) FROM vt0 WHERE (((DATETIME('\no|珋eW*2', x'a7ff6b9c', '1986109055')) NOTNULL));SELECT DISTINCT COUNT(((vt1.c0)==(vt1.c0))) OVER (), ((MAX(vt0.c0))IS(UPPER(''))), (CAST(vt1.c1 AS NUMERIC) IN ()) FROM vt0;SELECT DISTINCT ((((((((((vt0.c1)AND(vt0.c0)))AND(vt1.c2)))AND(vt1.c0)))OR('')))%(vt0.c1)), ((COUNT(NULL)) BETWEEN (((vt0.c0) IS FALSE)) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), ((vt0.c0 COLLATE NOCASE)IS(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c2)))) FROM vt0 WHERE ((((+ (0.41278019990279824))) IS TRUE)) ORDER BY (~ ((NOT (vt1.c0))))  NULLS LAST;SELECT DISTINCT ((((+ (x''))))<(((((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0)))))), CAST(COUNT(vt0.c1) AS TEXT), CUME_DIST() OVER () FROM vt0, vt1; -- 0ms;
SELECT CAST(COUNT(*) AS REAL), (+ (CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END)), COUNT((vt1.c2 IN ())) OVER () FROM vt1 WHERE ((+ ((NOT (0.7232748505972014)))));SELECT ALL ((COALESCE(DISTINCT vt1.c2, vt0.c0)) NOT NULL) FROM vt0 WHERE (((UPPER(0.43934687427045527))&(((0x659ce484)<=(x'')))));SELECT CAST(((((vt1.c1)AND(vt1.c1)))AND(vt1.c2)) AS REAL) FROM vt0, vt1 NOT INDEXED LIMIT -198327023 OFFSET 446327645; -- 1ms;
SELECT DISTINCT SUM(((vt0.c1) BETWEEN (vt1.c2) AND (vt1.c2))) FILTER(WHERE CAST(CASE WHEN vt0.c1 THEN vt1.c1 ELSE vt0.c0 END AS REAL)) OVER ( ORDER BY (NOT (vt1.c2 COLLATE NOCASE)) DESC) FROM vt0, vt1 WHERE (((0Xffffffff836a6177 IN (x'b765')) IN ())) ORDER BY vt1.c0  NULLS FIRST, CASE WHEN CASE vt1.c2  WHEN x'' THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN ((vt1.c2)>=(vt0.c0)) WHEN UPPER(vt0.c1) THEN ((vt1.c2)+(vt0.c0)) WHEN ((vt1.c1) NOTNULL) THEN CAST(0.5875731482966103 AS REAL) END  NULLS LAST; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c2 ELSE vt0.c1 END)<=(vt0.c1)), CUME_DIST() OVER (), CASE vt1.c1  WHEN vt1.c2 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 END COLLATE NOCASE FROM vt0 WHERE ((- ((+ (0.06362562322718135)))));SELECT DISTINCT COUNT(*) OVER (), ((((IFNULL(NULL, vt1.c0))AND(HEX(vt0.c0))))OR(NULL)), (']' IN ()) FROM vt1 WHERE (CAST(((NULL)||(x'')) AS INTEGER)) ORDER BY CASE WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)) THEN 1146978910 WHEN CAST(vt0.c0 AS NUMERIC) THEN (((vt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c2))) THEN vt1.c2 WHEN vt0.c0 THEN ((vt1.c1)-(vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c2)))AND(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)) THEN ((vt0.c0) ISNULL) END DESC  NULLS LAST, ((x'bdd3') IS FALSE)  NULLS LAST;SELECT DISTINCT CAST(vt1.c0 AS REAL) FROM vt0, vt1 WHERE (((('~tFpat㟳Q', '611720971', 0.8804141057342196, x'', x'db88')) BETWEEN (((('')OR(x'')), ((('', -1892139800, NULL))>=((0.40596758580005365, 0.948314273534254, NULL))), (((3.36877242E8)) BETWEEN ((0.560762335812345)) AND ((x'cf9d'))), NULL COLLATE BINARY, ((1.98726242E9)OR(NULL)))) AND ((CAST(NULL AS BLOB), (('-606895299')-(x'')), CAST('_櫋XUV	{D' AS TEXT), TRIM(DISTINCT NULL), ('2002653791' IN (0x9af0453)))))); -- 0ms;
SELECT (- (CASE vt1.c0  WHEN vt1.c2 THEN -2099162879 WHEN 0.026505613880365875 THEN vt0.c0 WHEN vt1.c1 THEN NULL ELSE vt0.c0 END)) FROM vt1 WHERE ((~ (((x'')<<(NULL)))));SELECT ALL vt1.c2 FROM vt0, vt1 LIMIT 1167241238 OFFSET -334223149; -- 0ms;
SELECT DISTINCT LOWER(vt0.c0) COLLATE RTRIM FROM vt0 WHERE (CAST((('') IS FALSE) AS TEXT)); -- 0ms;
SELECT (((GLOB(vt1.c1, vt1.c2)))>=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c2 END))), ((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c2 END) IS TRUE), ((((NULL)AND(vt1.c2))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))), '368907544', vt0.c1 FROM vt1 WHERE ((~ (CAST(x'' AS REAL))));SELECT DISTINCT TYPEOF((vt1.c1 IN ())) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((MAX(vt0.c0))AND(TOTAL(vt1.c2))))AND(TIME(vt1.c1, vt0.c0, vt1.c2))))OR(CASE WHEN NULL THEN vt1.c2 ELSE vt1.c1 END)))AND(0.9907247183774242)), ((((((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)))AND((vt1.c2 IN ()))))OR(AVG(vt0.c0))), ((((vt1.c2)%(vt0.c1)))>>((vt0.c0 IN (vt1.c0)))) FROM vt0 WHERE (((NOT ('1986109055')) IN (('s	a2l' IN (0.11680414165722419)))));SELECT DISTINCT (((vt0.c1)) BETWEEN (((((vt1.c1))==((vt1.c0))))) AND ((((vt1.c0)OR(vt1.c2))))), ((vt1.c0)<((NOT (NULL)))), ((((vt1.c0)OR(MIN(''))))OR((((vt0.c1))>((vt1.c1))))) FROM vt0, vt1 WHERE (((((((0.4582570170378466)GLOB('2004058302')))OR(((x'')&('gVଁ7j?9m~')))))OR((((1.594009127E9)) NOT BETWEEN ((-628042733)) AND ((NULL)))))) LIMIT -1993753745; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (0.12806849145902321))) AND (NULL)) FROM vt0 WHERE (CAST((('')>=(0.5328806392612339)) AS NUMERIC)) LIMIT -1167648479 OFFSET 829509906;SELECT DISTINCT vt0.c0 FROM vt1 NOT INDEXED, vt0; -- 0ms;
SELECT ALL CAST(((vt1.c0)||(vt1.c1)) AS BLOB), (((vt1.c0)!=(vt1.c0)) IN ()), ((((vt0.c1) IS FALSE)) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) AND (((vt0.c1)/(vt0.c0)))) FROM vt1 WHERE (((CASE 2141612484  WHEN -326383852 THEN 1.101914524E9 ELSE 0.9289607911474531 END) NOTNULL));SELECT DISTINCT ((vt1.c2 COLLATE BINARY)<(CASE WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN 0.6500686195209001 END)), CAST((((((((('Dc')OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))OR(x'91ea')) AS NUMERIC), CAST((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))) AS INTEGER) FROM vt1 WHERE (((((1916002184) IS FALSE))<(LTRIM(NULL, -1024107135))));SELECT DISTINCT CAST(LOWER(vt1.c0) AS TEXT) FROM vt1; -- 0ms;
SELECT ALL ((((vt0.c1)<=(vt1.c1)))>=((vt1.c0 IN ()))), (((vt0.c1 IN ())) IS FALSE), 'bA' FROM vt0, vt1 WHERE (CASE x'' COLLATE NOCASE  WHEN (+ ('1201548678')) THEN SQLITE_COMPILEOPTION_GET(x'') END); -- 0ms;
SELECT DISTINCT (((+ (vt0.c1))) BETWEEN (MIN(0.14623413637976035)) AND (((vt1.c2) IS TRUE))) FROM vt0 ORDER BY CAST(MIN(vt1.c0, vt1.c2) AS TEXT) DESC  NULLS FIRST, CAST(((((vt1.c1)OR(vt1.c1)))AND('-540682893')) AS INTEGER)  NULLS FIRST;SELECT TOTAL((vt0.c1 IN ())) OVER () FROM vt1 WHERE (((('wBB<Pj_x[') BETWEEN ('((lm}9r''') AND ('1388940451')) IN ())); -- 0ms;
SELECT DISTINCT ((((((((vt0.c1)AND(vt1.c0)))OR('50 ')))AND(((vt0.c1) IS TRUE))))AND(MIN(vt0.c1))) FROM vt0 WHERE (CASE WHEN ((x'') NOTNULL) THEN (~ (x'')) WHEN ((x'b371')+(x'9c0b')) THEN NULL COLLATE RTRIM WHEN (((x'90dd', x'', x'', x'', 'S~', NULL, x''))<((x'', NULL, 0.6959546987547485, x'', '-618493385', x'', NULL))) THEN CASE WHEN '' THEN 0.47000435934979934 ELSE x'' END ELSE LIKELY(DISTINCT x'') END) ORDER BY (((((vt0.c0))>=((vt1.c2)))) NOT BETWEEN ((vt1.c0 IN ())) AND (vt1.c2 COLLATE BINARY))  NULLS LAST;SELECT (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1) BETWEEN (vt1.c2) AND (vt1.c1))))) FROM vt0 WHERE (((+ (0.3934273404470867)) IN ()));SELECT ALL (vt0.c1 IN ()), NTILE((('iX2S')<<(CAST(vt0.c1 AS INTEGER)))) OVER (), (+ (vt1.c0 COLLATE BINARY)) FROM vt0, vt1 WHERE (CAST(((NULL) NOT NULL) AS INTEGER)); -- 1ms;
SELECT DISTINCT MIN(CASE WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c1 END) FROM vt1 ORDER BY x'';SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))OR(HEX(DISTINCT vt1.c2))))OR((((vt1.c0)) BETWEEN ((vt1.c2)) AND ((vt1.c1))))) FROM vt0, vt1; -- 0ms;
SELECT ((((((vt0.c1)AND(vt1.c1)))OR(vt1.c1))) NOTNULL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)|(vt0.c1))  WHEN highlight(vt1.c2, vt1.c1, vt0.c1, vt1.c2) THEN ((vt1.c2)*(vt1.c2)) END, vt1.c0, ((((((vt1.c2)AND(vt1.c0)))OR(vt1.c2))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)), CAST(((vt0.c1) BETWEEN (x'') AND (vt0.c1)) AS BLOB), ((vt1.c1)||(vt1.c2)) COLLATE BINARY FROM vt0, vt1 ORDER BY 0x47d5c4c  NULLS LAST;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((vt0.c0) NOTNULL)) AND ((((vt0.c1))>((vt1.c2))))) FROM vt1, vt0 WHERE ((((0.10562929747944638)GLOB(0.3883365032870436)) IN ())); -- 0ms;
SELECT DISTINCT vt0.c0, ((vt0.c1)+(vt1.c2)) COLLATE NOCASE COLLATE NOCASE, '' FROM vt1;SELECT (((SUM(vt1.c1), (+ (vt1.c2)), CAST(']~' AS BLOB)))=((((vt0.c0)>(vt0.c1)), CAST(vt0.c1 AS TEXT), MIN(vt0.c0)))), SUM((((vt0.c0, vt1.c0, vt0.c0))=((vt1.c2, vt1.c2, '')))) OVER (), LEAD((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), LIKELIHOOD(DISTINCT vt0.c1, 0.5250866987742754), (((vt0.c1))<>((vt0.c1))))) AND (((~ (NULL)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c1))))), vt0.c0, (((+ (vt0.c0))) NOT BETWEEN ((((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))<=((vt0.c1, x'', vt0.c0, 'd{~ꄺ', vt0.c0)))) AND (LTRIM(vt0.c1)))) OVER ( ORDER BY x''  NULLS LAST), (((- (vt1.c0)))==(ABS(''))), COALESCE(vt0.c0 COLLATE RTRIM, ((vt0.c1)+(vt0.c1)), ((vt1.c0)!=(vt0.c0)), (((((((('-2084203837')OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))) FROM vt0 NOT INDEXED;SELECT DISTINCT (NOT ((~ (vt1.c1)))) FROM vt0;SELECT DISTINCT (((vt1.c1))==((vt0.c0))) COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))IS NOT(COUNT(*))), CASE (NOT (vt1.c0))  WHEN ((vt0.c0)%(vt0.c0)) THEN LIKELIHOOD(DISTINCT vt0.c1, 0.04765038856976733) ELSE 'j' END, MAX('-1521822481') FROM vt1 WHERE (((((NULL)||('q316'))) NOTNULL));SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((('0.8272443126263741' COLLATE NOCASE)AND(CASE NULL  WHEN x'' THEN 'X' WHEN '852806079' THEN x'' WHEN 0.4216295627888794 THEN '-151558255' WHEN 0Xffffffffc18f2328 THEN '' WHEN -314100066 THEN 0.29157116544152084 END))); -- 0ms;
SELECT ALL ((((vt1.c2)AND(vt1.c2)))OR(vt1.c0)) COLLATE BINARY FROM vt0, vt1 WHERE ('-1712014817') LIMIT 1835395724 OFFSET 833848085; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL))<(((0.06233421465947786) BETWEEN (vt0.c1) AND (vt0.c1)))), 'r䈑KL', ((LOWER(vt1.c2)) NOT BETWEEN (TOTAL_CHANGES()) AND (vt0.c1)) FROM vt0 WHERE ((((NOT (x'2e24'))) NOTNULL));SELECT DISTINCT ABS(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))), ((((vt1.c0 IN ()), 0.47975780647173405 COLLATE BINARY, ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c0)), (+ (vt0.c1)), vt1.c0 COLLATE RTRIM))<>((((vt1.c1)<(vt1.c1)), NULL, PRINTF(vt0.c1, x'', vt1.c1), ((vt0.c1) NOT NULL), TOTAL(vt0.c1)))), CAST(((vt1.c0)==(vt1.c0)) AS INTEGER) FROM vt0, vt1 GROUP BY 0.8222208627173625 HAVING ((((LOWER(''))OR(TOTAL(vt1.c0))))OR(((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt1.c2)))); -- 0ms;
SELECT ALL '-1568011205' FROM vt1 WHERE (CASE WHEN 'P5O+''' THEN 0.34095677474028996 WHEN '-1247915860' THEN '0.15881149710639042' WHEN x'bbec' THEN '''*a' ELSE '0.523492605183629' END COLLATE NOCASE); -- 0ms;
SELECT x'' FROM vt0; -- 0ms;
SELECT ALL SUM(SUM(((vt0.c0) NOT NULL))) FROM vt1, vt0 WHERE (CAST('h|g}' AS INTEGER) COLLATE NOCASE);SELECT COUNT(CAST(vt0.c0 AS REAL)) FROM vt1, vt0 WHERE (((NULL COLLATE RTRIM)<<(CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL (((((((((- (vt1.c1)))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))))OR(((vt0.c1) IS TRUE))))AND(((vt1.c2)GLOB(vt0.c0)))))OR(((vt1.c0)<(vt1.c1)))), ((((COUNT(*))AND(vt0.c0)))AND(((vt0.c0)>=(vt1.c1)))), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS REAL))) AND ((CASE vt0.c1  WHEN vt1.c2 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c2 WHEN x'8011' THEN vt0.c0 END))) FROM vt1;SELECT DISTINCT GROUP_CONCAT(880672929) OVER () FROM vt0, vt1 WHERE ((~ (((((((((x'')AND('W]Nlj')))OR('')))OR(x'')))AND('0.32954656009074823'))))); -- 0ms;
SELECT ((((((((((vt0.c1)IS NOT(vt1.c1)))AND(HEX(vt1.c2))))OR(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))AND('gUxjvGAdz')))OR(vt0.c0 COLLATE NOCASE)) FROM vt0;SELECT (NULL IN ('H6')) FROM vt0, vt1; -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) COLLATE RTRIM COLLATE NOCASE FROM vt1 WHERE ((((0.3597222058707019 IN ())) BETWEEN (NULL COLLATE BINARY) AND (CAST(x'b6fe9c98' AS BLOB))));SELECT LEAD(((x'')>=(vt1.c0)) COLLATE NOCASE, MAX(((vt1.c2)&(vt1.c0)), (((vt1.c0))<((vt1.c2))), ((((vt1.c1)AND(vt1.c0)))AND(vt1.c2)), ((vt1.c2)IS NOT(vt1.c2))), json_valid(CASE WHEN vt1.c2 THEN vt1.c0 ELSE x'' END)) OVER (), CASE ((vt0.c1)|(vt0.c0))  WHEN (((vt1.c1))<((vt1.c1))) THEN 0X76619e7f ELSE ((vt1.c2) NOTNULL) END, COUNT(*) OVER () FROM vt1 WHERE (CAST((((x''))<>((NULL))) AS TEXT)) GROUP BY (('1217603776') NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt1.c1))) AND (((vt1.c2) NOTNULL))) HAVING ((CAST(vt1.c0 AS BLOB))>>(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END));SELECT ALL (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((vt0.c0))) FROM vt0, vt1 WHERE (CASE WHEN (('-1498097569') NOT BETWEEN (x'9a30fac9') AND (3.36877242E8)) THEN ((NULL) IS FALSE) WHEN (+ ('1778524411')) THEN NULL WHEN (~ (0.9038175144823782)) THEN HEX(DISTINCT x'4662') ELSE ((NULL)+('-1991108941')) END); -- 0ms;
SELECT DISTINCT vt1.c2 FROM vt0, vt1 WHERE ((- (((((NULL)AND(0.39471925982756784)))AND(NULL))))); -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE ((((((NULL)<=(NULL))))!=((((((NULL)OR(NULL)))OR('277007984')))))) LIMIT 1009932350; -- 0ms;
SELECT CAST(CAST(vt1.c2 AS REAL) AS INTEGER) FROM vt0;SELECT ALL ((x'')%(AVG(vt1.c0))) FROM vt0, vt1; -- 0ms;
SELECT ((((vt1.c1)LIKE(vt0.c0)))*(((vt0.c1)GLOB(vt1.c2)))), PERCENT_RANK() OVER ( GROUPS  CURRENT ROW), LAST_INSERT_ROWID(), SUM(((vt0.c0) ISNULL)) OVER (), HEX(((vt0.c0) IS TRUE)) FROM vt1, vt0; -- 0ms;
SELECT ALL IFNULL((((('0.5812150357651189')OR(vt1.c1)))OR(vt1.c2)), TOTAL(vt1.c2)) FROM vt1, vt0 WHERE (CAST((- (0.7003650940398743)) AS BLOB)); -- 0ms;
SELECT ALL ((ABS(DISTINCT vt1.c0))-(((vt0.c1) ISNULL))), DENSE_RANK() OVER (), (+ ('\n[V9')) FROM vt0 WHERE (((0.27990334850051446) NOT NULL)) ORDER BY (('0.9283846503595989' COLLATE NOCASE) IS TRUE) DESC  NULLS FIRST LIMIT 1778664597;SELECT ALL (((vt1.c2)) NOT BETWEEN ((((((((((vt1.c2)AND(vt1.c2)))AND(vt0.c1)))OR(vt0.c0)))OR(vt1.c2)))) AND ((vt1.c1 COLLATE BINARY))) FROM vt0;SELECT CAST(json_array(vt1.c1, vt1.c2) AS BLOB) FROM vt0, vt1 WHERE (((CASE WHEN '/x0Y' THEN '-1481948655' WHEN x'' THEN '-1682666189' WHEN x'' THEN 0xffffffffd91a4229 ELSE 0.8813147801574346 END) ISNULL)); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c1)))&(QUOTE(x''))) FROM vt0;SELECT DISTINCT '{/' FROM vt1 WHERE ((((0.316606456516776)) NOT BETWEEN ((((NULL)/(NULL)))) AND ((CAST(0.5155879798993268 AS NUMERIC))))); -- 0ms;
SELECT DISTINCT (vt1.c0 COLLATE NOCASE IN ()), CAST(((vt0.c1)&(vt1.c2)) AS TEXT), ((vt1.c1 COLLATE NOCASE) IS TRUE) FROM vt0 WHERE (((((0.012903266630791332)LIKE(0.4095023422877304)))|(((']Rঞ')AND(NULL)))));SELECT ((CASE WHEN '*\r' THEN 8.51031874E8 ELSE vt0.c1 END) NOTNULL), '1257662470', CASE WHEN (vt1.c0 IN ()) THEN ((vt1.c1)<>(vt1.c1)) WHEN (- (vt1.c0)) THEN CASE vt0.c0  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c0 END WHEN vt1.c2 THEN (('-1001742793') IS TRUE) END FROM vt1;SELECT ALL CASE WHEN vt1.c2 THEN COUNT(vt0.c1) WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c1)) WHEN ((vt0.c1) IS FALSE) THEN (~ (vt0.c1)) END FROM vt0;SELECT ALL (- (CAST(vt1.c1 AS NUMERIC))), SUM(0.8899689209312858) OVER (), vt0.c0 FROM vt1, vt0 WHERE (CAST(CAST('-1991108941' AS NUMERIC) AS INTEGER)); -- 0ms;
SELECT ALL ((vt0.c0)>(vt0.c0)) COLLATE BINARY FROM vt0 NOT INDEXED, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((SUM(vt0.c0)))) FROM vt0 WHERE ((((0.34922054547258685)<<(x'fac2')) IN ()));SELECT ALL (((~ (vt1.c2))) NOT BETWEEN (CASE WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c2 END) AND (vt0.c1)), MIN(vt0.c1), ((((vt1.c1) IS FALSE)) NOTNULL) FROM vt0, vt1 WHERE ((((('')-(NULL)))<((((((((('-1892139800')AND(NULL)))OR(NULL)))OR(x'b3d6')))OR(NULL))))); -- 0ms;
SELECT DISTINCT TIME(((vt1.c1) NOT BETWEEN (x'2b35') AND (NULL)), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (NOT (vt1.c2)), ((vt0.c1)<(vt1.c2)), (((vt0.c0)) BETWEEN ((0.7246104089486544)) AND ((vt1.c1)))) FROM vt0, vt1 WHERE (CASE (('476987500')*('0磧+௣1H듏'))  WHEN ((NULL)LIKE(x'6008')) THEN ('' IN ()) END); -- 0ms;
SELECT ALL CAST(vt1.c0 COLLATE BINARY AS TEXT) FROM vt0 WHERE ((((((('.^7<%0J%')OR(x'')))OR(0.4154961829688789)))|((((NULL))>=((NULL))))));SELECT ALL (((vt0.c0) NOT NULL) IN ()), vt0.c0, ((((vt1.c0) ISNULL))IS((~ (vt1.c1)))), -603323471, ((vt1.c1 COLLATE NOCASE)<>(((vt1.c0) BETWEEN (vt1.c1) AND (vt0.c1)))) FROM vt0;SELECT DISTINCT (NOT (((((vt1.c2)AND(vt0.c1)))AND(vt0.c0)))) FROM vt1, vt0 WHERE (CASE CAST(NULL AS INTEGER)  WHEN ((NULL)<(NULL)) THEN (('')>('Go燮\r쿈 )')) END); -- 0ms;
SELECT (((((vt1.c2, '-1233011262', vt1.c2, vt1.c1, vt0.c1))>((vt0.c1, vt1.c2, vt1.c2, vt1.c2, vt1.c0)))) BETWEEN ((NOT ('362532316'))) AND (RTRIM(vt0.c0))) FROM vt0, vt1 WHERE (CASE ((x'') NOT NULL)  WHEN ((x'') NOT BETWEEN (x'') AND (x'0b46')) THEN (('') NOT BETWEEN (NULL) AND ('0.05275284269239422')) WHEN CASE WHEN 0.22909866805738044 THEN NULL END THEN (+ (0.7245130281896482)) WHEN (+ ('5i)/')) THEN ((x'')/(x'c980')) END); -- 0ms;
SELECT ((AVG(vt0.c1))>>(COUNT(*))) FROM vt0, vt1; -- 0ms;
SELECT ALL (('1751909304') BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))) FROM vt0;SELECT ALL ((((load_extension('s|Qษ}p'))AND(x'')))AND((((vt0.c0)) BETWEEN (('+V')) AND ((vt1.c0))))), ((('/ 5'))<>((((vt1.c1)>(vt1.c2))))), vt1.c0, CAST(vt1.c1 AS REAL), (((((vt1.c0)) BETWEEN ((vt1.c2)) AND ((vt1.c2))))*(((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)))) FROM vt1, vt0 GROUP BY vt0.c1, LENGTH((((vt1.c0, vt0.c0, vt1.c2))>=((vt0.c0, vt0.c1, vt0.c0)))), (((vt0.c1 IN (vt1.c2)))+(((vt1.c1)+(vt1.c2)))) ORDER BY LIKELY(DISTINCT vt1.c2) COLLATE NOCASE ASC  NULLS LAST, LIKELY(CASE vt0.c1  WHEN 'v탤Z' THEN vt1.c1 END)  NULLS LAST LIMIT 145164837 OFFSET -1234375197; -- 0ms;
SELECT DISTINCT vt1.c1, (x'' COLLATE RTRIM IN ()), ((((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c2 WHEN 0.27872121782145076 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)OR(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0 COLLATE BINARY)), (((((vt1.c1)AND(vt1.c0)))OR(vt0.c1)) IN ()), (((vt0.c0) IS FALSE) IN ()) FROM vt0 WHERE (((0.14517568241212497 COLLATE NOCASE) NOT BETWEEN ((((0.3920651741507405)) NOT BETWEEN (('3<L坧C1e')) AND ((NULL)))) AND ((NOT (NULL)))));SELECT ((((vt1.c2) NOT BETWEEN (0.18128952459302994) AND (vt1.c1)))>=(vt0.c1 COLLATE RTRIM)) FROM vt0 WHERE ((((0.9427279519142165)) NOT BETWEEN ((((0X4c043d89)&(0.23840037977953843)))) AND ((((0.45157594669006107) ISNULL)))));SELECT ALL TOTAL(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END) FROM vt0, vt1 WHERE (CASE CAST(x'' AS TEXT)  WHEN (('') NOT BETWEEN (x'') AND (NULL)) THEN LTRIM(-1869983177) WHEN UPPER(-1.46874946E9) THEN ((1478825704) IS FALSE) WHEN (((0.2854703772163517)) BETWEEN ((-93843321)) AND ((NULL))) THEN ((0.7408769243232969) NOT NULL) ELSE ((((((((0.5474599229384272)AND('0.5363488645815113')))AND('')))OR('ci')))OR(NULL)) END); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((TRIM(vt1.c2))) AND ((vt1.c1))) FROM vt0 INNER JOIN vt1 ON '1146978910' WHERE (0.21759720784655112); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (vt0.c0) AND (HEX(vt0.c0))), CASE vt0.c0  WHEN CAST(vt0.c1 AS NUMERIC) THEN vt1.c0 END, MIN(((vt0.c1)/(vt0.c1))) FROM vt0 WHERE ((((NULL) NOTNULL) IN (CAST(0.8272443126263741 AS TEXT))));SELECT DISTINCT ((((NULL) IS FALSE)) IS FALSE), CAST(((((vt1.c1)OR(NULL)))OR(vt1.c0)) AS INTEGER), CASE ((vt1.c2) ISNULL)  WHEN vt0.c1 COLLATE RTRIM THEN vt1.c2 COLLATE RTRIM ELSE (((vt1.c0))<>((vt1.c0))) END, MAX(((((vt1.c0)OR(vt1.c2)))AND(vt0.c1))), (((vt1.c1 IN (vt1.c1, vt1.c2)))==(((vt1.c1) ISNULL))) FROM vt1, vt0 GROUP BY (+ (ABS(vt1.c0))), CAST(CAST(vt1.c2 AS REAL) AS NUMERIC), CAST(0Xfffffffff9c8f509 AS BLOB); -- 0ms;
SELECT ALL (~ ((NOT (vt1.c2)))) FROM vt1; -- 0ms;
SELECT ALL vt1.c2 FROM vt0 WHERE (((((CASE 0.029442174466873916  WHEN '0.830989037954498' THEN x'' END)AND(CAST(0.3337691056759837 AS INTEGER))))OR(((-1244746586)<>(x'')))));SELECT (((((vt1.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))=(((vt1.c1)>=(x'')))), (((vt0.c1)) NOT BETWEEN ((0.30574294003708125)) AND ((vt1.c2))) COLLATE BINARY, (((vt0.c0) IS FALSE) IN ()) FROM vt1;SELECT DISTINCT ((CASE WHEN NULL THEN x'22426dd8' ELSE vt0.c1 END)<=(((vt0.c1)-(vt0.c1)))), COUNT(*), (- (vt0.c0)) COLLATE BINARY FROM vt1;SELECT DISTINCT (GROUP_CONCAT(NULL) IN ()) FROM vt1 WHERE (((((NULL)AND(NULL))) IS TRUE)); -- 0ms;
SELECT (((((((((+ (vt1.c1)))AND(vt0.c0 COLLATE BINARY)))AND(IFNULL(DISTINCT vt1.c0, vt1.c2))))AND(vt1.c1)))AND(('304881169' IN (NULL, 0xffffffff86f9c768)))), ((((((((((vt0.c1)OR(vt1.c1)))AND(vt1.c2)))OR(vt1.c2)))AND(vt1.c0)))<>(((((vt1.c2)OR(vt0.c0)))AND(vt1.c1)))), COUNT((~ (vt1.c1))) OVER () FROM vt0;SELECT DISTINCT SUM((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0)))), (~ (vt1.c2 COLLATE BINARY)), vt1.c0 FROM vt1 LIMIT 1811024875;SELECT DISTINCT CASE 0.30574294003708125  WHEN CAST(vt1.c0 AS TEXT) THEN AVG(vt1.c2) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT LAG(((json_type(vt0.c1)) BETWEEN (CAST('' AS INTEGER)) AND (((((x'')AND(vt0.c0)))AND(vt0.c1)))), vt0.c0, ((CASE WHEN -314317939 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL)) OVER () FROM vt0;