-- Time: 2024/06/07 10:10:21
-- Database: database17
-- Database version: 3.40.0
-- seed value: 3335721617
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (0.2856863773740408, 1495754408, '-#hOb'); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1) VALUES (0.5709183345516401, x''), (x'', x'e1b0'), (NULL, 0.2856863773740408); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('1495754408', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0X3dcb5235), (1362283203), ('&D\\^'); -- 0ms;
ANALYZE sqlite_master; -- 5ms;
UPDATE OR IGNORE rt0 SET c1=1495754408; -- 0ms;
END; -- 0ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('(k>}bPQX', NULL, '1666777444'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL, c2=NULL WHERE (LIKE(rt0.c0, rt0.c0) IN ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c1))))); -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'3b12'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES ('', 0.8633442489516541); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES ('966424155', x'', '-2069033172'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0X5132cac3, NULL, x''), (0.19697376707610825, 0.5023589023486472, 0.3624154087728695), (NULL, '-2089052751', x''); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
UPDATE OR REPLACE rt0 SET (c2)=('-2089052751') WHERE (((rt0.c0 IN (x'')))IS NOT(((((rt0.c0)AND(rt0.c1)))OR(NULL)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c2) VALUES (0.37972405797386566, -1542819785, -2.089052751E9); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES ('-S\', ''), (NULL, NULL), (x'f9ec', NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES ('E4zmGE\n#n', NULL); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (0.03206201230098227, NULL), (x'', NULL), (NULL, 'AJ	Lf''WdL'); -- 0ms;
DELETE FROM rt0; -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES ('613736642'); -- 0ms;
UPDATE OR ABORT rt0 SET c2='-2069033172', c1=0.4722705365866805; -- 0ms;
UPDATE rt0 SET c2=3.96096958E8, c2='2082769408', c0=NULL; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL), (x'f491'), ('0.8633442489516541'); -- 0ms;
PRAGMA stats; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
UPDATE rt0 SET c1=0.1665563560936565 WHERE NULLIF((- (0.19697376707610825)), ((rt0.c1) NOT NULL)); -- 1ms;
UPDATE OR IGNORE rt1 SET c2='cwm癛3' WHERE (+ (((rt1.c0)>>(rt1.c1)))); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c0) VALUES (-2.089052751E9, 'Hႄ'), (0.90337217866383, NULL), (NULL, 0.2301005735694196); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (0.9015705687170946, 0.9039944784071295, 0.9688883508460231); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES ('-2069033172', ''); -- 1ms;
UPDATE OR FAIL rt1 SET (c1)=(0.5309664686303028) WHERE (((((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c0, rt1.c0))))OR(CAST(rt1.c2 AS INTEGER))))OR(CASE rt1.c2  WHEN rt1.c0 THEN NULL ELSE rt1.c0 END)); -- 1ms;
UPDATE OR IGNORE rt1 SET (c0, c0)=('1630358977', '-2069033172'); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=0Xfffffffffe854bbe, c1=NULL WHERE ((((('-0.0')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))) NOTNULL); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA main.wal_autocheckpoint = -6160054052892499637; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA mmap_size = 1785845361070409446; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=-24818754, c2=x''; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (0x5dd9e039); -- 0ms;
UPDATE rt1 SET c1=NULL; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE OR FAIL rt1 SET (c2, c1)=(403857874, x'') WHERE (((rt1.c1 IN ()))OR(rt1.c2 COLLATE BINARY)); -- 0ms;
UPDATE OR ABORT rt0 SET c2=0.678075214136041 WHERE CASE WHEN 0Xffffffff9766d1f1 THEN 0.8770449530705589 ELSE rt0.c1 COLLATE BINARY END; -- 1ms;
REINDEX BINARY; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (0.9934462765546679), (1650712887), (x'7964'); -- 1ms;
UPDATE rt1 SET c2='1845741015' WHERE (((rt1.c2)) BETWEEN ((TRIM(rt1.c1))) AND ((((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0))))); -- 1ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (x'', 0X3dcb5235); -- 1ms;
UPDATE OR ROLLBACK rt0 SET c1=1495754408 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 END))==(((((rt0.c0))<=((rt0.c2)))))); -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INTEGER ); -- 0ms;
UPDATE rt1 SET c2='1772911287' WHERE ((LOWER(rt1.c1)) IS FALSE); -- 1ms;
UPDATE rt0 SET (c2)=(NULL); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0x24cf96b6); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=('') WHERE 'f'; -- 0ms;
UPDATE t0 SET (c0)=(0xcd1a381) WHERE (NULL IN ()); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE ((((t0.c0) IS FALSE)) NOT BETWEEN (CASE '-1542819785'  WHEN t0.c0 THEN 0.9725560752935624 ELSE t0.c0 END) AND (t0.c0 COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=737897822 noskipscan'); -- 0ms;
INSERT OR ABORT INTO rt1(c1) VALUES (0.9157064183179361), (((((0Xffffffff8a5d1084, NULL, x'')) NOT BETWEEN ((x'', 0xffffffff84ad0f2c, 0.4722705365866805)) AND (('-954739213', '6', 0.8605240597446515))) IN (UNLIKELY(DISTINCT x'af8f'), ((('0.5023589023486472'))==((NULL)))))), (x''); -- 0ms;
UPDATE OR IGNORE t0 SET c0='0.3624154087728695'; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c0)=(''); -- 0ms;
UPDATE OR FAIL rt1 SET (c2, c0)=('0.3624154087728695', '-S\'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.7081591441454367) WHERE rt0.c0 COLLATE RTRIM; -- 1ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt1(c1) VALUES (((((NULL) ISNULL))>>((('-1542819785') NOT BETWEEN (x'a4b3') AND (''))))); -- 0ms;
UPDATE rt1 SET c0=NULL, c2=x'', c0='' WHERE (((rt1.c1)) BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (NULL)))) AND ((((((rt1.c1)OR(rt1.c2)))AND(rt1.c2))))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(NULL, 1574559801, x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')LIKE('-2143803542')) AS REAL); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.8524240124838701), ('617584310'), (NULL); -- 0ms;
REINDEX  rt1; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c0)=(x'', 0.11194738367665558); -- 0ms;
UPDATE rt1 SET c2='r䡜LR	r' WHERE ((rt1.c0 COLLATE BINARY)%(CAST(rt1.c0 AS TEXT))); -- 0ms;
UPDATE OR FAIL rt1 SET (c1)=(x'2fd0'); -- 1ms;
PRAGMA main.optimize; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT LEAD(((rt0.c0 COLLATE RTRIM)||(((rt1.c0)*(rt1.c2)))), (NOT (rt1.c2 COLLATE RTRIM)), CASE WHEN ((rt0.c2)+(rt1.c0)) THEN (rt0.c2 IN ()) END) OVER ( ORDER BY ((rt0.c0)IS NOT(rt1.c0)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST), (((MIN(rt1.c0), ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)), rt1.c0 COLLATE NOCASE))>((COUNT(*), (((t0.c0, rt0.c0, rt1.c2))=((0Xcd1a381, rt0.c2, rt0.c1))), LOWER(DISTINCT rt1.c2)))), RANK() OVER () FROM rt0, rt1, t0 WHERE ((((0.42748149471565633))==((x''))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((rt0.c2 IN ())))<>((AVG(rt1.c1)))), TYPEOF(TRIM(rt0.c1)), (((rt1.c1)<(rt0.c0)) IN ()) FROM t0;SELECT DISTINCT MIN(((rt1.c2) IS FALSE)) FROM t0 WHERE ((- (NULL))) GROUP BY CASE WHEN x'' THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) END, CAST((- (rt1.c1)) AS REAL), CAST(t0.c0 COLLATE NOCASE AS BLOB) HAVING (((NOT (t0.c0)))IS(((((((((x'')AND(rt1.c1)))AND(t0.c0)))AND(rt0.c0)))AND(rt0.c0)))) LIMIT 442147032;SELECT DISTINCT NULL, ((((((rt1.c0)OR(rt0.c1)))AND(rt0.c0)))>(CASE WHEN rt0.c2 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN '1*&' THEN rt0.c0 END)), (((((rt1.c1, rt0.c0, rt1.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt1.c2, rt1.c1, rt0.c1, rt1.c2)) AND (('0.9015705687170946', t0.c0, rt0.c2, rt1.c1, rt1.c0)))) NOT NULL) FROM rt1, t0, rt0; -- 0ms;
SELECT (((CASE rt0.c0  WHEN rt1.c2 THEN t0.c0 ELSE rt1.c2 END, ((((rt0.c2)AND(rt0.c0)))OR(rt1.c2)), CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 END))==((TRIM(rt1.c2), CAST(rt1.c0 AS REAL), COUNT(*)))) FROM rt0;SELECT ALL (((rt0.c0 IN ())) NOT NULL) FROM t0, rt0, rt1; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c2  WHEN t0.c0 THEN rt1.c2 ELSE rt0.c0 END  WHEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))) THEN json_array_length(rt1.c1) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) THEN AVG(rt1.c2) WHEN CASE rt0.c2  WHEN rt1.c2 THEN 0.7798020268421008 ELSE rt1.c1 END THEN (+ (rt0.c1)) ELSE ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt0.c0)))AND(rt0.c1)) END FROM t0 LIMIT -294391591;SELECT ALL rt0.c1 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2) IS FALSE))AND(CAST(rt1.c0 AS NUMERIC))))AND((+ (t0.c0)))) FROM rt1, rt0, t0 GROUP BY ((rt1.c2 COLLATE RTRIM)GLOB(CASE WHEN rt1.c2 THEN 0.47205769099311823 ELSE rt1.c2 END)) HAVING ((CAST(rt1.c1 AS BLOB))&(((rt1.c1)*(rt0.c1)))); -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN ('0.9934462765546679') AND (rt1.c0))) NOT BETWEEN (((rt0.c1)!=(rt1.c1))) AND (((((rt0.c0)OR(t0.c0)))OR(rt0.c1)))) FROM rt1, t0;SELECT ALL ((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((- (rt1.c1))) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt0.c2)))), ((('1032660449'))<=((CASE rt1.c1  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN x'' WHEN t0.c0 THEN rt1.c1 END))), CAST(AVG(rt1.c2) AS TEXT) FROM t0, rt1, rt0 WHERE (CASE 0.37317550110437947 COLLATE NOCASE  WHEN (- (x'')) THEN UPPER('-1430344952') ELSE ((0.1756070431232396) NOT NULL) END); -- 0ms;
SELECT ALL 0Xffffffffe11a7832 FROM rt1 WHERE (ABS((((('-s\')OR(x'')))AND(0xffffffffcac4b63e)))); -- 0ms;
SELECT ALL ((((rt0.c1) NOT NULL))%((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FROM rt1 WHERE (((((x'') NOTNULL)) BETWEEN ((('E4zmGE\n#n') BETWEEN (0.0933515256244476) AND ('uI5rF\r]A'))) AND ((NOT (''))))) GROUP BY (((rt1.c2, rt1.c2, t0.c0)) NOT BETWEEN ((((rt1.c2)>(rt0.c0)), (((rt0.c2, 0.30788945683364255, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt1.c2)) AND ((t0.c0, rt0.c1, rt1.c1))), ((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))) AND (((~ (rt0.c2)), NULL, (+ (rt1.c0))))), ((rt1.c0)==(LOWER(DISTINCT rt0.c0))), CAST((('1650712887')-(t0.c0)) AS REAL) ORDER BY (LIKELY(t0.c0) IN ()) DESC, ((((((((0.8046100775593484)AND(((((rt1.c2)OR(rt0.c0)))OR(rt0.c2)))))AND((+ (rt0.c1)))))AND(((((rt0.c2)OR(rt1.c1)))AND(rt1.c2)))))OR(0.03206201230098227)) DESC;SELECT DISTINCT AVG(((rt0.c1)>(rt0.c2))) FROM rt1, rt0, t0 WHERE ((((('aG*|')IS NOT(0x6e2693df))) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))) AS REAL), ((((((((((((((((t0.c0)AND(rt1.c0)))OR(t0.c0)))OR(t0.c0)))AND(rt0.c0)))AND(CAST(0.2543041803788242 AS INTEGER))))OR((((rt1.c0))<((rt1.c1))))))AND(CAST(rt1.c1 AS INTEGER))))OR(-1.973612412E9)), (((LOWER(rt1.c2)))=((((rt1.c1) NOTNULL)))) FROM t0, rt0;SELECT DISTINCT (((((NOT (rt1.c1)))OR(((rt1.c2) NOT BETWEEN (rt0.c1) AND (t0.c0)))))OR(((rt0.c2)<<(t0.c0)))), SUM(((rt0.c2)||(rt0.c2))) OVER (), ((((((rt0.c0)>>(rt0.c2)))AND((rt0.c2 IN ()))))OR(rt1.c2)) FROM rt1 WHERE (CAST(NULL AS REAL));SELECT DISTINCT (((rt0.c0, 0Xffffffffdb765ea6, rt0.c2))!=((6.1758431E8, rt0.c1, rt1.c0))) COLLATE BINARY, LEAD(JULIANDAY(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (((rt0.c0, rt0.c1, rt0.c0))=((rt0.c0, rt0.c1, rt0.c2))), ((rt0.c1) NOTNULL)), (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS FALSE), (~ (LIKELY(rt0.c1)))) OVER (), CASE WHEN (NOT (rt1.c1)) THEN ((t0.c0) NOTNULL) ELSE DATETIME(rt1.c0, rt0.c1, t0.c0, rt0.c0, rt1.c1) END, MAX(((((t0.c0)OR(rt0.c0)))AND(rt1.c0))), ((rt0.c2)IS(rt1.c2)) COLLATE RTRIM FROM rt0;SELECT ((CAST(t0.c0 AS INTEGER))IS(rt0.c1 COLLATE BINARY)), ((((t0.c0 COLLATE BINARY)AND(((rt1.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(AVG(rt1.c1))), (((((('')OR(rt1.c0)))AND(rt0.c0))) IS FALSE) FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT (x'6086' IN ()) FROM rt1, rt0, t0 WHERE (((((0.8096990131525544 IN (x'', 0.5309664686303028))))<=(((((NULL)) BETWEEN (('')) AND (('617584310'))))))); -- 0ms;
SELECT rt1.c2 COLLATE NOCASE FROM rt0, t0, rt1 WHERE ((('783683653') NOT NULL)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT 0.08959574677769411, 0.7970148571724492) FROM rt1, t0, rt0 WHERE ((((0.9540395867975878, -1150516829, '-1891172225')) BETWEEN ((x'', 0.24899669193222296, NULL)) AND ((NULL, NULL, NULL))) COLLATE BINARY) ORDER BY ((((rt0.c2) IS FALSE)) NOTNULL) ASC  NULLS LAST, CAST(((rt1.c1)>>(rt1.c0)) AS REAL) DESC LIMIT -1150516829; -- 1ms;
SELECT ((((rt1.c2)LIKE(rt1.c1)))=(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c0)))) FROM rt1;SELECT DISTINCT (NOT (((rt1.c2)=(rt1.c0)))) FROM rt0 NOT INDEXED, t0, rt1 GROUP BY (NOT ((+ (rt1.c2)))) HAVING LIKELIHOOD(rt1.c2, 0.8259119081120644) COLLATE BINARY; -- 0ms;
SELECT ALL CASE WHEN (x'' IN (rt0.c2, rt1.c1)) THEN ((rt1.c1)<(t0.c0)) ELSE (NOT (rt0.c1)) END, NTILE((((rt1.c0 IN (rt1.c0)))+((- (rt1.c0))))) OVER (), ((rt0.c1 IN (rt1.c2, rt1.c0)) IN ()), SQLITE_COMPILEOPTION_USED(((((t0.c0)AND(t0.c0)))AND(rt1.c1))), ((((rt0.c1) NOTNULL))||(CAST(x'' AS INTEGER))) FROM rt1, rt0 WHERE (DATE(CASE WHEN NULL THEN x'' WHEN NULL THEN 0.8524240124838701 WHEN x'' THEN 1457788882 END, (((0.1818791447886774, 2.15065473E8, -1.150516829E9))>=((NULL, 'ap5Y', x'dbb5'))), (('-S\')*('䝔jO#'))));SELECT DISTINCT FIRST_VALUE(CAST(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)) AS BLOB)) OVER () FROM rt1 ORDER BY ((rt0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS LAST LIMIT 215065473 OFFSET -1053341868;SELECT ALL (((t0.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0))) COLLATE RTRIM, COUNT('E4zmGE\n#n') OVER (), FIRST_VALUE((+ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) OVER ( ORDER BY (((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((((t0.c0)|(rt0.c2)), NULL, NULL)) AND ((rt0.c2, NULL COLLATE RTRIM, '(k>}bpqx'))) ASC  NULLS FIRST) FROM t0, rt0 WHERE (((UNLIKELY('0.8524240124838701'))LIKE(6.13736642E8 COLLATE RTRIM)));SELECT DISTINCT ((x'')+((rt1.c0 IN (NULL, t0.c0)))), CAST(((rt0.c1) BETWEEN (rt1.c1) AND (NULL)) AS BLOB), TYPEOF(COUNT(*)) FROM rt0, t0 LIMIT 737897822 OFFSET -1028560534;SELECT ALL CAST(((t0.c0) NOT NULL) AS BLOB) FROM rt0, rt1, t0 ORDER BY LIKELY(DISTINCT ((rt0.c0) IS TRUE)) ASC LIMIT -1028560534; -- 0ms;
SELECT ALL (rt0.c0 IN (rt0.c0 COLLATE NOCASE, ((rt0.c1)<<(rt0.c0)))) FROM rt0 WHERE ((((('1431594778', '0販P''0<i', NULL))=(('-1891172225', 0.20565392638314095, 0.6409401884382047))) IN ())); -- 0ms;
SELECT DISTINCT ((((((rt0.c0) IS TRUE))OR(TRIM(rt1.c0))))AND(((t0.c0)GLOB(rt0.c1)))), UPPER(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((t0.c0)))), COUNT('aG*|') FROM rt1, rt0, t0 WHERE ((((NOT (-9.54739213E8))) ISNULL)) UNION ALL SELECT ((('-1542819785' IN (rt1.c2)))%(GROUP_CONCAT(NULL))), (((rt1.c0)) NOT BETWEEN (((NOT (rt1.c0)))) AND (((t0.c0 IN ())))), (- (AVG(t0.c0))) FROM rt1, t0, rt0 WHERE ((((NULL)>=('0販P''0<i')) IN ())) LIMIT 255528858 OFFSET -314512064; -- 1ms;
SELECT ALL MAX(((rt1.c2)<=(rt1.c0))) FROM rt0, rt1, t0 WHERE (((COALESCE(DISTINCT 0.8091014734286589, -2.94391591E8, '', x''))GLOB(0.8096990131525544 COLLATE BINARY))); -- 0ms;
SELECT ALL ((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt1.c1)))/(t0.c0 COLLATE BINARY)) FROM rt1, rt0, t0 WHERE ((((421633981 IN ()))-(CASE WHEN -266550098 THEN -8.93077954E8 ELSE x'' END))) GROUP BY ((((((x'7f64')OR(rt0.c2)))OR(rt1.c0))) BETWEEN ((((rt1.c2, rt1.c2, rt1.c2))<>((rt1.c0, rt1.c2, rt1.c0)))) AND (((rt0.c0)*(rt0.c1)))), CHAR(rt0.c1 COLLATE NOCASE), (((~ (rt0.c1))) BETWEEN (((rt0.c2)/(t0.c0))) AND (CAST(rt0.c2 AS INTEGER))) HAVING MIN(((rt0.c2)||(rt1.c1))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c0))) FROM t0, rt1 LIMIT 1382100116;SELECT DISTINCT 0.9540395867975878 FROM rt0, t0, rt1 WHERE (0xffffffffcac4b63e); -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN (((NOT (rt0.c2)))) AND ((((rt0.c0) NOT NULL)))), ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))>=(((rt1.c2) ISNULL))), ((((- (t0.c0))))==((LENGTH(rt1.c1)))) FROM rt1, rt0, t0; -- 0ms;
SELECT SUM(rt1.c2) COLLATE BINARY COLLATE NOCASE FROM rt0 WHERE (((((((NULL))<((0.1665563560936565)))))>((((x'')<('-612999514')))))) ORDER BY ((rt1.c1) IS FALSE) ASC;SELECT DISTINCT CAST(((((((((rt1.c1)AND(rt1.c0)))OR(rt0.c2)))OR(rt1.c1)))OR(rt1.c2)) AS INTEGER), x'', ((((t0.c0)-(rt0.c2)))%((- (rt0.c0)))) FROM rt1, rt0 WHERE (((((((x'') ISNULL))AND(x'8a9c')))AND(NULL COLLATE BINARY)));SELECT DISTINCT (- ((rt0.c1 IN (rt0.c0, rt1.c0)))), (((((rt1.c0 IN ()))AND(rt0.c0 COLLATE NOCASE)))OR((((rt1.c0, rt1.c0, t0.c0)) NOT BETWEEN ((rt1.c1, NULL, rt1.c2)) AND ((rt0.c0, rt1.c2, rt0.c2))))), x'9c84' FROM rt1 FULL OUTER JOIN t0 ON rt1.c2 RIGHT OUTER JOIN rt0 ON (~ ((rt0.c2 IN ()))) WHERE ((((((x'', '1096909261', x'')) NOT BETWEEN ((NULL, NULL, x'')) AND ((x'f724', NULL, '0.9934462765546679'))))>>((NULL IN ())))) ORDER BY '-376594850' DESC; -- 0ms;
SELECT ((CASE rt1.c0  WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END) NOT BETWEEN ((- (rt0.c1))) AND (rt0.c2)) FROM t0, rt0, rt1 WHERE ((CAST(NULL AS BLOB) IN (((x'') IS FALSE), (- (0.03206201230098227))))) ORDER BY ((((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (HEX(rt0.c2)) AND (((rt1.c0)%(rt0.c0)))), x'3201ceb2' ASC; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(rt0.c0)))OR(0.5758551800548752)))AND(t0.c0)))OR(t0.c0))) NOT BETWEEN (GROUP_CONCAT(t0.c0)) AND (CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c1 END)) FROM t0 WHERE ((((('-1028560534')GLOB('f')))+((((0.11194738367665558, 0.1354592107543775, -2.089052751E9))!=((x'', x'', ''))))));SELECT ALL 0.6575290476106957 FROM rt1, t0, rt0 WHERE (((((('', 0.38673534599439907, '-2134687264'))<=(('', 0.4532612327992299, x''))))!=(x''))); -- 1ms;
SELECT DISTINCT AVG(((((rt1.c1)OR(rt0.c2)))OR(t0.c0))) FROM rt0, rt1 GROUP BY (0.46510431279164755 IN (rt0.c0 COLLATE RTRIM, ((rt1.c2) BETWEEN (t0.c0) AND (0.33809190138717604)))), ABS(DISTINCT ((rt0.c2)/(rt1.c1))), ((((((((rt0.c0 COLLATE NOCASE)OR(((1.032660449E9)|(NULL)))))AND((((rt0.c2, rt1.c2, rt0.c1, rt0.c0, rt1.c0)) NOT BETWEEN ((0.3802753892690257, rt1.c1, rt0.c0, rt0.c2, rt1.c2)) AND ((rt0.c1, rt1.c0, rt1.c0, rt1.c2, t0.c0))))))OR(t0.c0 COLLATE NOCASE)))OR((('w>') BETWEEN (rt1.c2) AND (NULL)))) HAVING t0.c0;SELECT ((((rt1.c1)*(rt0.c1)))-(CAST(rt0.c0 AS NUMERIC))) FROM t0, rt0 WHERE ((((~ (x'20cb')))||(x'' COLLATE BINARY))) ORDER BY TYPEOF('1574559801') DESC, (LTRIM(rt1.c1) IN ()), ((((json_array(0Xffffffff8b6dbb25, rt1.c1, rt1.c1, rt1.c2))AND((((rt1.c2))<((rt1.c2))))))AND('')) DESC;SELECT rt1.c2 FROM rt0, t0 WHERE (((0.6553977707086381)>=(((NULL)<=(NULL)))));SELECT DISTINCT (((((rt0.c0))>=((t0.c0)))) IS FALSE) FROM rt0, rt1 WHERE ((((- (0.28902968098968007)))<(CASE NULL  WHEN 561427473 THEN 0.525114613174149 WHEN 1969438258 THEN x'' WHEN '-399678426' THEN NULL END)));SELECT DISTINCT (((((((((- (rt1.c0)))OR(TYPEOF(DISTINCT rt1.c0))))AND(LTRIM(rt1.c2, rt1.c1))))AND(((rt0.c2)<>(rt1.c2)))))AND(CAST(0.525114613174149 AS TEXT))) FROM t0, rt0 WHERE (NULL) GROUP BY (((rt1.c2 IN ()))IS NOT(((rt0.c2)>(rt0.c2)))) ORDER BY ((rt0.c2)*(((rt0.c1)>=(rt0.c2)))) ASC;SELECT DISTINCT ((((rt0.c0)AND(1.7976931348623157E308)))=(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) FROM t0 WHERE ((((0.330756142969607 IN ())) BETWEEN (((('1765568400'))<(('菹!')))) AND ((+ (x''))))) GROUP BY CAST(((rt0.c1) IS TRUE) AS INTEGER);SELECT DISTINCT (((+ (rt0.c0))) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))) FROM rt1 WHERE ((+ (x'8a8b69a5' COLLATE NOCASE)));SELECT (((((NOT (t0.c0)))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)=(rt0.c1)))), CASE (t0.c0 IN (rt0.c0, ''))  WHEN ((((t0.c0)OR(rt0.c0)))OR(rt0.c1)) THEN ((((rt0.c1)AND(t0.c0)))OR(rt1.c1)) END, rt1.c0 FROM rt1 WHERE (((CASE 0.8633442489516541  WHEN x'' THEN '211280499' ELSE x'' END) NOT BETWEEN (x'8fa9' COLLATE NOCASE) AND (((x'')==(x'51eb')))));SELECT DISTINCT (~ (rt0.c1)) FROM rt1, t0 INNER JOIN rt0 ON ((- (rt0.c1)) IN (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c2)), ((rt0.c0)AND(rt0.c2)))) ORDER BY ((CAST(rt1.c2 AS REAL))%((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT LAG((((- (rt1.c2))) NOT BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 ELSE x'' END)), (((((rt1.c2, rt1.c2, rt1.c2, rt0.c0, rt1.c2))!=((rt0.c1, -2.069033172E9, rt1.c2, rt1.c2, rt0.c0)))) NOT BETWEEN (((rt0.c1)<<(rt1.c1))) AND (((rt0.c2)&(rt0.c0)))), CASE ((rt0.c2)>=(rt1.c1))  WHEN CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 END THEN rt1.c1 END) OVER ( ROWS ((rt0.c2)LIKE(rt1.c0)) COLLATE BINARY PRECEDING EXCLUDE CURRENT ROW) FROM rt0, rt1; -- 0ms;
SELECT ALL NULL, ((SUM(rt0.c0)) NOT BETWEEN (t0.c0) AND (((rt0.c1)<>(rt0.c0)))), ((CAST(rt1.c1 AS REAL))==((((t0.c0)) BETWEEN ((0.28902968098968007)) AND ((rt0.c1))))) FROM rt1, rt0, t0; -- 0ms;
SELECT LIKELY(TRIM(DISTINCT rt1.c0)), (((- (t0.c0)))>(rt1.c1 COLLATE RTRIM)), rt1.c1 FROM rt1, t0 WHERE (((((NULL) IS FALSE))>>(CAST(0Xffffffffe11a7832 AS TEXT)))); -- 0ms;
SELECT ALL ((((rt0.c0)IS NOT(t0.c0)))%(-3.7659485E8 COLLATE RTRIM)), CAST(MIN(rt1.c1) AS TEXT), '-1243259756' FROM t0, rt0, rt1 WHERE ((((+ (0Xffffffffff868ca9))) ISNULL)); -- 0ms;
SELECT DISTINCT (((((t0.c0))>((rt1.c1)))) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt0.c1 END)) FROM rt1, rt0;SELECT ALL (((rt0.c0 IN ()))<<(((rt1.c2) NOT BETWEEN (rt0.c0) AND (NULL)))), ((rt0.c1 COLLATE RTRIM)<=((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c1))))), t0.c0 FROM t0, rt0, rt1; -- 0ms;
SELECT ALL json_array_length(rt0.c0 COLLATE NOCASE, ((rt0.c1) IS TRUE)), ((COUNT(*)) NOT BETWEEN ((~ (rt0.c2))) AND ((((rt1.c0, rt1.c2, rt1.c0))>((t0.c0, rt0.c2, t0.c0))))), ((((((rt1.c0)OR(rt1.c1)))OR(rt0.c1))) BETWEEN (rt0.c2 COLLATE BINARY) AND ((t0.c0 IN ()))) FROM rt0 WHERE (((CASE x''  WHEN 0.07078359089543895 THEN '' WHEN 'ႄ)' THEN 'ap5Y' WHEN 0X75633e32 THEN 0.5254345293295447 ELSE '1845741015' END) NOTNULL));SELECT DISTINCT (NOT (t0.c0)) FROM t0, rt1 WHERE ((NOT (((x'')>=('1626659711'))))) GROUP BY (((rt1.c1 IN ())) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt0.c0)>>(rt1.c1)))) HAVING x'';SELECT ALL FIRST_VALUE(CASE json(t0.c0)  WHEN CASE WHEN rt1.c2 THEN 'K_*_UI' WHEN t0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c0 END THEN (NOT (rt1.c0)) END) OVER () FROM t0, rt1, rt0; -- 1ms;
SELECT DISTINCT (((((t0.c0, rt1.c2, t0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((rt0.c1, '1091677890', rt0.c1)))) ISNULL), RANK() OVER (), ((+ (rt1.c0)) IN ()) FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT ALL ((rt0.c2 COLLATE BINARY)<((rt1.c0 IN ()))), ((SUM(rt1.c2)) BETWEEN (rt0.c0 COLLATE BINARY) AND ((t0.c0 IN (rt1.c2)))), CAST((rt0.c2 IN ()) AS REAL) FROM t0, rt0;SELECT DISTINCT ((CAST(rt1.c0 AS REAL))%(CASE rt1.c2  WHEN rt1.c1 THEN rt0.c0 END)) FROM rt1;SELECT NULLIF(CASE WHEN rt1.c1 THEN 'P' WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt1.c1 END, ((((((((((((x'')OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt1.c1)))AND(rt0.c0))), TOTAL(LOWER(DISTINCT rt0.c2)), (((rt1.c1 IN ()))>(((NULL) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) FROM rt0, t0, rt1 WHERE (CASE (NOT (x'b0d4'))  WHEN (x'' IN (-1.053341868E9, 'zhmPH벷nr')) THEN ((((x'')OR(0x1)))OR(0.05227232294287221)) WHEN ((0.28902968098968007)+(NULL)) THEN (('1626659711')OR('')) WHEN (+ ('')) THEN ((0.1354592107543775)||(0.2957021948034956)) END); -- 0ms;
SELECT t0.c0 FROM t0, rt1; -- 0ms;
SELECT DISTINCT NULL, ((((t0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c1)))&(((((((((rt0.c1)OR(rt1.c0)))AND(rt1.c2)))OR(rt0.c0)))AND(x'ff76')))), ((((rt1.c1 IN ()), COUNT(*), ((((rt0.c0)AND(rt1.c0)))AND(rt1.c1))))<((rt1.c0 COLLATE RTRIM, CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END, ((((rt1.c2)AND(rt1.c0)))OR(rt1.c0))))) FROM rt1, t0;SELECT DISTINCT HEX(((rt0.c0)IS NOT(rt0.c2))) FROM rt1 WHERE (CAST((0xffffffffc30292a5 IN ()) AS BLOB));SELECT DISTINCT GROUP_CONCAT(((NULL)%(rt0.c1))) OVER (), TRIM((+ (rt1.c2)), CASE rt1.c1  WHEN rt1.c1 THEN rt0.c2 END), (((rt0.c1 COLLATE NOCASE))<>((((t0.c0)<<('187278459'))))) FROM t0;SELECT UNLIKELY(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END) FROM rt0, rt1 WHERE ((((((x'') ISNULL), ((NULL) ISNULL), ((NULL)*('BNF^~{'))))<(((('-1023241563')*(0.24850179846562204)), (- (x'935b')), '-821169952')))); -- 0ms;
SELECT ALL rt1.c1 FROM t0 WHERE ('-2125720081') ORDER BY ((-1.150516829E9)LIKE(CASE WHEN rt0.c1 THEN x'fa19' ELSE rt1.c2 END));SELECT DISTINCT (((t0.c0 IN ()))<<((rt1.c2 IN ()))) FROM rt0, rt1 WHERE (CASE WHEN ((0.0)<=('')) THEN UPPER(NULL) WHEN (('32q') IS TRUE) THEN ((0.530810652216496) NOT BETWEEN (0.4468110281674993) AND (1091677890)) WHEN ((((0X33e19425)OR(0.807902259351942)))OR(0xcd1a381)) THEN (- ('')) END); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS TEXT))/((- (rt1.c1)))) FROM t0 WHERE (((((1.495754408E9)*(x'd7e28991')))>>((NOT (x''))))) GROUP BY CAST(rt0.c0 AS BLOB), (NOT ((('286181285') NOT BETWEEN (rt0.c1) AND (rt1.c0)))), LTRIM(rt1.c1, rt0.c2) COLLATE RTRIM HAVING ((t0.c0) IS FALSE);SELECT DISTINCT (- (IFNULL(DISTINCT rt1.c1, t0.c0))) FROM t0 WHERE (((((-1.955742939E9)-('-')))>=(x'')));SELECT ALL ((CASE rt0.c0  WHEN t0.c0 THEN 'p4' WHEN rt0.c1 THEN rt1.c2 WHEN NULL THEN rt0.c0 ELSE rt0.c2 END) NOTNULL) FROM rt0, t0, rt1; -- 0ms;
SELECT ALL rt1.c1, ((CAST(rt1.c1 AS REAL))<>(((rt0.c0) IS FALSE))), rt1.c0 FROM rt1, rt0 GROUP BY rt0.c1 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB)  NULLS LAST, rt1.c1 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))) FROM t0 WHERE ((~ (NULL COLLATE RTRIM)));SELECT CAST(NULL COLLATE NOCASE AS REAL) FROM rt1, rt0 WHERE (((((((0X4cb9f42c) IS TRUE))AND('613736642' COLLATE RTRIM)))OR(NULLIF('qL/9?Ep', NULL)))); -- 1ms;
SELECT ALL ((CASE rt0.c1  WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END) NOT NULL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT TOTAL((+ (rt0.c0))), TOTAL(((((rt0.c0)OR('')))OR(t0.c0)) COLLATE NOCASE) OVER (), (((''))<(((((t0.c0, rt1.c2, rt1.c2))<=((rt0.c0, t0.c0, rt1.c0)))))) FROM t0 GROUP BY CAST(CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END AS INTEGER);SELECT ALL ((CASE 'UI5RF\r]A'  WHEN rt1.c0 THEN rt1.c0 END)OR((- (rt1.c2)))) FROM t0, rt0, rt1 WHERE (((((NULL COLLATE BINARY)AND(x'c935')))OR('-1989744724'))); -- 0ms;
SELECT ((t0.c0)>(rt0.c2)) COLLATE BINARY, (((LTRIM(rt1.c0, rt0.c1)))>((((rt0.c0) IS TRUE)))), rt1.c2 FROM t0, rt0;SELECT DISTINCT rt1.c1, CASE WHEN NULL THEN CAST(t0.c0 AS REAL) WHEN CAST(rt0.c0 AS TEXT) THEN json_extract(t0.c0, t0.c0, rt1.c2, rt0.c0) WHEN CAST(rt0.c1 AS TEXT) THEN (('-1462567183')IS NOT(rt0.c0)) ELSE ((((rt0.c2)OR(t0.c0)))AND(-180712292)) END, AVG(((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(0Xffffffffd661c904)))AND(rt1.c2)))OR(rt0.c0)))OR(t0.c0))) OVER ( ORDER BY CAST(((t0.c0)-(rt1.c1)) AS INTEGER)) FROM t0;SELECT DISTINCT ((CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END)>>(((rt0.c1) IS TRUE))) FROM t0, rt0 WHERE ('');SELECT ALL (((rt0.c1)) BETWEEN ((((rt1.c0)<=(rt0.c2)))) AND ((rt1.c1 COLLATE RTRIM))), ((((((NULL) BETWEEN (rt1.c2) AND (rt0.c2)))OR(rt0.c2 COLLATE BINARY)))AND(((((((((rt1.c1)AND(t0.c0)))AND('\z')))OR(t0.c0)))OR(t0.c0)))), COUNT(((t0.c0) BETWEEN (t0.c0) AND (rt0.c0))) FROM t0;SELECT DISTINCT COUNT(*) OVER () FROM rt1, rt0; -- 0ms;
SELECT ((((NULL)AND((('')!=(rt0.c0)))))OR(((t0.c0) NOTNULL))) FROM rt0, t0 WHERE (UNICODE((- ('?KRHsB^6')))) GROUP BY ((x'')<(CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE rt1.c1 END)) LIMIT -1139055129;SELECT DISTINCT CASE WHEN rt0.c2 THEN x'' ELSE rt1.c2 END COLLATE RTRIM, CASE WHEN (x'' IN (rt1.c2)) THEN x'' WHEN rt0.c1 THEN TRIM(x'') WHEN 1.666777444E9 THEN ((rt0.c1)*(rt1.c2)) END, NULL FROM t0 ORDER BY ((((NULL)||(rt1.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0))) AND (((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS FIRST, '-2121280773' DESC  NULLS FIRST LIMIT 1201647733;SELECT (((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN (0xffffffff8a323374) AND (x'' COLLATE RTRIM)), ((((((rt0.c1)LIKE(rt0.c2)))OR(SUM(rt1.c1))))AND(((rt0.c2)<=(rt1.c0)))), (((CAST(rt0.c1 AS REAL)))>((rt1.c2 COLLATE RTRIM))) FROM rt1, rt0, t0; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))))-(((NULL) IS FALSE))), CAST(x'' AS INTEGER), json_type(AVG(rt0.c0)), (((~ (rt1.c2))) NOTNULL) FROM rt0, rt1 WHERE (CASE NULL  WHEN (~ ('950451456')) THEN (((NULL, NULL, '~z3cX')) BETWEEN ((NULL, x'', 0.6193844658930097)) AND ((NULL, '*', '-355447814'))) END) ORDER BY (+ (json_object(rt1.c1, t0.c0))) DESC  NULLS FIRST, ((UPPER(t0.c0))<=(((t0.c0)>(rt1.c1)))) ASC, CASE WHEN (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((t0.c0))) THEN rt1.c2 END;SELECT DISTINCT ((((COUNT(*))OR((((rt0.c2, rt0.c2, rt1.c2))<>((rt1.c0, rt0.c0, rt1.c1))))))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))) FROM t0, rt0, rt1; -- 0ms;
SELECT ALL CASE (((('s<')AND(rt1.c1)))AND(rt1.c0))  WHEN t0.c0 THEN (+ (rt1.c2)) END FROM rt0, rt1 WHERE (LIKELY(((0.5160747874099131) BETWEEN (0.6379328634855727) AND (-285268238)))) LIMIT -1405889129 OFFSET -1754869263;SELECT DISTINCT GROUP_CONCAT(((rt1.c0)GLOB(t0.c0))) FROM rt0, rt1 WHERE (((('A!(L	eWir' IN (NULL, 0.1928630497291739))) NOT BETWEEN (((((0.4865433462534685)OR(x'aa0006f6')))OR(0.5943356994005018))) AND (NULL COLLATE BINARY)));SELECT DISTINCT (((rt0.c2 COLLATE NOCASE))>=(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND (('-1482244456')))))), (~ (CAST(t0.c0 AS NUMERIC))), '1W&' FROM rt1, t0, rt0 WHERE (((((0x72eedfe1 IN ())))>=((CAST(9223372036854775807 AS BLOB))))); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((((('sx')AND(0xab134e7))) BETWEEN (((x'17f23cce')GLOB(NULL))) AND (1592951801))); -- 0ms;
SELECT TOTAL((rt1.c0 IN ())) OVER ( ORDER BY ((rt0.c0 COLLATE BINARY)>=(((((((((rt1.c1)OR(t0.c0)))OR(NULL)))OR(rt0.c0)))OR(t0.c0))))) FROM rt1, rt0;SELECT DISTINCT NTILE(((rt0.c1) NOT BETWEEN (((((((((t0.c0)AND(x'')))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND (((t0.c0)=(rt0.c2))))) OVER ( ORDER BY rt0.c1, t0.c0 DESC) FROM t0, rt0; -- 0ms;
SELECT DISTINCT LEAD(((rt0.c1)<=(((rt0.c2)GLOB(rt0.c1)))), (((((((((- (rt1.c2)))AND(((NULL) NOTNULL))))OR((- (rt0.c0)))))AND((- (rt1.c1)))))AND((+ (rt1.c1)))), (((rt0.c2, rt0.c0, 0.14311897046463729)) BETWEEN ((rt1.c0 COLLATE NOCASE, rt0.c1, (((rt1.c2, rt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt1.c2, rt0.c1))))) AND (((NOT (rt0.c0)), (((rt1.c1, rt1.c0, rt1.c0)) BETWEEN ((x'', rt1.c0, x'')) AND ((-2.85268238E8, rt0.c0, rt0.c1))), ((((rt0.c2)AND(rt1.c0)))AND(rt0.c2)))))) OVER (), DENSE_RANK() OVER (), NTH_VALUE((((((rt0.c1))<((0.6501041251787513)))) ISNULL), (CASE rt1.c1  WHEN rt0.c0 THEN 0.6718671035109988 ELSE 0.3658109112071858 END IN (((((rt1.c1)OR(rt0.c1)))OR(rt0.c1))))) OVER (), ((highlight(rt0.c2, rt0.c2, rt0.c0, rt0.c0)) BETWEEN (((x'')AND(rt1.c1))) AND (((rt1.c0)<(rt1.c1)))), ((((rt0.c2) IS FALSE)) IS FALSE) FROM rt0, rt1;SELECT ALL ((((rt1.c1)<(rt0.c1))) NOT BETWEEN (t0.c0) AND (NULL)) FROM rt0, rt1, t0 WHERE ((- ('1848021983'))) ORDER BY ('643125706' IN ()) ASC; -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL)) IS FALSE), ((AVG(0.15744538230114558)) ISNULL), (((- (t0.c0))) ISNULL) FROM rt0, rt1;SELECT DISTINCT x'' COLLATE NOCASE FROM rt1, rt0, t0; -- 1ms;
SELECT ALL ((CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END)%(COUNT(rt0.c1))) FROM rt1;SELECT ALL ((((rt0.c1)<=(rt1.c2)))%(rt0.c1 COLLATE RTRIM)) FROM t0, rt0 WHERE (TRIM(DISTINCT (NOT (0.8189533815284746)), 'c\np}5G~' COLLATE NOCASE));SELECT DISTINCT NULL, ((((x'a8a0')OR(((x'') IS TRUE))))OR(rt1.c0)), ((rt1.c2)>>(SUM('z--#+WHB'))) FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT NULL FROM rt1, t0 WHERE ((((('-510211167')OR(x'69b4')))LIKE(-1.989744724E9 COLLATE BINARY))) LIMIT -355447814 OFFSET 733005840; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS REAL) FROM rt0 INNER JOIN t0 ON CAST(((((rt0.c2)OR(rt0.c2)))OR(t0.c0)) AS INTEGER) GROUP BY CAST(((t0.c0) IS TRUE) AS INTEGER) ORDER BY CAST(rt0.c2 COLLATE BINARY AS REAL), ((TRIM(DISTINCT rt1.c1)) NOT BETWEEN ((('1457788882')>>(rt0.c2))) AND (CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END))  NULLS FIRST;SELECT DISTINCT ((((((((((NULL)+(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND((NOT (rt1.c2)))))OR(((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c1)))))AND('CG')), x'', CASE NULLIF(DISTINCT rt0.c1, rt0.c1)  WHEN CASE WHEN '966424155' THEN rt1.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END THEN rt1.c1 END FROM t0, rt0, rt1 WHERE (CASE TRIM(DISTINCT NULL)  WHEN (0.16773896412567113 IN ()) THEN ((0.15080365662229134) NOT BETWEEN (0.24538697684695887) AND ('&\r/')) WHEN (('P?0!') NOT BETWEEN (NULL) AND (NULL)) THEN CASE WHEN NULL THEN '-1023241563' WHEN NULL THEN '0' WHEN 0.90337217866383 THEN 0.5690080085191752 END WHEN ((0x2bfb6d5e)-(x'')) THEN ((('0.42748149471565633', 0Xffffffffc346ed1d, x'')) BETWEEN (('561427473', '960607960', -954739213)) AND ((x'', 0.4134045827895191, 0.4134045827895191))) WHEN UPPER('sr') THEN ((NULL)+('!f1')) WHEN ((('-1430344952'))!=((0.6617898746653379))) THEN (((('-180712292')AND(x'9e7c')))AND('_ຎ!4')) END); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS INTEGER) FROM rt0 WHERE (((((x'ad3b') BETWEEN (NULL) AND (0Xffffffffe4727e8c))) IS TRUE)); -- 0ms;
SELECT ALL (('0.2856863773740408' COLLATE BINARY)/((((rt0.c1))<((t0.c0))))) FROM t0, rt0, rt1 WHERE (((x'')>>(0x1c882855)) COLLATE NOCASE); -- 0ms;
SELECT ALL 0.6931975751960533 FROM rt1, rt0; -- 0ms;
SELECT CAST(x'b047' AS REAL), ((((rt1.c2 COLLATE NOCASE)OR(((rt0.c0)-(rt1.c2)))))OR(CAST(t0.c0 AS BLOB))), (MIN(t0.c0) IN (((rt1.c1) IS TRUE))) FROM t0, rt1 WHERE ((((((x'', x'', NULL))>((-1602643889, x'', x'')))) BETWEEN ((NOT (0.6617898746653379))) AND ((('') ISNULL))));SELECT DISTINCT CAST((rt0.c0 IN ()) AS INTEGER) FROM t0, rt0 WHERE ((+ ((((('1726885843')OR(NULL)))AND(''))))); -- 0ms;
SELECT NTILE(((rt1.c0)IS((- (rt1.c1))))) OVER ( PARTITION BY TIME((((rt0.c0))!=((rt1.c1))), (((rt0.c1))<=((rt0.c1))), load_extension(rt1.c0)), CASE (+ (t0.c0))  WHEN load_extension(rt0.c1, rt0.c0) THEN 0.12223226043417279 WHEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)) THEN (+ (rt0.c1)) WHEN ((((((((rt1.c1)AND(t0.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(rt0.c0)) THEN ((rt1.c1) NOTNULL) END) FROM rt1 WHERE ((((((0xffffffff837b95b1 IN ()))OR(x'9f4a' COLLATE RTRIM)))OR(((NULL)%(0xffffffffa518a6b2)))));SELECT DISTINCT (NOT ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))), TOTAL(((rt0.c0)>(x'')) COLLATE RTRIM), (~ (t0.c0)) COLLATE BINARY FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)>(CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN '1e500' WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c2 END)) WHERE ((NOT (((1.726885843E9)IS(''))))) UNION ALL SELECT DISTINCT LAST_VALUE(NULL) OVER (), COUNT(*), NTH_VALUE(CAST(CASE rt1.c2  WHEN x'' THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c0 END AS BLOB), CAST(((rt0.c1)|(rt0.c2)) AS NUMERIC)) OVER () FROM rt1, t0, rt0 WHERE ((((x'')) BETWEEN ((((((0.33809190138717604)AND('-746671489')))AND(-63253586)))) AND ((CASE NULL  WHEN 0.7667288591453784 THEN '-1754869263' END))));SELECT DISTINCT ((((rt0.c2)||(t0.c0))) NOT BETWEEN (((rt1.c1) BETWEEN (0.22132950692944664) AND (rt0.c0))) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))), ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))*(LTRIM(rt0.c2, t0.c0))), (t0.c0 COLLATE RTRIM IN ()) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt1.c1)))OR(rt1.c0)))!=((((rt1.c0, rt0.c2, rt1.c1))>((t0.c0, rt1.c0, rt1.c2))))) FROM rt0, rt1;SELECT ((rt1.c2 COLLATE BINARY)<>(CAST(rt0.c2 AS REAL))), ((((rt1.c1)||(rt1.c0))) NOT BETWEEN (((rt1.c0) BETWEEN (NULL) AND (rt0.c1))) AND (COUNT(rt0.c2))), LAST_INSERT_ROWID() FROM t0, rt0;SELECT (((((rt0.c0, rt0.c0, NULL)) BETWEEN ((rt1.c2, rt1.c0, rt0.c2)) AND ((rt1.c1, t0.c0, rt0.c1))))<<(CAST(rt0.c2 AS INTEGER))) FROM rt0, t0 WHERE ((((((NULL))<>((0.4134045827895191))))>>(((-2.94391591E8) IS TRUE))));SELECT CAST(rt1.c1 AS REAL) COLLATE RTRIM FROM rt1, rt0, t0 WHERE (((('vZh1㪯(')GLOB('')) IN ())); -- 0ms;
SELECT ALL CAST((((0.16351809766049485, 'f', rt1.c1)) NOT BETWEEN ((rt1.c0, t0.c0, -817560716)) AND ((rt0.c2, rt0.c1, rt1.c2))) AS TEXT), ((rt1.c2) IS FALSE), (((CAST(0.9934462765546679 AS NUMERIC)))!=(('2014819067'))) FROM rt1, rt0, t0; -- 0ms;
SELECT ALL CAST(((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c2)) AS INTEGER) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT TRIM(t0.c0, rt0.c2), CASE rt1.c2  WHEN -1516784880 THEN rt1.c2 END), CAST((('') BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER), (((rt1.c0 IN ()))IS NOT((rt0.c0 IN ()))) FROM rt1, t0, rt0; -- 1ms;
SELECT DISTINCT '釖Z', ((rt0.c2) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1))) AND (NULL)), (('RS') NOT BETWEEN (rt0.c0) AND (((rt0.c0) IS FALSE))) FROM rt0, rt1; -- 0ms;
SELECT (((rt0.c2) NOTNULL) IN ()) FROM rt1 WHERE (((((NULL) BETWEEN (NULL) AND (NULL)))&((((('')AND(6.13736642E8)))AND('r흸'))))); -- 0ms;
SELECT (+ ((((rt1.c1))==((rt0.c0))))) FROM rt0, rt1, t0; -- 0ms;
SELECT AVG((((t0.c0, x'', rt1.c1)) BETWEEN ((NULL, rt0.c1, rt0.c0)) AND ((rt1.c1, rt1.c2, rt1.c1)))) FROM t0, rt1;SELECT ALL ((rt1.c0) NOTNULL) COLLATE RTRIM FROM rt0;SELECT (- (rt1.c1)) COLLATE BINARY, (((rt0.c1 IN ()))GLOB((+ (rt0.c2)))), MAX(CAST(rt0.c1 AS REAL)) FROM t0, rt0, rt1 ORDER BY ((CASE WHEN rt1.c1 THEN rt0.c2 END)IS(x'')) DESC; -- 0ms;
SELECT ALL rt0.c1 COLLATE NOCASE FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( PARTITION BY NULL, ((((SUBSTR(rt1.c1, t0.c0))OR(((((rt0.c2)OR(rt1.c2)))AND(rt0.c2)))))OR(TRIM(DISTINCT rt1.c0, rt0.c0)))) FROM rt0, t0, rt1; -- 0ms;
SELECT PRINTF(CAST(rt0.c0 AS TEXT)), CAST(((0.46276535726699786)-(rt1.c0)) AS INTEGER), (((t0.c0, rt1.c1, rt1.c2)) NOT BETWEEN (((('-355447814') NOT BETWEEN (rt1.c2) AND (rt0.c1)), (NOT (rt1.c2)), ((((rt0.c0)OR(rt1.c1)))AND(rt1.c2)))) AND ((((rt0.c0) IS FALSE), (t0.c0 IN ()), NULL))) FROM rt1;SELECT ALL CASE NULL  WHEN ((rt1.c1)%(rt0.c1)) THEN (rt1.c0 IN ()) ELSE ((0.3658109112071858) ISNULL) END, CASE WHEN (rt1.c0 IN ()) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c0 IN ()) THEN CAST(rt0.c1 AS INTEGER) WHEN ((rt0.c2) IS TRUE) THEN TYPEOF(DISTINCT rt0.c1) END, ((rt1.c2 COLLATE RTRIM)<((rt1.c0 IN (rt1.c1)))) FROM t0, rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0)*(rt0.c2)) THEN (rt0.c2 IN (rt1.c1)) WHEN rt1.c2 THEN 0x12d4602d WHEN ((rt1.c0)-(rt0.c2)) THEN ((((((((t0.c0)OR(rt0.c1)))OR(rt1.c2)))AND(rt1.c2)))AND('Di8Gj')) WHEN ((rt0.c1)<(rt1.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)) THEN ((t0.c0)+(rt1.c0)) ELSE (- (t0.c0)) END FROM t0, rt0;SELECT 1967791471 FROM rt1, rt0, t0 NOT INDEXED GROUP BY CAST(((rt0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)) AS TEXT); -- 1ms;
SELECT ALL ((LIKELIHOOD(rt1.c0, 0.07675257831170734)) IS FALSE) FROM rt0, t0 WHERE (CAST((('2070224904')IS(0.6409401884382047)) AS NUMERIC)) ORDER BY ((0.8295301281895926) NOT BETWEEN (((rt0.c0)<>(rt0.c1))) AND (((t0.c0)IS NOT(rt1.c0)))) DESC, (NOT (rt1.c0))  NULLS LAST, (((NOT (rt1.c1))) NOTNULL) DESC  NULLS FIRST;SELECT '2014819067' FROM t0, rt1, rt0 WHERE ((NOT ('613736642')) COLLATE BINARY); -- 0ms;
SELECT t0.c0 FROM rt0;SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))) BETWEEN (TRIM(DISTINCT t0.c0)) AND (((((t0.c0)AND(rt0.c1)))AND(rt0.c1)))) FROM rt1, rt0 WHERE ((NOT (((0.28738980091939015)+(x'')))));SELECT ALL rt0.c2, NULL, TOTAL((((rt0.c0, rt1.c0, rt0.c2, rt1.c2, rt1.c0)) NOT BETWEEN ((rt0.c1, t0.c0, rt1.c0, rt1.c1, rt1.c0)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c0, t0.c0))) COLLATE NOCASE) OVER () FROM rt1, rt0;SELECT DISTINCT ((((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c0))) NOTNULL) FROM rt1 WHERE (TRIM(DISTINCT (0.16181394230148372 IN ())));SELECT (NOT (MAX(rt0.c0))) FROM rt1, t0, rt0 WHERE ((- ((((NULL))>((0.5082928273204262)))))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)=(t0.c0)) AS INTEGER), ((((rt0.c0)IS NOT(rt0.c0))) NOT NULL), ((((rt0.c0) NOTNULL))<(CASE WHEN rt1.c0 THEN rt0.c1 END)) FROM rt0 WHERE (((NULL)==(((1772911287) IS FALSE)))) GROUP BY ((((rt1.c1)IS NOT(rt0.c0))) NOTNULL) HAVING (- (((rt0.c2)GLOB(rt0.c2))));SELECT DISTINCT ((AVG(rt1.c2))%(((rt1.c0)IS NOT(rt0.c2)))) FROM t0 WHERE (((((((x'b557')OR(NULL)))OR(NULL))) BETWEEN (LIKELY(x'')) AND (CASE NULL  WHEN x'e8a3' THEN -1386459837 WHEN NULL THEN 0.3658109112071858 WHEN NULL THEN 0xffffffffe82d6426 END)));SELECT DISTINCT COUNT(((0.0894443662654697) NOTNULL)) FILTER(WHERE rt0.c1 COLLATE BINARY) OVER () FROM rt1 WHERE ((('-237364641') IS TRUE) COLLATE BINARY);SELECT DISTINCT CASE WHEN IFNULL(rt0.c0, rt0.c2) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END FROM rt0, rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) NOT BETWEEN ('C') AND (0Xffffffffe82d6426))) FROM rt0, t0 WHERE ('-2119833010') GROUP BY NULL HAVING (((t0.c0)) BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((((rt1.c1)||(t0.c0))))) ORDER BY ((0.12193742274657215) BETWEEN ((NOT (rt0.c1))) AND (((((rt0.c0)AND(rt1.c1)))AND(x'f418')))), CASE WHEN (((rt1.c0))<((rt1.c1))) THEN ((-1512490636) NOTNULL) WHEN TIME(rt1.c2, '2084418043', NULL) THEN (+ (rt0.c2)) WHEN ((rt1.c1) NOTNULL) THEN CASE rt0.c2  WHEN rt1.c1 THEN rt0.c1 ELSE rt0.c1 END END ASC  NULLS LAST;SELECT DISTINCT x'', CASE x''  WHEN ((rt1.c2)OR(rt0.c2)) THEN ((rt1.c1)IS(rt0.c0)) WHEN COUNT(x'') THEN MIN(rt1.c1) WHEN COUNT(t0.c0) THEN ((rt1.c0)AND(rt1.c0)) END, CAST(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS REAL) FROM rt1;SELECT ALL TYPEOF(((((rt0.c1)AND(t0.c0)))OR(rt0.c1))), COUNT(((rt1.c0) ISNULL) COLLATE BINARY), CAST(AVG(rt0.c1) AS BLOB) FROM t0, rt0;SELECT rt1.c2 FROM t0, rt1 CROSS JOIN rt0 ON (rt1.c0 IN ()) COLLATE NOCASE WHERE ((NOT (UPPER(DISTINCT x'b965')))) LIMIT 1287255084 OFFSET 1457788882; -- 0ms;
SELECT ALL COUNT(*), ((rt0.c0)||(NULL)) COLLATE RTRIM, ((rt0.c2 COLLATE NOCASE) BETWEEN ((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) AND (ABS(rt1.c0))) FROM rt1, t0, rt0; -- 1ms;
SELECT ((((t0.c0)IS(rt0.c0))) IS TRUE) FROM t0 WHERE ((~ (0.915112019801987)) COLLATE BINARY) LIMIT -889577551 OFFSET -7959383;SELECT ALL ((((rt0.c2)/(rt1.c0)))+((rt1.c1 IN ()))) FROM rt0, rt1 WHERE (json(((((((((0.9688883508460231)OR(x'')))AND(-2143803542)))OR(0.3624154087728695)))OR(0.9356420200620766)))) GROUP BY ((CAST(rt1.c0 AS REAL))+(((rt1.c2) IS FALSE))) HAVING ((((rt1.c1) ISNULL))=(COUNT(*))); -- 0ms;
SELECT ALL rt0.c0, x'02ae', rt0.c1 FROM rt1;SELECT DISTINCT NULL FROM rt1, rt0 WHERE (((((0.5346525079140508) NOTNULL)) NOT NULL)) LIMIT -1321881177; -- 0ms;
SELECT ALL TRIM(CAST(rt0.c0 AS NUMERIC)) FROM rt1 WHERE ((x'' IN ()) COLLATE NOCASE);SELECT DISTINCT CAST(((rt0.c1) ISNULL) AS BLOB), rt1.c2, ((((rt0.c1)!=(rt0.c2))) BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 END) AND (TYPEOF(DISTINCT t0.c0))), MIN(((rt1.c2) NOT NULL), (((rt1.c2))<=((rt1.c2)))), IFNULL(DISTINCT ((t0.c0) ISNULL), CAST(rt1.c1 AS REAL)), MIN(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c2 END), ((x'75803453') BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) AND (((rt1.c0)=(rt1.c1)))) FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT UNLIKELY(((rt1.c1) NOTNULL)), ((((t0.c0) NOT BETWEEN (rt1.c1) AND (0.5271851070937204)))GLOB(((rt0.c2) IS FALSE))), GROUP_CONCAT((rt1.c2 IN ())) OVER (), TOTAL(0.34451978421896357) OVER (), (~ ((+ (rt1.c2)))) FROM rt0;SELECT ALL PERCENT_RANK() OVER () FROM t0, rt1; -- 0ms;
SELECT ((((rt1.c2) NOT BETWEEN (-2.143803542E9) AND (rt1.c2))) NOT BETWEEN ((('211280499')/(rt0.c2))) AND (((rt1.c1) BETWEEN (rt1.c2) AND (2.15065473E8)))), 0.36129031934972067, (((rt1.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 END)) AND (((~ (rt0.c2))))) FROM rt1, t0 LIMIT -285268238 OFFSET 1407198218;SELECT DISTINCT CAST((rt0.c2 IN (t0.c0)) AS INTEGER) FROM rt1;SELECT ALL SUM(((rt0.c0)LIKE(rt0.c2))) OVER (), (((CASE WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c2 THEN t0.c0 END, MAX(t0.c0), (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))))<>(((((rt0.c2, rt0.c0, t0.c0))!=((rt0.c0, rt1.c1, t0.c0))), CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c2 END, CAST(rt1.c0 AS BLOB)))), ((rt1.c2 COLLATE NOCASE)>=(CAST(rt1.c2 AS INTEGER))) FROM rt1, rt0;SELECT DISTINCT NULLIF(DISTINCT CASE WHEN rt0.c1 THEN t0.c0 END, ((t0.c0) NOTNULL)) FROM rt1, rt0;SELECT DISTINCT ((CAST(t0.c0 AS BLOB))>=(((rt0.c2)<(rt1.c2)))) FROM rt0, rt1, t0; -- 0ms;
SELECT ALL (x'' IN ()) FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN (rt0.c1, rt1.c2)) AS NUMERIC), CASE WHEN CAST(rt1.c0 AS REAL) THEN ((rt0.c0)>(rt1.c1)) ELSE rt1.c0 END, (('e协q') NOT NULL) FROM rt0, t0, rt1 GROUP BY ((((((((((rt0.c1)IS NOT(rt0.c0)))OR(((rt0.c2)/(rt1.c1)))))AND((((t0.c0, rt1.c0, rt0.c0))<>((rt0.c2, rt0.c0, rt0.c0))))))AND(((NULL) NOT BETWEEN (rt1.c2) AND (t0.c0)))))AND((rt1.c1 IN ()))), -1.018761955E9, (~ (CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c2 END)) HAVING COUNT(*);SELECT ALL CAST('BF_zMO\Cz' AS BLOB), rt0.c2, '-200477178' FROM t0 GROUP BY (((- (rt0.c0))) BETWEEN ((- (rt0.c2))) AND ((((rt1.c0))<((rt0.c0))))) HAVING ((((((((0.1251830642987568 COLLATE BINARY)AND(rt0.c1)))OR((((rt1.c0))<=((rt0.c2))))))AND((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c1))))))AND(((rt0.c0)|(rt1.c0))));SELECT DISTINCT ((((rt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (((rt1.c1)||(rt0.c1)))) FROM rt0, rt1 WHERE ((('-358370840' IN ()) IN ()));SELECT ALL DENSE_RANK() OVER () FROM t0, rt0; -- 0ms;
SELECT ((((rtreenode(rt1.c0, rt0.c1))AND(((rt1.c0)OR(rt1.c0)))))AND(0.152813871491418)) FROM rt0 WHERE (INSTR(CAST(-1.51678488E9 AS INTEGER), '' COLLATE NOCASE));SELECT DISTINCT CAST(((rt1.c0)<<(rt0.c2)) AS NUMERIC) FROM t0, rt1 WHERE (LIKELIHOOD(((x'1a44') BETWEEN (NULL) AND (x'e5776f11')), 0.5339902478985485));SELECT ((rt0.c1) IS FALSE) FROM rt0, t0 WHERE (((((NULL) IS FALSE))LIKE(CASE WHEN x'3571' THEN NULL ELSE NULL END))); -- 0ms;
SELECT DISTINCT (((CAST(rt1.c1 AS NUMERIC)))<=((LIKELIHOOD(rt0.c0, 0.8783397145982137)))) FROM rt1, t0 WHERE ((NOT (CAST('H%y5' AS REAL))));SELECT ((CASE rt1.c1  WHEN rt1.c2 THEN rt0.c0 END)GLOB((('2082769408')&(rt1.c2)))) FROM rt1 WHERE ((('')IS(0.525114613174149)) COLLATE BINARY COLLATE NOCASE) LIMIT -188213874;SELECT DISTINCT (NOT (rt1.c1 COLLATE BINARY)), ((rt0.c1 COLLATE BINARY) BETWEEN ((((t0.c0))>((rt1.c1)))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (x'1859')))), SQLITE_COMPILEOPTION_GET(((rt1.c2) NOT NULL)) FROM rt1, t0, rt0 WHERE (HEX(((x'')*(x'')))) ORDER BY CAST(CAST(rt1.c0 AS TEXT) AS BLOB); -- 0ms;
SELECT DISTINCT '菹!' FROM rt1 WHERE ((((('fyJX3_]')-(x'488e'))) NOT BETWEEN ((('') IS TRUE)) AND (((((((((x'd032')AND(x'')))AND('1036735029')))OR(NULL)))OR(NULL))))); -- 1ms;
SELECT ALL CASE WHEN 0.17965910877013203 THEN CAST(rt1.c0 AS INTEGER) WHEN ((rt1.c2)||(rt0.c2)) THEN rt1.c1 WHEN (((rt1.c2))<=((rt1.c0))) THEN t0.c0 COLLATE RTRIM END, AVG(CAST(rt0.c0 AS NUMERIC)) OVER (), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt1.c2))) COLLATE NOCASE FROM t0, rt1;SELECT ((LOWER(DISTINCT ''))<<(CASE rt1.c1  WHEN -1007823048 THEN rt0.c2 END)) FROM t0, rt1 WHERE (((((0.026894033642349324)OR((0x1b7e4000 IN ('V.14')))))OR(CAST(0.8295301281895926 AS TEXT)))) GROUP BY CAST(((((rt1.c2)AND(rt0.c0)))AND(t0.c0)) AS NUMERIC), ((((rt1.c2 IN (rt0.c2))))<=((CASE WHEN t0.c0 THEN rt1.c0 ELSE 0Xffffffff8a61e2a4 END))), UNLIKELY(0X299d92ca) HAVING HEX(CAST(rt0.c1 AS NUMERIC));SELECT DISTINCT COUNT((rt1.c0 IN (rt0.c2))) OVER () FROM rt0, t0;SELECT ALL RTRIM((- (t0.c0))) FROM t0, rt1 WHERE (((((0.32191313397313714) NOT BETWEEN (x'') AND ('൳f)[L'))) NOTNULL)); -- 0ms;
SELECT ALL ((((rt1.c2) NOT NULL)) NOT BETWEEN ((~ (t0.c0))) AND (((rt0.c2) IS TRUE))), rt0.c2, LIKELIHOOD(DISTINCT rt1.c0, 0.6568992028251955), (((rt0.c0))<(((rt1.c1 IN ())))), ((NULL)||(((rt1.c0)GLOB(rt1.c2)))), TOTAL(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))), (((((rt0.c2))>=((rt0.c2))))>(rt1.c0)) FROM rt0;SELECT DISTINCT ((((rt1.c0)AND(rt0.c2)))OR(rt0.c1)) COLLATE BINARY FROM rt0 WHERE (((((((((-1.482244456E9)AND('-865403645')))OR(-1973612412)))AND(-2.85268238E8)))AND(0.5654805405200586)) COLLATE BINARY) LIMIT 704580467 OFFSET -45901676;SELECT ((LIKELY(DISTINCT 0.996213023842373))>>(((rt1.c0) NOT BETWEEN (0.7372491655006209) AND (rt0.c0)))) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)>>(rt1.c2)) AS REAL) FROM t0 WHERE (CAST((~ (NULL)) AS BLOB));SELECT DISTINCT ((((CAST(rt0.c2 AS REAL))AND(rt1.c2 COLLATE NOCASE)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)) FROM rt1 LIMIT -376594850 OFFSET 1457788882;SELECT ALL (((((rt0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt0.c2, 0.7442062518920249, '-566333798')) AND ((rt1.c0, rt0.c1, rt0.c2))))<=(-3.7659485E8 COLLATE BINARY)), ((rt1.c2) IS TRUE) COLLATE NOCASE, (((rt1.c0) NOTNULL) IN ()) FROM rt1, rt0, t0; -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (NULLIF(rt1.c2, NULL)) AND ((rt1.c0 IN ()))) FROM rt0, t0 GROUP BY ((CAST(rt1.c0 AS BLOB))IS(((('759568814'))>=((rt1.c0))))) HAVING rt0.c1;SELECT ALL GROUP_CONCAT(((rt0.c2)/(-1.430344952E9))) FROM t0;SELECT DISTINCT CASE WHEN (rt0.c0 IN (rt0.c2, rt1.c2)) THEN (NOT (t0.c0)) ELSE ((rt1.c1) NOTNULL) END FROM rt0 WHERE (((((((0.740792015482359)OR('-18693948')))AND('-1005603127')))==(1843666286 COLLATE RTRIM)));SELECT DISTINCT (~ (CAST(rt1.c1 AS BLOB))) FROM rt0, t0 WHERE ((((NULL)) NOT BETWEEN ((CAST('215065473' AS TEXT))) AND ((((NULL) NOT BETWEEN (x'') AND (NULL)))))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR(((rt0.c1)<=(rt0.c2)))))OR((+ (rt1.c0))));SELECT DISTINCT '' FROM rt1, t0 WHERE (CAST((('-379228924') NOT BETWEEN (1.666777444E9) AND (0.9973350158064687)) AS NUMERIC)); -- 0ms;
SELECT ((((0xffffffffd0a51706)IS NOT(rt1.c0))) IS TRUE) FROM rt1, t0, rt0 WHERE ((~ (-1345843448)) COLLATE BINARY); -- 0ms;
SELECT ALL 0.026709348808013678 FROM rt1, t0 WHERE (ABS(0.07602559193358072 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT NTILE(((rt0.c2 COLLATE BINARY) BETWEEN ((~ (rt0.c0))) AND (LTRIM(rt0.c2, t0.c0)))) OVER ( PARTITION BY (+ ((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))))), CASE ((rt1.c2)>=(rt0.c2))  WHEN ((rt1.c0) NOTNULL) THEN (- (rt0.c2)) WHEN (t0.c0 IN ()) THEN '-1989744724' WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2))==((rt0.c1))) ELSE TYPEOF(DISTINCT rt1.c2) END, NULL, ((((((rt1.c1)OR(rt0.c0)))AND(rt0.c2))) IS TRUE)), LEAD(((((rt0.c1)>>(rt0.c1)))+(((((((((0.04264731927656429)AND(t0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))), NULL, (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((((t0.c0)/('-1542819785')))))) OVER (), ((rt0.c1)>>(rt0.c2)) COLLATE NOCASE FROM rt0, t0;SELECT '1201647733' FROM t0; -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT BETWEEN (((((rt0.c0)OR(rt1.c1)))OR(t0.c0))) AND ((+ (t0.c0)))) FROM rt0 WHERE (((- (-1743625748)) IN ()));SELECT DISTINCT ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (COUNT(rt0.c1)) AND (CASE WHEN t0.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN t0.c0 THEN rt0.c1 ELSE '-1462567183' END)), COUNT((NOT (rt0.c2))), (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) FROM rt0, t0, rt1 WHERE (((('')<>(NULL)) IN (CASE WHEN 0.03266008722750113 THEN x'3ef9' ELSE NULL END))); -- 0ms;
SELECT DISTINCT 0.91830937479432 FROM rt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 COLLATE BINARY THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c1)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c2)) WHEN ((rt0.c1) IS FALSE) THEN ((((((((rt1.c1)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(NULL)) ELSE ((rt1.c1)OR(rt1.c2)) END FROM t0 WHERE ((('䝔jO#' COLLATE RTRIM)|(((NULL)<=(NULL))))) GROUP BY rt0.c1;SELECT rt1.c0 FROM t0, rt0 INTERSECT SELECT ((((((rt1.c0)<=(rt1.c2)))OR((+ (rt1.c0)))))AND((~ (rt0.c2)))) FROM rt1, rt0, t0 WHERE (((((((0.2983414258252577)OR('-1818556626')))OR(''))) NOT NULL)) ORDER BY CAST(CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN x'' END AS REAL)  NULLS LAST;SELECT ALL ((rt1.c2 COLLATE BINARY) BETWEEN (((t0.c0) BETWEEN (rt1.c0) AND (rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, rt1 WHERE (((0.8770449530705589 IN (NULL, NULL)) IN ()));SELECT DISTINCT t0.c0 FROM rt0 WHERE ((((NOT (x'850d')))||((- (2.55528858E8)))));SELECT DISTINCT AVG(((((rt1.c2)OR(rt0.c2)))AND(rt1.c0))) FILTER(WHERE rt0.c2) OVER () FROM rt0, t0;SELECT DISTINCT (NOT (x'')) FROM t0 WHERE (CASE WHEN CAST('g0gᨋ*!n' AS BLOB) THEN (+ (915536427)) ELSE (NULL IN (x'4b6c')) END) GROUP BY ((rt1.c2) NOT NULL), ((((0Xffffffffd37eb27f) BETWEEN (rt0.c1) AND (t0.c0))) BETWEEN (((rt0.c1)|(rt0.c1))) AND ((rt1.c0 IN ()))), (- (rt0.c1)) COLLATE RTRIM LIMIT -1516784880 OFFSET -299220455;SELECT DISTINCT '', ((((((((CASE rt1.c0  WHEN 'wp35&>꽂᳣	' THEN rt0.c0 ELSE rt0.c0 END)OR((((rt0.c2))=((rt0.c0))))))OR(((rt0.c0)>=(rt1.c2)))))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)))OR(((rt1.c0) ISNULL))), GROUP_CONCAT(x'd40c') FROM rt0 WHERE ((0.03541045327519965 COLLATE NOCASE IN ()));SELECT DISTINCT COUNT(*) OVER ( ORDER BY (((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()) DESC, (((NOT (rt1.c1))) NOT BETWEEN (((-1e500)<=(t0.c0))) AND (((((rt1.c2)OR(t0.c0)))AND(rt1.c2))))  NULLS FIRST) FROM t0, rt1 WHERE (CASE WHEN CASE '403857874'  WHEN '-1671981126' THEN '-271372268' ELSE -1.754869263E9 END THEN ((NULL) NOT NULL) WHEN ((x'') IS FALSE) THEN CAST('435354617' AS NUMERIC) WHEN (('-1516784880')LIKE(0.15477338288991338)) THEN (('1271776131')>>(-2079468238)) END); -- 0ms;
SELECT ALL ((((rt0.c1) ISNULL)) IS TRUE), (((((('733005840')OR(rt1.c2)))AND(rt0.c0)))*(CAST(rt0.c0 AS BLOB))), (0.14019113529141036 IN ()), DENSE_RANK() OVER (), ((CAST(NULL AS REAL))=((+ (rt0.c0)))) FROM rt1, t0 WHERE (LOWER(((('')) NOT BETWEEN ((x'')) AND ((0.10574523553355686)))));SELECT (((rt1.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND (((rt1.c1 IN ())))) FROM t0, rt1; -- 0ms;
SELECT ((rt0.c0)LIKE(TOTAL(rt1.c2))) FROM rt0;SELECT DISTINCT CASE x''  WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) WHEN ((rt0.c2)||(x'3c8e')) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN 0.9198885156817842 WHEN 0.06495300587460784 THEN (+ (rt1.c0)) WHEN ((rt0.c0)IS('f')) THEN 1.626659711E9 ELSE NULL END FROM rt0, rt1 WHERE (CASE ('Rq0I*96T' IN ())  WHEN CASE WHEN NULL THEN 'Z' END THEN -1 COLLATE NOCASE END) ORDER BY rt0.c2 ASC; -- 0ms;
SELECT DISTINCT ABS((rt1.c1 IN ())), SUM(CAST(0xc97e273 AS NUMERIC)) OVER (), CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC) FROM rt0, t0 WHERE (INSTR((((NULL))<((x''))), ((('', '1091677890', '-1080390020', x'', '0.8189533815284746'))==((NULL, '-893077954', x'9b82', -843936073, x'298e'))))) EXCEPT SELECT DISTINCT (((((t0.c0, rt0.c0, rt1.c1)) NOT BETWEEN ((rt0.c1, rt1.c1, rt1.c2)) AND ((t0.c0, rt1.c0, rt0.c0)))) NOTNULL), ((CASE rt1.c1  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt1.c1 END)LIKE(((t0.c0)-(rt0.c2)))), NTILE((t0.c0 IN ())) OVER () FROM t0 WHERE ((+ (CASE 0.3624154087728695  WHEN x'f832' THEN x'' END)));SELECT DISTINCT ((NOT (rt1.c2)) IN ()) FROM t0, rt1, rt0 WHERE (((HEX(DISTINCT '20002146'))IS(((((((((-1.482244456E9)AND('')))OR(0Xfffffffffc8ed8fe)))OR('-2104996592')))AND(x''))))); -- 0ms;
SELECT DISTINCT QUOTE(((rt1.c2) NOT NULL)) FROM t0 LIMIT -1091981904 OFFSET -1825958439;SELECT ALL ((((((((((rt0.c0)OR(rt1.c0)))AND(rt0.c0)))OR(rt1.c2)))AND(rt0.c2))) IS FALSE) FROM rt0, t0, rt1 WHERE (((((((((((x'') IS TRUE))AND(x'')))OR((NULL IN ()))))AND((('966424155') NOT BETWEEN (x'696f') AND ('K2-1')))))OR(CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT (UPPER(DISTINCT t0.c0) IN ()) FROM rt0, rt1 WHERE (((((x'')*(0x271c34c3))) ISNULL)); -- 0ms;
SELECT DISTINCT '-1462567183' FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c1)OR(rt1.c1)))AND(rt1.c1)) IN ()) FROM rt1, t0, rt0; -- 0ms;
SELECT ALL ((x'') ISNULL), TOTAL(((rt0.c2) NOT BETWEEN ('1') AND (rt1.c0)) COLLATE BINARY) OVER (), SUM((((rt0.c2))=((rt0.c0)))) FROM rt0, rt1; -- 0ms;
SELECT ((((rt1.c2) BETWEEN ('N%}h%C') AND (x''))) NOT BETWEEN (IFNULL(rt1.c0, rt1.c0)) AND (((rt0.c0) BETWEEN ('>.8<H6>') AND (rt0.c1)))), ((CASE 0.25541341752039426  WHEN rt0.c1 THEN rt0.c2 ELSE rt1.c1 END)>=((- (rt1.c1)))), ((MIN(rt1.c2)) NOT BETWEEN (((rt0.c1)OR(t0.c0))) AND (CASE rt1.c0  WHEN NULL THEN '-2125720081' ELSE t0.c0 END)), CAST(NULL AS NUMERIC) COLLATE RTRIM COLLATE BINARY, ((('600167838')) BETWEEN (((((t0.c0, NULL, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt1.c2)) AND ((rt1.c2, t0.c0, rt0.c0))))) AND ((rt1.c0 COLLATE RTRIM))) FROM rt0 WHERE (CASE (((x'5df6', NULL, 1032660449)) BETWEEN ((x'3e3a', x'ccda', 1650712887)) AND (('-1179875492', '1969438258', x'')))  WHEN ((NULL) NOT BETWEEN (-1.976421516E9) AND (-6.12999514E8)) THEN 0x2721332e COLLATE BINARY WHEN x'' THEN CAST(x'7994' AS TEXT) WHEN (x'' IN ()) THEN (('!f1') ISNULL) WHEN (- (0.40036388895583674)) THEN 0.5315090227364622 WHEN TOTAL_CHANGES() THEN ((0.12375093038911633)IS(x'cca3a3de')) WHEN (('') NOTNULL) THEN ((x'') BETWEEN ('-1405974767') AND ('955174260')) WHEN ((0.4452337939959914) BETWEEN (0xb29a47b) AND (0.020693691696161864)) THEN ((((x'')AND(0.2531655162183779)))AND('!Oe+Y')) ELSE '-#HOB' COLLATE NOCASE END);SELECT DISTINCT rt1.c2 COLLATE BINARY COLLATE RTRIM FROM t0;SELECT ((0.9464021731638129 COLLATE BINARY)IS NOT(rt0.c2 COLLATE NOCASE)) FROM rt1;SELECT ((rt0.c1)>=(CAST(rt1.c2 AS INTEGER))), (NOT (((rt0.c0)IS NOT(rt1.c2)))), CAST((rt0.c2 IN (rt0.c1)) AS REAL) FROM t0;SELECT DISTINCT ((((((rt1.c1)IS(rt0.c2)))OR(((t0.c0) BETWEEN (rt1.c0) AND (0.04080734254716123)))))AND('')), (NOT (((rt0.c1)+(rt0.c0)))), (HEX(rt0.c0) IN ()) FROM t0 WHERE (((((NULL) NOTNULL)) NOT BETWEEN (NULL) AND (((0.9220761819402278) NOT BETWEEN (NULL) AND ('-231823947')))));SELECT DISTINCT rt0.c1, CAST(rt0.c1 COLLATE RTRIM AS REAL), COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt1 WHERE ((+ (((')湭')GLOB('')))));SELECT DISTINCT GROUP_CONCAT(UNLIKELY(rt0.c1)) FILTER(WHERE CASE rt0.c0  WHEN t0.c0 THEN rt0.c1 END COLLATE RTRIM) OVER (), ((LIKELIHOOD(x'', 0.31657566132057746)) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (CAST(rt1.c0 AS BLOB))), json_array(((rt1.c1) BETWEEN (t0.c0) AND (rt0.c2)), (((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), 0.40472755233179625, (((rt0.c0)) BETWEEN ((rt1.c0)) AND ((t0.c0)))) FROM t0, rt1, rt0 WHERE (CAST(CASE WHEN 0.6056579403214359 THEN 0.8495492025326343 WHEN NULL THEN '0.525114613174149' WHEN '561427473' THEN 0.05784920881863598 ELSE 'DL~a&?沒,' END AS BLOB)); -- 0ms;
SELECT ((((((rt1.c0)<=(rt0.c1)))AND(CASE WHEN x'' THEN rt1.c0 END)))OR(rt1.c2 COLLATE NOCASE)), TOTAL(((rt0.c0) IS FALSE)), json_valid(UPPER(rt0.c1)) FROM rt0, t0;SELECT ((((t0.c0)AND(rt1.c2)))AND(t0.c0)) COLLATE NOCASE FROM rt1 WHERE ((((((NULL, x'49dc', '1630358977')) BETWEEN (('-707773693', NULL, 0X4ae05b65)) AND (('215065473', NULL, 'y''E	J7''')))) IS TRUE));SELECT ALL rt0.c2 FROM rt1, rt0 WHERE ((((NOT (''))) BETWEEN ((- ('ap5y'))) AND (x'edc8'))); -- 0ms;
SELECT GROUP_CONCAT(NULL) OVER ( PARTITION BY (('㻤x')>(load_extension(t0.c0))), ((((rt0.c0)OR(rt1.c1)))AND(rt0.c2)) COLLATE BINARY GROUPS  CURRENT ROW) FROM t0 WHERE (((CAST(NULL AS BLOB)) NOT BETWEEN (((((NULL)AND('657832240')))AND(0.3739480276636856))) AND (((x'')AND(NULL))))) ORDER BY ((((CAST(rt1.c1 AS BLOB))OR(x'')))OR(((rt0.c0) IS TRUE)))  NULLS FIRST;SELECT rt0.c0 FROM rt0, rt1, t0 WHERE (TYPEOF(CAST(0.5585629272709084 AS INTEGER))) GROUP BY ((((rt0.c2) NOT NULL)) BETWEEN (((((rt1.c1)AND(t0.c0)))OR(rt1.c1))) AND (((rt1.c2)IS(rt1.c0)))) ORDER BY ((CAST(rt1.c2 AS BLOB)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((rt1.c0) ISNULL)))  NULLS LAST; -- 0ms;
SELECT rt0.c0, x'' COLLATE BINARY, '-1516784880' FROM rt1;SELECT DISTINCT COUNT(((rt0.c1) IS TRUE)) OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT AVG(((t0.c0) ISNULL)) FILTER(WHERE rt0.c1) OVER () FROM t0, rt1, rt0 WHERE ((((((-510211167)OR(x'')))OR(x'4e3e')) IN ())); -- 0ms;
SELECT ALL CASE WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) WHEN (~ ('-462258548')) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.44833776919173474) WHEN t0.c0 THEN (((rt0.c2)) BETWEEN ((x'b436')) AND (('-1430344952'))) END, ((((rt1.c1)%(rt1.c2)))<(json_valid(rt0.c0))), CAST(rt1.c1 AS REAL) COLLATE BINARY FROM t0, rt1;SELECT DISTINCT CASE WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 ELSE rt1.c1 END COLLATE BINARY, CAST(((t0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0)) AS INTEGER), ((((((((rt1.c2 COLLATE RTRIM)OR(((rt0.c0)>(t0.c0)))))OR(((rt0.c0)OR(rt0.c0)))))AND(rt0.c0)))AND(((rt1.c2) NOT NULL))) FROM t0, rt0;SELECT DISTINCT ((((((rt1.c2)AND(t0.c0)))AND(rt1.c0)))/(((((rt0.c0)OR(rt0.c1)))OR(x'')))), ((((((((MIN(rt1.c2))OR((((rt0.c2))<>(('c\np}5g~'))))))AND(((rt1.c1) BETWEEN (rt1.c1) AND (t0.c0)))))AND(0.8046100775593484)))AND((~ (rt1.c2)))), CASE ((rt1.c1) IS TRUE)  WHEN TOTAL(rt1.c2) THEN rt0.c1 ELSE (((t0.c0))>=((rt1.c0))) END FROM t0 WHERE (((((((((CAST(x'' AS INTEGER))OR(LIKE('0.8096990131525544', '0.9039944784071295'))))AND(NULL COLLATE RTRIM)))OR(LOWER(-1405889129))))OR(CAST('-294391591' AS BLOB))));SELECT DISTINCT LAST_VALUE(CASE LOWER(rt1.c2)  WHEN CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN t0.c0 THEN rt1.c0 END THEN rt1.c1 COLLATE RTRIM WHEN UNLIKELY(rt0.c1) THEN (((rt0.c2))==((rt0.c1))) WHEN ((rt1.c0)LIKE(rt0.c2)) THEN ((rt0.c2)>(rt1.c0)) ELSE ABS(rt1.c0) END) OVER () FROM t0, rt1, rt0 WHERE (((((CASE WHEN 0.7980125926307792 THEN '' WHEN NULL THEN x'' WHEN x'' THEN 0Xffffffff9c9eb505 ELSE 0.005201481898524096 END)OR((0.5208091083095404 IN ()))))OR((x'9c85' IN ())))); -- 0ms;
SELECT ALL (((((rt0.c2)OR(t0.c0)))AND(rt0.c2)) IN (CAST(rt0.c2 AS BLOB))) FROM t0, rt0, rt1; -- 0ms;
SELECT NULL COLLATE NOCASE FROM rt1, rt0 WHERE ((((- ('')))-(x'4f91'))); -- 0ms;
SELECT ALL ((rt0.c2)<=(CAST(rt1.c2 AS NUMERIC))) FROM t0 LIMIT -63253586;SELECT ALL ((((rt0.c0)||(rt1.c2)))>=(((((((((x'')OR(NULL)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c0)))), (((rt1.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), t0.c0, ((((rt0.c1)AND(rt1.c0)))OR(rt0.c1)))) AND ((((((((((t0.c0)OR(rt0.c1)))OR(rt1.c0)))AND(rt0.c1)))AND(rt0.c1)), (((rt1.c2))=((rt0.c2))), ((((t0.c0)AND(rt0.c2)))OR(rt0.c0))))), ((rt0.c0) NOTNULL) COLLATE BINARY FROM rt0, rt1, t0; -- 0ms;
SELECT rt0.c1, CASE WHEN (rt1.c0 IN ()) THEN rtreenode(rt0.c1, rt0.c0) ELSE MIN(rt0.c1) END, 0X7fffffffffffffff FROM rt0, t0 GROUP BY ((((rt0.c0, rt0.c2, t0.c0))!=((rt0.c0, rt0.c0, rt1.c0))) IN ()) HAVING rt1.c1;SELECT DISTINCT (((rt1.c0 IN ())) BETWEEN ((rt0.c0 IN (rt0.c0))) AND (GROUP_CONCAT(''''))) FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT COUNT((((rt0.c1, rt0.c2, 0x36526cab))<((t0.c0, t0.c0, rt0.c0)))) FROM rt0;SELECT DISTINCT (((rt0.c2 IN ())) NOT BETWEEN (('DXW' IN ())) AND (rt1.c1 COLLATE NOCASE)), (((rt0.c1))>=(((+ (rt1.c1))))), HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1))), (((rt1.c0 IN (rt0.c1)))<=('-285268238')), ((CAST(rt0.c0 AS REAL))>(rt0.c0 COLLATE BINARY)) FROM rt1 GROUP BY CAST(((rt1.c0)LIKE(rt0.c2)) AS REAL);SELECT ALL t0.c0 FROM t0, rt1, rt0 ORDER BY (0.43940595929060766 IN ()) COLLATE NOCASE  NULLS LAST, (((rt0.c2)) BETWEEN ((CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN NULL END)) AND ((CAST(rt0.c2 AS NUMERIC)))) DESC; -- 0ms;
SELECT ALL NULL FROM rt0, rt1, t0 WHERE ((((((((((('561427473')AND('nM\~oki''')))OR(CAST('-1405889129' AS NUMERIC))))OR(NULL)))OR((+ ('1091677890')))))AND(((((592000443)OR(NULL)))AND(0.26713827298458526))))) ORDER BY CASE UPPER(rt0.c0)  WHEN 0xffffffffead04bfa THEN ((rt0.c0) NOT BETWEEN ('0.9356420200620766') AND (rt1.c2)) END ASC  NULLS FIRST; -- 0ms;
SELECT ALL MAX(CAST(rt1.c0 AS BLOB)) FROM t0;SELECT DISTINCT GROUP_CONCAT(highlight(rt1.c0, rt1.c0, rt0.c2, rt0.c2)) FROM rt0, t0, rt1 WHERE (CASE (x'9520' IN ())  WHEN ((x'')LIKE('0.9157064183179361')) THEN (0.848707454777355 IN ()) END) LIMIT 41166141; -- 0ms;
SELECT DISTINCT (NOT (rt0.c1)) FROM rt0, t0; -- 1ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0, t0, rt1 GROUP BY ((0.6999068702138057) BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE NULL  WHEN t0.c0 THEN rt1.c1 ELSE '-376594850' END)), SUBSTR(((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)), (+ (rt0.c1))), ((((rt1.c0)GLOB(rt1.c2))) ISNULL) HAVING x''; -- 0ms;
SELECT ALL ((rt0.c2)/(((rt0.c1)AND(rt1.c1)))) FROM rt0, t0;SELECT DISTINCT ((((((((((0xffffffffe3e70476)<=(rt0.c0)))OR((((0.22840753234798583)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))))))OR('')))AND(((rt1.c1) BETWEEN (t0.c0) AND (rt1.c1)))))AND((rt0.c2 IN (NULL)))) FROM rt1 WHERE ((CAST(' 8\niOvb6' AS TEXT) IN ()));SELECT ALL (((CAST(rt0.c1 AS INTEGER), NULL, CASE WHEN rt1.c2 THEN rt1.c1 ELSE NULL END, (((rt0.c0))>=((rt1.c2))), ((rt1.c0)==('o,VDYt'))))>=((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END, rt0.c2, IFNULL(rt0.c2, 0.03483265856578921), (rt1.c0 IN ()), (x'' IN ())))) FROM t0 ORDER BY (((rt1.c0)/(t0.c0)) IN (((((((((rt1.c1)OR(rt0.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt0.c2)), CASE rt0.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END));SELECT ALL (('478732712')<<(rt0.c2)) COLLATE RTRIM, CASE WHEN ((rt1.c2) IS TRUE) THEN rt1.c2 COLLATE NOCASE END, ((rt0.c0) ISNULL) FROM rt0, t0 WHERE ((- (((NULL)<(NULL)))));SELECT DISTINCT FIRST_VALUE(((((rt0.c0)LIKE(rt1.c2))) NOT BETWEEN (((rt1.c1)AND(rt1.c2))) AND (rt1.c2))) OVER () FROM rt0, rt1, t0 WHERE (NULL) ORDER BY CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt1.c1)LIKE(rt0.c0)) ELSE (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2))) END; -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END) IS FALSE) FROM rt0;SELECT DISTINCT json_patch(((((((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt1.c2)))OR(rt1.c1)), ((rt0.c0)OR(rt1.c0))) FROM rt0, rt1 WHERE (CAST(((0.604349974440731) NOT BETWEEN (0.8975113026735275) AND ('179385575')) AS INTEGER));SELECT ALL NULL FROM rt1, t0, rt0 WHERE ((((('535147129')OR(0.8008375042542104)))GLOB((((x''))>=((0.31183185495150656)))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt1.c0)AND(rt1.c0)))AND(rt0.c2)) THEN ((rt1.c1)*(NULL)) ELSE (rt1.c0 IN (rt0.c2, rt1.c0)) END FROM rt0 WHERE (((TYPEOF(DISTINCT 0X4466a8f8)) BETWEEN (0.8524240124838701) AND ((('-1896639672') NOT NULL))));SELECT ((COUNT(*)) BETWEEN (((t0.c0) BETWEEN (NULL) AND (0.12223226043417279))) AND (((rt1.c2)>(rt1.c2)))) FROM rt0 WHERE (((CASE WHEN 0X30967930 THEN '-1525111118' WHEN '-1976421516' THEN NULL WHEN '-568129825' THEN 0.28738980091939015 ELSE x'' END) NOT BETWEEN (((NULL)LIKE('Zl!'))) AND (((x'') NOT NULL))));SELECT ALL (((rt1.c0)) BETWEEN (((- (rt1.c2)))) AND ((CAST(rt1.c2 AS NUMERIC)))) FROM rt1, t0 WHERE (rtreenode((((('1342603751')AND('*')))AND(NULL)), (0.6192384165376589 IN ()))); -- 0ms;
SELECT ALL (NOT (COUNT(rt1.c2))) FROM t0 WHERE (((x'' IN ()) IN ()));SELECT ALL ((((rt0.c2)|(rt1.c0)))IS NOT(CASE rt0.c1  WHEN rt1.c1 THEN rt0.c0 ELSE t0.c0 END)) FROM rt0, rt1, t0 WHERE (CAST(((('(mZE|[rW8', '1362283203', 617584310, 1.969438258E9, x'')) BETWEEN ((0.3428353393054151, 1.666777444E9, 0.35475790678746244, 0xf3b0f9a, '')) AND ((0.7816497911528478, '-1973612412', x'', '1519042428', 0xffffffff87733cc1))) AS BLOB)); -- 0ms;
SELECT CAST(CAST(rt1.c1 AS REAL) AS INTEGER) FROM rt0, t0 ORDER BY TRIM((t0.c0 IN (NULL))) DESC  NULLS LAST;SELECT DISTINCT 0x66ee2fd3 FROM rt1, t0 WHERE (LOWER('0.6718671035109988')) LIMIT 1362283203; -- 0ms;
SELECT ALL (((rt1.c0)) NOT BETWEEN ((COUNT(*))) AND (('1726885843'))), CASE 0.1701883904138609  WHEN (rt0.c0 IN (rt1.c0)) THEN ((((0.01588943077211602)AND(rt0.c2)))OR(rt0.c0)) END, '-612999514' FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT NULL) IN ()) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) NOT NULL)) OVER () FROM t0 WHERE (CAST(((((0.6592067615284545)OR('-1150516829')))OR('XS')) AS BLOB)) LIMIT -893077954; -- 1ms;
SELECT rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT CASE ((((t0.c0)AND(-4.62258548E8)))AND(rt1.c1))  WHEN ((rt0.c2)>=(t0.c0)) THEN ((rt1.c1)<(rt0.c1)) ELSE NULL END, (('179385575') NOT NULL), ((((((((CAST(rt0.c0 AS TEXT))AND(t0.c0)))AND(((((((((rt0.c2)OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))))OR(MAX(t0.c0))))AND(UPPER(t0.c0))) FROM t0 RIGHT OUTER JOIN rt1 ON (CAST(t0.c0 AS INTEGER) IN ()) WHERE (((((x'6690') ISNULL))LIKE((((((((('-1028560534')AND(NULL)))OR(0.15196861028011666)))AND(NULL)))OR(x'bc7a')))));SELECT DISTINCT rt0.c2 FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c0 IN ()) THEN (((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c1))) WHEN rt1.c1 THEN ((('2057254367', rt1.c1, rt1.c0))>=((rt1.c1, rt0.c2, rt0.c1))) WHEN (+ (t0.c0)) THEN ((t0.c0) NOT NULL) END FROM rt0, t0;SELECT DISTINCT rt0.c0 FROM rt0, t0, rt1; -- 4ms;
SELECT AVG(TOTAL(CASE rt0.c0  WHEN x'' THEN rt1.c0 END)) FROM rt1, rt0, t0 ORDER BY ((rt0.c2)LIKE(x'')) ASC  NULLS LAST;SELECT (+ (t0.c0)) COLLATE NOCASE FROM t0, rt0 WHERE ((~ ((('737897822') NOTNULL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(STRFTIME('1495754408', rt1.c2, rt1.c1)) OVER (), PERCENT_RANK() OVER (), SUM((rt1.c2 IN ())) FROM rt0 WHERE (CAST((~ (NULL)) AS REAL));SELECT DISTINCT ((((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 WHEN x'00f6' THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END)AND((rt0.c1 IN (rt0.c0)))))AND(((rt1.c0) IS FALSE))) FROM t0;SELECT ALL (((((((rt1.c2)AND(rt0.c0)))AND(rt1.c0))))==((rt1.c2 COLLATE RTRIM))) FROM t0;SELECT DISTINCT ((NOT (rt0.c0)) IN ()), ((((rt0.c2)>(rt1.c1))) IS FALSE), ((CAST(rt1.c0 AS NUMERIC)) NOT NULL) FROM rt1, t0 LIMIT -266550098 OFFSET 611678970;SELECT DISTINCT (((rt1.c1, t0.c0, rt0.c1))>=((rt0.c2, rt0.c2, rt1.c0))) COLLATE BINARY FROM t0 WHERE (CAST((0x612d4dc1 IN ()) AS BLOB));SELECT TOTAL(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c1))) FILTER(WHERE rt0.c1) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0, rt1; -- 0ms;
SELECT CAST(rt1.c0 COLLATE RTRIM AS REAL) FROM t0 WHERE ((((NULL)) BETWEEN ((((((((((NULL)AND(NULL)))AND(0.18657240499503236)))AND(NULL)))AND(0Xffffffffcb70b970)))) AND ((LIKELIHOOD(0.4733817904636122, 0.23015383186827643))))) ORDER BY ((rt1.c0)/((((rt0.c1))!=((0.16364702825890298)))))  NULLS FIRST, (rt1.c2 COLLATE RTRIM IN ()) ASC;SELECT MIN(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c1 END, ((t0.c0)-(rt0.c1))) FROM t0, rt0 WHERE (((((x'')<(''))) BETWEEN ((0.46149374159920387 IN ())) AND (((NULL) ISNULL))));SELECT DISTINCT (~ (rt0.c0)) COLLATE BINARY FROM rt1, rt0; -- 0ms;
SELECT ALL COUNT(((t0.c0)<(t0.c0))) FROM rt0, rt1 WHERE ((~ (LOWER(NULL)))) ORDER BY ((x'')<(((((rt0.c2)OR(t0.c0)))OR(rt1.c2))))  NULLS LAST;SELECT DISTINCT COUNT(*) OVER () FROM rt1, t0, rt0 WHERE (((CAST(-1708335365 AS NUMERIC)) NOT BETWEEN (DATETIME('-254722184', NULL, 0.3707199132325981, NULL, 762493888)) AND (TRIM('9223372036854775807')))); -- 0ms;
SELECT DISTINCT ((((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) FROM rt1, rt0 GROUP BY ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1)) COLLATE NOCASE HAVING (((LTRIM(rt0.c2, rt0.c1)))>=((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) LIMIT 1873530323;SELECT ALL ROW_NUMBER() OVER (), CASE WHEN CAST(rt0.c2 AS BLOB) THEN 0.8934372656873936 WHEN CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c2 END THEN ((rt0.c2) IS TRUE) WHEN rt0.c0 COLLATE RTRIM THEN rt1.c0 ELSE LIKELY(DISTINCT rt1.c2) END, RANK() OVER ( ORDER BY NULLIF((NULL IN ()), ((((rt1.c2)OR(x'')))OR(rt1.c0)))), GROUP_CONCAT(CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END) OVER (), CASE ((rt1.c1) IS TRUE)  WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ('' IN (rt0.c2)) ELSE ((rt1.c1) IS FALSE) END FROM rt0, t0;SELECT ALL rt0.c2 FROM rt0, rt1; -- 0ms;
SELECT rt0.c1 FROM rt1, rt0, t0 WHERE (((NULL COLLATE RTRIM) NOTNULL)); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 INNER JOIN rt1 ON ((rt1.c2 COLLATE BINARY) IS FALSE) WHERE (((((((0x2ad9b5c5)||(0.6589193720941168)))OR((NULL IN ('l1汉 hkc')))))OR((('-1989744724')|(NULL))))) UNION SELECT DISTINCT ((CASE WHEN rt1.c2 THEN rt0.c2 END)<(((((rt1.c1)OR('-902270601')))AND(rt1.c0)))) FROM rt1, t0, rt0 ORDER BY rt0.c1 DESC LIMIT 1204026413 OFFSET 1091677890;SELECT DISTINCT SUM('0.19697376707610825' COLLATE NOCASE) FROM rt0, rt1 WHERE ((((0.38673534599439907) IS FALSE) IN (0.19057265944641477))) ORDER BY rt1.c1; -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt0.c2)AND(rt1.c1)))OR(rt0.c2)) THEN x'' WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c2))!=((0.08959574677769411))) WHEN ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (NOT (rt0.c2)) END FROM t0, rt0, rt1 WHERE (load_extension((((('0.9015705687170946')OR('X|}BJ')))OR(0xffffffff91933f94))));SELECT DISTINCT (+ (rt0.c1 COLLATE RTRIM)) FROM rt0, t0 WHERE ((('1036735029' COLLATE RTRIM) BETWEEN (0x24cf96b6 COLLATE BINARY) AND ((NULL IN ())))) ORDER BY (((rt1.c2 IN ())) BETWEEN (((rt1.c1)GLOB(rt1.c1))) AND ((((rt0.c0))<((rt1.c1)))))  NULLS FIRST;SELECT DISTINCT rt1.c0 COLLATE BINARY FROM t0, rt0 GROUP BY ((((NULL) BETWEEN (rt0.c2) AND (rt1.c0))) IS TRUE), ((((0.3638831329864395)OR((('-1754869263') IS TRUE))))AND((((rt0.c2))<((rt1.c2))))), SUBSTR(t0.c0 COLLATE RTRIM, CAST(rt1.c1 AS INTEGER));SELECT DISTINCT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN '3i_A' END)OR(rt1.c1 COLLATE BINARY)))AND((((rt1.c1))<=((t0.c0))))), ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)&(((rt1.c0)|(rt0.c2)))), CASE WHEN ((rt0.c0)&(t0.c0)) THEN ((rt1.c0) NOTNULL) END FROM t0 WHERE (((((0.2734060744352801) ISNULL))IS((((x'2119'))<=((396096958)))))) GROUP BY (((((t0.c0)-(x'6dbc')), rt1.c0, 'c8,◡l}}'))<((CASE rt0.c2  WHEN '1036735029' THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, NULLIF(DISTINCT rt1.c1, rt1.c0), 0Xffffffff89e79176))) HAVING rt0.c1;SELECT DISTINCT CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC) FROM t0, rt1;SELECT ALL ((t0.c0) BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE BINARY, (((~ (t0.c0)))>((+ (rt0.c2)))), ((((t0.c0) BETWEEN (rt1.c1) AND (rt0.c2))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND (COUNT(*))) FROM rt0, rt1 ORDER BY ((rt0.c2)*(rt1.c0)) COLLATE RTRIM  NULLS FIRST;SELECT TOTAL((rt0.c1 IN ())) OVER (), CAST(((rt0.c0) BETWEEN (rt0.c2) AND (x'c805')) AS BLOB), x'' FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT '2025835998', JULIANDAY(CAST(rt0.c0 AS INTEGER), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (t0.c0)), ((rt1.c2)=(rt1.c1))), QUOTE(rt1.c0 COLLATE NOCASE) FROM t0, rt0, rt1 ORDER BY (~ (((NULL) IS TRUE))); -- 1ms;
SELECT DISTINCT 'nowZJuD' FROM t0, rt0, rt1; -- 0ms;
SELECT 0.6877275940051305 FROM rt1, t0, rt0; -- 0ms;
SELECT '}', SUM(((((rt1.c0)AND(NULL)))AND(rt1.c1))) OVER ( ORDER BY LIKELIHOOD(DISTINCT rt1.c0, 0.6968940313385703) COLLATE BINARY  NULLS LAST), ((((t0.c0)>(0.031646930133577444))) NOT BETWEEN (CASE WHEN '1262260294' THEN 0.691814550134743 ELSE rt1.c0 END) AND (((0.7590170562456022)<<(rt1.c1)))) FROM t0, rt1; -- 0ms;
SELECT COUNT(((rt1.c1) IS FALSE)) OVER ( ORDER BY ((CASE WHEN 0X1b1c3da7 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN t0.c0 THEN rt1.c1 ELSE rt0.c2 END)-(rt0.c0)), CASE '-24818754'  WHEN ((rt1.c2) ISNULL) THEN rt0.c0 COLLATE NOCASE WHEN 0.7134869930579885 THEN ((((((((0.7793106015345482)AND(rt0.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(rt0.c0)) WHEN NULL THEN ((rt0.c1)IS(t0.c0)) END  NULLS FIRST) FROM rt1, t0 ORDER BY (((t0.c0)%(rt0.c0)) IN ()) ASC  NULLS LAST;SELECT ((((((((((((((rt0.c0)%(rt1.c0)))OR((rt0.c0 IN (rt0.c0)))))OR(((t0.c0) ISNULL))))OR(((rt0.c0) ISNULL))))AND(COUNT(rt1.c2))))OR((((x'', 0Xffffffffc5d11fd7, '''')) NOT BETWEEN ((rt0.c0, rt0.c1, x'')) AND ((rt1.c0, rt1.c2, rt1.c1))))))OR(((((((((rt0.c2)AND(t0.c0)))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c1)))), CAST(t0.c0 AS TEXT), ((rt0.c0)<(t0.c0)) COLLATE NOCASE FROM rt1;SELECT DISTINCT CAST(((t0.c0) NOT NULL) AS REAL) FROM t0, rt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2)==(rt0.c0))  WHEN rt1.c1 COLLATE RTRIM THEN (((rt0.c0, rt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt1.c2, 0.4575556534565979, rt1.c2))) ELSE ((rt1.c2)*(t0.c0)) END WHERE (CASE WHEN (x'' IN ()) THEN TIME('997879792', -1.053341868E9, '-285504659', 0xffffffffc0fb1088, x'', x'', 0.9407746442418324) END); -- 0ms;
SELECT DISTINCT (('-2125720081') IS TRUE), TIME(((((rt1.c1)OR(rt0.c1)))OR(rt0.c2)), t0.c0 COLLATE NOCASE, ((rt0.c1)|(rt1.c0))), ((GROUP_CONCAT(rt1.c2)) IS FALSE), ((((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c2)))OR(CHAR(rt0.c2))))AND('㻤x')), CAST((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((x''))) AS NUMERIC) FROM rt0;SELECT ((((((rt1.c2))>((rt1.c2)))))!=((rt0.c1 COLLATE NOCASE))) FROM rt1 WHERE (NULL) ORDER BY (((rt0.c1)) NOT BETWEEN ((']Z')) AND ((((((((((rt0.c0)OR(rt1.c2)))AND(rt0.c2)))OR(0.8349206150673625)))OR(rt0.c2))))) ASC  NULLS FIRST;SELECT DISTINCT rt0.c1, ((((((((((((((t0.c0)OR(rt0.c2)))OR(rt1.c0)))AND(rt1.c1)))AND(rt0.c1)))OR(t0.c0)))AND(rt1.c1)))&(((t0.c0)&(rt1.c0)))), (NOT ((NOT (rt1.c0)))) FROM rt0 WHERE ((+ ((~ ('~rgBH')))));SELECT DISTINCT GROUP_CONCAT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))) COLLATE BINARY FROM t0 WHERE (((LIKE(x'', x''))<<(((x'') ISNULL))));SELECT DISTINCT rt0.c1 FROM rt1 WHERE ((CAST('-1150516829' AS TEXT) IN ())) LIMIT 1592951801 OFFSET -800565441;SELECT (((rt1.c2 IN (rt0.c2)))>(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE t0.c0 END)), (('')>=(((rt0.c0)GLOB(rt0.c1)))), COUNT(*), rt1.c0, 0xffffffff8f47007f FROM t0;SELECT DISTINCT (((((0.15979567124233707))<>((rt1.c1))))==((- (rt1.c1)))), ((rt1.c2 COLLATE NOCASE)AND(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c2 END)), (((((rt1.c0))!=((rt0.c2))))<<((((rt1.c2))>=((rt1.c1))))) FROM rt1 WHERE ((((+ (0.8432272592734756))) NOT BETWEEN (CASE '1446881348'  WHEN 0.36793381130004366 THEN '1431594778' WHEN x'' THEN '478685269' WHEN NULL THEN -294391591 ELSE x'e5a1' END) AND (CASE 0x110ec7a5  WHEN NULL THEN NULL WHEN '' THEN '-355447814' WHEN x'ec84' THEN NULL ELSE x'3edf' END))) LIMIT -1224085887 OFFSET -787764302;SELECT DISTINCT SUM(NULL) FROM rt0, t0, rt1 WHERE ((+ ((((x''))<=((NULL)))))) GROUP BY (((rt1.c1) IS TRUE) IN ()) HAVING (~ ((NOT (t0.c0)))); -- 0ms;
SELECT ALL SUM((rt0.c1 IN ())) OVER () FROM rt1, t0, rt0 WHERE (CASE ('-1092994737' IN ())  WHEN (- (NULL)) THEN (0.10051167633731506 IN ()) END); -- 0ms;
SELECT DISTINCT (((rt1.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((GROUP_CONCAT(rt0.c2), t0.c0, ((rt1.c0)+(t0.c0)))) AND ((HEX(DISTINCT t0.c0), MAX(t0.c0), CAST(0xffffffffa518a6b2 AS INTEGER)))), CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END COLLATE BINARY, IFNULL(DISTINCT ((((t0.c0)OR(rt1.c2)))OR(rt1.c2)), CAST(rt0.c0 AS TEXT)) FROM rt0, rt1 WHERE (x'');SELECT DISTINCT ((((((rt0.c1) IS FALSE))AND((~ (rt0.c2)))))OR(((t0.c0) IS TRUE))), ((((rt0.c2)|(rt0.c0))) NOT NULL), NULL FROM t0, rt1, rt0 WHERE (NULL); -- 0ms;
SELECT ((((MIN(rt1.c1))AND((rt1.c2 IN ()))))AND(json_object(rt0.c2, rt1.c0))), IFNULL('403857874', CAST(rt0.c0 AS NUMERIC)), CASE WHEN ((((rt1.c0)OR(rt0.c0)))AND(rt1.c1)) THEN ((t0.c0)<(t0.c0)) END FROM rt0, t0;SELECT DISTINCT (+ (COUNT(*))) FROM rt1, t0, rt0 GROUP BY '-1405889129', 'h閱ku&+懒?.', CAST(((rt0.c0)%(rt0.c2)) AS NUMERIC), ((((((((((t0.c0)OR(0.7829762046592545)))AND(rt0.c1)))OR(t0.c0)))AND(rt1.c2))) NOT BETWEEN (((rt0.c1)*(rt0.c0))) AND (((rt0.c2) IS FALSE))), (NOT (((((t0.c0)AND(rt0.c0)))AND(rt1.c2)))); -- 0ms;
SELECT ALL CASE WHEN rt1.c2 THEN GROUP_CONCAT(rt1.c1) WHEN ((((((((rt0.c0)AND(rt0.c1)))OR(t0.c0)))OR(rt1.c1)))OR('')) THEN LIKELY(DISTINCT rt0.c0) WHEN MIN(rt0.c1) THEN (((t0.c0))<>((rt0.c2))) ELSE ((rt0.c0) IS FALSE) END FROM rt1, t0, rt0 WHERE (((CASE x''  WHEN x'' THEN x'ddef' ELSE 0x1e207351 END) BETWEEN (LOWER(DISTINCT NULL)) AND (CASE NULL  WHEN x'' THEN '' END))); -- 1ms;
SELECT ((((0x14fdc445) ISNULL))IS NOT(((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c1)))) FROM rt0 ORDER BY ((((rt1.c0)<=(rt0.c2)))>>(((rt0.c0)&(rt1.c0))));SELECT (((rt0.c0 IN (rt1.c0))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0)))) FROM t0 WHERE (((((('')) BETWEEN ((NULL)) AND ((0X3836b5e6)))) IS FALSE));SELECT ALL (((rt0.c2)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((NULL))) FROM rt1, rt0, t0; -- 0ms;
SELECT ALL ((rt0.c0) BETWEEN (((rt1.c2) NOT NULL)) AND (((rt1.c0) IS TRUE))) FROM rt1, t0, rt0 WHERE ((NOT (((('-1896167197'))<=((NULL)))))); -- 0ms;
SELECT DISTINCT (((~ (rt1.c0))) IS TRUE) FROM rt1, rt0 WHERE (502797664); -- 0ms;
SELECT ALL (~ (t0.c0)), (((((rt1.c2)+(rt0.c0))))!=(((((rt0.c1, rt1.c0, rt1.c0))==((rt0.c1, rt0.c1, rt1.c2)))))), ((((rt0.c2)>(t0.c0)))>=(((rt1.c2)AND(rt0.c1)))) FROM t0, rt1, rt0 WHERE (CASE WHEN x'd260' THEN 'oC' WHEN NULL THEN NULL WHEN NULL THEN 0.36933822731384136 END COLLATE BINARY); -- 1ms;
SELECT DISTINCT ((0.048077754111797044)LIKE(ROUND(rt0.c0, rt0.c1))) FROM rt0, rt1 LIMIT 421633981 OFFSET 1036735029; -- 0ms;
SELECT ((CAST(rt0.c0 AS INTEGER))<<(((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c1)))), LAST_VALUE(((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR((rt0.c2 IN ()))))AND(CHANGES()))) OVER (), (CASE rt1.c2  WHEN rt0.c2 THEN rt1.c1 END IN ()) FROM rt0 FULL OUTER JOIN t0 ON NULLIF(CAST(rt0.c2 AS TEXT), ((rt0.c0) NOT BETWEEN ('-1462567183') AND (rt0.c0))) WHERE (((((x'')<(''))) NOT BETWEEN ((NOT (NULL))) AND (((NULL) BETWEEN (0.5332557907457971) AND (NULL)))));SELECT DISTINCT COUNT(CAST(rt1.c0 AS BLOB)) FROM rt0, rt1, t0 WHERE (0.915112019801987); -- 0ms;
SELECT ALL (CAST(rt1.c2 AS INTEGER) IN (((rt0.c1)AND(rt0.c1)))) FROM t0 WHERE (UNLIKELY(DISTINCT (+ ('-36180951'))));SELECT DISTINCT MIN('0.8295301281895926' COLLATE NOCASE) FROM rt1, rt0; -- 0ms;
SELECT FIRST_VALUE(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(IFNULL(DISTINCT t0.c0, t0.c0)))) OVER ( ORDER BY ((((rt0.c1)<(rt0.c0))) NOT NULL) ASC), ((((((rt1.c0)==(rt1.c1)))OR(load_extension(rt1.c0))))OR(((rt0.c2) BETWEEN (t0.c0) AND (0.7718210328204578)))), (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (UPPER(rt1.c0)) AND (CAST(rt0.c1 AS NUMERIC))) FROM t0;SELECT ALL x'' FROM rt0, rt1, t0; -- 0ms;
SELECT ALL ((((rt0.c1)&(rt0.c2))) BETWEEN ((((rt1.c0))<>((rt0.c2)))) AND (((rt0.c0)|(rt1.c0)))) FROM t0, rt1 WHERE (((((0xffffffff8f47007f) BETWEEN (x'') AND (1630358977)))||(CASE NULL  WHEN -1.80712292E8 THEN '870421541' END)));SELECT (CASE rt0.c2  WHEN rt1.c2 THEN 0Xffffffffc77b48d4 END IN ()) FROM t0, rt1, rt0 WHERE ((((0.09862982499821726 IN (NULL)))+((NULL IN ('-914526440'))))); -- 0ms;
SELECT ALL rt0.c2 COLLATE NOCASE COLLATE BINARY FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT ((rt0.c2) NOTNULL) COLLATE RTRIM FROM rt1;SELECT DISTINCT CASE WHEN ((rt1.c1) IS TRUE) THEN (('') IS FALSE) END FROM rt0 WHERE (((('421633981')) BETWEEN ((CAST('' AS TEXT))) AND ((NULL))));SELECT (- (((t0.c0)&(rt0.c1)))) FROM rt0;SELECT DISTINCT 0.22576008942730252 COLLATE BINARY FROM rt1, t0, rt0; -- 1ms;
SELECT ALL ((((((rt1.c0)AND(rt1.c0)))AND(rt0.c2)))IS NOT(TRIM(DISTINCT rt0.c0))) FROM rt1, t0, rt0 WHERE ((((0.37317550110437947))<>((4.42147032E8))) COLLATE BINARY); -- 0ms;
SELECT ((((rt1.c2)=(t0.c0))) IS TRUE) FROM rt1, t0, rt0 WHERE (((CASE x''  WHEN 0.1756070431232396 THEN -1352477266 WHEN 0.8477736110026243 THEN x'' WHEN 1.726885843E9 THEN x'3d9cb963' ELSE NULL END) NOT BETWEEN ('wﺒ' COLLATE NOCASE) AND ((~ (x'f6e1'))))); -- 0ms;
SELECT t0.c0 FROM t0 WHERE (0.16241093942130636); -- 0ms;
SELECT DISTINCT (((- (rt0.c1))) IS TRUE) FROM rt0; -- 0ms;
SELECT (- (0.17833285567467383)) COLLATE RTRIM FROM rt0, rt1 WHERE (((LOWER(DISTINCT '⤗b㉸tI\(*'))%(CASE WHEN x'' THEN x'' ELSE x'' END))); -- 0ms;
SELECT ((((0.24538697684695887)-(rt1.c1))) BETWEEN (CASE rt0.c0  WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c0 END) AND (((rt1.c1)IS(rt1.c0)))) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c2)<(rt1.c0)))!=((~ (x'8f5e')))), x'', COUNT(*) OVER () FROM rt1; -- 0ms;
SELECT ALL (((~ (rt0.c2))) NOTNULL), COUNT((((rt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) OVER (), ((((rt1.c1)>(rt1.c2)))<=((('')||(rt0.c0)))) FROM rt0;SELECT ALL (rt1.c2 COLLATE RTRIM IN ()) FROM t0, rt0, rt1 WHERE ((((((('421633981')OR(0.8198199507883387)))OR('1426194209'))) BETWEEN (CAST('ls' AS INTEGER)) AND (((x'aa6a')<=(x''))))); -- 0ms;
SELECT ALL ((rt1.c2 COLLATE NOCASE)<=(x'' COLLATE RTRIM)) FROM rt1 WHERE (CAST(('-2006880580' IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((rt1.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)) IN ()) FROM t0, rt0, rt1; -- 0ms;
SELECT ((((((((((rt1.c0) NOT BETWEEN (rt1.c2) AND ('845599073')))OR((((rt0.c0)) NOT BETWEEN ((0.6183921188300665)) AND ((x'24a7'))))))OR(UPPER(DISTINCT rt0.c2))))AND((rt0.c0 IN ()))))AND((- (rt1.c0)))) FROM rt0 WHERE (((((NULL) NOTNULL)) NOT BETWEEN ((x'' IN ())) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)GLOB(((rt0.c1)IS NOT(rt0.c0)))), rt0.c1) OVER () FROM rt0;SELECT DISTINCT ((t0.c0 COLLATE RTRIM)>=(MIN(rt0.c1))) FROM rt1, rt0;SELECT DISTINCT MAX(((rt0.c2)+(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((AVG(rt1.c2))IS(rt1.c1 COLLATE NOCASE)) FROM t0;SELECT ALL (~ (x'')) FROM rt0, rt1 WHERE (CAST(CAST(x'edde' AS INTEGER) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) NOT NULL) THEN rt1.c2 WHEN CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN NULL THEN rt1.c1 ELSE t0.c0 END THEN ((((rt1.c0)OR(2.082769408E9)))AND(rt1.c1)) WHEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)) THEN rt0.c1 ELSE rt1.c2 END FROM t0 WHERE (CAST(x'' AS INTEGER)) LIMIT 396096958;SELECT ((NOT (rt0.c0)) IN ()), TOTAL(((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c1))), (NOT (HEX(DISTINCT rt1.c2))) FROM rt0, rt1, t0 WHERE (('Nd' IN ())) ORDER BY NULL, ((((((rt0.c2, rt0.c2, rt0.c2, rt1.c2, t0.c0)) BETWEEN ((rt1.c0, rt1.c2, rt0.c0, rt0.c0, rt0.c0)) AND ((rt1.c2, t0.c0, '847126040', x'', rt0.c0)))))==(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((rt1.c2 IN ()))OR((rt1.c1 IN (-8.17560716E8)))))OR(t0.c0 COLLATE BINARY)) FROM rt1, t0, rt0 GROUP BY ((((NULL)AND(CASE t0.c0  WHEN rt0.c2 THEN rt1.c0 END)))AND(rt1.c0)), json_remove(((rt0.c0)/(rt0.c0)), CAST(rt1.c2 AS INTEGER)), x'' HAVING x''; -- 0ms;
SELECT ALL (((+ (rt1.c0))) NOT BETWEEN ((((t0.c0))>=((rt0.c2)))) AND ((((rt1.c1))==((rt0.c0))))), (NOT (CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt1.c0 ELSE rt0.c2 END)), ((x'' COLLATE RTRIM) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (HEX(rt0.c2))) FROM rt1;SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c0 THEN '0.5709183345516401' WHEN NULL THEN rt1.c1 WHEN rt0.c0 THEN NULL ELSE rt1.c0 END)LIKE(((((((((rt1.c0)AND(rt0.c1)))AND(rt1.c1)))AND(t0.c0)))OR(rt0.c0)))), ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)>=(rt1.c1)), CASE (rt1.c2 IN ())  WHEN ((rt0.c0) BETWEEN (rt1.c1) AND (t0.c0)) THEN (rt1.c0 IN (t0.c0)) END FROM rt1 WHERE ((~ (((0.24538697684695887)LIKE(NULL)))));SELECT json_array_length((- ('2082769408'))) FROM t0; -- 0ms;
SELECT ALL ((((rt1.c0)<(rt1.c2))) NOT BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) AND ((rt1.c2 IN (rt0.c1)))) FROM rt0, rt1; -- 1ms;
SELECT DISTINCT t0.c0 FROM rt1 WHERE ((('1574559801') NOT BETWEEN ('-1955742939') AND (x'ca97')) COLLATE BINARY);SELECT DISTINCT (((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((CASE rt1.c1  WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END)&(rt0.c0)) FROM rt1, rt0 WHERE (x'');SELECT DISTINCT (~ ((((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))) FROM rt1, t0, rt0 WHERE (json_remove(CAST(1.121631415E9 AS NUMERIC), (~ ('733005840'))));SELECT ALL ((((rt1.c1)AND(CASE WHEN -1.891172225E9 THEN t0.c0 ELSE rt0.c1 END)))AND(((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c0)))) FROM rt0, rt1;SELECT DISTINCT ((x'3032')|((NOT (t0.c0)))) FROM rt0, rt1 WHERE ('4 O[b');SELECT DISTINCT ((0.4532612327992299)>>((- (rt1.c1)))) FROM rt0, rt1 GROUP BY ((((rt0.c2) IS TRUE))&(((rt0.c1) ISNULL))); -- 1ms;
SELECT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN NULL WHEN t0.c0 THEN rt0.c2 END)) FROM rt1, rt0, t0; -- 0ms;
SELECT ALL CAST(((rt1.c2) NOT NULL) AS NUMERIC), (NOT (((((((((rt0.c2)AND(rt1.c2)))OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)))), ((MIN(rt0.c0))AND(MIN(t0.c0))) FROM rt0, rt1;SELECT DISTINCT SUM((~ (rt1.c1))) FROM rt1, rt0, t0 WHERE ((((('-501043447') NOT BETWEEN ('-1474941995') AND (x'14ca'))) NOT BETWEEN (CASE NULL  WHEN -1.243259756E9 THEN NULL END) AND (((NULL)>>(4.03857874E8))))); -- 0ms;
SELECT DISTINCT t0.c0 FROM rt0, rt1, t0 WHERE (CASE x'' COLLATE RTRIM  WHEN ((x'') BETWEEN (x'') AND (NULL)) THEN ((0X71b8930f) BETWEEN ('-1987754600') AND (x'')) ELSE (('')>(1867582929)) END); -- 0ms;
SELECT DISTINCT rt1.c1, LOWER(((rt0.c0)|(x''))), ((GROUP_CONCAT(rt1.c2))>=(rt0.c1 COLLATE BINARY)) FROM rt0;SELECT (((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))>=((rt1.c2 COLLATE NOCASE))) FROM rt1, rt0 WHERE ((((NULL))=(('-1876962306'))) COLLATE RTRIM) ORDER BY CAST(MIN(rt1.c2, rt0.c2) AS NUMERIC)  NULLS FIRST; -- 0ms;
SELECT ALL NULL, MIN(rt0.c1 COLLATE RTRIM), 0.1967049492699514 FROM rt0, t0, rt1 WHERE (CAST((('-893077954') IS TRUE) AS INTEGER)); -- 0ms;
SELECT rt1.c0, ((((CASE rt0.c2  WHEN t0.c0 THEN rt0.c0 WHEN rt1.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END)AND(CASE rt1.c2  WHEN '' THEN rt1.c0 ELSE NULL END)))OR(((((rt1.c1)AND('룰o')))OR(rt1.c0)))), (((('黎')>(rt0.c2))) NOT BETWEEN (((((((((rt0.c2)AND(t0.c0)))AND(rt0.c0)))AND(rt1.c2)))AND(rt0.c2))) AND ((('h2\n-') IS FALSE))) FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT ((rt1.c1)-(rt1.c2)) COLLATE RTRIM, (((NOT (rt0.c1))) NOT BETWEEN (rt1.c2) AND (CAST(rt0.c0 AS INTEGER))), (((rt1.c2)&(rt1.c1)) IN ()) FROM t0 WHERE ((((((x'')) NOT BETWEEN ((0.9273910942246897)) AND ((x'd2f0'))))*(CASE -349199370  WHEN x'' THEN x'' ELSE '' END)));SELECT ALL COUNT(((((((((((((rt1.c0)AND(rt0.c2)))OR(rt0.c0)))OR(0xffffffffa7a6be98)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))) OVER () FROM rt1, rt0 WHERE ((((0.5796011288034618, 1666777444, 1666777444)) BETWEEN ((((((NULL)OR('/a+')))OR(x'')), CASE NULL  WHEN x'' THEN x'7f6a' ELSE '618388917' END, (('-1510079096') BETWEEN (NULL) AND (NULL)))) AND ((((x'') ISNULL), ((0.4980336997417961) ISNULL), (~ (x''))))));SELECT DISTINCT ((~ (rt1.c1)) IN (x'')) FROM rt0, t0, rt1 WHERE ('232306914'); -- 0ms;
SELECT UPPER((+ (rt0.c0))) FROM rt1, rt0 WHERE (((LIKELIHOOD(DISTINCT x'b448', 0.022662738174477726))>((x'4f29' IN ('h*3_'))))); -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(-6.3253586E7)) AS REAL), NULL, (TOTAL(rt0.c2) IN ((((rt0.c1))<=((rt0.c2))))) FROM t0 GROUP BY (((rt1.c2 IN (rt0.c2, rt0.c1)))&(((rt0.c1)OR(rt1.c2))));SELECT DISTINCT ((((rt0.c2) BETWEEN (t0.c0) AND (rt1.c2)))IS NOT(((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))) FROM rt1 WHERE (((((0.4910337374862753)IS NOT(0.42834095780501036))) BETWEEN ((((x'', 0.942849758425265, 'e+将')) NOT BETWEEN ((761026902, '?顏	*n', '')) AND (('211280499', '\n<T\+', x'')))) AND ((~ (x''))))) ORDER BY 1333111125 DESC;SELECT ALL ((((((rt1.c1) IS TRUE))AND(((((((((x'c447')OR(rt0.c0)))OR(rt0.c2)))OR(t0.c0)))AND(rt1.c2)))))OR((+ ('-1482244456')))), CAST((((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))) AS REAL), NTILE(x'') OVER () FROM rt1, t0 EXCEPT SELECT (((((rt0.c0) ISNULL)))>((((rt0.c0)<(rt0.c1))))), NTILE(((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))<<(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) OVER ( ORDER BY ((((rt0.c0) NOTNULL))+(LOWER(DISTINCT rt1.c1))) ASC  NULLS LAST, (NOT (UPPER(DISTINCT rt1.c1)))  NULLS FIRST), ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 ELSE t0.c0 END) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (t0.c0 COLLATE RTRIM)) FROM rt0 WHERE ((((+ (x'')))LIKE(823057375 COLLATE RTRIM)));SELECT DISTINCT (- (((((rt0.c0)OR(t0.c0)))AND(rt0.c1)))), ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))/(((rt1.c2) ISNULL))), (rt1.c2 COLLATE RTRIM IN ()) FROM t0, rt0 WHERE ((- ('-821169952')) COLLATE NOCASE);SELECT ALL rt0.c0 FROM rt0, rt1, t0; -- 0ms;
SELECT ALL '-1525111118' FROM rt1, rt0 WHERE (CAST((('X27P4迍m[') IS FALSE) AS TEXT)); -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM)IS(((rt1.c1)IS NOT(t0.c0)))) FROM rt1;SELECT DISTINCT LEAD(((((((t0.c0)OR(t0.c0)))AND(t0.c0)))||(((t0.c0) IS FALSE))), (((t0.c0, 'Ꮳ෺熤왬i1', t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, ((t0.c0)>=(t0.c0)), CAST(t0.c0 AS TEXT))) AND ((CAST(t0.c0 AS INTEGER), ((t0.c0) NOT NULL), t0.c0 COLLATE BINARY))), ((t0.c0)&(t0.c0)) COLLATE RTRIM) OVER (), ((((rt0.c1) ISNULL))>>(((t0.c0) IS TRUE))), COUNT((((rt1.c2, t0.c0, rt0.c2, rt1.c1, rt0.c1)) NOT BETWEEN ((t0.c0, rt0.c0, rt1.c1, rt1.c1, rt1.c0)) AND ((rt0.c1, t0.c0, NULL, rt0.c1, t0.c0)))) FILTER(WHERE ((x'') NOT NULL)) OVER () FROM t0 WHERE (((((('ap5Y')AND(x'39e9')))AND('-1525111118')) IN ())) LIMIT -1430344952 OFFSET -1584005286;SELECT DISTINCT NTILE((+ (((t0.c0)LIKE(t0.c0))))) OVER (), ((rt1.c2)<(rt1.c2)) COLLATE BINARY, TOTAL(((rt1.c0)|('u'))) OVER () FROM t0 WHERE (CAST(x'1d9c' COLLATE BINARY AS REAL)) GROUP BY ((rt0.c1 COLLATE NOCASE)GLOB(rt1.c1 COLLATE BINARY)) HAVING MAX((((rt0.c0, rt1.c2, rt1.c0))!=((9.50451456E8, rt0.c0, '837762084'))), CASE WHEN t0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c2 END);SELECT DISTINCT ((((rt0.c1 COLLATE BINARY)AND(CAST(t0.c0 AS BLOB))))AND(MIN(rt1.c1))), LAG(rt1.c2, (((rt1.c1)) NOT BETWEEN ((((((((((((((rt1.c2)OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))) AND ((HEX(rt1.c1)))), (((rt1.c2)) NOT BETWEEN ((((0xcd1a381) NOT BETWEEN (rt1.c0) AND ('~ﻚ^JbE%C룅')))) AND ((CAST(rt1.c1 AS REAL))))) OVER (), (~ (((rt1.c1)/(rt0.c0)))) FROM rt1;SELECT ((((((((((rt1.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(t0.c0)))<<(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 ELSE t0.c0 END)), LAG(CAST('' AS INTEGER), ((((rt1.c2) IS TRUE)) NOT BETWEEN ((rt1.c0 IN (rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC))), CAST(((t0.c0)OR(rt1.c2)) AS BLOB)) OVER (), ((0.8057465986414426) BETWEEN (rt0.c0 COLLATE BINARY) AND (CAST(rt0.c1 AS NUMERIC))) FROM t0, rt1, rt0 WHERE (CASE WHEN ((NULL) ISNULL) THEN ((0.9157450215515432) ISNULL) ELSE (((NULL)) BETWEEN ((x'c2a2')) AND ((x''))) END); -- 1ms;
SELECT DISTINCT ((rt1.c1 IN (rt0.c1)) IN ()), MAX(TOTAL(rt0.c0) COLLATE RTRIM), rt0.c0 FROM rt1, t0, rt0 WHERE (((CAST(-34842334 AS INTEGER))>>((((''))!=((0.8246246328161285))))));SELECT ALL COUNT(NULL) OVER () FROM rt1 INNER JOIN t0 ON (((rt0.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((rt1.c2 COLLATE BINARY))) WHERE (UPPER(NULL) COLLATE NOCASE);SELECT '0.0933515256244476', ((((rt0.c2)>>(rt1.c2))) BETWEEN (((rt1.c1)>=('{XDhL묥''|'))) AND (((rt0.c1)>=(rt0.c2)))), ((((rt1.c1 IN (rt0.c0))))<((CASE rt1.c0  WHEN t0.c0 THEN rt1.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END))) FROM rt0 WHERE (HEX(DISTINCT 0.7637014441542426 COLLATE RTRIM));SELECT ALL x'', ((rt0.c0)==(t0.c0)) COLLATE RTRIM, ((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))*('-273962389')) FROM rt1, rt0;SELECT DISTINCT (NOT (t0.c0)) COLLATE RTRIM FROM t0 WHERE (((CAST(x'349d' AS TEXT)) BETWEEN ((('0.37972405797386566')AND(x'f8fa'))) AND (PRINTF('1574559801')))) LIMIT -1773777997; -- 0ms;
SELECT DISTINCT NTH_VALUE(rt0.c0, (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) IN ())) OVER (), ((rt0.c1)==(rt1.c1)) COLLATE BINARY, TOTAL('1256201041') OVER () FROM t0, rt0 WHERE (CASE CASE 1.592951801E9  WHEN 1.457788882E9 THEN 0.8179517286664475 WHEN 0.33828362151379776 THEN x'' WHEN 0.11897005932947113 THEN NULL END  WHEN ((NULL) NOT NULL) THEN CAST(-1937558375 AS NUMERIC) END);SELECT t0.c0 FROM rt1, t0 WHERE ((((~ ('-1955742939')))AND(((0X3f6124aa) NOT BETWEEN (NULL) AND (715781448))))); -- 0ms;
SELECT ALL rt1.c0, TOTAL((rt0.c2 IN ())), CAST(t0.c0 AS BLOB) COLLATE RTRIM COLLATE NOCASE, ((((t0.c0)<>(t0.c0)))GLOB(2.55528858E8 COLLATE BINARY)), rt0.c2 FROM t0 FULL OUTER JOIN rt1 ON (~ (x'' COLLATE RTRIM)) WHERE (((CASE x'5405'  WHEN NULL THEN '183998228' ELSE 0.9659731892918586 END) NOT BETWEEN (((NULL) IS FALSE)) AND (CAST(NULL AS REAL))));SELECT (NULLIF(DISTINCT t0.c0, t0.c0) IN ()) FROM rt1, t0 WHERE ((((- ('783683653'))) NOT BETWEEN (((((NULL)AND(x'05aabba9')))AND(652621971))) AND ((('vT()y|')=(''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)<>(rt1.c1))) NOT NULL), ((CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 END)AND((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))), (((((rt0.c2, rt1.c1, rt1.c2))=((rt1.c1, '-1569205209', rt0.c2))))|(COUNT(t0.c0))) FROM rt1, t0;SELECT DISTINCT GROUP_CONCAT(((rt1.c1)>(rt1.c1))), ((((rt1.c0) IS TRUE))!=(((rt0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))), (((rt0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((CASE rt1.c1  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END, ((t0.c0)>>(rt1.c1)), LIKELY(DISTINCT rt1.c1))) AND ((((rt1.c0) IS TRUE), rt0.c2, ((rt1.c1)<(rt1.c1))))) FROM rt0;SELECT DISTINCT ((CAST(rt0.c2 AS REAL))LIKE(CAST(rt0.c2 AS NUMERIC))) FROM t0, rt0 WHERE (CASE WHEN (('370795132')-(x'9d80')) THEN ((NULL)AND(1697789272)) WHEN LIKELY(0.3251932586745806) THEN CAST('5,o-ᜄ' AS INTEGER) WHEN NULL COLLATE RTRIM THEN (+ (0.9653210134232318)) ELSE ((((((((x'')AND('ql/9?ep')))AND(NULL)))AND('ႄ)')))OR('1928257505')) END); -- 3ms;
SELECT DISTINCT rt1.c2 FROM t0;SELECT DISTINCT (NOT (rt1.c0)), (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE WHEN t0.c0 THEN rt0.c0 END)), NTILE(((('	Z', t0.c0, t0.c0)) NOT BETWEEN ((x'b07c', CAST(t0.c0 AS TEXT), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -1.028560534E9 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND (((+ (t0.c0)), ((t0.c0)GLOB('1457788882')), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) OVER () FROM t0 GROUP BY rt0.c0;SELECT ALL SUM(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 END) OVER () FROM rt0, rt1 WHERE (((((x'6bdd') NOT BETWEEN (-57539174) AND (x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT SUM((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))), ((((CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(0xffffffff97827c8c)))AND((rt1.c0 IN (NULL)))), ((((((rt0.c2)AND(rt0.c2)))AND(rt1.c1)))|(((rt0.c0)>>(rt1.c0)))), NULL, COUNT(*) FROM rt1, rt0 WHERE (x'd4a9');SELECT DISTINCT (NOT (rt0.c2)) FROM rt0; -- 0ms;
SELECT ((rt0.c2 IN ()) IN (COUNT(t0.c0))) FROM rt0, rt1, t0 WHERE (((CAST('-561741278' AS BLOB)) NOT BETWEEN (((((((((((((x'8a40')OR(0.9725560752935624)))OR(x'')))AND(0.9502737317018874)))AND('v\r-')))AND('')))AND(0.9085654970749523))) AND (((x'') ISNULL)))) GROUP BY (((((((('[^')OR(rt0.c1 COLLATE RTRIM)))OR(((rt1.c0)IS NOT(rt1.c1)))))OR((- (rt0.c1)))))AND(((rt1.c1)<>(rt1.c1)))); -- 0ms;
SELECT DISTINCT 0.9476102293680437, GROUP_CONCAT(rt0.c2 COLLATE RTRIM), ABS(rt1.c0) FROM rt0, rt1; -- 0ms;
SELECT ALL rt1.c2 FROM rt0 WHERE ((~ ((0.20946490021667974 IN ()))));SELECT DISTINCT CASE WHEN rt1.c0 THEN TYPEOF(DISTINCT rt0.c2) WHEN UNLIKELY(DISTINCT rt0.c0) THEN ((rt0.c2)<(t0.c0)) WHEN 0.5910960476565157 THEN NULL ELSE t0.c0 END, load_extension((NOT (t0.c0))), ((x'3ad661d5') NOT NULL) FROM rt1, t0, rt0;SELECT DISTINCT ((((rt0.c1)/(rt0.c1))) ISNULL) FROM t0 LIMIT 1216955975;SELECT DISTINCT (((((((((rt0.c1 IN ()))AND(((rt1.c1)>(rt1.c1)))))AND((~ (rt1.c0)))))OR(((rt1.c0) IS FALSE))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))))), ((rt0.c2) NOT BETWEEN (COUNT(x'e66aa5e62fa5')) AND (rt0.c1)), AVG(COUNT(CASE rt1.c1  WHEN rt1.c0 THEN rt0.c2 END)) FROM t0, rt1;SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER)) IS TRUE), (~ (rt0.c0)), TOTAL(highlight(rt0.c1, rt1.c1, rt1.c0, rt0.c0)) OVER () FROM rt1, t0, rt0 GROUP BY ((((rt1.c1) IS TRUE))|((+ (t0.c0)))) HAVING ((rt1.c2) NOT BETWEEN (load_extension(rt1.c1)) AND (CAST(rt0.c1 AS INTEGER)));SELECT (((NULL)) BETWEEN ((UNLIKELY(DISTINCT rt1.c1))) AND ((ABS(t0.c0)))) FROM rt0, t0, rt1; -- 0ms;
SELECT FIRST_VALUE((~ ((NOT (rt1.c0))))) OVER () FROM rt0, rt1 WHERE ('-1569772429') GROUP BY ((((rt0.c1)OR(rt0.c0)))AND(rt1.c1)) COLLATE NOCASE COLLATE NOCASE, ((x'')IS NOT(NULL)), NULL; -- 1ms;
SELECT DISTINCT CASE '748547984'  WHEN CAST(t0.c0 AS NUMERIC) THEN (rt1.c2 IN ()) WHEN ((rt1.c2) NOTNULL) THEN CAST(rt0.c0 AS TEXT) WHEN 1765568400 THEN ((rt0.c0)>(rt0.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c1 END END FROM rt1;SELECT DISTINCT TYPEOF((('2082769408') BETWEEN (rt0.c0) AND (x''))), (t0.c0 IN ()) COLLATE BINARY, rt1.c0 FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE))>(json_array_length(t0.c0, t0.c0))) FROM rt0, rt1, t0 ORDER BY json_quote((rt1.c1 IN ())) ASC  NULLS FIRST;SELECT ALL GROUP_CONCAT((rt1.c1 IN ())) FROM t0 WHERE ((NOT ((('1928257505') BETWEEN (x'') AND ('-1053341868'))))); -- 0ms;
SELECT TOTAL(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END) FROM t0, rt0;SELECT ((rt1.c1) IS TRUE) COLLATE RTRIM FROM rt0, t0 WHERE (UNLIKELY((+ (0.3274689228833014))));SELECT DISTINCT ((rt0.c2) NOT BETWEEN ('-1976421516') AND (CASE WHEN rt1.c2 THEN rt0.c2 END)), (((((rt0.c1 IN ()))OR(((rt1.c2) BETWEEN (t0.c0) AND (rt0.c2)))))OR(GROUP_CONCAT(t0.c0))), (((((((((NULL IN ()))AND(((((rt1.c2)OR(rt0.c0)))OR(rt1.c0)))))AND((- (rt1.c2)))))AND(CAST(rt0.c0 AS BLOB))))AND((((rt0.c1))<((rt0.c0))))) FROM rt0, rt1, t0 ORDER BY rt0.c2 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL COLLATE NOCASE FROM t0, rt1; -- 1ms;
SELECT DISTINCT (CASE WHEN rt1.c0 THEN rt0.c2 END IN ()), ((CAST(t0.c0 AS BLOB))<<('0.1818791447886774')), (((((((((((((rt0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt0.c2)))AND(t0.c0)))OR(rt1.c2)))OR(rt1.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL CAST((1887075548 IN ()) AS INTEGER) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))+(rt1.c2)) FROM rt0, t0 WHERE (CASE ((x'393f') NOT BETWEEN ('') AND ('hL몌Q'))  WHEN (~ ('#骛')) THEN ((NULL) NOT NULL) END);SELECT '}O' FROM rt0 INTERSECT SELECT ALL ((((((rt1.c0) ISNULL))AND(((rt0.c2)*(rt0.c1)))))AND(((rt0.c2)<=(737897822)))) FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT LEAD(CAST(rt1.c0 AS NUMERIC), ((t0.c0) NOT BETWEEN ((+ (rt1.c0))) AND (rt1.c2 COLLATE RTRIM)), (~ ((rt1.c2 IN ())))) OVER ( ORDER BY (~ (t0.c0 COLLATE RTRIM)) DESC) FROM t0, rt1 WHERE (CAST((((x'a6b4')) NOT BETWEEN ((0.38787849181204215)) AND (('~z3cX'))) AS REAL)) LIMIT -2027791140 OFFSET 9223372036854775807; -- 0ms;
SELECT DISTINCT CAST((~ (rt1.c0)) AS BLOB) FROM rt1, rt0 WHERE (((((((((NULL COLLATE NOCASE)OR((x'' IN (x'')))))AND(((((0.7342909318907508)AND('c')))AND(NULL)))))OR(((0X2494e0c2)*(NULL)))))AND((0xffffffffe82d6426 IN ())))) LIMIT 613736642; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN ())) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (CAST(rt1.c1 AS INTEGER))) FROM rt1;SELECT ALL (rt1.c0 IN ()) COLLATE BINARY FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT json_insert(((rt1.c0)-(rt0.c1)), COUNT(*), ((t0.c0)OR(rt1.c2))), GROUP_CONCAT(((rt1.c0)GLOB(rt1.c2))) OVER (), COUNT(MIN(t0.c0)) FROM rt1, t0 WHERE (((json_array(0.6553977707086381, '396096958'))|(((NULL) NOTNULL))));SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c0 AS BLOB))) AND ((((((rt0.c2)AND(x'')))OR(rt0.c2))))) FROM rt0 WHERE (CASE CASE WHEN '-1772592860' THEN '-817560716' WHEN 950451456 THEN NULL WHEN 0.12068688774758074 THEN 'ub!<' ELSE 0.8091014734286589 END  WHEN (~ ('-1966319565')) THEN '1272394141' COLLATE NOCASE WHEN ((0xffffffffda1a31d8)>(x'6a2d')) THEN '1495754408' COLLATE BINARY WHEN ((((NULL)OR(0.5658641354571767)))AND('}')) THEN ((NULL) ISNULL) ELSE ((NULL) NOT NULL) END) LIMIT 556456894 OFFSET -988376521;SELECT ALL CASE WHEN SUM(rt0.c2) THEN rt1.c0 END FROM t0, rt1;SELECT DISTINCT CASE SQLITE_VERSION()  WHEN ((t0.c0)<<(rt1.c0)) THEN '613736642' END FROM rt0, rt1 WHERE (((('0.0933515256244476') NOT NULL) IN ()));SELECT DISTINCT (((((((((((rt0.c1, rt1.c0, rt0.c0))>(('BE', rt0.c2, rt1.c2))))OR(GROUP_CONCAT(rt1.c0))))AND(AVG(rt0.c2))))AND(((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt1.c1)))))OR((t0.c0 IN (rt0.c2)))) FROM rt1 WHERE (((NULL COLLATE NOCASE)|((+ (NULL))))) ORDER BY (((rt0.c2 IN ())) BETWEEN ((- (rt0.c2))) AND ((+ (rt1.c1))))  NULLS LAST, (rt0.c2 COLLATE NOCASE IN ()) DESC  NULLS FIRST, ((((rt0.c2)>=(rt1.c2)))-(((rt0.c2)+(rt0.c0)))) ASC, (((0.9964788859016239) IS TRUE) IN ((((NULL, NULL, t0.c0)) BETWEEN ((t0.c0, rt0.c2, t0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))) ASC;SELECT DISTINCT ((rt0.c1) IS FALSE), ((rt1.c0)>>(rt0.c0)) COLLATE NOCASE, CASE WHEN (rt0.c1 IN ()) THEN '' ELSE (NOT (rt1.c1)) END FROM rt0, t0 WHERE (UPPER(CAST(0.20565392638314095 AS REAL))) GROUP BY (((((rt0.c1))<>((rt0.c2))))IS((((rt1.c1))=((rt1.c1))))) HAVING (~ (((rt0.c0) BETWEEN (t0.c0) AND (rt1.c2))));SELECT ALL (((IFNULL(rt0.c1, NULL)))=((CASE WHEN rt0.c0 THEN rt1.c2 END))) FROM t0, rt1;SELECT DISTINCT (NOT (((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))) FROM rt0 WHERE (ABS((((('')AND(0.45073112247394986)))OR(0X3cdc2b75)))); -- 0ms;
SELECT CAST((NOT (rt1.c2)) AS INTEGER) FROM t0, rt1, rt0 WHERE ('140861217') ORDER BY t0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT ((((rt1.c0))<((rt1.c1))))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((((rt0.c1)AND(rt1.c2)))AND(0.2577858560412568)))OR(t0.c0)))OR(rt0.c2)) COLLATE NOCASE FROM rt0 FULL OUTER JOIN rt1 ON (((((rt1.c1)AND(rt1.c1)))AND(rt0.c1)) IN ());SELECT DISTINCT ((COALESCE(rt1.c0, rt1.c2))GLOB(((((rt1.c0)OR(t0.c0)))OR(rt1.c1)))) FROM t0;SELECT ALL ((rt0.c1 COLLATE BINARY)==(NULL)) FROM rt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT rt0.c1, rt0.c1) COLLATE RTRIM, ((((((rt1.c0) ISNULL))AND(CAST(rt0.c0 AS REAL))))OR(((((((((((((rt1.c2)OR(rt0.c2)))OR(t0.c0)))AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c2)))), ((COALESCE(rt0.c0, rt1.c2, rt0.c1, rt1.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c1))<=(((rt1.c2) ISNULL))), json_valid(CAST(rt1.c0 AS BLOB)), ((SUM(rt1.c1)) IS TRUE) FROM rt1;SELECT ((rt1.c0)*(((rt0.c2)LIKE(rt0.c2)))) FROM t0 WHERE (((((0.20536456945202164) IS TRUE))OR(((x'') IS FALSE))));SELECT DISTINCT ((((NULL)-(rt1.c2)))<<(((rt1.c2) ISNULL))) FROM rt1, t0 WHERE ((((((('') NOT BETWEEN ('215065473') AND (0.6156433601978395)))AND(((('')) BETWEEN (('Q&6y')) AND ((0.29913042720181715))))))OR(((1.201647733E9) NOTNULL)))); -- 0ms;
SELECT t0.c0, (+ (((((rt1.c1)AND(rt0.c2)))OR(NULL)))), UPPER(((rt1.c2) IS FALSE)) FROM rt1, rt0, t0 WHERE (((0.37317550110437947 COLLATE RTRIM) NOT BETWEEN (((-33133906)/(x'a1b4'))) AND ((('')>(NULL))))); -- 0ms;
SELECT DISTINCT (+ ((((NULL))<((rt1.c2))))) FROM t0, rt0;SELECT DISTINCT (NOT ((NOT (rt1.c1)))) FROM rt1, t0, rt0 WHERE ((NOT ('F')) COLLATE BINARY); -- 0ms;
SELECT AVG(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) COLLATE NOCASE, HEX(SUM(rt0.c1)), ((((((0.3596907922500502) IS TRUE))AND(CAST(rt1.c0 AS BLOB))))OR((- (t0.c0)))) FROM rt0;SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c1 END)AND(NULL)))OR(t0.c0 COLLATE RTRIM)) FROM rt0, t0, rt1 WHERE (CAST(((((((((x'4897')AND('-1196792919')))AND(0.5728720511344843)))OR('k?g')))AND(0.865711877719068)) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((((rt0.c0, rt0.c0, rt0.c0, rt1.c1, rt1.c2))<=((rt1.c1, rt0.c2, t0.c0, rt0.c1, rt0.c0))))GLOB(((rt1.c2)IS NOT(rt0.c2)))) FROM rt0;SELECT DISTINCT COUNT(((rt0.c0)*(rt0.c0))), CAST((rt1.c2 IN ()) AS TEXT), ((CAST(t0.c0 AS REAL)) NOT BETWEEN (CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c0 END) AND (rt0.c0)) FROM rt0, t0, rt1 WHERE ('-376594850'); -- 0ms;
SELECT ALL x'' COLLATE RTRIM FROM rt1 LIMIT -2069033172; -- 0ms;
SELECT ALL TRIM((+ (t0.c0)), 0xffffffffe3125068) FROM rt1, rt0 WHERE ((((UPPER(DISTINCT '[]')))<>(((((5.61427473E8))=((3.60451726E8)))))));SELECT ((rt1.c0 COLLATE RTRIM)/(CASE WHEN rt1.c1 THEN rt1.c1 END)) FROM rt1, t0, rt0 WHERE (((((('V^', '-2121280773', NULL))==((0.7033032707832284, 0.34951256128863717, 'L['))))<=(((((NULL)AND('617584310')))AND(1.928257505E9))))); -- 0ms;
SELECT rt0.c2, (((rt0.c1, rt0.c2, rt1.c2)) NOT BETWEEN (((rt0.c1 IN ()), COUNT(*), ((0Xffffffffbb69d972) NOT BETWEEN (rt1.c0) AND (NULL)))) AND ((rt1.c2 COLLATE BINARY, CAST(NULL AS REAL), ((rt0.c1)IS(rt0.c2))))), (((rt0.c1, NULL, rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), UPPER(DISTINCT rt1.c1))) AND ((((rt1.c1)<(rt0.c2)), rt1.c2 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c1))))) FROM rt0, rt1 GROUP BY ((((rt0.c0)OR(rt1.c0)))AND(rt1.c1)) COLLATE RTRIM HAVING 0.017649703201599087; -- 0ms;
SELECT ((rt1.c0)-(json_patch(rt0.c2, ''))) FROM rt1, rt0;SELECT DISTINCT ((rt0.c1 COLLATE NOCASE) NOT NULL), (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)) IN ()), LAG(((COALESCE(DISTINCT '-681863952', rt1.c1))AND((((rt1.c0))!=((rt1.c0))))), NULL, ((CASE t0.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN t0.c0 END) BETWEEN (t0.c0 COLLATE RTRIM) AND (NULL))) OVER () FROM t0, rt1 ORDER BY UNLIKELY((((rt0.c2))>((t0.c0)))) DESC  NULLS LAST, NULL DESC  NULLS FIRST, ((((rt0.c1) NOT NULL))==(rt0.c2)) DESC;SELECT ALL CAST(CAST(rt0.c1 AS TEXT) AS INTEGER) FROM rt0, rt1, t0 ORDER BY CASE rt0.c2 COLLATE RTRIM  WHEN '' THEN rt0.c2 COLLATE NOCASE ELSE CAST(rt0.c1 AS INTEGER) END; -- 0ms;
SELECT DISTINCT UNLIKELY(CAST(rt0.c2 AS REAL)) FROM rt1 NOT INDEXED, rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END)) AND (((((t0.c0))>((rt1.c2)))))) FROM rt1, t0 WHERE (0.23457009183068722);SELECT DISTINCT NULL FROM t0, rt1; -- 0ms;
SELECT ALL CAST(((rt1.c1)IS(t0.c0)) AS REAL) FROM rt1, t0, rt0; -- 0ms;
SELECT rt1.c1 FROM rt0, rt1 WHERE (x'f85c'); -- 0ms;
SELECT (((('-698234620') NOT BETWEEN (rt1.c2) AND (rt1.c2)))||(CAST(t0.c0 AS TEXT))) FROM t0, rt0 WHERE (((((0.6655137681368636) BETWEEN (x'') AND (0.05466424900941791)))GLOB(((((x'')OR(NULL)))OR('-2025559722'))))) GROUP BY (~ (((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))));SELECT ALL AVG(json_extract(rt0.c1, rt1.c0)) FROM t0;SELECT DISTINCT ((rt1.c2)*(((rt1.c2)<=(rt1.c0)))) FROM rt1 WHERE ((((+ (x'083851c260a9')))/((0.15602122483278114 IN ())))); -- 0ms;
SELECT ((highlight(NULL, rt0.c1, rt0.c1, rt0.c1))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt1 WHERE ((CAST(NULL AS NUMERIC) IN ()));SELECT ALL TOTAL(CASE WHEN rt1.c2 THEN rt0.c2 ELSE NULL END) FROM rt1;SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1 FULL OUTER JOIN rt0 ON CAST(rt0.c0 COLLATE NOCASE AS INTEGER); -- 0ms;
SELECT DISTINCT (((+ (rt1.c2)))<<(rt1.c0)), ((((t0.c0) IS FALSE))*(MIN(t0.c0))), CASE ((t0.c0)>=(t0.c0))  WHEN (rt1.c1 IN (rt1.c0)) THEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c1))) END FROM t0 WHERE (((((NULL) NOT NULL)) IS TRUE));SELECT DISTINCT (((rt0.c1 IN ())) NOT BETWEEN (rt0.c1) AND ((((x'5642', rt1.c2, rt1.c1))>=((rt1.c1, rt1.c1, rt0.c0))))) FROM rt0;SELECT DISTINCT (NOT (((rt1.c0)!=(rt1.c0)))) FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT (+ (rt1.c2)), CASE WHEN (+ (rt0.c2)) THEN rt0.c1 ELSE LIKELIHOOD(rt1.c0, 0.7620357502675883) END, CUME_DIST() OVER () FROM t0, rt1;SELECT (((- (',O')))+(((rt1.c0)%(rt1.c0)))) FROM rt1, t0, rt0 WHERE (ABS(DISTINCT x'' COLLATE NOCASE)); -- 1ms;
SELECT ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ()) FROM t0, rt1 WHERE (CAST(((((((((x'')AND('461324887')))AND(x'674e')))AND(NULL)))AND('-1830614963')) AS INTEGER)); -- 0ms;
SELECT ALL ((((((rt0.c1) BETWEEN (t0.c0) AND (rt1.c1)))AND(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c0)))))AND(ABS(rt1.c2))) FROM t0 WHERE (((((NULL) NOT NULL)) BETWEEN ((+ (''))) AND (NULLIF(DISTINCT 0Xffffffffdda7b050, x'719f476e')))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0)))) ISNULL) ASC  NULLS LAST, (((rt0.c1)GLOB(rt0.c1)) IN (CASE WHEN rt0.c0 THEN rt1.c1 END)) DESC, x'';SELECT DISTINCT x'cdb9', ((((rt1.c2)OR(rt1.c1)))OR(rt0.c0)) COLLATE BINARY, rt0.c1 FROM rt0, t0 WHERE (CASE TRIM(DISTINCT 'pLms', '')  WHEN ((NULL)GLOB(0.1466182406424461)) THEN ((-893077954) IS FALSE) WHEN ((x'') IS TRUE) THEN ((((x'')AND(x'')))AND(0.24850179846562204)) WHEN ((0.3172635809525316)+(0.2514532266662921)) THEN ((((x'')OR(NULL)))OR(0.6553977707086381)) ELSE CASE WHEN NULL THEN 0X51cb6b58 WHEN x'' THEN 0xffffffff9717128e WHEN NULL THEN x'' ELSE 2107066460 END END) GROUP BY CASE CAST(rt0.c1 AS TEXT)  WHEN 'h4' THEN CAST(rt1.c0 AS INTEGER) END;SELECT (((((t0.c0))<((rt1.c0)))) NOTNULL) FROM rt1, t0, rt0 GROUP BY t0.c0 HAVING GROUP_CONCAT((+ (rt1.c1))) ORDER BY (+ (rt0.c2 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT LEAD(((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (rt1.c0) AND ((NOT (rt1.c0)))), ((((((((((rt0.c0)LIKE(rt1.c1)))AND(rt0.c1 COLLATE BINARY)))AND(NULL COLLATE NOCASE)))AND(((rt0.c1)<<(rt0.c1)))))AND(((rt0.c0)<<(rt1.c1)))), (((rt1.c1 COLLATE NOCASE))<((CAST(rt1.c2 AS REAL))))) OVER (), 0.42829207224287014, CAST((+ (rt1.c0)) AS INTEGER) FROM rt0, rt1 WHERE (CASE WHEN UPPER('Ul') THEN (('FALSE') IS FALSE) WHEN ('4s?kO䈱A' IN ('-856068999')) THEN 1.772911287E9 COLLATE NOCASE WHEN ((0.17206441713891307) ISNULL) THEN (((1.09167789E9))>((NULL))) END); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c1)LIKE(rt1.c1)) THEN rt1.c2 COLLATE BINARY WHEN CASE rt1.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((rt1.c1) IS TRUE) WHEN ((((rt1.c0)AND(t0.c0)))AND(rt0.c0)) THEN rt1.c1 ELSE TOTAL(rt0.c1) END, SUM(((rt0.c2)&(rt0.c0))) OVER (), CAST(((rt0.c1) NOT BETWEEN (rt1.c1) AND ('')) AS INTEGER) FROM t0 WHERE ((((x'6543' IN ('0.9934462765546679', NULL))) NOT BETWEEN (CAST('1223966732' AS TEXT)) AND (((0.49511855720689624)OR('1650712887')))));SELECT ALL ((CAST(rt1.c0 AS INTEGER)) IS FALSE), SUM(COUNT(*) COLLATE NOCASE), CAST(((((rt1.c0)AND(rt0.c0)))AND(rt0.c0)) AS NUMERIC) FROM rt0, t0 ORDER BY ((TYPEOF(DISTINCT rt0.c2))<<(((rt1.c2)LIKE(t0.c0))))  NULLS LAST;SELECT ALL ((GROUP_CONCAT(t0.c0)) BETWEEN ((NOT (0.30598302401009203))) AND (((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)))) FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN rt0.c2 THEN t0.c0 END)), json_insert(((rt0.c0) BETWEEN (t0.c0) AND (rt0.c0)), (rt1.c0 IN ()), rt1.c1, ((rt1.c2) NOTNULL), SUM(rt1.c0)), ((((rt0.c0) BETWEEN (t0.c0) AND (rt1.c2)))>(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))) FROM rt1, t0, rt0;SELECT DISTINCT (~ (((rt1.c2) IS FALSE))), (((((- (t0.c0)))OR((rt0.c2 IN ()))))AND(((rt1.c0)>(rt0.c2)))), (((rt1.c2)) NOT BETWEEN ((((rt0.c1)OR(rt1.c0)))) AND ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1))))), ((TYPEOF(DISTINCT NULL))*(JULIANDAY(rt1.c1, rt1.c2, t0.c0))), SUM(CAST(rt0.c0 AS BLOB)) OVER () FROM rt0, rt1 GROUP BY ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))||(((t0.c0)<>(rt0.c2)))), ((rt0.c1 COLLATE RTRIM)<<((rt0.c0 IN ()))), CASE WHEN CAST(t0.c0 AS BLOB) THEN (('1213280786') IS TRUE) END, ((rt1.c1) BETWEEN (rt1.c1) AND ((rt0.c1 IN ()))), HEX(DISTINCT rt0.c0 COLLATE RTRIM) HAVING ((json_remove(rt0.c2, rt0.c0, rt0.c1, rt1.c2)) IS FALSE) ORDER BY (((0.007584827028070507)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c2 END)) AND (((- (rt0.c1))))) DESC  NULLS FIRST;SELECT CASE WHEN ((rt0.c1)>(x'ba33')) THEN t0.c0 COLLATE RTRIM WHEN rt1.c1 THEN (- (rt0.c1)) WHEN ((rt1.c2)>>(rt1.c2)) THEN rt0.c0 WHEN NULLIF(rt1.c1, rt1.c1) THEN PRINTF(rt1.c1) WHEN json_remove(rt0.c2, rt0.c1) THEN GROUP_CONCAT(rt0.c0) ELSE x'' END, CASE CASE 0.5112078937895989  WHEN rt0.c1 THEN rt1.c2 END  WHEN ((rt1.c2)/(rt1.c2)) THEN rt1.c0 COLLATE BINARY ELSE x'' END, ((NULL)LIKE(CASE WHEN '0.7667288591453784' THEN rt1.c1 ELSE rt1.c0 END)) FROM rt1;SELECT ALL (NOT (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))) FROM t0, rt1; -- 0ms;
SELECT ALL CASE WHEN (NOT (rt1.c2)) THEN CASE WHEN rt0.c0 THEN rt1.c1 END WHEN SQLITE_VERSION() THEN ((t0.c0) BETWEEN (x'46cb8af6') AND (rt1.c2)) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('812402377'))) THEN ((rt1.c0)<=(t0.c0)) ELSE ((rt0.c0) IS TRUE) END, ((((json_type(rt0.c2))AND(((((t0.c0)AND(rt0.c0)))OR(t0.c0)))))AND(((rt0.c1)LIKE(rt0.c1)))), CAST(CASE WHEN '1949679165' THEN rt0.c1 END AS BLOB) FROM t0 GROUP BY CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt1.c1)) THEN (rt0.c0 IN ()) WHEN ((rt1.c1) IS FALSE) THEN ((((((((rt1.c2)AND(rt0.c1)))AND(t0.c0)))AND(rt0.c2)))AND(rt1.c2)) ELSE CAST(rt1.c2 AS NUMERIC) END;SELECT rt1.c2 FROM rt0, rt1 WHERE (((TRIM(0.09269078758258187, 0.3746007833765961))IS NOT(x''))); -- 0ms;
SELECT TOTAL((NOT (t0.c0)) COLLATE NOCASE) OVER () FROM rt0 WHERE (LIKE(((NULL)<<(NULL)), NULL)) LIMIT 1856616578;SELECT DISTINCT COALESCE(DISTINCT rt1.c1, rt0.c0) COLLATE BINARY FROM rt0 WHERE ((((CASE WHEN 0x6e2693df THEN 0.9356420200620766 ELSE '442147032' END))>=((((NULL)+('1994649602'))))));SELECT ((((t0.c0)>(rt1.c1)))GLOB(TOTAL(rt0.c0))), (((((rt1.c0)AND(t0.c0)))AND(t0.c0)) IN ()), CAST((NOT (t0.c0)) AS INTEGER), ((((rt1.c1)IS NOT(rt0.c0))) IS FALSE), NULLIF(((rt1.c1)GLOB(t0.c0)), t0.c0 COLLATE BINARY) FROM t0 ORDER BY (((((rt0.c2 IN ()))OR(t0.c0)))OR(json_type(rt1.c0))) DESC  NULLS FIRST;SELECT ALL ((CASE WHEN rt0.c0 THEN t0.c0 END)<(MIN('(?K>'))) FROM rt1, rt0, t0 WHERE ((- (CASE 0.25101146586495804  WHEN '1191394505' THEN '2110083394' WHEN '' THEN '~t' WHEN '' THEN '?顏	*n' ELSE '1811760183' END))); -- 0ms;
SELECT CAST(UNICODE(t0.c0) AS TEXT) FROM rt1;