-- Time: 2024/06/07 07:28:43
-- Database: database16
-- Database version: 3.40.0
-- seed value: 1406243116
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, detail=full, tokenize = "porter"); -- 15ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, c5, c6, +c7 INTEGER ); -- 7ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA temp.foreign_keys = false; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('8즬},sw즬O'); -- 0ms;
PRAGMA incremental_vacuum(-685005221); -- 0ms;
PRAGMA stats; -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA default_cache_size = -233235231; -- 0ms;
ANALYZE; -- 1ms;
DROP TABLE vt0; -- 1ms;
INSERT OR ROLLBACK INTO rt1(c7, c2, c5, c1) VALUES (0.02786687126993148, 1.955711404E9, ((-23743721)<=(-431948783)) COLLATE RTRIM, 0.02786687126993148); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt1(c1, c3, c0, c6, c2) VALUES ('-233235231', x'03a1', 0.847350453928082, 'J띈}ﻗ', x''), (-777651846, 'ꃉ', 'Z)ꑎBe\n?lx', 0.41907501891063315, x''), ('0', '-431948783', -2.3743721E7, NULL, ',~o<'); -- 3ms;
INSERT OR IGNORE INTO rt1(c0, c5) VALUES (0.847350453928082, 0Xfffffffffe95b317), ('-1114702121', 0.01231130435567096), (-1114702121, 'ꃉ'); -- 4ms;
DELETE FROM rt1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE rt1 SET c5=NULL; -- 0ms;
REINDEX; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c6, c1, c0, c3, c4) VALUES (x'5c19', x'', NULL, '895171947', x''); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c4, c6, c1, c0, c5) VALUES (x'ca46', -5.56687159E8, -1059346765, NULL, 0Xffffffff8b2696c2, NULL); -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c6, c0) VALUES (x'', x'eb08', NULL), (0.9404902217562539, '', NULL), (0.21139758500409844, NULL, 1.955711404E9); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c5, c1, c0, c4) VALUES ('1633222280', x'', '0.41907501891063315', 0.37066638572862154); -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c0) VALUES (0X35ce070b, x'2173'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (0.14382194559568628); -- 0ms;
ANALYZE temp; -- 1ms;
PRAGMA stats; -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c0, c1, c7, c3, c5, c6) VALUES (NULL, x'5812', -2.33235231E8, 0.298099500607668, x'', '-409290936', 0xffffffffa425bc23); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (0Xffffffffb26e8888, x'', NULL, 0.3156518701314718, '', 'eﺈF', 'na', NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c1, c4, c7) VALUES (0.4112987087490504, 'B[', 0.6862879984547069, 0.9404902217562539); -- 0ms;
CREATE VIRTUAL TABLE rt43 USING rtree_i32(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA default_cache_size; -- 0ms;
INSERT OR IGNORE INTO rt43(c2, c0) VALUES (NULL, -1.96040531E9); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c6, c5) VALUES (NULL, '902694667'), (NULL, ''), (x'47ad', -1804313706); -- 0ms;
INSERT OR ROLLBACK INTO rt43(c2, c1) VALUES (x'', NULL), (x'6279', -1447073188), ('', '0.21139758500409844'), ('R{EmO)}\nf', NULL), (0.8744979025713364, '0.847350453928082'); -- 5ms;
PRAGMA temp.locking_mode; -- 0ms;
INSERT OR ROLLBACK INTO rt43 VALUES (0.01231130435567096, x'', 0.9994927483707012); -- 2ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c5, c1, c0, c2, c6) VALUES ('-777651846', x'', '(v', x'', x'', '!^Qc菓'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c4, c6, c1) VALUES (x'', NULL, '(v', 9.02694667E8); -- 0ms;
INSERT OR IGNORE INTO rt43(c0, c2, c1) VALUES (-1.301378936E9, 0.9478770563779877, NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt43', 'rt43', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt1(c7, c2, c4) VALUES ('\r6> 䊂U7#5', 0.8699945062521987, x''); -- 0ms;
UPDATE OR REPLACE rt1 SET (c0, c2)=('-685005221', x'1c1d'); -- 1ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 5ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR REPLACE INTO rt43(c2, c0, c1) VALUES (x'0a02', -1.114702121E9, '-1794238137'); -- 4ms;
ANALYZE; -- 2ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT OR ABORT INTO rt43(c0, c2, c1) VALUES (NULL, NULL, '-1552224030'); -- 0ms;
PRAGMA main.stats; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES ('', '-778950088', x'', (((- (x''))) NOT BETWEEN (CASE WHEN 0xffffffffb77a4282 THEN '-945698045' ELSE 0.9994927483707012 END) AND (((x'') ISNULL))), x'', x'59d5', 'q.?', NULL); -- 1ms;
INSERT OR REPLACE INTO rt1(c7, c2, c4) VALUES (x'', NULL, 0.298099500607668); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c7, c4, c6, c1, c3, c2) VALUES ('422584076', NULL, NULL, x'', 4.22584076E8, 0Xffffffffb77a4282, 'Vg'); -- 0ms;
INSERT OR IGNORE INTO rt43(c0, c1, c2) VALUES (NULL, '-685005221', 'N6'); -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR FAIL rt1 SET c5=x'' WHERE (((~ (rt1.c5))) NOT BETWEEN (rt1.c5 COLLATE BINARY) AND (((rt1.c6)+(rt1.c2)))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.857322417521011)IS NOT(NULL)))); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(x'bebe'); -- 4ms;
INSERT OR ABORT INTO rt1(c6, c3) VALUES ('1935386345', 0xffffffffa9bf6a5c); -- 0ms;
PRAGMA main.cache_size; -- 0ms;
INSERT OR REPLACE INTO rt1(c7, c1) VALUES (NULL, (x'' IN ())); -- 0ms;
INSERT OR IGNORE INTO rt43(c2, c0) VALUES (x'', NULL), (-137200815, 0Xffffffffd9df780c), (67395172, NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c6, c2, c1, c4, c5, c0, c3) VALUES (0.48857721121812514, x'', x'', NULLIF(DISTINCT (('')*(0xffffffffa2e62e3d)), ((('727109130', '751818572', 'PX'))>((NULL, 'B\)蔆', '-1104630980')))), NULL, x'5837', 0.1497509496750803), (-945698045, x'65ef', NULL, -6.39666164E8, NULL, '-294559153', NULL), ('aH]y8q]5', x'', 0.09183599788436092, x'', 0.09183599788436092, NULL, '0.41907501891063315'); -- 0ms;
INSERT OR ROLLBACK INTO rt43(c1, c2) VALUES ('ꙛ#', '+ꙛ5GC⨸䊂QI'); -- 5ms;
SELECT rtreecheck('rt1'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR ABORT INTO rt1(c5, c1, c6, c0) VALUES (0Xfffffffffe95b317, 0X41b7a735, x'', -9.45698045E8); -- 0ms;
INSERT OR FAIL INTO rt43(c0) VALUES (0xffffffffbe96ecad), ('1102554933'), (0.696172037034823); -- 0ms;
INSERT OR IGNORE INTO rt43 VALUES (0.3282416225509641, 199286907, 0.6862879984547069); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL rt1 SET c0=x'', c1=-1203480052, c1=x''; -- 11ms;
UPDATE OR IGNORE rt43 SET c2=NULL; -- 2ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT OR REPLACE INTO rt1(c4, c3) VALUES (((((x'374d')LIKE('1102554933'))) NOT BETWEEN (((((((((NULL)OR('1102554933')))OR('0.298099500607668')))OR('-380009517')))OR(0.01231130435567096))) AND (CASE 0x3d88b406  WHEN '0.298099500607668' THEN '' END)), ''); -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
ANALYZE rt1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt43', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c4, c6, c2, c7) VALUES (x'', NULL, -7.77651846E8, 0.7003187905220436); -- 0ms;
INSERT OR IGNORE INTO rt43 VALUES ('', NULL, x''), (-6.85005221E8, '', 0Xffffffffbe96ecad), ('Vf^', '-598445831', ''); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c6, c4) VALUES (x'9dbb', 0.005819787306836188, -5.98445831E8); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CUME_DIST() OVER ( ROWS  UNBOUNDED PRECEDING), CAST(((rt1.c5)-(rt43.c2)) AS REAL), DENSE_RANK() OVER () FROM rt1, rt43; -- 0ms;
SELECT ALL NULLIF(((rt43.c1) BETWEEN (rt1.c4) AND (rt1.c6)), rt1.c3) FROM rt43, rt1 WHERE ((x'9946' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT ((((rt43.c0) NOTNULL))OR(((((rt1.c1)OR(rt1.c2)))OR(rt1.c7)))) FROM rt1 WHERE ((((((-598445831)) BETWEEN (('-624075628')) AND ((x'')))) BETWEEN ((- (0x2ccfd74c))) AND ((('-0.0') IS FALSE))));SELECT NULL COLLATE NOCASE FROM rt43, rt1 WHERE (((((((9.02694667E8)>(0Xfffffffffe95b317)))AND((~ (0.5252361000340118)))))OR('-1561463818'))); -- 1ms;
SELECT ((((((((rt1.c4)OR(rt43.c0)))AND(rt1.c6)))OR(CASE rt1.c5  WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c0 THEN x'' END)))AND(INSTR(rt1.c5, rt43.c2))) FROM rt1;SELECT rt1.c2, (((((((((((rt1.c4)OR(rt43.c2)))AND(rt1.c0)))OR(rt43.c1)))OR(rt43.c0))))<=((AVG(rt1.c1)))), CAST(((((rt1.c1)AND(rt1.c4)))OR(rt1.c6)) AS BLOB) FROM rt1 WHERE (((((0.7398894808727856) NOT BETWEEN (0.7660916725982967) AND (''))) NOT BETWEEN (((0.8810267649158994) NOT BETWEEN (x'') AND (x''))) AND (((x'0e07') IS TRUE))));SELECT ALL ((rt1.c0)!=(rt1.c6)) COLLATE RTRIM FROM rt1 WHERE (((x'') BETWEEN (((']v')>(0x1efa61ba))) AND (((0.14382194559568628)>(x'32517a39'))))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt43; -- 0ms;
SELECT DISTINCT 'ꊏP' COLLATE BINARY FROM rt43 WHERE ((NOT ((('-945698045')+(NULL))))) ORDER BY CAST((((rt1.c7, rt43.c1, rt1.c2)) BETWEEN ((rt43.c0, rt1.c2, rt1.c0)) AND ((rt1.c6, rt1.c3, rt43.c2))) AS INTEGER) ASC  NULLS LAST;SELECT (('-1447073188') NOT NULL), COUNT(*), ((((rt1.c3 COLLATE NOCASE)AND(((((((((rt1.c6)OR(rt43.c2)))OR(0.9994927483707012)))OR(rt43.c1)))OR(rt1.c7)))))OR(((rt1.c1) IS TRUE))) FROM rt1 RIGHT OUTER JOIN rt43 ON (~ (((rt1.c7) NOT BETWEEN (rt1.c5) AND (rt1.c7)))) WHERE (CASE (('-1301378936')LIKE(199286907))  WHEN ((0.26922832488086845)<('')) THEN (- (0Xffffffffd90f0e5f)) ELSE ((0.6967122752735786) ISNULL) END); -- 0ms;
SELECT DISTINCT (((rt43.c1 IN ())) IS TRUE), ((((rt1.c6) IS TRUE))/(rt1.c5 COLLATE NOCASE)), (NULL IN ()) FROM rt43, rt1 LIMIT 1282830544; -- 0ms;
SELECT DISTINCT ((ROUND(rt1.c1, rt1.c2)) IS TRUE) FROM rt43;SELECT ((((rt1.c0)<(rt1.c2))) BETWEEN (MIN(rt1.c0)) AND (((rt1.c3) NOT NULL))) FROM rt1 WHERE (((((x'f2b1') BETWEEN (0.20943816266302995) AND ('-945698045'))) NOT BETWEEN ('iGzZ᪺ldh') AND (CAST(x'' AS BLOB)))); -- 0ms;
SELECT ((((rt43.c1) BETWEEN (rt1.c2) AND (1627651054))) IS FALSE) FROM rt1, rt43 WHERE (CAST((+ (0.9179544838598566)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((rt1.c1 IN (rt1.c2, rt1.c1))))>=((((((rt1.c2)AND(rt1.c7)))AND(rt1.c4))))) FROM rt43;SELECT ALL ((((((((rt1.c0)OR(((x'') IS TRUE))))AND(((((rt1.c3)AND(rt1.c2)))OR(rt1.c1)))))AND(((rt43.c0)||(rt1.c4)))))AND((((rt1.c1, rt1.c5, rt1.c7)) BETWEEN ((rt1.c6, rt43.c0, rt43.c1)) AND ((rt1.c1, rt1.c1, rt43.c0))))), (+ ((((rt1.c5))<=((rt43.c0))))), rt1.c5 COLLATE BINARY FROM rt43;SELECT ALL GROUP_CONCAT(CASE WHEN rt43.c2 THEN rt43.c0 ELSE x'' END) FROM rt1, rt43 WHERE ((((7.54512554E8)) BETWEEN ((LIKELIHOOD(x'', 0.43999252039606784))) AND (('R-')))); -- 0ms;
SELECT ALL (+ (CASE rt1.c0  WHEN rt43.c1 THEN rt1.c0 WHEN rt43.c2 THEN rt1.c4 WHEN x'' THEN rt1.c3 END)) FROM rt43 WHERE ('B\)蔆');SELECT DISTINCT CUME_DIST() OVER () FROM rt1; -- 0ms;
SELECT LAG(((((((rt1.c2)OR(rt1.c3)))OR(rt1.c4))) ISNULL), (+ (((rt1.c5) IS FALSE))), rt1.c2) OVER () FROM rt1 ORDER BY ((rt1.c6 COLLATE BINARY) NOT BETWEEN (rt43.c0) AND (rt1.c6 COLLATE NOCASE)) DESC  NULLS FIRST;SELECT ALL ((rt1.c1) IS TRUE) COLLATE RTRIM, (~ ((NOT (rt43.c1)))), (((((((((+ (rt1.c3)))AND(((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt43.c2)))))OR((+ (0.9640637500269658)))))AND(x'')))OR(NULL)) FROM rt43 WHERE ((((('-9223372036854775808') NOT BETWEEN (NULL) AND (x'b8bc')))&(CASE WHEN x'8d42' THEN NULL END))) GROUP BY ((((((((((rt43.c0)+(rt1.c7)))OR(((rt1.c1)GLOB(rt1.c7)))))OR(((rt43.c2)GLOB(rt1.c1)))))OR(rt1.c7)))OR(((rt1.c5) IS FALSE))) HAVING ((((rt1.c5) NOT NULL))/('397350711'));SELECT ((MIN(rt1.c3)) NOT BETWEEN ((+ (rt43.c2))) AND (TYPEOF(DISTINCT rt1.c6))) FROM rt43, rt1; -- 0ms;
SELECT ((rt1.c4)>(rt43.c1)) COLLATE RTRIM FROM rt43, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt43.c2) BETWEEN (rt1.c6) AND (rt1.c7)) AS REAL) FROM rt1;SELECT CASE WHEN (('1282830544') NOT BETWEEN (rt1.c5) AND (rt43.c1)) THEN (((rt1.c0)) BETWEEN ((rt1.c7)) AND ((rt43.c0))) ELSE (~ (rt43.c0)) END FROM rt43, rt1 WHERE (CASE WHEN NULL THEN x'5848852f' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (NULL IN ()) FROM rt1 LIMIT -822505634; -- 0ms;
SELECT (((((((rt1.c1)AND(rt1.c1)))AND(rt43.c1)), ((rt43.c1)-(0.9719034105245632)), rt1.c3))<>((LIKELIHOOD(DISTINCT NULL, 0.21131083886193502), rt43.c1 COLLATE RTRIM, LIKE(rt1.c3, rt1.c2, '0')))) FROM rt1, rt43 ORDER BY (- (CASE WHEN rt43.c2 THEN rt1.c0 END)) DESC  NULLS FIRST, ((((rt1.c0)+(rt1.c0))) IS TRUE)  NULLS LAST, rt43.c0; -- 0ms;
SELECT DISTINCT CAST(rt1.c3 AS NUMERIC) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT (1.582597382E9 IN (CAST(rt1.c2 AS NUMERIC))) FROM rt43 WHERE (0Xffffffffa6250fe4) GROUP BY ((rt43.c1)+(CAST(rt1.c4 AS INTEGER))) HAVING (((((rt1.c6)) BETWEEN ((rt1.c6)) AND ((rt1.c3))))GLOB((rt1.c2 IN (rt43.c0))));SELECT DISTINCT NTILE(CASE x'8882'  WHEN (rt43.c1 IN (rt1.c3, rt1.c2)) THEN (((rt1.c5))<=((rt43.c2))) END) OVER () FROM rt1, rt43 WHERE (((CASE NULL  WHEN 0.6961556690696858 THEN -2.3743721E7 WHEN x'bde3' THEN 0xffffffff9053eaeb WHEN '(aD⸽' THEN '-422998011' END) NOT NULL)) LIMIT -1561463818; -- 0ms;
SELECT ((COUNT(*))|(((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4)))), ((CASE rt43.c1  WHEN rt1.c0 THEN rt1.c7 END) IS FALSE), ((rt1.c6) ISNULL) COLLATE NOCASE FROM rt43;SELECT LOWER(CAST(rt1.c6 AS NUMERIC)) FROM rt43;SELECT LAG(((rt43.c0)IS((- (rt1.c6)))), CAST(CAST(rt1.c6 AS NUMERIC) AS BLOB), (((+ (rt43.c0))) IS FALSE)) OVER ( RANGE BETWEEN ((((((((json_patch(rt1.c6, rt1.c5))OR(((rt43.c2) ISNULL))))AND(((rt1.c7) IS FALSE))))OR(((((rt1.c3)AND(rt1.c2)))AND(rt1.c6)))))OR(UNLIKELY(DISTINCT rt1.c7))) PRECEDING AND (rt43.c1 IN ()) COLLATE NOCASE PRECEDING) FROM rt1, rt43;SELECT ALL COUNT(COALESCE(rt1.c0, 'e9')) OVER (), ((((((rt43.c0)AND(rt1.c0)))OR(rt1.c6))) NOTNULL), ((CAST(rt43.c0 AS REAL)) BETWEEN (rt1.c5) AND (CAST(rt43.c1 AS INTEGER))) FROM rt1, rt43 WHERE (((((((x'')OR(0.23278288322589835)))AND('2012484769'))) IS TRUE)); -- 1ms;
SELECT ((((rt43.c1)GLOB(rt1.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (rt43.c1 COLLATE BINARY)) FROM rt43, rt1 WHERE ((+ (((x'ac9a') BETWEEN (x'') AND ('雂'))))) LIMIT 1200315632 OFFSET 1149754553; -- 0ms;
SELECT DISTINCT (((((rt1.c1, rt1.c4, rt1.c0))<>((rt1.c1, rt1.c2, rt1.c5)))) IS FALSE), rt1.c1, CAST(TRIM(DISTINCT rt1.c4, rt1.c5) AS BLOB) FROM rt43;SELECT (((~ (rt1.c1))) IS FALSE) FROM rt43 WHERE (((((((((((0xffffffffe7eabf12)OR('536773974')))OR(0xffffffffe036cc59)))AND(0.26737476383165537)))AND('1435331550')))-(((((NULL)OR('dcv')))AND('1806653747')))));SELECT DISTINCT (~ (((((rt1.c5)OR(0.7003187905220436)))OR(rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt43, rt1 GROUP BY ((rt1.c2 COLLATE RTRIM) NOT BETWEEN (rt43.c1) AND (UPPER(DISTINCT rt1.c6))) HAVING LIKELY(DISTINCT ((rt1.c6)/(rt1.c4))); -- 1ms;
SELECT ALL AVG(rt1.c4), (((((rt1.c3)) BETWEEN (('')) AND ((rt1.c0)))) NOT NULL), ((LIKELIHOOD(rt1.c5, 0.48533515753101697)) NOT NULL) FROM rt1 WHERE (LOWER((+ (x'')))) UNION SELECT DISTINCT MAX((((rt1.c2))<=((rt1.c1)))), CASE WHEN CAST(rt1.c0 AS TEXT) THEN (rt1.c7 IN ()) ELSE CASE WHEN x'd76c' THEN rt1.c6 WHEN rt1.c0 THEN -1.447073188E9 WHEN rt43.c0 THEN rt1.c1 ELSE rt1.c7 END END, TYPEOF(NULLIF(rt43.c0, rt43.c2)) FROM rt1, rt43; -- 0ms;
SELECT ALL (((rt1.c7)) NOT BETWEEN ((rt1.c3)) AND ((rt43.c1))) COLLATE BINARY FROM rt43 WHERE ((~ ((('0.7003187905220436')<(NULL)))));SELECT ((((rt1.c5)>(rt43.c0)))>=((((rt1.c2))==((rt1.c1))))) FROM rt1 NOT INDEXED WHERE (((((NULL)-(0.8805566989906689)))LIKE(NULL))) ORDER BY rt1.c4 ASC  NULLS LAST, (((CASE rt1.c5  WHEN rt1.c6 THEN rt43.c1 END, (+ (rt1.c3)), (rt1.c1 IN ())))>=((CAST(rt1.c1 AS REAL), CASE WHEN rt1.c7 THEN rt43.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c7 ELSE NULL END, (((('-1338769065')AND(rt1.c4)))OR('-1794238137'))))) ASC  NULLS FIRST;SELECT DISTINCT (((rt43.c2 IN ())) ISNULL), ((CAST(rt1.c6 AS NUMERIC))%(MAX(rt1.c1))), rt1.c0 FROM rt1, rt43; -- 0ms;
SELECT DISTINCT CAST(rt1.c2 AS REAL) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT (((('Z)ꑎBe\n?lx')OR(((rt43.c0)|(rt43.c2)))))AND(0.2042633752955526)) FROM rt1, rt43 WHERE (((x'') IS TRUE)); -- 0ms;
SELECT ALL CASE rt1.c3  WHEN rt1.c7 THEN rt1.c6 END COLLATE BINARY FROM rt43 WHERE ((- ('')));SELECT DISTINCT ((rt1.c7 COLLATE NOCASE)GLOB(LIKELY(DISTINCT NULL))) FROM rt43, rt1 WHERE (((((0.21479219339150013)AND((((NULL)) BETWEEN (('-1104630980')) AND ((-1.561973187E9))))))OR(CASE x'5f37'  WHEN 0.8243383152791515 THEN x'' ELSE NULL END))) GROUP BY NULL; -- 0ms;
SELECT DISTINCT CAST((rt1.c4 IN ()) AS NUMERIC) FROM rt43; -- 0ms;
SELECT DISTINCT AVG(LIKELIHOOD(rt43.c2, 0.5516796445061856)) COLLATE NOCASE, (~ (0.9640637500269658)) COLLATE RTRIM, (((((rt43.c0)AND(rt43.c1)))AND(rt43.c0)) IN ()) FROM rt1 WHERE (LIKE(((NULL)<=('-917525140')), (-6.53324705E8 IN ()))) ORDER BY CASE WHEN -1873548565 THEN rt1.c1 COLLATE RTRIM ELSE (((rt43.c0, rt1.c7, NULL))>((rt43.c0, NULL, rt43.c2))) END DESC;SELECT ALL LAG(((TYPEOF(rt1.c5)) ISNULL), (('-1873548565')>(CASE rt1.c7  WHEN '-2084575774' THEN rt43.c1 WHEN NULL THEN rt43.c1 WHEN rt1.c2 THEN rt1.c5 END)), (((CASE WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c6 END))!=(((~ (2.012484769E9)))))) OVER ( PARTITION BY ((((NULL)OR((((rt1.c1)) NOT BETWEEN ((rt1.c7)) AND ((rt43.c0))))))AND(((((rt1.c3)OR(rt43.c2)))AND(rt1.c6)))), COALESCE(CAST(rt1.c1 AS NUMERIC), COALESCE(rt1.c6, 'vZ钬9脭'), ((((rt1.c1)OR(rt1.c0)))OR(rt1.c7)), (('-380009517') BETWEEN (rt1.c2) AND (rt1.c1)), CAST('篢3V擫)FJ,i' AS BLOB), ((rt1.c0) IS FALSE))) FROM rt1, rt43; -- 0ms;
SELECT ((((((((IFNULL(rt1.c3, rt1.c7))OR(((rt1.c5)|(rt1.c2)))))AND((0.26922832488086845 IN (rt1.c1)))))OR(((((((((rt1.c4)OR(rt43.c1)))AND(rt1.c4)))AND(rt1.c7)))AND(rt1.c6)))))OR(((((rt43.c0)AND(rt43.c1)))OR(rt1.c6)))) FROM rt1, rt43 WHERE ('A|GD'); -- 0ms;
SELECT (((rt1.c7 COLLATE BINARY, 0.8328929867318758, ((rt43.c1) ISNULL)))>=((((rt1.c6)IS NOT(rt43.c0)), LIKELIHOOD(DISTINCT rt1.c2, 0.6915105515140761), CASE WHEN rt1.c4 THEN rt43.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END))), SUM((((0.9173604956849544))=((rt43.c1)))) OVER ( ORDER BY rt43.c2  NULLS LAST, ((CAST(rt1.c0 AS TEXT))*(((rt1.c2)-(rt1.c0)))) ASC  NULLS LAST), (((~ (rt1.c4)))>>(x'')) FROM rt1 WHERE (json_array_length((((NULL, x'08bf', x'faa1'))<(('0.8243383152791515', NULL, '1773867457')))));SELECT ALL CAST(((rt1.c2) ISNULL) AS TEXT) FROM rt43, rt1 LIMIT 571377121 OFFSET -1194885152; -- 0ms;
SELECT DISTINCT (COUNT(rt1.c0) IN ()) FROM rt43, rt1 WHERE ((((((x'')) BETWEEN (('0.2042633752955526')) AND ((x'8da4')))) NOT BETWEEN (CASE NULL  WHEN '-1299505255' THEN 0.8545369241208809 ELSE x'' END) AND (((-6.24075628E8) NOT BETWEEN (0.3612072551365536) AND (-1398012054))))); -- 0ms;
SELECT ALL (('2039338053') NOT BETWEEN (rt43.c0 COLLATE NOCASE) AND ((NOT (NULL)))) FROM rt1, rt43 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((((((((((((rt1.c7)AND(rt1.c0)))AND(rt1.c5)))OR(rt43.c2)))AND(rt43.c0)))OR(rt1.c3)))AND(rt43.c1)))>>(rt1.c3)) ASC; -- 0ms;
SELECT ALL ((rt1.c4)GLOB(rt1.c4)) COLLATE NOCASE, ((((rt1.c5)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c6))) IN ()), (('')%(rt1.c6 COLLATE BINARY)) FROM rt1, rt43 WHERE ((((NULL)) BETWEEN ((((NULL)=('')))) AND ((((((0.5714845971531645)OR(0.07343385096242372)))OR(x'')))))); -- 0ms;
SELECT DISTINCT MIN(CASE WHEN rt1.c7 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c6 END), RANK() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), json_type((rt1.c7 IN (rt1.c0))) FROM rt43;SELECT (((CASE WHEN rt1.c1 THEN rt43.c1 ELSE rt43.c0 END))>((((NULL)==(rt43.c1))))) FROM rt1 WHERE ((~ (((x'') NOTNULL)))) ORDER BY CAST(rt43.c1 AS TEXT) COLLATE BINARY;SELECT DISTINCT ((rt1.c3)>>(rt1.c0)) COLLATE NOCASE, SUM((- (x''))), (((CASE WHEN rt1.c7 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END))>((ABS(DISTINCT 0.9179544838598566)))) FROM rt43, rt1 WHERE (((('-1059346765', '-1104630980', NULL)) BETWEEN (((+ (x'94b5')), ((x'')>=(x'')), ((-1.301378936E9)&(NULL)))) AND (((('') IS FALSE), (((('0.7660916725982967')AND('p#')))OR(NULL)), TYPEOF(DISTINCT 'fT1P~HSR'))))) UNION SELECT DISTINCT SUM(rt43.c1) OVER (), ((((rt1.c6) NOT BETWEEN (rt1.c6) AND (0.8944616508766292)))LIKE((((rt43.c2)) BETWEEN ((rt43.c2)) AND ((rt1.c1))))), ((((((((HEX(rt1.c7))OR((- (NULL)))))AND(((rt43.c0)+(rt43.c2)))))OR(((rt43.c1)IS NOT(rt1.c3)))))OR((NULL IN (rt43.c2)))) FROM rt43 LIMIT -639666164;SELECT DISTINCT rt1.c6, (NOT (((rt1.c3) BETWEEN (rt1.c4) AND (NULL)))), GROUP_CONCAT((+ (rt43.c1))) OVER () FROM rt1 GROUP BY CASE WHEN CASE WHEN rt43.c1 THEN x'' ELSE rt1.c7 END THEN ((((rt43.c2)AND(rt43.c2)))AND(rt1.c0)) END, NULL, ((LIKELY(rt1.c5))<(((((x'9396')AND(rt1.c2)))OR(rt43.c2)))) HAVING rt43.c1;SELECT DISTINCT (((((rt1.c0)OR(rt1.c5))))>((((rt1.c1)>(rt43.c2))))) FROM rt1, rt43 WHERE (CAST((((('-1873548565')OR('1200315632')))OR('')) AS BLOB)); -- 0ms;
SELECT ((COUNT(rt1.c7))/(((rt43.c1) NOT NULL))) FROM rt1 WHERE (CAST((('-859875271')*(-353138300)) AS TEXT));SELECT ALL CASE WHEN rt1.c0 THEN rt43.c1 END COLLATE NOCASE FROM rt1, rt43 WHERE (((((((x'') NOT BETWEEN ('1582597382') AND (x'')))OR(NULL)))AND(((((NULL)AND(0.7695261917481803)))AND(NULL))))); -- 0ms;
SELECT ALL LAG(CAST(rt1.c7 AS INTEGER), (((rt1.c3 IN (rt1.c5, rt1.c4)))>(NULLIF(DISTINCT rt1.c4, rt1.c6))), CASE WHEN ((rt1.c0) IS TRUE) THEN (('')IS NOT(rt1.c1)) END) OVER (), ((((rt1.c6) NOT BETWEEN (0.18372686131812344) AND (rt1.c7)))LIKE(CAST(rt43.c0 AS INTEGER))), CAST(((rt43.c1)LIKE(rt1.c0)) AS TEXT) FROM rt1 WHERE ((((- (NULL)))/(CAST('-1160068200' AS INTEGER)))) ORDER BY (((LOWER(rt43.c0)))>((((((((((rt43.c1)OR(rt1.c0)))OR(rt1.c0)))AND(rt43.c0)))AND(rt1.c2))))) ASC  NULLS FIRST;SELECT DISTINCT (((rt1.c7)) NOT BETWEEN (((rt43.c0 IN ()))) AND (('1806653747' COLLATE BINARY))) FROM rt43, rt1 WHERE (LIKELY(((((((((x'b657')AND(0Xffffffff94deeea1)))OR('')))AND(-1828160813)))AND(0.9804920612891632)))); -- 0ms;
SELECT ALL ((CAST(rt43.c1 AS INTEGER))<=((rt1.c7 IN (rt1.c2)))) FROM rt1, rt43; -- 0ms;
SELECT ALL (((((rt1.c4)) BETWEEN ((rt43.c1)) AND ((rt1.c5))))>=(((((rt1.c7)AND(rt1.c4)))AND(rt1.c1)))) FROM rt1;SELECT ALL CASE WHEN (~ (0Xc920371)) THEN ((rt1.c1)<=(rt1.c4)) WHEN CAST(rt43.c0 AS BLOB) THEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt1.c4)) WHEN 'ﰑk' THEN ((((rt1.c1)OR(rt1.c3)))AND(rt43.c0)) ELSE ((rt43.c0) NOTNULL) END, ((CAST(rt1.c7 AS TEXT)) BETWEEN (rt1.c1 COLLATE BINARY) AND (rt1.c5 COLLATE RTRIM)), AVG((rt1.c7 IN ())) OVER ( GROUPS BETWEEN ((~ (x'675e')) IN ()) PRECEDING AND  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt1, rt43 LIMIT -917525140; -- 1ms;
SELECT DISTINCT COUNT(CASE WHEN rt43.c0 THEN rt1.c7 WHEN rt43.c1 THEN rt1.c6 WHEN rt43.c2 THEN rt1.c2 ELSE rt1.c6 END) COLLATE RTRIM FROM rt1, rt43 GROUP BY ((CASE rt43.c1  WHEN rt1.c2 THEN rt43.c1 END)&(CAST(rt1.c7 AS TEXT))) HAVING CASE CAST(rt1.c1 AS TEXT)  WHEN MAX(NULL) THEN rt1.c5 COLLATE BINARY ELSE ((((rt1.c3)AND(rt1.c0)))AND(rt1.c7)) END; -- 0ms;
SELECT DISTINCT AVG(((rt43.c1)OR(rt1.c1)) COLLATE RTRIM) OVER ( ORDER BY ((((rt1.c4)!=(rt1.c6))) BETWEEN ((rt1.c3 IN ())) AND (CAST(rt43.c1 AS NUMERIC)))  NULLS FIRST), TRIM(DISTINCT TOTAL(rt1.c7), QUOTE(rt1.c1)), (((((((rt1.c6)OR(NULL)))OR(rt1.c3))))>=((CASE WHEN rt1.c2 THEN rt43.c2 END))) FROM rt43;SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt1.c1 THEN '-986225429' END) FROM rt43 WHERE (((((~ (-1.338769065E9))))=(((0X75c1e39e IN ())))));SELECT (((((+ (rt1.c3)))OR((rt1.c0 IN (rt43.c0, 512163908, rt1.c7)))))AND(rt43.c1 COLLATE BINARY)) FROM rt1, rt43 WHERE (((((((((((((CASE 0xffffffff8f8acfb8  WHEN x'' THEN x'' END)OR((- (0.8292005589958075)))))OR(((((((((x'')AND(-1221981150)))AND(-533279655)))AND('')))OR(0.7628891031971461)))))AND(((623120137) BETWEEN ('-1541030877') AND (x'')))))OR(CASE x''  WHEN 0.36629032869018885 THEN x'' END)))OR(LIKELY(DISTINCT NULL))))OR((- (x''))))); -- 0ms;
SELECT GROUP_CONCAT(((rt1.c3)&(rt1.c6))) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE (CAST(((x'')GLOB(0.7628891031971461)) AS BLOB)); -- 0ms;
SELECT ((((rt1.c3) IS TRUE))<(((rt43.c0) ISNULL))) FROM rt43 WHERE ((((('ub') NOT NULL)) BETWEEN ((NULL IN ())) AND (x'' COLLATE NOCASE)));SELECT DISTINCT CASE WHEN (((rt1.c6)) BETWEEN ((rt1.c3)) AND ((rt43.c2))) THEN TRIM(rt1.c0) END FROM rt43;SELECT DISTINCT CASE CASE WHEN x'' THEN 0.2263104370831528 WHEN rt1.c7 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c5 END  WHEN ((((x'c736')OR(rt1.c2)))OR(rt1.c0)) THEN LIKELY(0x2d0d51b1) ELSE CAST(rt43.c0 AS BLOB) END FROM rt43 WHERE (((('')) NOT BETWEEN (((NOT (0.05219295030344395)))) AND ((CAST('' AS BLOB))))) GROUP BY ((((rt1.c2) NOTNULL))LIKE(((rt43.c0) NOT BETWEEN (rt1.c5) AND (rt1.c6))));SELECT DISTINCT (((NOT (rt1.c2))) BETWEEN (((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c3))) AND (((rt1.c0) ISNULL))) FROM rt43 WHERE ((((json_array_length(0.8280356165589312)))<((CAST(x'' AS INTEGER)))));SELECT DISTINCT ((rt1.c7 COLLATE RTRIM) ISNULL), (((rt1.c0)==(rt1.c3)) IN ()), (NULLIF(rt43.c0, rt1.c0) IN ()) FROM rt43, rt1 WHERE ((CASE '1223515363'  WHEN '' THEN x'' ELSE NULL END IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((CAST(rt1.c4 AS BLOB))AND(((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c7)))))OR(((rt1.c0)OR(rt1.c2))))) OVER () FROM rt1, rt43; -- 0ms;
SELECT DISTINCT (((TOTAL(rt1.c0)))>=((((rt43.c2) BETWEEN (rt43.c0) AND (rt1.c0))))) FROM rt43, rt1 WHERE (CASE ((x'751e')==('+	e!yma-'))  WHEN (- (NULL)) THEN STRFTIME('u䦖0', '-1160068200', NULL) WHEN TRIM(DISTINCT '-1045858001', x'') THEN (NOT ('')) WHEN CAST('' AS INTEGER) THEN ((0x312079a2)<('-1194885152')) END) LIMIT -146962063 OFFSET 842790758; -- 3ms;
SELECT ALL (((NOT (rt1.c2))) IS FALSE), (((((rt1.c0))<=((rt1.c6)))) NOT BETWEEN (((NULL) ISNULL)) AND ((rt1.c4 IN ()))), NULL FROM rt1 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT ALL MIN((((rt1.c1, rt43.c0, rt43.c0, rt1.c2, rt1.c2))<>(('eFl#*9EOk', rt43.c0, rt1.c6, rt1.c0, rt1.c0)))) FROM rt1;SELECT DISTINCT CAST(CASE rt1.c3  WHEN rt1.c7 THEN rt1.c3 END AS INTEGER) FROM rt1, rt43; -- 0ms;
SELECT (((rt1.c2)) NOT BETWEEN (('᳡|\rDAWEh')) AND ((((((((((rt1.c2)AND(250382909)))AND('-93356417')))AND(rt1.c1)))OR(rt43.c2))))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT ((((COUNT(*))OR(((rt1.c7)*('0.9640637500269658')))))OR(MIN(rt43.c1))) FROM rt1 GROUP BY (~ (CAST(rt43.c0 AS NUMERIC))), (((rt43.c0 COLLATE NOCASE))<>((rt1.c0 COLLATE RTRIM))), CAST(((rt1.c6) IS FALSE) AS NUMERIC) HAVING CASE WHEN NULL THEN rt1.c0 END;SELECT ALL SUM((((rt1.c2))<>((rt1.c7)))) OVER ( ORDER BY rt43.c0 DESC  NULLS LAST) FROM rt1 WHERE ((((NOT (0.8292005589958075)))<(((-1.398012054E9)-(NULL))))) GROUP BY LTRIM(rt43.c0) COLLATE BINARY;SELECT CAST((- (rt43.c0)) AS REAL), (((NULL))>=((rt43.c2))) COLLATE RTRIM, rt1.c2 FROM rt1, rt43; -- 0ms;
SELECT DISTINCT (((((+ (rt1.c2)))AND(((rt1.c6) BETWEEN (rt1.c7) AND (rt1.c5)))))AND(PRINTF(rt1.c3, rt1.c7, rt43.c1, 0.24955481813962865, rt1.c1))) FROM rt1 WHERE (CAST(((('FALSE', 2.012484769E9, NULL))<>((668118172, '>M+-', x''))) AS NUMERIC));SELECT ALL 0.07913961866683061 FROM rt43 WHERE (CAST((~ ('-778950088')) AS TEXT)); -- 0ms;
SELECT DISTINCT (((rt43.c2)) BETWEEN ((0.5170426400293682)) AND ((((((rt43.c1)OR(rt43.c0)))AND(rt1.c5))))) FROM rt1 WHERE (((0.26922832488086845 IN (x'16e8')) IN ()));SELECT DISTINCT RTRIM('-1447073188' COLLATE RTRIM) FROM rt1 WHERE ((((NULL IN (0.7660916725982967))) BETWEEN (((((0.10276033567740239)AND(x'edf5')))OR(0x119e352e))) AND ((((x''))!=(('Z)ꑎBe\n?lx')))))); -- 0ms;
SELECT ALL (((((NULL))!=((rt1.c5))))>=((NOT (rt1.c6)))), GROUP_CONCAT((((rt43.c2, rt1.c7, rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, rt1.c5)) AND ((rt1.c7, rt43.c1, NULL)))) OVER (), ((((((rt43.c1) IS FALSE))AND(COUNT(*))))AND(((rt1.c4)LIKE(rt1.c0)))), CASE WHEN COUNT(rt1.c0) THEN (((rt43.c0, rt1.c5, NULL)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c0)) AND ((rt1.c7, rt43.c0, rt1.c0))) END, (((rt1.c0) NOT BETWEEN (rt43.c1) AND (rt1.c3)) IN ()) FROM rt1 ORDER BY STRFTIME(SQLITE_COMPILEOPTION_GET(x''), rt1.c7 COLLATE NOCASE, rt1.c3 COLLATE NOCASE, (((rt1.c0, rt43.c1, x'', rt1.c2, rt1.c7)) NOT BETWEEN ((rt1.c3, rt43.c0, rt1.c5, rt43.c2, 1.63322228E9)) AND ((rt1.c0, rt1.c4, rt1.c2, rt1.c6, rt43.c1))), (('-1097405267')AND(rt1.c4)), ((rt1.c6) NOTNULL), ((((((((rt1.c7)OR(rt1.c3)))OR(rt1.c5)))AND(rt1.c5)))AND(rt1.c0)));SELECT SQLITE_VERSION() FROM rt1 WHERE (((((((-1138785712)%(x'4568')))AND((('')<=(x'af3d')))))AND(CAST('w' AS NUMERIC)))); -- 0ms;
SELECT ((rt1.c2 COLLATE NOCASE) NOT NULL) FROM rt43;SELECT DISTINCT (((rt1.c0)) BETWEEN ((CAST(rt1.c2 AS INTEGER))) AND ((((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c3))))) FROM rt1 WHERE (CASE CASE WHEN 0.20886951675182053 THEN x'' END  WHEN CAST(-6.39666164E8 AS INTEGER) THEN ((0.38873942229640057)||(NULL)) END); -- 0ms;
SELECT (((((rt1.c3)*(rt43.c0))))<((((((rt43.c2)AND(rt43.c0)))AND(rt1.c2))))) FROM rt1 WHERE ((((0X5e548506)) BETWEEN ((((0X4c7670d0) NOTNULL))) AND (('1935386345' COLLATE NOCASE))));SELECT DISTINCT 0X6f86a0f2 COLLATE BINARY, MIN(UNICODE(rt1.c0)), IFNULL(DISTINCT CASE WHEN rt1.c7 THEN rt1.c7 END, ((rt1.c7)GLOB(rt43.c0))) FROM rt1;SELECT ALL rt1.c6 FROM rt1 WHERE ((((('s>')IS(0.6393171400365337)))&(CASE WHEN 'q7vpacw)*' THEN NULL ELSE x'5bb1' END))); -- 0ms;
SELECT ALL (((CASE rt43.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c4 END, load_extension(rt1.c3, rt1.c7), 0x519911f0))=((SUM(rt1.c0), ((rt1.c7) NOT BETWEEN (rt1.c7) AND (rt1.c0)), ((rt1.c1)<<(rt43.c0))))) FROM rt1, rt43 WHERE ((((((('')AND(-4.22998011E8)))OR(NULL))) IS TRUE));SELECT ALL ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 ELSE rt43.c2 END)<=(-2.011196244E9)) FROM rt1, rt43 WHERE ((~ (CAST(NULL AS TEXT)))) GROUP BY ((((((((((rt1.c5)OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c7)))OR(rt1.c6)))<>(((rt1.c6)AND(rt43.c0)))) HAVING ((TRIM(rt43.c2, rt1.c4))<=(rt43.c1 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT TOTAL(rt1.c0) FILTER(WHERE (((rt1.c1))<((rt43.c0))) COLLATE BINARY) OVER () FROM rt43, rt1; -- 0ms;
SELECT rt1.c4, GROUP_CONCAT(0x312079a2) OVER (), ((MAX(rt43.c2))IS(CAST(rt1.c2 AS NUMERIC))) FROM rt43 WHERE (((((CAST('hK8<<' AS REAL))AND(CAST('1088292457' AS INTEGER))))OR(((x'1d0e') IS FALSE)))) GROUP BY ((((rt1.c1 COLLATE BINARY)AND(-1.37200815E8)))AND(rt1.c0 COLLATE RTRIM)), CASE WHEN ((rt1.c1)%(rt1.c6)) THEN rt1.c1 WHEN ((rt1.c3)>(rt43.c2)) THEN ((rt43.c0)>>(rt43.c0)) WHEN rt1.c2 COLLATE BINARY THEN (((rt1.c7, rt1.c0, rt1.c4, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c5, rt1.c3, rt1.c3, rt1.c2)) AND ((rt43.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c1))) WHEN CAST(rt1.c5 AS INTEGER) THEN (('-986225429')*(rt1.c0)) WHEN 0.5505558929549937 THEN (((rt43.c2)) BETWEEN ((rt1.c1)) AND ((x''))) END, ((((((((((rt43.c2)GLOB(rt1.c5)))OR(DATE(rt1.c6, rt43.c0, rt1.c3))))AND(((rt1.c2) NOT NULL))))AND(rt43.c1 COLLATE NOCASE)))AND(CAST(rt43.c1 AS BLOB))) HAVING (TOTAL(rt1.c7) IN ());SELECT DISTINCT ((rt1.c5 COLLATE NOCASE) NOT BETWEEN (((rt43.c1)LIKE(rt1.c5))) AND ((((rt1.c2, rt1.c4, rt1.c0))<=((rt1.c2, rt1.c6, rt1.c1))))) FROM rt1 LEFT OUTER JOIN rt43 ON rt1.c1; -- 0ms;
SELECT ((UNLIKELY(rt43.c2))<<(((rt43.c0)LIKE(rt43.c0)))) FROM rt43 WHERE ((('-294559153' COLLATE RTRIM)>=((('-Infinity')|('nA'))))); -- 0ms;
SELECT MIN(rt1.c7, (((rt1.c2))>((rt1.c2))), COUNT(*), ((((rt1.c1)AND(rt1.c2)))OR(rt1.c7))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT (+ (NULL)), ((CASE WHEN rt43.c2 THEN rt1.c5 END) NOT NULL), (0x77f414a1 IN (((rt43.c1) NOTNULL), COUNT(*))) FROM rt43, rt1 WHERE (((TYPEOF(DISTINCT x'3368'))+(0Xffffffff94745b96 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT TRIM((rt1.c3 IN ()), CASE WHEN NULL THEN rt1.c5 WHEN NULL THEN rt43.c2 WHEN rt1.c5 THEN rt1.c1 END), CAST(((rt1.c3) IS TRUE) AS BLOB), CAST((x'' IN ()) AS BLOB) FROM rt1, rt43 ORDER BY ((NOT (rt1.c1)) IN ()) ASC  NULLS LAST, (CASE rt43.c1  WHEN rt43.c0 THEN rt1.c6 END IN ()) DESC  NULLS LAST, UPPER(DISTINCT ((rt1.c3) NOTNULL)) ASC  NULLS FIRST; -- 0ms;
SELECT (((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c2)), CAST(rt43.c2 AS NUMERIC), ((x'') NOT BETWEEN (rt1.c5) AND (rt1.c6))))==((GROUP_CONCAT(rt43.c2), (rt1.c1 IN ()), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4))))) FROM rt43 WHERE (((((((NULL)AND(0xffffffffb7545b2b)))OR('KR\L*HH&'))) NOT BETWEEN ((('790 1872 5952099383542611873 541-4117661612175042619:') IS TRUE)) AND (CASE WHEN 'R{EMO)}\nF' THEN 'R5' ELSE 250388059 END)));SELECT ((((CASE rt43.c2  WHEN rt1.c7 THEN rt1.c6 ELSE rt1.c3 END)AND('1032369158')))OR(NULL)) FROM rt43;SELECT ALL COUNT(0.5698250338651465) COLLATE RTRIM, CAST(CASE rt1.c2  WHEN rt1.c6 THEN rt1.c4 END AS TEXT), ((((((((((rt1.c7) IS TRUE))AND(DATETIME(rt1.c0, rt1.c1, '0'))))AND(CAST(rt43.c0 AS REAL))))OR(((rt1.c7)LIKE('632506381')))))OR((x'' IN ()))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT 0.6938658742305617, ((((rt1.c7) NOTNULL))||(CAST(rt1.c6 AS REAL))), (((((rt43.c1 IN ()))OR(((rt43.c2)|('162574847')))))OR(((rt1.c5) ISNULL))), ((((((rt1.c7) NOT NULL))OR(SUM(rt1.c6))))AND(((NULL) BETWEEN (rt43.c2) AND (x'')))), TIME(rt43.c2, rt43.c1, rt1.c1) COLLATE NOCASE FROM rt43 WHERE (x'' COLLATE BINARY COLLATE RTRIM);SELECT DISTINCT AVG(CASE WHEN rt43.c0 THEN rt43.c0 WHEN rt43.c2 THEN rt43.c1 WHEN rt1.c3 THEN rt1.c1 END) FROM rt1, rt43 WHERE ((+ ('-70630026' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((rt43.c0)<=(0.20886951675182053))) ISNULL) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN rt43.c1 THEN rt1.c2 WHEN rt43.c1 THEN rt1.c1 WHEN rt43.c0 THEN rt1.c5 END COLLATE RTRIM FROM rt1, rt43 WHERE (CASE WHEN (('JL') NOT NULL) THEN 0.7308736620904898 END); -- 0ms;
SELECT (((((rt1.c6, rt1.c5, rt43.c1))>((rt43.c1, rt1.c5, rt1.c5)))) BETWEEN (CASE WHEN rt1.c6 THEN rt1.c3 END) AND (((0X2198a28f)LIKE(rt1.c4)))), (((((rt1.c0)||(rt43.c0))))<=((((rt43.c2) NOTNULL)))), (((('0.9640637500269658')AND(((rt1.c1)AND(rt1.c2)))))OR((((rt1.c4)) BETWEEN ((rt43.c2)) AND ((rt1.c7))))) FROM rt43, rt1 WHERE (((((((((((((((((0xffffffffad32daca)OR(x'b401')))OR('755847601')))OR('-1198350953')))OR('vZ钬9脭')))OR(CASE WHEN NULL THEN '' ELSE x'9d54' END)))AND((NULL IN ()))))AND(HEX(DISTINCT x'bee7'))))AND(((x'') NOT BETWEEN ('*H') AND (0.6146635196091909))))); -- 0ms;
SELECT DISTINCT CAST('-1299505255' AS REAL) FROM rt1, rt43 WHERE ((- (((((0.12333080388424433)AND(-1552224030)))AND('2141908639'))))); -- 0ms;
SELECT DISTINCT TOTAL((((rt1.c2))>((rt1.c7)))) FROM rt1; -- 1ms;
SELECT DISTINCT ((rt43.c1) IS FALSE) COLLATE NOCASE FROM rt1 WHERE (CAST((('|L*UYw퍣%') BETWEEN (NULL) AND (x'')) AS BLOB));SELECT DISTINCT CAST(((rt43.c2)<(rt43.c2)) AS BLOB) FROM rt43, rt1 WHERE ((((0X26b6657f, '<qjzhbl''G', x'03fa')) NOT BETWEEN ((CAST(x'c7d0' AS TEXT), CASE x''  WHEN '' THEN 0.5590511237397878 END, x'')) AND (((('383743312') BETWEEN ('OKTkJH') AND (NULL)), CASE WHEN NULL THEN NULL ELSE x'c9c7' END, NULL COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT CAST(COALESCE(rt1.c2, rt43.c2) AS BLOB) FROM rt43 ORDER BY ROUND(rt1.c1 COLLATE RTRIM, ((rt43.c2) ISNULL))  NULLS LAST;SELECT DISTINCT ((CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c4 END) NOT BETWEEN (rt1.c1) AND (CAST(rt1.c6 AS NUMERIC))) FROM rt1, rt43 WHERE ((((((((NULL)) BETWEEN (('-1003647403')) AND ((NULL))))AND((NOT ('199286907')))))AND(')7' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (('754512554')>=((((rt43.c1))>=((rt1.c1))))) FROM rt43 WHERE (((CAST(x'4c43' AS REAL))>('0.01231130435567096')));SELECT DISTINCT (((rt1.c6 IN (rt1.c1)))||(MAX(rt1.c2))) FROM rt43, rt1; -- 0ms;
SELECT 0.9177109447357543, (- (x'')), rt1.c3 FROM rt43;SELECT ALL CASE WHEN (- (rt1.c2)) THEN CASE x'0ca9'  WHEN rt1.c6 THEN rt1.c2 END ELSE (NOT (rt43.c2)) END, CASE ((((((((((((rt1.c7)OR(rt1.c3)))OR(rt1.c5)))AND(rt1.c3)))AND(rt1.c5)))AND(rt43.c0)))AND(rt1.c7))  WHEN CAST(rt1.c3 AS INTEGER) THEN rt1.c7 COLLATE NOCASE END, AVG(((x'')>>(rt1.c3))) OVER () FROM rt1 WHERE (((((0.24571796216483044)%(0.45675046747047054)))>(CASE WHEN x'' THEN x'' WHEN '771198610' THEN x'b51b6162' WHEN -1386600092 THEN '-1815296313' END)));SELECT (((rt43.c1)) NOT BETWEEN ((x'efc2')) AND ((((rt1.c7) BETWEEN (rt1.c6) AND (rt43.c1))))), ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((((rt1.c1, rt1.c2, rt1.c7)) BETWEEN ((rt43.c2, rt43.c1, rt43.c1)) AND ((rt1.c0, rt1.c2, rt1.c0)))) AND (rt1.c3 COLLATE BINARY)), CASE rt1.c3  WHEN rt43.c1 THEN rt1.c2 ELSE rt1.c7 END COLLATE RTRIM FROM rt43 LIMIT -379277242;SELECT (((((((rt1.c3, rt1.c5, rt1.c3)) BETWEEN ((rt1.c4, rt43.c1, rt1.c7)) AND ((rt1.c6, rt1.c2, ''))))AND(((rt1.c1) NOT NULL))))AND(((((((((rt1.c0)AND(rt1.c1)))OR(x'badb')))AND(rt1.c4)))OR(rt1.c6)))) FROM rt43;SELECT DISTINCT ((((UPPER(rt43.c0))AND(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN '' THEN rt1.c5 WHEN rt1.c1 THEN rt1.c7 ELSE rt1.c4 END)))AND(((rt1.c6) IS TRUE))) FROM rt43;SELECT DISTINCT (((((-7.78950088E8) NOT BETWEEN (rt1.c0) AND (rt43.c1)), ((((rt1.c3)AND(rt1.c1)))OR(rt1.c2)), ((rt1.c5)-(rt43.c2))))>((COUNT(rt43.c0), ((rt43.c1) ISNULL), (((rt1.c1))!=((rt1.c3)))))) FROM rt1 WHERE (((((((x''))>(('-556687159')))))>(('覄*2JH')))) GROUP BY (((rt1.c1, rt43.c0, rt1.c7, rt1.c5, rt1.c7, rt1.c5, rt43.c0)) NOT BETWEEN (('''AO2 ', ((rt1.c3)*(rt43.c2)), CAST(rt43.c0 AS REAL), NULL, ((rt43.c0) BETWEEN (rt43.c1) AND (rt43.c2)), CAST(rt1.c5 AS TEXT), ((rt1.c2)>=(rt1.c6)))) AND ((((rt1.c6)OR(rt1.c5)), (rt1.c6 IN ()), CAST(rt1.c3 AS NUMERIC), ((rt43.c2) IS FALSE), ((rt43.c2)%(rt43.c1)), (NOT ('210895729')), ((rt43.c0) BETWEEN (rt43.c2) AND (rt43.c2))))), ((((rt43.c2) IS TRUE)) NOT BETWEEN (0.8703984848737958) AND ((((rt1.c3))<((rt1.c0))))), (((x'', x'', rt1.c5, rt1.c4, rt1.c0)) BETWEEN ((((rt1.c7)=(0.15708687499756857)), '-1722405554', rt43.c1 COLLATE BINARY, ((rt1.c7)||(rt43.c0)), '<Ep')) AND ((((rt43.c1) ISNULL), ((rt1.c3) BETWEEN (rt1.c6) AND (rt1.c5)), ((rt1.c2)>(rt43.c2)), ((rt43.c2) ISNULL), CASE WHEN rt43.c1 THEN rt43.c0 END)));SELECT DISTINCT (COUNT(*) IN ()), COUNT(((NULL) NOT BETWEEN (rt1.c6) AND (rt43.c0))), ((((rt1.c4) NOT NULL)) NOT BETWEEN (((rt1.c4)IS(0Xffffffff9cb16cb2))) AND (((rt1.c2)GLOB(rt1.c3)))) FROM rt1;SELECT DISTINCT LIKELIHOOD(CAST(NULL AS INTEGER), 0.9127667726218822), CAST(((rt1.c7)&(rt1.c6)) AS NUMERIC), COUNT(*) OVER () FROM rt1, rt43 LIMIT -1160068200 OFFSET -276805552; -- 0ms;
SELECT DISTINCT CAST((- (rt43.c1)) AS TEXT), COUNT(*), CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END COLLATE BINARY FROM rt43 WHERE (CAST(0.8469449056801251 AS NUMERIC) COLLATE BINARY);SELECT DISTINCT ((((rt43.c1) BETWEEN (x'') AND (rt1.c3)))IS((- (rt1.c4)))) FROM rt1, rt43 WHERE (((TRIM(x'')) BETWEEN ((('-1405498431') IS TRUE)) AND ((('0.8243383152791515') IS FALSE)))); -- 0ms;
SELECT GROUP_CONCAT(((((((((rt1.c2)AND(rt43.c0)))OR(rt1.c4)))AND(rt43.c1)))OR(rt43.c0))) FROM rt43 GROUP BY NULL HAVING CASE TOTAL(rt43.c0)  WHEN rt43.c0 COLLATE RTRIM THEN TYPEOF(rt1.c3) WHEN rt1.c7 COLLATE BINARY THEN ((rt43.c0) BETWEEN (rt1.c5) AND (rt1.c3)) WHEN rt1.c7 THEN rt1.c6 COLLATE BINARY ELSE 0X27d2ac9c END;SELECT DISTINCT (NOT (SUM(x''))) FROM rt43 NOT INDEXED, rt1 NOT INDEXED WHERE (((NULL)!=(x'')) COLLATE BINARY); -- 0ms;
SELECT TOTAL(rt1.c0) FILTER(WHERE (CAST(rt1.c3 AS NUMERIC) IN ((~ (rt43.c1))))) OVER (), (~ (json_extract(rt43.c0, rt1.c4))), (((NOT (rt43.c2))) NOT BETWEEN (rt1.c6 COLLATE RTRIM) AND ((rt1.c4 IN ()))) FROM rt1 WHERE (((CAST(-1190286131 AS REAL)) NOTNULL));SELECT ALL NTH_VALUE(((CAST(rt1.c0 AS REAL))-(((2050692651)<('-1160068200')))), ((((rt1.c2)/(rt1.c6)))OR(((rt1.c7) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) OVER () FROM rt1 WHERE ((- (CAST(0.264291840975875 AS INTEGER)))) ORDER BY ABS(DISTINCT ((rt1.c6)/(rt1.c1))) DESC  NULLS FIRST, ((0.8614096363470359)<<(((((rt1.c7)OR(rt43.c1)))AND(rt1.c4)))) DESC  NULLS FIRST;SELECT DISTINCT (((rt43.c2)) BETWEEN ((CASE WHEN rt43.c1 THEN rt1.c6 END)) AND ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 ELSE x'' END))) FROM rt43, rt1 WHERE (((~ (x'')) IN ())); -- 0ms;
SELECT DISTINCT LOWER(((rt43.c1)>=(-1.794238137E9))), LIKELIHOOD(((rt1.c5)|(rt1.c1)), 0.8286352566723798), ((CAST(rt1.c3 AS TEXT)) NOT BETWEEN (CASE WHEN rt1.c4 THEN rt1.c4 END) AND (((rt1.c6)|(rt1.c0)))) FROM rt43 WHERE (CASE (NOT ('dQ'))  WHEN ((NULL) NOT BETWEEN (NULL) AND (x'c0c4')) THEN CASE x'b8cb'  WHEN x'ff65' THEN x'' ELSE NULL END END);SELECT ALL AVG(((rt1.c6)<=(rt43.c2))) OVER () FROM rt43, rt1; -- 0ms;
SELECT ((rt43.c0) NOT BETWEEN (((rt1.c5)LIKE(rt43.c1))) AND (rt43.c2)) FROM rt1 WHERE ('-1435650253') LIMIT 1836753998;SELECT (((((+ (x'')))OR(TOTAL(0.6294642748029008))))OR(((rt43.c0) NOT NULL))), rt1.c7, (((((rt1.c1)AND(rt1.c2)))AND(rt1.c5)) IN (((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c7)))) FROM rt1;SELECT ALL ((((rt1.c3)LIKE(rt1.c5))) BETWEEN (rt1.c6 COLLATE BINARY) AND (rt1.c5 COLLATE NOCASE)), ((((((rt1.c7)<=(rt43.c0)))OR(((rt1.c7) NOT BETWEEN (rt43.c2) AND (rt43.c2)))))AND(((rt1.c5) BETWEEN (rt1.c4) AND (rt43.c2)))), (CAST(rt43.c2 AS REAL) IN ()) FROM rt1, rt43; -- 0ms;
SELECT CAST(rt43.c0 AS REAL) COLLATE NOCASE FROM rt1 NOT INDEXED;SELECT COUNT(*) OVER () FROM rt43 WHERE ((NOT ('[iZc+YE5')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT AVG((rt1.c0 IN ())) OVER (), SUM(CASE rt43.c1  WHEN rt1.c7 THEN rt1.c3 END) OVER (), CAST(CASE WHEN rt43.c2 THEN rt43.c0 END AS BLOB) FROM rt1, rt43 WHERE ((((((NULL) BETWEEN ('902694667') AND (x''))))==((CASE NULL  WHEN '-1552224030' THEN 0.8482240833517063 END)))); -- 0ms;
SELECT CAST((rt1.c3 IN ()) AS INTEGER) FROM rt43, rt1 WHERE (CASE ((x'8cc0') NOT BETWEEN ('1102554933') AND (NULL))  WHEN ((((x'')AND(0xffffffffe6956076)))AND(0.20943816266302995)) THEN NULL ELSE ((0.22437695332242757)>=('1848606958')) END); -- 0ms;
SELECT ALL CASE x''  WHEN (rt1.c3 IN (rt1.c3)) THEN CASE rt43.c0  WHEN '3tsRn%TGಟ' THEN rt43.c0 WHEN rt43.c0 THEN rt43.c1 WHEN rt43.c0 THEN rt1.c7 ELSE rt43.c2 END WHEN rt43.c2 COLLATE NOCASE THEN CASE rt43.c1  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c7 END WHEN ((rt1.c5) ISNULL) THEN ((rt1.c4)<=(rt43.c1)) ELSE ((((rt1.c3)AND(rt1.c0)))OR(rt1.c2)) END FROM rt1;SELECT (((rt43.c1, x'3ac2', rt43.c1)) NOT BETWEEN (((((rt1.c2)) BETWEEN ((rt43.c1)) AND ((rt1.c6))), (- (rt1.c6)), rt1.c6 COLLATE RTRIM)) AND ((((rt1.c0) IS TRUE), CAST(rt1.c4 AS INTEGER), ((rt1.c3) NOTNULL)))) FROM rt43 WHERE (CAST(((0X520b08c1) NOT BETWEEN ('1093691695') AND ('-904315318')) AS BLOB));SELECT DISTINCT (((rt43.c1)) NOT BETWEEN ((NULL)) AND ((((rt1.c0)-(rt43.c2))))), (((- (rt1.c1)))LIKE(((rt43.c2) NOTNULL))), ((MIN(rt1.c6))|(((rt43.c1) NOT NULL))) FROM rt1;SELECT DISTINCT CUME_DIST() OVER () FROM rt43 NATURAL JOIN rt1; -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c1 AS BLOB))AND(rt1.c5)))OR(CAST(rt1.c1 AS TEXT))) FROM rt1 LIMIT -2047279316; -- 1ms;
SELECT DISTINCT (((((rt43.c1))<=((rt1.c2))))<<((- (rt43.c0)))), GROUP_CONCAT(((rt1.c5) ISNULL)), (((rt1.c2)) NOT BETWEEN ((MAX(rt43.c2))) AND (((((rt43.c0)) BETWEEN ((NULL)) AND ((rt43.c0)))))) FROM rt1, rt43 ORDER BY rt43.c2; -- 0ms;
SELECT GROUP_CONCAT(rt43.c1) OVER (), CAST(((rt1.c4)*(rt1.c4)) AS INTEGER), rt43.c2 FROM rt43;SELECT DISTINCT CASE CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c1 END  WHEN COUNT(rt43.c1) THEN ((rt1.c0) BETWEEN (rt1.c7) AND (rt1.c6)) WHEN CAST(rt1.c5 AS NUMERIC) THEN ((rt1.c3) IS TRUE) WHEN ((rt1.c6) NOTNULL) THEN CAST(rt43.c0 AS REAL) WHEN ((-1116238290) BETWEEN (-1570947739) AND (rt1.c0)) THEN CASE WHEN rt1.c6 THEN rt43.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt43.c0 ELSE rt1.c1 END WHEN HEX(DISTINCT NULL) THEN CASE WHEN rt43.c0 THEN rt1.c4 END ELSE (rt1.c7 IN ()) END FROM rt43, rt1 WHERE (((('3\r')) BETWEEN (((((NULL))>((NULL))))) AND ((((-1.886728264E9) BETWEEN ('-772036617') AND (0.5801265282572321)))))); -- 0ms;
SELECT ALL TOTAL(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c6))) FROM rt43, rt1; -- 0ms;
SELECT ALL CAST(((((((((rt1.c4)AND(rt43.c2)))OR(rt1.c7)))AND(rt43.c0)))OR(rt1.c5)) AS BLOB) FROM rt43;SELECT (+ (COUNT(0Xffffffffe79ef7b3))) FROM rt43; -- 0ms;
SELECT LIKELIHOOD(DISTINCT rt1.c0, 0.887503744866391) FROM rt43 GROUP BY (~ (0.5455359422316929)) HAVING ((rt1.c5)*(rt43.c1)) COLLATE NOCASE;SELECT ALL ((LIKELIHOOD(rt1.c7, 0.22799914550031342))OR((~ (rt43.c1)))) FROM rt43, rt1; -- 0ms;
SELECT ALL NULL FROM rt1; -- 0ms;
SELECT ALL ((((((((((rt1.c4)AND(rt1.c4)))OR(rt43.c2)))AND(rt1.c5)))AND(rt1.c0)))<(((((((((rt43.c1)OR(rt1.c1)))OR(rt1.c5)))OR(rt1.c3)))AND(rt1.c1)))) FROM rt1;SELECT ALL CASE COUNT(*)  WHEN (rt1.c5 IN ()) THEN (- (rt43.c0)) ELSE ((rt1.c1) IS TRUE) END FROM rt43, rt1 WHERE ((0.08065109456675512 IN ())) LIMIT -23743721 OFFSET -837145510; -- 0ms;
SELECT DISTINCT ((CAST(rt43.c2 AS INTEGER)) NOT BETWEEN (((((rt1.c5)OR(rt1.c0)))OR('⹜A'))) AND (((x'') IS TRUE))) FROM rt1;SELECT DISTINCT ((((((rt43.c2)OR(rt43.c2)))OR(json_object(rt1.c5, rt1.c7))))OR(MIN(rt43.c1))), (+ (rt1.c5)) COLLATE BINARY COLLATE NOCASE, (- (rt43.c1)) FROM rt1, rt43 GROUP BY rt1.c5;SELECT CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt43.c2 END COLLATE RTRIM FROM rt43;SELECT DISTINCT CASE 0X41b7a735 COLLATE BINARY  WHEN ((rt1.c7)>=(rt1.c6)) THEN ((rt1.c4) ISNULL) WHEN LOWER(rt1.c5) THEN HEX(DISTINCT '1582597382') WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c6 END THEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c2)) WHEN (+ (rt43.c2)) THEN ((rt43.c0) BETWEEN (NULL) AND (rt1.c2)) WHEN TOTAL(rt1.c3) THEN CASE WHEN rt43.c0 THEN 0Xfffffffff0fcd18e END ELSE (- (rt1.c0)) END, rt1.c1, ((((CASE WHEN rt1.c1 THEN rt1.c6 END)AND(CAST(0.061606352644382856 AS BLOB))))AND(rt1.c0)), (((rt43.c2, rt1.c4, rt1.c1)) NOT BETWEEN ((LOWER(DISTINCT rt43.c2), (rt1.c3 IN (rt1.c7)), ((rt43.c1)IS(rt1.c0)))) AND ((CASE rt43.c1  WHEN rt43.c2 THEN rt43.c2 WHEN rt1.c2 THEN x'' WHEN rt1.c5 THEN rt1.c5 END, NULL, ((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c4)))AND(rt43.c1)))OR(rt1.c7))))), MIN(((rt43.c2) BETWEEN (rt1.c2) AND (rt1.c5))) FROM rt43;SELECT ALL LAG(x'', ((((((NULL)OR(rt1.c5)))OR(rt1.c1))) NOT NULL), LOWER(((rt1.c1) ISNULL))) OVER (), ((CAST(rt43.c0 AS INTEGER)) NOTNULL), COUNT(*) FROM rt1, rt43; -- 0ms;
SELECT MAX((rt1.c3 IN (rt1.c2, rt43.c0))) FROM rt1 GROUP BY json(CASE WHEN rt1.c3 THEN rt1.c6 ELSE rt43.c2 END);SELECT ((((0.9136922708643507)>(rt43.c0))) BETWEEN (GROUP_CONCAT(rt1.c2)) AND (CASE rt1.c5  WHEN rt1.c1 THEN rt1.c1 END)) FROM rt1;SELECT DISTINCT ((- (rt1.c5)) IN ()) FROM rt1, rt43; -- 0ms;
SELECT ((((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c3))) IS TRUE) FROM rt1 ORDER BY ((CASE rt43.c2  WHEN rt1.c6 THEN rt1.c7 END)LIKE(rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST;SELECT DISTINCT (- (rt1.c1)), '-1718469743', ((rt1.c7)IS NOT(TOTAL(rt1.c7))) FROM rt1; -- 0ms;
SELECT DISTINCT MAX(((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt43.c0))) FROM rt1 WHERE ((0.9313558458156406 IN (NULL, x'3205')) COLLATE BINARY) ORDER BY 0.4488535098285268 ASC, ((((((''))>((rt1.c7)))))=(((rt1.c1 IN ())))) ASC  NULLS FIRST, ((((rt1.c1) IS FALSE))=(CAST(rt1.c3 AS INTEGER)));SELECT ((- (rt1.c4)) IN ()) FROM rt1; -- 1ms;
SELECT DISTINCT NULL FROM rt1; -- 0ms;
SELECT ALL (NOT (json_array_length(rt43.c1, rt1.c7))) FROM rt1 WHERE (CAST((((0.11913163002537663, '', 0.6183183635018455)) NOT BETWEEN ((NULL, '', 'q')) AND ((0.21267335476809046, '-685005221', x''))) AS NUMERIC));SELECT ALL FIRST_VALUE(-1561463818) OVER () FROM rt43, rt1; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1, rt43 GROUP BY CASE WHEN ((rt1.c0) NOTNULL) THEN ((rt1.c7)<>(rt43.c1)) ELSE rt1.c6 COLLATE RTRIM END; -- 0ms;
SELECT DISTINCT ((COUNT(*)) IS FALSE), ((rt1.c3 COLLATE NOCASE)=((NOT (rt43.c1)))), (((((rt1.c6) NOT BETWEEN (rt43.c2) AND (rt1.c4))))>((CAST(rt1.c0 AS NUMERIC)))) FROM rt43, rt1; -- 0ms;
SELECT ALL rt1.c5, (((rt1.c1, rt43.c0, rt1.c0))==((-1.138785712E9, rt43.c0, rt1.c3))) COLLATE RTRIM COLLATE RTRIM, (rt1.c2 IN (rt1.c7)) COLLATE BINARY FROM rt1, rt43; -- 1ms;
SELECT rt43.c1 FROM rt1, rt43 ORDER BY ((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt43.c0)))GLOB(((rt43.c1) NOT BETWEEN (rt43.c1) AND (rt1.c2)))); -- 0ms;
SELECT ((CASE rt1.c2  WHEN rt43.c1 THEN rt1.c7 ELSE rt1.c3 END)|(((rt1.c3) NOT BETWEEN (rt1.c6) AND (x'')))), ((CAST(rt1.c6 AS TEXT))OR(GROUP_CONCAT(rt1.c7))), (((~ (0.21479219339150013)))/(CAST(rt1.c4 AS BLOB))) FROM rt1 WHERE ((((NULL IN (NULL)))+((NOT (NULL)))));SELECT ALL rt43.c2 FROM rt1, rt43; -- 0ms;
SELECT DISTINCT CASE rt1.c1  WHEN (rt43.c2 IN (rt1.c0)) THEN ((NULL) BETWEEN (rt1.c5) AND (1341989276)) END, (((((((((((rt1.c1))>=((rt1.c3))))AND((('๟l?2')LIKE(rt43.c2)))))OR(CAST(rt43.c1 AS TEXT))))OR(((rt1.c0)GLOB(rt1.c1)))))OR((((rt1.c1, rt1.c7, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt43.c1)) AND ((rt43.c0, rt1.c1, rt43.c1))))), AVG(CAST(rt1.c5 AS INTEGER) COLLATE BINARY) FROM rt43;SELECT DISTINCT ((load_extension(rt1.c2))!=(((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c0)))) FROM rt1, rt43;SELECT CASE CASE rt1.c3  WHEN rt1.c5 THEN rt1.c7 ELSE rt1.c5 END  WHEN ((rt1.c7)LIKE(rt1.c2)) THEN rt43.c2 ELSE ((rt1.c1)>=(rt1.c0)) END FROM rt1 WHERE ((((x'')) BETWEEN (((((NULL))=((NULL))))) AND ((json_patch('279986697', NULL)))));SELECT (((CASE WHEN rt1.c2 THEN rt1.c7 END, -2057719188, CASE WHEN rt1.c1 THEN 0.06647079906872255 ELSE rt1.c3 END))=(((rt43.c2 IN ()), rt1.c2 COLLATE RTRIM, ''))) FROM rt43 LIMIT -2011196244;SELECT ((((((((((rt1.c3)OR(0.5833401516293383)))OR(rt1.c7)))OR(rt1.c5)))AND(rt1.c4)))||(((x'84fa') NOT BETWEEN (rt1.c3) AND (rt1.c1)))), CAST(CAST(rt1.c1 AS TEXT) AS BLOB), ((rt1.c5) BETWEEN (rt1.c3) AND (rt43.c0)) COLLATE RTRIM FROM rt43 GROUP BY ((((((((COALESCE(DISTINCT rt43.c2, rt1.c0, rt1.c2, rt1.c4))OR((rt1.c5 IN ()))))OR(CAST('-87308700' AS NUMERIC))))AND(((rt43.c2)<<(rt1.c1)))))OR(rt1.c3)), CAST(rt43.c0 AS TEXT), ((LIKELY(rt1.c0))IS NOT(ABS(rt1.c6))) ORDER BY ((((rt1.c7) NOT NULL))||(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c6 END)), CAST(CASE WHEN rt43.c2 THEN rt1.c3 ELSE rt1.c7 END AS REAL)  NULLS FIRST;SELECT ALL DENSE_RANK() OVER () FROM rt43 GROUP BY json_array_length(((rt43.c1) NOTNULL), ((rt1.c3) BETWEEN (rt1.c5) AND (rt43.c2))), CAST((- (rt1.c4)) AS NUMERIC), (((rt1.c5)) BETWEEN ((((((((((rt1.c3)OR(rt1.c2)))AND(0xffffffffc24c73a2)))OR('')))OR(rt1.c7)))) AND ((CAST(rt1.c0 AS BLOB)))) HAVING ((((((rt43.c0) IS TRUE))AND(((rt1.c6)<=(rt1.c2)))))AND(((rt43.c2)||(rt1.c1))));SELECT DISTINCT LIKELY(DISTINCT rt1.c7) COLLATE NOCASE, (AVG(rt1.c4) IN ()), (((((rt1.c2) NOT NULL)))!=((CAST(rt1.c7 AS TEXT)))) FROM rt1; -- 0ms;
SELECT DISTINCT (NOT (CAST(rt1.c7 AS REAL))), DENSE_RANK() OVER (), (((rt1.c0) IS FALSE) IN ()) FROM rt43, rt1 WHERE ((NOT (((NULL) NOT BETWEEN (0.9784947713056981) AND (x''))))); -- 0ms;
SELECT ALL CASE WHEN ((-7.77651846E8) BETWEEN (rt1.c7) AND (rt1.c2)) THEN json_array(rt43.c1, rt43.c0, rt1.c4, rt1.c7, rt1.c5, rt43.c1) ELSE (+ (rt1.c1)) END FROM rt43 WHERE ((('U.') ISNULL) COLLATE NOCASE);SELECT ((CAST(rt1.c6 AS TEXT)) BETWEEN (CASE 0.8514552560658926  WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c3 END) AND (((rt1.c1)-(rt1.c7)))) FROM rt43 WHERE (((((0.13254219316267113) NOT BETWEEN (NULL) AND (NULL))) BETWEEN ((((0Xffffffffcf9025f3, 0X28c90adf, 'zTCO6Z>1O'))>((NULL, 0.08065109456675512, x'')))) AND ((~ (0.18931270057827065)))));SELECT ((((((rt1.c1)OR(rt1.c6)))OR('-778950088')))&(((rt1.c2) NOTNULL))) FROM rt1; -- 1ms;
SELECT DISTINCT rt1.c4 FROM rt1, rt43 WHERE ((((0Xffffffffd9cf42fa)) NOT BETWEEN ((CASE '0.3156518701314718'  WHEN NULL THEN 0Xffffffffc56cd19b END)) AND ((0.8699945062521987 COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((rt1.c1)<(((rt1.c1)||(rt1.c4)))) FROM rt43 INNER JOIN rt1 ON CASE rt1.c7  WHEN ((rt43.c2)+(rt1.c4)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND (('-2132612709'))) END; -- 0ms;
SELECT DISTINCT (((((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt43.c2))))-(rt1.c2 COLLATE RTRIM)) FROM rt43 WHERE ((((((0.9527587376681705)<=(''))))=((((((((((328608443)OR(0.5594404112520879)))OR('')))OR(NULL)))AND(371603459)))))) ORDER BY ((rt1.c3 COLLATE BINARY)!=(((rt1.c3)||(rt1.c6)))) DESC, ((rt1.c2 COLLATE RTRIM)OR(x'')) ASC;SELECT DISTINCT 0Xffffffff87f9def3 FROM rt1, rt43; -- 1ms;
SELECT ALL COUNT(*) OVER () FROM rt1, rt43 LIMIT 490891774; -- 0ms;
SELECT ALL rt1.c1, ((((((rt43.c0, 'w6,megyrM', rt1.c1))<=((rt43.c0, rt1.c3, rt1.c6))), (rt43.c0 IN ()), TOTAL(rt1.c4)))>=((CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN NULL WHEN rt1.c7 THEN rt43.c1 WHEN rt43.c2 THEN rt43.c0 WHEN rt1.c7 THEN rt1.c1 ELSE rt43.c2 END, (((rt43.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c1))), ((rt1.c5) NOT BETWEEN (rt43.c1) AND (rt1.c3))))), CASE WHEN rt1.c5 THEN CAST(rt1.c7 AS BLOB) END FROM rt1 NATURAL JOIN rt43 WHERE (((0.9923131589629532) IS FALSE)); -- 0ms;
SELECT DISTINCT ((CASE rt43.c1  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END) NOT BETWEEN (UNLIKELY(DISTINCT rt1.c4)) AND ((NOT (rt1.c4)))) FROM rt43;SELECT ALL (((UNLIKELY(DISTINCT rt43.c0), ((((((((rt1.c7)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c1)))OR(rt43.c0)), x'2853', CAST(rt1.c5 AS REAL), ((rt1.c6) BETWEEN (rt1.c5) AND (rt1.c6))))<(((- (rt1.c6)), (NOT (rt1.c5)), (((rt43.c2))>((rt1.c3))), ((rt1.c1)<<(rt1.c3)), ((rt1.c5) BETWEEN (rt43.c2) AND (rt43.c0))))), ((((LTRIM(rt43.c1))AND(((((rt1.c7)AND(rt1.c6)))OR(rt1.c6)))))AND(CASE WHEN x'' THEN rt1.c6 END)), ((CAST(rt1.c3 AS REAL)) BETWEEN ((((rt43.c2)) NOT BETWEEN ((0.766091764948722)) AND ((x'')))) AND ((NOT (rt1.c2)))) FROM rt43, rt1 LIMIT -1828160813; -- 0ms;
SELECT DISTINCT (((((rt1.c7))>=((rt1.c7)))) NOT BETWEEN ((((rt1.c7)) NOT BETWEEN ((0.7993951510833929)) AND ((rt43.c2)))) AND (rt1.c2)) FROM rt43, rt1; -- 0ms;
SELECT (NOT (rt1.c7)) FROM rt1, rt43 ORDER BY '/''' LIMIT 563651215; -- 0ms;
SELECT DISTINCT ((((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c3)))IS NOT((((rt43.c2)) NOT BETWEEN ((rt1.c7)) AND ((rt1.c5))))) FROM rt43;SELECT (+ (LIKELIHOOD(rt1.c3, 0.9606748975578153))) FROM rt43;SELECT DISTINCT 0.037017079098786265 FROM rt1, rt43 GROUP BY (NOT (((rt1.c4)IS NOT(rt1.c1)))) HAVING (rt43.c2 COLLATE NOCASE IN (LIKELIHOOD(rt43.c2, 0.15621847396642208))); -- 0ms;
SELECT ALL (((rt43.c0)) NOT BETWEEN ((TOTAL(rt43.c0))) AND ((((rt1.c2) BETWEEN (rt1.c1) AND (rt43.c2))))) FROM rt43;SELECT DISTINCT (rt43.c1 COLLATE NOCASE IN (((rt1.c0)>=(rt43.c2)))) FROM rt1 WHERE (((((NULL)AND(HEX(DISTINCT -598445831))))OR(((0.6460259265301298)+(NULL)))));SELECT CAST(0.16341744106911194 AS NUMERIC), (NOT (((rt1.c1)AND(rt1.c5)))), ((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR(MIN(rt1.c3))))OR(CASE x''  WHEN '' THEN rt43.c0 END)), MAX(((rt1.c3)<<(rt1.c0))), ((CAST(rt1.c1 AS REAL))IS(x'995c')) FROM rt1 ORDER BY CASE ((rt1.c0)*(rt1.c1))  WHEN CAST(rt43.c0 AS BLOB) THEN rt1.c0 WHEN CAST(rt1.c7 AS NUMERIC) THEN CAST(rt1.c0 AS TEXT) WHEN ((rt43.c0) ISNULL) THEN CAST(rt1.c3 AS TEXT) ELSE CASE WHEN rt1.c0 THEN rt1.c2 ELSE 0x74aee56a END END DESC  NULLS LAST;SELECT DISTINCT LAST_VALUE(LOWER(DISTINCT ((rt1.c0) IS FALSE))) OVER (), CAST(((((((((rt1.c0)OR(rt1.c7)))OR(rt1.c1)))AND(rt1.c5)))AND(rt43.c0)) AS INTEGER), (((((rt43.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c3))))>=(CASE WHEN rt1.c5 THEN NULL ELSE rt1.c6 END)) FROM rt1 WHERE ('168020775');SELECT COUNT(((rt1.c6) BETWEEN (rt43.c2) AND ('-653324705'))) FROM rt1, rt43; -- 0ms;
SELECT ALL AVG(rt1.c1) FILTER(WHERE TRIM(LIKELIHOOD(DISTINCT 0.5453617622262582, 0.6868059988325255))) OVER () FROM rt1, rt43 WHERE (((((((x'391f') NOT BETWEEN (NULL) AND (x'')))OR(((x'') IS FALSE))))AND((+ (''))))) GROUP BY (+ (((((((((rt43.c1)AND(rt43.c2)))OR(rt1.c2)))OR('')))AND(rt43.c0)))) HAVING ABS(DISTINCT ((((rt1.c1)AND(rt1.c0)))OR(rt43.c1))); -- 0ms;
SELECT ALL json_patch(COUNT(*), (((rt1.c6))=((rt1.c0)))) FROM rt43, rt1 WHERE (((']BW\n	!jf' COLLATE NOCASE)<=(((NULL) BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((rt43.c0)>(rt1.c6)) FROM rt1 LIMIT 2083679233 OFFSET 621984036;SELECT DISTINCT ((SUM(rt1.c3)) BETWEEN (rt1.c4) AND (rt1.c3)) FROM rt1 WHERE ((~ (x'85a7')) COLLATE RTRIM); -- 0ms;
SELECT ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c3)))IS(rt1.c6 COLLATE NOCASE)) FROM rt1, rt43; -- 0ms;
SELECT ((rt1.c6 COLLATE NOCASE)IS(CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c7 END)) FROM rt43, rt1; -- 0ms;
SELECT ((NOT (rt43.c2)) IN (0.9362152037049851)) FROM rt43 WHERE ((((CASE WHEN '-1561463818' THEN NULL ELSE x'd9df' END))>((((0.7695261917481803)|(NULL)))))) INTERSECT SELECT ALL '-1828160813' FROM rt43, rt1; -- 1ms;
SELECT ((((rt1.c2) NOT NULL))%((((rt1.c3)) BETWEEN ((rt1.c6)) AND ((rt43.c1))))), ((((rt43.c1 COLLATE BINARY)OR(rt1.c6)))AND(rt1.c5 COLLATE RTRIM)), (- (CAST(rt1.c0 AS INTEGER))) FROM rt43;SELECT DISTINCT COUNT(((0.18377775289208897) BETWEEN (rt43.c1) AND (rt1.c7))) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT ((((rt1.c3)>=(rt1.c2))) NOTNULL) FROM rt1, rt43; -- 0ms;
SELECT rt1.c6 FROM rt1; -- 0ms;
SELECT CAST((NULL IN ()) AS TEXT) FROM rt1, rt43 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((rt1.c5 COLLATE BINARY))>(((NOT (rt43.c0))))), (((((((rt1.c7)) BETWEEN ((rt1.c2)) AND ((rt1.c6))))AND(rt1.c5 COLLATE RTRIM)))AND((rt1.c2 IN ()))), rt43.c0 FROM rt43;SELECT ALL (((((rt43.c2))!=((''))))<<(CAST(rt1.c6 AS INTEGER))) FROM rt43 RIGHT OUTER JOIN rt1 ON CAST(rt43.c1 AS NUMERIC); -- 1ms;
SELECT DISTINCT (((rt1.c2)) BETWEEN ((SUM(rt1.c0))) AND ((((rt1.c1) NOT NULL)))), ((rt43.c0 IN ()) IN ()), (((((rt43.c2, 0x1, rt1.c3)) BETWEEN ((rt43.c0, rt1.c0, rt1.c0)) AND ((rt1.c1, rt43.c0, rt1.c3))))&((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))) FROM rt43 WHERE ('xi/^%I[Me') GROUP BY CASE ((rt1.c3) NOTNULL)  WHEN ((rt1.c0)>>(rt1.c3)) THEN json_insert(rt1.c7, rt1.c0, rt1.c5) END ORDER BY (((rt1.c1) NOT NULL) IN ());SELECT ALL HEX(CASE WHEN rt1.c5 THEN rt43.c0 ELSE rt43.c2 END), ((((((rt1.c1)|(rt1.c6)))AND(UNLIKELY(rt1.c6))))AND(CAST(rt1.c6 AS REAL))), CAST(TOTAL(rt1.c4) AS NUMERIC) FROM rt1;SELECT DISTINCT rt43.c1 FROM rt1 WHERE (HEX(((('H!Q㵫i', x'', x'3d7d')) BETWEEN ((0.6934478424885548, 0.6961556690696858, '-380009517')) AND (('>[]', x'67c0', NULL))))) ORDER BY CASE WHEN CAST(NULL AS REAL) THEN ((rt1.c1)||(1200315632)) ELSE CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c7 THEN rt1.c0 WHEN rt1.c7 THEN x'' END END;SELECT ((rt1.c6 COLLATE NOCASE)>=(((rt43.c0) NOT BETWEEN (rt1.c3) AND (rt43.c0)))) FROM rt43 ORDER BY CAST(rt1.c7 AS NUMERIC) DESC;SELECT DISTINCT COUNT(CASE WHEN rt43.c1 THEN rt1.c6 ELSE rt43.c1 END), (((rt1.c7)) NOT BETWEEN ((rt43.c0 COLLATE NOCASE)) AND (((rt1.c2 IN ())))), 0.8406972084798828, (CASE rt1.c0  WHEN rt1.c2 THEN rt43.c2 WHEN rt43.c0 THEN rt43.c1 WHEN rt43.c0 THEN rt1.c0 END IN ()), rt1.c2 FROM rt43, rt1; -- 1ms;
SELECT DISTINCT MIN(((rt1.c1)<>(rt1.c7))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3)) BETWEEN ((((rt1.c0) IS FALSE))) AND ((rt43.c0))) FROM rt43, rt1 WHERE (CAST(((x'') BETWEEN (NULL) AND (x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(TYPEOF(rt1.c7) AS NUMERIC), LIKELIHOOD(rt1.c4, 0.01670939868420873), (- (0.6457280504128967)) COLLATE RTRIM FROM rt43, rt1 WHERE ((((((((((((x'6e47')) NOT BETWEEN ((0.41979600495425895)) AND (('-639666164'))))AND(((x'0fe8') BETWEEN ('-611259048') AND (NULL)))))AND(0.7398894808727856)))AND(json(''))))OR(LIKELIHOOD(x'b02d', 0.42687011747250736)))); -- 0ms;
SELECT ALL (((rt1.c7)) BETWEEN ((((rt1.c0) BETWEEN (rt43.c1) AND (rt1.c4)))) AND (((rt43.c2 IN ())))) FROM rt43, rt1; -- 0ms;
SELECT ((rt1.c6)IS(((((rt1.c5)AND(rt1.c1)))AND(rt1.c3)))), (CAST(rt43.c0 AS TEXT) IN ()), CAST(rt43.c1 COLLATE NOCASE AS INTEGER) FROM rt1;SELECT DISTINCT ((((CAST(rt43.c2 AS TEXT))AND(COUNT(rt1.c6))))AND(((rt1.c3)IS NOT(rt1.c0)))) FROM rt1;SELECT (((- (rt43.c1))) NOT BETWEEN (((rt1.c5)LIKE(rt1.c1))) AND (SUM(rt1.c1))) FROM rt1, rt43; -- 0ms;
SELECT ALL 5.19725498E8 COLLATE RTRIM, ((((CAST(rt43.c0 AS INTEGER))AND(((rt1.c3) IS TRUE))))AND(TRIM(DISTINCT rt43.c0, rt1.c0))), (((rt43.c2 IN ())) IS TRUE) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c5))<=((CASE WHEN rt1.c6 THEN rt1.c3 ELSE rt43.c1 END))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2) NOT BETWEEN (rt1.c7) AND (rt43.c2)) AS NUMERIC) FROM rt43;SELECT DISTINCT SQLITE_SOURCE_ID() FROM rt43; -- 0ms;
SELECT ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt43, rt1; -- 0ms;
SELECT (NOT (rt1.c4 COLLATE NOCASE)) FROM rt1; -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt1.c6 THEN 'rE' ELSE rt1.c2 END)) FROM rt1, rt43; -- 0ms;
SELECT CASE WHEN ((((((((rt43.c1)AND(rt1.c5)))AND(rt1.c4)))OR(rt43.c2)))AND(rt43.c1)) THEN (((rt43.c2)) BETWEEN ((rt43.c2)) AND ((rt43.c1))) ELSE ((((rt1.c4)AND(rt43.c1)))AND(NULL)) END FROM rt1, rt43; -- 0ms;
SELECT MAX(CAST(rt1.c3 AS REAL)) FROM rt43;SELECT DISTINCT ((((CAST(rt1.c7 AS INTEGER))OR(((((rt1.c4)AND(rt1.c6)))OR(rt43.c0)))))OR(CASE rt1.c5  WHEN rt1.c6 THEN rt1.c1 END)) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT rt1.c0, (rt43.c2 IN ())) FROM rt1; -- 0ms;
SELECT ALL rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT '107330151', ((((((((MAX(rt1.c0))AND(((rt1.c4) NOTNULL))))OR(((rt43.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((rt1.c1) BETWEEN (rt43.c2) AND (rt43.c2)))))OR((rt1.c1 IN ()))), CASE ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2))  WHEN rt43.c2 COLLATE RTRIM THEN CASE rt1.c3  WHEN rt1.c7 THEN rt1.c1 END WHEN ((x'') NOTNULL) THEN COUNT(rt1.c2) WHEN TRIM(rt1.c5) THEN (((-7.78950088E8)) NOT BETWEEN ((rt43.c0)) AND ((rt1.c5))) ELSE ((NULL)GLOB(rt1.c2)) END FROM rt43, rt1; -- 0ms;
SELECT ALL LOWER(DISTINCT ((rt1.c1) IS FALSE)) FROM rt1 LIMIT -2143965297 OFFSET -1158739663; -- 0ms;
SELECT ALL NULL FROM rt43, rt1; -- 0ms;
SELECT CAST(((rt43.c2)%(rt1.c0)) AS BLOB) FROM rt1, rt43 WHERE (CASE ((0.3091452128826432)-(0.8328929867318758))  WHEN ((x'') BETWEEN (x'') AND (x'')) THEN (x'' IN ()) ELSE (((0xffffffff90c6ce84, '1627651054', x'f214', x'', x'')) NOT BETWEEN ((x'', x'424a', 'B[', 0.13309507395097986, NULL)) AND ((x'', NULL, 'px', '0.6961556690696858', 0.9192467241750089))) END); -- 0ms;
SELECT ALL AVG(((rt43.c0) IS TRUE)) OVER (), ((MAX(rt43.c0, rt1.c1)) IS TRUE), ((((((((((((((rt1.c7)AND(rt1.c7)))OR(rt43.c1)))OR(rt1.c4)))OR(rt1.c0)))AND('(eGLDYo')))OR(rt1.c0)))GLOB(CAST(rt1.c3 AS BLOB))) FROM rt1;SELECT DISTINCT (rt1.c1 IN ()) FROM rt43, rt1 LIMIT 563651215; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NULL IN ())), TOTAL(CAST(rt1.c4 AS TEXT)) OVER (), ((((((((((((SUM(rt43.c2))OR(((rt1.c1)<=(rt1.c7)))))AND(TOTAL(rt1.c3))))AND(((rt1.c6) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))OR(CASE WHEN rt1.c6 THEN x'' WHEN rt1.c6 THEN 0.8699945062521987 WHEN rt43.c0 THEN rt1.c2 ELSE rt43.c1 END)))AND(SUBSTR(rt1.c2, rt1.c3))))AND(((rt1.c1)>>(rt1.c2)))) FROM rt43, rt1 WHERE (CAST(((0.6036992698280479)<<(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((rt1.c0) BETWEEN (rt1.c1) AND (rt43.c0)) COLLATE BINARY, CAST(rt1.c5 COLLATE NOCASE AS NUMERIC), CASE UPPER(x'27d3')  WHEN '1089728753' THEN ((rt1.c6) NOT NULL) END FROM rt1 WHERE (((CAST(0.9527587376681705 AS INTEGER))AND((('')%('')))));SELECT DISTINCT 2.95580974E8, ((NULL)OR(((rt1.c3) BETWEEN (rt1.c5) AND (rt43.c2)))), CASE SUM(rt1.c0)  WHEN (((rt43.c2))!=((rt1.c1))) THEN (- (rt1.c7)) WHEN '0.31006599674957314' THEN CAST(rt1.c4 AS TEXT) WHEN ((((rt1.c6)AND(rt1.c3)))OR(rt1.c6)) THEN x'' ELSE ((rt1.c7) IS FALSE) END FROM rt1;SELECT ALL ((((rt43.c2) NOT NULL)) IS FALSE), ((0.7308736620904898) IS FALSE), TOTAL(((rt1.c1) NOT BETWEEN (rt43.c1) AND (rt1.c0))) OVER () FROM rt1, rt43 WHERE (((((((((CASE NULL  WHEN 0.1601981660099402 THEN '' WHEN 0.41907501891063315 THEN NULL WHEN 'G*' THEN 0.837864007463367 END)OR(((1827169315) NOT NULL))))OR((NOT ('-1436480677')))))AND(((x'f3df')&('-1561973187')))))AND(json_type(0.259814854480105)))); -- 0ms;
SELECT CAST(rt1.c0 AS INTEGER), CAST((((rt1.c0))>((rt1.c0))) AS NUMERIC), COUNT(*) OVER () FROM rt1 GROUP BY ((rt1.c4) NOT BETWEEN (x'') AND (((((rt1.c0)AND(rt1.c4)))AND(rt1.c6)))); -- 0ms;
SELECT '' COLLATE NOCASE, COUNT(*) OVER (), (((((rt1.c0 IN ()))AND(((rt43.c0)||(rt43.c0)))))OR(((rt43.c2)>(rt43.c0)))), CASE WHEN rt43.c1 THEN (((rt43.c0))>=((rt1.c5))) ELSE (('0.36629032869018885') BETWEEN (rt1.c7) AND (NULL)) END, rt43.c1 FROM rt43, rt1 WHERE ((CASE ''  WHEN '1682150088' THEN 0.21139758500409844 WHEN NULL THEN 0.9495977201478675 WHEN 0X673a9c39 THEN NULL END IN ())); -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c4)OR(rt1.c6)))AND(rt1.c6)))AND(NULL)))AND(rt1.c2)))AND(((rt43.c0) IS TRUE))))AND(CAST(rt1.c1 AS BLOB))) FROM rt1;SELECT ALL x'ebfc', NTH_VALUE(((((((rt1.c1)AND(rt1.c2)))OR(rt1.c1)))=(((rt1.c4)*(rt1.c1)))), LIKELIHOOD(DISTINCT ((rt1.c0) ISNULL), 0.3705310727673312)) OVER (), ((((((rt1.c4)IS(rt1.c6)))AND((((x'', rt1.c7, rt1.c7)) NOT BETWEEN ((rt1.c1, rt1.c7, rt1.c6)) AND ((rt1.c5, rt1.c4, rt1.c4))))))AND(((((rt43.c1)OR(rt1.c3)))AND(rt43.c2)))), SUM(((rt43.c1) IS TRUE)) OVER (), rt1.c5 FROM rt1 ORDER BY CASE WHEN ((rt43.c1)||(rt1.c4)) THEN ((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c0)) WHEN ((((((((rt43.c0)AND(rt1.c1)))OR(rt43.c0)))AND(rt43.c2)))AND(rt1.c1)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c7)) WHEN ((rt1.c7) BETWEEN (rt43.c1) AND (rt1.c1)) THEN ((rt43.c1)AND(rt1.c3)) WHEN ((rt1.c7)!=(rt1.c4)) THEN CASE WHEN rt43.c2 THEN 1435331550 WHEN x'9d928f3fed08' THEN rt1.c0 WHEN rt1.c7 THEN rt1.c2 WHEN rt1.c5 THEN rt43.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt43.c2 END WHEN GLOB(rt1.c7, rt1.c6) THEN (NULL IN (rt43.c1, rt1.c3)) ELSE (~ (rt1.c0)) END  NULLS LAST LIMIT -210421386 OFFSET 1041140140;SELECT DISTINCT CAST(((rt1.c3)>>(rt43.c1)) AS REAL) FROM rt1, rt43 WHERE (CASE WHEN (+ (1071833881)) THEN CAST(0.08065109456675512 AS BLOB) ELSE ((0.9527587376681705) IS FALSE) END) LIMIT -107490402; -- 0ms;
SELECT DISTINCT ((((rt1.c6)&(rt1.c6)))&(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c2 ELSE rt43.c2 END)) FROM rt43 ORDER BY ((((rt1.c7)>(rt1.c7)))IS(((rt1.c5)<<(rt43.c1))))  NULLS FIRST;SELECT DISTINCT (((((rt43.c0)<<(rt43.c0))))<>((MAX(rt43.c0)))), CASE ((rt43.c0)>>(rt1.c4))  WHEN (rt1.c7 IN ()) THEN rt1.c1 END, rt1.c3 FROM rt43;SELECT DISTINCT ((((rt1.c1) BETWEEN (rt1.c0) AND (rt43.c2))) BETWEEN (CAST(0.298099500607668 AS TEXT)) AND (CAST(rt1.c5 AS REAL))) FROM rt43, rt1 WHERE ((((NULL IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((((rt1.c7)OR(rt1.c7)))OR(rt1.c2)))OR(((rt1.c3)||(rt1.c3)))))OR(((rt43.c1)|(rt43.c1)))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT ((((TOTAL(rt1.c6))OR(((rt43.c0)IS NOT(rt1.c1)))))AND((rt1.c6 IN ()))), ((((rt1.c4)<>(rt43.c0))) BETWEEN (((rt1.c2)&(rt1.c7))) AND (CAST(rt43.c1 AS INTEGER))), TOTAL(rt1.c7) OVER () FROM rt1, rt43 WHERE ((('1200315632')-(0.21139758500409844)) COLLATE RTRIM) GROUP BY ((rt43.c2) IS TRUE) COLLATE RTRIM HAVING CAST((- (rt1.c0)) AS INTEGER) ORDER BY 0.8785828788262919 DESC, CASE (((rt1.c0, NULL, rt1.c4)) NOT BETWEEN ((rt43.c1, rt43.c1, rt1.c6)) AND ((rt1.c2, rt1.c4, rt1.c6)))  WHEN ((rt1.c1)>=(rt1.c1)) THEN LOWER(DISTINCT rt43.c0) WHEN ((rt1.c6)>=(rt43.c2)) THEN STRFTIME(x'', rt1.c4, rt1.c2, rt1.c5, rt1.c2) WHEN CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c4 ELSE NULL END THEN rt1.c7 END DESC; -- 2ms;
SELECT CASE WHEN CAST(NULL AS NUMERIC) THEN ((rt1.c1)||(rt1.c5)) WHEN ((rt1.c1)<(rt1.c5)) THEN rt1.c2 WHEN (rt1.c7 IN ()) THEN ((rt1.c6)<<(rt1.c0)) ELSE ((rt1.c5) NOT BETWEEN (rt43.c0) AND (rt43.c0)) END FROM rt43 ORDER BY (('q-') NOT BETWEEN ((rt43.c0 IN ())) AND (rt1.c2 COLLATE RTRIM))  NULLS LAST;SELECT DISTINCT ((MIN(rt1.c1))<=(rt1.c0)) FROM rt1, rt43 LIMIT -662340639 OFFSET 1282830544; -- 0ms;
SELECT (COUNT(*) IN ()) FROM rt43 WHERE (((((0.07941845378896029)!=(1081144982))) NOTNULL)); -- 1ms;
SELECT DISTINCT ((rt1.c0 IN (rt43.c0)) IN ()) FROM rt43 WHERE (((((NULL) ISNULL)) NOT BETWEEN (NULL) AND (COALESCE(DISTINCT x'eeb4', NULL)))); -- 0ms;
SELECT ALL (((((NULL)OR(rt43.c0)))OR(rt1.c6)) IN ()) FROM rt43 ORDER BY CASE WHEN ((rt1.c4) IS TRUE) THEN ((rt1.c6) NOTNULL) END  NULLS LAST;SELECT rt1.c2 FROM rt1, rt43 WHERE (((CASE WHEN 0.5590511237397878 THEN NULL END)/(((NULL)IS(x''))))); -- 0ms;
SELECT ((((0.7510616313618954) NOTNULL))&(rt43.c1)), MIN((-1.804313706E9 IN ())), UPPER(DISTINCT (rt1.c0 IN ())), CAST(GROUP_CONCAT(rt43.c0) AS REAL), ROW_NUMBER() OVER () FROM rt1, rt43; -- 0ms;
SELECT LIKELIHOOD(DISTINCT ((rt1.c4)LIKE(NULL)), 0.9090968310562082), (((rt1.c4)) BETWEEN ((rt43.c0)) AND ((rt1.c6))) COLLATE RTRIM, CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt43.c1 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c4 END COLLATE NOCASE FROM rt43, rt1 WHERE ((((x'')) NOT BETWEEN (((((x'ff62'))>=((-1194885152))))) AND (((NOT (NULL)))))); -- 0ms;
SELECT ((CASE 0Xffffffffacac076a  WHEN rt1.c6 THEN rt1.c2 END) IS FALSE), (((rt1.c5)) BETWEEN (((NULL IN (rt1.c7)))) AND ((CASE rt1.c6  WHEN rt1.c2 THEN rt43.c0 END))), ((GROUP_CONCAT(rt1.c3))!=(((rt1.c5)||(rt1.c7)))) FROM rt1, rt43 WHERE ((('0.8699945062521987')||(NULL)) COLLATE BINARY) LIMIT -946429472 OFFSET -86875484; -- 0ms;
SELECT DISTINCT (rt43.c1 IN ((- (x'c470')))) FROM rt1;SELECT DISTINCT rt1.c3, ((((rt43.c1) BETWEEN ('1804480010') AND (rt43.c1))) NOTNULL), MAX((~ (rt1.c5))) FROM rt1, rt43 WHERE ((((((x'd770')*(x''))))>=(((NULL IN (x'd27d')))))); -- 0ms;
SELECT LIKELY((rt43.c0 IN ())), ((((((rt1.c2)OR(rt1.c3)))OR(rt1.c2))) ISNULL), CAST(rt1.c3 COLLATE RTRIM AS TEXT) FROM rt43 WHERE (('' IN ()) COLLATE BINARY);SELECT ALL ((rt1.c6) NOT BETWEEN (rt43.c2) AND (rt1.c5)) COLLATE BINARY FROM rt43 WHERE (((0X15c17815) BETWEEN (x'') AND ('')) COLLATE BINARY) ORDER BY (+ (rt43.c2 COLLATE NOCASE));SELECT DISTINCT (((((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt43.c1))))==((('C') NOT BETWEEN (rt43.c1) AND ('1251001780')))), ((NULL)<>((- (rt1.c1)))), (((+ (0.4689062456034928))) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (((((((((rt1.c4)OR(rt1.c4)))OR(rt43.c1)))AND(rt1.c5)))OR(rt1.c4)))) FROM rt1;SELECT rt1.c4 FROM rt1, rt43 WHERE ((((0Xffffffffe9d5f2cf)<(0.8186783141848575)) IN ())); -- 0ms;
SELECT DISTINCT (((((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c5))))<=((((((((((rt1.c1)AND(rt1.c0)))AND(rt43.c1)))AND(rt1.c3)))OR(rt1.c2))))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS BLOB))+(((((rt1.c1)AND(rt43.c1)))AND(rt1.c2)))) FROM rt43, rt1 ORDER BY CASE WHEN (((rt1.c5, rt1.c6, rt1.c2)) BETWEEN ((rt1.c0, rt1.c6, rt43.c2)) AND ((rt1.c1, 0.24571796216483044, rt43.c1))) THEN ((((rt1.c6)AND(rt1.c5)))OR(rt1.c0)) ELSE ((0.0160239172256309)AND(rt1.c2)) END ASC  NULLS FIRST; -- 0ms;
SELECT ALL LOWER(DISTINCT ((rt1.c7)|(NULL))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT INSTR(((rt1.c3)%(rt1.c1)), CAST(rt43.c1 AS TEXT)) FROM rt1, rt43; -- 0ms;
SELECT ALL rt1.c3 FROM rt1, rt43 WHERE (CASE x'b471'  WHEN 'ly' THEN '\n\nR1᫿mF' ELSE NULL END COLLATE BINARY); -- 0ms;
SELECT ABS(((rt43.c0)IS(rt43.c0))) FROM rt1;SELECT ALL ((AVG(rt43.c1)) BETWEEN ((rt1.c2 IN ())) AND (NULL)) FROM rt1, rt43 WHERE (CASE CAST(NULL AS TEXT)  WHEN COALESCE('3蜖', NULL, x'', x'5e27') THEN CASE 0.8227872360887942  WHEN x'ad7c' THEN 0Xffffffff8f8acfb8 END ELSE (((0X136e7cd8))>((0X3c4bd708))) END); -- 0ms;
SELECT ALL ((CAST('1282830544' AS BLOB))!=(json_insert(rt1.c4, rt43.c2, rt1.c6))) FROM rt43 WHERE ((~ (((-146962063)>>(NULL)))));SELECT ALL '' FROM rt1, rt43; -- 0ms;
SELECT DISTINCT CAST((- (rt1.c4)) AS BLOB) FROM rt43 WHERE (CAST(((x'786b')IS NOT(x'0ec906ad')) AS TEXT));SELECT DISTINCT ((json_object(rt43.c0, rt1.c7))/(CAST(rt1.c2 AS BLOB))) FROM rt43;SELECT CAST(CAST(rt1.c0 AS BLOB) AS TEXT) FROM rt1 LIMIT -784956204; -- 0ms;
SELECT ((((((((GROUP_CONCAT(rt43.c2))OR(CAST(rt1.c5 AS BLOB))))OR(CAST(rt1.c4 AS BLOB))))AND(((rt1.c3) BETWEEN (rt43.c0) AND (rt43.c0)))))OR(((rt43.c1) IS FALSE))) FROM rt1 WHERE (((((CASE WHEN NULL THEN x'' WHEN 0.9719034105245632 THEN x'' WHEN '2' THEN 0.7805405369745948 END)AND(((((0.4661423006827955)OR('CG')))AND('-207115875')))))AND(-1561463818 COLLATE RTRIM)));SELECT ALL ((((rt1.c6) NOT NULL))==((rt43.c0 IN ()))), 0.8276026240314404, TOTAL(((((rt1.c0)OR(rt43.c0)))AND(rt43.c2))) FROM rt1 WHERE (NULLIF(((NULL) NOT BETWEEN (0.01231130435567096) AND ('-1007409712')), CAST(NULL AS BLOB)));SELECT ((((((rt1.c1) NOTNULL))OR((rt1.c5 IN (rt1.c7)))))OR(rt43.c1)) FROM rt1 WHERE ((~ ((~ (x'')))));SELECT DISTINCT AVG(((rt1.c4)<(rt43.c1))) FROM rt1;SELECT DISTINCT COUNT(*) OVER () FROM rt1, rt43 WHERE (CAST((0.4973195662542441 IN ()) AS TEXT)); -- 0ms;
SELECT DISTINCT ((rt43.c2 COLLATE BINARY) NOTNULL) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c4)OR(rt1.c2)))OR(NULL)))AND(rt43.c0)))AND(rt1.c5)))AND((- (rt1.c3)))))AND(((((rt1.c2)OR(rt1.c0)))OR(rt43.c0)))) FROM rt43, rt1 WHERE (1102762103); -- 0ms;
SELECT ALL (((rt43.c1)<=(0.5526362559248981)) IN ()) FROM rt1, rt43; -- 0ms;
SELECT (((- (rt1.c0)))IS NOT(((rt43.c1) BETWEEN (rt1.c1) AND (rt43.c2)))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT (rt1.c6 IN ()), CAST(x'' AS BLOB), ((((((((((rt43.c1)>=(rt1.c1)))AND(x'')))AND(((rt1.c7)<=(rt43.c2)))))OR(((rt43.c1) BETWEEN (rt1.c0) AND (rt1.c7)))))AND((rt43.c1 IN ()))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT (~ (((rt43.c2)IS(rt1.c0)))) FROM rt1, rt43 WHERE ((((((NULL)) BETWEEN (('')) AND ((x'f4e2')))) BETWEEN (((('ro'))<>((NULL)))) AND ((((NULL)) BETWEEN ((NULL)) AND ((0.6559246809330473)))))); -- 1ms;
SELECT DISTINCT CAST(rt43.c2 AS BLOB) COLLATE RTRIM FROM rt43, rt1 WHERE (((NOT (NULL)) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING), CAST(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c7)) AS BLOB), (((rt1.c2 IN ())) BETWEEN (((rt43.c2)/(rt1.c6))) AND (CAST(rt43.c2 AS NUMERIC))), SUM(rt1.c2), json_object(rt43.c2 COLLATE BINARY, ((((((((((((2073107130)AND(rt1.c6)))AND(rt43.c1)))AND(rt43.c1)))OR(NULL)))AND(rt1.c6)))OR(''))) FROM rt1 WHERE ((((((('i|\n⸽}UH') BETWEEN (1975640990) AND ('\G')))OR(((NULL) NOT NULL))))OR(0xffffffffa4e53df3 COLLATE RTRIM))) LIMIT 1685061410 OFFSET -1216724350;SELECT DISTINCT (CAST(rt1.c2 AS TEXT) IN ()) FROM rt43; -- 0ms;
SELECT DISTINCT ((rt1.c1) BETWEEN (rt1.c5) AND (0Xffffffffcbbfc559)) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT ALL rt1.c1 COLLATE NOCASE, CASE (+ (rt43.c0))  WHEN (~ (rt1.c6)) THEN NULL COLLATE RTRIM ELSE ((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c7)) END, ((AVG(rt43.c1))&((+ (rt1.c6)))), COUNT(*), (((rt1.c7, rt1.c3, rt1.c5)) NOT BETWEEN ((((rt1.c0)AND(rt1.c2)), ((((rt1.c0)OR(rt1.c3)))AND(-1540451546)), ((((((((rt43.c1)AND(rt1.c7)))OR(rt43.c0)))OR(rt1.c7)))AND(rt43.c2)))) AND (('-1895721944', rt1.c7, (+ (rt1.c5))))) FROM rt1, rt43 WHERE (CASE NULL  WHEN (((x''))<((NULL))) THEN CAST(x'c18a' AS NUMERIC) ELSE (x'' IN ()) END); -- 1ms;
SELECT ALL rt1.c2 FROM rt43, rt1 WHERE ((NOT (CAST('1790098225' AS BLOB)))); -- 0ms;
SELECT DISTINCT (NOT (CASE rt43.c1  WHEN rt1.c1 THEN rt43.c1 ELSE rt1.c0 END)) FROM rt43 WHERE ((((0.5382389270919278, x'd91a', '-385558744')) NOT BETWEEN ((CASE WHEN 0X1de42e1c THEN '-1794238137' WHEN 0.620423096971936 THEN x'' WHEN NULL THEN NULL END, ((6.7395172E7)>(1859353570)), ((0.40612464063573395)>=(0.09679874637152419)))) AND ((((x'') NOTNULL), ((('-859875271')) BETWEEN ((NULL)) AND ((0.7660916725982967))), (- (x'8342'))))));SELECT ALL ((ABS(rt43.c1)) ISNULL), '<qjzhbl''g', (~ (905537696)) FROM rt1 WHERE ((((0.6536465062690505)) NOT BETWEEN (((((0.006411317159671692))>((NULL))))) AND ((((((x'')OR('944563179')))OR(''))))));SELECT ((((COUNT(*))OR((- (rt1.c7)))))AND(((rt43.c1)IS(0.9307870223511062)))) FROM rt43, rt1 WHERE (MIN(CAST('842790758' AS REAL), CAST(0.9498344916973088 AS BLOB))) ORDER BY ((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))) ISNULL) DESC  NULLS LAST LIMIT 432625893 OFFSET 1149754553; -- 0ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((((rt1.c1) ISNULL))) AND ((TOTAL(rt43.c2)))), CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)) AS BLOB), ((((((((((rt1.c2)OR(rt1.c7)))OR(rt1.c6)))AND(rt1.c1)))AND(rt1.c6))) IS TRUE) FROM rt1 WHERE (((0X69a31e82)<<((NOT ('-214425457')))));SELECT DISTINCT -1083200301 FROM rt1 WHERE (CASE CAST('-639666164' AS TEXT)  WHEN (NULL IN ()) THEN (('gM\dN') BETWEEN (0.905856498815342) AND (0.018556367890423142)) ELSE CASE x''  WHEN NULL THEN NULL WHEN '' THEN NULL WHEN x'' THEN NULL ELSE '' END END); -- 0ms;
SELECT ALL ((((((rt1.c6)OR(rt1.c3)))OR(rt1.c4))) NOT BETWEEN ((rt1.c1 IN (rt1.c6))) AND (MAX(rt1.c1))), ROW_NUMBER() OVER (), (CAST(rt1.c7 AS BLOB) IN ()) FROM rt43;SELECT DISTINCT ((MAX(rt43.c2)) NOT BETWEEN (((((rt43.c1)AND(rt43.c1)))AND(rt1.c2))) AND (rt1.c2 COLLATE BINARY)), SUM(((rt1.c4)<(rt1.c4))) OVER (), MAX((((rt1.c1, '0.7695261917481803', rt1.c6)) NOT BETWEEN ((rt1.c3, rt1.c7, rt1.c2)) AND ((rt43.c0, rt1.c6, rt1.c5)))) FROM rt43 WHERE (((((0.8976600103248678)|(x'8eb5'))) NOT BETWEEN (CASE '-822505634'  WHEN 0.4946841952060267 THEN NULL END) AND (((x'68fc') NOT NULL))));SELECT DISTINCT SUM((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c4)))) OVER (), GROUP_CONCAT(((rt1.c7) NOT BETWEEN (rt1.c7) AND (rt1.c2))) OVER (), CASE WHEN rt43.c2 THEN ((rt43.c0) BETWEEN (rt43.c0) AND (rt1.c2)) END FROM rt43, rt1 WHERE ((((0.5147656334865222)<>(0.9282278757114095)) IN ())); -- 0ms;
SELECT DISTINCT rt1.c5 FROM rt43, rt1 WHERE (ABS(DISTINCT (('1535244895')<(0Xfffffffff08175ab)))); -- 0ms;
SELECT TOTAL(rt43.c1) FROM rt43; -- 0ms;
SELECT ALL ((rt43.c0) IS FALSE) COLLATE NOCASE FROM rt1, rt43 GROUP BY (((rt43.c1, rt1.c0, rt1.c1)) BETWEEN ((((rt1.c7) IS TRUE), (((rt1.c6, rt1.c4, rt1.c4)) NOT BETWEEN ((0Xffffffffd9df780c, rt43.c2, rt1.c1)) AND ((rt43.c0, rt43.c0, rt1.c7))), rt1.c0)) AND ((CASE WHEN rt43.c1 THEN rt43.c1 WHEN 2.50382909E8 THEN rt43.c0 WHEN rt43.c0 THEN 'JDY.' END, ((rt43.c2) BETWEEN (rt43.c2) AND (rt43.c2)), ((rt1.c7)==(rt1.c3))))), ((CAST(rt43.c0 AS TEXT))IS(((((((((rt1.c6)OR(rt43.c0)))AND(rt1.c3)))OR(rt43.c0)))AND(rt1.c1)))), ((((rt1.c1)+(rt43.c0))) NOT NULL) ORDER BY CAST(0.7599985651724067 AS REAL) DESC  NULLS LAST; -- 0ms;
SELECT (((((((((((((rt1.c4)OR(rt1.c0)))OR(rt43.c2)))AND(rt1.c3)))OR(rt1.c6)))AND(rt1.c5)))AND(rt43.c1)) IN (AVG(rt1.c4))), SUM(((((((((rt1.c4)AND(rt1.c3)))OR(rt43.c0)))AND(rt1.c6)))OR(rt1.c5))) OVER (), CAST(x'6286' AS NUMERIC) FROM rt1, rt43 WHERE (CAST(((0X768b4996)-(0xffffffff877018c0)) AS BLOB)); -- 0ms;
SELECT ALL ((((rt43.c2)>>(rt1.c5))) NOT BETWEEN (((((((((rt43.c2)OR(rt1.c2)))OR(rt1.c5)))AND(rt1.c0)))AND(rt1.c4))) AND ((rt1.c7 IN ()))), '', NULL FROM rt43, rt1 WHERE ((~ (CASE WHEN '-1960405310' THEN x'' END))) LIMIT -556687159 OFFSET -191311292; -- 1ms;
SELECT ALL ((((rt1.c5)|(rt1.c0)))=(CASE WHEN rt1.c2 THEN rt43.c0 WHEN rt1.c4 THEN rt1.c4 WHEN '' THEN rt1.c0 END)), CAST(((rt1.c0)&(rt43.c2)) AS REAL), GROUP_CONCAT(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 END) FROM rt43 WHERE ((((NOT (-725726139)))>>('-784017468'))) GROUP BY (((rt43.c2 IN ()))OR(((rt1.c5) NOT NULL))), CASE WHEN rt1.c6 THEN rt1.c1 WHEN (((((((('-2084575774')AND(rt1.c2)))AND(rt1.c2)))OR(rt43.c2)))AND(rt1.c4)) THEN rt43.c1 COLLATE NOCASE WHEN rt1.c1 THEN rtreenode(NULL, rt1.c1) END, ((IFNULL(rt1.c0, rt43.c1)) IS TRUE);SELECT DISTINCT ((- (rt1.c3)) IN ()), SUM(rt1.c1 COLLATE NOCASE) COLLATE BINARY, ((((rt43.c0)) NOT BETWEEN ((rt1.c7)) AND ((rt1.c2))) IN ()), CASE WHEN LIKELY(DISTINCT rt1.c2) THEN rt1.c6 COLLATE NOCASE END, rt1.c7 FROM rt43;SELECT (((+ (rt43.c0)))+((rt1.c4 IN ()))) FROM rt43 WHERE (((NULL) BETWEEN (CAST('1773867457' AS NUMERIC)) AND (NULL COLLATE BINARY))); -- 0ms;
SELECT ((-1338769065)AND((NOT (rt1.c2)))), json_object(rt1.c0, CAST(rt43.c2 AS NUMERIC), CAST(rt1.c4 AS NUMERIC), (- (rt1.c6)), CASE WHEN '1136657111' THEN rt1.c7 WHEN rt1.c4 THEN rt43.c0 WHEN rt1.c3 THEN rt1.c5 ELSE x'c5bb' END, CASE rt1.c1  WHEN rt1.c3 THEN rt43.c1 WHEN rt1.c2 THEN rt43.c0 WHEN rt1.c5 THEN rt43.c0 ELSE rt43.c0 END), (((rt43.c2 IN (rt1.c4, rt43.c0)))||(CASE WHEN rt1.c6 THEN rt1.c2 END)) FROM rt43 WHERE (CAST((((NULL)) NOT BETWEEN (('1600015153')) AND ((''))) AS BLOB));SELECT DISTINCT ((rt1.c6) BETWEEN (rt1.c6) AND (rt1.c0)) COLLATE NOCASE, ((COUNT(*))<(((((rt1.c2)AND(rt43.c0)))OR(rt1.c4)))), CAST(IFNULL(DISTINCT rt43.c0, 0.9134362833789295) AS BLOB) FROM rt43, rt1 WHERE ((((NULL IN (0.8972070603044843)))IS(json_insert(0.45107948525072805, NULL, 755847601)))); -- 1ms;
SELECT DISTINCT CASE (NOT (rt1.c1))  WHEN ((rt1.c4) IS FALSE) THEN (rt1.c0 IN ()) WHEN SUM(rt1.c3) THEN (NOT (rt1.c6)) WHEN LIKELIHOOD(DISTINCT rt43.c2, 0.22706760552077276) THEN ((('v\'))<((rt43.c1))) END FROM rt1, rt43; -- 0ms;
SELECT DISTINCT CAST((((rt1.c5)) NOT BETWEEN ((rt43.c0)) AND ((rt1.c7))) AS BLOB) FROM rt1;SELECT DISTINCT (((rt43.c1)) NOT BETWEEN ((CAST(rt43.c2 AS REAL))) AND ((((rt1.c6)IS NOT(rt43.c2))))), 0.9056455982831246, MIN(((rt43.c2)>=(rt1.c3))) COLLATE BINARY, (LOWER(rt1.c0) IN (CAST(rt43.c1 AS BLOB))), (((rt1.c3 IN (rt43.c2)))&(0.08065109456675512 COLLATE RTRIM)) FROM rt1;SELECT DISTINCT ((('397350711'))>=(((((rt1.c1))<=((rt43.c1)))))) FROM rt43 WHERE ((((NOT (6.23120137E8))) NOT BETWEEN (COALESCE(DISTINCT x'', -1.299505255E9)) AND (TRIM('', '')))) ORDER BY ((((rt1.c7)OR(rt1.c7)))OR(rt43.c2)) COLLATE BINARY DESC;SELECT DISTINCT GROUP_CONCAT(((rt43.c0)*(rt1.c1))), CASE WHEN COUNT(rt1.c2) THEN ((((rt1.c7)OR(rt1.c3)))AND(rt43.c0)) END, CAST(((rt1.c2)/(rt1.c5)) AS INTEGER) FROM rt43, rt1 LIMIT 867534451 OFFSET -1873548565; -- 0ms;
SELECT (NOT ((+ (rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((0X15b2f8ed)OR((- (rt1.c1)))))OR(((0.09585188027153524) ISNULL))) FROM rt43, rt1; -- 0ms;
SELECT ((CASE WHEN rt1.c5 THEN 0Xffffffffe8f91572 END) BETWEEN (TYPEOF(rt1.c0)) AND ((((rt43.c0, rt1.c3, rt1.c1, rt43.c0, rt43.c1)) BETWEEN ((rt43.c2, rt43.c0, rt1.c2, rt1.c0, rt1.c6)) AND ((rt1.c0, rt1.c0, rt43.c0, x'', '-1353739947'))))), (~ (rt1.c5)), (~ (rt1.c2)), DENSE_RANK() OVER (), rt1.c7 FROM rt43, rt1; -- 0ms;
SELECT CASE WHEN rt1.c1 THEN (rt1.c3 IN ()) WHEN (~ ('TRUE')) THEN TIME(rt1.c0, rt1.c6, rt1.c5) WHEN (((rt43.c1)) BETWEEN ((0x220e85e1)) AND ((rt1.c2))) THEN CASE rt1.c3  WHEN rt43.c2 THEN rt43.c1 END END, RANK() OVER (), ((((rt1.c5) ISNULL)) IS TRUE) FROM rt1, rt43 GROUP BY CAST(((rt1.c7) ISNULL) AS REAL), ((((CAST(rt43.c0 AS BLOB))AND((+ (rt1.c5)))))OR((x'' IN (rt43.c1)))), CAST(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)) AS REAL) HAVING CAST(NULL AS NUMERIC); -- 0ms;
SELECT DISTINCT CAST(((NULL)&(rt1.c2)) AS REAL), TRIM(rt1.c2) COLLATE RTRIM, (((+ (rt43.c1)))GLOB(TOTAL('-265659365'))) FROM rt1, rt43 WHERE (((CASE '-960089059'  WHEN 0.8335967824846309 THEN x'2e74' END) IS TRUE)); -- 0ms;
SELECT CASE rt1.c1 COLLATE BINARY  WHEN (((rt43.c1, rt1.c7, x''))>=((rt43.c1, rt1.c3, rt1.c3))) THEN SQLITE_VERSION() WHEN ((((rt1.c1)OR(rt43.c2)))AND(rt1.c4)) THEN ((rt1.c7) NOT BETWEEN (rt43.c1) AND (rt43.c0)) WHEN (rt1.c4 IN (rt1.c6, rt1.c6)) THEN 0.02786687126993148 WHEN rt43.c2 THEN 0.8364132447338501 WHEN (+ (rt43.c1)) THEN (rt1.c7 IN ()) ELSE ((NULL)LIKE(rt1.c7)) END, ((((((((((rt1.c1)AND(rt1.c0)))AND(((rt43.c0) NOT BETWEEN (rt43.c2) AND (rt1.c3)))))AND('-207443274')))AND(CAST(rt1.c6 AS TEXT))))AND(rt1.c6)), ((0.011708381928651868) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (rt1.c7)) FROM rt43, rt1; -- 1ms;
SELECT DISTINCT ((((((rt1.c4)>>(rt1.c0)))OR(((rt43.c0)==(rt43.c2)))))OR((~ (rt1.c2)))), 'C[ꊏ_㬊GMXe', LIKELY(DISTINCT rt1.c2) COLLATE RTRIM, (((rt43.c1)) NOT BETWEEN (((rt43.c2 IN ()))) AND ((((rt1.c5)LIKE(rt1.c2))))), (NOT (rt1.c2)) COLLATE BINARY COLLATE BINARY FROM rt43 WHERE (NULL);SELECT DISTINCT LIKELIHOOD(DISTINCT ((rt1.c6)>(rt43.c1)), 0.6341341780617447), CAST('\8' AS TEXT), (~ (0.5931396586868967)) FROM rt43 GROUP BY json_quote(((((rt1.c4)OR(rt1.c0)))AND(rt1.c7))) HAVING (('9쎘')<(rt43.c2 COLLATE BINARY));SELECT DISTINCT CASE WHEN CASE WHEN rt1.c4 THEN rt43.c2 ELSE rt43.c2 END THEN UNICODE(rt43.c1) ELSE ((rt1.c6)<=('')) END, ((CASE WHEN rt43.c0 THEN rt1.c7 ELSE rt1.c2 END) BETWEEN (CAST(rt1.c5 AS BLOB)) AND ((rt1.c3 IN (rt1.c0)))), ((CAST(0.45039472544807513 AS REAL))IS(((rt1.c6)LIKE(rt1.c0)))) FROM rt1;SELECT ALL ((((rt1.c7)GLOB(rt1.c5))) NOT BETWEEN (HEX(rt43.c0)) AND ((((rt1.c3)) BETWEEN ((rt43.c2)) AND ((rt1.c1))))), ((((rt1.c6)IS(rt43.c1))) NOTNULL), (((('0.6294642748029008')<(rt1.c5))) NOT NULL) FROM rt1;SELECT ((rt1.c4) BETWEEN (GROUP_CONCAT(rt1.c4)) AND ((((rt1.c7)) BETWEEN ((rt1.c4)) AND ((rt1.c2))))), ((((rt1.c1)LIKE(rt1.c5))) BETWEEN (CAST(rt43.c2 AS TEXT)) AND (NULLIF(DISTINCT rt1.c5, rt1.c4))), rt43.c2, ((((rt1.c4)IS(rt1.c4)))>=(COUNT(*))), ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)))LIKE(((rt1.c7)+(rt1.c7)))) FROM rt1, rt43; -- 1ms;
SELECT DISTINCT CAST('902694667' AS REAL) FROM rt43 WHERE (((((NULL)||('-769092164'))) IS FALSE)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES), (~ (((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c6)))), CASE rt1.c2 COLLATE BINARY  WHEN CASE rt43.c0  WHEN rt1.c2 THEN rt43.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt43.c1 END THEN rt1.c1 END FROM rt43 GROUP BY (+ (rt1.c3)) HAVING ((rt43.c1) NOT NULL);SELECT DISTINCT CAST(((rt1.c4)*(rt1.c5)) AS NUMERIC), CAST(COUNT(*) AS BLOB), ((rt1.c5) NOT BETWEEN ((rt1.c2 IN (rt1.c2, rt1.c4))) AND (IFNULL(DISTINCT rt43.c1, rt1.c6))) FROM rt1;SELECT DISTINCT ((CASE WHEN 0.13296221425937804 THEN rt1.c3 ELSE rt43.c2 END) NOT BETWEEN (TRIM(0Xffffffffc7168224, rt1.c4)) AND ((rt1.c2 IN ()))) FROM rt1;SELECT DISTINCT (((rt1.c2, rt1.c3, NULL)) BETWEEN ((CAST(rt1.c6 AS TEXT), (((rt1.c6, rt1.c5, rt1.c2)) BETWEEN ((rt43.c1, rt1.c5, rt1.c1)) AND ((rt43.c1, rt43.c2, rt1.c1))), CAST(rt43.c1 AS BLOB))) AND ((((rt1.c2)>>(rt1.c1)), rt1.c3, rt1.c3))), COUNT(COUNT(CASE rt1.c7  WHEN rt1.c6 THEN rt43.c2 ELSE rt1.c2 END)), rt43.c0 COLLATE BINARY FROM rt43 WHERE ((('') NOT BETWEEN (NULL) AND (NULL)) COLLATE RTRIM) GROUP BY ((NULL)+(((rt43.c2)OR(rt1.c1)))) HAVING SQLITE_VERSION();SELECT DISTINCT (((rt1.c6)) BETWEEN (((rt1.c2 IN ()))) AND ((CAST(rt43.c2 AS INTEGER)))) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT ((- (rt1.c3)) IN ()) FROM rt1, rt43 WHERE (((CAST('0.7003187905220436' AS NUMERIC)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((rt43.c2)IS NOT(x'')))<(((rt1.c6) NOT BETWEEN (rt1.c1) AND (rt1.c6)))), (~ (NULL)), (((((rt1.c5, rt43.c2, rt43.c0))<((rt1.c0, rt1.c1, rt1.c2)))) BETWEEN (NULL) AND (GROUP_CONCAT(rt1.c6))) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT ((rt1.c3)OR(rt1.c6)) COLLATE RTRIM FROM rt1, rt43; -- 0ms;
SELECT ALL ((rt1.c6 COLLATE RTRIM)>>(UPPER(0Xffffffff9053eaeb))) FROM rt1 ORDER BY (((rt1.c7 IN ())) BETWEEN (0.27548093960943043) AND (0.21139758500409844)) ASC, x'' DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((AVG(rt1.c0))IS(((rt1.c1)<=(x'dea5')))) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt1.c6)) THEN (((rt43.c1))>=((rt1.c3))) WHEN ((((rt1.c6)AND(rt1.c3)))OR(rt43.c0)) THEN (+ ('1328204273')) WHEN rt1.c1 THEN CAST(rt1.c7 AS REAL) ELSE CASE rt1.c7  WHEN rt43.c2 THEN rt1.c0 ELSE rt1.c2 END END FROM rt1;SELECT DISTINCT ((rt1.c7)/(rt1.c2)) COLLATE BINARY, CASE WHEN CASE WHEN rt1.c3 THEN rt43.c1 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt43.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt43.c0 ELSE rt1.c6 END THEN 0.154853513690828 END, ((CASE rt1.c5  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END)-(((rt1.c3) IS TRUE))), ((((rt1.c3) IS FALSE))*(rt1.c2 COLLATE NOCASE)), ((rt43.c2 COLLATE NOCASE)>(NULL)), CASE WHEN ((rt43.c0)IS NOT(rt1.c1)) THEN RTRIM(rt1.c0) WHEN TRIM(rt1.c3) THEN ((rt1.c0)*(rt1.c2)) WHEN (- (rt43.c1)) THEN (NOT (rt1.c0)) END, NULL FROM rt43;SELECT ALL MIN((+ (rt1.c0))), CAST((rt1.c7 IN ()) AS BLOB), (- (rt43.c0 COLLATE BINARY)) FROM rt43 WHERE ((((((x''))<((NULL)))) NOT BETWEEN (((7.55847601E8)/(0.17921034075801012))) AND (CASE 1650598356  WHEN x'' THEN 0xffffffffff12ab0e END)));SELECT DISTINCT CAST(rt43.c0 COLLATE NOCASE AS TEXT), CAST(CASE WHEN rt1.c0 THEN rt1.c7 END AS REAL), ((((((rt1.c0)OR(rt1.c7)))AND(rt1.c5)))<(load_extension(rt43.c0, rt1.c5))) FROM rt1, rt43 WHERE (CAST(((((NULL)OR(NULL)))AND('1706721493')) AS TEXT)) GROUP BY rt1.c0 COLLATE BINARY; -- 0ms;
SELECT CASE ((rt1.c2)LIKE(rt1.c3))  WHEN GROUP_CONCAT(-1338066873) THEN rt1.c6 END, CASE ((rt43.c0)IS NOT(rt1.c6))  WHEN MAX(rt1.c6) THEN (~ (rt43.c2)) ELSE ((rt1.c1)|(rt1.c3)) END, (((((rt1.c6)<=(rt1.c7))))<((((rt1.c7)%(rt1.c0))))) FROM rt1;SELECT ALL (NULL IN ()) FROM rt43, rt1 WHERE (((('2039338053') BETWEEN (0X571b45e5) AND (-1794238137)) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NOT (rt1.c5))) OVER () FROM rt43, rt1 LIMIT -1534795996 OFFSET -274497396; -- 0ms;
SELECT DISTINCT ((((rt1.c0)LIKE(rt1.c3))) IS FALSE) FROM rt1, rt43 WHERE (((0xc7cec8f)IS(0.76020155421908)) COLLATE RTRIM); -- 0ms;
SELECT ((((rt1.c2) ISNULL)) NOT BETWEEN ('i') AND (CASE WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c7 END)) FROM rt1 ORDER BY ((((((rt43.c0)OR(rt43.c1)))AND(rt1.c5))) NOTNULL), rt1.c1 DESC LIMIT -169594291 OFFSET 164196724;SELECT DISTINCT '1971340166' FROM rt43 WHERE (((((x'')|(NULL))) NOT NULL)) GROUP BY (NOT ((~ (rt43.c1)))) LIMIT -2011196244 OFFSET -431948783; -- 0ms;
SELECT DISTINCT AVG('-986225429') OVER () FROM rt43, rt1 WHERE (((((0xffffffff85534600) NOT BETWEEN (0.5538915065809256) AND (0xffffffffb1537973)))*((- (''))))); -- 1ms;
SELECT (((((((rt1.c5)OR(rt43.c0)))OR(rt1.c1))))=((CAST(rt1.c0 AS TEXT)))) FROM rt1 WHERE (((('rQ(~{', x'bdb13165', x'')) BETWEEN (('1633222280', (('971911112')||(0.6786739487634859)), ((0.19076808291961866) NOT BETWEEN (92166409) AND (-591522102)))) AND ((('-1886728264' IN ()), ((x'') IS TRUE), ((((((((NULL)OR('-1886728264')))OR(NULL)))AND('vOcx,~')))OR(5.19725498E8))))));SELECT ALL CAST((+ (rt1.c3)) AS INTEGER), rt1.c5, ((CASE rt43.c1  WHEN rt1.c4 THEN rt1.c1 WHEN rt43.c1 THEN rt1.c7 WHEN rt1.c7 THEN rt43.c0 END)>=(((rt1.c7)%(rt1.c7)))) FROM rt43;SELECT DISTINCT ((((rt43.c2)OR(((rt1.c6)<=(rt43.c2)))))OR((1119172086 IN ()))), CASE rt43.c1  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c1 THEN 'm#e+uk~A' WHEN '-313018642' THEN rt43.c2 ELSE rt1.c3 END COLLATE NOCASE, (((+ (rt1.c1))) BETWEEN (rt43.c1) AND (((((rt43.c0)OR(rt1.c1)))AND(rt43.c2)))) FROM rt43, rt1; -- 0ms;
SELECT (((rt1.c7, rt43.c2, rt1.c5)) NOT BETWEEN (((((rt43.c1, rt1.c4, rt1.c7, rt43.c1, rt1.c0))<=((NULL, rt1.c4, rt1.c7, rt1.c7, x''))), (((rt1.c2, rt43.c2, rt1.c6, rt1.c3, rt43.c2, '\re审', rt1.c3))>((rt1.c3, rt1.c2, rt1.c4, '1079505996', rt1.c1, 0Xffffffff94deeea1, rt43.c2))), (~ (rt1.c2)))) AND ((MAX(NULL), CASE WHEN rt1.c0 THEN rt1.c6 WHEN rt1.c4 THEN NULL WHEN rt1.c6 THEN rt1.c2 ELSE rt43.c1 END, (- (rt1.c3))))), COUNT((rt1.c2 IN (rt1.c0, rt43.c2))), rt1.c3 FROM rt1, rt43 WHERE (0.01231130435567096); -- 0ms;
SELECT DISTINCT CASE rt1.c5  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 END COLLATE RTRIM FROM rt43, rt1; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c2))&(MAX(rt1.c6))) FROM rt43, rt1 WHERE (((((((0.7066388721067853))>=(('-1794238137')))))>((CAST(1.282830544E9 AS BLOB))))) LIMIT -1561973187; -- 0ms;
SELECT ALL (((rt1.c3) BETWEEN (rt1.c5) AND (rt43.c1)) IN (((rt43.c2)!=(rt43.c2)))) FROM rt1 NOT INDEXED, rt43 WHERE ((+ (ABS(0x17af1737)))) LIMIT 536773974 OFFSET 1326254477; -- 0ms;
SELECT ALL ((CASE rt1.c5  WHEN rt1.c7 THEN '-93356417' ELSE rt43.c1 END)>>(((((rt43.c2)OR(rt1.c3)))OR(rt1.c7)))) FROM rt1, rt43 WHERE (((((((((UPPER(DISTINCT 1.97564099E9))AND((('')<=(0xffffffff881f94ac)))))OR((0.9597328785795455 IN ()))))OR(((x'3d69') NOT BETWEEN (NULL) AND ('-1890667233')))))AND((x'' IN (1047868383, 0.6706979525070444))))); -- 0ms;
SELECT DISTINCT SUM(2060475941), HEX(DISTINCT ((rt43.c2)|(rt1.c4))), ((rt43.c2) IS FALSE) COLLATE NOCASE FROM rt1, rt43 ORDER BY (+ (CASE WHEN rt1.c2 THEN rt1.c3 END)); -- 0ms;
SELECT DISTINCT CASE ((NULL) NOT BETWEEN (rt1.c7) AND (rt43.c0))  WHEN rt1.c5 COLLATE RTRIM THEN CAST(rt1.c7 AS NUMERIC) END FROM rt1, rt43 GROUP BY x'c8e7' COLLATE BINARY HAVING ((((rt1.c2)*(NULL)))|(rt1.c0 COLLATE NOCASE)) ORDER BY CAST(((rt1.c4)==(rt1.c2)) AS BLOB) ASC; -- 1ms;
SELECT ((CASE rt1.c2  WHEN 0.2263104370831528 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt43.c1 THEN rt1.c0 END) BETWEEN (((rt43.c1) BETWEEN (rt1.c4) AND (rt1.c2))) AND (CAST(rt1.c7 AS REAL))) FROM rt1, rt43 LIMIT 619544071; -- 0ms;
SELECT AVG(TRIM(DISTINCT 0Xffffffffb8445a0c)) OVER (), LIKELIHOOD(DISTINCT rt1.c2, 0.8099834966028454), ((CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt43.c1 THEN rt1.c7 WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c4 END) IS FALSE), (((rt1.c0)*(rt1.c5)) IN ()), ((AVG(rt1.c0)) BETWEEN ((((rt1.c1)) NOT BETWEEN ((rt1.c7)) AND ((rt1.c0)))) AND (((rt1.c3)IS NOT(rt43.c0)))) FROM rt43 WHERE ((((x'') BETWEEN ('-199024681') AND (NULL)) IN (CASE x''  WHEN '' THEN 0.2721002513466735 END)));SELECT (((rt43.c2 COLLATE BINARY, (((rt1.c0))>((rt1.c1))), ((((rt1.c0)AND(rt1.c3)))OR(0X26706bc9))))>((CASE WHEN rt1.c7 THEN rt43.c2 END, ((rt1.c4) IS TRUE), x''))) FROM rt43, rt1 WHERE ('1023226904'); -- 0ms;
SELECT ALL TOTAL(QUOTE(rt1.c6)), COUNT(((rt1.c2) NOTNULL)) OVER (), x'' FROM rt43, rt1; -- 0ms;
SELECT (((((rt1.c3)) NOT BETWEEN ((rt43.c1)) AND ((rt43.c0))))IS NOT((- (rt1.c3)))) FROM rt1 WHERE ((((('-822505634') NOT NULL)) IS FALSE));SELECT (((((((rt1.c3)AND(-9.45698045E8)))AND(rt1.c2))))=((0.8842474572571624))), ((((('1149754553') NOTNULL)))>((((rt1.c4) NOT BETWEEN (rt43.c2) AND (rt43.c0))))), CAST(CAST(rt1.c4 AS INTEGER) AS TEXT) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT json_patch((rt1.c7 IN ()), (rt43.c0 IN (rt43.c0))) FROM rt1, rt43 WHERE (((-3.80009517E8 COLLATE NOCASE)||(((0.8654813242206303) BETWEEN (NULL) AND (0.8614096363470359))))); -- 0ms;
SELECT CASE CASE WHEN rt1.c5 THEN rt43.c1 END  WHEN CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c7 THEN rt1.c5 END THEN CAST(rt1.c4 AS TEXT) END, (-1776893412 IN ()), ((json_array_length(x''))%((((('1339713221')AND(rt1.c5)))OR(rt1.c0)))) FROM rt43, rt1;SELECT DISTINCT CASE ((((((((rt43.c0)OR(rt1.c1)))OR(rt1.c3)))OR(rt43.c1)))OR(rt1.c0))  WHEN ((rt1.c7) BETWEEN (rt1.c5) AND (rt1.c4)) THEN CASE rt1.c3  WHEN rt43.c1 THEN rt43.c1 ELSE rt1.c1 END END, CAST(rt1.c7 AS NUMERIC) COLLATE RTRIM, (((rt1.c2)) BETWEEN ((((rt43.c2) NOTNULL))) AND ((((rt1.c5)<<(rt1.c7))))), CAST(SUM(rt43.c2) AS NUMERIC), (((rt1.c7 COLLATE RTRIM))<=((((((rt1.c7)AND(rt1.c1)))OR(rt43.c2))))) FROM rt1 WHERE (CAST((('900930502') NOT BETWEEN (NULL) AND ('-853561395')) AS REAL)) LIMIT -81623657 OFFSET -711976465;SELECT DISTINCT ((((rt1.c0)*(rt1.c0))) ISNULL), rt1.c6, (((x'e49a')) NOT BETWEEN ((INSTR(rt1.c0, rt1.c1))) AND ((NULL))) FROM rt1 WHERE (((((NULL) NOT BETWEEN ('-1338769065') AND ('-1896069524'))) IS TRUE)); -- 0ms;
SELECT ((rt1.c5)/(((rt1.c7) BETWEEN (rt43.c0) AND (rt1.c3)))), NTILE(NULLIF(((rt1.c4) IS TRUE), ((rt43.c1) NOT BETWEEN (rt1.c0) AND (rt43.c0)))) OVER ( ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c6 ELSE rt43.c1 END)+(ROUND(rt43.c2, rt1.c0)))  NULLS LAST, (NOT (CASE WHEN rt1.c4 THEN rt1.c5 END))  NULLS LAST), (((rt43.c0)&(rt1.c2)) IN ()) FROM rt43, rt1 WHERE (((CASE WHEN 0.5910178197814305 THEN '' ELSE 'w' END)>(json_quote('yP')))); -- 0ms;
SELECT DISTINCT (+ ((((rt1.c2)) NOT BETWEEN ((rt43.c2)) AND ((rt1.c1))))) FROM rt1, rt43 WHERE (CASE ((0.8497101198622399)*('!p'))  WHEN ((x'63bd')IS NOT(x'')) THEN json(NULL) ELSE (('') BETWEEN (NULL) AND (295580974)) END) GROUP BY ((((((rt1.c5)-(rt43.c1)))AND(((rt1.c1)IS(rt43.c1)))))AND(rt1.c6 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c5 WHEN rt1.c7 THEN rt43.c1 WHEN rt1.c1 THEN rt43.c1 ELSE rt43.c1 END) NOT BETWEEN (CASE WHEN rt43.c1 THEN rt1.c0 ELSE rt1.c4 END) AND (NULL)) FROM rt1, rt43 LIMIT -955920449; -- 0ms;
SELECT (NOT (((rt1.c4) NOT BETWEEN (rt43.c1) AND (rt1.c0)))) FROM rt43, rt1 WHERE (((('')) BETWEEN ((CASE NULL  WHEN 0xffffffffe79ab748 THEN 0.16922037664048206 WHEN 0.28101283642758346 THEN 0.04017018397443517 WHEN '-1175771499' THEN x'9cf3' ELSE '' END)) AND ((CAST(x'' AS BLOB))))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((rt43.c1)IS NOT(rt1.c0))) OVER () FROM rt1, rt43; -- 0ms;
SELECT ALL 'xAu*tY' COLLATE BINARY FROM rt43 WHERE (((((0x65ba2e0d)OR(CAST(x'' AS TEXT))))OR(((')et?') NOTNULL)))); -- 0ms;
SELECT DISTINCT CAST((((rt43.c0, rt43.c1, rt1.c2)) BETWEEN (('d{,t竓z', rt1.c0, rt1.c5)) AND ((rt1.c7, rt1.c5, rt1.c2))) AS REAL) FROM rt43 WHERE ((((x''))!=((''))) COLLATE RTRIM COLLATE RTRIM);SELECT ABS(DISTINCT rt1.c6) COLLATE NOCASE, MAX(((((rt43.c0)OR(rt1.c7)))OR(rt1.c4)), ((rt1.c2)>=(rt1.c2)), 1806653747 COLLATE BINARY, CAST(rt1.c6 AS REAL)), ((((((((rt43.c0)AND(rt1.c6)))AND(rt1.c7)))AND(rt43.c2 COLLATE RTRIM)))OR(CASE rt43.c2  WHEN rt43.c0 THEN rt43.c0 ELSE rt1.c5 END)) FROM rt43, rt1 NOT INDEXED ORDER BY ((CAST(rt43.c2 AS NUMERIC)) NOT NULL)  NULLS LAST; -- 1ms;
SELECT rt1.c5 FROM rt1 GROUP BY ((((rt1.c6)!=(rt43.c1))) NOT BETWEEN ((((rt1.c7))>((rt1.c2)))) AND (((((rt1.c6)OR(rt1.c1)))OR(rt1.c3)))) HAVING '-2097458314';SELECT DISTINCT (((+ (rt43.c1))) BETWEEN (((rt1.c2)-(rt1.c7))) AND ((rt1.c1 IN ()))) FROM rt43, rt1; -- 0ms;
SELECT ALL ((rt1.c5) IS FALSE) COLLATE RTRIM FROM rt1 WHERE (((NULL) NOT BETWEEN (((0.47654853891726867) BETWEEN (0.06647079906872255) AND (''))) AND ((((0.9152290243312746, '-1059346765', 0.48420948127337593, '-1541030877', 0.9362134700711476)) NOT BETWEEN ((x'', NULL, NULL, 0.2042633752955526, 0.8231148128119662)) AND ((0x4da40fe9, '90242739', 0.21683479174835674, x'', 0.2692650840033167)))))); -- 0ms;
SELECT ALL CAST(MAX(rt1.c2) AS NUMERIC) FROM rt1 WHERE ((((('z蜣\r') IS TRUE))IS NOT(0.45791280367626597 COLLATE RTRIM))); -- 0ms;
SELECT rt1.c1 FROM rt1, rt43; -- 0ms;
SELECT (((NOT (rt43.c1))) BETWEEN (CAST(rt43.c2 AS TEXT)) AND ((NOT (rt43.c1)))) FROM rt43 WHERE ((NOT (((x'')<>(x''))))); -- 0ms;
SELECT DISTINCT ((0.18824098232515707)OR(((rt43.c2) BETWEEN (rt1.c2) AND (rt43.c2)))), LAG(CASE WHEN CAST(NULL AS NUMERIC) THEN ((rt43.c2)&(rt1.c0)) ELSE IFNULL(DISTINCT rt43.c2, rt1.c2) END, ((((((rt1.c6)==(rt1.c3)))OR(x'')))OR((((rt1.c2))>=((rt43.c0))))), ((((((((CAST(rt1.c6 AS REAL))OR(LOWER(rt1.c2))))AND((((rt1.c6)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c7))))))AND(CASE WHEN rt1.c0 THEN rt1.c5 END)))AND(((rt43.c0)||(rt1.c4))))) OVER (), x'15a7' FROM rt43, rt1 ORDER BY ((((x'')<<(rt1.c3)))AND((((rt1.c4)) BETWEEN ((NULL)) AND ((rt1.c5))))); -- 0ms;
SELECT ((((rt43.c0)AND(rt43.c1)))OR(rt43.c0)) COLLATE NOCASE FROM rt1;SELECT ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN 'fO#+#wS|\n' WHEN rt1.c2 THEN rt43.c1 ELSE rt1.c4 END)>=(0.8380687264149442)), ((rt1.c3 IN ()) IN ()), '''Yt>' FROM rt1, rt43 ORDER BY ((((rt1.c6) IS FALSE)) NOTNULL)  NULLS FIRST, (NOT (((rt1.c0)LIKE(rt1.c4)))) ASC, '571377121'  NULLS FIRST; -- 1ms;
SELECT LAG('-1059346765', (((rt43.c0)) BETWEEN ((CAST(rt43.c1 AS NUMERIC))) AND ((CAST(rt1.c1 AS NUMERIC)))), CASE WHEN ((((((((rt1.c7)AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c7)))AND(rt43.c2)) THEN (rt43.c1 IN ()) END) OVER () FROM rt1, rt43 WHERE (((COALESCE(DISTINCT '623120137', '-1411711868')) ISNULL)); -- 0ms;
SELECT ALL ((((rt1.c1)GLOB(NULL)))>(((rt1.c4)>>(rt1.c7)))), (NOT (rt43.c2)) COLLATE BINARY, ((((((((((rt43.c1) IS FALSE))AND((NOT (rt1.c0)))))OR(rt1.c2 COLLATE RTRIM)))OR(rt1.c0 COLLATE BINARY)))OR(((((NULL)OR(rt1.c1)))AND(0Xffffffffff8fb46a)))), AVG(((rt1.c6)-(rt1.c6))), ((((((((rt1.c4)OR(rt1.c5)))OR(rt43.c1)))AND(SUM(rt43.c0))))AND((((rt1.c6))<=((rt43.c0))))) FROM rt1 LIMIT -2007779110 OFFSET -1076614006;SELECT ALL CUME_DIST() OVER () FROM rt1 WHERE ((- (DATETIME(x'c5b1', 0.5855569900032497, -1.541030877E9, x'', NULL)))); -- 0ms;
SELECT DISTINCT (rt1.c4 IN ()) COLLATE BINARY, (LIKELIHOOD(DISTINCT rt43.c2, 0.29463780471915324) IN (CAST(rt43.c1 AS BLOB))), ((CASE rt1.c5  WHEN rt1.c4 THEN rt1.c0 END) IS FALSE) FROM rt1, rt43; -- 1ms;
SELECT (NOT (((rt1.c0)<(rt1.c3)))), CAST(x'' AS INTEGER), ((((rt1.c5) BETWEEN (rt43.c0) AND (rt1.c1))) IS FALSE) FROM rt43 CROSS JOIN rt1 ON (((rt1.c6)) BETWEEN (('-653324705')) AND (((rt43.c2 IN ())))); -- 0ms;
SELECT ALL (~ ((rt1.c1 IN ()))) FROM rt43, rt1 WHERE (((CAST(NULL AS REAL))<(TOTAL_CHANGES()))); -- 0ms;
SELECT ALL rt1.c4 FROM rt1, rt43 WHERE ((- ((NULL IN (NULL))))) GROUP BY rt1.c2 COLLATE NOCASE HAVING AVG((NOT (rt1.c3))); -- 0ms;
SELECT ALL rt1.c1, CASE WHEN ABS(DISTINCT rt1.c6) THEN ((((((((((((rt1.c0)AND(0xfffffffffbe65ada)))AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c7)))AND(rt43.c1)) END, CASE WHEN ((((rt1.c4)AND(rt1.c6)))OR(rt1.c4)) THEN CASE 'TRUE'  WHEN rt1.c0 THEN rt1.c4 END END FROM rt1, rt43; -- 0ms;
SELECT DISTINCT rt1.c4 COLLATE NOCASE, (((rt1.c1 IN ()))%(((rt1.c6)||(rt43.c2)))), x'100c', LEAD(NULL, (CAST(-1.114702121E9 AS NUMERIC) IN (x'')), (- ((((rt43.c1, rt43.c1, rt43.c2)) NOT BETWEEN ((rt43.c2, '', rt43.c0)) AND ((rt43.c1, rt43.c2, rt43.c0)))))) OVER (), CASE WHEN rt1.c4 COLLATE BINARY THEN ((((rt1.c2)OR(rt1.c2)))OR(rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt43.c0) AND (rt1.c2)) THEN ((rt1.c3)IS(rt1.c7)) WHEN rt43.c0 COLLATE BINARY THEN 0.3155446388005848 END FROM rt43 GROUP BY (~ ((rt1.c1 IN ()))) HAVING ((CASE rt1.c6  WHEN rt1.c6 THEN rt1.c7 ELSE rt43.c0 END)>=((+ (rt43.c0))));SELECT ALL ((((('563651215')) NOT BETWEEN ((rt1.c4)) AND ((rt43.c1))))OR(((rt43.c2) NOT NULL))), ((((rt1.c6) IS FALSE))/(CAST(rt1.c4 AS TEXT))), ((((rt1.c6)+(rt1.c3))) BETWEEN (((rt1.c1) NOT BETWEEN (rt43.c2) AND (rt1.c2))) AND ((('') BETWEEN (rt1.c4) AND (1859353570)))) FROM rt1;SELECT DISTINCT HEX((- (rt1.c5))), (+ (rt1.c4 COLLATE BINARY)), ((((rt1.c4)>=(rt1.c2)))<<((((rt1.c3)) BETWEEN ((rt43.c0)) AND ((rt1.c4))))), TOTAL(CAST(rt1.c6 AS BLOB)), ((CASE WHEN rt1.c7 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c5 THEN rt43.c0 END)<((~ (rt1.c3)))) FROM rt43 WHERE ((+ (((0.7046982679528195)IS NOT(0.8650612961627153)))));SELECT DISTINCT (((rt1.c3 IN ()))>=(UPPER(DISTINCT rt43.c0))), COUNT(TOTAL(((rt1.c0)%(NULL)))), (((rt43.c0) NOTNULL) IN (((((rt1.c5)OR(rt43.c1)))OR(rt1.c0)))) FROM rt1, rt43;SELECT ALL CASE WHEN NULL THEN (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((0Xffffffffdc5470f9))) ELSE rt1.c3 COLLATE RTRIM END FROM rt1; -- 0ms;
SELECT ALL rt43.c1 FROM rt43; -- 0ms;
SELECT DISTINCT (IFNULL(DISTINCT rt43.c0, rt1.c0) IN (NULLIF(DISTINCT rt1.c7, rt1.c1))) FROM rt1 UNION SELECT DISTINCT x'' FROM rt1, rt43 WHERE ((((('()') BETWEEN (x'') AND (x'')))GLOB(((x'')|(0.09917662000694683)))));SELECT (- (CASE rt1.c4  WHEN rt43.c1 THEN rt1.c3 ELSE rt1.c3 END)), ((rt1.c7)&(rt1.c6)) COLLATE NOCASE, (- ((((rt43.c0, rt43.c1, rt1.c2, rt1.c2, rt43.c2)) BETWEEN ((rt1.c5, rt1.c5, rt1.c3, rt1.c2, rt1.c4)) AND ((rt43.c1, rt1.c3, rt43.c0, rt1.c2, rt1.c7))))), LOWER(PRINTF(rt43.c2)), COUNT(CAST(rt1.c1 AS INTEGER) COLLATE BINARY) OVER () FROM rt43, rt1; -- 0ms;
SELECT ALL (LIKELY(rt43.c0) IN ()), ((((((rt1.c6)AND(rt1.c7)))OR(rt1.c3)))GLOB(((rt43.c2) IS FALSE))), MIN((((rt1.c7, rt1.c7, rt1.c2)) BETWEEN ((rt1.c3, rt1.c6, rt1.c3)) AND ((rt1.c7, rt43.c2, rt1.c4))) COLLATE NOCASE) FROM rt43;SELECT DISTINCT (((((rt43.c0))>=((rt1.c6)))) IS FALSE), (((((rt1.c7))<>((rt1.c2))))|(((((rt1.c5)OR(rt1.c5)))AND(rt1.c5)))), ((rt1.c1)LIKE(rt1.c3)) COLLATE BINARY, CASE rt1.c1  WHEN rt1.c7 THEN x'' END COLLATE NOCASE, (((rt1.c5)) NOT BETWEEN ((LIKELIHOOD(rt43.c1, 0.9407940614148885))) AND ((LIKELY(rt43.c0)))) FROM rt43 GROUP BY ((((((rt1.c3)AND(rt43.c1)))OR(rt1.c4)))/(((x'dfed') NOT BETWEEN (rt1.c2) AND (rt1.c3)))), (((((rt43.c0) BETWEEN (rt43.c2) AND ('-1840754911'))))>=((TRIM(rt1.c1)))), ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt43.c2 END)GLOB((rt1.c0 IN ())));SELECT DISTINCT LAG((~ (rt1.c5)), (rt1.c4 IN ()) COLLATE RTRIM, ((((((((0.1906583665024818)OR(((rt1.c7) BETWEEN (0.19194310974319062) AND (rt1.c0)))))OR((((rt43.c0)) BETWEEN ((rt1.c7)) AND ((rt1.c4))))))AND(((rt1.c5) BETWEEN (rt1.c7) AND (rt43.c1)))))OR((rt43.c2 IN ())))) OVER () FROM rt1 RIGHT OUTER JOIN rt43 ON COALESCE((((rt43.c1)) NOT BETWEEN ((rt1.c7)) AND ((x''))), rt1.c3, (rt43.c1 IN ()), ((-6.24075628E8) BETWEEN (rt1.c7) AND (rt1.c6))) WHERE (((((x'') NOT NULL)) NOT BETWEEN (((x'') ISNULL)) AND (IFNULL(DISTINCT -1104630980, NULL)))); -- 1ms;
SELECT DISTINCT rt1.c5 FROM rt1 WHERE ('') LIMIT 634082390; -- 0ms;
SELECT ALL (((rt1.c2)||(rt43.c1)) IN (CAST(rt43.c1 AS REAL))), CAST(((rt1.c4)-(rt43.c0)) AS NUMERIC), (~ (((((((((rt43.c2)OR(rt43.c2)))OR(rt1.c5)))OR(rt1.c6)))AND(rt43.c2)))), TOTAL(((rt1.c0) NOT BETWEEN (rt43.c0) AND (rt1.c5))) OVER (), (((- (rt43.c2))) ISNULL) FROM rt1 WHERE (((('u.kMk䥸Cm' IN (-6.39666164E8, '-137200815')))>((NOT (NULL))))) GROUP BY (LIKELY(rt1.c4) IN (rt43.c0 COLLATE BINARY, (((rt1.c4, rt1.c4, rt1.c5, rt43.c1, rt1.c4)) BETWEEN ((rt43.c2, rt1.c2, rt1.c3, rt1.c3, rt1.c4)) AND ((rt1.c1, rt1.c3, rt1.c3, '-963250287', rt1.c6))))), (((((rt1.c0))<((rt1.c5)))) BETWEEN (CASE WHEN rt1.c3 THEN rt43.c1 END) AND (((rt1.c6)OR(rt43.c0)))), ((((((((ABS(rt43.c0))AND(((rt1.c4)LIKE(rt43.c2)))))OR(x'')))OR(SQLITE_COMPILEOPTION_USED(rt1.c6))))AND(((rt1.c0)>(rt1.c4))));SELECT CAST(rt1.c2 COLLATE BINARY AS BLOB), ('9D21' IN ()), (NOT (((((rt1.c1)AND(rt1.c1)))OR(rt1.c7)))) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c5))||(((((((((((((rt1.c3)OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c6)))AND(rt43.c0)))AND(rt43.c1)))AND(rt1.c6)))) FROM rt43 WHERE (((NULL) BETWEEN (((((0.5801265282572321)AND(x'20a7')))AND(x''))) AND (((x'59072bec43c3') BETWEEN (0xffffffffe0397709) AND (NULL)))));SELECT DISTINCT ((MAX(rt1.c3)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(rt1.c2)) AND (MIN(rt1.c0, rt1.c1))) FROM rt1 WHERE (CASE ((0.264291840975875) IS FALSE)  WHEN (((0.9397287513958094, 'n4O', NULL, 'Kne	X', 0.6362511151128011))<=((0.24400160031814733, 'gOe~', NULL, '-624075628', NULL))) THEN (('-1561973187') IS TRUE) WHEN 0.8703984848737958 THEN (NULL IN ()) WHEN (0Xffffffff9cf55d54 IN (-2011196244, x'')) THEN 0.9136922708643507 ELSE CAST(0xffffffff868042b9 AS NUMERIC) END); -- 0ms;
SELECT CAST(CASE 0.9360292847870028  WHEN rt1.c3 THEN rt43.c2 ELSE '668118172' END AS TEXT), (NOT (((rt1.c6)>>(rt1.c6)))), (CASE WHEN rt1.c0 THEN rt1.c7 WHEN rt43.c1 THEN rt43.c1 WHEN rt1.c4 THEN rt1.c7 ELSE rt1.c7 END IN ()) FROM rt1 WHERE ((((('h塞#ꊗxK*^u')>(NULL))) NOT BETWEEN (highlight(1.98883983E9, 0.33036135471611894, NULL, x'')) AND (((0.8376444224201116) IS FALSE)))) ORDER BY (-1.338769065E9 IN ()) ASC  NULLS FIRST;SELECT DISTINCT CASE WHEN (((rt43.c0)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c0))) THEN (((rt1.c1, rt43.c1, rt43.c1)) BETWEEN ((rt43.c0, rt1.c1, rt1.c6)) AND ((0.37066638572862154, rt43.c1, rt1.c4))) END FROM rt1 LIMIT -294559153 OFFSET 444557828;SELECT ALL TRIM((NOT (rt43.c0)), ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c7)))AND(rt1.c6)))AND(rt1.c1))) FROM rt1 WHERE (((((LIKELIHOOD(DISTINCT NULL, 0.7500352417490573))OR(((x'') BETWEEN (x'') AND (x'')))))OR(NULL)));SELECT DISTINCT NULLIF(DISTINCT ((((((((rt1.c0)OR(rt43.c0)))AND(rt1.c1)))AND(rt1.c3)))OR(0.025266961943993693)), rt1.c4), AVG(((rt43.c2) ISNULL)) FILTER(WHERE ((((rt1.c5) IS FALSE))<=(''))) OVER (), ((((((rt1.c0, rt1.c3, rt1.c0))<=((NULL, rt1.c1, rt1.c6)))))<=((((((((((rt1.c6)AND(rt1.c5)))OR(rt43.c0)))OR(rt1.c1)))AND(rt1.c1))))) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT (NOT (('' IN ()))) FROM rt43, rt1 UNION SELECT LAG(load_extension(LAST_INSERT_ROWID(), NULL), ((((rt43.c2 IN ()), CHAR(rt43.c1), 1.43533155E9))=((((((((((rt43.c2)OR(rt43.c2)))OR(rt43.c0)))OR(rt43.c0)))OR(rt43.c1)), ((rt43.c2) BETWEEN (rt43.c0) AND (-1.804313706E9)), CAST(rt43.c2 AS TEXT)))), CAST(LOWER(rt43.c1) AS REAL)) OVER ( ORDER BY CAST(TIME(rt1.c5, rt1.c2, rt1.c0) AS BLOB), (((~ (rt1.c4)))>=(rt1.c6)), ((((rt1.c7) NOT BETWEEN (rt43.c1) AND (rt1.c3)))&(IFNULL(rt1.c1, rt43.c0)))  NULLS FIRST) FROM rt43 LIMIT -572476871 OFFSET 1894767618;SELECT (- (((rt1.c7) NOT BETWEEN (rt1.c2) AND (rt1.c6)))) FROM rt43 WHERE (((LOWER(DISTINCT 0.1107233669712524)) NOT NULL));SELECT ALL HEX(((rt1.c6)OR(0Xffffffffccbf5839))) FROM rt43, rt1 WHERE (((((((x'')OR(0.9416860922989843)))AND(x'4048')))>=(CAST(-36267830 AS INTEGER)))) GROUP BY ((((DATETIME(rt1.c6, rt1.c2, rt43.c0, rt1.c0, rt1.c7))AND(CASE WHEN x'7f24' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c7 END)))AND(((rt43.c2) IS TRUE))), CASE WHEN ((rt43.c1)<<(rt1.c4)) THEN rt43.c1 ELSE ((((rt1.c4)AND(rt43.c2)))OR('842790758')) END, ((rt1.c3)IS(rt1.c3)) COLLATE NOCASE HAVING (((NOT (rt1.c1))) BETWEEN ('-27323618') AND (((rt1.c7)%(rt1.c4)))); -- 1ms;
SELECT ALL ((x'')%(AVG(rt43.c0))), NTILE((+ ('1627651054')) COLLATE BINARY) OVER ( GROUPS ((((rt1.c4)IS(rt1.c5))) NOTNULL) PRECEDING EXCLUDE GROUP), ((NULL)/((~ (rt1.c0)))), ((rt1.c1 COLLATE BINARY) NOT NULL), GROUP_CONCAT(((((rt1.c4)AND(rt43.c1)))OR(rt43.c1))) OVER () FROM rt43, rt1 WHERE ((((UPPER(x'')))>=(((+ (x'')))))) ORDER BY (- (IFNULL(rt1.c3, rt43.c0))) ASC  NULLS FIRST, (((((rt43.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c6))))GLOB(((((rt1.c5)OR(rt1.c2)))OR(NULL)))); -- 0ms;
SELECT DISTINCT CAST((~ (rt1.c5)) AS REAL) FROM rt1 WHERE (UPPER(DISTINCT (('-1114702121') NOT NULL))); -- 0ms;
SELECT ALL ((MIN(rt43.c2))OR(((rt1.c2)&(rt1.c2)))), ((TOTAL(rt1.c3))=(CASE rt1.c5  WHEN NULL THEN rt1.c3 END)), AVG(ABS(DISTINCT rt1.c3)) OVER () FROM rt43 WHERE ((+ (x'7aff')));SELECT ((UNLIKELY(DISTINCT rt1.c6)) NOT BETWEEN (x'8a30') AND (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c5)))) FROM rt1, rt43; -- 1ms;
SELECT ALL (((('1128009999')+(rt1.c6)))+((rt1.c7 IN (rt1.c2)))) FROM rt43, rt1 WHERE (LOWER(DISTINCT ((x'') NOT NULL))); -- 0ms;
SELECT ALL COUNT(((rt1.c6)>=(rt1.c2))) OVER () FROM rt1, rt43; -- 0ms;
SELECT ALL CASE '0.14382194559568628'  WHEN rt1.c7 COLLATE BINARY THEN CAST(x'' AS TEXT) END FROM rt43 WHERE (((CAST(x'' AS TEXT)) ISNULL)) ORDER BY LIKE('0.8810267649158994', rt1.c1, 'r') COLLATE BINARY  NULLS FIRST;SELECT DISTINCT ((((rt43.c1)LIKE(rt1.c2))) BETWEEN (((((rt1.c4)OR(rt1.c1)))OR(rt43.c2))) AND (((rt43.c1)=(rt1.c0)))) FROM rt1, rt43 WHERE (((((x'66ac') NOT BETWEEN ('-707598270') AND ('*Q'))) IS TRUE)) GROUP BY CAST('' COLLATE NOCASE AS TEXT) HAVING ((((rt43.c0)<(rt1.c4))) NOT NULL); -- 1ms;
SELECT ALL ((((rt1.c5) NOT BETWEEN (rt43.c2) AND (rt43.c2))) BETWEEN (x'' COLLATE RTRIM) AND (((rt1.c2) IS FALSE))) FROM rt1 NOT INDEXED, rt43 WHERE (((((x'99c7')>(x'9a79'))) BETWEEN ((x'' IN ('ꊏy'))) AND (((x'')+(NULL))))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt43;SELECT DISTINCT ((rt1.c3)=(x'')) COLLATE RTRIM, CAST((('-489683823') NOT BETWEEN (rt43.c2) AND (rt1.c7)) AS TEXT), LAST_VALUE(((((rt1.c6) IS FALSE))LIKE(((((((((rt1.c5)OR(rt1.c4)))OR(rt1.c7)))OR(rt1.c3)))AND(0.7415558484969784))))) OVER ( ORDER BY (((((0xfffffffff8677100) IS FALSE)))<=((x'90ae'))), rt43.c0 DESC  NULLS LAST), CASE WHEN (((rt43.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c4))) THEN CASE rt1.c7  WHEN rt1.c0 THEN rt43.c1 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt43.c2 END END, ((((((((((rt1.c5)<=(rt1.c3)))AND(0.6871534269725283)))AND(((rt1.c2)<<(rt1.c0)))))OR((- (0.7014541748266466)))))AND(x'')) FROM rt1;SELECT ALL ((((rt43.c1)IS NOT(rt1.c5)))GLOB(((x'')<>(rt1.c6)))), (((((rt1.c3))<>((rt43.c0))))*(TRIM(rt1.c1))), TYPEOF(CAST(rt1.c3 AS BLOB)), CASE WHEN UNLIKELY(rt43.c1) THEN ((rt1.c4)AND(rt1.c7)) END, (((NOT (rt43.c0)))>=(CASE rt1.c0  WHEN rt1.c5 THEN rt43.c2 WHEN rt1.c6 THEN rt43.c1 WHEN rt43.c2 THEN rt43.c2 ELSE NULL END)) FROM rt1;SELECT ALL ((LIKELY(0xffffffffb6520c59))OR(((((rt43.c1)AND(rt43.c1)))AND(rt1.c1)))) FROM rt1 WHERE (((('-923382039')) BETWEEN (((((x'1692')) BETWEEN ((',\O	N%m')) AND (('nS'))))) AND ((((NULL) NOT BETWEEN (0Xffffffffd1922a38) AND ('i'))))));SELECT ALL ((CAST('-21855748' AS REAL)) NOT BETWEEN ((rt1.c5 IN (rt43.c0))) AND (MIN(rt43.c0))) FROM rt1, rt43 LIMIT -778950088; -- 0ms;
SELECT (((rt1.c5, rt1.c7, rt1.c4)) NOT BETWEEN ((((rt1.c3) NOTNULL), (((rt1.c1, rt1.c0, rt1.c3))==((rt43.c1, rt1.c6, rt1.c1))), ((rt1.c7)AND('d''U')))) AND ((((0.4362195010733545)!=(x'0676')), rt1.c5, SUM(x'b037')))) FROM rt43, rt1 WHERE (((0xffffffffdaba5374) NOT NULL)); -- 0ms;
SELECT ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt43.c1 THEN rt1.c5 WHEN rt43.c1 THEN rt43.c2 END) BETWEEN (SUM(rt1.c7)) AND (TOTAL(rt1.c5))) FROM rt1, rt43 WHERE (((LOWER(NULL))<=(CAST('-422998011' AS INTEGER)))); -- 0ms;
SELECT ALL ((((rt1.c4) NOT BETWEEN (rt43.c2) AND (rt43.c0))) ISNULL), (((NULL IN ())) IS FALSE), CUME_DIST() OVER (), (+ (rt1.c4 COLLATE BINARY)), GROUP_CONCAT((((rt1.c0))!=((rt1.c1)))) FROM rt43, rt1 WHERE (COALESCE((((x''))>((0xffffffffd9825d8d))), (~ ('w')), ((NULL)IS NOT(x'')), CAST(0.9313558458156406 AS NUMERIC))); -- 0ms;
SELECT DISTINCT AVG((((rt43.c0, rt1.c1, rt43.c0)) NOT BETWEEN ((x'7728', NULL, rt43.c1)) AND ((rt1.c7, rt1.c2, rt43.c0)))) OVER (), ((CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c6 THEN rt1.c3 WHEN rt43.c1 THEN rt43.c0 ELSE 0Xffffffff9042b293 END) NOT BETWEEN ((((rt43.c0))!=((rt1.c7)))) AND (CAST(rt1.c0 AS REAL))), rt43.c0 FROM rt1, rt43 WHERE ((((((x''))<((0.4193220927440876)))) BETWEEN (((NULL) BETWEEN ('-1194091023') AND (x''))) AND (((((((((NULL)OR(x'5f05')))OR(NULL)))AND('-1338769065')))OR(0.008574723731762046))))) LIMIT -1338769065; -- 1ms;
SELECT DISTINCT ((rt1.c2)&(rt43.c1)) COLLATE BINARY, PERCENT_RANK() OVER ( ORDER BY rt1.c2, ((((((rt43.c2)/(rt1.c1)))OR(LIKELIHOOD('bX', 0.41966811145014893))))OR(((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt43.c1)))), ((((rt43.c2)+(rt43.c2))) NOT BETWEEN ((((rt1.c2)) NOT BETWEEN ((0.3818782928596334)) AND ((rt1.c1)))) AND (CAST(rt1.c7 AS REAL))) DESC  NULLS LAST), COUNT((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c2)))) FROM rt43, rt1 ORDER BY (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c7))) COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT LAST_VALUE(((~ (rt1.c3)) IN ())) OVER (), CAST(UNLIKELY(rt1.c6) AS INTEGER), (~ (((rt1.c6) NOT NULL))) FROM rt1; -- 0ms;
SELECT DISTINCT (((((((((rt43.c2 IN (rt1.c4)))AND(((rt1.c0)||(rt1.c0)))))AND(MIN(rt43.c0))))OR(((rt1.c0)>(0.07485688860216755)))))OR(((rt1.c4) IS FALSE))) FROM rt1 LIMIT -1124628153;SELECT CASE WHEN (('0.48857721121812514')OR(rt43.c0)) THEN ((rt1.c3)>=(rt1.c1)) WHEN (((rt43.c1, rt43.c0, rt1.c5)) BETWEEN ((rt1.c0, rt1.c2, 'x\r6')) AND ((rt1.c1, 0.8691106548023524, rt1.c2))) THEN LIKELY(rt43.c0) WHEN ((rt1.c3)IS NOT(rt1.c2)) THEN ((((rt1.c6)OR(rt1.c2)))AND(rt1.c5)) WHEN (+ (rt1.c7)) THEN (+ (rt43.c1)) WHEN ((NULL) BETWEEN (rt43.c1) AND (rt1.c5)) THEN (((rt1.c5))<=((rt1.c0))) ELSE ((((rt1.c3)AND(rt1.c4)))AND(rt1.c2)) END FROM rt43;SELECT ALL FIRST_VALUE((((rt43.c1 IN ()))<=(((((((((rt1.c7)AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))AND(rt1.c6))))) OVER ( ROWS ((NOT (rt1.c3)) IN (((rt1.c1) BETWEEN (rt43.c1) AND (rt1.c0)))) PRECEDING), TYPEOF(CAST(NULL AS TEXT)), CASE WHEN (x'' IN ()) THEN rt43.c2 WHEN rt1.c5 THEN CASE WHEN rt1.c6 THEN rt43.c2 ELSE rt1.c1 END WHEN CASE WHEN rt1.c7 THEN rt1.c7 ELSE rt1.c0 END THEN (((rt1.c2)) BETWEEN ((rt43.c0)) AND ((0.5252361000340118))) END FROM rt1, rt43;SELECT DISTINCT COUNT(*), (((rt43.c0 IN ())) BETWEEN (LIKELY(rt1.c6)) AND (((((((((rt1.c6)OR(rt1.c4)))OR(rt1.c5)))OR(rt43.c0)))OR(rt1.c7)))), CUME_DIST() OVER () FROM rt43 WHERE (((CAST(NULL AS INTEGER))|((('-917525140')*('647644580')))));SELECT ALL (((((rt1.c2)AND(rt1.c6)))AND(rt1.c6)) IN ()) FROM rt43, rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c4) BETWEEN (rt1.c0) AND (rt43.c1)))OR((rt1.c7 IN (-23743721)))))AND(((rt1.c6)GLOB(rt1.c7)))) FROM rt1 WHERE ((- (((x'd79e') NOTNULL))));SELECT ALL rt1.c5 FROM rt1 WHERE ((((0.9478770563779877 IN ())) IS TRUE)) GROUP BY ('2033546642' IN ()) COLLATE BINARY HAVING (+ (((((((((rt1.c5)OR(rt43.c2)))AND(rt1.c6)))AND(rt1.c2)))AND(rt1.c5))));SELECT DISTINCT rt1.c4 FROM rt43 GROUP BY rt1.c7;SELECT DISTINCT (~ (((rt43.c0)LIKE(rt1.c3)))) FROM rt1, rt43 WHERE ((('M#E+UK~A' COLLATE BINARY) NOTNULL)) LIMIT 721202752; -- 0ms;
SELECT DISTINCT MIN(((((((((((((rt43.c0)OR(rt1.c3)))AND(rt1.c7)))OR(rt1.c0)))OR(rt1.c5)))AND(rt1.c7)))OR(rt1.c6))), ((CAST(rt1.c6 AS TEXT))-(CAST(rt43.c1 AS BLOB))), LOWER(((rt43.c0) NOTNULL)) FROM rt43 ORDER BY NULL  NULLS FIRST;SELECT rt1.c0 FROM rt1, rt43 WHERE (0.9335875861506968); -- 0ms;
SELECT DISTINCT (0.6791967887106141 IN ()) FROM rt43, rt1 ORDER BY (((((rt1.c4))>((rt1.c3)))) BETWEEN (NULL) AND (((rt1.c1)>(rt1.c3)))) DESC; -- 0ms;
SELECT ALL rt1.c4 FROM rt1 WHERE (((((CASE '-172862961'  WHEN x'' THEN NULL ELSE -0.0 END)OR(((('0.7695261917481803', 'q*', NULL)) NOT BETWEEN ((0.1491794255792459, x'3260', NULL)) AND (('-353138300', 0xffffffff8563a850, x''))))))OR((((x'')) NOT BETWEEN ((NULL)) AND ((-1138785712)))))); -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt43.c2)>=(rt1.c6))))!=((((rt1.c1)IS(rt43.c1))))) FROM rt1, rt43 ORDER BY (((~ (rt43.c0))) ISNULL)  NULLS LAST; -- 0ms;
SELECT (NOT ((~ (rt1.c1)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt43.c2) NOTNULL) COLLATE RTRIM FROM rt1, rt43; -- 0ms;
SELECT DISTINCT CAST(load_extension(rt1.c5) AS NUMERIC), ((((rt1.c5)>>(rt1.c5))) BETWEEN ((rt43.c0 IN ())) AND (load_extension(rt43.c1))), CAST(rt43.c0 AS TEXT) COLLATE BINARY FROM rt43 WHERE (CAST(((0.004695328405893484) NOT BETWEEN ('-439897344') AND (0.8571869528667188)) AS REAL));SELECT ALL (+ (((rt1.c4)||(rt1.c2)))), RANK() OVER (), (((rt1.c2 IN ()))AND(((rt1.c7)||(x'')))) FROM rt43 WHERE (0.9684293403752265 COLLATE BINARY);SELECT COUNT(*) FROM rt43; -- 0ms;
SELECT (((rt43.c2) IS TRUE) IN ()) FROM rt43, rt1 WHERE (((((((0.26737476383165537)<(0.6528764091589176)))OR((x'' IN ()))))AND(CASE WHEN '563651215' THEN x'831ab7ed' ELSE '祯<' END))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS NUMERIC)) IS TRUE), ((CASE WHEN rt1.c7 THEN rt1.c6 END)/((((rt43.c2)) BETWEEN ((rt1.c4)) AND ((rt1.c1))))), ((((((0.9804920612891632) NOT BETWEEN (rt1.c4) AND (rt1.c3)))AND(rt43.c2 COLLATE NOCASE)))AND(((rt1.c6)<=(rt43.c2)))) FROM rt43, rt1 EXCEPT SELECT ALL ((CAST(rt1.c3 AS NUMERIC))*(((rt1.c5) ISNULL))), CAST(rt1.c2 AS BLOB), MIN(NULL) FROM rt1, rt43 WHERE (((LIKELIHOOD(NULL, 0.35673245098957507)) NOT BETWEEN (CAST('1075667902' AS REAL)) AND ((((NULL)) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 1ms;
SELECT ALL (- (COUNT(*))) FROM rt1 GROUP BY (((+ (rt43.c1)))%(0.7927574299853148)) HAVING CASE CAST(rt1.c1 AS INTEGER)  WHEN ((((rt43.c0)OR(rt1.c2)))OR(rt1.c1)) THEN ((rt1.c3)|(rt1.c2)) ELSE rt1.c2 END;SELECT DISTINCT COALESCE((- (rt1.c3)), (((rt43.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))), ((((rt1.c3) BETWEEN (rt1.c6) AND (rt1.c3)))<(((NULL) NOT NULL))), ((((rt1.c0) BETWEEN (rt1.c6) AND (rt1.c2))) IS FALSE) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT ((((rt1.c5))<((rt1.c4))) IN ()) FROM rt1 WHERE (((((NULL)<<(0X60e4458d))) IS FALSE)) ORDER BY CAST(((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c1)) AS BLOB) ASC; -- 0ms;
SELECT DISTINCT ((((rt43.c1 IN ()), CASE WHEN rt1.c6 THEN 0.6183183635018455 WHEN rt1.c7 THEN rt1.c7 WHEN '' THEN rt1.c7 ELSE '' END, rt1.c6))>((0xffffffffa6250fe4, ((((rt43.c1)AND(rt1.c6)))AND(rt43.c2)), ((rt1.c4) ISNULL)))) FROM rt1, rt43 LIMIT -1050691396 OFFSET 375478773; -- 0ms;
SELECT DISTINCT CASE WHEN (('-1178255500')>=(rt1.c1)) THEN ((rt43.c0)<(rt1.c2)) ELSE (rt1.c7 IN (rt1.c5)) END FROM rt43, rt1 WHERE (NULL); -- 0ms;
SELECT rt1.c5 FROM rt1 WHERE (((((NULL)<=('<oz5<)\n{^'))) NOT BETWEEN (CASE x'080c'  WHEN NULL THEN 283593742 END) AND ((('0.8699945062521987') ISNULL)))); -- 1ms;
SELECT ALL ((rt43.c1 COLLATE NOCASE)OR(COUNT(*))), COUNT(*) OVER (), MAX((rt1.c1 IN (rt43.c1, rt1.c4))) FROM rt43 WHERE (CAST(CASE WHEN x'' THEN '&Bx>4' WHEN '' THEN 'dcv' WHEN -1.22198115E9 THEN x'' WHEN '1200315632' THEN '' WHEN 0.7055058767887995 THEN -1.194885152E9 ELSE NULL END AS INTEGER));SELECT DISTINCT CASE rt1.c3  WHEN rt1.c3 THEN NULL END COLLATE NOCASE, ((NOT (rt1.c3)) IN ()), PERCENT_RANK() OVER ( ORDER BY ((CASE WHEN rt1.c4 THEN rt1.c6 END) BETWEEN (ABS(rt43.c2)) AND ((rt1.c5 IN ()))) GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt1, rt43 WHERE (((((NULL)IS NOT('1102554933'))) NOT BETWEEN (((NULL)<<(NULL))) AND ((('210895729')LIKE(NULL))))); -- 0ms;
SELECT UNLIKELY('0.7003187905220436'), (~ ((((((((((((('NAYY⭓h冢^')AND(rt43.c0)))AND(rt1.c2)))AND(rt1.c4)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c7)))), LEAD((NOT (((rt1.c5) NOT BETWEEN (rt1.c2) AND (rt1.c3)))), TRIM(CAST(rt1.c0 AS TEXT)), (((rt1.c7 IN (rt1.c3)))-(((rt1.c1) NOT BETWEEN (rt1.c6) AND (rt1.c2))))) OVER () FROM rt1 GROUP BY CAST(x'1abbdf1e' AS BLOB);SELECT TRIM(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)), (- (rt1.c3))) FROM rt1, rt43; -- 0ms;
SELECT DISTINCT (rt1.c1 COLLATE BINARY IN (((rt1.c2)IS(rt1.c4)))) FROM rt1 GROUP BY json_type(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END), (((rt1.c2, rt1.c4, rt43.c2)) BETWEEN ((CASE WHEN rt43.c0 THEN rt1.c6 ELSE rt1.c0 END, ((rt1.c1)<>(rt43.c1)), ((rt43.c2) BETWEEN (rt43.c2) AND (rt1.c0)))) AND (((((rt1.c1))<>((rt1.c4))), CAST(rt1.c7 AS INTEGER), rt43.c2))), ((((rt1.c0) ISNULL)) IS FALSE) HAVING (~ (json_quote(rt1.c6))) ORDER BY (+ (LOWER(rt1.c3)));SELECT ALL (((rt1.c0, rt43.c2, rt1.c4, 0.4145870247477724, rt1.c0)) NOT BETWEEN ((NULL, COUNT(*), rt1.c2 COLLATE RTRIM, (NOT (rt1.c1)), x'')) AND ((((((rt1.c3)OR(rt1.c2)))OR(rt43.c1)), CASE WHEN rt1.c3 THEN rt43.c0 END, (rt1.c7 IN (rt43.c0, NULL)), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END, ((rt43.c2) IS TRUE)))) FROM rt1, rt43 GROUP BY rt1.c6 HAVING ((((CAST(rt1.c5 AS REAL))OR(AVG(rt43.c0))))OR(((rt43.c0)||(x'')))); -- 0ms;
SELECT ALL (((((rt43.c2, rt43.c1, rt1.c7)) BETWEEN ((rt43.c1, rt1.c5, rt43.c0)) AND ((rt1.c1, rt1.c7, rt1.c1))))-(rt1.c2 COLLATE RTRIM)) FROM rt43 WHERE ((- ((('-294534060') IS TRUE)))) ORDER BY 0.21139758500409844 ASC, (- (rt43.c2 COLLATE RTRIM)) ASC;SELECT CASE rt1.c3  WHEN COALESCE(rt1.c6, rt1.c2, rt1.c5, rt43.c0) THEN (rt1.c4 IN ()) ELSE ((rt43.c0)IS(rt1.c1)) END, COUNT(*), ((((rt43.c1)==(rt1.c6))) BETWEEN ((+ (rt1.c4))) AND (((x'')>(rt1.c7)))) FROM rt43, rt1; -- 0ms;
SELECT ALL CASE WHEN CAST(rt1.c5 AS BLOB) THEN ((((((((rt1.c5)OR(rt1.c3)))OR(rt43.c1)))AND(rt1.c5)))OR(0.3832418225541995)) WHEN ((rt1.c0)==(rt1.c2)) THEN (rt1.c6 IN ()) WHEN NULLIF(rt1.c1, rt1.c6) THEN (rt43.c1 IN (rt1.c1)) END FROM rt1 WHERE ('BO섡(54' COLLATE BINARY);SELECT DISTINCT (((((rt1.c5, rt1.c4, rt1.c2))>=((rt1.c5, rt1.c0, rt1.c4)))) NOT BETWEEN (((((rt1.c0)AND(x'')))OR(0.23994690465665736))) AND (rt43.c0)) FROM rt1, rt43 WHERE (CAST(CASE WHEN NULL THEN '-1244525368' ELSE x'9637' END AS BLOB)) GROUP BY (((((rt43.c0) BETWEEN (rt1.c5) AND (rt1.c2)), rt1.c5, (((rt1.c3))==((rt1.c1))), (((x'', rt43.c0, rt1.c2))>=((rt1.c3, rt1.c7, rt1.c5))), rt43.c1 COLLATE RTRIM))<((rt43.c1 COLLATE NOCASE, ((((rt43.c0)OR(rt1.c5)))AND(rt1.c3)), ((rt1.c5)<(rt43.c2)), ((rt43.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)), ((0.5308542423386234) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((rt1.c7 COLLATE NOCASE)GLOB(((rt43.c2)==(rt43.c2)))) FROM rt1, rt43 WHERE (CAST(('' IN ()) AS REAL)) GROUP BY 0.9478770563779877 COLLATE RTRIM HAVING CAST(((rt1.c7) NOT NULL) AS REAL); -- 0ms;
