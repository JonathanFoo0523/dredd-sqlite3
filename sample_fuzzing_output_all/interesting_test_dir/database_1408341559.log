-- Time: 2024/06/07 02:42:56
-- Database: database59
-- Database version: 3.40.0
-- seed value: 1408341559
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 TEXT ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (NULL); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2, order=ASC, tokenize=porter); -- 1ms;
PRAGMA main.optimize; -- 0ms;
UPDATE rt0 SET c1=0Xffffffff804e77bb WHERE ((CAST(rt0.c2 AS BLOB)) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN '' ELSE rt0.c3 END) AND (0.9757032482832944)); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c2) VALUES (0.37704463664784715, '-2142341189'); -- 0ms;
UPDATE rt1 SET (c1)=('RMP+dp+]') WHERE CASE (NOT (rt1.c3))  WHEN (rt1.c3 IN ()) THEN CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN 0.5976926869897924 THEN rt1.c3 END WHEN ((rt1.c1) IS FALSE) THEN (((('E')OR(rt1.c0)))AND(rt1.c3)) WHEN ((rt1.c1)==(rt1.c0)) THEN (0.5976926869897924 IN ()) WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1)) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c3)) WHEN ((rt1.c2)IS NOT(rt1.c3)) THEN 0Xffffffff8382c08c ELSE TRIM(rt1.c4) END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'', 0.9646306859170103, '-2142341189'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0, c2) VALUES (x'2a28', NULL), ('', x'95dffb41f64c'), ('1ewW', x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(-2.088583028E9) WHERE (((rt0.c2)&(rt0.c3)) IN ()); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c3, c2) VALUES (-2088583028, 0.16611041029989904, x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(x'') WHERE (NOT (0.39129130629090947)); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES ('㒳K}3', 0.07389552085301299), (NULL, x''), (x'', 0.12826102302283182); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES ('-1659564433', NULL, x'0f43', ''), (x'98c2', '0.37704463664784715', NULL, '77'), (x'', NULL, x'', x''); -- 0ms;
INSERT OR FAIL INTO rt1(c3, c4, c0, c2) VALUES (x'', NULL, x'5706210d', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0, c2) VALUES (x'', '4%', 'rQYP>/l'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
PRAGMA default_cache_size = -1969186995; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-880346270,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (0.8522057194691613, x'', 0x53536371), (x'e8d8', '1397973873', ''), (x'd999', '0.16611041029989904', ''); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'a263', NULL, 0.12563873680007387), (0.23700300601161295, 0.5528099369071121, NULL), ('-2142341189', x'', 0.907254946512431); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c2, c1)=(NULL, 0.39465381732628935, '-813552949'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47730'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1692450256); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 641179050);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2003434008); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO vt0(c1) VALUES (''), ('1927902405'), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0Xffffffff8382c08c; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.31642596834994463, '879675991', 0.32522073607068336), (NULL, '瞻5', 0.5894336200295787), ('-120101454', 0.6606653942125693, NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1859767233);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 680895326); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c3=NULL WHERE ((rt1.c2)>(rt1.c3)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c4, c3, c1) VALUES (NULL, NULL, x'8e06', x'96cc'), (0.8602012724973354, 0.23876857126800333, '-1659564433', NULL), ('1927902405', '1859767233', NULL, 1.927902405E9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -597350703);\n; -- 4ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17415'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1090709725); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=879675991,11');\n; -- 4ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1899192919); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1161764081);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 65437322); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21956'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1088798152,13');\n; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, NULL, 0xffffffffc69b874e), (0x26379daa, '!}R', 0.32522073607068336), (NULL, ((((((x'', '-2088583028', x'bd7f', NULL, x''))<(('0.12826102302283182', '', 0.5953405798678068, 0.45817411564278254, '-1138801330'))), DATE(x'f358', '4''w[~^', 1406501147), '2131792326'))>=((CAST(1.7976931348623157E308 AS REAL), CASE WHEN NULL THEN ')⛑' END, CASE 0.7342272499324978  WHEN '^->%9v*墛' THEN '309974519' WHEN NULL THEN NULL WHEN 0xffffffffbc68dce2 THEN 0.9667569862414942 ELSE NULL END))), '-1133978398'), (x'', '1223949473', '981754058'), (x'2bc3', '1859767233', '1450235466'); -- 1ms;
PRAGMA temp.automatic_index; -- 0ms;
VACUUM; -- 2ms;
DROP TABLE rt0; -- 0ms;
END; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
PRAGMA application_id; -- 0ms;
PRAGMA threads = -435246362411149280; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES ('0.5953405798678068'); -- 0ms;
PRAGMA temp.soft_heap_limit = 5657042074018435682; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2, c0, c4) VALUES (0.3570055018225342, '#i/', '', 1397973873), (NULL, x'', '', -0.0), ('', 0X4e81d9cb454ed262, x'7444', 'ᕜ2'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.7699181295159021, NULL), (x'', '-2088583028'), (0.9646306859170103, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
ANALYZE rt0; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES (x'', 0.8522057194691613, 0.40269232271683075); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35825'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ABORT rt1 SET (c4)=('-1965531644') WHERE CASE rt1.c4 COLLATE NOCASE  WHEN '-938679029' COLLATE NOCASE THEN ((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) WHEN CASE rt1.c4  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c1 END THEN (rt1.c4 IN (rt1.c0)) WHEN (((rt1.c2))<>((0.207360477395783))) THEN (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c1, rt1.c0))) ELSE ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)) END; -- 0ms;
UPDATE vt0 SET (c0, c2, c2)=(0.7903477417708313, '1397973873', 0.815444132327061) WHERE 0Xffffffffe9aff747; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26725'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1967935209);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL 0.20141158443084006 FROM rt1, vt0, rt0 NOT INDEXED GROUP BY (CASE WHEN rt0.c2 THEN rt1.c3 END IN (vt0.c2)) HAVING (((('-2113064868')AND(((vt0.c2)|(rt0.c1)))))OR(((vt0.c0) NOT BETWEEN (x'') AND (rt1.c0)))); -- 0ms;
SELECT ALL 0.207360477395783 FROM rt1, vt0 WHERE (((((641179050) NOTNULL))+(CAST(NULL AS NUMERIC)))) GROUP BY (CAST(rt1.c1 AS INTEGER) IN ()); -- 0ms;
SELECT ((((((((vt0.c2 COLLATE NOCASE)AND((NOT (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((0Xfffffffff8d765b2)) AND ((rt1.c1))))))OR(((((rt1.c3)OR(rt0.c2)))AND(rt0.c0)))))OR((vt0.c2 IN ()))) FROM vt0, rt0, rt1 WHERE (CASE NULL  WHEN ((x'cde7')LIKE(x'69a7')) THEN ((((NULL)AND(x'')))OR(x'')) END); -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(rt1.c0)))AND(vt0.c2))) IS FALSE) FROM vt0, rt0, rt1 GROUP BY ((((((x'') NOT NULL))OR(((rt0.c1)>>(rt1.c1)))))AND((rt0.c0 IN ()))) HAVING AVG(((rt1.c2)>>(rt1.c3)));SELECT DISTINCT ((((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c1))) BETWEEN ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND ((((rt1.c3, rt1.c1, rt1.c0, x'', rt1.c4)) BETWEEN ((rt1.c1, rt0.c2, rt0.c2, rt0.c2, ')\r5I')) AND ((rt1.c2, rt0.c1, vt0.c2, vt0.c0, vt0.c1))))), ((((rt0.c2)*(rt1.c2)))<<((('-1946195786') IS TRUE))), CASE rt0.c0 COLLATE BINARY  WHEN (NOT (rt1.c0)) THEN '' ELSE (+ (vt0.c2)) END FROM rt1 WHERE ((NOT ((0x57e7516a IN (0xffffffffc80ce50b)))));SELECT DISTINCT (((((rt1.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2)))) NOT NULL) FROM rt1, vt0 ORDER BY ((((rt0.c2)>=(rt1.c2))) NOT BETWEEN ((((rt1.c4))>((rt0.c0)))) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS LAST;SELECT DISTINCT CAST(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c1)) AS INTEGER) FROM rt0, vt0 WHERE ((+ (0.38161157268082524 COLLATE NOCASE))) GROUP BY (((+ (rt0.c0)))>=(IFNULL(DISTINCT vt0.c2, rt1.c4))), ABS(vt0.c2), CAST(rt1.c1 AS BLOB) COLLATE RTRIM;SELECT '' FROM rt0, vt0, rt1 GROUP BY rt0.c2; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((rt1.c3) ISNULL))) AND ((((rt1.c4) IS FALSE)))) FROM vt0, rt0 WHERE (((((NULL) BETWEEN ('') AND (NULL))) BETWEEN (((('1408719003', '21530090', x''))<(('瞻5', 0xffffffff9d150e6f, '')))) AND (((NULL) ISNULL))));SELECT DISTINCT CAST(rt1.c3 AS INTEGER) COLLATE BINARY FROM rt0, rt1 WHERE (load_extension(((((((((x'')OR('0.8522057194691613')))OR(NULL)))AND(NULL)))AND(NULL))));SELECT ALL ((CAST(rt1.c3 AS NUMERIC))<(rt0.c1)) FROM rt0, vt0 WHERE (((((((x'')=(0.6643539185970909)))AND((('-597350703') BETWEEN (0xffffffffc69b874e) AND ('')))))OR(COALESCE(NULL, NULL, NULL, '3o', '靍''\r?mt?槀', NULL))));SELECT DISTINCT ((((vt0.c2)-(rt1.c4)))<<(CAST(vt0.c0 AS BLOB))) FROM rt0, vt0, rt1 WHERE (((((0Xffffffff90532464) ISNULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT SUM((NOT (vt0.c0))) FROM vt0, rt1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((x'' COLLATE BINARY) NOTNULL) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT (((vt0.c2 IN ()))!=(((rt1.c3) NOT NULL))) FROM rt1; -- 0ms;
SELECT ALL CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c2)AND(NULL)))AND('-691253407')) END, DATE((rt1.c4 IN (rt1.c0, vt0.c2)), x'', CAST(rt0.c0 AS NUMERIC)), COUNT(vt0.c2) OVER (), (CASE WHEN rt0.c2 THEN vt0.c2 ELSE 'Y-&' END IN ()), ((rt0.c1 COLLATE NOCASE)||((rt0.c1 IN ()))) FROM rt1, vt0 WHERE (TRIM(DISTINCT (('0.45817411564278254')<=('-374343865'))));SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, rt0, vt0 LIMIT -465857315; -- 0ms;
SELECT DISTINCT 'YVK訶?pAsF', SUM(x'7dd9'), MIN(CAST(rt1.c4 AS INTEGER)) FROM rt0, vt0, rt1 WHERE ((((+ (NULL))) NOT BETWEEN ((('JC') NOT BETWEEN ('1819208945') AND (x''))) AND (((x'')<<(x''))))); -- 0ms;
SELECT (vt0.c1 COLLATE RTRIM IN ()), ((rt1.c4)LIKE(-719485770)), (0.5842750302735557 IN ()) FROM rt1, vt0, rt0 LIMIT 2131792326 OFFSET -465857315; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c0)<=(rt1.c4)) THEN 0.34025191270107347 END FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1, rt0, vt0; -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(json_quote(rt0.c0)) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL ((TOTAL(vt0.c2)) NOTNULL) FROM rt0, rt1, vt0 WHERE ((((0X758bd21b)) BETWEEN ((((0.45817411564278254) NOT NULL))) AND ((NULL COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT (('-465857315')*((NOT (rt1.c4)))), rt0.c0, GROUP_CONCAT(((vt0.c2) NOT BETWEEN (vt0.c2) AND (x''))) OVER () FROM rt1;SELECT ALL ((((rt0.c0)AND(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c0)))) FROM rt1, vt0 WHERE (((NULLIF(1463025252, 0.7540876848585848))IS(CAST(NULL AS NUMERIC))));SELECT UNLIKELY(DISTINCT ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c0))) FROM rt1, vt0;SELECT DISTINCT (((vt0.c2)) BETWEEN ((NULL)) AND ((((vt0.c0)<=(rt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt1.c0)))AND(rt1.c2)))||(rt1.c2)) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT CAST((((rt1.c1))<>(('㒳K}3'))) AS BLOB) FROM rt1 WHERE (CASE WHEN LIKELIHOOD(DISTINCT x'', 0.6559113229801117) THEN CASE 0X3e431f6b  WHEN x'cf55' THEN '' END END); -- 0ms;
SELECT NULL FROM rt0, vt0, rt1 WHERE (CAST(((NULL) IS FALSE) AS NUMERIC)); -- 0ms;
SELECT DISTINCT AVG(((NULL)<=(rt1.c0))) FROM vt0, rt0;SELECT ALL (((((((rt1.c3)OR(vt0.c0)))OR(''))))<=((rt1.c4 COLLATE RTRIM))) FROM rt1;SELECT (CAST(vt0.c0 AS INTEGER) IN ()) FROM rt1 LIMIT -938679029; -- 0ms;
SELECT DISTINCT ((((TOTAL(NULL))AND(((rt1.c4) ISNULL))))OR(((((rt1.c0)AND(0.34025191270107347)))OR(rt1.c0)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT LEAD((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((((rt1.c3)GLOB(vt0.c1)), ((vt0.c0)/(rt1.c2)), x'')) AND ((rt1.c1, CASE vt0.c0  WHEN rt1.c0 THEN vt0.c1 END, rt1.c1 COLLATE NOCASE))), CAST(CAST(NULL AS NUMERIC) AS NUMERIC), load_extension((NOT (vt0.c2)))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, rt1 WHERE (CAST((-2142341189 IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 WHEN vt0.c2 THEN rt1.c1 WHEN vt0.c2 THEN vt0.c2 END COLLATE BINARY) OVER () FROM vt0;SELECT DISTINCT (~ (((((rt1.c3)AND(rt0.c0)))OR(vt0.c2)))), (((((vt0.c0 IN (rt1.c0)))OR(CAST(x'' AS REAL))))OR((NOT (rt1.c3)))), CHAR(rt1.c2 COLLATE BINARY) FROM vt0 WHERE ((((((('&')OR(-1677252106)))OR(x'98b3')))=(CASE WHEN 0.5934918969481771 THEN 0.34025191270107347 END)));SELECT DISTINCT ((((CAST(rt0.c2 AS NUMERIC))AND((- (rt1.c4)))))AND(((vt0.c2) NOTNULL))) FROM rt1, rt0, vt0 WHERE ((NOT ((('') NOTNULL)))); -- 0ms;
SELECT DISTINCT (+ (MIN(rt1.c2))) FROM rt0 WHERE (('' IN ()) COLLATE RTRIM);SELECT DISTINCT ((CAST(rt1.c2 AS INTEGER)) IS FALSE) FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((((rt1.c2) IS FALSE))) AND ((STRFTIME(rt0.c2, rt0.c2, rt0.c0))));SELECT DISTINCT COUNT(NULL) OVER (), ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOTNULL), ((((vt0.c0)*(x'')))IS(rt1.c3)) FROM rt1 WHERE ((((+ (0.38700643393962175)))<=(UNLIKELY(0.5348425435975839))));SELECT (((CASE WHEN rt0.c1 THEN vt0.c2 ELSE vt0.c0 END))<=(((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL)))))) FROM rt1, vt0, rt0 WHERE (((((((((((0.8602012724973354)OR(NULL)))OR(x'fc07')))AND(0X6e1f8527)))AND('-448239287')))<>((NOT (0Xffffffffd51d84b6))))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c4 AS TEXT))AND((+ (rt0.c0)))) FROM rt0 WHERE (((x'7dd5')IS NOT(((x'') BETWEEN (0.3163761423718081) AND (0.7091317029018788))))) GROUP BY JULIANDAY(((vt0.c0)OR(rt1.c4)), (rt0.c0 IN ()), ((vt0.c1) NOT BETWEEN (x'') AND ('1527118614')));SELECT DISTINCT CASE (rt0.c1 IN ())  WHEN '-880346270' THEN NULLIF('1353694201', rt1.c1) ELSE (((rt1.c2))<=((rt1.c3))) END FROM vt0, rt1, rt0 LIMIT 1346565713; -- 0ms;
SELECT LIKELIHOOD(((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), 0.25173770682166874) FROM vt0, rt1;SELECT DISTINCT (- (SUM(vt0.c0))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL SUM((('1972097563') ISNULL) COLLATE BINARY) OVER () FROM vt0, rt1, rt0 WHERE (((LIKE(0.0586923389571089, '', '1'))<>((('2058201522')<=(-1105036344))))); -- 0ms;
SELECT DISTINCT (((((((rt0.c0)OR(rt1.c1)))OR(rt1.c1)), ((vt0.c2)OR(rt1.c3)), vt0.c1 COLLATE BINARY))!=(((((rt0.c0))<=((rt1.c1))), ((rt1.c3)>>(vt0.c2)), ((vt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))))), (- ('梶')), '0.5976926869897924' FROM rt0 LIMIT 309974519;SELECT DISTINCT (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((((x'')!=(vt0.c1))))) FROM rt0 FULL OUTER JOIN rt1 ON 0.12826102302283182 FULL OUTER JOIN vt0 ON ((NOT (0xffffffffa30616ca)) IN ()); -- 0ms;
SELECT ALL (CAST(vt0.c0 AS NUMERIC) IN ()), ((((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c2))) NOT NULL), (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((0.12848008638127895))) COLLATE NOCASE FROM vt0, rt1 WHERE ((((0.32522073607068336)) BETWEEN ((((x'') NOT BETWEEN ('梶O') AND ('')))) AND ((UNICODE(0.0586923389571089)))));SELECT ALL ((vt0.c0)<(rt1.c4)) COLLATE BINARY FROM vt0, rt0 WHERE (TRIM(DISTINCT CASE WHEN '409305511' THEN '1859767233' WHEN x'' THEN x'' WHEN 0.5953405798678068 THEN NULL END)) GROUP BY CAST(((rt1.c4)/(vt0.c0)) AS NUMERIC), STRFTIME(NULLIF(rt0.c1, vt0.c0), 'RMP+dp+]', (NOT (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))), ((vt0.c0)&(''))), (CASE vt0.c2  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN ((- (rt1.c2)), CAST(rt1.c0 AS REAL))), json_valid(((rt0.c2)+(rt0.c0))), (((NOT (vt0.c0)))LIKE('1463025252' COLLATE RTRIM)) LIMIT 1927902405 OFFSET -1677252106;SELECT DISTINCT rt1.c0 FROM rt0, vt0 WHERE (((((x'88e8') NOT NULL))>=((NULL IN (NULL, NULL)))));SELECT DISTINCT CASE ((vt0.c1)-(vt0.c2))  WHEN (NOT (rt0.c2)) THEN CASE WHEN NULL THEN vt0.c0 WHEN vt0.c2 THEN 0x5042f651 WHEN rt0.c2 THEN vt0.c1 END END, CASE WHEN ((rt0.c2)<>(rt1.c1)) THEN (~ (rt1.c3)) ELSE ((((rt0.c2)AND(vt0.c1)))AND(rt1.c2)) END, ((((rt1.c0)==(vt0.c0)))||(((rt1.c2)>=(rt0.c0)))) FROM rt1, vt0 WHERE (((3.09974519E8 IN ('0.5528099369071121')) IN ())) ORDER BY x'781b'  NULLS LAST;SELECT ALL ((rt1.c4)<>(NULL)) COLLATE NOCASE FROM rt1 WHERE (CASE x'2901'  WHEN '*[IOn 靍3ⶺ' THEN NULL ELSE '641179050' END COLLATE BINARY); -- 0ms;
SELECT ALL ((((vt0.c2)&(rt1.c1))) NOT BETWEEN (((((rt0.c1)AND(rt1.c0)))AND(vt0.c0))) AND ((~ (rt1.c3)))) FROM vt0;SELECT ALL (((rt0.c0 IN ())) IS FALSE), (((((rt1.c4)AND(rt1.c3)))AND(vt0.c2)) IN ()), rt1.c2 FROM rt0, rt1, vt0 WHERE (json_extract((('6v쩗')AND('4986770780021787741')), (0X72e974c5 IN ()))) ORDER BY CAST(((((((((rt0.c0)OR(vt0.c2)))AND(0.32279179335153474)))OR(rt1.c0)))OR(NULL)) AS REAL)  NULLS FIRST LIMIT 780454499;SELECT DISTINCT CAST(((vt0.c1)IS NOT(rt0.c1)) AS BLOB), CAST(((847956057) NOT NULL) AS BLOB), ((((rt1.c3 IN ()), ((rt1.c2) ISNULL), SUM(rt1.c1)))>((CASE WHEN rt0.c2 THEN vt0.c2 WHEN rt1.c3 THEN rt1.c3 WHEN vt0.c2 THEN rt0.c1 ELSE rt1.c0 END, rt0.c1 COLLATE BINARY, ((rt1.c1)+(rt1.c4))))) FROM rt1;SELECT CAST(CASE vt0.c0  WHEN x'' THEN vt0.c0 END AS NUMERIC) FROM vt0 WHERE (((((0xfffffffffd42ab0f IN (NULL, 1.47477745E9))))>=(((('<9')||(x'')))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(TYPEOF(vt0.c0)), ((CAST(rt0.c1 AS NUMERIC))<(rt1.c2 COLLATE NOCASE)), ((((CASE rt1.c4  WHEN rt1.c4 THEN rt0.c1 END)AND(vt0.c0 COLLATE RTRIM)))AND(rt0.c1)), ((CAST(rt1.c2 AS BLOB))+(((rt1.c3)LIKE(vt0.c1)))), ((vt0.c0)>(((vt0.c1) ISNULL))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((TRIM(vt0.c1, rt1.c1)) BETWEEN (MAX(rt0.c1)) AND ('1129273283')), (((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))=(((rt1.c1)%(rt1.c1)))), COUNT((+ (0.4847866154560324))) OVER () FROM rt0, rt1, vt0 WHERE ((~ ((((((((((((('824039921')AND('')))AND(0.7342200841959545)))AND('4ౝA-k ^夗%')))AND(-6.4703146E8)))AND('-374343865')))AND(0Xffffffffe0b137db))))) GROUP BY NULL; -- 1ms;
SELECT ALL AVG(CHANGES()) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL LEAD(CAST(rt1.c2 COLLATE BINARY AS NUMERIC), ((((NULL)AND(((rt1.c1)<=(rt1.c0)))))AND((((vt0.c2, rt1.c4, rt1.c1)) BETWEEN ((rt1.c3, rt0.c2, rt1.c4)) AND ((vt0.c1, vt0.c1, NULL))))), ((((rt1.c3) NOT BETWEEN (vt0.c2) AND (vt0.c1))) NOTNULL)) OVER (), rt1.c4, ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND ((~ (rt1.c1)))) FROM rt1, vt0, rt0 ORDER BY (((+ (rt0.c2))) ISNULL) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC)) NOT NULL) FROM rt1, vt0 NOT INDEXED, rt0 WHERE ((NOT ((+ (''))))); -- 0ms;
SELECT ALL ((vt0.c1 IN ()) IN (rt1.c1)), CASE WHEN (+ (rt1.c3)) THEN AVG(rt1.c0) ELSE ((rt1.c2)OR(rt1.c2)) END, ((((0.6602176921882615, rt1.c1, vt0.c1)) NOT BETWEEN ((NULL, x'', vt0.c1)) AND ((rt1.c3, NULL, vt0.c1))) IN ()) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c2))), LOWER(DISTINCT rt1.c1), AVG(rt1.c4)))!=(((((rt1.c3)) BETWEEN ((vt0.c2)) AND ((rt1.c0))), (((vt0.c1, rt1.c2, -5.25256741E8))>=((x'328d', 0.4260370840063955, vt0.c1))), 0.9173474257290581))), CAST(CAST(x'eb68e3d5' AS REAL) AS REAL), (('iEﭢx' COLLATE NOCASE)<=(((rt1.c1)IS NOT(rt0.c2)))) FROM rt1, vt0 WHERE (((('-2142341189', NULL, NULL)) NOT BETWEEN (((('-1965531644')*(x'')), ((0.7616208816090921)AND(x'')), (('-1133978398')GLOB(x'')))) AND ((((('')) BETWEEN ((0.5468964717859831)) AND ((0.21475244924905468))), ((((x'')AND('309974519')))AND(0.3376820638180775)), -1.20101454E8 COLLATE BINARY))));SELECT DISTINCT (((rt0.c2 IN ()))>((+ (x'6ac4')))) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(COUNT(((rt1.c1)LIKE(rt1.c1)))) FROM vt0, rt1, rt0 WHERE (CAST((((474591200, NULL, NULL))>=((x'', -7.25653056E8, 'u,'))) AS INTEGER));SELECT ((rt1.c2) IS TRUE) COLLATE NOCASE, TOTAL(((rt1.c4) NOTNULL)) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), (+ (MAX('^->%9v*墛'))) FROM rt0, rt1 ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN (x'') AND ((((rt1.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((vt0.c2, rt0.c1, -1606880231))))) DESC  NULLS LAST;SELECT ALL CASE rt0.c0  WHEN (((0x328ac859, rt1.c4, rt1.c3)) NOT BETWEEN ((x'', rt1.c1, vt0.c0)) AND ((vt0.c1, rt0.c2, rt0.c2))) THEN rt1.c2 COLLATE RTRIM WHEN AVG(vt0.c2) THEN (- (vt0.c0)) WHEN ((rt1.c0) IS FALSE) THEN CAST(rt1.c0 AS INTEGER) ELSE rt1.c1 COLLATE BINARY END, CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC), x'' FROM rt1, vt0 WHERE (((('~c,' IN ('2058201522')))<=(((NULL)||(0.7255196848618425))))) UNION SELECT TOTAL((~ (rt1.c0))), ((((0.9463554268578424) NOT BETWEEN (vt0.c1) AND (rt1.c4))) BETWEEN (GROUP_CONCAT('641179050')) AND (CAST(rt1.c4 AS REAL))), (((rt1.c2 IN ())) IS TRUE) FROM vt0, rt1;SELECT DISTINCT (((((((((rt1.c3 IN (vt0.c2)))AND(vt0.c1 COLLATE NOCASE)))AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(((rt1.c0)+('')))))AND(((NULL) BETWEEN (rt1.c2) AND (rt1.c2)))) FROM rt0 WHERE ((((NULL IN (0X50203935)))-(((((((((((((x'5306')AND(x'')))OR(x'f6fd')))AND(0.5888121976504311)))AND(NULL)))OR(0.6715393629804628)))AND('#9B'))))) ORDER BY '2058201522' COLLATE RTRIM, (((((rt1.c4)<=(rt1.c2))))!=(((- (rt0.c0))))) ASC;SELECT ((((rt1.c2)GLOB(rt0.c1)))AND((+ (rt1.c0)))), (NOT ((~ (0.33511077770745834)))), LAST_VALUE(((((rt1.c2) IS FALSE))<((('793914128')<>(rt1.c2))))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt1 LIMIT 1927902405;SELECT DISTINCT CAST(rt0.c0 AS INTEGER) COLLATE NOCASE, ((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)) COLLATE BINARY, ((COUNT(*))>=(TYPEOF(DISTINCT rt1.c0))) FROM vt0, rt0 WHERE ((((((- ('')))OR(((x'7ff5') ISNULL))))OR(((('篈RT-\rw')) NOT BETWEEN (('Qr-YP')) AND (('-1677252106'))))));SELECT DISTINCT ((((((((((0.40269232271683075)LIKE(vt0.c0)))OR(CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt0.c2 END)))OR((((rt1.c2))<((vt0.c1))))))OR(((((rt1.c0)OR(rt1.c3)))AND(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c1)))), CASE WHEN CASE rt1.c2  WHEN vt0.c2 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c3 END THEN CAST(rt0.c2 AS REAL) WHEN rt0.c1 COLLATE RTRIM THEN ((vt0.c1)>>(rt1.c3)) WHEN (rt1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt0.c0)) END, NULL FROM rt1, vt0 WHERE (CAST(CASE WHEN 0.33511077770745834 THEN 0X77c4070c ELSE 0.17029649160340465 END AS BLOB)) GROUP BY ((vt0.c1 IN (rt1.c0, rt1.c2)) IN (((rt1.c3)/(vt0.c2)), 1.223949473E9)), ((rt1.c3 COLLATE RTRIM) BETWEEN (((((vt0.c2)AND(vt0.c2)))OR(vt0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END)), '-813552949' COLLATE BINARY HAVING (- (NULL));SELECT DISTINCT ((((((vt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c2)))OR(((rt1.c2)<<(rt1.c2)))))AND((vt0.c0 IN (rt1.c2)))), DENSE_RANK() OVER ( ORDER BY (((vt0.c1) BETWEEN (rt1.c3) AND (rt1.c1)) IN ())  NULLS FIRST RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), (((rt1.c0)) BETWEEN ((x'')) AND ((((rt0.c0)>>(vt0.c1))))), NULL, ((((((((('-508537896')AND(vt0.c2)))OR(rt1.c4)))AND(rt1.c0)))OR(rt0.c1)) IN ()) FROM vt0 WHERE (CASE CAST(x'75ce' AS INTEGER)  WHEN ((NULL) NOT BETWEEN (NULL) AND (x'1bcd')) THEN ((1.353694201E9)<<(0x4127f09d)) WHEN ((0.19026319805387903)<(2009335564)) THEN LIKELY(0.9292639652107909) WHEN ((('mlixwB'))=((x''))) THEN (- (NULL)) ELSE ((('')) NOT BETWEEN ((NULL)) AND ((NULL))) END) GROUP BY (((((+ (rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(vt0.c1)), vt0.c0, ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (CAST(rt1.c4 AS TEXT))), GLOB(((rt1.c4)<(rt1.c4)), x''), CASE (((rt0.c1))>((rt1.c2)))  WHEN ((((rt1.c1)AND(rt0.c1)))AND(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END HAVING ((rt1.c4)|(vt0.c2)) COLLATE RTRIM;SELECT (((rt1.c4)<=(rt0.c1)) IN ()), CAST(((1.044586347E9)LIKE(vt0.c0)) AS NUMERIC), AVG(MAX(((x'')<(rt0.c0)))), TOTAL((((rt0.c0))=((rt1.c0))) COLLATE RTRIM) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), (((((rt0.c0 IN ()))OR((- (rt1.c3)))))OR((~ (rt0.c0)))) FROM vt0 WHERE ((((((x'17fe' IN ()))AND((x'' IN (NULL)))))OR(((0.40771482141139226)IS('')))));SELECT rt1.c4 FROM vt0 WHERE (((CAST('-1873599388' AS REAL)) BETWEEN (((0.2589646444604933) IS TRUE)) AND (((NULL) NOT NULL))));SELECT json_patch(rt1.c2, rt0.c0) COLLATE BINARY FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0)))), ((((x'd3d2' IN (0.4612985828233137))))=((CAST(vt0.c0 AS INTEGER)))), PERCENT_RANK() OVER () FROM vt0 WHERE (CAST(('' IN ()) AS INTEGER));SELECT DISTINCT 0.9538281480193478, ((((((vt0.c2)!=(rt0.c0)))AND((((rt0.c1, '\n๯', rt0.c1, rt1.c4, NULL))<((0.07382614004831134, rt0.c0, rt0.c2, rt1.c3, vt0.c2))))))OR((vt0.c0 IN (rt1.c4)))), COUNT(((rt0.c2) ISNULL)) OVER () FROM rt1, rt0, vt0 LIMIT -1887764429; -- 1ms;
SELECT CAST(CASE rt1.c4  WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c4 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c1 ELSE '' END AS BLOB), ((vt0.c1) IS TRUE), (~ ((x'' IN ()))) FROM vt0;SELECT DISTINCT (((vt0.c2)) BETWEEN ((((rt1.c0)|(x'c7d2')))) AND ((((rt0.c2)>=(rt0.c0))))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT CAST(824039921 AS TEXT) FROM rt0, rt1, vt0; -- 0ms;
SELECT ((CAST(vt0.c2 AS INTEGER))||(((rt1.c4)IS NOT(rt1.c2)))) FROM rt0, rt1, vt0 LIMIT 1129273283; -- 0ms;
SELECT ALL UNLIKELY(CAST(rt1.c0 AS TEXT)) FROM vt0 WHERE (CAST((('ౝnH䙞') IS FALSE) AS NUMERIC)) LIMIT 1833046879 OFFSET -282114466 INTERSECT SELECT ALL ((JULIANDAY(rt0.c2, NULL, vt0.c0)) BETWEEN ((((rt1.c2, rt0.c2, rt1.c4, rt0.c1, rt1.c4))>=((rt1.c3, rt1.c0, rt1.c1, vt0.c2, rt1.c0)))) AND (1397973873)) FROM rt1, vt0, rt0 GROUP BY LIKELY(DISTINCT (~ (vt0.c1))) LIMIT 1242210032;SELECT CASE ((rt1.c0)>=(rt1.c3))  WHEN '' THEN rt0.c2 COLLATE BINARY END FROM rt1, vt0;SELECT ALL COUNT(CHAR(vt0.c0)) OVER () FROM vt0, rt0, rt1 NOT INDEXED WHERE ((((+ (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((AVG(rt0.c0))AND(((vt0.c0)AND(rt1.c4)))))AND(CAST(rt0.c0 AS REAL))) FROM vt0 WHERE (CAST('<P' AS NUMERIC)) ORDER BY ((((vt0.c0)IS NOT(rt0.c2))) BETWEEN (((vt0.c2) BETWEEN (rt1.c0) AND (rt0.c1))) AND (((rt0.c1)IS(rt0.c0))))  NULLS FIRST;SELECT DISTINCT ((((0.453501446811133)>=(vt0.c2)))<=(CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) FROM rt1;SELECT DISTINCT ((((((vt0.c0)OR(rt1.c3)))AND(vt0.c1)))GLOB(vt0.c2 COLLATE RTRIM)), (((rt0.c1 IN ()))IS(((rt0.c0)<=(rt1.c0)))), (((NULL COLLATE NOCASE, ((rt1.c0) BETWEEN (vt0.c2) AND (rt1.c3)), load_extension(vt0.c0)))<=((((((rt1.c0)AND(rt0.c0)))AND(rt1.c1)), x'b78a' COLLATE BINARY, (vt0.c1 IN ())))) FROM vt0, rt1;SELECT (((rt1.c2)) NOT BETWEEN ((((((((((vt0.c2)AND(rt1.c3)))AND('\mWVS2퉢4e')))OR(rt0.c2)))AND(rt1.c4)))) AND ((((rt0.c2)==(rt1.c2))))) FROM vt0, rt0, rt1 WHERE (((('xp')) BETWEEN ((((('-1110402233')) NOT BETWEEN ((0.21523393912433053)) AND ((''))))) AND (((((('*㞨')AND(0.8673034509713935)))AND(0.4448234113277144)))))) ORDER BY 0.973336988301602 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(((((vt0.c1)OR(rt1.c1)))AND(rt0.c0))) OVER () FROM rt1;SELECT ALL ((UNICODE(474591200))=(rt1.c4)) FROM vt0, rt0 LIMIT 309974519;SELECT 'a<' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt0.c2 THEN rt1.c1 END THEN rt1.c0 COLLATE BINARY END FROM rt0;SELECT (((-1.659564433E9)-(vt0.c2)) IN ()), ((rtreenode(x'd5a96716', rt1.c2))+(((vt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))), ((((((((((vt0.c1)LIKE(rt0.c2)))OR(rt1.c2)))OR((+ (rt1.c4)))))AND(TOTAL(rt1.c1))))OR(((x'') NOTNULL))) FROM rt1 ORDER BY x'f8f6449a'  NULLS FIRST;SELECT DISTINCT (((- (''))) ISNULL), x'2cbf', ((((rt0.c1) BETWEEN (x'') AND (vt0.c1)))>>(CAST(rt1.c3 AS REAL))) FROM rt1 WHERE (((((((((((('2136457393', '-374343865', '-1350639942')) BETWEEN ((NULL, 0.3455774723033539, 'gcXn')) AND ((NULL, -1659564433, 0x14885ea))))OR(('mlixwB' IN ()))))OR((((((((('-1969186995')AND(NULL)))OR('4%')))OR('靍''\r?MT?槀')))OR(x'')))))AND(0Xffffffff820d305c COLLATE NOCASE)))AND(IFNULL(DISTINCT x'2c23', NULL))));SELECT DISTINCT vt0.c2 FROM vt0, rt1 WHERE (((((0.9268531077150537) NOT NULL)) NOTNULL)); -- 0ms;
SELECT ((((vt0.c0)>>(rt1.c2))) NOT NULL) FROM rt1, rt0;SELECT DISTINCT rt1.c3, (+ (((((((((vt0.c2)OR(rt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(rt0.c0)))), (('&') NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM)) FROM vt0, rt0, rt1 WHERE (TYPEOF(((('4726106'))>=((x'3fbd'))))); -- 0ms;
SELECT COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0, rt1; -- 0ms;
SELECT ((rt1.c0)LIKE(NULL)), CAST(vt0.c1 AS REAL), (((((rt1.c4))<=((rt1.c0)))) NOT BETWEEN (((rt1.c0)-(rt0.c2))) AND (((vt0.c1) NOTNULL))) FROM rt1, rt0 INTERSECT SELECT DISTINCT (((rt1.c3)) NOT BETWEEN (((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((vt0.c0))))) AND ((((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c2))))), SUM(((((rt1.c0)OR(rt0.c2)))AND(rt1.c2))), ((((rt1.c0)>(x'')))>>(x'4ccc')) FROM rt1, vt0;SELECT rt1.c3 FROM rt0 WHERE (json_array_length(CAST(x'' AS BLOB), ((2.136457393E9)==(x'bfcc'))));SELECT (((((rt1.c1, rt1.c0, vt0.c0))>((rt1.c0, rt1.c4, vt0.c2)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1))) AND (((rt0.c0) NOTNULL))) FROM rt1, vt0 WHERE ((((NULL, x'66cc', x'605b')) BETWEEN ((CAST('pS' AS BLOB), (NULL IN ()), CASE WHEN 0Xfffffffff5186c6a THEN NULL ELSE '' END)) AND (((((0.7581749486417904))>((x''))), ((NULL)LIKE(0.9960304003115638)), CASE WHEN '0.3455774723033539' THEN NULL END))));SELECT DISTINCT ((((((rt1.c0)GLOB(rt0.c1)))OR(((rt0.c0) NOTNULL))))OR((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))) FROM rt1, rt0, vt0 WHERE (((((((x'', NULL, 1087264952)) NOT BETWEEN ((0Xffffffffd4bf69c0, x'', 0.17618832980160481)) AND ((1.47477745E9, 0.827324080230489, -9.38679029E8)))))<=((((0.34025191270107347)<(NULL)))))); -- 0ms;
SELECT ALL TOTAL((((vt0.c1)) NOT BETWEEN ((rt1.c4)) AND ((vt0.c1)))) OVER () FROM rt1 WHERE ((((((('-592172355')GLOB('')))OR(CAST(x'' AS REAL))))OR((('0.7342272499324978') BETWEEN (NULL) AND (NULL)))));SELECT DISTINCT ((x'')AND(CAST(rt0.c0 AS REAL))), CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c0)) THEN rt0.c2 ELSE CASE WHEN rt1.c3 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c3 THEN NULL WHEN rt0.c2 THEN vt0.c1 END END, rt1.c1 FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL (((rt1.c2, x'', vt0.c0)) NOT BETWEEN ((((rt0.c1)%(rt1.c2)), COUNT(*), rt1.c3)) AND ((COUNT(*), MAX(rt1.c1), CASE WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c3 END))) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)AND(rt1.c0)))AND(vt0.c1)) COLLATE RTRIM WHERE ((((NULL IN ())) NOT BETWEEN (((x'')<=(''))) AND (((0.7677252307242515)OR(-949552156)))));SELECT DISTINCT ((((rt0.c2)%(x''))) NOTNULL), CAST(CASE WHEN rt1.c1 THEN rt1.c1 WHEN NULL THEN rt1.c2 WHEN NULL THEN rt0.c2 END AS INTEGER), (((vt0.c2, rt1.c0, rt0.c1, vt0.c2, rt1.c4)) BETWEEN ((LIKELIHOOD(DISTINCT rt1.c2, 0.9108001985465126), ((vt0.c1) NOT NULL), json_array(vt0.c2, vt0.c0), vt0.c0 COLLATE BINARY, ((rt1.c3) IS TRUE))) AND (((+ (rt1.c1)), ((rt0.c1)!=(rt0.c2)), rt1.c2 COLLATE NOCASE, LIKE(rt1.c0, rt1.c1), (('/9都%\1g')&(vt0.c1))))) FROM vt0 WHERE (LOWER(DISTINCT (((NULL))!=(('-448239287')))));SELECT ALL ((((rt1.c4 COLLATE RTRIM)AND((((rt1.c3))!=((rt0.c0))))))OR(UPPER(DISTINCT rt1.c3))) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL CAST(((('-465857315', vt0.c1, rt1.c2))!=((rt1.c2, vt0.c0, rt0.c1))) AS TEXT), vt0.c0, (MAX(rt1.c2) IN (MIN(rt1.c1))) FROM rt1, vt0 INNER JOIN rt0 ON ((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)) COLLATE NOCASE GROUP BY TYPEOF(rt1.c4) COLLATE RTRIM, 0.6204334704912526, (NOT ((~ (rt1.c0)))) HAVING ((TRIM(DISTINCT rt1.c2, rt0.c2)) NOT BETWEEN ((~ (rt0.c0))) AND (json_type(rt1.c1))); -- 1ms;
SELECT (((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((((rt0.c2) IS TRUE)))) FROM rt0, rt1, vt0 WHERE ((- (0.5518560000801758)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c0)<<('퍞D3c\n1X.'))) NOT BETWEEN (((rt0.c2)<=(NULL))) AND (vt0.c2 COLLATE NOCASE)) FROM rt0;SELECT ((CASE rt1.c3  WHEN rt1.c3 THEN rt1.c4 END)<>(TIME(vt0.c2, rt1.c0, rt1.c0))) FROM vt0, rt0, rt1; -- 0ms;
SELECT ((((vt0.c2 IN ())))>=((x'482c'))) FROM rt1, vt0, rt0 WHERE ((NOT (ABS(x'')))) GROUP BY (- ((NOT (rt1.c3)))); -- 1ms;
SELECT ((((rt1.c2)OR(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))))OR(CAST(rt0.c2 AS INTEGER))) FROM vt0, rt1 WHERE ((((NULL) BETWEEN (0.8854398138058232) AND (0.02515828835285827)) IN ((('-719485770')<=('-45962481')), ('' IN (0x1a38e563))))) ORDER BY CASE (- (rt1.c1))  WHEN ((((rt1.c4)AND(rt0.c2)))AND(rt0.c1)) THEN (rt1.c0 IN ()) ELSE rt0.c0 END;SELECT DISTINCT ((CAST(rt1.c1 AS TEXT))GLOB(((NULL) NOT NULL))) FROM vt0, rt0 LIMIT -1350639942 OFFSET 1474777450;SELECT DISTINCT (((NOT (vt0.c0))) BETWEEN (((rt1.c4)GLOB(rt0.c1))) AND (0.5468964717859831)), (COUNT(rt0.c2) IN ()), (((rt1.c1)IS NOT(x'')) IN ()) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL ((UNLIKELY(vt0.c1)) NOT BETWEEN (((vt0.c0)OR(rt0.c0))) AND (((vt0.c1)OR(rt1.c3)))) FROM rt1, rt0, vt0; -- 0ms;
SELECT NULLIF(DISTINCT (((rt1.c2))<((rt0.c2))), (((vt0.c2, vt0.c1, vt0.c1))<=((vt0.c1, vt0.c2, rt1.c0)))) FROM vt0, rt1 WHERE (((((0.9665564109659124) NOT BETWEEN ('^A') AND (NULL))) IS TRUE));SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE ((((((((('1825934536' COLLATE NOCASE)AND((NOT ('')))))OR(((0.861690510605113) NOT BETWEEN (0X2b65144d) AND ('M~')))))OR(((x'0085')>(NULL)))))AND(0x6c6eecf1))); -- 0ms;
SELECT DISTINCT (((vt0.c2, NULL, 0.06635242758138238)) BETWEEN (('', vt0.c1 COLLATE BINARY, ((((rt1.c4)OR(rt1.c3)))OR(0xac034b3)))) AND ((rt1.c4 COLLATE RTRIM, ((((((((rt0.c1)OR(rt0.c2)))OR(rt1.c4)))OR(rt0.c0)))AND(rt0.c0)), ((rt1.c2) BETWEEN (vt0.c2) AND (x''))))), vt0.c1, ((('-592918616')) BETWEEN ((MAX(vt0.c2))) AND (((rt1.c2 IN (rt1.c1))))) FROM rt1, vt0 GROUP BY CASE WHEN (NOT (rt1.c2)) THEN rt1.c4 ELSE ((rt0.c0) NOT NULL) END HAVING ((rt0.c2 COLLATE BINARY) ISNULL);SELECT DISTINCT COUNT(*), (((((rt1.c3))==((rt1.c1))))<(NULL)), (- (((rt1.c2) BETWEEN (NULL) AND (rt1.c4)))), ((((((((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c0)))OR(SUM(rt0.c1))))AND('1229664879')))AND((NOT (rt0.c2)))))AND(((NULL)<=(rt0.c0)))), COUNT(CAST(vt0.c0 AS REAL)) OVER () FROM rt0, vt0, rt1 WHERE (((((((((((1967935209)AND(0.8413184986488368)))AND('n.')))AND('-494263199')))AND(')藪'))) NOTNULL)); -- 0ms;
SELECT ALL CASE WHEN (((rt1.c2, vt0.c2, rt1.c1)) BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((rt0.c2, rt1.c0, rt1.c0))) THEN '' END, CASE WHEN (((rt1.c4))=((vt0.c1))) THEN rt1.c1 COLLATE NOCASE END, (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c1))) COLLATE BINARY FROM vt0 WHERE (CASE (((((((('-98686181')AND(NULL)))OR(-962885810)))OR(-592172355)))AND(0.4847866154560324))  WHEN ((-1.659564433E9)LIKE(NULL)) THEN (((('-1214241900')OR('1076506042')))AND('y昣_#yj\n[\r')) ELSE (((NULL)) NOT BETWEEN ((x'')) AND ((0.9507039550306176))) END);SELECT ALL ((((((((((((vt0.c2)AND(rt1.c3)))AND(rt0.c1)))OR(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c0 END)))AND(((((((((0X7f1091c6)AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(vt0.c1)))))AND((vt0.c0 IN (rt1.c3)))))OR((- (rt1.c4)))), (~ (rt1.c2)), RANK() OVER () FROM vt0, rt1, rt0 WHERE (CAST(((NULL)<(x'e9585ce0')) AS INTEGER)) GROUP BY (~ (((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)))) HAVING ((rt0.c0) IS TRUE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((rt1.c3) IS TRUE) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) COLLATE NOCASE FROM rt0, rt1 NOT INDEXED WHERE (CASE WHEN ((('')) NOT BETWEEN ((NULL)) AND ((0.2585077865482551))) THEN (('-1559882038') ISNULL) ELSE '-494263199' COLLATE RTRIM END);SELECT DISTINCT (+ (((((rt1.c0)AND(rt0.c1)))OR(rt0.c0)))) FROM rt0, vt0 WHERE (((((((0x1c14797)AND('OP^YDr7')))AND(0.7557032121711095)))%(UNLIKELY(0.8602012724973354)))) GROUP BY ((CAST(rt0.c2 AS BLOB))+(((0x59727753)LIKE(NULL)))), (((+ (rt0.c0))) IS TRUE), vt0.c0 HAVING ((((((rt1.c4)AND(vt0.c2)))AND(rt1.c2)))==(rt0.c2)) LIMIT 1279108941;SELECT DISTINCT ((CAST(rt1.c2 AS BLOB))&((~ (rt0.c0)))) FROM vt0, rt1 WHERE (0.23700300601161295);SELECT ALL (~ (((((rt1.c2)OR(vt0.c2)))AND(rt0.c2)))), (('-374343865')LIKE(vt0.c1 COLLATE BINARY)), ABS(DISTINCT (((rt1.c0))==((vt0.c0)))) FROM vt0, rt0 GROUP BY vt0.c0, ((((((((((rt1.c0)OR(rt0.c0)))OR(vt0.c2)))AND(NULL)))AND(rt0.c1)))&((('')LIKE('')))), x'', rt1.c1, CASE WHEN rt0.c2 THEN (((rt1.c1))<((vt0.c0))) ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))) END LIMIT -458567043;SELECT ALL CASE WHEN ((rt0.c0) IS TRUE) THEN (NOT (rt1.c1)) WHEN vt0.c2 THEN rt1.c0 COLLATE BINARY WHEN NULLIF(vt0.c2, rt1.c4) THEN MIN(rt0.c2) ELSE ((vt0.c1)<<(rt1.c4)) END FROM rt1, vt0;SELECT CAST(0.8771348046715584 AS REAL) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 END AS NUMERIC) FROM rt1, rt0 WHERE (CASE WHEN ((x'')+(NULL)) THEN (((('780454499')OR(NULL)))OR(NULL)) END) GROUP BY CAST(((rt1.c0)|(rt1.c0)) AS INTEGER), (((('RoA>') NOTNULL))&((((rt0.c1))==((rt1.c3))))), (((rt1.c1)) BETWEEN ((((vt0.c0)AND(rt1.c4)))) AND ((CAST(rt1.c2 AS REAL))));SELECT ALL ((rt1.c3 COLLATE NOCASE) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (TRIM(DISTINCT vt0.c2, rt1.c0))) FROM rt1 ORDER BY CAST(((rt1.c0)GLOB(rt1.c1)) AS BLOB) ASC  NULLS FIRST;SELECT UPPER((NOT (rt1.c2))) FROM rt0, rt1 WHERE (((']c㞨?埃	' COLLATE BINARY)>=(CAST('-1300989355' AS TEXT)))) GROUP BY (((((NOT (rt1.c3)))AND(rt0.c0)))OR(((vt0.c2) BETWEEN (rt1.c4) AND (rt1.c1))));SELECT ALL (- (rt0.c0 COLLATE RTRIM)) FROM rt1, vt0 WHERE (CASE WHEN (x'1be0' IN ('192478025', '')) THEN (('768971005')>('')) ELSE CAST(x'' AS NUMERIC) END);SELECT DISTINCT ((TRIM(vt0.c1, vt0.c0))<(((rt1.c2)%(rt1.c0)))), CAST(((rt1.c2) NOTNULL) AS REAL), COUNT(*) FROM rt0;SELECT ALL ((rt1.c2) ISNULL) COLLATE NOCASE FROM rt1, rt0 LIMIT 1279108941; -- 0ms;
SELECT ((((x'' IN ())))<((CAST(rt1.c2 AS NUMERIC)))), COUNT(((vt0.c2) NOTNULL)), SQLITE_VERSION() FROM rt0, vt0 LIMIT -691253407 OFFSET -508537896;SELECT ALL CAST((+ (NULL)) AS BLOB) FROM rt1; -- 0ms;
SELECT DISTINCT (((NULL, rt1.c2, vt0.c1)) NOT BETWEEN ((((vt0.c1)&(rt1.c2)), CAST(NULL AS NUMERIC), ((NULL)GLOB(rt1.c3)))) AND (((((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c2))), (+ (vt0.c2)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c2 END))) FROM rt0, vt0 WHERE ((- (CASE NULL  WHEN '-1365904631' THEN 0.25126054643164075 WHEN '1553864770' THEN '' WHEN x'3e11' THEN NULL END)));SELECT DISTINCT (((- (rt1.c4))) NOT BETWEEN (((rt1.c2)<=(rt1.c1))) AND ((+ (rt1.c1)))), ((rt1.c4) BETWEEN (TYPEOF(vt0.c2)) AND (((((rt1.c2)AND(rt1.c3)))AND(8.24039921E8)))), COUNT(((rt0.c1) IS FALSE)) OVER () FROM vt0 WHERE (((-1969186995)OR((((NULL)) NOT BETWEEN ((x'')) AND ((0X1041f377)))))) LIMIT -755845838 OFFSET -2032535573;SELECT (COUNT(rt1.c2) IN ()) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c2 COLLATE BINARY, CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, ((((rt0.c1)OR(rt1.c2)))OR(rt1.c1)), (((492130974, rt1.c4, NULL)) NOT BETWEEN ((vt0.c1, rt1.c0, rt0.c1)) AND ((rt1.c0, rt1.c0, rt1.c3))), ((vt0.c1)AND(NULL))))>((((rt0.c2) ISNULL), (NOT (rt0.c0)), AVG(rt0.c1), COUNT(vt0.c2), ((vt0.c1)AND(vt0.c0))))) FROM rt0, vt0, rt1 WHERE (UNLIKELY((0.3146750755774427 IN (NULL)))); -- 0ms;
SELECT ((((vt0.c1) ISNULL)) BETWEEN ((((rt1.c3)) BETWEEN ((0.006260635084864186)) AND ((rt1.c1)))) AND (TRIM(rt0.c1, rt0.c2))) FROM vt0, rt0 WHERE (((CAST(0X2b1db1a9 AS INTEGER)) NOT BETWEEN ((((x'61e0b114'))>=((-1735077872)))) AND (json_patch(0.12386873692326106, x''))));SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 GROUP BY -1515518232, TRIM(rt1.c1), (+ (((vt0.c2)/(rt1.c4)))), ((('-592918616' IN (rt1.c3)))LIKE(((rt1.c4) IS TRUE))), ((((rt1.c4)GLOB(rt1.c0)))-((- (rt0.c1))));SELECT CASE WHEN (+ (vt0.c2)) THEN CASE rt1.c2  WHEN vt0.c1 THEN vt0.c2 END END, (+ (MIN(rt1.c2))), NULL FROM rt0, vt0 WHERE ((+ (((x'') NOT BETWEEN (0.8196658656217317) AND ('566210228')))));SELECT DISTINCT ((((COUNT(rt1.c2))OR(((rt1.c2)AND(rt1.c0)))))AND(CASE WHEN 0x5e17d3fb THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c1 THEN rt1.c4 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN '^1^' END)), (NOT (((vt0.c2)-(rt1.c2)))), ((DATETIME(vt0.c0, vt0.c0, rt1.c1, 0x7d7021cb, vt0.c2)) BETWEEN (((vt0.c1)GLOB(NULL))) AND (((rt1.c1) NOT NULL))) FROM rt1, vt0, rt0 WHERE (((((0.5746008551030041)IS NOT(0.49750619649623384))) BETWEEN (UPPER('')) AND ((~ (0.514328685555784))))); -- 1ms;
SELECT ROW_NUMBER() OVER (), ((CAST(rt0.c1 AS BLOB))>(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c1 END)), (((rt1.c0))<=((vt0.c1))) COLLATE NOCASE, (((rt1.c2)) BETWEEN ((NULL)) AND (((('g') IS FALSE)))), highlight(IFNULL(rt1.c4, x''), ((rt1.c1)IS NOT(rt0.c1)), ((rt0.c1) IS TRUE), CASE WHEN vt0.c1 THEN rt0.c0 ELSE rt1.c0 END), MIN(COALESCE(rt1.c3, rt1.c1, rt1.c0, rt1.c3)), AVG(CAST(rt1.c2 AS INTEGER) COLLATE RTRIM) FROM rt1 WHERE ((((+ (0.4125469728522019)))GLOB(CAST(907337334 AS BLOB)))) GROUP BY ((rt1.c3)IS NOT(rt1.c1)) COLLATE BINARY HAVING CASE WHEN rt1.c4 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c4 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c2 END COLLATE RTRIM;SELECT DISTINCT ((rt1.c1 COLLATE BINARY)&(rt1.c4)) FROM rt1, rt0 WHERE ((((((0.9173474257290581)IS NOT(1774349349))))<(((((x''))>((0.19026319805387903))))))); -- 0ms;
SELECT ALL (((0.7592412876016053 IN ())) ISNULL) FROM rt1, vt0, rt0 WHERE (((((((x'48a3')AND('-95423917')))OR('-465857315'))) BETWEEN (0Xffffffff9521ad8c COLLATE BINARY) AND (((((((((']B{cA95')AND(0.06670223771032024)))AND('.7(')))OR(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT (((- (rt0.c1))) BETWEEN (((rt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) AND (((((((((rt1.c2)OR(rt1.c1)))AND(vt0.c2)))AND(rt1.c3)))OR(rt1.c0)))) FROM rt1 WHERE ((((((x'')-('VoV'))))<=((CAST('' AS REAL)))));SELECT ((NULL) NOTNULL) FROM rt1, vt0 WHERE (CAST(('夗x' IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((rt0.c0)=(rt1.c4))) ISNULL), ((((((((((((((0.9257576143239055) NOT NULL))AND(vt0.c1)))AND(CASE WHEN rt1.c0 THEN rt0.c1 ELSE vt0.c1 END)))OR((NOT (rt1.c4)))))AND(rt1.c4 COLLATE BINARY)))OR((rt0.c0 IN ()))))OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM rt1 WHERE ((((x'')) BETWEEN ((TRIM(DISTINCT 0.4469921910778113, NULL))) AND ((('' IN ())))));SELECT ((CASE rt0.c1  WHEN rt0.c1 THEN rt1.c0 END) NOT NULL) FROM rt0, rt1 WHERE (((((((0.6519119588157503)>=(x'')))OR((('1712118563') NOT BETWEEN (0.3146750755774427) AND (0.6261943477670733)))))OR(((x'')<(NULL))))); -- 0ms;
SELECT ALL ABS(DISTINCT (rt1.c0 IN ())) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c3)&(rt0.c1))) OVER () FROM rt0, rt1, vt0 GROUP BY SQLITE_COMPILEOPTION_USED(((((((((rt1.c0)AND(rt0.c1)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c0))) HAVING ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS TRUE) LIMIT 146975480 OFFSET 1353694201; -- 1ms;
SELECT (+ (((rt0.c1)+(rt1.c2)))) FROM vt0, rt0 WHERE (((STRFTIME('793914128', '-425569499', NULL, 0.9507039550306176, '1229664879')) NOT NULL));SELECT DISTINCT COUNT(rt0.c0) FROM vt0, rt0, rt1 WHERE (CAST(0x0 COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT rt0.c0 COLLATE RTRIM COLLATE BINARY FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT rt1.c1 FROM vt0;SELECT ALL (MAX(NULL) IN (0.4260370840063955)), ((((vt0.c0) IS FALSE))IS((((rt1.c3))<=((rt1.c3))))), ROW_NUMBER() OVER ( ORDER BY (((((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c1))))<=((x'6750'))) ASC  NULLS FIRST, (~ (vt0.c1))  NULLS LAST) FROM rt1;SELECT DISTINCT (((rt1.c2)<<(rt0.c0)) IN ((+ (vt0.c1)))) FROM rt1, vt0, rt0; -- 0ms;
SELECT ((MIN(rt1.c4)) NOT BETWEEN (rt1.c1) AND (0.04816579196060711)) FROM rt0 WHERE ((~ (((NULL) NOTNULL))));SELECT (vt0.c0 IN ()) COLLATE RTRIM, SQLITE_COMPILEOPTION_GET(((((((((rt1.c4)OR(rt0.c0)))OR(vt0.c1)))OR(x'')))AND(rt1.c4))), GROUP_CONCAT(((vt0.c1)<>(NULL))) FILTER(WHERE (- (vt0.c1 COLLATE RTRIM))) OVER () FROM vt0;SELECT ALL 'a<S.\y' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((- (rt0.c2)) IN ()), COUNT(*) OVER (), ((SUBSTR(rt1.c1, vt0.c1))!=((((vt0.c0, rt0.c0, rt0.c0)) BETWEEN ((vt0.c2, rt0.c1, rt1.c2)) AND ((rt0.c1, rt1.c3, rt1.c0))))) FROM rt1, vt0, rt0 LIMIT 2136457393 OFFSET 1093136541; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS REAL), x'', (((rt1.c1))<((rt1.c0)))))<=((ABS(rt0.c1), (+ (rt1.c4)), rt0.c0))) FROM rt0, rt1 WHERE ('Nyq[') ORDER BY ((CAST(vt0.c1 AS REAL)) IS FALSE) DESC;SELECT DISTINCT ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (((vt0.c0)<=(rt0.c2))) AND ('948454850')), NULL, ((rtreenode(rt1.c0, vt0.c2)) IS TRUE) FROM rt1, vt0 WHERE ((NOT (x''))) ORDER BY ((rt1.c2)>(vt0.c1))  NULLS FIRST, ((((((vt0.c2)OR(rt1.c1)))OR(vt0.c2))) BETWEEN (CASE WHEN rt1.c0 THEN vt0.c1 ELSE rt0.c0 END) AND (rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST LIMIT 1892155777;SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c0 END), (((rt0.c2))=((rt0.c1))) COLLATE BINARY, CASE WHEN TOTAL(rt0.c0) THEN (((rt1.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c1))) WHEN (((rt1.c4))<((rt1.c1))) THEN (~ (vt0.c2)) WHEN rt0.c1 COLLATE NOCASE THEN vt0.c2 END FROM rt1 WHERE (((((NULL) NOT BETWEEN (0.36485138000102624) AND ('-1108539493'))) IS TRUE)) ORDER BY ((CAST(0.37502250367082224 AS BLOB))IS((+ (rt1.c0)))), HEX(((vt0.c2)IS(rt0.c0))), ((((((rt1.c0)OR(rt1.c1)))AND(rt1.c3))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c2))) AND (((vt0.c1)*(rt1.c4)))) ASC;SELECT ALL (((((rt1.c1 IN (rt0.c0)))AND(COUNT(rt0.c1))))AND(((((rt0.c0)AND(rt1.c0)))AND(x'')))) FROM vt0, rt0 NOT INDEXED;SELECT DISTINCT NTH_VALUE((('em') NOT NULL), (((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c4)) IN ((((rt1.c1, rt1.c1, rt1.c1, rt1.c2, rt1.c0))<((rt1.c1, rt1.c0, 0.9685146731058992, rt1.c2, rt1.c2)))))) OVER () FROM rt1;SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1 ORDER BY (((- (rt1.c2)))%(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 ELSE vt0.c2 END))  NULLS LAST, ((((((rt1.c3)/(rt0.c1)))OR(((((rt0.c2)AND(rt1.c0)))OR(vt0.c2)))))AND(((((rt1.c4)OR(rt0.c1)))AND(rt1.c2)))) DESC;SELECT DISTINCT ((((rt1.c0 IN ()), CASE WHEN rt0.c2 THEN vt0.c2 END, -732591562))<((CASE WHEN rt1.c2 THEN vt0.c0 END, ((rt0.c0) ISNULL), ((vt0.c0) NOT BETWEEN ('턐X') AND (rt1.c2))))) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL (((((vt0.c0)AND(rt1.c4)))OR(0.07939108927824257)) IN (((rt1.c4) NOT NULL))) FROM rt0, rt1, vt0 WHERE ((((((x'306c') BETWEEN ('0.9507039550306176') AND (x''))))<=(((((('')AND(x'')))OR(NULL)))))); -- 0ms;
SELECT DISTINCT UPPER(((rt0.c1)<<(rt1.c2))) FROM rt0, vt0 WHERE (CAST(CAST(x'04d9' AS INTEGER) AS INTEGER));SELECT ALL ((((rt1.c0)>>(rt1.c1)))GLOB((+ (rt1.c1)))), (((vt0.c1)) BETWEEN (((NOT (rt0.c1)))) AND ((NULL))), ((((vt0.c2 IN ()), (rt0.c2 IN ()), -98532929 COLLATE BINARY, ((vt0.c1) IS FALSE), CASE vt0.c2  WHEN '1527118614' THEN 0.6232259369678491 ELSE rt1.c0 END))==((rt0.c2, (vt0.c1 IN ()), '847956057', ((x'') IS TRUE), (~ (rt1.c0))))) FROM rt1, rt0 WHERE (CASE json_array_length(x'21ce')  WHEN CASE WHEN -9223372036854775808 THEN x'' WHEN 0X4b2821be THEN 0x1a38e563 WHEN NULL THEN x'' END THEN ((x'3596')*(NULL)) WHEN CAST(NULL AS REAL) THEN ((NULL)|('-282360319')) WHEN '4%' THEN (((('1514662089')OR(-448239287)))OR(NULL)) WHEN ((((((((0.5842750302735557)OR(x'')))AND('-45962481')))OR('')))OR(x'')) THEN CASE x'773f'  WHEN NULL THEN 0Xfffffffffa1e2b1b ELSE NULL END WHEN CASE x'025a'  WHEN 1.242210032E9 THEN '-938758912' ELSE NULL END THEN NULL COLLATE BINARY END);SELECT ((((TYPEOF(x''))OR((((rt1.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c2, vt0.c0)) AND (('400137378', rt0.c1, rt0.c1))))))OR((~ (rt0.c1)))) FROM vt0 WHERE (NULL);SELECT DISTINCT ((rt0.c0 COLLATE BINARY)==(rt1.c0)), rt1.c2 COLLATE RTRIM, ((rt1.c0 COLLATE NOCASE) BETWEEN (HEX(DISTINCT rt0.c2)) AND ((vt0.c0 IN ()))) FROM rt1 WHERE ((CAST(0.4255780012576267 AS BLOB) IN ()));SELECT ((((x'')AND(((rt1.c4) IS FALSE))))OR(CAST(NULL AS INTEGER))) FROM vt0, rt1, rt0 LIMIT -1214241900; -- 0ms;
SELECT ALL ((((((rt1.c0) NOT NULL))OR(CASE x''  WHEN x'' THEN vt0.c1 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS REAL))), ((((((((((x'')AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(0.7073241204632186))) NOT BETWEEN ((vt0.c1 IN (rt0.c2, rt0.c1))) AND (CAST(rt1.c3 AS TEXT))), x'', JULIANDAY(rt0.c2 COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN '衐L9*' WHEN vt0.c0 THEN rt1.c1 END, 0.07306848385154585), COUNT(((((((((rt0.c2)OR(rt0.c1)))OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c1))) FILTER(WHERE (((((x'')) NOT BETWEEN ((vt0.c2)) AND ((rt0.c1)))) ISNULL)) OVER () FROM rt0, rt1 WHERE (TYPEOF(DISTINCT NULL) COLLATE NOCASE);SELECT ALL x'f217' FROM vt0, rt0, rt1; -- 0ms;
SELECT (+ ((~ (NULL)))) FROM rt1, vt0 LEFT OUTER JOIN rt0 ON x'ca9a' LIMIT -752718198; -- 0ms;
SELECT DISTINCT '793914128', ((((((rt1.c2)AND(rt0.c1)))OR(rt1.c2))) BETWEEN (((rt1.c0) IS FALSE)) AND (AVG(rt1.c1))), (+ (CAST(rt1.c3 AS NUMERIC))) FROM vt0, rt1;SELECT DISTINCT (((rt1.c2)) BETWEEN (('1112982440')) AND ((((((rt1.c4)OR(rt1.c2)))AND(rt0.c0))))) FROM vt0 EXCEPT SELECT ALL ((CASE vt0.c2  WHEN vt0.c0 THEN rt1.c2 END) NOTNULL) FROM rt1 WHERE (((((((((((NULL)OR(x'c757')))AND(NULL)))OR(NULL)))AND(0Xffffffff80f58d3a))) BETWEEN (((NULL) BETWEEN (2.153009E7) AND ('.!'))) AND ((('-1606880231')>(x'')))));SELECT DISTINCT (((vt0.c2)) NOT BETWEEN ((((rt1.c3) ISNULL))) AND ((rt0.c0))), (CASE vt0.c2  WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END IN ()), (CAST(0Xffffffffbdefa18c AS INTEGER) IN ()), NTILE((rt1.c0 IN ((NOT (vt0.c0)), ((rt1.c1)<<(rt1.c3))))) OVER (), ((CAST(rt1.c4 AS BLOB))*(((rt1.c3)IS NOT(vt0.c1)))) FROM rt1, vt0;SELECT CAST(LAST_INSERT_ROWID() AS INTEGER) FROM rt0, vt0 WHERE (json_object((('X+3%8(>T')<<(-813552949)), ((0.0699241471666252)IS(-1946195786))));SELECT DISTINCT CAST(NULLIF(DISTINCT rt1.c4, rt1.c1) AS REAL) FROM rt0, vt0, rt1; -- 0ms;
SELECT LEAD('Ct', CAST(-1606880231 AS NUMERIC), (~ (''))) OVER (), ((((vt0.c1)/(rt1.c2)))<(CASE NULL  WHEN rt1.c0 THEN vt0.c2 ELSE rt1.c4 END)), ((vt0.c0) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 END) AND ((vt0.c2 IN (rt0.c2)))) FROM rt0 NOT INDEXED GROUP BY (((vt0.c0)) BETWEEN ((((rt0.c0)IS(vt0.c1)))) AND ((0xffffffffbfd80c6d))) HAVING TOTAL((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c1)))) LIMIT -11656172;SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt1, rt0 WHERE ('319477474'); -- 0ms;
SELECT DISTINCT rt1.c0 FROM vt0, rt1, rt0; -- 1ms;
SELECT ALL (((((rt1.c0 IN ()))OR((((rt1.c1))==((vt0.c2))))))OR(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.0631923567644953;SELECT ALL ((((((((((rt0.c0)<(vt0.c2)))OR((((rt0.c2)) BETWEEN ((rt1.c0)) AND ((vt0.c2))))))OR(((rt1.c2)/(rt1.c1)))))AND(((-8.8034627E8)IS NOT(rt1.c2)))))OR(((rt1.c2) NOT BETWEEN (8.47956057E8) AND (rt0.c2)))), MIN(NULL), (((rt1.c4 IN ())) NOTNULL), ((((vt0.c0)AND(vt0.c0)))GLOB(0.9012728573169567)), rt1.c2 FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT AVG(NULL) OVER () FROM rt0, vt0, rt1 WHERE ('-1161764081'); -- 0ms;
SELECT DISTINCT (rt0.c2 IN (rt1.c4)) COLLATE BINARY FROM vt0;SELECT ALL NULL FROM vt0, rt1, rt0 LIMIT -415409897; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) BETWEEN (((rt1.c3)>=(rt0.c1))) AND (((rt1.c0)LIKE(rt0.c1)))) FROM vt0, rt0 WHERE (((('W[z-e''')>('d>X')) IN ())) GROUP BY ((((((vt0.c0)/(vt0.c2)))AND(vt0.c2 COLLATE RTRIM)))AND(((((rt0.c0)AND(rt1.c1)))OR(rt0.c2)))) HAVING ((CASE rt1.c2  WHEN vt0.c1 THEN rt1.c2 ELSE rt1.c3 END)<=((+ (rt1.c4)))) ORDER BY (~ (CASE WHEN rt1.c4 THEN vt0.c1 ELSE rt1.c4 END)) ASC  NULLS FIRST;SELECT CAST((~ (rt0.c0)) AS INTEGER) FROM rt0, vt0, rt1 WHERE ((((-1110402233 IN ())) IS TRUE)); -- 0ms;
SELECT CAST(CASE WHEN vt0.c1 THEN rt0.c2 WHEN x'' THEN 'O^' WHEN vt0.c0 THEN rt1.c4 ELSE rt0.c0 END AS TEXT) FROM vt0, rt0, rt1 WHERE (((((0.0586923389571089)OR(((1.500673875E9) IS TRUE))))AND((((('xp')OR('兪+H(Nb')))AND(-7.32591562E8))))); -- 0ms;
SELECT ALL ((GROUP_CONCAT(rt1.c0)) NOT NULL) FROM rt0 WHERE (CAST((- ('-1041767702')) AS INTEGER)) LIMIT -192441303;SELECT GROUP_CONCAT((((rt1.c1))>=((rt0.c1))) COLLATE RTRIM) FROM vt0;SELECT ALL x'1a61' FROM rt0, rt1, vt0; -- 0ms;
SELECT (((((vt0.c2, rt1.c2, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt1.c3, rt0.c0, rt1.c2)))) BETWEEN (x'8271') AND (((rt0.c0)|(rt1.c3)))) FROM rt0, vt0 WHERE (HEX((((0x16131ac8)) NOT BETWEEN (('-691253407')) AND (('NT'))))) LIMIT -1496699830 OFFSET 2051024152;SELECT DISTINCT ((((rt1.c2)<<(0.9636082824343655))) BETWEEN (((rt1.c1) IS FALSE)) AND (rt1.c3 COLLATE BINARY)) FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL SUM(rt0.c1) OVER () FROM rt1, vt0 WHERE (x'');SELECT DISTINCT COUNT(*) FROM rt0, vt0, rt1 WHERE (CASE 0.3793999572459805 COLLATE BINARY  WHEN (((x''))>((x''))) THEN (((NULL, x'', 0.18129464990410904))=((NULL, '-725653056', NULL))) WHEN ((x'')>>(x'')) THEN CAST('0.5746008551030041' AS BLOB) WHEN (x'' IN (NULL, 'sxdj')) THEN ((x'')>('-732591562')) END); -- 0ms;
SELECT DISTINCT TOTAL((- (rt0.c1))) OVER ( ORDER BY ((((rt0.c1))!=((vt0.c2))) IN (((rt1.c4)GLOB(vt0.c1)))), ((((((rt0.c1)AND(rt1.c0)))OR(vt0.c1))) NOT BETWEEN (((((rt1.c1)AND(rt0.c0)))AND(vt0.c0))) AND ('lK '))) FROM rt1, vt0;SELECT DISTINCT (((vt0.c2)%(rt0.c2)) IN (((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND(rt1.c2)))) FROM vt0, rt1, rt0; -- 1ms;
SELECT DISTINCT 0.7991214037566118, AVG((rt1.c3 IN ())) OVER ( ROWS  UNBOUNDED PRECEDING), TOTAL(vt0.c1) OVER () FROM rt0 WHERE (((((0.9757032482832944)LIKE(-879090055))) NOT BETWEEN (0.6904109987540195) AND (CASE -1367666823  WHEN 0.8550502131794115 THEN 'Be0%zl' WHEN '''+uP1Xp' THEN NULL WHEN '_%' THEN 0.5522858750840219 END))) LIMIT -943897540 OFFSET -1946195786;SELECT ALL (NOT (CASE WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN 'OJKc(TUX' WHEN rt1.c4 THEN 0.8221538651225975 ELSE rt1.c1 END)) FROM vt0, rt1 GROUP BY (((((vt0.c0))<((rt0.c2))))<=(((rt1.c3) IS FALSE)));SELECT ALL CASE 0.13697696543580706  WHEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)) THEN rt0.c2 COLLATE NOCASE ELSE ((((rt0.c1)AND(vt0.c1)))OR(rt1.c1)) END, ((((CAST(vt0.c2 AS NUMERIC))OR(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END)))AND((+ (rt1.c0)))), 0X2ae7c16b COLLATE BINARY FROM rt1;SELECT DISTINCT ((CAST(rt0.c1 AS REAL)) IS FALSE), (((((rt1.c0 IN ()))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c2 ELSE rt1.c4 END)))OR(LIKELY(rt1.c0))), (NOT (MIN(rt1.c1))) FROM vt0 WHERE (((LTRIM(x'', '1645475098')) IS TRUE));SELECT ((((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))), rt0.c2, ((vt0.c0)OR(rt0.c2))))!=((((((((((rt0.c0)OR(vt0.c2)))OR(vt0.c1)))AND(rt1.c4)))OR(0.8085779358012826)), (~ (rt1.c2)), (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0)))))) FROM vt0, rt1 WHERE (CAST((((x''))>=((x'186d'))) AS BLOB));SELECT DISTINCT (- (rt1.c2)) FROM rt1, vt0, rt0 WHERE ((((((('5S!Z2') BETWEEN (NULL) AND (NULL)))OR((((('-98686181')OR(x'')))OR(x'e3d7')))))OR(CASE NULL  WHEN x'' THEN x'' WHEN '' THEN NULL WHEN NULL THEN 0.07761193062684912 ELSE '|Vn?' END))); -- 0ms;
SELECT DISTINCT x'5b22', (((rt1.c0)) BETWEEN ((0.6990763581547851)) AND ((LIKE(rt1.c4, rt0.c2, '0')))), ((((rt1.c3) BETWEEN (0.9734141266624062) AND (rt0.c2)))&(CAST(rt0.c1 AS TEXT))) FROM vt0, rt1 WHERE (((('FLbGP8J' IN (''))) NOT NULL));SELECT DISTINCT TOTAL(rt0.c0), ((((((((((rt1.c2) IS TRUE))AND(CASE WHEN vt0.c2 THEN rt1.c3 ELSE rt1.c0 END)))AND(((vt0.c1)*(rt1.c4)))))OR(rt1.c4 COLLATE RTRIM)))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 END)), ((vt0.c1) BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE BINARY FROM rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT CASE ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND('{}[S잨')))AND(vt0.c0))  WHEN (((vt0.c1))<((rt0.c0))) THEN ((((vt0.c2)OR(rt1.c4)))AND(vt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END FROM rt0, vt0, rt1 GROUP BY LAST_INSERT_ROWID() COLLATE RTRIM; -- 0ms;
SELECT ALL FIRST_VALUE(TRIM(((rt1.c1) ISNULL), ((rt1.c4)IS NOT(rt1.c1)))) OVER () FROM rt1 WHERE (((0.30518843375168214) BETWEEN ((((((((('w')AND(0.8952334739008914)))OR(0xffffffffde32bdbc)))AND(NULL)))AND(x'417b'))) AND (UNLIKELY(DISTINCT 0.5307404173671424)))); -- 0ms;
SELECT x'6f23' FROM rt1, rt0 LEFT OUTER JOIN vt0 ON (((vt0.c1, rt1.c4, 'y~edS', rt0.c0, rt1.c0)) NOT BETWEEN ((rt1.c3 COLLATE RTRIM, CAST(rt1.c3 AS NUMERIC), vt0.c2 COLLATE BINARY, ((rt0.c1) NOT BETWEEN (x'') AND (rt1.c3)), ((rt1.c1)-(x'')))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN -732591562 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 END, (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt0.c1))), (rt1.c4 IN ()), ((((((((vt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR(rt1.c3)))OR(rt1.c4)), LOWER(vt0.c2)))) WHERE (((CASE WHEN -535166957 THEN '-1486193428' END) NOT BETWEEN ((NOT (NULL))) AND (CASE 0X58bddfad  WHEN '54778106' THEN NULL ELSE NULL END))) GROUP BY CAST(rt1.c2 COLLATE RTRIM AS TEXT); -- 0ms;
SELECT DISTINCT CAST(JULIANDAY(rt1.c1, rt1.c1, NULL) AS INTEGER) FROM vt0 WHERE ((((CAST(0.8755671782331951 AS TEXT)))>=((UNLIKELY(DISTINCT '')))));SELECT DISTINCT x'' FROM rt0 WHERE (CAST(TYPEOF(0.5746008551030041) AS REAL)); -- 1ms;
SELECT ALL rt1.c1, ((vt0.c0 COLLATE RTRIM)<((('謂e') BETWEEN (NULL) AND (rt1.c2)))), rt0.c0 FROM rt1, vt0, rt0 WHERE (((x'') NOT BETWEEN (x'') AND ('1474777450')) COLLATE BINARY COLLATE RTRIM) GROUP BY (CASE WHEN rt1.c1 THEN vt0.c2 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c3 THEN rt0.c1 END IN ()); -- 0ms;
SELECT DISTINCT NTILE((rt1.c0 IN ())) OVER () FROM vt0, rt0, rt1 GROUP BY CAST((NOT (rt1.c1)) AS TEXT) LIMIT 1242210032;SELECT ALL (rt0.c0 IN ()) COLLATE BINARY, GROUP_CONCAT(0.5941495205495967 COLLATE NOCASE COLLATE RTRIM), (+ (((rt0.c0) NOT BETWEEN ('v3') AND (rt1.c2)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c2 END)||(((((vt0.c2)AND(vt0.c0)))AND(rt1.c4)))) FROM vt0 ORDER BY ((((((rt1.c2)IS(rt1.c1)))AND(CAST(vt0.c2 AS BLOB))))OR(x''))  NULLS LAST;SELECT DISTINCT vt0.c1 FROM vt0, rt1, rt0 WHERE (((CAST('' AS BLOB)) IS FALSE)) GROUP BY ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (('4k' IN ())) AND (((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) HAVING CAST(vt0.c0 COLLATE RTRIM AS INTEGER); -- 0ms;
SELECT DISTINCT '-1929750112' FROM rt0, rt1; -- 0ms;
SELECT 0.27127422545811497 FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c2)) BETWEEN (CAST(rt1.c2 AS TEXT)) AND (((rt0.c1)==(rt1.c1)))) FROM rt1;SELECT ALL (MIN(rt0.c0) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1 NOT INDEXED, rt0, vt0 WHERE (((((('1317701349')OR(-945680884)))OR('')) IN ())); -- 0ms;
SELECT 'n6', TOTAL(rt1.c2), 0.10465664461144863 FROM vt0 RIGHT OUTER JOIN rt1 ON CASE ((((((((rt1.c0)OR(rt1.c4)))OR(vt0.c2)))AND(vt0.c0)))AND(rt0.c0))  WHEN ((vt0.c0)%(rt1.c0)) THEN (((rt1.c1))>((rt0.c0))) END INNER JOIN rt0 ON LIKE(((((vt0.c2)OR(vt0.c1)))AND(rt1.c2)), ((vt0.c2)/(rt1.c0))) WHERE (((NULL) BETWEEN (((-465857315)!=(x'e0e3'))) AND (((x'') NOT BETWEEN (NULL) AND (x'2629')))));SELECT DISTINCT rt1.c1, CASE WHEN (((rt0.c0, x'504f', rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND ((rt1.c2, rt1.c2, rt0.c0))) THEN (('')%(rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c3)) THEN (~ (rt1.c1)) WHEN (((rt1.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) THEN rt1.c4 ELSE ((0xffffffff97a14974)==(rt0.c2)) END, CAST(vt0.c0 AS TEXT) COLLATE NOCASE, (((((((('2131792326')AND(CAST(rt1.c1 AS INTEGER))))OR(((vt0.c2)<>(rt1.c0)))))AND(SUM(rt0.c0))))OR(((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)))), ((((rt0.c2) NOT BETWEEN (0.32279179335153474) AND (vt0.c1)))||((- (rt0.c2)))) FROM rt1, rt0;SELECT ((((-1161764081)AND(((vt0.c0) BETWEEN (rt1.c2) AND (rt0.c2)))))OR((((rt0.c0))<>((vt0.c1))))) FROM vt0, rt1, rt0 WHERE ((((('1769304928') IS FALSE))>>(((('em'))>((NULL)))))); -- 0ms;
SELECT DISTINCT CAST(x'' AS INTEGER), vt0.c0 COLLATE BINARY, 0.9820269955362222 FROM rt1;SELECT DISTINCT LAG(((((((((((rt1.c3) ISNULL))AND('')))AND(((((rt1.c4)OR(rt1.c0)))OR(rt1.c2)))))AND((rt1.c4 IN ()))))AND((+ (rt1.c1)))), ((CAST(rt1.c4 AS BLOB))*(CAST(rt1.c2 AS INTEGER))), ((((((((((((((((rt1.c2)AND(rt1.c3)))AND(rt1.c4)))AND(rt1.c3)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c3)))OR(TRIM(rt1.c3))))OR(LIKELIHOOD(rt1.c0, 0.8813762731115948)))) OVER ( RANGE BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c0 IN ()))AND(vt0.c2 COLLATE BINARY)))AND(((rt1.c1)&(rt1.c3)))) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT CASE ((vt0.c1)<(rt1.c0))  WHEN ((rt1.c3)GLOB(rt0.c2)) THEN ((vt0.c2)||(0.04133304120836845)) WHEN ((((vt0.c0)OR(rt1.c0)))AND(rt0.c0)) THEN x'db5c' COLLATE RTRIM WHEN (rt1.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE NULL END, ((((rt1.c3)||(rt1.c2)))||(vt0.c0 COLLATE RTRIM)), CAST(((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c2)) AS REAL) FROM vt0, rt1, rt0; -- 0ms;
SELECT load_extension(CAST(rt0.c1 AS BLOB), CASE rt0.c1  WHEN rt1.c3 THEN vt0.c2 END) FROM rt1 WHERE ((NOT (((x'6f2e')||(0.2585077865482551))))) ORDER BY ((((((rt0.c2)OR(vt0.c0)))AND(rt1.c0))) BETWEEN (((rt1.c0) ISNULL)) AND (((vt0.c0) BETWEEN (rt1.c2) AND (''))))  NULLS LAST, NULL ASC  NULLS LAST;SELECT ALL (((rt0.c1)) NOT BETWEEN ((TOTAL(rt1.c2))) AND (((vt0.c2 IN ())))) FROM vt0 NOT INDEXED WHERE ((((('-1566556464')>=(x''))) BETWEEN (((-1.2142419E9) BETWEEN (0.5746008551030041) AND (-182948758))) AND (x'd5be' COLLATE NOCASE))) GROUP BY vt0.c0 ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END)<<(CASE rt0.c2  WHEN rt1.c0 THEN vt0.c0 END))  NULLS LAST, CAST(((x'832c')&(vt0.c0)) AS INTEGER), ((((((rt1.c3) IS TRUE))AND(NULL)))AND(((rt0.c2) IS TRUE))) DESC  NULLS FIRST;SELECT ALL CASE WHEN rt0.c2 THEN (('GfW탣T5kzS') NOTNULL) ELSE ((NULL) IS TRUE) END FROM rt0; -- 0ms;
SELECT ((vt0.c0)/((- (rt0.c2)))), DENSE_RANK() OVER (), CAST(0.2957733296943793 AS INTEGER), (~ ((rt0.c1 IN ('0.07389552085301299')))), RANK() OVER () FROM vt0 NOT INDEXED;SELECT DISTINCT (((CAST(rt1.c0 AS BLOB)))>=((COUNT(rt1.c1)))), ((((+ (vt0.c2))))>((((rt0.c1)+(vt0.c2))))), (((vt0.c1, rt1.c4, vt0.c0)) BETWEEN ((((rt0.c2)=(rt1.c2)), ((rt1.c0) NOTNULL), ((vt0.c0)+(vt0.c1)))) AND ((((rt1.c2)AND(vt0.c1)), ((rt1.c2)>=(rt1.c3)), rt1.c1 COLLATE RTRIM))), rt0.c0, json_quote(rt1.c3 COLLATE BINARY), (+ (((rt1.c0) NOTNULL))), (0.7432482901107799 COLLATE BINARY IN ()) FROM rt1, vt0 WHERE (0.5134172067898997);SELECT DISTINCT (((rt1.c3)) BETWEEN (((((vt0.c1, vt0.c1, rt1.c4)) BETWEEN ((rt0.c0, rt1.c4, vt0.c2)) AND ((rt1.c2, rt1.c0, rt1.c3))))) AND ((1833046879))) FROM rt1, vt0 WHERE (LIKE('-508537896', CAST(x'' AS NUMERIC)));SELECT DISTINCT CASE WHEN (NOT (rt1.c2)) THEN LOWER(vt0.c0) END FROM vt0, rt0, rt1 WHERE (((((((NULL) BETWEEN ('') AND ('cj')))AND(CASE ''  WHEN NULL THEN NULL WHEN 'iEﭢx' THEN 'N,' WHEN x'c387' THEN NULL END)))AND(x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT SUM((((rt1.c3))=((rt0.c1)))) OVER (), (NOT (rtreenode(vt0.c2, rt0.c0))), (MIN(vt0.c0) IN ()) FROM rt1, vt0, rt0 WHERE (((((((0Xffffffff804a4a98)OR('S藪')))AND(x'')))-(CASE WHEN '1450235466' THEN x'' ELSE NULL END))) LIMIT -962885810 OFFSET -195081398; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt1, rt0, vt0 GROUP BY 0.8021047883694896, ((((rt1.c1)LIKE(vt0.c1))) NOT BETWEEN ((((rt1.c2))>=((vt0.c0)))) AND (rt1.c1)), (((((rt1.c1)) BETWEEN ((0Xffffffffbe290c6c)) AND ((rt0.c2))))<=(CAST(vt0.c0 AS INTEGER))) HAVING ((((((((rt0.c2)AND(rt1.c0)))AND((rt1.c1 IN ()))))AND((((rt1.c4)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(-1350639942)); -- 1ms;
SELECT DISTINCT (((((vt0.c1, rt1.c1, rt1.c4))<=((rt0.c1, rt1.c1, rt1.c4)))) BETWEEN (((((((((vt0.c2)OR(rt0.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c4))) AND ((rt1.c4 IN ()))) FROM rt0, vt0;SELECT DISTINCT rt1.c0, NULL, ((COUNT(*)) NOT BETWEEN (TOTAL(rt1.c4)) AND (rt1.c1)), GROUP_CONCAT(((((((((rt0.c2)OR(rt1.c3)))AND(rt1.c0)))AND(1279108941)))OR(rt0.c0))) OVER (), CAST(((rt1.c0)>(rt1.c2)) AS BLOB) FROM rt0, vt0 WHERE ((((('')*('-725653056'))) NOTNULL));SELECT DISTINCT CASE ((((((((rt1.c2)OR(rt1.c4)))OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c4))  WHEN rt0.c1 THEN (~ (vt0.c0)) END FROM vt0, rt1 GROUP BY (((((rt1.c2 IN ()))AND(rt1.c2 COLLATE NOCASE)))AND(CASE WHEN vt0.c2 THEN rt1.c2 ELSE vt0.c2 END)) HAVING ((((NOT (rt1.c0))))<=((((vt0.c1)&('0.0'))))) LIMIT 235789298;SELECT LOWER(DISTINCT ((rt1.c4) NOT BETWEEN (vt0.c0) AND (rt1.c1))) FROM rt0, rt1 ORDER BY (((rt1.c4)) NOT BETWEEN ((((rt1.c3)-(rt1.c3)))) AND ((CASE rt1.c3  WHEN rt1.c3 THEN vt0.c1 ELSE -169534529 END))) DESC  NULLS FIRST;SELECT 2058201522 FROM vt0 WHERE (((((UNLIKELY('95721517'))OR(((0.00990111087250889)GLOB(0.788865406539049)))))AND('	d' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT DATE(((((rt1.c1)OR(rt0.c2)))OR(vt0.c2)), rt0.c1, ((0.6386234645359689)<=(rt1.c2)), ((-1138801330)<<(rt1.c3)), ((rt1.c2) NOT BETWEEN (vt0.c0) AND (0.12229752712912956))) FROM rt1, rt0, vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c4))) FROM vt0;SELECT DISTINCT NULLIF(0.5765602242120318, rt0.c2), (((rt1.c1)) BETWEEN (('0.0')) AND ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2))))), (CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c2 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c2 END IN ((~ (rt0.c1)), rt1.c1)) FROM vt0 NOT INDEXED, rt1, rt0 WHERE (((NULL) BETWEEN (((NULL)+(-791065122))) AND (((0.24651959531734857) NOT BETWEEN (x'') AND (x'a212688f'))))) ORDER BY rt0.c2  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (rt1.c1))) NOT BETWEEN (CASE rt1.c3  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END) AND (CASE WHEN '/4{+w' THEN vt0.c1 WHEN '' THEN rt0.c1 WHEN rt1.c0 THEN vt0.c1 ELSE '賈Ἳ_yI' END)) FROM rt1, vt0 WHERE (((x'c7dd') NOT BETWEEN (0.8883950732258394) AND (NULL)) COLLATE RTRIM);SELECT ALL 0.3668639236438097 FROM rt1, vt0 WHERE ((((('1m')&(NULL))) NOT BETWEEN (((-8.8034627E8) NOT BETWEEN (1664347683) AND (NULL))) AND (((x'804b')IS(x''))))) GROUP BY (((rt0.c1)) BETWEEN ((CASE vt0.c1  WHEN rt0.c1 THEN rt1.c4 END)) AND (((((NULL)) BETWEEN ((rt1.c4)) AND ((rt1.c2)))))), (NOT (((rt1.c0) IS FALSE))), ((- (NULL)) IN ()) HAVING rt1.c2;SELECT ALL (((((vt0.c0)*(vt0.c1))))<=((CASE rt1.c3  WHEN rt1.c4 THEN vt0.c1 END))), CASE ((rt1.c0)|(rt1.c2))  WHEN ((((((((vt0.c1)AND(NULL)))AND(rt1.c2)))OR(rt0.c2)))AND(rt1.c1)) THEN rt1.c3 COLLATE RTRIM ELSE IFNULL(rt1.c0, rt1.c1) END, ((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0))) IS TRUE) FROM rt1, rt0 WHERE ((+ (((x'6475') NOT BETWEEN (x'') AND (x'')))));SELECT DISTINCT ((((((((((1.397973873E9)AND(rt1.c2)))OR(rt1.c3)))AND(rt0.c1)))AND(0x1fac7201))) BETWEEN (TOTAL(vt0.c2)) AND (CASE rt1.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN rt1.c3 WHEN '' THEN rt1.c4 WHEN rt0.c2 THEN rt1.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)) FROM rt1, vt0, rt0 WHERE (CASE ((NULL) NOT BETWEEN (x'') AND (NULL))  WHEN NULL THEN (((x''))>=(('-1958320246'))) WHEN (((-4.5962481E7, '-1361176646', NULL)) BETWEEN ((NULL, '1124165463', 0.38223095238159854)) AND ((1953155913, ')[붮z', 1.833046879E9))) THEN ((((0.5528099369071121)AND(x'')))OR(x'b4eb')) WHEN x'' THEN ((x'')<<(x'a5c4')) END); -- 0ms;
SELECT ALL rt0.c1 FROM rt1, rt0, vt0 WHERE (CASE WHEN (NULL IN ()) THEN ((('-374343865')) NOT BETWEEN ((0.936658729120811)) AND (('-1223042424'))) WHEN ((x'') ISNULL) THEN ((0Xffffffffa30616ca) NOTNULL) WHEN ((((0.6473151321160975)AND(NULL)))AND(x'1223')) THEN ((x'')/(NULL)) END); -- 0ms;
SELECT DISTINCT 0.3731460916507211, (((rt1.c0)) BETWEEN ((rt0.c2)) AND ((((rt1.c3)LIKE(rt0.c0))))), (- (((vt0.c0)GLOB(vt0.c0)))) FROM rt1, rt0 WHERE (((NULL)%(((((((((0.9861684142689913)AND(NULL)))OR(0xffffffffa2162908)))OR('-1731584041')))AND(0.5468964717859831)))));SELECT ((((-647031460)|(rt0.c2)))>(rt1.c0)) FROM rt0, vt0, rt1 WHERE ((~ (((x'') BETWEEN ('4986770780021787741') AND (x''))))) LIMIT -1677252106 OFFSET -1817328395; -- 0ms;
SELECT RANK() OVER ( ORDER BY ((rt0.c0) NOTNULL)  NULLS FIRST), (- (UNLIKELY(DISTINCT vt0.c1))), CASE UPPER(vt0.c2)  WHEN CAST(vt0.c2 AS BLOB) THEN LTRIM(rt1.c2, rt1.c2) END FROM rt1 WHERE (0.3169935153488378);SELECT TRIM(DISTINCT ((rt1.c4) NOT BETWEEN (vt0.c1) AND (rt1.c2))) FROM rt1 WHERE (LIKE(0xffffffff81ed8ece, ((0.373791842593865) IS TRUE)));SELECT DISTINCT ((x'')IS NOT(LOWER(DISTINCT rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c3)*(-415409897)))/(((rt0.c0) IS FALSE))), CAST(rt0.c0 AS NUMERIC), GROUP_CONCAT(((((0.5354657569125554)OR(rt1.c0)))OR(rt0.c1))) FROM rt0, vt0;SELECT TOTAL(TYPEOF(rt0.c0)) FROM vt0 FULL OUTER JOIN rt1 ON CAST(((rt1.c1) IS TRUE) AS REAL) INNER JOIN rt0 ON (((rt1.c2, rt0.c0, vt0.c1)) BETWEEN (((+ (rt1.c1)), CAST(rt1.c4 AS NUMERIC), (((rt1.c1))=((rt0.c2))))) AND (((~ (rt1.c4)), ((rt0.c0)/(rt0.c2)), ((vt0.c1) IS FALSE)))) WHERE (CAST(HEX(x'b013') AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt1.c3) ISNULL))IS NOT(((vt0.c1) NOTNULL))) FROM rt1, vt0, rt0 WHERE (((CASE WHEN '29443991' THEN 0X3f03fc2c WHEN x'' THEN 0.6653648668419906 WHEN NULL THEN '1290158926' ELSE 4726106.0 END) IS FALSE)); -- 0ms;
SELECT DISTINCT SUM((- (rt1.c4))), (NOT (rt1.c4 COLLATE BINARY)), (((CHANGES()))>=((CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt0.c0 END))) FROM rt0 ORDER BY ((rt1.c2 IN ()) IN ()), (- (((vt0.c1) BETWEEN (rt1.c2) AND ('1730652007'))))  NULLS FIRST, CAST(((((vt0.c1)OR(rt0.c1)))AND(rt1.c0)) AS BLOB)  NULLS FIRST;SELECT ALL COUNT(*) FROM rt1, vt0; -- 0ms;
SELECT (CASE WHEN vt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END IN (CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN vt0.c0 END, ((((((((((((rt1.c1)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt1.c4)))OR(rt0.c0)))OR(vt0.c2)))), (CAST(vt0.c0 AS REAL) IN ()), GROUP_CONCAT(CAST(NULL AS TEXT)) OVER ( ORDER BY x'' DESC) FROM rt1, vt0 WHERE (((('-597350703'))<((x'64f9'))) COLLATE NOCASE);SELECT DISTINCT AVG(((((vt0.c0)OR(rt0.c2)))AND(rt1.c0))) OVER () FROM rt1 WHERE (((((((0.9915450729865605)) BETWEEN ((NULL)) AND ((NULL)))))<=((((0.34186117496311075) IS FALSE)))));SELECT CASE (((rt1.c0))=((rt1.c1)))  WHEN ((((rt1.c4)AND(vt0.c0)))OR(vt0.c0)) THEN rt0.c2 WHEN vt0.c1 THEN NULL COLLATE NOCASE WHEN (+ (rt0.c0)) THEN ((rt1.c0)<<(rt1.c0)) END FROM rt0, rt1;SELECT DISTINCT ((((((vt0.c2)OR(rt1.c3)))AND(rt0.c0))) NOT BETWEEN (NULLIF(rt1.c3, vt0.c2)) AND (((rt1.c3) ISNULL))) FROM vt0, rt1, rt0 ORDER BY ((((rt1.c2)AND(rt0.c2 COLLATE BINARY)))OR(CAST(vt0.c1 AS REAL))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((+ (rt0.c0)))+((vt0.c0 IN (vt0.c2, rt1.c2)))), ((((rt0.c1) NOTNULL))!=(rt1.c3 COLLATE NOCASE)), ROW_NUMBER() OVER () FROM rt0 WHERE (CAST(NULL AS INTEGER));SELECT ((vt0.c2 COLLATE NOCASE)AND(((-1969203918)-(rt0.c2)))) FROM rt0, rt1 WHERE ((~ (('' IN ()))));SELECT DISTINCT LEAD(((((rt0.c0 COLLATE NOCASE)OR((439936355 IN ()))))AND(x'')), CAST((rt0.c0 IN ()) AS NUMERIC), ((CAST(rt1.c3 AS BLOB)) IS FALSE)) OVER (), NTILE((- ((rt0.c0 IN (rt1.c4))))) OVER (), rt0.c1 FROM rt1, vt0, rt0;SELECT ALL (+ (CASE vt0.c2  WHEN NULL THEN rt1.c3 ELSE rt1.c2 END)) FROM vt0, rt0, rt1 WHERE (((((((-2.142341189E9)OR('-799142409')))OR(x'')))||(('0.07382614004831134' IN ())))) ORDER BY ((((vt0.c0)/(rt1.c0)))AND(((0.48491998046922313)>>('1dqn')))) DESC  NULLS LAST, ((((vt0.c2) NOTNULL))<>(((rt1.c3) IS FALSE))) ASC, (- (rt1.c3 COLLATE NOCASE)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c3 AS REAL) AS BLOB) FROM rt1 WHERE (((((((0.9589914352157729)/(0.6865425621898883)))AND(('' IN ()))))AND(x''))); -- 0ms;
SELECT ALL LEAD(CASE (rt1.c2 IN ())  WHEN x'' THEN CAST('mm,' AS BLOB) ELSE ((('1450235466', vt0.c1, rt0.c2))>=(('283T543 6298757702203999881T4 -5995622237921587471:361:-890091428466779689-1598:>hq', vt0.c0, rt0.c2))) END, (((+ (rt1.c4)))!=((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))), ('' IN ())) OVER () FROM rt0, rt1, vt0; -- 1ms;
SELECT ALL ((((((vt0.c1)>=(vt0.c0)))OR(((((((((((((x'')AND(rt1.c2)))AND(rt1.c4)))OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c4)))OR(rt0.c1)))))OR(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE vt0.c2 END)), CASE ((((rt1.c2)AND('G\nf}斲u}<')))AND(0Xffffffffcf822acb))  WHEN (+ (rt0.c1)) THEN ((((rt1.c2)OR(rt0.c2)))OR(vt0.c2)) ELSE rt0.c0 COLLATE BINARY END, COUNT(*) OVER () FROM vt0, rt1;SELECT vt0.c0, CAST(vt0.c2 AS REAL) COLLATE BINARY, TOTAL((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1)))) FROM vt0, rt0;SELECT DISTINCT AVG(((vt0.c2) IS FALSE)) FROM rt0, vt0, rt1 LIMIT 983690281 OFFSET -938679029; -- 1ms;
SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT ALL ((TOTAL(rt1.c4)) NOT BETWEEN ((((rt1.c0))==((rt1.c3)))) AND (((rt1.c1)<<(vt0.c0)))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))LIKE(rt1.c4 COLLATE RTRIM)) FROM vt0, rt1 WHERE (CASE ((0x1575a98c)<=('-508537896'))  WHEN (((NULL))==((0Xffffffffb2fccb7f))) THEN (NOT ('1432690339')) ELSE ((0xffffffffe1af7a77)>=(x'c868')) END); -- 0ms;
SELECT DISTINCT (((rt0.c0)>=(rt1.c0)) IN ()) FROM rt1, vt0, rt0 WHERE ((((('vm0Q')AND(((x'bb9f') NOTNULL))))OR((((0.3235544883686945, '/k', -415409897))<>((x'0a76', 0x1490b89c, 0.23876857126800333)))))); -- 0ms;
SELECT vt0.c2 FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN ()))%(NULL)) FROM rt0 WHERE (CASE (('-1677252106')<=(0.49827233335590626))  WHEN 'dD?鵏U)' COLLATE RTRIM THEN ((0Xffffffffbb0bc10f)>>('PnZ#zTj}')) ELSE (('y!') NOT BETWEEN (0.7699181295159021) AND (x'')) END); -- 0ms;
SELECT ((((- (vt0.c1)), ((((rt1.c2)AND(vt0.c1)))AND(vt0.c0)), (((x'a2d6', vt0.c2, vt0.c0, 0.10018724254209554, rt1.c3)) NOT BETWEEN ((rt0.c2, rt1.c0, rt1.c2, rt1.c2, rt0.c2)) AND ((x'', rt0.c0, rt0.c2, 0.9239823863034752, rt1.c3)))))<=((GROUP_CONCAT(rt1.c0), ((rt0.c1)<(rt1.c0)), -701570580))) FROM rt0 GROUP BY (((((rt1.c4)LIKE(rt1.c1))))<=((TRIM(vt0.c2)))), CASE CAST(vt0.c2 AS NUMERIC)  WHEN ABS(DISTINCT rt1.c2) THEN rt0.c1 COLLATE BINARY WHEN ((((rt1.c0)AND(vt0.c1)))AND(rt1.c4)) THEN ((rt1.c4)||(rt1.c0)) WHEN json_patch(vt0.c1, rt1.c2) THEN ((rt0.c2)LIKE(rt1.c4)) ELSE (vt0.c2 IN ()) END, (((((vt0.c1)<(rt1.c1)), NULLIF(rt1.c2, vt0.c2), (((rt1.c2, rt1.c3, rt1.c1))<=((rt1.c0, rt1.c2, rt0.c0)))))<=((((((vt0.c2)OR(rt1.c0)))AND(rt0.c2)), COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c1), (((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1)))))) ORDER BY (NOT (((vt0.c2)<(vt0.c0)))) ASC  NULLS FIRST;SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt1; -- 0ms;
SELECT ALL ((MIN(rt1.c4))>>(LENGTH(vt0.c1))) FROM vt0, rt1, rt0 WHERE ((NOT (1.344289077E9)) COLLATE NOCASE); -- 0ms;
SELECT ALL ((rt1.c4) NOT NULL) FROM vt0 WHERE (CASE WHEN (((x'')) BETWEEN ((NULL)) AND (('!n'))) THEN ((-7.25653056E8) BETWEEN (x'a10a') AND (x'')) END);SELECT DISTINCT ((((- (rt1.c2))))<((((((((((rt1.c1)OR(rt1.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c2))))) FROM vt0, rt0, rt1; -- 0ms;
SELECT LAST_VALUE(((((rt0.c0)IS NOT(rt0.c1))) IS TRUE)) OVER (), ((CASE WHEN vt0.c2 THEN rt1.c1 END) NOT NULL), ((((((rt0.c1)OR(vt0.c1)))OR(rt0.c1)))+(((vt0.c1)-(rt0.c2)))) FROM rt0 WHERE ((+ (x'' COLLATE RTRIM)));SELECT DISTINCT (((((((((((((((((NOT (rt1.c1)))AND(CASE rt0.c0  WHEN '400966859' THEN rt0.c0 END)))AND(((((rt1.c3)OR(rt1.c3)))OR(rt1.c3)))))AND(0.3485944412811669)))OR((rt1.c1 IN ()))))OR(((rt1.c3) NOT BETWEEN (rt0.c0) AND (x'')))))OR(IFNULL(rt1.c0, vt0.c1))))OR(vt0.c1)))AND(((rt0.c2)-(vt0.c0)))) FROM rt1;SELECT DISTINCT ((((rt1.c3) NOT BETWEEN (rt0.c0) AND ('-2037213389')))>=(NULL COLLATE BINARY)) FROM rt0, vt0 WHERE ((((((((x''))>=(('\o'))))OR(((x'') NOT BETWEEN (NULL) AND (0.9769930053813644)))))OR((NULL IN ()))));SELECT ALL CASE ((rt1.c3)==('䊏}b'))  WHEN rt0.c2 THEN CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END WHEN (('')*(rt1.c3)) THEN ((0.5393161243233253)||(rt1.c3)) WHEN CAST(vt0.c1 AS TEXT) THEN CAST('-1186268701' AS BLOB) ELSE ((((rt1.c2)AND(rt1.c0)))OR(rt0.c2)) END FROM rt1, vt0 WHERE (TRIM(TRIM(NULL, NULL)));SELECT DISTINCT CASE CASE WHEN vt0.c2 THEN rt0.c0 ELSE rt1.c0 END  WHEN x'd7ff' THEN 0.613892126088963 ELSE rt1.c0 END, ((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOT NULL), (((rt1.c0 IN (rt0.c0)))!=(((rt0.c2)<<(vt0.c1)))) FROM rt1;SELECT DISTINCT ((rt1.c1) BETWEEN (NULL) AND (rt1.c1)) COLLATE RTRIM FROM rt0 WHERE (((((NULL)>=(0.21563094044212505))) NOT NULL));SELECT CAST((((vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((rt1.c2, rt1.c0, vt0.c0)) AND ((vt0.c1, rt0.c1, vt0.c0))) AS REAL) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c2, rt1.c2, vt0.c2)) NOT BETWEEN ((NULL, (rt1.c4 IN ()), ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt0.c1)))) AND ((((vt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt1.c1 IN (rt1.c1)), vt0.c2))) FROM rt0 WHERE ((CAST(NULL AS INTEGER) IN (CAST('.' AS NUMERIC)))) GROUP BY ((CASE rt0.c1  WHEN rt1.c1 THEN vt0.c2 ELSE rt1.c3 END)-(vt0.c2 COLLATE BINARY)) LIMIT -123061713;SELECT ALL ((((((((vt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt1.c4)))OR(rt0.c2)) COLLATE NOCASE FROM vt0 ORDER BY (((0.7916381326257493 IN (rt0.c1))) NOT NULL) ASC, CASE ((((((((vt0.c1)AND(vt0.c2)))AND(rt1.c0)))AND(vt0.c1)))AND(vt0.c1))  WHEN ((rt1.c4)LIKE(rt0.c0)) THEN (((vt0.c1, rt0.c0, vt0.c1))>((vt0.c1, rt0.c0, rt1.c3))) END, rt1.c2  NULLS FIRST;SELECT rt0.c2, GROUP_CONCAT((~ (rt1.c2)) COLLATE NOCASE) OVER (), CAST((vt0.c1 IN ()) AS REAL) FROM vt0, rt1;SELECT DISTINCT TRIM(DISTINCT ((rt1.c4) NOTNULL)) FROM rt0 WHERE (((+ ('-2020772548')) IN ())) ORDER BY CASE WHEN ((rt1.c0) NOTNULL) THEN QUOTE(rt0.c2) END ASC, ((((rt1.c4) NOTNULL))>((((vt0.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) DESC;SELECT ALL CASE WHEN x'' THEN ((((((((rt1.c0)AND(vt0.c1)))AND(rt1.c1)))OR(rt1.c4)))OR(vt0.c0)) ELSE (('') BETWEEN (rt1.c0) AND (vt0.c1)) END, CASE WHEN '-1946195786' THEN ((rt1.c3)|(rt0.c0)) WHEN ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt1.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c2)))OR(rt0.c1)) THEN ((rt0.c1)GLOB(rt1.c4)) WHEN ((rt1.c2)<<(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (vt0.c2)) WHEN ((vt0.c1) NOTNULL) THEN (- (vt0.c2)) WHEN LIKELY(rt1.c0) THEN (((rt0.c1))==((vt0.c1))) END, ((((((((CAST(rt0.c2 AS TEXT))AND(rt0.c1)))AND((NOT (vt0.c0)))))OR(((rt1.c0)|(rt0.c2)))))OR(((rt1.c1)%(NULL)))) FROM rt0 WHERE (CASE '0.17618832980160481'  WHEN '' THEN 0.7091317029018788 ELSE NULL END COLLATE NOCASE COLLATE RTRIM) LIMIT -2142341189 OFFSET 646142720;SELECT DISTINCT ((((rt0.c1, '733305802', rt1.c1)) NOT BETWEEN ((vt0.c0, NULL, rt0.c2)) AND ((rt1.c3, rt0.c1, rt0.c1))) IN (vt0.c2)) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE((rtreenode(x'', rt1.c0) IN ())) OVER () FROM vt0, rt1 LIMIT -2010199467; -- 1ms;
SELECT DISTINCT LOWER((vt0.c1 IN (rt1.c1))) FROM rt0, vt0;SELECT CAST(rt1.c0 AS REAL) COLLATE BINARY, ((-980444126)LIKE(CAST(rt1.c2 AS REAL))), x'726a' FROM rt0, rt1, vt0 GROUP BY (NOT (rt1.c1 COLLATE NOCASE)) HAVING ((CAST(rt1.c3 AS INTEGER))>((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c4))))) LIMIT -1608817854; -- 0ms;
SELECT ((CAST(vt0.c0 AS BLOB))-(CASE vt0.c1  WHEN rt1.c0 THEN rt1.c3 ELSE vt0.c0 END)), (((vt0.c1)) BETWEEN ((((((x'')AND(rt1.c2)))OR(rt1.c0)))) AND ((((rt1.c4)LIKE(vt0.c2))))), CASE ((rt1.c3) ISNULL)  WHEN (~ (rt1.c4)) THEN rt1.c1 COLLATE RTRIM END FROM vt0 WHERE ((0X7f0b8c39 IN ()) COLLATE RTRIM);SELECT DISTINCT NTILE(((((((((((((((rt0.c0)OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))AND(rt0.c1)))OR(vt0.c1)))OR(rt1.c4)))%((('') NOT NULL)))) OVER () FROM vt0, rt1, rt0;SELECT DISTINCT (CASE WHEN rt1.c1 THEN rt1.c3 WHEN vt0.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c3 END IN ()), (((rt1.c2, vt0.c2, rt0.c0)) NOT BETWEEN ((UPPER(rt1.c2), vt0.c0, rt0.c1 COLLATE BINARY)) AND ((((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c0)), rt1.c0 COLLATE NOCASE, ((((rt0.c1)OR(rt0.c0)))OR(rt1.c4))))), ((rt0.c2 COLLATE RTRIM)>>(LOWER(DISTINCT rt0.c2))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c1) ISNULL)) FROM rt1, rt0; -- 0ms;
SELECT ALL ((COUNT(vt0.c1)) IS FALSE) FROM rt1 WHERE (CAST(CASE WHEN '-n,?Ix[d' THEN -82435323 ELSE 0.15467028129334626 END AS REAL));SELECT DISTINCT (SUM(rt0.c0) IN ()) FROM vt0 WHERE (CAST((((x'0c83', 'B蒶', '[B\*'))<=((1344289077, NULL, NULL))) AS NUMERIC)) GROUP BY (~ (rt0.c2 COLLATE RTRIM)) ORDER BY ((json_array(vt0.c2, rt0.c0, rt1.c2, rt0.c1))*((((rt1.c3))<>((rt1.c1)))));SELECT DISTINCT (((((rt0.c1))==((vt0.c1)))) NOTNULL) FROM vt0, rt0 WHERE (TRIM(DISTINCT ((((((((1346565713)AND('')))AND(0Xffffffffbc68dce2)))AND(x'bb32')))OR(NULL)))); -- 0ms;
SELECT ALL ((vt0.c2) IS TRUE) COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT ALL '1044586347' FROM rt1, vt0, rt0 WHERE (CASE 0.3189684240620291  WHEN (('-1937094890')|(0.907254946512431)) THEN x'' END); -- 0ms;
SELECT DISTINCT (NOT (GROUP_CONCAT(vt0.c1))) FROM vt0 WHERE ((((((0.49750619649623384)) BETWEEN ((NULL)) AND (('')))) IS FALSE)); -- 0ms;
SELECT DISTINCT AVG(((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) OVER ( ROWS vt0.c0 PRECEDING EXCLUDE CURRENT ROW) FROM rt1 INNER JOIN rt0 ON ((rt1.c3)-((((rt1.c3))<>((vt0.c2))))) CROSS JOIN vt0 ON rt1.c1 WHERE (((CASE ''  WHEN -592918616 THEN 0.5518560000801758 WHEN 0.2734987363496435 THEN '-1435339356' WHEN 1346565713 THEN -1812559884 ELSE 0.15041374043883793 END) BETWEEN (0xffffffffbfa17912) AND ((- (NULL))))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt1, vt0, rt0 WHERE ((('rD>ZBV')*(x'2c90')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((SUBSTR(vt0.c1, rt0.c0))+(SUM(rt0.c2))) FROM vt0, rt1;SELECT DISTINCT (NOT (CAST(rt0.c2 AS INTEGER))) FROM rt1, vt0, rt0 WHERE ((((0.19026319805387903)>>(x'')) IN ())) GROUP BY ((rt0.c1) ISNULL) COLLATE RTRIM, LOWER((('')LIKE(x'9566'))), vt0.c2, ((rt0.c2) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c3))) AND (rt0.c2 COLLATE NOCASE)), ((((((((rt1.c2)AND(vt0.c1)))AND(rt1.c2)))OR(0.4284266562590534)))AND(rt0.c0)) COLLATE BINARY HAVING (HEX(vt0.c0) IN (0.715911676148413 COLLATE BINARY)); -- 1ms;
SELECT ALL rt1.c3 FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL SUM(((rt1.c3) IS FALSE)) OVER () FROM vt0;SELECT CAST(rt1.c4 COLLATE BINARY AS REAL) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT TOTAL(rt0.c1) OVER () FROM rt1 WHERE (rtreenode(0.2939439305029107, (('1819208945') NOT BETWEEN (x'') AND (x''))));SELECT ALL CASE ((rt1.c0)<=(rt1.c1))  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (NOT (rt1.c0)) ELSE (+ (rt1.c0)) END FROM vt0 WHERE (((CASE WHEN '1482703916' THEN '' END)>(((NULL) NOT BETWEEN (NULL) AND (NULL)))));SELECT ((STRFTIME(rt1.c2, rt1.c0, vt0.c2))<(((((rt1.c1)OR(rt0.c0)))AND(rt1.c2)))), ((AVG(rt1.c4))<(CAST(rt1.c3 AS INTEGER))), ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE, COUNT(*) OVER (), ((CAST(vt0.c1 AS INTEGER)) NOT NULL) FROM rt1, vt0, rt0 ORDER BY ((rt1.c1 COLLATE BINARY) BETWEEN (rt0.c0 COLLATE NOCASE) AND (0xffffffffe73d5917)) ASC; -- 0ms;
SELECT ALL (((rt1.c0)) NOT BETWEEN ((CAST(rt1.c2 AS TEXT))) AND ((((vt0.c1) NOTNULL)))), json_valid(((rt1.c3) NOT BETWEEN (vt0.c0) AND (rt1.c0))), (~ (((rt1.c0)GLOB(rt0.c1)))) FROM vt0, rt0 WHERE ((NOT (((NULL)>('-611913803')))));SELECT DISTINCT CASE WHEN rt1.c4 THEN rt1.c1 ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))) END, vt0.c0, ((NULL) BETWEEN (((('*d')) NOT BETWEEN ((NULL)) AND ((rt1.c4)))) AND (vt0.c2 COLLATE RTRIM)) FROM vt0, rt1 WHERE (((((('E%M2b'))>=(('-273100775'))))|(((NULL) BETWEEN (0.6454608029658364) AND (NULL)))));SELECT ALL (((((((((rt1.c4 IN ()))AND(json_type(rt0.c1))))OR(CAST(rt1.c2 AS NUMERIC))))AND(((rt1.c3)<=(0x5670d64a)))))AND(CASE rt1.c4  WHEN rt0.c1 THEN vt0.c1 END)) FROM vt0;SELECT ALL rt1.c0 FROM rt0 ORDER BY ((('*b')-(rt0.c2)) IN ()) ASC  NULLS LAST, CAST(((rt1.c2)%(rt0.c1)) AS INTEGER);SELECT ALL ((((rt1.c1))=((rt1.c3))) IN (((x'')|(rt0.c2)))), (- (((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))), (- (1.279108941E9)) FROM rt0, rt1 WHERE (((('')) BETWEEN ((CAST('/' AS INTEGER))) AND ((0.08426828315480817 COLLATE BINARY)))) UNION ALL SELECT DISTINCT AVG(((rt1.c0) NOTNULL)) OVER (), (((x'')) BETWEEN ((rt0.c2)) AND ((x''))) COLLATE BINARY, MIN(((rt0.c2)AND(vt0.c1))) FROM vt0, rt1, rt0;SELECT ((((COALESCE(DISTINCT rt1.c3, 1229664879, rt1.c4, rt1.c3))OR(((vt0.c1) IS TRUE))))AND(((rt0.c0)<(rt1.c2)))) FROM rt1, vt0 GROUP BY CAST(((rt0.c1)||(rt1.c0)) AS INTEGER) HAVING ((GROUP_CONCAT(rt1.c3))-(((rt0.c2)%(rt1.c4))));SELECT AVG((rt1.c4 IN ())) OVER ( ORDER BY ((((~ (vt0.c1))))=((rt1.c2))) ASC, rt1.c3 COLLATE RTRIM), (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (((vt0.c1)<=('/9都%\1g'))) AND (((rt1.c1) ISNULL))), ((((MIN(vt0.c2))OR(NULL)))OR(CASE rt0.c0  WHEN rt1.c3 THEN rt0.c1 ELSE rt1.c2 END)) FROM rt1 LIMIT -809134003;SELECT DISTINCT AVG(CAST(rt1.c3 AS REAL)) COLLATE NOCASE FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT SUM(((rt0.c2)||(rt1.c1))) OVER () FROM vt0, rt0, rt1 WHERE (((((('-1588686121')GLOB(NULL))))<=((((((x'')OR(0.7249715623465286)))AND(x'')))))); -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(vt0.c0), ((((rt0.c2)OR(rt1.c3)))OR(vt0.c0)), ((rt1.c4) NOTNULL)))<>(((((rt0.c2))>=((vt0.c2))), (~ (rt1.c2)), CASE WHEN x'' THEN rt1.c4 ELSE rt1.c2 END))) FROM rt0, rt1, vt0 LIMIT 768971005; -- 1ms;
SELECT ALL (((((rt1.c4)OR(rt0.c1))))!=((0.5348425435975839))), rt1.c3 COLLATE RTRIM, load_extension(((rt1.c0)LIKE(rt1.c4))) FROM vt0;SELECT DISTINCT CASE WHEN ((((vt0.c1)OR(rt1.c2)))AND(rt0.c2)) THEN ((vt0.c0) NOT NULL) END FROM rt1, vt0, rt0 LIMIT -1666963100 OFFSET 847956057; -- 0ms;
SELECT ALL rt1.c1, ((((rt1.c3)<=(vt0.c0))) IS FALSE), FIRST_VALUE(NULL) OVER ( GROUPS BETWEEN  CURRENT ROW AND (rt1.c3 IN (((vt0.c1)*(vt0.c1)), (~ (x'')))) FOLLOWING) FROM rt0 WHERE ((((NULL)||(x'')) IN (SQLITE_VERSION()))) GROUP BY ((CAST(rt1.c1 AS NUMERIC)) BETWEEN ((- (vt0.c1))) AND (((rt0.c2) IS FALSE))) HAVING ((((rt0.c2)IS(rt0.c2))) NOT BETWEEN (CASE rt0.c2  WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c2 END) AND (json_quote(vt0.c1))) ORDER BY rt1.c2, ((GLOB(rt0.c1, rt1.c1)) NOT NULL) DESC  NULLS LAST, ((((rt1.c3) BETWEEN (rt0.c0) AND (0.38700643393962175))) NOT BETWEEN ((~ (vt0.c1))) AND ('-282114466')) ASC  NULLS LAST;SELECT DISTINCT (('LK ') NOT BETWEEN (((((rt0.c1)AND(vt0.c2)))AND(rt1.c2))) AND (((rt1.c0)=(vt0.c2)))) FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY ((((rt0.c0)>(rt0.c0))) BETWEEN (HEX(vt0.c2)) AND (((rt0.c1)<(rt1.c2)))) ASC, rt1.c1  NULLS LAST;SELECT DISTINCT CASE WHEN '-962885810' THEN (((vt0.c0))!=((rt1.c2))) END FROM rt1 NOT INDEXED, vt0, rt0 WHERE ((((NULL) ISNULL) IN ('-1677252106' COLLATE BINARY, (- (NULL))))); -- 0ms;
SELECT DISTINCT LOWER(((((vt0.c0)OR(rt1.c0)))OR(vt0.c2))) FROM vt0, rt1, rt0 WHERE (((((0.3376820638180775)||('641179050'))) IS FALSE)); -- 0ms;
SELECT ALL ((((rt1.c2)>=(rt1.c0))) IS TRUE) FROM rt0;SELECT ALL SUM(((vt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2))) OVER () FROM rt1 WHERE ((CASE x''  WHEN 'N_u''' THEN 0.9667569862414942 END IN ()));SELECT DISTINCT (CASE WHEN vt0.c2 THEN vt0.c2 END IN ()) FROM rt1, vt0, rt0 WHERE ((+ (0.25509654024444073))); -- 0ms;
SELECT ALL -1677838869, ((rt0.c2 COLLATE NOCASE)=(((rt1.c2)&(rt0.c2)))), CAST(((vt0.c0)GLOB(rt1.c4)) AS INTEGER) FROM rt0, rt1 WHERE (((((((((TYPEOF(x'd5ab'))OR(((((((((0x1279d5f7)AND(NULL)))OR(x'')))AND(-1.887764429E9)))AND('?+')))))AND(CAST('1128046517' AS BLOB))))OR(((NULL) BETWEEN ('1450235466') AND (NULL)))))OR((((NULL)) NOT BETWEEN ((0.5197168141062128)) AND (('Fvﯤ釆'))))));SELECT DISTINCT ((((0.37711799400359614)AND(rt0.c2)))OR(rt1.c4)) COLLATE RTRIM, SUM(rt0.c2) OVER (), SUM(((((rt0.c0)OR(NULL)))OR(rt1.c3)) COLLATE BINARY) FROM rt0, rt1, vt0; -- 0ms;
SELECT (((+ (rt0.c0))) IS TRUE) FROM rt1;SELECT ALL LAG(((((((((((((((rt1.c4)/(rt0.c1)))OR(NULL)))OR((NOT (rt0.c1)))))AND((rt1.c2 IN ()))))OR(vt0.c2 COLLATE RTRIM)))AND((rt0.c1 IN (rt0.c2)))))OR(rt1.c2 COLLATE RTRIM)), ((((((((((((((rt1.c2)OR(vt0.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(rt1.c2)))OR(vt0.c1)))AND(vt0.c1)))+(0.32888330764333973)), CASE WHEN (NOT (rt0.c2)) THEN (((vt0.c2))<((rt1.c3))) WHEN ((rt1.c4) NOT BETWEEN (vt0.c2) AND (192823331)) THEN ((rt0.c1) BETWEEN (vt0.c2) AND (rt0.c1)) WHEN CAST(rt1.c2 AS BLOB) THEN COALESCE(DISTINCT rt1.c1, rt1.c1, vt0.c2, 0.6183700730199566) END) OVER ( ORDER BY (CAST(rt1.c4 AS INTEGER) IN ()) DESC  NULLS FIRST) FROM rt1, rt0, vt0 WHERE (CASE ((0.5065222974271721) BETWEEN (0.9636415175285039) AND (x''))  WHEN CAST('/#4<e3' AS NUMERIC) THEN UNLIKELY(x'dcbc') ELSE CASE WHEN '-vqKswm≡' THEN x'' END END); -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((CASE NULL  WHEN 62220024 THEN 'g-' WHEN '7d' THEN '' WHEN x'' THEN 1344289077 WHEN NULL THEN '-813552949' WHEN 'q#}' THEN 'Fliwn* PY' END)IS NOT(x'' COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((CASE rt0.c1  WHEN rt1.c2 THEN vt0.c2 WHEN rt0.c1 THEN vt0.c2 WHEN rt1.c4 THEN rt0.c0 ELSE rt0.c1 END)OR(json_valid(vt0.c1))))AND(((rt1.c2) NOTNULL))) FROM rt0, rt1;SELECT DISTINCT SUM(CAST(rt0.c1 AS BLOB)) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (~ (CAST(rt1.c0 AS BLOB))) FROM rt1, vt0; -- 1ms;
SELECT ALL ((((((((vt0.c1)AND(rt1.c2)))OR(rt1.c0)))AND(rt0.c1)))OR(x'')) COLLATE RTRIM, (((vt0.c2)<>('0.33511077770745834')) IN (((rt0.c2)<(rt1.c0)), (NULL IN ()))), TOTAL(((((rt1.c3)AND(vt0.c2)))AND(rt1.c3))) FROM vt0, rt1, rt0; -- 1ms;
SELECT DISTINCT vt0.c2 FROM rt0, rt1, vt0 WHERE ((NULLIF(DISTINCT x'', 'TQ}fC2') IN (CASE 0X5733fe64  WHEN '_N' THEN x'' WHEN NULL THEN x'' WHEN '309974519' THEN 0.5835011812837082 WHEN 0.544940429611894 THEN 1.833046879E9 WHEN 0.13600662770792804 THEN x'24a5' END))); -- 0ms;
SELECT CAST(((vt0.c1) NOTNULL) AS BLOB), LAG(HEX(CASE WHEN '' THEN vt0.c2 END), (((((vt0.c1)>>(vt0.c0))))<((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END))), '-356694787') OVER (), GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)) OVER () FROM vt0; -- 0ms;
SELECT (((((vt0.c2) NOTNULL)))!=((COUNT(*)))), ((((((rt0.c2)AND(rt1.c3)))AND(rt1.c4))) NOT BETWEEN (((((rt1.c0)AND(vt0.c2)))AND(0Xffffffffa6f1ed6c))) AND (((vt0.c0) NOT NULL))), ((((NULL)|(0X491eb543))) BETWEEN (CAST(vt0.c1 AS REAL)) AND ('' COLLATE RTRIM)), ((((rt0.c1) IS FALSE)) NOTNULL), CAST((0X6e1f8527 IN ()) AS INTEGER) FROM rt1 WHERE (x'');SELECT ALL (load_extension(vt0.c1) IN ()) FROM vt0, rt1 WHERE (((('0.4125469728522019', 0xffffffff9cf56951, x'043d')) NOT BETWEEN ((x'', '-291894837', 0Xfffffffff8d5c56e)) AND ((x'a4fe', 0.45039081927745495, x''))) COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT HEX(0.1432150321930512) FROM rt0, rt1, vt0; -- 1ms;
SELECT DISTINCT ('-108098407' COLLATE RTRIM IN ()) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c4)))OR(NULL)))AND(vt0.c2))  WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c2)) THEN ((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) ELSE CAST(rt1.c0 AS TEXT) END FROM vt0 WHERE (CASE WHEN ABS(0.11005348070207144) THEN 0.18863255484310504 COLLATE BINARY ELSE ((0.13366760039408887) NOT BETWEEN (0.782940037271392) AND ('0.5976926869897924')) END) GROUP BY ((~ (vt0.c1)) IN ());SELECT SUM(((x'')-(rt1.c0))) FROM rt0 WHERE ((((')j')LIKE('')) IN ((((x''))>(('-576737103'))), 0.9215977080434972))) GROUP BY CAST(((vt0.c1) ISNULL) AS REAL);SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT ALL AVG(((rt0.c1) IS FALSE)) FROM vt0;SELECT ALL (CHANGES() IN (((rt1.c4) NOT NULL))), CAST(rt1.c1 COLLATE RTRIM AS REAL), CASE x''  WHEN rt0.c1 THEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt0.c0)) WHEN (rt0.c1 IN ()) THEN ((vt0.c0)IS NOT(rt0.c2)) WHEN CASE rt1.c4  WHEN rt1.c4 THEN rt1.c2 ELSE rt0.c1 END THEN CASE vt0.c2  WHEN rt0.c0 THEN rt1.c0 ELSE vt0.c1 END ELSE (((rt1.c3)) BETWEEN ((vt0.c2)) AND ((rt1.c3))) END FROM rt1 LIMIT -1864344788;SELECT ALL (('jpl>7霞䎓s')IS(((rt1.c0) NOTNULL))), ((((rt0.c1)+(rt1.c1)))||(CAST(rt1.c2 AS BLOB))), ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END) ISNULL) FROM vt0, rt1 WHERE ((((x'' IN ())) ISNULL)) LIMIT 1368008208;SELECT DISTINCT (((((0xffffffffade5c004, rt0.c0, vt0.c1)) BETWEEN ((rt0.c0, NULL, rt0.c1)) AND ((rt1.c4, x'', rt1.c2))))-((NOT (rt1.c4)))), COUNT(CAST(vt0.c0 AS REAL)), TOTAL(rt0.c2 COLLATE BINARY COLLATE NOCASE) OVER (), PERCENT_RANK() OVER (), CAST(PRINTF(rt0.c2) AS BLOB) FROM vt0 WHERE (CAST(((((0.7186279155141168)AND(0.1780099369017435)))OR(1.088798152E9)) AS BLOB));SELECT ALL rt1.c1 FROM rt1, vt0 WHERE (((((-6.91253407E8)OR(0xffffffffbc68dce2)))OR(x'')) COLLATE BINARY) GROUP BY ((((rt0.c0) IS TRUE))<=(CASE rt1.c0  WHEN vt0.c2 THEN rt1.c2 END)) HAVING LENGTH(CAST(rt1.c2 AS REAL));SELECT ALL ((RTRIM(rt1.c4))||((~ (rt1.c0)))) FROM rt0 WHERE (((((0.9469897168066955) IS FALSE))<((- (x'fb1357e0f804')))));SELECT DISTINCT (((+ (vt0.c1))) BETWEEN ((NOT (rt1.c1))) AND (((vt0.c1)||(vt0.c0)))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) BETWEEN (x'5159') AND (rt1.c3)) AS BLOB) FROM vt0, rt0;SELECT ALL COUNT(*) OVER () FROM rt0 WHERE ((((((((((('1397973873')GLOB(x'5005')))AND((- ('qO>nKH')))))AND(NULL COLLATE RTRIM)))AND(((((x'')OR(NULL)))OR('cL')))))OR((NULL IN ())))) LIMIT -691253407; -- 0ms;
SELECT DISTINCT CAST(((vt0.c1) IS TRUE) AS INTEGER) FROM rt1, vt0, rt0 WHERE (TRIM((-2.82114466E8 IN ()), CAST('0.7342200841959545' AS INTEGER))); -- 0ms;
SELECT ALL SUM(TRIM(vt0.c1, rt1.c2)) OVER () FROM rt1 WHERE ((((0xfffffffff8d765b2) NOT BETWEEN ('-894997849') AND ('-1159489278')) IN ())) LIMIT -344825293;SELECT DISTINCT ((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(rt1.c1)) COLLATE BINARY FROM rt1, rt0, vt0 WHERE (('1217800920' IN (x'3582')) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT ALL (((~ (rt0.c1))) IS FALSE), GROUP_CONCAT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3))) OVER (), CASE WHEN '1972097563' THEN ((x'')LIKE(vt0.c0)) WHEN rt1.c3 THEN CASE vt0.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)) THEN CHAR(vt0.c2, rt0.c1, rt1.c1) ELSE (('-36132175') NOT NULL) END FROM rt1, vt0, rt0; -- 1ms;
SELECT DISTINCT CAST(((rt1.c2)>>(vt0.c1)) AS REAL) FROM vt0, rt0 WHERE ((((~ ('v3')))IS NOT(((0.18654534967434022) IS TRUE)))) GROUP BY (((((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((1.076506042E9))))<=(CAST(rt0.c0 AS REAL)));SELECT ALL ((((rt1.c3)%(rt1.c1)))|(json_type(rt1.c4))) FROM rt1, rt0, vt0 WHERE (CAST(((NULL) BETWEEN ('0.23876857126800333') AND (-1e500)) AS REAL)) LIMIT 1044586347; -- 0ms;
SELECT (((rt0.c1))<=(('pt'))) COLLATE NOCASE, (((vt0.c1 IN ()))>>((((vt0.c0, rt1.c3, 0.19912569256087198))==((rt1.c0, rt1.c0, rt1.c4))))), (((vt0.c1)LIKE(rt1.c1)) IN ()) FROM rt0 WHERE ((((('5,?,.[C''ᶵ') BETWEEN (0Xfffffffffb4ae27d) AND ('	__ꈕBV'))) NOT BETWEEN ((NULL IN (x'd30f', 'TE('))) AND (((0.8902396335247635)AND(0.3280346466783115))))) LIMIT 1474777450;SELECT CAST(rt1.c2 COLLATE NOCASE AS TEXT) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c1)) IN ()) FROM vt0, rt1, rt0 WHERE ((((NULL IN ()))>=((0.8339745175988758 IN ())))); -- 0ms;
SELECT ALL UNICODE(x'') FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (- ((('454833936')LIKE(vt0.c0)))) FROM rt0 WHERE (-1659564433);SELECT DISTINCT ((((NULL) BETWEEN (rt1.c1) AND ('1223949473')))==((((rt0.c1))>((rt0.c0))))), ((((((rt1.c4)||(vt0.c1)))AND(0.7624305651830519)))AND(COUNT(vt0.c2))), COUNT('PQDh+Rx') OVER () FROM rt1;SELECT ALL ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((+ (rt0.c2))) AND (((((((((rt0.c0)AND(vt0.c2)))OR(vt0.c1)))OR(rt1.c3)))AND(vt0.c1)))), rt1.c1, ((((rt1.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c1))) IN ()) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS BLOB)) IS FALSE) FROM rt0, rt1 WHERE (CAST(((NULL) IS TRUE) AS NUMERIC)) LIMIT 1076506042; -- 0ms;
SELECT DISTINCT (COUNT(*) IN (((((rt0.c1)AND(rt1.c4)))OR(rt0.c0)))) FROM rt0 GROUP BY vt0.c2;SELECT DISTINCT CASE rt1.c3 COLLATE RTRIM  WHEN ((rt1.c4) NOTNULL) THEN ((((((((rt1.c0)AND(rt1.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(rt1.c4)) ELSE (- (rt0.c0)) END, (((rt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))), SUM(((rt0.c1) NOT NULL)) OVER (), 0xffffffffadfef50d, COUNT(*) FROM vt0 WHERE ((((NOT ('0.514328685555784'))) NOT NULL));SELECT ALL 0.4260370840063955 FROM vt0 NOT INDEXED, rt0 WHERE (CASE WHEN x'' THEN NULL END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((vt0.c2)<<(rt0.c0)) COLLATE BINARY FROM rt1, vt0, rt0 ORDER BY (((((rt1.c3)OR(vt0.c2)))AND(rt1.c3)) IN ())  NULLS LAST, (+ ('793914128')) ASC; -- 0ms;
SELECT DISTINCT NTILE(CAST(((vt0.c0) NOTNULL) AS TEXT)) OVER () FROM rt1, vt0, rt0 WHERE (CASE '5ILdH!l^' COLLATE NOCASE  WHEN ((-525256741) NOT BETWEEN (x'') AND (x'')) THEN ((0.7546156413428096) BETWEEN (0.35324472835290677) AND ('-465857315')) END) ORDER BY ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE ASC, (NOT (((rt1.c0) NOTNULL))) DESC; -- 1ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c0))OR(((rt0.c0) NOTNULL))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)==(rt1.c0))  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(x'41d7')))OR(vt0.c2)))AND(rt0.c2)) END, (- (((('-939520433', rt1.c1, rt1.c0))>((rt1.c2, rt0.c0, rt0.c0))))), COUNT(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1))) OVER (), CASE (rt1.c3 IN (rt1.c2, rt0.c0))  WHEN ((x'ce0d')GLOB(rt0.c2)) THEN ((rt1.c4) NOTNULL) WHEN UNLIKELY(DISTINCT vt0.c0) THEN LIKELIHOOD(rt0.c0, 0.8989266073258791) WHEN ((rt0.c0) IS TRUE) THEN x'' END, CAST(((rt1.c0)LIKE(rt0.c0)) AS TEXT) FROM vt0, rt1;SELECT DISTINCT rt0.c1 FROM rt1;SELECT DISTINCT ((CASE WHEN NULL THEN rt1.c1 ELSE rt1.c0 END) BETWEEN (CAST(vt0.c2 AS TEXT)) AND ((NOT (NULL)))) FROM rt0, rt1 WHERE ((((- (NULL)))>>(((x'5a42') NOTNULL)))) LIMIT 2045830284;SELECT DISTINCT ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ()), ((HEX(rt1.c3)) NOT NULL), LIKELY(SUM(0X4a0a9ef0)), ((((((rt1.c1)OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt1.c0)) AND ((vt0.c0)))) AND (((rt0.c0)AND(rt1.c0)))), CASE CAST(vt0.c2 AS INTEGER)  WHEN TRIM(DISTINCT rt0.c2, rt1.c4) THEN CAST(vt0.c0 AS INTEGER) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END END FROM rt1, vt0;SELECT (NOT (x'')) FROM rt0 GROUP BY (((rt1.c3)IS(rt1.c0)) IN ()), (((rt0.c2)+(vt0.c2)) IN ()), CAST(CASE WHEN '-1219308071' THEN vt0.c2 WHEN '' THEN 1253662331 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END AS TEXT), SQLITE_COMPILEOPTION_GET(rt1.c0), ((CASE WHEN 0.7342272499324978 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c0 THEN 'J%~' WHEN vt0.c0 THEN -373796200 END) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) AND ('2131792326' COLLATE NOCASE));SELECT DISTINCT ((rt1.c3)>=(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c4)))) FROM vt0, rt0 LEFT OUTER JOIN rt1 ON STRFTIME(x'fc34', ((rt1.c1) BETWEEN (rt0.c1) AND (vt0.c0)), (~ (rt0.c2))) WHERE (((CAST('' AS BLOB)) NOT BETWEEN (((((0.9960304003115638)AND(-980023311)))AND(-5.92172355E8))) AND ((+ (x''))))); -- 1ms;
SELECT ALL (((rt1.c0)) BETWEEN ((((vt0.c2) ISNULL))) AND (((rt0.c0 IN ())))) FROM rt1;SELECT ALL rt1.c0 FROM rt1 GROUP BY ((((((((((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt1.c4)))AND(rt0.c2)))OR(rt1.c2)))AND(((rt1.c4) BETWEEN (rt1.c0) AND (vt0.c2)))))OR((rt0.c0 IN (rt1.c3))));SELECT ALL CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((rt1.c1)||(vt0.c0)) WHEN LIKELIHOOD(vt0.c2, 0.4230522032814841) THEN CAST(rt0.c1 AS INTEGER) WHEN 0.1084483508714229 THEN rt0.c1 COLLATE RTRIM END, ((vt0.c2)GLOB(((rt1.c0) NOTNULL))), ((NULL)&(NULL)) FROM vt0 WHERE (CASE NULL  WHEN '1527118614' THEN 'k' END COLLATE NOCASE);SELECT DISTINCT (- (((vt0.c0) NOTNULL))), (((('.j')*(vt0.c2)))IS((~ (vt0.c0)))), ((((rt0.c2)|(vt0.c2))) BETWEEN ((('GfW탣T5kzS')/(rt1.c4))) AND (rt1.c2 COLLATE BINARY)) FROM rt0, rt1 WHERE (((((NULL) IS FALSE)) BETWEEN (CAST('108016165' AS BLOB)) AND (CAST(NULL AS REAL))));SELECT (((rt1.c2, rt1.c1, rt0.c0, rt0.c1, '0.7581749486417904')) NOT BETWEEN ((COUNT(*), ((rt1.c4)IS NOT(rt0.c2)), (~ (rt1.c0)), CAST(vt0.c0 AS BLOB), (((vt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) AND (((NOT (rt1.c4)), ((rt1.c2)LIKE(vt0.c2)), CASE WHEN rt0.c2 THEN 0.7850978879112875 ELSE rt1.c0 END, TOTAL(vt0.c2), ((NULL) NOT BETWEEN (0.7807673400847674) AND (rt1.c3))))) FROM rt1, rt0, vt0 WHERE ((((x'5821')) BETWEEN ((((0.05126683659218334)<<(NULL)))) AND (((('-1552776587') IS FALSE))))); -- 0ms;
SELECT DISTINCT (((rt1.c2, rt1.c1, rt1.c1, rt1.c3, rt0.c2)) BETWEEN ((((rt1.c3)GLOB(rt0.c2)), ((rt1.c3) BETWEEN (rt1.c0) AND (0.858354983927214)), rt1.c1, TRIM(DISTINCT rt1.c0), ((1.344289077E9) BETWEEN (rt1.c0) AND (rt0.c0)))) AND ((((rt1.c3) BETWEEN (rt0.c2) AND (rt0.c1)), ((vt0.c0) BETWEEN (vt0.c1) AND (rt1.c3)), ((vt0.c1)OR(rt0.c2)), MAX(rt0.c0), (rt1.c4 IN ())))) FROM rt0, rt1 WHERE ((((('YM')AND('189419474')))>(PRINTF(x'', 1477074177, 0.9538281480193478)))) GROUP BY CASE ((rt0.c2) BETWEEN (rt0.c0) AND (NULL))  WHEN CAST(rt1.c3 AS REAL) THEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END END;SELECT CASE (rt0.c0 IN ())  WHEN ((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)) THEN (+ (vt0.c0)) END FROM rt0, rt1 GROUP BY (((((rt0.c2, rt1.c1, rt1.c0, rt1.c3, vt0.c1)) BETWEEN ((rt1.c1, vt0.c2, '21530090', rt1.c2, rt0.c2)) AND ((NULL, vt0.c1, rt0.c1, rt0.c1, rt0.c1)))) NOT NULL);SELECT ALL (((((rt1.c4) IS FALSE), rt1.c3, CASE rt0.c1  WHEN rt0.c1 THEN x'34d2' ELSE rt1.c1 END))<((CAST(rt1.c0 AS INTEGER), ((((rt0.c0)OR(x'')))OR(vt0.c1)), ((vt0.c2) IS TRUE)))) FROM vt0;SELECT DISTINCT ')VQm', ((rt1.c3) BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE RTRIM, (+ (GROUP_CONCAT(0.7581749486417904))) FROM rt1, vt0, rt0 ORDER BY ((((vt0.c2)>>(vt0.c0)))>(vt0.c2 COLLATE NOCASE)) LIMIT -374343865 OFFSET -1946195786; -- 1ms;
SELECT NULL FROM vt0, rt1, rt0; -- 0ms;
SELECT vt0.c2 FROM rt1 ORDER BY QUOTE(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c2))), ((rt0.c1)!=((rt1.c2 IN ())))  NULLS LAST;SELECT ALL rt0.c1, ((SUM(NULL)) NOT NULL), (((TOTAL(rt0.c1)))>=(((~ (rt1.c4))))) FROM rt0, rt1 WHERE (1.80368563E8); -- 0ms;
SELECT ALL ((((((rt1.c1)OR(vt0.c0)))OR(rt1.c2)))>(rt0.c1 COLLATE NOCASE)), (~ (((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c1)))), TOTAL(rt1.c4) FROM vt0, rt1, rt0 WHERE (((((('-63113340', x'', -2142341189))>=((x'a9b9', 'w)', 0X6cd58cc8))))>=(((0.986728826224855)<(0.6534985205526503))))); -- 0ms;
SELECT (((vt0.c2 IN (rt1.c1))) NOT NULL) FROM rt1;SELECT DISTINCT ((((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c4)))AND((((x''))!=((rt1.c1))))))OR(((rt1.c0) NOTNULL))) FROM rt0, vt0, rt1 WHERE (CASE (('-1962687610')&(NULL))  WHEN ((0.612873355646555)AND(4.91730856E8)) THEN (('夗x')<<(0.9869637271771496)) WHEN ((((0.7800757082488983)AND('OJKc(TUX')))AND(0xffffffffc4c96469)) THEN CAST('' AS TEXT) WHEN ((0.06290151353759887) NOT BETWEEN (-120101454) AND (x'')) THEN ((NULL)>(NULL)) WHEN ((x'') BETWEEN (NULL) AND (NULL)) THEN (((((((('7!㇪tB> ')OR('1659823231')))OR(NULL)))OR('{(8tS')))AND(x'')) WHEN CASE WHEN '膧k70/z{Vf' THEN '981754058' ELSE x'' END THEN ((NULL)<(-1986043108)) END); -- 1ms;
SELECT DISTINCT (((((rt1.c0))<((rt0.c2))))|(TOTAL(vt0.c1))) FROM rt1 WHERE ((- (CASE WHEN 0.020190586803803034 THEN NULL ELSE '7|!tᛊo.瞜' END)));SELECT DISTINCT (~ (((rt1.c3) ISNULL))) FROM rt1, vt0; -- 0ms;
SELECT ALL (((((rt1.c4)OR(-3.74343865E8)))AND(NULL)) IN ()) FROM rt1, vt0; -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((((rt0.c1) BETWEEN ('-783440564') AND (vt0.c0)))) AND ((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0))))) FROM rt0 WHERE ((('1591764309')>=(NULL COLLATE RTRIM)));SELECT SUM(((((vt0.c2)AND(rt1.c3)))AND(rt1.c3))) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP) FROM rt0, rt1, vt0 WHERE (CAST((((NULL))<>((x''))) AS REAL)); -- 0ms;
SELECT (((x'' IN ())) NOTNULL), x'', CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0 GROUP BY CAST(rt1.c3 COLLATE NOCASE AS NUMERIC) HAVING ((CAST(rt1.c3 AS INTEGER)) IS TRUE);SELECT (('62') NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))) AND (CASE WHEN rt1.c0 THEN rt1.c2 END)) FROM rt1, vt0; -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM vt0 NOT INDEXED, rt1, rt0; -- 0ms;
SELECT ALL (((rt1.c1 IN ())) ISNULL), json_type(IFNULL(rt1.c0, rt1.c4)), FIRST_VALUE(CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN rt0.c0 END) OVER () FROM rt0 WHERE ((('')IS NOT((('!I)p')&('238889652')))));SELECT ((((((vt0.c0)OR(0.5111435632375368)))OR(0.9588449931519286))) BETWEEN (((rt1.c4)/(rt0.c0))) AND (((rt1.c2)=(vt0.c1)))) FROM rt1, vt0, rt0 WHERE (COALESCE(((NULL)>>(0.11258277960154028)), ((((-637428753)OR('OP^Ykr7')))OR('Fha')))); -- 1ms;
SELECT DISTINCT json_array_length(((rt0.c2) IS TRUE), vt0.c2 COLLATE NOCASE), (((rt1.c0 COLLATE RTRIM))<=((TYPEOF(DISTINCT rt1.c2)))), ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2))) IS TRUE) FROM rt1, rt0 WHERE ((((NULL IN (NULL))) NOT NULL));SELECT ((((((((((rt1.c2)>>(rt1.c3)))AND(CAST(rt1.c4 AS BLOB))))OR(((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CASE rt1.c4  WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END)))OR(rt1.c3)), ((CAST(rt0.c1 AS REAL)) IS FALSE), ((CAST(rt1.c2 AS INTEGER)) ISNULL) FROM rt1, rt0;SELECT DISTINCT rt1.c2 FROM vt0;SELECT (((- (vt0.c1)))IS(((rt1.c2)>(rt0.c1)))), NTILE(((((rt1.c2)OR(rt1.c0 COLLATE NOCASE)))OR(((rt1.c2) BETWEEN (vt0.c1) AND (rt1.c1))))) OVER (), vt0.c1 FROM rt1, vt0 WHERE ((NOT (((x'')||(0x662f9808)))));SELECT DISTINCT CASE WHEN (~ (rt1.c0)) THEN (('m᳅뜳9b')||(rt1.c2)) ELSE ((((((((vt0.c0)OR(vt0.c1)))AND(rt1.c0)))AND(vt0.c1)))OR(rt1.c4)) END, GROUP_CONCAT(CASE WHEN vt0.c1 THEN '-419486570' ELSE rt0.c0 END) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE NO OTHERS), (((rt1.c3, '', rt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((DATE(rt0.c2, rt0.c1, rt1.c4, rt1.c1, vt0.c0), (+ (rt0.c2)), (~ (rt0.c1)), ((rt1.c1) NOT NULL), ((((vt0.c2)AND(rt0.c0)))AND(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c1) BETWEEN ('-448239287') AND (vt0.c1)), NULL, ((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c4)), UNLIKELY(DISTINCT '')))) FROM rt1, vt0 ORDER BY TYPEOF(DISTINCT ((rt1.c4)>>(rt1.c2)));SELECT rt1.c1 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT vt0.c1 FROM rt1, rt0, vt0 WHERE ((((((0.9921886357213796) NOT BETWEEN ('^1^') AND (-1887764429))))>=((((x'd1b6') IS TRUE))))) ORDER BY (NOT ((+ (rt0.c0)))) ASC  NULLS FIRST, rt0.c1, (((vt0.c2)LIKE(rt1.c0)) IN ((((rt0.c2, rt1.c3, rt1.c0)) NOT BETWEEN ((0.43811805633759127, vt0.c1, rt1.c4)) AND ((rt1.c2, vt0.c0, rt1.c1))))) ASC  NULLS FIRST; -- 1ms;
SELECT CASE WHEN CAST(rt1.c1 AS REAL) THEN vt0.c0 COLLATE RTRIM ELSE ((rt1.c0)|(vt0.c2)) END FROM rt0, rt1, vt0 WHERE (CAST(((((NULL)AND(NULL)))OR(0.13981490637725924)) AS BLOB)) UNION ALL SELECT DISTINCT NTILE(ABS(((rt0.c0) NOT NULL))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(rt1.c2 COLLATE RTRIM AS INTEGER), (- (((rt0.c1)AND(rt0.c2)))), IFNULL(DISTINCT (rt1.c2 IN (0.44170010222729605, rt1.c3)), ((rt1.c0)<(0.19423683951913562))), MAX(UPPER(DISTINCT vt0.c0)), COUNT((NOT (rt1.c2))) FROM vt0, rt1 WHERE ((((('ZR')LIKE('')))<<((0.6884579500622349 IN ('911182665')))));SELECT DISTINCT ((CASE x''  WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c2 END) NOT BETWEEN (((rt0.c0)<<(rt1.c1))) AND (rt1.c3 COLLATE RTRIM)) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL (((rt1.c1) ISNULL) IN ()) FROM rt1, rt0 WHERE ((((('') IS TRUE)) IS TRUE)); -- 0ms;
SELECT (((((rt1.c4)LIKE(rt1.c1))))==((CAST(rt1.c4 AS NUMERIC)))) FROM vt0, rt0, rt1 ORDER BY (((vt0.c2)) BETWEEN (((('U(')-(rt0.c1)))) AND ((((rt1.c3)>=(rt0.c1))))) ASC, (((vt0.c2 IN (rt0.c0)))||(((((rt1.c1)OR(rt0.c2)))OR(vt0.c1)))) ASC, (((((rt0.c0)>(rt1.c1))))<=((TRIM(DISTINCT vt0.c1)))) ASC; -- 3ms;
SELECT ((x'')+(JULIANDAY(rt1.c0, rt1.c1, rt0.c0))) FROM rt1, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT (((x''))>(('-1214241900'))), 0.5682756527727779)); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(rt1.c4)))+(DATE(vt0.c1, rt1.c3, vt0.c0))) FROM vt0;SELECT DISTINCT CAST(((rt1.c0)/(vt0.c2)) AS INTEGER), ((CASE vt0.c2  WHEN rt1.c3 THEN 0.39129130629090947 WHEN rt1.c3 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE rt1.c1 END) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((((x'ab45')OR(rt1.c1)))AND(vt0.c1)))), (((rt1.c0, rt0.c1, rt1.c4)) NOT BETWEEN ((rt0.c1, ((((rt1.c1)AND(rt1.c1)))OR(vt0.c1)), ((rt0.c0)%(rt1.c0)))) AND (((+ (rt0.c0)), ((rt0.c2) NOT NULL), CASE WHEN '1401660214' THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 ELSE '-1559882038' END))) FROM rt1;SELECT DISTINCT COUNT(*) OVER (), ((CAST(rt1.c1 AS BLOB)) BETWEEN (('153421935' IN ())) AND ((~ (rt1.c0)))), ((HEX(DISTINCT rt1.c3))<<(((rt1.c3)<>(vt0.c2)))) FROM rt1;SELECT DISTINCT rt1.c4 FROM vt0, rt1, rt0; -- 0ms;
SELECT UPPER((((rt1.c3, rt1.c3, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt1.c1)) AND ((rt1.c2, 0.7540876848585848, 'T⫋')))) FROM rt1, rt0, vt0 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c4)))) AND ((((rt1.c0) NOT NULL))))  NULLS LAST; -- 0ms;
SELECT ALL RTRIM((+ ('-1887764429'))) FROM rt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((CASE 'j8%汪'  WHEN rt1.c3 THEN rt1.c4 ELSE rt0.c1 END)AND((- (rt1.c4)))) FROM rt0;SELECT DISTINCT ((((((((CAST(rt0.c0 AS BLOB))AND(MIN(rt1.c3))))OR(AVG(vt0.c0))))OR((rt1.c2 IN ()))))AND(rt1.c3)), SQLITE_VERSION(), ((MIN(vt0.c1)) BETWEEN (((rt0.c0) BETWEEN ('') AND (rt0.c0))) AND ((vt0.c2 IN (rt1.c3)))) FROM vt0 WHERE ((~ ((((('FLbGP8J')OR(x'')))AND('u^fZ')))));SELECT DISTINCT ((((((rt0.c2)AND(rt1.c4)))AND(rt0.c0))) BETWEEN (((rt1.c3)|(rt1.c3))) AND ((rt1.c2 IN ()))), 0.8769330937640207, ((rt1.c1)GLOB(CAST(vt0.c1 AS BLOB))) FROM rt0, vt0 WHERE (((((((('-177089698')OR('29443991')))OR(NULL))))<(((- (NULL))))));SELECT DISTINCT rt1.c4 FROM rt1, rt0 WHERE (((NULL)GLOB('-647031460')) COLLATE NOCASE) LIMIT 1450235466; -- 0ms;
SELECT ALL ((CAST('' AS REAL)) NOT NULL) FROM vt0, rt0, rt1 GROUP BY ((vt0.c0)*(rt1.c3)) COLLATE NOCASE; -- 0ms;
SELECT CAST(GROUP_CONCAT(rt1.c4) AS TEXT) FROM rt1, vt0, rt0 LIMIT -98686181; -- 0ms;
SELECT DISTINCT ((x'0c9590ad') NOT BETWEEN (CASE WHEN rt1.c2 THEN rt1.c1 WHEN x'105c' THEN NULL WHEN rt0.c1 THEN vt0.c1 END) AND (CAST(vt0.c1 AS INTEGER))), (((rt0.c1)) BETWEEN ((((((((((rt0.c0)AND(vt0.c2)))OR(rt1.c1)))AND(rt1.c3)))AND(rt0.c0)))) AND (('hNVxl'))), RANK() OVER () FROM rt1 WHERE (CAST(CAST(0.0287812461993453 AS TEXT) AS NUMERIC));SELECT ALL CASE GLOB(rt1.c4, NULL)  WHEN CASE WHEN vt0.c0 THEN rt1.c3 ELSE vt0.c1 END THEN CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c1 END END, (rt1.c3 IN (rt0.c1)) COLLATE BINARY, (NOT (rt0.c0)) FROM rt0 WHERE (((((x'ad8c945c') BETWEEN (0.4241286205900411) AND ('-1890861073'))) BETWEEN ((NOT (0.6786144293036218))) AND (((((0.8602012724973354)AND(NULL)))AND(NULL)))));SELECT DISTINCT x'' FROM rt0, rt1 LEFT OUTER JOIN vt0 ON (NOT (0Xffffffffe8e4f884)) COLLATE NOCASE LIMIT 1223949473; -- 0ms;
SELECT DISTINCT (((x'')>>(rt1.c1)) IN ()) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL CAST(((rt1.c0) ISNULL) AS INTEGER) FROM rt1, vt0; -- 0ms;
SELECT ALL ((((CAST(rt1.c0 AS BLOB))OR(((rt0.c0)!=(rt1.c3)))))AND(rt0.c1 COLLATE NOCASE)) FROM rt0, vt0 ORDER BY CAST(((rt1.c1) NOT BETWEEN ('-1214241900') AND (rt0.c2)) AS REAL) DESC  NULLS LAST;SELECT DISTINCT AVG(((vt0.c1) BETWEEN (rt1.c2) AND (vt0.c1))) FROM rt0, rt1 WHERE (LIKELIHOOD(LIKELY(DISTINCT -1606085741), 0.19378942476035133));SELECT DISTINCT ((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4)))GLOB((((vt0.c2))>((rt1.c1))))), ((rt1.c2) NOT BETWEEN (CAST('뒊#p(a%*Y' AS INTEGER)) AND (((rt1.c0)OR(vt0.c2)))), ((MIN(rt0.c2))<<(((rt1.c2)>=(rt1.c1)))) FROM rt1 ORDER BY ((CAST(rt1.c4 AS TEXT))GLOB(((((((((rt0.c0)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c4)))OR(rt1.c1)))) DESC;SELECT (((NOT (rt0.c2)))<(((rt1.c3) ISNULL))) FROM rt1;SELECT ALL ((rt1.c4)/((~ (vt0.c1)))) FROM vt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1, vt0, rt0 WHERE (CASE UNLIKELY(DISTINCT 0.5503274066393068)  WHEN (('')||(NULL)) THEN 1480018957 ELSE (~ (0.8771348046715584)) END) GROUP BY ((((rt0.c0)|(rt1.c3)))LIKE(rt0.c1)), CAST(CAST(rt1.c1 AS REAL) AS BLOB), rt1.c1, CASE '뇘L{'  WHEN vt0.c0 THEN rt1.c2 END COLLATE NOCASE, (((rt1.c2 IN ()))|(((rt0.c2)<=(rt1.c2)))) HAVING CAST((rt1.c3 IN ()) AS INTEGER) LIMIT 530254039; -- 1ms;
SELECT DISTINCT ((0.18680560204051455)%(CASE WHEN vt0.c2 THEN rt1.c3 ELSE rt1.c0 END)) FROM rt0;SELECT DISTINCT CAST(rt1.c4 AS REAL) COLLATE BINARY FROM vt0, rt1; -- 0ms;
SELECT (((DATETIME(rt0.c2, rt1.c3, vt0.c2, rt0.c0, rt1.c0), rt0.c0 COLLATE BINARY, rt0.c1 COLLATE NOCASE))<=(((vt0.c1 IN ()), UPPER(DISTINCT vt0.c0), ((((((((rt1.c2)AND(vt0.c0)))OR(rt1.c3)))OR(rt1.c1)))OR(vt0.c1))))) FROM vt0, rt0 WHERE ((x'' IN (NULL)) COLLATE NOCASE);SELECT CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c1) ISNULL) THEN (('yD|p\n')OR(rt1.c2)) WHEN ABS(DISTINCT vt0.c0) THEN (((((((('-957917939')AND(rt1.c4)))AND(vt0.c2)))AND(vt0.c1)))OR(rt1.c1)) WHEN vt0.c1 COLLATE BINARY THEN rt0.c0 COLLATE NOCASE ELSE json('-1') END FROM vt0, rt1 WHERE (CASE WHEN ((0.45817411564278254)IS NOT('R!{H')) THEN (+ (NULL)) WHEN (('n,') IS TRUE) THEN ((('-1494618034'))<(('824039921'))) WHEN (((((((('1967935209')OR(x'')))OR(NULL)))AND(NULL)))AND('')) THEN (('')IS NOT(x'')) END) GROUP BY (~ (LIKELIHOOD(DISTINCT rt1.c0, 0.9073615904450869))) HAVING (+ (((0x5f0e553e)|(vt0.c2))));SELECT DISTINCT ((CAST(vt0.c2 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c1))))) FROM rt1, rt0 WHERE ((- (LENGTH(x''))));SELECT DISTINCT CAST(UNICODE(rt1.c2) AS TEXT), MAX(vt0.c2), (((((((((rt0.c0)AND(vt0.c2)))AND(rt0.c1)))AND(rt1.c2)))AND(vt0.c1)) IN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) FROM rt1, rt0 WHERE (((('1972097563' IN ()))=((((1502666959))<=((0.27376031478178753)))))) ORDER BY (((((- (rt1.c3)))AND((- (rt1.c2)))))AND(((rt1.c2)&(vt0.c1)))) ASC  NULLS LAST;SELECT ALL (((vt0.c0 IN ()))OR(((((vt0.c1)OR(rt1.c1)))AND(rt0.c1)))), NULL COLLATE NOCASE, ((COUNT('29443991')) BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c0)), (((rt1.c2 COLLATE NOCASE))<((MAX(vt0.c2)))), ABS(rt0.c0) FROM vt0, rt0, rt1 WHERE (((x'')*('0.07389552085301299')) COLLATE BINARY); -- 0ms;
SELECT ALL SUM(((rt1.c0)LIKE(vt0.c1))), SUM(CAST(rt1.c1 AS BLOB)), SQLITE_COMPILEOPTION_USED(NULL) FROM vt0, rt0;SELECT ((((UNLIKELY(rt1.c4))OR(((rt1.c0)>(rt1.c2)))))OR((- (rt0.c2)))), rt0.c0, FIRST_VALUE((~ (rt1.c0 COLLATE BINARY))) OVER ( PARTITION BY rt1.c3, ABS(rt1.c0) COLLATE BINARY) FROM rt1 WHERE ((((('-1873599388')>>(0.04894452161484575)))>(x'')));SELECT DISTINCT ((+ (rt1.c3)) IN (CAST(rt0.c0 AS BLOB), '-1199798977')) FROM rt1, vt0;SELECT ABS(DISTINCT SUM(rt0.c1)) FROM rt0, rt1, vt0 WHERE ((((- (-882179803)))<=((((1961962235)) NOT BETWEEN (('8h'']')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT (((rt1.c3)) NOT BETWEEN ((550678869)) AND (((vt0.c0 IN ())))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)))), CASE GROUP_CONCAT(vt0.c1)  WHEN '#9B' THEN rt1.c4 COLLATE NOCASE END, rt1.c1 FROM rt0 GROUP BY x'322c52cd1fd5', (~ (((vt0.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2)))), SQLITE_COMPILEOPTION_USED(((rt1.c1) IS FALSE)) HAVING rt1.c4;SELECT NULL FROM vt0, rt1, rt0 WHERE (491730856 COLLATE NOCASE) ORDER BY ((((((rt1.c1)) NOT BETWEEN ((0.7530505104453412)) AND ((vt0.c1)))))=((CASE WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c1 END))) ASC  NULLS LAST; -- 0ms;
SELECT ALL (((vt0.c2)) BETWEEN ((((rt0.c2) IS FALSE))) AND ((x'9a84'))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((('879675991' IN ())) NOTNULL) FROM rt0, vt0, rt1 WHERE ((CASE '15574817'  WHEN NULL THEN 1.847559463E9 WHEN 0.47425033718139753 THEN '-1644593402' WHEN x'' THEN NULL END IN ())); -- 0ms;
SELECT ALL (~ ((rt0.c0 IN ()))), (ABS(DISTINCT rt1.c1) IN ()), (- ((-880346270 IN (x'')))), ((((vt0.c1)>>(vt0.c1))) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (((((rt0.c1)AND(rt1.c3)))OR(rt0.c2)))), (((json_valid(rt1.c4)))>=(((NOT (rt1.c4))))) FROM rt1;SELECT DISTINCT TRIM(vt0.c1) COLLATE RTRIM COLLATE RTRIM FROM rt1, rt0 WHERE (((((NULL) BETWEEN ('1093136541') AND (NULL))) NOT NULL));SELECT COUNT(((rt0.c2) ISNULL)) OVER () FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((CAST(vt0.c0 AS BLOB))AND(CASE WHEN rt1.c1 THEN rt1.c0 END)))AND(((((vt0.c2)AND(rt1.c1)))OR(1397973873)))) DESC  NULLS LAST), LAST_VALUE(((((0.7935518525682879) NOT BETWEEN (vt0.c2) AND (rt0.c1)))=(NULL))) OVER (), GROUP_CONCAT((rt1.c3 IN ())) OVER () FROM vt0, rt0, rt1 WHERE ('-597350703') ORDER BY 0.21475244924905468 COLLATE NOCASE ASC  NULLS LAST; -- 2ms;
SELECT DISTINCT ((1.500673875E9)>=('-1705949683')) FROM vt0, rt1, rt0 WHERE (((((((((((((('-65307199' IN ()))OR(LIKELIHOOD(0.34456143092573277, 0.6142412950748695))))AND((x'6923' IN ('1450235466')))))AND(((0X6c6eecf1) NOTNULL))))OR(CASE ''  WHEN NULL THEN NULL END)))OR(load_extension(0.8388112480116644))))AND(((x'ad13')LIKE(NULL)))));SELECT DISTINCT (((vt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c2)) IN (CAST(rt0.c1 AS BLOB), ((rt1.c4) NOT NULL))) FROM vt0, rt0, rt1 WHERE (((((x'')||(0.7188405721831667))) NOT BETWEEN ((('0.5518560000801758') IS FALSE)) AND (CAST('' AS INTEGER)))); -- 0ms;
SELECT ALL rt1.c1 FROM rt1, rt0; -- 0ms;
SELECT ((((((((CAST(rt0.c1 AS BLOB))AND(NULL)))OR((NOT (x'3683f871')))))OR(((rt1.c1) NOTNULL))))OR(json_patch(rt1.c0, rt1.c4))), CAST(SUM(rt1.c1) AS NUMERIC), x'' FROM rt0, rt1; -- 0ms;
SELECT ALL (rt0.c2 IN ()) COLLATE RTRIM FROM rt1, vt0; -- 0ms;
SELECT -592918616 FROM rt1, rt0, vt0 WHERE (CASE CAST(x'' AS BLOB)  WHEN (((0x55d26cf3)) BETWEEN ((NULL)) AND ((x''))) THEN 'GWp''io1\r' WHEN (+ (x'5f55')) THEN (x'a27c' IN ()) WHEN (((('-1009973775')AND('-1353347512')))AND(NULL)) THEN ((1847964111) BETWEEN (x'') AND ('+')) END); -- 0ms;
SELECT CASE WHEN ((((rt1.c0)OR(rt0.c2)))AND(vt0.c2)) THEN HEX(DISTINCT vt0.c0) ELSE ((vt0.c1)OR(rt0.c2)) END, (((('sU	UYFq9')AND(((1.242210032E9) IS FALSE))))AND(TRIM(rt1.c0))), ((((((((((((((rt1.c3)AND(rt1.c4)))OR(vt0.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(vt0.c0)))AND(rt1.c3))) IS FALSE) FROM rt1;SELECT DISTINCT (((((rt0.c1))<=((rt0.c2)))) IS FALSE), ((rt1.c3 COLLATE BINARY) NOTNULL), ((NULL)>((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt1.c2))))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c0)) BETWEEN (((vt0.c2 IN ()))) AND ((rt1.c2))), ((((vt0.c2)OR(((rt1.c3)IS NOT(rt1.c0)))))AND(rt1.c1)), (((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt0.c0)))) IS TRUE), (~ ('6~㹚(RqbP')), NULL FROM rt0, rt1 WHERE (CAST(TYPEOF(DISTINCT 0.29778998385106725) AS INTEGER));SELECT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))))<=((((383277076) IS FALSE)))) FROM rt0, rt1 WHERE (((((0x481d5a)<(0.7342200841959545)))<=((NOT (NULL))))) GROUP BY (((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE RTRIM ORDER BY ((x'')&(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST, (((rt1.c2 IN (rt1.c4, rt0.c2, '1527118614')))OR(0.7536107358852561)); -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE BINARY) IS TRUE) FROM rt1, vt0; -- 1ms;
SELECT ALL 1129273283, x'1822', CASE WHEN TOTAL(NULL) THEN SUM(rt0.c0) ELSE rt1.c0 COLLATE NOCASE END FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE RTRIM) IS TRUE), '1408719003' COLLATE RTRIM, (~ (rt1.c3)) COLLATE RTRIM FROM rt0;SELECT ALL MAX(((rt1.c1)/(NULL))), ((((rt1.c2) ISNULL))>=(CAST(rt1.c1 AS REAL))), LAG((CASE rt0.c0  WHEN vt0.c0 THEN rt1.c4 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c4 END IN ((+ (rt1.c1)))), CASE WHEN ((vt0.c0)*(rt0.c1)) THEN (((vt0.c1)) BETWEEN ((rt1.c4)) AND ((vt0.c1))) ELSE (((rt0.c1)) BETWEEN ((x'')) AND ((rt1.c4))) END, rt1.c0) OVER () FROM rt0, vt0, rt1 WHERE (LIKELY(CASE WHEN '37790153' THEN NULL ELSE 0X1279d5f7 END)) GROUP BY rt1.c2 COLLATE NOCASE ORDER BY LOWER(DISTINCT ((vt0.c1)AND(rt1.c0)))  NULLS LAST; -- 0ms;
