-- Time: 2024/06/07 06:34:36
-- Database: database40
-- Database version: 3.40.0
-- seed value: 27988340
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'', 1029640190) WHERE 0.7656989181371116; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), (0.5052190911226462), (1985706209); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0xffffffff9c5a35a7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('C磡'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-531135070'), (0.34167375508124054), (x''); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0Xffffffffc7d67010); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x''); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''); -- 1ms;
PRAGMA mmap_size = -6205259098630504107; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('1082263034'), (-531135070), ('1082263034'), (0Xfffffffff5901509), ('1082263034'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1414292069);\n; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.22555696808468328), ('c磡'), (x''); -- 5ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, content=''); -- 1ms;
PRAGMA mmap_size; -- 0ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.3596690963176662) WHERE CASE 0.0840392852294155  WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-968030495), ('g+FCS/}'), ('-531135070'); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 7968889113197671669; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(NULL) WHERE (((~ (vt0.c0))) NOT BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (((vt0.c0)|(vt0.c0)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1142368005 1030943294 sz=1969013065 unordered'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('a\nd40OFyꍝ'), (x''), (x''); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE vt0 SET (c0, c0, c0)=(NULL, x'', NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c28; -- 1ms;
PRAGMA temp.optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
ROLLBACK TRANSACTION; -- 1ms;
DROP TABLE IF EXISTS t1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 689053334); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (1978793530), (1.414292069E9), (0.7656989181371116); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1671809625'), ('1206141385'), ('-1214192373'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
VACUUM; -- 1ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('-876783404'), (-5.3113507E8), (x''); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA main.journal_size_limit = -3257612352938030128; -- 0ms;
COMMIT TRANSACTION; -- 4ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (0.8914550603517648, '109300418', 1.969013065E9), (x'', 0xfffffffff5901509, '561018809'), (x'', '', 0x3c085e81); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.7611933657675238); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '23513'); -- 0ms;
DELETE FROM rt0; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('(8', CASE WHEN ((-1472983259) BETWEEN (x'') AND (0.5052190911226462)) THEN (NOT (NULL)) WHEN (0.3596690963176662 IN (x'3d2d')) THEN (x'16f5' IN ()) WHEN CAST(-1.75106807E8 AS NUMERIC) THEN CAST(NULL AS TEXT) END); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA automatic_index; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1631996160)%(NULL)), (((NULL, 0.8392364539023685, NULL)) BETWEEN ((NULL, '1206141385', '-104611839')) AND (('-1436529540', 'g+FCS/}', NULL))), '1030943294'))!=(((x'' IN ()), (((('-366809138')AND(NULL)))OR(-1925784285)), ((x'') NOT BETWEEN (x'') AND (x'f25f'))))); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='!,' WHERE NULL; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (UPPER(((0X6e972e6d6e9ff4f5)&(x'')))); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, '-804132408'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA temp.locking_mode = EXCLUSIVE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CAST(SUM(rt0.c1) AS NUMERIC) FROM vt1 WHERE ((((+ (0.8914550603517648)))/(CAST(NULL AS BLOB))));SELECT DISTINCT CASE AVG(vt1.c0)  WHEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)) THEN CAST('561018809' AS BLOB) ELSE vt0.c0 COLLATE NOCASE END, (((((('|<c\r0r')OR(rt0.c0)))OR(rt0.c0)))OR(((rt0.c0)>>(vt1.c0)))), (((((vt0.c0, rt0.c1, '-1860192350'))>((vt1.c0, vt0.c0, rt0.c1))))+((- (0.8886088552992543)))) FROM rt0;SELECT CASE WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt0.c1)) THEN DATE(rt0.c2, rt0.c0, rt0.c0) ELSE ((rt0.c1)<=(rt0.c0)) END FROM vt1, vt0, rt0 WHERE ('0.8914550603517648'); -- 0ms;
SELECT DISTINCT ((QUOTE(rt0.c1))&(((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))) FROM rt0;SELECT (NULL IN ()) FROM vt1 WHERE ((NOT (CAST(NULL AS NUMERIC)))) LIMIT -476671341 OFFSET 1; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((0.5052190911226462)))))=((rt0.c2 COLLATE RTRIM))), FIRST_VALUE((NOT (TYPEOF(rt0.c2)))) OVER (), ((LIKELIHOOD(vt1.c0, 0.921877641739472)) BETWEEN (((x'')*(rt0.c2))) AND ((rt0.c2 IN (vt1.c0)))) FROM vt0, rt0, vt1 WHERE ((((x'b034')) NOT BETWEEN (((0.15492036829806421 IN ()))) AND ((('w_]d\~A' IN (0.28441245336313825)))))); -- 0ms;
SELECT DISTINCT 0.5657536884402365, GROUP_CONCAT(CAST(vt0.c0 AS BLOB)), (((~ (rt0.c2)))*(vt0.c0)) FROM vt0;SELECT DISTINCT MAX(((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) COLLATE RTRIM FROM rt0, vt1, vt0 GROUP BY (((vt0.c0, rt0.c1, vt1.c0, rt0.c1, '')) BETWEEN (((rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, CASE rt0.c2  WHEN 0.6129567637425519 THEN rt0.c2 ELSE rt0.c2 END, rt0.c1, json_object(rt0.c1, rt0.c2))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (vt0.c0 IN (rt0.c0)), ((((rt0.c2)AND(vt1.c0)))OR(vt0.c0)), CAST(rt0.c0 AS TEXT), (vt0.c0 IN (vt0.c0))))) HAVING ((rt0.c1) NOTNULL) COLLATE RTRIM; -- 0ms;
SELECT ALL ((((((vt0.c0)||(rt0.c2)))OR(vt0.c0 COLLATE BINARY)))OR(((rt0.c2)<<(vt1.c0)))), CAST((rt0.c1 IN (rt0.c1, rt0.c0)) AS TEXT), ((CAST(vt0.c0 AS BLOB)) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (CASE rt0.c0  WHEN vt0.c0 THEN -1345895360 ELSE rt0.c1 END)) FROM vt0, rt0, vt1 WHERE ((((~ (0xffffffffe05785a2)))/(((0.5762663775880922) BETWEEN (NULL) AND (''))))) GROUP BY ((rt0.c1) BETWEEN (((vt1.c0)+(NULL))) AND (rt0.c2 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (('789892440')/((vt1.c0 IN ()))), LAST_VALUE(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY) OVER (), SUM(MAX(CAST(vt1.c0 AS NUMERIC))) FROM vt0 GROUP BY NULL LIMIT -1671809625;SELECT DISTINCT ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))>=((vt0.c0 IN ()))) FROM vt0;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) ISNULL) FROM vt1 LIMIT 1475916934;SELECT DISTINCT (rt0.c2 IN ()) COLLATE RTRIM, CAST(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)) AS NUMERIC), (((rt0.c2 IN ()))IS(((0.3792068244360931) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) FROM rt0, vt0, vt1 WHERE (((((CAST(0.2290433389955372 AS REAL))AND((((('-366809138')OR(NULL)))OR('1475916934')))))AND((('>')GLOB(x'a9f4'))))) GROUP BY CAST(((vt1.c0)<<(rt0.c2)) AS INTEGER) HAVING (rt0.c1 IN (rt0.c2)) COLLATE NOCASE ORDER BY ((- (rt0.c2)) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) THEN CASE 'iY'  WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c2 END ELSE (~ (rt0.c1)) END FROM vt0 WHERE (TYPEOF(((NULL)IS NOT(x'9338'))));SELECT DISTINCT ((- (vt0.c0)) IN (((rt0.c1) IS TRUE))) FROM rt0, vt1;SELECT DISTINCT '' FROM vt1 WHERE (((CASE WHEN '' THEN x'' END) ISNULL)); -- 0ms;
SELECT NTILE(((((rt0.c2) IS TRUE)) NOT BETWEEN (rt0.c2) AND (rt0.c2 COLLATE RTRIM))) OVER (), (((((((((NOT (rt0.c2)))AND(rt0.c0)))OR(CASE 0.30421885675233684  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE NULL END)))AND(x'')))OR((NOT (rt0.c2)))), CAST(((rt0.c2) NOT BETWEEN (vt0.c0) AND (NULL)) AS BLOB) FROM vt1, rt0 WHERE ((((NOT (-1.43652954E9))) NOT BETWEEN (((NULL) NOT BETWEEN (0Xffffffffb82e52b4) AND (''))) AND ((0.6834532085071774 IN (''))))) ORDER BY CAST(CASE WHEN x'191d' THEN 3.12583005E8 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END AS REAL) DESC  NULLS FIRST, ((1.7976931348623157E308)<(NULL)) ASC;SELECT ALL (~ ((vt0.c0 IN ()))) FROM vt1, rt0, vt0 WHERE ((((((~ (0.01552539469221248)))OR(((0.2446917679101367) BETWEEN (0.7465172756478108) AND (x'')))))AND((('0.3792068244360931')>=(0.857740593049945))))); -- 0ms;
SELECT NULL, CASE CAST(rt0.c2 AS BLOB)  WHEN (- (vt0.c0)) THEN (rt0.c1 IN (rt0.c0, rt0.c2)) END, rt0.c1, CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) AS INTEGER), LIKELIHOOD(DISTINCT COUNT(*), 0.8291819113722408) FROM vt1;SELECT DISTINCT ((((((x'')AND(vt1.c0)))OR(rt0.c2)))<>((rt0.c0 IN ()))) FROM vt0, rt0 GROUP BY CASE WHEN ((NULL)>=(vt1.c0)) THEN ((((rt0.c1)OR(vt1.c0)))OR(0.0442777687819057)) WHEN CASE '-635332826'  WHEN rt0.c2 THEN rt0.c2 END THEN (NOT (vt0.c0)) WHEN RTRIM(vt0.c0) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END ELSE ((((((((vt0.c0)AND('-287838436')))OR(vt0.c0)))AND(rt0.c2)))AND(vt1.c0)) END, ((((vt1.c0)*(rt0.c1)))||(((rt0.c2)+(vt1.c0)))), ((((CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END)AND(CASE ''  WHEN rt0.c1 THEN vt0.c0 END)))OR(vt1.c0 COLLATE NOCASE)) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST;SELECT GROUP_CONCAT(CAST(rt0.c0 AS REAL)), CASE vt1.c0  WHEN x'9707' THEN ((rt0.c1)*(vt1.c0)) ELSE vt1.c0 COLLATE RTRIM END, ((((((('-1436529540')AND(0.16391167237393223)))OR(rt0.c0))))>=((((((vt0.c0)AND(NULL)))AND(NULL))))) FROM rt0 WHERE (((NULL)>>('1081287760')) COLLATE NOCASE) EXCEPT SELECT MAX((((rt0.c0, rt0.c2, rt0.c2, vt0.c0, '', rt0.c2, vt1.c0)) BETWEEN ((rt0.c0, 0.7571935152718353, rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c2)) AND ((-1.34589536E9, vt0.c0, vt1.c0, rt0.c0, 0.9765283249038651, vt0.c0, -1345895360)))), ((((vt1.c0 COLLATE NOCASE)OR((((vt0.c0))>((x''))))))AND(((((vt0.c0)OR(rt0.c2)))AND(vt1.c0)))), (((CAST(rt0.c1 AS REAL), AVG(rt0.c0), CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))<((rt0.c2, CASE WHEN NULL THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN NULL THEN -287838436 END, ((rt0.c1)<=(vt1.c0))))) FROM vt1 GROUP BY TRIM(DISTINCT (rt0.c0 IN ()), (- (vt0.c0))) HAVING LIKELY(vt0.c0 COLLATE BINARY);SELECT DISTINCT (((((vt0.c0 IN ()))OR(vt1.c0)))AND(MAX(rt0.c0))) FROM vt1 WHERE ((((((NOT (NULL)))OR(((0.5331469018760968) BETWEEN (x'') AND (0.42172355986919097)))))AND(((('615341780')) NOT BETWEEN (('')) AND ((x''))))));SELECT DISTINCT SQLITE_COMPILEOPTION_GET(x'b7ed') FROM vt0 WHERE (CASE 1007181441  WHEN x'' THEN 0.1432583179239465 WHEN '|<c\r0r' THEN 'y' WHEN NULL THEN x'' ELSE '16910864' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (('<zk{/7je') BETWEEN ((((rt0.c0, rt0.c2, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c2)))) AND (CAST(rt0.c1 AS REAL))) FROM vt1;SELECT DISTINCT ((CAST(vt1.c0 AS REAL))%(rt0.c0 COLLATE RTRIM)) FROM vt0, vt1, rt0 LIMIT -1925784285 OFFSET 1816970243; -- 0ms;
SELECT CASE TYPEOF(DISTINCT rt0.c0)  WHEN CAST(rt0.c1 AS REAL) THEN vt1.c0 ELSE ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) END FROM rt0 LIMIT -830986459;SELECT DISTINCT ((CASE WHEN '-1436529540' THEN rt0.c1 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0) AND (((rt0.c2) NOT NULL))) FROM vt1, rt0, vt0; -- 0ms;
SELECT CAST(rt0.c2 AS REAL) COLLATE BINARY, COUNT((- (rt0.c0))), (- (TOTAL(vt1.c0))) FROM vt1 WHERE (((((('-1481864153')OR(0.7571935152718353)))AND(NULL)) IN (ABS(0.4011237327305589)))) LIMIT 643631620;SELECT 0X755cc149, TOTAL(LIKE(rt0.c2, rt0.c0)) OVER (), (((((rt0.c2, vt1.c0, rt0.c1, rt0.c2, rt0.c1))<=((rt0.c2, rt0.c2, rt0.c1, NULL, rt0.c0)))) NOT NULL) FROM rt0, vt1, vt0; -- 0ms;
SELECT ALL (NOT (COUNT(*))), 2022129578, CASE WHEN ((vt0.c0)GLOB(rt0.c0)) THEN vt0.c0 END FROM rt0;SELECT DISTINCT CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN ((rt0.c0) BETWEEN (0.5236018953895719) AND (rt0.c0)) WHEN NULL THEN COUNT(*) WHEN (- (vt1.c0)) THEN (- (rt0.c2)) ELSE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (x'')) END FROM vt1, rt0;SELECT DISTINCT (~ (SUM(rt0.c1))) FROM vt1;SELECT ALL ((vt1.c0)=(vt0.c0)) COLLATE BINARY FROM vt1;SELECT ALL CAST(((((rt0.c1)AND(x'30a5b9f3')))OR(vt0.c0)) AS NUMERIC) FROM vt0, vt1, rt0 WHERE ((((('EO霦ᤥ/,') ISNULL))<<(((x'')LIKE(NULL))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1, rt0, vt0 WHERE (CASE WHEN (~ (x'')) THEN ((('', 0.3075761923875413, 0Xffffffffc7d67010)) BETWEEN (('1081287760', 1.206141385E9, 'i+孀B<')) AND (('1Hj', 'blIӚ', '-1481864153'))) WHEN ((0.49868214855068094) ISNULL) THEN ((x'b480')*(0.7656989181371116)) WHEN load_extension(NULL, 'sۜ뜀窊c') THEN SQLITE_COMPILEOPTION_GET(NULL) END); -- 0ms;
SELECT ALL ((((vt0.c0, rt0.c1, vt0.c0))<>((rt0.c0, rt0.c0, 0.9765283249038651))) IN (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)) FROM vt1, vt0 WHERE (((('1985706209' IN ()))+(((x'')>=('109300418'))))) LIMIT -1919736995 OFFSET -1895884246;SELECT DISTINCT rt0.c2, ((((vt1.c0) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt1.c0)=(rt0.c2)))), ((((vt0.c0)AND(rt0.c1)))*(LIKELIHOOD(rt0.c0, 0.6203797365202598))) FROM vt0;SELECT ALL UPPER(DISTINCT rt0.c0), CASE NULL  WHEN vt1.c0 THEN rt0.c2 END COLLATE NOCASE, ((((rt0.c2)AND(0.01552539469221248)))OR((rt0.c2 IN ()))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT RANK() OVER (), ((((vt1.c0)+(rt0.c1)))OR((vt0.c0 IN (rt0.c2)))), (((load_extension(rt0.c2)))=((rt0.c0))) FROM vt1, vt0, rt0 WHERE (((x'bbf2' COLLATE NOCASE)&((+ ('\rw8扥'))))); -- 0ms;
SELECT ALL ((((((((rt0.c1)OR(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(TYPEOF(DISTINCT rt0.c2))))OR(vt1.c0 COLLATE BINARY)))AND((NOT (vt1.c0)))), x'66010f07', (((0Xffffffffd85895af)<>(vt0.c0)) IN ()) FROM rt0, vt1, vt0; -- 0ms;
SELECT ALL rt0.c1, ((NULL) NOT NULL), '1081287760' FROM vt1, vt0, rt0 WHERE ((((- (0Xffffffffa0768494))) NOT BETWEEN ((0.21085877850454104 IN ('fp4', 'T'))) AND ((((('wzJ1扥')OR(x'')))OR(1871404506))))); -- 0ms;
SELECT ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)))GLOB(((1955637400) NOT NULL))) FROM vt0, vt1, rt0; -- 0ms;
SELECT '-968030495' FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT LAG(rt0.c2, ((((((rt0.c2)%(rt0.c0)))OR((- (rt0.c2)))))AND(TRIM(rt0.c0))), rt0.c2) OVER (), (((rt0.c0)<(vt0.c0)) IN ('', ((rt0.c0)GLOB(vt0.c0)))), SUM(0.021196378576923802) OVER () FROM rt0 WHERE (CAST(((NULL)LIKE('owg')) AS INTEGER));SELECT DISTINCT CAST((((0.16391167237393223))<((rt0.c1))) AS REAL), ((((rt0.c2)GLOB(rt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (vt1.c0)), ((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR('g+fcs/}')))<<(vt1.c0)) FROM vt0 GROUP BY ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))||(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))));SELECT DISTINCT CAST(((rt0.c1) IS FALSE) AS INTEGER) FROM rt0, vt0, vt1 WHERE ((+ ((((NULL))<=((x'')))))); -- 0ms;
SELECT DISTINCT (+ (AVG(rt0.c0))), CASE WHEN ((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE rt0.c0 COLLATE BINARY END, ((LIKELIHOOD(vt0.c0, 0.2529251179523164))|((((0.2211758445707367))>((rt0.c0))))) FROM vt1, vt0, rt0 WHERE ((NOT (((x'') NOT BETWEEN (0xffffffffb1ec28de) AND (0.7019556785684317))))) LIMIT -635332826 OFFSET -176571198; -- 0ms;
SELECT COUNT(CAST(rt0.c1 AS NUMERIC)) FROM vt0, rt0, vt1 WHERE (0.35363496907817926) ORDER BY (((rt0.c1, vt1.c0, vt0.c0, 0.6922919719733971, vt1.c0))<=((rt0.c2, rt0.c1, x'', rt0.c1, vt1.c0))) COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)>(rt0.c2)) AS REAL) FROM rt0, vt0 WHERE ((~ (((('', 0.8856229433662302, 312583005)) BETWEEN (('', '1', '0.5052190911226462')) AND (('', '1029640190', 0.16391167237393223)))))); -- 0ms;
SELECT ALL ((((rt0.c0) IS TRUE))<=((NOT (rt0.c2)))) FROM vt1, vt0 WHERE (CAST(0X0 COLLATE BINARY AS NUMERIC));SELECT DISTINCT CASE (- (rt0.c2))  WHEN SUM(vt0.c0) THEN COUNT(vt1.c0) END FROM vt1, rt0, vt0 LIMIT 1333127317 OFFSET 1417371806; -- 1ms;
SELECT DISTINCT NULL, SUM(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt0.c0 THEN '1225284479' WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END), ((vt1.c0) NOT BETWEEN (TRIM(vt0.c0, rt0.c2)) AND (CAST(vt0.c0 AS NUMERIC))) FROM vt1, vt0 WHERE (LIKELIHOOD(((x'f123')+('1417371806')), 0.8969109706968862)) INTERSECT SELECT ALL NULLIF(DISTINCT ((rt0.c0) NOTNULL), UNLIKELY(DISTINCT vt1.c0)), ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((' bal孀jl~'))), (vt0.c0 IN (rt0.c0, vt0.c0)), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c0))))<>(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c0, ((rt0.c2) IS TRUE)))), NTILE(-665283153) OVER () FROM rt0 WHERE ((((0.6860608138705077)) NOT BETWEEN ((CASE WHEN 0.31958754394777134 THEN '592568496' ELSE x'' END)) AND ((0x3e4007e3))));SELECT vt1.c0, CAST((vt0.c0 IN (rt0.c2)) AS INTEGER), CAST(AVG(rt0.c1) AS BLOB) FROM vt0 WHERE (CAST((('ꈷ#cSF8HE+')AND(NULL)) AS INTEGER));SELECT DISTINCT CAST(x'a495' AS NUMERIC) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT LAG((((('-1069316119')OR(((rt0.c1)|(rt0.c0)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))), x'0b91', ((((((((((vt1.c0)+(rt0.c2)))OR(vt0.c0)))AND((rt0.c2 IN ()))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))))AND(COALESCE(DISTINCT rt0.c1, rt0.c2)))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0, vt1, vt0 WHERE (((((((((x'')OR('0.34167375508124054')))OR(x'')))OR(('1030943294' IN ()))))OR((((('0.01552539469221248')AND(NULL)))AND(NULL))))) ORDER BY CAST(((vt0.c0)>>(vt0.c0)) AS NUMERIC)  NULLS LAST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY ((UPPER(x''))/(((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))), CAST(((((rt0.c1)OR(vt1.c0)))AND(vt0.c0)) AS INTEGER)) FROM rt0, vt1, vt0 WHERE (((CASE WHEN x'' THEN x'7380' ELSE '320387915' END)<=(IFNULL('-531135070', '1030943294')))); -- 1ms;
SELECT ((((((rt0.c0)*(vt1.c0)))OR(((rt0.c1)LIKE(rt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))), GROUP_CONCAT(x'') OVER (), '()', ((((rt0.c1)<=(rt0.c1))) BETWEEN (CAST(0.21116456820961427 AS INTEGER)) AND ((((NULL, rt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c2))))), CASE ((NULL)<<(x''))  WHEN ((NULL)+(vt0.c0)) THEN (rt0.c1 IN ()) WHEN (('-968030495') NOT BETWEEN (x'') AND (rt0.c2)) THEN rt0.c0 WHEN rt0.c0 COLLATE BINARY THEN ((NULL)!=(rt0.c2)) WHEN ((rt0.c1)*(vt1.c0)) THEN (rt0.c2 IN (vt0.c0)) WHEN NULL THEN vt0.c0 END FROM rt0 WHERE ((((NULL IN ())) BETWEEN ((((x''))>(('2	~\VsaV/')))) AND (((0.10974339773925534) IS FALSE))));SELECT ((((((rt0.c2)LIKE(vt0.c0)))AND((~ (rt0.c1)))))OR(((((rt0.c0)OR(vt1.c0)))AND(rt0.c2)))) FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT (~ ('G%')) FROM vt0, vt1, rt0; -- 0ms;
SELECT ALL ((0.26515061753739433)>>(((vt1.c0)!=(rt0.c0)))), SQLITE_COMPILEOPTION_USED((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))), (~ (x'c29b')) COLLATE NOCASE COLLATE NOCASE FROM vt1;SELECT DISTINCT x'' FROM rt0, vt1, vt0; -- 0ms;
SELECT vt0.c0, HEX(MIN(vt0.c0)), (((vt1.c0) NOT BETWEEN (x'') AND (vt0.c0)) IN ()) FROM rt0, vt0 WHERE (CAST('1414292069' COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT DISTINCT TYPEOF(vt0.c0) COLLATE BINARY, CAST(((('789892440', rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, vt1.c0)) AND ((vt0.c0, vt1.c0, rt0.c1))) AS REAL), vt1.c0 FROM rt0, vt0, vt1 WHERE (SQLITE_SOURCE_ID()) GROUP BY (- (STRFTIME(vt0.c0, x'7061c2c0', vt0.c0))) ORDER BY rt0.c2  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((rt0.c0))=((rt0.c1))))AND(((((((((rt0.c0)OR('712562922')))OR(vt0.c0)))AND('FALSE')))OR(rt0.c2)))))OR(CAST(rt0.c2 AS TEXT))), CASE WHEN ((rt0.c2) NOTNULL) THEN 0.021196378576923802 END, TOTAL(((vt1.c0)LIKE(vt1.c0))) OVER () FROM vt1, rt0 GROUP BY (((vt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN (((('-2010471881') NOT BETWEEN (rt0.c2) AND (rt0.c1)), (('.f}7᡻')LIKE(rt0.c1)), SUBSTR(rt0.c2, rt0.c0))) AND ((CAST(vt1.c0 AS BLOB), vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS REAL))));SELECT ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END)>=(COUNT(*))), ROW_NUMBER() OVER (), IFNULL(DISTINCT ((vt1.c0) ISNULL), ((vt1.c0)LIKE(rt0.c0))) FROM vt1, rt0 WHERE (((CAST(NULL AS BLOB))+(LOWER(DISTINCT 'S7')))) LIMIT 559092068 OFFSET -642640293;SELECT ((((((((((((rt0.c0 COLLATE NOCASE)AND(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 END)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))))OR(((((vt1.c0)AND(rt0.c2)))OR(NULL)))))OR((- (rt0.c0)))))OR((- (vt0.c0)))))AND(TOTAL(rt0.c1))) FROM vt1, rt0 ORDER BY CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT);SELECT ALL ROW_NUMBER() OVER (), AVG((vt0.c0 IN ())) OVER (), ((((rt0.c0)IS(vt0.c0)))>=((- (rt0.c0)))) FROM vt0 WHERE (CAST(((x'10c8')>=(NULL)) AS BLOB));SELECT ALL ((TRIM(DISTINCT 488709421))!=(SUM(vt1.c0))) FROM vt0 GROUP BY (((((vt1.c0))<=((rt0.c0)))) NOT BETWEEN ((((rt0.c1))<>((vt1.c0)))) AND (CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) HAVING UPPER(((NULL)-(rt0.c1)));SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)<=(((vt0.c0) NOTNULL))) FROM vt1, rt0;SELECT ALL UPPER(((vt0.c0) IS FALSE)) FROM vt1, rt0 GROUP BY ((((NOT (vt0.c0))))<=((((vt0.c0) NOTNULL)))), (((((rt0.c2, vt0.c0, 't#fꍝ'))>((rt0.c2, vt0.c0, vt0.c0))))>>(((vt0.c0) BETWEEN (rt0.c1) AND (NULL)))), ((((CASE WHEN rt0.c2 THEN vt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) HAVING vt1.c0;SELECT DISTINCT (~ (vt1.c0)) COLLATE BINARY FROM vt1, vt0 UNION ALL SELECT DISTINCT ((((vt0.c0)/(vt1.c0)))GLOB(COUNT(*))) FROM vt0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))LIKE(((rt0.c2) IS FALSE))) FROM rt0 WHERE (CAST(((((NULL)AND('-132169526')))AND(NULL)) AS REAL));SELECT LTRIM(rt0.c1 COLLATE RTRIM, x'') FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (~ (((((((((vt0.c0)AND(rt0.c0)))AND(vt1.c0)))AND(0.30938980293781326)))AND(x'3019')))), NULL, ((((rt0.c0)>>(vt0.c0))) BETWEEN (((vt0.c0)<>(vt1.c0))) AND (TOTAL(vt1.c0))) FROM rt0, vt0;SELECT CAST(rt0.c1 AS INTEGER) COLLATE BINARY, vt1.c0, (- (((x'')<>(vt0.c0)))) FROM vt1 ORDER BY CASE WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END END;SELECT DISTINCT GROUP_CONCAT(rt0.c1 COLLATE RTRIM) OVER () FROM rt0, vt1; -- 0ms;
SELECT ALL vt0.c0 FROM vt1, vt0, rt0 WHERE (CASE WHEN ((((((((NULL)AND('')))AND(x'7e36')))AND(0.318835182446769)))OR(NULL)) THEN 0.3939455989111995 COLLATE RTRIM ELSE ((('z윙'))>(('-1686158453'))) END); -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) NOTNULL)  WHEN (((rt0.c2, vt1.c0, rt0.c2)) NOT BETWEEN ((NULL, rt0.c2, rt0.c1)) AND ((vt1.c0, vt1.c0, rt0.c1))) THEN ((((((((0.6764628143679368)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(rt0.c1)) ELSE NULL END FROM vt0 WHERE (((CAST(x'3f88' AS REAL)) NOT BETWEEN (((-175106807)=(''))) AND (UNLIKELY(NULL))));SELECT ALL ROUND(((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c1)))OR(NULL)))OR(vt0.c0)), rt0.c1 COLLATE RTRIM) FROM rt0, vt1, vt0 WHERE ((('-730107675' COLLATE BINARY)+((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt1.c0)))&(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END)), SUM((~ (vt0.c0))) OVER (), (- (((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))) FROM rt0, vt1, vt0 WHERE ((- (((('592568496')) BETWEEN (('a\nd40ofyꍝ')) AND ((0.1465452626136502)))))); -- 0ms;
SELECT ALL CASE WHEN SUM(rt0.c1) THEN vt1.c0 END, ((MIN(rt0.c1))+(vt0.c0)), CASE TYPEOF(DISTINCT rt0.c1)  WHEN ((vt1.c0)!=(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END, ((rt0.c0 COLLATE RTRIM) ISNULL), SQLITE_COMPILEOPTION_GET((vt1.c0 IN ())) FROM vt0, vt1;SELECT ALL vt1.c0, ((UPPER(rt0.c0)) NOT NULL), (- (((vt0.c0) NOT NULL))) FROM rt0, vt1 WHERE (((CASE WHEN 'C+븵' THEN '' ELSE NULL END) NOT NULL));SELECT ALL LAST_VALUE(rt0.c1) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL (((IFNULL(DISTINCT vt1.c0, rt0.c2)))>=((((rt0.c1)-(vt1.c0))))) FROM vt1, vt0, rt0 WHERE (NULLIF(DISTINCT '-743919848' COLLATE BINARY, LOWER(x''))); -- 0ms;
SELECT ALL TRIM(DISTINCT ((((0.20361388917718293)OR(vt1.c0)))OR(vt1.c0))), ((vt0.c0 COLLATE NOCASE)>=(((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))), ((- (rt0.c2)) IN ()) FROM vt1, vt0, rt0 WHERE (((CAST(0.5699511274192804 AS REAL))IS(((((0.47087932437183233)AND(-14990217)))OR(0.3010563820018851))))); -- 1ms;
SELECT (((rt0.c2, rt0.c2, vt1.c0)) NOT BETWEEN ((SQLITE_SOURCE_ID(), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), NULLIF(vt1.c0, rt0.c0))) AND ((0.5901514476064937, ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), CHAR(vt1.c0)))), (- (((vt1.c0)<<(rt0.c2)))), NTH_VALUE(x'1b6eec74', rt0.c1 COLLATE NOCASE) OVER () FROM rt0;SELECT DISTINCT CASE WHEN rt0.c2 THEN ((rt0.c0)GLOB(rt0.c2)) ELSE (vt1.c0 IN (rt0.c2, rt0.c2)) END FROM rt0, vt0 WHERE (-5.3113507E8);SELECT ((IFNULL(rt0.c1, rt0.c2))<=(COUNT(*))), (((((~ (NULL)))AND(((rt0.c0) IS FALSE))))AND((- (rt0.c1)))), COUNT(*) FROM rt0, vt0, vt1; -- 0ms;
SELECT ALL (((- (vt0.c0)))/(rt0.c1 COLLATE NOCASE)) FROM vt1, vt0, rt0 LIMIT -866416846 OFFSET -1255726937; -- 0ms;
SELECT DISTINCT 0.6655198047685011 FROM vt0, vt1 ORDER BY CASE WHEN vt1.c0 THEN ((((vt1.c0)OR(rt0.c2)))OR(rt0.c2)) END ASC  NULLS LAST, 0.6379858944178013;SELECT DISTINCT SQLITE_SOURCE_ID(), ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c1)) COLLATE BINARY, x'e507' FROM vt0, vt1, rt0; -- 0ms;
SELECT ALL ((((((((((NULL)<>(rt0.c0)))OR(rt0.c2)))OR(((rt0.c2)&('weekday')))))OR(((rt0.c0) IS TRUE))))AND(MAX(x'bf8e'))) FROM rt0, vt0, vt1 WHERE (CASE WHEN CAST('0.7611933657675238' AS BLOB) THEN '\Mazk' END); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c2))) OVER () FROM vt1, rt0, vt0 WHERE (((((NULL) IS FALSE)) IS TRUE)) EXCEPT SELECT CAST((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'713b', '7}&US2	j扥', rt0.c2)) AND ((rt0.c0, rt0.c2, 0.5903385844773753))) AS REAL) FROM vt0 WHERE (TYPEOF(DISTINCT 'h?n~扥%'));SELECT DISTINCT CASE WHEN ((vt0.c0) ISNULL) THEN rt0.c2 COLLATE BINARY WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN ((((NULL)AND(vt0.c0)))AND(rt0.c2)) THEN ((rt0.c2)||(vt1.c0)) END, ((((((rt0.c2) NOTNULL))AND(((rt0.c2)IS NOT(rt0.c1)))))OR(vt0.c0 COLLATE RTRIM)), (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))=((- (rt0.c1)))) FROM vt0 WHERE (CASE (x'' IN ())  WHEN CASE WHEN NULL THEN x'' WHEN 0xfffffffff1d62341 THEN x'' WHEN '-559140395' THEN NULL ELSE -698495178 END THEN CAST(x'' AS BLOB) WHEN (NOT (NULL)) THEN CASE WHEN 0.2244421559379154 THEN -6.35332826E8 WHEN '-1309923106' THEN 0x6b83743f WHEN 0.31958754394777134 THEN '-665283153' END WHEN ((NULL) BETWEEN (0.9669395371384344) AND (x'')) THEN ((NULL)%(0.03848820929813557)) ELSE CAST(NULL AS BLOB) END);SELECT DISTINCT TRIM(rt0.c0 COLLATE RTRIM, CAST(rt0.c0 AS TEXT)), (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), ((x'') ISNULL), rt0.c0))!=((CAST(rt0.c0 AS TEXT), rt0.c1 COLLATE BINARY, (((rt0.c0, rt0.c2, rt0.c0, '', vt1.c0))<=((x'', rt0.c0, vt0.c0, vt1.c0, vt1.c0)))))), (((((rt0.c0)|(1169453375))))<=((rt0.c2 COLLATE RTRIM))) FROM vt1, rt0, vt0 GROUP BY (((rt0.c1)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))AND('7n')))) AND ((CASE -1671809625  WHEN x'' THEN rt0.c2 ELSE rt0.c2 END))); -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY rt0.c2) FROM vt0, vt1, rt0; -- 0ms;
SELECT ALL TYPEOF(DISTINCT CAST(rt0.c1 AS INTEGER)) FROM vt0, rt0 WHERE ((((NULL)) NOT BETWEEN ((((0.9362002687757361)OR(x'')))) AND ((((NULL) NOT BETWEEN (NULL) AND (x'2584')))))) GROUP BY (((((((((rt0.c1 IN ()))AND(CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END)))AND((vt0.c0 IN (rt0.c0)))))AND(((vt0.c0)/(0Xffffffffc64d06e1)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) HAVING COUNT((rt0.c2 IN (rt0.c2, vt1.c0)));SELECT ALL (((vt0.c0, rt0.c1, rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((((rt0.c0)<=(rt0.c2)), ((rt0.c0) IS FALSE), ((vt0.c0)GLOB(vt0.c0)), ((0xffffffffd539b6b0) IS FALSE), 0.05617071038095378)) AND ((CAST(vt0.c0 AS NUMERIC), ((vt1.c0)<('')), rt0.c0, (~ (vt1.c0)), CAST(vt0.c0 AS INTEGER)))) FROM rt0 LIMIT -176571198;SELECT ALL (rt0.c1 IN (rt0.c1)) COLLATE NOCASE COLLATE BINARY, LIKELIHOOD((rt0.c2 IN ()), 0.7387783197512885), GROUP_CONCAT((vt1.c0 IN ())) OVER () FROM vt0 WHERE (CASE (((NULL)) BETWEEN ((1.120913838E9)) AND ((x'')))  WHEN (x'' IN ()) THEN (((x'', 'fp4', '0lP.T6'))>=((1.97879353E9, '-176571198', NULL))) WHEN (('1007181441') NOT BETWEEN ('쮣芼PfO(MS''') AND (0.38062879731230936)) THEN '1225830404' COLLATE BINARY WHEN (0xfffffffff1d62341 IN ()) THEN CASE 0x53ab789b  WHEN 't#fꍝ' THEN '1360219033' WHEN 915347749 THEN NULL WHEN NULL THEN x'32c1' ELSE 40719479 END ELSE (142837202 IN (NULL, 1120913838)) END);SELECT ALL (vt0.c0 COLLATE NOCASE IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))%(json_remove('0.31958754394777134', rt0.c2))), '9ZnX昁E' COLLATE RTRIM COLLATE NOCASE, ((((rt0.c2))<=((vt0.c0))) IN ()) FROM vt0;SELECT DISTINCT ((((x'ca96') IS FALSE)) NOTNULL) FROM rt0, vt1, vt0 WHERE (NULLIF(DISTINCT ((((((((0.06102267367595082)AND(0.08707533977134585)))AND('B')))OR('X薢')))OR('-1214192373')), x'' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((rt0.c0)==(((rt0.c0)<(vt1.c0)))) FROM vt1, vt0, rt0; -- 0ms;
SELECT ALL (((((vt1.c0 IN ()))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR((+ (rt0.c2)))) FROM vt0, rt0; -- 1ms;
SELECT 1645249212 FROM vt1; -- 0ms;
SELECT CASE WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c0)<=(vt0.c0)) ELSE IFNULL(vt0.c0, rt0.c2) END, (((((+ (rt0.c2)))AND(COALESCE(rt0.c0, rt0.c0))))OR(((((rt0.c0)OR(vt1.c0)))AND(vt0.c0)))), CAST(((rt0.c1)-(vt0.c0)) AS TEXT) FROM vt1 WHERE (json_extract(NULL, CASE WHEN '0.8886088552992543' THEN '*౿mt}g' WHEN -1197330822 THEN x'' WHEN '-1129292508' THEN x'3b6c' ELSE 0xffffffffb65b28a2 END)) LIMIT -1069316119 OFFSET 1493465738;SELECT vt1.c0 FROM vt0 WHERE (CASE WHEN '0.0' THEN 0.9731830054288135 END COLLATE NOCASE) ORDER BY CAST(((rt0.c0) BETWEEN (NULL) AND (vt1.c0)) AS INTEGER) DESC;SELECT ('-1214192373' IN ((rt0.c2 IN (vt0.c0)), (vt1.c0 IN (vt0.c0)))), (~ (((rt0.c2) ISNULL))), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (-8.04132408E8)) COLLATE BINARY FROM rt0, vt0, vt1 WHERE (((((0x45b4713f)GLOB(NULL))) NOT NULL)) GROUP BY ((rt0.c0)-(vt1.c0)) COLLATE NOCASE HAVING rt0.c1; -- 0ms;
SELECT DISTINCT ((TRIM(rt0.c0, rt0.c1))||(rt0.c1)) FROM vt1, rt0 WHERE (((CASE WHEN 0.3075761923875413 THEN '1703953093' WHEN x'7761' THEN NULL WHEN '1Lfq' THEN x'2883' ELSE NULL END)<=('-1235539806'))); -- 0ms;
SELECT DISTINCT (~ ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) FROM vt0, rt0, vt1 WHERE (((((((((0.2663363686144783 COLLATE BINARY)AND(((x'')*(0.9687232174098287)))))OR(((('1007181441')) NOT BETWEEN ((x'')) AND (('0'))))))OR(NULL)))AND(((x'0c6e8f6b') NOT BETWEEN ('\M.\nVWAA\r') AND (0.17328635470225717))))); -- 0ms;
SELECT ALL (((rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((CAST(vt0.c0 AS BLOB), rt0.c2, (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt0.c1)AND(rt0.c1)))OR(vt1.c0)), (- (rt0.c2)))) AND ((((NULL)>=(rt0.c0)), CAST(rt0.c0 AS TEXT), TOTAL(vt1.c0), vt0.c0, rt0.c2 COLLATE NOCASE))), ((((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))-(rt0.c1 COLLATE NOCASE)), (NOT (AVG(-1831709643))) FROM rt0;SELECT ALL json_array_length(((vt1.c0)||(rt0.c2))), ((((vt1.c0) BETWEEN (vt0.c0) AND (x'')))IS NOT(((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))), NULL FROM vt1 WHERE (ABS(SQLITE_COMPILEOPTION_USED(0X59047a8a))) GROUP BY (- (((rt0.c0) NOTNULL)));SELECT DISTINCT GROUP_CONCAT(NULL) OVER ( ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 END)))AND(((NULL) BETWEEN (vt1.c0) AND (rt0.c2))))) FROM rt0, vt0;SELECT (NOT (((0.6608457059456673)>=(x'')))), rt0.c2, ((((vt0.c0) IS FALSE))|((((rt0.c1, rt0.c0, rt0.c1))>((0.18163772253890587, rt0.c0, vt0.c0))))) FROM rt0, vt1;SELECT DISTINCT COUNT(*) FROM vt0, vt1, rt0 WHERE (((((NULL)>=(x'')))%(CASE WHEN x'' THEN '-735533249' END))); -- 0ms;
SELECT ((((((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c0)IS(vt0.c0)))))OR(CAST(rt0.c2 AS REAL))))AND(CASE WHEN vt1.c0 THEN vt0.c0 END)))OR(vt0.c0)) FROM vt0, rt0, vt1; -- 0ms;
SELECT (~ (-1.04611839E8)) FROM vt1, vt0 WHERE ((((-9.73224167E8 IN ())) NOTNULL)); -- 0ms;
SELECT ((((((rt0.c1)LIKE(vt0.c0)))OR(CAST(NULL AS TEXT))))OR(NULL)) FROM rt0 NOT INDEXED, vt0, vt1 WHERE (((((((NULL)<=(NULL)))AND(((0.996386920346952) NOT BETWEEN (1703433288) AND (x'08ea')))))OR(((-838525975)>=(0xffffffffdf21aaab))))); -- 1ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_GET(rt0.c2)) IS FALSE), ((((NULL)OR(rt0.c0)))-(((rt0.c2)>>(rt0.c2)))), (((rt0.c2)) NOT BETWEEN ((((vt1.c0)>=(rt0.c2)))) AND ((vt0.c0 COLLATE BINARY))) FROM vt0, vt1, rt0 WHERE ((((0.7474796674404882)) NOT BETWEEN (((NOT (0.34730181107153046)))) AND ((((0.10974339773925534)>>(x'')))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0 WHERE (((0.8690450397276208 COLLATE NOCASE) NOT NULL)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, vt0 GROUP BY CAST((((NULL)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) AS INTEGER) HAVING '600039276' ORDER BY CAST(((((x'')OR(rt0.c0)))AND(rt0.c2)) AS TEXT)  NULLS LAST, x'09ec', CASE ((vt1.c0)!=(rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN x'' END ASC LIMIT -444414007;SELECT DISTINCT CAST(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)) AS REAL), (((rt0.c2) ISNULL) IN (((rt0.c2)>(rt0.c0)))), CASE '-446841922' COLLATE NOCASE  WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c1) NOTNULL) ELSE CASE WHEN vt1.c0 THEN rt0.c2 ELSE NULL END END FROM rt0, vt0, vt1 WHERE (CASE WHEN ((0.2244421559379154)<<(0X88385d2)) THEN (+ ('')) WHEN (NOT ('9223372036854775807')) THEN ((x'')GLOB('僔R{j|0')) WHEN (x'' IN ()) THEN NULL END) GROUP BY ((((((NULL)-(rt0.c2)))OR(((vt1.c0)*(rt0.c1)))))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))), ((rt0.c2 COLLATE RTRIM)GLOB(((vt1.c0)!=(rt0.c1)))), CASE ((rt0.c2)IS NOT(rt0.c2))  WHEN ((rt0.c2) ISNULL) THEN NULLIF(vt0.c0, rt0.c0) END HAVING ((CAST(rt0.c0 AS REAL)) NOT BETWEEN ((+ (rt0.c2))) AND (LOWER(x''))); -- 0ms;
SELECT ALL CAST(rt0.c0 AS TEXT) FROM vt1, rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE NOCASE, ((((rt0.c2) IS TRUE)) IS FALSE) ASC; -- 0ms;
SELECT (+ (rt0.c1)), CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0) BETWEEN (rt0.c0) AND ('1698937471')) ELSE ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c0)) END, (NOT (TIME(rt0.c1, vt1.c0, rt0.c2))) FROM rt0, vt0 WHERE ((((((('1871404506')OR(0.5331469018760968)))AND(NULL))) NOTNULL));SELECT ABS(DISTINCT ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) FROM vt0, vt1 GROUP BY CAST(((vt1.c0)|(vt1.c0)) AS NUMERIC), ((((NULL)AND(vt0.c0))) NOTNULL), '-642640293';SELECT LEAD(CAST(rt0.c2 AS NUMERIC) COLLATE BINARY, rt0.c1, ((TRIM(rt0.c2)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0))) AND (((rt0.c2) NOTNULL)))) OVER () FROM vt1, rt0, vt0 GROUP BY 0xffffffffa7ac8c27 HAVING (((NOT (rt0.c1))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (vt0.c0)); -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0) ISNULL)) OVER () FROM vt1, rt0, vt0; -- 0ms;
SELECT ALL (~ ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM rt0, vt1, vt0 WHERE (((((''))<((NULL))) IN ())); -- 0ms;
SELECT DISTINCT ((((vt1.c0)LIKE(rt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) NOTNULL))), json_array((((rt0.c2))==((rt0.c1))), ((vt0.c0)<>(rt0.c2)), ((rt0.c0)>=(vt0.c0)), TOTAL(vt1.c0)), (~ ((- (vt1.c0)))), COUNT('-1136053967') OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))<<((~ (rt0.c1)))) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (((((x'')%(NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT x'', MAX(((((((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))) COLLATE NOCASE, ((CAST(rt0.c1 AS INTEGER))*(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0;SELECT (CAST(rt0.c1 AS BLOB) IN (LOWER(vt0.c0))) FROM vt1 WHERE ((((0.8158933802702666, NULL, x'4450')) BETWEEN (((- (-5.3113507E8)), CASE WHEN NULL THEN ' bal孀jl~' ELSE x'8bca6b62' END, (('blIӚ') NOT BETWEEN (0.7019556785684317) AND ('2104795740')))) AND ((((NULL) NOT BETWEEN (NULL) AND (x'')), CASE NULL  WHEN x'' THEN '1475916934' WHEN NULL THEN 0X206fcf99 WHEN -730107675 THEN 0X7f0738b ELSE '-242332881' END, ((x'e8d55d6b') IS FALSE)))));SELECT DISTINCT (+ ((((('-1099496721')AND(rt0.c1)))AND(vt1.c0)))) FROM rt0, vt1 WHERE ((CASE '0.08707533977134585'  WHEN NULL THEN NULL ELSE '|<c\r0r' END IN ())) GROUP BY 0x3f4d5b36, ((((rt0.c2) NOTNULL)) NOTNULL), -1.895884246E9 HAVING rt0.c0;SELECT ALL (((((((((- (rt0.c0)))OR(((('-1356460782')) BETWEEN ((vt1.c0)) AND ((rt0.c0))))))OR((+ (vt0.c0)))))OR((vt1.c0 IN ()))))AND(rt0.c1)) FROM vt1 WHERE (((((CAST(0Xffffffff9e0b05a3 AS BLOB))OR(((0.15859898736896683)==(1403746459)))))AND(x'' COLLATE BINARY))) LIMIT -1688893902;SELECT DISTINCT CAST(((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)) AS NUMERIC) FROM vt1 WHERE (((((('')) BETWEEN (('f')) AND (('-300786869'))))&((((NULL)) NOT BETWEEN ((0.8815032667968048)) AND (('')))))) ORDER BY ((((CASE WHEN rt0.c1 THEN rt0.c2 END)OR(((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))))AND(vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST;SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE COLLATE RTRIM, TYPEOF((((x'23d8')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))), ((((MIN(rt0.c2))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END)))AND(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) FROM vt0 WHERE (CASE WHEN (('YF拆''Nw%K') IS FALSE) THEN (NULL IN ()) WHEN (('D7u[)Li/')/(0.3266034929234376)) THEN '469224074' COLLATE BINARY WHEN (NOT (0.3872544651270666)) THEN ((0X515c7fd5)<=(0.24553550081999964)) WHEN ((x'')+(-531135070)) THEN 0.07914199041844738 COLLATE BINARY WHEN ((x'4ee9')IS(0.21406560984745737)) THEN CASE 0.6929076144172434  WHEN NULL THEN x'' ELSE NULL END END);SELECT ALL NTH_VALUE((((((((rt0.c2))<>((rt0.c2))))OR(((rt0.c1) IS TRUE))))OR(LOWER(rt0.c2))), ((((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0 COLLATE BINARY))) OVER ( ORDER BY CASE WHEN (NOT (rt0.c0)) THEN ((rt0.c2)OR(rt0.c0)) END ASC  NULLS LAST, CAST((vt0.c0 IN ()) AS REAL) DESC, CAST(((vt1.c0)*(rt0.c0)) AS BLOB)  NULLS FIRST) FROM vt1, rt0 WHERE ((('206392339')!=((('1t!&z3m4\n')LIKE(0.812427367219593))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE ('0.17328635470225717'); -- 0ms;
SELECT ALL TOTAL(-830986459) OVER () FROM rt0, vt1, vt0 WHERE ((((((('?t*s췬O3')OR(x'443e')))AND(x''))) BETWEEN (CAST(0.8526481889162835 AS REAL)) AND (CASE NULL  WHEN NULL THEN '' END))) GROUP BY (NOT (CAST(rt0.c0 AS INTEGER))); -- 0ms;
SELECT (('109300418')GLOB((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), x'81df', ((~ (rt0.c1)) IN ()) FROM vt1, vt0 GROUP BY COALESCE(vt1.c0 COLLATE RTRIM, ((vt0.c0)==(-1318434448)));SELECT DISTINCT LENGTH(((rt0.c2)IS NOT(vt0.c0))), NULL, TOTAL(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) FROM rt0, vt0, vt1; -- 0ms;
SELECT ALL TOTAL((+ (rt0.c0))) FILTER(WHERE vt0.c0) OVER () FROM vt1, rt0, vt0 WHERE (CASE WHEN '.f}7᡻' COLLATE NOCASE THEN ((NULL) BETWEEN (NULL) AND (0.562943924823731)) ELSE (NULL IN ('')) END) EXCEPT SELECT ALL (((~ (x''))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (load_extension(rt0.c1, rt0.c0))) FROM vt0, vt1 WHERE (CASE NULL  WHEN NULL THEN NULL END COLLATE NOCASE);SELECT AVG((((('-260421582')AND(rt0.c2)))OR(rt0.c2))) OVER () FROM vt1 ORDER BY ((((rt0.c1)>(rt0.c1))) NOTNULL)  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((rt0.c1)OR(vt0.c0)))) AND ((UNLIKELY('663647091')))) ASC  NULLS LAST;SELECT DISTINCT (CAST(vt1.c0 AS NUMERIC) IN ()) FROM vt0, vt1 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) COLLATE RTRIM FROM vt1, vt0 WHERE ((('-1167942585')=(0xffffffffc80fe33d)) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT (((((vt0.c0)IS(x''))))!=((((0.6078932649101257) BETWEEN (rt0.c2) AND (vt1.c0))))) FROM rt0 WHERE (CAST((~ (5.61018809E8)) AS BLOB)) GROUP BY ((((NOT (rt0.c1))))=((CAST(vt1.c0 AS REAL)))), ((~ (rt0.c1)) IN (((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0)), rt0.c1 COLLATE BINARY)), (((rt0.c0 IN ()))<=(CAST(vt0.c0 AS NUMERIC))), (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT BETWEEN (0.06618701454234) AND (CAST(vt0.c0 AS NUMERIC))), ((CAST(rt0.c2 AS REAL))/(vt0.c0)) HAVING ((((~ (vt1.c0)), LIKELY(DISTINCT rt0.c0), (rt0.c0 IN ()), NULL, ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0))))<>((CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END, rt0.c2 COLLATE RTRIM, ((vt0.c0) IS FALSE), (- (vt0.c0)), ((x'f4bd') IS TRUE))));SELECT ALL (((vt0.c0 COLLATE NOCASE))<=((CAST(rt0.c1 AS BLOB)))), ((((((rt0.c2)OR(rt0.c0)))AND((x'' IN ()))))AND((((29919604)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))), (NOT (((1414270130) BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt1, vt0, rt0 WHERE (('0.5903385844773753' IN ())); -- 0ms;
SELECT TOTAL(('1562331263' IN (vt1.c0))), rt0.c1, ((LTRIM(rt0.c2)) ISNULL) FROM vt0, vt1 WHERE (((('', 0X54331bb3, x'')) BETWEEN (((('sۜ뜀Pc') NOT NULL), CASE x'2763'  WHEN x'' THEN '' END, ((0xffffffff836af4ce)>=(0Xffffffff9f6295b5)))) AND ((((0.04411337367616386)<<('&T8%8*谧')), (~ ('592568496')), ((0x36f8ec5f)<<(''))))));SELECT ALL (((rt0.c2)==(vt0.c0)) IN (((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))), ((LOWER(DISTINCT rt0.c2))&(((rt0.c2)<(vt1.c0)))), ((((vt0.c0)IS(rt0.c2)))<=(rt0.c2)) FROM vt1, rt0, vt0; -- 0ms;
SELECT rt0.c0, LAG(CASE WHEN ((rt0.c2)IS NOT(vt1.c0)) THEN (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)) END, rt0.c0, (CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN NULL THEN rt0.c0 ELSE vt1.c0 END IN ())) OVER (), ((((LTRIM(vt0.c0, vt1.c0))AND(((((rt0.c1)AND(NULL)))OR(vt1.c0)))))AND((~ (rt0.c1)))) FROM rt0, vt1 WHERE (CASE (((NULL))<(('-300468173')))  WHEN (+ ('757920538')) THEN ((NULL)IS NOT('915347749')) ELSE ((0.9973195501449351)<>('-973224167')) END);SELECT '1403746459' FROM vt1, vt0, rt0; -- 0ms;
SELECT ((x'') BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY FROM rt0, vt1, vt0 WHERE ((('312583005' COLLATE BINARY)=(CAST(NULL AS INTEGER)))) GROUP BY CAST(((rt0.c0) BETWEEN (vt1.c0) AND (NULL)) AS NUMERIC) HAVING LOWER(((vt1.c0)<=(rt0.c0))); -- 0ms;
SELECT DISTINCT ((NULLIF(rt0.c2, vt1.c0)) BETWEEN (vt1.c0) AND (((vt0.c0)AND(rt0.c0)))) FROM vt1;SELECT ((((rt0.c1 IN ())))>(((0Xffffffffa87a0296 IN ())))) FROM rt0, vt1 GROUP BY CASE WHEN rt0.c1 THEN ((vt0.c0) NOTNULL) WHEN IFNULL(rt0.c2, rt0.c1) THEN (((vt0.c0))>=((vt0.c0))) WHEN rt0.c2 THEN ((vt0.c0)OR(rt0.c1)) WHEN rt0.c2 THEN ((NULL) IS FALSE) WHEN (- (vt1.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 END END HAVING ((CASE WHEN rt0.c0 THEN rt0.c1 ELSE x'74fe' END) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) AND ((vt1.c0 IN ()))) ORDER BY '-1678239621', CAST(LIKELIHOOD(rt0.c1, 0.43449788761897257) AS NUMERIC);SELECT (rt0.c0 IN ()), CAST(ABS(rt0.c0) AS REAL), ((LTRIM(vt1.c0, rt0.c1))&(rt0.c0)) FROM vt1, rt0, vt0 WHERE (((CAST(0.014050660690801742 AS REAL)) BETWEEN (((x'') BETWEEN (0.6929076144172434) AND (NULL))) AND ('[PK/\r' COLLATE RTRIM))) GROUP BY CAST((('?V ?V]') NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC); -- 1ms;
SELECT ALL SUBSTR(((rt0.c1)+(vt0.c0)), ((vt1.c0)>>(vt0.c0))), (NOT (((rt0.c0) ISNULL))), AVG(vt0.c0) OVER ( ORDER BY ((vt1.c0) NOT BETWEEN (json(rt0.c0)) AND ((vt1.c0 IN (vt0.c0))))  NULLS FIRST), rt0.c1, (- (x'')) COLLATE RTRIM FROM rt0, vt0, vt1 WHERE ((((NULL)<<('')) IN ((('-743919848') NOT BETWEEN (x'') AND (x'')), ((x'') BETWEEN (0.8706642861899735) AND (1.816970243E9))))) ORDER BY 0.8914550603517648 DESC, ((((vt0.c0)=(rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (0.2262651984759222))  NULLS FIRST, CASE WHEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c0 END WHEN ((rt0.c2)>(rt0.c2)) THEN STRFTIME(rt0.c1, NULL, rt0.c1) WHEN ((rt0.c1)*(rt0.c2)) THEN ((vt1.c0)<>(vt0.c0)) END DESC  NULLS LAST; -- 0ms;
SELECT GROUP_CONCAT(SUM(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt1 WHERE (((((ABS('-1129292508'))OR(('_&' IN ()))))OR((((NULL, -1.197330822E9, 0X296db31f)) BETWEEN ((0xffffffffb7a0e50b, '', '0.6608457059456673')) AND ((0.86450599958676, 0.8245483673812827, NULL)))))) LIMIT -1919736995;SELECT DISTINCT AVG(CASE WHEN rt0.c2 THEN rt0.c1 WHEN x'f7b0' THEN vt0.c0 WHEN vt0.c0 THEN 0xea1fd9b ELSE vt1.c0 END) OVER (), x'', AVG(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) FROM vt0, vt1;SELECT DISTINCT RANK() OVER () FROM vt1, vt0 WHERE ((((0.9787107594996828 IN (109641174)))|(NULL))); -- 0ms;
SELECT DISTINCT (rt0.c0 IN (((rt0.c0)+(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) FROM rt0 INNER JOIN vt1 ON ((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c1))) NOT BETWEEN ((vt1.c0 IN (rt0.c0))) AND (CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)) CROSS JOIN vt0 ON highlight(x'', rt0.c1 COLLATE NOCASE, TRIM(DISTINCT vt0.c0, vt0.c0), ((vt1.c0)<>(rt0.c2))); -- 0ms;
SELECT ALL SUM(LIKELY(rt0.c1)) OVER (), ((CAST(vt1.c0 AS TEXT))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))), LIKELIHOOD(((vt0.c0)LIKE(vt0.c0)), 0.7915388052008557) FROM rt0, vt1 WHERE (((1.703953093E9 COLLATE BINARY) NOT BETWEEN (((x'42d6')*('vuⱻ閯9J'))) AND (((0.9700644970621171) NOT NULL)))) LIMIT 576828981;SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE) FROM rt0, vt1 LIMIT -1764554213; -- 0ms;
SELECT RANK() OVER (), LAG(CASE WHEN vt1.c0 THEN x'' WHEN ((rt0.c1)<(rt0.c1)) THEN INSTR(rt0.c1, rt0.c2) WHEN vt1.c0 THEN ((((rt0.c2)OR(rt0.c0)))AND(vt1.c0)) END, LOWER(DISTINCT LIKE(rt0.c1, rt0.c2)), ((json_type(rt0.c2))<<(CAST(rt0.c2 AS NUMERIC)))) OVER (), ((CASE WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) AND (CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END)) FROM rt0, vt1;SELECT DISTINCT CAST(json_array(vt1.c0, vt1.c0) AS INTEGER) FROM rt0 WHERE (((CASE WHEN 0.27652158554916006 THEN 532377439 WHEN NULL THEN x'' WHEN NULL THEN 0Xffffffffb83d83c5 ELSE '-717637968' END)|(((('n\'))==((-104611839))))));SELECT DISTINCT (NOT (TYPEOF(DISTINCT rt0.c0))), 1871404506, ((((rt0.c1)IS(0.8253419484655163))) IS FALSE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((CAST(rt0.c0 AS BLOB)) NOTNULL), CAST((+ (0.09054979114153838)) AS TEXT) FROM vt0, vt1, rt0 WHERE (IFNULL(-1.129292508E9, (('1493465738') NOT BETWEEN ('1703953093') AND ('-876783404')))); -- 0ms;
SELECT DISTINCT (((((((((+ (rt0.c1)))OR(((rt0.c2) NOTNULL))))AND(((((vt1.c0)OR(vt1.c0)))OR(rt0.c2)))))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))))AND((vt1.c0 IN ()))) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((UNLIKELY(0.46765101814809384)) ISNULL) FROM vt1, rt0, vt0; -- 0ms;
SELECT ((CAST(rt0.c2 AS BLOB))IS((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, vt1.c0)) AND ((rt0.c1, rt0.c0, ''))))), CASE rt0.c1  WHEN ((vt0.c0) NOTNULL) THEN COUNT(*) ELSE ((vt0.c0) NOT NULL) END, (((rt0.c2)AND(rt0.c0)) IN ()) FROM rt0;SELECT DISTINCT SUM((+ (rt0.c1))) OVER ( ORDER BY (- (((vt1.c0) ISNULL))) ASC  NULLS LAST) FROM vt0, rt0, vt1 WHERE (CAST('0.9731830054288135' AS BLOB) COLLATE BINARY) ORDER BY ((((x'78f4')<<(rt0.c0)))LIKE(((vt1.c0)||(rt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE NOCASE, (+ (rt0.c0 COLLATE RTRIM)), (+ (CASE WHEN rt0.c2 THEN vt1.c0 END)) FROM vt0, vt1 WHERE (highlight(((x'') NOT BETWEEN ('') AND (x'')), (((NULL))>(('-958953560'))), ((x'') IS TRUE), (('N<s\rGy')LIKE(NULL))));SELECT DISTINCT (((+ (rt0.c2)))=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) FROM vt1 GROUP BY (((((rt0.c0 IN ()))AND(',핶k4<5d')))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))));SELECT DISTINCT '1803777087' FROM rt0 WHERE (((CAST('-287838436' AS NUMERIC)) ISNULL)); -- 0ms;
SELECT ((UNLIKELY(vt1.c0))%((((rt0.c2))<((vt1.c0))))) FROM rt0;SELECT DISTINCT ((vt1.c0 IN ()) IN ()), (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE RTRIM, AVG(((rt0.c1)%(vt1.c0))) OVER () FROM vt0, vt1 ORDER BY (((((vt1.c0)OR(vt1.c0)))OR(0.5831136069995018)) IN ());SELECT ALL ((((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))) IS TRUE) FROM rt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) BETWEEN ((rt0.c1 IN (vt0.c0, rt0.c2))) AND ((+ (rt0.c0)))) DESC  NULLS FIRST LIMIT 455608028;SELECT DISTINCT SUBSTR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)), rt0.c1), LENGTH(CHAR(vt1.c0, vt1.c0, rt0.c2)), CAST(rt0.c2 AS REAL) FROM vt1;SELECT DISTINCT (SUM(NULL) IN (MAX(vt1.c0))), CASE (((vt1.c0, vt1.c0, rt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c0, rt0.c1, x'1680e2db')) AND ((rt0.c2, rt0.c2, vt0.c0, rt0.c0, rt0.c1)))  WHEN (vt0.c0 IN (rt0.c2)) THEN rt0.c2 COLLATE BINARY WHEN rt0.c2 THEN (+ (rt0.c0)) WHEN (~ (vt1.c0)) THEN (- (rt0.c1)) END, CAST(((0.23952403264125666) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT) FROM vt1, rt0 WHERE (((CASE 0.5474433370796998  WHEN '-435065263' THEN '-1602845548' ELSE 'd7u[)li/' END) NOT BETWEEN (((x'5f85')/(x''))) AND (((NULL) BETWEEN (1955637400) AND (x''))))) ORDER BY CAST(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)) AS REAL) ASC  NULLS LAST;SELECT '1167913698' FROM vt0, rt0 WHERE (json_type(x'')) GROUP BY ((((((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)AND(CASE WHEN rt0.c2 THEN '' WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)))AND(((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))))OR(((vt0.c0)>=(vt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) LIMIT -1472983259 OFFSET 870626636;SELECT 0.7483579289495746 FROM vt0 INNER JOIN vt1 ON ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)) COLLATE BINARY FULL OUTER JOIN rt0 ON NULL;SELECT ALL CAST(((vt1.c0)<=(vt1.c0)) AS NUMERIC) FROM rt0 WHERE (NULL);SELECT DISTINCT NULL FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT (vt1.c0 IN ()), (((NULL, '1998610814', vt0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c1)) AND ((vt1.c0, rt0.c0, rt0.c0)))) FROM vt0 WHERE ((NOT (TYPEOF(1.007181441E9))));SELECT ((vt1.c0) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) FROM rt0 GROUP BY 0.6771215500009018 ORDER BY ((PRINTF(0.10498170259661765)) BETWEEN (((rt0.c2)|(x'1069'))) AND (x'')) DESC  NULLS FIRST, '-642640293' COLLATE NOCASE;SELECT ALL x'' FROM rt0, vt0 WHERE (0.43792777203315747 COLLATE NOCASE); -- 0ms;
SELECT ((NOT (vt0.c0)) IN ()) FROM vt0 ORDER BY ((CAST(x'' AS INTEGER))=((vt1.c0 IN (rt0.c0, vt1.c0)))), (((vt0.c0)) BETWEEN ((((vt0.c0)*(rt0.c2)))) AND (((((rt0.c2, rt0.c2, rt0.c1))<>((vt1.c0, rt0.c0, rt0.c1))))))  NULLS FIRST;SELECT ALL ((((vt0.c0)IS NOT(rt0.c1)))IS((- (vt0.c0)))) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (((rt0.c2)%(rt0.c2))) AND (((vt0.c0) BETWEEN ('71973740') AND (rt0.c1)))) FROM rt0, vt1 WHERE (((((-1475378854) ISNULL))+(IFNULL(DISTINCT '-176571198', '1218369345'))));SELECT DISTINCT vt0.c0, (GROUP_CONCAT(rt0.c0) IN ()), (((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c2)) IN ()) FROM rt0 GROUP BY ((UPPER(rt0.c1))/(((vt1.c0) NOT BETWEEN (vt1.c0) AND (6.4363162E8)))) ORDER BY rt0.c2 COLLATE BINARY;SELECT ((SQLITE_COMPILEOPTION_USED(rt0.c0)) BETWEEN ((vt0.c0 IN (rt0.c1))) AND ((+ (rt0.c0)))), (+ ((+ (rt0.c2)))), CASE TOTAL(rt0.c0)  WHEN COUNT(vt0.c0) THEN '' ELSE ((rt0.c1) IS TRUE) END FROM vt1, vt0, rt0 WHERE (NULL); -- 0ms;
SELECT CASE CASE WHEN rt0.c2 THEN vt1.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN (rt0.c1 IN (rt0.c0)) END FROM vt1, rt0, vt0 WHERE ((NOT (CAST('愿w>' AS REAL)))); -- 1ms;
SELECT ALL ((TYPEOF(rt0.c1))!=(HEX(rt0.c0))), CAST(((NULL)=(rt0.c2)) AS INTEGER), MIN((rt0.c0 IN (rt0.c2))) FROM rt0 WHERE ((((((x'') NOTNULL), CAST(744361173 AS INTEGER), (('561018809')&(0x7efff199))))<((0X4a22b1b5, '-531135070', CAST('0.1432583179239465' AS TEXT))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE))||((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))) FROM rt0 LEFT OUTER JOIN vt1 ON NULL INNER JOIN vt0 ON (+ (((rt0.c2) NOT BETWEEN ('496654531') AND (rt0.c2)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0) COLLATE BINARY COLLATE NOCASE, (+ (rt0.c2)) COLLATE RTRIM, ((vt0.c0 COLLATE RTRIM) NOTNULL) FROM vt1;SELECT DISTINCT ((TYPEOF(DISTINCT '-1129292508'))AND(CAST(0.6760288330745733 AS INTEGER))) FROM vt1 GROUP BY CAST(vt1.c0 AS NUMERIC) HAVING (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) IN ()) ORDER BY (('-973224167')&(SQLITE_COMPILEOPTION_GET(rt0.c2))) DESC  NULLS LAST, CASE rt0.c1  WHEN ((((x'')AND(vt1.c0)))OR(vt1.c0)) THEN rt0.c0 WHEN '' THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE '-1919736995' END WHEN ((((((((((((((((vt1.c0)AND(rt0.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)) THEN ((vt1.c0)-(vt0.c0)) WHEN SQLITE_COMPILEOPTION_GET(NULL) THEN (rt0.c0 IN ()) WHEN NULL THEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((rt0.c2)-(rt0.c1)) END, (((((((((NOT (rt0.c0)))OR((rt0.c0 IN (rt0.c2)))))AND(rt0.c1)))OR(((rt0.c0)%(rt0.c2)))))AND(rt0.c2))  NULLS FIRST;SELECT DISTINCT CUME_DIST() OVER (), ((NULLIF(DISTINCT rt0.c2, rt0.c1)) BETWEEN (rtreenode(vt0.c0, rt0.c0)) AND (((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))), CASE x'41bb02d8'  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END COLLATE RTRIM COLLATE NOCASE FROM vt1, rt0 WHERE (((((((((((((((7.12562922E8)OR('-1602845548')))OR(NULL)))OR(NULL)))AND(x'')))OR(NULL)))OR(0.06901075767793674)))<<(((0.2514714517362584)OR(0.18703462714727082)))));SELECT MAX(((((vt0.c0)OR(rt0.c0)))OR(rt0.c2))), ((NULL) BETWEEN (CAST(rt0.c2 AS REAL)) AND (CAST(1.97879353E9 AS INTEGER))), MAX(('561018809' IN ())) FROM vt1, rt0;SELECT (NOT (((rt0.c2)>(rt0.c2)))), CAST(LOWER(vt0.c0) AS REAL), CAST((vt1.c0 IN (rt0.c2)) AS INTEGER) FROM rt0, vt1 WHERE (0xffffffffc04387e9);SELECT DISTINCT ((CAST(NULL AS REAL)) IS FALSE) FROM rt0, vt0; -- 0ms;
SELECT ALL 0.5678144158617316 FROM vt0, rt0; -- 0ms;
SELECT ALL ((((vt1.c0)OR(rt0.c0)))OR(0.014050660690801742)) COLLATE BINARY, GROUP_CONCAT(0.5160239437483086), CUME_DIST() OVER ( PARTITION BY (((rt0.c0)) BETWEEN (((((rt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((vt0.c0, rt0.c1, vt0.c0))))) AND ((x''))), ((((vt0.c0)IS NOT(x''))) NOTNULL) RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt0, vt1 WHERE (((((((x''))>=((x'c0f0538b'))), LIKE('f<', '0.3075761923875413', 'Ⅴ'), '*U~O,\	H' COLLATE NOCASE))==((((x'')>>('-1142368005')), x'' COLLATE BINARY, CAST(x'' AS NUMERIC)))));SELECT DISTINCT COUNT(*) OVER () FROM vt1, vt0 GROUP BY CASE WHEN ((vt0.c0)%(vt1.c0)) THEN rt0.c0 WHEN ((rt0.c1)<(vt0.c0)) THEN -49552379 WHEN vt1.c0 THEN (~ (rt0.c1)) ELSE 0.5894224066200533 END, ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND (rt0.c2)), (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN (((+ (rt0.c1)), ((rt0.c1)==(vt1.c0)), CAST(rt0.c0 AS TEXT))) AND (((rt0.c1 IN ()), rt0.c0, vt1.c0 COLLATE NOCASE))) LIMIT 1480266579;SELECT DISTINCT JULIANDAY((+ (rt0.c0)), UNLIKELY(rt0.c1), CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) FROM rt0, vt0; -- 0ms;
SELECT ALL 0.4437020200166961 FROM vt0, rt0 WHERE (CASE (142837202 IN ())  WHEN (NOT (NULL)) THEN (('<cv*') NOTNULL) ELSE CAST(NULL AS INTEGER) END); -- 0ms;
SELECT DISTINCT SUM(((rt0.c1)OR(rt0.c1))) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL (((NOT (rt0.c0))) NOTNULL) FROM rt0 WHERE (x'') ORDER BY ((((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR(LAST_INSERT_ROWID())))AND(((vt1.c0)+(rt0.c1)))))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c1)>(vt0.c0)))) DESC, (((rt0.c1)) BETWEEN ((IFNULL(rt0.c2, rt0.c1))) AND ((x''))) DESC  NULLS LAST;SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((('')OR('')) IN (CAST(x'' AS INTEGER), NULL))) GROUP BY (((rt0.c0)) BETWEEN (('{*^	i')) AND ((((('1e500'))<=((vt0.c0)))))) HAVING CASE WHEN SQLITE_SOURCE_ID() THEN (~ (rt0.c0)) WHEN (~ (rt0.c1)) THEN (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) WHEN ((rt0.c2)=(rt0.c1)) THEN TRIM(DISTINCT rt0.c1, rt0.c0) ELSE CASE WHEN rt0.c2 THEN '-14990217' WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END END;SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND ('1803777087')))-('0.3792068244360931' COLLATE BINARY))) ORDER BY ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)))*(rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST;SELECT ((GROUP_CONCAT(vt1.c0)) NOT BETWEEN (0.4246079874219083) AND (GROUP_CONCAT(vt1.c0))) FROM rt0, vt0, vt1; -- 0ms;
SELECT ((((((((((0.7222565098636017)AND(vt1.c0)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (CASE 0.44245173342360655  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND ((((rt0.c0))=((rt0.c1))))) FROM vt0, rt0 WHERE (CAST((('6X>,WEh') IS TRUE) AS REAL));SELECT (- (json(vt1.c0))) FROM vt0;SELECT DISTINCT ((((((((CAST(rt0.c2 AS INTEGER))OR(NULL)))OR(((rt0.c1) IS FALSE))))AND(((((((((rt0.c2)AND(0.026192899407631143)))OR(6.4363162E8)))AND(vt0.c0)))OR(rt0.c1)))))OR(((vt1.c0)&(rt0.c2)))), COUNT((vt0.c0 IN ()) COLLATE RTRIM) OVER ( RANGE  CURRENT ROW), ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN ((NOT (rt0.c2))) AND (((rt0.c1)*(rt0.c1)))) FROM vt0 WHERE (TRIM(x'' COLLATE RTRIM, (NOT (0.8146612476130047)))) ORDER BY ((vt1.c0 COLLATE RTRIM)GLOB(0.4733825665635031)), ((286524953) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1)) ASC  NULLS LAST;SELECT GROUP_CONCAT((('1082263034')||(rt0.c1))) OVER (), CASE WHEN 0.013197828220675945 THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN (vt0.c0 IN ()) THEN rt0.c2 WHEN rt0.c0 THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) END, CAST(((vt0.c0) BETWEEN (rt0.c2) AND (x'')) AS TEXT) FROM vt1, vt0 WHERE (((NULL) NOT BETWEEN (x'') AND ('')) COLLATE RTRIM);SELECT DISTINCT ((rt0.c2)*(((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)))) FROM vt0, rt0, vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt0, rt0, vt1 WHERE (((0.21406560984745737) NOT BETWEEN (UPPER('0.7465172756478108')) AND ((('-893630750') BETWEEN ('-366809138') AND ('\n N'))))); -- 0ms;
SELECT ALL GROUP_CONCAT(LOWER(NULL)), ((vt1.c0)+(x'')), ABS(DISTINCT LTRIM(rt0.c1)) FROM vt0, vt1;SELECT ((CAST(vt0.c0 AS TEXT)) BETWEEN (CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.34167375508124054 THEN rt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (rt0.c2)) FROM rt0 WHERE (((('!Lo') NOT BETWEEN ('476047905') AND (-1.129292508E9)) IN (((0.9731830054288135)*('-431044811')))));SELECT DISTINCT ABS(rt0.c0) FROM vt1 WHERE (((TYPEOF(DISTINCT NULL)) IS TRUE)) ORDER BY (((x''))<=((LIKELY(DISTINCT vt1.c0))))  NULLS FIRST, (((rt0.c2)) NOT BETWEEN (((((rt0.c1))<=((rt0.c0))))) AND (((~ (vt0.c0))))) DESC  NULLS FIRST, CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((rt0.c1) ISNULL) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE SQLITE_VERSION() END  NULLS LAST;SELECT (- (((rt0.c1)IS NOT('')))) FROM vt1, vt0, rt0 LIMIT -1433491524 OFFSET 36947566; -- 1ms;
SELECT CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 END COLLATE BINARY FROM vt0, rt0 WHERE (((CAST('/y' AS BLOB))/(LOWER(DISTINCT NULL))));SELECT DISTINCT ((((rt0.c2 COLLATE NOCASE)OR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))), (('Xt<a|') BETWEEN (((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c2))) AND (TRIM(rt0.c0))), GROUP_CONCAT(((rt0.c0)<=(rt0.c1))) FROM vt0, vt1, rt0 WHERE ((((((('339060179')AND(0.17597050268095538)))AND(0.7102034616592653))) IS FALSE)); -- 0ms;
SELECT ALL ((((rt0.c0 COLLATE NOCASE)AND((rt0.c1 IN ()))))AND((rt0.c0 IN ()))), (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN ((+ (rt0.c0))) AND (vt1.c0)), ((((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c2, vt1.c0))) IN ()) FROM rt0, vt0;SELECT ALL ABS(rt0.c1), CASE WHEN (+ (vt1.c0)) THEN NULLIF(vt0.c0, vt0.c0) WHEN (('') ISNULL) THEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) WHEN AVG(rt0.c2) THEN 0.6432100565684665 ELSE ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)) END, (((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND (('g%'))))*(((rt0.c0) IS TRUE))) FROM vt0, rt0 WHERE (0.42176329460532436);SELECT rt0.c0 FROM vt0, vt1 WHERE (CASE WHEN ((0.9550129012916464) ISNULL) THEN ((NULL) IS FALSE) END);SELECT DISTINCT '448617280' FROM vt0, rt0, vt1 WHERE (((((NULL) NOT BETWEEN (x'') AND (x''))) NOT BETWEEN (('-104611839' IN ())) AND ((('1501447447') BETWEEN (x'c2a2') AND (1398446350))))) LIMIT 615500903 OFFSET -1062564158; -- 0ms;
SELECT DISTINCT LAST_VALUE((- ((rt0.c1 IN ())))) OVER () FROM rt0; -- 1ms;
SELECT ALL rt0.c1, ((((rt0.c0)OR(((vt0.c0)<<(vt1.c0)))))OR(((((((((NULL)AND(x'')))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))), (((('')%(vt0.c0))) NOT NULL) FROM vt1;SELECT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))))<((((vt1.c0) ISNULL)))), rt0.c2, ((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END)OR(((rt0.c1) IS FALSE))))OR((NULL IN ()))), rt0.c2, ((-973224167) NOT NULL) FROM rt0, vt0, vt1; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), CAST((NOT (rt0.c1)) AS INTEGER), ((vt1.c0) NOTNULL) COLLATE RTRIM FROM vt1, vt0;SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))IS NOT(CASE rt0.c2  WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c0 END)) FROM vt0, rt0 GROUP BY CASE WHEN (~ (rt0.c0)) THEN (((rt0.c2))==((NULL))) WHEN UNICODE(rt0.c2) THEN (vt1.c0 IN (vt0.c0)) WHEN rt0.c2 THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) ELSE vt0.c0 COLLATE RTRIM END HAVING COUNT(((rt0.c1)LIKE(rt0.c2)));SELECT (rt0.c0 COLLATE NOCASE IN (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) IS TRUE))) FROM vt0, rt0, vt1 WHERE ((((((0.30966358433333063, '0.7019556785684317', NULL)) NOT BETWEEN (('', x'', x'')) AND ((0.2256938778094565, NULL, NULL)))) NOTNULL)); -- 0ms;
SELECT AVG(((rt0.c1)|(rt0.c0))) COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT ALL LOWER(((rt0.c1)AND('1007181441'))) FROM vt0, vt1, rt0 WHERE (((NULL)>>(CAST(NULL AS REAL)))); -- 0ms;
SELECT ((rt0.c0 COLLATE NOCASE)&(((((rt0.c1)OR('-1070225092')))AND(vt0.c0)))) FROM vt0 WHERE (TRIM(DISTINCT (~ (x'')), CASE x'0567'  WHEN '' THEN '1225284479' WHEN '-233325250' THEN 0.9949944389323124 WHEN '358155361' THEN NULL END));SELECT ALL ((((rt0.c1)IS(rt0.c2)))|(((((((((vt1.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))) FROM vt1 GROUP BY CAST(CAST(rt0.c2 AS TEXT) AS INTEGER);SELECT (~ ((((x'0de3', vt1.c0, vt0.c0))==((vt1.c0, rt0.c1, rt0.c1))))), (((((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))AND('1547283589')))AND(vt1.c0)))AND(rt0.c1)))OR(vt1.c0)), ((((vt0.c0)AND(vt1.c0)))OR(rt0.c2)), CASE NULL  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END))<=((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)), CAST(vt0.c0 AS TEXT), ((vt0.c0)+(rt0.c1))))), '142837202', ((((((vt0.c0)<(vt1.c0)))OR(rt0.c2 COLLATE BINARY)))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))), vt0.c0 FROM rt0, vt1, vt0 WHERE (((LOWER(0.3939455989111995)) ISNULL)) ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt0.c0)&(((rt0.c1) NOT NULL))) FROM rt0, vt1, vt0 WHERE ((((0.7340346735053175)) BETWEEN ((NULL)) AND (('-1132836082'))) COLLATE BINARY); -- 0ms;
SELECT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (ABS(vt1.c0)) AND (((rt0.c2) NOTNULL))) FROM vt0 WHERE (CASE WHEN (- (0.35217458102297994)) THEN (('') IS FALSE) END) ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(vt1.c0)))|(CASE rt0.c1  WHEN rt0.c1 THEN 'cE%di' ELSE 0.528735878789195 END)) DESC  NULLS FIRST;SELECT DISTINCT ((INSTR(vt1.c0, vt0.c0)) NOTNULL) FROM vt1 NATURAL JOIN vt0 WHERE (((((NULL)<=(x'5835'))) NOT BETWEEN ((~ ('A-(nw'))) AND (x'' COLLATE NOCASE))); -- 0ms;
SELECT ((((~ (rt0.c1))))<=((NULL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))||((- (rt0.c1)))) FROM vt1 WHERE ((((('330793584')OR(NULL)))OR((-8.66416846E8 IN ())))) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY))  NULLS LAST;SELECT DISTINCT ((vt1.c0) ISNULL) COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT ((((((vt1.c0)OR(NULL)))AND(rt0.c2))) NOT BETWEEN ((((rt0.c1))>=((rt0.c0)))) AND (((rt0.c0)+(vt0.c0)))) FROM vt1, rt0;SELECT DISTINCT (((((rt0.c2))>((rt0.c0))))!=(((vt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)))), ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT NULL), (((rt0.c2))<((rt0.c2))) COLLATE RTRIM FROM rt0, vt0 WHERE ((((-2134957318 IN ()))AND(CASE x''  WHEN NULL THEN 0.25347564059419925 ELSE NULL END)));SELECT DISTINCT ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) ISNULL) FROM vt0, vt1, rt0 WHERE (ABS(DISTINCT CASE WHEN NULL THEN 0.36732968866075544 WHEN NULL THEN '1178276025' WHEN '{*^	i' THEN 0.207082797661429 WHEN 0.26182822784833404 THEN x'' WHEN x'b00a' THEN NULL END)); -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN vt0.c0 WHEN '448617280' THEN rt0.c2 END COLLATE RTRIM FROM vt0, rt0, vt1 WHERE (((x'')=(((x'')<>(4.0719479E7))))); -- 0ms;
SELECT ((((((vt1.c0)|(vt1.c0)))AND((('髕N>\reQRfp')&(rt0.c1)))))AND(((((rt0.c2)OR(rt0.c0)))AND(x'')))) FROM vt1, rt0; -- 0ms;
SELECT ALL (((- (rt0.c2))) NOTNULL) FROM rt0 WHERE (((((-1074099455)AND(CASE WHEN 3.20387915E8 THEN NULL END)))OR(((6.34021377E8)>(NULL))))) GROUP BY CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT); -- 0ms;
SELECT (((rt0.c2 IN ()))-(((vt0.c0)<=(vt1.c0)))), rt0.c1, ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0 COLLATE BINARY)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) FROM rt0, vt1;SELECT ALL (+ (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, vt0 GROUP BY CAST(((rt0.c0) IS TRUE) AS BLOB) HAVING (vt1.c0 COLLATE BINARY IN ()); -- 0ms;
SELECT ALL (SUM(rt0.c1) IN ()), (~ (LAST_INSERT_ROWID())), GROUP_CONCAT(CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt1.c0 END) OVER () FROM vt0;SELECT DISTINCT '2102128186', rt0.c1, AVG(((('<cv*', vt1.c0, rt0.c2, rt0.c0, rt0.c0))<>((rt0.c2, rt0.c2, vt1.c0, vt1.c0, vt0.c0)))) OVER () FROM vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN (rt0.c0)) AS BLOB), '235049177', FIRST_VALUE(CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) OVER (), (((((((vt0.c0, rt0.c1, vt0.c0))<((rt0.c0, rt0.c1, vt1.c0))))AND(MIN(-1.142368005E9, x''))))AND((((rt0.c0))>((rt0.c1))))), IFNULL(((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)), ((rt0.c0)OR(vt1.c0))) FROM vt0, rt0 ORDER BY CASE 0.3333666345812364  WHEN ((vt0.c0)LIKE(rt0.c1)) THEN rt0.c1 ELSE vt1.c0 COLLATE NOCASE END;SELECT ALL (('0.6655198047685011')==((vt0.c0 IN (rt0.c0)))), COUNT(CAST(rt0.c0 AS REAL)) OVER (), CASE WHEN ((rt0.c1)%(rt0.c0)) THEN json_object(rt0.c1, rt0.c1) ELSE vt1.c0 COLLATE BINARY END FROM vt0;SELECT ALL ((rt0.c2 COLLATE NOCASE) NOTNULL) FROM vt1, rt0 WHERE ((+ (CASE 1985706209  WHEN 'HO' THEN '<QcHdk' WHEN NULL THEN 0.2677210605269871 WHEN 1475916934 THEN NULL ELSE 0x22503cb END))); -- 0ms;
SELECT ALL TOTAL('') FROM vt1 WHERE (rtreenode(((x'')&(NULL)), (NULL IN ()))); -- 0ms;
SELECT ((((((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)AND(rt0.c0)))OR(((rt0.c0) IS FALSE))))OR(TRIM(DISTINCT x''))))AND(((vt0.c0) NOT NULL))) FROM vt0, vt1 WHERE ('Fjo䋒%.');SELECT ALL FIRST_VALUE(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) OVER () FROM vt0, rt0, vt1; -- 0ms;
SELECT DISTINCT (((0.32485994397688434, rt0.c1, '1005756602')) BETWEEN ((vt1.c0 COLLATE BINARY, (~ (rt0.c0)), AVG(rt0.c1))) AND ((((vt1.c0)<=(rt0.c0)), AVG(vt1.c0), (+ (rt0.c0))))) FROM vt0, vt1, rt0 WHERE (((((('bN>!'))<>(('')))) IS FALSE)); -- 0ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN (((('')/(vt1.c0)))) AND ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2))))) FROM rt0, vt0 NOT INDEXED, vt1 NOT INDEXED WHERE (((1.169453375E9 COLLATE BINARY) ISNULL)) ORDER BY (vt0.c0 IN ((~ (rt0.c1)), (+ (rt0.c2))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt1.c0 FROM rt0, vt0, vt1 ORDER BY (~ (((vt0.c0) ISNULL)))  NULLS LAST, ((((NOT (rt0.c0))))<=((((vt1.c0)-(vt1.c0))))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT '-476671341' FROM rt0, vt1 LIMIT -830986459; -- 0ms;
SELECT ALL (NOT (((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, vt0, rt0; -- 0ms;
SELECT ALL ((rt0.c0)!=(vt1.c0)) COLLATE BINARY FROM vt1, rt0, vt0; -- 0ms;
SELECT 1607321245 FROM vt1 WHERE (((((CAST(NULL AS NUMERIC))AND((0.9731830054288135 IN ()))))AND((((''))>=(('fp4')))))) ORDER BY CASE WHEN ((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)) THEN 'iV \rQhfJ' END ASC, rt0.c2 DESC  NULLS FIRST, ((0.9823731179961928 COLLATE RTRIM)>>(CAST(rt0.c2 AS NUMERIC))) ASC  NULLS LAST;SELECT DISTINCT COALESCE(DISTINCT ((vt1.c0)LIKE(vt1.c0)), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0))) FROM rt0 NOT INDEXED;SELECT ((rt0.c1)IS(((((rt0.c2)AND(x'1dfb2259')))AND(rt0.c1)))) FROM vt0 WHERE ((((x''))>(((x'' IN ()))))) GROUP BY ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)<(((rt0.c0)>>(vt0.c0)))) HAVING (((((((((vt1.c0 IN (vt1.c0)))OR(((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND((vt1.c0 IN (rt0.c0)))))OR((+ (vt1.c0)))))OR(((vt1.c0)+(vt1.c0))));SELECT (((vt1.c0, rt0.c2, vt0.c0)) BETWEEN ((((rt0.c2) IS FALSE), rt0.c0 COLLATE BINARY, CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 END)) AND (((((vt1.c0, vt0.c0, NULL))>=((rt0.c0, vt1.c0, 0.021196378576923802))), (((rt0.c1))<=((rt0.c1))), ''))), GROUP_CONCAT(((rt0.c2) BETWEEN (vt1.c0) AND (vt0.c0))) FILTER(WHERE rt0.c1) OVER (), AVG(((rt0.c1)==(rt0.c0))) FILTER(WHERE ((((vt0.c0) IS FALSE))>>(NULL COLLATE BINARY))) OVER () FROM vt1, rt0, vt0; -- 0ms;
SELECT ALL ((((('O-' IN ()))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c1 IN ()))) FROM rt0 WHERE (CAST('746839381' COLLATE BINARY AS INTEGER)); -- 0ms;
SELECT DISTINCT (((rt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()) FROM rt0, vt1 WHERE (((('-871997936')+('n')) IN ())); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE RTRIM AS TEXT) FROM vt1;SELECT DISTINCT CASE WHEN ((rt0.c2) ISNULL) THEN (((rt0.c0, vt1.c0, '-559140395'))<>((vt1.c0, vt0.c0, rt0.c2))) END FROM vt1, rt0, vt0 GROUP BY ('' IN ()) HAVING MIN(MAX(vt0.c0, 0.444370118448949)); -- 0ms;
SELECT ALL (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((TRIM(rt0.c0), CAST(rt0.c0 AS INTEGER), ((x'')<(rt0.c0)))) AND (((rt0.c2 IN ()), ((0X5c8a4430) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c2))), (((((+ (rt0.c1)))AND(NULLIF(rt0.c1, rt0.c0))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))), (('-642640293')AND((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM vt1, vt0, rt0 WHERE ((~ (NULL))) GROUP BY ((json_array_length(rt0.c1, rt0.c1)) NOT BETWEEN (x'' COLLATE RTRIM) AND (('-262723595' IN ()))), rt0.c0, CASE WHEN UNLIKELY(rt0.c2) THEN ((rt0.c2) ISNULL) END HAVING (((vt1.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((NULL, vt1.c0, rt0.c2 COLLATE NOCASE)) AND ((((rt0.c0) NOTNULL), MIN(rt0.c0), CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))); -- 0ms;
SELECT (('109300418') IS TRUE), MIN(CAST(vt0.c0 AS NUMERIC)), ((((vt0.c0)+(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2) ISNULL))) FROM vt0, vt1;SELECT ALL rt0.c0 FROM vt1, vt0, rt0 WHERE ((((x'') BETWEEN (x'') AND ('1290796100')) IN ())) ORDER BY ((((rt0.c0)<<(rt0.c1))) ISNULL) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN AVG(rt0.c2) THEN rt0.c1 COLLATE BINARY ELSE LTRIM(rt0.c0) END FROM vt0, rt0 WHERE ((+ (((x'')<(0.7390811982262785))))); -- 0ms;
SELECT DISTINCT vt1.c0, ((COUNT(*)) IS FALSE), rt0.c2 FROM vt0, rt0;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT rt0.c0))) AND ((GROUP_CONCAT(rt0.c1)))), 0.47087932437183233, ((681902692 COLLATE RTRIM)IS NOT('6A')) FROM rt0;SELECT ALL (- (((0x79a645ac)-(vt0.c0)))) FROM vt0, rt0, vt1 WHERE (CAST((('586586745')%('0.1465452626136502')) AS BLOB)) GROUP BY ((((((((LENGTH(vt0.c0))AND(CASE WHEN vt1.c0 THEN rt0.c0 END)))OR(CAST(rt0.c2 AS TEXT))))AND(((vt0.c0) NOT NULL))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE vt1.c0 END)) LIMIT 1123078827; -- 0ms;
SELECT (NOT ((('|<c\r0r') BETWEEN (vt1.c0) AND (rt0.c2)))), NULL, MAX(CAST(rt0.c0 AS INTEGER)) FROM vt1 GROUP BY CASE json(x'30f9')  WHEN ((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(vt1.c0)) THEN rt0.c0 WHEN ((vt1.c0)&(rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)) THEN -1810856886 ELSE ((rt0.c0)OR(rt0.c2)) END;SELECT DISTINCT SQLITE_SOURCE_ID() FROM vt0 WHERE (200756663); -- 0ms;
SELECT DISTINCT load_extension((- (rt0.c1))) FROM vt0 WHERE ((((((2.022129578E9, 0.39547702415133357, 0.4728904473035388))>(('a<A|h)', x'', x'')))) ISNULL));SELECT (((vt1.c0 IN ())) ISNULL) FROM vt0, rt0, vt1 WHERE (CAST(((NULL)LIKE(0.7571935152718353)) AS TEXT)); -- 0ms;
SELECT ALL (((rt0.c0 IN (rt0.c2, vt1.c0)))<(CASE NULL  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), (NOT (vt0.c0 COLLATE BINARY)), CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END AS TEXT), (~ ((((vt0.c0, rt0.c0, rt0.c0))<=((rt0.c1, '1985706209', rt0.c0))))), (NOT (((rt0.c1)||(rt0.c0)))) FROM vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((vt1.c0) ISNULL)))) FROM vt1; -- 0ms;
SELECT ALL ((rt0.c1) ISNULL) COLLATE NOCASE, (~ (((vt1.c0) BETWEEN (rt0.c0) AND (NULL)))), CASE WHEN ((rt0.c1)<(rt0.c2)) THEN ((rt0.c0)&(rt0.c1)) WHEN ((rt0.c1) NOTNULL) THEN rt0.c1 COLLATE BINARY WHEN ((vt1.c0) IS TRUE) THEN CASE rt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN 0.6905967908328894 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE rt0.c0 END END FROM rt0, vt0;SELECT ALL LEAD(CAST(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS TEXT), CASE WHEN (((vt1.c0))<=((vt1.c0))) THEN COALESCE(vt1.c0, vt1.c0) WHEN (~ (vt1.c0)) THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt1.c0)) END, (NOT ((~ (vt1.c0))))) OVER ( GROUPS  CURRENT ROW EXCLUDE TIES) FROM vt1 WHERE (((((x'401c')<=('lU⺓(<(i*v')))+(CAST('-336949799' AS NUMERIC)))); -- 1ms;
SELECT DISTINCT (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) FROM vt0, rt0, vt1 WHERE (CASE WHEN (- (0.746435308130378)) THEN ((((0.9731830054288135)AND(NULL)))AND('')) ELSE ((0.4958570463793791)IS NOT(5.61018809E8)) END); -- 0ms;
SELECT DISTINCT MAX((((-1292348014, rt0.c0, rt0.c1)) BETWEEN ((x'', rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c1)))) FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((NOT (x'')) IN ())) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOTNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE BINARY AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(((vt0.c0)-(rt0.c2))) FROM vt0 ORDER BY (((rt0.c2)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((CAST(rt0.c2 AS BLOB))))  NULLS FIRST;SELECT ((((vt1.c0)OR(rt0.c0)))AND(vt0.c0)) COLLATE BINARY, (NOT (CAST(rt0.c0 AS BLOB))), ((((CASE vt0.c0  WHEN 'Gl<cB⃆' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE vt1.c0 END)OR(IFNULL(rt0.c2, '0.0442777687819057'))))AND(vt1.c0 COLLATE RTRIM)) FROM vt1 ORDER BY CAST(((vt0.c0)/('')) AS TEXT) DESC;SELECT DISTINCT CAST(rt0.c0 AS TEXT) FROM rt0, vt0 WHERE (((((('jXDXA䝙' IN ()))OR('0.0' COLLATE RTRIM)))AND(CASE '\r䁩Z/Cce'  WHEN 0.7926136297459817 THEN NULL WHEN '' THEN '-1631996160' WHEN x'f362' THEN NULL END))); -- 0ms;
SELECT DISTINCT CASE WHEN '<]' THEN ((rt0.c1)OR(vt1.c0)) ELSE MAX(vt0.c0) END FROM rt0, vt0, vt1; -- 1ms;
SELECT (+ ((vt1.c0 IN ()))), ((((vt0.c0)<<(vt1.c0)))-(x'cbb8')), x'75cc7212' FROM vt1, vt0 GROUP BY ((((NULL)AND(0.43167259173323413)))AND((((vt1.c0))=((rt0.c0))))) HAVING (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN ((AVG(NULL), (rt0.c1 IN ('e''')), '1871404506')) AND ((((rt0.c0) IS TRUE), CAST(0.5059177471444778 AS INTEGER), ((rt0.c0)/(vt0.c0))))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS INTEGER) DESC, ((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))AND(('1969013065' IN ()))))AND('320387915'));SELECT DISTINCT rt0.c2 COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END))) FROM vt0, vt1;SELECT ALL 0Xffffffff9de2e4a7 FROM vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT ((((rt0.c1)AND(vt1.c0)))OR(vt0.c0)), ((vt1.c0)/(rt0.c0))) FROM vt1;SELECT ALL SUM(IFNULL(DISTINCT vt1.c0, vt0.c0)) OVER (), ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((vt1.c0)AND(vt0.c0)))OR(rt0.c0)))OR(NULL)))OR(rt0.c1))) AND ((((rt0.c1, vt1.c0, rt0.c2))>((vt0.c0, rt0.c2, 0.11249136224777789))))), LIKE(((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)), ((vt0.c0)+(0.35228132722101024)), 'n') FROM vt1;SELECT ALL ((((NULL) BETWEEN (vt1.c0) AND (rt0.c1)))!=(((rt0.c0)!=(vt1.c0)))), rt0.c1, SUM(((rt0.c0) NOT NULL)) OVER () FROM rt0, vt0, vt1; -- 1ms;
SELECT ALL 1042835556 FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((('1S')) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((TOTAL(vt0.c0)))) FROM rt0 WHERE (CAST(CAST(0.8856229433662302 AS INTEGER) AS TEXT)) LIMIT -1753243518 OFFSET 1251912841;SELECT ALL (- (((((0.30077344895147007)AND(vt1.c0)))OR(rt0.c2)))), ((((((rt0.c2)AND(rt0.c0)))OR(0.31670535306233794)))-(((rt0.c1)!=(rt0.c2)))), COUNT((+ (rt0.c1))) OVER ( ORDER BY HEX(DISTINCT vt0.c0)  NULLS FIRST ROWS  CURRENT ROW) FROM rt0, vt1;SELECT DISTINCT CAST(x'' AS BLOB) FROM vt0, vt1, rt0 WHERE ((((0.42668217425108146)) NOT BETWEEN ((((0.3010563820018851) NOT BETWEEN (0x47e441c9) AND (x'')))) AND (((0.2377153786439825 IN (x'f0cb')))))); -- 0ms;
SELECT DISTINCT CAST((((rt0.c1))=((vt0.c0))) AS REAL) FROM rt0, vt0 WHERE (ABS(DISTINCT '-1584035328' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT SUM(LIKELIHOOD(rt0.c1, 0.8255027824595151)) FROM rt0, vt1 WHERE (((CAST('k%' AS BLOB))*((- (0.8526481889162835))))); -- 0ms;
SELECT DISTINCT ((0.357843331537509) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(vt0.c0)) AND (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) FROM vt1, rt0 NOT INDEXED WHERE ((((x'' IN ()))IS(((NULL) ISNULL))));SELECT ALL CHANGES() FROM rt0, vt0 GROUP BY (CAST(rt0.c2 AS NUMERIC) IN ()) HAVING ((AVG(rt0.c2)) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (COUNT(rt0.c2))); -- 0ms;
SELECT ALL '', ((MIN(rt0.c2)) NOT BETWEEN (rt0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))), (+ (rt0.c1 COLLATE RTRIM)) FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2, vt0.c0, rt0.c2))<>(('v\P', rt0.c0, vt0.c0)))) BETWEEN ((rt0.c1 IN (vt1.c0, rt0.c2))) AND ((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))), ((((vt0.c0)>>(rt0.c0)))+(((rt0.c0)LIKE(rt0.c0)))), CASE CAST(rt0.c1 AS REAL)  WHEN CAST(vt1.c0 AS NUMERIC) THEN 0.13126550081081956 ELSE ((vt0.c0) NOT NULL) END FROM vt1 WHERE (((((((((((NULL)AND(-1.214192373E9)))OR(837291298)))OR(0.5101669617043345)))OR(NULL))) NOTNULL));SELECT DISTINCT ((CAST(rt0.c0 AS INTEGER))IS NOT((+ (rt0.c2)))) FROM vt0, vt1 WHERE ((~ (LIKELY('2022129578'))));SELECT DISTINCT NTH_VALUE(CASE 'munY.ຂ^'  WHEN CASE WHEN rt0.c0 THEN NULL END THEN (((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) WHEN ((0.8168280159173715)+(rt0.c0)) THEN LIKELY(rt0.c1) WHEN CAST(NULL AS NUMERIC) THEN CASE WHEN vt1.c0 THEN vt0.c0 END WHEN x'' THEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN 'aE' THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END WHEN (- (vt0.c0)) THEN (~ (vt0.c0)) ELSE (~ (vt0.c0)) END, CASE WHEN (NOT (vt0.c0)) THEN CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN 0.8599322986191421 THEN rt0.c0 ELSE vt1.c0 END ELSE '+4꧝Bf' END) OVER () FROM vt0, vt1, rt0 WHERE ((((TRIM(DISTINCT '0OY(ChJ&')))=(((+ ('')))))); -- 1ms;
SELECT (- ((+ (vt1.c0)))) FROM vt1 WHERE (TRIM(((((x'')AND(NULL)))OR(x'f7a1')))); -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(rt0.c2 AS TEXT)) FILTER(WHERE COALESCE(((((vt0.c0)OR(1.225284479E9)))OR(rt0.c2)), ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) OVER ( PARTITION BY ((- (vt1.c0)) IN ()), CAST(LOWER(DISTINCT vt1.c0) AS INTEGER)), (((((NULL)) NOT BETWEEN ((0.021196378576923802)) AND ((rt0.c1))))>>(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.763894642179002)))), (((rt0.c1)) NOT BETWEEN (((((rt0.c1))<((vt0.c0))))) AND (('-1436529540'))), COUNT(*), TOTAL((((rt0.c1))<((vt1.c0)))) FROM vt1 ORDER BY CASE (NOT (rt0.c1))  WHEN LIKELIHOOD(0x6c2d05c5, 0.2792636417370479) THEN ((('1029640190')) BETWEEN ((rt0.c1)) AND ((x'fe42'))) END LIMIT 752171092;SELECT DISTINCT CASE (vt1.c0 IN ())  WHEN ((0X88385d2)>>(rt0.c1)) THEN rt0.c2 WHEN rt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (rt0.c2) AND (x'')) WHEN CASE vt0.c0  WHEN 'Vq쮭1\r' THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END THEN (rt0.c1 IN ()) END FROM vt1;SELECT DISTINCT 0.8878832510789036 COLLATE NOCASE, rt0.c1, LIKELIHOOD(((rt0.c0)/(0X1ea116f2)), 0.8639901571489578) FROM rt0, vt1, vt0; -- 0ms;
SELECT ALL vt0.c0, 0.08855553244352043, CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN 'I' WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 END THEN (+ (rt0.c2)) ELSE vt1.c0 COLLATE RTRIM END FROM vt0, vt1, rt0; -- 1ms;
SELECT DISTINCT vt1.c0 FROM vt0 WHERE (((0.9638197364896882) BETWEEN ('t*4*븵9%[') AND ('0OY(CHJ&')) COLLATE BINARY);SELECT ALL json_object((((rt0.c0, '-830986459', rt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0, rt0.c1, vt0.c0)) AND ((vt1.c0, rt0.c1, rt0.c1, rt0.c2, vt1.c0))), (vt1.c0 IN ())) FROM rt0 WHERE (((((((((0Xffffffff9a663c1c)OR(NULL)))OR(NULL)))AND('1524042025')))OR(((x'') NOT NULL))));SELECT DISTINCT CAST(LOWER(rt0.c2) AS TEXT), (((rt0.c2)*(vt0.c0)) IN ()), CAST((- (rt0.c1)) AS INTEGER) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS FALSE)) NOTNULL), COUNT(rt0.c2) OVER (), (((rt0.c1))>((CAST(rt0.c2 AS REAL)))) FROM rt0, vt0, vt1 WHERE (((((x'')IS(x'')))IS NOT(((NULL)>(0xffffffffa7ac8c27))))); -- 0ms;
SELECT DISTINCT (((vt1.c0, rt0.c0, vt0.c0)) BETWEEN (((vt1.c0 IN ()), NULLIF(DISTINCT rt0.c1, vt0.c0), rt0.c2)) AND ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), ((rt0.c1) IS TRUE), ((vt1.c0)<(rt0.c0))))), ((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)) COLLATE RTRIM, (LIKELIHOOD(0.13169662167805596, 0.36462258975818884) IN ()) FROM rt0;SELECT DISTINCT '-249215707' FROM vt1, vt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ((vt0.c0 IN ()) IN (vt0.c0)) FROM rt0 WHERE ((((~ (x'')))=((+ (0.09942905947423164)))));SELECT DISTINCT MIN(vt0.c0, (~ (vt0.c0))), (((((vt0.c0))<>((rt0.c1)))) IS TRUE), (((((vt1.c0) NOT NULL), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (+ (rt0.c1))))>((((rt0.c0)<<(x'')), rt0.c2 COLLATE RTRIM, ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) FROM vt0, vt1;SELECT ALL NULLIF(DISTINCT COALESCE(vt1.c0, rt0.c2), CAST(rt0.c0 AS NUMERIC)) FROM rt0 WHERE (((((('-132169526' IN ()))AND(x'43fa' COLLATE NOCASE)))AND((('c﹪%jC8X')>>('1075476927'))))) GROUP BY (((((NOT (vt1.c0)))OR(NULL)))AND(NULL)) ORDER BY ((- (vt1.c0)) IN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) LIMIT -6026942;SELECT ALL ((rt0.c1) NOT NULL), COUNT(*), ((vt1.c0)IS NOT(vt0.c0)) COLLATE RTRIM, 0.5044565419788299, (NOT (((vt0.c0) NOTNULL))) FROM vt0;SELECT AVG(CAST(rt0.c0 AS INTEGER)) OVER (), CAST(((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)) AS NUMERIC), CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c2 END COLLATE NOCASE FROM rt0, vt0, vt1 WHERE (-1.481864153E9); -- 0ms;
SELECT TRIM(vt1.c0 COLLATE RTRIM, ((rt0.c1) IS FALSE)) FROM rt0, vt1 WHERE ('103023113'); -- 0ms;
SELECT DISTINCT (- (CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c0 THEN NULL END)), CUME_DIST() OVER (), CASE WHEN (rt0.c0 IN (vt1.c0, rt0.c0)) THEN (((rt0.c1))<>((rt0.c0))) END, ((((rt0.c0) BETWEEN ('') AND (rt0.c1)))AND(LIKELY(rt0.c1))), (CAST(rt0.c0 AS INTEGER) IN ()) FROM rt0;SELECT rt0.c1 FROM vt0, vt1 WHERE (CASE ((((((((-6.35332826E8)AND(0.3302218281709901)))OR(NULL)))AND(x'')))OR('now'))  WHEN CAST(NULL AS REAL) THEN CAST(-100907939 AS BLOB) ELSE ABS(0.13602250784394077) END) LIMIT -1751414189 OFFSET 1578911248;SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN -1.197330822E9 ELSE rt0.c2 END AS REAL) FROM rt0, vt0, vt1 WHERE (CAST(x'82a9' COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((+ (x''))) NOT BETWEEN (rt0.c2) AND (((rt0.c2)<<(rt0.c0)))), LAST_VALUE(vt1.c0 COLLATE RTRIM) OVER (), ROW_NUMBER() OVER () FROM vt0, rt0, vt1 WHERE ((((('\rL''E') NOT BETWEEN (0.8690450397276208) AND (']\n]'))) NOTNULL)); -- 0ms;
SELECT vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c1 AS INTEGER))) FROM vt0, rt0 WHERE (((((712562922)>>(0.23002670109819312)))!=(UPPER(DISTINCT 0.5762663775880922)))); -- 0ms;
SELECT ALL CASE WHEN ABS(DISTINCT rt0.c0) THEN LOWER(rt0.c0) WHEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN (vt0.c0 IN (vt0.c0)) WHEN (((rt0.c1)) NOT BETWEEN ((0.3748359948625317)) AND ((NULL))) THEN MAX(rt0.c2) END FROM vt0, vt1 WHERE ((((NULL IN ())) ISNULL));SELECT DISTINCT CAST((+ (rt0.c0)) AS NUMERIC) FROM rt0 WHERE (CAST(NULL AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) IN ()), 0.2823020323770743, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)))+(CASE WHEN vt1.c0 THEN rt0.c0 END)) FROM rt0 WHERE (('-1863235878' IN ())) LIMIT -192546409;SELECT DISTINCT (+ ((rt0.c1 IN (rt0.c2)))), STRFTIME(((('\s,!*95p燿')) BETWEEN ((vt0.c0)) AND ((rt0.c2))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)), vt0.c0 COLLATE RTRIM), ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))))AND((((vt0.c0))>=((vt1.c0))))) FROM rt0 LIMIT 1081287760;SELECT ALL ((((((((((rt0.c1)IS(rt0.c1)))AND((~ (rt0.c0)))))OR(vt0.c0)))AND((((rt0.c2, rt0.c1, vt0.c0))>((vt1.c0, rt0.c1, vt1.c0))))))OR(((vt1.c0)>>(rt0.c0)))), GROUP_CONCAT(((vt1.c0) NOTNULL)) OVER ( PARTITION BY ((((((rt0.c2) NOT NULL))OR((vt0.c0 IN (vt0.c0, vt1.c0, rt0.c2)))))OR(CASE WHEN rt0.c1 THEN vt0.c0 END)), (- (((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1))))), ((x'')>=((rt0.c0 IN ()))) FROM rt0 WHERE (((((((0.8716486932080377)AND(NULL)))OR(NULL)))<=(((x'')GLOB('lh✥wHq*')))));SELECT ALL COUNT(*) OVER (), (((((rt0.c1))=((rt0.c2)))) BETWEEN ((vt1.c0 IN (vt1.c0))) AND ((NOT (rt0.c2)))), UPPER(DISTINCT rt0.c2) COLLATE RTRIM, vt1.c0, (vt1.c0 COLLATE BINARY IN ()) FROM vt0 WHERE (CAST((('1289079715')IS(0.7474796674404882)) AS TEXT)) ORDER BY (((((vt0.c0) IS FALSE)))==((CAST(vt0.c0 AS BLOB))));SELECT ((((rt0.c2) BETWEEN (vt1.c0) AND (-415654494))) NOT BETWEEN (((rt0.c0)<<(rt0.c2))) AND ((vt0.c0 IN ()))) FROM rt0 WHERE ((((- ('YbK3{D'))) BETWEEN (((0.5615133795498864) IS FALSE)) AND ((((''))<>((x'c3c5'))))));SELECT ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR((NOT (vt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((rt0.c2) IS FALSE))) FROM vt0 WHERE (CAST((~ ('-1345895360')) AS BLOB)) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN ((((vt1.c0))=((rt0.c2)))) AND (CAST(rt0.c2 AS REAL))) ASC;SELECT ALL (((((rt0.c0, vt1.c0, rt0.c1))<((rt0.c0, rt0.c1, rt0.c1)))) NOT BETWEEN (rt0.c0) AND ((+ (vt1.c0)))) FROM vt0, rt0, vt1 WHERE (((((0.8526481889162835) BETWEEN ('412474406') AND (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT NULL))<=(UNICODE(vt1.c0))) FROM rt0, vt1 WHERE (CASE WHEN '445182923' THEN 0.1585633953176957 END COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT CASE '0.01552539469221248'  WHEN x'829c' THEN ((rt0.c1) IS TRUE) END FROM vt1, rt0 GROUP BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN (json_quote(rt0.c2))), ((((vt0.c0)>(rt0.c1)))OR((((rt0.c1, NULL, rt0.c1))=((rt0.c2, vt0.c0, vt0.c0))))), CASE WHEN (- (vt1.c0)) THEN ((((((((((((rt0.c1)AND(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) ELSE ((vt1.c0)AND(vt0.c0)) END;SELECT DISTINCT AVG((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) FROM vt0, vt1 WHERE (((0.9948721827169849 COLLATE BINARY) NOT NULL));SELECT ALL ((CAST(vt1.c0 AS TEXT))&((rt0.c2 IN ()))) FROM vt1, rt0 GROUP BY CASE WHEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt1.c0 END THEN ((rt0.c2) ISNULL) ELSE vt0.c0 COLLATE BINARY END, LIKELIHOOD(DISTINCT (((rt0.c2))<=((rt0.c1))), 0.37940630561064825), ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))&(((rt0.c1) IS FALSE)));SELECT ALL ((x'') NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (vt1.c0 COLLATE BINARY)) FROM rt0 WHERE (((('-476671341', x'cebc', NULL)) BETWEEN ((((NULL) BETWEEN (x'') AND (6.4363162E8)), (((0.8526481889162835, NULL, '-1069316119')) NOT BETWEEN ((x'', NULL, 1388479545)) AND ((0.06618701454234, 0xffffffffafc74440, -1895884246))), ((x'') NOTNULL))) AND ((((NULL)*(NULL)), (((1289209972, 0.011251642914597015, 0xffffffffdd88752c))<((x'73ba', NULL, NULL))), CAST(0.3596690963176662 AS NUMERIC)))));SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (NULL COLLATE RTRIM) AND (UNICODE(rt0.c2))), (NOT (SUM(vt1.c0))), ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END) NOT BETWEEN ((rt0.c0 IN ())) AND ((rt0.c1 IN ()))) FROM vt1, rt0;SELECT (~ ((vt0.c0 IN (rt0.c0)))), (UPPER(vt0.c0) IN ()), (- (((NULL) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM vt0;SELECT DISTINCT CAST(vt1.c0 AS REAL) FROM vt0, rt0;SELECT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM vt0, rt0, vt1 WHERE (((((x'2815')GLOB('Q*c!d}!!	'))) NOT BETWEEN (CASE '1030943294'  WHEN 'fp4' THEN '0.3266034929234376' END) AND (json_patch(NULL, '2138157450')))); -- 0ms;
SELECT DISTINCT LOWER(LTRIM(rt0.c1, rt0.c1)) FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN (+ ('-104611839')) THEN (((0.02935732738895125, 0.6524707925220794, 0.0824368083965733, NULL, 0.7915175116192334)) NOT BETWEEN ((x'', NULL, '', '-942247920', NULL)) AND ((488709421, 'Tq{', '0.47087932437183233', -8.30986459E8, 0.3282582405553133))) WHEN ((0.14485643651052194) NOT BETWEEN (7.12562922E8) AND ('-1895884246')) THEN (((15940006))>(('1403746459'))) WHEN (2010991092 IN ()) THEN ((((x'')OR('142837202')))AND('{Eh')) WHEN (('745820444') NOT BETWEEN ('3Th**[rhB') AND (x'')) THEN (x'65c3' IN (NULL, 0.0615196646760896)) WHEN (('nn	z2') NOT BETWEEN (x'1921') AND ('KB2')) THEN (1029640190 IN (NULL)) WHEN (('712562922') NOT NULL) THEN NULL WHEN (('73773120') NOT BETWEEN (NULL) AND ('\{l\)')) THEN LIKELIHOOD(0.7687043442422942, 0.19996169861020618) END); -- 0ms;
SELECT DISTINCT '' FROM vt1 WHERE ((((((((((((('p_qf_gM+K')OR(((((((((((((801007914)OR(0.5599454273662854)))OR(x'f54d')))OR(x'')))AND(0xffffffffea74341d)))AND(NULL)))OR(1e500)))))AND(((x'fd0b') NOT BETWEEN (1029640190) AND ('Jꦭ&nut')))))AND((- ('-559140395')))))AND((~ ('')))))AND(NULL COLLATE NOCASE)))AND(((NULL) ISNULL)))); -- 0ms;
SELECT MAX(AVG(json_array(vt0.c0, rt0.c2))) FROM vt1, vt0 WHERE ((((((NULL) ISNULL)))>((NULL COLLATE RTRIM))));SELECT ALL (('o.') NOTNULL) FROM vt0, vt1 WHERE (((NULL)IS NOT(CAST(NULL AS BLOB)))); -- 0ms;
SELECT LAG(ABS(DISTINCT 0.8718614910041761), (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN vt0.c0 THEN rt0.c2 ELSE 'jm\zN' END)), LIKELY((+ (rt0.c1)))) OVER (), (((((((('')AND(((rt0.c2)>(rt0.c2)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN -1465908705 THEN rt0.c2 END)))OR(CASE WHEN vt1.c0 THEN NULL END)))OR(vt0.c0 COLLATE RTRIM)), ((vt0.c0)>(rt0.c0)) COLLATE BINARY FROM rt0, vt0 WHERE ((((NULL)) NOT BETWEEN ((((0.1528379834215431) IS TRUE))) AND ((((1.403746459E9)%(NULL)))))) ORDER BY NULL COLLATE RTRIM, ((((vt0.c0) IS TRUE)) IS FALSE) ASC  NULLS LAST;SELECT DISTINCT CASE (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((x'')))  WHEN (NOT (rt0.c0)) THEN '561018809' END FROM vt0 WHERE (CASE CAST('-1895884246' AS INTEGER)  WHEN ((x'c93d')&(-1.858599718E9)) THEN ((x'')>>(0.8740206489569126)) ELSE ((x'')IS('/XH,BQ輊^')) END);SELECT DISTINCT CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END THEN ((((((((vt1.c0)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)) END FROM vt0 WHERE (CASE WHEN ((NULL)+(NULL)) THEN ((((x'')AND(1978793530)))OR(NULL)) END);SELECT ALL ((x'')==((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM rt0, vt0, vt1 WHERE ((((+ (0.8245483673812827))) ISNULL)); -- 0ms;
SELECT CAST(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END AS REAL) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c1))&((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))), TRIM(DISTINCT rt0.c0) COLLATE NOCASE, (+ (CASE x''  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) FROM rt0 WHERE (0.33435020059607223);SELECT DISTINCT (NOT (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))), ((rt0.c2) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(rt0.c1))) AND (((rt0.c1)%(vt1.c0)))), ((((NULL) IS FALSE)) NOT NULL) FROM vt0, vt1 WHERE (((((((((((0.9438525806069605)AND(0.4192099479971165)))AND(x'')))OR(NULL)))AND(0xffffffff8c596c3c)))&(x'')));SELECT x'fc45', ((LIKE(vt0.c0, vt1.c0, '0'))>>(COUNT(vt1.c0))), (rt0.c2 IN ()) FROM vt0, vt1, rt0 WHERE (((x'') IS FALSE)); -- 0ms;
SELECT ALL NTH_VALUE(vt1.c0, ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE NOCASE) OVER () FROM vt1, rt0 WHERE ((((x'bc21' IN ())) NOT BETWEEN ((4.0719479E7 IN ())) AND (CASE 0xffffffffb7ece98c  WHEN NULL THEN '' END))); -- 0ms;
SELECT ((((((x'd83a')<<(rt0.c1)))OR(((vt1.c0)>=(vt1.c0)))))AND(',2䋅<b댔')) FROM vt0;SELECT ((rt0.c0 COLLATE NOCASE)AND(NULL)) FROM vt1, vt0, rt0 WHERE (CASE WHEN NULL THEN UNLIKELY('U[u') WHEN ((x'')-(0.7267699975068094)) THEN (x'' IN ('0.1465452626136502')) WHEN ((0.054775243814178864)<<(NULL)) THEN (- (NULL)) END); -- 0ms;
SELECT DISTINCT (vt1.c0 COLLATE BINARY IN ()) FROM vt1, rt0, vt0; -- 0ms;
SELECT ALL ((((((rt0.c2)OR(vt1.c0)))AND(vt0.c0)))-(SQLITE_COMPILEOPTION_GET(rt0.c1))) FROM rt0, vt1 WHERE ((((((NULL))>((x'')))) BETWEEN (CASE '-1895884246'  WHEN '' THEN NULL ELSE NULL END) AND (((0.996386920346952) BETWEEN ('1333127317') AND (0.04255052793122971)))));SELECT DISTINCT (CAST(vt1.c0 AS BLOB) IN ((vt0.c0 IN ()))) FROM vt0, rt0, vt1 WHERE ((+ ((+ ('<QcHdk'))))); -- 0ms;
SELECT (+ (MAX(vt1.c0, rt0.c2, vt0.c0, vt0.c0))) FROM vt0;SELECT DISTINCT ((((SUM(rt0.c1))OR((+ (vt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) FROM vt0, rt0; -- 0ms;
SELECT ALL (((NULL))>=(((x'' IN ())))), CAST(LIKELY(rt0.c2) AS BLOB), (~ (rt0.c0 COLLATE BINARY)), ((((((rt0.c1)AND(rt0.c2)))OR(vt1.c0)))IS(((rt0.c2)IS NOT(rt0.c2)))), 0.021196378576923802 FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(vt1.c0) FROM vt0;SELECT ALL (((vt0.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND (((((rt0.c2))=((vt1.c0)))))) FROM vt0, vt1, rt0 LIMIT 1035599916; -- 0ms;
SELECT ALL (((vt0.c0, CAST(rt0.c2 AS BLOB), ((((rt0.c1)AND(vt1.c0)))OR(vt1.c0))))<>((CASE WHEN 0.2663363686144783 THEN vt0.c0 END, CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, ABS(DISTINCT rt0.c0)))), MAX(vt1.c0 COLLATE NOCASE) COLLATE RTRIM, x'' FROM rt0, vt0;SELECT ALL CAST((('1e500') IS FALSE) AS BLOB) FROM rt0; -- 0ms;
SELECT ((CASE 651349479  WHEN '953535870' THEN vt0.c0 ELSE vt0.c0 END) IS FALSE), ((((((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)))AND(((rt0.c1)%(0X55ab0387)))))AND((NOT (vt1.c0)))))OR(x'')))OR(CAST(rt0.c1 AS NUMERIC))), (0.6016436556130411 IN ()) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1, vt0, rt0 WHERE (CASE WHEN CAST('' AS REAL) THEN ((1414292069) NOT BETWEEN ('캪[p') AND (NULL)) WHEN NULL COLLATE RTRIM THEN HEX(1387360861) WHEN (- (NULL)) THEN load_extension(0.5397354125628377, NULL) WHEN DATETIME(x'', 1240952895, x'') THEN (((-256916664))<((0.12682270157955422))) WHEN CAST(-175106807 AS INTEGER) THEN CAST('n\' AS BLOB) ELSE (NOT (0.8504466961529811)) END); -- 1ms;
SELECT DISTINCT CUME_DIST() OVER (), (- ('838462165' COLLATE BINARY)), UNICODE(LOWER(vt0.c0)) FROM vt0, vt1, rt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c0)*(rt0.c1)))), vt1.c0 DESC  NULLS FIRST, (- (((rt0.c1) NOTNULL))) ASC, ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c2)))AND((- (rt0.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL (((((rt0.c1)IS(rt0.c0)), (rt0.c1 IN (rt0.c2)), (((rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1, vt1.c0, rt0.c1)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c1, '-104611839', rt0.c1, rt0.c2, vt0.c0, vt1.c0, rt0.c2))), '-204664761', (- (x''))))<>(((+ (rt0.c0)), ((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((((((((rt0.c2)OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c2)), ((rt0.c2) NOTNULL)))), (((((rt0.c0)&(vt0.c0))))<((TOTAL(rt0.c0)))), (((CASE rt0.c0  WHEN rt0.c2 THEN 0.4063250308858537 END, ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)), ((rt0.c2) IS FALSE)))=((vt0.c0 COLLATE BINARY, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), CASE vt1.c0  WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END))) FROM rt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (0.6394932463578233) AND (rt0.c2 COLLATE RTRIM)), ((~ (rt0.c1)) IN ()) DESC;SELECT ALL CASE ((vt1.c0)*(vt1.c0))  WHEN ((vt1.c0) IS FALSE) THEN ((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)) WHEN COUNT(rt0.c0) THEN LENGTH(rt0.c2) WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c1) IS TRUE) ELSE ((rt0.c1) BETWEEN (rt0.c2) AND (-7.30107675E8)) END FROM vt1, vt0 WHERE ((((0.2507268674461809) NOT NULL) IN ()));SELECT TOTAL(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0))) FROM rt0, vt1, vt0; -- 1ms;
SELECT DISTINCT ((highlight(vt1.c0, rt0.c1, rt0.c1, rt0.c1))-(((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))) FROM rt0, vt1 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT MAX(((((vt1.c0)AND(vt1.c0)))AND('1082263034'))) FROM vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt0.c2 AS INTEGER)) OVER (), ((UPPER(vt1.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0) NOTNULL))), (NOT ((~ (0.5542261962522251)))) FROM rt0, vt0;SELECT DISTINCT CASE ((-1.255726937E9)>(vt0.c0))  WHEN AVG(vt0.c0) THEN CASE WHEN rt0.c1 THEN 1.475916934E9 WHEN 0.941812354296143 THEN vt1.c0 WHEN '' THEN rt0.c0 ELSE vt1.c0 END ELSE vt1.c0 COLLATE NOCASE END FROM rt0, vt1, vt0 WHERE ((((((((('0.7465172756478108')OR(NULL)))AND(x'b94b')))OR(0Xffffffffb8a22e7a COLLATE NOCASE)))OR(((NULL) IS FALSE)))); -- 0ms;
SELECT ALL ((((((vt1.c0))>=((rt0.c2)))))<=((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))))) FROM vt0, rt0 WHERE ((((0.6592864249114021, NULL, 0.5516074328225039)) NOT BETWEEN (((((x''))<((1.985706209E9))), (NULL IN (0X3aaa6b7f)), ((NULL)>=(NULL)))) AND ((((x'') IS TRUE), (- (0.7138894507209126)), 0xffffffffc01d2072))));SELECT DISTINCT PERCENT_RANK() OVER (), ((((NULL) IS TRUE))/(CAST(rt0.c2 AS BLOB))), (((((((((rt0.c0)OR(rt0.c1)))AND(0.6947227703920951)))AND(rt0.c2)))AND(vt1.c0)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1) NOT NULL))) FROM vt0;SELECT DISTINCT COUNT(((((rt0.c0)AND(rt0.c1)))AND(0.02041123896535224))) OVER () FROM vt0, vt1 WHERE (((CAST('' AS NUMERIC)) BETWEEN ('<zk{/7je') AND (0.4531578822994009 COLLATE RTRIM)));SELECT DISTINCT ((((((vt1.c0)%(rt0.c0)))OR(COUNT(vt0.c0))))OR(vt1.c0 COLLATE NOCASE)) FROM vt0, rt0, vt1; -- 0ms;
SELECT ((CAST(vt1.c0 AS BLOB))IS NOT(rt0.c2)) FROM vt1 WHERE (((((x'', 0.9188715335508557, NULL, '', x'a2f5'))>((NULL, 1060469977, NULL, x'', '-300548248'))) IN ()));SELECT DISTINCT TRIM(DISTINCT NULL) FROM vt1 WHERE (CASE WHEN CASE WHEN NULL THEN '(mJI8WhpC' WHEN 0.18241053490859838 THEN NULL WHEN NULL THEN '<#' END THEN ((x'6c6f')+(0.8690450397276208)) WHEN (((NULL)) NOT BETWEEN (('1493465738')) AND (('*w'))) THEN x'' COLLATE NOCASE WHEN (('-1678239621') ISNULL) THEN (('0.0') ISNULL) ELSE NULL END) LIMIT -949295797; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE) FROM rt0;SELECT ALL (NOT (CASE WHEN '-942247920' THEN rt0.c2 END)) FROM vt0 INNER JOIN rt0 ON vt1.c0 WHERE ((~ (NULL)) COLLATE RTRIM) ORDER BY ((CAST(rt0.c2 AS TEXT))OR(((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))));SELECT DISTINCT ((rt0.c0) IS TRUE) COLLATE NOCASE FROM vt1, rt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT AVG(rt0.c0), rt0.c0) FROM vt0;SELECT CAST(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END AS NUMERIC) FROM vt1, rt0, vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c1)||(vt0.c0))) OVER () FROM vt1, vt0, rt0 WHERE ((((NOT (x'a97e'))) BETWEEN ((('*qI<6~T')IS NOT(x'2f74'))) AND ('owg'))); -- 0ms;
SELECT ((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (((((((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0))) AND (((rt0.c1)<=(rt0.c0)))), CASE WHEN rt0.c0 THEN ((vt0.c0)IS NOT(rt0.c2)) END, ((x'')OR(vt1.c0 COLLATE NOCASE)) FROM vt0;SELECT DISTINCT (NOT ((NOT (rt0.c1)))) FROM vt0, rt0 WHERE (((NULL) ISNULL) COLLATE RTRIM) LIMIT 932242698 OFFSET 383695702; -- 0ms;
SELECT UNICODE((- (rt0.c1))) FROM rt0, vt0, vt1 WHERE (((2042419821)LIKE(x'dab3')) COLLATE NOCASE); -- 0ms;
SELECT ALL CAST(((((vt1.c0)AND(1855627527)))AND(rt0.c2)) AS BLOB) FROM vt1, vt0, rt0; -- 0ms;
SELECT ALL LAST_VALUE(((vt1.c0 COLLATE NOCASE)!=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))))) OVER () FROM vt0, vt1 WHERE (((CASE WHEN 0X402af791 THEN 0.2167113059062168 END) NOT NULL)); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT rt0.c2 COLLATE RTRIM), ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(((((0xffffffffda83efea)OR(rt0.c1)))AND(vt1.c0)))), (((rt0.c2 IN (rt0.c0, vt0.c0))) NOT BETWEEN (rt0.c0) AND (((vt1.c0)IS NOT(rt0.c2)))) FROM rt0, vt0 GROUP BY ((((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE) HAVING rt0.c1;SELECT DISTINCT (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) IN ()) FROM vt1, vt0 WHERE ((((NULL)) NOT BETWEEN (((('()') NOTNULL))) AND ((((((NULL)OR(0.40056761283863485)))OR('CkC1AM')))))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (NULL); -- 0ms;
SELECT ALL rt0.c2, (((((vt0.c0 IN ()))OR(COUNT(*))))OR(((vt1.c0) NOTNULL))), (((- (rt0.c1))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS REAL))) FROM vt0, rt0;SELECT DISTINCT ((CASE vt0.c0  WHEN rt0.c0 THEN '' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END) NOTNULL) FROM rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT MAX((~ (rt0.c0))) FROM vt1, rt0; -- 0ms;
SELECT 0.9924136278361572, TOTAL((- (rt0.c2))), LAG(0.9267497145714291, 'K%', ((('-971872106' IN ()))IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) OVER () FROM vt1 GROUP BY 'VUⱻ閯9J', vt1.c0, ((((rt0.c1)||(rt0.c2))) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))), 0.42172355986919097, (((vt1.c0)) BETWEEN ((((rt0.c1)+('1572870687')))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) HAVING ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (rt0.c0, rt0.c2))) AND ((('') IS TRUE)));SELECT DISTINCT (- (rt0.c2 COLLATE BINARY)), STRFTIME(rt0.c2 COLLATE NOCASE, vt1.c0 COLLATE RTRIM, ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))), (SQLITE_COMPILEOPTION_GET(rt0.c2) IN ((((vt1.c0, rt0.c0, vt0.c0, 0.46548020564242165, rt0.c2))<=((NULL, rt0.c2, 0x5b57f34a, rt0.c0, rt0.c0))))) FROM vt1 WHERE ((((('*')+(x'fb66')))>=(CAST(0Xffffffff9cfd6de5 AS TEXT)))) GROUP BY ((((vt1.c0) NOT NULL)) ISNULL) HAVING ((rt0.c1) NOT NULL) COLLATE BINARY;SELECT ALL (((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) AND (((rt0.c0)<(rt0.c2)))), ((((rt0.c1))<=((vt0.c0))) IN ((rt0.c2 IN ()), GROUP_CONCAT(rt0.c1))), NULL FROM vt1;SELECT DISTINCT ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))) AND (((((((((NULL)AND(rt0.c2)))OR(vt1.c0)))AND(NULL)))OR(rt0.c0)))) FROM vt0, vt1;SELECT DISTINCT 0xffffffff99b6dc44 FROM vt0, rt0; -- 1ms;
SELECT SUM(x'') OVER (), NTH_VALUE(((CAST(vt0.c0 AS TEXT))<=(CAST(vt0.c0 AS REAL))), NULL) OVER (), (((x'')!=(rt0.c1)) IN ()) FROM vt1, vt0 WHERE (('0.22555696808468328' IN ('')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS NUMERIC), RANK() OVER (), ((rt0.c1)-(((((((((((((rt0.c1)AND(0X412134b3)))OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('\nF')))), ((((x'') ISNULL))<<(CAST(rt0.c1 AS BLOB))), ((((vt1.c0)-(rt0.c2))) NOT BETWEEN (((vt1.c0)==(rt0.c0))) AND ((NOT (vt1.c0)))) FROM rt0, vt0 WHERE (((462134239) NOT BETWEEN (x'') AND (-1678239621)) COLLATE NOCASE);SELECT ALL ((((vt0.c0)OR(rt0.c0))) NOT NULL) FROM vt0 WHERE ((((x'' IN ())) IS TRUE));SELECT DISTINCT CASE AVG(vt1.c0)  WHEN ((((((((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)))OR(rt0.c0)))AND(vt0.c0)))AND('f\6w?79{')))AND(rt0.c0)) THEN vt1.c0 COLLATE BINARY END FROM vt1, vt0 WHERE (CAST(((NULL)>('(8')) AS TEXT));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1, vt0, rt0 WHERE (((CASE '-༥I''nA'  WHEN '712562922' THEN NULL ELSE 7.12562922E8 END)|(((NULL)>>(x''))))); -- 0ms;
SELECT ((((LIKELY(rt0.c0))AND((((vt1.c0))<((vt0.c0))))))AND(rt0.c1 COLLATE BINARY)), GROUP_CONCAT(rt0.c0) OVER ( ORDER BY ((vt1.c0 COLLATE RTRIM)=(highlight(rt0.c1, 'Lz᎘^i䚚U.Y', rt0.c2, rt0.c0)))  NULLS FIRST, (((NOT (0.4995892066399872)))=(UNLIKELY(DISTINCT rt0.c2))) ASC  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND (('\r>O0DMO+༥')))) AND (((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))) ASC  NULLS FIRST), CAST(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN 0.9973195501449351 THEN rt0.c1 WHEN rt0.c0 THEN 1.339538997E9 ELSE vt1.c0 END AS BLOB), CAST((~ (rt0.c2)) AS NUMERIC), rt0.c0 COLLATE RTRIM FROM vt0, vt1, rt0 WHERE (((CAST('-1255726937' AS NUMERIC))IS('1805265741' COLLATE BINARY))); -- 1ms;
SELECT DISTINCT CASE WHEN UPPER(rt0.c1) THEN (vt0.c0 IN ()) ELSE CASE WHEN rt0.c1 THEN vt1.c0 ELSE vt0.c0 END END FROM vt0, rt0, vt1 WHERE (((('1978793530' IN ())) NOT BETWEEN (x'' COLLATE BINARY) AND ((((NULL))<=((NULL)))))); -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS INTEGER) IN ()), ((((((((((rt0.c0) NOTNULL))OR(((rt0.c2) IS FALSE))))OR((rt0.c1 IN (rt0.c2)))))AND(vt0.c0 COLLATE RTRIM)))AND(vt0.c0 COLLATE BINARY)), DENSE_RANK() OVER () FROM vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, vt1, vt0 WHERE (CAST(((0.603524284943824) ISNULL) AS BLOB)); -- 0ms;
SELECT ALL rt0.c0 FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT '-1436529540', ((((((rt0.c1)<<(vt0.c0)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0x6aa23be8))))))OR('-1858599718' COLLATE NOCASE)), (((rt0.c1) NOT NULL) IN (CAST(vt1.c0 AS BLOB))), '2117680296', (- (((vt0.c0)-(rt0.c2)))) FROM rt0;SELECT DISTINCT TOTAL(((vt1.c0) IS FALSE)), ((((rt0.c0)+(rt0.c2))) BETWEEN ((~ (rt0.c1))) AND ((((vt1.c0))<=((rt0.c0))))), SUM(0.10987818549898087 COLLATE RTRIM) FROM vt1 NOT INDEXED, rt0 WHERE (TRIM(DISTINCT TOTAL_CHANGES(), CASE 'QEj'  WHEN x'' THEN '1199031133' END)); -- 1ms;
SELECT rt0.c1, vt0.c0, (~ (rt0.c0)) FROM vt1, vt0;SELECT ALL ((((rt0.c0) NOTNULL))IS(((vt1.c0) ISNULL))), (+ (('1030943294' IN ()))), (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY FROM vt0, vt1, rt0; -- 0ms;
SELECT DISTINCT JULIANDAY((vt0.c0 IN ()), (rt0.c1 IN (rt0.c0)), (((-638473681, vt0.c0, vt0.c0))>((rt0.c1, rt0.c1, rt0.c0)))) FROM rt0 WHERE ((('300874961' COLLATE NOCASE) IS FALSE));SELECT NULL FROM vt0, vt1, rt0 WHERE (((((0x32e58b62)||('-1831709643')))GLOB(((-1.7976931348623157E308)&(0.41405847592847356))))); -- 0ms;
SELECT TOTAL(1081287760) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), SUM((vt0.c0 IN ())), CAST(((vt1.c0) IS FALSE) AS BLOB) FROM rt0, vt1 NOT INDEXED, vt0; -- 0ms;
SELECT ALL rt0.c2 FROM vt0;SELECT COUNT(*), ((((rt0.c0)OR(vt0.c0))) IS FALSE), CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN ((((rt0.c2)AND(vt1.c0)))AND(NULL)) THEN (rt0.c1 IN (rt0.c2, vt0.c0)) WHEN ((rt0.c1)==(vt1.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END END FROM vt1, rt0, vt0 WHERE (((CASE 0.5920251494072134  WHEN '-596690270' THEN '1029640190' WHEN x'' THEN -1895884246 WHEN 0.7611933657675238 THEN 'kP,7' END)||((((0.01552539469221248)) BETWEEN (('1930586168')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT TOTAL(rt0.c0) OVER (), SUM((((vt1.c0, 0.8936223915936055, vt0.c0))>((rt0.c2, rt0.c2, x'')))) OVER ( ORDER BY ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL)  NULLS FIRST, ((((CAST(vt1.c0 AS INTEGER))AND(((rt0.c0)!=(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (''))))  NULLS LAST, (((CAST(rt0.c2 AS BLOB), CAST(0.2619033702309532 AS TEXT), ((rt0.c0)<=(rt0.c1))))<>((json_array_length(rt0.c2), '', ((NULL)GLOB(vt1.c0)))))), (((x'')AND(rt0.c2)) IN ()) FROM rt0, vt0;SELECT DISTINCT MAX(CAST(vt0.c0 AS TEXT), (rt0.c2 IN (rt0.c2, rt0.c0))), ((((rt0.c1 COLLATE RTRIM)OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND((~ (vt1.c0)))), UNLIKELY(((vt1.c0)|(vt0.c0))) FROM vt0, vt1;SELECT DISTINCT (((((vt0.c0))>((rt0.c0))))>(MIN(vt1.c0))) FROM vt0, vt1 WHERE (((((-5.3113507E8)%('2005424297'))) BETWEEN ((((0.4011237327305589, '', '968314522'))!=((NULL, '✥76|#b)#S', 0.6773674718850548)))) AND (((NULL)&('0.22555696808468328')))));SELECT ALL (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c1)==(rt0.c2)))IS NOT(((rt0.c0) IS TRUE))), CASE (('-1043574328')IS(rt0.c2))  WHEN (rt0.c0 IN ()) THEN ((rt0.c2) IS TRUE) END, (((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))<>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) FROM vt0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS NUMERIC) IN ()), CASE WHEN (((rt0.c1))<>((vt0.c0))) THEN (~ (1.803777087E9)) END, (((+ (NULL)))>>(MIN(rt0.c1))) FROM vt0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END) ISNULL), CASE WHEN ((vt1.c0)&(vt1.c0)) THEN x'' WHEN ((vt0.c0)>>(rt0.c1)) THEN (- (rt0.c0)) WHEN ((vt0.c0)*(rt0.c0)) THEN (+ (vt1.c0)) ELSE ((x'')IS(rt0.c1)) END, LIKELY(vt1.c0) COLLATE RTRIM FROM vt1 NOT INDEXED WHERE ((NOT (((((x'')OR(0.0025382410287112522)))AND(0.7425884565533886)))));SELECT DISTINCT ((((((rt0.c0)AND(NULL)))AND(vt0.c0))) NOTNULL), NULL, x'' FROM vt1, rt0;SELECT DISTINCT CAST(LIKELY(rt0.c0) AS TEXT), CASE ((rt0.c0)>>(rt0.c0))  WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((vt1.c0)<<(vt0.c0)) END, CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER), (NOT (COUNT(rt0.c2))), AVG(vt1.c0) OVER () FROM vt1, vt0;SELECT ALL (~ (((rt0.c2)%(rt0.c0)))) FROM vt0 GROUP BY rt0.c2 ORDER BY -1.472983259E9 COLLATE BINARY DESC  NULLS LAST, ((rt0.c0)<=(CAST(rt0.c1 AS BLOB))) ASC  NULLS FIRST, LOWER(((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))), (NOT ((rt0.c2 IN ())));SELECT DISTINCT (((rt0.c2 IN ()))AND(((rt0.c1)>=(vt0.c0)))), (((((rt0.c0))=((vt0.c0)))) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND ((rt0.c2 IN ()))), CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM FROM rt0, vt1, vt0 WHERE ((- (((NULL) NOT BETWEEN ('~᡻+n)㯬^(O') AND (NULL))))) GROUP BY CASE ''  WHEN '707926147' THEN rt0.c1 COLLATE BINARY END HAVING ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(rt0.c2 COLLATE NOCASE)))OR(((0.2290433389955372) BETWEEN (vt1.c0) AND (rt0.c2)))); -- 0ms;
SELECT DISTINCT 0.20923249228490304, MIN(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('xਃ'))), (((((vt1.c0, rt0.c1, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))))=(((((rt0.c0)OR(rt0.c1)))OR(vt1.c0)))) FROM rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT (CASE vt1.c0  WHEN rt0.c0 THEN vt0.c0 END IN ()) FROM vt0, vt1, rt0 WHERE (((('(')) NOT BETWEEN (((x'bcaf' IN (x'94a0')))) AND (((('1t!&z3m4\n') IS FALSE))))) LIMIT 196876277 OFFSET 16910864; -- 0ms;
SELECT CAST((((rt0.c1))!=((vt1.c0))) AS NUMERIC), ((0.9149023615455792) BETWEEN (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0))) AND (((vt1.c0)<<(vt1.c0)))), NULL FROM vt1 WHERE ((((((((((0xffffffffda440575)AND('0.01552539469221248')))OR(0Xffffffffab44abca)))AND(']N')))OR(NULL)) IN ()));SELECT ALL (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((((rt0.c0)AND(rt0.c2))))) FROM vt1 WHERE (CASE WHEN -4.76671341E8 THEN -1.63199616E9 ELSE NULL END COLLATE BINARY) GROUP BY ((rt0.c1)OR(NULL));SELECT ALL (((rt0.c1) NOTNULL) IN ()), LIKELY(DISTINCT ((vt1.c0) ISNULL)), ((((((rt0.c2)AND(rt0.c1)))OR(vt1.c0))) ISNULL), vt1.c0, ((((((rt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)))AND((rt0.c2 IN ()))))OR(((rt0.c1) ISNULL))) FROM rt0, vt1 WHERE (CAST(x'8500' COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT DISTINCT ((NULL)*(CASE vt1.c0  WHEN x'e9a560e6' THEN vt1.c0 ELSE vt0.c0 END)) FROM vt1, vt0, rt0 WHERE (LIKE((((NULL, '', 'Grn鿱Rc&4')) BETWEEN (('1029640190', 0.65233864482706, 0Xffffffffa734eeb7)) AND ((NULL, x'', NULL))), (('852921507') NOT BETWEEN (x'') AND (x'9925')), 'w')); -- 0ms;
SELECT (((vt1.c0)IS(vt1.c0)) IN (CAST(vt0.c0 AS REAL))) FROM vt1 WHERE ((NOT (CASE 900069228  WHEN -984795315 THEN '2057535282' ELSE x'' END)));SELECT ALL GROUP_CONCAT((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) OVER (), '-1e500', CAST(COUNT(vt0.c0) AS TEXT) FROM rt0;SELECT DISTINCT '뀄uW0%<', GROUP_CONCAT(((0x6b83743f)|(rt0.c1))), ABS(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 END) FROM vt1, vt0 ORDER BY (((rt0.c1)) BETWEEN ((((vt1.c0)>(vt0.c0)))) AND ((SUBSTR(vt0.c0, vt1.c0)))) ASC, NULLIF(((rt0.c1) NOT BETWEEN (vt0.c0) AND ('4')), ((rt0.c1) IS FALSE)) ASC;SELECT (~ (0.07914199041844738)) FROM vt0, vt1, rt0 WHERE (CASE ((((0.17328635470225717)OR(0x66e497d)))OR(0X322fa26d))  WHEN (('>3}jt2d*') NOTNULL) THEN (((('2022129578')AND(0.9801925699072248)))OR(NULL)) END) LIMIT 480506512; -- 0ms;
SELECT ALL AVG(((vt1.c0)AND(rt0.c1))) FROM vt0 WHERE ('');SELECT ALL UNLIKELY(DISTINCT (((rt0.c0, vt1.c0, rt0.c2))=((rt0.c1, vt0.c0, rt0.c2)))) FROM vt1 WHERE (TYPEOF(CASE WHEN 0xffffffff84833bdc THEN 0.45183924006693843 END));SELECT ALL ((rt0.c0)=(TOTAL(rt0.c2))) FROM vt0, vt1 NATURAL JOIN rt0 WHERE (((ABS(DISTINCT NULL)) NOT BETWEEN (CASE -866416846  WHEN 0.6389231848242757 THEN '-1142368005' END) AND (-1.34589536E9))); -- 0ms;
SELECT ALL COUNT(0X408205fa) OVER () FROM vt1, vt0; -- 0ms;
SELECT rt0.c1 FROM vt0 NOT INDEXED;SELECT -866416846 FROM vt1, vt0 LIMIT 1449598087 OFFSET -500381642; -- 0ms;
SELECT ((CASE rt0.c1  WHEN x'' THEN rt0.c1 END) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) AND ((((1225284479)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END)LIKE(((1.42837202E8)==(rt0.c2)))), 0xffffffffe586f0c2 FROM vt1, rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)IS NOT(vt0.c0)) AS INTEGER) FROM rt0 WHERE ((((NULL) NOTNULL) IN ()));SELECT DISTINCT x'' FROM rt0 WHERE ((((('0.0840392852294155')!=('142837202'))) IS TRUE)); -- 0ms;
SELECT ((TRIM(rt0.c2, rt0.c1)) BETWEEN (-1327603109) AND (((rt0.c0) IS FALSE))) FROM vt1, rt0 WHERE (CAST(CAST(0.5603660363852561 AS REAL) AS BLOB)) LIMIT 1081287760; -- 0ms;
SELECT DISTINCT ((((((((((((x'')AND(((rt0.c2)GLOB(vt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))AND(UPPER(rt0.c0))))AND(MIN(rt0.c2))))OR(((vt1.c0)<>(rt0.c0)))))OR(CASE vt1.c0  WHEN rt0.c0 THEN NULL END)), (- (((((((((rt0.c2)OR(rt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c0)))), CASE WHEN rt0.c0 THEN vt1.c0 END COLLATE RTRIM FROM vt0, vt1, rt0 WHERE (((CASE ''  WHEN NULL THEN NULL ELSE NULL END)%(((((NULL)AND(0.9669395371384344)))AND(0X64b72d76))))); -- 0ms;
SELECT DISTINCT (- ((((x'c602'))>((vt1.c0))))) FROM rt0, vt1 WHERE (NULLIF(DISTINCT (NULL IN ()), ((NULL) BETWEEN ('|/VᨪR3r૫') AND (1.703953093E9)))); -- 0ms;
SELECT ALL CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS TEXT) FROM rt0;SELECT DISTINCT ((0.16439498965668642) NOT BETWEEN (TOTAL(rt0.c1)) AND (LOWER(vt0.c0))) FROM vt0 WHERE ((((x'fc68')) NOT BETWEEN ((LIKELIHOOD(DISTINCT NULL, 0.7819737472184433))) AND ((0.7465172756478108 COLLATE RTRIM))));SELECT DISTINCT (((vt1.c0, NULL, vt1.c0)) BETWEEN ((NULL, ((vt0.c0)|(rt0.c0)), vt1.c0 COLLATE NOCASE)) AND (((((rt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, 0.5898262120158165, rt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))), ((rt0.c2) NOT NULL), rt0.c0 COLLATE NOCASE))) FROM vt1 WHERE (((0.7019556785684317) NOT BETWEEN (0.18163772253890587) AND ('0.20361388917718293')) COLLATE BINARY);SELECT ALL vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((((((vt1.c0 IN ()))AND(CAST(rt0.c2 AS TEXT))))OR((((('1985706209')OR(rt0.c1)))OR(vt1.c0)))))AND(CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 END)))AND(((rt0.c0) IS FALSE))) FROM vt1, vt0, rt0 WHERE (((((((((((-559140395) NOT BETWEEN (x'678f') AND (0.9434980880810201)))OR(CASE WHEN NULL THEN x'e2b8d6a0' ELSE 0.39933771112301275 END)))AND(PRINTF(0.6690490451334837, -5.59140395E8, 0.706374950516576))))OR(((938883140)<=('g+FCS/}')))))AND((('쀼m3')>(NULL))))); -- 0ms;
SELECT (NOT (((NULL) NOT NULL))) FROM rt0, vt1, vt0 WHERE ((((0.3778695828409123 IN ('', x'')))>=(''))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT AVG(vt0.c0), 0.11602816744522959), (((rt0.c1 IN ()))OR(x'' COLLATE NOCASE)), 0.05035533326363073 FROM vt1, vt0 WHERE (((((x'')IS NOT(0.8442162003874387)))OR(((66521424)=('634021377'))))); -- 0ms;
SELECT DISTINCT (NOT ('0.021196378576923802')) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT ((1044383715)<(((vt0.c0)|(vt1.c0)))), (CHANGES() IN ()), (((((vt1.c0 IN ()))OR(TYPEOF(rt0.c2))))AND(((vt0.c0)>=(vt1.c0)))) FROM vt1, vt0, rt0 GROUP BY (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE BINARY, ((((rt0.c1)LIKE(rt0.c0))) BETWEEN ((((vt1.c0, 0.775536509651063, rt0.c2))>((vt0.c0, rt0.c1, rt0.c1)))) AND (rt0.c2)), ((SQLITE_SOURCE_ID())>>(CAST(vt0.c0 AS INTEGER))); -- 0ms;
SELECT ((CAST(rt0.c1 AS TEXT))==((rt0.c1 IN ()))) FROM vt0;SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN ()) FROM vt1, vt0 WHERE (CAST((((NULL)) NOT BETWEEN ((x'')) AND ((NULL))) AS REAL)) LIMIT 1120913838 OFFSET 1889553075; -- 1ms;
SELECT CAST(UPPER(DISTINCT rt0.c0) AS INTEGER) FROM vt1, rt0, vt0 WHERE (((CASE NULL  WHEN x'93de' THEN '-804132408' END) NOT BETWEEN ('-1686158453' COLLATE BINARY) AND (LAST_INSERT_ROWID()))); -- 0ms;
SELECT DISTINCT (((((0xffffffffe50257b2, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((x'91dd') NOT NULL)) AND (((rt0.c0)<=(rt0.c2)))), NULLIF(rt0.c2, vt1.c0) COLLATE NOCASE, (~ (vt1.c0 COLLATE BINARY)) FROM vt1, vt0 WHERE ((CASE WHEN 'weekday' THEN 0.4088419445183227 WHEN NULL THEN x'1410' WHEN x'' THEN x'c4bf' ELSE NULL END IN ()));SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0)))) IS TRUE), ((rt0.c0 IN ()) IN ()), ((IFNULL(DISTINCT rt0.c0, vt0.c0))&(((rt0.c2) IS FALSE))) FROM vt0, rt0, vt1 WHERE (CAST(('961028568' IN ()) AS NUMERIC)) GROUP BY (((((rt0.c2, vt0.c0, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c1)))) BETWEEN (vt1.c0) AND (rt0.c1)); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(vt1.c0)))) AND ((((vt1.c0) ISNULL)))), TRIM(((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c0) IS FALSE)), (((((vt0.c0, rt0.c2, vt0.c0))!=((rt0.c2, rt0.c0, rt0.c0)))) NOT BETWEEN ((((rt0.c1, rt0.c0, rt0.c2))!=((rt0.c2, rt0.c2, vt0.c0)))) AND (((vt0.c0)+(vt0.c0)))) FROM rt0, vt0, vt1 GROUP BY (~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)), (~ (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)))), vt0.c0 HAVING ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((((((((vt1.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) IN (TRIM(DISTINCT vt1.c0, rt0.c1))), (~ ((~ (vt0.c0)))), ((NULL)=(((vt1.c0) IS FALSE))) FROM vt1 WHERE ((+ ('rTl翜ej׺H' COLLATE BINARY))) ORDER BY ((CAST(rt0.c2 AS TEXT))+(CAST(vt1.c0 AS INTEGER))) DESC  NULLS FIRST;SELECT x'' FROM rt0, vt0 WHERE (0.9116364215315689); -- 0ms;
SELECT ALL (NOT (SUM(vt0.c0))), DATETIME((((rt0.c2)) BETWEEN ((rt0.c1)) AND (('-175106807'))), AVG(rt0.c2), ((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)), CAST(rt0.c2 AS BLOB), (- (vt0.c0))), ((((((rt0.c2)AND(vt0.c0)))AND(vt1.c0)))>=(TOTAL(rt0.c2))) FROM vt0 WHERE ((('1339538997') NOT NULL) COLLATE BINARY);SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((- (NULL)) COLLATE RTRIM); -- 0ms;
SELECT CAST(((((vt1.c0)OR(vt0.c0)))AND(rt0.c0)) AS BLOB), ((CAST(vt0.c0 AS TEXT))%(((rt0.c0) NOTNULL))), vt0.c0 FROM vt1, vt0, rt0 WHERE (x''); -- 0ms;
SELECT ALL CASE TOTAL(rt0.c0)  WHEN ((rt0.c0) NOT NULL) THEN vt1.c0 COLLATE NOCASE ELSE ((((((((rt0.c2)OR(NULL)))OR(rt0.c2)))AND(vt1.c0)))AND(vt0.c0)) END FROM vt1, vt0, rt0 WHERE ((~ ((((('1074815541')AND(0.8717010789577485)))OR('0.3596690963176662'))))) LIMIT 1422092107 OFFSET 763118464; -- 1ms;
SELECT DISTINCT ((((((((CAST(vt0.c0 AS TEXT))OR((+ (rt0.c1)))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR('0.30938980293781326')))OR((rt0.c1 IN ()))) FROM vt0 WHERE (((((0.7241015716792174)|(NULL)))>(((0.6655198047685011) ISNULL)))) ORDER BY (- (NULL));SELECT DISTINCT NTH_VALUE((((x'', rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt1.c0, rt0.c2, rt0.c1))) COLLATE BINARY, (((~ (rt0.c1)))OR(CAST(vt1.c0 AS NUMERIC)))) OVER ( PARTITION BY rt0.c2, (+ ((rt0.c0 IN ())))) FROM vt1, rt0 WHERE ((((x'0946')) NOT BETWEEN ((((x'a79d') BETWEEN ('') AND ('EᇃoT')))) AND ((((NULL)>=('-1895884246')))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))>(x'84b0')) FROM vt0, rt0, vt1 ORDER BY (DATETIME(rt0.c0, vt0.c0, vt1.c0) IN (rt0.c0)) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((CAST('-983477769' AS INTEGER), rt0.c1, ((rt0.c1) NOTNULL)))<((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END, rt0.c2 COLLATE NOCASE, ((rt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) FROM vt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) ISNULL))%(((rt0.c2)=(0xffffffffe4839285)))) FROM vt0;SELECT ALL COUNT(*) OVER ( ORDER BY (((((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))AND(1432181742)))OR(rt0.c2 COLLATE BINARY)) DESC  NULLS FIRST, ((rt0.c0)-(rt0.c1)) COLLATE BINARY  NULLS FIRST, (((((vt1.c0))<=((rt0.c2)))) IS TRUE)  NULLS FIRST) FROM vt0, rt0, vt1; -- 1ms;
