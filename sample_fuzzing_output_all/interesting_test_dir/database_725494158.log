-- Time: 2024/06/07 06:32:56
-- Database: database58
-- Database version: 3.40.0
-- seed value: 725494158
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 REAL ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, tokenize=unicode61); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0Xfffffffff4a0267a); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(NULL, 'w8_C>0cl', '587847612'); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 1ms;
INSERT OR ABORT INTO vt1 VALUES ('앫^%R'); -- 0ms;
DELETE FROM vt1; -- 1ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES (0.10311339798316355, x'', '-1825781905'), ('1916126571', 1.916126571E9, NULL), (NULL, x'', -779330665); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL); -- 6ms;
PRAGMA automatic_index = false; -- 0ms;
DROP TABLE IF EXISTS rt0; -- 12ms;
ANALYZE vt1; -- 2ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
ANALYZE; -- 42ms;
INSERT OR FAIL INTO vt1 VALUES (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
PRAGMA automatic_index; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
ANALYZE; -- 18ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('AL', x'') WHERE (CAST(vt1.c0 AS REAL) IN (vt1.c0 COLLATE BINARY)); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 9ms;
PRAGMA cache_size = 6308110626286115485; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
INSERT OR ROLLBACK INTO vt1 VALUES (0.967134431903438); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=0Xffffffffd8e6b67e WHERE ((ABS(vt1.c0))<=((vt1.c0 IN ()))); -- 1ms;
PRAGMA cache_size = 0; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR FAIL INTO vt1 VALUES (0Xffffffffe14b772c); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 13ms;
END; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.36551490806304143, 0.9002460607977975) WHERE '469086992'; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (x'157d'), ('vl1썩nx>H'), (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.5746522129041414); -- 5ms;
VACUUM; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '43838'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=1'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 289016842); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
CREATE TEMPORARY TABLE t0 (c0 REAL ); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE temp; -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE(((t0.c0)OR(t0.c0)))); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x''); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.cache_spill = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint = 4909537109237021913; -- 0ms;
PRAGMA temp.application_id = -3085288143354051411; -- 0ms;
CREATE INDEX IF NOT EXISTS i88 ON t0((((((((((((((~ (c0)))AND(CAST(c0 AS NUMERIC))))AND(0xffffffffd18c5b97)))OR(((c0)-(c0)))))AND(CASE c0  WHEN c0 THEN c0 ELSE c0 END)))OR(((c0) IS FALSE))))AND('O-'))) WHERE CASE WHEN CAST(NULL AS TEXT) THEN ((((c0)OR(c0)))AND(c0)) WHEN ((c0) NOT BETWEEN (c0) AND (c0)) THEN 1971474730 WHEN (c0 IN ()) THEN c0 ELSE COALESCE(DISTINCT c0, c0) END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATE(x'', 0.0776351405531096, 'j(阮NANH숒')) ISNULL); -- 0ms;
PRAGMA temp.busy_timeout; -- 2ms;
DROP INDEX IF EXISTS "i88"; -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=(1707236196) WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, x'')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-1825781905')) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) IN ()); -- 0ms;
PRAGMA main.application_id; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS BLOB)) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM t0, vt1 WHERE (((((0.8708643593376982) IS TRUE)) IS FALSE)); -- 0ms;
SELECT DISTINCT COUNT(SUM(CAST(0.41573471908098014 AS BLOB))), ((x'') ISNULL) COLLATE RTRIM, ((vt1.c0 COLLATE NOCASE)>((((t0.c0, t0.c0, x''))<=((t0.c0, vt1.c0, vt1.c0))))) FROM t0;SELECT DISTINCT CUME_DIST() OVER (), TRIM(DISTINCT COUNT(*), ((2.082128745E9) IS FALSE)), t0.c0 FROM t0 GROUP BY ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL);SELECT DISTINCT (((((vt1.c0))<=((t0.c0)))) NOT NULL) FROM t0;SELECT DISTINCT ((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)=(CASE vt1.c0  WHEN vt1.c0 THEN x'' END)), ((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) COLLATE NOCASE, CASE ((t0.c0) IS TRUE)  WHEN GROUP_CONCAT(vt1.c0) THEN (~ ('')) ELSE COUNT(*) END FROM t0 WHERE (((NOT ('1039777699')) IN ()));SELECT DISTINCT (vt1.c0 IN ()) FROM vt1, t0 WHERE ((+ (CASE WHEN 0Xffffffff932cc76f THEN '-515147988' WHEN NULL THEN '-655968642' WHEN 0.8233849984442944 THEN 'mXZ_2S' END))); -- 0ms;
SELECT ALL CASE WHEN (vt1.c0 IN ()) THEN SUBSTR(t0.c0, vt1.c0) END FROM t0, vt1; -- 0ms;
SELECT CAST(((t0.c0) NOTNULL) AS BLOB) FROM t0, vt1 WHERE ((NOT (((0.47359308285054835) IS TRUE)))); -- 0ms;
SELECT t0.c0, t0.c0, ((((((vt1.c0)<=(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)))), (('-965598767')LIKE(IFNULL(t0.c0, t0.c0))), (CAST('hvS4뾣[' AS BLOB) IN (0X7c1ac369, (~ (t0.c0)))) FROM vt1 WHERE (((('', 0.36030662339978725, NULL)) NOT BETWEEN ((((0.6394261066689291) BETWEEN (NULL) AND (x'3437')), CAST('-rX/' AS REAL), ((x'') NOT BETWEEN (NULL) AND ('|!')))) AND ((((x'4ca1') NOT BETWEEN (NULL) AND (0.522654904669078)), 0.18597798017324696, ((((NULL)OR(NULL)))OR(x'95f2'))))));SELECT DISTINCT CAST((x'' IN ()) AS INTEGER) FROM t0, vt1 ORDER BY ((((vt1.c0)*(t0.c0))) ISNULL)  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt1.c0) BETWEEN (t0.c0) AND (NULL)))GLOB(((t0.c0)/(t0.c0)))) FROM vt1;SELECT DISTINCT ROW_NUMBER() OVER (), (((t0.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (UNLIKELY(DISTINCT t0.c0))), vt1.c0 FROM vt1, t0 GROUP BY CASE WHEN '729680873' THEN ((t0.c0)AND(t0.c0)) END HAVING TOTAL(((t0.c0) IS FALSE)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT NTILE(((((t0.c0) IS TRUE))&((t0.c0 IN (t0.c0))))) OVER () FROM t0; -- 0ms;
SELECT ALL COUNT((vt1.c0 IN (vt1.c0))) FROM vt1; -- 1ms;
SELECT DISTINCT AVG(CAST(vt1.c0 AS BLOB)), ((((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<=(((((t0.c0)AND(vt1.c0)))AND(t0.c0)))), (((t0.c0 IN ())) NOT BETWEEN (TRIM('1039777699', vt1.c0)) AND (vt1.c0)) FROM t0, vt1 NOT INDEXED; -- 0ms;
SELECT ALL (- (ABS(t0.c0))) FROM vt1 WHERE ((~ (1.916126571E9 COLLATE NOCASE)));SELECT DISTINCT CASE WHEN (t0.c0 IN ()) THEN t0.c0 WHEN (((NULL))<((vt1.c0))) THEN (((-1071977823))<=((t0.c0))) WHEN ((((t0.c0)AND(NULL)))OR(vt1.c0)) THEN (NOT (vt1.c0)) END FROM vt1 WHERE (((((('-1460411264')>=('729680873'))))<=((IFNULL(1.707236196E9, '宗卦푺z')))));SELECT DISTINCT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((NOT (t0.c0)), vt1.c0, ((t0.c0)|(t0.c0)))) AND ((((vt1.c0)&('-RX/')), ((vt1.c0)-(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END))), (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))<=((NOT (vt1.c0)))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (((((vt1.c0))==((t0.c0))))|((((vt1.c0))=((vt1.c0))))) FROM vt1 WHERE (CASE WHEN ((0.5274868947929051)/(0Xffffffffccab2b06)) THEN (('729680873') NOT BETWEEN (0X1bf5b310) AND ('宗卦푺z')) ELSE ((NULL) NOT BETWEEN (x'') AND (-8.61197562E8)) END) ORDER BY (~ (((t0.c0)>>(-1802644631)))) DESC;SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt1.c0, t0.c0))) AND ((((((t0.c0)OR(vt1.c0)))OR(t0.c0))))) FROM vt1, t0 WHERE (1446139789); -- 0ms;
SELECT NTH_VALUE(((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((~ (1734799970)))), (((LOWER(DISTINCT vt1.c0), (((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, '-779330665', vt1.c0))), ((vt1.c0) BETWEEN ('EBT{N!,!') AND (vt1.c0))))<=((vt1.c0 COLLATE BINARY, (+ (vt1.c0)), ((((((((((((x'38e7bc88')OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))))) OVER () FROM vt1 WHERE ((((('828483118')>=(0.6443515147626735)))IS((('-rX/')<('C+*1512 94:2797503669392213892T-8570475269344452768:1876-2021235442153474130-镅H(')))));SELECT ((json_array(t0.c0, vt1.c0, t0.c0, 0.9481015175198706)) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0)%(vt1.c0)))) FROM t0 ORDER BY ((((t0.c0) IS FALSE)) IS FALSE)  NULLS LAST, UNLIKELY(((vt1.c0) ISNULL)) DESC;SELECT DISTINCT ((((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (MAX(vt1.c0)) AND ((+ (t0.c0)))), t0.c0, NULL FROM t0, vt1; -- 0ms;
SELECT ALL ((((((((HEX(vt1.c0))OR(((((((((NULL)AND(t0.c0)))AND(vt1.c0)))OR(t0.c0)))OR(t0.c0)))))OR((vt1.c0 IN (t0.c0)))))OR(((vt1.c0) NOT NULL))))OR(CAST(t0.c0 AS BLOB))) FROM t0, vt1 WHERE (((0.9805367799037776)<<('1439391583')) COLLATE BINARY); -- 0ms;
SELECT COALESCE(DATE(t0.c0, t0.c0, vt1.c0, t0.c0, vt1.c0), vt1.c0, vt1.c0, CASE WHEN 0.1446641053177692 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END) FROM t0 WHERE ((((('S>\r\nK#/')>=(x''))) BETWEEN ((('1536061178')<<(x'e2fc'))) AND (((((0.0580149229249991)AND(0.967134431903438)))OR(NULL)))));SELECT DISTINCT TOTAL(((NULL) ISNULL)) FROM t0, vt1; -- 0ms;
SELECT DISTINCT CAST(UNLIKELY(t0.c0) AS REAL) FROM t0, vt1 ORDER BY '-1711047996' ASC; -- 0ms;
SELECT NTILE(((0xfffffffff75dbf46) NOT BETWEEN (x'') AND (((vt1.c0)!=(vt1.c0))))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((((t0.c0)>(t0.c0)))*(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 END)) FROM t0;SELECT CUME_DIST() OVER () FROM vt1; -- 0ms;
SELECT (+ (((vt1.c0)OR(t0.c0)))) FROM t0 WHERE (0.514932611261264);SELECT ALL '2a[{DW', ((CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END) IS TRUE), CAST(vt1.c0 AS BLOB) COLLATE BINARY FROM vt1 WHERE (CAST((((922214764))<((0x471e8dda))) AS BLOB)) GROUP BY (((((t0.c0)*(t0.c0))))>((CAST(t0.c0 AS NUMERIC)))) HAVING ((((t0.c0) NOTNULL))GLOB('WM(DmH'));SELECT DISTINCT CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN x'' ELSE t0.c0 END COLLATE BINARY FROM vt1;SELECT DISTINCT LIKELY(x'') FROM vt1; -- 0ms;
SELECT NULLIF(DISTINCT ((vt1.c0)GLOB(vt1.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 898171541 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) FROM vt1 WHERE ((((('1934803345') NOT BETWEEN (x'') AND ('1039777699')))>=((('') IS FALSE))));SELECT DISTINCT ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))>>(CAST(NULL AS NUMERIC))) FROM t0 ORDER BY ((vt1.c0 COLLATE RTRIM) NOTNULL) ASC  NULLS FIRST;SELECT NTILE(((((vt1.c0)>(vt1.c0)))-((vt1.c0 IN ())))) OVER (), (+ ((- (vt1.c0)))), (((((((((((((x'')AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((((((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))OR(0.5188192018563783)))OR(t0.c0))))>=((CAST(vt1.c0 AS INTEGER)))), ((((vt1.c0)||(t0.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(NULL))) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))) FROM vt1 WHERE (CASE (- ('os'))  WHEN CAST(x'' AS TEXT) THEN (- ('mA䇳*{')) ELSE ((((NULL)AND(NULL)))OR(x'')) END);SELECT DISTINCT '0.6394261066689291' FROM t0, vt1 WHERE (((((NULL) IS TRUE))OR(((x'') BETWEEN (0.8582405307998779) AND ('760132351'))))) LIMIT -797353097; -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT NULL)) IS TRUE) FROM vt1, t0 WHERE ((((NULL, 0.48185911366334877, NULL)) BETWEEN ((((NULL) NOTNULL), ((NULL) BETWEEN (NULL) AND (NULL)), ((x'2102') BETWEEN (0.34114686582664466) AND ('-779330665')))) AND (((('-779330665')&(0.33057730490642356)), CASE '9s'  WHEN 0.46086102759288583 THEN '-215477990' WHEN x'1d017485' THEN 0.47359308285054835 WHEN '1660479125' THEN x'' WHEN 'A' THEN x'7ff8' WHEN '' THEN 0.6977765678772946 END, 'R')))); -- 0ms;
SELECT DISTINCT MAX(vt1.c0) FROM vt1; -- 0ms;
SELECT DISTINCT t0.c0, (((vt1.c0 IN (x'5b90', t0.c0)))IS NOT(((vt1.c0)-(x'')))), ((((SUM(vt1.c0))AND(((t0.c0) IS FALSE))))AND(((t0.c0) ISNULL))) FROM t0;SELECT ALL AVG(MAX(NULL)), (SUM(t0.c0) IN ()), ((t0.c0 COLLATE NOCASE) IS FALSE) FROM t0, vt1;SELECT DISTINCT CASE WHEN MAX(vt1.c0) THEN SUM(vt1.c0) ELSE (vt1.c0 IN ()) END FROM vt1, t0 WHERE (((NULL) NOT BETWEEN ((((((((('㤙d৬-+,ʕ+')AND('	'',ey*')))OR('')))AND(0.957716813836797)))AND(NULL))) AND (0.3476015521150919 COLLATE NOCASE))); -- 0ms;
SELECT ALL (((((((NULL))>=((vt1.c0))))AND((vt1.c0 IN ()))))OR(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE 0.41573471908098014 END)) FROM vt1, t0 WHERE (((((((((x'5c39')AND(NULL)))AND(0.9585018035561047)))AND('-534812341')))OR(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0, vt1 LIMIT -2100336997 OFFSET 1307087931; -- 0ms;
SELECT DISTINCT ((TYPEOF(vt1.c0))>=(((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM vt1 WHERE (CAST((('1611T1707T2937174948266180590 1769-640:-1264859303484378655-1170759432732122378:\r') NOT NULL) AS TEXT));SELECT ((((CHAR(t0.c0, '1v', t0.c0))AND(CAST(t0.c0 AS INTEGER))))OR(COUNT(*))) FROM vt1;SELECT ALL AVG(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(NULL)))AND(vt1.c0))) FROM vt1 LIMIT 548071976;SELECT DISTINCT '-797353097', (((x'' IN (t0.c0)))>>(((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))), ((((t0.c0) IS FALSE))%(0X2b7e0be9 COLLATE BINARY)) FROM vt1;SELECT ALL 0.043422602029262514, (NOT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), CASE WHEN (+ (vt1.c0)) THEN ((t0.c0)<=(vt1.c0)) END FROM vt1 WHERE (((((-1344605279) IS FALSE))-(((x'82d1') NOT BETWEEN (NULL) AND ('1707236196')))));SELECT COUNT(((((t0.c0)AND(t0.c0)))OR(vt1.c0))) OVER ( ORDER BY LIKE((vt1.c0 IN ()), ((((vt1.c0)OR(t0.c0)))AND(vt1.c0)), 'o')), SUM(((vt1.c0)<>(t0.c0))), CAST(TOTAL(vt1.c0) AS BLOB) FROM vt1 LIMIT -1329796534 OFFSET 1969623539;SELECT ((x'') BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0) ISNULL))) FROM t0, vt1 WHERE (LIKELIHOOD(((x'7be5') BETWEEN (NULL) AND (NULL)), 0.4552533942504954)) GROUP BY CASE vt1.c0  WHEN vt1.c0 THEN 'n' END COLLATE BINARY COLLATE BINARY HAVING CASE ((vt1.c0)<>(vt1.c0))  WHEN ((t0.c0)IS NOT(t0.c0)) THEN CASE WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END; -- 0ms;
SELECT DISTINCT 0.4319763964744122 FROM t0 ORDER BY CASE WHEN ((t0.c0)||(331716320)) THEN ((t0.c0) NOT NULL) END; -- 0ms;
SELECT DISTINCT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN '-430800874' THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(t0.c0 COLLATE BINARY)))AND(((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))) FROM t0 WHERE (((rtreenode('JS+AnPM?', '')) IS TRUE));SELECT ALL TOTAL(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) OVER () FROM vt1, t0; -- 0ms;
SELECT ALL ((vt1.c0)/((vt1.c0 IN (vt1.c0, vt1.c0)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS NUMERIC) COLLATE BINARY FROM vt1, t0 WHERE (((((0.08238133766794953) NOT BETWEEN (-190830982) AND (x''))) NOT BETWEEN (CASE -965598767  WHEN '-1293569954' THEN NULL ELSE '587847612' END) AND ((((x'')) BETWEEN (('1705923723')) AND (('TRUE')))))); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS NUMERIC))<=(t0.c0 COLLATE BINARY)) FROM vt1 WHERE ((((('')IS NOT(1168711295))) BETWEEN ((('	YG')AND(0.5836861868984062))) AND (CASE WHEN '1439391583' THEN '-238465160' END)));SELECT ALL (((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))OR(t0.c0)))OR(0.74663593305662))) AND ((~ (vt1.c0)))) FROM vt1, t0 GROUP BY CASE WHEN ((((((((t0.c0)OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END, ((((t0.c0) ISNULL)) ISNULL), (- (CAST(vt1.c0 AS REAL))); -- 0ms;
SELECT ALL 0.9117958457251873, ROW_NUMBER() OVER (), TOTAL(((vt1.c0)+(t0.c0))) OVER () FROM vt1 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN ((((0.38996423236655053))>((NULL)))) AND (IFNULL('FS 9', 1969623539))));SELECT DISTINCT LOWER((vt1.c0 IN ())) FROM vt1 WHERE (((NULL)<<((NULL IN (-1465157490))))); -- 0ms;
SELECT DISTINCT (((((vt1.c0))<=((0.8582405307998779)))) NOT NULL) FROM t0, vt1 WHERE (((((0.8837349230924345))>((NULL))) IN ())); -- 0ms;
SELECT DISTINCT 2102557906, ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE), (- (((NULL) ISNULL))) FROM vt1, t0 WHERE (CAST((('') ISNULL) AS INTEGER)); -- 0ms;
SELECT t0.c0 FROM vt1, t0 WHERE (((((NULL)-(230705899)))<>((((0.0580149229249991, x'', '', x'', '-190830982')) BETWEEN ((0.7828215657120954, -103726186, 1826461064, 0.5188192018563783, x'9eb9')) AND ((x'', x'f894', NULL, -861197562, 'Z~m')))))); -- 0ms;
SELECT DISTINCT ((((((((t0.c0 COLLATE NOCASE)AND(CAST(vt1.c0 AS TEXT))))OR(CAST(vt1.c0 AS TEXT))))AND(0Xffffffff89963e69)))AND(vt1.c0 COLLATE BINARY)) FROM vt1;SELECT DISTINCT (((t0.c0, t0.c0, vt1.c0)) BETWEEN (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))), ((0.3306613730030932) NOTNULL), vt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS REAL), CASE WHEN NULL THEN t0.c0 END, (vt1.c0 IN (t0.c0, t0.c0, x'b876'))))) FROM vt1, t0; -- 0ms;
SELECT CASE WHEN (+ (vt1.c0)) THEN TOTAL(vt1.c0) END FROM t0, vt1; -- 0ms;
SELECT ALL (((((vt1.c0))<=((vt1.c0))))%(((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))), GROUP_CONCAT(CAST(vt1.c0 AS REAL)) OVER (), (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((((((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0)), LIKELIHOOD(DISTINCT t0.c0, 0.13276335288089314), CASE vt1.c0  WHEN vt1.c0 THEN x'' END)) AND (((((vt1.c0, t0.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))), vt1.c0, (((vt1.c0, '6hN1z', t0.c0))=(('0.38996423236655053', vt1.c0, vt1.c0)))))) FROM t0, vt1 GROUP BY ((CASE WHEN vt1.c0 THEN t0.c0 END)==(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) HAVING 0.38272241679083707; -- 0ms;
SELECT DISTINCT (vt1.c0 IN (((vt1.c0) IS FALSE))), CAST(((t0.c0)AND(t0.c0)) AS BLOB), (((vt1.c0)) BETWEEN ((((vt1.c0)<>(t0.c0)))) AND ((((vt1.c0) NOT NULL)))) FROM t0 WHERE ((((5.87847612E8 IN ()))OR((((('548071976')AND(x'')))AND(x'')))));SELECT ALL ((((NULL) NOT BETWEEN (vt1.c0) AND (t0.c0)))*(CAST('588708726' AS INTEGER))), (NOT ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))), ((((vt1.c0) IS TRUE)) IS FALSE), NULL, ((1.969623539E9) BETWEEN (((vt1.c0)&(t0.c0))) AND (((t0.c0)>=(0.30299552237972893)))) FROM t0 WHERE ((~ ((((0.749787821689713)) BETWEEN ((0.5395801124096162)) AND ((NULL))))));SELECT DISTINCT (- (0.4831526065561834)) FROM vt1, t0 WHERE (x'' COLLATE NOCASE) LIMIT 1038266108; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY (- (((((((((t0.c0)OR('-1460411264')))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))), t0.c0 COLLATE NOCASE, (((t0.c0, t0.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))), CAST(vt1.c0 AS INTEGER))) AND (('-585365012', vt1.c0, (t0.c0 IN (vt1.c0, vt1.c0))))), CAST(NULL AS INTEGER)) FROM vt1, t0; -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((vt1.c0)/(t0.c0)))) FROM t0 LIMIT 944333292 OFFSET 13823932;SELECT DISTINCT ((MIN('-1825781905'))&(vt1.c0 COLLATE BINARY)) FROM vt1 WHERE ((((0.014726252784952765)) BETWEEN ((('1660479125' IN ()))) AND ((0.027614754845606715)))); -- 0ms;
SELECT DISTINCT (((x'') NOTNULL) IN ((~ (t0.c0)))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (((x'')*(vt1.c0))) AND (((vt1.c0) IS TRUE))), t0.c0 COLLATE BINARY FROM t0;SELECT DISTINCT (((t0.c0)-(NULL)) IN ()), CASE CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END  WHEN ((t0.c0)&(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt1.c0)AND(vt1.c0)) WHEN TOTAL(vt1.c0) THEN (vt1.c0 IN ()) ELSE ((0.6292056738823989) NOTNULL) END, 'z~m' FROM vt1 WHERE ((((((NULL)OR('1610857710')))AND(0.21179720760115284)) IN ()));SELECT DISTINCT AVG((- (t0.c0))) OVER (), CASE WHEN (t0.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(t0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN 0.967134431903438 END WHEN (+ (vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) END, IFNULL(CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'' END, ((t0.c0)|(vt1.c0))) FROM vt1, t0 GROUP BY 0.6491740155152534 HAVING ((((CAST(t0.c0 AS TEXT))OR(((t0.c0) NOTNULL))))AND(COUNT(5.88708726E8))); -- 1ms;
SELECT DISTINCT (((~ (t0.c0))) IS TRUE) FROM vt1, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c0 COLLATE RTRIM) FILTER(WHERE NULL) OVER (), CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL), ((((((((vt1.c0)OR(t0.c0)))AND(vt1.c0)))AND(t0.c0)))AND(vt1.c0)) COLLATE NOCASE FROM t0, vt1 WHERE (CASE 'd,'  WHEN x'' THEN 1580074142 ELSE x'521c' END COLLATE BINARY); -- 0ms;
SELECT DISTINCT x'b7d9' FROM vt1 WHERE (((0x2d7f4538)-(x'')) COLLATE BINARY) GROUP BY (+ ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))), (((t0.c0)||(t0.c0)) IN (((0.30299552237972893) ISNULL))), vt1.c0;SELECT COUNT(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM vt1;SELECT ALL CUME_DIST() OVER ( ORDER BY ((vt1.c0)LIKE(vt1.c0)) COLLATE RTRIM ASC) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))+((NOT (t0.c0)))) FROM vt1 WHERE ((((NULL IN ())) BETWEEN (((0.9543040359667432)IS NOT(NULL))) AND ((- (NULL)))));SELECT ((vt1.c0 IN ()) IN ()) FROM vt1; -- 0ms;
SELECT ALL (((t0.c0) NOT NULL) IN ()) FROM vt1 WHERE (((CASE WHEN NULL THEN '1772022632' END) IS TRUE)) ORDER BY (0.44037559052867636 IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (JULIANDAY(t0.c0, t0.c0, t0.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))) FROM vt1, t0 WHERE (((('1820845500')) BETWEEN (((('2082128745') NOT BETWEEN (0.38764053552572453) AND ('\1㫀*rDX')))) AND ((CASE NULL  WHEN NULL THEN 0.8582405307998779 END)))) ORDER BY (((vt1.c0)>(t0.c0)) IN ()) DESC LIMIT 45502799 OFFSET -350405424; -- 0ms;
SELECT DISTINCT 0x1e5d5956, TOTAL((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))), COUNT(*) COLLATE RTRIM FROM t0 WHERE (((NULL) ISNULL));SELECT DISTINCT ((((vt1.c0)=(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (0.37117596633383265) AND (t0.c0))) AND (((vt1.c0)<(vt1.c0)))), t0.c0, ((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) ISNULL) FROM t0, vt1 WHERE (CASE WHEN ((x'') BETWEEN (x'5bd20240') AND (-1725292680)) THEN 0Xffffffffc01aeaa1 COLLATE RTRIM ELSE (('^T')>>(x'')) END); -- 1ms;
SELECT DISTINCT (~ (json_insert(t0.c0, t0.c0, t0.c0, vt1.c0, '1824986218'))) FROM t0, vt1 WHERE (((x'') NOT BETWEEN (((('-1869593797'))=((0.45651996164919373)))) AND ((-965598767 IN (x''))))); -- 0ms;
SELECT DISTINCT (+ (((t0.c0)||(vt1.c0)))) FROM vt1;SELECT DISTINCT ((vt1.c0 COLLATE BINARY)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)), '1929505957', (((x'')) NOT BETWEEN ((((t0.c0) ISNULL))) AND ((((vt1.c0) IS TRUE)))), ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 END) ISNULL), ((vt1.c0)IS(json_patch(vt1.c0, vt1.c0))) FROM vt1;SELECT DISTINCT CAST(((1.772022632E9) IS FALSE) AS REAL) FROM vt1, t0 WHERE (((((((0X7352c191)AND(NULL)))AND(0X384961ec)))GLOB(CAST(NULL AS INTEGER)))) LIMIT 1826461064; -- 0ms;
SELECT ALL x'6277' FROM t0, vt1 WHERE (((x'' COLLATE NOCASE) IS TRUE)) LIMIT 760132351 OFFSET -1539715651; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))) ISNULL) FROM vt1, t0; -- 0ms;
SELECT DISTINCT NTILE(CASE ((vt1.c0)!=(t0.c0))  WHEN (((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) WHEN x'' THEN ((1.3823932E7)IS NOT(t0.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)>=(t0.c0)) END) OVER (), COUNT(CAST(t0.c0 AS NUMERIC)) OVER (), TOTAL('-1952525190') FROM t0, vt1;SELECT DISTINCT t0.c0 FROM t0 WHERE (x'69c9'); -- 0ms;
SELECT DISTINCT (+ (vt1.c0)) COLLATE BINARY FROM t0, vt1; -- 0ms;
SELECT DISTINCT t0.c0 FROM vt1, t0; -- 0ms;
SELECT ALL ((vt1.c0)=(CASE WHEN vt1.c0 THEN t0.c0 END)) FROM t0;SELECT ALL (((((t0.c0))<>((t0.c0)))) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ((+ (vt1.c0)))) FROM t0;SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT (((~ (t0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0) NOTNULL))), CASE CAST('' AS BLOB)  WHEN (((t0.c0, NULL, t0.c0))>=((t0.c0, -9.65598767E8, t0.c0))) THEN ((t0.c0)>=(vt1.c0)) END, CAST(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) AS BLOB) FROM vt1, t0 WHERE (CAST((((NULL)) NOT BETWEEN ((x'719e')) AND ((x''))) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((LIKELY(t0.c0), ((t0.c0) ISNULL), (- (vt1.c0)))) AND (((+ (vt1.c0)), MIN(t0.c0, vt1.c0, vt1.c0, vt1.c0, t0.c0, t0.c0), ((((vt1.c0)AND(t0.c0)))AND(t0.c0))))) FROM vt1;SELECT load_extension((((t0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('v,Sc', t0.c0, t0.c0))), ((t0.c0) IS FALSE)) FROM t0, vt1 WHERE ((+ ((NOT (0.38924326728402414))))) ORDER BY ((((t0.c0 COLLATE RTRIM)OR(CAST(t0.c0 AS INTEGER))))AND(LOWER(vt1.c0))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (- (t0.c0)) FROM t0; -- 0ms;
SELECT ((((PRINTF(t0.c0, t0.c0, t0.c0))OR(((vt1.c0) ISNULL))))OR(((t0.c0)+(vt1.c0)))) FROM t0, vt1; -- 1ms;
SELECT (((((((((t0.c0 IN (0.050470480528135075)))OR(((t0.c0)>(vt1.c0)))))AND(((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))OR(t0.c0)))OR(vt1.c0)))))AND(t0.c0)))OR((t0.c0 IN ()))) FROM vt1 WHERE (IFNULL(DISTINCT -1.46515749E9, (((((((('')OR(x'')))OR(NULL)))AND('')))OR(0.757051994939661)))) GROUP BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) AND (((t0.c0 IN (t0.c0, t0.c0))))), t0.c0, CAST(((vt1.c0)<=(x'e04b')) AS BLOB) HAVING ((TOTAL(vt1.c0))-(((vt1.c0) IS FALSE)));SELECT ALL (((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((t0.c0))<=((vt1.c0))) IN ()), (((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)OR(vt1.c0)))OR(t0.c0)), ((((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)), SQLITE_COMPILEOPTION_USED(vt1.c0))) AND ((SUM(vt1.c0), CAST(t0.c0 AS TEXT), ((t0.c0) NOTNULL)))) FROM vt1 WHERE (UPPER(((((((((x'')AND(0xffffffffe7cff3fa)))AND(x'')))AND(NULL)))AND(NULL))));SELECT ((vt1.c0 COLLATE BINARY)+(vt1.c0)) FROM t0;SELECT DISTINCT TYPEOF(vt1.c0) FROM t0 WHERE (((TRIM(DISTINCT '', '')) NOTNULL)) GROUP BY (vt1.c0 COLLATE RTRIM IN ()), (((((vt1.c0)AND(vt1.c0)))AND(NULL)) IN (t0.c0 COLLATE NOCASE, ((vt1.c0)*(t0.c0)))), CAST(CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END AS INTEGER) HAVING ((t0.c0)OR(vt1.c0)) COLLATE RTRIM;SELECT DISTINCT AVG((+ (vt1.c0))) FROM vt1, t0 WHERE ((((+ (x'')))<<('-1344605279'))); -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(t0.c0) THEN ((((t0.c0)AND(t0.c0)))AND(vt1.c0)) ELSE TRIM(DISTINCT '-1493653185', t0.c0) END, ((((vt1.c0)AND('')))OR(((vt1.c0)>(vt1.c0)))), SUM(((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c0)))OR(vt1.c0))) COLLATE BINARY FROM t0, vt1; -- 0ms;
SELECT (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ()) FROM t0 WHERE ((((('K	3EC<')OR(NULL)))AND(0.3306613730030932)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT x'', ((((TOTAL(t0.c0))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))AND((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((0.4099026720671759, vt1.c0, t0.c0))))), (NOT (CASE WHEN t0.c0 THEN t0.c0 END)) FROM vt1 WHERE (((((NULL) NOT NULL))*(x'')));SELECT DISTINCT AVG((((t0.c0)) NOT BETWEEN ((0.6182188948953905)) AND ((x'')))) FROM vt1 WHERE (((x'' COLLATE NOCASE) IS FALSE));SELECT ALL ((((0.7687769812752279)OR(SQLITE_SOURCE_ID())))OR(vt1.c0)) FROM vt1, t0 WHERE (((((0.7320806392188232, 1.536061178E9, x'')) BETWEEN ((x'77c5', 0.1405818816234775, '-305631226')) AND (('1v', NULL, 'PjF]'))) IN ())); -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS TEXT) COLLATE BINARY FROM t0, vt1 WHERE (CAST(TRIM('230705899') AS TEXT)); -- 0ms;
SELECT ALL ((vt1.c0)|(((vt1.c0) NOT NULL))) FROM t0, vt1 WHERE (((((0.5325947775350104)>(x'')))%(((0.4680186576423989)AND(1.772022632E9))))) ORDER BY LIKE((((vt1.c0, vt1.c0, t0.c0))>=((t0.c0, 8.98171541E8, t0.c0))), ((NULL)<=(t0.c0)), '症') ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((IFNULL(DISTINCT t0.c0, t0.c0)) ISNULL) FROM vt1 WHERE (json_insert(((x'52e2')=(NULL)), (~ (NULL)), (0Xffffffffe58d9545 IN ())));SELECT ALL CAST(CASE t0.c0  WHEN 0.050470480528135075 THEN t0.c0 ELSE t0.c0 END AS BLOB) FROM t0 WHERE ((- (((NULL)==(''))))); -- 0ms;
SELECT ALL GROUP_CONCAT((vt1.c0 IN ())) OVER () FROM t0, vt1 WHERE (((((((x'405d') NOT NULL))OR(((((((((0xfffffffff6ea0aa3)OR(0.3476015521150919)))AND('1487079560')))AND('')))OR(NULL)))))OR((((0xdc04aeb))<=((0.18911157965420067)))))); -- 1ms;
SELECT DISTINCT ((((((((UPPER(DISTINCT vt1.c0))OR(CAST(vt1.c0 AS BLOB))))OR((vt1.c0 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((-1.031063271E9)>=(t0.c0)))) FROM t0 WHERE (SQLITE_COMPILEOPTION_USED(CAST(0.8769579220716329 AS INTEGER)));SELECT DISTINCT (~ ('')), (((((((((t0.c0 IN ()))OR(t0.c0 COLLATE NOCASE)))OR((('[g>r') BETWEEN (t0.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)))OR(t0.c0 COLLATE NOCASE)), ((t0.c0)*(vt1.c0)) COLLATE RTRIM FROM t0 NOT INDEXED;SELECT TOTAL(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt1, t0; -- 0ms;
SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((t0.c0) NOTNULL)) AND (((((((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(t0.c0)))) FROM t0, vt1 WHERE (TRIM(COALESCE(-4.30800874E8, x''), ((0.18597798017324696) NOT BETWEEN ('1168298700') AND (x'')))); -- 0ms;
SELECT CASE ((9.22214764E8) NOT BETWEEN (t0.c0) AND (vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN t0.c0 WHEN ((vt1.c0)<=(t0.c0)) THEN '1856447933' WHEN GROUP_CONCAT(t0.c0) THEN ((((t0.c0)AND(vt1.c0)))OR(vt1.c0)) END FROM vt1 ORDER BY (~ (NULL COLLATE RTRIM)) ASC;SELECT ALL ((((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(1856447933)))AND(t0.c0))) IS FALSE), vt1.c0, ((0.967134431903438) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE RTRIM FROM vt1 WHERE (UPPER(HEX(DISTINCT ''))) GROUP BY ((((((((TRIM(vt1.c0))AND(CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE WHEN t0.c0 THEN vt1.c0 END)))OR((t0.c0 IN (t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) HAVING (x'' IN ());SELECT DISTINCT (((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL))))/(UPPER(vt1.c0))) FROM t0 WHERE ((((((0.578608733112187)) BETWEEN (('1721830723')) AND ((x''))))>(CAST('763315512' AS REAL)))) ORDER BY ((CAST(t0.c0 AS BLOB))<>(CASE WHEN t0.c0 THEN vt1.c0 END))  NULLS LAST;SELECT ALL ((NOT (vt1.c0)) IN ()) FROM t0 WHERE (UNLIKELY((x'43f6' IN ()))) LIMIT -867035290 OFFSET -2144027766; -- 0ms;
SELECT LOWER((('ebt{n!,!') BETWEEN (vt1.c0) AND (t0.c0))) FROM vt1 GROUP BY vt1.c0;SELECT ALL (NOT (SUM(vt1.c0))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT LEAD(((((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))) IS TRUE), CAST(-136589096 AS INTEGER), ((((vt1.c0) NOTNULL)) NOT BETWEEN (CASE WHEN x'9e5b' THEN t0.c0 ELSE vt1.c0 END) AND ((t0.c0 IN ())))) OVER ( ORDER BY vt1.c0 ASC) FROM t0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN '-664583702' THEN vt1.c0 END)*(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))), CASE WHEN t0.c0 THEN CAST(vt1.c0 AS NUMERIC) WHEN t0.c0 THEN (NOT (t0.c0)) WHEN (((t0.c0))<=((vt1.c0))) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)) END, (CASE WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.8538045280684049 THEN vt1.c0 ELSE vt1.c0 END IN (CAST(vt1.c0 AS BLOB), ((((vt1.c0)OR('iE')))OR(vt1.c0)))) FROM t0 WHERE ((((NOT ('뼽[Uj4㡴>')))IS(((NULL)GLOB(x'')))));SELECT ((((((((CASE x''  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(CAST(t0.c0 AS INTEGER))))AND((- (t0.c0)))))OR(vt1.c0)))AND(highlight(vt1.c0, vt1.c0, t0.c0, t0.c0))) FROM vt1, t0 WHERE ((((- (NULL))) NOT BETWEEN ((('CF')IS(x'763f'))) AND ((NULL IN ())))); -- 0ms;
SELECT SUM((+ (vt1.c0))) FROM vt1; -- 0ms;
SELECT ALL (((- (t0.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)) FROM t0;SELECT ALL ((((t0.c0, t0.c0, t0.c0, t0.c0, vt1.c0, vt1.c0, vt1.c0))==((t0.c0, vt1.c0, vt1.c0, '-861197562', t0.c0, t0.c0, x'ddee'))) IN (LIKELIHOOD(DISTINCT vt1.c0, 0.24141086860794791))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((vt1.c0)+(t0.c0)) COLLATE RTRIM FROM vt1, t0; -- 0ms;
SELECT ALL (CAST(NULL AS REAL) IN ()) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)>>(vt1.c0)) IN (vt1.c0, t0.c0 COLLATE RTRIM)) FROM t0 WHERE ((((('' IN (x'', 0.27598032041754306)), (('nR7') NOT BETWEEN (x'') AND (0.526839385785295)), CASE NULL  WHEN 0.3580235264813505 THEN 0.4781597383666827 WHEN 0xffffffffd86341ea THEN NULL WHEN NULL THEN x'' END))!=(((NOT ('TRUE')), ((((-2.100336997E9)AND(x'')))OR(NULL)), LIKE(NULL, 0.27598032041754306))))) LIMIT 549500825 OFFSET -170653694;SELECT DISTINCT ((t0.c0)+(CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)) FROM t0 WHERE (((((((((('-567590413')AND(9.22214764E8)))AND(1274017588)))AND(NULL)))AND('')) IN (((0.9585018035561047)>>(0.910997858602809)), ((NULL) ISNULL))));SELECT ALL ((CASE WHEN t0.c0 THEN t0.c0 END)IS NOT(((((vt1.c0)OR(t0.c0)))AND(t0.c0)))), (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(vt1.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))), (((NULL)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((LOWER(t0.c0)))) FROM t0, vt1 WHERE (UNLIKELY(DISTINCT NULL) COLLATE RTRIM); -- 0ms;
SELECT ALL (TYPEOF(DISTINCT t0.c0) IN (CASE WHEN t0.c0 THEN vt1.c0 END)), vt1.c0, ((CAST(t0.c0 AS INTEGER)) IS TRUE) FROM t0 WHERE (((NULLIF('RDD⬆', 0.7112095536145276))>((((0.750662415077016))=((x'0690'))))));SELECT ALL CASE WHEN (+ (vt1.c0)) THEN (((vt1.c0))>((t0.c0))) ELSE (NOT (vt1.c0)) END FROM vt1, t0 WHERE ((((0.6919062673208495 IN ())) NOT BETWEEN (((NULL)=('9O'))) AND (((((x'')OR(NULL)))AND(-1842753719))))); -- 0ms;
SELECT ALL t0.c0 FROM vt1, t0; -- 0ms;
SELECT COUNT(*) FROM vt1, t0; -- 0ms;
SELECT GROUP_CONCAT(CAST(t0.c0 AS BLOB)) FROM vt1, t0 WHERE (((((0.3184600807937169)AND('1655793005')))OR('d,')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE ((t0.c0) IS TRUE)  WHEN ((t0.c0) ISNULL) THEN (NOT (t0.c0)) END, x'', (NOT (((t0.c0) ISNULL))) FROM t0, vt1 WHERE (((x'8582' COLLATE BINARY) NOTNULL)) LIMIT -1332157488; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN '7	1]Rr|[Z' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM FROM t0 WHERE (((-5.15147988E8) NOT NULL) COLLATE NOCASE) LIMIT -1445161426 OFFSET -1869593797;SELECT DISTINCT CASE WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0)+(vt1.c0)) ELSE UNLIKELY(t0.c0) END, LTRIM(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)), ((vt1.c0)AND(t0.c0))), (((vt1.c0)) BETWEEN ((LIKELY(vt1.c0))) AND ((UNLIKELY(DISTINCT t0.c0)))), (((t0.c0 COLLATE RTRIM))>=(((+ (x''))))), ((CAST(t0.c0 AS TEXT)) ISNULL) FROM t0 WHERE (CAST(JULIANDAY(x'', x'', x'') AS NUMERIC));SELECT DISTINCT CAST(((('')) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) AS NUMERIC) FROM vt1, t0; -- 0ms;
SELECT ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY FROM t0, vt1 WHERE ((((((x'' IN ()))AND(((x'')>('-1149927304')))))AND((0.6294916125417263 IN ())))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1, t0 WHERE (TRIM(CAST(NULL AS REAL))) GROUP BY CAST(((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) AS TEXT); -- 1ms;
SELECT ((vt1.c0)OR(t0.c0)) COLLATE NOCASE, ABS(LIKELY(t0.c0)), t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT vt1.c0, t0.c0)) NOT BETWEEN (((t0.c0)-(NULL))) AND ((t0.c0 IN (vt1.c0)))), vt1.c0, ((t0.c0)>(t0.c0)) COLLATE NOCASE FROM vt1 WHERE (-4.30800874E8 COLLATE NOCASE);SELECT DISTINCT CAST(t0.c0 COLLATE NOCASE AS TEXT) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((t0.c0)OR(vt1.c0)) IN (GROUP_CONCAT(vt1.c0), '')), LIKELIHOOD(t0.c0, 0.8607967920142325), (((vt1.c0) NOT NULL) IN ()), (NOT (vt1.c0 COLLATE NOCASE)), '-103726186' FROM vt1, t0; -- 0ms;
SELECT CASE ((((t0.c0)AND(t0.c0)))AND(vt1.c0))  WHEN (- (t0.c0)) THEN LIKELY(DISTINCT t0.c0) END FROM vt1;SELECT DISTINCT ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (AVG(t0.c0)) AND ((t0.c0 IN ()))), (NOT (((vt1.c0)&(t0.c0)))), (((((t0.c0, t0.c0, t0.c0))!=((vt1.c0, x'', vt1.c0)))) NOT NULL) FROM vt1;SELECT ALL vt1.c0 FROM vt1, t0 WHERE (CASE WHEN (x'' IN ()) THEN x'' COLLATE NOCASE WHEN (NOT ('')) THEN ((((x'0ac5')AND(NULL)))AND(x'')) WHEN ((NULL)&(x'04d0')) THEN (('1536061178') NOT BETWEEN (NULL) AND (0.017646752886072536)) END); -- 0ms;
SELECT t0.c0, json(((vt1.c0)/(t0.c0))), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))+((vt1.c0 IN (t0.c0)))) FROM vt1, t0 WHERE (UNLIKELY(DISTINCT CASE '-876134774'  WHEN x'' THEN 0.8233849984442944 WHEN 0.3915961948634551 THEN x'' WHEN '1929505957' THEN '-1053670590' ELSE x'5786ec390301' END)); -- 0ms;
SELECT 0.6409987559666324, t0.c0 COLLATE RTRIM, COUNT(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM vt1, t0; -- 1ms;
SELECT ALL (((((t0.c0) IS TRUE), MIN(t0.c0), t0.c0 COLLATE NOCASE))<=((((t0.c0) BETWEEN (t0.c0) AND ('-610215745')), ABS(x'c8ee'), SUM(t0.c0)))), t0.c0, MIN((NOT (vt1.c0))), ((((t0.c0)/(t0.c0)))GLOB(NULL COLLATE RTRIM)), COUNT(*) OVER () FROM vt1, t0 WHERE ((((x'')IS NOT('1724091245')) IN (CASE WHEN 0.36551490806304143 THEN '' END, CAST(-861197562 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE)<=(((t0.c0)||(vt1.c0)))) FROM t0, vt1 WHERE ((((NULL IN ()))<=((((0.2983373821308898, NULL, '裭*''')) BETWEEN ((0.032975045602815944, x'', 1.446139789E9)) AND (('ꯊzkG', '-1825781905', x'')))))); -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0)))-(((vt1.c0)OR(vt1.c0)))) FROM t0 LIMIT -1725292680 OFFSET 348100736;SELECT ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))!=(x'')) FROM t0 WHERE (((((NULL)/(x'')))OR(('' IN (x''))))) GROUP BY '862939023' HAVING ((('-376394509')&(t0.c0)) IN ());SELECT ALL ((((((vt1.c0)AND(t0.c0)))OR(t0.c0)))>=(((t0.c0)<<(vt1.c0)))) FROM t0 GROUP BY rtreenode((t0.c0 IN (vt1.c0)), (vt1.c0 IN (vt1.c0, t0.c0))) HAVING (((x'') IS TRUE) IN (((t0.c0)<(t0.c0))));SELECT ALL CAST(vt1.c0 AS NUMERIC) FROM vt1, t0 ORDER BY ((((t0.c0)<(t0.c0)))IS NOT(((0.11356806073216386)+(vt1.c0)))) ASC LIMIT -1344605279 OFFSET 1711781145; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS INTEGER), RANK() OVER (), ((COUNT(*))||(((t0.c0)|(t0.c0)))) FROM t0 WHERE (((((((x'')AND(0.44052025113381554)))AND('!{h}xI+'))) IS TRUE)) LIMIT -2049936462;SELECT DISTINCT (((vt1.c0, t0.c0, vt1.c0, t0.c0, t0.c0)) NOT BETWEEN (((0.874853401739482 IN ()), ((t0.c0) ISNULL), vt1.c0 COLLATE RTRIM, ((vt1.c0)LIKE(vt1.c0)), ((((((((((((vt1.c0)OR(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) AND ((CAST(t0.c0 AS INTEGER), (NOT (t0.c0)), ((t0.c0)OR(x'')), (~ (t0.c0)), ((((vt1.c0)AND(vt1.c0)))AND(x''))))) FROM vt1 WHERE (CASE WHEN NULL THEN NULL ELSE '1643243078' END COLLATE BINARY);SELECT ALL (CASE WHEN vt1.c0 THEN t0.c0 END IN ((~ (t0.c0)), ((vt1.c0)-(t0.c0)))), t0.c0, (((t0.c0, t0.c0, vt1.c0)) BETWEEN (((+ (vt1.c0)), json_array(0.9481015175198706, vt1.c0, t0.c0, t0.c0), t0.c0 COLLATE NOCASE)) AND ((((t0.c0) IS TRUE), CAST(t0.c0 AS TEXT), ((t0.c0)<>(t0.c0))))) FROM vt1 WHERE (CAST((('') ISNULL) AS TEXT));SELECT ROW_NUMBER() OVER ( RANGE BETWEEN (t0.c0 COLLATE BINARY IN ((t0.c0 IN (vt1.c0, vt1.c0)))) FOLLOWING AND ((vt1.c0 COLLATE RTRIM) NOTNULL) FOLLOWING) FROM t0;SELECT ALL ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))/(x'4205')), CASE WHEN ((t0.c0)>(vt1.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(vt1.c0)))AND(vt1.c0)) WHEN ((((t0.c0)OR(vt1.c0)))AND(vt1.c0)) THEN (+ (-1.031063271E9)) WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<<(vt1.c0)) END, LOWER(CAST(x'' AS BLOB)) FROM t0;SELECT ALL CASE WHEN CAST(t0.c0 AS REAL) THEN ((vt1.c0) NOTNULL) END FROM t0, vt1 ORDER BY (((((((((('') IS TRUE))OR(CAST(vt1.c0 AS REAL))))OR(CAST(vt1.c0 AS NUMERIC))))AND((((t0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0)%(0.3132619111373721)))); -- 0ms;
SELECT DISTINCT DATETIME(vt1.c0, ((vt1.c0)<>(t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) FROM vt1, t0 LIMIT -1804809460; -- 0ms;
SELECT ALL ((vt1.c0)<=((t0.c0 IN (vt1.c0)))) FROM t0 WHERE (x'e607');SELECT DISTINCT ((CAST(t0.c0 AS BLOB))%(((t0.c0)GLOB(t0.c0)))) FROM vt1;SELECT DISTINCT ((json_array_length(t0.c0))=((((vt1.c0))>((vt1.c0))))), ((CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((t0.c0)>=(t0.c0))) AND ((t0.c0 IN ()))), CASE vt1.c0 COLLATE BINARY  WHEN t0.c0 COLLATE BINARY THEN (- (x'ff5a')) END FROM vt1, t0 WHERE (((((CAST(x'' AS NUMERIC))OR(((x'5740')=(NULL)))))OR('' COLLATE RTRIM))) ORDER BY ((x'')%((((0.0580149229249991, t0.c0, t0.c0))<((t0.c0, vt1.c0, t0.c0))))) ASC; -- 0ms;
SELECT DISTINCT (((((((t0.c0)OR(t0.c0)))OR(t0.c0))))=((x''))), ((((CAST(t0.c0 AS NUMERIC))OR('0.027614754845606715')))AND(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)), CAST(((t0.c0)/(vt1.c0)) AS BLOB) FROM vt1 WHERE (((CASE ',C1|<M''!>'  WHEN NULL THEN NULL ELSE 0.6998702593145836 END)IS((('-980101080') NOT BETWEEN ('-914376162') AND (x''))))) LIMIT -1758077343;SELECT vt1.c0 FROM t0, vt1; -- 0ms;
SELECT MIN(x'') FROM vt1, t0 WHERE (((((0.07447075496991251 COLLATE BINARY)OR(CASE x''  WHEN '[g>r' THEN x'' END)))OR(CASE WHEN NULL THEN -1.329796534E9 WHEN 0.6894245652725031 THEN '1610857710' WHEN '1856447933' THEN 0.6795356611165453 ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE)LIKE(((vt1.c0)IS(t0.c0)))) FROM t0, vt1 NOT INDEXED GROUP BY ((NULL) ISNULL); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((vt1.c0) NOT NULL)), 13823932, NULLIF(DISTINCT LIKELY(DISTINCT t0.c0), CAST(NULL AS NUMERIC)) FROM t0;SELECT DISTINCT (- (CAST(t0.c0 AS REAL))) FROM vt1 WHERE (((((x'') BETWEEN (NULL) AND (NULL))) NOT BETWEEN (CASE x'ccdc'  WHEN x'' THEN 0.010989218552972857 ELSE '-432237652' END) AND (((NULL) BETWEEN (-1825781905) AND (0.4831526065561834)))));SELECT DISTINCT GROUP_CONCAT(((vt1.c0) NOT NULL)) OVER ( ORDER BY (+ ((vt1.c0 IN ()))), ((((((t0.c0)==(t0.c0)))AND((vt1.c0 IN ()))))OR(0.10261968338583716))) FROM vt1, t0 WHERE ((((0.9196359970039683)*(x'd4cb14f7')) IN (((x'')<=(0Xffffffffea249a59))))); -- 0ms;
SELECT ALL '0m' FROM t0, vt1 LIMIT -1344605279; -- 0ms;
SELECT ALL (((NOT (t0.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND ((t0.c0 IN (vt1.c0)))) FROM vt1, t0 ORDER BY TYPEOF(DISTINCT (vt1.c0 IN ())) DESC; -- 0ms;
SELECT ((((TOTAL(vt1.c0))OR((vt1.c0 IN ()))))OR(t0.c0)) FROM t0, vt1; -- 0ms;
SELECT ((((t0.c0) NOTNULL))<=(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))) FROM vt1, t0 NOT INDEXED ORDER BY ((((t0.c0) NOT BETWEEN (vt1.c0) AND (0Xffffffffc28b3919)))%(((((((((0.8295653222597256)OR(vt1.c0)))OR(x'2148')))AND(t0.c0)))AND(vt1.c0)))) DESC, ((((((((vt1.c0)AND(CAST(vt1.c0 AS BLOB))))AND(((NULL) BETWEEN (vt1.c0) AND (t0.c0)))))OR((((vt1.c0))<=((vt1.c0))))))AND(CAST(vt1.c0 AS TEXT))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT '', (NOT (x'')), t0.c0 FROM vt1;SELECT ALL AVG((((t0.c0, vt1.c0, 'f*){ṿGcV]'))=((t0.c0, t0.c0, 0.9603545974249951)))) OVER () FROM t0, vt1; -- 0ms;
SELECT ALL t0.c0, CAST(vt1.c0 AS TEXT) COLLATE NOCASE, ((+ (vt1.c0)) IN ()), ((((((vt1.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN (((vt1.c0)<(vt1.c0))) AND (((t0.c0)%(vt1.c0)))), ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt1.c0)%(vt1.c0))) AND (((0.10116806435656511)<>(t0.c0)))) FROM vt1;SELECT DISTINCT 1.48707956E9 FROM vt1, t0 GROUP BY vt1.c0 LIMIT 1098413643; -- 0ms;
SELECT ALL ((((vt1.c0) BETWEEN (0.45651996164919373) AND (vt1.c0)))OR(((((((((vt1.c0)AND(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))), CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM, LOWER(GROUP_CONCAT(t0.c0)) FROM vt1, t0; -- 0ms;
SELECT ALL (~ ((+ (t0.c0)))) FROM vt1, t0 WHERE (((('' IN ())) ISNULL)) GROUP BY 'wgA#0*MF9'; -- 1ms;
SELECT CASE WHEN '1146873407' THEN ((vt1.c0) BETWEEN ('-1539715651') AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END, vt1.c0, (((+ (t0.c0)))<(vt1.c0 COLLATE RTRIM)) FROM vt1;SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) OVER ( GROUPS  CURRENT ROW) FROM t0; -- 0ms;
SELECT DISTINCT json_valid(((t0.c0)IS(vt1.c0))), ((((vt1.c0)+(vt1.c0)))>(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))), x'', FIRST_VALUE(((x'887e')==((((('-867035290')AND(vt1.c0)))OR(vt1.c0))))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), CAST((- (x'39fb')) AS TEXT) FROM vt1 WHERE ('-152434013') GROUP BY HEX((t0.c0 IN ())) HAVING (+ (vt1.c0)) COLLATE RTRIM;SELECT DISTINCT (((NOT (vt1.c0)))GLOB(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), 2088752836, (json_patch(t0.c0, vt1.c0) IN ()), (~ (t0.c0 COLLATE RTRIM)), LAST_VALUE(CASE WHEN t0.c0 COLLATE RTRIM THEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE NULL END ELSE ((t0.c0) IS FALSE) END) OVER ( ORDER BY ((vt1.c0 COLLATE RTRIM) NOTNULL)) FROM vt1, t0 WHERE (((json_type(0x1d4b2772)) NOT BETWEEN (675238195 COLLATE BINARY) AND (CASE x''  WHEN NULL THEN NULL ELSE x'08dd5bc4' END))); -- 0ms;
SELECT ALL (+ (((t0.c0) IS TRUE))) FROM vt1 WHERE (((((('0.36551490806304143'))>((0.255268625101591))))AND(((x'f35c')>('vl1썩nx>h'))))) ORDER BY CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS REAL);SELECT DISTINCT ((((168297729)OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND(((vt1.c0)||(t0.c0)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (~ ((vt1.c0 IN ()))), '-1719554101', t0.c0 FROM t0 WHERE (((0.80844484213652 COLLATE NOCASE) BETWEEN (NULL) AND (((x'') NOT BETWEEN (x'') AND (0xffffffffefe017f4))))); -- 0ms;
SELECT DISTINCT ((((AVG(vt1.c0))OR(((vt1.c0) NOT NULL))))OR(CAST(t0.c0 AS TEXT))) FROM t0, vt1 ORDER BY CASE vt1.c0  WHEN vt1.c0 THEN 1672243985 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN ((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))), (((vt1.c0) NOTNULL) IN (((vt1.c0)||(t0.c0)))), COUNT(*) OVER ( GROUPS CAST(t0.c0 AS TEXT) PRECEDING), (((AVG(t0.c0)))>(((((t0.c0))<=((vt1.c0)))))), RANK() OVER () FROM t0, vt1 WHERE ((NULL IN (((NULL) IS FALSE))));SELECT (((vt1.c0 IN ()))IS NOT((t0.c0 IN ()))) FROM vt1; -- 0ms;
SELECT 0.5909015963310095 FROM vt1; -- 0ms;
SELECT ALL ((vt1.c0)AND((~ ('-1725292680')))) FROM t0 WHERE (((((0.15408036923115842)AND('1v')))OR(-1.825781905E9)) COLLATE RTRIM);SELECT ALL DENSE_RANK() OVER () FROM t0 WHERE ((ABS(x'6021') IN ())) LIMIT 1783261152 OFFSET -1249835474; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN 0.6627840000893872 ELSE vt1.c0 END)<=(((vt1.c0)+(vt1.c0)))) FROM t0;SELECT DISTINCT RANK() OVER () FROM vt1 WHERE ((((-1907000257)<=(0.1301868656990396)) IN (((0.037933856727123905)-(0x7ca7bb3))))); -- 0ms;
SELECT CAST('-1798212020' AS TEXT), (((t0.c0) NOT NULL) IN ()), COUNT(*) FROM t0, vt1 WHERE (CAST(0.6424880016952318 AS REAL) COLLATE RTRIM); -- 0ms;
SELECT CASE WHEN t0.c0 THEN t0.c0 WHEN 0X7625f7c3 THEN vt1.c0 WHEN 0.045535932169827764 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM FROM vt1, t0 LIMIT -1795840099; -- 0ms;
SELECT DISTINCT ((json_patch(NULL, vt1.c0))-(((((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))), CASE (((vt1.c0)) NOT BETWEEN (('Vu')) AND ((NULL)))  WHEN x'' THEN t0.c0 ELSE (((t0.c0))==((t0.c0))) END, (((vt1.c0)<(t0.c0)) IN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((((t0.c0, vt1.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.20003696058323062, vt1.c0))))<<(t0.c0 COLLATE NOCASE)), (((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))) BETWEEN ((((t0.c0))>=((vt1.c0)))) AND (CAST(vt1.c0 AS TEXT))), NTILE(((((vt1.c0)AND(vt1.c0))) IS TRUE)) OVER () FROM vt1 WHERE (((('\r7' IN ()))*((x'' IN ())))) ORDER BY GLOB((- (t0.c0)), '1883765683') ASC;SELECT DISTINCT SUM(CASE WHEN t0.c0 THEN vt1.c0 END) COLLATE NOCASE FROM vt1, t0 WHERE (((((1874776010)=(1504924518)))<=((~ (x'877f'))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (json_remove(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('-384563781'))))) FROM t0 WHERE ((((('1446139789')IS NOT(0xffffffffc2491afd)))GLOB(-479398270))) LIMIT -152434013 OFFSET -1952525190;SELECT DISTINCT CUME_DIST() OVER () FROM t0 ORDER BY CAST(CAST(t0.c0 AS TEXT) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT ALL ((((t0.c0) ISNULL)) BETWEEN (NULL) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))), ((json_array('-2144027766', 0.027614754845606715, vt1.c0, t0.c0))*(NULL)), (((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) IN ()) FROM vt1, t0; -- 0ms;
SELECT ALL SUM(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) FROM t0; -- 0ms;
SELECT 1.934803345E9, ((((vt1.c0)IS(t0.c0)))>(((t0.c0)IS(vt1.c0)))), (((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN ()) FROM vt1, t0 WHERE ((~ (((-1344605279) NOTNULL)))); -- 0ms;
SELECT ALL CASE (- (vt1.c0))  WHEN ((((vt1.c0)OR(t0.c0)))OR(t0.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt1.c0)+(vt1.c0)) THEN (- (vt1.c0)) WHEN TIME(t0.c0, vt1.c0, t0.c0, t0.c0, vt1.c0) THEN (t0.c0 IN ()) ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END END FROM t0;SELECT DISTINCT TOTAL(CAST(t0.c0 AS INTEGER)) OVER ( ORDER BY ((((((((CAST(t0.c0 AS INTEGER))AND(rtreenode(NULL, t0.c0))))OR(((t0.c0)OR('122505414')))))OR(((vt1.c0)&(t0.c0)))))OR((0.577875679967413 IN ())))  NULLS FIRST, TRIM(DISTINCT NULL, UPPER(t0.c0)) DESC  NULLS FIRST, (COALESCE(t0.c0, vt1.c0, t0.c0, '') IN ())  NULLS FIRST) FROM vt1, t0; -- 0ms;
SELECT ALL ((CASE WHEN -465604995 THEN t0.c0 END)-((t0.c0 IN (t0.c0)))), (- ((NOT (vt1.c0)))), (((vt1.c0, t0.c0, 0.9230158632340926)) BETWEEN ((CAST(t0.c0 AS NUMERIC), (NOT (t0.c0)), (~ (t0.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, CASE WHEN x'' THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END, TOTAL(t0.c0)))) FROM t0 WHERE ((('z!0+	M')-('0.757051994939661')) COLLATE BINARY);SELECT DISTINCT ((CAST(t0.c0 AS TEXT))<=(((t0.c0)-(vt1.c0)))) FROM t0 WHERE (UPPER(CASE x''  WHEN x'' THEN x'' ELSE 1.721830723E9 END));SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT CAST(((vt1.c0)<(-2074782258)) AS NUMERIC) FROM t0 WHERE (((((0xffffffffcda65727) IS FALSE)) BETWEEN (LIKELY(DISTINCT '-567590413')) AND ((('1929505957')OR(NULL))))) ORDER BY TYPEOF(t0.c0 COLLATE BINARY) DESC;SELECT ALL SUM(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '-1465157490' END) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt1; -- 0ms;
SELECT DISTINCT (+ (((('aF\rZ'))==((t0.c0))))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((MIN(vt1.c0)) IS FALSE), ((((NOT (t0.c0)), vt1.c0, vt1.c0 COLLATE RTRIM))=((((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((t0.c0)OR(t0.c0)))AND(vt1.c0))))), vt1.c0 FROM t0, vt1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( RANGE ((0.6213571719092319)>>(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))) PRECEDING EXCLUDE TIES) FROM t0, vt1 WHERE (((((((((((0.17016959347861715)OR(NULL)))AND(x'90c6c65b')))AND(0x699eeb68)))OR('-1627409340')))<<(NULL))) ORDER BY CAST(LIKELY(DISTINCT t0.c0) AS NUMERIC) DESC;SELECT ALL CASE ((vt1.c0)AND('7,	3~2'))  WHEN (((t0.c0))=((2036033629))) THEN CAST(vt1.c0 AS TEXT) END, x'', COUNT(CAST(vt1.c0 AS NUMERIC)) OVER ( GROUPS  CURRENT ROW) FROM t0 WHERE ((~ (((x'')<=(NULL)))));SELECT CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 END COLLATE NOCASE FROM t0 NOT INDEXED ORDER BY ((TRIM(t0.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((vt1.c0, t0.c0, vt1.c0)))) AND ((t0.c0 IN ())))  NULLS FIRST, UPPER(DISTINCT ((vt1.c0)-(t0.c0))) DESC  NULLS LAST;SELECT DISTINCT (((UPPER(DISTINCT t0.c0)))<((vt1.c0))) FROM t0 WHERE (CASE (~ ('-1869593797'))  WHEN x'' THEN (((x'')) NOT BETWEEN ((x'')) AND ((NULL))) WHEN (- ('-1850777127')) THEN ((0.44037559052867636)|('i?')) WHEN (('-414721328') NOTNULL) THEN (((9.22214764E8, x'', '	읶')) NOT BETWEEN ((-2.3846516E8, NULL, '')) AND (('②V|V阮Uxa', '-384563781', x'1168'))) ELSE CAST(0X540aaf34 AS INTEGER) END);SELECT DISTINCT CASE ((((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0))  WHEN ((t0.c0)==(x'')) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((t0.c0)<<(vt1.c0)) END FROM vt1, t0 WHERE (CASE CASE WHEN 'Zz-q4' THEN 0.20427968875276947 ELSE 0x65ae548b END  WHEN CASE ''  WHEN 'IkX''\rPD' THEN '-152434013' END THEN CASE -1.802644631E9  WHEN 0.025225960880825737 THEN 0.014991711624098403 ELSE '-1307566452' END ELSE (- (0.09860361159094444)) END) ORDER BY ((t0.c0) IS TRUE) COLLATE BINARY DESC; -- 0ms;
SELECT (((vt1.c0)+(0.526839385785295)) IN ()) FROM vt1 WHERE (((NULL)OR(x'')) COLLATE NOCASE) GROUP BY ((((vt1.c0 IN ()), ((vt1.c0)-(vt1.c0)), (t0.c0 IN (t0.c0, t0.c0))))>=((((t0.c0)%(t0.c0)), ((vt1.c0)*(vt1.c0)), (~ (vt1.c0))))), (((CASE vt1.c0  WHEN vt1.c0 THEN 9.22214764E8 END))<=(((((vt1.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0)))))), CAST(((t0.c0) ISNULL) AS INTEGER), json_object(vt1.c0, vt1.c0, vt1.c0, t0.c0) COLLATE BINARY, t0.c0 HAVING AVG((- (t0.c0)));SELECT ALL CAST(((vt1.c0) NOTNULL) AS NUMERIC), (((((vt1.c0, vt1.c0, NULL))<>((t0.c0, vt1.c0, vt1.c0)))) BETWEEN ((- (vt1.c0))) AND (t0.c0)), (((NOT (vt1.c0))) NOT BETWEEN (vt1.c0) AND ((t0.c0 IN (t0.c0)))) FROM t0, vt1 WHERE ((- (CASE WHEN '6HN1Z' THEN 0.7261902550429862 WHEN 0X1eb04482 THEN -1157094622 WHEN NULL THEN 'I?' END))); -- 1ms;
SELECT ALL CAST(TOTAL(t0.c0) AS TEXT) FROM vt1, t0 WHERE (((((x'14d5') BETWEEN (4.5502799E7) AND (0.6875778350925471)))%(((0.9264560842649943)<>(x''))))); -- 0ms;
SELECT ALL (((('1585047266')|(vt1.c0)))<<(((vt1.c0) NOT NULL))) FROM vt1 WHERE (IFNULL((- (-190830982)), (('-188601270')OR('sk읯J')))) ORDER BY 0.09778738652107821 COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT ALL ((((t0.c0)=(t0.c0)))|((- ('T~Os')))), (CAST(vt1.c0 AS BLOB) IN ()), ((((((((CAST(t0.c0 AS INTEGER))OR(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND((- (vt1.c0)))))AND(t0.c0)))OR(LOWER(vt1.c0))), ((((t0.c0)AND(CAST(t0.c0 AS INTEGER))))AND(vt1.c0 COLLATE RTRIM)), (((((~ (t0.c0)))AND(TOTAL(vt1.c0))))AND(json_remove(t0.c0, t0.c0))) FROM t0 WHERE ((NOT ((('R0')AND('MT]E7g8'))))) GROUP BY ((NULL) BETWEEN (IFNULL(t0.c0, vt1.c0)) AND ((~ (vt1.c0))));SELECT DISTINCT ((CAST(0.6416776889761273 AS TEXT))>(' 4')), AVG(LIKELY(DISTINCT vt1.c0)), LIKELIHOOD(CAST(vt1.c0 AS NUMERIC), 0.23555975109972482) FROM t0;SELECT DISTINCT (((vt1.c0, 0Xffffffffed29d63c, t0.c0, 0Xffffffff96743984, vt1.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)), SUM(t0.c0), CASE vt1.c0  WHEN vt1.c0 THEN 'DfFP^*叇f^' END, (t0.c0 IN ()))) AND ((((((NULL)AND(t0.c0)))AND(NULL)), ((vt1.c0)<=(t0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)), TRIM(DISTINCT 0x29e52e1c, vt1.c0), vt1.c0))) FROM vt1 WHERE (x'7fe0');SELECT ALL 0.8177366994613924 FROM vt1, t0; -- 0ms;
SELECT DISTINCT 0.4378637174501424 FROM t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL) FROM t0 WHERE ((('-405801990')|(((0xfffffffff9d14396) NOTNULL))));SELECT ALL ((((((((1.929505957E9)OR(MAX(t0.c0))))AND((((vt1.c0, vt1.c0, t0.c0))<((vt1.c0, t0.c0, t0.c0))))))AND((t0.c0 IN ()))))AND(((t0.c0)>=(t0.c0)))), (NOT (NULL)) COLLATE NOCASE COLLATE BINARY, COUNT((vt1.c0 IN ())) OVER () FROM vt1, t0; -- 0ms;
SELECT DISTINCT AVG(((((vt1.c0)OR(t0.c0)))OR(t0.c0))) OVER () FROM vt1, t0 WHERE (((((((-1.72529268E9)OR(NULL)))AND(5.09434198E8))) ISNULL)); -- 0ms;
SELECT DISTINCT AVG(TOTAL((~ (vt1.c0)))) FROM vt1, t0;SELECT ((vt1.c0) ISNULL), (((NULL, vt1.c0, (+ (vt1.c0))))=((CAST(vt1.c0 AS NUMERIC), (t0.c0 IN ()), (t0.c0 IN ())))), AVG(CAST(vt1.c0 AS TEXT)) OVER (), (((((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL), TOTAL(((vt1.c0) IS TRUE)) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW) FROM vt1;SELECT DISTINCT x'87b3' FROM t0, vt1 WHERE (((((((NULL) BETWEEN (NULL) AND ('-1015373566')))AND(NULL)))OR(NULL COLLATE RTRIM))) UNION SELECT ALL ((((vt1.c0) NOT BETWEEN ('k?') AND (vt1.c0)))*(((vt1.c0)>=(t0.c0)))) FROM vt1 WHERE ((('') NOT BETWEEN (0.4099026720671759) AND (0.998810051024652)) COLLATE NOCASE);SELECT ALL MIN(CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) FROM t0 WHERE (((0xffffffffdb15e04e)/(0Xffffffffe676e3de)) COLLATE RTRIM);SELECT DISTINCT (((t0.c0)) BETWEEN ((((vt1.c0) BETWEEN ('-1825781905') AND (t0.c0)))) AND ((((vt1.c0) BETWEEN (t0.c0) AND (t0.c0))))) FROM vt1, t0 WHERE (('-103726186' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT SUM(((((t0.c0)AND(vt1.c0)))AND(t0.c0))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND ((t0.c0 COLLATE NOCASE)+((t0.c0 IN ()))) FOLLOWING) FROM t0, vt1 LIMIT 411389174; -- 0ms;
SELECT ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END) IS TRUE), vt1.c0, DATE(SUM(vt1.c0), (t0.c0 IN ()), t0.c0 COLLATE RTRIM), (((- (NULL)))<<(NULL)), ((vt1.c0 COLLATE BINARY)<<((t0.c0 IN ()))) FROM t0 WHERE ((((((((0.38373677997817945, '0.9805367799037776', x''))>=((0x62903d55, x'', '465692958'))))AND(x'')))AND(((((((((((((0X74ca83b8)OR('zy[㛷r')))OR('0.37117596633383265')))AND('-1031063271')))AND(0.5746522129041414)))AND(x'')))AND(0.9805367799037776)))));SELECT ALL vt1.c0, ((((((((COUNT(vt1.c0))AND((~ (t0.c0)))))OR('-921941994')))OR(((vt1.c0) IS FALSE))))AND(((((vt1.c0)AND(t0.c0)))AND(t0.c0)))), CAST(t0.c0 AS BLOB), ((CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE '1401759361' END) NOT BETWEEN ((((t0.c0))>=((vt1.c0)))) AND (((t0.c0)>(t0.c0)))), (TOTAL_CHANGES() IN ()) FROM t0, vt1 WHERE (((CAST('<J,' AS BLOB)) NOT BETWEEN (NULL) AND ((('E횓m,')IS NOT(''))))); -- 1ms;
SELECT DISTINCT (- (CAST(t0.c0 AS BLOB))), CAST(MAX(t0.c0) AS REAL), t0.c0 FROM t0, vt1 LIMIT 665697175; -- 0ms;
SELECT ALL t0.c0 COLLATE BINARY FROM t0; -- 0ms;
SELECT CASE WHEN TRIM(0.5203573907275616, vt1.c0) THEN t0.c0 COLLATE BINARY END FROM vt1 WHERE ((((('__w<h>')IS NOT(NULL))) BETWEEN (((((0.9543040359667432)AND(0.24566918543768967)))AND('-655968642'))) AND (((0.6795356611165453) NOT BETWEEN (x'b24e') AND ('-152434013'))))) ORDER BY ((t0.c0)|(t0.c0)) COLLATE RTRIM COLLATE BINARY LIMIT -1232524988 OFFSET 2082128745;SELECT TYPEOF(json_extract(t0.c0, vt1.c0)) FROM vt1 WHERE (IFNULL(DISTINCT LIKE(x'', 0.6845235754155894, '>'), CAST(0Xfffffffffeee2494 AS BLOB))) LIMIT 77416180;SELECT DISTINCT 0X20c0b799 FROM vt1 ORDER BY (((((t0.c0)OR(vt1.c0)))OR(t0.c0)) IN ()) DESC; -- 0ms;
SELECT ALL ((-1.46515749E9) NOT BETWEEN (CASE WHEN -5.67590413E8 THEN '윦tx\r*T拀8優' END) AND ((vt1.c0 IN ()))), (((((((((((((NOT (vt1.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN NULL ELSE vt1.c0 END)))AND('-1413446113')))OR((- (vt1.c0)))))OR((vt1.c0 IN ()))))OR(((((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))OR(0x422fc184)))AND(vt1.c0)))))AND((+ (NULL)))), CASE ((((((((vt1.c0)OR(0.36563226016417205)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))  WHEN '1926721408' THEN ((x'1c59') BETWEEN (vt1.c0) AND (NULL)) END, ((NULL)>(((x'b3434631c62b') BETWEEN (vt1.c0) AND (t0.c0)))), CAST((((t0.c0, vt1.c0, vt1.c0))>=((t0.c0, t0.c0, t0.c0))) AS NUMERIC) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((- (vt1.c0))) IS TRUE) FROM vt1 WHERE (((0.17211537362148166)IS(0Xffffffffd43b0b7c)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)!=(t0.c0))) AND (vt1.c0)), vt1.c0, ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) ISNULL) FROM t0, vt1; -- 0ms;
SELECT ((((vt1.c0 COLLATE NOCASE)OR(UNLIKELY(vt1.c0))))AND(CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END)) FROM vt1;SELECT ALL CASE vt1.c0 COLLATE BINARY  WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END THEN MAX(vt1.c0) END FROM vt1, t0 WHERE (((((CASE 0.5416976315976049  WHEN '-1465157490' THEN 'Lfpd' ELSE '' END)OR((('⇑') IS TRUE))))OR(((-1653290325) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c0 WHEN x'1f36' THEN '0.6394261066689291' WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END) NOT BETWEEN (vt1.c0) AND (((('1820845500'))<((vt1.c0))))), NTH_VALUE((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR(CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)))OR(CASE WHEN t0.c0 THEN vt1.c0 END)), ((NULL) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (rtreenode(t0.c0, vt1.c0)))) OVER (), GROUP_CONCAT((t0.c0 IN ())) FROM vt1, t0;SELECT DISTINCT (((t0.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((TOTAL(t0.c0)))), ((TOTAL(0X75e7ee4f))!=(vt1.c0 COLLATE NOCASE)), (((((((t0.c0)AND(vt1.c0)))OR(vt1.c0)), '', vt1.c0))==((MAX(t0.c0), (((0.6944647383957832))>(('0.967134431903438'))), t0.c0))) FROM vt1 WHERE (x'' COLLATE BINARY);SELECT ALL SUM(CAST(vt1.c0 AS BLOB)) FILTER(WHERE (((- (t0.c0))) IS TRUE)) OVER () FROM t0, vt1 WHERE (CAST((('	X8*c*_)')>>(NULL)) AS NUMERIC)); -- 0ms;
SELECT AVG(((vt1.c0) IS FALSE)) COLLATE RTRIM FROM vt1, t0 WHERE ((((0.02468565607712081)>>('\\n')) IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(t0.c0)))AND(vt1.c0)) COLLATE RTRIM FROM t0, vt1 WHERE ((((('-2144027766') NOT BETWEEN (NULL) AND (0.26737356288088454)))/(RTRIM('gP %Ggⷾ3m')))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (x'ab4b') AND (t0.c0)))-(vt1.c0 COLLATE BINARY)) FROM t0 WHERE ((- ((((-1651515229, 1e500, NULL))!=((0.9481015175198706, '-215477990', '	Ky\뉟\r6'))))));SELECT t0.c0 FROM t0, vt1; -- 0ms;
SELECT x'a909' FROM vt1, t0 WHERE (((((((((((((CAST('' AS INTEGER))OR(((((((((0.15213630209955253)AND(x'')))OR(0.7223355827982826)))AND(x'')))OR(0.49538618941247115)))))AND(0.25913881114893544)))AND(TRIM(DISTINCT '2123125617'))))OR(((0.41573471908098014)>=(0.3963265621201494)))))AND(CAST('-1113537412' AS INTEGER))))OR(('1446139789' IN ())))); -- 0ms;
SELECT DISTINCT (((vt1.c0 COLLATE RTRIM))<>((GROUP_CONCAT(vt1.c0)))) FROM vt1, t0; -- 0ms;
SELECT ((((MAX(t0.c0))OR(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0)-(t0.c0)))) FROM vt1;SELECT ALL ((vt1.c0)IS NOT(0xffffffffaf443b71)) COLLATE RTRIM FROM vt1 LIMIT -567590413 OFFSET 760132351; -- 0ms;
SELECT DISTINCT DATETIME((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))), (vt1.c0 IN ()), ((t0.c0)-(t0.c0)), (vt1.c0 IN ()), (vt1.c0 IN ())) FROM t0, vt1 WHERE ((- (((((x'')AND(0.5756606426579197)))AND('0.522654904669078'))))); -- 0ms;
SELECT DISTINCT (((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)) IN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((NULL)%(vt1.c0)), (t0.c0 IN ()))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, t0 WHERE (CASE WHEN 0.23748037994051852 COLLATE RTRIM THEN (((''))<=(('#(\~)j'))) WHEN (('TRUE')<=('45502799')) THEN (('H>') BETWEEN ('0.9543040359667432') AND (0.2272912066691024)) WHEN ((0.3511793013497537)AND('dj')) THEN ((('-1869593797')) BETWEEN ((x'')) AND (('763315512'))) END); -- 0ms;
SELECT ((t0.c0) NOTNULL) COLLATE NOCASE FROM vt1, t0 WHERE (CASE WHEN 0X4497e859 THEN ((NULL) ISNULL) END); -- 1ms;
SELECT ALL TOTAL(((vt1.c0) NOTNULL)) OVER () FROM vt1 WHERE ((+ ((('406147479') BETWEEN ('1085604952') AND (''))))); -- 0ms;
SELECT DISTINCT (('-唖_') ISNULL) FROM t0, vt1 WHERE (((((('1E'))>(('-548223993'))))!=(((NULL) NOTNULL)))) LIMIT -1879133915; -- 0ms;
SELECT ALL LAST_VALUE(((SQLITE_COMPILEOPTION_GET(vt1.c0)) NOT BETWEEN (NULL) AND ((+ (x''))))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT CAST(COUNT(t0.c0) AS TEXT) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((0.9999943036765621)<=(COUNT(*))) FROM vt1; -- 0ms;
SELECT DISTINCT (+ (((vt1.c0)|(vt1.c0)))) FROM vt1 WHERE (GLOB(((NULL)||(NULL)), NULL)); -- 0ms;
SELECT ALL (((t0.c0 IN (t0.c0))) BETWEEN ((vt1.c0 IN ())) AND ((vt1.c0 IN (t0.c0)))), (((vt1.c0)>=(t0.c0)) IN (CAST(t0.c0 AS NUMERIC))), CASE WHEN t0.c0 COLLATE BINARY THEN ((vt1.c0)*(vt1.c0)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END, (- (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))), CASE WHEN CAST(t0.c0 AS BLOB) THEN GROUP_CONCAT(230705899) ELSE CASE WHEN t0.c0 THEN t0.c0 END END FROM vt1 WHERE (CAST(NULL COLLATE RTRIM AS NUMERIC));SELECT DISTINCT CAST((((t0.c0))>=((vt1.c0))) AS BLOB) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((((((((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(MAX(t0.c0))))OR(SUM(vt1.c0))) FROM vt1, t0 WHERE (((RTRIM(x'')) NOT BETWEEN (((x'') IS TRUE)) AND (HEX(0.18597798017324696)))); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE RTRIM) NOT BETWEEN ((+ (t0.c0))) AND (CAST(1534679856 AS TEXT))) FROM t0;SELECT DISTINCT (((((vt1.c0)IS NOT(vt1.c0))))=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt1; -- 0ms;
SELECT ALL t0.c0 FROM t0, vt1; -- 0ms;
SELECT '-1344605279', ((CASE WHEN vt1.c0 THEN t0.c0 END)<<('' COLLATE NOCASE)), t0.c0 FROM vt1 WHERE (ABS(CAST('h' AS BLOB)));SELECT DISTINCT ((((NULLIF(NULL, t0.c0))AND(t0.c0)))OR(((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))) FROM vt1, t0 WHERE (((x'4aab')*(NULL)) COLLATE NOCASE) GROUP BY CASE (~ (t0.c0))  WHEN ((vt1.c0)|(vt1.c0)) THEN HEX(t0.c0) ELSE MIN(t0.c0, 0.1712877497170796) END HAVING CASE WHEN (NOT (vt1.c0)) THEN ((t0.c0) IS TRUE) WHEN t0.c0 COLLATE BINARY THEN t0.c0 WHEN ((vt1.c0)==(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN t0.c0 END THEN vt1.c0 WHEN ((('%mTp'))<>((t0.c0))) THEN CAST(0.03548259024243561 AS NUMERIC) END; -- 0ms;
SELECT ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM FROM vt1, t0; -- 0ms;
SELECT GROUP_CONCAT(vt1.c0) OVER ( GROUPS ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (t0.c0) AND ((NOT (vt1.c0)))) PRECEDING EXCLUDE NO OTHERS) FROM vt1 ORDER BY (vt1.c0 IN (((vt1.c0)%(t0.c0)))) DESC  NULLS FIRST, ((t0.c0)IS NOT(vt1.c0)) COLLATE RTRIM  NULLS LAST, t0.c0;SELECT ALL ((((vt1.c0)&(vt1.c0)))>(t0.c0 COLLATE RTRIM)) FROM t0, vt1; -- 0ms;
SELECT ALL (((UNLIKELY(t0.c0)))>((COUNT(vt1.c0)))), t0.c0, ((((vt1.c0 COLLATE BINARY)OR(LIKELIHOOD(DISTINCT t0.c0, 0.6372840550241397))))AND(COALESCE(DISTINCT t0.c0, t0.c0))), ((((((t0.c0)IS NOT(t0.c0)))OR((~ (t0.c0)))))OR((~ (vt1.c0)))), ((((vt1.c0) NOTNULL))<=(t0.c0)) FROM vt1, t0 WHERE (((((((((HEX(NULL))OR((NULL IN ()))))OR(((0x3219cce8) NOT BETWEEN (NULL) AND (NULL)))))OR(CASE WHEN 1734799970 THEN NULL WHEN 'd%%<' THEN '2106558961' WHEN x'' THEN NULL ELSE 0x7235c56b END)))AND(((((NULL)OR('1764725607')))AND(x''))))) ORDER BY (UNLIKELY('	읶') IN (((t0.c0)<<(vt1.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL (vt1.c0 IN ()), CASE CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END  WHEN LIKELIHOOD(t0.c0, 0.7029899630176238) THEN (~ (t0.c0)) END, TRIM(((vt1.c0) IS FALSE)) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((vt1.c0)<(vt1.c0))))) FROM t0 WHERE ((((((('&H')OR(1.168711295E9)))OR(x'6cdd'))) NOTNULL));SELECT ALL TOTAL(vt1.c0) OVER ( ORDER BY CASE WHEN LOWER(t0.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END WHEN ((vt1.c0)&(vt1.c0)) THEN ((t0.c0)*(vt1.c0)) WHEN (((t0.c0))<((t0.c0))) THEN '-1031063271' END DESC  NULLS LAST) FROM vt1, t0; -- 0ms;
SELECT DISTINCT '-1199501808' FROM vt1 WHERE (TRIM('-1291700217' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CAST(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 END AS REAL) FROM t0, vt1 WHERE ((((('Y(f_')<<(NULL)))<>(('1388601456' IN ())))) LIMIT 671408164; -- 0ms;
SELECT ((t0.c0)<>((NOT (vt1.c0)))) FROM t0, vt1; -- 1ms;
SELECT DISTINCT ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(NULL)))AND(t0.c0)))*(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) FROM vt1 WHERE (((((x'')OR(((((x'')AND('')))OR(NULL)))))OR(((NULL)IS(x'')))));SELECT DISTINCT GROUP_CONCAT(((t0.c0) IS TRUE)) OVER ( GROUPS ((((t0.c0 COLLATE BINARY)AND(ABS(DISTINCT t0.c0))))OR(json_object(vt1.c0, vt1.c0, t0.c0, vt1.c0, vt1.c0, vt1.c0))) PRECEDING EXCLUDE NO OTHERS) FROM vt1, t0 WHERE (CAST(((0.9054769806928729) ISNULL) AS BLOB)); -- 0ms;
SELECT DISTINCT (((0X644a9974))=((((vt1.c0)OR(NULL))))), (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))>>(((((t0.c0)AND(vt1.c0)))OR('549500825')))), (((vt1.c0) IS FALSE) IN (((((t0.c0)AND(t0.c0)))AND(vt1.c0)))) FROM t0 WHERE (TRIM(((x'') IS TRUE)));SELECT DISTINCT (((0.9383057928249717, t0.c0, t0.c0, 0.10261968338583716, vt1.c0)) NOT BETWEEN ((t0.c0 COLLATE BINARY, (t0.c0 IN (-6.55968642E8, vt1.c0)), '-170653694', (((t0.c0))>=((t0.c0))), t0.c0)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN '' END, HEX(vt1.c0), (~ (t0.c0)), CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END, ((vt1.c0)GLOB(t0.c0))))) FROM t0;SELECT DISTINCT (((t0.c0, '-443706043', vt1.c0)) BETWEEN (((~ (t0.c0)), t0.c0 COLLATE BINARY, (+ (vt1.c0)))) AND ((-303487765, (vt1.c0 IN ()), INSTR(vt1.c0, t0.c0)))) FROM vt1 WHERE (LOWER(x'' COLLATE NOCASE));SELECT DISTINCT CAST((+ (vt1.c0)) AS NUMERIC) FROM t0, vt1 ORDER BY SQLITE_VERSION(); -- 0ms;
SELECT ((((((((UPPER(t0.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))OR(((t0.c0)||(vt1.c0)))))AND(((t0.c0) ISNULL))))AND(t0.c0)), (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()), DENSE_RANK() OVER () FROM vt1, t0 WHERE (((((0.31785772140424884)>>(''))) BETWEEN ((((('WGA#0*MF9')OR('<')))AND(-175918183))) AND ((((('09')AND(-144851130)))AND('minutesDvWa法<rj'))))) GROUP BY CAST(t0.c0 COLLATE BINARY AS TEXT), (CAST(t0.c0 AS TEXT) IN ()), COALESCE(DISTINCT (((t0.c0))>((vt1.c0))), t0.c0 COLLATE RTRIM) HAVING (~ (COUNT(t0.c0))); -- 0ms;
SELECT ALL x'8b75' FROM t0; -- 0ms;
SELECT NULL FROM vt1, t0; -- 0ms;
SELECT ALL RANK() OVER ( RANGE BETWEEN ((CAST(t0.c0 AS BLOB))OR(((vt1.c0)LIKE(vt1.c0)))) PRECEDING AND ((((vt1.c0)IS NOT(vt1.c0)))/((((t0.c0))<((t0.c0))))) PRECEDING EXCLUDE TIES), MIN(CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END), ROUND(CAST(vt1.c0 AS TEXT), GROUP_CONCAT(vt1.c0)) FROM t0 GROUP BY 0X6c87e5bc;SELECT ALL CASE WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((((vt1.c0)OR(t0.c0)))OR(t0.c0)) WHEN (((vt1.c0))>((vt1.c0))) THEN -1105113233 END FROM t0 WHERE ((+ (NULL)) COLLATE NOCASE);SELECT (+ ((((t0.c0))<((vt1.c0))))), '587847612', CASE WHEN (~ (vt1.c0)) THEN ((((((((vt1.c0)AND(t0.c0)))AND(NULL)))OR(0.8567669259488857)))AND(t0.c0)) END FROM t0;SELECT ALL (- (((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT LEAD(MIN(vt1.c0 COLLATE NOCASE, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (('-779330665')))), (((((vt1.c0 IN ()))AND(((vt1.c0)|(vt1.c0)))))AND(CAST(vt1.c0 AS REAL))), ((vt1.c0)GLOB(vt1.c0)) COLLATE RTRIM COLLATE NOCASE) OVER ( ORDER BY IFNULL('729680873', (NOT (vt1.c0)))  NULLS LAST), SUM((((t0.c0))<((x'6947')))) OVER (), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))!=(vt1.c0)) FROM vt1 WHERE (((COALESCE(-5.85365012E8, 0.10155871740183564)) BETWEEN (('' IN ())) AND ((((2.30705899E8, NULL, NULL)) BETWEEN ((x'', 0.8103519326715567, '+[')) AND ((']솧KyUxﾆ?', 0.3774845321262057, NULL))))));SELECT ALL '-1842753719', (LIKELY(t0.c0) IN ()), t0.c0 FROM vt1, t0 WHERE ((((((0X4359de3f, NULL, 0Xffffffffab0007e2)) NOT BETWEEN ((NULL, -1974597298, '1734799970')) AND ((NULL, 0.6919062673208495, ''))))<(((((((((0.5325947775350104)OR(-1711047996)))AND(0.01913079099263726)))OR(0.11651716554865743)))AND(0.8033710559224687))))) ORDER BY CASE vt1.c0  WHEN (((t0.c0))=((t0.c0))) THEN t0.c0 COLLATE RTRIM ELSE CAST(t0.c0 AS BLOB) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((('gR)') NOTNULL))OR(t0.c0 COLLATE NOCASE)))OR(((t0.c0)-(vt1.c0)))) FROM t0 ORDER BY ((TYPEOF(t0.c0))OR(((vt1.c0) BETWEEN ('922214764') AND (vt1.c0)))) DESC  NULLS FIRST, CAST(((vt1.c0)&(vt1.c0)) AS INTEGER) ASC  NULLS FIRST;SELECT DISTINCT ((CAST(vt1.c0 AS NUMERIC)) ISNULL) FROM t0, vt1 WHERE (((x'' COLLATE BINARY)IS NOT(NULL COLLATE BINARY))) ORDER BY CAST('' AS INTEGER); -- 0ms;
SELECT UPPER((- (t0.c0))), CAST(vt1.c0 AS REAL), ((((((((LIKELY(-1.36589096E8))AND(CAST(vt1.c0 AS NUMERIC))))OR(((t0.c0)|(t0.c0)))))AND('[]')))AND((('')<=(t0.c0)))) FROM t0, vt1 WHERE (((((x'') IS TRUE))IS(((x'') IS TRUE)))) GROUP BY (((vt1.c0)|(t0.c0)) IN ()), (- (json_valid(x'd1d5'))), (~ (((vt1.c0)<<(vt1.c0)))) ORDER BY ((((((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0))) BETWEEN (((t0.c0)-(t0.c0))) AND (LAST_INSERT_ROWID())) ASC; -- 1ms;
SELECT DISTINCT NULL, CASE (- (0.6007229615082348))  WHEN ((922214764)AND(x'8580')) THEN ((t0.c0) BETWEEN (vt1.c0) AND (0.4255089025621007)) ELSE (~ (t0.c0)) END, vt1.c0 FROM t0, vt1 WHERE (NULL) ORDER BY ((json_array_length(vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 IN ())) AND (vt1.c0)) ASC; -- 0ms;
SELECT ALL UPPER(DISTINCT vt1.c0) FROM vt1, t0 WHERE (LIKELY((((x'7546'))>((NULL))))) LIMIT -353420330; -- 0ms;
SELECT DISTINCT (('D_]6尌A')-((t0.c0 IN ()))), QUOTE(((vt1.c0)<<(t0.c0))), (- ((~ (t0.c0)))) FROM t0;SELECT ALL ((highlight(NULL, vt1.c0, t0.c0, x'54a5')) NOTNULL) FROM vt1 WHERE (((((x'') NOT BETWEEN (0.3382334884695424) AND (1.274017588E9)))AND((~ (0.19154027230081339)))));SELECT CASE LTRIM(vt1.c0)  WHEN ((t0.c0)<(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (0.6994335623675689) AND (vt1.c0)) END, NULLIF(DISTINCT CAST(t0.c0 AS BLOB), (vt1.c0 IN ())), (+ ((vt1.c0 IN (t0.c0)))) FROM t0;SELECT ALL CASE WHEN vt1.c0 THEN (t0.c0 IN ()) ELSE ((((t0.c0)OR(vt1.c0)))AND(t0.c0)) END FROM vt1, t0; -- 0ms;
SELECT DISTINCT CASE (vt1.c0 IN ())  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END FROM t0 ORDER BY CAST((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS REAL)  NULLS FIRST;SELECT DISTINCT (((vt1.c0 IN (vt1.c0, vt1.c0))) BETWEEN (((x'') BETWEEN (t0.c0) AND (vt1.c0))) AND (((vt1.c0)|(t0.c0)))) FROM vt1;SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c0 END)<<(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), ((((((((((((LIKELY(vt1.c0))OR((~ (x'b55608f5')))))AND(0.47359308285054835)))OR(ROUND(vt1.c0, vt1.c0))))OR(((((vt1.c0)AND(t0.c0)))AND(t0.c0)))))AND(CASE t0.c0  WHEN vt1.c0 THEN 0.6975512583798366 ELSE vt1.c0 END)))AND(((((t0.c0)AND(t0.c0)))AND('dwD')))), ((0Xffffffffac49d1da)*(MIN(t0.c0))) FROM t0, vt1 GROUP BY (~ (((t0.c0)+(0.5898747885591128)))) HAVING (NOT (COUNT(*))); -- 1ms;
SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (COUNT(t0.c0)) AND ((+ (vt1.c0)))) FROM t0, vt1 WHERE ((('') NOT BETWEEN (('0.3476015521150919' IN ())) AND ((('1721830723')>>('-715884293'))))); -- 0ms;
SELECT ALL -1.70653694E8 FROM vt1 WHERE (((((x'') ISNULL)) IS FALSE)) ORDER BY (((~ (t0.c0)))>((t0.c0 IN ()))) DESC  NULLS LAST;SELECT DISTINCT (NOT (CAST(t0.c0 AS TEXT))) FROM t0 WHERE (STRFTIME('~Y1喖5Y', 1.066810048E9, CASE WHEN '1594149625' THEN ',優' ELSE NULL END, (1.934803345E9 IN ()), (((x'a026123f')) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
SELECT DISTINCT LEAD(((((t0.c0)GLOB(t0.c0))) ISNULL), ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR((t0.c0 IN ()))))OR((t0.c0 IN ()))), CAST(UNLIKELY(DISTINCT t0.c0) AS NUMERIC)) OVER ( GROUPS BETWEEN  CURRENT ROW AND ((x'' COLLATE NOCASE) BETWEEN (vt1.c0) AND (CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END)) PRECEDING), LAST_VALUE(CASE WHEN (t0.c0 IN ()) THEN CAST(t0.c0 AS BLOB) END) OVER (), (((((vt1.c0))<=((vt1.c0)))) NOT BETWEEN ((vt1.c0 IN (t0.c0))) AND (COUNT(*))) FROM t0 WHERE ((NOT (CAST(x'' AS NUMERIC))));SELECT (((((509434198) BETWEEN ('729680873') AND (vt1.c0))))=((vt1.c0 COLLATE RTRIM))), GROUP_CONCAT(((((t0.c0)AND(vt1.c0)))OR(vt1.c0))) OVER ( PARTITION BY CAST(((t0.c0)%(vt1.c0)) AS NUMERIC), ((((((vt1.c0)GLOB(t0.c0)))OR(CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END)))AND((+ (vt1.c0)))) ORDER BY (~ (NULL)) ASC), (((t0.c0)<>(t0.c0)) IN ()) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((NULL)/('宗卦푺z'))) NOT BETWEEN (COUNT(*)) AND (((t0.c0)AND(t0.c0)))) FROM t0, vt1 GROUP BY vt1.c0; -- 0ms;
SELECT (((vt1.c0)) BETWEEN (((t0.c0 IN ()))) AND (((~ (vt1.c0))))) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT AVG(t0.c0 COLLATE NOCASE COLLATE NOCASE) FILTER(WHERE (((vt1.c0)) NOT BETWEEN ((((t0.c0)*(vt1.c0)))) AND ((CAST(t0.c0 AS TEXT))))) OVER ( RANGE BETWEEN (- (-1302901789)) PRECEDING AND CAST(((0.5266584141329471)-(t0.c0)) AS TEXT) PRECEDING EXCLUDE CURRENT ROW) FROM t0 WHERE (((((x'')AND(((x'e8aa')AND(-826551752)))))OR(CAST('껼\r' AS BLOB)))) ORDER BY (((t0.c0)LIKE(vt1.c0)) IN ())  NULLS LAST;SELECT DISTINCT ((((t0.c0) ISNULL))<<((((vt1.c0))<((t0.c0))))) FROM vt1 GROUP BY ((json_valid(NULL)) IS FALSE);SELECT ALL (((((((((- (vt1.c0)))OR(((((vt1.c0)AND(0Xffffffffc2cb3ed2)))OR(t0.c0)))))AND(((((((((vt1.c0)OR(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))AND((~ (vt1.c0)))))AND(LOWER(vt1.c0))) FROM t0;SELECT DISTINCT ((((t0.c0)*(vt1.c0)))!=(t0.c0)) FROM t0, vt1 WHERE ((- (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY x'76d954a0'  NULLS FIRST) FROM vt1 WHERE ((- (((x'')==(NULL))))) GROUP BY (t0.c0 COLLATE RTRIM IN (NULL)) HAVING ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (0.33878239167134827) AND (x''));SELECT DISTINCT CAST(((t0.c0)%(t0.c0)) AS REAL), vt1.c0, ((t0.c0 COLLATE BINARY) NOTNULL) FROM t0 LIMIT -375404222 OFFSET -415857343;SELECT ALL SUM(CAST(t0.c0 AS NUMERIC)) FROM vt1, t0; -- 0ms;
SELECT 0x20aaea28 FROM t0 WHERE (CAST(CASE WHEN NULL THEN 'diM6￿W[A*' ELSE 588708726 END AS INTEGER)); -- 0ms;
SELECT DISTINCT (~ (((t0.c0)<>(x'')))), (CASE t0.c0  WHEN x'ec2c' THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN 0.8796898226440628 THEN t0.c0 ELSE vt1.c0 END IN (((((((((t0.c0)OR(vt1.c0)))OR(t0.c0)))AND(0.2666465507966773)))AND(vt1.c0)))), CAST(((t0.c0)*(t0.c0)) AS REAL) FROM t0 WHERE ((((0.30723394645491475 IN ()))||(CAST(x'bb99' AS BLOB))));SELECT CASE IFNULL(vt1.c0, vt1.c0)  WHEN ((t0.c0)GLOB(vt1.c0)) THEN (- (t0.c0)) ELSE ((t0.c0)%(vt1.c0)) END FROM t0 GROUP BY ((((((((ABS(vt1.c0))AND(((x'') NOT BETWEEN (vt1.c0) AND (t0.c0)))))OR((((t0.c0))>((t0.c0))))))AND(((((0.6094892485044883)AND(t0.c0)))AND(t0.c0)))))AND(vt1.c0 COLLATE NOCASE));SELECT DISTINCT (t0.c0 COLLATE NOCASE IN ()) FROM vt1, t0 WHERE (CAST(((NULL) BETWEEN ('iZQD') AND (NULL)) AS INTEGER)); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0; -- 1ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)-((vt1.c0 IN ()))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM, (GROUP_CONCAT(t0.c0) IN (MIN(vt1.c0), ((vt1.c0) BETWEEN (t0.c0) AND ('PM?]^#')))), COUNT(*), x'', (- (CASE WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END)) FROM t0, vt1 WHERE (CAST(((((NULL)OR(NULL)))OR('')) AS REAL)); -- 0ms;
SELECT DISTINCT (NOT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((5.09434198E8))))), t0.c0, GROUP_CONCAT((+ (vt1.c0))) FILTER(WHERE NULL COLLATE BINARY) OVER () FROM vt1;SELECT DISTINCT (~ (LIKELY(t0.c0))), LAST_INSERT_ROWID(), CASE IFNULL(t0.c0, vt1.c0)  WHEN ((t0.c0)<=(vt1.c0)) THEN 0.04455463196013176 ELSE (t0.c0 IN ()) END, ((('')AND(t0.c0)) IN ()), COUNT(*) FROM vt1, t0 WHERE (CAST(((x'9142')<(NULL)) AS NUMERIC)); -- 0ms;
SELECT vt1.c0 COLLATE NOCASE FROM t0, vt1 WHERE (CAST(((NULL) BETWEEN ('-2020645225') AND (NULL)) AS INTEGER)); -- 0ms;
SELECT NULLIF(DISTINCT ((vt1.c0)IS(t0.c0)), MIN(vt1.c0)) FROM t0, vt1 WHERE ('	b') ORDER BY CAST(t0.c0 COLLATE BINARY AS INTEGER) ASC, CAST(t0.c0 AS TEXT) COLLATE NOCASE ASC; -- 0ms;
SELECT ALL (((vt1.c0 IN (vt1.c0))) IS TRUE) FROM vt1, t0 ORDER BY (x'' IN ()) ASC  NULLS LAST LIMIT -1465157490; -- 0ms;
SELECT (((- (t0.c0)))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)), CASE WHEN vt1.c0 COLLATE RTRIM THEN STRFTIME(vt1.c0, vt1.c0, t0.c0) END, (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) FROM vt1, t0 WHERE (((CAST(x'' AS NUMERIC)) ISNULL)) ORDER BY (((((- (vt1.c0)))OR(t0.c0 COLLATE NOCASE)))OR(NULLIF(vt1.c0, t0.c0))), CASE WHEN IFNULL(t0.c0, vt1.c0) THEN t0.c0 WHEN (t0.c0 IN ()) THEN (- (vt1.c0)) WHEN (NOT (NULL)) THEN (NOT (t0.c0)) END DESC  NULLS LAST, ((((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))==(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))) LIMIT -1329796534 OFFSET 815444984; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 COLLATE BINARY THEN json_type(vt1.c0) WHEN (+ (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) WHEN (+ (vt1.c0)) THEN LIKELY(DISTINCT vt1.c0) END, TOTAL(((((t0.c0)OR(vt1.c0)))OR(t0.c0))) OVER (), NULL FROM t0 WHERE (((TRIM(DISTINCT 0Xd2efbc, 0.30976306732325265))OR(CAST('	' AS NUMERIC)))) LIMIT 199317178 OFFSET -184192954;SELECT DISTINCT CAST(((vt1.c0) IS TRUE) AS INTEGER) FROM t0, vt1 WHERE ((((~ (0.29663505098172294)))<<(0Xffffffffde2b41f3 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT t0.c0, CAST((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) AS REAL), ((((((((vt1.c0 COLLATE RTRIM)OR(vt1.c0)))OR(((-2039262352) NOT NULL))))AND(vt1.c0)))AND(((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))), (- (((((vt1.c0)OR(t0.c0)))OR(t0.c0)))), (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()) FROM vt1, t0 WHERE ((~ (0.6129134241591744))); -- 0ms;
SELECT ((((((((((((((t0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))AND((x'' IN (x'')))))OR(NULLIF(DISTINCT vt1.c0, vt1.c0))))AND(((vt1.c0)LIKE(vt1.c0)))))AND(((t0.c0)<=(t0.c0)))))OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))))OR((- (t0.c0)))) FROM t0 WHERE (0X64a91568);SELECT DISTINCT MIN(CAST(vt1.c0 AS INTEGER)) FROM t0 WHERE (NULLIF(DISTINCT SQLITE_VERSION(), 0Xffffffffe14b772c)) LIMIT 2102557906 OFFSET 1039777699 UNION ALL SELECT DISTINCT SUM(t0.c0) OVER () FROM vt1 WHERE (((ABS(DISTINCT 0.526839385785295))OR(CASE WHEN x'' THEN '' ELSE x'' END)));SELECT DISTINCT LIKELY(DISTINCT ((((t0.c0)OR(vt1.c0)))AND(vt1.c0))) FROM vt1 LIMIT 168430598;SELECT AVG(((vt1.c0) IS TRUE)) FROM t0 WHERE (CAST(((NULL) NOT BETWEEN (x'') AND (x'')) AS TEXT));SELECT DISTINCT ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((vt1.c0 IN (vt1.c0, t0.c0))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0, vt1; -- 0ms;
SELECT DISTINCT NTILE(((((((t0.c0)OR(t0.c0)))AND(vt1.c0))) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (vt1.c0))) OVER () FROM t0, vt1 WHERE ((~ (((NULL) BETWEEN ('1820845500') AND (''))))); -- 0ms;
SELECT DISTINCT (((vt1.c0 COLLATE NOCASE, t0.c0 COLLATE BINARY, '' COLLATE NOCASE))<=((((t0.c0)<<(NULL)), t0.c0, (~ (vt1.c0))))) FROM t0;SELECT (((((t0.c0 IN (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))AND('-2100336997')) FROM t0, vt1 WHERE (0X3df9bfa3) LIMIT 1971474730; -- 1ms;
SELECT DISTINCT (0.749787821689713 IN ()), (NOT (((0Xffffffffb1bcc8e7)OR(vt1.c0)))), GROUP_CONCAT(((t0.c0)>=(t0.c0))), ((COUNT(*)) BETWEEN ((t0.c0 IN (t0.c0))) AND (((((t0.c0)OR(vt1.c0)))OR(-1750024963)))), CASE WHEN (- (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0)AND(t0.c0)) THEN ((vt1.c0) IS TRUE) WHEN (vt1.c0 IN ()) THEN ((0Xffffffff9dfe5556) NOT BETWEEN (vt1.c0) AND (t0.c0)) ELSE ((t0.c0) NOT NULL) END FROM vt1, t0 WHERE ((+ (((((NULL)AND(0.513377426730295)))AND('1225671057'))))); -- 0ms;
SELECT ALL AVG(CAST(vt1.c0 AS INTEGER)), ((((t0.c0) NOT NULL))*(LENGTH(vt1.c0))), CASE WHEN ((5.49500825E8) ISNULL) THEN ((NULL) NOT BETWEEN (t0.c0) AND (x'5f9f')) END FROM vt1, t0; -- 0ms;
SELECT (- (NULLIF('-149389509', t0.c0))) FROM vt1, t0; -- 0ms;
SELECT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ()) FROM vt1, t0 WHERE (1853582100); -- 0ms;
SELECT ALL (NOT (t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) ISNULL)) IS FALSE) FROM t0;SELECT ALL LTRIM((~ (' +')), (('331716320')IS NOT(vt1.c0))), COUNT(((t0.c0)<<(vt1.c0))) OVER (), CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER), SUM(((t0.c0)GLOB(t0.c0))) OVER (), ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((t0.c0 IN (t0.c0, t0.c0)))) FROM vt1;SELECT DISTINCT ((SUM(vt1.c0)) BETWEEN (((t0.c0)<(t0.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(t0.c0)))) FROM t0;SELECT DISTINCT ((MAX(NULL))IS(NULL)), (((AVG(t0.c0)))>((ROUND(t0.c0, t0.c0)))), ((t0.c0)==((('')/('E')))) FROM vt1 WHERE (CAST((('-380899450') NOTNULL) AS BLOB)) LIMIT -1296939113 OFFSET 955977492;SELECT ALL ((vt1.c0 COLLATE BINARY) NOT BETWEEN (ABS(DISTINCT vt1.c0)) AND (((t0.c0)!=(vt1.c0)))) FROM vt1 ORDER BY ((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(CAST(t0.c0 AS BLOB))))AND(((t0.c0)-(t0.c0)))))OR((t0.c0 IN ()))))OR((((('-1341040460')AND('')))AND(t0.c0)))) ASC  NULLS LAST;SELECT ALL GROUP_CONCAT((((x'69c1', 502819907, vt1.c0)) NOT BETWEEN (('꟩', t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, x'')))) OVER (), (((((+ (t0.c0)))OR(NULL)))AND(CAST(t0.c0 AS INTEGER))), ((((((((((t0.c0) ISNULL))OR((vt1.c0 IN (-451689635)))))AND(((((x'c175')OR(vt1.c0)))AND(t0.c0)))))OR(vt1.c0 COLLATE NOCASE)))OR((((t0.c0))>=((0.323071653004005))))) FROM t0 LIMIT -560092846 OFFSET -1479179595;SELECT (((t0.c0 IN ()))<<(((t0.c0)==(vt1.c0)))) FROM vt1, t0 WHERE ((~ (CAST(0.7257220131951311 AS INTEGER)))); -- 0ms;
SELECT ALL x'' FROM t0 GROUP BY CASE (((t0.c0, vt1.c0, t0.c0))==((0X6003bcee, vt1.c0, t0.c0)))  WHEN ((0.74663593305662) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END;SELECT DISTINCT NULL FROM vt1 WHERE (((((((x'', NULL, x'9b0b'))>(('585345305', 0.18911157965420067, 0.9530071960246107)))))<=(((('-567590413')>>(0.9991070098062745)))))); -- 0ms;
SELECT ALL ((NULL IN (t0.c0)) IN ()), ((((((((((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))OR(((vt1.c0) NOT NULL))))AND(((t0.c0)*(vt1.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(NULL)))), ((((t0.c0)<(t0.c0))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (0X6003bcee)) FROM t0;SELECT DISTINCT NULL, CAST((NOT (t0.c0)) AS BLOB), ((LIKELIHOOD(t0.c0, 0.5913415581858261))<(vt1.c0)) FROM vt1, t0; -- 0ms;
SELECT UNLIKELY(DISTINCT NULL) FROM vt1, t0; -- 0ms;
SELECT DISTINCT TYPEOF(t0.c0) COLLATE NOCASE COLLATE BINARY FROM vt1, t0 WHERE (1.826461064E9) LIMIT -1667722717; -- 0ms;
SELECT ((vt1.c0)IS NOT(t0.c0)) COLLATE RTRIM FROM t0, vt1 WHERE ((~ ((('826358284') BETWEEN (x'') AND (NULL))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) ISNULL) DESC LIMIT -430800874 OFFSET 1168298700; -- 0ms;
SELECT DISTINCT (CASE vt1.c0  WHEN vt1.c0 THEN 1.038266108E9 END IN ()) FROM t0; -- 0ms;
SELECT COUNT(*) OVER ( PARTITION BY ((((((vt1.c0))!=((t0.c0)))))<=((((t0.c0) NOT NULL)))), ((((((((((NULL)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))|(t0.c0 COLLATE BINARY)), (t0.c0 IN ()), (+ (vt1.c0 COLLATE NOCASE)) ORDER BY vt1.c0, CAST(vt1.c0 AS REAL) DESC), CAST(((t0.c0)/(t0.c0)) AS REAL), t0.c0, PERCENT_RANK() OVER (), CAST(MAX(vt1.c0) AS BLOB) FROM vt1, t0 WHERE (((CAST(x'' AS BLOB))>>(TRIM(DISTINCT x'')))); -- 0ms;
SELECT ALL (~ (((vt1.c0)/(vt1.c0)))), CASE 0.21282700617700345  WHEN LTRIM(t0.c0, t0.c0) THEN (vt1.c0 IN (vt1.c0, t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0) IS TRUE) THEN CAST(vt1.c0 AS REAL) END, NULL COLLATE RTRIM FROM t0 WHERE ((CAST(2038135739 AS NUMERIC) IN ())) GROUP BY ((((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))>>(t0.c0 COLLATE BINARY));SELECT ALL ((((t0.c0))>((t0.c0))) IN (((t0.c0) IS FALSE))), ((((CAST(t0.c0 AS BLOB))OR(((vt1.c0)>(vt1.c0)))))OR(((('z\nZ394709901748267824-353-873589941600808050 -6674793537965158026:p\N{O')) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))), ((((((x'') BETWEEN (vt1.c0) AND (t0.c0)))OR(((t0.c0)<=(vt1.c0)))))AND(CAST(t0.c0 AS REAL))) FROM t0, vt1 WHERE (CASE WHEN (('s')<=('1430435729')) THEN x'' END); -- 0ms;
SELECT ALL NULL, ((x'')IS NOT(CAST(vt1.c0 AS INTEGER))), COUNT(*) FROM t0;SELECT DISTINCT ((((NULL) ISNULL)) NOTNULL) FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0 COLLATE RTRIM)AND(LTRIM(vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 END)) FROM t0 WHERE (json(-1.344605279E9 COLLATE NOCASE));SELECT ALL ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c0) IS TRUE)) AND (vt1.c0 COLLATE BINARY)), SUM(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) OVER (), vt1.c0, ABS(DISTINCT TOTAL(1.580074142E9)), (((vt1.c0 IN (t0.c0)))>>((((t0.c0))>=((t0.c0))))) FROM t0 WHERE (CAST(CAST('ᘑ(3' AS NUMERIC) AS REAL));SELECT (+ ((t0.c0 IN ()))), ((((t0.c0)%(t0.c0))) BETWEEN (((vt1.c0)IS(t0.c0))) AND (vt1.c0)), TOTAL(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) OVER () FROM vt1;SELECT ((MIN(t0.c0))<<(vt1.c0 COLLATE BINARY)) FROM t0, vt1 LIMIT -445180105; -- 0ms;
SELECT (((vt1.c0 IN ())) NOT BETWEEN (0.5578477372832429) AND (MIN(vt1.c0))), AVG('1421105595'), ((CASE WHEN NULL THEN t0.c0 END)GLOB((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((x'', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, '-1842753719'))))) FROM t0, vt1 LIMIT 1617129989 OFFSET -211036925; -- 0ms;
SELECT ALL ((((vt1.c0)>(t0.c0)))IS(((((((((0.9501381193761342)OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))) FROM vt1;SELECT (((((t0.c0)||(vt1.c0)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)), CAST(vt1.c0 AS TEXT)))<((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB)))) FROM vt1, t0 WHERE (load_extension((NULL IN ()), ((('-437057277', NULL, 1712761092)) BETWEEN (('1383027498', '290939968', x'b5fd')) AND ((0.9127410838375809, '&r', 0.6977765678772946)))));SELECT ((vt1.c0 COLLATE NOCASE)!=((t0.c0 IN (0.9007939753555263)))) FROM vt1 WHERE ((((((x'')OR(NULL)))OR(x'')) IN ()));SELECT DISTINCT ((((vt1.c0)/(t0.c0))) BETWEEN (t0.c0 COLLATE RTRIM) AND (0x0 COLLATE BINARY)), ((((((x'')OR(vt1.c0)))OR(t0.c0))) NOTNULL), (((((t0.c0, vt1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c0)))) IS TRUE), (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((('-0.0')IS NOT(vt1.c0))))), json_remove(t0.c0 COLLATE BINARY, NULLIF(t0.c0, vt1.c0)) FROM vt1, t0 LIMIT 1915046690; -- 0ms;
SELECT COUNT(*) COLLATE NOCASE COLLATE RTRIM, (((((((((NULL IN (t0.c0)))AND((((t0.c0))==((t0.c0))))))OR((t0.c0 IN ()))))AND(t0.c0 COLLATE RTRIM)))AND(TRIM(vt1.c0))), ((MIN(t0.c0))LIKE(CAST(t0.c0 AS REAL))) FROM vt1, t0 WHERE (((('-1986642327')) BETWEEN ((NULL COLLATE NOCASE)) AND ((((x'3556') BETWEEN ('-1445161426') AND ('')))))); -- 0ms;
SELECT DISTINCT ((vt1.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM, CASE WHEN t0.c0 THEN vt1.c0 END COLLATE RTRIM, ((NULLIF(NULL, t0.c0)) NOTNULL) FROM t0 WHERE ('0.38764053552572453');SELECT DISTINCT (~ (AVG(t0.c0))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (NOT (TYPEOF(DISTINCT t0.c0))) FROM t0 WHERE ((((NULL IN (NULL))) NOT BETWEEN (((NULL) NOT BETWEEN (x'') AND (0.7826781860822569))) AND (x'' COLLATE BINARY))) ORDER BY CASE -1005003819  WHEN vt1.c0 COLLATE BINARY THEN ((588180186)AND(vt1.c0)) WHEN '0.38764053552572453' THEN (vt1.c0 IN ()) WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((t0.c0) ISNULL) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0) NOT BETWEEN (t0.c0) AND (NULL)) THEN (((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))) ELSE ((((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)) END ASC  NULLS FIRST, ((((t0.c0)AND(t0.c0))) ISNULL) ASC  NULLS FIRST;SELECT ALL 0.0580149229249991, CASE UPPER(DISTINCT vt1.c0)  WHEN (- (t0.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END END, (((((~ (vt1.c0)))AND(MIN(vt1.c0))))AND((t0.c0 IN ()))) FROM vt1, t0; -- 0ms;
SELECT (((CASE NULL  WHEN x'01fb' THEN t0.c0 WHEN '1640188085' THEN 0.9900687234090598 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt1;SELECT ALL TOTAL(t0.c0) OVER () FROM vt1;SELECT ((vt1.c0)-(t0.c0)) COLLATE RTRIM FROM t0, vt1 WHERE (((NULL) NOT BETWEEN ('-321446272') AND ('0.37117596633383265')) COLLATE RTRIM) ORDER BY ((UNLIKELY(vt1.c0)) BETWEEN ((((t0.c0, t0.c0, t0.c0))<>((t0.c0, vt1.c0, t0.c0)))) AND (((t0.c0) NOT NULL)))  NULLS FIRST, vt1.c0 DESC  NULLS FIRST; -- 0ms;
SELECT ((QUOTE(vt1.c0))LIKE('yn')), HEX((t0.c0 IN ())), CAST((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((t0.c0, vt1.c0, t0.c0))) AS NUMERIC) FROM t0 WHERE (((((('.n sn53')) BETWEEN (('1457183719')) AND ((NULL))))<<(((((0.8241079729506355)AND(NULL)))AND(x'')))));SELECT DISTINCT (((((t0.c0))>((t0.c0)))) NOTNULL) FROM t0 ORDER BY CAST(((vt1.c0)<=(t0.c0)) AS BLOB) ASC  NULLS LAST LIMIT -982044502 OFFSET 1431582836;SELECT DISTINCT highlight(((t0.c0) IS TRUE), CAST(t0.c0 AS INTEGER), vt1.c0, (- (t0.c0))), NULL, SUM(CAST(t0.c0 AS REAL)) FROM t0;SELECT DISTINCT ((MIN(vt1.c0)) NOTNULL) FROM vt1 WHERE (((CAST(NULL AS INTEGER))>(LENGTH(0.2862412589029545)))) LIMIT 525216168 OFFSET 2132539038; -- 0ms;
SELECT ALL ((NULLIF(t0.c0, t0.c0))IS(LTRIM(NULL, -515147988))) FROM vt1, t0 WHERE ((((('-655968642') NOT BETWEEN (0.9960789408754788) AND (x'')))+(CASE x''  WHEN NULL THEN x'' END))); -- 0ms;
SELECT DISTINCT CAST((vt1.c0 IN ()) AS BLOB), INSTR(CAST(0.38272241679083707 AS BLOB), ((vt1.c0) NOTNULL)), (((CAST(vt1.c0 AS TEXT)))>((((t0.c0)<<(vt1.c0))))) FROM vt1, t0 ORDER BY CASE ((((vt1.c0)AND(vt1.c0)))AND(t0.c0))  WHEN CASE WHEN t0.c0 THEN vt1.c0 END THEN (NOT (vt1.c0)) WHEN (((vt1.c0, '', t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND (('566298309', vt1.c0, vt1.c0))) THEN (((t0.c0))>=((vt1.c0))) WHEN CAST(vt1.c0 AS INTEGER) THEN 0.08186114153241641 ELSE (NOT (vt1.c0)) END DESC, (~ (CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN '6GHvgLzd*' THEN t0.c0 ELSE t0.c0 END)); -- 1ms;
SELECT t0.c0 FROM t0, vt1 GROUP BY ((((t0.c0)OR(CAST(t0.c0 AS INTEGER))))OR(((t0.c0) NOTNULL))), CHANGES(), vt1.c0 HAVING LIKE(((t0.c0)>=(t0.c0)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(UPPER(DISTINCT 828483118)) OVER (), ((((vt1.c0)<<(vt1.c0))) NOT BETWEEN (ABS(DISTINCT x'')) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (('-550418256') BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))) FROM t0, vt1 GROUP BY CAST(x'' AS NUMERIC) HAVING t0.c0; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOT BETWEEN (x'' COLLATE NOCASE) AND (ABS(t0.c0))) FROM t0, vt1 WHERE (CAST((('g\rr~') IS TRUE) AS BLOB)); -- 0ms;
SELECT COALESCE((t0.c0 IN (vt1.c0, 0.4831526065561834)), CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END) FROM t0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((((+ (t0.c0)))AND(CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)), (((t0.c0)) NOT BETWEEN ((((t0.c0) NOT NULL))) AND (('587777865'))), TRIM(DISTINCT ('숒&PO逃5婔ｒE' IN ()), CASE vt1.c0  WHEN t0.c0 THEN x'' END) FROM t0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)<<(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT json_patch(vt1.c0, (vt1.c0 IN ())) FROM t0 WHERE ((((1168298700)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND (((- (x''))))));SELECT DISTINCT ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 END)AND(MIN(t0.c0))) FROM t0, vt1; -- 0ms;
SELECT ((((CAST(vt1.c0 AS REAL))AND(CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-277421159' ELSE t0.c0 END)))OR(COUNT(vt1.c0))), (NULL IN ()), COUNT(*) FROM vt1;SELECT ALL TOTAL(('nR7' IN (NULL))) OVER ( PARTITION BY (((t0.c0)) NOT BETWEEN ((LIKELIHOOD(t0.c0, 0.2903967121988119))) AND ((((t0.c0)<<(t0.c0))))), CASE WHEN ((t0.c0)IS NOT(vt1.c0)) THEN ((t0.c0)*(vt1.c0)) ELSE (- (t0.c0)) END), ((AVG(vt1.c0))||(TRIM(vt1.c0))), CASE (t0.c0 IN (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) END FROM vt1, t0; -- 0ms;
SELECT COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))|(CASE WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1;SELECT DISTINCT ((((((x'')OR(vt1.c0)))OR(t0.c0)))LIKE(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)) FROM vt1 WHERE (((((x'')OR(NULL))) BETWEEN (NULL COLLATE RTRIM) AND (((x'')>>(0x4beff734))))) GROUP BY ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY;SELECT DISTINCT (((- (t0.c0))) BETWEEN (CASE WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 ELSE NULL END) AND (t0.c0)) FROM vt1;SELECT ((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((t0.c0)IS NOT(NULL))) AND (t0.c0 COLLATE NOCASE)) FROM vt1 NOT INDEXED GROUP BY (((((vt1.c0)<(vt1.c0))))=(((('-0.0') BETWEEN (t0.c0) AND (t0.c0))))), ((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)))IS NOT(((vt1.c0) IS TRUE))), (((t0.c0)>>(vt1.c0)) IN ()), ((((((vt1.c0)OR(vt1.c0)))OR(t0.c0))) NOTNULL), (((+ (vt1.c0))) NOT BETWEEN (-7.79330665E8) AND (((((vt1.c0)AND(t0.c0)))OR(vt1.c0))));SELECT DISTINCT CAST(CAST(t0.c0 AS INTEGER) AS BLOB) FROM vt1, t0 GROUP BY (- (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
SELECT ALL ((((vt1.c0)GLOB(vt1.c0)))IS NOT(LIKELIHOOD(DISTINCT vt1.c0, 0.9697338398875669))) FROM vt1, t0 WHERE (CAST((((('w%+(M')AND(0X2d7f4538)))OR(NULL)) AS INTEGER)); -- 0ms;
SELECT CASE WHEN ((vt1.c0)>=(t0.c0)) THEN NULL WHEN ABS(DISTINCT vt1.c0) THEN CAST(t0.c0 AS INTEGER) WHEN ((x'')>(t0.c0)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END, CASE AVG(vt1.c0)  WHEN CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END THEN ((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)) ELSE ((t0.c0) IS TRUE) END, (- (((vt1.c0)<(t0.c0)))) FROM t0, vt1 ORDER BY (((((vt1.c0))=((t0.c0)))) ISNULL) DESC  NULLS LAST, ((((((0.032975045602815944)OR(-3.50405424E8)))AND(t0.c0)))%(((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) ASC, vt1.c0; -- 1ms;
SELECT ((((t0.c0) IS FALSE)) NOT BETWEEN (((vt1.c0)%(t0.c0))) AND (MAX(vt1.c0))) FROM t0;SELECT ALL vt1.c0 FROM vt1, t0 WHERE (((0.007873751535589002) NOT BETWEEN ((('0.6443515147626735') NOTNULL)) AND ((- (0.0243491290151312))))); -- 0ms;
SELECT DISTINCT MIN(((((t0.c0)AND(vt1.c0)))OR(1772022632))) FROM vt1 WHERE (LTRIM((~ (NULL)), '-1263745931'));SELECT ALL CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB) FROM t0, vt1 ORDER BY (((vt1.c0)) BETWEEN (((('-2100336997') NOT BETWEEN (vt1.c0) AND (t0.c0)))) AND ((t0.c0 COLLATE NOCASE))); -- 0ms;
SELECT ALL (((CAST(vt1.c0 AS REAL)))>(((t0.c0 IN ())))) FROM vt1 WHERE ((x'' IN ()) COLLATE RTRIM); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt1, t0 WHERE (((('', CAST(NULL AS TEXT), ((x'')GLOB(NULL))))<=(((~ ('0B')), CASE 'aF\ry'  WHEN x'' THEN '-1460411264' WHEN '' THEN NULL WHEN '2137686276' THEN '0.9002460607977975' WHEN NULL THEN NULL WHEN 0.7526573039374566 THEN 'bKCHd2pe' ELSE NULL END, ((0.6363234935474426) NOT BETWEEN (x'') AND (x'')))))); -- 0ms;
SELECT ALL ((((vt1.c0)&(vt1.c0)))LIKE(((((t0.c0)AND(vt1.c0)))AND(t0.c0)))) FROM t0, vt1 GROUP BY ((x'')IS NOT((+ ('1439391583')))); -- 0ms;
SELECT DISTINCT ((((t0.c0)GLOB(t0.c0)))/(x'')) FROM t0, vt1; -- 0ms;
SELECT ALL (- ((NOT (vt1.c0)))), ((CAST(vt1.c0 AS TEXT)) BETWEEN (x'') AND (((t0.c0)|(t0.c0)))), IFNULL(t0.c0, MAX(t0.c0)) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((((t0.c0)AND(t0.c0)))OR(vt1.c0))) NOTNULL) FROM vt1;SELECT ALL (((0Xffffffff89963e69)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((0.5248914403221627 IN ())))) FROM vt1, t0 WHERE (((((((((CASE WHEN '0.5746522129041414' THEN '-443706043' ELSE '143912349' END)AND(LIKELIHOOD(DISTINCT 0.9914431415708382, 0.30038185901615766))))OR(CAST(NULL AS TEXT))))OR(LTRIM(x''))))AND(IFNULL(DISTINCT 'm,/', NULL)))); -- 0ms;
SELECT ((((((NULL)OR(vt1.c0)))AND(vt1.c0)))<>(vt1.c0)) FROM vt1; -- 0ms;
SELECT DISTINCT NTH_VALUE((+ ((- (t0.c0)))), CAST(((t0.c0) NOT NULL) AS BLOB)) OVER () FROM t0 WHERE (((('-119226585') ISNULL) IN ())); -- 0ms;
SELECT DISTINCT MAX(((t0.c0)IS(vt1.c0))) FROM vt1 WHERE (CASE ((x'2d24') NOT BETWEEN ('-1482334918') AND ('O-'))  WHEN (~ (NULL)) THEN CASE WHEN 0.9528514250053896 THEN -7.79330665E8 ELSE '-1181736259' END WHEN (~ (x'')) THEN NULL WHEN (((NULL))<>((0.2806357739527988))) THEN LIKELY(DISTINCT 0x5b8e6efa) END);SELECT ((t0.c0)*(((t0.c0)|(vt1.c0)))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((x'761a')IS NOT(t0.c0)))>=((vt1.c0 IN ()))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT CAST(t0.c0 COLLATE RTRIM AS TEXT), TRIM(((t0.c0)<<(vt1.c0))), ((((((((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR('N6')))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))OR(((t0.c0)||(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((t0.c0)*(vt1.c0)))) FROM t0, vt1 WHERE (((((x''))<=((549500825))) IN (((('p0qU''+3_'))>=((x'')))))); -- 0ms;
SELECT t0.c0 FROM vt1 WHERE (((((x'') BETWEEN ('Sn') AND (0.8490582876433732))) NOTNULL));SELECT CASE WHEN 1772022632 THEN highlight(vt1.c0, t0.c0, vt1.c0, vt1.c0) END FROM t0, vt1 WHERE (CASE ((NULL)||(0x3f963ac0))  WHEN CAST('' AS BLOB) THEN ((NULL) NOT BETWEEN (NULL) AND (-1.019494595E9)) WHEN CAST(NULL AS TEXT) THEN ((x'0bca') BETWEEN ('0.30299552237972893') AND (NULL)) WHEN ((((((((0.07271807571662281)AND(NULL)))OR(NULL)))OR(-1071977823)))AND('-1639501447')) THEN (('') NOT BETWEEN (NULL) AND (0.47359308285054835)) END) ORDER BY x''; -- 0ms;
SELECT ((((vt1.c0) IS FALSE))IS(((vt1.c0)>(t0.c0)))), (((((t0.c0))=((0.3640745022673716))))%(t0.c0 COLLATE BINARY)), (('1610857710')LIKE('-1869593797')) FROM t0;SELECT ((((vt1.c0) ISNULL)) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (((vt1.c0)>>(vt1.c0)))) FROM t0 WHERE (((('0.6294916125417263') BETWEEN (0xfffffffff4a0267a) AND (x'')) IN (((x'')%(NULL)), ((x'') BETWEEN (NULL) AND (0Xffffffffe3a34a7d)))));SELECT DISTINCT x'' FROM vt1, t0 WHERE (((x'')IS((((x'16ca'))<=((0.5775333428967138)))))); -- 0ms;
SELECT ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE FROM vt1, t0; -- 0ms;
SELECT ALL TOTAL(NULL) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE GROUP) FROM vt1, t0 LIMIT -1338160636 OFFSET -466529991; -- 0ms;
SELECT GROUP_CONCAT((t0.c0 IN (vt1.c0))) FROM vt1;SELECT ALL COUNT(((1746424308)>=(t0.c0))) OVER ( ORDER BY MAX(vt1.c0 COLLATE NOCASE, (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t0.c0, vt1.c0, t0.c0)))) ASC  NULLS LAST) FROM t0 WHERE (COALESCE((((0.5005212725730152)) NOT BETWEEN ((NULL)) AND ((x''))), (- (0.2968470410373718)))) GROUP BY TYPEOF((((t0.c0))<=((t0.c0)))) HAVING (NOT (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));SELECT DISTINCT (- (vt1.c0)) COLLATE BINARY FROM t0, vt1 WHERE ((((NULL)-('-2138882697')) IN ())); -- 0ms;
SELECT CAST(0.30299552237972893 AS REAL) FROM t0, vt1 WHERE (((x'' COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT DISTINCT (((NULL)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((GROUP_CONCAT(vt1.c0)))), COUNT(*), ((((~ (vt1.c0)), vt1.c0 COLLATE NOCASE, (vt1.c0 IN ()), CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END, vt1.c0))<=((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((((vt1.c0)OR(NULL)))AND(t0.c0)), ((t0.c0)>=(t0.c0)), CAST(vt1.c0 AS BLOB)))) FROM vt1 WHERE ((CAST('>T' AS REAL) IN (CAST('' AS REAL))));SELECT DISTINCT COUNT((0.4882192002755942 IN ())) COLLATE RTRIM, ABS(DISTINCT (t0.c0 IN ())), COUNT(*) FROM vt1; -- 0ms;
SELECT CASE vt1.c0  WHEN (((-1.071977823E9))<=((vt1.c0))) THEN (- (t0.c0)) ELSE (((vt1.c0, 0.17320732652988546, '-1071977823')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, vt1.c0, t0.c0))) END FROM t0 WHERE (((CAST(1610857710 AS REAL)) ISNULL));SELECT DISTINCT TOTAL(((vt1.c0) IS TRUE)) FROM vt1, t0 GROUP BY CAST(CAST(t0.c0 AS TEXT) AS TEXT) HAVING 0.06495971670071021; -- 0ms;
SELECT ALL CAST(MAX(vt1.c0) AS NUMERIC) FROM vt1 WHERE ((CAST(0.7770540071224512 AS NUMERIC) IN ((('509434198')*(NULL)), CASE WHEN '1066810048' THEN NULL WHEN x'' THEN x'fcba' WHEN NULL THEN '}Ps[&蠳}ʕ' ELSE '' END))) ORDER BY vt1.c0 DESC  NULLS FIRST, LIKELY(DISTINCT ((t0.c0)||(t0.c0))) ASC, CASE (vt1.c0 IN ())  WHEN (t0.c0 IN ()) THEN t0.c0 COLLATE RTRIM END;SELECT DISTINCT AVG(x'') FROM vt1, t0 WHERE (((('/') ISNULL) IN ((x'7d05' IN ())))); -- 0ms;
SELECT (('-1692014184') IS FALSE) FROM t0, vt1 WHERE ((~ ((+ (NULL))))); -- 0ms;
SELECT ALL CASE CASE WHEN t0.c0 THEN vt1.c0 END  WHEN NULLIF(t0.c0, t0.c0) THEN CAST(t0.c0 AS INTEGER) END FROM vt1;SELECT DISTINCT ((((t0.c0) BETWEEN ('-1956466952') AND (vt1.c0)))!=(((t0.c0) IS TRUE))) FROM t0;SELECT DISTINCT (((((x'')) BETWEEN ((t0.c0)) AND ((vt1.c0))))%(UPPER(vt1.c0))) FROM vt1, t0; -- 0ms;
SELECT NTILE(CASE WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN CASE WHEN t0.c0 THEN 1028622579 WHEN t0.c0 THEN x'0e21130f' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE CAST(t0.c0 AS NUMERIC) END) OVER () FROM t0 WHERE (((((((((NULL)OR(x'')))OR(0.74429171445157)))AND(NULL)))AND(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT LEAD(((t0.c0 COLLATE BINARY)>((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, '1856447933')) AND ((t0.c0, t0.c0, t0.c0))))), t0.c0, LOWER(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) OVER () FROM t0; -- 1ms;
SELECT ALL TRIM(t0.c0, NULL) COLLATE BINARY, (((0.19896312741349742, vt1.c0, t0.c0))!=((t0.c0, t0.c0, x'291f'))) COLLATE BINARY, ROW_NUMBER() OVER () FROM vt1, t0 WHERE (((CASE '0.6894245652725031'  WHEN '-86557558' THEN '' END) IS TRUE)) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS TEXT) ASC; -- 0ms;
SELECT DISTINCT ((t0.c0)-(vt1.c0)) COLLATE NOCASE, LIKELIHOOD(MAX(t0.c0, t0.c0, t0.c0, vt1.c0), 0.05057826216956074), ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0 COLLATE RTRIM)))AND((vt1.c0 IN ()))) FROM vt1;SELECT (((((((((t0.c0 IN (t0.c0)))OR(GROUP_CONCAT(t0.c0))))AND(vt1.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((vt1.c0) ISNULL))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) NOT NULL) AS TEXT) FROM t0, vt1 WHERE ((- (0.9031484015514651)) COLLATE NOCASE COLLATE RTRIM) ORDER BY (NOT (((vt1.c0)%(t0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT 0.48185911366334877, (((((t0.c0, t0.c0, vt1.c0))==((0.6894245652725031, vt1.c0, t0.c0)))) NOT NULL), CAST((((t0.c0, t0.c0, vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0, vt1.c0, t0.c0)) AND ((t0.c0, t0.c0, vt1.c0, vt1.c0, t0.c0))) AS NUMERIC) FROM vt1 WHERE ((~ ((((NULL))<(('-1842753719')))))) ORDER BY (((((vt1.c0 IN (vt1.c0)))AND((~ (vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))), ((((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((t0.c0) BETWEEN ('1153612640') AND (t0.c0)))) DESC  NULLS FIRST LIMIT 9223372036854775807 OFFSET 1117470614;SELECT DISTINCT ((NULL) BETWEEN (t0.c0) AND ((vt1.c0 IN ()))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS BLOB) FROM vt1, t0 WHERE ((((((x'' IN ()))AND('|v4')))AND((x'' IN ())))) LIMIT 944333292; -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((0.07447075496991251, vt1.c0, t0.c0)) AND ((x'', vt1.c0, vt1.c0))))>(((t0.c0) NOT NULL))) FROM t0;SELECT COUNT(*) OVER () FROM vt1, t0; -- 0ms;
SELECT DISTINCT (NOT ((vt1.c0 IN ()))) FROM t0 WHERE (CAST('S䚯, ah[%d' AS REAL)); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c0))*(COALESCE(DISTINCT t0.c0, t0.c0))) FROM t0, vt1 WHERE (0.043422602029262514 COLLATE NOCASE) GROUP BY CAST((~ (t0.c0)) AS REAL); -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)IS(vt1.c0)), AVG(t0.c0), ((t0.c0)!=(t0.c0)))) AND ((((t0.c0)OR(vt1.c0)), (- (t0.c0)), json_quote(vt1.c0)))) FROM t0, vt1 GROUP BY vt1.c0, SQLITE_COMPILEOPTION_USED(CASE WHEN t0.c0 THEN '䅃w㷽r->Vd^' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END), (('') BETWEEN ((+ (1446139789))) AND (((t0.c0)>>(vt1.c0)))) HAVING NULL; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( PARTITION BY CASE WHEN ((0xfffffffff7156a6b) IS FALSE) THEN (- (0.35665796868597566)) ELSE CAST(vt1.c0 AS TEXT) END, 'h') FROM vt1 WHERE ((((((-1322225482)IS NOT(x''))))<=((((0x6f095866)&('\缻')))))); -- 0ms;
SELECT t0.c0 FROM vt1;SELECT ALL x'' FROM t0 WHERE (CAST(0.7967778733972642 AS TEXT)); -- 0ms;
SELECT DISTINCT ((((x'')||(vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)<>(t0.c0)))) FROM t0;SELECT LIKELY(vt1.c0 COLLATE BINARY) FROM vt1 LIMIT -501002571; -- 0ms;
SELECT DISTINCT TOTAL(((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) OVER () FROM vt1, t0 GROUP BY vt1.c0; -- 0ms;
SELECT DISTINCT ((('-888725190')) BETWEEN (((t0.c0 IN (vt1.c0)))) AND ((''))) FROM t0, vt1 LIMIT -103985159 OFFSET -257574682; -- 1ms;
SELECT CASE WHEN TYPEOF(vt1.c0) THEN 'J<z?,X_XK' END FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0)IS NOT(vt1.c0)))-(vt1.c0)) FROM t0, vt1; -- 0ms;
SELECT (SUM(vt1.c0) IN ()), CAST(vt1.c0 AS INTEGER) COLLATE NOCASE, (~ ((t0.c0 IN ()))), (+ ((vt1.c0 IN ()))), ((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ()) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==((NOT (t0.c0)))) FROM t0, vt1 WHERE (((((0.3412485536358718)AND(x'')))AND(NULL)) COLLATE NOCASE); -- 0ms;
