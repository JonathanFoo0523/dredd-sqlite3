-- Time: 2024/06/07 13:37:55
-- Database: database25
-- Database version: 3.40.0
-- seed value: 3508479425
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
ROLLBACK TRANSACTION; -- 20ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (0.2927972436379205, NULL, 0.2927972436379205); -- 0ms;
PRAGMA mmap_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0Xffffffff87253fc4, c2=NULL, c2='DX'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (0.33236477501691297), (NULL), (NULL), (x''), (x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1, c0) VALUES ('1538653001', x'', '-2027601980'); -- 1ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2, c2, c1)=('4/b', NULL, NULL); -- 1ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cache_spill = -6575838306876568280; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.27557158615765553, c1=x'' WHERE ((rt0.c0 IN ()) IN ()); -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('1966727319', '', NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (1966727319); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2, c1) VALUES ('0.2927972436379205', x'', '-189325387'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0, c2) VALUES (0.9626615072605452, '1935846536', ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (-881088057); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES ('1966727319'), ('1637553884'), (NULL); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('-2087944528', x'c887', NULL); -- 0ms;
DELETE FROM rt0; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (x'', NULL); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES ('0.0', 'vcEbo0sX', '-881088057'), (x'', 0.04486416264299553, x''), ('1637553884', x'', 0.8801070949568576); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('4/b', -1.7976931348623157E308, 0.9603432925590628), (NULL, 0.9603432925590628, NULL), ('CE矣', '#G&Z矣ꅯPp', 0.27557158615765553); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1664219070')) NOT BETWEEN (('')) AND ((PRINTF(NULL)))); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (-1921143496); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES ('-881088057', x''), (0.7460226285631436, x''), (0X53cec295, '0.0'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2, c1) VALUES ('1538653001', '', 0X6af057fb), (x'', '585655919', x''), ('-1004388357', '0.27557158615765553', '3AAf櫘<_'); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (x''), (x'2479'), (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-1218377526', NULL, 0Xffffffffb87436f2); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (0xffffffff9ba6e12a, x''), (0xffffffffefdb7367, NULL), (x'4404', x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES (0.4246757533512505, x'', 0xffffffffcb7ba9c7); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES (x'', x''), (x'', x'e3a5'), ('1637553884', 0.9603432925590628); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('0.2927972436379205'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0, c1) VALUES (0.9576606104448171, 0.39728879720915977, '565485935'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.4781699486417934, x''); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (x'b49c'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES ('1469220519'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0x6331f7be, x'', 0.04486416264299553); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(0.8801070949568576) WHERE ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND((((rt0.c1))>=((rt0.c0))))))OR(CASE WHEN rt0.c1 THEN rt0.c2 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1319435297 sz=2072296382 unordered noskipscan'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.5391465949906332, '0.8801070949568576', x'4b88'), ('ລVHihjf', NULL, NULL), ('-318559605', '585655919', NULL); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (NULL, 1.406059157E9, NULL), (x'', '{V', NULL), (0.03826756633737649, NULL, ''); -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (x'', 0.8099557126728667, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, 0.04486416264299553); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'd73e'; -- 1ms;
INSERT OR FAIL INTO rt0(c2) VALUES (x'0e2e2503'); -- 0ms;
ANALYZE rt0; -- 3ms;
PRAGMA cache_size = 2977406324617768698; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('-1200343310', NULL); -- 0ms;
UPDATE rt0 SET (c0)=(NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET c1=0.39728879720915977 WHERE ((((rt0.c1)<>(rt0.c2)))&(rt0.c0 COLLATE BINARY)); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c0) VALUES (1.319435297E9, '#G&Z矣ꅯPp', '1406059157'), (x'', NULL, NULL), (x'', '0.4246757533512505', 0.07269179856351582), ('el8#}벝<', x'', 0.7053364549781931), (0.4246757533512505, NULL, '1877688795'); -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES ('KV'); -- 0ms;
CREATE VIRTUAL TABLE rt99 USING rtree(c0, c1, c2); -- 1ms;
UPDATE OR FAIL rt0 SET c2=NULL, c0='dx' WHERE (((((((rt0.c0)AND(rt0.c1)))AND(0.7929478788441057))))>((rt0.c0 COLLATE RTRIM))); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0) VALUES ('-2087944528', 1664219070), ('MW^k', 0.5057855375136491), (-2.087944528E9, x''); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-1305582806', '1005928498', 'rX?xSLW6'); -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR IGNORE rt99 SET (c2)=('1446318692'); -- 0ms;
INSERT OR IGNORE INTO rt99(c2) VALUES (0.9283411249733017); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES (1.877688795E9), (x''), ('-1218377526'); -- 0ms;
INSERT OR IGNORE INTO rt99(c0, c2) VALUES (0.8874821224752182, 'i 柵'), ('3,I9', 0.07518236513816023), ('1171935901', x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt99(c0, c2, c1) VALUES (0.09818568643483994, '491688559', NULL), ('*', -1200343310, x'ad10'), (NULL, '1276850732', x'954ce166'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('491688559'); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((0.8874821224752182 IN ())) NOT NULL), CAST(TRIM(rt99.c2, rt99.c0) AS NUMERIC), CASE WHEN CASE rt99.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt99.c1 THEN rt99.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt99.c1 END THEN GROUP_CONCAT(rt0.c2) WHEN LIKELY(DISTINCT rt0.c1) THEN (((rt99.c1)) BETWEEN ((rt99.c1)) AND ((rt0.c0))) WHEN CASE rt99.c0  WHEN rt0.c1 THEN rt99.c0 WHEN rt99.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt99.c0 END THEN ((rt99.c1) ISNULL) END, (((rt99.c1 IN ()))+(CASE WHEN rt99.c1 THEN rt99.c1 ELSE rt99.c1 END)), (NOT (((rt0.c2) BETWEEN (rt0.c0) AND (rt99.c2)))), AVG(CAST(rt99.c2 AS NUMERIC)) OVER (), CAST((rt0.c1 IN (rt99.c1)) AS TEXT) FROM rt0;SELECT DISTINCT TYPEOF(rt0.c1 COLLATE RTRIM) FROM rt0, rt99 WHERE ((- (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT ALL DATE(((rt99.c2)%(rt99.c1)), (('*{') ISNULL), ((rt99.c1) IS TRUE)) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT (((rt0.c1, rt99.c2, rt99.c2, rt0.c0, rt99.c0)) NOT BETWEEN ((rt0.c1, rt99.c2, rt99.c2, rt0.c1, rt99.c2)) AND ((rt99.c2, rt0.c2, x'', rt0.c2, rt99.c0))) COLLATE NOCASE, (~ (rt0.c0)) COLLATE BINARY, ((((rt99.c1)IS(rt0.c2)))OR(MAX(rt99.c1))) FROM rt99 LIMIT -162558815;SELECT ALL CASE WHEN rt0.c1 THEN rt99.c1 ELSE rt99.c0 END COLLATE NOCASE FROM rt99 ORDER BY (NOT (CAST(rt0.c2 AS REAL))), LIKELIHOOD(((rt0.c2) BETWEEN (rt99.c1) AND (NULL)), 0.9380577029435848) ASC, (((rt0.c2))<=((CAST(rt99.c2 AS NUMERIC))))  NULLS LAST;SELECT DISTINCT NULL, ((((TOTAL(rt99.c1))AND(((rt99.c2)IS(rt99.c2)))))AND((('-1823457310')<=(rt99.c2)))), CAST(CASE WHEN rt0.c1 THEN rt99.c2 END AS REAL) FROM rt99, rt0 WHERE (((((0.6633709640162148) NOTNULL)) NOT BETWEEN ((- (0.030124464104412163))) AND (CAST(0Xffffffffe76d6dcf AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((((rt99.c2)AND(rt99.c2)))OR(rt0.c1)))LIKE((((rt99.c0)) NOT BETWEEN ((rt99.c2)) AND ((rt99.c0))))) FROM rt0, rt99 WHERE (CASE (+ ('1885433869'))  WHEN (('Sk.>') NOTNULL) THEN TYPEOF(DISTINCT NULL) END); -- 0ms;
SELECT DISTINCT '0E', rt0.c0, (NOT (((rt99.c2)%(rt0.c1)))) FROM rt99 WHERE ((CAST(NULL AS NUMERIC) IN ()));SELECT DISTINCT (((rt0.c1, rt0.c0, 0.4580174509137105))<((rt99.c0, NULL, rt0.c2))) COLLATE RTRIM FROM rt99 WHERE (ABS((('') ISNULL))) ORDER BY (((((rt0.c2 IN (rt0.c0, rt0.c0)))OR((rt0.c1 IN ()))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt99.c2)))));SELECT ALL ((((NULL)AND(-8.81088057E8)))AND(rt99.c2 COLLATE NOCASE)) FROM rt0 LIMIT 1001519653 OFFSET -162558815;SELECT DISTINCT CAST(rt99.c2 AS BLOB), (((('-1736259165') NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE), ((((rt99.c2 IN ())))>((CAST(rt0.c2 AS TEXT)))), rt0.c0 COLLATE NOCASE, rt0.c1 FROM rt0, rt99; -- 0ms;
SELECT DISTINCT LAST_VALUE((((NOT (NULL))) NOT NULL)) OVER (), (((((((((((rt0.c0)) BETWEEN ((rt99.c1)) AND ((rt0.c1))))OR((+ (rt99.c2)))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(CASE rt0.c2  WHEN rt0.c0 THEN NULL END)))OR((rt99.c1 IN ()))), (+ (NULL)), SUM((x'fe16' IN ())) OVER (), (((rt0.c1)>=(rt0.c0)) IN ()) FROM rt0, rt99; -- 1ms;
SELECT (((rt0.c0)) NOT BETWEEN ((((rt99.c0) NOT BETWEEN (rt99.c2) AND (rt99.c1)))) AND (((- (rt99.c2))))) FROM rt99, rt0 GROUP BY CAST(((rt99.c0)-(rt0.c1)) AS INTEGER) ORDER BY ((((UNLIKELY(rt0.c1))AND(json_array_length(rt99.c2, rt0.c1))))AND(ROUND(rt99.c0, rt0.c1)))  NULLS LAST;SELECT CAST(((-1549427309)==(0x4ece3cfb)) AS BLOB) FROM rt0 WHERE (CAST(((((((((NULL)AND('0.33236477501691297')))AND(-2.70830745E8)))OR('3,I9')))AND(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT rt0.c0, ((rt99.c2) NOT BETWEEN (rt99.c1) AND (rt0.c0)) COLLATE BINARY, CAST(CAST(rt0.c2 AS INTEGER) AS REAL) FROM rt0;SELECT DISTINCT (((((((rt99.c0, '1635726154', rt0.c0)) NOT BETWEEN ((rt99.c1, rt99.c1, rt99.c1)) AND ((rt99.c1, 256287044, rt99.c2))))OR(rt99.c2 COLLATE BINARY)))OR(rt99.c0 COLLATE BINARY)) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT json_remove(((rt99.c0)<(rt0.c1)), (rt99.c0 IN (rt99.c0, rt99.c2))), ((MIN(rt0.c2)) IS TRUE), SUM(((rt99.c1)+(rt99.c2))) OVER () FROM rt99, rt0 GROUP BY (((rt0.c2 IN ())) BETWEEN (TRIM(0.4580174509137105, rt99.c1)) AND (((rt99.c2)<=(rt99.c2)))) HAVING ((CASE WHEN rt99.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt99.c1 THEN rt0.c2 ELSE x'' END)<(CAST(x'' AS BLOB)));SELECT DISTINCT ((IFNULL(DISTINCT rt99.c0, NULL)) NOT NULL), CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE RTRIM, ((((rt99.c0)*(rt0.c0)))!=(TIME(rt0.c2, rt99.c0, '0.39728879720915977'))) FROM rt99 GROUP BY (((((rt99.c1))>=((rt99.c2)))) NOTNULL), ((rt99.c2)|(rt0.c1)) COLLATE NOCASE, (('0.7929478788441057')<(((rt99.c0)=(rt99.c2))));SELECT ALL ((((rt99.c1)*(rt0.c1)))<<(((((rt99.c0)OR(rt99.c2)))OR('')))) FROM rt0, rt99 GROUP BY CAST(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt99.c0)) AS REAL) ORDER BY UNLIKELY(json_extract(0.4580174509137105, rt0.c2));SELECT DISTINCT rt99.c1 FROM rt99 WHERE ((((((x'3f32ce82'))<((NULL))))<<(((1877688795)AND(NULL))))); -- 0ms;
SELECT DISTINCT (+ (rt99.c1)), ((rt0.c0 IN (rt0.c0, rt0.c1)) IN ()), NULL FROM rt99 WHERE ((+ ((x'' IN ())))); -- 0ms;
SELECT NULL COLLATE RTRIM FROM rt99, rt0 WHERE (((((((NULL)==(x'')))AND((((0X7362ac88))<>((NULL))))))OR((x'' IN ())))); -- 0ms;
SELECT ALL TOTAL_CHANGES() FROM rt0 ORDER BY ((CAST(rt0.c2 AS TEXT)) ISNULL) ASC; -- 1ms;
SELECT DISTINCT RANK() OVER () FROM rt99, rt0; -- 0ms;
SELECT (((0.5435345605887574)>=('b>*')) IN ()), x'' COLLATE NOCASE, TRIM(((rt99.c1) NOT BETWEEN (NULL) AND (rt99.c2)), ((((rt0.c1)OR(rt99.c1)))OR(rt99.c1))) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT ((((((((rt99.c2)AND(rt0.c1)))OR(rt99.c1)))AND((((rt99.c1))>=((rt99.c1))))))AND(rt99.c0)) FROM rt99, rt0 GROUP BY CASE WHEN (((rt0.c1, rt0.c1, '1635726154')) NOT BETWEEN ((rt99.c2, rt0.c2, rt99.c2)) AND ((rt99.c0, rt0.c1, rt99.c1))) THEN (((rt0.c1, -318559605, rt0.c0))==((rt99.c1, rt99.c0, rt99.c0))) WHEN (((NULL))<=((rt99.c0))) THEN CAST(rt0.c1 AS INTEGER) WHEN (((('s2.Y!xG>')OR(rt99.c2)))OR(rt0.c2)) THEN INSTR(rt0.c2, rt99.c2) WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c1 AS INTEGER) WHEN LOWER(DISTINCT rt99.c1) THEN rt99.c0 COLLATE BINARY END; -- 0ms;
SELECT DISTINCT (((((rt99.c0)AND(rt99.c2)))AND(rt99.c0)) IN (((rt0.c2)OR(rt99.c0)))) FROM rt0, rt99; -- 0ms;
SELECT (~ (SUM(rt99.c0))), ((((rt0.c0)OR(rt0.c1)))>>((rt99.c1 IN ()))), CAST(NULL AS BLOB) FROM rt0, rt99; -- 0ms;
SELECT ALL (('a_~y*')GLOB(CAST(rt0.c2 AS REAL))) FROM rt0 LIMIT 1730320999 OFFSET -1930967807; -- 0ms;
SELECT ALL ((((rt0.c2) IS TRUE))IS(((')?')-('1637553884')))) FROM rt0, rt99 WHERE ((((((- (NULL)))AND((((NULL)) BETWEEN ((1000480047)) AND ((''))))))AND(((0xffffffffa42b87ec) NOT BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT ALL COUNT(*) FILTER(WHERE (((rt0.c2 IN ())) NOT NULL)) OVER ( GROUPS  CURRENT ROW), ((((rt0.c2)<<(rt99.c1)))IS NOT((((rt99.c0)) BETWEEN ((rt0.c2)) AND ((rt99.c0))))), LAST_VALUE(IFNULL(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt99.c2 END, ROUND(rt0.c2, rt99.c2))) OVER () FROM rt0, rt99 WHERE ((- ((('!_')||(0.6615655213870156))))); -- 0ms;
SELECT ALL CAST((rt0.c1 IN (rt99.c2)) AS INTEGER) FROM rt0 WHERE (((json_array(NULL, NULL))LIKE(NULL)));SELECT ALL 'bG' FROM rt99 ORDER BY ('s' IN ()) DESC; -- 0ms;
SELECT json_patch(rt0.c1 COLLATE NOCASE, COUNT(rt99.c0)), ((CASE WHEN 0X1307e08c THEN rt0.c2 ELSE rt99.c0 END) BETWEEN ((((rt99.c1, rt99.c0, rt0.c1))>((rt0.c2, rt99.c0, rt99.c2)))) AND (((rt0.c2)||(rt0.c1)))), ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))>((rt99.c0 IN (rt99.c0, rt99.c1)))), ((((((((((((((rt99.c0)OR(rt99.c2)))OR(rt99.c0)))OR(rt99.c0)))AND(rt99.c1)))OR(rt99.c1)))OR(rt0.c1))) BETWEEN (-1567029988) AND (rt99.c1 COLLATE RTRIM)), RANK() OVER () FROM rt0, rt99 WHERE (((((0.09818568643483994) NOTNULL))%((((x'76be')) NOT BETWEEN ((NULL)) AND ((0.6299531928957743)))))); -- 1ms;
SELECT ALL ((((rt99.c1)GLOB(rt0.c1)))>(CASE rt99.c1  WHEN rt0.c1 THEN rt99.c1 WHEN x'' THEN rt0.c0 WHEN rt0.c2 THEN rt99.c1 ELSE rt99.c0 END)), '%E|W*', (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))*(rt99.c0)) FROM rt99 WHERE ((((((0.47442836138934064 IN (x'', NULL)))OR(rtreenode('KV', 'nK47'))))OR((- (0.0053882177126947095))))) ORDER BY ((CAST(rt0.c1 AS TEXT))AND(((rt99.c1)IS(rt0.c0)))) ASC;SELECT DISTINCT NULL FROM rt0, rt99 WHERE ((((x'')) NOT BETWEEN ((((0.3920539418865303)IS NOT('')))) AND ((((('-1785786500', '窀#', x''))<(('2072296382', 0X4ef270ab, 1817405786))))))); -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(rt99.c1 AS BLOB)) FROM rt0;SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt99.c1 THEN rt99.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt99.c0 END) NOTNULL) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt99.c0 THEN rt99.c0 ELSE rt99.c2 END AS REAL) FROM rt99, rt0 WHERE ((~ (x'0cbc'))); -- 1ms;
SELECT DISTINCT AVG(CAST(0Xffffffffe76d6dcf AS NUMERIC)) OVER () FROM rt99, rt0; -- 0ms;
SELECT (((0.2399156553017755)) BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt99.c1)))) AND ((CAST(rt99.c0 AS REAL)))) FROM rt0 WHERE ((((0.38578268689318496 IN ())) IS TRUE));SELECT ALL ((((rt0.c1)+(rt99.c0)))<=((rt99.c0 IN (rt99.c0)))) FROM rt0 WHERE (((((('?d')) BETWEEN ((0.504570959231734)) AND ((1268137068))))AND(((((0xffffffffcd2f9572)AND('-1116444683')))AND('h#3!괸')))));SELECT ALL ((rt99.c2)<>(rt99.c0)) COLLATE NOCASE, RANK() OVER (), rt0.c0 FROM rt0 LIMIT -1921211409 OFFSET 881670158;SELECT DISTINCT ((rt99.c1)>=((rt0.c1 IN (NULL, rt99.c2)))) FROM rt0;SELECT DISTINCT ((rt0.c1)<<(-1.20034331E9)) FROM rt99, rt0 WHERE (CAST(TIME(NULL, 0.3411406843371645, '-1e500') AS NUMERIC)); -- 0ms;
SELECT ((COUNT(-1.683562198E9))>=(((rt99.c0)AND(rt99.c0)))), SUM((rt99.c2 IN ())) OVER (), UPPER(DISTINCT (rt99.c0 IN ())) FROM rt0 LIMIT -23649044 OFFSET -279205441;SELECT DISTINCT ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (((((rt0.c1)OR(rt99.c2)))AND(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC))) FROM rt99 WHERE ((~ (CASE WHEN x'' THEN x'' ELSE '-1450758871' END)));SELECT ((rt0.c2) ISNULL) COLLATE BINARY FROM rt0, rt99 WHERE (((LIKELIHOOD(DISTINCT x'', 0.2816533158131217)) NOTNULL)); -- 0ms;
SELECT DISTINCT ((' be~') BETWEEN (((((rt99.c0)OR(rt99.c2)))OR(rt0.c2))) AND (1.005928498E9)), NTILE(((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) OVER ( ORDER BY LIKELIHOOD(((rt0.c1) ISNULL), 0.4782682074652166)), 0.7694361793051122 FROM rt0 GROUP BY ((((rt99.c0) BETWEEN (rt0.c0) AND (rt0.c2)))/(ABS(DISTINCT rt0.c1)));SELECT DISTINCT SUM(MAX(rt0.c2, rt0.c2, rt0.c0, rt0.c1)) OVER ( ORDER BY (((((rt99.c0, rt99.c2, rt0.c1)) NOT BETWEEN ((rt99.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c0, 0.9538472997614552)))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c1 COLLATE BINARY)) ASC  NULLS LAST), x'', ((((((((((rt99.c1)>(rt99.c1)))OR((((rt0.c2, rt99.c0, 0.8826165877987613))>((0.6299531928957743, 'N', rt0.c2))))))OR(rt0.c1)))OR(((((rt99.c2)OR(rt99.c0)))OR(rt0.c0)))))AND((- (rt0.c1)))) FROM rt99, rt0 GROUP BY UPPER(((((((((rt99.c0)OR(0.1145906866748515)))OR(rt0.c2)))OR(rt99.c0)))OR(rt99.c2))), ((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c1)OR(rt0.c1))) AND ((rt99.c0 IN ()))), (((~ (rt99.c0)))<=(((rt0.c0)&(rt0.c0)))); -- 0ms;
SELECT DISTINCT ((((rt99.c2) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (CASE rt0.c2  WHEN rt99.c2 THEN rt0.c2 ELSE rt99.c2 END)) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT COUNT(rt0.c1) OVER () FROM rt99 WHERE (CAST((+ (0X348d380e)) AS REAL));SELECT ((rt99.c2 IN ()) IN ()) FROM rt99 WHERE ('NhLlwp'); -- 0ms;
SELECT ALL SUM(((rt0.c1)%(0.9282006314677773))) OVER ( ORDER BY (((((rt99.c0))<>((rt99.c1))))>(rt99.c2 COLLATE RTRIM)) ASC, ((((((((CASE WHEN 0.8255262325560372 THEN rt0.c0 WHEN -1.004388357E9 THEN rt99.c0 WHEN rt0.c1 THEN rt99.c1 ELSE rt0.c2 END)AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt99.c1)))))AND((x'' IN ()))))OR(((rt0.c2) NOTNULL))))OR((~ (rt99.c1))))  NULLS FIRST) FROM rt0, rt99 WHERE (((((((((((-1.305582806E9)OR('-318559605')))AND(NULL)))AND(-2127432269)))AND(0x5dddcb51)))|(((('1001519653'))<((NULL)))))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt99.c0 THEN rt99.c2 END)<>(((rt99.c0) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0;SELECT ALL (((rt99.c1) BETWEEN (rt0.c0) AND (rt99.c2)) IN ()) FROM rt99, rt0 WHERE (NULL); -- 0ms;
SELECT (((((((('-875817984')OR(rt0.c2)))AND(rt99.c1)))AND(((0.27557158615765553) ISNULL))))AND(ABS(DISTINCT rt99.c1))), ((~ (rt0.c1)) IN ()), ((rt99.c2) NOT BETWEEN (CASE rt99.c2  WHEN rt99.c2 THEN rt99.c2 WHEN rt0.c0 THEN rt99.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) AND ((rt0.c1 IN (rt0.c0, rt0.c0)))) FROM rt99, rt0; -- 0ms;
SELECT (((((NOT (rt0.c0)))OR(json(rt0.c0))))AND((rt0.c0 IN ()))), CASE HEX(rt99.c2)  WHEN (((rt99.c0))<((rt0.c0))) THEN ((rt0.c2)&(rt0.c0)) END, CASE rt99.c0  WHEN rt99.c0 THEN rt99.c1 ELSE rt99.c0 END COLLATE NOCASE FROM rt0 GROUP BY rt0.c2 HAVING x'be53' LIMIT 489434327 OFFSET 565485935;SELECT DISTINCT (((~ (rt0.c1))) IS FALSE), MAX(rt0.c0), GROUP_CONCAT(((rt99.c0) ISNULL)) FROM rt99 WHERE ((((('623950048')*(x''))) BETWEEN ((NOT (x'c312'))) AND ((('491688559')<=(0.03921217169537605)))));SELECT ALL (((rt0.c0) NOT BETWEEN (rt99.c0) AND (rt99.c1)) IN ()) FROM rt99 WHERE ((+ ((NULL IN ())))); -- 0ms;
SELECT ALL SQLITE_SOURCE_ID(), CASE WHEN ((rt0.c0)+(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN (((('0.03826756633737649')AND(rt99.c1)))AND(rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt99.c0) AND (rt0.c1)) WHEN '137597340' THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt99.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt99.c2 END END, ((((((((((rt99.c0)IS NOT(0.03921217169537605)))AND(((x'')<<(rt0.c1)))))OR(MAX(rt99.c0))))OR(CAST(rt0.c0 AS BLOB))))OR(((rt99.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt99;SELECT DISTINCT CAST(LIKELY(rt0.c2) AS BLOB), ((((-80542838)LIKE(rt99.c1))) NOT NULL), ((((rt99.c2)>=(rt0.c2))) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) FROM rt99 LIMIT -1106912576;SELECT DISTINCT TOTAL(CASE WHEN rt99.c0 THEN rt0.c2 ELSE rt99.c2 END) FROM rt0;SELECT DISTINCT (((((rt99.c0) NOT NULL)))>=((((rt99.c0)>(rt0.c2))))), rt0.c2, (((json_array_length(rt99.c0, 0.19046141877034728), rt99.c2 COLLATE BINARY, ((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt99.c0)))AND(rt99.c0)))AND(x'8508'))))<((rt99.c2, ((((((((rt0.c0)AND(rt99.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(0.14821163919597602)), (rt99.c1 IN ())))), ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (rt99.c1 COLLATE RTRIM) AND (((((((((rt99.c1)AND(NULL)))AND(rt99.c0)))AND(rt99.c2)))AND(rt0.c1)))), (rt0.c1 COLLATE RTRIM IN (MAX(rt99.c0))) FROM rt99, rt0 WHERE ((((-1050388719)) BETWEEN ((((x'')<=('-318559605')))) AND ((CAST(NULL AS BLOB))))) LIMIT -469836107; -- 0ms;
SELECT json_array_length(x'', ((rt0.c1)GLOB(rt0.c1))) FROM rt99 WHERE ((((((('1', x'', -2032352806))=((x'', x'', 2.072296382E9))), ((NULL) NOT BETWEEN (NULL) AND (NULL)), CASE WHEN x'' THEN x'48c8' WHEN NULL THEN x'' WHEN NULL THEN -1989724328 END))>=(((2.56287044E8 IN ()), (('m''') NOT BETWEEN (x'8068') AND (x'')), (+ (-2.02760198E9))))));SELECT DISTINCT (0.12917723715575957 IN ()) FROM rt0 WHERE ((((((x'')AND(')?')))AND('E6AEP07')) IN ())); -- 0ms;
SELECT DISTINCT x'', LIKELY(DISTINCT HEX(DISTINCT rt99.c0)), (CAST(rt0.c1 AS INTEGER) IN (((((rt0.c1)OR(rt99.c2)))OR(x'cfd7')), ((rt99.c0) NOT NULL))), ((CAST(rt99.c1 AS INTEGER))/(CASE WHEN rt99.c2 THEN rt0.c0 ELSE rt99.c1 END)), MAX(rt99.c0) FROM rt0;SELECT (((rt99.c1 IN ()))>>(((((NULL)OR('gJ')))AND(rt0.c1)))) FROM rt0; -- 3ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN '' END) BETWEEN ('969723227') AND (LTRIM(rt99.c2))) FROM rt99, rt0 WHERE ((~ (NULL))); -- 0ms;
SELECT DISTINCT rt99.c1, RANK() OVER (), CASE ((rt0.c1) NOTNULL)  WHEN ((rt99.c1)<<(rt99.c2)) THEN TOTAL_CHANGES() WHEN rt99.c2 COLLATE NOCASE THEN CASE rt99.c2  WHEN '' THEN 0x1307e08c ELSE rt0.c2 END WHEN ((rt99.c0)<=(rt99.c2)) THEN 0.09518688773374206 WHEN UNLIKELY(rt99.c1) THEN (((rt99.c0))<>((rt99.c1))) WHEN CASE rt0.c2  WHEN rt99.c0 THEN rt0.c0 WHEN rt99.c2 THEN 1817405786 WHEN rt0.c1 THEN rt99.c0 ELSE rt99.c0 END THEN ((rt0.c0)>>(rt99.c0)) ELSE MIN(NULL) END FROM rt99 NATURAL JOIN rt0 WHERE ((('0.04486416264299553') IS FALSE)); -- 0ms;
SELECT DISTINCT (((((rt0.c0 IN ()))OR(CAST(rt99.c1 AS REAL))))OR(rt0.c2)) FROM rt0, rt99 WHERE (((CASE WHEN x'' THEN 'BG' END)OR('-1567029988' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (CASE rt99.c2  WHEN rt99.c2 THEN rt99.c1 END IN (((rt99.c2) IS TRUE))), LTRIM(((rt0.c1) NOT NULL), rt99.c0 COLLATE NOCASE), SUM(TRIM(rt0.c0)) FROM rt0 WHERE (CAST(CASE WHEN x'' THEN 0X103b2ce1 END AS REAL));SELECT DISTINCT TYPEOF(DISTINCT (- (rt99.c1))), rt99.c1, (NOT ('1005928498')) FROM rt0;SELECT ((GROUP_CONCAT(rt0.c0)) BETWEEN ((rt0.c0 IN (rt0.c2, rt0.c1))) AND (rt0.c1)), rt0.c2, (NOT (((rt0.c0) NOTNULL))) FROM rt0, rt99 WHERE (((((((((((NULL)+(0.1981871640858477)))OR((- ('0.4580174509137105')))))OR(((-1.567029988E9)IS(-782828957)))))OR(((((((((((((0xffffffffb87436f2)OR(0.11700271551039376)))OR(0.5593338154364718)))AND(x'')))OR(x'')))AND('')))AND('-981108765')))))OR(0.06283723676323816 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT rt99.c0, (((rt0.c1 IN ()))|(0.8099557126728667)), ((((rt0.c0)!=(rt0.c1))) IS TRUE) FROM rt0 WHERE ((('jOho~') BETWEEN ((('+r') IS TRUE)) AND (((('肃taMtdX	', x'', 0.6615655213870156))<((NULL, 0X4e3d8083, NULL)))))) LIMIT -1564972560 OFFSET -279205441;SELECT ALL (((rt0.c0)) BETWEEN ((COUNT(rt0.c0))) AND ((((rt0.c2)IS(rt99.c2))))), CAST(rt0.c1 AS BLOB) COLLATE RTRIM, ((rt99.c0 IN ()) IN ()) FROM rt99, rt0; -- 0ms;
SELECT CAST(rt99.c2 COLLATE RTRIM AS REAL) FROM rt0 GROUP BY CAST((~ (rt99.c0)) AS REAL) HAVING ((rt99.c1 COLLATE RTRIM)<>(((rt99.c2)<(rt99.c0))));SELECT DISTINCT CAST(LIKELIHOOD(rt0.c0, 0.23529502187158657) AS INTEGER) FROM rt0, rt99 WHERE ('-1116444683') ORDER BY COALESCE(CAST(rt0.c0 AS NUMERIC), ((((rt0.c1)AND(rt99.c2)))OR(rt99.c0))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c1) OVER () FROM rt99, rt0 WHERE ((((((((('1122873220')AND(('V.' IN (NULL)))))AND(((x'')>(NULL)))))OR((-2032352806 IN ()))))OR(LIKE(0.030124464104412163, x'')))); -- 0ms;
SELECT ALL ((rt0.c2) NOT BETWEEN (rt99.c0) AND (rt99.c1)) COLLATE BINARY, CAST(rt0.c0 AS REAL), (((rt0.c0, rt99.c1, rt99.c1)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, UNLIKELY(rt0.c2), CAST(rt99.c0 AS REAL))) AND ((((((((((rt99.c0)AND(rt99.c1)))OR(rt99.c1)))OR(rt0.c2)))OR(rt99.c1)), CAST(rt99.c1 AS REAL), (~ (rt99.c0))))) FROM rt99, rt0 WHERE ((CASE WHEN '0.19046141877034728' THEN x'' END IN ())); -- 0ms;
SELECT DISTINCT ((((COUNT(*))AND(((rt0.c1)&(rt99.c0)))))OR(((rt99.c1) NOT NULL))) FROM rt99, rt0 WHERE ((((((((('1538653001')AND(0.2510322227858791)))AND(NULL)))AND(x'')))AND(0.9207479356003554)) COLLATE NOCASE); -- 0ms;
SELECT (NOT ((((rt0.c0))>=((rt0.c0))))) FROM rt0 WHERE ((('-2141798587') NOTNULL) COLLATE NOCASE) GROUP BY CASE rt99.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt99.c1 THEN rt99.c0 WHEN rt0.c0 THEN rt99.c1 END COLLATE NOCASE;SELECT CASE WHEN ((((rt99.c2)AND(rt99.c1)))OR(rt0.c2)) THEN ((rt0.c2) NOTNULL) END FROM rt99;SELECT (+ (((((x'd625')OR(rt0.c2)))AND(rt99.c2)))) FROM rt0, rt99 LIMIT -313405160 OFFSET -806158230; -- 0ms;
SELECT DISTINCT IFNULL(CAST('-1950680088' AS TEXT), ((rt0.c0)&(rt0.c2))), CAST((('0.1145906866748515')<=(rt99.c0)) AS REAL), ((rt99.c2 COLLATE RTRIM) IS FALSE) FROM rt99;SELECT DISTINCT 1.730320999E9 FROM rt0 WHERE (CAST(CAST(0.12417059856606505 AS NUMERIC) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((rt0.c1)>=(rt99.c0)))IS(CAST(rt99.c0 AS NUMERIC))) FROM rt0, rt99 WHERE (MAX(CAST(x'' AS BLOB), ((NULL)GLOB(x'')))); -- 4ms;
SELECT DISTINCT AVG(json_valid(NULL)) OVER ( GROUPS (((((('') IS TRUE))OR(((rt0.c2)>>(x'')))))AND('1Fr')) PRECEDING), (NOT (('-23649044' IN ()))), rt99.c0 FROM rt99 WHERE (((((('')) BETWEEN ((x'')) AND ((-1.921211409E9))))<<((((((((((((((((('0.5391465949906332')AND('')))OR(0x55431e75)))AND(0.11364044570094922)))OR(x'')))AND(NULL)))OR('')))OR('O?')))OR('623950048'))))) ORDER BY rt99.c1 COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (((rt99.c0 IN ())) NOT BETWEEN (LOWER(rt0.c0)) AND (((('[p{b#')) BETWEEN ((rt0.c1)) AND ((rt99.c0))))) FROM rt0 WHERE ((((x'')<(0.7484278985781212)) IN ())) GROUP BY json(((((rt99.c1)AND(rt99.c1)))AND(rt99.c2))), ((CASE WHEN rt99.c2 THEN rt99.c0 ELSE rt99.c0 END)GLOB((~ (rt0.c0)))), (((rt99.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((((rt99.c0)AND(rt0.c1)))AND(rt0.c2))))), (((rt99.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt99.c2) AND (rt99.c2)))) AND (((((rt0.c0, rt99.c1, rt99.c2))>((rt0.c0, rt0.c1, 'ᛜS1*鉯]쇚N')))))), 0.16861815843058536;SELECT ALL FIRST_VALUE(((CASE rt99.c2  WHEN rt99.c1 THEN NULL WHEN rt99.c1 THEN rt99.c0 WHEN rt99.c1 THEN rt99.c2 END) NOTNULL)) OVER () FROM rt99; -- 0ms;
SELECT DISTINCT (((~ (rt99.c2))) ISNULL) FROM rt0;SELECT DISTINCT ((rt99.c0)&(CASE WHEN rt0.c1 THEN rt0.c1 END)), TOTAL(((rt99.c0)||(rt99.c2))) OVER (), CAST(-1.004388357E9 AS TEXT) FROM rt99;SELECT ((((rt0.c1)/(rt0.c1))) BETWEEN ((rt99.c2 IN ())) AND ((((rt0.c0, rt0.c0, rt99.c2)) BETWEEN (('-1004388357', rt0.c1, rt0.c0)) AND ((rt99.c0, rt0.c0, rt99.c0))))) FROM rt99 WHERE ((((-80542838 IN ())) NOT NULL)) ORDER BY (INSTR(rt99.c1, rt99.c1) IN ());SELECT ALL rt99.c1, (highlight(rt99.c1, rt0.c2, rt99.c1, rt0.c2) IN ()), ((((rt99.c0) ISNULL)) IS TRUE) FROM rt0, rt99 WHERE (LTRIM((((1798822112))<=((NULL))), IFNULL(1322138875, NULL))); -- 0ms;
SELECT DISTINCT (((-1214597200)) NOT BETWEEN (((rt99.c2 IN (rt0.c2)))) AND ((((rt99.c0) IS TRUE)))), CASE WHEN ((rt99.c1)&(rt99.c0)) THEN ((rt99.c2) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE rt0.c1 END, '*' FROM rt0 WHERE (((x'' COLLATE NOCASE)IS(((0.1487502977606957)||('-2027601980')))));SELECT ALL LAG((((rt99.c0) BETWEEN (rt99.c1) AND (rt99.c2)) IN ()), (- (CASE WHEN 0.8430883276971891 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt99.c1 WHEN rt99.c0 THEN rt0.c2 WHEN rt99.c1 THEN rt0.c0 ELSE rt99.c1 END)), ((((rt99.c2) IS TRUE)) NOTNULL)) OVER (), ((rt99.c1 COLLATE BINARY) NOT BETWEEN (((rt99.c0) BETWEEN (rt0.c1) AND (rt99.c2))) AND ((((rt0.c1))<((rt0.c0))))), ((rt99.c0)/(rt0.c2 COLLATE RTRIM)) FROM rt0, rt99 GROUP BY NULL; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)AND(rt99.c0)) THEN TOTAL(rt0.c2) ELSE (- (rt0.c2)) END FROM rt0 WHERE (((((NULL) NOT NULL))=(((x'') BETWEEN (x'') AND ('s2.Y!xG>')))));SELECT rt0.c1 FROM rt99 GROUP BY CASE WHEN (rt99.c2 IN ()) THEN rt0.c2 COLLATE RTRIM WHEN NULL COLLATE RTRIM THEN ((((x'e41a599b')OR(rt0.c0)))OR(rt0.c2)) WHEN (+ (rt99.c0)) THEN CASE WHEN rt99.c0 THEN rt0.c0 END END;SELECT DISTINCT x'' FROM rt0, rt99 WHERE (((((('2財^')*('DnY\n')), (+ (0.27517299899718184)), CAST(NULL AS NUMERIC)))>(((x'' IN ()), ((0.4151525728467135) BETWEEN (x'') AND (x'')), TYPEOF(DISTINCT x''))))) LIMIT -134418319; -- 0ms;
SELECT ALL ((((((((((rt99.c2)LIKE(rt99.c0)))OR((+ (rt99.c2)))))OR('*')))AND(((rt0.c1)&(rt0.c0)))))AND((((rt99.c2, rt99.c0, rt0.c2))<((rt0.c0, rt0.c2, rt99.c0))))) FROM rt0, rt99; -- 0ms;
SELECT (((rt99.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt99.c2, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt99.c0))) COLLATE NOCASE FROM rt0, rt99 GROUP BY (~ ((((rt0.c1))==((rt0.c2))))); -- 1ms;
SELECT DISTINCT (NOT (((rt0.c1)IS(rt99.c1)))), ((((rt0.c0) IS FALSE)) NOT BETWEEN (rt0.c0) AND (((rt0.c0)LIKE(rt99.c0)))), LIKELIHOOD((1406059157 IN ()), 0.31083009808418616) FROM rt99, rt0 WHERE ((((~ (0.2105144017449273)))AND(((0.7694361793051122)GLOB(NULL))))); -- 0ms;
SELECT DISTINCT 0.4881089654679349, x'', (TOTAL(rt0.c1) IN ()), ((((rt0.c1)-(rt99.c1)))LIKE(SUM('-854529848'))), ((rt99.c2) ISNULL) COLLATE BINARY FROM rt0, rt99; -- 1ms;
SELECT DISTINCT ((((rt99.c0)>>(rt99.c0)))<(rt99.c0 COLLATE NOCASE)), COUNT(0Xffffffff8d7ca3ef), NTH_VALUE(CASE WHEN json_valid(rt0.c1) THEN rt0.c1 COLLATE NOCASE WHEN CAST('0.9576606104448171' AS REAL) THEN CASE '0.5057855375136491'  WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)) THEN ((x'')-(rt0.c2)) END, ((0.9416559867927825) ISNULL)) OVER (), ((MIN(rt99.c0)) NOT NULL), ((rt99.c2)%(rt99.c2)) COLLATE NOCASE FROM rt0 WHERE ((((((NULL)OR('-485628643')))OR(0.976449071474825)) IN ()));SELECT ALL NTH_VALUE((((((rt99.c2 IN ()))OR(((rt99.c2)<=(rt99.c0)))))OR(rt99.c1)), LIKELY(DISTINCT rt99.c2) COLLATE RTRIM COLLATE NOCASE) OVER () FROM rt99 WHERE (NULL); -- 0ms;
SELECT ALL 2113838239 FROM rt99, rt0; -- 0ms;
SELECT DISTINCT ((x'bce0')<<((rt99.c0 IN ()))), ((LIKELIHOOD(rt99.c1, 0.08631681952248205))AND(MAX(rt0.c1))), (((NOT (rt0.c0)))>(CAST(NULL AS REAL))) FROM rt99 WHERE (CASE WHEN x'aedc' COLLATE BINARY THEN ((-1.62558815E8)>>(0.4273992945350753)) WHEN CAST(NULL AS REAL) THEN (('')-(NULL)) WHEN TYPEOF(DISTINCT x'2ffb') THEN CAST(NULL AS TEXT) ELSE CASE '1611947142'  WHEN 0xffffffffd25394a0 THEN 0.19046141877034728 END END);SELECT DISTINCT rt0.c2 FROM rt99 GROUP BY (((rt99.c2)) BETWEEN ((0.1599117204178485)) AND ((CASE WHEN rt99.c0 THEN x'' ELSE rt99.c0 END)));SELECT CASE WHEN ((rt99.c1) IS TRUE) THEN CAST(rt0.c0 AS REAL) WHEN ((rt99.c0) BETWEEN (rt99.c0) AND (rt99.c0)) THEN (0.7212089974683069 IN (rt0.c1)) WHEN (NOT (rt0.c1)) THEN ((rt0.c1)IS NOT(rt99.c0)) ELSE ((rt99.c0) IS FALSE) END FROM rt99 WHERE (LIKE((('E|') NOT BETWEEN ('') AND ('')), CASE WHEN NULL THEN 0.4580174509137105 WHEN '771296060' THEN '-954538260' WHEN '\nA' THEN 1174388561 ELSE 0.8014078866173263 END, 'P')) GROUP BY (+ (rt99.c0 COLLATE NOCASE)), CAST((rt99.c0 IN (rt99.c2)) AS INTEGER), (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN ((rt0.c2 IN (rt99.c0))) AND (((rt99.c0)>=(rt0.c0)))), ((((RTRIM(rt0.c0))OR(((rt99.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(json_object('', rt99.c1))), rt0.c0, rt0.c2, ((((((rt99.c2)OR(rt99.c1)))OR(rt0.c2)))&(rt99.c1)) HAVING (((((('0.2105144017449273')OR(rt0.c0)))AND(rt99.c1))) NOTNULL);SELECT DISTINCT ((rt99.c0 IN ()) IN ()) FROM rt0, rt99 WHERE (((((x'') NOT BETWEEN ('') AND ('-318559605'))) NOTNULL)); -- 0ms;
SELECT ((((((rt99.c0)AND(rt0.c2)))AND(x''))) IS TRUE) FROM rt0 ORDER BY CASE x''  WHEN ((rt0.c1)<=(rt0.c2)) THEN 0.5144038586273199 END, (- (((rt0.c0)|(rt0.c2))))  NULLS FIRST;SELECT DISTINCT ((((((((CAST(-313405160 AS NUMERIC))AND(x'')))OR(((rt0.c1)<<(rt0.c1)))))OR(0.9661787566929281)))AND((((rt0.c2, rt0.c2, rt99.c0, 0.11700271551039376, rt99.c1)) BETWEEN ((rt99.c0, rt0.c1, rt99.c1, rt0.c0, rt99.c0)) AND ((rt0.c1, rt0.c0, rt99.c2, rt99.c1, 0.976449071474825))))) FROM rt99 NOT INDEXED;SELECT DISTINCT ((((((((CASE WHEN rt0.c1 THEN rt99.c2 WHEN rt99.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt99.c1 END)OR(rt0.c2)))OR(COUNT(*))))AND(CAST(rt99.c1 AS INTEGER))))AND(CAST(rt99.c2 AS INTEGER))) FROM rt99, rt0; -- 0ms;
SELECT (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt99.c1 END)) AND (((rt99.c0 IN ())))) FROM rt99;SELECT DISTINCT ((((((rt0.c2) NOT NULL))OR(((rt99.c2) BETWEEN (rt0.c1) AND (rt99.c0)))))OR(CASE rt99.c2  WHEN rt99.c0 THEN rt0.c1 ELSE rt99.c2 END)) FROM rt0, rt99 WHERE ('-189325387'); -- 0ms;
SELECT LIKELIHOOD(((rt0.c0)&(rt0.c2)), 0.47279045853320223) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT (- (((rt0.c1) ISNULL))) FROM rt99, rt0 WHERE ((('') NOT BETWEEN (NULL) AND (1.877688795E9)) COLLATE RTRIM) GROUP BY TRIM(DISTINCT NULL, rt99.c1 COLLATE NOCASE) HAVING (((UPPER(0.486784679160735)))<>((GROUP_CONCAT('P.QN +힯Gr')))); -- 0ms;
SELECT DISTINCT AVG(((rt0.c1)>>(rt0.c2))), NTILE((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((rt0.c2)))) OVER (), DENSE_RANK() OVER () FROM rt0 LIMIT -1696854734; -- 0ms;
SELECT ALL (((((rt0.c1))<=((rt99.c1)))) NOT NULL) FROM rt99 NOT INDEXED, rt0; -- 0ms;
SELECT json_extract(((NULL) BETWEEN (rt99.c0) AND (rt99.c1)), rt99.c1 COLLATE RTRIM) FROM rt0, rt99; -- 0ms;
SELECT ((rt99.c1 IN ()) IN ()), COUNT(((rt99.c0) BETWEEN (rt0.c1) AND (rt0.c0))), MIN((- (rt99.c0))) FROM rt0, rt99 WHERE (INSTR(CASE WHEN x'' THEN '183191917' ELSE NULL END, UNLIKELY(x''))); -- 0ms;
SELECT DISTINCT ((CHANGES()) IS FALSE), x'', (('Sq')LIKE(COUNT(x'af33'))), ((CASE WHEN rt0.c0 THEN rt99.c2 ELSE rt99.c1 END)<>(((rt99.c0) BETWEEN (NULL) AND (rt99.c0)))), (- (rt0.c2)) COLLATE RTRIM FROM rt0;SELECT NTILE(TYPEOF(DISTINCT rt0.c0 COLLATE NOCASE)) OVER ( ORDER BY (TRIM(DISTINCT rt0.c1) IN ())  NULLS LAST), (((rt0.c1, rt99.c2, 0.7201400981898434)) BETWEEN ((rt99.c0 COLLATE NOCASE, ((rt0.c0) IS FALSE), ((rt99.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((NULLIF(DISTINCT rt0.c2, rt99.c0), ((((rt99.c1)OR(rt0.c1)))AND(rt0.c0)), AVG(rt0.c0)))), AVG(CASE WHEN rt99.c1 THEN rt99.c2 END) FROM rt0;SELECT CAST(((0X52868243) IS TRUE) AS BLOB) FROM rt99, rt0 WHERE ((((0.42580188626103954))<((x'5363'))) COLLATE RTRIM) ORDER BY COALESCE(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), '-875817984' COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT NULL))OR((((rt99.c0))<>((rt99.c0))))) FROM rt0 WHERE (((((x'c871c3cc')*('-1050388719')))|(((0xfffffffffe9724ec)!=(NULL))))) LIMIT -9223372036854775808 OFFSET 1730320999;SELECT CASE WHEN rt99.c1 COLLATE NOCASE THEN CASE rt0.c2  WHEN rt0.c1 THEN rt99.c0 ELSE rt0.c0 END WHEN ((rt0.c2) NOT BETWEEN (rt99.c1) AND (rt99.c2)) THEN ((0.3930548872029116)||(rt99.c2)) WHEN rt99.c1 THEN x'' END FROM rt0 INNER JOIN rt99 ON (((rt99.c2, rt99.c2, rt0.c1)) NOT BETWEEN (((+ ('鲟M2E')), rt99.c2 COLLATE RTRIM, ((rt0.c2)<(rt0.c1)))) AND ((rt99.c0 COLLATE BINARY, (rt99.c1 IN (rt0.c1)), rt0.c0 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)GLOB(rt99.c1)))||(((rt99.c2)>(rt0.c2)))), GLOB(x'6729', COUNT('Nndk_XS}7')), ((((((((CASE rt99.c1  WHEN rt0.c2 THEN rt0.c2 END)OR(rt0.c0)))AND(((rt99.c2)LIKE(rt0.c0)))))AND(HEX(DISTINCT rt0.c2))))OR(CAST(rt99.c0 AS NUMERIC))), LIKELIHOOD(DISTINCT ((rt99.c0)||(rt99.c2)), 0.736985023021183), (((((((('-2032809295')OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt99.c1)))))AND(rt99.c0 COLLATE BINARY)))AND(((rt0.c2)+(rt0.c2)))))OR(CAST(rt0.c0 AS INTEGER))) FROM rt99, rt0 WHERE ((CASE WHEN '*n8' THEN x'79231336' END IN ())); -- 0ms;
SELECT DISTINCT (+ (CAST(0.8855479680797297 AS NUMERIC))) FROM rt99; -- 0ms;
SELECT ALL CAST(x'8c77' COLLATE NOCASE AS NUMERIC) FROM rt99, rt0 WHERE (COALESCE(((1548289174)|(0.09496669453284823)), '' COLLATE NOCASE, (NULL IN ()), CAST(NULL AS INTEGER))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ('-1924522929' IN ())) FROM rt0 WHERE ((+ (TIME(0.22784446998497732, '类᾵', 0.507043331358462)))); -- 0ms;
SELECT DISTINCT CAST(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) AS BLOB), ((((((((((((HEX(DISTINCT 0.8306166252270312))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt99.c1 ELSE rt0.c0 END)))OR(rt0.c1 COLLATE NOCASE)))OR(((rt99.c2)<(rt99.c0)))))OR(((((rt99.c0)AND(rt0.c1)))OR('1403400846')))))AND(((rt0.c2)>(rt0.c1)))))AND(((rt0.c0)!=(rt0.c0)))), ((((rt0.c0)IS NOT(rt99.c2)))AND(0.6717640500793387)) FROM rt99, rt0 WHERE (0.5948614850006904) GROUP BY ((((((rt99.c1)<(rt99.c1)))AND(x'')))OR((0xffffffff93503fe2 IN (rt99.c2, rt0.c0)))), ((((rt0.c0) BETWEEN (rt99.c2) AND (rt0.c0))) NOT NULL), ((((((rt99.c0)AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN ((((rt99.c0)) BETWEEN ((rt99.c2)) AND ((rt0.c0)))) AND ((+ (rt0.c1)))), (('-99765485') NOTNULL), CASE ((((rt99.c0)OR(rt0.c1)))OR(rt99.c2))  WHEN ((rt0.c1)-(rt99.c2)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c0) NOT BETWEEN (rt99.c0) AND (rt99.c0)) THEN (~ (rt0.c0)) WHEN ((rt0.c2) BETWEEN (rt99.c2) AND (rt0.c0)) THEN ((((rt99.c0)OR(rt99.c1)))AND(rt0.c2)) END; -- 0ms;
SELECT DISTINCT COUNT((rt0.c0 IN (rt99.c1))), ((GLOB(rt99.c1, x''))&(((rt0.c0) NOT NULL))), CAST((NOT (rt0.c2)) AS NUMERIC) FROM rt99;SELECT DISTINCT NTH_VALUE(((((rt0.c1) IS FALSE))OR(((rt0.c2) IS FALSE))), CASE WHEN ((rt0.c1)>>(rt99.c1)) THEN (- (rt0.c0)) WHEN ((((((((rt99.c2)OR(rt99.c1)))AND(rt0.c2)))OR(rt99.c2)))OR(rt99.c1)) THEN (((rt0.c1))>((rt0.c2))) WHEN 0.40753329488356815 THEN CASE NULL  WHEN rt99.c0 THEN rt99.c1 END WHEN rt0.c1 COLLATE RTRIM THEN ((rt99.c0)AND(x'')) WHEN ((rt99.c2)<=(rt99.c2)) THEN (NOT (rt0.c0)) ELSE ((rt99.c0)<<(rt0.c0)) END) OVER () FROM rt99, rt0;SELECT ALL COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(rt0.c2)), CASE rt99.c2  WHEN rt99.c0 THEN rt99.c2 WHEN 0Xffffffff87253fc4 THEN rt99.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt99.c2 THEN rt99.c0 WHEN rt0.c2 THEN rt0.c1 END, rt0.c1 COLLATE BINARY)) AND ((UNLIKELY(DISTINCT rt99.c2), ((rt0.c0)<=(rt0.c2)), CAST(rt0.c1 AS NUMERIC)))), ((rt0.c0) BETWEEN (rt99.c1) AND (rt0.c1)) COLLATE NOCASE, ((NULL)<>(NULL)) FROM rt0 WHERE (((CASE 0.8016603845017689  WHEN 0Xffffffffcd10e8c8 THEN '' ELSE 0.06827414233401863 END)>(NULL)));SELECT ALL CAST(CAST(rt99.c2 AS TEXT) AS BLOB) FROM rt0 NOT INDEXED WHERE (((((NULL)IS NOT(0.7571302086641423)))AND((('(BMm4,餡')<=(0.39799243832313347)))));SELECT DISTINCT ((((((((((rt0.c1)GLOB(rt0.c0)))OR(COUNT(rt0.c1))))OR((- (rt0.c0)))))OR(((rt99.c2) BETWEEN (rt99.c1) AND (rt99.c1)))))AND(UNLIKELY(DISTINCT rt0.c2))), CAST(((rt99.c0) ISNULL) AS TEXT), highlight(PRINTF(rt99.c0), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)), ((rt0.c2)&(rt0.c0)), ((-1877365768) NOT BETWEEN (0.976449071474825) AND (rt0.c0))) FROM rt99, rt0 WHERE (((((((((DATE(NULL, NULL, x''))AND((+ (NULL)))))OR(((NULL) NOTNULL))))OR((NULL IN ()))))OR(((0.015572668380992805) BETWEEN ('') AND ('')))));SELECT NULLIF(((rt0.c2)OR(NULL)), rt99.c2) FROM rt99 LIMIT -724390959;SELECT (((rt0.c0, rt99.c2, '1635726154', rt99.c2, rt99.c1)) BETWEEN ((rt0.c0, rt99.c0 COLLATE BINARY, ((((rt99.c0)OR(rt0.c2)))AND(rt99.c1)), rtreenode(rt99.c0, rt0.c0), ((rt0.c2)OR(rt0.c1)))) AND (((rt0.c0 IN (rt99.c2)), ((((rt99.c2)AND(rt0.c2)))OR(rt0.c2)), ((rt0.c0) IS FALSE), ((rt99.c0) IS FALSE), rt0.c1 COLLATE BINARY))) FROM rt0 WHERE (((CAST(0xffffffff9ba6e12a AS BLOB)) NOT BETWEEN (('rzKJ' IN (NULL))) AND ((((((((('1745241214')OR(NULL)))AND(x'')))OR('')))OR(0x4197f150)))));SELECT DISTINCT rt0.c0 FROM rt0, rt99 WHERE (((CAST(NULL AS BLOB)) BETWEEN (CASE WHEN 0xffffffffd011c980 THEN NULL END) AND (((((0x1185efb)OR('am')))AND(0.4634231411109945))))) GROUP BY (+ ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((rt99.c0)<(CAST(rt99.c2 AS BLOB)))) OVER ( ORDER BY 0xffffffff9dd41dad  NULLS FIRST) FROM rt99 WHERE ((json_array_length('') IN ())); -- 0ms;
SELECT DISTINCT (((rt99.c1 COLLATE BINARY))>=((LIKELY(rt0.c0)))) FROM rt99, rt0 WHERE (CASE ('1512935125' IN (NULL))  WHEN '	YjDS|' THEN (('') NOTNULL) WHEN DATE(0.307773070505553, 'lv', -1.050388719E9, '', 'o\ryG+t*a') THEN (((0X6331f7be, NULL, x'', x'', x''))=((0.022174113642412063, 0xffffffff958f0f7c, '-270830745', x'', x''))) WHEN ((x'') NOTNULL) THEN CASE WHEN 'jOho~' THEN NULL END END); -- 0ms;
SELECT DISTINCT ((TYPEOF('0.2927972436379205')) NOT BETWEEN ((~ (rt0.c0))) AND (rt99.c0 COLLATE NOCASE)), CAST(rt99.c2 AS TEXT) COLLATE RTRIM, ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))!=(((rt0.c1) NOT BETWEEN (rt99.c1) AND (rt0.c1)))) FROM rt0, rt99 WHERE ((((0.9778598340686471)) BETWEEN ((CASE WHEN x'f856' THEN '-1823784668' END)) AND (((('1268137068') NOTNULL))))) GROUP BY rt99.c0 HAVING (+ (CAST(rt0.c1 AS NUMERIC))) LIMIT -908306272 OFFSET -1758670988; -- 0ms;
SELECT DISTINCT (((rt0.c2 COLLATE RTRIM, ((rt99.c2)>=(rt0.c0)), COALESCE(rt0.c2, rt99.c1)))<=((CAST(rt0.c1 AS REAL), ((rt99.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (~ (rt0.c1))))) FROM rt0 WHERE ((((x''))<>((x'f1ce'))) COLLATE NOCASE) LIMIT -934000847;SELECT DISTINCT (((('-806158230')<>(rt99.c1)))!=(AVG(rt0.c1))) FROM rt0, rt99 WHERE (((0xffffffffc71ae6ec COLLATE RTRIM) BETWEEN (((1.005928498E9)LIKE('0.06283723676323816'))) AND ((~ ('gL'))))); -- 0ms;
SELECT (TRIM(rt0.c0) IN ()), ((rt0.c0) NOTNULL), ((((rt99.c0))>((NULL))) IN (rt99.c0 COLLATE BINARY)) FROM rt0;SELECT DISTINCT (('1011159829')<>(((((rt99.c0)AND(rt99.c1)))OR('	3')))) FROM rt99 WHERE ((((((NULL)OR('1569916910')))AND(x'')) IN ())); -- 0ms;
SELECT DISTINCT NULL, SUM(CASE WHEN rt99.c1 THEN 0.4244348275019616 END), PERCENT_RANK() OVER () FROM rt0 NOT INDEXED;SELECT CHAR((rt99.c2 IN ())) FROM rt99 WHERE (CAST(CAST(NULL AS BLOB) AS NUMERIC)) LIMIT 1564548207 OFFSET -806461359; -- 0ms;
SELECT ALL COUNT(((rt99.c2) BETWEEN (rt0.c0) AND (rt0.c0))) OVER () FROM rt99, rt0 WHERE (((0x21b4a16f)*(CASE WHEN '-852519566' THEN NULL ELSE 0.5334125412442572 END))); -- 0ms;
SELECT DISTINCT '' FROM rt0, rt99 ORDER BY (((+ (rt99.c2))) NOT BETWEEN (((((rt99.c2)OR(rt0.c0)))AND(rt99.c1))) AND (SQLITE_VERSION()))  NULLS LAST; -- 0ms;
SELECT ALL (((rt99.c1 IN ())) NOT NULL) FROM rt0, rt99 WHERE (TYPEOF(((489434327) BETWEEN (x'') AND (-2.02760198E9)))); -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c1)<(rt0.c0))), TYPEOF(CASE rt0.c1  WHEN 'Uo' THEN rt99.c2 WHEN rt0.c0 THEN rt99.c0 WHEN rt99.c2 THEN rt99.c1 ELSE rt99.c0 END), ((((rt99.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (rt99.c0 COLLATE NOCASE) AND ('h''')) FROM rt99, rt0 ORDER BY rt99.c2 DESC; -- 0ms;
SELECT LEAD(CASE WHEN ((((rt99.c2)OR(rt99.c1)))AND(rt99.c1)) THEN rt99.c1 END, (((~ (rt99.c1)))/(((rt99.c0) IS TRUE))), CASE (+ (rt99.c1))  WHEN (((rt0.c2, rt0.c2, rt0.c2))>=((rt99.c1, rt0.c0, rt99.c2))) THEN ((((((((rt99.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt99.c1)))AND(rt99.c0)) ELSE rt0.c2 END) OVER (), (((rt0.c2) ISNULL) IN ()), NULL FROM rt99, rt0 WHERE (NULLIF(((NULL) NOT BETWEEN ('') AND (NULL)), CASE WHEN NULL THEN NULL END)); -- 1ms;
SELECT CASE WHEN ((rt99.c1)|(rt0.c1)) THEN DATETIME(rt99.c1, rt99.c1, rt99.c0) WHEN ((rt99.c1)/(rt0.c0)) THEN IFNULL(rt99.c1, rt0.c2) WHEN (((rt0.c2, rt99.c2, 0.7012718327778862))<=((rt0.c1, '+r', rt99.c2))) THEN HEX(0.6181866084292259) END FROM rt0, rt99 GROUP BY rt99.c1 HAVING rt99.c0; -- 0ms;
SELECT ALL CAST(rt0.c0 COLLATE RTRIM AS INTEGER) FROM rt99, rt0 WHERE (((NULL COLLATE RTRIM)OR(CAST(0.673679013488733 AS TEXT)))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c2)) FROM rt0, rt99 WHERE (CHANGES() COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (CASE rt0.c1  WHEN x'' THEN rt0.c0 END IN ((~ (rt99.c1)))) FROM rt99 ORDER BY (((((rt0.c0))>((-1414016191)))) NOT NULL)  NULLS LAST;SELECT ALL CAST(MAX(rt99.c0) AS REAL) FROM rt0, rt99 WHERE (CAST(((((x'')AND(0.08943787878346521)))OR(0.8216618716020879)) AS BLOB)); -- 0ms;
SELECT rt0.c0, (((x'') BETWEEN (rt0.c1) AND (rt0.c2)) IN ()), 'o!푢P,Ltf' FROM rt99, rt0 WHERE (CASE 0.9011908529347487  WHEN 0.7541803818661268 THEN (('BG')<=(x'')) WHEN ((0x28cf1601)LIKE(NULL)) THEN ((('', NULL, 107499686))<>((0.5219868836920682, x'', '565485935'))) WHEN CAST(x'bb5bc1e9' AS REAL) THEN ((((x'')OR(x'')))OR(-1077444113)) ELSE (- (x'a8b5')) END) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC))) ASC; -- 0ms;
SELECT STRFTIME(CASE rt0.c0  WHEN 'pz' THEN rt99.c1 WHEN rt99.c2 THEN '' WHEN rt0.c2 THEN rt99.c2 END, IFNULL(rt99.c1, rt0.c1), CASE WHEN rt0.c0 THEN rt99.c2 ELSE rt0.c2 END) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT SUM(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END) FROM rt99, rt0 WHERE (((CAST('Hn{&^vb' AS BLOB)) NOTNULL)); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt99 LIMIT -2042475228;SELECT ALL json_array_length(((rt0.c2)%(rt99.c2))) FROM rt0 WHERE (CASE WHEN x'' COLLATE RTRIM THEN ((((-2127432269)OR(0.45329390928493674)))OR('1322138875')) WHEN (((x''))==(('?	'))) THEN -2.70830745E8 COLLATE RTRIM WHEN ((NULL) NOT BETWEEN (0xffffffffed032a8b) AND (0.18845095436935078)) THEN ((x'')<(x'1708')) ELSE CASE WHEN NULL THEN x'' END END);SELECT DISTINCT TRIM(((rt99.c0) NOT BETWEEN (rt99.c2) AND (rt99.c0))) FROM rt0, rt99 WHERE ((((- ('0.5593338154364718'))) NOTNULL)) ORDER BY ((((((((rt0.c2 COLLATE BINARY)AND(((rt0.c2)>(rt0.c0)))))AND(((rt0.c0)LIKE(rt99.c0)))))AND((~ (rt99.c2)))))OR(rt0.c1 COLLATE BINARY)) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((+ (rt99.c2)) IN ()) FROM rt99; -- 0ms;
SELECT (- (rt0.c1)), LOWER(DISTINCT json_array_length(rt0.c0, rt99.c1)), rt0.c2 FROM rt99, rt0;SELECT DISTINCT ((((rt0.c1) IS FALSE))-(((rt99.c0) ISNULL))) FROM rt0, rt99 WHERE (((0xffffffffbd7467f5 IN ()) IN ())); -- 0ms;
SELECT ((CAST(6.23950048E8 AS NUMERIC)) ISNULL) FROM rt0, rt99 WHERE ((~ (x'')) COLLATE NOCASE); -- 1ms;
SELECT LTRIM(HEX(rt0.c0), NULL COLLATE BINARY) FROM rt99, rt0 WHERE (CASE LOWER(DISTINCT 0Xfffffffff7fcf071)  WHEN NULL THEN 0X58e2802c COLLATE NOCASE END) UNION SELECT DISTINCT (((rt0.c0 IN ()))IS NOT(((rt0.c2)<(rt99.c0)))) FROM rt0;SELECT '' FROM rt0, rt99; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)AND(rt99.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt99.c0)))+((((rt99.c1))<>((rt99.c1))))) FROM rt99;SELECT DISTINCT rt99.c0 FROM rt0, rt99; -- 0ms;
SELECT ALL (((((rt0.c2))<((rt99.c2))))<(COUNT(rt99.c1))) FROM rt99, rt0 WHERE ((((((('hxM%') NOT NULL))AND(LIKELIHOOD(DISTINCT x'', 0.6723487219165464))))OR(CASE 0.0  WHEN '' THEN 1232325862 WHEN x'2c16' THEN 0.6299531928957743 WHEN 'ﬨB*' THEN 'x5' END))); -- 0ms;
SELECT DISTINCT AVG(((rt99.c2)>>(rt99.c1))) OVER () FROM rt0, rt99 WHERE (0.6925009714091307); -- 1ms;
SELECT ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt99.c2 THEN rt99.c2 WHEN NULL THEN rt0.c0 END) NOT NULL) FROM rt0, rt99 WHERE (((0.4630631525466974 COLLATE NOCASE)+((((''))<=((0.997541441983126)))))); -- 0ms;
SELECT ALL CASE WHEN ((rt99.c1) NOT BETWEEN (NULL) AND (rt99.c1)) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2) ISNULL) END FROM rt0;SELECT ((CASE WHEN rt0.c0 THEN rt99.c0 ELSE rt0.c1 END)<<(NULL)) FROM rt99 LIMIT -766274400 OFFSET -2127432269;SELECT ALL (+ (COUNT(rt0.c0))), json_valid(CASE rt0.c2  WHEN rt99.c0 THEN rt99.c2 WHEN rt0.c2 THEN rt99.c2 WHEN rt0.c0 THEN rt99.c0 END), (- (rt0.c2)), SUM(((rt0.c0) BETWEEN (rt0.c2) AND (rt99.c0))) OVER (), ((0.16108192442647007) NOT BETWEEN (GROUP_CONCAT(rt99.c1)) AND (rt0.c2)) FROM rt99, rt0 WHERE (((((((((CAST(0.33103349639267154 AS BLOB))AND((4.89434327E8 IN ('0.1981871640858477')))))OR((((('0.4881089654679349')AND('0.11700271551039376')))AND(0.1487502977606957)))))OR((~ (x'2c6a')))))OR((((x'ac03')) NOT BETWEEN ((0.47526011433601334)) AND ((0.19046141877034728)))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt99.c1) BETWEEN (rt99.c2) AND (rt99.c1)) THEN ((rt0.c0) IS TRUE) END, rt0.c1 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM, ((((((rt99.c0)OR(rt0.c0)))OR(rt99.c2))) BETWEEN ((NOT (rt0.c0))) AND (COUNT(rt0.c0))) FROM rt99 WHERE (CASE WHEN (- (1934742513)) THEN ((NULL)IS(x'')) WHEN ((('w9')) NOT BETWEEN ((0Xffffffffb8db4151)) AND ((NULL))) THEN (('ok')>>(NULL)) WHEN CAST(NULL AS NUMERIC) THEN (((((((('FALSE')OR(x'8352')))AND(0Xffffffffe3fedeb5)))OR(x'')))OR(x'24f25900')) ELSE (('-1050388719') NOT BETWEEN ('?-') AND (0.6633709640162148)) END);SELECT ALL CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt99.c1)) THEN CAST(rt99.c1 AS NUMERIC) WHEN CAST(rt0.c0 AS INTEGER) THEN UNLIKELY(DISTINCT rt0.c2) WHEN CAST(0.23081414184399174 AS TEXT) THEN CAST(rt0.c2 AS BLOB) ELSE (~ (rt0.c1)) END FROM rt0 WHERE ((((((('1966727319') NOT NULL))OR(((x'') NOT BETWEEN (-8.54529848E8) AND (NULL)))))AND((((1664219070, '0.7541803818661268', '')) NOT BETWEEN ((NULL, 288078672, '')) AND ((x'', x'', '-1305582806'))))));SELECT DISTINCT ((((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))+(x'')), rt99.c2 COLLATE BINARY, CAST(rt99.c2 COLLATE BINARY AS INTEGER) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT (- (2.072296382E9)) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT ((((rt99.c0) BETWEEN (rt0.c0) AND (rt99.c0))) NOT BETWEEN ('9/ꬠ肃9SD') AND ((~ (rt99.c0)))) FROM rt0 WHERE (((0.39728879720915977 COLLATE NOCASE) IS TRUE));SELECT DISTINCT UPPER(DISTINCT CAST(rt0.c1 AS NUMERIC)) FROM rt99, rt0 WHERE (((0.47442836138934064) ISNULL) COLLATE BINARY) ORDER BY CASE WHEN CASE rt99.c2  WHEN rt0.c0 THEN rt99.c1 END THEN ((rt99.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) ELSE json_valid(rt0.c0) END  NULLS FIRST; -- 0ms;
SELECT CASE WHEN ((rt99.c0) IS FALSE) THEN ((rt99.c0) NOT NULL) ELSE ((rt0.c1)-(rt99.c1)) END FROM rt99, rt0 WHERE (((('+\r\n')) BETWEEN ((CAST(1591863054 AS INTEGER))) AND (((+ (NULL)))))); -- 0ms;
SELECT ((rt0.c0) IS FALSE) COLLATE RTRIM, 'rx?xslw6', ((rt99.c0) ISNULL) COLLATE RTRIM FROM rt0, rt99 WHERE (CAST(((0.22534807058806805)*('S0vJ	ox')) AS NUMERIC)); -- 0ms;
SELECT ALL (((((rt99.c1)IS NOT(rt0.c1))))<=((((rt0.c0)<(rt0.c1))))) FROM rt0 WHERE ((((((NOT (516937647)))AND(((NULL)-('fU	e')))))OR('256287044' COLLATE BINARY))) LIMIT 531187517 OFFSET -1403249827;SELECT DISTINCT TOTAL_CHANGES(), ((((-134418319)LIKE(rt99.c0)))<(((((((((rt99.c2)AND(rt99.c0)))AND(rt0.c0)))OR(rt99.c2)))OR(rt0.c2)))), ((((((((rt0.c0)OR(rt0.c2)))AND(rt99.c2)))AND((NOT (rt0.c1)))))AND(rt99.c1)) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT rt99.c0 FROM rt0, rt99 ORDER BY (((CAST(0Xffffffffcba618ce AS REAL)))=((((rt99.c2) BETWEEN (rt0.c1) AND (rt99.c1))))) DESC LIMIT -856791626 OFFSET 414777247; -- 1ms;
SELECT ALL CASE (NOT (rt0.c0))  WHEN (rt99.c1 IN ()) THEN ((rt0.c1)<(rt99.c1)) END FROM rt0 WHERE (0Xffffffffc4223ffb) ORDER BY (+ ((((rt99.c2, rt0.c2, rt99.c0))<((rt0.c1, rt99.c1, rt99.c0))))) ASC;SELECT ALL '28300819' FROM rt0, rt99 LIMIT -2087944528 OFFSET -1087005709; -- 0ms;
SELECT DISTINCT ((((CAST(rt99.c2 AS REAL))AND(ABS(0.09818568643483994))))AND(((rt0.c1) ISNULL))) FROM rt0, rt99 WHERE (CAST((NULL IN ()) AS REAL)); -- 0ms;
SELECT ALL IFNULL(DISTINCT (rt0.c2 IN ()), rt0.c0), NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt99.c2) AND ('f㤛K')), SUM(rt99.c1)), (((((rt99.c0 IN ()))AND(rt99.c2 COLLATE BINARY)))AND((- (rt0.c2)))) FROM rt0, rt99 WHERE ((- ((~ ('Q0'))))); -- 0ms;
SELECT ALL rt0.c1 FROM rt99, rt0 ORDER BY rt0.c1 DESC; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))) AND ((NULL))), ((((rt99.c2)<(rt0.c2)))OR(CAST(rt99.c0 AS BLOB))), DATETIME(rt0.c1, rt0.c1, rt99.c2, rt99.c2, rt0.c1) COLLATE NOCASE FROM rt0, rt99 WHERE ((~ ((NULL IN ('-1567029988'))))) ORDER BY NULL DESC; -- 0ms;
SELECT ALL GROUP_CONCAT((rt99.c2 IN ())), LENGTH(CASE rt99.c2  WHEN rt99.c2 THEN 0.5948614850006904 END), (((((NOT (NULL)))OR(CAST(rt99.c1 AS NUMERIC))))OR((((rt99.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))), LAG(CAST((((rt99.c1, rt0.c0, rt99.c2))!=((rt99.c2, rt0.c2, rt99.c1))) AS TEXT), NULL, CASE WHEN (+ ('-1093706313')) THEN ((((((((rt99.c0)OR(rt99.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) WHEN ((rt99.c2)GLOB(rt0.c0)) THEN CASE WHEN rt99.c0 THEN rt99.c0 ELSE rt99.c2 END WHEN (+ (rt99.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt99.c2)) END) OVER (), (- (CAST(rt99.c1 AS BLOB))) FROM rt99, rt0 GROUP BY ((rt99.c2) IS FALSE) COLLATE NOCASE COLLATE BINARY, ((((rt0.c1)) BETWEEN ((rt0.c0)) AND (('x㏒'))) IN ()), ((rt0.c2) IS FALSE) COLLATE RTRIM HAVING (((((rt99.c2) NOTNULL)))>((((rt0.c2) NOT BETWEEN (rt99.c2) AND (rt0.c2))))); -- 0ms;
SELECT TRIM(DISTINCT (rt99.c2 IN (rt0.c2)), ((NULL)-(rt99.c0))) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT FIRST_VALUE((+ (rt99.c1 COLLATE BINARY))) OVER () FROM rt99; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt99.c2))+(STRFTIME(rt99.c0, rt0.c2, rt0.c2))), (((((rt0.c0)AND(rt99.c2)))AND(rt0.c2)) IN ()), LAST_VALUE(json_patch(rt99.c0, (rt0.c1 IN ()))) OVER ( RANGE  CURRENT ROW EXCLUDE TIES), ((NULL)>((((rt99.c0)) BETWEEN ((x'1433f497')) AND ((rt0.c0))))), (((rt99.c2)==(rt99.c1)) IN (((rt99.c2) NOT BETWEEN (rt99.c2) AND (rt0.c1)))) FROM rt99, rt0 WHERE ((~ ((('')<(-1106049261))))) ORDER BY (((rt0.c0 IN ())) ISNULL)  NULLS LAST LIMIT 2043334009 OFFSET 599978119; -- 0ms;
SELECT DISTINCT ((((rt99.c0)==(rt99.c1)))OR(rt99.c0)) FROM rt99; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c0 AS REAL) THEN COUNT(rt99.c1) WHEN json_object(rt99.c1, rt0.c1) THEN SUM(rt99.c1) WHEN (((rt99.c0)) NOT BETWEEN ((rt99.c1)) AND ((rt99.c0))) THEN (~ (rt0.c2)) END FROM rt0;SELECT ALL TRIM((rt0.c0 IN ())), LIKELIHOOD((((rt99.c1))<=((rt99.c1))), 0.1599958212579604), CUME_DIST() OVER () FROM rt99, rt0 WHERE (('_4}#ZW}' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT ((- (rt0.c0)) IN ()), (((rt0.c1))!=(((- (rt99.c0))))), (~ (((((rt0.c1)OR(rt99.c1)))AND(rt99.c2)))) FROM rt0 WHERE ((((NULL IN (x'', '-1050388719')))+(((-1846123926)<(x'6efb')))));SELECT GROUP_CONCAT(((rt0.c0) NOT BETWEEN (rt99.c0) AND (rt0.c2))) OVER ( ORDER BY 0.15447751611848826  NULLS LAST, ((((((((((((((((rt99.c0)OR(rt0.c1)))OR(rt0.c2)))AND(IFNULL('iⓩt', rt0.c2))))OR(SQLITE_VERSION())))OR(LIKELIHOOD(DISTINCT rt99.c1, 0.16723246773833966))))AND(HEX(rt0.c0))))OR(((rt0.c0) NOT NULL))))AND((((rt99.c1, x'', rt0.c2)) NOT BETWEEN ((rt0.c1, rt99.c1, rt0.c2)) AND ((rt99.c1, rt99.c2, rt99.c2))))) RANGE BETWEEN  UNBOUNDED PRECEDING AND ((((rt0.c2)!=(rt0.c0)))LIKE(x'')) PRECEDING) FROM rt99;SELECT (NOT (CAST(rt0.c2 AS BLOB))) FROM rt99, rt0 WHERE (CASE WHEN (('-1966849175')|(x'')) THEN ((('')) NOT BETWEEN (('')) AND (('1664219070'))) WHEN ((x'e80a') BETWEEN ('1637553884') AND ('	3')) THEN ((((0.5536514725612138)OR(0.8801070949568576)))AND(x'')) WHEN ((x'0ac8') NOTNULL) THEN ((NULL) NOTNULL) WHEN (~ ('-1567029988')) THEN SQLITE_SOURCE_ID() WHEN ((0.4075323902227356)==(0.5003495258850374)) THEN (('Hn{&^vb') NOT BETWEEN ('') AND (-1.2145972E9)) ELSE CASE 0.6633907356458868  WHEN x'' THEN NULL END END) GROUP BY (NOT (x'a118')), ((CAST(rt0.c2 AS INTEGER)) BETWEEN (LOWER(DISTINCT rt0.c1)) AND (x'')), ((CASE rt0.c0  WHEN rt0.c0 THEN rt99.c2 WHEN rt0.c0 THEN 'Wd\rH/ Y' WHEN rt99.c0 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (rt99.c2 COLLATE BINARY) AND ((- (rt99.c1)))) LIMIT -1549427309; -- 0ms;
SELECT ALL rt0.c2 FROM rt0, rt99; -- 0ms;
SELECT DISTINCT CAST((- (rt99.c1)) AS BLOB) FROM rt99 WHERE (CAST(LOWER('CE矣') AS NUMERIC)) LIMIT 1217418319 OFFSET 1909305762; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS INTEGER) FROM rt0, rt99 GROUP BY '-744634537' ORDER BY rt99.c0 ASC, CASE WHEN CASE WHEN rt0.c0 THEN rt99.c1 WHEN NULL THEN rt99.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN (~ (rt99.c1)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt99.c2) NOT BETWEEN (rt0.c2) AND (rt99.c1)) IN ()) FROM rt0, rt99; -- 1ms;
SELECT (~ (x'047b' COLLATE NOCASE)), ((rt99.c0)OR((((rt99.c0))<((rt99.c1))))), MAX('0.8099557126728667') FROM rt0, rt99 WHERE (((((('1987860158')) NOT BETWEEN ((x'5a1b')) AND ((NULL))))=(((0.8306166252270312)>=(x''))))); -- 0ms;
SELECT DISTINCT ((json_valid(0.7765482762126285))*(((rt99.c1) BETWEEN (rt0.c1) AND (rt0.c1)))), COUNT(((((rt99.c1)AND(rt99.c1)))OR(rt0.c1))) FILTER(WHERE ((((((((((rt99.c0)OR(rt0.c2)))OR(rt99.c0)))AND(rt0.c2)))OR(rt99.c2))) NOT BETWEEN ((NOT (rt0.c0))) AND (CAST(rt99.c1 AS INTEGER)))) OVER (), NTH_VALUE(CASE WHEN ((rt99.c1)||(rt0.c0)) THEN CAST(rt99.c2 AS INTEGER) WHEN (~ (rt99.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN (rt99.c1 IN ()) END, ((((rt0.c1) NOT BETWEEN (NULL) AND (rt99.c1)))<=((('㿢D-F') ISNULL)))) OVER () FROM rt0, rt99 WHERE ((~ (CASE WHEN x'' THEN 0.7079339858402578 WHEN 0.7929478788441057 THEN '1611947142' WHEN 'KSU~uky1\n' THEN '0.4781699486417934' END)));SELECT MAX((rt99.c2 IN (rt99.c2, rt0.c2))) FROM rt0, rt99 ORDER BY x'' DESC  NULLS LAST, (((((rt0.c0, rt99.c2, x'', rt0.c0, rt99.c1))!=((rt99.c0, '0.5593338154364718', rt99.c1, NULL, rt0.c0))))=((- (rt0.c1)))) ASC LIMIT 1001519653 OFFSET 491688559; -- 0ms;
SELECT DISTINCT (((- (rt0.c1))) IS TRUE) FROM rt99 NOT INDEXED, rt0; -- 0ms;
SELECT TOTAL(CASE WHEN rt99.c1 THEN rt0.c0 END COLLATE BINARY) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND TYPEOF(((NULL)%(-1722941283))) FOLLOWING EXCLUDE TIES) FROM rt0, rt99;SELECT DISTINCT CASE WHEN ((rt99.c2)OR(rt99.c1)) THEN ((rt0.c0)IS NOT(rt0.c2)) ELSE CASE rt0.c2  WHEN rt99.c2 THEN rt99.c1 END END FROM rt99 WHERE (((CASE '-838365020'  WHEN NULL THEN '-2122323504' WHEN '-1785786500' THEN NULL WHEN 'AM슕V*j' THEN '-1696854734' ELSE NULL END)IS(CAST(x'' AS BLOB))));SELECT ALL '1817405786' COLLATE BINARY COLLATE NOCASE FROM rt0 WHERE (((('')) NOT BETWEEN (('-2032352806')) AND (('H\rfV'))) COLLATE BINARY); -- 0ms;
SELECT ALL (((+ (rt99.c1)))>=(((((rt99.c1)AND(rt0.c2)))AND(rt99.c0)))) FROM rt99 GROUP BY ((((rt0.c1) NOT NULL)) BETWEEN ((rt99.c2 IN ())) AND (CASE 101287541  WHEN rt99.c2 THEN rt99.c2 END)) HAVING ((((NULL)LIKE(rt0.c2)))<<(((rt99.c1)OR(rt99.c1))));SELECT DISTINCT NULLIF(DISTINCT ((rt99.c0)AND(rt0.c1)), ((rt0.c0) NOT BETWEEN (x'9cfa') AND (rt99.c0))) FROM rt99;SELECT ALL COUNT(*) FROM rt99 WHERE (((((NULL) NOT BETWEEN ('0.7201400981898434') AND (x'')))<=((((((((('1w')AND('')))OR(x'')))AND('Lp\D2Zv')))OR('-257384117'))))); -- 0ms;
SELECT DISTINCT (~ (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND('966956183')))), TOTAL((~ (NULL))), json_quote(((rt0.c2) BETWEEN (rt99.c0) AND (rt0.c1))) FROM rt0 WHERE (CAST(ABS(DISTINCT 0.6523418117194006) AS TEXT));SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))OR(rt99.c1 COLLATE RTRIM)))OR(((rt0.c0)>(rt99.c1)))) FROM rt0, rt99; -- 0ms;
SELECT CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt99.c1)) AS REAL), rt0.c2, ((((rt99.c0) ISNULL)) NOT BETWEEN (AVG(rt0.c1)) AND (x'f067' COLLATE BINARY)), ((((CASE rt0.c0  WHEN rt99.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt99.c2 WHEN x'' THEN rt99.c0 ELSE NULL END)OR((+ (rt99.c0)))))AND(x'af8c')), LOWER(DISTINCT CAST(rt0.c2 AS NUMERIC)) FROM rt99, rt0; -- 0ms;
SELECT ALL ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN (rt0.c1 COLLATE RTRIM, rt99.c0)) FROM rt99, rt0; -- 0ms;
SELECT ALL CASE CAST(0.3953517866535422 AS TEXT)  WHEN rt0.c2 THEN ((rt0.c1) IS TRUE) END, CAST(COUNT(*) AS NUMERIC), ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(((rt0.c1) NOT NULL))))AND(((rt99.c1) NOTNULL))) FROM rt0 WHERE (((CASE WHEN -1120247159 THEN 0.4246757533512505 END) BETWEEN ((x'' IN (0.6954199557883626))) AND (((NULL)%('0.33236477501691297')))));SELECT DISTINCT ((((rt99.c0) ISNULL)) NOT NULL) FROM rt99, rt0 WHERE (((('-875817984')) NOT BETWEEN ((((NULL)&(NULL)))) AND ((((NULL)||('Pjlb>[<')))))); -- 0ms;
SELECT ALL ((((TRIM(rt0.c0))AND(CASE rt0.c2  WHEN rt99.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt99.c1 WHEN rt0.c1 THEN '-1474310446' ELSE rt0.c1 END)))OR(rt99.c0 COLLATE RTRIM)), CAST((((rt99.c0, rt0.c0, rt0.c1))=((rt0.c1, rt99.c1, rt0.c0))) AS TEXT), CASE WHEN CASE rt99.c0  WHEN rt0.c2 THEN 1424921183 END THEN TIME(rt0.c0, rt99.c0, rt0.c0) END FROM rt0 WHERE (((((0.5927194992985143) IS TRUE))/(CAST(x'' AS INTEGER))));SELECT ALL (UPPER(rt99.c1) IN ()) FROM rt99 WHERE (((((((x'')OR(x'6f37')))AND(x'')))<>(-1314691451))) LIMIT 935223658 OFFSET -402667052; -- 0ms;
SELECT ((NULL)<>((((rt0.c0)) BETWEEN ((rt99.c2)) AND ((rt0.c2))))), SUBSTR(((((x'97bf')AND(rt99.c1)))AND(rt99.c1)), CASE 0x5588a647  WHEN rt99.c0 THEN rt99.c1 END), CAST(rt99.c1 COLLATE NOCASE AS TEXT), ((rt0.c1) BETWEEN (((rt99.c1) NOT BETWEEN (NULL) AND (rt0.c1))) AND (((rt99.c0) BETWEEN (rt99.c0) AND (rt99.c1)))), rt99.c0 FROM rt99, rt0; -- 0ms;
SELECT DISTINCT CASE (rt0.c2 IN (rt0.c1))  WHEN (((rt99.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt99.c2))) THEN rt99.c0 COLLATE BINARY END FROM rt0;SELECT DISTINCT ((rt0.c1 COLLATE NOCASE) IS TRUE), COUNT(*) OVER ( ORDER BY ((0.33236477501691297) NOT NULL) COLLATE RTRIM), ((rt99.c0)<=(rt0.c2)) COLLATE NOCASE FROM rt0, rt99; -- 0ms;
SELECT DISTINCT CAST((+ (rt99.c0)) AS REAL) FROM rt99; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>(((rt99.c0) NOT BETWEEN (x'') AND (rt99.c1)))), GROUP_CONCAT(((rt0.c0) NOT NULL)) OVER ( ORDER BY x'1c42' ASC  NULLS LAST), ((((rt99.c1) NOT BETWEEN (rt0.c1) AND (rt99.c0))) BETWEEN (((((rt99.c0)AND(rt99.c0)))AND(rt99.c0))) AND (CAST(rt99.c2 AS INTEGER))) FROM rt99 ORDER BY CASE (rt99.c1 IN (rt99.c1))  WHEN ((((((((rt0.c0)AND(rt99.c1)))AND('1174388561')))AND(rt99.c1)))OR(rt0.c0)) THEN ((rt99.c2)<=(rt99.c2)) END, (((LIKELIHOOD(rt0.c1, 0.15573692408587803), (+ (rt0.c1)), ((((((((((((rt99.c0)OR(rt99.c1)))AND(rt99.c0)))OR(rt99.c2)))OR(rt0.c1)))OR(rt99.c2)))OR('.5O㤍QD ')), ((((rt0.c0)AND(rt0.c2)))AND(rt99.c2)), ((rt99.c2) NOTNULL)))=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt99.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt99.c1 WHEN rt99.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt99.c0 END, LIKELIHOOD(rt99.c2, 0.8763134413059014), '1516782871', (NOT (rt0.c0)), rt99.c0 COLLATE BINARY)));SELECT COUNT(*) FROM rt0, rt99; -- 0ms;
SELECT ALL CAST(CASE WHEN rt0.c2 THEN rt0.c2 END AS INTEGER), (rt0.c2 IN ()), TOTAL(rt99.c1) OVER () FROM rt0 NOT INDEXED;SELECT (((- (rt0.c1))) NOT BETWEEN (((rt0.c0)IS(rt0.c2))) AND (rt99.c2 COLLATE RTRIM)) FROM rt99 WHERE (((((CAST('546974263' AS BLOB))AND(CAST(0xffffffffc7a8e3f7 AS INTEGER))))OR((('247127773') ISNULL)))) GROUP BY CASE rt99.c1 COLLATE RTRIM  WHEN ((rt0.c1)>(rt0.c1)) THEN CAST(rt0.c0 AS REAL) WHEN ((x'') BETWEEN (rt0.c2) AND ('491688559')) THEN MIN(rt99.c0, rt99.c1, rt0.c2, rt0.c0, 2135730011, rt99.c1, rt0.c0, rt99.c2) WHEN TRIM(DISTINCT rt0.c0) THEN ((NULL) IS FALSE) END;SELECT (rt0.c2 IN (rt99.c1)) COLLATE BINARY FROM rt99, rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c1)OR(rt99.c0)))AND('\ra3S')), CASE rt99.c0  WHEN rt0.c0 THEN rt0.c2 END, (((rt0.c0))>((rt0.c2)))))!=(((((rt0.c2, rt0.c1, rt99.c1)) BETWEEN ((rt99.c0, rt0.c0, rt0.c0)) AND ((rt99.c1, rt99.c2, rt99.c0))), ((rt0.c0)>>(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c2 END))) FROM rt0 WHERE (((TYPEOF(0.022174113642412063))>>(RTRIM(x'')))) GROUP BY TYPEOF(DISTINCT (- (rt0.c0))) HAVING (((- (rt0.c1))) BETWEEN (((rt99.c1) NOT NULL)) AND (TOTAL_CHANGES()));SELECT 1469220519 FROM rt0 WHERE (((('l')) BETWEEN ((((NULL) BETWEEN (x'cad7') AND (-2.127432269E9)))) AND ((NULL)))) LIMIT -1989724328; -- 0ms;
SELECT ALL (((rt0.c1)) BETWEEN ((((rt0.c1)AND(rt0.c2)))) AND (((((rt99.c1))<((rt0.c0)))))), ((SUBSTR(rt0.c2, rt99.c2))|(((rt99.c1)<(rt0.c1)))), rt0.c0 FROM rt0 GROUP BY (((rt99.c1)) BETWEEN ((rt99.c1)) AND ((((((rt99.c1)AND(rt0.c2)))OR(rt0.c0)))));SELECT ALL ((((CAST(rt0.c0 AS BLOB))OR(((rt99.c2) ISNULL))))AND(rt0.c1)) FROM rt99, rt0 WHERE (TRIM(DISTINCT (((0xffffffffcbcc1400))<>((''))), CASE WHEN x'5d7a1de5' THEN 0X7bd5b75f WHEN '1276850732' THEN NULL WHEN 0.5325785784808547 THEN 0.31235145172491274 WHEN 2.113838239E9 THEN x'5d0b' WHEN 0.5874162740610096 THEN x'' WHEN 0.7302513733037962 THEN 0.5903476771438079 WHEN NULL THEN '-2141798587' ELSE '-189325387' END)); -- 0ms;
SELECT AVG(('' IN ())) OVER (), CASE WHEN CAST(7.7129606E8 AS BLOB) THEN rt0.c0 END, ((((rt0.c2)AND((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt99.c0))))))AND((((rt99.c1)) NOT BETWEEN ((rt99.c0)) AND ((rt0.c0))))) FROM rt0, rt99; -- 0ms;
SELECT ((((rt99.c0)||(rt0.c2)))&(((rt0.c0) BETWEEN (rt0.c2) AND (rt99.c2)))) FROM rt0, rt99 WHERE (((- (NULL)) IN ())) GROUP BY (~ (NULL)) COLLATE RTRIM HAVING ((((((((((rt99.c2)<=(rt99.c0)))OR((((rt99.c1))!=((rt0.c0))))))AND(((rt0.c0)GLOB(rt0.c1)))))AND(NULLIF(DISTINCT rt0.c0, NULL))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (rt99.c1)))) LIMIT 72203420 OFFSET 1817405786; -- 0ms;
SELECT DISTINCT MAX(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) FROM rt0, rt99 WHERE (CASE NULL  WHEN NULL THEN x'b3a9' ELSE 1.171935901E9 END COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (TRIM(rt0.c2, rt0.c1)) AND (((NULL)%(rt0.c1)))) FROM rt99;SELECT CUME_DIST() OVER (), ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt99.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt99.c1 END)%((NOT (x'')))), (((((rt99.c0))>((rt0.c1))))%(((rt0.c2)>(rt0.c1)))) FROM rt99 WHERE ('');SELECT DENSE_RANK() OVER () FROM rt99 NATURAL JOIN rt0; -- 0ms;
SELECT DISTINCT (((rt99.c1, rt0.c0, rt99.c2)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, (- (rt99.c1)), COUNT(*))) AND ((((rt0.c0) ISNULL), ((rt99.c1)+(rt99.c2)), ((rt99.c2)!=(x''))))), CAST(((rt0.c1)&(rt0.c0)) AS NUMERIC), TOTAL(((rt99.c2)<=(rt0.c0))) OVER () FROM rt99, rt0; -- 0ms;
SELECT ALL (((rt99.c2)) NOT BETWEEN ((((((((((rt99.c0)OR(rt99.c2)))AND(rt0.c1)))AND(rt99.c2)))AND(rt99.c1)))) AND ((((rt0.c1)<=(rt99.c2))))), rt0.c0, TOTAL((rt99.c2 IN (rt0.c2))) OVER () FROM rt0 WHERE (LIKELY('1556941117'));SELECT DISTINCT (((- (rt0.c2)))!=(NULL)) FROM rt99, rt0 ORDER BY rt0.c0 DESC  NULLS FIRST, (((rt99.c0)) BETWEEN ((rt99.c0)) AND ((((rt0.c1)|(rt0.c2))))) DESC  NULLS LAST, ((((x'') IS FALSE))<(-1.62558815E8)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((rt99.c1) BETWEEN (rt99.c2) AND (rt0.c2)) AS INTEGER) FROM rt0, rt99 WHERE ((((1016830044))>=((-273428912))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt99.c0) NOT BETWEEN ((+ (rt0.c2))) AND (NULL)), ((((rt0.c0) IS TRUE)) NOT NULL), CASE WHEN ((rt99.c2)>(rt0.c1)) THEN TYPEOF(rt0.c2) END FROM rt0 WHERE ('710976612');SELECT DISTINCT (((((rt0.c2)) BETWEEN ((NULL)) AND ((1918639392)))) NOT NULL) FROM rt99 WHERE (SQLITE_COMPILEOPTION_GET((('-2032352806') BETWEEN (1935344074) AND (NULL))));SELECT DISTINCT (~ ('푙ǋ㿄B]j')), CAST(rt99.c1 AS INTEGER), 'vM' FROM rt99, rt0; -- 0ms;
SELECT DISTINCT (((~ (rt99.c0))) NOT BETWEEN (((((rt0.c1)AND(' 㿢{IX\nu{\')))OR(rt99.c1))) AND (rt0.c1)), DENSE_RANK() OVER (), (((((('-2061284338')<<(rt0.c1)))OR(rt99.c1)))OR((- (rt99.c1)))), ((rt99.c0 COLLATE BINARY) IS FALSE), (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c1)%(rt0.c0))) AND (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))) FROM rt99, rt0; -- 0ms;
SELECT ALL ((((rt99.c1)<<(rt0.c1)))*(rt0.c0)) FROM rt99 WHERE ((((-1464917558 IN ())) NOT NULL));SELECT NTILE((((rt99.c1)) NOT BETWEEN ((CAST(NULL AS INTEGER))) AND ((((rt99.c1)<(rt99.c2)))))) OVER () FROM rt99;SELECT DISTINCT MAX(CAST(rt0.c0 AS INTEGER)) FROM rt0, rt99 WHERE (((((x'')/(x'0919'))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((((((rt0.c0 COLLATE RTRIM)AND(MIN(rt99.c1))))AND(0.8026484160865599 COLLATE BINARY)))AND(((rt99.c0)+(rt99.c0)))))AND(INSTR(rt99.c2, rt0.c1))), TOTAL(((rt0.c0)IS NOT(0.07899396948394177))), ((((rt0.c0) NOTNULL))<=(rt0.c0 COLLATE BINARY)) FROM rt99, rt0; -- 0ms;
SELECT ALL 0xaeb496d, (TOTAL(rt99.c0) IN ()), MIN(((rt99.c0)-(''))) FROM rt0, rt99 LIMIT 485013479; -- 1ms;
SELECT DISTINCT ((((rt99.c1)OR(rt0.c2)))OR(rt99.c0)) COLLATE BINARY FROM rt99;SELECT GROUP_CONCAT(((rt0.c1)-(rt0.c1))) OVER (), ((((((((((((((rt99.c2)AND(rt99.c1)))OR(x'')))AND(rt99.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt99.c1))) NOT BETWEEN (COUNT(rt0.c0)) AND (((x'') BETWEEN (rt99.c2) AND (rt99.c2)))), (('') NOT BETWEEN (rt99.c2 COLLATE RTRIM) AND (CAST(rt0.c1 AS REAL))) FROM rt99;SELECT DISTINCT ((((((((((rt0.c2)OR(rt99.c1)))OR(rt99.c0)))AND(rt0.c0)))AND(rt0.c0)))&(((NULL) BETWEEN (rt99.c1) AND (x'')))) FROM rt0 GROUP BY rt0.c1;SELECT ALL ((((((rt0.c0)OR(rt99.c2)))OR(rt0.c1)))GLOB(CAST(rt0.c2 AS REAL))), NTH_VALUE((NOT (((rt99.c2)<>(rt0.c1)))), (((((rt99.c0)) BETWEEN ((rt99.c1)) AND ((rt99.c1)))) NOT BETWEEN (-2000896479) AND (((rt99.c1)&(rt0.c0))))) OVER (), (((((rt99.c2))<>((rt99.c0))))||(((rt0.c2) IS FALSE))) FROM rt0, rt99;SELECT DISTINCT ((~ (rt0.c2)) IN ()) FROM rt99, rt0 WHERE (CASE WHEN ((x'') NOT NULL) THEN (((('(E)S7o')OR(0.08943787878346521)))AND(417101583)) WHEN ((NULL) NOT BETWEEN (x'f156') AND (x'bcffc8c1')) THEN (+ (x'f53a')) WHEN (('-1e500')&(0.2927972436379205)) THEN ((NULL) BETWEEN (NULL) AND (0x3ba21d2f)) END); -- 0ms;
SELECT DISTINCT ((0x4fd8bcfe) BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt99.c2))>((rt99.c2))))) FROM rt99;SELECT DISTINCT ((COUNT(rt99.c2))GLOB((rt0.c0 IN (-2.3649044E7)))) FROM rt99, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(NULL AS REAL), 0.3296209788215314)); -- 0ms;
SELECT LOWER(DISTINCT CAST(rt99.c0 AS TEXT)) FROM rt0 WHERE (CASE 1.611947142E9 COLLATE NOCASE  WHEN ((NULL)<<(0.44693402355053846)) THEN ABS(-854529848) WHEN '' COLLATE BINARY THEN CAST('})\nH]' AS TEXT) WHEN ((-414829120)AND(NULL)) THEN ((NULL) NOT NULL) ELSE CASE WHEN 0x71d1a088 THEN '' WHEN NULL THEN 0.688110996243461 WHEN 0x1e288e40 THEN '304976150' END END) GROUP BY (rt99.c0 COLLATE RTRIM IN ()), COALESCE(0.7936367575208146, 0.976449071474825, ((((rt0.c0)OR(rt99.c0)))AND(rt0.c2)), 0.6967589020676692), (((rt0.c2, rt0.c2, rt99.c2)) BETWEEN ((((rt0.c1)%(rt0.c1)), CASE rt0.c1  WHEN rt99.c1 THEN rt0.c0 ELSE rt99.c1 END, '' COLLATE NOCASE)) AND ((NULLIF(rt99.c0, rt99.c2), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt99.c1)), ((rt99.c1) BETWEEN (rt99.c2) AND (rt99.c2))))) HAVING '盅O';SELECT DISTINCT ((CAST(rt99.c2 AS REAL))<<(((rt0.c2)*(rt0.c0)))) FROM rt99, rt0; -- 0ms;
SELECT CAST(((rt99.c1)LIKE(rt99.c2)) AS BLOB) FROM rt0, rt99 WHERE (((((((NULL)OR('\rᴯCZSSw굾')))AND(0.7788795641438255)))&((-1785786500 IN ())))); -- 0ms;
SELECT ALL (((rt99.c1 IN ()))&((NOT (rt99.c0)))) FROM rt0 ORDER BY rt99.c2  NULLS LAST;SELECT DISTINCT NULL, CASE WHEN ((rt99.c2)|(rt0.c0)) THEN CAST(rt0.c2 AS BLOB) ELSE ((((((((rt99.c0)AND(rt99.c0)))OR(rt99.c0)))OR(rt99.c2)))OR(rt0.c2)) END, ((rt0.c2 IN ()) IN (0.3389043302067456, (- (rt99.c2)))), (((((((((((((((('1469220519')AND(rt99.c1)))OR(rt99.c0)))AND(rt99.c1)))OR(rt99.c2)))OR(rt0.c0)))AND((- (rt99.c1)))))AND(CASE WHEN rt0.c1 THEN x'' END)))AND((((rt99.c2))>((rt99.c2))))), CAST(COUNT(rt0.c1) AS TEXT) FROM rt99, rt0; -- 0ms;
SELECT ALL ((rt0.c1) NOT BETWEEN (rt0.c1) AND ((((rt99.c2))=((rt0.c0))))) FROM rt0 WHERE (ABS(DISTINCT (((0Xffffffffd4e2504d))>=((x'6dd2ec5e')))));SELECT ALL (- ((rt0.c0 IN ()))) FROM rt99; -- 0ms;
SELECT ALL rt0.c2 FROM rt0, rt99 GROUP BY (((((rt0.c0, rt0.c1, rt99.c0)) NOT BETWEEN ((rt99.c2, rt0.c1, rt99.c2)) AND ((rt99.c2, rt99.c2, rt0.c0)))) IS TRUE); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER)) FROM rt99;SELECT ((rt0.c2 COLLATE RTRIM)GLOB(0.9708929181359071)), ((((rt99.c2) BETWEEN (rt0.c1) AND (rt99.c2)))!=(COUNT(rt0.c0))), COUNT(*) OVER () FROM rt99, rt0 WHERE ((((((x'001a3bdd', 'i 柵', NULL)) BETWEEN (('1122873220', x'', NULL)) AND ((0X6eb77847, 0.6339357819059953, 0.9862047263761973))))-(CASE WHEN ',n''|>' THEN '-1683562198' END))); -- 1ms;
SELECT ALL CASE WHEN ((rt0.c1)<=(rt0.c1)) THEN COUNT(*) END, CASE WHEN -1106912576 THEN rt99.c2 COLLATE BINARY ELSE rt99.c0 END, TRIM(rt0.c0, rt99.c0) COLLATE BINARY FROM rt0;SELECT ((rt99.c1)<(rt0.c0)) FROM rt99 ORDER BY rt0.c0  NULLS LAST, 1931357879  NULLS FIRST;SELECT ((((x'')/(NULL))) NOT NULL) FROM rt99; -- 0ms;
SELECT ALL ((json(NULL)) NOT BETWEEN (((rt0.c2)IS NOT(rt99.c0))) AND (((((((((rt99.c2)AND(rt99.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))), 0.08632682948991921, (((rt0.c2, QUOTE(rt99.c2), MAX(rt0.c1)))<=((rt99.c2 COLLATE NOCASE, ((((rt0.c0)OR(rt0.c0)))OR(rt99.c0)), rt99.c2 COLLATE BINARY))) FROM rt0;SELECT DISTINCT CAST(rt99.c2 AS BLOB) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt99, rt0 WHERE (CASE ((((x'')OR(x'')))OR('}≝ℜunZi('''))  WHEN ((x'') BETWEEN (x'') AND (x'')) THEN (- ('')) WHEN CAST(NULL AS INTEGER) THEN ((x'') ISNULL) WHEN ((0.801802108509358)>=(0xffffffffe842782c)) THEN CASE WHEN '-189325387' THEN '-1511677698' END END); -- 0ms;
SELECT ALL COUNT(*) FROM rt99, rt0 WHERE (x'4699'); -- 0ms;
SELECT DISTINCT CAST(NULL AS NUMERIC) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT ((((rt99.c2) NOTNULL)) BETWEEN (rt99.c2 COLLATE RTRIM) AND ((rt0.c2 IN (rt99.c2)))), CASE WHEN ((rt0.c2) ISNULL) THEN ((rt0.c2) NOT BETWEEN (rt99.c1) AND ('-134418319')) ELSE (((rt99.c1))=((rt0.c2))) END, (rt99.c2 COLLATE NOCASE IN (CAST(rt99.c2 AS BLOB))) FROM rt0 WHERE ((CAST(x'' AS INTEGER) IN ()));SELECT DISTINCT json_valid((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) FROM rt0, rt99 WHERE (((UNLIKELY('1000480047')) NOT BETWEEN (CAST(x'' AS REAL)) AND (((NULL)LIKE('533366369'))))); -- 0ms;
SELECT ALL (~ (((rt99.c1) ISNULL))) FROM rt0, rt99 WHERE (CASE ((0.34058062116336574) BETWEEN (0.3772012268324981) AND ('1174388561'))  WHEN CASE WHEN x'' THEN 1.635726154E9 END THEN ((x'8351') NOT BETWEEN (0Xffffffffd3272c3e) AND (3.1928334E8)) ELSE (('-1540651028') NOT NULL) END); -- 0ms;
SELECT CUME_DIST() OVER (), rt0.c1, (((rt0.c0)) NOT BETWEEN ((COUNT(*))) AND ((CASE WHEN 1122873220 THEN rt0.c0 END))) FROM rt0 WHERE ((((~ ('0.09496669453284823')))<<(CAST('j018ai㳻I' AS BLOB)))); -- 0ms;
SELECT DISTINCT SUM(((rt99.c1) NOTNULL)) FILTER(WHERE ((((((((rt0.c1 COLLATE RTRIM)AND(((rt0.c0) ISNULL))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND(NULL COLLATE BINARY))) OVER () FROM rt99 WHERE ((NULL IN ())) LIMIT -134418319 OFFSET 1817405786;SELECT ALL CASE WHEN ((((((((rt0.c1)AND(rt99.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt99.c2)) THEN ((rt99.c1) IS FALSE) ELSE ((rt99.c2) NOT BETWEEN (rt99.c0) AND (rt99.c0)) END, MIN(rt99.c2), ((((((((((((((((rt99.c1)AND(rt99.c0)))AND(rt99.c2)))OR(rt0.c0)))AND(rt0.c2)))OR('D')))AND(NULL)))AND((((rt99.c2, rt99.c0, rt99.c1)) NOT BETWEEN ((rt0.c0, '-1877707873', rt0.c1)) AND ((rt0.c1, rt0.c1, rt99.c0))))))AND(((((rt99.c2)AND(rt0.c1)))OR(rt99.c0)))) FROM rt99 WHERE (((((0.24479699145069)=(NULL))) ISNULL)) GROUP BY ((CASE rt0.c2  WHEN x'' THEN rt99.c1 WHEN rt0.c2 THEN rt99.c0 WHEN rt0.c0 THEN 0xfffffffff4b71fb5 END)IS(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) HAVING HEX(rt0.c2) COLLATE BINARY;SELECT DISTINCT CASE WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN LENGTH(rt99.c0) ELSE COUNT(rt99.c1) END, (((((((rt0.c2))<((rt99.c0))))OR(((rt0.c2)GLOB(rt0.c0)))))OR(CAST('?	' AS NUMERIC))), SUBSTR(((((rt0.c1)OR(rt0.c1)))OR(rt99.c0)), (rt0.c2 IN (rt99.c2))) FROM rt0 WHERE ((((LIKELIHOOD(1760641982, 0.7511491881847944), ((x'') NOT NULL), x''))<(((((x'')) NOT BETWEEN ((0.24921740745513077)) AND ((0.4598646968011294))), NULL COLLATE BINARY, CASE ''  WHEN '41281469' THEN '' END))));SELECT CHANGES() FROM rt0 GROUP BY json_valid(((rt99.c1)=(rt99.c0))), CAST(((rt99.c0)GLOB(rt0.c0)) AS NUMERIC), CHANGES();SELECT (((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((UNLIKELY('-1526969894'), ((rt99.c0)+(rt0.c0)), (((rt99.c0))>=((rt99.c2))))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 END, (('489434327')IS NOT(rt0.c1)), 1221121513 COLLATE RTRIM))) FROM rt99 WHERE (CAST((('hu')AND(NULL)) AS NUMERIC));SELECT ALL NTILE((~ (CAST(rt99.c2 AS REAL)))) OVER () FROM rt99 LIMIT 1245392460 OFFSET 1320157736;SELECT DISTINCT QUOTE(((rt0.c1) NOT BETWEEN (rt99.c0) AND (rt99.c0))) FROM rt99, rt0 WHERE (((('-2027601980')) NOT BETWEEN ((LIKELIHOOD('', 0.7241336083164526))) AND ((((NULL)+('1413615834')))))) GROUP BY ((((((rt99.c1)AND(rt99.c2)))AND(rt99.c2)))/((((rt99.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) HAVING UPPER(((rt0.c2)IS NOT(rt99.c2))); -- 0ms;
SELECT ((CASE WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (CAST(rt99.c2 AS INTEGER)) AND (GROUP_CONCAT(rt0.c2))), (((((rt99.c2) NOT BETWEEN (0.3036889575378344) AND (rt0.c0)), ((((((((rt99.c1)OR(rt99.c1)))OR('0.3930548872029116')))AND(rt0.c0)))AND(rt99.c2)), ((((rt0.c2)OR(rt0.c1)))OR(rt99.c2)), TYPEOF(rt0.c0), MIN(rt0.c0)))<=(((rt0.c2 IN ()), ((NULL)GLOB(rt0.c0)), TOTAL(rt99.c1), rt0.c2 COLLATE BINARY, (+ (rt0.c2))))), UNLIKELY(((rt99.c0) IS FALSE)) FROM rt0 WHERE ((((('1975524196') NOT NULL))LIKE((((''))<((NULL))))));SELECT DISTINCT CAST(rt99.c2 AS REAL) COLLATE BINARY FROM rt99 WHERE (((CASE '_	g-'  WHEN -139895297 THEN x'' END)&(((0.8316921343018493) NOTNULL)))); -- 0ms;
SELECT DISTINCT highlight(rt99.c1, rt99.c1, rt99.c1, x'6ffe') COLLATE BINARY, ((((rt99.c0) BETWEEN (rt99.c2) AND (rt0.c1)))-(((rt0.c1) IS TRUE))), MIN((((rt99.c2, 'L?K岁MJㅳ1', rt99.c2))>=((rt0.c1, '~㞡', rt99.c0)))) FROM rt0 CROSS JOIN rt99 ON (((0.9326264747781163)==(rt0.c2)) IN ());SELECT ALL ((((((rt99.c2)&(rt0.c2)))AND(NULL)))AND((NOT (NULL)))) FROM rt99 WHERE (CASE 0.2105144017449273 COLLATE BINARY  WHEN (('1319435297') NOT NULL) THEN ((0.41873411721162646) IS TRUE) WHEN (NULL IN ('')) THEN (((x'', 0.368414204298837, x'')) NOT BETWEEN ((NULL, '', -852519566)) AND (('p', -1.683562198E9, -2025518457))) WHEN (x'' IN (NULL, NULL)) THEN (NULL IN ()) END);SELECT (((rt99.c1 IN (rt0.c2, rt99.c1)))&(((rt0.c2)<=(rt99.c0)))) FROM rt0, rt99 LIMIT 420733754 OFFSET 895407202; -- 0ms;
SELECT ALL MAX(CASE WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt99.c1 WHEN rt99.c2 THEN rt99.c2 END), (((rt0.c1)/(x'')) IN ()), DENSE_RANK() OVER () FROM rt0, rt99 WHERE (CAST(((NULL)*(x'')) AS INTEGER)); -- 0ms;
SELECT ALL ((rt0.c2) NOTNULL), LAG((((rt99.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c1)))) AND ((((rt99.c0) NOTNULL)))), ((((rt0.c1))<((rt99.c2))) IN ()), ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt99.c1)))AND(rt0.c1)))<=(rt99.c0 COLLATE RTRIM))) OVER ( ORDER BY ((x'') NOT NULL) DESC  NULLS FIRST), CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER), NTILE((((rt99.c2)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((0.41266294452939156)))) OVER (), (~ (UNLIKELY(DISTINCT rt99.c2))) FROM rt99, rt0 WHERE ((((+ ('-881088057'))) BETWEEN (CASE x''  WHEN NULL THEN 0.048593184329277506 ELSE NULL END) AND (((x'')GLOB(0.7466716883280545))))); -- 0ms;
SELECT DISTINCT 0.7957066457564783 FROM rt99, rt0 GROUP BY ((rt0.c0) ISNULL) HAVING CAST(((rt99.c2) NOT NULL) AS BLOB); -- 0ms;
SELECT DISTINCT ((((rt99.c0) NOT NULL)) IS TRUE), (((rt0.c0 IN ()))/(IFNULL(rt99.c1, rt0.c1))), CAST(CASE rt0.c1  WHEN rt99.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt99.c1 WHEN rt99.c2 THEN rt0.c1 WHEN rt99.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt99.c2 END AS INTEGER) FROM rt99, rt0 WHERE ((((('')/(x'8b5a'))) NOT BETWEEN ((~ (0.307773070505553))) AND (('0.0053882177126947095' IN ())))) GROUP BY ((((HEX(rt0.c0))OR((((rt99.c2)) NOT BETWEEN ((rt99.c1)) AND ((rt99.c1))))))AND(CAST(rt99.c1 AS INTEGER))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt99.c2 END) FROM rt99;SELECT DISTINCT CASE ((rt0.c0) BETWEEN (rt99.c0) AND (rt99.c2))  WHEN ((rt0.c2)<>(x'')) THEN CASE rt99.c1  WHEN rt0.c1 THEN rt99.c1 ELSE rt0.c0 END WHEN ((rt99.c1) ISNULL) THEN rt99.c0 COLLATE NOCASE WHEN '-479037761' THEN ((rt99.c1) BETWEEN (rt99.c2) AND (rt99.c1)) ELSE ((rt99.c1)IS NOT(rt99.c0)) END FROM rt0 WHERE ((~ (x'b825' COLLATE NOCASE)));SELECT ALL ((0.6261273450919491)&(rt0.c2)) COLLATE NOCASE, json_insert(LIKELIHOOD(rt0.c0, 0.10201748780107467), (((rt99.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), CASE rt0.c0  WHEN rt0.c2 THEN rt99.c1 ELSE rt0.c0 END, rt0.c0 COLLATE BINARY, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))), CAST((((rt99.c2))!=((rt0.c2))) AS REAL) FROM rt99, rt0;SELECT DISTINCT (((((rt99.c0) NOTNULL)))<=((CAST(rt99.c2 AS BLOB)))), CASE WHEN '' THEN ((rt0.c2) NOT NULL) END, rt99.c0, LAG(CASE ((((((((rt0.c0)OR(rt0.c1)))OR(x'')))AND(rt0.c1)))OR(rt0.c2))  WHEN CAST(rt99.c0 AS INTEGER) THEN ((((((((rt0.c2)OR(rt99.c1)))AND(rt0.c1)))AND(rt99.c0)))OR(rt99.c2)) WHEN ((rt0.c0) NOT BETWEEN (rt99.c2) AND (rt0.c1)) THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c0)AND(rt0.c1)))OR(rt99.c1)))OR(rt0.c1)))AND(x'23bd')) THEN (((rt99.c0)) NOT BETWEEN ((rt99.c1)) AND ((rt99.c0))) ELSE (((rt0.c1))<>((rt0.c2))) END, x'', ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt99.c2)))%(NULLIF(rt99.c1, rt99.c2)))) OVER ( ORDER BY CASE WHEN ((rt99.c1) IS FALSE) THEN rt0.c0 WHEN rt99.c2 THEN 0.278253858883844 WHEN CASE rt99.c2  WHEN rt99.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((rt0.c0) BETWEEN (rt99.c2) AND (x'')) ELSE rt0.c2 END), ((((((rt0.c0) IS FALSE))OR(0.38344948701024917)))AND((rt99.c2 IN ()))) FROM rt0, rt99; -- 0ms;
SELECT NULL COLLATE RTRIM FROM rt99 WHERE (((COALESCE('1171935901', 0.11138413403836644))|(CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt99.c2) AND (rt99.c0))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND (((((((((rt99.c1)OR(rt99.c2)))AND(rt99.c0)))OR(rt99.c1)))OR(rt0.c1)))) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT (((- (rt99.c1))) NOT BETWEEN (((((0.8904287097345355)AND(rt0.c1)))AND(rt99.c2))) AND (NULL)), COUNT((NULL IN ())) COLLATE NOCASE, (rt99.c1 IN ()) FROM rt99, rt0; -- 1ms;
SELECT ALL TOTAL(json_insert(rt0.c1, rt99.c1, rt0.c0)) FROM rt99, rt0 WHERE (CAST(CAST(1898251699 AS TEXT) AS INTEGER));SELECT DISTINCT SUM(COUNT(((rt99.c0) NOT BETWEEN (rt99.c1) AND (rt99.c2)))) FROM rt99, rt0 WHERE ((((NULL IN ())) NOT BETWEEN (json_patch('0.1981871640858477', -1760876787)) AND (((1319435297) IS FALSE))));SELECT DISTINCT CAST(rt99.c1 AS INTEGER) FROM rt99; -- 0ms;
SELECT SUM(COALESCE(DISTINCT x'', rt0.c2)) FROM rt99 WHERE ((~ (CAST('E|' AS BLOB))));SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((rt99.c2)AND(rt99.c1)))OR(rt99.c0)) COLLATE BINARY DESC), (SUM(rt99.c2) IN (SUM(rt0.c2))), ((CASE WHEN rt0.c0 THEN rt99.c0 WHEN NULL THEN '434969423' WHEN rt0.c0 THEN rt99.c1 ELSE rt0.c1 END) NOT BETWEEN (CASE WHEN rt99.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (rt99.c2 COLLATE BINARY)), (((rt0.c1 IN (rt99.c0))) NOTNULL), (((((((((+ (rt99.c1)))OR(((((((((((((((((rt99.c0)AND(rt99.c0)))OR(rt0.c1)))OR(rt99.c0)))AND(rt99.c1)))AND(rt0.c0)))AND(rt99.c0)))AND(rt0.c2)))OR(rt99.c0)))))OR(565485935)))OR(((rt99.c0) IS FALSE))))OR(CASE rt0.c2  WHEN rt0.c1 THEN -1.549427309E9 END)) FROM rt0;SELECT DISTINCT CASE ((rt99.c1)||(rt99.c1))  WHEN ((((rt0.c0)AND(rt99.c0)))AND(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END FROM rt0, rt99 LIMIT -1644457416; -- 0ms;
SELECT GLOB(MAX(rt0.c2), MAX(rt99.c2)) FROM rt99 ORDER BY (NOT (((rt0.c1)>=(rt0.c1)))) ASC;SELECT rt0.c1 FROM rt0, rt99 WHERE ((('-1116444683') IS TRUE)); -- 0ms;
SELECT ALL ((((((((((rt99.c1) BETWEEN (0.055822808189877504) AND (x'')))OR((((rt99.c2))<((rt0.c2))))))AND(NULL)))AND(x'')))OR(((rt99.c0)GLOB(1635726154)))), (- ((~ (rt99.c1)))), CAST(CASE rt99.c1  WHEN rt99.c1 THEN rt0.c2 ELSE rt0.c2 END AS INTEGER) FROM rt99 WHERE ((((0.6311069539518825)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((json_patch(x'', 0.9593494098851209)))));SELECT ALL COUNT(*) FROM rt99 WHERE (CASE WHEN (0Xf573d48 IN ()) THEN CASE '626177681'  WHEN 0.5772482698908681 THEN 0.7588624421745543 ELSE '0.39799243832313347' END WHEN (NOT ('-588697103')) THEN (((0.775141895213866))<=((0.8080263466043113))) WHEN CASE WHEN x'' THEN '183191917' END THEN ('1533970798' IN ()) ELSE '-1191808745' END); -- 0ms;
SELECT SUM(((rt0.c1)%(rt99.c2))) OVER ( ORDER BY CASE WHEN '' THEN ((rt99.c0)IS(x'')) WHEN rt0.c1 THEN ((rt99.c2)+(rt0.c1)) WHEN ((rt0.c2)>>(rt0.c2)) THEN ((rt0.c1) IS TRUE) END DESC RANGE  CURRENT ROW) FROM rt0 WHERE ((((('0.9603432925590628' COLLATE BINARY)OR(json_remove(0.1766159913926627, 0.16892319463357008))))OR((NOT ('')))));SELECT DISTINCT '771296060' FROM rt0, rt99; -- 0ms;
SELECT CAST(NULL COLLATE NOCASE AS BLOB), AVG((((rt0.c2, rt99.c2, rt0.c1))<=((rt0.c2, rt99.c1, rt0.c0)))) COLLATE RTRIM, 0.9474709115483287 FROM rt99 WHERE ((NOT (((0.852595014326376) IS FALSE))));SELECT ALL ((((rt99.c2)>=(rt99.c1))) NOT BETWEEN (PRINTF(rt0.c1)) AND (CAST(rt0.c2 AS INTEGER))) FROM rt0, rt99 WHERE (((((((NULL)IS NOT(NULL)))OR((NULL IN (NULL, NULL)))))OR(HEX(0.48794834584231805)))) GROUP BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt99.c1)))<(((rt0.c2)<=(rt99.c1)))), (((rt0.c0)||(rt99.c2)) IN ()), CASE (rt99.c1 IN ())  WHEN rt0.c2 THEN ((rt0.c0) BETWEEN (rt0.c2) AND (NULL)) END HAVING CASE WHEN rt99.c1 THEN ((((((((rt99.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END END; -- 0ms;
SELECT DISTINCT ((rt99.c0)&((rt99.c2 IN ()))), rt0.c2, (((-3.18559605E8))<=((((((rt0.c0)AND(rt0.c2)))OR(rt99.c0))))) FROM rt0;SELECT ALL COUNT(*) OVER () FROM rt99, rt0 WHERE (LIKELY(CAST(-1146924657 AS REAL))) LIMIT -1214597200; -- 0ms;
SELECT CASE WHEN PRINTF(rt99.c0) THEN 0.7560307122628935 ELSE NULLIF(DISTINCT rt0.c2, rt99.c0) END FROM rt0 LIMIT -657237039;SELECT DISTINCT ((GROUP_CONCAT(rt99.c1))&(CASE rt99.c0  WHEN rt99.c2 THEN rt99.c1 WHEN rt0.c1 THEN rt99.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt99.c1 END)), rt0.c2, ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c0) BETWEEN (rt99.c1) AND (rt0.c0))) AND (INSTR(rt99.c1, rt99.c2))) FROM rt0, rt99 WHERE (((NULL)%(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c2) NOTNULL)) FILTER(WHERE (((rt0.c1)) BETWEEN ((rt0.c0)) AND (('-1469937964')))) OVER () FROM rt0 WHERE (CASE -526439104  WHEN 0.9625790861608616 COLLATE BINARY THEN (('-328559762') NOT BETWEEN (NULL) AND ('xh')) END) ORDER BY ((0X685a61a2) NOT NULL); -- 0ms;
SELECT COUNT(*) OVER (), SUBSTR((rt99.c0 IN ()), rt99.c0), rt99.c2 FROM rt99, rt0 WHERE (((((((969723227)AND(x'ff5eab40')))AND(0.8668504905010133))) BETWEEN (CAST(NULL AS TEXT)) AND ('366675407'))); -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN rt0.c2 THEN rt0.c2 END)), ((((((((((((((((((-738136692)OR(rt0.c0)))OR(rt99.c1)))AND(rt0.c2)))AND(rt99.c2)))OR(rt99.c2)))OR(rt0.c2)))AND(NULL)))AND(rt99.c1))) NOTNULL), CAST(((rt0.c1)>>(rt99.c0)) AS INTEGER), GROUP_CONCAT(CASE WHEN rt99.c2 THEN rt0.c2 ELSE rt99.c0 END), rt0.c2 FROM rt99, rt0; -- 0ms;
SELECT DISTINCT ((rt99.c1) IS FALSE) COLLATE NOCASE FROM rt99, rt0; -- 0ms;
SELECT ALL rt99.c0, CASE WHEN ((rt99.c0)<(rt0.c2)) THEN COALESCE(x'', rt99.c1) END, COUNT((rt99.c1 IN ())) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP) FROM rt99, rt0 WHERE ((((~ (0.9143857196768586))) ISNULL)); -- 0ms;
SELECT ALL CASE WHEN (NOT (0.3930548872029116)) THEN ((rt99.c1) BETWEEN (x'') AND (rt99.c1)) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1)=(rt99.c2)) WHEN ((rt0.c2) NOT NULL) THEN (rt99.c0 IN ()) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END FROM rt0, rt99; -- 1ms;
SELECT DISTINCT CAST(((((rt0.c2)OR(rt99.c1)))AND(rt0.c2)) AS TEXT), CASE MAX(rt99.c1)  WHEN ((((rt0.c1)OR(NULL)))OR(0x339242f7)) THEN rt0.c2 WHEN (((x''))<((rt99.c0))) THEN ((rt0.c1)LIKE(rt0.c1)) WHEN CAST(rt99.c2 AS TEXT) THEN (rt0.c0 IN (rt99.c1)) ELSE (rt0.c2 IN ()) END, ((((((rt0.c0)AND(rt99.c0)))OR(rt99.c0))) ISNULL) FROM rt99, rt0 WHERE (((('-333245601', x'', '')) BETWEEN ((CAST('' AS NUMERIC), json_array(x'', '-1628290747', NULL, '-515049186'), NULL)) AND ((((NULL)-(-2127432269)), (((x'', '0|', 171040021)) BETWEEN ((-2.032352806E9, 'g]', NULL)) AND ((0.6224609907245734, '459415373', NULL))), 1.312653443E9)))); -- 0ms;
SELECT ALL ((rt0.c0 COLLATE BINARY)==((- (rt0.c2)))) FROM rt0, rt99 LIMIT 1798822112 OFFSET -1884052150; -- 0ms;
SELECT (((CAST(rt0.c1 AS REAL), (((rt0.c1))<((rt99.c0))), ((((((((rt0.c1)OR(rt99.c0)))AND(rt99.c0)))AND(rt0.c1)))AND(rt0.c2))))<(('Z|', ((rt99.c2)<=(NULL)), LIKELY(DISTINCT rt99.c1)))), ((+ (rt0.c0)) IN ()), x'' FROM rt0, rt99 WHERE (CAST(NULL AS INTEGER)); -- 0ms;
SELECT ((((((((PRINTF(rt99.c2, rt0.c1, rt99.c2, rt0.c0, rt0.c0))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt99.c0))))))AND(((((rt0.c1)AND(rt99.c1)))AND(rt0.c2)))))AND(((rt99.c2)AND(rt0.c1)))))OR((rt0.c0 IN ()))), CAST(rt99.c2 AS BLOB), (NOT ((rt99.c0 IN (rt0.c0)))) FROM rt99, rt0 LIMIT -699907274 OFFSET -1762627370; -- 0ms;
SELECT 0X458078e1 FROM rt0, rt99; -- 0ms;
SELECT DISTINCT rt99.c1, CASE WHEN ((rt99.c0) NOT BETWEEN (rt0.c1) AND (rt99.c0)) THEN COUNT(rt99.c1) WHEN ((rt0.c1)<<(rt99.c2)) THEN ((rt99.c0)>(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt99.c0) AND ('1005928498')) THEN (rt99.c0 IN (rt0.c0)) END, (((((rt0.c0 IN ()))OR(((rt99.c1)<(x'')))))OR((+ (rt0.c0)))) FROM rt99, rt0 WHERE ((((('-1050388719', x'', 0.8874456500781738)) NOT BETWEEN ((NULL, '272313569', '-1549427309')) AND ((0.8881878234596626, NULL, NULL))) IN ())) INTERSECT SELECT DISTINCT TOTAL((((rt99.c2))<((rt99.c0)))), CASE WHEN TYPEOF(DISTINCT rt0.c1) THEN rt0.c0 WHEN ((rt0.c0)AND(rt99.c2)) THEN rt0.c1 COLLATE RTRIM WHEN (('-1921143496') IS FALSE) THEN rt0.c2 COLLATE BINARY ELSE (((rt99.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END, RANK() OVER () FROM rt0, rt99 WHERE (((x'8cee')GLOB(x'')) COLLATE RTRIM) GROUP BY CAST(rt99.c0 AS BLOB), ((((((rt0.c2)<=(rt99.c1)))AND(((rt0.c0) NOT NULL))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))), (~ (CAST('272313569' AS BLOB))); -- 1ms;
SELECT CASE WHEN rt0.c1 THEN ((rt99.c0)<<(rt99.c0)) WHEN GLOB(0.7181482461153386, rt99.c1) THEN ((((rt99.c2)OR(rt0.c1)))AND(rt0.c1)) WHEN SUM(rt99.c0) THEN ((rt99.c0) BETWEEN (rt99.c1) AND (rt0.c1)) ELSE rt99.c0 END FROM rt0;SELECT ALL PERCENT_RANK() OVER (), (((rt99.c2)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND ((STRFTIME(rt0.c2, rt99.c1, rt99.c0, rt99.c1, rt99.c2)))), (((rt99.c0)) NOT BETWEEN ((CAST(rt99.c1 AS INTEGER))) AND ((((-31380091) BETWEEN (rt99.c2) AND (rt0.c1))))) FROM rt99, rt0; -- 0ms;
SELECT (- (((rt99.c2) BETWEEN (rt0.c2) AND (rt99.c1)))) FROM rt0, rt99 WHERE (((((0.9637125848099519) IS FALSE)) NOT BETWEEN ((4.91688559E8 IN ())) AND (CAST(x'' AS NUMERIC)))); -- 1ms;
SELECT ALL rt99.c1 COLLATE RTRIM, rt99.c1, ((((rt99.c2) BETWEEN (rt99.c2) AND (rt0.c0))) IS FALSE) FROM rt0;SELECT DISTINCT '-223281181' FROM rt0 WHERE (LOWER(DISTINCT ((NULL) IS FALSE))); -- 0ms;
SELECT ABS(DISTINCT PRINTF(rt99.c1)), (~ (rt99.c0 COLLATE RTRIM)), NTILE(0Xfffffffffcd01e08) OVER ( ORDER BY ((((rt99.c2) NOT NULL)) IS TRUE) DESC  NULLS LAST, (NOT (((rt99.c0)AND(rt0.c2))))) FROM rt99, rt0 GROUP BY 0.2672549965919627 HAVING (((((((rt0.c0, rt0.c0, rt0.c1))<=((rt99.c0, 0.3239942536596181, rt99.c1))))AND('-2087944528' COLLATE NOCASE)))OR(((NULL) NOT BETWEEN (rt99.c1) AND (rt99.c1)))); -- 0ms;
SELECT ALL (((- (rt99.c1))) NOT NULL) FROM rt99 WHERE (CASE 0.41961755169708514  WHEN '' THEN '-1921143496' END COLLATE BINARY); -- 0ms;
SELECT ((rt99.c2 COLLATE RTRIM)*((('1877688795')GLOB(rt0.c0)))), ((HEX(rt0.c1)) NOTNULL), ((((rt0.c1)>=(rt99.c0))) IS TRUE), 0.6812533058319119, ((((rt0.c2))>=((rt0.c2))) IN ()) FROM rt0, rt99 WHERE (RTRIM(CAST(x'' AS REAL))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) BETWEEN (((rt99.c2) NOT NULL)) AND (rt99.c0 COLLATE BINARY)) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)/(rt0.c0)) AS REAL) FROM rt0 WHERE (((((x'') NOTNULL))<((-286686081 IN ())))) LIMIT -507373710; -- 1ms;
SELECT DISTINCT (- ((rt99.c0 IN (rt99.c2, rt99.c0)))) FROM rt99, rt0 WHERE (((((NULL) NOT NULL))==('혩w\rqUzu' COLLATE BINARY))) GROUP BY CASE '392775842'  WHEN ((rt0.c0) NOTNULL) THEN rt0.c0 COLLATE RTRIM ELSE (((rt0.c2, rt99.c0, rt99.c0)) BETWEEN ((rt99.c2, rt0.c0, NULL)) AND ((NULL, 0.7449885113787205, rt99.c2))) END HAVING rt0.c0; -- 0ms;
SELECT DISTINCT ((((rt0.c2 IN ())))<=((((rt99.c1)/(rt99.c0))))), rt0.c2, CAST(((rt0.c0) NOT BETWEEN (rt99.c0) AND (rt0.c2)) AS TEXT) FROM rt99, rt0 WHERE (((((0.6895714629603032 IN (0.7793009134228022))))>(((((x'67eb')) NOT BETWEEN ((-363930844)) AND ((''))))))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c0) IS FALSE)) OVER () FROM rt99, rt0; -- 0ms;
SELECT rt99.c0 FROM rt0;SELECT DISTINCT rt99.c0 FROM rt0, rt99 WHERE (((((((((((x'4ad5')AND(x'')))OR('68635048')))AND('-1683562198')))AND(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT rt99.c1 FROM rt99 WHERE (CAST(x'' AS NUMERIC)); -- 0ms;
SELECT ALL CASE CAST(rt0.c2 AS INTEGER)  WHEN (((rt0.c1)) BETWEEN ((rt99.c1)) AND ((rt99.c0))) THEN SUM(rt0.c0) WHEN UPPER(rt0.c2) THEN 0.3454883021908991 WHEN ((rt99.c0) BETWEEN ('I[8dnV5#') AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM ELSE ((x'')<<(rt99.c2)) END FROM rt99, rt0 WHERE ((~ (((x'')*(NULL))))); -- 0ms;
SELECT DISTINCT (rt99.c1 IN ()) COLLATE RTRIM FROM rt99, rt0; -- 0ms;
SELECT ((((rt99.c1) IS FALSE)) IS TRUE) FROM rt99, rt0 WHERE ((NOT (((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT IFNULL('-1823457310', MIN('Q0')) FROM rt99; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt99;SELECT (((~ (rt0.c1))) NOTNULL), (((rt0.c2 IN ())) NOT NULL), ((COUNT(*))LIKE((((rt99.c1)) BETWEEN ((x'')) AND ((rt99.c1))))) FROM rt99, rt0 WHERE (CASE (('#<h&')LIKE(x''))  WHEN CAST('-506731203' AS REAL) THEN (('-204059852')+('-1951037548')) WHEN (- ('-252890380')) THEN ((((0.9576606104448171)OR(NULL)))OR(0.7290189055943211)) WHEN '-1540651028' COLLATE BINARY THEN UPPER(0.12394632825968688) ELSE (- ('-1176736302')) END); -- 0ms;
SELECT ALL (((rt0.c1)&(0.27517299899718184)) IN (MAX(rt99.c2), rt99.c0 COLLATE BINARY)), COUNT(*) FILTER(WHERE NULL) OVER (), COUNT(*) OVER () FROM rt99;SELECT DISTINCT ((((((rt0.c1, 0.3008338702126958, rt99.c2)) BETWEEN ((rt99.c1, 0xffffffff996a9d90, rt0.c1)) AND ((rt99.c2, rt99.c1, rt0.c0)))))==((TRIM(rt0.c0)))), (((rt99.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((MAX(rt0.c0), (((rt99.c1))<=((rt0.c2))), ((NULL)|(rt99.c1)))) AND ((((rt0.c2)IS('783747811')), ((rt0.c1)*(rt0.c1)), CASE rt0.c2  WHEN rt0.c2 THEN 'R\' WHEN rt0.c2 THEN rt99.c0 WHEN rt0.c1 THEN rt99.c0 WHEN rt99.c1 THEN rt99.c2 WHEN rt99.c1 THEN '-1495802729' ELSE rt0.c2 END))), (((('-1683562198') BETWEEN (rt0.c0) AND ('dx'))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((((rt0.c0))>=((rt99.c1))))) FROM rt99, rt0 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN ((('M}l3') ISNULL)) AND (((((0.6853870904102747)OR(0X55431e75)))AND(0.4750586560664911))))); -- 0ms;
SELECT ALL ((((((rt0.c1)<=(rt99.c2)))AND(UPPER(DISTINCT rt99.c1))))OR('')), (+ (((rt0.c1)AND(rt0.c2)))), ((((NULL) NOTNULL)) ISNULL) FROM rt0, rt99; -- 0ms;
SELECT ((1836721072)%((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT x'' FROM rt0, rt99 WHERE (((((((((-1.050388719E9)OR(x'1e38')))OR(NULL)))OR(((('-981108765'))>(('0.8099557126728667'))))))AND(((0.31813499599608186)||(1.966727319E9))))); -- 0ms;
SELECT DISTINCT ((((rt99.c0)>(rt99.c0)))>(rt0.c0 COLLATE NOCASE)) FROM rt0, rt99 WHERE ((((x'', 'c', '*釛ᄽ鐍AIY')) BETWEEN ((((((((((NULL)AND('0.1981871640858477')))OR(x'')))AND(NULL)))AND(NULL)), CAST('1611947142' AS BLOB), CASE WHEN 0.6435874682427702 THEN NULL WHEN x'981c8c86' THEN 0.6433085607983575 WHEN x'' THEN x'' END)) AND ((((0X6b215a31) BETWEEN (x'a079') AND (0.09751182782863699)), -4.12258865E8, ((NULL)IS('-80542838')))))); -- 0ms;
SELECT ALL TOTAL((('1312653443') ISNULL)) FROM rt99 WHERE ((((((19169742))<>(('eB\nhC-jeT'))))<=(((x'') IS FALSE)))) UNION ALL SELECT ALL ((CASE WHEN rt99.c1 THEN rt99.c2 ELSE rt99.c2 END)<<(x'0954')) FROM rt0 WHERE ((((- (0.06149078333922153))) IS TRUE)) LIMIT -775518229;SELECT (NOT (((rt99.c1) NOT BETWEEN (rt0.c1) AND (x'')))) FROM rt0;SELECT rt0.c1 FROM rt0 WHERE (((CAST(0.9140879719260111 AS TEXT)) IS FALSE)) LIMIT -1116444683 OFFSET 1947333408; -- 0ms;
SELECT DISTINCT CAST(NULL COLLATE RTRIM AS NUMERIC) FROM rt0; -- 0ms;
SELECT AVG(x'') OVER () FROM rt0; -- 0ms;
SELECT DISTINCT TIME(COALESCE(rt99.c0, rt0.c2), ((((rt99.c1)OR(rt0.c1)))AND(rt99.c2)), CAST(rt99.c1 AS INTEGER), (('< 8wQBE-') ISNULL), (((rt99.c2, rt0.c0, rt0.c1))>((rt99.c1, rt99.c1, '_?')))) FROM rt99;SELECT DISTINCT rt99.c2 FROM rt99, rt0 ORDER BY ((ROUND(rt99.c2, rt0.c0)) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt99.c0)))) AND ((- (rt0.c2)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL LOWER(DISTINCT CAST(rt0.c0 AS REAL)) FROM rt0, rt99 WHERE ((((0.09019737904066272 IN (0.6087610739948133, NULL))) NOT NULL)); -- 0ms;
SELECT (((((+ (rt99.c0)))OR(x'')))OR((((rt0.c1))<>((rt99.c1))))) FROM rt99 RIGHT OUTER JOIN rt0 ON ((rt0.c1)AND(rt0.c2)) COLLATE RTRIM WHERE ((NOT (((0.9538472997614552)=(NULL))))); -- 0ms;
SELECT ((rt0.c0)<=((rt99.c0 IN ()))) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT (+ (UNLIKELY(DISTINCT rt0.c2))) FROM rt0, rt99 WHERE (((HEX(x'5448'))*(((0.1145906866748515) BETWEEN (0.7795644157922106) AND (0.2105144017449273))))) GROUP BY ((MAX(rt99.c0, rt99.c0)) BETWEEN (CAST(rt99.c2 AS REAL)) AND (((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))), ((((rt99.c0)OR(rt0.c2)))>(LTRIM(''))), x'' COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) IS TRUE)  WHEN (((rt0.c1)) BETWEEN ((rt99.c2)) AND ((rt0.c1))) THEN (+ (rt0.c0)) END FROM rt0 LIMIT 1268137068;SELECT DISTINCT (((rt99.c1, rt99.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) IS TRUE), '1635726154', ((((x'c18f5af6')OR(rt0.c0)))AND(x'e830')))) AND ((((rt99.c1) IS TRUE), x'', (('0.4244348275019616') ISNULL)))) FROM rt0;SELECT DISTINCT (~ (CAST(rt0.c2 AS NUMERIC))) FROM rt0 WHERE ((((0.2959365724266114)<=(x'')) IN ())); -- 0ms;
SELECT CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt99.c0))) THEN (((rt99.c2))<((rt99.c1))) WHEN CAST(rt99.c1 AS NUMERIC) THEN COALESCE(DISTINCT 'wm\n0㩆)䔒', rt0.c0) WHEN ((rt99.c1) NOT BETWEEN (x'') AND (rt99.c0)) THEN ((rt0.c0)IS(rt0.c0)) END, (CAST(rt0.c0 AS INTEGER) IN ()), (((rt99.c1)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c2)))OR(rt99.c2)))) AND ((CASE rt99.c2  WHEN x'' THEN rt99.c0 ELSE rt99.c0 END))) FROM rt99 WHERE ((x'3bc0' COLLATE RTRIM IN ())) ORDER BY ((rt0.c1 IN (rt99.c1)) IN ()), (- (rt99.c0)) COLLATE NOCASE  NULLS LAST LIMIT 324235644 OFFSET 565485935;SELECT DISTINCT (((((rt0.c0 IN ()))AND(((((rt0.c1)AND(rt0.c2)))OR(rt99.c1)))))AND(((rt0.c0) NOTNULL))) FROM rt99, rt0 WHERE ((((((NULL, '1611947142', 0.8442275487307699, NULL, '236935725'))>=(('O', '2127876451', '2004898810', 0.6717640500793387, '70174569'))))>>((-1.567029988E9 IN ())))); -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c1)-(rt0.c2))) FROM rt0, rt99 WHERE (((('183197440')) BETWEEN ((CASE WHEN '1961325223' THEN '123884639' ELSE '-1699559486' END)) AND ((0.5850612284622275)))); -- 0ms;
SELECT ALL AVG((rt0.c0 IN ())) COLLATE BINARY FROM rt99, rt0 WHERE (((((x'dc34d82f')OR(0X73ec67dd))) BETWEEN ((((0.5363400435326278)) BETWEEN ((x'c290')) AND ((0.0053882177126947095)))) AND ('{}f' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((rt99.c0) NOT NULL) IN ()), ((MIN(rt99.c2)) NOT BETWEEN ((+ (rt99.c0))) AND (rt99.c0)), (((rt0.c1)>>(rt99.c0)) IN ()) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT LENGTH(((rt99.c1)IS NOT(rt0.c2))) FROM rt99 WHERE (((((((((PRINTF(678313447))OR((('B')/('1446318692')))))OR(CASE x''  WHEN NULL THEN x'' WHEN '1840025113' THEN '-1293322349' WHEN 'XF{q' THEN NULL WHEN -1312739055 THEN -1796181162 WHEN '\n' THEN NULL ELSE '-1050388719' END)))AND((('1526908079') IS TRUE))))OR(CASE WHEN '' THEN 0.1487502977606957 ELSE x'2973' END)));SELECT ALL (~ (CAST(rt99.c2 AS NUMERIC))) FROM rt99, rt0 NOT INDEXED; -- 0ms;
SELECT ALL (((rt0.c1, rt99.c1, rt99.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (rt0.c1 IN ()), CAST(rt0.c1 AS INTEGER))) AND (((rt99.c0 IN ()), CASE WHEN rt99.c1 THEN rt99.c2 END, ((((rt0.c1)OR(rt99.c1)))AND(rt99.c1))))) FROM rt0, rt99 WHERE (((NULL) IS TRUE)) GROUP BY CAST(((rt99.c1)&(rt99.c1)) AS TEXT) HAVING rt99.c2; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt99.c2), ((((((rt99.c2)OR(rt99.c1)))AND(rt99.c0)))OR((((rt0.c2, '1319435297', rt0.c0)) BETWEEN ((rt99.c1, '5|', rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))), ((rt0.c0)!=((- (rt0.c2)))) FROM rt0;SELECT rt99.c1 FROM rt0, rt99 ORDER BY TRIM(DISTINCT ((rt99.c0) NOT NULL), ((((rt0.c0)OR(rt0.c2)))OR(rt99.c2))) ASC, (((((rt99.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))>(((rt99.c0)<(rt0.c0))))  NULLS FIRST, CAST(((rt0.c2)>>(rt99.c0)) AS BLOB) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((+ ('醜ꁔ')))OR(LIKELY(DISTINCT rt99.c2))) FROM rt0, rt99 WHERE ((CASE WHEN -524606296 THEN 'OX' END IN (((((x'')AND(NULL)))AND(0.1366033668579466)), (('oPLfwl	') NOT NULL)))); -- 0ms;
SELECT DISTINCT (((((rt99.c0)) BETWEEN ((rt99.c1)) AND ((rt0.c2)))) NOT BETWEEN ((NOT (rt99.c2))) AND ((rt0.c2 IN ()))), CAST(((rt0.c2) BETWEEN (rt99.c2) AND (rt99.c2)) AS INTEGER), (((rt0.c2 IN ())) IS TRUE), (LIKELIHOOD(rt99.c0, 0.2323948254975715) IN ()), COUNT(*) OVER () FROM rt0, rt99 WHERE (((((NOT (x''))))!=(((NULL IN (0.14528279944162648)))))); -- 1ms;
SELECT ((CHANGES()) NOT NULL) FROM rt0, rt99; -- 0ms;
SELECT ALL ((rt99.c0)*(rt99.c2)) COLLATE BINARY, TRIM((((rt99.c2)) NOT BETWEEN ((0.33089577561176564)) AND ((rt99.c2)))), (((rt99.c2)IS(NULL)) IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((rt99.c0) NOT BETWEEN (rt99.c2) AND (rt99.c2)))) FROM rt99, rt0 ORDER BY rt0.c0 ASC; -- 0ms;
SELECT ALL CASE WHEN TOTAL(rt0.c2) THEN CAST(rt99.c1 AS REAL) ELSE CASE rt99.c1  WHEN rt99.c0 THEN rt99.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt99.c2 THEN NULL WHEN rt0.c0 THEN rt99.c0 WHEN rt99.c2 THEN rt99.c0 ELSE rt99.c2 END END, (((('-335366410')==(rt99.c0))) IS TRUE), ((((rt99.c0)OR(rt0.c1)))OR(rt99.c1)) COLLATE NOCASE FROM rt99;SELECT DISTINCT ((TOTAL_CHANGES())+(((((((((rt0.c0)AND(rt99.c2)))OR(x'')))AND(rt0.c1)))OR('-2124462933')))) FROM rt99, rt0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT), (((rt99.c2)) NOT BETWEEN ((((rt0.c0)-(rt99.c2)))) AND (((NOT (rt0.c2))))), TOTAL(rt0.c1) OVER () FROM rt0 WHERE (CASE WHEN (+ (NULL)) THEN ((NULL)*(NULL)) ELSE CAST('6Y' AS REAL) END);SELECT DISTINCT AVG(CASE rt99.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt99.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt99.c0 WHEN rt99.c2 THEN rt0.c2 ELSE '895407202' END) FROM rt0 WHERE (((CAST(NULL AS NUMERIC))|(((0.21167499925601918)GLOB(x''))))) GROUP BY rt99.c0;SELECT ALL DENSE_RANK() OVER () FROM rt0, rt99 WHERE ((NOT (((0.8216618716020879)|('-2027601980'))))) GROUP BY rt0.c1 HAVING (- (0.664876546893351)); -- 0ms;
SELECT ((rt99.c0)>(rt99.c2)) COLLATE RTRIM FROM rt99; -- 0ms;
SELECT rt99.c1, (((rt0.c1)) NOT BETWEEN ((NULLIF('[]t', NULL))) AND ((rt0.c0 COLLATE RTRIM))), '0.6181866084292259' FROM rt99 FULL OUTER JOIN rt0 ON ((rt0.c0)>(((rt99.c2) ISNULL))) WHERE (((((NULL)%('-1540651028'))) IS FALSE)); -- 0ms;
SELECT DISTINCT (~ (rt0.c0 COLLATE RTRIM)) FROM rt0 WHERE ((- ((0.7053364549781931 IN ())))); -- 0ms;
SELECT (((rt99.c1)) BETWEEN ((rt99.c1)) AND ((((rt99.c2)AND(rt0.c1))))), ((((CAST(rt0.c1 AS NUMERIC))OR(((rt99.c1) IS FALSE))))AND(((rt0.c2)*(rt0.c2)))), (((((rt0.c2))>=((rt99.c2))))AND(CAST(rt0.c1 AS REAL))) FROM rt99 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (NULL COLLATE BINARY) AND (CAST(x'' AS NUMERIC))));SELECT ALL 0.3395927327238094 FROM rt0 WHERE (-1.82345731E9) LIMIT -2127432269 OFFSET 1374726067; -- 0ms;
SELECT ALL ((CASE WHEN rt99.c2 THEN rt0.c0 ELSE rt99.c2 END) NOT BETWEEN (SUM(rt0.c1)) AND ((rt0.c0 IN (rt0.c0, rt99.c1)))) FROM rt99, rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(rt0.c1) FROM rt99 WHERE (((((0.061695187090118786)IS NOT('1322138875')))IS(CASE WHEN 0.6039930587730599 THEN '256287044' END)));SELECT (rt99.c1 IN ()) FROM rt0 INNER JOIN rt99 ON (((x'77b3') NOT BETWEEN (rt0.c0) AND (rt99.c0)) IN ()) WHERE ('') GROUP BY CASE rt0.c1  WHEN (rt99.c2 IN (rt0.c2, rt99.c0)) THEN ((rt0.c2) BETWEEN ('-854529848') AND (rt99.c2)) WHEN CAST(rt99.c1 AS TEXT) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt99.c2 WHEN rt0.c2 THEN rt99.c2 ELSE rt0.c0 END THEN (((rt99.c0)) BETWEEN ((rt0.c2)) AND ((rt99.c2))) END, ((LIKE(rt0.c2, rt99.c0, 'Y'))IS NOT((rt0.c2 IN ()))), ((((rt99.c1 COLLATE NOCASE)OR('771296060')))OR(rt99.c0)) HAVING (+ (TOTAL(rt99.c0))); -- 0ms;
SELECT DISTINCT (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) FROM rt0; -- 0ms;
SELECT (((rt0.c1)-(rt0.c1)) IN ()), ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))|(((rt0.c0) IS TRUE))), RANK() OVER () FROM rt99, rt0; -- 0ms;
SELECT (~ (((rt0.c0) IS FALSE))) FROM rt0; -- 0ms;
SELECT CAST(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt99.c0)) AS BLOB), CASE WHEN ((rt99.c1) NOT BETWEEN (rt99.c1) AND (rt0.c0)) THEN ABS(DISTINCT rt0.c2) WHEN AVG(rt0.c2) THEN (((rt99.c1))<((rt99.c0))) WHEN ((rt99.c1)>>(rt99.c2)) THEN 0xffffffffc4e72d37 ELSE ((rt99.c2) BETWEEN (rt99.c1) AND (rt99.c1)) END, ((((rt99.c1)|(rt0.c2))) NOTNULL) FROM rt99;SELECT ALL MIN(((0.975045720955074) ISNULL)) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT json_valid(rt0.c2 COLLATE RTRIM) FROM rt0 WHERE ('771296060'); -- 0ms;
SELECT ALL CAST(AVG(rt0.c0) AS BLOB), ((((rt0.c1) NOTNULL)) NOTNULL), rt0.c1 COLLATE BINARY FROM rt99, rt0; -- 0ms;
SELECT DISTINCT MIN(AVG(((rt0.c2)AND(NULL)))), (+ ('1387686616')), (~ (NULL)) FROM rt99 NOT INDEXED WHERE (x'bfca') GROUP BY ((rt99.c0)==(CAST(rt99.c0 AS BLOB))) ORDER BY (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c2)==(rt99.c1)))) DESC, rt0.c0;SELECT DISTINCT (NOT ((((rt0.c2, rt0.c1, rt0.c0))<=((rt0.c1, rt99.c1, rt0.c1))))) FROM rt99, rt0 GROUP BY ((x'')-(((rt99.c0)AND(rt0.c1)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL)) BETWEEN (CASE rt99.c1  WHEN rt0.c2 THEN '*' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt99.c0 ELSE rt0.c2 END) AND (((rt99.c0) IS FALSE))), ((+ (rt99.c2)) IN ()), (((((rt99.c1, rt99.c1, rt99.c0, rt99.c0, rt0.c0))>((rt99.c2, rt0.c0, rt99.c1, rt0.c2, rt99.c2))))%(CASE WHEN rt0.c1 THEN rt0.c2 END)) FROM rt99, rt0 WHERE (((CAST('1276850732' AS INTEGER))<<((NOT (x'd06e'))))); -- 0ms;
SELECT DISTINCT LIKE((('-1930967807')LIKE(rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, '0') FROM rt99 GROUP BY (~ ((((rt0.c2, rt99.c2, NULL, rt99.c1, rt99.c2, rt99.c2, rt99.c2))=((rt99.c2, rt99.c1, rt99.c1, rt99.c2, x'', rt99.c1, rt99.c0))))), INSTR(rt99.c0, CAST(rt99.c1 AS BLOB)), 4.91688559E8;SELECT DISTINCT '', -1218377526, (+ (COUNT(rt0.c2))) FROM rt99 WHERE ((NOT (((-2.3649044E7) ISNULL)))) GROUP BY '', (((((rt0.c0) IS FALSE), ((rt99.c2) IS TRUE), CAST(rt99.c0 AS BLOB), CASE rt99.c2  WHEN rt99.c0 THEN rt0.c2 WHEN rt99.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt99.c2 END, CAST(rt0.c1 AS BLOB)))<(((((rt0.c2))==((rt99.c2))), CAST(rt99.c0 AS NUMERIC), CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt99.c2 THEN rt0.c0 ELSE rt99.c1 END, rt99.c0, CAST(rt99.c1 AS INTEGER)))), 0.9603432925590628;SELECT ALL (+ (((rt99.c0)>=(rt0.c2)))) FROM rt0;SELECT DISTINCT NULL, (rt0.c2 IN ()) COLLATE NOCASE, ((rt0.c1) NOTNULL) COLLATE NOCASE, (((rt0.c2 IN (rt0.c2))) ISNULL), ((((((rt0.c0) ISNULL))AND(((rt99.c1) ISNULL))))AND(((rt99.c0)AND(rt99.c0)))) FROM rt99;SELECT DISTINCT ((rt99.c0) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((((((((((rt99.c1)OR(rt99.c0)))AND(rt99.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(rt99.c0)))), (((LTRIM(rt99.c2), GROUP_CONCAT(rt0.c1), (rt99.c0 IN ())))<((0X7b84bbbe, ((rt0.c0) BETWEEN (rt0.c1) AND (rt99.c0)), CAST(rt0.c1 AS INTEGER)))), ((NULL)>=(CAST(rt0.c2 AS BLOB))) FROM rt0;SELECT ALL ((CASE rt0.c1  WHEN rt99.c0 THEN rt99.c0 END) NOTNULL) FROM rt0, rt99 WHERE (312123764 COLLATE NOCASE); -- 0ms;
SELECT INSTR((- (rt99.c2)), CAST(rt99.c0 AS BLOB)) FROM rt0 WHERE ((((+ (NULL))) NOT BETWEEN (((((0.023270452231966776)OR('-1004388357')))AND(NULL))) AND (37563738 COLLATE RTRIM)));SELECT DISTINCT SQLITE_COMPILEOPTION_GET(('491688559' IN ())) FROM rt99, rt0 WHERE ((((NULL)) NOT BETWEEN ((((x'') NOTNULL))) AND ((((x'') NOT NULL))))); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c1) IS FALSE))) FROM rt0, rt99 WHERE (json_array_length((x'' IN ('1297495594', 0.0053882177126947095)))); -- 0ms;
SELECT DISTINCT ((((rt99.c0)&(rt99.c1))) IS TRUE), rt99.c0, ((rt99.c2) NOT BETWEEN (((rt99.c1)GLOB(rt99.c2))) AND (1087921377)) FROM rt99, rt0 GROUP BY ((((rt0.c1) ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt99.c0 THEN rt99.c0 ELSE rt99.c2 END) AND (0Xd7ab397)), ((CASE WHEN rt99.c0 THEN rt99.c1 WHEN rt99.c2 THEN rt99.c0 WHEN NULL THEN NULL END)LIKE(0x1d5b4838 COLLATE RTRIM)), ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((NOT (rt0.c0)))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)-(x'8630')))AND((rt0.c2 IN ()))))OR(TOTAL(rt0.c1))))AND(((rt99.c1) NOT NULL))))OR(ABS(DISTINCT rt0.c0))) FROM rt0, rt99; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt99 GROUP BY CAST(NULL AS REAL); -- 0ms;
SELECT DISTINCT MAX(CAST(rt99.c0 AS NUMERIC)) FROM rt0;SELECT CASE MIN(rt0.c1, rt0.c1)  WHEN (~ (rt99.c0)) THEN (+ (rt0.c2)) WHEN rt99.c2 COLLATE RTRIM THEN ((rt0.c2) ISNULL) WHEN CASE WHEN rt99.c2 THEN rt0.c2 WHEN rt99.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END THEN ((rt99.c1) NOTNULL) WHEN (((rt99.c1))<((rt99.c1))) THEN rt0.c1 WHEN ((rt99.c2)&(rt99.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((rt0.c1)-(rt0.c2)) END, ((TRIM(rt99.c2, rt0.c0)) NOT BETWEEN ((rt99.c0 IN ())) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt99.c2))))), ((rt99.c1)IS NOT(rt99.c1)) COLLATE RTRIM FROM rt0, rt99; -- 1ms;
SELECT (((rt0.c2 IN ())) NOT BETWEEN (AVG(rt0.c2)) AND ((rt0.c0 IN ()))) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((rt0.c0) IS FALSE)))<=((LTRIM(0.3233087406522688))))) OVER ( ORDER BY (((((rt0.c0))=((rt0.c0))))*(rt99.c0 COLLATE NOCASE)) ASC) FROM rt0 WHERE ((((0.29290978120049904 IN ())) BETWEEN (((((0.5810979919783517)AND(0.06827414233401863)))AND(NULL))) AND ((((x'212d', '-968067636', x'', x'', x'364d'))>((0.3001221758402578, 'e6aep07', 'MB9', 0.0, 0.9796508705756974))))));SELECT ALL CASE (rt0.c2 IN ())  WHEN NULL THEN (rt99.c2 IN (x'')) WHEN (NULL IN ()) THEN 0.8044751096601481 WHEN (0.6937780213842228 IN ()) THEN CASE WHEN rt99.c0 THEN rt0.c2 ELSE rt99.c0 END ELSE rt0.c2 COLLATE RTRIM END FROM rt0, rt99; -- 0ms;
SELECT ALL CAST(((rt99.c1) NOTNULL) AS REAL), CASE WHEN ((rt99.c2) IS FALSE) THEN DATE(rt99.c2, rt0.c2, rt99.c0, rt99.c0, rt0.c0) END, CASE CAST(rt99.c1 AS TEXT)  WHEN MAX(rt0.c1) THEN (((rt99.c2)) NOT BETWEEN ((rt99.c2)) AND ((rt0.c0))) ELSE ((rt99.c2)!=(rt0.c0)) END FROM rt99, rt0; -- 0ms;
SELECT rt99.c1 FROM rt0;SELECT DISTINCT CAST(((rt0.c1)GLOB(rt99.c1)) AS NUMERIC) FROM rt0 NOT INDEXED;SELECT DISTINCT (NOT (((rt99.c2)||(rt0.c0)))), ((((rt99.c0)AND(rt0.c1)))IS NOT(((rt0.c0) IS FALSE))), CAST(((rt99.c0) BETWEEN (rt99.c1) AND (rt99.c1)) AS TEXT) FROM rt99 WHERE (((((0x56351264) NOTNULL))-((((x'')) NOT BETWEEN ((0.15593557562710259)) AND ((0.08543222768502967))))));SELECT ALL (((rt99.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))AND(rt99.c2)))) AND (((rt99.c0 IN (rt0.c2))))) FROM rt99;SELECT SUM(((rt99.c2)=(rt0.c2))) OVER ( PARTITION BY (('1637553884')<<(CAST(rt0.c1 AS INTEGER))), CAST(((rt0.c1) BETWEEN (rt99.c1) AND (NULL)) AS NUMERIC)) FROM rt0, rt99 WHERE (((('-2027601980')) NOT BETWEEN ((NULL)) AND (('!/<+ԝ>)y|'))) COLLATE NOCASE); -- 2ms;
SELECT DISTINCT CAST((rt99.c0 IN ()) AS INTEGER) FROM rt99, rt0; -- 0ms;
SELECT DISTINCT ((((0.9354055457726642 IN ()), SUM(rt99.c0), ((x'') NOT BETWEEN (NULL) AND (rt0.c1))))!=((((rt0.c0) NOTNULL), ((NULL) NOTNULL), COUNT(*)))), COUNT(LIKELY(DISTINCT rt99.c2)), IFNULL(((rt0.c2) NOT BETWEEN (-1.89325387E8) AND (rt99.c0)), MIN(rt0.c2, rt0.c0)) FROM rt99 WHERE ((((1627738827 IN ()))<<(((-2.02760198E9) BETWEEN ('-1989724328') AND (x'068f')))));SELECT DISTINCT COUNT(*) OVER () FROM rt0 RIGHT OUTER JOIN rt99 ON (('x')%(((rt99.c2) ISNULL))) WHERE ((((0.0554700741131845 IN ('a_~y*', 0.010995952920651031)))||(((((x'69ab')OR('-854529848')))AND('O#'))))); -- 0ms;
SELECT DISTINCT ((rt0.c0) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c0  WHEN rt99.c2 THEN rt99.c1 WHEN rt0.c0 THEN '-2045740416' WHEN rt99.c0 THEN rt0.c0 END COLLATE BINARY, UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt99.c1))), rt0.c0, ((((((rt99.c1)AND(rt99.c2)))AND(rt99.c2))) NOT NULL), ((((((((((rt99.c1) NOTNULL))OR(CAST(rt0.c1 AS INTEGER))))AND(COALESCE(DISTINCT rt0.c2, rt99.c2))))OR(0.9403032150135926)))OR((NOT (rt99.c1)))) FROM rt99, rt0; -- 0ms;
SELECT ALL ((((rt99.c2)AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR(((rt99.c0) NOT BETWEEN (rt0.c0) AND (x'3a6d')))) FROM rt99, rt0 ORDER BY (((rt0.c0 IN ()))>=(((rt99.c1)IS(rt99.c0)))); -- 1ms;
SELECT DISTINCT (- ((((rt0.c2))!=((rt99.c1))))) FROM rt0 WHERE ((- (((0.9550474571016918) IS FALSE))));SELECT DISTINCT ((rt99.c2)LIKE(rt99.c1)) COLLATE BINARY FROM rt0 WHERE ((((((0.48066068825198016)) NOT BETWEEN (('-270830745')) AND ((x''))))|(((x'') NOT BETWEEN (NULL) AND (0.2666515707450524)))));SELECT DISTINCT ((rt99.c2) IS TRUE) COLLATE BINARY FROM rt99; -- 0ms;
SELECT ALL AVG((((rt99.c2)) NOT BETWEEN ((rt99.c0)) AND ((rt99.c1)))) FILTER(WHERE ((((((((json_type('AX]%Q柵A'))OR(MAX(rt99.c2, rt99.c0, rt0.c0, rt0.c2))))OR(((rt0.c0) NOT BETWEEN (rt99.c0) AND (rt99.c2)))))OR((((rt99.c0))=((rt99.c1))))))OR(((rt0.c2)>(rt0.c1))))) OVER () FROM rt0, rt99 WHERE ((NOT ((- (0.9887606087483969))))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c0 COLLATE NOCASE)) FROM rt99 WHERE (CASE 0.8787297190534579  WHEN CASE WHEN '1635726154' THEN x'2b62' ELSE 0.09518688773374206 END THEN ((((((((0xfffffffff4b71fb5)AND(0X7d41f37c)))OR('-1622509057')))AND(x'')))AND('')) WHEN ((0x65a3e0dc) IS TRUE) THEN ((0X6d18decb)&(-313405160)) WHEN x'' COLLATE BINARY THEN (+ ('lHLlrq窀~')) ELSE ((((NULL)AND('U\.Wt')))AND(',.M3*')) END);SELECT ALL (((AVG(rt0.c0)))<=((CAST(rt0.c0 AS TEXT)))) FROM rt0 WHERE ((((+ (538407399)))OR('-779238177'))); -- 1ms;
SELECT -635804293 FROM rt0 WHERE (((((NULL) NOT BETWEEN (1469220519) AND (0.38890794793803884))) IS FALSE)) GROUP BY rt0.c1 HAVING rt99.c0;SELECT ((rt99.c1 COLLATE NOCASE) IS TRUE) FROM rt99 WHERE (272313569); -- 0ms;
SELECT (((rt99.c1)) BETWEEN (((('-2032352806')GLOB(rt99.c2)))) AND ((IFNULL(rt0.c1, rt0.c0)))), (((rt99.c2) NOT NULL) IN ()), (((((rt99.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c1)|(rt99.c2))) AND (rt99.c0)) FROM rt99 WHERE (((((((((('-2027601980' IN ()))AND(((NULL)IS(-1.106912576E9)))))AND(CASE 0.2048457211650886  WHEN NULL THEN 0.7883022088289464 WHEN x'715b' THEN x'c46e' WHEN '-1004388357' THEN '-1006207249' ELSE NULL END)))AND(UPPER(DISTINCT x''))))OR(((0.7255205186193296)LIKE(x'614e')))));SELECT DISTINCT (((NOT (rt0.c2))) IS FALSE), (NOT ('')), MAX(rt0.c1 COLLATE NOCASE) COLLATE BINARY FROM rt0 WHERE (CAST((((x''))==((-2129313715))) AS TEXT)); -- 0ms;
SELECT ALL 'L ?c?Bc!' FROM rt99, rt0 WHERE (((((0.45189174253914133) NOT BETWEEN ('-927650081') AND (0.8016603845017689)))IS NOT(CASE 0X4728340a  WHEN 0.040612762847357486 THEN '1133302749' ELSE 0.31676782227112255 END))) LIMIT -1031678850; -- 0ms;
SELECT DISTINCT (rt0.c0 IN (rt0.c1, NULL)) COLLATE NOCASE, rt99.c0, LAG(x'', ((((rt99.c0 COLLATE BINARY)OR(((rt99.c0) BETWEEN (rt99.c0) AND (rt99.c0)))))AND(rt99.c0 COLLATE NOCASE)), ((rt99.c1 COLLATE NOCASE)||(CASE WHEN x'' THEN rt99.c2 ELSE rt99.c2 END))) OVER () FROM rt99 WHERE (((NULL) IS FALSE));SELECT rt0.c1 FROM rt99 WHERE ((((((((((((0.39562252147573496, NULL, ''))>=(('{ⱚ8', 0.6001744129300113, '{'))))OR(((('205310789')) NOT BETWEEN ((1872858957)) AND ((NULL))))))OR('')))AND((('-595144087') NOT NULL))))AND(x'c6e5')));SELECT DISTINCT CAST(CAST(rt0.c1 AS REAL) AS NUMERIC) FROM rt99, rt0 WHERE ((((0.9601486006022463 IN ()))%((x'' IN ())))); -- 0ms;
SELECT ALL rt0.c1 FROM rt99, rt0 WHERE (((('-970056262' IN ()))OR(CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT (~ (CASE rt0.c2  WHEN rt0.c2 THEN x'fcef' WHEN rt0.c1 THEN rt99.c1 WHEN rt0.c0 THEN 1277985245 ELSE rt0.c2 END)) FROM rt99;SELECT CAST(((rt0.c2) BETWEEN (rt99.c2) AND (rt0.c0)) AS REAL), CAST(((((rt0.c2)OR(rt99.c0)))OR(rt99.c1)) AS REAL), (((rt0.c0)LIKE(rt0.c0)) IN (((((rt99.c2)AND(rt0.c0)))OR(rt0.c1)))) FROM rt99 WHERE ((((x'2e56')) NOT BETWEEN ((CAST(NULL AS TEXT))) AND ((((x'')IS('1276850732'))))));SELECT DISTINCT CASE CAST('1774591461' AS REAL)  WHEN IFNULL(rt99.c1, rt0.c0) THEN SUM(rt0.c1) WHEN 1.387686616E9 THEN CASE WHEN NULL THEN rt0.c1 WHEN rt99.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt99.c0 END WHEN rt0.c2 COLLATE NOCASE THEN rt99.c0 COLLATE BINARY ELSE UPPER(rt99.c2) END, '-2045740416', (((rt0.c0) NOTNULL) IN ()) FROM rt0 RIGHT OUTER JOIN rt99 ON ((((rt0.c0)-(rt0.c1))) BETWEEN (CASE rt0.c1  WHEN rt99.c0 THEN rt99.c0 END) AND ((((rt99.c1, rt0.c2, '-1343950000')) NOT BETWEEN ((NULL, rt0.c0, rt0.c1)) AND ((rt99.c0, rt0.c0, rt99.c2))))) WHERE ((NOT ((+ ('11887625'))))); -- 0ms;
SELECT ALL (((~ (rt99.c0))) NOTNULL), LAG(rt99.c1, CASE WHEN TRIM(rt99.c2) THEN rt99.c1 COLLATE BINARY END, CASE WHEN CASE WHEN NULL THEN rt99.c1 WHEN rt99.c2 THEN rt99.c1 WHEN rt99.c1 THEN rt99.c2 END THEN ((rt99.c2) NOTNULL) ELSE ((rt99.c0)-(rt99.c0)) END) OVER (), 0.5587676000161649 FROM rt99 NOT INDEXED WHERE (((x'a594a6a1')GLOB(((-1212423338)+(''))))); -- 0ms;
SELECT DISTINCT COALESCE(CAST(rt0.c0 AS REAL), (+ (rt0.c2))) FROM rt99, rt0 LIMIT 1406059157 OFFSET 1000480047; -- 1ms;
SELECT TOTAL(LTRIM(rt0.c2, rt99.c1)) OVER ( ORDER BY (((rt99.c2)) BETWEEN ((((((rt0.c0)AND(0.8576900039313673)))OR(rt99.c2)))) AND (((((rt0.c0))>((rt99.c1))))))) FROM rt0, rt99 WHERE ((((('0.11364044570094922') NOT BETWEEN ('⾐e4v5D*줜4') AND ('0.022174113642412063'))) NOT BETWEEN (((NULL)<(NULL))) AND (x'' COLLATE RTRIM))) GROUP BY ((rt99.c2)==(x'')) COLLATE RTRIM HAVING ((rt0.c1)AND(NULL)); -- 0ms;
SELECT DISTINCT (((((rt0.c0))<=((rt0.c2)))) BETWEEN (((rt99.c2) IS TRUE)) AND (((((rt99.c0)AND(rt0.c1)))AND(rt0.c2)))), (CASE WHEN rt99.c1 THEN rt0.c0 ELSE rt0.c1 END IN (TIME(rt99.c1, rt0.c1, rt0.c0), ((rt99.c2)>=(rt99.c1)))), (((('')OR(((rt99.c0) BETWEEN (rt99.c2) AND (rt0.c0)))))AND(CAST(rt0.c0 AS TEXT))) FROM rt0, rt99; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0 WHERE (((((LTRIM(1817405786, NULL))AND(((x'') BETWEEN (x'') AND ('hB')))))OR((('pdw\r(+')/(0Xffffffff8d0a4aa3))))); -- 0ms;
SELECT ALL ((LIKELIHOOD(DISTINCT rt99.c0, 0.3489202782934435))|('Iewc(7')) FROM rt99, rt0 WHERE (json_quote(SUBSTR(1635726154, 0.736241481971244))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, rt99 WHERE (ROUND(((0xffffffffbcc5aef2) BETWEEN ('') AND (179285313)), ((NULL)IS NOT(0.5808873254660929)))) LIMIT -1540651028 OFFSET 1126950078; -- 0ms;
SELECT ALL COUNT(*) FROM rt99 WHERE ((('-1597168914') BETWEEN (' >{>悵+퉁') AND (0.350458401458712)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ('2072296382' IN ()) FROM rt0 WHERE (CAST((('') NOT BETWEEN ('1027859805') AND ('-1989724328')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((((((((((rt99.c2)OR(rt99.c2)))OR(rt0.c2)))AND(((rt0.c2)GLOB(rt0.c2)))))OR(((rt99.c1) IS TRUE))))OR(rt99.c2)))OR(CAST(rt99.c0 AS BLOB))) FROM rt0 WHERE (CAST(CAST(0.9414258580572984 AS INTEGER) AS TEXT));SELECT ALL ((((((((rt0.c0)OR(rt0.c1)))AND(rt99.c2)))OR(rt99.c1)))OR(rt0.c1)) COLLATE NOCASE, ((x'9e18') BETWEEN ((rt0.c1 IN ())) AND (rt99.c0)), ((((rt99.c2)OR(x'')))AND(LTRIM(rt0.c2, rt99.c1))) FROM rt0, rt99; -- 0ms;
SELECT '', ((AVG(rt0.c1)) ISNULL), TYPEOF((rt99.c0 IN ())) FROM rt99, rt0 WHERE ((((CASE NULL  WHEN 'Ec' THEN 0x21b4a16f WHEN 0.7900775849407738 THEN -8.75817984E8 WHEN 0.005861950472141886 THEN 1652552153 ELSE '5槰/㿄' END, (((1546003988, NULL, x'1c5d')) NOT BETWEEN ((x'', NULL, NULL)) AND ((0.0846456397426173, 0X5eed680a, 0.4286624683141712))), ((NULL)>(''))))<=((((NULL) IS TRUE), (((0.5443450250025403))<=((0.5169554378576641))), CAST(x'' AS NUMERIC))))) LIMIT 859577809 OFFSET -556062950; -- 0ms;
SELECT ((((((((rt99.c0)AND(rt99.c2)))OR(rt99.c0)))AND(rt99.c2)))OR(rt99.c2)) COLLATE RTRIM FROM rt99, rt0 WHERE (((NULLIF('-2145235221', NULL))OR((((((((((((('')AND(0.030124464104412163)))OR(0xffffffffcff747bf)))AND(NULL)))OR(x'')))OR('969723227')))AND('-1930967807'))))) GROUP BY json_object((rt99.c1 IN ()), (((((((('0.39799243832313347')OR(rt0.c1)))OR(rt0.c1)))OR(rt99.c1)))OR(rt99.c0))) LIMIT -1460180448;SELECT DISTINCT ((rt99.c0)&(((NULL)<=(rt0.c2)))) FROM rt99, rt0 WHERE ((CAST(NULL AS INTEGER) IN ())); -- 0ms;
SELECT ALL 0.704042951921904 FROM rt99, rt0 WHERE (((((0.5948614850006904)<>('2012103599')))>>(((0.7731337124821294)IS NOT(-679244862))))); -- 1ms;
SELECT ALL ((rt0.c0) NOTNULL) FROM rt99;SELECT DISTINCT ((((rt0.c2) BETWEEN (rt99.c0) AND (rt0.c2)))OR(CASE rt0.c2  WHEN rt99.c0 THEN NULL END)) FROM rt0 GROUP BY (((((((((((rt99.c1, rt0.c1, rt0.c0))!=((rt0.c1, rt99.c2, rt99.c0))))OR(((rt0.c1)==(rt99.c2)))))AND('''?A<b')))AND((rt0.c2 IN (rt99.c2)))))AND(((((((((rt99.c1)OR(rt99.c0)))OR(rt99.c2)))AND(x'622b')))AND('-251310570'))));SELECT ((CASE WHEN rt99.c1 THEN rt0.c2 WHEN rt99.c2 THEN rt99.c1 WHEN rt99.c1 THEN rt0.c2 END) NOT BETWEEN (((rt99.c0) NOT NULL)) AND (CAST(rt0.c1 AS INTEGER))) FROM rt0, rt99 WHERE ((((NULL IN (x''))) IS TRUE)); -- 0ms;
SELECT ALL ((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt99.c1))) AND (0.012760204917315665)) FROM rt99 WHERE (((((x'0cd017f280e1')|(NULL)))IS NOT(HEX(DISTINCT '-1785786500'))));SELECT DISTINCT x'f66b' FROM rt0, rt99 WHERE ((NOT (''))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt99.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt99.c2 END)|((rt0.c0 IN (rt0.c0)))) FROM rt0;SELECT ALL (CAST(rt0.c2 AS TEXT) IN (0X5f3cadbd COLLATE RTRIM, rt99.c0)), SUM(rt0.c1) OVER (), CAST(((((((((rt99.c1)OR(rt0.c2)))OR(rt99.c1)))AND(NULL)))AND(rt0.c0)) AS INTEGER), 0.07402881557711316, (((rt0.c0) BETWEEN (rt99.c2) AND (rt99.c2)) IN (rt0.c2 COLLATE NOCASE)) FROM rt99 WHERE (((((('*'))!=((NULL)))) IS FALSE));SELECT (+ (MAX(rt0.c0))) FROM rt0, rt99 WHERE ((((((x'')GLOB(0x4f5e1eec))))==(((('')>>('-1313461289')))))) LIMIT -854529848; -- 1ms;
SELECT ALL ((CASE rt0.c1  WHEN rt99.c0 THEN rt0.c0 END)!=(((0xffffffffe3f4faf2)||(rt99.c1)))) FROM rt0 NOT INDEXED, rt99 WHERE ((('-1154084400') IS TRUE)) ORDER BY ((((rt99.c0)AND(0.6546109730109677)))&((((rt99.c0, rt99.c2, rt99.c1)) BETWEEN ((rt0.c2, rt99.c1, rt99.c0)) AND ((rt0.c1, rt99.c0, rt0.c2)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))<=(((rt99.c2)+(rt99.c0)))) FROM rt0 LIMIT -1540651028 OFFSET 566758390;SELECT DISTINCT NTILE((((load_extension(rt0.c1, rt0.c1)))>=((((rt0.c0)&(rt0.c2)))))) OVER (), TRIM(DISTINCT ((rt0.c2)LIKE(rt99.c0)), CASE rt99.c2  WHEN rt0.c1 THEN rt0.c0 END), ((IFNULL(DISTINCT rt99.c1, 0.1469293345381174)) IS FALSE) FROM rt0 WHERE ((((((('M\rL9⓬')AND(0.15990074016503208)))AND(NULL))) BETWEEN (CHAR('-177610196')) AND (CAST(0.09496669453284823 AS INTEGER)))) GROUP BY (rt0.c2 IN ()) COLLATE BINARY LIMIT 360170069 OFFSET 268877400;SELECT DISTINCT TRIM(DISTINCT '{}') FROM rt0, rt99 WHERE (((((((((x'')AND('0AIWri')))OR(x'')))AND(((x'') NOTNULL))))OR(NULL))); -- 0ms;
SELECT ((((rt99.c0)>>(rt0.c0))) NOTNULL), GROUP_CONCAT(((rt0.c2)IS NOT(rt99.c2))) OVER (), rt99.c0 FROM rt99;SELECT (((((((((rt99.c0 IN ()))AND(((((rt99.c2)AND(rt0.c0)))OR(rt0.c2)))))OR(rt0.c2)))AND(rt0.c1 COLLATE NOCASE)))OR(CAST(rt0.c2 AS BLOB))), (~ (((rt99.c1)+(rt0.c2)))), TRIM((((rt99.c2)) NOT BETWEEN ((rt99.c2)) AND ((rt0.c1))), (((rt0.c1, rt0.c0, rt99.c1))<>((rt0.c2, rt0.c0, rt99.c2)))) FROM rt99, rt0; -- 0ms;
SELECT CAST((+ (rt0.c0)) AS BLOB) FROM rt99;SELECT ')[', CASE (+ (rt0.c1))  WHEN ((((rt99.c0)AND(rt0.c2)))AND(rt0.c1)) THEN '>F	7 z^A' ELSE (rt0.c2 IN ()) END, CASE WHEN CASE rt0.c2  WHEN rt99.c0 THEN rt99.c0 ELSE rt0.c2 END THEN CAST(rt0.c1 AS INTEGER) ELSE AVG(rt0.c2) END FROM rt99 FULL OUTER JOIN rt0 ON CAST(CAST(rt99.c0 AS TEXT) AS TEXT); -- 0ms;
