-- Time: 2024/06/07 06:34:36
-- Database: database4
-- Database version: 3.40.0
-- seed value: 27988304
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED, tokenize = "porter"); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('', NULL), (x'0e71', x'24df'), (x'', -1603149778); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, '-723008048'), (NULL, NULL), (x'', 0.9067393482560122); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0Xffffffffa071e02e), (0Xffffffffd4e7c5d0), (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 239177701); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='-244139984'; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL, 0.8432599039492804); -- 1ms;
UPDATE OR REPLACE vt0 SET c1='-1603149778'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x'962cc605'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'8497', 0.7476887074453488), ('-1603149778', '-708859388'), ('jzHz#)e(', '-723008048'); -- 1ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES ('-723008048', -723008048); -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE CAST(((vt0.c1)IS NOT(vt0.c0)) AS INTEGER); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA incremental_vacuum(-708859388); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(0xfffffffff1cd106b) WHERE vt0.c1; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, x''); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'7249'), (-1.603149778E9), (NULL), ('-723008048'), (-7.08859388E8); -- 0ms;
PRAGMA incremental_vacuum(-103315974); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
COMMIT; -- 0ms;
VACUUM main; -- 1ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES ('967978683'), (0.22778253818589422), (NULL); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', x'1239'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.soft_heap_limit = 7425367402395418837; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (NULL, '⺻v\rﭏ% '), ('-238219157', 0x3da421db), (x'', NULL); -- 1ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 40666635); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
VACUUM main; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.shrink_memory; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('rbB~Q+O{'), (x''), (0.6127174880607072); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('0.22778253818589422'); -- 1ms;
ANALYZE; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35551'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -118381350);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 845039522);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 668530734); -- 0ms;
PRAGMA locking_mode; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'', c0='', c2=-1520757789 WHERE rt0.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', 1034166747); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 619380541); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-15262424' WHERE ((((vt0.c0)IS(x'f6af'))) ISNULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM vt0; -- 0ms;
PRAGMA stats; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('ꓚ|'), (0.7094377585457174), ('H~MU쎥Ii.'); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39389'); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL), (''), (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((~ (vt0.c1))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))) FROM vt0; -- 0ms;
SELECT NTH_VALUE(((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))), ((vt0.c0)*(vt0.c1)) COLLATE RTRIM) OVER () FROM vt0;SELECT DISTINCT (((~ (vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN (- (vt0.c1)) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c1)LIKE(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (vt0.c1 IN (vt0.c1, vt0.c0)) WHEN TOTAL(vt0.c1) THEN (vt0.c0 IN (vt0.c0)) ELSE (+ (NULL)) END FROM vt0 WHERE (CASE WHEN CAST(NULL AS TEXT) THEN (((NULL, 'IG', NULL)) BETWEEN (('0.7094377585457174', '%<', NULL)) AND ((NULL, x'', '0.7476887074453488'))) ELSE 0.42320991631082927 COLLATE BINARY END); -- 0ms;
SELECT (((vt0.c1) BETWEEN ('-1773545828') AND (x'')) IN (COALESCE(vt0.c1, vt0.c1, vt0.c0, 0.44920492748729435))) FROM vt0 WHERE (CAST((0xffffffffd5bfaa04 IN ()) AS REAL)); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt0 GROUP BY vt0.c1, (~ (UNLIKELY(DISTINCT '-1721792217'))), (((((vt0.c0))>=((vt0.c1))))>>(vt0.c0)) HAVING CASE WHEN (('-1813936359') NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN COUNT(*) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN CAST(vt0.c1 AS NUMERIC) WHEN (~ (vt0.c1)) THEN COUNT(*) WHEN (vt0.c0 IN ()) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END END; -- 0ms;
SELECT ALL (~ (CASE vt0.c1  WHEN vt0.c1 THEN 0.9067393482560122 ELSE vt0.c1 END)) FROM vt0 WHERE ((~ (CASE 'Pjx>wKcR'  WHEN x'' THEN NULL WHEN 'kQ''''ly,d' THEN 0.056208491530295945 WHEN 0.4615467590897563 THEN '(g7?)/%' ELSE -400735110 END))); -- 0ms;
SELECT ALL CASE WHEN (((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0) IS FALSE) ELSE (7425367402395418837 IN ()) END, COUNT(CAST(vt0.c1 AS BLOB)) FILTER(WHERE '59144683') OVER (), '' FROM vt0 WHERE (((('0.44920492748729435')) BETWEEN ((((0.909208422414958)|(0.19634212688962926)))) AND ((TRIM(0.9690762495573858, NULL))))); -- 0ms;
SELECT ALL NULL FROM vt0 WHERE (((0xffffffffa208930a) ISNULL) COLLATE BINARY) LIMIT 1584639503; -- 0ms;
SELECT ALL GROUP_CONCAT(COALESCE(DISTINCT NULL, vt0.c1)) OVER (), MIN('1810103119'), (~ ((((vt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c1, vt0.c0))))) FROM vt0 WHERE (((((0Xffffffffc978164e)>=(x'')))/((('1584639503')>(0.22778253818589422))))); -- 0ms;
SELECT ALL AVG(CAST(vt0.c0 AS TEXT)) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT ((x'')<<((((vt0.c1))>((vt0.c1))))), ((((vt0.c1) NOT NULL))*(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(x'519e5f471c8a')))), COUNT(((vt0.c1)=(vt0.c0)) COLLATE NOCASE) FROM vt0 WHERE ((((0.7779159709677858, -1.721792217E9, NULL)) NOT BETWEEN ((0.8153762093625 COLLATE BINARY, 0.9690762495573858, (+ (NULL)))) AND ((COALESCE(x'', '-504436438'), CASE 0.9067393482560122  WHEN '1a' THEN 0.4354050370655713 WHEN 0x6dbec3a5 THEN NULL WHEN NULL THEN NULL WHEN -400735110 THEN x'' WHEN x'' THEN '1a' END, (+ ('-1182012163')))))); -- 0ms;
SELECT ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))*(COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0) BETWEEN (vt0.c0) AND ('1478678086')))))AND(x'2778' COLLATE BINARY)))AND((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0.5147763137551902, vt0.c0, vt0.c1))))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 ORDER BY (((vt0.c0)|(vt0.c1)) IN ()); -- 0ms;
SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))<((((vt0.c0)/(vt0.c1))))), ((vt0.c1 COLLATE NOCASE) IS FALSE), ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND ((vt0.c1 IN (vt0.c0)))), ((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c1, vt0.c0))) IN ()), AVG(((vt0.c1)!=(vt0.c0))) FROM vt0 WHERE ((+ ((x'' IN ())))); -- 0ms;
SELECT (((1.034166747E9 IN ()))<(vt0.c1)) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) IS FALSE), ('-1023127486' IN ()), LEAD(-1362909169, CAST(((vt0.c1) IS FALSE) AS NUMERIC), vt0.c1) OVER () FROM vt0; -- 0ms;
SELECT COALESCE(vt0.c0 COLLATE BINARY, 0.8606154887028096) FROM vt0 WHERE (((((LIKELY(DISTINCT NULL))OR((('	MoMIJ') NOTNULL))))AND(NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(NULL AS REAL))GLOB(CASE '-711707848'  WHEN NULL THEN 'Pjx>wKcR' ELSE x'' END))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT TOTAL_CHANGES()), CAST(vt0.c0 COLLATE NOCASE AS BLOB), ((((CASE vt0.c1  WHEN vt0.c0 THEN 0.9161893566542542 ELSE x'f04c' END)OR(((vt0.c1)>=(0.9751709053783273)))))AND(((NULL)<<(vt0.c1)))) FROM vt0 WHERE (CAST((('-723008048')OR(NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL))GLOB(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR('1841218469')))), json_valid((')v+' IN ())), CASE (((vt0.c1))>((vt0.c1)))  WHEN ((vt0.c0)IS NOT(vt0.c1)) THEN ((vt0.c0)OR(vt0.c1)) ELSE GROUP_CONCAT(vt0.c0) END FROM vt0 ORDER BY (((vt0.c1)) BETWEEN (('-712605754')) AND ((vt0.c1 COLLATE BINARY))) DESC; -- 1ms;
SELECT ALL (vt0.c0 COLLATE NOCASE IN ()) FROM vt0; -- 0ms;
SELECT ALL (+ (CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE (COALESCE(((-1.773545828E9) BETWEEN (x'') AND (0.8074433690540783)), (x'' IN ()), 0.056208491530295945, ((0.4574619287809638)||(0.8432599039492804)))) ORDER BY (NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT CAST((((vt0.c0))=((vt0.c1))) AS BLOB), AVG(UNLIKELY(vt0.c0)), '773660890' FROM vt0 ORDER BY ((vt0.c0 IN ()) IN ()); -- 0ms;
SELECT ((((vt0.c0)&(vt0.c0)))>=(((vt0.c0)>=(vt0.c0)))) FROM vt0 LIMIT 1584639503 OFFSET -560789441; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)LIKE(vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (x'8f7c')), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE, AVG(((vt0.c1)<>(vt0.c1))) OVER () FROM vt0; -- 0ms;
SELECT CAST(vt0.c0 AS TEXT) FROM vt0 WHERE ((((('-2080922140')AND((+ (x'')))))AND(((1775747919)OR(x''))))) LIMIT -1892587284 OFFSET -1767914336; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0)) BETWEEN (TRIM(0.8951938022366085)) AND ('715445316')), ((CAST(vt0.c0 AS INTEGER)) NOTNULL), SUM(UNLIKELY(vt0.c1)) FROM vt0 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN (CAST('7425367402395418837' AS REAL)) AND (('1841218469' IN ())))); -- 0ms;
SELECT DISTINCT (NOT (((vt0.c1)|(vt0.c0)))) FROM vt0 WHERE (((NULL) NOT BETWEEN (0xffffffff995f8927) AND (0x2aa4d444)) COLLATE NOCASE); -- 1ms;
SELECT '(g7?)/%' FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE ((NOT (((('')) BETWEEN (('346999650')) AND ((x'3259')))))); -- 0ms;
SELECT CAST(vt0.c1 AS TEXT), NULL, ((((vt0.c0)&(vt0.c1))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((~ (vt0.c0)))), HEX(DISTINCT CAST(0.40001901656641947 AS NUMERIC)), ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c0)) FROM vt0 NOT INDEXED ORDER BY MAX((+ (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS LAST LIMIT -1235221345 OFFSET -2048675575; -- 0ms;
SELECT ALL 0X0, CASE (vt0.c1 IN ())  WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN ((((vt0.c0)OR(0.07869267704303129)))OR(vt0.c1)) END, CAST(COALESCE(vt0.c1, vt0.c1) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(vt0.c1)))>=((vt0.c0))) FROM vt0 WHERE ((~ (CAST(-1.603149778E9 AS NUMERIC)))); -- 0ms;
SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(NULLIF(vt0.c0, vt0.c1))) FROM vt0 WHERE (CAST(load_extension('B(ᖵvn긏}^S', x'32eb') AS TEXT));SELECT DISTINCT ((vt0.c1)>(vt0.c1)) COLLATE BINARY, ROW_NUMBER() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES), 0.4334629917193771 FROM vt0 WHERE (CAST((((NULL, 0.44920492748729435, ',SD6'))>((NULL, 0X65a56866, '444771969'))) AS INTEGER)); -- 0ms;
SELECT ALL CASE ((NULL)|(vt0.c0))  WHEN ((vt0.c1)GLOB(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c1) NOTNULL) THEN (((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1))) ELSE vt0.c1 END FROM vt0; -- 0ms;
SELECT ALL '101411085', json_type(json_array_length(vt0.c1, vt0.c1)), IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), vt0.c0) FROM vt0 WHERE ((((CASE WHEN '-1892587284' THEN x'' ELSE '-1520757789' END))<((CAST(-9876128 AS TEXT))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))), MIN(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))), LEAD(((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))IS NOT(vt0.c1 COLLATE BINARY)), (((vt0.c1)=(vt0.c1)) IN ('-708859388', vt0.c0 COLLATE BINARY)), ((vt0.c1)<=(vt0.c1)) COLLATE NOCASE) OVER () FROM vt0 WHERE (((('4<p7e')) BETWEEN ((((((0Xffffffffaeb9099d)OR('A(U6l')))OR(x'')))) AND ((((NULL) NOT BETWEEN ('-1235221345') AND (x'')))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 LIMIT -9876128; -- 0ms;
SELECT ALL LIKELY(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))) FROM vt0 WHERE ((((- (NULL))) BETWEEN ((- (0.7304945686324026))) AND (((0.8013264635397623)LIKE(NULL))))); -- 0ms;
SELECT vt0.c0 COLLATE RTRIM, MAX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), ((((((((((vt0.c1)>(vt0.c1)))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c1))>=((vt0.c0))))))AND(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))) FROM vt0 WHERE (CASE ('-138419243' IN ())  WHEN x'' COLLATE RTRIM THEN ((x'5e2edc15')AND('')) WHEN (('1841218469')<(0.9891305517090951)) THEN (('B(ᖵvn긏}^S') NOT NULL) WHEN (((x'b776', 0Xffffffffbe751770, '')) BETWEEN ((-7.11707848E8, 1810103119, NULL)) AND ((x'', '-1892587284', x''))) THEN ((((x'')OR('-1767914336')))AND(967978683)) END) LIMIT -15262424 OFFSET -9223372036854775808; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((- (TRIM('715445316', x'')))); -- 0ms;
SELECT (TRIM(DISTINCT '809869374') IN (vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) NOT BETWEEN (x'') AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))), CAST(((91639402)>>(vt0.c0)) AS REAL), ((DATE(vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE WHEN vt0.c1 THEN vt0.c1 END)) FROM vt0 WHERE (CASE WHEN (0.7680925837041221 IN ()) THEN CAST('346999650' AS BLOB) ELSE highlight(x'', 0.9690762495573858, NULL, '') END) LIMIT 909860866 OFFSET 96241180;SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((((x'' IN ()))OR(NULLIF(0.056208491530295945, x''))))AND(((NULL) BETWEEN (NULL) AND (NULL)))))AND((('-1196545693') BETWEEN (x'') AND ('')))))AND(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((-1362909169)<(x''))))) LIMIT 1465276515 OFFSET 642568594; -- 0ms;
SELECT DISTINCT ((vt0.c0)IS NOT(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((CAST(x'' AS TEXT))/(TIME('', '', 0.42320991631082927)))) GROUP BY ((((vt0.c1) NOT NULL))LIKE((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c1))))) LIMIT 822999179 OFFSET -15262424; -- 0ms;
SELECT ALL CAST(((((vt0.c0)OR(NULL)))OR(vt0.c1)) AS REAL) FROM vt0 ORDER BY ((IFNULL(vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND ((vt0.c1 IN ()))); -- 0ms;
SELECT DISTINCT CHAR(((vt0.c0)GLOB(vt0.c0))), COUNT(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))), vt0.c1 FROM vt0 WHERE (CASE WHEN (('-259834772')+(NULL)) THEN '-1099622544' COLLATE NOCASE WHEN ((0.7680925837041221)<(NULL)) THEN (- (x'')) WHEN ((x'') NOT BETWEEN ('-1813936359') AND ('-244139984')) THEN ((0.5541319582504246) NOT BETWEEN ('(Xe8') AND (0X38679eb)) ELSE ((0.3385244871614185) NOT BETWEEN ('') AND ('}MjHk')) END) ORDER BY ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c1)LIKE(vt0.c0))) AND (((vt0.c0)LIKE(vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT MAX(vt0.c1, 0.9899437078081934) COLLATE RTRIM FROM vt0 WHERE (x'f448') LIMIT -1235221345; -- 0ms;
SELECT ((vt0.c1)LIKE(AVG(vt0.c0))) FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) IS FALSE)  NULLS LAST; -- 0ms;
SELECT CAST(LOWER(DISTINCT vt0.c0) AS NUMERIC) FROM vt0 ORDER BY (0.05615314396236526 IN ()) DESC; -- 1ms;
SELECT (- (COUNT(vt0.c0))), ((MAX(vt0.c0))-((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))), ((CAST(vt0.c0 AS BLOB))>(vt0.c1 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((-7.12605754E8))) FROM vt0 WHERE ((((('') NOT BETWEEN ('1561199716') AND ('1810103119')))!=((('')<<(NULL))))); -- 0ms;
SELECT DISTINCT SUM(vt0.c1), AVG((vt0.c0 IN (vt0.c0))), RANK() OVER () FROM vt0 WHERE ((('4<p7e' COLLATE NOCASE)<>(json('0.4574619287809638')))); -- 0ms;
SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))OR((- (vt0.c1)))))OR('''va4w')) FROM vt0; -- 0ms;
SELECT CAST(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) AS BLOB) FROM vt0 WHERE (CHAR(CAST('' AS REAL))); -- 0ms;
SELECT ALL (- (NULL COLLATE NOCASE)) FROM vt0 WHERE (CAST(((0x15b3acec)>>(x'')) AS NUMERIC)); -- 0ms;
SELECT ALL ((((((((((vt0.c1)OR(-1.023127486E9)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1)LIKE(vt0.c0)))), (+ (TOTAL(vt0.c1))), AVG('1841218469') OVER () FROM vt0 WHERE ((((('-1925198256')OR(x'c2473485')))>>((((((((('ꓸ	ﺭ枕')OR(-977629352)))OR('-9876128')))OR(x'')))AND(x''))))); -- 0ms;
SELECT DISTINCT AVG(AVG(vt0.c0)) COLLATE BINARY, ((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN LOWER(vt0.c1) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) WHEN (- (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN json_valid(NULL) WHEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN (vt0.c1 IN (vt0.c1)) END FROM vt0 ORDER BY ((((((((((((vt0.c0 COLLATE NOCASE)OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))OR(HEX('KV?jf'))))OR(vt0.c1 COLLATE NOCASE)))OR(((vt0.c0)LIKE(vt0.c1)))))AND(QUOTE(vt0.c1))))AND(vt0.c1)) ASC  NULLS LAST LIMIT -1722376975 OFFSET 1197845127;SELECT DISTINCT (((vt0.c1 COLLATE BINARY))<((CAST(vt0.c1 AS BLOB)))) FROM vt0 WHERE (CAST(CASE '-1773545828'  WHEN x'a6af' THEN '' END AS TEXT)); -- 0ms;
SELECT ALL ((((vt0.c0)GLOB(x'a3e7'))) BETWEEN (vt0.c0) AND (vt0.c1 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL (~ ((- (vt0.c1)))), TOTAL((((vt0.c0, vt0.c0, vt0.c0))<=(('537213531', vt0.c1, vt0.c1)))) OVER (), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (((('-504436438')IS(0.056208491530295945)) IN ())); -- 1ms;
SELECT GLOB(json_array_length(vt0.c1), (('-573775289')>>(0x77fc07ab))) FROM vt0 WHERE (CASE WHEN (+ (0.9689508885863509)) THEN NULL COLLATE BINARY END); -- 0ms;
SELECT (((vt0.c0 IN (vt0.c1))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (vt0.c1)), SUM(UPPER(vt0.c0)) OVER ( ORDER BY (((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((CAST(vt0.c1 AS BLOB))))  NULLS LAST), (TRIM(vt0.c0) IN ()) FROM vt0 GROUP BY IFNULL(((vt0.c0)>=(vt0.c1)), vt0.c0), (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(vt0.c1)), (((-815643916 IN ())) ISNULL); -- 0ms;
SELECT (((((vt0.c1))>=((vt0.c0)))) NOT NULL) FROM vt0 WHERE (((((NULL) NOT BETWEEN (-877370425) AND (-1813936359))) NOT NULL)); -- 0ms;
SELECT ((CAST(vt0.c1 AS BLOB))!=(((vt0.c1) NOT NULL))) FROM vt0; -- 0ms;
SELECT (UPPER(vt0.c1) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 COLLATE BINARY AS TEXT), CASE WHEN '-712605754' THEN ((NULL)*(vt0.c1)) ELSE (vt0.c1 IN ()) END, TOTAL((vt0.c0 IN (vt0.c0))) OVER () FROM vt0 WHERE ((((NOT (NULL)))<>(NULL))) GROUP BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.8074433690540783 WHEN vt0.c1 THEN vt0.c1 END)IS NOT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)) HAVING vt0.c1; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))) FROM vt0 WHERE (ABS(CAST('258170689' AS REAL))); -- 0ms;
SELECT (((vt0.c1 COLLATE RTRIM, ((vt0.c1)IS NOT(vt0.c1)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), ((vt0.c1)<(vt0.c0)), (((vt0.c0))>=((x'1eaa')))))>((((vt0.c0) IS FALSE), (vt0.c1 IN ()), json_valid(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ())))), JULIANDAY(NULL, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))), (((vt0.c1)) BETWEEN ((SUM(x''))) AND (('1435298874'))) FROM vt0 WHERE ((('')&('642568594')) COLLATE NOCASE) ORDER BY ((vt0.c1) BETWEEN (((vt0.c0)>>(x'164b'))) AND (vt0.c0))  NULLS FIRST; -- 0ms;
SELECT ALL LOWER(((vt0.c1)LIKE(vt0.c1))) FROM vt0 WHERE ('>&') ORDER BY ((((vt0.c0)OR(vt0.c1)))LIKE(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0, (- (((vt0.c1) NOTNULL))), ((vt0.c0 COLLATE BINARY)%(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((((CAST(NULL AS INTEGER))AND((((((((('')OR('')))AND('')))AND(NULL)))AND(0.4615467590897563)))))AND(((((0.44920492748729435)AND(NULL)))AND(-984117654))))) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) FROM vt0 WHERE (((((0xfa1faf9)IS NOT(0.909208422414958)))==(''))); -- 0ms;
SELECT ALL CASE (- (vt0.c1))  WHEN CAST(vt0.c1 AS REAL) THEN ((vt0.c0)<(vt0.c0)) WHEN LIKELY(vt0.c1) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN 0Xffffffff99569cf1 THEN ((vt0.c0)<=(vt0.c1)) ELSE ((vt0.c1)IS NOT(-592275825)) END FROM vt0 WHERE (((('7K' IN ()))*(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((((NULL)<<('')))) AND ((LOWER(NULL))))) GROUP BY NULL HAVING vt0.c1; -- 0ms;
SELECT DISTINCT 0.023103463312655337, AVG(MAX(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))), (((vt0.c0) NOT NULL) IN ((((vt0.c0)) BETWEEN (('v')) AND ((vt0.c1))))) FROM vt0;SELECT DISTINCT CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)) THEN CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c0 AS REAL) THEN TOTAL(NULL) WHEN (vt0.c1 IN (x'd0651a46')) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((('1821150672')>(0xffffffffc8cd1fc6)) COLLATE BINARY); -- 0ms;
SELECT SUM((- (vt0.c0))), SUM(((vt0.c0)||(0.7476887074453488))) FILTER(WHERE (json(vt0.c1) IN (((vt0.c1) NOT NULL)))) OVER (), (((vt0.c1)>>(vt0.c0)) IN (MAX(vt0.c0))) FROM vt0 WHERE ((((LTRIM(0.7094377585457174, 0.6716591590649863)))<((0xffffffffe81d447a)))) LIMIT -109602299; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS INTEGER)) NOTNULL) FROM vt0 WHERE (''); -- 1ms;
SELECT DISTINCT (((vt0.c0))<((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(UNLIKELY(vt0.c0)) OVER () FROM vt0; -- 0ms;
SELECT (((vt0.c1, vt0.c0, vt0.c0, vt0.c1, NULL)) BETWEEN ((vt0.c0, ((vt0.c0)<(x'9308')), CASE WHEN 'F卥' THEN vt0.c1 END, COUNT(vt0.c0), ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c1)OR(vt0.c1)), ((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)), vt0.c0, ((vt0.c0)*(vt0.c1))))), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)IS(CAST(vt0.c0 AS REAL))), LAST_VALUE(NULL) OVER ( ORDER BY vt0.c1 ASC  NULLS LAST, CASE IFNULL(DISTINCT vt0.c0, '752645865')  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.8488853884544337 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN SQLITE_COMPILEOPTION_USED(vt0.c0) END ASC GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt0; -- 1ms;
SELECT DISTINCT (((((((((('(Xe8')AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) AND ((NOT (vt0.c0)))) FROM vt0 GROUP BY CAST(vt0.c0 AS REAL) HAVING ((((~ (vt0.c1))))<=((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))); -- 0ms;
SELECT (((vt0.c1 IN ('*_M', vt0.c1)))OR((vt0.c0 IN (vt0.c1)))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c1 IN (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((vt0.c0 IN (vt0.c1)))) FROM vt0 WHERE ((('D盩N\rR3')>>(NULL COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT CASE ((vt0.c0) NOTNULL)  WHEN vt0.c1 THEN ((vt0.c1)IS NOT(vt0.c1)) END FROM vt0 WHERE (((CASE WHEN x'5b69' THEN -1.363605091E9 END) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((vt0.c1)IS NOT(vt0.c1)))IS(AVG(vt0.c1))) FROM vt0 WHERE (TYPEOF(DISTINCT ((NULL) IS TRUE))); -- 0ms;
SELECT ALL (((~ (vt0.c0)))<<((((vt0.c1))>=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))IS((- (vt0.c0)))) FROM vt0 WHERE (CAST('-877370425' AS INTEGER)); -- 0ms;
SELECT ALL (((((vt0.c0) NOTNULL)))>((((vt0.c0)%(vt0.c1))))) FROM vt0 GROUP BY CASE SQLITE_COMPILEOPTION_USED(vt0.c0)  WHEN ((0.22778253818589422) NOTNULL) THEN ((vt0.c1)|(vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((vt0.c1)<=(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1) IS FALSE) ELSE ((vt0.c1)&(vt0.c1)) END, ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (vt0.c1) AND (LENGTH(vt0.c0))), CAST(((vt0.c0) BETWEEN (vt0.c1) AND (-592275825)) AS BLOB); -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ()))IS(MIN(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(GROUP_CONCAT(LIKE(vt0.c1, vt0.c1))), ((vt0.c0 COLLATE NOCASE) NOTNULL), MAX(((vt0.c0)<>(x''))), NTH_VALUE(((2020473943) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)>(vt0.c0)))), CASE WHEN ((vt0.c1) NOT NULL) THEN HEX(DISTINCT vt0.c1) WHEN NULL COLLATE RTRIM THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)<(x'9c11')) THEN (vt0.c1 IN ()) ELSE ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) END) OVER ( ORDER BY (+ ((vt0.c0 IN ())))  NULLS FIRST), (CASE vt0.c1  WHEN '1478678086' THEN vt0.c1 END IN ()) FROM vt0 WHERE (('' COLLATE NOCASE IN (((((NULL)AND('')))AND(x'')))));SELECT DISTINCT (((CAST('1205589361' AS REAL), CAST(vt0.c1 AS NUMERIC), (~ (vt0.c0))))=((LIKE(x'', vt0.c1), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (+ (vt0.c1))))) FROM vt0 WHERE (COALESCE(0Xffffffffcbb463c7 COLLATE NOCASE, '' COLLATE BINARY)); -- 0ms;
SELECT ALL ((((((vt0.c1))>=((vt0.c0)))))==((CASE WHEN vt0.c0 THEN vt0.c0 END))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN '6' THEN vt0.c0 END COLLATE RTRIM, (((+ (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) AS TEXT) FROM vt0 WHERE (x''); -- 0ms;
SELECT ALL SUM(SUM(vt0.c0) COLLATE RTRIM) FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)GLOB(vt0.c0)) END;SELECT DISTINCT MAX(((vt0.c1) BETWEEN (vt0.c1) AND ('-1475041079'))) FROM vt0 WHERE (0xffffffff86d35669); -- 0ms;
SELECT DISTINCT (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), vt0.c1 COLLATE BINARY, LIKELY(vt0.c1))) AND (((vt0.c1 IN ()), x'', MIN(vt0.c0)))) FROM vt0; -- 1ms;
SELECT ALL GROUP_CONCAT((('0.9161893566542542') BETWEEN (0.2944768117368709) AND (vt0.c0))) FROM vt0 ORDER BY (((((vt0.c1)<(vt0.c1)), vt0.c1, ((vt0.c0) NOT NULL)))<((('\r' IN (vt0.c1)), (~ (vt0.c0)), ((vt0.c1)+(vt0.c0)))))  NULLS FIRST, (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(CASE WHEN vt0.c1 THEN '-1979193402' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '' ELSE vt0.c0 END)) DESC; -- 0ms;
SELECT GROUP_CONCAT(NULL) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT ALL COUNT(*) FROM vt0; -- 0ms;
SELECT ALL (((~ (vt0.c1))) IS TRUE) FROM vt0 WHERE (('*{!,' IN ())) ORDER BY NULL; -- 0ms;
SELECT ALL CAST(vt0.c0 AS NUMERIC) FROM vt0 WHERE ((((((((0.852629300741631)OR(0.8905810985981971)))AND(0Xffffffffba4e7b08)), ((-912955528)-(x'')), STRFTIME('2020473943', x'', NULL), (((0.6151635486521831, 0.9870926733512002, 0.8173581078895933, '-138419243', '')) NOT BETWEEN ((0.8466041533954758, -9.26081082E8, 0.860624411565917, ',_', x'')) AND ((NULL, x'', '-1248836955', NULL, x''))), NULLIF(0.9363205712133104, x'')))<(((((236266809, '(((', 1306401418)) NOT BETWEEN ((x'', NULL, x'')) AND ((x'', 'ꇡvTMy尶4', x'd0df'))), ((x'')OR('1384528837')), ((NULL) BETWEEN ('-1475041079') AND (2.013005739E9)), ('1604787734' IN ('	MoMIJ')), ((0.38016718065143307) NOT BETWEEN (x'34c2') AND (0.17134669757231635)))))); -- 0ms;
SELECT DISTINCT (((((vt0.c1 IN ()))AND(((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(101411085)))OR(vt0.c0)))))OR(CAST(vt0.c1 AS BLOB))) FROM vt0; -- 0ms;
SELECT ALL AVG(((vt0.c1) NOTNULL)) OVER (), GROUP_CONCAT(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) FILTER(WHERE CASE WHEN ((vt0.c0)<(vt0.c1)) THEN ((vt0.c1)>=(vt0.c1)) WHEN vt0.c1 THEN CAST(vt0.c1 AS NUMERIC) WHEN '' THEN CAST(vt0.c1 AS INTEGER) END) OVER (), (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END IN (vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))) FROM vt0 WHERE ((- ((x'5ffb' IN ())))); -- 1ms;
SELECT DISTINCT (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE (TRIM(DISTINCT (+ (0.12133659793840879)), NULL)) UNION ALL SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)AND(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))OR(LIKELIHOOD(vt0.c0, 0.10655944934225392))) FROM vt0 WHERE (x'4ab1') GROUP BY ((('O' COLLATE RTRIM))<=((CAST(vt0.c1 AS INTEGER)))); -- 1ms;
SELECT DISTINCT vt0.c0, CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END COLLATE RTRIM, (- (((vt0.c1)<(vt0.c0)))), ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))|(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), ((((vt0.c1)%(vt0.c1)))IS(-877370425)) FROM vt0; -- 0ms;
SELECT ALL MIN(((vt0.c1)IS(vt0.c1))) FROM vt0 WHERE (0.5541319582504246); -- 0ms;
SELECT DISTINCT (((((~ (vt0.c1)))OR(-9.12955528E8)))AND(((('}ᘟ'))>=((vt0.c0))))), CAST(CAST(vt0.c1 AS NUMERIC) AS BLOB), ((((vt0.c0) NOT NULL)) IS TRUE) FROM vt0 WHERE ((((((0.7545411561567391))<((NULL)))) IS FALSE)) GROUP BY ((((CAST(vt0.c0 AS NUMERIC))OR(vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 1ms;
SELECT -9876128.0 FROM vt0 WHERE ((((('J/|噻뚮X') NOT BETWEEN ('-317920286') AND (x''))) NOT BETWEEN ((- (NULL))) AND (((x'') NOTNULL)))) LIMIT -2048675575 OFFSET -333540685; -- 0ms;
SELECT DISTINCT ((IFNULL(vt0.c0, vt0.c1))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((UPPER(0.3589766289910692)) IS TRUE)); -- 0ms;
SELECT ALL AVG(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))) OVER ( ORDER BY (+ (HEX(vt0.c0)))  NULLS LAST, CASE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))  WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN vt0.c1 COLLATE RTRIM END DESC, 0.8951938022366085 ASC), (((vt0.c0)) NOT BETWEEN ((((vt0.c1)<(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY))), (((0.4354050370655713 IN ())) NOT BETWEEN (((vt0.c0)>(vt0.c1))) AND (vt0.c0)) FROM vt0 WHERE ((((json_remove('zlqMo', NULL), (+ ('-2032970135')), CASE WHEN '>k' THEN x'37b0' END))<(('1821150672', ((((0.2790736905044201)AND(0xffffffffd31a161f)))AND('1435298874')), LIKELIHOOD(NULL, 0.8764121760192624))))) ORDER BY CASE WHEN UNLIKELY(vt0.c1) THEN ((vt0.c1)GLOB(vt0.c1)) ELSE vt0.c0 END ASC, CASE WHEN CAST(vt0.c1 AS BLOB) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END ASC  NULLS FIRST, (TRIM(DISTINCT NULL, vt0.c1) IN ()) DESC  NULLS FIRST;SELECT DISTINCT ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)|(vt0.c0)))))OR(((vt0.c1)-(x'')))))AND(SUM(vt0.c0))) FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS INTEGER))) DESC; -- 0ms;
SELECT ALL (NOT (json_valid(NULL))), ((((vt0.c1) IS FALSE)) NOT BETWEEN (((x'9bd9')%(vt0.c1))) AND (((vt0.c0) IS TRUE))), CASE LOWER(DISTINCT vt0.c0)  WHEN LTRIM(vt0.c0) THEN TYPEOF(vt0.c0) ELSE ((vt0.c0)<=(vt0.c0)) END, (((vt0.c0 IN ())) NOTNULL), ((((vt0.c1)<<(vt0.c1)))LIKE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) FROM vt0 WHERE ((((((x'')) BETWEEN ((x'')) AND (('-1439535878')))) NOT BETWEEN (CAST(NULL AS BLOB)) AND ('ঝ5' COLLATE BINARY))) GROUP BY ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE -1155921519 END) NOT NULL) HAVING UNLIKELY(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))) ORDER BY -7.08859388E8 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 WHERE ((((((((((('hfC亞PJ\r녳z')>=(NULL)))AND(CASE x'eb58'  WHEN 1982194250 THEN '6' END)))AND(((0.3343220855087834)<=(0.09004556748454007)))))AND(((((((((273374726)OR(NULL)))AND(0.028750633977764783)))OR(x'')))OR(-7.11707848E8)))))OR(CAST('' AS NUMERIC)))) ORDER BY ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((+ (vt0.c1))) BETWEEN (LOWER(vt0.c1)) AND ((~ (vt0.c1)))), CASE MAX(vt0.c0)  WHEN (+ ('-1662360953')) THEN 'Jp|噻뚮X' ELSE (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END, ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))GLOB(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE (((((x'')-('')))GLOB(((568824832)/(1444353391))))); -- 0ms;
SELECT (- ((((vt0.c1))<>((vt0.c1))))) FROM vt0; -- 0ms;
SELECT (((vt0.c0)GLOB(vt0.c0)) IN ()), (((((vt0.c0, vt0.c0, '-1892587284'))>=((vt0.c1, 0x54c70f5b, vt0.c1)))) IS FALSE), CASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN NULL COLLATE RTRIM ELSE (vt0.c1 IN ()) END FROM vt0 WHERE ((+ (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE BINARY FROM vt0 WHERE ((NULL IN ())) LIMIT -1721792217 OFFSET -1099622544; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c1) BETWEEN (NULL) AND (vt0.c0)))), ((vt0.c0) ISNULL) COLLATE BINARY, CAST((vt0.c1 IN ()) AS NUMERIC) FROM vt0 WHERE (((('?7')) NOT BETWEEN (('')) AND ((101411085))) COLLATE NOCASE) GROUP BY CASE ((NULL) ISNULL)  WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE NOCASE ELSE ((vt0.c0)!=(vt0.c0)) END; -- 0ms;
SELECT ALL NTILE(CAST((+ ('')) AS REAL)) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), rtreenode(CASE vt0.c1  WHEN vt0.c0 THEN 'Ei]rF' ELSE vt0.c0 END, (((vt0.c0))>((vt0.c0)))), (vt0.c1 IN (vt0.c0)) FROM vt0 WHERE (CAST(((NULL)-(-504436438)) AS INTEGER)); -- 0ms;
SELECT ALL ((TOTAL(vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c1))) AND (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))), CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND('D~[鎖l{')))AND(vt0.c1)) AS BLOB), vt0.c1 FROM vt0 WHERE ((((NOT (0.19180665577345024)))/(((x'056a') NOTNULL)))) LIMIT -560789441 OFFSET -63054431; -- 1ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c1) IS FALSE) ELSE CAST(vt0.c1 AS BLOB) END, COUNT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM) OVER (), rtreenode(((vt0.c0)<(vt0.c0)), CAST(0.6690398913377517 AS BLOB)) FROM vt0 WHERE (((CAST(x'6ffc' AS BLOB)) ISNULL)); -- 0ms;
SELECT DISTINCT CASE HEX(vt0.c1)  WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN vt0.c0 THEN vt0.c1 WHEN ((vt0.c0)!=(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END FROM vt0 GROUP BY CAST(0.8273805992805805 COLLATE RTRIM AS BLOB), vt0.c1, CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN (('-711707848')==(vt0.c0)) END, CASE WHEN (vt0.c1 IN ()) THEN CAST(vt0.c1 AS BLOB) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c1)<>(vt0.c1)) THEN ((vt0.c0) IS TRUE) WHEN ((((NULL)AND(vt0.c1)))OR(vt0.c1)) THEN ((9.1639402E7)%(vt0.c1)) WHEN ((x'')OR(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE (+ (vt0.c0)) END, (~ (((vt0.c1) IS TRUE))); -- 0ms;
SELECT DISTINCT MIN(vt0.c1), vt0.c1, (((vt0.c0)<=(vt0.c1)) IN ()) FROM vt0 LIMIT 1717332598; -- 0ms;
SELECT DISTINCT json_extract(((((((((vt0.c0)OR('h}')))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)), vt0.c1), GROUP_CONCAT(COALESCE(vt0.c1, vt0.c0)), ((((vt0.c1)>=(vt0.c1))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0; -- 0ms;
SELECT LAST_INSERT_ROWID() COLLATE RTRIM FROM vt0 WHERE ((~ ((('835383542') NOT BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT ALL CASE '1399921361'  WHEN CHANGES() THEN ((vt0.c0) IS TRUE) END FROM vt0 WHERE ((((((('+%/᭭)usY')-(0.9067393482560122)))AND((((('(g7?)/%')AND(0.8488853884544337)))OR('w䁻se')))))OR((+ (2109836934))))) GROUP BY ((vt0.c1)AND(vt0.c0)) COLLATE BINARY HAVING CASE WHEN ((vt0.c1)<=(vt0.c0)) THEN (+ (vt0.c0)) WHEN (- (vt0.c1)) THEN (vt0.c0 IN ()) WHEN ((vt0.c1)OR(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) WHEN ((' 4nR')>=(vt0.c1)) THEN GROUP_CONCAT(vt0.c1) END; -- 0ms;
SELECT DISTINCT (+ (vt0.c1)) COLLATE NOCASE FROM vt0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN 0x2cdc76e9 ELSE ((((NULL)OR(0.8584745899272399)))OR(x'3c32')) END); -- 0ms;
SELECT ((((vt0.c1) IS TRUE))|(vt0.c1)) FROM vt0 LIMIT -640893508 OFFSET -1633796123; -- 0ms;
SELECT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) FROM vt0 WHERE ((((5.9144683E7)) BETWEEN ((CAST(x'' AS NUMERIC))) AND (((('༃zpJd') IS TRUE))))); -- 0ms;
SELECT DISTINCT (MIN(vt0.c0) IN (CAST(vt0.c1 AS TEXT))), GROUP_CONCAT(CAST(vt0.c0 AS BLOB)) OVER (), AVG(((vt0.c1)AND(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT ((0Xfffffffff7bfe3d5) IS FALSE) FROM vt0 GROUP BY (((json(vt0.c0), vt0.c0 COLLATE RTRIM, ((vt0.c0)|(vt0.c0))))==(((~ (vt0.c0)), (vt0.c0 IN ()), (((vt0.c1))=((vt0.c1)))))), '-1721792217', ((((vt0.c1) ISNULL)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (TRIM(vt0.c1, vt0.c0))) HAVING (+ ((~ (vt0.c0))));SELECT DISTINCT CAST(CAST(vt0.c0 AS REAL) AS BLOB), CASE WHEN NULL THEN LAST_INSERT_ROWID() END, LIKELIHOOD(DISTINCT (vt0.c0 IN ()), 0.052495928215975596) FROM vt0 WHERE (CASE CASE WHEN NULL THEN '715445316' ELSE '' END  WHEN ((((NULL)OR(NULL)))AND('-1182012163')) THEN ((('-926081082'))<((0.08287263017013136))) WHEN (((x'4836')) BETWEEN (('-842681571')) AND (('B(ᖵvn긏}^S'))) THEN (('-846497630') ISNULL) WHEN x'2622' COLLATE RTRIM THEN json_remove(x'', 0.37055194470559893, '', 1.841218469E9) END) GROUP BY vt0.c1; -- 0ms;
SELECT CAST(((vt0.c1)/(vt0.c0)) AS BLOB), vt0.c1, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN ()) FROM vt0 WHERE (CAST(0x648b5903 COLLATE NOCASE AS REAL)); -- 0ms;
SELECT ALL (('-1976031428')>>(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(vt0.c0) OVER (), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) ISNULL), ((((vt0.c1)<<(vt0.c1))) IS TRUE), CAST(vt0.c0 AS NUMERIC) COLLATE BINARY, MAX(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) COLLATE RTRIM) FROM vt0 WHERE (((((0.2856775780888394) BETWEEN (0x1d335a04) AND (x'8573')))LIKE(((0.6526196004003) IS FALSE)))) ORDER BY CASE WHEN ((vt0.c1)LIKE(vt0.c1)) THEN json_quote(vt0.c1) ELSE ((vt0.c0)>=(vt0.c0)) END DESC; -- 0ms;
SELECT ALL (((vt0.c1)) BETWEEN ((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) AND ((CAST(vt0.c1 AS REAL)))), ((CAST(vt0.c1 AS NUMERIC)) BETWEEN (vt0.c0) AND (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))), MIN(((vt0.c0) ISNULL)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT ALL CAST(x'2cd0' AS TEXT), SQLITE_SOURCE_ID(), (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) IS TRUE) THEN vt0.c1 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END FROM vt0 WHERE ((+ ('QP鮘#%	_藺c')) COLLATE BINARY) GROUP BY NULLIF(((vt0.c1)IS(vt0.c0)), ((vt0.c1) IS TRUE)) HAVING (((((((((~ (vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND('364096748')))AND(((vt0.c0) IS FALSE))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))); -- 0ms;
SELECT ALL json_array(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END, (vt0.c0 IN ()), ((vt0.c0)||(vt0.c1)), ((vt0.c1)IS NOT(vt0.c1))) FROM vt0 WHERE (((((NULL)AND('^vgC1i-dw')))OR('444771969')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((AVG(vt0.c0)))), ((vt0.c0)%(vt0.c0)), (((vt0.c1)IS NOT(NULL)) IN ()) FROM vt0; -- 0ms;
SELECT (((((('-1055497312')||(vt0.c1)))OR((((vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (x'3438e2ac'); -- 0ms;
SELECT ALL ((+ (vt0.c0)) IN ()) FROM vt0 WHERE (((UNLIKELY(DISTINCT '0.4334629917193771')) NOT BETWEEN ((+ (0.5763267016419293))) AND ((x'' IN (x''))))); -- 0ms;
SELECT ((vt0.c1) NOT NULL) FROM vt0 WHERE (1.384528837E9); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (LIKELIHOOD(vt0.c1, 0.11210770522285618))) FROM vt0 WHERE ((- (COALESCE('', x'')))) LIMIT 806937212 OFFSET 1561199716; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) OVER () FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)*(vt0.c1))) IS FALSE), ((vt0.c0 COLLATE RTRIM)AND(((vt0.c1) NOT NULL))), ((vt0.c1) NOT BETWEEN ((~ (vt0.c0))) AND ('-9223372036854775808')) FROM vt0 WHERE (((CAST(0.8358818771084762 AS INTEGER))>=((('{+') BETWEEN (1843901333) AND (x''))))); -- 0ms;
SELECT x'', ((((vt0.c1)AND(vt0.c0 COLLATE BINARY)))OR(CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE vt0.c0 END)), ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(((vt0.c1)/(vt0.c0)))))AND('(_')) FROM vt0 WHERE ((((((0.38544880455522545, 0.12133659793840879, '-542368647'))<=((NULL, NULL, 0xffffffffc35d2a34))))&(0.4529797638441161 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((((vt0.c0))>((vt0.c0))))>=((x'' IN ()))) FROM vt0; -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE (((CAST('-638426384' AS NUMERIC))IS NOT((- (NULL))))); -- 0ms;
SELECT ALL CASE MAX(vt0.c0)  WHEN ((vt0.c0) NOT NULL) THEN CAST(-2048675575 AS BLOB) END FROM vt0 LIMIT 414038319; -- 0ms;
SELECT DISTINCT ((((((vt0.c1))<=((NULL))), vt0.c0, UNICODE(NULL)))!=(((vt0.c0 IN ()), ((vt0.c1)+(vt0.c0)), ((vt0.c0)OR(vt0.c1))))) FROM vt0 WHERE ((((NULL) NOT BETWEEN (NULL) AND (x'')) IN ())); -- 0ms;
SELECT ALL (~ (vt0.c1)), (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((COALESCE(vt0.c1, vt0.c1, vt0.c0, vt0.c1), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), COALESCE(vt0.c1, vt0.c0, vt0.c1, vt0.c1))) AND (('1391237154', TRIM(DISTINCT vt0.c1), (vt0.c0 IN ())))), ((vt0.c0)%(TYPEOF(vt0.c1))) FROM vt0 WHERE (((((NULL IN ())))<=((x'')))) LIMIT 189459188; -- 1ms;
SELECT ALL LEAD(((LIKELIHOOD(DISTINCT vt0.c0, 0.2185676245613417)) NOT BETWEEN (0.19634212688962926 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(-529220020)))), HEX(vt0.c1 COLLATE NOCASE), ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)>(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()), CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS INTEGER), TYPEOF(x'') COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(-7.23008048E8 AS TEXT)) IS FALSE) FROM vt0 WHERE (LOWER(DISTINCT ((('/e'))=(('-660711813'))))); -- 0ms;
SELECT ALL (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) IN ()) FROM vt0 LIMIT 2117427637; -- 0ms;
SELECT (('909860866') BETWEEN (CASE vt0.c0  WHEN x'' THEN vt0.c1 END) AND (((vt0.c0)LIKE(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT JULIANDAY(((vt0.c0)||(-551217739)), ((vt0.c1)<>(vt0.c0)), ((vt0.c0)&(vt0.c1))), (- (json_array(vt0.c1, vt0.c1))), UPPER(DISTINCT AVG(vt0.c1)) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1)) BETWEEN ((QUOTE(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))) FROM vt0; -- 0ms;
SELECT DISTINCT (- (MAX(vt0.c0))) FROM vt0 WHERE (ABS(LENGTH(0.7580108273612701))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)OR(vt0.c0))) BETWEEN (0xfffffffff9d785fa) AND (((vt0.c0)*(vt0.c0)))), CASE 'Aeo轘3)6j'  WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END ELSE (- (vt0.c1)) END, COUNT(*) FROM vt0 ORDER BY NULL ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1)LIKE(vt0.c0)) THEN ((vt0.c1)>=(vt0.c0)) ELSE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END FROM vt0 WHERE (CASE WHEN (NOT (0.14953828491599475)) THEN ((((NULL)OR('-903054349')))OR(0.7801524974740177)) END); -- 0ms;
SELECT DISTINCT (~ ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))&((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FROM vt0 WHERE (CASE WHEN ((('', NULL, 'l')) BETWEEN ((1205589361, 0.0015551472737507233, 0.6825982673843461)) AND ((x'8e77', NULL, 0.4168985317048258))) THEN CASE WHEN 'aHef칲*T&' THEN NULL END END); -- 0ms;
SELECT DISTINCT CAST((- (vt0.c1)) AS TEXT) FROM vt0 UNION SELECT GROUP_CONCAT((NOT (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ((json_quote(vt0.c1))IS(DATETIME(vt0.c1, vt0.c1, vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1)) FROM vt0 WHERE (CAST(((x'b3fb') BETWEEN (x'') AND ('Udu.f')) AS TEXT)) GROUP BY ((((((vt0.c1)OR(vt0.c0)))OR('0.4354050370655713'))) NOT BETWEEN (((vt0.c1)=(vt0.c1))) AND (((vt0.c0) IS FALSE))), (((NOT (0.5600250374529759))) NOTNULL), NULL; -- 0ms;
SELECT ALL MAX(CAST(vt0.c0 AS REAL)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((((((vt0.c1 IN ()))OR(-1.169261816E9 COLLATE RTRIM)))AND(LOWER(vt0.c0))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)||(vt0.c1)))))OR(((vt0.c1) NOT BETWEEN ('') AND (0.66443139994837)))) FROM vt0 WHERE (CAST(((('880172086'))=(('uF/m3'))) AS INTEGER)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END, 0.4331303735501296) FROM vt0 WHERE ((((x'') IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(vt0.c1))GLOB((((vt0.c1, vt0.c0, vt0.c1, vt0.c1, 0.7094377585457174))<=((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1))))) FROM vt0; -- 0ms;
SELECT (~ (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))), (((((+ (vt0.c0)))OR(((vt0.c1)<=(vt0.c0)))))OR(((vt0.c1)OR(vt0.c0)))), LIKELIHOOD((vt0.c1 IN ()), 0.9412932155343481) FROM vt0 WHERE ((+ (CASE WHEN 0.8247125437666835 THEN NULL END))); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS BLOB))>(MAX(vt0.c1))) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((0.09243249598245151)) AND ((CASE x''  WHEN NULL THEN NULL ELSE 0xffffffffc8cd1fc6 END)))) LIMIT 258170689 OFFSET -925512765; -- 0ms;
SELECT ALL ABS((~ ('1783677372'))) FROM vt0 GROUP BY (NULL IN ()) HAVING CAST(TOTAL(vt0.c0) AS REAL); -- 1ms;
SELECT DISTINCT ((((UNLIKELY(vt0.c0))AND((- (vt0.c0)))))OR((- (vt0.c0)))) FROM vt0 WHERE (((((0.6690398913377517)>(x''))) BETWEEN ((('盩T\rRw') NOT NULL)) AND (((x'') IS FALSE)))) GROUP BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) ORDER BY (((vt0.c0))>=(((vt0.c1 IN (vt0.c0))))) ASC; -- 0ms;
SELECT DISTINCT CAST((- (vt0.c1)) AS NUMERIC) FROM vt0 WHERE (CAST(0.5613373040957682 AS REAL)) GROUP BY CAST(CAST(vt0.c1 AS TEXT) AS REAL) HAVING ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (UPPER(vt0.c0))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(((NULL) IS TRUE) AS REAL)) LIMIT 1412571614 OFFSET -400735110; -- 0ms;
SELECT ALL ((((vt0.c1) IS TRUE)) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)<<(vt0.c1)))) FROM vt0 GROUP BY vt0.c0, (((CAST(vt0.c0 AS TEXT)))>=((vt0.c1 COLLATE RTRIM))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c1)OR(vt0.c0)))) HAVING JULIANDAY((((0.45645620852434365)) BETWEEN ((vt0.c1)) AND (('-364915101'))), ((((vt0.c1)OR(vt0.c0)))OR(0.33285578493754187)), MIN(vt0.c1)) ORDER BY ((((vt0.c0)||(vt0.c1)))<<(((vt0.c0) IS FALSE))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))<=(vt0.c1 COLLATE RTRIM)), COUNT(((vt0.c0) IS TRUE)) OVER (), (- (CASE vt0.c0  WHEN vt0.c1 THEN x'1577' END)) FROM vt0 WHERE (CAST(CAST(0.9436845241402273 AS REAL) AS BLOB)) GROUP BY (vt0.c1 COLLATE BINARY IN (((vt0.c1)%(vt0.c0)))) HAVING ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)AND(vt0.c0)))AND(((vt0.c0) NOTNULL))); -- 0ms;
SELECT DISTINCT (((('W䁻SE') BETWEEN (vt0.c1) AND (vt0.c1)))&((((vt0.c1))<((vt0.c1))))) FROM vt0 WHERE (UNLIKELY(-1.362909169E9 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((((((((((((CAST(vt0.c1 AS INTEGER))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '-912955528' THEN vt0.c0 END)))AND((+ (vt0.c1)))))AND(CAST(vt0.c1 AS NUMERIC))))OR((~ (vt0.c0)))))AND(UPPER(vt0.c1))))AND(vt0.c1)) FROM vt0 WHERE (((((x'')IS NOT(0.6127174880607072))) NOTNULL)); -- 0ms;
SELECT x'' FROM vt0 LIMIT 1997131139 OFFSET -1023127486; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL)LIKE(LOWER(DISTINCT -2080922140)))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS INTEGER)) NOTNULL) FROM vt0 WHERE ((((('-97443853')-(0.28391410278665075)))*(((0.14394695996239415) BETWEEN (0.5628543840199451) AND (0.49417940179485753))))) GROUP BY (((vt0.c0) NOTNULL) IN ()), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ('2013005739') AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), UNLIKELY(((vt0.c1)*(vt0.c1))) HAVING ((((vt0.c1) NOTNULL))&(((vt0.c0) IS TRUE))); -- 0ms;
SELECT DISTINCT (((((vt0.c1)AND(vt0.c1))))>((COUNT(*)))) FROM vt0 UNION SELECT LIKELIHOOD((vt0.c1 IN ()), 0.13760565044709194) FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c1 AS TEXT) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c1  WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN x'' WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (('}dozP''p9c' IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0 WHERE (((((x'') NOT NULL))<((- (0.9400730845234434))))); -- 0ms;
SELECT ALL ((HEX(x''))||(vt0.c0)), (((vt0.c1 IN ())) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c1, vt0.c1, vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))))), ((NULL)<=(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) FROM vt0 WHERE ((CASE WHEN x'' THEN x'' ELSE NULL END IN ())); -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT DISTINCT NULL COLLATE BINARY, UNLIKELY(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))), (((vt0.c0 IN ())) BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1))) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL ((AVG(vt0.c0)) ISNULL), TOTAL(((0Xffffffff83f7a5e4) ISNULL)) OVER ( ROWS ((vt0.c1) BETWEEN (((vt0.c1)+(x'ccbc'))) AND (((vt0.c0)|(vt0.c1)))) PRECEDING), NULL FROM vt0 ORDER BY ((((((((((vt0.c1)AND(vt0.c0)))AND(8.22999179E8)))AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND ((('k￿1') NOTNULL))) ASC, ((CAST(NULL AS REAL)) NOT NULL);SELECT DISTINCT ((((vt0.c1)IS NOT(vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0 ORDER BY (((vt0.c0)OR(vt0.c1)) IN (ABS(vt0.c1), vt0.c0)) ASC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((NULL)))  NULLS FIRST, LIKELIHOOD(DISTINCT vt0.c1, 0.4726293482357984) DESC; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 END) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (vt0.c1 COLLATE RTRIM)), ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM, vt0.c0 FROM vt0 WHERE (CAST(((((((((-2.38219157E8)OR(x'')))OR(x'0915')))AND(0x5c62eca7)))OR(NULL)) AS NUMERIC)); -- 0ms;
SELECT ALL NTILE(NULL) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), ((((((((((((0x3045a03e)OR(((vt0.c1)&(vt0.c0)))))AND((vt0.c1 IN (vt0.c0, vt0.c1)))))OR(TOTAL(vt0.c1))))OR(((vt0.c0)&(vt0.c1)))))AND(((x'532e')/(vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)), (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)) AND (((((vt0.c1)) BETWEEN (('1465276515')) AND ((vt0.c0)))))) FROM vt0 WHERE (CAST(CASE NULL  WHEN '8[TB쭢]0z렰' THEN NULL WHEN '' THEN 'KNt' WHEN '-1662495' THEN NULL END AS INTEGER));SELECT (((((((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0) IS FALSE))))AND(((((vt0.c0)OR(vt0.c0)))AND(x'')))), (- (((vt0.c0)AND(vt0.c1)))), SUM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c0)))+('')) FROM vt0 WHERE (CAST((NOT ('')) AS TEXT)); -- 0ms;
SELECT ALL ((vt0.c1 COLLATE BINARY)+(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) BETWEEN ((- (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) FROM vt0 WHERE ((CASE 0.6341164287125733  WHEN '(g7?)/%' THEN 1225537825 WHEN 126091188 THEN x'' WHEN 0.448354770661628 THEN NULL ELSE '1431272391' END IN ())); -- 0ms;
SELECT ALL GROUP_CONCAT('1445001655') FROM vt0 WHERE ((((((((0.5230292549659842)) NOT BETWEEN ((x'')) AND ((x'd819'))))OR('as' COLLATE RTRIM)))OR(CASE WHEN '-1362909169' THEN NULL ELSE '' END))); -- 0ms;
SELECT (((((vt0.c0)*(vt0.c0)), (((vt0.c1, x'8be6', vt0.c1))<=((vt0.c0, vt0.c0, vt0.c1))), CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE 0.6843990967890626 END))>((((vt0.c1)=(vt0.c0)), (vt0.c1 IN (vt0.c1)), ((vt0.c1)OR(vt0.c0))))) FROM vt0 WHERE ((((('-244139984')IS(0X6492402f)))*(UNLIKELY('1931981573')))); -- 0ms;
SELECT 0.7648394081855979 FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (CAST(0.47513546134917406 AS BLOB))) FROM vt0 LIMIT 1073870444 OFFSET -1979193402; -- 0ms;
SELECT ((vt0.c1)GLOB((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.08532753491128897))))) FROM vt0 WHERE ((((((~ ('-899483889')))AND((('P') BETWEEN (NULL) AND (x'')))))OR((~ (')^P'))))) GROUP BY CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM, vt0.c1, (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) IN (vt0.c0 COLLATE BINARY)) HAVING CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE; -- 0ms;
SELECT ALL COUNT(*) COLLATE BINARY FROM vt0 LIMIT -745861705; -- 0ms;
SELECT ALL CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((vt0.c1)<(vt0.c1)) END FROM vt0 WHERE (((((((0.6930118512656961)AND(0.46105305930183316)))AND(-1.520757789E9)))<<((x'' IN ())))) GROUP BY ((((CAST(vt0.c0 AS INTEGER))AND((((x'', vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))))OR(vt0.c0)) HAVING CASE UPPER(vt0.c0)  WHEN vt0.c0 THEN vt0.c0 ELSE ((vt0.c0) IS TRUE) END; -- 0ms;
SELECT DISTINCT NTH_VALUE(x'2a52', CAST(((vt0.c1)IS(vt0.c1)) AS REAL)) OVER (), vt0.c0, json_quote(NULL) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS BLOB) AS BLOB) FROM vt0 WHERE (CASE ((0.05559142340342427)>>(NULL))  WHEN CASE WHEN 0.4723066243598476 THEN 0X340b537f ELSE 'y꣉e' END THEN CASE WHEN 0.9751709053783273 THEN NULL WHEN x'' THEN NULL WHEN NULL THEN '' END ELSE 'Ei]rF' END) LIMIT -1235221345 OFFSET 770734160; -- 1ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c1) NOTNULL)) AND (INSTR(vt0.c0, vt0.c0))), (((+ (vt0.c0))) NOT NULL), ((vt0.c0)<(vt0.c1 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT NULL, (vt0.c1 IN ((x'348c' IN ()))), STRFTIME(CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)<<(vt0.c1)), NULL), vt0.c0, (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(0.8337181642972682)) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM, vt0.c0, CAST((- (vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, '-1942006684', SQLITE_COMPILEOPTION_USED((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt0 WHERE (((LOWER(NULL)) NOTNULL)); -- 0ms;
SELECT ALL UPPER(DISTINCT ((vt0.c1)>>(vt0.c0))), (((NULL, vt0.c0, 0Xffffffff848d5818, vt0.c1, vt0.c0)) NOT BETWEEN ((0.8728765913221619, CASE WHEN vt0.c1 THEN 0.40655846906486937 END, ((vt0.c1)<(vt0.c1)), NULLIF(vt0.c0, vt0.c0), (((('910267767')OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c1)AND(vt0.c0)), CAST(vt0.c0 AS TEXT), 0xffffffffa126c91e, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)), ((vt0.c1)!=(vt0.c1))))), (- (vt0.c1)) COLLATE RTRIM, NULL, ((((vt0.c1)OR(vt0.c0)))>=(COUNT(vt0.c1))) FROM vt0; -- 1ms;
SELECT DISTINCT HEX(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) FROM vt0 WHERE (((json_array(x'bbb6', 0.7094377585457174))<=(NULL COLLATE NOCASE)));SELECT DISTINCT ((((vt0.c1)|(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ()))) FROM vt0 WHERE ((((0.8432599039492804 IN ())) BETWEEN (((x'')<>(NULL))) AND (0.8071667692112229 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)<(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c1 COLLATE RTRIM)), (((vt0.c0 IN ()))AND(AVG(vt0.c1))), (COALESCE(DISTINCT '', vt0.c0, vt0.c1, vt0.c1) IN ()), TRIM(DISTINCT GROUP_CONCAT(vt0.c0), 0.43966508812043925 COLLATE BINARY), ROW_NUMBER() OVER () FROM vt0 WHERE (((((('8(O<'))<=(('-912955528')))) IS TRUE)) LIMIT 92824863 OFFSET 889177733; -- 0ms;
SELECT (NOT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) FROM vt0 WHERE ((((x'' IN ()))||(CASE WHEN x'8d50' THEN NULL ELSE '822999179' END))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))|(json_type(vt0.c0)))  NULLS FIRST;SELECT ALL UPPER(x'') FROM vt0 WHERE ((NULL IN (((752645865)%(0.4305773769388648))))); -- 0ms;
SELECT ALL 'n+', COUNT(*) FILTER(WHERE (+ (NULL))) OVER ( ORDER BY NULL  NULLS FIRST), CAST((((vt0.c1))=((vt0.c0))) AS REAL) FROM vt0 WHERE (((((((((('91639402' IN (0.37300962478192634, -3.17920286E8)))OR('g8	')))OR(((('<*BѤ}mJS')) BETWEEN ((-1945138572)) AND ((x''))))))OR((('wZXP') ISNULL))))OR(LIKE(x'3fcc', 0.08526389903035902, '0')))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL))<>('')) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1)IS NOT(CAST(vt0.c0 AS BLOB))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1)+(vt0.c0))))>((LIKELIHOOD(DISTINCT x'', 0.2774493844044357)))) FROM vt0 WHERE ((((- (0.2790736905044201))) BETWEEN ((((((((('9!^i\nm\r*')AND(0Xffffffff9e5affc1)))AND(x'')))OR(0Xfffffffffabeebf2)))OR(0.9936458148104533))) AND (((x'da22') BETWEEN ('	\') AND ('dy''}'))))); -- 1ms;
SELECT ALL 0.965135244545093, CUME_DIST() OVER (), ((((x'')OR(vt0.c1))) IS TRUE) FROM vt0 WHERE (TRIM(DISTINCT (((('Ac5S4娯5')OR(1584639503)))AND(0.04352373600631265)), ((NULL) IS TRUE))); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c1) AND ('I☌')) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT NULL))&(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 WHERE ((((((0.4248613318080917))<=(('{%'))))<=('0.8247125437666835'))); -- 0ms;
SELECT CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN SUM(vt0.c1) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN x'5920' THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1)<<(vt0.c0)) THEN x'589d' WHEN CAST(0.5202327545454575 AS INTEGER) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE (+ (vt0.c1)) END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE ('QP鮘#%	_藺c'); -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE ((((NOT (0.37197920328898626)))=(((0Xffffffffe81d447a) NOT BETWEEN (0.6127174880607072) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS NOT(vt0.c1)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 GROUP BY ((CAST(vt0.c1 AS NUMERIC))<=((NOT (vt0.c0)))); -- 0ms;
SELECT ALL ((((((((((0.6843990967890626)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))|(TOTAL(vt0.c0))), ((PRINTF(vt0.c1, vt0.c1, vt0.c0)) NOT NULL), (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c1, vt0.c1, vt0.c1)))))) FROM vt0 WHERE (((CASE WHEN 0.7189199325752951 THEN 0.9899437078081934 ELSE '-2046750390' END) BETWEEN ((('') NOT BETWEEN ('(FKz') AND (x''))) AND (('-1781106797' IN ())))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((CAST(NULL AS INTEGER))<=((((vt0.c1))<=((vt0.c1)))))  NULLS LAST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))) AND ((('') BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))IS NOT(((vt0.c1) NOT BETWEEN (0.7705603535318254) AND (NULL)))) FROM vt0 WHERE (((((2.62273785E8)*(-1757205671))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))!=(vt0.c0)) FROM vt0 WHERE (CASE x''  WHEN ((x'')/(NULL)) THEN CASE WHEN x'' THEN '0.33285578493754187' END END) ORDER BY (~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((vt0.c0))>=((vt0.c0))))OR(vt0.c1 COLLATE NOCASE)))OR('')), LEAD(((vt0.c0)%(((vt0.c0)/(vt0.c0)))), CASE CAST(vt0.c1 AS INTEGER)  WHEN MIN('', vt0.c1, vt0.c1, vt0.c1) THEN ((vt0.c1) NOT BETWEEN (0.1370142024122174) AND (0xffffffffe81d447a)) END, ((((736005451)OR(LIKELIHOOD(vt0.c0, 0.09125134147115843))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))) OVER ( ROWS (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c1)), ((vt0.c0) IS FALSE), (NOT (vt0.c1)))) AND (((+ (vt0.c0)), (vt0.c1 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'fb44'))))) PRECEDING), vt0.c0 FROM vt0 WHERE (MAX(((('647144774'))<=((0.25122172131542))), (+ ('')))); -- 1ms;
SELECT DISTINCT (CAST(vt0.c0 AS TEXT) IN ()) FROM vt0 WHERE (CASE ((0.8550566667455359)+(NULL))  WHEN NULL THEN ((NULL) ISNULL) END) GROUP BY IFNULL(DISTINCT vt0.c1, (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) HAVING ((LIKELY(vt0.c0))>>(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) LIMIT -1603149778 OFFSET 346022293; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((NULL) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1)%(vt0.c1)) IN ()) FROM vt0 WHERE ((((((((NULL)AND(0Xffffffffe81d447a)))AND(0.32829883181155717)), ((x'a2a1')>('0.0')), 0.9252654600473361))<>(((x'' IN (258170689, 0.44920492748729435)), ((0.07934631798863623)<(-1363605091)), 0.4299697573226243 COLLATE NOCASE)))) GROUP BY vt0.c0 COLLATE RTRIM COLLATE BINARY; -- 0ms;
SELECT DISTINCT LIKELY(CAST(vt0.c0 AS NUMERIC)) FROM vt0 WHERE (((COALESCE('809869374', ')^P'))GLOB(CAST(0.5450043397252159 AS REAL)))) GROUP BY (((vt0.c1 IN ()))-(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)), CAST(SQLITE_SOURCE_ID() AS BLOB), (vt0.c0 IN (vt0.c1)) COLLATE RTRIM; -- 0ms;
SELECT ((((x'') NOT NULL)) BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND (((vt0.c1)LIKE(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)-(vt0.c1)))*(((vt0.c1)+(vt0.c1)))) FROM vt0 WHERE ((~ (('.m' IN ())))); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS TEXT), ((((vt0.c0) ISNULL))%((((vt0.c1, vt0.c0, '0.8358818771084762', '-1196545693', vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0, vt0.c0, ''))))), vt0.c0 COLLATE RTRIM FROM vt0 WHERE ((((((NOT (0xffffffffaec3a80f)))OR('_R' COLLATE BINARY)))OR(((((((((-1.248836955E9)OR(NULL)))OR(x'')))AND('~*')))OR(NULL))))); -- 0ms;
SELECT CASE CAST(vt0.c0 AS NUMERIC)  WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((x'b091', vt0.c0, vt0.c1))) THEN vt0.c0 COLLATE NOCASE WHEN '1748403267' THEN ((vt0.c0) IS TRUE) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE MIN(vt0.c0) END FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c1 END)IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (((NOT (vt0.c1)))&(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL))-(((vt0.c0)||(vt0.c0)))) FROM vt0 WHERE ((((0.22281941956073892)) NOT BETWEEN ((CAST(723962304 AS REAL))) AND ((((('LR*Pa', '0.4723066243598476', NULL))<(('x7KSy', 0X1096766e, NULL))))))); -- 0ms;
SELECT DISTINCT ((0.912954303120213) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL LAST_VALUE((((x'e08c')) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((vt0.c0) NOT BETWEEN (1.584639503E9) AND (vt0.c1)))))) OVER () FROM vt0 WHERE (((('ev+', x'f034', -14411454)) NOT BETWEEN ((x'', '642568594', NULL)) AND ((NULL, x'', '/z+OZ|nG.'))) COLLATE NOCASE); -- 0ms;
SELECT ALL PRINTF(('' IN ()), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL)), json_valid(vt0.c1)) FROM vt0 WHERE ('-984117654'); -- 0ms;
SELECT COALESCE(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), MAX(vt0.c0), json_extract(vt0.c0, vt0.c1), COUNT(*)), SUM(SQLITE_COMPILEOPTION_USED(vt0.c0)) FILTER(WHERE vt0.c0) OVER ( ROWS ((vt0.c0) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c1) NOT NULL))) PRECEDING EXCLUDE NO OTHERS), CASE x''  WHEN NULL THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) ELSE (vt0.c0 IN (vt0.c1)) END FROM vt0 WHERE (CASE WHEN ((x'd4b7') NOT BETWEEN (0xffffffffa55b13e3) AND (x'')) THEN (0.40001901656641947 IN ('1841218469')) ELSE CASE WHEN '475007592' THEN NULL WHEN 0.0867535864184128 THEN 0.8153762093625 WHEN '+MP鹝' THEN 0x5bc861c END END);SELECT COALESCE(DISTINCT HEX(vt0.c1), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))), ((((vt0.c0)IS(vt0.c0))) NOTNULL), GROUP_CONCAT(CAST(vt0.c0 AS TEXT)) COLLATE BINARY FROM vt0 ORDER BY ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(((vt0.c1)+(vt0.c1)))) DESC, ((vt0.c1 COLLATE BINARY) IS TRUE) ASC, (((vt0.c1 IN ())) NOT BETWEEN (TYPEOF(vt0.c1)) AND (((vt0.c0)<<(vt0.c1))))  NULLS FIRST; -- 0ms;
SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.c1)))<<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))), ((COUNT(*))==(CAST(vt0.c1 AS BLOB))), COUNT(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 GROUP BY LOWER(((vt0.c0)<=(vt0.c0))), (((((NOT (vt0.c1)))OR(ABS(DISTINCT vt0.c1))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CASE vt0.c0 COLLATE RTRIM  WHEN vt0.c0 COLLATE RTRIM THEN (1773817577 IN ()) WHEN (((vt0.c1))==((vt0.c0))) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)) THEN CASE 1890188949  WHEN vt0.c1 THEN vt0.c1 END WHEN (((vt0.c1))==((vt0.c1))) THEN ((vt0.c0)OR(vt0.c1)) WHEN ((vt0.c0) ISNULL) THEN TYPEOF(vt0.c0) END; -- 1ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()), (((vt0.c0, vt0.c1, vt0.c0, vt0.c0, 0xffffffff8082f2d9)) BETWEEN ((vt0.c1 COLLATE BINARY, ((vt0.c1)||(vt0.c0)), -1158003296, CASE x''  WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c1 AS TEXT))) AND ((((((vt0.c0)AND('-1049402669')))OR(x'')), COUNT(vt0.c0), (vt0.c1 IN ()), vt0.c0, (((vt0.c1))>=((vt0.c0)))))), (((((((vt0.c1))>((vt0.c1))))OR((+ (vt0.c0)))))AND(((x'0cb8') NOT NULL))), CUME_DIST() OVER (), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) ISNULL) FROM vt0 LIMIT -1376045105; -- 0ms;
SELECT AVG(MAX((~ (vt0.c0)))) FROM vt0 WHERE (SQLITE_VERSION());SELECT ALL vt0.c1, (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0))), '1779573302' FROM vt0 WHERE (('-1721792217' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE ((+ (((((NULL)AND('䛠D')))OR('0J瞿'))))); -- 0ms;
SELECT (+ (((vt0.c0)<<(vt0.c1)))) FROM vt0 WHERE (((('t^(峳.P+')) NOT BETWEEN (((('-1329688980') NOT BETWEEN (0.09646146667407618) AND (1912866654)))) AND ((TRIM(1.197845127E9))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c1)))OR(x'2eaf')))OR(822999179)))OR(vt0.c1)))*(vt0.c1 COLLATE NOCASE)) FROM vt0 WHERE ('964864025'); -- 0ms;
SELECT ALL LOWER(DISTINCT (+ (vt0.c0))) FROM vt0 WHERE (((((0.37055194470559893, '_', NULL))>=((0.3911021169107518, 752645865, NULL))) IN ())); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)OR(vt0.c1))) FROM vt0 WHERE (CAST('d' AS TEXT)); -- 0ms;
SELECT DISTINCT (+ ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL AVG(vt0.c1) FROM vt0; -- 0ms;
SELECT CAST(x'' AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1)|(vt0.c0))) NOTNULL), (+ (SQLITE_COMPILEOPTION_USED(vt0.c1))), ((((NULL)OR(vt0.c0)))AND(vt0.c1)) COLLATE NOCASE FROM vt0 WHERE ((((((((0.742400841623477)) NOT BETWEEN ((0.6281365914439115)) AND ((x'72d2'))))AND(CAST(NULL AS BLOB))))AND(CASE '969401827'  WHEN 'b86<R' THEN '-1316591396' END))); -- 0ms;
SELECT DISTINCT ((x'')IS(vt0.c0)) COLLATE NOCASE, AVG(((vt0.c1)>>(vt0.c0))) FILTER(WHERE (((vt0.c0) NOTNULL) IN ())) OVER (), ((((vt0.c0) ISNULL)) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c1)))AND(x'')))AND(vt0.c0)))AND(vt0.c1))) AND (((vt0.c0)<(vt0.c1)))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((UNLIKELY(DISTINCT vt0.c0), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c1)-(vt0.c0)))) AND ((CAST(vt0.c1 AS TEXT), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)*(vt0.c1))))), CASE WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c1)+(vt0.c1)) ELSE vt0.c1 END, (((vt0.c1 COLLATE RTRIM))>(((+ (vt0.c0))))), CAST('/jH_zB>X' COLLATE NOCASE AS TEXT), ((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c1)|('ꨄ忧bJ>~Z')))))AND((+ (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1))<>((vt0.c0)))) NOT NULL) FROM vt0 WHERE ((((0.6196115414584784)<<('1073870444')) IN ())); -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN ('-897085068') AND ((((vt0.c0, vt0.c0, vt0.c1))=((vt0.c0, '0随', vt0.c0))))) FROM vt0 WHERE ((0.45645620852434365 COLLATE BINARY IN ())) ORDER BY CHANGES()  NULLS FIRST; -- 0ms;
SELECT SUM(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0))) OVER (), SUM((vt0.c0 IN ())), NULL FROM vt0; -- 0ms;
SELECT DISTINCT (((- (x'5689')))||(((vt0.c1)<(vt0.c0)))) FROM vt0 WHERE (((((((((((NULL) ISNULL))OR(((NULL) IS FALSE))))AND((x'' IN ()))))OR(((x'') IS FALSE))))AND((x'70a578a8' IN ())))) ORDER BY CAST(vt0.c1 COLLATE BINARY AS INTEGER) DESC; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.026968198339832883 COLLATE BINARY) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(x'861e4bdc'))) NOTNULL); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((0.9436845241402273)OR(x'c899')))AND(vt0.c0)) ELSE AVG(vt0.c0) END FROM vt0 WHERE (((x'') BETWEEN ('|tq') AND (CAST('986581110' AS BLOB)))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 GROUP BY ((0xfffffffff8f1a4da)<<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST('U1oB' AS TEXT))))OR(vt0.c0 COLLATE BINARY)), CAST(vt0.c0 COLLATE RTRIM AS REAL) HAVING ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM; -- 0ms;
SELECT ALL (~ (TOTAL(vt0.c0))), ((vt0.c1)<=(CASE 0.4707590622040103  WHEN vt0.c0 THEN vt0.c0 END)), CAST(vt0.c1 COLLATE NOCASE AS INTEGER) FROM vt0 WHERE (((CAST(0.19037291127628464 AS NUMERIC))<<(((0xffffffff8a07e7c6) IS TRUE)))); -- 0ms;
SELECT ALL CASE vt0.c1  WHEN (vt0.c1 IN (vt0.c1)) THEN vt0.c0 WHEN NULL THEN LOWER(DISTINCT vt0.c0) WHEN (((vt0.c0))!=((vt0.c0))) THEN vt0.c1 END, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((x'2234'))) COLLATE NOCASE, (NOT ((~ (NULL)))) FROM vt0 WHERE ((+ ((((0Xffffffffc658a48e, 0.7103951428470453, 0.66443139994837)) BETWEEN ((-1.7976931348623157E308, NULL, '7425367402395418837')) AND ((-1023127486, '#錊3C', -1335874268)))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.c0)) FROM vt0 WHERE (UNICODE((+ (NULL)))) ORDER BY CAST(x'11a4' AS NUMERIC) DESC; -- 0ms;
SELECT DISTINCT LAG(CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c1)) END, ((CASE 0.21728929609896241  WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, 0Xffffffffa071e02e, vt0.c1, vt0.c0)))) AND (vt0.c1 COLLATE NOCASE)), (((vt0.c0) IS FALSE) IN ())) OVER () FROM vt0 WHERE (CASE (- ('+ !(r䊥'))  WHEN (NOT ('1020164255')) THEN CAST(0xb237a95 AS TEXT) ELSE (NOT ('')) END); -- 0ms;
SELECT ALL ((+ (vt0.c0)) IN ()) FROM vt0 WHERE (((((x'')>>('-1723511288'))) NOT NULL)); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 LIMIT 1965429850; -- 0ms;
SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c1) NOT NULL))))OR(vt0.c1)) FROM vt0 WHERE ((+ ((((NULL, NULL, '0.8358818771084762')) BETWEEN (('822999179', 0.43198266589094025, '1990163039')) AND (('/JH_ZB>X', x'', x'')))))); -- 0ms;
SELECT (((vt0.c1)<<(vt0.c1)) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), (((~ (vt0.c0))) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) AND (NULLIF(DISTINCT vt0.c0, vt0.c1))), SUM(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER () FROM vt0 UNION ALL SELECT DISTINCT CAST((vt0.c1 IN ()) AS BLOB), AVG(((vt0.c0)%(vt0.c0))) OVER (), ((vt0.c0) NOTNULL) COLLATE RTRIM FROM vt0 WHERE ((('!|' COLLATE BINARY) IS TRUE)) GROUP BY vt0.c1 COLLATE BINARY HAVING (+ (((((vt0.c1)OR(0.9319745156268957)))AND(vt0.c0)))); -- 0ms;
SELECT DISTINCT (('-518604037') NOT BETWEEN ((- (vt0.c0))) AND ((+ (0.6116074699769489)))), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))<>((vt0.c0 IN ()))), (~ (715445316)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT NULL))-(((vt0.c1)LIKE(NULL)))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (((vt0.c0)!=(vt0.c1))) AND (((vt0.c1)*(NULL)))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((x'16448583')%(''))))) GROUP BY CAST((0xffffffff82c3d176 IN ()) AS BLOB) HAVING (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))>=(((- (vt0.c0))))); -- 0ms;
SELECT CASE ((vt0.c1)>(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c1) NOT NULL) ELSE (vt0.c0 IN ()) END FROM vt0; -- 0ms;
SELECT ALL ((vt0.c1) IS TRUE) COLLATE NOCASE FROM vt0 WHERE ((((('h}'))<((-1.362909169E9))) IN ())) GROUP BY 0x65a56866, vt0.c0, CAST(json_array_length(vt0.c0, vt0.c0) AS INTEGER);SELECT ALL CAST((vt0.c1 IN (x'02e9', vt0.c1)) AS INTEGER) FROM vt0 WHERE (((((((((0.763959809580051)AND(x'')))AND(0.46105305930183316)))OR(CAST(-2.08092214E9 AS NUMERIC))))AND(((0.13261949674536788) NOTNULL)))) GROUP BY (((~ (1103195109))) NOTNULL), vt0.c0, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c1 IN (vt0.c1))) AND ((x'' IN ()))) HAVING ((((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c0, NULL)))))<(((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((0.9161893566542542, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0)))))); -- 1ms;
SELECT DISTINCT ((vt0.c0)IS(vt0.c0)) COLLATE NOCASE, ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=((('') NOT BETWEEN (vt0.c1) AND (vt0.c1)))), GROUP_CONCAT(((vt0.c0) NOTNULL)), vt0.c1, ((((vt0.c1 COLLATE NOCASE)AND((vt0.c0 IN ()))))AND(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE AVG(vt0.c0)  WHEN (~ (vt0.c1)) THEN ((vt0.c0)LIKE(x'')) END, ((((((vt0.c0)GLOB(vt0.c0)))AND(((vt0.c1)!=(vt0.c1)))))AND(((vt0.c1)/(vt0.c1)))), ((((- (NULL)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), MIN(vt0.c1)))<=(((NOT (vt0.c1)), ((vt0.c0)<>(0X294acf0b)), COUNT(*)))) FROM vt0 GROUP BY IFNULL(CAST(0.9991615317607025 AS NUMERIC), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))), ((x'' COLLATE BINARY) NOT NULL), CASE WHEN ((vt0.c0)/(vt0.c1)) THEN ((vt0.c1)IS(x'')) ELSE vt0.c0 END HAVING CAST(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) AS INTEGER); -- 0ms;
SELECT DISTINCT ((((SUM(vt0.c1))OR(COUNT(*))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) FROM vt0 WHERE (LOWER(DISTINCT x'')); -- 0ms;
SELECT DISTINCT (((((+ (vt0.c1)))AND((NOT (vt0.c1)))))OR((vt0.c1 IN ()))), ((NOT (NULL)) IN ()), ((AVG(vt0.c1))<>(((vt0.c1) IS TRUE))) FROM vt0 ORDER BY (((x''))>=((vt0.c1))) COLLATE NOCASE DESC; -- 0ms;
SELECT GROUP_CONCAT(UPPER(vt0.c0)), SUM(LOWER(DISTINCT vt0.c0)), ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c1)&(vt0.c0)))))AND(vt0.c0)) FROM vt0 ORDER BY ((CASE vt0.c1  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)AND((vt0.c0 IN ())))  NULLS LAST;SELECT ((SUM(vt0.c1))>>(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))), GROUP_CONCAT(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END), CAST(CASE WHEN vt0.c0 THEN -1027185557 ELSE vt0.c1 END AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS REAL) IN ()), (+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), IFNULL(((('-1979193402', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '642453241')) AND (('&G)xiABzY', vt0.c0, vt0.c1))), (vt0.c1 IN ())) FROM vt0; -- 1ms;
SELECT ((+ (vt0.c0)) IN ()), CAST('/Z+OZ|NG.' COLLATE NOCASE AS INTEGER), ((LIKELY(vt0.c0)) NOT BETWEEN (vt0.c1) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) FROM vt0 WHERE (CASE ((0.9688374287280489) NOT NULL)  WHEN ((NULL)>=(x'3043de8e')) THEN (- (0.7704605083609349)) ELSE LOWER(0.29194831664376775) END) GROUP BY (((NOT (vt0.c1)))IS('0.4615467590897563' COLLATE BINARY)) HAVING ((((x'083b') ISNULL))+(((vt0.c1)<=(vt0.c0)))); -- 0ms;
SELECT ALL (((NOT (vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 END) AND (vt0.c1)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((-712605754)IS(vt0.c1))) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), (((- (vt0.c1))) BETWEEN (vt0.c1) AND ('')), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM FROM vt0 NOT INDEXED WHERE (NULL) LIMIT -1414123416 OFFSET 978667901; -- 0ms;
SELECT (((((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0)))) IS FALSE) FROM vt0 WHERE (((CAST(6.42568594E8 AS INTEGER)) IS TRUE)) GROUP BY ((((vt0.c0)>>(x''))) BETWEEN (((vt0.c1)-(vt0.c1))) AND (LOWER(DISTINCT vt0.c0))) HAVING (NULLIF(DISTINCT vt0.c1, vt0.c0) IN ()) LIMIT -1239860900 OFFSET 1089520434; -- 0ms;
SELECT ((((CAST(vt0.c0 AS REAL))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END IN ()), AVG(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER (), CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END AS INTEGER), CAST((((vt0.c0))<((vt0.c0))) AS TEXT), MAX(((vt0.c0)<<('MH'))) FROM vt0 WHERE ((((((('-9876128')AND('du!.O')))AND(0.894392976146591)))|((((NULL))=((0.6257392523251581)))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN 0.8343292181637179 THEN vt0.c0 ELSE vt0.c1 END)!=(CHAR(vt0.c0, vt0.c0, vt0.c1))) FROM vt0 WHERE ((- (CASE 'or'  WHEN x'7176' THEN 0xffffffffc2cc5029 WHEN '-1498647095' THEN NULL WHEN '?!#Pgw' THEN 0.3522042421685888 END))) ORDER BY SQLITE_VERSION() DESC  NULLS FIRST, (((((((((((vt0.c1))<>((vt0.c0))))AND((vt0.c0 IN ()))))OR(((vt0.c0)LIKE('-138419243')))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL LIKELIHOOD(LTRIM(vt0.c0), 0.3651598747994763) FROM vt0; -- 0ms;
SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))<=(vt0.c1)) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY LIKELIHOOD(DISTINCT json_array_length(vt0.c0), 0.26938110493618517) DESC, ((((((vt0.c0)AND(x'bce2')))AND(vt0.c1))) ISNULL)  NULLS LAST, (((vt0.c0)) BETWEEN ((vt0.c1 COLLATE NOCASE)) AND ((((vt0.c0)AND(vt0.c0)))))  NULLS FIRST;SELECT ((SUM(0.8089302599055036))<(CAST(vt0.c1 AS BLOB))) FROM vt0 WHERE (((NULL)>((((''))<((x'')))))) LIMIT 496978718 OFFSET 967101381; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'66d3aa12')))) BETWEEN (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0))) AND ((+ (vt0.c0))))) OVER (), CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE NOCASE, (+ (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (CAST((+ (0.17464581773326948)) AS NUMERIC)); -- 1ms;
SELECT ((CASE vt0.c0  WHEN '70*He[6Q0' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN x'd21f' THEN vt0.c1 ELSE vt0.c1 END)IS NOT(vt0.c1)) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) IN ()) FROM vt0 WHERE (CASE ((0.5116255309665336)<('221886126'))  WHEN ((x'') IS TRUE) THEN (((NULL, '', x'')) BETWEEN ((NULL, x'3134', '1584639503')) AND ((0.4437139855309331, 0xffffffff87e190c7, NULL))) WHEN (((NULL, 0.42320991631082927, 0.19634212688962926, -904852602, NULL))!=((NULL, 0.07419057648140615, '0.19180665577345024', 0.44809305612817707, x''))) THEN x'' COLLATE RTRIM WHEN ((('750121208')) BETWEEN (('MY~HdMK,}')) AND ((0.36018824415949047))) THEN LIKE(0.9857892643368935, '-615783993', '-') ELSE ((((((((x'')OR(x'')))OR('-1535704061')))AND(NULL)))AND(0.2944768117368709)) END) GROUP BY ((LOWER(x'')) BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((~ (vt0.c1)))) HAVING x''; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0)IS(''))), vt0.c0, ((((vt0.c1)GLOB(0.028689310564696147)))==(GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE (((((NULL)OR(CASE -7.12605754E8  WHEN NULL THEN x'' ELSE x'c2a9' END)))AND((((x'bf84')) BETWEEN ((-625096896)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT (vt0.c1 IN ()) COLLATE BINARY FROM vt0 WHERE ((((((((((0Xffffffffc06618f5)OR(-1892744758)))OR('-2032970135')))AND('')))AND(x'9aaad68f')) IN (LIKELY(x'dee3cb52'), 0.6716591590649863))); -- 0ms;
SELECT CASE WHEN ((vt0.c1) NOTNULL) THEN COUNT(vt0.c1) END FROM vt0; -- 0ms;
SELECT CASE (('-1766490200') NOTNULL)  WHEN (~ (vt0.c0)) THEN 'BYs9o[Wﺭ' COLLATE NOCASE ELSE CAST(vt0.c1 AS TEXT) END FROM vt0 WHERE (CASE WHEN (NULL IN ()) THEN ((x'') IS FALSE) END); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS BLOB))/(SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT CASE WHEN ((vt0.c1) NOT NULL) THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.24437643373536133 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'78b1' END ELSE (((vt0.c0, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c1, vt0.c0))) END, CAST(vt0.c0 AS TEXT), (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT json_valid((vt0.c1 IN ())) FROM vt0 WHERE ((((0.6479597950367272 COLLATE BINARY))=((((((x'')OR('a[')))AND(NULL)))))); -- 0ms;
SELECT DISTINCT 0.3298783750135671, 0.08924102009532331, ((GROUP_CONCAT(vt0.c0))||(('' IN ()))), TOTAL(((vt0.c0)-(x''))), CUME_DIST() OVER () FROM vt0 WHERE (((((((((-9.84117654E8)AND('-1536777447')))OR(-1.979193402E9)))AND(NULL)))OR('70384939')) COLLATE NOCASE); -- 0ms;
SELECT ALL (NOT ((- (NULL)))), CASE vt0.c1  WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0x38679eb)) END, ((CAST(NULL AS REAL)) ISNULL) FROM vt0 WHERE ((NULLIF(DISTINCT 'KWᘟ&[', x'391f') IN (((((((((NULL)OR(x'40c4')))OR(NULL)))OR('')))OR(x'')), (('-1721792217') BETWEEN (2034140198) AND (1.384528837E9))))); -- 1ms;
SELECT DISTINCT (((((vt0.c0))>((vt0.c1))))AND(COALESCE(vt0.c0, vt0.c0, vt0.c1, 1.841218469E9))) FROM vt0 ORDER BY ABS(DISTINCT CASE WHEN 0Xffffffffb568bbc2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) ASC; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN ((- (vt0.c1))) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) FROM vt0 NOT INDEXED WHERE (((((((((x'6bef')AND((NULL IN ()))))AND(((NULL) BETWEEN (0.3714379224472907) AND (x'')))))OR((('2013005739') NOT BETWEEN (NULL) AND (NULL)))))AND((NOT (x''))))) LIMIT -9223372036854775808 OFFSET 2013005739; -- 0ms;
SELECT DISTINCT 0.48304560057444856 FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c1) COLLATE RTRIM FROM vt0 WHERE (((((('0.8466041533954758')) NOT BETWEEN (('')) AND ((x'')))) ISNULL)); -- 0ms;
SELECT load_extension(GROUP_CONCAT(vt0.c1), vt0.c1 COLLATE NOCASE) FROM vt0;SELECT ALL (CAST(vt0.c1 AS TEXT) IN ()) FROM vt0 WHERE (CAST(CAST('0.7779159709677858' AS NUMERIC) AS INTEGER)) LIMIT 743496719; -- 0ms;
SELECT ALL ((vt0.c0)IS NOT(vt0.c1)) COLLATE RTRIM, ((vt0.c0) ISNULL) COLLATE NOCASE, (((vt0.c1)) BETWEEN ((0.07358688358908849)) AND (((((vt0.c0))!=((-9.77629352E8)))))) FROM vt0 WHERE (0.08007816273684265 COLLATE BINARY) GROUP BY (NOT (((vt0.c0) NOT NULL))) HAVING (((vt0.c1 IN (vt0.c0)))GLOB(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)); -- 1ms;
SELECT ALL (x'' IN (vt0.c1)), (~ (vt0.c0)), GROUP_CONCAT(((vt0.c0)-(vt0.c1))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), 463818160, vt0.c1 FROM vt0; -- 0ms;
SELECT (- (vt0.c1)) FROM vt0 LIMIT -1434721539 OFFSET -1255967897; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN x'' END COLLATE NOCASE, (((vt0.c0 IN ())) NOT BETWEEN ((vt0.c0 IN ())) AND ((~ (0.07663847995896234)))), ((((vt0.c1)IS NOT(vt0.c1)))GLOB(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))), (vt0.c0 IN (vt0.c0)) COLLATE RTRIM, (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))+((((2.21886126E8)) NOT BETWEEN (('840715568')) AND ((vt0.c0))))) FROM vt0 WHERE ((+ (-1888169527)) COLLATE RTRIM); -- 0ms;
SELECT ALL vt0.c0, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND (AVG(vt0.c0))), json_type(vt0.c0 COLLATE RTRIM) FROM vt0;SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0)>(vt0.c0)))), CAST(((((vt0.c1)AND(0.08043526740334372)))OR(vt0.c0)) AS BLOB), UNLIKELY(DISTINCT ((vt0.c0)<=(vt0.c1))) FROM vt0 INTERSECT SELECT ALL (~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), vt0.c0, ((vt0.c0)LIKE(vt0.c1)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c1 COLLATE NOCASE END FROM vt0 WHERE (((((x'') NOT BETWEEN (0x273068e) AND (-2105017951)))>=(((((NULL)OR(NULL)))AND(x''))))) LIMIT 336751934 OFFSET 1691480675; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 END) ISNULL) FROM vt0 LIMIT 1939246616 OFFSET 671636397; -- 1ms;
SELECT ALL GROUP_CONCAT(GROUP_CONCAT(((vt0.c0) ISNULL))) FROM vt0 WHERE (((((((NULL)OR('NK')))OR(NULL)))<<((('0.6151635486521831')-('364096748')))));SELECT DISTINCT ((((MIN(vt0.c1))OR(x'')))AND((+ (vt0.c1)))), ROW_NUMBER() OVER (), ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.4904566557115846 END)OR(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)))))AND(TRIM(DISTINCT vt0.c1))) FROM vt0 GROUP BY CAST(('-1603149778' IN (vt0.c1)) AS TEXT), 0.15903231170253707, (CAST(vt0.c1 AS BLOB) IN ()) HAVING (((SUM(vt0.c0)))<>((vt0.c0 COLLATE RTRIM))) LIMIT 1034166747 OFFSET -551217739; -- 0ms;
SELECT LAG(CASE ((vt0.c0)LIKE(vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN ((vt0.c1)<>(vt0.c0)) END, (((('H7xf8M{P')AND((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), CASE WHEN ((vt0.c0)&(vt0.c0)) THEN LIKELY(2.62273785E8) END) OVER ( ORDER BY LOWER(DISTINCT ((1034166747)>=(0.23914525325292957))) ASC  NULLS FIRST) FROM vt0 WHERE (CAST(NULL AS REAL) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)&(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((vt0.c1 IN (vt0.c1)))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)))AND(SUM(vt0.c0))))AND(vt0.c1)), COUNT((vt0.c0 IN ())), ((vt0.c1) NOT NULL) FROM vt0 WHERE (CASE SQLITE_SOURCE_ID()  WHEN -1023127486 COLLATE NOCASE THEN -1.248836955E9 END); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES(), ((((vt0.c0)>>(vt0.c0)))*(((vt0.c1)<<(vt0.c1)))), CASE WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE  NULLS FIRST, (((vt0.c1)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))); -- 1ms;
SELECT ALL ((vt0.c0 COLLATE BINARY) NOT NULL) FROM vt0 WHERE (UPPER('-840417048')); -- 0ms;
SELECT DISTINCT (((+ (vt0.c1))) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (AVG(vt0.c1))) FROM vt0 NOT INDEXED WHERE (CASE x'' COLLATE RTRIM  WHEN (0.6778958987558745 IN ()) THEN CASE WHEN x'a10a' THEN '-597554954' WHEN 0.9926383608666847 THEN NULL WHEN 'TRUE' THEN '0.8488853884544337' WHEN x'' THEN '-109602299' WHEN x'b10f' THEN '-910302489' END ELSE ((((x'')AND(-7.23008048E8)))OR(NULL)) END); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (NOT ((vt0.c1 IN ()))), CAST((NOT (x'24dc')) AS TEXT) FROM vt0 WHERE ((((x''))<>(((+ (0.47223618081099894)))))); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((((x'')IS(NULL)) IN ())) GROUP BY (((((((((vt0.c1 IN (vt0.c1)))OR((((vt0.c0))>((vt0.c1))))))OR((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c1))))))AND((~ (vt0.c0)))))AND(((vt0.c0) NOT NULL))); -- 0ms;
SELECT ALL CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c0) ISNULL) WHEN ((vt0.c1)>>(vt0.c0)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c1 THEN '271484004' END END FROM vt0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) FROM vt0; -- 0ms;
SELECT ((((vt0.c1) IS FALSE)) BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c1))) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), CAST(vt0.c0 AS INTEGER), CAST('-1178115586' AS BLOB) FROM vt0 WHERE ((((x'')) BETWEEN ((((x'') NOT NULL))) AND ((((((((((NULL)OR(-1243739388)))OR(1.841218469E9)))AND(NULL)))AND(NULL)))))); -- 1ms;
SELECT DISTINCT CAST(0.48412252151420054 AS TEXT) COLLATE RTRIM FROM vt0 WHERE ((- (CAST(0.5912480224051777 AS TEXT)))); -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) FROM vt0 WHERE ((CAST(x'' AS REAL) IN (((0.28391410278665075)/('\ng혡B政')), (- ('-877370425')), CASE WHEN '1248354071' THEN 0X7e8ba41a ELSE 0.28391410278665075 END))) LIMIT 668349148; -- 0ms;
SELECT ALL ((((vt0.c0)!=(vt0.c1)))>>(vt0.c1)) FROM vt0 WHERE (((('Ux') IS FALSE) IN ())) LIMIT 1208120457 OFFSET 909860866; -- 0ms;
SELECT ((MAX(vt0.c0)) BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (- (COUNT(vt0.c0))) FROM vt0 WHERE (0.6716591590649863); -- 0ms;
SELECT ALL 0.8085152926683219 FROM vt0 WHERE (((((NULL)AND(((x'c39c') IS FALSE))))AND(IFNULL(0.22548698942672207, 0x40f1903c)))) GROUP BY ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (vt0.c1) AND (vt0.c0)) HAVING (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), (~ (vt0.c1)), CAST(vt0.c1 AS NUMERIC))) AND ((x'' COLLATE BINARY, AVG(vt0.c1), NULL))); -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS INTEGER))OR((- (vt0.c1)))))AND(((vt0.c1)*('9m2)>\rqoJ')))), GROUP_CONCAT(-1.099622544E9), ((((vt0.c1)|(vt0.c0)))<=(((vt0.c1) IS FALSE))) FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL)  NULLS FIRST, CAST(CAST(vt0.c1 AS BLOB) AS BLOB); -- 0ms;
SELECT ALL vt0.c0, COUNT(*) OVER (), CASE vt0.c0  WHEN (NOT (vt0.c0)) THEN (((x'', vt0.c1, vt0.c0))>=((vt0.c0, vt0.c1, vt0.c1))) WHEN x'e3da3fd2' THEN LOWER(vt0.c0) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, NULL, vt0.c1)) AND ((vt0.c0, 0.7236388128852923, vt0.c0))) THEN ((vt0.c0)>(vt0.c1)) WHEN ((vt0.c0)|(vt0.c0)) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c1)) ELSE vt0.c1 COLLATE NOCASE END FROM vt0 LIMIT 1748173689; -- 0ms;
SELECT ALL (~ (TOTAL(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)!=(vt0.c0)) AS REAL), CASE vt0.c1  WHEN CAST(vt0.c0 AS REAL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c1 END WHEN ((vt0.c1)IS(vt0.c0)) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) ELSE CASE '91639402'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END, (((+ (vt0.c1)))>=(((vt0.c1)OR(vt0.c0)))), (((((((vt0.c0))<((vt0.c0))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))), LEAD((((vt0.c0 IN (vt0.c1))) ISNULL), ((((CASE vt0.c0  WHEN vt0.c0 THEN 0.8558407184424517 END)OR(((((vt0.c1)OR('-573775289')))OR(NULL)))))AND(CAST(0xffffffff93e18719 AS INTEGER))), vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (('-573775289')IS NOT(vt0.c1)), (((NULL, '<棬,q', vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0)))), ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))&(MIN(vt0.c1))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (CASE WHEN (NULL IN ()) THEN 0Xffffffffc9956778 COLLATE BINARY ELSE ((x'9450') IS FALSE) END); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) BETWEEN (SUM(vt0.c0)) AND ('-2038459198')) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (-1.721792217E9) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CASE WHEN '81987364' THEN '0.2856775780888394' WHEN NULL THEN x'0f3b' WHEN 0.6952293584023971 THEN NULL END COLLATE BINARY); -- 0ms;
SELECT (vt0.c1 COLLATE NOCASE IN ()) FROM vt0 WHERE (((((((((((x'9578')OR(x'dbaa')))OR(x'')))AND('1604787734')))OR('-78035290')))>>('61596933'))); -- 0ms;
SELECT (((((((((vt0.c0 IN ()))OR(vt0.c1)))OR(((vt0.c1)<<(vt0.c1)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (CAST((NOT (NULL)) AS BLOB)); -- 0ms;
SELECT ((((NULL)-(vt0.c1)))<=(((vt0.c0) NOTNULL))) FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (x''))) IS TRUE)) LIMIT 537213531; -- 0ms;
SELECT vt0.c0 FROM vt0 ORDER BY (~ ((~ (vt0.c1)))) DESC LIMIT -1670139863 OFFSET 1435298874; -- 0ms;
SELECT ALL COUNT(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN x'c3f6' END) FROM vt0 ORDER BY CASE WHEN NULL THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) END ASC; -- 0ms;
SELECT DISTINCT '1273481118' COLLATE NOCASE, (('509999610') NOT BETWEEN (LIKELY(DISTINCT vt0.c0)) AND (((((1753866553)OR(vt0.c0)))OR(vt0.c0)))), (LIKE(vt0.c1, vt0.c0) IN (((vt0.c1) IS TRUE), ((vt0.c1)<(vt0.c0)))) FROM vt0 WHERE ((2002139586 COLLATE NOCASE IN (CAST('' AS TEXT)))) ORDER BY ((vt0.c0) IS FALSE) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT ((0.08217641895050087) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END) AND ((vt0.c0 IN ()))), ((NOT (vt0.c0)) IN ()), CAST(vt0.c1 COLLATE BINARY AS BLOB) FROM vt0 LIMIT -695161500; -- 0ms;
SELECT (vt0.c0 COLLATE RTRIM IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0))<((vt0.c0))) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (((vt0.c0) NOTNULL))) FROM vt0 WHERE ((((UNICODE(0Xffffffffffffffff)))>((x'b32c')))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT MIN(((vt0.c0) ISNULL)) FROM vt0; -- 0ms;
SELECT DISTINCT json_type(vt0.c1) COLLATE RTRIM FROM vt0 WHERE (CAST(x'' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT ALL x'' FROM vt0 GROUP BY ((+ (vt0.c0)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) HAVING ((((vt0.c1)|(x'')))>(vt0.c0)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), (NOT ((vt0.c1 IN ()))), (((vt0.c1 IN ())) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(0xffffffffb831d322)))OR(vt0.c1)))OR('*i'))) AND ((((vt0.c0, vt0.c0, vt0.c1))<>((vt0.c0, '877104731', vt0.c0))))) FROM vt0 LIMIT -688207862 OFFSET -660711813; -- 0ms;
SELECT (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM FROM vt0 LIMIT 835515463; -- 0ms;
SELECT ALL (- ((+ (vt0.c1)))), ((((vt0.c1) IS TRUE))LIKE(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)), (NOT (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))) FROM vt0 GROUP BY '845039522' ORDER BY ((((vt0.c0)%(0.24124444136351153)))||(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))<>(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL CASE (vt0.c1 IN ())  WHEN ((vt0.c0)+(vt0.c0)) THEN (((x'a71f', vt0.c0, vt0.c0))=((vt0.c1, vt0.c1, vt0.c0))) WHEN vt0.c0 THEN vt0.c0 WHEN ((((NULL)OR(vt0.c1)))OR(vt0.c0)) THEN ((vt0.c1) NOTNULL) END FROM vt0 WHERE (((((NULL) NOT BETWEEN ('.Jv5()G') AND (-9876128.0))) BETWEEN (('1306401418' IN ('-2133154564'))) AND ((0x3045a03e IN ('pn&#[!G඲J', -642483984))))) LIMIT 2143667412 OFFSET 1585469299; -- 7ms;
SELECT (((+ (vt0.c1))) ISNULL) FROM vt0 WHERE (((((((((('泻\r!5w8⤅' IN ()))OR((('1197061353') NOT BETWEEN (x'75fa') AND (0.30342959444111084)))))OR(CASE NULL  WHEN 0.50859816759017 THEN '?MV03>0I' WHEN '1584639503' THEN -839514725 WHEN '1398821733' THEN x'' ELSE NULL END)))OR((((x'')) BETWEEN ((NULL)) AND (('475575446'))))))OR(CAST(0.4332988832369359 AS REAL)))); -- 0ms;
SELECT CUME_DIST() OVER (), (+ (MAX(0x7bac68e6))), (TOTAL(vt0.c0) IN ()) FROM vt0 WHERE ((((0Xfffffffff8f1a4da)) BETWEEN (('')) AND (('0.9400730845234434' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (((vt0.c0, '0.7779159709677858', vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), vt0.c0, ((x'') NOTNULL))) AND ((((vt0.c1)/(vt0.c1)), CAST(vt0.c1 AS NUMERIC), UNLIKELY(DISTINCT '')))) FROM vt0; -- 1ms;
SELECT (((vt0.c1)<>(vt0.c0)) IN ()) FROM vt0 WHERE (((0.7050909124238792 COLLATE BINARY)>>(CAST('￿V' AS TEXT)))); -- 0ms;
SELECT ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS TEXT) COLLATE BINARY) FROM vt0 WHERE ('-1'); -- 0ms;
SELECT DISTINCT MAX(((vt0.c0)!=(vt0.c1))) FROM vt0 WHERE ((((NULL COLLATE BINARY))<(((((('-437954284')OR(NULL)))OR(x'')))))); -- 0ms;
SELECT DISTINCT ((0.7829926657618355 COLLATE RTRIM) NOTNULL) FROM vt0 WHERE (CASE WHEN ((((x'')AND(x'')))OR('-1979193402')) THEN ((x'24ba')%('')) ELSE ('2020473943' IN (-1603149778)) END) LIMIT -801252134 OFFSET -775685438; -- 0ms;
SELECT DISTINCT MAX(((((((((1775747919)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))), 'ᕚ%', vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (- ((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, '1907919408', vt0.c1))))) FROM vt0 WHERE (((TYPEOF(NULL))LIKE((((((((('k')AND(0.593573977830303)))AND(x'')))AND(x'')))AND(x''))))) ORDER BY CAST((+ (vt0.c1)) AS BLOB) DESC; -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))), COUNT(vt0.c1) OVER (), '-977629352' FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1))) AND (vt0.c0)) FROM vt0 WHERE ((((((('1541774363') NOT BETWEEN ('-1520757789') AND (7.15445316E8)))AND((NOT ('844341941')))))OR(((x'7f9e') NOT BETWEEN (0.47216493805796345) AND ('65823586'))))) LIMIT -830145981; -- 0ms;
SELECT DISTINCT json_type(0x30f4873d), ((TOTAL(vt0.c1)) BETWEEN (TOTAL(vt0.c1)) AND (NULL)), ((((+ (vt0.c1)), json_quote(vt0.c1), -724098585, (+ (vt0.c1)), (((x'', vt0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0)))))!=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c1 AS TEXT), (((vt0.c0))<((x''))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN NULL ELSE vt0.c1 END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))), LIKELY((NULL IN ())), ((0.45838917709638083)IS((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (UNLIKELY(x'8c41') COLLATE RTRIM); -- 0ms;
SELECT ALL ((((vt0.c1))<=((vt0.c0))) IN ()), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, 0X670c344faa8b40d5, vt0.c0))) COLLATE NOCASE, json_remove(((vt0.c1) ISNULL), TOTAL(vt0.c0)) FROM vt0;SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((('z') IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT MIN(json_array_length(vt0.c0, vt0.c1)), GROUP_CONCAT(x'') OVER (), GROUP_CONCAT(vt0.c1) FILTER(WHERE (((('CtK]/d') ISNULL)) NOT BETWEEN (ABS(vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER () FROM vt0 WHERE ((((('d^\n9{[') NOT BETWEEN ('1988958769') AND (x'')))OR(((NULL)-(NULL))))) ORDER BY vt0.c1  NULLS FIRST; -- 0ms;
SELECT DISTINCT MAX((((vt0.c1, vt0.c1, vt0.c0))==((vt0.c1, vt0.c1, vt0.c0))) COLLATE NOCASE), ((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))<(((x'048c') BETWEEN ('1398821733') AND (vt0.c1)))), UNLIKELY((+ (vt0.c1))) FROM vt0 WHERE (((CASE '0.6930118512656961'  WHEN NULL THEN '<?Ѥ\q|' WHEN '0.5230292549659842' THEN x'' WHEN NULL THEN x'b04fc0b0' ELSE 0.38016718065143307 END) BETWEEN (((0xffffffff98f57d73) NOTNULL)) AND ((((('')OR(x'')))AND('936747463'))))); -- 0ms;
SELECT ALL ((((CAST(vt0.c1 AS REAL))OR(((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))))OR(MIN(vt0.c1))), COUNT(*) OVER ( RANGE  UNBOUNDED PRECEDING), (NOT (COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT LIKE((vt0.c1 IN ()), CAST(vt0.c1 AS REAL)), (((('1756596511')*(vt0.c1))) IS TRUE), vt0.c1, (((0.8432599039492804))<=((((vt0.c0)=(''))))), (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c1)), vt0.c1 COLLATE BINARY, vt0.c0)) AND (((vt0.c0 IN (vt0.c0)), (((vt0.c0))==((vt0.c0))), ((vt0.c1)&(vt0.c0))))) FROM vt0 WHERE (CAST(CASE '|曩'  WHEN 0.15910570169009153 THEN NULL ELSE x'' END AS INTEGER)) GROUP BY 0.09899182128548578 HAVING ((((vt0.c0)LIKE(vt0.c1))) NOT BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c1) NOTNULL))); -- 0ms;
SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c1) IS TRUE))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 ORDER BY (((0.6441662527312869))>=((CAST(vt0.c0 AS NUMERIC)))) DESC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(AVG(x'')) FROM vt0 WHERE ((((x'969e2f87dec9' IN ()))LIKE(COALESCE(DISTINCT NULL, NULL, 0.7772707299079612, x'5338', NULL, NULL))));SELECT ALL LOWER(((vt0.c0)>=(vt0.c0))) FROM vt0; -- 0ms;
SELECT AVG(CAST(vt0.c1 AS TEXT)) FILTER(WHERE (((((vt0.c1))>=((vt0.c1))))<=((vt0.c0 IN (vt0.c1))))) OVER (), CAST(((vt0.c0)<<(vt0.c0)) AS INTEGER), ((vt0.c0)>(((vt0.c0)LIKE(vt0.c0)))) FROM vt0 WHERE (CASE -9876128.0  WHEN '' THEN '' WHEN x'' THEN x'' WHEN 0.4168985317048258 THEN NULL END COLLATE NOCASE) GROUP BY (((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT vt0.c1, NTILE((((vt0.c1)<=(vt0.c0)) IN ())) OVER (), vt0.c0 FROM vt0;SELECT ALL ((LIKELY(vt0.c1)) IS TRUE), (((NOT (vt0.c0))) IS FALSE), IFNULL(DISTINCT NULL, ((vt0.c0) ISNULL)) FROM vt0 WHERE (((IFNULL(NULL, 0.24236152871781202))=(((0xffffffffc8cd1fc6)IS('-167058297'))))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) ISNULL) AS TEXT) FROM vt0 WHERE ((((((0.5138815304817551))>=(('2013005739')))) BETWEEN (('' IN ())) AND ('1775747919'))) ORDER BY (((vt0.c1 IN ()))<>(((vt0.c0) NOT NULL)))  NULLS FIRST, ABS(DISTINCT vt0.c0 COLLATE BINARY) DESC, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE; -- 1ms;
SELECT ALL CUME_DIST() OVER () FROM vt0 WHERE ((~ (LOWER(NULL)))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)IS(vt0.c0))) IS TRUE) FROM vt0 WHERE (CASE (('715445316')&(NULL))  WHEN (~ (NULL)) THEN CAST(0.8153762093625 AS INTEGER) END); -- 0ms;
SELECT CASE WHEN ((vt0.c0) NOTNULL) THEN COUNT(*) WHEN TYPEOF(DISTINCT vt0.c1) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) WHEN MAX(vt0.c1) THEN ((vt0.c1) IS TRUE) ELSE ((vt0.c0) ISNULL) END FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN NULL END)) AND ((CAST(NULL AS NUMERIC)))) ASC  NULLS LAST; -- 0ms;
SELECT ALL x'ed63', '-1960663816', ((vt0.c0 IN ()) IN ()) FROM vt0 WHERE (((CAST(0.8615321848651353 AS NUMERIC))>=(-6.60711813E8 COLLATE RTRIM))); -- 0ms;
SELECT AVG(((vt0.c0) NOTNULL)) COLLATE BINARY, ((vt0.c1) IS FALSE) COLLATE RTRIM, CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN HEX(NULL) END FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL NULL FROM vt0; -- 0ms;
SELECT ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))!=(IFNULL(DISTINCT vt0.c1, vt0.c1))), ((((vt0.c0) IS FALSE))-(vt0.c1)), (CAST(vt0.c0 AS REAL) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0, 0.860624411565917, vt0.c0, vt0.c1, vt0.c1))<((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0))))OR(CAST(vt0.c1 AS REAL))))OR(AVG(vt0.c0))))AND(((vt0.c0)>(vt0.c1)))))OR(vt0.c1 COLLATE BINARY)) FROM vt0 WHERE ('游'); -- 0ms;
SELECT ALL CASE (vt0.c0 IN ())  WHEN MAX(vt0.c0) THEN (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN (('0.7476887074453488', vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, '-629858571'))) ELSE CASE WHEN vt0.c1 THEN 0X5bc861c ELSE vt0.c1 END END, STRFTIME((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)OR(vt0.c0)), (- (vt0.c0)), ((vt0.c0) BETWEEN (0Xffffffff93e18719) AND (vt0.c0)), ((vt0.c0)<(vt0.c0))), MIN((NULL IN ())), vt0.c0, ((((vt0.c1)IS(vt0.c1))) IS FALSE), (((CAST(vt0.c0 AS TEXT)))=(((NULL IN (vt0.c0))))), CASE NULL  WHEN TOTAL(NULL) THEN (- (vt0.c1)) END FROM vt0 WHERE ((((((- (0.3887417433590571)))OR((NULL IN (NULL)))))OR((x'' IN ())))); -- 0ms;
SELECT -1264560344 FROM vt0 WHERE ((((((NULL))>((''))))OR(((x'') NOT BETWEEN (NULL) AND (''))))); -- 0ms;
SELECT CASE vt0.c1  WHEN ((vt0.c1)<(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN NULL ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END FROM vt0; -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 WHERE ((+ (((2020473943) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c1, x'')) BETWEEN ((vt0.c1, vt0.c0, 0.4354050370655713)) AND ((vt0.c1, vt0.c0, vt0.c0)))) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)LIKE(vt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((x'87ae')IS NOT(vt0.c1)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS NUMERIC)) IS TRUE), -860318100, CASE WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) NOTNULL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN LOWER(vt0.c1) ELSE CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0 WHERE ((~ (((NULL)IS NOT(-1.979193402E9))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0 WHERE ((((('-1529290578')<<(4.44771969E8)))/((('dn')*(NULL))))); -- 0ms;
SELECT ((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)OR(CAST(vt0.c0 AS INTEGER))))OR(0Xffffffffeac82976)))OR('')))OR(CAST(vt0.c0 AS REAL))), CASE WHEN vt0.c1 COLLATE BINARY THEN (~ (vt0.c0)) END, AVG(COUNT(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) FROM vt0 LIMIT -962811749;SELECT ALL (+ (HEX(vt0.c1))) FROM vt0 WHERE ((((((- (x'')))OR(((x'7b75') NOTNULL))))AND((- (x'3571'))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((vt0.c1 COLLATE RTRIM) IS TRUE), CAST(((vt0.c1)>>(vt0.c0)) AS REAL) FROM vt0; -- 0ms;
SELECT ALL MIN(CAST(vt0.c1 AS INTEGER)) COLLATE RTRIM FROM vt0 WHERE (((0.29221890053319044) ISNULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.41347585897988615 THEN vt0.c0 END)&(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT (+ (HEX(vt0.c0))), ((vt0.c1)%(0.030921525794620375)) COLLATE NOCASE, vt0.c0 FROM vt0 WHERE (LIKELIHOOD(x'' COLLATE NOCASE, 0.38545612086628767)); -- 0ms;
SELECT DISTINCT ((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt0.c1)<>(vt0.c1))) AND (json_remove(vt0.c1, vt0.c1, NULL, vt0.c0))), CASE ((((NULL)OR(vt0.c1)))AND(vt0.c0))  WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c0)) END, ROW_NUMBER() OVER ( ORDER BY (~ ((vt0.c0 IN (vt0.c0, vt0.c1)))) DESC RANGE CAST(((vt0.c0)AND(vt0.c0)) AS INTEGER) PRECEDING) FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c1))) NOT BETWEEN (x'') AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) DESC  NULLS LAST; -- 0ms;
SELECT CAST(((vt0.c0) NOT NULL) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL COUNT(vt0.c1 COLLATE BINARY COLLATE BINARY), NULL, vt0.c1 FROM vt0 WHERE ((((x'' IN ())) IS FALSE)); -- 0ms;
SELECT CAST((+ (vt0.c1)) AS INTEGER), ((((vt0.c1) IS TRUE))<<(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.7580108273612701 WHEN vt0.c1 THEN vt0.c1 END)), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND((vt0.c1 IN ()))))AND(vt0.c1)) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL))<=('')), CAST((((vt0.c0))>((vt0.c0))) AS BLOB), CAST(((vt0.c0) NOT NULL) AS NUMERIC) FROM vt0; -- 0ms;
SELECT CAST(((NULL)<=(vt0.c0)) AS BLOB) FROM vt0 WHERE (-1.960663816E9 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c1, vt0.c0))) IN ()) FROM vt0 WHERE ((~ ((((''))>=((x'7190ece2')))))); -- 1ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL))LIKE(x'')) FROM vt0; -- 2ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL) FROM vt0 WHERE (x'cab9'); -- 0ms;
SELECT DISTINCT ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY, ((((((((((((((vt0.c0)OR(vt0.c1)))OR(2058118564)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))IS NOT(((((vt0.c0)AND(vt0.c1)))OR('1172300112')))), NTILE(LIKELIHOOD(vt0.c1, 0.9931832972801342) COLLATE NOCASE) OVER () FROM vt0 WHERE ((~ ((('-1520757789')=(x''))))) ORDER BY (((+ (vt0.c0))) IS TRUE) DESC  NULLS LAST;SELECT ALL MIN((0.06333894264299511 IN (vt0.c0))), ((AVG(vt0.c0)) NOT BETWEEN (((vt0.c1) ISNULL)) AND (((vt0.c0)%(vt0.c0)))), (+ (vt0.c0)) FROM vt0 WHERE (CASE WHEN (x'' IN ()) THEN CASE NULL  WHEN '' THEN '125039081' WHEN 0.8606348009212074 THEN 'FE^J+Z|{' WHEN 0.9827137181786876 THEN '0.7094377585457174' ELSE 0Xffffffffa208930a END END); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM vt0 WHERE (('-655556628' COLLATE NOCASE IN (((x'')<<(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) ISNULL))*(((vt0.c1) NOTNULL))), LEAD(((((TRIM(DISTINCT ''))OR(GLOB('zU', vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), (((((vt0.c0 IN ()))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0))))), CAST(((vt0.c1) IS FALSE) AS TEXT)) OVER (), RANK() OVER (), (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((((vt0.c0))=((vt0.c1))), vt0.c1 COLLATE RTRIM, (((vt0.c0))>((vt0.c1))))) AND ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, x'', (+ (vt0.c1))))), (CAST(vt0.c1 AS TEXT) IN ()) FROM vt0 ORDER BY ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) COLLATE RTRIM COLLATE BINARY ASC; -- 1ms;
SELECT ALL CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) FROM vt0 LIMIT 1743897991; -- 0ms;
SELECT ALL ((((vt0.c0)%('\q''1&'))) NOTNULL), (((vt0.c0 IN ()))==((+ (vt0.c1)))), (SUM(vt0.c0) IN (MAX(vt0.c1))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c0)) IN ()) FROM vt0 WHERE (((((0.8809224236207401 COLLATE BINARY)AND(((0xfffffffff5846d90) ISNULL))))AND(TYPEOF(DISTINCT NULL)))); -- 0ms;
SELECT SUM(((vt0.c0)>(vt0.c0))) FROM vt0 WHERE ((((('-203934554') NOT NULL))>(NULLIF('-480265077', NULL)))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(LIKELY(DISTINCT 'c6X!Fk抁a''')) OVER () FROM vt0 WHERE (((((NULL) BETWEEN ('2020473943') AND ('-209249546')))|(((NULL)&(x''))))); -- 0ms;
SELECT DISTINCT ((CASE vt0.c1  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)=(((vt0.c0)||(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (((((vt0.c0)AND(vt0.c0)))AND(x'')) IN ()), vt0.c0, ((vt0.c1 COLLATE RTRIM)>=(vt0.c0)) FROM vt0 ORDER BY NULL ASC, ((0.9288010917251582) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (TYPEOF(DISTINCT vt0.c1))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)-(vt0.c0)))))  NULLS LAST; -- 0ms;
SELECT IFNULL(((vt0.c1) IS FALSE), ((0x4df9b98f)!=(vt0.c1))) FROM vt0 WHERE (((0.6127174880607072)<>(-756593149)) COLLATE NOCASE) ORDER BY HEX(DISTINCT CAST(vt0.c1 AS BLOB))  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((CASE WHEN NULL THEN 'S}' ELSE '299159315' END IN ())); -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE FROM vt0 NOT INDEXED ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))|(((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))); -- 0ms;
SELECT DISTINCT CAST('1827168572' AS INTEGER) FROM vt0 WHERE (((0.6716591590649863 COLLATE NOCASE) NOT BETWEEN ((x'ef3f' IN ())) AND ((431640228 IN (NULL, 2133252160))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)LIKE(vt0.c1))) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), json_array_length(((vt0.c1)AND(vt0.c0))), ((vt0.c0)<=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT LIKELY(COUNT(*)), (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))<(((+ (vt0.c0))))), (((((((((vt0.c1 IN (vt0.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(((vt0.c1)-(vt0.c1)))))OR(0.7351453451967985)))OR(MIN(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((x'')OR((- (vt0.c1)))), ((COUNT(*)) NOT NULL), MAX(CAST(vt0.c1 AS REAL)) FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((vt0.c1) NOT NULL), (vt0.c0 IN (vt0.c1))) FROM vt0 WHERE ((((('-573775289')) BETWEEN ((x'7f9b')) AND ((NULL))) IN ())) ORDER BY (((((vt0.c1, vt0.c1, 'J얦')) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1)))) BETWEEN (x'4adb') AND (((vt0.c1)<<(vt0.c0)))) DESC  NULLS FIRST, 1980177625 ASC  NULLS FIRST, vt0.c0;SELECT (~ (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((((0.7885295215156872) BETWEEN (x'') AND (NULL))) ISNULL)) ORDER BY CAST(((vt0.c1)GLOB(vt0.c1)) AS BLOB); -- 0ms;
SELECT ALL LTRIM(((NULL)+(vt0.c1)), vt0.c0) FROM vt0 WHERE (((((x'e03d') IS TRUE))&(CAST(-1475041079 AS BLOB)))); -- 0ms;
SELECT DISTINCT COUNT((NOT (vt0.c1))) OVER (), COUNT(CAST(vt0.c1 AS REAL)), UNLIKELY((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)%(vt0.c1)))LIKE('1526691357')) FROM vt0; -- 0ms;
SELECT ALL (((CAST(vt0.c0 AS BLOB)))<=((vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((vt0.c1) NOT NULL))), (('!3') NOT BETWEEN ((~ (vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))), ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((((~ ('-2125010539')))AND(json_array(vt0.c0, x'eb41'))))AND((vt0.c0 IN (vt0.c1, vt0.c0)))) FROM vt0 WHERE (((((-1979193402)IS NOT(x''))) NOT BETWEEN (((((0.48288923059962663)AND(-2.38219157E8)))OR('XM'))) AND ((((-1695727663))>(('wJ')))))) GROUP BY vt0.c0 HAVING CASE WHEN vt0.c1 COLLATE RTRIM THEN (~ (vt0.c0)) END; -- 0ms;
SELECT ALL MAX(((((x'')OR(vt0.c1)))OR(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1 IN (vt0.c0)))<=(vt0.c0)) FROM vt0 WHERE (CASE WHEN x'' COLLATE RTRIM THEN 0.5147763137551902 COLLATE BINARY END); -- 0ms;
SELECT DISTINCT (- (NULL)) FROM vt0 WHERE (((('0.7801524974740177')) BETWEEN ((((0.7094377585457174)<=(-1.03315974E8)))) AND ((((NULL)IS NOT(0.43427308112127994)))))); -- 0ms;
SELECT DISTINCT '-1490626930' FROM vt0; -- 0ms;
SELECT DISTINCT (- (vt0.c0)), ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END) ISNULL), ((+ (vt0.c1)) IN (CAST(vt0.c0 AS TEXT))), (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))>((vt0.c0 COLLATE BINARY))), (((((vt0.c1))>((vt0.c1))))+(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1)OR(CASE WHEN vt0.c1 THEN vt0.c0 ELSE '394719403' END)))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)) FROM vt0 WHERE (((CASE NULL  WHEN '-1182012163' THEN '-926081082' ELSE x'2c36' END) NOT NULL)); -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c1 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN GROUP_CONCAT(vt0.c1) WHEN GROUP_CONCAT(vt0.c1) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE vt0.c0 END FROM vt0 WHERE (CAST(((((1654056119)OR('װ,bJ>&7')))AND(9.624118E7)) AS REAL)); -- 0ms;
SELECT DISTINCT UPPER((((vt0.c0, vt0.c1, 0.05813518661012118))==((vt0.c1, '0.7801524974740177', vt0.c0)))), (NOT (CAST(vt0.c0 AS BLOB))), ((CAST(vt0.c1 AS BLOB))>=(((vt0.c1)IS(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c1))) NOT NULL), TOTAL(x'') FILTER(WHERE x'') OVER (), CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c0))=((vt0.c1))) END, (- (ABS(vt0.c0))), CAST((- (vt0.c0)) AS TEXT) FROM vt0 WHERE (CAST('2E2\rGNi#' AS BLOB) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS TEXT) FROM vt0 WHERE ((CAST('X笈y0' AS BLOB) IN ())); -- 0ms;
SELECT AVG(((vt0.c0)<>(vt0.c0))), (+ (((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), (~ ('')) FROM vt0 WHERE ((+ (((((179383107)OR(0.11397495687254733)))AND(''))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((((x'')) NOT BETWEEN ((x'')) AND ((0x70859800))) AS REAL)) LIMIT -708859388; -- 0ms;
SELECT ALL (- (((vt0.c1) BETWEEN ('') AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE((((vt0.c1) IS TRUE) IN (vt0.c1 COLLATE RTRIM, (NOT (vt0.c0)))), (((vt0.c1, ((vt0.c0)|(NULL)), TYPEOF(DISTINCT vt0.c0)))>((vt0.c0, vt0.c0, CAST(vt0.c1 AS NUMERIC))))) OVER () FROM vt0 GROUP BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(0.9655820217520854)))OR(vt0.c1))) IS TRUE);SELECT ALL (NOT (CAST(vt0.c1 AS TEXT))), (NOT (((vt0.c0) ISNULL))), CASE WHEN vt0.c0 THEN 0Xffffffff8b216c3c ELSE (vt0.c0 IN ()) END FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM FROM vt0 WHERE (ROUND(((NULL)||(NULL)), (('3V䀣eR') BETWEEN (0.47164475265644956) AND ('uk0O|~')))); -- 0ms;
SELECT ALL TRIM(CAST(vt0.c0 AS NUMERIC)) FROM vt0 WHERE ((~ (((0.3995041895610474) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c0)))%(((((vt0.c0)OR(1671814623)))OR(vt0.c1)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c1)IS(vt0.c0)))) AND ((((vt0.c1)=(vt0.c1))))), (((vt0.c0)) NOT BETWEEN ((((((vt0.c1)OR('2107196127')))OR(vt0.c0)))) AND ((((NULL)>(vt0.c1))))) FROM vt0 WHERE (x'') GROUP BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN (((vt0.c1)*(vt0.c1)))) HAVING CAST(((vt0.c0)||(vt0.c1)) AS REAL) ORDER BY CAST('e\n4(p\R\n' AS TEXT) DESC  NULLS LAST, CAST(((-1721792217)OR(vt0.c0)) AS BLOB) DESC  NULLS FIRST; -- 0ms;
SELECT TRIM((- (vt0.c1)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) FROM vt0 WHERE (((((x'')>=('0.8358818771084762')))-((~ (NULL))))); -- 0ms;
SELECT (((vt0.c0 IN (vt0.c1)))!=(0.6152972564160855)) FROM vt0 GROUP BY ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE, CASE WHEN ((vt0.c0)&(vt0.c0)) THEN '-617020936' ELSE (((vt0.c1))<>(('1034610874'))) END, (((vt0.c0)-(vt0.c1)) IN ()); -- 0ms;
