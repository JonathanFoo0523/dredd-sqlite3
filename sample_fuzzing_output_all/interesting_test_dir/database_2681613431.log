-- Time: 2024/06/07 23:12:30
-- Database: database31
-- Database version: 3.40.0
-- seed value: 2681613431
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE TABLE t0 (c0 TEXT , c1 INTEGER NOT NULL ON CONFLICT IGNORE PRIMARY KEY DESC UNIQUE CHECK ( ((((c1)<(c0))) IS TRUE)) DEFAULT 0.758195505173129 , c2 TEXT  CHECK ( (((c1)<>(c2)) IN ()))); -- 1ms;
CREATE TEMPORARY TABLE t1 (c0 REAL UNIQUE ON CONFLICT ROLLBACK NOT NULL ); -- 0ms;
REINDEX BINARY; -- 1ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES ('-1405350899'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('఍''vOx^瓇T'); -- 1ms;
REINDEX; -- 0ms;
UPDATE t0 SET (c0)=('-1405350899') WHERE (((t0.c1)) NOT BETWEEN (((~ (x'')))) AND ((x''))); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL), ('-1405350899'), (0Xffffffffe4e492f0); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1 VALUES (0.964076966258399), (NULL), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0, c1, c2) VALUES (NULL, 487, 0.37971425428898653), ('206686831', 499, NULL), (0.44918679598836564, 891, 0.9870462733435953), (x'', 989, 0.1962894003667074), (x'', 364, x''); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES ('1549702668'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (-1405350899); -- 0ms;
END; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('Wg', 622, -2.115996473E9); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('jG'); -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.21577984458704136, 491, NULL), (0.7390202833957619, 927, -2.115996473E9), (0.22039293060531018, 43, NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x'baec'); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES (238, NULL), (290, 2.06686831E8), (296, NULL), (603, x'4903'), (366, ''); -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
COMMIT; -- 0ms;
UPDATE t1 SET c0=NULL, c0=NULL; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c1, c1)=(-454782224, 206686831); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE t0; -- 1ms;
INSERT OR REPLACE INTO t1 VALUES ('1549702668'), (x''), (0.964076966258399), (5.379975464341266E18), (0xffffffffde730b32); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('Qg῱6U+~[{'); -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL WHERE CAST(t1.c0 AS INTEGER) COLLATE BINARY; -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('఍''vox^瓇t', 624, 0.5275745797874642); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.16459186749401167), (0.5194618244650816), (0.7703883039980507); -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, c2, prefix = 173); -- 0ms;
PRAGMA temp.default_cache_size = 2004796942; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('[f'), (x''), (-1.7976931348623157E308); -- 0ms;
CREATE INDEX i35 ON t0((((((c0)AND(c0)))OR(c2)) IN ()) DESC,(+ (CAST(c2 AS NUMERIC))),(((c1)|(c2)) IN (((c2) BETWEEN (c1) AND (c2)))) DESC) WHERE (((((c1) BETWEEN (c2) AND (c2)), ((c0)<<(c0)), CAST(c1 AS BLOB), c0 COLLATE BINARY, ((c1)>>(c1))))<=((((c1) NOTNULL), ((((c2)AND(c1)))AND(c2)), c2, (~ (c1)), CAST(-1089871308 AS REAL)))); -- 1ms;
UPDATE OR ABORT vt0 SET c2=NULL; -- 0ms;
UPDATE t1 SET c0=NULL WHERE t1.c0; -- 0ms;
UPDATE t0 SET c1=-1089871308, c0=0.1962894003667074; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i40 ON t1((((NOT (c0)))AND(((c0) IS FALSE))) COLLATE BINARY DESC); -- 0ms;
CREATE INDEX i47 ON t0(CASE ((c1) IS TRUE)  WHEN ((c0) NOTNULL) THEN ((c1)GLOB(c2)) END ASC,(((((c1, c1, c0, c2, c1)) BETWEEN ((c1, c2, '-1458600921', c2, c2)) AND ((1.549702668E9, c1, c2, c1, c0)))) NOT NULL) COLLATE RTRIM DESC,NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('s￿䥚', 330, '啚P'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1964829103); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'') WHERE ((((((t0.c2)AND(t0.c0)))AND(t0.c0))) IS TRUE); -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
INSERT OR FAIL INTO vt0(c2) VALUES ('쩯'); -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (0.6372685023009026), ('1191192717'), (0.6372685023009026); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (0x29bf14bc); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'', NULL, NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
ANALYZE main; -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (''), (''), (x'19d5'); -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (0.0701451340196283, 286), (0.7698130788065812, 796), ((((((2.004796942E9 IN (NULL, '2078994976')))AND(((x'51ec') NOT NULL))))OR((+ ('-166049446')))), 876), ('700388540', 358), (0.5194618244650816, 470); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (''); -- 0ms;
PRAGMA mmap_size; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR ABORT t1 SET c0=x'', c0='0.5275745797874642'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.14243230175163002; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL) WHERE ((t1.c0 COLLATE RTRIM) IS FALSE); -- 0ms;
END; -- 0ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i0 ON t1(c0 COLLATE NOCASE) WHERE x''; -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES (368); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES ('', '-166049446'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO t1 VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (658); -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES (563), (361), (240); -- 0ms;
INSERT OR ABORT INTO t1 VALUES ('^?띩~^\nt'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (''); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((((t0.c0) IS FALSE))OR(((t0.c1) IS TRUE))))OR(CASE t1.c0  WHEN t0.c0 THEN t1.c0 WHEN t0.c1 THEN t1.c0 WHEN t0.c0 THEN t0.c1 END)) FROM t1, t0 WHERE ((((~ (NULL))) IS FALSE)); -- 0ms;
SELECT ALL ((((((t1.c0)OR(t0.c0)))AND(t0.c0)))GLOB(((t1.c0)|(t0.c2)))), 0.2997504236435251, CAST(t0.c0 AS BLOB) FROM t0 WHERE (CASE NULL COLLATE NOCASE  WHEN (+ (-1664032466)) THEN CAST(x'' AS REAL) END) GROUP BY CASE ((t0.c2)IS NOT(t1.c0))  WHEN CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END THEN ((t0.c0)>>(t1.c0)) END;SELECT DISTINCT NULL, NTILE(CASE WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN CAST('4N' AS NUMERIC) END) OVER (), COUNT(*) OVER () FROM t1; -- 0ms;
SELECT ((- (t1.c0)) IN ()) FROM t1, t0; -- 0ms;
SELECT CASE (((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c2)))  WHEN CAST(t0.c2 AS REAL) THEN (((t0.c2))>=((t0.c0))) WHEN ((t1.c0) NOTNULL) THEN ((t0.c1)|(t0.c2)) WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c2)) THEN ((t1.c0) IS TRUE) END FROM t1;SELECT ALL (~ (CAST('dd焰n!NI' AS TEXT))) FROM t0, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c0 IN ())), (- (((t0.c0) NOT BETWEEN (x'') AND (NULL)))), MAX(((t0.c0) IS TRUE)) FROM t1, t0 WHERE ((((('쩯')IS NOT('-370743729'))) NOT BETWEEN ((((0.4207248066513001, x'', '206686831')) NOT BETWEEN (('dz', x'', 0.6118369173223304)) AND ((NULL, NULL, '')))) AND (((-1405350899) NOT BETWEEN (NULL) AND (0.8831410527380705))))); -- 0ms;
SELECT ALL CASE t0.c0  WHEN ((t0.c1)!=(t1.c0)) THEN 1.191192717E9 ELSE ((t0.c1) ISNULL) END FROM t1;SELECT ALL (((t0.c0) NOT BETWEEN (t0.c1) AND (t1.c0)) IN ()) FROM t1, t0 ORDER BY LIKELIHOOD(DISTINCT ((0.9508703650290573) IS TRUE), 0.6164680432991766) DESC  NULLS LAST; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT ((((t0.c2)AND(t0.c2)))AND(t0.c1)), 0.5443135766670791) FROM t1 ORDER BY (((t0.c1)) BETWEEN ((CASE WHEN t1.c0 THEN t1.c0 ELSE t0.c2 END)) AND ((t0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;SELECT CASE WHEN CAST('1488661518' AS TEXT) THEN (~ (t1.c0)) END FROM t0 ORDER BY ((x'')>=(-2.115996473E9)) COLLATE BINARY  NULLS FIRST LIMIT -1726778456;SELECT SUBSTR(0.2997504236435251, CAST(t0.c2 AS NUMERIC)), ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (((t1.c0)=(t0.c2))) AND (0.8000949985073558)), ((((t0.c0) NOT BETWEEN (t0.c2) AND ('6')))AND(((t1.c0) IS FALSE))) FROM t1;SELECT DISTINCT t0.c2 FROM t1 WHERE (CAST((((1.191192717E9)) NOT BETWEEN ((NULL)) AND ((NULL))) AS INTEGER));SELECT ALL GROUP_CONCAT((t1.c0 IN (t0.c1))) FROM t1 WHERE (((CAST(NULL AS INTEGER))+((NULL IN ()))));SELECT DISTINCT CASE WHEN ((t0.c0)GLOB(t1.c0)) THEN CAST(t0.c2 AS INTEGER) WHEN CAST(t1.c0 AS BLOB) THEN json_type(t1.c0) WHEN (NOT (t0.c1)) THEN t0.c2 COLLATE RTRIM ELSE t0.c1 COLLATE NOCASE END FROM t0 GROUP BY json_type(CAST(t0.c0 AS REAL)), (((t0.c2)) NOT BETWEEN ((CASE WHEN t0.c2 THEN t1.c0 END)) AND ((t0.c0 COLLATE NOCASE))), CASE WHEN ((t0.c2)GLOB(t1.c0)) THEN t0.c2 WHEN '1549702668' THEN ((((((((t0.c1)AND(NULL)))AND(x'')))OR(t0.c0)))AND(t0.c1)) WHEN ((t0.c1) NOT NULL) THEN TRIM(t1.c0, t0.c2) ELSE t0.c1 COLLATE BINARY END ORDER BY ((0.1572564335197547)<(((t1.c0)OR(0xffffffffbf09e234)))) ASC;SELECT ((t0.c1 COLLATE BINARY) IS FALSE) FROM t0, t1 WHERE (x''); -- 0ms;
SELECT DISTINCT t0.c0, (NOT (COUNT(*))), CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c1) ISNULL) ELSE (((t0.c1, t0.c2, t0.c0))>=((t0.c1, t0.c0, t1.c0))) END FROM t0, t1 WHERE (LIKELY(DISTINCT (0.7496042423658503 IN ('2004796942')))); -- 0ms;
SELECT ALL 0x7beaf220 FROM t1 GROUP BY '-1616787824' HAVING t0.c2;SELECT DISTINCT (((t0.c1 IN ()))AND((NOT (t0.c2)))), t1.c0, ((SUM(t1.c0)) IS TRUE) FROM t1; -- 0ms;
SELECT DISTINCT COALESCE(IFNULL(t0.c1, t1.c0), (((t1.c0))<>((t0.c0)))) FROM t1, t0 WHERE (((NULL)>>(((x'') IS TRUE)))); -- 0ms;
SELECT ALL CAST(CASE WHEN t0.c1 THEN 2.078994976E9 END AS INTEGER) FROM t1;SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT (((((t0.c1 IN (t0.c2)))OR((((t0.c1)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))))))AND(t0.c1)) FROM t1;SELECT (((t0.c1))<((t0.c1))) COLLATE RTRIM FROM t1;SELECT ALL ((((t0.c0)AND((+ (t1.c0)))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((((((((t0.c2)AND(NULL)))AND(t0.c2)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0 COLLATE RTRIM)))OR(((t1.c0) IS TRUE))), CAST((((t0.c2))<=((t1.c0))) AS NUMERIC), (((((t1.c0) BETWEEN ('/nz') AND (t0.c1))))>((((((((((t1.c0)OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))OR(t0.c0))))), (((+ (t1.c0))) IS FALSE), ((COUNT(*)) BETWEEN (t0.c1) AND (((t0.c2) NOTNULL))) FROM t0, t1; -- 0ms;
SELECT ((((t0.c1, t0.c0, t0.c1))=((t0.c1, t1.c0, t0.c1))) IN ()) FROM t1 LIMIT 1191192717; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c2 AS INTEGER) AS REAL), 0xffffffff991373a8, (((t0.c2)<=(t0.c2)) IN ()) FROM t1;SELECT CAST(x'' COLLATE RTRIM AS NUMERIC), CASE WHEN ((t0.c1)>>(t0.c1)) THEN t0.c2 COLLATE NOCASE WHEN ((t0.c0) ISNULL) THEN CASE WHEN t1.c0 THEN t0.c1 ELSE t1.c0 END WHEN x'' THEN CHAR(t1.c0) ELSE ((t1.c0)>>(t0.c0)) END, ((((t0.c0)+(t0.c2))) NOTNULL) FROM t1 ORDER BY (((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE RTRIM, json_array_length(t0.c0, t0.c2) COLLATE BINARY DESC;SELECT DISTINCT ((1362669232)%(t0.c1)) FROM t1 WHERE (((((CASE WHEN 'qg῱6u+~[{' THEN '' ELSE '1985665797' END)AND(CASE WHEN '260561708' THEN '997525518' WHEN x'' THEN 'kfTFYFy' WHEN 'MAཛྷ' THEN x'' ELSE '' END)))OR((- ('-1089871308')))));SELECT CASE TOTAL(t0.c0)  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c1)) THEN GROUP_CONCAT(t0.c0) WHEN ((t1.c0)|(t1.c0)) THEN CASE WHEN t0.c2 THEN t0.c2 END WHEN t1.c0 THEN COUNT(t0.c1) END, ((((((((((t0.c1)*(t0.c2)))AND((t0.c2 IN (t1.c0)))))AND(CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)))AND((((t0.c0))>=((t0.c2))))))OR(0xffffffffa53c0c16)), CAST(t0.c0 COLLATE BINARY AS BLOB) FROM t1;SELECT DISTINCT CASE COUNT(*)  WHEN t0.c1 COLLATE NOCASE THEN ((t0.c2)!=(t1.c0)) ELSE CASE t0.c1  WHEN t0.c0 THEN t1.c0 END END FROM t0, t1 INDEXED BY i0 WHERE ((+ (((NULL)IS NOT(-5.62885838E8))))) GROUP BY (((('105335494') NOTNULL)) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t1.c0 END) AND (CAST(t0.c0 AS BLOB))) HAVING CASE WHEN (NOT (t1.c0)) THEN 0.5411915776232038 WHEN CAST(t0.c0 AS TEXT) THEN SQLITE_SOURCE_ID() WHEN ((((((((t1.c0)OR(t0.c0)))AND('l)')))AND(NULL)))OR(t0.c0)) THEN (((t1.c0, t0.c1, t0.c0))<((t0.c0, t1.c0, t0.c0))) ELSE t0.c2 COLLATE NOCASE END;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((((((((((((NULL)OR(t0.c2)))AND(t0.c1)))OR(t1.c0)))OR(t0.c1)))OR(COALESCE(DISTINCT t0.c1, t0.c2, t0.c2, t0.c1))))OR(LIKE(t1.c0, t0.c1))) ASC), (((t0.c2)) BETWEEN ((t0.c2)) AND ((t0.c1))) COLLATE RTRIM, (((+ (t1.c0)))/(((t0.c1)<=(t0.c0)))) FROM t0 WHERE (((x'')IS(NULL)) COLLATE NOCASE);SELECT DISTINCT (ABS(t0.c2) IN ()), '-2098114694', ((((t0.c1)==(t1.c0))) NOT NULL), (CASE WHEN t0.c1 THEN t0.c2 ELSE t1.c0 END IN ((t0.c1 IN ()))), ((((((t0.c2)OR(t0.c2)))OR(t0.c1)))/(CAST(t0.c0 AS BLOB))) FROM t1 WHERE ((((((-2.098114694E9) BETWEEN ('\e') AND (x''))))>=(((NULL IN ())))));SELECT DISTINCT t0.c1, TRIM(DISTINCT t0.c2, t0.c2) COLLATE RTRIM, ((('1535091558', t0.c0, t1.c0)) BETWEEN ((((t0.c1) BETWEEN (t1.c0) AND (t0.c1)), ((t1.c0)*(t0.c1)), COUNT(t0.c0))) AND ((NULL, '' COLLATE BINARY, COUNT(t0.c2)))) FROM t1, t0; -- 0ms;
SELECT ((t0.c1) IS TRUE) COLLATE BINARY, ((TOTAL(t0.c2)) NOT NULL), (((t0.c1 IN ())) NOTNULL) FROM t1, t0 WHERE (((('ᒼ,8J', x'', NULL)) BETWEEN ((TRIM(DISTINCT x'', 0Xfcc26b7), (((('')OR('-1895742820')))OR(NULL)), (NULL IN ()))) AND ((CAST(x'' AS REAL), ('-2005071100' IN ()), CASE WHEN 0x777ec60e THEN 0.6370267154300674 ELSE NULL END)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t1 WHERE ((~ (CASE NULL  WHEN 0Xffffffffab0360f0 THEN NULL END))); -- 0ms;
SELECT ALL ((CASE t1.c0  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN '렟l啚	D㋀TH' THEN t1.c0 END)>=((t0.c2 IN ()))) FROM t0, t1 WHERE ((((x'')) BETWEEN ((((NULL)>>(x'')))) AND (((+ (x'9dd8')))))); -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM t1, t0; -- 0ms;
SELECT DISTINCT CAST(0x1 AS INTEGER) FROM t1, t0; -- 0ms;
SELECT ALL ((x'') NOTNULL), ((AVG(-802549924)) BETWEEN ((NOT (t0.c0))) AND (t0.c2 COLLATE BINARY)), (('1191192717') NOT BETWEEN ((t0.c0 IN ())) AND (((((NULL)OR(t1.c0)))AND(t0.c2)))) FROM t1 WHERE (MIN(CASE 0.5411915776232038  WHEN x'' THEN 0.3865636213839322 END, '' COLLATE NOCASE));SELECT ALL GROUP_CONCAT(((t1.c0) BETWEEN (t0.c2) AND (t0.c1))) OVER (), (((t0.c0)) BETWEEN ((CASE WHEN t0.c1 THEN '' END)) AND ((((1.820768287E9) NOTNULL)))), (((t1.c0)) BETWEEN (((((t0.c2))>((t0.c1))))) AND ((((((t0.c2)OR(t0.c2)))AND(t0.c0))))), ((t0.c2)OR(IFNULL(NULL, t0.c2))), (((((t0.c2, t0.c1, t0.c1))>=((t0.c0, t0.c2, t0.c1))))=((((t1.c0))>=((t0.c2))))) FROM t1, t0 WHERE (((CAST(0X6c86b81f AS NUMERIC))>(0.19594600668114748 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((TOTAL(t1.c0)) NOT NULL) FROM t0, t1 LIMIT 1106360256; -- 0ms;
SELECT DISTINCT ((t1.c0) NOT BETWEEN (t0.c1) AND (t1.c0)) COLLATE RTRIM, (t0.c2 IN ()) COLLATE NOCASE, CHANGES() FROM t0, t1 ORDER BY (((t0.c0 IN (t1.c0)))%(((t0.c2)-(t0.c2)))) ASC  NULLS LAST LIMIT -1458600921; -- 0ms;
SELECT t0.c2 FROM t1, t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((t0.c0)&(t0.c1)) COLLATE NOCASE) OVER () FROM t0, t1 WHERE ((((0xffffffff8f01429c)) BETWEEN ((CAST(NULL AS TEXT))) AND ((x'4817' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT ((t0.c0) NOT NULL) FROM t1;SELECT (((t0.c1, t0.c2, t0.c0)) NOT BETWEEN ((((t0.c2) NOT NULL), ((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), ((((t0.c2)OR(0.8114747956332363)))AND(0.940326256348155)))) AND (((((t1.c0))>((t0.c1))), MIN(t0.c2), ((((((((t0.c2)AND(0.20798647078436583)))OR(t0.c1)))AND(t1.c0)))OR(t0.c0))))) FROM t1 LEFT OUTER JOIN t0 ON '-1458600921' WHERE ((((NULL))<((x'4437f882c034'))) COLLATE BINARY); -- 0ms;
SELECT ((t0.c0)<>(((((t0.c2)AND(t0.c2)))AND(t1.c0)))), ((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c1))) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.08791757027630775)) AND (-2.0050711E9)), NULL, '렟L啚	D㋀TH', MAX((t0.c1 IN ()) COLLATE BINARY) FROM t1;SELECT DISTINCT 0.7949192645753701, ((t0.c0 IN ()) IN ()), (((t0.c2 IN (t0.c2))) NOTNULL) FROM t1, t0; -- 0ms;
SELECT ALL ((((t1.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t1.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END)), (((NULL)) BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((((((t1.c0)OR(t0.c2)))OR(t0.c1))))), (((LTRIM(t0.c1, -1721393960), ((0.12746906472136132)OR('1541123932')), t0.c0))==(((((t0.c0))>((t1.c0))), (+ (x'')), ((NULL) BETWEEN (t0.c0) AND (t0.c1))))), MAX(t0.c2), (((t0.c1 IN (t0.c2))) BETWEEN (CASE t0.c0  WHEN t1.c0 THEN t1.c0 ELSE t0.c2 END) AND (CAST(t0.c0 AS NUMERIC))) FROM t0 NOT INDEXED WHERE (((SUBSTR(NULL, NULL))-((((('-1895742820')OR(1.541123932E9)))OR(NULL)))));SELECT DISTINCT TYPEOF((((t0.c1, t0.c1, t1.c0, t0.c1, t0.c2))<>((t0.c0, t0.c1, t0.c2, t0.c0, t0.c0)))) FROM t1, t0 WHERE (UNLIKELY(DISTINCT '-166049446' COLLATE BINARY)) ORDER BY x'' DESC  NULLS FIRST, ((((t0.c0 IN ())))<=(((((t0.c2))==((t0.c2))))))  NULLS FIRST; -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))LIKE(CASE t1.c0  WHEN t1.c0 THEN t0.c1 WHEN 59366008 THEN t1.c0 WHEN t1.c0 THEN t0.c2 WHEN t1.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END)), COUNT(((x'') IS FALSE)) OVER (), MAX(((((NULL)OR(t0.c1)))OR(t0.c0))), ((LIKELIHOOD(t0.c0, 0.02687803702609093))OR(CAST(t0.c2 AS INTEGER))), CASE '-992628540'  WHEN ((t0.c1)OR(t0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c2)) AND ((t1.c0))) WHEN ((t0.c2) BETWEEN (t1.c0) AND (t0.c0)) THEN CAST(t0.c1 AS INTEGER) WHEN ((t1.c0)|(t0.c1)) THEN (t0.c2 IN ()) ELSE CAST(t0.c0 AS NUMERIC) END FROM t0, t1; -- 0ms;
SELECT ALL CHAR(((t0.c2)&(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) AS REAL) FROM t0 ORDER BY (NOT (((t0.c0) ISNULL))), CAST(CASE WHEN x'' THEN t0.c2 END AS INTEGER) DESC; -- 0ms;
SELECT CASE WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c0) IS TRUE) END FROM t1;SELECT ALL (- ((~ (t0.c1)))) FROM t1 WHERE (NULL);SELECT DISTINCT json_array_length(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)), t0.c1) FROM t0, t1 LIMIT 590694862 OFFSET -1721393960; -- 0ms;
SELECT DISTINCT SUM((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t1.c0)))) OVER () FROM t0;SELECT DISTINCT GROUP_CONCAT((((t0.c2, t0.c1, 0X5764521c))<((t1.c0, t0.c0, t0.c2)))) OVER ( ORDER BY t0.c2) FROM t1, t0; -- 0ms;
SELECT ALL ((t0.c0) NOT BETWEEN ((((t1.c0))<>((t0.c0)))) AND (((t0.c1) IS FALSE))) FROM t1;SELECT DISTINCT ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) NOT NULL), (((~ (0.061911485086925566)))<<(((t0.c1)IS(t0.c0)))), ((COUNT(*))AND(0.08584645025081339)), ((t0.c0)AND(t1.c0)) COLLATE BINARY, DENSE_RANK() OVER () FROM t0 GROUP BY ((((t0.c2)!=(t0.c0))) NOT NULL);SELECT ALL ((t0.c0)AND(t0.c2)) COLLATE NOCASE, CAST(t0.c0 COLLATE RTRIM AS REAL), NTILE(t0.c0) OVER () FROM t0 WHERE ((x'' IN ()) COLLATE NOCASE); -- 0ms;
SELECT ((t0.c0) IS FALSE) FROM t0 WHERE ((NOT (((('i L}B'))>=(('')))))); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT t0.c0, NULL))LIKE((t1.c0 IN (t1.c0, t0.c0)))) FROM t0, t1; -- 0ms;
SELECT LEAD(((t1.c0)GLOB(t1.c0)) COLLATE RTRIM, (((((((((((((t1.c0 IN (t1.c0)))OR(CAST(x'' AS REAL))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN '렟l啚	d㋀th' WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))OR((((t1.c0))<((t1.c0))))))AND(CASE WHEN t1.c0 THEN t1.c0 END)))OR(CAST(t1.c0 AS BLOB))))AND((- (t1.c0)))), MIN(((t1.c0)&(t1.c0)), ((t1.c0)%(t1.c0)))) OVER (), (+ (((t0.c1) NOT NULL))), CAST(((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c2)) AS NUMERIC) FROM t1 WHERE (((((x'592784bc')OR((((0.7390202833957619)) BETWEEN (('-1226204531')) AND (('-235988082'))))))AND(CASE 0.9783456974135266  WHEN 0.6369286921299446 THEN 0.22333250806091642 END)));SELECT PRINTF(QUOTE(x''), t0.c1 COLLATE NOCASE, 'L') FROM t1 ORDER BY CASE 0.5275745797874642  WHEN ((NULL)LIKE(0X7d701034)) THEN ((t0.c2)&(t0.c0)) WHEN ((((t1.c0)OR(t0.c2)))AND(t0.c2)) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c0) NOT BETWEEN (t0.c2) AND (t1.c0)) THEN t1.c0 COLLATE NOCASE END  NULLS FIRST;SELECT LAG(CASE WHEN ((((t0.c1)OR(t0.c1)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)) END, CASE ((t1.c0)*(t0.c1))  WHEN CASE WHEN t1.c0 THEN t0.c2 ELSE t0.c2 END THEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t1.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END END, t0.c1) OVER (), SUM(NULL COLLATE RTRIM), '590694862' FROM t0, t1; -- 0ms;
SELECT ALL ((COUNT(*)) BETWEEN ((NOT (t0.c0))) AND (((t0.c2)GLOB(t0.c2)))), ((((((t0.c2) NOT BETWEEN (1058402792) AND (t0.c2)))AND(ABS(t1.c0))))OR(CAST(NULL AS BLOB))), LOWER(DISTINCT MIN(t0.c0)) FROM t1, t0 WHERE (((CAST(NULL AS BLOB)) BETWEEN (((0.36536276778820753)||(0.2547082370682504))) AND (((0xffffffffb65187fe)|(0.84687341721065))))); -- 0ms;
SELECT ((((((t0.c1) IS TRUE))AND((((t0.c0, t1.c0, t0.c1))>((t0.c0, t1.c0, t0.c2))))))OR(((t1.c0)IS(t0.c2)))), ((((((((((x'')OR(t0.c0)))AND(t0.c0)))AND(t0.c1)))OR(t0.c2)))>=(((((NULL)OR(t0.c2)))OR(t0.c2)))), ((((t0.c0) NOT BETWEEN (t1.c0) AND (x'7b5e'))) BETWEEN (((((((((t1.c0)AND(t1.c0)))OR(t0.c0)))AND(t1.c0)))OR(t0.c2))) AND (((((t0.c0)AND(t0.c1)))OR(t1.c0)))) FROM t1 WHERE (NULL);SELECT DISTINCT ((((t0.c2) IS FALSE)) IS FALSE), (((t0.c1) IS TRUE) IN ()), x'' FROM t1, t0 WHERE (CAST((('')==(2.078994976E9)) AS REAL)) GROUP BY (- (t0.c1 COLLATE RTRIM)), ((t0.c0)-('kfTFYFy')), ((CASE WHEN t0.c2 THEN t0.c0 END)|(t0.c0)); -- 0ms;
SELECT DISTINCT (~ (t0.c2)) COLLATE NOCASE FROM t1 WHERE (((((NULL)<=('287239725'))) NOT BETWEEN ((('')GLOB(x'db06'))) AND ((('1549702668') IS TRUE))));SELECT ALL CAST(((t0.c0) NOT NULL) AS NUMERIC), SUM(CAST(t1.c0 AS INTEGER)) OVER (), ((((t0.c1) NOT BETWEEN (t1.c0) AND (t0.c1))) IS TRUE) FROM t0, t1; -- 0ms;
SELECT GLOB(x'5871', ((t0.c2) IS TRUE)) FROM t0, t1 WHERE ((((((x'', NULL, -13419250)) BETWEEN (('9B', '', '-1405350899')) AND ((-1678260957, '-1089871308', '[f')))) NOT BETWEEN (((NULL) ISNULL)) AND (load_extension(NULL)))) GROUP BY (((0Xffffffffae72289f))<((((t0.c1)=(t0.c0))))); -- 0ms;
SELECT DISTINCT (((+ (t1.c0)))|(((t0.c1)||(t0.c2)))) FROM t0;SELECT (((t0.c0)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END)) AND ((((t0.c0)>>(t0.c2))))) FROM t1, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((t0.c1 IN ())) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND (((t0.c1)||(t0.c1)))) FROM t1, t0 GROUP BY CAST(CASE t0.c2  WHEN t0.c0 THEN t0.c0 END AS BLOB), ((((t1.c0)>(NULL))) IS FALSE), (((((t0.c1)OR(t0.c2)))OR('1508203211')) IN ()); -- 0ms;
SELECT DISTINCT ((t0.c0 IN ()) IN ()), (- (NULL)), CASE CASE t1.c0  WHEN t1.c0 THEN t0.c0 END  WHEN ((((t0.c0)AND(t0.c2)))AND(t0.c1)) THEN ((t0.c2) IS TRUE) WHEN ((((t1.c0)AND(0.9870462733435953)))OR(t0.c0)) THEN ((((t0.c2)AND(NULL)))OR(t0.c0)) WHEN CASE WHEN t0.c2 THEN '510072561' ELSE t0.c2 END THEN ((t0.c2) NOT NULL) ELSE ((((t0.c0)AND(NULL)))OR(t0.c1)) END FROM t0, t1; -- 0ms;
SELECT DISTINCT SUM(t0.c2) FILTER(WHERE (- ((((t1.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) OVER () FROM t1, t0 WHERE (ABS(DISTINCT ((NULL) IS TRUE))) ORDER BY ((((t0.c2)IS NOT(t0.c1)))OR((t0.c1 IN ()))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t1.c0)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)) AND ((((t0.c2)/(t0.c1))))) FROM t1 WHERE (CASE TRIM(NULL, '206686831')  WHEN (NULL IN ()) THEN CASE x'fffb'  WHEN 1963262553 THEN NULL WHEN '^?띩~^\nt' THEN '442970816' WHEN 0.8106351274915485 THEN 0.2364538791680566 ELSE 'a²l4kq蹍}' END WHEN (((''))>((x''))) THEN ((((((((0.6531799991916438)OR(NULL)))OR('+2n◪Q')))OR('-1207988659')))AND('')) WHEN (NULL IN ()) THEN (((((((('')OR(61054561)))AND('-1794005420')))OR(NULL)))AND('1535091558')) WHEN ((x'ef0c') NOT BETWEEN (NULL) AND (-618078287)) THEN (~ (x'')) WHEN CASE WHEN '' THEN NULL WHEN x'' THEN 'า2' WHEN '-605688621' THEN '' END THEN 0.4479203778822328 COLLATE NOCASE ELSE ((NULL) IS TRUE) END);SELECT DISTINCT ((((((t0.c0)OR(t1.c0)))OR(t0.c1)))>((t0.c2 IN ()))) FROM t0, t1; -- 0ms;
SELECT ALL MIN(t0.c2), (~ (((t0.c2)LIKE(t0.c1)))), CHAR(x'', (t0.c1 IN (t0.c1)), t1.c0) FROM t1, t0 WHERE ((NULL COLLATE NOCASE IN (UNLIKELY(DISTINCT 0X5bd0d990)))) GROUP BY CASE ((t0.c0)IS NOT(t0.c0))  WHEN ((t0.c2) NOTNULL) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c1)) END, NULL, ((t0.c2) NOT NULL) COLLATE RTRIM HAVING (((((((((((-1458600921, t1.c0, t0.c2))>((t0.c1, t1.c0, t0.c2))))OR('356263402')))AND(CASE WHEN t0.c2 THEN t0.c1 END)))AND(INSTR(t0.c1, t0.c0))))OR('-992628540')); -- 0ms;
SELECT ALL COUNT(((t1.c0) NOT BETWEEN (t1.c0) AND (0.9169702255211303))), (((NOT (t1.c0)))LIKE(CASE t0.c1  WHEN 0.5346281877750272 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)), CASE WHEN t0.c2 THEN t0.c0 END COLLATE NOCASE COLLATE RTRIM FROM t0, t1 WHERE (LIKELIHOOD(NULLIF(DISTINCT NULL, NULL), 0.3206824379997888)); -- 0ms;
SELECT DISTINCT ((((t0.c0) ISNULL))==((t0.c0 IN ()))) FROM t0, t1 WHERE (NULL); -- 0ms;
SELECT ('ED5^' IN (t0.c0 COLLATE NOCASE, ((((t0.c1)OR(t0.c1)))AND(t0.c2)))) FROM t0; -- 0ms;
SELECT DISTINCT CASE COUNT(*)  WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN (- (t0.c0)) WHEN CAST(t0.c2 AS BLOB) THEN COUNT(t1.c0) WHEN t1.c0 THEN CAST(t1.c0 AS REAL) END, CAST(NULL AS REAL), ((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))LIKE(CAST(t0.c0 AS NUMERIC))), CASE COUNT(t1.c0)  WHEN ((t1.c0)-(t1.c0)) THEN x'a5bd' WHEN ((t0.c2)AND(t0.c0)) THEN (((t0.c1, t0.c2, t1.c0, t0.c2, t1.c0)) BETWEEN (('0.2364538791680566', t0.c1, t0.c1, t0.c2, t0.c1)) AND ((t0.c1, t0.c1, 0.7105457331039858, t0.c2, t1.c0))) WHEN t0.c2 THEN CASE t1.c0  WHEN -33692819 THEN NULL WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t1.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END WHEN (((t0.c1, '', t0.c2))<=((t0.c0, t1.c0, t1.c0))) THEN ((t0.c1) BETWEEN ('997525518') AND (t0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE -1331098475  WHEN t0.c2 THEN t0.c0 END WHEN t0.c1 COLLATE NOCASE THEN ((t1.c0)>=(t0.c0)) WHEN ((t0.c2) BETWEEN (t1.c0) AND (-1.251471822E9)) THEN (t1.c0 IN ()) END, t0.c0 FROM t1 WHERE ((((~ (NULL))) BETWEEN ((('')<=(x''))) AND ((('904825016')<=(-533208265))))) ORDER BY (((((((t0.c0)AND(t0.c1)))AND(t0.c0))))<((x''))) ASC  NULLS FIRST;SELECT DISTINCT ((((t0.c2)>=(t0.c0))) NOTNULL), t1.c0, CASE WHEN t0.c1 THEN t0.c1 END COLLATE NOCASE, t0.c2, IFNULL(CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL END, SUBSTR(t0.c2, t0.c0)) FROM t1, t0; -- 0ms;
SELECT DISTINCT json_type(CASE t1.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END), (((((t1.c0)AND(t1.c0)))OR(t0.c1)) IN ((((t0.c0, t1.c0, t0.c0))<((t0.c2, t1.c0, t1.c0))))), ((t0.c1 COLLATE RTRIM) BETWEEN (((t0.c1)=(t1.c0))) AND ((t0.c0 IN ()))) FROM t0, t1 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT DISTINCT ('␱>PM' IN ((NOT (t0.c2)), (+ (t0.c2)))) FROM t0, t1 ORDER BY (- (TRIM(t0.c0, t0.c1))) ASC; -- 0ms;
SELECT DISTINCT (CAST(t0.c2 AS BLOB) IN ()) FROM t1, t0; -- 0ms;
SELECT ALL (((t0.c1 IN ()))&(((t0.c2) ISNULL))) FROM t0, t1 WHERE ((((NULL)||(0.10661717600489085)) IN ((0xffffffffc48dfcca IN (x'fce30eb6'))))); -- 0ms;
SELECT TRIM(DISTINCT (NOT (x'3d22')), 0.8996640074716772) FROM t1, t0 ORDER BY ((((t0.c2)*(t0.c0)))<((('-592259570') IS TRUE))) ASC; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c1 AS REAL) AS BLOB), (- ((NOT (t0.c2)))), (((t0.c0)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((NULL))) FROM t0, t1 WHERE (UPPER((NULL IN (NULL)))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0 WHERE (NULLIF(DISTINCT CASE WHEN 0x7beaf220 THEN '' ELSE x'eae1' END, ((((2078994976)OR('罼VPAKWf8x')))AND(NULL)))); -- 1ms;
SELECT DISTINCT ((((t1.c0)>(t0.c1))) IS FALSE) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((t1.c0)AND(t0.c0)))OR(t0.c2))) NOT NULL) FROM t0 WHERE (CASE 'O裆.+Rcc'  WHEN x'a801' THEN '-1731137538' WHEN 0.1687366533134964 THEN NULL WHEN -1.341925E7 THEN 0.061911485086925566 END COLLATE BINARY);SELECT DISTINCT (((('-1368250209')AND(t1.c0 COLLATE NOCASE)))OR(((t1.c0) ISNULL))), (0x5bebab0d IN ()), (((CASE t0.c1  WHEN 0X3b75080e THEN t1.c0 WHEN t0.c2 THEN t0.c1 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))<=((((((((((t0.c0)AND(t1.c0)))OR(t0.c1)))AND(t0.c2)))OR('V+p棾'))))) FROM t1 WHERE (((x'f6882158') IS FALSE) COLLATE NOCASE);SELECT ALL (((t0.c0)) BETWEEN ((HEX(t0.c0))) AND ((((t0.c2)<>(t0.c2))))) FROM t1 WHERE (((NULL COLLATE RTRIM)-(0.0024873670754315125)));SELECT ALL PERCENT_RANK() OVER () FROM t1, t0 WHERE (((CAST('	n' AS INTEGER)) NOT NULL)); -- 0ms;
SELECT ALL CASE WHEN CAST(t1.c0 AS BLOB) THEN t0.c2 COLLATE BINARY ELSE COALESCE('-802549924', t0.c0) END FROM t0, t1 WHERE (CASE WHEN ((((NULL)OR('-1334599893')))OR(NULL)) THEN ((-1250640793) NOT NULL) END) LIMIT 356263402 OFFSET 1549702668; -- 0ms;
SELECT DISTINCT ((((x'0c50b6cc')+(t0.c1)))-(NULLIF(t1.c0, t0.c0))), (((t0.c0 IN ())) NOTNULL), CAST(((t1.c0) BETWEEN (t0.c0) AND (x'7590')) AS REAL) FROM t1 WHERE ((((NULL, 0xffffffffe5f708bf, 1925559777)) NOT BETWEEN ((((((0.2822363014617335)AND('/3HC|')))OR(NULL)), 1362979722, ((-85591284)<>('')))) AND ((('984693304' IN ('510072561')), ('Lc~qWB*	' IN ()), ((x'') BETWEEN ('834918869') AND (0.08584645025081339)))))) GROUP BY ((((((t0.c1)AND(t0.c2)))OR(t0.c2)))GLOB((~ (t0.c2)))) HAVING 0.7721438135116322;SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((((0.2572885065095647)OR(t1.c0)))OR(NULL))) FROM t1 WHERE (((NULL COLLATE RTRIM) IS FALSE)) LIMIT 1503283001; -- 0ms;
SELECT DISTINCT 'mM%M9i', CUME_DIST() OVER ( ORDER BY ('1647378012' IN (x''))  NULLS FIRST, (((t0.c0)) BETWEEN ((ABS(DISTINCT t0.c1))) AND ((((t0.c1)<(t0.c2))))) DESC  NULLS LAST, t0.c0 ASC  NULLS FIRST), ((json_array_length(t1.c0, t0.c1)) NOT BETWEEN (t1.c0) AND (MIN(t0.c2))) FROM t0, t1 WHERE ((((0.6942594742817514)) BETWEEN ((NULL)) AND (((x'' IN ()))))); -- 0ms;
SELECT CAST((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t1.c0))) AS INTEGER) FROM t1, t0 WHERE ((('\l<' IN (0.7460472682803775)) IN ((+ (NULL))))) LIMIT 1362669232 OFFSET 105335494; -- 0ms;
SELECT ((((t1.c0) NOTNULL)) IS FALSE) FROM t1 WHERE ((((~ (x''))) IS TRUE)) GROUP BY (((t1.c0 IN ()))*((((t1.c0, t0.c2, t0.c2, t1.c0, NULL, t0.c0, t0.c1))<=((t1.c0, t0.c2, 'B(?9ᛱ8Sx', t1.c0, '-2121048493', t1.c0, t0.c2))))), (((((('')AND(t0.c0)))AND(t0.c2)))GLOB(ABS(t0.c1))), ((((t0.c0) IS FALSE))<(((((t1.c0)OR(t0.c0)))AND(t0.c2)))) HAVING ((((t1.c0)<(t0.c1))) IS FALSE) ORDER BY json_extract(x'', CASE WHEN t0.c0 THEN t0.c2 END) ASC  NULLS FIRST, CASE WHEN NULL THEN ((t0.c1)IS NOT(NULL)) ELSE t0.c1 COLLATE RTRIM END ASC  NULLS LAST;SELECT ALL NTILE((((t0.c1 IN ()))<(((t0.c1)GLOB(t1.c0))))) OVER () FROM t0, t1; -- 0ms;
SELECT DISTINCT MAX(CAST(t0.c2 AS NUMERIC)) FROM t1, t0; -- 0ms;
SELECT ALL ((t0.c1 COLLATE RTRIM)<(((t0.c1) NOT NULL))) FROM t0 WHERE (((((0.5866450197810911) IS TRUE))||((('-1236170754')>>(NULL))))); -- 0ms;
SELECT CAST(((t0.c1) NOTNULL) AS BLOB) FROM t0; -- 0ms;
SELECT (('1549702668') ISNULL) FROM t0, t1; -- 0ms;
SELECT (~ (((t0.c0) NOT BETWEEN (x'') AND (t1.c0)))) FROM t0, t1 WHERE (DATE((+ ('4u')), '', ((0.6945387535017559) ISNULL))); -- 0ms;
SELECT ALL CASE WHEN ((((((((t0.c0)OR(t1.c0)))AND(t0.c0)))AND('8&a戩-')))OR(t0.c2)) THEN (t0.c2 IN (t0.c0)) ELSE PRINTF(t0.c0, t0.c2, t0.c2) END, (((((((t0.c0)AND(t0.c2)))OR(t1.c0))))=((CAST(t1.c0 AS BLOB)))), ((((((((((t0.c1)!=(t0.c0)))AND(((t0.c2) NOT BETWEEN (t1.c0) AND (t0.c2)))))OR(CAST(0.32789626105200875 AS BLOB))))OR((~ (t0.c2)))))AND(((((t0.c1)OR(t1.c0)))AND(t0.c2)))) FROM t1, t0 ORDER BY '啚p' LIMIT 1716129507; -- 0ms;
SELECT ALL LEAD(LOWER(DISTINCT (((t0.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t0.c2, t0.c1, 0.007090455636144299)))), (((t0.c1)) BETWEEN ((CASE t1.c0  WHEN t0.c0 THEN NULL WHEN NULL THEN t1.c0 WHEN t1.c0 THEN 0.1962894003667074 WHEN t0.c1 THEN t1.c0 WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END)) AND ((CASE WHEN t0.c2 THEN t0.c0 END))), ((t0.c1) IS TRUE)) OVER (), CASE WHEN t1.c0 COLLATE BINARY THEN NULLIF(t0.c0, t0.c2) WHEN ((((t0.c0)OR(t0.c0)))AND(t1.c0)) THEN ((t1.c0) NOTNULL) WHEN ((t0.c0) BETWEEN (t1.c0) AND (t0.c1)) THEN ((((t0.c2)OR(t0.c1)))AND(t0.c0)) ELSE CASE WHEN t0.c2 THEN t0.c1 END END, ((((((t0.c2)OR(t0.c1)))AND(t1.c0))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c2)OR(t0.c1)))) FROM t0, t1 WHERE (SUBSTR(((NULL) BETWEEN (0x708cc2ce) AND ('')), ((NULL)-('-1107073525')))) GROUP BY ((MIN(NULL, t1.c0)) BETWEEN (((t1.c0)>>(t0.c2))) AND (((t0.c0)>(t0.c2)))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c0) AND (t1.c0))) NOT BETWEEN (((t0.c2) IS TRUE)) AND (((t0.c0) ISNULL))) ASC; -- 0ms;
SELECT ALL (CASE WHEN t0.c2 THEN t0.c0 END IN ()) FROM t1 WHERE (((CASE x''  WHEN 'Wg' THEN '662067502' WHEN '-618078287' THEN 0X405fd4a7 WHEN 0.6824614798827459 THEN NULL WHEN x'548286c5' THEN 0.8318401604426888 WHEN NULL THEN 'W{' ELSE -1236170754 END)LIKE(((NULL)IS(''))))); -- 0ms;
SELECT ALL ((t1.c0) NOTNULL) COLLATE NOCASE FROM t0, t1; -- 0ms;
SELECT DISTINCT ((CASE t0.c1  WHEN t1.c0 THEN 0x1f245219 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 END)<<(t0.c2)) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((t0.c1) IS FALSE) COLLATE BINARY COLLATE RTRIM, (((((t0.c2, 0.3012390504124528, t1.c0))==((t0.c1, t1.c0, t0.c1)))) ISNULL), ((((t1.c0) IS TRUE)) IS FALSE) FROM t1;SELECT (CAST(t0.c0 AS REAL) IN ()), ((((t0.c1) NOT NULL)) NOT BETWEEN (((t0.c1) IS TRUE)) AND ((- (NULL)))), CASE t0.c2  WHEN x'62aa' THEN t0.c2 WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t1.c0 WHEN t1.c0 THEN t0.c1 END THEN CASE t1.c0  WHEN t0.c2 THEN t0.c2 WHEN 0.9207756678830146 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END WHEN (~ (t0.c2)) THEN 0.005481315362077632 ELSE ((((t0.c2)OR(t0.c1)))OR(t0.c1)) END FROM t1 WHERE (((CASE 0.11574203003198824  WHEN '783051006' THEN 0.37944390488758395 END)&(json_valid('-647315424'))));SELECT DISTINCT NULLIF((NOT (t0.c0)), t0.c0 COLLATE BINARY) FROM t1 WHERE (COALESCE(DISTINCT ((('J*')) BETWEEN (('0.7390202833957619')) AND (('-945718786'))), (((NULL, -1773473960, '-776255553'))==((0.5880447116914784, 0.8260766777361981, x''))), (('-581361053')*('')), ('' IN (NULL)))) LIMIT -1331098475 OFFSET -605688621;SELECT DISTINCT ((((t0.c1) NOT NULL)) NOTNULL) FROM t1;SELECT DISTINCT CASE t0.c0  WHEN t0.c2 THEN ((t0.c1)IS(t0.c0)) END FROM t0 WHERE (((((0.6531799991916438)>>(NULL)))GLOB(((x'524220f9')IS NOT(NULL))))); -- 1ms;
SELECT ((((((t0.c2)LIKE(t1.c0)))OR(t0.c0)))AND(((t0.c2)>(t0.c0)))) FROM t0, t1 WHERE (((((0.5201601576242703)!=('Lc~qWB*	')))=(((0Xffffffffd05988c6) NOT BETWEEN (NULL) AND (NULL))))) GROUP BY t0.c0, ((CASE t1.c0  WHEN '0.3012390504124528' THEN t1.c0 ELSE t0.c2 END)LIKE(((t0.c2)<=(t1.c0)))), (((t0.c0 COLLATE BINARY, CAST(t0.c2 AS BLOB), CASE WHEN t0.c0 THEN t1.c0 END))>=(('-193246892', ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), t1.c0))); -- 0ms;
SELECT DISTINCT (((t0.c2 IN (t0.c0)))*((NOT (t0.c0)))) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((+ (t0.c1)) IN (((t0.c1)LIKE(t0.c1)))) FROM t1, t0; -- 0ms;
SELECT ALL ((((((t0.c2)>>(t1.c0)))AND((- (t0.c1)))))OR(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))) FROM t1, t0 WHERE ((CASE WHEN x'' THEN 0.10661717600489085 WHEN x'' THEN 1.549702668E9 WHEN 0.36536276778820753 THEN '-1664032466' ELSE '*MH(' END IN ())); -- 0ms;
SELECT DISTINCT ((((t0.c1)LIKE(t0.c0)))GLOB(((((((((t0.c2)OR(t0.c0)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)))), COUNT(json_array_length(t0.c0)) OVER (), CAST(((t0.c1)>(t0.c1)) AS BLOB) FROM t0, t1 LIMIT -799438650 OFFSET 1541123932; -- 0ms;
SELECT DISTINCT ((((t1.c0)IS NOT(t0.c1))) BETWEEN ((((t1.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))) FROM t1 WHERE ((((((((((('2004796942')GLOB(0.6945387535017559)))AND((NOT (0.9899291964051207)))))OR((x'' IN ()))))AND((x'25f1' IN ()))))OR(('-138657457' IN ()))));SELECT t1.c0 FROM t1; -- 0ms;
SELECT ALL ((((t0.c1)<<(t0.c2))) BETWEEN ((((t0.c1, t0.c0, t1.c0))<=((0.1308061087604243, t0.c2, t0.c0)))) AND (((x'6fcae9f4')*(t0.c2)))) FROM t1;SELECT DISTINCT ((t0.c0)LIKE(t0.c2)) COLLATE BINARY FROM t1 NOT INDEXED LIMIT -1212635823 OFFSET -558986584;SELECT ALL (t1.c0 COLLATE BINARY IN ()) FROM t1, t0 WHERE (((CASE '	n'  WHEN NULL THEN 0.5198373897143703 WHEN 0X46f9858b THEN -191750870 WHEN '' THEN '-1003818001' END)!=(CAST(x'' AS TEXT)))) GROUP BY CASE (t0.c2 IN (x'', t0.c1))  WHEN IFNULL(t1.c0, t0.c0) THEN ((((t0.c0)OR(t1.c0)))OR(t0.c1)) WHEN 0.7698130788065812 THEN ((((((((t0.c0)AND(t0.c2)))OR(t0.c2)))OR(t0.c1)))OR(t0.c2)) WHEN ((t0.c0)==(t1.c0)) THEN CAST(t0.c2 AS TEXT) ELSE ((NULL)AND(t0.c1)) END HAVING (((t0.c2)&(t1.c0)) IN ()) ORDER BY CASE WHEN (((t0.c1, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c2, t0.c1)) AND ((t1.c0, t0.c1, t1.c0))) THEN (t0.c2 IN ()) END ASC, (((((t1.c0))<((t0.c0))))<>(((t0.c2) NOTNULL))); -- 0ms;
SELECT DISTINCT SQLITE_VERSION(), (t1.c0 IN (x'', t0.c1, t0.c1)) COLLATE BINARY, IFNULL((t0.c2 IN (t0.c0, t0.c0)), ((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) FROM t0 LIMIT -1419546976 OFFSET -1207988659;SELECT '[~' FROM t0 GROUP BY ((((t0.c1) ISNULL))=(((t1.c0) ISNULL))), (~ ((NOT (t1.c0)))), json_extract(CAST(t0.c1 AS NUMERIC), CASE t0.c0  WHEN t0.c2 THEN t1.c0 ELSE t0.c2 END);SELECT (((NOT (t0.c1)))|((((((((('mMzmG\n')OR(x'dfea')))OR(t0.c1)))AND(t0.c1)))OR(t0.c1)))) FROM t1, t0 WHERE (((((0.7457318083142245)>(0.31227006978624694)))+((((NULL))>=((0.5405374277725216)))))) GROUP BY (- (((t1.c0) NOT BETWEEN (t1.c0) AND (NULL)))) HAVING (CAST(t0.c2 AS NUMERIC) IN (t0.c1, CAST(t0.c2 AS TEXT))); -- 0ms;
SELECT DISTINCT ((((t0.c0)==(t0.c2))) NOT BETWEEN (TOTAL(t0.c1)) AND ((t0.c0 IN ()))) FROM t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT ((((((((((t0.c0)AND(t0.c1)))AND(t0.c2)))OR(t1.c0)))AND(t1.c0))) BETWEEN ((((t1.c0, t0.c0, t0.c0))<((t0.c0, t0.c2, t0.c2)))) AND (CAST(t1.c0 AS INTEGER))) FROM t0, t1 WHERE (((0.5405374277725216) NOTNULL) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT ALL '' FROM t0 INDEXED BY i0 LIMIT -1457273960 OFFSET 1328101030;SELECT DISTINCT (CASE WHEN t0.c2 THEN t0.c2 END IN (0xffffffff9324c366 COLLATE NOCASE)) FROM t0; -- 1ms;
SELECT ALL ((ABS(t0.c0))GLOB((t0.c0 IN ()))) FROM t0 WHERE (CAST((+ (445000765)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((((t0.c1)+(t1.c0)))AND(COUNT(*))))OR(0.5215479161782118)) FROM t1;SELECT DISTINCT '1797259442' FROM t0, t1 WHERE (('9e' IN ()) COLLATE RTRIM); -- 0ms;
SELECT (((NULL) BETWEEN (t0.c1) AND (t0.c2)) IN ()) FROM t1, t0 WHERE (CAST((NOT (0X6230fe5c)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT t0.c1 FROM t1, t0; -- 0ms;
SELECT CASE WHEN (('-436795201') ISNULL) THEN (((t1.c0, t1.c0, 1466192412))>((t0.c0, t0.c2, t1.c0))) WHEN ((t0.c2)<>(t1.c0)) THEN (NOT (1.7976931348623157E308)) WHEN (t0.c2 IN ()) THEN CASE t0.c1  WHEN t0.c2 THEN t1.c0 END END, COUNT(CAST(t0.c0 AS REAL)) OVER (), (~ ((2.004796942E9 IN (t0.c1)))) FROM t1 INDEXED BY i0;SELECT t0.c0, (((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN 0.9639278559866425 THEN t0.c1 ELSE t0.c2 END))<>(((((x'09bd'))==(('d)d䞪')))))), ((t0.c2 COLLATE RTRIM)>>((((t0.c2)) BETWEEN ((NULL)) AND ((t0.c0))))) FROM t1, t0 WHERE (((CASE WHEN NULL THEN 5.22474009E8 ELSE 0xffffffffacd7ccfb END)<=(CAST(NULL AS INTEGER)))) GROUP BY ((((t0.c2)-(t0.c1))) NOT NULL) HAVING NULL LIMIT -1056522491 OFFSET -1942773174; -- 1ms;
SELECT ALL CUME_DIST() OVER () FROM t1, t0 LIMIT -1604386514; -- 0ms;
SELECT DISTINCT MAX(t1.c0), (((('H')AND(((t0.c1) BETWEEN (t0.c0) AND (t1.c0)))))AND(CAST(t0.c0 AS REAL))), CAST(CASE WHEN t0.c1 THEN '-1266919147' ELSE t0.c0 END AS INTEGER) FROM t0 WHERE (((0.7698130788065812) IS TRUE) COLLATE NOCASE);SELECT ALL SUM(t0.c0) COLLATE BINARY FROM t1, t0; -- 0ms;
SELECT DISTINCT (((t0.c2 IN (t1.c0)))IS((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) FROM t0, t1; -- 0ms;
SELECT DISTINCT (((t0.c2)||(t0.c1)) IN (GROUP_CONCAT('-1664032466'))), CAST(t0.c2 COLLATE BINARY AS INTEGER), CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END COLLATE NOCASE FROM t0, t1; -- 3ms;
SELECT CAST(COUNT(*) AS INTEGER) FROM t1 WHERE (((((x'ca0a') NOT NULL)) BETWEEN (LIKELY(DISTINCT 0.16459186749401167)) AND (x'0a4c' COLLATE NOCASE))); -- 0ms;
SELECT (CAST(t0.c1 AS INTEGER) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT 0.1103559270663641 FROM t1, t0; -- 0ms;
SELECT ((((t0.c2) NOT BETWEEN (x'') AND (t0.c1)))LIKE(((t1.c0) IS FALSE))) FROM t0, t1 WHERE (x'') LIMIT 2115471434; -- 1ms;
SELECT CASE WHEN CAST(t1.c0 AS BLOB) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND ('-343509530')) WHEN ((t1.c0)<('1541123932')) THEN ((((t0.c1)AND(t0.c1)))OR(t0.c1)) WHEN t1.c0 THEN t0.c1 WHEN t0.c2 THEN ((t0.c0) IS TRUE) WHEN ((t0.c1)+(t0.c1)) THEN (+ (t0.c0)) END FROM t1, t0 LIMIT 1626886104 OFFSET -370743729; -- 0ms;
SELECT ((((t1.c0)OR(t0.c1)))&(AVG(t0.c0))) FROM t1 GROUP BY '-1799086877' ORDER BY CASE ((t0.c2) NOTNULL)  WHEN (('')GLOB(t0.c0)) THEN (t1.c0 IN ()) ELSE (((t1.c0, t0.c0, t0.c2))!=((t1.c0, t0.c2, t1.c0))) END  NULLS FIRST;SELECT ALL (+ (t0.c1 COLLATE BINARY)) FROM t0 WHERE ((('C')<<('997525518')) COLLATE NOCASE) LIMIT 1716129507; -- 0ms;
SELECT DISTINCT CAST((NOT (t0.c0)) AS BLOB) FROM t0, t1; -- 0ms;
SELECT DISTINCT x'1d61' FROM t0 NATURAL JOIN t1; -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY t1.c0 COLLATE RTRIM DESC  NULLS FIRST) FROM t0 WHERE (CAST(CASE WHEN NULL THEN x'' END AS REAL));SELECT ALL ((ABS(DISTINCT NULL))%(((t0.c0)OR(t1.c0)))) FROM t1 RIGHT OUTER JOIN t0 ON ((((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)OR(((t1.c0)<(t0.c1)))))OR(t1.c0)) WHERE (NULL) ORDER BY '/3hc|' DESC, CASE ((t0.c2)LIKE(t0.c2))  WHEN (t0.c0 IN ()) THEN ((t0.c2)+(t1.c0)) END; -- 0ms;
SELECT CAST(t0.c1 AS BLOB) COLLATE NOCASE FROM t1;SELECT DISTINCT ((((t0.c2)<>(t0.c2)))-(((t0.c1) IS TRUE))) FROM t1 LIMIT 187788792;SELECT (NOT ('775907593')), ((((COUNT(t0.c0))OR(t0.c1 COLLATE RTRIM)))OR(((NULL)OR(t0.c2)))), (- ('0.1308061087604243' COLLATE RTRIM)) FROM t0, t1 WHERE (((((x'619d')IS NOT(NULL)))|(0.11703331105038106 COLLATE BINARY))) ORDER BY (~ ((t0.c1 IN ())))  NULLS LAST, x''  NULLS LAST; -- 0ms;
SELECT ALL ((((((((((((((((0.7135303411494577)AND(CAST(t1.c0 AS INTEGER))))OR(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1))))))OR(((t1.c0) NOTNULL))))OR(JULIANDAY(t1.c0, t0.c2, 0.22934833981063796, t0.c2, t0.c0))))OR(((t0.c1)<=(t0.c0)))))AND(t0.c2 COLLATE RTRIM)))AND(CAST(t1.c0 AS REAL))) FROM t0 WHERE ((CAST(NULL AS TEXT) IN ((((NULL))=((0.6820865130783209))))));SELECT DISTINCT ((IFNULL(DISTINCT t0.c1, t0.c0))==(load_extension(t0.c1, t0.c2))) FROM t1, t0; -- 0ms;
SELECT ((0.38839183130672117 IN ()) IN ((((t0.c0, t1.c0, t0.c1, t0.c2, t0.c0))<>((t0.c0, t0.c2, t0.c0, '', t0.c0))))) FROM t1;SELECT ((t0.c1) IS FALSE) COLLATE RTRIM FROM t1;SELECT ALL (((SUM(t1.c0), CASE WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END, CASE WHEN t0.c2 THEN 0.4479203778822328 WHEN t1.c0 THEN t0.c0 WHEN t0.c2 THEN 'MJ]''ꎚ~' WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END))>=((((t0.c0)-(t0.c2)), t0.c2, NULL COLLATE NOCASE))) FROM t0, t1 WHERE ('1888273102' COLLATE BINARY); -- 0ms;
SELECT ALL '{t' FROM t1; -- 0ms;
SELECT ALL ((((~ (t0.c2)), ((t0.c1) BETWEEN (t1.c0) AND (t1.c0)), COUNT('')))=((CASE t0.c2  WHEN NULL THEN t0.c0 WHEN t1.c0 THEN t0.c2 WHEN t1.c0 THEN t0.c1 END, ((x'') IS FALSE), t0.c2))), (((((t1.c0) NOT NULL)))<=((((t0.c1)OR(t0.c0))))), CASE WHEN (((t0.c0))<((t1.c0))) THEN t1.c0 WHEN ((t0.c1)*(t0.c1)) THEN (t0.c0 IN ()) WHEN ((t1.c0)||(t0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c1)) AND (('-533208265'))) END FROM t0;SELECT (COALESCE(DISTINCT t1.c0, t0.c1, t1.c0, t0.c2) IN (t0.c2)) FROM t0, t1 WHERE (x''); -- 0ms;
SELECT ALL CAST(CAST(t1.c0 AS TEXT) AS INTEGER), FIRST_VALUE(((t1.c0 COLLATE NOCASE) NOT BETWEEN (t1.c0 COLLATE BINARY) AND ((t0.c0 IN ())))) OVER (), COUNT((+ (t0.c0))) OVER () FROM t1, t0; -- 1ms;
SELECT DISTINCT ((t0.c2)*((t0.c2 IN ()))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((SUM(t0.c1)) NOT BETWEEN ('9e') AND ((+ (t1.c0)))) FROM t1;SELECT DISTINCT ((t1.c0)<(t1.c0 COLLATE RTRIM)) FROM t0 ORDER BY (DATE(t0.c2, t0.c0, t0.c1, t0.c1, t0.c1) IN ())  NULLS LAST;SELECT (((t1.c0 IN ())) BETWEEN (0.20292551870086772) AND (((t0.c1) NOT NULL))), ((((t0.c2)>(t0.c0)))/(((t1.c0)<>(t0.c0)))), 2099524595 FROM t1, t0; -- 4ms;
SELECT ((((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))&(NULL)) FROM t1 WHERE (((((((0.7225737594313054) NOT NULL))OR((('1503283001')|('0.8260766777361981')))))AND(CAST(NULL AS TEXT))));SELECT DISTINCT ((((t0.c2)<>(t0.c2))) NOT BETWEEN (CASE WHEN t0.c2 THEN t1.c0 END) AND (((((t0.c2)AND(t0.c2)))OR(t0.c1)))) FROM t0, t1; -- 0ms;
SELECT DISTINCT CAST(((t0.c1) IS TRUE) AS NUMERIC) FROM t0 WHERE ((((((NULL, '1232217807', 0.7322936975671859))>=((NULL, '0.08584645025081339', 0.0024873670754315125))))=(NULL COLLATE NOCASE))) ORDER BY CASE t0.c2 COLLATE RTRIM  WHEN ((t1.c0)-(t0.c2)) THEN ((((((((t0.c0)OR(522474009)))AND(t1.c0)))OR(x'')))OR(t0.c2)) ELSE (t0.c2 IN ()) END  NULLS FIRST, CAST(((t0.c0) NOTNULL) AS BLOB) ASC;SELECT DISTINCT ((t0.c2)>>(t0.c2)) COLLATE RTRIM FROM t1, t0 WHERE (CAST((((NULL))=((x'd50695d35c27'))) AS TEXT)) GROUP BY ((((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(IFNULL(DISTINCT t1.c0, 1676256029))))OR(((t0.c0) IS FALSE))), ((((t0.c2)OR(t1.c0)))LIKE(CASE t0.c0  WHEN t1.c0 THEN t1.c0 ELSE t0.c0 END)), 0.9858715113947109; -- 0ms;
SELECT MAX(((t0.c1)-(0.0))) FROM t1 WHERE (CASE 0.7390202833957619 COLLATE BINARY  WHEN ((NULL)+(x'')) THEN ((-1.405350899E9) BETWEEN (x'') AND (0.6044224104844635)) ELSE '1541123932' END) ORDER BY t0.c2 ASC  NULLS FIRST, (((t0.c2)) BETWEEN ((UNLIKELY(t0.c1))) AND ((NULLIF(t0.c2, t1.c0)))) DESC  NULLS LAST, (((+ (t0.c1))) NOT NULL)  NULLS LAST;SELECT ALL ((((t0.c2)*(t0.c1))) IS FALSE) FROM t1;SELECT ((CAST(t0.c0 AS NUMERIC))-(CAST(t0.c1 AS INTEGER))) FROM t1, t0; -- 0ms;
SELECT t0.c2 FROM t1, t0; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (json_array_length(SQLITE_COMPILEOPTION_USED(x''))); -- 0ms;
SELECT ALL CASE WHEN -5.33208265E8 COLLATE BINARY THEN CAST(t0.c0 AS TEXT) WHEN ((((t1.c0)AND(t0.c2)))OR(t0.c2)) THEN (t0.c2 IN ()) WHEN ((t0.c0)IS NOT('')) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE ((t1.c0) BETWEEN (t0.c2) AND (t0.c1)) END, '-2005071100', COUNT(*) OVER () FROM t1 LIMIT -148216039;SELECT MAX(((-8.5591284E7) NOT NULL)), LIKELY(DISTINCT ((t1.c0) NOTNULL)), ((CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END) BETWEEN (((t0.c0)>=(t0.c2))) AND ((+ ('356263402')))) FROM t1 WHERE (((('{}')IS NOT(0Xffffffffb7ff8e4d)) IN ()));SELECT DISTINCT ((((((((((x'')AND(t0.c2)))AND(t1.c0)))OR(t0.c1)))AND(t0.c2))) NOT NULL), ((GROUP_CONCAT(t0.c2))GLOB((t0.c0 IN (t0.c0, NULL)))), ((((t0.c1) NOTNULL))*(json_extract(t1.c0, t0.c2, 0.4207248066513001, t0.c0))), t0.c2, ((((0.2832362108426286)>>(t0.c0))) IS TRUE) FROM t1;SELECT DISTINCT CAST(((x'8447') NOTNULL) AS INTEGER), ((((t0.c1) IS TRUE))<>(((t1.c0) NOT NULL))), ((((t1.c0) IS FALSE))IS((- (t0.c0)))) FROM t1 WHERE (((((((((CAST(NULL AS NUMERIC))OR(0xffffffffc355cf6e)))AND(((NULL)LIKE(0.6172357598596712)))))AND((~ (1.191192717E9)))))OR((('-1458600921')OR(840144408)))));SELECT DISTINCT AVG(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1))) OVER (), (- (((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))AND(t0.c0)))OR(t0.c1)))), PERCENT_RANK() OVER ( ORDER BY NULL DESC  NULLS LAST) FROM t1, t0 WHERE (0xfffffffffd6aedac); -- 1ms;
SELECT 0Xffffffffdcb2d60e FROM t0 WHERE (CASE (((NULL, NULL, 0.19594600668114748))==(('', x'', 'B(?9ᛱ8Sx')))  WHEN (0Xe4932f5 IN ()) THEN NULL COLLATE BINARY WHEN ((x'')<('')) THEN (((x'9135')) BETWEEN ((0x2525c910)) AND ((x'c552'))) WHEN CASE WHEN 0.4184402080366282 THEN x'94d1' END THEN x'6bbe' COLLATE NOCASE END); -- 0ms;
SELECT UNICODE((+ (t0.c2))) FROM t0 WHERE (CASE WHEN ((0.8831410527380705) IS FALSE) THEN NULL COLLATE BINARY ELSE (+ (x'')) END); -- 0ms;
SELECT DISTINCT CAST(((((t0.c1)AND(t0.c0)))AND(t0.c0)) AS BLOB) FROM t1;SELECT DISTINCT (t0.c0 IN ()) COLLATE BINARY FROM t1 WHERE ((((((- ('1006395945')))AND(((0.10661717600489085)IS NOT('')))))AND(CASE 'oU]^'  WHEN 0.32005903536100155 THEN 'n''렟	' END))) GROUP BY (NOT ((NOT (t1.c0)))), ((LOWER(DISTINCT t0.c1))<<(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))), DATETIME(CASE t1.c0  WHEN t0.c2 THEN t0.c1 ELSE t1.c0 END, rtreenode(t0.c1, t0.c0), 'c0sT)'), CASE WHEN 0xffffffff81e074c7 THEN highlight(t0.c1, t0.c1, NULL, t0.c0) ELSE json_quote(t0.c1) END, (((((0X3621ada5)GLOB(t1.c0))))==((((t0.c1) NOT BETWEEN (t0.c0) AND (t1.c0)))));SELECT ALL ((NULL COLLATE NOCASE) NOTNULL) FROM t1 WHERE (CAST((('-1900967923')<<(0.016064279102838586)) AS REAL)); -- 0ms;
SELECT 6.1054561E7, MIN(LIKELY(DISTINCT t0.c1)) COLLATE NOCASE, ((COALESCE(t0.c0, t0.c1))OR(t0.c0 COLLATE RTRIM)) FROM t1 WHERE (((+ (0.9300165110302413)) IN (CASE 0x5992da1e  WHEN NULL THEN 0.38600274553189906 WHEN 'U䗟j-鋧y.E' THEN 0.1936728689068563 WHEN NULL THEN 0.9376641904526967 ELSE NULL END)));SELECT SUM(((NULL)<(t0.c0))) OVER () FROM t1;SELECT DISTINCT (t0.c0 IN ()) COLLATE BINARY, MAX(((t0.c1)IS(t0.c2)), SUM(t0.c2), TOTAL(t0.c1), (((t0.c1))<((t0.c0)))), (~ (t0.c0)) COLLATE RTRIM, TOTAL((((t0.c2, t1.c0, t0.c1))<=((NULL, NULL, t0.c0)))) OVER (), ((NULL) BETWEEN (((t0.c2) ISNULL)) AND (t0.c0 COLLATE BINARY)) FROM t1, t0 WHERE (((CAST(x'744f' AS TEXT))AND(((x'') IS TRUE)))); -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT GROUP_CONCAT(CASE WHEN t0.c2 THEN '-2121048493' END) OVER () FROM t1, t0; -- 0ms;
SELECT ((SUM(t0.c2))|(((t0.c2)!=(t0.c2)))), t0.c1, (((((t1.c0) NOTNULL), ((t0.c0) NOT NULL), NULL COLLATE NOCASE, ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)), -1236170754))<=((t0.c2, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), CAST(t1.c0 AS TEXT), -454782224, ((NULL) NOT BETWEEN (x'') AND (NULL))))) FROM t0, t1 WHERE (((NULL COLLATE BINARY) BETWEEN (((NULL)<=(x''))) AND ((NOT (x''))))); -- 0ms;
SELECT ALL ((((LAST_INSERT_ROWID())OR(((0.09086373917688528) BETWEEN (t0.c0) AND (x'')))))OR(((t1.c0)<<(t1.c0)))), ((t0.c2 COLLATE NOCASE) IS FALSE), ((t0.c2)+(CAST(t0.c0 AS NUMERIC))) FROM t1, t0 WHERE (CASE WHEN CAST(0.848358438097357 AS BLOB) THEN ((NULL)<=(-5.62885838E8)) WHEN ((1.535091558E9) NOT BETWEEN (0.057202830399932014) AND (NULL)) THEN ((x'') IS TRUE) WHEN (('un')IS NOT(x'')) THEN '	Xz4K{' WHEN CASE WHEN 'Au19\nsK' THEN NULL ELSE 0.5405374277725216 END THEN 0x5428125d WHEN 'J}m3-IXNn' COLLATE RTRIM THEN 5.379975464341266E18 END); -- 0ms;
SELECT DISTINCT ((((t0.c1)!=(0.1401404334008296))) ISNULL), (NOT (((((t0.c1)AND(t0.c0)))OR(t0.c0)))), (((NOT (t0.c2)))%(t0.c0 COLLATE NOCASE)) FROM t0 WHERE (((((0.7319735179295841)IS('517677306'))) BETWEEN (('f)' IN ('-1207988659', 0.03334333730761119))) AND (TRIM(DISTINCT '*MH(', '|mፘ*	')))); -- 0ms;
SELECT ALL (~ (((t0.c1)<=(t0.c0)))) FROM t0 WHERE (((((0x777ec60e COLLATE NOCASE)OR((x'' IN (-1.334599893E9, '-1405350899')))))AND(CASE 0.17355983614095383  WHEN '' THEN '' END))); -- 0ms;
SELECT DISTINCT CAST(MIN(t0.c1, t1.c0) AS BLOB), '-1120288979', (~ (((x'') BETWEEN (t0.c2) AND (t0.c1)))) FROM t1, t0; -- 0ms;
SELECT ALL x'', COUNT(*) OVER (), ((((t0.c0 COLLATE BINARY)OR(((x'') IS FALSE))))OR(LIKE(t1.c0, t1.c0))), TYPEOF(CASE WHEN 0.13615707650928188 THEN t0.c2 WHEN t0.c0 THEN '-140688510' WHEN t0.c1 THEN t0.c0 END), AVG(((t0.c1)>=(t0.c2))) OVER ( ORDER BY CHAR(CAST(t0.c2 AS TEXT)) ASC  NULLS LAST, ((((t0.c2)) NOT BETWEEN ((t1.c0)) AND ((-1.839155351E9))) IN ()) DESC  NULLS LAST), (~ (((NULL)AND(t0.c1)))), (+ ((- (t0.c1)))) FROM t1;SELECT DISTINCT (((t0.c1)OR(t1.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL (((CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))<((COUNT(t0.c0)))) FROM t1 WHERE ((~ (((x'') NOT BETWEEN (1.889501052E9) AND ('692942751'))))) EXCEPT SELECT '2104496180' FROM t1;SELECT DISTINCT ((t1.c0)|(CAST(t1.c0 AS NUMERIC))) FROM t0, t1 WHERE (TRIM(DISTINCT ((x'') NOT NULL), CAST(260561708 AS BLOB))); -- 1ms;
SELECT ((((t0.c0) NOT NULL)) NOT BETWEEN (CHAR(t0.c2)) AND (t1.c0 COLLATE BINARY)) FROM t1 WHERE (CAST((- ('')) AS TEXT));SELECT DISTINCT ((1037391632) IS TRUE) FROM t1, t0 GROUP BY ((((((((((((t0.c0)AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c1)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((((0.34408450279337877))>((t0.c2))))), UNLIKELY(DISTINCT t0.c1) COLLATE NOCASE, ((((((t0.c2)AND(t0.c2)))OR(t1.c0))) ISNULL), CAST(((t0.c1)<=(t1.c0)) AS BLOB), (((((((((t1.c0)OR(t1.c0)))OR(t0.c1)))OR(t1.c0)))OR('-1410615382')) IN ()) HAVING ((((((t0.c0)+(t1.c0)))AND(((t0.c2) BETWEEN (t0.c2) AND (t1.c0)))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c0 END)); -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c0 THEN t1.c0 END) NOTNULL), (t1.c0 IN ()), COUNT(*) OVER () FROM t0, t1 WHERE (ABS(((0Xffffffff8c87dd99)<<(NULL)))); -- 0ms;
SELECT DISTINCT MIN(COUNT(t1.c0), CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END), ((((((t1.c0) IS TRUE))AND(NULL)))OR(((t0.c0)>>(t0.c0)))), t0.c2 FROM t1 WHERE (LOWER(DISTINCT ((0Xbec555a)OR(x''))));SELECT ALL (((t1.c0) NOTNULL) IN ()) FROM t0, t1 WHERE (CASE WHEN ((NULL) BETWEEN (x'') AND ('kfTFYFy')) THEN CAST('풧S7XxI' AS TEXT) ELSE ((x'')&(NULL)) END); -- 0ms;
SELECT ALL CASE WHEN CAST(t0.c2 AS BLOB) THEN (- (t0.c1)) ELSE t0.c1 COLLATE NOCASE END, ((CAST(t0.c0 AS BLOB))*(CASE WHEN t1.c0 THEN t0.c2 END)), COUNT(*) OVER ( ORDER BY ((IFNULL(t0.c2, t1.c0)) NOT BETWEEN (((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (NULL))  NULLS FIRST) FROM t1 WHERE ((+ (NULL COLLATE NOCASE)));SELECT ALL x'' FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN ((t0.c2)!=(t1.c0)) END, LAST_VALUE(CASE (NOT (t1.c0))  WHEN t0.c2 COLLATE RTRIM THEN ((((t1.c0)OR(t0.c0)))OR(t0.c2)) ELSE ((t0.c1) IS FALSE) END) OVER (), t0.c2 FROM t1, t0 WHERE ((x'6662' IN (0.7140806234850195)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOT BETWEEN (((((t0.c1)OR(t1.c0)))AND(t0.c2))) AND (((t0.c1)*(t1.c0)))), (((t0.c2, t0.c2, t0.c0)) BETWEEN ((((t0.c1) IS TRUE), ((t1.c0)GLOB(t0.c1)), ((t0.c0)+(t1.c0)))) AND (((NOT (t0.c2)), CAST(x'' AS TEXT), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))))), t0.c1 FROM t0, t1 WHERE (((((((((x'b610')OR(NULL)))OR('-992628540')))OR(x'')))OR(x'')) COLLATE RTRIM) GROUP BY CASE (~ (t0.c2))  WHEN (((t0.c0))>=((t1.c0))) THEN ((t0.c1) NOT NULL) ELSE CAST(t0.c1 AS BLOB) END, NULLIF(DISTINCT ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)), (+ (t1.c0))), (((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))) AND (((((t0.c2)OR(t0.c2)))AND(t0.c2)))); -- 0ms;
SELECT ((t1.c0) BETWEEN (t0.c1) AND (t0.c1)) COLLATE BINARY FROM t1 WHERE (TOTAL_CHANGES());SELECT (((NOT (t0.c1))) NOT BETWEEN (((((((((t0.c2)OR(t1.c0)))AND(t0.c1)))AND(t0.c0)))AND(t0.c1))) AND ((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2))))) FROM t1, t0 WHERE ((((-1895742820) BETWEEN (x'') AND ('8mINF')) IN ())); -- 0ms;
SELECT DISTINCT (((t0.c2 IN ())) NOT BETWEEN (t1.c0) AND (((((((((t0.c0)OR(t0.c0)))AND(t1.c0)))AND(t0.c1)))OR(t0.c1)))) FROM t1 WHERE (((((((((((((((((0x8660b22)OR(0.6839989638456784)))OR('\e')))AND(x'')))AND('1488661518')))OR(((('*7\rB'))<=((x''))))))AND((((0.22934833981063796)) BETWEEN ((x'')) AND ((NULL))))))AND(CASE WHEN 0X5764521c THEN x'' WHEN '1581910556' THEN NULL WHEN NULL THEN 0.7747409405085364 ELSE '|ꕄ' END)))OR((((NULL)) NOT BETWEEN (('700388540')) AND (('')))))) LIMIT -480164189 OFFSET 1191192717;SELECT DISTINCT ((CAST(-196031964 AS INTEGER)) NOT BETWEEN (CASE WHEN t0.c2 THEN x'' ELSE t0.c0 END) AND ((~ (t1.c0)))), GLOB('-1251471822' COLLATE BINARY, t1.c0 COLLATE NOCASE), ((((t1.c0)>(t0.c2)))LIKE(t0.c0 COLLATE RTRIM)) FROM t1, t0; -- 0ms;
SELECT ALL LAG(((((IFNULL(t1.c0, t1.c0))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(x'')), CAST(((t1.c0) NOT NULL) AS TEXT), (((NOT (t1.c0)))OR((+ (t1.c0))))) OVER () FROM t1 GROUP BY CAST(((t0.c0) ISNULL) AS INTEGER) HAVING (((NOT (t0.c0)))+(CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN x'' THEN t0.c1 WHEN t0.c0 THEN 0.6034215995864838 END));SELECT DISTINCT CASE WHEN ((t0.c1) IS FALSE) THEN ((t1.c0) NOT NULL) WHEN ((t1.c0)>(t1.c0)) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) WHEN t0.c2 THEN (((('322029217')AND(t0.c2)))AND(t0.c0)) WHEN CASE t0.c1  WHEN t0.c1 THEN 1.503283001E9 ELSE t1.c0 END THEN CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END WHEN ((t0.c2)<=(t0.c2)) THEN ((t0.c0) ISNULL) END FROM t1, t0 WHERE (GLOB('1362669232', NULL)) LIMIT -1405350899 OFFSET 324705532; -- 0ms;
SELECT DISTINCT CAST(t1.c0 COLLATE NOCASE AS TEXT), ((CASE WHEN t0.c2 THEN t0.c0 ELSE t1.c0 END) NOT BETWEEN ((+ (t0.c1))) AND (((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))AND(t0.c2)))), t0.c2 FROM t1, t0; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0) IS TRUE)) FILTER(WHERE CASE WHEN ((t1.c0) NOT NULL) THEN CAST('0.4184402080366282' AS INTEGER) ELSE t0.c0 END) OVER () FROM t0 INNER JOIN t1 ON ((((0xffffffffe5d884b7)OR('-689054315')))AND(((((t0.c0)AND(t0.c0)))OR(t0.c1)))) WHERE ((((~ ('984693304')))IS NOT(CAST(1539587134 AS REAL)))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (((t0.c2)-(t0.c0))) AND (t0.c0 COLLATE NOCASE)), CAST(t0.c1 COLLATE NOCASE AS BLOB), ((0.9704569240136415) ISNULL) FROM t1, t0 ORDER BY ((NULL) NOTNULL) DESC  NULLS FIRST; -- 0ms;
SELECT GROUP_CONCAT(((((((((t0.c1)OR(t0.c2)))OR(t0.c2)))AND(t0.c1)))OR(t0.c2))) FROM t0, t1 ORDER BY (((t0.c0)) NOT BETWEEN (('356263402')) AND ((t0.c0 COLLATE RTRIM))), (~ (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))) ASC, ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))) IN ()) DESC; -- 0ms;
SELECT ALL SUM(((t0.c0)<<(t0.c2))), '', (NOT ((((t1.c0))<=((t0.c2))))) FROM t0, t1; -- 1ms;
SELECT DISTINCT (TYPEOF(t0.c2) IN ()) FROM t1 WHERE ((((((0.519843407453774 IN ()))OR(((0.7240132281211937) NOT BETWEEN (NULL) AND (-1271150324)))))OR('t	*Gw['))); -- 0ms;
SELECT DISTINCT (t0.c0 IN ()), UNLIKELY(t0.c2 COLLATE NOCASE), t0.c2, LAST_VALUE(((CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)IS NOT(((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) OVER (), DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT MAX(NULL, x'', ((((((((t0.c1)OR(t0.c0)))AND(t0.c2)))AND(t1.c0)))OR(t1.c0)), CASE WHEN t0.c0 THEN t0.c2 END), (((CASE WHEN t0.c0 THEN t0.c2 END, MIN(t1.c0), CASE WHEN t0.c1 THEN t1.c0 END))<=((CASE x''  WHEN t0.c0 THEN -1.331098475E9 WHEN x'' THEN t0.c2 WHEN 0.39041618197101613 THEN t0.c2 END, t0.c2, ((((t0.c0)OR(t1.c0)))OR(t0.c0))))), (t0.c0 IN (CASE WHEN t0.c0 THEN NULL ELSE t0.c0 END)) FROM t1, t0 WHERE (LOWER(0.814222782916284 COLLATE BINARY)); -- 0ms;
SELECT ALL t0.c2 FROM t1 WHERE ('Bq6') LIMIT 1610969272 EXCEPT SELECT ALL CAST((t1.c0 IN (t1.c0)) AS INTEGER) FROM t1;SELECT CAST(((t0.c1)<<(t0.c2)) AS TEXT) FROM t1, t0 WHERE ((((0.4357157124511011, NULL, NULL)) BETWEEN (((- (1.191192717E9)), (((0xffffffffa8e81e37))>((x'7c5b'))), ((NULL)<=(x'')))) AND (('8昋MA''᪅R' COLLATE BINARY, LAST_INSERT_ROWID(), CASE WHEN 0.8521317242024501 THEN 'j瓇%	' ELSE NULL END)))); -- 0ms;
SELECT ALL ((((((t1.c0)OR(t0.c0)))OR(t0.c1)))>>((('-766828559') BETWEEN (t0.c1) AND (t0.c1)))) FROM t0, t1 WHERE ((((x'bab1') BETWEEN (NULL) AND (NULL)) IN ())) ORDER BY (((t0.c1 IN (t0.c1))) BETWEEN (CASE t1.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE 0X22bbc7f9 END) AND ((NOT (x'')))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (((((t1.c0)OR(t0.c2)))AND(t1.c0)))) FROM t0;SELECT DISTINCT NTILE(((CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END)>(((t0.c0) ISNULL)))) OVER ( GROUPS (((((t0.c0))>((t1.c0)))) ISNULL) PRECEDING EXCLUDE GROUP), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END IN ((- (t0.c1)), x'6ea1')), AVG(((((t0.c0)OR(t0.c2)))OR(t0.c2))) FROM t0;SELECT DISTINCT (((- (t0.c1)))IS NOT(t0.c1 COLLATE RTRIM)) FROM t0, t1; -- 0ms;
SELECT MIN(QUOTE(t0.c1)) FROM t0, t1; -- 0ms;
SELECT LAG(NULL, (t0.c1 IN ()), ((((((((((((t0.c0)AND(((t0.c2)%(NULL)))))OR(((t0.c1) IS FALSE))))AND(CAST(t0.c1 AS REAL))))AND(CAST(t0.c0 AS BLOB))))OR((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t0.c1, NULL, t0.c2))))))OR(((((((((((((t0.c1)OR(t0.c0)))AND(NULL)))OR(t0.c1)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0))))) OVER () FROM t0 WHERE ((((((0Xffffffffa90f8427))<>((0x5d94c7ad)))) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(NULL)) AND (CAST('఍''vOx^瓇T' AS INTEGER)))) ORDER BY ((((t0.c1)<(t0.c0)))>>(t0.c2 COLLATE NOCASE))  NULLS FIRST; -- 0ms;
SELECT ((t0.c1 COLLATE RTRIM)!=((+ (t0.c1)))), ((CASE WHEN t0.c2 THEN t1.c0 ELSE t0.c1 END)<=(CAST(t0.c1 AS NUMERIC))), ((((t0.c0)>=(t0.c1))) ISNULL) FROM t0 WHERE (DATE((('206686831') BETWEEN (NULL) AND ('SVy')), (('dS') NOT BETWEEN (0xfffffffff2458015) AND ('')), CASE x'e17ebf94'  WHEN 0.6475090149951777 THEN NULL END, 590694862, json(-2.121048493E9)));SELECT DISTINCT (((-7.9943865E8)==(t0.c0)) IN ()) FROM t1 WHERE (((((0X3a39e61)OR(NULL)))-(TRIM('e!Me௮.7')))) ORDER BY (((t0.c2)<('-993362793')) IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t0.c1))<>((t0.c2))) COLLATE BINARY FROM t0, t1 WHERE (((IFNULL(DISTINCT x'', 356263402)) NOT BETWEEN (CASE WHEN x'd0901248' THEN '-1107073525' ELSE 0.4088203496903803 END) AND (((((NULL)AND(NULL)))AND('9B'))))); -- 0ms;
SELECT DISTINCT CASE (t1.c0 IN (t0.c2))  WHEN json_insert(t0.c0, t0.c1, t1.c0, t0.c0, t0.c1) THEN ((t0.c1)<(t1.c0)) END FROM t0, t1 WHERE (((((CAST(x'' AS INTEGER))AND('0.8114747956332363' COLLATE BINARY)))AND(CAST('-1100433427' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((('#A')GLOB(NULL))) IS FALSE) FROM t1 WHERE ((((NULL IN ()))+('0.6820865130783209'))); -- 1ms;
SELECT (((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) IN ()) FROM t0, t1; -- 0ms;
SELECT (((((t1.c0)OR(t0.c2)))AND(t0.c0)) IN ((+ (t1.c0)))), t0.c0, '1355671553' FROM t1;SELECT ALL ((((t0.c0)LIKE(t0.c0)))|(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))) FROM t1 WHERE ((((('50124712')OR(NULL)))OR('')) COLLATE RTRIM) ORDER BY CASE t0.c2  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t1.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 END COLLATE NOCASE, CASE TRIM(t0.c1, t0.c1)  WHEN (('-507689743') IS TRUE) THEN t0.c0 COLLATE BINARY WHEN (((t0.c0))<=((t1.c0))) THEN 0.9393364930650043 WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c0)) THEN (((t0.c1))<=((t0.c1))) END ASC  NULLS LAST LIMIT 42047038;SELECT DISTINCT (NOT (((t0.c2)>(t1.c0)))) FROM t1;SELECT DISTINCT ((t0.c2 IN ()) IN ()) FROM t1, t0 NOT INDEXED; -- 1ms;
SELECT DISTINCT CASE t1.c0 COLLATE NOCASE  WHEN ((t0.c2) IS FALSE) THEN ABS(NULL) END FROM t0 WHERE ((((0.20798647078436583)) BETWEEN (((+ (0.05693644430175626)))) AND ((CASE x'80cc'  WHEN x'd89a' THEN '200037722' END)))) GROUP BY ((UNICODE(t0.c2))AND(CAST(t0.c1 AS BLOB))) LIMIT -1896646022 OFFSET -1251471822;SELECT ALL (((NOT (t0.c2)))<=((t1.c0 IN ()))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY, (((t0.c2)) BETWEEN ((t1.c0)) AND ((t0.c0))) COLLATE BINARY FROM t0, t1 WHERE (((((((((((NULL)!=(0.1440941061940335)))OR(((NULL)OR(x'5252')))))AND(((((((((0x3b05d3c7)OR('1058402792')))OR(NULL)))AND(NULL)))AND(x'a3c3')))))AND(CAST('-1458600921' AS REAL))))OR(CAST(5.22474009E8 AS TEXT)))); -- 0ms;
SELECT ALL 0.8340626950251712 FROM t0 WHERE (((((-204626439) IS FALSE))AND(((((8.34918869E8)AND(2.078994976E9)))OR(NULL))))); -- 0ms;
SELECT DISTINCT CAST(((t0.c2)>(t0.c0)) AS INTEGER) FROM t0, t1; -- 0ms;
SELECT '718565274' FROM t0, t1; -- 0ms;
SELECT (((t0.c0 IN ())) BETWEEN (NULL) AND (CAST(t0.c0 AS BLOB))), ((((((((CAST(t0.c0 AS INTEGER))AND((~ (t0.c1)))))OR('s￿䥚')))AND(GROUP_CONCAT(t0.c1))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c1)))), ((t0.c1 COLLATE RTRIM)!=(((t0.c2) NOTNULL))) FROM t1, t0 WHERE (((CAST('2078994976' AS INTEGER)) NOT BETWEEN (('-1405350899' IN ())) AND (((0.9413096214639454) BETWEEN ('J	V&GSVOc') AND (x''))))) ORDER BY (t0.c0 COLLATE RTRIM IN ()); -- 0ms;
SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT DISTINCT 0.4843597088594921, (('un') BETWEEN (CASE WHEN t0.c1 THEN t1.c0 ELSE t0.c2 END) AND ((((t0.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t0.c1, t1.c0)) AND ((t0.c1, t0.c0, t1.c0))))), CASE WHEN (t1.c0 IN ()) THEN ((((t1.c0)OR(t1.c0)))OR(t0.c1)) END FROM t1, t0; -- 0ms;
SELECT t1.c0, ((((0.1572564335197547) IS FALSE)) BETWEEN (t1.c0) AND ((~ (t0.c0)))), t0.c1 COLLATE RTRIM, FIRST_VALUE(t1.c0) OVER (), AVG(((t1.c0) BETWEEN (t0.c0) AND (t1.c0))) FROM t1 WHERE (((((('-1754637068' IN ()))OR((NULL IN (x'')))))AND(0.5346281877750272 COLLATE BINARY)));SELECT DISTINCT ((((((t0.c2)%(t0.c1)))OR(((((t0.c1)OR(t0.c2)))AND(t0.c1)))))OR(((t0.c0)<=(t0.c1)))), CASE WHEN ((t0.c2) NOTNULL) THEN ((('119102259', t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((t0.c0, t0.c2, t0.c1))) ELSE GROUP_CONCAT(0.16459186749401167) END, ((AVG(t1.c0)) BETWEEN (((t1.c0)IS(t0.c0))) AND (((t0.c2)<(t0.c2)))) FROM t0 WHERE ((~ ((NOT (-6.18078287E8))))) ORDER BY t0.c0  NULLS FIRST, CASE (~ (t0.c1))  WHEN (t1.c0 IN (t1.c0, t0.c1)) THEN TIME(t0.c0, t0.c1, t0.c1, t0.c0, t0.c1) ELSE ((t0.c0) IS TRUE) END DESC LIMIT -1339443134 OFFSET -1765836804;SELECT x'', ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))<(t0.c0)), CAST((- (t0.c2)) AS NUMERIC) FROM t1;SELECT ALL CAST(NULL AS INTEGER) FROM t1, t0; -- 0ms;
SELECT (((t1.c0)) BETWEEN ((HEX(DISTINCT t0.c1))) AND ((((t1.c0)%(t1.c0))))) FROM t0 WHERE (((CAST(0.782849481758584 AS INTEGER)) IS FALSE));SELECT ALL ((((((((((0Xffffffffaf84f81f)OR(NULL)))OR(((t0.c0) IS TRUE))))OR(((t1.c0) NOTNULL))))OR(NULL)))AND(MIN(t0.c1))), (NOT ((NOT (x'')))), CUME_DIST() OVER () FROM t0;SELECT ALL ((((t1.c0) BETWEEN (x'03d7') AND (NULL)))<=((((t0.c2, t0.c2, NULL))<((t0.c1, t1.c0, t0.c0))))), INSTR(CAST(t0.c2 AS INTEGER), (t0.c2 IN (t0.c0))), ((t0.c2) NOT BETWEEN (((t0.c1)<>(0.5346281877750272))) AND (((t0.c2) BETWEEN (t0.c2) AND (0xffffffff81935e53)))) FROM t1 WHERE (((((NULL)OR('d)d䞪'))) NOT BETWEEN ((+ (-1537337207))) AND ((('1647378012') BETWEEN ('uz4*^') AND (NULL)))));SELECT ALL ((CASE WHEN x'55a5' THEN t0.c0 ELSE t1.c0 END) ISNULL) FROM t0, t1 WHERE (CAST((('k&dK냄')OR(2104496180)) AS INTEGER)) LIMIT 387302353 OFFSET 2136490973; -- 0ms;
SELECT DISTINCT ((((t0.c1)>=(t0.c0)))IS NOT(0.9030479193036264)) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((t1.c0 COLLATE BINARY)GLOB(((t1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))) FROM t1, t0; -- 1ms;
SELECT DISTINCT CASE CAST(t1.c0 AS BLOB)  WHEN ((t0.c2)/(t0.c1)) THEN t0.c0 WHEN t1.c0 COLLATE NOCASE THEN ((t0.c0)OR(t0.c2)) WHEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) THEN (t0.c0 IN (t0.c2)) ELSE ((0.5541057321313092) BETWEEN (t0.c1) AND (t0.c1)) END, ((t0.c2) ISNULL), 3.1683E8 FROM t1 LIMIT -647315424 OFFSET -1372239417;SELECT (((t0.c0)%(t0.c0)) IN ()), CAST(((t0.c2) IS FALSE) AS BLOB), COUNT(*) FROM t0 WHERE ((- (((0.5201865817958156) BETWEEN ('') AND (0.2318339478334096))))); -- 0ms;
SELECT CASE WHEN CASE t0.c2  WHEN '265037495' THEN t1.c0 END THEN ((t0.c2)>=(t0.c1)) WHEN 'u' THEN ((t1.c0) NOT BETWEEN (t0.c1) AND (NULL)) WHEN x'3885' THEN CAST(t0.c1 AS INTEGER) END FROM t1 WHERE (((((('t\r', 0.5108366500781062, 0X52ebfcfd)) BETWEEN (('-1319025410', '0.3012390504124528', 0.2364538791680566)) AND ((x'6cce', 'ZyA2', 0.314583433678442))))>(x'' COLLATE NOCASE)));SELECT DISTINCT TOTAL((t0.c2 IN (t0.c2))) FROM t0, t1; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((x'')) AND ((((t1.c0)>=(t0.c1))))) FROM t1, t0 WHERE (LIKELIHOOD((- (1488661518)), 0.6264111929165208)); -- 0ms;
SELECT DISTINCT (((t1.c0, t1.c0, t0.c2)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t1.c0 ELSE t0.c2 END, ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t1.c0)))AND(t0.c0)), LIKE(t0.c1, '1006395945'))) AND ((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0)), t0.c0 COLLATE BINARY, '1058402792'))), ((t0.c0) IS TRUE), (- ((t0.c2 IN ()))) FROM t0;SELECT ALL 0.2586557073456335 COLLATE BINARY FROM t1, t0; -- 0ms;
SELECT (TOTAL(t0.c1) IN (((t0.c2) IS FALSE))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((((((((' X')OR(t0.c0)))OR(t0.c1)))AND(t1.c0)))OR(t0.c2)))-((((t0.c2))==((t1.c0))))), (~ ((NOT (t0.c1)))), ((((((t0.c1)!=(t0.c0)))AND(CASE t0.c1  WHEN t1.c0 THEN t0.c0 END)))OR(((t0.c1)IS(t0.c0)))) FROM t1, t0 GROUP BY (((t0.c0))<((t0.c2 COLLATE BINARY))) HAVING (~ (CASE t0.c2  WHEN t0.c0 THEN x'' ELSE t0.c2 END)); -- 0ms;
SELECT DISTINCT ((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()) FROM t0; -- 1ms;
SELECT NULL FROM t1 WHERE (((CASE x'a168'  WHEN 0Xffffffffae72289f THEN x'' END)<((+ (176414145))))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c1) BETWEEN (t0.c1) AND (t0.c2))) OVER () FROM t0, t1 GROUP BY ((((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))OR(((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))OR(t1.c0)))AND('-2115996473')))))AND(t1.c0)), t0.c1, ((((t1.c0) BETWEEN (NULL) AND (t1.c0)))LIKE(((t1.c0)||(t0.c0)))), CASE CAST(t0.c0 AS REAL)  WHEN CAST(t0.c1 AS INTEGER) THEN IFNULL(DISTINCT t0.c2, t1.c0) ELSE ((t1.c0)&(x'66576b78a02f')) END, ((t0.c1) ISNULL); -- 0ms;
SELECT ((((t0.c1) NOTNULL)) NOT NULL) FROM t0 WHERE (0.5906759144636121); -- 0ms;
SELECT UNLIKELY(GROUP_CONCAT(t0.c0)) FROM t1 WHERE (((((x'')&(0.4926814513131068))) NOT NULL));SELECT ALL ((CAST(t0.c2 AS TEXT)) NOT BETWEEN (((((t0.c1)OR(t0.c1)))AND(t0.c1))) AND ((((t0.c0, '0.2822363014617335', t0.c1))<=((NULL, t0.c1, t0.c2))))) FROM t0; -- 1ms;
SELECT t1.c0 FROM t0, t1 ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST; -- 0ms;
SELECT ALL t0.c2, AVG(MAX(json_array_length(t0.c0))), ((((((t0.c1) BETWEEN (t1.c0) AND (t0.c1)))OR((- (t0.c2)))))AND((((t0.c0))=((t0.c2))))) FROM t0 WHERE (((CASE x''  WHEN x'' THEN 0.2884227300091132 END) ISNULL));SELECT NTH_VALUE(t0.c2, (NOT (((t0.c2) BETWEEN (t0.c0) AND (t0.c2))))) OVER () FROM t0 WHERE (((((((0.8831410527380705) NOT NULL))OR(((0.9508068126614685)LIKE('1191859770')))))AND(CAST('' AS INTEGER)))); -- 0ms;
SELECT DISTINCT CASE ((((t0.c2)AND(t0.c0)))AND('1772458209'))  WHEN CAST(t0.c1 AS BLOB) THEN (t0.c1 IN ()) ELSE t0.c2 COLLATE RTRIM END FROM t1;SELECT DISTINCT (((t1.c0)AND(t1.c0)) IN (MAX(0.0833629366265608))) FROM t0 LIMIT -1405350899;SELECT DISTINCT t0.c1 FROM t0 GROUP BY CASE WHEN IFNULL(t0.c0, t0.c1) THEN ((t0.c0) ISNULL) WHEN (((t1.c0, x'', t0.c1)) BETWEEN ((t0.c1, t1.c0, t0.c1)) AND ((t0.c1, t0.c1, t1.c0))) THEN (NOT (t0.c2)) WHEN UNICODE(t0.c1) THEN (t0.c0 IN ()) ELSE IFNULL(t0.c0, t0.c0) END, rtreenode(((t1.c0)GLOB(t0.c0)), (~ (t0.c1))), CASE WHEN CASE t0.c1  WHEN NULL THEN t0.c0 END THEN '301255676' END;SELECT ALL (((((t1.c0)IS(t1.c0)), (t0.c2 IN ()), (('IHd^Rtv(')/(0X62a0f3a9)), (t0.c1 IN ()), (((('pR&e0]\r﬌惰')AND(t1.c0)))AND(t0.c0)), ((724565433)<=(t0.c0)), TOTAL(t0.c1)))<>((t0.c0 COLLATE BINARY, ((t0.c1) NOT NULL), GROUP_CONCAT(t0.c0), SUM(t1.c0), MAX(t0.c0), json_quote(t1.c0), t1.c0 COLLATE BINARY))) FROM t0;SELECT DISTINCT (t0.c2 COLLATE RTRIM IN (((((t0.c1)OR(t0.c1)))OR(t0.c1)))) FROM t0, t1 WHERE (((((((x'')OR('-1226204531')))AND(x'9461'))) IS FALSE)); -- 0ms;
SELECT ALL (((t0.c1)>(t0.c1)) IN ()), ((UPPER(0.7462300644116768)) IS TRUE), ((((MIN(0X45b68a68))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(((t0.c1)GLOB(t1.c0)))) FROM t1;SELECT COUNT((t0.c1 IN (t0.c0, t0.c2))) OVER () FROM t0 WHERE (CASE ((((NULL)OR('-935065251')))OR('S峇Hx&'))  WHEN ((((0.15411964406771872)OR(0.9870462733435953)))AND('2137317297')) THEN (0X6296665e IN ()) END); -- 0ms;
SELECT DISTINCT (((t0.c1)) NOT BETWEEN ((x'6d93')) AND (((t1.c0 IN (t0.c2, NULL, t0.c0))))) FROM t1, t0 WHERE (((((-5.33208265E8)<<(1159569363)))>>(TRIM(DISTINCT '', x'02f1')))) GROUP BY LIKELIHOOD((NOT (t0.c1)), 0.2518455217591675), NULLIF(((t0.c1)<(t0.c2)), CASE t0.c1  WHEN t0.c0 THEN 0.5224653497505933 WHEN t0.c1 THEN t0.c1 WHEN t1.c0 THEN t0.c0 END), 0.2456901918110076; -- 0ms;
SELECT ((ABS(t1.c0))=(CAST(t0.c2 AS INTEGER))) FROM t1 ORDER BY ((((t1.c0)>=(t0.c2))) BETWEEN (((t0.c1) BETWEEN (t0.c0) AND (t0.c1))) AND ('1707877425')) DESC  NULLS FIRST;SELECT DISTINCT MAX(((t0.c1) ISNULL)), NULL, ((t0.c2) IS TRUE) FROM t1 WHERE (LIKE(((0.13957897286034515) IS FALSE), (('*O') NOT BETWEEN ('1141244665') AND (NULL)), '-'));SELECT ALL MIN(t0.c1), x'5d00', CUME_DIST() OVER () FROM t1 WHERE (CAST(((NULL) NOT BETWEEN (NULL) AND (0x23aa3847)) AS INTEGER));SELECT DISTINCT (+ (NULL)) FROM t1, t0 WHERE ((((x'', '-1040181772', 0Xffffffffe613aa1a, NULL, '')) NOT BETWEEN ((CASE WHEN x'' THEN '-1012247734' ELSE NULL END, CAST(x'459bb6c5' AS TEXT), ((x'7209')IS NOT('-533208265')), CAST(0x2d1940d1 AS TEXT), ((0.44918679598836564) NOT NULL))) AND ((((0.5587313035415509) NOT BETWEEN (NULL) AND (NULL)), (NULL IN ()), x'966e' COLLATE BINARY, '*\n', ((NULL)IS NOT('287928094')))))); -- 0ms;
SELECT ALL (((((~ (t0.c1)))AND(t1.c0)))AND((NOT (t0.c2)))) FROM t1, t0 WHERE ((('.E' COLLATE BINARY)<=((('Jb~^&') BETWEEN (NULL) AND (0.017492857437752196))))); -- 0ms;
SELECT COUNT(*) OVER () FROM t1 LIMIT 431358648 OFFSET -1057750419; -- 0ms;
SELECT ((((0.866187075419155)IS NOT(t0.c2)))OR(((t0.c0)!=(t0.c0)))) FROM t0, t1; -- 0ms;
SELECT ALL LTRIM(COUNT(*), t0.c2) FROM t0 WHERE (ABS(DISTINCT load_extension(x''))) LIMIT -376161286; -- 0ms;
SELECT ALL ((((((t0.c0))=((t0.c1)))))<=((CAST(t0.c0 AS INTEGER)))) FROM t1, t0 WHERE (GLOB(((((((((NULL)AND(x'')))OR(NULL)))OR(x'')))OR(NULL)), (('XLgC9j>L')<=('')))); -- 0ms;
SELECT DISTINCT ((t0.c0) ISNULL) FROM t0, t1 GROUP BY ((t0.c1 IN ()) IN ()); -- 0ms;
SELECT DISTINCT MIN(((((t0.c1)AND(t0.c0)))AND(t0.c2))) FROM t1 WHERE (((HEX(DISTINCT 0.964076966258399))&(((NULL)AND(NULL)))));SELECT (((- (t1.c0))) NOTNULL) FROM t0 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT x'2079', '-1331098475', 0.7455458812933118 FROM t1 WHERE (0.8125902827429611); -- 0ms;
SELECT ALL CAST(((((x'b220')AND(t0.c0)))AND(t0.c2)) AS NUMERIC) FROM t0, t1 WHERE ((NOT ((~ (NULL))))); -- 0ms;
SELECT rtreenode(CAST(t0.c2 AS TEXT), t1.c0 COLLATE NOCASE), CAST(((t1.c0)IS NOT(t0.c0)) AS NUMERIC), ((CASE WHEN 0.32789626105200875 THEN 0x58bb2c0e WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c2 END)/((- (1.058402792E9)))) FROM t0 WHERE (CASE '-454782224'  WHEN ((0.021778007033318447) NOT BETWEEN (0Xffffffff83179cfe) AND (NULL)) THEN CASE WHEN 0.3303425670827391 THEN '1006395945' WHEN x'' THEN x'd482eb63' WHEN x'' THEN 'Yv)yD*⿱' ELSE '☨O' END END);SELECT (((t0.c2)) BETWEEN ((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))) AND ((CASE t1.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))) FROM t1, t0 WHERE (((CASE WHEN 'v{(dxz2' THEN 0.74081882442891 ELSE '' END) NOT BETWEEN ((('-2121048493') BETWEEN ('0.9639278559866425') AND ('316223918'))) AND (((-928307767)>>(NULL))))); -- 0ms;
SELECT ALL NULLIF(((t0.c1)GLOB(t1.c0)), (t1.c0 IN ())) FROM t1;SELECT (((~ (t0.c1))) NOT BETWEEN (t0.c2) AND ((t0.c0 IN (t0.c1, t0.c1)))), (((t0.c1))<((CASE '1826860443'  WHEN t0.c0 THEN t1.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 END))), ((((SUM(t0.c0))OR(((((t0.c1)AND(t0.c1)))AND(t0.c1)))))AND(((t0.c0)>>(t0.c1)))) FROM t0 WHERE ((- ((('1700774276')>>(NULL)))));SELECT DISTINCT 0.12746906472136132 FROM t1 WHERE (rtreenode(x'32ce' COLLATE NOCASE, '' COLLATE BINARY)); -- 0ms;
SELECT ALL CAST('1249377677' AS TEXT), ((((NULL) NOT BETWEEN (t0.c0) AND (t1.c0)))%(TOTAL(t1.c0))), 0.019923932773196706 FROM t0;SELECT DISTINCT SUBSTR(((((',7')OR(t0.c0)))OR(t0.c2)), t0.c1 COLLATE BINARY) FROM t0, t1 WHERE (((NULL) NOT BETWEEN (TRIM(0.20292551870086772, NULL)) AND ((('0.9169702255211303')<=(x'f9644746'))))) GROUP BY CAST(((t0.c2)!=(1.006395945E9)) AS REAL), (NOT (ABS(t0.c2))), ((((t1.c0) IS TRUE)) NOT BETWEEN (((t0.c1) BETWEEN (t0.c1) AND (t0.c0))) AND (((t0.c1)>=(t1.c0)))) HAVING (((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) IN ()); -- 0ms;
SELECT (((IFNULL(t0.c0, t1.c0)))>=((((t1.c0) BETWEEN (t0.c0) AND (t0.c1))))) FROM t0 WHERE ((((('-1664032466') BETWEEN (0.021322013589504696) AND ('1503283001')))IS NOT(NULL COLLATE RTRIM)));SELECT DISTINCT CASE WHEN (((t0.c0, t0.c2, t0.c0))>((t0.c1, NULL, t1.c0))) THEN (NOT (t0.c0)) END, ((ABS(DISTINCT t1.c0))/((t0.c0 IN ()))), '316830000' FROM t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT) ASC;SELECT DISTINCT (((t0.c2)) NOT BETWEEN ((MIN(t0.c0))) AND ((((t0.c0)AND(t1.c0))))), CASE WHEN CAST(t1.c0 AS INTEGER) THEN CASE WHEN t0.c2 THEN t0.c2 END END, CASE WHEN MIN(t1.c0) THEN x'2d9a' WHEN '1986500452' THEN UPPER(t0.c0) WHEN LIKELY(9.97525518E8) THEN ((t0.c2)<=(t1.c0)) END, TOTAL(LENGTH(t0.c1)) OVER (), COUNT(*) FROM t1 WHERE ((- ((((0x1bb4324e)) BETWEEN (('1797259442')) AND ((NULL))))));SELECT DISTINCT ((((((t1.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))AND(((t0.c1)||(t0.c1)))))AND(((((t0.c0)AND(t0.c2)))OR(t0.c1)))) FROM t1, t0; -- 0ms;
SELECT CAST(COUNT(*) AS INTEGER) FROM t0 WHERE (json_insert((0.1687366533134964 IN ()), (((((((((((('0.6372685023009026')AND(NULL)))AND('442970816')))AND('-1839155351')))OR('幓֢{Ubv')))OR('c')))AND('649862429')), CAST(0Xffffffffe6c4740f AS TEXT))) GROUP BY ((t0.c0)<(((((t1.c0)AND(t0.c2)))AND(t0.c1)))) HAVING 0.7991516777065997;SELECT DISTINCT ((CASE WHEN t1.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END) NOT NULL) FROM t1 WHERE (x'');SELECT DISTINCT ((NULL)=(((t0.c1) IS FALSE))) FROM t0; -- 0ms;
SELECT SQLITE_SOURCE_ID(), (t0.c1 COLLATE RTRIM IN ()), (SUM(t1.c0) IN ()) FROM t0, t1; -- 0ms;
SELECT MIN(MAX(((((t0.c0)OR(t1.c0)))OR(t0.c0)))) FROM t1, t0 GROUP BY (((((t0.c2))<((t0.c2)))) IS TRUE);SELECT ALL (((((t0.c2, t1.c0, t0.c0)) NOT BETWEEN ((t1.c0, t0.c0, t0.c0)) AND ((t1.c0, t0.c2, t0.c0))))<=(CASE t0.c0  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)) FROM t0, t1 WHERE (((((0x755d5769) NOT BETWEEN ('5K') AND ('-1139424203')))IS NOT(json_extract(NULL, 'Wg')))) LIMIT 1662890773; -- 0ms;
SELECT ALL (((NULL IN ()))IS NOT(t0.c0 COLLATE BINARY)) FROM t1, t0; -- 0ms;
SELECT ((((t0.c1 COLLATE NOCASE)OR(((t0.c1) BETWEEN (t1.c0) AND (0.9129510949748874)))))OR(GROUP_CONCAT(t0.c2))), CASE ((((((((t1.c0)AND(t1.c0)))AND(t0.c1)))OR('')))AND(t0.c2))  WHEN (t1.c0 IN ()) THEN GROUP_CONCAT(t0.c0) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) END, (((t1.c0))>=((GROUP_CONCAT(t0.c1)))) FROM t1 INDEXED BY i0;SELECT ALL CASE WHEN t0.c2 COLLATE RTRIM THEN (+ (t1.c0)) ELSE LIKELY(t0.c2) END FROM t1, t0; -- 0ms;
SELECT DISTINCT (((t0.c0) BETWEEN (t1.c0) AND (t0.c1)) IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT CAST(CASE t0.c0  WHEN t0.c1 THEN t1.c0 WHEN t0.c0 THEN t0.c2 WHEN x'824a' THEN t1.c0 ELSE t0.c2 END AS BLOB) FROM t1 WHERE (1.54041384E9);SELECT DISTINCT ((((t1.c0) NOT BETWEEN (t0.c1) AND (t1.c0))) BETWEEN (((t0.c0)IS(t1.c0))) AND (t0.c2 COLLATE NOCASE)), (((t0.c1) BETWEEN (t1.c0) AND (t0.c2)) IN (TOTAL(t0.c2))), CAST(CASE WHEN t1.c0 THEN t0.c1 ELSE 0x125d437e END AS INTEGER) FROM t0, t1 WHERE (((x'' COLLATE NOCASE) ISNULL)) ORDER BY (((t0.c2, t1.c0, t0.c2)) NOT BETWEEN (((t0.c0 IN (t0.c0)), t0.c0, ((t0.c1)==(t0.c0)))) AND ((t0.c1, ((t1.c0) NOT NULL), CASE WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t0.c0 WHEN t0.c2 THEN t1.c0 ELSE t0.c1 END)))  NULLS FIRST, ((((t0.c1) NOT BETWEEN (0.46782103151054777) AND (t1.c0))) IS FALSE) DESC  NULLS LAST; -- 0ms;
SELECT (((- (t0.c1)))-(t0.c2)) FROM t1 WHERE (LOWER(CASE WHEN NULL THEN 0.4910739438393038 WHEN NULL THEN x'c9d8' WHEN 0.5677592341870363 THEN 0.829668981458076 END));SELECT ALL ((((t1.c0) BETWEEN (t1.c0) AND (t0.c2))) IS FALSE), (((((t0.c1, 0.9954394899944543, t0.c2)) NOT BETWEEN ((t0.c0, t0.c0, t0.c2)) AND ((t1.c0, NULL, t0.c2)))) NOT BETWEEN (COUNT(*)) AND (CASE t0.c1  WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t1.c0 WHEN t1.c0 THEN t0.c2 END)), NULL FROM t0 WHERE (((CAST(0xffffffffaebbb09d AS TEXT)) BETWEEN ((x'0bfe' IN (0.669507990197381, NULL))) AND (LIKELY(x''))));SELECT ALL ((((t0.c1) IS TRUE)) BETWEEN (t1.c0) AND (((t1.c0) NOT NULL))) FROM t1, t0; -- 0ms;
SELECT ((CASE t1.c0  WHEN t0.c2 THEN x'b301' ELSE t0.c2 END) IS TRUE) FROM t0 WHERE (CAST(0Xffffffff9e147764 AS NUMERIC) COLLATE BINARY);SELECT ALL (NOT (GROUP_CONCAT(t0.c2))) FROM t1;SELECT DISTINCT CAST(CAST(0.24858370858790313 AS INTEGER) AS NUMERIC) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((t1.c0) NOT NULL), (CAST(t0.c1 AS INTEGER) IN ((t0.c2 IN ()))), TOTAL(CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t1.c0 END) FROM t1 WHERE ((((0.42508293833475064 IN ())) NOTNULL));SELECT ALL SUM((((t0.c2))<>((t0.c1)))) COLLATE RTRIM FROM t0 WHERE (CASE ((x'') NOT NULL)  WHEN (NOT ('-1710525917')) THEN CASE WHEN -2096919631 THEN 5.22474009E8 ELSE x'f86b' END ELSE CAST(0X1c925cf AS BLOB) END); -- 0ms;
SELECT DISTINCT (~ ((+ (t0.c0)))), t0.c1 COLLATE NOCASE, CAST(AVG(t0.c1) AS NUMERIC) FROM t1 WHERE (0Xffffffffa23f8111);SELECT '-866517199', (((t0.c1, t1.c0, t0.c2)) BETWEEN ((CAST(t0.c0 AS NUMERIC), (((t1.c0, t0.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c1, t1.c0)) AND ((t0.c1, t1.c0, 0.7322936975671859))), (t1.c0 IN ()))) AND ((((t0.c1) BETWEEN (-1418056814) AND (t0.c0)), ((0.5349134448948094)<<(t0.c2)), ((t1.c0)OR(t0.c0))))), LAST_VALUE(((((t0.c0)+(t0.c2)))GLOB(((t0.c1) BETWEEN (t0.c2) AND (t0.c2))))) OVER () FROM t0, t1 LIMIT 1135120873; -- 1ms;
SELECT DISTINCT json_array_length(CAST(t0.c0 AS INTEGER), t1.c0 COLLATE RTRIM) FROM t1;SELECT (((t0.c2)GLOB(t1.c0)) IN ()), (('s￿䥚')=((t0.c0 IN ()))), CASE WHEN (NOT (t0.c1)) THEN t0.c0 COLLATE BINARY WHEN TIME(t0.c1, t0.c0, t0.c0) THEN t0.c2 COLLATE BINARY WHEN t0.c2 THEN ((t0.c2) IS FALSE) ELSE ((((t1.c0)AND(t0.c0)))AND(t1.c0)) END FROM t0, t1 WHERE ((((x''))<(('898248051'))) COLLATE NOCASE) LIMIT -1722749329 OFFSET 962749728; -- 0ms;
SELECT DISTINCT (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((''))))OR(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN '5K' END)))OR((((t0.c0))!=((t0.c2))))) FROM t1 WHERE ((((0.8906788716923769)<(NULL)) IN (NULL COLLATE NOCASE)));SELECT DISTINCT CAST(((t0.c0) NOT NULL) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT (+ (((t0.c0)/(t0.c1)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c1) BETWEEN (t0.c2) AND (-1251471822)))IS(COUNT(t0.c0))), CASE t0.c2  WHEN t0.c2 THEN '1503283001' WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END COLLATE BINARY, ((0X5bd0d990)<=(t0.c1)) COLLATE BINARY FROM t0 WHERE (((((x'')<>(x'e611e51d'))) IS TRUE)); -- 0ms;
SELECT ALL (0.0558028048621404 IN ()) FROM t0, t1 WHERE ((((((NULL, x'', '')) BETWEEN ((x'ee00', 0.23967333825079462, 0.6069620914374363)) AND (('v%毋', -1773473960, 0.6875284841944415))))IS NOT((- (0.12956588798911983))))); -- 0ms;
SELECT DISTINCT ((((((((t1.c0)OR(((t0.c2) BETWEEN (t0.c0) AND (-1502736493)))))OR(HEX(DISTINCT t1.c0))))AND(NULL)))AND(t0.c2)), (+ (0Xffffffffb10dcbec)), ((((((t0.c1)OR(t0.c0)))OR(t1.c0))) ISNULL), CASE ((((0.23257863993303252)AND(t0.c0)))OR(t0.c1))  WHEN ((t0.c2) IS FALSE) THEN SUM(t1.c0) WHEN (((t0.c2))<>((t0.c2))) THEN (t0.c2 IN ()) WHEN ((x'')>>(t0.c0)) THEN ((((((((t0.c1)AND(t0.c1)))AND(t0.c0)))OR(t1.c0)))AND(t0.c2)) END, TOTAL(((t1.c0) IS TRUE)) OVER () FROM t0, t1; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT '-859560651', (t1.c0 IN ())) FROM t1 WHERE ((((x'')=(x'')) IN (NULL, (NULL IN ()), (NULL IN ())))) GROUP BY t0.c1, ((t1.c0 IN (t1.c0)) IN ()), (((((t0.c1 IN (t0.c1)))AND('')))AND((t0.c1 IN (t1.c0)))) HAVING CAST(((728739537) BETWEEN (t0.c2) AND (t0.c1)) AS NUMERIC);SELECT (((t1.c0, 0.6439496945815552, t0.c0)) BETWEEN ((((((((((t0.c2)OR(t1.c0)))AND(t1.c0)))AND(t0.c1)))AND(t0.c1)), t0.c0, x'')) AND (((((t1.c0, 0.4615865462437725, t0.c1))<>((t0.c2, t0.c0, t0.c1))), LIKELY(t0.c2), t0.c1))), (((t0.c1 IN ()))+(t0.c0 COLLATE RTRIM)), ((((((((LIKELIHOOD(DISTINCT 'RqA', 0.7080367882667035))OR(((((t0.c0)OR(t1.c0)))OR(t0.c0)))))OR(t0.c2 COLLATE BINARY)))OR(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))))OR(((((t0.c2)AND(t0.c2)))AND(t0.c2)))) FROM t1 WHERE ((((((+ (0.5346281877750272)))OR(('-1070632288' IN ()))))AND(((x'2b6d') NOTNULL))));SELECT DISTINCT NTILE(0.4252770373041461) OVER ( GROUPS  CURRENT ROW EXCLUDE TIES), SUM(json_array_length(t0.c0, t0.c1)) OVER (), ((t1.c0)>(t1.c0)) COLLATE NOCASE FROM t1, t0; -- 0ms;
SELECT ((t0.c2) IS TRUE) COLLATE RTRIM FROM t1 LIMIT -1547384077;SELECT ALL ((TOTAL(t1.c0)) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((NOT (t0.c0)))) FROM t1 GROUP BY ((NULL)>=(((((0x16e8ef73)OR(t0.c1)))AND(t1.c0))));SELECT ((t0.c1)GLOB(t0.c2)) COLLATE RTRIM, LOWER(DISTINCT CAST(t0.c0 AS REAL)), ((((((((((NULL)OR(t0.c1)))OR(t0.c2)))AND(t1.c0)))AND(t0.c1)))/(NULLIF(t0.c0, ''))), SUM((+ (t1.c0))), t1.c0 FROM t0 ORDER BY ((t0.c0)<=(t0.c0)) COLLATE BINARY  NULLS FIRST, (((t0.c2 IN (t0.c1, t0.c0))) BETWEEN (((0.1529719026295273)IS NOT(t0.c1))) AND ((~ (t0.c0)))) ASC  NULLS FIRST;SELECT DISTINCT NULL FROM t0 INNER JOIN t1 ON 'bq6'; -- 0ms;
SELECT (((t0.c1)) NOT BETWEEN ((x'')) AND ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) FROM t0, t1 WHERE ((((((((((('-951814449') ISNULL))AND(SQLITE_COMPILEOPTION_GET(0.2613751615193789))))AND((('NA') BETWEEN ('Qq]ゃb') AND (x'')))))AND((('')<>(1716129507)))))OR(((0x5c5e960c) BETWEEN (-1864373424) AND (-1.522791402E9))))); -- 0ms;
SELECT DISTINCT (('')&(t0.c2 COLLATE BINARY)) FROM t1, t0; -- 0ms;
SELECT (((((t0.c2))<(('0.3012390504124528'))))<>(((t0.c2) IS FALSE))), ((SUM(t0.c1))&(t0.c0 COLLATE RTRIM)), AVG(x'1cdd') FROM t0, t1 WHERE (((((NULL) ISNULL)) IS FALSE)) GROUP BY (((((((((((t0.c2))>=(('vg'))))OR(t0.c0)))AND((t0.c1 IN ()))))OR(((t0.c2) ISNULL))))AND(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))) HAVING ((TOTAL(t1.c0))-(((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))); -- 0ms;
SELECT ALL NTILE(NULL) OVER ( ORDER BY (((t1.c0 IN ()))|(((t1.c0) BETWEEN (0.9450732497035672) AND (x''))))  NULLS LAST, ((((t0.c2) NOT BETWEEN (0.4233746722504246) AND (t0.c0)))||(CASE WHEN t0.c0 THEN t0.c1 END)) ASC  NULLS FIRST, ABS(DISTINCT t1.c0) COLLATE RTRIM DESC), (CAST(t0.c1 AS NUMERIC) IN (MIN(t1.c0))), t0.c2 COLLATE BINARY FROM t1;SELECT (((t1.c0 IN ())) BETWEEN ((((t0.c0, t0.c2, t0.c1, t0.c1, t0.c1)) NOT BETWEEN ((t0.c2, t0.c1, t1.c0, t0.c2, t1.c0)) AND ((t1.c0, NULL, 0.3171844643905556, t0.c0, t0.c2)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))), SUM(t0.c2) OVER (), MIN(t1.c0 COLLATE RTRIM) COLLATE BINARY FROM t1 WHERE (((((((((((((CASE NULL  WHEN '-1368250209' THEN NULL ELSE '' END)OR((((((((('9E')AND(x'b5e0')))OR('2051910424')))AND(x'')))OR(0.6820865130783209)))))OR(((0.0)OR(0.15931998734614328)))))OR(((0.06031568346068461) NOT BETWEEN ('-1124780316') AND (x'a7efbd81')))))AND(('1080022183' IN (NULL, 's')))))AND(0.8204546817693599)))AND(CASE x'9df3'  WHEN 2127118397 THEN '-363467493' WHEN NULL THEN NULL WHEN 'L퐿|.' THEN NULL END)));SELECT DISTINCT (t0.c0 COLLATE BINARY IN (((t1.c0)>=(t0.c0)))) FROM t1, t0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((((((1541123932)AND(NULL)))AND('&^G~\n]'))) BETWEEN (((3.08102014E8) IS TRUE)) AND ((('')IS(x''))))); -- 0ms;
SELECT CASE WHEN ((t1.c0) BETWEEN (t0.c0) AND ('0.9508703650290573')) THEN '>b%O' ELSE ((t0.c0)<(t1.c0)) END FROM t0, t1 WHERE (((0.9855402564693667)IS NOT(NULL))) GROUP BY 0.4939136531964483, t1.c0, INSTR(x'', (NOT (t0.c1))) HAVING load_extension(((t0.c2) NOT BETWEEN (t0.c2) AND (t1.c0))); -- 0ms;
SELECT ALL TOTAL(GROUP_CONCAT(t0.c0)) COLLATE NOCASE FROM t1 WHERE (((((0.5258261550492191) BETWEEN (x'') AND ('')))<>((((0.03227757447852875))<=((0.9169702255211303))))));SELECT DISTINCT CASE WHEN ((x'') NOT BETWEEN (t0.c1) AND (x'')) THEN ((t0.c2) BETWEEN (t0.c1) AND ('-1')) WHEN t0.c1 THEN (~ (t0.c1)) WHEN t0.c1 THEN ((t1.c0) IS TRUE) END FROM t0 WHERE (json_extract('&R', 0.7478450204557154, NULL, x'') COLLATE BINARY) LIMIT 1106360256 OFFSET -1588608760;SELECT '>*' FROM t1 WHERE ((((((0xffffffffc777e464 IN ()))OR((0X1f245219 IN ()))))AND(((x'')<<(2.87239725E8))))) GROUP BY ((CAST(t0.c1 AS TEXT)) IS FALSE) HAVING x'';SELECT DISTINCT LAST_VALUE((- (((t0.c2)LIKE(t0.c1))))) OVER () FROM t0; -- 0ms;
SELECT ALL ((((((t0.c2)AND(t0.c1)))AND(t0.c1))) BETWEEN (t0.c1) AND (ABS(t0.c2))), (((t0.c2)) BETWEEN ((t0.c1 COLLATE NOCASE)) AND ((((t0.c2)GLOB('2078994976'))))), (((t0.c0)%(t1.c0)) IN ()) FROM t1 GROUP BY (((CAST(t0.c2 AS INTEGER), (NOT (t1.c0)), TRIM(t1.c0, t0.c0)))=((((t0.c2) BETWEEN (NULL) AND ('0.5275745797874642')), (NOT (t1.c0)), ((NULL)IS NOT(NULL))))), ((((((t1.c0)OR(t1.c0)))AND(t0.c2))) IS TRUE), PRINTF(x'');SELECT DISTINCT ((((t1.c0)IS NOT(t1.c0)))OR(((t0.c1)+(t0.c2)))), t0.c2, TIME(TOTAL(t0.c1), (+ (t1.c0)), (+ (t0.c1)), ((t1.c0)!=(t1.c0)), SUM(t0.c0)) FROM t1;SELECT json_remove(((t0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)), t0.c1) FROM t0, t1 LIMIT 1147112878 OFFSET 519752578; -- 0ms;
SELECT ALL (((t0.c0)) NOT BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((LIKELY(t0.c2)))), (((NOT (t0.c1)))+((+ (t0.c0)))), LAG((((x'' IN (t0.c0)))+(x'')), (~ (((t0.c2)<(x'')))), ((t0.c2)-(t0.c0)) COLLATE NOCASE) OVER () FROM t1, t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT NULL FROM t1, t0; -- 0ms;
SELECT (~ (t0.c2)) COLLATE RTRIM FROM t1 GROUP BY CASE WHEN ((t1.c0)<=(NULL)) THEN (~ (t0.c0)) ELSE ((t0.c1) NOT BETWEEN (t0.c1) AND (t1.c0)) END;SELECT DISTINCT (((t0.c1 IN (t1.c0))) ISNULL) FROM t0, t1 WHERE ((('-1531295338') BETWEEN ((0.9494286274052209 IN (0x4de344c0))) AND ('*B' COLLATE NOCASE))) GROUP BY ((t1.c0)AND(x'dad5')) HAVING (NOT (CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)); -- 0ms;
SELECT ALL ((((t0.c1)OR(t0.c2)))AND(t0.c1)) COLLATE NOCASE FROM t1 WHERE ((((('-992628540' IN (2.10449618E9))))<(((('1019809606') NOT NULL)))));SELECT 'X' FROM t0 WHERE (((CASE WHEN 0X6474ac6 THEN '' END)||(x'ad4a'))) GROUP BY (((t1.c0))<((t0.c1))) COLLATE NOCASE LIMIT 380145505 OFFSET -1226204531;SELECT DISTINCT ((UNLIKELY(t1.c0)) NOT NULL) FROM t1 WHERE ((((0.8996640074716772) NOT BETWEEN (x'') AND (x'')) IN ())); -- 1ms;
SELECT DISTINCT (((t0.c1, (+ (t0.c0)), json_array_length(t0.c2, t0.c1), ((t0.c0)|(t0.c2)), COUNT(t0.c0)))>(((~ (t0.c2)), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)), ((t0.c1)!=(t0.c1)), (((t0.c0)) BETWEEN ((t1.c0)) AND ((t0.c2))), ((t0.c1)>=(0.46689994212222896))))) FROM t1, t0 WHERE (CASE ''  WHEN NULL THEN '1488661518' ELSE 'ED5^' END COLLATE BINARY) LIMIT -1405350899; -- 0ms;
SELECT ALL CASE (((t0.c2))>=((t1.c0)))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c1)+(t0.c2)) WHEN ((t0.c1) IS FALSE) THEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t1.c0)) WHEN x'' THEN ((t0.c0)>(t0.c2)) END FROM t0 WHERE (((((((((((0.13900476674033413)<=(59366008)))OR(997525518 COLLATE RTRIM)))OR((+ (x'd4ef')))))OR((+ ('()')))))OR(ABS(DISTINCT NULL))));SELECT ALL ((((CASE '-1908361507'  WHEN t0.c0 THEN t0.c2 END)AND(0.12746906472136132)))AND('1191192717')), CAST(((x'') NOTNULL) AS REAL), LIKELIHOOD(DISTINCT (NOT (t0.c0)), 0.7895148982692289) FROM t1, t0 WHERE ((NULL IN ()) COLLATE NOCASE) GROUP BY TRIM(DISTINCT ((t1.c0)GLOB(t0.c1)), ((t0.c2) NOT BETWEEN (t1.c0) AND (t0.c1))), t0.c2 COLLATE RTRIM, ABS(DISTINCT ((t0.c2) IS FALSE)) HAVING TRIM(CASE WHEN t0.c0 THEN t0.c2 ELSE t1.c0 END); -- 0ms;
SELECT DISTINCT HEX(t0.c0 COLLATE NOCASE), MIN(CASE WHEN ' ' THEN x'' ELSE t1.c0 END COLLATE RTRIM), NULL FROM t1;SELECT ((((t0.c0 COLLATE BINARY)AND(LTRIM(0Xffffffff9ed8b190))))AND(((t0.c0)=(t0.c0)))) FROM t1, t0 WHERE (x''); -- 1ms;
SELECT ALL CASE ((t0.c0) IS TRUE)  WHEN ((t1.c0) IS TRUE) THEN ((t1.c0)>>(t0.c0)) END, 0.16876121222608442, json_extract(((t0.c1)<=(t0.c1)), (t1.c0 IN (t1.c0)), ((t0.c2)<<(t1.c0)), (t1.c0 IN ())) FROM t1, t0; -- 0ms;
SELECT ALL CAST((((t1.c0))<=((t1.c0))) AS NUMERIC), ((CASE WHEN x'' THEN t1.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t1.c0 ELSE -857757760 END)IS(((t0.c2)/(t0.c2)))), RANK() OVER (), COUNT(t0.c2), (((t0.c0 IN (t0.c1)))*(CAST(t1.c0 AS REAL))) FROM t1;SELECT DISTINCT ((GROUP_CONCAT(t0.c0)) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (t0.c1 COLLATE BINARY)), ((((t0.c0)|(t0.c2))) BETWEEN (CASE 0.4207248066513001  WHEN NULL THEN '' WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END) AND (t1.c0)), (((((t1.c0))==((t0.c0))))%(((t0.c2) NOT BETWEEN ('-454782224') AND (t0.c2)))) FROM t1, t0 WHERE (json_array_length('a''翬sPC' COLLATE RTRIM));SELECT DISTINCT (('1466192412') IS FALSE) FROM t1, t0 WHERE ((((((x'0d9d')) BETWEEN ((x'')) AND ((NULL)))) NOTNULL)); -- 0ms;
SELECT DISTINCT '' FROM t1, t0 ORDER BY CASE WHEN ((t0.c1)>>(t0.c0)) THEN (((t0.c2))>((t1.c0))) ELSE ((t0.c0)+(t0.c0)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT (TOTAL(t0.c0) IN (MAX(t0.c2))) FROM t1;SELECT DISTINCT (((CAST(5.379975464341266E18 AS TEXT)))!=(((t0.c2 IN ())))) FROM t1, t0 WHERE (((((1.080022183E9) NOT BETWEEN (0.3106388553060623) AND ('CT899J(pp'))) NOT BETWEEN (((0xffffffffbca34db3) NOT NULL)) AND (CHANGES()))) ORDER BY ((t0.c2 COLLATE NOCASE) IS TRUE)  NULLS LAST; -- 0ms;
SELECT ALL (((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) IN (IFNULL(DISTINCT t0.c0, t0.c0))) FROM t0 GROUP BY (((t1.c0) NOTNULL) IN ()); -- 0ms;
SELECT DISTINCT (((t0.c1 IN (t0.c1))) ISNULL) FROM t0, t1 WHERE (((((0.46193588813580044)-(1.54041384E9)))!=(0.5162944386656279))); -- 0ms;
SELECT CASE WHEN DATETIME(t0.c0, t0.c2, t1.c0) THEN t0.c2 COLLATE BINARY WHEN (((t0.c2, t1.c0, t0.c2))!=((t1.c0, t0.c0, t0.c0))) THEN GROUP_CONCAT(t0.c0) WHEN ((t0.c1) IS FALSE) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c1)) ELSE ((t0.c0) IS FALSE) END, x'3bef', ((CASE t1.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)/(((t0.c2)*(t0.c0)))) FROM t0;SELECT ALL UPPER(DISTINCT t0.c0) FROM t0, t1 LIMIT 726924742 OFFSET -1596865493; -- 0ms;
SELECT DISTINCT NTH_VALUE((+ ((((t1.c0, t1.c0, t1.c0))!=((t1.c0, -450224325, NULL))))), CASE ((t1.c0) IS TRUE)  WHEN (('S!ImJ/')<>(t1.c0)) THEN (t1.c0 IN ()) ELSE ((((((((t1.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)) END) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t1; -- 0ms;
SELECT t1.c0, t1.c0, (- (t0.c1 COLLATE BINARY)), HEX(CASE WHEN t1.c0 THEN t0.c2 END), (((((t0.c0)AND(t0.c1)))AND(t0.c0)) IN ()) FROM t1 WHERE ((((((NULL, '{2 }', NULL))>((x'', NULL, x'')))) IS TRUE));SELECT ALL (((highlight(t1.c0, '1597646666', t0.c2, t0.c0)))>(((NOT (t0.c2))))), TOTAL(((t1.c0)*(t0.c0))), UNLIKELY(TRIM(DISTINCT x'')) FROM t1, t0;SELECT DISTINCT (+ (SUM(t0.c2))) FROM t1;SELECT DISTINCT CASE WHEN rtreenode(t0.c1, t0.c0) THEN ((t1.c0)AND(t0.c2)) WHEN ((t0.c2) IS FALSE) THEN ((t0.c1)<>(t1.c0)) WHEN CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN MAX(t1.c0) END, t0.c2, (('689381532')<=((((NULL, t0.c1, t0.c1)) NOT BETWEEN ((t1.c0, t0.c0, t1.c0)) AND ((t0.c2, t1.c0, t0.c0))))) FROM t1 GROUP BY ((((CAST(t0.c1 AS NUMERIC))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))))OR(NULL)), (((+ (t1.c0))) ISNULL), (((t0.c1, t1.c0, t1.c0)) BETWEEN ((CASE WHEN t1.c0 THEN 0.0922427516381088 ELSE t0.c2 END, ((NULL)>=(t1.c0)), ((t1.c0) NOT NULL))) AND ((t0.c2 COLLATE BINARY, (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), ((t0.c1)OR('-13419250')))));SELECT DISTINCT MIN(((((t1.c0)AND(t1.c0)))OR(t1.c0))) FROM t1 WHERE ((('1820768287')LIKE('0.1103559270663641')) COLLATE NOCASE COLLATE BINARY); -- 1ms;
SELECT DISTINCT ((((t0.c0) NOT NULL))OR(NULL)) FROM t1;SELECT DISTINCT json_array_length(((t0.c0)LIKE(t0.c1)), t0.c2 COLLATE BINARY), CASE ((t0.c2) BETWEEN (t0.c1) AND (t1.c0))  WHEN t0.c2 COLLATE NOCASE THEN ((((t0.c2)OR(t0.c1)))AND(t0.c2)) END, ((t1.c0 COLLATE BINARY) IS TRUE) FROM t1, t0; -- 0ms;
SELECT DISTINCT NULL, t0.c1, t0.c1 FROM t0, t1; -- 0ms;
SELECT DISTINCT AVG(((0.7145340561402489) NOT BETWEEN (x'') AND (t0.c0))) OVER (), DATETIME(CAST(NULL AS BLOB), CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END, ((t0.c0) BETWEEN (t1.c0) AND (t1.c0)), ((t0.c0) ISNULL), RTRIM(t0.c1)), SUM(((t0.c2) NOT BETWEEN (t1.c0) AND (t0.c2))) FROM t0, t1 WHERE (((NULLIF(DISTINCT NULL, '-13419250')) NOT BETWEEN (CASE WHEN 'a' THEN 0.48178383444415496 WHEN '1503283001' THEN x'' WHEN 0.5057402950934452 THEN 0xffffffff8f2eb3b4 WHEN x'5b38' THEN 0xffffffffffc6d5b7 WHEN 0.9710837693945954 THEN ' 7' ELSE x'' END) AND (CAST(0.085000408190533 AS TEXT)))); -- 0ms;
SELECT TOTAL(GROUP_CONCAT((((t1.c0))>((0Xffffffffdf42c5f9))))) FROM t1;SELECT ALL CASE WHEN (((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c1))) THEN (- (t1.c0)) ELSE CASE t0.c1  WHEN t0.c1 THEN t0.c2 END END, (((((-9223372036854775808)==(x''))))>=((((t0.c0)<=(t0.c2))))), CASE WHEN MAX(t0.c2) THEN t0.c2 COLLATE NOCASE WHEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE x'' END THEN ((t0.c0)|(t0.c2)) WHEN ((t0.c0)<<(t0.c1)) THEN ((t0.c1)+(t0.c2)) END FROM t1, t0; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END COLLATE BINARY) OVER ( ORDER BY ((STRFTIME(t1.c0, x'', '-436795201'))&(CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t1.c0 WHEN t1.c0 THEN t0.c0 END)) DESC, (((t0.c1)AND(t0.c0)) IN ())  NULLS LAST, t0.c0  NULLS FIRST) FROM t0 LIMIT 783051006 OFFSET -255313252;SELECT GROUP_CONCAT(((t1.c0)+(t1.c0)) COLLATE RTRIM) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t0, t1 WHERE (CAST((('F')<>(NULL)) AS BLOB)); -- 0ms;
SELECT ALL '260561708' FROM t1, t0 WHERE (((((((((((((NULL)OR(0.4641672900299162)))OR('-1664032466')))AND(0.9641871704396979)))OR(x'385900d6')))OR((~ (x'')))))OR(CASE 0xffffffff8830d4c8  WHEN 0.9520179387733572 THEN 1.7976931348623157E308 ELSE -298621377 END))); -- 0ms;
SELECT ALL ((((t0.c1) BETWEEN (t1.c0) AND (t0.c2))) IS TRUE) FROM t0 WHERE (CAST(((('()')) NOT BETWEEN (('')) AND (('1219602348'))) AS BLOB)) LIMIT 1136396136;SELECT GROUP_CONCAT(LIKELY(t0.c1)) FROM t1;SELECT DISTINCT TRIM(t0.c1) FROM t0, t1 WHERE (CAST(SQLITE_COMPILEOPTION_USED('1539130687') AS TEXT)); -- 0ms;
SELECT DISTINCT AVG(TOTAL(CASE t0.c1  WHEN t1.c0 THEN t0.c1 ELSE 0.0466555218999698 END)), TRIM(((t0.c1)>(t0.c1))), ((NULL) IS FALSE) COLLATE NOCASE FROM t1, t0 GROUP BY (((0xffffffff80913a25 IN (t0.c1))) BETWEEN (t1.c0) AND (t0.c0 COLLATE BINARY)), (((t0.c1) BETWEEN (t0.c0) AND (t0.c2)) IN ()), (((t0.c2)<>(t0.c2)) IN ());SELECT (~ (t0.c0)) FROM t0 INDEXED BY i0, t1;SELECT DISTINCT t1.c0, t0.c2, CASE ((((NULL)OR(t0.c1)))AND(t0.c0))  WHEN ((t0.c1) NOTNULL) THEN TYPEOF(t0.c1) WHEN t0.c0 COLLATE RTRIM THEN '则[TB]p-' WHEN CASE t0.c1  WHEN t0.c0 THEN t0.c1 ELSE t0.c0 END THEN (t0.c0 IN ()) WHEN ((((t0.c0)OR(t0.c1)))AND(t0.c2)) THEN ((t0.c2)-(t0.c1)) WHEN HEX(t0.c1) THEN (- (t0.c1)) ELSE json_insert(t0.c1, t0.c2, ')䱒G쪰RiB', t0.c0, t0.c0) END FROM t1, t0 WHERE (((0.10709256227722619) NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT ALL (t0.c2 COLLATE BINARY IN ()) FROM t0 ORDER BY ((t0.c2 IN ()) IN ()); -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((t1.c0)) AND ((t0.c2))) COLLATE RTRIM, (((((((((NULL)OR(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t1.c0)) IN ()), (((0x57bb30af)AND(t1.c0)) IN (x'', (('-13419250')-(0.537149347900346)))) FROM t1, t0; -- 0ms;
SELECT DISTINCT CAST(t1.c0 AS BLOB), COUNT(*) OVER ( GROUPS  CURRENT ROW), (+ ((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c0))))), (((- (t0.c0))) IS FALSE), TRIM(DISTINCT (t0.c2 IN (t0.c0, t0.c0)), 0X708cc2ce) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (INSTR(t0.c1, t0.c0)) AND (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END)) FROM t0 WHERE (((((0.17062058927116952) NOT BETWEEN (x'') AND (x'e96e'))) BETWEEN ((((x''))>(('1592045002')))) AND (((((-13419250)AND(-1e500)))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((((((t0.c1)/(t0.c2)))AND(t0.c1)))AND(((((t1.c0)AND(t0.c1)))AND(t0.c0)))), (('-605688621')GLOB(((t0.c0)&(t0.c0)))), t1.c0 FROM t0, t1; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(NULL)) NOTNULL) FROM t1 WHERE ((((((((((+ ('>v''')))AND('1859882485' COLLATE RTRIM)))AND(CAST('-605688621' AS TEXT))))OR(TRIM(0.8847501493858273))))OR((- (NULL))))); -- 0ms;
SELECT DISTINCT NULL, CAST(((x'') NOT BETWEEN (t1.c0) AND (0.7457318083142245)) AS BLOB), COUNT(((((((((t1.c0)AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))OR(t0.c0)) COLLATE RTRIM) OVER ( ORDER BY CASE t0.c2  WHEN t0.c0 THEN t1.c0 END COLLATE RTRIM DESC) FROM t0;SELECT DISTINCT ((CAST(t0.c1 AS NUMERIC)) IS FALSE) FROM t0 WHERE (((CAST('j}m3-ixnn' AS NUMERIC)) NOT BETWEEN (x'2eb8' COLLATE RTRIM) AND (CAST(-5.9225957E8 AS BLOB)))) GROUP BY ((((t0.c2)LIKE(t0.c2)))||(t0.c2 COLLATE BINARY)), ((t0.c2) NOTNULL), (((+ (NULL))) NOT BETWEEN (((t1.c0)*(t0.c0))) AND (CAST(t0.c2 AS TEXT))), t0.c1, (+ (((t0.c0) NOT NULL))) HAVING (((t0.c0) NOT NULL) IN ());SELECT ALL LIKELIHOOD(DISTINCT AVG(t0.c2), 0.7432845752829799) FROM t1;SELECT DISTINCT ((((((t0.c1) NOT BETWEEN (t0.c2) AND (t1.c0)))OR(((t0.c0) IS TRUE))))OR(((((((((((((t0.c1)OR(t0.c1)))AND('-1839155351')))OR(t1.c0)))AND(t0.c1)))AND(t0.c0)))OR(t1.c0)))) FROM t1;SELECT ALL UPPER(CAST(t0.c0 AS TEXT)), CASE WHEN ((t0.c2)GLOB(t0.c1)) THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) WHEN ((-1664032466)>>(t0.c2)) THEN NULL WHEN t0.c2 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c0 END END, TOTAL(MAX(t0.c2)) COLLATE BINARY, (NOT (((t0.c0) NOT NULL))), (~ (t1.c0)) COLLATE BINARY COLLATE BINARY FROM t1 GROUP BY 'Ba' LIMIT 2103568814;SELECT ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) IS FALSE), ((((t0.c1)>(t0.c2)))<>(((x'')GLOB(t0.c0)))), NULL FROM t1 WHERE ((~ ((((('<zJthj)')AND(NULL)))AND(x'')))));SELECT DISTINCT json_array_length((t0.c2 IN ())) FROM t1 WHERE ('{oy') GROUP BY (NOT (((t1.c0)%(t0.c2)))), 0.4215646861902205, ((t0.c2)IS NOT((~ (t1.c0))));SELECT DISTINCT ((((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END)OR(((((t0.c0)OR(t0.c1)))AND(t0.c2)))))AND(((t1.c0)IS NOT(t0.c1)))) FROM t1, t0 WHERE (CAST(CAST(NULL AS BLOB) AS TEXT)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t1 WHERE ('-1423647151'); -- 1ms;
SELECT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))>((t0.c0 IN ()))) FROM t1;SELECT ((('0.8996640074716772')) BETWEEN ((COUNT(t0.c0))) AND ((((t0.c0)LIKE(t0.c2))))) FROM t0, t1 WHERE (NULLIF(DISTINCT (('0.9858715113947109')>=(x'')), CASE x''  WHEN '' THEN NULL END)); -- 0ms;
SELECT DISTINCT TRIM(((t0.c2)|(t0.c2)), ((t0.c1)-(t1.c0))) FROM t0;SELECT DISTINCT CASE GROUP_CONCAT(t0.c1)  WHEN TOTAL(t0.c0) THEN 'f)' WHEN (~ (t1.c0)) THEN COUNT(*) WHEN ((t1.c0)<=(t0.c2)) THEN ((t0.c0)LIKE(t0.c1)) ELSE ((t0.c2)OR(t0.c0)) END FROM t0, t1; -- 0ms;
SELECT DISTINCT LAST_VALUE(((('1349731697' IN ()))LIKE((NOT (t1.c0))))) OVER () FROM t1 ORDER BY CAST(((t0.c0)IS NOT(t0.c1)) AS BLOB) ASC, ((LTRIM(t0.c0))||(((t1.c0) NOT NULL))) ASC;SELECT DISTINCT '' FROM t1, t0 LIMIT -1405350899; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c1 AS BLOB)  WHEN ((((t0.c1)AND(t0.c0)))AND(t0.c0)) THEN (+ (t0.c0)) WHEN (t0.c0 IN (t0.c1, t0.c0)) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0)&(t0.c0)) END FROM t1;SELECT DISTINCT COALESCE(DISTINCT ((t0.c0)<=(t0.c0)), TYPEOF(t0.c2)) FROM t1, t0; -- 1ms;
SELECT DISTINCT 0.2254324613739429 FROM t1 WHERE (((((((((((x'')>=(x'')))AND(LIKELY(x''))))OR(CAST(NULL AS BLOB))))AND(CAST('1889501052' AS INTEGER))))OR(((0.5845767829757671)>('1635431807'))))); -- 0ms;
SELECT ALL ((((t1.c0)AND(highlight(t0.c2, t0.c1, t0.c1, t0.c0))))AND(((t0.c2) NOT NULL))) FROM t1 WHERE (((((((((CASE NULL  WHEN x'' THEN 0X36843ed7 ELSE 0.9300165110302413 END)AND(((((392390074)AND(NULL)))AND(x'')))))OR(NULL COLLATE RTRIM)))AND(CASE '튱jD'  WHEN x'' THEN NULL END)))AND('-1251471822' COLLATE NOCASE)));SELECT t0.c1, (((('')AND(((t0.c1) BETWEEN (t0.c2) AND (t1.c0)))))AND(((('171607592')) BETWEEN ((t0.c0)) AND ((t0.c1))))), LAST_VALUE(((t1.c0 COLLATE NOCASE)>(((t1.c0)+(t1.c0))))) OVER () FROM t1;SELECT ALL (((-33692819)) BETWEEN (((((t1.c0))>=((t0.c2))))) AND ((t0.c0))) FROM t0 WHERE (((((NULL)>=(1.54041384E9)))<>(0X2eac68fe COLLATE RTRIM)));SELECT CASE (((t0.c2, t0.c2, t0.c2)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c1, t0.c1, t0.c1)))  WHEN t0.c0 COLLATE NOCASE THEN CAST(t0.c1 AS TEXT) WHEN ((t0.c0)||(t0.c2)) THEN ((t0.c1)IS NOT(t0.c0)) WHEN t0.c1 COLLATE RTRIM THEN ((((t0.c1)AND(t1.c0)))AND(NULL)) WHEN x'e1ee' THEN t0.c2 COLLATE BINARY WHEN t1.c0 THEN x'' ELSE 1508203211 END FROM t1, t0 WHERE (CAST(0.061911485086925566 AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT ALL ABS(DISTINCT t0.c0), CAST(((t1.c0) IS FALSE) AS BLOB), t0.c0 FROM t0, t1; -- 0ms;
SELECT ALL ((NOT (t0.c1)) IN (((t0.c1)LIKE(t0.c1)), (- (t0.c1)))), MAX(((((((((t0.c1)AND(t0.c1)))AND(t1.c0)))AND(t1.c0)))AND(t0.c2))), AVG(((((t0.c1)AND(t1.c0)))AND(t0.c1))), (((((t0.c2, t0.c2, t1.c0))==((t1.c0, t1.c0, t0.c0)))) NOT NULL), (((t0.c2)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((((t0.c2) ISNULL)))), MAX((t0.c0 IN (t1.c0))), CASE WHEN (NOT (t0.c0)) THEN (t1.c0 IN ()) END FROM t1, t0 WHERE (((((('') BETWEEN ('') AND ('EZB_냄gW'))))<=((((0.3837283216714644) IS TRUE))))) GROUP BY (- (t0.c2)); -- 0ms;
SELECT DISTINCT ((((t0.c0 COLLATE BINARY)OR((((t0.c2)) BETWEEN ((t1.c0)) AND ((t0.c1))))))OR((+ (t0.c1)))), NULLIF(DISTINCT x'', t0.c0), ((t0.c2 COLLATE NOCASE)<=(LIKE(t0.c0, t0.c0, '9'))) FROM t0 WHERE (((-992628540 IN ()) IN ()));SELECT DISTINCT json_insert(((t0.c0) IS FALSE), (NOT (t1.c0)), (((t1.c0, t1.c0, t0.c1))>=((t0.c0, t0.c1, t0.c2)))) FROM t0 WHERE (CASE WHEN (x'' IN ()) THEN '1101694879' COLLATE RTRIM END);SELECT DISTINCT (~ (json_quote(t1.c0))) FROM t1 WHERE ('-372141052'); -- 1ms;
SELECT DISTINCT (((~ (t0.c1))) BETWEEN (CASE WHEN t0.c0 THEN t0.c2 END) AND (t0.c2 COLLATE NOCASE)) FROM t1;SELECT ALL MAX((~ (t0.c2))) FROM t1, t0 WHERE ((- (((((((((NULL)AND('')))AND('-647315424')))AND(0Xffffffff81935e53)))OR(''))))); -- 0ms;
SELECT DISTINCT (- (t0.c1 COLLATE RTRIM)), ((((((((0Xffffffffcce07b2e)AND((t1.c0 IN (t0.c0, 0xfffffffff3ca2282)))))OR(((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))OR((t0.c0 IN ()))))AND(((t0.c0) BETWEEN (NULL) AND (t1.c0)))), '-1520384290' FROM t0 WHERE (((CASE WHEN 2139590095 THEN 'aS' END) NOT BETWEEN (json_extract(NULL, NULL)) AND (CASE x''  WHEN 2.87239725E8 THEN 0.9207756678830146 ELSE x'' END)));SELECT DISTINCT ((((t0.c2)OR(t0.c1))) NOT BETWEEN ((~ (t1.c0))) AND ((t0.c1 IN ()))) FROM t1, t0 WHERE (CAST(x'' AS INTEGER) COLLATE BINARY); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY t1.c0) FROM t0, t1 WHERE (((((((((CAST('zV裆v' AS TEXT))OR(TRIM(DISTINCT '-709488358', 'Z-7'))))OR(CAST('-1207988659' AS BLOB))))OR(((x'')OR(x'2143')))))AND(CASE WHEN '?+\nꙔGP(' THEN NULL WHEN 0.3155921510585695 THEN x'' WHEN 0Xffffffffc8b6774d THEN 0.2997504236435251 ELSE '' END))); -- 0ms;
SELECT ((((((t0.c2)OR(t0.c1)))OR(t0.c1))) NOTNULL) FROM t1, t0 ORDER BY CASE WHEN CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END THEN t1.c0 ELSE CASE t0.c1  WHEN NULL THEN t1.c0 ELSE t0.c1 END END ASC, ((((t1.c0)OR(t0.c1)))<>((((t1.c0))>((t0.c0))))) ASC  NULLS FIRST, ((CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END) BETWEEN (ABS(DISTINCT t0.c0)) AND (x'2dd4')) ASC; -- 0ms;
SELECT ALL 0.9649067003764998, (NOT (((((((((t0.c2)AND(t0.c0)))AND(t0.c1)))OR(t1.c0)))AND(t0.c1)))), ((IFNULL(t0.c0, t0.c1))==(AVG(t1.c0))) FROM t0 WHERE (((((((((((0.4448119947139363)AND(0Xffffffffd7d4edbd)))OR(NULL)))OR(0x368b31e)))AND(0.6223689424680677))) NOT BETWEEN (((((NULL)OR(1624329766)))OR(x'3ccb'))) AND ((((NULL)) BETWEEN ((0.05086968223957511)) AND ((''))))));SELECT DISTINCT x'ffc9' FROM t0, t1; -- 0ms;
SELECT DISTINCT (+ ((+ (t0.c1)))) FROM t0; -- 0ms;
SELECT ((AVG(t0.c2)) ISNULL), (((t0.c2)|(t0.c2)) IN ()), 0.8786591185845041 FROM t0; -- 0ms;
SELECT DISTINCT ((- (t0.c0)) IN ()) FROM t1 WHERE (CAST(((((((((x'')AND(NULL)))AND(0xffffffff9fa1c690)))OR('2004796942')))AND(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((t1.c0)<=(((((t1.c0)OR(t0.c2)))AND(t1.c0)))) FROM t1, t0; -- 0ms;
SELECT ALL (('')/(((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c1)))) FROM t1, t0 WHERE ((- (((NULL)||('59366008'))))); -- 0ms;
SELECT ((t0.c2)<>(MAX(t0.c1))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t1, t0 WHERE (((((((((((((('')OR('')))OR('-1536828328')))OR(NULL)))OR('-2115996473')))OR('9B')))AND(NULL)) IN ())) ORDER BY ((((t0.c2 COLLATE BINARY)OR(CAST(x'' AS REAL))))AND((((t0.c2)) BETWEEN ((t1.c0)) AND ((x''))))) DESC  NULLS FIRST, ((((t0.c0) NOTNULL))IS NOT((t0.c2 IN (t1.c0, x''))))  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c1 FROM t1, t0; -- 0ms;
SELECT ALL (((t0.c0 IN (t0.c1))) NOT BETWEEN ((+ (t1.c0))) AND (((((t1.c0)OR(t0.c1)))OR(t0.c2)))) FROM t1, t0 WHERE ((((+ (x'')))>(LIKELY(x'')))); -- 0ms;
SELECT (('') IS TRUE), ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN '' WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END)=(((t0.c1) NOT BETWEEN (t0.c2) AND (t1.c0)))), (((t0.c1)AND(t1.c0)) IN ()) FROM t0;SELECT '+2n◪Q', (+ (CASE WHEN t1.c0 THEN t1.c0 END)), ((t1.c0 COLLATE BINARY) NOT NULL) FROM t0;SELECT ((t0.c0)%(t0.c0)) COLLATE NOCASE FROM t0, t1; -- 1ms;
SELECT DISTINCT ((((t0.c0) IS FALSE))>=(CASE t0.c2  WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN '-387988483' WHEN t0.c0 THEN t0.c0 END)) FROM t1 LIMIT 1797259442 OFFSET 1640837529;SELECT TOTAL((((t0.c2))<>((t0.c0)))) OVER ( PARTITION BY (((t1.c0)) NOT BETWEEN ((((t0.c1)IS NOT(t0.c0)))) AND ((LOWER(DISTINCT t1.c0)))), CAST(((t0.c1) NOT NULL) AS NUMERIC)) FROM t0, t1; -- 0ms;
SELECT DISTINCT TOTAL(json_array_length(t0.c0, t1.c0)) OVER (), t1.c0, COUNT(((t0.c1) ISNULL)) OVER ( PARTITION BY (~ (((t0.c1)AND(t1.c0)))), (((((t0.c1)AND(x'')))AND(NULL)) IN (((t0.c2) BETWEEN (t0.c1) AND (t1.c0))))) FROM t0, t1 WHERE (((((x'') NOT NULL))<(NULL COLLATE BINARY))) GROUP BY ((IFNULL(t1.c0, t0.c2)) BETWEEN (((((((((t0.c0)OR(t0.c2)))AND(t0.c0)))OR(t0.c0)))OR(t0.c2))) AND (((t0.c1) BETWEEN (t1.c0) AND (t0.c1)))) ORDER BY (- (t1.c0)) COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT ALL 0.222990022758086, (t0.c1 COLLATE NOCASE IN ()), t0.c0, '', CUME_DIST() OVER (), CAST(((t0.c2) IS TRUE) AS REAL), 0.6589733925835789 FROM t1, t0; -- 0ms;
SELECT COUNT(*) OVER () FROM t0, t1 WHERE ((COALESCE(NULL, NULL, '!x*c', '1889501052', 0.16974181673873312, '') IN ())); -- 1ms;
SELECT DISTINCT ((UNLIKELY('-1145967394'))!=(LIKELY(DISTINCT t1.c0))), DENSE_RANK() OVER (), COUNT(((t1.c0)&(NULL))) OVER () FROM t1, t0 WHERE (((((('S	əXR'))>(('-2098114694'))))>(NULL))) LIMIT -525406247; -- 0ms;
SELECT ALL ((((t1.c0)AND(t1.c0)))OR((+ (t1.c0)))) FROM t0;SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT x'' FROM t0; -- 0ms;
SELECT ALL (((t0.c1 IN ()))IS NOT(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))) FROM t1 GROUP BY t0.c1;SELECT DISTINCT (('' COLLATE RTRIM)GLOB(CASE WHEN t0.c1 THEN t0.c1 WHEN NULL THEN t0.c2 WHEN x'2b2c' THEN t0.c0 END)), CAST((~ (t0.c1)) AS BLOB), CAST((~ (t0.c0)) AS NUMERIC) FROM t0, t1; -- 0ms;
SELECT DISTINCT TIME(((((t0.c1)AND(t0.c1)))OR(t1.c0)), ((t0.c1) NOT BETWEEN (t1.c0) AND (t0.c1)), CAST(t0.c0 AS NUMERIC)), CASE ((0.10661717600489085)LIKE(t0.c0))  WHEN ((t1.c0)<>(t1.c0)) THEN TOTAL(t0.c2) END, ((((((0.5140071663512157) IS TRUE))AND((t1.c0 IN ()))))AND(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))) FROM t0, t1 WHERE (0.9349833862839528); -- 0ms;
SELECT t0.c2, (((t0.c1)) BETWEEN ((LOWER(t0.c2))) AND ((((t0.c2) ISNULL)))), ((~ (-1.250640793E9)) IN ()) FROM t1, t0; -- 0ms;
SELECT ALL UPPER(((t0.c1)>=(t1.c0))) FROM t0 WHERE (((((((('1540413840'))=((x'cef1'))))AND((('')-('V')))))AND((((('-85591284')AND(x'0c7e')))OR('<N0|]k^')))));SELECT DISTINCT (~ (((t0.c0)-(t0.c0)))), COUNT((t1.c0 IN ())) OVER (), ((CASE t0.c1  WHEN t0.c1 THEN t1.c0 WHEN 0.11439937271079126 THEN t0.c1 WHEN 0.7105457331039858 THEN t0.c0 END) BETWEEN (MAX(t0.c1)) AND ((((t0.c2))<((t0.c2))))) FROM t1, t0 WHERE (HEX(((('')) BETWEEN ((x'')) AND ((NULL))))); -- 0ms;
SELECT ALL ((t1.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c2) ISNULL)) AND (((t0.c0) BETWEEN (t1.c0) AND (t0.c0)))) FROM t1, t0 WHERE ((((510072561)) BETWEEN ((((0.6867384694551872)+(0.30553556384690317)))) AND (((((0.23178422547813204)) BETWEEN ((0.3099495091115315)) AND (('851700765'))))))); -- 0ms;
SELECT DISTINCT ((((t1.c0)OR(NULL)))AND(t0.c0)) COLLATE NOCASE, (((('1183460491') NOTNULL))LIKE(SUM(t0.c0))), COUNT((NOT (t0.c0))) FROM t1, t0 ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)))AND(((((t0.c1)AND(t0.c0)))OR('')))))OR((((0.3905801129409415, t0.c2, t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c2, t0.c1, t0.c1, t1.c0, t1.c0)) AND ((t0.c2, t1.c0, t0.c0, t0.c1, t0.c0))))) ASC LIMIT -1980780482 OFFSET -499405315; -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c0))>(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)) FROM t1 LIMIT 96438383;SELECT ROW_NUMBER() OVER ( ROWS BETWEEN (((t1.c0 IN ())) IS FALSE) FOLLOWING AND ((-5.62885838E8 COLLATE RTRIM) BETWEEN (((t0.c1) ISNULL)) AND (t0.c0)) FOLLOWING EXCLUDE TIES) FROM t1, t0 WHERE ((((0x1dd83e96))!=(('-779730952'))) COLLATE NOCASE) GROUP BY (NOT (CASE WHEN t0.c0 THEN x'813a' WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END)) HAVING ((TYPEOF(t0.c0))||(((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((((t0.c1) NOTNULL)) IS TRUE), ((((((((CASE WHEN t1.c0 THEN t0.c0 ELSE '' END)AND(CAST(x'' AS INTEGER))))OR(((((t0.c0)OR(t1.c0)))AND(t0.c2)))))AND(t0.c1)))OR(CAST(t1.c0 AS TEXT))) FROM t0, t1; -- 0ms;
SELECT ((NULL)%(AVG(t0.c1))) FROM t1 WHERE (((NULL) ISNULL));SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE ((+ (json_insert(NULL, NULL, '1488661518', 0.6305489503700216, NULL)))); -- 0ms;
SELECT DISTINCT (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((t1.c0)))) NOT BETWEEN (t1.c0) AND (((t0.c0)>=(t0.c1)))) FROM t1, t0; -- 0ms;
SELECT json_remove(((((t0.c0)OR(t0.c1)))OR(t0.c1)), CAST(t0.c0 AS BLOB)) FROM t1, t0 LIMIT 832463835; -- 1ms;
SELECT DISTINCT ((CAST(NULL AS INTEGER)) NOT BETWEEN (t0.c1) AND ((((t0.c1))<((t1.c0))))) FROM t0, t1; -- 0ms;
SELECT (((((t1.c0))<((t0.c1))))|(json(t0.c1))) FROM t1, t0 GROUP BY (((t0.c2)) BETWEEN ((((t1.c0)|(t0.c0)))) AND ((UNICODE(t0.c2)))), (NOT (CASE t0.c1  WHEN t0.c1 THEN t0.c2 ELSE NULL END)), (((- (x''))) IS TRUE), CAST(((0.9945198184058204)LIKE(t0.c2)) AS BLOB), CAST(((((t1.c0)AND(x'')))AND(t1.c0)) AS NUMERIC), CASE t0.c2  WHEN t0.c0 THEN '997525518' END COLLATE NOCASE, (ABS(t1.c0) IN ()); -- 0ms;
SELECT t1.c0 COLLATE BINARY FROM t0, t1 WHERE ((((('-802549924')IS NOT(x'')))&(((x'')<=(x''))))); -- 0ms;
SELECT ALL CASE WHEN CAST(t1.c0 AS REAL) THEN LIKE(t0.c0, t0.c2) END, SUM(CAST(t1.c0 AS INTEGER)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), (- ((t0.c0 IN ()))) FROM t0, t1 WHERE (CAST((('') NOT BETWEEN (NULL) AND (x'598b0d0d')) AS BLOB)) GROUP BY t0.c1 HAVING MIN(t0.c1); -- 0ms;
SELECT (((((t0.c2))>=((t1.c0)))) NOT NULL) FROM t0 WHERE ((((((((((((('m辎/\VjT&鲡')OR('')))OR('6adWl_KW')))OR(0.08449545744590214)))OR(0.539630173011126 COLLATE NOCASE)))AND('-1773473960' COLLATE BINARY)))AND(0x7f7bea16 COLLATE BINARY))) LIMIT 1829303954;SELECT (('')>=(NULL)) FROM t1 WHERE (((IFNULL(DISTINCT 0.8001005404575937, 0.9300165110302413))>>((NULL IN ())))); -- 0ms;
