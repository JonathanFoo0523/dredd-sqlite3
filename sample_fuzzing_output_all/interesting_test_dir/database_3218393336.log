-- Time: 2024/06/07 15:32:27
-- Database: database36
-- Database version: 3.40.0
-- seed value: 3218393336
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INTEGER ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c79; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA legacy_file_format = false; -- 1ms;
PRAGMA temp.journal_size_limit; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i96 ON t0(((((((((c79)OR((((c79)) NOT BETWEEN ((c79)) AND ((c79))))))OR(((c79)IS(c79)))))AND(((c79)GLOB(c79)))))OR(((x'') BETWEEN (c79) AND (c79)))) COLLATE NOCASE ASC); -- 0ms;
PRAGMA temp.threads = 3884149708091365389; -- 0ms;
DROP INDEX "i96"; -- 0ms;
INSERT OR IGNORE INTO t0(c79) VALUES (''); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i64 ON t0((NOT (0.8424963298740958 COLLATE RTRIM)) ASC); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c3) VALUES ('0.8424963298740958', 0.051640873777740515); -- 0ms;
ANALYZE temp; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3) VALUES (x'', '944338745'); -- 1ms;
UPDATE OR ABORT t0 SET c79=x'' WHERE (((t0.c79) ISNULL) IN ()); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
ANALYZE; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c79 TO c33; -- 1ms;
PRAGMA temp.busy_timeout; -- 0ms;
ANALYZE rt1; -- 1ms;
CREATE UNIQUE INDEX i26 ON t0(((c33 COLLATE RTRIM)<>((c33 IN ())))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (0x2a8447e2); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
ANALYZE main; -- 0ms;
CREATE UNIQUE INDEX i82 ON t0((((((c33)AND(c33)))AND(c33)) IN ())) WHERE ((((c33)OR(((c33)OR(c33)))))OR(x'3a1c' COLLATE RTRIM)); -- 0ms;
ANALYZE i64; -- 0ms;
UPDATE OR FAIL t0 SET c33=0.2945744850690285; -- 0ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1, c3) VALUES (0.051640873777740515, 0.051640873777740515, '-2125261148', x'7684'), (x'', 0.19133093610097573, x'', -2.125261148E9), ('Q(1Z', x'', x'', 0.19133093610097573); -- 0ms;
INSERT OR REPLACE INTO rt1(c3) VALUES (NULL), (0x79cc79a6), (NULL); -- 1ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c0, c2) VALUES ('-1274673495', 'T5', 0xffffffffec913b2b); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('-1714407952'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c2) VALUES (0.05460147216801636, '-1626738516'), (-36364654, 0.7063083526979089), (x'77a0', '-1626738516'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3) VALUES (0.6855767874529944, -3.26026453E8); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c2, c1, c0) VALUES (NULL, NULL, '-1714407952'); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 5ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 271854562);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA main.cell_size_check; -- 0ms;
DROP TABLE IF EXISTS rt1; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (928360657); -- 1ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.6855767874529944); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ALTER TABLE t0 ADD COLUMN c0 TEXT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 564538213); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
PRAGMA cache_spill = false; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((((((0xdef86aa)AND((((t0.c33, t0.c33, t0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c33)) AND ((vt0.c0, t0.c33, vt0.c0))))))AND(((t0.c33) BETWEEN (vt0.c0) AND (t0.c33)))))AND((~ (t0.c33)))))AND(((t0.c33) NOTNULL))), ((((t0.c33) BETWEEN (t0.c33) AND (t0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (COUNT(*))), ((CAST(vt0.c0 AS BLOB))&((vt0.c0 IN ()))), ((((((((((((((((((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c33)))AND(((0.8163610530071433) IS FALSE))))AND(((vt0.c0)*(t0.c0)))))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(t0.c33 AS INTEGER))))AND(((vt0.c0) IS TRUE))))OR(ROUND(t0.c0, 'Q(1Z'))))OR(((t0.c33) IS TRUE))))AND(((t0.c0) NOT BETWEEN (t0.c33) AND (t0.c33)))), SUM(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c33))) FROM t0, vt0 WHERE (((CASE NULL  WHEN NULL THEN '-1626738516' ELSE '928360657' END) BETWEEN (((0.4922693041557852)<=('-326026453'))) AND (UNLIKELY(DISTINCT NULL)))); -- 0ms;
SELECT ((LIKELIHOOD(t0.c0, 0.2754585128184879))>>((vt0.c0 IN ()))), CAST((~ (t0.c33)) AS TEXT), (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t0.c33) NOT BETWEEN (t0.c0) AND (t0.c33)))) FROM vt0, t0 WHERE ((((0.1498296152163734) NOTNULL) IN (((0.7015344445044472)OR('-1638854570'))))); -- 0ms;
SELECT DISTINCT CAST((t0.c33 IN (t0.c33)) AS INTEGER) FROM vt0, t0; -- 0ms;
SELECT DISTINCT UNLIKELY(((vt0.c0) NOT NULL)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((t0.c0)AND(vt0.c0)))||(t0.c0)) FROM t0, vt0 WHERE ((((((0.3358567812894738) BETWEEN (x'') AND (NULL))))<((JULIANDAY('-1574328579', NULL, '233801386'))))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0 INDEXED BY i82;SELECT ALL ((CAST(NULL AS BLOB)) BETWEEN ((t0.c33 IN ())) AND (TOTAL(vt0.c0))) FROM vt0, t0 WHERE (((json_insert(NULL, 0Xffffffff9f577865, 'x&'))&(((0.9992664540783517)>=(NULL))))); -- 0ms;
SELECT ALL CAST((((t0.c0, t0.c0, vt0.c0, t0.c0, t0.c33))>((t0.c0, t0.c33, vt0.c0, t0.c33, vt0.c0))) AS REAL) FROM vt0, t0 WHERE ((('928360657')+('271854562'))); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM)/(0.5622314098036112)), ((NULL)<>(SUM(t0.c0))), COUNT(*) FROM vt0 WHERE ((- ((x'c7d8' IN (''))))) ORDER BY CAST((((t0.c33)) NOT BETWEEN ((t0.c33)) AND ((t0.c0))) AS TEXT)  NULLS FIRST;SELECT ALL ((((((((vt0.c0)OR(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN vt0.c0 THEN t0.c33 END)))OR((((x''))==((t0.c0))))))OR((t0.c0 IN (t0.c0)))) FROM t0 WHERE ((((NULL)) NOT BETWEEN (((('仡1xkwW[') IS TRUE))) AND ((CAST(NULL AS BLOB))))) GROUP BY (t0.c0 IN (0.05429585078327803 COLLATE NOCASE));SELECT DISTINCT INSTR(0.378785763202813, ((t0.c33) BETWEEN (vt0.c0) AND (t0.c33))), LAST_VALUE(0.7930298940668871) OVER (), (- ((0Xffffffffcaf9ec8a IN (t0.c0)))) FROM t0, vt0 WHERE (''); -- 0ms;
SELECT CASE ((vt0.c0) BETWEEN ('') AND (vt0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c0)%(vt0.c0)) ELSE UNLIKELY(t0.c33) END FROM vt0;SELECT DISTINCT ((CAST(t0.c0 AS REAL))||(SUM(t0.c33))) FROM t0 WHERE ((CAST('\r\' AS BLOB) IN (((NULL)>>(0.1381737462171424))))); -- 0ms;
SELECT x'' FROM vt0 ORDER BY ((((t0.c0)>(t0.c33))) NOT BETWEEN (CASE WHEN t0.c33 THEN t0.c33 END) AND (((t0.c0)/(vt0.c0)))) DESC  NULLS LAST, vt0.c0, (((NOT (vt0.c0)))<(x'605f'))  NULLS FIRST;SELECT ALL HEX(MAX(t0.c0)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT SUM((((vt0.c0))>=((t0.c0)))) OVER () FROM vt0 GROUP BY -9223372036854775808;SELECT ALL TRIM(DISTINCT (t0.c33 IN ())), '-1306264401', ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)/(vt0.c0 COLLATE NOCASE)) FROM t0;SELECT ALL ((CAST(vt0.c0 AS INTEGER))-(((((((((t0.c33)AND(t0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(x'')))), IFNULL(((t0.c0)<(vt0.c0)), ((vt0.c0)|(t0.c0))), TOTAL((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, t0.c0)))) OVER () FROM vt0 WHERE (CASE ((0.7498307298820494)/('929584165'))  WHEN ((x'') NOTNULL) THEN (('Q(1Z')<<(0.3616990890168582)) END);SELECT DISTINCT LAG(UPPER(DISTINCT (- (t0.c0))), CAST(t0.c33 AS REAL), ((((t0.c33) NOT NULL)) IS TRUE)) OVER (), (((vt0.c0 COLLATE NOCASE))>((((t0.c33)<<(t0.c0))))), (((vt0.c0)) NOT BETWEEN ((t0.c33 COLLATE NOCASE)) AND ((((NULL) BETWEEN (t0.c0) AND (t0.c0))))) FROM t0 LIMIT -1860060878;SELECT ALL ((MAX(t0.c33))<((~ (t0.c0)))) FROM t0 LIMIT -1811009507 OFFSET -1677795726; -- 0ms;
SELECT ALL (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c33)))))), CASE ((x'843b') NOT BETWEEN (t0.c33) AND (t0.c33))  WHEN (vt0.c0 IN ()) THEN TRIM(DISTINCT vt0.c0) END, ((((vt0.c0)/(t0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (SQLITE_SOURCE_ID())), ((((t0.c0)OR(t0.c0)))IS((t0.c33 IN (vt0.c0)))), vt0.c0 FROM t0;SELECT DISTINCT SUM(((vt0.c0)>=(t0.c0))), (t0.c0 IN ()) COLLATE BINARY, MAX(((((t0.c0)OR(vt0.c0)))OR(t0.c0))) COLLATE BINARY FROM t0, vt0 GROUP BY ((CAST(vt0.c0 AS TEXT))==(((NULL) BETWEEN (vt0.c0) AND (t0.c0)))) HAVING CASE WHEN (t0.c0 IN ()) THEN HEX(DISTINCT t0.c33) END; -- 0ms;
SELECT ((TOTAL(vt0.c0))>=(GROUP_CONCAT(vt0.c0))), NULL, (((t0.c0) NOT NULL) IN (vt0.c0, (NULL IN (vt0.c0)))) FROM t0;SELECT DISTINCT t0.c33 FROM t0; -- 0ms;
SELECT CASE WHEN x'e7bb' THEN (((t0.c33, x'6d64', vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c0, 0.12813309437760034, t0.c0))) END FROM vt0 WHERE (((((('F}q%', NULL, NULL))<((0x53857671, NULL, x''))))OR(0.3136877418982511 COLLATE RTRIM))) GROUP BY UNLIKELY(DISTINCT t0.c33 COLLATE RTRIM), CASE WHEN ABS(DISTINCT t0.c0) THEN CASE vt0.c0  WHEN t0.c0 THEN t0.c33 WHEN 0.1498296152163734 THEN t0.c33 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END END, ((((((t0.c33)OR(vt0.c0)))OR(t0.c0))) NOT NULL);SELECT ALL CASE ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c33))  WHEN (((0X618902ab))==((t0.c0))) THEN NULL WHEN ((((t0.c33)OR('Y#R	忟')))AND(t0.c33)) THEN ((t0.c0) BETWEEN (t0.c33) AND (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) THEN t0.c0 END FROM t0, vt0 WHERE (LOWER((NOT (x'')))) LIMIT -1274673495 OFFSET 1300410049; -- 0ms;
SELECT (NOT ((t0.c33 IN ()))) FROM vt0, t0 WHERE ((~ (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) FROM vt0 WHERE (CASE WHEN ((x'')-(NULL)) THEN ((x'') NOT BETWEEN ('730439862') AND ('-191401024')) ELSE 0xffffffffec913b2b END);SELECT DISTINCT '929584165' FROM t0 GROUP BY (+ (((vt0.c0)GLOB(x'')))) HAVING t0.c33;SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT CASE (((0.36582136060558046, vt0.c0, t0.c33))<=((vt0.c0, vt0.c0, vt0.c0)))  WHEN ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c33)) THEN ((t0.c33)+(t0.c33)) END FROM vt0, t0; -- 0ms;
SELECT ALL COUNT((t0.c0 IN ())) OVER () FROM vt0 WHERE (0.28560106272804775); -- 1ms;
SELECT DISTINCT CUME_DIST() OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND ((((json_object(vt0.c0, t0.c0))AND(((((t0.c33)AND(vt0.c0)))AND(t0.c33)))))OR(t0.c33)) FOLLOWING) FROM t0 GROUP BY ((vt0.c0 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE RTRIM) AND (CAST(t0.c0 AS NUMERIC))) HAVING ((-1.574328579E9)>>(t0.c0 COLLATE RTRIM));SELECT DISTINCT CASE WHEN 1300410049 THEN ((t0.c0)>(t0.c0)) END FROM t0 WHERE (((((((NULL)%(x'7c1b')))AND((((x'')) BETWEEN ((0.794892135853398)) AND ((NULL))))))OR(((('-1273022437', x'', '1390548318')) BETWEEN (('2043443622', x'', NULL)) AND ((NULL, NULL, x'')))))); -- 0ms;
SELECT ALL (((('pf+LB')AND((~ (t0.c0)))))AND(t0.c33)) FROM vt0, t0; -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (IFNULL(DISTINCT t0.c33, t0.c0)) AND (((t0.c33)OR(t0.c33)))) FROM vt0;SELECT DISTINCT ((((((((((t0.c0)/(t0.c33)))OR((~ (vt0.c0)))))AND((vt0.c0 IN (t0.c33, vt0.c0)))))AND(CASE WHEN vt0.c0 THEN t0.c33 END)))AND('623708640')) FROM t0, vt0 WHERE (((('', NULL, NULL)) BETWEEN ((((x'7798')|(NULL)), (NULL IN ()), ('271854562' IN ()))) AND (((((x''))<=((NULL))), (('-1965202612') BETWEEN (0xffffffffda529902) AND ('233801386')), ((x'') IS FALSE))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0)) NOTNULL), x'', CASE NULL  WHEN (NOT ('0')) THEN 0.03255100951127099 ELSE ((t0.c0)|(9.44338745E8)) END FROM t0 WHERE (CAST('0.12813309437760034' AS INTEGER));SELECT ((UPPER(vt0.c0))-(TOTAL(t0.c0))) FROM vt0 INDEXED BY i82, t0 WHERE (((CASE WHEN 1401255537 THEN x'' WHEN NULL THEN '\r\' WHEN 'au^&' THEN x'' END)<<(CASE 0.378785763202813  WHEN NULL THEN 0Xffffffff9121b932 END)));SELECT ALL FIRST_VALUE((((t0.c0)) NOT BETWEEN (('-2052545643')) AND ((CASE t0.c33  WHEN t0.c33 THEN t0.c33 END)))) OVER () FROM vt0, t0 WHERE ((((NULL)) BETWEEN ((((NULL)IS(x'')))) AND ((((('-1743581949')) BETWEEN ((0.8139360546396364)) AND (('LM]^j1'))))))); -- 0ms;
SELECT ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((NOT (NULL)))))OR(CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE ((((((NULL, NULL, 0.28188800798847424, '-632121086', 'AQ', 0.39283102414340487, 0.4217620987189341)) NOT BETWEEN (('1300410049', NULL, 0.8671378668202782, 0.9932875021842998, x'', NULL, NULL)) AND (('', NULL, '-1961980863', 0.2701754096694712, 0.28560106272804775, 0Xffffffffd214ae75, NULL))))LIKE(((x'e6eb') BETWEEN ('Is کẒM') AND ('-1791731157')))));SELECT ((((COUNT(*))AND(t0.c0 COLLATE RTRIM)))AND(((t0.c33)&(vt0.c0)))) FROM vt0, t0 WHERE (CASE WHEN x'' THEN 0.8399990940733284 WHEN '0.3136877418982511' THEN x'' WHEN NULL THEN x'' ELSE '271854562' END COLLATE BINARY) LIMIT -755963136 OFFSET 730439862; -- 0ms;
SELECT DISTINCT (((((t0.c33)) NOT BETWEEN ((t0.c33)) AND ((t0.c33)))) BETWEEN (CASE t0.c33  WHEN vt0.c0 THEN t0.c33 ELSE '623947958' END) AND (((((t0.c0)AND(t0.c33)))AND(t0.c0)))), NULLIF((t0.c33 IN (t0.c0)), (t0.c33 IN ())), LEAD(CAST(((t0.c0) IS FALSE) AS NUMERIC), LIKELY(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))), CASE WHEN (t0.c33 IN ()) THEN ((t0.c0) NOTNULL) END) OVER () FROM vt0, t0; -- 1ms;
SELECT DISTINCT ((CHANGES()) IS TRUE) FROM vt0, t0 WHERE ((x'' IN (((0.5083126593465717)>('')), ((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(t0.c33)))OR(t0.c33)))|(t0.c33)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT MAX(DATETIME(t0.c33, vt0.c0, vt0.c0)), COUNT((((vt0.c0))=((t0.c33)))), vt0.c0 FROM vt0, t0 WHERE ((((+ ('1098879055'))) NOT BETWEEN (CASE WHEN '-1273022437' THEN NULL END) AND ((('y!\n蜦Y￿Zm') NOT NULL)))) LIMIT -1811009507 OFFSET 220206505; -- 0ms;
SELECT ALL ((((((((RTRIM(t0.c0))OR(x'')))AND((((t0.c33))<((vt0.c0))))))AND(x'')))OR(((NULL) BETWEEN (t0.c0) AND (t0.c33)))), FIRST_VALUE('Gkbg{') OVER (), CAST((((x'', vt0.c0, t0.c0))<((vt0.c0, t0.c33, t0.c0))) AS REAL) FROM t0, vt0 WHERE ((((((NULL))>=((x''))))-(LOWER('')))) LIMIT -1139085915; -- 0ms;
SELECT ALL (((t0.c0 IN ())) NOTNULL), (((t0.c33 IN (t0.c33)))AND(MIN(t0.c0))), 0.9396245085598718 COLLATE NOCASE FROM vt0, t0; -- 1ms;
SELECT (((+ (vt0.c0)))%(GROUP_CONCAT(t0.c0))) FROM vt0, t0; -- 0ms;
SELECT ALL LAST_VALUE(((JULIANDAY(t0.c33, x'', vt0.c0))LIKE(0.14726242617133833))) OVER () FROM vt0, t0; -- 0ms;
SELECT ALL MAX(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) FROM vt0;SELECT CAST(UPPER(t0.c0) AS REAL) FROM t0, vt0 WHERE ((((('')<(NULL))) NOT BETWEEN (((x'') BETWEEN (-175381370) AND ('-1626738516'))) AND (((NULL)>(0.6653316833984207))))) LIMIT 188661072; -- 0ms;
SELECT DISTINCT CAST(x'' AS TEXT), CASE UNLIKELY(t0.c0)  WHEN (t0.c0 IN (t0.c33)) THEN (((t0.c0))>=((vt0.c0))) ELSE COALESCE(t0.c33, t0.c33) END, ((((((((vt0.c0)AND('-44421363')))OR(t0.c33)))AND(vt0.c0)))AND(t0.c0)) COLLATE RTRIM FROM vt0, t0 WHERE ((((x'')) BETWEEN ((((0.2701754096694712) BETWEEN (NULL) AND (x'')))) AND (('929584165' COLLATE RTRIM)))) GROUP BY (- ((vt0.c0 IN (vt0.c0)))) HAVING vt0.c0; -- 0ms;
SELECT DISTINCT HEX(DISTINCT t0.c33) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL ((((t0.c0)|(t0.c33))) ISNULL) FROM t0 WHERE (((CASE WHEN '0.3136877418982511' THEN '781687259' WHEN -1.273022437E9 THEN 0.21745055726380402 WHEN '|\r3?jd~c>' THEN NULL ELSE x'a8e0' END) ISNULL)); -- 0ms;
SELECT DISTINCT ((((t0.c0)>>(t0.c33)))!=(vt0.c0 COLLATE BINARY)) FROM t0, vt0 WHERE (CAST((('')>>(x'')) AS BLOB)); -- 0ms;
SELECT ALL vt0.c0 FROM t0 NOT INDEXED, vt0 WHERE ((+ ((('-36364654') NOT NULL)))); -- 0ms;
SELECT ALL json_valid(LIKELY(t0.c0)) FROM vt0, t0 WHERE ((((((x'b524'))!=((0.21522663113113472))))==((0.1820395547699062 IN ())))) LIMIT -2147408355; -- 0ms;
SELECT DISTINCT (((((x''))<=((t0.c0))))GLOB(CAST(t0.c33 AS REAL))), (((((t0.c33 IN ()))OR(((((NULL)OR(t0.c0)))AND(vt0.c0)))))AND(((t0.c0)!=(vt0.c0)))), ((((((((((t0.c0)GLOB(t0.c33)))AND(((t0.c33)<>(t0.c33)))))OR(((vt0.c0) IS TRUE))))OR(((t0.c33)>(t0.c33)))))AND(((vt0.c0)OR(vt0.c0)))) FROM t0 ORDER BY (vt0.c0 COLLATE RTRIM IN (((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c0) NOT NULL))) DESC;SELECT vt0.c0, -1.63885457E9, (((t0.c0 IN ())) IS TRUE) FROM t0, vt0 WHERE (((('XQQ8e뛎JFX') NOT NULL) IN (CASE WHEN 1.390548318E9 THEN x'' END, NULL))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c0)))<(AVG(t0.c33))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((t0.c33 COLLATE BINARY)<<(((t0.c0)>(vt0.c0)))) FROM t0 WHERE ((((x'7146')) BETWEEN ((((x'2c1ced79') NOT NULL))) AND ((1.390548318E9))));SELECT DISTINCT (((- (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(t0.c0)))OR(t0.c0))) AND (((vt0.c0)IS(t0.c0)))) FROM vt0 ORDER BY (NOT ((NOT (vt0.c0))))  NULLS LAST, (((t0.c0) IS FALSE) IN ())  NULLS FIRST, CASE (((0.36582136060558046)) BETWEEN ((t0.c0)) AND ((t0.c33)))  WHEN ((t0.c33)+(t0.c0)) THEN TRIM(vt0.c0) WHEN ((t0.c33)<=(t0.c33)) THEN t0.c33 WHEN (+ (t0.c0)) THEN (t0.c33 IN ()) END  NULLS FIRST;SELECT ALL SUM((~ (NULL))) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT json_array(UNLIKELY(DISTINCT x''), NULL COLLATE BINARY) FROM vt0, t0;SELECT DISTINCT ((CAST('' AS TEXT)) BETWEEN (t0.c0 COLLATE NOCASE) AND ((t0.c33 IN ()))) FROM t0 WHERE ((((0.4922693041557852 IN ())) NOT BETWEEN ((((('-191401024')OR(NULL)))AND(8.880049563906312E-4))) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (t0.c33 COLLATE RTRIM IN ()) FROM vt0, t0 ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN t0.c0 ELSE ((t0.c33)|(t0.c33)) END LIMIT 1641362348; -- 0ms;
SELECT ((vt0.c0)&(t0.c33)) COLLATE BINARY, ((((vt0.c0)=(t0.c0)))>((((t0.c33)) BETWEEN ((t0.c0)) AND ((t0.c0))))), ((((0.6542701527012137)/(t0.c33))) NOT NULL) FROM vt0, t0 WHERE ((((x'')) BETWEEN (((((('-497849200')OR(NULL)))AND('')))) AND ((((((0.2701754096694712)OR(NULL)))OR(NULL)))))); -- 0ms;
SELECT DISTINCT ((NULL) NOT NULL) COLLATE RTRIM FROM vt0, t0 WHERE (CASE WHEN ((x'a090') IS TRUE) THEN (('')==(0xffffffffb833c4b0)) ELSE (+ ('1401255537')) END); -- 0ms;
SELECT ALL '0.12813309437760034' FROM vt0, t0 WHERE (((((0.157081497957835)*('-36364654')))<=(((((x'')AND(NULL)))AND(x'7a53'))))); -- 0ms;
SELECT ((((t0.c33) ISNULL))||(CASE t0.c33  WHEN t0.c33 THEN t0.c0 ELSE t0.c33 END)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((COUNT(*))/(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)), LOWER(vt0.c0), COUNT(*) OVER ( ORDER BY (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((t0.c33) BETWEEN (t0.c0) AND (t0.c0))))) DESC  NULLS LAST) FROM t0, vt0 WHERE ((CAST(0.22927013593258927 AS BLOB) IN (x''))); -- 0ms;
SELECT (CAST(t0.c33 AS INTEGER) IN (CAST(t0.c33 AS INTEGER))) FROM t0 WHERE ((((1.641362348E9)) NOT BETWEEN ((NULL)) AND ((0Xffffffffdc5a393a))) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((((((((t0.c33)OR(t0.c33)))AND(t0.c0)))AND(t0.c33)))AND(t0.c0)))AND(t0.c33)))OR(((((t0.c0)OR(vt0.c0)))AND(t0.c0)))), (((t0.c0) IS TRUE) IN ()), ((((vt0.c0)<(vt0.c0)))|(AVG(t0.c33))) FROM vt0, t0; -- 0ms;
SELECT (t0.c33 COLLATE BINARY IN ((- (t0.c33)))), (((t0.c33 IN ()))||(('-1819171222' IN ()))), 0.9614208377625637 FROM vt0 WHERE (CASE WHEN ((x'')>>(x'')) THEN (((x'', 532669685, 99022558)) NOT BETWEEN ((NULL, x'', 0xffffffff99d035f0)) AND ((x'', '-202730379', 0xffffffffaf1b0725))) WHEN CASE WHEN '5NU' THEN 0.9393017368382368 ELSE x'' END THEN (((x''))<((NULL))) WHEN ((((x'6119')OR(0.36582136060558046)))OR(9.29584165E8)) THEN (((((((('h47m')OR(-579281677)))OR('-235435043')))OR(x'')))AND(0.8434911091399175)) ELSE ((((NULL)AND(NULL)))AND(NULL)) END);SELECT ALL ((SUM(vt0.c0)) BETWEEN (vt0.c0) AND (IFNULL(t0.c0, t0.c0))), ((t0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c0)GLOB(vt0.c0))) AND (((((((((((((t0.c33)AND(NULL)))OR(t0.c0)))OR(t0.c33)))OR(t0.c33)))OR(t0.c0)))AND(vt0.c0)))), ((((((t0.c33)OR(vt0.c0)))AND(vt0.c0))) NOTNULL) FROM t0 GROUP BY ((t0.c0) NOT NULL) HAVING ((((((((((x'')AND(vt0.c0)))AND(MIN(vt0.c0))))AND(UPPER(DISTINCT t0.c33))))OR((t0.c33 IN ()))))AND(((-8.89590646E8) NOTNULL))) ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)+(((t0.c0)-(t0.c33))));SELECT DISTINCT RANK() OVER ( GROUPS  CURRENT ROW), CAST(LOWER(DISTINCT t0.c0) AS TEXT), (~ (-1.7538137E8)) COLLATE BINARY FROM t0, vt0 GROUP BY (- (t0.c33)) COLLATE NOCASE HAVING (((t0.c33) NOTNULL) IN ()); -- 0ms;
SELECT ALL (- (((t0.c0) BETWEEN (t0.c33) AND (vt0.c0)))), ((- (NULL)) IN (((t0.c0) BETWEEN (t0.c0) AND (-1.139085915E9)))), CAST((+ (t0.c0)) AS NUMERIC) FROM t0, vt0 WHERE ('271854562'); -- 0ms;
SELECT ((vt0.c0)/(t0.c0)) COLLATE NOCASE FROM t0, vt0 WHERE (RTRIM(CASE '\r?I?^'  WHEN 0.3358567812894738 THEN '271854562' ELSE x'' END)); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE NOCASE FROM t0;SELECT (((vt0.c0)|(t0.c33)) IN ()) FROM vt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ALL CAST(t0.c33 AS INTEGER) COLLATE NOCASE, COUNT(*) OVER (), CAST(NULL AS BLOB) FROM vt0, t0 WHERE ((((x'4a90')&('-1357183195')) IN ())); -- 0ms;
SELECT (((+ (vt0.c0))) ISNULL) FROM vt0 WHERE (((CASE NULL  WHEN NULL THEN x'' ELSE -3.6364654E7 END)<=(((NULL)-('233801386'))))); -- 0ms;
SELECT (((t0.c33) BETWEEN (t0.c33) AND (t0.c0)) IN (t0.c0 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT '' FROM t0, vt0 WHERE ((((((NULL)) NOT BETWEEN (('-1626738516')) AND ((x'')))) IS TRUE)) GROUP BY vt0.c0, t0.c0, ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND (NULL COLLATE NOCASE)) HAVING MAX(CASE t0.c33  WHEN t0.c33 THEN t0.c0 WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c0 ELSE t0.c0 END); -- 0ms;
SELECT LEAD(CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c33)) THEN t0.c0 COLLATE NOCASE END, ((TYPEOF(DISTINCT vt0.c0)) BETWEEN (t0.c33 COLLATE NOCASE) AND (((x'')!=(t0.c33)))), ((((vt0.c0)>>(x'')))<=(((NULL) NOT BETWEEN (t0.c33) AND (vt0.c0))))) OVER () FROM vt0, t0 WHERE (0Xffffffffe727afc8) ORDER BY ((CASE WHEN t0.c33 THEN t0.c0 END) NOT NULL)  NULLS FIRST; -- 0ms;
SELECT ALL (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((vt0.c0 IN ()), t0.c33, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((vt0.c0) IS FALSE), SUM(t0.c0), ((((t0.c0)AND(vt0.c0)))AND(t0.c33))))) FROM vt0, t0 WHERE (((((0.6254041260921621) ISNULL)) IS TRUE)); -- 0ms;
SELECT (~ (TOTAL(t0.c33))) FROM vt0 WHERE (((((0.2022697933284312)>('')))%('0.03255100951127099' COLLATE RTRIM))) ORDER BY vt0.c0 DESC  NULLS LAST;SELECT DISTINCT (~ (vt0.c0)) FROM t0, vt0; -- 1ms;
SELECT DISTINCT (((('')AND(NULL)))OR(((((t0.c33)AND(vt0.c0)))OR(t0.c0)))), ((((vt0.c0)IS(vt0.c0)))GLOB((t0.c33 IN ()))), json_quote((NOT (t0.c0))) FROM vt0, t0; -- 0ms;
SELECT CASE WHEN t0.c33 THEN TOTAL(t0.c33) ELSE CAST(t0.c0 AS BLOB) END FROM vt0, t0; -- 0ms;
SELECT DISTINCT (+ ((((t0.c33)) NOT BETWEEN ((t0.c33)) AND ((vt0.c0))))) FROM t0 LEFT OUTER JOIN vt0 ON (x'7591' IN ()) COLLATE NOCASE; -- 0ms;
SELECT ALL LAST_VALUE((- (RTRIM(t0.c33)))) OVER () FROM vt0, t0 WHERE (((CASE WHEN NULL THEN 'xc]' WHEN 0.19133093610097573 THEN x'' WHEN NULL THEN x'' WHEN '' THEN 0.9906541861301442 WHEN 'pf+LB' THEN 0.1574300136278608 END) BETWEEN (((x'')/(577805483))) AND (((NULL) NOT BETWEEN (1390548318) AND (x'6ec8'))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(t0.c0) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT (('-1677795726') IS FALSE), ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c33 THEN t0.c33 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)|(t0.c0)))), 0.7715265927330287 FROM t0 WHERE ((- ('-889590646' COLLATE RTRIM)));SELECT DISTINCT (((t0.c0)-(vt0.c0)) IN ()) FROM vt0, t0 WHERE ((((((((((((('0.3616990890168582')AND(NULL)))OR(NULL)))AND(NULL)))OR(0.3358567812894738)))AND((- (NULL)))))OR((('-843939861')%(NULL))))); -- 0ms;
SELECT DISTINCT TOTAL(vt0.c0) FROM vt0; -- 0ms;
SELECT MAX(((t0.c33) IS TRUE)), DENSE_RANK() OVER ( PARTITION BY CASE WHEN ((0.959567582147861) BETWEEN (t0.c0) AND (t0.c33)) THEN CAST(t0.c0 AS INTEGER) END, ((((t0.c0 COLLATE RTRIM)OR(CASE WHEN t0.c33 THEN t0.c0 END)))OR(((t0.c33)%(vt0.c0))))), vt0.c0 FROM t0;SELECT vt0.c0, LAST_VALUE((((~ (t0.c33))) NOT BETWEEN ((+ (vt0.c0))) AND ((((t0.c33)) BETWEEN ((t0.c0)) AND ((t0.c33)))))) OVER (), ((((LOWER(vt0.c0))OR(((vt0.c0)>=(t0.c33)))))AND((vt0.c0 IN (t0.c33)))) FROM t0, vt0; -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 'TIcq', t0.c0)) AND ((t0.c33, t0.c0, vt0.c0))))=(CASE t0.c0  WHEN t0.c33 THEN t0.c33 END)) FROM t0;SELECT DISTINCT t0.c0, vt0.c0, t0.c0 FROM t0 GROUP BY CASE WHEN (+ (t0.c33)) THEN LAST_INSERT_ROWID() END HAVING ((((((((GROUP_CONCAT(t0.c0))AND((vt0.c0 IN ()))))AND(((vt0.c0)<(vt0.c0)))))AND(t0.c0 COLLATE RTRIM)))AND((t0.c33 IN (t0.c33))));SELECT ALL MAX('ukK!Q' COLLATE BINARY) FROM t0 WHERE (0.0378166584000873) LIMIT -2052545643 OFFSET -2096017917; -- 0ms;
SELECT ALL CASE WHEN (((vt0.c0, t0.c33, t0.c33))=((t0.c33, -36364654, vt0.c0))) THEN (((t0.c33)) BETWEEN ((t0.c33)) AND ((t0.c0))) WHEN ((vt0.c0)GLOB(t0.c0)) THEN TRIM(0.6440602711508571, vt0.c0) WHEN ((t0.c33)AND(t0.c33)) THEN CAST('뵆Z' AS TEXT) END FROM t0, vt0 WHERE (CASE ((NULL)OR(x'54d6'))  WHEN ('0.1498296152163734' IN ()) THEN ((((((((0.06867929608932044)OR('jm1x')))OR(0.3756471767079509)))AND('bY3YVdalJ')))OR('30182814')) ELSE (('')*(0.9315661931176678)) END); -- 0ms;
SELECT ((((t0.c33)-(NULL))) IS FALSE), SUM(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))), (+ ((((t0.c0)) BETWEEN ((t0.c33)) AND (('0'))))), (((((t0.c33)+(t0.c33))))<>((TOTAL(vt0.c0)))), (((t0.c0 IN ())) IS FALSE) FROM t0, vt0 WHERE (((SQLITE_COMPILEOPTION_GET(NULL)) NOT BETWEEN ((~ ('-1626738516'))) AND (0.384896237689173))) LIMIT -2125261148 OFFSET -2011756337; -- 0ms;
SELECT ALL ((t0.c33 IN ()) IN ()) FROM t0 WHERE (UNICODE(((NULL)-('oz')))); -- 0ms;
SELECT t0.c0 FROM t0, vt0 WHERE ((((((('-1697422319')AND('')))AND('-770396555')))LIKE((+ (NULL))))); -- 0ms;
SELECT DISTINCT ((json_insert(t0.c33, t0.c33, vt0.c0, t0.c0, t0.c33, t0.c33, t0.c0)) NOTNULL), (CASE vt0.c0  WHEN t0.c33 THEN t0.c33 WHEN t0.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN t0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END IN ()), (+ ((+ (t0.c33)))) FROM vt0, t0 WHERE (((~ (NULL)) IN ())); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) NOT BETWEEN (((((t0.c33)AND(NULL)))AND(t0.c0))) AND (((vt0.c0)||(vt0.c0)))), ((t0.c33)>(t0.c0)) COLLATE BINARY FROM t0 WHERE (TYPEOF((((x'e6ac', 0.496393682137826, 0.6505255827056521)) NOT BETWEEN ((NULL, -937899684, '3')) AND (('', 0Xb3ebd50, NULL)))));SELECT ((((t0.c0)OR(vt0.c0)))<(((t0.c0)<(t0.c0)))) FROM t0, vt0 WHERE (NULL); -- 1ms;
SELECT ((CASE WHEN 0.8163610530071433 THEN t0.c0 END)+(TRIM(DISTINCT vt0.c0))) FROM t0 WHERE (NULLIF(((-1.697422319E9) ISNULL), ((NULL) ISNULL)));SELECT ALL NTILE(t0.c33) OVER () FROM t0 WHERE (((((0.09840413200915765)OR(0.09366924344160488)))OR(x'')) COLLATE RTRIM) ORDER BY (((((+ (t0.c33)))OR((- (t0.c33)))))OR(x''));SELECT (((((t0.c33)) BETWEEN ((t0.c33)) AND ((t0.c0))))>(SUM(t0.c0))), ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT NULL), CAST(vt0.c0 COLLATE NOCASE AS INTEGER) FROM t0;SELECT DISTINCT ((((vt0.c0) NOT NULL))<>((((t0.c0, t0.c33, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, t0.c0)) AND ((t0.c0, t0.c33, t0.c33))))), t0.c0, ((((((((t0.c0)OR(COUNT(*))))OR(MIN(vt0.c0))))OR((~ (vt0.c0)))))OR((vt0.c0 IN (t0.c33, vt0.c0)))) FROM vt0 LIMIT -1249982670 OFFSET -1534751288;SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN vt0.c0 THEN t0.c0 ELSE 675033718 END) NOT BETWEEN (t0.c33) AND ((NOT (t0.c0)))) FROM vt0, t0; -- 0ms;
SELECT ALL t0.c0 FROM vt0 WHERE (CASE CASE 0.9935019486507555  WHEN -5.79281677E8 THEN '-937899684' END  WHEN (('+X') ISNULL) THEN ('0.794892135853398' IN ()) ELSE ((508236606) IS TRUE) END) ORDER BY (((((t0.c33) ISNULL), ((t0.c33) NOT BETWEEN (vt0.c0) AND (t0.c33)), ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))<=(((NOT (t0.c0)), ((t0.c0) NOT NULL), (t0.c0 IN ())))), NULL ASC, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((((((t0.c33)OR(vt0.c0)))AND(vt0.c0))))) DESC;SELECT ALL vt0.c0, (((((t0.c33)) NOT BETWEEN ((t0.c33)) AND ((t0.c33))))>>(-708824809)), CASE WHEN (('1') BETWEEN (t0.c33) AND (vt0.c0)) THEN CAST(t0.c33 AS TEXT) END FROM vt0, t0; -- 1ms;
SELECT HEX(DISTINCT ((t0.c33) ISNULL)), TOTAL(SQLITE_COMPILEOPTION_USED(t0.c0)), CASE WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '1466041254' ELSE CASE t0.c33  WHEN t0.c33 THEN '0.7063083526979089' END END FROM vt0, t0 LIMIT 47919120 OFFSET -1260405525; -- 0ms;
SELECT ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((((t0.c0)OR(t0.c33)))AND(vt0.c0))) AND ((t0.c33 IN (t0.c33)))) FROM t0 WHERE (((CASE WHEN 0Xffffffff9e511056 THEN 781296188 WHEN '-398390657' THEN NULL WHEN -1.63885457E9 THEN 0.4651617486571541 ELSE x'' END)==(CASE x''  WHEN '-1139085915' THEN 'Nw' WHEN '233801386' THEN x'a8b3' WHEN 0.2945744850690285 THEN NULL END))) ORDER BY t0.c0 DESC  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((t0.c0) IS FALSE)) OVER (), ((((vt0.c0) ISNULL))<(0.24314372443856502)), ((((0.7063083526979089) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND ((((vt0.c0, t0.c33, t0.c0))<=((vt0.c0, t0.c0, '99022558'))))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT '', (((((((((((('-1211064123')AND('[h')))OR(t0.c0)))AND(IFNULL(DISTINCT t0.c33, vt0.c0))))OR(AVG('-1534751288'))))OR(ABS(vt0.c0))))OR(GROUP_CONCAT(t0.c33))), 0.22165832940570096 FROM t0, vt0 WHERE (((LIKELY(DISTINCT '')) NOT BETWEEN (((x'')GLOB(x''))) AND (((((0.5464373327677381)AND(-1623542037)))OR(x''))))); -- 0ms;
SELECT ALL (((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c33)))OR(t0.c33))))!=((vt0.c0))) FROM t0 WHERE ('GKBG{');SELECT MIN(((t0.c33) NOT BETWEEN (vt0.c0) AND (vt0.c0))), 5.08236606E8, CASE ((((t0.c33)OR(vt0.c0)))OR(t0.c0))  WHEN ((t0.c0)|(t0.c0)) THEN '' WHEN (NOT (t0.c33)) THEN ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c33)) WHEN CASE WHEN x'de2a' THEN vt0.c0 ELSE t0.c33 END THEN NULLIF(vt0.c0, t0.c0) END FROM vt0, t0 WHERE (SQLITE_COMPILEOPTION_GET((- (',bL')))) ORDER BY (CASE WHEN t0.c33 THEN t0.c0 WHEN t0.c33 THEN t0.c33 WHEN vt0.c0 THEN t0.c0 END IN ())  NULLS FIRST, ((((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))AND(((vt0.c0)%(t0.c33)))))AND(t0.c33)); -- 0ms;
SELECT ALL ((((-1.357183195E9)OR(t0.c0)))OR('0.9935019486507555')) FROM vt0, t0 WHERE ((((CAST(0.4339497665031393 AS TEXT)))>(((('') NOT BETWEEN (x'890b') AND (NULL)))))); -- 0ms;
SELECT ((MAX('-1274673495'))=(vt0.c0 COLLATE RTRIM)), CAST(CASE WHEN t0.c33 THEN t0.c33 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c33 END AS NUMERIC), ((((t0.c0) NOT BETWEEN (t0.c33) AND (t0.c0))) NOT NULL) FROM t0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((((((NULL)AND(0.7028271452254267)))AND(0Xffffffff8001261d))) BETWEEN ((((NULL))>(('-1434875308')))) AND (CASE NULL  WHEN '513567516' THEN x'0ff3' WHEN '-1654235313' THEN '1041884099' WHEN 0X53857671 THEN -8.43939861E8 END))) GROUP BY ((((vt0.c0)/(5.77805483E8))) NOT NULL) ORDER BY (((t0.c0)) NOT BETWEEN ((t0.c33)) AND (((t0.c33 IN ())))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST((+ (vt0.c0)) AS BLOB) FROM t0 WHERE (CASE WHEN CASE -1819171222  WHEN NULL THEN 0.6359630849105806 WHEN -840736259 THEN x'' WHEN -875192929 THEN '₎b쇡W<6<' ELSE NULL END THEN (513567516 IN ()) ELSE (((NULL))>=(('w?zZCP)訕['))) END);SELECT ALL ((vt0.c0 COLLATE RTRIM) BETWEEN ((NOT (t0.c33))) AND ((vt0.c0 IN ()))) FROM vt0, t0 GROUP BY LENGTH(vt0.c0), CAST(CAST(t0.c33 AS INTEGER) AS TEXT), ((t0.c33) NOT BETWEEN (t0.c33) AND (vt0.c0)) COLLATE RTRIM, CAST(t0.c33 COLLATE BINARY AS REAL), (+ (LIKELY(t0.c0))); -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM vt0, t0; -- 0ms;
SELECT DISTINCT (('-340628870')>=(SUM(t0.c0))), t0.c33, (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN (((((t0.c33)AND(t0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM)), ((0x2ccb15d3) NOTNULL), (((NULL)AND(vt0.c0)) IN ((+ (t0.c33)))) FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c0)*(t0.c0)) IN ()) WHERE ((NOT (((x'') BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT DISTINCT x'' COLLATE BINARY FROM t0, vt0; -- 0ms;
SELECT ALL CASE WHEN (((('')OR(vt0.c0)))AND(t0.c33)) THEN ((t0.c0)IS NOT(vt0.c0)) END, ((((x'')AND(INSTR(t0.c33, t0.c0))))AND(((((-843939861)AND(t0.c0)))AND(t0.c33)))), CAST(NULL AS NUMERIC) FROM vt0 WHERE (CASE WHEN (('-1507996105') NOT NULL) THEN 7.51506899E8 END);SELECT ALL TOTAL(0.2787757558278292) OVER (), ((((((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))OR(((vt0.c0) ISNULL))))AND(CAST(vt0.c0 AS NUMERIC))), t0.c33 FROM t0 GROUP BY SUBSTR(t0.c33, (vt0.c0 IN ())), (((t0.c33)) NOT BETWEEN (((- (t0.c0)))) AND ((NULL))), ((CASE WHEN t0.c33 THEN t0.c0 ELSE vt0.c0 END)||(CASE WHEN t0.c33 THEN vt0.c0 ELSE 0.20945809659850867 END)) HAVING SUM(AVG(((vt0.c0)||(vt0.c0))));SELECT (vt0.c0 IN ()) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL (CAST(vt0.c0 AS TEXT) IN ()) FROM vt0, t0 WHERE (CASE WHEN TYPEOF(0.627961524305252) THEN '' COLLATE NOCASE WHEN NULL COLLATE BINARY THEN ((((0.530759537695461)AND(NULL)))OR(x'4d1b')) WHEN (('1523484454')IS NOT(NULL)) THEN (((0.7719294345510358, 'Q', '1259130948', -937968305, NULL)) NOT BETWEEN ((x'c389', NULL, NULL, 'pc|FrieKs', '')) AND ((x'', 0.34824425486799193, 'FALSE', '-1819171222', 0.6359630849105806))) WHEN (((NULL)) NOT BETWEEN ((0.7498307298820494)) AND ((0.3551195340947112))) THEN CASE '-2096017917'  WHEN NULL THEN '-1030822318' ELSE 716458571 END WHEN ((NULL)||(0.7880466973253806)) THEN NULL ELSE TRIM(DISTINCT '-829437250', 'pf+LB') END); -- 0ms;
SELECT DISTINCT t0.c33 FROM vt0, t0 WHERE ((((((-1.306264401E9)OR(NULL)))AND(x'2632')) IN ())); -- 0ms;
SELECT DISTINCT CASE ((t0.c0)!=(t0.c0))  WHEN (+ (t0.c33)) THEN ((-1623542037) ISNULL) END FROM vt0 WHERE (((((x'')||(x''))) BETWEEN ((0.6359630849105806 IN ())) AND (CASE -1.534751288E9  WHEN NULL THEN '-1732124146' END)));SELECT (~ (LIKELY(DISTINCT ''))) FROM t0, vt0 WHERE (((((0.5603523251902861) NOT BETWEEN (NULL) AND ('')))LIKE(((((x'c678')AND(0.5528491876094505)))OR(0.3616990890168582))))) GROUP BY ((((t0.c33) NOT NULL))LIKE(((t0.c33)>=(t0.c0)))) HAVING CAST(((((vt0.c0)OR(t0.c0)))OR(t0.c0)) AS NUMERIC); -- 0ms;
SELECT ALL TRIM(0.6636445967433255) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((((((t0.c0))<>((vt0.c0)))))==((((NULL) IS FALSE)))) FROM t0, vt0; -- 2ms;
SELECT DISTINCT NULL FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c33) NOTNULL))OR(rtreenode(t0.c0, vt0.c0))) FROM t0 GROUP BY ((vt0.c0)OR(t0.c0)) COLLATE RTRIM ORDER BY (((+ (t0.c0)))/(((vt0.c0)>>(t0.c0)))) ASC  NULLS FIRST;SELECT ALL t0.c33 COLLATE NOCASE, COUNT(HEX(DISTINCT t0.c0)) OVER ( ORDER BY (- (t0.c0))), (CAST(vt0.c0 AS TEXT) IN ()) FROM vt0;SELECT DISTINCT LAG(((0.08676735307038885) NOT NULL) COLLATE NOCASE, ((t0.c0 COLLATE NOCASE)=(UPPER(DISTINCT t0.c0))), (((~ (t0.c33))) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN t0.c33 END))) OVER ( ORDER BY CAST(HEX('0.8671378668202782') AS REAL) DESC), ((CAST(vt0.c0 AS BLOB))>>(t0.c33 COLLATE RTRIM)), (((vt0.c0)) BETWEEN ((t0.c0)) AND ((MAX(x'c710', t0.c0, t0.c33, t0.c0)))) FROM t0, vt0 LIMIT -134055838; -- 0ms;
SELECT (((0Xffffffff8fcb25d9, t0.c0, NULL, vt0.c0, t0.c0)) BETWEEN (('0.8424963298740958', ((vt0.c0)IS(vt0.c0)), (t0.c33 IN ()), ABS(t0.c0), COUNT('1984662041'))) AND ((LOWER(t0.c33), ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0))<=((t0.c0))), (vt0.c0 IN (vt0.c0)), NULL))), ((((CAST(t0.c33 AS BLOB))OR(CAST(vt0.c0 AS BLOB))))AND(((((((((((((vt0.c0)OR(t0.c33)))OR(t0.c33)))OR(vt0.c0)))AND('-201230169')))OR(0.6092464970231152)))AND(t0.c0)))), CASE SUM(vt0.c0)  WHEN (t0.c0 IN (t0.c33)) THEN t0.c0 COLLATE RTRIM END FROM t0 WHERE ((- (x'1e2e' COLLATE BINARY))) ORDER BY ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c33)))));SELECT DISTINCT ((AVG('-35246554'))LIKE(SUM(x''))) FROM vt0 WHERE (TRIM((0xffffffffb541d4cf IN (x'', NULL)))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (t0.c33) AND (t0.c0)) AS TEXT) FROM vt0, t0; -- 0ms;
SELECT '-937968305' FROM vt0 WHERE ((((((('-840548158') BETWEEN (x'') AND (x'c74c')))OR(x'4966' COLLATE BINARY)))AND((~ (0.5215662366950157))))) LIMIT -1157403662; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOTNULL) FROM t0, vt0 WHERE (((QUOTE(x'6d47')) IS TRUE)); -- 0ms;
SELECT ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c33)-(vt0.c0))) AND ((t0.c0 IN (vt0.c0)))), ((('623947958'))<((((vt0.c0) ISNULL)))), t0.c33 FROM t0 LIMIT 121156207;SELECT DISTINCT ((((vt0.c0)<>(t0.c0)))<>(t0.c33 COLLATE BINARY)) FROM t0 WHERE (CAST((('-1329249771') BETWEEN ('-129159205') AND ('47919120')) AS REAL));SELECT DISTINCT t0.c33 COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT AVG((t0.c0 IN ())) FROM t0; -- 0ms;
SELECT NULL COLLATE NOCASE FROM vt0, t0 ORDER BY ((((((t0.c0)>(vt0.c0)))OR(t0.c33)))OR(CAST(t0.c33 AS REAL)))  NULLS FIRST; -- 0ms;
SELECT ALL NTILE(CAST(UPPER(t0.c0) AS REAL)) OVER () FROM t0, vt0;SELECT DISTINCT (0.5812186870088009 IN (MAX(t0.c33), ((NULL) IS TRUE), ((t0.c0)*(t0.c33)))) FROM vt0 WHERE (((CAST('' AS REAL)) ISNULL)) GROUP BY (~ (((t0.c0)=(t0.c0)))) HAVING (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (t0.c33) AND (COALESCE(t0.c33, NULL)));SELECT ALL TOTAL(((((((((t0.c0)AND(t0.c0)))AND(t0.c33)))AND('834602213')))OR(t0.c33)) COLLATE RTRIM) OVER ( ORDER BY ((t0.c33) BETWEEN (CAST(t0.c33 AS TEXT)) AND ((((t0.c33))==((t0.c33))))) ASC  NULLS LAST, CAST(((t0.c33)-(t0.c0)) AS BLOB) ASC  NULLS FIRST, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c33))) BETWEEN (((('-1531377842')) NOT BETWEEN ((t0.c0)) AND ((t0.c33)))) AND (CAST(t0.c0 AS INTEGER)))  NULLS FIRST) FROM vt0, t0 GROUP BY CASE WHEN ((t0.c0)>>(t0.c0)) THEN ((t0.c33) BETWEEN (t0.c33) AND (vt0.c0)) WHEN (('-1574880760') IS FALSE) THEN 'rsf' WHEN x'' THEN ((((((((vt0.c0)AND(t0.c33)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)) END HAVING ((((((vt0.c0)IS NOT(vt0.c0)))OR(TRIM(t0.c0, NULL))))AND(((t0.c0)-(t0.c0)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE ((((0X94eb094 IN (0.22165832940570096)))OR(x'' COLLATE RTRIM))); -- 0ms;
SELECT ALL (((t0.c33 IN (t0.c33))) BETWEEN (MAX(vt0.c0)) AND (((vt0.c0)*(vt0.c0)))), (((t0.c0))<((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c33)))OR(t0.c33))))), ((((NULL, t0.c33, vt0.c0))<((vt0.c0, vt0.c0, t0.c33))) IN ()) FROM vt0 WHERE (CAST(TYPEOF(DISTINCT '') AS BLOB));SELECT ((AVG(vt0.c0))-(((t0.c33) IS FALSE))) FROM vt0, t0; -- 0ms;
SELECT ALL MAX(0x3a6c29ae) FROM vt0, t0 WHERE (((CASE '-1889758514'  WHEN x'' THEN x'' END)&(((NULL)&('4_'))))); -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(0X1f114332)))AND(CAST(t0.c0 AS BLOB))), COUNT(*) OVER (), ((((t0.c0)IS(vt0.c0))) NOT NULL) FROM t0;SELECT ALL ((((vt0.c0) NOTNULL))%(((t0.c0)>(t0.c33)))) FROM t0 WHERE (ABS((- ('675033718'))));SELECT MAX((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), t0.c33, ('-937968305' IN ()) FROM t0, vt0 WHERE ((- ((NULL IN ())))); -- 0ms;
SELECT ALL 'g?' FROM vt0, t0 WHERE (CAST(((0.496393682137826)>>(NULL)) AS TEXT)); -- 0ms;
SELECT json_quote(((t0.c33)IS NOT(NULL))) FROM vt0, t0 WHERE (CAST(1626761250 AS BLOB) COLLATE BINARY); -- 1ms;
SELECT DISTINCT (((NOT (t0.c0))) NOTNULL), (NOT (LOWER(vt0.c0))), GROUP_CONCAT(')g?VmR') OVER ( ORDER BY ((t0.c33)|(t0.c0)) COLLATE BINARY DESC  NULLS LAST) FROM t0 WHERE (((CAST(NULL AS NUMERIC))<=(((0.28560106272804775)>>('-398390657')))));SELECT DISTINCT (((((t0.c0))<((t0.c33))))+((((t0.c33)) BETWEEN ((x'')) AND ((t0.c0))))) FROM vt0 WHERE ((((((706792224 IN ()))OR(DATETIME(1998717169, 0Xffffffffa071c621, '944338745'))))AND(((('-1202077211'))>(('1513042831'))))));SELECT CAST(((((((((t0.c33)OR(vt0.c0)))AND(t0.c0)))OR(NULL)))AND(t0.c33)) AS INTEGER) FROM t0 WHERE ((((((((('-618292886')AND(1751056533)))AND(1.300410049E9)))AND((((0.7351080087742792, 0.9769811335764802, 0.6218738062338126, '0.1820395547699062', 7.51506899E8)) NOT BETWEEN (('0.8671378668202782', '', NULL, x'', '-1260405525')) AND (('0.5464373327677381', x'', 0.3770848535216811, NULL, ''))))))AND((((0.3503354683939638))<>((0.02438355146667759))))));SELECT ((((vt0.c0)!=(vt0.c0)))IS(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (0.45288580246431287 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 WHERE (((ABS(x''))>((((('1976066159')OR('')))AND('1064984801'))))) LIMIT -845226321 OFFSET -1180915010; -- 0ms;
SELECT ALL TRIM(DISTINCT (('386501426') NOT NULL)) FROM vt0, t0; -- 0ms;
SELECT (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0 WHERE (((0.1498296152163734 COLLATE RTRIM) NOT BETWEEN (((-1306264401) NOTNULL)) AND (((-4.16829496E8)LIKE('xc]'))))) GROUP BY ((COALESCE(t0.c33, t0.c33)) NOT NULL), (((t0.c33)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND (((((t0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c0)))))), (((+ (t0.c0)))<(((t0.c0) ISNULL)));SELECT DISTINCT ((((CAST(vt0.c0 AS NUMERIC))OR(((((vt0.c0)AND(t0.c33)))OR(t0.c33)))))AND((((t0.c33)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (((rtreenode(696523572, ''))IS((('#''') ISNULL)))) LIMIT -497849200 OFFSET -1443169878;SELECT ((UPPER(t0.c33))IS(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0, t0 WHERE ((('1630023692' COLLATE RTRIM)||(((NULL) BETWEEN ('-44421363') AND ('-840736259'))))); -- 0ms;
SELECT ALL t0.c33 FROM t0 WHERE ((- ((((('99022558')AND('-86668779')))OR(NULL))))); -- 0ms;
SELECT CAST(x'' AS TEXT) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL CAST(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT) FROM t0 WHERE ((((~ ('')))%(((513567516)OR(-191401024)))));SELECT ALL CASE WHEN (((t0.c33)) BETWEEN ((t0.c33)) AND ((NULL))) THEN ((t0.c33)>(t0.c0)) WHEN (NOT (t0.c0)) THEN (+ (t0.c33)) WHEN ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c33)) THEN t0.c0 COLLATE NOCASE END FROM vt0;SELECT DISTINCT (((NOT (t0.c0))) NOT BETWEEN ((NOT (t0.c33))) AND ((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM t0, vt0 WHERE (CAST(x'' AS INTEGER) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS TEXT)) NOT NULL), (ABS(DISTINCT vt0.c0) IN ()), ((((((x'1b8a')OR(t0.c33)))OR(t0.c33)))>>(t0.c0)) FROM vt0 WHERE (((((NULL) NOT BETWEEN (x'') AND (-1e500)))<=(((((((((0Xffffffffd2af8edd)AND(0.6440602711508571)))OR('532669685')))OR(NULL)))AND(NULL)))));SELECT (~ ((t0.c33 IN ()))) FROM vt0, t0 INDEXED BY i64; -- 0ms;
SELECT (- (((0.29937828033121716)<('-2014559735')))) FROM vt0 WHERE ((- ('y2.pqIyNb')) COLLATE NOCASE); -- 0ms;
SELECT SUM((((t0.c33, vt0.c0, t0.c33, vt0.c0, t0.c33))<>((vt0.c0, vt0.c0, t0.c33, t0.c33, vt0.c0)))) OVER (), SUM(CASE t0.c33  WHEN t0.c33 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c33 THEN 0.5846451331892462 END) OVER (), x'd58d' FROM vt0 WHERE (((+ (0.45652647312701344)) IN (x'c2f9')));SELECT DISTINCT ((NOT (vt0.c0)) IN (((t0.c0) IS TRUE), (((t0.c0)) BETWEEN ((t0.c33)) AND ((vt0.c0))))) FROM vt0 WHERE (((CASE WHEN NULL THEN NULL ELSE '348145066' END) NOT BETWEEN ((+ (NULL))) AND (((x'7b71')-('T\n0x')))));SELECT ALL (NOT (((x'') NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM vt0 WHERE (((NULL) BETWEEN ((((NULL, x'', 0xffffffff9f577865, 0.9027661501337493, 0.7256126287758883))<>((7.81296188E8, x'', x'', 0.7351080087742792, 0.79768027402541)))) AND (json_quote(0xfffffffffa60d416))));SELECT ALL (- (vt0.c0 COLLATE BINARY)), GROUP_CONCAT((t0.c33 IN ())) OVER ( GROUPS BETWEEN CAST(((((t0.c33)OR(t0.c0)))OR(t0.c33)) AS NUMERIC) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW), ((AVG(t0.c0)) IS FALSE) FROM t0, vt0;SELECT ALL (((t0.c0)) BETWEEN ((NULL)) AND ((((t0.c33)<<(t0.c0))))) FROM t0, vt0; -- 0ms;
SELECT ((((t0.c0)!=(t0.c0)))-((t0.c0 IN (t0.c33)))) FROM t0; -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c33 THEN vt0.c0 WHEN t0.c33 THEN t0.c33 ELSE vt0.c0 END)<((t0.c0 IN ()))), SQLITE_VERSION(), (((t0.c0) NOT NULL) IN (MAX(t0.c33))) FROM t0;SELECT ALL (CAST(t0.c0 AS BLOB) IN ()) FROM vt0, t0 WHERE (json_patch(CASE WHEN 0X34f9e83 THEN x'6c2d' ELSE 0.5966905435352843 END, CASE NULL  WHEN NULL THEN NULL WHEN 0x33a06410 THEN 0.425126201026656 WHEN 0xffffffffcde361fd THEN 0.2560295982413202 END));SELECT DISTINCT GROUP_CONCAT(x'') FROM t0 WHERE ((((x'') IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), t0.c0, (((t0.c33) IS TRUE) IN ('0.530759537695461')) FROM t0 GROUP BY ((load_extension(t0.c33, t0.c0))==(((t0.c33)||(t0.c0)))), ((CAST(t0.c33 AS REAL)) NOTNULL), ((CAST(t0.c0 AS NUMERIC))IS(((vt0.c0)AND(NULL))));SELECT DISTINCT CAST(((((((((t0.c0)OR(t0.c33)))OR(vt0.c0)))AND(t0.c0)))AND(vt0.c0)) AS BLOB) FROM t0 ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN t0.c33 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c33 END)  NULLS LAST;SELECT ALL ((t0.c0 COLLATE BINARY)|(0.8780716010061126)) FROM vt0 WHERE ((((('569000255')/('1562838077')))<((((NULL)) BETWEEN (('0.8671378668202782')) AND ((x''))))));SELECT ROW_NUMBER() OVER (), x'', ((LOWER(DISTINCT t0.c0))GLOB(((((((((t0.c33)AND(t0.c33)))OR(vt0.c0)))AND('1768274717')))AND(vt0.c0)))) FROM vt0;SELECT (+ (t0.c0)) COLLATE NOCASE COLLATE BINARY, t0.c0, UNLIKELY(LOWER(t0.c0)) FROM t0, vt0 WHERE ((~ (((0x30cd270c)|(0.6092464970231152))))); -- 1ms;
SELECT ALL (NOT (t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ((((vt0.c0)OR(((t0.c0) NOT NULL))))AND((+ (vt0.c0)))), t0.c33 COLLATE BINARY, COUNT(((t0.c33)||(t0.c33))) COLLATE NOCASE FROM t0 INDEXED BY i64;SELECT ALL PERCENT_RANK() OVER (), SQLITE_COMPILEOPTION_USED(t0.c33) COLLATE BINARY, SUM(((t0.c33) BETWEEN (t0.c0) AND (t0.c33))) FROM t0; -- 0ms;
SELECT DISTINCT (- ((t0.c0 IN ()))) FROM t0 WHERE (((((((((((0.45928622368281036)==(NULL)))OR(CAST('' AS TEXT))))AND((NOT (2.20206505E8)))))AND((((0.580582817533767, x'', NULL)) NOT BETWEEN ((0.8384182124394682, NULL, -708824809)) AND ((0.2332805699336552, 'rsf', NULL))))))AND((('-1623542037')|(0.6342036011446193))))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS BLOB) AS TEXT) FROM vt0; -- 0ms;
SELECT CAST(COUNT('623708640') AS BLOB), MAX(((vt0.c0)-(vt0.c0))), ((TRIM(t0.c0))LIKE((((vt0.c0))>((t0.c33))))) FROM vt0, t0 WHERE (((('')) NOT BETWEEN (('0')) AND ((CAST(NULL AS NUMERIC))))) GROUP BY CASE CAST(t0.c33 AS REAL)  WHEN t0.c33 COLLATE RTRIM THEN CAST(t0.c33 AS REAL) END HAVING (((t0.c33)OR(1825643862)) IN ()); -- 0ms;
SELECT DISTINCT '625057467' FROM vt0, t0 WHERE (CASE WHEN 1917589578 COLLATE RTRIM THEN ((((x'')OR('-2147408355')))OR('-1030822318')) WHEN (x'' IN ()) THEN CASE 0.40131508624953094  WHEN x'' THEN '-1773236795' WHEN x'' THEN NULL WHEN '0.39283102414340487' THEN NULL ELSE '-937968305' END WHEN (+ (0.08876258315885399)) THEN 0.28186530140761457 COLLATE NOCASE ELSE 0.034467059759180074 COLLATE RTRIM END) LIMIT 146391521; -- 1ms;
SELECT DISTINCT (((+ (t0.c0))) IS TRUE) FROM t0, vt0; -- 0ms;
SELECT DISTINCT 1.098879055E9, CASE WHEN (t0.c33 IN (t0.c33)) THEN 0.7668947933934434 END, ((((((t0.c33)OR('508236606')))AND(t0.c0)))GLOB((t0.c33 IN ()))) FROM vt0 INDEXED BY i26, t0;SELECT DISTINCT ((LOWER(t0.c33))OR(((t0.c33)<<(t0.c33)))) FROM t0, vt0 WHERE (((((((NULL)>=(x'')))OR(((0.5175515173390214) NOT BETWEEN ('uf{f') AND ('')))))OR((NULL IN ())))); -- 0ms;
SELECT ALL ('-1525324296' IN ()), ((((CAST(t0.c0 AS REAL))OR(SUM(t0.c33))))OR((((vt0.c0, t0.c0, vt0.c0, t0.c33, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c33, t0.c33, t0.c0)) AND ((vt0.c0, t0.c0, t0.c33, vt0.c0, t0.c33))))), ((((((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c0)))AND((~ (t0.c0)))))AND(CASE WHEN t0.c0 THEN 0.43959872725741844 END)) FROM t0 WHERE (CAST(((x'') IS TRUE) AS INTEGER)) GROUP BY ((((CAST(t0.c0 AS TEXT))OR(CASE WHEN t0.c0 THEN t0.c33 WHEN t0.c0 THEN t0.c33 WHEN vt0.c0 THEN t0.c0 END)))AND((NOT (t0.c33)))) HAVING CASE WHEN (((t0.c0))<((vt0.c0))) THEN ((((t0.c33)OR(t0.c33)))OR(t0.c33)) ELSE t0.c0 END;SELECT DISTINCT SUM((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) OVER () FROM t0, vt0; -- 0ms;
SELECT ALL CAST(x'' COLLATE BINARY AS REAL), ((((((t0.c0)OR(t0.c0)))AND(t0.c33)))&((((vt0.c0)) BETWEEN ((t0.c33)) AND ((t0.c33))))), LENGTH(vt0.c0) COLLATE RTRIM, ((1.636369067E9) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND ((((t0.c0, vt0.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0))))), x'0106' COLLATE RTRIM FROM vt0;SELECT CASE CAST('nc' AS REAL)  WHEN (t0.c33 IN (t0.c0, t0.c0)) THEN ABS(vt0.c0) WHEN ((t0.c0)IS(t0.c0)) THEN (vt0.c0 IN ()) WHEN (((vt0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c0))) THEN ((t0.c33)!=(vt0.c0)) END, ((0.4798093415017326 COLLATE RTRIM)<<(x'')), (+ (vt0.c0)), (((t0.c0)) NOT BETWEEN ((NULL)) AND (('-1714407952'))) COLLATE RTRIM, (+ ((vt0.c0 IN ()))) FROM vt0, t0; -- 1ms;
SELECT ALL (((t0.c33 IN ()))&(((t0.c0)+(vt0.c0)))) FROM vt0, t0 ORDER BY ((TRIM(DISTINCT t0.c0))IS(((x'')/(NULL))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((x'') ISNULL) COLLATE RTRIM FROM vt0, t0 WHERE (CASE WHEN NULLIF(0.64942737953916, x'b072') THEN ((('pc|FrieKs', 'au^&', '')) BETWEEN ((0xffffffff86644c9d, NULL, NULL)) AND ((0.29807336998545053, '-1126525975', '-1019395820'))) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t0.c33 THEN vt0.c0 END COLLATE NOCASE) OVER () FROM vt0, t0 ORDER BY CASE ((t0.c33) NOT BETWEEN (vt0.c0) AND (t0.c0))  WHEN t0.c33 COLLATE RTRIM THEN t0.c0 COLLATE BINARY ELSE CAST(t0.c33 AS TEXT) END  NULLS FIRST, (((t0.c0, t0.c0, t0.c33)) BETWEEN (((t0.c0 IN ()), ((((((((vt0.c0)AND(t0.c33)))OR(vt0.c0)))OR('')))AND(vt0.c0)), t0.c0 COLLATE RTRIM)) AND (((vt0.c0 IN (t0.c33, t0.c0)), CASE ''  WHEN vt0.c0 THEN t0.c0 WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN t0.c33 ELSE t0.c0 END, (((t0.c0, t0.c33, t0.c33, t0.c33, t0.c33)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, t0.c33, t0.c33)) AND ((t0.c0, vt0.c0, t0.c33, t0.c0, t0.c33)))))), (+ (t0.c0)) COLLATE NOCASE  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((((((vt0.c0)AND(t0.c33)))AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)) THEN t0.c33 COLLATE BINARY END, ((CASE t0.c0  WHEN vt0.c0 THEN t0.c33 WHEN t0.c33 THEN 0.5124792880895966 WHEN t0.c33 THEN t0.c0 ELSE t0.c33 END) BETWEEN (((((t0.c0)AND(NULL)))AND(vt0.c0))) AND (CAST(t0.c0 AS BLOB))), CASE WHEN (t0.c0 IN ()) THEN (((vt0.c0, vt0.c0, t0.c33))=((vt0.c0, t0.c33, vt0.c0))) ELSE ((t0.c33) NOT NULL) END FROM t0 LIMIT -1806700719;SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM FROM t0, vt0 WHERE (json_quote(((((NULL)AND('-579281677')))OR(0.29737719961588027)))) ORDER BY (((''))<=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT('-86668779') OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c0)) BETWEEN ((t0.c33)) AND ((t0.c0))) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((((vt0.c0)AND(vt0.c0)))OR(t0.c33)) THEN (t0.c33 IN ()) WHEN TRIM(DISTINCT vt0.c0) THEN ((NULL)/(t0.c0)) ELSE ((' <')<=(NULL)) END, ((t0.c0)>((((vt0.c0))<>((t0.c0))))), CASE ((vt0.c0)||(vt0.c0))  WHEN ((((t0.c33)AND(t0.c0)))AND(t0.c33)) THEN TOTAL(t0.c0) ELSE (((t0.c33))<((''))) END FROM t0 NOT INDEXED, vt0 WHERE (LIKELIHOOD(DISTINCT ((0.6653316833984207)=('즊X')), 0.8947144425791973)) ORDER BY vt0.c0, 0.39283102414340487  NULLS LAST; -- 0ms;
SELECT ALL ((((SUM(''))AND(load_extension('4>壈# lqU', vt0.c0))))AND((((t0.c33)) BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0 NOT INDEXED, vt0 WHERE ((NOT ((('-708824809') IS TRUE))));SELECT ALL CASE (vt0.c0 IN ())  WHEN ((t0.c0)>>(t0.c0)) THEN (~ (vt0.c0)) END FROM t0 NOT INDEXED;SELECT (~ (vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((((- ('Tb'))) IS TRUE)); -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST((NOT (t0.c0)) AS BLOB)) OVER () FROM vt0, t0 WHERE ((((((('1447404931')OR('')))AND(NULL)))>(CAST(7.81687259E8 AS NUMERIC)))); -- 0ms;
SELECT vt0.c0, (((0.9953327293100812)) BETWEEN ((CASE WHEN t0.c33 THEN t0.c33 ELSE vt0.c0 END)) AND (((('-843939861')<<(t0.c33))))), MAX(CAST(t0.c0 AS REAL)) FROM t0, vt0 WHERE (((((('') NOT BETWEEN (0x4a2872c6) AND ('-587077694'))))>((CAST('' AS TEXT))))); -- 1ms;
SELECT GROUP_CONCAT(-1961980863) FILTER(WHERE (((((t0.c33))=(('0.09366924344160488'))))%(CASE WHEN t0.c33 THEN vt0.c0 ELSE vt0.c0 END))) OVER ( ORDER BY (((+ (vt0.c0))) IS TRUE) ASC  NULLS FIRST) FROM t0 WHERE (CAST(CAST('-408192995' AS INTEGER) AS INTEGER)) GROUP BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c33 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)), vt0.c0, ((((t0.c0))<>((vt0.c0))) IN (TYPEOF(DISTINCT t0.c0), (- (t0.c33)))) HAVING '33812410';SELECT DISTINCT t0.c33 FROM vt0 WHERE (((('F}q%', NULL COLLATE BINARY, (('1607841486') BETWEEN (0.9396245085598718) AND (0.5496608962972709))))!=((CASE WHEN x'83ca' THEN x'' ELSE NULL END, x'' COLLATE RTRIM, CAST(0.9632911071316552 AS BLOB)))));SELECT ALL (~ (((vt0.c0) ISNULL))) FROM vt0, t0; -- 0ms;
SELECT (+ (GROUP_CONCAT(t0.c0))), ((+ (t0.c33)) IN ()), (COUNT(*) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((UNICODE(vt0.c0))<(((vt0.c0)!=(t0.c0)))), (((t0.c0) NOT BETWEEN (t0.c33) AND (t0.c33)) IN (LIKELIHOOD(DISTINCT vt0.c0, 0.21923275243056561))), ((((t0.c0)-(vt0.c0)))OR((~ (0xffffffffdb95248b)))) FROM vt0 WHERE ((NOT (NULL))) ORDER BY DATETIME(t0.c0 COLLATE NOCASE, t0.c33 COLLATE RTRIM, (((t0.c33)) BETWEEN ((t0.c0)) AND ((t0.c33)))) ASC, (t0.c0 IN ()) COLLATE BINARY DESC;SELECT ALL TOTAL(((t0.c0) ISNULL)) FROM t0 WHERE (((('F 0la', '', 0.7498465228285532)) BETWEEN ((GLOB(x'', 'vw'), json_quote(0.8075944907651754), ('S],㨃B' IN ()))) AND ((((1.466041254E9) NOT BETWEEN (x'') AND (0x2530b0b6)), SQLITE_SOURCE_ID(), NULL)))); -- 0ms;
SELECT DISTINCT ((((- (vt0.c0)), ((t0.c0) BETWEEN (t0.c33) AND (vt0.c0)), ((t0.c33)>>(vt0.c0))))>((CAST(vt0.c0 AS BLOB), ((t0.c33)IS NOT(t0.c0)), CASE vt0.c0  WHEN '6c' THEN vt0.c0 END))) FROM t0 ORDER BY (NOT ('r폙6拫'))  NULLS FIRST;SELECT DISTINCT ((t0.c33) NOTNULL) COLLATE BINARY FROM t0, vt0 WHERE (((((('1362973907') BETWEEN (0x214e605c) AND (0.15849232392068313))))>=(((('5L') NOT NULL))))); -- 0ms;
SELECT DISTINCT 'UXpKHIGX' FROM vt0 ORDER BY ((((t0.c0) NOT NULL)) ISNULL) DESC  NULLS LAST, '-497849200' DESC, ((x'') NOT BETWEEN (x'') AND (vt0.c0 COLLATE BINARY)) LIMIT -2009803814 OFFSET 746468627;SELECT ALL CAST(((vt0.c0) IS FALSE) AS NUMERIC), PERCENT_RANK() OVER (), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('')))) ISNULL) FROM t0;SELECT DISTINCT vt0.c0, x'7344', (- (MIN(t0.c33))) FROM vt0;SELECT DISTINCT CASE CAST(t0.c0 AS INTEGER)  WHEN TRIM(vt0.c0) THEN ((t0.c33) NOTNULL) ELSE (((vt0.c0))>((t0.c33))) END, CAST(t0.c0 AS NUMERIC), ((TYPEOF('600533563')) NOT NULL) FROM vt0;SELECT ALL ((((((t0.c0)AND(t0.c33)))AND(t0.c33)))>(CAST(t0.c0 AS TEXT))) FROM vt0;SELECT ALL ((TRIM(DISTINCT t0.c0, t0.c33)) ISNULL), MIN(GROUP_CONCAT(CHAR(vt0.c0))), CAST(t0.c33 AS REAL) FROM t0, vt0 WHERE (((((0.5083126593465717) ISNULL)) BETWEEN ('!' COLLATE NOCASE) AND (LIKELY(NULL))));SELECT ALL COUNT(*), highlight(((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c33)), ABS(vt0.c0), ((NULL)AND(vt0.c0)), (NOT (vt0.c0))), (((((t0.c33, vt0.c0, NULL)) BETWEEN ((vt0.c0, '', t0.c33)) AND ((t0.c0, vt0.c0, 367285787))))>=(((1404753944) BETWEEN (vt0.c0) AND (t0.c33)))) FROM t0 ORDER BY ((t0.c33) IS TRUE) COLLATE NOCASE;SELECT DISTINCT ((TRIM(t0.c0, t0.c33))>(CASE t0.c33  WHEN t0.c33 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c33 THEN 0.5846451331892462 ELSE t0.c33 END)), CAST(((vt0.c0) NOT NULL) AS INTEGER), (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND (((t0.c33 IN ())))) FROM vt0, t0 WHERE ((((('')&(x'4b9e')))<<(SQLITE_COMPILEOPTION_GET(NULL)))); -- 0ms;
SELECT DISTINCT CAST((+ (vt0.c0)) AS BLOB) FROM vt0, t0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c33)))|(ABS(DISTINCT vt0.c0))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE x'190c'  WHEN x'' COLLATE RTRIM THEN ((x'') IS TRUE) END); -- 0ms;
SELECT DISTINCT TOTAL('') OVER () FROM t0 WHERE ((((0.5603523251902861, 0.7025803285337757, '1656156248')) NOT BETWEEN ((((1762979366) IS FALSE), CASE NULL  WHEN x'' THEN x'' WHEN '0.7351080087742792' THEN '-1503848925' WHEN '234144918' THEN NULL ELSE 0.4200777585833496 END, ((508236606)!=(-416829496)))) AND ((((x'') NOT BETWEEN (-157292915) AND (x'')), ('-97564224' IN ()), (~ (x'3793')))))); -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (0xffffffffcde361fd) AND (((vt0.c0)>(vt0.c0)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT COUNT(t0.c33) OVER () FROM t0; -- 0ms;
SELECT TOTAL(MAX(((vt0.c0) NOTNULL))) FROM vt0, t0;SELECT (((t0.c0, t0.c0, t0.c33)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)), ((((t0.c0)OR(t0.c33)))OR(t0.c33)))) AND ((((t0.c33) ISNULL), (~ (t0.c33)), ((t0.c33) ISNULL)))), ((NULL IN ()) IN ()), (~ (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (0.8626605789959655);SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN (t0.c33, vt0.c0)) FROM vt0 WHERE (CASE WHEN (+ (0.3161411056877481)) THEN ((x'')>(0.0989723730884503)) ELSE x'' COLLATE RTRIM END);SELECT DISTINCT NULLIF(t0.c33 COLLATE NOCASE, 0.9625537975275277 COLLATE BINARY), ((CASE 0.9174971751226082  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)>(CASE WHEN t0.c33 THEN t0.c33 END)), (+ (t0.c0)) COLLATE BINARY FROM vt0, t0; -- 0ms;
SELECT ALL '' FROM t0, vt0 WHERE (((CAST(0X1b3d3b31 AS NUMERIC)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0))GLOB((((t0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c0))))) FROM t0 WHERE ((((('1523484454') BETWEEN (NULL) AND (x''))) NOT BETWEEN (CASE WHEN x'f7c6' THEN x'' WHEN x'' THEN '-1987982006' WHEN x'' THEN '' END) AND (((NULL) NOT BETWEEN (0.3037177951803868) AND (NULL)))));SELECT DISTINCT ((((((vt0.c0)||(t0.c0)))AND((((vt0.c0))>((t0.c0))))))AND(GROUP_CONCAT(vt0.c0))), (NOT (((t0.c0) ISNULL))), ((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c33)) COLLATE BINARY FROM t0;SELECT DISTINCT 1041884099, COUNT((~ (t0.c0))) OVER (), ((((((((LTRIM(t0.c33))OR(t0.c0)))OR((- (t0.c33)))))AND(t0.c0)))AND(CAST(t0.c33 AS NUMERIC))) FROM vt0, t0 WHERE (CAST(((0.794892135853398) BETWEEN (NULL) AND (0.17777315990331866)) AS TEXT)); -- 0ms;
SELECT DISTINCT x'' FROM vt0, t0; -- 0ms;
SELECT ALL (CAST(t0.c33 AS BLOB) IN ()) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN CAST(t0.c33 AS NUMERIC) THEN (t0.c0 IN ()) END, ((t0.c33) ISNULL), IFNULL(MAX(t0.c33, t0.c0), t0.c0 COLLATE BINARY) FROM vt0 ORDER BY (((vt0.c0, NULL, t0.c33)) NOT BETWEEN ((0.31117236108431734, json_extract(t0.c0, t0.c0), t0.c0 COLLATE RTRIM)) AND ((LIKELY(vt0.c0), CASE t0.c33  WHEN vt0.c0 THEN vt0.c0 END, t0.c33 COLLATE RTRIM))) DESC  NULLS LAST;SELECT ALL (((((t0.c0, vt0.c0, t0.c33))<=((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE) FROM t0, vt0 ORDER BY (((t0.c0)-(t0.c0)) IN ()); -- 0ms;
SELECT ALL (((TYPEOF(vt0.c0)))<=((((t0.c0)<(t0.c0))))) FROM vt0;SELECT DISTINCT (((((t0.c33))<=((t0.c33)))) IS FALSE) FROM t0 GROUP BY ((vt0.c0)-(t0.c33)) COLLATE BINARY, (((t0.c0))<=((t0.c33))) COLLATE BINARY, (((((NULL))<=((t0.c33)))) IS FALSE) LIMIT -1249982670 OFFSET 430685554;SELECT DISTINCT ((TOTAL(vt0.c0))>=(((t0.c0) NOT BETWEEN (t0.c33) AND (t0.c0)))), (t0.c0 IN ()) COLLATE NOCASE, (((~ (t0.c33)))GLOB(((t0.c0) IS TRUE))) FROM t0 WHERE (0.378785763202813);SELECT DISTINCT GROUP_CONCAT(CAST(t0.c33 AS REAL)) OVER () FROM t0, vt0 NOT INDEXED WHERE (CASE WHEN ((0.6855767874529944) ISNULL) THEN (0.11006362149267168 IN (0x5296a1a7)) WHEN NULL COLLATE BINARY THEN (((('505047223')AND(NULL)))AND(-862468611)) WHEN x'' COLLATE BINARY THEN CAST(NULL AS TEXT) END); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)<(t0.c0)) AS REAL) FROM vt0;SELECT t0.c33 COLLATE RTRIM FROM t0 WHERE ((((((x'', '-1811009507', '789264749'))<((-632121086, '~''Infinityp', 0.10724717534854122))))IS(x'' COLLATE NOCASE))); -- 0ms;
SELECT ((((vt0.c0) IS TRUE))==((((t0.c0))=((vt0.c0))))), CAST(NULL AS TEXT), COUNT(*) OVER () FROM vt0;SELECT TOTAL((NOT (vt0.c0))), ((((((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c33 END)AND(t0.c0)))OR(CASE vt0.c0  WHEN t0.c0 THEN t0.c33 END)))OR(CASE -1178681716  WHEN t0.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c0 WHEN t0.c0 THEN '-700430719' ELSE t0.c0 END)))OR((((0.2852506521355589, vt0.c0, t0.c33)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((x'', t0.c0, vt0.c0))))), GROUP_CONCAT((t0.c33 IN (vt0.c0))) OVER () FROM vt0, t0 INDEXED BY i82;SELECT ALL ((((vt0.c0)IS(t0.c33))) IS FALSE), (NOT (CASE 0.8064740784733269  WHEN vt0.c0 THEN t0.c0 WHEN t0.c33 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), COUNT(CAST(t0.c0 AS REAL)) OVER () FROM t0 WHERE ((((x'5b57')*(NULL)) IN ()));SELECT DISTINCT ((COUNT(*)) ISNULL) FROM t0 WHERE (((((0.22927013593258927) NOTNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (((NULL) NOTNULL)))) GROUP BY NULL ORDER BY (((vt0.c0 IN ()))+(CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC;SELECT ((NULLIF(t0.c0, vt0.c0))||(((t0.c0)<(t0.c33)))), CASE WHEN t0.c33 THEN t0.c0 END COLLATE BINARY, CASE CAST(t0.c33 AS NUMERIC)  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN vt0.c0 THEN ROUND(t0.c0, t0.c33) WHEN (~ ('-1815439586')) THEN IFNULL(vt0.c0, 0.5313593927945655) ELSE (+ (vt0.c0)) END FROM t0, vt0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((CAST(-144535139 AS INTEGER))) AND (((((vt0.c0, t0.c33, vt0.c0))>=((t0.c0, t0.c33, t0.c0)))))) FROM t0, vt0; -- 0ms;
SELECT ALL NTILE(NULL) OVER (), vt0.c0, (~ ((- (t0.c0)))) FROM t0 WHERE (HEX((('\') NOT BETWEEN (x'bc94') AND (0.3970364285126641)))) GROUP BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY COLLATE NOCASE, ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) ISNULL), NULL LIMIT 339695850;SELECT DISTINCT TIME(((((((((t0.c33)AND(t0.c33)))OR(t0.c33)))AND(vt0.c0)))OR(t0.c0)), CAST(t0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE) FROM vt0, t0; -- 1ms;
SELECT DISTINCT TYPEOF(7.81296188E8) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ((CAST(vt0.c0 AS REAL)) NOT NULL) FROM t0 WHERE (((json_type(x''))AND((('Ce|d') BETWEEN (0.3485328746302049) AND (x''))))) GROUP BY ((((t0.c33) BETWEEN (t0.c0) AND (t0.c0)))IS(t0.c0)) HAVING ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) ISNULL);SELECT t0.c33 COLLATE BINARY, (CASE WHEN NULL THEN t0.c0 ELSE t0.c33 END IN ()), ((((((((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0))) IS TRUE) FROM t0 WHERE ((NULL COLLATE RTRIM IN ((- (0xfffffffff7749dbb)), CASE WHEN 0.4348000429024619 THEN NULL END)));SELECT ((NULL)>>(((t0.c33) BETWEEN (vt0.c0) AND (t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT ALL TOTAL(0.1381737462171424 COLLATE RTRIM) OVER (), (((vt0.c0) NOT BETWEEN (x'') AND (t0.c33)) IN ()), ((vt0.c0 COLLATE RTRIM)<<(((vt0.c0) IS FALSE))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (vt0.c0)), CAST(t0.c33 AS REAL) COLLATE BINARY, ((((vt0.c0)+(vt0.c0)))||(t0.c33)) FROM t0 WHERE ((((((510165077)>=('0.051640873777740515'))))>=((((0.08352050621178697)<>(x''))))));SELECT DISTINCT NULL FROM t0 WHERE ((('S[k' COLLATE BINARY)AND((((NULL, x'', 7.30439862E8))!=((0.11964342654541027, '-838770721', NULL)))))); -- 0ms;
SELECT DISTINCT ((ABS(t0.c33))+(((NULL) IS FALSE))) FROM t0, vt0 WHERE (((((CASE '679694620'  WHEN x'' THEN NULL WHEN NULL THEN 0.9614208377625637 WHEN '585998720' THEN 0x2b89a0b6 END)AND(NULL COLLATE NOCASE)))OR(CASE WHEN NULL THEN NULL ELSE x'' END))); -- 0ms;
SELECT CAST((((x'')) BETWEEN ((t0.c33)) AND ((0.4008448645894823))) AS TEXT) FROM vt0 WHERE (CASE WHEN (~ ('K~')) THEN ((((((((NULL)OR(0.23105032416670357)))OR('1122349827')))OR('0.3756471767079509')))OR('730439862')) WHEN (- (0.5886024579244303)) THEN ((('57ty')) BETWEEN (('-1e500')) AND ((x''))) WHEN (('730439862') IS TRUE) THEN (('') NOT BETWEEN ('ia{IV-^') AND (x'f33c')) ELSE (0X10342be2 IN (0x18c1d31c, 0.5179083192119882)) END);SELECT ((0xffffffffb1dd109f) IS TRUE) FROM vt0, t0 WHERE (CASE WHEN ((NULL)|(0.6906110026767832)) THEN (+ ('翤}	loz8')) ELSE ((x'')<<(-623325115)) END); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 THEN (((t0.c33))<=((vt0.c0))) END FROM vt0 WHERE (x'');SELECT DISTINCT AVG(((t0.c0)IS NOT(t0.c0))) FROM vt0 GROUP BY vt0.c0 COLLATE BINARY, (((((((((NOT (vt0.c0)))AND(((((t0.c0)OR(vt0.c0)))AND(t0.c33)))))AND(NULL)))OR(CASE vt0.c0  WHEN t0.c0 THEN t0.c33 END)))AND(((t0.c33)/(t0.c33)))), t0.c33;SELECT DISTINCT ((((((((((((((vt0.c0)OR(t0.c33)))AND(x'')))OR(x'')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (t0.c33) AND (IFNULL(t0.c33, t0.c33))) FROM t0, vt0 WHERE (((TRIM(DISTINCT NULL))>((NOT (NULL))))) GROUP BY ((CAST(t0.c0 AS BLOB))>>(((vt0.c0) NOT NULL))); -- 0ms;
SELECT COUNT((+ (t0.c0))) OVER (), SUM(CAST(t0.c0 AS NUMERIC)) OVER (), x'' FROM t0 WHERE (NULL) LIMIT 1619074660 OFFSET -1298077220; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((x'46e2')) AND (((vt0.c0 IN ())))) FROM t0 WHERE ((~ (((x'')IS(NULL))))) GROUP BY ((t0.c0) BETWEEN (((t0.c33)<>(t0.c0))) AND ((((t0.c33))<((t0.c33))))) HAVING t0.c0;SELECT ALL IFNULL(DISTINCT (- (t0.c0)), ((t0.c0) BETWEEN (t0.c33) AND (vt0.c0))), CASE vt0.c0  WHEN t0.c33 THEN -1434875308 END COLLATE BINARY, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE), vt0.c0, CASE WHEN t0.c33 COLLATE BINARY THEN CASE WHEN '' THEN vt0.c0 WHEN vt0.c0 THEN t0.c33 WHEN '-175381370' THEN t0.c0 ELSE t0.c33 END END, AVG(GROUP_CONCAT(((t0.c0)&(vt0.c0)))), (((t0.c0, vt0.c0, t0.c33)) NOT BETWEEN (('-968064155', ((t0.c33) NOT BETWEEN (t0.c33) AND (t0.c0)), t0.c33 COLLATE NOCASE)) AND ((vt0.c0 COLLATE RTRIM, t0.c33, t0.c0))) FROM t0;SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN t0.c33 END FROM t0;SELECT ALL (NOT ((vt0.c0 IN ()))) FROM t0, vt0 LIMIT -781724398; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT (TRIM(t0.c0, vt0.c0) IN ()), ((t0.c0) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0)), ((LIKELIHOOD(DISTINCT vt0.c0, 0.3140695236988661))==(COUNT(t0.c33))) FROM vt0, t0 WHERE ('jm[|9CF)K'); -- 0ms;
SELECT ((((t0.c33) NOT BETWEEN (vt0.c0) AND (t0.c33))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c33)<=('0.14726242617133833')))), (CASE x'f386'  WHEN t0.c33 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((((t0.c33)IS NOT(vt0.c0)))/(((t0.c33) NOT BETWEEN (t0.c33) AND (vt0.c0)))) FROM t0;SELECT DISTINCT ((((vt0.c0) ISNULL)) NOTNULL) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c33) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((t0.c0) NOT NULL))) WHERE ((((((x'')OR(x'')))OR(x'0e42')) IN ((+ (0.7788008090889803))))) GROUP BY t0.c33; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((MAX(t0.c33))) AND (((t0.c33 IN ())))) FROM vt0, t0 WHERE (((((x'')OR(((x'') ISNULL))))OR((0.6513325715906603 IN ())))) LIMIT 716458571 OFFSET -582158970; -- 0ms;
SELECT DISTINCT (((t0.c33 IN ())) BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c33) AND (vt0.c0)))) FROM vt0 WHERE ((((0.2945744850690285)) NOT BETWEEN (((('4>壈# lqU')<=(x'')))) AND ((0.6017027289760374 COLLATE RTRIM)))) LIMIT 1577679501;SELECT ALL t0.c0 FROM vt0, t0 WHERE ((- ((('-202730379') BETWEEN (0.6330658331981318) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t0.c33 THEN t0.c33 ELSE t0.c0 END) AND (AVG(t0.c0))) FROM vt0;SELECT ALL vt0.c0 FROM t0, vt0 WHERE (CASE (('Q큄&z77') BETWEEN (x'') AND (0.7276940516423424))  WHEN (NULL IN (NULL)) THEN ('YB' IN ()) END); -- 0ms;
SELECT ((t0.c33 IN ()) IN ()), ((CASE WHEN '0.1498296152163734' THEN t0.c33 END) NOT BETWEEN ((- (t0.c0))) AND (((vt0.c0)>(t0.c0)))), (((- (vt0.c0)))>=(((t0.c0)==(t0.c33)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((t0.c33)<=(vt0.c0)) COLLATE BINARY FROM vt0, t0; -- 0ms;
SELECT ALL t0.c33 FROM t0 WHERE ((((0.43169691788468934 COLLATE NOCASE, (('>') NOT BETWEEN (x'') AND ('-1368867478')), ((((x'')AND(0.9466603875016005)))OR('㘪h?eb1NC'))))==((((NULL)OR(0xffffffffcdcb0a96)), CASE WHEN 0.609687378825622 THEN '/Z[Yi((' ELSE x'' END, (+ (0.13059463402529414)))))) GROUP BY ((((t0.c0)AND(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN t0.c33 THEN vt0.c0 ELSE t0.c33 END)), CASE CASE t0.c0  WHEN '' THEN vt0.c0 ELSE t0.c0 END  WHEN ((((((((t0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c33)) THEN CAST(t0.c33 AS REAL) END, CASE WHEN ((vt0.c0)/(t0.c0)) THEN ((t0.c33)+(t0.c33)) END;SELECT '-1109528442' FROM t0, vt0 WHERE (CAST(((751506899)LIKE('')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT MAX(((((((((x'186c')OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0))) FROM vt0, t0 WHERE (CAST(('-1274673495' IN ()) AS NUMERIC)) ORDER BY ((t0.c0 IN ()) IN ())  NULLS LAST, (((0X5ad1f625, t0.c33, t0.c33, t0.c0, t0.c0)) BETWEEN ((((t0.c33)*('p%')), t0.c0, ((t0.c33)IS('-182212363')), ((t0.c0) BETWEEN (t0.c33) AND (t0.c33)), NULL)) AND ((COALESCE(t0.c33, t0.c0), ((((vt0.c0)AND(NULL)))OR(t0.c33)), CAST(t0.c33 AS REAL), CASE WHEN t0.c33 THEN vt0.c0 WHEN t0.c33 THEN t0.c0 WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END, vt0.c0))), 0.1492761834529146; -- 0ms;
SELECT ALL TOTAL(CAST(vt0.c0 AS NUMERIC)) FROM vt0 INDEXED BY i64, t0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c33))))IS(((vt0.c0) NOTNULL))) DESC  NULLS LAST;SELECT DISTINCT ((t0.c0)&(((vt0.c0) NOTNULL))), (~ (((t0.c0)>(t0.c33)))), ((161801706)/((vt0.c0 IN ()))) FROM t0, vt0 WHERE (((((((x'')) BETWEEN ((0.5719427856113682)) AND ((NULL)))))<=(((((((((('-1273022437')OR(NULL)))AND('99022558')))AND('-1898110834')))OR('D\nFZ8}X')))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c33)>>(t0.c33)))AND(((x'') BETWEEN (t0.c0) AND (vt0.c0)))))AND(vt0.c0)))OR(ABS(DISTINCT t0.c33))))AND((+ (vt0.c0)))) FROM vt0, t0 WHERE (load_extension(((420051095) IS TRUE)));SELECT ((((((((CASE WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END)AND(t0.c33 COLLATE BINARY)))AND(x'4b3b' COLLATE NOCASE)))OR((NOT (t0.c33)))))OR(vt0.c0)), (((((vt0.c0))<((t0.c33)))) IS FALSE), ((((((((t0.c0)AND(vt0.c0 COLLATE NOCASE)))OR(((((t0.c33)OR(t0.c33)))AND(vt0.c0)))))OR(((NULL)IS NOT(t0.c33)))))AND(((t0.c0)<<(vt0.c0)))) FROM t0, vt0 WHERE (CAST(((0.03255100951127099) NOT NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((CASE t0.c33  WHEN vt0.c0 THEN t0.c33 END)>('G[')), x'9a74', (- (((vt0.c0) IS TRUE))) FROM vt0, t0 WHERE ((((((NULL))<(('v*0#kCk')))) BETWEEN ((((x'', -1.306264401E9, ''))>((0.07214157342487537, x'', 'p 2')))) AND (CAST('F{KR^}' AS BLOB)))); -- 0ms;
SELECT DISTINCT ((t0.c33 COLLATE RTRIM) NOTNULL), (((vt0.c0)>=(t0.c0)) IN ((+ (t0.c0)))), ABS(t0.c33) COLLATE RTRIM FROM vt0, t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE (((((x'c2a96102') BETWEEN ('-1882015348') AND (x'b545'))) NOT BETWEEN ((x'' IN (-1.898110834E9, 0x6b992064))) AND (UNLIKELY(-1621657499)))); -- 0ms;
SELECT DISTINCT (- ((- (t0.c33)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CAST((t0.c33 IN ()) AS REAL), (((t0.c33)) NOT BETWEEN ((((t0.c33)AND(t0.c0)))) AND ((((t0.c0)<<(vt0.c0))))), RANK() OVER () FROM vt0 NOT INDEXED, t0 GROUP BY ((TYPEOF(t0.c0)) NOT BETWEEN ((- (t0.c0))) AND (((((t0.c33)AND(t0.c33)))OR(t0.c33)))), ((((((vt0.c0)|(t0.c0)))OR((~ (t0.c0)))))AND(((vt0.c0)||(t0.c0)))), (((CAST(t0.c0 AS BLOB)))<(((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c33)))))); -- 0ms;
SELECT ALL ((((((t0.c33)OR('-92890725')))OR(t0.c0)))%(((((t0.c33)AND(t0.c33)))OR(vt0.c0)))) FROM vt0;SELECT ALL (- ((- (t0.c33)))), ((((t0.c33) NOTNULL))&(((((t0.c0)AND(t0.c33)))AND(vt0.c0)))), vt0.c0, (((vt0.c0 IN ())) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE WHEN t0.c33 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c33 THEN t0.c33 END)), ((t0.c0) NOT BETWEEN (t0.c33) AND (vt0.c0)) COLLATE RTRIM, GROUP_CONCAT(NULL) OVER (), t0.c0 FROM vt0 WHERE (((CAST('-1208015716' AS INTEGER))IS((0.8706114490557804 IN ()))));SELECT DISTINCT ((CASE WHEN t0.c0 THEN vt0.c0 END) BETWEEN (CAST(t0.c33 AS TEXT)) AND (TOTAL(t0.c0))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 GROUP BY (((NULL)) BETWEEN (((((x'')) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((vt0.c0)&(vt0.c0)))));SELECT ALL MIN(((vt0.c0) NOT BETWEEN (x'') AND (t0.c0))), ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c33 THEN t0.c33 END)!=(t0.c33 COLLATE NOCASE)), ((((t0.c0)>(t0.c0))) IS FALSE) FROM t0, vt0 WHERE ((('1171021174')GLOB(NULL)) COLLATE RTRIM COLLATE BINARY) LIMIT -1749105766; -- 0ms;
SELECT DISTINCT CAST(((((-1139085915)OR(vt0.c0)))OR(t0.c33)) AS REAL), ((((t0.c33)<(t0.c33)))=(((t0.c33) NOTNULL))), (((((vt0.c0) NOT BETWEEN (t0.c33) AND (vt0.c0))))>=(((~ (vt0.c0))))) FROM t0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))!=(((vt0.c0)OR(t0.c0)))) DESC  NULLS LAST LIMIT 1240432453; -- 0ms;
SELECT ALL t0.c33 FROM t0, vt0 WHERE (((((0.45056295537843083)/('-838770721')))<((- (NULL))))); -- 0ms;
SELECT ALL (((((('-911559782')AND(vt0.c0)))AND(vt0.c0)))/(((t0.c0)<(vt0.c0)))) FROM vt0 WHERE (((((((((((x'')AND(NULL)))OR('0.1381737462171424')))AND(NULL)))OR('!fen'))) IS TRUE)) GROUP BY t0.c33;SELECT DISTINCT CAST(NULL AS NUMERIC), HEX((0.530759537695461 IN ())), ((t0.c33) IS TRUE) FROM t0 WHERE (((-1.139085915E9) NOT BETWEEN (((((0.30529409197872803)AND(x'4228')))AND('+4'))) AND (0.24929525204652125))); -- 0ms;
SELECT DISTINCT ((SUM(vt0.c0))GLOB(CAST(t0.c33 AS BLOB))) FROM t0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)*(t0.c33)))AND(LIKELIHOOD(t0.c0, 0.16383877936372748))))AND(((t0.c0)<(t0.c0)))) WHERE (CASE WHEN x'bd81' THEN IFNULL(DISTINCT x'', x'') WHEN NULL THEN ((0.898128459445265) ISNULL) WHEN UPPER('') THEN ((x'968a') NOT BETWEEN (NULL) AND (0.088011114528465)) END); -- 0ms;
SELECT DISTINCT (((t0.c33)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (t0.c0)))) AND ((AVG(t0.c0)))), ((AVG(vt0.c0))IS(((((0X71a65cfe)AND(t0.c33)))AND(t0.c33)))), SUM(((t0.c33)*(t0.c33))) COLLATE BINARY FROM vt0 LIMIT -1534751288 OFFSET -521550076;SELECT CAST(t0.c33 AS BLOB) COLLATE NOCASE, NULL, ((((t0.c33)LIKE(t0.c0))) ISNULL) FROM t0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((t0.c33, CAST(t0.c33 AS TEXT), ((t0.c0)IS(t0.c0))))==((((((((((t0.c33)OR(t0.c0)))OR(t0.c33)))OR(t0.c33)))OR(vt0.c0)), t0.c33 COLLATE RTRIM, CASE WHEN vt0.c0 THEN t0.c33 END))) FROM vt0 GROUP BY ABS(((t0.c0)&(t0.c0))), ABS((vt0.c0 IN ())), QUOTE(((t0.c0)>=(''))), CASE WHEN CAST(t0.c0 AS BLOB) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c33 ELSE vt0.c0 END END, t0.c0;SELECT DISTINCT t0.c33, ((((vt0.c0) BETWEEN (t0.c33) AND (vt0.c0))) IS TRUE), (((t0.c33)) BETWEEN ((((t0.c0)||(t0.c0)))) AND (((~ (t0.c0))))) FROM t0 WHERE ((((- (x'f7b0'))) NOT BETWEEN (0.41867632807930233) AND (((((NULL)AND(NULL)))AND('')))));SELECT ALL COUNT(*) FILTER(WHERE ABS(((t0.c33) NOT BETWEEN (t0.c33) AND (vt0.c0)))) OVER () FROM vt0, t0 ORDER BY CAST((t0.c33 IN (t0.c0, NULL)) AS REAL) ASC  NULLS FIRST; -- 0ms;
SELECT CASE CASE 0.40947783828870987  WHEN t0.c0 THEN t0.c0 END  WHEN NULL THEN ((vt0.c0) ISNULL) ELSE t0.c0 END FROM t0 WHERE (((((-3.6364654E7)IS(x'2fb8'))) BETWEEN (CASE WHEN 0.6272452769300112 THEN NULL ELSE x'af02' END) AND (((x'') ISNULL))));SELECT t0.c0, COUNT(*), ((((t0.c0) BETWEEN (t0.c33) AND (t0.c0))) NOT BETWEEN ((~ (t0.c33))) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0, t0; -- 0ms;
SELECT CASE WHEN t0.c33 THEN t0.c0 ELSE t0.c33 END COLLATE BINARY FROM vt0, t0 WHERE (((((NULL)/(NULL))) IS TRUE)) GROUP BY ABS(CASE t0.c33  WHEN t0.c33 THEN vt0.c0 ELSE t0.c33 END); -- 0ms;
SELECT ALL ((('')) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END)) AND ((((((((((t0.c0)OR(NULL)))OR(t0.c33)))AND(vt0.c0)))AND(t0.c0))))), CASE ((vt0.c0)GLOB(vt0.c0))  WHEN ((t0.c0) BETWEEN (t0.c33) AND (t0.c0)) THEN ((t0.c0)IS NOT(vt0.c0)) ELSE ((0x6914ee26)+(t0.c33)) END, NULL FROM t0 WHERE (((CASE 0.6855767874529944  WHEN 1.762979366E9 THEN '-1211064123' ELSE NULL END) IS FALSE)) LIMIT 781296188;SELECT CAST(TRIM(t0.c0, t0.c0) AS REAL) FROM t0, vt0 WHERE ((((('z') IS TRUE))IS NOT(CASE WHEN 0.21691419244318033 THEN '1300410049' ELSE 0.7498307298820494 END))) GROUP BY ((((t0.c33)<<(t0.c33)))%(((t0.c33) ISNULL))); -- 0ms;
SELECT DISTINCT json_patch(vt0.c0, vt0.c0) COLLATE RTRIM, ((((-138607733)<=(t0.c33))) NOT BETWEEN (t0.c0) AND (CASE t0.c33  WHEN t0.c33 THEN 0X37685425 END)), (((vt0.c0)|(t0.c0)) IN ()), GROUP_CONCAT(((t0.c0)IS('-142552854'))) OVER ( ORDER BY CASE WHEN ((vt0.c0)==(t0.c0)) THEN ((vt0.c0) NOTNULL) END DESC, ((t0.c33) NOTNULL), ((((((vt0.c0) NOTNULL))OR(((((t0.c33)OR(vt0.c0)))OR(t0.c0)))))AND((((t0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t0.c33, t0.c0)))))), ((CASE WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END) ISNULL) FROM t0 WHERE (CASE WHEN -1.507996105E9 THEN '929584165' WHEN ((((-1860060878)OR('-457032227')))OR('-1961980863')) THEN ((444082167)<>('	IW鵏Bi')) WHEN 0.03306151692442061 COLLATE BINARY THEN ('' IN ()) END) ORDER BY (+ ((vt0.c0 IN (t0.c33))))  NULLS LAST, x'' DESC  NULLS FIRST;SELECT DISTINCT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-829437250'))) IN (NULLIF(t0.c0, '929584165'))) FROM vt0 WHERE (((((NULL)AND(UNLIKELY(0X8b9c1e1))))OR(((0.2579626426530861)||(0.6458692803562217))))) GROUP BY (x'' IN ());SELECT ((((((vt0.c0) IS FALSE))AND(t0.c33)))AND(t0.c0 COLLATE RTRIM)), ((((CAST(vt0.c0 AS INTEGER))OR(0Xffffffffec913b2b)))OR(((t0.c33)LIKE(t0.c0)))), NULL FROM vt0;SELECT DISTINCT x'b017', (CASE t0.c33  WHEN vt0.c0 THEN t0.c33 WHEN t0.c0 THEN t0.c33 WHEN vt0.c0 THEN t0.c0 END IN ()), ((((t0.c33)OR(vt0.c0))) IS FALSE) FROM vt0, t0 WHERE (HEX((('') NOT NULL))); -- 0ms;
SELECT DISTINCT CASE (t0.c0 IN ())  WHEN t0.c33 COLLATE NOCASE THEN ((vt0.c0)*(vt0.c0)) END FROM vt0 WHERE ((((NULL) BETWEEN (0.7673443703009756) AND ('')) IN ()));SELECT CAST(((vt0.c0)>>(t0.c0)) AS REAL) FROM t0 WHERE (CASE WHEN ((0.8448529081122563) IS FALSE) THEN ((-1.965202612E9)LIKE('2130341246')) END);SELECT DISTINCT ((CAST(t0.c33 AS REAL)) NOT BETWEEN (((t0.c0) ISNULL)) AND (((((t0.c0)AND(vt0.c0)))OR(t0.c0)))) FROM t0, vt0 WHERE (CASE '-497849200'  WHEN (+ (NULL)) THEN (+ (NULL)) END) ORDER BY 0.7015344445044472  NULLS LAST, ((-1664917322) BETWEEN ((t0.c33 IN ('655433586', t0.c33))) AND (((t0.c33)GLOB(t0.c0)))); -- 1ms;
SELECT ((0x4b0cd044) IS FALSE) FROM vt0, t0; -- 0ms;
SELECT ALL CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS REAL), ((((t0.c33) NOT NULL)) BETWEEN (t0.c33 COLLATE RTRIM) AND (((vt0.c0) ISNULL))), t0.c33, (CHAR(t0.c0, t0.c33, t0.c0) IN ((('')&(t0.c33)))), NULL COLLATE BINARY FROM vt0 WHERE ((CAST(0.0972102308134698 AS NUMERIC) IN ()));SELECT NULL FROM vt0; -- 0ms;
SELECT ALL (((t0.c0) IS FALSE) IN ()) FROM t0, vt0 EXCEPT SELECT DISTINCT ((((t0.c33)>(t0.c0))) BETWEEN (TYPEOF(t0.c0)) AND ((((t0.c0))==((t0.c0))))) FROM t0, vt0 LIMIT -1860060878; -- 0ms;
SELECT ALL ((((t0.c0) BETWEEN (t0.c33) AND (vt0.c0)))!=(GROUP_CONCAT(vt0.c0))), t0.c0, SUM(CASE WHEN vt0.c0 THEN '204615920' WHEN t0.c0 THEN t0.c33 WHEN 735023500 THEN vt0.c0 END) OVER () FROM vt0;SELECT DISTINCT CAST((t0.c33 IN ()) AS NUMERIC) FROM vt0, t0 ORDER BY ((((vt0.c0)==(t0.c0)))+(CAST(t0.c0 AS BLOB))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0) IS TRUE)) FROM vt0, t0 INDEXED BY i82 WHERE (((0.36986743551157386 COLLATE RTRIM)*(((NULL) ISNULL))));SELECT ((((('Q4')OR(t0.c0)))OR(t0.c33)) IN (x'')) FROM t0, vt0 WHERE (((((-1.211064123E9)>=('-86668779')))&(1762979366 COLLATE NOCASE))) ORDER BY x'' DESC; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) BETWEEN (t0.c33) AND (t0.c0)) AS TEXT) FROM vt0, t0 ORDER BY (((((vt0.c0 IN ()))OR(((t0.c0)<<(t0.c33)))))AND((+ (t0.c33)))) DESC; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE BINARY AS TEXT), (((~ (NULL))) NOT NULL), CASE WHEN ((t0.c0) NOTNULL) THEN ((vt0.c0)%(t0.c0)) END FROM vt0, t0 GROUP BY CAST(((t0.c0)IS(vt0.c0)) AS REAL), ((((544707073)OR(IFNULL(vt0.c0, vt0.c0))))AND(((t0.c33)>>(t0.c0)))), CAST(((vt0.c0)==(t0.c0)) AS NUMERIC); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (t0.c33, t0.c0)))IS(((NULL)LIKE(t0.c33)))) FROM t0, vt0 LIMIT 1775922802; -- 0ms;
SELECT ALL ((CAST(t0.c33 AS REAL))&((~ (t0.c0)))) FROM vt0 ORDER BY ((t0.c0 COLLATE NOCASE)!=('0.03255100951127099')) DESC  NULLS FIRST;SELECT DISTINCT (+ ((t0.c33 IN ()))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((~ (t0.c33)))OR(CAST(t0.c0 AS NUMERIC))))OR(((t0.c33)|(NULL)))))OR(SUBSTR(vt0.c0, t0.c33))))OR(t0.c33 COLLATE BINARY)) FROM t0 WHERE (((UNLIKELY('')) NOT BETWEEN (((((x'7bc7a1b8')OR(x'9e23')))OR(x'11bc'))) AND (CAST(-202730379 AS TEXT))));SELECT DISTINCT NULL, (((+ (t0.c33)))>(0.33905266699167835)), ((CASE WHEN t0.c0 THEN t0.c33 END)==(CASE t0.c33  WHEN t0.c33 THEN vt0.c0 WHEN t0.c0 THEN t0.c33 WHEN NULL THEN t0.c33 ELSE vt0.c0 END)) FROM t0, vt0 WHERE ((((((0.530759537695461))>=((NULL)))) NOT NULL)) ORDER BY CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c33) NOTNULL) ELSE ((vt0.c0)<=(t0.c0)) END  NULLS LAST, ((((((t0.c0)OR(t0.c0)))AND(t0.c33)))OR(t0.c33)) ASC  NULLS FIRST, ((((((x'')OR(t0.c0)))OR(t0.c33)))LIKE(t0.c0)) LIMIT 945304912; -- 0ms;
SELECT DISTINCT ((((t0.c33)=(vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (LIKELY(DISTINCT t0.c33))) FROM t0 WHERE (((((x'6760') IS TRUE)) NOT NULL));SELECT DISTINCT ((((t0.c33) IS TRUE))<<(((t0.c0) NOT NULL))), SUM(DATE(vt0.c0, t0.c0, t0.c0)) FILTER(WHERE ((((t0.c33)LIKE(vt0.c0)))/(((t0.c33)||(1.641362348E9))))) OVER ( ORDER BY vt0.c0 COLLATE NOCASE), x'' FROM t0, vt0 WHERE (((((x'209b')<<(x''))) ISNULL)); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ALL (- (CAST(t0.c0 AS BLOB))), GROUP_CONCAT(((((((((vt0.c0)OR(t0.c33)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c0))) OVER ( PARTITION BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (json_object(t0.c0, t0.c0)) AND (CAST(t0.c33 AS REAL))), CAST(((((((((((((t0.c33)OR(t0.c33)))AND(t0.c33)))OR(vt0.c0)))AND(t0.c0)))AND(t0.c33)))AND(vt0.c0)) AS REAL), (((((vt0.c0))>=((vt0.c0))))==(vt0.c0 COLLATE RTRIM)), ((t0.c33) NOT NULL) COLLATE RTRIM), (- (TOTAL(t0.c0))) FROM t0, vt0;SELECT SUM(CAST(t0.c33 AS TEXT)) OVER ( PARTITION BY CASE WHEN CAST(t0.c0 AS TEXT) THEN (t0.c33 IN ('')) WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) THEN UNLIKELY(t0.c0) WHEN ((vt0.c0) NOTNULL) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0)>=(t0.c0)) END, ((((vt0.c0)IS(t0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0 COLLATE NOCASE))), ((t0.c0) NOT BETWEEN (t0.c33) AND (vt0.c0)) COLLATE RTRIM, (CAST(x'008a5023' AS REAL) IN ()) FROM vt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL));SELECT DISTINCT (((CASE WHEN t0.c0 THEN t0.c33 END, (~ (NULL)), CASE WHEN t0.c33 THEN vt0.c0 WHEN t0.c0 THEN NULL WHEN '1768052762' THEN t0.c33 ELSE t0.c33 END))<>((((t0.c33)AND(0.6855767874529944)), t0.c33 COLLATE BINARY, '1387167358'))) FROM vt0, t0; -- 0ms;
SELECT '-1811009507' FROM vt0, t0 WHERE (((CAST(-1.7538137E8 AS BLOB))/('-1608056157' COLLATE BINARY))); -- 0ms;
SELECT (- (((((t0.c33)AND(t0.c0)))AND(t0.c0)))) FROM t0 WHERE (((NULL COLLATE NOCASE)%(CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))GLOB(((0.3471526124535421)>>(t0.c33)))), AVG(x'8924') OVER ( ORDER BY (((t0.c0 IN ()))||(((vt0.c0)<(t0.c33)))) ASC), FIRST_VALUE((((+ (t0.c0)))=((((NULL, vt0.c0, vt0.c0, t0.c33, t0.c33)) NOT BETWEEN ((t0.c33, vt0.c0, vt0.c0, t0.c33, vt0.c0)) AND ((t0.c33, t0.c33, vt0.c0, t0.c0, vt0.c0)))))) OVER () FROM t0, vt0 WHERE ((((((((((('')/(0.1574300136278608)))AND((8.84362977E8 IN (0X8814481, 0.5331744230236678)))))OR(UNLIKELY(0X250d41c8))))OR((- ('-1507996105')))))OR(((0.9315661931176678)||(''))))); -- 3ms;
SELECT ALL vt0.c0, (((t0.c33 COLLATE RTRIM, INSTR(vt0.c0, t0.c0), '/.', ABS(DISTINCT t0.c0), CASE WHEN t0.c33 THEN vt0.c0 ELSE t0.c33 END, (((t0.c0))<((t0.c33))), vt0.c0 COLLATE NOCASE))<=((((vt0.c0) NOTNULL), NULL, CAST(vt0.c0 AS TEXT), TOTAL(t0.c0), HEX(t0.c33), t0.c0 COLLATE RTRIM, (~ (vt0.c0))))), ((CASE WHEN t0.c33 THEN vt0.c0 WHEN 0.2649625792350626 THEN t0.c33 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE) FROM vt0, t0; -- 1ms;
SELECT ALL LEAD(json_insert((((t0.c0))<=((vt0.c0))), ((t0.c0) NOT NULL), t0.c0 COLLATE RTRIM), ((((t0.c33)+(t0.c0))) IS TRUE), ((0.6359630849105806) BETWEEN ((t0.c0 IN ())) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c33))))) OVER ( ORDER BY CASE WHEN t0.c33 COLLATE NOCASE THEN NULL END) FROM vt0, t0 WHERE ((((('f{kr^}') ISNULL)) NOT NULL)) EXCEPT SELECT ALL ROUND((((t0.c33)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE NOCASE) FROM vt0;SELECT ROW_NUMBER() OVER (), ((((((((COUNT(*))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND((('1390548318')IS NOT(vt0.c0)))))AND(t0.c0)))AND(vt0.c0)), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c33))))*(t0.c0)) FROM t0, vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (t0.c33) AND (t0.c33))) IS FALSE), ((((vt0.c0)<<(t0.c0))) IS TRUE), (~ (t0.c33)) COLLATE BINARY FROM vt0 WHERE (((((0.25548499494030175)OR(-708824809)))AND(x'')) COLLATE BINARY) LIMIT -33251583;SELECT COUNT(*) FROM t0 WHERE (((CAST('|\r3?JD~C>' AS BLOB))>=(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (t0.c33 COLLATE RTRIM IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((NOT (t0.c33)))) AND ((UNLIKELY(DISTINCT t0.c33)))) FROM vt0 WHERE (CASE -2.125261148E9  WHEN CAST('U^' AS INTEGER) THEN ((('-588337820')) NOT BETWEEN (('-1961980863')) AND ((NULL))) WHEN ((0.19133093610097573) NOT BETWEEN (1636369067) AND (NULL)) THEN ((('\r᳚_㡟')) BETWEEN ((NULL)) AND ((x'196b'))) WHEN (- ('0.08676735307038885')) THEN (((NULL)) BETWEEN ((NULL)) AND ((NULL))) WHEN ((((((((0.14444288113024228)AND(1874683102)))AND(0.3616990890168582)))OR(x'b763')))OR('301512765')) THEN (('LM]^J1')%(0xffffffffcbd59d9f)) WHEN ((0.6653316833984207)%('zc')) THEN ((0.7647890416903933)!=(0.6440602711508571)) END) ORDER BY ((CAST(t0.c0 AS TEXT))-(CAST('-2137708996' AS BLOB))) DESC  NULLS LAST;SELECT DISTINCT ((t0.c0)==(((t0.c0)/(t0.c0)))) FROM t0 NOT INDEXED, vt0 WHERE (CASE ((x'') IS FALSE)  WHEN CASE WHEN NULL THEN NULL WHEN x'0591' THEN 0.4968895188332437 WHEN x'36cd' THEN '-875192929' ELSE 0.19211522658106017 END THEN CAST('0.5603523251902861' AS INTEGER) WHEN ('' IN (0.6488892620874777)) THEN ((((x'8fe3')AND('')))AND(x'cdd8')) WHEN CASE '1523484454'  WHEN 0.7981992325975823 THEN 'gJ1' END THEN ((0.8641747722346034)==(0.7163017320952609)) WHEN ((((-1.791731157E9)AND('-500468394')))AND(NULL)) THEN CASE 'ySBcTv3}{'  WHEN x'' THEN x'2049' WHEN '-1066508086' THEN 0.1383680631160954 WHEN NULL THEN 0.18574226314345654 END WHEN 'F~a' COLLATE BINARY THEN (('526968188')==('928360657')) ELSE CAST(NULL AS NUMERIC) END); -- 0ms;
SELECT DISTINCT ((((TRIM(t0.c33, t0.c0))AND(vt0.c0)))AND(((t0.c0)||(t0.c33)))), (- ((vt0.c0 IN ()))), CASE WHEN ((t0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) THEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM t0, vt0 WHERE (((NULL COLLATE RTRIM)%(((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((((t0.c0)IS NOT(t0.c0)))AND((t0.c0 IN ()))))OR((((t0.c0))<>((vt0.c0))))) FROM vt0, t0 WHERE (((((((((((0.730728302985586)OR(NULL)))OR('x''\n~z\r')))AND(NULL)))AND(NULL)))%(CASE '-1204566864'  WHEN x'' THEN x'' END))); -- 0ms;
SELECT ((5.13567516E8) IS TRUE) FROM vt0; -- 0ms;
SELECT FIRST_VALUE(t0.c33) OVER () FROM t0 WHERE (((((((((MIN(NULL, '-44421363'))AND(LIKELIHOOD(NULL, 0.007785821737183007))))OR(CAST('' AS REAL))))AND((+ (x'6fa9')))))OR((('623708640') IS TRUE)))); -- 4ms;
SELECT CAST((vt0.c0 IN ()) AS BLOB), t0.c33, CASE t0.c0  WHEN t0.c0 THEN 0.5501589829749453 ELSE vt0.c0 END COLLATE NOCASE FROM vt0 UNION SELECT ABS(((((((((vt0.c0)AND(t0.c33)))AND(t0.c0)))AND(t0.c0)))OR(t0.c33))), CASE WHEN vt0.c0 THEN CASE t0.c33  WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c33)%(t0.c33)) END, ((((vt0.c0)GLOB(t0.c33)))%(t0.c0 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT ((((t0.c33) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((t0.c33)-(t0.c33))) AND ((vt0.c0 IN (t0.c0, vt0.c0)))), json_patch(-1.274673495E9, CAST(t0.c33 AS TEXT)), (((((vt0.c0)>(t0.c33)), ((((vt0.c0)OR(NULL)))OR(t0.c0)), CASE t0.c33  WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END))==((((vt0.c0)LIKE(vt0.c0)), (((t0.c33)) NOT BETWEEN ((t0.c33)) AND ((vt0.c0))), ((t0.c0)OR(vt0.c0))))) FROM t0, vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((((t0.c33)) BETWEEN ((vt0.c0)) AND ((t0.c33))))))AND((t0.c33 IN ())));SELECT ALL CASE WHEN ((((t0.c33)AND(vt0.c0)))OR(vt0.c0)) THEN (- (vt0.c0)) WHEN t0.c33 THEN ((t0.c0)<(t0.c0)) WHEN ((t0.c33) NOT BETWEEN (t0.c33) AND (vt0.c0)) THEN (t0.c33 IN (t0.c0)) END FROM vt0;SELECT ((TRIM(vt0.c0))IS NOT(((t0.c33)AND(t0.c0)))), CASE ((t0.c0)+(t0.c33))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c33 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c33 THEN t0.c33 END THEN ((((t0.c33)AND(NULL)))OR(vt0.c0)) END, ((vt0.c0 IN ()) IN (((t0.c33)GLOB(vt0.c0)))) FROM t0;SELECT ALL ((vt0.c0 COLLATE RTRIM)<(((t0.c0)>=(t0.c33)))) FROM vt0 WHERE (((((highlight(x'', x'7274', x'b2a0', NULL))OR((1.390548318E9 IN ()))))OR(CAST(x'e6eb' AS REAL)))) LIMIT 744577248 OFFSET -1216844887;SELECT DISTINCT CAST(((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) AS REAL) FROM t0, vt0; -- 0ms;
SELECT CAST(((((t0.c33)AND(t0.c0)))OR(vt0.c0)) AS INTEGER) FROM t0, vt0 WHERE (CAST(0.48856675484858025 AS TEXT) COLLATE RTRIM) ORDER BY ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c33))) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)|(t0.c33)))OR('-1289985013')))OR(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((((CAST('j⯢mp' AS TEXT)))<>(((('-1811009507') BETWEEN ('-838770721') AND (NULL))))));SELECT DISTINCT COUNT(x'') FROM t0 WHERE (CAST(NULL AS BLOB)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))*('8]' COLLATE RTRIM)) FROM t0 WHERE ((((((0.378785763202813))>=((x'')))) NOT NULL)) LIMIT -120470109 EXCEPT SELECT CAST('-2052545643' AS REAL) COLLATE BINARY FROM t0 WHERE ((+ ((+ (0.11017273821035134)))));SELECT DISTINCT ((((t0.c0)+(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(0Xfffffffffd5a2f0d AS BLOB))) FROM vt0;SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN (((vt0.c0))=((t0.c33))) THEN (((NULL)) BETWEEN ((vt0.c0)) AND ((t0.c33))) ELSE (t0.c33 IN ()) END FROM t0;SELECT DISTINCT CASE WHEN CASE 0x2ab44a4b  WHEN vt0.c0 THEN t0.c33 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' END THEN ((((vt0.c0)OR(t0.c33)))OR(t0.c33)) WHEN (((t0.c33)) NOT BETWEEN ((t0.c33)) AND ((t0.c33))) THEN ((t0.c33)<<(t0.c0)) WHEN (~ (0xffffffff9f09f0ac)) THEN ((t0.c0)LIKE(t0.c33)) WHEN json_array_length(t0.c0, vt0.c0) THEN MAX(t0.c33) WHEN ((t0.c0)GLOB(t0.c33)) THEN ((((t0.c33)AND(vt0.c0)))OR(vt0.c0)) END FROM t0 WHERE (CAST('-139903890' COLLATE BINARY AS TEXT));SELECT DISTINCT TOTAL(CASE WHEN t0.c0 THEN vt0.c0 END) OVER () FROM vt0 WHERE ((('0.959567582147861' COLLATE RTRIM)GLOB((('Q큄&z77')>>(NULL)))));SELECT ALL ((((vt0.c0)AND(CAST(vt0.c0 AS TEXT))))AND(x'')) FROM vt0, t0 LIMIT -772399786 OFFSET -2096017917; -- 0ms;
SELECT CASE WHEN '-579281677' THEN COALESCE(t0.c0, t0.c0) ELSE ((((t0.c33)OR(t0.c0)))AND(vt0.c0)) END FROM t0 WHERE (((((((0Xfffffffff1801605)AND('-1580274056')))AND(0.029780828857768782))) BETWEEN (CAST(0.4324141177094295 AS REAL)) AND (((('623947958'))=(('-1293089067')))))) LIMIT 1641362348 OFFSET 623708640;SELECT (x'd12b' IN (((0.48529714422144843) NOT BETWEEN ('1390548318') AND (t0.c33)))), CAST((t0.c0 IN ()) AS BLOB), ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c33 THEN x'' END) IS TRUE) FROM vt0, t0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) GROUP BY ((((t0.c33)AND(LAST_INSERT_ROWID())))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c33 THEN t0.c0 ELSE t0.c0 END)), CAST(ABS(vt0.c0) AS REAL), t0.c33 COLLATE NOCASE HAVING MAX(((((vt0.c0)OR(vt0.c0)))OR(t0.c33))); -- 0ms;
SELECT (~ ((- (t0.c0)))) FROM vt0 INDEXED BY i82, t0;SELECT DISTINCT ((((t0.c0)IS NOT(t0.c33)))<<(AVG(vt0.c0))) FROM vt0, t0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 INDEXED BY i26;SELECT ALL CAST(CAST(t0.c0 AS REAL) AS NUMERIC) FROM t0, vt0 WHERE (((x'')>(-4.16829496E8)) COLLATE NOCASE); -- 1ms;
SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c33)) AND ((t0.c33))))OR(0.9888681344647369)))OR(CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE ((((((((((((0X58c7f71, 0.24709405053140665, NULL))>=(('胉', x'', -1.965202612E9))))AND(((0x61438441)%(NULL)))))AND(((0X2f99608)>=('/+p/Yd')))))AND(((NULL)OR(x'')))))OR(x'' COLLATE BINARY))); -- 0ms;
SELECT GROUP_CONCAT((NULL IN ())) OVER () FROM t0 WHERE (CASE ((((0.40195096926921015)OR(NULL)))AND(0.6269405197772494))  WHEN (('') NOT NULL) THEN ABS(DISTINCT x'') WHEN COALESCE(x'', x'') THEN (('574458394') IS FALSE) WHEN x'' COLLATE BINARY THEN ((-2.147408355E9) BETWEEN (NULL) AND (x'')) END) GROUP BY 0.47141492388547246, CASE ((((vt0.c0)OR(t0.c33)))AND(0.9278715471623824))  WHEN (- (t0.c0)) THEN ((((t0.c0)AND(t0.c0)))OR(t0.c33)) ELSE ((t0.c0)%(vt0.c0)) END, ((((CASE t0.c33  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c33 THEN vt0.c0 END)AND(x'')))AND(CAST(t0.c0 AS TEXT)));SELECT DISTINCT ((UNLIKELY(DISTINCT t0.c33)) NOTNULL) FROM vt0 WHERE (2140551621);SELECT ALL CAST(((t0.c0) NOTNULL) AS INTEGER) FROM vt0, t0 WHERE (((NULL)IS NOT(CASE WHEN x'd4f6' THEN x'6b11' END))); -- 0ms;
SELECT DISTINCT ((((((((((((t0.c0)OR(t0.c33)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR((((t0.c0, t0.c0, t0.c0))>((vt0.c0, t0.c33, t0.c0))))))OR(LOWER(t0.c33))) FROM t0, vt0; -- 0ms;
SELECT (ABS(t0.c33) IN ()) FROM t0 WHERE (((((NULL)IS('508236606')))<<(TRIM(NULL)))); -- 0ms;
SELECT DISTINCT (MIN(t0.c33) IN ()) FROM t0 WHERE (CASE WHEN (('') NOTNULL) THEN (('') BETWEEN (-1141152354) AND (NULL)) ELSE (((x'', 0.7107094910643805, 0Xffffffffc3417aae, 0.6903512613049887, NULL))>=(('f1᭓\M', NULL, 0.6218738062338126, x'', '146391521'))) END); -- 0ms;
SELECT (- (LOWER(t0.c33))) FROM t0 WHERE ((+ ('ꑼ?.(젲' COLLATE BINARY))); -- 0ms;
SELECT ((((CAST(t0.c0 AS INTEGER))OR(t0.c33)))AND(((t0.c33)%(t0.c33)))) FROM vt0, t0 WHERE (((x'' COLLATE BINARY) BETWEEN ((- (0.9006270790983817))) AND (CASE WHEN x'db8e' THEN x'a59b' END))) GROUP BY (((t0.c0, 0.3326522521848684, 0.6384557110586191)) BETWEEN ((x'b5c6', t0.c33, vt0.c0)) AND ((t0.c0, t0.c0, vt0.c0))) COLLATE NOCASE COLLATE NOCASE, ((+ (t0.c0)) IN ()), ((t0.c0 COLLATE NOCASE) ISNULL); -- 3ms;
SELECT DISTINCT LAG((- (((0.3781813437254292) IS FALSE))), (TRIM(t0.c0, t0.c33) IN (CASE t0.c0  WHEN t0.c33 THEN t0.c33 ELSE t0.c0 END, CASE t0.c0  WHEN 0X35cf43ed THEN t0.c0 WHEN t0.c0 THEN t0.c33 WHEN t0.c0 THEN t0.c33 END)), ((((((((((t0.c0)/(0.8881814834452267)))AND(DATE(t0.c33, t0.c33, x''))))OR(ABS(DISTINCT t0.c33))))OR(CASE WHEN t0.c33 THEN t0.c0 END)))AND(((t0.c33)||(t0.c0))))) OVER () FROM t0 WHERE (x'7075'); -- 0ms;
SELECT ALL DATETIME(t0.c33, vt0.c0, vt0.c0, t0.c33, vt0.c0) COLLATE BINARY FROM vt0 WHERE ((((((('-755963136')OR(0Xffffffff940e301d)))AND(0Xffffffffd9ef8191))) NOT BETWEEN (((((x'')OR('-1878359382')))AND('3/c'))) AND ('' COLLATE NOCASE))) INTERSECT SELECT ALL LAST_VALUE((((+ (vt0.c0)))>>(((t0.c0)|(t0.c0))))) OVER () FROM t0, vt0 INDEXED BY i64 WHERE (CASE WHEN ((0.6505255827056521)&(-1791731157)) THEN ((x'')LIKE(315351295)) END);SELECT ALL CASE WHEN CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c33 END THEN (+ (t0.c33)) WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c33)) WHEN t0.c33 THEN t0.c33 ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN t0.c33 THEN vt0.c0 WHEN vt0.c0 THEN '1669233153' ELSE t0.c33 END END FROM vt0, t0 WHERE ((((- ('ot\n')))+((0.9612102890950665 IN ())))); -- 0ms;
SELECT DISTINCT (((((((vt0.c0))<((t0.c33))))AND(t0.c0)))AND(((t0.c33) ISNULL))) FROM t0, vt0; -- 0ms;
SELECT CAST(t0.c33 AS REAL) COLLATE RTRIM, AVG(((t0.c33) BETWEEN ('884362977') AND (vt0.c0))) OVER (), '' FROM vt0, t0; -- 1ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) COLLATE RTRIM FROM t0, vt0; -- 0ms;
SELECT ALL (NOT (-638697944)) FROM t0, vt0 WHERE ((((0.2148088330985094)) NOT BETWEEN ((CASE 0x6e8284f7  WHEN '939247936' THEN NULL WHEN '0.9935019486507555' THEN NULL WHEN '572972272' THEN 0X73251892 ELSE '' END)) AND (((((-0.0, x'2970b91f', '1442720526'))!=(('/\r~\^c_%u', NULL, 0.5846451331892462))))))) ORDER BY vt0.c0 ASC; -- 0ms;
SELECT TOTAL(((t0.c0) NOT BETWEEN (t0.c33) AND (t0.c33))) OVER (), (((((t0.c33))==((t0.c33))))>>(CAST(t0.c33 AS INTEGER))), CAST(((t0.c0)<(t0.c33)) AS NUMERIC) FROM t0, vt0 WHERE ('-1542048795'); -- 0ms;
SELECT DISTINCT SUM(CAST(t0.c0 AS TEXT)) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), ((SUM(t0.c0)) NOTNULL), ((((vt0.c0)>=(t0.c0)))|(((t0.c33)OR(vt0.c0)))) FROM t0, vt0; -- 0ms;
SELECT ALL TRIM(TRIM(DISTINCT t0.c33)), CAST(t0.c0 COLLATE RTRIM AS NUMERIC), (((t0.c33, vt0.c0, t0.c0)) NOT BETWEEN ((((t0.c33) NOTNULL), t0.c33 COLLATE RTRIM, (vt0.c0 IN (vt0.c0, t0.c33)))) AND ((SQLITE_VERSION(), ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0Xffffffffe808037f))) FROM vt0;SELECT ALL (((-1.434875308E9, t0.c33, vt0.c0)) NOT BETWEEN ((TOTAL(t0.c0), '-1507996105', ((t0.c0)=(t0.c0)))) AND ((((vt0.c0)&(t0.c0)), (+ (t0.c0)), ((vt0.c0)<<(t0.c33))))), CAST(CASE WHEN t0.c0 THEN t0.c33 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS REAL), CAST(MAX(t0.c33) AS REAL) FROM t0, vt0 WHERE (((('3')<(0.9261255259484088)) IN ())) ORDER BY (((vt0.c0, 'jI', t0.c0, t0.c0, t0.c0)) BETWEEN ((0.5083126593465717, ((t0.c0)<<(vt0.c0)), ((x'')||(t0.c0)), t0.c33, GLOB(vt0.c0, 1828344337))) AND ((CASE vt0.c0  WHEN 0Xfffffffffad58a15 THEN vt0.c0 ELSE t0.c33 END, vt0.c0, t0.c0 COLLATE BINARY, '-1249982670' COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, (~ (1520851449)) COLLATE RTRIM ASC  NULLS LAST, (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((TRIM(DISTINCT t0.c33, t0.c0)))); -- 0ms;
SELECT DISTINCT ('-191401024' IN ()), NULL, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (t0.c33 COLLATE RTRIM)) FROM t0 WHERE ((((- (0.4598455044701948))) NOT NULL));SELECT MIN((((vt0.c0)) BETWEEN ((t0.c33)) AND ((t0.c0)))), (t0.c33 IN (t0.c33)) COLLATE BINARY, ((CASE WHEN t0.c33 THEN '' ELSE t0.c33 END)<>(((vt0.c0) IS TRUE))), NULL, x'1bad' FROM vt0 WHERE (((((((((((0.13221424876037746) NOT BETWEEN (NULL) AND ('')))OR(load_extension('-1139085915', 0.43759332222337244))))AND(CAST('-1367011385' AS BLOB))))OR(CAST(0.791856013755651 AS TEXT))))OR(((NULL) NOT NULL))));SELECT ALL ((((((vt0.c0)>>('-1638854570')))AND(CAST(t0.c33 AS REAL))))OR(((((t0.c33)AND(t0.c33)))OR(t0.c33)))) FROM t0, vt0 WHERE ((((NULL)) BETWEEN (((((('9223372036854775807')OR(-1.91401024E8)))AND(0.2563229044768609)))) AND ((LIKE(-1292212517, x'', '0'))))) LIMIT -2106203663; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) IS FALSE) FROM t0 ORDER BY (NOT ((((vt0.c0))=((t0.c33)))))  NULLS LAST;SELECT DISTINCT ((((((((((t0.c0)OR(t0.c0)))AND((+ (vt0.c0)))))AND(json_array_length(NULL))))OR(((((((((vt0.c0)AND(vt0.c0)))AND(t0.c33)))OR(vt0.c0)))OR(vt0.c0)))))OR(((t0.c33) BETWEEN (vt0.c0) AND (t0.c0)))), vt0.c0, json_insert(COUNT(*), (t0.c33 IN (t0.c0)), vt0.c0) FROM vt0 WHERE (UNLIKELY(CAST(0.43188634545019333 AS NUMERIC))) ORDER BY IFNULL(DISTINCT t0.c33, vt0.c0) COLLATE RTRIM ASC  NULLS FIRST, ((COALESCE(vt0.c0, t0.c33)) IS TRUE)  NULLS LAST;SELECT ALL ((UPPER(vt0.c0)) BETWEEN (AVG(vt0.c0)) AND (CASE WHEN t0.c0 THEN vt0.c0 END)) FROM vt0, t0 WHERE ((((0.5942352427720818 COLLATE BINARY))>=((CAST(NULL AS REAL))))); -- 0ms;
SELECT DISTINCT ((CASE t0.c33  WHEN t0.c33 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE), (((((((('+X')AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c33)) COLLATE BINARY, ((CAST(vt0.c0 AS BLOB)) IS TRUE) FROM vt0, t0 WHERE ((((x'', NULL, 0.38993658225860917)) BETWEEN ((UNLIKELY(DISTINCT x''), (('')-(x'')), '-0.0' COLLATE NOCASE)) AND (((('1041884099') ISNULL), (+ ('513567516')), NULL COLLATE NOCASE)))); -- 4ms;
SELECT DISTINCT CAST(CAST(t0.c33 AS REAL) AS TEXT), COALESCE(load_extension(vt0.c0, t0.c33), (~ (t0.c0))), (((t0.c0)) BETWEEN ((t0.c33)) AND ((TOTAL(t0.c33)))) FROM vt0;SELECT CAST(t0.c0 AS BLOB) FROM t0 WHERE (((((NULL) NOTNULL))OR((('-770485785')>=(x''))))) LIMIT -1623542037 OFFSET 43298681; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END AS BLOB) FROM vt0, t0 ORDER BY CAST(vt0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((((((((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c33)))AND(t0.c33)))AND(0.2022697933284312)) COLLATE RTRIM, TOTAL((((0.03255100951127099)) BETWEEN ((vt0.c0)) AND (('}(D9*(a_')))) OVER (), (((t0.c33 IN ())) NOT NULL) FROM t0 WHERE ((~ (((x'') BETWEEN (-1.7538137E8) AND (0.46121618898860817))))) UNION SELECT ALL CAST((+ (t0.c33)) AS TEXT), (NOT (((t0.c0) NOT BETWEEN ('781296188') AND (t0.c0)))), ('3H\nFh?WwG' IN ()) FROM t0, vt0 WHERE ((+ (0.7540716659452559)));SELECT PERCENT_RANK() OVER ( ORDER BY ((((vt0.c0) ISNULL))|(((0.8615602817487816) BETWEEN (t0.c33) AND (vt0.c0))))  NULLS LAST RANGE  CURRENT ROW EXCLUDE GROUP), ((((t0.c0) ISNULL)) IS TRUE), ((CAST(t0.c33 AS REAL)) NOTNULL) FROM vt0, t0 WHERE (0Xfffffffffa3386f3) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c33) AND (t0.c0))) IS TRUE)  NULLS FIRST, NULL ASC  NULLS LAST, ((((NULL)IS(vt0.c0))) ISNULL) ASC; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS REAL))&(CAST(vt0.c0 AS NUMERIC))), (((t0.c33))>=(((t0.c33 IN ())))), CAST(GROUP_CONCAT(vt0.c0) AS INTEGER), CAST(CAST(t0.c33 AS TEXT) AS TEXT), (((t0.c33 IN ())) ISNULL) FROM vt0, t0 WHERE ((((0.6799815208321164) NOT BETWEEN (NULL) AND (0.10511702467818851)) IN ())); -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN 0.26555612471647927 ELSE vt0.c0 END)AND(((((vt0.c0)AND(x'')))OR(t0.c0)))))OR(((vt0.c0) ISNULL))), SUM(((((((((vt0.c0)OR(vt0.c0)))AND(t0.c33)))OR('271854562')))OR(vt0.c0))), CASE (t0.c33 IN (t0.c33, vt0.c0))  WHEN UNICODE(vt0.c0) THEN ((t0.c0)>(vt0.c0)) WHEN ((t0.c0)<=(NULL)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(t0.c33)))AND('-1884011914')))OR(t0.c0)) WHEN ((((t0.c33)OR(t0.c33)))AND(vt0.c0)) THEN CAST(t0.c33 AS REAL) END FROM vt0;SELECT ALL (((vt0.c0 IN (t0.c0)))<=(MAX(t0.c33))) FROM t0;SELECT ALL CAST(((((t0.c33)OR(vt0.c0)))OR(t0.c0)) AS REAL), (- (NULL)), NULL, ((((vt0.c0)>(t0.c33)))==(t0.c0)), AVG((((t0.c0, t0.c0, t0.c33))<=((vt0.c0, t0.c0, vt0.c0)))) FROM t0 WHERE (((((((((CASE WHEN 0.14402016288944075 THEN x'' WHEN '\nA&83Hg\' THEN x'' WHEN '-1274673495' THEN x'' ELSE 0.13542246968120586 END)AND(((NULL) NOT NULL))))OR((+ ('0.4651617486571541')))))OR(CAST(NULL AS TEXT))))AND((('Y#R	忟')OR('-886020977')))));SELECT CAST(0x2db3010 AS NUMERIC) COLLATE BINARY FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS REAL))<(t0.c33 COLLATE BINARY)) FROM t0 ORDER BY (NOT ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));SELECT DISTINCT ((((NOT (t0.c33)), t0.c33 COLLATE RTRIM, IFNULL(DISTINCT t0.c0, t0.c33), (((t0.c0))>((vt0.c0))), x''))=((CAST(t0.c0 AS NUMERIC), t0.c0, CAST(t0.c0 AS INTEGER), CAST(t0.c33 AS BLOB), ''))) FROM t0, vt0; -- 0ms;
SELECT (((((t0.c0, vt0.c0, t0.c0))>((t0.c33, NULL, t0.c0))))AND(vt0.c0 COLLATE RTRIM)) FROM vt0;SELECT COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c33 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c33 END) FROM t0;SELECT ALL (t0.c0 IN ()) FROM vt0, t0 NOT INDEXED LIMIT -554314746; -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(t0.c33, 0.24220642307050588))|(((t0.c0) IS FALSE))) FROM vt0 WHERE (((((x'')|(NULL))) BETWEEN (((('Zp')) NOT BETWEEN ((0.6121446546412757)) AND (('')))) AND (CAST(x'da66' AS REAL))));SELECT DISTINCT ((0.9621216909795709)AND(((vt0.c0) NOTNULL))), ((TOTAL(t0.c33)) NOT BETWEEN (((vt0.c0)LIKE('&豁'))) AND (MIN(t0.c0))), (((t0.c33) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), t0.c33, CASE WHEN (((t0.c0))==((vt0.c0))) THEN ((((t0.c0)OR(' 6a')))AND(t0.c33)) WHEN (NOT (t0.c0)) THEN COUNT(*) WHEN SQLITE_VERSION() THEN ((((t0.c33)OR(vt0.c0)))AND(vt0.c0)) WHEN 0.4217620987189341 THEN COUNT(*) WHEN (t0.c33 IN (t0.c33)) THEN MIN(vt0.c0) END FROM vt0 WHERE (CASE ((x'') ISNULL)  WHEN x'' COLLATE RTRIM THEN 'r,\r}A೎o.7' COLLATE RTRIM END);SELECT ALL (((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c33))) COLLATE RTRIM FROM vt0, t0 WHERE (((((CAST(NULL AS TEXT))OR((((x'')) BETWEEN (('716458571')) AND ((x''))))))AND('Pﱔ' COLLATE RTRIM))) ORDER BY (+ (x'')) ASC, (((t0.c33) BETWEEN (vt0.c0) AND (t0.c33)) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0) FROM vt0, t0 WHERE (CASE 0xffffffff906828ff COLLATE NOCASE  WHEN ',/' COLLATE NOCASE THEN ((0Xffffffff9391a66a)==(0Xffffffff8ac67aa1)) END); -- 0ms;
SELECT ALL (NOT (0.8836269533272414)), (t0.c33 IN ()) COLLATE RTRIM, ((((((t0.c33) ISNULL))OR((+ (t0.c33)))))AND(IFNULL(t0.c0, vt0.c0))) FROM t0 WHERE ((((((-1.819171222E9)) NOT BETWEEN ((x'')) AND ((0.1383831462564009))))+(CAST('' AS BLOB)))) GROUP BY ((((vt0.c0)<(t0.c33)))*((+ (vt0.c0))));SELECT CAST(vt0.c0 COLLATE RTRIM AS TEXT) FROM t0, vt0 GROUP BY x''; -- 0ms;
SELECT DISTINCT (- (((t0.c0) NOT BETWEEN (-1.677795726E9) AND (t0.c33)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT t0.c0 COLLATE RTRIM FROM t0, vt0 LIMIT 1641362348 OFFSET 1051198931; -- 0ms;
SELECT TOTAL((- (t0.c33))) OVER () FROM t0, vt0 WHERE (NULLIF(((((0.2426488044351337)AND(x'')))AND('m㢮e^BE''u')), CAST(NULL AS BLOB))); -- 0ms;
SELECT ALL (NOT (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT (- (CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE 'LPw') OVER (), ((t0.c33)!=(((((t0.c33)OR(0.06115321051602951)))OR(vt0.c0)))), SUM(vt0.c0) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0, NULL, t0.c0))!=((vt0.c0, t0.c33, vt0.c0))), CAST(vt0.c0 AS INTEGER), CAST(vt0.c0 AS INTEGER), (((t0.c33, t0.c0, 0.15686440480208153)) NOT BETWEEN ((t0.c0, vt0.c0, NULL)) AND ((t0.c33, t0.c0, 0.06596618646563102))), LIKELY(DISTINCT t0.c0)))<>((t0.c0, (~ (t0.c0)), ((t0.c0)>=(t0.c33)), (vt0.c0 IN (t0.c0)), t0.c33 COLLATE NOCASE))) FROM t0 LIMIT 262566755;SELECT ALL SUM((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) OVER () FROM vt0, t0 ORDER BY (vt0.c0 IN ())  NULLS FIRST; -- 0ms;
SELECT ALL ((t0.c33) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)), LTRIM((((t0.c33)) NOT BETWEEN ((vt0.c0)) AND ((t0.c33))), ((vt0.c0) IS FALSE)), vt0.c0 FROM t0;SELECT (((1762979366 IN ())) IS FALSE) FROM t0 GROUP BY (+ ((t0.c33 IN ()))) ORDER BY ((((((((CAST(NULL AS INTEGER))OR(CASE t0.c33  WHEN t0.c0 THEN t0.c0 ELSE t0.c33 END)))OR(((vt0.c0)<=(vt0.c0)))))AND((((vt0.c0))<>((t0.c0))))))OR(t0.c33 COLLATE RTRIM)) LIMIT -1125082052 OFFSET 1;SELECT DISTINCT (((vt0.c0) NOTNULL) IN (((t0.c33) ISNULL))) FROM vt0 WHERE ((~ ((+ (0Xffffffff8de197d0)))));SELECT ALL (~ (t0.c33 COLLATE BINARY)) FROM vt0 WHERE ((((x'' IN ()))&((NULL IN (x'b3df983c')))));SELECT DISTINCT (((t0.c33) ISNULL) IN (((vt0.c0) IS TRUE))) FROM t0;SELECT COUNT(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0))), 752459074, CASE ((((((((vt0.c0)AND(t0.c33)))AND(t0.c33)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((t0.c0) NOT NULL) THEN NULL END FROM vt0, t0 WHERE ((~ ((((NULL))>=((x'')))))); -- 0ms;
SELECT DISTINCT TOTAL((NOT (t0.c0))) FROM vt0;SELECT DISTINCT ((NULL)>>((((t0.c0))!=((-421062678))))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((NULL)OR(NULL)))OR(TRIM(DISTINCT t0.c33))) FROM vt0, t0 INDEXED BY i64 WHERE ((~ ((0X464615d5 IN ())))); -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0) NOT NULL))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((t0.c33)%(t0.c0))) NOT BETWEEN ('-937899684') AND (((t0.c0)!=(t0.c33)))) FROM vt0;SELECT ((((t0.c33) IS FALSE))==(((t0.c33) BETWEEN (vt0.c0) AND (t0.c0)))) FROM vt0, t0 WHERE (((((((((ABS(DISTINCT NULL))AND(0.422939818375204)))AND(CASE x'9c94'  WHEN 'DXs({.8T' THEN 'z>/	s6ku' WHEN x'' THEN 0.9538966126970737 WHEN 'gg' THEN NULL ELSE NULL END)))OR(SUBSTR('\rp', ''))))AND(('623947958' IN ())))) EXCEPT SELECT ALL ((((((t0.c33) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN 'Ld볫M\TP#g' ELSE t0.c0 END)))OR(((t0.c33)IS NOT(vt0.c0)))) FROM vt0;SELECT ALL (((CAST(t0.c0 AS REAL)))>=(((((vt0.c0, t0.c33, t0.c33))>((t0.c33, vt0.c0, vt0.c0)))))), MIN(x''), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c33)))) ISNULL) FROM t0 WHERE (x'fb64' COLLATE NOCASE) LIMIT 716458571 OFFSET 1042666325;SELECT t0.c33 FROM t0, vt0 WHERE ((((((x'') NOT BETWEEN (NULL) AND ('-1811900630'))))==((((-1.811009507E9) IS FALSE))))) LIMIT -1880359618 OFFSET -1434713107; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)OR(t0.c33)))AND(t0.c33)))AND(((t0.c0) NOT BETWEEN (t0.c33) AND ('781296188')))))AND((((t0.c33)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))), AVG(CASE WHEN NULL THEN t0.c0 END COLLATE NOCASE), ((COALESCE(t0.c0, '-708824809')) IS TRUE) FROM t0;SELECT DISTINCT ((((0xffffffffb05eb7fe)AND(vt0.c0)))AND(LAST_INSERT_ROWID())) FROM t0 LIMIT 1359923219;SELECT DISTINCT ((((t0.c33)AND(t0.c33))) ISNULL) FROM vt0 ORDER BY (((((t0.c33, t0.c33, t0.c0))>=((t0.c33, t0.c0, t0.c33))))>((+ (vt0.c0))))  NULLS FIRST, (((t0.c33 IN (x'', x'b6e6'))) NOT BETWEEN ((~ (0.7498307298820494))) AND (((vt0.c0) NOTNULL))) ASC;SELECT (((t0.c0)<=(vt0.c0)) IN ()) FROM vt0, t0; -- 0ms;
SELECT CASE WHEN ((((t0.c33)OR(t0.c33)))OR(NULL)) THEN (t0.c33 IN (t0.c0)) ELSE (((t0.c33))<>((vt0.c0))) END, (((vt0.c0 IN ())) NOT BETWEEN (COALESCE('', t0.c0)) AND (((vt0.c0)<(vt0.c0)))), (NOT (x'')) FROM t0, vt0 WHERE ((0.9681148327623125 IN ()) COLLATE RTRIM); -- 0ms;
SELECT PERCENT_RANK() OVER (), ((x'') NOT NULL) COLLATE BINARY, TOTAL(COUNT((vt0.c0 IN ()))) FROM t0, vt0 WHERE (LTRIM((+ (NULL)), (('-484786871')||('0.384896237689173'))));SELECT (NOT (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CAST(((0.04535037459249214) ISNULL) AS TEXT)); -- 0ms;
SELECT DISTINCT (('ꎕ!Qkwp%J') IS FALSE) FROM t0, vt0 WHERE (COALESCE(DISTINCT (~ ('V>')), ((0.4205565513885371)<(x'')), ((NULL) NOT BETWEEN ('%a+搑뎧c') AND (x'')), -1 COLLATE BINARY)) LIMIT -1629307578 OFFSET 1523484454; -- 0ms;
SELECT DISTINCT (((((vt0.c0))>((vt0.c0)))) IS FALSE) FROM t0, vt0 WHERE (((((0X7f9656a2)||(x'f4dd'))) NOT BETWEEN (CASE WHEN 0.7833222669867022 THEN x'' WHEN NULL THEN 0x4be9c02a WHEN NULL THEN x'' ELSE x'' END) AND (CASE '0.9315661931176678'  WHEN 0.4368459686582017 THEN x'd253' WHEN -2.147408355E9 THEN x'' WHEN NULL THEN NULL WHEN NULL THEN x'001a' WHEN 0.46298716438737875 THEN '' ELSE x'' END))) GROUP BY ((CAST(vt0.c0 AS BLOB)) BETWEEN ((x'805e' IN (t0.c0))) AND (((vt0.c0) IS TRUE))), ((CAST(vt0.c0 AS REAL))GLOB(CAST(t0.c0 AS BLOB))), (((((t0.c0, t0.c33, vt0.c0))>((t0.c0, t0.c33, t0.c33)))) NOT NULL); -- 0ms;
SELECT CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT AVG(vt0.c0) OVER (), (~ (((t0.c33) IS FALSE))), LAST_VALUE((((vt0.c0)) NOT BETWEEN ((CASE t0.c33  WHEN vt0.c0 THEN t0.c33 END)) AND ((vt0.c0 COLLATE NOCASE)))) OVER (), ((vt0.c0)|(TRIM(DISTINCT vt0.c0, t0.c0))), ((((((((((((((((t0.c33)OR(vt0.c0)))AND(t0.c33)))AND(t0.c33)))AND(vt0.c0)))OR(((t0.c0) BETWEEN (t0.c0) AND ('0.02438355146667759')))))OR(((vt0.c0)/(t0.c33)))))OR(x'')))OR((t0.c33 IN (t0.c0)))) FROM vt0, t0 WHERE ((NOT ((((1836147805)) BETWEEN ((44672057)) AND ((0.597655801926017)))))); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM) NOT BETWEEN (((((t0.c33)AND(t0.c0)))OR(x''))) AND ((~ (t0.c0)))) FROM vt0 WHERE (((TRIM(0.9769811335764802, x'')) IS FALSE));SELECT ALL ((((NULL)>=(NULL)))LIKE(((vt0.c0)+(1.607841486E9)))) FROM t0, vt0 WHERE (CASE WHEN ABS(DISTINCT '') THEN (1882451131 IN ()) ELSE ('-1306264401' IN ()) END) LIMIT 1259130948 OFFSET -193866301; -- 0ms;
SELECT DISTINCT ((IFNULL(DISTINCT vt0.c0, t0.c33)) IS FALSE), (((t0.c33))<((t0.c0))) COLLATE NOCASE, COUNT(NULL) OVER ( ORDER BY (((((t0.c33)) NOT BETWEEN ((t0.c0)) AND ((t0.c33))))<=((((('-403915920')OR(t0.c0)))OR(t0.c33)))) DESC) FROM vt0;SELECT (((((t0.c0) NOT BETWEEN (t0.c33) AND (t0.c33))))<((((vt0.c0)-(t0.c33))))) FROM vt0, t0 WHERE (0.9932875021842998) ORDER BY ((((CAST(t0.c0 AS TEXT))OR((((NULL))<((vt0.c0))))))OR(0.9792672141323728)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT MAX(((((t0.c33)OR(t0.c0)))OR(t0.c33))) FROM t0; -- 0ms;
SELECT DISTINCT LEAD((((t0.c33)) BETWEEN ((CAST('tOd0|?' AS INTEGER))) AND ((CAST(t0.c33 AS NUMERIC)))), CASE WHEN (t0.c33 IN ()) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END, (((t0.c33) IS TRUE) IN ())) OVER (), TOTAL(((t0.c33)AND(x''))), COUNT(CASE vt0.c0  WHEN t0.c0 THEN t0.c33 END) OVER () FROM t0 WHERE (((((NULL)IS NOT('884362977')))>>((((x'')) NOT BETWEEN (('')) AND ((NULL))))));SELECT DISTINCT ((((NULL) NOTNULL))/(t0.c0)) FROM t0 WHERE (TYPEOF(CHANGES())); -- 0ms;
SELECT ALL (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)) FROM vt0, t0 WHERE ((- ((((NULL, x'', '1926779686', 's', '-1949683655'))>((NULL, '-1030822318', x'46b2', 0.530759537695461, NULL)))))); -- 0ms;
SELECT ALL vt0.c0, AVG(((t0.c0) IS FALSE)), CUME_DIST() OVER () FROM t0, vt0; -- 0ms;
SELECT ALL (((vt0.c0) NOT NULL) IN ()) FROM t0, vt0; -- 0ms;
SELECT ((((t0.c0)+(vt0.c0))) BETWEEN ((- (t0.c33))) AND (CASE t0.c0  WHEN t0.c33 THEN t0.c0 ELSE t0.c0 END)), (((((vt0.c0 IN ()))AND(((t0.c0) BETWEEN (t0.c33) AND (t0.c0)))))AND(((t0.c0)-(vt0.c0)))), ((t0.c0)*(((vt0.c0) BETWEEN ('-1211064123') AND (vt0.c0)))), CASE ((t0.c0) NOT BETWEEN (t0.c33) AND (vt0.c0))  WHEN UNLIKELY(vt0.c0) THEN IFNULL(DISTINCT t0.c0, vt0.c0) ELSE LIKELIHOOD(t0.c0, 0.23931225626983954) END, (NOT ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c33)))) BETWEEN (t0.c33 COLLATE NOCASE) AND (((t0.c0) NOTNULL))), t0.c33 COLLATE RTRIM FROM t0, vt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((t0.c0) ISNULL), ((vt0.c0) NOTNULL)) FROM vt0, t0 WHERE (CASE WHEN QUOTE(x'') THEN ((-1.7538137E8) NOT BETWEEN (NULL) AND (x'')) END); -- 0ms;
SELECT DISTINCT 0.0378302524056332 FROM t0, vt0 WHERE (((((((0x48692c39)AND(x'903d2367')))OR(NULL)))IS('ၔJ17.' COLLATE NOCASE))); -- 0ms;
SELECT ALL (- (((((t0.c33)AND(t0.c0)))AND(t0.c0)))) FROM vt0;SELECT DISTINCT (((t0.c33) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((x'' COLLATE BINARY)OR((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c33, t0.c33, t0.c0)) AND ((t0.c33, vt0.c0, vt0.c0))))))AND((((t0.c0)) BETWEEN ((t0.c33)) AND ((t0.c33))))) FROM t0 WHERE (((((0Xffffffffba07e641) NOT BETWEEN (x'4f99') AND ('/73#'))) BETWEEN ((('-1964340709')OR(x''))) AND ((((x''))<((x''))))));SELECT ALL t0.c33 FROM t0, vt0 GROUP BY (CAST(t0.c0 AS BLOB) IN ()), (- ((t0.c0 IN (t0.c0)))), ((((CASE t0.c0  WHEN 0x3bb1296e THEN 0.36582136060558046 END)OR((- (t0.c0)))))AND(((((((((t0.c33)OR(vt0.c0)))AND(t0.c0)))OR('')))OR(NULL)))) HAVING ((t0.c0 COLLATE NOCASE)<>(UNLIKELY(t0.c33))); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c33) AND (vt0.c0)), (((t0.c0 IN (t0.c0, vt0.c0))) IS FALSE), (((((vt0.c0, t0.c33, vt0.c0))<((t0.c33, t0.c0, vt0.c0)))) NOT BETWEEN (((((((((t0.c33)OR(t0.c0)))AND(NULL)))AND(t0.c0)))AND(t0.c33))) AND (((t0.c0) NOT NULL))) FROM t0, vt0 WHERE (CAST(NULL AS TEXT)); -- 0ms;
SELECT DISTINCT (((((t0.c0)IS NOT(vt0.c0))))>=((t0.c33))), FIRST_VALUE((NOT (t0.c33)) COLLATE NOCASE) OVER ( ORDER BY (- ((t0.c0 IN ()))) ASC  NULLS LAST), TYPEOF(DISTINCT COUNT(*)), ((((t0.c33) IS TRUE))>>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c33 THEN t0.c33 WHEN 0X1e9c6b1c THEN t0.c33 END)), ((((((x'')OR(t0.c0)))AND(t0.c33)))|(CAST(vt0.c0 AS TEXT))) FROM t0 GROUP BY ((vt0.c0)!=((((t0.c33, t0.c33, t0.c0)) BETWEEN (('', vt0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))));SELECT HEX(DISTINCT vt0.c0), CAST(((NULL)!=(vt0.c0)) AS BLOB), COUNT(((vt0.c0) IS FALSE)) OVER () FROM t0;SELECT TOTAL(CASE vt0.c0  WHEN 'qf6' THEN t0.c0 WHEN t0.c33 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c33 END) OVER (), (~ (((t0.c0) IS TRUE))), ((CAST(t0.c33 AS BLOB)) NOT BETWEEN (CASE WHEN vt0.c0 THEN t0.c33 END) AND (((NULL)>=(t0.c0)))) FROM t0;SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0 WHERE (((0.8671378668202782)<(-374729715)) COLLATE RTRIM) LIMIT -1211064123; -- 0ms;
SELECT ALL GROUP_CONCAT(CASE WHEN t0.c33 THEN t0.c0 ELSE t0.c33 END) OVER () FROM t0; -- 0ms;
SELECT GROUP_CONCAT(CAST('523100466' AS BLOB)) FROM t0, vt0; -- 0ms;
SELECT ALL UNLIKELY(vt0.c0), ((CASE vt0.c0  WHEN '0.09366924344160488' THEN t0.c0 WHEN t0.c33 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 ELSE NULL END) NOTNULL), (- (((NULL) NOTNULL))) FROM vt0, t0; -- 0ms;
