-- Time: 2024/06/07 18:35:30
-- Database: database21
-- Database version: 3.40.0
-- seed value: 2530917221
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(x'1aa48a1c', -75144211) WHERE (~ (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END)); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0, c3) VALUES ('673124688', x'', 0x281f1150, 6.73124688E8); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('213560620', 0.9775752992138473, 0.9775752992138473, NULL, '0.9775752992138473'); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cache_size = -4548661799467263928; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c4, c2, c3, c0) VALUES (1032922932, x'36b3', 0.9775752992138473, x'', 0.9775752992138473); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c1, c0) VALUES ('2]|(u', 0.2976068425468936, 0.8772979136591146); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c3, c0) VALUES ('-816072469', x'', '673124688', NULL); -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (0.9775752992138473); -- 1ms;
REINDEX; -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58485'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1862933703); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1197'); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 148653118); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 459747081); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c4) VALUES (NULL, NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.stats; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA mmap_size = 7265866391288787360; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1228813909); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.13105374750442134); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.cache_size; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 673124688);\n; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT ((CAST(rt0.c4 AS REAL))>((- (NULL)))) FROM rt0; -- 0ms;
PRAGMA integrity_check; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO rt0(c1, c3) VALUES (NULL, 0Xffffffffd727332c); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
COMMIT; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-685296852)||('0'))  WHEN ((0x469f108b) BETWEEN (x'') AND (0.892876072409144)) THEN CAST(NULL AS NUMERIC) ELSE CASE -6.85296852E8  WHEN 0.2778369179405801 THEN 0Xffffffffcf5bb8eb WHEN 1435425941 THEN x'' WHEN NULL THEN 295024168 WHEN '295024168' THEN 0Xffffffffa6bdd7ac WHEN '-1497507924' THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' sz=-174240687 unordered'); -- 0ms;
PRAGMA temp.default_cache_size = 1032922932; -- 0ms;
UPDATE rt0 SET c3=0.2976068425468936 WHERE '2]|(U'; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-816072469', c0='F(庅l'; -- 0ms;
END; -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=673124688,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA default_cache_size = 1789156997; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR ROLLBACK rt0 SET c4=0X558edc95 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))AND(((1.184829579E9) NOT NULL))))OR(((((((((rt0.c1)OR(rt0.c2)))OR('1312636915')))OR(rt0.c1)))OR(640494754)))); -- 0ms;
PRAGMA main.threads; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(v0.c0)))OR(LIKELY(vt0.c0))) FROM v0 WHERE (((((x'') NOT BETWEEN (0.005118314293120485) AND (x''))) ISNULL));SELECT ALL CAST('Y]' AS BLOB) FROM vt0, v0, rt0; -- 0ms;
SELECT DISTINCT CASE (+ (rt0.c2))  WHEN HEX(0x1732d12a) THEN ((x'')%(rt0.c2)) END, ((vt0.c0)-(rt0.c0)), AVG((((vt0.c0, rt0.c3, 0Xffffffffa75c61ea))==((rt0.c4, rt0.c2, rt0.c0)))) OVER () FROM vt0 GROUP BY (((rt0.c0)OR(rt0.c2)) IN (x'97ab')) HAVING ((((rt0.c1) ISNULL)) IS FALSE);SELECT ALL (+ (CAST(rt0.c4 AS INTEGER))) FROM vt0;SELECT DISTINCT CASE WHEN MAX(rt0.c1) THEN rt0.c0 COLLATE NOCASE END FROM rt0 WHERE ((((((NULL, 0.27415252834459447, NULL)) NOT BETWEEN ((0x281f1150, '^4_P', 0.7887985167575663)) AND ((NULL, '1e500', -390621746))))AND(CAST(0.13630974907213056 AS TEXT)))); -- 0ms;
SELECT CAST(CAST(v0.c0 AS NUMERIC) AS REAL), (~ (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), ((CAST(rt0.c3 AS INTEGER))*((((rt0.c1, rt0.c4, 0.5058883811800879))=((rt0.c4, x'', rt0.c0))))) FROM vt0, v0;SELECT COUNT(AVG(MIN(v0.c0))) FROM vt0 WHERE ((((('F(庅l') NOT NULL))!=(CAST(x'' AS BLOB))));SELECT CASE WHEN rt0.c1 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END WHEN ((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)) THEN vt0.c0 COLLATE RTRIM WHEN (('')==(rt0.c1)) THEN CAST(rt0.c0 AS BLOB) END FROM rt0 WHERE (((((((((((((('' IN ()))OR((('213560620') BETWEEN (x'3185') AND ('')))))OR(('' IN ('-2081335651')))))OR(((x'')*(-7.5144211E7)))))OR(('l	' IN ('', 0xffffffffad7038db)))))OR((0.49460478514830564 IN ()))))OR('')));SELECT CAST(CASE WHEN rt0.c4 THEN v0.c0 END AS BLOB) FROM vt0, rt0 WHERE (((((((NULL)OR('2]|(u')))OR(NULL)))<<((0.9775752992138473 IN ()))));SELECT DISTINCT RANK() OVER () FROM rt0, v0; -- 0ms;
SELECT ALL (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((((vt0.c0, rt0.c2, rt0.c2, vt0.c0, x'', rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c4, rt0.c2, rt0.c0, rt0.c1, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c4, '1184829579', v0.c0, NULL, rt0.c0, rt0.c2)))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM v0 WHERE (SQLITE_VERSION());SELECT GROUP_CONCAT(((rt0.c0)==(vt0.c0))) FILTER(WHERE '673124688') OVER () FROM v0, rt0 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT json_object(((rt0.c3)/(v0.c0)), ((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)), (rt0.c0 IN ()), (- (rt0.c0)), '', ((rt0.c1)||(rt0.c4))) FROM v0 WHERE ((((((((('ueE~-<o	V')AND(NULL)))OR(NULL)))AND('an')))AND(0.8086425215130584)) COLLATE BINARY COLLATE NOCASE) ORDER BY (rt0.c0 COLLATE NOCASE IN ())  NULLS LAST, ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE) DESC, CASE WHEN ((rt0.c3) NOT BETWEEN (x'') AND (v0.c0)) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((((rt0.c3)OR('646785793')))AND(rt0.c3)) END ASC  NULLS LAST;SELECT ((((rt0.c0)!=(rt0.c1))) NOT BETWEEN ((rt0.c3 IN ())) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END)) FROM vt0;SELECT rt0.c4 FROM v0, vt0 WHERE (((((0Xffffffffbbfed933)GLOB(NULL))) NOTNULL));SELECT CUME_DIST() OVER ( ORDER BY CASE RTRIM(rt0.c0)  WHEN ABS(NULL) THEN ((rt0.c1)%(vt0.c0)) END ASC), SUM(rt0.c1) OVER ( PARTITION BY rt0.c3, (((('-395199594')AND('')))OR(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY (+ (0.48853808092834783)) DESC, ((((rt0.c0)OR(((rt0.c3)&('1184829579')))))OR((0.2970772276506216 IN ()))) DESC RANGE (((rt0.c0))<((rt0.c3))) COLLATE BINARY PRECEDING), ((LOWER(DISTINCT rt0.c0))||(COUNT(*))) FROM rt0;SELECT DISTINCT (((((((((((((((rt0.c1))>=((rt0.c2))))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(TOTAL(rt0.c2))))AND(COUNT(*))))OR(((x'')OR(v0.c0)))))AND(rt0.c2)))AND(((((((((((((v0.c0)OR('1736181075')))OR(rt0.c4)))OR('')))OR(0Xcbaad2c)))AND(rt0.c2)))AND(0.5394526631142548)))) FROM vt0, rt0, v0 WHERE ((((((0xffffffffe871bb96)) BETWEEN ((-0.0)) AND ((NULL))))AND(NULL))); -- 0ms;
SELECT DISTINCT CASE WHEN (v0.c0 IN (x'', rt0.c1)) THEN ((rt0.c2)<(rt0.c3)) END FROM vt0, v0 WHERE (CAST(((0.851362888003184) NOTNULL) AS INTEGER));SELECT ((((rt0.c0) IS TRUE)) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)))) FROM rt0, v0, vt0; -- 0ms;
SELECT DISTINCT (((x'')) BETWEEN ((((vt0.c0)LIKE(rt0.c2)))) AND ((v0.c0 COLLATE BINARY))), (((((rt0.c3 IN ()))AND((((rt0.c4))>((v0.c0))))))OR(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))), ((((rt0.c1)|(rt0.c2)))|((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))), GROUP_CONCAT((((v0.c0))>((rt0.c3)))), ((v0.c0)&(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0, vt0, v0; -- 0ms;
SELECT ALL NULLIF(vt0.c0, ((((rt0.c1)OR(rt0.c3)))OR(vt0.c0))), CASE WHEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c3)>('-8007483')) ELSE ((rt0.c3) IS FALSE) END, (+ ((((rt0.c1))==((v0.c0))))) FROM vt0;SELECT DISTINCT COUNT(COALESCE(rt0.c0, NULL)) OVER (), CAST((('-395199594') NOTNULL) AS INTEGER), ((vt0.c0) NOT BETWEEN (JULIANDAY(rt0.c0, rt0.c3, rt0.c2, rt0.c3, rt0.c0)) AND (NULL)) FROM v0, vt0 WHERE ((- (CASE WHEN '' THEN 0.24124876756460567 END)));SELECT (((((v0.c0)GLOB(0.44179286593204936)), '1736181075', ((0Xffffffffbbfed933)/(rt0.c0)), (rt0.c0 IN ()), ((rt0.c3)%(rt0.c3))))>=((((vt0.c0) NOTNULL), (rt0.c1 IN ()), LOWER(rt0.c3), v0.c0 COLLATE BINARY, CAST(rt0.c2 AS TEXT)))) FROM vt0, rt0 NOT INDEXED, v0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT DISTINCT (x'' IN ()) FROM rt0, v0 WHERE (((0.2031233495131507)/(8.12822228E8)) COLLATE BINARY); -- 0ms;
SELECT AVG(((rt0.c3) NOTNULL)) OVER (), (('') BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))) AND (((vt0.c0)IS(rt0.c1)))), (rt0.c3 IN ()) COLLATE BINARY, DENSE_RANK() OVER (), (+ (0.2576059891506458)) FROM vt0, v0;SELECT ALL CASE WHEN ((rt0.c4)AND(vt0.c0)) THEN ((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c4)))AND(rt0.c3)))OR(vt0.c0)) ELSE x'8554' END FROM vt0, rt0, v0 WHERE (((((NULL) NOT NULL))/(((((((((0.89889861007787)OR('q8')))OR('R,2o(~!M')))AND(NULL)))AND(x''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)>=(rt0.c0))) IS TRUE) FROM v0;SELECT DISTINCT ((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE RTRIM FROM rt0, v0, vt0 WHERE (((('-1641285548') IS FALSE) IN ())); -- 0ms;
SELECT DISTINCT SUM(CAST(v0.c0 AS NUMERIC) COLLATE BINARY), (((((((((((v0.c0))>((rt0.c3))))AND(SQLITE_VERSION())))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))))AND(((rt0.c1) IS FALSE))))OR(LOWER(DISTINCT rt0.c3))), CASE WHEN (rt0.c0 IN (rt0.c2)) THEN ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3)))AND(v0.c0)))AND(rt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN x'' WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END WHEN (rt0.c3 IN ()) THEN ((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)) ELSE ((rt0.c2) IS FALSE) END FROM vt0, v0, rt0 WHERE ((((((NULL))<=((NULL))))*(((x'5213')<=(x'05aa'))))); -- 0ms;
SELECT ALL (NOT (((rt0.c0) NOT NULL))) FROM vt0, rt0 WHERE ((((((0x56f0334d)||('Q'))))<=((((NULL) BETWEEN ('626142550') AND (x'db13')))))) GROUP BY x'', ((CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c0 END)|((rt0.c3 IN (rt0.c1)))), ((((rt0.c4)+(rt0.c3)))<=(((vt0.c0) NOT NULL)));SELECT ((((((((((((((rt0.c2)AND(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND('')))OR(vt0.c0)))AND(v0.c0))) NOTNULL), ((((vt0.c0) IS FALSE)) NOTNULL), ((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))AND(PRINTF(rt0.c4))))AND(((v0.c0)OR(vt0.c0)))) FROM rt0, v0, vt0; -- 0ms;
SELECT ALL '857729166' FROM v0, vt0; -- 0ms;
SELECT DISTINCT CASE v0.c0  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c1 END COLLATE RTRIM, MAX(((rt0.c3) NOT BETWEEN (rt0.c0) AND (v0.c0)) COLLATE RTRIM), CAST(((rt0.c1)<<(v0.c0)) AS INTEGER) FROM vt0, v0, rt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) ISNULL) COLLATE BINARY FROM rt0, vt0 GROUP BY (((((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) IS TRUE) LIMIT -2081335651;SELECT DISTINCT ((SUM(rt0.c4)) IS FALSE) FROM rt0, v0, vt0; -- 0ms;
SELECT ALL (((vt0.c0) BETWEEN ('857729166') AND (v0.c0)) IN ()), (~ ((- (rt0.c0)))), CASE ((((rt0.c1)AND(rt0.c0)))AND(vt0.c0))  WHEN (- (vt0.c0)) THEN ((x'cf46')*(rt0.c1)) END FROM vt0, rt0 WHERE (CAST(0.2743231036627012 AS INTEGER) COLLATE BINARY); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE) FROM vt0, rt0, v0 GROUP BY rt0.c1 HAVING v0.c0; -- 0ms;
SELECT ((((((rt0.c0)AND(rt0.c3)))OR(vt0.c0)))*(CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN v0.c0 END)), 0.0892809097605799, COUNT(*) FROM v0, rt0 WHERE ((((((((('1347370380')OR(NULL)))AND('')))AND(((((((((0.9033266692869467)OR(x'505c')))OR('*N')))OR(NULL)))AND('')))))OR(UNICODE('')))) ORDER BY ((CASE WHEN 0.7502006781489595 THEN v0.c0 ELSE rt0.c0 END) NOTNULL) ASC  NULLS FIRST, ('*M\n6FX_?' IN ()) ASC  NULLS FIRST;SELECT CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c2 ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END, ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))<=((((rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((rt0.c1, v0.c0, rt0.c4))))), (((vt0.c0, rt0.c0, rt0.c4)) NOT BETWEEN ((((rt0.c4)&(rt0.c4)), NULL, ((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)))) AND ((CAST(rt0.c0 AS TEXT), ((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)), x''))), (((v0.c0)>>(rt0.c3)) IN ()), 0X4f2221 FROM vt0 LIMIT 894739846;SELECT DISTINCT ((rt0.c0)>=(rt0.c2)) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT CASE AVG(v0.c0)  WHEN CASE NULL  WHEN '-8007483' THEN rt0.c4 ELSE rt0.c4 END THEN (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) ELSE ((v0.c0)>(rt0.c3)) END FROM rt0, v0, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3) IS TRUE) AS BLOB) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c1) BETWEEN (rt0.c4) AND (v0.c0)), ((rt0.c0)|(rt0.c4)), CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN 0.685362559791248 END))>=((((rt0.c0)||(rt0.c4)), (((v0.c0))>=((v0.c0))), CASE rt0.c2  WHEN x'' THEN rt0.c1 ELSE rt0.c0 END))) FROM rt0 WHERE ((((((NOT (NULL)))OR(((NULL) NOT BETWEEN (NULL) AND ('턪RM{')))))OR((('-390621746') ISNULL))));SELECT ALL CASE ((rt0.c1) IS TRUE)  WHEN rt0.c3 THEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c4)) END FROM rt0, v0; -- 0ms;
SELECT DISTINCT (+ ('2031420146')) FROM rt0 WHERE ((((x'')) NOT BETWEEN (((('ꎘt	') ISNULL))) AND ((((('')) BETWEEN ((NULL)) AND ((0.985962005636152))))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) FROM vt0, v0; -- 0ms;
SELECT (NOT (((rt0.c4) NOTNULL))), 1.34737038E9, (((v0.c0)) BETWEEN ((((rt0.c0)<=(vt0.c0)))) AND (((((vt0.c0, vt0.c0, rt0.c1, vt0.c0, rt0.c0))<=((rt0.c4, rt0.c1, v0.c0, '', 's42c&gs(G')))))) FROM v0, vt0 WHERE (IFNULL(CAST('626142550' AS BLOB), ((0.7003688831268896)||(x''))));SELECT DISTINCT ((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c0 END)-((rt0.c2 IN ()))) FROM rt0, v0, vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS INTEGER) FROM rt0, v0 WHERE ((((((x'a7c6' IN (x'')))AND(CAST(x'abc0' AS INTEGER))))OR('wz')));SELECT (((v0.c0 COLLATE BINARY, ((v0.c0) NOT NULL), CHANGES()))<((CAST(vt0.c0 AS BLOB), 0x70f9dbf4 COLLATE RTRIM, ((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0))))), 0.7305435224999182, ((((v0.c0) ISNULL)) NOT NULL) FROM vt0 WHERE (((CAST('542858824' AS BLOB)) IS FALSE));SELECT DISTINCT (- (((rt0.c2)IS NOT(rt0.c4)))), (NULL IN ()) COLLATE RTRIM, COUNT(*) FROM v0;SELECT ALL AVG(((0.7305435224999182)LIKE(rt0.c0))) FROM vt0 LIMIT -47137220;SELECT ALL 'r/X0' FROM v0 WHERE ('-2081335651'); -- 0ms;
SELECT ALL rt0.c2 FROM rt0 GROUP BY ABS(((rt0.c3)IS NOT(rt0.c0))) ORDER BY (+ ((+ (v0.c0))))  NULLS FIRST;SELECT ALL LAG(((vt0.c0)>(CAST(vt0.c0 AS BLOB))), CAST(((vt0.c0)AND(vt0.c0)) AS NUMERIC), ((((vt0.c0) NOT NULL))LIKE('R\r*'))) OVER (), '1347370380', GROUP_CONCAT(CASE v0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE 0.15398550958951862 END) OVER () FROM vt0 WHERE (((('-1487117846')AND(x'9d2d')) IN ((('') IS FALSE))));SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))IS(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)), (NOT (((((((((rt0.c4)OR(rt0.c4)))OR(0.2743231036627012)))AND(vt0.c0)))OR(rt0.c3)))), ((((v0.c0) BETWEEN (v0.c0) AND (rt0.c1))) NOT BETWEEN (((v0.c0) ISNULL)) AND (((rt0.c4) NOTNULL))) FROM rt0 WHERE ((NOT (((NULL)<=('')))));SELECT ALL (NOT (((rt0.c4)IS('D')))) FROM rt0, vt0 WHERE (CAST(UNLIKELY(DISTINCT '-1048457726') AS INTEGER)); -- 0ms;
SELECT DISTINCT 0.035361146685903955 FROM v0 WHERE ((('㌬}' COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) IN ()) FROM rt0, v0 WHERE ((((((('')AND(NULL)))AND(NULL)))IS(((((x'')AND('-1182274491')))AND('-862849900'))))); -- 0ms;
SELECT DISTINCT vt0.c0, (((- ('t'))) ISNULL), NULL, CAST(MIN('R,2O(~!M') AS NUMERIC), (~ (((vt0.c0) BETWEEN ('') AND (vt0.c0)))) FROM rt0;SELECT DISTINCT GROUP_CONCAT(((rt0.c0)IS(rt0.c4))) FILTER(WHERE (NULLIF(DISTINCT rt0.c0, rt0.c4) IN ())) OVER ( ORDER BY (+ (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE v0.c0 END))  NULLS LAST, NULL COLLATE NOCASE DESC) FROM v0, vt0, rt0 WHERE ((((0.89889861007787 IN ())) NOTNULL)); -- 0ms;
SELECT ALL (('0.13105374750442134')IS(COALESCE(rt0.c0, 's42c&gs(G'))), GROUP_CONCAT((((rt0.c2))!=((rt0.c0)))), SUM(0xffffffffc181ce02) OVER () FROM vt0, v0;SELECT ALL PERCENT_RANK() OVER () FROM vt0, rt0, v0 LIMIT -8007483 OFFSET 288284436; -- 1ms;
SELECT ALL 250708209 FROM vt0, v0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST('1347370380' AS TEXT) THEN 0.6270637888949996 END, (0.4381353570604417 IN ()), (((NOT (rt0.c3)))+(rt0.c4 COLLATE BINARY)) FROM v0, vt0, rt0; -- 0ms;
SELECT DISTINCT CASE SUM(rt0.c2)  WHEN ((rt0.c2)%(v0.c0)) THEN CASE WHEN x'f0f2' THEN rt0.c2 END ELSE (rt0.c2 IN ()) END FROM rt0, vt0, v0 WHERE (CAST(((0.6011776190861331) BETWEEN ('h') AND (0.7933102417073118)) AS INTEGER)); -- 1ms;
SELECT ALL GROUP_CONCAT((((rt0.c4))=((rt0.c2)))) OVER ( GROUPS BETWEEN (vt0.c0 COLLATE BINARY IN ()) FOLLOWING AND ((0.48618992642615966)==((rt0.c4 IN ()))) PRECEDING) FROM rt0, v0;SELECT DISTINCT ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c4))) NOT BETWEEN (NULL) AND (((vt0.c0) ISNULL))) FROM vt0, rt0, v0 WHERE ((('288284436') NOT BETWEEN ('\re') AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT (NOT ((- (rt0.c1)))) FROM v0, rt0 WHERE (('673124688' IN (CAST(873115459 AS INTEGER), (6.73124688E8 IN ())))); -- 1ms;
SELECT ((((CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '1435425941' ELSE rt0.c3 END)OR(CAST(NULL AS TEXT))))AND(COUNT(*))), CASE WHEN TOTAL(rt0.c3) THEN (rt0.c1 IN (rt0.c3)) END, ((((rt0.c3) ISNULL))>(((rt0.c1)>(rt0.c3)))), json_array_length(TOTAL(vt0.c0), (rt0.c0 IN (rt0.c0))), CAST(vt0.c0 COLLATE RTRIM AS BLOB) FROM v0, vt0, rt0 GROUP BY ((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END) BETWEEN ((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (rt0.c4 COLLATE NOCASE)), CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END COLLATE RTRIM, ((((vt0.c0 IN ())))!=((CAST(rt0.c4 AS REAL))));SELECT DISTINCT (NOT ((v0.c0 IN ()))), CAST(v0.c0 AS BLOB) COLLATE RTRIM, ((((rt0.c0)<<(x''))) ISNULL) FROM vt0;SELECT DISTINCT TOTAL(CASE WHEN v0.c0 THEN vt0.c0 END) FROM vt0, rt0;SELECT DISTINCT rt0.c0, CAST(rt0.c1 AS INTEGER) COLLATE NOCASE, (((+ (rt0.c0)))&(CASE v0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN x'362a' THEN x'' WHEN v0.c0 THEN rt0.c3 ELSE rt0.c0 END)) FROM rt0, vt0 WHERE (((0x3072aed4 IN ()) IN ())) LIMIT -1727447466 OFFSET 219700896;SELECT DISTINCT rtreenode((((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))), ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(v0.c0))), ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c4))) NOT NULL), ((((rt0.c2)-(rt0.c0)))+(CASE rt0.c1  WHEN x'' THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN 0.6463890396071995 ELSE rt0.c1 END)) FROM v0, rt0, vt0 LIMIT 386557904; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(rt0.c0)))>>(((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))), ((((CASE 0.3819269988639431  WHEN x'' THEN rt0.c0 ELSE rt0.c4 END)AND((v0.c0 IN ('1736181075', rt0.c4, rt0.c0)))))AND((- (v0.c0)))), 0.06012948697909459 FROM rt0, v0;SELECT ALL ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END) NOT BETWEEN (((((x'')OR(rt0.c1)))AND(rt0.c1))) AND (((((vt0.c0)AND(rt0.c0)))OR(rt0.c3)))), (((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c0)) IN ()), '1736181075', (CAST(rt0.c3 AS BLOB) IN ()), ROW_NUMBER() OVER () FROM vt0, rt0, v0 WHERE (((x'5f12ef16')GLOB('')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((('-155897150') BETWEEN (rt0.c3) AND (vt0.c0)))) FROM v0, vt0;SELECT DISTINCT (((0xffffffffad7038db)) NOT BETWEEN (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((x'', v0.c0, vt0.c0)) AND ((x'', v0.c0, rt0.c3))))) AND ((x'98dc'))) FROM vt0, v0, rt0 GROUP BY ((((((rt0.c4)OR(vt0.c0)))OR(v0.c0)))OR(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))) HAVING (((vt0.c0 COLLATE NOCASE))<=(((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0)))))); -- 1ms;
SELECT '1032922932' FROM v0, vt0 WHERE (((((('-395199594')) BETWEEN (('XA.\')) AND ((-817716561)))) BETWEEN (((324476637)-(0x7401e575))) AND (IFNULL(DISTINCT NULL, x'03ee')))) LIMIT -1140926157; -- 0ms;
SELECT ALL NULL, SUM(1.435425941E9), SUM(((rt0.c4)IS(rt0.c4))) OVER () FROM vt0 WHERE (((((x'80f7b07a') NOTNULL)) BETWEEN ((('') IS TRUE)) AND (((x'')IS NOT(x'')))));SELECT DISTINCT ((((rt0.c3)) BETWEEN ((NULL)) AND ((rt0.c4))) IN ()) FROM vt0 WHERE (0.8087394227784217); -- 1ms;
SELECT DISTINCT rt0.c2, IFNULL(DISTINCT AVG(rt0.c3), ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))), ((rt0.c2) IS FALSE) COLLATE BINARY COLLATE BINARY FROM vt0 GROUP BY ((((0.7887985167575663 COLLATE BINARY)AND((v0.c0 IN ()))))OR((- (NULL))));SELECT DISTINCT ((rt0.c2)||(rt0.c4 COLLATE RTRIM)) FROM rt0, vt0 WHERE ((((('')IS(x''))) NOT BETWEEN ((('-1809473898')|(0.18865305674778854))) AND (((x'')<('0.4381353570604417'))))); -- 0ms;
SELECT ALL (LIKELIHOOD(rt0.c3, 0.14304102579925704) IN ()), ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) NOTNULL), ((((((((((((COUNT(*))OR(x'')))OR(v0.c0)))OR((+ (v0.c0)))))AND(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c4))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c4)>(rt0.c2)) COLLATE RTRIM FULL OUTER JOIN v0 ON (~ (vt0.c0 COLLATE RTRIM)); -- 0ms;
SELECT ((rt0.c1)<((+ (rt0.c3)))) FROM rt0, v0, vt0 ORDER BY LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.41466663206215537)  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))>>(rt0.c0)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) IS TRUE), CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE ((NULL)==(v0.c0)) END, TOTAL((~ (v0.c0))) COLLATE BINARY, ((((CASE WHEN rt0.c2 THEN NULL ELSE rt0.c0 END)AND((+ (rt0.c3)))))AND(((v0.c0)+(vt0.c0)))), ((((CAST(rt0.c4 AS TEXT))OR((((vt0.c0)) NOT BETWEEN ((0.2116149326595289)) AND ((rt0.c2))))))AND((('qa')!=(rt0.c4)))) FROM v0, rt0, vt0 WHERE (((((0xfffffffffbf7f844) NOT BETWEEN ('ueE~-<o	V') AND ('mQ'))) IS TRUE)) ORDER BY CASE NULL  WHEN CAST(rt0.c3 AS NUMERIC) THEN CAST(rt0.c4 AS TEXT) ELSE vt0.c0 END DESC  NULLS LAST LIMIT 1636429070 OFFSET 731486391; -- 0ms;
SELECT (((((rt0.c4)AND(vt0.c0))))<=((rt0.c3))) FROM vt0, rt0, v0 WHERE (CAST(CASE WHEN -1.385154341E9 THEN -1089487706 WHEN 0.5046443231337224 THEN x'' WHEN '-67635132' THEN '73133580' END AS BLOB)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), CASE rt0.c3  WHEN x'cc4a' THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE 0.89889861007787 END COLLATE NOCASE, MAX(CAST(v0.c0 AS BLOB)) FROM vt0;SELECT ALL (- (((((rt0.c2)OR(v0.c0)))AND(rt0.c4)))), ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN ((- (vt0.c0))) AND (((rt0.c1) NOT NULL))), 0xffffffffbe9247ae FROM vt0, v0;SELECT DISTINCT LIKELY(DISTINCT ((rt0.c4) NOTNULL)) FROM v0, vt0;SELECT DISTINCT (((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2))))>((CAST(rt0.c1 AS NUMERIC)))) FROM vt0, v0 WHERE (NULL) LIMIT -1382331155;SELECT COUNT(*) OVER () FROM v0, rt0; -- 0ms;
SELECT ALL ((('')) NOT BETWEEN ((((153778004) IS TRUE))) AND ((rt0.c3 COLLATE RTRIM))) FROM vt0, v0, rt0 WHERE ((NOT ('1347370380' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (~ (COUNT(*))) FROM vt0, rt0 WHERE ((((0.763277561002658)) BETWEEN ((('' IN (5186081, 0X504f3d8c)))) AND ((CASE WHEN NULL THEN x'' ELSE NULL END)))); -- 1ms;
SELECT DISTINCT (((((v0.c0, rt0.c3, v0.c0, v0.c0, rt0.c2))<((x'b40473a7', rt0.c0, v0.c0, rt0.c2, rt0.c3)))) NOT BETWEEN (((rt0.c0) NOT BETWEEN ('1261397981') AND (rt0.c2))) AND (((((rt0.c1)AND(v0.c0)))AND(rt0.c1)))), ((((v0.c0) NOTNULL))>(v0.c0)), ((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))OR(((((NULL)OR(rt0.c0)))OR(rt0.c2)))))AND((((rt0.c3))<((rt0.c0))))), COUNT(*), rt0.c0 FROM vt0;SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (NULL))) IS TRUE) FROM vt0, v0 ORDER BY (NOT (CASE rt0.c2  WHEN rt0.c0 THEN '' ELSE v0.c0 END))  NULLS LAST;SELECT DISTINCT CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE, (rt0.c1 IN ()), (((((((vt0.c0)) BETWEEN ((rt0.c4)) AND (('DVAa7qQrj'))))AND((((rt0.c3))==((rt0.c1))))))AND((((rt0.c4, rt0.c0, vt0.c0))<=((rt0.c1, vt0.c0, rt0.c4))))) FROM vt0, rt0 LIMIT -2070377008; -- 0ms;
SELECT DISTINCT ((rt0.c1)!=(rt0.c3)) FROM vt0, v0 NATURAL JOIN rt0 WHERE ((~ (CASE '-1387107028'  WHEN 0Xffffffffcb57d889 THEN 0.5607178395492941 ELSE 'n]-' END))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c3) BETWEEN ('') AND (vt0.c0)) THEN x'38a0' END FROM rt0 WHERE (((((TRIM(DISTINCT '-2012828200'))OR(((NULL)=('F(庅L')))))OR(((NULL)*('C')))));SELECT DISTINCT (((((rt0.c4))<((rt0.c1)))) NOT BETWEEN ((+ (rt0.c3))) AND ((((rt0.c0, rt0.c2, rt0.c4))=((rt0.c0, '1187010406', -79999929))))) FROM v0;SELECT NULL FROM rt0; -- 0ms;
SELECT ALL ((vt0.c0)>=(rt0.c3)) COLLATE RTRIM FROM v0, vt0 WHERE (((json_insert(NULL, '0.5607178395492941', '1895422964'))<(((x'')>=(0.8806755550834138)))));SELECT ALL ((((rt0.c4)GLOB(vt0.c0))) BETWEEN (CASE rt0.c4  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END) AND (NULL)), (x'' IN ()), CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) FROM v0;SELECT DISTINCT (((('-1384207541')AND((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))OR(NULL)) FROM vt0;SELECT DISTINCT CASE ((rt0.c4)IS(rt0.c4))  WHEN (((rt0.c2, vt0.c0, rt0.c1))==((rt0.c0, vt0.c0, rt0.c0))) THEN (~ (rt0.c3)) WHEN ((rt0.c1) ISNULL) THEN ((219700896)!=(vt0.c0)) WHEN 0xffffffffb2870c3a THEN AVG(v0.c0) WHEN (((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c3, rt0.c4))) THEN v0.c0 WHEN (((rt0.c4, vt0.c0, vt0.c0))<=((0.9269313355505694, rt0.c4, v0.c0))) THEN rt0.c2 COLLATE BINARY ELSE (((-1803539370, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c1, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c3))) END FROM rt0 ORDER BY ((((((rt0.c0) NOT BETWEEN ('Y]') AND (vt0.c0)))OR(((rt0.c0)<(rt0.c3)))))OR((((0xffffffffb2870c3a))<((rt0.c4))))) DESC;SELECT DISTINCT rt0.c0 FROM v0, rt0, vt0; -- 0ms;
SELECT ((((rt0.c3)>(rt0.c3))) NOT BETWEEN (COUNT(rt0.c0)) AND ((rt0.c2 IN ()))) FROM v0, vt0, rt0 WHERE ((+ (((NULL) BETWEEN (0.19317058559868172) AND (x''))))) ORDER BY ((((vt0.c0) NOT NULL))>=(((v0.c0) IS FALSE))); -- 0ms;
SELECT CAST(CAST(rt0.c4 AS NUMERIC) AS TEXT), '''', (((CAST(rt0.c3 AS BLOB), AVG(rt0.c2), SQLITE_COMPILEOPTION_GET(rt0.c4)))=((LIKELIHOOD(vt0.c0, 0.6655131871887235), ((rt0.c0) IS TRUE), ((vt0.c0) ISNULL)))) FROM rt0, vt0, v0 WHERE (CASE CASE NULL  WHEN 0.28415077334050187 THEN '' ELSE NULL END  WHEN 213560620 THEN '-zf' COLLATE BINARY WHEN CASE WHEN 0Xffffffffcf27cf13 THEN 3.2216123424155807E-4 WHEN 0.6969677751168971 THEN '㌬}' WHEN '1451909903' THEN 0X4b2f67dd END THEN UPPER(0.35590209567500586) WHEN (x'' IN ('-1384207541')) THEN NULL COLLATE NOCASE ELSE ((NULL)>('-1165762445')) END); -- 0ms;
SELECT DISTINCT '-8007483' COLLATE RTRIM, (rt0.c2 IN ()) COLLATE BINARY, SUM(((rt0.c0)IS NOT(vt0.c0))) FROM v0 LIMIT -1438610342 OFFSET -816072469;SELECT ((UPPER(0Xffffffffb1c1dce8)) NOT NULL) FROM vt0, v0, rt0; -- 0ms;
SELECT COUNT(*) OVER ( ROWS  CURRENT ROW) FROM rt0; -- 0ms;
SELECT NULL, (- (('-677010536' IN ()))), (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN '0.5046443231337224' THEN rt0.c4 ELSE -1.182274491E9 END IN ()) FROM vt0, v0 WHERE ((~ (CAST(x'' AS NUMERIC)))) ORDER BY (NOT (CASE WHEN v0.c0 THEN rt0.c4 END)) ASC  NULLS LAST;SELECT GROUP_CONCAT(((((vt0.c0)OR(rt0.c0)))OR(rt0.c3))), ((vt0.c0)AND(((('>O3py', rt0.c0, v0.c0))==((rt0.c1, vt0.c0, v0.c0))))), CASE WHEN COUNT(*) THEN ((v0.c0) IS FALSE) ELSE rt0.c0 COLLATE NOCASE END FROM vt0, v0 NOT INDEXED, rt0; -- 0ms;
SELECT (((rt0.c0 IN (rt0.c0)))>=('-129992386')) FROM v0, vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(TRIM(rt0.c1) COLLATE RTRIM) OVER () FROM v0, vt0, rt0 WHERE (CASE WHEN json_array_length(x'') THEN ((x'') BETWEEN (x'9a37') AND ('1184829579')) END) GROUP BY ((((rt0.c4) IS FALSE))<=((rt0.c0 IN ()))) HAVING CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC) ORDER BY rt0.c2 DESC  NULLS FIRST;SELECT DISTINCT (((v0.c0 IN (rt0.c1)))<<(COUNT(*))) FROM vt0, v0, rt0 WHERE (((((0.8851663222274413) BETWEEN ('.|b\r幈K') AND (0.6969677751168971))) ISNULL)); -- 1ms;
SELECT DISTINCT (((((((('DVAa7qQrj')OR(vt0.c0)))AND(rt0.c4)))AND((vt0.c0 IN ()))))AND(CAST(rt0.c0 AS NUMERIC))), ((((vt0.c0)&(rt0.c3))) BETWEEN ((((rt0.c0, v0.c0, v0.c0))>=((rt0.c0, rt0.c0, rt0.c4)))) AND (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN NULL END)), (((- (rt0.c2))) NOTNULL) FROM v0 NOT INDEXED, vt0, rt0; -- 0ms;
SELECT DISTINCT (((- (rt0.c2))) IS FALSE) FROM rt0 WHERE (CASE '731486391' COLLATE BINARY  WHEN CAST(0.17529149171720115 AS BLOB) THEN ((0xffffffffbf87d778) IS FALSE) ELSE -2031344547 COLLATE BINARY END); -- 0ms;
SELECT DISTINCT v0.c0 FROM rt0 GROUP BY (+ ((((1895422964, rt0.c4, vt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c1, v0.c0, rt0.c3, v0.c0))))), rt0.c3, ((x'')*(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))));SELECT ALL (rt0.c2 IN ()), 'q8', NULL FROM vt0 WHERE (CASE (((1267019519))==((NULL)))  WHEN INSTR(x'', '-155897150') THEN ((x'f109')AND(NULL)) ELSE IFNULL(DISTINCT NULL, 0xffffffffce7e44d8) END) GROUP BY (((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(1e500))))<>(((((vt0.c0))!=((v0.c0)))))), CAST((((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c1))) AS INTEGER), (CASE '2014040471'  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c2 END IN ());SELECT DISTINCT ((((GROUP_CONCAT(x''))OR((rt0.c1 IN (rt0.c3)))))OR((0.8103442375883407 IN ()))), CASE ((rt0.c0) NOT BETWEEN (-47137220) AND (rt0.c4))  WHEN ((v0.c0)||(rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE ((('-809440273')) BETWEEN ((rt0.c4)) AND ((rt0.c1))) END, (~ (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM v0, rt0, vt0 WHERE ((((+ (0.5007384519941591)))&((673124688 IN ())))); -- 0ms;
SELECT ((((rt0.c2) IS TRUE))/((- (vt0.c0)))) FROM vt0, rt0, v0 WHERE ((((NULL)) NOT BETWEEN (((('!') IS TRUE))) AND (('-1373247002')))); -- 0ms;
SELECT ((((rt0.c0)||(rt0.c3)))%(TOTAL(rt0.c0))) FROM rt0, vt0, v0; -- 0ms;
SELECT CAST(rt0.c2 COLLATE RTRIM AS REAL) FROM vt0, v0;SELECT ALL rt0.c2 FROM vt0, v0 WHERE (((((((((0.095450212230768 COLLATE BINARY)AND(((0.06376733921307687)=('Zἱ4')))))AND((- ('-1165762445')))))OR(NULL)))AND(CAST('' AS INTEGER))));SELECT ALL rt0.c3 FROM v0, vt0, rt0; -- 0ms;
SELECT ALL CASE (vt0.c0 IN ())  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c3)IS(vt0.c0)) WHEN (((rt0.c0, rt0.c2, rt0.c1))<((vt0.c0, rt0.c0, rt0.c4))) THEN ((rt0.c0)>>(rt0.c3)) WHEN (NOT (vt0.c0)) THEN v0.c0 COLLATE NOCASE ELSE ((0.22144682188910658) IS FALSE) END, ((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY COLLATE BINARY, 0.8709302459071808 FROM rt0, vt0 WHERE (((((((0.28415077334050187)OR(0Xffffffffce2ef50b)))OR(x'')))%((NULL IN ()))));SELECT DISTINCT COUNT(*) OVER (), rt0.c4, ((TOTAL(vt0.c0)) NOT BETWEEN ((((rt0.c1))!=((rt0.c2)))) AND (rt0.c4)) FROM vt0, v0 GROUP BY x'';SELECT ALL CASE ((v0.c0) NOTNULL)  WHEN (rt0.c1 IN (rt0.c0)) THEN vt0.c0 ELSE CAST(x'29f3c344' AS INTEGER) END FROM vt0 NOT INDEXED, v0 WHERE ((((((0.9316892491236214))>=((NULL)))) NOTNULL)) LIMIT -759904790 OFFSET -461903512;SELECT DISTINCT NTH_VALUE((~ (((rt0.c4)IS NOT(rt0.c2)))), json_patch(CASE WHEN 'Y_/}<Zrp' THEN rt0.c2 END, CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END)) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0 WHERE (CASE json_array_length(NULL)  WHEN ((0.5757444308116866)/('')) THEN ('-67635132' IN (NULL)) END); -- 0ms;
SELECT ALL (NOT ((+ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL vt0.c0, NULLIF(rt0.c3, 0.7305435224999182 COLLATE NOCASE), vt0.c0 FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT (((rt0.c0)=(vt0.c0)) IN ()) FROM rt0, v0, vt0; -- 0ms;
SELECT ALL ((+ (v0.c0)) IN (vt0.c0 COLLATE NOCASE, ((rt0.c3) NOT NULL))) FROM v0, vt0, rt0 WHERE (CASE WHEN ((0.892876072409144)||(0.6026795275024279)) THEN 0.5487818208524422 END); -- 1ms;
SELECT ((rt0.c4 COLLATE NOCASE) BETWEEN (rt0.c0) AND (rt0.c1)) FROM v0 ORDER BY ((((rt0.c0) NOT BETWEEN ('1023576793') AND (v0.c0)))+(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST, rt0.c4;SELECT DISTINCT CASE rt0.c0  WHEN 0.9269313355505694 THEN '-470746353' ELSE rt0.c1 END COLLATE BINARY FROM v0 WHERE (((((0Xffffffff8a202a60)*(x''))) NOT BETWEEN (((x'') NOTNULL)) AND ((('R!uk{&0C')LIKE('.|b\r幈k')))));SELECT DISTINCT ((((rt0.c2)IS NOT(vt0.c0)))>(rt0.c2 COLLATE RTRIM)), vt0.c0, ABS(DISTINCT rt0.c3 COLLATE RTRIM) FROM vt0, rt0, v0 WHERE ((((((NOT (NULL)))AND(((x'')||(0.4791708532034974)))))AND(('>' IN ())))); -- 0ms;
SELECT DISTINCT (((vt0.c0, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, rt0.c0, vt0.c0))<>((rt0.c0, rt0.c4, rt0.c0))), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c3)), vt0.c0 COLLATE RTRIM)) AND ((UPPER(rt0.c3), TOTAL(rt0.c4), CAST(vt0.c0 AS INTEGER)))) FROM v0 WHERE ((((x'' IN ())) BETWEEN ((NOT (0X340aaf43))) AND (((0xffffffffeff7e066)&('r!uk{&0c')))));SELECT ALL CAST((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS REAL), v0.c0 COLLATE BINARY, AVG(((rt0.c2)!=(vt0.c0))) FROM v0, rt0;SELECT SUM((rt0.c3 IN ())) FROM v0, rt0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), (rt0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM, CAST(NULL AS BLOB) FROM v0, vt0; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)<<(NULL)) FROM vt0, rt0 WHERE (((((((((((0xfffffffffb8563ed)OR(0.5741378849274187)))AND('1035792344')))AND(NULL)))OR(0.8086425215130584))) BETWEEN (CASE WHEN NULL THEN '0.13630974907213056' WHEN '572214846' THEN '1,g흸' WHEN 'f1' THEN x'' WHEN '-8007483' THEN '' WHEN x'b17d' THEN x'' END) AND (0.7931991368730478 COLLATE BINARY)));SELECT DISTINCT NTILE(((((rt0.c1)*(rt0.c4))) IS TRUE)) OVER () FROM v0, rt0, vt0 LIMIT 395850971; -- 0ms;
SELECT ALL (((v0.c0 IN (vt0.c0, vt0.c0))) NOT NULL) FROM rt0, vt0, v0; -- 0ms;
SELECT ALL (NOT (((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))) FROM vt0, rt0, v0; -- 0ms;
SELECT ALL (((rt0.c4, rt0.c4, vt0.c0)) BETWEEN ((((rt0.c4)IS('-89086294')), ((rt0.c1)!=(rt0.c1)), (- (v0.c0)))) AND ((((vt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)), CHANGES(), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))), rt0.c4, (((v0.c0 IN ()))<=(rt0.c3)) FROM v0, vt0, rt0 WHERE ((((+ (x''))) NOT BETWEEN (CASE WHEN 0.48853808092834783 THEN 0.39351362224611564 WHEN NULL THEN -1641285548 WHEN NULL THEN NULL END) AND ((((x'')) BETWEEN ((x'')) AND (('e0kvZ~i఺x')))))); -- 1ms;
SELECT DISTINCT v0.c0 FROM rt0 WHERE ((~ (((('}q5婁')) NOT BETWEEN (('1435425941')) AND ((0.9781889613527901))))));SELECT '-2070377008' COLLATE NOCASE FROM v0, vt0 WHERE (CAST(CAST(0.8010077860595359 AS INTEGER) AS BLOB)); -- 0ms;
SELECT DISTINCT (+ (AVG(rt0.c2))) FROM vt0, v0 WHERE ((('') NOT BETWEEN ((((x''))<=((0.6304371797901446)))) AND ((- (x'28b6')))));SELECT DISTINCT CASE WHEN (((rt0.c4))<((v0.c0))) THEN (+ (rt0.c0)) END, NTH_VALUE(CASE WHEN ((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN NULL WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) END, CAST((vt0.c0 IN ()) AS NUMERIC)) OVER (), (((rt0.c3, vt0.c0, rt0.c2)) NOT BETWEEN ((x'0dd7', vt0.c0, CASE NULL  WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c0 END)) AND ((CAST(v0.c0 AS TEXT), CASE 0.1358644958017814  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END, highlight(rt0.c3, rt0.c3, v0.c0, rt0.c3)))), ((((rt0.c2)!=(rt0.c2))) IS FALSE), (NOT (v0.c0 COLLATE NOCASE)) FROM vt0, v0 WHERE (((0xffffffffc1c016f8) NOTNULL) COLLATE BINARY COLLATE NOCASE) ORDER BY (((rt0.c4)) NOT BETWEEN ((((rt0.c4) BETWEEN (x'') AND (v0.c0)))) AND ((((rt0.c1)OR(rt0.c0)))));SELECT DISTINCT (- (((rt0.c4)IS NOT(rt0.c1)))), (NOT (GROUP_CONCAT(0.37807946958941485))), NTH_VALUE((~ ('1252666649')), ((((((v0.c0))<>((v0.c0))), ((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND ('-1174070079')), v0.c0 COLLATE BINARY))<((ABS(v0.c0), CAST(v0.c0 AS BLOB), (x'9e4f' IN ()), v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))))))) OVER () FROM v0;SELECT SUM(SUM(CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)) FROM v0 WHERE (UPPER(((NULL) NOT BETWEEN (-1.384207541E9) AND (0.6352368822459454))));SELECT DISTINCT (((rt0.c3)-(vt0.c0)) IN ()) FROM rt0, v0 WHERE (-1382331155); -- 0ms;
SELECT DISTINCT ((CASE WHEN 0x2fe815be THEN rt0.c4 ELSE rt0.c4 END) IS TRUE) FROM rt0, vt0, v0 ORDER BY ((((rt0.c2)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN (CASE rt0.c2  WHEN v0.c0 THEN rt0.c4 END)) ASC; -- 0ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((((v0.c0)-(rt0.c2)))) AND ((x'881f'))) FROM vt0, rt0, v0 WHERE (CAST('-685296852' AS INTEGER)); -- 0ms;
SELECT AVG(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 END) OVER ( ORDER BY IFNULL(((vt0.c0)IS NOT(rt0.c1)), rt0.c1 COLLATE NOCASE)  NULLS FIRST, (NOT (rt0.c4 COLLATE BINARY))) FROM rt0, v0, vt0; -- 0ms;
SELECT ALL CAST(NULL AS INTEGER) FROM rt0 WHERE (((NOT ('*')) IN ())) GROUP BY (~ (rt0.c4)); -- 0ms;
SELECT DISTINCT (- (rt0.c2)) COLLATE RTRIM, ((((vt0.c0) ISNULL))<<(COUNT(v0.c0))), '14742970' FROM vt0 WHERE ('0.9781889613527901') GROUP BY json_object(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN 0.298631367685556 THEN rt0.c1 END, ((('-819474669')) BETWEEN ((v0.c0)) AND ((rt0.c2)))) HAVING HEX((+ (x'')));SELECT (((rt0.c1) ISNULL) IN ()), ((rt0.c1) IS TRUE) COLLATE RTRIM, 0X25cd7102, ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN 0xffffffffcb21555d THEN v0.c0 END) BETWEEN ((rt0.c3 IN (0.8296154247899907, rt0.c3))) AND ((- (v0.c0)))), rt0.c1 FROM rt0, vt0 WHERE (((RTRIM(x'')) NOT BETWEEN (((((NULL)AND(0Xfffffffff5f6e5c6)))AND(x''))) AND (0.033480110245604044 COLLATE RTRIM))) LIMIT 1023576793 OFFSET -129992386;SELECT json_patch(x'', ((NULL) ISNULL)) FROM rt0, vt0 WHERE (CAST(CASE '\'  WHEN NULL THEN NULL END AS BLOB)); -- 0ms;
SELECT vt0.c0 COLLATE RTRIM FROM v0 WHERE ((+ ((((0.8846295129395857))!=((NULL)))))) LIMIT -103113017;SELECT 8.94739846E8 FROM v0, rt0 LIMIT -545500723; -- 0ms;
SELECT DISTINCT (((rt0.c1))=((rt0.c2))) COLLATE BINARY COLLATE RTRIM, DATE(((NULL)<(rt0.c3)), ((rt0.c4) NOTNULL), (rt0.c0 IN (rt0.c0, rt0.c3))), CASE WHEN v0.c0 COLLATE BINARY THEN LOWER(rt0.c2) WHEN x'' THEN v0.c0 COLLATE BINARY WHEN ((((((((546371651)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) THEN QUOTE(vt0.c0) ELSE ((rt0.c3)||(rt0.c0)) END FROM rt0, v0, vt0 WHERE (((('')) BETWEEN ((((x'') BETWEEN (NULL) AND (NULL)))) AND ((((x'')>>(0.04782100266851819)))))); -- 0ms;
SELECT ALL DATETIME(((((vt0.c0)AND(NULL)))OR(rt0.c4)), CAST(rt0.c4 AS BLOB), (NOT (rt0.c3))) FROM v0;SELECT ((CASE WHEN NULL THEN v0.c0 END) BETWEEN (AVG('c/&o#|q똨<')) AND (((rt0.c1) NOT NULL))), ((((rt0.c4) IS FALSE)) NOT NULL), ((((rt0.c4 COLLATE RTRIM)AND(MAX('}bJRVx576:3326301405315884204T-7168597453876870294 +W'))))OR(((0.5741378849274187)>(x'')))) FROM rt0, v0, vt0 WHERE (GLOB((('YM	걱') NOTNULL), (('') NOTNULL))) GROUP BY (((- (rt0.c4)))%(((vt0.c0) IS FALSE))) HAVING CAST(((rt0.c2)<>(v0.c0)) AS BLOB); -- 0ms;
SELECT ALL DATETIME((x'' IN ()), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)), ((v0.c0) NOTNULL)) FROM rt0, vt0, v0 WHERE (((6.73124688E8)<=('')) COLLATE RTRIM) GROUP BY (+ (rt0.c4)) COLLATE RTRIM, ((((rt0.c4)IS(rt0.c2)))GLOB(((vt0.c0) IS FALSE))), (((v0.c0))>((rt0.c2))) COLLATE BINARY HAVING (((((((((('1435425941')OR(rt0.c3)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c3))) NOTNULL); -- 1ms;
SELECT ((((CASE WHEN rt0.c4 THEN rt0.c2 ELSE NULL END)OR(((rt0.c1) IS TRUE))))AND('')), vt0.c0, UPPER(DISTINCT GROUP_CONCAT(rt0.c3)) FROM rt0, v0 LIMIT -919462095 OFFSET -8007483;SELECT ALL ((((v0.c0) NOTNULL)) BETWEEN (NULL) AND (CASE WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0, v0 WHERE ((((x'27a6')) BETWEEN ((NULL COLLATE RTRIM)) AND (((~ ('-1299772358'))))));SELECT ALL (((v0.c0) IS FALSE) IN (json_object(vt0.c0, '-1382331155'), ((rt0.c3)||(vt0.c0)))) FROM rt0, v0, vt0 WHERE (((((x'0ca6')<('646785793')))|((((1528678360)) BETWEEN (('-1182274491')) AND ((NULL)))))); -- 0ms;
SELECT ALL ((((rt0.c4)<<(vt0.c0)))+(((rt0.c4)IS(v0.c0)))) FROM vt0, rt0, v0 WHERE ((((((('1090490987')) BETWEEN (('ꨬzzK')) AND ((NULL))), (NULL IN ()), (- ('0.0'))))=(((((0.5867827181874057)) BETWEEN ((NULL)) AND ((0.6614211187421902))), (((NULL))>=((x''))), ((1.187010406E9) NOT NULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NOT (-7.9999929E7))) OVER () FROM vt0, rt0 WHERE ((((NULL) BETWEEN (0.5603940578078311) AND (NULL)) IN (CAST(x'4325c142' AS REAL), (~ (x'2df2'))))); -- 1ms;
SELECT DISTINCT SUM(CAST(rt0.c2 AS BLOB)), ((((((((((rt0.c0)/(vt0.c0)))AND(CAST(rt0.c0 AS TEXT))))AND(rt0.c4 COLLATE BINARY)))AND(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR((((rt0.c1))<=((rt0.c1))))), (((- (rt0.c3)))IS(MAX(rt0.c2))) FROM vt0, rt0, v0 NOT INDEXED WHERE (((((0.0943309802148844)||(NULL))) NOT NULL)); -- 0ms;
SELECT (+ (rt0.c3 COLLATE NOCASE)), ((rt0.c2 COLLATE NOCASE) BETWEEN (vt0.c0) AND (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))), (((((rt0.c2))==((vt0.c0)))) NOT BETWEEN (rt0.c1) AND (((rt0.c3)LIKE(x'f57c')))) FROM rt0, v0, vt0 WHERE ((((('1604563951') IS TRUE)) NOTNULL)); -- 0ms;
SELECT CAST(rt0.c0 AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 END) BETWEEN (-1299772358 COLLATE NOCASE) AND (CASE vt0.c0  WHEN 'hqqh%ch' THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN v0.c0 END)), v0.c0, (~ ((NOT (vt0.c0)))) FROM vt0;SELECT ALL x'', UNLIKELY(((rt0.c2)IS(rt0.c4))), CASE CAST(NULL AS INTEGER)  WHEN HEX(rt0.c0) THEN x'' WHEN (v0.c0 IN ()) THEN CASE rt0.c4  WHEN v0.c0 THEN rt0.c2 WHEN '857729166' THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 END WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN vt0.c0 COLLATE NOCASE END FROM rt0, vt0;SELECT ALL MAX(CASE WHEN rt0.c0 THEN vt0.c0 END) FROM v0;SELECT ALL TYPEOF(('1' IN ())) FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT NTILE(CASE ((rt0.c1)AND(rt0.c3))  WHEN rt0.c3 COLLATE NOCASE THEN rt0.c1 COLLATE RTRIM END) OVER ( PARTITION BY ((((0.5838385946136521)OR(((rt0.c0)||(rt0.c2)))))AND(((0X2dc63234)|(rt0.c2)))), CAST(CAST(rt0.c4 AS NUMERIC) AS NUMERIC)) FROM rt0, v0;SELECT CASE ((rt0.c1) IS TRUE)  WHEN ((rt0.c3)%(rt0.c0)) THEN ((v0.c0)%(rt0.c3)) WHEN COUNT(*) THEN CASE WHEN v0.c0 THEN rt0.c0 END WHEN (rt0.c2 IN (rt0.c2)) THEN CAST(v0.c0 AS BLOB) WHEN MIN('*N') THEN ((rt0.c0) BETWEEN (rt0.c4) AND ('D')) WHEN ((rt0.c0)*(v0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) ELSE x'' END, SUM(((664673419) BETWEEN (rt0.c4) AND (rt0.c0))) COLLATE RTRIM, (((((((((rt0.c2 IN (rt0.c1, rt0.c2)))AND(((rt0.c1)||(v0.c0)))))OR(((((((((v0.c0)AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 END)))AND((((rt0.c0))=((vt0.c0))))) FROM vt0, rt0 LIMIT -111734333;SELECT (((rt0.c2, v0.c0, v0.c0))=((rt0.c3, rt0.c0, rt0.c3))) COLLATE RTRIM FROM v0, rt0; -- 0ms;
SELECT ALL AVG(CHAR(v0.c0, vt0.c0, 0.1358644958017814) COLLATE BINARY) OVER () FROM rt0;SELECT DISTINCT (((((((rt0.c0, rt0.c4, rt0.c4)) BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))OR(TYPEOF(DISTINCT rt0.c1))))OR((- (rt0.c2)))), LAG(CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '0.3819269988639431' WHEN vt0.c0 THEN vt0.c0 END AS BLOB), (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))>((vt0.c0 COLLATE NOCASE))), QUOTE(CASE vt0.c0  WHEN 0X311b044b THEN vt0.c0 END)) OVER ( PARTITION BY (((((((((rt0.c4 IN ()))OR(vt0.c0 COLLATE BINARY)))AND(((rt0.c0) IS FALSE))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END)), (CAST(v0.c0 AS TEXT) IN ())), ((0Xffffffffea3fbca4 IN ()) IN ()) FROM vt0 LIMIT -359699467;SELECT COUNT(*) FROM vt0, v0 WHERE ((- (NULL))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE)) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND ((+ (rt0.c4)))) FROM rt0, vt0, v0; -- 1ms;
SELECT DISTINCT CAST(x'a66f' AS REAL) COLLATE NOCASE FROM rt0 WHERE ('y_/}<zrp'); -- 0ms;
SELECT DISTINCT LAST_VALUE((TYPEOF(DISTINCT rt0.c2) IN ())) OVER ( ORDER BY ((((rt0.c3)+(v0.c0)))!=(GLOB(rt0.c0, rt0.c3))) ASC  NULLS LAST) FROM rt0, v0 WHERE (((((((((0X17b7bda9 COLLATE BINARY)AND(((((0.6658491537571072)AND('')))AND(0Xffffffffcc91f494)))))AND((~ (-89086294)))))OR((((((((('1216664832')AND(NULL)))AND(NULL)))AND(x'')))AND(x'')))))OR((x'6006' IN ())))) GROUP BY (((+ (rt0.c2))) ISNULL) HAVING CASE (rt0.c2 IN (rt0.c0, rt0.c1))  WHEN ((rt0.c3)AND(v0.c0)) THEN ((((v0.c0)AND(vt0.c0)))AND(rt0.c4)) END LIMIT 1366819379 OFFSET 437600139;SELECT DISTINCT CASE (v0.c0 IN ())  WHEN INSTR(rt0.c3, rt0.c4) THEN vt0.c0 END FROM v0, vt0, rt0 WHERE (CASE CASE '1904576210'  WHEN 0x4681f015 THEN '1753934170' END  WHEN ((x'7133') NOTNULL) THEN (('-1487117846') IS FALSE) WHEN ((((0.41895651743771867)AND(x'ca83')))OR(NULL)) THEN ((x'e5e7') BETWEEN (NULL) AND ('-1385154341')) WHEN CAST(0.652319569591672 AS REAL) THEN (('(') NOT BETWEEN (NULL) AND (0.857743875371481)) END); -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) OVER () FROM vt0 ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) AS TEXT) DESC, (NOT (CASE WHEN vt0.c0 THEN '{0' ELSE rt0.c1 END)) ASC;SELECT DISTINCT ((vt0.c0 COLLATE BINARY)!=((+ (rt0.c3)))), (((((rt0.c0)AND(rt0.c2)))AND(v0.c0)) IN ()), ((rt0.c2) IS TRUE) FROM v0, rt0, vt0 LIMIT -1673970913 OFFSET 1184829579; -- 0ms;
SELECT ALL '.|b\r幈K' FROM vt0 WHERE ((((NULL)LIKE('!')) IN ())); -- 1ms;
SELECT ((0.2106656128380705 COLLATE NOCASE)||(((rt0.c1)!=(vt0.c0)))) FROM rt0;SELECT ALL CAST(rt0.c3 COLLATE BINARY AS INTEGER) FROM v0 WHERE (CAST(((1.184829579E9) IS FALSE) AS BLOB));SELECT ALL (+ (rt0.c4 COLLATE RTRIM)) FROM v0, vt0, rt0 WHERE (CASE WHEN (((('')AND(0X34a6e5ac)))AND(x'')) THEN x'' COLLATE BINARY ELSE NULL END); -- 0ms;
SELECT ALL SUM((NULL IN ())) OVER ( ROWS NULLIF(DISTINCT ((v0.c0)AND(rt0.c2)), (rt0.c3 IN ())) PRECEDING EXCLUDE GROUP), 0.8851663222274413, CASE TRIM(rt0.c4, vt0.c0)  WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 COLLATE RTRIM THEN (NOT (v0.c0)) WHEN (((rt0.c0))>=((rt0.c1))) THEN ((rt0.c0)IS(rt0.c3)) END FROM rt0 WHERE ((((('-1727447466')=(0.28415077334050187)))&((+ (-482651043))))) ORDER BY ABS(((vt0.c0)IS NOT(rt0.c0)))  NULLS FIRST, (('') BETWEEN (rt0.c3 COLLATE RTRIM) AND (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2))))  NULLS LAST, CAST(((rt0.c4) NOT BETWEEN (rt0.c4) AND (v0.c0)) AS REAL) ASC  NULLS LAST;SELECT ALL rt0.c3 FROM vt0;SELECT DISTINCT (((v0.c0, v0.c0, rt0.c4, rt0.c0, x'')) NOT BETWEEN (((rt0.c2 IN ()), ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), LIKELY(DISTINCT rt0.c1), v0.c0 COLLATE RTRIM, -1164024531)) AND ((((v0.c0)GLOB(rt0.c4)), ((rt0.c1)!=(v0.c0)), ((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)), ((rt0.c1) NOT NULL), (- (rt0.c3))))) FROM rt0, v0, vt0 WHERE (((((CASE WHEN 0.4198176252407487 THEN '389206314' ELSE '*+G*oyxj' END)AND(NULLIF(DISTINCT 1363265955, NULL))))OR('1843158960'))); -- 1ms;
SELECT ALL ((((x'')|(1.451909903E9))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c2 IN ()))) FROM rt0, v0, vt0 WHERE ((((((NULL)) NOT BETWEEN ((x'')) AND ((x'')))) IS FALSE)); -- 0ms;
SELECT ALL (((((v0.c0))>((rt0.c2))))<>(rt0.c3 COLLATE NOCASE)) FROM rt0, vt0, v0; -- 0ms;
SELECT CASE CASE rt0.c4  WHEN v0.c0 THEN rt0.c0 ELSE vt0.c0 END  WHEN -1.174070079E9 COLLATE NOCASE THEN rt0.c4 COLLATE RTRIM ELSE ((x'b2cf') NOTNULL) END FROM vt0, v0, rt0 ORDER BY (((NOT (rt0.c0))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) DESC, ((((rt0.c3)OR(rt0.c3))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (CASE WHEN vt0.c0 THEN rt0.c2 END))  NULLS LAST, (((((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND ((rt0.c3 IN ())))  NULLS LAST; -- 0ms;
SELECT DISTINCT (load_extension(rt0.c1, rt0.c3) IN ((((rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3))))), (((v0.c0)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND (((((vt0.c0))<=((rt0.c3)))))), ((CHAR('')) IS TRUE) FROM rt0, v0 ORDER BY HEX(((rt0.c0) ISNULL))  NULLS FIRST;SELECT FIRST_VALUE(((((((NULL, rt0.c3, rt0.c2))<=((rt0.c4, v0.c0, rt0.c1))), (v0.c0 IN ()), (~ (v0.c0)), CAST(rt0.c0 AS NUMERIC), CAST(rt0.c2 AS NUMERIC)))<>(((rt0.c4 IN ()), rt0.c1, 0.0943309802148844, (~ (rt0.c2)), (((rt0.c2, rt0.c2, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c4)) AND ((rt0.c0, v0.c0, rt0.c2))))))) OVER ( ORDER BY CASE (((rt0.c0))<((v0.c0)))  WHEN 'Sꊥ\B\rk+v' THEN ((v0.c0)>>(vt0.c0)) WHEN ((rt0.c0)=(rt0.c3)) THEN ((rt0.c3)|(rt0.c1)) WHEN ((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) FROM rt0, v0;SELECT ALL PERCENT_RANK() OVER (), (+ (rt0.c1 COLLATE RTRIM)), ((IFNULL(DISTINCT rt0.c1, rt0.c4)) NOT BETWEEN (((vt0.c0)+(rt0.c1))) AND (CAST(rt0.c2 AS BLOB))), ((((rt0.c2) NOTNULL))IS(TOTAL(vt0.c0))), (((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c3)))) BETWEEN (1.895422964E9) AND (CAST(rt0.c1 AS TEXT))) FROM rt0 WHERE ('-558101443');SELECT ALL CASE WHEN (+ (rt0.c1)) THEN rt0.c3 END FROM vt0;SELECT x'' FROM v0, vt0 WHERE (((x'4d5a') ISNULL)); -- 1ms;
SELECT ALL (~ (((rt0.c4)=(rt0.c4)))) FROM v0, rt0, vt0; -- 0ms;
SELECT MIN(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c3))) FROM rt0 WHERE (CASE 0.6491721552337891  WHEN 0.12646890374208553 THEN '626142550' WHEN 0.8725143956077622 THEN x'' WHEN NULL THEN '295024168' END COLLATE BINARY);SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt0 WHERE ((CAST('-1487117846' AS REAL) IN ())) GROUP BY x'9a46', ((((vt0.c0)|(rt0.c2)))LIKE(NULL)), ((((LIKE(0.7123447995289012, rt0.c3))OR(CAST(rt0.c1 AS NUMERIC))))AND((rt0.c4 IN ())));SELECT SUM(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END) OVER () FROM rt0, vt0 WHERE ((((CHANGES(), 'D(3q' COLLATE BINARY, LOWER('4|Wsi5')))<=((CAST(-390621746 AS REAL), ('.|b\r幈k' IN ()), (('')<(NULL)))))); -- 0ms;
SELECT ((((vt0.c0)OR(rt0.c0))) BETWEEN ((NOT (rt0.c2))) AND (((vt0.c0)|(rt0.c3)))) FROM rt0 WHERE ((((((((('6<Eu')AND(NULL)))AND(0.5741378849274187)))AND(((x'')<<(NULL)))))OR(CASE NULL  WHEN NULL THEN '0.0892809097605799' END))) LIMIT 1545212538 OFFSET -67635132;SELECT DISTINCT ((((json_array_length(rt0.c1))OR(((rt0.c1)LIKE(0.8010077860595359)))))AND(CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END)), (((- (rt0.c2))) NOT BETWEEN ((rt0.c2 IN ())) AND ((((NULL, rt0.c3, rt0.c2))>=((rt0.c4, vt0.c0, vt0.c0))))), 0.5725652397200997 FROM rt0, vt0 WHERE ((x'' COLLATE BINARY IN ()));SELECT ALL ((((0.2924687380424199)+(rt0.c3)))||((((x'', v0.c0, rt0.c0))<=((rt0.c0, v0.c0, rt0.c1))))) FROM rt0, vt0;SELECT ALL v0.c0 FROM rt0 LIMIT 153778004 OFFSET -682592131;SELECT ABS(DISTINCT CASE rt0.c4  WHEN vt0.c0 THEN rt0.c1 ELSE 0.7001651163296106 END) FROM v0, vt0, rt0 WHERE ((CAST(x'8957' AS TEXT) IN (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT NULL)) NOTNULL) FROM vt0, rt0, v0 GROUP BY (((NOT (v0.c0))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((((vt0.c0, rt0.c1, rt0.c4))=((-8.17716561E8, rt0.c2, rt0.c0))))), ((0.6145179082009793)|(vt0.c0)), ((((rt0.c4) BETWEEN (v0.c0) AND (rt0.c3))) NOT BETWEEN (NULL) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)) HAVING (((- (v0.c0))) NOT BETWEEN (NULL) AND (((vt0.c0)<<(rt0.c1)))); -- 0ms;
SELECT DISTINCT CAST(TOTAL(vt0.c0) AS INTEGER) FROM v0, vt0, rt0; -- 1ms;
SELECT ALL x'' FROM v0, vt0, rt0 WHERE (((((1.023576793E9) IS FALSE)) ISNULL)); -- 0ms;
SELECT (((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((((rt0.c2))<((x''))), rt0.c2, json_type(rt0.c2))) AND (((rt0.c0 IN ()), ((rt0.c0)IS(vt0.c0)), ((((NULL)AND(rt0.c0)))OR(rt0.c3))))), NTH_VALUE((NOT (rt0.c2 COLLATE NOCASE)), 'J㓛') OVER (), COUNT((rt0.c0 IN ('2105720020'))), CASE (NOT (vt0.c0))  WHEN rt0.c2 THEN CAST(0.2654261865095201 AS NUMERIC) WHEN json_array_length(v0.c0) THEN ((rt0.c3) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((NULL)IS(rt0.c2)) THEN TOTAL(rt0.c0) END, (((((('j<j\n_')AND(rt0.c2)))AND(v0.c0)))LIKE(MAX(rt0.c0))) FROM vt0, rt0 ORDER BY (((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)) ASC, rt0.c1, COALESCE((((v0.c0, rt0.c3, v0.c0))=((vt0.c0, x'', rt0.c0))), ((rt0.c4)!=(rt0.c4))), ((((((((((v0.c0)OR(v0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c3))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c4))  NULLS LAST;SELECT PERCENT_RANK() OVER () FROM vt0, rt0, v0 WHERE (((CASE WHEN '572214846' THEN x'' ELSE 0xffffffffd727332c END)||((NULL IN ())))) LIMIT 1184829579 OFFSET 6846436; -- 1ms;
SELECT ALL CASE (rt0.c4 IN ())  WHEN ((NULL) NOT BETWEEN (0x262d2ca2) AND ('-929357508')) THEN CAST(NULL AS NUMERIC) ELSE x'' END FROM rt0, vt0 WHERE (((((x'') BETWEEN (0xffffffffc181ce02) AND (x'')))&((((x''))=(('0.033480110245604044')))))); -- 0ms;
SELECT ALL rt0.c0, (((vt0.c0 IN (vt0.c0)))/(rt0.c0 COLLATE RTRIM)), CASE WHEN '' THEN ((rt0.c3) NOTNULL) END FROM v0, rt0, vt0 WHERE (CASE ((x'')<>(''))  WHEN CAST(-430573010 AS INTEGER) THEN (('0.5867827181874057') NOT BETWEEN (NULL) AND ('f(庅l')) END); -- 0ms;
SELECT AVG(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) FROM rt0, v0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 COLLATE NOCASE, ((rt0.c2)%(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))))>((rt0.c0, ABS(DISTINCT rt0.c3), CASE v0.c0  WHEN 0.49465036948590013 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) FROM v0, rt0;SELECT ALL (- ((~ (rt0.c1)))) FROM rt0 WHERE (''); -- 0ms;
SELECT DISTINCT IFNULL(rt0.c0 COLLATE BINARY, 'J㓛'), (((rt0.c1)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((((v0.c0)GLOB(rt0.c2))))), (- (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)))) FROM rt0, v0 WHERE ('');SELECT DISTINCT COUNT(vt0.c0) OVER (), 'rO', HEX(TOTAL(rt0.c1)) FROM v0 LIMIT 374457444;SELECT DISTINCT CAST(CAST(NULL AS REAL) AS REAL) FROM vt0, v0; -- 0ms;
SELECT ALL LEAD(((((vt0.c0 COLLATE RTRIM)AND((- (rt0.c3)))))AND((~ (rt0.c1)))), x'', CASE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c4))  WHEN CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 END THEN CAST(v0.c0 AS NUMERIC) ELSE NULL END) OVER () FROM v0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c4 AS BLOB))OR(((((rt0.c2)OR(rt0.c4)))OR(v0.c0)))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) FROM v0;SELECT DISTINCT ('rG' IN ()) COLLATE NOCASE FROM vt0, v0 WHERE ((((('836325014')AND(NULL))) BETWEEN (((x'') IS FALSE)) AND (CASE WHEN '1187010406' THEN NULL END))); -- 0ms;
SELECT DISTINCT rt0.c1, (TOTAL(rt0.c2) IN ()), (- (((vt0.c0)>('1')))) FROM rt0, vt0, v0 WHERE ((((+ (0.3350183536487692))) NOT BETWEEN (((((x'')AND('HL	al< N')))AND(x'26de'))) AND (((x'9708')*(''))))); -- 1ms;
SELECT DISTINCT CAST(AVG(vt0.c0) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, v0 GROUP BY CASE rt0.c0  WHEN (((rt0.c3)) BETWEEN ((vt0.c0)) AND (('1604267649'))) THEN CASE WHEN vt0.c0 THEN v0.c0 END ELSE (NOT (rt0.c0)) END, (((rt0.c1 IN ())) NOTNULL), load_extension(((rt0.c2) IS TRUE));SELECT DISTINCT vt0.c0 FROM rt0 WHERE ((((''))==(('-159176252'))) COLLATE RTRIM);SELECT DISTINCT json_valid(COUNT(vt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c4) ISNULL)) COLLATE RTRIM FROM v0, rt0, vt0; -- 0ms;
SELECT (((v0.c0 IN (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c1)AND(rt0.c4)))) FROM v0, vt0, rt0 LIMIT 1982564011; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0)))==(0.49460478514830564)) FROM rt0, v0 WHERE ((((0.04556833757273904) BETWEEN (0.35966088156907206) AND (0.4634552090514086)) IN (CAST(7.313358E7 AS BLOB), (('-1387107028')/('0.6270637888949996'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS FALSE)) NOT NULL) FROM rt0, vt0 LIMIT 62705221; -- 0ms;
SELECT DISTINCT COUNT('1596314877'), ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN NULL THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c4 END) AND (((('-498942767', rt0.c2, v0.c0)) BETWEEN ((rt0.c1, vt0.c0, v0.c0)) AND ((rt0.c0, rt0.c1, '386557904'))))), CASE WHEN UNLIKELY(rt0.c1) THEN LOWER(rt0.c3) END FROM v0, vt0 WHERE (CAST(0.2865192871698995 COLLATE RTRIM AS INTEGER)) LIMIT 213560620 OFFSET -395199594;SELECT ALL (((v0.c0 IN ('-412077783'))) IS TRUE) FROM v0 WHERE ((((-3.90621746E8) IS FALSE) IN ())); -- 0ms;
SELECT (((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c4))))>=((CASE WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END))) FROM rt0, v0 WHERE (((((NULL) BETWEEN ('341719855') AND (NULL))) BETWEEN ('0.5867827181874057' COLLATE NOCASE) AND ((('') BETWEEN (NULL) AND ('\n]')))));SELECT (((0.7305435224999182))>=(((NOT (rt0.c2))))), ((((v0.c0)LIKE(rt0.c1)))&((rt0.c0 IN ()))), ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((((('㪘R\r[^utz')OR(v0.c0)))AND(rt0.c3))) AND (((rt0.c2)IS NOT(rt0.c1)))) FROM v0 WHERE (CASE WHEN ((NULL) NOT NULL) THEN ((NULL)+('1354765906')) END) ORDER BY (NOT (IFNULL(rt0.c3, rt0.c4))) ASC  NULLS LAST;SELECT DISTINCT ((((rt0.c2 IN (rt0.c2))))!=((LIKELY(DISTINCT v0.c0)))), ((((CASE rt0.c0  WHEN v0.c0 THEN NULL ELSE rt0.c0 END)AND(COUNT(NULL))))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN v0.c0 THEN -2081335651 END)), ((HEX(DISTINCT v0.c0)) ISNULL) FROM v0, vt0 WHERE (((CASE '1267019519'  WHEN 0.20651582894870812 THEN x'' END)+((((0.9115423357210929)) NOT BETWEEN ((x'')) AND (('举t?NM'))))));SELECT DISTINCT SUBSTR(rt0.c3, v0.c0) COLLATE NOCASE FROM rt0, v0 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN ((('395850971') BETWEEN ('') AND (x''))) AND (((((NULL)AND(0.8851663222274413)))AND(0Xffffffffb2a1c0ad))))); -- 0ms;
SELECT CAST(rt0.c0 AS REAL) COLLATE BINARY FROM rt0; -- 0ms;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((CAST(x'4bb7' AS BLOB)))<((SQLITE_VERSION())))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM v0, vt0 ORDER BY LIKELY(DISTINCT (+ (v0.c0))); -- 0ms;
SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))OR(((rt0.c0)IS(rt0.c3)))))AND(json_type(rt0.c0))), COALESCE(CASE v0.c0  WHEN NULL THEN vt0.c0 ELSE rt0.c3 END, ((rt0.c4) NOT NULL)), TOTAL((((rt0.c3))>((v0.c0)))), CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) ELSE ((rt0.c1)>>(v0.c0)) END, (CASE WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END IN ()) FROM rt0 WHERE ((CASE 'gV'  WHEN 'S+>!*P	d' THEN NULL ELSE x'' END IN ()));SELECT LTRIM(((rt0.c0)*(0.6442747299246261)), (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))), rt0.c0, -1376381485 FROM vt0, rt0 WHERE (((((((((HEX(DISTINCT '?ဧ'))AND(('-560424054' IN ()))))AND(json_extract(0.5760979634546906, NULL))))AND((('0.13630974907213056') NOT BETWEEN (x'') AND (0.8568768169660355)))))AND((((((((('懪(!')OR(NULL)))AND('-259042263')))OR('424273406')))AND(x''))))); -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT NULL) COLLATE BINARY FROM rt0, v0 WHERE ((((NULL, NULL, 0Xffffffff86ec245d)) BETWEEN (((((0X4614f2d3))<=((NULL))), CASE WHEN NULL THEN '803739070' END, ((((((((x'')AND('-817716561')))AND(x'fc16')))OR('-816072469')))OR(NULL)))) AND (((NULL IN ()), CAST(x'' AS TEXT), ((NULL) NOT BETWEEN (0.3228648921710048) AND ('g7')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)==(rt0.c0))) NOT BETWEEN (CASE x'6cc3'  WHEN vt0.c0 THEN NULL END) AND ((((vt0.c0))<=((rt0.c2))))) FROM rt0, v0 WHERE (TRIM(DISTINCT json_array_length(x'', 112513910), ((NULL) NOT BETWEEN (NULL) AND (x'77f2')))) GROUP BY (('') NOT BETWEEN (((v0.c0)LIKE(rt0.c3))) AND (((rt0.c4)>>(rt0.c0)))) HAVING ((UNLIKELY(vt0.c0))&(((vt0.c0)/(rt0.c3))));SELECT DISTINCT ((GROUP_CONCAT(vt0.c0)) BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE x'' END) AND (x'da9c')) FROM v0 WHERE (((x'')OR(964603408)) COLLATE NOCASE);SELECT DISTINCT (((((rt0.c1))!=((rt0.c2))))>=(TYPEOF(DISTINCT rt0.c4))) FROM v0;SELECT DISTINCT ((((~ (rt0.c4))))>=((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END))) FROM vt0;SELECT DISTINCT ((CAST(rt0.c3 AS REAL))>(((rt0.c2) BETWEEN (0X6cae2ad0) AND (v0.c0)))), CAST(rt0.c0 COLLATE BINARY AS NUMERIC), CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c3)LIKE(rt0.c0)) WHEN NULL THEN (+ (0x356e0319)) WHEN '803739070' THEN CASE WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END END FROM v0, vt0 LIMIT -1097709650;SELECT (NOT ((rt0.c1 IN (v0.c0)))), DATETIME((rt0.c4 IN ()), COUNT(v0.c0), rt0.c1), SQLITE_COMPILEOPTION_USED(COALESCE(DISTINCT rt0.c4, v0.c0)) FROM vt0, v0 ORDER BY CASE WHEN ((((rt0.c1)OR(vt0.c0)))AND(rt0.c4)) THEN (~ (rt0.c1)) WHEN x'' THEN ((((rt0.c3)AND(rt0.c2)))AND(vt0.c0)) WHEN ((((rt0.c0)AND(1.035792344E9)))AND('')) THEN CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c2 END WHEN (rt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE WHEN SQLITE_COMPILEOPTION_USED(v0.c0) THEN ((vt0.c0) NOT BETWEEN (x'') AND (rt0.c3)) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) END, (((((x'', rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, v0.c0, '89727048')) AND ((vt0.c0, rt0.c0, rt0.c1)))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c1 THEN '-403805482' END) AND ((rt0.c2 IN ())));SELECT ALL (- (CAST(v0.c0 AS NUMERIC))), CASE load_extension(rt0.c4, '2145237933')  WHEN ((rt0.c3) BETWEEN (x'') AND (rt0.c1)) THEN rt0.c1 ELSE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)) END, (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c4 END))>=((rt0.c2))) FROM v0 LIMIT -677010536 OFFSET 1896086185;SELECT DISTINCT COUNT(*) FROM rt0, vt0, v0 WHERE (((CASE NULL  WHEN NULL THEN 0.6417498248729395 ELSE '' END) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)>>(rt0.c1)) THEN 0.6379761544507355 END FROM vt0, v0, rt0 WHERE (((CAST('tY' AS BLOB))<=((('\nG') NOTNULL)))); -- 0ms;
SELECT CASE WHEN ((('289371441')) NOT BETWEEN ((rt0.c4)) AND ((0.9563964087235525))) THEN NULL ELSE ((rt0.c4)+(vt0.c0)) END FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c3)*(rt0.c4))) OVER ( ORDER BY CASE WHEN (NULL IN (vt0.c0)) THEN (((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN CAST(vt0.c0 AS BLOB) THEN '2060690253' WHEN ((((rt0.c2)OR('')))OR(0.7502006781489595)) THEN rt0.c4 WHEN rt0.c3 COLLATE BINARY THEN CAST('O3a' AS TEXT) WHEN TIME(rt0.c3, rt0.c2, v0.c0) THEN (- (rt0.c4)) END) FROM vt0, v0 WHERE (CAST(((x'')IS NOT('')) AS TEXT));SELECT ((x'')>((~ (rt0.c1)))) FROM v0, rt0 WHERE (CASE ((('c'']%i'))>((0.9476825539417608)))  WHEN ((0.127074302744424)OR('aOxUKK(K7')) THEN (('{0')IS NOT(x'')) END); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT NULL) FROM vt0 WHERE (NULLIF(((-2138849869) IS FALSE), ('' IN (0.5663871483256511)))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) IS TRUE))GLOB(vt0.c0 COLLATE RTRIM)) FROM v0, vt0;SELECT ((CASE WHEN rt0.c3 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN vt0.c0 END) IS TRUE) FROM rt0, v0, vt0; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c4 THEN rt0.c4 END)OR(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND(((rt0.c3)OR(rt0.c0)))) FROM rt0, vt0, v0; -- 0ms;
SELECT (((((rt0.c0, vt0.c0, rt0.c3))<>((vt0.c0, vt0.c0, rt0.c2))))>((((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))), v0.c0, ((COUNT(rt0.c2)) IS TRUE) FROM v0, vt0, rt0; -- 0ms;
SELECT DISTINCT SUM(COUNT(*)) FROM v0, vt0;SELECT LAG(0.18796704774321527, (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))<>((CAST(v0.c0 AS REAL)))), CASE WHEN ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND('0.5757444308116866')) THEN (('0.035361146685903955')GLOB(v0.c0)) ELSE ((v0.c0)<=(v0.c0)) END) OVER () FROM v0 LIMIT 1312636915; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()), rt0.c4, ((((((((0.7700255523809606)OR(v0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)) COLLATE RTRIM FROM vt0, v0, rt0 WHERE ((TRIM(DISTINCT 0.2342086938404293) IN ())) LIMIT -390621746 OFFSET -1115315081; -- 0ms;
SELECT ((((rt0.c4)<>(rt0.c0))) NOT NULL), ((((((rt0.c0)OR(v0.c0)))AND(rt0.c1))) IS FALSE), ((CAST(v0.c0 AS TEXT)) BETWEEN ((~ (rt0.c3))) AND (TRIM(DISTINCT v0.c0, rt0.c1))) FROM vt0, v0 WHERE (((((-1229158764)<<(NULL)))/((('') BETWEEN ('1187010406') AND (x'ac70'))))) UNION SELECT TYPEOF((((NULL))>=((rt0.c4)))), (((vt0.c0)+(rt0.c3)) IN (NULL)), v0.c0 COLLATE BINARY FROM v0 LEFT OUTER JOIN rt0 ON ((((((((UNLIKELY(DISTINCT rt0.c0))OR(((x'')||(rt0.c2)))))OR(ABS(rt0.c2))))AND((NOT (vt0.c0)))))AND((rt0.c3 IN ()))) RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0) NOT NULL) AS TEXT) GROUP BY (((rt0.c3 COLLATE NOCASE))!=((vt0.c0))) HAVING (('1977747251') NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((rt0.c4 IN ()))) ORDER BY ((((rt0.c2) ISNULL)) NOTNULL)  NULLS LAST;SELECT ALL (((NULL)) BETWEEN ((((NULL) BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((json_type(v0.c0)))) FROM v0 WHERE (((('1032922932'))<(('386557904'))) COLLATE NOCASE);SELECT ALL (((((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)), vt0.c0 COLLATE BINARY, rt0.c3, CASE vt0.c0  WHEN rt0.c1 THEN rt0.c4 END, (+ (0.6328514888528927))))>=((((rt0.c2) BETWEEN (rt0.c1) AND (0xffffffffe28a9624)), ((rt0.c3)AND(v0.c0)), LOWER(NULL), rt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS INTEGER)))), ((+ (rt0.c4)) IN ()), TOTAL(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c4))) OVER () FROM v0, vt0, rt0; -- 0ms;
SELECT ALL (((((rt0.c0))!=((rt0.c3))))|(GROUP_CONCAT(v0.c0))), (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))>((rt0.c4 COLLATE NOCASE))), (NOT (CASE v0.c0  WHEN rt0.c2 THEN rt0.c4 END)) FROM rt0, v0; -- 0ms;
SELECT DISTINCT ((2033714242)||(CAST(rt0.c4 AS BLOB))) FROM rt0, vt0, v0 WHERE ((+ (CASE NULL  WHEN 1 THEN '-1164024531' END))); -- 0ms;
SELECT ALL (((v0.c0)) BETWEEN ((HEX(vt0.c0))) AND (((+ (vt0.c0))))) FROM rt0;SELECT DISTINCT (~ (json_remove(v0.c0, v0.c0))), GROUP_CONCAT(((rt0.c3)||(rt0.c3))), ((CASE '-1387107028'  WHEN rt0.c3 THEN v0.c0 END)>=(rt0.c4 COLLATE BINARY)) FROM rt0, v0 WHERE ((+ (CAST(NULL AS REAL)))); -- 0ms;
SELECT UPPER(DISTINCT CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END) FROM v0, rt0; -- 0ms;
SELECT ALL ((LIKE(v0.c0, rt0.c2, '1'))LIKE(((((vt0.c0)OR(v0.c0)))OR(rt0.c3)))), (((((+ (v0.c0)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c3)))))OR(LIKELY(DISTINCT vt0.c0))), (((((+ (rt0.c3)))AND(CASE WHEN rt0.c2 THEN rt0.c4 WHEN 0.005118314293120485 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 ELSE vt0.c0 END)))OR(((((0.7933102417073118)AND(vt0.c0)))AND(rt0.c1)))), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM, ((((((((((rt0.c0)<(rt0.c4)))AND(CAST(vt0.c0 AS REAL))))OR((((rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0)) NOT BETWEEN ((NULL, rt0.c2, rt0.c4, vt0.c0, '')) AND ((v0.c0, rt0.c3, rt0.c3, rt0.c4, rt0.c3))))))AND(vt0.c0 COLLATE NOCASE)))OR(((rt0.c0)&(rt0.c3)))), (NOT (SQLITE_COMPILEOPTION_USED(rt0.c3))), (((v0.c0 IN (rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c2) IS TRUE))) FROM rt0 WHERE ((NOT (TYPEOF(NULL)))) ORDER BY ((((~ (rt0.c2)), v0.c0 COLLATE NOCASE, ((v0.c0)AND(rt0.c3))))>=((CASE rt0.c1  WHEN rt0.c3 THEN vt0.c0 END, ((((rt0.c0)OR(v0.c0)))AND(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c3) AND (v0.c0))))) DESC, (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((x''))))>(((v0.c0)|(rt0.c0))));SELECT ((((vt0.c0)OR(rt0.c2)))AND(rt0.c4)) COLLATE NOCASE, ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c3 END)>>(NULL COLLATE RTRIM)), CAST(CAST(x'' AS INTEGER) AS REAL) FROM vt0 WHERE ((NOT (0.8616061858911777)));SELECT (((((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))AND(x'')))OR(NULL)) IN ()) FROM vt0, v0, rt0; -- 0ms;
SELECT ALL CAST(v0.c0 AS TEXT), (- ((- (rt0.c2)))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (((NULL) NOTNULL))) FROM v0 WHERE (((((0.9886424734457746)>('心-,h')))*((('0.13105374750442134') BETWEEN (0xffffffff831e38a7) AND (x''))))) GROUP BY (+ ((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))) HAVING CAST('iC' AS BLOB);SELECT CASE x''  WHEN x'' THEN vt0.c0 ELSE rt0.c4 END FROM rt0;SELECT DISTINCT ((GROUP_CONCAT(rt0.c4)) BETWEEN (((rt0.c0)IS NOT(rt0.c1))) AND (vt0.c0)) FROM vt0, rt0 WHERE (((((0.2106656128380705)OR(NULL)))AND('389206314')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c3)+(vt0.c0))) OVER ( ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN (((v0.c0)) BETWEEN ((NULL)) AND ((rt0.c0))) END) FROM rt0, vt0 WHERE (((CASE 0.9658619766027872  WHEN 'V)' THEN 0.08932169044992777 END)IS(0Xffffffffc88db170)));SELECT ALL (~ ((((rt0.c0, rt0.c3, rt0.c3))>((rt0.c3, rt0.c2, rt0.c2))))) FROM v0, vt0, rt0 GROUP BY ((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END)/(((rt0.c4)OR(rt0.c0)))), CAST(((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)) AS TEXT), (vt0.c0 IN ()) COLLATE NOCASE ORDER BY (((vt0.c0)OR(rt0.c1)) IN ()), ''  NULLS LAST; -- 0ms;
SELECT MIN(((rt0.c3)IS(rt0.c1))), RTRIM(SUM(rt0.c0)), GROUP_CONCAT(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)) COLLATE NOCASE) FROM v0, vt0, rt0 WHERE (((((NULL)!=('-883435383')))<>(((x'')+(0X4db0f6c3))))) LIMIT 913232253; -- 0ms;
SELECT DISTINCT MAX(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c3))) FROM v0 WHERE (((((('1676328670')>=(NULL))))>=((CASE NULL  WHEN 0X1b9fca67 THEN 0.7562257060972624 WHEN NULL THEN '873115459' WHEN '-356841302' THEN '-29300248' WHEN NULL THEN '0.005118314293120485' WHEN 0.026835046556876962 THEN NULL END)))) GROUP BY LAST_INSERT_ROWID(), ((((rt0.c1, rt0.c0, 0.05283459627780185)) BETWEEN ((rt0.c1, rt0.c3, rt0.c1)) AND ((rt0.c3, vt0.c0, vt0.c0))) IN ()), rt0.c0, CAST(((rt0.c3) NOT NULL) AS NUMERIC), vt0.c0 ORDER BY rt0.c2 ASC, ((((TYPEOF(DISTINCT rt0.c1))OR(((rt0.c0)&(v0.c0)))))AND(((v0.c0)GLOB(rt0.c4))))  NULLS LAST;SELECT DISTINCT (((((((((vt0.c0 IN (rt0.c1)))AND(rt0.c4 COLLATE NOCASE)))AND(TRIM(v0.c0, rt0.c4))))AND(((rt0.c0)=(vt0.c0)))))OR((((rt0.c0, rt0.c2, rt0.c0))!=((rt0.c2, vt0.c0, x''))))) FROM rt0, v0 WHERE (((('213560620') NOTNULL) IN ()));SELECT (- (((((((((rt0.c4)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM rt0 WHERE (CAST(CAST(NULL AS INTEGER) AS NUMERIC));SELECT ((((json(rt0.c1))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c3 COLLATE BINARY)) FROM v0, rt0; -- 0ms;
SELECT ALL ((CASE -1.487117846E9  WHEN rt0.c0 THEN vt0.c0 END) BETWEEN (((('0.35590209567500586')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))) AND (rt0.c4 COLLATE NOCASE)) FROM vt0, v0 ORDER BY ((((vt0.c0) ISNULL))IS(((rt0.c1) NOTNULL))) ASC;SELECT ((MIN(v0.c0))AND(((rt0.c0) IS TRUE))) FROM vt0 WHERE (CASE WHEN CASE WHEN x'' THEN 'ⵖ' END THEN (('0.28415077334050187')!=(x'')) ELSE (('') NOTNULL) END);SELECT ALL v0.c0, LOWER(((vt0.c0)>=(rt0.c4))), CAST(((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3)) AS NUMERIC) FROM v0, vt0 WHERE (((((- (0xffffffffc3afd78c))))>=(('-1044375816'))));SELECT DISTINCT GROUP_CONCAT(((rt0.c3) BETWEEN ('-47137220') AND (vt0.c0))) FROM v0;SELECT DISTINCT (v0.c0 IN ()) COLLATE BINARY, load_extension('1,g흸'), (+ (CAST(rt0.c0 AS INTEGER))) FROM rt0, v0;SELECT DISTINCT ((rt0.c1)<=(((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))) FROM v0, vt0, rt0; -- 0ms;
SELECT ALL AVG(v0.c0) OVER () FROM vt0, v0, rt0 GROUP BY rt0.c4; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 FULL OUTER JOIN v0 ON rt0.c2 WHERE (CAST((NOT ('')) AS REAL)); -- 0ms;
SELECT ALL CASE ((vt0.c0)*(rt0.c4))  WHEN ((0.5007384519941591) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((((x'')AND(x'')))OR(rt0.c4)) ELSE ((rt0.c1)IS NOT(rt0.c3)) END, ((AVG(v0.c0)) ISNULL), CAST(((rt0.c2)>(v0.c0)) AS NUMERIC) FROM vt0, rt0, v0 WHERE (CASE WHEN ((('986556569', NULL, NULL))<=((0.06672583308625968, NULL, '	'))) THEN ((0.8147756821561062)GLOB(NULL)) WHEN ((2.88284436E8)>>(-67635132)) THEN ((0.14456812755356607) NOT BETWEEN (NULL) AND (NULL)) WHEN ((('M)H5')) BETWEEN ((NULL)) AND ((0.1260039674102278))) THEN (+ (x'')) WHEN (((x'')) BETWEEN ((x'be1ae418')) AND ((-1.08161652E9))) THEN (- (0.42245996103230143)) WHEN CASE x'67df'  WHEN 0.7933102417073118 THEN -642107281 END THEN ((NULL)IS NOT('\nG')) ELSE (((0xfffffffff3939a5e)) NOT BETWEEN (('')) AND ((')O'))) END) GROUP BY ((((rt0.c3)>=(v0.c0)))>>(rt0.c1)) HAVING CHANGES(); -- 0ms;
SELECT ALL TOTAL((- (v0.c0))) OVER () FROM vt0, rt0;SELECT DISTINCT COUNT(*) FROM v0, rt0 ORDER BY CAST(((vt0.c0) IS FALSE) AS TEXT) ASC  NULLS FIRST;SELECT ALL (('0.8709302459071808') BETWEEN (GLOB(rt0.c0, rt0.c0)) AND (UNLIKELY('723427525'))) FROM rt0, v0, vt0; -- 0ms;
SELECT DISTINCT SUM(((((x'')OR(rt0.c2)))AND(v0.c0))) FROM v0, vt0 WHERE (NULLIF(((973066674)AND(NULL)), NULLIF(x'fba3b5be', 1.023576793E9)));SELECT (((((((rt0.c4, rt0.c0, vt0.c0)) BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c4, rt0.c4, rt0.c2))))OR(((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c1)))))OR((((rt0.c0))=((rt0.c0))))) FROM rt0;SELECT DISTINCT ((((((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))AND(1451909903)))AND(CAST(x'c2ec' AS REAL))))AND(((rt0.c3)>>(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT 0.7953788419078539 FROM rt0, vt0 WHERE (CAST(0x1ac9c663 AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)))|((('1198433262') NOT NULL))) FROM vt0;SELECT ALL LEAD(CAST(NULL AS TEXT), CAST(0Xffffffffba051cc1 AS INTEGER), (((((rt0.c4))!=((rt0.c2)))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c0)))OR(x'')))OR(rt0.c3)))OR(rt0.c0))) AND (((((rt0.c4)OR(v0.c0)))AND(rt0.c2))))) OVER ( ORDER BY x'7a3e' COLLATE BINARY) FROM rt0, v0; -- 1ms;
SELECT ALL ((((((((((rt0.c0)/(v0.c0)))OR(((rt0.c2) NOT BETWEEN (0.5058883811800879) AND ('-830585640')))))AND((((rt0.c1))>((v0.c0))))))AND(((((rt0.c1)AND(rt0.c3)))AND(v0.c0)))))AND(((v0.c0) IS TRUE))) FROM rt0 WHERE (((((NULL)>=('56818824'))) BETWEEN (CAST(0.16096310438331185 AS TEXT)) AND (CASE WHEN '' THEN '' ELSE 0x92a7754 END))) ORDER BY ((((rt0.c4))=((rt0.c3))) IN (NULLIF(rt0.c0, rt0.c3)))  NULLS LAST;SELECT DISTINCT (((~ (rt0.c2)))<(rt0.c4)) FROM v0, rt0, vt0 WHERE ((('-153608428' COLLATE BINARY) BETWEEN ((+ (x''))) AND (CAST('' AS REAL)))) LIMIT -2077626617 OFFSET -115885798; -- 0ms;
SELECT ALL MAX(rt0.c4, ((v0.c0) NOT NULL)) FROM rt0, v0 WHERE (-821946999); -- 0ms;
SELECT CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN rt0.c3 ELSE rt0.c1 COLLATE RTRIM END FROM vt0, v0 WHERE ((0X7401e575 IN ()));SELECT (('奼Ye{' COLLATE RTRIM)&((((rt0.c1))!=((rt0.c4))))), LAST_VALUE(vt0.c0) OVER (), '-1505568776', (((((v0.c0, rt0.c1, rt0.c2))!=((rt0.c1, vt0.c0, rt0.c0))))-(((((((((v0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))), rt0.c4 FROM vt0, rt0, v0 WHERE (('395850971' IN ()) COLLATE BINARY); -- 1ms;
SELECT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END IN (LIKELY(vt0.c0), CAST(NULL AS BLOB))), FIRST_VALUE(((('-456601969' IN ()))<=(COALESCE(rt0.c4, rt0.c3)))) OVER (), (((+ (rt0.c2)))==((('Ib') NOT NULL))) FROM rt0, v0, vt0 WHERE (((0.5603940578078311) BETWEEN (516759668) AND (-1165762445)) COLLATE NOCASE); -- 0ms;
SELECT ALL MIN(NULL) FROM vt0, rt0, v0; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END) IS TRUE), CAST(((rt0.c3)%(rt0.c1)) AS REAL), 0.426191948767356 FROM rt0 LIMIT -79999929 OFFSET -1532216939; -- 0ms;
SELECT CASE CASE WHEN v0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN 0Xffffffff9cd3a096 THEN rt0.c4 END  WHEN v0.c0 THEN x'737a' ELSE (NOT (NULL)) END FROM vt0 GROUP BY (((vt0.c0 IN (rt0.c2)))%(CASE WHEN rt0.c1 THEN vt0.c0 END)) HAVING CAST(CAST(rt0.c2 AS BLOB) AS TEXT) ORDER BY DATE(v0.c0, (~ (rt0.c4)), CAST(rt0.c0 AS REAL), 0.15034980745505333, ((rt0.c1) IS FALSE))  NULLS FIRST;SELECT ALL (+ (((vt0.c0) IS FALSE))) FROM v0 WHERE (((('395850971' IN ()))IS NOT(((0.013150593562780588) NOT BETWEEN (0.8229853033574437) AND (x''))))) LIMIT 951355897;SELECT ALL (+ ((((NULL, rt0.c0, rt0.c4, rt0.c3, v0.c0))>=((rt0.c4, rt0.c3, '-1382331155', rt0.c4, rt0.c1))))), (((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.7445822610707445)) IN (((vt0.c0)<(rt0.c0)))), ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)) COLLATE RTRIM FROM v0, rt0, vt0; -- 0ms;
SELECT MAX(rt0.c4) FROM v0 NOT INDEXED, vt0 NATURAL JOIN rt0 WHERE (((CAST(0.7001151343699145 AS REAL)) NOTNULL)); -- 0ms;
SELECT DISTINCT rt0.c4 FROM vt0, v0, rt0 WHERE (((- (-1721732824)) IN (PRINTF(NULL, 0.5479081352034947, '㌬}')))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((((rt0.c3)GLOB('740588506')))) AND ((((rt0.c4)GLOB(rt0.c1))))), rt0.c1, NULL, GROUP_CONCAT(rt0.c1), ((0x8dedf14)OR(rt0.c2)) COLLATE RTRIM COLLATE BINARY FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt0, v0 WHERE ((((x'' IN ()))LIKE((+ (NULL))))) GROUP BY v0.c0, rt0.c3, (((rt0.c4, vt0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)%(rt0.c1)), (((NULL))>((rt0.c0))), (~ (v0.c0)))) AND ((rt0.c2 COLLATE RTRIM, ((vt0.c0)==(rt0.c3)), ((rt0.c3) IS TRUE)))) HAVING TRIM(((rt0.c0)<=(rt0.c4))) ORDER BY ((((((((((((((rt0.c1)OR(v0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c4)))<<(CAST(vt0.c0 AS REAL))) ASC; -- 1ms;
SELECT DISTINCT (((((((((v0.c0 IN ()))AND(NULL)))OR('673124688')))AND(((v0.c0) IS TRUE))))AND(((rt0.c1)<(rt0.c2)))) FROM vt0, v0 ORDER BY CASE WHEN '1H!C]C*kM' THEN rt0.c3 END DESC, CASE WHEN LOWER(DISTINCT rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (v0.c0)) END DESC;SELECT ALL COUNT(*) OVER () FROM vt0, rt0; -- 0ms;
SELECT ((((rt0.c0 IN (v0.c0))))!=(((+ (vt0.c0))))), MAX(((vt0.c0) IS TRUE), ((rt0.c1)<<(rt0.c4)), ((((rt0.c2)OR(v0.c0)))AND(rt0.c1)), vt0.c0), (((((((((rt0.c0)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c2)))OR(vt0.c0)) IN (x'')) FROM vt0 WHERE (CAST(((0.8684709414119393)&(x'')) AS NUMERIC));SELECT DISTINCT ((CASE WHEN v0.c0 THEN rt0.c1 END)*(NULL)) FROM v0, rt0, vt0; -- 0ms;
SELECT ALL CASE WHEN ('' IN ()) THEN (v0.c0 IN ()) ELSE ((rt0.c1)/(vt0.c0)) END FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS TEXT))/((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c4))))) FROM v0, rt0, vt0 WHERE (((0.5328951978017011) ISNULL) COLLATE RTRIM COLLATE RTRIM) GROUP BY (((- (vt0.c0))) NOT BETWEEN (((((rt0.c0)AND(v0.c0)))AND(NULL))) AND (((rt0.c4) NOT NULL))); -- 0ms;
SELECT LIKELIHOOD(((rt0.c2)%(rt0.c2)), 0.787886679766185), SQLITE_COMPILEOPTION_USED(((((v0.c0)AND(rt0.c2)))AND(rt0.c1))), ((((rt0.c2)<<(vt0.c0))) BETWEEN (((rt0.c1)<<(rt0.c4))) AND (CASE WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 END)) FROM vt0 WHERE (((CAST(0.8634013553318586 AS REAL))<((('')-('803739070')))));SELECT ALL (((((((v0.c0))>((rt0.c3))))AND(rt0.c2 COLLATE RTRIM)))OR(((v0.c0) ISNULL))) FROM vt0, v0, rt0 WHERE (((((~ (0.07379828421745327))))=((NULL COLLATE NOCASE)))); -- 0ms;
SELECT ALL rt0.c1 FROM v0 WHERE (CAST(LENGTH(NULL) AS BLOB));SELECT DISTINCT (((rt0.c3, 'M', vt0.c0)) BETWEEN ((((rt0.c3)OR(rt0.c0)), (rt0.c1 IN ()), ((rt0.c1)IS(rt0.c3)))) AND ((json_valid(rt0.c4), CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END, LENGTH(vt0.c0)))) FROM rt0 WHERE (x'') GROUP BY '6NEu';SELECT ALL TOTAL(x'44a0') FROM rt0, v0 WHERE (((3.95850971E8)||(CAST(x'4e1b' AS BLOB)))) ORDER BY rt0.c2 ASC, CASE ((rt0.c2)LIKE(rt0.c1))  WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE RTRIM END, ((((rt0.c2)IS(rt0.c0))) ISNULL)  NULLS FIRST; -- 0ms;
SELECT ALL ((NULL COLLATE NOCASE) NOTNULL), ((((MIN(rt0.c4))OR(((((((((rt0.c4)AND(rt0.c0)))OR(0Xcbaad2c)))AND(rt0.c3)))OR(rt0.c4)))))OR(CAST(rt0.c4 AS REAL))), ((rt0.c4 COLLATE BINARY)IS NOT((('-1098216465') BETWEEN (rt0.c1) AND (v0.c0)))), ((((v0.c0) NOT NULL)) IS FALSE), rt0.c0 COLLATE BINARY FROM v0, vt0;SELECT DISTINCT (- ((('1817165924')>>(rt0.c0)))) FROM rt0 CROSS JOIN v0 ON (x'' IN ((~ (v0.c0)), ((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c0)))AND(vt0.c0)))) INNER JOIN vt0 ON rt0.c4; -- 0ms;
SELECT 0.45994855778022825 FROM v0, rt0, vt0 WHERE ((NOT (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), LAST_VALUE(((vt0.c0) NOTNULL)) OVER (), COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((TRIM(rt0.c0))) AND ((x'cebc9fc48bed' COLLATE RTRIM))) FROM rt0 WHERE (NULL) GROUP BY NULL, UNLIKELY(LOWER(v0.c0)), (CAST(v0.c0 AS INTEGER) IN ());SELECT ALL CAST(((vt0.c0) NOTNULL) AS INTEGER), (((+ (v0.c0))) NOT BETWEEN (CASE rt0.c3  WHEN vt0.c0 THEN v0.c0 END) AND (CAST(rt0.c1 AS BLOB))), CASE WHEN ((rt0.c4) IS FALSE) THEN ((rt0.c4)|(vt0.c0)) END FROM rt0, vt0, v0 WHERE ((((NOT (''))) IS FALSE)); -- 0ms;
SELECT ALL ((AVG(rt0.c0)) NOT BETWEEN (AVG(rt0.c3)) AND (MAX(vt0.c0))) FROM vt0;SELECT ALL 1.267019519E9, '-1715284466', LOWER((rt0.c3 IN ())) FROM rt0 WHERE ((((- (NULL)))>=((((('㙟/p[')OR(-88350891)))OR(NULL))))) ORDER BY HEX(rt0.c2) COLLATE BINARY COLLATE BINARY  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c2 COLLATE BINARY) AND (((((v0.c0)OR(rt0.c3)))OR(rt0.c1)))) DESC  NULLS FIRST;SELECT TYPEOF(DISTINCT ((rt0.c4)|(rt0.c1))), NTH_VALUE(2014040471 COLLATE BINARY, (((vt0.c0))<((vt0.c0))) COLLATE BINARY) OVER (), LIKELIHOOD(rt0.c1 COLLATE BINARY, 0.3714026797906682) FROM vt0, v0;SELECT ALL ((((rt0.c1)<>(rt0.c2)))<(x'23e85761')), (((- (rt0.c3)))LIKE(((rt0.c2) NOTNULL))), CUME_DIST() OVER () FROM v0;SELECT ALL SUM(((rt0.c4) IS TRUE)) OVER ( PARTITION BY CAST(v0.c0 AS TEXT) COLLATE BINARY, rt0.c0), MAX((- (rt0.c3))), (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) FROM vt0 WHERE (TYPEOF((('9')|(x''))));SELECT DISTINCT MAX(IFNULL(vt0.c0, '-1196256169')) FROM v0, rt0, vt0 LIMIT 219700896; -- 0ms;
SELECT DISTINCT ((((((rt0.c2) NOT NULL))OR((~ (vt0.c0)))))AND((rt0.c3 IN ()))), (((rt0.c3 IN ()))/(CAST(rt0.c4 AS REAL))), ((((COUNT(*))AND((NOT (rt0.c2)))))AND(MIN(vt0.c0))) FROM v0, rt0 ORDER BY ((((((((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)OR((((rt0.c4)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))OR(((rt0.c4)<=(NULL)))))OR(highlight(v0.c0, v0.c0, rt0.c1, rt0.c0))))AND(LOWER(DISTINCT v0.c0)))  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((NULL)) AND (('-677010536'))) COLLATE NOCASE ASC;SELECT DISTINCT NULL FROM v0 WHERE ((((('980553901')|(NULL)))/(((NULL)+('288284436'))))) ORDER BY (((rt0.c4) BETWEEN (v0.c0) AND (rt0.c0)) IN ((rt0.c2 IN ())));SELECT (((rt0.c3 IN (rt0.c0, v0.c0))) ISNULL) FROM rt0 WHERE (((((x'') BETWEEN (0.10290034595484954) AND ('L'))) BETWEEN ((('1756164787') NOT BETWEEN (x'') AND (x''))) AND (((0.9063452745005979) IS TRUE))));SELECT ALL COUNT(*), QUOTE((v0.c0 IN ())), ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c0)))<<(rt0.c3)), RANK() OVER (), NULL FROM rt0, vt0;SELECT ALL SUM(COUNT(((((x'')OR(rt0.c3)))OR(rt0.c0)))) FROM vt0 GROUP BY (((rt0.c0)OR(v0.c0)) IN (((rt0.c1) NOT NULL))), x'e1709cb5', (((LIKELY(DISTINCT v0.c0)))>((IFNULL(DISTINCT rt0.c0, rt0.c1)))) HAVING rt0.c1;SELECT (((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((+ (rt0.c2)), (rt0.c1 IN ()), JULIANDAY(rt0.c4, rt0.c2, vt0.c0, rt0.c1, v0.c0))) AND ((CAST(rt0.c2 AS INTEGER), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)), vt0.c0 COLLATE RTRIM))), NTILE(('-1048457726' IN ())) OVER (), MAX(((((vt0.c0)AND(rt0.c4)))AND(rt0.c3))) FROM vt0 WHERE ((((0.030816762527873465)) NOT BETWEEN ((((0x3072aed4) NOTNULL))) AND ((x''))));SELECT DISTINCT rt0.c2, (rt0.c0 IN ()) COLLATE RTRIM, '-1033738528' COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)AND(vt0.c0)))AND(rt0.c4)) IN ((NOT (rt0.c2)))) FROM vt0, rt0, v0 ORDER BY ((v0.c0 COLLATE RTRIM) NOT BETWEEN (IFNULL(rt0.c1, rt0.c3)) AND (CAST(rt0.c3 AS INTEGER))); -- 0ms;
SELECT DISTINCT CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))  WHEN (NOT (rt0.c0)) THEN ((rt0.c3)!=(rt0.c3)) ELSE ((rt0.c4)==(v0.c0)) END FROM v0, rt0, vt0 LIMIT -395199594; -- 0ms;
SELECT DISTINCT NULL, (((vt0.c0, rt0.c1, rt0.c2)) BETWEEN (((((('o2u	B^N')OR(1.023576793E9)))AND(rt0.c4)), ((rt0.c4) IS TRUE), 0.12767590288449016)) AND ((rt0.c3 COLLATE BINARY, (- (rt0.c3)), (~ (rt0.c1))))), ((((SQLITE_COMPILEOPTION_GET(rt0.c1))AND(((rt0.c3) BETWEEN (rt0.c3) AND (vt0.c0)))))OR(CAST(rt0.c3 AS BLOB))) FROM v0, vt0, rt0; -- 1ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN rt0.c1 END AS REAL) FROM rt0 WHERE (((((NULL)<(x'489c3a72'))) IS TRUE));SELECT ALL CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END COLLATE RTRIM COLLATE BINARY, COUNT(((rt0.c3) IS TRUE)), CASE GROUP_CONCAT(rt0.c0)  WHEN (rt0.c0 IN ()) THEN ((((vt0.c0)OR(rt0.c4)))AND(vt0.c0)) END FROM v0, vt0, rt0 WHERE (0.2743231036627012 COLLATE NOCASE); -- 0ms;
SELECT ALL (CAST(rt0.c2 AS INTEGER) IN ()) FROM v0, rt0 GROUP BY ((((rt0.c1)GLOB(rt0.c4)))/(rt0.c2 COLLATE NOCASE)), ABS(rt0.c1), (((((NULL)|(rt0.c2)), (~ (x'804f')), (((vt0.c0, 0Xfffffffff6c1256f, rt0.c1)) NOT BETWEEN ((-2.081335651E9, rt0.c1, v0.c0)) AND ((rt0.c3, rt0.c1, 'aM㊴wk4')))))==((((v0.c0) BETWEEN (rt0.c2) AND ('{A_-')), ((rt0.c2)||(v0.c0)), ((vt0.c0)|(rt0.c1))))), x'51c9', (~ (rt0.c0));SELECT ALL (((('0.5725652397200997') IS TRUE)) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (((((rt0.c4)OR(NULL)))AND(rt0.c4)))) FROM vt0 WHERE ((((('Ee캈H㍍[	PR')<=(-51135119)))<<((('-1384207541')%('Q')))));SELECT (rt0.c1 IN (((rt0.c1)&(vt0.c0)), rt0.c4 COLLATE RTRIM)) FROM v0, rt0;SELECT DISTINCT DATE(UPPER(v0.c0), rt0.c4, json_quote(rt0.c4), rt0.c0 COLLATE NOCASE, ((rt0.c1) ISNULL)), TOTAL(((rt0.c1) IS TRUE)) OVER (), (+ (SUM(vt0.c0))) FROM vt0, v0, rt0 WHERE (((((1.184829579E9) NOTNULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT NULL FROM v0, vt0 WHERE (((('1111787911'))!=(((((x''))<=(('-440845648'))))))); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)&(((rt0.c2)<(rt0.c3)))) FROM vt0 WHERE (UPPER('2144728647'));SELECT ALL ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))=(((0x7a982183)%(vt0.c0)))) FROM vt0, rt0, v0 WHERE (((((0.01947279993694495)LIKE('\nvco}O'))) NOT NULL)); -- 0ms;
SELECT ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) BETWEEN ((~ (rt0.c4))) AND ((((rt0.c0))<=((rt0.c1))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((((RTRIM(v0.c0))AND(rt0.c4)))OR(((vt0.c0)<=(8.57729166E8)))))AND(rt0.c4 COLLATE RTRIM)))AND(rt0.c3)), (((~ (rt0.c4))) NOTNULL), ((((rt0.c3)AND((((rt0.c3))!=((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)) FROM vt0, v0, rt0 WHERE (((((x'')<=(NULL)))>>(UPPER(x'a691c1a3')))); -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c1) NOTNULL)) OVER () FROM rt0, vt0, v0 GROUP BY 0.20889731699556002 HAVING (((v0.c0 IN ())) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((rt0.c2)>(vt0.c0)))); -- 0ms;
SELECT DISTINCT (AVG(rt0.c1) IN ()), GROUP_CONCAT(NULL) FILTER(WHERE (((((((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))AND(CASE WHEN rt0.c0 THEN v0.c0 ELSE '' END)))AND(rt0.c3 COLLATE BINARY)))OR((((rt0.c1, vt0.c0, rt0.c3))>((rt0.c0, '9*RRH', rt0.c3))))))OR((~ (vt0.c0))))) OVER (), (((rt0.c3 IN ()))IS NOT(((rt0.c1)<=(rt0.c4)))) FROM vt0, rt0;SELECT DISTINCT (((+ (rt0.c1))) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END) AND (((rt0.c2)|(rt0.c2)))) FROM vt0, v0 WHERE (CAST('873115459' AS BLOB) COLLATE NOCASE);SELECT DISTINCT CASE WHEN (~ (vt0.c0)) THEN ((rt0.c3)==(rt0.c4)) END FROM vt0, rt0 WHERE (ABS(DISTINCT (288284436 IN ('Y')))) GROUP BY (- (((((vt0.c0)AND(v0.c0)))OR(v0.c0))));SELECT ALL ((((rt0.c2)IS(rt0.c1)))<=(rt0.c0 COLLATE RTRIM)) FROM rt0, v0 WHERE ((((('-1438610342')GLOB('A[Yᘮ_~K#'))) NOT BETWEEN (((((((((((((x'')AND(x'1a2b5ccf')))AND('')))OR(-1.80353937E9)))AND(x'')))OR(0xa55776)))AND(-95701804))) AND (0.9627077842581013))) LIMIT 1478664358; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE '-1438610342' END) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (x'')) FROM v0, rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c4)&(rt0.c1)) IN ()) FROM rt0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL (+ (((((rt0.c4)AND(rt0.c3)))AND(rt0.c1)))) FROM v0;SELECT DISTINCT ((TRIM(rt0.c4, rt0.c2)) BETWEEN (x'2605') AND (('~t*' IN ()))) FROM v0, rt0, vt0 LIMIT 1991462384; -- 0ms;
SELECT DISTINCT (('') NOTNULL) FROM vt0, v0 GROUP BY SUBSTR(rt0.c0, CAST(rt0.c2 AS NUMERIC));SELECT DISTINCT rt0.c2 FROM vt0, v0;SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))>>(((x'')>=(rt0.c0)))) FROM rt0, vt0 ORDER BY (rt0.c3 IN (TOTAL_CHANGES())) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE TRIM(x'74cf')) OVER ( RANGE (((((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c3))))<(v0.c0 COLLATE BINARY)) PRECEDING EXCLUDE GROUP) FROM vt0, v0, rt0 GROUP BY (((((vt0.c0)%(0x25522d56))))=(((NULL IN (vt0.c0))))), ((((rt0.c3) ISNULL)) NOT BETWEEN ((+ (rt0.c0))) AND ((~ (x'')))), (((rt0.c3 IN ()))<(LOWER(rt0.c3))) HAVING 'Cmk^>3E\r ' ORDER BY ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))<>(rt0.c4)) ASC;SELECT ALL SUM(((v0.c0) BETWEEN (rt0.c4) AND (v0.c0))) OVER () FROM vt0, rt0 WHERE ((((+ ('.t\d'))) ISNULL));SELECT DISTINCT FIRST_VALUE(((IFNULL(DISTINCT rt0.c3, rt0.c3)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN vt0.c0 END) AND (rt0.c3))) OVER () FROM vt0, rt0, v0; -- 0ms;
SELECT ((((((((')')OR(MIN(rt0.c1))))AND((rt0.c0 IN (rt0.c1)))))OR(((rt0.c3)=(rt0.c2)))))AND(((rt0.c3)-(rt0.c1)))) FROM vt0, v0 WHERE ((((('') IS FALSE)) NOT BETWEEN (LIKELY(DISTINCT 0.9473665137876028)) AND (((('菆z')) BETWEEN (('')) AND (('542858824'))))));SELECT ALL (NOT (((vt0.c0)AND(rt0.c3)))) FROM rt0, vt0 WHERE (((((NULL) NOT BETWEEN (1.789156997E9) AND (x''))) NOT BETWEEN (((((x'')AND(-4.713722E7)))AND('O3a'))) AND ((((0.40813903001831875, x'', 2024414680))>(('', '', 0.6026795275024279)))))); -- 0ms;
SELECT AVG(((((rt0.c3)OR(rt0.c2)))OR(rt0.c4))), (((((v0.c0 IN (v0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c2 END)))OR(CAST(rt0.c4 AS REAL))), (((~ (v0.c0))) NOT BETWEEN (CASE rt0.c4  WHEN NULL THEN vt0.c0 END) AND (((rt0.c4)<<(rt0.c1)))), COUNT(*) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), CAST(CASE WHEN rt0.c4 THEN rt0.c3 ELSE v0.c0 END AS NUMERIC) FROM v0, vt0, rt0 WHERE (((0Xffffffffea0e3b13 COLLATE NOCASE) NOT BETWEEN ((~ (0.095450212230768))) AND (((x'6a94') ISNULL)))) LIMIT -1691514230; -- 0ms;
SELECT DISTINCT (((rt0.c3 IN (rt0.c1, rt0.c1)))|(GROUP_CONCAT(rt0.c4))) FROM rt0 ORDER BY (CASE rt0.c1  WHEN v0.c0 THEN rt0.c3 END IN ()) DESC; -- 0ms;
SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c0)))) IS FALSE), CAST(MIN(rt0.c4) AS BLOB), (((((rt0.c4 IN ()))OR((((NULL))<=((rt0.c2))))))AND((rt0.c1 IN ()))) FROM rt0, v0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM v0, vt0 WHERE ((((((NULL))>=((x'')))) IS TRUE)) GROUP BY CASE rt0.c0  WHEN (((v0.c0, NULL, rt0.c4)) NOT BETWEEN ((0X1ac2940d, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN rt0.c0 COLLATE BINARY END HAVING 696449192;SELECT (((NULL))<>((((rt0.c3) NOTNULL)))) FROM rt0; -- 0ms;
SELECT DISTINCT (~ ((rt0.c0 IN ()))) FROM v0, rt0 WHERE ((('惤I>䯗')>>(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((v0.c0 IN ()))IS(rt0.c0 COLLATE NOCASE)) FROM rt0, v0; -- 2ms;
SELECT CASE WHEN (NULL IN ()) THEN (+ (0.5659392140932341)) WHEN ((rt0.c3) NOTNULL) THEN vt0.c0 COLLATE NOCASE WHEN COUNT(rt0.c0) THEN v0.c0 END FROM rt0, vt0;SELECT DISTINCT (NOT (CAST(v0.c0 AS TEXT))) FROM vt0 LEFT OUTER JOIN rt0 ON (((+ (rt0.c3))) BETWEEN (rt0.c4 COLLATE BINARY) AND ('')) INNER JOIN v0 ON ((((rt0.c3)-(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c2 END) AND (((rt0.c3) IS FALSE))); -- 0ms;
SELECT DISTINCT CASE ((((6.73124688E8)AND(vt0.c0)))AND(v0.c0))  WHEN ((1477678122)IS NOT(rt0.c4)) THEN (('5+')%(v0.c0)) END FROM vt0 WHERE (((((NULL)|('\ny '))) NOT BETWEEN (((x'cc61')OR(x''))) AND (((0.25701493831012634) NOT BETWEEN (250708209) AND ('-1552709715'))))) LIMIT -337045123 OFFSET 1850849048;SELECT DISTINCT ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)<((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((0.014563303924180038))))) FROM vt0, rt0;SELECT DISTINCT (((rt0.c1 IN ()))OR((rt0.c4 IN (rt0.c2)))) FROM v0, vt0 WHERE ((NOT (((NULL) NOTNULL))));SELECT DISTINCT ((((((((((rt0.c3)/(rt0.c0)))OR((rt0.c0 IN ()))))AND(COUNT(*))))OR(-9.19462095E8)))OR(rt0.c2 COLLATE NOCASE)) FROM v0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((COUNT(*))OR(((v0.c0) NOT NULL))))AND((((rt0.c2, vt0.c0, rt0.c2))>((rt0.c4, rt0.c0, rt0.c4))))))AND(CAST(rt0.c1 AS INTEGER))))OR(CASE v0.c0  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE v0.c0 END)), ((((MIN(rt0.c1))AND((((rt0.c2))>((rt0.c4))))))AND(NULL)), (((rt0.c4, rt0.c3, rt0.c2)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c0)LIKE(vt0.c0)), NULL)) AND ((CAST(rt0.c1 AS NUMERIC), CASE WHEN vt0.c0 THEN rt0.c1 END, (v0.c0 IN (rt0.c1))))) FROM v0, rt0, vt0 WHERE ((LOWER(NULL) IN ())); -- 0ms;
SELECT ALL CASE ((vt0.c0)+(rt0.c3))  WHEN ((((((((rt0.c4)AND(0x469f108b)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c2)) THEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c1)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((((vt0.c0)OR(v0.c0)))OR(v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)) THEN ((vt0.c0) NOTNULL) ELSE (~ (rt0.c1)) END, ((NULLIF(rt0.c2, rt0.c4)) NOT NULL), NTH_VALUE(rt0.c0, (- (CAST(rt0.c2 AS REAL)))) OVER ( ORDER BY (((rt0.c2)) NOT BETWEEN ((((0.9448316554498708) NOTNULL))) AND ((((rt0.c3)OR(rt0.c4)))))) FROM rt0, v0, vt0 WHERE ((IFNULL('1187010406', x'267c') IN ())); -- 0ms;
SELECT DISTINCT ((TOTAL(v0.c0))LIKE((rt0.c2 IN (rt0.c4, vt0.c0)))), (((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))), SUM((rt0.c3 IN ())) FROM rt0, v0, vt0; -- 1ms;
SELECT DISTINCT ((((LOWER(DISTINCT rt0.c4))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(x'')) FROM rt0;SELECT ((rt0.c0) ISNULL), ((((rt0.c0)<(rt0.c1)))+(0.4198176252407487)), ((SUM(rt0.c0)) NOT BETWEEN ((rt0.c4 IN ())) AND (((rt0.c3) NOTNULL))) FROM vt0, rt0; -- 0ms;
SELECT COUNT(*) OVER (), ((((rt0.c4) NOTNULL))IS(SUM(rt0.c0))), TRIM(DISTINCT CAST(rt0.c4 AS TEXT)) FROM vt0, v0, rt0 GROUP BY '1435425941' HAVING CAST(((0X1732d12a) NOTNULL) AS INTEGER) LIMIT 1267019519; -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c4)) AS TEXT) FROM vt0 WHERE (((((('0.49460478514830564') NOTNULL)))<>((CAST(0.07045307424013081 AS REAL))))) ORDER BY ((((rt0.c1)AND((vt0.c0 IN ()))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))) DESC  NULLS LAST LIMIT -1128243167 OFFSET -1755370132;SELECT ((((v0.c0) BETWEEN (0.052631997488301274) AND (rt0.c2))) BETWEEN (((((vt0.c0)AND(v0.c0)))OR(rt0.c0))) AND (rt0.c1)) FROM rt0 INNER JOIN v0 ON v0.c0 COLLATE NOCASE INNER JOIN vt0 ON (((rt0.c3, rt0.c3, -7.9999929E7)) BETWEEN ((((vt0.c0)+(rt0.c2)), ((rt0.c1) NOT NULL), ((vt0.c0)<>(rt0.c1)))) AND ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)), ((rt0.c1) IS TRUE), ((rt0.c4) IS FALSE)))); -- 0ms;
SELECT ALL ((((((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END)AND(CAST(rt0.c3 AS BLOB))))OR(rt0.c1)))OR((~ (rt0.c2)))))AND(((rt0.c4)=(rt0.c0)))), CAST(rt0.c3 AS NUMERIC), (NOT (((rt0.c1)LIKE(rt0.c3)))) FROM vt0 WHERE ((((NOT (x''))) NOTNULL));SELECT ALL MIN(CAST(vt0.c0 AS TEXT)), ((0.7564901151934352)&(((rt0.c2)OR(rt0.c2)))), rt0.c1 FROM rt0;SELECT ALL ((((rt0.c0)*(rt0.c4))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (UPPER(rt0.c0))) FROM rt0;SELECT DISTINCT CAST(rt0.c3 COLLATE NOCASE AS BLOB) FROM v0, rt0; -- 0ms;
SELECT (((rt0.c4)/(vt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT ALL NULL FROM v0, vt0 GROUP BY (- (CAST(rt0.c2 AS INTEGER)));SELECT ALL ((rt0.c2) IS TRUE) FROM v0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((x'bc5c')IS NOT(v0.c0)) COLLATE BINARY FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT rt0.c3, DENSE_RANK() OVER (), ((LTRIM(rt0.c3, rt0.c0))%(((((((((v0.c0)OR(-1391843633)))AND(vt0.c0)))AND(vt0.c0)))OR('914846046')))), (((((((((((v0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4))))>((CAST(x'' AS TEXT)))), CAST(((((((((v0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(NULL)) AS NUMERIC) FROM vt0, rt0, v0 ORDER BY CAST(((rt0.c3)IS NOT(rt0.c4)) AS REAL) ASC  NULLS LAST, (((((rt0.c1 IN ()))OR(CAST(rt0.c1 AS NUMERIC))))AND(rt0.c2 COLLATE RTRIM)) ASC LIMIT -807582426; -- 2ms;
SELECT ALL CAST(((v0.c0) IS TRUE) AS NUMERIC) FROM rt0 WHERE (((CASE '-1387107028'  WHEN '-1413198195' THEN '' ELSE 0.6343985903178034 END) BETWEEN (((('193724090'))!=(('1327487038')))) AND ((((NULL))<((0.39679885746997756))))));SELECT ((0x681a2e86)IS(rt0.c1 COLLATE NOCASE)), ((((v0.c0) NOTNULL)) NOT NULL), CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c3) IS FALSE) END FROM vt0, rt0, v0 LIMIT -1382331155 OFFSET -1081616520; -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT '884406918' FROM vt0, rt0, v0 WHERE (CASE WHEN ((((0.3833973197627837)AND(x'')))AND('cq*')) THEN '' WHEN IFNULL(x'', '-1851172287') THEN (((1.451909903E9)) BETWEEN ((0.4198176252407487)) AND ((NULL))) WHEN ((NULL) NOT BETWEEN (0.7541603469215628) AND (1312636915)) THEN NULL COLLATE NOCASE END); -- 1ms;
SELECT DISTINCT LAG(SUBSTR(((((((((0X4b2f67dd)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), (((TRIM(DISTINCT vt0.c0)))==((vt0.c0))), (((+ (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (('' IN ())))) OVER ( ORDER BY (((rt0.c2 IN (rt0.c1, rt0.c2)))GLOB((rt0.c4 IN ())))  NULLS LAST, ((CASE rt0.c4  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN vt0.c0 ELSE rt0.c2 END)=(((vt0.c0) ISNULL))) ASC  NULLS FIRST) FROM vt0 WHERE (((NULL) BETWEEN (((('/Jm㹖')) NOT BETWEEN (('ꨬzzK')) AND ((x'')))) AND ((((0Xffffffff939d7d5a, x'', NULL))<>((x'', 0.7797643757437942, '')))))) LIMIT 626142550 OFFSET -1140926157;SELECT (((rt0.c4)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c0)/(rt0.c3))))) FROM rt0, v0, vt0 WHERE (((('-1548093643')) NOT BETWEEN ((((NULL) NOT BETWEEN ('-1373247002') AND (NULL)))) AND ((((x'') NOTNULL))))) GROUP BY ((((rt0.c3)<(rt0.c1)))<=(vt0.c0)) HAVING CAST((rt0.c1 IN ()) AS INTEGER); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM v0, vt0, rt0; -- 0ms;
SELECT rt0.c1, ((((0x3e30fbc0)LIKE(rt0.c4))) NOT BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(v0.c0))) AND (CAST(rt0.c3 AS TEXT))), CAST(0x89c7242 AS TEXT), COUNT(*), x'da4e' FROM rt0 LIMIT -1387107028;SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, vt0, v0 WHERE ((((NOT (7.313358E7))) NOT NULL)); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((rt0.c3)/(rt0.c4)))) AND (((rt0.c3 IN (v0.c0, rt0.c1))))) FROM vt0;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (0.2976068425468936) AND (((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c0)))) FROM vt0 WHERE (((NULL) IS TRUE));SELECT ALL CAST(CAST(rt0.c0 AS TEXT) AS INTEGER) FROM vt0 LIMIT 1312636915;SELECT ALL CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END COLLATE BINARY FROM v0 WHERE (CHANGES()) LIMIT 1286650776;SELECT ALL AVG(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c3 END COLLATE NOCASE) OVER (), (((rt0.c3, v0.c0, vt0.c0, v0.c0, rt0.c4)) BETWEEN ((((v0.c0)<=(vt0.c0)), ((0.5340732732965208)*(vt0.c0)), MAX(rt0.c4), CASE v0.c0  WHEN rt0.c3 THEN rt0.c4 END, (((rt0.c2))=((rt0.c4))))) AND ((CASE rt0.c3  WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c4 END, ((vt0.c0)<=(rt0.c3)), MAX(v0.c0), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)), ((v0.c0) IS FALSE)))), UNLIKELY(NULL) FROM rt0 WHERE ((- ((((((((((((('F粀')OR(x'')))OR(2.50708209E8)))OR(0.02866236779927467)))AND(x'')))OR(x'')))AND('tq')))));SELECT DISTINCT (((rt0.c1)<=(rt0.c0)) IN ()) FROM vt0, rt0 WHERE (CASE WHEN ('-1382331155' IN (0.5535828180986785)) THEN ((0.15214227873252362)<(NULL)) END); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0, vt0 WHERE (((((((x'')AND(NULL)))AND('-461903512'))) BETWEEN (CAST(NULL AS BLOB)) AND (((NULL) BETWEEN (0.5487818208524422) AND (x'6ac0'))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(CASE vt0.c0  WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) OVER () FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((LIKELIHOOD(DISTINCT rt0.c4, 0.18166934863430206)))<((((rt0.c4) IS FALSE)))) FROM v0;SELECT DISTINCT ((vt0.c0)%(NULL)) COLLATE BINARY FROM rt0, vt0 WHERE (((('%i﬏z''') NOT BETWEEN (0.5603940578078311) AND (-816072469)) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c2, v0.c0, rt0.c3)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)), rtreenode(rt0.c3, rt0.c4), ((v0.c0)LIKE(rt0.c1)))) AND (((NOT (rt0.c3)), 'g佱E_!D8E+', rt0.c2 COLLATE NOCASE))) FROM v0, vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT '桋-V08', 0.4203512442341084)) NOT BETWEEN (CASE WHEN '&,m鐹E(cj' THEN '-1174070079' END) AND (('' IN ())))); -- 0ms;
SELECT DISTINCT ((v0.c0)%(rt0.c1)) COLLATE BINARY, CASE TOTAL(rt0.c4)  WHEN rt0.c2 THEN (((vt0.c0))==((vt0.c0))) ELSE rt0.c0 END, ((vt0.c0)IS NOT(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((((((NULL)) NOT BETWEEN ((0.39351362224611564)) AND ((0.03609810880511266)))) NOT BETWEEN (CAST(0.015885922207337422 AS NUMERIC)) AND (NULL))) GROUP BY LOWER(DISTINCT ((vt0.c0)&(rt0.c4))) HAVING CASE WHEN v0.c0 THEN ((rt0.c2)<(rt0.c4)) END ORDER BY CAST(((-1.09770965E9)>(vt0.c0)) AS BLOB) ASC  NULLS LAST, (+ (rt0.c4 COLLATE NOCASE)) DESC;SELECT ((AVG(NULL)) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND (LIKELIHOOD(DISTINCT NULL, 0.1466024599189638))) FROM rt0, v0, vt0; -- 1ms;
SELECT DISTINCT ((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c3)))AND(v0.c0))) IS TRUE) FROM vt0, rt0, v0 WHERE (((SQLITE_COMPILEOPTION_GET(0.9438551107549606))||('-1727447466'))); -- 0ms;
SELECT ALL LAST_VALUE(rt0.c2) OVER () FROM vt0, v0, rt0; -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)=(rt0.c2)))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 ELSE vt0.c0 END)) FROM vt0 LIMIT -1574452354 OFFSET 209385599;SELECT ((UNLIKELY(rt0.c2))GLOB(((rt0.c4) IS TRUE))) FROM rt0 WHERE (CAST((NOT (x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT json_type(((((rt0.c0)OR(vt0.c0)))OR(rt0.c2))) FROM rt0 WHERE ((((((-1327659100)OR(0Xffffffffaf74ef9e))))==((((NULL)-(NULL)))))) GROUP BY rt0.c2, vt0.c0, (((((rt0.c0))<>((rt0.c3)))) NOT BETWEEN (((v0.c0)IS NOT(NULL))) AND (CASE rt0.c4  WHEN NULL THEN vt0.c0 END)), (((((v0.c0, rt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c2))))>(((rt0.c2) NOT NULL))), ((((LOWER(DISTINCT rt0.c4))OR((((vt0.c0, rt0.c1, v0.c0))>((rt0.c3, rt0.c1, vt0.c0))))))AND(CAST(rt0.c3 AS NUMERIC))) HAVING ((((((rt0.c3)GLOB(rt0.c3)))AND(((rt0.c1)<>(rt0.c4)))))OR(((rt0.c2)-(vt0.c0)))) ORDER BY UPPER(((rt0.c1)|(rt0.c1)))  NULLS FIRST;SELECT DISTINCT ((((TOTAL(rt0.c1))OR(((v0.c0)||(rt0.c1)))))OR(((((((((rt0.c4)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0)))) FROM v0 WHERE ((CAST('' AS TEXT) IN ()));SELECT ALL LOWER(DISTINCT ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))), SQLITE_COMPILEOPTION_GET(((rt0.c0)>=(rt0.c3))), FIRST_VALUE(((MAX(rt0.c3, rt0.c1, rt0.c4, rt0.c3))&(CAST(rt0.c3 AS INTEGER)))) OVER ( PARTITION BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c2))) NOT BETWEEN (vt0.c0) AND (0Xcbaad2c)), (((((rt0.c2 IN ()))OR(((((rt0.c3)OR(NULL)))AND(rt0.c2)))))AND(CAST(rt0.c3 AS TEXT)))) FROM vt0, rt0, v0 WHERE (0.3721868888715998) LIMIT -521213966; -- 0ms;
SELECT DISTINCT UNLIKELY((((rt0.c0))<=((vt0.c0)))), MAX((+ (rt0.c3))), ((((rt0.c0)AND('PX5(|XP')))OR(x'6e07')) FROM vt0 WHERE (288284436);SELECT DISTINCT v0.c0, DATETIME(CAST(v0.c0 AS INTEGER), (((v0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, 0Xffffffff94802c56, rt0.c3)) AND ((NULL, rt0.c2, x'e4ad'))), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 END), LAG((((((((((((rt0.c3)OR(rt0.c2)))AND(v0.c0)))OR(v0.c0)))AND(rt0.c3)), ((rt0.c2)IS NOT(v0.c0)), CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END))<=(((- (rt0.c2)), rt0.c0 COLLATE NOCASE, ((rt0.c0)>(rt0.c3))))), (((((((rt0.c2, rt0.c0, rt0.c1))<=((NULL, '-685296852', rt0.c1))))OR(CAST(rt0.c3 AS REAL))))OR(rt0.c2)), ((((((rt0.c4) ISNULL))OR(x'')))OR(((rt0.c1)LIKE(rt0.c1))))) OVER ( ORDER BY (rt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST) FROM vt0, v0, rt0; -- 0ms;
SELECT GROUP_CONCAT((rt0.c2 IN ())) OVER () FROM vt0, v0 GROUP BY ((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))>=((rt0.c2 IN (v0.c0)))) HAVING ((rt0.c0)%((((rt0.c4)) BETWEEN ((vt0.c0)) AND (('-67635132')))));SELECT COUNT(*) FILTER(WHERE ((IFNULL(rt0.c0, v0.c0)) IS TRUE)) OVER () FROM v0, rt0, vt0 WHERE ('-756460731'); -- 0ms;
SELECT (NOT (v0.c0)) FROM v0 INNER JOIN rt0 ON CASE CAST(rt0.c2 AS INTEGER)  WHEN ((rt0.c0)|(0xffffffff89190337)) THEN ((((x'df4b')OR(rt0.c4)))AND(rt0.c0)) END; -- 0ms;
SELECT ((CAST(rt0.c1 AS REAL))>>(((vt0.c0)LIKE(rt0.c0)))) FROM vt0, v0;SELECT DISTINCT rt0.c3 FROM vt0 WHERE ((('1261397981') NOT BETWEEN (NULL) AND (NULL)) COLLATE BINARY);SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((((rt0.c2)LIKE(v0.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) FROM rt0, v0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE RTRIM) BETWEEN ('mA') AND (CAST(rt0.c4 AS REAL))) FROM vt0, rt0;SELECT DISTINCT ((((rt0.c0)AND(CAST(v0.c0 AS TEXT))))AND(GROUP_CONCAT(v0.c0))) FROM vt0, rt0, v0 WHERE (((x'')GLOB(0.3125611244022565)) COLLATE BINARY); -- 0ms;
SELECT (((((rt0.c1))>=((rt0.c1))))>((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))))) FROM vt0, rt0, v0 WHERE (x''); -- 0ms;
SELECT DISTINCT load_extension(((v0.c0) BETWEEN (vt0.c0) AND (rt0.c4))), ((v0.c0)==(vt0.c0)) COLLATE BINARY, COUNT(0.8841939561331816) OVER () FROM v0, rt0, vt0;SELECT DISTINCT COUNT(json(rt0.c3)) OVER (), ((((rt0.c3)%(rt0.c4)))IS NOT(((rt0.c4) IS TRUE))), (((0.5233549423673364))<=((((rt0.c3)/(x'87cb97492b03'))))) FROM v0, vt0 WHERE (CASE WHEN CAST(213560620 AS INTEGER) THEN ((0.7914721789400373) NOT NULL) END) LIMIT 1245338589 OFFSET 1919911385;SELECT ((((rt0.c4)OR('D%c'))) NOT BETWEEN ((rt0.c2 IN ())) AND (v0.c0)), CASE GROUP_CONCAT(rt0.c0)  WHEN ((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE json_type(v0.c0) END, MAX((((v0.c0))>((v0.c0)))) FROM rt0, v0, vt0 WHERE ((+ (-8.17716561E8)) COLLATE BINARY) GROUP BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((CAST(rt0.c4 AS TEXT)))), (NOT (rt0.c1)) COLLATE NOCASE, rt0.c0 HAVING (+ (((rt0.c1)LIKE(rt0.c0)))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c0))) OVER (), -1384207541, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c2)<=(rt0.c3))) AND ((((rt0.c3, rt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c4, vt0.c0)) AND ((rt0.c0, 0.02637918732475819, rt0.c2))))) FROM rt0, v0 WHERE (CAST((-8.83435383E8 IN ()) AS BLOB));SELECT (((CAST(rt0.c2 AS REAL), ((rt0.c2)>(rt0.c3)), COUNT(*)))<=(('AH~', ((vt0.c0) ISNULL), ((1946281333)<=(rt0.c3))))) FROM rt0, vt0; -- 0ms;
SELECT (((-1182274491)) NOT BETWEEN (((((v0.c0))<=((rt0.c1))))) AND ((COALESCE(DISTINCT rt0.c4, rt0.c0, v0.c0, rt0.c3)))), ((rt0.c0) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((-1.044375816E9) BETWEEN (rt0.c3) AND (rt0.c3)))), (~ (((v0.c0) NOT BETWEEN (0.2576059891506458) AND (rt0.c4)))) FROM vt0 LEFT OUTER JOIN rt0 ON '219700896' WHERE ((('*0!A.' COLLATE BINARY)AND('1532079883' COLLATE RTRIM)));SELECT DISTINCT load_extension(CAST(rt0.c1 AS REAL), GROUP_CONCAT(rt0.c0)), (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((v0.c0))))IS NOT(rt0.c3)), x'1b62' FROM rt0, v0 WHERE (((((('&c'))==(('-759904790')))) BETWEEN (0x40cd3ab6) AND (((0x77f3c978)<=('V{')))));SELECT ((((((rt0.c0)<(rt0.c3)))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((rt0.c3)LIKE(rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT ((((rt0.c4)GLOB(rt0.c3))) BETWEEN (((((((((vt0.c0)OR(rt0.c3)))AND(v0.c0)))AND(v0.c0)))AND(rt0.c4))) AND (rt0.c2)) FROM v0, vt0, rt0 NOT INDEXED WHERE (1141937604) GROUP BY json_remove(((rt0.c3)|(rt0.c4)), ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2))), ((((json_extract(rt0.c1, v0.c0))OR('⑝\rJu-''')))AND((((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, NULL, rt0.c2)) AND ((rt0.c1, rt0.c3, rt0.c1))))), (~ ((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) LIMIT 646785793;SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0.5090854959843032)))) NOTNULL) FROM vt0, rt0 GROUP BY (((UNICODE(rt0.c0)))>((((rt0.c2)+(rt0.c1))))); -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN vt0.c0 THEN ((vt0.c0)-(rt0.c4)) ELSE 0.26210134220082315 END FROM v0, vt0, rt0 WHERE ((((((0X4e3d3ff3, 'h', NULL)) BETWEEN ((NULL, -1588452117, 0.19424665755682924)) AND (('', x'75c4', -1.384207541E9)))) ISNULL)); -- 0ms;
SELECT ALL ((((((NULL)OR(rt0.c0)))AND(vt0.c0))) BETWEEN (((rt0.c4)<=(rt0.c2))) AND (CAST(vt0.c0 AS TEXT))), ((((rt0.c0)OR(((rt0.c0)!=(vt0.c0)))))OR((('') IS FALSE))), MAX((rt0.c4 IN (rt0.c0))) FROM rt0, vt0 WHERE ((((((((((x'f60b')OR(NULL)))AND(NULL)))AND('1521541248')))AND(0.41687684147661064)) IN ())); -- 0ms;
SELECT DISTINCT COUNT(MIN(((rt0.c0) IS FALSE))) FROM vt0;SELECT DISTINCT ((((vt0.c0) IS FALSE)) NOT NULL), ((((((((((((v0.c0)AND(rt0.c0)))OR(rt0.c3)))AND(((v0.c0)>>(rt0.c4)))))AND((((rt0.c4))!=((rt0.c1))))))OR(MIN(rt0.c2))))OR((- (rt0.c3)))), ((((((((-8.17716561E8)OR(rt0.c0)))AND(v0.c0)))AND(0.5867827181874057)))OR(v0.c0)) COLLATE RTRIM FROM rt0 ORDER BY ((((((((((rt0.c2)%(rt0.c4)))AND('')))OR(CAST(v0.c0 AS INTEGER))))AND((rt0.c3 IN ()))))OR((- (rt0.c2))))  NULLS LAST, CASE CASE rt0.c0  WHEN v0.c0 THEN vt0.c0 END  WHEN (NOT (rt0.c3)) THEN 'ZE' WHEN CASE WHEN NULL THEN rt0.c2 END THEN ((vt0.c0)>(rt0.c1)) WHEN '' THEN 0.6044455042724396 ELSE CAST(rt0.c2 AS INTEGER) END  NULLS LAST;SELECT DISTINCT ((((rt0.c4)<>(rt0.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3))) AND (((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) FROM rt0, vt0 WHERE ((((x'', NULL, x'658a')) NOT BETWEEN ((x'', (~ ('-2070377008')), (('R[') NOT BETWEEN ('v\') AND ('*')))) AND (((NULL IN ()), CAST('kSc婁>7' AS BLOB), (('-1385154341') BETWEEN ('1632867696') AND (NULL))))));SELECT GROUP_CONCAT(0.5526113092525383) OVER () FROM rt0, v0; -- 1ms;
SELECT DISTINCT COUNT(*), ((((CAST(rt0.c0 AS TEXT))OR((+ ('-163295433')))))OR(HEX(vt0.c0))), ((GROUP_CONCAT(rt0.c1))IS((NOT (vt0.c0)))) FROM vt0, rt0, v0; -- 0ms;
SELECT ALL 0.9890595866835521, ((rt0.c3)IS NOT(rt0.c4)) COLLATE RTRIM, TOTAL(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) OVER ( GROUPS BETWEEN (((((((vt0.c0, x'', rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c4))))OR(CASE WHEN x'' THEN rt0.c0 WHEN x'28b6' THEN v0.c0 WHEN x'' THEN rt0.c3 ELSE NULL END)))OR(vt0.c0)) FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM rt0, vt0, v0 ORDER BY (((rt0.c0, x'', vt0.c0))!=((vt0.c0, rt0.c2, rt0.c0))) COLLATE BINARY  NULLS FIRST, 0xffffffffd968439d COLLATE RTRIM  NULLS FIRST, ((rt0.c1)AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))  NULLS LAST;SELECT ((v0.c0)IS NOT(vt0.c0)) COLLATE RTRIM FROM vt0, rt0 WHERE ((TYPEOF(0x5eeb6306) IN ()));SELECT ALL (((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4))))!=((CAST(rt0.c1 AS TEXT)))), ((((rt0.c0)<=(rt0.c3))) ISNULL), ((SUM(rt0.c1)) BETWEEN ((((rt0.c3))>((rt0.c4)))) AND (((rt0.c4)IS(v0.c0)))) FROM vt0, v0, rt0; -- 1ms;
SELECT DISTINCT (MAX(rt0.c4) IN (((rt0.c1) NOT BETWEEN (rt0.c2) AND ('.I㿳\r\n%XuK')))) FROM vt0, rt0, v0 GROUP BY ((((rt0.c1)AND(rt0.c0)))OR(',\9j騣')) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (+ (rt0.c4)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))) OVER () FROM v0, vt0 WHERE ((((NULL)) BETWEEN ((((NULL)GLOB(NULL)))) AND ((((NULL)||(NULL)))))) LIMIT -442419053;SELECT ALL x'4686' FROM vt0 ORDER BY (((((rt0.c3) NOT NULL), ((v0.c0)<>(0.4814778906093251)), ((v0.c0)<>(rt0.c2)), (rt0.c1 IN ()), ((x'') NOT BETWEEN (vt0.c0) AND (rt0.c2))))>((((((rt0.c1)OR(vt0.c0)))AND(-1.7976931348623157E308)), ((rt0.c4)&(v0.c0)), ((rt0.c2)|(vt0.c0)), (((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c1))), TRIM(rt0.c1, rt0.c1))));SELECT ALL rt0.c3 FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c4, rt0.c2, rt0.c4)) BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END, (((((rt0.c2, rt0.c0, vt0.c0))>((rt0.c1, rt0.c1, vt0.c0))))=(rt0.c3)), ((((((rt0.c2) ISNULL))OR((+ (rt0.c1)))))AND(NULL)) FROM v0, vt0;SELECT DISTINCT CASE ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))  WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(v0.c0)))OR(x'0ead')) THEN CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c4 END END FROM rt0 INNER JOIN v0 ON (- (0.22079556484512086)) INNER JOIN vt0 ON CAST((('6᚝')>(v0.c0)) AS TEXT) WHERE (((('')+(x'')) IN ())); -- 0ms;
SELECT DISTINCT COUNT((((rt0.c2))<=((rt0.c1)))), '-1803539370' COLLATE NOCASE, ((TYPEOF(vt0.c0)) BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN '-67635132' END) AND ((- (rt0.c2)))) FROM v0, vt0;SELECT ((MAX(rt0.c3))>((((rt0.c0))=((x''))))) FROM vt0, v0;SELECT ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)))+((NOT (rt0.c2)))) FROM v0, vt0, rt0 WHERE ((~ ((x'af6c' IN ())))) ORDER BY CASE HEX(DISTINCT rt0.c3)  WHEN ((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c3)) WHEN vt0.c0 THEN TRIM(vt0.c0) WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN (rt0.c2 IN (v0.c0)) END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT((NOT (vt0.c0))) OVER ( ORDER BY (((~ (0.8595125321154292)))&(CAST(rt0.c4 AS INTEGER))) DESC, ((((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))AND(((rt0.c1)==(rt0.c2)))))AND(((rt0.c3)>=(rt0.c3)))) DESC  NULLS LAST) FROM vt0, rt0 WHERE (TIME((('295024168') NOT BETWEEN ('-1809473898') AND (NULL)), (((0Xfffffffffbf7f844, NULL, '1985879139')) NOT BETWEEN ((NULL, -6.7635132E7, '0.8806755550834138')) AND ((x'', 0x60a9cad7, 1913249073))), (((0.3484109198372496, x'', '386557904')) BETWEEN ((x'', 0.09564516076334617, '0.2654261865095201')) AND (('p+7d', 0.967767494534041, NULL))))); -- 0ms;
SELECT AVG((+ (rt0.c1))) FROM vt0, rt0, v0; -- 0ms;
SELECT rt0.c3 FROM vt0 WHERE (CAST(NULL COLLATE NOCASE AS BLOB)) GROUP BY ((CAST(rt0.c0 AS NUMERIC))&(((((((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))), SQLITE_COMPILEOPTION_USED(((rt0.c4) IS TRUE)), ((((rt0.c4) BETWEEN (rt0.c1) AND (NULL)))|(rt0.c2 COLLATE BINARY));SELECT ALL CAST(v0.c0 COLLATE RTRIM AS NUMERIC), (((((vt0.c0))<((v0.c0)))) BETWEEN (((((v0.c0)AND(0.36700330483902166)))AND(rt0.c3))) AND (((((((((rt0.c3)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c4)))AND(v0.c0)))), ((DATE(rt0.c2, vt0.c0, rt0.c0)) IS FALSE) FROM vt0 WHERE (0x4743e220);SELECT DISTINCT v0.c0 FROM vt0, rt0;SELECT CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END AS TEXT) FROM v0, rt0, vt0 WHERE ((0.054927644799133146 IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c4)<(vt0.c0)))*(((rt0.c1)!=(rt0.c2)))) FROM rt0 WHERE ((+ ((('-1213655255') NOT BETWEEN (NULL) AND (-80041150)))));SELECT ALL ((rt0.c0 COLLATE NOCASE)>>((rt0.c3 IN (rt0.c0)))) FROM vt0, v0, rt0 WHERE ((((x'' IN ())) NOT BETWEEN (CAST('1003615797' AS TEXT)) AND (CAST(x'' AS NUMERIC)))) LIMIT -1174070079 OFFSET 1826064010; -- 0ms;
SELECT DISTINCT CASE (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))  WHEN TYPEOF(DISTINCT v0.c0) THEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)) END FROM v0;SELECT ALL CAST(rt0.c3 AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c0)<(v0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c2 COLLATE NOCASE WHEN json_array_length(rt0.c2) THEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c1)) ELSE vt0.c0 COLLATE BINARY END FROM vt0, rt0 WHERE (CAST(((x'') BETWEEN (0.3743711049985051) AND (x'')) AS TEXT)) GROUP BY ((((((rt0.c2)AND(vt0.c0)))AND(x'c313')))<(((rt0.c1) IS TRUE))) HAVING ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4))) AND (v0.c0 COLLATE NOCASE));SELECT DISTINCT CASE WHEN (+ (rt0.c3)) THEN CASE WHEN rt0.c1 THEN '' END END FROM rt0, v0, vt0 WHERE (((x'')<>(((NULL)IS NOT(1415726387))))); -- 1ms;
SELECT DISTINCT (~ (rt0.c0)) COLLATE BINARY, ((v0.c0)||(0x4171c8b0)) COLLATE RTRIM, rt0.c0 FROM rt0, v0, vt0; -- 0ms;
