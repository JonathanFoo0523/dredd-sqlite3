-- Time: 2024/06/07 00:31:56
-- Database: database13
-- Database version: 3.40.0
-- seed value: 3804346613
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 3ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (NULL), (''), ('-2043279846'); -- 1ms;
REINDEX BINARY; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR REPLACE t0 SET c0=x''; -- 0ms;
COMMIT TRANSACTION; -- 2ms;
INSERT OR IGNORE INTO vt1 VALUES (1455522052); -- 4ms;
ANALYZE temp; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('a)\n~S/pKI'); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (0xffffffff9da7e788); -- 0ms;
UPDATE OR REPLACE t0 SET c0='-728381403'; -- 1ms;
END; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1210162019); -- 0ms;
REINDEX  vt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('-941677255'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ALL NULL FROM vt1, t0 WHERE (((((NULL IN ())))<((NULL)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x'10ec'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('+.!N09\reQ'), ('-1210162019'), (0.3432087834351958); -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt1 SET c0='EXnp' WHERE (((('+.!n09\req' IN (vt1.c0)), vt1.c0, vt1.c0))>=(((- (vt1.c0)), (((vt1.c0))!=((vt1.c0))), LAST_INSERT_ROWID()))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(((NULL) BETWEEN (NULL) AND (x'')), '{脄M' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1455522052 unordered noskipscan'); -- 0ms;
CREATE INDEX i64 ON t0(CAST(((c0)>(c0)) AS INTEGER)) WHERE (((((c0)<=(c0))))<>((((c0) IS FALSE)))); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 3ms;
DROP INDEX IF EXISTS "i64"; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1938751515 unordered noskipscan'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1054388613 unordered'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 6ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0xffffffffd495c825; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-1.6499406E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
ANALYZE main; -- 5ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (0.5628553569618804), (NULL), (0.6748551783683601); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL), (x'389c'), (x''); -- 0ms;
PRAGMA temp.cell_size_check = true; -- 2ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0Xffffffffb037a5b5), (NULL), ('bL0O޳-nowp'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x''); -- 0ms;
CREATE INDEX IF NOT EXISTS i62 ON t0(PRINTF((- (c0))) COLLATE NOCASE DESC); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((((t0.c0)AND(vt1.c0)))OR(v0.c0)) IN (SUM(vt1.c0))) FROM v0, t0 LIMIT -651477279;SELECT DISTINCT ((vt1.c0 COLLATE NOCASE)%(((t0.c0) IS FALSE))) FROM v0, vt1;SELECT ALL (- (GROUP_CONCAT(t0.c0))), ((((((v0.c0) NOT NULL))AND(CASE WHEN v0.c0 THEN t0.c0 END)))AND(((vt1.c0)+(v0.c0)))), (((- (t0.c0)))=(((t0.c0)/(v0.c0)))) FROM v0, vt1 WHERE ('');SELECT ALL '-316096985', TRIM(((((((((v0.c0)OR(vt1.c0)))AND('-316096985')))AND(v0.c0)))AND(''))), (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY, ((((v0.c0)LIKE(t0.c0)))LIKE(json_remove(t0.c0, v0.c0, t0.c0, t0.c0))), 0xffffffffc7df2539 FROM t0, vt1, v0; -- 0ms;
SELECT ALL ((((CASE v0.c0  WHEN vt1.c0 THEN x'' END)OR(CASE t0.c0  WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END)))AND(CASE WHEN t0.c0 THEN vt1.c0 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN 0Xffffffffd64c07b3 WHEN v0.c0 THEN vt1.c0 END)), GROUP_CONCAT(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t0.c0))), json_array_length(t0.c0 COLLATE NOCASE) FROM v0;SELECT (- (AVG(t0.c0))) FROM t0; -- 0ms;
SELECT ALL (((v0.c0)) NOT BETWEEN ((NULLIF(vt1.c0, t0.c0))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) FROM vt1, t0 WHERE (((x'' COLLATE NOCASE)%(CASE WHEN x'' THEN 0Xffffffffba9f2452 END)));SELECT DISTINCT CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE FROM t0, v0, vt1; -- 0ms;
SELECT DISTINCT MIN((vt1.c0 IN (v0.c0))) COLLATE RTRIM, MIN((((v0.c0))>=((v0.c0))), (((v0.c0))==((t0.c0)))), ((((CAST(t0.c0 AS REAL))OR((((t0.c0))>((t0.c0))))))AND((((t0.c0, vt1.c0, vt1.c0))>=((vt1.c0, t0.c0, vt1.c0))))) FROM t0 INDEXED BY i62, v0;SELECT DISTINCT ((SUM(x'dc92'))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))), COUNT(*) OVER (), CAST(((t0.c0)<=(t0.c0)) AS TEXT) FROM vt1, v0;SELECT DISTINCT (((NOT (vt1.c0))) BETWEEN (v0.c0) AND (((((t0.c0)AND(vt1.c0)))OR(v0.c0)))) FROM t0 LEFT OUTER JOIN vt1 ON ((((x'2b25')OR((((vt1.c0, v0.c0, v0.c0, t0.c0, '5.谂G-b[')) BETWEEN ((vt1.c0, v0.c0, NULL, vt1.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, vt1.c0))))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) FULL OUTER JOIN v0 ON (((((t0.c0, t0.c0, vt1.c0))==((NULL, NULL, t0.c0)))) IS FALSE);SELECT ALL CASE WHEN (t0.c0 IN (v0.c0)) THEN ((v0.c0) IS TRUE) END FROM vt1 WHERE ('563037575');SELECT DISTINCT CAST(((vt1.c0) NOTNULL) AS REAL) FROM t0 WHERE (((CAST(NULL AS REAL))+(((1.455522052E9)>=(805314940))))) ORDER BY IFNULL(CASE v0.c0  WHEN vt1.c0 THEN '-1649940600' END, -0.0)  NULLS FIRST, x'' COLLATE RTRIM;SELECT DISTINCT CAST(((x'') NOT BETWEEN (v0.c0) AND (x'')) AS BLOB) FROM t0, v0, vt1; -- 0ms;
SELECT (COUNT(v0.c0) IN ()), LIKELIHOOD(DISTINCT (t0.c0 IN ()), 0.3115792954497636), CAST(CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END AS REAL) FROM vt1 WHERE (CASE (((((((('')OR(x'4380')))AND('f攁')))AND(NULL)))OR(x'f53b'))  WHEN x'8268' THEN LIKELY('Fd') END) ORDER BY ((((t0.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)GLOB(v0.c0))) AND ((+ (1491731222)))) ASC  NULLS FIRST;SELECT DISTINCT ((COUNT(*)) IS FALSE), (('-699660365')>=(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), '-728381403', (~ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END)), ((json_array_length(x'110e', t0.c0))<(((t0.c0)<(vt1.c0)))) FROM t0, vt1;SELECT COUNT((NOT (v0.c0))) FROM vt1, v0 WHERE (((((((NULL)AND(0x0)))AND(x''))) BETWEEN (((((NULL)OR(0.18021132881872126)))AND(0.1964980194959397))) AND (CASE NULL  WHEN x'' THEN x'' END))) INTERSECT SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN v0.c0 THEN t0.c0 END  WHEN ((((v0.c0)AND(v0.c0)))AND(vt1.c0)) THEN ABS(v0.c0) END FROM v0, vt1, t0 WHERE (((((0.3819391423065056) ISNULL)) BETWEEN (CAST(NULL AS BLOB)) AND (0.23363803684645734))); -- 1ms;
SELECT DISTINCT (((((vt1.c0, v0.c0, vt1.c0))<=((v0.c0, vt1.c0, vt1.c0)))) BETWEEN ((NOT (t0.c0))) AND (MAX(vt1.c0, v0.c0, vt1.c0, vt1.c0))), (TOTAL(v0.c0) IN ()), AVG(CASE t0.c0  WHEN vt1.c0 THEN x'' ELSE t0.c0 END) FROM vt1, t0;SELECT ALL t0.c0 FROM v0, t0 LIMIT 541194996 OFFSET 1054041345; -- 0ms;
SELECT DISTINCT (((((vt1.c0))>((v0.c0)))) NOT NULL), (((~ (vt1.c0)))<<(GROUP_CONCAT('-1163975598'))), NTILE(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=(((t0.c0)<(t0.c0))))) OVER () FROM t0 WHERE ('f젥C');SELECT DISTINCT ((CAST(t0.c0 AS INTEGER))=('WL⍏v')) FROM v0, vt1, t0 WHERE ((((((NULL, '-1171992231', 0.23363803684645734))!=((0.548738199951083, 0.23561123624922675, x'')))) BETWEEN (((NULL)%(x''))) AND (((0.7371231660690807) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((((((((v0.c0) NOT BETWEEN (x'b1b6') AND (t0.c0)))AND(((t0.c0) NOT NULL))))OR(((t0.c0)AND(v0.c0)))))AND(CAST(vt1.c0 AS TEXT))))AND(((((vt1.c0)OR(v0.c0)))OR(t0.c0)))), ((TOTAL(v0.c0)) NOT NULL), 0.950851672726108 FROM t0;SELECT DISTINCT SUM((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.7847935196474933)))) OVER (), (((vt1.c0)) BETWEEN ((((t0.c0)>>(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE))), ((LIKELIHOOD(DISTINCT t0.c0, 0.6103773256162164)) BETWEEN (((t0.c0) BETWEEN (v0.c0) AND (vt1.c0))) AND (v0.c0 COLLATE NOCASE)), CUME_DIST() OVER (), (~ (((t0.c0)<>(v0.c0)))) FROM t0;SELECT DISTINCT ROW_NUMBER() OVER () FROM v0 WHERE (UNLIKELY(((('563037575'))<((-728381403))))) LIMIT 2083396129; -- 0ms;
SELECT DISTINCT (((+ (vt1.c0)))<>((((t0.c0, v0.c0, v0.c0, v0.c0, t0.c0)) BETWEEN (('cnsk', t0.c0, t0.c0, v0.c0, vt1.c0)) AND ((vt1.c0, t0.c0, v0.c0, t0.c0, vt1.c0))))), CASE v0.c0  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY END, CASE NULL COLLATE BINARY  WHEN ROUND(v0.c0, t0.c0) THEN ((vt1.c0)|(vt1.c0)) ELSE ((t0.c0)OR(vt1.c0)) END FROM vt1;SELECT DISTINCT HEX(DISTINCT ((x'fe3a')IS NOT(t0.c0))), (MAX(t0.c0) IN ()), NULLIF(vt1.c0, ((t0.c0) NOTNULL)) FROM v0;SELECT DISTINCT COUNT(CASE vt1.c0  WHEN 805314940 THEN t0.c0 WHEN 0.815875559156938 THEN 0x2a620ad WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) FROM vt1, t0, v0 WHERE (((json(NULL)) IS FALSE)); -- 0ms;
SELECT vt1.c0 FROM vt1, v0, t0 LIMIT -1938751515; -- 0ms;
SELECT DISTINCT CASE WHEN ((v0.c0)>(t0.c0)) THEN (- (t0.c0)) ELSE ((vt1.c0)GLOB(v0.c0)) END FROM t0, v0, vt1 GROUP BY ((((((((t0.c0)OR((((vt1.c0, x'', vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))))OR(TRIM(v0.c0, v0.c0))))AND(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)))OR(((((t0.c0)OR(t0.c0)))AND(0.23561123624922675)))) HAVING (((v0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((vt1.c0)>>(t0.c0))))) LIMIT 818419669 OFFSET 412332050; -- 0ms;
SELECT DISTINCT ((CAST('' AS REAL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (t0.c0)))) FROM vt1 WHERE ((((((NULL)LIKE('{脄m')), CAST('M]C?' AS BLOB), ((-6.51477279E8) NOT BETWEEN (NULL) AND (0.04694842878842287))))==(((+ (-860353289)), TYPEOF(NULL), ((0.7597903795866081)IS NOT('-1869274841'))))));SELECT NULL COLLATE BINARY, (((NOT (t0.c0))) ISNULL), TRIM(((t0.c0)LIKE(v0.c0))) FROM t0, v0, vt1; -- 0ms;
SELECT load_extension((((t0.c0))>=((v0.c0)))) FROM v0, vt1 LIMIT 97773465 OFFSET 1606420376;SELECT DISTINCT ((((((((((vt1.c0)AND(vt1.c0)))OR(t0.c0)))AND(vt1.c0)))AND(v0.c0))) BETWEEN ((((v0.c0, v0.c0, t0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0)))) AND ((((vt1.c0))>=((t0.c0))))), GLOB((('0.950851672726108') NOT BETWEEN (NULL) AND (vt1.c0)), IFNULL(DISTINCT v0.c0, vt1.c0)), vt1.c0 FROM v0, t0 WHERE (CAST((NULL IN ()) AS INTEGER)) ORDER BY x''  NULLS FIRST;SELECT DISTINCT (((((~ (t0.c0)))OR(((v0.c0)OR(v0.c0)))))OR(((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))), ((((v0.c0)GLOB(v0.c0))) IS FALSE), CASE CASE 5.41194996E8  WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN UPPER(t0.c0) THEN 0.26079794949020807 END, NTILE((((~ ('886684053')))GLOB((t0.c0 IN ())))) OVER (), ((NULL) IS TRUE) FROM vt1, v0, t0; -- 0ms;
SELECT CASE WHEN json_valid(v0.c0) THEN ((vt1.c0) ISNULL) END, (((+ (vt1.c0)))&('')), (((+ (t0.c0))) BETWEEN (((v0.c0)<=(v0.c0))) AND (((vt1.c0)>(t0.c0)))) FROM v0;SELECT ALL (- (vt1.c0)) COLLATE RTRIM, SUM((t0.c0 IN ())), AVG(((vt1.c0) IS FALSE)) OVER () FROM vt1, t0; -- 0ms;
SELECT ((t0.c0 COLLATE NOCASE)>(((t0.c0) IS FALSE))) FROM t0, vt1, v0 WHERE (((((('97773465'))==((-1529593233))))IS((+ (x''))))); -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))/(((0.23990537126521594)<(vt1.c0)))) FROM t0 WHERE (((((0x278dc415)*(4.82315266E8))) NOT BETWEEN (((0xffffffffa9226118) NOTNULL)) AND (((((((((((((NULL)AND(0.23363803684645734)))OR('e')))AND(x'')))AND(NULL)))OR('')))OR(x''))))) GROUP BY ((((vt1.c0) ISNULL))<>(((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))), CASE WHEN ((((vt1.c0)OR(NULL)))OR(v0.c0)) THEN (('-532345778') NOT BETWEEN (v0.c0) AND (vt1.c0)) WHEN (+ (v0.c0)) THEN ((vt1.c0) IS TRUE) WHEN v0.c0 THEN ((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)) END, (NOT (((v0.c0) IS FALSE))), (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))))%(CAST(v0.c0 AS NUMERIC))), (- (CASE WHEN vt1.c0 THEN vt1.c0 END)) HAVING TOTAL(NULL) COLLATE RTRIM;SELECT DISTINCT ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((v0.c0, vt1.c0, v0.c0)))))>=((v0.c0))) FROM v0 LIMIT 663602197;SELECT ALL MIN(CAST(vt1.c0 AS TEXT)), (+ (LOWER(DISTINCT t0.c0))), (((((x'', t0.c0, v0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t0.c0, NULL, vt1.c0))))%((v0.c0 IN ()))), GROUP_CONCAT(SUM(CAST(v0.c0 AS INTEGER))), CASE ((vt1.c0) IS TRUE)  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END THEN CAST(t0.c0 AS REAL) END FROM t0 WHERE (((CASE WHEN 'm.' THEN 0xffffffffe6a6a1cb WHEN 5.41194996E8 THEN 0.7153091718768124 WHEN '-451569157' THEN NULL END)AND((0x54bcc6ab IN ())))) GROUP BY ((0.26079794949020807) ISNULL), CASE WHEN NULL THEN ((v0.c0)==(t0.c0)) ELSE CASE WHEN vt1.c0 THEN v0.c0 END END, (((vt1.c0 IN ()))>>(((vt1.c0) IS FALSE))) HAVING (((CAST(vt1.c0 AS INTEGER)))>=((((((((((t0.c0)OR(vt1.c0)))OR('')))AND(v0.c0)))OR(t0.c0)))));SELECT ((((t0.c0)LIKE(v0.c0)))IS NOT((t0.c0 IN ()))) FROM v0, t0; -- 0ms;
SELECT ALL ((CAST(NULL AS BLOB))>=((- (v0.c0)))) FROM vt1 WHERE (((json_patch('', '-27944409'))<=(((x'') BETWEEN (-1355515826) AND (0.308382411889045)))));SELECT DISTINCT (LTRIM(vt1.c0) IN ()) FROM vt1, v0 WHERE (((('97773465' COLLATE RTRIM, ((0.2438424174850844) IS FALSE), 44441773))<(((('')LIKE(NULL)), ((((0.07828587246139462)AND(0X4fcb1a2c)))AND(x'')), ((-1.457364712E9)&('脄''')))))) GROUP BY 0.6352842437741072, (+ (((((vt1.c0)AND(v0.c0)))OR(v0.c0)))), ((vt1.c0)&(v0.c0)) COLLATE RTRIM; -- 0ms;
SELECT CUME_DIST() OVER () FROM v0, vt1 WHERE ((((1287806865))=((0Xffffffffcc3e4c51))) COLLATE RTRIM) GROUP BY v0.c0 HAVING (((((vt1.c0) ISNULL), '-856514956', CAST(t0.c0 AS BLOB)))>((t0.c0, vt1.c0, CAST(vt1.c0 AS REAL))));SELECT ((NULLIF(DISTINCT v0.c0, t0.c0))<<(vt1.c0 COLLATE RTRIM)) FROM t0, v0 WHERE ('0.308382411889045') ORDER BY t0.c0;SELECT DISTINCT CASE WHEN MIN(vt1.c0, t0.c0) THEN (NOT (vt1.c0)) END FROM v0 WHERE (((('-1035003079')) BETWEEN ((NULLIF(DISTINCT '-1049811546', NULL))) AND ((((-1383319542)GLOB(x''))))));SELECT ALL CAST((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS REAL), ((0X2859b293) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (((v0.c0)>=(t0.c0)))), IFNULL(AVG(v0.c0), COUNT(*)) FROM vt1, t0;SELECT ALL NULL FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((t0.c0 COLLATE BINARY))) FROM t0 WHERE (((NULL)=(NULL)) COLLATE RTRIM);SELECT DISTINCT LAG((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))), NULL, (v0.c0 IN ()) COLLATE NOCASE) OVER (), ((((HEX(vt1.c0))AND(NULL COLLATE NOCASE)))OR(vt1.c0 COLLATE NOCASE)), vt1.c0 FROM v0 WHERE (((((((NULL)OR(0.08548232950262658)))OR(NULL)))<=((('')+(x'')))));SELECT DISTINCT CASE CASE WHEN t0.c0 THEN v0.c0 END  WHEN ((t0.c0)&(v0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN '-451569157' THEN (((vt1.c0))==((v0.c0))) WHEN CASE v0.c0  WHEN t0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN t0.c0 END THEN (((vt1.c0, v0.c0, t0.c0))<=((v0.c0, NULL, vt1.c0))) ELSE (NOT (t0.c0)) END FROM v0, vt1 WHERE ((CASE '%EX>{J6ㅿ'  WHEN '-394154798' THEN x'' END IN ())) ORDER BY ((((v0.c0, vt1.c0, v0.c0, v0.c0, t0.c0))==((t0.c0, vt1.c0, v0.c0, vt1.c0, v0.c0))) IN ())  NULLS FIRST;SELECT CASE ((((vt1.c0)AND(t0.c0)))AND(v0.c0))  WHEN x'c188' THEN v0.c0 COLLATE BINARY END, CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0)))AND(0.13444775134748987)) THEN CASE x'ccfc'  WHEN vt1.c0 THEN 0X3000217c WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 END ELSE t0.c0 END, CAST(CAST(v0.c0 AS NUMERIC) AS BLOB) FROM v0 WHERE (((((CAST('-2081236431' AS TEXT))OR(x'95d08cef3248' COLLATE NOCASE)))OR((('')<=(NULL)))));SELECT DISTINCT rtreenode(((v0.c0)&(vt1.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) FROM t0 WHERE (((((NULL)AND('b[')))<(IFNULL('-1649940600', 0.5308585495961722))));SELECT SUM(v0.c0 COLLATE RTRIM COLLATE BINARY) FROM t0;SELECT DISTINCT ((((vt1.c0) ISNULL)) IS TRUE), DATE(t0.c0, t0.c0 COLLATE RTRIM, (NOT (v0.c0))), ((((((((((v0.c0)OR(v0.c0)))AND(t0.c0)))AND(v0.c0)))AND(t0.c0))) NOTNULL) FROM vt1, t0;SELECT AVG(((((v0.c0)AND(v0.c0)))OR(t0.c0))) OVER () FROM t0, v0, vt1 WHERE (CASE WHEN ((NULL) NOTNULL) THEN ((x'06c0')OR(-809089938)) WHEN LOWER(DISTINCT x'') THEN (('bh')>('a)\n~s/pki')) WHEN ((NULL) BETWEEN (-6.43812993E8) AND ('')) THEN (((x'', NULL, 'p9N')) NOT BETWEEN (('-1035003079', NULL, '-1485738616')) AND ((-1.171992231E9, '-897500992', x''))) END); -- 0ms;
SELECT DISTINCT ((x'') ISNULL) COLLATE NOCASE, CAST(vt1.c0 AS NUMERIC) COLLATE BINARY, CAST((vt1.c0 IN (t0.c0)) AS TEXT), (((((t0.c0, v0.c0, t0.c0))<((vt1.c0, t0.c0, vt1.c0))))GLOB(t0.c0)), CAST(t0.c0 COLLATE BINARY AS TEXT) FROM vt1, t0;SELECT DISTINCT CAST(COUNT(v0.c0) AS REAL), ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)=(vt1.c0)), (((CAST(vt1.c0 AS INTEGER), (+ (x'')), (- (t0.c0))))>=(((v0.c0 IN (vt1.c0, t0.c0)), '-1641551773', ((((vt1.c0)AND(NULL)))AND(vt1.c0))))) FROM t0, vt1;SELECT DISTINCT (((json_valid(v0.c0)))<>((CASE v0.c0  WHEN vt1.c0 THEN t0.c0 END))) FROM vt1, v0;SELECT SUM((t0.c0 IN (t0.c0)) COLLATE BINARY) OVER () FROM v0, t0 WHERE (((((NULL)IS('-650334227'))) IS FALSE)) LIMIT -1875388402 OFFSET 1246589250; -- 0ms;
SELECT ALL CAST(((vt1.c0)<(v0.c0)) AS NUMERIC) FROM t0, v0, vt1 WHERE (x'71a17cca' COLLATE RTRIM COLLATE RTRIM) ORDER BY (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))) IS TRUE) DESC  NULLS FIRST; -- 0ms;
SELECT (((+ (v0.c0)))-(((vt1.c0)%(t0.c0)))), MIN(0.6773430002291669 COLLATE BINARY), (((NOT (t0.c0))) NOT NULL) FROM vt1 WHERE ((((((x'') NOT BETWEEN ('') AND (''))))<=((CAST(x'' AS TEXT)))));SELECT DISTINCT (GROUP_CONCAT(t0.c0) IN (vt1.c0)) FROM t0, v0, vt1; -- 1ms;
SELECT DISTINCT ((((((vt1.c0)AND(v0.c0)))OR(t0.c0)))=(NULL)) FROM v0, t0 GROUP BY CASE WHEN (('706238383')&(vt1.c0)) THEN ABS(DISTINCT vt1.c0) END LIMIT -1246851377 OFFSET 2044917821;SELECT ALL SUM(((t0.c0) BETWEEN (v0.c0) AND (v0.c0))) FROM t0, vt1;SELECT DISTINCT ((CASE WHEN t0.c0 THEN v0.c0 END)*((((v0.c0, vt1.c0, t0.c0)) BETWEEN ((0.09186655895433571, vt1.c0, v0.c0)) AND ((vt1.c0, v0.c0, vt1.c0))))), vt1.c0, (((vt1.c0, '818419669', (NULL IN ())))=((CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 END, (t0.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN x'' ELSE v0.c0 END))) FROM v0, t0, vt1 WHERE (CAST(((1606571600)<<('-888793318')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT t0.c0 FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)OR('818419669')) AS BLOB) FROM v0 INDEXED BY i62 WHERE (CAST(((((((((x'')AND('')))OR(x'')))AND(x'26b1')))OR(x'')) AS TEXT));SELECT DISTINCT NTILE(t0.c0) OVER () FROM t0 WHERE (((((NULL)OR((('')IS NOT(NULL)))))OR((((('-1049811546')OR(NULL)))OR(NULL)))));SELECT CAST(vt1.c0 AS REAL), ((((v0.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY, TOTAL((v0.c0 IN ())) OVER ( ORDER BY (((v0.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL), INSTR(x'6f68', t0.c0), t0.c0 COLLATE BINARY)) AND ((CAST('1074224223' AS BLOB), ((v0.c0)IS('zPn.x!scx')), ((v0.c0)<(t0.c0))))) ASC  NULLS FIRST), SUM(LENGTH(v0.c0)) OVER (), (+ ((((t0.c0))<((v0.c0))))) FROM v0;SELECT DISTINCT x'' FROM v0, vt1 WHERE ((((CAST('-728381403' AS TEXT)))<((((((((((NULL)OR('-1228222103')))OR('>|A')))AND('-1869274841')))OR(NULL)))))); -- 0ms;
SELECT DISTINCT ((((((0.7552430180725869)OR(t0.c0)))AND(t0.c0))) ISNULL) FROM vt1;SELECT DISTINCT ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) IS TRUE), ((((t0.c0) ISNULL)) NOT NULL), TOTAL(json_quote(vt1.c0)) OVER () FROM t0 WHERE ('\_#I༢lW!');SELECT ((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt1.c0)))OR(v0.c0)) COLLATE RTRIM FROM t0;SELECT DISTINCT TRIM(LOWER(t0.c0)) FROM t0, vt1; -- 0ms;
SELECT v0.c0 FROM vt1, t0, v0; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY ((((((x'')>=(v0.c0)))OR(CAST('%Gi.w' AS REAL))))AND((v0.c0 IN ()))) ASC  NULLS FIRST) FROM vt1; -- 0ms;
SELECT LIKELY(NULL) FROM vt1, t0, v0 WHERE (NULL); -- 0ms;
SELECT DISTINCT x'' FROM t0, v0; -- 1ms;
SELECT ALL CASE ((t0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))  WHEN t0.c0 THEN ((t0.c0) ISNULL) END, (((((((((((vt1.c0))>((t0.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(ROUND(t0.c0, vt1.c0))))OR(NULL)))OR(((t0.c0)<>(vt1.c0)))), ((x'') NOT BETWEEN (LIKE(v0.c0, vt1.c0)) AND (((vt1.c0)>>(0xffffffff86c1c185)))) FROM v0, t0;SELECT ((CASE vt1.c0  WHEN t0.c0 THEN 'aR5u' ELSE vt1.c0 END) IS TRUE), (((((t0.c0 IN ()))AND(((v0.c0)/(vt1.c0)))))OR(((t0.c0)%(v0.c0)))), MIN(0.7552430180725869) FROM t0, v0 GROUP BY '', (~ (v0.c0)), ((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<(((t0.c0) ISNULL))) HAVING LIKELIHOOD(DISTINCT t0.c0 COLLATE NOCASE, 0.5106841243473575);SELECT DISTINCT AVG(DATETIME(vt1.c0, t0.c0, vt1.c0)) OVER (), (((((t0.c0) NOT BETWEEN (' 9') AND (t0.c0))))=(((~ (vt1.c0))))), ((v0.c0 COLLATE NOCASE)AND('1328861576')) FROM v0, vt1;SELECT ALL TOTAL(x'ec3f2c6c') FILTER(WHERE ((ROUND('294247943', vt1.c0)) IS TRUE)) OVER (), x'cf1e', ((CAST(v0.c0 AS BLOB))>=(((0.3432087834351958)||(v0.c0)))) FROM vt1 WHERE ((((((NULL))>=((x'')))) IS TRUE));SELECT ((t0.c0 COLLATE RTRIM) NOT NULL), ((('', vt1.c0, t0.c0)) BETWEEN ((t0.c0, x'b957', ((v0.c0) BETWEEN (vt1.c0) AND (t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)), COALESCE(vt1.c0, t0.c0), v0.c0 COLLATE NOCASE))), t0.c0, (((((v0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))>=(((vt1.c0)-(v0.c0)))), CASE WHEN ((vt1.c0)>(v0.c0)) THEN (~ (NULL)) END FROM t0 WHERE (((('E6')) NOT BETWEEN ((('395884496' IN (']mmnqv')))) AND (((+ ('1606420376')))))) ORDER BY TYPEOF(DISTINCT CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE t0.c0 END) ASC;SELECT ALL x'' FROM vt1 NOT INDEXED WHERE ((((x'', 1850822548, '0.6773430002291669'))!=((NULL, x'c766', 1287806865))) COLLATE BINARY); -- 0ms;
SELECT ALL x'' FROM vt1 LIMIT 1962703818; -- 0ms;
SELECT (((v0.c0)) BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)))) AND (((('886684053') NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM v0, t0 WHERE ((((0.3819391423065056)) BETWEEN ((CASE 'f젥C'  WHEN -1368676406 THEN '1955396228' END)) AND (((-2.081236431E9 IN ()))))); -- 0ms;
SELECT (((GROUP_CONCAT(vt1.c0)))=((((((v0.c0)OR(t0.c0)))OR(vt1.c0))))) FROM v0, t0 WHERE (CAST(('QTZdr' IN (0Xffffffffbc6fafef)) AS INTEGER));SELECT DISTINCT TYPEOF(DISTINCT (v0.c0 IN (vt1.c0))), RANK() OVER (), ((x'22df')*(((t0.c0)-(v0.c0)))), ((v0.c0 COLLATE BINARY) NOT NULL), CASE v0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN 0Xffffffffaf548eac THEN v0.c0 END COLLATE BINARY FROM t0, v0 ORDER BY vt1.c0 ASC  NULLS LAST LIMIT -1750595893 OFFSET -338661172;SELECT ALL (NOT (x'8a03')), ((CAST(vt1.c0 AS TEXT))GLOB(((t0.c0) NOTNULL))), CASE WHEN TOTAL(v0.c0) THEN CASE WHEN v0.c0 THEN t0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE (vt1.c0 IN (t0.c0)) END FROM v0, vt1 WHERE (((((x'f3e3'))=(('663602197'))) IN ()));SELECT DISTINCT (((((vt1.c0, v0.c0, v0.c0))==((vt1.c0, t0.c0, '')))) IS TRUE), ((((x'adfe')/(t0.c0)))AND(((v0.c0)+(t0.c0)))), NTH_VALUE(json_type(((v0.c0) NOT NULL)), json_array_length(((t0.c0) BETWEEN (v0.c0) AND (v0.c0)), t0.c0 COLLATE NOCASE)) OVER () FROM t0, v0 ORDER BY CASE ((vt1.c0)<<(v0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) THEN '-1e500' ELSE ((vt1.c0)/(v0.c0)) END ASC  NULLS FIRST, ((vt1.c0) IS FALSE);SELECT DISTINCT ((((t0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM FROM v0 LIMIT -1932922218 OFFSET 428689497;SELECT DISTINCT GROUP_CONCAT(CASE 0.11492902649917902  WHEN t0.c0 THEN t0.c0 END) OVER () FROM t0; -- 0ms;
SELECT CASE WHEN AVG(NULL) THEN x'' WHEN ((t0.c0) IS TRUE) THEN ((vt1.c0)LIKE(vt1.c0)) WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN t0.c0 THEN 1.955396228E9 END ELSE v0.c0 END FROM vt1, v0, t0 WHERE (((((LOWER(0.13444775134748987))OR('1606571600' COLLATE RTRIM)))AND(CAST(0.9681542646960973 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN x'ffb0' WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 END) BETWEEN ((- (t0.c0))) AND (t0.c0)) FROM v0;SELECT ALL LIKELY(DISTINCT (v0.c0 IN (1053292707, -1236666692))) FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT x'', (((0.8249699619292316))!=((NULL))), (((x'', x'', t0.c0)) NOT BETWEEN ((COUNT(*), CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END, ((((v0.c0)AND(t0.c0)))OR(v0.c0)))) AND ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 END, ((((vt1.c0)OR(t0.c0)))AND('-416244710')), (((v0.c0, vt1.c0, v0.c0))<((vt1.c0, t0.c0, vt1.c0)))))) FROM v0, vt1;SELECT ALL ((((vt1.c0) BETWEEN (t0.c0) AND (v0.c0))) BETWEEN (vt1.c0) AND (TYPEOF(vt1.c0))) FROM v0, vt1, t0 WHERE (((((x'd297')&(0.141462715394858)))>=(0.059857947089262176 COLLATE BINARY))); -- 0ms;
SELECT COUNT(*) OVER () FROM t0; -- 0ms;
SELECT ALL RANK() OVER (), (((+ (vt1.c0))) NOTNULL), ((CASE v0.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END) NOTNULL), ((0.7177650704655729)==(((v0.c0)+(-1.869274841E9)))), '~콽' FROM v0, t0 WHERE ((((0.38967279013623357)) BETWEEN (((('') IS FALSE))) AND (((((((((((((('482315266')OR('0.6773430002291669')))AND(-103508523)))AND('1514823983')))OR(NULL)))AND('W')))AND(NULL))))));SELECT ALL GROUP_CONCAT(((t0.c0)<<(t0.c0))) OVER () FROM v0, vt1 WHERE (((load_extension(0.0020371607204711095, 'W')) NOT BETWEEN (UPPER(x'f920')) AND (('-316096985' IN ()))));SELECT DISTINCT ((((t0.c0)IS NOT(vt1.c0)))<>(((((v0.c0)AND(v0.c0)))OR(vt1.c0)))) FROM vt1, v0;SELECT DISTINCT (((NULL IN ())) NOT BETWEEN (CASE WHEN NULL THEN t0.c0 ELSE v0.c0 END) AND (vt1.c0)), ((vt1.c0 IN ()) IN ()), (((((t0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))*(CAST(vt1.c0 AS INTEGER))) FROM v0, t0 WHERE (((((UNICODE('p9N'))OR(((719014932) NOT BETWEEN (7.19014932E8) AND ('SM\I*')))))AND(0.02819311701131999))) ORDER BY CASE CAST(v0.c0 AS BLOB)  WHEN ((v0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN v0.c0 COLLATE NOCASE ELSE (((('0.7847935196474933')AND(t0.c0)))AND(t0.c0)) END  NULLS FIRST, v0.c0 COLLATE BINARY DESC  NULLS FIRST LIMIT 933420154 OFFSET -243152812;SELECT DISTINCT (((v0.c0 COLLATE NOCASE))>=((CAST(v0.c0 AS BLOB)))) FROM t0, v0 WHERE ((((('FALSE', x'23e4', 0xfffffffff9d495d5)) NOT BETWEEN ((0.23990537126521594, x'', NULL)) AND (('1J\n#⊌eJ)', -1.228222103E9, NULL))) IN ((- (NULL))))) GROUP BY ((load_extension(v0.c0, v0.c0))==(((t0.c0)IS(v0.c0)))) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((v0.c0, (~ (9.33420154E8)), ((vt1.c0)IS(v0.c0)))) AND ((x'', ((t0.c0)<(v0.c0)), vt1.c0))) ASC;SELECT FIRST_VALUE(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(SUBSTR(v0.c0, v0.c0))))OR((+ (v0.c0))))) OVER (), CASE WHEN (vt1.c0 IN (NULL)) THEN CASE WHEN '\T茼v' THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 END END, (+ (CAST(vt1.c0 AS NUMERIC))) FROM v0;SELECT ALL (- (((vt1.c0)OR(-2.503747E7)))) FROM t0, vt1 LIMIT 292512733 OFFSET -1354654095; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c0) NOT NULL) COLLATE BINARY) FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT (0.2438424174850844 IN ()) FROM v0, t0, vt1; -- 0ms;
SELECT (((x'dc6c87a8' IN ()))*(MAX(t0.c0))), ((((v0.c0))<=((v0.c0))) IN ()), CAST('644861821' AS TEXT) COLLATE NOCASE FROM t0 INDEXED BY i62 WHERE (((((-2053999609)|('-451569157')))>>(((-356754982) IS FALSE)))); -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN (~ (v0.c0)) END, (((((((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)), ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)), AVG(v0.c0)))!=((((t0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((vt1.c0, vt1.c0, t0.c0))<>((t0.c0, v0.c0, t0.c0))), ((((v0.c0)OR(vt1.c0)))OR(vt1.c0))))), CAST(COUNT(*) AS BLOB) FROM t0, v0, vt1 WHERE (('' IN ()) COLLATE NOCASE); -- 1ms;
SELECT (((v0.c0 IN ())) IS FALSE) FROM vt1, t0, v0; -- 0ms;
SELECT ALL (+ ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))) FROM vt1 ORDER BY TYPEOF(((x'0a90') NOT NULL)), ((((v0.c0)IS(0Xffffffff8199ca3e)))AND(CASE WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END))  NULLS LAST, HEX(((t0.c0)IS(0x2e345bde))) DESC LIMIT -1319695356 OFFSET -128014797;SELECT ALL ((((((v0.c0)==(v0.c0)))AND(t0.c0)))AND(((((((((0.3616412736274939)OR('o	')))AND(t0.c0)))AND(0Xffffffffe1f6f919)))AND(t0.c0)))), ((((NOT (v0.c0))))=((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 END))), COUNT(*) OVER () FROM vt1, t0 WHERE (0.8187729690840119);SELECT DISTINCT ((vt1.c0 IN ()) IN (((t0.c0)OR(v0.c0)))), v0.c0, CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY, CAST(vt1.c0 AS NUMERIC), vt1.c0 FROM vt1, t0, v0 WHERE ('s'); -- 0ms;
SELECT DISTINCT (~ (((((t0.c0)OR(vt1.c0)))AND(v0.c0)))) FROM vt1;SELECT DISTINCT TOTAL(CAST(vt1.c0 AS TEXT)) FROM t0 WHERE (((x'9680') ISNULL) COLLATE BINARY);SELECT ALL SQLITE_SOURCE_ID() FROM v0 WHERE (((0x88fbaff)<>(0.6258896368773251)) COLLATE RTRIM) GROUP BY ((((((t0.c0)AND(x'')))OR(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 END) AND (CASE v0.c0  WHEN t0.c0 THEN t0.c0 END)), (~ (v0.c0 COLLATE RTRIM)), ((CAST(v0.c0 AS TEXT))IS(TYPEOF(DISTINCT t0.c0)));SELECT DISTINCT (((1.955396228E9))!=((MIN(NULL)))), t0.c0, HEX(CASE WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END) FROM v0, t0;SELECT ALL ((((((((((vt1.c0)AND(t0.c0)))OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0))) IS FALSE) FROM vt1, t0;SELECT DISTINCT (+ (CAST(vt1.c0 AS TEXT))) FROM vt1, v0; -- 0ms;
SELECT ALL x'', CAST(((((((((t0.c0)OR(t0.c0)))OR(vt1.c0)))OR(0xffffffffb31ff4ac)))OR(v0.c0)) AS REAL), (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, t0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL), TOTAL_CHANGES(), ((((vt1.c0)OR(vt1.c0)))AND(v0.c0)), IFNULL(t0.c0, t0.c0), vt1.c0 COLLATE RTRIM)) AND ((((vt1.c0)==(v0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)), (- (vt1.c0)), (v0.c0 IN ()), ((t0.c0)IS NOT(v0.c0))))) FROM v0, vt1 WHERE (UNLIKELY(0.5704198589831431 COLLATE NOCASE));SELECT DISTINCT ((((CAST(vt1.c0 AS NUMERIC))OR((((vt1.c0))<((t0.c0))))))OR('E6')) FROM vt1, v0;SELECT DISTINCT ((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))>((t0.c0 IN (v0.c0, v0.c0)))), ((CAST(v0.c0 AS REAL))AND(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))), CASE (v0.c0 IN ())  WHEN (- (vt1.c0)) THEN ((t0.c0)<(v0.c0)) ELSE LIKELIHOOD(t0.c0, 0.3017494642063294) END FROM vt1, v0, t0 WHERE ((((x'')) NOT BETWEEN ((0.3212128446461172)) AND ((CAST('h*' AS INTEGER))))); -- 0ms;
SELECT ALL vt1.c0 FROM t0 WHERE (TRIM(((x'')||('577376034'))));SELECT ALL LEAD(IFNULL(CAST(vt1.c0 AS REAL), CAST(v0.c0 AS INTEGER)), '₭#h#Z', CASE LIKELIHOOD(DISTINCT t0.c0, 0.8409270338239134)  WHEN ((vt1.c0)|(vt1.c0)) THEN (t0.c0 IN (v0.c0)) WHEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN LAST_INSERT_ROWID() WHEN (NOT (t0.c0)) THEN (((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) WHEN ((NULL) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN UNLIKELY(v0.c0) WHEN ((t0.c0) NOTNULL) THEN (t0.c0 IN ()) END) OVER () FROM vt1 NOT INDEXED, v0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT (CAST(t0.c0 AS BLOB) IN ()) FROM t0, vt1 WHERE ((- ((('e9ꖱ%V\rh&')>(0.0535936795565205))))) ORDER BY 0.32569142124537453  NULLS LAST; -- 0ms;
SELECT DISTINCT ((('{?}{'))=(((vt1.c0 IN (vt1.c0))))), COUNT(*), LAST_VALUE(t0.c0) OVER (), COUNT(((t0.c0)GLOB(x''))) FILTER(WHERE (((t0.c0, vt1.c0, vt1.c0, v0.c0, t0.c0)) BETWEEN ((((t0.c0) IS FALSE), (v0.c0 IN ()), CASE WHEN vt1.c0 THEN v0.c0 END, t0.c0 COLLATE NOCASE, vt1.c0)) AND ((v0.c0, LIKELIHOOD('995133661', 0.5737226912391237), CAST(vt1.c0 AS TEXT), (((t0.c0))=((v0.c0))), NULL COLLATE NOCASE)))) OVER (), v0.c0 FROM v0, t0, vt1 WHERE ((NOT (x'' COLLATE NOCASE))) ORDER BY (- (((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS LAST; -- 1ms;
SELECT ((((((t0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN (NULL) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))))), COUNT(HEX(v0.c0)) OVER (), CASE ((v0.c0)GLOB(vt1.c0))  WHEN (vt1.c0 IN (v0.c0)) THEN ((v0.c0)||(v0.c0)) END FROM v0, t0, vt1 WHERE (LIKELIHOOD(((x'e3fd') NOT NULL), 0.5252223652516443)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM v0; -- 0ms;
SELECT ALL (('h*')*(((vt1.c0)!=(x'')))) FROM t0, vt1, v0 GROUP BY CASE WHEN t0.c0 COLLATE RTRIM THEN (NOT (t0.c0)) END, CASE (t0.c0 IN ())  WHEN t0.c0 THEN v0.c0 ELSE vt1.c0 END, vt1.c0 HAVING ((vt1.c0) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))AND(t0.c0))) AND (-1641551773 COLLATE RTRIM)); -- 0ms;
SELECT ROW_NUMBER() OVER ( GROUPS  CURRENT ROW) FROM t0, vt1 WHERE (CASE ((NULL)IS(''))  WHEN JULIANDAY(x'be2b', NULL, '1J\n#⊌eJ)') THEN ((NULL) BETWEEN ('312352295') AND (-718691852)) WHEN (-6.51477279E8 IN ()) THEN (((('-700067156')OR('-699936967')))AND(0.5628553569618804)) WHEN TIME(x'1c37', NULL, 0.39162993781399047, '', '-1605529866') THEN NULLIF('1485647859', NULL) ELSE (~ ('1252751866')) END); -- 0ms;
SELECT DISTINCT '-451569157', ((CASE WHEN v0.c0 THEN -1194956085 ELSE v0.c0 END) NOT NULL), t0.c0 FROM v0, t0, vt1 WHERE (((((((x'b72d')IS NOT(NULL)))OR(CAST('wq' AS INTEGER))))OR((((('-451569157')AND(0Xffffffffffffffff)))AND(NULL))))); -- 0ms;
SELECT ALL ((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND(t0.c0)) COLLATE BINARY FROM vt1, t0;SELECT -1236666692 FROM t0, v0, vt1; -- 0ms;
SELECT DISTINCT NULL FROM v0, t0, vt1 WHERE (((((2.92512733E8) NOTNULL)) BETWEEN (x'1bfa') AND ((('[)') NOT BETWEEN (x'') AND (-1500021054))))) LIMIT -521353948; -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))*(CASE WHEN v0.c0 THEN t0.c0 END)) FROM t0, v0, vt1; -- 0ms;
SELECT DISTINCT (+ ((((vt1.c0, vt1.c0, vt1.c0))=((v0.c0, vt1.c0, vt1.c0))))), ((+ (v0.c0)) IN ()), (((vt1.c0 IN ())) BETWEEN (((((t0.c0)OR(vt1.c0)))AND(t0.c0))) AND (MAX(vt1.c0))) FROM vt1, v0, t0; -- 0ms;
SELECT ((((((v0.c0) IS FALSE))OR('m]c?')))OR(CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM v0;SELECT ALL (((CAST(3.95884496E8 AS TEXT)))>(((v0.c0 IN ())))) FROM t0 WHERE (UNLIKELY(DISTINCT CAST('+v' AS NUMERIC))); -- 0ms;
SELECT CAST(v0.c0 AS BLOB), ((v0.c0) ISNULL) COLLATE RTRIM, ((((t0.c0) NOT BETWEEN (vt1.c0) AND (x'')))>=(((v0.c0) NOT NULL))) FROM v0 WHERE (NULL);SELECT ALL t0.c0 FROM vt1, t0, v0 GROUP BY CASE WHEN (('292512733') IS TRUE) THEN (v0.c0 IN ()) ELSE ((v0.c0)GLOB(v0.c0)) END, (((((1328861576, t0.c0, '1328861576')) NOT BETWEEN ((0.5704198589831431, t0.c0, vt1.c0)) AND ((t0.c0, v0.c0, t0.c0)))) BETWEEN (NULL) AND ('-1681091394')), ((vt1.c0) IS FALSE) COLLATE NOCASE, ((((((((0.6748551783683601)AND(vt1.c0)))OR((v0.c0 IN ()))))AND(((t0.c0)+(t0.c0)))))OR((t0.c0 IN (t0.c0)))), CAST(PRINTF(vt1.c0, vt1.c0, v0.c0) AS BLOB) ORDER BY ((UNICODE(t0.c0)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND ((+ (vt1.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST((v0.c0 IN ()) AS INTEGER) FROM v0, vt1 WHERE (LIKELIHOOD(((((NULL)AND(NULL)))AND(1371895128)), 0.048568435041568936)) GROUP BY t0.c0 HAVING (((t0.c0))<=((t0.c0))) COLLATE NOCASE;SELECT DISTINCT 0x5a4a612f FROM v0, t0 WHERE (DATETIME((((688177916, 'qN꾖	9', -712848478))<=(('', x'2f8ab097', 0.7000009301607022))), ((((x'')AND('')))AND('0.9681542646960973')), 0x14aa18c5 COLLATE NOCASE)); -- 0ms;
SELECT TOTAL(-1.529593233E9) FROM v0 WHERE (0.5308585495961722); -- 0ms;
SELECT DISTINCT ((((((v0.c0)OR(vt1.c0)))OR(v0.c0))) NOTNULL) FROM vt1, v0, t0 GROUP BY (((v0.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((0.4222195715210919))); -- 1ms;
SELECT ALL ((((((((((v0.c0)OR('1421657771')))OR(x'')))AND(v0.c0)))AND(v0.c0)))IS(CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)) FROM v0 WHERE ((((((('-438269237')IS('-1932922218')))OR(NULL)))AND((0.48046333920323847 IN ()))));SELECT (vt1.c0 IN (NULL)) COLLATE RTRIM FROM t0 GROUP BY CASE CAST(v0.c0 AS TEXT)  WHEN CASE t0.c0  WHEN vt1.c0 THEN '1054041345' WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END THEN t0.c0 COLLATE BINARY END;SELECT DISTINCT ROW_NUMBER() OVER () FROM v0, t0; -- 0ms;
SELECT DISTINCT MIN((- (t0.c0))) FROM t0, vt1, v0 GROUP BY (((((vt1.c0) IS TRUE)))>((t0.c0))); -- 0ms;
SELECT ((((t0.c0 IN ()), ((vt1.c0)>>(vt1.c0)), CAST(v0.c0 AS TEXT)))<((MAX(v0.c0), (v0.c0 IN (v0.c0)), (((v0.c0))>=((vt1.c0)))))), (((v0.c0))<((vt1.c0))) COLLATE BINARY, '' FROM t0, vt1, v0 WHERE (((- (x'0ff5')) IN (((0Xffffffffe6a6a1cb) BETWEEN (0Xffffffffae211401) AND (x'ab17'))))); -- 0ms;
SELECT ((v0.c0 COLLATE NOCASE)<<(t0.c0)), ((COUNT(*)) IS FALSE), ((v0.c0 COLLATE NOCASE) BETWEEN (v0.c0 COLLATE RTRIM) AND (HEX(DISTINCT v0.c0))) FROM vt1 LIMIT -728381403;SELECT CASE WHEN t0.c0 COLLATE RTRIM THEN ((0.2704964961715053) ISNULL) WHEN ((t0.c0) IS TRUE) THEN (0.5787645751130244 IN ()) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END THEN COUNT(*) END FROM v0 WHERE ((((('1195587326') NOT NULL))IS((((((((('425585529')AND(x'')))AND('(0')))OR(-1171992231)))OR(x'')))));SELECT DISTINCT ABS(((((vt1.c0)AND(vt1.c0)))AND(t0.c0))) FROM t0 LIMIT -753054805;SELECT DISTINCT CAST((- (vt1.c0)) AS TEXT), CAST(v0.c0 COLLATE NOCASE AS TEXT), ((((((x'd469')IS NOT(t0.c0)))AND('vg')))OR(((vt1.c0)||(t0.c0)))) FROM v0, vt1;SELECT vt1.c0 FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT LAST_VALUE(json_object(((v0.c0)&(vt1.c0)), ((((((((vt1.c0)AND(v0.c0)))AND(0.258898651850461)))OR('7a')))AND(v0.c0)), TRIM(vt1.c0, v0.c0), CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END)) OVER ( ORDER BY CASE WHEN ((t0.c0)>(vt1.c0)) THEN ((v0.c0)>=('-2043279846')) END ASC  NULLS LAST) FROM v0, vt1 WHERE (((NULL)GLOB('1851051614')) COLLATE NOCASE);SELECT ALL CASE vt1.c0  WHEN (v0.c0 IN (0.607573279525312)) THEN ((t0.c0)||(t0.c0)) WHEN ((v0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) THEN (~ (v0.c0)) WHEN 1481084592 THEN ((((t0.c0)OR(vt1.c0)))AND(vt1.c0)) END FROM vt1, v0, t0 WHERE ((((NOT (x''))) BETWEEN (CAST(x'' AS NUMERIC)) AND ((NULL IN ())))) ORDER BY (CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END IN ()) ASC; -- 0ms;
SELECT DISTINCT (((((((v0.c0))<(('-1355515826'))))OR(CASE WHEN NULL THEN v0.c0 END)))OR(vt1.c0)) FROM v0, vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (CASE NULL  WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END) AND (CAST(v0.c0 AS REAL))), (((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) IN ((((vt1.c0))>((v0.c0)))))  NULLS LAST LIMIT 1287806865;SELECT COALESCE(t0.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM) FROM v0, t0, vt1 WHERE (((CAST(x'' AS INTEGER)) ISNULL)); -- 0ms;
SELECT ALL (CAST(v0.c0 AS TEXT) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0))>((vt1.c0)))) NOT NULL) FROM t0, vt1, v0; -- 0ms;
SELECT DISTINCT RANK() OVER ( PARTITION BY (- (((t0.c0)LIKE(t0.c0)))), ' t') FROM v0, vt1, t0 GROUP BY ((- (v0.c0)) IN ()), ((((((vt1.c0)IS NOT(v0.c0)))OR(CAST(vt1.c0 AS REAL))))AND(((NULL)LIKE(vt1.c0)))), HEX(((t0.c0) BETWEEN (t0.c0) AND ('-118048679'))); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c0 AS REAL))AND(((vt1.c0)GLOB(vt1.c0)))))AND((((v0.c0, x'', '-856514956', vt1.c0, t0.c0)) NOT BETWEEN ((-338661172, t0.c0, t0.c0, t0.c0, 2116108166)) AND ((v0.c0, t0.c0, vt1.c0, vt1.c0, t0.c0))))) FROM t0, vt1 WHERE ((CASE WHEN '-1657089611' THEN x'' ELSE x'' END IN (('-2053999609' IN ()))));SELECT DISTINCT (((NOT (v0.c0))) NOTNULL) FROM t0, vt1, v0 WHERE ((((0.47741847009268423, NULL, 0.5983442239894675)) NOT BETWEEN (((((('1963310481')OR('-Infinity')))OR('1338710572')), (+ (x'8e33')), ((x'')&(0xffffffff97a806cb)))) AND ((((')nNMIxeo')*('563037575')), NULL, x'')))); -- 0ms;
SELECT ALL ((vt1.c0)+(ABS(t0.c0))) FROM t0 GROUP BY ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) IN (v0.c0)) HAVING CASE t0.c0  WHEN (((v0.c0))>((vt1.c0))) THEN vt1.c0 ELSE COUNT(NULL) END;SELECT DISTINCT LIKELY(vt1.c0) COLLATE NOCASE, ((v0.c0 COLLATE NOCASE)>>((t0.c0 IN ()))), LOWER((vt1.c0 IN ())) FROM t0, vt1, v0; -- 1ms;
SELECT DISTINCT (((((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, v0.c0))))/((t0.c0 IN ()))) FROM vt1, v0, t0 GROUP BY (((v0.c0, t0.c0, t0.c0))>((vt1.c0, v0.c0, v0.c0))) COLLATE NOCASE HAVING CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) AS BLOB); -- 0ms;
SELECT ALL (+ (CAST(vt1.c0 AS REAL))) FROM vt1, v0 WHERE ((~ ((NULL IN ())))) LIMIT -675741102; -- 0ms;
SELECT DISTINCT (((CAST(vt1.c0 AS INTEGER)))>=((((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))))), x'', (v0.c0 IN (t0.c0)) COLLATE NOCASE FROM v0, vt1 NOT INDEXED WHERE (((CAST(0xffffffffaeba7df0 AS TEXT))IS NOT((((((((('Xd\n4z)')OR(0.47741847009268423)))OR(NULL)))AND('Qflq&')))AND(NULL)))));SELECT ALL TOTAL(CASE WHEN vt1.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 END) OVER () FROM vt1 WHERE (-1.938751515E9);SELECT SUM(((vt1.c0)+(t0.c0))) COLLATE BINARY FROM vt1 WHERE (((CAST(NULL AS TEXT))!=((0Xffffffffaf419e71 IN ()))));SELECT SUM((+ (v0.c0))) OVER () FROM t0, vt1, v0 WHERE (((NULL) IS TRUE)) ORDER BY CAST(CASE WHEN x'' THEN t0.c0 WHEN vt1.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 END AS REAL); -- 0ms;
SELECT DISTINCT NULLIF(CASE WHEN vt1.c0 THEN NULL END, NULL), CAST(t0.c0 AS NUMERIC), x'' FROM v0, vt1 WHERE ((((TRIM(DISTINCT '-605806205', 0x198d4859), (('-1457364712') NOTNULL), (-1.054388613E9 IN (0.3838411653432988, x'336c163b'))))<(((0Xffffffff85fedae5 IN ()), (((('ꅥ]')AND(-910557687)))AND(0.950851672726108)), (('䙬Vf6') BETWEEN (NULL) AND (x'433f'))))));SELECT DISTINCT CAST((- (vt1.c0)) AS TEXT) FROM v0, vt1 WHERE (PRINTF(x'e826', NULL, x'bd91') COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT ABS((t0.c0 IN ())) FROM vt1, v0; -- 7ms;
SELECT DISTINCT CAST((~ (t0.c0)) AS REAL), LAG(LTRIM(x'' COLLATE BINARY), ((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(t0.c0)))AND(v0.c0))) BETWEEN ((NOT (t0.c0))) AND (((('-1938751515'))==((t0.c0))))), (+ ((((v0.c0, t0.c0, v0.c0)) BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((v0.c0, v0.c0, t0.c0)))))) OVER (), (((NOT (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))) FROM t0, v0;SELECT ((((~ (t0.c0))))=((((((v0.c0)AND(vt1.c0)))AND(t0.c0))))) FROM t0, v0;SELECT ALL CASE NULL  WHEN ((vt1.c0) IS FALSE) THEN ((v0.c0) NOT NULL) ELSE (~ (v0.c0)) END, CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))) AS REAL), vt1.c0 FROM v0, t0, vt1 WHERE ((((((('940839776') ISNULL))OR(NULL)))AND(((((((((NULL)AND(x'')))AND('428689497')))OR('-1049811546')))AND('0.6352842437741072'))))) GROUP BY (((((t0.c0, NULL, v0.c0))<((t0.c0, -1.354654095E9, vt1.c0)))) NOTNULL), ((HEX(v0.c0))||(((v0.c0) NOTNULL))), CAST(((vt1.c0)AND(t0.c0)) AS NUMERIC); -- 0ms;
SELECT ((((((((((v0.c0)OR(vt1.c0)))OR(t0.c0)))OR(v0.c0)))AND(vt1.c0))) NOTNULL), DATETIME((((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((0.3334028155865447, t0.c0, t0.c0))), (((v0.c0, vt1.c0, v0.c0))<>((t0.c0, x'', v0.c0))), ((((vt1.c0)AND(t0.c0)))AND(x'')), v0.c0 COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))), CAST((t0.c0 IN ()) AS NUMERIC) FROM v0, t0;SELECT DISTINCT COUNT(((v0.c0)==(v0.c0))) FROM t0, v0 WHERE (((((x'') NOTNULL))-(UPPER('7hb')))) ORDER BY ((((((((CAST(t0.c0 AS BLOB))AND(CAST(v0.c0 AS REAL))))OR(vt1.c0 COLLATE RTRIM)))OR(v0.c0)))OR(((t0.c0) IS FALSE))) ASC;SELECT DISTINCT (((vt1.c0 IN ())) NOT BETWEEN ((- (t0.c0))) AND (CAST(vt1.c0 AS BLOB))) FROM vt1 GROUP BY ((CAST(vt1.c0 AS INTEGER)) NOT NULL) HAVING LIKE(((vt1.c0)>>(vt1.c0)), (((('EdsXd}Y>')AND(v0.c0)))OR(t0.c0)), 'N');SELECT t0.c0 COLLATE BINARY, CAST(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS BLOB), SUM(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) OVER () FROM v0 NATURAL JOIN vt1;SELECT DISTINCT CAST(v0.c0 AS BLOB) COLLATE RTRIM FROM vt1, t0;SELECT DISTINCT (~ (((v0.c0) NOTNULL))) FROM v0 LIMIT -1171992231 OFFSET 516986179; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((vt1.c0)AND(v0.c0)))OR(v0.c0)))AND(vt1.c0)))AND(t0.c0)) THEN 0.004676951912488292 END FROM t0 WHERE (CASE WHEN ((x'')*(0Xffffffffd6bb2940)) THEN -1977957898 ELSE ((0.6750126878585474)IS('1909761021')) END);SELECT ALL v0.c0 FROM v0, vt1; -- 0ms;
SELECT DISTINCT '' FROM v0 GROUP BY ((NOT (t0.c0)) IN ()), ((((v0.c0)OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))), CASE WHEN ((vt1.c0)=(v0.c0)) THEN '-868332463' END LIMIT 1053292707;SELECT DISTINCT CAST(((t0.c0)<(v0.c0)) AS INTEGER) FROM t0;SELECT DISTINCT t0.c0 FROM vt1, v0 WHERE ((+ (CASE WHEN '805314940' THEN 0X0 ELSE '''-' END))) GROUP BY (((vt1.c0 IN ())) ISNULL);SELECT ALL ((x'0389') BETWEEN (NULL) AND ((((vt1.c0, vt1.c0, vt1.c0))==((t0.c0, v0.c0, vt1.c0))))), '706238383', CASE WHEN CASE vt1.c0  WHEN t0.c0 THEN NULL END THEN ((v0.c0) IS FALSE) END, ((((ABS(v0.c0))AND(vt1.c0)))AND(((x'49cd')+(v0.c0)))), ((((vt1.c0)&(vt1.c0)))OR(CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END)) FROM t0, v0, vt1 WHERE ((- (0Xffffffffb71ec20c))); -- 0ms;
SELECT DISTINCT ((((v0.c0) IS FALSE))&(t0.c0)) FROM v0 WHERE (CAST((NOT ('1328861576')) AS INTEGER));SELECT DISTINCT (- (NULL COLLATE NOCASE)), ((t0.c0)=(((((((((t0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))), ((LOWER(DISTINCT NULL))+(SQLITE_SOURCE_ID())) FROM t0, vt1 WHERE (((('')) BETWEEN ((x'')) AND ((CAST(x'' AS NUMERIC))))) GROUP BY (- (t0.c0)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT FIRST_VALUE(t0.c0) OVER () FROM vt1, t0 WHERE (NULL); -- 0ms;
SELECT ALL (('bI') IS TRUE), ((((0.12297501236127673)OR(((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))OR((- (vt1.c0)))), (((((t0.c0 IN (t0.c0, 0.3588272765805799)))AND((vt1.c0 IN (v0.c0)))))OR(CAST('&}' AS BLOB))), ((((t0.c0 COLLATE NOCASE)AND(((t0.c0)|(NULL)))))AND((((vt1.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))))), CASE CAST('9p' AS BLOB)  WHEN NULL THEN SUM(vt1.c0) ELSE (vt1.c0 IN ()) END FROM v0, vt1, t0 GROUP BY CAST(((t0.c0)LIKE(x'')) AS INTEGER), ((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 END)AND(((((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))), ((x'') IS TRUE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN t0.c0 END) NOTNULL), (((vt1.c0 IN ()))>=(COUNT(v0.c0))), (CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END IN ()) FROM v0, vt1, t0 WHERE (QUOTE((('L_೷A뀒%A^')|(NULL)))); -- 0ms;
SELECT (((t0.c0) IS TRUE) IN ()) FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)/(vt1.c0)))+(MAX(t0.c0))), CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS INTEGER), (~ (vt1.c0)) COLLATE BINARY FROM v0 WHERE (((CASE NULL  WHEN '/hpS\k_' THEN '1205055740' ELSE x'2329' END)OR(0.6433579275788135 COLLATE RTRIM)));SELECT ALL ((t0.c0)<(vt1.c0)) COLLATE BINARY, CASE (((t0.c0))!=((t0.c0)))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(v0.c0)) THEN ' 2p#9' WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN '-1350090077' WHEN ((t0.c0)<<(vt1.c0)) THEN UPPER(DISTINCT t0.c0) ELSE CASE WHEN vt1.c0 THEN t0.c0 END END, ((CAST(vt1.c0 AS NUMERIC))<=((((v0.c0, '%gi.w', v0.c0))=((vt1.c0, vt1.c0, t0.c0))))), NULL, (0xffffffffdddcca3d IN ()) FROM vt1 WHERE (((CASE WHEN x'' THEN 0.48431199265168356 WHEN '482315266' THEN 0x6c20a57b WHEN x'' THEN '-1547040241' ELSE '0.23561123624922675' END) NOT BETWEEN (((('1876837084', NULL, 0.33836389892369223)) NOT BETWEEN ((0.0535936795565205, 0.001459722905276628, '-854023800')) AND ((NULL, '', '>i값^<.')))) AND ((('-596498774') NOT BETWEEN (x'') AND (0.6830369883076234)))));SELECT ALL CASE WHEN MAX(v0.c0) THEN UNLIKELY(DISTINCT -540177955) END FROM t0, vt1;SELECT (((((t0.c0 IN ()))OR((vt1.c0 IN (t0.c0, vt1.c0)))))OR(x'141b')), (((vt1.c0, v0.c0, v0.c0, v0.c0, vt1.c0)) BETWEEN ((((-1.485738616E9)<(v0.c0)), CAST(v0.c0 AS NUMERIC), LIKE(v0.c0, vt1.c0, '8'), LOWER(t0.c0), ((((vt1.c0)OR(v0.c0)))AND(t0.c0)))) AND ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((t0.c0) ISNULL), ((((v0.c0)OR(t0.c0)))OR(v0.c0)), ((t0.c0)-(vt1.c0))))), ((((vt1.c0)||(vt1.c0))) NOT BETWEEN ((- (t0.c0))) AND (((0.25342322787240057)+(v0.c0)))) FROM vt1, t0, v0; -- 0ms;
SELECT ALL v0.c0 FROM t0, vt1, v0 WHERE ((- (585136190 COLLATE BINARY))) ORDER BY (((NOT (vt1.c0)))==((~ (vt1.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT FIRST_VALUE(LENGTH(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) OVER ( ORDER BY (((vt1.c0)|(vt1.c0)) IN ()) DESC  NULLS LAST), CASE HEX(DISTINCT vt1.c0)  WHEN json_array_length(x'') THEN (((('')OR(vt1.c0)))AND(t0.c0)) ELSE ((NULL)&(v0.c0)) END, AVG((vt1.c0 IN (v0.c0))) OVER () FROM t0;SELECT DISTINCT (((((t0.c0)LIKE(t0.c0))))!=((vt1.c0))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT NULL), ((MAX(t0.c0)) IS FALSE) FROM vt1 WHERE ('44441773' COLLATE RTRIM COLLATE RTRIM);SELECT DISTINCT SUM(CAST(t0.c0 AS NUMERIC)), CASE WHEN (- (t0.c0)) THEN (((vt1.c0, v0.c0, t0.c0))<=((v0.c0, v0.c0, v0.c0))) END, COUNT(*) OVER ( ROWS BETWEEN  CURRENT ROW AND ((((vt1.c0)AND(t0.c0))) ISNULL) PRECEDING EXCLUDE TIES) FROM vt1;SELECT DISTINCT (- (0X30c817d5)) FROM v0, vt1, t0; -- 0ms;
SELECT DISTINCT (((v0.c0 COLLATE BINARY, ((vt1.c0) IS TRUE), v0.c0 COLLATE RTRIM))==((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END, ((((-428179887)OR(t0.c0)))OR(v0.c0)), MAX(t0.c0)))) FROM v0, t0 WHERE ((((- (0.16935082131223744))) IS TRUE));SELECT DISTINCT (((v0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((vt1.c0)>(v0.c0)), ((t0.c0)OR(v0.c0)), t0.c0)) AND ((((v0.c0)>=(0.8066626260814614)), (t0.c0 IN (t0.c0, vt1.c0)), v0.c0 COLLATE BINARY))) FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(vt1.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt1.c0)) AND (((0.33836389892369223) IS FALSE))), vt1.c0 COLLATE RTRIM COLLATE NOCASE, ((((v0.c0)) BETWEEN ((t0.c0)) AND ((v0.c0))) IN (((t0.c0)<(t0.c0)), ((vt1.c0) IS TRUE))) FROM v0 WHERE (97773465);SELECT DISTINCT ((((((t0.c0) NOT NULL))AND(((NULL)=(v0.c0)))))OR(((0.18616305126880694) NOT BETWEEN (vt1.c0) AND (v0.c0)))), SUM(v0.c0), ((GROUP_CONCAT(vt1.c0))AND(v0.c0 COLLATE RTRIM)) FROM v0 WHERE (((((('kz-[')) NOT BETWEEN ((NULL)) AND ((x''))))|((('') NOTNULL))));SELECT ALL FIRST_VALUE(x'') OVER () FROM vt1 WHERE (CASE (('-1099058046')>(' )%o'))  WHEN (('') NOT BETWEEN (NULL) AND (NULL)) THEN (-1681410109 IN (0.25871548956719104)) END) GROUP BY CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ (v0.c0)) ELSE t0.c0 END HAVING SUM(0.6830369883076234 COLLATE BINARY);SELECT CAST(AVG(v0.c0) AS NUMERIC) FROM t0, vt1 WHERE (CASE (~ ('-803935148'))  WHEN (('-103508523')!=(0x3d360b5a)) THEN '1' END);SELECT DISTINCT MIN(((v0.c0)GLOB(vt1.c0))) FROM v0, t0;SELECT ((((((t0.c0)OR(t0.c0)))OR(NULL))) NOTNULL) FROM t0, v0 WHERE (x'') ORDER BY x'01372262' ASC  NULLS LAST LIMIT -878440467; -- 0ms;
SELECT vt1.c0 FROM t0, vt1 WHERE ((((('')>=('/2X\lJ|냩\')))||((((((((('-27944409')OR(x'')))AND('-1214675016')))AND(0.30680394385425336)))AND(0X2041faf4))))); -- 1ms;
SELECT DISTINCT (((v0.c0, vt1.c0, -568481414)) BETWEEN ((((v0.c0)<(x'b7a0')), ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)), (+ (vt1.c0)))) AND ((((((t0.c0)OR(v0.c0)))AND(v0.c0)), ((((((((vt1.c0)OR(v0.c0)))OR(t0.c0)))OR(t0.c0)))AND(v0.c0)), (('/2X\lJ|냩\') BETWEEN (v0.c0) AND (v0.c0))))), COUNT(MAX(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))), ((((t0.c0)AND(t0.c0)))OR(v0.c0)) COLLATE BINARY FROM t0, v0 WHERE (((((('')) BETWEEN (('755823036')) AND ((0.15992181767808045))))IS NOT(-9223372036854775808 COLLATE BINARY)));SELECT DISTINCT '' FROM t0, vt1, v0 WHERE (NULL) ORDER BY vt1.c0 DESC  NULLS LAST, (((t0.c0))<=((vt1.c0))) COLLATE RTRIM; -- 0ms;
SELECT ALL ((((NULL)OR(TYPEOF(DISTINCT v0.c0))))AND(((((t0.c0)OR(vt1.c0)))AND(vt1.c0)))) FROM t0, vt1 GROUP BY x'3e32', CAST(TRIM(DISTINCT v0.c0, vt1.c0) AS INTEGER), (((v0.c0 IN ()))LIKE(UPPER(t0.c0))) HAVING (v0.c0 IN ());SELECT DISTINCT ((v0.c0) IS TRUE) COLLATE NOCASE FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE)) NOT BETWEEN (((((t0.c0)AND('-451569157')))AND(vt1.c0))) AND (vt1.c0)), ((((v0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, t0.c0, v0.c0))) IN (HEX(v0.c0))), ((CAST(v0.c0 AS BLOB))<=(v0.c0 COLLATE BINARY)) FROM v0, vt1 ORDER BY MIN(((vt1.c0)>=(vt1.c0)), CAST(t0.c0 AS INTEGER), ((t0.c0) ISNULL), ((((((((x'')OR(v0.c0)))OR(t0.c0)))OR(x'')))OR(1753182877)))  NULLS LAST, t0.c0 DESC  NULLS LAST, ((v0.c0 COLLATE NOCASE)<=((((t0.c0))<=((v0.c0))))) ASC;SELECT (((x''))==((CASE WHEN t0.c0 THEN t0.c0 END))) FROM t0, vt1, v0; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS TEXT))GLOB(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))), TOTAL(UNLIKELY(DISTINCT 0.908884629324805)) OVER (), (((((v0.c0, vt1.c0, v0.c0))<>((t0.c0, vt1.c0, t0.c0))))!=(CAST(v0.c0 AS BLOB))) FROM v0 WHERE (((('೷VB}Zr')) BETWEEN ((((NULL)-(0.6749963536686014)))) AND (((((('p9N')AND('zPn.x!scx')))OR('-1115884300')))))) ORDER BY ((((vt1.c0) IS FALSE))>>(CASE WHEN v0.c0 THEN v0.c0 END)) ASC;SELECT 0.165842343554357 FROM vt1 WHERE ((NOT (0X420d4cc2)) COLLATE BINARY); -- 0ms;
SELECT (((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) IN ()) FROM t0, vt1 WHERE ((- (((0Xffffffffb7653342)%(NULL))))); -- 0ms;
SELECT DISTINCT CAST(((v0.c0)<<(t0.c0)) AS REAL), ((v0.c0)+(((((v0.c0)OR(v0.c0)))OR(v0.c0)))), (+ (CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1, t0, v0 WHERE ((((+ (0.7233516658075232)))>>(CASE '0.5628553569618804'  WHEN '' THEN -1605008045 END))); -- 0ms;
SELECT DISTINCT NULL FROM v0 GROUP BY CASE ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))  WHEN CASE t0.c0  WHEN vt1.c0 THEN v0.c0 END THEN ((vt1.c0) BETWEEN (t0.c0) AND ('%ex>{j6ㅿ')) END HAVING CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC);SELECT ((('775183326')) BETWEEN ((((vt1.c0)<=(vt1.c0)))) AND ((TOTAL(t0.c0)))) FROM vt1, v0;SELECT ALL (v0.c0 IN ()) FROM t0, vt1 WHERE (((((NULL)|(x'')))>>((~ (')q	'))))); -- 0ms;
SELECT ((((vt1.c0) ISNULL))<<(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0, v0 WHERE (LIKELIHOOD(DISTINCT (((NULL)) NOT BETWEEN ((0.37816772245767016)) AND ((NULL))), 0.6717313748831198));SELECT DISTINCT GROUP_CONCAT(CAST(v0.c0 AS INTEGER)) OVER (), (NULL COLLATE RTRIM IN (((v0.c0)%(t0.c0)), ((((t0.c0)OR(v0.c0)))AND(t0.c0)))), UPPER((((t0.c0, v0.c0, '7|ZC>t+', vt1.c0, t0.c0))>=((vt1.c0, v0.c0, vt1.c0, v0.c0, v0.c0)))) FROM t0;SELECT DISTINCT SUM(CAST(v0.c0 AS REAL)) COLLATE BINARY FROM t0, v0, vt1 WHERE (((QUOTE('1074224223'))+(NULL))); -- 0ms;
SELECT ((json_remove(t0.c0, t0.c0, t0.c0, v0.c0))<=(((t0.c0)<=(v0.c0)))), x'', COALESCE(((vt1.c0) NOT BETWEEN (NULL) AND (v0.c0)), ((vt1.c0)IS NOT(vt1.c0)), CASE v0.c0  WHEN t0.c0 THEN v0.c0 END, (~ (vt1.c0))) FROM v0, vt1;SELECT DISTINCT ((0.6344819639597263)>(v0.c0)), AVG(((v0.c0) NOT NULL)), (((((t0.c0)OR(v0.c0)))OR(t0.c0)) IN (x'', (- (v0.c0)))) FROM v0, t0, vt1; -- 0ms;
SELECT DISTINCT (+ (((((vt1.c0)OR(v0.c0)))AND(v0.c0)))) FROM v0, vt1, t0 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT (((t0.c0, t0.c0, v0.c0)) NOT BETWEEN ((((t0.c0)LIKE(v0.c0)), ((t0.c0) IS FALSE), CAST(v0.c0 AS REAL))) AND (((v0.c0 IN (t0.c0)), CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END, CASE t0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END))) FROM v0, t0 ORDER BY v0.c0 DESC  NULLS FIRST, (v0.c0 COLLATE RTRIM IN ()) ASC  NULLS LAST, (((((('0.6352842437741072'))>=((NULL)))))==((((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(v0.c0)))OR(t0.c0)))))  NULLS LAST;SELECT DISTINCT LAG(((x'')<=(((vt1.c0)<(-1.049811546E9)))), CAST((v0.c0 IN ('-1210162019')) AS REAL), (((vt1.c0, vt1.c0, v0.c0)) BETWEEN (((v0.c0 IN ()), ((((v0.c0)AND(vt1.c0)))OR(v0.c0)), LIKELY(vt1.c0))) AND ((CAST(vt1.c0 AS TEXT), (vt1.c0 IN (vt1.c0)), vt1.c0)))) OVER (), (((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))) BETWEEN (((((v0.c0)AND(vt1.c0)))AND(vt1.c0))) AND ('-1938751515')), (~ (((v0.c0) IS TRUE))) FROM vt1, v0;SELECT vt1.c0 FROM vt1, t0, v0 WHERE (SUBSTR(((NULL)/(0.13444775134748987)), (('-868332463') BETWEEN ('D,8') AND ('kH#KHWsb')))); -- 1ms;
SELECT ALL GROUP_CONCAT((t0.c0 IN ())), ((CAST(v0.c0 AS TEXT))/((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))), ((CAST(t0.c0 AS TEXT)) IS FALSE) FROM v0, vt1, t0 GROUP BY (((t0.c0 IN ()))!=(((t0.c0)&(v0.c0)))), ((t0.c0 IN ()) IN (-1.338530379E9)), ((x'')*('805314940')), CASE WHEN 0xffffffffb6cad169 COLLATE RTRIM THEN (- (v0.c0)) END, (CASE vt1.c0  WHEN v0.c0 THEN t0.c0 ELSE vt1.c0 END IN (CASE WHEN '?O''\rR2' THEN v0.c0 WHEN t0.c0 THEN '0.7153091718768124' WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END, 0.23723177433490028)); -- 0ms;
SELECT ((vt1.c0) BETWEEN (0Xffffffffba9f2452) AND ((x'' IN ()))), GROUP_CONCAT(v0.c0 COLLATE BINARY) OVER ( RANGE BETWEEN ((((CASE vt1.c0  WHEN t0.c0 THEN 0.08548232950262658 END)AND(((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))))AND(CAST(t0.c0 AS TEXT))) PRECEDING AND CAST(t0.c0 COLLATE RTRIM AS NUMERIC) FOLLOWING EXCLUDE CURRENT ROW), vt1.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE FROM t0, v0 WHERE (highlight((NOT (0.8269448353400027)), 0.32348295433696295 COLLATE BINARY, (('2123995246') BETWEEN ('0.11492902649917902') AND (1.054041345E9)), ('?D6M+G' IN (x''))));SELECT ALL (((((((((NOT (NULL)))AND(CAST(x'' AS REAL))))OR((((vt1.c0))=((v0.c0))))))AND(((((t0.c0)OR(x'c4c2')))AND(t0.c0)))))OR(((v0.c0)|(vt1.c0)))) FROM t0 NOT INDEXED WHERE (((((NULL) BETWEEN (NULL) AND (NULL))) BETWEEN (QUOTE('-181528068')) AND (((((NULL)AND('200206331')))AND(0.6380692981144218))))) LIMIT -83625450;SELECT DISTINCT 0.8096082448149121 FROM t0, vt1 WHERE (((('0.25342322787240057')) BETWEEN (((x'' IN ()))) AND (((NULL IN ()))))); -- 0ms;
SELECT ((vt1.c0)OR((v0.c0 IN ()))), (((((((((((v0.c0)AND(t0.c0)))OR(t0.c0)))AND(v0.c0)))AND(t0.c0)), TOTAL(1.421657771E9), CAST(v0.c0 AS BLOB)))>((COUNT(*), NULL, ((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))AND(-1.163975598E9)))OR(v0.c0))))), UNLIKELY(((t0.c0)>(vt1.c0))) FROM v0, vt1;SELECT DISTINCT CASE WHEN v0.c0 THEN ((vt1.c0)/(-1.049811546E9)) ELSE t0.c0 COLLATE RTRIM END FROM t0, v0, vt1 WHERE ((~ ((('-941677255')>(0xfffffffff1d70e51))))) GROUP BY CASE WHEN (((t0.c0, v0.c0, vt1.c0))<>((v0.c0, v0.c0, t0.c0))) THEN (((v0.c0, vt1.c0, t0.c0))<=((vt1.c0, t0.c0, t0.c0))) END ORDER BY ((CAST(vt1.c0 AS BLOB)) NOTNULL) DESC; -- 0ms;
SELECT UPPER(MIN(v0.c0)), ((((t0.c0)&(vt1.c0)))LIKE(UPPER(vt1.c0))), CAST(((((t0.c0)OR(vt1.c0)))AND(vt1.c0)) AS BLOB) FROM t0, vt1 WHERE (json_insert(((0.004676951912488292)<=('')), CASE x'69ee'  WHEN '681522845' THEN 0.8187729690840119 ELSE NULL END, x'9722', 'O?um\n/?', ((((((((NULL)OR(0Xffffffffccf29e74)))AND(0x5fc00798)))OR(x'')))OR(0.055336743176199854))));SELECT DISTINCT ((((t0.c0)<<(vt1.c0)))==(CAST(vt1.c0 AS REAL))) FROM vt1, v0;SELECT ALL ((v0.c0) NOT NULL) COLLATE NOCASE FROM vt1 WHERE (((NOT (NULL)) IN ()));SELECT ALL LEAD(((rtreenode(t0.c0, t0.c0))%(((((t0.c0)AND(t0.c0)))AND(t0.c0)))), ((t0.c0 COLLATE BINARY) NOT NULL), NULLIF(DISTINCT t0.c0, t0.c0) COLLATE BINARY) OVER () FROM t0; -- 0ms;
SELECT ALL v0.c0 COLLATE BINARY, vt1.c0, x'' FROM vt1;SELECT PERCENT_RANK() OVER (), ((((t0.c0) IS FALSE))>=((('-1354654095') NOT NULL))), (+ (v0.c0)) COLLATE NOCASE FROM v0, vt1 WHERE ((- (LIKELY(NULL))));SELECT DISTINCT t0.c0, (((t0.c0 IN (-1566694638)))<=(v0.c0)), ((((((((SUM(v0.c0))OR(CAST(NULL AS NUMERIC))))OR(t0.c0)))OR((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))))))OR((((t0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM v0 WHERE ((((0.7679896869216084 COLLATE NOCASE))>((((((NULL)OR(0.5942522652641725)))AND('-643812993'))))));SELECT t0.c0 FROM v0;SELECT DISTINCT ((((NULL)|(t0.c0))) NOTNULL) FROM v0, t0 WHERE (((((0X1457c9c3) NOT BETWEEN (NULL) AND (0.4659200068223127)))AND(((NULL) NOTNULL)))); -- 0ms;
SELECT ((SUM(vt1.c0))||(COALESCE(DISTINCT t0.c0, v0.c0))) FROM v0, vt1 WHERE (((((0Xfffffffff9d495d5) BETWEEN (NULL) AND (x'')))<<(((x'')>>('973349543')))));SELECT DISTINCT ((CAST('' AS NUMERIC)) NOTNULL) FROM vt1, t0 WHERE ((((((NULL) IS TRUE)))>=((CAST(NULL AS NUMERIC))))); -- 0ms;
SELECT ((((- (v0.c0))))<=((CASE WHEN vt1.c0 THEN vt1.c0 END))), (((v0.c0) NOTNULL) IN ()), LAG((((t0.c0)) BETWEEN ((((t0.c0)IS NOT(t0.c0)))) AND ((CAST(t0.c0 AS TEXT)))), ((t0.c0)%(t0.c0)) COLLATE NOCASE, (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN (t0.c0 COLLATE RTRIM))) OVER () FROM t0;SELECT DISTINCT DATE(CASE t0.c0  WHEN -484688300 THEN v0.c0 END, ((t0.c0) BETWEEN (vt1.c0) AND (v0.c0)), ((((t0.c0)AND(t0.c0)))AND(v0.c0))), (- (NULL)), ((t0.c0 COLLATE RTRIM)*(v0.c0)) FROM vt1, t0 WHERE (CASE (((('0.2704964961715053')OR('267528995')))AND('577376034'))  WHEN ((('fT~IIY⢓'))<((0.7383745238029353))) THEN ((1.850822548E9)%('-1457364712')) ELSE (('1092120468') NOT BETWEEN (NULL) AND (NULL)) END) GROUP BY ((((CAST(v0.c0 AS BLOB))AND(((((v0.c0)OR(t0.c0)))AND(v0.c0)))))OR((v0.c0 IN ()))) HAVING ((((v0.c0)|(v0.c0))) NOT BETWEEN (MAX(t0.c0)) AND (((t0.c0) NOTNULL))) ORDER BY CASE (((vt1.c0, t0.c0, v0.c0))>((t0.c0, vt1.c0, vt1.c0)))  WHEN ((t0.c0)||('817899417')) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST;SELECT t0.c0 FROM vt1, v0;SELECT ALL ((CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)IS(((v0.c0) BETWEEN (-1.641551773E9) AND (v0.c0)))) FROM vt1 WHERE ((((x'95fe' IN ()))=(CASE WHEN x'' THEN 0.5764845772576273 WHEN NULL THEN NULL WHEN -1.054388613E9 THEN '^	/' END)));SELECT ALL ((((v0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOTNULL) FROM t0, v0, vt1; -- 0ms;
SELECT ALL CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END COLLATE NOCASE FROM vt1, t0, v0 LIMIT -417791728; -- 0ms;
SELECT TRIM(DISTINCT (('863334799') IS FALSE), CAST(v0.c0 AS NUMERIC)) FROM t0, v0 WHERE (((NOT ('')) IN (CAST(-1799539815 AS REAL)))); -- 0ms;
SELECT ALL CASE ((t0.c0)OR(vt1.c0))  WHEN COUNT(*) THEN 0.0020371607204711095 END FROM v0, t0 WHERE (CASE ((x'') NOT NULL)  WHEN CAST(x'' AS NUMERIC) THEN UPPER(DISTINCT 802830948) END) GROUP BY v0.c0;SELECT ALL (((('412332050')>=(t0.c0)))=(((v0.c0) IS FALSE))), CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB), vt1.c0 FROM t0, vt1;SELECT DISTINCT AVG(((v0.c0)LIKE(t0.c0))) FROM t0 WHERE ((((((((((~ (0.7466756447554685)))AND(CAST(168954597 AS NUMERIC))))OR(((0.7269734468782003) IS TRUE))))OR((~ (0.6417746809550704)))))OR('-1244211756' COLLATE BINARY)));SELECT ((NULL) NOT NULL) FROM v0, vt1, t0; -- 0ms;
SELECT ALL SUM(TRIM(v0.c0)) OVER ( ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL), (('412332050')>>(t0.c0)), (vt1.c0 IN ()))) AND (((('0.8269448353400027')|(vt1.c0)), ABS(v0.c0), NULL))), CAST(((t0.c0)IS(vt1.c0)) AS TEXT) DESC  NULLS FIRST) FROM vt1, t0 GROUP BY CAST('-295838489' AS REAL) COLLATE BINARY HAVING ((((t0.c0) IS TRUE))<>('-1368676406')) LIMIT -1869274841 OFFSET -1850978575;SELECT vt1.c0 FROM v0, vt1 NOT INDEXED, t0 WHERE ((('^勧' IN (0Xffffffff923b4c01)) IN ())) GROUP BY (((COALESCE(v0.c0, v0.c0), ((t0.c0) IS FALSE), (((vt1.c0))<>((vt1.c0)))))<=(((+ (vt1.c0)), (((v0.c0, v0.c0, t0.c0))>((t0.c0, t0.c0, v0.c0))), 1962703818 COLLATE NOCASE))) HAVING ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))+(((t0.c0)/(vt1.c0)))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM ASC LIMIT -356754982; -- 0ms;
SELECT 0.6830369883076234 FROM v0, t0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN ((1759391234)GLOB(x'')) THEN ((t0.c0)>=(t0.c0)) END FROM t0 WHERE ((((((((((x'5eaa' IN ()))OR(IFNULL('4!', NULL))))AND(0x3000217c)))OR(((NULL) IS TRUE))))AND(CASE WHEN x'' THEN 1.514823983E9 ELSE '224064516' END))); -- 0ms;
SELECT ALL '-316096985', (((((~ (t0.c0)))AND((((vt1.c0, t0.c0, '-1319695356'))>((vt1.c0, t0.c0, t0.c0))))))AND(((((t0.c0)AND(vt1.c0)))AND('/2x\lj|냩\')))), t0.c0, (NULL IN ()), CAST(((((((((vt1.c0)OR(v0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(vt1.c0)) AS TEXT) FROM vt1, t0 INDEXED BY i62, v0; -- 0ms;
SELECT ALL (((((v0.c0)|(vt1.c0))))>((MIN(vt1.c0)))) FROM t0 WHERE ((((x''))>=((x'0ad1' COLLATE BINARY))));SELECT NULL FROM t0; -- 0ms;
SELECT (~ (((t0.c0) IS FALSE))) FROM t0, vt1 WHERE (0.6383282913181002); -- 0ms;
SELECT ALL CAST((vt1.c0 IN (NULL)) AS BLOB) FROM v0 WHERE ((((x'')) BETWEEN ((((6.63602197E8) NOT BETWEEN (NULL) AND (NULL)))) AND ((CAST('-1035003079' AS NUMERIC))))) GROUP BY ((((NOT ('<\1432T1934T970T150:-')), ((v0.c0) NOT NULL), ((v0.c0)<<(t0.c0))))<((CASE x''  WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END, SQLITE_COMPILEOPTION_USED(v0.c0), ((t0.c0) IS TRUE))));SELECT ALL ((CASE t0.c0  WHEN 0.15213887673235016 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN 0.07828587246139462 THEN v0.c0 END) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((- (t0.c0)))) FROM t0, v0, vt1 ORDER BY 0.6748551783683601  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((v0.c0)<(t0.c0)) AS INTEGER) FROM t0;SELECT DISTINCT CAST((((vt1.c0))!=((v0.c0))) AS REAL) FROM v0, vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((((((x'6558' IN ()))OR(0.09595130291533649)))OR((0.9085144876353669 IN ('J}')))))AND(((((x'ba74')OR(x'')))AND('')))))AND(CAST(0xffffffff871b2e3d AS BLOB))))AND(NULL)))AND((((x'9a47f098', '818419669', '-1969663795'))>=((0.38898526107241327, NULL, 0.8853005802385533)))))); -- 0ms;
SELECT ALL ((CAST(v0.c0 AS REAL)) IS TRUE) FROM t0, vt1 WHERE ((+ (((((x'')OR(x'')))OR('wcRm')))));SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((((v0.c0)OR(0.8080993661515463))))), ((v0.c0) IS FALSE) COLLATE BINARY, COUNT(*) OVER ( ORDER BY (NOT (((t0.c0)GLOB(v0.c0))))) FROM t0 WHERE (HEX(DISTINCT ((('0.04694842878842287')) NOT BETWEEN (('-856514956')) AND ((NULL)))));SELECT DISTINCT SUM(CASE WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END) FROM vt1, v0 FULL OUTER JOIN t0 ON (((((v0.c0))<=((v0.c0))))>(v0.c0 COLLATE NOCASE)) WHERE ((((- (NULL)))LIKE(((((((((((((0xffffffffa7716d88)OR(0.7103373349474766)))AND(x'')))AND(NULL)))AND(NULL)))AND(x'')))OR(-6.99660365E8))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))%(CASE WHEN t0.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN t0.c0 THEN NULL END)) FROM vt1, v0;SELECT DISTINCT CASE ((t0.c0)AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN ((vt1.c0)IS(v0.c0)) END, (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (v0.c0 IN ()) FROM t0, vt1 WHERE (json_object(((('y꿭b'))=(('-1869274841'))), (((x'')) BETWEEN (('0.8269448353400027')) AND ((x''))), (x'' IN ()), ((NULL) NOT BETWEEN (0.07340230620762289) AND (x'')))) LIMIT 1919068918;SELECT ALL t0.c0, GROUP_CONCAT(CAST(v0.c0 AS REAL)), (((v0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)) IN ()) FROM t0 WHERE (((0.11394108690274185)!=(CAST('9577436' AS NUMERIC))));SELECT DISTINCT CASE ((((v0.c0)AND(vt1.c0)))OR(v0.c0))  WHEN ((vt1.c0)-(t0.c0)) THEN ((1867514309) IS TRUE) ELSE (('*HD#')>=(t0.c0)) END, (((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((v0.c0 IN ())) AND ((vt1.c0 IN (v0.c0, v0.c0)))), '0.7269734468782003' FROM v0, t0;SELECT ALL CASE 'NFsT쮞Qx౎'  WHEN CAST(v0.c0 AS REAL) THEN t0.c0 ELSE ((t0.c0)||(t0.c0)) END FROM t0, v0; -- 1ms;
SELECT (((v0.c0 IN ()))AND(((vt1.c0)>=(v0.c0)))) FROM v0, t0; -- 0ms;
SELECT ALL UPPER(DISTINCT COUNT(v0.c0)) FROM v0, t0, vt1 WHERE ((((((((((('-1869274841')AND(2011165813)))AND(-2.034122363E9)))AND('1727754635')))OR(-8.88793318E8))) NOT NULL)); -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)>>(vt1.c0)))) FROM vt1, t0 WHERE (((((0.09085161965241029)OR(0.37737948375545005)))OR(0.896219787407415)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(*), 0.41129985873173747, ((MIN(v0.c0, 0.6750126878585474)) NOTNULL) FROM t0, v0 WHERE (CAST(((0.9417535299301226) NOT BETWEEN (NULL) AND ('')) AS REAL)); -- 0ms;
SELECT DISTINCT ((('', (t0.c0 IN (t0.c0)), (- (v0.c0)), CAST(v0.c0 AS REAL), ((vt1.c0)LIKE(vt1.c0))))<((x'', v0.c0 COLLATE BINARY, COUNT(v0.c0), CASE WHEN v0.c0 THEN v0.c0 END, vt1.c0 COLLATE BINARY))) FROM t0, vt1 WHERE ((((('')OR(x''))) IS FALSE));SELECT AVG(((v0.c0)>(v0.c0))) FROM vt1 WHERE (LIKELIHOOD(HEX(0xffffffffc4ae66fa), 0.3505632360189892)) LIMIT 430519439;SELECT DISTINCT ((((((((CASE WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN '-1805296024' END)OR('Y7C|s')))OR(CASE WHEN vt1.c0 THEN t0.c0 ELSE v0.c0 END)))OR(((vt1.c0)GLOB(t0.c0)))))AND(CHANGES())) FROM vt1, t0, v0 WHERE ((((x''))<((x''))) COLLATE BINARY); -- 1ms;
SELECT DISTINCT CASE (+ (vt1.c0))  WHEN vt1.c0 THEN UNLIKELY(t0.c0) WHEN ((t0.c0)|(vt1.c0)) THEN ((v0.c0) NOT NULL) WHEN vt1.c0 COLLATE BINARY THEN (('krx')<(vt1.c0)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) END FROM v0, t0, vt1 WHERE (((NULL) BETWEEN (CASE WHEN 'UQ' THEN 0.202375908498854 WHEN NULL THEN NULL WHEN 0X2a1857af THEN -1109481687 WHEN 0xffffffffc378117e THEN '2083396129' WHEN 9.33420154E8 THEN x'' ELSE 0X153e1725 END) AND (CASE WHEN '>⊌(]' THEN '굢N븧D' WHEN '-25037470' THEN '-2064835629' WHEN '3285605' THEN '' ELSE 'hG<6e' END))); -- 0ms;
SELECT DISTINCT CASE (+ (v0.c0))  WHEN vt1.c0 COLLATE RTRIM THEN GROUP_CONCAT(NULL) ELSE COALESCE(v0.c0, v0.c0) END, (((v0.c0, ((v0.c0) BETWEEN (-1.133531153E9) AND (v0.c0)), vt1.c0 COLLATE BINARY))=(((v0.c0 IN ()), ((vt1.c0)!=(t0.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))), ((t0.c0)&(t0.c0)) COLLATE RTRIM, (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))OR(v0.c0)))OR(t0.c0))))), ((((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((('縈75(n*H)') NOT BETWEEN (vt1.c0) AND (t0.c0)))) FROM t0 INDEXED BY i62, v0 WHERE (((CASE NULL  WHEN '' THEN -1362051609 ELSE 'pK4r\rJ޳lX' END)<<((((((((('-897500992')OR('Qa(\r[]R')))AND(1850822548)))OR('395884496')))AND(NULL)))));SELECT ALL ((((LAST_INSERT_ROWID())OR(((v0.c0)AND(t0.c0)))))OR(CAST(t0.c0 AS TEXT))), (((t0.c0)) BETWEEN ((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))) AND (((NOT (vt1.c0))))), PRINTF(x'33d4') FROM t0, vt1 WHERE (((((0.7597903795866081) IS FALSE)) ISNULL));SELECT ((MAX(vt1.c0)) NOT BETWEEN ((NOT ('-2120627650'))) AND (((t0.c0)<<(t0.c0)))) FROM vt1, t0, v0 GROUP BY NULL, ((json_object(vt1.c0, t0.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (t0.c0) AND ((NOT (t0.c0)))), CASE (NOT (v0.c0))  WHEN (vt1.c0 IN ()) THEN t0.c0 COLLATE BINARY ELSE ((((NULL)AND(v0.c0)))AND(0.9131739208813108)) END HAVING GROUP_CONCAT(((t0.c0)AND(v0.c0)) COLLATE BINARY) LIMIT -1082993265 OFFSET -75915514; -- 1ms;
SELECT ALL ((((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))AND(t0.c0)))AND('173017324')))<<(t0.c0 COLLATE RTRIM)), SUM(load_extension(t0.c0)), (~ (t0.c0)) COLLATE NOCASE COLLATE NOCASE FROM v0 WHERE (TRIM(DISTINCT ((((((((x'52d7')AND(x'c361')))OR('')))AND(NULL)))OR(NULL))));SELECT DISTINCT CASE WHEN (((vt1.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((vt1.c0)GLOB('Lᨬ%')) END FROM t0, v0 WHERE (((('-1875388402' IN ())) ISNULL));SELECT DISTINCT (((x'' IN ()))==(v0.c0 COLLATE RTRIM)) FROM v0, vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE((+ (((v0.c0) IS TRUE)))) OVER ( ORDER BY ((((v0.c0 IN ())))>((LOWER(v0.c0))))), ((((SUM(v0.c0))AND((((x'90e4', vt1.c0, t0.c0)) BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, t0.c0, v0.c0))))))OR(rtreenode(v0.c0, vt1.c0))), ((((t0.c0) NOT NULL))IS NOT(((vt1.c0) NOTNULL))), (((t0.c0)) BETWEEN ((AVG(t0.c0))) AND ((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))), (((AVG(vt1.c0), CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN NULL WHEN '719014932' THEN t0.c0 ELSE t0.c0 END, CAST(vt1.c0 AS TEXT)))<=((((vt1.c0) NOT NULL), ((((vt1.c0)AND(v0.c0)))AND(v0.c0)), GROUP_CONCAT(v0.c0)))) FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0)))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0)), t0.c0, 0Xffffffff8636061a, ((((0x7a0df146) IS FALSE)) NOTNULL), GROUP_CONCAT(LIKELY(vt1.c0)) FROM vt1, t0 WHERE (((('992747154')) NOT BETWEEN (((((('s')AND('')))AND(x'')))) AND ((((0x5d3e799) ISNULL))))); -- 0ms;
SELECT DISTINCT (((((t0.c0) ISNULL)))>=((v0.c0 COLLATE BINARY))) FROM t0, vt1, v0 GROUP BY CASE ((((v0.c0)AND(v0.c0)))AND(t0.c0))  WHEN CASE v0.c0  WHEN '-88218018' THEN t0.c0 ELSE t0.c0 END THEN ((((vt1.c0)OR(vt1.c0)))OR(t0.c0)) ELSE CAST(t0.c0 AS BLOB) END HAVING (((((vt1.c0))==((t0.c0))))<>(((vt1.c0)GLOB(t0.c0)))); -- 0ms;
SELECT DISTINCT UNICODE(GROUP_CONCAT(t0.c0)) FROM v0, vt1 FULL OUTER JOIN t0 ON x'' COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((((vt1.c0)GLOB(v0.c0))) NOTNULL) FROM v0 WHERE (((((((((TRIM(DISTINCT 0.8037792006223946))OR(((0.5531399939766528) ISNULL))))AND((('1373335375')>=('-1228222103')))))AND(CAST(NULL AS TEXT))))AND((((0X6043c127)) NOT BETWEEN ((NULL)) AND ((''))))));SELECT DISTINCT SUM(((v0.c0) BETWEEN (t0.c0) AND (v0.c0))) FILTER(WHERE TOTAL_CHANGES()) OVER () FROM vt1;SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN t0.c0 END) NOTNULL), (((vt1.c0 IN ()))<((('-1644743768') BETWEEN (vt1.c0) AND (t0.c0)))), CAST('-103508523' COLLATE BINARY AS NUMERIC) FROM vt1 INDEXED BY i62, v0;SELECT DISTINCT 0.4961403133515544 FROM v0, t0, vt1 WHERE (((((CASE x''  WHEN '' THEN -2093869058 WHEN NULL THEN x'' WHEN x'f041a910' THEN '' ELSE '0.8853005802385533' END)AND(0x3ceb5d23)))OR(CAST(-1.6499406E9 AS REAL)))) ORDER BY t0.c0, ((((((((t0.c0)AND((((vt1.c0, vt1.c0, t0.c0))!=((v0.c0, vt1.c0, vt1.c0))))))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0)))OR('KRX')) ASC  NULLS LAST, ABS((((t0.c0))<=((0x605e7be5)))) ASC  NULLS LAST; -- 0ms;
SELECT ((((+ (t0.c0))))<>((((v0.c0)<(v0.c0))))) FROM v0, t0; -- 0ms;
SELECT DISTINCT LIKE(v0.c0, ((((vt1.c0)OR(v0.c0)))AND(v0.c0)), 'c') FROM t0, v0;SELECT DISTINCT CASE WHEN ((((v0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN COUNT(304333805) END FROM t0, vt1 NOT INDEXED, v0 WHERE ((NOT ((NULL IN (0.5458039012973976))))); -- 0ms;
SELECT DISTINCT (((((((((+ (v0.c0)))AND(t0.c0)))OR(((vt1.c0)<=(v0.c0)))))OR(CAST(vt1.c0 AS INTEGER))))OR(CASE t0.c0  WHEN x'' THEN t0.c0 WHEN v0.c0 THEN 0.8096082448149121 WHEN v0.c0 THEN v0.c0 END)) FROM v0;SELECT ((((((t0.c0) NOT BETWEEN (NULL) AND (v0.c0)))AND(t0.c0 COLLATE NOCASE)))OR('993144952')) FROM vt1, t0, v0; -- 1ms;
SELECT ALL x'837be0a3' FROM t0, v0; -- 0ms;
SELECT DISTINCT (((v0.c0))<=((((t0.c0)|(v0.c0))))) FROM t0, v0 WHERE (((TYPEOF(DISTINCT 990011610)) NOT NULL)) ORDER BY (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE) ASC, CAST(((t0.c0) NOTNULL) AS BLOB);SELECT GROUP_CONCAT(((v0.c0)>>(vt1.c0))) OVER () FROM vt1, v0, t0 WHERE (((CASE WHEN NULL THEN 0.8168897146076699 WHEN x'1ecf8e9a' THEN 1004054042 WHEN '9p' THEN x'1840' WHEN -416244710 THEN NULL WHEN 0.09516175385988002 THEN '+' ELSE NULL END)AND(((((((((0.5983442239894675)OR(x'e728')))AND(x'f8d7')))AND(x'')))OR(''))))); -- 0ms;
SELECT TYPEOF(SUM(vt1.c0)) FROM vt1, t0, v0 WHERE ((((((0.8973184843334383)) NOT BETWEEN ((x'')) AND ((0.5942522652641725))))<=(((('-2105285554')) BETWEEN (('F-yJj~d')) AND ((x'f40e')))))) GROUP BY ((((NOT (vt1.c0)), v0.c0 COLLATE RTRIM, CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN 0.14440560432849692 ELSE t0.c0 END))=(((v0.c0 IN ()), t0.c0, ((t0.c0)/(vt1.c0))))) LIMIT -1443531475 OFFSET 228697960; -- 0ms;
SELECT 1.053292707E9 FROM vt1, v0; -- 0ms;
SELECT ((CAST(t0.c0 AS REAL))|(((v0.c0) IS TRUE))) FROM v0, t0, vt1 WHERE ((- (CAST('1e500' AS REAL)))); -- 0ms;
SELECT DISTINCT (- (((((t0.c0)AND(v0.c0)))AND(v0.c0)))) FROM v0, vt1;SELECT DISTINCT ((((((t0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN ((NOT (v0.c0))) AND ((t0.c0 IN ()))) FROM vt1, v0, t0 GROUP BY ((((((t0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN (((t0.c0)<=(t0.c0))) AND (UNLIKELY(v0.c0))); -- 0ms;
SELECT DISTINCT SUM(t0.c0) OVER () FROM vt1, t0; -- 0ms;
SELECT ((((CASE t0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)AND(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))))AND(((((v0.c0)AND('')))OR(v0.c0)))) FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT AVG(((((((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))AND(t0.c0)))AND(t0.c0))) OVER (), (((((((((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(CASE t0.c0  WHEN vt1.c0 THEN v0.c0 ELSE t0.c0 END)))OR(SUM(t0.c0))))OR(CASE WHEN t0.c0 THEN vt1.c0 END)))AND(vt1.c0 COLLATE BINARY)), NTH_VALUE(CASE WHEN ((v0.c0)<<(t0.c0)) THEN (((vt1.c0, v0.c0, v0.c0))<((v0.c0, t0.c0, t0.c0))) ELSE v0.c0 COLLATE RTRIM END, (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 END))>=((v0.c0)))) OVER () FROM v0 NOT INDEXED, vt1, t0 WHERE (CASE WHEN '0.055336743176199854' THEN (('1171353697') NOT NULL) WHEN x'' THEN json_extract(x'', x'') WHEN ((NULL) NOT NULL) THEN ((((-2043279846)AND('G')))AND(0xfffffffffc1c03de)) ELSE CAST('El^' AS NUMERIC) END);SELECT ALL json_remove(((0.6383282913181002)/(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) FROM vt1, v0 LIMIT -1163975598;SELECT DISTINCT GROUP_CONCAT(CAST(vt1.c0 AS INTEGER)) OVER ( ORDER BY (CAST(vt1.c0 AS NUMERIC) IN ())) FROM t0, v0, vt1; -- 0ms;
SELECT ALL (~ (x'b710')) FROM v0 GROUP BY (vt1.c0 IN (t0.c0)) COLLATE BINARY HAVING ((v0.c0 COLLATE RTRIM) NOT BETWEEN ('-1333237340') AND (((((vt1.c0)AND(v0.c0)))OR(x''))));SELECT ALL UNLIKELY((((v0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((t0.c0, v0.c0, v0.c0)))) FROM t0, vt1, v0 WHERE (((((x'') NOT BETWEEN (x'f5a5') AND (0.8497655349885204)))/(((((x'02fc')AND(x'')))OR(x'25c8'))))); -- 1ms;
SELECT DISTINCT TOTAL(UPPER(DISTINCT v0.c0)) FROM t0, vt1 INDEXED BY i62 WHERE (((((('1355602191')>>('nzr9\r J'))))>((((NULL)<>(NULL))))));SELECT DISTINCT (- (vt1.c0 COLLATE RTRIM)) FROM t0 WHERE (((((((NULL)OR(0.4986550042898973)))OR(((NULL)GLOB('-1210162019')))))AND((('-27944409') NOTNULL))));SELECT DISTINCT ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (LOWER('')) AND (COUNT(vt1.c0))), (((t0.c0)||(vt1.c0)) IN ()), ('Jz' IN (t0.c0)) FROM vt1 WHERE ((((('wcR4')) NOT BETWEEN ((x'')) AND ((0.7851555230508009))) IN ()));SELECT ((CASE vt1.c0  WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN NULL THEN vt1.c0 WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)+(((t0.c0)IS(t0.c0)))) FROM vt1 WHERE (((CASE WHEN NULL THEN NULL ELSE NULL END)||((((NULL)) BETWEEN ((x'')) AND ((NULL))))));SELECT DISTINCT 0x1bfd2fea FROM v0; -- 0ms;
SELECT ALL ((SUM(t0.c0))<((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))))) FROM t0, v0, vt1 WHERE (('㼳~Dih' IN ())) UNION SELECT DISTINCT NULL FROM v0 INDEXED BY i62, t0, vt1 WHERE (CASE CAST(0.4645787868525646 AS BLOB)  WHEN (('0.6433579275788135') NOT BETWEEN (1517794739) AND (0.1799920168608624)) THEN x'' END);SELECT DISTINCT SUM(((v0.c0)LIKE(vt1.c0))) OVER () FROM v0, t0, vt1 WHERE ((((('-416744316' IN ('-1789620663', 0.8690548285839874))))<((((NULL)IS NOT(NULL)))))); -- 1ms;
SELECT DISTINCT LIKE(AVG(v0.c0), ((t0.c0)IS NOT(vt1.c0)), '+'), CAST(((((vt1.c0)AND(t0.c0)))AND(vt1.c0)) AS NUMERIC), ((((vt1.c0)>(v0.c0)))>((((v0.c0, t0.c0, t0.c0, v0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0, vt1.c0, t0.c0)) AND ((v0.c0, vt1.c0, t0.c0, v0.c0, vt1.c0))))) FROM t0;SELECT CAST(vt1.c0 COLLATE BINARY AS TEXT) FROM t0, vt1, v0; -- 0ms;
SELECT DISTINCT (((t0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, NULL, v0.c0)) AND (('<᭨', v0.c0, '-1354654095'))) COLLATE RTRIM FROM v0, vt1;SELECT ALL CAST(((t0.c0)>=(t0.c0)) AS NUMERIC), ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN (TOTAL(vt1.c0)) AND (NULL)), NTILE(((((vt1.c0)>=(vt1.c0)))<<((NULL IN (vt1.c0))))) OVER (), (((vt1.c0)) BETWEEN (((- (vt1.c0)))) AND ((SUM(t0.c0)))), CASE WHEN t0.c0 COLLATE RTRIM THEN CAST(t0.c0 AS INTEGER) WHEN (((v0.c0))<((t0.c0))) THEN ((v0.c0)&(t0.c0)) WHEN (NOT (vt1.c0)) THEN json_array_length(vt1.c0) ELSE (((v0.c0, t0.c0, vt1.c0, t0.c0, vt1.c0))>((v0.c0, NULL, v0.c0, t0.c0, v0.c0))) END FROM vt1 WHERE (((('-1606976670')) BETWEEN ((NULL)) AND ((NULL))) COLLATE BINARY);SELECT ALL CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN ((((((((t0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((t0.c0)>>(vt1.c0)) END FROM vt1, t0, v0 WHERE (((((-1.228222103E9) IS FALSE))+((((('1053292707')OR(NULL)))AND(''))))) ORDER BY (((vt1.c0 IN ()))GLOB('')) ASC; -- 0ms;
SELECT DISTINCT AVG((((vt1.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))) OVER (), ((t0.c0)<<(t0.c0)) COLLATE BINARY, (((((((((((v0.c0)OR(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)), vt1.c0 COLLATE BINARY, v0.c0, CAST(v0.c0 AS INTEGER), (NULL IN ())))<=((((vt1.c0)OR(t0.c0)), t0.c0 COLLATE BINARY, v0.c0, CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c0 THEN vt1.c0 END, v0.c0))) FROM t0;SELECT ALL ((((CAST(vt1.c0 AS INTEGER))OR(((((v0.c0)OR(vt1.c0)))AND(v0.c0)))))AND((v0.c0 IN ()))), (~ (t0.c0)) COLLATE BINARY, CAST(((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))AND(v0.c0)))OR(t0.c0)) AS REAL) FROM t0, vt1, v0 WHERE (CASE NULL  WHEN NULL THEN '1328861576' WHEN -27944409 THEN '1371276571' WHEN 0.8955716231292058 THEN '5O(⮙?' WHEN '376534016' THEN NULL WHEN -8.60353289E8 THEN 0xffffffffbd9dace4 END COLLATE RTRIM); -- 0ms;
SELECT (v0.c0 IN ()) FROM v0; -- 0ms;
SELECT DISTINCT (- (((vt1.c0) NOTNULL))), (((((+ (t0.c0)))OR(NULL)))AND(AVG(t0.c0))), TOTAL(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(vt1.c0)))AND(t0.c0))) OVER (), TOTAL(CAST(x'9fd2c983' AS BLOB)), ((((t0.c0))=((vt1.c0))) IN ()) FROM v0, t0 LIMIT 456823171 OFFSET 1074224223;SELECT ALL CAST(t0.c0 COLLATE RTRIM AS NUMERIC) FROM t0, vt1, v0; -- 1ms;
SELECT DISTINCT ((CAST(vt1.c0 AS TEXT)) ISNULL), (((v0.c0 IN ()))%(MAX(vt1.c0))), SUM(load_extension(t0.c0)) OVER ( PARTITION BY (((- (vt1.c0))) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (vt1.c0 COLLATE BINARY)), LIKELIHOOD(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))), 0.39955501409468586)), ((((CAST(vt1.c0 AS BLOB))OR(((v0.c0) IS TRUE))))OR(CAST(t0.c0 AS BLOB))), ((SUM(t0.c0)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(v0.c0))) AND (t0.c0 COLLATE RTRIM)) FROM t0, v0, vt1 WHERE ((+ (((('', NULL, NULL))<=((NULL, x'010d', '1850822548'))))));SELECT ALL COUNT(((6.44861821E8)>(v0.c0))) FROM vt1;SELECT DISTINCT ((((((((((t0.c0)AND(v0.c0)))OR(NULL)))OR(t0.c0)))AND(vt1.c0))) NOTNULL) FROM vt1 WHERE ((((0xffffffffed28be27)) NOT BETWEEN ((0Xffffffffd0223eca)) AND (((('827428432')AND(0.26581897078089667))))));SELECT ALL v0.c0 COLLATE RTRIM FROM v0; -- 0ms;
SELECT DISTINCT AVG(((((((((vt1.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(vt1.c0))) FROM v0 WHERE ('''%');SELECT ((vt1.c0 COLLATE BINARY) NOTNULL) FROM v0, t0;SELECT DISTINCT (((((vt1.c0) IS FALSE)))<=((((((((((v0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0))))), CUME_DIST() OVER (), CAST((vt1.c0 IN ()) AS NUMERIC) FROM vt1, t0 WHERE ((('' COLLATE BINARY) BETWEEN (SQLITE_SOURCE_ID()) AND (((676967059)>=(NULL)))));SELECT DISTINCT TOTAL(((v0.c0)>>(vt1.c0))) OVER () FROM v0, t0;SELECT DISTINCT ((t0.c0) IS TRUE) COLLATE BINARY FROM t0, vt1 WHERE (((CASE WHEN 651339699 THEN '-316096985' WHEN 0.6936299048456694 THEN '-1338530379' WHEN NULL THEN '' ELSE x'' END) NOTNULL)); -- 0ms;
SELECT ALL CASE (NOT (v0.c0))  WHEN (((v0.c0))>((v0.c0))) THEN (NOT (t0.c0)) WHEN (v0.c0 IN ()) THEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(t0.c0)) WHEN (NOT (NULL)) THEN CAST(t0.c0 AS REAL) ELSE ((((v0.c0)OR(vt1.c0)))AND(v0.c0)) END FROM v0, t0 WHERE (CAST((('541194996')-(x'4c320024')) AS REAL)) LIMIT 1041942733 OFFSET 864541688;SELECT DISTINCT CASE CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((v0.c0) BETWEEN (t0.c0) AND (v0.c0)) THEN NULLIF(DISTINCT vt1.c0, t0.c0) ELSE ((((t0.c0)AND(v0.c0)))OR(v0.c0)) END FROM t0, v0, vt1 WHERE ((((0.9106140423957294, NULL, NULL)) BETWEEN ((((x'32807323')>=(-1281074310)), (('_鸸') IS TRUE), ((((((((x'195f')OR(0.7940997325699745)))OR(NULL)))OR('')))OR(NULL)))) AND (((- (0Xffffffffc1274e7b)), (- (0.36587151343954605)), (0.4659200068223127 IN ()))))); -- 0ms;
SELECT DISTINCT MAX(((v0.c0)|(0.41757580062125166))) FROM vt1, v0, t0 NOT INDEXED; -- 0ms;
SELECT ALL ((((v0.c0)!=(vt1.c0))) BETWEEN (((t0.c0)>>(vt1.c0))) AND ((+ (0Xffffffffb037a5b5)))) FROM vt1, v0;SELECT DISTINCT (- (((t0.c0) IS TRUE))) FROM v0, vt1 WHERE (((('ME?')) BETWEEN ((0.2871290983681246 COLLATE BINARY)) AND ((TRIM(''))))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)))GLOB((v0.c0 IN ()))) DESC  NULLS LAST, (((((t0.c0)AND(t0.c0)))OR(vt1.c0)) IN ((t0.c0 IN (vt1.c0))));SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((0Xffffffff83f2da31) ISNULL) IN (((vt1.c0)IS(vt1.c0)))) WHERE (((((0.06249758908775971)<<('-941677255'))) BETWEEN (((x'') ISNULL)) AND (((((NULL)OR(NULL)))OR(x'')))));SELECT ALL LAG(0Xfffffffff77a6487, '㒵4', 'z,' COLLATE BINARY) OVER (), (((vt1.c0 IN (v0.c0)))>>(451910040)), (((((t0.c0)-(v0.c0)), CASE t0.c0  WHEN t0.c0 THEN v0.c0 END, MAX(t0.c0)))==((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(vt1.c0 AS INTEGER), TOTAL_CHANGES()))) FROM vt1, t0, v0 ORDER BY 0.8269448353400027; -- 0ms;
SELECT DISTINCT TYPEOF(LIKELY(v0.c0)) FROM vt1 LIMIT -1246851377;SELECT DISTINCT ((((vt1.c0) NOT NULL)) NOT BETWEEN (IFNULL(DISTINCT v0.c0, v0.c0)) AND ((v0.c0 IN ()))) FROM v0, t0;SELECT DISTINCT t0.c0, ((0.23561123624922675) NOTNULL) COLLATE RTRIM COLLATE BINARY, ((((((((HEX(v0.c0))AND(t0.c0 COLLATE NOCASE)))AND(UNLIKELY(DISTINCT x''))))OR(NULLIF(v0.c0, vt1.c0))))AND(((t0.c0) NOT NULL))) FROM vt1, t0 WHERE (((((x'') NOTNULL))AND(HEX(DISTINCT x'')))) GROUP BY (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (((v0.c0)IS NOT(vt1.c0)))), (((((vt1.c0))<>((v0.c0)))) IS FALSE), ((((vt1.c0)<>(vt1.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN v0.c0 WHEN vt1.c0 THEN 0.17105778186231624 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((v0.c0) NOT BETWEEN (vt1.c0) AND ('-1187319072')))) HAVING t0.c0 ORDER BY (CASE vt1.c0  WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END IN (((((((((t0.c0)OR(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c0)), CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST, (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))<(((NOT (t0.c0))))) ASC  NULLS FIRST;SELECT CASE WHEN CAST(t0.c0 AS NUMERIC) THEN ((v0.c0) BETWEEN (vt1.c0) AND (x'e1fc')) END FROM vt1, t0;SELECT DISTINCT PERCENT_RANK() OVER ( RANGE ((IFNULL(DISTINCT vt1.c0, v0.c0))LIKE((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) PRECEDING EXCLUDE CURRENT ROW) FROM v0, vt1 WHERE (1.338710572E9) LIMIT 1086538573 OFFSET 1731277458;SELECT DISTINCT UPPER(DISTINCT (NOT (NULL))) FROM vt1 WHERE ((((('-750780689') BETWEEN (-8.09089938E8) AND (NULL)))>>(((x'') NOT BETWEEN (x'') AND (''))))); -- 0ms;
SELECT CAST('w࢕' AS NUMERIC) COLLATE NOCASE FROM vt1, v0; -- 0ms;
SELECT DISTINCT (('-941677255') BETWEEN (CASE t0.c0  WHEN t0.c0 THEN v0.c0 ELSE vt1.c0 END) AND (t0.c0 COLLATE BINARY)), COUNT(0.6691318009361167) FILTER(WHERE CASE WHEN ((((((((t0.c0)OR(vt1.c0)))OR(t0.c0)))OR(0.6458284129781905)))OR(v0.c0)) THEN CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END ELSE '' END) OVER (), (((((v0.c0))<=((t0.c0)))) NOTNULL) FROM t0;SELECT DISTINCT CAST(t0.c0 AS NUMERIC) FROM v0, t0, vt1 WHERE ((((x'' COLLATE RTRIM))<=((((x'b484')OR('-2084928940')))))) ORDER BY (((v0.c0 IN ()))%(TRIM(DISTINCT v0.c0, v0.c0))) DESC  NULLS LAST, (((('1183235691')-(vt1.c0)))>>(CASE v0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS FIRST, ((CAST(vt1.c0 AS BLOB)) IS TRUE) DESC LIMIT -643812993; -- 1ms;
SELECT DISTINCT ((((((vt1.c0)<(t0.c0)))OR(((t0.c0) IS FALSE))))OR(MAX(t0.c0))), SUM('1988696596') OVER (), CASE WHEN v0.c0 COLLATE BINARY THEN (t0.c0 IN ()) WHEN 0.2215544369075052 THEN CASE WHEN vt1.c0 THEN v0.c0 END WHEN HEX(DISTINCT v0.c0) THEN ((vt1.c0)>=(t0.c0)) ELSE ((v0.c0)<>(v0.c0)) END, COUNT(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))), MAX((~ (t0.c0))) FROM v0 WHERE (TYPEOF(DISTINCT '-1354654095') COLLATE NOCASE);SELECT ALL CUME_DIST() OVER (), ((((vt1.c0)<<(v0.c0))) BETWEEN (-281478666) AND (x'')), CAST(((t0.c0) NOT NULL) AS REAL), (((vt1.c0) NOT NULL) IN ()), SUM(((vt1.c0)<(t0.c0))) FILTER(WHERE (+ (((v0.c0)*(t0.c0))))) OVER () FROM t0, vt1, v0 WHERE ((- ((((('wB[%_e]')AND('2090219353')))OR(x'9973'))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0)=(v0.c0)))) AND ((vt1.c0 COLLATE BINARY))) ASC; -- 0ms;
SELECT ALL '1996456367' FROM t0 WHERE ((~ (ABS('-1037229840')))); -- 2ms;
SELECT DATETIME(((v0.c0) IS FALSE), GLOB(t0.c0, v0.c0), ((v0.c0)OR(vt1.c0))) FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, t0; -- 0ms;
SELECT ALL COUNT(*) FROM v0, t0, vt1; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(t0.c0 AS NUMERIC)) FROM t0 WHERE (((((((0.8269448353400027) BETWEEN (-1334704234) AND (0.2035482833103377)))AND(((0.07402821724462139) NOT BETWEEN (x'9bba') AND ('')))))OR(CASE 0.8163512046138072  WHEN '-731723149' THEN 0.9681542646960973 ELSE -2.503747E7 END))); -- 0ms;
SELECT DISTINCT ((((v0.c0) BETWEEN (v0.c0) AND (t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (SUM(vt1.c0))), ((COUNT(vt1.c0))IS NOT(((vt1.c0) IS FALSE))), '0.25342322787240057' FROM v0, vt1;SELECT CAST('' AS NUMERIC) FROM v0, t0 WHERE (((('-728381403')) NOT BETWEEN (((('0.7103373349474766')IS('')))) AND (((((-1.368676406E9, NULL, NULL)) NOT BETWEEN ((-1.938751515E9, '-9223372036854775808', '-856514956')) AND (('', '-1986964565', ''))))))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c0)!=(t0.c0))) FROM vt1, t0, v0 WHERE (((CAST(NULL AS TEXT)) IS TRUE)); -- 0ms;
SELECT ALL ('ۋE' IN ()) FROM v0; -- 0ms;
SELECT DISTINCT ((('+v'))>=((CAST(vt1.c0 AS REAL)))) FROM v0, vt1, t0 WHERE ((('-416244710')<(((NULL) NOT BETWEEN (x'') AND (-2.053999609E9))))); -- 1ms;
SELECT ALL DENSE_RANK() OVER ( ORDER BY v0.c0  NULLS LAST RANGE (~ (GLOB(v0.c0, v0.c0))) PRECEDING EXCLUDE TIES), TOTAL(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0))), CAST(((v0.c0)>>(t0.c0)) AS TEXT) FROM v0, vt1;SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((((x'')OR(NULL)))OR('*a'))  WHEN rtreenode(x'', -1818845828) THEN RTRIM(x'bd0b') WHEN (((4.82315266E8))>((x'750b'))) THEN CASE NULL  WHEN NULL THEN x'' END WHEN ((((x'5624')OR(NULL)))AND(NULL)) THEN (((x'02a7')) BETWEEN ((x'')) AND ((0.5526574869099488))) WHEN ((x'') NOT BETWEEN (0.35178631442260144) AND (5.41194996E8)) THEN '' COLLATE BINARY WHEN ('' IN ('h.g?')) THEN (((('-1457364712')AND(x'add1')))AND('2083396129')) ELSE (+ (NULL)) END); -- 0ms;
SELECT '564904180' FROM t0, vt1 WHERE (((CASE WHEN 0x54bcc6ab THEN 1328861576 END)<((+ ('RiyN'))))); -- 0ms;
SELECT ALL ((((((v0.c0, vt1.c0, v0.c0, vt1.c0, vt1.c0))==((vt1.c0, t0.c0, v0.c0, t0.c0, vt1.c0)))))<((((vt1.c0)|(NULL))))) FROM v0, vt1, t0; -- 1ms;
SELECT ALL ((CASE vt1.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END) IS FALSE) FROM v0 WHERE (((CAST(0x1798b7d0 AS INTEGER)) BETWEEN (CASE 0.007286352601255097  WHEN 0.47028469137236517 THEN 0.47248462102570743 END) AND (CASE x''  WHEN '-1834416550' THEN NULL WHEN NULL THEN '2060830233' WHEN '^勧' THEN 0X41f62f2d END)));SELECT DISTINCT ((MAX(vt1.c0)) IS FALSE) FROM vt1, v0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c0) NOT BETWEEN (v0.c0) AND (0.04577091527721211))) OVER () FROM t0, vt1;SELECT x'' FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT t0.c0, (+ (v0.c0)) COLLATE BINARY, ((x'') IS TRUE) FROM t0, vt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN (0Xffffffffcb249600) AND (667108118)) THEN SQLITE_COMPILEOPTION_GET(0.08897504966253411) ELSE x'2637' END);SELECT DISTINCT ABS(DISTINCT ((((((((t0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(vt1.c0))), PERCENT_RANK() OVER (), CASE WHEN CASE WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN v0.c0 END THEN (((0.49035675784730826)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))) WHEN CASE WHEN x'' THEN x'' WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN v0.c0 END THEN (v0.c0 IN (t0.c0)) WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN v0.c0 END ELSE ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END FROM v0 INDEXED BY i62;SELECT DISTINCT ((vt1.c0) NOT BETWEEN (v0.c0) AND (GROUP_CONCAT(v0.c0))) FROM t0, vt1;SELECT x'b4ff', ((((t0.c0) ISNULL)) BETWEEN ((v0.c0 IN ())) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))), IFNULL(((v0.c0) IS FALSE), v0.c0) FROM t0 WHERE ((((x'')) NOT BETWEEN ((CASE 0.6977296001997533  WHEN x'' THEN NULL WHEN x'578d' THEN x'' WHEN '676967059' THEN NULL ELSE '_w*F' END)) AND ((((x'') ISNULL)))));SELECT DISTINCT ABS(vt1.c0) COLLATE NOCASE FROM v0 WHERE ((((CASE WHEN '933420154' THEN 'RNM' END))>(((('[w,X') ISNULL)))));SELECT DISTINCT NULL FROM v0; -- 0ms;
SELECT ALL (+ (SUM(v0.c0))) FROM vt1, v0 WHERE ((((((((((NOT (x'')))OR((x'' IN ()))))AND((- (NULL)))))AND(((0.280755256229441) BETWEEN ('-27944409') AND ('')))))AND(NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0))  WHEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN HEX(v0.c0) END FROM t0 WHERE (((ABS('쿩A'))%(((-1133531153)||(1.6065716E9))))) GROUP BY ((((x'') BETWEEN (0.7923077535331327) AND (t0.c0)))LIKE((((t0.c0))==((vt1.c0)))));SELECT COUNT(CAST(v0.c0 AS REAL)) OVER () FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT (((((vt1.c0) NOT NULL)))==((CASE v0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN x'' THEN vt1.c0 END))) FROM t0 WHERE (1.955396228E9) LIMIT 292512733;SELECT ALL ((((NULL)IS NOT(vt1.c0)))<<(t0.c0 COLLATE BINARY)) FROM v0, vt1 EXCEPT SELECT DISTINCT COUNT(*) OVER () FROM v0, vt1, t0 WHERE (json_type((NOT ('S'))));SELECT DISTINCT SUM(TIME(vt1.c0, v0.c0, 0Xffffffffd9201a44, v0.c0, v0.c0, v0.c0, v0.c0)) OVER () FROM t0, vt1, v0; -- 0ms;
SELECT DISTINCT SUM('') FROM t0 WHERE (CASE WHEN (((x'')) NOT BETWEEN (('-2034122363')) AND ((NULL))) THEN COALESCE(0X15e04b73, 0.053314111524116914, '', NULL, '{{}W', NULL) WHEN IFNULL(DISTINCT '1338710572', '[]') THEN (('-108233677')<<(NULL)) WHEN CAST('()' AS BLOB) THEN (NULL IN ()) END); -- 0ms;
SELECT DISTINCT (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (0.23182680097255792)) FROM v0;SELECT DISTINCT t0.c0 FROM t0, vt1 WHERE ((((((('0.16935082131223744') IS FALSE))OR(x'' COLLATE BINARY)))OR(((((0.308382411889045)OR('-1228222103')))OR('-1898171148'))))); -- 0ms;
SELECT ALL (MAX(t0.c0) IN ()) FROM v0, t0, vt1 WHERE (TYPEOF(CASE WHEN 'vl' THEN x'' END)); -- 0ms;
SELECT DISTINCT ((((CAST(v0.c0 AS INTEGER))AND((NOT (vt1.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (((((v0.c0 IN (vt1.c0)))OR(GROUP_CONCAT(NULL))))OR(AVG(vt1.c0))), CAST(v0.c0 AS TEXT) FROM t0 GROUP BY (((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))) BETWEEN (((vt1.c0) NOT BETWEEN (v0.c0) AND (t0.c0))) AND (NULL));SELECT DISTINCT (+ (t0.c0 COLLATE BINARY)), ((((((((((((vt1.c0)AND(v0.c0)))OR(vt1.c0)))AND(v0.c0)))OR(v0.c0)))OR(t0.c0)))AND((('f攁')>(0.49110990295331514)))), ((vt1.c0)%(v0.c0)) COLLATE NOCASE FROM vt1, t0, v0 WHERE (CASE ((NULL)GLOB(x''))  WHEN x'' THEN LIKE(NULL, x'', '0') END); -- 0ms;
SELECT CASE UPPER(DISTINCT vt1.c0)  WHEN ((((v0.c0)AND(t0.c0)))OR(vt1.c0)) THEN ((t0.c0) ISNULL) ELSE t0.c0 COLLATE RTRIM END FROM vt1, t0 WHERE (((((x'e6fd')%('')))+((((((((('jl')AND(x'')))OR(NULL)))AND(0.27588640193212)))AND('60461719')))));SELECT ALL CAST((vt1.c0 IN ()) AS INTEGER) FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT ((((NULL)%(vt1.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))), ((((vt1.c0)&(t0.c0)))>(x'6f93')), ((((NULL)GLOB(t0.c0)))IS(((t0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) FROM vt1, t0, v0 GROUP BY CAST(t0.c0 AS INTEGER) COLLATE NOCASE HAVING ((((((((COUNT(*))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE BINARY)))OR(((v0.c0) NOTNULL))))OR((+ (t0.c0)))) LIMIT 104737201; -- 0ms;
SELECT ALL ((DATETIME(vt1.c0, v0.c0, t0.c0, t0.c0, vt1.c0)) NOT NULL) FROM v0, t0;SELECT DISTINCT v0.c0 FROM t0, vt1, v0; -- 0ms;
SELECT ((((CAST(vt1.c0 AS TEXT))OR((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))))AND(((vt1.c0)>>(x'ae59')))) FROM vt1, t0 ORDER BY ((((v0.c0) ISNULL))>(((((((((v0.c0)AND(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))OR(v0.c0)))) DESC  NULLS LAST;SELECT ALL MAX(NULLIF(DISTINCT v0.c0, t0.c0)) FROM t0, v0 ORDER BY ((((v0.c0) IS FALSE)) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c0 END) AND (((')''<평~7') NOT BETWEEN (t0.c0) AND (vt1.c0))));SELECT UNLIKELY(DISTINCT vt1.c0 COLLATE NOCASE), vt1.c0, ((t0.c0)/(vt1.c0)) COLLATE BINARY, ((((((((AVG(vt1.c0))AND(((((vt1.c0)OR(v0.c0)))OR(NULL)))))OR(CAST(t0.c0 AS NUMERIC))))OR(MIN(vt1.c0, t0.c0, v0.c0, vt1.c0))))AND(CASE x''  WHEN v0.c0 THEN vt1.c0 END)), (- (CAST(t0.c0 AS BLOB))) FROM vt1, v0, t0 LIMIT -1319695356 OFFSET -27944409; -- 0ms;
SELECT DISTINCT NTILE((- (v0.c0))) OVER (), ((CAST(v0.c0 AS REAL)) BETWEEN (((t0.c0) NOTNULL)) AND (x'')), CAST(((('X\nr7', v0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((v0.c0, t0.c0, v0.c0))) AS NUMERIC) FROM t0, v0 WHERE (((0.1248789564044871 IN ()) IN (((x'')/(NULL))))) ORDER BY -1.210162019E9 ASC; -- 1ms;
SELECT DISTINCT MIN(CAST(v0.c0 AS INTEGER)) FROM t0, vt1;SELECT DISTINCT ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))LIKE((((t0.c0))<=((0Xffffffffc3cba118))))) FROM t0, v0 GROUP BY ((((((((((v0.c0)LIKE(x'fe15')))AND((~ (vt1.c0)))))OR('1785940338')))OR(((vt1.c0) IS FALSE))))OR(v0.c0));SELECT 0.05461556393801015, (- (vt1.c0 COLLATE RTRIM)), (((vt1.c0 IN ())) IS TRUE) FROM v0 INDEXED BY i62, vt1 WHERE (CAST(((776145598)IS NOT(-1.054388613E9)) AS BLOB));SELECT DISTINCT ((vt1.c0) IS TRUE) COLLATE RTRIM FROM v0 GROUP BY CASE WHEN v0.c0 THEN ((v0.c0) BETWEEN ('Cy0') AND (t0.c0)) END;SELECT DISTINCT ((((v0.c0, vt1.c0, t0.c0))!=((vt1.c0, v0.c0, v0.c0))) IN ()) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (+ (vt1.c0 COLLATE NOCASE)), ((((vt1.c0)IS NOT(t0.c0)))<<(CAST(vt1.c0 AS REAL))), ((CAST(v0.c0 AS REAL)) IS TRUE) FROM t0 ORDER BY (((vt1.c0 IN ())) NOTNULL)  NULLS FIRST;SELECT 0.5710681227035231, ((((t0.c0) NOT NULL)) BETWEEN (AVG(t0.c0)) AND (vt1.c0 COLLATE NOCASE)), COUNT(COUNT(*)) FROM v0, vt1 WHERE (((('-856514956', 'jj', x'fd57', '', '')) BETWEEN ((0.8495308863778533, x'', 0.6354584243630663, 0.7466756447554685, x'')) AND ((x'', NULL, x'60f24f63', 'NT', NULL))) COLLATE NOCASE);SELECT DISTINCT (vt1.c0 COLLATE RTRIM IN ()) FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT MAX((((('twSa')AND('482315266')))OR(v0.c0))) FROM vt1, t0 WHERE (((LOWER(NULL)) NOT BETWEEN (CAST(x'' AS TEXT)) AND ((((x'', '^	/', 'UA', '', 1314336344)) BETWEEN ((x'', -1418640029, 0.19437172382476042, '	ⲛ', x'')) AND ((0.7861516661872217, x'5e23', '1421657771', NULL, NULL))))));SELECT ALL LAST_VALUE(((CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)>((vt1.c0 IN (v0.c0, vt1.c0))))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt1, t0, v0 WHERE (CAST((805314940 IN ()) AS TEXT)); -- 0ms;
SELECT SUM(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) OVER () FROM v0, t0;SELECT DISTINCT ((((v0.c0)>>('-1938751515'))) BETWEEN (json_valid(v0.c0)) AND ((t0.c0 IN ()))), ((vt1.c0 COLLATE BINARY) BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0)) AND ((v0.c0 IN (t0.c0)))), (((+ (t0.c0)))OR(vt1.c0 COLLATE NOCASE)) FROM t0;SELECT DISTINCT json_remove(((vt1.c0) BETWEEN (vt1.c0) AND (0.08412031491760552)), (- (t0.c0))) FROM vt1;SELECT ALL v0.c0, MIN(t0.c0), SQLITE_COMPILEOPTION_USED(t0.c0) COLLATE BINARY COLLATE NOCASE FROM vt1, v0 NOT INDEXED, t0 WHERE ('1476964569'); -- 0ms;
SELECT DISTINCT v0.c0, COUNT(((vt1.c0) BETWEEN (v0.c0) AND (t0.c0))) OVER (), AVG(json_extract(vt1.c0, t0.c0)) FROM v0;SELECT ALL t0.c0, CAST(v0.c0 COLLATE BINARY AS BLOB), (((t0.c0 IN ())) IS FALSE), (((vt1.c0) IS FALSE) IN (CAST(vt1.c0 AS NUMERIC), NULL)), CASE ((t0.c0) IS TRUE)  WHEN (('-910969794')+(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((vt1.c0)IS(v0.c0)) END FROM t0;SELECT DISTINCT CAST(((v0.c0)|(t0.c0)) AS NUMERIC) FROM vt1, t0, v0; -- 0ms;
SELECT CAST(((t0.c0)=(t0.c0)) AS NUMERIC) FROM v0, vt1, t0 WHERE (((CASE x''  WHEN '-2057924327' THEN x'' ELSE '' END) NOTNULL)) ORDER BY CASE CAST(t0.c0 AS INTEGER)  WHEN ((((((((((((((((t0.c0)AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN (+ (t0.c0)) ELSE -941677255 END ASC, ((v0.c0)>=('-1363604065')); -- 0ms;
SELECT DISTINCT TOTAL(-3.16096985E8) FILTER(WHERE CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) OVER () FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT (((((((((((v0.c0, t0.c0, vt1.c0))>=((t0.c0, NULL, 'e'))))AND(((((((((vt1.c0)OR(NULL)))AND(t0.c0)))AND(v0.c0)))OR(vt1.c0)))))AND((vt1.c0 IN ()))))OR((((v0.c0)) BETWEEN (('')) AND ((v0.c0))))))OR((- (t0.c0)))) FROM v0 GROUP BY '' HAVING TYPEOF(DISTINCT ((vt1.c0)>=(t0.c0)));SELECT ALL ((CAST(t0.c0 AS TEXT))AND(CAST(t0.c0 AS BLOB))) FROM v0, vt1, t0 WHERE ((((((NULL)) NOT BETWEEN ((0.9494436807495991)) AND ((x'e790')))) BETWEEN (((0.45205679789739384) NOT BETWEEN (NULL) AND (NULL))) AND (((0Xffffffffcbc921c6) ISNULL)))); -- 0ms;
SELECT ALL ((((vt1.c0) IS TRUE))<<(((t0.c0) IS FALSE))) FROM t0, v0, vt1 WHERE (((NULLIF(DISTINCT NULL, x''))%(UNLIKELY(x'60ef')))) ORDER BY x'bcac' DESC; -- 0ms;
SELECT DISTINCT (((- (NULL)))-(((t0.c0)==(t0.c0)))), '_B''', ((IFNULL(vt1.c0, t0.c0)) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((NULL IN ()))) FROM t0, vt1 WHERE ((- (x''))); -- 0ms;
SELECT ALL ((((((((UPPER(DISTINCT t0.c0))OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND(CASE t0.c0  WHEN vt1.c0 THEN t0.c0 ELSE v0.c0 END)))OR(TRIM(v0.c0))))OR(((x'eb6d') NOT NULL))), 0.8652048788274685, (~ (v0.c0 COLLATE RTRIM)) FROM t0, vt1, v0 LIMIT -1649940600; -- 0ms;
SELECT ALL CASE WHEN (v0.c0 IN (x'2689')) THEN (~ (v0.c0)) WHEN TOTAL(vt1.c0) THEN 0.45027588598196067 COLLATE RTRIM WHEN COUNT(*) THEN ((x'') IS TRUE) ELSE NULL END FROM t0 WHERE (((('x#B>')) NOT BETWEEN (((('%EX>{J6ㅿ')<=(0X494535df)))) AND (((((('')OR(0.5324890027341719)))OR(x''))))));SELECT DISTINCT ((MAX(t0.c0)) ISNULL) FROM t0, vt1, v0 WHERE (CAST(((NULL) ISNULL) AS NUMERIC)) LIMIT 162387144; -- 0ms;
SELECT ALL (((vt1.c0)) BETWEEN ((((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))) AND ((CAST(v0.c0 AS TEXT)))), (((vt1.c0)) BETWEEN ((MIN(vt1.c0))) AND ((((t0.c0)GLOB(t0.c0))))), MIN(COUNT(LIKELIHOOD(DISTINCT t0.c0, 0.5924403199968064))) FROM vt1 WHERE ((('-248956319')AND(0.30833209870390366)) COLLATE NOCASE);SELECT (((NULL, vt1.c0, vt1.c0)) NOT BETWEEN ((((v0.c0)<(NULL)), ((vt1.c0)LIKE(t0.c0)), (t0.c0 IN (v0.c0)))) AND (((vt1.c0 IN ()), TRIM(DISTINCT vt1.c0, vt1.c0), ((t0.c0) NOTNULL)))) FROM v0, vt1 LIMIT -897500992 OFFSET -1054388613;SELECT ALL (((0.1433899439395656)>('!OB}ZJ{	h')) IN (((t0.c0) NOT NULL))), CASE (((vt1.c0))<((v0.c0)))  WHEN ((((vt1.c0)AND(v0.c0)))AND(t0.c0)) THEN ((t0.c0)>>(v0.c0)) ELSE ((vt1.c0) BETWEEN ('0.3819391423065056') AND (v0.c0)) END, t0.c0 COLLATE NOCASE FROM v0 GROUP BY 1.850822548E9;SELECT ALL '775183326' FROM vt1, v0, t0 WHERE ((((('-416524222')AND(UNLIKELY(DISTINCT ''))))OR((x'31bf' IN (''))))); -- 0ms;
SELECT DISTINCT ((((t0.c0)LIKE(t0.c0)))LIKE(CAST(t0.c0 AS BLOB))) FROM t0, v0, vt1 WHERE (CAST(((NULL)IS NOT(x'6f0a')) AS TEXT)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END)+(NULL)), TRIM(vt1.c0) COLLATE RTRIM DESC  NULLS LAST; -- 1ms;
SELECT ALL LAST_VALUE(CAST(((v0.c0)<(t0.c0)) AS INTEGER)) OVER () FROM t0, vt1, v0; -- 0ms;
SELECT ((((v0.c0)|(vt1.c0))) ISNULL) FROM v0, t0, vt1; -- 0ms;
SELECT DISTINCT MAX(((v0.c0) NOT NULL)) FROM t0;SELECT DISTINCT CASE WHEN (((0.39295735600724213))!=((vt1.c0))) THEN v0.c0 COLLATE BINARY END FROM v0;SELECT ALL ((((((((((v0.c0) NOT BETWEEN (t0.c0) AND ('FALSE')))AND(((vt1.c0)>=(t0.c0)))))OR((t0.c0 IN ()))))AND(-394154798)))AND(json_patch(t0.c0, vt1.c0))) FROM vt1, t0, v0 WHERE (CASE CAST(0.9385585372133071 AS TEXT)  WHEN ((NULL)GLOB(-6.43812993E8)) THEN SUBSTR(0.950851672726108, 159666966) ELSE (('578397828') BETWEEN (0x1d07182e) AND (0xfffffffff3abc066)) END) GROUP BY ((((((((CAST(t0.c0 AS REAL))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(t0.c0 COLLATE RTRIM)))AND(((t0.c0)AND(vt1.c0)))))OR(x'7be5')); -- 0ms;
SELECT DISTINCT ((((t0.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, v0.c0, x'e5b4e3de')) AND ((v0.c0, x'', v0.c0))) IN (CASE t0.c0  WHEN v0.c0 THEN '273695365' ELSE vt1.c0 END)) FROM t0, v0, vt1; -- 0ms;
SELECT ((((v0.c0)GLOB(vt1.c0)))|((- (vt1.c0)))) FROM vt1 WHERE (((NULL IN (NULL, '긻4,jA')) IN ())) GROUP BY ((((((t0.c0)AND(vt1.c0)))AND(v0.c0))) ISNULL), CASE ((t0.c0)<(t0.c0))  WHEN ((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN CASE vt1.c0  WHEN v0.c0 THEN t0.c0 ELSE vt1.c0 END WHEN t0.c0 THEN (~ (v0.c0)) WHEN ((vt1.c0)*(t0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END, (((- (t0.c0)))GLOB(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))), CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) THEN x'' ELSE (((t0.c0))>=((v0.c0))) END, CAST(((v0.c0)>>('-21960498')) AS INTEGER) LIMIT 1606420376;SELECT ALL NULLIF(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(0.38898526107241327)))OR(t0.c0)), COALESCE(vt1.c0, vt1.c0)) FROM vt1, v0;SELECT DISTINCT CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))  WHEN 0.9651296073318951 THEN COUNT(t0.c0) WHEN (((v0.c0))>=((t0.c0))) THEN ((t0.c0)<(v0.c0)) WHEN x'' THEN ((v0.c0)<(vt1.c0)) END FROM t0, vt1, v0 WHERE ((- (((NULL) NOT BETWEEN (-750224830) AND (NULL))))) GROUP BY 0.9081397887771727 HAVING ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE); -- 0ms;
SELECT DISTINCT (((v0.c0)<(t0.c0)) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT ((NULL)<=(v0.c0)) FROM v0, vt1, t0 WHERE ((((NULL)) BETWEEN ((x'')) AND ((NULL))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((- (vt1.c0))) IS TRUE) FROM t0, vt1; -- 0ms;
SELECT ALL ((((CAST(v0.c0 AS BLOB))AND(v0.c0)))AND(((v0.c0) NOTNULL))), 0.07552905439690683, (GROUP_CONCAT(vt1.c0) IN ()) FROM vt1, t0 WHERE ((+ (CASE WHEN x'' THEN 'ZE-EN_v' ELSE '|s%i' END)));SELECT DISTINCT v0.c0, ((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END) IS FALSE), ((v0.c0)+(((vt1.c0) NOT NULL))) FROM t0, vt1, v0 WHERE (((((NULL) BETWEEN ('1099921968') AND (0.6093045332769513))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(vt1.c0)))OR(t0.c0)) COLLATE NOCASE, (((((~ (v0.c0)))AND(AVG(t0.c0))))AND(vt1.c0 COLLATE NOCASE)), ((0.7552430180725869)GLOB(((0.8541902521673113) NOT BETWEEN (vt1.c0) AND (x'')))) FROM vt1, t0, v0 GROUP BY ((((vt1.c0) NOT NULL))OR(((t0.c0)<(v0.c0)))) HAVING (((((((('')AND(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE RTRIM)))OR(0.42499895886269046)))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))))); -- 0ms;
SELECT (t0.c0 IN ()), (((((t0.c0) ISNULL), '-1256825677', LOWER(DISTINCT vt1.c0)))>((((t0.c0)>=(t0.c0)), ((t0.c0) IS FALSE), ((t0.c0)*(v0.c0))))), (v0.c0 COLLATE BINARY IN ()) FROM v0, t0 WHERE (((((((((((NULL)OR(0.43345834537002603)))OR(x'd75b')))AND(0.19038936202826762)))AND(x'')))>>(((NULL) NOTNULL))));SELECT DISTINCT ((((vt1.c0)!=(x'')))|(CAST(v0.c0 AS BLOB))), ((((((vt1.c0)OR(vt1.c0)))OR(t0.c0))) BETWEEN ((- (t0.c0))) AND (((v0.c0)%(v0.c0)))), CAST(v0.c0 AS REAL) COLLATE RTRIM FROM t0 WHERE (((((((((((0.5790022354082466)IS('1296739625')))OR(x'78ff')))OR(NULL COLLATE NOCASE)))AND(((((NULL)OR(-2014375366)))AND(NULL)))))AND(((((0.8643380964098529)AND('')))OR(0.857781848042014)))));SELECT (vt1.c0 COLLATE RTRIM IN (((v0.c0)GLOB(t0.c0)), CAST(t0.c0 AS REAL))) FROM v0 WHERE (CAST((('[') IS TRUE) AS BLOB));SELECT DISTINCT t0.c0 FROM vt1, v0, t0; -- 0ms;
SELECT DISTINCT ((v0.c0)=(vt1.c0)) COLLATE RTRIM FROM t0;SELECT SUM(0.9449971073426254) COLLATE NOCASE FROM t0, v0 NOT INDEXED, vt1 WHERE (((LTRIM(x'35057714'))%((((x'')) BETWEEN ((NULL)) AND ((0.3843017167419619)))))) LIMIT 2083396129 OFFSET -1869274841; -- 0ms;
SELECT DISTINCT CASE ((v0.c0)AND(t0.c0))  WHEN ((vt1.c0)/(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END FROM vt1, t0 WHERE ((~ (('0.6383282913181002' IN ()))));SELECT DISTINCT COUNT(*) COLLATE RTRIM, vt1.c0, ((CASE WHEN t0.c0 THEN x'' WHEN vt1.c0 THEN '-338661172' WHEN vt1.c0 THEN v0.c0 END)OR(((vt1.c0)||(589645978)))) FROM v0, t0 WHERE (HEX(DISTINCT CASE WHEN NULL THEN '267840648' WHEN '' THEN 0X4fcb1a2c WHEN NULL THEN NULL END));SELECT CAST(((vt1.c0)>(t0.c0)) AS INTEGER) FROM vt1, v0 WHERE (CAST(((0X198d4859) NOT BETWEEN (NULL) AND ('1606571600')) AS TEXT));SELECT ALL ((CAST(vt1.c0 AS REAL))>(NULL)) FROM v0, vt1 WHERE ((COALESCE(NULL, 0xffffffffdfd5bdd3) IN ())) GROUP BY (((t0.c0) IS FALSE) IN ()) HAVING ((((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))OR(NULLIF(DISTINCT vt1.c0, v0.c0))) ORDER BY CASE (- (t0.c0))  WHEN (((v0.c0))>((vt1.c0))) THEN '' END  NULLS LAST, '2083396129' ASC, ((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)&(((((vt1.c0)AND(t0.c0)))OR(v0.c0))));SELECT ALL (- ((((t0.c0))!=((0.9552473797913329))))) FROM t0, v0 WHERE ((((0.8600717532355339)) BETWEEN (((('-1457364712') NOT BETWEEN (NULL) AND ('1666682789')))) AND ((((0X1cbf8c02)AND('907305048')))))); -- 0ms;
SELECT DISTINCT CASE WHEN (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN v0.c0 COLLATE NOCASE END FROM vt1, v0, t0 WHERE ((~ ((('1024454112') BETWEEN (x'') AND ('-2120627650'))))) ORDER BY CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN vt1.c0 WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c0 ELSE v0.c0 END THEN ((vt1.c0) NOT NULL) ELSE NULL COLLATE NOCASE END, t0.c0 DESC, (((('h*'))>=((0.5475080660775831))) IN ()) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT NULL COLLATE BINARY, ((((CASE WHEN t0.c0 THEN x'' END)OR((((v0.c0))<((vt1.c0))))))AND('[)')), TOTAL(CAST(t0.c0 AS INTEGER)) OVER () FROM vt1, t0;SELECT ALL ((CAST(v0.c0 AS TEXT))LIKE(((t0.c0)*(vt1.c0)))) FROM vt1, v0;SELECT DISTINCT (((((vt1.c0))=((v0.c0))))|((t0.c0 IN ()))) FROM v0, t0, vt1 WHERE ((NOT (((NULL)+(x'd0d1'))))); -- 0ms;
SELECT DISTINCT ((((1421657771 COLLATE NOCASE)OR(t0.c0 COLLATE RTRIM)))OR(COUNT(vt1.c0))), (((((t0.c0))<((vt1.c0))))=((((vt1.c0))<>((vt1.c0))))), (((((vt1.c0))>(('o?um\n/?')))) BETWEEN ((NOT (x''))) AND (t0.c0)) FROM v0 WHERE (CASE WHEN 0.9829973895284242 COLLATE BINARY THEN ((x'') BETWEEN (0.5434230674146531) AND (x'')) END);SELECT ALL ((AVG(v0.c0)) IS FALSE) FROM v0, t0; -- 0ms;
SELECT ALL (((t0.c0)) NOT BETWEEN ((GROUP_CONCAT(t0.c0))) AND ((t0.c0))) FROM vt1;SELECT DISTINCT (((((t0.c0 IN ()))AND(v0.c0)))OR(CAST(t0.c0 AS INTEGER))) FROM vt1, v0, t0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN (ROUND('', x'c273')) AND (highlight(NULL, 0.8651276324279343, 0.2918241042996026, '642031197')))); -- 1ms;
SELECT ((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))) NOT NULL) FROM vt1, t0 WHERE ((((+ (x''))) BETWEEN (('!B' IN ())) AND ((177232942 IN ())))); -- 0ms;
SELECT ALL (MIN(0X15689182) IN ()), LAST_VALUE(CASE ((vt1.c0) NOTNULL)  WHEN (+ (vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE LIKELY(DISTINCT 0Xffffffff839e8b37) END) OVER (), t0.c0 FROM vt1 WHERE ((((((NULL))<=((0.007475794147090764))))==(CAST(0.6135431520075553 AS REAL))));SELECT DISTINCT ((((((vt1.c0) IS FALSE))OR(CAST(t0.c0 AS INTEGER))))OR(CAST(0Xffffffffc87ac795 AS BLOB))) FROM vt1, v0 GROUP BY ((-699660365) ISNULL), LOWER(DISTINCT CAST(t0.c0 AS REAL)), 0x34d9b995 HAVING CASE WHEN ((vt1.c0)<<(t0.c0)) THEN (((0.3152480569232017)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (((vt1.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, vt1.c0, 0x7fed91c)) AND ((t0.c0, v0.c0, vt1.c0))) THEN LIKELY(DISTINCT t0.c0) WHEN (vt1.c0 IN ()) THEN highlight(vt1.c0, v0.c0, t0.c0, v0.c0) ELSE CAST(vt1.c0 AS NUMERIC) END ORDER BY CASE WHEN ((v0.c0)<(NULL)) THEN NULLIF(DISTINCT t0.c0, t0.c0) END ASC  NULLS FIRST LIMIT -1 OFFSET 194552033;SELECT DISTINCT v0.c0 FROM vt1, t0, v0; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 END) NOTNULL) FROM vt1, v0, t0 WHERE ((((((' 垯xI]<8')OR(NULL)))AND('-394154798')) IN ((('^]+') IS FALSE), ((0.10818268945752108) IS TRUE)))) GROUP BY (vt1.c0 IN (x'')) LIMIT -524440156; -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS REAL)) IS TRUE), CAST(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) AS NUMERIC), (((vt1.c0)) BETWEEN ((((t0.c0)<=(t0.c0)))) AND ((-1184707982))) FROM t0, vt1, v0; -- 0ms;
SELECT IFNULL(0.8615252840760043 COLLATE NOCASE, ((((t0.c0)AND('[C')))AND(t0.c0))) FROM v0, t0 INDEXED BY i62, vt1 WHERE (((CAST(x'8660' AS REAL)) NOT BETWEEN ((('') IS TRUE)) AND (((((((((x'ae89')AND('-1076047980')))OR(0Xffffffffdc77b0e3)))AND(-25557146)))OR('pK4r\rJ޳lX'))))) ORDER BY CASE WHEN ((t0.c0)IS NOT(v0.c0)) THEN (- (t0.c0)) END ASC; -- 0ms;
SELECT DISTINCT LIKELIHOOD(((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(t0.c0)), 0.16188869223322677) FROM t0, vt1 WHERE (CAST(CAST('7^' AS REAL) AS BLOB));SELECT DISTINCT ((((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>=(((v0.c0)AND(t0.c0)))) FROM t0, vt1 WHERE (((-1649940600) IS TRUE));SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 END)) AND ((((v0.c0)<<(t0.c0))))), ((((t0.c0) NOTNULL))>=(CAST(t0.c0 AS BLOB))), CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN t0.c0 COLLATE NOCASE WHEN TOTAL(x'44c8') THEN ((t0.c0) NOTNULL) WHEN (((vt1.c0))<=((t0.c0))) THEN HEX(DISTINCT vt1.c0) WHEN CASE WHEN t0.c0 THEN v0.c0 ELSE vt1.c0 END THEN CAST(x'7313' AS NUMERIC) WHEN vt1.c0 COLLATE RTRIM THEN ((t0.c0)/(t0.c0)) END, ((v0.c0) NOT NULL), 0.12297501236127673 FROM vt1;SELECT DISTINCT (((x''))<((LIKELIHOOD(DISTINCT v0.c0, 0.4477141451047899)))) FROM vt1;SELECT DISTINCT (- (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM t0, vt1, v0 WHERE ((NOT (((x'9dd7')>=('-134048125'))))); -- 0ms;
SELECT (t0.c0 IN ()) COLLATE NOCASE FROM t0 WHERE (((((x'2d81b7ce')<<(0x2adb4c14)))<>(CASE 0.5263621403898039  WHEN NULL THEN x'' END))); -- 0ms;
SELECT DISTINCT (+ ((+ (t0.c0)))) FROM v0, vt1, t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt1.c0 END)) AND (((NOT (v0.c0))))) FROM vt1 WHERE ((~ (CAST('' AS REAL))));SELECT DISTINCT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ((((vt1.c0, vt1.c0, v0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, v0.c0, v0.c0))))) FROM t0, v0, vt1; -- 0ms;
SELECT COUNT(((t0.c0)*(vt1.c0))) OVER () FROM vt1, t0 WHERE ((((x'' IN ()))-(0.42855293703070596 COLLATE BINARY))); -- 1ms;
SELECT ALL (((('-103508523' COLLATE RTRIM)AND(CASE WHEN v0.c0 THEN 0.2326116327108344 END)))AND(((v0.c0) IS FALSE))), (((NOT (v0.c0))) NOT BETWEEN ((((vt1.c0, v0.c0, t0.c0, t0.c0, x'b0f2'))!=((vt1.c0, vt1.c0, t0.c0, v0.c0, v0.c0)))) AND (TRIM(v0.c0, t0.c0))), CASE WHEN MAX(vt1.c0) THEN 0.918076551271015 ELSE (((v0.c0))<=((v0.c0))) END FROM v0 GROUP BY ((v0.c0)LIKE(t0.c0)) COLLATE RTRIM, (NOT (((v0.c0) NOT NULL))), ((((CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END)AND(NULL)))AND(((vt1.c0) IS TRUE))) HAVING ((((MIN(vt1.c0))AND(NULL)))AND((v0.c0 IN (t0.c0))));