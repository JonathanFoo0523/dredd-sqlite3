-- Time: 2024/06/07 21:51:54
-- Database: database58
-- Database version: 3.40.0
-- seed value: 4184852158
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c0='', c1=NULL, c1=x'' WHERE ((rt0.c0)*((((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))>((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2))))); -- 0ms;
CREATE VIEW v0(c0) AS SELECT ALL json_array_length(COUNT(rt0.c2), COUNT(rt0.c0)) FROM rt0; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET (c2)=(NULL) WHERE (((rt0.c2 IN ()))>=(CAST(rt0.c0 AS NUMERIC))); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0) VALUES (0.4836088888429596, '747067947'), (x'4d30', x''), ('0.4836088888429596', 0x2c875a2b); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'9afd', NULL, ''), (x'', NULL, 7.47067947E8), ('8?', '869T4289033016423745130T-4702764685528094229T4846410202604369486T', 7.47067947E8); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=(0.5183576805756382, '747067947'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=747067947'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 3ms;
UPDATE OR IGNORE rt0 SET (c1, c0)=(NULL, 0.5183576805756382); -- 0ms;
REINDEX  rt0; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.29039671551497204 WHERE CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((((0.36668132987699165)AND(vt0.c0)))OR(vt0.c0)) WHEN 7.47067947E8 COLLATE NOCASE THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) WHEN 0xffffffffc313c2c5 THEN CASE WHEN vt0.c1 THEN vt0.c0 END END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE vt0.c0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c0=x'' WHERE (((- (vt0.c0))) IS TRUE); -- 1ms;
UPDATE OR REPLACE vt0 SET (c1, c1)=(486668501, 0.6009984894862371); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64970'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM vt0; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (x'', NULL, 'O9A'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.6009984894862371 WHERE ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('')) COLLATE BINARY; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (''), (NULL), (NULL); -- 1ms;
CREATE TABLE t0 (c0 INT COLLATE RTRIM ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES (x'ff1b', 0.8506945847721173); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
DROP VIEW v0; -- 0ms;
COMMIT; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('', 0.3568351540165162); -- 0ms;
DELETE FROM sqlite_stat1; -- 11ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1243547294); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR FAIL rt0 SET c1=x'3ffeae34', c2=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1022115131' WHERE CAST(((rt0.c0)=(rt0.c2)) AS INTEGER); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ANALYZE; -- 1ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL, c0=NULL WHERE CASE WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)>(rt0.c2)) END; -- 1ms;
CREATE UNIQUE INDEX i84 ON t1(CAST(CASE c0  WHEN c0 THEN c0 ELSE c0 END AS TEXT) COLLATE BINARY) WHERE (((c0)LIKE(c0)) IN ()); -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
REINDEX i84; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
ANALYZE i84; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (x'', 0.20136253136753424, NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0, c0)=(x'57c4', -1022115131); -- 0ms;
UPDATE OR IGNORE t0 SET c0=-1.022115131E9, c0=NULL, c0='0.3568351540165162'; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('1658140351', 0.9319639966352041); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'6a4f'; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(NULL); -- 0ms;
ANALYZE t0; -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE (+ ((t0.c0 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-1422239209'); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=('-1026298351'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c56; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (0.027455392737756212), (x'396f'), (0.16628779479381783), (x'9e8a'), (0xffffffffc313c2c5); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, x'', NULL), (x'71c2', '', 'YC'), ('yc', NULL, '0.29039671551497204'), (0.921649365560545, NULL, 0.04268783499433004), ('486668501', 0.1668804178702229, '-2050327781'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.012057014860239357); -- 1ms;
REINDEX; -- 2ms;
PRAGMA cell_size_check; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA mmap_size = -1480018745204569691; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c10 BLOB; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''), (1726074146), (1.726074146E9); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2) VALUES (0.7773768038416834, 0X62d536bf); -- 0ms;
INSERT OR ROLLBACK INTO t0(c10) VALUES (0.9104695318823968); -- 0ms;
INSERT OR ROLLBACK INTO t0(c10) VALUES ('-1026298351'); -- 0ms;
PRAGMA main.cell_size_check = false; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c33; -- 1ms;
PRAGMA temp.default_cache_size; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c0)=(0xffffffffab3a5a17, x''); -- 0ms;
REINDEX; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ABS((rt0.c1 IN ())) FROM rt0, t0 WHERE (((- (0.4609446879095901)) IN ())) ORDER BY (((((((((('8?') BETWEEN (t0.c10) AND (rt0.c2)))AND(t0.c33)))AND('')))OR(((t0.c33) BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c2)<(rt0.c2)))) DESC  NULLS LAST; -- 0ms;
SELECT (- (((rt0.c1) BETWEEN (rt0.c2) AND (t0.c33)))), ((CAST(rt0.c2 AS NUMERIC))%(((rt0.c0)<(rt0.c1)))), CASE WHEN ((rt0.c0)==(0.30279537139025914)) THEN (('tn1wꋭ')%(rt0.c2)) ELSE (rt0.c1 IN ()) END FROM t0 WHERE (((((('<Pꋭhc>')GLOB(0x7a82a2ed))))<=((((NULL) BETWEEN (0.5918519793800301) AND (''))))));SELECT DISTINCT rt0.c0 COLLATE BINARY FROM t0 WHERE ((((((((((NULL)OR(1.658140351E9)))OR(1237319387)))AND(x'')))AND('')) IN ())) ORDER BY CASE CAST(t0.c10 AS REAL)  WHEN t0.c10 COLLATE BINARY THEN (('-1022115131')IS NOT(t0.c10)) WHEN ((1.726074146E9)==(rt0.c1)) THEN (((t0.c33, 0.702452185787088, rt0.c2))<((t0.c10, t0.c10, rt0.c2))) WHEN CASE WHEN NULL THEN rt0.c0 END THEN ((rt0.c1)IS NOT(rt0.c1)) ELSE ((rt0.c2)IS(0.2942498637478034)) END ASC, rt0.c1 COLLATE NOCASE DESC  NULLS LAST;SELECT ALL CASE WHEN (NOT (rt0.c0)) THEN ((rt0.c2)*(rt0.c2)) ELSE CAST(rt0.c0 AS TEXT) END, CAST(((rt0.c1) IS FALSE) AS REAL), CAST((rt0.c0 IN ()) AS INTEGER) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS BLOB)) NOTNULL) FROM rt0, t0 GROUP BY (((t0.c33)) NOT BETWEEN ((t0.c33 COLLATE RTRIM)) AND ((((rt0.c1)LIKE(rt0.c1))))); -- 0ms;
SELECT COUNT(*) FROM t0; -- 0ms;
SELECT ALL ((rt0.c0)<=(((t0.c33) NOT NULL))) FROM t0 WHERE (((((NULL)AND(x''))) NOT NULL));SELECT DISTINCT FIRST_VALUE(-2050327781) OVER (), CAST(rt0.c1 AS BLOB) COLLATE BINARY COLLATE BINARY, ((((t0.c10) NOT BETWEEN (rt0.c2) AND (t0.c33)))>(((((rt0.c2)OR(t0.c10)))OR(t0.c33)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT t0.c10, ((((2.055381741E9)OR(t0.c33)))AND(CAST(rt0.c1 AS BLOB))), t0.c33 FROM t0;SELECT DISTINCT ((((((((CHANGES())AND((t0.c33 IN ()))))OR((rt0.c0 IN (t0.c33)))))AND(0.027455392737756212)))AND((+ (t0.c33)))), ((((rt0.c1) IS TRUE))LIKE(COALESCE(DISTINCT t0.c33, t0.c10))), (CASE NULL  WHEN rt0.c2 THEN rt0.c2 END IN ()) FROM rt0, t0; -- 0ms;
SELECT GROUP_CONCAT((1.726074146E9 IN ())) OVER (), ((0X62d536bf) IS FALSE), (((GLOB(rt0.c0, t0.c10)))<(((((rt0.c1))>=((rt0.c0)))))) FROM rt0, t0 WHERE ((((NOT (0.483605305866861)))||(((('1726074146', x'b0c8', 'YO)ES0')) BETWEEN ((0.002061111822489692, 0.3363900459910477, 0x56d235b5)) AND ((7.47067947E8, NULL, 0.4609446879095901)))))); -- 1ms;
SELECT rt0.c0 FROM t0 WHERE ('') GROUP BY ((((rt0.c2)AND(t0.c10)))OR('Fwn')) COLLATE BINARY;SELECT ALL (~ ((rt0.c2 IN ()))) FROM rt0 WHERE (CASE ((0xffffffffa67428f0)=(NULL))  WHEN CASE WHEN '-1422239209' THEN '鶽a' WHEN 0.16119210942167117 THEN x'' WHEN NULL THEN x'6e925f41' WHEN 1367427628 THEN x'' WHEN '1906803356' THEN NULL END THEN ((x'65e1')=('⹖Y')) WHEN x'4630' THEN ((x'')*(NULL)) WHEN (((''))<>((x'7ee95181'))) THEN x'' COLLATE NOCASE END) ORDER BY (((((rt0.c2))=((t0.c10))))<=(((((t0.c10)OR(NULL)))AND(rt0.c2))));SELECT ALL ((((((x'')AND(t0.c33)))AND(rt0.c2))) NOT NULL) FROM t0 NOT INDEXED WHERE (((((x'') NOT BETWEEN (NULL) AND (0.36668132987699165))) BETWEEN (((0.4256388402553738)/(NULL))) AND (NULL COLLATE NOCASE)));SELECT DISTINCT '' FROM t0, rt0 WHERE (CASE WHEN x'dab3' THEN CASE '2z'  WHEN 1.237319387E9 THEN NULL END WHEN (('d/	N') NOT BETWEEN ('1445786778') AND (NULL)) THEN CAST(NULL AS BLOB) WHEN (((x'')) BETWEEN ((NULL)) AND ((0.12220858732805151))) THEN ((0.1527231784640013) NOT BETWEEN ('0.30279537139025914') AND (-1.735811651E9)) ELSE ((((x'')OR(x'')))AND(x'')) END) GROUP BY (((('') NOTNULL)) NOT NULL) ORDER BY ((((t0.c33)) BETWEEN ((t0.c33)) AND ((rt0.c1))) IN (NULL COLLATE BINARY, ((t0.c33)<<(rt0.c2)), rt0.c2 COLLATE RTRIM)) DESC, (rt0.c2 IN (CAST(t0.c33 AS REAL), t0.c10 COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT LAST_VALUE(((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c33))) NOT NULL)) OVER () FROM rt0, t0 WHERE (((((((((CAST(NULL AS NUMERIC))AND((((x'')) NOT BETWEEN ((NULL)) AND (('1237319387'))))))OR((((('1237319387')OR('1367427628')))OR(0.3568351540165162)))))AND(((0.30279537139025914) NOT BETWEEN ('') AND ('0.29039671551497204')))))OR(HEX(DISTINCT '0.4256388402553738')))) ORDER BY (- (rt0.c0))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((0x2c875a2b) BETWEEN (((rt0.c0) IS TRUE)) AND (rt0.c1)) FROM rt0, t0 WHERE (((((((NULL)OR('763048668')))AND(x'')))+((((x''))<((NULL)))))) ORDER BY ((t0.c33) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(rt0.c2 AS BLOB))) DESC  NULLS FIRST, IFNULL(DISTINCT ((rt0.c0) NOT NULL), 0xffffffffaf6d78df) DESC; -- 0ms;
SELECT ALL TOTAL(CAST(rt0.c2 AS TEXT)) OVER () FROM t0, rt0; -- 0ms;
SELECT AVG(t0.c33) COLLATE RTRIM COLLATE NOCASE FROM t0, rt0 WHERE ('-482357171' COLLATE BINARY); -- 0ms;
SELECT ((((((((((rt0.c2)OR('1682490366')))AND(t0.c10)))AND(t0.c33)))AND(rt0.c0))) NOTNULL) FROM t0 WHERE (HEX((('-1022115131')LIKE(x''))));SELECT ALL '' FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((((rt0.c0)) BETWEEN ((rt0.c0)) AND (('')))) NOT NULL) FROM t0 WHERE (CAST(((x'69bd')<(x'321c')) AS REAL)) ORDER BY CASE ((((NULL)AND(t0.c33)))OR(t0.c33))  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2)IS NOT(rt0.c0)) END ASC  NULLS LAST;SELECT ALL CASE WHEN ((rt0.c0) NOTNULL) THEN x'' ELSE (rt0.c1 IN (x'')) END, CASE ((rt0.c1)OR(rt0.c1))  WHEN '1491586932' COLLATE NOCASE THEN CAST(rt0.c1 AS NUMERIC) END, ((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c10)))OR(((t0.c10)||(t0.c10)))))AND(((rt0.c2)<=(t0.c33)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((((t0.c10)OR(t0.c10)))OR(t0.c10)))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.30118920902891555))), 0.743103185640099, ABS((((x'61e2')) NOT BETWEEN ((t0.c33)) AND ((t0.c10)))) FROM t0, rt0; -- 1ms;
SELECT DISTINCT t0.c33 FROM rt0;SELECT (rt0.c2 COLLATE NOCASE IN ()) FROM rt0; -- 0ms;
SELECT COALESCE(DISTINCT (+ (rt0.c0)), TRIM(DISTINCT x'fbdc', t0.c33)), ((CASE WHEN t0.c33 THEN rt0.c2 ELSE rt0.c2 END)!=((rt0.c0 IN ()))), (((rt0.c1 IN ()))%(((t0.c33)<=(0.5645858869448613)))), (((t0.c33)) NOT BETWEEN (((+ (t0.c33)))) AND (('!GOz~'))), '869T4289033016423745130T-4702764685528094229T4846410202604369486T' FROM rt0, t0; -- 0ms;
SELECT ((rt0.c0)LIKE(t0.c10)) FROM t0 WHERE ((((CASE WHEN 0.39888791853970484 THEN NULL WHEN x'3392' THEN '' WHEN '-1271554420' THEN NULL END))>=((CASE WHEN NULL THEN 0.28991543176410395 WHEN '' THEN NULL WHEN x'' THEN x'' WHEN 0.29039671551497204 THEN '-2050327781' WHEN 'wy' THEN 0.33360525830004784 ELSE 0.6401742291418814 END))));SELECT DISTINCT CASE (((t0.c10, rt0.c2, rt0.c2)) BETWEEN ((t0.c33, rt0.c0, rt0.c1)) AND ((t0.c33, 0.743103185640099, rt0.c2)))  WHEN (NOT (rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN t0.c33 ELSE rt0.c2 END END FROM rt0, t0 INDEXED BY i84 WHERE ('vgE9+p');SELECT DISTINCT SQLITE_COMPILEOPTION_USED(SQLITE_VERSION()), ((CASE t0.c10  WHEN rt0.c0 THEN rt0.c1 END) IS TRUE), LIKE(TRIM(DISTINCT t0.c10), ((0.09943461755260441) NOTNULL)) FROM rt0;SELECT DATE(rt0.c0 COLLATE BINARY, CAST(rt0.c0 AS INTEGER), ((rt0.c1)GLOB(rt0.c1))) FROM rt0, t0 WHERE (((0.04268783499433004 COLLATE RTRIM)<=(CAST('-1271554420' AS BLOB)))) GROUP BY (((NULL, t0.c10, rt0.c1, rt0.c2, t0.c10)) BETWEEN (((~ (rt0.c0)), CAST(rt0.c1 AS BLOB), ((rt0.c1) IS TRUE), rt0.c2, ((rt0.c0) NOT BETWEEN (t0.c33) AND (rt0.c1)))) AND ((((((((((rt0.c1)OR(t0.c33)))AND('0.39888791853970484')))OR(rt0.c1)))AND(rt0.c2)), ((((t0.c33)OR(rt0.c0)))AND(x'')), rt0.c0, COALESCE(rt0.c1, rt0.c1), ((rt0.c1) BETWEEN (NULL) AND (0.6662610856534145))))) LIMIT -2050327781; -- 0ms;
SELECT ALL CAST(rt0.c0 AS NUMERIC) COLLATE BINARY COLLATE BINARY FROM rt0, t0 ORDER BY (((((rt0.c0) BETWEEN (NULL) AND (t0.c10)), ((rt0.c1)GLOB(t0.c10)), ((t0.c10) BETWEEN (t0.c10) AND (rt0.c2))))<((((t0.c10)LIKE(t0.c33)), ((x'') BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c1))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT '1445786778', GROUP_CONCAT(((t0.c33)||('-1944139647'))), (((((rt0.c0)) BETWEEN ((t0.c33)) AND ((rt0.c2)))) ISNULL) FROM rt0;SELECT DISTINCT ((rt0.c0 COLLATE BINARY) NOTNULL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c0  WHEN t0.c33 THEN t0.c33 WHEN rt0.c1 THEN t0.c10 WHEN rt0.c2 THEN t0.c33 END AS INTEGER), CASE (~ (t0.c33))  WHEN TRIM(DISTINCT rt0.c2) THEN ((t0.c33) BETWEEN ('0.6009984894862371') AND (rt0.c2)) WHEN (((t0.c33))=((t0.c33))) THEN ((t0.c33) IS FALSE) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c2) NOTNULL) ELSE CASE t0.c33  WHEN rt0.c2 THEN rt0.c2 END END, (((NOT (0.5183576805756382)))||(((rt0.c2) NOT NULL))) FROM t0;SELECT DISTINCT ((CASE t0.c33  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)%(0.7080162846145818)), CASE ((rt0.c1)LIKE('?p'))  WHEN COUNT(rt0.c0) THEN IFNULL(rt0.c2, rt0.c2) WHEN ((rt0.c0)||(rt0.c2)) THEN t0.c10 COLLATE RTRIM WHEN 1.491586932E9 THEN HEX(rt0.c2) WHEN 0.663414039640393 THEN CAST(t0.c33 AS BLOB) WHEN rt0.c1 THEN t0.c10 END, (((rt0.c1)) BETWEEN ((((t0.c33)AND(t0.c33)))) AND ((NULL))) FROM t0, rt0 LIMIT 1237319387; -- 0ms;
SELECT ALL ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))>(((rt0.c2)<(rt0.c0)))) FROM t0 WHERE (CAST(x'' COLLATE RTRIM AS NUMERIC)) UNION SELECT ALL (((~ (t0.c33)))GLOB((- (t0.c33)))) FROM t0 WHERE (((0.9104695318823968) BETWEEN (CASE WHEN NULL THEN 0.26019474233096196 END) AND (-2.050327781E9))) LIMIT -1897631423;SELECT DISTINCT ABS(DISTINCT ((t0.c10) IS TRUE)) FROM rt0 WHERE ((CASE WHEN '' THEN '-1832277637' WHEN 0.3749180178450541 THEN '-1351780129' WHEN x'' THEN 0X58e7cf74 WHEN NULL THEN 763048668 WHEN 0.7491362348174917 THEN NULL END IN ())) GROUP BY ((t0.c33)>((('2008012142')>=(rt0.c0))));SELECT DISTINCT CASE rt0.c0 COLLATE BINARY  WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOT BETWEEN ('1237319387') AND (t0.c10)) END, CAST((+ (rt0.c0)) AS BLOB), ((rt0.c2)IS NOT(CAST(rt0.c2 AS NUMERIC))) FROM t0;SELECT DISTINCT (((0.4101766091617912 COLLATE RTRIM))=(((NOT (rt0.c2))))), AVG(((t0.c33) NOT BETWEEN (rt0.c0) AND (t0.c33))), NULL FROM t0, rt0 WHERE ((- (((NULL)==(0.9104695318823968))))); -- 0ms;
SELECT DISTINCT ((((t0.c33) BETWEEN (t0.c33) AND (rt0.c0)))>=(IFNULL(rt0.c2, rt0.c1))) FROM t0;SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC)) ISNULL) FROM rt0 NOT INDEXED, t0 WHERE (((((x'')) BETWEEN ((0Xffffffff9a824041)) AND ((x''))) IN ())); -- 0ms;
SELECT HEX(rt0.c0) FROM rt0 WHERE (CAST(((NULL) IS FALSE) AS NUMERIC)) LIMIT 747067947; -- 0ms;
SELECT ALL COUNT(CASE x''  WHEN -1832277637 THEN t0.c33 WHEN t0.c10 THEN x'fd0c' WHEN NULL THEN t0.c33 ELSE rt0.c1 END) OVER (), (((((((((((((- ('h8m+3Sh')))OR(rt0.c0)))AND(t0.c33)))AND(((((t0.c10)OR(rt0.c2)))AND(t0.c10)))))OR(GROUP_CONCAT(t0.c33))))OR(((t0.c10)GLOB(t0.c10)))))OR(CASE rt0.c2  WHEN t0.c10 THEN t0.c33 ELSE rt0.c0 END)), 0.012057014860239357 FROM t0, rt0; -- 0ms;
SELECT ALL t0.c10, ((((((((t0.c33)OR(CHANGES())))AND(t0.c10 COLLATE BINARY)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c33)))))OR(json_insert(rt0.c0, rt0.c1, t0.c33, rt0.c2, NULL, rt0.c2, rt0.c2))), ((((t0.c33) NOT BETWEEN (rt0.c1) AND (t0.c33))) BETWEEN (x'7076') AND (SUM(rt0.c2))) FROM t0, rt0;SELECT DISTINCT MIN(((0.4291341865127194)IS(''))) FROM t0, rt0; -- 0ms;
SELECT ALL ((((((rt0.c1) IS TRUE))AND(AVG(rt0.c1))))OR((~ (rt0.c1)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (- (rt0.c1)), (((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN t0.c10 THEN t0.c33 WHEN rt0.c0 THEN 0x2d7b32dc WHEN rt0.c2 THEN rt0.c1 END)) AND ((((t0.c10) NOTNULL)))), (rt0.c2 IN ((+ (t0.c33)), LTRIM(rt0.c1, rt0.c1))) FROM t0, rt0 WHERE ((~ ((NOT ('-1026298351'))))); -- 0ms;
SELECT NULL FROM rt0 WHERE (UPPER(((x'') NOT BETWEEN (x'') AND (NULL)))); -- 1ms;
SELECT DISTINCT LENGTH((- (rt0.c1))), (((((((rt0.c1))<=((0.8041911739072145))))AND((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))))))AND(rt0.c1 COLLATE BINARY)), IFNULL((t0.c10 IN ()), (NOT (t0.c10))) FROM rt0;SELECT ALL (((rt0.c2) BETWEEN (t0.c10) AND (rt0.c2)) IN ()), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c33)))) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c1)), ((CAST(rt0.c2 AS REAL))>=((rt0.c0 IN ()))) FROM rt0, t0 WHERE (((CAST('-2050327781' AS INTEGER))IS((0X40b77bb8 IN ())))); -- 0ms;
SELECT DISTINCT (((t0.c10 IN ()))&(COUNT(*))) FROM rt0, t0; -- 0ms;
SELECT ALL TOTAL(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) OVER () FROM t0, rt0 WHERE (((((0X78b398e1)) NOT BETWEEN ((-1.502336784E9)) AND ((x'3938'))) IN ((0.8042480363916684 IN ()), ((0.5470182042713969)||('1292888753'))))); -- 0ms;
SELECT DISTINCT (('s䈨mr_r3ᇧ') NOT NULL), 1.292888753E9, ((CASE WHEN t0.c33 THEN rt0.c1 WHEN rt0.c2 THEN t0.c33 WHEN t0.c33 THEN rt0.c2 ELSE t0.c10 END) IS TRUE) FROM t0, rt0; -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (t0.c10) AND (t0.c10))) BETWEEN ((~ (t0.c33))) AND (CAST(rt0.c1 AS REAL))) FROM rt0 ORDER BY CASE WHEN ((t0.c10) NOT NULL) THEN ((((t0.c33)AND(rt0.c1)))OR(t0.c10)) WHEN (+ (rt0.c1)) THEN ((t0.c10)GLOB(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c10 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c33 END THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)) END  NULLS LAST;SELECT DISTINCT rt0.c0 FROM t0 WHERE (((CAST(x'' AS NUMERIC))<(x'')));SELECT ALL 0.8577918701729941, ((DATE(rt0.c0, t0.c33, rt0.c0, t0.c10, rt0.c0)) IS TRUE), '5G,' FROM t0, rt0 WHERE ((((((x'') NOTNULL), ('-1521807048' IN ()), ((0.039438908825099483) NOT BETWEEN (0.9104695318823968) AND ('-1897631423'))))>=(((('-1351780129')<=(x'bbef')), ((x'') IS TRUE), (((x'', x'', 0.6271524398024281))==(('m4N3sHJ', '0.702452185787088', '640626262'))))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 LIMIT 1547471823 OFFSET 9223372036854775807 UNION SELECT ALL ((((NULL) BETWEEN (NULL) AND (rt0.c2)))%((((t0.c33)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM rt0 WHERE ((((+ (0.7054142693011725)))&((((0.8318336273358504, '-1592437488', x''))>((0Xffffffffde104d80, x'', 0.6035301052779912)))))) ORDER BY ((((rt0.c2 COLLATE RTRIM)AND(((rt0.c0)/(rt0.c2)))))AND(t0.c10)) DESC, UNLIKELY(DISTINCT (NOT (t0.c10)))  NULLS LAST;SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((((t0.c33)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND ((((rt0.c1, rt0.c1, t0.c10))!=((t0.c10, rt0.c2, t0.c33))))), RANK() OVER ( ORDER BY (((('352876116')AND(((t0.c10)<=(rt0.c2)))))OR(t0.c10 COLLATE RTRIM))  NULLS FIRST), CASE WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY FROM rt0 WHERE (((((0.9727604665527881) NOTNULL)) IS FALSE));SELECT DISTINCT (- (t0.c10 COLLATE BINARY)), NTH_VALUE(CASE WHEN (((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, '䑐L')) AND ((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1))) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN NULL THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END WHEN (+ (rt0.c2)) THEN UNLIKELY(rt0.c2) ELSE CAST(rt0.c0 AS NUMERIC) END, (((rt0.c2 COLLATE BINARY))>((((rt0.c1)-(rt0.c2)))))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), (((~ (rt0.c2)))IS((((t0.c10)) BETWEEN ((t0.c33)) AND ((0xffffffff932f3357))))), TOTAL(LOWER(rt0.c0)) OVER (), NULL FROM rt0 LIMIT 586359755;SELECT DISTINCT PERCENT_RANK() OVER (), rt0.c2, TYPEOF(((rt0.c1) NOTNULL)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT t0.c10, DENSE_RANK() OVER (), SUM(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) FROM t0;SELECT DISTINCT (- (((rt0.c0) NOTNULL))), ((CAST(rt0.c2 AS INTEGER)) IS FALSE), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))-(((rt0.c1)LIKE(t0.c10)))) FROM rt0 WHERE ((~ (CASE WHEN NULL THEN '163252329' ELSE x'' END)));SELECT DISTINCT ((CASE WHEN 0.14473626222499303 THEN 'L''' END) BETWEEN (load_extension(t0.c33)) AND (ABS(rt0.c0))) FROM t0 ORDER BY ((t0.c10)*(((t0.c33) ISNULL)))  NULLS LAST LIMIT -1897631423 OFFSET -1688752738;SELECT ((t0.c33 COLLATE BINARY)<(CAST(rt0.c1 AS INTEGER))), GROUP_CONCAT((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) OVER (), (((rt0.c0)||(rt0.c2)) IN ()) FROM rt0 WHERE (((((x'') NOT BETWEEN (0.10966682986676413) AND (0Xffffffffbb1124fe)))<=((+ (x'')))));SELECT DISTINCT t0.c10 FROM t0; -- 0ms;
SELECT DISTINCT t0.c33 COLLATE BINARY, (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('1908046545'))))==(json_object(rt0.c0, rt0.c2))), ((((rt0.c1)OR(rt0.c0)))OR(t0.c33)) COLLATE NOCASE FROM rt0, t0 WHERE (COALESCE(((('-1502336784'))<=(('640626262'))), IFNULL(DISTINCT 0.3640861818634873, x'abc0'))) ORDER BY NULL DESC LIMIT 1281818170 OFFSET 914392272;SELECT ALL CAST((NOT (rt0.c2)) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c2)) NOTNULL), CAST((t0.c10 IN ()) AS INTEGER), (((rt0.c1)) NOT BETWEEN (('1367427628')) AND (((((NULL, rt0.c0, rt0.c2))<=((t0.c33, rt0.c2, rt0.c0)))))) FROM rt0;SELECT ALL ((((COUNT(*))OR(((t0.c10) IS TRUE))))OR(((((rt0.c2)AND(rt0.c2)))AND(t0.c33)))), CASE WHEN (+ (rt0.c2)) THEN ((((t0.c10)AND(NULL)))OR(t0.c33)) END, ((json_array_length(t0.c10))>>((rt0.c0 IN (t0.c10)))) FROM rt0, t0 WHERE (((((((NULL)AND(0X562cf49a)))AND(NULL)))LIKE(DATE(NULL, 2025036001, NULL)))) GROUP BY ((((0xfffffffff222ce6c)AND(t0.c10)))OR(x'93a2')) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((((t0.c33) NOT NULL))OR(rt0.c2 COLLATE NOCASE)))AND(((rt0.c2) NOT NULL))) FROM rt0;SELECT ALL x'' FROM t0, rt0 WHERE (',* kV1%K'); -- 0ms;
SELECT ((((NULL)/(rt0.c1))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((t0.c33) ISNULL))) FROM t0, rt0 WHERE (HEX(NULL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c0 AS NUMERIC))) FROM t0, rt0 ORDER BY (((((rt0.c0)OR(rt0.c0)))OR(NULL)) IN ()) ASC; -- 0ms;
SELECT ALL ((UNLIKELY(t0.c10)) BETWEEN (MIN(rt0.c0)) AND (CAST(rt0.c2 AS INTEGER))) FROM rt0, t0 WHERE ((((+ (0.3594536054658335)))/(163252329))); -- 0ms;
SELECT AVG((NOT (rt0.c2)) COLLATE BINARY) OVER () FROM t0 WHERE (UNLIKELY(NULL COLLATE NOCASE)) ORDER BY CAST(((rt0.c2)>(rt0.c0)) AS BLOB)  NULLS FIRST;SELECT DISTINCT t0.c33 FROM rt0, t0; -- 0ms;
SELECT DISTINCT 0.70291337574655 FROM t0; -- 0ms;
SELECT ((((t0.c10)&(rt0.c1))) BETWEEN (((t0.c10) IS TRUE)) AND (((t0.c10)>(t0.c33)))) FROM t0, rt0; -- 0ms;
SELECT (((rt0.c0)<(rt0.c0)) IN ()), (COUNT(*) IN ()), ((NULL) NOT BETWEEN (rt0.c1) AND ((+ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c0)))IS(rt0.c2 COLLATE BINARY)) FROM rt0, t0 WHERE (((((CAST(586359755 AS REAL))OR(NULL)))OR(json_valid(NULL)))) GROUP BY ((t0.c33)<<((((t0.c33))>((t0.c33))))), ((((rt0.c1)AND(t0.c10)))AND(rt0.c2)) COLLATE RTRIM, ((NOT (rt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE ((((NULL IN ())) ISNULL)) UNION SELECT ((((((((rt0.c2)AND(t0.c33)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)) COLLATE BINARY FROM t0 WHERE ('-1156504322');SELECT DISTINCT ((TOTAL(t0.c33))AND(CAST(0.7293754391368169 AS BLOB))) FROM t0, rt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY ((((rt0.c1)||(rt0.c2)))|(((t0.c10)=(t0.c10))))) FROM t0, rt0; -- 0ms;
SELECT ALL 0.5111074382698977 FROM t0; -- 1ms;
SELECT DISTINCT (- ((rt0.c0 IN (t0.c10)))) FROM t0 WHERE ((((((x'')OR('0.0')))OR('y}E\nE !I')) IN ()));SELECT ALL ((CASE t0.c10  WHEN NULL THEN t0.c33 ELSE rt0.c0 END) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (((rt0.c1)<(rt0.c1)))), CAST(CASE ''  WHEN rt0.c0 THEN t0.c10 END AS TEXT), rt0.c1 FROM rt0;SELECT ALL rt0.c2, (((('273167277')OR((+ (0.4291341865127194)))))AND((((1.908046545E9)) BETWEEN (('?p')) AND ((NULL))))), ((rt0.c2) ISNULL) FROM rt0, t0 NOT INDEXED WHERE ((+ ((~ (0x71ba7ad1))))); -- 0ms;
SELECT ((((t0.c33) IS TRUE))<(-1702739903)), LAG(t0.c33, ((((((((rt0.c2)OR(t0.c10)))AND(t0.c33)))OR('6\n')))AND(rt0.c2 COLLATE RTRIM)), ((((CASE WHEN rt0.c0 THEN t0.c10 END)AND(((((((((t0.c33)OR(t0.c10)))OR(t0.c10)))OR(t0.c33)))AND(rt0.c0)))))OR(NULL COLLATE NOCASE))) OVER ( ORDER BY CAST(((t0.c33) BETWEEN (t0.c33) AND (t0.c33)) AS INTEGER)  NULLS LAST), (((rt0.c0)>=(rt0.c1)) IN ()) FROM t0, rt0 WHERE (CASE (x'' IN ())  WHEN (x'b50d' IN ()) THEN UNLIKELY('1445786778') WHEN (((0X2c875a2b))=((1.445786778E9))) THEN CASE '1237319387'  WHEN 1.906803356E9 THEN x'' END WHEN (('h8m+3Sh') NOT BETWEEN (0.039438908825099483) AND (x'')) THEN (x'' IN ()) ELSE json_insert(-1872190925, '-318866727', 0Xffffffffdd2822c4, x'6139', NULL) END); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((x'1a3d') ISNULL)) OVER (), CAST((rt0.c2 IN ()) AS INTEGER), ((((rt0.c0) BETWEEN (t0.c33) AND (rt0.c2))) NOT NULL) FROM rt0, t0 GROUP BY (((t0.c33) NOT NULL) IN ()) LIMIT -1990019508 OFFSET 1103248575; -- 0ms;
SELECT ALL CASE CASE t0.c33  WHEN t0.c33 THEN rt0.c2 ELSE t0.c10 END  WHEN AVG(rt0.c2) THEN TOTAL(t0.c10) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c33))) THEN (rt0.c0 IN (rt0.c0, rt0.c1)) WHEN QUOTE(t0.c10) THEN 0.9115770674288785 END FROM rt0 RIGHT OUTER JOIN t0 ON LIKELY(((((t0.c33)OR(rt0.c1)))OR(rt0.c2))) WHERE (x'') ORDER BY (((rt0.c2))<((t0.c10))) COLLATE RTRIM ASC; -- 0ms;
SELECT UPPER((rt0.c2 IN ())) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)==(rt0.c0))) NOTNULL), ((SUM(t0.c33))OR(((((rt0.c0)OR(t0.c10)))OR(t0.c33)))), STRFTIME(rt0.c2, t0.c10, t0.c10) COLLATE BINARY COLLATE RTRIM FROM rt0, t0 WHERE (((('1726074146'))<=((0.1117917412323417))) COLLATE BINARY); -- 0ms;
SELECT ((x'')&(CASE rt0.c0  WHEN rt0.c0 THEN t0.c33 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c10 THEN 0xffffffff9068a233 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c33 THEN t0.c33 END)), ((0.4591659017957783) IS FALSE), FIRST_VALUE(CAST(((rt0.c1) NOT BETWEEN (t0.c33) AND (rt0.c2)) AS TEXT)) OVER ( GROUPS  CURRENT ROW) FROM t0, rt0; -- 0ms;
SELECT ((t0.c33) NOT BETWEEN (NULL) AND (NULL)) COLLATE NOCASE, CAST(rt0.c1 COLLATE BINARY AS INTEGER), ((TOTAL(rt0.c2))&(rt0.c0 COLLATE RTRIM)) FROM rt0;SELECT ALL (((((t0.c33) BETWEEN (t0.c10) AND (rt0.c2))))<=((CAST(rt0.c2 AS BLOB)))) FROM rt0 WHERE (((((NULL))<((x'7d6f'))) IN ())) ORDER BY ((NULL IN ()) IN ()) ASC  NULLS FIRST;SELECT DISTINCT CAST((((0Xffffffff98899dbd))>((rt0.c2))) AS INTEGER) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((x'')<>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), (((((((((NOT (t0.c10)))OR(rt0.c2)))OR(CAST(rt0.c0 AS NUMERIC))))AND(rt0.c0)))AND((NOT (rt0.c0)))), (NOT (((rt0.c2)LIKE(rt0.c1)))) FROM t0;SELECT DISTINCT CAST(MIN(t0.c33) AS INTEGER) FROM t0, rt0 WHERE ((('!GOz~' COLLATE NOCASE) IS TRUE)) ORDER BY (((rt0.c0)) BETWEEN ((LTRIM(t0.c10))) AND ((((rt0.c0) NOT BETWEEN (t0.c33) AND (rt0.c0)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((MAX(rt0.c2))OR((((rt0.c0))<((rt0.c1))))))OR(((rt0.c1)>(t0.c10)))) FROM t0, rt0 WHERE (((((x'd838')IS(x''))) IS FALSE)); -- 1ms;
SELECT DISTINCT (((CAST(t0.c10 AS BLOB), (rt0.c0 IN ()), CAST(t0.c10 AS TEXT)))!=((((('-261265141')) NOT BETWEEN ((NULL)) AND ((rt0.c1))), t0.c10, NULL))) FROM rt0, t0; -- 0ms;
SELECT ALL CASE CASE WHEN 0xfffffffff5247bac THEN t0.c33 WHEN rt0.c1 THEN NULL WHEN t0.c33 THEN rt0.c0 END  WHEN (((rt0.c1, rt0.c0, rt0.c0))>=((rt0.c0, rt0.c0, rt0.c1))) THEN t0.c33 WHEN (~ (t0.c10)) THEN (((rt0.c2)) NOT BETWEEN ((t0.c10)) AND ((-1346932537))) WHEN (x'841fe27a' IN ()) THEN '' ELSE rt0.c1 END FROM t0, rt0; -- 0ms;
SELECT ALL x'6103' FROM rt0, t0 WHERE ('') ORDER BY ((((((((((rt0.c2)+(rt0.c2)))OR(((t0.c33)IS NOT(rt0.c0)))))AND(x'a6a4')))AND(t0.c33 COLLATE BINARY)))OR(CAST(rt0.c2 AS NUMERIC))); -- 0ms;
SELECT ALL (('-613808249') BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c1)GLOB(rt0.c2)))), (~ (CASE WHEN x'' THEN t0.c33 ELSE rt0.c2 END)), CHAR((- ('-1026298351'))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c10)OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY FROM rt0 GROUP BY (- ((- (t0.c33))));SELECT DISTINCT rt0.c2 FROM t0 WHERE ((((x'76f9cac8', NULL, x'')) BETWEEN ((((0.5013579635559569) NOTNULL), ((((((((593655038)OR(x'')))OR(1323831783)))OR('*jnkM')))AND(0.5869533189198101)), NULL)) AND ((((('1906803356'))<((0X44e97f6e))), (('NO9팮Wt~!') NOT BETWEEN (x'7f26') AND ('')), (0X71ba7ad1 IN ())))));SELECT (CAST(rt0.c1 AS NUMERIC) IN ((+ (rt0.c2)), t0.c33 COLLATE BINARY)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((('407589639')&(x'')))<((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, t0.c33)) AND ((t0.c33, rt0.c0, rt0.c2))))) FROM rt0;SELECT COUNT(((rt0.c1) IS FALSE) COLLATE BINARY), RANK() OVER (), (((t0.c10 IN ())) BETWEEN ('1323831783') AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) FROM t0 WHERE ((((((((((('gCw')OR('')))AND(x'')))AND(0.7954793020629746)))OR(-1.521807048E9))) ISNULL));SELECT ALL ((((+ (rt0.c1)), -1742705442, MIN(t0.c33), CAST(t0.c33 AS BLOB), 'SIP'))<>((rt0.c0, AVG(rt0.c2), MAX(t0.c10, t0.c10, rt0.c1, rt0.c0), ((t0.c10)>=('-553620426')), ((((t0.c33)AND(rt0.c1)))OR(rt0.c1))))) FROM rt0 WHERE (CAST(((NULL) NOT BETWEEN ('1085766584') AND ('2008012142')) AS BLOB));SELECT DISTINCT json_patch(CASE WHEN rt0.c2 THEN rt0.c2 END, rt0.c0) FROM t0;SELECT DISTINCT ((((((((((((t0.c10)AND(rt0.c2)))AND(rt0.c1)))AND(t0.c10)))AND(rt0.c0)))AND(1.156153198E9)))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))) FROM rt0, t0 WHERE ((((x'c509213e')>('BO.<')) IN ())); -- 0ms;
SELECT DISTINCT NULL, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) IS FALSE), ((rt0.c1 IN ()) IN ()) FROM t0 WHERE (((0.9884823942264205 COLLATE RTRIM)<=((NOT (NULL)))));SELECT TYPEOF(GROUP_CONCAT(rt0.c1)) FROM t0 GROUP BY '-1872190925' HAVING (((~ (rt0.c0))) NOT BETWEEN (CASE WHEN t0.c10 THEN t0.c10 ELSE '1050420410' END) AND (((rt0.c1)/(t0.c33))));SELECT DISTINCT ((((rt0.c1) BETWEEN (t0.c33) AND (x'001b'))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c10 THEN t0.c33 ELSE rt0.c1 END) AND (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c10)))) FROM t0 WHERE (((((NULL) IS FALSE)) NOT BETWEEN (((NULL) NOTNULL)) AND (((0x7fffffffffffffff)<<(-1735811651)))));SELECT ALL CAST(((t0.c10) IS TRUE) AS NUMERIC), ((CASE t0.c10  WHEN rt0.c0 THEN t0.c10 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c1)LIKE(t0.c33))) AND (CAST(t0.c10 AS TEXT))), ((((rt0.c2)AND(t0.c10)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM t0, rt0 WHERE (((('2008012142') ISNULL) IN ())) GROUP BY (- (((rt0.c1) BETWEEN (NULL) AND (t0.c33)))), ((((json_extract(t0.c10, rt0.c0))OR(((t0.c33) NOTNULL))))OR(rt0.c0 COLLATE RTRIM)), CAST((t0.c10 IN ()) AS TEXT); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) NOT NULL) AS TEXT) FROM t0, rt0 ORDER BY (((((~ (t0.c33)))OR(t0.c10)))AND(HEX(t0.c10))) DESC, CASE WHEN ((rt0.c1) IS FALSE) THEN 0.30279537139025914 ELSE ((rt0.c1)%(t0.c33)) END; -- 1ms;
SELECT DISTINCT ((((((((((((SUM(rt0.c0))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(rt0.c0 COLLATE NOCASE)))OR(t0.c33 COLLATE NOCASE)))OR((((rt0.c1))>((rt0.c2))))))OR(rt0.c2 COLLATE RTRIM)))OR(rt0.c0 COLLATE RTRIM)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (NOT (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE t0.c33 END)) FROM rt0 WHERE ((((('') ISNULL))!=(DATETIME('m4N3sHJ', x'', '0.04268783499433004', 0.17482219521244535, NULL))));SELECT ((((t0.c33)*(rt0.c2))) NOT BETWEEN ((+ (rt0.c1))) AND ((((((((('-1743451089')OR(t0.c10)))OR(x'')))OR(rt0.c0)))OR(0.8042480363916684)))) FROM t0, rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c1)AND(rt0.c0)))AND(0.2237191628478178)))AND(t0.c10)))AND(t0.c33))) NOTNULL), ((t0.c33 COLLATE RTRIM) BETWEEN (((rt0.c2)<=(0x71ba7ad1))) AND (rt0.c0)), CAST(0.7543859514974213 AS BLOB) FROM rt0, t0 LIMIT 1050420410 OFFSET 1237319387; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c2)) IS TRUE), ((COUNT(*)) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(t0.c33)))AND(t0.c10)))), ((((((((rt0.c0 COLLATE NOCASE)AND(((t0.c33) BETWEEN (rt0.c2) AND (t0.c10)))))AND(CAST(t0.c33 AS NUMERIC))))OR((rt0.c1 IN ()))))OR(rt0.c1 COLLATE RTRIM)) FROM t0 WHERE ((+ (CAST(0.9884823942264205 AS INTEGER)))) LIMIT -1653026002 OFFSET 913030056;SELECT DISTINCT ((COUNT(*))|(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, t0 WHERE (MIN((- (NULL)), json_quote(x''))) LIMIT 1694907721;SELECT DISTINCT ((t0.c10 COLLATE NOCASE) NOT NULL) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c33)OR(rt0.c1)))OR(rt0.c1))) IS FALSE) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), (LIKELY(t0.c10) IN ()), (((((((((((rt0.c0)) NOT BETWEEN ((t0.c10)) AND ((rt0.c2))))OR((- (rt0.c0)))))AND(rt0.c1)))OR(CASE t0.c10  WHEN t0.c10 THEN rt0.c1 ELSE t0.c33 END)))AND(UPPER(t0.c10))) FROM rt0, t0 WHERE (((((CAST('1-500000' AS BLOB))OR(CAST(x'' AS REAL))))OR(((0.4899090691944398) ISNULL)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE (((CAST(')\n' AS REAL))>>(((0.28991543176410395)||(x'2afa'))))); -- 0ms;
SELECT (((+ (t0.c10))) NOT NULL), ((t0.c10 COLLATE BINARY) IS TRUE), ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2)LIKE(t0.c33))) AND ('')) FROM t0 ORDER BY CAST(((rt0.c1) NOT BETWEEN (t0.c33) AND (t0.c33)) AS BLOB) DESC  NULLS LAST;SELECT (x'' IN (CAST(rt0.c2 AS BLOB))), (((t0.c33 IN ())) NOT BETWEEN (IFNULL(rt0.c0, t0.c10)) AND (((t0.c33)>('-1688752738')))), COUNT(AVG(rt0.c0)) COLLATE NOCASE FROM t0, rt0 WHERE (((((((x'f366')-(0.16164138947169848)))AND((((0.2480719685190752))>((NULL))))))OR(x'' COLLATE BINARY)));SELECT ALL ((UNLIKELY(1367427628)) NOT BETWEEN (CASE WHEN t0.c10 THEN rt0.c2 END) AND (((rt0.c1)%(t0.c33)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM t0 WHERE (CAST(CAST(NULL AS REAL) AS INTEGER));SELECT DISTINCT ((MIN(rt0.c1)) BETWEEN (((t0.c33)OR(rt0.c1))) AND (((t0.c10) NOT BETWEEN (t0.c10) AND (rt0.c0)))), t0.c33 COLLATE RTRIM, NTH_VALUE(((LOWER(rt0.c1)) IS FALSE), '-2034154363') OVER ( ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN t0.c33 END THEN (rt0.c0 IN ()) END, (CASE 0X2c8e6ff  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c33 WHEN t0.c10 THEN rt0.c2 ELSE 0.061405443007402805 END IN ()) GROUPS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS) FROM t0, rt0 WHERE (((COALESCE(0.2050153079240391, '-728573191'))>=('1220556177')));SELECT DISTINCT '' FROM t0 WHERE ((((-1041263946, x'', x'')) NOT BETWEEN ((((('837810116', -1.592437488E9, 0.4425005351884833))<>((NULL, NULL, NULL))), 633140196 COLLATE RTRIM, 7.63048668E8 COLLATE NOCASE)) AND (((('#') NOT BETWEEN (NULL) AND ('531361390')), (('\nP윗P}0')IS NOT(0.06508110003342582)), ('-261265141' IN ()))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM t0;SELECT DISTINCT AVG(rt0.c0 COLLATE NOCASE) FROM t0, rt0 LIMIT 1342967934; -- 0ms;
SELECT DISTINCT ((t0.c10) NOTNULL) COLLATE BINARY FROM rt0, t0; -- 0ms;
SELECT COALESCE(DISTINCT json_remove(t0.c10, rt0.c2), rt0.c2, ((t0.c10) BETWEEN (t0.c10) AND (rt0.c0)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2))) FROM t0, rt0 GROUP BY rt0.c2 HAVING ((((t0.c33)<<(t0.c33))) NOT BETWEEN (NULL) AND (t0.c33)); -- 1ms;
SELECT DISTINCT (((((rt0.c1)AND(0.9490200632968289)))AND(rt0.c0)) IN ((t0.c33 IN ()))) FROM rt0, t0; -- 0ms;
SELECT (((((t0.c10, t0.c33, t0.c10, t0.c33, t0.c33)) NOT BETWEEN ((rt0.c1, rt0.c1, t0.c10, t0.c33, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c1, t0.c10, rt0.c1))))>=(CAST(t0.c10 AS INTEGER))), CAST(((((rt0.c2)AND(t0.c33)))AND(rt0.c0)) AS INTEGER), ((((((((CASE t0.c33  WHEN t0.c10 THEN t0.c33 ELSE rt0.c1 END)AND(((rt0.c1) ISNULL))))OR((('Ӯ**&-JM#') NOTNULL))))OR((rt0.c2 IN (t0.c10, t0.c10)))))AND(((0.42512093879596513) IS TRUE))) FROM t0, rt0 WHERE ((((x'') NOT NULL) IN ())); -- 0ms;
SELECT (((SUM(t0.c33), LOWER(DISTINCT rt0.c0), rt0.c0 COLLATE RTRIM, (rt0.c1 IN ()), rt0.c1))==((((x'') ISNULL), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c33))), ((rt0.c0) NOT BETWEEN (t0.c10) AND (rt0.c2)), ((t0.c10)/(t0.c33)), (((rt0.c2)) NOT BETWEEN ((t0.c10)) AND ((t0.c10)))))), ((rt0.c1)<=(UNLIKELY(rt0.c1))), COUNT((+ (rt0.c0))) OVER () FROM rt0 WHERE (((((x'') NOT NULL))GLOB((((((((('-1391081928')OR('0.30279537139025914')))AND(NULL)))AND(NULL)))OR(x'')))));SELECT DISTINCT NULL, (~ ((~ (0.12477699479622673)))), CAST(t0.c10 AS BLOB) COLLATE NOCASE, rt0.c1, NULL FROM t0 LIMIT 1972113133 OFFSET -261265141;SELECT ((TRIM(rt0.c2, t0.c33))&(CASE rt0.c2  WHEN t0.c33 THEN t0.c33 END)) FROM t0 WHERE ((NOT (((('1578018305', 0.08083814468453598, NULL)) NOT BETWEEN (('Vija', NULL, 0.7773768038416834)) AND ((0.2275273545075206, 0.12873326353712233, 'R!\n)Nn]6')))))) LIMIT -902090161 OFFSET 1702985215;SELECT DISTINCT '1523235301' FROM t0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)<=(t0.c33)) AS BLOB), ABS(DISTINCT ((rt0.c1)<=(NULL))), ((((((((((x'') ISNULL))OR(((rt0.c2)||(rt0.c0)))))AND(((t0.c33)<>(rt0.c2)))))OR(-1872190925)))AND(t0.c10)) FROM t0, rt0 WHERE ((~ ((+ (0.9319639966352041))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)IS(t0.c33)) AS NUMERIC), (((((rt0.c1)<<(rt0.c0))))>((rt0.c0 COLLATE RTRIM))), ((((((((((t0.c33)AND(t0.c33)))OR(t0.c33)))OR(rt0.c1)))AND(t0.c33)))/((rt0.c0 IN (t0.c33)))), ((((NOT (t0.c33))))>((((((rt0.c1)OR(t0.c33)))AND(t0.c33))))), SUM(NULL) FROM t0, rt0; -- 1ms;
SELECT (((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), CASE rt0.c1  WHEN rt0.c0 THEN t0.c33 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN t0.c33 WHEN t0.c33 THEN 0.2050153079240391 WHEN NULL THEN t0.c33 ELSE 'p<ᮚ_Y4m2J' END, rt0.c0 COLLATE NOCASE)) AND (((NOT ('486668501')), 1.702985215E9, (~ (t0.c33))))), ((((((((((t0.c10)LIKE(rt0.c1)))OR(TOTAL(rt0.c0))))OR(((t0.c10) IS FALSE))))OR(((t0.c10)OR(rt0.c1)))))OR(((rt0.c1) IS FALSE))), PERCENT_RANK() OVER ( ORDER BY CAST(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND('-613808249')))OR(rt0.c1)) AS NUMERIC) DESC  NULLS FIRST) FROM t0 WHERE (CAST(((NULL) NOT BETWEEN ('-1653026002') AND (NULL)) AS NUMERIC));SELECT UPPER(rt0.c2 COLLATE BINARY) FROM t0, rt0; -- 0ms;
SELECT TOTAL(((rt0.c2) BETWEEN (rt0.c0) AND (''))) OVER (), (((rt0.c0 IN ()))<=(((((rt0.c2)AND(rt0.c2)))OR(t0.c10)))), (((rt0.c1 COLLATE NOCASE))<=((((rt0.c0)<>(rt0.c2))))), NULL, GROUP_CONCAT(CASE rt0.c0  WHEN t0.c10 THEN t0.c10 ELSE t0.c10 END) OVER ( PARTITION BY CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c2)>(x'')) THEN ((rt0.c0) NOT NULL) ELSE LIKELY(DISTINCT rt0.c0) END, ROUND(((t0.c33)|(rt0.c0)), ((rt0.c1)||(rt0.c2))) ROWS BETWEEN  UNBOUNDED PRECEDING AND (((~ (t0.c33))) BETWEEN (IFNULL(t0.c10, rt0.c2)) AND (ROUND(rt0.c2, rt0.c1))) PRECEDING) FROM t0 WHERE (((((((((LIKELIHOOD(-1.8215842E8, 0.8146670878147428))OR(CAST(0.24096334066011438 AS REAL))))AND(((0.9251713211232976) NOTNULL))))AND(NULLIF(x'76f9', 0.9727604665527881))))OR(((x'c252') NOT BETWEEN (0.252836754379002) AND (x'44c2')))));SELECT ALL (((((rt0.c0) NOTNULL), ((t0.c33) NOT BETWEEN (rt0.c1) AND (rt0.c2)), x''))<=((CAST(rt0.c0 AS NUMERIC), CASE t0.c33  WHEN rt0.c2 THEN t0.c33 WHEN t0.c33 THEN t0.c33 WHEN rt0.c0 THEN rt0.c1 END, ((((rt0.c2)AND(t0.c33)))AND(rt0.c1))))) FROM rt0;SELECT PERCENT_RANK() OVER ( ORDER BY ((((((rt0.c1)AND(t0.c10)))OR(rt0.c1)))||(((((((((rt0.c2)OR(0.9910369624971559)))OR(x'bd64')))AND(t0.c10)))AND(t0.c33))))) FROM rt0, t0 WHERE (((0.26019474233096196 COLLATE RTRIM)+(((((((((NULL)AND(x'a0d7')))OR('')))AND(x'')))AND(''))))) ORDER BY (NULL IN ()) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((((rt0.c1) NOT NULL), ((t0.c10) IS FALSE), LIKELIHOOD(DISTINCT t0.c10, 6.469065868608403E-4)))=((TYPEOF(t0.c10), (+ (t0.c10)), ((rt0.c2)>>(rt0.c1))))), ((GROUP_CONCAT(rt0.c1))IS NOT((((rt0.c0, NULL, t0.c10))<((rt0.c0, t0.c10, t0.c33))))), ((((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(t0.c10)))OR(rt0.c0)))OR(t0.c10)))AND(rt0.c2))) BETWEEN (0.6035301052779912) AND (CASE t0.c33  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)) FROM t0, rt0 WHERE ((NOT (((((')gRmOeY^F')OR(NULL)))OR(0.25699006102934885))))) ORDER BY CAST((rt0.c1 IN (t0.c10)) AS TEXT) DESC; -- 1ms;
SELECT (- (CASE WHEN rt0.c1 THEN rt0.c0 END)) FROM rt0 ORDER BY LOWER(DISTINCT ((((t0.c10)OR(t0.c10)))AND(t0.c10)))  NULLS LAST, CAST(NULL AS TEXT) DESC  NULLS LAST, CAST(NULL AS NUMERIC) ASC  NULLS LAST LIMIT -302611116;SELECT (COUNT('0.1527231784640013') IN ()) FROM rt0, t0 WHERE (IFNULL(DISTINCT (- (NULL)), (('')%(x'')))); -- 0ms;
SELECT ALL '' COLLATE RTRIM COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL (((((((((~ (rt0.c1)))OR(((((t0.c33)AND(rt0.c0)))AND(rt0.c2)))))AND(CAST(t0.c10 AS REAL))))OR(rt0.c1)))AND(CAST(rt0.c2 AS BLOB))) FROM rt0, t0 WHERE (((((NULL)>>(x'4f22')))>=((+ ('0.4609446879095901'))))); -- 0ms;
SELECT DISTINCT rt0.c1, NULL, ((CHANGES()) BETWEEN (t0.c33) AND ((+ (t0.c33)))), rt0.c1, (((- (t0.c33)))=(((t0.c10)>(rt0.c0)))) FROM t0 WHERE ((((((((NULL))<=(('0.4591659017957783'))))OR(CAST(x'0ec1' AS NUMERIC))))AND(CASE WHEN x'527b' THEN NULL WHEN 'Y^scmy' THEN -2.32599956E8 WHEN -1862886515 THEN 1.491586932E9 ELSE x'' END)));SELECT (+ ((+ (rt0.c2)))), (((((((t0.c10))>=((t0.c10))))OR(CAST(0.09031205607334658 AS INTEGER))))OR(MAX(t0.c33))), CUME_DIST() OVER (), ((((rt0.c1)==(t0.c33))) ISNULL), LAG((((t0.c10)) BETWEEN (((((rt0.c2, t0.c10, t0.c33)) NOT BETWEEN ((x'3eda', rt0.c1, t0.c10)) AND ((rt0.c1, rt0.c2, t0.c33))))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL)))))), ((UNICODE(rt0.c1))!=((- (x'')))), ((t0.c10) NOT BETWEEN (rt0.c1) AND (t0.c10)) COLLATE BINARY) OVER ( PARTITION BY (((CAST(rt0.c1 AS TEXT)))==((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))), (+ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ORDER BY ((((t0.c10)<<(t0.c10))) NOT BETWEEN (((t0.c33)<(rt0.c1))) AND (t0.c10 COLLATE BINARY))  NULLS LAST RANGE (((rt0.c1)) BETWEEN ((t0.c10 COLLATE BINARY)) AND ((CASE rt0.c1  WHEN rt0.c1 THEN t0.c10 ELSE rt0.c1 END))) PRECEDING) FROM t0, rt0 GROUP BY NULL; -- 1ms;
SELECT DISTINCT ((HEX(DISTINCT t0.c10))IS NOT(TOTAL(t0.c33))) FROM rt0 WHERE ((((0.23669887951795776 COLLATE BINARY))!=(((NULL IN ())))));SELECT (+ ((rt0.c1 IN ()))) FROM rt0 WHERE (CAST(CASE 0Xffffffffc2d3ee11  WHEN NULL THEN x'' WHEN 0.1293076972965982 THEN x'' WHEN '?p' THEN 'U*|qX\+' ELSE NULL END AS INTEGER)) ORDER BY (~ (((rt0.c1) NOT NULL)))  NULLS FIRST; -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((CAST(t0.c33 AS REAL))) AND ((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c10))))) FROM rt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (NULL) AND (-1.041263946E9)) THEN (('1000059513')|(0x262f2e56)) WHEN (((0.4278392376189959))==((0.20799931676867445))) THEN ('#' IN ()) WHEN (+ (0.41175259610724624)) THEN CAST(x'' AS INTEGER) END);SELECT ALL ((t0.c10 IN (t0.c33)) IN ()) FROM rt0, t0 ORDER BY ((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c33)))AND(NULL)))OR(rt0.c0)))&((- (rt0.c1)))) DESC  NULLS FIRST, (x'' IN ()) DESC; -- 0ms;
SELECT MIN(((t0.c33)&(rt0.c2))), SUM(CAST(rt0.c0 AS NUMERIC)), ((rt0.c1)IS(CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c10 THEN t0.c10 WHEN rt0.c1 THEN t0.c10 WHEN rt0.c1 THEN t0.c33 WHEN rt0.c2 THEN rt0.c1 END)), (- (t0.c33)) COLLATE BINARY, ((((t0.c10)LIKE(rt0.c1)))>(((rt0.c1)OR(rt0.c2)))) FROM rt0, t0 WHERE ((((((x'')) BETWEEN ((0.4791229581336027)) AND ((x'cf5d'))))&(UPPER('1352758843')))); -- 0ms;
SELECT ALL (((((rt0.c1) IS FALSE)))<((CASE WHEN t0.c33 THEN t0.c33 WHEN t0.c10 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN t0.c33 WHEN rt0.c2 THEN t0.c10 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN t0.c33 ELSE t0.c33 END))), '990504120' COLLATE RTRIM, SUM(((t0.c33)%(rt0.c2))) OVER () FROM rt0 NOT INDEXED, t0 WHERE (((((x'bd1e')/(0.775324741217687))) BETWEEN (((0.16023415770705052) NOT NULL)) AND ((('1352758843') NOT BETWEEN ('0') AND (NULL))))) LIMIT -1697606454 OFFSET 165407936; -- 1ms;
SELECT CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) FROM t0, rt0 WHERE ((((((NULL)) NOT BETWEEN ((x'')) AND ((NULL)))) BETWEEN (((((((((NULL)AND(NULL)))AND('0.5013579635559569')))OR('^C9Je z')))OR(''))) AND (((((' |')AND(x'c6c9f115')))OR(x''))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c10 AS NUMERIC))>((((rt0.c0))==((rt0.c2))))) FROM rt0;SELECT CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))  WHEN ((t0.c10) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2)GLOB(t0.c33)) ELSE DATE(rt0.c1, rt0.c0, rt0.c0) END FROM t0;SELECT ALL (- (UNLIKELY(DISTINCT t0.c10))), CAST(((((x'')AND(rt0.c1)))AND(x'b2e7')) AS BLOB), SUM(COUNT(*)) FROM rt0;SELECT DISTINCT ((t0.c10 IN ()) IN ()) FROM t0; -- 0ms;
SELECT ALL HEX(GROUP_CONCAT(rt0.c1)), ((t0.c33) IS TRUE), CASE (rt0.c0 IN ())  WHEN GROUP_CONCAT(t0.c33) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '' END WHEN STRFTIME(rt0.c2, rt0.c2, t0.c10, t0.c10, rt0.c0) THEN (((rt0.c0))>((rt0.c2))) WHEN CASE WHEN rt0.c1 THEN t0.c10 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((t0.c10))) WHEN ((t0.c33) BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c1)<<(t0.c33)) WHEN ((t0.c33)&(t0.c33)) THEN SUM(rt0.c0) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)) THEN TRIM(DISTINCT rt0.c2, rt0.c1) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c1, rt0.c1, t0.c33))>=((t0.c33, x'', rt0.c1))) END FROM rt0;SELECT COUNT(*) FROM rt0 NATURAL JOIN t0; -- 0ms;
SELECT ALL ((MAX(t0.c10))LIKE(CAST(t0.c10 AS REAL))), (CAST(rt0.c0 AS NUMERIC) IN (CAST(t0.c33 AS TEXT), COUNT(x'9237'))), (((('') NOTNULL)) NOT BETWEEN (rt0.c1) AND (((rt0.c0)LIKE(t0.c10)))) FROM t0 WHERE (((CAST('PVW' AS TEXT))==(CASE WHEN 0.04995451596845979 THEN x'' ELSE -1258266965 END)));SELECT ALL ((((rt0.c0)IS(t0.c33))) BETWEEN (SUM(t0.c10)) AND (t0.c10)), ((CASE WHEN rt0.c0 THEN NULL ELSE rt0.c2 END) BETWEEN (COUNT(*)) AND ((- (rt0.c0)))), MIN(CAST(rt0.c1 AS TEXT)) FROM t0 WHERE (CASE CASE NULL  WHEN x'5b30' THEN 1.63252329E8 WHEN 'D' THEN -744582377 WHEN x'' THEN 0.686356518370749 WHEN 0.07807251575301077 THEN x'c050' WHEN 0.26019474233096196 THEN NULL END  WHEN (NOT (x'4a02')) THEN ((NULL)<(x'7ddc')) END) GROUP BY ((CAST(rt0.c2 AS NUMERIC))<>(((t0.c33)<>(t0.c33)))), (t0.c33 IN ()) COLLATE RTRIM, (NOT (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c10 THEN rt0.c1 WHEN t0.c10 THEN rt0.c1 END)), HEX(DISTINCT CAST(t0.c33 AS TEXT)), CAST(t0.c10 AS INTEGER), t0.c10, (CASE WHEN t0.c10 THEN rt0.c0 END IN (t0.c10));SELECT ALL (((rt0.c2) BETWEEN (rt0.c0) AND (0.518809092765266)) IN ()) FROM t0, rt0 WHERE (TRIM((+ (NULL)), '-1967574711' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS INTEGER))/(((t0.c10) BETWEEN (rt0.c1) AND (rt0.c1)))), ((x'') NOT NULL), UNLIKELY(DISTINCT ((rt0.c1)*(rt0.c1))), ((t0.c10) NOTNULL), TOTAL(((t0.c33) ISNULL)) OVER () FROM t0, rt0; -- 0ms;
SELECT CAST(((t0.c10) BETWEEN (rt0.c2) AND (t0.c33)) AS TEXT), (NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))), (((((rt0.c1))=((0.5874732799331764))))GLOB(rt0.c1 COLLATE BINARY)) FROM rt0 WHERE ('');SELECT ((HEX(rt0.c0)) IS TRUE), ((t0.c33)>('1103248575')), ((TRIM(rt0.c0)) NOT BETWEEN ((((t0.c10)) BETWEEN ((t0.c10)) AND ((t0.c33)))) AND (((t0.c33) BETWEEN (t0.c10) AND (t0.c10)))), (NOT (((rt0.c2) BETWEEN (NULL) AND (rt0.c1)))), CASE t0.c33  WHEN NULL THEN t0.c10 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c33 THEN rt0.c2 END COLLATE BINARY FROM t0;SELECT DISTINCT rt0.c1, CASE CASE WHEN rt0.c0 THEN '-781191683' WHEN t0.c10 THEN rt0.c0 WHEN '352876116' THEN t0.c33 ELSE NULL END  WHEN (('266138289')LIKE(rt0.c1)) THEN CHAR(rt0.c1, rt0.c0, t0.c33) ELSE AVG(rt0.c2) END, ((CAST(rt0.c0 AS REAL))||('')) FROM t0 WHERE (CASE WHEN ((x'') NOTNULL) THEN CAST(0.37507376666568104 AS REAL) END);SELECT ((((t0.c10) NOT BETWEEN (t0.c10) AND (t0.c10)))/(((NULL)<(0X65063d49)))), MIN('-1e500' COLLATE BINARY), ((((ABS(DISTINCT '	'))AND(NULL)))OR((((t0.c33))=((rt0.c0))))) FROM t0, rt0 WHERE (TRIM(DISTINCT ((NULL)>=(0.921649365560545)), ((NULL)<>(0.9651960175731422)))); -- 0ms;
SELECT ALL COUNT(CAST(rt0.c0 AS TEXT)) OVER () FROM t0, rt0 WHERE (((0.14160959915801286 COLLATE BINARY)||(x''))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c0 IN ())) FROM rt0 NOT INDEXED, t0; -- 0ms;
SELECT ALL CASE ((t0.c10)>>(t0.c33))  WHEN ((rt0.c0)&(rt0.c2)) THEN x'' WHEN ((t0.c33)AND(rt0.c1)) THEN (((rt0.c0))<>((t0.c10))) WHEN CASE WHEN '-482357171' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c10 THEN t0.c10 END THEN json_array_length(rt0.c0) WHEN (rt0.c1 IN ()) THEN COUNT(rt0.c2) WHEN SUM(t0.c33) THEN LENGTH(rt0.c2) ELSE CAST(t0.c33 AS INTEGER) END FROM rt0, t0 WHERE ((((((0.14562871234490538)) BETWEEN ((NULL)) AND ((x''))))!=((('TRUE')>=(0.11371557118187003))))); -- 0ms;
SELECT ALL COUNT(*) OVER (), (((((rt0.c0))<>((t0.c33))))>=((((rt0.c2, t0.c33, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, NULL)) AND ((t0.c10, t0.c33, t0.c33))))), 0.09106206707857478, (((rt0.c0)) NOT BETWEEN ((((NULL)<<(1.28181817E9)))) AND ((SUM(x'')))), COUNT(CAST(rt0.c0 AS INTEGER)) FROM t0;SELECT DISTINCT CAST(CAST(t0.c10 AS BLOB) AS INTEGER) FROM t0 WHERE ((((((((((('')OR(NULL)))AND('r)')))OR(x'')))OR(x''))) NOT BETWEEN (NULL COLLATE NOCASE) AND (((0.4801071517241453)IS NOT(NULL))))); -- 0ms;
SELECT DISTINCT ((((((x'd753') IS TRUE))AND(((rt0.c2)GLOB(rt0.c1)))))AND(rt0.c2)) FROM t0;SELECT DISTINCT (LIKELIHOOD(rt0.c2, 0.44910527093434127) IN ()) FROM rt0 WHERE (((((NULL) NOTNULL)) NOT BETWEEN ((('') NOTNULL)) AND (ABS(x'')))); -- 0ms;
SELECT ALL NTH_VALUE((((t0.c33 COLLATE BINARY))>=((((t0.c10)>=(t0.c33))))), t0.c33) OVER () FROM t0;SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE (CAST((((NULL))<((0.29039671551497204))) AS TEXT)); -- 0ms;
SELECT COUNT(*) OVER () FROM rt0 WHERE (((x'f0da') NOTNULL)); -- 1ms;
SELECT ALL (((((NOT (t0.c10)))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND((((rt0.c0))>=((rt0.c2))))) FROM t0 WHERE (CASE WHEN x'7e18' THEN COALESCE(DISTINCT NULL, '') END) GROUP BY CAST(CAST(0.14473626222499303 AS NUMERIC) AS BLOB), t0.c10, ((((t0.c10, rt0.c2, t0.c10)) BETWEEN ((t0.c33, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))) IN ());SELECT DISTINCT CAST('3(' AS INTEGER) FROM t0 WHERE ((((x'') ISNULL) IN ())) ORDER BY ((LIKELY(-1.022115131E9))+(((rt0.c2)=(t0.c33)))) ASC;SELECT DISTINCT RANK() OVER () FROM rt0 WHERE ((((0.710638274479931)) NOT BETWEEN ((NULL COLLATE BINARY)) AND ((((('0.10966682986676413'))<>((''))))))); -- 0ms;
SELECT DISTINCT ((((((t0.c10)&(t0.c10)))OR(CASE rt0.c1  WHEN t0.c33 THEN 2078526271 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN t0.c33 END)))AND((t0.c10 IN ()))), (x'83fe' IN ()), (((CAST(rt0.c2 AS REAL)))>((CASE t0.c10  WHEN rt0.c2 THEN t0.c10 END))) FROM t0 WHERE (NULLIF(CASE WHEN NULL THEN '486668501' ELSE NULL END, '1972113133' COLLATE BINARY)) GROUP BY (TYPEOF(990504120) IN (((x'c0b5') NOTNULL)));SELECT DISTINCT (((rt0.c0)-(t0.c33)) IN ((rt0.c2 IN ()))) FROM rt0, t0 WHERE (((((0.6912809881551203) NOT BETWEEN ('') AND (0X18a62629)))>>(((0x77afd56e)/('-1702739903'))))); -- 0ms;
SELECT DISTINCT (((t0.c33)) BETWEEN ((rt0.c2)) AND ((((((rt0.c0)OR(rt0.c2)))OR(t0.c33))))) FROM rt0, t0 WHERE (CASE WHEN ((-1026298351) BETWEEN (0.03731231771842902) AND (x'da0e')) THEN ((((((((((((0.04464813149265201)AND(0.3208397395458785)))AND(NULL)))AND('-618369620')))AND(NULL)))OR('1103248575')))OR('0.30279537139025914')) END) LIMIT -1281967381; -- 0ms;
SELECT DISTINCT 0.11551100106200152 FROM t0, rt0 INDEXED BY i84 WHERE ((NOT ((NULL IN ()))));SELECT ALL (('d')|(MIN(t0.c10))) FROM t0, rt0 WHERE ((((((('421729732') BETWEEN (x'') AND ('')))AND(((x'')>>(NULL)))))AND((((NULL)) NOT BETWEEN ((x'198f')) AND ((NULL)))))); -- 0ms;
SELECT ((rt0.c1)%(rt0.c2)) COLLATE NOCASE, ((((((rt0.c0)!=(t0.c33)))AND(rt0.c0)))AND(((t0.c33)>>(rt0.c2)))), (((t0.c10 IN ())) IS TRUE) FROM t0, rt0 WHERE (CASE (NULL IN ())  WHEN 0.9500436986723207 THEN ((NULL)<=(-1425335398)) WHEN ((0.8242116042588995)AND('0.1117917412323417')) THEN (('-305514473')+(x'')) WHEN '1494877886' THEN ((4.07589639E8)>(x'')) ELSE ((((NULL)OR(x'8387')))OR(NULL)) END); -- 0ms;
SELECT DISTINCT (- (t0.c33)) COLLATE BINARY FROM rt0;SELECT ALL ((x'')AND(((((t0.c33)OR(t0.c10)))OR(rt0.c1)))) FROM t0, rt0; -- 0ms;
SELECT CAST(rt0.c0 AS INTEGER) FROM t0 LIMIT 1558135888 OFFSET 215665556;SELECT ALL MIN(x'') FROM rt0 WHERE (((((('0.9884823942264205') NOT BETWEEN ('-619448375') AND (x'')), x'' COLLATE RTRIM, ((0Xffffffffccc8cb99)>=(NULL))))<>((((NULL)>=(0.9490200632968289)), LOWER(DISTINCT x''), ((x'') NOT NULL))))) GROUP BY t0.c33 LIMIT 1049595473 OFFSET -2132951938;SELECT DISTINCT CASE ((((rt0.c2)AND(x'')))OR(rt0.c1))  WHEN CASE WHEN t0.c33 THEN t0.c33 END THEN DATETIME(rt0.c0, t0.c33, rt0.c2, rt0.c0, t0.c33) END, LAST_VALUE(((((((t0.c33)OR(t0.c33)))AND(t0.c10)))+(0.846779830259007 COLLATE BINARY))) OVER (), TOTAL(((rt0.c0)!=(rt0.c2))) FROM t0, rt0 LIMIT 1199117829 OFFSET -583900595; -- 1ms;
SELECT DISTINCT TRIM(DISTINCT (- (t0.c33)), rt0.c1), CAST(((rt0.c0)<=(t0.c33)) AS REAL), CASE WHEN (((t0.c10, rt0.c0, t0.c10)) NOT BETWEEN ((rt0.c2, t0.c10, 1519703059)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN MIN(rt0.c1) ELSE (rt0.c1 IN (rt0.c2)) END FROM rt0 LIMIT -902090161;SELECT ALL (rt0.c0 IN ()) FROM rt0, t0; -- 0ms;
SELECT ((rt0.c0)||(t0.c33)) COLLATE BINARY, ((((((((STRFTIME(rt0.c1, t0.c33, rt0.c0, t0.c10, rt0.c1))OR(t0.c10)))OR(((rt0.c0)>>(NULL)))))AND(rt0.c0)))OR(((((rt0.c1)OR(t0.c33)))OR(rt0.c1)))), ((((rt0.c0) IS FALSE)) ISNULL) FROM rt0, t0 ORDER BY CASE WHEN rt0.c2 THEN t0.c33 END COLLATE RTRIM DESC, CAST(((t0.c10)<=(t0.c33)) AS INTEGER) DESC; -- 0ms;
SELECT DISTINCT (((0.7988318934074583) BETWEEN (rt0.c2) AND (rt0.c1)) IN ()), ((NULL)<((NOT (rt0.c0)))), CAST('p-2636548117557682951:-3531094271921191529 1603 1410--5295262640276266958 720:3487422758656815352:2351730851254936706T1723:X' AS REAL), ((((rt0.c0)IS(t0.c33))) BETWEEN (TRIM(DISTINCT rt0.c0)) AND (t0.c10)), ((t0.c33 COLLATE NOCASE)IS(((((((((t0.c10)AND(t0.c10)))OR(rt0.c1)))OR(rt0.c1)))OR(t0.c10)))) FROM rt0, t0 GROUP BY CAST(((x'3871') ISNULL) AS REAL), ((((((rt0.c1)OR(rt0.c1)))AND(t0.c10)))||(CASE WHEN t0.c10 THEN t0.c33 END)), CASE WHEN ((t0.c10) ISNULL) THEN COALESCE(NULL, t0.c10) WHEN t0.c33 COLLATE BINARY THEN ((rt0.c2)%(rt0.c0)) WHEN ((rt0.c0) NOT NULL) THEN ((t0.c10) ISNULL) ELSE TRIM(DISTINCT rt0.c1, t0.c33) END HAVING CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t0.c10))) AS TEXT); -- 1ms;
SELECT COUNT((((t0.c33)) NOT BETWEEN ((rt0.c1)) AND ((t0.c10)))) OVER () FROM rt0 WHERE (x'8079');SELECT ALL ((GROUP_CONCAT('㵉%*1etXE')) NOTNULL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c2)==(rt0.c0)) THEN ((((rt0.c0)AND(rt0.c0)))AND(t0.c10)) END FROM rt0 WHERE ((((((x'')OR(-9223372036854775808)))OR(0.704177997330986)) IN ())) LIMIT 46720767;SELECT DISTINCT ((((((((((((((((rt0.c1)AND(NULL)))AND(t0.c10)))AND(rt0.c1)))OR(t0.c10)))AND(x'')))OR(NULL)))OR(rt0.c0 COLLATE NOCASE)))AND((t0.c10 IN ()))) FROM t0, rt0 WHERE (((((2.73167277E8) NOT BETWEEN (0.19444862705854815) AND (x'')))=(((0.5869533189198101)OR('-1453899224'))))); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c1))<=(((rt0.c1) ISNULL))), ((CAST(rt0.c1 AS REAL)) NOTNULL), ((rt0.c2 COLLATE RTRIM) ISNULL) FROM t0;SELECT NULL FROM t0 WHERE (((((TRIM(x'a2c63e6d'))AND(((0Xe3cc3e5) BETWEEN (x'') AND (x'')))))OR((((-1.022115131E9)) BETWEEN ((NULL)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((('^C9Je z')/(t0.c10)))-('1342967934'))) OVER () FROM t0 ORDER BY t0.c33 ASC; -- 0ms;
SELECT ((((rt0.c2 COLLATE BINARY)OR(((((0.027455392737756212)OR(rt0.c1)))AND(rt0.c0)))))OR(((rt0.c1) ISNULL))) FROM rt0, t0; -- 0ms;
SELECT (((rt0.c0, t0.c10, rt0.c1))>=((t0.c10, t0.c10, rt0.c2))) COLLATE NOCASE, ((((rt0.c0) BETWEEN (rt0.c1) AND (t0.c33))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((t0.c33)AND(rt0.c2)))), rt0.c2 FROM t0 WHERE (PRINTF('0.4101766091617912' COLLATE RTRIM));SELECT HEX(CAST(t0.c10 AS INTEGER)) FROM rt0, t0; -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE ((('-1766024135' IN ()) IN ())); -- 0ms;
SELECT DISTINCT LAG((((('-1812826310') BETWEEN (t0.c10) AND (t0.c33))) NOT NULL), CASE ((t0.c33) NOT BETWEEN (t0.c10) AND (t0.c33))  WHEN ((t0.c10)LIKE(t0.c10)) THEN (((NULL)) NOT BETWEEN ((t0.c33)) AND ((t0.c33))) ELSE MAX(t0.c10, t0.c33) END, ((load_extension(t0.c10)) NOT BETWEEN (LIKELIHOOD(t0.c33, 0.2360285434075664)) AND (CAST('z' AS REAL)))) OVER (), rt0.c0, ((t0.c33 COLLATE BINARY) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (t0.c33 COLLATE BINARY)) FROM t0;SELECT ALL CAST((((rt0.c2)) BETWEEN ((t0.c33)) AND ((t0.c10))) AS INTEGER) FROM t0 WHERE (CAST(NULL AS REAL) COLLATE RTRIM);SELECT DISTINCT 0.990185553869742 COLLATE NOCASE, SUM(NULL) OVER (), ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT load_extension(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)), rt0.c0 COLLATE NOCASE) FROM t0 WHERE (((('', NULL, '')) BETWEEN ((NULL COLLATE BINARY, ((0.6242689555572261) BETWEEN (2068068275) AND (-1399551837)), CAST(0.07362728928208273 AS INTEGER))) AND ((CAST(x'' AS NUMERIC), TRIM(DISTINCT ''), (((((((('-744582377')AND(0.7469225192346135)))OR(0.06376237819410235)))AND('0.0')))AND(0.6314363719059543))))));SELECT DISTINCT CASE WHEN COALESCE(DISTINCT 'gCw', rt0.c0) THEN ((rt0.c2) NOTNULL) END FROM t0, rt0 LIMIT 1908046545 OFFSET 1445786778; -- 0ms;
SELECT ((x'')IS NOT(rt0.c1)) FROM rt0 INDEXED BY i84 WHERE (CAST((((('1074158889')AND('ጮ{')))OR(0.6392040823464642)) AS INTEGER));SELECT ALL (((rt0.c2)>=(rt0.c0)) IN ()), ((GROUP_CONCAT(t0.c10))/(UPPER(DISTINCT '593655038'))), ((((rt0.c2)!=(t0.c10)))/(rt0.c2 COLLATE NOCASE)) FROM t0, rt0 LIMIT 1313819899 OFFSET 1496489242; -- 0ms;
SELECT ALL COUNT(*) FROM t0 WHERE ((((CAST('0.9115770674288785' AS TEXT), (~ (0.3568351540165162)), RTRIM('v}')))<=(((('1085766584') IS TRUE), (((((((('%/wMㅉ9P*')OR(0.4138763366696313)))AND(NULL)))AND(x'')))AND(0.7929802255163517)), x'')))) GROUP BY NULL, '*ꟍ', CAST((rt0.c0 IN ()) AS NUMERIC) LIMIT 1675538626; -- 0ms;
SELECT DISTINCT (~ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (0.12927348969528807)))), ((((((rt0.c2)IS(-183394614)))OR((rt0.c0 IN ()))))OR(t0.c33 COLLATE RTRIM)), t0.c10, GROUP_CONCAT(SUM(((t0.c10)IS(rt0.c2)))), ((CHANGES()) BETWEEN (TOTAL(rt0.c1)) AND ((t0.c10 IN ()))), ((COUNT(rt0.c1))>=(((NULL)>(t0.c33)))), ((+ (rt0.c0)) IN ((NOT (rt0.c0)))) FROM t0 WHERE ((((('') IS FALSE))<=((- (x'38b3')))));SELECT DISTINCT CAST(CASE t0.c10  WHEN t0.c33 THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN t0.c10 THEN rt0.c2 WHEN rt0.c0 THEN t0.c33 WHEN t0.c33 THEN rt0.c1 WHEN rt0.c0 THEN t0.c33 WHEN t0.c10 THEN rt0.c2 ELSE rt0.c0 END AS NUMERIC), CAST(rt0.c0 AS INTEGER) COLLATE RTRIM, (((rt0.c0) IS TRUE) IN ()) FROM t0, rt0 ORDER BY (((((NOT (rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL))); -- 0ms;
SELECT (NOT ((rt0.c2 IN ()))) FROM t0, rt0 NOT INDEXED ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (rt0.c2)) DESC  NULLS LAST, ((((t0.c10) NOT BETWEEN (t0.c10) AND (t0.c10)))<=(NULL COLLATE BINARY))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((MAX(t0.c10, t0.c33))IS(CASE WHEN t0.c10 THEN t0.c10 WHEN t0.c10 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)) FROM t0, rt0; -- 0ms;
SELECT ALL (NOT (((((rt0.c2)OR(t0.c10)))OR(t0.c33)))) FROM rt0, t0 WHERE ((((('t2')/(0X4c66fe3a)))OR(''))) LIMIT 329350052; -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(CAST(t0.c33 AS TEXT)) FROM t0, rt0; -- 0ms;
SELECT ALL TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c33)), ((0.8008022389704375) BETWEEN (rt0.c2) AND (rt0.c1))) FROM t0, rt0; -- 0ms;
SELECT ALL (+ (CAST(t0.c33 AS TEXT))) FROM t0; -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c1)) BETWEEN (CAST(t0.c33 AS BLOB)) AND ('-1453899224')) FROM rt0 WHERE (CAST(rtreenode('-1653026002', x'5d21') AS BLOB));SELECT ALL rt0.c2 FROM t0;SELECT DISTINCT rt0.c0, (TRIM(DISTINCT rt0.c2, t0.c10) IN ()), ((((((((((rt0.c0)AND(t0.c33)))AND(t0.c33)))OR(rt0.c0)))AND(t0.c10))) NOT BETWEEN (COUNT(*)) AND (t0.c10)) FROM rt0, t0 WHERE ((CAST(0.9143461208828619 AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT MIN(CASE WHEN rt0.c2 THEN t0.c10 ELSE t0.c33 END, ((((((((rt0.c1)OR(t0.c33)))AND(rt0.c1)))AND(rt0.c2)))AND(t0.c10)), CAST(t0.c33 AS REAL), CAST(0.9884823942264205 AS NUMERIC), ((t0.c10) BETWEEN (t0.c10) AND (rt0.c2)), ((rt0.c0)>(x'c0b9'))) FROM t0, rt0; -- 0ms;
SELECT ALL CUME_DIST() OVER (), LIKELIHOOD(((t0.c10)IS(rt0.c1)), 0.5561293630146135), CASE WHEN json_insert(t0.c10, rt0.c1, rt0.c2) THEN (((t0.c10))<>((rt0.c2))) END FROM t0;SELECT DISTINCT CASE WHEN CASE rt0.c2  WHEN t0.c33 THEN rt0.c2 ELSE t0.c33 END THEN CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c10 THEN t0.c33 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END ELSE -1422239209 END FROM t0 LIMIT 2007664622;SELECT DISTINCT t0.c33 FROM t0; -- 0ms;
SELECT ALL ((x'') BETWEEN (((((((((rt0.c1)OR(rt0.c0)))OR(0Xfffffffffcafea9d)))OR(rt0.c1)))AND(rt0.c0))) AND (((t0.c33) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM t0 WHERE (CASE WHEN CASE WHEN 'r!\n)nn]6' THEN NULL WHEN NULL THEN NULL WHEN 0.8042480363916684 THEN '' ELSE -1010273925 END THEN LIKELIHOOD(DISTINCT '', 0.35106826350488285) WHEN 1237319387 THEN LOWER(x'') WHEN (('')*('')) THEN (('_W')GLOB(0.14520662913532179)) ELSE CAST('-15171084' AS NUMERIC) END) LIMIT -1645454533 OFFSET -1731030395;SELECT NULL FROM t0 WHERE ((+ (x'' COLLATE BINARY))) LIMIT 1590935077 OFFSET -1825890165; -- 0ms;
SELECT ((((SUM(rt0.c2))AND(0X73964b9)))AND(NULL)) FROM t0 WHERE (((((((((((NULL)OR('\rm<E\s')))OR(0.8308080927152997)))AND(x'')))OR('q'))) ISNULL));SELECT (+ (CASE t0.c10  WHEN 'Vm︺]a' THEN t0.c33 END)), ((NULL)%((((t0.c10))=((t0.c10))))), CASE (('1694907721')<(rt0.c1))  WHEN ((rt0.c1) NOT NULL) THEN (((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((t0.c10, rt0.c2, t0.c33)) AND ((rt0.c1, rt0.c0, t0.c33))) WHEN TOTAL(t0.c33) THEN highlight(t0.c10, t0.c10, t0.c33, rt0.c1) WHEN (rt0.c0 IN ('', rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c33)) END FROM t0, rt0 WHERE (((((2084301768)AND(0.24739671109316153))) BETWEEN ('1156153198') AND (((x'')LIKE(0.678107855618873))))); -- 0ms;
SELECT (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c33)))) NOTNULL) FROM t0, rt0 WHERE (((x'2dee54fe') NOT NULL) COLLATE NOCASE); -- 0ms;
SELECT ((((t0.c33)AND(rt0.c1 COLLATE NOCASE)))AND(((t0.c33) IS FALSE))) FROM rt0, t0 WHERE (CASE ((((0.6978169992177248)OR(0.09561773936379159)))OR('271254898'))  WHEN TRIM(x'') THEN x'54f0' WHEN (('')OR(0.4815744068774569)) THEN ((0xffffffffed4c913b)/(NULL)) WHEN ROUND(x'', '1023496524') THEN ((((NULL)OR(NULL)))AND(x'')) END); -- 0ms;
SELECT ((((rt0.c2)|(t0.c10)))|(TRIM(DISTINCT rt0.c0))) FROM rt0, t0 LIMIT -1825623209 OFFSET -2134190076; -- 0ms;
SELECT ((((rt0.c1)%(rt0.c0))) NOT BETWEEN (((rt0.c1)%(rt0.c0))) AND ((rt0.c1 IN ()))) FROM t0, rt0 WHERE (((x'') NOT BETWEEN ('l#᯲A') AND ('-1743451089')) COLLATE RTRIM) UNION ALL SELECT DISTINCT t0.c33 FROM t0 NOT INDEXED; -- 0ms;
SELECT ALL ((((rt0.c0)+(t0.c10))) NOT BETWEEN ((('-1e500')/(rt0.c0))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c10))))), CUME_DIST() OVER ( PARTITION BY (t0.c33 COLLATE BINARY IN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))), json_array_length(((t0.c10) NOT BETWEEN (rt0.c2) AND (rt0.c1)))), SUM(((t0.c33) NOT NULL) COLLATE RTRIM) OVER () FROM rt0;SELECT ALL (((t0.c33)) NOT BETWEEN ((NULL)) AND (((((rt0.c2))<((rt0.c1)))))) FROM rt0 WHERE (((x'' COLLATE BINARY) BETWEEN (x'281c') AND (((((((((x'')OR(NULL)))OR(x'')))AND(NULL)))OR('1342967934'))))) ORDER BY x'b6d3' ASC LIMIT 1050420410 OFFSET -908906458;SELECT DISTINCT CASE WHEN json_patch(x'', rt0.c2) THEN ((t0.c10)|(rt0.c2)) WHEN IFNULL(t0.c10, rt0.c1) THEN ((rt0.c0)GLOB(rt0.c2)) WHEN CASE rt0.c1  WHEN 0x7777af84 THEN t0.c10 END THEN x'33a3fac8' ELSE LIKELY(t0.c33) END, ((((((t0.c10)AND(t0.c33)))AND(rt0.c1)))||(CAST(rt0.c0 AS TEXT))), ((((((t0.c33)AND(t0.c10)))OR(-4.82357171E8)))AND(CASE rt0.c2  WHEN 0X36024422 THEN t0.c10 END)) FROM rt0 ORDER BY (((((t0.c33))<=((rt0.c0))))OR(rt0.c0))  NULLS LAST;SELECT (rt0.c1 IN (((t0.c10) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), json_array(t0.c10, (4.07589639E8 IN (rt0.c0))), (((((((rt0.c2))<(('1237319387'))))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))) FROM rt0, t0 WHERE (CAST((+ (NULL)) AS INTEGER)); -- 0ms;
SELECT ((0.843692247011557)IS(0.08315011408397766)) COLLATE RTRIM, (- (((((rt0.c2)AND(rt0.c2)))AND(t0.c10)))), (((t0.c33)) BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (t0.c33) AND (rt0.c1))))) FROM rt0;SELECT DISTINCT (((((((((NULL IN (0.8581889746416937, rt0.c1, rt0.c2)))OR(rt0.c1 COLLATE BINARY)))AND(((((rt0.c2)OR(t0.c10)))AND(rt0.c1)))))AND((rt0.c1 IN (rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c0 THEN t0.c33 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c33 THEN rt0.c1 ELSE rt0.c1 END)), (((rt0.c0, t0.c10, t0.c33)) NOT BETWEEN ((COUNT(NULL), (((t0.c10))<>((t0.c10))), (NOT (rt0.c1)))) AND (((t0.c10 IN ()), ((rt0.c2)>=(rt0.c2)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))), CAST((NOT (t0.c33)) AS BLOB) FROM rt0;SELECT DISTINCT ((((t0.c33)OR(t0.c10)))OR((t0.c10 IN (t0.c10)))) FROM rt0, t0 WHERE (((((((NULL, -2116416296, 6.40626262E8)) BETWEEN ((NULL, 'PVW', NULL)) AND ((NULL, NULL, '8?')))))!=(((NOT (0.01073619539839743)))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT)) IS TRUE), ((rt0.c0)||(rt0.c0)), (((((t0.c10, rt0.c1, '-1646578083'))==((-1629087323, t0.c33, rt0.c2)))) IS TRUE) FROM rt0 WHERE (CAST((+ (0Xfffffffffd51d411)) AS BLOB));SELECT STRFTIME((((rt0.c1)) NOT BETWEEN ((t0.c10)) AND ((rt0.c2))), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), COUNT(*), ('-902090161' IN (rt0.c0, rt0.c1)), TRIM(DISTINCT rt0.c0, rt0.c1)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((t0.c10 COLLATE NOCASE))>((LIKE(t0.c33, t0.c10)))) FROM t0 WHERE (((SQLITE_SOURCE_ID())&((-1688752738 IN ())))); -- 0ms;
SELECT ALL CASE TOTAL(t0.c33)  WHEN ((((rt0.c1)AND(t0.c33)))OR(rt0.c1)) THEN -617107684 END, MIN(GROUP_CONCAT(((t0.c33) NOT NULL))), CASE WHEN ((rt0.c1)IS NOT(t0.c10)) THEN ((t0.c33)/(t0.c10)) ELSE t0.c10 END, rt0.c2, TRIM(rt0.c1, ((t0.c33)<<(rt0.c2))) FROM rt0 WHERE (json_array(0.9104695318823968 COLLATE RTRIM, NULL)) GROUP BY ((TRIM(rt0.c2, t0.c33)) IS TRUE) HAVING COALESCE(STRFTIME(rt0.c1, '1342967934', rt0.c2), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c10 THEN t0.c10 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END);SELECT ALL ((CASE WHEN t0.c33 THEN t0.c33 ELSE t0.c33 END) IS TRUE) FROM t0 WHERE (CASE WHEN 5.86359755E8 COLLATE NOCASE THEN NULL COLLATE RTRIM WHEN CASE '239708950'  WHEN 0.4107528904178319 THEN 0.4899090691944398 END THEN ((x'') NOT BETWEEN ('861575764') AND (1577586502)) WHEN CASE WHEN 0xffffffff932f3357 THEN '218771017' END THEN CASE WHEN 'q>u*	#r' THEN '' WHEN NULL THEN '-1872190925' WHEN x'8601' THEN 0.7080162846145818 ELSE '' END END); -- 0ms;
SELECT DISTINCT (((0xffffffffb468be4f IN ())) BETWEEN (UNLIKELY(0.025082627426060933)) AND ((t0.c33 IN ()))) FROM rt0 GROUP BY rt0.c1; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE ((+ ('E' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((t0.c33)>(t0.c33))) BETWEEN (IFNULL(t0.c33, rt0.c0)) AND (x'1426')), NULL, x'' FROM rt0;SELECT DISTINCT CASE WHEN (- (t0.c33)) THEN (((rt0.c1, rt0.c2, NULL))<=((rt0.c0, '', rt0.c2))) END FROM rt0, t0 WHERE (0.483605305866861); -- 5ms;
SELECT DISTINCT (NOT (((t0.c33)IS(rt0.c1)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c1))) BETWEEN (((t0.c33) BETWEEN (rt0.c1) AND (t0.c10))) AND (LIKELIHOOD(rt0.c0, 0.7429182724303713))) FROM rt0, t0; -- 0ms;
SELECT CAST(rt0.c2 COLLATE BINARY AS NUMERIC) FROM t0, rt0; -- 0ms;
SELECT NULL FROM rt0; -- 0ms;
SELECT (- ((~ (rt0.c1)))) FROM t0 WHERE (CASE '' COLLATE NOCASE  WHEN ((2025036001)>('cr')) THEN ((NULL) IS FALSE) END);SELECT SUM(((0.2768654692919502)||(rt0.c0))) OVER () FROM rt0, t0 WHERE ((((2.66138289E8)) BETWEEN ((CAST(-1041263946 AS BLOB))) AND ((((-584572220)IS(0.8089694106979592)))))); -- 0ms;
SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)AND(NULL)))AND(((t0.c10)GLOB(rt0.c2)))), AVG(CAST(t0.c10 AS BLOB)) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW), (((t0.c33, rt0.c2, rt0.c2)) BETWEEN ((AVG(rt0.c0), t0.c33, ((((rt0.c0)OR(rt0.c2)))OR('d[]f')))) AND ((0.11932302152396868, json_remove(rt0.c0, rt0.c2, rt0.c1, t0.c33), (((t0.c33))>=((t0.c10)))))), ((GROUP_CONCAT(t0.c10)) BETWEEN (((t0.c33)IS(t0.c10))) AND (AVG('165407936'))), ((((t0.c33)IS NOT(x''))) IS TRUE) FROM t0 WHERE ((- (((0.6355564925415726)>>(0.32284771661025957)))));SELECT (((MAX(t0.c33)))>=((((t0.c33) IS FALSE)))), UNLIKELY(t0.c10) COLLATE NOCASE, ((((((((TOTAL_CHANGES())OR(rt0.c1 COLLATE NOCASE)))OR((t0.c10 IN ()))))OR((t0.c10 IN ()))))AND(((rt0.c0) IS FALSE))) FROM t0;SELECT DISTINCT 'D䀅FOlPMwf' FROM t0 WHERE ((((((((((('uﳞ''Xwo+H.')AND('474276258')))OR(0.2050153079240391)))OR('hS')))OR(0.34584296968254113)))AND(IFNULL(0.30279537139025914, 0.5918519793800301)))) GROUP BY rt0.c0 HAVING t0.c10;SELECT ALL (((rt0.c2 IN ())) NOT BETWEEN (NULL) AND (0xfffffffff5247bac COLLATE NOCASE)) FROM t0 WHERE (NULL) LIMIT 1694907721 OFFSET -591032420; -- 0ms;
SELECT ((((AVG(rt0.c0))OR(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c2)<=(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT (~ (((t0.c10) NOT BETWEEN (rt0.c0) AND (t0.c33)))) FROM t0;SELECT ALL ((t0.c10 COLLATE BINARY)|(((rt0.c0) NOTNULL))) FROM t0;SELECT DISTINCT (((~ (rt0.c0)))-(COALESCE(t0.c10, rt0.c1, rt0.c1, rt0.c2))), CASE (- (t0.c33))  WHEN ((((rt0.c2)OR(t0.c33)))AND(t0.c10)) THEN CAST(t0.c33 AS REAL) ELSE '990504120' END, ((AVG(rt0.c1)) ISNULL) FROM t0 LIMIT 826472583 OFFSET -481449608;SELECT DISTINCT NULL FROM rt0 WHERE ((~ (0.5303472233523324 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CAST(TOTAL(t0.c33) AS INTEGER) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (- (NULL)) FROM rt0, t0 WHERE (((((CAST(x'' AS NUMERIC))AND((+ ('my''N证LY_䶀')))))OR((((NULL))<>((0.9955066519331915)))))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((CASE rt0.c1  WHEN rt0.c2 THEN t0.c10 END))) FROM rt0 ORDER BY ((((LIKE('0.483605305866861', rt0.c2, '-'))OR(((rt0.c1) IS TRUE))))AND(((rt0.c1)LIKE(t0.c33))))  NULLS LAST;SELECT DISTINCT ((t0.c33 COLLATE RTRIM)-(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c10 WHEN '&S8s]s_' THEN t0.c33 WHEN t0.c10 THEN 0.18213351547020373 END)) FROM t0, rt0 GROUP BY (((t0.c10)) BETWEEN (((((rt0.c0)) NOT BETWEEN ((t0.c33)) AND ((rt0.c2))))) AND ((((((t0.c10)AND(t0.c33)))AND(0xffffffff8d81714b))))) HAVING (((t0.c10 IN ())) NOT NULL); -- 0ms;
SELECT ((((rt0.c2) NOTNULL))OR(rt0.c0 COLLATE BINARY)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((CAST(rt0.c0 AS REAL)))<=(((- (rt0.c1))))) FROM rt0 WHERE (CAST(((-1969689848) BETWEEN (0.280627567092926) AND (0.9986670810178944)) AS BLOB)); -- 0ms;
SELECT ALL ((((t0.c10) ISNULL))&(CAST(rt0.c1 AS INTEGER))) FROM rt0 LIMIT -2034154363;SELECT DISTINCT ((((((((0.7654586796630347)AND((((t0.c33, t0.c33, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, 1285221463)) AND ((rt0.c0, t0.c33, rt0.c0))))))AND((t0.c33 IN (NULL)))))OR((('763048668')<(rt0.c2)))))AND(rt0.c0)) FROM rt0;SELECT DISTINCT ((SUM(t0.c33))IS NOT(NULL)) FROM rt0, t0 WHERE ((NOT ((NULL IN (x''))))); -- 0ms;
SELECT ALL rt0.c0 FROM t0;SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(rt0.c0)) NOT NULL), (((((rt0.c2)) BETWEEN ((t0.c33)) AND ((rt0.c2))))=(CASE rt0.c0  WHEN t0.c10 THEN t0.c33 END)), (CASE rt0.c1  WHEN t0.c33 THEN t0.c10 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN t0.c10 END IN ()) FROM rt0;SELECT (((((rt0.c0 IN ()))OR(MIN(rt0.c2))))OR(SUM(rt0.c0))), ((rt0.c0) BETWEEN (t0.c10) AND ('2055381741')) COLLATE BINARY, 1.445786778E9 FROM rt0, t0 WHERE (CASE WHEN (('-1200679970')IS NOT('-1565877159')) THEN (NOT (x'')) END); -- 0ms;
SELECT DISTINCT AVG(((t0.c33)||(rt0.c0))) FILTER(WHERE (CAST(rt0.c2 AS BLOB) IN ())) OVER (), ((((rt0.c0) IS FALSE)) NOT NULL), ROW_NUMBER() OVER () FROM t0 WHERE (UNICODE(('<E47adnF?' IN (NULL)))) GROUP BY ((((((((t0.c10)OR(rt0.c2)))AND(t0.c33)))OR(rt0.c2)))OR(CASE WHEN t0.c33 THEN t0.c10 END));SELECT ALL CASE WHEN ((((t0.c33)AND(rt0.c0)))OR(rt0.c2)) THEN ((((((((t0.c33)OR(rt0.c1)))AND(t0.c33)))OR(rt0.c0)))AND(rt0.c2)) END FROM t0, rt0 WHERE ((((((((('0.483605305866861')AND(HEX('1564202985'))))OR(((x'')||(x'')))))OR(CAST('0.39888791853970484' AS NUMERIC))))OR(((0xffffffffbedc4780)GLOB(0.02193306660774108))))); -- 0ms;
SELECT (t0.c10 IN ()) COLLATE RTRIM FROM rt0 LIMIT -1510066381; -- 0ms;
SELECT ALL ((MAX(rt0.c1)) BETWEEN (rt0.c0) AND (0.2480719685190752)), 0.5085398911393103, t0.c10 COLLATE RTRIM COLLATE RTRIM FROM t0;SELECT PERCENT_RANK() OVER () FROM t0 WHERE (((0.1352018621468919)&(-5.53620426E8)) COLLATE BINARY); -- 0ms;
SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE), CAST(((t0.c10)AND('1908046545')) AS REAL), ((((COUNT(*))AND(((rt0.c0) IS TRUE))))AND((t0.c33 IN ()))) FROM rt0;SELECT ALL ((COALESCE(t0.c10, t0.c33)) IS FALSE) FROM t0, rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0;SELECT DISTINCT CASE WHEN LIKELY(t0.c10) THEN '1220556177' ELSE (~ (t0.c33)) END FROM t0; -- 1ms;
SELECT ALL rt0.c1, ((rt0.c1)<=(rt0.c1)) COLLATE NOCASE, (NOT ((t0.c10 IN ()))) FROM t0, rt0 WHERE (((((1361216590) NOT BETWEEN ('uC') AND (NULL))) NOT BETWEEN ('~' COLLATE BINARY) AND (((NULL)&(x'dc84'))))); -- 0ms;
SELECT DISTINCT MIN(((rt0.c2) IS FALSE)), (((SUM(rt0.c1), ((rt0.c0) NOTNULL), ((((((((NULL)AND(t0.c33)))AND(rt0.c2)))OR(rt0.c1)))AND(t0.c10))))>=((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)), (+ (rt0.c1)), (+ (rt0.c1))))), 0X567ecf FROM rt0, t0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c2)), ((SUM(t0.c10))IS NOT(NULL)), LAST_VALUE(rt0.c1) OVER () FROM rt0 LIMIT -512873606 OFFSET 2003961070;SELECT DISTINCT ((((rt0.c1) NOT NULL)) IS TRUE) FROM t0;SELECT NULL FROM t0 WHERE (NULL); -- 4ms;
SELECT ALL ((rt0.c2)LIKE(((rt0.c2)IS(rt0.c2)))), LEAD((NOT (((t0.c10) IS TRUE))), t0.c10, (NOT (t0.c33 COLLATE NOCASE))) OVER (), SUM((+ (t0.c10))) FROM t0;SELECT LAG((((((t0.c33 IN ()))AND(CAST(x'bec6' AS TEXT))))OR(((NULL) IS TRUE))), (((rt0.c0)) NOT BETWEEN ((t0.c33)) AND ((((rt0.c1) IS FALSE)))), (((t0.c33, rt0.c0, rt0.c0)) BETWEEN ((CASE rt0.c2  WHEN t0.c33 THEN t0.c10 WHEN rt0.c1 THEN t0.c10 WHEN rt0.c1 THEN rt0.c2 END, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END, (t0.c10 IN (t0.c10)))) AND ((((((((((t0.c33)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(t0.c33)), ((NULL)OR(t0.c10)), ((rt0.c2) NOTNULL))))) OVER () FROM rt0, t0 INDEXED BY i84;SELECT ALL CAST((t0.c33 IN (t0.c33, rt0.c1)) AS BLOB) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ('pc m' IN ()) FROM rt0 WHERE (CAST(0x33d9ebe8 AS INTEGER) COLLATE RTRIM); -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (t0.c10) AND (rt0.c1)))>(NULL)), (- (rt0.c0)), CASE ((rt0.c2)<=(rt0.c2))  WHEN ((((rt0.c2)AND(rt0.c0)))AND(x'')) THEN ((t0.c10) BETWEEN (rt0.c2) AND (rt0.c1)) ELSE NULL END FROM t0 WHERE ((((0.02154381059423005 IN (x''))) NOT BETWEEN (NULL COLLATE NOCASE) AND ((x'' IN ('669725020')))));SELECT DISTINCT (+ (rt0.c0 COLLATE RTRIM)) FROM t0, rt0 WHERE ('1367427628') ORDER BY json_valid(((t0.c33)>>(rt0.c2))); -- 0ms;
SELECT DISTINCT (((t0.c10)&(rt0.c0)) IN ()) FROM t0 WHERE ((((CASE '1281818170'  WHEN x'e8da' THEN '1597192964' END))!=((COALESCE(DISTINCT NULL, x''))))); -- 0ms;
SELECT ((((t0.c10) IS TRUE)) BETWEEN (((rt0.c0)<<(rt0.c1))) AND (((rt0.c2)*(rt0.c0)))) FROM t0 WHERE (CAST(((-1743451089)%('-691208254')) AS INTEGER)) ORDER BY (((((rt0.c1) NOTNULL)))<=((((t0.c10)|('-1391081928'))))), ((((t0.c10) NOTNULL))&('UZ')) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))<>(CAST(t0.c33 AS TEXT))) ASC  NULLS FIRST;SELECT ((rt0.c1)IS NOT((((t0.c33))>((rt0.c2))))) FROM rt0 ORDER BY CASE WHEN ((t0.c33) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((t0.c33)OR(x'cd6e725c')))OR(x'')))OR(t0.c33)))AND(t0.c10)) END ASC, CASE WHEN CASE rt0.c0  WHEN t0.c10 THEN t0.c33 ELSE '-848520384' END THEN ((t0.c10)*(t0.c33)) END DESC  NULLS FIRST;SELECT ((((rt0.c1) BETWEEN (t0.c10) AND (t0.c10))) NOT BETWEEN (MAX(rt0.c1)) AND (LOWER(rt0.c2))) FROM t0;SELECT CAST(t0.c10 AS TEXT) FROM t0; -- 0ms;
SELECT ALL ((('1445786778')) NOT BETWEEN ((rt0.c2)) AND ((t0.c10))) COLLATE RTRIM FROM t0, rt0 LIMIT 1000059513 OFFSET 1498728222; -- 0ms;
SELECT DISTINCT CAST((~ (t0.c10)) AS REAL), NULL, CAST(((((((((t0.c10)OR(rt0.c1)))OR(rt0.c0)))OR(t0.c10)))OR(rt0.c1)) AS REAL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((t0.c10)>(t0.c33)))/(rt0.c0 COLLATE RTRIM)), (((t0.c10))>((t0.c33))) COLLATE BINARY, ((rt0.c2)*(((NULL) NOTNULL))) FROM rt0;SELECT DISTINCT CASE ((rt0.c1)==(t0.c10))  WHEN rt0.c0 THEN MIN(rt0.c1) END, (((t0.c10, rt0.c2, t0.c33)) BETWEEN ((LIKE(t0.c10, t0.c33, '4'), ((rt0.c2)*(rt0.c0)), ((rt0.c0) IS FALSE))) AND ((t0.c10, ((rt0.c0) NOTNULL), ((rt0.c1) BETWEEN (t0.c10) AND (NULL))))), AVG((t0.c10 IN ()) COLLATE BINARY) FILTER(WHERE ((((NOT (t0.c10)), NULL COLLATE BINARY, ((rt0.c0) BETWEEN (t0.c10) AND (t0.c33))))>((0.007744033605356138 COLLATE BINARY, (t0.c10 IN ()), CAST(rt0.c2 AS NUMERIC))))) OVER (), (((rt0.c0) NOTNULL) IN ()), TOTAL(((rt0.c1) IS TRUE)), (- ((~ (t0.c10)))), CASE WHEN ((t0.c10)/(rt0.c2)) THEN ((((t0.c10)AND(rt0.c2)))AND(rt0.c0)) WHEN (((rt0.c0))!=((rt0.c1))) THEN SQLITE_VERSION() WHEN ((rt0.c2)-(rt0.c0)) THEN ((')\n') NOT BETWEEN (NULL) AND (rt0.c2)) END FROM rt0 WHERE ((((((((((((((('1934570932')IS('1107731956')))AND(CASE WHEN x'' THEN NULL END)))AND((NULL IN (408839741, -0.0)))))OR(CASE '-1653026002'  WHEN '\nYlOj8O>\r' THEN 0Xfffffffff7d9a7f6 WHEN x'' THEN NULL WHEN NULL THEN x'5379' WHEN 'l4' THEN 0xffffffff9a39270d WHEN 0.6605696251226715 THEN x'' END)))OR(CASE x''  WHEN 0.5494482447516471 THEN 0.47360509819516095 WHEN NULL THEN 4.74276258E8 WHEN 466108815 THEN x'' ELSE -1973860822 END)))OR(CAST(NULL AS BLOB))))OR(((((((((x'b800')AND('')))OR('0.4791229581336027')))AND(1136450605)))AND('	F WLrh')))));SELECT (((((rt0.c0, t0.c10, -1316815571))=((rt0.c0, rt0.c2, rt0.c0)))) NOT NULL), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE, ((((t0.c33) IS FALSE))>(((rt0.c0) ISNULL))), (CAST(t0.c10 AS REAL) IN ()), (((rt0.c2)) NOT BETWEEN ((((rt0.c2)GLOB(rt0.c1)))) AND ((((NULL) NOT BETWEEN (rt0.c1) AND (t0.c33))))) FROM t0, rt0 WHERE ((((0xffffffffeb17f402, x'', '1')) NOT BETWEEN ((CASE WHEN '/' THEN '-1578351867' WHEN 'R!\n)Nn]6' THEN x'' WHEN x'' THEN -1.653026002E9 ELSE '0.2237191628478178' END, ('-0.0' IN ()), ((((((((x'')OR(NULL)))OR('1292888753')))OR(NULL)))AND('614481803')))) AND ((((NULL) BETWEEN (0.9872384456438218) AND (x'')), ((((0.0)OR(')aFiBh')))AND(0.8858092916615449)), ((((((((x'6e34')OR(-1912287100)))OR(NULL)))AND(x'0343')))OR('-1944139647')))))); -- 0ms;
SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE (x'') ORDER BY (((((x'') IS TRUE), CAST(t0.c33 AS TEXT), (((t0.c33, t0.c33, rt0.c1)) BETWEEN ((t0.c33, rt0.c2, rt0.c0)) AND ((t0.c33, rt0.c0, rt0.c2)))))=(((t0.c33 IN (rt0.c0)), ((((rt0.c1)AND(rt0.c1)))OR(NULL)), ((rt0.c1) BETWEEN (t0.c10) AND (rt0.c2)))))  NULLS LAST, (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()), CAST(((((((((x'')OR(t0.c33)))AND(rt0.c0)))OR(x'')))AND(t0.c33)) AS NUMERIC) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((t0.c33)AND(t0.c10)))AND(t0.c33)))<(((rt0.c1) ISNULL))), ((((0x41c23cbf) BETWEEN (rt0.c1) AND (rt0.c0)))/(((t0.c10)!=(rt0.c1)))), (((((rt0.c1) BETWEEN (rt0.c2) AND (t0.c10))))!=((CAST(rt0.c1 AS TEXT)))) FROM rt0;SELECT ALL SUM(t0.c33), rt0.c0, SUM(((t0.c10)|(rt0.c1))) FROM rt0, t0 WHERE (((((0Xffffffffc313c2c5)*('328442691')))%(((NULL) NOTNULL)))) ORDER BY CASE (((rt0.c0, t0.c33, '')) BETWEEN ((rt0.c2, t0.c33, t0.c33)) AND ((rt0.c1, rt0.c1, t0.c33)))  WHEN CAST(rt0.c2 AS BLOB) THEN 1.65407936E8 END ASC; -- 0ms;
SELECT DISTINCT NULLIF((t0.c33 IN ()), CASE t0.c33  WHEN rt0.c2 THEN '135408429' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) FROM rt0, t0 WHERE (CASE WHEN DATETIME(x'41be013f', x'1f93', '136050840', x'', '-1730685351') THEN (('蓐纕')IS NOT(x'')) END) ORDER BY ((t0.c10 COLLATE RTRIM) NOT NULL)  NULLS LAST, ((~ (rt0.c2)) IN (rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST, 0.8648528112691751 DESC, (GLOB(rt0.c0, rt0.c0) IN ())  NULLS FIRST; -- 0ms;
SELECT MIN((((x''))==((-273173952)))) FROM t0, rt0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0, rt0; -- 0ms;
SELECT COUNT(*) FROM t0, rt0 WHERE ((CAST(x'' AS TEXT) IN ())) GROUP BY 0.5000515931732668 HAVING 0.2266982201561195 COLLATE RTRIM; -- 0ms;
SELECT DISTINCT '2ꘁ' FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c1 AS INTEGER))AND(CASE t0.c33  WHEN t0.c33 THEN rt0.c2 ELSE t0.c10 END)))OR(CAST(t0.c10 AS REAL))) FROM rt0, t0; -- 0ms;
SELECT (((((rt0.c0 IN ()))OR(COUNT(t0.c10))))AND(CASE WHEN t0.c33 THEN t0.c10 END)), (((CAST(rt0.c0 AS INTEGER)))<(((NOT (rt0.c0))))), ((((((((((((((rt0.c0) NOT BETWEEN (t0.c33) AND (rt0.c0)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND((t0.c10 IN ()))))OR(TIME(NULL, rt0.c0, t0.c10))))AND((t0.c10 IN ()))))OR(t0.c10 COLLATE RTRIM)))AND(json_array_length(t0.c33, rt0.c2))) FROM t0, rt0;SELECT DISTINCT NTH_VALUE((+ (CASE t0.c10  WHEN t0.c33 THEN t0.c10 WHEN t0.c33 THEN t0.c33 WHEN t0.c10 THEN t0.c10 END)), ((((t0.c10 COLLATE NOCASE)OR(CAST(t0.c10 AS INTEGER))))OR((~ (t0.c33))))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL))&(rt0.c1)), ((((CASE x'8e50'  WHEN rt0.c1 THEN rt0.c2 WHEN t0.c33 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)AND(NULL)))AND((rt0.c0 IN ()))), CAST(rt0.c0 AS INTEGER) FROM rt0, t0; -- 1ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)GLOB((rt0.c0 IN ()))) FROM rt0 WHERE ((((((NULL, 'J庫%wj㣞', 1.726074146E9))<=((0x4c66fe3a, '-1025279442', '-369422328'))))LIKE(0.8713573567875801))) GROUP BY ((rt0.c1 COLLATE BINARY)||(CASE rt0.c0  WHEN rt0.c0 THEN t0.c33 END)) HAVING ((((((rt0.c2)==(rt0.c1)))AND((((t0.c10, t0.c33, t0.c10))!=((t0.c10, rt0.c1, rt0.c0))))))OR((NOT (t0.c10))));SELECT COUNT(t0.c33), rt0.c2, ((((((((t0.c33)AND((((rt0.c1)) BETWEEN ((t0.c10)) AND ((x'3da0'))))))OR(DATETIME(rt0.c2, rt0.c0, rt0.c0))))OR(TOTAL(rt0.c2))))OR(rt0.c2)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c1 IN ()) THEN UPPER(DISTINCT rt0.c1) END FROM rt0; -- 0ms;
SELECT ((CASE WHEN rt0.c1 THEN t0.c10 ELSE rt0.c0 END) NOT BETWEEN ('066swba_䩉') AND ((rt0.c1 IN (t0.c10)))) FROM t0, rt0; -- 0ms;
SELECT ALL CAST(rt0.c2 COLLATE BINARY AS TEXT) FROM rt0, t0; -- 0ms;
SELECT DISTINCT json_type(CAST(rt0.c2 AS INTEGER)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) NOTNULL), (((((t0.c33)||(rt0.c0))))>((NULL))), ((t0.c10)>=(rt0.c2)) COLLATE RTRIM, (+ (CAST(t0.c33 AS BLOB))), rt0.c0 FROM t0, rt0; -- 0ms;
SELECT ALL json_patch((~ (rt0.c1)), 0.45118658923513566), ((AVG(rt0.c1))-(((((((((rt0.c1)OR(rt0.c0)))OR(t0.c33)))OR(rt0.c0)))OR(t0.c33)))), COUNT(NULL) OVER ( ORDER BY (((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c0)||(rt0.c0)), 0.5977187934226941 COLLATE RTRIM, ((rt0.c1) NOT NULL))) AND ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), ((rt0.c0)AND(t0.c33)), (((rt0.c1))<((t0.c10))))))  NULLS LAST, CAST(((rt0.c0) NOT BETWEEN (t0.c33) AND (rt0.c2)) AS NUMERIC) ASC  NULLS FIRST) FROM t0 WHERE (x'');SELECT ALL ((((rt0.c2 COLLATE RTRIM)AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.7690822088620798 THEN rt0.c0 WHEN x'de43' THEN rt0.c0 WHEN '#氶*oxg' THEN x'' WHEN rt0.c0 THEN x'e9bc' END)))AND(((rt0.c1)!=(rt0.c2)))) FROM rt0 WHERE (9.13030056E8) ORDER BY '-744582377'  NULLS FIRST; -- 1ms;
SELECT ((AVG(t0.c33)) NOT BETWEEN (t0.c10 COLLATE NOCASE) AND (((((rt0.c2)AND(t0.c33)))AND(t0.c33)))), ((((t0.c10)IS NOT(t0.c10)))>>((~ (rt0.c0)))), ((((('330476143', rt0.c1, t0.c10))!=((t0.c33, 'D5,}h%dq&', rt0.c0))))!=(((x'a78f') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0;SELECT ALL TOTAL(t0.c10) FROM rt0, t0; -- 0ms;
SELECT DISTINCT TOTAL(DATETIME(t0.c33, t0.c33, rt0.c0)), CAST((0.194268570146108 IN (NULL, NULL)) AS REAL), CUME_DIST() OVER () FROM rt0;SELECT DISTINCT ((((rt0.c2)GLOB(NULL))) IS TRUE) FROM t0 WHERE (0.1293076972965982);SELECT DISTINCT TOTAL(((rt0.c0)LIKE('747067947'))), COALESCE(rt0.c1, (NULL IN ())), (+ (COUNT(599908441))) FROM t0, rt0 WHERE (((((('|(', 0.3498141914306553, '-1825623209')) NOT BETWEEN ((NULL, 0X73db9830, NULL)) AND ((0.8041911739072145, '-1742705442', NULL))))<=(((((0.8349985654917738)AND('1523235301')))AND(x''))))); -- 0ms;
SELECT ((((0.7510180961823971, rt0.c0, rt0.c1))>=((t0.c10, rt0.c1, t0.c10))) IN ()) FROM rt0 WHERE (CAST(0.021364960564116298 AS REAL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((NOT (rt0.c1)))) AND ((((t0.c10) IS FALSE)))) FROM rt0, t0 WHERE (CAST((NOT ('0.7543859514974213')) AS INTEGER)) LIMIT -1862886515 OFFSET 1935828249; -- 0ms;
SELECT ALL rtreenode(MIN(x'', t0.c10), (~ (rt0.c0))), ((((rt0.c2) BETWEEN (NULL) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((NOT (rt0.c2)))), CAST(((rt0.c1) NOTNULL) AS TEXT) FROM t0, rt0 WHERE ((((('NO9팮Wt~!'))<=((0.686356518370749))) IN ())); -- 0ms;
SELECT ALL CASE CASE rt0.c2  WHEN rt0.c0 THEN t0.c33 WHEN t0.c33 THEN rt0.c0 WHEN rt0.c2 THEN x'' ELSE t0.c33 END  WHEN NULL THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) ELSE ((NULL)<<(rt0.c1)) END FROM rt0, t0 WHERE ((+ ((((NULL))=((NULL)))))); -- 0ms;
SELECT (- (CASE WHEN t0.c10 THEN t0.c33 END)) FROM t0 WHERE (CASE (NOT (x''))  WHEN ((x'071c77ec') BETWEEN (450103760) AND (NULL)) THEN (x'5281' IN ()) END); -- 1ms;
SELECT ALL CAST(SUM(t0.c33) AS NUMERIC) FROM rt0, t0 WHERE (UPPER(DISTINCT (((('')AND(0.5534394294167494)))OR(NULL)))); -- 0ms;
SELECT DISTINCT (+ (UNLIKELY(rt0.c2))) FROM rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS REAL) THEN CASE WHEN t0.c33 THEN t0.c33 ELSE rt0.c2 END END  NULLS LAST;SELECT DISTINCT TOTAL(CAST(6.40626262E8 AS REAL)) OVER (), LOWER(DISTINCT ((rt0.c1)LIKE(rt0.c1))), ((MAX(rt0.c1))==(UNICODE(rt0.c2))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE t0.c10 COLLATE NOCASE  WHEN ((rt0.c2) IS TRUE) THEN MAX(rt0.c2) ELSE rt0.c0 END, CASE (~ (rt0.c1))  WHEN 0Xfffffffff2a6bec9 THEN CASE WHEN rt0.c1 THEN t0.c33 END ELSE ((t0.c33) NOT BETWEEN (rt0.c2) AND (NULL)) END, COUNT(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))), ROW_NUMBER() OVER (), rt0.c2 COLLATE NOCASE FROM rt0;SELECT DISTINCT (NULL IN ()) FROM rt0 WHERE (CAST(0.1305588069813174 COLLATE BINARY AS INTEGER)); -- 4ms;
SELECT DISTINCT (t0.c10 IN ()) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT CHAR(((((((((t0.c10)OR(x'f6fb')))AND('<1ji')))AND(t0.c10)))AND(t0.c33))), AVG(CASE WHEN rt0.c1 THEN t0.c33 WHEN t0.c33 THEN rt0.c0 WHEN '531361390' THEN 'hS' END) OVER ( ORDER BY ((((t0.c10)<<(t0.c33)))>(t0.c33)) DESC  NULLS LAST), CAST((((rt0.c1)) NOT BETWEEN ((t0.c10)) AND ((rt0.c0))) AS NUMERIC) FROM t0 WHERE (((NULL COLLATE RTRIM) NOT NULL)) LIMIT 1159171369;SELECT DISTINCT CAST(GROUP_CONCAT(t0.c33) AS BLOB) FROM rt0 WHERE (TYPEOF(NULL COLLATE BINARY));SELECT ((((rt0.c0) NOT NULL)) BETWEEN (((t0.c33)IS NOT(rt0.c0))) AND (COUNT(t0.c33))), SUM(CASE rt0.c0  WHEN t0.c10 THEN rt0.c2 END), CASE (t0.c33 IN ())  WHEN MAX(t0.c10) THEN (((t0.c33, t0.c10, rt0.c2))=(('gd]7aqm', rt0.c1, rt0.c0))) ELSE (rt0.c1 IN (rt0.c0, t0.c10)) END FROM rt0 WHERE (((((TOTAL_CHANGES())OR(((((NULL)AND('\r''*')))AND(NULL)))))AND(CAST('747067947' AS NUMERIC))));SELECT ALL ((((t0.c10 IN ())))>((((rt0.c1)IS(t0.c33))))), CAST(UNLIKELY(DISTINCT rt0.c2) AS BLOB), (t0.c33 COLLATE NOCASE IN ()) FROM rt0, t0; -- 0ms;
SELECT (((0.20600619708446943 IN ())) BETWEEN (((rt0.c2)*(rt0.c1))) AND (t0.c10 COLLATE NOCASE)) FROM t0;SELECT DISTINCT MIN(x'') FROM t0, rt0 GROUP BY NULL, (- (((((((((rt0.c1)AND(rt0.c1)))AND(0.9476948217504271)))AND(rt0.c0)))OR(rt0.c1)))), ((((t0.c33) NOT BETWEEN (t0.c33) AND (x'')))>=(CAST(t0.c33 AS BLOB))) HAVING rt0.c2; -- 0ms;
SELECT DISTINCT AVG(NULL) OVER () FROM rt0, t0 WHERE ((((('') NOTNULL)) ISNULL)); -- 0ms;
SELECT ALL CASE WHEN (rt0.c0 IN ()) THEN COUNT(*) END FROM t0, rt0; -- 0ms;
SELECT ALL ((((((((x'')AND(UNLIKELY(rt0.c2))))OR(((rt0.c0)-(rt0.c0)))))OR(x'')))OR((- (t0.c33)))), NTILE((((- (0.005466347344831202))) BETWEEN (((rt0.c1)IS(rt0.c0))) AND ((~ (rt0.c2))))) OVER ( ORDER BY ((((HEX(rt0.c2))OR(((((((((rt0.c0)AND(rt0.c0)))OR(t0.c10)))AND(rt0.c1)))AND(t0.c10)))))AND(((rt0.c1)IS NOT(rt0.c2)))) ASC), GROUP_CONCAT(ABS(t0.c10)) OVER () FROM t0, rt0 WHERE ((((('-2069173939')<(NULL))) NOT BETWEEN (((('-2122802835')) BETWEEN (('-266052790')) AND ((0.9175206723846766)))) AND (CASE ''  WHEN '266138289' THEN 0.23973656461745152 END))) GROUP BY ((((((((((rt0.c1)OR(t0.c33)))AND(rt0.c1)))AND(t0.c33)))OR(rt0.c2))) NOT BETWEEN (CASE t0.c10  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END) AND ('CK0\,㵉Hv')); -- 0ms;
SELECT ALL LIKELY(DISTINCT t0.c33 COLLATE RTRIM), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))AND(GROUP_CONCAT(rt0.c1))), CASE WHEN t0.c10 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c33 THEN rt0.c1 END COLLATE RTRIM FROM t0 GROUP BY ((t0.c10)||((((t0.c33)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))), CASE 0.41534231174804825 COLLATE RTRIM  WHEN (((rt0.c0)) BETWEEN ((t0.c33)) AND ((rt0.c2))) THEN LIKELY(rt0.c2) WHEN rt0.c1 THEN ((t0.c10) NOT NULL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('TRUE')) THEN (t0.c10 IN ()) ELSE rt0.c0 COLLATE RTRIM END, (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c10))))OR(rt0.c0)))OR(rt0.c1)) HAVING ((((t0.c33)||(t0.c33)))%(((((1195565922)AND(rt0.c2)))AND(rt0.c2))));SELECT DISTINCT (((((rt0.c2)==(rt0.c0))))=((rt0.c2))), CASE ((rt0.c1) NOT BETWEEN (t0.c10) AND (0.8243374791423085))  WHEN MIN(rt0.c2) THEN ((t0.c10) IS FALSE) END, PERCENT_RANK() OVER (), ((((t0.c33)LIKE(t0.c10)))<(((rt0.c1) IS FALSE))), (- ((((('()')OR(rt0.c2)))AND(t0.c10)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS REAL)) IS TRUE) FROM rt0 WHERE (((((((x'')<=(0Xffffffffb2fa846b)))OR(((x'') NOT BETWEEN (',') AND ('-1676086305')))))AND(LIKELY(x'')))) GROUP BY CAST(t0.c33 AS REAL), CAST(CAST(t0.c10 AS TEXT) AS INTEGER), CASE WHEN '0.4291341865127194' THEN '䟋' ELSE CAST(1054172093 AS BLOB) END HAVING CASE ((rt0.c0)<>(t0.c33))  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) THEN (~ (t0.c10)) END ORDER BY (((t0.c33, (x'' IN (rt0.c2, rt0.c2)), ((t0.c10)-(t0.c33))))<=((((rt0.c0)OR(rt0.c1)), ((t0.c33)%(t0.c10)), CAST('-1643909972' AS TEXT))))  NULLS FIRST;SELECT NTILE(NULL) OVER () FROM t0, rt0 WHERE (0.4905301130017736);SELECT ((rt0.c1 COLLATE BINARY)>=((((t0.c10)) BETWEEN ((t0.c33)) AND ((rt0.c2))))) FROM t0 WHERE ((((((('-1351780129')OR(NULL)))AND(x'')))-(((x'') NOT BETWEEN (-2146292807) AND (0x7371e5b9))))) LIMIT 1658140351;SELECT rt0.c1 FROM t0 LIMIT 1264420746;SELECT DISTINCT (((rt0.c0))>=((rt0.c2))) COLLATE BINARY FROM t0 LIMIT 608723803;SELECT ((((((t0.c10)AND(t0.c33)))OR(rt0.c1)))OR((+ ('Q>U*	#R')))) FROM rt0;SELECT UPPER(DISTINCT GROUP_CONCAT(t0.c10)), GROUP_CONCAT(NULLIF(DISTINCT '&Q<B>', rt0.c0)), LOWER(DISTINCT ((rt0.c1)&(rt0.c0))), ((rt0.c1) NOTNULL) COLLATE BINARY, ((((NOT (rt0.c2))))>((CAST(rt0.c0 AS REAL)))) FROM t0 WHERE (CAST((((-1829078832)) NOT BETWEEN ((NULL)) AND (('0.30279537139025914'))) AS REAL));SELECT DISTINCT (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)) IN ()) FROM t0, rt0; -- 0ms;
SELECT ((((((((((t0.c33)AND(0.28991543176410395)))OR(t0.c10)))OR(rt0.c2)))OR(rt0.c0))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((t0.c10 IN ()))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((COUNT(t0.c33))GLOB(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))) FROM t0, rt0 WHERE ((0.15627814349297708 IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE CASE WHEN 0xffffffff81fe0b18 THEN rt0.c2 END  WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c10)) THEN ((NULL)+(rt0.c2)) WHEN x'' THEN ((t0.c33) NOTNULL) WHEN CAST(t0.c10 AS NUMERIC) THEN (~ (t0.c33)) WHEN TOTAL(x'') THEN ((rt0.c1) ISNULL) WHEN CAST(t0.c33 AS REAL) THEN SUM(rt0.c2) END, ((((SUM(t0.c10))OR(CAST(t0.c10 AS NUMERIC))))AND(COUNT(*))), CAST(GROUP_CONCAT(rt0.c1) AS INTEGER) FROM t0;SELECT ALL ((rt0.c2) NOTNULL) COLLATE NOCASE FROM t0, rt0; -- 0ms;
SELECT ALL MIN(MIN(CASE WHEN rt0.c0 THEN t0.c33 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c0 END)) FROM rt0;SELECT DISTINCT ((((TYPEOF(t0.c10))AND(((rt0.c0) NOT BETWEEN (t0.c10) AND (0Xfffffffff10cebe4)))))OR(CASE WHEN t0.c33 THEN t0.c33 END)), PERCENT_RANK() OVER (), CASE WHEN (((t0.c10, rt0.c0, rt0.c1)) NOT BETWEEN (('978211523', 'OujpH5Ax', rt0.c1)) AND ((rt0.c0, t0.c10, rt0.c1))) THEN ((0.16628779479381783)AND(rt0.c0)) END, ((((t0.c33)%(rt0.c0)))*(CAST('6L!' AS NUMERIC))), t0.c33 FROM rt0, t0 WHERE ((NOT (((((((((0.6605841341365031)AND(0.0970022676674972)))AND(x'')))AND(NULL)))AND(x''))))); -- 0ms;
SELECT ALL ((TRIM(DISTINCT rt0.c1))<<(CAST(t0.c10 AS INTEGER))) FROM t0 WHERE ((((('-1981858856')&(NULL))) BETWEEN (CASE '1580290153'  WHEN 0.36668132987699165 THEN 0.3705744527562702 ELSE NULL END) AND (0.1828283196176671 COLLATE BINARY)));SELECT ALL AVG(((((t0.c10)AND(rt0.c1)))OR(rt0.c1)) COLLATE BINARY) OVER () FROM rt0, t0 WHERE ((((('763048668')AND(NULL)))OR(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0)IS(rt0.c1))), (SUM(rt0.c2) IN ()), ((CASE t0.c33  WHEN rt0.c1 THEN t0.c33 END)GLOB((rt0.c1 IN (rt0.c1)))), (NOT ((rt0.c2 IN ()))), 1443034448 FROM t0 WHERE (CAST(((NULL) IS TRUE) AS TEXT)) GROUP BY ABS(DISTINCT (((rt0.c2))<=((NULL))));SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE), ((CASE t0.c10  WHEN rt0.c2 THEN t0.c10 END) IS FALSE), rt0.c1 FROM t0, rt0 WHERE (0.4291341865127194); -- 0ms;
SELECT DISTINCT CASE TYPEOF(DISTINCT t0.c10)  WHEN GROUP_CONCAT(t0.c10) THEN json_type(rt0.c1) ELSE (t0.c10 IN ()) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (rt0.c2) AND (t0.c33)) COLLATE BINARY COLLATE RTRIM, CAST(((rt0.c1)=(t0.c33)) AS BLOB), x'df8e' FROM rt0, t0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((((t0.c33)OR(rt0.c2)))AND(rt0.c2))), x'', SUM(((rt0.c0)<(rt0.c0))) OVER ( ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c10)))) NOT BETWEEN (((((x'8b45')OR(rt0.c0)))OR(rt0.c2))) AND (((rt0.c1) ISNULL)))  NULLS LAST) FROM rt0, t0 WHERE (-2140825649); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c10) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN t0.c33 COLLATE BINARY END, ((COUNT(rt0.c0))LIKE((((-5.8457222E8))>((0.09145334275777017))))), ((t0.c10) IS TRUE) FROM t0, rt0; -- 0ms;
SELECT GROUP_CONCAT((((rt0.c0, x'b55d', x'')) BETWEEN ((rt0.c0, t0.c33, t0.c33)) AND ((0xffffffffdd2822c4, rt0.c0, t0.c10)))) OVER () FROM rt0;SELECT ALL x'', ((rt0.c1 COLLATE BINARY) ISNULL), t0.c10 FROM rt0 WHERE (((('1250070801' IN ())) NOT BETWEEN (CASE NULL  WHEN '0.9251713211232976' THEN x'ac5d' WHEN '' THEN 0.40910914683127664 WHEN x'52a7' THEN NULL END) AND ((((((((('kmR')OR(0.5088137706593)))OR(x'')))AND(0.669289243015792)))AND('fwn')))));SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)>>(((rt0.c1) NOT NULL))), ((((((rt0.c1)AND(t0.c33)))OR(rt0.c2)))&(CASE rt0.c2  WHEN t0.c10 THEN t0.c33 END)), CAST(COUNT(t0.c10) AS INTEGER) FROM t0 WHERE ((((- (0.2741246695591465)))IS(CASE ''  WHEN NULL THEN NULL END))) LIMIT -1872190925 OFFSET 586359755;SELECT DISTINCT (((rt0.c1)IS(rt0.c2)) IN ((((t0.c33))>((rt0.c1))))) FROM t0, rt0 WHERE (CAST(((981588989)+(0.8835621932711489)) AS NUMERIC)) GROUP BY ((((rt0.c0)<=(rt0.c1))) NOTNULL); -- 0ms;
SELECT DISTINCT json_object(CAST(rt0.c0 AS TEXT), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) FROM t0 LIMIT 747067947 OFFSET -1502336784;SELECT ALL (UNLIKELY(rt0.c0) IN (CAST('' AS TEXT))) FROM rt0, t0 WHERE (CASE WHEN ((x'') BETWEEN ('gCw') AND (0.12778872262035956)) THEN ((NULL)IS NOT('쩢[5')) WHEN ((((x'')AND(x'')))OR('')) THEN ((0x1b9374f6) BETWEEN (0.6662610856534145) AND (0.7771991517657127)) WHEN x'' COLLATE NOCASE THEN ((NULL)&('486668501')) ELSE NULL END); -- 0ms;
SELECT ALL ((CAST(t0.c10 AS TEXT)) IS FALSE) FROM t0, rt0 WHERE (((((x'') ISNULL))<(NULL))); -- 0ms;
SELECT COUNT(*) FROM rt0, t0 WHERE ('bt5?O\r'); -- 0ms;
SELECT ((((rt0.c2)/(0X236274fe))) NOTNULL) FROM t0 WHERE (x'') LIMIT 643599964 OFFSET -1485523236;SELECT ALL (((t0.c33) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN (NULL)), (((t0.c10 IN (rt0.c2))) NOT NULL), ((((rt0.c0)%(t0.c10))) IS FALSE) FROM rt0;SELECT ALL ((((t0.c10 IN (rt0.c2))))<>((((t0.c33) NOT NULL)))), x'', ((((rt0.c0) NOT NULL)) ISNULL), (((t0.c10 IN (NULL, rt0.c0)))IS((~ (rt0.c1)))), (((- (rt0.c0)))>=((- (rt0.c1)))) FROM rt0, t0 WHERE ((NOT ((('1132007653') NOT BETWEEN (NULL) AND ('\nT	R'))))); -- 0ms;
SELECT DISTINCT CAST(MIN(t0.c33) AS NUMERIC), CASE WHEN ((((rt0.c1)AND(rt0.c0)))AND(x'')) THEN AVG(rt0.c0) END, t0.c10 FROM rt0, t0 WHERE ((((('-592901497') IS TRUE)) IS TRUE)); -- 0ms;
SELECT ALL HEX(DISTINCT (NOT (rt0.c2))) FROM rt0, t0 ORDER BY CASE (+ (t0.c33))  WHEN ((rt0.c2)LIKE(t0.c10)) THEN t0.c33 END DESC  NULLS FIRST; -- 0ms;
SELECT ALL (~ (CASE rt0.c1  WHEN t0.c33 THEN t0.c33 END)), AVG(SUM((~ (rt0.c1)))), CAST(COUNT(*) AS INTEGER) FROM rt0 WHERE ((NOT (CAST(x'0270' AS INTEGER))));SELECT DISTINCT (((''))>(((- (t0.c10))))) FROM t0 ORDER BY CASE ((t0.c33) IS FALSE)  WHEN CASE t0.c33  WHEN x'a194' THEN t0.c33 WHEN t0.c33 THEN rt0.c1 WHEN t0.c10 THEN t0.c10 ELSE t0.c33 END THEN ((rt0.c1) NOT BETWEEN (t0.c10) AND (t0.c33)) END DESC, x'' DESC  NULLS FIRST;SELECT DISTINCT ((t0.c33 COLLATE NOCASE)OR(((rt0.c2) NOT NULL))) FROM rt0 WHERE (((((x'')*(NULL))) NOT NULL));SELECT DISTINCT LAST_VALUE(CAST(((t0.c10) ISNULL) AS INTEGER)) OVER () FROM t0 WHERE (((CAST(x'd39d' AS REAL)) BETWEEN ((((0.6577202481230989, '0.70291337574655', 0.35522335671669225)) BETWEEN ((0.04369528730689831, NULL, NULL)) AND ((x'', 0.30604445223643717, NULL)))) AND ((~ (0Xffffffffa1155510))))); -- 0ms;
SELECT ALL FIRST_VALUE(((('㍾PU') IS FALSE) IN ())) OVER () FROM rt0 WHERE (((CASE WHEN x'' THEN NULL WHEN 0.5104545439924941 THEN '*}' WHEN '-1425335398' THEN 0.9753476887145551 END) BETWEEN (CASE WHEN 'QR' THEN 0.6190273729269672 END) AND ((('') NOT BETWEEN (x'') AND (''))))); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT CAST(rt0.c0 AS INTEGER), LIKELY(DISTINCT t0.c33)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT t0.c33, t0.c10, (- (CAST(t0.c10 AS BLOB))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN NULL THEN t0.c33 WHEN t0.c10 THEN t0.c33 WHEN rt0.c0 THEN NULL END)|((((rt0.c1)) NOT BETWEEN ((t0.c33)) AND ((0xffffffffbb1124fe))))) FROM rt0, t0 INDEXED BY i84 WHERE ((((x'')<(NULL)) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c33 IN ())) FROM t0, rt0 WHERE ((((((1367427628)) BETWEEN ((x'')) AND ((0.4609032580274016))))>>(((((((((223657096)AND(0x7af9561f)))OR(0.5448636857287498)))AND(x'80be')))AND(x''))))); -- 0ms;
SELECT DISTINCT t0.c10, ((((rt0.c2) ISNULL))%((((NULL)) NOT BETWEEN ((t0.c10)) AND ((rt0.c0))))), ((((((t0.c10)) BETWEEN ((t0.c10)) AND ((t0.c33)))))=((((((t0.c33)AND(NULL)))OR(rt0.c2))))) FROM t0, rt0 LIMIT -1742705442 OFFSET -924212386; -- 0ms;
SELECT DISTINCT SUM(((rt0.c2)>=(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c0 THEN t0.c33 END) COLLATE RTRIM FROM t0, rt0 WHERE (((+ ('-1502336784')) IN ())); -- 0ms;
SELECT ALL SUM((rt0.c1 IN ()) COLLATE RTRIM) FROM rt0, t0; -- 0ms;
SELECT DISTINCT 0.9959605284585898, rt0.c2, TOTAL(t0.c33) OVER (), COUNT(*), (NOT ((NOT (x'')))) FROM t0, rt0 WHERE ((NULLIF(DISTINCT 0.2487980272092316, '.￿') IN ())); -- 0ms;
SELECT ALL ((((rt0.c0 COLLATE BINARY)AND(((t0.c33) NOT BETWEEN (t0.c10) AND (t0.c33)))))OR(((rt0.c1)+(0xffffffffa8c9d743)))), ((((t0.c10)*(t0.c10))) NOT BETWEEN (t0.c33 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c33 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c33 THEN NULL WHEN rt0.c0 THEN t0.c10 ELSE t0.c10 END)), rt0.c1 FROM t0 WHERE (CAST(((-7.81191683E8) IS FALSE) AS REAL)) LIMIT -553620426;SELECT DISTINCT GROUP_CONCAT(json_object(rt0.c0, rt0.c0, t0.c10, rt0.c0)) FROM t0 WHERE (TYPEOF((~ (NULL))));SELECT (NOT (rt0.c2)) COLLATE NOCASE, UPPER(DISTINCT ((t0.c10) BETWEEN (rt0.c0) AND (rt0.c0))), COUNT(*) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c10) BETWEEN (t0.c10) AND (rt0.c0)))%(((rt0.c1)>>(x'')))), (((((~ (t0.c10)))OR(CASE WHEN rt0.c0 THEN 0.3964653679508897 END)))OR(rt0.c1 COLLATE RTRIM)), ((SUM(t0.c10))AND((((t0.c10))==((rt0.c1))))) FROM rt0 WHERE (((LIKELY('352876116'))==(('s듪8G|' IN ()))));SELECT TOTAL(rt0.c2) OVER (), (((rt0.c0))<=((rt0.c0))) COLLATE NOCASE, (- (((((rt0.c0)AND(-1.944139647E9)))AND(t0.c10)))) FROM t0, rt0 WHERE (ABS(CAST('' AS TEXT))) ORDER BY ((x'')>(rt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT (+ (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))), ((((((((((((((t0.c10)OR(t0.c10)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c10)))AND(rt0.c2))) NOTNULL), AVG(((rt0.c0) IS TRUE)) COLLATE RTRIM FROM rt0, t0 WHERE ((((x'', 0.44201073965620596, NULL)) BETWEEN ((x'', ((('p-2636548117557682951:-3531094271921191529 1603 1410--5295262640276266958 720:3487422758656815352:2351730851254936706t1723:x', NULL, 0.7797577295702397)) BETWEEN ((0Xffffffffe2bba75f, 0.9851462380078654, x'')) AND (('-261265141', 0.3749180178450541, NULL))), (0X2b44367e IN ('-1735811651', '-1208629481', '')))) AND ((((((0.7948650097551568)AND(x'')))AND(NULL)), ((('', 0.0643622645662213, NULL)) NOT BETWEEN (('2ꘁ', x'', '&s8s]s_')) AND ((-1346932537, 1.220556177E9, 0.18565565444282217))), '-1258266965' COLLATE NOCASE)))); -- 0ms;
SELECT CAST(((rt0.c2)GLOB(t0.c10)) AS REAL) FROM t0, rt0; -- 0ms;
SELECT ((((((((((t0.c33)||(t0.c10)))AND(((rt0.c0) BETWEEN (t0.c10) AND (-318866727)))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((+ (t0.c33)))))AND(((rt0.c1)IS NOT(t0.c10)))) FROM rt0 WHERE ((((x'', '-744582377', NULL)) NOT BETWEEN (((('') IS TRUE), (((-1359315704))>((NULL))), ((x'dc4e') BETWEEN (0.7543859514974213) AND (NULL)))) AND ((SQLITE_VERSION(), CASE WHEN 873482826 THEN NULL END, TRIM(DISTINCT 1522058547, NULL)))));SELECT DISTINCT LIKELIHOOD(DISTINCT ((((rt0.c2)OR(rt0.c2)))AND(t0.c10)), 0.4147222742881098) FROM rt0, t0 WHERE ((NOT ('-157685752')) COLLATE RTRIM); -- 0ms;
SELECT CAST((((rt0.c2, rt0.c2, t0.c10, rt0.c1, rt0.c2))>((NULL, rt0.c0, rt0.c2, rt0.c0, t0.c33))) AS REAL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (NOT ('610233496')) FROM t0; -- 0ms;
SELECT DISTINCT CAST(TYPEOF(rt0.c0) AS NUMERIC) FROM t0, rt0 LIMIT 1281818170; -- 0ms;
SELECT DISTINCT CAST(t0.c10 AS INTEGER) FROM rt0 WHERE (((CAST(0X9dbecc0 AS REAL))IS NOT(CAST('0.3640861818634873' AS INTEGER))));SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER))>=(((((t0.c33)OR(rt0.c2)))OR(-728573191)))), ((IFNULL(DISTINCT x'', rt0.c2))|(CASE rt0.c1  WHEN 0.49573486804050826 THEN t0.c33 END)), AVG(0.23494798494487745), (- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c33)))), (- (t0.c10)) FROM t0 WHERE (NULL);SELECT ((((x'a771')<=(t0.c33)))||(((rt0.c2)/('EE4F\i')))) FROM rt0 WHERE (((CASE WHEN 0.13704804279271865 THEN x'' END)/((('2?F<Tfm') NOT NULL))));SELECT ALL (~ (((t0.c33)<=(rt0.c2)))) FROM rt0, t0 WHERE (NULL) ORDER BY CAST(((t0.c10)>(rt0.c0)) AS INTEGER); -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c10 THEN rt0.c1 WHEN rt0.c0 THEN t0.c33 ELSE t0.c10 END)AND((((t0.c33)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(t0.c33)), (+ ((((rt0.c0, t0.c33, rt0.c0))>((rt0.c2, t0.c33, rt0.c1))))) DESC) FROM t0 WHERE ((((x'9f83', 0.360590075763628, '1342967934')) BETWEEN ((((NULL) BETWEEN (x'') AND (x'')), CAST(0.17052179411288326 AS REAL), (('2044223919') BETWEEN ('o*P') AND ('785522457')))) AND ((0.712038559728602, 0.2480719685190752, CAST('篣C' AS TEXT))))) GROUP BY CAST(rt0.c0 AS BLOB) HAVING '-318866727';SELECT ALL (((((rt0.c2, t0.c10, rt0.c2))<((rt0.c1, rt0.c0, t0.c10)))) IS TRUE) FROM t0;SELECT (((((rt0.c1)<<(rt0.c0))))>=((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))), (((NOT (rt0.c0))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((t0.c33)) AND ((rt0.c1)))) AND (((rt0.c2)OR(t0.c33)))), CAST(TRIM(DISTINCT t0.c33, rt0.c0) AS BLOB) FROM t0, rt0 WHERE (((((0.8480035844941219) NOT BETWEEN (0.10478256118921014) AND (0X3dd43281)))>>(((x'')<=(''))))); -- 0ms;
SELECT CASE WHEN ((rt0.c2)==(rt0.c2)) THEN ((((((((rt0.c2)AND(t0.c10)))OR(t0.c10)))AND(t0.c10)))OR(rt0.c1)) ELSE AVG(rt0.c2) END, ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))||(CAST(rt0.c2 AS NUMERIC))), rt0.c2 FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE ((t0.c10)<=(t0.c10))  WHEN CAST(rt0.c2 AS TEXT) THEN LAST_INSERT_ROWID() END FROM t0 GROUP BY CAST(COALESCE(rt0.c0, rt0.c0, t0.c33, x'') AS NUMERIC) HAVING ((((rt0.c0) NOT BETWEEN (t0.c33) AND (t0.c33))) IS FALSE);SELECT DISTINCT (~ (((((rt0.c1)OR(t0.c33)))AND(rt0.c2)))) FROM t0, rt0 GROUP BY CAST(((rt0.c0) IS TRUE) AS BLOB), (CAST(t0.c10 AS REAL) IN (((((rt0.c2)OR(rt0.c1)))AND(0.47103339252029075)), ((((rt0.c2)OR(t0.c10)))OR(rt0.c1)))), (((((((rt0.c2)) NOT BETWEEN ((t0.c10)) AND ((t0.c33))))AND(((t0.c10) IS TRUE))))AND(((t0.c10)||(-1596342404)))) HAVING CASE WHEN (~ (rt0.c2)) THEN 5.86359755E8 ELSE (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c33))) END; -- 0ms;
SELECT DISTINCT COUNT(MAX(((t0.c10)>>(rt0.c0)))) FROM t0, rt0 WHERE (((CASE 0xffffffff8c1ec881  WHEN '-613808249' THEN NULL END) BETWEEN ((x'' IN ())) AND (NULL)));SELECT LIKELY(t0.c33 COLLATE BINARY), IFNULL(CASE WHEN rt0.c1 THEN t0.c10 END, (rt0.c0 IN (rt0.c2, rt0.c1))), TOTAL(load_extension(rt0.c1)) FROM rt0;SELECT DISTINCT x'4260' FROM t0; -- 0ms;
SELECT DISTINCT (((rt0.c2)<>(rt0.c0)) IN ()), ((CAST(t0.c33 AS REAL)) NOT BETWEEN ((t0.c10 IN ())) AND (((x'') NOT BETWEEN (t0.c10) AND (rt0.c0)))), GROUP_CONCAT((- (t0.c33))) FILTER(WHERE NULL) OVER () FROM t0, rt0 WHERE (CAST((('s䈨mr_r3ᇧ')*(0.003261087221486214)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE (~ (rt0.c1))  WHEN (((rt0.c0))>=((rt0.c0))) THEN CAST(-1.944139647E9 AS INTEGER) ELSE ((rt0.c1)+(t0.c33)) END, CASE rt0.c1 COLLATE BINARY  WHEN ((t0.c33) NOTNULL) THEN (NULL IN ()) WHEN GROUP_CONCAT(t0.c10) THEN NULL WHEN ((((((((((((rt0.c0)AND(t0.c33)))AND(rt0.c0)))OR(rt0.c0)))AND(t0.c10)))OR(rt0.c1)))OR(t0.c33)) THEN ((rt0.c0)IS(t0.c10)) END, ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (914392272) AND (0.6643795551182949)) FROM rt0, t0 WHERE (CASE x''  WHEN (('z^Ic12,sp') IS TRUE) THEN ((0x537cf815)*(0.82015135103991)) ELSE '\nU' COLLATE RTRIM END); -- 0ms;
SELECT (~ ((('-1702739903') NOT BETWEEN (t0.c10) AND (rt0.c2)))), '1558135888' COLLATE BINARY, t0.c10 FROM t0 WHERE (((((x'') BETWEEN (x'90d9') AND (0xe5fe818)))|(((-1241517184)==('-1321791391')))));SELECT DISTINCT COUNT(*) OVER (), rt0.c1, ((SUM(NULL)) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (((rt0.c2) BETWEEN (NULL) AND (t0.c33)))), (((rt0.c0)) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND (((((NULL)) BETWEEN ((rt0.c0)) AND (('1694907721')))))), ((TRIM(DISTINCT '&''', t0.c33)) NOT BETWEEN ('837810116' COLLATE BINARY) AND (CAST(0.16812564925049145 AS BLOB))) FROM t0, rt0 WHERE (1.352758843E9) GROUP BY ((SQLITE_COMPILEOPTION_USED(rt0.c2))%(((((((((rt0.c2)AND(t0.c10)))AND(rt0.c0)))OR(t0.c33)))OR(t0.c10)))); -- 0ms;
SELECT (((- (rt0.c2))) NOT BETWEEN ((((rt0.c0))>=((rt0.c2)))) AND (rt0.c0 COLLATE BINARY)) FROM rt0 WHERE (((+ (NULL)) IN ())); -- 0ms;
SELECT (((rt0.c0 IN ()))<<(CAST(t0.c10 AS TEXT))), (((((((((((('1658140351')OR(CAST(rt0.c0 AS BLOB))))OR((((t0.c33))<((0.24850706383899546))))))OR(COUNT(rt0.c1))))OR((- (rt0.c2)))))OR(((rt0.c0)GLOB(t0.c33)))))OR(t0.c33 COLLATE BINARY)), (((t0.c33, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL), rt0.c1 COLLATE RTRIM, (+ (t0.c33)))) AND ((((rt0.c0)|(rt0.c0)), ((t0.c10) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt0.c0)GLOB(rt0.c1))))) FROM rt0, t0 WHERE (((((x'') NOT BETWEEN ('1281818170') AND (x''))) BETWEEN (CAST(NULL AS TEXT)) AND (((0.6427002375434929)%(''))))); -- 0ms;
SELECT DISTINCT NULL, ((((SUM(rt0.c0))OR(((t0.c33)LIKE(t0.c10)))))OR(((t0.c33)OR(t0.c10)))), CUME_DIST() OVER () FROM t0;SELECT ALL SUM(((rt0.c0)<<(rt0.c2))) FROM t0, rt0; -- 0ms;
SELECT ALL ((((rt0.c0 IN ()), (((t0.c10))>=((rt0.c2))), ((x'07b3')GLOB(t0.c10))))<=((ABS(t0.c33), ((t0.c10) NOT BETWEEN (t0.c10) AND (t0.c10)), ((0x29d6198d)IS NOT(0.061405443007402805))))), CAST(((rt0.c2) ISNULL) AS NUMERIC), FIRST_VALUE(((((CASE rt0.c2  WHEN rt0.c1 THEN t0.c33 END)AND('-251278454')))OR(CASE rt0.c1  WHEN t0.c33 THEN rt0.c1 END))) OVER ( PARTITION BY ((t0.c33) NOT BETWEEN ((- (rt0.c2))) AND ((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((t0.c10, rt0.c1, NULL)) AND ((t0.c10, rt0.c2, rt0.c1))))), CAST(((rt0.c2)<(t0.c33)) AS TEXT), '-1990019508', COALESCE(DISTINCT (t0.c33 IN ()), ((((rt0.c2)AND(t0.c10)))OR(rt0.c2))) ORDER BY x'bc7e9972' COLLATE RTRIM COLLATE NOCASE ASC  NULLS FIRST, CASE rtreenode(rt0.c0, rt0.c1)  WHEN LIKELIHOOD(rt0.c0, 0.9294860226834258) THEN ((rt0.c1)>>(rt0.c2)) WHEN (((t0.c33, t0.c33, t0.c10))>((rt0.c1, t0.c10, rt0.c2))) THEN CASE rt0.c1  WHEN rt0.c1 THEN t0.c10 ELSE t0.c10 END WHEN rt0.c1 THEN (((t0.c33))<=((t0.c10))) ELSE CASE WHEN t0.c10 THEN t0.c33 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE t0.c33 END END  NULLS LAST) FROM rt0, t0; -- 1ms;
SELECT ALL ((((rt0.c1)IS NOT(t0.c33)))=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), COUNT(UNLIKELY(rt0.c2)) OVER (), (((((t0.c10))<>((-182158420))))=(CAST(rt0.c2 AS REAL))) FROM rt0, t0; -- 0ms;
SELECT ALL (((((1033617602))<=(('')))) NOTNULL), CAST(UNLIKELY(DISTINCT t0.c10) AS TEXT), CAST(rt0.c1 COLLATE BINARY AS BLOB) FROM rt0, t0 WHERE ('-335443307'); -- 0ms;
SELECT DISTINCT ((((t0.c10) BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL) FROM rt0 WHERE (((CASE -1.697606454E9  WHEN 0.039438908825099483 THEN NULL WHEN -1.27155442E9 THEN 0.5466593494290106 WHEN NULL THEN 'k3YS' END) NOT BETWEEN (CAST(0.014439428099617957 AS BLOB)) AND (((0.12873326353712233) BETWEEN (0.6259272351100995) AND (x'2079')))));SELECT DISTINCT (((0xffffffffde104d80, rt0.c0 COLLATE BINARY, t0.c33 COLLATE NOCASE, ((t0.c33) NOT NULL), ((rt0.c2)>>(0.44546449439653646))))<(((((t0.c33))>((rt0.c0))), COUNT(rt0.c0), ((((t0.c33)AND(rt0.c2)))AND(rt0.c1)), ((rt0.c0) BETWEEN (t0.c33) AND (rt0.c2)), CAST(rt0.c0 AS INTEGER)))) FROM rt0 WHERE ((- (TIME(0.5453864376375313, 0.7100346352617665, x'6c06'))));SELECT DISTINCT ((((t0.c33) IS FALSE)) BETWEEN ((NULL IN ())) AND (((rt0.c2)-(t0.c10)))) FROM t0 INDEXED BY i84 WHERE (((((('939268452')) BETWEEN ((NULL)) AND (('1682490366'))))/((- (0.4501006624336902)))));SELECT DISTINCT ((rt0.c2) IS FALSE) FROM t0, rt0; -- 0ms;
SELECT ALL RANK() OVER () FROM rt0 WHERE (CASE WHEN ((((x'')OR(0X23249267)))AND(0.36026184256516414)) THEN (- (x'')) END); -- 0ms;
SELECT DISTINCT ((((((rt0.c2) IS TRUE))AND(t0.c10)))OR(-800954469)) FROM t0;SELECT DISTINCT (~ ((NOT (t0.c10)))) FROM rt0, t0 WHERE (((((x'') ISNULL))<<(((x'')>>(''))))) LIMIT 1029014954; -- 0ms;
SELECT DISTINCT ((((t0.c10)AND(t0.c33))) NOTNULL) FROM t0 GROUP BY CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC), (~ (NULL)), CAST((- (rt0.c1)) AS INTEGER), ((((t0.c10)>(rt0.c0))) ISNULL), LIKELIHOOD(DISTINCT t0.c33, 0.1181378108071699) COLLATE NOCASE ORDER BY (((('')OR(CAST(rt0.c0 AS BLOB))))AND(CASE WHEN rt0.c2 THEN rt0.c1 WHEN t0.c33 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS LAST;SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(t0.c10)))OR(NULL)), ((((((rt0.c1) IS FALSE))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND(CASE WHEN t0.c10 THEN rt0.c1 WHEN t0.c33 THEN rt0.c0 WHEN t0.c33 THEN t0.c33 WHEN t0.c10 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)), COUNT(*) OVER () FROM t0 WHERE (((('')) NOT BETWEEN (((~ ('1000059513')))) AND (('2' COLLATE NOCASE))));SELECT DISTINCT rt0.c0 FROM t0;SELECT DISTINCT (((((((((NOT (rt0.c2)))OR(((t0.c10)-(rt0.c0)))))AND('')))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN t0.c10 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c10 THEN rt0.c2 WHEN rt0.c1 THEN t0.c33 END)))AND(CAST(rt0.c0 AS TEXT))), CASE WHEN ((t0.c33) NOT NULL) THEN json_patch(t0.c33, t0.c10) ELSE load_extension(rt0.c0) END, GROUP_CONCAT('2055381741' COLLATE NOCASE) FROM rt0;SELECT DISTINCT (((- (rt0.c1))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) AND ((((rt0.c1)) BETWEEN (('d>a''o\n')) AND ((rt0.c2))))) FROM rt0, t0 WHERE (NULL) GROUP BY ((((((t0.c10)OR(rt0.c1)))AND(rt0.c0))) NOT NULL), ((((t0.c10) IS TRUE)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(t0.c33))) AND (rt0.c2 COLLATE BINARY)), '(6_' COLLATE NOCASE; -- 0ms;
SELECT DISTINCT (+ (((x'5f77')/(rt0.c1)))) FROM rt0 WHERE ((- (722512641)) COLLATE NOCASE); -- 0ms;
SELECT ALL t0.c10, LEAD(TYPEOF(CASE WHEN rt0.c1 THEN rt0.c1 END), rt0.c1, ((((t0.c10)-(t0.c33))) NOT BETWEEN (CASE WHEN rt0.c2 THEN t0.c10 ELSE t0.c33 END) AND ((- (rt0.c2))))) OVER (), COUNT(*) OVER () FROM rt0, t0; -- 0ms;
SELECT (~ (AVG(t0.c10))) FROM rt0, t0 GROUP BY CASE TYPEOF(DISTINCT t0.c10)  WHEN CAST(t0.c33 AS BLOB) THEN CAST(rt0.c2 AS NUMERIC) WHEN (((t0.c33)) NOT BETWEEN ((rt0.c2)) AND ((t0.c10))) THEN ((rt0.c2)IS(t0.c33)) WHEN CASE t0.c33  WHEN t0.c10 THEN rt0.c0 ELSE rt0.c2 END THEN NULL WHEN ((rt0.c0)<>(t0.c33)) THEN ((t0.c33)<=('q]')) WHEN CAST(t0.c10 AS BLOB) THEN ((rt0.c1)*(rt0.c1)) END; -- 1ms;
SELECT DISTINCT UPPER(DISTINCT ((((t0.c10)AND(rt0.c0)))AND(rt0.c0))) FROM t0, rt0 WHERE (((UNLIKELY(DISTINCT 0.4334400216060402)) NOT BETWEEN (((0xb0deef) NOTNULL)) AND ((+ (''))))); -- 0ms;
SELECT ALL CASE CHANGES()  WHEN ((rt0.c2)IS NOT(t0.c10)) THEN ((((((((t0.c10)AND(rt0.c1)))OR(t0.c33)))OR(t0.c33)))OR(rt0.c1)) WHEN ((rt0.c2)>=(rt0.c1)) THEN 0.8268091432073409 WHEN STRFTIME(rt0.c1, rt0.c0, t0.c10) THEN t0.c33 END FROM t0 WHERE ((x'' COLLATE RTRIM IN ()));SELECT ALL '{8?Pb*!\' FROM t0 WHERE ((LIKELY(DISTINCT x'') IN ())); -- 0ms;
SELECT DISTINCT (+ (CAST(t0.c33 AS BLOB))) FROM rt0;SELECT rt0.c2 FROM rt0, t0; -- 0ms;
SELECT CASE WHEN CAST(t0.c33 AS BLOB) THEN (((t0.c33)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (+ (NULL)), ((((UNLIKELY('-100378205'))OR(IFNULL(rt0.c2, rt0.c2))))AND(NULL)) FROM rt0 WHERE ((((((-1212884059)AND(NULL)))OR(x'')) IN (((0.858082119227853)GLOB('')))));SELECT ALL TOTAL(((rt0.c2) IS FALSE)) FROM t0 WHERE ((LIKELIHOOD(x'', 0.6054885252421254) IN ()));SELECT (((('671776856') IS FALSE))%(((rt0.c1) BETWEEN (t0.c33) AND (t0.c33)))) FROM rt0 WHERE ('');SELECT DISTINCT COALESCE(((rt0.c1) NOT NULL), (((rt0.c2, t0.c33, NULL)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, t0.c33, rt0.c1))), ((t0.c33) IS FALSE), (~ (rt0.c2))) FROM t0, rt0 WHERE (NULL) ORDER BY CASE WHEN (+ (rt0.c1)) THEN (rt0.c0 IN (t0.c33, t0.c10)) END; -- 0ms;
SELECT ALL (((0xffffffff9a824041)) NOT BETWEEN ((CASE WHEN t0.c10 THEN rt0.c2 ELSE 0.2776360395832035 END)) AND ((((t0.c10) NOTNULL)))) FROM t0, rt0 WHERE (TRIM(DISTINCT (('䑐L')OR(1.28181817E9)), ABS(DISTINCT NULL))); -- 1ms;
SELECT (NOT (CASE '1118454839'  WHEN NULL THEN t0.c33 END)), (+ (CASE rt0.c1  WHEN t0.c33 THEN rt0.c1 ELSE rt0.c2 END)), GROUP_CONCAT(x'') OVER () FROM rt0, t0 LIMIT 498098443; -- 0ms;
SELECT DISTINCT (((((rt0.c1)AND(t0.c33)))AND(rt0.c0)) IN (((rt0.c0) IS FALSE), (NOT (rt0.c0)))) FROM t0, rt0 WHERE (((((((((((x'')=('-68885704')))OR(((NULL) NOT BETWEEN (x'') AND (NULL)))))OR(NULLIF(NULL, '-902090161'))))AND((NOT (NULL)))))OR((0.696520670808692 IN ())))) ORDER BY (((rt0.c2)OR(rt0.c2)) IN ()), ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (x'd99a'))  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c10 FROM rt0, t0 WHERE (HEX((NOT (0.13551187119116803)))); -- 0ms;
SELECT DISTINCT 0.6872600012616732 FROM t0 LEFT OUTER JOIN rt0 ON (((~ (t0.c10)))&((((t0.c10))<=((t0.c33))))) WHERE (((x'')LIKE(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT NULL FROM t0 WHERE ((((((NOT (x'3897481b')))OR(('MA' IN ()))))AND(CAST(2.055381741E9 AS REAL)))); -- 0ms;
SELECT CAST(rt0.c2 AS TEXT) COLLATE NOCASE FROM t0 LIMIT 1939570176;SELECT ((rt0.c2 IN ()) IN ((rt0.c2 IN ()))) FROM t0, rt0 WHERE (CASE ((0.7318555218241436)IS NOT(9.14392272E8))  WHEN ((((((((x'')OR(NULL)))AND(868168299)))OR(x'edf00d70')))AND(0.027455392737756212)) THEN '-818365595' END); -- 0ms;
SELECT ALL (((((t0.c10)) BETWEEN ((t0.c10)) AND ((t0.c10))))||(rt0.c2 COLLATE RTRIM)) FROM t0 WHERE (CAST(UNLIKELY(DISTINCT NULL) AS REAL));SELECT ALL ((((rt0.c2) NOTNULL))&(CASE rt0.c2  WHEN t0.c10 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c10 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c10 THEN t0.c33 WHEN rt0.c2 THEN rt0.c2 WHEN '' THEN rt0.c2 END)) FROM rt0 WHERE (0.12156290256792757 COLLATE NOCASE);SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c10)))) NOTNULL), (((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN (((t0.c33 IN ()), (rt0.c0 IN (NULL, 'v\n좁L}|L]')), CAST(rt0.c2 AS TEXT))) AND ((LIKELY(t0.c33), CASE WHEN rt0.c0 THEN rt0.c1 END, ((((rt0.c2)AND(t0.c33)))OR(t0.c10))))), ((((((t0.c10)AND(rt0.c2)))AND((NOT (t0.c33)))))AND(TRIM('0.663414039640393', rt0.c0))) FROM rt0 WHERE (CAST(((((((((((((0.0467354902867122)AND(x'')))OR('')))OR(x'7474')))AND(NULL)))AND(0.7773960283870358)))OR(x'aeb6')) AS NUMERIC)) LIMIT -1461598152 OFFSET 255092989;SELECT NULLIF(MAX(rt0.c1), (- (rt0.c1))) FROM rt0 WHERE ('HuM'); -- 0ms;
SELECT '', (t0.c10 COLLATE NOCASE IN (t0.c10)), (((t0.c33, rt0.c0, '')) NOT BETWEEN ((((NULL) ISNULL), IFNULL(DISTINCT rt0.c1, rt0.c0), rt0.c0 COLLATE BINARY)) AND ((((t0.c33) BETWEEN (t0.c33) AND (t0.c10)), t0.c10 COLLATE RTRIM, (rt0.c2 IN (t0.c33, rt0.c1))))), rt0.c1, CAST(rt0.c2 AS INTEGER) COLLATE RTRIM FROM t0 WHERE ((((- ('-979695762'))) BETWEEN (IFNULL(NULL, x'31ba')) AND ((('unowq') NOT BETWEEN (0.09365509514410153) AND (-1156504322)))));SELECT ((CAST(rt0.c2 AS BLOB))<<(((rt0.c0) BETWEEN (0.8161422181364013) AND (t0.c10)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((((((rt0.c1)) BETWEEN ((t0.c33)) AND ((rt0.c0))))OR((rt0.c0 IN ()))))OR(((rt0.c1)GLOB(rt0.c2)))) FROM t0;SELECT ALL (((rt0.c0) BETWEEN ('.迣') AND (rt0.c2)) IN ()) FROM rt0, t0 WHERE (((-1.502336784E9)&(CAST('' AS TEXT)))); -- 0ms;
SELECT DISTINCT CAST(TOTAL(t0.c10) AS TEXT), ((t0.c10 COLLATE BINARY) NOT NULL), '1726074146' FROM t0, rt0; -- 1ms;
SELECT ALL SUM(((t0.c33) NOT BETWEEN (rt0.c1) AND (rt0.c1))) FROM t0;SELECT CAST((rt0.c2 IN ()) AS TEXT), LAST_VALUE(((rt0.c1 IN (t0.c10)) IN ())) OVER (), (t0.c33 IN (t0.c33)) COLLATE RTRIM, GROUP_CONCAT(CAST(t0.c33 AS REAL)), (+ (((((rt0.c1)AND(t0.c10)))AND(t0.c33)))) FROM t0, rt0 LIMIT -182158420 OFFSET -832488100; -- 0ms;
SELECT ALL (((rt0.c0 COLLATE NOCASE, ((t0.c10) NOTNULL), CAST(rt0.c0 AS BLOB)))<>(((+ (rt0.c2)), ((rt0.c1)+(rt0.c0)), (rt0.c2 IN ())))) FROM rt0, t0 WHERE (((1709235870 COLLATE RTRIM)GLOB(((0.9587394879633266) IS TRUE)))) ORDER BY (((((rt0.c0))=((rt0.c1)))) BETWEEN (((t0.c33) IS FALSE)) AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(t0.c33)))AND(rt0.c1)))); -- 0ms;
SELECT CAST(t0.c33 AS INTEGER) COLLATE RTRIM FROM rt0;