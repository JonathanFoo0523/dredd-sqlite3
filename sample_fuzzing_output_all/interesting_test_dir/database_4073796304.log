-- Time: 2024/06/07 01:21:36
-- Database: database4
-- Database version: 3.40.0
-- seed value: 4073796304
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 TEXT , c1 INT , c2 INT , c3 BLOB , c4 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
INSERT OR IGNORE INTO t0(c4, c3) VALUES (0x1d773aed, '-1283927342'); -- 0ms;
REINDEX; -- 1ms;
END TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(x'c550') WHERE ((((t0.c1)<<(t0.c3))) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('mH\n9'), (NULL), (-2026959806); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('1473384809') WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(x'15eb')); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -685841842);\n; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE t0 SET (c4)=(x''); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x''), (''), ('y<\\rVQZ2h'); -- 1ms;
INSERT OR IGNORE INTO t0(c0, c2, c1, c4) VALUES (926957041, 0Xffffffffc7d9b5a8, -1.7976931348623157E308, 'p>e E'), ('9|\nndꇮN', 0.4973630817563587, 1.473384809E9, x''), (0.843218308358687, x'', NULL, 0Xffffffffff3ba4ed); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL), (934188150), (-9.42033496E8); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t0(c1, c0, c2) VALUES (NULL, x'acdf', NULL); -- 1ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0, c2, c4, c3, c1) VALUES (x'', '9Y', 0X2573376a, NULL, NULL), ('ck', '', x'', x'', -1776442898), ('934188150', 0Xffffffffc7d9b5a8, 0X37ae9476, NULL, 0.4973630817563587), (x'87b32346', x'd25f', NULL, x'20b8', NULL), (0Xffffffffd9057023, '-2026959806', x'', '-1283927342', '-1234738483'); -- 0ms;
UPDATE OR FAIL vt1 SET (c0, c0)=(0.8165044256008601, 0Xffffffffff3ba4ed); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO t0(c0, c3) VALUES (x'524e', NULL), (NULL, NULL), (x'', NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE t0 SET c1='-653955037' WHERE ((((t0.c2 COLLATE BINARY)OR(((t0.c3) NOT BETWEEN (t0.c4) AND (t0.c0)))))OR(t0.c3)); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'') WHERE (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))); -- 0ms;
ANALYZE; -- 1ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('628307818'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c3)=('-1234738483') WHERE LOWER(CASE t0.c0  WHEN t0.c3 THEN t0.c4 ELSE t0.c2 END); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0=x'd431', c0='V {}'; -- 2ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.34656897672943376); -- 0ms;
CREATE UNIQUE INDEX i93 ON t0(TIME((((c4, 0x1d773aed, c3)) NOT BETWEEN ((c3, c1, c1)) AND (('-12868371', c1, c1))), c2, ((c4) NOT BETWEEN (c1) AND (c2))) COLLATE BINARY ASC,CASE (((c3))==((c0)))  WHEN ((c2)<=(c3)) THEN ((c3) BETWEEN (c3) AND (NULL)) WHEN 0.34656897672943376 COLLATE BINARY THEN ((((c1)OR(c2)))AND(c3)) WHEN (((c2))<>((c1))) THEN '_}AP9d' COLLATE RTRIM WHEN ((c4)IS(c2)) THEN CASE WHEN c2 THEN c2 END WHEN ((c0) IS FALSE) THEN (((c1))==((c1))) END COLLATE NOCASE DESC,c2 COLLATE NOCASE,((((c2) NOTNULL))!=(((((c3)OR('-12868371')))OR(c1)))) ASC,((CAST(c0 AS INTEGER)) ISNULL) DESC); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1838763755); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1174962218); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('402 -57828663537590452 1121-1648T-4150742993721127911 ', 0.017950518518117464, '1495748278', '됂⨋', '-1776442898'), (0.843218308358687, '-12868371', ((CASE NULL  WHEN x'bfe0' THEN '' END)OR((((('-2026959806')AND('m1E')))AND('y<\\rVQZ2h')))), NULL, '0.0'), (-12868371, NULL, 0.8011166584036532, '-12868371', 'Y<\\rVQZ2H'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 279538575);\n; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c75; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR FAIL t0 SET (c3)=(x''); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
ANALYZE i93; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), (''), (NULL); -- 1ms;
DELETE FROM t0 WHERE (((((((((~ (t0.c75)))OR(((t0.c4)<=(t0.c4)))))OR(((t0.c3)AND(t0.c3)))))AND(CAST('1040356677' AS REAL))))AND((~ (t0.c0)))); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE TEMPORARY VIEW v0(c0) AS SELECT ALL (+ (x'')) FROM vt1, rt0 WHERE ((((NOT (0xffffffffe34f6bd2))) NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32157'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1408142091); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'', c0=x'' WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(-1.441811454E9) WHERE (((rt0.c0)) NOT BETWEEN (((((rt0.c1, rt0.c2, '913147658', NULL, rt0.c2)) BETWEEN ((rt0.c1, 'FH', rt0.c0, -9.42033496E8, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c2))))) AND ((rt0.c2))); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1772467013'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '60995'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
INSERT OR ROLLBACK INTO t1(c0, c75, c2, c3) VALUES (0X45316379, '-12868371', '뫡3', 0xffffffffe6d2c87c), ('', 'FH', '279538575', x''), (0xcd81919, 0.35512269184945977, '-422393732', x''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT t1 SET (c2, c2)=(x'', 'VPjW') WHERE CASE t1.c0 COLLATE NOCASE  WHEN ((t1.c3) NOTNULL) THEN UPPER(DISTINCT t1.c4) END; -- 0ms;
END; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c0) VALUES (0.5496879323141632, 0.5442487042999925, NULL); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t1(c3, c0, c4, c2, c75) VALUES (0.49646179125513257, -0.0, x'', NULL, 'J,>G镅&R'), (0.9852707800967829, '}Z', 0.845909756782049, 0Xffffffffd71ee24e, 0xffffffffb378d2d2), ('0.017950518518117464', NULL, 'B', '-1283927342', NULL); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE i93; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(NULL, x'5ea3'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE t1 SET c3=x'c2bd'; -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
UPDATE OR IGNORE t1 SET c3=x'' WHERE CASE WHEN PRINTF(t1.c75, t1.c4, t1.c3, t1.c75, t1.c3) THEN t1.c3 WHEN t1.c75 THEN NULL WHEN (t1.c2 IN (t1.c2)) THEN (((x'')) NOT BETWEEN ((t1.c4)) AND ((t1.c3))) END; -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c0, c2)=('913147658', x'a870'); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.7165067300683453, 'ck'); -- 1ms;
CREATE UNIQUE INDEX i84 ON t1(0.935390529291548 COLLATE BINARY,(CAST(c2 AS NUMERIC) IN ()) ASC,(((- (c4))) NOT BETWEEN ((+ (c0))) AND (((c2) BETWEEN ('-1222799762') AND (c2)))),(NOT (c0)) COLLATE NOCASE COLLATE BINARY,(((((c0)) NOT BETWEEN ((0.11800864848468506)) AND ((NULL)))) IS FALSE) COLLATE RTRIM); -- 0ms;
CREATE INDEX i99 ON t1(((+ (c3)) IN ()),(CASE WHEN c4 THEN c3 END IN ()) COLLATE NOCASE,((((c0) IS TRUE)) IS TRUE) ASC,(((CASE WHEN c2 THEN c3 ELSE c75 END))=((CASE c3  WHEN c4 THEN c0 WHEN c0 THEN c3 WHEN c75 THEN c4 END))),((((0.27695397289279744)OR((((c2, c2, c2))=((c0, c2, c3))))))OR((~ (c4)))) COLLATE NOCASE); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE CASE WHEN HEX(vt1.c0) THEN (('p>e E')=(vt1.c0)) END; -- 0ms;
ANALYZE rt0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (NULL, 'Utt[WKᅩ￿][', NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 299920208); -- 0ms;
REINDEX i99; -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=('926957041') WHERE x'e3dc452f' COLLATE BINARY; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (''); -- 0ms;
ANALYZE; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF UPDATE OF c0 ON v0 FOR EACH ROW  WHEN CAST(v0.c0 COLLATE BINARY AS NUMERIC) BEGIN SELECT RAISE(IGNORE);DELETE FROM vt0;SELECT RAISE(IGNORE);UPDATE vt0 SET c0=NULL;END; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (- (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (- ((+ (v0.c0)))) FROM vt0, t1, rt0, vt1;SELECT ALL ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))IS NOT(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 END)) FROM vt0, v0, rt0, t1, vt1; -- 0ms;
SELECT ((((((vt1.c0)OR(t1.c4)))AND(vt1.c0))) NOT BETWEEN (SQLITE_VERSION()) AND (((t1.c4)%(rt0.c1)))) FROM vt1 FULL OUTER JOIN vt0 ON (('1925515940') NOT NULL) INNER JOIN t1 ON NULL LEFT OUTER JOIN rt0 ON '' FULL OUTER JOIN v0 ON ((((((rt0.c0)AND(rt0.c1)))OR(t1.c0)))IS(((t1.c75)OR(t1.c4)))) WHERE ((((((0.4156560152032951, '-2026959806', 0.16362256375504425)) NOT BETWEEN (('', '', 1.473384809E9)) AND ((NULL, NULL, NULL)))) BETWEEN (((((x'')AND(0.6176638329135401)))AND(0.7911274561528442))) AND (((x'') IS TRUE)))); -- 1ms;
SELECT 0.6961706422933175 FROM vt1, v0 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (CAST(0X5f55e341 AS NUMERIC)) AND ((NULL IN ())))) ORDER BY (~ (CAST(rt0.c1 AS REAL)))  NULLS LAST;SELECT ((((v0.c0) IS FALSE)) ISNULL) FROM v0, t1, vt0 ORDER BY ((t1.c3)+(vt1.c0)) COLLATE RTRIM  NULLS FIRST, ((vt1.c0 COLLATE BINARY)%(HEX(DISTINCT v0.c0))) ASC  NULLS FIRST LIMIT -1828972671 OFFSET 292891439;SELECT (CAST(rt0.c2 AS REAL) IN ()), NULL, ((t1.c3 IN ()) IN ()), MAX((t1.c4 IN (x'20bcd8a7', rt0.c0))), ((((((((json_remove(t1.c4, rt0.c2))OR(TOTAL(t1.c3))))OR(((t1.c3)&(rt0.c0)))))AND(((((t1.c3)AND(0.03206532982150434)))AND(rt0.c2)))))OR(((t1.c2) NOT NULL))) FROM vt1, rt0, t1;SELECT ALL (- (SUM(rt0.c1))), (((((((rt0.c0)OR(0X3e029545)))AND(t1.c75))))!=((CASE t1.c0  WHEN vt0.c0 THEN -1330464031 WHEN rt0.c2 THEN rt0.c1 WHEN 399092065 THEN rt0.c1 ELSE t1.c2 END))), (~ (((t1.c2) NOT NULL))) FROM rt0 CROSS JOIN vt0 ON (((((t1.c0) IS TRUE)))=((((x'')%(0x0))))) INNER JOIN v0 ON CASE WHEN ((t1.c2) NOT BETWEEN (t1.c3) AND (0.8109458160321837)) THEN rt0.c0 ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t1.c0)) END WHERE (UPPER(x'')) GROUP BY ((rt0.c2) BETWEEN ((+ (t1.c4))) AND (UNICODE(t1.c2)));SELECT ALL (((t1.c3 IN ())) NOT BETWEEN (CASE rt0.c0  WHEN t1.c2 THEN t1.c0 ELSE t1.c0 END) AND ((t1.c75 IN (NULL)))) FROM rt0, vt1, t1; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt0, v0, t1 WHERE (((((0Xffffffffb66762cd) NOTNULL)) BETWEEN (LOWER(0x66b1188e)) AND (CASE WHEN 0.6176638329135401 THEN '!L' WHEN NULL THEN NULL WHEN x'032b' THEN '1421772465' ELSE NULL END))); -- 0ms;
SELECT ALL ((0.4973630817563587)GLOB(CASE vt1.c0  WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN t1.c4 WHEN vt1.c0 THEN vt1.c0 END)) FROM vt0 WHERE (CASE WHEN ((((((((0.5538129665848045)OR(NULL)))OR(NULL)))AND(NULL)))AND(x'')) THEN ((0.7853236452960674)<<(x'')) ELSE '{D3.{i~~' END);SELECT DISTINCT (((((((((NULL)OR(t1.c2)))OR(t1.c3)))OR(vt0.c0)))OR(t1.c3)) IN ()) FROM t1 WHERE (((+ ('-942033496')) IN ())); -- 0ms;
SELECT DISTINCT ((((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR(NULL)))AND(((t1.c75)AND('')))) FROM t1;SELECT ALL rt0.c0 FROM rt0, vt0, t1, v0; -- 0ms;
SELECT DISTINCT ((t1.c2) NOTNULL) COLLATE NOCASE FROM t1, v0; -- 0ms;
SELECT rt0.c2 FROM v0 WHERE (((('You᭨' IN ())) BETWEEN (NULL COLLATE NOCASE) AND ((~ (0X72c50aa4))))) GROUP BY ((t1.c3 COLLATE NOCASE) IS FALSE) HAVING (((+ (rt0.c2)))>=((~ (vt1.c0))));SELECT COUNT((~ (v0.c0))) OVER () FROM t1, rt0 WHERE ((((((0.17201623337167216 IN (0.8165044256008601, 0.7608060745726908)))AND(9.13147658E8)))OR((NULL IN ()))));SELECT t1.c0 FROM v0, vt1, rt0 NOT INDEXED, vt0 WHERE (((((0.659236380897179)>(0xffffffffc7d9b5a8)))<<(((NULL) IS FALSE))));SELECT ALL TOTAL((((t1.c4)) BETWEEN ((t1.c4)) AND ((x'f508')))), NULL, (+ ((((vt0.c0, t1.c4, v0.c0))<=((t1.c75, rt0.c0, rt0.c0))))) FROM vt1, rt0, vt0, v0;SELECT DISTINCT t1.c2 FROM vt1, t1, rt0, v0, vt0 WHERE (((((('1396976139')>>(NULL)), (((((((('1832975649')OR('WM8h<i酋/*')))OR(NULL)))OR(0xffffffffbfeb1b68)))AND('922424485')), CASE WHEN x'' THEN '-1776442898' END))<(((((x'')) NOT BETWEEN ((0.40833510618254565)) AND (('-481334318'))), HEX('-1467857929'), CAST('ck' AS BLOB))))); -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(((t1.c3)LIKE(t1.c3))), ((t1.c75)LIKE(t1.c4)) COLLATE RTRIM, 0.34656897672943376 FROM t1 WHERE (x''); -- 0ms;
SELECT ALL v0.c0 FROM rt0 WHERE (((x'' IN ('413978655')) IN ())) GROUP BY (((v0.c0)) BETWEEN ((((t1.c75) IS FALSE))) AND (((((rt0.c2))>((t1.c3)))))), CAST(NULL AS REAL), rt0.c0 ORDER BY ((((CASE vt1.c0  WHEN vt0.c0 THEN t1.c4 WHEN v0.c0 THEN t1.c75 WHEN t1.c75 THEN 0X6e76a7db ELSE rt0.c1 END)AND((NOT (vt1.c0)))))AND('JA.zᅩ')) ASC;SELECT v0.c0 FROM rt0, v0, t1; -- 0ms;
SELECT DISTINCT (((rt0.c1)LIKE(rt0.c1)) IN ()), CASE json_patch(t1.c2, rt0.c0)  WHEN ((((t1.c0)AND(rt0.c2)))AND(t1.c4)) THEN MAX(t1.c75) END, ((((t1.c2) ISNULL)) BETWEEN (t1.c0 COLLATE RTRIM) AND (((rt0.c0) NOT NULL))) FROM t1, v0, vt1, vt0 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (DATETIME('-1222799762', x'b6ac', -68725697, NULL, NULL, '0.5496879323141632', 0.043949198162688496)) AND (((x'') NOT BETWEEN (x'') AND (0.2894776985743238)))));SELECT ALL ((((vt1.c0)/(t1.c2)))IS NOT(((t1.c75)/(vt1.c0)))) FROM rt0 WHERE ((((NULL) NOTNULL) IN ()));SELECT DISTINCT TYPEOF(DISTINCT TRIM(vt0.c0)), 'q,嶪{', (((((((((rt0.c0)AND(t1.c3)))AND(0x31462aa)))OR(t1.c2)))AND(v0.c0)) IN ((('0.16362256375504425')AND(t1.c4)))), (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))))<=(((t1.c4) NOTNULL))), (((t1.c3) NOTNULL) IN ()) FROM vt1, t1, rt0, vt0, v0 WHERE (CASE WHEN ((('B,'))<((x'fe6dbcd2'))) THEN ((x'') NOT NULL) WHEN ((((NULL)OR(0.9322066851118422)))OR(x'4b5b')) THEN (x'' IN ()) WHEN (~ ('2YrO>W0')) THEN ((0X4a922f16)>=(0.46779246174503586)) WHEN (+ ('')) THEN (((0.11062117033810326))>=(('1160864633'))) WHEN ('1495748278' IN ()) THEN (((x'9c9a')) BETWEEN (('1421772465')) AND (('-1772854689'))) END) ORDER BY ((((t1.c3)*(rt0.c0)))OR((vt1.c0 IN ()))) DESC  NULLS LAST, (((v0.c0)&(vt0.c0)) IN ())  NULLS FIRST; -- 105ms;
SELECT DISTINCT ((t1.c0 COLLATE BINARY) NOT NULL) FROM t1, vt1, v0, rt0, vt0 ORDER BY CAST(((rt0.c1)||(t1.c2)) AS REAL) LIMIT 279538575; -- 19ms;
SELECT CASE WHEN ((((t1.c2)OR(t1.c4)))OR(-13996004)) THEN ((0.5442487042999925) IS TRUE) WHEN ((rt0.c0)IS(vt1.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN ((((vt1.c0)OR(rt0.c1)))AND(t1.c75)) THEN ((vt0.c0) NOT BETWEEN (t1.c2) AND (rt0.c2)) WHEN rt0.c0 THEN (((vt0.c0))!=((vt0.c0))) WHEN ((vt0.c0)>(v0.c0)) THEN ((t1.c75) NOT BETWEEN (x'fe33') AND (t1.c75)) ELSE CAST(rt0.c1 AS NUMERIC) END FROM t1, vt1, rt0, vt0, v0; -- 0ms;
SELECT (((t1.c4)|(t1.c3)) IN ()) FROM rt0 WHERE (CASE WHEN 0.015665505428020476 THEN CASE 0.3674717311937937  WHEN 0.544713959731687 THEN x'9638' END END) GROUP BY x'' HAVING x''; -- 0ms;
SELECT ALL (((((t1.c2))>((t1.c3))))*(MIN(0.06153473595806169))) FROM t1, vt1 FULL OUTER JOIN vt0 ON t1.c4 COLLATE NOCASE; -- 2ms;
SELECT DISTINCT ((rt0.c0)<=(vt0.c0)) COLLATE RTRIM FROM vt0, vt1, t1, v0 WHERE ((0.4453233675660321 IN (((NULL) NOT NULL), ((1.72288219E9) IS FALSE)))) GROUP BY ((t1.c0) NOT NULL);SELECT DISTINCT AVG(((t1.c2)GLOB(v0.c0))) OVER () FROM t1, vt0 WHERE (x'' COLLATE NOCASE);SELECT DISTINCT (~ (t1.c75)) FROM rt0 WHERE (json_object((+ (0xffffffffe58b5a94)), ((NULL) ISNULL), json_quote(x''), ((0.609858788961071) ISNULL))) LIMIT -481334318;SELECT ALL COUNT(*), COALESCE(t1.c4, t1.c0) COLLATE RTRIM, MIN(((rt0.c1)OR(rt0.c0))) FROM v0, rt0;SELECT DISTINCT ((v0.c0)%(t1.c75)) COLLATE NOCASE FROM vt0, v0, rt0, t1; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0)GLOB(rt0.c0)) THEN (NULL IN (vt0.c0, t1.c0)) END FROM rt0 WHERE (CAST((('279538575') NOT BETWEEN (x'') AND (0.8797945372702116)) AS NUMERIC));SELECT t1.c3 FROM v0, t1, rt0, vt1, vt0 ORDER BY (~ (CASE WHEN t1.c3 THEN t1.c75 WHEN t1.c3 THEN v0.c0 WHEN rt0.c0 THEN t1.c0 ELSE rt0.c1 END)); -- 83ms;
SELECT ALL (((t1.c4, t1.c0, rt0.c0)) NOT BETWEEN ((v0.c0, t1.c4, rt0.c2)) AND ((vt0.c0, '\Y', t1.c2))) COLLATE RTRIM, (((t1.c75, t1.c75, t1.c4)) NOT BETWEEN ((LIKELY(rt0.c1), 'To]+?UcO+' COLLATE NOCASE, (- (t1.c3)))) AND ((CAST(t1.c0 AS NUMERIC), v0.c0 COLLATE RTRIM, ((t1.c4) BETWEEN (rt0.c2) AND (t1.c3))))), ((t1.c3) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE BINARY FROM vt1, v0 LEFT OUTER JOIN t1 ON LIKELY(DISTINCT CAST(rt0.c1 AS REAL)) INNER JOIN vt0 ON ABS(rt0.c2) WHERE (((((0.419031151029269)=(NULL))) NOT BETWEEN ((0.16362256375504425 IN ())) AND (IFNULL(x'1dbe', '-273874868'))));SELECT DISTINCT 0.043949198162688496 FROM t1, vt1 WHERE ((((((- (0.609858788961071)))AND(((x'') ISNULL))))AND((~ (NULL))))); -- 0ms;
SELECT (((((rt0.c1 IN ()))OR(t1.c2 COLLATE NOCASE)))OR(((rt0.c0)GLOB(t1.c3)))) FROM vt1, rt0, vt0;SELECT DISTINCT ((AVG(t1.c2))GLOB(t1.c2 COLLATE BINARY)), ((((rt0.c1)IS NOT(t1.c4)))IS NOT(TOTAL(vt1.c0))), FIRST_VALUE((((~ (vt1.c0))) IS TRUE)) OVER () FROM t1, vt0, vt1 WHERE ((- (((NULL) ISNULL))));SELECT DISTINCT (((((t1.c3))<((x'b934'))))-((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), 45658035 COLLATE BINARY, rt0.c2 COLLATE NOCASE FROM v0, t1, vt0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((t1.c3)>(CAST(t1.c75 AS NUMERIC))) FROM t1, v0, rt0 WHERE (((((CAST(NULL AS INTEGER))AND(((((0.5605173809168799)AND(NULL)))OR(NULL)))))OR((0.9098324755685113 IN ())))); -- 0ms;
SELECT DISTINCT ((((t1.c4) NOT BETWEEN (x'0e92') AND (rt0.c1)))|(GROUP_CONCAT(vt0.c0))) FROM t1;SELECT load_extension(v0.c0, t1.c4) COLLATE BINARY FROM vt1 WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN ((('962389724', x'', x''))<=((x'', 1.040356677E9, ''))) ELSE NULL COLLATE RTRIM END);SELECT CASE WHEN COUNT(vt1.c0) THEN ((t1.c2) BETWEEN (t1.c75) AND (t1.c3)) END FROM v0 WHERE (CAST((NULL IN (x'')) AS NUMERIC));SELECT ALL (((((- (t1.c0)))AND(vt0.c0)))OR(t1.c2 COLLATE BINARY)), CAST((((t1.c4, t1.c2, t1.c4))<>((t1.c2, rt0.c0, t1.c0))) AS NUMERIC), t1.c75 FROM t1, rt0, vt0, v0 LIMIT -937409494 OFFSET -600006250; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))IS NOT((((vt0.c0, t1.c4, v0.c0))>((t1.c3, t1.c3, t1.c4))))), ((((t1.c2)GLOB('1772467013')))||(vt0.c0 COLLATE NOCASE)), ((('-653955037', vt0.c0, rt0.c0)) NOT BETWEEN ((t1.c2, rt0.c2, vt1.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) COLLATE RTRIM FROM vt1, t1, v0, rt0, vt0 GROUP BY (((((v0.c0))==((v0.c0))))OR(((rt0.c0)<(t1.c75)))); -- 88ms;
SELECT DISTINCT LAG(CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC), ((vt0.c0)==('뫡3')), x'') OVER () FROM vt0 ORDER BY CASE rt0.c2  WHEN vt1.c0 THEN t1.c75 WHEN rt0.c0 THEN vt0.c0 WHEN t1.c3 THEN t1.c2 END COLLATE RTRIM COLLATE RTRIM  NULLS LAST;SELECT (+ ((t1.c75 IN ()))) FROM v0 WHERE (CAST('0.34656897672943376' AS REAL)); -- 0ms;
SELECT ALL ((((rt0.c0)/(rt0.c2))) ISNULL), ((rt0.c0 COLLATE BINARY)<>(CAST(t1.c3 AS TEXT))), (((RTRIM(rt0.c0), ((rt0.c2)AND(0.6821415346294909)), (- (t1.c75))))>(((NOT (t1.c3)), ((((vt1.c0)OR(t1.c4)))AND(v0.c0)), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (t1.c75))))) FROM vt1, vt0, v0, rt0, t1; -- 1ms;
SELECT ALL (NOT ((t1.c75 IN (t1.c3, t1.c4)))) FROM v0, vt1, vt0, rt0, t1; -- 0ms;
SELECT DISTINCT GLOB(CASE WHEN t1.c2 THEN vt0.c0 END, t1.c2 COLLATE RTRIM) FROM t1, rt0, v0, vt0 WHERE (((((x'')AND(CAST(NULL AS REAL))))AND(((0.4736781467317054) NOT BETWEEN (0.7266040933061642) AND (-320115496))))); -- 0ms;
SELECT (((v0.c0, t1.c75, NULL)) BETWEEN ((CASE rt0.c1  WHEN v0.c0 THEN t1.c2 END, HEX(vt1.c0), rt0.c1 COLLATE RTRIM)) AND ((GROUP_CONCAT(t1.c75), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), t1.c0))), CUME_DIST() OVER (), (~ ((x'' IN ()))) FROM v0;SELECT DISTINCT (((('KJ^M|&') IS TRUE))IS NOT(((t1.c75) IS FALSE))) FROM vt1;SELECT DISTINCT ((t1.c0) BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE BINARY, (CASE 0.4973630817563587  WHEN rt0.c1 THEN v0.c0 END IN ()), ((CASE t1.c75  WHEN rt0.c2 THEN rt0.c2 ELSE t1.c2 END)>=(rt0.c2)) FROM vt0, t1, v0 ORDER BY ((((t1.c4 IN ())))!=((((t1.c0)GLOB(t1.c3)))))  NULLS LAST;SELECT ((CAST('-273874868' AS NUMERIC))<<(LOWER(t1.c2))), CAST(ABS(t1.c0) AS NUMERIC), CAST(((v0.c0) NOTNULL) AS BLOB), (t1.c75 IN (t1.c75)) COLLATE RTRIM, (((NOT (t1.c3)))-(((rt0.c1)*(NULL)))) FROM t1, vt1, rt0, v0, vt0 WHERE (IFNULL(DISTINCT ('1853269979' IN (x'')), '1813565469' COLLATE NOCASE)) ORDER BY '-1772854689'; -- 0ms;
SELECT ALL DATETIME(CASE WHEN vt0.c0 THEN t1.c3 END, CAST(t1.c75 AS REAL), (rt0.c2 IN ())) FROM rt0 FULL OUTER JOIN t1 ON (((vt0.c0 IN ())) BETWEEN ((((NULL)) BETWEEN ((t1.c75)) AND (('-1330464031')))) AND (((((((((vt0.c0)OR(t1.c75)))AND(t1.c2)))AND(rt0.c1)))AND(t1.c75))));SELECT ((((((((CAST(t1.c3 AS REAL))OR(CASE t1.c0  WHEN v0.c0 THEN x'' WHEN t1.c0 THEN v0.c0 WHEN v0.c0 THEN 628307818 END)))AND(((t1.c0)%(rt0.c2)))))OR(((t1.c4)GLOB(v0.c0)))))OR(CASE WHEN 0.11062117033810326 THEN vt0.c0 ELSE vt0.c0 END)), ((SQLITE_COMPILEOPTION_USED(t1.c3))LIKE((+ (t1.c4)))), ((((t1.c3) IS TRUE))<>(0.7608060745726908)), ((((- (rt0.c1))))<=((0.576428805581437))), (((((t1.c75)<<(vt1.c0))))<((t1.c4 COLLATE BINARY))) FROM vt0, vt1, rt0, v0 WHERE (CAST(((399092065)GLOB(NULL)) AS REAL));SELECT DISTINCT NULLIF(DISTINCT (t1.c2 IN ()), CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE t1.c75 END) FROM t1, v0 LIMIT 292891439 OFFSET -653955037;SELECT ((NULL)IS(rt0.c1)) COLLATE BINARY FROM t1, vt1, rt0, v0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t1.c2)) IS FALSE) FROM rt0 WHERE ((~ (CASE WHEN '766848360' THEN 0.11800864848468506 WHEN '962389724' THEN '-2026959806' WHEN 'KJ^M|&' THEN 0X328b3f53 ELSE NULL END)));SELECT DISTINCT ((((t1.c3)<<(0.9091178196200148)))<<(((rt0.c2)!=(rt0.c1)))), TYPEOF(TRIM(vt0.c0, NULL)), ((COUNT(t1.c3)) NOT BETWEEN (t1.c3 COLLATE BINARY) AND ((vt0.c0 IN ()))) FROM rt0, vt0;SELECT ALL DENSE_RANK() OVER () FROM t1, rt0, v0; -- 1ms;
SELECT ((('638694176') NOTNULL) IN ()) FROM t1, vt0, vt1, v0, rt0 WHERE (x'' COLLATE RTRIM); -- 0ms;
SELECT SQLITE_COMPILEOPTION_USED(((t1.c2)AND(vt0.c0))) FROM vt0, vt1, t1 WHERE (((((CAST('1023697963' AS REAL))AND(((((((((((((x'')OR(NULL)))AND(x'')))AND('')))OR(0X3d04642b)))OR(0x2a291906)))AND('413978655')))))AND(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT (((v0.c0) BETWEEN (t1.c2) AND (NULL)) IN ()) FROM vt0, v0, vt1, rt0 NOT INDEXED WHERE (NULL); -- 0ms;
SELECT DISTINCT ((t1.c2) ISNULL) COLLATE BINARY FROM vt1, vt0, v0, t1, rt0 WHERE (((CASE WHEN '*YM' THEN ')}' ELSE x'bbd382d1' END)LIKE(((0.9106669387687253)*('-691198040'))))); -- 0ms;
SELECT (t1.c0 COLLATE NOCASE IN ((NULL IN (vt1.c0)), ((rt0.c1)>(t1.c3)))) FROM v0, vt1, t1 NOT INDEXED, vt0;SELECT DISTINCT ((CASE t1.c75  WHEN t1.c2 THEN v0.c0 ELSE NULL END) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c4)<(t1.c2)))) FROM rt0, vt0, t1, v0; -- 0ms;
SELECT ALL (((((t1.c2))>((vt1.c0))))LIKE(((rt0.c0) ISNULL))) FROM rt0, vt1, t1, vt0; -- 0ms;
SELECT ALL ((((~ (t1.c2)), (NULL IN ()), (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))))!=((MIN(x''), ((vt1.c0)IS NOT(t1.c0)), rt0.c1 COLLATE NOCASE))) FROM t1, vt1, v0;SELECT DISTINCT COALESCE(DISTINCT '1262624740' COLLATE NOCASE, ((t1.c4)+(rt0.c1))), ((((((((t1.c2)OR(rt0.c0)))AND(v0.c0)))AND((((v0.c0))>=((rt0.c1))))))OR(CASE WHEN t1.c0 THEN t1.c2 END)), (((((t1.c0)>>(vt0.c0))))<((COUNT(*)))), CASE (((t1.c2))<((rt0.c2)))  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((((((((((vt1.c0)OR(vt0.c0)))AND(t1.c75)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END, CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC) FROM vt1, v0 WHERE ((((x'' IN ())) BETWEEN ((((NULL))<=((NULL)))) AND (((1.040356677E9) NOT BETWEEN (NULL) AND ('-600006250')))));SELECT DISTINCT LAST_VALUE(vt0.c0) OVER () FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c1)||(t1.c3)) THEN ((((t1.c3)AND(t1.c3)))OR(t1.c2)) WHEN UPPER(NULL) THEN 'tᒥbూsK' WHEN (x'998b' IN ()) THEN (((vt1.c0))>((t1.c4))) WHEN t1.c2 THEN (+ (t1.c2)) WHEN ((((rt0.c1)AND(x'')))OR(t1.c75)) THEN CAST(rt0.c0 AS TEXT) END;SELECT DISTINCT ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((t1.c3, t1.c4, rt0.c0))<=((t1.c75, 0.9091178196200148, vt1.c0)))) AND (((((((((t1.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(0.7301008702508752)))) FROM vt1, t1, vt0 WHERE (((x'e260') NOT BETWEEN ((NOT (x'0f900a3e'))) AND (0.7271299838709551 COLLATE RTRIM)));SELECT DISTINCT ((((((((LTRIM(rt0.c0))OR((((t1.c4, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, vt1.c0)) AND ((vt0.c0, t1.c2, rt0.c0))))))AND(COUNT(t1.c2))))OR(MIN(rt0.c2))))AND(((rt0.c0)<=(rt0.c2)))), v0.c0, (NOT ((t1.c0 IN ()))) FROM vt1, rt0, t1, v0;SELECT DISTINCT (+ (x'' COLLATE NOCASE)) FROM vt1, vt0, t1, rt0 WHERE ((CASE '-200698030'  WHEN 0X1f208969 THEN x'' ELSE 'm1e' END IN ('_' COLLATE BINARY))) LIMIT 1552378952 OFFSET -150001320; -- 0ms;
SELECT CAST(x'9dfd' AS BLOB) FROM vt0, rt0, vt1, v0, t1; -- 0ms;
SELECT AVG(v0.c0) FROM t1, v0, vt1, vt0, rt0; -- 20ms;
SELECT DISTINCT (- (((rt0.c2)>=(rt0.c0)))), ((GROUP_CONCAT(t1.c4)) NOT NULL), ((((t1.c75)IS(vt0.c0))) NOTNULL) FROM vt0, rt0 WHERE ((((x'')>=(x'')) IN ()));SELECT (+ (('-68725697' IN (t1.c75)))) FROM v0, rt0;SELECT ALL ((((t1.c3)IS(t1.c2))) ISNULL) FROM vt1, vt0, v0, t1; -- 0ms;
SELECT DISTINCT CAST(((t1.c0) NOT BETWEEN (t1.c75) AND (rt0.c2)) AS INTEGER), (t1.c4 IN ()), (json_extract(t1.c3, vt0.c0) IN (t1.c75 COLLATE BINARY, (t1.c75 IN (t1.c4)), UNLIKELY(0.02688611654761497))) FROM vt1, t1;SELECT DISTINCT ((rt0.c0) IS TRUE) FROM vt0, v0;SELECT ((((('', t1.c75, vt0.c0)) BETWEEN ((t1.c4, t1.c0, t1.c2)) AND ((t1.c75, t1.c4, t1.c3)))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND ((~ (vt1.c0)))) FROM vt0, t1, vt1 INDEXED BY i99 WHERE ((((('-2083588537')GLOB(0.9585022181168678))) ISNULL));SELECT DISTINCT (~ (((((((((t1.c0)AND(rt0.c0)))AND(t1.c2)))OR(t1.c4)))OR(rt0.c1)))), 0.5038201835839151, ((CAST(vt0.c0 AS TEXT))!=(((((((((t1.c75)OR(t1.c2)))OR(t1.c0)))AND(rt0.c0)))AND(t1.c75)))) FROM t1;SELECT ALL AVG(t1.c0 COLLATE BINARY) COLLATE BINARY FROM vt0, rt0 WHERE (((((0.5957128560866904) BETWEEN (x'') AND ('')))IS((- (8.47986515E8)))));SELECT DISTINCT CAST(CASE WHEN t1.c0 THEN NULL WHEN rt0.c2 THEN NULL WHEN 885139204 THEN rt0.c2 END AS NUMERIC) FROM vt0, t1, vt1, rt0, v0 WHERE ((NULL IN (NULL)) COLLATE BINARY COLLATE RTRIM) LIMIT -1062937159; -- 0ms;
SELECT DISTINCT ((0.7271299838709551)=(((rt0.c0) NOT BETWEEN (t1.c3) AND (rt0.c2)))), rt0.c2, LIKELY(DISTINCT v0.c0 COLLATE NOCASE) FROM rt0, vt1, vt0, t1, v0 WHERE (((x'4b2c')<('1772467013')) COLLATE BINARY); -- 1ms;
SELECT DISTINCT LAG(((LIKELIHOOD(t1.c4, 0.6059688303339318))AND(((vt0.c0) NOTNULL))), ((((v0.c0) NOT NULL)) IS FALSE), (((((rt0.c0)IS(t1.c0))))!=(('-1062937159')))) OVER ( RANGE (~ (((t1.c75) NOTNULL))) PRECEDING EXCLUDE CURRENT ROW), CASE CAST(x'' AS BLOB)  WHEN (((t1.c2))<((rt0.c1))) THEN '-724252703' ELSE ((rt0.c2)<<(t1.c4)) END, (((((rt0.c0))<((v0.c0)))) BETWEEN ((('R') NOT BETWEEN (t1.c2) AND (rt0.c2))) AND ((t1.c4 IN (t1.c4)))) FROM vt1, t1, vt0, rt0, v0;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (t1.c3) AND (t1.c3)))LIKE(('6GDU}\[' IN ()))) FROM vt1, vt0 WHERE (CASE (('-1068765881')IS('#1Qpp#'))  WHEN CASE x'fc37'  WHEN -6.0000625E8 THEN 0.5587634921153258 END THEN (('287879799') NOT BETWEEN (NULL) AND ('')) WHEN ((('1FHXkg'))<((NULL))) THEN (('YOU᭨')>>(NULL)) WHEN '-1441811454' THEN (('-1696924013') ISNULL) END) LIMIT 759148666;SELECT DISTINCT vt1.c0 FROM vt1, vt0, v0, t1 WHERE (((('?{{4}z''tk')) BETWEEN ((((((x'')AND(0.05252980293724674)))OR(NULL)))) AND ((CASE WHEN NULL THEN 0.9711490395993303 END)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), CASE NULL  WHEN rt0.c0 COLLATE NOCASE THEN ((NULL)<=(v0.c0)) ELSE rt0.c0 END, (vt0.c0 COLLATE RTRIM IN ()), LIKELIHOOD(CASE t1.c2  WHEN t1.c4 THEN t1.c0 ELSE NULL END, 0.07720922770628635), MAX(CASE t1.c75  WHEN t1.c4 THEN NULL ELSE v0.c0 END) FROM t1, vt0, vt1 WHERE (((CAST(NULL AS REAL))AND(((x'cf8b')|('0.5496879323141632')))));SELECT ALL '1495748278' FROM v0, t1, rt0, vt0, vt1; -- 0ms;
SELECT DISTINCT (((-273874868))<=(((v0.c0 IN ())))), (((((rt0.c0)) BETWEEN (('-1811095534')) AND ((t1.c75))))AND(TRIM(rt0.c1))), (((vt0.c0 IN (t1.c0))) NOTNULL) FROM vt1, rt0, vt0, v0 WHERE (CAST(((x'f181') NOT BETWEEN ('0.9585022181168678') AND (0.5605173809168799)) AS REAL)) ORDER BY (((NOT (vt1.c0)))>=(((v0.c0)<(rt0.c0)))) DESC  NULLS LAST;SELECT ALL MAX(json_insert(rt0.c0, vt1.c0, t1.c2)) FROM rt0 WHERE (((((x'')==('')))OR(CAST(-1.828972671E9 AS BLOB))));SELECT (NOT (((vt0.c0) BETWEEN (t1.c0) AND (rt0.c0)))) FROM v0, rt0;SELECT DISTINCT CASE WHEN rt0.c2 THEN '1251094294' WHEN v0.c0 THEN vt0.c0 WHEN t1.c4 THEN t1.c4 END COLLATE NOCASE FROM vt1;SELECT DISTINCT COUNT((+ (vt1.c0))) FROM t1, rt0 WHERE (CAST((~ (NULL)) AS TEXT));SELECT ALL (((('1813565469')-(rt0.c2))) BETWEEN (MAX(x'')) AND ((NOT (t1.c4)))) FROM v0 LIMIT 766848360;SELECT TYPEOF(v0.c0 COLLATE NOCASE) FROM t1, rt0 WHERE (((((x'')OR(x'1230')))AND((- (NULL))))) GROUP BY (- (UPPER(DISTINCT vt0.c0))) HAVING ((((((t1.c0)/(x'')))OR(((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c2)))))OR(((rt0.c2) IS FALSE))) ORDER BY (((((((v0.c0, v0.c0, x'', v0.c0, v0.c0))>=((t1.c2, rt0.c2, t1.c3, vt1.c0, rt0.c2))))OR(CAST(t1.c75 AS REAL))))AND(((vt1.c0)|(t1.c4))));SELECT (((((t1.c0) NOT BETWEEN (t1.c3) AND (t1.c2)), ((vt0.c0) ISNULL), (+ (t1.c4))))<((UPPER(t1.c0), AVG(t1.c0), (((t1.c0))>=((t1.c0)))))), TOTAL(((t1.c4)GLOB(v0.c0))) OVER (), (CASE WHEN rt0.c2 THEN t1.c3 END IN (((rt0.c1)<=(NULL)), (t1.c0 IN ()))) FROM vt1, t1, v0, rt0, vt0; -- 17ms;
SELECT DISTINCT LOWER(DISTINCT rt0.c0) COLLATE NOCASE FROM rt0, vt0, vt1, v0, t1 WHERE ((((((x'', NULL, NULL))==((-1.696924013E9, x'', '1450109796'))))AND('-1467857929'))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t1, rt0, vt1; -- 0ms;
SELECT DISTINCT (+ ((t1.c3 IN (rt0.c1)))), CASE CASE WHEN v0.c0 THEN t1.c75 ELSE t1.c3 END  WHEN CASE WHEN t1.c4 THEN rt0.c2 END THEN UNLIKELY(DISTINCT rt0.c2) ELSE (((vt1.c0, rt0.c1, t1.c2))!=((t1.c3, t1.c0, rt0.c2))) END, (+ ('267720345')) FROM v0, t1, vt0 WHERE ((((('-2108889198')>>(NULL)))%(CASE WHEN 'dd-]' THEN 747195268 WHEN '-1234738483' THEN NULL WHEN '9|\nndꇮn' THEN '-273874868' ELSE '\n2/o\\n>' END)));SELECT ALL NULLIF(DISTINCT (vt1.c0 IN ()), (((rt0.c0))>((rt0.c2)))), TOTAL((((t1.c0))<((rt0.c0)))) OVER (), CAST((+ (t1.c0)) AS BLOB) FROM rt0, vt0, v0, vt1;SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c0 THEN t1.c3 END) NOT BETWEEN (((rt0.c2)*(t1.c3))) AND (AVG(v0.c0))) FROM vt1, rt0, t1, v0 WHERE (((((x'')==(x'')))==(((-126429714) IS TRUE)))); -- 4ms;
SELECT DISTINCT (((((~ (vt1.c0)))AND((NOT (t1.c3)))))AND((('hsx2&') IS FALSE))), -4.81334318E8, ((t1.c3)|(((rt0.c2)|(t1.c2)))) FROM vt0;SELECT DISTINCT t1.c2 FROM vt0, v0, vt1, rt0;SELECT DISTINCT CAST(((t1.c75)/(vt0.c0)) AS BLOB) FROM t1, vt0 GROUP BY ((CAST(v0.c0 AS REAL))<=(((((rt0.c0)AND(vt1.c0)))OR(x'')))) HAVING ((((t1.c4)||(rt0.c2))) BETWEEN (CAST('hsx2&' AS NUMERIC)) AND (((((rt0.c1)AND(t1.c3)))OR(0.9389538469201987))));SELECT DISTINCT t1.c4 FROM rt0, t1 WHERE ((((x'')) NOT BETWEEN ((CASE 'oqM'  WHEN '|im[''ynx' THEN 0xfffffffff1fb5636 ELSE '1303668761' END)) AND ((json_extract('*	*~a', x'')))));SELECT ALL COUNT(*) FROM rt0, vt1, v0 WHERE ((((x'')) NOT BETWEEN (((- (0.44284101637270457)))) AND ((((NULL)%('plyb')))))); -- 0ms;
SELECT ALL COALESCE(SUM('H庽ꇮ-o'), ((t1.c3)&(t1.c75))) FROM vt0, t1, vt1, rt0 WHERE (((('')<=(x'')) IN ())); -- 1ms;
SELECT ALL MAX(((0.20224057489644098)>>(t1.c4))) FROM vt0, rt0, t1; -- 0ms;
SELECT ((t1.c2 COLLATE NOCASE)IS NOT(CAST(t1.c4 AS TEXT))), ((COUNT(t1.c4))>=(NULL)), LIKELY(json_patch(t1.c0, t1.c4)) FROM vt0, rt0;SELECT DISTINCT ((((((rt0.c2)OR(rt0.c1)))AND(vt1.c0)))>=((- (v0.c0)))) FROM v0, rt0, vt1, vt0; -- 0ms;
SELECT ALL ((((((((t1.c75)AND((((rt0.c0, t1.c4, v0.c0))==((rt0.c1, rt0.c1, rt0.c0))))))OR((+ ('746712560')))))AND((((t1.c75))>((t1.c0))))))AND((((t1.c75)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))) FROM rt0, vt1, v0 WHERE ((NOT (((NULL) NOT BETWEEN ('J,>G镅&R') AND (NULL)))));SELECT DISTINCT (((((rt0.c1, '	/U{J}', t1.c4)) NOT BETWEEN ((t1.c4, vt0.c0, rt0.c0)) AND ((rt0.c1, v0.c0, 0.34656897672943376))))OR(((vt0.c0)IS NOT(v0.c0)))) FROM vt1 ORDER BY ((- (rt0.c0)) IN ()), ((((((((((((NULL)AND(t1.c3)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(vt1.c0 AS NUMERIC))))OR((v0.c0 IN (t1.c75)))))AND(((('l3퀟')) NOT BETWEEN ((t1.c75)) AND ((t1.c0))))))OR(((rt0.c1) IS TRUE))) ASC, ((((t1.c2, t1.c75, t1.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((v0.c0, t1.c75, t1.c3))) IN ());SELECT HEX(((t1.c3)<(rt0.c0))) FROM v0, vt0, vt1, t1, rt0 WHERE (((('267720345' IN ()))OR(((NULL)*('jT		Xhh'))))); -- 0ms;
SELECT ((((vt1.c0) NOTNULL))IS(((vt1.c0)<<(t1.c75)))) FROM v0, t1, vt0, vt1; -- 0ms;
SELECT ((t1.c0)=(t1.c0)) COLLATE BINARY, ((((rt0.c0)<<(t1.c3)))/(TYPEOF(DISTINCT vt1.c0))), AVG(t1.c3) FROM v0 WHERE (0.10483789476029692);SELECT MIN(((vt1.c0)*(t1.c75))), CAST(v0.c0 AS REAL) COLLATE NOCASE, CAST(json_remove(-1087946807, vt0.c0) AS INTEGER), SUM(((rt0.c0) BETWEEN (v0.c0) AND (x''))), 0Xffffffffd4d4c7e1 FROM vt0, rt0 INDEXED BY i93, v0, vt1 WHERE (((((NULL) BETWEEN (NULL) AND (x''))) NOT NULL));SELECT DISTINCT ((((0.03952466624149731))<>((vt0.c0))) IN (((((t1.c4)AND(v0.c0)))AND(t1.c75)))), ((((((t1.c0)OR(t1.c3)))AND(NULL)))<=(MIN(rt0.c0))), rt0.c0, (CASE t1.c4  WHEN '0.9098324755685113' THEN x'b8ed' WHEN '' THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END IN (AVG(t1.c3), ((((t1.c2)AND(vt1.c0)))AND(v0.c0)))), GROUP_CONCAT(CASE t1.c3  WHEN t1.c4 THEN rt0.c2 WHEN vt1.c0 THEN t1.c75 WHEN rt0.c0 THEN vt1.c0 ELSE NULL END) FROM v0 WHERE ((((((('<h\rUi')OR(x'f557')))OR((('504728746') NOT BETWEEN (x'') AND (0.651027896841858)))))AND((((('d?{}{|')OR('')))AND(NULL)))));SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC)) IS FALSE) FROM t1, vt1, rt0, vt0; -- 0ms;
SELECT (+ (((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) FROM t1 WHERE (CAST(CAST(0X4140f554 AS NUMERIC) AS BLOB));SELECT (((rt0.c2)) NOT BETWEEN ((TOTAL(rt0.c0))) AND ((((vt0.c0)+(t1.c3))))) FROM vt1 GROUP BY 0Xffffffff81a3f493;SELECT DISTINCT NTH_VALUE(((((t1.c75)<(t1.c4)))+(((rt0.c2) BETWEEN (t1.c2) AND (vt1.c0)))), ((((((((LIKELY(rt0.c0))AND(rt0.c0 COLLATE NOCASE)))OR(((t1.c0)OR(v0.c0)))))OR((((t1.c2, v0.c0, rt0.c2)) BETWEEN ((rt0.c2, v0.c0, t1.c2)) AND ((vt0.c0, t1.c3, rt0.c0))))))OR((((('413978655')AND(vt0.c0)))OR(t1.c2))))) OVER () FROM t1, vt1, rt0, v0, vt0; -- 146ms;
SELECT ALL SUM(LOWER(rt0.c2)) FROM vt0;SELECT SUM((((v0.c0))<((t1.c4))) COLLATE NOCASE) FROM rt0, vt0, vt1, v0, t1 LIMIT -888205079; -- 10ms;
SELECT COALESCE(0.7429975547242119, rt0.c2) FROM rt0, t1, vt1, vt0, v0; -- 0ms;
SELECT DISTINCT COUNT(0xffffffffdf59c342) FROM v0, t1, vt0, vt1, rt0; -- 60ms;
SELECT ((((~ (t1.c75))))>((vt0.c0))), CAST(((t1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT), CASE ((((((((((((0xffffffffd9057023)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(t1.c2)))AND(rt0.c0)))OR(x''))  WHEN '' THEN ((t1.c75) NOT NULL) WHEN ((vt0.c0) IS TRUE) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c75)) WHEN (t1.c2 IN ()) THEN (NOT (rt0.c0)) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END FROM vt0, v0, t1 WHERE ((((0x2db52d68 IN ()))GLOB(CASE 0.784740076469854  WHEN -2.35186634E8 THEN '0.017950518518117464' WHEN 0.4781892479622212 THEN -1.26429714E8 WHEN '1441209122' THEN 'tᒥbూsK' END))) ORDER BY NULL ASC  NULLS LAST;SELECT DISTINCT AVG(((t1.c75)GLOB(rt0.c1))) FILTER(WHERE CAST((t1.c0 IN ()) AS BLOB)) OVER (), (((t1.c4, t1.c75, t1.c0)) NOT BETWEEN ((CASE WHEN t1.c4 THEN rt0.c1 WHEN rt0.c0 THEN t1.c3 WHEN t1.c75 THEN v0.c0 ELSE v0.c0 END, t1.c2 COLLATE RTRIM, ((rt0.c1) BETWEEN (v0.c0) AND (t1.c4)))) AND (((((t1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt0.c2, v0.c0, vt0.c0)) AND ((t1.c2, t1.c2, rt0.c0))), (((rt0.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), rt0.c0 COLLATE BINARY FROM vt0, rt0, v0, t1, vt1 WHERE (((((((x'')-(x'')))AND(x'c896')))OR(((NULL) ISNULL)))); -- 167ms;
SELECT ALL UPPER(CASE t1.c0  WHEN rt0.c0 THEN '-653955037' ELSE vt1.c0 END) FROM v0 WHERE ((((((((('')OR(NULL)))OR(NULL)))OR(NULL)))OR(-9.42033496E8)) COLLATE RTRIM);SELECT DISTINCT CASE WHEN CASE WHEN t1.c4 THEN 'H庽ꇮ-O' END THEN v0.c0 COLLATE BINARY WHEN ((t1.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(t1.c4 AS TEXT) WHEN ((vt0.c0)IS(NULL)) THEN (t1.c4 IN ()) END FROM v0, vt0 WHERE ((((0.836412556247566)) NOT BETWEEN ((((0.4222533376768489) NOT BETWEEN (NULL) AND (x'')))) AND ((((((0.11198966819263534)AND('*6')))AND(NULL))))));SELECT ALL (- ((t1.c4 IN ()))) FROM t1, vt0, rt0, vt1, v0 WHERE ((~ ((NULL IN ())))); -- 1ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (SUM(vt1.c0)) AND (((rt0.c0)AND(t1.c0)))) FROM vt1, rt0, t1 GROUP BY rt0.c0 HAVING ((CASE WHEN t1.c4 THEN t1.c3 END) ISNULL);SELECT ((('991394091')) BETWEEN ((v0.c0)) AND ((vt1.c0))) COLLATE NOCASE FROM rt0, t1, vt1, v0 WHERE (((((((((((0.26815132252104057)OR(0.9328257599122891)))AND('-1154551781')))AND(-1811095534)))OR(NULL)))IS(((-1991791504)AND(0.7326844388542478))))); -- 0ms;
SELECT COUNT(((vt1.c0)>=(vt1.c0))) OVER (), NULL COLLATE RTRIM, (((~ (t1.c75))) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((rt0.c0)IS(rt0.c1)))) FROM v0, vt0, rt0, t1, vt1; -- 84ms;
SELECT ALL x'95373070', 1567285666, LIKE(t1.c75 COLLATE BINARY, ((vt0.c0) BETWEEN (t1.c2) AND (t1.c75)), '0') FROM vt1, v0 WHERE (CAST(((((x'')OR(NULL)))OR(NULL)) AS NUMERIC));SELECT DISTINCT NTH_VALUE(NULL, CAST(NULL AS NUMERIC)) OVER (), ((MIN(t1.c4))GLOB(t1.c3 COLLATE RTRIM)), UPPER(t1.c75) FROM v0, vt0, vt1 WHERE (x'') ORDER BY ((((v0.c0 IN ())))==((((((((((t1.c75)AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))OR(t1.c2))))) ASC  NULLS FIRST;SELECT ALL GROUP_CONCAT(((((v0.c0)OR(t1.c3)))OR(rt0.c2))) OVER () FROM v0, rt0 NOT INDEXED;SELECT DISTINCT (((((((t1.c0, t1.c75, rt0.c0))<=((vt0.c0, rt0.c2, t1.c2))))AND(((t1.c75)AND(t1.c2)))))AND(((rt0.c0)|(t1.c4)))), x'8281', (CAST(vt0.c0 AS BLOB) IN ()) FROM vt0, vt1 INDEXED BY i93, v0;SELECT DISTINCT MIN(t1.c2 COLLATE BINARY, vt0.c0, (+ (0xffffffffa143def2)), t1.c2, (vt0.c0 IN ()), (rt0.c2 IN ())) FROM vt1, vt0, t1 WHERE (((CAST(x'' AS REAL))+(('-950092268' IN ('1262624740', '913147658'))))); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0))>=((NULL))) AS INTEGER) FROM vt1, t1, rt0, vt0 WHERE ((((x'', '', NULL)) BETWEEN ((((x'bb6f') BETWEEN ('B') AND ('')), ((NULL) BETWEEN (x'') AND (x'4762')), CASE -320115496  WHEN NULL THEN NULL ELSE NULL END)) AND (((+ (NULL)), UNLIKELY(0.8062248953164719), ('Iu' IN ('1FHXkg')))))) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT ALL COALESCE(NULL, MIN(v0.c0)) FROM rt0, t1 WHERE (((((x'')<=(x'')))|((x'' IN ())))) LIMIT 1017859316 OFFSET 1772467013;SELECT ((x'' COLLATE RTRIM)>(HEX(rt0.c2))) FROM vt1, v0, t1, rt0, vt0; -- 0ms;
SELECT CAST(t1.c2 AS REAL) COLLATE NOCASE FROM v0 WHERE (CASE (('	2u\/c鉾[') NOT NULL)  WHEN '*' THEN CAST(0.9828813753247875 AS INTEGER) END);SELECT DISTINCT GROUP_CONCAT(CASE vt0.c0  WHEN rt0.c2 THEN t1.c2 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt1.c0 END) OVER ( ORDER BY CAST(((t1.c2) NOT BETWEEN (t1.c4) AND (v0.c0)) AS NUMERIC)  NULLS LAST), COUNT(*), ((t1.c2)>>(((x'') NOT NULL))), (+ (((rt0.c0) BETWEEN (vt0.c0) AND (t1.c4)))), LAG(CAST(rt0.c1 AS BLOB), (((x'')) BETWEEN (((~ (rt0.c2)))) AND ((rt0.c1))), ((CAST(rt0.c0 AS NUMERIC))>('''b'))) OVER ( GROUPS (((- (t1.c0))) BETWEEN (((vt1.c0) ISNULL)) AND ((t1.c4 IN (vt0.c0, t1.c75, rt0.c2)))) PRECEDING) FROM rt0, vt1;SELECT DISTINCT (((AVG(rt0.c2)))>=(((rt0.c0 IN ())))) FROM rt0 WHERE (TRIM(DISTINCT ((x'') NOT BETWEEN (x'f019') AND (x'')), ((0.4222533376768489) BETWEEN ('921690140') AND ('1251094294')))); -- 0ms;
SELECT ((((rt0.c2) BETWEEN (vt0.c0) AND (NULL))) NOT NULL) FROM rt0, vt1, v0 INDEXED BY i93, t1 WHERE ((((((((0.4616830852711823)AND(0.49112294937273604)))AND(']AD.2'))))>((((((0.9106669387687253)OR('')))OR(0.23104758682288662))))));SELECT DISTINCT (CASE t1.c0  WHEN rt0.c0 THEN vt1.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c2 THEN t1.c75 END IN ()) FROM vt0; -- 1ms;
SELECT DISTINCT (+ (((((t1.c4)OR(NULL)))OR(t1.c0)))) FROM t1 ORDER BY LIKELIHOOD(t1.c3 COLLATE BINARY, 0.8686487637640434) ASC; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((t1.c3)OR(v0.c0)))AND(t1.c4)))OR(vt1.c0)))OR(t1.c2)) THEN t1.c0 COLLATE NOCASE END FROM rt0;SELECT ALL CAST((NOT (rt0.c1)) AS BLOB) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN rt0.c1 THEN t1.c4 WHEN t1.c0 THEN t1.c75 WHEN rt0.c0 THEN 0.8605201251077481 ELSE t1.c4 END)AND(NULL COLLATE NOCASE)))OR(rt0.c0)))AND(t1.c75)))AND('-1372480576')), t1.c2, ((CAST(rt0.c1 AS INTEGER)) IS TRUE) FROM vt0, vt1, v0 WHERE (((((0.03952466624149731)GLOB(0.8797945372702116)))>>(CASE WHEN '1421772465' THEN x'' WHEN NULL THEN x'' WHEN '0.10483789476029692' THEN 'ga' WHEN '1135215314' THEN '2\rAg⋛A' WHEN NULL THEN '2107479679' ELSE 0.0368867509427897 END))) LIMIT 1552378952 OFFSET 1145437742;SELECT v0.c0 FROM vt0, vt1, v0, rt0; -- 0ms;
SELECT ALL vt0.c0, rt0.c0, ((((((vt1.c0) BETWEEN (t1.c75) AND (rt0.c1)))OR(((t1.c0) NOT BETWEEN (rt0.c1) AND (t1.c4)))))AND(GROUP_CONCAT(rt0.c1))) FROM rt0, v0, vt1, t1, vt0; -- 12ms;
SELECT DISTINCT ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((v0.c0 IN (vt0.c0))) AND (t1.c0)) FROM v0, vt1 WHERE (CASE ((NULL) ISNULL)  WHEN x'' COLLATE BINARY THEN UNLIKELY('-1941990786') ELSE (('') IS FALSE) END) LIMIT -1398131284;SELECT DISTINCT CASE WHEN CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END THEN NULLIF(DISTINCT t1.c2, v0.c0) ELSE CAST(t1.c2 AS REAL) END FROM vt0, v0, vt1, t1, rt0; -- 1ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN (NULL) AND ((vt0.c0 IN (t1.c2)))), (+ (TOTAL(rt0.c1))), CAST(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)) AS TEXT) FROM t1, rt0, vt0, v0;SELECT 0.3947280523011135 FROM t1, vt0, v0, rt0, vt1 WHERE (((('45658035')) BETWEEN ((((0.7617427304229393) NOTNULL))) AND ((((x'') NOTNULL))))); -- 0ms;
SELECT DISTINCT 0.6447743555397528, (+ ((rt0.c2 IN ()))), t1.c3 FROM t1, rt0 WHERE (((((('-724252703'))<=((0.0540983142304865)))) BETWEEN ((('1279166357') BETWEEN (x'') AND (0x208f84ec))) AND (load_extension('-1030679527', x'219cc4dc'))));SELECT ALL CAST(((v0.c0)|(t1.c3)) AS BLOB), (((NOT (NULL)))GLOB((+ (t1.c75)))), LAG(((((((((COALESCE(v0.c0, vt1.c0))OR('|uP')))OR(((vt1.c0) ISNULL))))AND(NULL)))OR(LIKELIHOOD(v0.c0, 0.3534340672601942))), ((CASE WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)IS NOT(x'')), CAST((v0.c0 IN ()) AS BLOB)) OVER () FROM vt1, v0 GROUP BY (((NOT (t1.c3))) IS TRUE);SELECT (NOT (MIN(rt0.c0))), ((((((vt0.c0)>(rt0.c1)))AND(COUNT(*))))AND(x'')), x'3db4' FROM vt1, v0, t1, vt0, rt0 WHERE ((LOWER(DISTINCT x'bf4a') IN ())); -- 0ms;
SELECT NULL, (~ (t1.c75)) COLLATE NOCASE, CAST(CASE WHEN 0.534707080329813 THEN t1.c3 WHEN vt1.c0 THEN t1.c75 WHEN '0.7165067300683453' THEN v0.c0 END AS REAL) FROM t1, vt0 WHERE (((((NULL) BETWEEN (NULL) AND ('193457159')))>(NULL COLLATE RTRIM)));SELECT ALL ((((highlight(vt1.c0, vt0.c0, rt0.c2, rt0.c0))OR(NULL)))OR((t1.c0 IN ()))) FROM vt0 CROSS JOIN v0 ON ((UPPER(t1.c0)) NOT NULL) CROSS JOIN t1 ON (((((t1.c4)!=(vt0.c0))))<((CAST(vt1.c0 AS REAL))));SELECT DISTINCT ((vt0.c0)>=(t1.c75)) COLLATE RTRIM COLLATE RTRIM FROM t1, v0;SELECT ALL v0.c0 FROM t1, vt0, v0, vt1, rt0 WHERE (CAST((((x'fd2d')) BETWEEN ((0.4196429482596331)) AND ((0.5482776358371556))) AS INTEGER)) ORDER BY (((vt0.c0 IN ()))>(((((t1.c4)OR(rt0.c2)))AND(t1.c75))))  NULLS FIRST, CAST(TYPEOF(DISTINCT t1.c3) AS BLOB) DESC; -- 0ms;
SELECT ALL (- (vt0.c0)), UPPER((((rt0.c0))!=((t1.c75)))), (+ (((t1.c2)&(-1.307184291E9)))) FROM t1 WHERE (((NULL COLLATE RTRIM)IS((~ (x'')))));SELECT ALL CASE t1.c4 COLLATE RTRIM  WHEN ((t1.c3) ISNULL) THEN CAST(t1.c75 AS TEXT) WHEN CAST(t1.c0 AS NUMERIC) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) WHEN ('-2108889198' IN ()) THEN (~ (t1.c0)) END FROM vt0, vt1, v0, rt0, t1 WHERE (((((0.7693272491723218)IS(1e500))) IS TRUE)); -- 0ms;
SELECT ALL NTH_VALUE(((((t1.c4) BETWEEN (v0.c0) AND (rt0.c2)))%(((t1.c3) NOT BETWEEN (t1.c4) AND (v0.c0)))), NULL) OVER ( ORDER BY ((vt1.c0) NOTNULL) ASC  NULLS LAST) FROM v0 NOT INDEXED, vt0, rt0, vt1, t1 WHERE (((((('1396976139' IN ()))AND(('q蜊LCF)' IN (-1832868583)))))OR((('-2143643333')=('1950150406'))))); -- 0ms;
SELECT DISTINCT (+ ((rt0.c1 IN (vt1.c0, v0.c0)))), ((((((t1.c2)OR(t1.c75)))AND(vt0.c0))) IS TRUE), COUNT(((t1.c0) NOT BETWEEN (t1.c3) AND (rt0.c2))) COLLATE RTRIM FROM rt0, vt0, vt1 WHERE (((((x'fd75')OR(NULL)))AND(NULL)) COLLATE BINARY);SELECT ((((((((((t1.c0)IS(v0.c0)))AND(CASE v0.c0  WHEN rt0.c2 THEN NULL END)))AND(((t1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((vt1.c0) ISNULL))))OR(((x'')IS(t1.c2)))) FROM vt1 WHERE (UPPER(IFNULL(575990603, '0yV?T'))) GROUP BY ((CASE vt1.c0  WHEN x'' THEN rt0.c1 ELSE t1.c4 END)||(((t1.c2)IS(t1.c2)))), ((((((((((vt0.c0)AND(t1.c4)))AND(t1.c0)))OR(vt0.c0)))AND(t1.c2))) ISNULL), v0.c0 COLLATE BINARY LIMIT -600006250 OFFSET 628307818;SELECT ((((((rt0.c2)OR(0.7429975547242119)))OR(0.7312899924486985)))IS NOT(((t1.c4) NOT NULL))) FROM t1, vt0 FULL OUTER JOIN v0 ON ((NULL) BETWEEN (((((v0.c0)OR(rt0.c2)))OR(rt0.c2))) AND ((t1.c2 IN ())));SELECT ALL TOTAL((((t1.c75))<((rt0.c1)))), (((v0.c0, t1.c3, vt1.c0)) BETWEEN ((CASE WHEN v0.c0 THEN t1.c3 WHEN rt0.c2 THEN t1.c3 WHEN rt0.c1 THEN 0.5094150971611565 ELSE rt0.c0 END, CASE WHEN rt0.c1 THEN t1.c3 WHEN rt0.c2 THEN t1.c2 WHEN rt0.c0 THEN vt1.c0 ELSE t1.c75 END, ((((t1.c2)AND(rt0.c1)))AND(t1.c4)))) AND ((TRIM(DISTINCT v0.c0), ((vt0.c0)AND(t1.c75)), (+ (vt1.c0))))), ((((NULL) NOTNULL)) NOTNULL) FROM vt1, rt0, vt0 WHERE ((- (((x'') NOT BETWEEN (0.3740057168526585) AND ('h_u ')))));SELECT ALL CASE ((((t1.c3)AND(rt0.c1)))OR(t1.c0))  WHEN GROUP_CONCAT(NULL) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END FROM t1 RIGHT OUTER JOIN rt0 ON (((t1.c4))>((t1.c4))) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((((t1.c2)!=(t1.c75))) IS FALSE); -- 0ms;
SELECT UPPER(DISTINCT CASE v0.c0  WHEN t1.c3 THEN t1.c2 ELSE rt0.c0 END), NULL, ((((json(x'9e37'))OR((~ (rt0.c1)))))AND(CAST(t1.c0 AS TEXT))) FROM vt0, vt1, rt0, t1, v0 WHERE (((('2YrO>W0') NOT NULL) IN ())); -- 0ms;
SELECT DISTINCT (((((NOT (vt0.c0)))AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(t1.c3 AS BLOB))) FROM rt0, t1, vt0, v0, vt1; -- 0ms;
SELECT DISTINCT CASE CAST(vt1.c0 AS BLOB)  WHEN (v0.c0 IN (0.5856410465169668)) THEN ((0.3151985011241073)/(t1.c4)) ELSE CASE t1.c2  WHEN vt0.c0 THEN '1988890702' ELSE t1.c4 END END FROM rt0 WHERE (((('' IN ())) IS TRUE));SELECT DISTINCT CAST(MIN(rt0.c2) AS INTEGER), x'', (((((rt0.c1 IN ()))OR((+ (v0.c0)))))OR(UNLIKELY(DISTINCT rt0.c1))) FROM t1, v0, vt0, vt1, rt0 WHERE (json_array_length(((((-1864349583)OR(x'')))AND(NULL)), ((NULL) NOTNULL))); -- 0ms;
SELECT DISTINCT (v0.c0 IN (CASE WHEN rt0.c2 THEN t1.c2 WHEN '' THEN t1.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END, ((('[6vmLkNq', t1.c3, t1.c2))<((t1.c75, t1.c2, vt1.c0))))) FROM v0, rt0, vt0 LIMIT -504799188 OFFSET -1562289734;SELECT DISTINCT ((CAST(t1.c2 AS INTEGER)) BETWEEN ((((rt0.c0, t1.c2, t1.c4)) BETWEEN ((rt0.c1, '934188150', vt1.c0)) AND ((t1.c0, t1.c2, t1.c3)))) AND (((t1.c0) IS FALSE))) FROM vt1, t1, rt0 WHERE ((((((((((1094776148 IN ()))OR((~ (NULL)))))OR(((x'')>(x'')))))OR('N ')))OR(((-1.467857929E9)!=(NULL))))) LIMIT -1713272859 OFFSET 1251094294; -- 0ms;
SELECT (('H庽ꇮ-O') NOT BETWEEN (((t1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((t1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM v0, vt1 WHERE ((((('3O.IR7*떨o')LIKE(x'')))/(((((0x1f208969)AND(0.24400730827372263)))OR('-1987636235'))))) GROUP BY ((ABS(DISTINCT t1.c2))>('\h')), CASE t1.c4  WHEN ((-1529312878) ISNULL) THEN rt0.c0 END, (((((vt0.c0, rt0.c2, rt0.c2))<((rt0.c1, t1.c2, rt0.c1))))<=((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c2))))), load_extension(t1.c0 COLLATE RTRIM), ((CAST(t1.c3 AS INTEGER)) IS TRUE) HAVING (((t1.c75)GLOB(t1.c4)) IN ((~ (t1.c0)), ((t1.c75)<=(vt1.c0))));SELECT DISTINCT TOTAL(x'' COLLATE RTRIM) OVER () FROM vt0 NOT INDEXED, vt1, rt0, t1 LIMIT 2102515415 OFFSET -1142317237; -- 1ms;
SELECT DISTINCT (((t1.c0))<>((CAST(vt1.c0 AS NUMERIC)))) FROM rt0 ORDER BY ((v0.c0) BETWEEN (((t1.c0) NOT NULL)) AND (((rt0.c2) NOT NULL)))  NULLS FIRST LIMIT -1257377660 OFFSET 628307818;SELECT DISTINCT (((((rt0.c0))>=((t1.c75))))<=(((rt0.c0)|(x'42487ee1')))) FROM vt1, t1, rt0, vt0, v0; -- 0ms;
SELECT DISTINCT (('	#DG}?\rz')IS NOT((NOT (rt0.c1)))) FROM rt0, t1; -- 0ms;
SELECT ALL CAST(NULLIF(t1.c75, t1.c4) AS INTEGER) FROM rt0, vt1, v0, vt0, t1 WHERE (((((0x566eeb64) BETWEEN (746712560) AND ('℈i_ud[|/'))) NOT BETWEEN (PRINTF(NULL, NULL, '1606728482')) AND (CAST(x'd16b' AS NUMERIC)))); -- 0ms;
SELECT ((NOT (vt1.c0)) IN ()), ((MIN(rt0.c2))==((((t1.c2)) BETWEEN ((v0.c0)) AND ((0.6429156386187861))))), NTH_VALUE((((t1.c4) NOT NULL) IN ()), ((t1.c3) ISNULL) COLLATE NOCASE) OVER () FROM t1;SELECT DISTINCT SQLITE_SOURCE_ID() FROM vt1, t1, vt0, v0, rt0; -- 0ms;
SELECT DISTINCT ((LAST_INSERT_ROWID())IS NOT(0.03259421763510717)) FROM vt1, t1, v0 WHERE (((((x'')AND(1.599464257E9)))OR(x'798d')) COLLATE BINARY) EXCEPT SELECT CAST(((rt0.c2) BETWEEN (t1.c75) AND (t1.c75)) AS NUMERIC) FROM t1, v0, vt0, vt1, rt0 WHERE ((+ ((('-443852140') IS TRUE)))); -- 16ms;
SELECT ALL LOWER(((t1.c4)%(rt0.c0))), (((v0.c0)%(279538575)) IN ()), CHAR((((('-198264566')AND(rt0.c0)))OR(v0.c0))) FROM t1, rt0, vt1, vt0 GROUP BY (((('Ao')OR(vt1.c0))) BETWEEN (x'') AND (((rt0.c1) IS FALSE)));SELECT DISTINCT MIN(CAST(0.7220985192369602 AS TEXT)) FROM vt0, vt1, rt0 GROUP BY (+ (-6.85841842E8)), ((((UNLIKELY(v0.c0))AND((t1.c3 IN ()))))AND(((t1.c75) NOT BETWEEN (v0.c0) AND (t1.c75)))), CAST((((rt0.c2))<((rt0.c2))) AS INTEGER);SELECT ALL (((- (vt1.c0)))>>(CASE rt0.c2  WHEN t1.c3 THEN rt0.c0 WHEN t1.c2 THEN 'c䳴i#H!⬯' WHEN x'' THEN t1.c0 ELSE rt0.c2 END)) FROM t1 GROUP BY rt0.c0;SELECT (NOT (CASE t1.c3  WHEN t1.c4 THEN rt0.c2 END)) FROM vt0, v0, t1, vt1, rt0 GROUP BY (((rt0.c0 IN (rt0.c2)))>>(((v0.c0)IS NOT(t1.c2)))), CASE (+ (t1.c3))  WHEN CASE WHEN t1.c4 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(x'' AS INTEGER) ELSE CAST(t1.c2 AS REAL) END, rt0.c2 HAVING ((NULLIF(t1.c4, rt0.c1))==(COUNT(*))); -- 68ms;
SELECT DISTINCT (((+ (t1.c3)))!=(HEX(rt0.c2))), '1647492695', (((t1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((((rt0.c1)OR(t1.c4)))OR('0.6961706422933175')), t1.c2, ((vt1.c0) BETWEEN (0Xffffffffc5e4e707) AND (t1.c75)))) AND ((TOTAL(x''), -9.42033496E8, CAST(rt0.c2 AS BLOB)))) FROM rt0;SELECT DISTINCT (+ (((((t1.c75)AND(t1.c75)))AND(x'')))) FROM rt0, vt1 INNER JOIN v0 ON rt0.c2 CROSS JOIN t1 ON ((((LIKELIHOOD(rt0.c2, 0.8615495554366046))OR(((t1.c0) ISNULL))))OR(((t1.c0)<(v0.c0)))) WHERE ((NOT (ABS(DISTINCT '1160864633')))); -- 1ms;
SELECT CASE 0.8825067049275235  WHEN (-1003102897 IN (rt0.c2)) THEN ((NULL) BETWEEN (vt1.c0) AND (t1.c0)) ELSE ((vt1.c0) NOT BETWEEN (t1.c4) AND (v0.c0)) END FROM vt0, v0, vt1, rt0 WHERE (((x'5307') ISNULL) COLLATE BINARY);SELECT DISTINCT GROUP_CONCAT(((rt0.c1)GLOB(t1.c4))) OVER () FROM v0, rt0, vt0, t1, vt1 GROUP BY (NOT (((((t1.c3)AND(v0.c0)))AND(v0.c0)))), (((((((((- (vt0.c0)))AND(0.04454038796517401)))AND(((t1.c75)LIKE(NULL)))))OR(((((((((rt0.c2)AND(t1.c4)))AND(t1.c3)))OR(rt0.c0)))OR(rt0.c0)))))AND(((t1.c2)<(rt0.c2)))), ((t1.c2 COLLATE BINARY)OR(((((vt0.c0)OR(t1.c3)))OR(t1.c2)))) HAVING (- (rt0.c0)); -- 86ms;
SELECT ((GROUP_CONCAT(vt1.c0))AND(COUNT(*))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((vt1.c0)LIKE(LIKELIHOOD(t1.c0, 0.5550903728474473))) FROM vt1, rt0;SELECT DISTINCT (t1.c75 IN ()), CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c2)) THEN json_array_length(t1.c4, rt0.c2) ELSE (NOT (v0.c0)) END, (((t1.c4 IN ())) NOT BETWEEN (rt0.c2) AND (TOTAL_CHANGES())) FROM t1, rt0;SELECT t1.c4 FROM rt0;SELECT DISTINCT CAST(((((t1.c4)AND(t1.c75)))OR(t1.c0)) AS INTEGER) FROM t1, rt0, vt1, v0, vt0; -- 0ms;
SELECT DISTINCT STRFTIME((((t1.c75)) BETWEEN ((t1.c3)) AND ((x'1b0e'))), (t1.c4 IN ()), ((rt0.c1)&(v0.c0))) FROM v0 GROUP BY TOTAL_CHANGES();SELECT ALL ((((((((v0.c0)AND(vt1.c0)))OR(t1.c0)))OR(t1.c75)))OR(rt0.c1)) COLLATE NOCASE, (((0x53442a0b) ISNULL) IN ()), LOWER(((vt0.c0)-(t1.c4))) FROM t1, rt0;SELECT DISTINCT CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT ((v0.c0) BETWEEN (x'') AND (vt1.c0)) COLLATE RTRIM FROM vt0, t1, v0 WHERE ((+ ((('0.534707080329813')IS('')))));SELECT t1.c0, t1.c3, ((((((rt0.c0)OR(t1.c4)))AND(t1.c2))) NOT BETWEEN (t1.c3 COLLATE RTRIM) AND (((rt0.c2)|(t1.c4)))) FROM v0, vt0, rt0, t1 ORDER BY (((rt0.c0)) BETWEEN (((~ (v0.c0)))) AND (((t1.c0 IN ()))))  NULLS FIRST; -- 2ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN ((((t1.c4, rt0.c1, rt0.c2)) NOT BETWEEN ((t1.c75, t1.c3, rt0.c1)) AND ((v0.c0, vt0.c0, vt1.c0)))) AND (MAX(rt0.c0))) FROM t1, vt1, v0;SELECT DISTINCT vt0.c0, TOTAL('1793049529') OVER (), CASE WHEN t1.c4 COLLATE NOCASE THEN (rt0.c0 IN (vt1.c0)) WHEN (((t1.c75)) NOT BETWEEN ((t1.c4)) AND ((rt0.c1))) THEN CASE vt0.c0  WHEN t1.c4 THEN t1.c3 ELSE rt0.c0 END WHEN CASE WHEN 960231715 THEN NULL WHEN v0.c0 THEN t1.c75 WHEN t1.c3 THEN 0.45373731984345755 END THEN (rt0.c0 IN ()) WHEN (rt0.c1 IN ()) THEN UPPER(DISTINCT t1.c75) WHEN 0Xfffffffffe4d022f THEN t1.c2 COLLATE RTRIM END FROM vt1 WHERE ('-685841842') LIMIT 1289664061;SELECT DISTINCT FIRST_VALUE(((t1.c0) NOT BETWEEN ((t1.c0 IN (t1.c3))) AND (((t1.c2) ISNULL)))) OVER (), CASE ((t1.c0) ISNULL)  WHEN NULL THEN ((rt0.c1) NOT NULL) WHEN ((t1.c0)&(rt0.c0)) THEN x'' COLLATE NOCASE WHEN rt0.c1 COLLATE BINARY THEN (rt0.c2 IN (v0.c0)) END, '42', SUM(TYPEOF(t1.c75)) OVER (), (((((rt0.c1)AND(rt0.c0))))<=((v0.c0 COLLATE NOCASE))) FROM t1, vt0, vt1 LEFT OUTER JOIN v0 ON NULL WHERE ((((NULL)=(NULL)) IN ()));SELECT json(((t1.c2) NOT NULL)) FROM v0, t1, rt0, vt0; -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) BETWEEN (((((t1.c3)AND('h庽ꇮ-o')))AND(t1.c2))) AND (((t1.c0) IS FALSE))) FROM v0 NOT INDEXED, rt0, vt1, vt0;SELECT DISTINCT CAST(((rt0.c1)>>(rt0.c2)) AS INTEGER), AVG(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN t1.c75 WHEN t1.c3 THEN t1.c4 END) OVER ( GROUPS BETWEEN v0.c0 PRECEDING AND (- (t1.c2)) COLLATE BINARY PRECEDING), CAST(((t1.c3) NOT BETWEEN (rt0.c0) AND (0.9529757807330866)) AS REAL), ((((t1.c75)*(vt0.c0))) NOT BETWEEN ((((NULL, t1.c3, t1.c0))<>((vt1.c0, t1.c4, vt1.c0)))) AND (CASE t1.c75  WHEN rt0.c1 THEN t1.c3 END)), (~ ((((t1.c0, rt0.c2, rt0.c2))<=((v0.c0, rt0.c2, rt0.c1))))) FROM vt0, vt1, rt0 INDEXED BY i99, t1, v0;SELECT DISTINCT ABS((rt0.c0 IN ())), (+ (((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)))), LTRIM(((rt0.c1) NOT BETWEEN (t1.c2) AND (t1.c2)), CAST(t1.c0 AS REAL)) FROM vt0, vt1, v0;SELECT ALL (((t1.c75 IN (v0.c0))) IS TRUE), (((0Xfffffffff70f2958)||(t1.c3)) IN ()), TYPEOF((x'' IN ())) FROM v0, rt0, t1, vt1; -- 0ms;
SELECT (((t1.c2 IN ()))%(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)))) FROM vt0 LEFT OUTER JOIN t1 ON t1.c2 RIGHT OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (t1.c0) AND (vt0.c0))) NOT BETWEEN ((((t1.c4)) NOT BETWEEN ((t1.c4)) AND ((v0.c0)))) AND (CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE t1.c2 END)) INNER JOIN v0 ON (((rt0.c1 IN ()))>>((t1.c75 IN ()))) ORDER BY (((((vt1.c0, x'', NULL))=((vt1.c0, rt0.c1, t1.c0)))) NOT BETWEEN (((rt0.c1) ISNULL)) AND ((t1.c0 IN ()))) ASC;SELECT ALL (((rt0.c1, '934188150', t1.c3)) NOT BETWEEN (((vt1.c0 IN (t1.c2)), t1.c3 COLLATE RTRIM, 'ꓭ阇QZ8')) AND ((((NULL)>(t1.c3)), ((vt0.c0) NOT BETWEEN (t1.c3) AND (t1.c3)), load_extension(t1.c2, v0.c0)))) FROM vt1, rt0, t1, v0;SELECT DISTINCT CAST(CAST(0.7429975547242119 AS TEXT) AS INTEGER) FROM t1, vt0, rt0, v0 WHERE ((TOTAL_CHANGES() IN (CAST('4Ὡ8퇈8PG9' AS REAL), ((0.900937342207455) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((vt0.c0, '\n', vt1.c0)) NOT BETWEEN (((~ (rt0.c1)), ((((((((t1.c3)AND('4Ὡ8퇈8PG9')))OR(t1.c0)))OR(t1.c0)))AND(x'')), CASE t1.c4  WHEN t1.c2 THEN vt1.c0 ELSE t1.c3 END)) AND ((((rt0.c2) BETWEEN (t1.c2) AND (rt0.c0)), CAST('-1835092980' AS NUMERIC), ((rt0.c1)+(rt0.c2))))) FROM v0, vt1, t1 WHERE (CAST(((NULL) BETWEEN ('') AND ('178845660')) AS INTEGER)) GROUP BY ((((t1.c75)IS(vt0.c0)))<(CASE v0.c0  WHEN t1.c0 THEN NULL END)), ((rt0.c2)=(rt0.c2 COLLATE BINARY)), (((((t1.c0, vt1.c0, t1.c3)) NOT BETWEEN ((t1.c0, vt0.c0, t1.c3)) AND ((0.9261595861785723, t1.c75, t1.c0)))) IS FALSE), (NOT (v0.c0)), rt0.c1 HAVING ((rt0.c0) BETWEEN (CASE WHEN t1.c2 THEN vt1.c0 ELSE rt0.c1 END) AND (AVG(rt0.c0)));SELECT DISTINCT COUNT(((t1.c4) BETWEEN (vt0.c0) AND (rt0.c1))) FROM v0 WHERE ('-2127785718');SELECT ALL ((v0.c0)>(x'')) COLLATE NOCASE FROM vt1;SELECT DISTINCT (((((~ (t1.c3)))AND((v0.c0 IN ()))))OR(((t1.c4)/('-570198171')))), (((v0.c0 IN ())) NOT BETWEEN (t1.c75) AND (CAST(rt0.c1 AS NUMERIC))), COUNT(v0.c0) OVER () FROM rt0, t1, vt1, vt0, v0 ORDER BY (((t1.c0)) BETWEEN ((0.9249939099322353)) AND ((((t1.c75)IS(t1.c3))))) DESC  NULLS FIRST; -- 70ms;
SELECT ALL (json_array(t1.c3, t1.c4) IN (load_extension(0.7552222119485615, rt0.c2), -1.589387534E9 COLLATE NOCASE)) FROM vt0, rt0, t1, vt1, v0;SELECT (((rt0.c1 IN ()))<(CAST(v0.c0 AS BLOB))) FROM vt1, vt0, rt0, t1, v0 ORDER BY CAST((NOT (v0.c0)) AS NUMERIC), t1.c4 DESC  NULLS LAST; -- 29ms;
SELECT ALL ((v0.c0) IS TRUE) COLLATE NOCASE FROM t1, v0, vt0, vt1, rt0 WHERE (((x'')LIKE(CAST(NULL AS TEXT)))); -- 1ms;
SELECT ALL MIN(((rt0.c0)>=(t1.c0))) FROM vt1, t1;SELECT DISTINCT ((vt0.c0 COLLATE BINARY) IS FALSE), CAST(((rt0.c0) BETWEEN (-1982734358) AND (t1.c3)) AS TEXT), CASE WHEN ((rt0.c1) NOT NULL) THEN CASE WHEN t1.c2 THEN t1.c75 END ELSE (v0.c0 IN ()) END FROM v0;SELECT ALL ((t1.c0) BETWEEN (t1.c2) AND (CASE t1.c3  WHEN rt0.c2 THEN vt0.c0 END)) FROM v0, rt0, vt1;SELECT (((vt0.c0)) NOT BETWEEN ((((((((((t1.c75)AND(t1.c3)))OR(t1.c75)))OR(t1.c2)))OR(t1.c4)))) AND (((rt0.c2 IN ())))) FROM vt0, vt1, t1, v0; -- 0ms;
SELECT CUME_DIST() OVER (), CUME_DIST() OVER (), ((((rt0.c0) IS FALSE)) NOT BETWEEN (NULL) AND (((((t1.c75)OR(t1.c4)))OR(vt1.c0)))) FROM v0;SELECT DISTINCT (((v0.c0, t1.c2, v0.c0)) BETWEEN ((CAST(t1.c0 AS REAL), CAST(vt0.c0 AS NUMERIC), NULL)) AND ((CAST(v0.c0 AS REAL), ((NULL) BETWEEN (t1.c75) AND (x'')), (NOT (vt1.c0))))) FROM rt0, vt0, t1, vt1 WHERE (CAST(NULL COLLATE BINARY AS NUMERIC));SELECT ALL CAST(((((((((x'')AND('_')))AND(vt1.c0)))OR(vt1.c0)))AND(0.5237940429757947)) AS BLOB) FROM vt0, vt1, v0; -- 0ms;
SELECT x'' FROM rt0, t1, vt0, v0; -- 0ms;
SELECT DISTINCT CASE WHEN ((('*	*~a', t1.c2, rt0.c1, vt0.c0, rt0.c0)) BETWEEN ((t1.c4, rt0.c0, vt1.c0, '913147658', t1.c2)) AND ((t1.c3, rt0.c2, vt1.c0, v0.c0, rt0.c1))) THEN (+ (t1.c0)) WHEN (rt0.c0 IN (x'')) THEN CAST(t1.c75 AS INTEGER) WHEN rt0.c1 THEN COUNT(NULL) END FROM vt0, vt1, t1 WHERE ((((- ('')))LIKE(NULL COLLATE RTRIM)));SELECT ALL v0.c0 FROM vt1, v0, t1, rt0 WHERE (((NULL)>(0.9466799662634127)) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT ALL json_object(LIKELY(rt0.c1), ((rt0.c2)>(rt0.c1))) FROM vt1, vt0, rt0, v0;SELECT CAST((t1.c75 IN (v0.c0, rt0.c2)) AS NUMERIC) FROM vt0, t1, v0, vt1 WHERE (CASE WHEN CASE 0x1f208969  WHEN 0.8797945372702116 THEN '-414947021' WHEN 9.91394091E8 THEN 287879799 WHEN x'' THEN x'' ELSE -2078906706 END THEN CASE WHEN 'o*\nv*}q' THEN '4z2' WHEN NULL THEN x'c81c' WHEN x'' THEN NULL END END);SELECT DISTINCT COUNT(((t1.c75)||(t1.c4))), CAST(((rt0.c1) BETWEEN ('1354745729') AND (vt1.c0)) AS BLOB), CAST(((('522226025')) BETWEEN ((t1.c75)) AND ((rt0.c0))) AS TEXT) FROM vt1, v0, vt0, rt0, t1; -- 10ms;
SELECT ALL ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE NOCASE FROM vt0, vt1 WHERE (CASE ((NULL)%(NULL))  WHEN ((0xffffffffae31c1a5) NOTNULL) THEN ((x'')=(NULL)) WHEN TYPEOF(NULL) THEN ((x'')||(NULL)) WHEN ((('-1322234202', x'3069', NULL))!=((x'', '1000361440', NULL))) THEN '1396976139' COLLATE BINARY ELSE ('!eB|' IN ()) END);SELECT DISTINCT ((rt0.c1 COLLATE BINARY)LIKE('|v傳6')) FROM v0, t1 RIGHT OUTER JOIN rt0 ON 'tI' WHERE ((IFNULL('567868314', 0xffffffff92fc1781) IN ())); -- 0ms;
SELECT ALL (((((((rt0.c2, rt0.c1, t1.c3)) NOT BETWEEN ((t1.c0, t1.c0, t1.c3)) AND ((vt1.c0, vt0.c0, t1.c0))))OR(((vt1.c0)>=(t1.c75)))))OR(((t1.c2)<<(vt1.c0)))) FROM rt0 WHERE ((((NULL COLLATE BINARY, TYPEOF(x''), CAST(0.35993728916400347 AS REAL)))!=((CAST('' AS TEXT), CASE 0.8419756479725996  WHEN '1e500' THEN -6.9119804E8 ELSE NULL END, (('0.02688611654761497') IS FALSE)))));SELECT ALL rt0.c1 FROM vt0, t1, vt1, v0;SELECT DISTINCT SUBSTR(CASE t1.c4  WHEN t1.c4 THEN v0.c0 ELSE rt0.c1 END, TOTAL(v0.c0)), LIKELY(DISTINCT ((t1.c3) NOT NULL)), ((((t1.c0) NOTNULL))<>(((((((((v0.c0)AND(rt0.c0)))OR(t1.c3)))OR(rt0.c0)))OR(vt1.c0)))) FROM vt1, rt0;SELECT ((((((((rt0.c2 COLLATE BINARY)OR(CASE vt1.c0  WHEN t1.c3 THEN vt0.c0 WHEN t1.c4 THEN rt0.c0 WHEN rt0.c2 THEN t1.c0 ELSE vt1.c0 END)))AND(TRIM(DISTINCT t1.c3, vt0.c0))))OR((((t1.c75))>((NULL))))))AND(((vt1.c0) NOTNULL))), ((CASE WHEN t1.c0 THEN vt0.c0 ELSE vt1.c0 END)==(t1.c75 COLLATE NOCASE)), 1.75619217E9 FROM vt0, rt0, v0 WHERE (((HEX(NULL)) IS TRUE));SELECT DISTINCT load_extension((NOT (rt0.c1))) FROM vt0, t1 WHERE (((((UPPER(DISTINCT '6{⺒W-]'))OR(CAST(0.363620994596506 AS BLOB))))OR(((((((((NULL)AND('861568825')))AND(x'')))OR(0.8557270445597301)))AND(0X37403df1))))) GROUP BY ((x'd33e')=(CASE WHEN t1.c4 THEN rt0.c1 ELSE rt0.c2 END));SELECT DISTINCT ((((CASE rt0.c1  WHEN t1.c4 THEN t1.c75 ELSE t1.c3 END)AND(t1.c3 COLLATE RTRIM)))OR(MIN(t1.c3))) FROM t1;SELECT DISTINCT 0.006970842190555326, CASE TOTAL(t1.c2)  WHEN 0.43315629251254306 COLLATE BINARY THEN rt0.c2 END, ((-2083588537) NOT BETWEEN (((t1.c75) IS TRUE)) AND (((vt1.c0)LIKE(t1.c75)))) FROM rt0, vt0;SELECT ALL ((rt0.c2)-(rt0.c0)) COLLATE BINARY FROM t1, vt1, rt0, v0 WHERE ((((NOT (x'')))!=(0.6888411309961708 COLLATE BINARY))) LIMIT -888205079; -- 0ms;
SELECT DISTINCT t1.c2, ((((v0.c0 COLLATE NOCASE)OR(LOWER(DISTINCT rt0.c2))))OR(((t1.c0)IS NOT(t1.c2)))), (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END IN ()) FROM v0, vt1, rt0, vt0, t1 GROUP BY CASE ((rt0.c1)IS(t1.c75))  WHEN (((t1.c75))<((v0.c0))) THEN ((vt1.c0)+(rt0.c1)) WHEN ((rt0.c2)/(t1.c75)) THEN ((t1.c75)>(rt0.c1)) WHEN t1.c3 COLLATE NOCASE THEN ((rt0.c0)|(rt0.c2)) END, (+ (rt0.c1)) COLLATE BINARY, (((t1.c3)) BETWEEN (((x'' IN ()))) AND ((UPPER(v0.c0)))); -- 63ms;
SELECT ALL CASE WHEN ((t1.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)) THEN (- (t1.c75)) END, ((((t1.c0) BETWEEN (t1.c3) AND (vt1.c0))) NOT BETWEEN ('446947342') AND (CAST(v0.c0 AS INTEGER))), (('')|(((((vt0.c0)AND(t1.c2)))AND(rt0.c0)))) FROM vt1, v0, t1, rt0, vt0 WHERE (CASE '0.7266040933061642'  WHEN ((((6.28307818E8)AND('-1062937159')))AND('1495748278')) THEN (('1e500') NOT BETWEEN (x'8b6e') AND (x'')) ELSE CASE WHEN NULL THEN 900368535 WHEN NULL THEN '382361277' WHEN NULL THEN x'' WHEN x'' THEN x'' WHEN NULL THEN '922424485' ELSE NULL END END); -- 1ms;
SELECT ALL CASE WHEN '-2026959806' THEN ((t1.c0) BETWEEN (t1.c4) AND (t1.c2)) ELSE ((v0.c0) BETWEEN (t1.c3) AND (rt0.c1)) END FROM t1, rt0, v0 WHERE ('0.17201623337167216'); -- 0ms;
SELECT ALL (- (t1.c0 COLLATE NOCASE)) FROM rt0, vt0 WHERE (x'204b66a8') GROUP BY ((CASE v0.c0  WHEN t1.c4 THEN t1.c3 ELSE t1.c4 END) NOT BETWEEN (-1941990786) AND ((x'27b1' IN ()))) HAVING NULL LIMIT 827220801;SELECT DISTINCT t1.c3, LAST_INSERT_ROWID(), CAST('FALSE' AS NUMERIC) FROM vt1, v0, t1, rt0 WHERE (((('200552097')) BETWEEN ((0.9551979331902343 COLLATE BINARY)) AND ((CASE WHEN NULL THEN 0.10483789476029692 END)))); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt0.c0)) BETWEEN ((t1.c3)) AND ((t1.c0)))) AND (((t1.c0)==(t1.c3)))) FROM t1, vt0, v0, rt0; -- 0ms;
SELECT DISTINCT LAG(x'' COLLATE NOCASE, (NOT (((t1.c4)-(t1.c0)))), CAST(((t1.c0)LIKE(t1.c75)) AS BLOB)) OVER () FROM t1 NOT INDEXED, v0 WHERE (((CAST(0X7be8a6e3 AS TEXT))>=(CASE '881412076'  WHEN x'' THEN -1.2868371E7 END))); -- 0ms;
SELECT '', ((0.7481179484213729)<<((((vt1.c0, '965214101', vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c4)) AND ((rt0.c1, t1.c0, t1.c3))))), t1.c3 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE FROM rt0, t1;SELECT CASE WHEN -13996004 THEN ((vt1.c0)>=(rt0.c1)) ELSE ((((t1.c0)AND(rt0.c0)))OR(t1.c3)) END FROM v0, rt0, vt1, t1 LIMIT 1832975649 OFFSET -974748067; -- 0ms;
SELECT DISTINCT CASE MIN(t1.c3)  WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE (+ (x'')) END, (((t1.c3, rt0.c2, rt0.c1)) BETWEEN (('kK', t1.c0, 1538628178)) AND ((t1.c4, t1.c4, t1.c75))) COLLATE BINARY, (((NOT (t1.c3)))IS(((t1.c3) NOT BETWEEN (t1.c0) AND (rt0.c0)))) FROM v0, vt1, vt0, rt0 WHERE ((NOT (('-2108889198' IN ())))) GROUP BY 3.82361277E8, x'', CAST(((t1.c75) NOT NULL) AS NUMERIC), (((('338848253')AND(t1.c3)))AND(NULL)) COLLATE NOCASE, ((t1.c75 COLLATE BINARY) IS FALSE);SELECT DISTINCT TOTAL((((rt0.c0, vt1.c0, t1.c75, rt0.c2, vt0.c0)) NOT BETWEEN ((t1.c2, t1.c75, vt1.c0, vt0.c0, v0.c0)) AND (('', t1.c0, rt0.c2, t1.c2, v0.c0)))) FROM t1, v0, vt1, vt0, rt0 WHERE (ROUND(((0X4140f554)>(x'3ff6ba59')), ((((0.28922507584571144)AND(x'')))OR(NULL)))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS INTEGER)) ISNULL) FROM v0, vt1, t1 WHERE (((0xffffffff97a37efb)!=(CAST('-691198040' AS BLOB)))) ORDER BY CAST(CASE v0.c0  WHEN vt1.c0 THEN vt0.c0 END AS REAL)  NULLS FIRST;SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT CHANGES() FROM v0 LIMIT 399092065; -- 0ms;
SELECT DISTINCT (((t1.c0)<(0.10985710961035233)) IN ()), ((vt0.c0) BETWEEN (((((t1.c75)AND(x'')))OR(t1.c3))) AND (((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))), ((rt0.c1 IN (rt0.c0)) IN ()) FROM v0 LIMIT 628307818;SELECT DISTINCT CASE 0.7584266409241041  WHEN SQLITE_VERSION() THEN COUNT(*) ELSE (- (t1.c2)) END FROM rt0, v0, vt1, vt0, t1 WHERE ((((x'', ']ad.2', x'')) NOT BETWEEN ((((x'') IS FALSE), x'' COLLATE BINARY, ((NULL) ISNULL))) AND (((('')OR(1622235058)), CAST(x'' AS NUMERIC), (0.19635035801785428 IN ()))))) GROUP BY json_type(((((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(t1.c4))); -- 45ms;
SELECT DISTINCT ((((((((((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))OR(((rt0.c0) NOT BETWEEN (t1.c4) AND (rt0.c1)))))AND((vt1.c0 IN ()))))AND(((t1.c4)IS NOT(t1.c2)))))AND((('1034271814')|(t1.c2)))) FROM vt1, v0, rt0; -- 1ms;
SELECT ALL CAST((((vt1.c0)) BETWEEN ((t1.c75)) AND ((0.20108453642162583))) AS BLOB), t1.c3, CAST(NULL AS REAL), UNLIKELY(DISTINCT ((((v0.c0)AND(t1.c75)))OR(t1.c2))), ((CAST(rt0.c0 AS BLOB))%(t1.c75)) FROM vt1;SELECT ALL t1.c4 FROM vt1, v0, vt0;SELECT DISTINCT ((AVG(vt1.c0)) BETWEEN ((+ (rt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0))))), CASE WHEN (v0.c0 IN (vt1.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE (((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END, ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)>(0.7617427304229393)) FROM t1;SELECT ALL ((('0.3151985011241073'))<=(((- (t1.c0))))), ((((((((((((t1.c3)OR(v0.c0)))OR(t1.c3)))AND(t1.c0)))OR(t1.c3)))AND(((vt1.c0) IS TRUE))))OR((NOT (t1.c0)))), (NOT (CAST(t1.c0 AS BLOB))) FROM rt0, t1 WHERE (CASE CASE x'd80d'  WHEN 0xffffffffff2a701c THEN '0.7301008702508752' ELSE '()' END  WHEN ((0.9026200146920985) NOT BETWEEN (0.7693272491723218) AND (NULL)) THEN 0.0967663670424046 COLLATE BINARY ELSE CAST(NULL AS REAL) END);SELECT DISTINCT ((CASE t1.c0  WHEN vt0.c0 THEN t1.c4 ELSE rt0.c0 END)!=((rt0.c2 IN ()))) FROM vt1, vt0, t1, v0, rt0; -- 0ms;
SELECT ALL (((vt0.c0) NOT BETWEEN (t1.c2) AND (0.4681035319833382)) IN ()), SUM(((((((((t1.c75)AND(t1.c3)))AND(rt0.c2)))OR(x'')))OR(t1.c75))), (0.47308935201996816 COLLATE RTRIM IN ()) FROM v0, rt0, vt0, t1; -- 1ms;
SELECT ALL COUNT(((((t1.c3)OR(rt0.c1)))AND(t1.c0))) COLLATE RTRIM FROM t1, rt0, vt1; -- 0ms;
SELECT ALL ((((((((((((((rt0.c2)&(v0.c0)))OR(((vt1.c0)IS NOT(vt1.c0)))))OR(rt0.c2 COLLATE RTRIM)))AND(((v0.c0) BETWEEN (t1.c3) AND (rt0.c0)))))OR(((vt1.c0) ISNULL))))OR((t1.c0 IN ()))))AND((((t1.c3))>((t1.c0))))) FROM vt0, v0 ORDER BY UNICODE((vt1.c0 IN ())) ASC;SELECT DISTINCT (((t1.c2 IN ()))<(((t1.c0) BETWEEN (rt0.c2) AND (NULL)))), AVG((NOT (rt0.c1))), (NULLIF(DISTINCT NULL, v0.c0) IN (((rt0.c0)<>(v0.c0)))) FROM v0, vt1 WHERE ((+ (('A*b\n~j-%,' IN ())))) GROUP BY (- (rt0.c0));SELECT TOTAL(CASE WHEN t1.c3 THEN t1.c75 END) FILTER(WHERE ((((((((((-1407490316)OR(rt0.c1)))AND(t1.c0)))OR(t1.c3)))OR(rt0.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN t1.c0 END) AND (((((t1.c4)AND(rt0.c1)))AND(vt0.c0))))) OVER () FROM vt1 WHERE ((((('0.5094150971611565')IS NOT(NULL))) NOT NULL)) ORDER BY ((((v0.c0)LIKE(t1.c4)))>(CASE t1.c3  WHEN v0.c0 THEN t1.c4 END));SELECT (- ((t1.c4 IN (t1.c2, vt0.c0, v0.c0)))) FROM v0, vt1, vt0, t1 WHERE ((~ (x'd578'))) ORDER BY (((rt0.c1)) BETWEEN (((NOT (rt0.c0)))) AND ((CASE WHEN vt1.c0 THEN 'E0' END)));SELECT ALL CASE ((t1.c4) IS TRUE)  WHEN '-1373684061' THEN (+ (t1.c3)) END FROM v0 WHERE (NULL);SELECT CASE WHEN ((rt0.c0)=(t1.c4)) THEN (t1.c4 IN ()) ELSE (rt0.c1 IN ()) END, CAST(((((rt0.c1)AND(t1.c0)))AND(vt0.c0)) AS REAL), (- (((t1.c4) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM vt0, rt0, vt1, t1; -- 0ms;
SELECT (rt0.c1 IN ()), (CASE v0.c0  WHEN t1.c2 THEN t1.c0 ELSE v0.c0 END IN ()), (((t1.c0)) NOT BETWEEN (((t1.c2 IN ()))) AND ((v0.c0))) FROM vt0, t1, vt1, v0, rt0 WHERE (((~ (0.32831109282983084)) IN ())) GROUP BY ((x'') NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS TEXT))); -- 0ms;
SELECT DISTINCT ((((((x'')OR(rt0.c2)))OR(rt0.c1)))LIKE(CAST(t1.c0 AS REAL))) FROM t1, v0, vt1, vt0 WHERE ((('_	' COLLATE BINARY) BETWEEN (((('1320203543', 0.04812512938431368, -6.8725697E7))=(('H/_✄', 0X2ea6d3da, NULL)))) AND ((((NULL)) NOT BETWEEN ((0.776942259316509)) AND (('Q''d녎\Aww')))))) LIMIT 1262624740 OFFSET -212749651;SELECT ALL (((v0.c0)%(t1.c3)) IN ()) FROM t1, rt0, vt0, vt1, v0 WHERE (CAST(((0.8008903522006237)&(x'4401')) AS REAL)); -- 0ms;
SELECT GROUP_CONCAT((((t1.c4, vt1.c0, t1.c4))<>((t1.c4, x'63b2', t1.c75)))) OVER ( PARTITION BY CASE WHEN (~ (t1.c4)) THEN ((t1.c75) NOT BETWEEN (t1.c4) AND (t1.c75)) WHEN CAST(t1.c0 AS INTEGER) THEN ((NULL)<=(t1.c3)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c3)) THEN ((rt0.c1)=(1438201829)) ELSE ((((((((t1.c3)OR(vt1.c0)))AND(rt0.c1)))OR(t1.c75)))OR(-2045486835)) END, x'44a9'), vt1.c0, (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))AND(vt1.c0)))OR(rt0.c0)))OR(rt0.c2)))) AND ((HEX(DISTINCT vt1.c0)))) FROM t1;SELECT ALL (((~ (t1.c2)))IS(CASE v0.c0  WHEN t1.c0 THEN t1.c3 END)) FROM t1, vt1, v0, rt0; -- 0ms;
SELECT DISTINCT (((((((vt1.c0))<((vt0.c0))))AND(AVG(rt0.c0))))AND(((((vt0.c0)OR(rt0.c2)))OR(t1.c4)))) FROM v0, t1, vt0, vt1;SELECT DISTINCT x'' FROM vt1, rt0, v0 NOT INDEXED, t1, vt0; -- 0ms;
SELECT x'3cd2' FROM t1, vt1, rt0, v0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN t1.c3 ELSE '<_U' END) IS TRUE) FROM vt1;SELECT DISTINCT (json_type(t1.c4) IN (json_array(vt1.c0, v0.c0), ((t1.c0)<(t1.c0)))) FROM t1, vt1 WHERE ((((NULL)&(-26101227)) IN ()));SELECT DISTINCT CAST(((t1.c2) NOT NULL) AS BLOB), ((((v0.c0)AND(t1.c0)))LIKE(IFNULL(DISTINCT vt0.c0, t1.c3))), ((t1.c0 COLLATE BINARY)&(((t1.c2)IS(rt0.c1)))) FROM v0 GROUP BY ((v0.c0)/(t1.c0)) COLLATE BINARY;SELECT CAST(((('-273874868', t1.c3, rt0.c2))<=((t1.c75, t1.c3, rt0.c2))) AS REAL) FROM t1, vt0, rt0, vt1 ORDER BY (NULL IN (((rt0.c2)IS NOT(t1.c3)))) DESC, ((((((t1.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))), (~ (v0.c0)), ((t1.c0) BETWEEN (vt0.c0) AND (rt0.c0))))>((rt0.c1, '뫡3', ((v0.c0)>=(v0.c0))))) ASC  NULLS LAST, TYPEOF(((((0.9103275220325173)OR(t1.c4)))AND(t1.c2))) DESC  NULLS LAST;SELECT ((((((rt0.c0)OR(rt0.c0)))OR(t1.c2))) NOTNULL) FROM vt0, rt0, t1, v0 WHERE (((COALESCE(DISTINCT 0.7721841390212346, x''))>>(((x'')<(-1733505331))))); -- 0ms;
SELECT CAST((((v0.c0)) BETWEEN ((t1.c75)) AND ((rt0.c1))) AS BLOB) FROM v0, t1 GROUP BY (((((((((((rt0.c2))>((rt0.c2))))AND((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c75))))))OR(((t1.c2)&(vt1.c0)))))AND(CASE WHEN rt0.c2 THEN '-1441811454' END)))AND((((rt0.c0))>=((t1.c0)))));SELECT ALL ((vt1.c0 COLLATE RTRIM)>(CAST(v0.c0 AS TEXT))), PERCENT_RANK() OVER ( ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS BLOB)  NULLS FIRST), LAG(((((rt0.c1)|(t1.c0))) IS FALSE), ((CAST(x'' AS TEXT)) NOT BETWEEN (((((t1.c0)OR(t1.c0)))AND(rt0.c2))) AND (rt0.c0 COLLATE RTRIM)), ((((vt0.c0) NOT BETWEEN (t1.c4) AND (x''))) ISNULL)) OVER () FROM v0, t1, vt0, rt0;SELECT DISTINCT ((((CASE t1.c75  WHEN vt1.c0 THEN t1.c2 ELSE t1.c3 END)OR(((t1.c0)OR(rt0.c0)))))OR(COUNT(t1.c75))) FROM rt0, vt0, vt1, v0, t1 WHERE (DATETIME(((834816713)AND(0xffffffffaa0fb402)), (x'134615cb' IN (NULL)), (('e29l\n4-풿r')GLOB(-1173806208)), ((0X159e736f) IS FALSE), '-1126284629' COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((((t1.c3) BETWEEN ('') AND ('996954564'))) IS TRUE), vt0.c0, ((TOTAL(vt0.c0))AND(((rt0.c1) ISNULL))) FROM v0, vt0, t1, rt0, vt1 WHERE (CAST(((NULL)+('n*#Pi>}')) AS TEXT)); -- 0ms;
SELECT DISTINCT t1.c0 FROM v0, vt0, vt1 GROUP BY CAST(CAST(v0.c0 AS INTEGER) AS REAL) HAVING (((NOT (rt0.c1))) IS FALSE);SELECT DISTINCT ((((rt0.c1)>(vt1.c0)))!=(((rt0.c0)<(v0.c0)))) FROM t1, vt1, rt0, v0, vt0 WHERE ('ZM'); -- 0ms;
SELECT ALL ((SUM(v0.c0)) BETWEEN (AVG(vt1.c0)) AND (((t1.c0)>>(vt0.c0)))), NULLIF(CASE vt1.c0  WHEN t1.c75 THEN t1.c0 WHEN t1.c2 THEN t1.c75 WHEN rt0.c0 THEN t1.c4 ELSE rt0.c2 END, ((t1.c0) IS TRUE)), 9.22424485E8 FROM vt0, rt0, t1, vt1 WHERE (((((- (NULL))))>((UPPER('-1467857929')))));SELECT DISTINCT (((t1.c4))<((v0.c0))) COLLATE RTRIM FROM rt0, vt0, vt1 WHERE ((~ (((('-1578992783', 0.3500820032322933, 0.3413507148449457))<=(('-719260553', NULL, '6qVKSM')))))) INTERSECT SELECT ALL CASE CAST(t1.c75 AS REAL)  WHEN (- (t1.c0)) THEN MAX(t1.c0) END FROM v0 ORDER BY t1.c0 ASC;SELECT DISTINCT CASE GROUP_CONCAT(t1.c0)  WHEN ((t1.c2)<=(vt0.c0)) THEN 0Xffffffffeb503608 WHEN t1.c3 THEN rt0.c0 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((t1.c3) BETWEEN (rt0.c1) AND (t1.c0)) ELSE (+ (vt0.c0)) END FROM t1, vt1, v0;SELECT DISTINCT ((((t1.c2) BETWEEN (rt0.c1) AND (v0.c0)))>=(CAST(t1.c2 AS INTEGER))) FROM t1, rt0, vt1, v0, vt0 WHERE (CASE NULL COLLATE RTRIM  WHEN INSTR(x'ce27', x'') THEN ((x'539d') IS FALSE) WHEN (('kk') BETWEEN ('') AND (x'3980')) THEN CAST(x'' AS NUMERIC) WHEN (('')>(0.843218308358687)) THEN ((x'')/('')) ELSE (((x'', '', 0.3740057168526585, '0.843218308358687', NULL)) BETWEEN (('', -1.467857929E9, '᠎xB9e㏒', ' Y_镅 ', '1925515940')) AND ((NULL, x'', 0.764690740713281, '-481334318', x'd609'))) END); -- 0ms;
SELECT DISTINCT (((CASE t1.c75  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN t1.c3 WHEN v0.c0 THEN 0.7323215284009424 ELSE t1.c4 END))<((CAST(x'' AS NUMERIC)))) FROM vt0, t1 WHERE (NULL) GROUP BY t1.c4 COLLATE BINARY;SELECT DISTINCT TOTAL(((v0.c0) BETWEEN (rt0.c0) AND (t1.c75))) FROM v0, vt0;SELECT DISTINCT SUM((NOT (rt0.c2))) FROM vt1;SELECT (~ (('1495748278' IN ()))) FROM vt1, vt0, t1, v0, rt0; -- 0ms;
SELECT DISTINCT COUNT(COALESCE(vt0.c0, v0.c0)) FROM vt1, v0, vt0 WHERE ((((CAST(x'472b' AS INTEGER), ((((0X2fae5f19)AND(x'')))AND(NULL)), (NOT (x''))))>=(('I', (((0.9596743621284196))!=((x''))), -316927485 COLLATE BINARY)))); -- 0ms;
SELECT (NULL IN ((('|up') BETWEEN (t1.c2) AND (t1.c75)), TYPEOF(DISTINCT t1.c2), ((t1.c75)>=(v0.c0)))), CASE WHEN 'Fo0[''!Q' THEN (+ (rt0.c0)) ELSE (('p!p ')+(t1.c0)) END, ((NULL COLLATE RTRIM)>(((x'd1f1') NOT NULL))) FROM vt1 WHERE ((((((935851234 IN ()))AND((((1.251094294E9))>=(('T\n1)wzy)/'))))))OR(((0.47883150776401584)|(NULL)))));SELECT ALL 0x76c2bb02, CASE WHEN ((x'')%(t1.c0)) THEN ((rt0.c2) IS TRUE) END, ((t1.c75)OR(((rt0.c0) BETWEEN (t1.c4) AND (t1.c3)))) FROM t1, v0, rt0, vt1, vt0 WHERE (('2071045710' IN ()) COLLATE RTRIM); -- 0ms;
SELECT (- (CASE rt0.c0  WHEN 0X831191b THEN rt0.c0 WHEN t1.c4 THEN 1.396976139E9 WHEN rt0.c2 THEN t1.c3 END)) FROM v0 WHERE ((+ (-1.828972671E9 COLLATE RTRIM)));SELECT DISTINCT CASE WHEN ((rt0.c0)||(rt0.c2)) THEN TRIM(DISTINCT t1.c4) WHEN vt1.c0 COLLATE NOCASE THEN t1.c2 WHEN (t1.c0 IN ()) THEN ((((vt0.c0)OR(0.5771229204025718)))OR(rt0.c0)) END FROM t1 WHERE (NULL);SELECT ALL AVG(((t1.c75) NOTNULL)) COLLATE RTRIM, CASE WHEN CASE t1.c75  WHEN v0.c0 THEN vt0.c0 ELSE 0.2701273973978786 END THEN ((t1.c0)OR(rt0.c1)) WHEN LTRIM(0Xffffffff867d0fcc) THEN ((((((((vt1.c0)AND(t1.c3)))AND('1756192170')))AND(t1.c3)))AND(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((t1.c4)/('m1E')) ELSE CAST(rt0.c1 AS BLOB) END, TOTAL(((t1.c0) NOTNULL)) OVER ( ORDER BY (((- (rt0.c0))) IS FALSE) ASC  NULLS LAST) FROM v0;SELECT DISTINCT LEAD(((CASE t1.c2  WHEN t1.c75 THEN v0.c0 END) NOTNULL), (- (NULL)), t1.c3) OVER () FROM v0, vt0, t1; -- 0ms;
SELECT ((COUNT(*))<=(COUNT(*))) FROM vt1, vt0, t1, v0 WHERE ((- (CASE WHEN '638694176' THEN -2096311949 END))); -- 1ms;
SELECT DISTINCT CAST(((0.6474828535832143)==(rt0.c1)) AS BLOB) FROM vt0, rt0, vt1 WHERE (((0.04662731024713851)<<(COALESCE(DISTINCT x'', 0.4530436301298463)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)-(t1.c3))) OVER (), ((IFNULL(DISTINCT t1.c4, vt0.c0)) IS TRUE), ((((CAST(v0.c0 AS REAL))AND((t1.c75 IN ()))))OR(((rt0.c1)-(vt0.c0)))) FROM t1, v0 WHERE (((('-38154779' IN (NULL, NULL))) NOT NULL));SELECT DISTINCT CAST(((vt1.c0) IS TRUE) AS NUMERIC) FROM t1, vt1; -- 0ms;
SELECT DISTINCT (+ (vt0.c0 COLLATE NOCASE)), CAST((rt0.c2 IN (t1.c4)) AS TEXT), ((t1.c3) IS FALSE) FROM t1, v0 LIMIT -83989313 OFFSET -307014496;SELECT ((((rt0.c0) NOT NULL))<>(GROUP_CONCAT(vt0.c0))), ((rt0.c0 COLLATE RTRIM) NOT NULL), (+ ((t1.c0 IN (t1.c2)))) FROM v0, t1;SELECT DISTINCT (((t1.c0 IN ()))AND(CASE WHEN t1.c0 THEN t1.c0 END)), t1.c0, vt0.c0 FROM vt0, t1, v0, rt0; -- 0ms;
SELECT CAST(CASE WHEN t1.c3 THEN vt0.c0 WHEN v0.c0 THEN t1.c2 WHEN rt0.c0 THEN t1.c3 END AS REAL) FROM t1, vt0, rt0;SELECT DISTINCT rt0.c2 FROM t1, vt1 GROUP BY PRINTF((((vt1.c0, x'f76c', t1.c3))<((vt0.c0, t1.c0, rt0.c1))), (+ (t1.c0)), (((t1.c75, v0.c0, rt0.c1))<>((t1.c0, rt0.c2, rt0.c0))), ((t1.c0)>=(rt0.c2)), (NOT (t1.c2))), ((((((t1.c0)AND(vt1.c0)))AND(v0.c0))) ISNULL), (((((((((0X21d93ea0 IN ()))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c0 COLLATE RTRIM)))AND(t1.c4)))OR(((rt0.c2)<=(vt0.c0)))) HAVING ((-1.068765881E9) IS FALSE);SELECT ALL (- (v0.c0)) COLLATE RTRIM FROM rt0, t1, vt1, v0 LIMIT 732362609; -- 0ms;
SELECT DISTINCT (((CAST(v0.c0 AS REAL)))=((((t1.c0)AND(t1.c3))))) FROM vt0;SELECT DISTINCT ((((((((((vt1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))AND(CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 WHEN 'ᖒ rJ' THEN rt0.c2 WHEN rt0.c2 THEN t1.c0 END)))AND(((((t1.c3)OR(t1.c4)))AND(t1.c2)))))OR(((t1.c0)<(v0.c0)))))AND((((t1.c0))>((NULL))))), DENSE_RANK() OVER (), ((CASE WHEN t1.c4 THEN t1.c3 ELSE NULL END)<((+ (t1.c0)))) FROM t1, rt0, v0, vt0, vt1; -- 59ms;
SELECT DISTINCT (NOT ((NOT (t1.c3)))) FROM vt0, vt1 WHERE (0.8165078938100012);SELECT DISTINCT ((HEX(vt1.c0))<('Ch*댶')), CAST(((((t1.c75)OR(x'')))OR(v0.c0)) AS INTEGER), ((((0.03797101822642368)|(rt0.c1)))|(((t1.c4)/(vt1.c0)))) FROM vt0, t1, vt1, v0 WHERE (((0.6847290800940669)&(((x'') ISNULL))));SELECT DISTINCT (((t1.c2, t1.c0, vt1.c0)) BETWEEN ((CASE t1.c2  WHEN rt0.c1 THEN t1.c2 WHEN t1.c3 THEN rt0.c2 WHEN '9A' THEN v0.c0 ELSE t1.c4 END, v0.c0 COLLATE NOCASE, (rt0.c1 IN ()))) AND ((0.549910359179113, CAST(vt0.c0 AS BLOB), NULLIF(DISTINCT t1.c75, rt0.c0)))), ((ABS(DISTINCT v0.c0))LIKE(((t1.c0)<(rt0.c1)))), CAST((t1.c75 IN (t1.c2)) AS BLOB) FROM rt0, vt0 INDEXED BY i93 WHERE (((CASE WHEN x'' THEN x'' WHEN '1327800509' THEN x'' WHEN x'' THEN 0.9525714637897584 END)IS NOT(CASE WHEN '' THEN 0.6695637472992242 WHEN x'' THEN NULL WHEN '' THEN x'cb37' ELSE NULL END)));SELECT DISTINCT ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t1.c4 AS NUMERIC)) AND (((t1.c4)==(v0.c0)))) FROM rt0, vt1, t1, v0; -- 1ms;
SELECT ALL ((((t1.c2 COLLATE NOCASE)OR(COUNT(v0.c0))))AND(json_patch(t1.c4, rt0.c0))) FROM vt1, t1, vt0, rt0, v0 WHERE ('B\7WIv'); -- 0ms;
SELECT ((((t1.c0) ISNULL)) IS FALSE) FROM rt0 GROUP BY t1.c0;SELECT ((0X2c894b84) IS TRUE) FROM v0 WHERE (((((1772467013) BETWEEN (NULL) AND ('')))AND(CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT 0.5890685169947701, LOWER(0.832188444105762), ((COALESCE(t1.c75, vt0.c0)) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((t1.c75 IN ()))) FROM rt0, t1;SELECT DISTINCT ((CAST(rt0.c2 AS REAL))<<(CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN x'' WHEN vt0.c0 THEN t1.c3 ELSE v0.c0 END)) FROM rt0 FULL OUTER JOIN vt0 ON ((((((vt1.c0)OR(v0.c0)))AND(t1.c3)))>(NULL)) LEFT OUTER JOIN t1 ON (((t1.c3)) NOT BETWEEN ((((rt0.c1) BETWEEN (t1.c75) AND (NULL)))) AND ((((((((((t1.c0)AND(v0.c0)))OR(rt0.c2)))AND('Xꈍb㎜-4')))OR(t1.c2))))) INNER JOIN vt1 ON ((((((((((((((t1.c4) BETWEEN (t1.c3) AND (vt0.c0)))AND((((x''))>((t1.c4))))))AND(CAST(t1.c4 AS BLOB))))AND(((((((((t1.c75)OR(t1.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))))AND(json_array_length(rt0.c1))))OR(((t1.c0) BETWEEN (vt1.c0) AND ('2144209130')))))OR((- (t1.c4)))) WHERE (((x'')+(CAST(0.6878764982433316 AS BLOB)))) GROUP BY LIKELIHOOD((t1.c75 IN ()), 0.8818199742626033);SELECT DISTINCT ((((t1.c2)GLOB(v0.c0))) BETWEEN (((t1.c3)<<(t1.c4))) AND (((t1.c3)/(t1.c75)))) FROM v0, vt1 INDEXED BY i93, rt0, t1, vt0 ORDER BY -583795041  NULLS LAST LIMIT -1534157017 OFFSET -228337213;SELECT DISTINCT ((((t1.c0) IS FALSE)) NOT NULL) FROM vt0, t1 WHERE ((+ ((((0.22810907393315083))>=(('1820645526')))))); -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE NOCASE  WHEN t1.c2 COLLATE RTRIM THEN t1.c2 COLLATE NOCASE WHEN ((t1.c0) NOT BETWEEN (t1.c4) AND (vt0.c0)) THEN CAST(t1.c0 AS BLOB) WHEN t1.c4 THEN CHANGES() END FROM vt1 INDEXED BY i99 ORDER BY CASE t1.c2  WHEN t1.c75 THEN t1.c75 WHEN t1.c75 THEN rt0.c2 WHEN rt0.c0 THEN t1.c2 END COLLATE BINARY COLLATE RTRIM;SELECT DISTINCT CASE x''  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN '-1510903507' WHEN vt0.c0 THEN rt0.c1 WHEN t1.c75 THEN v0.c0 END COLLATE RTRIM FROM rt0, t1 WHERE ((x'' IN ()) COLLATE NOCASE);SELECT MIN(((t1.c0) BETWEEN (rt0.c2) AND (t1.c2))) FROM v0, vt1, t1 WHERE ((- (((0.8846297864771068)>(x'')))));SELECT DISTINCT ((((rt0.c0)|(t1.c4)))>=((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))), CAST(t1.c4 AS TEXT), (t1.c75 IN ()) FROM t1 FULL OUTER JOIN v0 ON CASE WHEN ((t1.c75) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (((rt0.c0)) NOT BETWEEN ((t1.c75)) AND ((0.7811941801537533))) END RIGHT OUTER JOIN vt1 ON NULL FULL OUTER JOIN vt0 ON CHANGES() COLLATE RTRIM CROSS JOIN rt0 ON 0.18396124764334776;SELECT ((((t1.c75)<>(t1.c0)))IS(vt0.c0 COLLATE BINARY)) FROM t1, rt0, vt0 WHERE ((((~ (x'')))LIKE(load_extension('0.4196429482596331', x'')))) ORDER BY (- (((t1.c75)GLOB(t1.c4)))) ASC  NULLS LAST;SELECT DISTINCT t1.c3, CASE WHEN ((((t1.c2)AND(rt0.c1)))OR('Z)')) THEN ((t1.c3)>>(rt0.c1)) ELSE GROUP_CONCAT(t1.c0) END, v0.c0 COLLATE NOCASE FROM t1, vt0 WHERE ((((NULL)) NOT BETWEEN (('787411986' COLLATE NOCASE)) AND ((CASE WHEN NULL THEN '-945540636' ELSE '0.44284101637270457' END))));SELECT DISTINCT ((((t1.c75)+(821160222)))>=(COALESCE(rt0.c2, t1.c4))) FROM vt0 ORDER BY CASE WHEN ((t1.c3)OR(rt0.c0)) THEN rt0.c2 WHEN (- (rt0.c1)) THEN CAST('746712560' AS TEXT) WHEN (((t1.c2, vt1.c0, vt0.c0, rt0.c2, rt0.c0))<>((0.5038201835839151, v0.c0, vt1.c0, rt0.c2, t1.c3))) THEN CASE t1.c2  WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 END END;SELECT DISTINCT ((+ (rt0.c1)) IN ()) FROM rt0, vt1, t1, vt0 ORDER BY ((rt0.c1) BETWEEN (t1.c4) AND (t1.c75)) COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT TOTAL(v0.c0 COLLATE BINARY COLLATE BINARY) FROM vt1 WHERE ((((2080474139)+(NULL)) IN ()));SELECT ALL ((((rt0.c1)/(t1.c0)))||(((t1.c2)||(v0.c0)))), (((NOT (t1.c3)))||(CAST(NULL AS NUMERIC))), (MIN(t1.c2, rt0.c2) IN ()) FROM vt1, t1 WHERE ((NOT (CASE NULL  WHEN NULL THEN x'' WHEN 6.38694176E8 THEN 1473384809 WHEN x'b82c' THEN NULL ELSE NULL END)));SELECT DISTINCT GROUP_CONCAT(((t1.c4) NOT BETWEEN (t1.c0) AND (vt0.c0))) FROM vt0, rt0, vt1, t1, v0 WHERE ((((x'', NULL, '287879799', -9223372036854775808, 0.6488910206909789)) BETWEEN ((TRIM(NULL, ''), CASE 0.9755585494518964  WHEN '''⼖\n~' THEN 0.802346509851882 ELSE '<)' END, TRIM(DISTINCT NULL), CAST(NULL AS NUMERIC), ((x'')+(NULL)))) AND ((0.4215605119586524 COLLATE BINARY, ((0.5316894873542348)<<(x'')), (('707336454') NOT NULL), (x'5e82' IN ()), ((NULL) ISNULL))))) UNION SELECT DISTINCT rtreenode(CAST(t1.c2 AS NUMERIC), CAST(vt0.c0 AS REAL)) FROM t1, rt0 NOT INDEXED, v0, vt1 WHERE ((('\r4')&(('-2083588537' IN ())))) GROUP BY x'';SELECT ALL ((TOTAL(t1.c0)) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (t1.c4)) FROM t1, v0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN (((t1.c0, t1.c2, vt0.c0))<>((t1.c0, rt0.c2, 0Xffffffffa4527195))) END  NULLS LAST, CASE load_extension(NULL, vt0.c0)  WHEN CAST(NULL AS INTEGER) THEN ((((t1.c3)OR(rt0.c2)))AND(rt0.c2)) WHEN (rt0.c1 IN (t1.c4)) THEN ((((rt0.c1)OR('0')))AND(-1.696924013E9)) WHEN (((t1.c0))>((t1.c2))) THEN -1140081733 ELSE CAST(-1772854689 AS NUMERIC) END DESC  NULLS LAST;SELECT DISTINCT (GROUP_CONCAT(t1.c2) IN ()), 0Xffffffffba962fd1, GROUP_CONCAT('-855436775') FILTER(WHERE NULL) OVER () FROM vt0 WHERE (CAST(((x'2b35')AND('1703311806')) AS TEXT)) UNION SELECT ((((((vt0.c0) NOT BETWEEN (NULL) AND (vt1.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c3)))))OR(((((1473384809)OR(vt1.c0)))AND(vt1.c0)))), CASE WHEN (('0.9711490395993303')LIKE(vt0.c0)) THEN GROUP_CONCAT(rt0.c1) END, TOTAL(((t1.c3)-(vt0.c0))) FROM v0, t1 INDEXED BY i93, vt0, rt0 WHERE (((CASE NULL  WHEN 'ck' THEN NULL ELSE x'' END)||(((NULL) NOT NULL))));SELECT ((((rt0.c1) NOT BETWEEN (v0.c0) AND (t1.c75))) BETWEEN ((rt0.c0 IN ())) AND ((((v0.c0))<=((rt0.c1))))), (- ((t1.c3 IN (x'0e42')))), v0.c0 FROM t1 INNER JOIN v0 ON rt0.c0;SELECT DISTINCT (+ (t1.c75)) FROM vt0;SELECT ((INSTR(rt0.c2, vt1.c0)) IS TRUE) FROM vt1;SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((((t1.c2)OR(t1.c3)))AND(t1.c0))))) FROM rt0, t1, vt1, v0, vt0; -- 0ms;
SELECT ALL CASE WHEN t1.c2 THEN rt0.c1 WHEN rt0.c0 THEN t1.c2 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt1, rt0, v0, vt0, t1; -- 0ms;
SELECT ALL CASE WHEN TOTAL(vt0.c0) THEN ((t1.c3)*(t1.c75)) WHEN (((t1.c2))>((t1.c2))) THEN CASE rt0.c2  WHEN rt0.c2 THEN x'' WHEN t1.c75 THEN v0.c0 WHEN rt0.c1 THEN t1.c0 END WHEN ((rt0.c0) NOT BETWEEN (t1.c75) AND (x'')) THEN CAST(vt1.c0 AS TEXT) END FROM t1, rt0, v0, vt0;SELECT DISTINCT ((t1.c4)>=(rt0.c1)) COLLATE RTRIM, CAST((+ (vt0.c0)) AS BLOB), ((0.032175799451697906)LIKE(((((((((((((t1.c0)OR(rt0.c0)))AND('UbIg\>U%')))AND(t1.c2)))AND(v0.c0)))AND(rt0.c2)))OR(v0.c0)))) FROM v0, vt1, vt0;SELECT DISTINCT CAST(t1.c2 AS INTEGER) COLLATE NOCASE FROM t1, vt1, v0; -- 0ms;
SELECT DISTINCT (NULL IN ()) FROM vt0, vt1, t1, v0, rt0; -- 0ms;
SELECT ALL CASE ((t1.c75) BETWEEN (t1.c4) AND (t1.c4))  WHEN 0.38123537375830086 THEN (~ (t1.c0)) END FROM v0, t1, vt1, vt0, rt0 ORDER BY t1.c3  NULLS LAST; -- 27ms;
SELECT DISTINCT (NOT (((((((((rt0.c0)AND(t1.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))) FROM rt0, vt0;SELECT DISTINCT ROW_NUMBER() OVER () FROM v0, vt0, rt0 WHERE (((((((((CAST(-4.4385214E8 AS REAL))OR(((0.039755816485664064)GLOB(NULL)))))OR(CAST(NULL AS BLOB))))AND((0.7338663767762055 IN ()))))AND(CASE 0.3801672294060642  WHEN '0.9585022181168678' THEN '-542905244' END))); -- 1ms;
SELECT ALL ((((vt1.c0)<(rt0.c0)))|('6GDU}\[')) FROM rt0, v0;SELECT (((vt0.c0)|(v0.c0)) IN ()) FROM vt1, v0, t1, vt0, rt0 WHERE ((- (((x'') IS FALSE)))); -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((((rt0.c2)&(t1.c3)))) AND ((vt0.c0))) FROM t1, v0 WHERE (((((NULL) IS TRUE))LIKE(((NULL) NOT BETWEEN ('-1283927342') AND ('}e,pLT''D')))));SELECT ALL ((- (t1.c3)) IN ()), (((((vt0.c0) NOT NULL), CASE WHEN t1.c0 THEN rt0.c1 END, vt1.c0))==((CASE WHEN t1.c2 THEN x'' END, ((rt0.c0) BETWEEN (vt0.c0) AND (t1.c2)), CAST(t1.c0 AS REAL)))), UNICODE(((t1.c0) BETWEEN (0X6feb8260) AND (t1.c0))) FROM t1, vt1 WHERE (((0.03206532982150434) ISNULL) COLLATE BINARY);SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN v0.c0 END AS NUMERIC) FROM vt1, v0, rt0 WHERE (((((x'80d9') ISNULL)) NOTNULL));SELECT DISTINCT (((((((((((t1.c2)) NOT BETWEEN ((t1.c3)) AND (('-547765438'))))OR(rt0.c1)))AND(CAST(0.5849248310700287 AS REAL))))OR(CASE v0.c0  WHEN t1.c4 THEN vt1.c0 WHEN t1.c4 THEN 0.6767771202100941 WHEN rt0.c0 THEN t1.c3 END)))OR((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((x'ecd2'))))) FROM vt0, v0;SELECT ALL ((((('!', v0.c0, t1.c4)) BETWEEN ((t1.c2, rt0.c2, rt0.c0)) AND ((t1.c4, rt0.c0, rt0.c1)))) ISNULL) FROM rt0;SELECT ALL t1.c3, CAST(t1.c2 AS TEXT), rt0.c0 FROM vt1, v0 WHERE ((('-869729519' COLLATE BINARY) BETWEEN (CAST(0.45371893665800134 AS INTEGER)) AND ((('[ੱob{A') IS FALSE))));SELECT ALL load_extension(TOTAL(vt0.c0)), ((((t1.c0) IS TRUE)) NOT BETWEEN (((t1.c3)<(rt0.c1))) AND ((t1.c3 IN (t1.c75)))), CUME_DIST() OVER () FROM rt0, t1 WHERE (((((x'0186')<(0.020656995481006968)))|(NULLIF('_&*', '0.3740057168526585'))));SELECT DISTINCT CASE ((((rt0.c1)AND(t1.c2)))OR(t1.c0))  WHEN ((x'051a') BETWEEN (rt0.c0) AND (t1.c4)) THEN ((((-1.7976931348623157E308)AND(rt0.c0)))AND(t1.c2)) ELSE ((t1.c0)OR(v0.c0)) END FROM t1, vt0 GROUP BY (((t1.c4)) BETWEEN ((((vt0.c0)>(rt0.c2)))) AND (((t1.c2 IN ())))) HAVING CAST(',/' AS TEXT) COLLATE BINARY;SELECT (json_type(rt0.c2) IN (0X34cfada5 COLLATE NOCASE)) FROM vt0, v0, t1;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (0.9749725445807833)))<(vt0.c0 COLLATE BINARY)) FROM vt1, vt0, t1, v0, rt0 WHERE (((ABS(x'')) NOTNULL)) LIMIT -614496611 OFFSET -835807860; -- 0ms;
SELECT DISTINCT ((vt1.c0)>=(((((vt0.c0)OR(t1.c3)))OR(v0.c0)))), (NOT ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), (json_array_length(x'', vt0.c0) IN ()) FROM rt0;SELECT DISTINCT ((((((((((t1.c3)OR(t1.c75)))OR(vt0.c0)))AND(t1.c0)))OR(vt0.c0))) BETWEEN (((rt0.c1)GLOB(t1.c75))) AND (x'')) FROM vt0, rt0, v0 WHERE (((((x'67b57a7ff3df')OR(x'ea55'))) NOT BETWEEN ((((x'c056')) BETWEEN (('')) AND ((0.6394396620876922)))) AND (((((((((x'')OR(x'')))OR('')))OR('W')))AND(x'')))));SELECT ALL (~ ((NOT (v0.c0)))), ((vt1.c0 COLLATE NOCASE) ISNULL), (((vt1.c0, v0.c0, v0.c0)) BETWEEN (((((t1.c2)) BETWEEN ((t1.c4)) AND ((rt0.c0))), t1.c4 COLLATE BINARY, ((rt0.c2)-(rt0.c2)))) AND ((((t1.c2)|(t1.c3)), (((t1.c4))<>((x''))), (rt0.c0 IN ())))) FROM vt1, vt0, t1, v0;SELECT DISTINCT vt1.c0, AVG(LIKELIHOOD(t1.c3, 0.6875678265811677)) FILTER(WHERE ((CAST(t1.c4 AS BLOB)) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c2 COLLATE NOCASE))) OVER (), (((~ (v0.c0)))<=(((rt0.c0)AND(t1.c75)))) FROM v0 INDEXED BY i93, vt1, t1;SELECT DISTINCT AVG(((vt1.c0) NOT BETWEEN (0.8261872156941558) AND (t1.c75))) FROM vt1, t1; -- 0ms;
SELECT ALL NTH_VALUE(((((0Xffffffff911ae915)OR(CAST(t1.c3 AS INTEGER))))OR(((t1.c2) NOTNULL))), ((CAST(t1.c4 AS NUMERIC))%(t1.c2))) OVER () FROM vt0, v0, t1;SELECT (NULL COLLATE RTRIM IN (CAST(rt0.c2 AS NUMERIC), CAST(t1.c75 AS BLOB))) FROM vt0, v0, rt0;SELECT DISTINCT MAX(t1.c3) FROM v0 LIMIT 1329054617 OFFSET -653955037;SELECT ALL FIRST_VALUE(CASE WHEN (0.07481363323735069 IN (t1.c2)) THEN (((rt0.c2, rt0.c2, vt0.c0))<=((t1.c4, t1.c2, rt0.c1))) END) OVER () FROM rt0, vt0, vt1, t1 INDEXED BY i93, v0 WHERE (((CASE 0.5746309384739087  WHEN x'' THEN '\rCJ1hi' WHEN x'192c' THEN 9.62389724E8 WHEN x'' THEN -1765404564 END) NOT NULL)) LIMIT 1025546557; -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, t1, vt1, v0, vt0 WHERE (CAST((1.813565469E9 IN ()) AS NUMERIC)); -- 0ms;
SELECT GROUP_CONCAT('934188150') COLLATE BINARY, CASE ((((vt1.c0)OR(t1.c75)))AND(t1.c4))  WHEN (rt0.c2 IN (-68725697, t1.c4)) THEN json_array_length(vt1.c0) WHEN COUNT(*) THEN ((((vt0.c0)OR(NULL)))AND(t1.c3)) WHEN (((t1.c4, t1.c2, rt0.c1))==((t1.c0, rt0.c2, v0.c0))) THEN CASE WHEN vt0.c0 THEN '-1941990786' WHEN t1.c3 THEN x'c819' WHEN t1.c4 THEN t1.c4 END ELSE (t1.c75 IN ()) END, ((((NULLIF(x'491ada12', rt0.c0))OR(((t1.c3) NOT BETWEEN (t1.c4) AND (rt0.c1)))))AND(((((rt0.c2)AND(v0.c0)))OR(vt1.c0)))) FROM t1, vt0, vt1, v0, rt0;SELECT DISTINCT ((((t1.c3) NOT BETWEEN (t1.c2) AND (vt1.c0))) BETWEEN (t1.c75 COLLATE NOCASE) AND ((('')IS NOT(rt0.c1)))), '-2076516030', MIN(SUM(CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 WHEN '-2018628300' THEN t1.c4 WHEN rt0.c0 THEN rt0.c2 END)) FROM vt0, t1, vt1 WHERE (CASE WHEN HEX(DISTINCT 0.5950289213991811) THEN 0.6904791648295858 COLLATE BINARY ELSE CASE ''  WHEN x'd599' THEN '2030770076' END END);SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CASE (('1421772465') BETWEEN (NULL) AND (NULL))  WHEN ((((NULL)AND(x'e17f')))OR('U*dH5')) THEN CASE '(^R'  WHEN NULL THEN x'dd56' WHEN 0xfffffffffa173e67 THEN NULL WHEN x'' THEN '847986515' ELSE 0.6447743555397528 END END); -- 0ms;
SELECT (((CAST(rt0.c2 AS BLOB)))<((((((t1.c2)OR(rt0.c0)))OR(t1.c3))))) FROM t1, rt0 GROUP BY NULLIF(DISTINCT ((t1.c2) BETWEEN (vt0.c0) AND (NULL)), (((t1.c0))>((t1.c75)))), ((((((((((((v0.c0)OR(t1.c2)))OR(v0.c0)))OR(t1.c3)))AND(vt0.c0)))OR((+ (t1.c0)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN 0.38427075664989097 THEN t1.c3 WHEN 0.42923173344384535 THEN rt0.c1 END)), TYPEOF(DISTINCT ((x'7985') NOT BETWEEN (vt1.c0) AND ('I-O\n}?vh'))) HAVING ((((((v0.c0)AND(t1.c3)))OR(t1.c4))) NOT BETWEEN (ABS(DISTINCT t1.c4)) AND ((((rt0.c0))!=((v0.c0))))) LIMIT -580339787;SELECT ALL 0.23428585014420478 FROM vt0, v0; -- 0ms;
SELECT DISTINCT x'7ca5' FROM vt0, vt1 GROUP BY x''; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE t1.c4  WHEN vt1.c0 THEN vt1.c0 END) FROM vt0;SELECT DISTINCT GROUP_CONCAT(((rt0.c1)OR(vt0.c0))) OVER () FROM t1, rt0, v0, vt1, vt0; -- 42ms;
SELECT DISTINCT (t1.c4 IN ()) COLLATE RTRIM, ((vt1.c0)>>(((t1.c3) ISNULL))), ((((x'')*(t1.c3))) NOT NULL) FROM v0, vt0;SELECT NULL FROM rt0, t1, v0; -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL SUM(((vt1.c0) NOT NULL)) FROM rt0, vt1, v0, vt0, t1 WHERE (((('_v', x'', NULL)) NOT BETWEEN ((((x'')OR('')), (+ (NULL)), ((x'') BETWEEN ('ak') AND ('1813565469')))) AND ((0.22146342513552564, x'', NULL)))); -- 37ms;
SELECT DISTINCT ((CAST(t1.c2 AS REAL)) BETWEEN ((t1.c2 IN ())) AND (((((rt0.c0)OR(t1.c0)))OR(t1.c0)))) FROM v0, vt1, rt0 WHERE (((((0.6821415346294909) IS FALSE)) IS FALSE));SELECT DISTINCT (((t1.c4 COLLATE NOCASE))<((((t1.c0) NOT BETWEEN (413978655) AND (''))))) FROM rt0, vt0 ORDER BY CASE WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) NOT BETWEEN (t1.c2) AND (rt0.c0)) END  NULLS LAST;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((((t1.c4)AND(NULL)))OR(t1.c4)))) AND ((((t1.c75) BETWEEN (vt0.c0) AND (vt1.c0))))), AVG(JULIANDAY(t1.c0, vt1.c0, t1.c4, v0.c0, vt0.c0)) OVER (), CAST(vt0.c0 AS BLOB) FROM vt1, t1, v0, rt0, vt0 ORDER BY ABS((t1.c4 IN ()))  NULLS FIRST LIMIT -1811095534; -- 95ms;
SELECT DISTINCT LEAD((((((vt0.c0) BETWEEN (vt0.c0) AND (x'')), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)/(vt0.c0))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-4988652552297220979 857-1249:210:-4506639017446790085T280 1035 8396235357675403254T1536:u')), ((vt0.c0)GLOB(vt0.c0)), (- (vt0.c0))))), ((((vt0.c0)AND('')))AND('329699445')), (+ (TIME(vt0.c0, vt0.c0, vt0.c0)))) OVER () FROM vt0 WHERE ((ABS('0.4196429482596331') IN ())); -- 0ms;
SELECT CASE WHEN (rt0.c1 IN ()) THEN (((t1.c2, vt1.c0, t1.c75)) BETWEEN ((t1.c3, x'', vt0.c0)) AND ((rt0.c2, '51667626', t1.c0))) WHEN 'v' THEN CASE WHEN rt0.c2 THEN vt1.c0 END WHEN ((((v0.c0)OR(vt0.c0)))OR(rt0.c2)) THEN t1.c3 END, LIKELIHOOD(CAST(vt0.c0 AS INTEGER), 0.710945115296712), COUNT(*) OVER () FROM t1, v0, vt1, vt0, rt0 WHERE ((((((0X8c1348)OR('-958735563'))))<((((0.6810851056577167)%(NULL)))))); -- 0ms;
SELECT ALL CASE WHEN t1.c4 THEN ((t1.c75)<>(vt1.c0)) ELSE ((t1.c3) NOT BETWEEN (vt1.c0) AND (t1.c3)) END FROM v0, rt0 WHERE (CAST(CAST('' AS INTEGER) AS REAL));SELECT ALL ((rt0.c2) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1))) AND (((t1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM t1 WHERE ((('')-('-771726654')) COLLATE BINARY) ORDER BY (((~ (vt1.c0)))==(((vt0.c0) ISNULL))) ASC, CASE WHEN (((t1.c4)) BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN (((t1.c75)) BETWEEN ((x'')) AND ((v0.c0))) WHEN ((t1.c75) NOTNULL) THEN t1.c4 COLLATE NOCASE WHEN ((((rt0.c1)OR(vt1.c0)))AND(0xffffffff8439afdf)) THEN (- (t1.c4)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (t1.c4)) END;SELECT ALL NTH_VALUE(((((((vt0.c0)OR(vt1.c0)))AND(t1.c0))) BETWEEN (((rt0.c0)IS NOT(rt0.c1))) AND (rt0.c0 COLLATE NOCASE)), CAST((v0.c0 IN ()) AS BLOB)) OVER () FROM vt1, vt0, rt0, t1, v0;SELECT (((NOT (t1.c4)))>>(COALESCE(rt0.c2, '1072635676', rt0.c2, vt1.c0))) FROM t1 WHERE ((+ ((((NULL, NULL, 'V>WL<7'))<(('0.9322066851118422', 0.3885190088618494, -9.50092268E8))))));SELECT DISTINCT (((~ (rt0.c2))) NOT NULL) FROM vt1, rt0, t1 INDEXED BY i99, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c4)LIKE(t1.c75)))IS((((vt1.c0))<((vt1.c0))))) FROM vt0;SELECT DISTINCT 0.7617427304229393 FROM vt0, v0, vt1, rt0; -- 0ms;
SELECT NULL, (((rt0.c0)) NOT BETWEEN ((MIN(t1.c75))) AND ((json_array_length(t1.c4)))), (((rt0.c1)) NOT BETWEEN (((('4BJa')AND(vt1.c0)))) AND ((((((vt1.c0)OR(rt0.c2)))AND(v0.c0))))) FROM t1;SELECT ALL 0Xffffffffd1334f99 FROM v0, vt0, rt0, vt1, t1 WHERE (json_array(x'' COLLATE BINARY, NULL COLLATE BINARY, (+ ('')), 0xffffffffdea23786 COLLATE NOCASE)) UNION SELECT DISTINCT ((((t1.c3) NOTNULL))AND(0.5999109465462883)) FROM v0, vt1, vt0, t1 WHERE (CAST(UPPER(DISTINCT '9223372036854775807') AS INTEGER));SELECT DISTINCT x'' FROM vt0, v0, vt1 WHERE (CAST(((x'')>>('尀cPo')) AS REAL)); -- 0ms;
SELECT ((((t1.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) IN ()) FROM vt0 WHERE ((LIKELY(DISTINCT x'') IN (((0x618a0367)-(x''))))); -- 0ms;
SELECT DISTINCT JULIANDAY(CAST(t1.c2 AS TEXT), LTRIM(rt0.c2, x''), ((((rt0.c1)AND(t1.c0)))OR(t1.c2))) FROM vt1, rt0, vt0, t1, v0 WHERE (x'43b9'); -- 0ms;
SELECT DISTINCT x'', 'Q', ((COUNT(rt0.c1))AND(t1.c4)) FROM vt0, rt0, t1 WHERE (((('-M{I.l떨+W') BETWEEN (x'0584') AND (0.6532095208870637)) IN ())) LIMIT -1406872315 OFFSET -1222799762; -- 0ms;
SELECT DISTINCT ((COALESCE(DISTINCT t1.c3, t1.c75))<=(((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))), CASE ((t1.c75)>>(v0.c0))  WHEN ((t1.c4) NOT BETWEEN (t1.c3) AND (t1.c2)) THEN 0.584885825798535 WHEN ((rt0.c1) ISNULL) THEN CAST(t1.c75 AS BLOB) WHEN '-1941990786' THEN CAST(t1.c2 AS NUMERIC) END, LIKELIHOOD(SQLITE_VERSION(), 0.6992753290172647) FROM t1, vt0, vt1 GROUP BY ((((((t1.c75)) NOT BETWEEN ((x'7af9')) AND ((rt0.c1))), (t1.c3 IN ()), ((((((((rt0.c1)OR(t1.c75)))OR(v0.c0)))AND(v0.c0)))OR(vt1.c0))))<=((CAST(v0.c0 AS NUMERIC), ((t1.c4)=(vt1.c0)), TRIM(t1.c2, vt0.c0)))) HAVING ((COUNT(rt0.c1))>(((t1.c4) BETWEEN (t1.c4) AND (t1.c4))));SELECT CAST(((t1.c0) BETWEEN (t1.c4) AND (rt0.c1)) AS BLOB) FROM vt0, v0, vt1, rt0, t1 WHERE ((((((NULL, '', NULL)) NOT BETWEEN ((',qRnzP', 9.26957041E8, 'A4Gv')) AND ((NULL, NULL, '132776226')))) IS FALSE)) GROUP BY '-1588645894' HAVING 0.7763095936687445; -- 0ms;
SELECT DISTINCT ((((((vt1.c0) BETWEEN (t1.c0) AND (t1.c0)))OR(t1.c2)))OR(rt0.c1 COLLATE RTRIM)), ((((((((CAST(t1.c3 AS TEXT))AND(CASE WHEN rt0.c0 THEN t1.c3 WHEN vt1.c0 THEN rt0.c1 WHEN t1.c3 THEN vt1.c0 END)))AND((rt0.c2 IN ()))))AND(((NULL)/(vt0.c0)))))AND(SUM(rt0.c0))), vt1.c0 FROM vt1, v0, t1, vt0 ORDER BY ((((((((((t1.c4) NOT BETWEEN (x'') AND (t1.c75)))AND(CAST(rt0.c0 AS INTEGER))))AND(((t1.c75) NOT BETWEEN (t1.c75) AND (v0.c0)))))OR(((((t1.c4)OR(vt0.c0)))OR(t1.c0)))))AND(v0.c0 COLLATE RTRIM)) ASC  NULLS LAST LIMIT -1728568413 OFFSET 801881586;SELECT ((((rt0.c1)<=(vt1.c0)))/((- (t1.c0)))), ((((((v0.c0)%(vt0.c0)))OR(((t1.c2) BETWEEN (rt0.c0) AND (vt0.c0)))))OR(((rt0.c1)<(rt0.c2)))), CAST(((((((((vt0.c0)OR(x'7119')))AND(t1.c4)))AND(rt0.c0)))AND(vt1.c0)) AS INTEGER) FROM v0, rt0;SELECT ALL t1.c75, NTILE(((+ (rt0.c0)) IN (((vt1.c0) IS FALSE)))) OVER ( ORDER BY NULL  NULLS LAST ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), AVG(NULL) FROM rt0, vt1 WHERE (IFNULL(-9.50092268E8, 0.45757628856010524) COLLATE NOCASE);SELECT ALL ((((rt0.c0) BETWEEN (t1.c3) AND (rt0.c1)))<=((t1.c75 IN ()))), ((((CASE WHEN vt1.c0 THEN t1.c0 WHEN '1861058136' THEN rt0.c2 WHEN t1.c3 THEN v0.c0 END)AND(t1.c0)))AND(((0x395ce6dc) IS FALSE))), ((rt0.c0)<(vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE (CASE x'' COLLATE NOCASE  WHEN (NULL IN ()) THEN ((x'')<<(x'8b82')) WHEN '1514749661' COLLATE BINARY THEN '1833458983' WHEN (('0#')>>('-1467857929')) THEN CASE WHEN -54472773 THEN NULL ELSE 1836954711 END ELSE TRIM(DISTINCT x'') END);SELECT DISTINCT (((NULLIF(DISTINCT t1.c0, rt0.c2)))<=((CASE WHEN rt0.c1 THEN t1.c75 ELSE rt0.c0 END))) FROM v0, vt1, vt0 WHERE (((CAST(0xffffffffffffffff AS TEXT)) BETWEEN (CASE ''  WHEN x'' THEN x'' END) AND (((('!l')) NOT BETWEEN ((0.46366843050155704)) AND ((0.6429156386187861)))))) LIMIT 1722882190 OFFSET -1063677714;SELECT DISTINCT (COUNT(t1.c2) IN (((t1.c2)-(rt0.c2)), '0.843218308358687')), ((x'')+(((t1.c4) NOT NULL))), (~ (x'')) COLLATE BINARY FROM v0, vt1, vt0, rt0 NOT INDEXED;SELECT ALL ((((((0Xffffffff845c9b5d))<((vt1.c0)))))<(((((t1.c75))<>((t1.c75)))))) FROM v0, vt1, rt0 WHERE (CASE ((NULL) NOT BETWEEN (x'c527') AND ('-1569980203'))  WHEN ((((0X37db2f0d)AND(0.3322141652019348)))AND(0.4138961632581425)) THEN ((x'') BETWEEN ('') AND (0.534707080329813)) END);SELECT DISTINCT t1.c3 COLLATE RTRIM FROM vt0, v0, rt0, vt1, t1 WHERE ((((x'' IN ()))AND((- (0X16ca5ebd))))); -- 1ms;
SELECT DISTINCT ((((((((CASE WHEN 'NF!nꆖ\\n''' THEN '댠5{嶪' END)OR(v0.c0)))OR(rt0.c2 COLLATE BINARY)))OR(CAST(rt0.c1 AS REAL))))AND((t1.c75 IN ()))) FROM vt0, v0; -- 0ms;
SELECT (((vt1.c0 IN ())) BETWEEN (((vt0.c0)IS NOT(vt1.c0))) AND (vt0.c0)), CASE WHEN ((vt0.c0)/(t1.c4)) THEN json_array_length(v0.c0, rt0.c1) ELSE LIKELY(DISTINCT t1.c4) END, NTILE(((((((((((('1658756326'))>=((t1.c3))))AND(((t1.c0)LIKE(NULL)))))OR(CAST(vt0.c0 AS INTEGER))))OR(((t1.c75)>>(t1.c3)))))AND(((t1.c4)>=(t1.c3))))) OVER (), IFNULL(DISTINCT ((t1.c4)<=(v0.c0)), (+ (t1.c75))), CASE WHEN '251355063' THEN json_array_length(x'') WHEN rt0.c0 THEN GROUP_CONCAT(vt0.c0) WHEN ((rt0.c0) NOT NULL) THEN CASE rt0.c0  WHEN t1.c0 THEN t1.c2 ELSE vt0.c0 END ELSE (((t1.c3))==((t1.c2))) END FROM t1, vt0 WHERE ((((((-7.24252703E8)AND(0.07620835004327153)))OR(0.9585022181168678)) IN ((((NULL)) BETWEEN (('-1441811454')) AND ((x'bb24'))))));SELECT FIRST_VALUE(CAST((rt0.c1 IN ()) AS TEXT)) OVER () FROM vt0, t1, v0, rt0, vt1 WHERE (CAST(((((((((0.3833436846069146)OR(0.5467724169421417)))OR(-1424395841)))OR(-1660661820)))OR(0Xfffffffffbe7543f)) AS BLOB)); -- 36ms;
SELECT DISTINCT ((v0.c0) BETWEEN (NULL) AND (load_extension(t1.c2))) FROM vt0, rt0;SELECT ALL ((((t1.c75)-(vt0.c0))) BETWEEN (TRIM(DISTINCT t1.c4)) AND (((((rt0.c2)AND(t1.c3)))OR(t1.c75)))) FROM vt1, vt0, v0, t1, rt0 WHERE (CAST((('*Kq') BETWEEN (NULL) AND (7.47195268E8)) AS INTEGER)); -- 0ms;
SELECT DISTINCT 0.03259421763510717 FROM t1, vt1 WHERE (((((NULL)IS NOT(0X6b921f92)))&((('') BETWEEN (x'91ee') AND (NULL))))) LIMIT 816457796; -- 0ms;
SELECT ALL ((TOTAL(x'')) NOT BETWEEN (SQLITE_VERSION()) AND (((t1.c2)<(t1.c75)))) FROM v0 WHERE (((((((((TRIM(DISTINCT NULL, 'g8'))OR((NOT ('-822684952')))))AND(CAST('^QꃫCFy<' AS NUMERIC))))AND(NULL COLLATE BINARY)))AND(NULL))) LIMIT -1043796233;SELECT (~ (((vt1.c0) BETWEEN (rt0.c1) AND (t1.c2)))) FROM vt1 LIMIT -779405656;SELECT ALL rt0.c1, COUNT((((t1.c3))<=((v0.c0)))), (rt0.c0 IN (CASE WHEN t1.c0 THEN '15aRT' WHEN vt0.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c75 END, (((vt1.c0, v0.c0, t1.c2))>((rt0.c0, vt0.c0, t1.c3))))) FROM t1 WHERE ((((CASE NULL  WHEN '-1075111064' THEN NULL END))!=((((0.10880639897539968) NOT NULL))))) GROUP BY (((vt1.c0)) BETWEEN ((((t1.c75) ISNULL))) AND ((CASE t1.c3  WHEN t1.c2 THEN x'7a3c' END))) HAVING ((((t1.c75) NOT BETWEEN (vt0.c0) AND (t1.c4)))-(v0.c0));SELECT ALL (((((- (x'')))OR((((rt0.c2, v0.c0, vt1.c0))<=((t1.c4, rt0.c1, 759148666))))))OR(json_array(t1.c4, v0.c0))) FROM t1, v0, rt0, vt1, vt0 WHERE ((('1094776148' COLLATE RTRIM) NOT BETWEEN (((0.03613265579957636) NOT BETWEEN (1690236890) AND ('1932860984'))) AND (CAST('0.7911274561528442' AS REAL))));SELECT ((((NULL) IS FALSE))+(((((t1.c0)OR(t1.c2)))OR(t1.c4)))) FROM rt0, v0, vt0, vt1, t1 LIMIT 1445609609 OFFSET -1951968918; -- 0ms;
SELECT ALL ((((((((((vt0.c0)OR(v0.c0)))AND(rt0.c1)))AND(NULL)))OR(t1.c0))) ISNULL) FROM v0 GROUP BY ((((t1.c0)||(vt0.c0)))IS NOT(((t1.c2)<=('#毒{+ud\')))), ((((vt0.c0) NOTNULL))AND(json_insert(t1.c4, vt1.c0, rt0.c2))), CASE WHEN ((((v0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN vt1.c0 COLLATE BINARY ELSE (((t1.c75, t1.c3, t1.c0))==((t1.c75, rt0.c2, t1.c3))) END ORDER BY (NOT (NULL))  NULLS LAST;SELECT ALL GROUP_CONCAT(CASE v0.c0  WHEN t1.c0 THEN vt0.c0 WHEN t1.c3 THEN t1.c3 WHEN t1.c2 THEN '뼫]pHwo	{' ELSE vt1.c0 END) OVER () FROM rt0, t1, vt1 WHERE ((('9mN3gT⌑')-(((-1093060422) IS TRUE))));SELECT DISTINCT rt0.c2 FROM rt0, v0, t1 GROUP BY ((x'')<(((((rt0.c1)AND(vt0.c0)))OR(t1.c0)))) HAVING CAST(vt0.c0 AS REAL);SELECT ((((t1.c4 IN ()), ((')')OR(NULL)), ((((rt0.c2)OR(NULL)))OR(rt0.c1))))==((t1.c4, HEX(DISTINCT t1.c0), ((t1.c0)/(t1.c75))))) FROM v0, t1;SELECT ALL TOTAL((vt1.c0 IN ())) OVER () FROM vt1 WHERE (CAST((('1040356677')<<(x'a0ba')) AS NUMERIC)); -- 0ms;
SELECT (~ (((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)))), '1756192170', (CASE WHEN vt1.c0 THEN t1.c3 END IN ()) FROM t1, v0;SELECT ALL (((t1.c75, vt1.c0, t1.c3)) BETWEEN ((LIKELY(rt0.c1), (t1.c4 IN ()), t1.c3)) AND ((CASE WHEN t1.c4 THEN t1.c2 ELSE t1.c3 END, (((t1.c3)) BETWEEN ((vt0.c0)) AND ((t1.c2))), ''))) FROM t1, v0, rt0 WHERE ((((x'')IS NOT(1925515940)) IN ()));SELECT ALL (- ((((NULL, t1.c2, rt0.c1)) BETWEEN ((v0.c0, t1.c3, vt0.c0)) AND ((t1.c0, t1.c75, vt0.c0))))), ((CAST(t1.c2 AS REAL)) BETWEEN (t1.c3) AND ((((t1.c2))<=((rt0.c0))))), ((CAST(vt0.c0 AS INTEGER))<(CAST(t1.c4 AS TEXT))) FROM rt0, t1, vt0, v0, vt1 WHERE (CASE WHEN (NOT (NULL)) THEN (((('991394091')OR(NULL)))AND('-685841842')) END) LIMIT -58930111; -- 0ms;
SELECT ALL 'lz[()', ((t1.c3 IN ()) IN ()), (((((v0.c0) NOTNULL)))!=(((((t1.c3, rt0.c1, rt0.c0, vt1.c0, t1.c0)) BETWEEN ((vt1.c0, vt1.c0, t1.c75, v0.c0, t1.c0)) AND ((t1.c4, t1.c75, 0.8750393208485553, vt0.c0, vt0.c0)))))) FROM t1, vt0, rt0 WHERE ('-2119961453' COLLATE NOCASE) ORDER BY (((NULL IN ()))IS(v0.c0 COLLATE NOCASE));SELECT DISTINCT FIRST_VALUE((((- (rt0.c2)))AND(((rt0.c2) ISNULL)))) OVER () FROM rt0 WHERE (UNLIKELY(((NULL) BETWEEN (0.8278078939774938) AND ('0.935390529291548')))); -- 0ms;
SELECT DISTINCT ((((t1.c2) IS FALSE))&(CASE rt0.c1  WHEN vt1.c0 THEN t1.c75 END)), ((((NULL)AND(((rt0.c2)+(t1.c4)))))AND(0.3740057168526585 COLLATE NOCASE)), (((NULL) IS FALSE) IN ((((t1.c4)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))) FROM rt0, vt0, t1, vt1, v0; -- 0ms;
SELECT COUNT(((v0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) COLLATE NOCASE) OVER () FROM t1, rt0, vt1, vt0 WHERE ((((((- (-1.068765881E9)))AND(UNLIKELY('-724252703'))))AND(CAST('[_' AS NUMERIC))));SELECT DISTINCT SUM(((vt0.c0) NOT NULL)) FROM t1, rt0, vt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT t1.c4, ((((rt0.c0)AND(0.6230521040637389)))OR(t1.c2)) COLLATE BINARY, CASE WHEN t1.c75 THEN rt0.c0 ELSE t1.c3 END COLLATE NOCASE FROM v0, t1, rt0, vt1, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0) NOTNULL)) FROM t1, rt0, v0 WHERE (rtreenode(((0.6429156386187861) IS FALSE), (NOT (x'')))); -- 0ms;
SELECT ALL ((((ABS(DISTINCT rt0.c0))OR(CAST(t1.c2 AS INTEGER))))AND((+ (t1.c2)))), TOTAL(MAX((NOT (-997491799)))), ((((v0.c0) NOTNULL)) NOT NULL) FROM vt1 WHERE (((CASE WHEN x'0fe5' THEN 0X46d5b857 WHEN '-860312048' THEN 0.25433109775027274 WHEN NULL THEN NULL END)<(('bl#)ImHUV' IN (x'')))));SELECT ALL vt0.c0 FROM rt0 WHERE (NULL) GROUP BY ((((((t1.c75)AND(t1.c3)))AND(x''))) NOT BETWEEN ((((t1.c3, v0.c0, vt1.c0)) BETWEEN ((rt0.c2, vt0.c0, '')) AND ((rt0.c1, rt0.c2, vt0.c0)))) AND (t1.c3)), ((((((((((t1.c3)OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))AND(t1.c3))) ISNULL), (~ (vt1.c0)) HAVING (~ (((((t1.c0)OR(t1.c75)))AND(t1.c0))));SELECT (NOT (((t1.c3)AND(t1.c75)))) FROM v0, vt1, t1 INDEXED BY i99 WHERE (TRIM((NOT ('-235186634')))); -- 0ms;
SELECT DISTINCT LAST_VALUE((- (rt0.c0)) COLLATE BINARY) OVER () FROM rt0, v0; -- 0ms;
SELECT ((SQLITE_COMPILEOPTION_GET(t1.c2))GLOB(t1.c4)), t1.c2, CAST(0.032747222747662064 AS NUMERIC), COUNT(*) OVER (), (((((((((~ (rt0.c0)))OR(rt0.c0 COLLATE RTRIM)))AND((((t1.c0))<=((t1.c2))))))OR(((t1.c4)*(t1.c4)))))AND(t1.c2 COLLATE RTRIM)) FROM vt1, t1, rt0, v0 WHERE ((~ ((('386372430')AND(51667626))))); -- 15ms;
SELECT DISTINCT json_remove(((x'96fd') BETWEEN (vt1.c0) AND (t1.c4)), COUNT(*)) FROM t1, rt0, vt1, v0, vt0;SELECT DISTINCT ((~ (vt0.c0)) IN ()) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY t1.c3 DESC), ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ('1869043723') AND (((vt1.c0) NOTNULL))), (NOT (((rt0.c2)<=(rt0.c2)))), (0.9852707800967829 IN ()), (((t1.c4)) BETWEEN ((vt0.c0)) AND ((9.2169014E8))) COLLATE NOCASE FROM rt0, v0, vt1 WHERE (((((((((((x'1fff')OR(0.4502768418363915)))AND('1506231958')))AND('746712560')))OR('-1706562637'))) NOT BETWEEN ('') AND (CASE WHEN x'5b16' THEN 0.4453233675660321 ELSE 0X72c50aa4 END)));SELECT ((((((t1.c0) NOT NULL))OR(((vt0.c0) NOT BETWEEN (t1.c3) AND (rt0.c1)))))AND(((('707336454', vt0.c0, t1.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, vt1.c0)) AND ((0.991982747588827, '9Y', t1.c2))))) FROM v0 WHERE (((CASE NULL  WHEN '1435546448' THEN '1017859316' ELSE NULL END)/(((NULL)GLOB(NULL)))));SELECT DISTINCT '-', ((0.6814206222847653)/(((t1.c4) BETWEEN (v0.c0) AND (t1.c75)))), (((- (x''))) NOT BETWEEN ((v0.c0 IN (t1.c3))) AND (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM v0, rt0, vt0, vt1, t1 GROUP BY CASE (t1.c2 IN ())  WHEN ((rt0.c1)>=(v0.c0)) THEN SQLITE_VERSION() WHEN ((((((((t1.c4)AND(vt1.c0)))OR(v0.c0)))AND(rt0.c1)))OR(t1.c3)) THEN (+ (rt0.c1)) WHEN CAST(t1.c2 AS INTEGER) THEN ((t1.c3)IS NOT(vt0.c0)) WHEN IFNULL(t1.c75, rt0.c0) THEN ((t1.c3)&(rt0.c2)) WHEN (t1.c2 IN ()) THEN CASE v0.c0  WHEN rt0.c2 THEN t1.c75 ELSE t1.c2 END ELSE ((t1.c2) BETWEEN (NULL) AND (t1.c2)) END; -- 36ms;
SELECT DISTINCT (('-9223372036854775808') BETWEEN (GROUP_CONCAT(rt0.c2)) AND (NULL)) FROM t1 WHERE ((((0.34327723004817556))!=(('1740789905'))) COLLATE BINARY);SELECT DISTINCT (~ (((t1.c3) NOT BETWEEN (rt0.c1) AND (t1.c2)))) FROM rt0, vt0, t1, vt1 WHERE (((json_remove(0.5940139137087674, ''))<(CAST(x'' AS INTEGER))));SELECT DISTINCT MAX(((t1.c3) BETWEEN (t1.c3) AND (rt0.c2))) FROM t1, v0, rt0, vt0, vt1 WHERE ((((((x'')AND('1023697963')))AND(x'f9f6')) IN ())); -- 0ms;
SELECT DISTINCT (NOT (CAST(NULL AS BLOB))), (t1.c75 COLLATE NOCASE IN ()), (rt0.c0 IN ()) FROM vt0, vt1 WHERE ((((x'938a')*('d')) IN ((('-1062937159') ISNULL)))); -- 0ms;
SELECT DISTINCT 0.015665505428020476 FROM vt0, t1 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c2)) BETWEEN (CAST(t1.c75 AS REAL)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0, t1, v0, vt0, vt1 WHERE ((((('OWC/]H_')>(0.37855774953917254))) NOT NULL)); -- 15ms;
SELECT DISTINCT CASE (- (t1.c3))  WHEN CASE WHEN rt0.c2 THEN t1.c3 END THEN t1.c0 END FROM t1, vt0 WHERE (CAST(CASE WHEN NULL THEN '-2359807' END AS TEXT));SELECT DISTINCT ((((CASE t1.c75  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)OR(((((t1.c75)AND(t1.c0)))OR(t1.c3)))))OR(((t1.c0)*(rt0.c2)))) FROM t1, vt0;SELECT ((((rt0.c1) NOT BETWEEN (t1.c0) AND (t1.c75)))||(((rt0.c2)<<(rt0.c2)))), (((t1.c3, t1.c2, t1.c0)) NOT BETWEEN (((+ (t1.c0)), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((t1.c75))), 0.7608060745726908)) AND ((((((v0.c0)OR(vt0.c0)))AND(t1.c3)), (rt0.c1 IN ()), (((t1.c75, rt0.c1, rt0.c1))>=((rt0.c0, rt0.c0, t1.c0)))))), 0.9828813753247875 FROM vt0, v0;SELECT DISTINCT CAST(t1.c0 AS INTEGER) FROM rt0 WHERE (CAST((((0X643e2b28, -1004402275, 0.17346203793709192)) NOT BETWEEN (('M%', 0.16602119293752793, -653955037)) AND (('906141711', 'BK', -1034726982))) AS NUMERIC));SELECT DISTINCT ((NULL)<<(t1.c2 COLLATE NOCASE)), MAX(0.19626856678819682 COLLATE NOCASE), x'' FROM v0, rt0, vt0;SELECT DISTINCT GROUP_CONCAT(((((t1.c4)AND(t1.c2)))AND(rt0.c2))) FROM vt0, v0 WHERE ((((((x'eb7d', 0.43661008283465663, NULL))>=((x'86b4', 0.21820181727512034, -200233327)))) NOT NULL));SELECT ALL ((((CAST(rt0.c1 AS TEXT))OR(AVG(rt0.c2))))OR(((rt0.c2)&(rt0.c1)))), CAST(((vt0.c0)||(t1.c75)) AS NUMERIC), AVG(((((((((t1.c2)AND(rt0.c2)))AND(t1.c4)))OR(t1.c2)))AND(t1.c0))) FROM rt0, vt0, t1, v0, vt1 WHERE (((('' COLLATE RTRIM))<(((('-1441811454')>=(x'3a4a')))))); -- 0ms;
SELECT LOWER(DISTINCT '1495748278') FROM rt0; -- 0ms;
SELECT DISTINCT ((((CASE t1.c3  WHEN rt0.c0 THEN t1.c2 ELSE t1.c3 END)OR(CAST('-1772854689' AS REAL))))OR(COUNT(t1.c4))) FROM t1, vt0 LIMIT -1560859282 OFFSET 628307818;SELECT DISTINCT ((((rt0.c0)-(vt1.c0))) NOTNULL), rt0.c0, ((MIN(rt0.c2))%(((t1.c2) NOT BETWEEN (t1.c75) AND (rt0.c0)))), ((((rt0.c0)LIKE(t1.c4))) BETWEEN (((rt0.c2)IS NOT(t1.c4))) AND (((rt0.c0) NOT NULL))), ((((x'')AND(MIN(t1.c2))))AND((((t1.c4)) NOT BETWEEN (('9|\nndꇮN')) AND ((t1.c3))))) FROM rt0, t1, v0 WHERE (((CAST(NULL AS BLOB))GLOB(((x'') NOT BETWEEN (-1.772854689E9) AND ('\a')))));SELECT 0.1894627858182849 FROM vt0, t1 INTERSECT SELECT DISTINCT (((t1.c4)) NOT BETWEEN ((((t1.c0) NOT NULL))) AND (((((t1.c3, t1.c0, rt0.c0))>=((rt0.c2, v0.c0, vt1.c0)))))) FROM vt1, v0, vt0;SELECT DISTINCT ((t1.c0)<<((rt0.c1 IN (vt0.c0)))) FROM v0, vt1 WHERE (TRIM(DISTINCT (('-592924679') BETWEEN (1303668761) AND (x''))));SELECT DISTINCT GROUP_CONCAT('xנWF') OVER ( ORDER BY CASE (((rt0.c0, t1.c75, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, t1.c4)) AND ((t1.c75, rt0.c1, 0xffffffffbb3c699f)))  WHEN (NOT (t1.c0)) THEN NULL END) FROM t1, rt0, vt1, vt0 WHERE ((~ ('-581886247')) COLLATE NOCASE); -- 2ms;
SELECT DISTINCT x'd131', rt0.c0, COUNT(*) FROM t1, vt0, vt1 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT LOWER((t1.c3 IN (rt0.c1, rt0.c2))) FROM vt1 WHERE (((((x'')>(NULL))) IS FALSE)) GROUP BY CAST((rt0.c0 IN (rt0.c0, t1.c3)) AS BLOB) HAVING CASE ((t1.c4) IS FALSE)  WHEN LIKE(v0.c0, rt0.c0, '0') THEN (((t1.c3))<((v0.c0))) END;SELECT (('382361277')&(v0.c0)) COLLATE BINARY FROM t1 INDEXED BY i99 WHERE (((((x'') NOTNULL))LIKE((((0.571181347404498))>((NULL))))));SELECT DISTINCT CASE WHEN v0.c0 THEN t1.c0 END COLLATE NOCASE FROM rt0, t1 INNER JOIN vt1 ON CASE WHEN t1.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t1.c2 ELSE vt1.c0 END COLLATE RTRIM INNER JOIN vt0 ON ((((t1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))IS(((t1.c2)IS NOT(rt0.c2)))) LEFT OUTER JOIN v0 ON (((rt0.c0 IN ())) BETWEEN (((v0.c0)=(t1.c2))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c2 THEN t1.c75 WHEN t1.c2 THEN t1.c3 END)) WHERE (((('-273874868')) BETWEEN ((NULL COLLATE NOCASE)) AND (((('&') BETWEEN (x'') AND ('504728746')))))); -- 1ms;
SELECT ALL (- (((t1.c4)<=(t1.c4)))) FROM vt0, t1, v0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB)) NOTNULL) FROM t1;SELECT DISTINCT (((((((0xa3549d7)AND(t1.c4)))OR(rt0.c0)), CAST(rt0.c2 AS NUMERIC), ((((t1.c0)AND(vt1.c0)))OR(0.2601329122277496)), x'', CAST(v0.c0 AS REAL)))>((CAST(rt0.c1 AS TEXT), v0.c0 COLLATE RTRIM, (t1.c2 IN ()), (('-1234738483')GLOB(rt0.c0)), (('')|('413978655'))))), ((((((((((((t1.c2 COLLATE NOCASE)AND((rt0.c1 IN ()))))OR(((t1.c4) IS FALSE))))OR(((rt0.c2)-('rdcyy\Z')))))OR(AVG(t1.c75))))AND(CASE WHEN t1.c75 THEN rt0.c2 ELSE t1.c75 END)))OR(CAST(t1.c3 AS BLOB))), QUOTE((((rt0.c0, vt1.c0, 0.9947845064602263)) NOT BETWEEN ((v0.c0, vt1.c0, v0.c0)) AND ((t1.c0, vt0.c0, vt1.c0)))) FROM v0 WHERE (CASE WHEN ((x'') NOTNULL) THEN CASE 'H庽ꇮ-o'  WHEN 0.6618272317746254 THEN NULL END WHEN CAST(0.1236566110488565 AS BLOB) THEN (((('')OR(1853269979)))OR(NULL)) WHEN CASE WHEN 0Xffffffffc6b75907 THEN '504728746' ELSE 0.4944136777368222 END THEN ((NULL) NOT BETWEEN (0.9441199509461022) AND (x'')) END) LIMIT 1244898169 OFFSET -1507559039;SELECT DISTINCT CAST((- (rt0.c2)) AS INTEGER) FROM vt1, v0;SELECT (((rt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) IN ()) FROM vt0, rt0, vt1, v0, t1 WHERE ((((('1853269979')) BETWEEN ((x'ec88')) AND ((x'b72d'))) IN ())) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 END)IS NOT(CASE WHEN t1.c4 THEN rt0.c0 ELSE v0.c0 END))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t1.c4, t1.c3, t1.c3)) BETWEEN ((CASE WHEN t1.c2 THEN rt0.c0 END, COUNT(t1.c4), ((((t1.c0)AND(t1.c4)))AND(rt0.c2)))) AND ((((((t1.c75)AND(rt0.c1)))OR(rt0.c2)), (((v0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c2))), NULL COLLATE RTRIM))) FROM rt0, vt1, vt0;SELECT ALL ((t1.c2)LIKE(t1.c2)) COLLATE RTRIM FROM vt0, vt1 ORDER BY CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c0)) AS INTEGER) DESC;SELECT NULLIF(LOWER(vt1.c0), ((rt0.c2)+(vt0.c0))), (((((t1.c3, t1.c4, t1.c75))<=((vt0.c0, v0.c0, rt0.c1))))/(((vt1.c0) IS TRUE))), 0.4453233675660321 FROM vt1, t1, v0;SELECT ALL NULLIF(DISTINCT ((t1.c4) ISNULL), ((((t1.c75)AND(vt1.c0)))OR(v0.c0))) FROM vt0 NOT INDEXED, v0, t1, rt0 WHERE ((NULL IN (0.725710068484935, x'')) COLLATE BINARY);SELECT DISTINCT CAST(((rt0.c1)IS(rt0.c0)) AS TEXT) FROM v0, vt0, t1, rt0; -- 0ms;
SELECT DISTINCT t1.c75 FROM rt0, v0, vt0 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY);SELECT ALL ((((((((vt1.c0)OR(t1.c75)))AND(rt0.c2)))AND(0.2672204599875636)))OR(t1.c2)) COLLATE NOCASE COLLATE RTRIM, TYPEOF(((t1.c4)||(t1.c3))), ((((t1.c4)|(rt0.c2))) ISNULL) FROM vt0, rt0 WHERE (((json_valid(0.601937930237073)) BETWEEN (((0.6077794330819418) NOTNULL)) AND (('-724252703' IN ())))) LIMIT -30018984 OFFSET -2134272688;SELECT ((((NULL) BETWEEN (rt0.c1) AND (v0.c0))) NOTNULL) FROM vt1 WHERE (((CAST('817907536' AS BLOB)) NOTNULL));SELECT DISTINCT SUM(((0.3493019409298326) NOTNULL)) FROM t1, vt1, vt0 WHERE ((((('345003995')IS(0xffffffff91dc93ab))) BETWEEN (LIKELY(0.5089003634009686)) AND ((NOT (x'a8d977e8'))))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(((rt0.c1) BETWEEN (NULL) AND (rt0.c0))) FROM vt0 WHERE ((((((('804786132')AND('1599464257')))AND(NULL))) NOT BETWEEN (CASE WHEN x'' THEN NULL END) AND ((NOT ('-1329275345')))));SELECT ALL (((vt0.c0)) NOT BETWEEN ((((-621719422) NOT NULL))) AND ((((((t1.c2)OR(rt0.c2)))AND(rt0.c1))))) FROM vt0 LIMIT 1853269979;