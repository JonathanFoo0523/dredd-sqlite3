-- Time: 2024/06/07 12:52:48
-- Database: database70
-- Database version: 3.40.0
-- seed value: 2080081970
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMP TABLE t0 (c0 REAL , c1 TEXT , c2 INTEGER ); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
VACUUM main; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.5482580507005215); -- 0ms;
ALTER TABLE t0 ADD COLUMN c57 INTEGER; -- 0ms;
INSERT OR ABORT INTO t0(c1, c2, c0) VALUES ('m', NULL, 35739143); -- 0ms;
INSERT OR IGNORE INTO t0(c57, c0, c1, c2) VALUES ('', '0.5482580507005215', NULL, ''), ('1219912209', NULL, NULL, '35739143'), (35739143, '-802664273', '', 0.020170296084362715); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES ('?RU耖', NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c2) VALUES (x''); -- 0ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c57) VALUES (0.5505701654479868, ''), (x'', x''), ('655785512', x''); -- 0ms;
CREATE TABLE t1 (c0 INT ); -- 0ms;
UPDATE t1 SET (c0, c0)=(0.13044598864730395, '1321933297'); -- 0ms;
UPDATE OR ABORT t1 SET (c0)=(501448726) WHERE (((t1.c0)) BETWEEN ((t1.c0 COLLATE NOCASE)) AND (((t1.c0 IN ())))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x''), (-42438282), (x''); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES (NULL); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (x''), (1089749053), (NULL); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE t1 SET c0='0.020170296084362715'; -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (0.9832001489237561); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, matchinfo=fts3, notindexed=c0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 378102147); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1089749053'), (NULL), (0.5482580507005215); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=883528623 unordered noskipscan'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=883528623,6');\n; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('-1345638156', x'96a5ec45'); -- 4ms;
REINDEX  t1; -- 0ms;
INSERT OR FAIL INTO t0(c2, c1, c57) VALUES (NULL, NULL, 0.14946588882769085); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0.623564150622975, 'di'), (NULL, x''), (NULL, NULL); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES ('1369439357', x''), (0.14946588882769085, 0.8895697163649967), (NULL, 'vG锈^E'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (x'2761', 0.020170296084362715), (-1482613313, 0.1670858460150103), (0.4045936408241332, x'49ef'); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i2 ON t1(c0 COLLATE BINARY DESC) WHERE (((c0 IN ()))/((NOT (0.85559705461409)))); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.45876810291042414); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(1.089749053E9, NULL) WHERE (~ (((vt0.c0)-(vt0.c1)))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-1345638156', 0X6c0b9223), ('1219912209', 0.18266335833123215), (0xffffffffedda32c4, NULL), ('_&~2f4V1 ', ''), (0.5083773404619087, 0Xffffffffb22145d0), ('92z3(ma', x'7f1db669'), (-89013352, x''), (0.5256983828178899, x''), (NULL, 0.1281670542103719); -- 0ms;
CREATE INDEX i70 ON t1(TRIM(RTRIM(c0)) COLLATE BINARY) WHERE (((CASE c0  WHEN c0 THEN c0 ELSE c0 END))!=(((0X5a625fcf IN (c0, c0))))); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((CAST(vt0.c1 AS REAL))*(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))) FROM vt0, t0 WHERE ((((((- (x'70bb')))OR((((0.8359904404941643)) BETWEEN ((0x1adc2a53)) AND ((NULL))))))AND('>h|M' COLLATE NOCASE))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1667448652); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31184'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 103108632); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1776878497); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -744297030);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.36370023472061486), (0.4119889678219164), (x''), (''), ('501448726'); -- 0ms;
UPDATE OR ABORT t0 SET (c1, c0)=(0Xbad65bd, 'UI'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2105690757);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA wal_autocheckpoint = 8182662323340223895; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t1 SET c0=0.7428084426281537, c0=8.83528623E8 WHERE ((CASE WHEN '' THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0.1670858460150103 THEN t1.c0 ELSE t1.c0 END)>>(((t1.c0)!=(t1.c0)))); -- 0ms;
REINDEX; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c57) VALUES ('501448726', NULL); -- 0ms;
INSERT OR ABORT INTO t1 VALUES (0.520806083490087); -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
PRAGMA temp.busy_timeout = 2652448543417732980; -- 0ms;
INSERT OR ABORT INTO t0(c1, c2, c57) VALUES (x'', ',*', NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0='1219912209'; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO t0(c2) VALUES (x'') ON CONFLICT DO NOTHING; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 0ms;
ANALYZE t1; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
VACUUM; -- 1ms;
UPDATE t0 SET (c2)=('VG锈^E') WHERE ((((CAST(t0.c2 AS TEXT))AND(t0.c2 COLLATE NOCASE)))OR((t0.c57 IN ()))); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT TOTAL((((rt0.c3))==((x'')))) FROM vt0 WHERE ((((-1437887852)) NOT BETWEEN ((((x'') BETWEEN (0.028492918817273227) AND (0x27829508)))) AND ((json_valid(NULL)))));SELECT DISTINCT ((((t0.c0) ISNULL)) IS TRUE), COUNT(((t0.c1)AND(t0.c1))) OVER (), x'' COLLATE NOCASE FROM t1, rt0;SELECT ((((rt0.c1) IS TRUE))LIKE((- (t0.c1)))) FROM t1, t0, rt0 WHERE (CAST(((']}8வ')&(x'4367b5be')) AS REAL)); -- 0ms;
SELECT DISTINCT RANK() OVER (), (~ (t0.c1)), '' COLLATE BINARY FROM t1, vt0, t0 WHERE (CAST(CASE x''  WHEN '1644078470' THEN '1089749053' ELSE NULL END AS NUMERIC)); -- 0ms;
SELECT ALL MAX(CAST(t0.c1 AS INTEGER)) FROM rt0, vt0, t1 GROUP BY json_array((rt0.c2 IN (t0.c57)), ((rt0.c1) NOT NULL));SELECT DISTINCT 0.7949177119692477 FROM t0, vt0 WHERE (((NOT (NULL)) IN (CAST(0.4799118332483666 AS REAL)))); -- 0ms;
SELECT DISTINCT SUM(((vt0.c1)>=(0.5640919544465188))), ((((rt0.c3)|('N~I韷'))) BETWEEN (((((((((((((((((rt0.c1)OR(rt0.c2)))AND(t0.c57)))AND(NULL)))AND(rt0.c1)))AND(t1.c0)))OR(t0.c1)))AND(rt0.c2)))OR(t0.c57))) AND (CAST(t1.c0 AS INTEGER))), 0X40f4403d FROM t1 WHERE (((((((((json_extract(x'', NULL))OR(x'' COLLATE NOCASE)))AND(((((x'c322')OR(0xfffffffff5cf5910)))AND(0.21850919923636214)))))AND(0.623564150622975 COLLATE BINARY)))OR(((x'0fc4983c')AND('Pm	夐n,'))))) LIMIT -984932877;SELECT CASE ((((t0.c2)AND(t0.c1)))OR(t0.c0))  WHEN ((vt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c1)) THEN t1.c0 ELSE rt0.c1 COLLATE BINARY END FROM t0, rt0;SELECT DISTINCT CAST(((t0.c2)<>(rt0.c2)) AS INTEGER) FROM t0, rt0 WHERE (CAST('-1110680033' AS BLOB) COLLATE BINARY); -- 0ms;
SELECT vt0.c1, ((vt0.c1 COLLATE BINARY)IS NOT(((rt0.c1) BETWEEN (t1.c0) AND (t1.c0)))), (+ (t0.c2 COLLATE NOCASE)) FROM vt0, t0;SELECT DISTINCT NTH_VALUE(LIKELY(((rt0.c3) NOTNULL)), ((t1.c0 COLLATE RTRIM) IS FALSE)) OVER (), AVG(t0.c57), (((t0.c57)GLOB(rt0.c3)) IN ()) FROM rt0, t0, t1 WHERE ((((('-1439759056')>(''))) NOT BETWEEN (((x'') ISNULL)) AND (CASE WHEN -275688829 THEN '-984932877' ELSE NULL END)));SELECT DISTINCT CASE WHEN (t0.c2 IN ()) THEN ((t0.c2) BETWEEN (rt0.c3) AND (vt0.c0)) END FROM t0, vt0, rt0 GROUP BY (('-1482613313') IS TRUE) HAVING (t0.c2 IN ((rt0.c1 IN ()))); -- 0ms;
SELECT DISTINCT (- (((((t0.c57)OR(t0.c0)))OR(t0.c1)))), SUM(AVG(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c3)))), SUM((t0.c0 IN ())) FROM t0, t1 WHERE (((((((x'f089')AND(x'')))AND(''))) NOT BETWEEN (((((x'')AND(NULL)))OR(NULL))) AND (((x'')<(NULL)))));SELECT (((((t0.c57))>=((t0.c0)))) NOT NULL), CASE ((t0.c1)*(t0.c2))  WHEN COUNT(*) THEN (t0.c2 IN ()) ELSE rt0.c4 END, t0.c57 FROM vt0, t1, rt0, t0 ORDER BY ((((t0.c57)-(t0.c0)))+(COALESCE(t0.c0, vt0.c1, t0.c2, rt0.c0))) ASC, NULL ASC  NULLS LAST, ((((((rt0.c1)==(rt0.c2)))AND(CAST(t0.c1 AS BLOB))))OR(((rt0.c4)<<(rt0.c2))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((t0.c1)AND(t0.c2))) BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 END) AND (((NULL) BETWEEN (t0.c1) AND (x'61e1d97c')))), COUNT(*) COLLATE RTRIM, CAST(((t0.c57) BETWEEN (rt0.c1) AND (0.1018005438651981)) AS NUMERIC) FROM t0, vt0, rt0, t1 WHERE ((((- ('')))!=((('1644078470') IS FALSE)))); -- 0ms;
SELECT json_insert(((((t0.c1)AND('k8')))AND(t1.c0)), CASE WHEN rt0.c4 THEN rt0.c4 END, (((t0.c57)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))), (('0.21850919923636214')AND(t0.c1)), ((((((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c4)))OR(vt0.c1))) FROM rt0, vt0, t1, t0 LIMIT 1122928198; -- 0ms;
SELECT DISTINCT (~ ((NOT (t1.c0)))), (((t0.c1)) BETWEEN (((t0.c2 IN ()))) AND (((t0.c0 IN ())))), (((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c1))) COLLATE RTRIM FROM vt0, t0 GROUP BY (((t0.c1 IN ()))<=(((rt0.c3)|(vt0.c0))));SELECT t0.c0 FROM rt0, t1, vt0 WHERE ((((((''))>=(('')))) IS TRUE));SELECT DISTINCT (((((t1.c0))<((vt0.c1)))) BETWEEN (CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c3 THEN vt0.c0 ELSE vt0.c1 END) AND (vt0.c1)) FROM vt0, rt0, t1 WHERE (((CASE WHEN '夫9jLeu蔭''' THEN '()' ELSE 0.5434404187051427 END) IS TRUE)) LIMIT -654309634;SELECT DISTINCT CAST((((t1.c0)) BETWEEN ((NULL)) AND ((rt0.c1))) AS NUMERIC) FROM t1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((0.2741548194774781) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>>('-744297030')), ((((((((rt0.c4 COLLATE BINARY)OR(ABS(rt0.c2))))AND((t1.c0 IN (x'932aa088')))))OR(COUNT(*))))AND((('1321933297')GLOB(vt0.c0)))), 0.6683544268883412, PERCENT_RANK() OVER (), NULL FROM t0, vt0, t1, rt0; -- 0ms;
SELECT NULL, MAX(((t0.c57)>=(t1.c0)) COLLATE NOCASE), ((((t0.c1) NOT NULL)) NOT BETWEEN (((t0.c1) BETWEEN (vt0.c1) AND (t0.c2))) AND ((~ (rt0.c0)))), (NOT ((('0.6683544268883412')>(t0.c2)))), UPPER(DISTINCT rt0.c0 COLLATE NOCASE) FROM vt0, t0 WHERE (x'');SELECT ALL (- (((((t1.c0)AND('?ru耖')))AND(rt0.c1)))) FROM t1, rt0 WHERE ((((0.24406192886511058) NOT BETWEEN (x'a618') AND ('211158845')) IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c4)IS NOT(((rt0.c1)IS(t0.c2)))), CASE CASE rt0.c3  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN ((vt0.c1) IS FALSE) THEN ((rt0.c3) BETWEEN (NULL) AND (rt0.c1)) ELSE ((t0.c57) IS FALSE) END, (((((rt0.c3))<((t0.c0)))) BETWEEN (MAX(vt0.c0)) AND ((((t1.c0, vt0.c1, rt0.c2))>((t0.c1, vt0.c1, rt0.c3))))) FROM t1, rt0 WHERE (((((((0.2134655755635788)*(0.21850919923636214)))OR(((1321933297) ISNULL))))OR('8' COLLATE NOCASE)));SELECT ALL TRIM(DISTINCT t0.c2, rt0.c2) COLLATE NOCASE FROM t1, rt0, vt0 GROUP BY (((((rt0.c2, t0.c0, rt0.c3))!=((rt0.c4, t0.c0, t0.c0)))) NOT BETWEEN ((((('')OR(vt0.c0)))AND(rt0.c4))) AND ((rt0.c1 IN ()))), ((((((rt0.c3) IS FALSE))OR(CAST(rt0.c2 AS REAL))))OR(0.045098385978808)), (((rt0.c1 IN ())) NOTNULL);SELECT (- (rt0.c4)) FROM t0, rt0, vt0, t1; -- 0ms;
SELECT COUNT(rt0.c2) FROM vt0, rt0, t1, t0; -- 1ms;
SELECT ALL ((CASE t0.c57  WHEN vt0.c0 THEN rt0.c4 ELSE t0.c57 END)IS(((rt0.c3)IS(rt0.c3)))) FROM t0;SELECT (((((t0.c1)>>(rt0.c3))))==((rt0.c3 COLLATE RTRIM))) FROM rt0, t1, vt0;SELECT ALL ((((t0.c57) NOT BETWEEN (rt0.c2) AND (t0.c0))) IS FALSE) FROM rt0;SELECT CASE WHEN GROUP_CONCAT(t1.c0) THEN (((rt0.c0, t0.c57, vt0.c0))>=((rt0.c0, t0.c2, t1.c0))) END, ((CAST(t0.c57 AS TEXT)) BETWEEN (((((NULL)AND(rt0.c3)))OR(NULL))) AND (CAST(rt0.c0 AS TEXT))), (((((((((((t0.c2)AND(rt0.c1)))OR(t0.c1)))AND(rt0.c4)))OR(t0.c2))))<((SUM(0X1672693f)))) FROM rt0, t0;SELECT DISTINCT (((((t0.c57)OR(rt0.c4)))AND(vt0.c1)) IN ((+ (t0.c0)), ((((rt0.c0)OR(t0.c2)))AND(rt0.c0)))) FROM vt0, t0, t1;SELECT DISTINCT ((AVG(rt0.c3))<(CAST(t0.c0 AS NUMERIC))) FROM vt0, t1 WHERE (HEX((0.9891998058329882 IN (NULL, NULL, NULL))));SELECT DISTINCT CAST((t1.c0 IN (t0.c57)) AS REAL), rt0.c0 COLLATE NOCASE, ((((t0.c2)OR(CASE '-1439759056'  WHEN vt0.c1 THEN '29J ' END)))AND(TOTAL_CHANGES())), CASE WHEN (- (t1.c0)) THEN (((rt0.c1))!=((t0.c0))) WHEN ((t0.c0) ISNULL) THEN 0.7428084426281537 WHEN ((t0.c0)/(t0.c2)) THEN CAST(vt0.c1 AS TEXT) END, (((((vt0.c0))<>((vt0.c1)))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c1))) AND (TOTAL(t1.c0))) FROM rt0, t1 WHERE (((CASE WHEN 0.18688815301943473 THEN NULL WHEN '1117147241' THEN x'' WHEN 961290586 THEN NULL ELSE x'621d' END) NOT NULL));SELECT ALL x'', LEAD(((((((t0.c1)OR(t1.c0)))OR(rt0.c4))) NOT NULL), NULLIF(CASE t1.c0  WHEN t0.c2 THEN t0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END, CAST(t0.c1 AS INTEGER)), CAST(0.4355087801620747 AS INTEGER)) OVER (), ((rt0.c0) BETWEEN ((((rt0.c3, rt0.c0, rt0.c2))>=((rt0.c2, t1.c0, rt0.c3)))) AND (((t0.c0) NOTNULL))) FROM t0, t1, vt0, rt0; -- 0ms;
SELECT CHANGES() FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT rt0.c1 COLLATE NOCASE) FROM rt0 WHERE ((((((0.8359904404941643) NOT NULL)))>=((('N]' IN ()))))); -- 1ms;
SELECT DISTINCT ((((rt0.c2, rt0.c1, 0.1670858460150103))<>((t1.c0, '35739143', rt0.c3))) IN ()) FROM t1, vt0; -- 0ms;
SELECT ALL ((t0.c2) IS TRUE), ((x'' COLLATE BINARY)AND((vt0.c1 IN ()))), ((((vt0.c1)>=(rt0.c1))) NOT NULL) FROM t1, vt0 LEFT OUTER JOIN t0 ON (((((rt0.c0) IS TRUE), CAST(rt0.c4 AS REAL), CASE t0.c2  WHEN t0.c57 THEN vt0.c1 END, vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN rt0.c2 THEN t0.c2 END))<((rt0.c3, COALESCE(DISTINCT t0.c2, t0.c0), ((((((((t0.c1)OR('')))AND(rt0.c0)))OR(t0.c0)))AND(rt0.c1)), ((vt0.c1)>>(t1.c0)), ((((t0.c57)OR(t0.c1)))AND(rt0.c0))))) FULL OUTER JOIN rt0 ON ((((t0.c0)<(rt0.c0))) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c0) BETWEEN (vt0.c1) AND (rt0.c2))));SELECT DISTINCT t1.c0 FROM vt0;SELECT ALL CAST((rt0.c2 IN ()) AS NUMERIC), ((t0.c1 COLLATE BINARY) BETWEEN (COUNT(rt0.c3)) AND (t0.c57)), TYPEOF(DISTINCT 0.1281670542103719) FROM vt0, t1, t0;SELECT ALL LAST_VALUE(SUBSTR(COALESCE(DISTINCT t0.c0, t0.c1, t0.c0, t0.c2), t0.c2 COLLATE NOCASE)) OVER (), ((((rt0.c4) ISNULL)) BETWEEN (rt0.c4 COLLATE BINARY) AND ((~ (t0.c0)))), t0.c0 FROM t0;SELECT DISTINCT CAST(rt0.c1 AS BLOB), (((((((rt0.c3)OR(rt0.c0)))OR(rt0.c3))))<(((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2)))))), DENSE_RANK() OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM t0;SELECT ((((t0.c0)<=(t0.c1)))<<(SUM(t0.c57))) FROM rt0, t0, vt0, t1 WHERE (UPPER(DISTINCT -4.2438282E7)); -- 0ms;
SELECT DISTINCT (((((rt0.c2)AND(t0.c2)))AND(rt0.c2)) IN ()) FROM t1, t0 WHERE (CASE WHEN ((((NULL)AND(-1902869632)))AND('Pj&[v*L')) THEN (((('-1902869632')OR(0.8941435337262152)))OR(x'')) ELSE ((((((((NULL)AND(NULL)))AND(x'')))AND(x'')))OR(x'')) END); -- 0ms;
SELECT (((t0.c2)<=(vt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT (vt0.c0 IN ()) FROM vt0 INNER JOIN t0 ON ((((rt0.c2)LIKE(rt0.c4))) BETWEEN ((- (t0.c57))) AND (LIKE(rt0.c3, rt0.c0, 'ᗹ')));SELECT DISTINCT TOTAL_CHANGES() FROM t0, rt0, t1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c0) NOT NULL)))<((CAST(t1.c0 AS TEXT)))) FROM rt0, vt0, t1 WHERE (((CAST(0.08754174307696383 AS REAL))>(CAST(0.19957515196027953 AS TEXT)))); -- 0ms;
SELECT ALL ((((((x'')OR(t0.c1)))OR(vt0.c0)))IS NOT(vt0.c0)), (- (t1.c0)), 0.5453282834343203 FROM vt0, t1, rt0, t0 WHERE (((((QUOTE(NULL))AND(((0.2065916123582311)=(0xffffffffb462a087)))))AND(((NULL)OR(NULL))))); -- 0ms;
SELECT DISTINCT t0.c1, SUM(((rt0.c0)<(t0.c1))), t0.c0 FROM t1, vt0 WHERE (CASE WHEN (((x''))>(('EE*>|D4k'))) THEN ((0.6488360294895897)<=(1.551701497E9)) WHEN CASE x''  WHEN '' THEN x'5ab4' ELSE '-1548218278' END THEN NULL COLLATE RTRIM WHEN ((NULL) ISNULL) THEN x'' ELSE 0xffffffff8fd2de3f COLLATE BINARY END);SELECT ALL (((vt0.c1)OR(rt0.c3)) IN ()), ((CASE vt0.c1  WHEN t1.c0 THEN rt0.c4 WHEN 0.04857707407548151 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) BETWEEN ((((t0.c0))<=((vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c0)))), '-846998742' FROM t1, rt0 WHERE ((~ (((((((((-306474961)AND(NULL)))OR('ᤷL*<D')))OR(-273382099)))AND('!R')))));SELECT DISTINCT CAST((((t0.c1, x'', rt0.c3)) BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((rt0.c4, '', t0.c2))) AS REAL) FROM vt0 WHERE (((((((((CASE WHEN '-766938809' THEN NULL WHEN NULL THEN '6\r' WHEN '*வa[' THEN NULL ELSE '50Lv*L' END)AND((NOT ('7?')))))OR(((1.64407847E9) BETWEEN (NULL) AND (0xffffffffa7a11dbf)))))AND('179504821' COLLATE RTRIM)))OR((((NULL))<>(('obn9-D'))))));SELECT DISTINCT SUM(CASE WHEN t0.c1 THEN t0.c57 ELSE rt0.c1 END) FROM t0, rt0, vt0 WHERE (((((((((((NULL)AND('-984932877')))AND(x'')))AND('-1175605394')))OR('57135323'))) NOT NULL)) GROUP BY (~ ((((t0.c57))>((t1.c0)))));SELECT ALL ((CASE WHEN t0.c57 THEN vt0.c0 ELSE t1.c0 END) NOT BETWEEN ((t0.c0 IN ())) AND (NULLIF(DISTINCT rt0.c3, t0.c57))), (('Kd>%v')IS(t0.c0 COLLATE BINARY)), ((CAST(rt0.c3 AS NUMERIC))==(((rt0.c0)+(rt0.c2)))), (~ (((t1.c0)LIKE(vt0.c0)))), ((((t0.c57) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOT BETWEEN (((vt0.c1) ISNULL)) AND (((((0.9832001489237561)OR(rt0.c2)))OR(t0.c0)))) FROM t0 RIGHT OUTER JOIN t1 ON vt0.c1 ORDER BY CAST(((rt0.c4)*(t0.c0)) AS TEXT) ASC  NULLS LAST, CAST(json_quote(rt0.c0) AS NUMERIC) DESC  NULLS FIRST, (((CAST(0xffffffffa4c810b6 AS REAL)))=(((NOT (NULL)))))  NULLS FIRST;SELECT DISTINCT DENSE_RANK() OVER () FROM t1 ORDER BY TOTAL_CHANGES()  NULLS FIRST, '暩வ', (((vt0.c1) IS TRUE) IN ()) DESC  NULLS FIRST, 0.5453282834343203 DESC; -- 0ms;
SELECT DISTINCT (((((t0.c2, '', rt0.c1))==((t0.c0, rt0.c0, rt0.c3))))<(t0.c57 COLLATE RTRIM)) FROM vt0, t1, t0, rt0; -- 0ms;
SELECT DISTINCT ((((t0.c1)<=(rt0.c2)))!=(((rt0.c4) NOTNULL))) FROM vt0, t0, t1 WHERE (((- (x'')) IN ()));SELECT COUNT(*) OVER () FROM t0, t1, rt0, vt0; -- 0ms;
SELECT ((MAX(t1.c0, rt0.c0))>(rt0.c3 COLLATE BINARY)), ((t0.c1)GLOB(t1.c0)) COLLATE RTRIM, (NOT ((('-1548218278') ISNULL))) FROM t0, rt0, vt0;SELECT DISTINCT ((CAST(rt0.c3 AS NUMERIC))LIKE(((t1.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))), rt0.c4, ((((t0.c2)) NOT BETWEEN ((rt0.c4)) AND ((t1.c0))) IN ()) FROM rt0, vt0, t0 WHERE (((((((x'')&('')))AND((- (NULL)))))AND((('')*('Fz!')))));SELECT ((((CASE t0.c2  WHEN vt0.c0 THEN 0.021995362386550088 END)AND(JULIANDAY(t0.c57, vt0.c0, t0.c57, t1.c0, rt0.c1))))OR(vt0.c1)) FROM t0, t1, rt0, vt0 WHERE (((('T_j' IN ()))>=((('nH''嘇''[韊>') NOT BETWEEN ('녜') AND (0.4480662955310827))))); -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN ((t0.c1)) AND ((((t0.c2)IS NOT(vt0.c1))))) FROM rt0, t0, vt0 WHERE ((('-1482613313' COLLATE BINARY) BETWEEN (LIKELY(x'8afe')) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((vt0.c1) IS TRUE)) NOT NULL) FROM t1, vt0, rt0, t0 WHERE (((((((0.5070485716303484)AND(x'')))OR(0.5882660624250649)))LIKE(0.5453282834343203 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)) IN ()), CASE WHEN t1.c0 THEN CASE WHEN rt0.c4 THEN rt0.c1 WHEN t0.c1 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c3 END ELSE t1.c0 END, (((t1.c0 IN ())) NOT NULL) FROM t0, rt0, t1, vt0 WHERE (((CASE WHEN NULL THEN '' WHEN x'' THEN NULL WHEN 0.5505701654479868 THEN x'' ELSE ' \n' END)/(CASE WHEN NULL THEN 0.04857707407548151 ELSE '-1148217308' END))); -- 0ms;
SELECT ALL (GROUP_CONCAT(vt0.c1) IN ()) FROM vt0, t1 WHERE ((((NULL, 0.4119889678219164, 0X2215607)) BETWEEN ((CAST(NULL AS BLOB), CASE NULL  WHEN x'' THEN NULL ELSE NULL END, (('-2113332363')/(0.5697413818333414)))) AND ((SQLITE_COMPILEOPTION_GET(0.2737692246568888), ((0.4212524531770174) NOT NULL), NULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOTNULL) IN ()), (~ (((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c0)))), CAST(highlight(rt0.c4, rt0.c0, t0.c2, t0.c57) AS TEXT) FROM t1 WHERE (((((NULL) BETWEEN ('Rf') AND (x'')))IS(0.8340035539675911)));SELECT ((((t0.c2) NOT BETWEEN (rt0.c4) AND (t0.c0))) NOT BETWEEN ((~ (vt0.c1))) AND (((((rt0.c2)AND(rt0.c4)))AND(t1.c0)))), '-1889881764', NULL FROM t1 WHERE (LOWER(DISTINCT UPPER(DISTINCT '')));SELECT (((vt0.c0)) BETWEEN ((((t0.c1)OR(vt0.c1)))) AND ((NULL))) FROM vt0 ORDER BY TYPEOF(DISTINCT rt0.c3) COLLATE BINARY  NULLS FIRST LIMIT 956569911;SELECT DISTINCT (NOT ((vt0.c1 IN (t0.c1)))) FROM t1, rt0, t0, vt0 WHERE ((((((('-250148638')+(0.8218615888956244)))OR(0X75b42a5)))OR(-1.902869632E9 COLLATE RTRIM))); -- 0ms;
SELECT MAX(CASE WHEN rt0.c0 THEN vt0.c0 END) FROM t1, rt0, vt0; -- 2ms;
SELECT ALL (((t0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((rt0.c1 COLLATE RTRIM))), MAX(x''), (((-1.70960624E8))!=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND (('581478370')))))) FROM t1 WHERE (CASE WHEN (NULL IN ()) THEN (('635976208')GLOB('9223372036854775807')) ELSE (((-1, -1.110680033E9, 'Fh'))<=((x'', NULL, x''))) END) ORDER BY rtreenode(CASE rt0.c2  WHEN t1.c0 THEN t0.c57 WHEN t0.c2 THEN rt0.c3 WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END, ((rt0.c1) NOTNULL))  NULLS LAST, t0.c1  NULLS FIRST;SELECT DISTINCT ((COUNT(t1.c0))LIKE(COUNT(t1.c0))) FROM t1, rt0, vt0 NATURAL JOIN t0 WHERE (((NOT (x'')) IN ())); -- 0ms;
SELECT ALL CAST(COUNT(*) AS BLOB), ((((((rt0.c4)OR(vt0.c1)))OR(t0.c1))) BETWEEN (((((((((rt0.c3)AND(vt0.c0)))OR(t0.c57)))AND(rt0.c4)))OR(NULL))) AND (((((((((((((t0.c57)AND(t1.c0)))AND('-1699889994')))OR(rt0.c0)))AND(x'')))AND(vt0.c1)))OR(t1.c0)))), COUNT(CASE WHEN vt0.c1 THEN '170192443' ELSE rt0.c3 END) OVER () FROM rt0, t1, t0 ORDER BY ((vt0.c1) IS FALSE)  NULLS LAST, ((((((t0.c2)OR(t0.c0)))AND(rt0.c3))) IS FALSE) DESC  NULLS FIRST;SELECT HEX(CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END), CAST(CASE rt0.c2  WHEN rt0.c4 THEN t0.c57 WHEN vt0.c0 THEN rt0.c3 WHEN t0.c0 THEN 0.9635862513012866 END AS NUMERIC), LIKELIHOOD(DISTINCT rt0.c1 COLLATE BINARY, 0.2340583192550756), CAST(((rt0.c0) NOT NULL) AS REAL), NULL FROM t0 WHERE (((CAST('-915711701' AS BLOB))AND((('aJ') NOT BETWEEN (NULL) AND ('WxV4')))));SELECT DISTINCT TOTAL(((rt0.c0) IS FALSE)) COLLATE NOCASE FROM t1, t0, rt0 LIMIT -1097928534; -- 0ms;
SELECT DISTINCT SUM(CASE t0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c57 THEN t0.c0 END) OVER ( ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((NOT (0x4ecb19f1))) AND ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((vt0.c1)))))  NULLS LAST, (((t0.c57)) BETWEEN (((NOT (t0.c1)))) AND ((vt0.c0))) DESC  NULLS FIRST) FROM t1, rt0, vt0;SELECT DISTINCT (- (vt0.c1)) FROM t1, t0, vt0, rt0; -- 0ms;
SELECT DISTINCT TOTAL((rt0.c1 IN ())) OVER () FROM t0, vt0, t1, rt0 ORDER BY ((((((((COALESCE(rt0.c2, t0.c2))AND(((((t1.c0)AND(rt0.c1)))AND(vt0.c1)))))OR(CASE t0.c1  WHEN t0.c57 THEN t0.c0 END)))OR((rt0.c2 IN ()))))AND(CASE WHEN NULL THEN t0.c57 WHEN t0.c0 THEN vt0.c1 WHEN t1.c0 THEN t0.c57 ELSE rt0.c4 END)), 'W\n嬔OH	'; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT CAST(rt0.c4 AS REAL)) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT 0.4480662955310827), (('-534881516') IS FALSE), CAST(((vt0.c1)%(vt0.c0)) AS NUMERIC) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>>(rt0.c2)))GLOB(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) FROM rt0, vt0, t1, t0; -- 0ms;
SELECT ((((((rt0.c3) BETWEEN (vt0.c0) AND (t1.c0)))AND(UNLIKELY(vt0.c1))))AND(((t0.c0) NOT NULL))) FROM t0, vt0;SELECT MAX((((rt0.c1)) BETWEEN ((t0.c57)) AND ((t0.c2)))), (PRINTF(t0.c1) IN ()), (((t0.c57)) NOT BETWEEN ((((rt0.c3)LIKE(vt0.c0)))) AND ((((((t1.c0)OR(0xffffffffa635c1a6)))AND(vt0.c0))))) FROM rt0, t1, t0 WHERE (CAST(CAST(0.9188187835848213 AS INTEGER) AS INTEGER));SELECT DISTINCT NTILE(CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c3 IN ()) END) OVER () FROM t1, t0, rt0; -- 0ms;
SELECT ALL ((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END)OR(((((((((t0.c1)AND(NULL)))OR(t0.c1)))OR(t0.c57)))AND(0x6dd60bb5)))))AND(((t0.c1)IS NOT(t0.c2)))) FROM rt0 WHERE (((((0.9038695130736296)&(x'')))<=((('') NOT BETWEEN (0.9941061026033036) AND (x'')))));SELECT DISTINCT FIRST_VALUE(((('-1811710933')>=(t0.c0)) IN ((NOT (rt0.c3)), ((NULL)IS(t0.c0))))) OVER () FROM t0, vt0, rt0 WHERE (NULL) GROUP BY ((CASE WHEN rt0.c4 THEN t1.c0 END)GLOB(rt0.c2));SELECT DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 ELSE t0.c57 END COLLATE BINARY FROM t0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN ((-1.268604793E9)) AND (('.VQg撝m'))) THEN (~ ('-654309634')) END);SELECT (rt0.c1 COLLATE RTRIM IN (rt0.c1, CASE WHEN rt0.c0 THEN rt0.c3 END)) FROM vt0;SELECT ALL SQLITE_VERSION() FROM vt0, t0, t1, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)>=(rt0.c2)) IN ()), (((rt0.c2)GLOB(t1.c0)) IN ()), ((((((rt0.c3)<<(t0.c1)))AND(((((vt0.c0)OR(t0.c1)))AND(t0.c1)))))OR((((rt0.c0))<>((rt0.c2))))) FROM rt0, vt0;SELECT DISTINCT COUNT((((rt0.c3))!=((vt0.c0)))) OVER ( ROWS BETWEEN ((((CAST(rt0.c3 AS REAL))AND((NOT (vt0.c0)))))OR((((t1.c0))<=((rt0.c2))))) FOLLOWING AND (- (vt0.c1 COLLATE BINARY)) PRECEDING EXCLUDE TIES), ((vt0.c1) NOT NULL), TOTAL(x'') FILTER(WHERE (((NOT (vt0.c0))) BETWEEN (CAST(rt0.c0 AS REAL)) AND (LIKELY(DISTINCT rt0.c0)))) OVER () FROM t1, rt0, t0;SELECT ((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))) IN ()), CASE SUM(t0.c0)  WHEN ((((t0.c1)AND('')))OR(vt0.c1)) THEN LTRIM(t1.c0) WHEN t0.c1 THEN ((t0.c57)<(vt0.c0)) WHEN ((((((((((((t0.c0)AND(rt0.c0)))OR(t0.c0)))OR(0.9806496899295121)))AND(vt0.c1)))AND(t0.c57)))OR(t0.c0)) THEN (((rt0.c0, t0.c2, rt0.c0)) BETWEEN ((t0.c57, t0.c57, rt0.c4)) AND ((t0.c2, rt0.c0, t0.c0))) ELSE UNLIKELY(t0.c0) END, (((t0.c2 IN ())) IS FALSE) FROM vt0, t1, t0 WHERE (NULL);SELECT DISTINCT MAX(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c1 THEN rt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN vt0.c1 ELSE NULL END) FROM t0, t1 WHERE (NULL);SELECT DISTINCT ((CASE t1.c0  WHEN rt0.c4 THEN rt0.c4 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN t0.c1 THEN t0.c1 WHEN rt0.c4 THEN t0.c2 ELSE t1.c0 END)/((((t0.c0, t1.c0, t0.c57)) NOT BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((0xfffffffffffb34a5, t0.c0, rt0.c1))))), ((CAST(x'' AS TEXT)) IS TRUE), (((NOT (vt0.c0))) IS TRUE) FROM vt0, t1 WHERE ('d') GROUP BY x'' HAVING ((((1.551701497E9)AND(((((((((t0.c2)AND(t0.c0)))AND(t0.c1)))AND(t0.c57)))AND(rt0.c2)))))OR(CAST(t1.c0 AS NUMERIC)));SELECT ALL (((((0Xffffffffe3f6cabe)<=(rt0.c1)), ((rt0.c4)<(vt0.c0)), ((vt0.c0)=(1.089749053E9))))<((CAST(vt0.c1 AS REAL), MAX(rt0.c1), COUNT(rt0.c2)))) FROM rt0;SELECT DISTINCT AVG('1062129310'), TOTAL(SUM(((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4)))), (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) IN (MIN(rt0.c3), load_extension(vt0.c1))), (((((t0.c57)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))) BETWEEN (t0.c1) AND ((NOT (rt0.c2)))), 0.3719304752791479 COLLATE BINARY FROM t1, t0 WHERE ((((((((((NULL IN ('')))OR((NOT (x'')))))OR(((NULL)%(x'')))))OR((((0.020170296084362715)) NOT BETWEEN (('ea* Zy')) AND ((0.7058213015607988))))))AND(((0.14862742975695498)|(1.95913149E8)))));SELECT (vt0.c1 COLLATE NOCASE IN ()) FROM vt0, t1, rt0, t0 WHERE (MAX((((x'', NULL, 0.4045936408241332))!=((NULL, x'', ''))), ABS(DISTINCT NULL))); -- 0ms;
SELECT DISTINCT (((((t0.c57 IN ()))AND((t0.c0 IN ()))))AND((rt0.c1 IN ()))), COUNT(*) OVER (), NULL FROM vt0, t1, t0, rt0 WHERE (((CAST('暩வ' AS BLOB)) NOT NULL)); -- 0ms;
SELECT DISTINCT '376596799' FROM t0 WHERE (CAST(CASE WHEN -1.811710933E9 THEN -1.439759056E9 END AS INTEGER)); -- 0ms;
SELECT DISTINCT NULL FROM vt0 CROSS JOIN t0 ON (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c1)))) ISNULL) LEFT OUTER JOIN t1 ON CASE CASE vt0.c1  WHEN rt0.c4 THEN vt0.c0 ELSE t0.c57 END  WHEN vt0.c0 COLLATE NOCASE THEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c2)) ELSE CAST(t1.c0 AS TEXT) END WHERE (TOTAL_CHANGES());SELECT ALL (- (((t0.c2)AND(rt0.c1)))) FROM t0, t1;SELECT 0.0774530381696229 FROM t0, rt0, vt0; -- 0ms;
SELECT ALL ((rt0.c3) ISNULL) COLLATE NOCASE FROM vt0, t0, t1;SELECT ALL ((SUM(rt0.c4)) IS TRUE) FROM t1;SELECT ALL CUME_DIST() OVER () FROM t0, vt0 WHERE (((CAST(x'' AS BLOB)) BETWEEN (TYPEOF(DISTINCT x'a0f2')) AND (TOTAL_CHANGES()))) ORDER BY rt0.c0 DESC;SELECT ALL '' COLLATE NOCASE FROM vt0, t1 LIMIT -1482613313 UNION SELECT DISTINCT COUNT(((vt0.c1) NOTNULL)) OVER ( ORDER BY CAST(x'' AS TEXT)  NULLS FIRST, ((((t0.c0)<<(t1.c0)))=(((rt0.c0)<>(rt0.c1)))) DESC, vt0.c1 ASC RANGE  CURRENT ROW) FROM t0, t1, vt0 GROUP BY CAST(((((((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c1)))AND(t0.c0)))OR(NULL)))AND(t1.c0)) AS TEXT);SELECT ALL json_remove(vt0.c1 COLLATE BINARY, t0.c57) FROM vt0, t0 WHERE ((((-744297030) NOT BETWEEN (x'6b61') AND ('0.0774530381696229')) IN ())); -- 0ms;
SELECT (rt0.c0 IN (rt0.c4)) COLLATE NOCASE FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c4) AND ('-1306442288')))*(COUNT(0.5428601601413507))) FROM t1, t0, rt0, vt0; -- 0ms;
SELECT DISTINCT '-1491578855', (NOT (((t0.c2) BETWEEN (rt0.c0) AND (t1.c0)))), ((((((t0.c1) IS FALSE))AND(((t0.c57)<>(rt0.c0)))))AND(rt0.c4)), ((vt0.c0)/(CAST(t0.c1 AS BLOB))), (- ((vt0.c1 IN ()))) FROM t1, rt0, t0, vt0 LIMIT -119981182 EXCEPT SELECT DISTINCT ((NULL)>(SQLITE_COMPILEOPTION_USED(t0.c0))), ((((((((((((rt0.c0)AND(t0.c0)))AND(t0.c0)))OR(vt0.c1)))AND(t1.c0)))OR(rt0.c4 COLLATE BINARY)))AND(((vt0.c1) NOT BETWEEN (t0.c57) AND (vt0.c0)))), TOTAL('-1314863536'), ((((t0.c2 IN ())))=((ABS(DISTINCT rt0.c4)))), ((((rt0.c0) NOTNULL))|(AVG(t0.c0))) FROM rt0, t0, vt0 WHERE (0.4045936408241332 COLLATE RTRIM);SELECT GROUP_CONCAT(CASE vt0.c1  WHEN t0.c0 THEN t1.c0 ELSE t0.c1 END) COLLATE NOCASE FROM t0, vt0 WHERE (((((((((((NULL)OR(x'9e56aecb')))OR(x'')))OR(0Xffffffffd8475e06)))AND(2011431605))) NOT NULL)) INTERSECT SELECT DISTINCT ((((0.30336794855530336))>((t0.c1))) IN ()) FROM rt0;SELECT (~ (t0.c0)) COLLATE RTRIM FROM rt0, t1, t0, vt0 LIMIT -1345638156 OFFSET -1491578855; -- 0ms;
SELECT ALL TRIM(DISTINCT LIKELY(DISTINCT rt0.c2), (((vt0.c1, rt0.c2, t0.c0)) BETWEEN ((rt0.c1, t0.c57, vt0.c0)) AND ((rt0.c1, t1.c0, vt0.c1)))), ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN 0.5685881982019976 THEN t0.c0 END)AND(((rt0.c2)<<(rt0.c1)))), NULL, (((t1.c0)<(rt0.c4)) IN ()), CAST(CASE x''  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN t0.c2 WHEN t1.c0 THEN vt0.c0 ELSE rt0.c3 END AS BLOB) FROM rt0, vt0, t0 WHERE ((('')IS((('/䞽9-ylk|')>(NULL)))));SELECT ALL ((rt0.c1 COLLATE RTRIM) IS TRUE) FROM t0;SELECT DISTINCT vt0.c1 FROM t0, t1, vt0 ORDER BY (((t0.c57)%(rt0.c0)) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((t0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c3)))OR(STRFTIME(rt0.c3, t1.c0, rt0.c1))))AND((((t0.c2))<=((vt0.c0))))) FROM vt0;SELECT ALL ((((rt0.c0 COLLATE RTRIM)AND(((rt0.c2) BETWEEN (t0.c2) AND (rt0.c3)))))OR((rt0.c1 IN ()))) FROM t0, t1, vt0 WHERE (((+ (NULL)) IN (((x'') NOT NULL))));SELECT DISTINCT LIKELY(rt0.c2), ((vt0.c1)AND(vt0.c0)) COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (t0.c0) AND (t0.c2)) COLLATE NOCASE FROM rt0, t0 ORDER BY rt0.c2 ASC;SELECT DISTINCT (vt0.c1 COLLATE BINARY IN (((t1.c0) NOTNULL), (((vt0.c1))<=((NULL))))) FROM rt0, t1 CROSS JOIN vt0 ON ((((t0.c1)<(rt0.c3))) NOT BETWEEN (((rt0.c4)LIKE(vt0.c0))) AND (((rt0.c4) IS TRUE)));SELECT DISTINCT ('-2068021807' IN (TRIM(rt0.c3, rt0.c4))) FROM t1 WHERE ((((+ (x'6d8c'))) BETWEEN ((('0.04857707407548151')<(x'fdf0'))) AND ((('캞䇘^!') BETWEEN (1.321933297E9) AND (0.29619464704769627)))));SELECT ALL ((rt0.c1) BETWEEN (rt0.c1) AND (t0.c1)) COLLATE RTRIM, ((((t1.c0)GLOB(vt0.c1))) BETWEEN ((- (t0.c57))) AND (NULL)), ((((((((CAST(rt0.c1 AS INTEGER))OR(((((vt0.c0)AND(-1.482613313E9)))OR(rt0.c0)))))OR(((((rt0.c4)OR(t1.c0)))AND(t0.c2)))))OR((((vt0.c1)) BETWEEN ((t0.c57)) AND ((rt0.c0))))))AND(CASE rt0.c0  WHEN rt0.c0 THEN t0.c2 ELSE vt0.c1 END)) FROM rt0 WHERE ('1862253369') LIMIT 1 OFFSET -2103259240;SELECT DISTINCT ((((vt0.c0))<(('? '))) IN ('1582593702')) FROM rt0 WHERE (((((('1101237347', x'', x'', x'a39f', '570835164')) NOT BETWEEN ((x'65dd', x'fcc1', NULL, 0.5225506766128252, 0.020170296084362715)) AND ((x'', '>h|m', NULL, 1.06212931E9, '*|M[VeG'))))<<(LOWER('夐i'))));SELECT ALL CUME_DIST() OVER () FROM rt0, vt0, t1 WHERE (x'5522b57d22d6'); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)AND(rt0.c1)))AND(t0.c2)))OR(0.04865357620397337)))AND(rt0.c3)))>=((t0.c1 IN ()))) FROM rt0, t0, vt0, t1; -- 0ms;
SELECT ALL 0.5401802394015294 FROM rt0, t1, t0 WHERE (x'') ORDER BY ((0.49995573296620055) BETWEEN (rt0.c0) AND (t1.c0)) COLLATE BINARY COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c0) AND (t0.c2))) NOT BETWEEN ((NOT (t0.c2))) AND (((((0X75b42a5)OR(rt0.c0)))OR(t0.c0)))) FROM rt0 WHERE ((((0.6559568677808065 IN (0.7058213015607988)))LIKE(UNLIKELY(NULL))));SELECT CASE WHEN (rt0.c2 IN ()) THEN TOTAL(rt0.c4) ELSE ((rt0.c0) NOTNULL) END FROM t1, vt0, rt0, t0 WHERE (MAX((~ ('')), (((('1516396495')AND(0.6735797368923829)))AND(NULL)))); -- 0ms;
SELECT DISTINCT ((((t0.c0)AND(SQLITE_VERSION())))OR(CAST(t0.c2 AS TEXT))) FROM vt0, t1, t0 WHERE (((((((((((((((x'')AND(NULL)))OR(x'087c')))OR(x'')))OR('')))OR('-306474961')))OR('97tMb虆')))>((NOT (x''))))); -- 0ms;
SELECT (+ (((((t0.c1)AND(t1.c0)))OR(t0.c1)))) FROM t0, vt0, t1, rt0 WHERE (((((x'baae')%(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((vt0.c1)!=(((t0.c1) IS TRUE))), CASE t0.c57  WHEN 0.7132563215123531 THEN CAST(x'' AS BLOB) WHEN ((vt0.c1)GLOB(0Xffffffffe82f66a9)) THEN ((vt0.c1)=(rt0.c2)) WHEN ((((((((t0.c1)AND(rt0.c3)))OR(rt0.c4)))OR(vt0.c1)))AND(t0.c1)) THEN (t1.c0 IN ()) END, CASE WHEN ((((vt0.c0)AND(rt0.c0)))AND(x'39f1')) THEN x'ecbd7f62' COLLATE BINARY ELSE (+ (vt0.c1)) END, ((CASE WHEN rt0.c2 THEN t0.c57 ELSE vt0.c0 END)>=(t0.c1)), (-2105690757 IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (t0.c57) AND (t0.c1)))AND(((rt0.c1) IS TRUE))) FROM t0, rt0, vt0, t1 GROUP BY ((t0.c57)-(((0.8199425093239479)*(rt0.c1)))) HAVING (((rt0.c4 IN ()))+(rt0.c4)) LIMIT 1394403300 OFFSET -868499196; -- 1ms;
SELECT DISTINCT ((((((((rt0.c0 COLLATE BINARY)AND(((rt0.c2)<(vt0.c1)))))OR(LOWER(rt0.c2))))OR(0X27ea1cc2)))OR(rt0.c4)), 0X519ffc7d, (((t0.c2) NOT NULL) IN ((- (t0.c2)), CAST(t0.c0 AS REAL))), rt0.c4, (- (((rt0.c4)>=(rt0.c2)))) FROM t0, t1, rt0, vt0 WHERE ((((((0.21057350759474325))<=((NULL))))<>(((0X25e83a10) IS FALSE)))); -- 0ms;
SELECT '1127576832' FROM vt0; -- 0ms;
SELECT CAST((((rt0.c4))=((NULL))) AS NUMERIC) FROM rt0, vt0, t1, t0 WHERE (((((NULL) ISNULL)) NOT BETWEEN (((('')) BETWEEN (('cuE}f#Xﱽ')) AND (('1021884717')))) AND (json_remove(0.34828762145699044, '199868292'))));SELECT DISTINCT LIKELIHOOD(((('-89013352', vt0.c0, rt0.c0)) BETWEEN ((t1.c0, t0.c1, t0.c1)) AND ((rt0.c3, rt0.c2, t0.c57))), 0.10493608805512422) FROM vt0 GROUP BY LIKELIHOOD(DISTINCT (t0.c1 IN ()), 0.2684473454753412);SELECT DISTINCT ((COUNT(*)) BETWEEN (NULL) AND (COUNT(*))), (((t0.c57)<(rt0.c3)) IN ()), (NOT (t1.c0)) FROM t1 NOT INDEXED, rt0 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN (((0.26553786219666364) NOT BETWEEN (NULL) AND ('fh'))) AND (CASE WHEN 0.975987884258615 THEN '' WHEN NULL THEN x'' WHEN '' THEN -6.54309634E8 END))) GROUP BY ((TYPEOF(DISTINCT rt0.c2)) NOT BETWEEN (-2105034538) AND (rt0.c4)) ORDER BY ((json_type(rt0.c1)) NOT BETWEEN (((rt0.c1)>=(vt0.c1))) AND (CASE WHEN rt0.c1 THEN t0.c1 END)) ASC;SELECT DISTINCT NULL FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(0.5944817036040188 AS REAL) FROM vt0 WHERE (((('450636371')) NOT BETWEEN (((- (0.901175981778443)))) AND ((STRFTIME(NULL, 0xffffffffedda32c4, '211158845'))))); -- 0ms;
SELECT t0.c1 FROM rt0, vt0;SELECT DISTINCT json_quote((rt0.c4 IN ())), (CASE t0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN (((((((((((((rt0.c2)OR(t0.c57)))OR(rt0.c2)))OR(t0.c2)))OR(rt0.c3)))OR('-1097928534')))OR(vt0.c0)), CAST(rt0.c3 AS BLOB))), (NOT (CAST(rt0.c0 AS TEXT))) FROM vt0, t1, t0, rt0 WHERE ((((((('Cfxm'))==((NULL)))))<((('547222877' IN ()))))) LIMIT -740866230; -- 1ms;
SELECT ALL ((((((t0.c57) ISNULL))OR(rt0.c3 COLLATE RTRIM)))OR(((t0.c1)AND(t0.c57)))) FROM vt0, t0, t1;SELECT ALL 956569911 FROM t0, rt0, t1, vt0; -- 0ms;
SELECT ALL MAX(((t0.c0) BETWEEN (rt0.c0) AND (t0.c1))) FROM t0, vt0 WHERE (('1365749085' IN ())) GROUP BY ((CASE rt0.c3  WHEN rt0.c0 THEN t1.c0 END)>=(((vt0.c1)IS NOT(rt0.c1)))), t0.c1, rt0.c1 HAVING ((((rt0.c3)/(vt0.c1)))<>((rt0.c2 IN ())));SELECT DISTINCT rt0.c3, AVG(((rt0.c3)&(t0.c2))) OVER (), ((~ (t0.c57)) IN ()) FROM t1 WHERE ((((0.9806496899295121)) BETWEEN (((((x'', 203649618, 0.5632417284206288, -1.314863536E9, '')) BETWEEN ((-1.882005953E9, 0.622699001287253, '-339639998', '', NULL)) AND ((NULL, 0.6506446724482351, x'', '1862253369', x''))))) AND (((0.10368529992406317 IN ()))))) LIMIT 1042761010 OFFSET 1135521454;SELECT DISTINCT (~ (rt0.c0 COLLATE RTRIM)), ((rt0.c1 IN ()) IN ()), ((((((vt0.c1))<((vt0.c0)))))>=(((rt0.c3 IN ())))) FROM t0, t1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c4  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)OR(t0.c1 COLLATE BINARY)))OR(CAST(vt0.c1 AS NUMERIC))), json_valid((t0.c1 IN ())), ((NOT (rt0.c0)) IN ()) FROM t0, rt0;SELECT SUM((- (vt0.c1))) OVER () FROM rt0, vt0 WHERE (CASE ('1512016545' IN ())  WHEN '' COLLATE RTRIM THEN CAST(995116262 AS INTEGER) END); -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE RTRIM) BETWEEN ((+ (t0.c1))) AND (vt0.c0 COLLATE NOCASE)) FROM rt0 GROUP BY ((vt0.c0 COLLATE RTRIM)>=((0.7449522504719275 IN ())));SELECT ((rt0.c3)*(0.6315575991518514)) FROM t1 WHERE (ROUND(CASE x'8bd1'  WHEN NULL THEN x'' WHEN '1842744245' THEN -528192715 WHEN x'' THEN NULL ELSE '0.5453282834343203' END, ((1e500) NOTNULL)));SELECT DISTINCT (((t0.c1 IN ()))*((NULL IN ()))) FROM vt0, t1, t0 GROUP BY CAST(CAST(vt0.c1 AS TEXT) AS REAL), (((rt0.c3 IN ()))LIKE(CAST(t1.c0 AS INTEGER))), ((CAST(rt0.c2 AS NUMERIC))IS(CAST(t0.c1 AS BLOB)));SELECT DISTINCT ((rt0.c4) NOT BETWEEN ((t0.c0 IN (vt0.c1))) AND (((t1.c0) ISNULL))) FROM rt0, vt0 GROUP BY (((((rt0.c4)AND(t0.c0)))OR(rt0.c4)) IN ((~ (rt0.c2)), ((t1.c0)<<(rt0.c3))));SELECT (rt0.c4 IN (((t0.c0)GLOB(rt0.c0)))), (((((rt0.c0, t0.c57, vt0.c1))>((rt0.c3, t0.c0, rt0.c1))))GLOB((((t0.c2))<=((t0.c57))))), TOTAL(rt0.c0) OVER () FROM rt0, t1, vt0;SELECT ALL (~ (-1024471843)), ((t0.c2 COLLATE RTRIM) NOT BETWEEN (((t0.c0)%(vt0.c1))) AND (((rt0.c3) IS FALSE))), (((rt0.c4 IN ()))||(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) FROM vt0 WHERE (((((((x'')>=(0.04815388651982855)))OR(((0.4126167694042674) IS FALSE))))AND(((NULL)>(NULL))))) ORDER BY (+ ((NOT (t0.c1))))  NULLS LAST;SELECT DISTINCT ((((NULL) NOT NULL)) NOT BETWEEN (TRIM(0.21057350759474325)) AND ((~ (t0.c2)))) FROM t0, vt0 WHERE (ABS((((('-1506426458')OR(NULL)))AND(x'')))) LIMIT -170960624 OFFSET 1308742466; -- 0ms;
SELECT ALL (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((1980955445))))|(0xffffffffe7055758)) FROM rt0, vt0, t0; -- 0ms;
SELECT rt0.c1 FROM rt0, t0, vt0, t1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS INTEGER)) NOT NULL) FROM t1, t0 WHERE (((CAST(0x7fffffffffffffff AS INTEGER))OR((1.70192443E8 IN ('7C')))));SELECT ALL ((((x'') BETWEEN (vt0.c1) AND (vt0.c1)))<=(CAST(vt0.c0 AS REAL))), CASE ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c4)))AND(t0.c1))  WHEN UNLIKELY(rt0.c0) THEN NULL END, (((- (t0.c2)))&((+ (rt0.c2)))) FROM rt0, t0 WHERE (((CAST('1551701497' AS INTEGER)) ISNULL));SELECT DISTINCT ((((NOT (vt0.c0)), ((rt0.c2) ISNULL), AVG(rt0.c1)))>=((COUNT(*), t0.c2 COLLATE NOCASE, ((((vt0.c1)AND(t0.c0)))OR(t0.c0))))) FROM rt0, t0 ORDER BY ((((rt0.c2)LIKE(t0.c0))) IS FALSE);SELECT ALL TOTAL((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1)))), UPPER(((((((((rt0.c0)OR(vt0.c1)))OR(t0.c57)))AND('')))AND(t0.c2))), (- (CAST(vt0.c1 AS BLOB))) FROM t0 CROSS JOIN t1 ON TIME((rt0.c4 IN ()), CAST('1365749085' AS INTEGER), ((t0.c57) NOT NULL)) WHERE ((~ ((((NULL))<=(('beLz'))))));SELECT DISTINCT ROW_NUMBER() OVER (), t0.c2, t0.c1 FROM t0; -- 0ms;
SELECT ALL ((IFNULL(DISTINCT t0.c1, vt0.c0)) NOT BETWEEN (t0.c0) AND ('998419190')), ((rt0.c1 IN ()) IN ()), COUNT((+ (rt0.c4))) FROM rt0, vt0, t0 WHERE ((x'' IN ())); -- 0ms;
SELECT ((((((vt0.c1)IS NOT(rt0.c4)))AND(rt0.c3)))OR(((t1.c0)+(t0.c0)))), (((vt0.c0)AND(rt0.c4)) IN ()), CAST(((vt0.c1)GLOB(rt0.c1)) AS NUMERIC) FROM t0, t1 WHERE (((((((NULL)<=(x'95e0')))AND(((((x'')OR('H^')))AND(x'')))))AND(((0.318842336631903) NOT BETWEEN ('') AND (x'')))));SELECT ((((NULL)AND(COUNT('0.6506446724482351'))))AND(CASE WHEN vt0.c0 THEN -2.105690757E9 ELSE t0.c0 END)), (((0.7212787655008199)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c2)))AND(x'')))) AND (((vt0.c0 IN (t0.c0, t1.c0))))), ((((((NULL)<=(t0.c1)))OR(0X43aeaeae COLLATE RTRIM)))OR(CASE WHEN x'' THEN t0.c2 END)) FROM rt0, t0, vt0;SELECT ALL rt0.c2 FROM rt0, t1, vt0, t0 WHERE ((((NOT ('cZ0M9!z')))*((((x'')) BETWEEN (('/\P')) AND ((x'')))))); -- 0ms;
SELECT DISTINCT ((('O'))<=((((rt0.c3)>>(rt0.c4))))) FROM rt0, t0 WHERE (((((NULL) NOT BETWEEN ('581478370') AND (0X4c4086b8))) NOT NULL)); -- 0ms;
SELECT t0.c1 FROM rt0 WHERE ((((NULL, 0xfffffffff8d93b82, '])')) BETWEEN ((UNLIKELY(0.7189779689335034), ((((((((((((NULL)OR(0.7670977476922317)))AND('0.04857707407548151')))AND(x'')))OR('123421349')))AND(x'96381c72')))OR('')), (~ ('399061495')))) AND (((~ ('')), ((NULL)IS NOT(0xffffffff93e94a9f)), UNLIKELY(x'')))));SELECT ALL COALESCE(((rt0.c2) ISNULL), CASE WHEN rt0.c4 THEN t0.c57 ELSE rt0.c4 END, CASE t1.c0  WHEN rt0.c4 THEN vt0.c0 ELSE vt0.c1 END, LOWER(rt0.c4)) FROM t1, vt0, t0, rt0 ORDER BY '' DESC; -- 1ms;
SELECT '' FROM vt0; -- 0ms;
SELECT ((t0.c2 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t0.c1 THEN rt0.c3 ELSE t1.c0 END) AND (rt0.c2)) FROM t0, vt0, rt0, t1 WHERE (CASE CAST(0X1356140d AS TEXT)  WHEN (('g섄*5D嬔<Q-')/('1033107417')) THEN (NOT ('鸊8/')) END); -- 0ms;
SELECT DISTINCT SUM(CASE WHEN rt0.c0 THEN t0.c2 ELSE t0.c57 END COLLATE BINARY) OVER ( ORDER BY ((rt0.c2 COLLATE NOCASE)<=(((vt0.c1)%(t0.c0)))), NULL ASC) FROM rt0, t0, vt0, t1 WHERE (TRIM(DISTINCT ((('A}?ᆹy')) NOT BETWEEN ((NULL)) AND ((x'66fda6d881ae'))), (x'' IN (NULL)))); -- 0ms;
SELECT DISTINCT (+ ('735291669')) FROM t1 WHERE (((((CASE NULL  WHEN x'' THEN NULL WHEN '' THEN NULL WHEN '-951421211' THEN NULL ELSE '0.0774530381696229' END)OR((-504706334 IN ()))))AND(CAST(0.25048118391188545 AS BLOB)))); -- 0ms;
SELECT ((TOTAL(rt0.c1)) NOT BETWEEN (((rt0.c4)*(rt0.c1))) AND (json_quote(rt0.c4))), IFNULL(DISTINCT (rt0.c4 IN ()), ((t0.c0)+(''))), (((t1.c0 IN (t1.c0, t0.c1))) IS FALSE) FROM t1, t0, vt0;SELECT ((t1.c0) NOT BETWEEN ((t0.c1 IN ())) AND (AVG(t0.c2))) FROM t1, t0, vt0 WHERE ((((((('1516396495') NOT BETWEEN ('-122298339') AND (x'')))OR(TRIM(DISTINCT '', '.VQg撝m'))))AND(((0X75b42a5) BETWEEN (1321052265) AND (NULL))))); -- 0ms;
SELECT ALL ((((rt0.c4)OR(vt0.c0)))OR(rt0.c0)) COLLATE RTRIM, (~ (((rt0.c2) NOT NULL))), ((((MAX(t0.c1))OR(UPPER(DISTINCT t0.c0))))OR((t0.c0 IN (rt0.c2)))) FROM t1, rt0, t0 WHERE (CASE STRFTIME(0.7536393163937384, NULL, 0.7415553263081281)  WHEN ((1043411081) NOT BETWEEN ('-1365374442') AND (0.43825500830019726)) THEN ((x'')/(-1895098630)) ELSE (((0xffffffff8d0a2e7f, 0.7949177119692477, x'b0a8')) BETWEEN (('-1320648651', x'ea1d', x'1631')) AND ((0.048610992439067746, x'', x''))) END);SELECT ALL ((((((rt0.c4) NOT NULL))AND(UNLIKELY(vt0.c0))))OR(CAST(t1.c0 AS BLOB))), (((((((((t0.c1)OR(vt0.c0)))OR(t0.c57)))AND(0.25583097534230603)))OR(vt0.c1)) IN ()), (~ (((((vt0.c0)OR(-8.9013352E7)))OR(t0.c2)))) FROM rt0, vt0, t1, t0 WHERE (CASE WHEN ((NULL) BETWEEN (0.5209995974497976) AND ('')) THEN ((((0.07931553024988147)OR(-984932877)))OR(NULL)) ELSE SQLITE_SOURCE_ID() END) GROUP BY ((((((((CAST(x'ecad4e9a' AS INTEGER))AND((t0.c0 IN ()))))AND(CAST(rt0.c0 AS BLOB))))OR(HEX(DISTINCT t0.c1))))AND((rt0.c4 IN ())));SELECT NULL, GROUP_CONCAT(0xffffffffaafcecda) OVER (), ((MIN(rt0.c3))<(((t0.c57)<>(vt0.c1)))) FROM t0, rt0, t1;SELECT DISTINCT ((((((t1.c0)/(vt0.c1)))AND((rt0.c0 IN ()))))OR(((t1.c0)AND(rt0.c1)))) FROM rt0;SELECT DISTINCT ((x'') IS TRUE) FROM t1, rt0, vt0, t0 WHERE (CASE WHEN 0.4055300501680794 THEN NULL ELSE x'ba9d' END COLLATE BINARY); -- 0ms;
SELECT ((((((rt0.c4)OR(vt0.c1)))OR(t0.c2)))<((~ (rt0.c1)))) FROM vt0, rt0, t0, t1 WHERE (((NULL) NOTNULL) COLLATE BINARY) LIMIT -530250702; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, vt0, t0 WHERE (MAX(CAST(0.9813355809424374 AS BLOB), ((-1548218278) BETWEEN (0.08530909396381126) AND (0Xffffffffd96ba302)))); -- 0ms;
SELECT (+ (((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)))) FROM rt0, t0, t1 WHERE (((((x'') NOT BETWEEN (NULL) AND ('-1902869632'))) IS TRUE));SELECT TOTAL(CAST(rt0.c4 AS NUMERIC)), t0.c2, ((('鎯{TmJ,' IN ())) IS FALSE) FROM vt0, t0, rt0; -- 1ms;
SELECT DISTINCT TOTAL(((rt0.c2)>(t0.c2))) FROM rt0, t1, vt0, t0; -- 0ms;
SELECT DISTINCT SUM((~ (t0.c57))) OVER (), (rt0.c4 IN ()) COLLATE NOCASE, LAG((+ (((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c57)))), t0.c57, ((rt0.c2 COLLATE RTRIM)&('1101237347'))) OVER () FROM rt0, t0 GROUP BY ((((rt0.c2)AND('0.6559568677808065')))OR(t1.c0)) COLLATE RTRIM COLLATE RTRIM;SELECT (NOT (LIKELY(t0.c57))), LAG(((((x'')OR(rt0.c3)))OR('')), (((((t0.c57)||(rt0.c1))))>=((CASE WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END))), (('2011431605')LIKE(rt0.c4)) COLLATE NOCASE) OVER (), SUM(((vt0.c0) IS TRUE)) FROM vt0, rt0, t0, t1 WHERE (((CAST(x'414c' AS TEXT)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((((((rt0.c4)OR((+ (t0.c1)))))AND(t0.c57 COLLATE RTRIM)))OR((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((vt0.c0))))))AND(HEX(t0.c57))) FROM vt0 WHERE (CASE ((NULL)/(-481845124))  WHEN ((0.8298142164867225)AND('-250148638')) THEN NULL ELSE ((0.9710637368761434)*('1644078470')) END);SELECT DISTINCT COUNT(CAST(rt0.c0 AS BLOB)) OVER () FROM t1, t0, rt0, vt0 WHERE ((+ ('eO'))); -- 0ms;
SELECT ((((rt0.c0)&(rt0.c4))) IS TRUE) FROM vt0 WHERE (((('-1957538666')<=('-802664273')) IN ((~ (x'4045'))))) ORDER BY ((json_array(t0.c1, rt0.c3))-(CASE WHEN rt0.c4 THEN x'2496' ELSE t1.c0 END))  NULLS FIRST;SELECT DISTINCT IFNULL(DISTINCT CAST(t0.c1 AS TEXT), (((0.1666261836114611)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) FROM rt0, t0, vt0; -- 0ms;
SELECT (CASE rt0.c3  WHEN rt0.c1 THEN t0.c1 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN rt0.c3 END IN ()), QUOTE(((t1.c0) NOT BETWEEN (vt0.c1) AND (rt0.c4))), LAST_VALUE(((((t0.c1)GLOB(vt0.c1))) NOT BETWEEN (t0.c57) AND (((t0.c2)=(t0.c57))))) OVER ( ORDER BY ((((rt0.c2)||(rt0.c0))) BETWEEN ('j頤') AND (rt0.c1 COLLATE NOCASE))  NULLS FIRST), CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB), ((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))LIKE((rt0.c0 IN ()))) FROM vt0, t1, rt0, t0; -- 1ms;
SELECT DISTINCT (((rt0.c2, t0.c1, -1.7976931348623157E308, vt0.c1, vt0.c0)) BETWEEN (((+ (t0.c2)), rt0.c3, (t0.c57 IN (t0.c2)), t0.c2, rt0.c0 COLLATE BINARY)) AND ((x'' COLLATE BINARY, COUNT(*), COUNT(*), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((vt0.c1) NOTNULL)))), x'', SUM(('-744297030' IN ())) OVER (), t0.c1, ((CASE WHEN rt0.c4 THEN rt0.c0 END) NOTNULL) FROM t1, t0 WHERE (TRIM(NULL));SELECT t0.c2 FROM t1, vt0, t0, rt0 WHERE ((~ ((- ('1365749085'))))); -- 0ms;
SELECT CAST('0.24406192886511058' AS REAL) FROM t0, vt0, t1, rt0 WHERE ((((+ (x'b4da')))==(((('0.9941061026033036', '-1083291934', 0X71a9f264))<((-1926226349, x'', 'Cfxm')))))); -- 0ms;
SELECT ((((((((t0.c2)AND(x'')))OR(rt0.c2)))AND(rt0.c2)))AND(t0.c57)) COLLATE NOCASE, GROUP_CONCAT(((rt0.c2)||(rt0.c3))) OVER (), (((t0.c57, NULL, rt0.c2)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC), (+ (t0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))) AND (((rt0.c0 IN ()), CAST(t0.c2 AS REAL), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))) IN ()) CROSS JOIN t1 ON (~ ((('649841474') NOT NULL))) WHERE ((((((NULL, '995116262', '1'))<(('tgzjG1', 'd{e)%', x'a957')))) NOT BETWEEN (CAST(0.7924713449225808 AS REAL)) AND ((('')|(x'')))));SELECT DISTINCT t0.c1 FROM rt0, vt0 WHERE (((((NULL) ISNULL))|(('' IN ())))) UNION SELECT ALL ((((vt0.c1) NOT BETWEEN (rt0.c3) AND (t0.c1))) NOT NULL) FROM vt0 WHERE ((((CASE x''  WHEN '-534881516' THEN NULL END))!=((((((((((NULL)OR(x'')))AND('')))AND(1.79504821E8)))OR('-2114226946')))))) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL)  NULLS LAST;SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((((t0.c57)OR(t1.c0)))AND(t0.c2)))) AND ((TRIM(DISTINCT t1.c0)))) FROM t0, vt0, t1, rt0 WHERE (((-374900589 COLLATE NOCASE) IS TRUE)) GROUP BY COALESCE(DISTINCT t0.c2 COLLATE RTRIM, (((vt0.c1)) NOT BETWEEN ((t0.c57)) AND ((t0.c1)))); -- 0ms;
SELECT DISTINCT ((((t0.c0)>=(rt0.c0))) IS FALSE) FROM t0, rt0, vt0, t1 WHERE ((((+ (0.7524071501954035)))>=((('1117147241')<<(NULL))))); -- 1ms;
SELECT DISTINCT load_extension(((rt0.c3)*(vt0.c0))) FROM t1, t0 WHERE (((((0.9426087196733209)LIKE(x''))) BETWEEN ((~ (x'09f6'))) AND ((('SG#oD')%('-1889881764'))))) ORDER BY (((- (t1.c0))) NOT NULL);SELECT ((TOTAL_CHANGES())-(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM vt0, t0;SELECT ALL ((UPPER(DISTINCT t0.c1))OR((t0.c1 IN ()))) FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))  NULLS LAST;SELECT ((((((((((rt0.c1) IS TRUE))OR(((t0.c2)|(t1.c0)))))OR((vt0.c1 IN ()))))OR(((t1.c0) NOT BETWEEN (x'') AND (t0.c1)))))OR(CASE rt0.c1  WHEN rt0.c4 THEN vt0.c1 ELSE t0.c0 END)) FROM vt0, t0 WHERE ((((~ (0xffffffff97ce9416))) IS TRUE)) ORDER BY (((~ (t0.c2)))&(((t0.c57)==(rt0.c4)))) DESC  NULLS LAST, (- ((NOT (rt0.c2)))) DESC  NULLS FIRST;SELECT DISTINCT CAST(rt0.c1 AS TEXT) COLLATE NOCASE, GROUP_CONCAT(CAST(t0.c2 AS NUMERIC)) OVER (), (((t1.c0))<=((CASE t0.c57  WHEN rt0.c4 THEN 0x2f877a42 ELSE t0.c0 END))) FROM vt0;SELECT DISTINCT ROW_NUMBER() OVER () FROM t1, vt0, rt0, t0 GROUP BY CASE 0.8060238111704567  WHEN (NOT (t0.c0)) THEN ((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) WHEN (rt0.c0 IN ('501448726')) THEN ((vt0.c0)*(rt0.c4)) WHEN ((rt0.c2)==(rt0.c2)) THEN ((t1.c0) ISNULL) END; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( PARTITION BY ((((rt0.c4)>(t0.c0)))>(CAST(rt0.c4 AS TEXT))), (~ ((rt0.c1 IN ()))), (((((t1.c0, t0.c0, t0.c57)) BETWEEN ((vt0.c1, rt0.c4, rt0.c0)) AND ((rt0.c1, rt0.c2, '狈^')))) NOTNULL), ((vt0.c0 COLLATE BINARY)OR(((t0.c1) BETWEEN (rt0.c4) AND (t1.c0))))), MAX((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))), MAX(((rt0.c4)|(vt0.c1)), ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0))) FROM vt0, t1, rt0;SELECT ALL CASE (rt0.c2 IN ())  WHEN ((0xffffffffe67b81f9)/(rt0.c3)) THEN (- (rt0.c0)) ELSE (NOT (vt0.c0)) END FROM rt0 WHERE ((~ (((((x'0613')AND(0.7888534188603357)))OR(0.7714993700885222)))));SELECT ALL CASE LIKELIHOOD(rt0.c0, 0.17137484226557897)  WHEN ((rt0.c3) NOTNULL) THEN x'' ELSE NULL END FROM rt0 WHERE ('924344143'); -- 0ms;
SELECT ALL ((((t0.c0)>=(x'9d1e'))) NOT BETWEEN (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)))OR(vt0.c0)))AND(t0.c0))) AND (((rt0.c1)AND(rt0.c2)))) FROM t0, rt0, t1, vt0 WHERE (((-529293951 COLLATE RTRIM)*(((('-385900095')) NOT BETWEEN ((x'')) AND (('tC')))))); -- 0ms;
SELECT DISTINCT MAX(json_object(rt0.c1, t0.c0)) FROM t1 WHERE ((((+ (NULL)))AND((~ (0.3511652345218301)))));SELECT ((((((t0.c2)%(t0.c57)))OR(((rt0.c1) BETWEEN (rt0.c3) AND (t0.c57)))))AND(((rt0.c2)<=(rt0.c3)))), (SUBSTR(rt0.c3, rt0.c0) IN ()), (NOT (CAST(t0.c0 AS INTEGER))) FROM vt0, rt0, t1, t0 WHERE ((((((NULL, '-839515345', -246107767, 1071291000, x'')) BETWEEN ((1047602857, x'c4cb', 0Xffffffff94760d2e, x'', 0Xfffffffffc60e14e)) AND ((NULL, NULL, NULL, '', NULL)))) NOT BETWEEN (x'' COLLATE NOCASE) AND ((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE BINARY)IS(0.2286454228550221)) FROM vt0, rt0 WHERE ((((NOT (0xffffffffb5454906)))>>(CASE ''  WHEN NULL THEN '' WHEN NULL THEN 'PS(b' WHEN 0.5944817036040188 THEN 0.8384029952286921 ELSE NULL END))); -- 0ms;
SELECT ALL ((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c3 END) IS TRUE) FROM rt0, t1, vt0 WHERE (((((']')/(NULL)))&(TRIM('c虆쐔忏#B*_', 0.6347397800550155)))) LIMIT 1211800179; -- 0ms;
SELECT DISTINCT vt0.c1 FROM rt0, t1, t0, vt0; -- 0ms;
SELECT (((rt0.c4 IN ())) NOTNULL) FROM t1; -- 0ms;
SELECT DISTINCT ((-1663993725)>=(STRFTIME(vt0.c0, rt0.c4, t1.c0, rt0.c4, t0.c57))) FROM t0 GROUP BY ((((t0.c1) IS FALSE))<(((rt0.c4)||(rt0.c2))));SELECT DISTINCT 0.43183372234534334 FROM vt0, rt0 GROUP BY ((((((t0.c0) NOTNULL))AND(((t0.c57) IS FALSE))))OR(((vt0.c1) NOT BETWEEN (t0.c57) AND (rt0.c0)))), -302695255, 0.2134655755635788 LIMIT 193161551;SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (t0.c57))) NOT BETWEEN (SUM(t0.c1)) AND (INSTR(rt0.c2, rt0.c1))) FROM vt0 GROUP BY (CASE t0.c2  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN t0.c2 THEN rt0.c2 ELSE vt0.c1 END IN ()), CASE t0.c57  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (((t0.c0))=((rt0.c0))) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN t0.c57 COLLATE NOCASE WHEN (NOT (t0.c57)) THEN ((((((((t1.c0)AND(vt0.c1)))OR(t0.c57)))AND(t0.c57)))AND(t0.c0)) END, CAST((((rt0.c4, vt0.c0, rt0.c2, rt0.c3, t0.c57))<((t0.c2, vt0.c1, t0.c57, vt0.c0, rt0.c3))) AS NUMERIC) HAVING ((((CAST(rt0.c2 AS NUMERIC))AND(rt0.c0 COLLATE NOCASE)))OR(((t0.c2) IS TRUE))) LIMIT 652132273;SELECT DISTINCT ((((((((CASE WHEN '655785512' THEN rt0.c1 END)AND(((t0.c1)>=(0xbad65bd)))))OR(((vt0.c1) ISNULL))))AND(vt0.c1)))AND((((t0.c1)) NOT BETWEEN ((t0.c57)) AND ((rt0.c3))))) FROM rt0, vt0, t0, t1 WHERE (((CAST('/[' AS NUMERIC))/('1644078470'))); -- 0ms;
SELECT ALL COUNT(*) FROM t0, t1 WHERE (x''); -- 0ms;
SELECT ALL (((- (t0.c0))) ISNULL) FROM vt0, t1;SELECT (((rt0.c2 IN (t0.c1, x''))) NOT BETWEEN (CASE t0.c57  WHEN rt0.c3 THEN vt0.c1 END) AND (rt0.c2)) FROM rt0;SELECT LOWER(((vt0.c1)|(rt0.c1))) FROM t0, vt0, rt0, t1; -- 0ms;
SELECT DISTINCT MAX(CAST(t0.c1 AS BLOB)), ((((0.5660808109218896)+(t0.c1)))LIKE(TOTAL(t0.c0))), AVG(CASE WHEN '' THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c1 THEN 0.18456442267758155 WHEN rt0.c3 THEN rt0.c4 ELSE vt0.c0 END) OVER ( ORDER BY (((DATETIME(t1.c0, t1.c0, rt0.c0)))<=(((vt0.c1 IN ()))))) FROM vt0, t0, t1 WHERE ((NOT (((0.733266369760157)IS NOT(0.8145562866165943)))));SELECT DISTINCT LAST_VALUE((((t0.c57, t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c57 THEN t0.c57 END, ((((((((vt0.c0)AND('1021884717')))OR(t0.c1)))AND(vt0.c0)))OR(t0.c2)), RTRIM(t0.c0))) AND ((((t0.c57)||(0.0774530381696229)), LIKELY(DISTINCT t0.c2), (~ (vt0.c0)))))) OVER ( ROWS ((CAST(rt0.c3 AS NUMERIC)) NOT NULL) PRECEDING) FROM vt0, t0 WHERE ((('') IS FALSE) COLLATE BINARY COLLATE NOCASE) ORDER BY CAST((rt0.c4 IN ()) AS NUMERIC) ASC, NULLIF((~ (t1.c0)), x'') ASC  NULLS FIRST, ((((((1910641105)AND(rt0.c2)))OR(vt0.c1))) IS FALSE);SELECT ((((t0.c1) IS TRUE)) BETWEEN (CASE rt0.c1  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN t0.c57 END) AND (((rt0.c4)IS(t0.c2)))) FROM vt0, rt0;SELECT DISTINCT TRIM(((t0.c57) BETWEEN (t0.c0) AND (t0.c2)), ((rt0.c3) NOT BETWEEN ('1321933297') AND (t1.c0))), (NOT (t0.c57)) COLLATE NOCASE, json_patch(CASE WHEN t0.c0 THEN rt0.c3 ELSE rt0.c2 END, (vt0.c0 IN ())), CASE WHEN LIKE(t0.c2, t0.c0, '{') THEN ((t0.c57) NOT NULL) ELSE ((t0.c1) NOT BETWEEN (t0.c1) AND (t1.c0)) END, (- (t0.c0)) COLLATE BINARY FROM vt0, t1, t0, rt0 WHERE ((((((((x'06d3eeb3')) BETWEEN ((x'')) AND ((0.016806217059180395))))OR(((((0.5586723271291308)OR(x'')))OR(NULL)))))AND(x'5910' COLLATE BINARY))); -- 1ms;
SELECT ALL (~ ((rt0.c2 IN (vt0.c1)))), ((CASE rt0.c1  WHEN x'' THEN rt0.c1 ELSE rt0.c4 END)IS(LOWER(DISTINCT t0.c57))), (CASE vt0.c1  WHEN vt0.c0 THEN t0.c1 END IN ()), t0.c1, COUNT(*) OVER ( ORDER BY CASE WHEN ((rt0.c1) IS TRUE) THEN ((t1.c0) NOTNULL) WHEN (((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c57))) THEN ((t0.c57) BETWEEN (t0.c0) AND (rt0.c0)) WHEN (t0.c57 IN (vt0.c1)) THEN ((((t1.c0)AND(t0.c2)))AND(x'')) ELSE ((rt0.c2)<=(t0.c1)) END DESC  NULLS FIRST, vt0.c0 DESC) FROM vt0 WHERE ((((+ (''))) ISNULL));SELECT (((((((((vt0.c1)OR(vt0.c1)))AND(t1.c0)))AND(t0.c1)))OR(t0.c0)) IN ()), MAX(CAST(vt0.c1 AS NUMERIC)), (((t0.c1)) BETWEEN ((((rt0.c2) IS FALSE))) AND ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END))), t1.c0, TRIM(DISTINCT CASE t0.c57  WHEN rt0.c0 THEN t0.c57 END, CAST(vt0.c0 AS BLOB)) FROM t0;SELECT DISTINCT (((((((t0.c2)AND(rt0.c4)))OR(t0.c0))))<>((((rt0.c2)<(NULL))))), t0.c0, HEX(DISTINCT (((t0.c57))!=((vt0.c0)))) FROM rt0, t0 WHERE (TYPEOF(CASE NULL  WHEN 'gf' THEN 0.30842612764958177 END));SELECT DISTINCT (((rt0.c2 IN ()))<>(((((t0.c57)OR(rt0.c1)))OR(rt0.c4)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c57, t0.c2)) BETWEEN ((CASE WHEN t0.c2 THEN rt0.c4 END, (((t1.c0))<=((t0.c0))), ((rt0.c1)<<(rt0.c3)))) AND ((((t0.c57) NOT BETWEEN (vt0.c1) AND (rt0.c1)), ((t0.c0) ISNULL), (((rt0.c0))=((rt0.c1)))))) FROM vt0, rt0, t0 WHERE (CAST(('0.8359904404941643' IN ()) AS BLOB));SELECT ALL t0.c2 FROM t0, rt0, vt0 WHERE ((((+ (NULL))) BETWEEN (INSTR(NULL, '*Z')) AND (CASE x'6186'  WHEN x'f02a' THEN x'617c' END))) ORDER BY (NOT (x''))  NULLS LAST LIMIT -1020855870; -- 0ms;
SELECT ALL rt0.c0, ((vt0.c0 COLLATE RTRIM) IS TRUE), (NOT (t0.c0)) FROM rt0 WHERE ((((0.25458824617772324)) NOT BETWEEN ((CAST(0X7097e33c AS REAL))) AND ((CASE -1314863536  WHEN x'' THEN NULL ELSE '669654210' END))));SELECT ALL AVG(CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 ELSE t0.c1 END) FROM t0, rt0 WHERE ('-219161984');SELECT ALL ((MIN(rt0.c4))IS NOT(((t1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM vt0 WHERE (((((NULL) NOT BETWEEN (-154570352) AND (0Xfffffffffdcde2b5)))%(((((x'')AND('G︻HY>]ᓧj')))OR('-1973002691'))))) INTERSECT SELECT DISTINCT (((+ (rt0.c3))) IS TRUE) FROM vt0, rt0, t0 LIMIT 136721605;SELECT ALL CAST(((rt0.c3)-(rt0.c2)) AS TEXT), COUNT(*), vt0.c0, NULL, CASE json_array(t0.c0, vt0.c0)  WHEN ((t1.c0)AND(rt0.c4)) THEN CASE WHEN rt0.c4 THEN 956569911 ELSE rt0.c2 END ELSE TYPEOF(vt0.c0) END FROM t0, vt0;SELECT ALL DENSE_RANK() OVER ( ORDER BY CAST(((((((((vt0.c1)OR(t0.c0)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4)) AS TEXT)) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c2) IS FALSE))GLOB((((rt0.c1, vt0.c1, t0.c57))<>((t0.c1, t0.c2, rt0.c3))))), ((((t0.c1, vt0.c0, t0.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((t0.c57, t0.c1, '䇘L奌緑'))) IN ()), CASE ((t1.c0)<>(vt0.c1))  WHEN (~ (t0.c57)) THEN CAST(t0.c1 AS NUMERIC) WHEN CASE rt0.c4  WHEN rt0.c2 THEN t0.c0 WHEN t1.c0 THEN -197155188 WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END THEN (- (0.5898899712435935)) WHEN ((t0.c1) IS TRUE) THEN ((vt0.c0)GLOB(t0.c57)) END FROM t1, t0, vt0 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN (((0.17013487409092443))<((NULL))) ELSE ((1012235840)IS NOT(0.3044841379351927)) END);SELECT DISTINCT CAST((t1.c0 IN ()) AS BLOB) FROM rt0, t0, t1, vt0 WHERE (0.2380392614734509); -- 0ms;
SELECT DISTINCT CAST(t0.c2 COLLATE RTRIM AS NUMERIC) FROM vt0 WHERE ((((((((((((0.6967815585248285))>((NULL))))OR(-2.105034538E9 COLLATE RTRIM)))AND((NOT (x'')))))OR(('-2103259240' IN (0.9762674859861047)))))OR(((((NULL)OR(0.248811244044835)))OR(NULL)))));SELECT DISTINCT ((TOTAL(t0.c2)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((t0.c2 IN ()))), (rt0.c4 COLLATE RTRIM IN (CASE t1.c0  WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c57 THEN rt0.c0 END)), CASE WHEN IFNULL(DISTINCT rt0.c2, rt0.c4) THEN NULLIF(t0.c0, t0.c1) WHEN CASE WHEN t0.c2 THEN rt0.c0 WHEN t0.c57 THEN t0.c2 WHEN t0.c0 THEN rt0.c2 END THEN (('') IS FALSE) WHEN (((t1.c0))<((rt0.c1))) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (9.56569911E8)) ELSE ((-1.268604793E9)>(NULL)) END, CAST(((t0.c0)-(t0.c57)) AS BLOB), ((MAX(rt0.c4))+((((t1.c0))>((rt0.c1))))) FROM vt0, t0, rt0, t1 GROUP BY TRIM((+ (rt0.c2))) HAVING (~ (CAST(rt0.c0 AS BLOB))); -- 0ms;
SELECT ALL (((t0.c1) ISNULL) IN ((((rt0.c4))<=((t0.c1))), rt0.c2 COLLATE RTRIM)) FROM vt0 WHERE ((((((((((('-1961794876')AND(6.55785512E8)))OR('199868292')))OR(x'')))OR(0.2075486562978719))) IS FALSE));SELECT DISTINCT rt0.c4, ((CAST(rt0.c4 AS NUMERIC)) NOTNULL), ((((((((t1.c0 COLLATE NOCASE)OR(TYPEOF(DISTINCT t0.c0))))OR(LIKELIHOOD(DISTINCT rt0.c3, 0.8453332776371232))))OR(t0.c0 COLLATE RTRIM)))AND(0.8770040488178119 COLLATE BINARY)) FROM vt0, rt0, t1, t0 WHERE ((((('')GLOB(0.8279757702453763)))%((NOT (1326672720))))); -- 1ms;
SELECT ALL (((((t1.c0, t0.c0, t1.c0)) BETWEEN ((t1.c0, vt0.c0, t1.c0)) AND ((vt0.c0, vt0.c1, t0.c57)))) IS FALSE) FROM t0, rt0 WHERE ((((0.4354766375564656)OR(0.29496362812438215)) IN ()));SELECT DISTINCT CAST('-733084758' AS TEXT) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((('-306474961') IS TRUE))AND(rt0.c3)))OR(CAST(rt0.c4 AS TEXT))) FROM rt0; -- 1ms;
SELECT DISTINCT COUNT(CASE WHEN x'' THEN rt0.c3 WHEN rt0.c3 THEN t0.c0 WHEN rt0.c2 THEN t0.c1 END) OVER () FROM t0, vt0 WHERE (((NULL) IS TRUE));SELECT rt0.c1 FROM t1 WHERE (((((('-45739815' IN ()))AND((NOT (-1690730662)))))OR(('D?Yᥡ' IN ()))));SELECT ALL rt0.c1 FROM rt0, t1 FULL OUTER JOIN t0 ON vt0.c1 LEFT OUTER JOIN vt0 ON (~ (CAST(t0.c57 AS REAL))) LIMIT 1631607854 OFFSET -868499196;SELECT DISTINCT t1.c0, CAST(t0.c57 AS REAL) COLLATE BINARY, CAST(((((t0.c57)OR('zo')))OR(t0.c1)) AS INTEGER), COUNT(*) OVER ( PARTITION BY (((t0.c0)) NOT BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((((vt0.c1)OR(t0.c0)))OR(t1.c0))))), ((((t1.c0)%(rt0.c1))) NOT BETWEEN ((- (rt0.c4))) AND (((t0.c1) NOT BETWEEN (t0.c57) AND (rt0.c1))))), (~ ((+ (vt0.c0)))) FROM vt0, rt0, t1;SELECT DISTINCT (((+ (t0.c1))) NOTNULL) FROM t0 WHERE ((('92z3(ma' IN (0.5838879667002438)) IN (((NULL)<(0x2c971a23))))) LIMIT 501448726; -- 0ms;
SELECT ALL ((((('vn. n2\M', rt0.c1, rt0.c2))>((rt0.c0, t0.c2, rt0.c1)))) NOT BETWEEN (((rt0.c3)IS(t0.c1))) AND ((NOT (rt0.c2)))), ABS(DISTINCT -1171764533), GLOB(((t1.c0)<>(rt0.c4)), (t0.c0 IN ())) FROM t1, rt0, vt0;SELECT DISTINCT (x'' IN ()) FROM t1, rt0, vt0, t0 WHERE (CAST(CAST(0.9155567589469532 AS REAL) AS INTEGER)); -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c1)OR(vt0.c1)))AND(t0.c0)) THEN LAST_INSERT_ROWID() WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c3)) THEN ((rt0.c3)/(t1.c0)) WHEN rt0.c2 THEN rt0.c3 WHEN ((t0.c1)>>(rt0.c1)) THEN rt0.c2 WHEN CAST(vt0.c1 AS TEXT) THEN (t0.c57 IN ()) ELSE ((((rt0.c4)AND(rt0.c3)))AND(0.8727461857456402)) END, (((vt0.c0)OR(rt0.c3)) IN ()), ((MAX(t0.c2)) NOT BETWEEN ((rt0.c1 IN ())) AND (((((((((t0.c1)OR(vt0.c1)))AND(rt0.c2)))AND(t0.c57)))AND(rt0.c4)))) FROM t0, rt0;SELECT ALL ((CASE WHEN t0.c1 THEN t0.c1 END) IS FALSE) FROM t1 WHERE (CASE WHEN -1.306442288E9 COLLATE RTRIM THEN (('-19456459') IS TRUE) END);SELECT DISTINCT ((((rt0.c2 IN ())))<=(((((rt0.c4, t0.c2, vt0.c1))<=((rt0.c4, t0.c0, rt0.c0)))))) FROM vt0 LEFT OUTER JOIN t0 ON CAST(COALESCE(vt0.c1, rt0.c2) AS NUMERIC) CROSS JOIN rt0 ON (CAST(rt0.c3 AS REAL) IN ()) CROSS JOIN t1 ON CAST(((t0.c0)<(t1.c0)) AS INTEGER) WHERE (CAST((((0.6381610806473548, x'', x'', x'', '2009326154'))=((0Xffffffff97a162d5, '-2105034538', x'', NULL, '-1529897980'))) AS BLOB)) GROUP BY json_patch(CASE WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN t1.c0 THEN rt0.c4 END, ((rt0.c0) BETWEEN (t0.c0) AND (t1.c0))) HAVING ((COUNT(*)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((((x'', t1.c0, rt0.c3)) BETWEEN ((vt0.c0, t1.c0, rt0.c1)) AND ((vt0.c0, rt0.c3, t0.c57))))); -- 10ms;
SELECT DISTINCT (((((t0.c57))==((t1.c0))))*('0.08754174307696383')) FROM rt0, vt0, t0, t1 WHERE (CASE WHEN (-9.15711701E8 IN ()) THEN (('-1889881764')>=(x'')) END); -- 1ms;
SELECT (((0.6488360294895897, 0.4309688266838706, vt0.c0, t0.c2, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, t0.c0, 0.665829470744491, vt0.c0)) AND ((t0.c0, rt0.c0, rt0.c2, t0.c1, t1.c0))) COLLATE NOCASE FROM vt0 WHERE (((((0.8687740130112772)&(x''))) NOT NULL));SELECT ((((((((t0.c2)OR(TYPEOF(DISTINCT vt0.c0))))AND((~ (rt0.c1)))))OR(CAST(t1.c0 AS BLOB))))AND(CAST(rt0.c2 AS BLOB))) FROM t0;SELECT DISTINCT ROW_NUMBER() OVER (), (((((((((vt0.c0 IN ()))AND(TYPEOF('wIf_79(\'))))AND(0x50135bd8)))AND(((((((((t0.c1)OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))OR(rt0.c2)))))OR((rt0.c0 IN ('-868499196')))), (~ (NULL)) FROM t0, vt0, t1 GROUP BY ((t0.c2)LIKE(t1.c0)) COLLATE BINARY;SELECT DISTINCT ((t0.c2)-(t0.c57)) COLLATE RTRIM FROM t0, rt0, vt0, t1 WHERE (CAST((0.19580623422388577 IN ('', 0.520320170748109)) AS NUMERIC)) GROUP BY INSTR((((rt0.c3, vt0.c0, t0.c1)) BETWEEN ((0.5289851626635703, vt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c2, t1.c0))), CAST(rt0.c1 AS NUMERIC)) HAVING ((('^c餕mQ]8')) BETWEEN ((((((((((((((vt0.c0)AND(rt0.c2)))OR(NULL)))AND(t0.c1)))AND(rt0.c4)))OR(t0.c57)))OR(rt0.c0)))) AND (((+ (vt0.c0))))) ORDER BY rt0.c4  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE)) ISNULL) FROM t1, vt0 WHERE (((JULIANDAY(0.85559705461409, '0.3719304752791479', '-1548218278'))==('1788516298')));SELECT ALL (CAST(rt0.c4 AS REAL) IN ((((t0.c1)) BETWEEN ((t0.c0)) AND ((t1.c0))), (+ (rt0.c3)))), RANK() OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), x'' FROM t0, vt0, rt0, t1 LIMIT 517799991; -- 1ms;
SELECT DISTINCT HEX((+ (t0.c0))) FROM t1 WHERE (((('aV+2F5ﱽ') NOT BETWEEN (x'') AND (0xffffffff827db57b)) IN (CASE WHEN 0.21200746398177717 THEN 0.5486168122282347 END, ((NULL)&(-654240345)))));SELECT DISTINCT ((((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (CAST(t0.c57 AS NUMERIC)) AND (t0.c57)) FROM rt0 WHERE ((((0.38742478727236096, x'', NULL)) NOT BETWEEN ((x'' COLLATE BINARY, (+ (NULL)), x'' COLLATE RTRIM)) AND (((((NULL)) BETWEEN (('-802416012')) AND (('Rf'))), (('0.14946588882769085')&(x'')), ((x'a6ba2233') IS TRUE)))));SELECT ALL CASE NULLIF(rt0.c2, rt0.c1)  WHEN t0.c1 COLLATE RTRIM THEN 0.08518560121912333 ELSE (NOT (rt0.c4)) END, COALESCE(t0.c0, t0.c1) COLLATE BINARY, (((~ (vt0.c0))) NOT BETWEEN ((rt0.c3 IN (rt0.c4))) AND (((((rt0.c2)AND(t0.c1)))AND(rt0.c2)))) FROM t0;SELECT ALL (0.604539104778408 IN (t1.c0 COLLATE BINARY)) FROM t1 ORDER BY (((t0.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c2)))OR(t0.c2)))) AND ((((((((((vt0.c1)AND(t0.c0)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c3))))) ASC, (((((((((((9.56569911E8))<>((t0.c2))))OR(((rt0.c3)<=(t0.c0)))))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((+ (vt0.c1)))))AND(ABS(DISTINCT rt0.c3))) ASC  NULLS FIRST;SELECT COUNT(*) FROM t1, t0; -- 0ms;
SELECT ((((t0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE) FROM rt0, t0 WHERE ((((NULL)!=(0.11374292522732454)) IN ())) EXCEPT SELECT DISTINCT CASE WHEN (rt0.c3 IN ()) THEN (+ (t0.c57)) END FROM t0 WHERE ((((0.45730506380163094) NOT BETWEEN (NULL) AND ('')) IN ())) ORDER BY (NOT ((rt0.c1 IN (5.7135323E7)))) DESC  NULLS FIRST, 0x61e39dff DESC  NULLS LAST;SELECT ALL ((MAX(rt0.c4)) NOT BETWEEN (NULL) AND (NULL)), ((((((rt0.c4)AND(rt0.c3)))OR(rt0.c3))) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (TYPEOF(t0.c1))), 0X3e99be9b FROM t0 WHERE ((NULL IN (CAST(x'' AS TEXT))));SELECT t0.c1 FROM rt0 WHERE (TRIM(DISTINCT ((-2113332363) IS FALSE)));SELECT DISTINCT ((CASE WHEN t0.c57 THEN NULL WHEN 0.4055300501680794 THEN rt0.c2 WHEN t1.c0 THEN t0.c2 END) NOTNULL) FROM rt0, t0, t1 WHERE (((((((NULL)AND(0.02881947168735255)))OR('s굓'))) NOT BETWEEN ((NOT (x'4359'))) AND (PRINTF(NULL)))); -- 0ms;
SELECT DISTINCT ((LIKELY(rt0.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER))) FROM rt0, vt0, t0, t1 WHERE (CAST(0Xfffffffff3e82b69 COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT ALL ((((t0.c0 COLLATE BINARY)OR(((((((((vt0.c0)AND(t0.c2)))AND(rt0.c3)))OR(rt0.c2)))AND(vt0.c0)))))AND(((rt0.c1)<=(t0.c57)))), (((NOT (vt0.c0)))>=(((rt0.c2)/(t0.c2)))), 57135323, ((vt0.c1)IS(CASE t0.c2  WHEN rt0.c2 THEN t0.c1 END)), CAST(CAST(NULL AS BLOB) AS INTEGER) FROM rt0, t1, t0 WHERE (((x'cfe3') NOT BETWEEN (NULL) AND ('1654750165')) COLLATE RTRIM) LIMIT -1699889994 OFFSET -1971369461;SELECT ALL GROUP_CONCAT(((rt0.c4) NOT BETWEEN (t0.c0) AND (t0.c57))) COLLATE BINARY FROM t0, vt0;SELECT DISTINCT NULL, SUM(((1894459733)LIKE(0.048610992439067746))) FILTER(WHERE CASE WHEN (((('7()L')AND(rt0.c4)))AND(rt0.c1)) THEN ((((rt0.c2)OR(vt0.c1)))OR(t0.c1)) ELSE (t0.c1 IN (rt0.c2)) END) OVER (), COUNT(*), CASE WHEN ((vt0.c1)|(rt0.c2)) THEN ABS(rt0.c0) END, CASE (((('?\n')OR(t0.c2)))AND(rt0.c2))  WHEN MAX(t1.c0) THEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) ELSE ((t0.c0)<=(t1.c0)) END FROM t1;SELECT ALL (NOT ((NOT (rt0.c1)))), (CASE vt0.c0  WHEN t0.c1 THEN -314203.0 END IN (rt0.c2 COLLATE BINARY)), CASE WHEN NULL THEN CASE vt0.c0  WHEN '-314203' THEN rt0.c1 ELSE vt0.c0 END WHEN NULL THEN rt0.c4 WHEN (vt0.c1 IN ()) THEN (((t0.c57))!=((NULL))) END FROM t1 WHERE (x'' COLLATE RTRIM);SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0))) BETWEEN (t1.c0) AND ('')), ((MIN(rt0.c0))>>((vt0.c1 IN ()))), CAST((((rt0.c1, rt0.c1, rt0.c3))>=((rt0.c2, rt0.c1, rt0.c2))) AS REAL) FROM t0, rt0, t1, vt0 WHERE ((((((0.5884728041768329 IN ('424085182')))AND(((-4.2438282E7) NOT NULL))))AND(((NULL)*(NULL))))) ORDER BY ((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL FROM t1; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 0ms;
SELECT ALL t1.c0 FROM t0 WHERE ((((x'' IN ()))+('')));SELECT ALL CASE CAST(rt0.c2 AS BLOB)  WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((rt0.c1)>=(vt0.c0)) END, ((CAST(rt0.c0 AS BLOB))||((((vt0.c0))>=((t0.c2))))), ((((rt0.c0)<(t0.c1))) NOT NULL) FROM vt0, rt0, t0; -- 0ms;
SELECT ((((((((((vt0.c1)IS NOT(rt0.c4)))AND(((rt0.c2) ISNULL))))AND(t1.c0)))OR(t0.c1)))OR(((rt0.c2) IS TRUE))), x'', (- (((rt0.c1)%(vt0.c0)))) FROM rt0, vt0, t1, t0 WHERE ((((((((((('570835164') BETWEEN (x'618d') AND (x'')))OR(((('IV캞', '-1525557023', 0X5e5476a6)) BETWEEN ((NULL, x'7796', x'd7bb')) AND ((NULL, -314203.0, 0.21675270651079315))))))AND(NULL)))AND(STRFTIME(0.7835444149369416, x'', '-1439759056'))))AND((('') NOT NULL)))) LIMIT -2096602122 OFFSET 35739143; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c4)))IS(((vt0.c1)GLOB(t0.c1)))) FROM rt0, t0, t1;SELECT ALL ((((((rt0.c1)%(rt0.c3)))OR(((((t0.c2)OR(t0.c57)))AND(rt0.c3)))))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)) FROM rt0 WHERE (CASE (('')>=(0.04186088968666879))  WHEN (((((((('t(V)')OR('WxV4')))OR(0x14714eac)))AND(-764960319)))OR(x'113b')) THEN CAST(x'56cd' AS REAL) ELSE (0.46598185758125554 IN ()) END);SELECT DISTINCT ((((~ (0.6010674608693923))))>((((((vt0.c1)AND(t0.c57)))AND(rt0.c2))))) FROM vt0, t0 WHERE (((((CAST('%Y' AS BLOB))AND(CAST(0Xfffffffff8d93b82 AS REAL))))AND(CAST(')⻽?' AS INTEGER))));SELECT DISTINCT json_patch((- (rt0.c4)), (((rt0.c0))<=((rt0.c3)))) FROM t0, vt0, rt0 WHERE (CAST((x'' IN (0.42717111651945894, 0.07931553024988147)) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt0.c0))) BETWEEN (((((t0.c1)AND(t1.c0)))AND(rt0.c4))) AND (((t0.c1) BETWEEN (t1.c0) AND (rt0.c2)))) FROM t1, rt0, t0;SELECT CAST(((((t0.c57)OR(t0.c57)))AND(rt0.c4)) AS REAL), t0.c1, (((rt0.c1)) NOT BETWEEN (('')) AND ((((t0.c2)<>(t0.c1))))) FROM t0, rt0 WHERE ((NOT (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((NULL)<(((t0.c0)<(rt0.c0)))) FROM vt0 WHERE ((((('-168504326')AND(0.3815773893378397)))||(((('', '199868292', 0.5679204751988072))<=(('179504821', '0.7415553263081281', '-776814590'))))));SELECT ((rt0.c2) NOT NULL) FROM vt0, rt0, t0 WHERE (CASE WHEN x'' THEN NULL ELSE x'' END COLLATE NOCASE COLLATE BINARY) ORDER BY CASE WHEN ((rt0.c0)>=(t0.c1)) THEN ((t0.c0) NOT BETWEEN (t0.c57) AND (rt0.c2)) WHEN ((vt0.c0)>(rt0.c1)) THEN ((vt0.c0) NOTNULL) WHEN ((t0.c0) BETWEEN (rt0.c1) AND (0.14862742975695498)) THEN (t0.c1 IN (rt0.c1)) WHEN ((t0.c1)IS(rt0.c3)) THEN rt0.c2 WHEN ((t0.c2) NOT NULL) THEN ((vt0.c0) IS FALSE) ELSE ((((t0.c0)AND(rt0.c1)))AND(t0.c57)) END; -- 0ms;
SELECT ((TOTAL(t0.c0)) NOT BETWEEN (CAST(t0.c1 AS REAL)) AND (((NULL)>(rt0.c0)))), ((CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)<=(CAST(rt0.c4 AS TEXT))), ((COUNT(*)) NOT BETWEEN (rt0.c1) AND (0.8359904404941643)), CASE (NOT (t0.c2))  WHEN (NOT (t0.c0)) THEN ((rt0.c3)AND(t0.c57)) ELSE (- (rt0.c1)) END, (((t0.c2, rt0.c3, t0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c1, t1.c0, t0.c57))) COLLATE NOCASE, ((CASE WHEN rt0.c0 THEN t0.c57 ELSE 0.6151580058456525 END)||(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))), ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)))%(CAST(vt0.c0 AS INTEGER))) FROM rt0, vt0, t1 WHERE (((((CAST(x'' AS NUMERIC))AND(((0x35cd3395)LIKE(0.23572962041840295)))))AND(CASE ''  WHEN 0X12a7f656 THEN NULL END)));SELECT (NULL COLLATE RTRIM IN ()), ROW_NUMBER() OVER ( ORDER BY ((CASE WHEN t0.c0 THEN rt0.c4 ELSE rt0.c4 END) BETWEEN (MIN(vt0.c1, rt0.c0)) AND (((('d뒱#NU5'))>((t0.c0))))) DESC  NULLS FIRST), ((rt0.c3)IS NOT(((t0.c1)IS(rt0.c1)))) FROM rt0 WHERE ((~ (((NULL) NOT NULL))));SELECT DISTINCT ((((rt0.c0)OR(vt0.c1)))OR(rt0.c4)) COLLATE BINARY, ((',O' COLLATE RTRIM) BETWEEN (LOWER(rt0.c1)) AND ((t0.c1 IN (rt0.c3, t0.c0)))), CASE (((rt0.c0, t1.c0, rt0.c2))>((rt0.c4, rt0.c0, rt0.c3)))  WHEN CASE x''  WHEN t0.c57 THEN vt0.c0 END THEN ((((t0.c0)AND(rt0.c4)))OR(rt0.c1)) ELSE (- (rt0.c3)) END FROM t0, t1 GROUP BY CAST((rt0.c2 IN ()) AS REAL) HAVING ((((rt0.c3)LIKE(rt0.c2))) IS TRUE);SELECT ((rt0.c2)=(TRIM(rt0.c1))), COUNT(rt0.c4), ((CAST(rt0.c0 AS TEXT))<<(((rt0.c3) NOT NULL))) FROM rt0, t1, t0, vt0; -- 0ms;
SELECT ((((PRINTF(rt0.c0))OR(MAX(t0.c1))))OR((rt0.c3 IN (rt0.c1)))) FROM rt0, t0 WHERE (((((NULL IN (x''))))>(((~ ('^5*YR&I')))))) LIMIT -2099763732 OFFSET -666411514; -- 0ms;
SELECT ALL ((rt0.c0) IS TRUE) FROM rt0, t1, vt0 WHERE ((((NULL IN ())) IS TRUE)); -- 0ms;
SELECT ((((t0.c2) ISNULL))LIKE((((t0.c57))<=((t0.c2))))) FROM vt0, t1, rt0 INNER JOIN t0 ON ((t0.c57) NOTNULL) GROUP BY ((((t0.c57) IS TRUE))OR((x'' IN (vt0.c0)))); -- 0ms;
SELECT ALL (((t0.c1)>>(t1.c0)) IN (CASE WHEN rt0.c3 THEN rt0.c2 END, 0Xfffffffff875b98c COLLATE NOCASE)) FROM vt0 WHERE (COALESCE(((x'3744a943')<<(NULL)), CASE WHEN -1.345638156E9 THEN x'' ELSE 0.8580490275787832 END, json_array_length(NULL, 0.6896764645011924), 0.3763158267842547 COLLATE RTRIM)) GROUP BY ((0.8368408683364188)IS(((rt0.c3)AND(rt0.c3))));SELECT (CASE WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN t0.c1 WHEN rt0.c4 THEN vt0.c0 END IN ()) FROM rt0, t1, t0 GROUP BY (CAST(vt0.c0 AS BLOB) IN (GLOB(t0.c57, vt0.c0))) HAVING (((vt0.c0)) BETWEEN ((NULL)) AND ((((t1.c0)IS(t0.c57)))));SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) NOT NULL) FROM t0, vt0 WHERE (((-1e500 COLLATE RTRIM)<>(((x'')IS NOT(1.551701497E9))))); -- 0ms;
SELECT DISTINCT (((vt0.c1 COLLATE BINARY))>=((((t1.c0)AND(rt0.c0))))) FROM rt0 WHERE (((((CASE WHEN '-611349308' THEN '662869256' ELSE NULL END)AND((+ (x'283d')))))OR(('' IN ()))));SELECT DISTINCT (((((t0.c0)<>(vt0.c1)), MIN(t0.c1), ((((((((((((t0.c57)AND(rt0.c0)))OR(0.05402503979292239)))AND(t0.c57)))OR(rt0.c1)))AND(t0.c2)))OR(rt0.c1))))<=((CAST(t1.c0 AS TEXT), CASE WHEN t1.c0 THEN t1.c0 END, ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))), COUNT(CASE vt0.c0  WHEN t1.c0 THEN rt0.c0 ELSE t0.c1 END) OVER ( GROUPS  UNBOUNDED PRECEDING), INSTR(((rt0.c4) BETWEEN (t1.c0) AND (rt0.c2)), rt0.c1 COLLATE RTRIM) FROM rt0, t1, t0;SELECT ALL (((rt0.c2 IN (0.34828762145699044, rt0.c3))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((NOT (t0.c2)))) FROM t0;SELECT ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))) BETWEEN ((NOT (rt0.c0))) AND (0xffffffffa47c63b6)), (t0.c2 IN ()) COLLATE NOCASE COLLATE BINARY, ((((((((((((SUM(t0.c0))OR((t0.c1 IN ()))))OR(SUM(rt0.c0))))AND(t0.c57 COLLATE BINARY)))OR(((rt0.c3)+(t0.c2)))))OR(CAST(t0.c2 AS TEXT))))AND((- (t0.c0)))) FROM vt0, rt0, t0, t1 LIMIT -302632221 OFFSET 147235718; -- 0ms;
SELECT ALL ((((rt0.c1)>(x'')))OR((~ (t0.c0)))) FROM t0, vt0, rt0, t1; -- 0ms;
SELECT ((LIKELY(DISTINCT vt0.c0)) NOT BETWEEN (((t1.c0)/(t0.c57))) AND (((rt0.c1)>>(rt0.c3)))), COUNT(*) FILTER(WHERE ((('153257990')) NOT BETWEEN ((CAST(t0.c57 AS INTEGER))) AND ((rt0.c4 COLLATE NOCASE)))) OVER (), x'1726' FROM rt0, t1 WHERE (LOWER(DISTINCT ((NULL)>=(x'0c2b')))) GROUP BY (((rt0.c3)) BETWEEN ((CASE rt0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt0.c4 END)) AND ((CAST(x'667c' AS NUMERIC)))) HAVING HEX(DISTINCT ((rt0.c4)<(rt0.c3)));SELECT DISTINCT rt0.c1 FROM rt0, t0, vt0, t1 WHERE (((0.9457470596908946)<((- ('g섄*5D嬔<Q-'))))) GROUP BY (((vt0.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((NOT (t0.c57))))); -- 0ms;
SELECT ALL TRIM(DISTINCT ((t0.c57) BETWEEN (t0.c0) AND (vt0.c0)), (t0.c1 IN ())) FROM rt0, t0 WHERE ((((0x27ea1cc2 IN ())) NOT NULL));SELECT CAST((rt0.c4 IN (0.3681881819189755, rt0.c2, rt0.c4)) AS NUMERIC) FROM rt0, vt0, t1, t0 WHERE (CAST((0x394c215a IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c1)))&(((('')) BETWEEN ((rt0.c1)) AND ((t0.c0))))) FROM t1, t0, vt0 WHERE (1582593702 COLLATE BINARY);SELECT CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE NOCASE FROM rt0, t0, vt0, t1; -- 0ms;
SELECT ((rt0.c0)||(rt0.c3)) COLLATE NOCASE FROM t1 WHERE ((('c虆쐔忏#B*_')>(((-1016071451)&(x'')))));SELECT ALL (~ (rt0.c3)) COLLATE BINARY, (((t0.c57 IN ())) NOT BETWEEN (NULL) AND (vt0.c1)), (((((((rt0.c0)OR(rt0.c0)))AND(t0.c57))))<=((rt0.c1 COLLATE NOCASE))) FROM vt0 WHERE ((((('')OR(CASE ''  WHEN x'' THEN 0.16425728629865333 WHEN NULL THEN x'' WHEN x'' THEN '' WHEN '0.5640919544465188' THEN 0.9394413099873873 WHEN x'' THEN NULL END)))OR(TYPEOF(0.5203373428393154))));SELECT DISTINCT CASE ((vt0.c0)=(rt0.c3))  WHEN CAST(vt0.c1 AS REAL) THEN COALESCE(rt0.c1, t0.c57) WHEN CASE rt0.c1  WHEN t0.c1 THEN rt0.c3 END THEN (- (t0.c57)) WHEN ((rt0.c2)>=('-960852643')) THEN (rt0.c0 IN (rt0.c2)) ELSE vt0.c0 COLLATE NOCASE END FROM t1, t0 WHERE (CAST((+ ('\7Hk/U~&')) AS TEXT));SELECT t0.c0 FROM t0, vt0, rt0, t1; -- 0ms;
SELECT ALL (~ ((- (NULL)))), (('0.6506446724482351') NOTNULL), (((- (t0.c1)))*((('1599932872')>(rt0.c4)))) FROM t1, vt0, rt0, t0 WHERE (CAST((((('+F,/ʵ')OR(0.7434524810693199)))OR('-1175605394')) AS NUMERIC)); -- 1ms;
SELECT DISTINCT ((json_patch(t1.c0, t0.c2)) BETWEEN (((t1.c0) BETWEEN ('ヴgQa9 ') AND (t0.c0))) AND (vt0.c0 COLLATE RTRIM)), CAST(((t0.c1)/(t0.c57)) AS BLOB), CASE rt0.c4  WHEN '995116262' COLLATE BINARY THEN t0.c57 COLLATE RTRIM WHEN t0.c0 COLLATE NOCASE THEN CAST(rt0.c2 AS BLOB) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c3))) THEN 'S\r' END FROM t1, rt0 WHERE ((((('1551155818')IS NOT('{gc')))&(((0.9993320744853751) NOT BETWEEN ('-534881516') AND ('~}O')))));SELECT (CASE WHEN t1.c0 THEN rt0.c4 END IN ()), (((LOWER(t0.c57)))>=((((((t0.c2)OR(NULL)))OR(rt0.c4))))), SUM(vt0.c1) FROM vt0, t0, t1, rt0 GROUP BY t1.c0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c2) NOTNULL))AND((t0.c1 IN ()))))AND(((((rt0.c2)OR(rt0.c4)))OR(t0.c57)))))OR(((vt0.c1)+(x'')))))AND(CASE WHEN t1.c0 THEN rt0.c4 ELSE rt0.c0 END)), (- (t0.c2)) COLLATE RTRIM, (((((t0.c0, rt0.c2, vt0.c1))!=((vt0.c0, rt0.c4, vt0.c1))))IS NOT(((rt0.c2)==(t0.c57)))) FROM t1, vt0, rt0 WHERE ((CAST('-2103259240' AS INTEGER) IN ()));SELECT DISTINCT (((((((rt0.c2))>=((rt0.c4))))OR(rt0.c4)))OR(CASE WHEN x'' THEN t0.c1 END)), json_valid((t0.c1 IN ())), (+ (t1.c0)) FROM vt0, t0, rt0, t1; -- 0ms;
SELECT DISTINCT (((((t0.c2)IS(t1.c0))))<>((((t1.c0) NOT BETWEEN (rt0.c0) AND (NULL))))) FROM t1, t0, vt0 NOT INDEXED, rt0 GROUP BY ((((((t0.c0)AND(vt0.c1)))OR(rt0.c2)))<>(((t1.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))) HAVING ((((rt0.c1) NOT NULL)) NOTNULL) ORDER BY rt0.c3 DESC; -- 0ms;
SELECT rt0.c1 COLLATE RTRIM FROM vt0, t0, rt0, t1 WHERE ('450636371') GROUP BY (((t0.c57, rt0.c1, rt0.c1)) BETWEEN ((((((t0.c0)OR(rt0.c1)))AND(rt0.c2)), (vt0.c1 IN ()), t1.c0 COLLATE NOCASE)) AND (((t0.c0 IN ()), ((0.8683112282172764) NOT BETWEEN (rt0.c1) AND (vt0.c1)), (NOT (rt0.c4))))) HAVING ((((CASE rt0.c1  WHEN rt0.c2 THEN t0.c2 END)OR(CASE WHEN t0.c1 THEN 0x229b4332 END)))OR(COUNT(rt0.c2))); -- 0ms;
SELECT DISTINCT AVG(((t1.c0) NOTNULL)), ((NULL) IS TRUE), ((((((vt0.c1)OR(rt0.c3)))AND(vt0.c1))) NOTNULL), ((((((rt0.c3)OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (AVG(t0.c2)) AND (0xfffffffffab1c398 COLLATE BINARY)), (((rt0.c2) NOTNULL) IN ()) FROM t0;SELECT 0.19954640779479837 FROM t1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)GLOB(rt0.c0)))OR((('595393314') NOT BETWEEN (t0.c57) AND (t0.c57)))))AND(COUNT(*))) FROM rt0 LEFT OUTER JOIN t0 ON ((((CASE WHEN rt0.c4 THEN '883528623' ELSE rt0.c4 END)AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END)))OR((((rt0.c1)) BETWEEN ((t0.c2)) AND ((t0.c57))))) FULL OUTER JOIN vt0 ON (NOT (((t0.c2) NOT BETWEEN (t1.c0) AND (rt0.c4)))) WHERE (TYPEOF((('-1811710933')>>(0x6bf86b7c)))) LIMIT -984932877 OFFSET -1701010405;SELECT DISTINCT (- ((t0.c57 IN (vt0.c0)))) FROM vt0;SELECT DISTINCT (~ (((t0.c57) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM rt0, t1, t0;SELECT (((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c3)))OR(t0.c2)))OR(t0.c57)) IN (CAST(rt0.c3 AS BLOB), t0.c57 COLLATE NOCASE)) FROM vt0, rt0, t0, t1 WHERE ((+ (CAST(0.334523127023133 AS REAL)))); -- 0ms;
SELECT (((((((((((rt0.c2, x'6bbd', t0.c1)) BETWEEN ((rt0.c0, rt0.c3, rt0.c2)) AND ((x'', vt0.c1, t0.c2))))AND((rt0.c1 IN ()))))AND(COALESCE(DISTINCT t0.c1, t0.c0))))AND(((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((t0.c57) NOT NULL))) FROM t0, vt0 WHERE ((((((((((('0.04857707407548151')AND(-1.148217308E9)))AND('kVb3')))OR('-1491578855')))OR('1628401684'))) NOT BETWEEN (COALESCE(DISTINCT '-1306442288', 0.0774530381696229, x'', NULL)) AND (((NULL)IS NOT('''>'))))) ORDER BY CAST(0.5874580504878834 AS BLOB) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((COUNT(*))AND(CAST(vt0.c0 AS NUMERIC))), CASE WHEN rt0.c3 COLLATE RTRIM THEN '0.5640919544465188' WHEN CASE t0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN t0.c2 THEN t0.c2 WHEN rt0.c4 THEN vt0.c1 ELSE vt0.c0 END THEN ABS(t0.c1) WHEN CASE WHEN rt0.c3 THEN t0.c0 END THEN ((vt0.c0)/('0.08754174307696383')) ELSE ((t0.c0) BETWEEN (t1.c0) AND ('9t')) END, (((t0.c1)<(t0.c57)) IN ()) FROM rt0, t0, vt0, t1; -- 1ms;
SELECT ALL ((-1439759056)AND(PRINTF(NULL, t0.c0, vt0.c1))), ((((t0.c2)AND(vt0.c0)))AND(t0.c0)), LAG(CASE (t0.c2 IN ())  WHEN vt0.c1 THEN ((t0.c0)*(t1.c0)) END, t0.c57, (NOT (t0.c2)) COLLATE NOCASE) OVER (), CAST(((vt0.c0)!=(rt0.c4)) AS REAL), SUM(INSTR(t0.c57, rt0.c0)) FROM t1, vt0, t0 WHERE (CAST(NULL AS REAL));SELECT ALL ((CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE t0.c2 END)<>(LIKELY(DISTINCT vt0.c0))), '-1931981714' COLLATE RTRIM COLLATE NOCASE, ((((t0.c0)AND(t0.c57)))<>((- (t0.c57)))) FROM rt0, vt0, t0 LIMIT -838603715; -- 0ms;
SELECT ALL ((json_object(rt0.c3, rt0.c0))-(json_valid(vt0.c0))), ((((vt0.c1) NOT NULL)) BETWEEN (((t0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) AND (CASE WHEN t0.c2 THEN rt0.c0 ELSE rt0.c0 END)), (0.8617162734695811 IN ()) FROM t0 NOT INDEXED, rt0, vt0 WHERE (((((''))<=((x''))) IN (((((1748359375)OR(NULL)))AND(NULL)), ((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT MIN(((t0.c2) BETWEEN (rt0.c1) AND (rt0.c4))), ((((((((t0.c57 COLLATE BINARY)AND(NULL)))AND(((t0.c57) IS FALSE))))AND((((x'7ee9')) NOT BETWEEN ((t0.c1)) AND ((NULL))))))AND(t0.c2 COLLATE BINARY)), MAX(((t1.c0) NOT BETWEEN (t0.c0) AND ('-1889881764'))) FROM t0 LIMIT -1424693478 OFFSET -2068021807;SELECT DISTINCT ((t1.c0 IN ()) IN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c57)))) FROM vt0, t1, rt0 WHERE (((('1210753493', x'4b80', x'6e2f')) BETWEEN ((((x'')%(0.25821977007547803)), ((0.24191669239706093) NOT BETWEEN ('dls\rE젮(q') AND (NULL)), ('1818688507' IN ()))) AND ((-1998793309 COLLATE BINARY, ((((((((x'f5f4')AND('dM')))OR(0.6403813537735463)))AND(x'165d')))OR('-2088859529')), ((((0.31143580752271327)AND('Q꽮z7O9')))AND(x'')))))) ORDER BY ((rt0.c1) BETWEEN (((t0.c0) NOTNULL)) AND ((+ (rt0.c3)))) ASC  NULLS FIRST;SELECT DISTINCT CAST(((rt0.c0) BETWEEN (0.035860530441670146) AND (rt0.c2)) AS TEXT), (((t0.c57, vt0.c1, vt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c0)), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0)), CAST(rt0.c3 AS INTEGER))) AND ((' ', (rt0.c2 IN ()), t1.c0))), ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))) IS FALSE) FROM vt0 WHERE ((((x'7963')) BETWEEN ((MIN(0.1670858460150103, '-675986906', '', ''))) AND ((((NULL)%('-1314863536'))))));SELECT DISTINCT FIRST_VALUE(((((((((((t1.c0)||(t1.c0)))OR(((t1.c0)AND(t1.c0)))))OR(NULL)))AND((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))OR(((t1.c0) ISNULL)))) OVER () FROM t1; -- 0ms;
SELECT ALL AVG(((rt0.c4)&(rt0.c1))) FILTER(WHERE (((t0.c1 IN ()))&(((((((((rt0.c1)AND(t1.c0)))AND(0.683922392666035)))OR(NULL)))OR(rt0.c3))))) OVER (), (((((((rt0.c1)OR(rt0.c0)))AND(t0.c1))))==(((((t0.c1)) BETWEEN ((t0.c0)) AND ((t1.c0)))))), RANK() OVER () FROM rt0;SELECT ((t0.c57)-(rt0.c3)) COLLATE BINARY FROM vt0, rt0, t1 NATURAL JOIN t0 WHERE (((((('55700709') IS TRUE)))>=((1001536728)))) LIMIT -632267336; -- 0ms;
SELECT DISTINCT t0.c2 FROM t0, vt0, rt0; -- 0ms;
SELECT ALL ((((CAST(rt0.c3 AS REAL))AND(vt0.c0 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)))) FROM vt0;SELECT DISTINCT t0.c0 FROM t1, t0, vt0, rt0 WHERE (TYPEOF((+ (x'')))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM t1, rt0, vt0 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT (((((vt0.c0)*(rt0.c2))))=((((((((((t1.c0)AND(t1.c0)))OR(vt0.c0)))OR(t1.c0)))AND('1127576832'))))) FROM t0, vt0, t1, rt0; -- 0ms;
SELECT (((((rt0.c4))<=((t0.c0)))) NOT BETWEEN (((t0.c1)+(rt0.c2))) AND (vt0.c1)) FROM vt0, t1, rt0, t0 WHERE (NULLIF(TRIM(DISTINCT 0.9891998058329882), ((0.567845147579054)GLOB(x'')))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT t0.c1), ((t1.c0) BETWEEN (rt0.c4) AND (vt0.c1)) COLLATE RTRIM, ((t0.c0 IN ()) IN (CAST(vt0.c1 AS TEXT))) FROM rt0 WHERE (CAST((((('0.7058213015607988')OR(x'')))AND(NULL)) AS TEXT));SELECT ALL (((t0.c57 IN ())) NOT BETWEEN (CASE rt0.c1  WHEN t0.c2 THEN rt0.c0 END) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM t1, rt0;SELECT DISTINCT ((((CAST(x'' AS BLOB))AND(((t0.c1)-(rt0.c3)))))OR(SUM(t0.c0))), json_remove((rt0.c0 IN ()), (((rt0.c2, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((t1.c0, rt0.c1, rt0.c3)))), CASE t1.c0  WHEN rt0.c2 THEN rt0.c3 END COLLATE BINARY, (((((x'', vt0.c0, rt0.c0))<((vt0.c0, vt0.c1, t1.c0)))) IS TRUE), (UNLIKELY(rt0.c1) IN ()) FROM t1, vt0 WHERE (CAST((((((((('382499125')OR('')))OR(1514248183)))AND(NULL)))OR(0.2097535310023273)) AS TEXT));SELECT ALL (+ (DATETIME(rt0.c4, rt0.c4, vt0.c0, rt0.c0, 1.896630205E9))) FROM vt0 LIMIT -69131960;SELECT NULL FROM rt0, t1, vt0; -- 0ms;
SELECT ALL COUNT(GROUP_CONCAT((((rt0.c4, t0.c2, x'', rt0.c4, t1.c0)) BETWEEN ((t0.c1, rt0.c1, NULL, vt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c0, rt0.c3, rt0.c0))))), (((((vt0.c0))<((rt0.c3)))) IS TRUE), MIN(rt0.c3) COLLATE NOCASE COLLATE BINARY FROM vt0, t1, rt0 WHERE (UNLIKELY(((-1.175605394E9)>(NULL))));SELECT GROUP_CONCAT(((((rt0.c3)OR(t0.c0)))OR(t0.c2))) FILTER(WHERE (- (CASE WHEN vt0.c1 THEN '' WHEN rt0.c4 THEN t0.c2 WHEN vt0.c1 THEN rt0.c3 END))) OVER (), CASE (- (vt0.c1))  WHEN (vt0.c0 IN ()) THEN ((vt0.c0)IS(rt0.c0)) ELSE (rt0.c3 IN ()) END, CASE WHEN ((-170960624) IS TRUE) THEN ((rt0.c3)<=(t0.c1)) WHEN rt0.c1 THEN (NOT (t0.c1)) WHEN CAST(NULL AS NUMERIC) THEN ((t1.c0) ISNULL) ELSE ((t0.c1)IS NOT(rt0.c0)) END FROM rt0, t0 GROUP BY ((t0.c2 COLLATE NOCASE) BETWEEN (((x'') NOTNULL)) AND (CAST(rt0.c0 AS BLOB))) HAVING (((((rt0.c4) ISNULL)))=((((vt0.c0)LIKE('1228135464')))));SELECT DISTINCT CASE WHEN ((t0.c0)>=(t0.c57)) THEN CASE rt0.c0  WHEN vt0.c1 THEN rt0.c4 END ELSE t0.c2 COLLATE NOCASE END, x'', ((((((((LIKELY(t0.c57))AND(CASE WHEN t0.c57 THEN rt0.c0 ELSE rt0.c2 END)))AND(((((((((NULL)AND(t1.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(t1.c0)))))AND(((vt0.c1)%(t0.c57)))))OR(CASE rt0.c3  WHEN vt0.c1 THEN t0.c2 END)) FROM vt0, t1;SELECT DISTINCT (((((((t1.c0)OR(1.516396495E9)))AND(t0.c57)), (NOT (vt0.c0)), ((t0.c1) NOTNULL)))!=((CASE rt0.c2  WHEN vt0.c1 THEN t0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t1.c0 THEN NULL WHEN rt0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 END, ((t0.c0) BETWEEN (t1.c0) AND (rt0.c1)), ((rt0.c3) BETWEEN (vt0.c0) AND (vt0.c1))))), (~ (t1.c0)), (((((t0.c1)LIKE(vt0.c0))))<((CAST(t0.c2 AS NUMERIC)))) FROM vt0, t1 WHERE (NULL);SELECT (((t0.c57)<=(t0.c1)) IN ()) FROM t1 WHERE ((((('956569911')LIKE(x'')))>('-119981182' COLLATE RTRIM))) LIMIT -1356418111; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), t0.c2, '-915711701' FROM t0, t1, rt0 WHERE (TRIM(((NULL)<('0.5697413818333414')))) ORDER BY vt0.c1  NULLS LAST, (UNLIKELY(t0.c57) IN ()) DESC  NULLS LAST;SELECT x'' FROM vt0 ORDER BY (((+ (t0.c1))) BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (CAST(rt0.c3 AS BLOB)))  NULLS FIRST;SELECT ALL (((rt0.c1)==(rt0.c3)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1)>>(vt0.c0))) BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((rt0.c1) NOT BETWEEN (rt0.c3) AND (t0.c1)))) FROM rt0, t0, t1, vt0 WHERE ((+ (((((0Xffffffffc0d1b49a)AND(x'')))OR('-250148638'))))); -- 0ms;
SELECT (+ ((+ (t0.c0)))) FROM t0, t1, rt0 WHERE (((CAST('0.30336794855530336' AS NUMERIC)) BETWEEN ('-1482613313' COLLATE NOCASE) AND ((NULL IN ())))); -- 0ms;
SELECT ALL MIN((t0.c1 IN ())) FROM rt0, vt0, t1 ORDER BY ((t0.c2 IN ()) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT (COUNT(t0.c0))) FROM vt0 WHERE ((~ (((NULL) BETWEEN (x'b4eb') AND (NULL)))));SELECT ALL (((t0.c1) NOT BETWEEN (x'') AND (t0.c0)) IN ()), ((CAST(rt0.c3 AS INTEGER))<=((NOT ('695154834')))), ((((vt0.c0) ISNULL))GLOB(x'')) FROM t1 WHERE (x'6fa74d4d' COLLATE RTRIM);SELECT (~ (MIN(t0.c2, t0.c2, x'', t0.c2))) FROM t1;SELECT ALL ((((rt0.c4 IN ()), NULL, ((0.6165843268323051)&(rt0.c1))))>(((('50LV*L') IS FALSE), ((rt0.c1)+(rt0.c4)), (~ (t1.c0))))), (- (x'333f')), x'' FROM t1, t0 GROUP BY vt0.c0 HAVING NULL ORDER BY ((((((((t0.c57)AND(t0.c57)))OR(t0.c2)))OR(rt0.c2 COLLATE RTRIM)))AND(SQLITE_SOURCE_ID()))  NULLS FIRST;SELECT ALL CAST(((t0.c57) ISNULL) AS TEXT) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (+ (t0.c1 COLLATE BINARY)) FROM vt0;SELECT DISTINCT MAX((((vt0.c0))<(('-802664273'))) COLLATE BINARY) FROM t0 INTERSECT SELECT ALL ((((t0.c0) NOT NULL)) BETWEEN (CASE WHEN x'43b1' THEN 0.9860183742027456 END) AND ((~ (vt0.c1)))) FROM t1, vt0 NOT INDEXED, t0 WHERE (CASE WHEN ((0Xffffffffedda32c4)*('')) THEN CASE WHEN x'' THEN -1175866772 WHEN 0.8310614093179086 THEN NULL WHEN x'' THEN -723881822 ELSE NULL END ELSE NULL END);SELECT DISTINCT NTILE(((((rt0.c2)>(t0.c0)))>=(0.5035648877635037))) OVER ( ROWS BETWEEN t0.c57 PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS), CAST(((t0.c57)+(NULL)) AS INTEGER), ((NULL) BETWEEN ((((('')OR(rt0.c1)))AND(t0.c1))) AND (CAST(t0.c1 AS NUMERIC))) FROM vt0, t0, rt0, t1 WHERE (((((NULL)*(0xffffffff8501a045)))AND(0xffffffffa635c1a6 COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT ((rt0.c3 COLLATE BINARY) ISNULL) FROM t1 WHERE ((~ (x'')) COLLATE RTRIM);SELECT ALL t0.c1, CAST(((((x'')AND(t0.c0)))OR(t0.c57)) AS BLOB), t0.c2 COLLATE RTRIM FROM t1, t0, rt0; -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE (((2099655024 IN ('-802664273')) IN ())); -- 0ms;
SELECT SUM(((rt0.c2)>(rt0.c1))) OVER () FROM t1;SELECT DISTINCT NTILE(((((t0.c57) IS TRUE))IS((vt0.c1 IN ())))) OVER ( RANGE  CURRENT ROW) FROM vt0, rt0, t1, t0 WHERE (0.5524841442765769); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN '''bQ&?t53J' END) BETWEEN ((- (x'18cf'))) AND (CASE WHEN rt0.c1 THEN t1.c0 WHEN vt0.c1 THEN t0.c57 WHEN rt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN rt0.c3 THEN rt0.c1 END)), t0.c0 COLLATE BINARY, (((((t0.c2) IS TRUE)))<=(((0.6004440051516161 IN ())))) FROM rt0, t0, vt0;SELECT ALL CAST((rt0.c2 IN ()) AS NUMERIC), COALESCE(DISTINCT (((('8B')OR(rt0.c3)))OR(rt0.c1)), (~ (t0.c2))), ((((((((CAST(t0.c0 AS BLOB))OR(((t0.c0)<>(vt0.c1)))))OR(((rt0.c3) IS FALSE))))OR(CAST(t0.c2 AS REAL))))OR(NULL)) FROM t0, rt0 WHERE (((((698161424)OR(0.5256983828178899)))<>(LIKE(NULL, x'')))) GROUP BY (((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) IN ()), ((NOT (vt0.c1)) IN ()), t0.c2 HAVING ((UPPER(DISTINCT t1.c0)) BETWEEN ((- (t0.c57))) AND (((rt0.c3) NOT BETWEEN (rt0.c2) AND (t0.c0))));SELECT ALL CAST(((t0.c1)<=(t0.c0)) AS INTEGER), (((UPPER(t0.c2), ((vt0.c0) IS FALSE), LIKELIHOOD(rt0.c3, 0.2706531120048642)))=((t0.c0 COLLATE BINARY, ((t0.c57) IS FALSE), ((((rt0.c3)OR(t0.c1)))AND(rt0.c1))))), (((GROUP_CONCAT(rt0.c3), '2074347504', ((t1.c0) IS FALSE)))==((((rt0.c3)&(rt0.c4)), 0xffffffffb9edaf6e, ((rt0.c1)+(0xfffffffff11708e2))))) FROM t1 WHERE (CASE WHEN (('1101237347') NOTNULL) THEN CASE 0.23210383508618748  WHEN x'' THEN '1394403300' WHEN x'4d3d' THEN '' WHEN '9223372036854775807' THEN NULL ELSE -304467260 END WHEN LIKELY('候\nk') THEN 0.42292988841556245 COLLATE NOCASE WHEN CASE WHEN 0.7670977476922317 THEN x'' ELSE NULL END THEN CASE '}痬'  WHEN x'' THEN '0.6315575991518514' END WHEN '*வa[' THEN (NOT (x'')) WHEN ((((NULL)AND(0.7010684748482316)))AND('1526053236')) THEN CASE WHEN 0.796979313284346 THEN NULL ELSE 0.5192686661573738 END ELSE ((0xfffffffff3cf51d3)<(NULL)) END);SELECT DISTINCT ((((((t0.c2) ISNULL))OR(((rt0.c2)*(vt0.c1)))))OR(((rt0.c1)IS NOT(0.9096282541252928)))), ((LIKELIHOOD(rt0.c4, 0.2161318173969322)) NOTNULL), (~ (((t0.c57)AND(vt0.c0)))) FROM rt0, t0, t1, vt0 GROUP BY t0.c0 HAVING ((((((((((((CAST(t0.c1 AS REAL))AND(x'')))AND((- (rt0.c4)))))OR(((((((((rt0.c2)AND(vt0.c1)))OR(t0.c57)))OR(vt0.c1)))AND(1.135521454E9)))))AND(CAST(t0.c2 AS INTEGER))))AND(((t1.c0)>(rt0.c1)))))AND(IFNULL(DISTINCT rt0.c3, rt0.c2))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS BLOB))>=((('(< V')AND(t0.c57)))), MAX((~ (rt0.c2))), (((((((((t0.c0)OR(t0.c2)))OR(vt0.c0)))OR(rt0.c0)))AND(t0.c57)) IN ()) FROM t1, t0, rt0, vt0 GROUP BY ABS(DISTINCT rt0.c0) COLLATE NOCASE HAVING ((((CAST(rt0.c4 AS REAL))AND(CAST(t0.c1 AS INTEGER))))OR(((vt0.c1)OR(rt0.c1)))); -- 0ms;
SELECT ALL IFNULL(DISTINCT (((vt0.c0, t0.c1, t0.c57)) NOT BETWEEN ((rt0.c4, rt0.c3, x'')) AND ((rt0.c1, 0Xffffffffe7981e89, vt0.c1))), ((t0.c0)==(rt0.c3))), CAST(((t0.c57)LIKE(t0.c1)) AS INTEGER), AVG(((rt0.c3)<=(t0.c57))) OVER () FROM t0, t1, vt0, rt0; -- 0ms;
SELECT COUNT((- (t0.c2))) FROM t1, t0, vt0, rt0; -- 0ms;
SELECT 'xaK', CASE CAST(vt0.c1 AS NUMERIC)  WHEN vt0.c1 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) END, LAST_VALUE((((((rt0.c1, t0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((0.19057671383002805, x'f9ff', x'')))) NOTNULL)) OVER () FROM rt0, vt0, t1, t0 WHERE ((((((NULL))>=((x''))))GLOB(((123421349)>=('^NEwOD皦'))))); -- 0ms;
SELECT ALL ((((t1.c0) NOT BETWEEN (233321262) AND (vt0.c1))) ISNULL) FROM rt0, t0, t1, vt0 WHERE (((((x'') ISNULL))||(CASE WHEN 0.10331376947891457 THEN 0.14600456584858534 WHEN 'TGZJG1' THEN NULL WHEN '1516396495' THEN NULL ELSE NULL END))); -- 1ms;
SELECT ALL rt0.c1 FROM t1, t0, rt0 WHERE (((((NOT (NULL))))<>((CAST(x'8d1b' AS REAL))))); -- 0ms;
SELECT DISTINCT (((0.2036261825004534 IN (rt0.c3))) IS FALSE) FROM rt0, vt0 WHERE (CAST(((('546025007'))>((x'693a'))) AS REAL)); -- 0ms;
SELECT ALL LAST_VALUE((t1.c0 COLLATE BINARY IN ())) OVER ( PARTITION BY ((((rt0.c4)<(vt0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c0) NOTNULL))), ((((rt0.c2)IS NOT(rt0.c4)))GLOB(((t1.c0) ISNULL))) GROUPS BETWEEN  UNBOUNDED PRECEDING AND CASE ((NULL)LIKE(t0.c2))  WHEN LIKELY(DISTINCT rt0.c4) THEN '' WHEN (+ (rt0.c1)) THEN ((rt0.c4) ISNULL) WHEN '247689258' COLLATE BINARY THEN rt0.c2 COLLATE NOCASE END FOLLOWING EXCLUDE GROUP) FROM t1;SELECT DISTINCT ((((((((((vt0.c1) ISNULL))OR(CAST(rt0.c0 AS TEXT))))OR(SUM(rt0.c0))))AND(((vt0.c1)LIKE(t0.c57)))))AND(((t0.c57) NOT BETWEEN (t0.c0) AND (t0.c57)))) FROM rt0, t1, vt0 WHERE (json_valid(((NULL) NOT NULL)));SELECT ((CASE WHEN rt0.c3 THEN vt0.c0 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c0 THEN '-1494727787' WHEN -1314863536 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c4 END)IS NOT(((t0.c57)%(rt0.c3)))) FROM rt0 WHERE (((((((1044592592)AND(0.75218303840263)))OR(x'')))IS NOT(CASE WHEN '619479451' THEN '-1889881764' WHEN 0Xfffffffffe0dd68a THEN 0.15431661713789835 WHEN NULL THEN x'7fb6' END)));SELECT DISTINCT (- (((rt0.c0) NOT NULL))) FROM vt0, t0 NOT INDEXED, t1 GROUP BY ((((t0.c0)LIKE(t0.c2)))<<((rt0.c1 IN ())));SELECT DISTINCT ((t0.c0 COLLATE NOCASE)IS(((vt0.c0) IS FALSE))) FROM rt0, t1, t0, vt0; -- 0ms;
SELECT DISTINCT json_array_length(rt0.c1, vt0.c0) COLLATE NOCASE FROM vt0, t0, t1, rt0 WHERE ((NOT (NULLIF('|섄dꪫgeJA6', 1.70192443E8)))); -- 0ms;
SELECT ALL (((t0.c2)) BETWEEN (((((t1.c0, t0.c1, 'Qw9i?')) NOT BETWEEN ((t0.c2, rt0.c3, t0.c57)) AND ((rt0.c0, rt0.c3, rt0.c2))))) AND ((t1.c0 COLLATE NOCASE))) FROM rt0, vt0, t1, t0 WHERE ((((0.8727560726753418)>=(NULL)) IN (CAST(-8.68499196E8 AS REAL)))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))&('-766938809')) FROM rt0, t0, vt0, t1 WHERE ((CASE ''  WHEN 0Xfffffffff7f2e818 THEN '' ELSE NULL END IN ())); -- 0ms;
SELECT (((((((((('p75A]yXd') NOT NULL))AND(CASE rt0.c2  WHEN t0.c0 THEN vt0.c1 WHEN 0.5685881982019976 THEN rt0.c4 WHEN t0.c2 THEN rt0.c1 ELSE rt0.c1 END)))OR((NULL IN ()))))AND((NOT (0xffffffffbaf080c7)))))AND((NOT (rt0.c3)))), (+ (CAST(rt0.c4 AS REAL))), (TRIM(DISTINCT rt0.c3, '195913149') IN ()) FROM rt0, vt0, t0, t1 WHERE (json_array_length((0.5049191201213962 IN ()))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0, vt0, rt0, t1; -- 0ms;
SELECT DISTINCT HEX(DISTINCT (t0.c2 IN ())) FROM t0 LIMIT -470365506 OFFSET -925762423; -- 0ms;
SELECT DISTINCT rt0.c0 FROM t1, vt0, t0;SELECT COUNT(*) OVER ( ORDER BY ((t0.c1 COLLATE BINARY)OR(rt0.c1))  NULLS LAST) FROM t0, t1;SELECT CAST(((rt0.c4) BETWEEN (t0.c0) AND (t0.c57)) AS NUMERIC) FROM vt0 WHERE (((UPPER(DISTINCT NULL)) IS FALSE)) ORDER BY ((t0.c0)GLOB((+ (vt0.c0))))  NULLS LAST, ((((x'')AND(0xffffffffd8475e06)))AND(t0.c0 COLLATE NOCASE))  NULLS LAST;SELECT ALL ((TOTAL(rt0.c0))IS NOT((((rt0.c4)) BETWEEN ((NULL)) AND ((rt0.c3))))) FROM vt0;SELECT DISTINCT ((CASE WHEN rt0.c0 THEN t1.c0 ELSE vt0.c0 END)+((((t0.c1))<=((rt0.c1))))) FROM vt0, rt0, t0;SELECT DISTINCT ((t0.c0 COLLATE BINARY)<<(((((t0.c0)OR(vt0.c1)))OR(t0.c57)))) FROM rt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (x'') AND ('-1767742307')) THEN (+ (x'')) WHEN (~ (2115345889)) THEN ((x'ecd5')%(NULL)) WHEN 9.56569911E8 COLLATE BINARY THEN (('-562255423')LIKE(NULL)) ELSE NULL END) ORDER BY CASE WHEN ((('199868292'))>=((vt0.c0))) THEN ((vt0.c0) BETWEEN (rt0.c1) AND ('-1321748459')) WHEN (t0.c2 IN ()) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (0.7994051990458246)) WHEN ((((t1.c0)AND(rt0.c1)))AND(rt0.c3)) THEN rt0.c4 COLLATE NOCASE ELSE CASE WHEN t0.c1 THEN rt0.c0 END END DESC  NULLS FIRST, (((((((((((vt0.c0)OR(rt0.c4)))AND(t0.c57)))OR(t1.c0)))AND(0.059982051355355726))))<>(((((0x6bf53e25, vt0.c0, t0.c2))>((rt0.c4, t1.c0, rt0.c1))))));SELECT DISTINCT NTH_VALUE(NULL, (((NULL)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND (((- (vt0.c0)))))) OVER ( ORDER BY ((COALESCE(DISTINCT rt0.c2, t0.c1))!=(((((t0.c57)OR(t0.c2)))AND(t0.c57)))), t0.c57  NULLS LAST) FROM vt0, t1 WHERE (((((0.4119889678219164)<<(0.6577554508660874))) BETWEEN (CAST(0.9170983396983494 AS INTEGER)) AND ((- (x'f85b')))));SELECT DISTINCT (((('245469758')AND((vt0.c0 IN ()))))AND(((((((((t0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(rt0.c4)))AND(t0.c57)))), ((((((((((t1.c0) BETWEEN (rt0.c1) AND (t0.c0)))OR(CASE rt0.c0  WHEN t0.c1 THEN t0.c57 END)))AND(0X41a38c63 COLLATE RTRIM)))OR((((rt0.c4, rt0.c0, t0.c0)) BETWEEN ((rt0.c0, x'', rt0.c3)) AND ((t0.c57, rt0.c3, t1.c0))))))AND('')), CUME_DIST() OVER () FROM rt0, t1 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((t0.c0) BETWEEN (t1.c0) AND (rt0.c2))) AND (t0.c1))  NULLS FIRST LIMIT 546031371;SELECT ALL vt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON ((((t0.c2)<(rt0.c4))) NOT BETWEEN (((rt0.c0)>=(t0.c1))) AND (((x'')&(vt0.c1)))) INNER JOIN t1 ON ((rt0.c2 COLLATE BINARY)&(TRIM(rt0.c2, rt0.c0))) CROSS JOIN vt0 ON x'';SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (t0.c1) AND (t0.c2)))<=(((x'')||(rt0.c1)))) FROM t1, t0, rt0; -- 0ms;
SELECT ALL ((COUNT(*))>=(CASE WHEN rt0.c2 THEN t0.c1 ELSE vt0.c1 END)) FROM t0, vt0, rt0, t1 WHERE (CAST(CAST('-1724204966' AS NUMERIC) AS INTEGER)); -- 0ms;
SELECT CASE WHEN ((t0.c0) IS TRUE) THEN GROUP_CONCAT(t1.c0) WHEN CAST(t0.c1 AS INTEGER) THEN (t0.c2 IN ()) WHEN (NOT (rt0.c3)) THEN CAST('' AS REAL) ELSE CAST('0.7670977476922317' AS NUMERIC) END, ((TOTAL(t0.c57)) NOT BETWEEN (((t1.c0) ISNULL)) AND (1.551701497E9 COLLATE NOCASE)), (((((((t1.c0)OR(rt0.c0)))OR(rt0.c1)), x'54ae', SUM(vt0.c1)))!=(((+ (rt0.c4)), CASE '-1409862467'  WHEN rt0.c1 THEN rt0.c3 END, t0.c2))), NULL, CAST(CAST(rt0.c2 AS REAL) AS REAL) FROM vt0, rt0 WHERE ((((((+ (0.04815388651982855)))AND((~ (0.345823968023409)))))AND(((NULL) BETWEEN ('qW0j') AND ('-2105690757')))));SELECT ALL (((+ (rt0.c4))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))) FROM t1 WHERE (((((((((0.4733258238665743)OR(0.12238686466807158)))OR(0.7449522504719275)))AND(NULL)))AND(0.6540464765591298)) COLLATE NOCASE);SELECT (((t0.c1)) NOT BETWEEN ((((t1.c0) BETWEEN (t0.c57) AND (rt0.c1)))) AND ((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))) FROM t0, rt0, vt0 NOT INDEXED GROUP BY TRIM(DISTINCT ((rt0.c3)>(-744297030)), t1.c0), ((t0.c2) IS TRUE) COLLATE BINARY COLLATE NOCASE, (((~ (t0.c57)))==((t0.c2 IN ()))) ORDER BY ((((t0.c2)OR(rt0.c2)))AND(rt0.c4)) COLLATE NOCASE DESC  NULLS FIRST, x'' DESC  NULLS FIRST;SELECT ALL ((((vt0.c0)AND(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)))AND((~ (rt0.c3)))) FROM t1, vt0, rt0, t0 WHERE (CAST(CASE '0.18688815301943473'  WHEN 0.43497688537997703 THEN '929246782' END AS REAL)); -- 0ms;
SELECT ALL ((((t0.c1)IS(x'')))>=((((t0.c0, rt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, vt0.c1)) AND ((t0.c2, rt0.c4, t0.c0))))), (t0.c1 COLLATE NOCASE IN ()), SUM(x'b1dc'), GROUP_CONCAT(CAST(rt0.c3 AS BLOB)) OVER (), TOTAL(TRIM(rt0.c1, t0.c2)) FROM t1, rt0, t0, vt0 WHERE ((((~ (0.6056871375737543))) IS TRUE)) LIMIT 1071766227 OFFSET -726032158; -- 0ms;
SELECT DISTINCT SUM(((NULL) NOT BETWEEN (rt0.c0) AND (vt0.c1))) OVER ( ROWS vt0.c0 PRECEDING) FROM t1, rt0, vt0, t0; -- 0ms;
SELECT CASE WHEN CAST(rt0.c4 AS INTEGER) THEN COUNT(rt0.c1) END FROM vt0, rt0; -- 0ms;
SELECT ALL LAG(rt0.c1, (+ (((NULL) BETWEEN (rt0.c4) AND (t0.c1)))), MIN(NULL, CAST(rt0.c0 AS TEXT))) OVER () FROM t0, rt0, t1, vt0 GROUP BY 0.5004404004284265, '', (((t0.c57)) BETWEEN ((((((rt0.c0)AND(t0.c2)))AND(vt0.c0)))) AND ((t0.c0 COLLATE RTRIM))), (((((rt0.c2 IN (rt0.c1, rt0.c3)))AND((((vt0.c1, t0.c57, vt0.c0))>((rt0.c4, rt0.c1, vt0.c0))))))OR(((rt0.c1) IS FALSE))), ((ABS(DISTINCT t0.c1))<(t0.c2 COLLATE RTRIM)), t0.c57, x'1eae' HAVING ((LOWER(DISTINCT t0.c0)) NOT BETWEEN (((t0.c57) NOT BETWEEN (rt0.c4) AND (t0.c0))) AND ((- (rt0.c0)))); -- 0ms;
SELECT NULL FROM vt0 ORDER BY ((CASE vt0.c1  WHEN rt0.c4 THEN t0.c57 ELSE t0.c2 END)AND('T!7]d}hw'))  NULLS LAST, (((t0.c57, rt0.c3, t0.c0))>=((vt0.c1, t0.c2, rt0.c0))) COLLATE BINARY ASC;SELECT (rt0.c3 IN (t0.c1)) COLLATE NOCASE, ((rt0.c3 IN ()) IN (AVG(t0.c2), CASE WHEN vt0.c1 THEN t0.c2 ELSE rt0.c3 END)), (NOT (((vt0.c0)LIKE(vt0.c0)))) FROM vt0, rt0, t0, t1 WHERE (((((0.34761061055187126)IS NOT(NULL)))<<(CASE -676847038  WHEN NULL THEN x'082d' ELSE 0.19897360708587242 END))); -- 0ms;
SELECT DISTINCT (((((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1))))!=((t0.c1 COLLATE NOCASE))) FROM rt0, vt0, t1, t0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT 440789926, load_extension(vt0.c0)) FROM t0, vt0, rt0 NOT INDEXED, t1 WHERE (PRINTF(CASE x'be83'  WHEN 0.3260023113102378 THEN x'98ac' ELSE x'bc3d' END, UNLIKELY('?v'), (('')LIKE(x'')), ((NULL) NOT BETWEEN (0.5961207220220583) AND (0.06374608454859121)), ((0X519ffc7d)<<(NULL)), CAST(x'' AS INTEGER), 0Xfffffffff8d93b82 COLLATE BINARY)) GROUP BY ((t0.c0) NOT BETWEEN ((~ (t0.c57))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c1)))) HAVING (((+ (rt0.c2)))*(CASE WHEN t0.c1 THEN rt0.c4 WHEN t0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c0 END)) ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN rt0.c1 THEN t0.c0 ELSE ((t0.c1)%(NULL)) END; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY (((t0.c57)) NOT BETWEEN ((LIKELIHOOD(t0.c0, 0.05052537289953285))) AND ((t0.c1 COLLATE NOCASE)))  NULLS LAST) FROM t1, rt0, t0 LIMIT -596197429 OFFSET -802664273; -- 0ms;
SELECT ALL FIRST_VALUE((rt0.c1 IN ())) OVER (), (((rt0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((((rt0.c2)|(rt0.c3))))), ((((rt0.c0)/(vt0.c1)))IS(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)) FROM t0, rt0, t1, vt0; -- 1ms;
SELECT ALL (((((rt0.c3))<((x''))))IS(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)), CAST(MAX(rt0.c4) AS TEXT), ((('-1227807674')) BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c2))) AND ((((rt0.c1) IS FALSE)))) FROM vt0 LIMIT -1 OFFSET 1198913616;SELECT ALL SQLITE_VERSION() FROM rt0, t1, t0 NATURAL JOIN vt0 WHERE ((((0.285036066361124)|(0Xffffffff926d4e16)) IN ())); -- 0ms;
SELECT CHAR(((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4))), (((CAST(t1.c0 AS NUMERIC)))>=(((x'' IN (t0.c2))))), AVG(((t0.c0) NOTNULL)) FROM rt0, vt0, t0, t1 WHERE (((((('{棿t6'))<((NULL)))) BETWEEN (((0Xffffffff9ee9643a)AND('0.5632417284206288'))) AND ((x'' IN ('-89013352'))))); -- 0ms;
SELECT DISTINCT ((((t1.c0)AND(t0.c2)))>((NOT (t0.c2)))), ((t0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE NOCASE, CASE WHEN (t0.c57 IN ()) THEN ((t0.c1) BETWEEN (t0.c1) AND (t0.c2)) WHEN ((((((((rt0.c1)OR(rt0.c2)))AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c3)) THEN (NOT (t0.c2)) WHEN (rt0.c2 IN ()) THEN (- (0.09604709527962596)) ELSE vt0.c0 COLLATE BINARY END FROM t0, t1, rt0 WHERE ((~ (((x'c443')>>(0.6611084667274632)))));SELECT DISTINCT ((((((((((t1.c0)LIKE(t0.c0)))AND((((t0.c2, t1.c0, vt0.c1, vt0.c0, t1.c0)) NOT BETWEEN ((rt0.c3, t0.c2, t0.c2, t0.c2, rt0.c1)) AND ((rt0.c4, rt0.c0, t0.c2, rt0.c0, rt0.c3))))))OR(((0xffffffffbb8f9824) BETWEEN (t0.c1) AND (rt0.c2)))))OR(((t0.c1)AND(t0.c0)))))AND(((rt0.c3)%(rt0.c3)))) FROM vt0, t0, rt0, t1 WHERE (CASE WHEN 0.520806083490087 THEN x'' ELSE 0.8778944089738046 END COLLATE BINARY) LIMIT 670086103 OFFSET 1040280401; -- 0ms;
SELECT (((((((rt0.c4))==((t0.c57))))OR(((((t0.c0)AND(NULL)))AND(t0.c2)))))OR(rt0.c3)) FROM vt0, t0, rt0, t1 WHERE ((((0.7670977476922317 IN (NULL)))GLOB((('')>=(1092877486))))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (((t0.c1))>=((vt0.c1))), ((((((((NULL)AND(t0.c0)))OR(t0.c57)))AND(t0.c0)))OR(x''))) FROM t1 WHERE ((NULL IN ()));SELECT ALL CASE WHEN ((t0.c0)<<(vt0.c0)) THEN 1.514248183E9 WHEN ((vt0.c0)-(vt0.c0)) THEN SUM(x'') WHEN CASE WHEN '-664916892' THEN rt0.c3 END THEN AVG(rt0.c4) END, COUNT(t0.c0) OVER (), CAST(((rt0.c0)<=(')駬\Am')) AS NUMERIC) FROM vt0, t0 LIMIT -1491578855 OFFSET 1117147241;SELECT ALL ((((t0.c2) ISNULL)) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)))) FROM vt0, rt0, t1;SELECT ALL (NOT ((rt0.c1 IN (rt0.c1)))) FROM rt0, vt0, t0, t1 WHERE (((('480102879', 0.2134655755635788, NULL, NULL, NULL)) NOT BETWEEN ((LIKELY(DISTINCT 0.357068034791155), '', (NOT ('~q')), ABS(NULL), ((((0.48426766238044294)OR('')))OR(NULL)))) AND ((CASE WHEN '' THEN NULL WHEN '1533504920' THEN -1692660348 WHEN x'' THEN '*/7QqC>' END, load_extension(0X607ed853), (NULL IN ()), (0.8178300797277677 IN ()), SQLITE_COMPILEOPTION_GET(x'3bdc'))))) GROUP BY CASE 'nJ)xd'  WHEN HEX(DISTINCT t0.c2) THEN ((t0.c2) NOTNULL) WHEN ((rt0.c3) ISNULL) THEN rt0.c4 COLLATE BINARY WHEN t1.c0 COLLATE BINARY THEN ((rt0.c4) BETWEEN (t0.c2) AND (t0.c57)) END HAVING ((((rt0.c2) NOT NULL)) BETWEEN (rt0.c2 COLLATE BINARY) AND (((vt0.c0)-(t0.c2)))); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT NULL, CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c2 END), (0x37b163ce IN ()), COUNT(*) OVER () FROM rt0;SELECT ALL ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))) IN (((((((((t1.c0)AND(rt0.c1)))OR(t1.c0)))OR(t0.c57)))AND(rt0.c2)))), (((t1.c0 IN (t0.c0))) IS TRUE), CAST(((rt0.c1)==(rt0.c3)) AS TEXT) FROM t0 WHERE (((((x'')>=(0Xffffffff89d769f3)))<>(TYPEOF(NULL)))) UNION ALL SELECT DISTINCT CASE x'' COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN ((NULL) NOTNULL) ELSE ((vt0.c1)-(NULL)) END, NTH_VALUE(x'' COLLATE BINARY, 0.041747212959560964) OVER (), ((CAST(rt0.c0 AS INTEGER))-('1410408561')) FROM t0 WHERE ((((NOT (NULL)))>(CASE WHEN '1122928198' THEN NULL END)));SELECT ALL CASE t1.c0 COLLATE BINARY  WHEN t0.c0 THEN RTRIM(t0.c57) END FROM t0, vt0, t1, rt0 WHERE ((((x'')) NOT BETWEEN ((((((0Xfffffffffffb34a5)OR('udKr&u*#a')))OR('])')))) AND (((NOT ('녜')))))); -- 0ms;
SELECT ALL ((((NULL) IS TRUE))OR(CASE t1.c0  WHEN t0.c2 THEN t0.c0 WHEN t1.c0 THEN t0.c57 WHEN rt0.c0 THEN t0.c1 END)) FROM vt0, t1 WHERE (((('d뒱#NU5', NULL, x'')) NOT BETWEEN (('-1645354103' COLLATE RTRIM, (0.18688815301943473 IN ()), (('0.13044598864730395') ISNULL))) AND (((((NULL))!=(('0.07931553024988147'))), ROUND(0.20905740823678887, NULL), (('') NOT NULL))))) GROUP BY t0.c57;SELECT t0.c2 COLLATE BINARY FROM rt0, t0; -- 0ms;
SELECT ALL LAG((NOT (((t0.c57) BETWEEN (rt0.c4) AND (t1.c0)))), (((+ (t0.c1)))<>(((t1.c0)&(t0.c0)))), ((((((t0.c1)AND(t0.c2)))OR(t0.c1)))<<(((rt0.c2)>=(rt0.c3))))) OVER () FROM vt0, rt0, t1, t0 WHERE (json_array('123421349', (0X3737d6a5 IN ()))) ORDER BY (NOT (((0.951695698058032)>>(vt0.c1)))); -- 2ms;
SELECT (UPPER(DISTINCT rt0.c2) IN (CAST(vt0.c1 AS BLOB), AVG(rt0.c3))) FROM vt0, t0, rt0, t1 WHERE (((CAST(0.20656757950264604 AS NUMERIC)) NOT NULL)); -- 0ms;
SELECT ALL (- ((((rt0.c1, t1.c0, t0.c57)) BETWEEN ((rt0.c2, t0.c0, vt0.c0)) AND ((vt0.c1, t0.c2, t0.c0))))), CASE (('239710963')|(x''))  WHEN (((rt0.c3))<=((t0.c0))) THEN '' ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)) END, ((MIN(rt0.c1))&(((t0.c57)*(rt0.c3)))) FROM t1, t0, rt0 WHERE (((((('-344117354')) NOT BETWEEN (('UB')) AND ((0.8771610786702938))))>=(((((x'')AND('tέEoS]u')))OR(0.9891998058329882))))) ORDER BY CASE ((vt0.c0) BETWEEN (t0.c2) AND (rt0.c4))  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN t0.c0 WHEN rt0.c2 THEN x'eb1b' END THEN CAST(rt0.c2 AS BLOB) END ASC;SELECT ALL GROUP_CONCAT(COALESCE(vt0.c0, rt0.c3)) OVER (), ((rt0.c0 COLLATE NOCASE) NOT BETWEEN ((((rt0.c3)) BETWEEN ((0.21173182587263362)) AND ((NULL)))) AND (((rt0.c3) NOT NULL))), GROUP_CONCAT(((((rt0.c3)AND(t0.c0)))OR(rt0.c1))) OVER () FROM vt0, t0, t1, rt0 WHERE ((NOT ((((x'')) BETWEEN ((NULL)) AND ((x'')))))) ORDER BY NULL  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(t0.c2 AS REAL) COLLATE RTRIM, TOTAL(CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c57 ELSE rt0.c0 END), json(((rt0.c1) BETWEEN (NULL) AND (vt0.c0))) FROM t1;SELECT ALL ((((rt0.c0)<>(t1.c0)))&((((t1.c0, vt0.c0, rt0.c2, rt0.c3, rt0.c4))<=((rt0.c4, t0.c57, rt0.c2, t0.c2, rt0.c2))))), ((CAST(vt0.c0 AS BLOB)) IS FALSE), (((0.07469023382565931, rt0.c2, rt0.c1)) BETWEEN (((('\r}E)帆M}')<(rt0.c1)), '' COLLATE NOCASE, COUNT(*))) AND ((((((((((((((((((rt0.c0)AND(t0.c57)))OR(NULL)))AND(rt0.c1)))AND(vt0.c0)))OR(t0.c0)))AND(t0.c1)))OR(NULL)))OR(rt0.c3)), UNLIKELY(DISTINCT ''), rt0.c2 COLLATE BINARY))), 0.5447698784892647, (+ (rt0.c0)) COLLATE RTRIM FROM t0 WHERE ((((NULL)) BETWEEN (((((x'', '61쎘|].', NULL, '', x''))<((x'd882', NULL, NULL, 0Xffffffffaa2f0530, 0.09873231248607461))))) AND ((0.1281670542103719)))) GROUP BY (((t1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, (('鈣_/S')+(rt0.c2)), ((t1.c0)>=(rt0.c4)))) AND ((rt0.c2 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)), x'' COLLATE RTRIM))), TYPEOF(TRIM(rt0.c2)), ROUND(vt0.c1, CAST(vt0.c1 AS NUMERIC)) LIMIT -1175605394;SELECT ALL (LOWER(rt0.c3) IN ((- (t1.c0)))) FROM vt0;SELECT DISTINCT COUNT(json_object(t0.c2, t1.c0) COLLATE BINARY) FROM t0, rt0, t1 WHERE ((CAST('0.9832001489237561' AS REAL) IN ())); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3)AND(rt0.c0)))OR('1788516298')))AND(t0.c2)))AND(t1.c0)))IS(((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c1)))) FROM t1 WHERE (((('0.04857707407548151')) NOT BETWEEN (((('1042761010') NOT BETWEEN (0xffffffff8f5ab15c) AND (x'')))) AND ((((x'')+(NULL))))));SELECT ALL ((((vt0.c1) IS FALSE))GLOB(CAST(rt0.c0 AS NUMERIC))) FROM t1, rt0, t0 WHERE (((x'ecab' COLLATE NOCASE) IS FALSE)) LIMIT -306474961 OFFSET 1149912578;SELECT ROW_NUMBER() OVER () FROM t1, vt0, rt0, t0 WHERE ((((NULL)) BETWEEN (('1109622476' COLLATE NOCASE)) AND ((((x'') BETWEEN (0.5428601601413507) AND (0xffffffffe0edae90)))))); -- 0ms;
SELECT DISTINCT x'' FROM rt0, t0, vt0, t1 ORDER BY ((((((t0.c1) NOTNULL))OR(((rt0.c3)/(t0.c2)))))AND(rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (vt0.c1 COLLATE RTRIM)), MAX(''), CASE WHEN 0x426bd113 THEN ((rt0.c3)-(rt0.c2)) END FROM rt0, t1;SELECT ((CAST(rt0.c4 AS NUMERIC)) NOT NULL) FROM vt0, t1, rt0 WHERE (((CASE WHEN x'ae4f' THEN NULL END) BETWEEN (((('1223414436'))==(('0.9832001489237561')))) AND (('-14608088' IN ())))) LIMIT -746327519 OFFSET -1129869944; -- 0ms;
SELECT AVG((~ (rt0.c3))) OVER (), ((((((((((t0.c2)AND(vt0.c0)))AND(rt0.c1)))OR(t0.c1)))OR(rt0.c1))) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((t0.c0))>((t1.c0))))), ((((t0.c1)||(rt0.c0)))IS NOT('')) FROM t0 WHERE ((((NULL)) NOT BETWEEN ((LIKELIHOOD(x'', 0.5854222292565315))) AND ((CAST(NULL AS NUMERIC)))));SELECT DISTINCT CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c2 END COLLATE RTRIM, load_extension(((t0.c57)*(rt0.c0))), (NOT (CAST(t0.c1 AS BLOB))) FROM t0, vt0, rt0 ORDER BY ((((t0.c1, t0.c2, rt0.c0))>((t1.c0, vt0.c1, rt0.c3))) IN ()), ((COALESCE(rt0.c3, rt0.c4)) NOTNULL) DESC, ((UNLIKELY(rt0.c0)) ISNULL)  NULLS FIRST; -- 0ms;
SELECT ALL rt0.c4 COLLATE BINARY COLLATE NOCASE FROM rt0, t0, t1 ORDER BY CASE (((vt0.c1)) BETWEEN ((t0.c1)) AND ((t0.c2)))  WHEN ((t0.c57)!=(vt0.c1)) THEN (t0.c57 IN ()) WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN (- (NULL)) WHEN ((vt0.c0)OR(0.6374996676810704)) THEN NULLIF(rt0.c1, t0.c0) ELSE ((((t0.c2)OR(t0.c2)))OR(t0.c0)) END  NULLS LAST;SELECT DISTINCT ((vt0.c0) IS FALSE) FROM vt0, rt0, t1; -- 1ms;
SELECT GROUP_CONCAT(((NULL) BETWEEN (t1.c0) AND (rt0.c4))) OVER () FROM vt0, t1, t0 WHERE ('\nW');SELECT DISTINCT (((t0.c0 IN ()))<<(((t1.c0)OR(rt0.c1)))) FROM t0, t1 WHERE (CASE ((NULL) BETWEEN ('0.43825500830019726') AND ('2061994784'))  WHEN UNLIKELY(DISTINCT -3.06474961E8) THEN ((((x'')AND(x'')))OR(NULL)) WHEN x'' COLLATE RTRIM THEN (- (0.9824352043833495)) WHEN CASE 'Q'  WHEN x'34a0d7a4' THEN x'' ELSE x'' END THEN ('9n[뵱BK' IN ()) ELSE CASE 0.5070485716303484  WHEN NULL THEN 0.6398644944698182 ELSE NULL END END);SELECT DISTINCT LTRIM(((rt0.c0) BETWEEN (rt0.c2) AND (t0.c2))), CAST(((((1.122928198E9)OR(rt0.c4)))AND(1.514248183E9)) AS NUMERIC), ROUND(t0.c1, ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) FROM vt0 GROUP BY CASE ((t1.c0)>=(rt0.c3))  WHEN (('灞')>(t0.c2)) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c57)) END;SELECT DISTINCT NULL FROM t1, rt0 ORDER BY CAST(((t0.c57) BETWEEN (rt0.c0) AND (t0.c57)) AS BLOB)  NULLS FIRST;SELECT DISTINCT rt0.c2, CAST(vt0.c1 AS REAL) COLLATE BINARY, ((x'')*((NOT (rt0.c1)))) FROM t1, vt0, t0 WHERE ((((']')GLOB('263485821')) IN (ABS(DISTINCT 1539954274)))) ORDER BY IFNULL(x'', (- (t0.c2)));SELECT DISTINCT GROUP_CONCAT((- (vt0.c1))) FILTER(WHERE ((t0.c0) BETWEEN (rt0.c2) AND (t0.c1)) COLLATE RTRIM) OVER () FROM t1, vt0, rt0, t0; -- 0ms;
SELECT ALL '755033355' COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE FROM t0 WHERE ((NOT ((('-2068021807')/(''))))); -- 0ms;
SELECT NULLIF(CASE t0.c2  WHEN vt0.c1 THEN t0.c57 ELSE t1.c0 END, ((t0.c2) BETWEEN (rt0.c0) AND (t0.c1))), (('-755129121')IS((+ (rt0.c1)))), ((((rt0.c2)=(rt0.c4))) NOT NULL) FROM t1, t0, vt0, rt0 WHERE ((((((('7?')>(0.8199425093239479)))AND('AB\r4' COLLATE NOCASE)))OR((((('1514248183')OR(NULL)))AND(x'f84e'))))) GROUP BY t0.c57; -- 1ms;
SELECT DISTINCT (((((t0.c1))<((0.1476518625124036)))) NOTNULL) FROM rt0, t1 WHERE (((((json_insert(NULL, 'nu(o纈Yk', 450830893))OR(0.3335173415133529)))OR(((NULL)>=(0.9427112693744116)))));SELECT ALL ((rt0.c1)-(t0.c0)) COLLATE BINARY FROM rt0 ORDER BY '123421349'  NULLS FIRST, ((rt0.c4 COLLATE NOCASE)GLOB(((rt0.c2)+(rt0.c4)))) DESC  NULLS LAST;SELECT DISTINCT vt0.c0 FROM t1;SELECT NULL FROM rt0, vt0 WHERE (((((x'') IS FALSE))*(((((0.6313854605105782)OR(x'5eceaaa4')))AND('nl煇c煯䝈js'))))); -- 0ms;
SELECT ALL (+ (MAX(rt0.c2))) FROM rt0, t1, t0, vt0 WHERE ((0xffffffffa239cb74 COLLATE BINARY IN (CASE WHEN NULL THEN 0.7339278770382763 END))); -- 0ms;
SELECT ALL ((CASE WHEN t1.c0 THEN rt0.c1 WHEN t0.c57 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 ELSE vt0.c0 END) IS TRUE) FROM vt0, rt0, t0, t1 WHERE ((('?y/K2!% \')||((('1122928198') NOT BETWEEN (NULL) AND (''))))); -- 0ms;
SELECT ((((vt0.c0 COLLATE BINARY)OR(GROUP_CONCAT(t0.c1))))AND(((rt0.c2)|(rt0.c0)))), (((t0.c57)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c2)))OR(t1.c0)))) AND ((((t0.c0)||(vt0.c0))))), CASE ((vt0.c0)>>(t0.c2))  WHEN ((((vt0.c1)AND(rt0.c2)))OR(t0.c1)) THEN ((((rt0.c3)AND(t1.c0)))OR(rt0.c1)) END FROM vt0, rt0 NOT INDEXED, t0, t1 WHERE ((((((((('')AND(x'')))AND(0.5083773404619087)))AND(x'')))AND(CAST('' AS TEXT)))); -- 0ms;
SELECT DISTINCT ((((((((SUM(vt0.c1))OR(((rt0.c0) IS TRUE))))AND(t0.c2 COLLATE NOCASE)))AND(((rt0.c1) BETWEEN (vt0.c0) AND (t0.c1)))))OR(NULLIF(DISTINCT vt0.c1, t0.c0))) FROM vt0 WHERE ((((NULL IN (0.28007739045006275, '548200722'))) NOT BETWEEN ((- (-2075617796))) AND ((((491424642)) NOT BETWEEN (('0.975987884258615')) AND ((903455333)))))) LIMIT 1358742439 OFFSET -2105690757;SELECT ALL ((((((rt0.c4)|(rt0.c1)))AND(rt0.c2)))OR(((0.2872833516566252) BETWEEN (t0.c2) AND (vt0.c1)))), (((~ (rt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((rt0.c1 IN ()))), (~ (AVG(t0.c1))) FROM t0, rt0, t1 WHERE (((CAST(0.614724848036597 AS INTEGER))>=(((0.17287889784145227) NOT BETWEEN ('WxV4') AND (x'a91b')))));SELECT DISTINCT CAST('' AS INTEGER) FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, t0, t1, vt0 WHERE (((CASE 0x97c7d93  WHEN '&5*4te' THEN x'' WHEN -2.105034538E9 THEN 0.2664455936272584 WHEN x'' THEN '1101237347' END)%((((0X7b5287a9)) BETWEEN ((NULL)) AND ((0.22552139480113886)))))) LIMIT -2131007060 OFFSET -18686247; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 COLLATE RTRIM AS BLOB), ((((t0.c2)<<(t0.c0)))IS NOT(rt0.c3)), ((((t0.c57)%(vt0.c0)))!=(((((rt0.c4)OR(rt0.c4)))AND('-1936941568')))) FROM t0, vt0, t1, rt0 WHERE (((((((0.5256983828178899)OR(NULL)))AND(x'6070'))) NOT BETWEEN (((NULL) NOT BETWEEN (x'e710') AND (0X10b2ea45))) AND (x'a16e' COLLATE NOCASE))) LIMIT -1257499789; -- 0ms;
SELECT ALL (((rt0.c3)>>(rt0.c2)) IN ()), ((NULLIF(DISTINCT 0.9364844000724155, t0.c0)) NOT BETWEEN (CASE WHEN t1.c0 THEN rt0.c1 ELSE rt0.c3 END) AND (CASE WHEN rt0.c3 THEN t1.c0 ELSE t0.c57 END)), ((rt0.c0) NOT BETWEEN ((((t0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))) AND (LIKELIHOOD(DISTINCT vt0.c1, 0.034985959161840996))), (+ (((t0.c1) NOT NULL))), ((t0.c57 IN ()) IN ((NOT (rt0.c3)))) FROM rt0, t0, t1 ORDER BY ((((((((vt0.c0)AND(t0.c57)))AND(rt0.c1)))OR(rt0.c1)))AND(t1.c0)) COLLATE BINARY DESC;SELECT ALL AVG(')⻽?') FROM t1, t0 GROUP BY ((((((((((((t0.c1)AND(rt0.c3)))OR(t1.c0)))OR(t1.c0)))OR('-654309634')))AND(t0.c2)))AND(t0.c0)) COLLATE BINARY HAVING ((TOTAL(vt0.c1))LIKE(((((t0.c0)AND(t1.c0)))AND(rt0.c1))));SELECT DISTINCT (COUNT(rt0.c0) IN ()) FROM t1, vt0, t0, rt0 WHERE ((NULL IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((SUM(0xfffffffffffb34a5), ((t0.c1) NOTNULL), CAST(t0.c57 AS INTEGER)))<=((rt0.c4, ((rt0.c1)<(rt0.c4)), ((t0.c57)/(rt0.c4))))) FROM vt0 WHERE ((((NULL) BETWEEN ('-846998742') AND (x'')) IN (((x'b987') NOT BETWEEN (0.12637094640670699) AND ('?#}V䗐B')))));SELECT ALL NULL, ((((vt0.c1)LIKE(rt0.c0)))<(rt0.c4 COLLATE NOCASE)), CAST(COUNT(0.5761676442818415) AS TEXT), ((CASE WHEN vt0.c0 THEN 0.9330992643970584 ELSE t0.c1 END) IS FALSE), TYPEOF(DISTINCT ((vt0.c0)<>(rt0.c2))) FROM t0, t1, vt0 WHERE (CAST(0X519ffc7d AS TEXT)) ORDER BY ((rt0.c0) NOT BETWEEN (t0.c0) AND (SQLITE_SOURCE_ID()))  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT(((rt0.c0)+(rt0.c2))) OVER ( ORDER BY ((']/') NOT NULL) ASC  NULLS FIRST), TRIM(CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE rt0.c4 END), ((t0.c0)GLOB(rt0.c2)) COLLATE NOCASE FROM t1, vt0 WHERE ((((((NULL, x'ff85', '5\n')) BETWEEN ((NULL, '', NULL)) AND ((-39079170, 0.5070485716303484, NULL))))GLOB((- (NULL))))) LIMIT 2085868749 OFFSET -2089436934;SELECT DISTINCT TOTAL(((t0.c57)||(vt0.c1))) OVER (), TOTAL(CASE WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE) OVER (), ((((((((((((CAST(t0.c0 AS INTEGER))AND(x'')))AND(((rt0.c4)LIKE(t1.c0)))))OR(((t0.c57) BETWEEN (rt0.c2) AND (t0.c57)))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR(vt0.c0)))OR(((vt0.c1)-(t1.c0)))) FROM vt0, t0, t1, rt0; -- 0ms;
SELECT CAST(CASE 'CZ0M9!Z'  WHEN rt0.c0 THEN vt0.c1 END AS REAL) FROM rt0, t1, t0, vt0 ORDER BY ((((((((rt0.c0)AND(t0.c0)))AND(t0.c2)))AND(CAST(vt0.c0 AS INTEGER))))OR(t0.c57)) DESC, (((((vt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c0)))) ISNULL), NULL COLLATE BINARY DESC  NULLS FIRST LIMIT 518141324 OFFSET -984932877; -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0, rt0; -- 0ms;
SELECT ALL LOWER(DISTINCT ((rt0.c4)OR(rt0.c2))) FROM vt0, t1, t0 ORDER BY CASE WHEN HEX(DISTINCT t0.c0) THEN CASE rt0.c0  WHEN t0.c1 THEN vt0.c0 ELSE t0.c0 END END DESC LIMIT 1602801376 OFFSET -1439759056;SELECT DISTINCT json_array_length(t0.c57, t0.c57) COLLATE NOCASE, ((((CASE t0.c2  WHEN t0.c2 THEN rt0.c4 END)OR(LIKELIHOOD(NULL, 0.8042344157945341))))OR(ABS(DISTINCT rt0.c4))), (((t0.c1) NOT BETWEEN (rt0.c2) AND (t1.c0)) IN (MIN(rt0.c0), vt0.c0 COLLATE RTRIM)) FROM t0 WHERE (((((9.56569911E8) IS FALSE)) BETWEEN (((0.08536656475131088) NOT BETWEEN ('T}') AND ('8M'))) AND (x'' COLLATE RTRIM)));SELECT NTH_VALUE(((((vt0.c1)|(vt0.c1))) IS FALSE), UNICODE(vt0.c1) COLLATE RTRIM) OVER () FROM vt0 WHERE (((((x'')GLOB('nmc?N(DH'))) NOTNULL)) LIMIT -833454118;SELECT DISTINCT (((vt0.c1)) BETWEEN ((rt0.c4)) AND ((t0.c57))) COLLATE BINARY, CASE WHEN ((vt0.c0)/(rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END, ((LTRIM(t0.c57)) NOT BETWEEN (rt0.c2) AND (((t0.c1)LIKE(rt0.c0)))), ((((vt0.c1)>>(t0.c2)))|(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)), (((((rt0.c4)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))) NOTNULL) FROM vt0 WHERE (CAST('q)' AS TEXT) COLLATE BINARY) LIMIT -1151893635 OFFSET 1842744245;SELECT DISTINCT rt0.c0 FROM t0, vt0, t1 WHERE ((NOT (STRFTIME('-0.0', NULL, 'cZ3M9!z'))));SELECT DISTINCT x'' FROM t1, t0, rt0, vt0; -- 0ms;
SELECT ALL (LIKELIHOOD(DISTINCT vt0.c0, 0.2961859802113599) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT (((+ (rt0.c1))) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((t0.c57 IN ()))||(((t0.c57) NOTNULL))) FROM t1, t0, vt0 WHERE ((((((((((((0.901175981778443)AND(2001373603)))OR(0x5ef71ca2)))AND(0.840102313756188)))AND(-0.0))))>((((NULL)IS(9.56569911E8)))))); -- 0ms;
SELECT ALL t0.c1 FROM t1, t0, vt0; -- 0ms;
SELECT SUM(((t0.c1)GLOB(rt0.c0))) FROM rt0, vt0 GROUP BY CAST(((rt0.c1) NOT BETWEEN (0.4599038113026993) AND (rt0.c0)) AS NUMERIC) HAVING ((AVG(t0.c0)) IS FALSE);SELECT ALL ((((((((rt0.c3)AND(t0.c57)))OR(t0.c0)))AND(NULL)))AND(0X70e71cdb)) COLLATE RTRIM FROM vt0, t0, rt0 GROUP BY CASE WHEN rt0.c4 COLLATE RTRIM THEN 'z?ᕶpꝅM' COLLATE NOCASE ELSE ((vt0.c1) BETWEEN ('1998354154') AND (rt0.c2)) END LIMIT -1198877205; -- 1ms;
SELECT DISTINCT SUM(((rt0.c3) IS FALSE)) OVER ( ORDER BY JULIANDAY(t0.c1, rt0.c3, rt0.c3, t0.c2, rt0.c4) COLLATE BINARY COLLATE NOCASE DESC, (((((~ (t0.c0)))OR(((vt0.c0) IS TRUE))))AND((t0.c0 IN ()))) ASC ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM t0, rt0 WHERE ((((((((((531190672 IN (0.9725688805336333)))AND(0.3048170689676103)))OR((('') BETWEEN (NULL) AND ('h2i[-4BI')))))AND('x' COLLATE RTRIM)))OR(((((NULL)AND(NULL)))AND(x''))))) LIMIT 544962830 OFFSET 288484603; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) ISNULL) AS REAL) FROM t1, t0, vt0 GROUP BY ((rt0.c4) BETWEEN (json_type(vt0.c1)) AND ((((rt0.c2))>(('8Wp!''PY赎*')))));