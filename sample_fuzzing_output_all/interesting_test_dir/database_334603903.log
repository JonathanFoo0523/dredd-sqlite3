-- Time: 2024/06/07 11:50:34
-- Database: database3
-- Database version: 3.40.0
-- seed value: 334603903
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
UPDATE rt1 SET (c3, c0)=('1290389909', '709785850'); -- 1ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES ('b', 0Xffffffffe6bba279), (0.6477994693953117, NULL), (0.05553926779898599, 'Fu஧bdj'); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2, c0) VALUES ('1493741987', 'C-5s2Y3', x''); -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(5.52536999E8); -- 1ms;
PRAGMA main.legacy_file_format = false; -- 0ms;
PRAGMA main.cell_size_check = true; -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET c2=0.3356802542888587, c0=x''; -- 0ms;
UPDATE rt1 SET c1=x'' WHERE CAST(((((rt1.c3)OR(rt1.c3)))OR(rt1.c3)) AS BLOB); -- 0ms;
PRAGMA main.stats; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
UPDATE rt0 SET c2='-1937090723' WHERE -1.937090723E9; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c1)=('1493741987', x'0a9b83de'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=(0xffffffff8cf42c69); -- 0ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
UPDATE OR FAIL rt0 SET c0='23674135' WHERE ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))==(((rt0.c2) NOT NULL))); -- 0ms;
PRAGMA threads = -2370108143846408764; -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint = 4971949730322535442; -- 1ms;
CREATE TABLE t0 (c0 INT ); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3, c4) VALUES ('-1937090723', '', x''); -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1930154903' WHERE ((rt0.c0 IN ()) IN ()); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
COMMIT; -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT ALL (((((x'')) BETWEEN ((rt1.c4)) AND ((rt0.c1)))) NOT BETWEEN (((((rt1.c1)OR(rt1.c1)))AND(NULL))) AND (TOTAL(rt1.c3))), SUM(((((rt1.c0)AND(rt1.c4)))AND(rt0.c2))), COUNT(*) OVER () FROM t1, rt0, rt1 WHERE ((((('-567744315') BETWEEN (0.05553926779898599) AND (0.05553926779898599)))%((((-1.937090723E9, 0.834093537339127, x''))=(('1493741987', NULL, NULL)))))); -- 1ms;
PRAGMA optimize; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT DISTINCT (UPPER(DISTINCT rt0.c1) IN ()), (((((rt0.c1, rt1.c3, rt0.c2))<=((rt1.c0, rt1.c4, '0.6477994693953117'))))GLOB(v0.c1)), ((((v0.c1)>=(rt1.c4))) NOT BETWEEN (CASE WHEN v0.c2 THEN '' ELSE rt1.c0 END) AND (rt1.c0 COLLATE RTRIM)), TYPEOF(((NULL)IS(rt1.c1))), CASE v0.c1  WHEN ((v0.c0) NOT NULL) THEN ((v0.c2)IS NOT(rt0.c2)) END, ((((rt1.c2) NOTNULL))!=(((rt1.c0)||(x'08a9')))), TYPEOF(DISTINCT ((rt0.c1)*(v0.c0))) FROM v0, t1, rt0, rt1; -- 0ms;
SELECT (- (v0.c1 COLLATE BINARY)) FROM v0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT '' FROM t1, rt0, v0, rt1 GROUP BY CASE CASE WHEN rt1.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt1.c0 END  WHEN (((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c4 END WHEN ((0.17014507557264258) NOT BETWEEN (0.07862040057756237) AND (0.6477994693953117)) THEN CAST(rt1.c1 AS REAL) WHEN ((rt1.c2) IS FALSE) THEN ((rt1.c3) ISNULL) ELSE CASE WHEN v0.c2 THEN rt1.c4 ELSE NULL END END; -- 1ms;
SELECT DISTINCT ((((CASE v0.c1  WHEN rt0.c2 THEN rt0.c0 END)AND(CASE WHEN v0.c1 THEN rt1.c1 ELSE NULL END)))AND(NULL COLLATE NOCASE)) FROM rt1, v0, t1, rt0 GROUP BY (+ (v0.c2)), CAST(rt1.c1 AS TEXT) COLLATE NOCASE, ((((((((v0.c0)OR(((t1.c0)%(rt1.c4)))))AND(rt0.c0)))AND((rt1.c1 IN ()))))AND(NULL)) HAVING TOTAL(((((rt0.c1)AND(rt1.c0)))OR(v0.c2)));SELECT DISTINCT LEAD(((((rt1.c0) IS TRUE)) NOT NULL), ((((((NULL) NOT BETWEEN ('') AND (rt1.c0)))AND((- (rt1.c4)))))AND(CASE rt1.c2  WHEN '0.3356802542888587' THEN rt1.c2 END)), CASE WHEN rt1.c0 THEN ((rt1.c0)<(rt1.c1)) ELSE (+ (rt1.c1)) END) OVER () FROM rt1 WHERE (((0.01720882012227687)>('q')) COLLATE BINARY) GROUP BY ((rt0.c2 IN (rt1.c1)) IN ()); -- 0ms;
SELECT (- ((rt1.c4 IN (v0.c1)))), ((rt1.c0 COLLATE BINARY)=(rt1.c2)), GROUP_CONCAT(IFNULL(DISTINCT '0.05553926779898599', rt0.c2)) OVER () FROM rt0, rt1 LIMIT -423910791 OFFSET -1674440953;SELECT (((~ (rt0.c1)))/(((t1.c0) BETWEEN (0.849235453938912) AND (rt0.c1)))) FROM rt0 WHERE ((CAST(0.7405823179756871 AS REAL) IN ()));SELECT (NOT ((((v0.c0))<=((rt0.c0))))), CASE ((rt0.c2) NOTNULL)  WHEN json_remove(rt0.c2, NULL, rt0.c1, rt0.c1) THEN (v0.c2 IN (rt1.c3, rt1.c3)) ELSE CASE WHEN rt1.c1 THEN rt1.c4 ELSE v0.c1 END END, (((rt0.c1 IN ())) NOT BETWEEN (x'f4eb' COLLATE BINARY) AND (((rt0.c0) BETWEEN (v0.c1) AND (rt1.c4)))) FROM rt1, v0, rt0, t1 WHERE (((CAST('T 6L''+/Z[' AS INTEGER))LIKE((((NULL)) BETWEEN (('1290389909')) AND ((x'')))))) ORDER BY ('-1937090723' IN ()) ASC  NULLS LAST; -- 0ms;
SELECT ALL LENGTH(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2))) FROM v0, rt1, rt0, t1; -- 1ms;
SELECT (~ (rt1.c3)), ((~ (t1.c0)) IN ()), ((0.44654667100921774)-(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 WHEN v0.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c2 END)) FROM v0, t1, rt0;SELECT DISTINCT ((rt1.c1) BETWEEN (((t1.c0) BETWEEN (v0.c2) AND (v0.c1))) AND (v0.c1)) FROM rt1 UNION SELECT ALL CAST(CAST(rt0.c1 AS TEXT) AS REAL) FROM rt0, rt1;SELECT CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN rt1.c0 THEN v0.c2 WHEN rt0.c1 THEN v0.c1 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 END COLLATE RTRIM FROM rt1, rt0 WHERE ((+ (0.27036940082278216)));SELECT ALL (((((rt1.c0)<>(v0.c2))))>((('881205581' IN (rt1.c1, rt0.c0))))) FROM v0, rt0, rt1 WHERE ((((('v>,\kvd')|(x'')))&((((x'')) BETWEEN (('d	#')) AND (('1344107032')))))); -- 0ms;
SELECT (+ (CASE WHEN rt1.c4 THEN rt0.c2 END)), AVG(rt1.c3) OVER (), CASE WHEN ((rt1.c3) BETWEEN (t1.c0) AND (rt1.c1)) THEN rt0.c1 WHEN MIN(v0.c2, rt1.c1, v0.c2, v0.c2) THEN v0.c0 WHEN ((rt1.c4) NOT NULL) THEN ((rt1.c3)==(rt1.c0)) END FROM t1, rt0, v0;SELECT ((((rt1.c0)||(rt1.c0))) IS TRUE) FROM rt1, t1 WHERE ((NOT ((('512177463') IS FALSE)))); -- 0ms;
SELECT COUNT(*) OVER ( PARTITION BY (~ (v0.c2)), CAST(rt1.c4 COLLATE NOCASE AS REAL) GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), rt1.c2, (('*\')<>((((v0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))) FROM rt0, rt1, t1, v0; -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c0)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c0)))AND(rt1.c3)))OR(v0.c1)))OR(rt0.c1))) BETWEEN (((rt1.c2)=(rt1.c4))) AND (TOTAL(t1.c0))), LAST_VALUE((NOT (t1.c0 COLLATE NOCASE))) OVER ( ORDER BY (~ (CASE rt1.c3  WHEN rt1.c3 THEN NULL WHEN rt1.c2 THEN v0.c2 WHEN 0xffffffffcef5362d THEN rt1.c4 ELSE t1.c0 END))  NULLS LAST), ((CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 END)<(LOWER(t1.c0))) FROM t1, rt0, v0;SELECT DISTINCT ((CASE WHEN v0.c1 THEN rt1.c0 ELSE v0.c0 END)=(((rt1.c4)||(x'')))) FROM t1 GROUP BY ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c0 END)AND((NOT (rt0.c1)))) HAVING TIME((((t1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))), SUM(v0.c0), (+ (NULL)));SELECT DISTINCT '-1930154903', AVG(((rt1.c4)<=(v0.c0)) COLLATE NOCASE) OVER ( RANGE  UNBOUNDED PRECEDING), MAX(v0.c2 COLLATE BINARY) FROM rt1, rt0, t1 WHERE ((((((~ (x'')))AND(UNLIKELY(DISTINCT x'a3fd'))))AND(((-1.937090723E9)||('T')))));SELECT COUNT(load_extension(t1.c0) COLLATE NOCASE) OVER () FROM rt0, v0;SELECT DISTINCT (((x'')) NOT BETWEEN ((GLOB(v0.c0, rt0.c2))) AND ((((rt1.c2)*(rt1.c1))))) FROM t1, rt1, v0, rt0; -- 0ms;
SELECT CASE WHEN CASE v0.c2  WHEN v0.c2 THEN t1.c0 WHEN rt1.c2 THEN v0.c1 WHEN '974461370' THEN rt1.c0 ELSE rt0.c2 END THEN COUNT(*) WHEN ((v0.c0) IS FALSE) THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) WHEN (((rt1.c0))<=((rt0.c1))) THEN ((rt1.c2) NOTNULL) END FROM rt0, v0 LIMIT 227274701 OFFSET 582457282;SELECT CAST(((rt1.c4) NOTNULL) AS INTEGER) FROM v0, rt1, rt0 WHERE (((((0xffffffff81157f25) ISNULL))>(CASE WHEN '9' THEN x'' ELSE 0.8961424464221154 END))) ORDER BY v0.c2 DESC  NULLS LAST, ((CAST(rt1.c0 AS TEXT))||(((rt1.c3)<=(rt1.c1)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt1.c1, v0.c1, v0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(t1.c0 AS REAL), CAST(rt1.c4 AS TEXT), CAST(rt1.c4 AS BLOB), ((rt0.c0) IS FALSE), ((((v0.c1)AND(rt1.c4)))OR(v0.c0)))) AND (('1290389909', ((((((((rt1.c4)OR(v0.c0)))AND(rt1.c3)))OR(rt0.c1)))AND(rt1.c1)), ((rt1.c0) NOT NULL), COUNT(rt1.c1), COUNT(rt1.c1)))) FROM t1, v0, rt0, rt1; -- 1ms;
SELECT DISTINCT v0.c1 FROM rt1, rt0;SELECT (~ (TOTAL(t1.c0))) FROM v0, t1, rt1 NOT INDEXED, rt0 ORDER BY v0.c0  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt1.c2) ISNULL))/(MIN(rt1.c3))) FROM v0, rt0, t1 WHERE (((0.14842857624695427 COLLATE RTRIM) BETWEEN ((-5.67744315E8 IN ())) AND ((('-2129297627')>>(x'2dc8')))));SELECT ALL TOTAL(CAST(rt1.c3 AS INTEGER) COLLATE BINARY) OVER (), NTILE(((highlight(rt0.c0, t1.c0, t1.c0, rt1.c2)) NOTNULL)) OVER (), x'' FROM rt1, t1, rt0, v0; -- 0ms;
SELECT (((TOTAL(rt1.c3)))>(((+ (rt1.c2))))) FROM rt0, rt1, v0, t1 WHERE ((~ ((('-1084470146')AND('fu஧bdj'))))); -- 0ms;
SELECT ALL rt1.c4 FROM rt1, t1 WHERE (((((CASE WHEN -2.129297627E9 THEN x'' ELSE x'' END)OR((x'' IN ()))))OR(NULL COLLATE RTRIM))) LIMIT -2129297627 OFFSET -600249811; -- 0ms;
SELECT ALL UNICODE(rt1.c2 COLLATE BINARY) FROM rt0, rt1, t1 WHERE (((CAST('F9 ' AS REAL)) ISNULL)); -- 0ms;
SELECT ALL ((((v0.c1)%(v0.c1)))IS NOT(((rt0.c0) BETWEEN (rt1.c4) AND (rt1.c4)))), ((+ (0.6923416871626948)) IN ()), ((((CASE WHEN v0.c2 THEN rt0.c2 END)OR(((v0.c2) BETWEEN (rt0.c2) AND (rt1.c1)))))AND(CASE WHEN v0.c0 THEN v0.c1 ELSE rt0.c1 END)) FROM rt0, v0, t1;SELECT DISTINCT (((NOT (0.6868656534365365)))||(CAST(t1.c0 AS TEXT))) FROM rt0 WHERE (((CAST(0.484231164241941 AS INTEGER))<=(CASE x''  WHEN '' THEN '' END)));SELECT DISTINCT (- (((rt0.c1)/(rt1.c4)))) FROM rt1, v0, t1 WHERE (((x'de21' IN ('-411271534', '', 0.4421006605159734)) IN ()));SELECT DISTINCT ((COUNT(t1.c0)) NOTNULL) FROM t1 WHERE (x''); -- 0ms;
SELECT (((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c0)) IN ()) FROM t1; -- 0ms;
SELECT ((NULL)||(rt1.c1 COLLATE RTRIM)) FROM t1, rt0;SELECT FIRST_VALUE(CASE 0.2902160327647141  WHEN ((rt0.c2)<<(0.387230279290091)) THEN CAST(rt1.c3 AS REAL) WHEN (((0xffffffffa3c68015))<>((rt1.c1))) THEN rt1.c4 WHEN CAST(rt1.c3 AS NUMERIC) THEN (((-8.22790611E8)) BETWEEN ((rt1.c1)) AND ((rt1.c4))) ELSE rt1.c4 COLLATE BINARY END) OVER (), 0.2902160327647141, LOWER(((rt1.c1)LIKE(rt1.c2))) FROM rt1, rt0 WHERE (NULL) LIMIT 568584200 OFFSET -1800341289 EXCEPT SELECT DISTINCT GROUP_CONCAT((((rt0.c1))<((rt0.c2)))) OVER (), ((CASE rt1.c4  WHEN NULL THEN rt0.c2 END)>(0.47769030549758706)), ((((x'579f5a24')IS NOT(NULL)))%('-2129297627')) FROM rt0, v0 NOT INDEXED, t1, rt1 WHERE ((- (-678190044))) LIMIT -1831121070;SELECT DISTINCT (((((((rt1.c1))>((rt1.c2))))AND(((rt0.c2)+(t1.c0)))))AND(((((((((((((rt1.c2)OR(t1.c0)))OR(v0.c2)))AND(v0.c1)))AND(rt1.c3)))OR(v0.c0)))AND('-1539310950')))), ((x'') BETWEEN (CASE WHEN t1.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 WHEN ' <' THEN x'32eb' END) AND (((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), (((((((((((((rt0.c0 IN ()))AND((((rt1.c2))>((v0.c2))))))AND(CAST(v0.c0 AS REAL))))AND((t1.c0 IN ()))))OR(((rt1.c4)!=(rt0.c0)))))AND(LENGTH(rt1.c0))))OR(CAST(rt1.c4 AS INTEGER))) FROM v0, rt1, t1 ORDER BY TRIM(rt1.c1, v0.c1);SELECT ALL COUNT(((((((((NULL)OR(v0.c0)))AND('''(')))OR(v0.c2)))AND(t1.c0))), ((('-1937090723', rt1.c0, rt1.c2)) BETWEEN ((((rt0.c1)LIKE(t1.c0)), CASE rt1.c4  WHEN x'' THEN v0.c0 WHEN t1.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c1 END, ((rt1.c0) IS FALSE))) AND ((x'', CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END, (((rt1.c3))<((5.12177463E8)))))), t1.c0 FROM rt0 LIMIT -300518727 OFFSET -986355521;SELECT DISTINCT NULL, (((((((((rt0.c0)AND(rt1.c3)))AND(v0.c1)))OR(rt1.c0)))OR(v0.c2)) IN ()), MIN(0.9141503241496137) FROM rt1, rt0, v0, t1 GROUP BY ((CAST(rt0.c1 AS BLOB))>=(((-168491061) IS TRUE))), LTRIM(((v0.c2)<>(NULL)), ((rt1.c4) BETWEEN (v0.c2) AND (rt0.c2))), ((rt1.c0) NOT BETWEEN (((0.139416287781996) IS TRUE)) AND ((rt0.c2 IN (rt1.c3)))), ((((CAST(rt1.c1 AS INTEGER))AND(CASE rt0.c1  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END)))OR(CASE WHEN rt0.c1 THEN rt1.c3 WHEN rt1.c0 THEN v0.c2 WHEN rt0.c0 THEN rt1.c2 END)), COALESCE((t1.c0 IN ()), ((rt1.c2) NOT BETWEEN (v0.c0) AND (x''))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 WHEN v0.c2 THEN rt0.c0 ELSE rt1.c2 END) IS FALSE) FROM t1, v0, rt1, rt0 LIMIT 793399362; -- 1ms;
SELECT (NOT (((rt1.c2)!=(rt1.c0)))) FROM v0, rt0, t1, rt1 WHERE (((((((0.35752478325016646)AND(x'')))AND('09z'))) IS FALSE)); -- 0ms;
SELECT ALL '耕80{' FROM t1, rt0 WHERE ((((((NULL)>(0.21965072962679355))))!=((x'078c')))); -- 0ms;
SELECT (+ (json_type(rt1.c2))), CAST(TOTAL(rt0.c0) AS INTEGER), CAST(rt1.c0 AS INTEGER) COLLATE RTRIM, (~ ((rt1.c4 IN (t1.c0)))), ((rt0.c0)+(v0.c0)) COLLATE RTRIM FROM rt0, t1;SELECT DISTINCT (+ (((t1.c0)||(v0.c1)))), ((((((((((v0.c1)>=(rt1.c1)))AND(NULL)))OR((rt1.c0 IN ()))))AND((NOT (rt1.c0)))))AND(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)))), (('Q_c9X') IS TRUE) FROM rt0;SELECT DISTINCT AVG(CASE rt0.c0  WHEN v0.c2 THEN rt0.c0 END) FROM v0;SELECT DISTINCT ((((rt1.c1)&(NULL)))LIKE(rt0.c1 COLLATE BINARY)) FROM rt1, v0, t1, rt0 WHERE (((((((((((((0.6421959636775053)OR(0xffffffffc2e65b26)))OR('-1084470146')))OR(((('')) BETWEEN ((1525889569)) AND (('1411025991'))))))AND('㰾.!,')))OR(CAST(-1592103172 AS BLOB))))AND(0Xffffffffbd89a1cc))); -- 0ms;
SELECT (v0.c2 COLLATE BINARY IN ()), CASE ((rt1.c0)!=(v0.c0))  WHEN x'' THEN MIN(rt1.c2) END, CAST(AVG(rt0.c2) AS NUMERIC) FROM v0, rt1, rt0 LIMIT 235568688; -- 0ms;
SELECT (+ (((rt1.c3) IS FALSE))) FROM rt1 NOT INDEXED, v0, t1, rt0 WHERE (CASE WHEN (NULL IN ()) THEN CASE NULL  WHEN x'046e' THEN x'' END WHEN (((NULL))!=((NULL))) THEN NULL COLLATE BINARY WHEN ((NULL) IS FALSE) THEN CAST(0.7858846257829983 AS BLOB) ELSE NULL COLLATE BINARY END); -- 0ms;
SELECT NULL, ((COUNT(*)) NOT BETWEEN (MIN(v0.c1, x'')) AND (MAX(rt0.c2))), rt1.c4 FROM rt0, t1, v0 WHERE (TOTAL_CHANGES()) INTERSECT SELECT DISTINCT ((MAX(v0.c0))AND(((rt1.c3)IS NOT(rt1.c2)))), NULL, CAST(((v0.c1) IS FALSE) AS INTEGER) FROM v0;SELECT DISTINCT (+ (((rt1.c0) BETWEEN (t1.c0) AND (t1.c0)))) FROM rt0, v0 WHERE ((((((+ (x'')))AND((('861331386')|(x'b167')))))AND(CAST(693978100 AS REAL))));SELECT DISTINCT (- (NULL)) FROM v0, rt1 WHERE (LIKELY('0.8961424464221154') COLLATE BINARY) LIMIT -168491061; -- 0ms;
SELECT DISTINCT (((((rt1.c4)) NOT BETWEEN ((0.17880101422520212)) AND ((rt0.c2))))GLOB(((t1.c0)%(rt1.c3)))) FROM rt1;SELECT ((((((((((((((((((rt0.c2)AND(rt1.c1)))OR(rt1.c0)))OR(rt0.c0)))AND(rt1.c3)))AND(rt1.c2)))OR('l<Vt5DVl')))OR(rt1.c1)))OR(rt1.c0)))-(((NULL)>=(rt0.c2)))), CAST(UNLIKELY(rt0.c1) AS REAL), MIN(((((rt0.c2)OR(rt1.c4)))OR(v0.c2))) FROM v0, t1, rt1;SELECT DISTINCT (rt1.c4 IN ()) FROM rt0, v0 WHERE ((NOT ('-1624290637')) COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((((rt0.c2, rt1.c1, rt1.c1)) BETWEEN ((v0.c1, rt1.c3, rt1.c0)) AND ((rt0.c2, rt0.c0, rt1.c4)))) IS FALSE) FROM v0, rt0;SELECT DISTINCT COUNT(*) OVER (), NTILE(((((t1.c0)%(t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((t1.c0) IS TRUE)))) OVER (), ((rt1.c3) IS FALSE) FROM t1 WHERE (((((((((((NULL) NOTNULL))OR(((0.33829507121138247) BETWEEN (')E혀') AND ('-678190044')))))OR(((('-43666712', 0x366404b2, 1632774984)) NOT BETWEEN ((0.33829507121138247, NULL, x'6d68')) AND ((0Xffffffffadc7782f, x'', '*y'))))))AND(CAST(x'a1e1' AS INTEGER))))AND(((('-1334496553'))!=((x''))))));SELECT ALL CASE ((((rt1.c4)OR(rt1.c4)))OR(rt0.c1))  WHEN 'Y^6F/itW' THEN ((rt0.c2)>>(rt0.c2)) ELSE (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c2))) END FROM rt1 WHERE ((- (((x'') BETWEEN (768574186) AND (x'')))));SELECT DISTINCT CUME_DIST() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c3)OR(rt1.c2 COLLATE RTRIM)))OR(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))) FROM rt0, rt1 WHERE ((((+ (x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((rt1.c4) BETWEEN (((rt0.c1) BETWEEN (rt1.c1) AND ('-605948680'))) AND ((- (rt1.c1)))) FROM rt0 WHERE (DATE(((x'')IS NOT(x'508e')), CAST('Q_c9X' AS INTEGER), (NOT ('1920589518')), ((('-1624290637', -1025090778, '-678190044'))<(('', -1852172977, NULL))), (x'' IN (x'0f4f'))));SELECT ((('Hᾼ') NOT BETWEEN ('616045425') AND (rt1.c1)) IN ()), ((DATETIME(rt1.c0, rt1.c3, rt1.c2, 0.139416287781996, NULL)) IS FALSE), CAST(AVG(rt0.c2) AS NUMERIC) FROM rt1 WHERE (((((((((((((((NULL)+(0.4676671181252129)))AND('o7繠s0pX')))OR(((NULL) BETWEEN (0.9984936170833718) AND (NULL)))))AND(((('}2Rauj繠UM'))<>((NULL))))))AND(CASE WHEN NULL THEN 0.7372324714020128 ELSE 0.27725399043390075 END)))AND(CAST('V⭈' AS TEXT))))OR(LIKELY(0.03740969059552657))));SELECT ((RTRIM(rt1.c2))+(((rt1.c2)GLOB(v0.c2)))) FROM v0, rt0, rt1; -- 0ms;
SELECT CAST(((rt0.c0) BETWEEN (v0.c1) AND (v0.c2)) AS TEXT) FROM rt1, t1, v0 WHERE ((+ (CAST(NULL AS NUMERIC))));SELECT (NOT (COUNT(v0.c2))) FROM rt0 WHERE ((((('1757143686')<(0.6280726490948537))) BETWEEN ((x'a1c8' IN ())) AND (((x'36d1')*(x'')))));SELECT ALL (CASE WHEN v0.c2 THEN v0.c1 END IN ()) FROM t1, v0, rt1 WHERE (((((((((load_extension(NULL, '-600249811'))AND((((0Xffffffffcd1966c6, '~d᭱n6i', '1352143600', NULL, x''))>=(('', -1.674440953E9, 'HT*zZ,', x'', '0.4676671181252129'))))))AND((x'' IN ()))))AND((NOT ('-1674440953')))))OR((((x'')) BETWEEN ((' <')) AND ((0.25103202999764573)))))); -- 0ms;
SELECT ALL TRIM(DISTINCT rt1.c1, rt1.c1) COLLATE RTRIM, (NOT (((rt1.c3) NOT BETWEEN (rt0.c1) AND (v0.c0)))), GROUP_CONCAT(((rt1.c0)%(v0.c2))) FROM rt0;SELECT ((0x1e2df262)LIKE(t1.c0)) COLLATE RTRIM FROM rt0 WHERE ((('{qV5')>=(NULL)) COLLATE RTRIM);SELECT ALL ((rt1.c1)-(((rt0.c2)IS(rt1.c2)))), CAST(CAST(v0.c2 AS REAL) AS BLOB), CASE WHEN rt0.c0 THEN v0.c2 END COLLATE BINARY FROM v0, rt0 ORDER BY CASE CASE rt1.c4  WHEN v0.c0 THEN '1813946935' END  WHEN (- (rt1.c1)) THEN ((rt0.c2) NOT NULL) WHEN v0.c2 COLLATE NOCASE THEN CAST(v0.c2 AS TEXT) WHEN (((NULL))<=((rt1.c4))) THEN ((((t1.c0)OR(v0.c0)))OR(rt1.c1)) END  NULLS LAST;SELECT ALL rt1.c4 FROM rt0, v0 GROUP BY ((NULL)LIKE(v0.c1 COLLATE RTRIM));SELECT (('0.05553926779898599')IS NOT(((rt0.c0) NOTNULL))) FROM rt0, rt1, t1 WHERE (((((((0X1b6bd084)AND(NULL)))AND(2.35568688E8))) NOT BETWEEN (IFNULL(0xffffffffc97b1047, x'3440')) AND (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT (NOT ((NOT (rt0.c2)))) FROM rt1, v0 ORDER BY (((((rt1.c1)IS(rt1.c2)), CAST(v0.c0 AS INTEGER), CASE WHEN v0.c2 THEN t1.c0 END))!=((((rt0.c2) NOTNULL), CAST(rt1.c0 AS NUMERIC), (- (rt1.c4))))) ASC  NULLS FIRST;SELECT DISTINCT rt1.c2, (((x'f541fff5' IN ()))*(((v0.c2)=('')))), v0.c1 FROM t1, v0 FULL OUTER JOIN rt1 ON ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c2)) COLLATE RTRIM FULL OUTER JOIN rt0 ON ((NULL IN ()) IN ()); -- 0ms;
SELECT ALL (~ (1e500)) FROM rt0, v0, rt1, t1 WHERE (((((((((CAST(NULL AS INTEGER))AND(((x'ac23')<>(0.834093537339127)))))AND(x'' COLLATE RTRIM)))OR(((0.5769837438114842)OR(0.6967211082400709)))))AND(((0Xffffffffb7c411a0)>=(x'917c'))))); -- 0ms;
SELECT (((((rt0.c1))>=((v0.c2))))<<((((v0.c2))=((rt1.c0))))) FROM v0, rt0, rt1 WHERE (CAST(((((x'85f5')AND(1.290389909E9)))OR('0.17014507557264258')) AS TEXT)) LIMIT 1316402214; -- 0ms;
SELECT SQLITE_SOURCE_ID() FROM v0, rt1, t1, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((rt1.c4 COLLATE NOCASE) BETWEEN ((~ (rt1.c4))) AND (v0.c0 COLLATE BINARY)) FROM rt1 NOT INDEXED, t1, rt0;SELECT DISTINCT RTRIM(((rt0.c0)+(v0.c1))) FROM t1, rt1, v0, rt0; -- 0ms;
SELECT ALL ((rt1.c0) NOT NULL) COLLATE BINARY, CASE WHEN ((((rt0.c1)OR(x'')))AND(rt0.c2)) THEN ((rt1.c2)%(v0.c1)) ELSE ((v0.c1) NOT BETWEEN (v0.c0) AND (-304297590)) END, ((CAST(rt0.c0 AS INTEGER))&(MAX(rt0.c1))) FROM rt0, rt1, t1, v0 WHERE ((- ((('&s*N>K5') NOTNULL)))); -- 0ms;
SELECT ALL CASE CAST(rt1.c2 AS REAL)  WHEN CASE v0.c2  WHEN rt0.c0 THEN rt1.c4 ELSE rt1.c0 END THEN ((((rt1.c1)OR(rt1.c0)))AND(v0.c1)) WHEN CAST(rt0.c1 AS NUMERIC) THEN TRIM(DISTINCT rt1.c1) WHEN rt1.c3 COLLATE RTRIM THEN ((((((((((((rt1.c1)OR(v0.c0)))AND(v0.c2)))OR(rt0.c1)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c1)) END FROM rt1, rt0, v0; -- 0ms;
SELECT DISTINCT ((((((rt1.c4) ISNULL))AND('')))OR((((rt1.c4, rt0.c0, rt1.c3))<=((t1.c0, rt1.c2, NULL))))) FROM rt1;SELECT DISTINCT (((rt1.c2 IN ())) NOT BETWEEN (((((rt1.c3)AND(rt1.c0)))AND(rt1.c2))) AND (v0.c1)) FROM t1, rt0 WHERE (CAST(((x'')LIKE(0.40081542069424403)) AS REAL)) LIMIT -2100925258;SELECT ALL CASE WHEN (- (rt1.c2)) THEN (rt1.c4 IN (rt1.c0)) END FROM v0, rt1, rt0 WHERE (((((-4.3666712E7) IS TRUE))GLOB(((-112011776)*(NULL))))); -- 0ms;
SELECT DISTINCT CASE TOTAL(v0.c1)  WHEN load_extension(rt0.c1) THEN ((rt1.c1) IS TRUE) WHEN ((NULL) NOT NULL) THEN (~ (rt0.c1)) WHEN ((0.005175895220581039)+(v0.c2)) THEN ((v0.c2) IS FALSE) END, CAST(rt0.c2 AS BLOB), DENSE_RANK() OVER () FROM rt1 WHERE (CASE ((NULL)IS('y^6f/itw'))  WHEN ((NULL) IS FALSE) THEN CASE 0X6298208c  WHEN NULL THEN 0.47769030549758706 WHEN '' THEN x'6ca420c8' WHEN 0Xffffffff95ea61de THEN '932508938' END END);SELECT DISTINCT (~ (CAST(rt0.c2 AS TEXT))) FROM v0, rt0, rt1 WHERE (((((0.47725014383273434)<=('-660055257'))) NOT NULL)) GROUP BY (((TYPEOF(DISTINCT rt1.c1)))<>((((v0.c2)<('1478810703'))))), CASE WHEN ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c4 END ELSE ((((rt1.c1)AND(rt0.c2)))AND(rt0.c1)) END, (((rt1.c2)<=(v0.c1)) IN (((rt0.c1) NOT NULL), ((t1.c0)IS NOT(v0.c2)))), ((((rt0.c2)|(v0.c0)))AND((-1334496553 IN ()))), ((((((((((((CASE rt1.c3  WHEN v0.c0 THEN x'' WHEN 0.12813539914801153 THEN NULL WHEN v0.c1 THEN rt1.c0 ELSE v0.c0 END)OR(rt1.c2)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR((~ (rt1.c1)))))OR(CASE rt0.c0  WHEN v0.c1 THEN rt1.c0 ELSE rt0.c1 END)))OR(((((((((rt0.c0)OR(rt1.c4)))OR(rt0.c1)))OR(rt0.c1)))AND(rt1.c2))));SELECT DISTINCT CASE WHEN ((x'75ed') IS TRUE) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c4 END END, (- (rt1.c1)), COALESCE(((9.7446137E8)>=(rt1.c4)), UNLIKELY(rt0.c1)) FROM rt1, rt0 WHERE ((CASE WHEN 0.8552820280513598 THEN NULL ELSE NULL END IN ())); -- 1ms;
SELECT DISTINCT CASE ((rt0.c1) BETWEEN (rt1.c0) AND (v0.c1))  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt1.c3) AND (v0.c0)) WHEN (x'' IN (rt0.c1)) THEN ((v0.c0)IS(v0.c2)) WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)) THEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) END, ((CASE v0.c1  WHEN rt1.c1 THEN v0.c1 WHEN rt1.c1 THEN rt0.c1 WHEN 'months' THEN t1.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (v0.c0)), NTILE((((((v0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) IS TRUE)) OVER () FROM rt1, rt0, t1, v0 WHERE (x'') ORDER BY ((((v0.c0)>=(rt1.c1))) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c4 END) AND ((+ (v0.c0)))) DESC  NULLS FIRST, (((~ (rt0.c1)))>(rt1.c0)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN v0.c2 COLLATE NOCASE THEN ((((rt1.c4)OR(0X6298208c)))AND(v0.c2)) ELSE CASE rt0.c0  WHEN rt1.c3 THEN '0.6923416871626948' WHEN rt0.c2 THEN v0.c1 WHEN rt0.c0 THEN rt1.c1 END END FROM v0, t1, rt0 GROUP BY ((('' IN (rt1.c4)))IS NOT(((rt1.c4)LIKE(t1.c0))));SELECT DISTINCT CAST((NOT (v0.c0)) AS INTEGER), ((((v0.c2) NOT NULL)) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (((((t1.c0)AND(v0.c1)))AND(v0.c2)))), (+ (LIKE(rt0.c0, rt0.c0))) FROM rt1 WHERE (((((-1.68491061E8, NULL, 0.0024458031957839133, '0.6868656534365365', ''))<((0Xffffffffee85edb1, '0.9141503241496137', x'2d00', x'', 'S8	Heg'))) IN ()));SELECT (('') NOT NULL), ((rt1.c2)>=('*c')) COLLATE NOCASE, ((CAST(rt0.c1 AS TEXT))AND(((v0.c2)||(rt0.c1)))) FROM t1, rt0 NOT INDEXED;SELECT DISTINCT -509358352 FROM v0, t1, rt1, rt0 WHERE ((((-4.11271534E8, NULL, NULL)) BETWEEN ((NULL, 0.22100210301218992, 0.5776886373676483)) AND ((2007415591, NULL, 0.931727252442932))) COLLATE BINARY); -- 0ms;
SELECT (~ (rt1.c1)) FROM rt1, t1; -- 0ms;
SELECT DISTINCT ((NULL)>=(((rt1.c3)!=(rt1.c1)))) FROM rt0, v0, rt1, t1; -- 0ms;
SELECT DISTINCT (CASE v0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c0 END IN ()) FROM t1, rt0, rt1, v0; -- 0ms;
SELECT DISTINCT UNLIKELY(((rt1.c2) ISNULL)) FROM v0 WHERE (json_object('', '?') COLLATE NOCASE) GROUP BY ((((rt1.c1 COLLATE NOCASE)OR(x'' COLLATE NOCASE)))OR(rt0.c0)) HAVING ((((v0.c0) NOTNULL)) BETWEEN (LIKELY(DISTINCT t1.c0)) AND (GROUP_CONCAT(rt0.c1))) ORDER BY (- (((rt0.c0)<=(t1.c0)))) DESC  NULLS FIRST;SELECT ALL ((rt1.c3 IN ()) IN (CHAR(rt1.c2))) FROM v0, rt1, rt0, t1; -- 0ms;
SELECT ALL ((((NULL) NOTNULL)) NOT BETWEEN (v0.c1) AND ((((t1.c0)) BETWEEN ((0.20468123679533468)) AND ((rt0.c2))))) FROM v0, rt1, t1, rt0 LIMIT -293212751 OFFSET 1750660679; -- 1ms;
SELECT DISTINCT (rt1.c2 IN (HEX(rt1.c3))), TYPEOF(DISTINCT CAST(rt1.c1 AS TEXT)), (((((+ (v0.c1)))OR(((rt1.c2) NOT BETWEEN (rt1.c4) AND (NULL)))))OR(((((((((rt1.c4)OR(v0.c1)))AND(rt1.c1)))OR(rt0.c1)))OR(rt1.c1)))), ((((((rt0.c1)>=(v0.c1)))OR(CASE WHEN rt0.c1 THEN v0.c0 END)))AND(((0xffffffff9f2f4ab3) NOT NULL))), rt0.c1 FROM v0, rt1;SELECT ALL ((AVG(rt0.c1))<=(rt1.c0)) FROM t1, v0, rt1 WHERE ('0.14842857624695427');SELECT DISTINCT UPPER((+ (rt1.c3))), COUNT(((rt1.c3)/(rt1.c3))) OVER (), TRIM(DISTINCT CASE WHEN rt1.c3 THEN '2007415591' ELSE rt1.c3 END) FROM rt0;SELECT DISTINCT ((NULL)|(((rt1.c2)=('-1171540870')))) FROM v0, rt0, rt1, t1 WHERE ((((('1')/(0xffffffffdfc3f5f9))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS BLOB))<=(TOTAL(rt1.c2))), CAST(rt1.c4 COLLATE RTRIM AS NUMERIC), NTILE((((rt1.c4)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((rt1.c2)/(x'')))))) OVER () FROM rt0, t1, rt1, v0 GROUP BY ((rt1.c2 COLLATE BINARY) NOTNULL), v0.c0, CAST(((rt1.c2)>>(rt1.c1)) AS INTEGER); -- 0ms;
SELECT DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c1)) COLLATE RTRIM FROM v0, rt0, rt1; -- 0ms;
SELECT ALL 1731006074 COLLATE NOCASE FROM rt1, rt0, t1, v0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(v0.c2 COLLATE RTRIM) OVER (), 'u1', rt1.c1 FROM t1, v0, rt0 WHERE (((((x'bd4b')>>('-304297590')))OR('-1592103172')));SELECT ALL ((rt1.c2)>(v0.c2)) COLLATE NOCASE, (NULL IN ()), (NULL IN ()) COLLATE RTRIM FROM rt0;SELECT DISTINCT x'' FROM v0, t1, rt0, rt1; -- 0ms;
SELECT CAST(rt0.c0 AS BLOB) COLLATE NOCASE FROM rt0, v0, t1, rt1; -- 0ms;
SELECT ALL ((((v0.c1)GLOB(v0.c2)))IS NOT(SUM(rt0.c1))) FROM rt0 WHERE (((((((0.931727252442932)AND(NULL)))OR(x'26f8'))) NOT BETWEEN (x'' COLLATE BINARY) AND ('')));SELECT ((rt1.c4)-((v0.c1 IN ()))) FROM rt0, v0;SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((highlight(rt1.c2, rt1.c4, t1.c0, rt0.c1))) AND ((MAX(rt0.c0)))), 0.13811864122644557, rt1.c4 FROM v0, rt1, rt0, t1;SELECT (((rt1.c0)>>(NULL)) IN ()) FROM rt0, t1 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN ((('460050564') NOTNULL)) AND ((0.3013978998124778 IN ('932508938', 'U}n'))))); -- 0ms;
SELECT ALL SUBSTR(MIN(v0.c0), ((rt1.c4)+(rt0.c2))) FROM t1, rt0, rt1 WHERE ((((0.6492116057135231)) BETWEEN ((((x'') ISNULL))) AND (((NOT (1721294187))))));SELECT DISTINCT TRIM(DISTINCT json_remove(v0.c0, v0.c1)) FROM rt0 WHERE (((('.jwaIF#Z'))<((NULL))) COLLATE BINARY) GROUP BY 0.9621261882238188, rt1.c4, ((NULL)GLOB(CAST(rt1.c2 AS NUMERIC)));SELECT DISTINCT MIN(((rt0.c2)+(v0.c1)) COLLATE NOCASE) FROM t1, v0, rt0, rt1 WHERE ((((((0.05485434875533646, 0.7140348036410389, NULL))<(('^6', 0.8049957459804871, '1732100898')))) NOT BETWEEN (((NULL)OR(NULL))) AND (((0.5308310466266455) NOT NULL)))); -- 0ms;
SELECT ((AVG(rt1.c3))+(CAST(rt1.c0 AS NUMERIC))) FROM v0, t1 CROSS JOIN rt0 ON ((v0.c2) BETWEEN (((rt1.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) AND (((v0.c2) IS FALSE))) INNER JOIN rt1 ON CASE CASE WHEN v0.c2 THEN -815844523 WHEN v0.c2 THEN v0.c0 WHEN rt1.c3 THEN rt0.c1 END  WHEN (- (v0.c1)) THEN TYPEOF(DISTINCT t1.c0) ELSE ((((-1084470146)OR(rt1.c0)))OR(rt1.c0)) END; -- 0ms;
SELECT (((rt0.c2)) NOT BETWEEN ((CASE WHEN v0.c1 THEN rt0.c0 ELSE rt1.c4 END)) AND ((((rt1.c2) BETWEEN (v0.c1) AND (v0.c0))))) FROM rt1, v0, rt0, t1 WHERE (CAST(((NULL) BETWEEN (x'') AND (-8.15844523E8)) AS INTEGER)); -- 0ms;
SELECT ((rt1.c2) BETWEEN (((rt1.c1) NOTNULL)) AND ((((0.40293306649853655))>((rt1.c0))))) FROM rt0, v0 WHERE (((((('512177463'))>=((NULL))))<<((('1409501868') NOTNULL))));SELECT ALL ((((((v0.c2) NOT NULL))AND(LOWER(rt1.c3))))AND((('-2056930444')LIKE(t1.c0)))) FROM v0, rt0 GROUP BY ((rt1.c2) ISNULL) HAVING ((CASE WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c3 END) ISNULL);SELECT DISTINCT AVG(-1.6175272E9), MAX(5.685842E8), (((rt0.c2)+(rt1.c3)) IN ()), (((- (rt1.c2))) NOTNULL), ((x'45ee') IS FALSE) FROM rt0, rt1, v0; -- 0ms;
SELECT DISTINCT (+ ((rt0.c2 IN ()))) FROM rt0; -- 1ms;
SELECT DISTINCT ((CAST('1800621846' AS TEXT)) NOT NULL) FROM rt1, t1, rt0 WHERE ((((NOT (-1624290637)))|(((x'6ab1')&(0.8539409430032672))))); -- 0ms;
SELECT ALL ((TOTAL(rt0.c1))<((rt1.c1 IN (rt1.c0)))) FROM rt1 LIMIT -1379436497 OFFSET 1458226264;SELECT DISTINCT LAST_VALUE(((- (t1.c0)) IN ())) OVER ( ORDER BY (NOT (((NULL) BETWEEN (rt1.c2) AND (rt0.c1))))) FROM t1;SELECT ALL '-735056279' COLLATE BINARY FROM rt0, v0, t1 WHERE (((((((('1764714045')OR(NULL)))OR('W'))))<>((((('*\')) BETWEEN ((0.6923416871626948)) AND (('09z'))))))); -- 0ms;
SELECT ALL AVG(((t1.c0)LIKE(rt1.c0))) FROM rt0, t1, rt1 GROUP BY (((((rt0.c2)AND(rt1.c1)), rt1.c0 COLLATE BINARY, ((x'')<<(rt1.c1))))<=(((v0.c2 IN (rt1.c3, v0.c1)), ((t1.c0)|(x'')), (- (rt1.c1))))), ((((((((rt1.c3)AND('-1010929460')))AND(rt0.c1)))OR(((rt1.c3)>=(rt1.c1)))))OR('-331823852')), (((((((((((rt0.c1))<((0.7405823179756871))))AND(v0.c1 COLLATE NOCASE)))AND(((((rt0.c2)OR(rt1.c4)))OR(rt1.c1)))))AND(CAST(v0.c2 AS REAL))))AND(((rt0.c2) NOTNULL)));SELECT DISTINCT ((COUNT(*)) IS TRUE), ((((CASE WHEN t1.c0 THEN rt0.c0 END)AND(CASE WHEN v0.c1 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE v0.c1 END)))AND(json('0.005175895220581039'))), ((((HEX(rt1.c0))OR(((rt0.c0)<=(rt1.c1)))))OR((~ (0.7427225661268073)))), CASE WHEN CAST(rt0.c2 AS REAL) THEN CASE WHEN rt1.c4 THEN 0.13275500453973121 END END, v0.c2, (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))) COLLATE BINARY, (NOT (CASE WHEN rt0.c2 THEN rt0.c0 ELSE x'' END)) FROM t1, v0 WHERE (((x'' COLLATE BINARY) BETWEEN ((x'eecb' IN ())) AND (((0.513584312333419) BETWEEN ('-1738985912') AND (x'')))));SELECT v0.c2, SUM((((rt1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c4)))), ((rt1.c3)IS(rt1.c0)) COLLATE BINARY FROM rt1;SELECT DISTINCT rt0.c0 FROM t1, rt0 WHERE (((((((0.6595413596815181) NOT BETWEEN ('') AND ('-2129297627')))OR((x'' IN ()))))OR((('-1010929460')IS NOT(NULL))))) GROUP BY CASE WHEN ((rt0.c2)IS NOT(v0.c0)) THEN ((rt1.c2)%(x'')) ELSE rt0.c0 END;SELECT GROUP_CONCAT(((((t1.c0)AND(rt0.c0)))AND(rt1.c4))) OVER (), (t1.c0 IN (t1.c0)) COLLATE NOCASE, ((((rt1.c3)||(rt1.c1))) NOT BETWEEN (((v0.c2) ISNULL)) AND (AVG(t1.c0))) FROM v0, rt1;SELECT (('-654688172') BETWEEN (ABS(DISTINCT rt0.c0)) AND (CASE rt1.c0  WHEN rt0.c0 THEN 0.8821253223443715 WHEN rt1.c0 THEN v0.c0 WHEN v0.c1 THEN rt1.c3 ELSE v0.c2 END)) FROM t1 WHERE (((((NULL)*(0.9779536063853114)))IS(x'' COLLATE BINARY)));SELECT DISTINCT CAST(((0.9413736377619865)<<(rt0.c1)) AS TEXT), SUM(((t1.c0)%(v0.c1))) OVER ( ORDER BY CAST(rt1.c1 AS TEXT)), CAST(((rt1.c2) ISNULL) AS TEXT), (- ((((rt1.c3))==((v0.c0))))), LTRIM(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c4))) FROM rt1 WHERE ((((0.14999564304558122 IN ()))>=((('*]')<<(0xffffffff919a154f)))));SELECT CAST(v0.c2 AS BLOB) COLLATE NOCASE FROM t1, v0, rt1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY ((CAST(x'' AS INTEGER))||(((rt0.c2)<<(v0.c1))))  NULLS LAST, ((((rt1.c3) NOT NULL))|((rt0.c0 IN ()))) ASC  NULLS FIRST) FROM v0, rt0, rt1 WHERE (((('*\n' IN (x'5e84'))) NOT BETWEEN (((0.6967211082400709)<('*AY'))) AND ((((NULL))<=((1.411025991E9)))))); -- 0ms;
SELECT (- ((t1.c0 IN (rt1.c4, v0.c0)))) FROM t1, rt1;SELECT ALL CASE ((rt0.c1) IS TRUE)  WHEN CASE rt1.c1  WHEN rt1.c0 THEN v0.c0 WHEN 0.7134263644354584 THEN v0.c2 WHEN rt1.c4 THEN NULL WHEN v0.c1 THEN rt1.c4 WHEN NULL THEN rt1.c3 ELSE v0.c0 END THEN NULL END, ((((0.18023218415607034)OR(rt0.c0)))AND(t1.c0 COLLATE RTRIM)), CAST(((rt1.c0)||(rt1.c1)) AS NUMERIC), ((((rt1.c2) IS TRUE)) NOT BETWEEN (rt0.c2) AND (CASE rt0.c0  WHEN rt1.c0 THEN rt0.c0 END)), (+ (((rt1.c2) IS FALSE))), (((rt1.c1, -5.40805639E8, rt1.c0)) NOT BETWEEN (((t1.c0 IN ()), ((rt0.c0)<(rt1.c1)), (('f苪') NOTNULL))) AND ((((rt0.c1)<(rt1.c0)), (((rt1.c4)) NOT BETWEEN ((v0.c0)) AND ((rt1.c4))), x'' COLLATE NOCASE))), GROUP_CONCAT(CAST(rt1.c1 AS INTEGER)) OVER () FROM rt1, t1, rt0, v0 LIMIT 1560426216 OFFSET -1100767775; -- 1ms;
SELECT DISTINCT 0.3305724544557006 FROM rt1, v0; -- 0ms;
SELECT ((((((0xffffffff9f2f4ab3, rt1.c1, v0.c1, rt0.c0, v0.c0)) BETWEEN ((rt0.c1, v0.c1, v0.c2, rt1.c1, rt0.c1)) AND ((rt1.c0, rt0.c2, rt1.c0, rt1.c1, rt1.c2))), (~ (t1.c0)), (- (v0.c1))))<((((v0.c2) BETWEEN (rt1.c2) AND (rt1.c1)), ((rt1.c0)==(rt0.c0)), ((((rt1.c4)OR(rt0.c1)))OR(NULL))))) FROM rt1, t1, v0, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (v0.c1 IN ()) FROM rt1, t1, rt0; -- 1ms;
SELECT DISTINCT (CASE WHEN v0.c0 THEN v0.c1 ELSE NULL END IN ()), ((((((rt0.c0)OR(rt1.c2)))OR(v0.c1)))<=(((rt1.c2)|(rt1.c3)))), ((TOTAL(v0.c2))GLOB((((rt1.c1))<=((t1.c0))))) FROM rt1, t1 WHERE (TRIM((~ (NULL)))) GROUP BY (((NOT (v0.c0)))*(v0.c2)) HAVING rt1.c3;SELECT DISTINCT UPPER(DISTINCT (v0.c1 IN (t1.c0))) FROM rt1, t1, v0 WHERE (('' IN (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((AVG(v0.c0)) NOT BETWEEN ((((rt1.c3)) NOT BETWEEN ((t1.c0)) AND ((v0.c0)))) AND (json(rt1.c4))), ((MAX(1.800621846E9)) BETWEEN (((rt1.c3) NOT NULL)) AND (rt1.c4)), ((((v0.c1)OR(rt0.c2)))OR(rt1.c4)) COLLATE RTRIM FROM v0, rt1;SELECT DISTINCT ROUND(((x'')IS(v0.c1)), (NULL IN ())), AVG('-171116168') OVER (), ((CASE WHEN v0.c2 THEN v0.c2 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END) IS TRUE) FROM t1, v0, rt1, rt0; -- 1ms;
SELECT DISTINCT CASE ((rt0.c2) NOTNULL)  WHEN '688594994' THEN ((t1.c0)+(v0.c0)) ELSE rt1.c3 COLLATE RTRIM END FROM t1, rt0, v0, rt1 WHERE (CASE WHEN ((-1.025090778E9) BETWEEN (NULL) AND (x'22ed')) THEN CASE WHEN NULL THEN NULL END ELSE ((0.6014346178754909)*(x'1730')) END); -- 0ms;
SELECT ALL CAST((- (-698125832)) AS TEXT) FROM rt1, rt0, t1, v0 WHERE ((((('0.8821253223443715') BETWEEN (x'') AND ('&c')))<(('I5}l' IN ())))) LIMIT -1115053620; -- 0ms;
SELECT DISTINCT (('') NOTNULL) FROM t1, rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(SUM(CHANGES())) FROM rt1, v0 NOT INDEXED GROUP BY CAST('''_' AS BLOB), v0.c0, (- (v0.c0));SELECT DISTINCT COUNT(*) OVER ( PARTITION BY CASE WHEN CASE WHEN v0.c2 THEN rt0.c2 WHEN 0.315659630674093 THEN rt0.c0 WHEN 0.5769837438114842 THEN t1.c0 ELSE rt1.c0 END THEN ((rt1.c3)&(rt1.c2)) END, CAST((rt1.c1 IN ()) AS INTEGER)) FROM v0;SELECT (((((rt1.c3))<>(('-1115053620')))) IS FALSE), (((MIN(rt0.c2)))!=((((rt1.c1)AND(v0.c0))))), ((v0.c0) BETWEEN (rt1.c3) AND ((- (rt0.c0)))) FROM t1 CROSS JOIN rt0 ON (((((rt0.c1)/(rt1.c3))))<=(((+ (rt1.c2))))) WHERE (((((('᪸'''))>=((0.6360874099570417))))||((((((((('-735056279')AND(x'')))AND(0.8860590229338493)))OR(-815844523)))AND(-2020069094)))));SELECT DISTINCT CASE WHEN (NOT (v0.c0)) THEN ((rt1.c1)*(rt1.c2)) END FROM t1;SELECT ((rt0.c2 COLLATE NOCASE)%(NULLIF(v0.c0, -1867779837))) FROM t1, rt0;SELECT DISTINCT LEAD(((NOT (rt1.c4)) IN ()), (rt1.c3 COLLATE NOCASE IN ()), ((rt1.c1 IN ()) IN ())) OVER () FROM rt1 WHERE ((- ((('1') NOT NULL)))); -- 0ms;
SELECT (+ (((rt1.c2) NOTNULL))) FROM t1, rt1; -- 0ms;
SELECT ALL LOWER(DISTINCT (~ (v0.c0))) FROM t1, rt1, v0, rt0 WHERE ((((((('*z')AND(0.8334923883479785)))OR(NULL)))==(((((((((((((NULL)AND(0.4388084257951508)))OR(0.5015523624818524)))OR(NULL)))AND('ei')))AND(0.1732424787720217)))AND(x''))))); -- 0ms;
SELECT ALL ((MAX(v0.c0)) NOTNULL) FROM rt0, t1 WHERE (CASE CAST(0.1663645362384848 AS TEXT)  WHEN (1297751996 IN ()) THEN 0x54e3e93d COLLATE NOCASE WHEN ((((x'')OR(NULL)))AND(0x290b2032)) THEN ('-1899925912' IN ()) WHEN (x'2af3' IN ('')) THEN '582457282' ELSE TYPEOF(-799230869) END);SELECT ALL 0.7727515333835067 FROM rt0, v0, rt1 WHERE (((((((x'4128') ISNULL))OR((('1913790787') ISNULL))))OR(ROUND(0.6983524942333655, '552536999')))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT (RTRIM(rt1.c2) IN (CAST(v0.c1 AS TEXT), ((((v0.c0)OR(rt0.c1)))AND(rt1.c2)), ((rt1.c2)||(rt1.c1)))) FROM rt0, v0, rt1 WHERE ((((~ (NULL))) NOTNULL)) ORDER BY (((((rt0.c1 IN (rt1.c1)))AND(CAST(rt1.c4 AS REAL))))OR((('-494572621') BETWEEN ('1732100898') AND (t1.c0))));SELECT ALL CUME_DIST() OVER ( PARTITION BY ((((rt1.c3) BETWEEN (rt1.c2) AND (v0.c2)))AND(((v0.c0) ISNULL))), ((((v0.c2) NOTNULL))||(CASE WHEN rt0.c2 THEN rt0.c0 END))) FROM rt1, t1, rt0, v0 ORDER BY CAST(rt1.c4 AS INTEGER) COLLATE BINARY ASC  NULLS LAST LIMIT -815844523; -- 0ms;
SELECT ALL COUNT(*), CUME_DIST() OVER (), ((IFNULL(rt1.c3, rt0.c2))AND(v0.c0 COLLATE RTRIM)) FROM t1, rt0 GROUP BY (((- (rt0.c2))) IS TRUE), ((((((0X339737a7) IS FALSE))OR((v0.c2 IN ()))))AND((- (t1.c0)))), (~ (UNLIKELY(DISTINCT rt1.c2))) ORDER BY CASE WHEN ((rt0.c1)<=(rt0.c2)) THEN CASE WHEN rt0.c2 THEN v0.c2 END WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN (('552536999')<<(v0.c2)) WHEN ((rt1.c2)LIKE(rt1.c0)) THEN ((rt1.c1) ISNULL) ELSE 0.08663423734219733 END;SELECT DISTINCT CHANGES(), (((((v0.c1))<((rt1.c1)))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt1.c0)), ((CAST(v0.c0 AS TEXT)) BETWEEN (',#>') AND (TYPEOF(DISTINCT rt1.c1))) FROM v0, rt0, rt1, t1 WHERE ((CASE x''  WHEN x'' THEN 646211121 END IN (CASE x''  WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT ((((v0.c1)LIKE(v0.c2))) NOT BETWEEN ((- (rt0.c1))) AND (HEX(rt1.c0))) FROM rt1 LIMIT 616045425;SELECT DISTINCT QUOTE((NOT (rt1.c0))) FROM t1, rt0 WHERE ((~ (LIKELY('-1379436497')))) GROUP BY rt1.c2, (((- (rt0.c0)))<>((v0.c2 IN ()))), CASE WHEN rt0.c2 THEN TRIM(rt1.c1) END HAVING CASE ((v0.c1)<<(rt1.c3))  WHEN (NOT (rt1.c4)) THEN '912524466' WHEN rt1.c1 COLLATE RTRIM THEN CASE WHEN v0.c0 THEN rt1.c2 ELSE v0.c1 END WHEN CAST(v0.c2 AS NUMERIC) THEN ROUND(v0.c2, rt1.c1) WHEN ((-1282924239)AND(rt0.c1)) THEN ((rt1.c2)/(rt0.c1)) WHEN ((v0.c2) ISNULL) THEN ((0.5510298278339052)<>(v0.c0)) ELSE ((((rt1.c0)AND(rt1.c4)))OR(NULL)) END;SELECT DISTINCT ((CASE ''  WHEN v0.c2 THEN rt1.c0 END)IS(CAST(rt1.c3 AS REAL))) FROM v0, t1, rt0 WHERE ((x'' IN ()) COLLATE RTRIM);SELECT DISTINCT ((((rt1.c3)IS NOT(rt1.c0))) NOTNULL) FROM v0, rt1, rt0, t1; -- 0ms;
SELECT DISTINCT v0.c0 FROM v0, rt1; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0, v0 WHERE (CAST(NULL AS INTEGER) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)AND(v0.c1)))OR('0.47769030549758706'))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((v0.c1)<=(t1.c0)))) FROM v0;SELECT DISTINCT TOTAL(MIN(AVG(rt0.c2))) FROM rt0 NOT INDEXED, rt1;SELECT ALL MIN((t1.c0 IN (v0.c0, rt0.c0, 0.40081542069424403))), TRIM((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((v0.c2)))), ((rt1.c4 COLLATE RTRIM) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((x'' IN ()))) FROM rt0, rt1, t1, v0 WHERE ((x'' IN ())); -- 0ms;
SELECT (((rt1.c4 IN (rt1.c1, v0.c2)))LIKE(t1.c0)) FROM t1 WHERE ((((NULL) BETWEEN (x'555e') AND ('-1920630818')) IN ()));SELECT DISTINCT x'' FROM rt0, v0 WHERE (CAST(('-33759000' IN ()) AS BLOB)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((x'' COLLATE BINARY)>=(((x'') ISNULL)))); -- 0ms;
SELECT CASE (((v0.c2, t1.c0, rt0.c1, v0.c1, NULL))<>((rt1.c1, rt1.c3, v0.c2, rt1.c3, v0.c0)))  WHEN (v0.c1 IN (rt0.c1)) THEN rt1.c1 END FROM rt1;SELECT DISTINCT (~ (rt0.c0)) FROM rt1, v0;SELECT DISTINCT rt1.c4, CASE ((rt1.c3)>(rt0.c1))  WHEN ((t1.c0) NOT BETWEEN (rt1.c2) AND (v0.c2)) THEN 0.6798477919962125 END, rt0.c2 FROM v0, rt0 LIMIT -1924032938;SELECT DISTINCT ((rt0.c2 IN (rt1.c3)) IN (rt0.c0)) FROM rt0, t1 WHERE ((~ (((1335631385)&('Fp'))))) LIMIT -1610805648 OFFSET -62863488;SELECT DISTINCT (- (((((x'')OR(rt1.c4)))OR(1856755675)))) FROM t1, rt1 WHERE ((((('IS)[') BETWEEN (NULL) AND (0.4255999298791765)))%(0xffffffffa035cdec))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt1, t1, v0, rt0; -- 0ms;
SELECT (CASE WHEN v0.c2 THEN rt1.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END IN ((rt1.c4 IN ()))), (CASE rt1.c0  WHEN t1.c0 THEN rt1.c4 ELSE rt1.c3 END IN ()), ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)))%(((rt1.c2)>>(rt1.c1)))) FROM v0, rt0, rt1 ORDER BY CASE ((rt0.c2)<>(rt0.c0))  WHEN rt0.c0 THEN ((t1.c0)>(rt0.c1)) WHEN (((rt1.c0, rt1.c3, rt0.c1))==((rt1.c2, rt1.c1, v0.c2))) THEN '!q>>~' WHEN (rt1.c2 IN ()) THEN ((v0.c1)==(rt1.c2)) WHEN UPPER(rt1.c2) THEN (((rt1.c3, rt1.c0, rt1.c0))>((-1.025090778E9, rt0.c2, rt0.c1))) WHEN ((NULL) NOT BETWEEN (-1.53931095E9) AND (t1.c0)) THEN (rt1.c1 IN (rt1.c0, v0.c1)) ELSE ((t1.c0) ISNULL) END ASC;SELECT ALL CASE v0.c0 COLLATE RTRIM  WHEN (rt1.c4 IN ()) THEN ((v0.c0)%(rt0.c1)) ELSE ((rt0.c2) IS FALSE) END FROM v0, rt1, rt0, t1; -- 1ms;
SELECT DISTINCT CAST(v0.c0 AS REAL) COLLATE NOCASE, (((json_object(t1.c0, rt0.c0)))>=((CASE rt1.c2  WHEN rt1.c1 THEN v0.c1 WHEN rt0.c1 THEN v0.c1 WHEN v0.c2 THEN rt1.c0 END))), x'' FROM rt1, v0;SELECT DISTINCT (CAST(rt1.c0 AS NUMERIC) IN ()), AVG(((v0.c2) NOT BETWEEN (rt0.c2) AND (NULL))) OVER (), (((((v0.c2)<<(t1.c0))))>=((((((rt0.c0)OR(t1.c0)))AND(rt1.c4))))) FROM v0, rt1 NOT INDEXED LIMIT -660055257 OFFSET -1539310950;SELECT DISTINCT ((v0.c1) NOTNULL), ((((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<((((0.6226607365499158)IS(v0.c2))))), AVG(CASE rt1.c0  WHEN v0.c2 THEN v0.c1 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c0 THEN 0.13244100999684516 WHEN v0.c0 THEN x'4702' WHEN rt0.c1 THEN v0.c0 ELSE 0.9349287374600654 END) OVER (), CAST(rt1.c4 AS TEXT), CASE (rt1.c4 IN ())  WHEN CAST(v0.c2 AS REAL) THEN 0.6342386340752841 END FROM rt1, v0, t1 WHERE (CASE WHEN (NOT (NULL)) THEN (x'' IN ()) ELSE (- (0xffffffffb07532d7)) END) LIMIT -1278378358;SELECT COUNT(((((rt0.c0)AND(rt1.c0)))OR(rt1.c4))) FROM rt1, rt0, v0 WHERE (((((((((((('ba')AND(0x58f00db)))OR(44023931)))AND(2018938406)))OR(0.8934517194655106))))==((((x'aea0') NOT BETWEEN (NULL) AND (x'1a4c')))))) LIMIT 1153368840; -- 0ms;
SELECT ALL LAST_VALUE((((+ (rt0.c0))) ISNULL)) OVER () FROM v0, t1, rt0 WHERE ((((((((x'', x'557e', '552536999')) NOT BETWEEN ((x'75d7', '', '-1010929460')) AND ((NULL, 0Xffffffffd1a114ad, '-1524237296'))))OR(((((NULL)OR('0.5510298278339052')))AND('')))))OR(NULL COLLATE BINARY))); -- 0ms;
SELECT MAX((((rt1.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) FROM rt0 ORDER BY ((((((((((((((rt1.c0)OR(v0.c0)))AND(v0.c0)))AND(rt1.c4)))AND(rt0.c0)))OR(v0.c2)))OR(v0.c1))) NOTNULL), CASE t1.c0  WHEN ((rt0.c1)LIKE(rt1.c0)) THEN (((rt0.c1, rt0.c0, NULL))<(('c7', v0.c0, rt0.c2))) ELSE rt0.c0 COLLATE NOCASE END  NULLS FIRST;SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)<=((((t1.c0)) BETWEEN (('Fp')) AND ((0X612e38bd))))) FROM v0;SELECT ALL (v0.c0 IN ()), (((LIKELY(DISTINCT rt1.c4)))==((TRIM(DISTINCT t1.c0)))), (((rt1.c3) BETWEEN (rt0.c1) AND (rt1.c2)) IN ((('-605948680') ISNULL))) FROM rt0, rt1, t1 GROUP BY CAST(rt1.c4 AS NUMERIC); -- 0ms;
SELECT SUM(CASE rt0.c0  WHEN t1.c0 THEN rt0.c1 WHEN rt1.c2 THEN v0.c2 WHEN rt0.c2 THEN rt1.c0 END) FROM rt1, rt0, t1 NOT INDEXED, v0 WHERE (CASE 1632774984  WHEN CASE WHEN '2452617' THEN NULL END THEN ((0.834093537339127)IS NOT(x'')) ELSE ((x'') BETWEEN ('') AND (x'47eb')) END); -- 0ms;
SELECT ALL (+ ('923814559')) FROM rt1, t1, v0 WHERE ((- (0.5950480852242005))) ORDER BY (((0xffffffffa8f39fe3))<=((((t1.c0) NOTNULL))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT v0.c1, NULL, CASE ((rt0.c2)OR(rt1.c0))  WHEN IFNULL(rt0.c0, rt0.c2) THEN ((rt1.c2)&(t1.c0)) END FROM rt1, rt0;SELECT DISTINCT ((rt0.c1 IN ()) IN (((((rt1.c4)AND('-1800341289')))OR(rt0.c0)))), CASE WHEN rt1.c0 THEN NULL END COLLATE NOCASE, AVG(v0.c0) FROM t1, rt0, rt1 WHERE ((~ (((0x5824dc4f) NOT BETWEEN ('-540805639') AND ('793399362'))))) ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE ((((rt0.c0)OR(v0.c2)))OR(rt1.c2)) END ASC  NULLS FIRST;SELECT ALL (((rt1.c3 IN ())) NOT BETWEEN ((((rt1.c2, rt1.c1, rt1.c4, x'', v0.c1)) BETWEEN ((v0.c2, t1.c0, x'44b8', v0.c1, rt1.c2)) AND ((rt1.c1, v0.c0, v0.c0, rt1.c4, rt1.c3)))) AND (v0.c0 COLLATE RTRIM)), PERCENT_RANK() OVER (), rt0.c2 FROM v0, t1, rt0 WHERE (TRIM(((0.372901414508219)/(NULL)), ((((768574186)AND(0.47152322975199046)))OR(-5.09358352E8)))) LIMIT -272266357 OFFSET 1231624888;SELECT ALL (- ((+ (t1.c0)))) FROM t1, rt1, rt0, v0 LIMIT -1211887200 OFFSET 994400247; -- 0ms;
SELECT DISTINCT ((rt1.c3 COLLATE BINARY) IS TRUE), (((- (v0.c1)))>>(((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c3)))), ((rt0.c1) NOT BETWEEN (v0.c1) AND (rt1.c4)) COLLATE RTRIM COLLATE RTRIM FROM v0, t1, rt0, rt1; -- 0ms;
SELECT DISTINCT (NOT (rt1.c2)) COLLATE BINARY, (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c3)), MIN(rt0.c2), ((rt1.c4) BETWEEN (v0.c2) AND (v0.c0))))<=((NULL, CASE WHEN v0.c0 THEN '0.387230279290091' END, (NOT (rt1.c0))))), AVG(((v0.c1)==(rt0.c0))), RTRIM(LIKELIHOOD(rt1.c0, 0.8215625598953182)), CASE WHEN ((t1.c0)IS NOT(rt0.c1)) THEN ((rt1.c4) BETWEEN (t1.c0) AND (rt0.c1)) END FROM rt1, rt0, v0, t1 WHERE (CAST(LIKELY(DISTINCT x'') AS BLOB)) GROUP BY (((rt1.c4, 0.13244100999684516, rt0.c1)) BETWEEN ((((x'baea')-(rt1.c1)), CASE WHEN v0.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN v0.c1 END, ((((rt1.c2)OR(rt1.c3)))AND(rt0.c0)))) AND ((CAST(x'6553098cf80b' AS NUMERIC), rt1.c4 COLLATE NOCASE, CASE rt1.c1  WHEN v0.c2 THEN rt0.c2 END))), TRIM(DISTINCT rt1.c4, rt1.c0) COLLATE RTRIM, (((((v0.c2) NOT NULL)))>((((rt1.c1)GLOB(rt1.c2))))) ORDER BY (((NULL))>=(((v0.c1 IN ())))) ASC  NULLS FIRST; -- 0ms;
SELECT ((((rt1.c3)OR(rt1.c2)))OR(v0.c0)) COLLATE BINARY FROM t1 CROSS JOIN rt1 ON ((((((((((((CAST(v0.c2 AS NUMERIC))AND((rt1.c2 IN (rt0.c2, rt1.c0)))))OR(((rt1.c3) NOTNULL))))OR(NULL)))AND((~ (rt1.c1)))))AND(NULLIF(rt1.c2, v0.c0))))AND(((rt0.c1)AND(rt1.c2))));SELECT ALL CASE WHEN CAST(v0.c2 AS TEXT) THEN (((rt1.c4, rt1.c3, rt1.c1)) NOT BETWEEN ((0.7608129917465318, rt1.c3, rt1.c3)) AND ((v0.c0, rt1.c3, rt0.c1))) END FROM t1, rt1, v0, rt0 WHERE (LOWER(x'')); -- 0ms;
SELECT DISTINCT (~ (t1.c0)) FROM rt0, rt1, t1, v0 WHERE ((CAST('6D' AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((rt0.c2)|(rt0.c2))) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((CASE t1.c0  WHEN rt1.c4 THEN rt1.c1 WHEN v0.c0 THEN rt1.c1 WHEN rt1.c2 THEN v0.c2 ELSE rt0.c1 END)OR((((rt0.c2, rt0.c0, rt1.c3))>((rt1.c4, rt1.c1, rt0.c0))))), LTRIM((rt1.c0 IN ()), ((rt1.c1)AND(rt1.c3))), (((v0.c2))==((rt1.c0))) COLLATE NOCASE FROM v0, rt1, rt0, t1 WHERE (((0.05553926779898599)<(NULL)) COLLATE RTRIM) GROUP BY COALESCE(v0.c1, rt1.c0) COLLATE BINARY, TRIM(DISTINCT ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))), CASE WHEN x'04a5' THEN CASE WHEN rt1.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE v0.c1 END ELSE (('0.4676671181252129') NOT BETWEEN (rt0.c1) AND (rt0.c1)) END HAVING TRIM(((rt1.c0)OR(rt1.c0))); -- 0ms;
SELECT ALL GROUP_CONCAT(t1.c0) FROM t1 WHERE (CASE CASE WHEN 0.5769837438114842 THEN '' ELSE '0.47769030549758706' END  WHEN (+ (x'')) THEN ((x'') IS FALSE) END); -- 0ms;
SELECT DISTINCT CASE CASE v0.c2  WHEN rt0.c1 THEN v0.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN -1.01092946E9 ELSE rt0.c2 END  WHEN json_insert(rt1.c4, rt0.c2, rt1.c4) THEN 1.525889569E9 COLLATE BINARY ELSE SUM(rt1.c0) END, CAST((+ (rt0.c1)) AS NUMERIC), ((NULL)OR(rt1.c2 COLLATE NOCASE)) FROM v0, t1 NOT INDEXED, rt0, rt1 WHERE (((x'') BETWEEN (x'') AND ('-1800341289')) COLLATE BINARY COLLATE RTRIM) LIMIT 970505294 OFFSET -331823852; -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt1.c4)) THEN GROUP_CONCAT(v0.c0) END, COUNT(*) COLLATE NOCASE, (t1.c0 IN ()) FROM t1, rt0, v0, rt1 WHERE (NULL); -- 0ms;
SELECT ((((('', v0.c2, rt0.c2))>=((rt1.c1, rt1.c3, rt0.c1))))*(((v0.c1) ISNULL))) FROM v0, rt1;SELECT AVG(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c1))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND (((((rt0.c0, v0.c1, v0.c1))>=((v0.c1, rt1.c0, rt1.c1))))GLOB((- (rt0.c2)))) PRECEDING EXCLUDE GROUP) FROM v0;SELECT DISTINCT (- (CAST(v0.c0 AS REAL))) FROM t1 WHERE ((((((((((NULL)OR('')))AND('g]')))AND('-753761651')))AND('-1624290637')) IN (((NULL)AND(x'')), 'i0')));SELECT DISTINCT AVG((+ (rt0.c2))) FILTER(WHERE ((TRIM(DISTINCT v0.c0)) ISNULL)) OVER ( ORDER BY CASE WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE rt1.c2 END THEN (+ (v0.c2)) WHEN CASE WHEN v0.c2 THEN rt1.c3 END THEN CASE WHEN rt1.c4 THEN v0.c0 ELSE v0.c2 END WHEN CAST(0.3013978998124778 AS BLOB) THEN (0.9873628612774793 IN (rt1.c1)) END ASC, ((rt1.c0) IS TRUE), (((v0.c1)) BETWEEN ((CASE rt1.c4  WHEN v0.c2 THEN v0.c1 ELSE rt0.c0 END)) AND (((rt0.c2 IN ())))) DESC  NULLS LAST) FROM v0, rt0, rt1, t1; -- 1ms;
SELECT ALL (((((rt1.c0))<((v0.c2)))) IS TRUE) FROM rt0, v0;SELECT DISTINCT (((+ (t1.c0))) NOT BETWEEN (TYPEOF(NULL)) AND (rt0.c1 COLLATE RTRIM)) FROM v0, t1 WHERE ((((('1606706386')AND(NULL)))||(x''))) LIMIT -986355521 OFFSET -1298370753;SELECT CAST((- (0.5213167052364273)) AS NUMERIC) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)-(rt1.c0)))AND(((((((((v0.c0)OR(rt1.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt0.c0)))))AND(MAX(v0.c0))))OR((rt1.c4 IN ()))))AND(((rt1.c0)IS(rt1.c4)))) FROM t1, rt1, rt0, v0 WHERE (((CASE WHEN NULL THEN x'' ELSE '#c' END) BETWEEN (COALESCE(DISTINCT 'fu஧bdj', '1787284752')) AND (((x'')-(0.20835236344463115))))); -- 0ms;
SELECT NTH_VALUE((NOT (t1.c0)) COLLATE NOCASE, IFNULL(DISTINCT UNLIKELY(v0.c0), CAST(x'' AS REAL))) OVER (), HEX(GROUP_CONCAT(rt1.c4)), ((MIN(rt0.c1)) NOTNULL), (~ (TOTAL(rt0.c0))), ((((rt0.c2 IN ())))>=((((((((((1316402214)AND(v0.c1)))AND(v0.c2)))AND(rt0.c0)))AND(v0.c2))))), LAG((NOT (((v0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c1)))), (- (rt1.c3 COLLATE BINARY)), (((rt1.c2)) BETWEEN ((((v0.c0)&('-835532486')))) AND (((rt1.c0 IN ()))))) OVER (), ((((rt0.c2 IN ())))>((t1.c0 COLLATE BINARY))) FROM rt0, t1, rt1, v0 WHERE (((((((0.7402906301566696)OR('1732100898')))AND(0.1876621810052136)))+(UNICODE(NULL))));SELECT CUME_DIST() OVER () FROM rt1, rt0 ORDER BY CASE (((rt1.c2, rt0.c0, rt1.c4))<=((rt1.c1, rt1.c3, rt1.c0)))  WHEN rt1.c1 THEN -1.17154087E9 WHEN ((v0.c1) ISNULL) THEN CASE WHEN t1.c0 THEN t1.c0 ELSE rt1.c2 END WHEN ((rt1.c0)<>(rt1.c4)) THEN t1.c0 COLLATE NOCASE END, CASE ((v0.c1)-(v0.c1))  WHEN (rt1.c4 IN (rt0.c1)) THEN (((-5.67744315E8, v0.c2, rt0.c2))>=((x'', '198923073', t1.c0))) WHEN ((rt1.c3)>>(v0.c0)) THEN (0.6794299038156185 IN (v0.c1)) WHEN v0.c2 THEN COALESCE(DISTINCT rt1.c1, x'') END DESC  NULLS FIRST;SELECT DISTINCT ((v0.c0 COLLATE NOCASE)<=(CASE WHEN rt1.c1 THEN rt1.c0 ELSE v0.c2 END)), CAST(GROUP_CONCAT(rt1.c4) AS TEXT), HEX(DISTINCT v0.c2) FROM rt0, v0;SELECT ALL ((((CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)OR(COUNT(rt1.c1))))AND(((x'')IS(v0.c1)))) FROM rt0, t1, rt1, v0 LIMIT -1235993093 OFFSET 958089009; -- 0ms;
SELECT DISTINCT (((rt0.c1)==(x'6370')) IN (json_object(rt0.c2, v0.c2))) FROM rt1, v0 WHERE (((((('X8')<=(0Xffffffffdbe1f4f8))))==((((NULL)GLOB('ttTr~'))))));SELECT ALL '-1937090723' FROM rt1, v0, t1, rt0 WHERE ((((((('qM')AND(x'')))OR(-1519043522))) NOT BETWEEN (((((1.813946935E9)AND(-1.6175272E9)))OR('-1115053620'))) AND (CASE 0.8409716619160564  WHEN NULL THEN NULL ELSE 'nf' END))); -- 0ms;
SELECT ALL TOTAL(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3))) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT ROUND(rt1.c1, v0.c1) COLLATE NOCASE, CAST(CAST(rt1.c4 AS REAL) AS REAL), (- (((rt1.c1)<=(rt1.c1)))) FROM t1, rt1, rt0;SELECT DISTINCT (~ (((rt1.c2) NOT BETWEEN (t1.c0) AND (rt1.c0)))) FROM t1, rt1, v0, rt0 WHERE (CAST(((((((((((((x'')AND('73960830')))AND('235568688')))AND('')))OR(0.10845798258104744)))AND(x'')))OR(0.01693211684102469)) AS TEXT)) LIMIT -1171540870 OFFSET 193495031; -- 0ms;
SELECT DISTINCT ((((((((9.32508938E8)OR('怞/3x')))OR(((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c4)))))OR(CASE x''  WHEN v0.c1 THEN rt0.c2 END)))OR(CAST(v0.c1 AS INTEGER))), (((((rt1.c4) NOT BETWEEN (v0.c2) AND (x''))))>=((((rt1.c3) BETWEEN (t1.c0) AND (rt0.c0))))), FIRST_VALUE(v0.c0) OVER () FROM v0, rt0, t1 LEFT OUTER JOIN rt1 ON ((UNLIKELY(DISTINCT v0.c1))<<((0.6248096926336709 IN ()))) LIMIT -1440167232; -- 1ms;
SELECT ALL (((1.654136972E9))<((x''))) FROM rt0, v0 WHERE (HEX(CAST(NULL AS NUMERIC))); -- 0ms;
SELECT ALL '{}', CAST(NULL AS INTEGER), ((((rt1.c0) IS TRUE))>(MIN(rt1.c1))), ((((((((((v0.c1)AND(v0.c0)))AND(rt0.c0)))OR(v0.c2)))OR(rt1.c2)))<=((v0.c0 IN ()))), (((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE NOCASE FROM v0, rt1 ORDER BY rt1.c3  NULLS FIRST;SELECT ((NULL)LIKE(x'd3eb')) FROM v0, rt0; -- 0ms;
SELECT DISTINCT NTILE((- (t1.c0 COLLATE BINARY))) OVER () FROM rt0, v0, t1 WHERE (-1.12011776E8); -- 0ms;
SELECT DISTINCT (rt0.c1 IN (((rt1.c2) NOT BETWEEN (x'') AND (v0.c2)), CASE v0.c2  WHEN v0.c2 THEN rt1.c0 ELSE v0.c0 END)) FROM rt1, t1 WHERE ((~ (((('o9	?', x'', x'', 0.7402906301566696, x'7297'))>((NULL, '-220225855', '-1592103172', x'', 'U~'))))));SELECT DISTINCT LOWER(rt0.c2) FROM rt0, rt1, v0, t1; -- 0ms;
SELECT DISTINCT LEAD((v0.c1 IN ()) COLLATE NOCASE, NULL, ((((rt0.c0) BETWEEN (rt1.c4) AND (rt1.c4))) NOT NULL)) OVER () FROM v0, t1, rt1, rt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(x'', 0.02314860476294467) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c0)IS NOT(v0.c0)))<<((v0.c2 IN (rt0.c0)))), (rt1.c1 COLLATE NOCASE IN (((((rt1.c1)OR(NULL)))OR(rt0.c0)))), ((TOTAL(rt1.c0))<=((((t1.c0, v0.c1, v0.c2))<>((rt1.c2, rt0.c1, rt1.c0))))) FROM rt0 WHERE ((((((- ('1800621846')))AND('237005378')))OR(CAST(NULL AS BLOB)))) ORDER BY ((((v0.c2 COLLATE RTRIM)AND(((rt1.c0)AND(rt1.c4)))))AND(0.27321425740537764)) DESC  NULLS LAST, (rt1.c4 IN ())  NULLS LAST;SELECT CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)) THEN CASE WHEN v0.c2 THEN rt0.c2 END ELSE (rt1.c1 IN ()) END FROM rt1, rt0, v0, t1 WHERE ((CASE NULL  WHEN NULL THEN NULL WHEN x'' THEN x'' WHEN NULL THEN x'' END IN (((x'') NOT BETWEEN (0.6694240391168875) AND (x''))))); -- 0ms;
SELECT ALL ((((rt0.c0))>=((v0.c0))) IN ()), (((0.5021935277996032))<>((rt0.c1))) COLLATE RTRIM, CAST('-665293707' AS INTEGER) FROM v0;SELECT ALL UNLIKELY(((rt1.c4)<=(rt1.c2))) FROM v0, t1 WHERE (((((((((((0.10848148121409706)<('-1674440953')))AND((('-1801487750')*(x'7dd1')))))AND(((((((((NULL)AND('HDF6P')))OR(NULL)))OR(x'0c08')))OR('0.08663423734219733')))))OR(CASE WHEN NULL THEN 'dkej.k' ELSE NULL END)))AND(TRIM(''))));SELECT ((CASE WHEN rt0.c0 THEN v0.c0 END)/(GROUP_CONCAT(v0.c2))), (((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE, rt0.c1 FROM t1 WHERE ((((0.039003352461288276, 'TRUE', x'')) BETWEEN (('w>', '235568688', 0.21828265419510195)) AND ((6.16045425E8, -6.00249811E8, NULL))) COLLATE RTRIM);SELECT DISTINCT COUNT(*) OVER ( PARTITION BY CASE WHEN CAST(v0.c1 AS INTEGER) THEN (rt1.c3 IN ()) ELSE rt1.c2 END, ((NOT ('G')) IN ())) FROM v0, rt0 WHERE (CAST((('IS)[') BETWEEN (x'') AND ('-425169734')) AS REAL));SELECT (((('0.08663423734219733')AND(rt0.c1 COLLATE BINARY)))AND('-1624290637')) FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c3 FROM t1 GROUP BY (x'' IN ()), (~ (v0.c0)) COLLATE RTRIM, ((v0.c0) NOTNULL);SELECT ALL TIME((rt0.c1 IN ()), rt1.c3, CAST(t1.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt1.c1) AND (v0.c2)), ((rt1.c1)-(rt1.c1)), -735056279, (((rt0.c2, v0.c1, v0.c0, v0.c1, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, v0.c2, rt1.c2, NULL)) AND ((rt0.c2, '''(', rt0.c2, v0.c0, t1.c0))), (((NULL, rt0.c2, rt0.c1))<=((rt1.c2, v0.c1, t1.c0))), GROUP_CONCAT(rt1.c1)), CASE ((rt0.c1)==(v0.c0))  WHEN CAST(NULL AS NUMERIC) THEN (v0.c2 IN ()) END, NTH_VALUE(CASE WHEN ((rt0.c0) ISNULL) THEN (v0.c0 IN ()) ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c2)) END, CASE (- (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN v0.c1 WHEN v0.c1 THEN rt0.c0 WHEN v0.c1 THEN 'H%' ELSE v0.c2 END THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) END) OVER () FROM rt0, v0;SELECT GROUP_CONCAT(((NULL)||(NULL))) FROM t1, v0, rt0, rt1 WHERE (1.731006074E9) LIMIT -1379436497 OFFSET 1354740977; -- 1ms;
SELECT ALL MAX(((t1.c0) IS FALSE)) FROM rt1, t1, v0, rt0 WHERE (((CASE NULL  WHEN NULL THEN '' ELSE 0.5272893651777042 END)IS NOT(CASE 0.4001985761361895  WHEN '1689542575' THEN x'' END))) ORDER BY ((0.2055532340104893)=(((rt0.c2)<<(rt0.c0)))); -- 0ms;
SELECT ALL CAST((((v0.c2, rt1.c3, rt1.c2, rt1.c3, rt1.c0)) BETWEEN ((v0.c2, v0.c2, rt1.c4, rt0.c1, rt0.c1)) AND ((v0.c1, rt1.c0, v0.c2, rt1.c4, rt1.c3))) AS BLOB), (((t1.c0)) BETWEEN ((0X509812f0)) AND ((AVG(v0.c1)))), (('') IS TRUE) FROM rt1, t1, v0, rt0; -- 0ms;
SELECT ALL CAST(NULL AS BLOB) COLLATE RTRIM FROM t1; -- 0ms;
SELECT DISTINCT AVG(CASE WHEN v0.c2 THEN rt1.c3 END) FROM rt0, v0 GROUP BY (((t1.c0))<>(((+ (rt1.c2)))));SELECT DISTINCT (('768574186') ISNULL) FROM t1, v0 WHERE ((((((('A燸') ISNULL))OR(NULL COLLATE BINARY)))OR(((0.5087812978754185) ISNULL)))); -- 0ms;
SELECT (+ (((v0.c1) NOT BETWEEN (NULL) AND (rt1.c1)))) FROM rt1 LIMIT 1813946935;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1)))OR(t1.c0 COLLATE RTRIM)) FROM t1, rt0, v0, rt1 WHERE (((((NULL)==(0.7018022502942306))) NOTNULL)); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT rt1.c3) COLLATE NOCASE FROM t1, rt0;SELECT ALL ((((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c4)))%(((rt0.c2)OR(rt1.c2)))) FROM rt0 WHERE ('-744577713') ORDER BY ((CAST(rt1.c2 AS NUMERIC))<<(((((rt0.c2)OR(v0.c0)))OR(t1.c0))))  NULLS FIRST, CASE WHEN ((rt0.c2) BETWEEN (t1.c0) AND (rt1.c4)) THEN (~ (rt0.c0)) END DESC;SELECT UPPER(DISTINCT ((rt1.c4) IS FALSE)), (((x'db56'))<(((((rt1.c3, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt0.c2)) AND ((rt0.c2, t1.c0, rt1.c1)))))), (MIN(rt0.c0) IN ()) FROM v0;SELECT SUM(((t1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) FILTER(WHERE (((t1.c0)=(v0.c2)) IN ((rt1.c4 IN ())))) OVER (), MIN(x'', ((((((((v0.c0)OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c3))), (((rt1.c0))!=((CASE rt0.c0  WHEN rt1.c2 THEN rt1.c1 END))) FROM v0 WHERE (CAST(UNLIKELY(0.2077979850497499) AS BLOB));SELECT ALL FIRST_VALUE(((((rt0.c0) ISNULL))|(((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c2))))) OVER (), CAST(rt0.c2 AS BLOB), '' FROM rt0, t1 ORDER BY LIKELIHOOD(((rt1.c4)-(v0.c1)), 0.3998883742601782) ASC, ((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c4))) IN ())  NULLS FIRST;SELECT ALL ((CASE rt0.c2  WHEN t1.c0 THEN rt1.c3 WHEN rt1.c3 THEN t1.c0 WHEN rt1.c1 THEN rt0.c2 END)LIKE((((rt1.c1, rt1.c2, rt1.c2))!=((rt1.c2, rt1.c1, rt0.c1))))) FROM v0, t1, rt1, rt0 WHERE ((((((((((((x'', '2C', 'G')) NOT BETWEEN (('%36RSy{', 0.22126412791677397, '1411025991')) AND ((NULL, 's紟MX', '1602842525'))))OR(0.6280726490948537)))AND(((('SH荏BEw', ']', 0.4454666193376343))<((0.6692293742124846, x'', -733739701))))))OR((((('-1749923161')AND(x'f606')))OR(x'')))))OR(((NULL)/('-822790611'))))); -- 1ms;
SELECT ALL ((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))) ISNULL), CASE WHEN CAST(-425461873 AS INTEGER) THEN CASE rt0.c2  WHEN v0.c1 THEN rt0.c0 ELSE t1.c0 END END, (rt0.c0 IN ()) COLLATE NOCASE FROM v0, rt0 WHERE (((2135334714 COLLATE BINARY)!=('2[j9~-4ff'))) LIMIT -502487628 OFFSET -670860156;SELECT DISTINCT DENSE_RANK() OVER (), ((CASE WHEN rt1.c2 THEN v0.c0 ELSE rt1.c1 END) NOT NULL), (((NOT (v0.c2))) BETWEEN (((rt1.c4) BETWEEN (t1.c0) AND (rt0.c2))) AND (x'')) FROM t1, v0 WHERE ((('688594994') BETWEEN (x'') AND ('1102283651')) COLLATE BINARY COLLATE BINARY);SELECT ALL LEAD(TIME(LTRIM(v0.c1), (((v0.c0))<((v0.c2))), MAX(v0.c0, t1.c0), (v0.c1 IN (v0.c1)), ((((0.8079199881243204)AND(v0.c0)))AND(v0.c2))), ((v0.c1)>>(v0.c0)) COLLATE RTRIM, (NOT ('568584200'))) OVER () FROM t1 NATURAL JOIN v0; -- 0ms;
SELECT DISTINCT ((((v0.c0)<=(v0.c0))) BETWEEN (COUNT(*)) AND (((((((((((((rt1.c4)OR(rt1.c3)))AND(rt0.c2)))OR(t1.c0)))AND(v0.c1)))AND(rt0.c1)))OR(rt0.c1)))) FROM t1, rt1, v0, rt0 WHERE (((CAST(NULL AS TEXT))OR((~ (-1504019156))))); -- 1ms;
SELECT DISTINCT CASE WHEN ((0.6489114603730336) ISNULL) THEN (((t1.c0, rt0.c2, rt1.c2))<>((rt0.c0, 8.61331386E8, rt1.c1))) ELSE AVG(rt1.c4) END FROM t1, rt0, v0 LIMIT 1654136972 OFFSET -1378585721;SELECT DISTINCT ((((((((((((v0.c2)OR(v0.c1)))OR(rt1.c1)))OR(rt1.c0)))AND(rt0.c2)))OR(((rt0.c2) NOT NULL))))OR(((rt1.c1) ISNULL))), ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (v0.c2)))<('441327658')), AVG(0.5776886373676483) OVER () FROM t1, rt0 WHERE (((((0.14187767279936214) IS TRUE)) NOTNULL));SELECT (('') NOT NULL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(((t1.c0) NOT BETWEEN (rt1.c3) AND (t1.c0))) FILTER(WHERE (((rt1.c2)AND(rt1.c4)) IN ())) OVER () FROM t1, v0, rt1, rt0; -- 0ms;
SELECT 't9' FROM rt0, rt1, t1, v0 WHERE (((('~,b25\rt(')) BETWEEN (((0Xffffffff8384e582 IN ()))) AND (((((((((('zP')AND(x'a6ed')))AND('467112954')))OR(0x54e3e93d)))AND(1.560426216E9)))))) LIMIT 1175435951 OFFSET 1565024581; -- 1ms;
SELECT DISTINCT ((v0.c2) ISNULL) COLLATE BINARY FROM t1, rt1, rt0;SELECT v0.c1, ((rt0.c0)<>(((v0.c0)/(v0.c0)))), CAST((NOT (v0.c1)) AS INTEGER) FROM t1, rt0 WHERE ((('sz3\nE<Eo6')*(0.6140627336132543)));SELECT DISTINCT (((rt0.c2))<=((rt1.c2))) COLLATE RTRIM FROM rt1, t1 WHERE (CASE (- (''))  WHEN ((x'9f02') NOT BETWEEN ('-1') AND ('fK')) THEN ((x'')LIKE(0X74e1212c)) END);SELECT DISTINCT SQLITE_VERSION() COLLATE RTRIM FROM t1, v0, rt0, rt1 WHERE (((((0.8273772359038407)<<(0.6597588068638633))) IS TRUE)) GROUP BY 0x41789669 LIMIT -1900368320;SELECT DISTINCT ((((v0.c1) BETWEEN (rt1.c2) AND (rt1.c3)))<<(((((rt1.c2)OR(NULL)))OR(rt1.c3)))) FROM v0 WHERE (((TYPEOF(x'e500')) NOTNULL));SELECT ALL ((((((((((((rt1.c2)AND(v0.c1)))AND(t1.c0)))OR(0.2208588355142873)))AND(rt1.c0)))OR(CAST(rt0.c2 AS NUMERIC))))OR((((rt1.c1))>=((rt1.c3))))) FROM t1, rt1, rt0;SELECT rt1.c2, NULL, CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER), ((((CASE WHEN rt1.c1 THEN rt1.c2 ELSE v0.c0 END)OR(((rt1.c2) NOT NULL))))AND(SUM(v0.c2))), CASE ((v0.c0) NOT BETWEEN (t1.c0) AND (x''))  WHEN ((rt1.c1)||(t1.c0)) THEN x'7277' ELSE (~ (rt1.c3)) END FROM rt0, rt1, t1;SELECT DISTINCT (((v0.c0)) BETWEEN (((NOT (NULL)))) AND (((+ (v0.c0))))), ((((((rt1.c0, rt0.c2, rt1.c4)) BETWEEN ((v0.c0, rt1.c4, rt0.c1)) AND ((rt1.c0, v0.c2, v0.c0))), x'd363', ((v0.c0)==(v0.c1))))<((((v0.c2) BETWEEN (rt1.c2) AND (NULL)), ((0.05485720285644713)&(v0.c2)), CASE WHEN 'MDa.n+V.' THEN v0.c0 ELSE t1.c0 END))), (NOT (((rt0.c0) BETWEEN (rt1.c3) AND ('1349965797')))) FROM rt0, t1, rt1, v0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((((0.7293471169073563)>>(rt0.c0))))<(((t1.c0 IN (rt0.c0, t1.c0))))), ((v0.c2 COLLATE BINARY) ISNULL), TOTAL_CHANGES() FROM v0, rt1, t1;SELECT ALL CASE rt0.c2 COLLATE RTRIM  WHEN '' THEN rt0.c0 ELSE t1.c0 END FROM v0, t1, rt1 WHERE (((((CASE WHEN '0.7427225661268073' THEN 793399362 ELSE ' x?dF%Qz' END)AND((((('a~')AND(x'')))AND('B,')))))AND(((0.6061579123509742)IS NOT(NULL)))));SELECT DISTINCT (((v0.c2)) NOT BETWEEN ((((v0.c1)GLOB(t1.c0)))) AND (((((v0.c2))==((rt1.c4)))))) FROM rt1, v0, t1 WHERE (((('Q즊1_f0m?' IN ()))OR((('h''Z3 r]') NOT NULL)))); -- 0ms;
SELECT DISTINCT (((((v0.c2, rt1.c2, rt0.c1))=((rt1.c0, '-567744315', '313966081')))) IS FALSE) FROM v0 WHERE ((((x'' IN ('', '1344107032'))) NOT BETWEEN ((NOT (0.2979882298289881))) AND (((NULL)||(NULL))))) LIMIT -1623009098;SELECT DISTINCT v0.c2 FROM v0, t1, rt0, rt1 WHERE ((+ (UNLIKELY(DISTINCT NULL)))); -- 0ms;
SELECT DISTINCT (((t1.c0)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((((rt1.c0)%(rt1.c1))))), rt0.c1, ((v0.c0 IN ()) IN ()) FROM t1, rt0, v0;SELECT DISTINCT ((rt1.c4)-(rt1.c0)) COLLATE BINARY, (~ ((+ (rt1.c0)))), '᪸''' FROM rt0, rt1, v0, t1; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c2) NOT NULL))), SUM(((((rt1.c2)OR(rt0.c2)))OR(v0.c2))), (((((((((rt1.c3 IN (t1.c0, v0.c0)))AND(rt0.c1 COLLATE BINARY)))OR(0.5504732142918389)))AND((((rt0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1))))))OR((+ (x'')))) FROM rt1, v0, rt0, t1 WHERE (CASE ''  WHEN (('')GLOB(0.27725399043390075)) THEN (~ (NULL)) END); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)GLOB(v0.c0)) AS BLOB) FROM t1, rt1, v0;SELECT DISTINCT (((((((((((((- (rt1.c0)))AND(0.954389763396935)))OR(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0)>(rt0.c0)))))AND(((((((((rt1.c4)OR(rt1.c1)))AND(rt1.c3)))OR(v0.c1)))AND(v0.c0)))))OR(CASE WHEN rt1.c4 THEN '599014835' WHEN v0.c0 THEN v0.c2 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN 0.03989505266371152 WHEN t1.c0 THEN 0.7140348036410389 ELSE rt1.c0 END)))AND(rt0.c2)), v0.c0, (((((x'')AND(v0.c1)))AND(rt0.c1)) IN ()) FROM rt0, t1, rt1, v0; -- 1ms;
SELECT (((NOT (rt1.c4)))*(CASE rt1.c1  WHEN rt1.c0 THEN v0.c1 END)) FROM v0;SELECT DISTINCT (((rt0.c0 IN ())) IS TRUE), ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((rt1.c2 IN ())) AND (((v0.c1) NOTNULL))), CAST(x'' AS INTEGER) FROM rt0, t1, v0 WHERE (NULL);SELECT DISTINCT CASE WHEN json_object(v0.c0, rt0.c2) THEN GROUP_CONCAT(rt1.c1) END FROM rt1, rt0 WHERE (x'') LIMIT 1654136972 OFFSET -663162471;SELECT DISTINCT (((((((('*C#TjP\䚥겼')AND(rt1.c1)))AND(rt1.c2)))OR(CAST(rt0.c2 AS INTEGER))))AND(CASE WHEN rt1.c4 THEN v0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN v0.c2 THEN v0.c1 ELSE rt0.c0 END)) FROM t1, rt0, rt1 WHERE (((((((((-1504730902 COLLATE NOCASE)OR(((NULL) IS TRUE))))OR(((('1424222525')) BETWEEN ((-726797850)) AND ((0.11171976592218869))))))OR(((NULL)IS(NULL)))))AND(((-332595170)&(-1.2118872E9)))));SELECT DISTINCT x'' COLLATE BINARY, ((rt0.c2)<(v0.c2)) COLLATE BINARY, ((((v0.c0) IS FALSE)) NOTNULL) FROM rt0, t1 WHERE ((((- (NULL))) NOTNULL));SELECT DISTINCT MAX((((x''))=((x'fad7')))) FROM rt1, v0, t1, rt0; -- 1ms;
SELECT DISTINCT ((rt1.c1) ISNULL), ((v0.c0)>(rt1.c0)) COLLATE RTRIM COLLATE RTRIM, 0Xfffffffffd65b2e8 FROM rt1 WHERE ((((x'')) NOT BETWEEN (((('2020578780')LIKE(-4.23910791E8)))) AND ((LIKELIHOOD(DISTINCT '-1025090778', 0.6523442515203833))))) GROUP BY TRIM(NULL);SELECT DISTINCT ((((t1.c0)>=(rt1.c3))) IS FALSE) FROM rt0, rt1 WHERE (json_object(((((((((x'')OR(0.48009076396623906)))OR(x'')))AND('\n8')))AND(x'')), ((x'87cb') ISNULL), ((('-853973306', 0.1527308489270509, -1211887200))<=(('709785850', '-1389072982', 0xffffffffa618ecca))), ((NULL)/(x'f37e65a2'))));SELECT DISTINCT CAST(((rt0.c2)||(rt0.c1)) AS TEXT), ((rt0.c0) NOT BETWEEN ((NOT (rt1.c4))) AND ((rt1.c3 IN (rt1.c2)))), CASE v0.c2  WHEN rt1.c0 THEN rt1.c4 ELSE x'6dc3f27a' END COLLATE BINARY FROM rt1, v0;SELECT DISTINCT rt1.c3 FROM rt0, t1, v0, rt1; -- 0ms;
SELECT ALL ((rt1.c4)IS NOT(NULL)) COLLATE NOCASE, SUM((t1.c0 IN ())) OVER (), (+ (((v0.c1) BETWEEN (rt0.c2) AND (v0.c1)))) FROM t1, rt0;SELECT DISTINCT NULL FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(t1.c0 COLLATE NOCASE AS INTEGER) FROM rt1 GROUP BY ((rt1.c0 COLLATE NOCASE)/(((v0.c2) ISNULL))) LIMIT 714865067 OFFSET -1084470146;SELECT DISTINCT (CAST(t1.c0 AS NUMERIC) IN (((rt1.c2)-(rt1.c1)))) FROM t1, v0;SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((rt1.c0)<(v0.c2)))) AND ((((((0.8478336116287349)OR(rt1.c2)))OR(rt1.c0))))) FROM t1;SELECT ALL ((((t1.c0)>=(rt1.c4))) BETWEEN ((~ (rt1.c0))) AND (((rt1.c4) NOT BETWEEN (t1.c0) AND (0.08663423734219733)))) FROM v0, t1, rt1 WHERE ((((NULL IN ())) ISNULL)) ORDER BY v0.c0 DESC  NULLS LAST; -- 0ms;
SELECT ALL (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END IN ()) FROM t1, v0, rt0 UNION SELECT DISTINCT GROUP_CONCAT(((rt1.c1) NOT NULL)) OVER () FROM rt0;SELECT DISTINCT ((AVG(rt0.c0)) IS TRUE), (NOT ('1669531144')), LAG(COALESCE((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))), t1.c0), ((((t1.c0, t1.c0, ''))=((t1.c0, t1.c0, t1.c0))) IN ()), (+ (CAST(t1.c0 AS INTEGER)))) OVER () FROM t1 WHERE (CAST(((NULL)LIKE('Q_c9f')) AS REAL));SELECT DISTINCT '158258457' FROM rt0; -- 0ms;
SELECT (((rt0.c1)<>(rt1.c1)) IN (CAST(rt1.c4 AS BLOB))) FROM v0, t1, rt0;SELECT DISTINCT ((v0.c0 COLLATE BINARY) BETWEEN (MAX(v0.c0)) AND (CASE WHEN t1.c0 THEN v0.c0 WHEN 0.7186766157671348 THEN rt1.c4 WHEN '1159086073' THEN rt1.c0 ELSE v0.c1 END)) FROM t1, v0, rt1 WHERE ((0x6800d0b3 COLLATE BINARY IN ())) GROUP BY ((rt1.c4) IS TRUE) HAVING CASE CASE WHEN v0.c1 THEN t1.c0 ELSE rt1.c4 END  WHEN (~ (v0.c0)) THEN TYPEOF(NULL) WHEN t1.c0 COLLATE BINARY THEN ((v0.c0)&(rt1.c0)) WHEN rt0.c1 COLLATE BINARY THEN (NOT (rt0.c1)) ELSE SQLITE_VERSION() END LIMIT -634586787 OFFSET 680860817;SELECT DISTINCT 'p쾴*ᦺ' FROM v0 WHERE (((NOT (0.8454657287829379)) IN ())); -- 0ms;
SELECT DISTINCT 'ba' FROM v0 FULL OUTER JOIN t1 ON 0.8092221211458209 WHERE ((((- (-4.11271534E8)))>=((('-411271534')>=(''))))) GROUP BY ((CASE WHEN rt1.c3 THEN x'' END)IS NOT(((rt1.c2)>(rt1.c2))));SELECT (((((((v0.c0)) BETWEEN ((rt1.c4)) AND ((rt1.c0))))OR((~ (rt0.c2)))))AND((- (rt0.c0)))), (v0.c1 COLLATE NOCASE IN ()), rt1.c3 FROM rt1, v0, rt0, t1 WHERE ((((((((((x'5a2d' IN ()))OR(NULL)))OR(((((NULL)AND('552536999')))AND(0xffffffff8565bb74)))))AND(((2.35568688E8)%(NULL)))))OR(((x'') BETWEEN (0.08434634330468105) AND ('568584200'))))) GROUP BY CAST(((v0.c0)IS NOT(rt0.c1)) AS REAL) LIMIT -112011776; -- 0ms;
SELECT ALL TOTAL((+ (rt0.c0))) OVER () FROM rt1 ORDER BY (((~ (v0.c2))) NOT BETWEEN (((((((((rt0.c0)OR(rt1.c4)))AND(rt1.c1)))OR(v0.c0)))AND(v0.c1))) AND ((t1.c0 IN ())));SELECT ((((v0.c1)OR(rt1.c2)))*((~ (rt1.c2)))), LAST_VALUE(((((((((CAST(v0.c0 AS TEXT))AND(CAST(v0.c2 AS TEXT))))OR(LIKELY(DISTINCT v0.c2))))AND(v0.c0 COLLATE BINARY)))OR(CAST(v0.c1 AS TEXT)))) OVER (), CASE WHEN rt0.c1 COLLATE NOCASE THEN (- (rt1.c3)) WHEN COUNT(*) THEN 0.9862294369966931 COLLATE NOCASE WHEN '' THEN rt1.c0 COLLATE BINARY END FROM v0 WHERE (TRIM(DISTINCT TRIM(DISTINCT ''), CAST('g*' AS BLOB))) GROUP BY (((x'')) NOT BETWEEN ((STRFTIME(0Xffffffff99e05601, 0.9575955096067428, v0.c2, rt1.c0, t1.c0))) AND ((x'1294'))), ((LTRIM(v0.c2, rt1.c3))|(json_valid(rt1.c1))), (((rt1.c0) BETWEEN (v0.c0) AND (rt0.c1)) IN ()) HAVING (((('-168491061')AND((~ (rt1.c0)))))AND(((v0.c2) NOT NULL)));SELECT ALL TOTAL((((rt0.c0))<=((t1.c0)))) FROM rt0, rt1, t1 GROUP BY CAST(rt1.c4 AS NUMERIC) COLLATE NOCASE HAVING (+ (CAST(rt0.c2 AS REAL))); -- 1ms;
SELECT DISTINCT ((SUBSTR(v0.c0, rt1.c4)) ISNULL), ((((((((((v0.c1)AND(t1.c0)))AND(rt1.c0)))AND(rt0.c0)))OR(v0.c0)))GLOB((NOT (rt1.c3)))), COALESCE(((rt1.c0)/(x'c277b4fc')), ((rt0.c0) IS TRUE)) FROM rt0, t1, v0 LIMIT -986355521 OFFSET 512177463;SELECT DISTINCT CUME_DIST() OVER () FROM rt1 WHERE (((TYPEOF('-456295399')) NOT BETWEEN ((((NULL)) BETWEEN (('-1284700337')) AND (('768574186')))) AND (CASE WHEN 0X111b7dc7 THEN 'N\n' WHEN 0.9399504537735043 THEN '-1115053620' WHEN '-2056930444' THEN 0.14000057331956473 END))) GROUP BY ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c4 END) NOT BETWEEN (((rt1.c4) IS FALSE)) AND ((rt1.c3 IN ()))), (CAST(rt0.c0 AS REAL) IN ()), TIME(rt0.c1, (+ (rt1.c3)), (rt1.c0 IN ()), ((rt1.c0) NOT BETWEEN ('-ށz') AND ('1920589518')), CAST(v0.c2 AS NUMERIC));SELECT ALL ((((v0.c1) BETWEEN (rt1.c2) AND (')'))) NOT BETWEEN (rt1.c4 COLLATE NOCASE) AND ((((rt1.c2))>=((t1.c0))))) FROM t1 NOT INDEXED, v0, rt0, rt1; -- 0ms;
SELECT ALL ((((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) IS TRUE) FROM t1, rt0 LIMIT -1738985912;SELECT CASE 'C/'  WHEN ((((t1.c0)AND(rt0.c1)))AND(rt0.c1)) THEN ((((((((v0.c2)OR(v0.c2)))AND(t1.c0)))OR(v0.c0)))AND(v0.c2)) ELSE LIKE(rt1.c4, rt0.c2, '-') END FROM v0, t1 WHERE (((((((x'')AND(NULL)))AND(NULL)))OR(CAST(x'' AS TEXT))));SELECT DISTINCT ((((v0.c1)>(rt0.c2)))IS(CASE t1.c0  WHEN t1.c0 THEN rt0.c0 END)) FROM rt1, v0, rt0, t1 WHERE (((('-1283290756')) BETWEEN (((+ (0.8821787599114156)))) AND ((0.05485434875533646)))) GROUP BY UPPER(DISTINCT (((v0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0)))) HAVING rt1.c4; -- 0ms;
SELECT DISTINCT (~ (rt1.c2 COLLATE RTRIM)) FROM v0 WHERE ((((~ (545101382)))||(rtreenode(NULL, 0.6983524942333655))));SELECT DISTINCT JULIANDAY(CAST(rt0.c1 AS BLOB), NULL, rt1.c0 COLLATE NOCASE, ((((((((((((v0.c1)AND(rt0.c1)))AND(rt1.c4)))AND(rt1.c4)))AND(v0.c2)))AND(rt1.c3)))OR(rt0.c1)), SUM(v0.c2)), x'', ((((((rt1.c0) BETWEEN (rt1.c3) AND (v0.c0)))AND(((v0.c2)IS NOT(v0.c0)))))AND(((t1.c0)==(rt0.c1)))) FROM rt1;SELECT DISTINCT (((rt0.c0) ISNULL) IN ()) FROM v0, t1 WHERE ((((((((((('859305163') NOTNULL))AND(((((((((NULL)AND(NULL)))AND('1525889569')))OR(0.17880101422520212)))OR(0.45433169718542765)))))OR(HEX(912524466))))AND(('360886186' IN ()))))AND(((0.9068864461366837)<(NULL))))); -- 0ms;
SELECT ALL (+ ((rt0.c1 IN ()))) FROM rt0, t1, rt1; -- 0ms;
SELECT ALL SUM(((rt1.c1) NOT NULL)), t1.c0, ((((NULL)OR(CASE WHEN v0.c1 THEN 0xffffffff8565bb74 END)))AND(((v0.c2) BETWEEN (rt0.c0) AND (rt1.c3)))) FROM rt0, rt1, v0, t1; -- 0ms;
SELECT ALL ((rt1.c4)/(((NULL) ISNULL))) FROM v0 WHERE ((- ((NOT (x'8fc7')))));SELECT DISTINCT (((rt1.c3)) BETWEEN (((((rt0.c2, x'', NULL))>((v0.c2, rt1.c0, v0.c2))))) AND ((((rt0.c2) ISNULL)))), ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0))) IN ()), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM, ((((((rt1.c4)GLOB(rt1.c3)))OR(CAST(rt0.c1 AS TEXT))))OR(CASE rt1.c0  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END)), ((((x'459b') NOT BETWEEN (rt1.c1) AND (t1.c0)))IS NOT(ABS(v0.c0))) FROM v0, rt1, t1, rt0 UNION ALL SELECT COUNT(((t1.c0) ISNULL)), MAX('1493741987'), PERCENT_RANK() OVER ( ORDER BY ((((rt1.c1) NOT NULL))IS(rt0.c1)) DESC  NULLS LAST), (CASE WHEN rt1.c1 THEN t1.c0 ELSE rt1.c1 END IN ()), CASE WHEN ((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt1.c0)))OR(rt1.c4)))OR(v0.c2)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c2)) THEN NULL WHEN CASE v0.c0  WHEN rt1.c0 THEN v0.c2 END THEN TOTAL(rt1.c3) WHEN 'n?' THEN rt1.c2 END FROM rt0, t1, v0, rt1; -- 1ms;
SELECT ((((((rt0.c1)AND(v0.c1)))AND(rt1.c0))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CASE WHEN rt0.c2 THEN rt1.c4 ELSE rt1.c3 END)) FROM rt1 WHERE ((((NOT (NULL)))<<(((0.9256469569050566) NOTNULL)))) ORDER BY ((((rt1.c1)==(t1.c0))) IS FALSE)  NULLS FIRST;SELECT DISTINCT v0.c2 COLLATE RTRIM FROM rt0, t1, rt1, v0 WHERE ((((NULL)) BETWEEN ((((0.04847798014273741) NOT BETWEEN (0.24527792840590268) AND (1.731006074E9)))) AND (((('w#?Ntc佒)I')+(x'')))))); -- 0ms;
SELECT ALL (((rt1.c4)) BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((TOTAL('-1717500847')))) FROM rt0, v0, rt1, t1 WHERE ((0.6706348107135042 IN ())); -- 0ms;
SELECT ((((x'') IS TRUE))IS((0.17401106334292304 IN (rt1.c1)))) FROM v0 WHERE (CAST((- (0.13775934577953997)) AS BLOB));SELECT DISTINCT CAST(GROUP_CONCAT('D\rv㻩i^') AS TEXT) FROM t1 GROUP BY (COALESCE(rt1.c0, t1.c0, v0.c1, rt1.c1) IN (rt1.c2));SELECT DISTINCT CASE TOTAL(v0.c1)  WHEN json_object(rt0.c2, x'') THEN CAST(v0.c2 AS INTEGER) END, CAST(((v0.c1) BETWEEN (rt1.c1) AND (v0.c2)) AS NUMERIC), (((rt1.c1 IN (v0.c0)))-(v0.c1 COLLATE BINARY)), COUNT(*) OVER (), DENSE_RANK() OVER () FROM t1, rt0;SELECT ALL GROUP_CONCAT(((v0.c2)<(rt0.c2))) OVER () FROM t1, rt1 GROUP BY (((((~ (rt1.c0)))AND(((t1.c0) NOT BETWEEN (rt1.c1) AND (t1.c0)))))AND((NOT (0.8248726789214936))));SELECT (((CAST(rt1.c0 AS REAL)))!=((((rt1.c4)*(rt1.c0))))) FROM rt0 WHERE ((((((('688594994')AND(0.519725134940507)))AND(0.6981729446284151))) IS FALSE));SELECT AVG(LIKELY('')) OVER () FROM rt1, v0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0)))IS(CASE WHEN x'' THEN v0.c1 WHEN v0.c2 THEN rt0.c1 WHEN t1.c0 THEN rt1.c4 ELSE rt0.c2 END)) FROM v0, rt0;SELECT ALL ((((((((rt1.c2 COLLATE BINARY)OR(json_array(rt1.c1, v0.c1, v0.c0, '0.4421006605159734'))))AND(rt0.c0 COLLATE NOCASE)))AND(TOTAL(rt0.c0))))AND((rt1.c2 IN (x'', rt1.c4)))) FROM v0, rt0, t1 WHERE (CAST(CASE WHEN x'' THEN 0.2918864090361367 END AS TEXT)) LIMIT -423910791;SELECT ((((t1.c0)IS NOT(NULL)))IS(0x2273b05b)), (~ (CAST(t1.c0 AS NUMERIC))), ((((NULL)<<(rt0.c1)))||(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)))) FROM rt1, v0 WHERE (x'' COLLATE NOCASE) GROUP BY CASE (((v0.c1))>((rt0.c2)))  WHEN ROUND(t1.c0, 0.2180387431697295) THEN (+ (t1.c0)) WHEN ((('0.7858846257829983'))>((v0.c0))) THEN ((v0.c0)IS NOT(rt1.c0)) WHEN rt0.c1 THEN ((rt1.c0) ISNULL) WHEN CAST(rt1.c1 AS NUMERIC) THEN rt0.c1 COLLATE NOCASE WHEN ((v0.c0) BETWEEN (rt0.c0) AND (rt1.c0)) THEN ((t1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) END, v0.c2, ((((((((((v0.c0)AND(v0.c0)))OR(t1.c0)))AND(v0.c1)))OR('0.6798477919962125'))) BETWEEN ((~ (v0.c1))) AND (((((((((rt1.c1)AND(rt0.c1)))AND(rt0.c2)))AND(x'')))OR(rt1.c2))));SELECT CASE WHEN TOTAL(rt0.c0) THEN (((rt1.c0, v0.c1, rt0.c2, rt1.c3, rt1.c3))==((v0.c0, t1.c0, t1.c0, rt1.c1, 0.2902160327647141))) ELSE CASE WHEN NULL THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN x'4bd1' THEN rt1.c0 END END, ((CASE WHEN rt0.c1 THEN v0.c2 WHEN t1.c0 THEN v0.c2 WHEN v0.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c1 WHEN '-914681785' THEN t1.c0 ELSE rt0.c2 END) NOT NULL), ((rt1.c4) IS TRUE) FROM rt0;SELECT ALL (NOT (json_insert(x'', rt0.c2, rt0.c2, rt1.c4, x''))) FROM t1 WHERE (((('%xyc{c*W', '-1506273984', 0.005175895220581039)) BETWEEN (((((NULL)) BETWEEN ((0.9018265241488175)) AND (('-281716847'))), (('o^') NOT NULL), ((NULL) NOTNULL))) AND ((((NULL) IS FALSE), CAST(0.40081542069424403 AS TEXT), ((((NULL)OR('-1906895927')))OR(NULL))))));SELECT DISTINCT json_remove((((rt1.c3)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))), rt1.c3, CAST(1.750660679E9 AS INTEGER), rt1.c0) FROM rt0, rt1, v0; -- 0ms;
SELECT ((COUNT(rt1.c3)) IS FALSE) FROM t1, rt0, v0 WHERE ((((((NULL IN ()))AND(((x'') IS FALSE))))OR(((NULL) NOT BETWEEN (x'') AND (x'e869')))));SELECT DISTINCT SUM(CASE rt0.c0  WHEN rt1.c1 THEN rt0.c0 END) OVER (), (- (GLOB(rt1.c1, rt0.c1))), (x'' IN (t1.c0)) COLLATE BINARY, SUM(TIME(rt1.c2, rt1.c0, rt1.c4, t1.c0, NULL)) OVER (), AVG((v0.c0 IN ())) OVER () FROM rt1 WHERE (((LIKELIHOOD(x'8b7a', 0.35532534610543964)) NOT BETWEEN (((0.7004507256226306)>>(x'fc44c4c1'))) AND ((((912524466)) NOT BETWEEN (('334153850')) AND (('u1'))))));SELECT ALL rt1.c0 FROM rt1, t1, rt0, v0 GROUP BY CAST(CASE '.)'  WHEN rt1.c3 THEN v0.c0 ELSE rt1.c3 END AS TEXT) LIMIT 1764714045 OFFSET -336673507; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, v0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)<(((((((((rt1.c1)OR(v0.c2)))OR(0.4479034034559083)))OR(v0.c0)))AND(v0.c1)))) FROM rt1, t1, rt0 WHERE ((NOT (((((NULL)AND(x'95db')))OR('')))));SELECT DISTINCT ((((0xffffffffd74debd3)LIKE(rt0.c2)))AND(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FROM t1, v0, rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c1) IS TRUE) IN ((((rt1.c2, rt1.c0, rt1.c4)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((v0.c2, rt1.c2, rt1.c4))))) FROM t1, rt1, v0, rt0; -- 0ms;
SELECT ALL ((((t1.c0) BETWEEN (rt1.c0) AND (t1.c0)))+(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)))), ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c3 END)>>((((rt1.c1, rt1.c0, rt0.c1))<=((rt1.c2, rt0.c1, rt1.c4))))), CASE WHEN (+ (rt1.c3)) THEN '1757143686' WHEN ((rt1.c4)OR(rt1.c1)) THEN (((rt1.c4)) NOT BETWEEN ((-1121122005)) AND ((rt0.c0))) WHEN NULL THEN CASE rt1.c1  WHEN rt0.c0 THEN rt1.c4 ELSE t1.c0 END ELSE rt0.c0 END, ((((v0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0))) IN ()), (((((rt1.c2 IN ()))OR((((v0.c2))!=((t1.c0))))))AND(CASE WHEN rt1.c2 THEN rt1.c3 ELSE v0.c0 END)) FROM v0, rt1 WHERE (CASE WHEN CASE 0.4703533167856949  WHEN NULL THEN NULL ELSE NULL END THEN CASE WHEN x'' THEN 'SH荏BEw' END ELSE LOWER('1295420065') END);SELECT DISTINCT LIKE(TYPEOF(DISTINCT x''), COUNT(rt0.c2)) FROM rt1, v0, rt0 WHERE (x''); -- 0ms;
SELECT ALL ((((((0X52ab1db0)OR(rt0.c1)))OR(rt1.c1))) BETWEEN (((v0.c0)>(''))) AND (GROUP_CONCAT(rt1.c1))) FROM rt1, t1;SELECT DISTINCT FIRST_VALUE(((((rt1.c4) NOT BETWEEN (t1.c0) AND (v0.c0)))>((- (rt1.c3))))) OVER ( ORDER BY (+ (((((rt1.c1)OR(rt0.c2)))OR(rt1.c1))))) FROM rt1, v0, rt0, t1; -- 0ms;
SELECT (((v0.c2)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND (((NULL IN (v0.c0, rt1.c0))))) FROM rt0, v0 WHERE (((CAST('0.17014507557264258' AS TEXT))AND(HEX(NULL)))) ORDER BY ((((((v0.c2)>=(rt0.c1)))OR(CAST(5.82457282E8 AS INTEGER))))OR(((v0.c2)OR(rt1.c4)))) LIMIT 693978100;SELECT DISTINCT MAX(CAST(rt1.c0 AS REAL)) FROM rt0, t1 NATURAL JOIN rt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (((rt0.c0 COLLATE BINARY, LIKELIHOOD(NULL, 0.5974298203706196), ((('1297751996')) NOT BETWEEN ((rt1.c4)) AND ((rt1.c2)))))==((CAST(rt1.c1 AS REAL), ((x'') NOTNULL), 0.7307324841359406))) DESC) FROM rt1, t1, rt0 ORDER BY (NOT ('캼')) COLLATE RTRIM DESC; -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((((rt1.c2)<(rt0.c2)))) AND ((x''))) FROM v0, rt0, t1, rt1; -- 0ms;
SELECT (((t1.c0)) BETWEEN (((NOT ('304368312')))) AND ((rt0.c2))), (v0.c1 IN ()) COLLATE RTRIM COLLATE BINARY, TYPEOF(CAST(v0.c0 AS NUMERIC)) FROM v0, rt0 LIMIT -1519043522 OFFSET 638305858;SELECT rt1.c4 FROM rt1, v0 NOT INDEXED, rt0, t1 WHERE ((((('')&(x'')))*(CAST('u\nA,Jmmi' AS REAL)))) LIMIT 723641702; -- 1ms;
SELECT (- (((rt1.c1)!=(v0.c2)))) FROM rt1, t1, rt0 WHERE ((+ (CAST(x'ffee' AS INTEGER)))) ORDER BY (0.5604605904532498 IN ());SELECT t1.c0 FROM rt1, t1 LEFT OUTER JOIN v0 ON (((((((v0.c1, rt1.c4, rt1.c4)) BETWEEN ((x'bde1', v0.c2, v0.c2)) AND ((0xffffffffa49546dd, v0.c1, 0.05553926779898599))))OR((((rt0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt1.c4))))))AND(((rt1.c2)<(rt1.c2)))) CROSS JOIN rt0 ON rt1.c3;SELECT DISTINCT (~ ((rt0.c1 IN ()))), (- (CASE WHEN rt0.c2 THEN rt1.c2 END)), ((GROUP_CONCAT(rt1.c1)) NOT BETWEEN ((~ (rt0.c0))) AND ((- (t1.c0)))) FROM rt0 NOT INDEXED, t1 LIMIT 1022231680 OFFSET -782755232;SELECT (((t1.c0, rt0.c0, rt1.c3)) BETWEEN ((COUNT(rt1.c2), CASE WHEN 0xffffffffc035f33d THEN rt1.c4 ELSE rt0.c0 END, CAST(x'' AS NUMERIC))) AND ((v0.c2 COLLATE NOCASE, CAST(rt1.c0 AS REAL), 0.05553926779898599))) FROM v0, rt0, rt1, t1; -- 0ms;
SELECT (((rt1.c4, rt1.c3, v0.c0, v0.c1, rt0.c1)) NOT BETWEEN ((((v0.c2)|(rt1.c1)), ((rt1.c3)%(rt0.c1)), (~ (v0.c2)), UNLIKELY(rt1.c2), (rt1.c0 IN ()))) AND ((((v0.c1) BETWEEN (v0.c1) AND (v0.c0)), ABS(rt1.c1), (~ (rt0.c0)), CAST(v0.c2 AS NUMERIC), GLOB(v0.c0, rt0.c1)))) FROM rt0, v0, rt1, t1 WHERE (((NULL) IS FALSE) COLLATE NOCASE) LIMIT 898313867; -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) IS FALSE) AS BLOB) FROM rt1, rt0, t1, v0; -- 0ms;
SELECT NTH_VALUE((+ (x'a3f3')) COLLATE RTRIM, ((x'') BETWEEN (x'') AND (((((t1.c0)AND(rt1.c1)))AND(rt1.c4))))) OVER () FROM v0, t1, rt0, rt1; -- 0ms;
SELECT DISTINCT MAX(CAST(rt0.c1 AS REAL)) COLLATE BINARY FROM t1, rt1, v0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, v0, rt1, t1; -- 0ms;
SELECT ALL (- (CAST(v0.c0 AS REAL))) FROM rt1, rt0, v0 WHERE (CASE CASE 'q'  WHEN 'MB+E46y嵻' THEN '-1985381741' END  WHEN (((NULL))==(('932508938'))) THEN CASE 0.6862580275542038  WHEN x'' THEN NULL END WHEN 0.7129417581250157 THEN (('') IS TRUE) WHEN ((((x'')AND(x'0d53')))OR(0.4655531775724072)) THEN ((x'9540') BETWEEN ('!A') AND (NULL)) ELSE ((155286201) NOT NULL) END) LIMIT -1334496553; -- 0ms;
SELECT DISTINCT (((rt1.c3, rt1.c0, rt1.c1)) NOT BETWEEN ((CAST(0.08663423734219733 AS BLOB), rt0.c2, json_type(rt1.c0))) AND ((((rt0.c2)=(v0.c0)), rt1.c4, rt0.c2 COLLATE NOCASE))) FROM t1, rt0 LIMIT 1021719136 OFFSET -1524367454;SELECT ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN 'M#Z.' THEN rt0.c2 WHEN 0.1564333380713916 THEN v0.c0 END)-(v0.c2 COLLATE RTRIM)) FROM v0, t1, rt1 WHERE (((((0.4388084257951508, '-1171540870', x'acd8'))<>((NULL, x'', x'cfe5'))) IN ())) GROUP BY (NULL IN ()), CASE -1617527200 COLLATE RTRIM  WHEN v0.c2 THEN ((v0.c2) BETWEEN (-1594941262) AND (rt1.c1)) END, rt1.c1;SELECT DISTINCT (((((rt1.c1)+(v0.c0)), NULLIF(DISTINCT rt1.c2, 'C'), CAST(rt1.c3 AS REAL)))>((((v0.c0) BETWEEN (rt1.c1) AND (v0.c1)), NULLIF(DISTINCT rt1.c1, ''), (v0.c1 IN ())))) FROM t1, v0 WHERE (TIME(NULL, NULL, '(KanxAK') COLLATE BINARY) ORDER BY ((v0.c2 COLLATE RTRIM) NOT NULL) DESC  NULLS FIRST;SELECT DISTINCT (((((+ (rt1.c2)))AND(((((rt1.c1)OR(rt0.c1)))OR(rt1.c0)))))OR(NULL)), COUNT(*) OVER ( ORDER BY (((rt1.c0)) BETWEEN ((CASE rt0.c1  WHEN v0.c2 THEN rt0.c1 ELSE NULL END)) AND ((rt1.c3)))  NULLS FIRST), (+ ((v0.c0 IN (rt0.c1)))), '1642189495', CASE WHEN CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c2 END THEN ((v0.c1) NOT BETWEEN (t1.c0) AND (v0.c1)) ELSE ((rt1.c0)<=(rt0.c1)) END FROM v0 NOT INDEXED, t1 WHERE (CASE (NULL IN (0x509812f0))  WHEN ((x'') NOT BETWEEN (x'') AND ('uvBZ')) THEN (('') BETWEEN (x'') AND ('1987859370')) ELSE (x'' IN ()) END);SELECT DISTINCT AVG(CAST(rt1.c3 AS REAL)) FROM t1, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c2)OR(x'')))AND(NULL)) COLLATE BINARY FROM t1, rt1, rt0 GROUP BY x''; -- 0ms;
SELECT ALL COUNT(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c4 END) OVER (), CAST((rt0.c1 IN ()) AS REAL), rt1.c0 FROM rt1;SELECT TOTAL((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt1.c4)))), (- (((((((((t1.c0)AND(rt1.c2)))OR(rt1.c3)))OR(rt1.c4)))OR(rt1.c3)))), (0.9873628612774793 IN ()), NULL, SQLITE_COMPILEOPTION_GET((NULL IN ('-242441725'))) FROM v0, rt0, rt1, t1 WHERE ((((- (NULL))) IS TRUE)) UNION ALL SELECT DISTINCT COUNT(*), DENSE_RANK() OVER (), CAST(((rt1.c3)||(rt1.c4)) AS INTEGER), ((CAST(v0.c0 AS TEXT))|(0.24603856448390815)), TRIM(COUNT(*), ((rt0.c0)/(rt0.c2))) FROM rt0, rt1, v0; -- 1ms;
SELECT ALL CAST((v0.c2 IN ()) AS BLOB) FROM v0 WHERE ((((('-1350141270') IS TRUE))<>(((0X0) NOT NULL)))); -- 0ms;
SELECT COUNT(*) OVER (), (((v0.c1)IS(rt0.c2)) IN (v0.c0)), ((((rt0.c2 IN (rt1.c0, v0.c0)), (rt0.c1 IN ()), v0.c1 COLLATE NOCASE, ((rt0.c0) BETWEEN (v0.c0) AND (rt1.c2)), ((rt0.c1) IS TRUE)))>=((v0.c1, ((((((((rt1.c2)OR(-735056279)))AND(v0.c1)))OR(rt1.c0)))AND(t1.c0)), 9.32508938E8, CASE WHEN v0.c2 THEN rt0.c0 END, (NOT (rt1.c0))))), FIRST_VALUE(((((rt1.c0)OR(rt1.c2)))OR(v0.c0)) COLLATE RTRIM) OVER (), (((0.4244733918643018, ((v0.c0)==(rt1.c4)), ((rt1.c3) IS FALSE)))==((((rt1.c2)||('0.7858846257829983')), ((rt0.c2)OR('%*]!Sp\r鳶')), (- (rt0.c1))))) FROM v0, rt1, rt0, t1; -- 0ms;
SELECT (((rt1.c3)) BETWEEN ((CAST(rt1.c0 AS NUMERIC))) AND (('}'))) FROM t1, rt1, v0 GROUP BY (((rt1.c1 IN ())) NOT BETWEEN (CASE t1.c0  WHEN rt0.c0 THEN x'' WHEN rt1.c3 THEN 0.9141503241496137 WHEN rt0.c1 THEN v0.c0 WHEN rt1.c0 THEN rt0.c2 WHEN v0.c0 THEN rt1.c0 ELSE v0.c2 END) AND (((rt1.c0) IS TRUE))) LIMIT 1560426216 OFFSET 552536999;SELECT ((((v0.c2)IS(rt1.c1))) IS TRUE), CASE WHEN CAST(v0.c1 AS INTEGER) THEN rt1.c0 COLLATE BINARY WHEN rt1.c4 THEN ((rt1.c0)<=(t1.c0)) WHEN ((')&QUMᕏ^_')AND(t1.c0)) THEN GROUP_CONCAT(v0.c1) ELSE ((t1.c0)!=(-8.53973306E8)) END, GROUP_CONCAT((- (rt0.c0))) OVER ( PARTITION BY rt0.c1, SQLITE_COMPILEOPTION_GET(CASE WHEN rt1.c0 THEN t1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 END)) FROM rt0, rt1 GROUP BY ((((((((((rt0.c1)AND(t1.c0)))OR(rt1.c0)))AND(rt0.c1)))OR(rt1.c4)))IS(rt1.c2)) HAVING TYPEOF(CASE WHEN rt1.c2 THEN v0.c2 ELSE rt1.c1 END);SELECT DISTINCT CAST('' AS TEXT) COLLATE RTRIM, AVG(json_object(rt1.c2, v0.c0)) FILTER(WHERE (((t1.c0)|(rt0.c2)) IN ())) OVER (), ((((((((((((((rt1.c1)AND(v0.c0)))AND(rt1.c4)))OR(rt1.c4)))AND(rt0.c0)))OR(v0.c1)))OR(v0.c1)))IS((t1.c0 IN ()))) FROM rt0, rt1, t1;SELECT ALL ((CAST(t1.c0 AS NUMERIC))GLOB(MIN(rt1.c3))) FROM rt1 NOT INDEXED, v0, t1, rt0 WHERE (CAST(((0Xffffffffd6e040ed) NOT BETWEEN (1813946935) AND (x'd1eb')) AS BLOB)); -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN (((v0.c1 IN ()))) AND (((((rt0.c2, t1.c0, v0.c2)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c1)) AND ((v0.c0, v0.c0, rt0.c0)))))) FROM v0, rt0, rt1 NOT INDEXED;SELECT CASE ((((((((v0.c2)OR(rt1.c1)))AND(rt1.c3)))OR('794398678')))OR(rt1.c3))  WHEN (((v0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) ELSE (rt1.c4 IN (x'')) END, NULL, (((rt0.c2 IN (rt0.c0))) NOT NULL) FROM rt0, v0 NATURAL JOIN t1;SELECT ALL ((rt0.c1 COLLATE RTRIM) NOTNULL) FROM t1 WHERE ((('%36RSy{' COLLATE NOCASE)IS((('932508938')OR(x'3916')))));SELECT CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END COLLATE BINARY FROM v0, t1 WHERE ('-1676098460');SELECT DISTINCT rt1.c3 FROM rt0, v0;SELECT ALL GROUP_CONCAT((((rt1.c4)) NOT BETWEEN ((v0.c2)) AND ((-4.11271534E8)))) OVER (), (((((rt1.c0, rt0.c2, rt1.c4))>((rt0.c1, t1.c0, rt1.c3)))) BETWEEN (CASE WHEN x'' THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt0.c1 THEN v0.c0 END) AND (((v0.c1)<<(rt1.c4)))), RANK() OVER () FROM v0, t1, rt0;SELECT ALL (((LIKELIHOOD(rt0.c1, 0.8979896693224482), (((rt0.c0))>((v0.c2))), x'', (NULL IN ()), ((t1.c0) ISNULL)))!=((((((rt1.c2)OR(rt1.c3)))AND(v0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (v0.c0)), ((rt1.c0) NOTNULL), rt1.c0, (rt0.c1 IN (rt0.c0))))) FROM t1 INTERSECT SELECT DISTINCT 0.8860590229338493 FROM rt1 WHERE ((((0.6775214976783147 IN (-518123568))) IS FALSE));SELECT COUNT(*) FILTER(WHERE ((((rt1.c4)OR(x'')))OR(v0.c2)) COLLATE NOCASE) OVER (), x'c9d8', ((((((((rt1.c4 COLLATE NOCASE)OR(LOWER(rt1.c3))))OR(AVG(')'))))AND(v0.c0 COLLATE NOCASE)))AND(t1.c0)) FROM v0, rt0, rt1, t1 WHERE ((NOT ((('2062894920') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c0 THEN rt0.c0 END)LIKE((rt0.c1 IN ()))) FROM v0, rt1, t1 WHERE (((((0.7969175332145283) NOT BETWEEN (-1.084470146E9) AND (0x77a6bb27)))=(CASE WHEN 1552715564 THEN 'a䱾' WHEN 0.24906771895844815 THEN x'' WHEN 0Xfffffffff57bc37a THEN x'' END)));SELECT CASE WHEN (rt1.c0 IN ()) THEN CASE rt1.c2  WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END WHEN rt0.c0 THEN CASE rt1.c1  WHEN rt0.c2 THEN rt1.c3 ELSE t1.c0 END WHEN (~ (rt1.c1)) THEN (((rt0.c2))<((rt0.c1))) ELSE CAST(rt0.c0 AS BLOB) END FROM v0 WHERE (((x'') BETWEEN (((x'') BETWEEN (0Xffffffffb8373527) AND (NULL))) AND ((('')||('')))));SELECT DISTINCT (CASE v0.c0  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c3 THEN v0.c0 WHEN rt1.c1 THEN rt1.c2 END IN ()) FROM t1, v0 WHERE (((0.9632073820162304 COLLATE NOCASE) BETWEEN ((~ (x'3e4d'))) AND (NULL))) ORDER BY TRIM(DISTINCT rt1.c2 COLLATE RTRIM) DESC  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((rt0.c0) BETWEEN (rt1.c1) AND (v0.c2))) OVER ( RANGE  CURRENT ROW), MAX((((v0.c2))>((-1.547272171E9)))), ((((rt1.c4) NOT NULL))<<(((v0.c1)OR(t1.c0)))) FROM v0, rt1 WHERE (((((('' IN ()))AND(CASE WHEN x'' THEN 0.975140003828713 ELSE x'' END)))AND(CASE WHEN 0.3043507565357424 THEN x'' END)));SELECT rt1.c1 FROM rt0, t1 WHERE (CASE WHEN ((('-1279179181', NULL, ''))!=((0.4972226070156711, '0.6421959636775053', 0.8118807920987888))) THEN (('606730382')*(0.8568518742123065)) WHEN (((0.5393061725578858)) BETWEEN (('0')) AND ((0.4762776462151601))) THEN ((-735056279) NOT NULL) WHEN (('ig') BETWEEN (x'') AND (0.9033028097794222)) THEN COALESCE(DISTINCT NULL, -1775566462) END) GROUP BY ((((((NULL) IS FALSE))AND((rt1.c3 IN (rt0.c0)))))AND(((rt1.c3)>=(v0.c1)))), (NOT ((((t1.c0))>=((rt0.c1))))), (~ (x'')) HAVING CASE WHEN ROUND(rt1.c0, rt1.c1) THEN rt0.c0 WHEN ((v0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2)) THEN SUBSTR(t1.c0, v0.c0) WHEN ((t1.c0)>=(rt1.c3)) THEN ((v0.c2)+(rt1.c2)) END LIMIT 23674135;SELECT DISTINCT ((((rt1.c1) NOTNULL)) BETWEEN (((rt1.c2)<>(rt1.c4))) AND (((rt1.c4) NOT BETWEEN (rt1.c1) AND (v0.c1)))) FROM rt1, rt0, t1;SELECT DISTINCT ((((((((((rt1.c0)OR('L<JW4')))AND(rt0.c2)))OR(v0.c0)))OR(rt1.c0)))>(COUNT(*))) FROM t1, rt0, rt1, v0 LIMIT 9223372036854775807; -- 0ms;
SELECT DISTINCT TRIM(((rt1.c1) IS TRUE)) FROM rt1, t1, rt0, v0 WHERE (x''); -- 0ms;
SELECT DISTINCT (NOT (v0.c1)) COLLATE RTRIM, ((UNICODE(v0.c2))IS NOT(((rt1.c0) ISNULL))), ((QUOTE(rt0.c1)) BETWEEN ((- (rt1.c4))) AND (((((rt0.c1)AND(0X2df461c6)))AND('1560426216')))) FROM rt0 FULL OUTER JOIN t1 ON TRIM(((rt1.c1)IS(v0.c2)), ((rt1.c0) NOT NULL)) WHERE (json_type((('U}N') NOT BETWEEN ('-1314161913') AND (NULL))));SELECT ((((1886641421) BETWEEN (rt0.c1) AND (rt0.c1)))>=((+ ('z0v}<JC3')))), ((((rt1.c4)<<(v0.c2)))<<(CAST(rt1.c1 AS NUMERIC))), ((((((((((v0.c2) ISNULL))OR(((v0.c2) NOT BETWEEN (x'') AND (rt1.c4)))))AND(GROUP_CONCAT(rt1.c2))))AND((~ (v0.c0)))))OR(((((rt1.c2)AND(rt1.c4)))OR(v0.c2)))) FROM v0, t1, rt1, rt0; -- 0ms;
SELECT ALL ((((NULL) IS FALSE)) IS TRUE) FROM v0, rt1 WHERE (((((NULL)IS(''))) ISNULL)) LIMIT -466809407; -- 1ms;
SELECT ALL AVG(((rt0.c2) BETWEEN (t1.c0) AND (rt1.c2))) OVER () FROM v0 WHERE ((0.9254370768672154 COLLATE NOCASE IN ())) LIMIT -591194958 OFFSET -406343523;SELECT DISTINCT ((ABS(rt1.c2)) NOT NULL) FROM t1 WHERE (CASE WHEN ((NULL)/('')) THEN 1.7976931348623157E308 ELSE ((0.9573099091594577)IS NOT(NULL)) END) LIMIT 1297751996 OFFSET 1570321099;SELECT DISTINCT MAX((((v0.c2))>=((rt1.c2)))) FROM v0, t1, rt0 WHERE (((((0.35140348938915467) NOT NULL))>=(NULL COLLATE BINARY)));SELECT AVG(CASE WHEN rt1.c0 THEN rt1.c4 END) FROM v0, rt0, rt1, t1 WHERE (TYPEOF(((-1547272171)<=(NULL)))); -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c1)OR(rt1.c4)))AND(rt0.c1)))AND(v0.c2)))AND(rt1.c2)) AS TEXT) FROM t1 WHERE (CASE WHEN 'KezHOy,' THEN x'861d7f0d' ELSE 0Xffffffff93ec6d08 END COLLATE RTRIM) LIMIT 597016277;SELECT DISTINCT (((((0.20951128551129572 IN ()))AND('')))OR(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c2 THEN '' WHEN rt1.c1 THEN rt1.c2 ELSE '1411025991' END)) FROM rt0, rt1, v0, t1 WHERE (((((((((((NULL)OR(0xffffffffeddcc98a)))AND('')))OR(0.12340512131387249)))OR('X[]6'))) NOT NULL)) LIMIT 691184594; -- 1ms;
SELECT COALESCE(((v0.c2) BETWEEN (v0.c2) AND (rt1.c3)), (+ (rt1.c4))) FROM rt0, v0 WHERE (x'');SELECT DISTINCT ((COUNT(*))>>((NOT (rt1.c4)))) FROM rt0, v0, t1, rt1 ORDER BY (((((rt0.c2)IS NOT(rt0.c2))))<((((rt1.c3)|(rt0.c0)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE NOCASE) BETWEEN ((rt0.c2 IN ())) AND ((rt1.c4 IN (v0.c1)))), ((((rt0.c2)AND((rt0.c1 IN (rt1.c2)))))OR(((rt1.c3) ISNULL))), rt1.c3 FROM t1, rt0, rt1, v0 NOT INDEXED WHERE ((~ (json_extract(NULL, x'')))); -- 0ms;
SELECT (((((v0.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, NULL)) AND ((rt0.c0, rt0.c2, rt1.c3))))>=((t1.c0 IN ()))) FROM rt1, t1, rt0;SELECT ALL (((rt1.c4)) NOT BETWEEN ((UPPER(DISTINCT t1.c0))) AND (((((x''))=((rt0.c2)))))) FROM t1, rt0 WHERE ((((- ('-1592103172')))LIKE((('1918849279')*('-1779801634'))))) GROUP BY ((((rt1.c2)IS(rt1.c1))) NOT NULL), (((((rt1.c3)<=(rt0.c1))))==((rt1.c0 COLLATE NOCASE))), (((((((((rt0.c0 IN ()))AND(((((rt1.c2)AND(v0.c0)))OR(v0.c1)))))OR(((rt1.c4) NOT BETWEEN (v0.c1) AND (399983098)))))AND(LIKELY(rt1.c1))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 END)) HAVING (NOT (0.544431337000178));SELECT DISTINCT ((((((((((rt1.c4)OR(rt1.c2)))OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c3))) BETWEEN (((((rt1.c2)AND(v0.c1)))AND(rt0.c0))) AND (RTRIM(t1.c0))) FROM rt0 WHERE (((((x'a02d5f35') NOT BETWEEN ('') AND (NULL)))<(LOWER(x''))));SELECT (((((v0.c2)+(v0.c2))))!=((((t1.c0)=(v0.c0))))), (+ (((v0.c0)<<(rt0.c0)))), (('' IN ()) IN ()) FROM rt1;SELECT DISTINCT (((v0.c2 IN ())) IS FALSE) FROM v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t1.c0) FROM rt1, rt0, t1, v0; -- 0ms;
SELECT MAX(MAX(rt0.c2)) FROM t1, v0;SELECT ALL CASE WHEN CASE WHEN rt0.c0 THEN rt1.c4 END THEN ((((v0.c1)OR(rt1.c1)))OR(rt0.c2)) WHEN 0.397466335924197 THEN ((NULL)!=(rt1.c2)) WHEN t1.c0 COLLATE NOCASE THEN ((((t1.c0)AND(v0.c1)))AND(v0.c0)) ELSE CASE rt1.c4  WHEN t1.c0 THEN rt1.c3 WHEN v0.c1 THEN rt1.c0 WHEN x'' THEN rt0.c1 END END, ((MAX(rt0.c0))AND(rt0.c1 COLLATE BINARY)), CAST(((v0.c1) BETWEEN (rt0.c2) AND (v0.c0)) AS TEXT) FROM rt1, v0 WHERE (UNLIKELY(CAST(0.5299737127407949 AS REAL)));SELECT DISTINCT GROUP_CONCAT('786448692') FROM rt1, rt0; -- 0ms;
SELECT (((((NOT (v0.c0)))OR(NULL COLLATE BINARY)))OR(0.8381079431558993)) FROM t1 WHERE ((((('-1831121070') NOT NULL)) IS TRUE));SELECT ALL CASE (~ (v0.c2))  WHEN ((rt1.c4) NOT NULL) THEN ((((NULL)OR(rt1.c4)))OR(x'')) WHEN ('2007415591' IN ()) THEN t1.c0 COLLATE NOCASE WHEN (((v0.c1)) BETWEEN ((rt1.c3)) AND ((rt0.c2))) THEN (v0.c2 IN (rt1.c2, rt0.c2, rt0.c2)) ELSE GROUP_CONCAT(rt1.c0) END, ((('-423910791', (NOT (rt1.c1)), v0.c2 COLLATE NOCASE))<>((rt1.c3, ((v0.c1)GLOB(v0.c2)), ((rt0.c1)>(rt1.c4))))), ((((v0.c2)<(rt1.c2))) NOT BETWEEN (HEX(v0.c1)) AND ('1704545834')) FROM rt0, t1, rt1;SELECT ALL (((((rt1.c3, rt1.c0, v0.c2))<((v0.c2, x'', rt1.c4)))) IS TRUE), load_extension(((t1.c0)%(rt1.c1)), ((((rt1.c2)AND(t1.c0)))AND(rt0.c1))), COUNT((((rt0.c2, rt1.c3, v0.c0)) BETWEEN ((rt0.c2, v0.c1, v0.c1)) AND ((x'', rt1.c0, rt0.c0)))) FROM t1, rt0, v0;SELECT ALL ((~ (t1.c0)) IN ()), GROUP_CONCAT(((((rt1.c0)AND('-171116168')))OR(v0.c2))), CAST(COUNT(rt1.c4) AS TEXT) FROM v0, t1, rt1, rt0; -- 0ms;
SELECT DISTINCT CASE (~ (rt0.c2))  WHEN (+ (rt1.c4)) THEN (((rt1.c0))<=((rt0.c1))) END FROM rt0 WHERE (((NULL) NOT NULL) COLLATE RTRIM);SELECT ALL (((((-1624290637)) BETWEEN ((v0.c0)) AND ((rt1.c3))))-(0.3653498476117838)), LAG(((((rt0.c1)<>(v0.c2))) BETWEEN ((v0.c1 IN ())) AND ((- (t1.c0)))), ((((((((TYPEOF(rt0.c0))AND(((rt0.c1) IS TRUE))))OR(((rt0.c0)+(NULL)))))OR(((rt0.c1)<(v0.c2)))))AND(((v0.c0)<=(rt0.c0)))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c2))) BETWEEN (((t1.c0)&(rt0.c2))) AND (v0.c1 COLLATE RTRIM))) OVER (), CAST(0.9211411496104961 AS BLOB) FROM rt0, t1, v0 WHERE ((((NULL, 'X*', 'o7繠s0pX', NULL, 0.8334923883479785)) NOT BETWEEN ((json_extract('{}', '-1852172977'), (((0Xffffffffea2c34c1))<=((0xffffffff82e98f7e))), ((x'')+('')), ((NULL) BETWEEN (0.7882602731911363) AND (NULL)), (('564905938') ISNULL))) AND (((('') NOT BETWEEN (0.7317735901206203) AND (NULL)), CASE WHEN x'94105e55' THEN 0.7873062605785474 ELSE x'aa14' END, ((0.3118992097993004) ISNULL), ('953041063' IN ('Fv*OtAIL')), ((-2.93212751E8)|(1.493741987E9))))));SELECT DISTINCT NULL FROM rt1, t1, v0 WHERE (ABS((NULL IN ()))); -- 0ms;
SELECT (((rt0.c0, v0.c0, x'cdab')) BETWEEN ((CAST(rt1.c4 AS INTEGER), (~ (rt0.c2)), ((((rt0.c1)AND(v0.c1)))OR(v0.c2)))) AND ((CASE rt1.c1  WHEN rt0.c1 THEN v0.c2 ELSE rt1.c2 END, ((v0.c0) NOT NULL), CASE rt0.c1  WHEN t1.c0 THEN rt1.c2 END))), rt0.c2, (('/\rgbꍏ')/(((rt0.c1)/(rt1.c4)))) FROM rt0, v0, rt1;SELECT rt1.c0, (((rt0.c2 IN ())) IS TRUE), SUM(((rt1.c3) IS FALSE)) FROM v0, rt0, rt1, t1; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0, rt1, t1, v0 WHERE (json_array(('1231624888' IN (x'5b48')), (('o]KӜ') NOT BETWEEN (0.7622773762616067) AND ('')))); -- 0ms;
SELECT ((((INSTR(rt0.c2, rt0.c2))OR(v0.c2)))OR((((v0.c1, rt1.c3, t1.c0)) NOT BETWEEN ((v0.c0, v0.c2, rt1.c2)) AND ((rt1.c2, rt1.c0, rt1.c3))))) FROM t1, v0, rt1, rt0 WHERE (CAST(x'' AS INTEGER)); -- 0ms;
SELECT DISTINCT (CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN t1.c0 WHEN rt1.c1 THEN rt1.c4 END IN ()), CAST((((rt0.c1))<>((rt1.c0))) AS INTEGER), (((rt0.c2)) BETWEEN ((rt1.c3)) AND ((rt0.c2 COLLATE BINARY))) FROM t1 ORDER BY rt0.c2 COLLATE BINARY ASC, ((rt0.c2) IS FALSE) ASC  NULLS LAST;SELECT DISTINCT 0.22175953688543915 FROM v0, t1 WHERE (CAST(-1913398920 AS REAL) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT ALL GROUP_CONCAT((+ (rt1.c2))) OVER () FROM v0, rt0, t1, rt1 WHERE ((CASE WHEN 0.8934517194655106 THEN 0.4663065935026064 ELSE 0.16977558050349273 END IN (((((0Xffffffffa3c68015)OR(-862098763)))OR('.'))))) LIMIT -1800341289; -- 0ms;
SELECT DISTINCT (((rt0.c0)<(x'')) IN ()), ((('-1876110121')) NOT BETWEEN ((rt1.c4 COLLATE NOCASE)) AND ((CASE rt1.c3  WHEN rt0.c2 THEN v0.c1 END))), CASE WHEN (((rt0.c0, v0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, x'1e81', v0.c0)) AND ((rt1.c0, rt0.c2, rt0.c0))) THEN ((rt1.c4) NOT NULL) ELSE CASE WHEN v0.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN x'' ELSE v0.c2 END END FROM t1, rt0 WHERE ((((((x'', x'75435abd', -2117590170))>=((0.849142363412309, 0.4726535772398026, x'')))) BETWEEN (((((x'8512')AND('1117627620')))OR(NULL))) AND (((((((((x'')AND(NULL)))AND(0.06049965905587407)))AND('1424222525')))OR(x''))))) LIMIT 1852625557 OFFSET -512883921;SELECT COUNT(*) OVER () FROM rt1, v0, rt0 WHERE ('0.7427225661268073' COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (NOT (rt1.c1)) FROM rt1, v0 WHERE ((((((('cuKvjHg]D')-(NULL)))OR(((((x'')OR(NULL)))OR(NULL)))))OR(((1711656681) BETWEEN (1.764714045E9) AND (NULL))))) GROUP BY NULL, ((((((rt1.c2)<(rt1.c2)))OR(((((v0.c2)OR(v0.c0)))OR(rt0.c0)))))AND(((rt1.c4)<(NULL)))), json_array_length(((v0.c1)GLOB(x''))) HAVING (CASE NULL  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END IN (LIKELY(DISTINCT rt0.c1))) LIMIT 755821584;SELECT DISTINCT JULIANDAY((NULL IN ()), rt0.c1, (((v0.c2, rt1.c4, rt1.c2)) BETWEEN ((NULL, rt1.c3, rt1.c1)) AND ((rt1.c1, '', v0.c0)))) FROM rt1, rt0, t1 WHERE ((~ (LIKELY(DISTINCT NULL))));SELECT DISTINCT LIKE((((rt1.c1))>((x'db3d1548d482'))), ((rt0.c2)&(rt0.c1)), '7') FROM rt0, v0, rt1, t1; -- 0ms;
SELECT DISTINCT rt1.c4, rt0.c0, MIN(((rt0.c2) NOT BETWEEN (v0.c2) AND (NULL))) FROM v0, rt0, t1 GROUP BY SQLITE_VERSION();SELECT DISTINCT DENSE_RANK() OVER () FROM t1, rt0, v0 ORDER BY rt1.c0, ((((rt1.c3)IS NOT(rt0.c0))) BETWEEN (DATE(rt1.c1, rt1.c2, rt1.c0)) AND (rt1.c3)) DESC;SELECT t1.c0 FROM t1, rt1 ORDER BY CAST(((((rt0.c2)OR(v0.c0)))OR(rt0.c0)) AS BLOB) DESC  NULLS LAST;SELECT ALL NTH_VALUE(CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (358468100)) AS NUMERIC), rt0.c0) OVER () FROM rt0 ORDER BY (((NOT (v0.c2)))<((~ (t1.c0)))) ASC, ((v0.c2 COLLATE RTRIM)IS(CASE rt1.c4  WHEN v0.c0 THEN rt1.c1 WHEN v0.c0 THEN rt0.c2 WHEN NULL THEN rt1.c2 END)) DESC  NULLS LAST, (- (((rt1.c4) BETWEEN (NULL) AND (v0.c2))));SELECT DISTINCT (~ (CASE WHEN 0.45462655998122925 THEN t1.c0 END)) FROM t1, v0 WHERE (((((((x'')AND(NULL)))OR(x'dd49'))) BETWEEN ((- (0.4295321322827348))) AND (LIKELY(DISTINCT 0.19531294490697382)))); -- 0ms;
SELECT SUM(MIN(((((rt0.c0)AND(rt0.c1)))OR(rt1.c4)))) FROM t1 WHERE (((CASE 0Xffffffff95451e52  WHEN '881205581' THEN '-1546774104' END)>>(0)));SELECT ALL (((rt0.c0))>((rt0.c0))) COLLATE BINARY FROM t1 WHERE ((~ (CASE 0.7722071697600548  WHEN 0.9141503241496137 THEN '-1617527200' WHEN NULL THEN x'' WHEN x'' THEN x'256c' ELSE '' END)));SELECT ALL CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC) FROM rt0, rt1 WHERE (TRIM((- (x'')))); -- 0ms;
SELECT SUM(((rt0.c0)||(v0.c2))) FROM rt1, t1, rt0 WHERE (0x7ed89126);SELECT ALL ((COUNT(*)) NOT BETWEEN ((((rt1.c2, '974461370', 0x1bde4aa6)) BETWEEN ((rt0.c0, rt1.c4, rt0.c0)) AND ((v0.c2, NULL, rt1.c0)))) AND (((((((((rt1.c1)AND(rt1.c0)))OR(v0.c2)))OR(rt0.c1)))AND(rt1.c4)))) FROM t1, rt1, rt0;SELECT (((((((rt1.c2, rt0.c1, rt1.c4)) BETWEEN ((t1.c0, rt1.c1, v0.c2)) AND ((rt1.c2, rt1.c3, rt1.c4))))AND(CAST(v0.c2 AS BLOB))))AND(((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)))) FROM v0, rt1;SELECT ALL ((((v0.c1) IS FALSE))*(v0.c2)), (+ (TRIM(DISTINCT t1.c0, rt1.c4))), MIN(MIN(((rt1.c1)|(v0.c0)))) FROM v0;SELECT DISTINCT ((((((((MAX(v0.c2))OR(TRIM(v0.c1))))OR(MIN(v0.c1))))OR('1943039955')))OR(((rt1.c4) IS TRUE))) FROM t1;SELECT ALL (NOT (((rt1.c3)<<(rt1.c3)))) FROM v0, rt0 WHERE (((UNLIKELY('[9<'))IS NOT(((0X5f3481a1) NOT NULL))));SELECT ALL ((((rt1.c1)AND(rt1.c3))) NOTNULL) FROM t1 WHERE (((((CAST('z5.,!' AS REAL))AND(1.525889569E9 COLLATE BINARY)))AND(((33056450)OR(NULL)))));SELECT ALL TOTAL(CASE WHEN rt1.c2 THEN rt1.c2 ELSE v0.c1 END), (((((((('8 \%\r*y5')AND((rt1.c1 IN ()))))AND(((v0.c1) NOT BETWEEN (rt1.c1) AND (v0.c0)))))OR((x'' IN (rt1.c1)))))AND(255822229)), ((((((v0.c1)AND(v0.c1)))AND(rt0.c1))) IS FALSE), (CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN t1.c0 WHEN 0.33829507121138247 THEN rt0.c0 END IN ()), CASE WHEN rt0.c1 THEN v0.c1 WHEN ((x'')LIKE(rt0.c0)) THEN CASE rt1.c2  WHEN x'' THEN rt1.c2 END WHEN rt0.c1 THEN CAST(v0.c2 AS INTEGER) END FROM rt0, rt1, t1, v0 WHERE (0.6290907851636371 COLLATE BINARY COLLATE NOCASE) ORDER BY x'' ASC  NULLS LAST, NULL, (rt0.c0 COLLATE RTRIM IN ()); -- 0ms;
SELECT DISTINCT (('1231624888')%(((rt0.c1)<=(v0.c0)))), NULLIF(0.8083989993713366 COLLATE RTRIM, CASE WHEN v0.c1 THEN rt1.c4 ELSE rt0.c2 END), 6.16045425E8 FROM rt1, v0, t1 WHERE (((('?j', -1.867779837E9, x'')) BETWEEN ((0.8535581340195454, NULL, 582457282)) AND ((x'', x'5ba8', 0Xffffffffacdb3e7b))) COLLATE NOCASE) ORDER BY v0.c1;SELECT DISTINCT '' FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)GLOB(v0.c0)))OR(((t1.c0) ISNULL))))OR((((v0.c1))<>((v0.c0))))), NTILE(((CASE rt1.c4  WHEN rt1.c1 THEN t1.c0 WHEN v0.c2 THEN rt1.c3 WHEN rt1.c4 THEN NULL ELSE rt1.c3 END) NOT BETWEEN ((((t1.c0, v0.c1, v0.c0))!=((rt1.c0, v0.c1, rt1.c3)))) AND (((rt1.c0)|(v0.c0))))) OVER ( ORDER BY (+ (((rt1.c2) ISNULL))) ASC), ((rt1.c1) IS TRUE) COLLATE BINARY FROM v0, rt1, t1 WHERE ((((NULL)>=(NULL)) IN ()));SELECT DISTINCT NULLIF(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c4)), SUM(rt1.c2)) FROM rt0;SELECT DISTINCT SUM(((rt0.c1)+(rt0.c2))) OVER () FROM rt0, v0, t1 WHERE (((CASE WHEN x'' THEN x'' ELSE 0.9621261882238188 END)>=(((0.8674483735612962)<(0.849235453938912))))); -- 0ms;
SELECT DISTINCT (((~ (rt0.c2)))<(((((t1.c0)AND(rt0.c0)))OR(rt0.c0)))) FROM v0, rt0 GROUP BY ((t1.c0 COLLATE NOCASE) NOT BETWEEN ((((rt1.c1))!=((t1.c0)))) AND (CASE v0.c1  WHEN rt1.c2 THEN '' END)), ((((v0.c0)IS(rt1.c1))) BETWEEN ((+ (v0.c1))) AND (((v0.c0) NOTNULL))), CAST((((rt0.c2))>=((rt0.c2))) AS BLOB);SELECT ALL ((SQLITE_SOURCE_ID())GLOB(LIKELY(rt0.c1))) FROM rt0, rt1 WHERE ((CAST(x'' AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT ((((COUNT(*))OR(((v0.c2) NOT NULL))))AND(CAST(v0.c2 AS TEXT))), LIKELY(DISTINCT ((rt1.c3) NOT BETWEEN (rt1.c4) AND (v0.c1))), SUM(0.6690043724129492) FROM rt0, rt1, t1, v0 WHERE ((NULL COLLATE BINARY IN ())) LIMIT -168491061; -- 1ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT v0.c1, 0.9356347154690559)) IS FALSE) FROM rt1, t1 WHERE (ABS(0.12813539914801153 COLLATE RTRIM));SELECT DISTINCT ((((((((CAST(rt1.c0 AS NUMERIC))OR(((v0.c2) NOT BETWEEN (v0.c1) AND (rt1.c0)))))AND(rt1.c3)))OR(CAST(rt0.c0 AS BLOB))))OR(((v0.c1) NOT NULL))) FROM v0, t1 LEFT OUTER JOIN rt1 ON ((rt1.c1)LIKE(((v0.c0)<(v0.c0)))) CROSS JOIN rt0 ON CAST(rt1.c1 AS BLOB) COLLATE RTRIM WHERE (((x'' COLLATE BINARY) BETWEEN ((((((((('-654688172')AND('+ZV>r')))AND('-567744315')))AND(NULL)))OR(x'9b1c'))) AND ('935203439'))); -- 0ms;
SELECT ALL LEAD('' COLLATE RTRIM, ((((((((((((CAST(rt0.c2 AS TEXT))AND(((((((((v0.c1)OR(v0.c0)))OR(v0.c2)))AND(v0.c2)))OR(rt0.c2)))))AND(((rt0.c0)||(rt0.c1)))))AND(CAST(rt0.c2 AS INTEGER))))OR(CAST(rt0.c2 AS TEXT))))OR(((v0.c0)LIKE(v0.c1)))))AND('-1779801634')), ((v0.c2)AND(rt0.c2)) COLLATE BINARY) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0, v0 WHERE ((((NULL)) NOT BETWEEN ((CAST(x'' AS INTEGER))) AND ((CASE WHEN 0.7976033967505831 THEN 'g	K㔷E]' END)))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT ALL AVG((NOT (rt0.c1))), CASE WHEN (NOT (rt0.c2)) THEN ((0.9014008062568005) NOT BETWEEN (rt0.c2) AND (rt1.c0)) ELSE ((v0.c2) NOT BETWEEN (t1.c0) AND (v0.c0)) END, LIKELIHOOD(((v0.c2)/(rt0.c0)), 0.7980220648870306) FROM rt0, v0, t1 WHERE (CAST(-5.67744315E8 COLLATE NOCASE AS TEXT));SELECT (((rt1.c2, v0.c0, rt1.c3)) NOT BETWEEN ((((rt0.c2)=(t1.c0)), ((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c0)), MAX(rt1.c2))) AND ((CASE t1.c0  WHEN x'' THEN v0.c1 WHEN rt1.c1 THEN v0.c1 WHEN rt1.c2 THEN rt1.c1 END, rt1.c4 COLLATE NOCASE, SUBSTR(rt0.c1, rt0.c0)))), (((((+ (rt1.c0)))OR((rt1.c4 IN (t1.c0)))))OR(TYPEOF(rt0.c1))), RANK() OVER (), ((CASE 0xfffffffff980a8f9  WHEN t1.c0 THEN rt0.c1 ELSE rt1.c2 END)<(t1.c0)), IFNULL((+ (rt1.c0)), CAST(rt1.c0 AS TEXT)) FROM rt1 WHERE (((TRIM(DISTINCT 0.7140348036410389))IS NOT(CASE WHEN 0.008671453563779075 THEN '-1681034642' ELSE 2119169220 END)));SELECT ALL (~ (rt0.c0 COLLATE NOCASE)), ((((((rt1.c0))<=((v0.c1)))))>((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c0))))), ((((t1.c0) BETWEEN (0.6492116057135231) AND (rt1.c4)))>=(((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c1)))) FROM t1, rt1 NOT INDEXED, rt0, v0 WHERE (STRFTIME((('1813946935') BETWEEN ('1632774984') AND (x'')), json_array(NULL, 0Xffffffff90abf103), ((-2.020069094E9)>>(x'')), '' COLLATE RTRIM, LOWER(x''))) LIMIT 768574186 OFFSET -654688172; -- 0ms;
SELECT rt1.c0 COLLATE RTRIM FROM v0, rt1; -- 4ms;
SELECT ALL CASE (((rt1.c4, t1.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c0, rt0.c2)) AND ((-1.01092946E9, v0.c1, v0.c1)))  WHEN ((v0.c0)/(v0.c0)) THEN SUM(rt1.c1) WHEN (((rt1.c0))!=((rt0.c2))) THEN rt0.c2 WHEN COUNT(*) THEN COUNT(*) END FROM v0, rt0;SELECT ALL CASE WHEN ((v0.c0) IS TRUE) THEN TRIM(rt0.c2) WHEN ((v0.c2) BETWEEN (v0.c0) AND (rt0.c0)) THEN rt1.c0 COLLATE BINARY WHEN COUNT(rt0.c1) THEN t1.c0 COLLATE NOCASE ELSE RTRIM(v0.c0) END, ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))) AND (rt0.c0)), t1.c0 FROM rt1, v0, t1 WHERE (LTRIM(((('-1539310950', x'', 0.49026638476924966, '', x'')) BETWEEN ((x'', 635471705, '67', 0.051988311656560704, NULL)) AND ((x'', x'a89f', 0x61522b48, NULL, x'079c'))))) LIMIT -605948680;SELECT DISTINCT LAG(v0.c2, ((((v0.c2)OR(v0.c0)))OR(rt1.c0)) COLLATE BINARY, CASE WHEN CASE t1.c0  WHEN rt1.c0 THEN v0.c2 END THEN ((v0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN v0.c1 COLLATE NOCASE THEN v0.c0 COLLATE BINARY WHEN rt0.c1 COLLATE RTRIM THEN COALESCE(DISTINCT v0.c0, v0.c0) END) OVER () FROM rt1, v0, t1, rt0 LIMIT -382188373; -- 1ms;
SELECT DISTINCT -4.23910791E8, LENGTH(0.6923416871626948), (rt1.c2 COLLATE NOCASE IN ()) FROM rt1 WHERE (5.82457282E8) GROUP BY CASE WHEN CAST(rt1.c0 AS BLOB) THEN CASE WHEN rt0.c2 THEN rt1.c2 END ELSE ROUND(t1.c0, rt1.c0) END HAVING (TOTAL(rt0.c1) IN (((rt1.c4)+(rt1.c2))));SELECT DISTINCT ((((v0.c0)-(v0.c0))) BETWEEN (CAST(v0.c2 AS REAL)) AND (((rt1.c1)=(rt1.c0)))) FROM rt1, t1;SELECT ALL CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM COLLATE BINARY FROM v0, rt0 WHERE (CASE WHEN ((x'')/(x'')) THEN json_extract(x'6d25', '-853973306') WHEN CASE '6D'  WHEN '_&' THEN 0.26492079314717565 WHEN '-1852172977' THEN '-1761367960' WHEN '768574186' THEN '' ELSE 0Xffffffffae0f9127 END THEN (((NULL, NULL, x'', 0.8785131487727307, x''))==((0.2657428999445236, '463999449', '-986355521', 0.2902160327647141, NULL))) WHEN ((NULL) NOTNULL) THEN ((('&c'))>=((0.8149580510244326))) END); -- 0ms;
SELECT DISTINCT MAX((((rt1.c0, rt0.c2, v0.c2))>((rt1.c3, '0.6477994693953117', v0.c2)))), CAST(NULL AS NUMERIC), (((((v0.c2))!=((rt1.c2))))|(rt1.c0)), ((((rt1.c2)&(t1.c0))) ISNULL), CASE ((rt1.c0) IS FALSE)  WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c1 THEN v0.c0 WHEN rt1.c3 THEN rt1.c3 END THEN (rt1.c4 IN ()) WHEN (rt1.c4 IN ()) THEN AVG(rt1.c2) WHEN '-2004505908' THEN ((((((((v0.c2)OR(v0.c1)))AND(v0.c1)))OR(0.6280726490948537)))OR(rt1.c1)) ELSE ((v0.c1) BETWEEN (v0.c1) AND (rt0.c0)) END FROM v0, rt0, rt1 WHERE (((CASE WHEN '-1160862550' THEN NULL END) IS FALSE)) LIMIT -130270360 OFFSET 1029459822;SELECT ((CASE rt1.c4  WHEN rt1.c2 THEN rt1.c1 END)|(CASE WHEN t1.c0 THEN 1565852071 WHEN t1.c0 THEN rt1.c0 WHEN v0.c2 THEN v0.c0 END)) FROM rt0, t1, v0 WHERE (((((x'31b5') IS TRUE)) IS TRUE));SELECT DISTINCT CAST(((rt0.c2)IS(rt0.c0)) AS TEXT), (((rt1.c2)) BETWEEN (((('1842053634')/(rt0.c0)))) AND ((rt0.c1 COLLATE NOCASE))), DENSE_RANK() OVER () FROM t1;SELECT DISTINCT ((((x'')OR(((rt1.c2) NOTNULL))))OR(CASE rt1.c0  WHEN '~3MOD匹滼_' THEN t1.c0 ELSE v0.c2 END)) FROM v0, rt1 WHERE (x'0ec7');SELECT ALL rt1.c1, ((((GROUP_CONCAT(rt1.c4))OR(CAST(t1.c0 AS BLOB))))OR(((rt1.c4) NOTNULL))), (NOT (ABS(DISTINCT rt1.c3))) FROM rt1;SELECT ((((CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 WHEN t1.c0 THEN rt1.c3 WHEN v0.c0 THEN v0.c1 END)AND(CASE WHEN rt0.c0 THEN v0.c2 WHEN rt0.c0 THEN rt1.c4 WHEN -1267724661 THEN v0.c2 WHEN '㋗8*+' THEN rt0.c2 WHEN 'uSxz!xQj' THEN v0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN rt1.c0 END)))AND((- (v0.c2)))) FROM rt0, t1;SELECT ((CAST(rt1.c2 AS NUMERIC))GLOB(rt1.c2)), COUNT(*), ((CAST(x'f735' AS BLOB)) NOT NULL) FROM t1;SELECT DISTINCT ((COALESCE(rt1.c0, v0.c1)) ISNULL) FROM t1, rt1, rt0 WHERE ((NOT (CAST(NULL AS BLOB)))) LIMIT -1937494953 OFFSET -288777650;SELECT DISTINCT v0.c0, (((t1.c0 IN (rt1.c1)))IS NOT(((rt0.c2)IS(v0.c0)))), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE FROM v0, t1 WHERE ((((('X8' COLLATE RTRIM)OR((- (0.8979270310950782)))))AND(((0xffffffffb5bc60f6) NOT BETWEEN ('B7?ᬏ') AND (0.21829779181064546)))));SELECT DISTINCT (+ (rt1.c2)) FROM t1, v0 WHERE ((0.8836025772874968 IN (NULL COLLATE NOCASE))) ORDER BY (((rt0.c2)) BETWEEN ((((rt0.c2)=(rt0.c1)))) AND ((((((rt1.c3)AND(rt0.c2)))OR(v0.c0)))))  NULLS LAST LIMIT -815844523 OFFSET -2123240684;SELECT DISTINCT rt1.c4, ((MIN(v0.c1)) IS TRUE), ((UPPER(DISTINCT v0.c0)) NOT BETWEEN (((rt1.c2)-(rt1.c2))) AND (((rt1.c4) NOT BETWEEN (0.7402906301566696) AND (rt1.c1)))) FROM rt1, t1, v0 WHERE (CAST(((((0x27f6111d)AND('f9')))OR(0.783156582515509)) AS TEXT)) LIMIT -1211887200 OFFSET -596835759; -- 1ms;
SELECT DISTINCT ((rt1.c4 COLLATE BINARY)LIKE(x'')) FROM rt0, v0, rt1, t1; -- 0ms;
SELECT GROUP_CONCAT((NOT (v0.c2))), ((rt0.c1)OR(CASE WHEN rt0.c2 THEN '1344107032' END)), (((((rt1.c2))=((rt1.c2))))*(((((rt0.c2)AND(rt1.c2)))AND(v0.c0)))) FROM rt0, rt1, t1, v0 WHERE (CAST(LIKELY(DISTINCT NULL) AS TEXT)); -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt0.c1 AS NUMERIC) COLLATE BINARY) FILTER(WHERE CASE rt0.c1 COLLATE BINARY  WHEN rt1.c1 THEN CAST(rt1.c2 AS BLOB) ELSE (rt1.c4 IN ('-660055257')) END) OVER () FROM rt0, v0, rt1, t1 WHERE ((((('')<<('')))IS NOT(((NULL) IS TRUE)))); -- 0ms;
SELECT CAST((rt0.c2 IN (rt0.c1, x'009a97a9')) AS NUMERIC), CAST(rt0.c1 AS BLOB), ((SUM(rt1.c4))*((rt1.c1 IN (-1752357645, rt1.c4)))) FROM rt1, rt0, t1 WHERE ((((NULL IN (x''))) IS TRUE)) ORDER BY (+ ((- (v0.c1)))) DESC LIMIT 321158346;SELECT ((~ (rt0.c0)) IN ()) FROM rt0, v0, rt1 ORDER BY (((rt1.c2)) NOT BETWEEN ((((((v0.c2)OR(rt1.c2)))OR(v0.c2)))) AND (((((v0.c2))>=((x''))))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 END)LIKE(CAST(rt1.c1 AS REAL))) FROM t1, rt0, v0, rt1 WHERE (((('2088427790' COLLATE NOCASE))>((CASE 0.5264474976938048  WHEN 0.29385544561753474 THEN x'b2e5' ELSE x'' END)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1, v0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0, rt1 LIMIT 676326344; -- 0ms;
SELECT ALL ((MAX(rt1.c2))<=(t1.c0)), CASE WHEN SQLITE_SOURCE_ID() THEN rt1.c1 COLLATE NOCASE END, LOWER((- (NULL))) FROM rt0 WHERE (((((0.3356802542888587)AND(((x'')IS NOT('FALSE')))))OR(((0.8609080097709259)<=('-660055257')))));SELECT DISTINCT COUNT(((v0.c1)==(v0.c0))) FROM v0, rt1, t1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)/(NULL)) IN ()) FROM v0, t1 WHERE (('' IN ())) LIMIT 1424222525; -- 0ms;
SELECT ALL CAST((rt0.c0 IN ()) AS BLOB), ((rt0.c2)>(rt1.c1)) COLLATE RTRIM, CAST((~ (v0.c1)) AS REAL) FROM rt0, v0, rt1, t1; -- 0ms;
SELECT CAST(((((rt1.c3)OR(t1.c0)))AND(rt0.c1)) AS REAL), x'', RTRIM(rt1.c4 COLLATE NOCASE) FROM t1;SELECT ALL ((((((((v0.c1)AND(CASE WHEN rt1.c1 THEN v0.c2 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt1.c3) IS FALSE))))OR(((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)))))OR(((v0.c1)<<(t1.c0)))), ((rt1.c3)!=(v0.c1)) COLLATE NOCASE, (((rt0.c2))<((rt1.c0))) COLLATE BINARY FROM t1, v0, rt0, rt1; -- 0ms;
SELECT ALL NULL FROM v0 NOT INDEXED, t1, rt0 WHERE (((((NULL) IS FALSE))IS(((0.7555849850538923)=(1285040888))))) ORDER BY ((t1.c0)LIKE(v0.c2)) COLLATE NOCASE  NULLS FIRST; -- 0ms;
SELECT DISTINCT rtreenode((rt1.c4 IN (v0.c0)), (('-698125832')AND(0.7857203950631223))), (AVG(rt1.c4) IN (CASE rt0.c2  WHEN t1.c0 THEN rt1.c1 END, LAST_INSERT_ROWID())), CAST(rt1.c3 AS INTEGER) FROM rt0, t1, rt1, v0; -- 0ms;
SELECT ALL DATETIME(COUNT(*), (NOT (v0.c1)), (((v0.c0))>((rt1.c4))), x'', (('1054382787')*(0.9935314403631788))) FROM rt1, t1, v0, rt0; -- 0ms;
