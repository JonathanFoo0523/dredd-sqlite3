-- Time: 2024/06/07 07:00:55
-- Database: database23
-- Database version: 3.40.0
-- seed value: 3608581523
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, content=''); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
COMMIT; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 4ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 3ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 3ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 2ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 4ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 1ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
DELETE FROM none; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, languageid="lid", languageid="lid"); -- 1ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (x''), (x''), (0Xffffffffe51bff31), (NULL), (x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'', x'8ff5', 'Ｑ]#_1'); -- 0ms;
INSERT OR IGNORE INTO vt1(lid, c0) VALUES (0.6362083362720724, ''); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=(0.918010445470629) WHERE (((- (vt1.lid)))%((((x''))>=((vt1.c1))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=207278300 unordered'); -- 0ms;
ANALYZE; -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, lid, c0) VALUES ('', 0.6768925919196653, 0.5473022420030503), (NULL, 0.18569108886643126, 'TRUE'), (-4.51150031E8, -1311336839, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(lid, c1) VALUES (0.5888851498094538, 0.016588022915202227), (x'', NULL), (NULL, 0.6199750686588209); -- 0ms;
UPDATE vt1 SET lid='0.5473022420030503', c0='-1311336839', c1=NULL WHERE ((vt1.lid) BETWEEN (vt1.lid) AND (vt1.lid)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES ((((NULL)) BETWEEN ((json_array(x'', 0.6768925919196653))) AND ((-1311336839)))), ('*hnh\c'), (1899571508); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, lid) VALUES (0.7483054461178196, 'Vr'); -- 7ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
UPDATE vt1 SET (c0)=('1406500754') WHERE vt1.lid; -- 0ms;
INSERT OR REPLACE INTO vt1(lid, c1) VALUES (-4.51150031E8, 0.002871720389501786), ('', x''), (NULL, 0.18569108886643126); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1, lid, c0) VALUES ('', x'2fb4', x''); -- 0ms;
UPDATE OR IGNORE vt1 SET c1='1899571508', c1=NULL, c0=' V' WHERE ((LIKELY(vt1.c1))OR(((vt1.c0) NOT BETWEEN (0xffffffffad0bfed1) AND (vt1.c0)))); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1899571508'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.013704162372592865, 0X7c82fcfd, 'b_Mt%僡bOj'); -- 0ms;
INSERT OR ABORT INTO vt1(c1, c0, lid) VALUES (x'', '-1598538941', '0.002871720389501786'), (NULL, 0.5473022420030503, -1.7976931348623157E308), ('0.6768925919196653', 0xffffffffde04c0d0, '9r'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1, lid) VALUES ('195650514', NULL, 1.899571508E9), ('', 'S_', x''), (x'', '195650514', '9--3072396961061150965T1632-918T'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1(lid) VALUES (''), (NULL), ('-1484919335'); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO vt1(lid) VALUES ('0.5888851498094538'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR ABORT INTO vt1(lid, c0, c1) VALUES (0.6415007165479594, NULL, 'J0elrＱ''P'); -- 0ms;
INSERT OR FAIL INTO vt1(c1, c0) VALUES (NULL, NULL); -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT OR FAIL INTO vt1(lid, c0) VALUES (x'2cd6', '-1624168990'); -- 0ms;
ANALYZE main; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0, lid) VALUES (0Xffffffffb4a55fbe, '%f', x''), ('', '', 0.22394730021904574), ('', '-1264230466', 1.406500754E9), (NULL, NULL, NULL), ('', x'', NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.lid THEN vt1.c1 ELSE vt1.lid END) NOT NULL), LAST_VALUE((vt0.c0 COLLATE NOCASE IN ())) OVER (), (((vt1.c0, NULL, vt1.c0, vt0.c0, vt1.lid)) BETWEEN ((((vt1.c1)>(x'')), (((vt1.c1))<((vt1.lid))), ((((vt1.c1)OR(vt1.lid)))AND(x'')), CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END, vt1.lid)) AND ((((vt1.lid)==(vt1.c1)), ((((((((vt1.c1)AND(vt1.c1)))AND(0.576995525390313)))OR(vt0.c0)))OR(vt1.c0)), ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt0.c0)), ((vt1.lid)GLOB(vt1.c0)), (vt0.c0 IN (x''))))) FROM vt0 WHERE (CAST(x'' AS REAL) COLLATE NOCASE) GROUP BY ((((((((vt1.c1)AND(vt1.lid)))AND(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE, CAST((((vt1.c0, vt0.c0, vt0.c0, 0.908405233429977, vt1.c0)) NOT BETWEEN ((vt1.c1, NULL, vt1.lid, vt1.c0, vt1.lid)) AND ((vt1.lid, vt1.lid, vt1.c1, vt1.c0, vt1.c1))) AS REAL), (((((((vt1.lid)AND(vt1.c0)))OR(vt1.lid))))>(((((vt1.c1, vt1.lid, vt1.lid)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c0)) AND ((vt1.lid, vt1.c0, vt0.c0))))));SELECT ALL (('-570113840')IS(((vt1.c1)!=(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid)) AS BLOB) FROM vt0;SELECT ALL (~ (((vt0.c0)/(vt1.c0)))), CAST(vt1.c0 AS REAL) COLLATE RTRIM, 'd.' FROM vt0 WHERE (((((((x'') NOTNULL))AND(IFNULL(0.6072981637707244, x''))))AND(((((0xffffffffb1d69679)OR(NULL)))OR('2098183355')))));SELECT ALL (((''))>((0.918010445470629))) FROM vt1; -- 0ms;
SELECT CAST(CASE WHEN '-451150031' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END AS REAL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) FROM vt1 WHERE (((TRIM(NULL))==(((('12'))<>((x''))))));SELECT DISTINCT (('s_') NOT BETWEEN (CASE vt1.lid  WHEN 'R' THEN vt1.lid END) AND (((vt1.c1)<<(vt1.c0)))), COUNT(((vt0.c0)AND(vt1.c1))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING), (((~ (vt1.c1))) BETWEEN (vt1.c1 COLLATE RTRIM) AND ((vt1.c1 IN (vt1.c1)))) FROM vt0, vt1 WHERE (CASE (~ (x''))  WHEN (-6.30566687E8 IN ()) THEN ((0xffffffffa0b83b43)IS(x'')) ELSE (('459763255')LIKE(NULL)) END); -- 0ms;
SELECT ((((vt1.lid)IS NOT(vt1.lid)))>(vt0.c0 COLLATE BINARY)), (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))))AND(((vt1.c0)OR(vt0.c0)))))AND((vt1.c0 IN ()))), SUM(((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))) FROM vt1, vt0 WHERE (((('0.016588022915202227' IN (-443090826, '195650514'))) IS TRUE)) ORDER BY HEX(vt1.lid) DESC, (((- (vt1.lid))) IS TRUE) ASC, vt1.c0 DESC  NULLS FIRST; -- 0ms;
SELECT ALL AVG(vt0.c0), ROW_NUMBER() OVER (), RANK() OVER () FROM vt0, vt1 WHERE ((((+ ('BD5hG*>渷i')))||((0.053637471451632 IN (x'4058'))))) GROUP BY ((((vt1.lid)!=(vt1.lid)))GLOB(CAST('1793024206' AS BLOB))), ((((vt1.c0) BETWEEN (x'7648') AND (vt1.c0))) IS TRUE), ((((vt1.lid) NOT BETWEEN ('189570111') AND (vt0.c0)))*(((vt1.lid)<<(vt1.lid)))) HAVING (+ (ABS(DISTINCT vt1.lid))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt1.lid, vt1.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c1)) AND (('', vt1.c0, vt1.c1)))) IS TRUE) FROM vt1, vt0; -- 1ms;
SELECT TOTAL(CAST(-5.7011384E8 AS NUMERIC)) COLLATE BINARY FROM vt0, vt1 GROUP BY (((vt1.c0)=(vt1.lid)) IN ()) HAVING (NOT (0X1ae12b56)); -- 0ms;
SELECT ALL SUM(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid WHEN '' THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 END) OVER (), (+ (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))), CASE WHEN (('-174156873') NOTNULL) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) ELSE LIKELY(vt1.c1) END, SUM((('1793024206') NOT BETWEEN (vt1.c0) AND (vt0.c0))) OVER (), (TOTAL(vt0.c0) IN (((vt1.c1) IS TRUE), ((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)))) FROM vt1;SELECT ALL GROUP_CONCAT(vt0.c0) OVER () FROM vt0 WHERE (UPPER(DISTINCT '1899571508')) LIMIT 450964310; -- 0ms;
SELECT DISTINCT ((vt1.c1 COLLATE BINARY)LIKE(((0.002871720389501786)*(vt1.c1)))) FROM vt0;SELECT ALL (((vt1.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM, ((vt1.lid)-('-2043549011')), '1732924734', CAST(vt0.c0 AS INTEGER), ((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) AND (((vt1.c1 IN (vt0.c0, x'8032')), 0.22367557520475867, 0.29447925984440326 COLLATE BINARY, HEX(vt1.lid), ((vt1.c0)<(vt1.c1))))), ((vt1.lid COLLATE BINARY)%(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.lid)))), ((((((vt1.lid) BETWEEN (vt1.lid) AND ('e')))AND((~ (vt1.lid)))))AND(vt1.lid)) FROM vt0, vt1 LIMIT 2088959229; -- 0ms;
SELECT (~ (vt1.c0)) COLLATE NOCASE, CAST(((vt1.c1)IS NOT(vt1.c1)) AS NUMERIC), ((0.42168638656375423)<((- (vt1.c1)))) FROM vt0 NOT INDEXED;SELECT ALL CAST((vt1.c1 IN ()) AS TEXT) FROM vt0, vt1 WHERE (((((x'') IS FALSE))|(((x'646c2b0d') IS FALSE)))); -- 0ms;
SELECT DISTINCT ((((vt1.c1)/(vt0.c0)))OR(CAST(vt1.c0 AS BLOB))) FROM vt1, vt0 WHERE (((((0.47461996724443 COLLATE BINARY)AND(NULL COLLATE RTRIM)))OR(CAST('R' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT NULL FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt1.lid COLLATE RTRIM)LIKE(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) FROM vt0 WHERE (((((NULL)<('Hl!z')))||((((((((('Ay')OR(NULL)))OR(x'')))AND(x'725b')))OR(x'1abe')))));SELECT DISTINCT (COUNT(vt1.lid) IN (-695334117)) FROM vt1, vt0; -- 0ms;
SELECT ALL (NULL IN ()) COLLATE RTRIM, ((((((((((((((vt1.lid)OR(vt1.lid)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.lid)))OR('gn')))OR(vt0.c0)))+(((vt1.c0) NOT NULL))), ((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) IN ()), ((CAST(x'd9c3' AS REAL)) NOT BETWEEN ((('1555325727')||(vt0.c0))) AND (((vt1.lid) IS TRUE))), CAST((((vt1.c1, vt0.c0, vt1.lid)) NOT BETWEEN ((vt1.lid, vt1.lid, vt0.c0)) AND ((vt1.lid, vt1.c0, vt0.c0))) AS NUMERIC) FROM vt1;SELECT DISTINCT (((TRIM(DISTINCT vt0.c0, vt1.c1)))<=(((((vt1.c0))<((vt1.c0)))))) FROM vt1, vt0 WHERE (((((((((((((((((((((0x21eeb681)AND(NULL)))OR(NULL)))AND('now惎7Kw_첽뚁')))OR('gk1D[7%]ue')))OR(NULL)))OR('-50018960')))AND(ABS(NULL))))OR((- (0.5097676359322832)))))AND((('') NOT NULL))))AND(((('-1624168990'))>=(('1899571508')))))) ORDER BY (vt1.lid IN ()) DESC  NULLS LAST, SQLITE_COMPILEOPTION_GET(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0))); -- 0ms;
SELECT ALL ((ABS(DISTINCT vt1.c1))!=(MIN(vt1.c1))), CASE 'R'  WHEN '-385570527' THEN ((vt1.lid)IS(vt0.c0)) END, vt1.lid FROM vt1 WHERE (((('')LIKE('-1624168990')) IN ()));SELECT ((CAST(vt0.c0 AS TEXT)) IS FALSE), (GROUP_CONCAT(vt1.c1) IN ()), vt0.c0 FROM vt1, vt0 WHERE (ABS(x'7bac')) GROUP BY 0Xffffffffdf16998b, vt0.c0, (NOT (CAST(vt1.c0 AS REAL))), (~ (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)))), ((((((vt1.c0) NOTNULL))OR(NULL)))AND(((vt1.c1)IS NOT(vt1.c1)))); -- 0ms;
SELECT DISTINCT NULL FROM vt1, vt0 WHERE (((TRIM(DISTINCT 1.89570111E8, 0x13dd0a9d)) NOT NULL)); -- 0ms;
SELECT DISTINCT (((MIN(vt1.c0), ((((((((x'')OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))OR(vt1.lid)), '8<'))!=(((((vt1.lid)) BETWEEN ((x'f20a')) AND ((vt1.c1))), CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)AND(vt1.lid))))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN '-443090826' END) NOT BETWEEN (((vt1.c0)IS(vt0.c0))) AND (CASE WHEN vt1.lid THEN vt1.c1 END)), vt1.c0, ((((LAST_INSERT_ROWID())AND(195650514 COLLATE RTRIM)))OR((((vt1.lid, vt1.c1, vt1.lid)) BETWEEN ((vt1.c1, vt1.lid, vt0.c0)) AND ((vt1.lid, vt0.c0, vt1.lid))))) FROM vt1;SELECT DISTINCT ((((((((((vt1.c1)AND(0.7489134312794506)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c1))) NOTNULL) FROM vt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt1.c0)/(vt0.c0))) FILTER(WHERE ((vt0.c0)*((((vt1.lid, vt1.c1, vt0.c0))!=((vt1.c0, vt1.c0, vt1.c0)))))) OVER () FROM vt1;SELECT DISTINCT (((~ (vt1.c0)))-((+ (vt1.c0)))) FROM vt1, vt0 GROUP BY (vt1.lid IN ()); -- 0ms;
SELECT DISTINCT '1005592962' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) ISNULL)) IS FALSE) FROM vt1 ORDER BY NULLIF(QUOTE(vt1.c0), ((vt1.c1)IS NOT(vt1.c0))) DESC  NULLS FIRST; -- 1ms;
SELECT ALL (((((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))) NOT BETWEEN (((NULL) IS TRUE)) AND (((vt1.c1) ISNULL))) FROM vt0, vt1 WHERE ((~ (json_patch(NULL, -1.62416899E9)))) ORDER BY (((x'') NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT ALL LEAD(vt0.c0, vt0.c0, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 END))) OVER ( GROUPS (((vt1.c0 COLLATE BINARY))>=((((vt1.c1)<>(vt1.c0))))) PRECEDING EXCLUDE TIES) FROM vt0 WHERE ((((~ (0x778d5ca5)))>=((NOT (0Xffffffffd68e0b1b))))); -- 0ms;
SELECT DISTINCT ((LENGTH(vt1.lid))>=(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)))), AVG(((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.lid))), CASE x''  WHEN CAST(vt1.lid AS INTEGER) THEN ((vt1.c0)AND(vt1.c0)) WHEN CAST(vt1.c0 AS TEXT) THEN CAST(vt1.c0 AS REAL) WHEN ((vt1.lid)GLOB('-1484919335')) THEN (- (vt1.c0)) END FROM vt0, vt1; -- 0ms;
SELECT ((vt0.c0)>(vt0.c0)) COLLATE RTRIM FROM vt1 WHERE ((((((0.39316004127876303))!=(('333253277')))) NOT BETWEEN ((((NULL, '1005592962', 0.013704162372592865))<>((0.29447925984440326, 0xffffffffdf16998b, x'')))) AND ((('-1598538941') IS FALSE))));SELECT ALL (((vt1.c1, vt0.c0, vt1.c0)) BETWEEN ((CAST(vt1.lid AS TEXT), (vt1.c0 IN ()), (vt1.c1 IN ()))) AND ((AVG(vt0.c0), (((vt1.c0))<=((vt1.c0))), ((vt1.c0) ISNULL)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt1.c1, vt1.c1))<((vt1.c1, 0xfffffffffb16af43, vt1.lid))))LIKE((vt0.c0 IN ()))), vt1.lid, LOWER(UPPER(DISTINCT vt0.c0)) FROM vt1, vt0; -- 0ms;
SELECT ALL '-1496201055' FROM vt1 WHERE (((CASE x'2409'  WHEN 0.918010445470629 THEN NULL ELSE 0.1416829179181306 END) NOT BETWEEN ((~ ('-364039077'))) AND ((('1330478010')<(-50018960))))); -- 0ms;
SELECT DISTINCT MAX(0.2326307621098176) COLLATE BINARY COLLATE BINARY, ((((vt1.lid)OR(vt1.c1)))>((((vt1.c0))<((vt1.c0))))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0.5897163803175558, vt1.lid, vt0.c0)) AND ((vt1.c1, vt1.lid, vt0.c0)))) ISNULL) FROM vt0, vt1 WHERE ((((x'' IN (x'')))%(CASE '-1311336839'  WHEN 'GV' THEN '뚁' END))); -- 0ms;
SELECT ((vt1.c1 COLLATE RTRIM)>>(((vt1.c1)<<(vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt1.c1 AS BLOB)) OVER ( ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)GLOB((((vt1.c0, 0.62232023028882, vt1.lid)) NOT BETWEEN ((vt1.c1, vt1.c1, 0.2117044059833575)) AND ((vt1.lid, vt1.c0, vt0.c0))))) DESC, LAST_INSERT_ROWID() ASC  NULLS LAST), '', ((((vt1.c1) IS FALSE))*(((vt1.c1)LIKE(vt1.c1)))) FROM vt1, vt0 WHERE (CASE CAST(0.42300863446613124 AS INTEGER)  WHEN (((x'c79b'))!=((NULL))) THEN (+ (NULL)) END); -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS REAL) COLLATE RTRIM FROM vt1, vt0; -- 1ms;
SELECT ALL CAST(((vt1.lid)&('Ｑ]#_1')) AS INTEGER), FIRST_VALUE(CAST(vt1.c0 AS TEXT)) OVER (), vt1.c0 FROM vt1, vt0 WHERE ((((((('a>戮') BETWEEN ('450964310') AND ('1743537155')))OR((((x'a011')) NOT BETWEEN ((x'876e')) AND ((x''))))))AND(CAST('0.42168638656375423' AS BLOB)))); -- 0ms;
SELECT ALL ((((((((((vt1.c0)AND(vt1.lid)))AND(vt0.c0)))AND(vt1.lid)))OR(vt1.c1))) NOT NULL) FROM vt0, vt1 GROUP BY ((CASE vt1.lid  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL), LIKELIHOOD(((vt1.c0)OR(vt1.lid)), 0.8627472739430136), (TRIM(vt0.c0) IN (CAST(vt1.c1 AS INTEGER))); -- 0ms;
SELECT (- (0.7186592963419434)) FROM vt1, vt0; -- 0ms;
SELECT ALL (((vt1.c0 IN (vt1.c1)))<<(x'')) FROM vt0 WHERE ((((((x'')==(0.32117951199996275))))!=((CAST('k]hB' AS BLOB))))) GROUP BY CASE WHEN vt1.c1 COLLATE NOCASE THEN vt1.c0 ELSE CAST(vt1.c0 AS INTEGER) END, ((CAST(vt1.c0 AS TEXT))+(UNLIKELY(DISTINCT vt1.c0))), ((((vt0.c0) BETWEEN (vt0.c0) AND ('-1270897288'))) IS FALSE) HAVING ((vt1.lid) IS TRUE) COLLATE NOCASE;SELECT (((- (vt1.lid))) ISNULL), HEX(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))), ((((vt1.c1)OR(vt1.lid)))OR(vt1.c0)) COLLATE BINARY FROM vt0, vt1 WHERE (((((((-4.51150031E8)OR('')))OR('0.22367557520475867')))>>((('M?Gﳽ\n') NOT BETWEEN ('-1000026947') AND ('1793024206'))))) INTERSECT SELECT COUNT(*) OVER (), COUNT(*), ((((((((((((((vt1.c1)>=(vt1.c0)))OR(((vt1.lid)IS(vt0.c0)))))AND(CASE NULL  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND(((vt1.c1)>>(vt1.lid)))))AND((((x''))==((vt0.c0))))))OR((((vt0.c0))>=(('.7'))))))OR(((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0)))) FROM vt1 WHERE ((((((- (x'd177')))AND(((0.6768925919196653) NOT NULL))))OR((~ (NULL))))) ORDER BY 0.42168638656375423 ASC  NULLS FIRST, CAST(((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(-50018960)) AS NUMERIC)  NULLS FIRST, vt1.c0  NULLS LAST;SELECT ALL (vt1.c1 IN ()) FROM vt1, vt0 WHERE (json((NULL IN ()))); -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY 840653726  NULLS LAST), ((vt0.c0 IN ()) IN ()), ((((vt1.lid)>(vt1.c0))) ISNULL), LIKELIHOOD(DISTINCT (vt1.lid IN (vt1.c1)), 0.4313246839049639), '12' FROM vt1 WHERE (((((((x'') NOT BETWEEN ('1609804020') AND (x'c1c9')))AND(((((((((0.10014718299451542)AND(x'')))AND(NULL)))AND('')))OR(-570113840)))))OR(NULL COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT DATETIME(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt1.lid AS NUMERIC), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'a087' WHEN vt1.c0 THEN vt1.lid WHEN '-523678552' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END), (+ (RTRIM(0.6095634898310336))), vt1.c0 FROM vt0 WHERE ((((0.25264084697245415)<(-1459283344)) IN ()));SELECT ALL (- (LIKELIHOOD(vt1.lid, 0.4539233127510768))) FROM vt0;SELECT ALL ROW_NUMBER() OVER () FROM vt1, vt0 WHERE (((CASE x''  WHEN '1330478010' THEN x'51c3c09e' ELSE '-146302974' END) BETWEEN ((0.21519495248976173 IN ())) AND (((x'')||('840653726'))))) GROUP BY (vt1.lid IN (vt0.c0, vt1.c0)) COLLATE RTRIM, ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)))>>(CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.lid END)), (~ (((vt1.c1) NOT NULL))) HAVING CAST((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) AS BLOB); -- 0ms;
SELECT DISTINCT (+ (((vt1.c1) ISNULL))) FROM vt1; -- 0ms;
SELECT x'12c6' FROM vt1; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS BLOB) FROM vt0, vt1 GROUP BY ((('-1838950445', vt1.lid, vt1.c1)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)), '㊇V>꽃f\r', ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) AND ((SUBSTR(vt1.c0, x'0a47'), ((vt1.c1) ISNULL), vt1.c0))); -- 0ms;
SELECT DISTINCT ((((vt1.lid) BETWEEN (vt0.c0) AND (vt0.c0)))>=(((((vt0.c0)AND(vt1.lid)))OR(vt1.c0)))) FROM vt0, vt1 WHERE (CAST((('299779054')!=('1906552992')) AS TEXT)) LIMIT 1096750016 OFFSET 1096750016; -- 0ms;
SELECT ALL CAST(vt1.c1 AS TEXT), ((vt1.c1)OR(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c0)))), CASE ((vt1.c0) IS TRUE)  WHEN TOTAL(vt0.c0) THEN (~ (x'')) END FROM vt1, vt0 GROUP BY ((((((((((((((((((((vt1.lid)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.lid)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))OR(4.59763255E8)))AND(CAST(NULL AS TEXT))))OR(vt1.c0 COLLATE NOCASE)))OR(vt1.c1 COLLATE BINARY)), ((CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN ((((vt0.c0, vt0.c0, vt1.c0))<((vt1.lid, vt0.c0, vt0.c0)))) AND (TYPEOF(vt1.c0))), ((((CAST(NULL AS TEXT))AND(CAST(vt1.lid AS BLOB))))AND(((((vt1.lid)OR(vt1.lid)))AND(vt1.c1)))) HAVING ((((vt0.c0)<=(vt0.c0))) NOTNULL); -- 0ms;
SELECT ALL ((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (vt1.lid) AND (((vt1.lid)LIKE(vt1.c0)))) FROM vt0, vt1 WHERE (-726440486); -- 0ms;
SELECT DISTINCT (- (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)) FROM vt1, vt0 WHERE (((NOT ('cHxf*')) IN ())); -- 0ms;
SELECT DISTINCT CAST(JULIANDAY(vt1.c0, vt0.c0, vt0.c0) AS TEXT) FROM vt1, vt0 WHERE ((((((((NULL)AND(NULL)))OR(NULL))))!=((NULL)))); -- 0ms;
SELECT TOTAL(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END) OVER () FROM vt1, vt0 WHERE (((CASE WHEN 0x71ff9535 THEN '650154020' WHEN NULL THEN 0.9090247396662048 WHEN x'ed64' THEN x'' END)GLOB(((x'')/('M_n2r)'))))) LIMIT 1743537155; -- 0ms;
SELECT ALL ((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((0.2301079613209427, vt1.c0, vt1.c0))<((vt1.lid, vt0.c0, vt1.c1)))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.lid END)) FROM vt1, vt0; -- 0ms;
SELECT ((((vt0.c0)%(vt1.c1))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0))) AND (((((vt1.c1)OR(vt0.c0)))AND('l<8+태pi')))) FROM vt0, vt1 WHERE (CAST((((x'', x'ee30', '-19313317')) BETWEEN ((0.25264084697245415, x'', NULL)) AND (('', 'ଛi', x''))) AS TEXT)); -- 0ms;
SELECT json_insert(((vt1.c0) ISNULL), ((vt1.lid)>(vt1.c1)), (vt0.c0 IN ()), CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((((((((vt1.lid)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt1.lid))) FROM vt1, vt0 WHERE (CAST(((('1832178632'))>((0.5956041292045995))) AS INTEGER)); -- 1ms;
SELECT DISTINCT ((((vt1.c0)!=(0.19875800431080215)))OR(vt1.c0)), (((vt0.c0)) BETWEEN (((vt1.lid IN (vt0.c0, vt1.c1)))) AND (((vt1.c0 IN ())))), ((((vt1.c0)AND(IFNULL(DISTINCT 0.10014718299451542, vt1.c0))))AND((NOT (vt1.c0)))) FROM vt1, vt0 WHERE (CAST(CAST('0.053637471451632' AS TEXT) AS REAL)); -- 0ms;
SELECT DISTINCT ((vt0.c0)-(((vt1.c0) NOT BETWEEN (82303331) AND (vt1.lid)))) FROM vt1, vt0 WHERE (LOWER(DISTINCT NULL)) GROUP BY CASE ((vt1.c0)*(vt1.c1))  WHEN 1.096750016E9 THEN vt1.c1 ELSE NULL END HAVING (((vt0.c0)) NOT BETWEEN ((((((((((299779054)AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))); -- 0ms;
SELECT ((((CAST(vt1.c0 AS INTEGER))OR(TOTAL(vt1.c0))))AND(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (NULLIF('840653726', CASE 920340015  WHEN NULL THEN x'3ab3' ELSE '792180884' END));SELECT ((((vt1.lid))>=((vt1.lid))) IN (((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)), ((vt0.c0) IS FALSE))), NULL, -6.95334117E8 FROM vt1 GROUP BY ((((vt1.lid)||(vt1.c1))) NOT NULL) HAVING (((vt1.lid IN ())) NOT BETWEEN (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.lid))) AND (IFNULL(vt0.c0, vt1.c1)));SELECT DISTINCT GROUP_CONCAT((vt1.lid IN ())), UPPER(SUM(vt1.lid)), ROW_NUMBER() OVER () FROM vt1; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid))) FROM vt0, vt1; -- 0ms;
SELECT ALL CASE CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END  WHEN (vt1.c1 IN ()) THEN vt1.c1 COLLATE NOCASE ELSE CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 END END FROM vt0 WHERE (((CAST('1826501524' AS BLOB)) NOT BETWEEN (NULL COLLATE NOCASE) AND (((((0.7242855657240633)AND(-1836293427)))AND(x'26af')))));SELECT CAST(((vt1.c1)<=('0.5888851498094538')) AS BLOB) FROM vt0 WHERE ((x'' IN ('/C8')) COLLATE BINARY) ORDER BY (((((vt1.c1)OR(vt1.lid)))OR(vt1.lid)) IN ()) DESC  NULLS FIRST;SELECT vt1.c0, ((((((((TIME(vt0.c0, vt1.c1, vt1.c1))OR(vt1.c1)))OR((((vt1.lid))==((vt1.c1))))))OR(((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1)))))AND(CAST(NULL AS INTEGER))), (((((((((((((((('-552167029')OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND((+ (vt1.c0)))))OR(CASE vt1.lid  WHEN vt1.lid THEN vt1.c1 END)), vt1.c0, (- (((0x36db462f) IS FALSE))) FROM vt0 WHERE ((((0.675204542751086 IN ()))<=(CASE 0.29447925984440326  WHEN -1.228787065E9 THEN NULL END))) ORDER BY (x'24b3' IN (GLOB(0x7d0fbcbb, vt1.c0), CAST(vt1.lid AS REAL))), (NOT (((vt1.c1)+(vt1.c1))));SELECT ALL ((vt1.c0) NOTNULL) COLLATE NOCASE FROM vt1, vt0 WHERE (((((NULL) BETWEEN ('299779054') AND ('긭+h8')))<>(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1, vt0 ORDER BY ((CAST(vt1.c0 AS BLOB)) IS FALSE) ASC; -- 0ms;
SELECT DISTINCT (((- (vt0.c0)))<=(CAST(vt1.lid AS REAL))), SUM(CASE WHEN vt0.c0 THEN vt1.lid END) FILTER(WHERE (((((vt0.c0))<=((vt1.lid)))) BETWEEN (((vt0.c0) NOT NULL)) AND (CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.lid END))) OVER ( ORDER BY (~ ((((vt1.c1))==((vt1.lid))))) ASC  NULLS LAST), ((vt1.c1 IN ()) IN ()), DENSE_RANK() OVER ( ORDER BY ((((IFNULL(vt1.c1, vt1.lid))OR(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))OR(((vt1.c0) IS FALSE))) DESC  NULLS FIRST), ((((((((vt0.c0)AND(0xffb8bab)))OR(CAST(vt1.c1 AS TEXT))))OR(((vt1.c1)|(vt1.c0)))))AND(((vt1.c1) IS FALSE))) FROM vt1;SELECT ALL TOTAL(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.lid))) OVER (), SQLITE_VERSION(), ((((vt1.lid, vt1.c0, vt1.lid)) BETWEEN ((vt1.c1, vt1.lid, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))) IN ((NOT (vt1.c1)))) FROM vt1 WHERE ((NOT (CASE WHEN NULL THEN x'' ELSE '2069494226' END))) ORDER BY CAST(HEX(vt1.c0) AS BLOB)  NULLS LAST;SELECT ALL MIN(UPPER(vt1.c1), ((vt1.lid)AND(vt1.c1)), CAST(vt1.c0 AS REAL), ((vt1.c0)=(vt1.c1))) FROM vt0, vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN vt1.lid THEN (vt1.lid IN ()) END ASC; -- 0ms;
SELECT DISTINCT ((((vt1.c0)||(vt1.lid))) NOT BETWEEN (LTRIM(vt0.c0)) AND ((x'' IN ()))), CASE AVG(vt1.c1)  WHEN (- (vt1.c0)) THEN ((vt1.lid) BETWEEN (x'') AND (vt1.c0)) END, json_array(vt1.c1 COLLATE BINARY, LIKELY(vt1.lid)) FROM vt1 WHERE ((('-1680138653') NOT NULL));SELECT DISTINCT CAST((vt1.c1 IN ()) AS REAL), ((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, (((((((((((vt1.lid)OR(x'')))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1))))<=((((vt0.c0) ISNULL)))) FROM vt0 LIMIT 207278300 OFFSET 2088959229;SELECT ALL ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))>(vt1.c0 COLLATE BINARY)), CAST(((vt1.c1) ISNULL) AS TEXT), COUNT(0.8804180020576516) OVER () FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (((MIN(x'')))>((((vt1.c1) ISNULL)))) FROM vt0, vt1 WHERE (LOWER(((NULL)&('')))); -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt1, vt0 WHERE ('93639214') LIMIT 631488227 OFFSET -1188254235; -- 0ms;
SELECT DISTINCT COALESCE(((vt1.c0) NOTNULL), 0.6072981637707244 COLLATE NOCASE) FROM vt1, vt0 WHERE ((((NULL)) BETWEEN ((0.8276698297644035)) AND ((((('pfX}g'))<=(('RAwX>WP'))))))); -- 0ms;
SELECT DISTINCT (+ (vt1.c1)) COLLATE BINARY COLLATE RTRIM FROM vt1; -- 2ms;
SELECT DISTINCT CASE ((vt1.c1) NOT BETWEEN ('') AND (vt1.lid))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)) THEN ((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)) WHEN NULLIF(vt1.c1, vt1.c0) THEN ((vt0.c0)/('b_mt%僡boj')) WHEN ((vt1.lid)OR(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END FROM vt0 WHERE (CASE (('qko&')>>(0.5132858713519101))  WHEN (NOT (NULL)) THEN (('699896605') ISNULL) WHEN '-860168370' COLLATE RTRIM THEN (NULL IN ('0.5888851498094538', NULL)) WHEN CAST(NULL AS TEXT) THEN ((x'e295') ISNULL) ELSE CASE NULL  WHEN x'1558' THEN NULL END END);SELECT DISTINCT ((GROUP_CONCAT(vt1.c1))<=((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)) AS NUMERIC) FROM vt0 GROUP BY (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)) IN ());SELECT MAX(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) FROM vt1; -- 0ms;
SELECT ALL (+ (0x4123617)) COLLATE BINARY, CUME_DIST() OVER (), CASE WHEN ((vt1.c0) IS TRUE) THEN CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END END FROM vt1, vt0 LIMIT -1213558544; -- 1ms;
SELECT ALL AVG(CAST(vt1.c1 AS BLOB)) OVER (), ((((vt1.lid)OR(vt1.c1)))AND(vt0.c0)) COLLATE NOCASE, ((CAST(vt1.c1 AS INTEGER)) IS TRUE) FROM vt0;SELECT ALL ((((vt1.c1)||(vt1.c1)))|(CAST(vt1.c0 AS REAL))), (((('0.013704162372592865')<(vt1.lid)))>=((vt1.c0 IN ()))), (((vt1.c0)<>(vt1.lid)) IN (((vt1.c0) IS FALSE))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT 'uY~Nh-' FROM vt0 ORDER BY (NOT (CAST(vt1.c0 AS REAL))) ASC, (~ (vt0.c0 COLLATE BINARY)) LIMIT -858974106 OFFSET -165611418;SELECT DISTINCT CAST(-1731872024 AS REAL) FROM vt1, vt0 WHERE ((NOT (COALESCE(x'7db1', x'')))) GROUP BY (NOT (((vt0.c0)>(vt1.c1)))), (((vt1.lid)||(vt1.lid)) IN ()), (((vt1.c1)) BETWEEN ((vt1.c1 COLLATE BINARY)) AND ((((vt1.lid) IS FALSE)))) HAVING CAST(vt1.lid AS NUMERIC); -- 0ms;
SELECT DISTINCT ((vt0.c0)>>(TRIM(vt1.lid, vt1.c1))) FROM vt0, vt1 WHERE (((('''q)')) NOT BETWEEN (((((x''))<=((0.04294535317968706))))) AND ((((NULL)==('')))))) UNION SELECT DISTINCT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((vt1.c1 IN ()))) FROM vt1, vt0 WHERE (CASE CAST(NULL AS TEXT)  WHEN NULL THEN (((x''))=((NULL))) ELSE ('' IN (0.5956041292045995)) END) ORDER BY ((((((((((vt0.c0)-(0x53d57f92)))OR(CAST(vt1.c1 AS INTEGER))))AND(CAST(0.24676382175003186 AS BLOB))))OR(NULL)))OR((vt1.c1 IN ()))) ASC;SELECT DISTINCT ((((vt1.c0)>=(NULL)))/(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt1, vt0; -- 0ms;
SELECT ALL CASE WHEN (~ (vt0.c0)) THEN 0.44283361023111734 ELSE (~ (vt1.c0)) END FROM vt0, vt1 WHERE ((((('333253277') BETWEEN ('') AND ('bK'))) BETWEEN ((('6VD/WhM惎')LIKE(NULL))) AND (((0.03596962377711699) BETWEEN (x'') AND ('758345843'))))) GROUP BY (((((vt0.c0)<(vt1.c0))))<(((1096750016 IN ())))), (((((vt1.c1 IN ()))OR(CAST(vt0.c0 AS REAL))))AND(HEX(vt0.c0))), ((json_valid(vt1.c1))>(ROUND(vt1.c0, vt1.c0))), ((((CASE vt1.c1  WHEN vt1.lid THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN 0.44283361023111734 THEN vt1.c1 END)AND(((((((((x'')AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)))OR(vt0.c0)))))OR(CAST(vt1.c1 AS BLOB))), RTRIM(((vt1.c0)GLOB(vt0.c0))); -- 1ms;
SELECT DISTINCT '40737511' FROM vt0, vt1 LIMIT 729690254 OFFSET -1899775365; -- 0ms;
SELECT DISTINCT ((((vt1.c1 COLLATE NOCASE)AND(vt1.c1)))OR(x'43a7')) FROM vt0 GROUP BY ((CASE WHEN vt1.c1 THEN vt1.c1 END) IS FALSE);SELECT (vt1.c1 COLLATE NOCASE IN (vt1.lid COLLATE RTRIM, 0.10014718299451542)), QUOTE((vt1.lid IN (x'', vt1.lid))), (((vt1.c1)<<(vt1.c1)) IN (((vt1.c1) NOTNULL))) FROM vt0, vt1 WHERE ((NULL IN ())); -- 0ms;
SELECT (- (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END)) FROM vt1; -- 0ms;
SELECT ALL COUNT(*) OVER (), (- (0X5fd19e3e)), COUNT(((((vt0.c0)OR(vt1.c1)))OR(vt0.c0))) OVER (), (((((vt1.c1))>((vt1.c1))))||((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1))))), json_array((vt1.lid IN (vt0.c0)), (((vt1.c0)) NOT BETWEEN ((x'9312')) AND ((vt1.lid))), ((vt1.c1) ISNULL), vt1.lid) FROM vt1, vt0 WHERE (CAST((('814020045')||(-1988453081)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((vt1.c0)%(vt1.lid))) NOT BETWEEN (((vt1.lid) NOT NULL)) AND (COUNT(*))), ((((((((((((vt1.c1)AND(vt1.c1)))OR('u锵')))OR(vt1.lid)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)), (~ (COUNT(*))) FROM vt0 WHERE (((((x'101d') ISNULL)) NOT BETWEEN ('') AND (((2046487830) NOT BETWEEN (x'') AND (NULL))))) ORDER BY (0.19875800431080215 IN ())  NULLS LAST;SELECT ALL ((((SUBSTR(vt0.c0, vt1.lid))OR(CAST(vt1.lid AS INTEGER))))OR((NOT (vt1.c0)))) FROM vt0;SELECT ((((vt1.lid) NOTNULL)) IS FALSE) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((vt1.c1)-(vt1.lid)) AS BLOB), (((vt1.c0, vt1.c1, vt1.lid)) NOT BETWEEN ((vt1.c1, CAST(vt0.c0 AS TEXT), (vt1.lid IN ()))) AND ((((vt1.c0) NOTNULL), ABS(DISTINCT 333253277), vt1.lid COLLATE BINARY))), (((NULL IN ())) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.4198739094032755)) AND (vt1.c0)) FROM vt1 WHERE ((- (((((NULL)OR('-451150031')))OR(x''))))) GROUP BY CAST(((vt1.c0) NOT BETWEEN (0.5888851498094538) AND (vt1.c1)) AS INTEGER);SELECT (((((~ (vt1.c1)))OR(((vt1.c1)||(vt1.lid)))))AND(vt1.c1)), CAST(TOTAL(vt0.c0) AS NUMERIC), FIRST_VALUE((((vt1.c1)) NOT BETWEEN ((CAST('~F 唾(Z' AS TEXT))) AND (((vt1.c1 IN ()))))) OVER () FROM vt1, vt0 LIMIT -346381951; -- 0ms;
SELECT DISTINCT MIN(((((((((vt1.c0)AND(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c1))) FROM vt0, vt1; -- 0ms;
SELECT GROUP_CONCAT(CASE WHEN x'' THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END) OVER () FROM vt1;SELECT ALL CASE WHEN ((vt1.c1)IS NOT(vt1.lid)) THEN ((vt1.lid)==(vt0.c0)) WHEN ((vt1.c0)<=(vt0.c0)) THEN (((vt1.lid))=(('1330478010'))) WHEN (+ (vt0.c0)) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 COLLATE BINARY THEN TYPEOF(vt1.c1) WHEN (((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c1))) THEN (0.4450271071905454 IN ()) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) FROM vt1 WHERE ((((('/[&Jv') BETWEEN (x'') AND ('-1731872024'))) ISNULL)) ORDER BY (((vt0.c0)) NOT BETWEEN (((('ꑬ壆P') IS FALSE))) AND (('729690254'))) ASC  NULLS FIRST LIMIT 194038489;SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.lid END)==(((vt1.c0)GLOB(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT 0.7710784474956573 FROM vt1 WHERE (NULL) ORDER BY ((((((vt0.c0)OR(vt1.c0)))AND(NULL))) NOT BETWEEN ((~ (0.9090247396662048))) AND (CASE WHEN '' THEN vt1.lid WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid END));SELECT DISTINCT (((vt1.c1)<<(vt0.c0)) IN (vt0.c0)), CAST(COUNT(vt1.lid) AS BLOB), ((vt1.lid)>=(vt1.c0)) COLLATE BINARY COLLATE NOCASE FROM vt1, vt0 WHERE (((NULL)==(((((((((((((0.568729763713375)OR(x'')))OR('-552167029')))OR(NULL)))OR('1825973320')))AND('93639214')))OR(x'546c'))))) GROUP BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN x'' END)) AND ((-1.988453081E9))) HAVING (((((vt0.c0) IS TRUE), ((vt1.c0)>=(vt0.c0)), ((vt1.lid)>=(vt1.c1)), ((vt1.lid) NOTNULL), (vt0.c0 IN ())))>((MAX(vt1.c0), ((vt1.c0) BETWEEN (NULL) AND (vt1.c1)), ((vt0.c0) IS FALSE), vt0.c0, ((vt1.c0) NOTNULL)))); -- 0ms;
SELECT CAST(vt1.c1 AS REAL) FROM vt0;SELECT AVG((vt1.lid IN ())) OVER ( ORDER BY ((NULLIF(DISTINCT vt0.c0, vt1.lid))!=((((vt1.c0, vt1.c1, vt1.c1))>=((vt1.c1, vt0.c0, vt0.c0))))) ASC, (((((((((- (x'')))AND((((('-726440486')AND(vt1.lid)))AND(vt0.c0)))))OR(((((((((vt1.c0)AND(vt1.lid)))OR(NULL)))AND(vt1.c1)))AND(vt0.c0)))))OR(((vt1.c1)>=(vt1.c0)))))AND((vt1.c1 IN ()))) DESC  NULLS FIRST, vt0.c0  NULLS LAST) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND(vt1.lid)) FROM vt1, vt0 WHERE (((CASE 729690254  WHEN 0.7579018277623786 THEN 'd' WHEN NULL THEN 0.6403856211865268 WHEN x'dc89ddf7' THEN '-1000026947' ELSE '-1440705535' END) NOT BETWEEN (-1188254235 COLLATE NOCASE) AND (CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE BINARY) IS FALSE) FROM vt1 WHERE (((((NOT (0.7200680825655721))))>=((((0xffffffffa0693133)%(NULL)))))); -- 0ms;
SELECT ALL (((vt1.lid)) BETWEEN (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((''))))) AND ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) FROM vt1 WHERE (CASE CASE WHEN '2111835387' THEN '141334992' END  WHEN (((x'', x'', 0.42168638656375423)) NOT BETWEEN (('', 0.47809393739125405, 0.6742079872855115)) AND (('-2031398162', '40737511', x'8be4'))) THEN (((('')OR(NULL)))OR(NULL)) WHEN ((x'') NOT BETWEEN (NULL) AND (NULL)) THEN (~ (x'2a9f')) WHEN ((x'')>(x'd4e3')) THEN ((((((((NULL)OR('')))OR(x'868c')))OR(x'')))OR(NULL)) ELSE ((x'')<=(x'')) END); -- 0ms;
SELECT DISTINCT 'd233]MT' FROM vt0 WHERE (((CAST(x'' AS BLOB))IS(CASE 0.7789919136864298  WHEN '814020045' THEN NULL ELSE NULL END))); -- 1ms;
SELECT ALL NTH_VALUE((vt0.c0 IN ()), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) OVER (), (((vt1.c1)<(vt0.c0)) IN ()), load_extension((+ (vt0.c0)), LOWER(vt0.c0)) FROM vt0 WHERE (CASE ((((((((NULL)OR(NULL)))OR(0.8217299185513759)))AND(x'2865')))OR(NULL))  WHEN '0.6403856211865268' THEN ((0.6863786249643977)==(0.08948460681755588)) ELSE (- (x'')) END) ORDER BY CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN x'80440dcb' ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END END ASC  NULLS LAST, ((('1330478010') BETWEEN (vt0.c0) AND (0.44255253766206604)) IN ()) DESC, CASE WHEN CASE WHEN vt1.lid THEN 0.22499152907122755 END THEN CHANGES() ELSE ((((vt1.c1)AND(vt0.c0)))OR(vt1.c0)) END DESC;SELECT NULL FROM vt0 GROUP BY CASE CAST(vt1.c0 AS BLOB)  WHEN (((vt1.lid)) BETWEEN (('')) AND ((NULL))) THEN ((vt0.c0)/(vt1.c1)) WHEN 1.832178632E9 THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS TEXT) THEN vt1.c0 COLLATE NOCASE ELSE ((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0)) END;SELECT ALL (((((vt1.lid)OR(vt1.c0)))AND(vt0.c0)) IN ()), (((NOT (vt1.lid))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)>(vt0.c0)))), '''bb0卣 KxU' FROM vt1;SELECT ALL (~ (vt0.c0)) COLLATE NOCASE FROM vt1, vt0 WHERE (CASE (- (1e500))  WHEN CASE WHEN 0.39316004127876303 THEN NULL END THEN TYPEOF(NULL) ELSE (('0.6362083362720724')AND(' r]5')) END); -- 0ms;
SELECT DISTINCT AVG((vt1.lid IN (vt1.lid, vt1.lid))) OVER () FROM vt0 WHERE (CAST(x'' COLLATE RTRIM AS NUMERIC));SELECT DISTINCT vt0.c0 FROM vt1 WHERE ((((NULL IN ()))>(CAST('-1496201055' AS NUMERIC))));SELECT DISTINCT CASE WHEN ((vt1.c1)/(vt1.c0)) THEN LIKELIHOOD(DISTINCT vt0.c0, 0.5930035243865779) END, vt0.c0, ((((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))>>(NULL)) FROM vt1, vt0; -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS NUMERIC)) BETWEEN (((vt1.c0)>=(vt1.lid))) AND (((((vt1.lid)OR(vt1.c0)))AND(vt1.lid)))) FROM vt1 WHERE ((+ ((('') NOT NULL)))); -- 0ms;
SELECT COALESCE(DISTINCT 'YJ髧}', ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.lid)), ((vt1.c1)+(vt1.c0)), ((((((((vt1.c1)AND(vt0.c0)))AND('Hl!z')))OR(vt1.c0)))OR(vt1.lid))) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT ((((vt1.c0 COLLATE BINARY)OR(((vt1.lid)>(vt0.c0)))))AND(SQLITE_COMPILEOPTION_USED(vt1.lid))) FROM vt1 WHERE (((json_array(-2.043549011E9, 0Xffffffffa6e10d93))<=(((' ?b插')OR(NULL)))));SELECT ALL (((vt1.lid)) NOT BETWEEN ((((((vt0.c0)OR(vt1.lid)))OR('')))) AND ((TOTAL(vt0.c0)))), '0.7186592963419434', (((((vt1.c1))<((vt1.c0)))) BETWEEN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.lid)))OR('1252137208')))AND(vt0.c0))) AND ((((vt1.c1, vt1.c0, 0.35519884556375714)) NOT BETWEEN ((vt1.c1, vt1.c0, x'')) AND ((vt0.c0, vt1.c1, vt1.c1))))) FROM vt1, vt0; -- 0ms;
SELECT COUNT(*), (+ (('450964310' IN ()))), ((((((((CAST(vt1.c0 AS BLOB))OR(((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c1)))))OR(load_extension(vt1.c1, vt0.c0))))OR(CAST(vt1.lid AS BLOB))))AND((vt0.c0 IN ()))) FROM vt0, vt1 WHERE ((((x'643f') IS FALSE) IN (MIN(0.32117951199996275, x'')))); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT (NOT (vt0.c0))) FROM vt0 WHERE ('1e500'); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.lid THEN vt1.lid ELSE vt1.c1 END)||((~ (vt1.lid)))), CASE WHEN ((((vt1.lid)AND(vt0.c0)))AND(vt1.lid)) THEN ((vt1.lid) IS FALSE) END, x'' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.lid) NOTNULL))>((- (vt0.c0)))), STRFTIME(vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE COLLATE NOCASE, ((((AVG(vt1.c0))OR('p뀸\' COLLATE NOCASE)))AND(COUNT(vt1.c1))) FROM vt1, vt0 WHERE (CASE ((0.5997916571546068) ISNULL)  WHEN TRIM('420367619', NULL) THEN ((-552167029) IS TRUE) ELSE (((x''))=((0xffffffff9c3989d9))) END); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.lid) ISNULL) THEN vt0.c0 END, 0.507146585937692, CAST(COALESCE(vt1.c0, vt1.c1) AS REAL), (((((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0))))=((AVG(vt0.c0)))), CAST(0.08992050690036935 AS BLOB), ((((((vt1.c0) BETWEEN (x'619f') AND (vt1.lid)))AND(((vt1.c1)%(vt1.c1)))))AND(vt0.c0 COLLATE BINARY)), RANK() OVER ( ROWS vt1.c1 PRECEDING EXCLUDE GROUP) FROM vt1, vt0; -- 0ms;
SELECT ALL (((((')(', vt1.c0, vt1.c0))=((vt0.c0, vt1.c0, vt1.c1))))<(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.lid)))), CAST(vt1.lid AS BLOB) COLLATE RTRIM, HEX(DISTINCT ((vt1.lid)*(vt1.lid))) FROM vt0, vt1 WHERE (((((0.7386809458207805)&('268143531'))) NOT NULL)); -- 0ms;
SELECT ALL SUM(((((vt1.lid)OR('-1836293427')))OR(vt1.c1))) OVER (), MAX((('-1731872024')<=(vt0.c0))), LOWER(((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c0))) FROM vt1 WHERE (CAST((- ('333253277')) AS TEXT));SELECT DISTINCT (~ (MIN(0xffffffff826e5546))) FROM vt0 WHERE ((((('dnows~lv뚁') BETWEEN ('-1163326147') AND (x''))) NOTNULL)); -- 0ms;
SELECT DISTINCT vt0.c0, CAST(NULL AS INTEGER), NTH_VALUE((((((vt1.c0)OR(vt1.c0)))OR(vt1.lid)) IN ()), CAST(vt1.lid COLLATE NOCASE AS NUMERIC)) OVER () FROM vt1, vt0 WHERE (CASE WHEN '' THEN 0.8108625771050293 ELSE 0.1430492306635548 END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0)||(vt0.c0))) OVER ( PARTITION BY CASE ((vt1.c1)-(vt1.lid))  WHEN (((vt0.c0))>((vt1.lid))) THEN (((vt0.c0))<((vt1.c0))) ELSE ((vt0.c0)<=(vt1.c1)) END, (((((('2111835387')OR(vt1.lid)))OR(vt1.c0)))IS NOT(((vt1.lid) NOTNULL))) ORDER BY (((vt1.c0))==((vt0.c0))) COLLATE BINARY ASC  NULLS FIRST) FROM vt1 WHERE (((CAST(x'' AS REAL))>>((1038452065 IN (x'd5513ec0')))));SELECT ALL NULL FROM vt1 LIMIT -1575134014; -- 0ms;
SELECT DISTINCT (((((~ (vt1.c1)))OR(vt1.c0)))OR(vt1.c0)), '1663401277', CASE MIN(vt1.c1)  WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.lid AS REAL) END FROM vt0 WHERE (CASE WHEN CASE WHEN x'' THEN '-1975074303' WHEN '-1311336839' THEN NULL WHEN -1.311336839E9 THEN 0.9766590646037214 END THEN (0Xffffffffa3dd5363 IN (0.7937221180416486, NULL)) WHEN LTRIM(NULL) THEN CASE WHEN -1.270897288E9 THEN -1603718861 ELSE x'' END WHEN (('1414114861')>=(x'')) THEN '/C8' END);SELECT ALL (CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 END IN ((vt1.c1 IN ()), CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((((((((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.lid)))AND(vt1.c0)))), CAST(((vt1.lid) BETWEEN (vt1.lid) AND ('-361136738')) AS REAL), CAST(189570111 AS REAL) FROM vt0 ORDER BY ((((vt1.c1) NOTNULL)) NOT BETWEEN (((((((((vt1.c1)OR(vt0.c0)))AND(-1942043662)))AND(vt1.c0)))AND(vt1.lid))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((vt1.lid)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt0.c0)) END;SELECT DISTINCT ((0.7286934314175987)|(CAST(vt0.c0 AS TEXT))), CASE WHEN ((((((((vt1.lid)AND(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN 'BD5hG*>渷i' WHEN vt1.c1 THEN '195650514' ELSE vt1.c1 END ELSE CASE WHEN vt0.c0 THEN vt1.lid ELSE vt1.c1 END END, (CAST(vt1.c0 AS NUMERIC) IN ()) FROM vt1, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT '-726440486' FROM vt0, vt1 WHERE (((((0.8602199027655982) IS FALSE))%(NULL))) ORDER BY CAST(vt1.c0 AS REAL) COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT vt1.lid FROM vt1 WHERE ((- (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN 0.5829584160423811 THEN NULL ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)) END, vt1.c0, CASE WHEN ((vt1.c0) IS TRUE) THEN (((x'', vt1.c1, vt1.c0))<=(('-260153472', vt1.lid, vt1.c1))) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT AVG(json_patch(vt0.c0, 'RWi')) OVER ( PARTITION BY vt1.c0, UPPER(x'73e2') COLLATE RTRIM), (((- (vt0.c0)))-(vt1.c1 COLLATE NOCASE)), ((((vt0.c0)+(vt0.c0)))-((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.lid))))) FROM vt1 WHERE (((((((NULL)/(NULL)))AND((((('1005592962')AND(0.48563475107762977)))AND(NULL)))))AND(CAST(NULL AS TEXT))));SELECT DISTINCT CASE WHEN GROUP_CONCAT(vt1.lid) THEN ((vt1.c0) NOT NULL) WHEN ((vt1.lid)AND(vt1.c0)) THEN (~ (vt0.c0)) WHEN (- (vt1.lid)) THEN vt1.c0 WHEN COUNT(*) THEN CAST(vt1.lid AS INTEGER) WHEN COUNT(*) THEN CAST(vt0.c0 AS TEXT) END, (((((('턑x낸f7 L~') NOT BETWEEN (vt1.c0) AND (vt1.lid)))AND(json_array(vt0.c0, vt1.c0))))AND(COALESCE(DISTINCT vt1.c1, vt0.c0, vt0.c0, vt1.c0))), ((((+ (vt1.lid))))!=((CAST(vt1.lid AS REAL)))), ABS(CASE vt0.c0  WHEN vt0.c0 THEN 0.68971485627138 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 ELSE vt0.c0 END), ((((CAST(vt1.c1 AS REAL))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0) ISNULL))) FROM vt1 WHERE ((+ (x'3eaa')));SELECT DISTINCT (TOTAL(vt1.c0) IN ()) FROM vt0 ORDER BY (- (((((((((vt1.c0)OR(vt1.c1)))AND(0.44255253766206604)))OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST;SELECT DISTINCT UPPER(DISTINCT vt1.lid) COLLATE BINARY, (((vt1.c0, vt1.c0, vt1.c1, vt1.lid, vt1.lid)) BETWEEN ((NULLIF(vt1.c0, vt1.c1), COUNT(vt0.c0), vt1.lid COLLATE NOCASE, json_array_length(vt1.c0, vt0.c0), vt1.c0 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)), ((vt1.lid)&(0.2601137975715383)), ((vt1.c0)=(vt1.c0)), ((vt1.c1)GLOB(vt0.c0)), vt1.c0))), ('' IN ()) FROM vt0;SELECT DISTINCT FIRST_VALUE(CAST(x'' AS REAL)) OVER ( GROUPS (((NOT (vt0.c0)))-(vt1.c0)) PRECEDING) FROM vt1 WHERE ((((0.576995525390313, '0.576995525390313', '0.9090247396662048')) BETWEEN ((x'17213cb4' COLLATE RTRIM, (+ (x'')), ((((0.22510451871889392)OR(x'')))OR(NULL)))) AND (((NOT (x'')), CAST(NULL AS NUMERIC), ((((0.7271096720889466)AND(x'1421')))AND(0.3289587558036853)))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)||(vt1.lid)))/(vt1.c0)), ((((json_quote(vt1.c1))AND(vt1.c0)))AND(((vt1.c1) IS FALSE))), ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.lid ELSE vt1.c0 END)OR(CASE vt0.c0  WHEN vt1.c1 THEN '0.6362083362720724' WHEN vt1.c1 THEN vt1.lid WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt1.lid AS INTEGER))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CHAR(((((vt0.c0)OR(vt1.lid)))AND(vt1.c1)), SUM(vt1.lid), '-28549139' COLLATE BINARY), (((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)), (((vt1.lid, vt0.c0, vt0.c0)) BETWEEN ((vt1.lid, vt1.c0, vt1.c1)) AND ((0.8276698297644035, NULL, vt1.lid)))))>(((('-1242205771')*(0.9006588117716197)), 1647578722, ((vt1.c0) NOT NULL)))), LEAD(LOWER(DISTINCT CASE -1.838950445E9  WHEN vt1.c1 THEN vt1.c0 END), ((((vt1.c0)<=(vt0.c0)))*(((((vt1.c0)AND(vt1.lid)))OR(vt1.lid)))), CAST(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC)) OVER () FROM vt0, vt1 WHERE (CAST(CAST('-1e500' AS TEXT) AS TEXT)); -- 0ms;
SELECT ALL (NOT (((vt0.c0)OR(vt0.c0)))), (((((0.47461996724443, vt0.c0, vt1.lid)) BETWEEN ((vt1.lid, vt1.c0, vt1.lid)) AND ((vt1.lid, vt0.c0, vt1.c0))))<(vt0.c0 COLLATE NOCASE)), DENSE_RANK() OVER () FROM vt1 WHERE ((((NULL IN ()))>>(((x'')||('')))));SELECT DISTINCT (((('') IS FALSE))IS(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) FROM vt1, vt0 WHERE (CAST('-695812508' AS INTEGER) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT vt1.lid FROM vt0;SELECT DISTINCT 1899571508 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST((+ (vt0.c0)) AS INTEGER) FROM vt0, vt1 ORDER BY ((CAST(vt1.lid AS TEXT)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) DESC; -- 0ms;
SELECT ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE RTRIM, NULLIF(DISTINCT (((vt0.c0, vt1.c0, vt1.lid)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))), ((vt1.c1)IS NOT('B~4X/D,'))), ((((NULLIF(DISTINCT vt1.lid, vt0.c0))OR((((vt1.lid))>=((vt1.lid))))))AND(vt0.c0)) FROM vt0, vt1 WHERE ((- (((x'4b7b')>=('-d\rJdbh.f'))))) UNION ALL SELECT DISTINCT ((- (vt1.lid)) IN ()), ((((vt0.c0)>=(vt1.lid)))<>(((vt0.c0) BETWEEN (0.35947185965893) AND (vt1.c1)))), 0x48bdab8 FROM vt1, vt0 WHERE (((- ('1252137208')) IN ((((('-630566687')OR(x'1a81')))OR('4'))))) LIMIT 2118778210 OFFSET 2111835387; -- 0ms;
SELECT DISTINCT ((((vt0.c0)-(vt0.c0))) IS FALSE) FROM vt1;SELECT DISTINCT (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END))) FROM vt1;SELECT (- ((+ (x'')))), CASE WHEN CASE WHEN vt1.c1 THEN vt1.lid END THEN CAST(vt1.c0 AS INTEGER) END, (((vt1.c0, vt0.c0, vt1.c1, vt0.c0, vt1.c0)) BETWEEN ((CAST(vt0.c0 AS REAL), vt1.c1 COLLATE BINARY, (~ (vt0.c0)), '0.6403856211865268', CASE WHEN vt1.c1 THEN x'3247' ELSE NULL END)) AND ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (vt0.c0 IN (vt1.lid)), AVG(NULL), ((0.3485384323441211)AND(vt1.lid)), GROUP_CONCAT(vt0.c0)))) FROM vt0, vt1 ORDER BY (NOT (x'')); -- 0ms;
SELECT DISTINCT CAST(vt1.lid AS BLOB) COLLATE BINARY FROM vt0 WHERE (((((0Xffffffffaefd9b06)IS(NULL))) BETWEEN (((((x'')OR('x_5(u')))OR(x''))) AND (((((x'')AND('0.5888851498094538')))AND(0.5013467151308004)))));SELECT ((vt1.lid)GLOB(vt1.lid)) COLLATE BINARY, COUNT(CAST(NULL AS TEXT)), (NOT (CASE WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 END)) FROM vt0 WHERE (((CAST(x'' AS BLOB))<<((x'5f51' IN ('-729081243')))));SELECT CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM, DENSE_RANK() OVER (), CASE (- (vt0.c0))  WHEN ((vt1.c1) IS FALSE) THEN (vt1.c0 IN ()) ELSE ((vt1.c1)+(vt0.c0)) END FROM vt1, vt0 WHERE (((('')) NOT BETWEEN ((MIN('', '', '-1680138653', 0.21257848478023345))) AND ((CASE NULL  WHEN x'' THEN '-22588926' WHEN x'' THEN x'' WHEN NULL THEN '2111835387' ELSE 3.33253277E8 END)))); -- 0ms;
SELECT DISTINCT NULL FROM vt1 LIMIT -1828658646 OFFSET -137378382; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(NULL), ROW_NUMBER() OVER (), ((((vt1.c1) IS FALSE))%(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('k{axh{')))) FROM vt1, vt0 LIMIT 207278300; -- 0ms;
SELECT DISTINCT JULIANDAY(CAST(vt0.c0 AS INTEGER), CAST(vt1.c0 AS NUMERIC), ((152555781) NOT BETWEEN (vt0.c0) AND (vt1.lid))) FROM vt1;SELECT ALL CAST(((vt1.c0)-(vt1.c1)) AS REAL) FROM vt0, vt1 WHERE (CAST((((NULL, NULL, 0.23485676705885206)) BETWEEN ((0.1396067873725576, x'f6f9', x'')) AND ((NULL, NULL, '-965420895'))) AS TEXT)); -- 0ms;
SELECT DISTINCT vt1.lid, ((((vt1.c0)IS(vt1.lid))) NOT BETWEEN ((0.13609612804979954 IN ())) AND ((+ (-1.459283344E9)))), ((((((vt0.c0))>((vt1.c0)))))<>((vt1.c1 COLLATE RTRIM))) FROM vt0 GROUP BY ((((((((CAST(vt1.c0 AS TEXT))AND(CASE vt1.lid  WHEN vt1.c1 THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END)))OR(vt1.c1 COLLATE NOCASE)))AND((vt1.lid IN (vt1.lid))));SELECT DISTINCT '0.6095634898310336' FROM vt0, vt1 WHERE ((LTRIM('1618718893', x'') IN ())) UNION ALL SELECT DISTINCT (((vt1.c0 IN ()))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)) FROM vt1, vt0 GROUP BY (((vt1.c1)/(vt1.c0)) IN ()); -- 1ms;
SELECT ((((vt0.c0) ISNULL))<=(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT LIKELY(DISTINCT ((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c1))) FROM vt0, vt1 GROUP BY CASE (~ (vt0.c0))  WHEN (vt1.c0 IN ()) THEN CASE vt1.c0  WHEN vt1.c1 THEN '-1836293427' ELSE vt0.c0 END WHEN (((vt1.lid, vt1.lid, '-1270933023')) BETWEEN ((vt1.lid, vt0.c0, vt1.c0)) AND ((vt0.c0, 0.9133177649191135, vt1.lid))) THEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN (('>hAR')AND(vt1.c0)) THEN CAST(vt1.c1 AS INTEGER) ELSE (~ (vt1.c0)) END, CAST((~ (vt0.c0)) AS TEXT), ((x'1818')LIKE((vt1.lid IN ()))); -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY)LIKE((NOT (vt1.lid)))), GROUP_CONCAT(((vt1.c1)<=(vt1.c0))) OVER (), ((NULL)==(vt0.c0)) COLLATE NOCASE, CAST(((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.lid)) AS NUMERIC), ROW_NUMBER() OVER () FROM vt1;SELECT '8bW+Bm4' FROM vt0, vt1 WHERE (CASE CASE x''  WHEN '783099389' THEN NULL END  WHEN '1740399354' THEN ((0.4259163737842)OR('tO皹,O[')) WHEN (- ('e+W~h)t&D')) THEN (('9~b.Y᳊[')||(0.1213091704705841)) WHEN ((0.05071879443545946)>>(x'7c13')) THEN 0.8844562076923427 WHEN HEX('0.6768925919196653') THEN (NULL IN ()) WHEN (((''))=((-1840169240))) THEN (x'684f' IN ()) ELSE NULL END) GROUP BY (((vt1.c1))<((vt0.c0))) COLLATE BINARY, CASE WHEN CAST(vt1.c1 AS REAL) THEN ((vt1.c1)IS(vt0.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END END, 1197931987, COALESCE(((((((((vt1.c1)OR(vt1.lid)))OR(vt0.c0)))OR(vt1.c1)))OR(vt1.lid)), ((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt1.lid)))OR(vt1.c0)), ((vt1.lid)AND(vt1.lid)), ((vt1.c0)||(vt1.lid))), x'', (NOT ((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))), ((vt1.c1 COLLATE BINARY)/((vt1.lid IN ()))) HAVING (((vt1.lid IN ()))-(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1))));SELECT DISTINCT vt1.lid FROM vt1 WHERE (0xffffffffd68e0b1b); -- 0ms;
SELECT DISTINCT CAST((((vt1.c0))<>((vt0.c0))) AS TEXT), vt1.c1 COLLATE NOCASE, COUNT(*) FROM vt1;SELECT ((vt1.c1)GLOB(vt1.lid)), CAST(vt1.c0 AS REAL) COLLATE NOCASE, ((((CASE vt1.lid  WHEN vt1.c1 THEN vt1.lid ELSE vt1.lid END)AND(vt1.lid COLLATE BINARY)))OR(CASE WHEN vt1.c1 THEN vt1.lid END)) FROM vt0, vt1 WHERE ((('vE' IN ()) IN ())) ORDER BY ((((((x'') NOTNULL))OR(vt1.c1)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))))  NULLS LAST, CASE (((vt1.lid))>=((vt1.lid)))  WHEN ((vt1.c0)IS(vt0.c0)) THEN (- (vt1.c0)) WHEN (('0.3485384323441211')==(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((((vt1.c0)AND(vt1.c0)))AND(0X5fd19e3e)) THEN ((vt0.c0) ISNULL) ELSE '1095240378' END ASC  NULLS FIRST; -- 1ms;
SELECT (((((NULL IN ()))AND(((vt1.lid) IS FALSE))))OR(SQLITE_VERSION())), MIN(CASE vt1.c0  WHEN vt1.c0 THEN vt1.lid ELSE vt0.c0 END), CAST((('93639214') NOT NULL) AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT NULL, ((COUNT(*))<>(NULL)), COUNT(*) OVER () FROM vt1, vt0 WHERE (JULIANDAY(CAST(x'23ad' AS INTEGER), ((NULL)LIKE(NULL)), (('YcEfbꤡ~') NOTNULL), (((x'')) NOT BETWEEN ((0x71a3b0a0)) AND ((NULL))), ((x'') IS FALSE), -1910644479 COLLATE RTRIM, x'ffc1' COLLATE BINARY)) LIMIT -1092397170; -- 0ms;
SELECT ALL ((CAST(0.5940714535920901 AS NUMERIC)) IS TRUE) FROM vt1 WHERE (0.6497805127888839); -- 0ms;
SELECT TOTAL(((vt1.c0) BETWEEN (x'') AND (vt0.c0))) COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT DISTINCT 0Xffffffffb6c23287 FROM vt0, vt1; -- 0ms;
SELECT ((((vt1.c0))<>(('%f'))) IN ()) FROM vt1 GROUP BY CASE WHEN ((vt1.c0)%(vt1.c1)) THEN (vt1.c1 IN ()) ELSE ((vt0.c0)/(vt1.c1)) END;SELECT CASE WHEN ((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN ((((((((vt1.c0)OR(vt1.c1)))AND(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)) THEN 840653726 WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c0)LIKE(vt1.c0)) END FROM vt0, vt1 WHERE (CASE (((('1912575285')AND(x'')))OR(NULL))  WHEN (((((((('')AND(x'458d')))OR('0.68971485627138')))OR('0.002871720389501786')))AND(0.12493963499803196)) THEN (0X265cfd31 IN (1.906552992E9, x'8513')) ELSE '1494636742' END); -- 1ms;
SELECT DISTINCT ((((((((((vt1.c0)OR(vt1.lid)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (((vt1.c1)<<(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL (((((((((vt1.c1 IN ()))OR((vt1.lid IN ()))))OR(((vt0.c0) IS FALSE))))AND(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END)))AND(((vt1.c0) NOT BETWEEN (0.2869000094075219) AND (vt1.c0)))) FROM vt1;SELECT ALL ((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.3387527738602014) THEN (((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) WHEN vt0.c0 THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.lid)) WHEN GROUP_CONCAT(vt0.c0) THEN NULL WHEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) THEN COALESCE(DISTINCT 0.7482924613232544, vt1.c0) WHEN (NOT (vt1.lid)) THEN ((('420367619')) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE (((vt1.c0))>((vt1.lid))) END FROM vt0 LIMIT 1368927169 OFFSET -148417139;SELECT DISTINCT ((vt1.c1) IS TRUE) COLLATE RTRIM FROM vt1 LIMIT -1316509386 OFFSET 1899571508; -- 0ms;
SELECT DISTINCT ((vt1.lid) IS FALSE) COLLATE BINARY, (((vt0.c0)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.lid)))) AND ((CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.lid END))), (((((vt1.c0)<<(vt1.c0))))<=((((vt1.c0) IS TRUE)))) FROM vt1 ORDER BY (NULL IN ()) ASC  NULLS LAST LIMIT 237470125 OFFSET -385570527;SELECT DISTINCT ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END) BETWEEN ((vt1.lid IN ())) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0)<=(vt1.c0))))>((((0.11243640203083682) NOTNULL)))), (CAST(vt0.c0 AS BLOB) IN (vt1.c0 COLLATE RTRIM, vt1.lid COLLATE NOCASE)), (((vt1.c1 IN ())) NOT BETWEEN ((~ (vt1.lid))) AND (CAST(vt1.c0 AS TEXT))) FROM vt1 GROUP BY (((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)) IN ()), (((vt1.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((CAST(vt1.lid AS BLOB), vt0.c0, (((vt0.c0, vt1.lid, vt1.c0, vt1.c1, vt0.c0, vt0.c0, 0.7200680825655721))<((vt0.c0, vt1.c1, vt1.lid, vt0.c0, vt1.c1, vt0.c0, vt1.c1))))) AND ((vt1.lid COLLATE BINARY, vt1.lid COLLATE RTRIM, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), (~ ((+ (vt0.c0)))) HAVING ((vt1.c1)|(vt1.c0)) COLLATE BINARY;SELECT ((vt1.lid IN ()) IN ()), (((vt1.c1) NOT BETWEEN (vt1.lid) AND (NULL)) IN (vt1.c1, ((((vt0.c0)AND(NULL)))OR(vt1.c1)))), (((~ (vt1.c1))) BETWEEN (LIKELY(DISTINCT vt1.c1)) AND (((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)))) FROM vt1 NATURAL JOIN vt0 WHERE ((((~ (0.7710784474956573)))GLOB('1354610983' COLLATE NOCASE))); -- 1ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (x'83554241')))OR('-195905744' COLLATE NOCASE))); -- 0ms;
SELECT vt1.c1 FROM vt1; -- 0ms;
SELECT LIKELIHOOD(DISTINCT ((((((((vt1.c0)OR(vt1.lid)))AND(vt0.c0)))AND(vt1.lid)))OR(vt1.c1)), 0.7562524458059363) FROM vt0 WHERE (CASE WHEN 2.111835387E9 THEN ((((x'1bdb')OR(x'')))AND('920340015')) WHEN ((0.9631190297370397) NOTNULL) THEN ('^(}e' IN ()) WHEN ((x'') NOT BETWEEN (x'') AND ('e')) THEN (('-442825374') NOT NULL) END);SELECT DISTINCT ((CASE WHEN vt0.c0 THEN x'' WHEN vt1.lid THEN vt1.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.c0 END)%((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((x''))))) FROM vt0, vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((('') BETWEEN (((1299965517)>=(0.22205048200969324))) AND ('0.0' COLLATE RTRIM))); -- 0ms;
SELECT (vt1.c0 IN ()) COLLATE NOCASE FROM vt1 WHERE (((0X4220f015)*('-1838950445' COLLATE BINARY))); -- 0ms;
SELECT ALL -1886537008 FROM vt1 WHERE ((((('1377314302') ISNULL))<<(0.68971485627138 COLLATE RTRIM))); -- 0ms;
SELECT (+ (CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 END)), ((('-858974106')) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((vt1.c1))), (vt1.c0 COLLATE BINARY IN (vt1.c1 COLLATE NOCASE)) FROM vt0 WHERE ((NOT ((0.6613695506685638 IN ()))));SELECT ALL (((vt1.lid IN (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt1, vt0 WHERE (CAST(((x'0b1e')IS(-801601925)) AS TEXT)); -- 0ms;
SELECT (NOT (((vt1.c0) IS TRUE))) FROM vt0 NOT INDEXED, vt1 WHERE ((+ ((((NULL, 'T#Y5*', 0x78c7523c))<>(('631488227', NULL, x'e9d0')))))); -- 1ms;
SELECT ALL (((((NOT (vt1.c0)))OR((((vt0.c0, vt1.c1, vt1.lid))>((vt1.lid, vt0.c0, vt1.c0))))))AND((('')-(vt1.c0)))) FROM vt0;SELECT DISTINCT vt1.lid FROM vt0 WHERE (((x'') BETWEEN ('1961339219') AND (NULL)) COLLATE NOCASE);SELECT DISTINCT COUNT(((((((((vt1.c0)AND(vt1.lid)))AND(vt1.c0)))AND(x'')))OR(vt1.lid))) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT x'', (((MIN(vt1.c1)))<=((CAST(vt1.c1 AS TEXT)))), ((((((((((vt1.c1)OR(vt0.c0)))AND(0.31917809356914617)))AND(vt0.c0)))OR(vt1.c1)))||(((vt0.c0) IS TRUE))) FROM vt1, vt0 WHERE (((CAST(0X5cb4631f AS INTEGER)) NOT BETWEEN (((-451150031) BETWEEN ('t悆l3') AND (x'767a'))) AND (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (+ (((((vt1.c1)OR(NULL)))OR(vt1.c1)))) FROM vt0 WHERE (((x'') BETWEEN (0xffffffffb262ae5e) AND (0x571507e7)) COLLATE RTRIM);SELECT ALL ((GROUP_CONCAT(vt1.c0))>=(((vt1.c0)LIKE(x'')))) FROM vt1, vt0; -- 0ms;
SELECT ((('-1339378802' IN (vt1.c0))) NOT BETWEEN (((vt1.lid) ISNULL)) AND (CAST(vt1.c0 AS REAL))) FROM vt1, vt0 WHERE ((((NOT (x'9969')))>(((0.4843764745464654)||(x''))))) LIMIT 1521748840; -- 0ms;
SELECT 0.6767310411549772 FROM vt1, vt0; -- 0ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((vt1.lid COLLATE RTRIM))) FROM vt0, vt1 GROUP BY ((NULL)|(((vt1.c1) NOTNULL))); -- 1ms;
SELECT ALL ((((TIME(vt0.c0, vt0.c0, vt1.c0))OR(((vt0.c0)==(vt1.c0)))))AND(json_extract(vt0.c0, x''))) FROM vt0 WHERE (CAST(NULL COLLATE NOCASE AS REAL));SELECT DISTINCT (NOT (((((((((vt0.c0)AND(vt1.lid)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.lid)))) FROM vt1 WHERE (((((NULL)AND(68302359)))OR('}!')) COLLATE BINARY);SELECT DISTINCT MIN('ON'), (- ((vt1.c1 IN (vt1.lid)))), COUNT(*) OVER () FROM vt0, vt1; -- 1ms;
SELECT DISTINCT ((vt1.c0 IN (vt1.c0)) IN (((vt1.c0)GLOB(vt1.c1)))), (((vt0.c0 IN ())) BETWEEN (((vt1.c1) IS TRUE)) AND ((~ (vt0.c0)))), ((CAST(vt1.c0 AS TEXT))<(CAST(NULL AS NUMERIC))) FROM vt1, vt0; -- 0ms;
SELECT SUM('j') FROM vt1, vt0 WHERE (((((PRINTF(1311603025))AND(CAST('1899571508' AS REAL))))AND('1330478010'))) LIMIT 1862983898 OFFSET -290014485; -- 0ms;
SELECT (((((vt1.lid)GLOB(vt1.c0)), ((((vt1.c0)AND(x'')))OR(vt1.lid)), ((vt1.c0)>=(vt0.c0))))<=((vt1.lid, CAST(vt0.c0 AS NUMERIC), (vt1.lid IN ())))), QUOTE(((((((((vt1.lid)AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.lid))), ((((vt1.c0)OR((vt1.lid IN ()))))AND((((vt1.c1))<=((vt0.c0))))) FROM vt1, vt0 LIMIT -230559405 OFFSET -1624168990; -- 0ms;
SELECT LAG(((((vt0.c0)<(vt0.c0)))LIKE(((vt0.c0)LIKE(vt0.c0)))), NULL, vt0.c0) OVER (), ((CASE vt0.c0  WHEN vt1.lid THEN vt1.lid END) NOT BETWEEN (vt1.lid) AND (MIN(vt1.c0))), AVG(CAST(vt0.c0 AS BLOB)) FROM vt0;SELECT LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt1.c1 END), CAST((+ (vt1.c0)) AS BLOB), ((x'') IS TRUE) FROM vt1 LIMIT -1545776285;SELECT DISTINCT vt1.lid COLLATE NOCASE FROM vt0, vt1 WHERE (CAST((- ('\r41&m^''')) AS REAL)); -- 0ms;
SELECT '' FROM vt0, vt1; -- 0ms;
SELECT DISTINCT 0.8637702864541081 FROM vt0, vt1 GROUP BY (((vt1.lid, vt1.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt1.lid))) COLLATE NOCASE HAVING ((((((((CASE WHEN vt0.c0 THEN vt1.lid END)AND(((vt0.c0)||(vt1.c1)))))OR(('0.04294535317968706' IN (vt1.c1, vt1.c1)))))AND(((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))))AND((('章KOr➠&W+t')OR(vt1.c1)))); -- 0ms;
SELECT DISTINCT (((vt1.c1) IS FALSE) IN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT))) FROM vt0, vt1; -- 0ms;
SELECT COUNT(*) COLLATE BINARY FROM vt1 WHERE ((+ (CASE WHEN '299779054' THEN '-1264230466' ELSE 0.3774270875484489 END))); -- 0ms;
SELECT DISTINCT ((CAST(vt1.lid AS TEXT))>=(CAST(vt0.c0 AS INTEGER))) FROM vt1, vt0 WHERE ((~ ((((NULL))<((0.1647654135989055)))))); -- 0ms;
SELECT ALL ('' IN (ABS(vt1.lid), CASE WHEN vt0.c0 THEN NULL ELSE vt1.c1 END)) FROM vt0 WHERE ((('1800389374')>>(0.8217299185513759)) COLLATE BINARY);SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY (~ (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.lid))))) FROM vt0, vt1 WHERE ((((+ (NULL)))<=(((0xffffffffd4b365da) NOT BETWEEN (0.2670957236375753) AND ('1906552992'))))) ORDER BY LOWER(DISTINCT CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.c1 END) ASC  NULLS LAST, ((((vt1.lid)LIKE(NULL))) NOTNULL) DESC; -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY ((('YAk뮭') BETWEEN (vt1.lid) AND (vt1.c0)) IN (vt1.c1 COLLATE RTRIM)) DESC  NULLS FIRST, (((vt1.lid)) NOT BETWEEN ((((vt1.c1) ISNULL))) AND ((TRIM(DISTINCT vt1.lid, vt0.c0)))), ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid)) COLLATE NOCASE  NULLS FIRST), CASE CAST(vt1.c0 AS REAL)  WHEN ((vt1.c1) ISNULL) THEN (vt1.c1 IN ()) WHEN CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.c0 WHEN vt1.c1 THEN 0.10336763206171451 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END THEN ((vt1.c1) ISNULL) WHEN vt1.c0 COLLATE NOCASE THEN vt1.lid COLLATE NOCASE WHEN (((vt1.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt0.c0, vt1.c0))) THEN vt1.c1 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN CAST(vt1.lid AS REAL) END, (('-860168370') BETWEEN ((vt0.c0 IN ())) AND ((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))))) FROM vt0, vt1 WHERE ((((0Xffffffffa0693133)) BETWEEN ((NULL)) AND ((0.40196920138293724 COLLATE RTRIM)))); -- 0ms;
SELECT ALL ((CASE vt1.lid  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END) NOT BETWEEN (((vt1.lid)%(vt1.c0))) AND (vt0.c0 COLLATE NOCASE)), MIN(0.21257848478023345), CASE WHEN ((vt0.c0) NOT NULL) THEN CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END END FROM vt1, vt0 WHERE (((NULL COLLATE NOCASE) BETWEEN (CASE '-330176567'  WHEN NULL THEN '⻉!y*u!%' END) AND ((('') NOT BETWEEN ('-50018960') AND ('6296603968452215411T1918:1665--a*'))))); -- 0ms;
SELECT ALL ABS((- (vt0.c0))), vt1.c0 COLLATE NOCASE, vt0.c0 FROM vt1 WHERE ((('750385790' COLLATE BINARY) NOT BETWEEN (0.5264870237754848) AND (((x'')*('')))));SELECT CASE vt1.c0  WHEN json(vt1.c1) THEN (~ (vt1.lid)) END FROM vt0, vt1; -- 0ms;
SELECT ALL (NOT (vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (((((x'' IN ()), (~ (NULL)), (- (NULL))))>=(((((0x434a5697, x'', NULL))>=(('-180100766', x'6bd1', 0x5865c3d5))), CAST('93639214' AS TEXT), (+ ('758345843')))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.c0)))) ISNULL) DESC;SELECT DISTINCT (+ (vt1.lid)) FROM vt0, vt1 WHERE ((((((NOT (NULL)))AND((x'' IN ()))))OR(CASE WHEN 'mea?2a' THEN '1912575285' END))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>=(vt1.c1)))!=(((((((((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(vt1.lid)))OR(vt0.c0)))), NULL, ((((((vt1.c0)AND(0X5449ae2d)))AND(vt1.c1))) NOTNULL), MIN((- (vt1.c1))), RANK() OVER () FROM vt0 WHERE ((NOT (((0.44928234176600257) IS TRUE)))) LIMIT -19313317 OFFSET 636458381;SELECT DISTINCT (((+ (vt1.lid)))<(x'ca83')), (('772334917')LIKE('vv帇NK7p]%')) COLLATE NOCASE, CAST(NULL AS BLOB) FROM vt1 WHERE (((((((0.675241192262429)!=(x'a5ef')))AND(((0.7167554321522157) NOT NULL))))AND((- (x'7f137cb4'))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c0)));SELECT DISTINCT (((vt1.lid, ((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)), (NOT (NULL)), CAST(vt1.lid AS INTEGER), (vt1.c1 IN ())))<((AVG(vt0.c0), ((vt1.c1)>>(vt1.c0)), ((vt1.c1) BETWEEN (NULL) AND (vt1.c1)), CASE vt1.c0  WHEN vt1.c0 THEN 0X5e21f1d9 ELSE vt1.c0 END, (((vt1.c0, vt1.c1, vt0.c0, vt1.lid, '890350017'))>=((vt0.c0, vt1.lid, vt1.c1, vt1.c0, vt0.c0)))))) FROM vt0 WHERE (((NULL)!=('-405080255')) COLLATE RTRIM);SELECT ALL HEX(vt0.c0) COLLATE BINARY FROM vt0 ORDER BY ((0x69de5daa COLLATE BINARY) NOT BETWEEN (CASE vt1.c0  WHEN NULL THEN vt1.c1 END) AND ((~ (vt1.c1))))  NULLS FIRST;SELECT DISTINCT (vt1.c1 IN (vt1.lid, vt1.c0)) COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT ALL (((((vt1.lid, vt1.lid, vt1.c0, vt1.c1, vt0.c0))<((vt1.c1, vt1.lid, vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN ((- (vt0.c0))) AND (((((x'3a49')AND(vt1.c1)))AND(vt1.c0)))), (vt1.c1 IN ()), (MAX(vt0.c0) IN ('-443090826')) FROM vt0, vt1 WHERE (((0.9915699854327209 COLLATE BINARY)LIKE(NULL COLLATE BINARY))); -- 0ms;
SELECT ALL (~ (vt0.c0)) COLLATE BINARY, CASE WHEN ((vt0.c0) IS TRUE) THEN (NOT (vt1.c0)) WHEN ((vt1.lid)>=(vt1.c0)) THEN CASE WHEN vt1.lid THEN vt1.c0 END WHEN '207278300' THEN CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt1.c1 THEN (vt1.lid IN ()) WHEN (NOT (vt0.c0)) THEN (vt1.c0 IN ()) ELSE CAST(vt0.c0 AS INTEGER) END, ((((vt1.lid)<>(vt0.c0)))AND(x'')) FROM vt0 WHERE (((('PLῄky') BETWEEN ('ઝ6,') AND ('1494636742')) IN ((('-1544040309')/(NULL)))));SELECT ALL ((((vt1.c1)||(0.2983544288023694)))GLOB(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END)), COUNT((((x''))<>((vt0.c0)))), ((((((((((vt1.lid)OR(vt1.c1)))AND(vt1.c0)))OR(vt1.c1)))AND(vt0.c0)))&((vt1.c1 IN ()))) FROM vt1 WHERE (((((((((x'd6d85b26')OR((0.8844562076923427 IN (0.03334394490682757)))))AND(x'8a09' COLLATE NOCASE)))OR((('LT멻q''|6')=(x'')))))OR('-935913764' COLLATE BINARY)));SELECT ALL vt1.lid FROM vt0, vt1 WHERE (((((((0X1900f604))>=(('->|lt]TF')))))>((((0.9013613905320529) IS TRUE))))) GROUP BY CASE vt0.c0 COLLATE RTRIM  WHEN NULL COLLATE BINARY THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c1)) BETWEEN ((vt1.lid)) AND ((vt0.c0))) END HAVING CAST(((vt1.lid)==(vt0.c0)) AS REAL); -- 0ms;
SELECT ((vt1.c0 COLLATE RTRIM)+(CAST(vt0.c0 AS TEXT))), vt1.c0, ((vt1.c0 IN ()) IN ('', COALESCE(vt1.c0, vt1.lid))), AVG(HEX(DISTINCT vt1.c1)) OVER (), TRIM(CASE vt1.c0  WHEN vt1.c1 THEN vt1.lid ELSE vt1.c0 END) FROM vt1, vt0 WHERE ((((0.2117044059833575) BETWEEN (x'fce1') AND (0.71150666336229)) IN ())); -- 0ms;
SELECT DISTINCT vt1.lid FROM vt0, vt1 WHERE (CASE LIKELIHOOD(0.854780089853556, 0.9437969436508118)  WHEN ((('-473655031')) NOT BETWEEN ((NULL)) AND ((x''))) THEN (('')IS NOT('-1988453081')) END) LIMIT 2001632852 OFFSET -1861262224; -- 0ms;
SELECT DISTINCT ((CAST(101134107 AS INTEGER)) IS TRUE) FROM vt0 WHERE ((((((('O3') IS FALSE))OR(((('dＱ]%(<+Z'))>=((0.5876629350607002))))))AND(((NULL) BETWEEN (NULL) AND ('0.7483054461178196'))))) ORDER BY (((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<(((((vt1.c1)) BETWEEN (('P}')) AND ((vt1.c1))))))  NULLS LAST, x'7f51'  NULLS LAST;SELECT json(vt0.c0 COLLATE RTRIM) FROM vt1 CROSS JOIN vt0 ON vt1.lid ORDER BY vt0.c0 COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN ())) IS FALSE) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((vt1.lid) NOT NULL) AS TEXT) FROM vt1, vt0 WHERE (NULL) ORDER BY (~ (vt1.lid)) COLLATE NOCASE COLLATE BINARY DESC; -- 0ms;
SELECT ((((ROUND(vt1.c1, vt1.lid))OR(((((vt1.lid)AND(vt1.c1)))AND(vt1.c0)))))OR((~ (vt1.lid)))), (((vt0.c0)) BETWEEN (((~ (vt1.lid)))) AND ((CAST(vt1.c1 AS REAL)))), vt0.c0 FROM vt0 WHERE (((CAST(0.010745419716821636 AS TEXT)) IS FALSE));SELECT CASE vt0.c0 COLLATE BINARY  WHEN vt0.c0 THEN COALESCE(x'', vt1.lid, vt1.c1, vt1.c0, vt1.c1, NULL) END FROM vt0, vt1 WHERE ((CASE WHEN x'' THEN '' WHEN '' THEN 0.38620253707046115 WHEN NULL THEN 0.9121321236432517 END IN ())); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) NOTNULL)) OVER () FROM vt1, vt0 WHERE (((((((((((x'')AND(0.9518937661769624)))AND('0.21257848478023345')))AND(NULL)))AND(0Xffffffffeda84370)))%((0.8979045441646627 IN (x'', 1992524942, NULL))))) GROUP BY (((vt1.c1) NOT BETWEEN (x'') AND (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) HAVING ((((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c0))) NOTNULL); -- 0ms;
SELECT DISTINCT IFNULL(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((((((((vt1.c1)AND(vt1.c1)))AND(vt0.c0)))AND(vt1.lid)))OR(vt1.c1))), CAST((((vt0.c0, vt1.lid, vt1.c0))==((vt1.c0, vt1.lid, vt1.c0))) AS TEXT), (((vt1.c1, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), (((vt1.lid))<>((vt0.c0))), ((vt1.c1)<(vt1.c1)))) AND (((vt0.c0 IN ()), x'', vt0.c0))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS TEXT)) OVER () FROM vt0 NOT INDEXED WHERE (CAST(CASE WHEN 0.918010445470629 THEN x'' ELSE x'' END AS TEXT)) GROUP BY (vt1.lid COLLATE BINARY IN (vt1.lid));SELECT 0.40577022652855543, (((((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt0.c0))))!=((UPPER(DISTINCT vt1.c1)))), vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT AVG(CASE vt1.lid  WHEN vt1.lid THEN vt1.lid END) FROM vt0;SELECT (((vt0.c0 IN ())) BETWEEN ((vt0.c0 IN ())) AND (((0Xffffffffeb5aa181) BETWEEN (vt1.c0) AND (vt1.lid)))) FROM vt0, vt1 WHERE (((((x'a409')OR(NULL)))OR(x'')) COLLATE BINARY) GROUP BY (~ (((vt0.c0)IS NOT(vt0.c0)))), (CASE x''  WHEN vt0.c0 THEN vt1.lid END IN ()), CASE WHEN ((vt1.c1)||(vt0.c0)) THEN (((vt0.c0))!=((vt1.lid))) END ORDER BY CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)>>(NULL)) END DESC, ((((vt1.c0)<=(vt1.lid)))<(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid)))) DESC  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN '459763255' THEN vt1.lid END) ISNULL)  NULLS FIRST; -- 0ms;
SELECT ALL (NOT (vt1.c1)) COLLATE BINARY COLLATE RTRIM FROM vt0, vt1 WHERE (((((((0.15601629955252272)OR(0.6956298747736681)))OR(NULL))) BETWEEN ((('\nYᙃxo*') NOTNULL)) AND (NULLIF(0.7482924613232544, x'')))); -- 0ms;
SELECT ((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.lid END) NOT NULL), (~ ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), ((((vt1.c1)IS(vt1.lid)))OR(AVG(vt1.c1))) FROM vt0 WHERE (CAST((('t4^}钼[') IS FALSE) AS BLOB));SELECT ((((vt1.c0)<(vt0.c0)))>(CASE vt1.lid  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END)), ((((((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.lid END)OR((- (vt1.lid)))))AND((~ (vt1.c0)))))OR(TRIM(DISTINCT ')拍J#X ]kb', x''))))OR((+ (vt1.c0)))), vt0.c0 FROM vt0, vt1 WHERE (CAST(CHAR(NULL, 'Uk', '') AS TEXT)); -- 0ms;
SELECT MIN(x'a73985fbbe57', vt1.c1 COLLATE BINARY, (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((x'') NOT NULL)) FROM vt0;SELECT DISTINCT ((((vt1.c0) BETWEEN (NULL) AND (vt1.c0))) IS TRUE), COUNT((~ (vt0.c0))), ((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))<((((vt1.lid)) NOT BETWEEN ((vt1.c1)) AND ((vt1.lid))))), (((0.2881217535112066)IS NOT(vt1.lid)) IN ()), ((vt1.c1) NOTNULL) COLLATE RTRIM FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED(('#*' IN ('-2130788698', x'b633'))));SELECT DISTINCT (~ (TRIM(vt1.lid, vt1.c0))), DENSE_RANK() OVER (), TOTAL(((vt0.c0) IS FALSE)) FROM vt0, vt1 WHERE (((((((x'') NOT BETWEEN ('eG-y,0y') AND (1899571508)))OR((((x'adc0'))>=((''))))))AND(((NULL)||(0.6208564233327633))))) ORDER BY x'89e4', (NOT (((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.lid)))), ((CAST(vt0.c0 AS TEXT))>>(((((((((vt1.lid)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.lid)))AND(vt1.c0))))  NULLS LAST; -- 0ms;
SELECT ALL ((((CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.c1 END)AND((NOT (vt1.c0)))))OR((('0.7200680825655721') BETWEEN (vt1.c0) AND (vt1.lid)))) FROM vt0 WHERE (UNICODE(0.6253103272622659 COLLATE RTRIM)) GROUP BY '', NULL, (- (SUBSTR(vt1.c0, vt1.lid))), 0.7385661705215628, vt1.c1 HAVING (((+ (x'9fd6a540'))) ISNULL) LIMIT -860168370 OFFSET 1189976761;SELECT DISTINCT (((vt1.lid) IS TRUE) IN ()) FROM vt1, vt0; -- 1ms;
SELECT ALL NTH_VALUE(CASE WHEN CAST(vt1.lid AS BLOB) THEN CASE vt1.lid  WHEN vt1.c1 THEN vt1.c0 END END, NULL) OVER (), RTRIM(((((((((vt1.c1)OR(NULL)))OR(vt0.c0)))AND(vt1.lid)))AND(vt1.c0))), CASE ((vt1.lid) BETWEEN (x'') AND (vt1.c1))  WHEN (vt1.lid IN ()) THEN ((vt1.lid)*(vt0.c0)) ELSE vt1.c0 END FROM vt1 GROUP BY (((vt1.c0)) BETWEEN ((1164851739)) AND ((((vt1.c0)=(vt1.c0))))) HAVING (((vt1.c0, vt1.lid, vt1.lid, vt1.c0, vt1.c1)) NOT BETWEEN ((vt0.c0, vt1.lid, vt1.lid, x'', vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.lid, vt1.lid, vt1.c0))) COLLATE RTRIM;SELECT (+ (x'8fb3')) FROM vt0 GROUP BY ((ABS(vt1.c0)) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND (vt1.c0)), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) NOT BETWEEN (UPPER(vt1.c1)) AND (NULL)), load_extension(x'', ((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)));SELECT DISTINCT json((~ (vt1.c0))) FROM vt0, vt1 WHERE (0.2554874824490654); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS TEXT)) ISNULL) FROM vt1, vt0 WHERE (CAST(((x'')<=(x'7bb815f4')) AS REAL)); -- 0ms;
SELECT AVG(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))) FROM vt0 GROUP BY (CAST(vt1.c0 AS INTEGER) IN ()), LIKELY((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid)))), (((((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c0, '-50018960', vt0.c0, vt1.c1)) AND ((0.618880988453503, vt1.c0, vt1.lid, vt1.lid, vt0.c0)))) ISNULL) HAVING vt1.lid;SELECT DISTINCT (NOT (vt1.lid)) COLLATE NOCASE FROM vt0;SELECT ((((UNLIKELY(vt1.c0))AND(((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))))OR(CASE vt0.c0  WHEN -1874344584 THEN vt0.c0 ELSE vt1.c1 END)) FROM vt0;SELECT ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE, (((vt1.c1)) NOT BETWEEN (((+ (vt0.c0)))) AND ((vt1.c0 COLLATE RTRIM))), (vt1.lid IN ()) COLLATE BINARY FROM vt0, vt1 WHERE (((((0.813073455999813)AND(450037738))) NOT BETWEEN (((316758048)|(NULL))) AND (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT ALL ((CASE WHEN '-346381951' THEN vt1.c1 END) NOT BETWEEN (TYPEOF(vt1.c1)) AND (vt1.c1 COLLATE RTRIM)) FROM vt1, vt0 WHERE ((('650154020' COLLATE BINARY)GLOB(-5.52167029E8 COLLATE NOCASE))) LIMIT -1722300871; -- 0ms;
SELECT DISTINCT ((((vt1.lid)!=(vt1.lid)))>(((vt1.c0)&(vt0.c0)))) FROM vt0 WHERE ((('' IN (x'')) IN (CASE WHEN x'' THEN x'85bc' WHEN '-1525386268' THEN '-1213558544' WHEN '>3' THEN NULL ELSE 'J윺' END)));SELECT DISTINCT ((0.959900743314141)&(vt1.lid)) COLLATE RTRIM FROM vt1 WHERE ((NOT (CAST('8㘗V	' AS REAL)))) ORDER BY ((((((((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END)AND(((vt0.c0)IS NOT(vt1.c1)))))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))OR((vt1.lid IN (vt0.c0)))))OR((- (vt0.c0)))) DESC  NULLS FIRST, (((-19997948, 'qko&', vt1.c1)) NOT BETWEEN ((CASE vt1.lid  WHEN vt1.lid THEN vt0.c0 ELSE vt1.lid END, ((vt1.lid) IS TRUE), ((((NULL)AND(0x76be4095)))OR(vt1.lid)))) AND (((((vt1.c0, vt1.lid, vt0.c0))>((vt0.c0, vt1.c1, ''))), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((83539729))), vt0.c0 COLLATE BINARY))) DESC;SELECT DISTINCT (~ (((vt1.lid)&(vt0.c0)))), CAST(((vt1.c1)*(vt0.c0)) AS NUMERIC), (CAST(vt0.c0 AS TEXT) IN ()) FROM vt1, vt0; -- 5ms;
SELECT DISTINCT MIN(((vt1.c1)||(vt1.c1))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT NULL)) NOT NULL), CAST((vt1.lid IN ()) AS INTEGER), vt1.c1 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT -19313317 FROM vt1, vt0 WHERE (x''); -- 0ms;
SELECT ALL ((vt1.lid COLLATE NOCASE)GLOB(vt0.c0)) FROM vt0 GROUP BY vt1.c1;SELECT ALL ((UPPER(DISTINCT vt1.c1))AND(vt0.c0)) FROM vt1, vt0 WHERE (CASE ((NULL) BETWEEN (0Xffffffffcec203fc) AND (NULL))  WHEN NULL COLLATE NOCASE THEN ((NULL) IS TRUE) END); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))+(vt1.c1)), vt1.c1, MAX((+ (1052460439)) COLLATE BINARY) FROM vt1;SELECT DISTINCT 0.9355907812019391 FROM vt0; -- 0ms;
SELECT DISTINCT CAST((~ (vt1.c0)) AS NUMERIC) FROM vt0, vt1 GROUP BY (((vt0.c0 IN (x'15fd'))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (ABS(vt1.c0))), ((LIKE(vt1.c1, vt1.c0))>=(highlight(vt0.c0, vt1.c1, vt1.c1, vt1.c0))), ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))%((vt0.c0 IN (0.2117044059833575, vt1.c1)))), (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))<=(((((vt0.c0)OR(NULL)))OR(vt1.c0)))), CAST(((((((((NULL)AND(x'')))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)) AS NUMERIC) LIMIT 446504314 OFFSET 272928609; -- 0ms;
SELECT ALL ((((((vt1.lid)&('')))AND(vt1.c0)))AND(IFNULL(vt1.c1, vt1.lid))), UPPER(((vt1.lid)LIKE(vt1.c1))), (+ (TOTAL_CHANGES())) FROM vt1 WHERE ((((('-86444098') ISNULL)) IS TRUE)); -- 0ms;
SELECT (((vt0.c0 IN ())) NOT BETWEEN (((x'') IS TRUE)) AND (COALESCE(vt0.c0, vt1.c0, vt1.c0, vt0.c0))) FROM vt1, vt0 WHERE ((((((0.8834531355877148, 5.69292417E8, 'd.', x'', NULL)) BETWEEN (('299779054', x'', -1.484919335E9, 0Xffffffffe910dedc, x'')) AND ((NULL, x'', 0.2728540143407715, 1073476180, '450964310')))) NOT BETWEEN ('12' COLLATE BINARY) AND (0.17558159364293446 COLLATE RTRIM))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt1.lid END)AND((vt1.lid IN ()))))AND((+ (vt1.c0)))) DESC  NULLS LAST;SELECT MIN(CASE WHEN vt1.c0 THEN vt1.lid ELSE vt1.lid END), (((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0)))) BETWEEN (COUNT(*)) AND (((vt1.c1)==(vt1.c0)))), CAST(((0x13f74edc) IS FALSE) AS BLOB) FROM vt0 NOT INDEXED, vt1; -- 0ms;
SELECT ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) NOT NULL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c1) BETWEEN (vt1.lid) AND (vt1.lid)))<=(LIKE(vt1.lid, vt1.c1, 'l'))) FROM vt1, vt0 NOT INDEXED ORDER BY (SQLITE_SOURCE_ID() IN ()) ASC; -- 0ms;
SELECT 0.9994714935740069, PRINTF(x'e7a8', vt1.lid, (((vt0.c0, vt1.c0, vt1.c1))>=((vt0.c0, vt0.c0, vt1.c0)))), COUNT(((vt1.c0) IS FALSE)) OVER () FROM vt1 WHERE (CASE 0.39316004127876303 COLLATE BINARY  WHEN x'' THEN CAST(NULL AS INTEGER) END);SELECT DISTINCT TRIM('955572195') COLLATE BINARY FROM vt0 GROUP BY ((((((vt1.c1) NOT BETWEEN ('438419942') AND (vt1.c1)))AND(((((vt1.c0)AND(vt1.c1)))OR(vt1.lid)))))AND(vt1.c0));SELECT ALL LEAD(((((vt1.lid)AND(x'')))AND(vt1.lid)) COLLATE BINARY, ((((vt1.c1)||(vt1.lid)))IS(((x'') ISNULL))), ((((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1))) ISNULL)) OVER (), (+ (vt1.c1)), ((vt1.lid)!=(vt1.lid)) COLLATE NOCASE FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1))))) FROM vt1 GROUP BY ((((vt0.c0)&(vt1.lid))) ISNULL);SELECT RANK() OVER () FROM vt1, vt0 WHERE (((CAST('-1e500' AS REAL)) NOTNULL)); -- 0ms;
SELECT DISTINCT ((('>i髧uB 3')) NOT BETWEEN (((('2069494226')OR(vt1.lid)))) AND ((MAX(vt0.c0)))) FROM vt1, vt0 WHERE ('-385570527'); -- 0ms;
SELECT DISTINCT CASE WHEN (((vt1.lid))=((vt1.c1))) THEN COUNT(*) END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN ())) BETWEEN ((((vt0.c0)) BETWEEN ((vt1.lid)) AND ((vt1.c0)))) AND (-5.7011384E8)), ((((((((0.002871720389501786)OR((((vt0.c0))>=((vt0.c0))))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))AND((((vt1.c1, vt1.c0, vt0.c0))>((vt1.lid, vt1.c0, vt1.c0))))))OR(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid END)), CAST(vt1.c0 AS REAL) COLLATE NOCASE FROM vt1;SELECT vt1.c1, GROUP_CONCAT((vt1.lid IN (vt1.c1))) OVER ( ORDER BY vt1.c0  NULLS LAST ROWS CASE ((vt0.c0)<=(vt0.c0))  WHEN ((0.979255607493361) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN UPPER(NULL) END PRECEDING), (((~ (vt0.c0)))<>(((vt1.lid)!=(vt0.c0)))) FROM vt1, vt0 WHERE (CASE ((0.8565275388374116) NOT BETWEEN (0.2662307366525938) AND (0X4aa218f8))  WHEN NULL COLLATE NOCASE THEN UNLIKELY(8.2303331E7) WHEN ((0xba963d2) BETWEEN ('') AND (0.3149851107069944)) THEN ((x'4d47b5408a91')>(-4.43090826E8)) WHEN (('')LIKE(x'5742')) THEN (((('729690254')AND(4.5096431E8)))OR(NULL)) END); -- 1ms;
SELECT ALL COALESCE(DISTINCT CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS BLOB)) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT ALL x'3d78' FROM vt0, vt1 WHERE ((((('Ea')<<('729690254'))) BETWEEN (0.16006356512595288) AND (((x'')OR(0.42168638656375423))))); -- 0ms;
SELECT DISTINCT ((COUNT(*))<(CASE vt1.lid  WHEN vt1.c0 THEN vt1.lid END)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT NTILE((vt1.c0 IN ())) OVER () FROM vt1;SELECT ALL TOTAL(((vt0.c0)!=(vt1.c0))) OVER (), GROUP_CONCAT((- (vt0.c0))), LAST_VALUE(0.12493963499803196) OVER () FROM vt1 ORDER BY (NOT (((vt0.c0)&(vt1.c0))));SELECT DISTINCT ((((((vt1.c0)&(vt1.lid)))AND(CAST(vt1.lid AS REAL))))OR((((vt0.c0))>=((vt1.lid))))) FROM vt1;SELECT DISTINCT COUNT(((0.992962901163879) IS TRUE) COLLATE BINARY) FROM vt0, vt1 WHERE (CASE WHEN QUOTE(x'') THEN CASE WHEN x'ca22' THEN NULL ELSE '1131590759' END END); -- 0ms;
SELECT ALL ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)) COLLATE NOCASE, ((AVG(vt1.lid))|((- (vt1.c1)))), (- (SUBSTR(vt1.lid, vt1.c1))) FROM vt0, vt1 WHERE (CASE WHEN 0.9477488540545196 COLLATE BINARY THEN (('-826663348') NOT BETWEEN (0.8268460851542281) AND (NULL)) ELSE CAST('-385570527' AS BLOB) END); -- 0ms;
SELECT ALL x'' FROM vt1 LIMIT 1038452065; -- 1ms;
SELECT DISTINCT COUNT(CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.lid END) FROM vt0, vt1 WHERE (('-1155702109' COLLATE BINARY IN (CAST(0x9e22bd AS INTEGER)))); -- 0ms;
SELECT DISTINCT vt1.c0, COUNT((NOT (vt1.lid))) OVER ( GROUPS BETWEEN '-282642439' COLLATE RTRIM PRECEDING AND  CURRENT ROW), ((((vt1.lid)AND((+ (vt0.c0)))))AND(((vt0.c0)==(vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT ALL (((((((((((((NOT (vt1.c0)))AND(CASE vt1.c1  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c1 END)))AND(vt1.lid)))AND(vt1.lid COLLATE NOCASE)))AND(((((vt0.c0)OR(vt1.lid)))AND(vt1.c0)))))OR(GLOB(vt1.lid, vt1.c0))))AND(CAST(vt0.c0 AS INTEGER))) FROM vt1 ORDER BY vt1.lid  NULLS FIRST LIMIT 1826501524 OFFSET 1280648484;SELECT DISTINCT 'A' FROM vt1 WHERE (COALESCE((('C|Sy')+(0.40440570874079795)), ((NULL)&('0.22499152907122755')))) ORDER BY ((((((vt1.c0)OR(vt1.c1)))OR(vt1.lid))) NOT BETWEEN ((('Jc|')<(vt1.c0))) AND (((vt1.c0) ISNULL))), (((vt1.lid)IS NOT(vt1.c0)) IN ()) ASC; -- 0ms;
SELECT ((((vt1.c0) IS TRUE)) NOT BETWEEN (TRIM(DISTINCT vt1.c0)) AND (((((vt1.c1)OR(vt1.lid)))AND(vt1.c0)))) FROM vt1 LIMIT 428936376; -- 0ms;
SELECT ALL COALESCE((vt1.c1 IN ()), (NOT (NULL))) FROM vt1 ORDER BY (LOWER(DISTINCT vt1.c0) IN (CAST(vt0.c0 AS INTEGER), ((vt1.c0)||(vt1.c0)))) ASC;SELECT ALL CASE WHEN 0.7038255459918161 COLLATE BINARY THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)) ELSE CAST(vt1.c0 AS BLOB) END, ((MIN(vt1.c1))>(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))), TOTAL(((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))) OVER () FROM vt1, vt0 WHERE (((CASE WHEN -2106698426 THEN 'chxf*' END) IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid))) FROM vt1 WHERE ((- (((NULL) IS FALSE)))) GROUP BY NULL HAVING (+ (vt1.c1));SELECT ALL vt1.c0, ((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))<=((vt1.c1 IN ()))), (((vt1.lid IN (vt1.c0, 1.005592962E9)))<((((vt1.c1, vt1.lid, vt1.lid))>=((vt0.c0, vt1.c0, 0.0395344463408146))))) FROM vt0 WHERE ('0.7483054461178196');SELECT CAST(((vt1.c0)-(vt1.c1)) AS NUMERIC) FROM vt1, vt0 WHERE (CASE (NULL IN (NULL))  WHEN 0.8912916305864248 COLLATE RTRIM THEN (('141334992')<('')) ELSE CASE WHEN '-1074476497' THEN '0.08948460681755588' END END); -- 0ms;
SELECT ALL ((((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.lid)))LIKE(MAX(vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT ALL (~ (((vt1.lid) BETWEEN (x'bd11') AND (vt1.c1)))) FROM vt0 WHERE (CASE WHEN 0.06945086151052893 THEN '-2126383943' END COLLATE BINARY COLLATE RTRIM) ORDER BY CAST(vt1.lid AS INTEGER) COLLATE NOCASE  NULLS FIRST;SELECT ALL (((((vt1.c0, 'm	', vt1.lid))<=((0x704d3888, vt0.c0, vt1.c0))))<=((((vt1.lid))>=((vt0.c0))))), (((((((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))AND(((vt1.lid) IS TRUE))))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (NULL)))), CASE ((((vt1.lid)AND(vt0.c0)))AND(NULL))  WHEN ((NULL) NOT BETWEEN (vt1.c1) AND (vt1.lid)) THEN vt0.c0 WHEN (vt1.lid IN ()) THEN vt0.c0 WHEN CASE vt1.lid  WHEN vt1.lid THEN vt0.c0 ELSE vt1.c1 END THEN '&뾸l	(<u59' WHEN CASE WHEN vt1.c1 THEN NULL ELSE NULL END THEN ((vt0.c0) IS TRUE) WHEN ((vt1.c1)IS(vt1.c0)) THEN MIN(vt1.lid) ELSE 0.3891952660546494 COLLATE RTRIM END, ((('-1988453081')) NOT BETWEEN (((((vt1.lid))=((vt1.c0))))) AND ((vt0.c0))), ((vt1.lid) IS FALSE) FROM vt1, vt0 WHERE (json_insert(CASE 'p-its?'  WHEN NULL THEN 0X7b59f9d2 END, CAST(0x86c99d0 AS BLOB), 0xffffffff9263d7d3, highlight('735231315', 0.227084166718872, x'', x'2fb9'), ((0.747787400018436)IS(x''))));SELECT NTILE(vt0.c0) OVER ( ROWS TRIM(DISTINCT LOWER(DISTINCT vt1.c0)) PRECEDING), NULLIF(vt1.c1, (((x'', vt1.c0, vt1.c0))!=((vt1.c1, vt1.lid, vt0.c0)))), ((((vt1.c0)|(vt1.lid))) NOT NULL) FROM vt0 WHERE ('-593276298');SELECT DISTINCT vt1.lid FROM vt1; -- 0ms;
SELECT DISTINCT (+ ((vt1.c1 IN (vt1.c0)))) FROM vt0 GROUP BY ((ABS(DISTINCT vt1.c1)) IS TRUE);SELECT DISTINCT CHANGES() FROM vt1; -- 1ms;
SELECT ALL ((((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c1)))AND(vt1.c0)))AND(((vt1.c0)>>(vt1.lid)))) FROM vt1 ORDER BY vt1.c0, CASE ((vt1.lid)*(vt1.lid))  WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt1.c0))<((vt1.c1))) WHEN ((((((((vt1.c0)OR(NULL)))OR(vt1.c1)))OR('770749600')))AND(-630566687)) THEN CAST(vt1.c0 AS NUMERIC) WHEN vt1.lid THEN vt1.c1 COLLATE NOCASE ELSE vt0.c0 END DESC;SELECT DISTINCT CAST(vt1.c1 AS REAL) COLLATE NOCASE FROM vt0 WHERE (NULL);SELECT ((vt1.lid)>=('1188303399')) COLLATE NOCASE FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (NOT (LIKELY(vt1.c0))), x'cca0' COLLATE NOCASE, TOTAL(((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1))) FROM vt0, vt1 WHERE (CAST(((x'')!=(NULL)) AS TEXT)) ORDER BY CAST(CAST(vt1.c0 AS INTEGER) AS NUMERIC) DESC  NULLS FIRST, ((x'') NOT BETWEEN (CASE vt0.c0  WHEN vt1.c1 THEN vt1.lid END) AND ((+ (vt1.lid)))), CAST(((vt1.c1)-(vt1.lid)) AS INTEGER) DESC; -- 0ms;
SELECT DISTINCT ((CAST(vt1.lid AS NUMERIC))>(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1 WHERE (((((x''))>(('-174156873'))) IN ()));SELECT ALL 'ecJo[0Di' FROM vt1 WHERE ((((((('206769708')AND(NULL)))AND(((((0.47342340564464425)AND('-1613356920')))AND('UWEp.F}')))))AND(CAST(x'5577' AS TEXT)))) GROUP BY ((((TRIM(DISTINCT vt1.c1, vt1.lid))AND(PRINTF(vt1.c1))))OR(((vt1.c0)%(vt1.c0)))), CAST(((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC), ((((vt0.c0) NOT NULL))OR(x'')) LIMIT 27287719 OFFSET 920340015;SELECT DISTINCT (((('-695334117')AND(((vt1.lid)!=(vt1.c0)))))AND((vt0.c0 IN ()))) FROM vt0 WHERE ((((((((0.7355356389305078)) BETWEEN ((x'')) AND ((1330478010))))OR(((NULL)IS NOT(0.9258802427635809)))))AND((((('ge')OR(0.1999639154899241)))AND(-6.95334117E8))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB('1732924734'))) OVER ( ORDER BY vt1.lid  NULLS FIRST, ((IFNULL(vt1.c0, vt1.c1))OR(SQLITE_VERSION()))) FROM vt0;SELECT DISTINCT ((((vt1.c0) ISNULL)) IS FALSE) FROM vt1, vt0 WHERE (UPPER(DISTINCT (NULL IN ()))); -- 0ms;
SELECT DISTINCT ((((vt1.lid)AND('-385570527')))AND((~ (vt1.c1)))) FROM vt1 WHERE ((('-988883499' COLLATE RTRIM)|((NULL IN ('915064791'))))) LIMIT -1711426767 OFFSET -235443924; -- 0ms;
SELECT (- (CAST('0.44283361023111734' AS INTEGER))), x'', (((+ (vt1.c0))) NOT BETWEEN (x'') AND (vt0.c0 COLLATE BINARY)) FROM vt0, vt1 WHERE ((((((((('' COLLATE RTRIM)AND((912227737 IN ('-1183994972')))))AND(CAST('699896605' AS INTEGER))))AND(((0.7144293679433608)*(x'')))))AND(CASE 'K'  WHEN '㊇V>꽃f\r' THEN x'' WHEN '93639214' THEN x'' WHEN x'' THEN x'ca89ec6d' END))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt1.lid) OVER () FROM vt0 WHERE (((CASE WHEN 2.069494226E9 THEN 0.709482323599017 ELSE 40737511 END) NOT BETWEEN (CASE x''  WHEN NULL THEN NULL END) AND (('%S)gR垄' IN ())))) ORDER BY 'lꪄ/lu1d' ASC  NULLS LAST;SELECT UPPER(DISTINCT CAST(vt0.c0 AS REAL)) FROM vt1 WHERE (((('Ｑ]#_1' IN (''))) NOTNULL)) GROUP BY (~ (((vt1.c0)<<(vt1.lid)))), (((('2098183355')*(vt1.c0))) NOT NULL), (~ (((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c1)))), vt0.c0, CAST(((((((((vt1.lid)AND(vt1.c0)))AND(x'')))OR(vt0.c0)))AND(vt1.lid)) AS BLOB) HAVING (NOT (CAST(vt1.c0 AS REAL)));SELECT DISTINCT ((((((((((vt0.c0)AND(vt1.c1)))AND(vt0.c0)))AND(vt1.lid)))OR(vt1.c0)))|((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))), vt1.c0, ((((vt1.lid) NOT NULL))<=(vt1.c0)) FROM vt0 WHERE ((~ (JULIANDAY(NULL, x'3e00', NULL))));SELECT DISTINCT ((CASE vt1.c1  WHEN x'68be' THEN vt1.c0 ELSE vt0.c0 END)IS NOT(CASE WHEN vt1.c1 THEN vt1.c0 ELSE '631488227' END)) FROM vt0;SELECT ((CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 END) ISNULL), ((((vt1.c0) NOT NULL))<=(vt1.c0)), (((vt0.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((UPPER(DISTINCT '-1603718861'), CAST(vt1.c1 AS NUMERIC), MAX(vt1.lid))) AND ((vt0.c0 COLLATE RTRIM, ((vt1.lid) NOT NULL), ((vt1.c1)>(vt1.c1))))), ((((x'') BETWEEN (vt1.lid) AND (vt1.c0)))<=(((vt0.c0) ISNULL))), ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)))*(NULLIF(vt0.c0, vt1.c1))) FROM vt1 WHERE ((- (CAST(NULL AS TEXT))));SELECT json_extract(NULL COLLATE BINARY, x''), (~ (((vt0.c0)+(vt1.c0)))), (((((vt1.c1))<=(('68302359')))) BETWEEN (CASE WHEN vt1.lid THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 END) AND (((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c1))=((vt0.c0)))) BETWEEN (CAST(vt1.lid AS BLOB)) AND ((~ (vt0.c0)))) FROM vt0 WHERE ((NULL IN ()) COLLATE BINARY);SELECT ((vt0.c0)LIKE(((vt1.c0) IS TRUE))), CAST(((vt1.lid)==(vt1.lid)) AS INTEGER), ((((((((0.558315444769746)AND(vt1.c0 COLLATE BINARY)))OR(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.lid END)))OR((((-1598538941)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))OR(')')) FROM vt0, vt1 WHERE (CAST(NULL AS INTEGER) COLLATE NOCASE) ORDER BY CASE ((vt0.c0)GLOB(vt1.c1))  WHEN ((vt1.lid)IS(vt1.c1)) THEN ((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) WHEN NULL THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END WHEN ((vt1.lid) IS TRUE) THEN ((vt1.lid) NOTNULL) END; -- 1ms;
SELECT DISTINCT (0.43319553706680236 IN ()), ((((LIKE(vt1.c0, vt1.c1, 'u'))AND(((((vt1.lid)OR(NULL)))OR(vt1.c0)))))OR(vt0.c0 COLLATE RTRIM)), ((vt1.lid)<(CAST(vt1.c0 AS INTEGER))) FROM vt0 WHERE (((((x'') ISNULL)) NOTNULL));SELECT DISTINCT (- (-1734919374)) FROM vt0; -- 0ms;
SELECT (((vt0.c0 IN ())) BETWEEN (vt1.c1) AND (LOWER(vt1.c1))), (((((vt1.c0)AND(vt1.lid)))AND(vt1.c1)) IN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c1)))), DENSE_RANK() OVER () FROM vt0, vt1 WHERE ('93639214'); -- 0ms;
SELECT CASE WHEN TOTAL(vt1.lid) THEN LIKELY(DISTINCT vt1.c1) WHEN 0.8108625771050293 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)) WHEN 0.406054075819425 THEN (vt1.c0 IN ()) END FROM vt0, vt1 WHERE (((0.9992516098967678)IS NOT('-1545776285')) COLLATE NOCASE); -- 0ms;
SELECT COUNT(vt1.c0) FROM vt1; -- 0ms;
SELECT DISTINCT vt0.c0, (vt1.c1 IN ((vt0.c0 IN ()), vt1.c0 COLLATE RTRIM)), (((('920340015')+(vt1.c0)))>>((((vt0.c0))>=((vt1.lid))))) FROM vt0, vt1 GROUP BY ABS(DISTINCT (+ (vt1.lid))) HAVING ((((vt1.c1)AND(((vt1.lid) NOTNULL))))AND(CAST(vt0.c0 AS TEXT))); -- 0ms;
SELECT DISTINCT (+ ((vt1.lid IN ()))) FROM vt1; -- 0ms;
SELECT DISTINCT '0.576995525390313' FROM vt0 WHERE (((((0X5b8e68b8) NOTNULL))||(((-4.51150031E8)-('650154020'))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)AND(vt0.c0)))OR(vt1.lid)) IN ()), ((((NOT (vt0.c0))))=((((vt0.c0)GLOB(vt0.c0))))), ((((vt1.lid) ISNULL))&((((((((('-1899775365')AND(vt0.c0)))AND(vt1.lid)))AND(vt1.c0)))OR(vt1.lid)))) FROM vt1;SELECT DISTINCT ((vt1.c1 COLLATE NOCASE) NOT BETWEEN ((vt1.c1 IN ())) AND ((vt1.c0 IN (vt1.c1)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.lid)+('')))+('-1188254235')) FROM vt0 WHERE ((~ (((0.997466454643221)GLOB(0.07577343358274702)))));SELECT DISTINCT ((((((vt1.lid)OR(vt0.c0)))AND(vt1.c0)))<=('')) FROM vt0, vt1 WHERE ((((((x'', -74133183, 0xffffffff932b4c63)) NOT BETWEEN ((0.5941992528012777, -810374147, '')) AND ((-1.9313317E7, '-1140400057', '-665012029')))) BETWEEN (CAST(NULL AS REAL)) AND (CASE WHEN '1245717062' THEN 0.2603200864630014 ELSE '1650343567' END))); -- 0ms;
SELECT (((vt1.c1)) NOT BETWEEN (((((vt1.lid)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))) AND ((vt1.lid COLLATE BINARY))) FROM vt1 WHERE (((((NULL) BETWEEN ('-z}೻{횸w') AND (NULL))) IS TRUE)) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN load_extension(vt0.c0) WHEN TIME(vt0.c0, vt1.c0, vt0.c0) THEN '-1830703830' WHEN ((vt1.c1)>=(vt1.lid)) THEN vt0.c0 ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)) END;SELECT (+ (x'')) FROM vt0, vt1 WHERE (LIKELIHOOD(DISTINCT (((x'9e46')) NOT BETWEEN ((0.6863786249643977)) AND (('k,'))), 0.3388447533757346)); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((- ((('0.918010445470629')<<(NULL))))) ORDER BY NULL  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt1.lid)=(vt1.lid)))&(CASE WHEN vt1.lid THEN vt1.c0 END)) FROM vt0 WHERE (((RTRIM(x'')) ISNULL)) ORDER BY ((((vt1.c1)%(vt1.c1))) IS TRUE), CAST('' AS TEXT)  NULLS LAST, CASE WHEN CASE WHEN '' THEN vt1.c1 END THEN CAST(vt1.c0 AS INTEGER) ELSE (- (vt1.c0)) END;SELECT ((CASE WHEN vt1.c0 THEN vt1.lid END) BETWEEN (CAST(vt1.c1 AS TEXT)) AND (MAX(vt1.c0))), ((((TOTAL(0.46975180266330374))OR(CASE vt0.c0  WHEN 0x29b7931d THEN vt1.lid WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 ELSE vt1.lid END)))OR(CAST(vt0.c0 AS INTEGER))), x'' COLLATE BINARY COLLATE RTRIM, CAST((- (vt1.c1)) AS REAL), ((((((((((((vt1.c0 COLLATE RTRIM)AND(((vt0.c0) NOTNULL))))OR(vt1.c0)))OR(((vt1.c0)|(vt1.c1)))))OR(CAST(vt0.c0 AS REAL))))AND(((((vt0.c0)OR('1732924734')))AND(x'')))))AND(((vt1.c1) NOT BETWEEN (x'') AND (vt1.c1)))) FROM vt0, vt1 WHERE ((((-423168127, 'Fi', '[>')) BETWEEN ((CASE 'f1(ꂃ82'  WHEN 2.04648783E9 THEN '' WHEN NULL THEN 'ﾣ/' WHEN NULL THEN x'' WHEN 0.002871720389501786 THEN x'5659' WHEN x'' THEN NULL ELSE '-1033921919' END, 0.3415787628307686 COLLATE RTRIM, ((NULL)AND(x'9655')))) AND (((NULL IN ()), (('	Ca5_') BETWEEN (-1671768675) AND (x'')), ((0.1249113781987844)||(NULL)))))) GROUP BY vt0.c0; -- 0ms;
SELECT ALL SUM((((vt1.lid))=((vt1.lid)))) FROM vt1 WHERE ((('z!')+((((0.8521799095989093, NULL, 'Cv3'))=((x'', 6.8302359E7, -1.899775365E9)))))) GROUP BY ((CAST(vt0.c0 AS TEXT))>>(x'fa897b2f')), (+ ((((vt0.c0))<=((vt1.c0))))), CAST(((vt0.c0)/(vt0.c0)) AS REAL);SELECT (+ (CAST(vt1.lid AS NUMERIC))) FROM vt1 WHERE (TRIM(((NULL) NOT BETWEEN (0.29056292231114145) AND (NULL)))) GROUP BY (~ (((((((((vt0.c0)AND(vt0.c0)))OR(vt1.lid)))AND(vt0.c0)))OR(vt1.c0)))) HAVING (((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, (((vt1.c1))<=((vt1.c1))), ((vt1.c1)IS(vt0.c0)))) AND (((vt1.lid IN ()), vt1.c0, ((vt1.lid) NOT NULL))));SELECT DISTINCT ((((MIN(vt1.lid))AND(((vt0.c0) ISNULL))))OR(((vt1.c1) BETWEEN (NULL) AND (0.8451408714631047)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (((((vt1.lid)OR(vt1.lid)))AND(vt1.c1)) IN ())) FROM vt0, vt1 WHERE (((x'' COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((vt1.c0) NOT NULL))) AND ((((vt1.lid) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt1 WHERE ((~ (0.568729763713375)));SELECT ALL 0.1779879002462389 FROM vt0 WHERE (((IFNULL(0.6863786249643977, '68302359'))/(x'' COLLATE RTRIM))) LIMIT 611450358 OFFSET -1163326147; -- 0ms;
SELECT DISTINCT ((SUM(vt1.c0)) NOT BETWEEN (((((((((vt1.c0)AND(vt1.lid)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c1))) AND ((NULL IN ()))) FROM vt0, vt1 LIMIT -1598538941; -- 1ms;
SELECT DISTINCT (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)) IN ()) FROM vt0 WHERE (((((0X5a20b4c6))=((x''))) IN ())) GROUP BY (((vt1.c0) IS FALSE) IN (vt1.c0, ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)))), vt1.c1, ((TRIM(DISTINCT vt1.c1)) NOT BETWEEN (((((vt1.c0)OR(vt1.lid)))OR(vt1.lid))) AND (HEX(vt1.c1))) HAVING ((((CAST(vt1.lid AS NUMERIC))OR((vt1.c0 IN ()))))AND(vt0.c0));SELECT DISTINCT (+ (((((((((vt1.lid)OR(vt1.c1)))AND(vt0.c0)))AND('-1643822577')))AND(vt1.c1)))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((CAST('-1899775365' AS INTEGER))%((((vt1.lid, '', vt1.c1, vt0.c0, vt1.c0))<>((vt1.lid, NULL, vt1.lid, vt0.c0, vt1.c0))))) FROM vt0;SELECT ALL ((NULLIF(vt0.c0, vt1.lid)) NOTNULL) FROM vt1, vt0 WHERE (((((0.9133177649191135)=(NULL))) ISNULL)); -- 0ms;
SELECT ALL CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt0.c0)=(vt1.c0)) END FROM vt1;SELECT DISTINCT '-1913249405' FROM vt0, vt1; -- 0ms;
SELECT ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)) COLLATE NOCASE FROM vt1 WHERE ((((MAX(0.6559623010647506, x'f352'), (NULL IN (x'd3f9', '-2110377585')), ((((NULL)OR(0x6a386168)))AND(x''))))<=(((('')!=('-1862978326')), TRIM(-2.106698426E9), CAST(NULL AS INTEGER)))));SELECT DISTINCT ((((vt1.lid) BETWEEN (vt1.c1) AND (vt1.c0)))<>(((vt1.lid)<<(vt1.lid)))) FROM vt1, vt0 ORDER BY ((((vt1.c1 COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt1.lid AS INTEGER))) ASC, vt0.c0  NULLS LAST; -- 1ms;
SELECT DISTINCT (((- (vt1.c0)))|((vt1.lid IN (vt1.c0)))) FROM vt1 WHERE (CAST(CASE '-1673950759'  WHEN x'' THEN '0.9766590646037214' ELSE 0x16552972 END AS BLOB)); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c1 THEN 0.08318438800471706 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 END)>=(vt0.c0)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT MAX((+ (vt0.c0))) FROM vt0, vt1 WHERE (((x'') NOTNULL) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT (((((vt1.c0))<>((vt1.c0))))|(((vt1.c1) IS TRUE))) FROM vt0, vt1; -- 0ms;
SELECT ((((vt1.c1) NOT NULL))+((vt0.c0 IN (vt1.c1, vt1.lid)))), ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.lid END) NOT BETWEEN ((vt0.c0 IN (vt1.lid))) AND (((0.421589284972986)+(vt0.c0)))), ((MAX(vt1.lid)) IS TRUE), CAST(CAST(vt0.c0 AS TEXT) AS TEXT), TOTAL(((vt1.lid) ISNULL)) FILTER(WHERE ((((vt1.lid) IS TRUE)) IS TRUE)) OVER ( ORDER BY (vt1.c1 IN ())  NULLS LAST) FROM vt0;SELECT DISTINCT CASE vt1.c1 COLLATE RTRIM  WHEN ((vt1.c1)GLOB(vt1.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 END WHEN LIKELY(vt1.c1) THEN vt0.c0 COLLATE RTRIM WHEN ((vt1.c1) NOTNULL) THEN ((vt1.lid)IS(vt1.lid)) ELSE ((vt1.lid) NOT BETWEEN (vt0.c0) AND (0.7926006727129323)) END FROM vt0, vt1; -- 0ms;
SELECT (((((vt1.lid, vt1.c1, NULL))>((vt1.c1, '', vt1.c0)))) NOT BETWEEN (((((vt1.lid)AND(vt1.c1)))AND(vt1.c1))) AND (IFNULL(vt1.c0, vt1.c1))), (((vt1.lid) NOTNULL) IN (((vt1.lid) NOT BETWEEN (vt1.c1) AND ('-173092220')), vt0.c0 COLLATE NOCASE)), CAST(((((vt0.c0)AND(vt1.c1)))OR(vt1.c0)) AS INTEGER) FROM vt1 WHERE (TYPEOF(DISTINCT ((0x4e5abfbe)<<(0.5512504300586258))));SELECT DISTINCT COUNT(COUNT(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1, vt0 WHERE (NULL) ORDER BY ((((vt1.lid) IS TRUE)) NOTNULL);SELECT ((vt1.c1)IS(((((((((vt0.c0)OR(vt0.c0)))OR(x'')))OR(vt1.lid)))OR(vt1.c0)))) FROM vt1, vt0 WHERE ((((NULL, 1.82597332E9, '-464186178')) BETWEEN ((NULL, LOWER(DISTINCT x''), (('1793024206')IS NOT(0.5905298355196542)))) AND (((((((((('?M*')OR(x'')))OR('T]V')))OR('-1491501991')))OR(0.918010445470629)), CASE WHEN '207278300' THEN '<x乬P' END, ((-360307089) NOT NULL))))); -- 0ms;
SELECT DISTINCT (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))))|(((((vt1.c1)AND(vt1.lid)))AND(vt0.c0)))), ((((vt1.c1 COLLATE NOCASE)OR(COUNT(1.906552992E9))))OR(NULL)), TOTAL(((x'')>>(vt1.c1))) FROM vt0, vt1 WHERE (('2111835387' COLLATE NOCASE IN ())) LIMIT 397526944 OFFSET -749585494; -- 0ms;
SELECT CASE WHEN CAST(vt1.c0 AS INTEGER) THEN '' ELSE (((vt1.lid))<>((vt1.c1))) END FROM vt1, vt0 ORDER BY CASE vt1.c0  WHEN ((vt1.c1) NOT NULL) THEN (((vt1.lid))>=((vt1.c1))) END DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((MAX(vt1.lid)) NOT BETWEEN (MIN(vt1.c1)) AND (CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN '-1988453081' END)), (((((vt1.lid)<=(vt1.c1)), ('' IN ()), (vt1.lid IN (vt0.c0, vt1.lid))))<((CAST(vt1.lid AS INTEGER), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)), (vt1.lid IN ())))), COUNT(*) OVER () FROM vt0, vt1 WHERE (((('189570111')GLOB('')) IN ())); -- 0ms;
SELECT CASE (((vt1.c0))<=((vt1.lid)))  WHEN (((vt1.c0))>=((0.5940714535920901))) THEN vt1.c1 END, ((((vt1.lid) IS FALSE)) BETWEEN (vt1.c0) AND ((~ (vt1.c1)))), vt0.c0 FROM vt1;SELECT DISTINCT CASE WHEN (vt1.c0 IN ()) THEN CASE vt1.lid  WHEN vt1.lid THEN vt0.c0 WHEN vt1.c1 THEN vt1.lid WHEN vt0.c0 THEN vt1.c1 WHEN vt1.lid THEN x'' WHEN vt1.c1 THEN vt0.c0 ELSE 207278300 END ELSE CAST(vt1.c1 AS NUMERIC) END FROM vt1;SELECT ALL CASE ((vt1.lid) IS TRUE)  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) WHEN (NOT (vt1.lid)) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) WHEN (+ (vt1.c1)) THEN json_array(vt1.c1, vt0.c0) END FROM vt1 WHERE (CASE WHEN (('0.08948460681755588')>(x'677e')) THEN (('-570113840')-(NULL)) WHEN CAST(x'cf3d' AS NUMERIC) THEN CASE '-1545776285'  WHEN x'30b0' THEN NULL ELSE 'b4' END WHEN (((NULL))<=((0Xfffffffff7479802))) THEN 0.5367188810536476 END) GROUP BY (vt0.c0 COLLATE RTRIM IN ()), ((0.4399204775698856) BETWEEN (HEX(vt0.c0)) AND (vt1.c1)), (((((((vt1.lid)OR(vt0.c0)))AND(vt1.lid))))>=((vt0.c0))) HAVING x'';SELECT DISTINCT vt1.c0 COLLATE BINARY, ((((((vt1.lid) IS FALSE))OR(((vt1.c1)|(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))), CASE CASE WHEN vt0.c0 THEN vt1.c1 END  WHEN vt1.c1 THEN CASE vt0.c0  WHEN vt1.c1 THEN '[<ib' ELSE vt1.c0 END END, CAST(((vt1.lid) IS TRUE) AS NUMERIC), UPPER(DISTINCT CAST(0.6768925919196653 AS NUMERIC)) FROM vt0, vt1 WHERE ((((('-0.0') NOTNULL))>((~ ('1588872746'))))); -- 0ms;
SELECT (+ ((NOT (vt1.c0)))) FROM vt0 WHERE (((CAST(0X29b7931d AS TEXT)) BETWEEN (((0Xffffffffb93e9c0e)<>(0xffffffffb6bb41be))) AND ((((('-846581339')AND(-1839737463)))OR(x'')))));SELECT DISTINCT NULL, ((((vt1.lid) NOT NULL)) ISNULL), GROUP_CONCAT(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid))), ((CASE WHEN vt1.lid THEN vt1.lid END)&(((vt0.c0) NOTNULL))), 0xffffffffe51bff31 FROM vt1 WHERE ((((0.22870122607480026, x'c1a2', 0.5213667609318094)) NOT BETWEEN ((((((NULL)OR(x'')))OR('')), (NULL IN (1.743537155E9)), 0Xfffffffffd04c570)) AND ((CASE WHEN '-570113840' THEN NULL WHEN NULL THEN 0.36195761488616485 WHEN -1877054887 THEN 0.08699164876451715 ELSE -1.62416899E9 END, -278913902 COLLATE BINARY, (('&B')AND('}H髧iey2'))))));SELECT ((((((vt0.c0)AND(vt1.lid)))AND(vt0.c0)))-(vt0.c0 COLLATE NOCASE)) FROM vt1 WHERE (((NULL COLLATE BINARY)>=(CASE WHEN '1683237034' THEN NULL WHEN x'ffd5' THEN 0.7200680825655721 WHEN '໷g' THEN 0.38605553402442894 ELSE '-50018960' END)));SELECT DISTINCT MIN((vt1.c1 IN ())), -1570015368, (((vt1.c1 IN ())) IS FALSE) FROM vt1; -- 0ms;
SELECT ALL (~ (vt1.c0)) FROM vt0 WHERE (((x'')-('{')) COLLATE NOCASE);SELECT ALL (((CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.lid, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c1)) AND ((vt1.lid, vt1.c0, vt1.c1))), CASE vt1.lid  WHEN NULL THEN vt1.c0 END))>(((+ (vt1.lid)), ((vt1.c0)%(vt1.lid)), ((vt1.c0) IS TRUE)))) FROM vt1, vt0 WHERE (((((((((((((0.7684179851561118)OR('ON')))AND(-140054085)))AND(('1793024206' IN ()))))OR((-1445407550 IN ()))))AND(TOTAL_CHANGES())))OR(CAST(-1.9313317E7 AS TEXT)))); -- 0ms;
SELECT ALL CASE WHEN TRIM(DISTINCT vt1.lid, vt1.c1) THEN ((vt1.c1) ISNULL) END FROM vt0 WHERE ((((((x'e990') IS FALSE), 0.9045387080108584 COLLATE RTRIM, ((0xffffffff84b1a717)+(0.42300863446613124))))>=(((((('82303331')OR('-552167029')))AND('2069494226')), ('-66245542' IN ()), '-1e500'))));SELECT DISTINCT (NOT (vt1.c0)) COLLATE RTRIM FROM vt0;SELECT DISTINCT ROUND(vt0.c0, (vt1.c0 IN ())) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((((UPPER(vt1.c0))AND(vt1.lid COLLATE BINARY)))AND(((vt1.c0)>>(vt1.c0)))))AND(((((vt1.lid)AND(vt1.c1)))AND(vt1.c1)))))OR(((vt1.c1) IS FALSE))) FROM vt1 WHERE ((((('0.016588022915202227') NOT BETWEEN ('-1228787065') AND ('1955872770'))) NOTNULL)); -- 0ms;
SELECT (- (((vt1.c1) ISNULL))), (NOT ((vt0.c0 IN (vt1.c0)))), vt1.c1, vt1.c0, HEX((+ (vt1.lid))) FROM vt0, vt1; -- 0ms;
SELECT (((- (vt1.c1))) ISNULL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT '840653726' FROM vt0 LIMIT -364039077 OFFSET 1910862741; -- 0ms;
SELECT DISTINCT MIN(AVG(((vt1.c0)*('6v')))) FROM vt1;SELECT DISTINCT SUM(0.9094974482705511) OVER ( ORDER BY ((((~ (vt1.c0))))<((((vt1.c0)%(vt1.lid))))), ((vt1.lid)-((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT NULL)) IS FALSE) FROM vt1 WHERE (load_extension(((x'')OR('FKwsw'))));SELECT DISTINCT CASE GROUP_CONCAT(0.7452702156287553)  WHEN ((vt0.c0) NOTNULL) THEN CAST(vt1.lid AS INTEGER) ELSE ((vt1.c0)+(vt1.lid)) END FROM vt1, vt0 WHERE (((((x'') BETWEEN (638369609) AND (0.06929645306356647))) NOTNULL)) LIMIT 741514174; -- 0ms;
SELECT DISTINCT LOWER((vt1.lid IN ())) FROM vt0 WHERE (CASE WHEN NULL THEN NULL END COLLATE NOCASE) ORDER BY ((vt1.lid COLLATE RTRIM)||(((0x65751e44)-(vt1.c1))));SELECT DISTINCT (((~ (vt1.c1)))+(((vt1.c1)IS(vt1.c0)))) FROM vt0 NOT INDEXED;SELECT DISTINCT HEX(vt0.c0) COLLATE RTRIM FROM vt1, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))<(NULL)), ((((vt1.c0) NOT NULL)) IS TRUE), vt1.lid, (((('-322728564' IN ()), ((vt1.c0) ISNULL), (((vt1.lid))<((vt0.c0)))))>((((vt0.c0)>>(vt1.c0)), ((vt1.lid)IS NOT(vt1.c0)), vt1.c1))), ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL) FROM vt0, vt1 WHERE ((NULL IN (((('')) BETWEEN (('')) AND ((0.7224725799972082))), ((((x'')OR(x'')))OR('1070456822'))))); -- 0ms;
SELECT CAST(x'' AS NUMERIC) FROM vt0, vt1 WHERE (((x'')<=(x'')) COLLATE RTRIM) GROUP BY ((((((((NULL)OR(LIKELY(DISTINCT vt1.c1))))OR(((vt1.lid)&(vt0.c0)))))AND(((vt1.c0)IS(vt1.c0)))))OR(-1.264230466E9)); -- 0ms;
SELECT DISTINCT LAG((- (((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c1)))), ((((((((((vt1.c1)==(760131464)))OR(((vt1.lid) NOTNULL))))OR(vt1.c0)))AND(((vt1.c1)>>(vt1.c0)))))AND(CAST(vt1.c0 AS REAL))), (vt1.lid IN ('299779054', vt1.c0 COLLATE BINARY))) OVER (), (((vt1.lid)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((GROUP_CONCAT(vt1.c0)))), -1545776285 FROM vt1;SELECT ALL UPPER(MAX(vt1.c1)) FROM vt1, vt0 WHERE ((NOT ((0.33147916215718365 IN ())))); -- 1ms;
SELECT DISTINCT LIKELY(CAST(vt0.c0 AS BLOB)) FROM vt0 WHERE ((0.9111013630971767 IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)+(vt1.lid)))) FROM vt0, vt1; -- 0ms;
SELECT NULL, (((vt1.c1, '-488530892', vt1.lid)) BETWEEN ((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0)), ((vt0.c0)LIKE(vt1.c0)), ((vt1.c1)-(vt1.c0)))) AND ((STRFTIME(vt0.c0, x'', vt1.c1), ((vt1.c1)<(vt1.lid)), ((NULL) NOTNULL)))), ((((NULL)&(vt0.c0))) NOT BETWEEN ('814020045') AND (CAST(vt1.c0 AS BLOB))) FROM vt1, vt0 LIMIT -1731872024 OFFSET -1270897288; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((CASE WHEN 0xffffffffbcbc9d8c THEN vt1.c0 END)) AND ((((((vt1.c0)AND(vt1.lid)))OR(vt0.c0))))), '2005752997', ((((((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)))OR('-1624168990')))OR(((((vt1.lid)AND(vt1.lid)))OR(vt1.c0)))) FROM vt0, vt1 WHERE (UNLIKELY(((x'') IS TRUE))) LIMIT -1037097947 OFFSET 1210289864; -- 0ms;
SELECT ALL NULL FROM vt1 WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((x''))))LIKE((NOT (0.9802200284238632))))); -- 0ms;
SELECT ALL SUM(((((vt1.lid)OR(-655011856)))AND(vt1.c1))) FROM vt0, vt1 WHERE (((CAST(x'7ce9' AS BLOB))==((('jcz-q')==('82303331'))))); -- 0ms;
SELECT ((((vt1.lid) NOTNULL)) ISNULL) FROM vt1; -- 0ms;
SELECT DISTINCT SUM((((vt1.lid, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, x'40f8', vt0.c0)) AND ((vt1.lid, vt1.lid, x'')))) FROM vt1, vt0 WHERE (RTRIM(((x'')>=(0.12762722812831084)))) ORDER BY CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC) ASC LIMIT -1600931312 OFFSET -1584389162; -- 1ms;
SELECT LAST_VALUE(((((NULL)LIKE(vt0.c0)))==(vt0.c0))) OVER () FROM vt0 WHERE (CASE json_array_length('')  WHEN (1607573054 IN ()) THEN LOWER(NULL) END) GROUP BY CAST(UNLIKELY(DISTINCT vt1.c0) AS REAL) HAVING ((vt1.lid COLLATE BINARY) NOTNULL);SELECT DISTINCT vt1.lid FROM vt1 WHERE (((NULL)LIKE(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c1) IS TRUE)) OVER ( ORDER BY ((((vt1.c1)%(vt1.lid))) BETWEEN (json(vt1.c0)) AND (LOWER(vt1.c0)))  NULLS LAST) FROM vt1, vt0 GROUP BY ((vt1.lid COLLATE NOCASE) NOT BETWEEN ((vt1.c0 IN (vt1.c1, x''))) AND (vt1.lid COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.lid)) THEN ((vt0.c0) ISNULL) END FROM vt1;SELECT DISTINCT HEX(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.lid))) FROM vt0, vt1 ORDER BY ((2.99779054E8) NOT NULL)  NULLS LAST; -- 0ms;
SELECT CAST(vt1.c1 AS NUMERIC) COLLATE BINARY FROM vt0 WHERE (0x3aa95224);SELECT ALL AVG(((((((((vt1.c0)OR(vt1.lid)))AND(0.1686557666334656)))AND(vt1.c1)))AND(vt1.c0)) COLLATE BINARY) FILTER(WHERE (NOT (((vt1.lid)<(vt1.c1))))) OVER () FROM vt0;SELECT ((((vt1.lid)GLOB(vt1.lid)))<=(((((vt1.lid)OR(vt1.lid)))OR(vt1.c1)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT UNICODE(HEX(DISTINCT vt0.c0)) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT CAST(CAST(vt1.c1 AS TEXT) AS TEXT) FROM vt0;SELECT CUME_DIST() OVER () FROM vt1 GROUP BY '-760530460' COLLATE RTRIM, ((((((vt1.c0)AND(vt0.c0)))OR(vt1.lid))) ISNULL), ((vt1.lid) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c1) NOT BETWEEN ('82303331') AND (vt0.c0)))) HAVING '';SELECT (((vt1.lid IN ()))OR(vt0.c0)), ((((vt1.c1) NOTNULL))OR(CAST(vt1.lid AS TEXT))), LEAD(((CASE WHEN -1112282003 THEN vt1.c1 ELSE vt1.c0 END)<=(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.c1)))), CASE WHEN vt1.c1 THEN vt1.lid END, NULLIF(DISTINCT ((vt1.lid)|(vt1.c1)), CAST(vt1.lid AS BLOB))) OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1, vt0 ORDER BY (NOT (((vt1.lid)OR(vt1.lid)))) ASC  NULLS FIRST, -5.7011384E8 DESC  NULLS FIRST, ((CAST(vt1.lid AS TEXT))>=((((vt1.lid, x'', 1.414114861E9)) NOT BETWEEN ((vt1.c1, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c0))))) DESC  NULLS LAST; -- 0ms;
SELECT TOTAL((vt1.c1 IN ())) FROM vt0; -- 0ms;
SELECT ALL ABS(((vt1.lid) NOTNULL)) FROM vt0 WHERE (x'fa7f');SELECT DISTINCT LIKELY(LIKELY(DISTINCT vt0.c0)) FROM vt1, vt0 WHERE (SQLITE_VERSION()) GROUP BY CAST(vt1.lid AS BLOB), ((CAST(vt1.lid AS INTEGER))>>(((vt1.c0)IS NOT(vt1.c1)))), (((vt1.lid)) NOT BETWEEN ((MAX(vt0.c0, vt1.lid))) AND ((vt1.c1 COLLATE BINARY))) LIMIT 1863566467; -- 1ms;
SELECT DISTINCT NTH_VALUE(vt1.c0 COLLATE NOCASE, (- (CASE WHEN vt1.lid THEN vt1.c1 WHEN vt1.c1 THEN 0.6757684360785846 WHEN vt1.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c1 END))) OVER (), (((vt1.lid))=((-860168370))) COLLATE RTRIM, MAX(((('', vt1.lid, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND (('-1', vt1.c0, vt1.c0)))) FROM vt1;SELECT NTH_VALUE('-1440705535', ((((x'a04f')OR(((vt1.c1) BETWEEN (NULL) AND (vt1.lid)))))OR(((vt1.lid)*(vt1.lid))))) OVER (), vt1.c0, ((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)) COLLATE BINARY FROM vt0, vt1 ORDER BY ((vt1.lid) NOT NULL) ASC  NULLS FIRST; -- 0ms;
SELECT ((COUNT(*)) NOT NULL) FROM vt0; -- 0ms;
SELECT ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (((((vt1.c1)AND(vt1.c0)))OR(vt1.c0))) AND ((vt1.c1 IN ()))) FROM vt0, vt1 ORDER BY ((((vt0.c0 IN (vt1.c0))))=((((vt0.c0) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((((vt1.c0, vt1.c0, vt1.lid))>((vt1.c1, vt1.c1, vt0.c0))))||(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.lid)))), ((x'')LIKE((((vt1.c0))!=((vt1.lid))))), ((NULL)==(((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c0)))) FROM vt1 CROSS JOIN vt0 ON ((UPPER(DISTINCT vt0.c0)) NOT NULL); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS BLOB)  WHEN CAST('2064291077' AS REAL) THEN vt1.c0 COLLATE BINARY WHEN vt1.c0 THEN COUNT(*) WHEN '' THEN (vt1.c1 IN (vt1.lid)) END FROM vt0 WHERE ((((x'')) BETWEEN ((TRIM(DISTINCT x''))) AND ((((x'6613')>>(NULL))))));SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((vt1.c0 IN ())) AND ((((vt1.c1))>((vt1.lid))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c1)*(vt1.lid)))AND(((vt1.c1)|(vt0.c0)))))AND((+ (vt0.c0)))))AND((NOT (vt1.lid)))))AND(vt1.c0 COLLATE BINARY)) FROM vt1 WHERE ((((NULL, '-643229165', x'')) BETWEEN ((CASE 0x76738fb5  WHEN x'2974' THEN x'' WHEN 0Xffffffffa77dedd9 THEN 1584313950 WHEN 0x4f4d7bba THEN x'' END, (((x'', 0.10014718299451542, '')) BETWEEN ((x'', 2088959229, NULL)) AND ((x'b858', '-975389712', NULL))), ((0.753837492578309)LIKE('ojH꽘)j\n6/')))) AND ((CHAR(NULL, NULL, NULL), (NOT (' ⵒ')), CASE WHEN '1609804020' THEN NULL WHEN NULL THEN '' WHEN x'' THEN 0.024961960295628804 ELSE 0Xffffffffc478e102 END)))) GROUP BY (((vt0.c0) NOT NULL) IN ()) HAVING 0.1796079080837627;SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (json_array(9.3639214E7, vt1.c0, vt1.lid, vt1.c1)) AND (((0.6199750686588209) NOT BETWEEN (vt1.lid) AND (vt1.lid)))), CASE WHEN json_array_length(vt0.c0) THEN NULL COLLATE BINARY END, (((((((((((((((vt1.c0))==((vt1.c1))))AND(((vt1.lid) NOT NULL))))OR(rtreenode(vt0.c0, vt1.c0))))AND(vt1.c0 COLLATE BINARY)))AND(TRIM(vt0.c0))))AND(((vt1.c1)=(vt0.c0)))))AND((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))) FROM vt0, vt1 GROUP BY ((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)))<<(CAST(vt1.c0 AS NUMERIC))); -- 0ms;
SELECT ALL vt1.lid FROM vt1 WHERE (((NULL)LIKE(0.6871210360984498 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((((vt1.lid))>((vt1.lid))), '0.6403856211865268', MIN(NULL)))=((((vt1.c0)==(0x3344e81b)), AVG(vt1.lid), vt1.lid))) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT COUNT(*) FROM vt0, vt1 WHERE ((((((('')OR('-1530523453')))OR(1.41334992E8)))OR(((((((((((((x'')AND(0.22167724555360402)))AND(1702948421)))OR(x'')))AND(0.21519495248976173)))OR(-1838950445)))OR('g6B5'))))); -- 0ms;
SELECT DISTINCT CAST('/c8' AS BLOB) FROM vt1, vt0 LIMIT 1494636742 OFFSET -1598538941; -- 0ms;
SELECT DISTINCT SUM(vt0.c0) OVER () FROM vt1, vt0 WHERE (((CAST(NULL AS REAL)) IS TRUE)) ORDER BY CAST(CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END AS REAL) DESC; -- 0ms;
SELECT vt1.lid FROM vt1, vt0 LIMIT -338389610; -- 0ms;
SELECT vt1.c1 FROM vt0, vt1 WHERE (((NULL) NOT NULL) COLLATE NOCASE) ORDER BY (+ (vt1.lid)) COLLATE BINARY COLLATE BINARY ASC; -- 0ms;
SELECT AVG(0.4759512138795612) OVER () FROM vt0, vt1 WHERE (NULL); -- 0ms;
SELECT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (IFNULL(vt0.c0, NULL))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) COLLATE NOCASE FROM vt1, vt0 WHERE ((NULL IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((vt1.c1 IN (vt1.lid, vt1.lid)) IN ()), MIN(((((vt1.c0)OR(vt1.c0)))OR('-989225411'))), MAX(((vt0.c0)/(x''))) FROM vt0, vt1 WHERE (((('-858974106' IN (NULL)))/(0.18569108886643126 COLLATE BINARY))); -- 0ms;
SELECT TRIM(vt0.c0 COLLATE BINARY, ((((vt1.c1)AND(vt1.lid)))OR(vt1.lid))), vt1.lid, CAST(((vt0.c0)GLOB(vt1.lid)) AS TEXT) FROM vt0;SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) COLLATE BINARY FROM vt0 WHERE (((((((((((((x'24c5')OR(0X235cdafd)))AND('985660651')))AND('첽	')))AND('2046487830')))AND(0.9099125613505262)))AND(NULL)) COLLATE NOCASE) LIMIT -385570527; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)%(vt1.c0)) AS REAL) FROM vt1; -- 0ms;
SELECT DISTINCT AVG(x''), CASE UNLIKELY(DISTINCT vt0.c0)  WHEN ((vt1.c0)%(vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) END, ((CASE ''  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.lid THEN vt1.lid END) NOT BETWEEN (((vt1.lid) IS TRUE)) AND (TOTAL(vt1.lid))), vt1.c1 COLLATE BINARY, ((((vt1.c1)OR(MIN(vt1.c0))))OR(LENGTH('-364039077'))) FROM vt0 WHERE (((((x''))<=((NULL))) IN (IFNULL(DISTINCT 0.9724693759447645, NULL)))) ORDER BY ((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0))) IS TRUE)  NULLS LAST;SELECT DISTINCT ((2.99779054E8)|(0.9720703473367667)) FROM vt1 WHERE ((((NOT (0x13dd0a9d)))LIKE(((NULL)<(x'b0a3'))))); -- 0ms;
SELECT (CASE vt1.lid  WHEN '-1607646936' THEN vt1.c0 ELSE vt1.c1 END IN (vt0.c0)) FROM vt1, vt0 GROUP BY TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END), vt1.c1, ((((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt0.c0)))<(vt1.lid)); -- 0ms;
SELECT ALL CAST(TOTAL(vt1.lid) AS BLOB), ((MIN(vt1.c0))OR((vt1.lid IN ()))), ((((((vt1.c1) BETWEEN (vt0.c0) AND (vt1.lid)))AND(vt1.lid COLLATE RTRIM)))AND(vt1.c0 COLLATE NOCASE)) FROM vt1 LIMIT -2106984581;SELECT DISTINCT (((~ (vt1.lid))) NOT NULL), ((((CASE vt1.lid  WHEN vt1.c1 THEN vt1.lid WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid ELSE vt1.c0 END)AND(vt1.c1)))AND((vt0.c0 IN (vt1.lid)))), (NOT (((vt1.lid)IS(vt1.c1)))) FROM vt0;SELECT DISTINCT ((((((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt1.lid)))AND(((vt1.c1) NOTNULL))))OR(((x'')LIKE(vt1.c0)))), ((CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 END) BETWEEN (((vt1.c1)LIKE(vt1.c0))) AND (((vt1.lid) ISNULL))), (((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt0.c0))))||(((((((((vt1.c1)AND(vt1.lid)))OR(vt0.c0)))OR(vt1.lid)))OR(vt1.c1)))) FROM vt0 WHERE (CAST('410695317' AS TEXT));SELECT DISTINCT vt1.c1, COUNT(((vt1.c1)*(vt1.c1))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), ((vt1.c1) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END) AND (NULL)) FROM vt0;SELECT DISTINCT LIKELY(DISTINCT '') COLLATE NOCASE, (((((((((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))AND(vt1.lid COLLATE RTRIM)))OR(((vt1.lid)=(vt1.c0)))))OR(((vt1.lid)&(vt1.c1)))))AND(MIN(vt1.c0))), (((NOT (vt1.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c1 END) AND (COUNT(vt0.c0))) FROM vt1, vt0 WHERE (((('-1988453081')) NOT BETWEEN ((((NULL)+(0x510da3c9)))) AND ((CASE WHEN 0.6497805127888839 THEN '-871987172' END)))); -- 0ms;
SELECT ALL ((MIN(vt0.c0)) BETWEEN (vt1.lid COLLATE RTRIM) AND (((vt1.c1)LIKE(vt1.c0)))) FROM vt0;SELECT DISTINCT MAX(NULL) FROM vt0, vt1 WHERE ((((((((x'')) BETWEEN ((NULL)) AND ((-174156873))))OR('-1680138653' COLLATE NOCASE)))OR(((x'') BETWEEN ('1825973320') AND (0Xffffffff84ff0fb4))))); -- 0ms;
SELECT DISTINCT (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt0.c0, ((NULL) NOT BETWEEN (NULL) AND (vt1.c0)), MIN(NULL))) AND ((((vt1.lid) NOTNULL), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.lid)), (((vt1.c1, vt1.c0, vt1.c1))>=((vt1.c0, vt1.c0, vt0.c0)))))) FROM vt0 WHERE (((CASE WHEN '' THEN '1732924734' ELSE x'' END) NOT NULL)) GROUP BY CAST(vt1.c1 AS NUMERIC) HAVING CAST((~ (vt1.c1)) AS INTEGER);SELECT CASE ((vt1.c0) ISNULL)  WHEN vt1.lid COLLATE RTRIM THEN vt1.lid END, ((CASE WHEN vt1.c1 THEN vt0.c0 END) ISNULL), ((((vt1.lid) IS TRUE)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) FROM vt1, vt0 WHERE ('iBED') ORDER BY (vt1.lid COLLATE NOCASE IN (((vt1.lid)!=(vt1.c1)))); -- 0ms;
SELECT CASE NULLIF(DISTINCT vt1.c1, vt1.c0)  WHEN ((('1330478010'))<((vt1.c0))) THEN TOTAL(vt1.lid) END FROM vt1 WHERE (LIKELY(DISTINCT (NOT (x'')))) LIMIT -1761785002 OFFSET -1624168990; -- 0ms;
SELECT DISTINCT CASE WHEN (vt1.c1 IN (vt1.c0)) THEN (((vt1.c1, vt1.lid, vt1.c1, vt1.c1, vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((vt1.c1, vt1.lid, vt1.c1, vt1.c0, vt1.lid, vt0.c0, vt1.c0)) AND ((vt1.c1, x'7e66', vt0.c0, vt1.c1, vt1.c1, vt1.c0, vt1.lid))) ELSE (vt1.lid IN ()) END FROM vt1, vt0 WHERE (((((NULL)AND((- ('|ꑕh~a')))))AND(((x'') BETWEEN (x'd4afa91a') AND (NULL))))); -- 0ms;
SELECT DISTINCT (((vt1.lid)<>(vt1.c1)) IN (COUNT(*))), COUNT(((vt1.lid)>>(vt1.c1))), (((((-3.46381951E8)<=(vt1.lid))))<>((CAST(vt0.c0 AS BLOB)))) FROM vt0 WHERE (((((76469486)-(0.7482924613232544))) NOT BETWEEN (0.6633272030743463) AND (((((((((NULL)OR('0.2601137975715383')))OR(NULL)))OR(0Xffb8bab)))OR('2Z6)L9逤[')))));SELECT GROUP_CONCAT(GROUP_CONCAT(((vt1.c1) IS TRUE))), (NOT (vt1.c1)) COLLATE BINARY, ((((vt0.c0)IS NOT(vt1.lid))) ISNULL) FROM vt0, vt1 GROUP BY ((((CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.c0 WHEN x'' THEN vt1.c1 WHEN vt1.c0 THEN vt1.lid WHEN vt1.lid THEN vt1.lid END)AND(((vt1.c1) NOT NULL))))OR(CASE WHEN vt1.lid THEN vt1.lid ELSE vt1.c1 END)) ORDER BY CAST(((vt0.c0) NOTNULL) AS BLOB);SELECT DISTINCT LAST_VALUE((- (((x'')<=(vt1.lid))))) OVER (), INSTR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)), ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))), LEAD((((((vt1.lid, vt0.c0, vt0.c0))<=((vt0.c0, vt1.c0, vt1.c1))))<<((+ (vt1.c0)))), CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt1.lid WHEN vt1.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END AS INTEGER), (((((vt1.lid))<=((vt0.c0))))AND(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0))))) OVER ( PARTITION BY vt1.c1, (vt1.c0 COLLATE BINARY IN ())) FROM vt1, vt0; -- 0ms;
SELECT CASE WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS REAL) ELSE LOWER(vt1.c1) END, ((((((((CAST(vt0.c0 AS BLOB))AND(MAX(vt1.c0))))OR(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(vt1.lid)), ((GROUP_CONCAT(vt1.c1))||((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1, vt0 WHERE ((CASE '1490817297'  WHEN x'c64b' THEN NULL END IN ())); -- 0ms;
SELECT DISTINCT ((0.18053254102718208) NOT BETWEEN (ABS(DISTINCT vt1.c1)) AND ((vt0.c0 IN (vt1.c0, vt1.c0)))), LOWER(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END), CASE vt0.c0  WHEN ((((vt0.c0)OR('1929258415')))AND(vt1.c0)) THEN (vt1.lid IN ()) WHEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c0)) THEN ((vt1.lid)%(vt0.c0)) WHEN (- (vt1.c0)) THEN MAX(NULL) END FROM vt1, vt0; -- 0ms;
SELECT ALL (CASE WHEN vt1.c1 THEN vt1.lid END IN ()) FROM vt1 WHERE ((((CASE WHEN '!f' THEN 2046487830 WHEN 0.523615410778564 THEN '333253277' WHEN x'e36a' THEN x'' END))==((0.5622374662803392)))) LIMIT -1836293427; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c1 AS INTEGER)) NOT BETWEEN (((vt1.c1)<(vt1.c1))) AND (0.7944632490791007)) FROM vt1 WHERE (0xffffffffa9051a70); -- 0ms;
SELECT DISTINCT (- (((vt1.lid) NOT BETWEEN (vt1.c1) AND (vt1.lid)))) FROM vt0, vt1 WHERE (((('', 'f鰿''', '1609804020')) BETWEEN ((((NULL)-('1555325727')), ((NULL) IS FALSE), (((754535014))==((''))))) AND ((('-2116167614' IN ()), highlight('', x'2f0c', 1.607573054E9, 2069777686), LOWER('-1269325830'))))); -- 0ms;
SELECT DISTINCT ((vt0.c0)<>(AVG(vt1.c1))) FROM vt1 WHERE ((((('ycefbꤡ~')+('-669341834'))) IS TRUE));SELECT DISTINCT DENSE_RANK() OVER (), ((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (CASE WHEN vt1.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END) AND (CAST(vt1.lid AS BLOB))), CAST(((vt1.c1)/(vt1.c0)) AS REAL), (((vt1.lid, vt1.c0, vt0.c0)) BETWEEN ((((vt1.c0) NOTNULL), CASE vt1.lid  WHEN vt0.c0 THEN vt1.lid END, 0.10492685191459572 COLLATE RTRIM)) AND ((((vt0.c0)!=(vt0.c0)), (vt1.c1 IN ()), (((vt0.c0, vt1.lid, vt1.lid)) BETWEEN ((vt0.c0, vt1.c0, vt1.c1)) AND (('Wf', vt1.c1, vt1.c1)))))), CASE CAST(vt1.c0 AS NUMERIC)  WHEN vt0.c0 THEN (- (vt1.lid)) WHEN 'Lz^1' THEN vt1.lid COLLATE BINARY WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.lid)) ELSE (((vt1.c0, vt1.c0, vt1.c1))=((vt1.c1, vt1.c0, vt1.c1))) END FROM vt1, vt0 LIMIT -9223372036854775808 OFFSET 268143531; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (vt0.c0) AND (((vt1.lid)IS(vt1.c1)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((SQLITE_VERSION())>((+ (vt0.c0)))), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) COLLATE BINARY, ((((((((SUM(vt1.c0))OR(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)))OR(CHANGES())))AND(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)))))AND((~ ('')))) FROM vt1, vt0 WHERE (((((0Xfffffffff9be061d)<(NULL)))!=(0Xffffffff82144680 COLLATE RTRIM))); -- 0ms;
SELECT (((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.lid))))) FROM vt0, vt1 WHERE (0X7688d10e) ORDER BY vt0.c0; -- 0ms;
