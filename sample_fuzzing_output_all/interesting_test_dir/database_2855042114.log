-- Time: 2024/06/07 09:22:15
-- Database: database14
-- Database version: 3.40.0
-- seed value: 2855042114
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2, detail=full, prefix = 859); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 BLOB DEFAULT 989320381 ); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
CREATE INDEX IF NOT EXISTS i12 ON t1(((CAST(c0 AS REAL)) NOT BETWEEN ((c0 IN (c0))) AND ((c0 IN ()))) COLLATE BINARY DESC); -- 2ms;
UPDATE OR FAIL vt0 SET c2=NULL, c0=x'29cf'; -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (989320381); -- 0ms;
PRAGMA main.foreign_keys = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE ON t1 BEGIN SELECT RAISE(FAIL, 'asdf');UPDATE OR IGNORE vt0 SET c0=x'';UPDATE vt0 SET c1='/{\rZ' WHERE CASE WHEN CASE WHEN vt0.c2 THEN vt0.c2 ELSE NULL END THEN highlight(vt0.c2, '1079221619', vt0.c2, vt0.c2) WHEN (- (vt0.c1)) THEN ((vt0.c2) NOT NULL) WHEN (vt0.c2 IN (x'', vt0.c2)) THEN (~ (vt0.c2)) END;END; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(''); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x''); -- 0ms;
PRAGMA automatic_index; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c2) VALUES (1.079221619E9); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
UPDATE OR IGNORE vt0 SET c2=x'', c2=0.64248135854227 WHERE ((((((vt0.c1)<>(NULL)))OR(((vt0.c1) IS FALSE))))AND(((vt0.c2) ISNULL))); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR ABORT vt0 SET c2=0Xffffffffd1398f0f WHERE CAST((+ (vt0.c2)) AS REAL); -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(NULL) WHERE (vt0.c0 IN (vt0.c2)) COLLATE NOCASE; -- 0ms;
UPDATE OR FAIL t1 SET c0=NULL WHERE (((t1.c0) NOTNULL) IN ()); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 923139081); -- 1ms;
UPDATE OR IGNORE t1 SET c0=0.25960537945636597, c0='72'; -- 2ms;
UPDATE OR ROLLBACK t1 SET (c0)=('**QYy'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 3ms;
INSERT OR IGNORE INTO vt0(c2, c0, c1) VALUES (x'', '웑uU', 0.1035099381017609); -- 0ms;
UPDATE t1 SET c0='' WHERE ((((t1.c0)||(-462829871)))AND(CAST(t1.c0 AS NUMERIC))); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE t1 SET c0=0.6684314516290142, c0=NULL WHERE ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)IS NOT(('**qyy' IN ()))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 845963354); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE t1 SET (c0, c0)=(0.6068657547002835, '-1738585793') WHERE (((t1.c0)) BETWEEN (((t1.c0 IN (t1.c0)))) AND ((t1.c0 COLLATE RTRIM))); -- 0ms;
PRAGMA main.auto_vacuum; -- 2ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DROP INDEX "i12"; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (')q', 0.10419217715726892, -1547576589), (x'', '', 0.41588772725224055), (NULL, 1.079221619E9, 0Xfffffffffc959b4f); -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(0Xffffffffb1e59946) WHERE ((((vt0.c1) BETWEEN (vt0.c2) AND (-1374774998)))&(((vt0.c2)<=(vt0.c1)))); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('**QYY', -0.0, 'C 흻IE'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES ('B\nX]', x'07e4'); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0.10419217715726892) WHERE ((((((t1.c0)<(t1.c0)))OR(t1.c0)))AND(((t1.c0) IS TRUE))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ROLLBACK t1 SET c0=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (x''); -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0)=(x'', 'y}!u') WHERE (((((t1.c0, t1.c0, NULL))<((t1.c0, t1.c0, t1.c0)))) NOT BETWEEN ((+ (x'cd452905'))) AND (t1.c0)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 1ms;
UPDATE OR IGNORE t1 SET (c0)=(0.9674933839009386); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES ('1079221619'), (-5.7304241E7), (''), (0xffffffffae0e992a), (x'c1dd'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0.7015414690614151) WHERE IFNULL(((t1.c0)&(t1.c0)), ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))); -- 5ms;
INSERT OR REPLACE INTO t1 VALUES ('0.41588772725224055'); -- 0ms;
REINDEX NOCASE; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('m') WHERE CASE WHEN -1.547576589E9 THEN ((t1.c0)LIKE(0.8960480584518665)) END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0, c0)=(NULL, '335223584') WHERE ((((vt0.c2)OR(((x'2ac1') NOT BETWEEN (vt0.c1) AND (vt0.c2)))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(NULL); -- 0ms;
INSERT OR ABORT INTO vt0(c2, c0) VALUES ('', 0xffffffffd1398f0f); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-715357384,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
UPDATE OR IGNORE t1 SET c0=x'', c0=0.1035099381017609; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET (c2, c2, c2)=(x'', NULL, 'pZ'); -- 3ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 1ms;
UPDATE OR ROLLBACK vt0 SET c1=-4.62829871E8, c1=NULL WHERE (CAST(vt0.c0 AS BLOB) IN (0.8019834818486671)); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (0.5065389633281052, x''); -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE i12; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET (c2)=(0x1a370784) WHERE ((((vt1.c2)%(0.5065389633281052)))>((+ (vt1.c0)))); -- 0ms;
ANALYZE i12; -- 0ms;
UPDATE OR IGNORE t1 SET c0=''; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (-2000045678); -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((AVG(vt1.c0))&(vt0.c2)), (((vt0.c1))<((vt0.c0))) COLLATE NOCASE, GROUP_CONCAT(CAST(vt0.c1 AS INTEGER)) OVER () FROM t1 ORDER BY (~ (vt0.c0 COLLATE RTRIM));SELECT DISTINCT LEAD(CASE WHEN vt1.c1 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)) ELSE ((((vt0.c1)OR(vt1.c1)))AND(vt0.c1)) END, ((4.3981402E8) IS TRUE) COLLATE RTRIM, (('0.1035099381017609')!=('-1485035080'))) OVER (), (((((((((((((vt0.c0)AND(0.9328824071101801)))AND(vt0.c0)))OR(vt0.c2)))AND(vt1.c2)))OR(t1.c0)))AND(vt1.c0)) IN (CAST(vt0.c2 AS BLOB))), CAST((((vt0.c1, vt0.c1, 0.7669546834703114))<=((vt1.c1, vt1.c2, '0.9674933839009386'))) AS BLOB) FROM vt0, vt1, t1 GROUP BY vt0.c0, ((((vt0.c1, vt1.c2, vt1.c0)) BETWEEN ((vt1.c0, t1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c1))) IN (((vt1.c1)IS(vt1.c1)))), t1.c0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c1 THEN vt1.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c0 END) NOTNULL) FROM t1;SELECT DISTINCT LOWER(DISTINCT vt1.c1), (- ('켈|A檪fT')) COLLATE NOCASE, (((+ (t1.c0)))GLOB(COUNT(vt1.c2))) FROM vt0, t1 WHERE ((((x'')) BETWEEN ((x'')) AND ((x''))) COLLATE NOCASE);SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c1))) NOTNULL) FROM t1, vt0, vt1 WHERE (((((((3.35223584E8)AND(0x1a370784)))AND(x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(vt1.c0 COLLATE RTRIM AS REAL), SUM(((((vt1.c2)AND(vt1.c0)))OR(vt1.c1))) OVER (), GROUP_CONCAT(((((vt1.c1)OR(t1.c0)))AND(vt0.c2))) FROM t1, vt1 WHERE (CASE ''  WHEN -715357384 THEN 184310611 WHEN '-462829871' THEN 1.079221619E9 WHEN NULL THEN x'9c00a23c' END COLLATE BINARY);SELECT DISTINCT ((((((((LIKELIHOOD(vt1.c2, 0.36375995325667687))AND(((((vt1.c2)AND(vt1.c1)))OR(0X3b91923c)))))AND(t1.c0)))OR((((vt1.c0, vt0.c1, vt1.c0))<=((t1.c0, vt1.c2, t1.c0))))))AND(GROUP_CONCAT(vt0.c1))) FROM vt1, t1, vt0 WHERE ((CASE WHEN x'' THEN x'8d837d3a' WHEN 0Xffffffffd55c8338 THEN -1.738585793E9 WHEN 4.3981402E8 THEN NULL ELSE NULL END IN ())); -- 0ms;
SELECT ALL (+ (t1.c0 COLLATE BINARY)), COUNT(*), ((((((((((t1.c0)%(NULL)))AND(((('1570490475')) BETWEEN ((vt0.c2)) AND ((vt0.c0))))))AND(x'')))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.8347641223184344))))AND(((vt0.c0)LIKE(t1.c0)))) FROM vt0;SELECT ALL MAX((((t1.c0))==((vt0.c0)))), ((vt1.c2)/((+ (vt1.c2)))), (((vt0.c2 IN ())) NOTNULL) FROM t1, vt0, vt1 INDEXED BY i12 WHERE (((((((NULL)AND('sj^	{(溸Z䤿')))OR(NULL))) NOT NULL));SELECT 200179628 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)>(vt0.c0)))>=(CAST(0.1722342480086111 AS BLOB))) FROM vt1, vt0 WHERE (((((x'') BETWEEN ('1619159705') AND (5.8749201E8))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c2 THEN t1.c0 END)*(0.18909976033521692)) FROM vt0 WHERE (((((((((((((NULL)AND('1079221619')))OR(0.004518633112028492)))OR(CASE x''  WHEN '' THEN NULL ELSE 1570490475 END)))AND(CASE ''  WHEN 0.683310640779657 THEN NULL WHEN NULL THEN 0.723738271344617 WHEN NULL THEN NULL END)))OR((('0.18909976033521692')=('-1485035080')))))OR(((((5.8749201E8)AND(0.0)))AND(NULL)))));SELECT DISTINCT vt1.c1, ((CASE WHEN vt0.c0 THEN vt1.c2 WHEN NULL THEN vt0.c2 WHEN t1.c0 THEN vt0.c1 END) NOT NULL), '184310611' FROM vt0, t1;SELECT ((((AVG(t1.c0))OR(((((((((t1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c1)))OR(vt1.c1)))))OR((- (vt0.c1)))) FROM t1;SELECT ALL GROUP_CONCAT(((vt0.c0) ISNULL)) FROM vt1, vt0, t1 WHERE ((((('')==(313224888)))%(('G	m' IN ())))); -- 0ms;
SELECT (- (vt1.c2)) COLLATE BINARY, CASE vt1.c0 COLLATE RTRIM  WHEN (vt0.c1 IN ()) THEN ((vt0.c2)<(vt0.c1)) WHEN (+ (vt0.c2)) THEN (vt1.c2 IN ()) WHEN (((vt0.c1)) NOT BETWEEN (('325541937')) AND ((x'e226cb48'))) THEN x'' END, TRIM(t1.c0 COLLATE RTRIM) FROM t1, vt0;SELECT ALL GROUP_CONCAT(COUNT(TYPEOF(vt0.c0))) FROM vt1, vt0 WHERE (CAST((((((((('')OR(1794193872)))OR(x'')))AND('-1310353082')))AND(0.38595268804365734)) AS TEXT));SELECT DISTINCT '-1792739830' FROM vt1 NOT INDEXED WHERE ((+ (NULL))); -- 0ms;
SELECT ALL ((((vt0.c2 COLLATE BINARY)AND((- (-304327121)))))OR((((vt1.c1))==((vt1.c1))))) FROM vt1, t1;SELECT DISTINCT ((~ (vt0.c1)) IN ()) FROM t1, vt1 WHERE ((~ (((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT (((vt1.c1) NOTNULL) IN ()), ((-1.547576589E9)+(CAST(vt1.c2 AS REAL))), (((('-1377112471') NOT BETWEEN (vt0.c1) AND (vt0.c2)))IS(vt0.c1)) FROM vt1 WHERE (((0.9565923482670995) NOT BETWEEN (((x'')>(0.3979385863985714))) AND ((('i65<*l')IS NOT(1681380777)))));SELECT 0.399670642921089 FROM vt0 WHERE (((((('439814020')) BETWEEN ((x'')) AND ((x'a298'))))||(((0.9433250170693691)IS NOT(x''))))); -- 0ms;
SELECT ALL (~ (((vt0.c2)==(vt0.c0)))), (((vt1.c0 IN (vt0.c0, x'63bcc7a0', t1.c0))) ISNULL), vt0.c2 FROM t1;SELECT NULL FROM t1, vt0, vt1 WHERE (CASE WHEN (0.9488089146737474 IN (0.8819423183697805, '~iD.&f')) THEN ((1.794193872E9) NOT NULL) END); -- 0ms;
SELECT DISTINCT (((((~ (vt1.c0)))OR((((x'257b', vt0.c2, x'0bb758154c43', vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c2, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, t1.c0, vt0.c1, 'I	'))))))AND(((vt1.c0) NOTNULL))) FROM vt0, t1, vt1; -- 0ms;
SELECT '', CAST((t1.c0 IN (vt1.c1, t1.c0)) AS TEXT), LAST_VALUE(((LIKELIHOOD(vt1.c2, 0.5657614835460336))*(t1.c0 COLLATE BINARY))) OVER ( ORDER BY (((((vt0.c2) NOTNULL)))!=(((NOT (vt0.c2))))) DESC) FROM vt1, vt0, t1 WHERE ((((- ('ls8N')))AND(CAST(x'' AS INTEGER)))) GROUP BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))) NOTNULL) HAVING (- ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))); -- 0ms;
SELECT ALL CASE WHEN vt0.c1 THEN AVG(vt0.c1) ELSE CAST(vt0.c0 AS BLOB) END, (((+ (t1.c0))) IS TRUE), ((((((vt1.c0)OR(vt0.c0)))AND('1183346779'))) BETWEEN (CASE vt0.c1  WHEN vt1.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt1.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c2 END) AND (((vt0.c1) BETWEEN (vt1.c2) AND (vt1.c0)))) FROM vt0, t1 WHERE (((((x'')>(0.2588019760252883)))<<(CASE NULL  WHEN '1183346779' THEN x'' ELSE NULL END)));SELECT (('-1485035080')+(CAST(vt0.c1 AS INTEGER))) FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((x'49ba') IS TRUE)  WHEN TRIM(0.9674933839009386) THEN (((-1485928063))!=((0.4291574248100586))) WHEN -1776987051 COLLATE BINARY THEN LIKELIHOOD(1.570490475E9, 0.30544140313865786) WHEN CASE '-360454762'  WHEN x'' THEN NULL ELSE NULL END THEN x'' END) LIMIT 325541937; -- 0ms;
SELECT ALL '-57304241' FROM t1; -- 0ms;
SELECT DISTINCT vt1.c1 COLLATE RTRIM FROM t1 LIMIT -1987813059;SELECT DISTINCT ((((((((((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c2)))AND((((vt0.c2)) BETWEEN ((x'')) AND ((vt0.c0))))))OR(ABS(vt0.c0))))AND((vt1.c2 IN ()))))OR(GROUP_CONCAT(vt0.c2))) FROM vt0, t1 LIMIT -464943107 OFFSET 1013013765; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1 LEFT OUTER JOIN vt0 ON (0x1bdcbd07 IN ()) WHERE ((((NULL)) NOT BETWEEN ((((0X12ab6eb8)<>('-638357155')))) AND ((NULLIF('-957223483', NULL))))) GROUP BY (((NOT (vt0.c2)))>=(((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c2)))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT ALL (((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c2 END))!=((vt0.c0))) FROM vt0 WHERE (CASE ((0x3916c239)<>('xeC鵳^G'))  WHEN (NOT ('EP1m*')) THEN (((x''))<=((NULL))) ELSE ((((0Xffffffff96155455)AND('-638357155')))AND(x'64b4fb16')) END) LIMIT -899154313;SELECT ALL NULL FROM vt1, t1, vt0 WHERE ((JULIANDAY(NULL, '', x'') IN ())); -- 0ms;
SELECT DISTINCT 0.3707463210422647 FROM vt0 WHERE ((((((NULL) NOT BETWEEN (NULL) AND (x''))))==(((NOT (0Xffffffffa4d18d2d)))))) ORDER BY vt1.c0 ASC;SELECT ((NOT ('')) IN ()) FROM vt1; -- 0ms;
SELECT ALL (((((vt0.c0))<((vt0.c1)))) NOTNULL) FROM vt1, vt0, t1 WHERE (((CASE ''  WHEN x'' THEN x'' END)IS NOT(NULL COLLATE BINARY))); -- 0ms;
SELECT ALL (((vt1.c2)) BETWEEN ((CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt1.c0 COLLATE BINARY))) FROM vt1, vt0, t1 WHERE (((('' IN ()))<=(CASE WHEN 0.7093997080046497 THEN NULL ELSE '1854503883' END))) GROUP BY vt0.c1; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) NOT NULL) AS REAL) FROM vt1 WHERE (x'') GROUP BY (+ ((NOT (vt0.c0)))) HAVING CAST('R' AS REAL);SELECT ALL CAST(TRIM(DISTINCT 3.13224888E8) AS TEXT), x'', SUM(GLOB(vt0.c0, vt0.c2)) OVER () FROM t1;SELECT DISTINCT NULL FROM vt1 WHERE (((('>INl{孓\r⦸g', 'fa}wEhG%', 0.9757725568572129))<>((x'7d6a', 0.5079260420908287, ''))) COLLATE RTRIM); -- 0ms;
SELECT ALL MAX(((vt1.c0)>=(vt1.c1)) COLLATE BINARY) FROM vt1, vt0, t1 WHERE (((CASE '-329029520'  WHEN NULL THEN '40' ELSE x'e025c07c' END) ISNULL)) GROUP BY NULL, vt1.c2, (~ (json_array_length(vt0.c2))); -- 0ms;
SELECT ALL json_type(((vt1.c1)&(vt0.c2))) FROM vt1 WHERE ((~ (CAST(NULL AS REAL))));SELECT DISTINCT FIRST_VALUE(vt1.c1) OVER () FROM vt0, vt1 WHERE (((CASE WHEN 0.8819423183697805 THEN x'b42a' ELSE NULL END)LIKE((((NULL))<((x'')))))); -- 0ms;
SELECT DISTINCT json_quote(((t1.c0)AND(t1.c0))) FROM vt0, t1, vt1; -- 0ms;
SELECT ALL ((UNLIKELY(vt1.c0)) BETWEEN (t1.c0 COLLATE RTRIM) AND ((NOT (vt1.c1)))), ((~ (vt0.c1)) IN ()), (- (CASE WHEN vt0.c2 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c2 THEN vt1.c2 END)) FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL), CASE WHEN ((vt1.c0)/(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((LIKELIHOOD(DISTINCT vt1.c0, 0.4940851443253801))IS(TOTAL(vt0.c0))) FROM vt1, vt0 WHERE ((((('Eq')%(x'')))/(((((((((x'')AND(x'')))OR('-337698059')))AND(0.4699724134638751)))AND('-1377112471'))))) ORDER BY ((((NULLIF(DISTINCT vt0.c2, vt1.c0))OR(TRIM(vt1.c2))))AND(vt1.c2))  NULLS LAST; -- 1ms;
SELECT TRIM(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) FROM t1, vt1, vt0 WHERE ((~ (((NULL) BETWEEN ('1794193872') AND (NULL))))) ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB)  NULLS LAST LIMIT 2063148338; -- 0ms;
SELECT ALL vt0.c0, 0x4ca4e966, CASE ((vt1.c2) BETWEEN (t1.c0) AND (vt0.c0))  WHEN x'' THEN (vt1.c2 IN ()) END FROM vt0, t1 WHERE (CAST(CAST(x'4b73' AS REAL) AS INTEGER));SELECT DISTINCT (((((vt1.c1))<((x'5ab8'))))+((vt0.c1 IN (vt0.c2, 0.7093997080046497)))), (('6\') NOT BETWEEN (0.527654869101784) AND (vt0.c0 COLLATE NOCASE)), ((((((((((t1.c0)OR(vt0.c1)))OR(vt0.c2)))OR(vt1.c2)))AND(vt0.c1))) BETWEEN ((~ (vt0.c2))) AND (ABS(vt1.c1))), (((vt1.c1 IN ())) BETWEEN (((((vt0.c2)AND(vt1.c2)))OR(t1.c0))) AND (((x'') IS FALSE))), vt1.c2 FROM t1, vt1 WHERE ((((((0.6212360723566079) NOT BETWEEN (x'') AND (x''))))<((NULL))));SELECT DISTINCT QUOTE(((t1.c0)OR(vt0.c0))) FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c1)OR(vt1.c2)))OR(t1.c0))) OVER () FROM t1, vt0 WHERE ((((('-1387450926')) BETWEEN (('-1792739830')) AND ((0.527654869101784))) IN ()));SELECT DISTINCT ((((t1.c0, vt0.c0, vt1.c0))>=((vt0.c2, vt0.c0, vt1.c2))) IN ()), vt1.c2, CAST(CASE WHEN vt1.c2 THEN vt1.c0 END AS NUMERIC) FROM vt1, t1, vt0 ORDER BY ((ABS(DISTINCT vt0.c0))AND((((vt1.c1, x'', NULL)) NOT BETWEEN ((vt0.c1, t1.c0, vt1.c0)) AND ((vt0.c0, 0.5065389633281052, vt0.c0))))) ASC LIMIT -2047571483; -- 0ms;
SELECT DISTINCT ((vt1.c2)&(t1.c0)) COLLATE RTRIM, ((vt0.c2 IN ()) IN ()), TRIM(DISTINCT ((vt0.c2) NOTNULL), vt1.c2 COLLATE BINARY) FROM vt0 GROUP BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) THEN (((vt1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))) END;SELECT DISTINCT TOTAL(x'') OVER ( ORDER BY CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c2 ELSE vt0.c1 END COLLATE NOCASE DESC  NULLS FIRST) FROM vt0, vt1, t1; -- 0ms;
SELECT ALL (((vt0.c2, vt0.c0, vt1.c2)) BETWEEN ((HEX(vt0.c0), (+ (vt0.c1)), NULL)) AND ((CAST(vt0.c2 AS REAL), vt1.c1 COLLATE RTRIM, (vt1.c1 IN ())))) FROM t1, vt1, vt0; -- 1ms;
SELECT DISTINCT CASE '>INl{孓\r⦸g'  WHEN ((vt0.c1) NOT BETWEEN (vt1.c2) AND (t1.c0)) THEN ((vt1.c1)!=(t1.c0)) END FROM t1, vt0, vt1; -- 0ms;
SELECT DISTINCT x'' COLLATE NOCASE FROM vt0, t1 WHERE (TRIM(((0.8269578114132452) NOT BETWEEN (NULL) AND (x'a19e')))); -- 0ms;
SELECT (- (t1.c0 COLLATE RTRIM)) FROM vt0 FULL OUTER JOIN vt1 ON ((((LIKELY(vt1.c0))AND((((vt1.c1, vt1.c1, vt0.c2))<((NULL, vt1.c2, vt0.c0))))))OR(((vt0.c1)IS NOT(t1.c0)))) WHERE (((0.17998295409643073 COLLATE RTRIM)IS NOT(LIKELIHOOD('䤿	n1Z폷N', 0.6325001845833604))));SELECT DISTINCT SUM(vt1.c0), NTH_VALUE(((((vt1.c1)%(vt1.c1))) BETWEEN ('JO^U똲^') AND (vt1.c0 COLLATE RTRIM)), NULL) OVER ( ORDER BY (((((((('')OR(t1.c0)))OR(CASE vt1.c2  WHEN vt0.c2 THEN vt0.c2 ELSE t1.c0 END)))AND(CAST(vt1.c0 AS TEXT))))AND(json_type(vt0.c1)))  NULLS FIRST, CASE (0X1d6a4e5d IN (vt0.c2, vt0.c2))  WHEN TIME(vt0.c2, vt1.c2, '', vt0.c1, vt1.c1, vt1.c2, vt1.c2) THEN (((vt0.c1))>=((vt1.c0))) ELSE (NOT (vt1.c2)) END ASC), load_extension(CAST(0.26828821220556665 AS TEXT)) FROM vt1 WHERE (NULL);SELECT SQLITE_COMPILEOPTION_USED((((vt0.c2)) NOT BETWEEN ((vt1.c2)) AND ((t1.c0)))), ((('-304327121')) BETWEEN ((t1.c0)) AND ((vt0.c2))) COLLATE BINARY, vt1.c1, (((SUM(0.012970216096880316), AVG(t1.c0), 0x395d5e5))!=((CASE WHEN vt0.c2 THEN vt1.c2 END, CAST(t1.c0 AS INTEGER), ((t1.c0) NOTNULL)))), SUM(((t1.c0)>>('*'))) OVER () FROM vt0 INDEXED BY i12, t1;SELECT (+ (vt0.c2)) COLLATE NOCASE FROM t1 WHERE (((((0.5700743781897637) NOTNULL))>=((NULL IN ('')))));SELECT 0.8726584416607257 FROM vt0, t1, vt1 WHERE ((CAST(x'' AS TEXT) IN ())); -- 1ms;
SELECT DISTINCT CASE ((vt0.c0)|(vt0.c2))  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (t1.c0)) THEN MIN(vt1.c2) WHEN ((((((((vt0.c0)OR(t1.c0)))OR(t1.c0)))AND(vt0.c0)))OR(-1.776987051E9)) THEN CAST('-1327143833' AS INTEGER) WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)) THEN NULL ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END, (((0.13284852732507257) NOT NULL) IN ()), CAST(t1.c0 COLLATE RTRIM AS INTEGER), ((- (vt0.c1)) IN ()), CASE COUNT(vt1.c1)  WHEN ((vt1.c2)IS NOT(0.3303653155593872)) THEN CAST(vt0.c2 AS REAL) WHEN x'0ad9' COLLATE RTRIM THEN (((x'046d'))<((vt0.c1))) WHEN t1.c0 THEN vt1.c2 COLLATE RTRIM END FROM t1, vt1, vt0 WHERE ((((NULL, x'', NULL)) NOT BETWEEN ((NULL COLLATE RTRIM, ((x'') BETWEEN ('') AND ('0.8019834818486671')), (((((((('-2093624329')AND(0Xffffffffb2c6a717)))AND(x'')))AND('8!/u')))AND(x'')))) AND (((('-1693945380')>('')), UPPER(DISTINCT NULL), NULL COLLATE NOCASE)))) EXCEPT SELECT DISTINCT LAG(((vt1.c2) BETWEEN (vt1.c2) AND (((((vt1.c0)AND(vt1.c2)))AND(vt1.c1)))), ((((('230496451')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))) NOT BETWEEN (CASE 'Xx'  WHEN t1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c0 END) AND (((vt1.c1) NOTNULL))), ((((vt0.c0)%(vt0.c2)))>>(((((t1.c0)OR(NULL)))OR(vt1.c2))))) OVER (), (~ ((((vt1.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))), ((vt1.c2 COLLATE BINARY) BETWEEN ((vt1.c1 IN ())) AND (CASE WHEN '-1950977116' THEN vt0.c2 ELSE vt1.c0 END)), (((+ (t1.c0)))/(((vt0.c0)/(vt1.c0)))), NTILE((((vt0.c2 IN ()))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 END))) OVER () FROM vt0, vt1, t1 WHERE ((((NULL)) NOT BETWEEN (((((NULL, 0.4260129869386675, '0.1035099381017609'))!=((NULL, 0.7339039188809483, 0.9888666284362864))))) AND ((CASE WHEN x'' THEN -1.529770707E9 ELSE NULL END)))); -- 0ms;
SELECT DISTINCT (vt1.c2 IN (-329029520, '')) COLLATE RTRIM FROM vt1, t1, vt0 NOT INDEXED WHERE (json_extract(('760916615' IN (0.5421973465151204, 0.23337208927147135, 0x3c1016e6)), (NOT ('&L'))));SELECT DISTINCT ((t1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE RTRIM FROM t1, vt1 WHERE ((((TRIM('852065684')))<(((('2063148338')LIKE(NULL)))))) GROUP BY ((((((vt1.c1) NOTNULL))AND(((((vt1.c0)AND(t1.c0)))OR(vt0.c0)))))AND(((vt1.c0)*(vt1.c2)))), ((NOT (vt1.c2)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))), load_extension(((('K2[')) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((t1.c0)+(NULL))) LIMIT -337698059 OFFSET 1433249087;SELECT ALL FIRST_VALUE((x'779b' IN ())) OVER () FROM vt1, t1, vt0 WHERE (((((0.3203748209342535)) NOT BETWEEN ((-1.327143833E9)) AND ((x''))) IN (CAST(NULL AS TEXT), COALESCE(DISTINCT '0.25960537945636597', '0.26828821220556665')))); -- 0ms;
SELECT ALL json_object(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END, vt1.c1 COLLATE BINARY) FROM vt1, vt0 WHERE ((- ((('MWEI0B\rF')*(NULL))))); -- 0ms;
SELECT DISTINCT (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c2 END, CAST(vt0.c1 AS NUMERIC), ((vt0.c0) NOTNULL))) AND ((((0.7152260128173116) BETWEEN (NULL) AND (vt1.c0)), ((vt1.c0)>>(vt1.c1)), ((vt1.c0)>=(vt1.c0))))), '0.7072568534054615', ((((vt0.c2)>>(t1.c0)))<=(x'224d')), PERCENT_RANK() OVER (), COUNT(*) FROM t1, vt1, vt0 GROUP BY ((((((vt0.c1, vt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c1, vt1.c2, vt1.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))))>((CASE 0.3390400200293565  WHEN vt0.c1 THEN vt0.c0 END))) HAVING MIN((((('0枏\rB8M''}')OR(vt0.c2)))AND(vt1.c1))); -- 0ms;
SELECT LEAD(((((((vt1.c0)OR(vt1.c2)))AND(vt1.c2))) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0)), (((((+ ('.R')))OR(TYPEOF(DISTINCT vt1.c0))))OR(NULL)), CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE BINARY) OVER (), MAX((~ (t1.c0))), AVG(vt1.c1 COLLATE BINARY) COLLATE BINARY FROM vt1;SELECT ALL ((((vt0.c2)OR(((0.553130400244457)<(vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)) FROM vt1 WHERE ((~ ((0.013264592344098491 IN ())))) LIMIT -244499694 OFFSET 1986936838;SELECT ALL (vt1.c2 IN ()) COLLATE RTRIM FROM t1, vt1, vt0 WHERE ((((((x''))<=((NULL)))) ISNULL)); -- 0ms;
SELECT ((((vt1.c1)IS(vt0.c0))) NOT NULL) FROM vt1, t1 WHERE ((- (((x'') ISNULL)))) GROUP BY (((((vt0.c2 IN ()))OR(((vt1.c2)<=(NULL)))))OR(UPPER(t1.c0))), CASE vt0.c0  WHEN vt0.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c2 THEN 0.723738271344617 ELSE t1.c0 END COLLATE BINARY, (((vt1.c0, vt0.c2, vt0.c1)) NOT BETWEEN (((((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c1))), ((vt1.c2) IS FALSE), NULL)) AND ((vt0.c1 COLLATE BINARY, (+ (vt1.c0)), ((vt0.c0)>(vt1.c1)))));SELECT DISTINCT ((json_insert(t1.c0, vt0.c2, vt1.c2)) NOT BETWEEN (CAST(t1.c0 AS TEXT)) AND (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) FROM vt0, vt1 WHERE (CAST(CASE WHEN '1521039889' THEN -464943107 ELSE NULL END AS REAL)) GROUP BY CAST(((((((((1.794193872E9)AND(vt1.c2)))OR(vt0.c2)))AND(vt0.c1)))AND(t1.c0)) AS NUMERIC) HAVING (((vt0.c1, t1.c0, vt0.c2, vt1.c1, vt0.c2)) NOT BETWEEN ((((vt1.c1)GLOB(vt0.c1)), ((vt1.c1) NOTNULL), LIKE(vt0.c0, vt1.c2, 'F'), 0.6575516057682402, COUNT('0.7072568534054615'))) AND ((CASE vt1.c2  WHEN '-1910020209' THEN vt1.c1 END, (t1.c0 IN ()), (vt0.c2 IN (vt1.c2)), ((vt0.c1) BETWEEN (x'') AND (vt1.c2)), COUNT(x''))));SELECT (((vt0.c1 COLLATE BINARY, vt1.c1 COLLATE NOCASE, CAST('g	m' AS REAL), vt0.c2 COLLATE RTRIM, vt1.c0))!=((((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c1)))OR(vt1.c0)))AND(vt0.c1)), ((vt0.c2)||(t1.c0)), (- (vt0.c0)), ((vt0.c1) BETWEEN (vt1.c1) AND (vt1.c0)), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c2))))) FROM vt1, vt0;SELECT ALL COUNT(HEX(vt0.c1)) OVER () FROM vt1, t1, vt0; -- 0ms;
SELECT ALL MAX(LIKELY(vt0.c0)) FROM vt1, t1, vt0 WHERE (((CAST(NULL AS INTEGER))IS(0x12ab6eb8))); -- 0ms;
SELECT DISTINCT ((((((((((x'') NOT BETWEEN (vt1.c1) AND (t1.c0)))OR(UNLIKELY(DISTINCT vt1.c2))))AND(((x'')%(vt0.c1)))))AND((((vt0.c1, vt1.c0, t1.c0))=((vt0.c2, vt1.c2, t1.c0))))))AND(((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))) FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT AVG((('1570490475') ISNULL)) OVER () FROM vt0, t1; -- 0ms;
SELECT AVG(vt1.c1) OVER () FROM t1, vt1 LIMIT -2075925580 OFFSET 1172758696; -- 0ms;
SELECT ALL ((((((((((((SUM(vt1.c2))OR(AVG(vt1.c2))))AND(((vt1.c2)-(vt0.c2)))))AND((vt0.c0 IN ()))))OR(TRIM(vt1.c1))))OR(((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(x'')))OR(vt1.c0)))))AND(CASE vt1.c2  WHEN t1.c0 THEN NULL ELSE NULL END)) FROM vt1, vt0 WHERE (((((499231854) NOT BETWEEN (NULL) AND ('')))IS((((0.2336379037603583)) BETWEEN ((-8.99154313E8)) AND ((0.6112517076594252))))));SELECT ALL ((((((vt0.c2) NOT BETWEEN (x'') AND (vt1.c0)))AND(NULL)))AND(vt1.c1)) FROM vt0, vt1, t1 WHERE (((-2.047571483E9)>((((('#ty.')AND('0.2588019760252883')))AND('499231854'))))) LIMIT -923611384 OFFSET 1499570543; -- 0ms;
SELECT DISTINCT (+ ((((('-57304241')AND(vt1.c2)))OR(vt0.c2)))) FROM vt0, t1, vt1; -- 0ms;
SELECT ALL (+ (CAST(vt0.c0 AS TEXT))) FROM vt0, vt1, t1 ORDER BY (- (vt1.c0))  NULLS LAST; -- 0ms;
SELECT DISTINCT '60151269' FROM vt1; -- 0ms;
SELECT (- (vt1.c1)) FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT (((vt0.c2))==((((vt0.c2)IS(vt0.c0))))), (((((NULL)AND(vt1.c2)))AND(vt0.c2)) IN ()), TRIM((vt0.c2 IN ()), ((vt1.c0)&(t1.c0))) FROM t1 GROUP BY ((vt1.c2) ISNULL) HAVING vt1.c0 LIMIT 846140562 OFFSET 1691477970;SELECT ((((0.4786041128408024)AND((vt0.c2 IN ()))))AND(((((((((vt0.c1)OR(t1.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c1)))) FROM t1, vt0, vt1; -- 0ms;
SELECT '279794677' FROM vt0, vt1 INNER JOIN t1 ON CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c0)||(0.8269578114132452)) WHEN t1.c0 THEN vt1.c2 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END THEN (NOT (vt0.c0)) END; -- 0ms;
SELECT DISTINCT CASE NULL  WHEN ((vt1.c0) BETWEEN (vt1.c2) AND (vt0.c0)) THEN t1.c0 COLLATE BINARY ELSE ((vt1.c1)=(vt1.c1)) END FROM vt0, vt1, t1 WHERE (0.17998295409643073); -- 0ms;
SELECT ((((((vt0.c2) NOTNULL))AND((((vt0.c2, vt1.c1, vt0.c1))==(('486922107', vt1.c0, vt1.c1))))))AND(((('-1750499554', vt0.c2, vt1.c2)) BETWEEN ((vt0.c2, vt0.c1, vt1.c0)) AND ((vt0.c0, vt0.c2, vt0.c1))))) FROM vt1;SELECT ALL GROUP_CONCAT(vt0.c1) OVER () FROM vt0, t1, vt1 WHERE (CAST(TYPEOF(x'9a73') AS TEXT)); -- 1ms;
SELECT DISTINCT IFNULL((~ (vt1.c2)), CASE WHEN vt0.c0 THEN vt1.c1 WHEN t1.c0 THEN vt1.c2 WHEN '0.3303653155593872' THEN vt0.c2 ELSE t1.c0 END) FROM t1, vt0 WHERE (SQLITE_COMPILEOPTION_GET((('335223584')>>(x'')))) ORDER BY ((((((((CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN t1.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END)AND(vt0.c0 COLLATE BINARY)))OR(((vt1.c0)<(vt0.c1)))))AND((((vt0.c2, t1.c0, vt1.c1)) BETWEEN ((vt1.c1, vt1.c0, NULL)) AND ((vt0.c0, '-345279779', vt1.c1))))))AND(UPPER(vt0.c2)));SELECT ((vt0.c0) NOT BETWEEN (CASE vt1.c2  WHEN vt0.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (IFNULL(vt1.c1, t1.c0))) FROM t1 WHERE (1.645065778E9);SELECT (((((vt0.c1, vt0.c2, vt0.c0)) BETWEEN ((vt1.c1, vt0.c0, vt0.c2)) AND ((vt0.c0, vt1.c1, vt0.c1))))GLOB(CAST(vt0.c0 AS TEXT))), ((CASE vt0.c2  WHEN vt1.c2 THEN vt1.c0 END) NOTNULL), vt0.c1 COLLATE BINARY COLLATE RTRIM, (((vt1.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (t1.c0) AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t1.c0))))), vt1.c0 FROM t1, vt0 LIMIT 1017776306;SELECT DISTINCT (((((- (t1.c0)))AND((NOT (vt1.c0)))))OR(((vt1.c2)LIKE(vt1.c1)))) FROM t1, vt1, vt0 WHERE ((((('') ISNULL))&((+ ('-245318016'))))); -- 0ms;
SELECT ALL CAST(TRIM(DISTINCT 0.7152260128173116) AS BLOB) FROM t1, vt1, vt0; -- 0ms;
SELECT ((t1.c0) IS FALSE) FROM vt0, vt1, t1; -- 0ms;
SELECT ALL (~ (((vt0.c0) BETWEEN (x'') AND (vt1.c2)))), SUM(((vt1.c0) BETWEEN (vt1.c0) AND (x'b330b563'))), ((((((0.8091870828934217)AND(vt1.c2)))AND(t1.c0))) NOT BETWEEN (TOTAL_CHANGES()) AND (((vt0.c1)OR(vt1.c1)))), (((((t1.c0)) BETWEEN ((vt1.c2)) AND ((vt0.c1))))GLOB(x'')), ((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c2)))IS(SUM(t1.c0))) FROM t1, vt1, vt0 WHERE (((0.571387295504546) BETWEEN ('*bX10') AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL (CAST(vt0.c2 AS INTEGER) IN ()) FROM t1, vt0 WHERE (GLOB(NULL, ((((-662776716)OR('-337698059')))OR(NULL)))); -- 0ms;
SELECT DISTINCT ((vt0.c1) BETWEEN (UNLIKELY(DISTINCT vt1.c1)) AND (vt1.c2 COLLATE RTRIM)) FROM vt0, t1, vt1 WHERE (SUBSTR(((('-691026083'))>((0x4ca4e966))), (('')+(0.4779135448955384)))) ORDER BY (vt0.c2 COLLATE NOCASE IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c2)) ISNULL) FROM vt0, vt1, t1; -- 0ms;
SELECT ((vt0.c1)OR(vt0.c0)) COLLATE NOCASE FROM vt1, vt0 WHERE ((CASE x'c1bec2b8'  WHEN 1.172758696E9 THEN 1785087766 END IN ())); -- 0ms;
SELECT vt1.c0 FROM vt1, vt0, t1 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT CAST(TYPEOF(vt1.c0) AS TEXT) FROM vt0;SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((-3.2902952E8)<=('Wj|(<')))OR((((((((('-1303747723')AND('NM-}L1 Aw')))OR(NULL)))AND(0.521755918539704)))AND(''))))); -- 1ms;
SELECT DISTINCT CUME_DIST() OVER (), ((vt0.c2) BETWEEN (((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c2)))OR(t1.c0))) AND (((t1.c0)AND(vt1.c2)))), (((vt1.c2, t1.c0, vt0.c2)) BETWEEN ((((0X17f95784)>(vt0.c0)), ((((vt1.c1)AND(vt0.c0)))AND(vt1.c2)), (- (NULL)))) AND ((GROUP_CONCAT(vt0.c2), (((0.9328824071101801)) BETWEEN ((vt1.c1)) AND ((t1.c0))), COUNT(*)))) FROM vt0, t1 LIMIT -567431550 OFFSET -707360404;SELECT ALL GROUP_CONCAT((+ (vt0.c1))) OVER ( ORDER BY UPPER(CASE '-1750499554'  WHEN vt1.c2 THEN vt1.c0 END)  NULLS FIRST, (((NULL, 0.5516683831274467, ((vt1.c1) BETWEEN (vt0.c2) AND (vt1.c0))))>=(((((vt1.c1)) BETWEEN ((0.6038991657027106)) AND ((vt0.c1))), ((((((((vt1.c2)OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(t1.c0)), vt1.c0 COLLATE BINARY))) ASC), ((((CAST(vt0.c0 AS TEXT))AND((('M9,D')IS NOT(vt0.c2)))))AND('')), ((((((((((vt1.c0) BETWEEN ('999395900') AND (t1.c0)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt0.c0))))))AND(COUNT(*))))OR(((0.23425886237796056)<=(vt0.c0)))))AND(x'')) FROM vt1, vt0;SELECT DISTINCT ((((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))) ISNULL) FROM vt0, vt1;SELECT ((NULL COLLATE BINARY) NOT BETWEEN (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt1.c1))) AND (((vt0.c2)>>(vt0.c2)))) FROM vt1;SELECT CASE COUNT(*)  WHEN (+ (0x1d05d77b)) THEN vt1.c0 ELSE CASE WHEN t1.c0 THEN vt0.c2 WHEN vt1.c2 THEN vt1.c1 WHEN x'b4cc' THEN t1.c0 ELSE vt0.c1 END END FROM vt1, vt0;SELECT DISTINCT (- ((((vt1.c0))>=((vt0.c1))))), (((x'2309') NOT BETWEEN (t1.c0) AND (vt1.c1)) IN ()), CASE CAST(t1.c0 AS NUMERIC)  WHEN LIKE(vt1.c1, vt0.c0) THEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END END, GLOB((vt0.c2 IN (x'', vt1.c2)), COUNT(*)), ((('0.10419217715726892') IS TRUE) IN ()) FROM vt0, vt1;SELECT ALL ((((vt0.c0)IS NOT(vt0.c0))) NOT NULL) FROM t1, vt0, vt1 WHERE ((+ (((-1.529770707E9)>>('5n11''%<'))))); -- 0ms;
SELECT DISTINCT CAST(t1.c0 AS BLOB) COLLATE NOCASE, (((vt1.c0)) BETWEEN ((((((vt1.c2)OR(vt1.c0)))AND(vt1.c1)))) AND ((((t1.c0)<>(vt1.c1))))), ((TYPEOF(x''))AND(vt1.c0 COLLATE NOCASE)) FROM t1, vt1, vt0 WHERE ((NOT (0x40ec619d)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT LTRIM(((((((((vt0.c2)AND(t1.c0)))AND(vt1.c2)))OR(vt1.c2)))OR(vt0.c2)), (~ (vt0.c1))), (- (vt0.c0)) COLLATE NOCASE, CASE WHEN vt0.c1 THEN vt0.c0 END COLLATE NOCASE COLLATE BINARY FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0))>=((vt1.c0)))) BETWEEN (((vt0.c2)<(vt1.c2))) AND ((vt0.c1 IN ()))), (((vt0.c2 COLLATE RTRIM))<>((((vt0.c1)<>(vt1.c2))))), (((t1.c0, vt1.c2, vt0.c0)) NOT BETWEEN ((CAST(vt0.c2 AS TEXT), ((vt0.c1)IS(vt1.c1)), (((vt0.c2, vt0.c1, vt1.c2)) NOT BETWEEN ((vt1.c1, vt0.c2, t1.c0)) AND ((vt1.c0, vt1.c0, vt1.c1))))) AND ((vt0.c1, ((vt0.c2) NOT NULL), SUM(vt0.c2)))) FROM t1, vt1, vt0 WHERE (((NULL COLLATE BINARY) NOTNULL)); -- 1ms;
SELECT DISTINCT vt0.c1 FROM t1, vt0 WHERE (load_extension(((('-83483180')) BETWEEN (('-920141603')) AND ((0x6b3416c5)))));SELECT DISTINCT t1.c0 FROM t1, vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ((vt1.c0 IN ()))), (((+ (vt0.c2)))>=(((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))), t1.c0, (~ (CASE 'JEꜗU,?'  WHEN vt0.c2 THEN vt0.c2 END)), x'' FROM vt0 WHERE (MAX(NULL COLLATE RTRIM, ((((((((0x35df8402)AND(NULL)))AND('\rKl')))AND(NULL)))AND('nudBN硶_A')))) LIMIT -1792739830;SELECT (((t1.c0)) NOT BETWEEN (((((((((('6\')AND(x'')))AND(vt0.c1)))AND(-1078129955)))OR(vt1.c1)))) AND ((((vt0.c1) ISNULL)))) FROM t1, vt1, vt0 WHERE (((CAST(x'ac22' AS REAL)) IS FALSE)); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((t1.c0)||(vt1.c2))) FROM t1 WHERE ((((((x'' IN ()))AND(((0X4aa15ace)-(x'5668')))))OR((+ (0.20275844486674433)))));SELECT DISTINCT CASE ((vt1.c2)|(vt0.c1))  WHEN 234207433 COLLATE RTRIM THEN LIKELIHOOD(vt1.c1, 0.39348311800787494) ELSE vt0.c0 COLLATE NOCASE END, CAST(vt1.c1 AS TEXT), -464943107, (- (((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))), DENSE_RANK() OVER ( ROWS  UNBOUNDED PRECEDING), json_patch(vt1.c1, ((vt0.c0)+(vt1.c2))), ((t1.c0)IS NOT(vt1.c2)) COLLATE BINARY FROM t1, vt0;SELECT DISTINCT (((((vt1.c2 IN ()))OR((vt0.c2 IN ()))))OR(vt0.c1)), vt1.c0, ((((((vt0.c1) NOT NULL))AND(CAST(vt0.c0 AS REAL))))AND(((vt1.c0)==(vt0.c2)))) FROM t1, vt0 WHERE ((((-8.348318E7, 0.6998653881677159, 0.2252632442952095)) NOT BETWEEN (('118345742', (1183346779 IN (-1405418606)), ((x'')==(NULL)))) AND (((('1172758696') NOT NULL), (('-914992164')%(NULL)), (x'd15b' IN ())))));SELECT ALL ((((((vt0.c0))>((vt1.c2))), vt0.c2, ((t1.c0) NOTNULL), ((vt0.c2)+(vt0.c2)), CAST(-131317546 AS INTEGER)))>(((+ (vt0.c2)), UNLIKELY(DISTINCT vt0.c1), '1285876070', (vt1.c0 IN (vt0.c0, t1.c0)), ((t1.c0)GLOB(vt1.c0))))) FROM vt1 WHERE (json_array(CAST(0Xffffffffb4f0ae62 AS BLOB), ((((((((((((x'')AND('66f崅')))OR(NULL)))OR('콳2]IT9')))OR('433217442')))AND(NULL)))OR('V[M]TT'))));SELECT DISTINCT ((((vt0.c1) ISNULL)) NOT NULL) FROM t1 NOT INDEXED, vt0, vt1 WHERE (((((((((846140562)OR(0.39610770873653733)))AND('')))AND(((0.1722342480086111)OR(x'')))))OR(CAST(-1.303747723E9 AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((vt1.c2)||(UPPER(vt1.c0))) FROM t1, vt1; -- 0ms;
SELECT LAG((('-771464384') ISNULL) COLLATE NOCASE, (((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c2))))&(((vt0.c1) NOT NULL))), ((((vt1.c2) BETWEEN (vt0.c2) AND (t1.c0))) NOT BETWEEN (((vt0.c1)AND(vt1.c1))) AND (vt1.c1))) OVER () FROM t1, vt1, vt0 WHERE (CAST(CASE WHEN 0.29774413497982144 THEN '+a{2' WHEN '0.6575516057682402' THEN '' WHEN '' THEN 0.9888666284362864 END AS INTEGER)); -- 1ms;
SELECT DISTINCT (((CAST(NULL AS BLOB)))<=((vt0.c1 COLLATE NOCASE))) FROM vt1, vt0 WHERE (((CASE WHEN NULL THEN '402216836' ELSE 0X17f95784 END)*(CAST('/{\rZ' AS TEXT)))); -- 0ms;
SELECT ((((0.914949972239117) BETWEEN (vt0.c1) AND (-1303747723)))<((((vt0.c0, vt0.c0, vt1.c1)) NOT BETWEEN ((vt0.c1, t1.c0, t1.c0)) AND ((vt1.c0, vt1.c2, vt0.c0))))), ((((t1.c0)<=('0.9888666284362864')))-((NOT (vt1.c0)))), NULL FROM t1 INDEXED BY i12, vt1 GROUP BY CASE WHEN (+ (vt0.c2)) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt1.c2)) WHEN (~ (vt0.c1)) THEN -886919419 WHEN '-957223483' THEN CASE WHEN vt1.c2 THEN NULL ELSE NULL END END, ((CAST(vt0.c2 AS BLOB))<(CASE WHEN vt1.c2 THEN vt0.c2 END)), (((((((((vt1.c2)AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c2)), vt1.c0));SELECT ALL LEAD(((((t1.c0)==(t1.c0))) NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)), PRINTF((+ (t1.c0)), (NOT (0.571387295504546)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))), (((t1.c0))>=((t1.c0 COLLATE NOCASE)))) OVER () FROM t1; -- 0ms;
SELECT DISTINCT ((((vt0.c1)%('')))OR((vt1.c0 IN ()))), CAST(NULLIF(t1.c0, vt1.c0) AS TEXT), (((t1.c0)) NOT BETWEEN ((AVG(t1.c0))) AND ((CASE WHEN vt1.c0 THEN t1.c0 END))) FROM vt1 WHERE (((NULL COLLATE RTRIM)+(((NULL) NOT BETWEEN (x'') AND (NULL)))));SELECT (~ (vt1.c1)) COLLATE BINARY FROM vt0, t1, vt1; -- 0ms;
SELECT ALL RANK() OVER () FROM t1, vt0 ORDER BY ((((UPPER(DISTINCT vt1.c0))AND((~ (t1.c0)))))AND((((vt1.c2))>((vt0.c2))))) DESC;SELECT '', x'a8f7', COUNT(*) FROM t1, vt1, vt0 WHERE ((NOT (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CASE x'e8fd'  WHEN t1.c0 THEN STRFTIME(vt0.c1, vt0.c1, vt1.c2, vt1.c1, vt1.c1, vt0.c1, vt1.c1) ELSE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) END FROM vt0, t1 WHERE (((('Id4K', '6cL崅', '-245318016')) BETWEEN ((((('5 11''%<'))<=((']lꅯ-t\n'))), NULL COLLATE RTRIM, (((('jo^u똲^')OR(NULL)))AND(x'')))) AND ((CAST('' AS NUMERIC), CASE WHEN '-1776987051' THEN x'10b9' ELSE '-1113122361' END, (NULL IN ()))))) ORDER BY (NOT ((((vt0.c0))<((vt1.c1))))) ASC  NULLS LAST;SELECT DISTINCT MIN((~ (vt1.c0))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((MIN(vt1.c1))IS NOT((((((((('2063148338')AND(vt1.c2)))AND(vt0.c0)))AND(vt1.c1)))OR(vt0.c1)))), ((-533432116)>=(vt1.c2)), UPPER(DISTINCT CAST(vt1.c2 AS INTEGER)), ((COUNT(*))LIKE(((vt1.c2)<(t1.c0)))), CASE ((vt0.c0)OR(t1.c0))  WHEN ((vt1.c2) BETWEEN (vt0.c1) AND (t1.c0)) THEN ((vt1.c0)>('')) END FROM t1 WHERE (((((((x'')<=(0.5421973465151204)))AND((~ ('')))))AND((((('77277720')OR(0xfffffffffd2aaccb)))AND('i65<*l')))));SELECT (vt0.c0 IN ()), TOTAL((((vt1.c2, vt1.c0, x''))>=((vt1.c0, vt0.c1, vt1.c2)))), ((CAST(vt1.c1 AS NUMERIC)) IS FALSE) FROM vt0, t1, vt1 WHERE (CASE (('335223584') ISNULL)  WHEN CAST(x'a600' AS BLOB) THEN ((NULL) BETWEEN (-899154313) AND (NULL)) END); -- 0ms;
SELECT ALL (t1.c0 IN ()) FROM vt0, vt1 WHERE (IFNULL(((NULL) ISNULL), (('65669236') NOT NULL))); -- 0ms;
SELECT ((((vt0.c0) IS TRUE))<>((vt1.c0 IN ()))) FROM t1, vt0 ORDER BY TRIM(DISTINCT ((((t1.c0)OR(vt1.c0)))AND(vt1.c2)), ((vt0.c1)LIKE(vt1.c2)))  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT(((vt0.c1)+(vt1.c0))), (((vt1.c2)) NOT BETWEEN ((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c2)))OR(vt1.c1)))OR(vt0.c1)))) AND ((CAST(vt0.c1 AS INTEGER)))), (((vt0.c0 IN (vt1.c2, vt1.c2)))+(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)) FROM vt0, t1, vt1 WHERE (CAST(NULL COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT ALL SUM(((vt1.c2) BETWEEN (-1.31317546E8) AND (vt1.c0)) COLLATE RTRIM) OVER () FROM vt0, vt1 WHERE (('-784756977' IN ()) COLLATE RTRIM); -- 0ms;
SELECT 'Db59U' FROM vt1; -- 0ms;
SELECT ((SUBSTR(vt1.c1, vt1.c2))<<(UNLIKELY(DISTINCT vt0.c0))) FROM t1, vt0, vt1 WHERE (CASE WHEN CAST('' AS BLOB) THEN CASE WHEN NULL THEN '' WHEN -77119734 THEN NULL WHEN NULL THEN '' END WHEN CAST(0.9675745696205321 AS NUMERIC) THEN CAST(NULL AS INTEGER) WHEN CAST('V9' AS INTEGER) THEN 0Xffffffffdbdb1b09 END); -- 0ms;
SELECT ALL ((((((((CASE WHEN x'' THEN vt0.c0 END)OR(CASE t1.c0  WHEN vt0.c1 THEN vt0.c0 END)))OR(((vt0.c2)IS(vt0.c1)))))AND(TRIM(DISTINCT vt1.c0, vt1.c1))))OR((-2122509290 IN ()))), ((vt1.c2) NOTNULL) COLLATE BINARY, (((NOT (vt0.c0))) BETWEEN (((vt0.c2)<<(vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c2 THEN vt0.c0 ELSE vt1.c0 END)) FROM vt0, t1, vt1 LIMIT 1433249087; -- 0ms;
SELECT DISTINCT NULL FROM t1, vt1 WHERE (NULL) ORDER BY ((((0.9757725568572129) BETWEEN (vt1.c2) AND (t1.c0)))-((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c2))))) ASC;SELECT ALL 0.1928058561267877 COLLATE BINARY FROM t1, vt1, vt0 WHERE (CAST(NULL AS NUMERIC) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((vt1.c2)>(vt0.c2)) IN ()) FROM vt1, vt0; -- 0ms;
SELECT 837526814, CAST((((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))) AS TEXT), ((TYPEOF(DISTINCT vt0.c1)) NOTNULL) FROM vt0 WHERE (((NULL)IS NOT(0.24013493594259572)) COLLATE RTRIM);SELECT (+ (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END)), vt0.c1, (- ((((vt1.c1)) NOT BETWEEN ((t1.c0)) AND ((vt1.c1))))), (vt1.c2 IN ()) COLLATE RTRIM, PERCENT_RANK() OVER () FROM vt1, vt0, t1 WHERE (((CAST(x'' AS NUMERIC))|((x'd224' IN (NULL))))) GROUP BY CAST((- (vt1.c2)) AS REAL) HAVING (vt1.c0 IN ()); -- 0ms;
SELECT DISTINCT DATETIME(((vt1.c1) NOTNULL), (+ (x'')), ((vt0.c0)>>(vt0.c0))), LAST_VALUE(CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS BLOB)) OVER (), ((vt0.c2 IN ()) IN (CASE vt1.c1  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END)) FROM t1, vt0 ORDER BY vt0.c2 ASC;SELECT DISTINCT ((LIKELY(DISTINCT vt1.c2)) BETWEEN (((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt0.c1)IS NOT(vt0.c1)))) FROM t1, vt1, vt0 WHERE (COALESCE(CASE 0.1928058561267877  WHEN 0.795171493349626 THEN -1.750499554E9 ELSE NULL END, (((x'58dc'))>((0.38595268804365734))))); -- 0ms;
SELECT ALL ((CAST(vt0.c1 AS TEXT)) BETWEEN ((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))) AND ((t1.c0 IN ()))) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0, vt1, t1 WHERE (((UNICODE(''))IS NOT(CASE WHEN 1302242023 THEN '|2NN''FL엧-' ELSE 't&' END))); -- 0ms;
SELECT vt1.c2 FROM t1 ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) WHEN ((((((((vt1.c0)OR('nm')))AND(vt1.c1)))AND('-360454762')))AND(vt0.c2)) THEN CAST(vt0.c2 AS BLOB) WHEN (t1.c0 IN ()) THEN CASE vt1.c1  WHEN '' THEN vt0.c0 END ELSE (((vt1.c2))>=((vt0.c0))) END;SELECT DISTINCT FIRST_VALUE(((((vt0.c1)&(vt0.c0)))/(CAST(vt0.c2 AS NUMERIC)))) OVER ( ORDER BY ((CAST(vt0.c2 AS NUMERIC))IS(((((vt0.c2)AND(vt0.c2)))AND(x'd7a8')))) ASC) FROM vt1, vt0 LIMIT -1529770707; -- 0ms;
SELECT DISTINCT NTILE(((~ (vt1.c1)) IN ())) OVER () FROM vt1, t1 WHERE (((((0.6100552187189695))!=((NULL))) IN (x'328a' COLLATE NOCASE))) ORDER BY (((((vt0.c0)==(vt1.c1))))<=((CASE vt0.c1  WHEN vt0.c2 THEN t1.c0 ELSE vt0.c0 END))) LIMIT 193903892 OFFSET 1183346779;SELECT CASE WHEN COUNT(vt1.c1) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)) ELSE ((vt1.c2)<<(vt1.c1)) END FROM vt0, vt1; -- 0ms;
SELECT ALL (~ (((vt1.c2)/(vt0.c2)))), CASE WHEN (NOT ('-1485928063')) THEN GROUP_CONCAT(vt0.c0) ELSE ((vt1.c2) ISNULL) END, COUNT(*) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt1 WHERE ((((((0.6563183231789079))<>((x'')))) NOTNULL)) ORDER BY (- (CAST(t1.c0 AS INTEGER)));SELECT DISTINCT ((TOTAL(vt0.c0))>=(SQLITE_COMPILEOPTION_GET(vt0.c0))) FROM vt1, vt0 GROUP BY (((vt0.c0 IN ()))==((('-1738585793')AND(vt1.c0)))); -- 0ms;
SELECT DISTINCT TOTAL(vt0.c2 COLLATE RTRIM COLLATE BINARY) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND ((vt1.c1)==(TOTAL_CHANGES())) PRECEDING EXCLUDE NO OTHERS) FROM vt0, vt1, t1;SELECT DISTINCT ((((vt1.c2)>=(vt0.c2))) NOTNULL) FROM t1 WHERE (((CASE '-1387450926'  WHEN '1742216385' THEN 1038177276 ELSE 'Mo,ꖮ' END) BETWEEN (((((NULL)OR(0.1928058561267877)))OR(0.29540761012006633))) AND (((NULL) IS TRUE))));SELECT ALL AVG((- (t1.c0))) FROM t1 WHERE (((NULL)!=('1172758696')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((MIN(vt1.c1))&((('')GLOB(vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((UNLIKELY(DISTINCT vt1.c1))=((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2))))) FROM vt1; -- 0ms;
SELECT ALL vt0.c1 FROM vt1 WHERE ((NOT (('start of day[' IN ()))));SELECT DISTINCT LTRIM(vt1.c0, vt0.c1) COLLATE NOCASE FROM vt1, vt0, t1 WHERE (((((((0.23337208927147135)-(NULL)))AND(((x'85ca')GLOB(NULL)))))OR(((x'22da') BETWEEN (0.21850712807249817) AND (0xffffffffcd5c40c7))))) GROUP BY vt1.c2; -- 1ms;
SELECT ((t1.c0 COLLATE BINARY) NOT NULL) FROM vt0, vt1;SELECT DISTINCT CAST((vt1.c1 IN ()) AS REAL), CAST(((vt1.c2) IS TRUE) AS REAL), UPPER(((vt1.c2)IS NOT(vt0.c1))) FROM vt0, t1;SELECT DISTINCT MIN(LIKELIHOOD(DISTINCT vt1.c2, 0.15125254901335283)), AVG(x'') FILTER(WHERE ((x'')||(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))))) OVER ( PARTITION BY (('999395900')>(vt1.c2)), CASE WHEN ((t1.c0) IS TRUE) THEN (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))) WHEN UNLIKELY(vt1.c1) THEN TRIM(DISTINCT vt1.c0) WHEN ((vt1.c0)<(vt0.c1)) THEN ((('-1866509778')) BETWEEN ((vt0.c0)) AND ((vt1.c0))) END), TYPEOF((- (t1.c0))) FROM t1, vt0 WHERE (((((0.9402395458105302)||(0x6af139d0)))+(-750613633 COLLATE NOCASE)));SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((('1591640145')AND(0.4044996845408291))) ISNULL)) ORDER BY (((- (vt0.c0)))!=((vt1.c2 IN (vt0.c1)))) LIMIT -477730585 OFFSET -1387450926;SELECT json_object(t1.c0, vt0.c2, vt1.c0, vt1.c0) COLLATE BINARY FROM t1, vt1 WHERE ((((+ (-57304241))) NOTNULL));SELECT DISTINCT CASE WHEN CASE WHEN vt1.c0 THEN vt0.c2 WHEN t1.c0 THEN vt1.c2 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt1.c1 WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt1.c2 END END FROM t1, vt0, vt1 WHERE ((IFNULL(9.993959E8, '-638357155') IN ())); -- 0ms;
SELECT DISTINCT (~ ((((vt1.c0, t1.c0, vt0.c1, t1.c0, vt1.c2)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c0, vt1.c2, vt0.c1)) AND ((vt0.c0, vt0.c0, NULL, vt1.c0, vt0.c2))))), LAG((load_extension(t1.c0) IN ()), ((t1.c0) ISNULL), (((((t1.c0)) BETWEEN (('\nL/*')) AND ((t1.c0))))>>(t1.c0))) OVER (), ((LOWER(DISTINCT NULL)) NOT BETWEEN (((vt1.c0)/(vt1.c1))) AND (vt1.c2)) FROM t1;SELECT DISTINCT GROUP_CONCAT(((t1.c0) NOTNULL)) COLLATE RTRIM FROM vt0;SELECT DISTINCT CAST(vt1.c1 AS INTEGER), t1.c0, CASE ((vt0.c0)AND(vt1.c1))  WHEN (x'' IN ()) THEN vt1.c0 END FROM t1, vt0, vt1 WHERE (-1151670240); -- 0ms;
SELECT ALL ((GROUP_CONCAT(t1.c0)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (1778921049)))) FROM vt0, vt1;SELECT ALL ((((x'9a84') BETWEEN (vt1.c1) AND (vt1.c1))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0))) AND ((vt0.c2 IN ()))) FROM vt0, t1 GROUP BY ((((vt0.c2) NOTNULL))>>(((vt1.c2) NOT NULL))), t1.c0, '\rKL';SELECT ALL CAST('**QYy' AS INTEGER) FROM vt0 INDEXED BY i12, t1 WHERE ((((NOT (NULL))) IS FALSE)) LIMIT 402216836 OFFSET 63113432;SELECT DISTINCT MIN(0.7301596655611731), '1531972846', '989320381' FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c2))  WHEN (~ (vt0.c0)) THEN ((vt1.c2)<=(t1.c0)) WHEN COUNT(vt1.c0) THEN ((vt0.c1) NOTNULL) WHEN TRIM(t1.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) END FROM vt1 WHERE ((((((('-245318016') ISNULL))OR(((((x'')AND(0xffffffffb0e56467)))OR('pZ')))))AND(('' IN (NULL, ''))))) GROUP BY load_extension(((vt0.c2)OR(vt0.c1)), ((((vt1.c2)AND(vt0.c2)))OR(vt1.c1))), (((vt1.c0 IN ()))/(CAST(vt0.c2 AS BLOB))), json_type(vt1.c1) COLLATE NOCASE HAVING CAST(vt1.c1 AS REAL) COLLATE BINARY;SELECT TOTAL((NOT (vt0.c1))) FROM vt1, vt0, t1 WHERE (CAST(('-1e500' IN ('et')) AS REAL)) ORDER BY (((0.4937063546797362, vt1.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, (+ (vt0.c1)), ((vt1.c2) IS TRUE))) AND ((CASE WHEN t1.c0 THEN t1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN t1.c0 WHEN vt1.c2 THEN vt1.c0 ELSE vt0.c2 END, vt0.c2 COLLATE RTRIM, ((vt1.c1) IS TRUE))))  NULLS LAST, ((((0.4375797340884511)AND((((vt1.c1, '*怱', vt1.c0))>=((vt0.c0, vt1.c2, vt1.c1))))))AND(((t1.c0)<=(vt1.c0)))) ASC, '7eↇ䀆JYkNT'; -- 0ms;
SELECT (NOT (CAST(vt1.c1 AS INTEGER))) FROM vt1, t1 WHERE (318986464); -- 0ms;
SELECT ALL AVG(t1.c0) FROM vt1, t1; -- 0ms;
SELECT vt1.c0 FROM vt1 LIMIT 1714577372 OFFSET 313224888; -- 0ms;
SELECT CAST(-1.259295134E9 AS BLOB) FROM t1; -- 0ms;
SELECT (+ (vt0.c0 COLLATE RTRIM)), GROUP_CONCAT(((0.13447144631538432) ISNULL)) OVER (), COUNT(vt1.c2) FROM vt1, vt0 WHERE (NULL); -- 0ms;
SELECT vt0.c1, (('Xk.&+O')!=(((vt1.c1) NOT BETWEEN (t1.c0) AND (vt0.c1)))), COUNT(*), CAST(NULL AS BLOB), ((CASE t1.c0  WHEN vt1.c2 THEN vt0.c0 END) IS TRUE) FROM t1, vt0, vt1 NOT INDEXED WHERE (((((((((((0.2816818714623184)AND('')))OR('-989231702')))AND(0x4ca4e966)))OR(x'')))||(('-1405418606' IN ())))); -- 0ms;
SELECT DISTINCT (NOT (vt0.c1)) FROM vt0, t1 WHERE ((((('yt')IS NOT(1767865078)))>=((('1415097955')+(NULL))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, t1; -- 0ms;
SELECT DISTINCT ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)||('')) FROM vt1, vt0 GROUP BY -1389199305 HAVING t1.c0;SELECT TOTAL((('')GLOB(vt1.c1))) OVER ( ORDER BY (((t1.c0)) NOT BETWEEN ((vt1.c2 COLLATE NOCASE)) AND ((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c2)))))  NULLS LAST), NULL, COUNT(*) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c1) IS FALSE)) NOTNULL) FROM vt1, vt0, t1 WHERE (((((0.5987643143050214)-('478281747'))) BETWEEN (((((((((-937248904)AND('-1162860309')))AND(1761352446)))AND(NULL)))OR(NULL))) AND (((0Xfffffffffc959b4f) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((vt1.c1)) BETWEEN ((((vt0.c0)IS NOT(vt1.c2)))) AND ((MAX(vt0.c2)))), SQLITE_VERSION() COLLATE RTRIM, ((((vt1.c0)&(vt0.c1))) ISNULL) FROM vt1 WHERE (QUOTE((- (x''))));SELECT DISTINCT CAST('-631209032' AS TEXT), ABS(vt1.c2) COLLATE BINARY, ((((vt1.c1) BETWEEN (NULL) AND (vt0.c1)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c1) AND (907717392)))), NULL, (((vt1.c1, vt1.c0, vt0.c1, vt1.c2, vt1.c1)) NOT BETWEEN ((((((vt0.c0)OR(t1.c0)))OR(vt1.c1)), LIKE(vt1.c0, vt1.c2), LIKELIHOOD(vt1.c2, 0.9212586244049419), NULL COLLATE BINARY, ((vt1.c1)<<(vt0.c1)))) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 END, CAST(vt1.c0 AS TEXT), ((vt1.c2) NOT NULL), (((vt0.c0, vt0.c2, vt1.c2))<=((vt0.c2, 0.09980796844011763, vt1.c1))), ((vt0.c2)-(vt1.c1))))) FROM vt0, t1, vt1 GROUP BY CASE WHEN vt1.c1 COLLATE BINARY THEN t1.c0 COLLATE BINARY ELSE CAST(vt1.c0 AS INTEGER) END HAVING json_object((~ (vt1.c1)), (+ (vt0.c2))) ORDER BY (((vt0.c0 IN (vt0.c1))) ISNULL) DESC; -- 0ms;
SELECT (((vt0.c2) IS TRUE) IN ()) FROM vt1, vt0; -- 0ms;
SELECT ALL ((GROUP_CONCAT(0.1928058561267877))>>(SQLITE_SOURCE_ID())) FROM t1; -- 0ms;
SELECT ALL vt1.c1 COLLATE BINARY FROM vt0, t1 NOT INDEXED, vt1 WHERE (CASE WHEN (((NULL))<>(('Id4K'))) THEN CAST('-1070996669' AS TEXT) END) LIMIT 1335276541; -- 0ms;
SELECT GROUP_CONCAT((vt0.c0 IN ())) OVER (), '-131317546', ((((vt1.c1) BETWEEN (vt0.c1) AND (vt0.c2)))%((- (vt1.c0)))) FROM vt0 WHERE ((((((NULL)=(-7.84756977E8))))>(((NOT ('-245318016'))))));SELECT CASE WHEN vt0.c1 COLLATE BINARY THEN ((((((((vt1.c1)AND(vt1.c2)))AND(vt0.c2)))OR(vt0.c0)))AND(vt1.c1)) ELSE NULL END FROM vt0, t1, vt1; -- 0ms;
SELECT ALL COUNT(((0.5516683831274467)<=('#*nowbtmI'))) OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((CASE vt1.c1  WHEN vt1.c2 THEN vt0.c1 END)=((NOT (t1.c0)))), CASE WHEN t1.c0 COLLATE NOCASE THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt0.c2) NOT NULL) THEN (((vt1.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, x'')) AND ((vt1.c0, vt1.c2, vt1.c2))) WHEN (NOT (t1.c0)) THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) ELSE x'afb5' END, CASE x''  WHEN SUM(vt0.c2) THEN ((NULL)IS(x'd57b')) WHEN (- (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c2) AND (t1.c0)) WHEN CASE vt1.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt1.c0 END THEN ((((((((vt1.c2)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c2)))AND(vt1.c1)) ELSE vt1.c0 COLLATE RTRIM END FROM t1;SELECT MAX(CAST(t1.c0 AS REAL) COLLATE RTRIM), ((((((((t1.c0)OR(vt0.c2)))OR(vt0.c2)))AND('-787839916')))AND(GROUP_CONCAT(t1.c0))), (((NOT (vt1.c1)))LIKE(CASE vt1.c1  WHEN t1.c0 THEN vt0.c1 WHEN x'' THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c1 END)) FROM vt0, vt1, t1 LIMIT -922671811 OFFSET -410354757; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN ()))&(vt0.c2)), (((NOT (vt1.c1)))==(((vt1.c0)AND(vt0.c0)))), (- (vt0.c2)) COLLATE BINARY FROM vt0, vt1 WHERE (((((('1445273858')) BETWEEN ((1340121160)) AND ((NULL))))IS NOT(CASE NULL  WHEN '275379086' THEN '2068235618' ELSE NULL END))); -- 0ms;
SELECT DISTINCT COUNT(((((vt0.c0)OR(vt1.c2)))OR(vt1.c0))) OVER () FROM vt0, t1, vt1 WHERE ((((('!t') NOT NULL)) BETWEEN ((((NULL, x'750d', '355879423', '-1610855178', NULL))<((NULL, 0.278441801284954, x'', 0.9392878459101572, 0.2593456581443706)))) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) IS TRUE)) BETWEEN (vt1.c2) AND ((('\r_l') NOT BETWEEN (t1.c0) AND (vt0.c0)))) FROM t1;SELECT ALL ((((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt1.c2) AND ((((vt1.c0, vt0.c1, vt1.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((vt1.c1, vt1.c0, -1.303747723E9, vt0.c1, vt0.c2)) AND ((vt1.c2, vt0.c2, t1.c0, 0X4913c366, vt1.c2))))) FROM t1;SELECT ALL (((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c2))))<<(SQLITE_COMPILEOPTION_USED(vt1.c1))) FROM vt0, vt1 WHERE (CASE WHEN '1t' COLLATE NOCASE THEN (((x'')) NOT BETWEEN (('-1485035080')) AND ((x''))) ELSE TRIM(DISTINCT '60151269') END); -- 0ms;
SELECT (('230496451') IS FALSE), ((SUBSTR(vt1.c1, vt0.c0)) ISNULL), (~ (vt1.c0)) COLLATE RTRIM FROM vt0, vt1, t1; -- 0ms;
SELECT ALL ((((vt1.c1)>>(t1.c0)))<(NULL)) FROM t1, vt0;SELECT (((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((CASE WHEN t1.c0 THEN vt1.c0 END))) FROM vt0, t1, vt1 LIMIT 989320381 OFFSET 1013013765; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN (((NULL, vt1.c2, vt1.c0))==((vt1.c0, vt0.c0, vt0.c2))) ELSE CAST(vt0.c2 AS TEXT) END FROM vt1, t1, vt0 WHERE (CAST(((0Xffffffffdc5e8e25) NOT NULL) AS TEXT)); -- 0ms;
SELECT DISTINCT (((((vt1.c0))>=((vt0.c1))))*(CAST(vt1.c0 AS REAL))) FROM vt1 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN (((x'') BETWEEN (x'0896') AND ('똲'))) AND (CASE NULL  WHEN 0.47886645300754593 THEN 0.48665336991732044 ELSE 0.6077370765781416 END)));SELECT DISTINCT MAX(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END) FROM vt0, vt1; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM t1, vt0, vt1 WHERE (CASE LAST_INSERT_ROWID()  WHEN TRIM(x'', NULL) THEN highlight(x'1153', 0.15746294229061575, x'', x'') ELSE ((NULL) NOT BETWEEN (x'') AND (NULL)) END) ORDER BY (((vt1.c2, vt0.c1, vt1.c1)) NOT BETWEEN ((((vt1.c1)==(vt0.c1)), NULL, NULL)) AND ((((((vt1.c2)AND(vt0.c1)))OR(vt0.c1)), CAST(vt1.c2 AS TEXT), (+ (t1.c0))))); -- 0ms;
SELECT (((((vt0.c2, t1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c1, vt1.c2, vt1.c0))))%(((vt0.c2) NOT NULL))), ((CAST(vt1.c1 AS TEXT)) NOT BETWEEN ((((vt0.c2))==((vt0.c2)))) AND ((~ (vt1.c1)))), ((((((vt0.c0)/(vt0.c0)))OR(IFNULL(vt0.c2, t1.c0))))OR(((vt1.c0) IS TRUE))) FROM vt0, t1, vt1 INDEXED BY i12 WHERE ((((CASE WHEN '281724269' THEN NULL END, ((x'') NOTNULL), (((('\r')AND(NULL)))OR(0.6697004806008936)), TRIM(DISTINCT x'', 0.3047691111346862), 0.6145382942924174 COLLATE NOCASE))=(((('854229437') BETWEEN (x'') AND (0.9838994938698253)), CASE x''  WHEN x'' THEN 0.9946210743044129 END, (- (x'')), (((NULL)) NOT BETWEEN (('/{\rz')) AND ((-244499694))), ((((x'2fe6')AND(0X5f28ea2a)))AND(1.993883963E9)))))) GROUP BY (((vt1.c1)*(vt0.c1)) IN (CAST(vt1.c0 AS NUMERIC)));SELECT DISTINCT CASE TOTAL(vt1.c1)  WHEN vt0.c2 THEN (((vt0.c0))>=((vt1.c2))) ELSE vt1.c0 END FROM vt1 WHERE (((x'')&(x'')) COLLATE RTRIM);SELECT ALL TOTAL_CHANGES() FROM t1, vt1, vt0 WHERE (NULL) GROUP BY CAST(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c0 ELSE vt1.c1 END AS NUMERIC); -- 0ms;
SELECT DISTINCT CASE (vt1.c0 IN ())  WHEN TOTAL(vt0.c1) THEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c2)) ELSE COUNT(*) END FROM vt0 WHERE (((((x'')<>(''))) IS TRUE));SELECT DISTINCT (((vt1.c2 IN ()))IS(((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt1.c2)))) FROM vt1 WHERE ((((0Xffffffffc88357ed)) BETWEEN ((CASE WHEN '-1096121302' THEN NULL ELSE '*w' END)) AND ((x''))));SELECT DISTINCT CASE CAST(t1.c0 AS TEXT)  WHEN TYPEOF('!檙') THEN NULL WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) WHEN x'13f9' THEN ((NULL)OR(vt0.c2)) END FROM vt0 GROUP BY ((vt0.c0)IS NOT(vt0.c1)) COLLATE BINARY;SELECT DISTINCT NULL FROM vt1, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt1 WHERE (GLOB(x'5e32', ROUND('-2013298280', '-1408879032'))) ORDER BY '-1595844700', (((((vt1.c1 IN (vt0.c1)))AND(CAST(vt0.c1 AS TEXT))))AND((vt0.c2 IN ()))) DESC  NULLS FIRST, ((CASE WHEN vt0.c2 THEN 0.7006432841813184 ELSE vt1.c1 END) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t1.c0)OR(x'')))) ASC  NULLS FIRST;SELECT ALL vt0.c2, ((((vt0.c1)LIKE(0X458db90f))) NOT BETWEEN (((vt0.c1)<=(vt0.c1))) AND (((vt0.c1)|(vt1.c2)))), (((vt1.c1) BETWEEN (vt1.c2) AND (vt1.c2)) IN ()), ROW_NUMBER() OVER (), (((vt1.c2)<<(vt1.c1)) IN ()) FROM t1, vt1, vt0 WHERE (((CAST(-7.15357384E8 AS INTEGER))%((+ ('-255073541'))))); -- 0ms;
SELECT ALL (((((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c1))))>=(((((vt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0)))))) FROM vt0, t1, vt1; -- 0ms;
SELECT CAST(vt0.c0 AS TEXT) COLLATE RTRIM FROM vt1 WHERE (((((((x''))==((x''))), ((NULL)>('')), (((0.10360934131074828)) NOT BETWEEN (('')) AND (('p)')))))=(((('Ad') NOT BETWEEN (NULL) AND ('1089233309')), ((0.9110630417476995) BETWEEN ('2022515287') AND (0.7003776888314345)), CASE 0.9732650983750096  WHEN ')q' THEN 0.9386175946880968 WHEN -2.45318016E8 THEN '417595535' WHEN '279794677' THEN NULL END))));SELECT DISTINCT (((- (vt0.c0)))+((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((NULL))))) FROM t1, vt1 LIMIT -1792739830;SELECT (((vt1.c2 COLLATE BINARY, vt0.c0, CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END))>((-562414644, HEX(vt1.c1), ((((vt0.c2)OR(vt1.c1)))AND(vt1.c2))))), ((COUNT(vt1.c0)) IS FALSE), (((t1.c0) IS TRUE) IN ()) FROM vt0, t1 WHERE ((NOT (((0.35282434026027887)<<(NULL))))) LIMIT -525374524 OFFSET 1768394646;SELECT DISTINCT ((((vt1.c0 COLLATE BINARY)AND(CASE WHEN t1.c0 THEN vt1.c1 ELSE vt0.c2 END)))OR((+ (vt0.c1)))) FROM vt1 WHERE (((((0.7301596655611731) BETWEEN (0.5907228629138817) AND (0.8365953755802022))) NOTNULL));SELECT ALL CASE WHEN ((vt1.c0)LIKE(vt0.c0)) THEN vt0.c2 WHEN (- (vt1.c0)) THEN ((vt0.c2)=(vt0.c1)) WHEN vt1.c2 THEN vt1.c2 END, LOWER(((t1.c0)-(vt0.c2))), (((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c2)))) IS FALSE) FROM vt0, t1, vt1 WHERE (((('-1752457007' IN ()))>(((x'18a3') NOT NULL)))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((((((((((((x'')AND(vt1.c1)))AND(vt0.c0)))AND(vt1.c2)))OR(vt0.c1)))OR(0.1511001979290073)))OR(x''))), CASE ((NULL)<>(vt0.c2))  WHEN ((((t1.c0)AND(0Xffffffffbe8f4822)))OR(vt1.c2)) THEN -4.64943107E8 ELSE (('1521039889') BETWEEN (vt0.c0) AND (0.8098662791750093)) END, rtreenode(COUNT(vt1.c2), t1.c0), CASE WHEN TOTAL(vt1.c2) THEN CAST(vt0.c2 AS REAL) WHEN CASE WHEN t1.c0 THEN vt1.c2 END THEN ((vt1.c0)>(vt1.c1)) WHEN ((0.41825682085591465)%(NULL)) THEN '1183346779' ELSE CAST(vt0.c2 AS BLOB) END, CAST((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) AS INTEGER) FROM vt0 WHERE (((((((((((((((((CASE 0.009028163671269351  WHEN '' THEN 230496451 WHEN NULL THEN 'HI' WHEN x'' THEN x'' ELSE '' END)OR('')))AND(TRIM(DISTINCT 0.6347555416960371, x'9fbc'))))AND((NULL IN ()))))AND(((x'') NOTNULL))))OR((+ ('ࢲ&')))))OR(1.183346779E9)))AND(((NULL)==(x'')))))OR(((x'')&(NULL))))) LIMIT -159687931 OFFSET -280362664;SELECT ALL (((vt0.c1)) BETWEEN ((vt1.c2)) AND ((DATETIME(vt0.c1, vt0.c0, 0.9009009175268597, vt1.c2, vt1.c2)))) FROM vt0 INDEXED BY i12;SELECT ((((((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN t1.c0 WHEN vt1.c0 THEN vt1.c2 END)AND(HEX(vt0.c2))))AND((vt0.c1 IN ()))))OR(LIKELY(DISTINCT '-462829871'))))AND(((((vt0.c0)AND(t1.c0)))AND(vt1.c2)))), CASE ((vt1.c2) NOT BETWEEN (vt1.c2) AND (t1.c0))  WHEN ((NULL)>(vt1.c2)) THEN (~ (vt0.c2)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END, TOTAL(((t1.c0) NOT NULL)), ((vt1.c2 COLLATE BINARY) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CAST(vt0.c2 AS INTEGER))), ((((t1.c0 IN ())))>=((0.5216625035334816))) FROM vt1 WHERE (((CAST(NULL AS REAL))&(((x'0289') IS FALSE))));SELECT ALL CASE WHEN vt1.c0 THEN vt1.c1 ELSE t1.c0 END COLLATE BINARY FROM vt0 WHERE ((((NULL))==((0.9112197959110976)))) GROUP BY (((vt0.c0)) BETWEEN ((vt1.c1 COLLATE BINARY)) AND ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))) HAVING (NOT (json(vt0.c1)));SELECT ALL ((((vt0.c0)>(0.047261386177395726)))-(((((vt1.c0)OR(0.6745994621675517)))OR(vt1.c0)))) FROM vt1, vt0 WHERE (((('1496593498')+('Id4K')) IN (NULL))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)GLOB(vt0.c0)), CAST(vt1.c2 AS REAL), vt1.c2, NULL, ((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c2))))!=((((vt1.c2)GLOB(vt1.c1)), CASE vt1.c2  WHEN vt1.c0 THEN vt1.c1 END, ((((((((vt0.c0)AND(t1.c0)))AND(vt0.c2)))OR(t1.c0)))OR(vt0.c0)), CASE WHEN x'' THEN vt1.c0 WHEN '-929414978' THEN t1.c0 WHEN x'' THEN x'3854' WHEN vt1.c2 THEN vt0.c1 WHEN vt1.c1 THEN t1.c0 END, ((vt1.c0) NOT BETWEEN (vt0.c2) AND (0.7140551170625777))))) FROM vt0, vt1 WHERE (NULL);SELECT ALL CAST(vt1.c0 COLLATE RTRIM AS REAL) FROM vt0, vt1, t1 GROUP BY ((vt1.c0)-(x'')) COLLATE BINARY COLLATE NOCASE; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL UNLIKELY(CAST(vt0.c1 AS INTEGER)), (t1.c0 IN ((((t1.c0)) BETWEEN ((vt1.c2)) AND ((vt1.c1))), t1.c0 COLLATE NOCASE)), 0.3666661049664679 FROM vt0, vt1 WHERE ((NOT ((((((((('g2rI휼R>/')AND(0X10ad53f5)))AND('-1310353082')))OR(x'')))AND(NULL)))));SELECT ALL (~ (COUNT(t1.c0))), CAST((vt1.c1 IN ()) AS TEXT), (((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN ((((vt1.c0) ISNULL), NULL, '')) AND ((CASE vt0.c2  WHEN t1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c2 THEN t1.c0 ELSE vt1.c2 END, 'v', vt0.c0 COLLATE BINARY))) FROM t1, vt1;SELECT DISTINCT CAST(((vt1.c1)<=(vt1.c0)) AS INTEGER) FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)IS(vt0.c2))) FROM t1;SELECT DISTINCT (((vt0.c0) IS FALSE) IN ()) FROM t1; -- 1ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c2))|(((vt1.c2) NOT BETWEEN (vt0.c2) AND (vt1.c2)))) FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT (((- (vt1.c1)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c1 WHEN t1.c0 THEN 296463971 WHEN vt0.c0 THEN vt0.c2 END)), AVG(vt0.c2) OVER (), ((0.1857379275203016)%(CASE vt1.c2  WHEN t1.c0 THEN vt1.c1 END)) FROM t1, vt1, vt0 WHERE (((CAST(NULL AS INTEGER)) BETWEEN ((('1798575813')>>(x'639508da'))) AND (COALESCE(x'', x'', x'', NULL, '1574678828', x'')))); -- 0ms;
SELECT ALL MIN(LOWER(t1.c0)) FROM vt0, t1 WHERE (CAST(((-1892294078)|(1120312691)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt1.c2 THEN t1.c0 END)AND(json_remove(vt0.c0, vt1.c1))))AND(vt0.c0)) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT (((t1.c0 IN ()))|(((x'71e8')AND(vt0.c1)))) FROM t1, vt0, vt1 WHERE (NULL); -- 0ms;
SELECT (((vt1.c2))>((vt1.c2))) COLLATE BINARY FROM vt0, vt1; -- 0ms;
SELECT ALL (vt0.c0 COLLATE RTRIM IN ()) FROM vt1, vt0, t1; -- 0ms;
SELECT COALESCE(DISTINCT ((vt1.c0) NOTNULL), ((vt0.c0) IS FALSE), (t1.c0 IN (vt1.c0, vt1.c0)), ((vt0.c0) NOTNULL), CASE WHEN vt0.c2 THEN vt1.c2 END, CAST(vt0.c0 AS BLOB), (vt0.c1 IN ()), ((vt0.c0) NOT BETWEEN ('睗.Tu') AND (vt1.c0))) FROM vt1, vt0, t1 WHERE (TYPEOF(DISTINCT (+ (NULL)))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t1.c0 THEN vt1.c1 END AS REAL) FROM vt0, vt1, t1 WHERE ((~ ((0Xa8fb28d IN ())))); -- 0ms;
SELECT DISTINCT ((((((t1.c0) NOT BETWEEN (vt1.c2) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(((vt1.c1)<(t1.c0)))) FROM vt1, vt0, t1; -- 0ms;
SELECT (+ (t1.c0)) COLLATE BINARY, ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))/((((vt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))), CASE MAX(vt1.c1)  WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0)) WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c2, 'fv', vt0.c1))>((vt1.c1, vt0.c2, vt0.c1))) WHEN (NOT (vt1.c0)) THEN ((vt1.c1)%(vt0.c0)) END FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT NULL, CASE ((vt0.c2) NOT NULL)  WHEN CAST(vt0.c1 AS NUMERIC) THEN vt1.c1 ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)) END, (((t1.c0)) NOT BETWEEN ((CAST(vt1.c2 AS INTEGER))) AND ((((((t1.c0)OR(vt1.c2)))OR(t1.c0))))) FROM vt0, vt1, t1; -- 1ms;
SELECT DISTINCT (+ (IFNULL(vt0.c1, vt1.c1))), ((((((((NULL)AND(((vt1.c1) NOT NULL))))OR(vt0.c2)))OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c0)))), ((CAST(vt0.c1 AS TEXT))IS(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt1, vt0 WHERE ((((((((0.6660153796069075)) NOT BETWEEN ((0.46354611880922103)) AND (('-1078129955'))))OR((((0.5883417705255808)) NOT BETWEEN ((0x5d1ba806)) AND ((NULL))))))AND(CAST(0X3ae5d768 AS REAL)))); -- 0ms;
SELECT DISTINCT (((vt1.c2))>((vt0.c1))) COLLATE BINARY FROM vt0 WHERE (SQLITE_VERSION()) UNION ALL SELECT ALL ((((vt1.c1)AND(vt1.c0)))AND(vt0.c2)) COLLATE NOCASE FROM vt0, t1, vt1;SELECT DISTINCT CASE (- (vt0.c0))  WHEN ((vt1.c0)IS(vt1.c2)) THEN ((((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1)) WHEN vt0.c2 COLLATE NOCASE THEN vt1.c0 COLLATE BINARY WHEN ((((0.7636670927356736)OR(x'')))AND(NULL)) THEN ABS(vt1.c0) END FROM vt0, vt1, t1 WHERE ((~ (LENGTH('쿿5ud\n')))); -- 0ms;
SELECT ALL ((((((NULL)OR(vt0.c1)))AND(vt1.c2)))OR(CASE WHEN vt1.c1 THEN vt0.c1 END)) FROM t1, vt0 GROUP BY (((((t1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))==((vt0.c0))), ((((t1.c0)>>(t1.c0)))=(((vt1.c1)OR(vt0.c1)))), ((((((vt0.c0)!=(vt1.c0)))AND(vt0.c1 COLLATE NOCASE)))AND((((vt0.c2))>((vt0.c2)))));SELECT DISTINCT vt0.c0 FROM t1, vt0; -- 1ms;
SELECT DISTINCT NULLIF(DISTINCT ((vt0.c0)||(vt1.c1)), COUNT(t1.c0)), ((((vt0.c0)AND(CASE WHEN NULL THEN t1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 ELSE vt0.c1 END)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))), ((vt0.c2)IS NOT(((t1.c0)<>(0Xffffffff9524f60a)))) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT 0.4167169016465505 FROM vt0, t1, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c2 WHEN '' THEN vt0.c2 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c2 IN ()))) FROM t1, vt0 WHERE (((0.18114676588224654 COLLATE BINARY) NOT NULL));SELECT ALL CAST((vt0.c0 IN ()) AS NUMERIC), ((NOT (vt0.c1)) IN (CAST(vt1.c0 AS BLOB))), CAST((((vt0.c1, vt1.c0, vt0.c2, vt1.c2, vt1.c1))!=((vt1.c2, vt1.c1, vt0.c1, vt0.c1, t1.c0))) AS TEXT) FROM vt1, vt0, t1 LIMIT 1989088413 OFFSET -1709383212; -- 0ms;
SELECT (json_quote(t1.c0) IN ()) FROM t1, vt1; -- 0ms;
SELECT ((COUNT(vt1.c1)) IS TRUE) FROM t1, vt1, vt0 WHERE (((((('0.9946210743044129', x'598a', NULL))<((x'', 0.13783756633873967, 0.4341530334148058))))GLOB((- (NULL))))); -- 0ms;
SELECT TYPEOF((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))), ((NULL COLLATE NOCASE) ISNULL), ((vt1.c0) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0)) FROM t1, vt1 WHERE (LOWER(CASE x'fbfc'  WHEN NULL THEN x'' ELSE 0.3657736842060406 END));SELECT ALL (~ ('1156687030')) FROM t1 GROUP BY CASE ((vt0.c1)&(NULL))  WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) WHEN 0.4908299505284407 THEN ((vt1.c1)<>(0.36249462614935346)) WHEN (((t1.c0, vt1.c2, vt1.c2))<=((vt1.c2, t1.c0, t1.c0))) THEN vt0.c0 END, ((vt0.c2)+(COALESCE(vt1.c1, vt1.c0))), (((((+ (vt1.c0)))OR(((t1.c0) ISNULL))))OR(CASE WHEN vt1.c2 THEN vt0.c2 ELSE vt0.c0 END)), ((CHAR(vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (GLOB('95694817', vt1.c1))), 0.7371852134073442;SELECT (((~ (vt1.c2))) NOT NULL), '', (~ ((NOT (vt1.c0)))), 0.456165419092627, 0.3263116899417119 FROM vt0, t1, vt1 WHERE (((0Xffffffff87befec9 COLLATE RTRIM)IS NOT(CAST(0.20942884613027213 AS BLOB)))); -- 0ms;
SELECT DISTINCT t1.c0 FROM t1, vt1, vt0 GROUP BY ((((vt1.c1)*(vt1.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((((vt1.c0)OR(t1.c0)))AND(vt1.c0)))) ORDER BY (((((vt1.c0))=(('200179628'))))IS NOT((vt0.c2 IN ()))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL FROM vt0, t1, vt1 WHERE (((('-942845721')) NOT BETWEEN ((CAST('779074943' AS TEXT))) AND ((((0.5368154153253534) IS TRUE))))); -- 0ms;
SELECT ALL (((vt1.c1))!=((t1.c0))) COLLATE NOCASE FROM vt1, t1; -- 0ms;
SELECT DISTINCT CAST(((vt1.c2) NOT NULL) AS INTEGER) FROM vt1, t1, vt0 WHERE ((((('-0.0')LIKE(NULL)))%(((NULL)=(-1.405418606E9))))); -- 0ms;
SELECT CAST((NOT (vt0.c2)) AS BLOB) FROM vt1 WHERE (((CASE WHEN x'7b07' THEN '1917635967' ELSE x'' END) BETWEEN (((0.3727458187977545)+(x''))) AND (0.6944512930058552))) ORDER BY (((((vt0.c2)OR(vt0.c1)))OR(vt1.c0)) IN (((t1.c0)==(vt1.c1)))) DESC  NULLS LAST;SELECT (((vt1.c1)) BETWEEN (((vt1.c2 IN ()))) AND ((((vt0.c1) BETWEEN (vt0.c2) AND (vt1.c1))))) FROM vt0, t1;SELECT ALL x'', ((0.865770540606171) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (((vt0.c1)!=(vt0.c0)))), (((vt0.c2)) NOT BETWEEN ((((vt0.c1) BETWEEN (t1.c0) AND (vt1.c1)))) AND ((((vt1.c0) NOT NULL)))) FROM vt0, t1, vt1 LIMIT -1770490811 OFFSET 1964070680; -- 1ms;
SELECT DISTINCT '1693563851', vt1.c0, vt1.c0 FROM vt0, t1, vt1 WHERE ((((+ (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((((vt1.c1)>>(t1.c0)))OR(CASE vt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)))OR(NULL)) FROM vt0;SELECT NTH_VALUE(MIN(((t1.c0) NOTNULL), ((vt0.c0) NOTNULL)), vt1.c1) OVER () FROM vt1, t1 FULL OUTER JOIN vt0 ON (- (((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c1)))) WHERE ((((((0X390c557a)>(x'e8ee')), ('-691026083' IN (x'21534785', -1655489809)), CASE WHEN '44607381' THEN -1259295134 ELSE x'' END))<((('486922107' IN ()), ((0.8183544179599357)+(NULL)), (((((((('-2075925580')OR(x'')))AND(0.36414395609869454)))AND(0.6461263471718334)))OR(0.7096003295974337)))))); -- 0ms;
SELECT DISTINCT (((((((vt0.c2))!=((vt1.c0))))AND(((((vt1.c1)OR(vt1.c2)))AND(vt0.c2)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0, vt1; -- 4ms;
SELECT ALL ((((vt1.c0) BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (((vt1.c0)>>(vt0.c1))) AND (TOTAL(vt0.c1))) FROM t1;SELECT ((vt1.c2 COLLATE BINARY)LIKE((0.5871759872164297 IN ()))), ((CAST(vt0.c1 AS BLOB)) IS FALSE), FIRST_VALUE((((((t1.c0, t1.c0, 0.12201020561114972))=((vt1.c2, vt1.c1, vt1.c1)))) ISNULL)) OVER () FROM t1, vt1;SELECT DISTINCT (((~ (vt0.c0))) NOT BETWEEN (((((t1.c0)OR(vt0.c2)))AND(t1.c0))) AND (vt1.c2 COLLATE NOCASE)), ((((vt0.c2) NOT NULL))+(vt1.c0 COLLATE NOCASE)), vt0.c1 FROM vt1 WHERE ((((((0xffffffff8335d3f7))>=(('M5')))) NOT BETWEEN (((NULL)==('-638357155'))) AND (((((x'')OR('-935032744')))AND(0X3fbe2ecc))))) GROUP BY vt1.c2, ((((vt0.c2)=(vt0.c2))) NOT BETWEEN (CAST(vt1.c2 AS REAL)) AND ((+ (t1.c0)))), (CAST(0.2593456581443706 AS BLOB) IN ()), ((((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))))>((((-9.20141603E8) NOTNULL)))), CASE NULL  WHEN ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)) THEN (('-551569950') NOTNULL) WHEN ABS(DISTINCT vt1.c2) THEN CAST(vt0.c2 AS REAL) WHEN CAST(t1.c0 AS REAL) THEN (('-1950977116') BETWEEN (vt1.c2) AND (vt0.c1)) ELSE (((vt0.c1))!=((vt1.c2))) END HAVING ((((((vt1.c0)AND(vt1.c0)))AND(vt0.c1))) BETWEEN ((((vt1.c0))>=((vt0.c2)))) AND ((vt0.c1 IN ())));SELECT DISTINCT COUNT(TRIM(vt0.c1, vt0.c2)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t1, vt1 WHERE (HEX(CAST(0x70dd00e AS REAL)));SELECT ALL ((((((vt1.c1)GLOB(vt0.c2)))OR(x'')))AND(((vt0.c0) NOTNULL))), 0.15364033700510493, LENGTH(json_array_length(t1.c0, vt0.c2)) FROM vt1, vt0, t1 WHERE (CASE WHEN CAST('230496451' AS NUMERIC) THEN ((x'')IS NOT('x>')) WHEN (('fa')/(x'')) THEN x'406fb4fc' WHEN (NULL IN ()) THEN 0.08728260349169414 COLLATE RTRIM WHEN CAST(x'0f4c' AS BLOB) THEN ((NULL) NOT NULL) WHEN 0.6697004806008936 COLLATE RTRIM THEN (((0.914949972239117, x'', 'mvᣃWMo>'))<((x'', 4.99231854E8, '-1082066521'))) ELSE ((((((((467451143)AND(x'')))OR(NULL)))OR(-8.348318E7)))AND('816652762')) END); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED(vt0.c2) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((0.6801357917651688)<=(0.7593375441023036)), LAST_VALUE((((vt1.c0)LIKE(t1.c0)) IN ((vt1.c1 IN (vt1.c0))))) OVER (), NTILE(CAST(vt1.c0 AS INTEGER)) OVER ( PARTITION BY CAST(((t1.c0) BETWEEN (vt1.c2) AND (vt1.c0)) AS NUMERIC), NULLIF((- (vt0.c0)), (t1.c0 IN ())) ROWS CASE CAST(vt1.c1 AS INTEGER)  WHEN (((vt1.c1))<=((vt0.c1))) THEN (((0.32901964382140936))>=((vt1.c2))) WHEN ((vt1.c1)>(vt0.c1)) THEN '&u' COLLATE NOCASE WHEN t1.c0 THEN CASE t1.c0  WHEN vt0.c0 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE ((vt1.c0)%(vt1.c2)) END PRECEDING EXCLUDE NO OTHERS) FROM vt1, t1 GROUP BY ((((LIKELIHOOD(vt1.c1, 0.8346840473901366))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.9389068736790767 END)))OR(LIKE(vt0.c1, vt0.c0, '4'))), CASE vt1.c0  WHEN (x'' IN ()) THEN ((vt0.c1)||(x'')) WHEN ((t1.c0) NOT NULL) THEN CASE vt1.c2  WHEN vt0.c2 THEN vt1.c2 END WHEN ((((t1.c0)AND(vt1.c1)))AND(vt1.c0)) THEN x'' ELSE ((t1.c0) IS FALSE) END, (- (CAST(t1.c0 AS INTEGER)));SELECT ALL ((((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c1)))<((NOT (vt0.c0)))), ((PRINTF(t1.c0))<(CAST(vt0.c2 AS TEXT))), ((((((NULL)OR(vt1.c0)))OR(t1.c0)))==(((0.38595268804365734) BETWEEN (vt0.c1) AND (vt1.c1)))) FROM vt0 WHERE (CAST(((NULL) IS TRUE) AS INTEGER));SELECT DISTINCT 'Tk%䂖Is\QX', (NOT (((t1.c0) BETWEEN (vt1.c2) AND (vt1.c2)))), CAST(((vt1.c2)%(vt1.c2)) AS TEXT) FROM vt0, t1 ORDER BY '~tGi';SELECT ALL (((vt1.c0))<=(((('') IS TRUE)))) FROM t1, vt1, vt0 WHERE (CAST(x'' AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT ALL (((vt1.c2)) BETWEEN ((((vt0.c2)<<(vt1.c0)))) AND ((((vt1.c2) IS FALSE)))) FROM vt0 ORDER BY ((((((((CASE vt0.c0  WHEN 0.22193634273448826 THEN vt1.c2 WHEN vt1.c1 THEN 1.993883963E9 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt1.c1 THEN t1.c0 WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END)OR(((vt0.c0)||(vt0.c2)))))OR(((t1.c0)>(vt0.c1)))))AND(NULL)))OR(CAST(vt0.c1 AS BLOB)))  NULLS LAST;SELECT ALL vt1.c0, ((((((((MIN(vt0.c2))OR(HEX(vt1.c0))))OR(MIN(vt0.c2))))AND(MAX(vt0.c1))))AND(COUNT(*))), ((MIN(vt1.c2, vt0.c2, x'', vt0.c2)) IS TRUE) FROM t1 WHERE (CAST(CAST('1645065778' AS NUMERIC) AS NUMERIC));SELECT DISTINCT ((((((vt0.c0)!=(vt1.c1)))AND(MAX(t1.c0))))AND(vt1.c2)) FROM t1, vt0;SELECT DISTINCT (vt0.c2 COLLATE NOCASE IN ()) FROM vt1, t1 WHERE (CAST(NULL COLLATE RTRIM AS REAL)); -- 0ms;
SELECT DISTINCT MIN(CAST(vt1.c0 AS TEXT)) FROM vt0, t1, vt1 WHERE (CASE WHEN CASE x''  WHEN '厒꺣-5' THEN 0.7049261908968897 WHEN x'' THEN 0.9626851626171179 WHEN '1798575813' THEN NULL WHEN NULL THEN NULL WHEN '' THEN NULL END THEN (x'' IN (x'')) WHEN (~ (NULL)) THEN load_extension(1, 0.18178325770033021) WHEN ((('-2047571483'))==((NULL))) THEN (((('-2047571483')OR(NULL)))OR(NULL)) END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), NTH_VALUE((((t1.c0)) NOT BETWEEN ((((vt1.c2)|(vt0.c2)))) AND ((CAST(vt1.c1 AS BLOB)))), (((t1.c0 IN (x'3f29232e'))) BETWEEN (NULL) AND (((((vt1.c2)OR(vt0.c1)))AND(0.4300001972568993))))) OVER (), (NOT (CAST(NULL AS TEXT))) FROM t1, vt0 INNER JOIN vt1 ON ((0.278441801284954) NOT BETWEEN (CASE WHEN t1.c0 THEN vt0.c0 ELSE vt1.c1 END) AND (CASE vt1.c2  WHEN vt0.c2 THEN t1.c0 END)) LIMIT -1720327149 OFFSET -245318016; -- 1ms;
SELECT ALL COUNT(*) FROM vt0, t1; -- 0ms;
SELECT ALL CASE WHEN (- (vt1.c0)) THEN INSTR(t1.c0, vt0.c0) END FROM vt1 WHERE (CAST('n' AS BLOB) COLLATE BINARY);SELECT ALL ((- (vt1.c2)) IN ()) FROM vt0, vt1 WHERE (((((NULL)<>(NULL))) NOT BETWEEN ((('-1950977116') BETWEEN (NULL) AND (NULL))) AND (((NULL) NOTNULL)))) GROUP BY ((RTRIM(vt0.c0)) NOTNULL) HAVING vt1.c1; -- 0ms;
SELECT (((vt1.c1 COLLATE NOCASE))<((((t1.c0)>(NULL))))), CAST(CASE vt1.c2  WHEN 'p)' THEN vt0.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt0.c1 THEN vt1.c1 END AS NUMERIC), ((((t1.c0)<(vt0.c0))) ISNULL) FROM vt1;SELECT (((MAX(vt1.c2), LOWER(vt0.c0), ((vt0.c1) BETWEEN (vt1.c1) AND (vt0.c0))))<=((((vt0.c0) BETWEEN (t1.c0) AND (vt1.c0)), (((vt1.c0, vt1.c0, vt0.c0))<((884684581, vt1.c1, vt0.c0))), TYPEOF(NULL)))) FROM vt0;SELECT DISTINCT (NOT (((((((((vt0.c1)AND(vt1.c2)))AND(vt1.c1)))AND(vt0.c0)))OR(vt0.c2)))), vt0.c1, x'9f0d' FROM t1, vt1, vt0; -- 0ms;
SELECT ALL (((vt1.c0) BETWEEN (vt0.c2) AND (vt0.c0)) IN ()) FROM t1 LIMIT -1529770707; -- 0ms;
SELECT DISTINCT LTRIM(x'', ((vt0.c1) IS FALSE)) FROM vt1, vt0 WHERE (CASE WHEN x'' THEN 0X2e0c0400 END COLLATE NOCASE) GROUP BY ((vt1.c0 IN ()) IN ()), vt0.c0, (((((vt0.c2 IN ()))OR('-1798545436')))OR(((vt0.c0)&(t1.c0)))) LIMIT -1267792837;SELECT ALL (((vt0.c2) ISNULL) IN ()) FROM vt1, vt0, t1 NOT INDEXED WHERE ((((((- (0.39610770873653733)))AND((NULL IN ()))))OR(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT CAST('DADy' AS INTEGER) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM t1;SELECT DISTINCT ((t1.c0) IS FALSE) FROM vt0, vt1 WHERE (CAST((('H2Cc')-(x'')) AS BLOB)) ORDER BY (((vt1.c2, vt0.c0, vt0.c2)) NOT BETWEEN ((((vt0.c0)>(vt0.c2)), ((vt1.c2)LIKE(vt0.c2)), ((((((((t1.c0)OR('ᒒ<!I*M')))AND(vt0.c0)))OR(t1.c0)))AND(vt0.c2)))) AND (((NOT (vt1.c2)), (vt0.c2 IN ()), x''))) ASC  NULLS LAST;SELECT DISTINCT ((CAST(vt0.c1 AS BLOB)) IS TRUE) FROM vt0, vt1 INDEXED BY i12 WHERE ((NOT (CAST(NULL AS BLOB))));SELECT TOTAL(0xffffffff96155455) OVER ( ORDER BY t1.c0 DESC, HEX((NOT (vt0.c2))), (NOT (vt1.c1)) ASC  NULLS FIRST) FROM t1, vt0 WHERE ((CHANGES() IN (CAST(0X10ad53f5 AS NUMERIC))));SELECT DISTINCT ((vt0.c0)||((t1.c0 IN ()))) FROM vt0, vt1, t1; -- 0ms;
SELECT DISTINCT CAST(CASE vt1.c0  WHEN t1.c0 THEN vt0.c0 END AS BLOB) FROM t1, vt0, vt1; -- 0ms;
SELECT ALL (~ (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)))), ((((((vt1.c1, vt0.c0, vt0.c1))>=((vt0.c0, vt0.c1, vt0.c0))), CASE vt0.c0  WHEN 0.4314407956142171 THEN vt0.c0 END, LIKELIHOOD(DISTINCT vt0.c1, 0.33820725215737923), ((NULL) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt1.c2) BETWEEN (t1.c0) AND (vt1.c2))))<=((((((vt1.c2)OR(vt1.c0)))OR(vt0.c1)), (((t1.c0))>((vt1.c1))), (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((3.35223584E8)OR(vt1.c0)), ((vt0.c0) NOTNULL)))), CASE ((vt1.c1)IS(vt0.c1))  WHEN x'e62388db' COLLATE NOCASE THEN (vt1.c0 IN (vt0.c1)) ELSE 0Xfffffffffba7207f END FROM vt0, vt1 WHERE (CAST(((0Xffffffffe4b8bd21) BETWEEN (x'') AND (0.42903561855871275)) AS INTEGER));SELECT DISTINCT ((TOTAL_CHANGES()) IS FALSE) FROM vt1, vt0 WHERE (CASE WHEN ((x'') BETWEEN ('943749265') AND (0.7815155735643107)) THEN (+ (0Xffffffffd792197b)) ELSE (((0.7156024970044881)) BETWEEN ((NULL)) AND ((-518272408))) END); -- 0ms;
SELECT ALL TYPEOF(CASE vt1.c2  WHEN vt1.c2 THEN vt0.c2 ELSE vt0.c2 END) FROM vt1, t1, vt0 WHERE (((((0.2811748569813993)OR('398842301')))AND(NULL)) COLLATE BINARY) GROUP BY (+ (vt0.c2 COLLATE RTRIM)), ((((t1.c0) ISNULL))&(vt0.c0)), CASE WHEN NULL THEN vt1.c0 COLLATE BINARY ELSE (vt1.c2 IN ()) END, ((((((vt0.c0) IS TRUE))AND(t1.c0)))AND(DATE(vt0.c0, t1.c0, vt0.c1))), (((((x'3302') NOT BETWEEN (1003677734) AND (vt1.c1))))<((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0))))) HAVING (((vt0.c1)) BETWEEN (((~ (vt1.c0)))) AND ((((vt0.c1)%(t1.c0))))) ORDER BY (((((vt1.c1))=((vt1.c1)))) BETWEEN (TRIM(x'', vt0.c2)) AND ((('')&(vt0.c2)))) ASC, NULL, vt1.c2 DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((((vt0.c1)AND(vt0.c2)))OR(vt1.c2)))<>((vt1.c2 IN (vt1.c0)))), ((vt0.c0 COLLATE RTRIM)<>(((t1.c0) IS TRUE))), (- ((('0.8091870828934217') BETWEEN (vt1.c2) AND (vt1.c0)))) FROM t1 ORDER BY t1.c0 ASC  NULLS FIRST;SELECT DISTINCT RANK() OVER () FROM t1, vt0 WHERE (CASE 242242091 COLLATE RTRIM  WHEN (- (0.5065389633281052)) THEN (x'3d34' IN ()) ELSE ((0.9437820553293914)>(0.2774208090837129)) END); -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c1 AS TEXT) AS NUMERIC) FROM t1;SELECT ALL COUNT(((vt0.c0)LIKE(vt1.c1))) OVER () FROM t1, vt0, vt1 WHERE (((((NULL)) BETWEEN ((x'')) AND ((NULL))) IN ())); -- 0ms;
SELECT DISTINCT (('0.0')IS NOT(t1.c0 COLLATE RTRIM)) FROM t1; -- 0ms;
SELECT CASE (((vt0.c1, vt0.c0, vt0.c2)) BETWEEN ((vt0.c1, NULL, vt0.c1)) AND ((vt0.c2, vt0.c0, 0.5935454199794622)))  WHEN COUNT(*) THEN ((t1.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END, (((((vt1.c2)) BETWEEN ((t1.c0)) AND ((vt0.c0))))<((vt0.c2 IN ()))), ((NULL)%((vt1.c0 IN ()))) FROM vt0 WHERE ((((((- (0.7829122227344113)))AND(CAST('Yvꔿ{u	' AS INTEGER))))OR(CASE WHEN -1671145569 THEN 0.7393354142243861 WHEN NULL THEN x'c312' WHEN 0X2200e15c THEN 'GC' ELSE '|o' END)));SELECT ((((- (vt1.c1))))=(((t1.c0 IN (vt1.c1, 0.8920216249740194))))) FROM vt0;SELECT ALL json_insert('萂O', ((t1.c0)=(vt1.c2)), '') FROM t1, vt0 WHERE (((CASE 'oCX~YZ'  WHEN NULL THEN x'' WHEN -1564373780 THEN NULL WHEN '0.17998295409643073' THEN 0.04199533142514922 ELSE '8r凶K' END)OR((('-768602148') NOT BETWEEN (0.7850346712143403) AND (x'')))));SELECT CASE WHEN ((vt0.c0)<=(t1.c0)) THEN (vt1.c1 IN ()) ELSE 'r䜖' END FROM vt0 WHERE ((((('af') IS TRUE)) IS TRUE));SELECT DISTINCT ((LOWER(vt1.c1))GLOB(((vt0.c2)/(vt1.c0)))) FROM t1, vt1 WHERE (((((((((((NULL)OR(0.4597409991004706)))OR((('-1666936319') IS TRUE))))OR((0.6212360723566079 IN ()))))AND(('439814020' IN ()))))AND(((244415993)-('1613444351'))))) ORDER BY vt1.c0;SELECT DISTINCT (NOT (vt1.c0)) COLLATE RTRIM FROM vt0, t1 WHERE (((0.4699724134638751)/('0t)䋌VD䖿')) COLLATE NOCASE) ORDER BY CAST(((NULL) IS TRUE) AS BLOB) DESC  NULLS FIRST, vt1.c0 DESC  NULLS LAST;SELECT ALL NULL FROM t1, vt1, vt0; -- 0ms;
SELECT (- (-1327143833)) FROM vt1, vt0 WHERE (((NULL)&('*')) COLLATE BINARY); -- 0ms;
SELECT LAST_VALUE((((((((t1.c0)AND(vt0.c0)))OR(vt1.c2)), ((vt0.c1)|(t1.c0)), ((vt0.c2) ISNULL), ((vt0.c2)GLOB(vt0.c0)), x''))<>((((vt0.c2)OR(vt1.c2)), (vt1.c1 IN ()), ((vt0.c1) IS FALSE), ((vt0.c2)>=(vt0.c2)), ((vt0.c2) IS FALSE))))) OVER () FROM vt0, t1, vt1 WHERE (((-1.529770707E9)&(NULL)) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ((((vt1.c2)%(vt0.c0)))<=(((t1.c0)AND(t1.c0)))) FROM t1 WHERE ((((('+T')>(300354833)))-((+ (0.08307645130381824)))));SELECT DISTINCT COUNT(((((x'')AND('-1792739830')))AND(vt1.c1))) OVER () FROM vt0 FULL OUTER JOIN vt1 ON CAST(((t1.c0) NOTNULL) AS REAL) ORDER BY ABS(DISTINCT (vt0.c0 IN (vt1.c2)))  NULLS FIRST;SELECT SUM(((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c0))) OVER () FROM t1, vt0 WHERE (CASE NULL  WHEN CASE WHEN 0.8233579110806172 THEN NULL ELSE '㛕0*' END THEN ((NULL) BETWEEN (x'65ae') AND (x'949c')) END); -- 0ms;
SELECT DISTINCT AVG((vt0.c2 IN ())) OVER () FROM t1, vt1 WHERE (CAST(((((NULL)OR(0x5aa93a11)))OR(0.32528633539658514)) AS NUMERIC)); -- 0ms;
SELECT ALL ((((CAST(vt1.c1 AS NUMERIC))OR((vt1.c2 IN ()))))AND(vt0.c0)) FROM vt1, t1, vt0 WHERE (((CASE WHEN NULL THEN 1854503883 END) NOT BETWEEN (x'' COLLATE BINARY) AND (((NULL)GLOB('-1387450926'))))); -- 0ms;
SELECT DISTINCT (~ (((vt0.c0)OR(vt0.c2)))) FROM vt1, vt0, t1 WHERE (((('')%('')) IN ((('0.278441801284954')<(0.2744793822299121))))) ORDER BY (((vt1.c2 IN ())) ISNULL)  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((((vt1.c0)AND(vt0.c2)))AND(vt0.c0)))>(((vt0.c1)<(t1.c0)))) FROM t1;SELECT TIME(vt1.c1, ((((((((vt0.c0)OR(t1.c0)))OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)), (0.4260129869386675 IN ())) FROM vt0 WHERE (0.2588019760252883);SELECT DISTINCT RANK() OVER (), vt1.c2, ((((vt0.c2) NOT NULL))+(((vt1.c0) NOTNULL))) FROM vt1 WHERE ((((('q|!k[]]')) NOT BETWEEN (('0.9888666284362864')) AND ((NULL))) IN ((+ (x'')))));SELECT CAST(vt0.c1 AS BLOB), LAST_INSERT_ROWID(), (((+ (vt0.c2))) NOT BETWEEN (((vt1.c1)*(vt1.c1))) AND (((vt0.c2) NOT NULL))) FROM vt0, t1 WHERE ((((417595535) IS TRUE) IN ())) LIMIT 809009870;SELECT DISTINCT (NOT ((vt1.c0 IN (vt0.c0, vt1.c0)))), (CAST(vt0.c2 AS TEXT) IN (JULIANDAY('-533087357', vt0.c0, vt0.c1), ((t1.c0)&(vt0.c0)))), CASE NULL COLLATE NOCASE  WHEN (~ (vt0.c0)) THEN CAST('Ds93S(' AS INTEGER) END FROM vt1 INDEXED BY i12, vt0, t1 WHERE ((((((((((((-3.45279779E8)) BETWEEN ((-1.950977116E9)) AND (('0.9392878459101572'))))AND(((('-1078129955', '-923611384', 0.8330904654600382))>=((x'', 0.06466052715852655, NULL))))))OR(((((NULL)AND(NULL)))OR(0.9946210743044129)))))AND(((0xffffffffd8665323) IS TRUE))))OR((NULL IN ())))) LIMIT 1812710747 OFFSET 335223584;SELECT ALL CUME_DIST() OVER () FROM vt0 WHERE (CAST(x'' AS TEXT) COLLATE RTRIM) GROUP BY (((vt0.c0)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((t1.c0)GLOB(vt0.c2)))));SELECT ALL UPPER((vt0.c1 IN ())) FROM vt1, vt0 ORDER BY ((vt0.c2) NOT BETWEEN (0xfffffffff4137fc5) AND (vt1.c2)) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt1.c1))AND(CASE vt0.c1  WHEN vt1.c2 THEN vt0.c2 END)) FROM vt0 GROUP BY ((((t1.c0) NOT NULL)) NOTNULL), ((((NOT (vt0.c1))))>=((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0))))), vt1.c1;SELECT (+ (vt1.c0)) COLLATE BINARY FROM vt1 WHERE ((((x'')) BETWEEN (((((('0.6145382942924174')AND('-1387450926')))AND(958205924)))) AND (((((0.07649843053882444))!=((NULL))))))); -- 0ms;
SELECT ALL SUM(TRIM(vt0.c0)) OVER ( GROUPS CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN ((vt1.c1) NOTNULL) END PRECEDING EXCLUDE TIES) FROM t1, vt0, vt1; -- 0ms;
SELECT LOWER(DISTINCT '*bX10') FROM vt0 WHERE (((((CAST(NULL AS TEXT))AND((NOT (NULL)))))OR(CAST(-1.69394538E9 AS INTEGER)))) GROUP BY NULLIF(CASE WHEN vt0.c1 THEN vt0.c1 END, (vt1.c2 IN (vt0.c2, vt1.c1))) HAVING ((t1.c0)IS NOT(vt0.c1)) COLLATE BINARY;SELECT ALL TOTAL_CHANGES() COLLATE RTRIM FROM vt1, vt0, t1 WHERE (((((-5.6743155E8) BETWEEN (0xffffffffa8946516) AND ('-180244258')))AND(x''))); -- 0ms;
SELECT ALL ((vt1.c2 COLLATE NOCASE) IS TRUE) FROM t1, vt1, vt0 WHERE (((COALESCE(DISTINCT -1000604921, '')) NOT BETWEEN ((((''))>(('-1587374830')))) AND ((~ (NULL))))) LIMIT -464943107; -- 0ms;
SELECT DISTINCT ((((((vt1.c1)OR(vt1.c1)))AND(NULL)))LIKE(((((((((vt1.c1)OR(vt0.c1)))OR(t1.c0)))OR(vt0.c2)))AND(NULL)))) FROM vt1, vt0;SELECT DISTINCT ((- (vt1.c1)) IN (((vt0.c2)+(vt0.c1)))), ((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN '-2047571483' THEN vt0.c0 WHEN vt1.c2 THEN vt0.c1 END)OR(((vt1.c1) ISNULL))))AND((('') ISNULL))), vt1.c2 FROM t1;SELECT ALL ((493506141) NOT BETWEEN ((('vkR((o') NOT BETWEEN (vt1.c2) AND (vt0.c2))) AND (((vt0.c1)>>(vt0.c2)))), CAST('Zf' AS TEXT), 0.48665336991732044 FROM t1, vt1 INDEXED BY i12 LIMIT -1224844285;SELECT ALL (((('-1259295134')||(t1.c0)))IS NOT(((vt0.c1)<<(vt0.c2)))) FROM vt1, t1 WHERE (((((x'b0e4') NOT NULL))=((- (x'')))));SELECT (+ (((((((((t1.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt1.c2)))OR(vt0.c1)))) FROM vt1;SELECT (((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c0))))+((NOT (vt1.c1)))), ((((((((((vt1.c1)>(-364998991)))AND(CASE WHEN vt1.c2 THEN t1.c0 ELSE vt0.c0 END)))AND(((t1.c0) NOTNULL))))AND((vt0.c0 IN (vt0.c2)))))AND(CAST(vt1.c2 AS BLOB))), (((vt1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ()) FROM vt1, t1 WHERE (((0xffffffffd67d3fd3) IS TRUE) COLLATE NOCASE);SELECT DISTINCT (((((~ (vt1.c1)))OR(ROUND(vt1.c0, vt0.c0))))AND(t1.c0)) FROM vt0 WHERE (CASE x'620c'  WHEN CAST(NULL AS BLOB) THEN (NOT (NULL)) WHEN ('X㬒N	\D' IN ()) THEN CAST('|K~-tEdT' AS NUMERIC) WHEN x'71f7' THEN ('435587501' IN (-1260851324, -2.093624329E9)) END) ORDER BY (NOT (((((vt1.c1)OR(vt1.c2)))AND(vt0.c2)))) ASC, ((((vt0.c0)|(vt0.c0)))==(LIKELIHOOD(t1.c0, 0.7442476776668899))) ASC;SELECT ALL ((CAST(vt0.c0 AS REAL))IS NOT(CAST(t1.c0 AS NUMERIC))) FROM t1, vt1, vt0 LIMIT 306149654 OFFSET 1162604732; -- 0ms;
SELECT DISTINCT CAST((((vt1.c1, vt0.c2, vt0.c1)) BETWEEN ((vt1.c1, vt0.c2, vt0.c2)) AND ((vt0.c2, vt1.c2, vt0.c1))) AS TEXT) FROM vt0 LIMIT 244965314;SELECT DISTINCT (- (CASE 0.519818405877538  WHEN vt0.c1 THEN vt1.c2 END)), t1.c0, (((vt1.c2, vt0.c1, vt1.c0)) BETWEEN ((SUM(NULL), (((vt1.c2))<((0.09976570710564336))), ((t1.c0) BETWEEN (vt0.c2) AND ('')))) AND (((vt1.c1 IN ()), ((t1.c0)||(vt0.c0)), vt0.c2 COLLATE BINARY))), COUNT(*) OVER (), ((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN vt1.c1 THEN '-373650832' ELSE vt0.c2 END)))OR(CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c2 ELSE vt1.c1 END)) FROM vt1;SELECT DISTINCT (((((vt1.c0))<((vt1.c2))))-(vt0.c1)) FROM vt1, t1 WHERE ((((('\nt') IS FALSE)) NOT BETWEEN (((x'11a1') IS TRUE)) AND (CASE WHEN NULL THEN 0Xffffffffc7dd8d1b ELSE 0.6646980383725557 END)));SELECT DISTINCT CAST((vt1.c1 IN (vt1.c0)) AS REAL), GROUP_CONCAT(((vt0.c2) NOTNULL)), MIN((((vt1.c2, t1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, vt0.c1, vt0.c1)) AND ((vt1.c1, vt1.c1, 0.19008077269240375)))) FROM vt1;SELECT DISTINCT ((vt1.c1) BETWEEN (((t1.c0)=(vt1.c1))) AND (((vt1.c2)IS NOT('NM-}L1 Aw')))) FROM t1, vt1, vt0 LIMIT 325541937; -- 0ms;
SELECT DISTINCT SUM(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0))) OVER ( RANGE BETWEEN CASE WHEN ((vt1.c2)GLOB(vt1.c1)) THEN 0.42944858062148583 COLLATE NOCASE ELSE ((NULL)>=(vt1.c2)) END PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW), (((((x'', vt1.c2, vt0.c1, vt1.c1, NULL))==((vt0.c0, vt1.c0, t1.c0, vt1.c1, t1.c0)))) ISNULL), ((((t1.c0) IS FALSE)) NOT BETWEEN (ROUND(vt1.c0, t1.c0)) AND (((((t1.c0)OR(0.6698203991613846)))OR(vt0.c0)))) FROM vt0, t1 ORDER BY CAST(((((vt1.c2)AND(vt1.c0)))OR(vt0.c1)) AS BLOB) ASC  NULLS FIRST LIMIT 581271184;SELECT CAST((NOT ('-822869543')) AS NUMERIC), ((((t1.c0 COLLATE BINARY)OR((((vt1.c2, vt0.c1, vt1.c0, vt0.c1, 'ބ')) NOT BETWEEN ((vt1.c0, vt0.c1, NULL, vt1.c2, vt1.c0)) AND ((vt1.c0, vt0.c2, vt1.c2, vt1.c1, vt1.c2))))))AND(CAST(vt1.c0 AS NUMERIC))), ((((vt0.c1) BETWEEN (523571185) AND (vt0.c2)))IS((~ (vt1.c1)))) FROM vt0, vt1;SELECT DISTINCT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (((NULL IN ()) IN ((NULL IN ()), x'84b9'))); -- 0ms;
SELECT DISTINCT ((vt1.c2 COLLATE BINARY)OR(MAX(x'47b0'))), ((vt0.c2 COLLATE NOCASE) NOT NULL), (+ (((vt1.c1) IS FALSE))) FROM vt1, t1, vt0; -- 1ms;
SELECT DISTINCT NULLIF(DISTINCT TOTAL(vt1.c1), NULL) FROM t1, vt0, vt1 LIMIT 184310611; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM t1; -- 0ms;
SELECT ALL vt1.c0, ((vt0.c0 COLLATE RTRIM) NOTNULL), ((((((((vt0.c2)OR(t1.c0)))OR(vt0.c0)))OR(CAST(t1.c0 AS REAL))))OR((t1.c0 IN ()))) FROM vt0 NOT INDEXED, vt1, t1 NOT INDEXED WHERE (UNLIKELY('9嘯Q0ϙK') COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((UPPER(x''))IS(vt1.c1 COLLATE BINARY)), (((((vt1.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))) NOT BETWEEN (CAST(vt1.c2 AS INTEGER)) AND (0.43108974320953175)), 1388824749, vt0.c2, (NOT (UPPER(vt0.c0))) FROM vt1;SELECT ALL '' FROM vt1, vt0 WHERE ((('qF' COLLATE NOCASE)>(((x'') BETWEEN ('(%') AND (0.15912813454563002))))); -- 0ms;
SELECT TOTAL(0X64d1e7d2) OVER () FROM t1 WHERE (0.48729249342623426); -- 1ms;
SELECT DISTINCT ((vt0.c1) NOTNULL) FROM t1 WHERE (((((x'')-(NULL))) BETWEEN ((('R읝㕺V8R!')&(NULL))) AND (LAST_INSERT_ROWID())));SELECT DISTINCT (((('-979728679')OR(x'')))AND((+ (vt1.c1)))) FROM vt0, t1, vt1 WHERE ((NOT (NULL)) COLLATE BINARY); -- 0ms;
SELECT ((LIKELIHOOD(vt1.c0, 0.7482030891861468))+(SUM(vt1.c2))) FROM vt1, vt0, t1 WHERE ((('\rQ' COLLATE NOCASE) ISNULL)); -- 0ms;
SELECT ALL ((HEX(1542841464))+(((vt0.c0)||(vt1.c0)))) FROM vt0 WHERE (NULLIF(CASE 1.993883963E9  WHEN NULL THEN NULL ELSE NULL END, (((x'63d3df44')) NOT BETWEEN ((NULL)) AND ((0.3318421874829046)))));SELECT DISTINCT ((((((((NULLIF(vt1.c0, vt0.c0))OR(((vt1.c1)|(vt1.c1)))))AND((- (t1.c0)))))OR((vt0.c1 IN (vt0.c2)))))OR(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))), ((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM, ((0.8570522483724045) NOT BETWEEN (((t1.c0) NOTNULL)) AND (((((((((vt0.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))) FROM t1;SELECT ALL ((((((vt1.c2) NOT NULL))OR(0.06845629461510072)))AND((+ (vt1.c2)))), NULL, '孓먌_eHN	#' FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (((((vt1.c1)-(vt1.c2))))!=(((vt0.c0 IN ())))) FROM t1, vt1, vt0 LIMIT 1580878480; -- 0ms;
SELECT ALL CASE AVG(vt1.c1)  WHEN ((vt0.c1)==(t1.c0)) THEN ((vt1.c0)|(vt0.c2)) WHEN ((t1.c0)AND(vt1.c1)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c2) NOTNULL) END FROM vt0, t1;SELECT DISTINCT ((((vt0.c0)|(vt0.c2))) IS FALSE), json_type('-1987813059'), ((vt1.c2 COLLATE NOCASE)AND((((vt0.c2, 0xfffffffff1a80eab, vt1.c0))>=((vt1.c1, vt0.c2, vt1.c0))))) FROM t1 WHERE (((CAST(0.9730751524768193 AS BLOB)) IS TRUE)) LIMIT 616485230;SELECT DISTINCT (~ (CASE vt0.c1  WHEN vt0.c0 THEN t1.c0 END)), ((((vt0.c1 IN ())))<=((CAST(t1.c0 AS NUMERIC)))), CASE (vt1.c0 IN ())  WHEN ((vt0.c1)==(vt0.c2)) THEN ((((vt1.c1)AND(vt1.c2)))OR(t1.c0)) WHEN ((vt1.c0)|(x'')) THEN ((vt0.c2) IS FALSE) WHEN ((vt0.c0)AND(vt1.c2)) THEN t1.c0 END FROM t1, vt0 ORDER BY (- (LIKELY(DISTINCT vt0.c1))) DESC, (((x''))<((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c2))))) ASC  NULLS FIRST, ((((vt1.c1) NOT BETWEEN (1.252088526E9) AND (vt0.c2))) ISNULL) ASC  NULLS FIRST;SELECT DISTINCT ((((t1.c0)!=(vt0.c1)))<((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM t1, vt0, vt1 WHERE (CAST((+ (x'')) AS INTEGER)); -- 0ms;
SELECT ALL CUME_DIST() OVER (), (((vt1.c1 IN (vt0.c0, vt0.c2)))>>((((vt1.c0))>((vt0.c2))))), (((CASE x'cfe2'  WHEN vt0.c2 THEN NULL WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN t1.c0 ELSE vt0.c2 END))!=(('532907647'))) FROM t1, vt1 INDEXED BY i12 WHERE (CAST('1798575813' COLLATE BINARY AS INTEGER));SELECT ALL ((t1.c0) NOT BETWEEN ((vt0.c1 IN (t1.c0, vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0;SELECT ALL ((x'5f00')LIKE(((vt0.c2)*(t1.c0)))) FROM vt0, t1, vt1 WHERE (((((((0.41743128500132587) IS FALSE))OR((((x''))=((''))))))AND(CAST(0Xffffffffcdece0af AS REAL)))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON 1509866709 CROSS JOIN vt0 ON (((NOT (vt0.c1)))OR((NOT (vt1.c2)))); -- 1ms;
SELECT (CASE vt0.c0  WHEN t1.c0 THEN t1.c0 END IN (CASE vt1.c1  WHEN vt1.c2 THEN vt0.c1 ELSE vt0.c1 END, ((vt0.c2) NOT BETWEEN (t1.c0) AND (vt1.c1)))) FROM vt0, t1;SELECT DISTINCT (+ (CASE WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END)), (((((vt0.c1)) BETWEEN ((-1.79273983E9)) AND ((NULL))))||(SUM(vt0.c2))), MIN(CASE vt0.c2  WHEN NULL THEN '-1447639060' WHEN t1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END) FROM t1 WHERE (((CAST(NULL AS BLOB)) BETWEEN (((',1*嫃l*')>>('33857867'))) AND (0Xffffffffe1a2e277)));SELECT ALL (vt1.c0 IN ()) COLLATE RTRIM FROM vt0, t1 WHERE (((TOTAL_CHANGES())OR(CAST('#졫' AS NUMERIC)))) LIMIT -1377112471; -- 0ms;
SELECT DISTINCT ((vt0.c0)IS(((vt1.c2) BETWEEN (vt1.c0) AND (t1.c0)))) FROM t1, vt1 WHERE ((NOT (CASE WHEN '1239941525' THEN '-304327121' ELSE 'G' END)));SELECT DISTINCT (((~ (vt0.c2)))>(((vt1.c0) NOT NULL))) FROM vt0, vt1; -- 1ms;
SELECT (CASE WHEN t1.c0 THEN x'' END IN (((vt1.c0) BETWEEN (t1.c0) AND (vt0.c1)))) FROM vt1, t1, vt0; -- 0ms;
SELECT (t1.c0 COLLATE NOCASE IN ()) FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT vt1.c2 FROM vt1, vt0, t1 WHERE (((((x'')>=('-462829871')))<>(NULLIF(DISTINCT '60151269', '')))); -- 0ms;
SELECT DISTINCT COUNT(vt1.c1) FILTER(WHERE CAST(((((t1.c0)AND(vt1.c1)))AND(vt0.c0)) AS TEXT)) OVER () FROM vt1, vt0 LIMIT 126585413;SELECT DISTINCT ((t1.c0 COLLATE NOCASE)+(((t1.c0) NOTNULL))) FROM vt0;SELECT DISTINCT ((('1565227126')) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC)))), ((CAST(vt0.c2 AS TEXT))%(((t1.c0)<<(t1.c0)))), (((((t1.c0)>(t1.c0)), CASE WHEN vt1.c2 THEN t1.c0 ELSE vt0.c2 END, (((vt0.c2))<=((vt0.c0)))))<>((vt1.c2 COLLATE NOCASE, vt1.c0 COLLATE RTRIM, TRIM(DISTINCT NULL, NULL)))) FROM vt0, t1, vt1; -- 0ms;
SELECT ALL ((((- (vt1.c2)), CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c1 END, ((x'')!=(vt1.c1)), ((vt0.c0)+(vt0.c1)), t1.c0))<((((vt1.c0)>=(vt0.c0)), vt0.c2, vt0.c0, ((((((((t1.c0)OR(vt0.c2)))AND(vt1.c2)))AND(vt0.c0)))OR(vt0.c2)), MIN(t1.c0)))), COUNT((vt0.c2 IN ())) COLLATE NOCASE, (NOT (vt1.c0)), RANK() OVER (), (((NOT (0.969178285636659)))IS(((((vt0.c1)AND(vt0.c1)))OR(vt1.c2)))) FROM vt1, vt0, t1; -- 0ms;
SELECT vt1.c0 FROM t1;SELECT DISTINCT ((vt1.c2)AND(vt0.c1)) COLLATE RTRIM, (((((((vt0.c2)AND(vt0.c0)))OR(vt1.c2))))>((((vt1.c0)IS NOT(vt1.c2))))), ((((CASE WHEN vt1.c1 THEN vt1.c2 ELSE t1.c0 END)OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE 0.795171493349626 END)))AND(((((((((vt0.c2)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c1)))), ((CASE WHEN vt0.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c1 END) IS TRUE), UNLIKELY(CASE WHEN vt1.c1 THEN vt1.c0 WHEN t1.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END) FROM vt1, vt0;SELECT DISTINCT vt1.c2 FROM vt0 NOT INDEXED, vt1; -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(vt1.c1))OR(((NULL)*(vt0.c0)))))AND(SUM(t1.c0))) FROM vt1, t1 WHERE ((- ((~ (0.33203764972273364)))));SELECT DISTINCT ((+ (vt0.c2)) IN ()) FROM vt1, t1, vt0 WHERE (((((CAST('1099207068' AS INTEGER))AND(('' IN (NULL)))))AND(((0.12853461123303034)*('x_D5|.d%G'))))); -- 0ms;
SELECT GROUP_CONCAT(((vt1.c0) ISNULL)) OVER (), ((SUM(vt1.c1)) BETWEEN (SUM('-1985966985')) AND ((- (t1.c0)))), (CASE WHEN vt0.c1 THEN vt0.c0 END IN ()) FROM vt0, vt1;SELECT ((CASE vt1.c1  WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 END) ISNULL) FROM t1, vt1, vt0; -- 0ms;
SELECT vt0.c1, LIKELIHOOD(DISTINCT '0.7339039188809483', 0.5924640325237511), GLOB((t1.c0 IN ()), NULL) FROM t1, vt0, vt1 WHERE (CASE WHEN NULL COLLATE BINARY THEN (+ (0.13284852732507257)) END); -- 0ms;
SELECT DISTINCT (((vt1.c1 IN (t1.c0, vt1.c2)))&(vt1.c2 COLLATE RTRIM)), ((((((vt1.c2)OR(vt1.c2)))AND(t1.c0))) NOT BETWEEN (0.2593456581443706) AND ((vt1.c2 IN ()))), ((((vt1.c2)LIKE(vt0.c1))) BETWEEN ((NOT (vt0.c1))) AND (CAST(t1.c0 AS REAL))) FROM vt1, t1;SELECT ALL COUNT(*) OVER (), ((vt0.c0)&(vt1.c0 COLLATE NOCASE)), 0.670604060238304 FROM vt0;SELECT DISTINCT CASE WHEN ((NULL) IS TRUE) THEN SUM(vt0.c2) END FROM vt1, vt0 WHERE (((NULL COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( PARTITION BY -1.405418606E9, ((~ (vt0.c2)) IN ())), ((((((vt0.c0)OR(t1.c0)))AND(vt1.c0))) NOT BETWEEN (((t1.c0) IS FALSE)) AND (LIKE(vt1.c0, vt1.c1))), json_insert(TRIM(DISTINCT vt1.c1), x'92ed', ((vt0.c1) ISNULL)) FROM t1, vt0, vt1 WHERE ((((NULL)) NOT BETWEEN (((x'' IN ()))) AND (((((((((((((((((('-337698059')AND(NULL)))OR(0.9402395458105302)))OR(0.3420397122023422)))OR(0.4567938598894169)))AND(-896160351)))OR(0.41588772725224055)))AND(215767534)))AND('279794677')))))); -- 1ms;
SELECT NULL FROM t1 WHERE (CAST((NOT (NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((vt0.c2, vt1.c2, vt1.c2)) BETWEEN (((vt1.c1 IN ('-83483180')), LOWER(vt1.c2), ((vt0.c0) NOT BETWEEN (0.3869275074905475) AND (vt0.c0)))) AND ((json_valid(t1.c0), (((vt0.c1, vt0.c0, vt0.c2))!=((vt1.c1, vt0.c1, vt0.c0))), CAST(NULL AS REAL)))), SUM(CAST(vt1.c2 AS NUMERIC)), TRIM(DISTINCT (+ (vt0.c1)), ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c1)))OR(vt0.c0))) FROM t1, vt0, vt1 WHERE ((NOT (8.52065684E8)) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((AVG(vt1.c0))OR(MIN(vt0.c0))))AND(((vt0.c0) IS FALSE))) FROM vt1, vt0, t1; -- 0ms;
SELECT ALL (vt1.c2 IN (vt0.c2 COLLATE RTRIM)) FROM t1 WHERE (((((NULL)>>('')))>=(0.12830412294007154)));SELECT DISTINCT (((((0.7024876603602754) NOTNULL)))<=((vt0.c2))), ((x'') BETWEEN (((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((t1.c0 IN ()))), (- (vt0.c0)) FROM vt1;SELECT DISTINCT (((vt0.c1 IN (vt0.c0))) ISNULL), (((vt0.c0)) NOT BETWEEN (((((vt1.c2))<((vt1.c2))))) AND ((((vt0.c2)<=(vt1.c0))))), MAX(((0.9757725568572129)+(vt1.c1))) FROM vt0 WHERE ('GC');SELECT NULL FROM vt1, vt0 WHERE (((CASE WHEN NULL THEN NULL ELSE 0.7692765678161654 END)-(x''))) ORDER BY (((x'')) NOT BETWEEN ((((((((((vt1.c0)OR(vt1.c2)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))) DESC;SELECT DISTINCT SUM(NULLIF(DISTINCT t1.c0, NULL)) FILTER(WHERE (((vt1.c1 IN ())) ISNULL)) OVER (), AVG(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2))) OVER (), vt1.c0, ((((CAST(vt1.c2 AS BLOB))AND(vt0.c2)))AND((vt0.c1 IN ()))), 1756707689 FROM vt0, t1 WHERE ((DATETIME('8?', 0.46002065089335753, 2109698789, -1295603945, 'X95hᏘ') IN ())) GROUP BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (vt1.c2) AND (vt0.c2)) ELSE x'' END, CAST(((((((((((((vt1.c1)OR(vt1.c2)))AND(vt0.c1)))OR(vt1.c1)))AND(vt1.c2)))OR(vt0.c0)))OR(t1.c0)) AS REAL), ((((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (IFNULL(DISTINCT t1.c0, vt1.c0)) AND (((vt0.c1)%(vt1.c1))));SELECT ((((vt1.c2)=(vt1.c2)))-((+ (vt1.c1)))) FROM t1 WHERE ((((((~ (x'2cc1')))AND(UNLIKELY(DISTINCT x''))))OR((((('')OR(NULL)))AND(-7.07360404E8)))));SELECT DISTINCT CASE (- (vt1.c2))  WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN vt1.c1 COLLATE BINARY ELSE '587492010' COLLATE RTRIM END FROM vt0 WHERE (((CAST(NULL AS REAL))>=(CAST(x'' AS INTEGER))));SELECT DISTINCT (((+ (vt1.c0)))LIKE(COUNT(vt1.c1))), ((((((((vt1.c2)OR(vt0.c0)))OR(vt1.c2)))OR(vt0.c2)))OR(CASE vt0.c2  WHEN vt1.c2 THEN vt1.c2 END)), (((t1.c0)) BETWEEN ((AVG(vt1.c0))) AND ((MAX(vt0.c1)))) FROM vt1;SELECT ALL MIN(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt0, t1 GROUP BY x'86a1';SELECT AVG(((vt0.c0)IS NOT(vt0.c2))) FROM vt1;SELECT ((MIN(t1.c0))||(((vt1.c2) IS FALSE))), ((vt1.c0 COLLATE BINARY)|((vt0.c2 IN ()))), ((((vt0.c1)<(vt0.c1))) IS TRUE) FROM t1, vt0, vt1 WHERE (((((0Xffffffffbc79f4e8) NOT BETWEEN (NULL) AND (0.13289764794946635)))<(CASE '171066266'  WHEN '467451143' THEN '218339065' END))) LIMIT -1867464168 OFFSET -914992164; -- 0ms;
SELECT ((HEX(DISTINCT vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE vt1.c0  WHEN vt1.c2 THEN vt0.c0 END)) FROM t1, vt0, vt1 LIMIT 322577074 OFFSET 914120493; -- 0ms;
SELECT ALL MAX((((vt0.c2, t1.c0, vt0.c0))<((vt1.c1, vt0.c0, vt1.c1)))) FROM t1, vt0, vt1; -- 0ms;
SELECT ALL (+ ((~ (vt0.c0)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((vt1.c1 COLLATE RTRIM) NOT BETWEEN (((t1.c0) BETWEEN (vt0.c2) AND (vt0.c2))) AND (((vt1.c2)<=(vt1.c2)))), (NOT ((NOT (vt1.c2)))), ((CAST(vt0.c1 AS BLOB)) BETWEEN ((((vt0.c2))<((vt1.c1)))) AND (TOTAL(t1.c0))) FROM vt1, vt0 WHERE (((((0.19539921784226522) NOT BETWEEN (x'') AND (NULL)))IS(NULLIF('852065684', 0Xffffffff9f474b48))));SELECT ALL vt0.c2, ((((vt1.c0) NOT BETWEEN (t1.c0) AND (vt0.c2)))AND(((t1.c0)||(vt0.c1)))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) COLLATE NOCASE FROM t1, vt0;SELECT ALL ((((DATE('0.5987643143050214', t1.c0, vt1.c1))AND(vt1.c2)))OR(((((vt0.c1)AND(vt1.c0)))OR(vt1.c2)))) FROM vt1, vt0, t1; -- 0ms;
SELECT DISTINCT CAST(vt0.c2 AS INTEGER) FROM vt0, t1; -- 1ms;
SELECT TOTAL(((vt1.c1)AND(0.9001752981884954))) OVER () FROM t1 WHERE ((((('V\r')GLOB('1812269417')))GLOB((((-304430969)) BETWEEN ((0x3b15f4d)) AND (('')))))) ORDER BY ((CASE vt0.c1  WHEN '\r]' THEN t1.c0 END)>=(((vt0.c1) BETWEEN (0X5aa93a11) AND (t1.c0))))  NULLS LAST, CASE (- (vt1.c2))  WHEN json_object(vt1.c0, vt0.c1) THEN (((vt1.c2, vt0.c1, vt0.c1))<((vt1.c1, 0.7728735691407124, vt0.c1))) WHEN t1.c0 COLLATE NOCASE THEN vt0.c2 WHEN ((((t1.c0)AND(vt1.c2)))AND(vt1.c1)) THEN ((t1.c0)LIKE(vt1.c1)) ELSE vt0.c2 COLLATE RTRIM END ASC LIMIT -1893384984;SELECT ALL CUME_DIST() OVER () FROM vt1, t1, vt0 WHERE ((((NULL))<=((0.4772147911525959))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((vt0.c1 IN ()) IN ()), SUM((- (vt0.c2))) OVER (), ((x'') NOT NULL), (((~ ('㽦~Gl')))*(vt1.c2 COLLATE NOCASE)), ((vt1.c2) NOT BETWEEN (UPPER(DISTINCT t1.c0)) AND (x'')) FROM vt1 WHERE ((((901997121 COLLATE RTRIM, (NOT (NULL)), ((((0.4345445633582594)OR(0.17998295409643073)))AND(0x6a664716)), (('-1374774998')GLOB(x'')), NULL))>=((CAST(0.7673320625319344 AS TEXT), ((0.9235391845828747) BETWEEN (x'') AND (NULL)), DATE('-965394085', 0.9248597916254268, x'', x'', 'F*'), CASE x'14a0bace'  WHEN '' THEN NULL WHEN 1838023335 THEN x'' WHEN x'' THEN NULL END, CASE 'k_U'  WHEN 0.19907387634090767 THEN x'' ELSE NULL END))));SELECT ALL GROUP_CONCAT((NULL IN ())) FROM vt1, t1, vt0 LIMIT -263733097 OFFSET 1013013765; -- 0ms;
SELECT ALL t1.c0 FROM vt1 WHERE ((- (CASE 0.52036773034988  WHEN 0.4993746463518035 THEN -662776716 END)));SELECT ALL (~ ((~ (vt1.c1)))), vt0.c2 COLLATE BINARY, (((vt1.c2)==(vt1.c0)) IN ()) FROM vt1 WHERE ((((NULL IN ()))&(((((0.29161852680639044)AND(NULL)))OR('1400066586')))));SELECT DISTINCT (((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))+(MAX(vt1.c1, t1.c0, vt1.c1, t1.c0))) FROM vt0;SELECT ALL ((CASE vt1.c0  WHEN x'' THEN vt0.c2 WHEN 0.48144667758816406 THEN vt0.c2 WHEN NULL THEN vt0.c2 ELSE 0.14673278598535 END)||(((vt1.c2) NOTNULL))) FROM vt0;SELECT DISTINCT GROUP_CONCAT(((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c2))) FROM vt0, vt1 GROUP BY (((vt0.c0))>((((vt0.c2) ISNULL)))) HAVING (((0X409b5e29, vt1.c1, t1.c0)) BETWEEN ((((vt0.c2)+(vt0.c2)), (NOT (vt1.c1)), '\+l,N')) AND ((CAST(t1.c0 AS NUMERIC), MAX(vt1.c0), (((vt1.c0))<>((t1.c0)))))) ORDER BY NULL COLLATE RTRIM;SELECT DISTINCT (((((((vt1.c0))<((vt0.c2))))AND(MIN('1252088526'))))AND(CASE WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c2 THEN vt0.c2 WHEN vt1.c1 THEN vt1.c2 ELSE vt0.c1 END)), ((((t1.c0)IS(vt1.c0)))>(vt1.c1 COLLATE RTRIM)), CASE ((vt0.c2)*(vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt1.c0) BETWEEN (t1.c0) AND (t1.c0)) END FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT (('0.17998295409643073')<=(((vt1.c0)<>(vt1.c0)))) FROM vt1, vt0, t1 WHERE (((((x'c639')|(0.28213897863634474)))OR(((('', NULL, x'b197')) BETWEEN ((x'fd55', '', 0.9346882337344283)) AND (('+m0n''', -989585447, NULL)))))); -- 0ms;
SELECT DISTINCT vt0.c2, NULL, ((((((((vt1.c2 COLLATE NOCASE)AND(((((vt1.c2)AND(vt0.c2)))AND(vt1.c2)))))OR(CAST(vt0.c2 AS NUMERIC))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))))AND(((t1.c0) ISNULL))) FROM t1, vt0, vt1 LIMIT 230496451 OFFSET 348706609; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (0.23887989825069966)))) AND ((((vt1.c2) NOT BETWEEN (vt1.c0) AND ('793203293'))))), ((COUNT(*))+((vt1.c2 IN (vt1.c1)))), COUNT(*) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt0.c2 THEN vt0.c0 END THEN CAST(vt0.c0 AS BLOB) WHEN LIKELY('1007687398') THEN ((vt1.c1)=(vt0.c2)) WHEN CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END THEN ((t1.c0)+(vt1.c0)) WHEN vt1.c2 THEN ((vt0.c2)AND(vt0.c2)) WHEN ((vt0.c2)AND(vt0.c1)) THEN ((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) ELSE ((t1.c0)/(vt0.c1)) END FROM t1 WHERE (((CAST('' AS NUMERIC)) BETWEEN (((0.3745165142849337) BETWEEN ('') AND ('1632941271'))) AND ((((('-464943107')OR(-1155345967)))OR(x'')))));SELECT ALL x'' FROM vt0, vt1; -- 0ms;
SELECT ALL (- (vt1.c2)), ((((((vt1.c0)||(vt1.c2)))AND(CASE WHEN t1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c2 THEN t1.c0 END)))OR((~ ('')))), ((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 END)<<((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))))) FROM vt1, t1, vt0; -- 1ms;
SELECT DISTINCT (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))) IS TRUE), ((((((vt1.c2)OR(t1.c0)))AND(t1.c0))) NOTNULL), x'' FROM vt1, vt0, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((x'')%(vt1.c1))) FILTER(WHERE ((CASE t1.c0  WHEN vt1.c0 THEN vt1.c2 WHEN t1.c0 THEN x'' WHEN vt1.c1 THEN vt0.c0 END) BETWEEN (((vt0.c2) IS TRUE)) AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0))))) OVER () FROM t1, vt0, vt1 ORDER BY 325300238 LIMIT -784756977 OFFSET 1986936838;SELECT DISTINCT vt0.c1, TOTAL(((vt1.c1) IS FALSE)) OVER (), ((((~ (t1.c0))))<=((MAX(vt1.c1)))) FROM t1, vt1 WHERE (0Xffffffffe20a4364);SELECT (+ (CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN 0xffffffffeddc562f WHEN t1.c0 THEN vt1.c2 ELSE vt0.c1 END)) FROM t1, vt0, vt1 WHERE (CASE WHEN (~ (337806434)) THEN CAST(NULL AS NUMERIC) WHEN ((((((((-1686458946)AND('\mN4')))AND('-881193798')))AND(x'9a4d')))OR(x'0e36e6b9bf08')) THEN (((x'')) BETWEEN ((NULL)) AND ((0.8746628198618842))) WHEN (('0.47886645300754593') BETWEEN (NULL) AND (0X13d708b7)) THEN (((-1.69394538E9)) BETWEEN ((0.19504749297374457)) AND ((NULL))) END); -- 0ms;
SELECT DISTINCT ((vt0.c2)GLOB(vt1.c2)) COLLATE RTRIM FROM vt0, t1 WHERE (UPPER(DISTINCT ((x'') NOTNULL)));SELECT DISTINCT (~ (NULL)) COLLATE RTRIM FROM vt1 WHERE (0.8344198517483288); -- 0ms;
SELECT DISTINCT CAST((vt0.c1 IN (vt0.c1)) AS INTEGER) FROM t1 INTERSECT SELECT MAX((((vt0.c2, x'', vt1.c0, vt0.c2, vt0.c1))>((t1.c0, vt1.c1, vt1.c2, vt0.c0, vt0.c2)))) FROM t1, vt1 ORDER BY 0.19347285299800876;SELECT ALL CASE ((vt1.c0)%(vt1.c0))  WHEN ((vt1.c1)<<(vt0.c2)) THEN ((t1.c0)==(vt0.c0)) ELSE ((vt1.c2) ISNULL) END FROM t1, vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1, vt0, t1 WHERE (((HEX(DISTINCT x''))>=(((x'5f7f455f')/('1846470289'))))) GROUP BY ((vt1.c1) NOT BETWEEN (((vt1.c2)AND(vt1.c1))) AND (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)))); -- 0ms;
SELECT NTH_VALUE(((((((t1.c0)OR(vt1.c0)))AND(t1.c0)))>(((vt1.c1) BETWEEN (t1.c0) AND (vt1.c1)))), CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c0) IS TRUE) WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((vt1.c0))) THEN ((((((((vt1.c0)AND(x'')))OR(t1.c0)))AND(vt1.c1)))AND(t1.c0)) WHEN ((((((((t1.c0)AND(t1.c0)))AND(vt1.c2)))AND(NULL)))AND(t1.c0)) THEN ((-8.99154313E8)!=(vt1.c1)) ELSE '1754906467' END) OVER () FROM t1, vt1 WHERE ((+ (CASE WHEN 2.79794677E8 THEN 'f2' ELSE '0.13447144631538432' END))); -- 0ms;
SELECT ALL (((vt0.c0 IN ()))>(t1.c0)), 't', MAX(((vt1.c1) BETWEEN (vt0.c2) AND (t1.c0))) FROM t1, vt0 LIMIT 1000593878;SELECT DISTINCT (((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)) IN ()) FROM vt1 LIMIT -273215409; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))>(GROUP_CONCAT(vt0.c2))), (((t1.c0, vt1.c2, vt1.c2, x'876cd2c9', vt1.c0, vt0.c0, vt1.c0)) BETWEEN (((('/{\rZ')||(vt1.c1)), ((((t1.c0)AND(vt0.c2)))AND(x'')), ((vt0.c0) BETWEEN (t1.c0) AND (vt1.c2)), ((((vt0.c0)OR(vt0.c2)))AND(vt1.c2)), CASE WHEN vt1.c2 THEN t1.c0 END, CASE vt1.c1  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))) AND ((CASE t1.c0  WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c1 WHEN '-567431550' THEN vt0.c1 ELSE vt0.c1 END, ((vt1.c1)IS(0.3566879149480783)), ((vt1.c1)>=(vt0.c2)), CASE vt0.c1  WHEN vt0.c1 THEN '-1776987051' END, (vt1.c2 IN ()), (('-1547576589') NOT BETWEEN ('1245482804') AND (vt0.c2)), vt0.c2))), CASE WHEN t1.c0 THEN vt0.c2 END COLLATE RTRIM COLLATE BINARY, CAST(((vt0.c0)IS NOT(vt1.c1)) AS INTEGER), (NOT (((vt1.c1)-(vt1.c1)))) FROM vt1, t1;SELECT x'' FROM vt0; -- 0ms;
SELECT ((((0.4044996845408291)||(t1.c0)))<('|3')), (~ (((vt1.c2) BETWEEN (vt1.c0) AND (vt0.c1)))), CAST((~ ('\C')) AS REAL) FROM vt1;SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOTNULL) FROM t1, vt1, vt0 ORDER BY (((t1.c0 IN ()))*(vt0.c2 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT 'TP	 ]gFt	', (NOT (CAST(0xffffffff84db7103 AS REAL))), vt1.c1, COUNT(((vt1.c1)%(vt1.c2))) OVER (), ((vt0.c1) NOTNULL) COLLATE BINARY, ((0.2252632442952095) BETWEEN (((vt1.c2) NOT BETWEEN ('999395900') AND (vt1.c2))) AND (vt0.c2)), CHAR(LIKELY(vt1.c2)) FROM t1;SELECT DISTINCT ((vt0.c2)>=((('-662776716')+(vt0.c2)))), ((((((((((x'')OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt1.c1))) NOT NULL), vt1.c0 FROM vt1, t1 WHERE (TRIM(DISTINCT NULL COLLATE BINARY, CASE WHEN x'' THEN NULL WHEN x'8a31' THEN 0x1d05d77b WHEN x'983d' THEN x'' END));SELECT DISTINCT (((vt1.c2 IN (vt0.c1))) IS FALSE) FROM vt0, t1, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE ((vt0.c2)-(t1.c0))  WHEN (vt0.c1 IN ()) THEN (((vt1.c1))=((vt1.c1))) END FROM vt1 WHERE (CASE ((x'')|(0.9090092449376697))  WHEN (('0.278441801284954')|(NULL)) THEN (('580371783') ISNULL) ELSE ((((x'')OR(-3.2902952E8)))OR('1')) END);SELECT COUNT(*), t1.c0, ((vt0.c2) IS TRUE) COLLATE NOCASE FROM vt0 WHERE (CAST(((0.7270448948632353) IS FALSE) AS NUMERIC));SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((NULL)))) IS TRUE) FROM vt0 WHERE (((CAST(0.17587405105736398 AS BLOB))>('' COLLATE BINARY))) LIMIT 999395900 OFFSET 744477918; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT CASE WHEN x'' THEN vt1.c2 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END, 0.5331860624304533), AVG(((vt1.c2) ISNULL) COLLATE BINARY) FILTER(WHERE CASE WHEN ((vt0.c1)GLOB(vt0.c0)) THEN ((('-1259295134'))<((vt0.c2))) WHEN ((vt1.c0)>=(vt1.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c2))) WHEN CASE WHEN vt1.c0 THEN vt0.c0 END THEN LOWER(DISTINCT vt1.c1) WHEN ((vt1.c1)/('#Z/A-kXX')) THEN ((((t1.c0)OR(vt0.c2)))OR(t1.c0)) WHEN json_extract(vt1.c0, vt0.c0) THEN vt0.c2 COLLATE BINARY WHEN CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 END THEN vt0.c0 COLLATE NOCASE END) OVER (), vt1.c1 FROM vt0;SELECT DISTINCT ((t1.c0) ISNULL) FROM vt1 WHERE (CASE WHEN CASE x'15f9'  WHEN NULL THEN x'' WHEN 0.1548773125465721 THEN x'' WHEN '2021941176' THEN 0.10911884298138042 END THEN ((NULL) IS FALSE) END);SELECT DISTINCT GROUP_CONCAT(((vt0.c2) IS TRUE)) FROM vt0 WHERE (((((((((x'804f')AND('#*NOWBTMI')))AND(0.5215361830232162)))AND(CAST(0.30931113332813176 AS REAL))))AND((('') BETWEEN ('aGh]') AND (NULL))))) ORDER BY 3.35223584E8 DESC; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt1.c1)OR(vt1.c2)))) AND ((((vt1.c0) IS FALSE)))) FROM t1 ORDER BY (((- (vt0.c2))) ISNULL) ASC;SELECT ALL RANK() OVER (), CASE (vt1.c2 IN ())  WHEN CHAR(t1.c0) THEN ((vt1.c0)-(vt1.c2)) WHEN TOTAL(vt0.c2) THEN MAX(vt1.c1) WHEN ((((((((((((t1.c0)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))OR('0.2336379037603583')))AND(vt1.c2)))OR(vt0.c1)) THEN ((vt0.c2) ISNULL) ELSE ((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c1)) END, ((((((((vt0.c0 COLLATE NOCASE)OR(0.13447144631538432)))OR(x'')))OR(CASE vt1.c2  WHEN vt0.c0 THEN vt0.c1 END)))OR((t1.c0 IN (vt0.c1)))) FROM t1;SELECT ALL ((((((vt0.c1) IS TRUE))OR((((t1.c0, NULL, vt1.c2, vt0.c1, vt0.c2)) BETWEEN ((vt0.c0, vt1.c2, vt0.c2, vt0.c0, 0X7fb29abb)) AND ((x'', x'', vt0.c1, t1.c0, vt1.c2))))))OR(IFNULL(vt1.c2, vt0.c1))) FROM vt1, t1 WHERE ((((('>Zc') ISNULL)) NOT BETWEEN (((('0.2336379037603583'))<>((0.46310841628755417)))) AND (json_array(x'', NULL)))) GROUP BY NULL, (((vt1.c0, vt1.c1, x'')) NOT BETWEEN ((TIME(t1.c0, vt1.c2, vt0.c2), ((vt0.c1)LIKE(vt1.c0)), ((vt1.c2) ISNULL))) AND ((vt0.c2, ((vt0.c0)IS(vt1.c1)), (((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))), (~ (vt0.c0)) COLLATE BINARY;SELECT DISTINCT ((t1.c0)==('1794193872')) FROM vt0, t1, vt1 INDEXED BY i12 WHERE (((x'') IS FALSE) COLLATE RTRIM) ORDER BY ((((CASE WHEN vt1.c1 THEN vt0.c2 END)OR((((vt0.c1))!=((vt1.c0))))))OR(TRIM(vt0.c1, vt1.c2))) ASC;SELECT DISTINCT vt0.c1 FROM t1, vt1;SELECT ALL LIKELIHOOD(DISTINCT NULL, 0.5672335484905044), ((((vt1.c2)IS NOT(vt0.c0)))AND(LIKE(vt1.c1, vt1.c2))), vt1.c1 FROM t1, vt0 WHERE ((((x'')) BETWEEN ((((0.6684314516290142) IS FALSE))) AND ((CASE WHEN NULL THEN x'0ad16edb' WHEN '-1967338585' THEN 'F' WHEN NULL THEN '-2093624329' ELSE NULL END))));SELECT NULL COLLATE RTRIM COLLATE NOCASE, LAG(CASE CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN 0.9402395458105302 WHEN t1.c0 THEN 0.07645966830131612 ELSE t1.c0 END  WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0)<=(t1.c0)) ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END, CASE ((t1.c0) ISNULL)  WHEN t1.c0 THEN CAST(t1.c0 AS INTEGER) ELSE CAST(t1.c0 AS TEXT) END, (((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)<=(t1.c0)), '''|5Ei', CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) AND ((((t1.c0)OR(t1.c0)), 'PQYu큛', CASE WHEN t1.c0 THEN x'' WHEN '&R6>J' THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)))) OVER (), COUNT(*) FROM t1 GROUP BY (NOT (((vt0.c0) IS TRUE)));SELECT ALL TRIM(CAST(vt1.c2 AS TEXT)), (((((vt0.c2)) NOT BETWEEN ((vt1.c2)) AND ((t1.c0)))) IS FALSE), COUNT(((vt1.c0)-(vt1.c0))) FROM vt1;SELECT ALL (((vt1.c1)>>(vt0.c0)) IN ((((vt0.c0, vt0.c2, vt1.c2)) NOT BETWEEN ((vt1.c0, vt1.c2, vt0.c1)) AND ((vt1.c1, vt0.c1, 15020047))), (~ (vt1.c0)))) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)*('36')))OR(((vt1.c2) NOT BETWEEN (t1.c0) AND (vt0.c2)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2)))) FROM vt0 WHERE (0.09676897943511631);SELECT ALL (~ (COUNT('9169813169173691757-['))), vt0.c0, x'' FROM vt0, vt1 WHERE ((+ ((('-329029520') BETWEEN ('(^') AND ('-1516942585'))))) GROUP BY '830389979' COLLATE BINARY, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt1.c1)))OR(vt1.c1)))AND(vt0.c1)))!=(((((((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)))OR(vt1.c2)))), NULLIF(DISTINCT ((vt0.c1)<<(vt0.c1)), CAST(t1.c0 AS NUMERIC));SELECT ALL NTH_VALUE(CAST((- (vt1.c1)) AS NUMERIC), ((DATE(vt0.c0, '1323231607', t1.c0)) IS FALSE)) OVER () FROM vt0, vt1, t1 WHERE ((((x'' IN ())) IS TRUE)) ORDER BY UPPER(DISTINCT (vt0.c1 IN ())); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM FROM vt0, t1, vt1; -- 0ms;
SELECT DISTINCT (((x'', (- ('1619159705')), ((vt0.c2) NOT BETWEEN (vt1.c0) AND (t1.c0))))>=((((vt0.c2) NOT NULL), ((t1.c0)&(vt0.c0)), (+ (vt1.c0))))) FROM vt0, t1 WHERE ((((x'' COLLATE RTRIM))=((((0.683310640779657)>>(x''))))));SELECT ALL ((x'123d')-(CAST(vt1.c0 AS TEXT))) FROM vt1, vt0 WHERE (CAST(((((x'')OR(x'')))OR(-266919378)) AS BLOB)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt1 WHERE (((('ls8N')) BETWEEN ((0.8613442249272081)) AND ((NULL COLLATE RTRIM)))); -- 0ms;
SELECT vt0.c1 FROM vt1 INDEXED BY i12;SELECT ((((((((((vt1.c2) NOTNULL))OR(TYPEOF(vt0.c1))))AND(CASE t1.c0  WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c0 END)))AND(((vt0.c2)>(vt0.c0)))))OR(NULL)) FROM vt1, vt0, t1; -- 0ms;
SELECT ((vt1.c1 COLLATE NOCASE)%(CAST(vt0.c1 AS INTEGER))) FROM vt1, t1, vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0, t1; -- 0ms;
SELECT (((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c2)) IN (CASE WHEN vt0.c2 THEN vt0.c0 END)), 0.7072568534054615, CAST(x'4081' AS INTEGER) FROM t1, vt0, vt1; -- 1ms;
SELECT ALL COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING), (((vt0.c0 IN ())) NOTNULL), SUBSTR((NOT (vt1.c0)), ((t1.c0) IS FALSE)) FROM vt1, vt0, t1; -- 0ms;
SELECT DISTINCT vt1.c1 FROM t1, vt1, vt0 ORDER BY LIKE(STRFTIME(vt0.c2, vt1.c1, vt1.c0), ((((((((((((0.327739365855077)AND(vt1.c1)))OR(NULL)))OR(t1.c0)))AND(vt1.c0)))AND(vt1.c2)))AND(vt0.c1)))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c2 IN ()) IN ()) FROM t1, vt1 WHERE (0.3405612278866539 COLLATE NOCASE); -- 0ms;
SELECT ALL (((vt0.c1)) BETWEEN ((((vt0.c2) NOT BETWEEN (t1.c0) AND (NULL)))) AND ((CAST(vt0.c1 AS REAL)))) FROM vt0, vt1, t1; -- 0ms;
SELECT (((((vt1.c2))=((vt0.c1))))>>((((vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((vt1.c1, 0X7b7699cb, vt0.c1)) AND ((t1.c0, NULL, vt0.c1))))) FROM vt0, t1 LIMIT 520911433 OFFSET -1583543741;