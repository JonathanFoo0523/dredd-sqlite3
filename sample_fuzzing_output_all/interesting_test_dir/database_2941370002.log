-- Time: 2024/06/07 20:03:30
-- Database: database2
-- Database version: 3.40.0
-- seed value: 2941370002
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 14ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1694328120);\n; -- 1ms;
UPDATE OR FAIL vt0 SET c0=NULL, c0=NULL, c0=x'' WHERE (('-1694328120') NOT BETWEEN ((+ (-1694328120))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'473d')))); -- 0ms;
ANALYZE temp; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR FAIL vt0 SET (c0)=(0.3339622991962524); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (json_extract(CAST(x'' AS NUMERIC), CAST('-1694328120' AS INTEGER), '403369050', (NULL IN ()))); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-2028580011'); -- 0ms;
PRAGMA cache_size; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA mmap_size; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-1694328120') WHERE CASE (((vt0.c0))<((vt0.c0)))  WHEN ((0.3339622991962524) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END; -- 0ms;
PRAGMA main.secure_delete; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('-1694328120'); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('벢'), (0.7817852427613683), (0.3339622991962524); -- 1ms;
UPDATE vt0 SET (c0)=(' DIRBN8I') WHERE (- (0.32945322238024766)); -- 4ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('', NULL) WHERE vt0.c0; -- 0ms;
DELETE FROM vt0 WHERE vt0.c0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0x180aec5a WHERE CAST(((vt0.c0)+(vt0.c0)) AS TEXT); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 702867117); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='E|', c0=1.146993826E9 WHERE ((vt0.c0)%(((vt0.c0)*(vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('髈Jr'), (x'd14d'), (NULL); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=974514041 unordered'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (1073084299), ('{}'), ('벢lP9>'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 REAL ); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE rt0 SET c4=x''; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA temp.threads; -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR ABORT rt0 SET (c2)=(0xffffffff9b029ac8) WHERE CASE '-1694328120'  WHEN ((((((((((((((((rt0.c5)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c4)))AND(0.920715466921373)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c4)) THEN x'' ELSE ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END; -- 1ms;
INSERT OR FAIL INTO rt0 VALUES (0.10710154391670679, 'FQ', '-666570760', 0.7761909406834511, x'', NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0Xffffffff88f9cfca); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 1ms;
UPDATE OR FAIL vt0 SET c0=NULL, c0=NULL, c0=0X180aec5a WHERE ((vt0.c0) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (403369050), (0X54b10805), (x''); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET c0='U}'; -- 0ms;
REINDEX; -- 1ms;
UPDATE rt0 SET c2=403369050, c3=0xffffffffe3c829eb WHERE (((rt0.c3 IN ()))>=(rt0.c4)); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='2㱩x1', c0=NULL, c0=-458770653; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2133945934); -- 2ms;
PRAGMA temp.foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.5236069337510838), ('974514041'), (NULL); -- 2ms;
PRAGMA temp.cache_size; -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES ('*\rO_Pe'); -- 1ms;
PRAGMA foreign_keys = true; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='-1e500'; -- 2ms;
REINDEX  rt0; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0Xffffffffb94aaed6); -- 7ms;
INSERT OR ROLLBACK INTO rt0(c5, c4, c0, c1, c3) VALUES (x'e8dc', '403369050', x'', -2028580011, 0.32945322238024766), ('1073084299', '-284984261', 'AM', 264392266, '725628160'), ('Z5t+!_*Z', x'', 'AM', x'', NULL); -- 2ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''); -- 1ms;
INSERT OR ABORT INTO rt0(c2, c3, c1, c4) VALUES ('-965306015', NULL, x'39e5', '-458770653'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c5) VALUES (NULL, x''); -- 1ms;
UPDATE OR FAIL vt0 SET c0=x'3f5e', c0=0.26794058758060435, c0=x'' WHERE CAST(((vt0.c0)-(vt0.c0)) AS BLOB); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=('') WHERE ((CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c4 END) BETWEEN (((((rt0.c2)AND('-1694328120')))OR(rt0.c5))) AND (CAST(rt0.c2 AS NUMERIC))); -- 13ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ANALYZE rt0; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE (((x'' IN ()))>=(((vt0.c0)||(vt0.c0)))); -- 0ms;
PRAGMA cache_spill; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 363661399); -- 0ms;
PRAGMA main.cache_spill = false; -- 0ms;
DROP TABLE vt0; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c5, c4) VALUES (x'', '-1497973773', x''), (0.11734144736645702, 0.10710154391670679, 0.7817852427613683), (0.06741113259331144, '-1497973773', '725628160'); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c4) VALUES (NULL, 0x42a662bb), (x'', x''), (NULL, NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c3, c5, c4, c2) VALUES (NULL, 0X35a6e7dd, '_O8', 'SⱿfS]뇚6', x'', x''); -- 0ms;
UPDATE OR ABORT rt0 SET (c5, c0)=('', '') WHERE ((((((((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c0 END)AND((rt0.c4 IN (rt0.c4, rt0.c0)))))AND(((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(CAST(rt0.c3 AS NUMERIC))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))); -- 0ms;
INSERT OR FAIL INTO rt0(c5, c2, c3, c4, c0) VALUES (NULL, x'3a05', NULL, '45', NULL), (x'', '-1186287914', -4.73421333E8, x'', NULL), (x'ec33', 9.00130781E8, x'', 0.11559953698453229, x'02ca2daf'), (NULL, 0.4242854025608418, 0.05688917762152723, x'2436', 'iHU⧫'), (0.8985475773062843, '-1493098932', x'', '-1497973773', x'506f'), (NULL, NULL, x'', 0.7444115363187189, NULL), (x'49ea', '397806293', 0xfffffffff045e4b5, x'', '-666570760'); -- 0ms;
INSERT OR IGNORE INTO rt0(c5, c3, c2, c0) VALUES (0Xffffffff9801e57d, x'', '63+T', 0Xffffffffa6b6bbf3); -- 0ms;
INSERT OR IGNORE INTO rt0(c5, c2, c0) VALUES (x'e8c0', '1118200507', '-1753503740'), (x'02bc', (TYPEOF(NULL) IN ()), 0.7817852427613683), (x'', 0.2230131827575207, NULL); -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
UPDATE OR IGNORE rt0 SET c5=NULL, c5='0.920715466921373' WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES ('E|', 0.25568681614848154, '2Gweekday ', NULL, x'63d4', x''), (-1.744706179E9, '1856462513', '1118200507', 0Xffffffffca975894, 'kf', x''), (NULL, 'N%7PW8par', -1076645414, x'5b4e', '9Ay/-[5nL', ''), (x'', '-2021791200', x'6836', 0x622d90c1, NULL, NULL), ('-1254363706', NULL, x'', x'', '', '2㱩x1'); -- 2ms;
INSERT OR ABORT INTO rt0(c1) VALUES (x''), (0.7625358218968628), ('-635162759'); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c5) VALUES ('725628160', 's|>'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c5, c2, c0, c1) VALUES (NULL, '', x'', 0x54b10805, '-2028580011'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c5) VALUES (0.2759522046035423, x'e64a', NULL), ('䨎', x'fd10', NULL), (0.5147329598262215, x'4a4b', '403369050'); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1, c3, c5, c0, c4) VALUES (x'', '-965306015', x'02c5', (CASE '1118200507'  WHEN x'c490d2ed' THEN -1694328120 ELSE '' END IN (x'')), NULL), ('0.26794058758060435', '1815781547', x'', 'u/^q', NULL), (0xffffffff9865c163, 'C1', '', 0.8236823164839734, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES ('1998211467', '1420888069'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL); -- 0ms;
PRAGMA temp.threads = 4503508893795490860; -- 0ms;
UPDATE rt0 SET c2=x'ae52'; -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c2, c5) VALUES (x'', '9(', 'T'), (0.09030061105483145, NULL, NULL), (NULL, '50338618', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c1, c0, c4) VALUES (x'59ad', x'8d25', 0.9055110279173998, '-1744706179', 0.3901437672030763); -- 0ms;
UPDATE rt0 SET (c0)=(0Xffffffffd844eff8) WHERE CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN rt0.c2 COLLATE NOCASE END; -- 0ms;
UPDATE rt0 SET c4='CL'; -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c0)=(NULL); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('', x''), (NULL, 0.8792978189686032), (x'', NULL); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE '-170736276'; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c5, c0, c4) VALUES (x'', x'', '벢', NULL, -833398078); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3, c0, c5) VALUES (0.29757775277445786, 0.38986579545527467, x'', 1.7976931348623157E308, '-458770653'), (NULL, CASE WHEN ('5bl쥂Q' IN ()) THEN ABS(0.28315138312276233) END, 1647153345, '', x''), (36562263, NULL, x'ee09d0e2', x'', '-458770653'); -- 6ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL x'2ef3' FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c0)>(rt0.c2)))|(((rt0.c3) NOT NULL))) FROM rt0 WHERE (NULL) LIMIT 1561141756 OFFSET -1; -- 0ms;
SELECT ALL COUNT((- (0.03160603105374338))) FROM rt0 WHERE ((((- ('1815781547')))%(((x'b732')=(x''))))); -- 0ms;
SELECT ((((((((MAX(NULL))AND(((rt0.c2)IS(rt0.c2)))))AND(((rt0.c4)+(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c3 END)))AND(rt0.c0 COLLATE NOCASE)), CAST(((((rt0.c4)OR(rt0.c1)))AND(rt0.c5)) AS BLOB), (((NULL) BETWEEN (rt0.c4) AND (rt0.c4)) IN (((((((((rt0.c5)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)))) FROM rt0 WHERE (((((((((((x'')OR(x'')))OR(0Xffffffffce13c918)))OR('7g')))AND(x''))) BETWEEN ((0X19900d6d IN ('811082124', x'4b36'))) AND (CAST(1371072378 AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c0)) IN (LOWER(rt0.c2), CASE WHEN rt0.c5 THEN 0.7761909406834511 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c2 THEN 0xffffffff87165355 END)) FROM rt0 WHERE ((((NULL)) NOT BETWEEN (((((('-1254363706')AND(x'')))AND(NULL)))) AND ((((0.4796517991230601)AND(0X671149dd)))))); -- 0ms;
SELECT ALL AVG((NOT (rt0.c2))) FROM rt0 WHERE ((((0Xfc24e4a)) BETWEEN ((((NULL) ISNULL))) AND ((((NULL)%(x'')))))) LIMIT -473421333; -- 0ms;
SELECT DISTINCT (+ (CASE rt0.c5  WHEN rt0.c5 THEN x'' ELSE rt0.c5 END)) FROM rt0; -- 0ms;
SELECT ALL CASE ((rt0.c5) IS TRUE)  WHEN CAST(rt0.c2 AS REAL) THEN TOTAL(rt0.c5) WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN CASE WHEN rt0.c4 THEN 0.8236823164839734 END WHEN UNLIKELY(DISTINCT rt0.c2) THEN TOTAL(rt0.c5) END FROM rt0; -- 0ms;
SELECT ALL json_array(((((((((rt0.c2)AND(0.6002502722066628)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)), '-1076645414') FROM rt0 WHERE (((('')+('-66073190')) IN (SQLITE_COMPILEOPTION_GET(NULL)))) LIMIT -263854923; -- 0ms;
SELECT DISTINCT x'278b' FROM rt0 WHERE (((0.5475267683747814 COLLATE RTRIM) NOTNULL)) LIMIT -2021791200; -- 0ms;
SELECT DISTINCT SUM(((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c5)))AND(rt0.c4))) OVER (), ((((rt0.c3)<(rt0.c5))) NOT BETWEEN (0.6002502722066628) AND (((((rt0.c4)OR(rt0.c5)))AND(rt0.c3)))), ((((rt0.c3 IN ())))>=((SUM(rt0.c3)))) FROM rt0 GROUP BY CASE rt0.c4 COLLATE BINARY  WHEN (rt0.c0 IN ()) THEN LOWER(rt0.c4) ELSE (~ (rt0.c1)) END, ((CAST(rt0.c1 AS INTEGER))OR((- (rt0.c3)))), ((0Xffffffffb94aaed6) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1))) AND (((rt0.c3)>>(rt0.c4)))), (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))&(CAST(rt0.c1 AS BLOB))), (((NOT (rt0.c5)))GLOB(((rt0.c1)<=(rt0.c5)))) HAVING (((('') BETWEEN (rt0.c2) AND (rt0.c1)))+(((rt0.c1) IS FALSE))) LIMIT 1036966287; -- 2ms;
SELECT DISTINCT ((CAST(rt0.c3 AS BLOB))>=(rt0.c3)) FROM rt0 WHERE (LIKELY(TRIM(NULL, 0xffffffffb2521386))) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT NULL) ASC; -- 0ms;
SELECT ALL ((((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c3))) NOTNULL) FROM rt0 WHERE ((~ (CAST(0.8442981335403567 AS INTEGER)))) ORDER BY (((rt0.c5)) BETWEEN (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))) AND ((((((((((rt0.c2)OR(rt0.c5)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c5)))GLOB(((rt0.c4) ISNULL))) FROM rt0 WHERE (((TYPEOF(NULL))=(CASE WHEN 0.20843944018523075 THEN '\robOXL앬Mw' ELSE NULL END))); -- 0ms;
SELECT ALL (((- ('-1830197236')))+(rt0.c2)) FROM rt0 WHERE ((+ (CASE NULL  WHEN NULL THEN 'SⱿfS]뇚6' ELSE '' END))); -- 0ms;
SELECT DISTINCT ((((rt0.c1) ISNULL))IS NOT((- (rt0.c4)))) FROM rt0 WHERE (((('1880530667'))<>(('TRUE'))) COLLATE NOCASE); -- 0ms;
SELECT (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN ()) FROM rt0 WHERE ((NOT ((0.027322130990578564 IN (''))))); -- 0ms;
SELECT ALL (((((rt0.c3 IN (rt0.c5)))OR(CASE WHEN rt0.c3 THEN rt0.c5 END)))AND(((rt0.c5) NOTNULL))), CASE WHEN NULL THEN UNLIKELY(rt0.c5) END, CAST(rt0.c2 AS NUMERIC) FROM rt0 ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ()) DESC, ((((json_patch(rt0.c2, rt0.c0))OR((((rt0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c5))))))OR(((rt0.c2)||(rt0.c2)))) DESC  NULLS LAST; -- 0ms;
SELECT ((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, TOTAL(((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c5)) COLLATE NOCASE) OVER ( ORDER BY ''), (((((((((0.15062395261033246)AND(rt0.c1)))AND(x'')))OR(rt0.c3)))OR(rt0.c3)) IN ()) FROM rt0; -- 0ms;
SELECT CASE WHEN ((rt0.c0) NOT BETWEEN ('eBv') AND (rt0.c1)) THEN ((rt0.c3) ISNULL) WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c2)<(rt0.c0)) WHEN x'' THEN MIN(x'') ELSE CASE rt0.c1  WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c4 END END FROM rt0; -- 0ms;
SELECT ALL (((rt0.c4, rt0.c1, rt0.c0)) BETWEEN ((json_array_length(rt0.c2, rt0.c5), rt0.c1, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c4)))) AND ((((rt0.c1)>('-9223372036854775808')), (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))), ((rt0.c4) NOTNULL)))) FROM rt0; -- 0ms;
SELECT ALL ((((((NULL)AND(rt0.c4)))AND(rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))) AND (NULL)) FROM rt0 LIMIT -1300647919 OFFSET -466698466; -- 0ms;
SELECT (x'd148' IN ()), ((rt0.c1 COLLATE NOCASE)>=(LTRIM(rt0.c3, 0.8236823164839734))), (((rt0.c3)<<(rt0.c1)) IN ((((0.6940128754467301)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) FROM rt0 WHERE (('618188912' IN ()) COLLATE RTRIM) GROUP BY (((rt0.c2 IN ()))<(rt0.c0)), CASE WHEN (+ (rt0.c1)) THEN x'' WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c5)) THEN ((rt0.c1)>>(rt0.c5)) WHEN rt0.c0 THEN '0.2230131827575207' ELSE ((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)) END, ((((((rt0.c2)AND(x'')))AND(rt0.c5))) NOT BETWEEN ((rt0.c2 IN ())) AND (((rt0.c3) IS TRUE))) LIMIT 1217127213; -- 0ms;
SELECT (json_array_length(rt0.c2, rt0.c0) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY ((((~ (rt0.c1))))<=((((rt0.c2)<<(rt0.c1)))))  NULLS LAST, (((('U1XbZnçN')OR(LIKELIHOOD(DISTINCT rt0.c5, 0.19965904607265494))))AND(rt0.c4 COLLATE BINARY))  NULLS FIRST), PERCENT_RANK() OVER (), ((rt0.c5 IN (rt0.c1)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT 0X24d8d070, ((CAST(rt0.c5 AS REAL))IS NOT(x'')), AVG(CAST(rt0.c2 AS BLOB)) OVER () FROM rt0; -- 0ms;
SELECT ((((((rt0.c2)AND(rt0.c2)))AND(((x'0758') BETWEEN (rt0.c5) AND (rt0.c4)))))AND(((((((((rt0.c3)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c5)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (COALESCE(CASE NULL  WHEN 'CL' THEN NULL END, (((0.027322130990578564)) NOT BETWEEN ((0X6f3bb220)) AND ((NULL))))); -- 0ms;
SELECT ALL rt0.c4 FROM rt0; -- 0ms;
SELECT ((((((rt0.c3)AND('}T3u9wL(G')))OR(rt0.c0)))>((+ (rt0.c0)))), UPPER((+ (rt0.c3))), CASE ((rt0.c5)AND(rt0.c5))  WHEN ((rt0.c2)OR(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND ('-983402415')) ELSE CAST('1308507420' AS TEXT) END FROM rt0 WHERE (UPPER(((0.7177589687670741) NOT BETWEEN (NULL) AND ('0.38986579545527467')))) ORDER BY rt0.c0  NULLS LAST; -- 0ms;
SELECT ((((rt0.c4)AND((((rt0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))))AND(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), TRIM(NULL, ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))), x'' FROM rt0 WHERE (((('' IN (0.811245273363487, '#栌AJMR')))||(SQLITE_COMPILEOPTION_GET(NULL)))) ORDER BY ((rt0.c3 COLLATE NOCASE)GLOB(x''))  NULLS FIRST, ((x'')GLOB(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN x'9092' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN '2071922377' THEN rt0.c3 ELSE rt0.c0 END)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(CASE 0.7755354501582411  WHEN rt0.c3 THEN x'' WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER) FROM rt0 WHERE (LIKELY((((-1e500, NULL, 0.21297255212703836))>=((',X', 2040561638, 0.9858620721540095))))); -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c5 AS INTEGER)), ((- (rt0.c4)) IN ()), ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))<>((((rt0.c0)<=(rt0.c1))))) FROM rt0 GROUP BY (- (((rt0.c1)!=(rt0.c3)))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 WHERE (((highlight('-635162759', '', 'v|tKH', x'4dd4'))LIKE(CAST('j9' AS TEXT))));SELECT (+ (((rt0.c0) IS FALSE))) FROM rt0; -- 0ms;
SELECT ALL (((- (rt0.c4)))LIKE((((rt0.c5))>((rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL((~ (rt0.c5))) OVER ( ORDER BY (((rt0.c3, rt0.c3, rt0.c0)) BETWEEN (((((rt0.c5)) BETWEEN ((rt0.c5)) AND ((rt0.c0))), ((rt0.c0)!=(rt0.c4)), '-1659373850')) AND ((NULLIF(DISTINCT rt0.c2, rt0.c1), '-837564136', ((((((((rt0.c2)AND(rt0.c5)))AND(rt0.c0)))OR(rt0.c5)))OR(rt0.c3))))) DESC, HEX(DISTINCT NULL), RTRIM(rt0.c0) ASC  NULLS LAST), ((((rt0.c3)LIKE(rt0.c5))) NOT BETWEEN ((~ (rt0.c4))) AND (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))), ((rt0.c0 COLLATE NOCASE)-(((rt0.c3) ISNULL))) FROM rt0 WHERE (((0.2595158885911575 COLLATE RTRIM)LIKE((~ (1856462513))))); -- 0ms;
SELECT ALL (- (((rt0.c1)<<(rt0.c4)))) FROM rt0 ORDER BY (((rt0.c5)) BETWEEN ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))) AND ((((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c2))))); -- 0ms;
SELECT ALL RANK() OVER () FROM rt0 WHERE (CAST(CASE WHEN '63+T' THEN NULL END AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY (NOT (x''))  NULLS LAST), (- (((rt0.c3)OR(rt0.c2)))), MIN(CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c5 THEN 'ᬺ}]' ELSE rt0.c3 END) FROM rt0 WHERE ((UPPER(1.856462513E9) IN (CASE NULL  WHEN 'B' THEN x'' END, ((NULL)>>(''))))); -- 0ms;
SELECT ALL CASE WHEN (('') BETWEEN (rt0.c0) AND (rt0.c3)) THEN COUNT(*) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN x'' WHEN NULL THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END WHEN x'' THEN ((x'')>=(rt0.c4)) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) THEN CAST(rt0.c3 AS TEXT) ELSE ((((rt0.c5)AND(NULL)))AND(rt0.c4)) END, (~ (rt0.c5)) COLLATE BINARY, CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 END COLLATE BINARY FROM rt0 WHERE (CASE ((x'')<=(0.19615462088347324))  WHEN ((0.8019402766341757) NOT BETWEEN (NULL) AND (2054418412)) THEN NULL COLLATE BINARY WHEN (((0.5236069337510838))<((0.2559866696322307))) THEN CAST(NULL AS TEXT) WHEN (('-837564136')<=('-284984261')) THEN CAST('1285298613' AS INTEGER) ELSE 'V|TKH' END); -- 0ms;
SELECT DISTINCT (((SUM(rt0.c1), (('263011433') NOT BETWEEN (rt0.c1) AND (rt0.c2)), UNLIKELY(rt0.c1)))>=(((- (rt0.c0)), ((rt0.c3) ISNULL), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))))), (~ (((((((((rt0.c0)AND(rt0.c5)))OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c3)))), CASE WHEN ((rt0.c1)%(rt0.c0)) THEN CAST(rt0.c3 AS NUMERIC) ELSE NULL END FROM rt0 WHERE ((('442120698')|(x'')) COLLATE BINARY) GROUP BY (x'1124' IN ()), ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))) AND ((9.74514041E8 IN ()))), CAST(1710635008 AS REAL), ((((rt0.c4)>=(rt0.c0)))<<(((NULL)IS(rt0.c2)))), json_extract((rt0.c5 IN ()), rt0.c1) ORDER BY rt0.c1 DESC;SELECT ((((rt0.c1)OR(rt0.c5)))>=(CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END)), CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c5 END  WHEN x'' COLLATE RTRIM THEN 0X59536b16 END, (((('ᬺ}]')!=(rt0.c5))) NOT BETWEEN (((rt0.c1)==(rt0.c3))) AND ((((rt0.c5, rt0.c4, rt0.c5)) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((x'', rt0.c1, rt0.c0))))), ((GROUP_CONCAT(rt0.c4)) NOTNULL), rt0.c5 FROM rt0; -- 1ms;
SELECT ALL rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT COUNT('/쇥%k*i|') OVER (), CASE (rt0.c1 IN ())  WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (0Xffffffffc6769961)) THEN CAST(rt0.c4 AS NUMERIC) END, CASE WHEN (rt0.c4 IN ()) THEN ((rt0.c3)IS(rt0.c0)) WHEN (((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c5 THEN NULL WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c4 END WHEN ((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c0)) THEN (~ (x'')) END FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1, MIN(((((rt0.c5)OR(rt0.c5)))OR(rt0.c1))), AVG(((rt0.c3)&(rt0.c0))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c3 COLLATE NOCASE)AND((- (rt0.c1)))))AND(rt0.c5)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)%(rt0.c2))) IS TRUE), CASE WHEN (+ (rt0.c2)) THEN ((rt0.c5) NOT NULL) END, LEAD(((json_type(rt0.c3)) BETWEEN ((~ (rt0.c3))) AND (json_type(rt0.c0))), CASE WHEN 'tH' THEN ((rt0.c4)>=(rt0.c0)) WHEN (NULL IN ()) THEN CAST(rt0.c2 AS TEXT) WHEN '-983402415' COLLATE BINARY THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE rt0.c3 COLLATE NOCASE END, ((((rt0.c5) IS FALSE)) IS TRUE)) OVER ( ROWS  UNBOUNDED PRECEDING), CASE WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c3))) END, ((rt0.c5 COLLATE NOCASE) BETWEEN (((rt0.c3)>=(rt0.c0))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))) FROM rt0 GROUP BY ((((-9.83402415E8)=(x'e2afd64d'))) NOT BETWEEN (((rt0.c3)IS(rt0.c1))) AND (json_valid(NULL))) HAVING NULL; -- 0ms;
SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))AND(NULL)))OR(rt0.c5)) COLLATE NOCASE FROM rt0 WHERE (CAST(CASE WHEN '1069492907' THEN 0.6329476984527926 ELSE NULL END AS BLOB)); -- 0ms;
SELECT ALL NULLIF(DISTINCT ((0.057275556075529144) IS FALSE), LIKELIHOOD(rt0.c0, 0.1878408624382899)) FROM rt0 GROUP BY rt0.c1, ((CASE WHEN rt0.c2 THEN rt0.c2 END)&(CAST(rt0.c0 AS REAL))), (CASE WHEN rt0.c4 THEN rt0.c3 END IN ()) HAVING CASE WHEN ((rt0.c0)%(rt0.c4)) THEN ((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)) END; -- 0ms;
SELECT rt0.c3 FROM rt0 ORDER BY ((((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c0))) IS FALSE) ASC, CAST(((rt0.c1)IS(rt0.c3)) AS BLOB)  NULLS LAST; -- 0ms;
SELECT DISTINCT rt0.c5 FROM rt0 GROUP BY (((rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((LAST_INSERT_ROWID()))), 0.8985475773062843, ((TRIM(rt0.c4)) BETWEEN ((+ (rt0.c3))) AND (CAST(rt0.c1 AS TEXT))) HAVING ((((((rt0.c4) NOT NULL))AND(((rt0.c3) IS FALSE))))OR(rt0.c4)); -- 1ms;
SELECT DISTINCT (NOT (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c5 ELSE rt0.c5 END)), ((CAST(rt0.c0 AS NUMERIC)) NOT NULL), CASE WHEN ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)) THEN CAST(rt0.c0 AS INTEGER) ELSE CAST(rt0.c1 AS TEXT) END FROM rt0; -- 0ms;
SELECT CASE rt0.c1  WHEN rt0.c5 THEN rt0.c4 ELSE rt0.c5 END COLLATE BINARY COLLATE NOCASE FROM rt0 LIMIT 1167022523 OFFSET 1146993826; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE ((((NOT ('-328448100'))) NOT BETWEEN ((']v[~ⳲҌ	sd' IN ())) AND ((- ('AM'))))); -- 0ms;
SELECT DISTINCT ((rt0.c3) IS TRUE), ((((rt0.c1)!=(rt0.c1))) IS FALSE), DENSE_RANK() OVER () FROM rt0 ORDER BY ((CASE WHEN rt0.c5 THEN rt0.c1 END) BETWEEN ((NOT (rt0.c0))) AND ((((rt0.c4, rt0.c5, rt0.c0))==((rt0.c0, rt0.c2, rt0.c2))))) ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN rt0.c3 END) NOTNULL)  NULLS LAST LIMIT -1062836259 OFFSET -1849858993; -- 0ms;
SELECT ALL 0.3184327943602768 FROM rt0 WHERE (((((((((CAST(x'' AS TEXT))AND(((((((((x'490c')OR(0x2b403500)))OR(NULL)))OR('-1093914161')))AND('dU0')))))OR(x'ad89' COLLATE RTRIM)))OR(((x'')>>(0X458f59bb)))))AND(CAST(NULL AS TEXT)))) ORDER BY (0.19717930782173798 IN (((rt0.c2) NOTNULL))) DESC  NULLS LAST; -- 0ms;
SELECT ((((rt0.c4) BETWEEN (4.42120698E8) AND (rt0.c5))) IS TRUE) FROM rt0 WHERE (((((((((CAST(NULL AS NUMERIC))AND(CASE 0X17b60ad5  WHEN 428871021 THEN ')]M' END)))AND(CAST('1619693470' AS BLOB))))OR(CASE WHEN 0xffffffffae52339b THEN NULL WHEN 0.3242137608035889 THEN x'' WHEN x'' THEN '' END)))OR((0.01166163942737386 IN ('-1694328120'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)) COLLATE NOCASE FROM rt0 WHERE ((((((((0.9457672335849212))=(('/癮'))))AND(CASE WHEN -1.830197236E9 THEN 0.8019402766341757 END)))OR((((NULL)) NOT BETWEEN ((NULL)) AND ((0.42116112822987917)))))) GROUP BY (((+ (rt0.c1))) NOT BETWEEN (((((rt0.c5)AND(rt0.c1)))AND(rt0.c5))) AND ((rt0.c4 IN (rt0.c2)))); -- 0ms;
SELECT TRIM(DISTINCT ((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c5)), SUM(rt0.c1)) FROM rt0 WHERE ((('')LIKE(x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((rt0.c1)AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))), ((((rt0.c4)==(rt0.c1))) NOT BETWEEN (AVG(rt0.c4)) AND (((rt0.c5) BETWEEN (rt0.c2) AND (0.06987050871780331)))), 0.18643917212712025 FROM rt0 WHERE (MIN(((0.45150057222767015) IS FALSE), (((('-2131879295')AND(NULL)))AND(NULL)))); -- 1ms;
SELECT PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL (- (((((rt0.c5)OR(rt0.c1)))OR(rt0.c4)))) FROM rt0 GROUP BY rt0.c2; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT (((rt0.c5)) BETWEEN ((rt0.c5)) AND ((0xffffffffb2fe0fb3))), 0.5331700373583286), (('\nm') NOT NULL) COLLATE BINARY, ((CAST(rt0.c5 AS REAL))&((((rt0.c5))>=((0.19615462088347324))))) FROM rt0 WHERE (CASE ((x'')-(x'0ebf'))  WHEN ((('AM')) BETWEEN ((')/9~/\섥')) AND (('-170736276'))) THEN ('' IN ()) WHEN (((('-790728976')OR(0.7481118382826898)))AND(NULL)) THEN 0X3fbf2aab COLLATE NOCASE WHEN (('-1549577194') NOT BETWEEN ('u7sr') AND (0.2766195571462897)) THEN CAST(NULL AS REAL) ELSE (((NULL))>((0.6512064906738063))) END) ORDER BY TYPEOF(rt0.c0) COLLATE NOCASE ASC  NULLS FIRST; -- 0ms;
SELECT ((rt0.c2)|(rt0.c0)) COLLATE BINARY, ((rt0.c5 COLLATE NOCASE) NOT BETWEEN ((+ (rt0.c2))) AND ((x'' IN ()))), (((((NOT (rt0.c2)))AND(((rt0.c4) BETWEEN (rt0.c2) AND (x'')))))OR(x'')) FROM rt0 WHERE (((0.18643917212712025) NOT BETWEEN (((x'')GLOB(''))) AND (((NULL)<(0.11734144736645702))))); -- 1ms;
SELECT ALL NULL FROM rt0 WHERE (x'') LIMIT -1996883225 OFFSET 1998969904; -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT rt0.c0))>((NOT (rt0.c5)))) FROM rt0 WHERE (CAST((((('-927757985')AND(-4.58770653E8)))AND('1346174186')) AS NUMERIC)); -- 0ms;
SELECT NTILE(CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN ((((((((rt0.c5)AND(rt0.c4)))OR(rt0.c5)))OR(x'')))AND(rt0.c2)) END) OVER (), COUNT(CAST(rt0.c1 AS INTEGER)), NULL COLLATE BINARY FROM rt0 WHERE ((((x'', '-392815642', 0x18350edb)) BETWEEN ((x'' COLLATE BINARY, (0.5465830535515108 IN ()), CAST(NULL AS NUMERIC))) AND ((((x'')IS NOT('-1093914161')), ((x'')&(NULL)), CAST(1597270661 AS REAL))))) ORDER BY ((((((rt0.c0)AND(NULL)))AND(rt0.c5))) NOT BETWEEN (rt0.c5 COLLATE NOCASE) AND (((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c5)))OR(rt0.c4)))OR('z?')))) ASC;SELECT ALL (((((rt0.c0, rt0.c3, rt0.c2))=((rt0.c2, rt0.c1, rt0.c1))))<>(((x'')+('5]n6D烇K''b')))) FROM rt0 WHERE (LOWER(DISTINCT NULL)); -- 0ms;
SELECT DISTINCT ABS(((rt0.c3) IS FALSE)) FROM rt0 ORDER BY CASE CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN x'' THEN rt0.c4 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END  WHEN ((rt0.c3) IS FALSE) THEN ABS(DISTINCT x'd330') ELSE (~ (rt0.c1)) END; -- 0ms;
SELECT CAST(((rt0.c0) ISNULL) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE (((((0.03148335280599235)<=('-66073190')))&(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT ((((((rt0.c4)AND(rt0.c2)))AND(((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))))AND(x'7b99')), GROUP_CONCAT(CAST(rt0.c1 AS INTEGER)) FILTER(WHERE (((rt0.c2, rt0.c2, 'Zg*\r')) BETWEEN ((CAST(rt0.c2 AS TEXT), (NOT ('-473421333')), CASE WHEN rt0.c4 THEN '' ELSE rt0.c3 END)) AND ((INSTR(rt0.c3, rt0.c1), CASE WHEN rt0.c4 THEN rt0.c4 END, ((rt0.c0) NOTNULL))))) OVER (), ((((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))AND('1307221109')) FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY ((rt0.c3 COLLATE NOCASE) NOT NULL) DESC), NULLIF(DISTINCT TRIM(rt0.c5), AVG(rt0.c0)), ((rt0.c4 COLLATE BINARY)%(TRIM(rt0.c2))) FROM rt0; -- 0ms;
SELECT CAST(((x'')>(rt0.c4)) AS TEXT) FROM rt0; -- 0ms;
SELECT ALL CASE ((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c3))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN (('-466698466')OR(rt0.c5)) WHEN ((((rt0.c2)OR(rt0.c4)))AND(x'')) THEN INSTR(rt0.c0, rt0.c4) WHEN ((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)) THEN ((rt0.c5) IS TRUE) END FROM rt0 WHERE ((NULL IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT 'Sj' FROM rt0 WHERE ((+ (CAST('2071922377' AS INTEGER)))); -- 0ms;
SELECT ALL (((rt0.c2) BETWEEN (rt0.c2) AND (0.6329476984527926)) IN (UPPER(rt0.c4))) FROM rt0 WHERE ((~ (((((x'')OR(x'')))AND(NULL))))); -- 0ms;
SELECT ALL NULL, MAX(rt0.c0), (((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c4)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT NTILE('.H0?') OVER ( ORDER BY ((rt0.c1) ISNULL)  NULLS LAST) FROM rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS TEXT) DESC  NULLS LAST, ((((x'a2b5', rt0.c1, rt0.c4)) BETWEEN ((rt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c4, rt0.c4))) IN ());SELECT (~ (CASE rt0.c1  WHEN '*QX6' THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0 WHERE ((((x'')) NOT BETWEEN ((((0xffffffff977ba804) NOT NULL))) AND ((x'' COLLATE NOCASE)))); -- 1ms;
SELECT DISTINCT AVG(0.33604822723016003) FROM rt0 WHERE (((((0.3284848224570992)>('-1186287914')))=(((x'')IS NOT('1428182302'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2))) IS FALSE) FROM rt0 ORDER BY CASE ((rt0.c4)<<(rt0.c4))  WHEN ((rt0.c2)IS NOT(rt0.c3)) THEN (- (rt0.c5)) ELSE ((rt0.c2)%(rt0.c2)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT 'bk>ug' FROM rt0; -- 0ms;
SELECT DISTINCT 0xffffffffc260490e FROM rt0 LIMIT -1807734235 OFFSET 820656689; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS INTEGER) AS INTEGER) FROM rt0 WHERE ((- ((NULL IN ())))); -- 0ms;
SELECT DISTINCT 0.7481118382826898, CASE WHEN ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c3)) THEN (~ (rt0.c3)) END, (((rt0.c4 IN ())) IS TRUE) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt0 WHERE ((((NULL IN ())) BETWEEN (((x'195d1c78') NOT BETWEEN (x'd3ad93140500') AND ('1013213652'))) AND (((NULL)GLOB(''))))); -- 0ms;
SELECT ALL CAST(((rt0.c2)GLOB(rt0.c4)) AS REAL), ((rt0.c1) NOT BETWEEN (x'') AND (((rt0.c4)|(rt0.c3)))), 0.0825222981938104 FROM rt0 WHERE ((((NOT (NULL))) BETWEEN (json_object(42688279, 112868819, NULL, 0Xffffffffe1ee8c9b)) AND (((0x1bfc9931)>=(0.002332375501913453))))) GROUP BY CAST((rt0.c1 IN ()) AS INTEGER) HAVING CASE 0xffffffffad8b0d59  WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c5)))AND(rt0.c1)) THEN LIKELIHOOD(rt0.c1, 0.9500002492085158) ELSE rt0.c2 END;SELECT ALL COUNT(CAST(rt0.c3 AS REAL)) OVER (), ((((rt0.c4) BETWEEN (NULL) AND ('-1996883225'))) NOTNULL), CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN CASE rt0.c3  WHEN rt0.c5 THEN rt0.c1 END ELSE (~ (rt0.c0)) END FROM rt0 WHERE ((((~ (x'')))-((('1613900927') IS TRUE)))) LIMIT 1498639126 OFFSET -1134983067; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS INTEGER)) NOT NULL), (NOT (((rt0.c4)||(rt0.c2)))), CAST((+ (rt0.c1)) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c3) NOTNULL))OR((NOT (rt0.c4)))))AND(((rt0.c1)=(rt0.c5)))), UPPER(DISTINCT ((rt0.c2) IS TRUE)), ((((rt0.c5)%(rt0.c4)))AND(((rt0.c5) IS TRUE))) FROM rt0 WHERE ((((x'' IN (0.050237962902981326))) ISNULL)); -- 0ms;
SELECT DISTINCT (~ (((NULL)%(rt0.c0)))) FROM rt0 WHERE (((((0.3284848224570992)>=('vlR\}&'))) IS FALSE)); -- 0ms;
SELECT DISTINCT 0.5050513330902155 FROM rt0 WHERE (TYPEOF('-1300647919')); -- 0ms;
SELECT ALL ((((rt0.c0)-(rt0.c3)))-(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 END)), ((SUM(rt0.c2))IS NOT(((rt0.c2)/(NULL)))), ((rt0.c2) IS FALSE) COLLATE RTRIM FROM rt0 WHERE ((('MdkBbo⪫')IS('')) COLLATE RTRIM); -- 0ms;
SELECT ALL SUM(((rt0.c2)=(rt0.c0))) OVER () FROM rt0; -- 0ms;
SELECT SUM(((rt0.c0) IS TRUE)) FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c5))) IS FALSE) FROM rt0 WHERE ((~ (('-1807734235' IN ())))); -- 0ms;
SELECT DISTINCT LEAD(((((rt0.c4)GLOB(rt0.c3)))!=(CAST(rt0.c4 AS REAL))), JULIANDAY(rt0.c5, rt0.c5, rt0.c4) COLLATE NOCASE, (rt0.c1 IN ()) COLLATE RTRIM) OVER () FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS TRUE))/(((rt0.c3)LIKE(rt0.c4)))), COUNT((((rt0.c1))!=((rt0.c3)))), CAST((~ (rt0.c2)) AS REAL) FROM rt0 WHERE ((((((('1035656491')AND(x'')))AND('5Q?5s'))) IS FALSE)); -- 0ms;
SELECT ALL ((((((rt0.c2)<<(rt0.c0)))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c1 THEN '#!/*7\O' ELSE rt0.c5 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0; -- 0ms;
SELECT (- (rt0.c2)), (((((NULL) NOTNULL), ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)), ((rt0.c2) NOT NULL)))<((CASE WHEN rt0.c1 THEN rt0.c2 END, rt0.c3, ((x'0d29')AND(rt0.c1))))), (((rt0.c2 IN ()))=(CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)) FROM rt0 WHERE (((((((NULL)<=(NULL)))AND(((('353259891', '', 0.1757329650374606))<(('H', NULL, ''))))))AND(SQLITE_COMPILEOPTION_USED(NULL)))); -- 0ms;
SELECT DISTINCT ((NULL)&(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0 WHERE (((CAST(0X6f3bb220 AS INTEGER)) NOTNULL)); -- 0ms;
SELECT NULLIF(DISTINCT CAST(rt0.c1 AS BLOB), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c5 END) FROM rt0; -- 0ms;
SELECT SUM((('716573076')AND(rt0.c4))), (((rt0.c2) NOT NULL) IN ((+ (rt0.c0)))), ((((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))IS(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c5 END)) FROM rt0 WHERE ('121822839') ORDER BY ((((rt0.c0)<>(rt0.c2)))*(((rt0.c1) IS TRUE)))  NULLS FIRST; -- 0ms;
SELECT CASE WHEN ((((rt0.c0)OR(rt0.c5)))AND(rt0.c5)) THEN (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END, COUNT(*) OVER (), ((((rt0.c0) NOTNULL))*(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) FROM rt0 WHERE ((load_extension(0.3135136565426305) IN (NULL, (((NULL, NULL, '725628160')) NOT BETWEEN ((NULL, 0.3339622991962524, -1.062836259E9)) AND ((0.5598332098245855, '?\n', x'')))))) GROUP BY (((((rt0.c0)&(rt0.c4))))<>((CAST(rt0.c0 AS BLOB))));SELECT x'' FROM rt0 LIMIT -29704670 OFFSET 1641035484; -- 0ms;
SELECT ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))IS NOT(((rt0.c3)>=(rt0.c0)))) FROM rt0 WHERE (((((NULL IN ('\wMGCj')), CASE NULL  WHEN '' THEN NULL END, CAST(NULL AS INTEGER), (- ('-1753503740')), ((x'1b8d')*(0X19900d6d))))==((((NULL)!=(x'')), ((((((((1998211467)AND('-\r,껖gd')))OR('U1XbZnçN')))OR(x'')))OR('-1226334578')), CAST(NULL AS INTEGER), ((x'') IS TRUE), NULL COLLATE NOCASE)))) ORDER BY rt0.c1  NULLS LAST; -- 0ms;
SELECT SUM((((('1346174186')OR(rt0.c0)))AND(rt0.c1))), (((- (rt0.c2))) NOT BETWEEN ((- (rt0.c3))) AND (((rt0.c0) NOTNULL))), CASE (rt0.c2 IN ())  WHEN ((rt0.c5)&(rt0.c0)) THEN LOWER(rt0.c3) ELSE rt0.c2 COLLATE BINARY END FROM rt0; -- 1ms;
SELECT DISTINCT rt0.c2 COLLATE NOCASE FROM rt0 ORDER BY (((~ (rt0.c3))) NOT BETWEEN (CAST(rt0.c4 AS BLOB)) AND (((rt0.c2) ISNULL))) ASC, (((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c3)) IN (IFNULL(rt0.c1, rt0.c4), rt0.c4)); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c5))) BETWEEN ((((rt0.c5, rt0.c4, rt0.c1))>=((rt0.c3, rt0.c2, '-224172000')))) AND ((~ (rt0.c1)))) FROM rt0; -- 0ms;
SELECT ('1589343505' IN (rt0.c3)) FROM rt0; -- 1ms;
SELECT MAX(rt0.c1) FROM rt0 WHERE (CAST(((((1.647153345E9)AND('1974327255')))OR(NULL)) AS REAL)); -- 0ms;
SELECT ALL CUME_DIST() OVER (), ((rt0.c0) BETWEEN (CASE rt0.c0  WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 END) AND (((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c4)))), rt0.c5 FROM rt0 WHERE (CASE WHEN ((3.6562263E7)OR(x'')) THEN x'' COLLATE NOCASE WHEN NULL THEN LOWER(NULL) WHEN CAST('-328448100' AS INTEGER) THEN ('UJ' IN ('-1291972685')) END); -- 0ms;
SELECT ALL MAX(SUM(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))) FROM rt0 WHERE (x'77f8');SELECT DISTINCT AVG((rt0.c1 IN (rt0.c1, rt0.c3))), ((rt0.c3 COLLATE RTRIM)&(' ~')), (((((0.861599931467533))>=((rt0.c2)))) BETWEEN (((0.03148335280599235)>>(rt0.c1))) AND (((x'') NOTNULL))) FROM rt0 WHERE (NULL); -- 1ms;
SELECT DISTINCT CASE WHEN 0xffffffffae52339b THEN NULL ELSE rt0.c1 END COLLATE NOCASE FROM rt0 LIMIT -1694328120; -- 0ms;
SELECT ALL TOTAL(COUNT(rt0.c2)), json_quote(CASE rt0.c5  WHEN rt0.c4 THEN '9Z00' WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c2 END), ((((rt0.c2)>(rt0.c3))) BETWEEN (rt0.c3) AND (rt0.c0)) FROM rt0;SELECT ALL ((rt0.c5 COLLATE NOCASE)+(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END)) FROM rt0 ORDER BY json_object(((rt0.c4)||(rt0.c0)), json_remove(rt0.c5, rt0.c1, rt0.c1, rt0.c5), TRIM(DISTINCT '974514041'), ((((NULL)OR(rt0.c0)))AND(rt0.c1))) ASC;SELECT ALL ((TOTAL(rt0.c1)) NOT BETWEEN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c1))) AND ((((rt0.c3))!=((rt0.c1))))) FROM rt0; -- 0ms;
SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))>>(LOWER(rt0.c4))) FROM rt0 WHERE (((CAST(NULL AS BLOB))>>((('ᜤ䩫')-('974514041'))))); -- 1ms;
SELECT DISTINCT CAST(CAST(0.1178211172324305 AS REAL) AS NUMERIC) FROM rt0 WHERE ((((0.7817852427613683)<=('.ckQ')) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE NOCASE FROM rt0 WHERE (((CASE '(y'  WHEN 0.2759522046035423 THEN x'' WHEN -1652309723 THEN x'43e7' WHEN 0xffffffffd584b5fa THEN NULL END) IS FALSE)); -- 0ms;
SELECT ALL rt0.c4, CAST(((((((((rt0.c2)OR(rt0.c5)))OR(rt0.c3)))OR(rt0.c4)))AND(x'4087')) AS TEXT), CAST(NULL AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL CAST(((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c5)))AND(rt0.c2)))AND(rt0.c2)) AS NUMERIC), ((((rt0.c0) NOTNULL))<=(rt0.c0)), ((((rt0.c3, rt0.c3, rt0.c5)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c0, rt0.c1, rt0.c5))) IN ()) FROM rt0 WHERE (CASE WHEN ('1923463124' IN (0.5349630366790994)) THEN (- (0.270424306861773)) ELSE 0.758394164564884 COLLATE NOCASE END); -- 0ms;
SELECT (((rt0.c2) NOTNULL) IN ()), ((rt0.c5)|(((NULL) NOT NULL))), MAX(((NULL) NOT NULL)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3 IN (rt0.c5)))LIKE(AVG(rt0.c1))), 0x36af63b1, CASE ((rt0.c3)LIKE(rt0.c5))  WHEN LOWER(rt0.c4) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) THEN rt0.c1 WHEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c5)))AND('')) THEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) END FROM rt0 WHERE (CASE (('1285298613')-(x'543f'))  WHEN 0.43500569840978554 COLLATE BINARY THEN ((0.9858620721540095)-(NULL)) WHEN CASE NULL  WHEN 0.6189965492493992 THEN x'' ELSE '-23745839' END THEN (('-700974172')<=('707789964')) WHEN CAST('/쇥%k*i|' AS REAL) THEN (('-635162759') BETWEEN (NULL) AND (0X55a5d957)) ELSE 0Xffffffff99aad407 END) ORDER BY CAST(rt0.c5 AS NUMERIC) COLLATE BINARY; -- 0ms;
SELECT INSTR(CASE WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 END, rt0.c0) FROM rt0; -- 0ms;
SELECT DISTINCT MIN(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c2 END) FROM rt0 WHERE ((((0.802300472078139)) NOT BETWEEN ((((('-325217829'))>=((0.15735875831979995))))) AND (((- (0.7150306305809125)))))) GROUP BY ((rt0.c5 COLLATE BINARY)AND(((x'') NOT NULL))) HAVING (- ('-1738161821')); -- 1ms;
SELECT ALL ((GROUP_CONCAT(rt0.c1))%(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1))) THEN LOWER(rt0.c2) END FROM rt0; -- 0ms;
SELECT DISTINCT MIN(AVG(((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c0)))), CAST(((rt0.c5)LIKE(rt0.c4)) AS TEXT), UPPER(DISTINCT NULL) FROM rt0 WHERE (((LIKELIHOOD('-117477146', 0.8239362868292992))*((((x'')) BETWEEN ((0.3148149034945589)) AND (('5q?5s'))))));SELECT ALL MIN(((rt0.c0) IS FALSE)), (+ (rt0.c0)), '1723606302' FROM rt0 WHERE (DATETIME('0.8019402766341757' COLLATE NOCASE, (('0.09030061105483145') IS FALSE), ((0.19717930782173798)==('v3c0')))) GROUP BY (((CAST(rt0.c0 AS NUMERIC), rt0.c1 COLLATE RTRIM, ((rt0.c4)<=(0.11156316365829066))))<(('3]K}_cYB', rt0.c1 COLLATE BINARY, TOTAL_CHANGES()))) ORDER BY ((rt0.c0)<=(rt0.c2)) COLLATE BINARY; -- 0ms;
SELECT ALL COUNT(AVG(rt0.c5) COLLATE NOCASE) FROM rt0;SELECT DISTINCT ((((((((((((((rt0.c0)|(rt0.c1)))AND(((NULL) NOT BETWEEN (rt0.c5) AND (rt0.c4)))))OR((NOT ('')))))OR(CAST(rt0.c5 AS REAL))))AND('')))AND(CAST(rt0.c3 AS INTEGER))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5)))), rt0.c4, ((((rt0.c1 IN (rt0.c2))))>((((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c4))))), (rt0.c3 COLLATE NOCASE IN ()), SUM(((rt0.c0)<(-2131879295))) OVER () FROM rt0; -- 0ms;
SELECT ALL '' FROM rt0 WHERE (CASE (x'' IN ())  WHEN CHAR(0.8756384004924159) THEN CAST(x'' AS BLOB) ELSE 1833269472 END) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)))|(((rt0.c5) NOT NULL)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) IS FALSE) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((ABS(rt0.c1)) ISNULL) FROM rt0 WHERE (CAST((+ (0.1467804234880442)) AS NUMERIC)); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c1))<<(((((rt0.c5)OR(rt0.c2)))OR(rt0.c0)))), TRIM(DISTINCT SUM(rt0.c2)), ((((((rt0.c3)<>(x'')))AND(((rt0.c2) NOT NULL))))OR(x'1bb5c4ce')) FROM rt0; -- 0ms;
SELECT DISTINCT 1.597270661E9 FROM rt0; -- 0ms;
SELECT (((rt0.c0))==(('1597270661'))) COLLATE RTRIM FROM rt0 WHERE (('2xT' IN ()) COLLATE NOCASE) GROUP BY (rt0.c5 COLLATE RTRIM IN (((((rt0.c2)AND(rt0.c5)))OR(rt0.c2)))), ((((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c5)))<=(INSTR(rt0.c5, 0.0825222981938104))), ((((((rt0.c1)>(rt0.c4)))AND((rt0.c4 IN ()))))OR((((rt0.c3, rt0.c5, rt0.c2))<>((rt0.c0, rt0.c5, rt0.c5))))); -- 0ms;
SELECT DISTINCT (rt0.c5 COLLATE BINARY IN ()) FROM rt0 WHERE ((((x'9d6c' IN ()))/(((NULL) NOTNULL)))); -- 0ms;
SELECT ALL (((((x'')/(rt0.c4))))<>((((rt0.c0)AND(0.6219028085465363))))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c5, rt0.c4, rt0.c5))>((rt0.c5, rt0.c0, rt0.c1))) THEN (+ (rt0.c4)) END FROM rt0; -- 1ms;
SELECT ALL UNLIKELY(((rt0.c3)-('624140607'))) FROM rt0; -- 0ms;
SELECT ALL CAST(GROUP_CONCAT(rt0.c4) AS BLOB), rt0.c0, ((rt0.c0)GLOB(rt0.c2)) COLLATE BINARY FROM rt0 WHERE (((((((NULL))==(('5~')))))>((CAST(0.6767182391997509 AS NUMERIC))))); -- 0ms;
SELECT DISTINCT COALESCE(((rt0.c4) IS FALSE), rt0.c1, ((rt0.c4)>(x'7575')), ((0.11734144736645702) ISNULL)) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))IS NOT(TOTAL(rt0.c3))) FROM rt0; -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET((('6_BwDn<A.') NOT BETWEEN (rt0.c5) AND (rt0.c0))), SUM(rt0.c4) OVER (), ((CAST(rt0.c5 AS INTEGER))+(((((x'')OR(rt0.c1)))AND(rt0.c2)))) FROM rt0 WHERE (((((((((((0.12040497368502345)OR(0.49341232742545194)))OR(0.09207514106539882)))OR('3]K}_cYB')))AND(0x4640568))) NOT BETWEEN (LOWER(0x3058218c)) AND (CASE WHEN 'C?''' THEN 0x1e5e1c43 WHEN 0.5162273318019807 THEN x'' WHEN 0.23031488049561955 THEN '83xv%﫧' ELSE '' END))); -- 1ms;
SELECT DISTINCT ((((0.7481118382826898) BETWEEN (rt0.c4) AND (rt0.c0))) NOT NULL) FROM rt0 WHERE (((((x'')AND(x''))) BETWEEN (((('寉9<ﲑ9*N'))<((-1300647919)))) AND (((-1189834452)LIKE('c1'))))) LIMIT 176907012 OFFSET -1033877234; -- 0ms;
SELECT DISTINCT ((((rt0.c3)AND(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END)))OR(NULL)) FROM rt0 WHERE (IFNULL(CASE WHEN NULL THEN 0.780151722762317 ELSE 0.017258719886856455 END, (((8.11082124E8))==((x'd19e'))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)<(NULL)))AND(rt0.c4 COLLATE NOCASE)))AND(CAST(rt0.c3 AS TEXT))) FROM rt0 WHERE ((((((NULL)/(NULL))))<(((((NULL))>=((x''))))))); -- 0ms;
SELECT DISTINCT rt0.c4, ((((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) BETWEEN ((rt0.c1 IN (0.8059829251430631, rt0.c3))) AND ((((rt0.c5, rt0.c0, rt0.c4))!=((rt0.c3, rt0.c0, rt0.c4))))), (~ (COUNT(*))) FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c5)))AND(((rt0.c0)<('k')))), rt0.c1, ((CAST(rt0.c2 AS INTEGER)) BETWEEN ((NOT (rt0.c4))) AND (CAST(rt0.c2 AS INTEGER))) FROM rt0; -- 1ms;
SELECT ALL NULLIF(rt0.c0, COUNT(*)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1 COLLATE RTRIM)AND(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(ABS(DISTINCT rt0.c4))) FROM rt0 WHERE ((+ ((x'' IN (x'', x''))))); -- 0ms;
SELECT DISTINCT ((((-945321866) NOT BETWEEN (rt0.c0) AND (rt0.c5))) NOTNULL), x'', CASE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2))  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(0.956569124428259)))OR(rt0.c3)) THEN (('0.4796517991230601')LIKE(rt0.c4)) END FROM rt0 ORDER BY (((NOT (x''))) NOT BETWEEN (((rt0.c5)=(rt0.c2))) AND (((rt0.c2)!=(rt0.c4)))) ASC LIMIT 900130781 OFFSET -50366750; -- 0ms;
SELECT rt0.c3, ((CAST(NULL AS BLOB))<(((((rt0.c5)OR(rt0.c5)))AND(0.6097963591728989)))), NULLIF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), SUM(rt0.c4)) FROM rt0; -- 0ms;
SELECT ((SUM(rt0.c4))IS NOT(rt0.c3 COLLATE RTRIM)), (((((rt0.c5)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c5))))>=(IFNULL(rt0.c4, rt0.c5))), (('^_%')LIKE(rt0.c2 COLLATE NOCASE)) FROM rt0 WHERE ((((x'' IN ('-1131262166'))) NOT BETWEEN ((- (NULL))) AND (((-2057895675)==('\wrGCj'))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE (((((((0Xffffffffa3a35416)OR('0.0')))AND(NULL)))<(((0.959480374083981) NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) AND (('먶'))) FROM rt0 WHERE (0.965960405529909); -- 0ms;
SELECT ALL (~ (rt0.c2)) FROM rt0 GROUP BY '2054418412' COLLATE NOCASE, ((((((((CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c4 END)OR(((rt0.c5) NOT BETWEEN (rt0.c3) AND (0.8475349227740724)))))AND(CHANGES())))OR((('-392815642') IS FALSE))))OR(((rt0.c5)>=(rt0.c3)))), ((((CAST(x'' AS TEXT))AND((((0x771a498b)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))OR((((('1307221109')AND(rt0.c2)))AND(rt0.c0)))), QUOTE(x''), rt0.c0; -- 0ms;
SELECT DISTINCT 0.4802390364087171 FROM rt0 WHERE (CASE WHEN ('707789964' IN ()) THEN (x'699c' IN (9.00130781E8)) WHEN ((-1890433163)LIKE(NULL)) THEN (- (x'')) WHEN (NULL IN (NULL, -1.076645414E9)) THEN ((x'70ad') NOT NULL) WHEN NULL COLLATE BINARY THEN (0xffffffffadd1ba90 IN ()) WHEN ((NULL)|(4.28871021E8)) THEN (('cD羁{')AND(9223372036854775807)) END); -- 0ms;
SELECT (((rt0.c3) NOTNULL) IN ((NOT (0.2035290525050205)), rt0.c5 COLLATE NOCASE)) FROM rt0 WHERE (CASE ((-1.076645414E9)||(0X54f202e2))  WHEN NULL COLLATE BINARY THEN 'UJ' WHEN (0X6ebd9c82 IN ()) THEN NULL WHEN 9.74514041E8 THEN (('?CiV 檅.0q') BETWEEN ('4w8庱5') AND (NULL)) WHEN (0.1757329650374606 IN ()) THEN CAST('' AS BLOB) WHEN 0.7596191760493073 COLLATE BINARY THEN ((0.3907722567027603) NOT BETWEEN (0.9445646628017476) AND ('')) END); -- 0ms;
SELECT CASE WHEN rt0.c3 THEN rt0.c1 END COLLATE NOCASE, CAST(ABS(rt0.c5) AS TEXT), CAST(((('-503282484'))>((rt0.c2))) AS BLOB) FROM rt0 WHERE (((IFNULL(x'', x''))AND(((0.2472208201086714)<>(x'939a'))))); -- 0ms;
SELECT ALL LAST_VALUE((((rt0.c0, (((rt0.c1)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c2))), ((rt0.c0)||(x'ef68'))))<=(((rt0.c3 IN ()), rt0.c3, ('' IN ()))))) OVER ( ORDER BY ((rt0.c2 COLLATE BINARY) NOT NULL) DESC, CASE WHEN (rt0.c4 IN ()) THEN ((rt0.c5)/(rt0.c3)) ELSE ((rt0.c1) BETWEEN (rt0.c4) AND ('5+Nx')) END ASC) FROM rt0 WHERE (((('>rO5r')) BETWEEN (('1413478740')) AND ((0.8260239354100265))) COLLATE NOCASE) GROUP BY ((((rt0.c4)OR(rt0.c1)))>>(rt0.c5)) HAVING rt0.c2; -- 1ms;
SELECT ALL ((((rt0.c1) IS TRUE))<<((((rt0.c4))<>((rt0.c3))))), ((((((((((rt0.c5)OR(rt0.c5)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)))+(((rt0.c4)&(rt0.c5)))), TOTAL((x'cbaa7461' IN ())) OVER () FROM rt0 WHERE (UPPER(((x'd6ef') IS TRUE))); -- 0ms;
SELECT CAST(x'' AS NUMERIC) FROM rt0; -- 0ms;
SELECT LEAD(((rt0.c3 COLLATE RTRIM)AND((rt0.c2 IN ()))), 1.285298613E9, (((rt0.c3, x'a598', 0.9489462416800462, rt0.c1, rt0.c0))<=((rt0.c2, rt0.c0, 0xffffffff8ded3222, rt0.c2, rt0.c0))) COLLATE RTRIM) OVER () FROM rt0; -- 0ms;
SELECT (- (((rt0.c3) IS TRUE))), ((((rt0.c5)OR(rt0.c2)))GLOB(rt0.c4)), '-1370344549', ((rt0.c1)GLOB(rt0.c0)) COLLATE BINARY, CASE WHEN rt0.c5 THEN (~ (NULL)) ELSE rt0.c4 COLLATE BINARY END FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS FALSE)) ISNULL), CAST(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)) AS BLOB), AVG(CASE rt0.c5  WHEN '1013445163' THEN rt0.c4 WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c3 END) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT -740227492 FROM rt0 WHERE ((((((('733852619') ISNULL))OR(0.3135136565426305)))OR(((((x'')AND('-284984261')))OR('428871021'))))) GROUP BY ((x'') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c3)/(rt0.c4)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c5)) THEN ((rt0.c5)>=(rt0.c5)) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN NULL WHEN ((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c4)) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c3 AS NUMERIC) END FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c3)==(rt0.c2))))=((0.17789354278184022))) FROM rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE), (((rt0.c4)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((UPPER(rt0.c3)))), CAST(rt0.c2 AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3)+(rt0.c3)) COLLATE NOCASE FROM rt0 GROUP BY (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY HAVING (((rt0.c4, rt0.c0, 0X3778dd71)) BETWEEN ((TOTAL(rt0.c2), TRIM(DISTINCT rt0.c0, rt0.c0), AVG(rt0.c5))) AND ((SUM(rt0.c0), ((rt0.c1)<<(rt0.c0)), MAX(rt0.c5)))) ORDER BY ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c5)))AND(((rt0.c0) ISNULL))))AND((NOT (rt0.c2))))  NULLS LAST; -- 1ms;
SELECT DISTINCT ((-6.35162759E8) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)+(x'a03a')) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2, rt0.c3, rt0.c0, rt0.c3, rt0.c1))<=((rt0.c5, rt0.c1, rt0.c2, rt0.c4, rt0.c3))) IN ()) FROM rt0 WHERE ((((((('M2')/('')))AND(CASE NULL  WHEN x'' THEN x'' WHEN NULL THEN '-1830197236' WHEN '5B' THEN NULL WHEN NULL THEN NULL WHEN 'iq6{E>' THEN 0.37609019751477046 ELSE -7.90728976E8 END)))OR(x''))); -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c3 IN (rt0.c0)) THEN (+ (rt0.c4)) WHEN (((rt0.c0))>=((rt0.c4))) THEN ((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)) WHEN ((rt0.c5)-(rt0.c5)) THEN rt0.c1 END FROM rt0 WHERE (CASE JULIANDAY('C6乊', NULL, 0.3392648196278145)  WHEN ((((x'f06d')OR(x'')))OR('9Y')) THEN (NULL IN ()) WHEN (+ (0.4640255881386307)) THEN x'ca64' WHEN (('1073084299')%(x'')) THEN ((NULL)+('-515607942')) ELSE ((NULL) ISNULL) END) ORDER BY ((((TRIM(rt0.c3))AND(x'81a719e8' COLLATE NOCASE)))OR(((0X5f346a85) IS TRUE))), json_array(((rt0.c2) NOTNULL), CASE WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c1 END) ASC, LIKELIHOOD(DISTINCT CAST('ON_C' AS INTEGER), 0.42108095446511107); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOT BETWEEN (((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c1))) AND (CAST(x'' AS TEXT))) FROM rt0 WHERE (((((('1011034084'))==(('i'))))<=((((((((('-1139588431')AND('Xjq>')))AND(0x5520551e)))OR('0#')))AND(0X2ead27d7))))) ORDER BY CASE (('!\') IS FALSE)  WHEN NULLIF(rt0.c5, rt0.c5) THEN ((rt0.c1)<<(rt0.c2)) END  NULLS FIRST, ((((((rt0.c1) NOT BETWEEN (x'f4347f8c') AND (rt0.c2)))OR(CAST(rt0.c5 AS BLOB))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (~ (((((rt0.c1)OR(rt0.c3)))OR('1167022523')))) FROM rt0 ORDER BY CAST(CASE rt0.c5  WHEN rt0.c5 THEN x'' END AS NUMERIC)  NULLS LAST; -- 0ms;
SELECT ALL SUM(((rt0.c0) NOT NULL)) OVER (), ((((NULL)OR((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR(((((NULL)AND(rt0.c2)))OR(NULL)))), PRINTF((((rt0.c1))>((rt0.c0)))) FROM rt0 WHERE (((((x'0b01') BETWEEN (NULL) AND (x'b25c'))) NOT BETWEEN ((+ ('50338618'))) AND ((('h')&(NULL))))); -- 0ms;
SELECT DISTINCT (- (rt0.c1)) FROM rt0 WHERE (((((((((0.35057733348883)AND(CASE WHEN 0.39887415637098134 THEN NULL END)))AND(LIKELIHOOD(DISTINCT x'', 0.8891850792017787))))AND(COALESCE(DISTINCT NULL, x'ddee', NULL, 0.45626156131186046))))OR(CAST('-790728976' AS TEXT)))) ORDER BY (((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c5))) COLLATE RTRIM COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((CASE WHEN rt0.c4 THEN rt0.c5 END)<(((rt0.c5)>=(rt0.c3)))), json_quote(rt0.c5) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE) BETWEEN (TRIM(DISTINCT rt0.c0)) AND (rt0.c0 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(CAST(x'' AS NUMERIC)), rt0.c1, SUM((rt0.c4 IN ())) OVER () FROM rt0 WHERE ((((NULL)) NOT BETWEEN (((('652666859')>(x'')))) AND ((((((NULL)AND(0.9309143811950441)))OR('9223372036854775807')))))); -- 1ms;
SELECT DISTINCT CASE ((rt0.c4)<(rt0.c4))  WHEN rt0.c5 THEN (rt0.c5 IN ()) END FROM rt0 WHERE (CAST(CASE WHEN x'9aa3' THEN 'I ' END AS TEXT)); -- 0ms;
SELECT ROW_NUMBER() OVER ( ROWS  UNBOUNDED PRECEDING) FROM rt0; -- 0ms;
SELECT ALL '-1013252084', ((((rt0.c5 IN ())))<>((((rt0.c5)AND(rt0.c3))))), SUM(((rt0.c2) IS TRUE)) FROM rt0; -- 0ms;
SELECT ('CUPEV!' COLLATE NOCASE IN ()) FROM rt0 WHERE ((((((x'')) BETWEEN (('0.10710154391670679')) AND (('5q?5s'))))=(CASE WHEN '686402851' THEN x'747f' END))) ORDER BY (((NOT (rt0.c2)))||(NULL)), ((CAST(rt0.c5 AS TEXT)) NOTNULL); -- 1ms;
SELECT (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))IS NOT(((((rt0.c2)OR(rt0.c0)))OR(rt0.c4)))), MAX(((((rt0.c4)AND(rt0.c3)))AND(rt0.c3))) COLLATE NOCASE, FIRST_VALUE(NULL) OVER () FROM rt0; -- 0ms;
SELECT ALL ((((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c5)))AND(rt0.c3)))AND(rt0.c5)))AND(rt0.c0)))OR(rt0.c5))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT ((~ (rt0.c3)))) FROM rt0; -- 0ms;
SELECT ((MIN(rt0.c0))-(CAST(rt0.c1 AS INTEGER))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c0 AS NUMERIC))OR((rt0.c2 IN ()))))AND((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))), (- (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)), ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c2) AND (MAX('-1871556643', rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1)>=(rt0.c5)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1)|(rt0.c4)) COLLATE RTRIM, (rt0.c4 IN (rt0.c3, rt0.c3)) COLLATE NOCASE COLLATE RTRIM, ((-837564136)-(x'')) FROM rt0 WHERE ((- ((((1.647153345E9, NULL, 0.404290435642762)) NOT BETWEEN (('1840719604', 2.63011433E8, 0x5096ffd)) AND ((x'', x'6407', 'k')))))); -- 1ms;
SELECT DISTINCT TOTAL(((((rt0.c3)AND(rt0.c4)))AND(rt0.c4))) OVER () FROM rt0 WHERE ((0.6061626661061638 COLLATE RTRIM IN ())); -- 0ms;
SELECT ((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)) COLLATE NOCASE FROM rt0 WHERE (DATETIME((x'3ba9' IN ()), '5ZA㎛쵚+〉B~' COLLATE RTRIM, ((1.880530667E9)<=(0.4249990846029196)), (('') NOT NULL), -1652309723 COLLATE NOCASE)); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c1) IS TRUE) THEN LIKELY(rt0.c4) WHEN AVG(rt0.c5) THEN ((((rt0.c1)AND(NULL)))OR(rt0.c1)) WHEN COALESCE(rt0.c2, rt0.c4, rt0.c2, rt0.c4) THEN ((rt0.c3)>=(rt0.c2)) ELSE ((((((((0.5470340884720233)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)) END FROM rt0 GROUP BY UNICODE(CAST(rt0.c1 AS REAL)), ((rt0.c1 COLLATE NOCASE) IS TRUE), ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))>>(((((rt0.c0)AND(rt0.c5)))OR(rt0.c3)))); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT (((((- (rt0.c3)))AND(((-1.65937385E9)GLOB(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c5)))) FROM rt0 WHERE ((((0xffffffffe6cff7e1 IN ())) ISNULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND (((rt0.c4 IN (rt0.c0, rt0.c3)))))  NULLS LAST, 0.2595158885911575 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(AVG(rt0.c5) AS NUMERIC), ((((((((MIN(rt0.c2))OR((((rt0.c5, rt0.c3, rt0.c3, rt0.c4, rt0.c1))<((rt0.c5, rt0.c0, rt0.c1, rt0.c3, rt0.c1))))))OR((+ (rt0.c2)))))OR((((rt0.c5))>((rt0.c0))))))AND(((rt0.c0)>(rt0.c0)))), ((((((rt0.c2)AND(0.49757417664325865)))AND(rt0.c5))) NOT BETWEEN (MIN(rt0.c5)) AND (rt0.c4)) FROM rt0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (((NULL)AND(x''))) AND ((((NULL, 'x+', 0.8421156659379763)) NOT BETWEEN ((x'', NULL, NULL)) AND ((x'', '809355586', '')))))) GROUP BY (((((((rt0.c0))==((rt0.c4))))AND((((rt0.c1, rt0.c4, rt0.c5)) NOT BETWEEN ((x'', rt0.c2, rt0.c3)) AND ((rt0.c4, rt0.c0, rt0.c5))))))AND(rtreenode(rt0.c2, rt0.c1))), ((rt0.c0)<<(((((rt0.c4)AND(rt0.c4)))AND(rt0.c5)))), LOWER(DISTINCT ((((((((rt0.c1)AND(rt0.c4)))AND('1177620120')))OR(rt0.c5)))OR(rt0.c3))); -- 0ms;
SELECT ((((((rt0.c0))<=((rt0.c2))), ((rt0.c0)LIKE(rt0.c1)), CAST(rt0.c0 AS NUMERIC)))<(((('-1470871026')LIKE(rt0.c4)), rt0.c5 COLLATE BINARY, (((rt0.c2, rt0.c5, rt0.c1)) BETWEEN ((rt0.c4, rt0.c4, '~)')) AND ((rt0.c0, rt0.c3, rt0.c0)))))) FROM rt0 WHERE (((CAST('vlr\}&' AS BLOB)) NOT NULL)); -- 1ms;
SELECT DISTINCT (~ (((((rt0.c5)OR(rt0.c2)))OR(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE (CASE '1073570784' COLLATE BINARY  WHEN ((1428338568) BETWEEN (x'') AND (NULL)) THEN CASE WHEN '0.45150057222767015' THEN 'CuMl' ELSE 0xffffffffd69d4b87 END ELSE CASE WHEN 0xffffffff86cee5e9 THEN NULL ELSE x'' END END) LIMIT -1291408080; -- 0ms;
SELECT json_remove((((rt0.c2, rt0.c4, NULL)) BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((rt0.c5, rt0.c1, rt0.c0))), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c5))) FROM rt0 WHERE (CASE NULL  WHEN ((NULL) BETWEEN (-1.75350374E9) AND (x'')) THEN (((-929858595))==((x''))) WHEN 0.4929870266746439 THEN (((8.20656689E8)) BETWEEN ((0.05154775004250478)) AND (('Ds.'))) WHEN ((0.05287148322808466) BETWEEN (x'') AND ('^Q*w')) THEN CASE 'dM'  WHEN 0.07684216792694643 THEN NULL WHEN '' THEN NULL WHEN NULL THEN 0Xffffffffada599b1 WHEN '1157955808' THEN NULL WHEN '8v' THEN 0.694499237688939 ELSE '1619693470' END ELSE ((NULL) IS TRUE) END); -- 0ms;
SELECT DISTINCT LIKELY(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c5 END) FROM rt0; -- 1ms;
SELECT ALL CAST((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((x'') NOT NULL)) NOT BETWEEN ('W' COLLATE BINARY) AND (CAST('' AS NUMERIC)))); -- 0ms;
SELECT NULLIF(rt0.c3 COLLATE BINARY, ((0.3364054904817847) NOT BETWEEN (rt0.c3) AND (rt0.c5))), rt0.c4, rt0.c0 FROM rt0 WHERE (json_array_length((('h-') NOT BETWEEN ('') AND (NULL)), CAST('-1996883225' AS INTEGER))) GROUP BY rt0.c1, ((rt0.c1) NOT NULL), (((NOT (rt0.c1)))IS(CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c5 END)), CASE (rt0.c2 IN (rt0.c3))  WHEN (- (rt0.c2)) THEN ((rt0.c4) IS FALSE) END, (((NOT (rt0.c5))) ISNULL) HAVING ((((((((((((rt0.c0 COLLATE NOCASE)OR(x'')))AND(rt0.c3)))AND(((rt0.c5)&(rt0.c2)))))AND(MAX(rt0.c4))))AND((((('.x')AND(rt0.c2)))OR(rt0.c5)))))OR(CAST(rt0.c5 AS NUMERIC))); -- 0ms;
SELECT DISTINCT (((- (rt0.c5)))||(((((rt0.c5)OR(rt0.c2)))AND(rt0.c3)))), GROUP_CONCAT(CAST(rt0.c2 AS REAL)) OVER (), AVG(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4))) FROM rt0 WHERE (TYPEOF(DISTINCT ((x'') BETWEEN (0.9916170276285573) AND (x'')))) ORDER BY (+ (((NULL)%(rt0.c1)))) ASC LIMIT 1972708928 OFFSET 135799818; -- 0ms;
SELECT '-568406905', (((AVG(rt0.c1)))<=((rt0.c1))), (CASE WHEN rt0.c5 THEN rt0.c1 ELSE '~u+' END IN ()) FROM rt0 ORDER BY rt0.c3 ASC  NULLS LAST; -- 0ms;
SELECT ((0X6dcc5e80) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((MAX(rt0.c5))AND(COUNT(*))))OR((rt0.c5 IN ()))) FROM rt0 WHERE (CASE (- (-166973054))  WHEN (((x'')) BETWEEN (('-752177257')) AND (('-466698466'))) THEN '' COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE BINARY) NOT NULL) FROM rt0 ORDER BY 1.307221109E9 DESC; -- 0ms;
SELECT DISTINCT UNICODE((((NULL, rt0.c2, rt0.c2))=((rt0.c5, NULL, rt0.c5)))) FROM rt0; -- 0ms;
SELECT DATE((- (rt0.c5)), (- (rt0.c0)), (NOT (rt0.c4))), ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c2 END) NOTNULL), ((rt0.c4)-(rt0.c5)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT (~ (COUNT(rt0.c4))), (+ ((((rt0.c1))<>((rt0.c1))))), ((((rt0.c2)<(rt0.c2))) IS FALSE) FROM rt0; -- 1ms;
SELECT ALL ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()) FROM rt0; -- 0ms;
SELECT ALL SUM(rt0.c0) OVER () FROM rt0 WHERE (CASE WHEN 0.16224848113789647 THEN 0.5558398770610516 WHEN CAST(x'' AS NUMERIC) THEN ((0.543305093989534)>=('-1387386414')) WHEN (('ZP(hw\r|ꏩ')GLOB(NULL)) THEN (((x'')) NOT BETWEEN ((x'')) AND ((0xffffffff98550905))) END) LIMIT 2044600642 OFFSET 1494587214; -- 0ms;
SELECT ALL (((rt0.c5) NOT NULL) IN ()) FROM rt0 WHERE ((~ (((((NULL)AND(NULL)))OR(0.45487283203909723))))); -- 0ms;
SELECT ((((rt0.c5)|(rt0.c3))) IS TRUE) FROM rt0 GROUP BY (- (rt0.c4)) COLLATE BINARY, rt0.c1, (((rt0.c1)GLOB(x'bee9')) IN (TYPEOF('1562009926'), (~ (rt0.c4)))) HAVING (~ ((rt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN ((x'')AND(rt0.c5)) ELSE 'u蘇%e' END, FIRST_VALUE(((rt0.c0 COLLATE BINARY)<=(HEX(rt0.c3)))) OVER (), CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)) AS BLOB) FROM rt0 WHERE (((((NULL) NOT BETWEEN (x'b7d7') AND (''))) IS TRUE)); -- 0ms;
SELECT (- (rt0.c3)) COLLATE RTRIM, (((((0.4594252832177518) BETWEEN (rt0.c3) AND (rt0.c2))))>((rt0.c0 COLLATE NOCASE))), 0.24803896179666007, ((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c3)))OR(((rt0.c0)IS(rt0.c1)))))OR(rt0.c2)), (+ (((((rt0.c5)OR(rt0.c3)))OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), MIN(MIN(CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END)), ((((((rt0.c3)>(rt0.c3)))AND((((rt0.c5))>=((rt0.c1))))))OR(((rt0.c2) IS FALSE))) FROM rt0;SELECT ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE BINARY, (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c4))))=((rt0.c2 COLLATE NOCASE))), DENSE_RANK() OVER ( ORDER BY ((load_extension(rt0.c0, rt0.c3))OR(NULLIF('-833398078', rt0.c2))) DESC  NULLS LAST) FROM rt0 LIMIT -912639642 OFFSET 803733571;SELECT DISTINCT (((rt0.c0 IN ()))>=(0Xffffffffda6667fa)) FROM rt0 WHERE (CASE WHEN CASE WHEN '-392815642' THEN 0.5042613093144392 WHEN 0.5465830535515108 THEN NULL WHEN 0.4654807927445973 THEN '' ELSE 0xffffffff8842b6ac END THEN CASE '-1659373850'  WHEN 'zJ' THEN 0x33ea1d16 ELSE NULL END ELSE LOWER(x'ddbb') END); -- 1ms;
SELECT ALL NULL FROM rt0 WHERE (((TOTAL_CHANGES()) BETWEEN (json(NULL)) AND (0.18969904893554834 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c5)IS(rt0.c5))) OVER (), -1726758746, ((((rt0.c5) ISNULL))GLOB(((rt0.c0)OR(rt0.c1)))), (((AVG(rt0.c2)))>=((rt0.c3))), LIKELIHOOD(CAST(rt0.c3 AS INTEGER), 0.17976140313958278) FROM rt0 WHERE (((-1.291972685E9)==(('1236474614' IN ())))) ORDER BY (((rt0.c1 IN ())) IS TRUE) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN (rt0.c1)) AS NUMERIC), CASE rt0.c5 COLLATE RTRIM  WHEN (~ (rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c5 END END, rt0.c2 FROM rt0 WHERE (CASE (((x'', 'O)!O㴜ᾨi]A', '7', 0.5337544968495979, '?{k'))!=(('1036966287', NULL, 0.013955078435384793, '-960978845', NULL)))  WHEN SQLITE_COMPILEOPTION_GET(0xffffffff877dea20) THEN ('騾+ok' IN ()) WHEN ('-505086889' IN (x'')) THEN CAST(0.3306629775501999 AS BLOB) WHEN ((0.7213110863817324) BETWEEN (0.9563553758724326) AND (x'')) THEN (((('')OR(NULL)))OR(x'')) ELSE ((2000559041) BETWEEN (NULL) AND ('1753260297')) END); -- 1ms;
SELECT ALL IFNULL(DISTINCT rt0.c3, rt0.c2) COLLATE BINARY FROM rt0 WHERE (((((CASE x''  WHEN 0Xffffffff9d83c125 THEN 0.2328041971851582 END)OR(x'' COLLATE BINARY)))AND(0.8239206080102344))); -- 0ms;
SELECT DISTINCT rt0.c3, x'', ((NULL)||(rt0.c1)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL (((MIN(rt0.c0)))>=((((rt0.c2)&(rt0.c5))))) FROM rt0 WHERE (((CASE NULL  WHEN x'83db' THEN '-1619903469' ELSE '1597270661' END) ISNULL)) UNION ALL SELECT ALL ((COUNT(0Xffffffffefd67084)) NOT NULL) FROM rt0 LIMIT -1062836259; -- 0ms;
SELECT DISTINCT (- (GROUP_CONCAT(rt0.c5))) FROM rt0; -- 0ms;
SELECT DISTINCT ((json_object(rt0.c2, rt0.c0)) NOT NULL) FROM rt0;SELECT DISTINCT ((rt0.c1) NOTNULL) FROM rt0 WHERE ((~ (CAST(x'' AS REAL)))); -- 0ms;
SELECT LEAD(CASE CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c5 END  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) THEN (- (rt0.c5)) END, SQLITE_COMPILEOPTION_USED((rt0.c5 IN (rt0.c2))), ((NULL) BETWEEN (LIKELY(rt0.c0)) AND (rt0.c3))) OVER ( ORDER BY (+ (((rt0.c0) NOTNULL)))  NULLS FIRST) FROM rt0 WHERE ((((LIKE('#,', 264392266), 1242918903, ((NULL)>=('0.6097963591728989'))))<>((CASE WHEN x'' THEN x'' ELSE '' END, CASE WHEN x'' THEN 0.08446641559036017 ELSE '0.3135136565426305' END, (('428871021')&('-1659373850')))))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c0 COLLATE RTRIM)), ((((rt0.c0)||(rt0.c5))) NOT BETWEEN ((rt0.c0 IN (rt0.c4))) AND ((((rt0.c1, rt0.c5, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c4, rt0.c1))))), SUM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt0; -- 0ms;
SELECT DISTINCT (((('')AND(((rt0.c3) NOTNULL))))AND(rt0.c2 COLLATE BINARY)), CASE WHEN ((rt0.c5)+(rt0.c4)) THEN (- (rt0.c4)) WHEN ((rt0.c4)LIKE(rt0.c2)) THEN ((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)) WHEN ((rt0.c3)>(rt0.c1)) THEN 'a饡' END, ((((x'' IN ())))<=((((rt0.c4) NOT NULL)))) FROM rt0 WHERE ((- (CAST('-1830370985' AS NUMERIC)))); -- 1ms;
SELECT ((((rt0.c3)OR(((rt0.c1)LIKE(rt0.c1)))))AND(((rt0.c5)&(0Xffffffff81743dad)))) FROM rt0 WHERE (CASE WHEN (('-1830197236') BETWEEN (NULL) AND ('')) THEN CAST(NULL AS REAL) WHEN ((('	yJ>wJI ', x'', NULL))<((x'', '-1830197236', '-1280071523'))) THEN ((NULL)IS('')) WHEN ((NULL)<>(x'')) THEN CAST(0.9350028128550764 AS REAL) END) ORDER BY CAST((0.03983954471897311 IN ()) AS BLOB) DESC  NULLS LAST, (- (((rt0.c3)-(rt0.c4))))  NULLS FIRST; -- 0ms;
SELECT CASE WHEN ((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)) THEN (((rt0.c4, rt0.c2, rt0.c5))<>((rt0.c3, rt0.c1, rt0.c0))) ELSE rt0.c0 COLLATE RTRIM END, ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c5)) COLLATE BINARY, ((rt0.c5)>(((rt0.c0)||(rt0.c5)))) FROM rt0 WHERE (('rx' COLLATE NOCASE IN (((((x'')AND(0.6147760976866455)))OR(0Xffffffffe4a7b723)), ((((0.17794832006094907)AND(x'263e')))OR(x'3480'))))); -- 0ms;
SELECT COUNT(0.8224909656882615), TOTAL(((rt0.c2)AND(rt0.c2))), ((0.5248098580515435) BETWEEN (rt0.c3 COLLATE BINARY) AND (x'')) FROM rt0 WHERE ((- (1429360538)) COLLATE BINARY); -- 0ms;
SELECT CASE WHEN ((((rt0.c4)AND(rt0.c5)))OR(0.29757775277445786)) THEN rt0.c5 WHEN CASE WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN 0.3329596217043679 WHEN rt0.c1 THEN rt0.c2 END THEN ((rt0.c1)OR(rt0.c3)) WHEN AVG(NULL) THEN ((rt0.c4)<>(rt0.c4)) ELSE (rt0.c3 IN (rt0.c4)) END FROM rt0 WHERE (UPPER(DISTINCT ('-666570760' IN (0.1029998892497146, '')))) GROUP BY (((rt0.c0)LIKE(rt0.c4)) IN ()), CAST(((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)) AS BLOB), CAST(((rt0.c5)OR(NULL)) AS REAL); -- 0ms;
SELECT DISTINCT CASE WHEN '_\S(dr5u' THEN ((rt0.c3)>=(rt0.c1)) ELSE LIKELY(DISTINCT rt0.c3) END, rt0.c0, rt0.c4 FROM rt0; -- 0ms;
SELECT ALL (((- (rt0.c3)))>>(SQLITE_COMPILEOPTION_GET(x''))), TOTAL((((rt0.c1, rt0.c0, rt0.c2))<=((rt0.c4, rt0.c3, x'fb52')))), CAST((~ (rt0.c0)) AS TEXT) FROM rt0 WHERE ((((('vlR\}&')OR(NULL))) BETWEEN (CAST('-666570760' AS NUMERIC)) AND (CASE '-896051052'  WHEN '-896051052' THEN x'' END))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0; -- 0ms;
SELECT ALL (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END))>((((rt0.c4)IS NOT(rt0.c2))))), (('1880530667')/(0.2851029297167391)), COUNT(*) OVER (), CAST(((rt0.c4) NOTNULL) AS NUMERIC), NULLIF(0.0, (NOT (rt0.c0))) FROM rt0 WHERE (HEX((('햕x')||(x'')))); -- 0ms;
SELECT ALL IFNULL(DISTINCT (rt0.c2 IN (rt0.c1)), '5Cb'), CASE ROUND(rt0.c3, rt0.c1)  WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c5)) END, COUNT(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END), ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END)<=((NULL IN ()))), ((((rt0.c4)*(rt0.c0))) NOTNULL) FROM rt0 ORDER BY ((CAST(rt0.c0 AS REAL))IS NOT(((rt0.c3)=(rt0.c3)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(((rt0.c3)<<(rt0.c3))), ((((rt0.c2 COLLATE BINARY)OR(((rt0.c4)>(x'')))))OR(rt0.c0 COLLATE NOCASE)), (((rt0.c5) NOT BETWEEN (rt0.c0) AND (x'')) IN (MIN(rt0.c5))) FROM rt0 WHERE (((CASE WHEN x'' THEN '0.5349630366790994' ELSE NULL END) BETWEEN ((((0.9252686152618331, NULL, 0.9937825521936986))<=(('', 1.561141756E9, x'501a')))) AND ((((0.769032186489808)) NOT BETWEEN ((NULL)) AND ((0.759780625633499)))))) GROUP BY CASE WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END THEN (~ (rt0.c5)) WHEN ((rt0.c4)<>(rt0.c5)) THEN (rt0.c0 IN ()) WHEN HEX(rt0.c5) THEN ((rt0.c5) ISNULL) ELSE CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 END END; -- 0ms;
SELECT ALL LIKE(rt0.c5, rt0.c3, '0') COLLATE RTRIM, rt0.c0, TOTAL(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END) OVER () FROM rt0 WHERE (IFNULL(x'', 0.5179501978016795) COLLATE RTRIM); -- 0ms;
SELECT ALL COUNT(((rt0.c1)%(rt0.c1))), COUNT(((NULL)==(rt0.c4)) COLLATE NOCASE) OVER (), CASE ((rt0.c1) IS TRUE)  WHEN '-1652309723' THEN GROUP_CONCAT(rt0.c4) WHEN ((rt0.c3) BETWEEN (x'ecc1') AND (rt0.c3)) THEN MAX(rt0.c4) WHEN COUNT(*) THEN 'N' END FROM rt0 WHERE (((NULL COLLATE BINARY)<<(((0.6404304595393616) NOTNULL)))); -- 1ms;
SELECT ((NOT (rt0.c5)) IN ()), (((rt0.c3)) BETWEEN (((rt0.c3 IN ()))) AND (((((rt0.c4, rt0.c5, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((rt0.c1, 0.7664617652364332, rt0.c4)))))), TOTAL(rt0.c5) OVER (), ((((((((rt0.c3)OR(CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c0 END)))OR((((rt0.c0))!=((rt0.c5))))))OR((rt0.c1 IN ()))))AND(((rt0.c4)=(rt0.c2)))), GROUP_CONCAT(((((rt0.c3)AND(rt0.c5)))OR(rt0.c0))) OVER () FROM rt0 WHERE ((((('i.vDN)t~숔') IS FALSE)) IS TRUE)) GROUP BY (~ (LIKELIHOOD(DISTINCT rt0.c0, 0.12133257854336832))), (((((((((rt0.c1)OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)) IN ()), (+ ((rt0.c1 IN ()))), rt0.c4, CASE (((rt0.c4))<((rt0.c3)))  WHEN ABS(DISTINCT rt0.c2) THEN ROUND(rt0.c0, rt0.c4) WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN UPPER(rt0.c2) WHEN rt0.c4 THEN ((rt0.c4) BETWEEN (-330729015) AND (rt0.c3)) WHEN rt0.c1 COLLATE RTRIM THEN rt0.c4 WHEN (((rt0.c1))=((rt0.c4))) THEN CAST(rt0.c5 AS BLOB) ELSE LOWER(rt0.c1) END HAVING (~ ((rt0.c2 IN ()))); -- 0ms;
SELECT DISTINCT LEAD(CASE WHEN ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c3)) THEN ((rt0.c3)IS NOT(rt0.c3)) WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN (((rt0.c2, rt0.c2, 0.1737238362763336)) BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c4, rt0.c2))) THEN CAST(rt0.c0 AS BLOB) END, ((((((((((rt0.c2)AND(NULL)))AND(rt0.c2)))OR(rt0.c5)))OR(rt0.c3))) BETWEEN (HEX(rt0.c1)) AND (CAST(rt0.c2 AS BLOB))), ((((((((((rt0.c1)OR(rt0.c5)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c0)))IS(CASE NULL  WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 ELSE rt0.c2 END))) OVER () FROM rt0; -- 0ms;
SELECT AVG((((rt0.c3, rt0.c2, -1.470871026E9))>((rt0.c3, rt0.c3, rt0.c3)))), GROUP_CONCAT(((((rt0.c1)OR(rt0.c2)))AND(0.2759522046035423))), rt0.c1 FROM rt0 WHERE ((((CAST(x'ddee' AS INTEGER)))<=(((((x'', NULL, 2054418412)) BETWEEN ((0.08622895705174682, '{', x'')) AND ((x'687d', NULL, '-2069827915'))))))) ORDER BY rt0.c4; -- 0ms;
SELECT NULL FROM rt0 WHERE (('' IN ())); -- 0ms;
SELECT ALL CASE WHEN (- (rt0.c2)) THEN ((rt0.c4)IS(rt0.c2)) WHEN GROUP_CONCAT(x'') THEN ((rt0.c2) IS TRUE) WHEN rt0.c5 COLLATE RTRIM THEN TYPEOF(DISTINCT rt0.c2) ELSE ((x'')||(rt0.c5)) END FROM rt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY ((rt0.c1 COLLATE NOCASE)LIKE(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) DESC) FROM rt0 ORDER BY ((HEX(DISTINCT rt0.c5))!=(COALESCE(DISTINCT rt0.c1, x'f0d0', rt0.c3, rt0.c4))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT UNICODE(CAST(NULL AS TEXT)) FROM rt0 ORDER BY CAST(((rt0.c0)GLOB(rt0.c4)) AS NUMERIC) DESC, (((((('')OR(rt0.c4)))AND(rt0.c4)))|(rt0.c1 COLLATE NOCASE))  NULLS LAST; -- 0ms;
SELECT CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((rt0.c1)>(rt0.c2)) THEN ((((rt0.c5)AND(rt0.c5)))AND(rt0.c4)) WHEN ((((rt0.c5)OR(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c2)>(rt0.c3)) THEN NULL END FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c3)LIKE(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT '' FROM rt0; -- 0ms;
SELECT ((MAX(rt0.c2))&('硑,')) FROM rt0 WHERE ((JULIANDAY(NULL, '618188912', 0x9390581) IN ())); -- 1ms;
SELECT DISTINCT CAST(((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT LAG(((((rt0.c2) IS FALSE))!=(CAST(rt0.c5 AS TEXT))), rt0.c1, LIKELY(((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))) OVER () FROM rt0 WHERE (((0.39564412823330564 IN ()) IN ())) ORDER BY (((rt0.c0, rt0.c5, rt0.c3)) NOT BETWEEN (((rt0.c5 IN ()), ((((rt0.c4)OR(rt0.c5)))OR(rt0.c2)), LOWER(DISTINCT rt0.c2))) AND ((((rt0.c5) NOTNULL), rt0.c2, '-896051052')))  NULLS FIRST; -- 0ms;
SELECT ((((((((rt0.c3)AND((+ (rt0.c5)))))OR(((rt0.c2) ISNULL))))OR((NOT (rt0.c5)))))AND(LENGTH(rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))+((~ (rt0.c5)))), AVG(rt0.c1), ((COUNT(rt0.c5))<<(((rt0.c2)>=(rt0.c5)))) FROM rt0 WHERE ((((((x'f5bb', 0.9225426835917936, '1217127213'))<(('442120698', 0X79a07fe6, ''))))|(((((((((NULL)AND(NULL)))OR(0xffffffff9865c163)))AND(NULL)))OR(x''))))); -- 0ms;
SELECT ALL (((((rt0.c5))>((rt0.c4))))-(((((((((((((rt0.c1)OR(rt0.c2)))AND(1234915543)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c5)))AND(rt0.c0)))) FROM rt0 WHERE (0.8627085697164177) ORDER BY ((rt0.c4)IS NOT(rt0.c3)) DESC  NULLS LAST LIMIT -1402082507; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1)%(rt0.c4))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT SUM(CAST(rt0.c5 AS TEXT)), (NOT (((rt0.c1)<(rt0.c4)))), ((((CAST(rt0.c4 AS TEXT))OR(AVG(rt0.c2))))AND(NULL)) FROM rt0 ORDER BY (('-947669711')-(((rt0.c1)>>(rt0.c5)))) DESC  NULLS FIRST LIMIT -500190257; -- 0ms;
SELECT UPPER(DISTINCT (+ (rt0.c5))) FROM rt0; -- 0ms;
SELECT DISTINCT (((- (rt0.c1)))%(SQLITE_SOURCE_ID())) FROM rt0 WHERE ((- (((NULL) IS TRUE)))) LIMIT 2051064017 OFFSET -524571604; -- 0ms;
SELECT DISTINCT ((((LIKELIHOOD(rt0.c2, 0.25784410711216676))OR(((rt0.c4)/(rt0.c2)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))=((NOT (rt0.c2)))) ASC; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c5 AS INTEGER))||((~ (NULL)))) FROM rt0 WHERE (((((~ (NULL))))!=((((x'b675')IS(NULL)))))); -- 0ms;
SELECT DISTINCT json_array_length(((rt0.c2)<=(NULL))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((0.6865756314634743)GLOB(rt0.c2)))), ((LOWER(DISTINCT rt0.c5)) IS FALSE), CASE (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))  WHEN (- (rt0.c0)) THEN (NOT (rt0.c3)) END FROM rt0 WHERE ((- (UPPER('')))); -- 0ms;
SELECT DISTINCT (+ (rt0.c0)) COLLATE BINARY FROM rt0 WHERE (CASE ((((NULL)AND(0.9508725229576787)))OR(x'8820'))  WHEN (('0#D)\rssA') BETWEEN (0.845268130860945) AND ('2116974190')) THEN CAST(-1212266043 AS TEXT) END); -- 0ms;
SELECT ALL rt0.c4 FROM rt0 WHERE (''); -- 0ms;
SELECT CASE WHEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) THEN CHANGES() WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c5)))AND(rt0.c4)) THEN MAX(rt0.c2) WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN ((((rt0.c4)OR(rt0.c5)))AND(0.19886426838137794)) ELSE ((x'') BETWEEN (rt0.c5) AND (rt0.c2)) END FROM rt0; -- 0ms;
SELECT SUM(CAST(rt0.c1 AS INTEGER)) OVER () FROM rt0 WHERE ((((('') NOT BETWEEN ('1073084299') AND (''))) NOT BETWEEN ((('-1300647919')=(x''))) AND (CASE '-1062836259'  WHEN 0.7268576830821454 THEN x'' WHEN -1.033877234E9 THEN x'de4a' WHEN 'ac䧝a⪫n5' THEN 0.8214618016331212 END))); -- 0ms;
SELECT DISTINCT RANK() OVER (), CASE WHEN rt0.c0 THEN rt0.c4 WHEN 0.4760741952942711 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c4 END COLLATE NOCASE, (((rt0.c2)AND(rt0.c5)) IN ()) FROM rt0 WHERE (((('809355586') BETWEEN (0.9113046098665407) AND (x'')) IN ())); -- 0ms;
SELECT DISTINCT ((((((((CAST(rt0.c2 AS REAL))OR((((rt0.c3))<((rt0.c3))))))AND(rt0.c0)))AND(AVG(rt0.c1))))AND(rt0.c5)), ((TOTAL(rt0.c0)) NOT BETWEEN (-8.33398078E8) AND (((rt0.c3)>>(rt0.c3)))), (rt0.c2 IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 END)) FROM rt0 WHERE ((NOT (NULL))); -- 0ms;
SELECT NTILE(CAST((((rt0.c3))<=((rt0.c4))) AS NUMERIC)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (('-322320241')&(MAX(rt0.c4))) FROM rt0 WHERE ((CAST(0.9286346387623806 AS REAL) IN ())); -- 0ms;
SELECT DISTINCT (NOT (TOTAL(x'9588'))) FROM rt0 WHERE (((((363231300)<=(0xffffffff9801e57d))) NOT BETWEEN (CAST(-1612608453 AS BLOB)) AND (((0xffffffffe6237004) BETWEEN ('') AND (0.6451752977101979))))) ORDER BY ((((LIKELY(DISTINCT rt0.c0))OR((+ (rt0.c3)))))AND(rt0.c1))  NULLS FIRST LIMIT -1886270906 OFFSET -245669020; -- 0ms;
SELECT DISTINCT CAST(x'' AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT ((MIN(rt0.c4, rt0.c3))>>(((rt0.c5)IS(rt0.c1)))), ((((0.20907162656409417) BETWEEN (rt0.c2) AND (rt0.c1)))>=(((rt0.c1)+(rt0.c5)))), CAST((((rt0.c2, rt0.c0, x'')) NOT BETWEEN ((0.3738234864867872, rt0.c5, rt0.c5)) AND ((rt0.c2, rt0.c3, rt0.c1))) AS NUMERIC) FROM rt0 WHERE ((((((((((((x''))<(('\n6KU4>h1'))))AND(((((((((0.9563546823488905)OR(x'')))OR('-1807734235')))OR(x'')))OR(NULL)))))OR(TOTAL_CHANGES())))OR(0.338773547776996)))OR(((x'')OR(x'0fce'))))); -- 0ms;
SELECT ALL (~ ((- (rt0.c5)))) FROM rt0; -- 0ms;
SELECT (((+ (rt0.c5))) NOT BETWEEN (((rt0.c1)OR(rt0.c1))) AND (CAST(rt0.c3 AS NUMERIC))) FROM rt0 WHERE (((((0.1178211172324305)IS NOT(0.758394164564884)))>=((+ (0.5527825510431332))))) ORDER BY (((rt0.c1 IN (rt0.c1)))*(((rt0.c3)%(rt0.c5))))  NULLS LAST, ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.29789901516442263)))AND(rt0.c5 COLLATE BINARY)))AND(UPPER(rt0.c3))) ASC, CASE WHEN (((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))) THEN rt0.c5 COLLATE RTRIM ELSE rt0.c0 END DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT (((((x'')<>(rt0.c2)), (~ (rt0.c2)), ((rt0.c3) BETWEEN (rt0.c1) AND (x''))))==((LIKE(rt0.c5, rt0.c1), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), MAX(rt0.c5)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((x'1a01')AND(rt0.c1)) COLLATE NOCASE, (~ (MIN(rt0.c2))), (+ ('-1093914161')) FROM rt0 WHERE ((((NULL COLLATE BINARY))!=(((NOT ('u')))))) UNION ALL SELECT ROW_NUMBER() OVER (), (AVG(rt0.c0) IN (NULL)), MAX(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c5))) FROM rt0 WHERE (CAST('i.' AS BLOB)); -- 0ms;
SELECT DISTINCT ((((rt0.c5) NOT BETWEEN (rt0.c3) AND (NULL))) NOT NULL), rt0.c5, DATE(rt0.c5 COLLATE RTRIM, 0.702865472641858, ((((rt0.c0)OR(rt0.c4)))AND(rt0.c5)), COUNT(*), x'') FROM rt0; -- 0ms;
SELECT DISTINCT (((NULL)) BETWEEN ((((rt0.c5)&(rt0.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))))) FROM rt0 WHERE (CASE CAST(0.4242854025608418 AS INTEGER)  WHEN 0.5924402838926046 THEN ((x'') IS FALSE) WHEN '-218870832' COLLATE RTRIM THEN (('r嫈(7')GLOB(x'')) WHEN (((x'')) BETWEEN ((NULL)) AND ((x''))) THEN (('')<(' Dv|.')) END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), CAST((rt0.c2 IN ()) AS INTEGER), COUNT(*) OVER () FROM rt0 WHERE (x'' COLLATE BINARY COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE COLLATE NOCASE FROM rt0 WHERE (((~ (0.1500310447477209)) IN ())) ORDER BY ((((rt0.c5)LIKE(rt0.c4))) NOTNULL), (+ (CASE NULL  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) ASC  NULLS FIRST, ((NOT (rt0.c2)) IN ()); -- 0ms;
SELECT ALL ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))IS(CASE WHEN rt0.c1 THEN rt0.c5 WHEN 0.09894924496859836 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)), COUNT(*) OVER (), x'30f2' FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))OR((0X6c8db9a2 IN ()))))AND(rt0.c3)))AND('707789964')))OR((((rt0.c2, rt0.c4, rt0.c5)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c1, rt0.c4, 0.8227883075784017))))) ASC), 9.74514041E8, CASE rt0.c3  WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) END, (((('820656689')OR(((rt0.c4)GLOB(rt0.c0)))))OR(rt0.c4 COLLATE BINARY)), CASE TOTAL(rt0.c3)  WHEN CAST(rt0.c4 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((rt0.c0)||(rt0.c4)) THEN (rt0.c0 IN (rt0.c4)) WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)) ELSE (('澇QM8*')<=(0.973744241797074)) END FROM rt0; -- 0ms;
SELECT ALL '406130395' FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c5)))*(((rt0.c1) NOT NULL))) FROM rt0 LIMIT 264392266 OFFSET 7148636; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT)) NOT NULL), NULL, ((rt0.c5 COLLATE BINARY)&(((NULL)+(rt0.c5)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((x'')<(rt0.c1)), (+ (CAST(rt0.c0 AS INTEGER))), (~ (((rt0.c0)%(-1724822875)))) FROM rt0 WHERE (0.41597488316999) GROUP BY (rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE NOCASE, ((((((((((((rt0.c5)OR(rt0.c5)))OR(rt0.c5)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c5)))AND(rt0.c2)))OR(rt0.c5)))))OR((+ (rt0.c4)))))AND(rt0.c4)))AND(((0.609650982235343)AND(rt0.c2)))), 0.5867836269357932; -- 1ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c2))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c4 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS REAL) FROM rt0 WHERE (CASE WHEN CAST(x'' AS TEXT) THEN ((x'35a7') IS FALSE) WHEN TRIM('\robOXL앬Mw') THEN ((('5~'))>=((''))) WHEN ((NULL)%(0X54b10805)) THEN 0Xffffffffca975894 COLLATE BINARY ELSE x'' END); -- 0ms;
SELECT ((((rt0.c3)IS(rt0.c2)))*(((rt0.c1)LIKE(rt0.c5)))) FROM rt0; -- 0ms;
SELECT CAST(TOTAL(rt0.c4) AS TEXT) FROM rt0 WHERE (((((0.2637711934102307) ISNULL))&((('*\rO_Pe')LIKE(0X36c25a8a))))); -- 0ms;
SELECT ALL (LTRIM(rt0.c0) IN ()) FROM rt0 WHERE (((((x'ae9c')IS(NULL)))||(CAST('cnFdr' AS INTEGER)))); -- 0ms;
SELECT ALL ((highlight(rt0.c5, rt0.c4, rt0.c2, rt0.c5))-(((rt0.c5) ISNULL))) FROM rt0 WHERE (((((('1998211467', x'', 1.998211467E9)) NOT BETWEEN ((x'', NULL, x'')) AND ((NULL, 'dkQ{nkF''', x''))))|(CAST('↌e' AS BLOB)))) ORDER BY (((+ (rt0.c4))) NOT NULL) DESC, ((('0.12040497368502345')=(rt0.c5)) IN ()) DESC;SELECT DISTINCT CASE WHEN (((x'')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)) ELSE NULL END FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 COLLATE BINARY THEN ((x'')AND(rt0.c1)) WHEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)) THEN ((rt0.c2)*(NULL)) WHEN LOWER(DISTINCT rt0.c0) THEN ((rt0.c3)LIKE(rt0.c5)) WHEN ((rt0.c5) BETWEEN (rt0.c0) AND (rt0.c3)) THEN (+ (rt0.c5)) WHEN ((x'0199')>>(rt0.c2)) THEN rt0.c5 COLLATE BINARY END FROM rt0 WHERE ((+ (CASE 0Xffffffff9d83c125  WHEN '-458770653' THEN 'B7吖Bg' ELSE '-4736433' END))) ORDER BY ((rt0.c3 COLLATE NOCASE)IS(rt0.c4)), x'' ASC LIMIT -783516337 OFFSET 534819100; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)+(rt0.c0)) AS INTEGER) FROM rt0 WHERE (0X1de561de); -- 0ms;
SELECT DISTINCT (((rt0.c5)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((((rt0.c3) NOT NULL)))), LAST_VALUE(ROUND(rt0.c2, rt0.c2) COLLATE BINARY) OVER (), (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c2))))AND(((('-660867447')) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c1)*(rt0.c3)))))OR(((rt0.c1) NOT NULL))))OR(CAST(rt0.c2 AS REAL))) FROM rt0 GROUP BY (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)), CASE rt0.c2  WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c4 END, (NOT (rt0.c1)), rt0.c3, x'f676', ((rt0.c4)%(rt0.c5)), ((rt0.c1) IS FALSE)))==((x'', CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END, NULL, (NOT (rt0.c1)), ((rt0.c4) NOTNULL), ((rt0.c0)LIKE(NULL)), CAST(rt0.c0 AS BLOB)))), (((rt0.c0, rt0.c5, rt0.c0)) NOT BETWEEN (((0X3899d7f2 IN ()), (((rt0.c0, '-976583108', x'ea97', rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c1, rt0.c5, rt0.c0, rt0.c0))), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((((((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))AND(rt0.c2)))AND(x'bd72')), rt0.c4, ((((rt0.c1)OR(rt0.c3)))AND(rt0.c0))))), CAST(((rt0.c4)-(rt0.c3)) AS TEXT), '785819394', ((((rt0.c1))<((rt0.c1))) IN ((('-1738161821') NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ORDER BY CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 END COLLATE NOCASE, CASE SUBSTR(rt0.c5, rt0.c5)  WHEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN rt0.c3 ELSE load_extension(rt0.c1, rt0.c0) END ASC  NULLS FIRST, LOWER(x'') DESC;SELECT ((((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c5, rt0.c1, rt0.c4)) AND ((rt0.c4, 0.7823260456181768, rt0.c0))) IN ()) FROM rt0; -- 0ms;
SELECT TOTAL(((rt0.c3) IS TRUE)) OVER ( RANGE BETWEEN ((((rt0.c0)&(rt0.c2)))LIKE(CASE rt0.c5  WHEN rt0.c5 THEN rt0.c4 END)) FOLLOWING AND  CURRENT ROW), (((((rt0.c3))<=((rt0.c0))))*((rt0.c0 IN ()))), ((((ABS(rt0.c3))AND(CAST(rt0.c4 AS TEXT))))OR('-1807734235')) FROM rt0 GROUP BY (NULLIF(DISTINCT rt0.c3, rt0.c1) IN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c5)), ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) HAVING (((((((rt0.c0))=((rt0.c5))))AND((((rt0.c0, rt0.c3, rt0.c4))<=((rt0.c4, '-473421333', rt0.c0))))))AND(((x'cd0a') IS TRUE)));SELECT ALL ((COUNT(rt0.c3)) NOT BETWEEN (((rt0.c4)!=(rt0.c0))) AND (GROUP_CONCAT(rt0.c3))) FROM rt0 WHERE (((('')) BETWEEN (((((((((('1498639126')OR(0.16112423378894702)))OR(x'')))AND(NULL)))OR('<kb')))) AND ((((-1807734235) NOT BETWEEN ('1129780821') AND ('R')))))); -- 0ms;
SELECT ((((((((COUNT(rt0.c1))AND(rt0.c4)))AND((rt0.c4 IN ()))))AND(SUBSTR(rt0.c5, rt0.c4))))OR(rt0.c1 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (HEX(rt0.c5))), (((rt0.c0, NULL, rt0.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC), (('1469454063') ISNULL), ((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c5)))) AND ((((rt0.c0) BETWEEN (rt0.c4) AND (x'')), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((0.3428728092106841)<>(rt0.c0))))), ((rt0.c0)*('-1268384580')) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL (+ (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)), ((((rt0.c5)OR(SUM(rt0.c0))))OR('0.8442981335403567')), CASE WHEN ((rt0.c4) NOTNULL) THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c2)OR(rt0.c3)) THEN AVG(rt0.c2) WHEN (((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN rt0.c4 COLLATE RTRIM END FROM rt0 WHERE ((0X65a1be39 IN (x'')) COLLATE BINARY); -- 0ms;
SELECT ((rt0.c0 COLLATE RTRIM)/((rt0.c5 IN ()))) FROM rt0 WHERE (0.2597708178860485) ORDER BY (((rt0.c0)) BETWEEN ((LENGTH(rt0.c3))) AND ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) DESC, ((('-2131879295' IN (x'1c10')))<<(((rt0.c0)<=(rt0.c4)))); -- 0ms;
SELECT ALL ((NULL)IS NOT(rt0.c5)) FROM rt0 WHERE (((CAST(8.09355586E8 AS INTEGER)) IS TRUE)); -- 0ms;
SELECT ALL NULLIF(CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END, ((rt0.c1)<=(rt0.c1))) FROM rt0 WHERE ((NOT ((+ (NULL))))) GROUP BY ((x'')/(rt0.c1 COLLATE BINARY)), CAST(((0.3555091626136455)IS NOT(rt0.c2)) AS REAL), (((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))>>(TYPEOF(rt0.c1))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c3)), HEX(((rt0.c2)/(rt0.c2))), (~ (((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0; -- 0ms;
SELECT ((CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c3 END) ISNULL) FROM rt0 LIMIT 767193300; -- 0ms;
SELECT DISTINCT SUM((rt0.c3 IN ())) OVER (), (((+ (rt0.c3))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((rt0.c0) BETWEEN (707789964) AND (rt0.c5)))), ((0x70f1ae2a) BETWEEN ((rt0.c1 IN ())) AND ((rt0.c2 IN (rt0.c3)))) FROM rt0 LIMIT 480682825; -- 0ms;
SELECT CAST(((rt0.c4)>=(rt0.c3)) AS NUMERIC), rt0.c4, COUNT(*) FROM rt0 WHERE (((x'' COLLATE RTRIM)|((((('iXyTY僉')OR(x'eaba')))OR(0.4796517991230601))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))==(((rt0.c5)>(rt0.c4)))), (((~ (rt0.c5))) NOTNULL), CAST(((rt0.c4)<=(rt0.c1)) AS NUMERIC) FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))) AND ((((rt0.c4)|(0.5055293424172219)))))  NULLS LAST, CASE ((rt0.c2)<<(rt0.c2))  WHEN (((rt0.c2))==((rt0.c4))) THEN INSTR(rt0.c2, x'') WHEN x'' THEN ((rt0.c2) NOT NULL) WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END THEN (((rt0.c5, rt0.c3, rt0.c5))>((rt0.c0, rt0.c4, rt0.c1))) END, (('hy' COLLATE NOCASE)GLOB(((('f,')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0))))) ASC; -- 1ms;
SELECT CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 END COLLATE NOCASE FROM rt0 WHERE ((((~ ('2P'))) NOTNULL)); -- 0ms;
SELECT ALL rt0.c4 FROM rt0 WHERE (TYPEOF(((((x'')AND('-983402415')))AND(0.4757159388685548)))); -- 0ms;
SELECT ((((rt0.c1) NOTNULL))||((('1118200507') NOT BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0; -- 0ms;
SELECT ALL (((((((0.8094754367031918)OR(rt0.c3)))OR(rt0.c4))))==((((((((((((((rt0.c4)AND(0.5451956945288455)))AND(x'')))AND(rt0.c4)))OR(0.07759534147808944)))AND(rt0.c1)))AND(rt0.c2))))) FROM rt0; -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5))) BETWEEN (((rt0.c2)IS NOT(rt0.c4))) AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 END)), TOTAL((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))), json_remove(((rt0.c0) IS FALSE), CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c5 END) FROM rt0;SELECT DISTINCT ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c5) NOT BETWEEN (x'') AND (rt0.c4))) AND (((rt0.c3)>(rt0.c1)))), (NOT (rt0.c4)), ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c4))) NOT BETWEEN ((((rt0.c0, rt0.c4, rt0.c1))>((rt0.c0, rt0.c0, rt0.c0)))) AND (COUNT(*))) FROM rt0 WHERE (load_extension(((((((((1.420888069E9)OR(x'c2c0')))AND(x'd68884d0')))OR(-1449030955)))AND(x''))));SELECT DISTINCT ((((rt0.c2 COLLATE NOCASE)OR((((NULL))<=((rt0.c5))))))OR(rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) ISNULL) FROM rt0; -- 0ms;
SELECT TRIM(DISTINCT CAST(rt0.c5 AS TEXT), (~ (rt0.c5))) FROM rt0; -- 0ms;
SELECT COUNT(TOTAL(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c5 END)), CASE ((((rt0.c5)AND(rt0.c2)))AND(rt0.c4))  WHEN ((rt0.c3)GLOB(rt0.c2)) THEN ((rt0.c3)IS(rt0.c0)) END, (- (((rt0.c0) IS TRUE))) FROM rt0;SELECT rt0.c2, NULL, CASE WHEN ((((rt0.c2)AND(rt0.c4)))AND(rt0.c2)) THEN ((rt0.c3)AND(rt0.c4)) END FROM rt0 WHERE (CAST(CASE -1.186287914E9  WHEN NULL THEN NULL ELSE 0.9194522763314027 END AS TEXT)); -- 0ms;
SELECT ALL (- (((rt0.c3) NOT BETWEEN (0xffffffffd0de6ef0) AND (rt0.c0)))) FROM rt0 WHERE (UPPER('' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (NOT ((('ᜤ䩫')IS NOT(NULL)))) FROM rt0; -- 0ms;
SELECT ALL x'' COLLATE BINARY, MIN(CAST(NULL AS NUMERIC), rt0.c4, ((rt0.c3)>=(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c5))), COUNT(rt0.c3) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c3 END)>((~ (rt0.c4)))), (((rt0.c1)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND ((((rt0.c1)<(rt0.c2))))), (- ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM rt0 WHERE (CAST(((('l4ꬡ\')) NOT BETWEEN ((NULL)) AND (('-458770653'))) AS BLOB)); -- 0ms;
SELECT ALL (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()), ((- (rt0.c2)) IN (((rt0.c1)<(rt0.c2)))), SUM((+ (rt0.c5))), (((rt0.c5 IN ())) ISNULL), CASE (NULL IN ())  WHEN ((rt0.c2)+('s<饡)}8Eus')) THEN CASE WHEN rt0.c3 THEN rt0.c3 END ELSE (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))) END FROM rt0 ORDER BY (((rt0.c1 COLLATE NOCASE))<((((NULL)&(rt0.c4))))), ABS(DISTINCT (rt0.c2 IN ())) DESC; -- 1ms;
SELECT DISTINCT rt0.c0 FROM rt0 LIMIT 1631762763; -- 0ms;
SELECT DISTINCT ((((rt0.c0)&(rt0.c1)))LIKE(COUNT(*))), CAST(((rt0.c2)<('')) AS TEXT), NTH_VALUE(x'c883', (((('-1160461613') IS FALSE))%(rt0.c1 COLLATE NOCASE))) OVER () FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END)) AND ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))))  NULLS FIRST, (+ (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c5))));SELECT DISTINCT x'1fb0' FROM rt0 GROUP BY CASE WHEN ((rt0.c0) ISNULL) THEN (rt0.c3 IN ()) ELSE ((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c1)) END; -- 0ms;
SELECT ALL ((rt0.c5)|(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)), ('-1300647919' COLLATE NOCASE IN ()), ((rt0.c0 COLLATE BINARY)<=(((rt0.c2) IS TRUE))) FROM rt0 GROUP BY ((rt0.c1)*(rt0.c1)) COLLATE RTRIM, '1613900927', ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c3))) IS FALSE) LIMIT 571311560 OFFSET 1190368459; -- 1ms;
SELECT DISTINCT (((rt0.c2 IN ())) IS FALSE) FROM rt0 WHERE ((- (((NULL)GLOB(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(rt0.c2 COLLATE RTRIM) FROM rt0 WHERE (CAST((((NULL)) NOT BETWEEN ((1613900927)) AND ((NULL))) AS INTEGER)); -- 0ms;
SELECT (((((rt0.c5))<((rt0.c2)))) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1, (rt0.c4 IN ()) COLLATE NOCASE, ((MIN(rt0.c4))*(((rt0.c2)>=(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT (NULL IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(SQLITE_COMPILEOPTION_USED(rt0.c3)) OVER () FROM rt0 WHERE (((-1300442989 IN ()) IN ())) ORDER BY (((((rt0.c4)AND(rt0.c5)))OR(rt0.c1)) IN ()), (((((~ (rt0.c5)))OR(((((rt0.c4)OR(rt0.c0)))OR(rt0.c3)))))AND(((rt0.c1)==(rt0.c4))))  NULLS FIRST, ((((rt0.c1)==(rt0.c1)))<>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((NULL) BETWEEN (AVG(rt0.c4)) AND (CASE WHEN rt0.c4 THEN x'' END)) FROM rt0 WHERE (0x70169eeb); -- 0ms;
SELECT ALL COUNT(*), ((((((((rt0.c5)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)) COLLATE NOCASE, ((~ (rt0.c5)) IN ()) FROM rt0; -- 0ms;
SELECT ALL ((0.600017183622486) ISNULL), COUNT(rt0.c1) OVER (), ((AVG(rt0.c5))>>(SQLITE_VERSION())), (((rt0.c5 IN (rt0.c5)))>(COUNT(rt0.c4))), ((((COUNT(*))OR(rt0.c3)))AND(NULL)) FROM rt0; -- 0ms;
SELECT CASE rt0.c0 COLLATE NOCASE  WHEN rt0.c5 THEN COUNT(*) ELSE NULL END, ((((rt0.c0)IS(rt0.c5)))|('')), GROUP_CONCAT(((((((((rt0.c5)AND(rt0.c5)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0))) OVER () FROM rt0; -- 0ms;
SELECT ALL 'E1MrJmv왓먙' FROM rt0; -- 0ms;
SELECT ALL (rt0.c2 IN ()) FROM rt0; -- 1ms;
SELECT ALL LIKELIHOOD(DISTINCT MIN(rt0.c4), 0.46271734184278235) FROM rt0; -- 0ms;
SELECT ALL (+ (rt0.c1 COLLATE BINARY)) FROM rt0 WHERE (((x'')-(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c3 AS INTEGER))), DENSE_RANK() OVER (), (('')||(((rt0.c5)-(rt0.c0)))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT COUNT('') OVER () FROM rt0 LIMIT 2028292153; -- 0ms;
SELECT ((json_array_length(rt0.c0, rt0.c0))<<(LIKELIHOOD(DISTINCT rt0.c2, 0.2525397812016765))) FROM rt0 WHERE ((('0.959480374083981' COLLATE RTRIM) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((('W?KW') NOT BETWEEN (0.802300472078139) AND ('-1772656089'))))) GROUP BY ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c3 END)<>(((rt0.c2)LIKE(rt0.c2)))) HAVING (UNLIKELY(rt0.c4) IN ()); -- 1ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 0ms;
SELECT ((((CAST(rt0.c4 AS REAL))AND(rt0.c4 COLLATE RTRIM)))AND((((rt0.c3))<=((rt0.c1))))) FROM rt0 WHERE (0.30722842561687624); -- 0ms;
SELECT DISTINCT rt0.c4, '-1882310586', ((AVG(rt0.c2))<>(((((rt0.c0)OR(rt0.c4)))OR(rt0.c3)))), ((rt0.c2)%(CASE WHEN rt0.c5 THEN rt0.c2 END)), COUNT((+ (rt0.c3))) OVER ( ORDER BY ((((rt0.c5)=(rt0.c2)))<<((rt0.c4 IN (rt0.c1)))) DESC GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING), ((~ (rt0.c0)) IN ()), ((((((((CAST(rt0.c2 AS BLOB))AND(428871021)))OR(((rt0.c3) NOT NULL))))OR(CAST(rt0.c1 AS INTEGER))))AND(rt0.c0 COLLATE BINARY)) FROM rt0 WHERE (IFNULL(DISTINCT (('') BETWEEN ('jm#') AND (NULL)), ((0x5cdcce94)GLOB('-686931707')))) LIMIT -524701808 OFFSET -1605903461; -- 0ms;
SELECT ALL ((((rt0.c5)IS('fq')))/(((rt0.c0) BETWEEN (x'') AND (rt0.c2)))) FROM rt0 WHERE (((((((((0.861599931467533)AND(x'0973')))OR('-1e500')))OR(((0x35a6e7dd) NOTNULL))))AND((('-1661265163') NOTNULL)))) GROUP BY ((rt0.c0)/((- (rt0.c4)))), ((((0.16539141452333617) NOT NULL)) BETWEEN (((((rt0.c5)AND(rt0.c2)))OR(rt0.c1))) AND (NULL)), (((0.33008415440128536) NOT BETWEEN (rt0.c4) AND (rt0.c5)) IN ()); -- 1ms;
SELECT DISTINCT 'n2' FROM rt0; -- 0ms;
SELECT ((rt0.c4) IS FALSE) FROM rt0 WHERE (CASE (x'' IN ())  WHEN (('-1429612519') NOT NULL) THEN '-1563221285' WHEN (((('1498639126')OR(NULL)))AND(x'e2e2')) THEN ((x'')*(x'')) WHEN (~ (0.7463100382376904)) THEN CASE 0x24d8d070  WHEN 0.959480374083981 THEN x'' ELSE 0.9618546806377699 END END) GROUP BY CASE rt0.c2  WHEN rt0.c0 COLLATE RTRIM THEN (x'' IN (rt0.c4, rt0.c5)) END, (((rt0.c5)) BETWEEN ((CAST(rt0.c4 AS BLOB))) AND ((((rt0.c5)>(rt0.c3))))), COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 END, (rt0.c3 IN ())); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT CAST(rt0.c4 AS TEXT)), LEAD(((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM, ((((rt0.c1))==((rt0.c0))) IN ()), (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))) COLLATE BINARY) OVER ( ROWS BETWEEN CAST(((rt0.c3)>(rt0.c4)) AS INTEGER) FOLLOWING AND ((rt0.c2)*(rt0.c0)) COLLATE RTRIM FOLLOWING EXCLUDE TIES), -1903114064, LAST_VALUE((- (((((rt0.c1)OR(rt0.c1)))AND(rt0.c5))))) OVER (), DENSE_RANK() OVER ( ORDER BY (CAST(rt0.c2 AS REAL) IN ()) DESC) FROM rt0; -- 1ms;
SELECT ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 END)/(CAST(rt0.c5 AS NUMERIC))), CAST(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) AS NUMERIC), ((rt0.c2)-(rt0.c0)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL CASE 0.1404918995832679  WHEN MIN(rt0.c2) THEN (NOT (rt0.c4)) END, ((GROUP_CONCAT(rt0.c2))OR((rt0.c0 IN ()))), NTH_VALUE(CASE ((((((((rt0.c5)OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c4))  WHEN ((rt0.c0)<=(rt0.c2)) THEN rt0.c2 ELSE ((rt0.c2)LIKE(x'')) END, CAST(((rt0.c4)*(rt0.c3)) AS BLOB)) OVER () FROM rt0;SELECT DISTINCT GROUP_CONCAT((rt0.c4 IN ())) FROM rt0 WHERE ((((- (x''))) IS FALSE)) GROUP BY ((CAST(x'' AS BLOB)) IS TRUE) HAVING CASE CAST(rt0.c3 AS NUMERIC)  WHEN '-1763353840' THEN UPPER(DISTINCT rt0.c5) END; -- 1ms;
SELECT (((0.5703533046083574 IN ()))>=(CHAR(rt0.c1))), (NOT (((rt0.c3) NOT NULL))), (NOT (rt0.c3)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ((((((((CAST(-734905303 AS TEXT))OR(0.4796517991230601)))AND(x'2ebfee27')))AND(((rt0.c4) IS TRUE))))AND(UNLIKELY(DISTINCT rt0.c0))) FROM rt0; -- 1ms;
SELECT DISTINCT (+ (rt0.c2)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 ORDER BY (((NOT (rt0.c4)))+(((rt0.c2)>(rt0.c4))))  NULLS LAST; -- 1ms;
SELECT DISTINCT CAST(((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c2)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL (~ ('1561141756' COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c3)OR(0.0037348987775803755)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c4))>((rt0.c2)))) AND ((rt0.c2 IN ()))) FROM rt0 LIMIT 1845159341 OFFSET -1642149002; -- 0ms;
SELECT MAX((rt0.c0 IN ())), (~ (rt0.c0)) COLLATE NOCASE, ((json_array(rt0.c0, rt0.c5, rt0.c2, rt0.c0)) BETWEEN (((rt0.c5) IS TRUE)) AND (((rt0.c0)LIKE(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((CAST(rt0.c2 AS REAL), (((('dk檅9E%ﻚkP')OR(rt0.c5)))OR(rt0.c1)), (rt0.c4 IN ()), rt0.c3 COLLATE NOCASE, x'3841'))<>((((((rt0.c2)AND(rt0.c3)))OR(NULL)), x'', ((((rt0.c4)AND(rt0.c0)))OR(rt0.c5)), (~ (rt0.c3)), (((('f[\rnV8')OR(rt0.c4)))OR(rt0.c5))))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c3 AS BLOB) COLLATE NOCASE COLLATE BINARY, TOTAL(((rt0.c2)OR(rt0.c0))) OVER ( ORDER BY (((((rt0.c3, rt0.c3, rt0.c3))>=((rt0.c1, rt0.c4, rt0.c0))))<=(((rt0.c2) NOTNULL))) DESC), (((rt0.c0 IN (rt0.c0, rt0.c0))) ISNULL) FROM rt0 WHERE ((('EG\r\c') BETWEEN (x'') AND (x'')) COLLATE RTRIM); -- 0ms;
SELECT ALL (((rt0.c5 IN ()))<=(rt0.c5)) FROM rt0 ORDER BY rt0.c1  NULLS LAST, ((rt0.c1)|(((((rt0.c4)OR(rt0.c4)))OR(0.7739039616041584)))) LIMIT 403369050 OFFSET 1323133350; -- 0ms;
SELECT DISTINCT 0.742699976142784, LAST_VALUE((((rt0.c4))<((((rt0.c2) ISNULL))))) OVER (), CASE ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c5))  WHEN ((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)) THEN (NOT (rt0.c0)) ELSE rt0.c5 COLLATE BINARY END FROM rt0 WHERE ((((0.09243457975878355 COLLATE BINARY))<=((((x'21ce')IS('-1951036820')))))); -- 0ms;
SELECT ALL TOTAL(((rt0.c5)-(rt0.c4))) OVER (), x'', (((NOT (NULL)))IS(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c3)<=(rt0.c2))) NOT BETWEEN ('	u<3[%') AND ((('jᴼ(+sS?')OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((- (rt0.c4))) NOT BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (rt0.c1 COLLATE BINARY)), (AVG(rt0.c1) IN ()), ((((((((((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c2)))AND(rt0.c3 COLLATE NOCASE)))OR(NULL)))AND(CAST(rt0.c3 AS INTEGER))))AND(((((x'')AND(rt0.c3)))OR(rt0.c2)))) FROM rt0; -- 1ms;
SELECT DISTINCT (- (CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END)), ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 WHEN '妙r' THEN rt0.c5 END)-(((rt0.c1) NOTNULL))), ((((rt0.c0) NOTNULL))-(((rt0.c3)=(x'a3cb')))) FROM rt0 WHERE (CAST((((0.6843471134059119, x'', '-263854923')) NOT BETWEEN (('/]QFzIup', x'c5c9', 0.28315138312276233)) AND ((NULL, 0.8792978189686032, NULL))) AS NUMERIC)); -- 0ms;
SELECT NULL FROM rt0 WHERE (((((((((((x'9c8c')OR(9.74514041E8)))AND(NULL)))OR(NULL)))AND('3AZi8P9?')))==((('1613900927') ISNULL)))); -- 0ms;
SELECT (CASE WHEN rt0.c0 THEN rt0.c0 END IN ()) FROM rt0 WHERE (((((CAST(x'' AS INTEGER))OR((((NULL))>=((x'a1c7'))))))OR('264392266' COLLATE BINARY))) ORDER BY TRIM(DISTINCT (+ (rt0.c4)), ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c5)))AND(rt0.c2)))OR(rt0.c4))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c0 END)/(((rt0.c3) NOT NULL))), ROW_NUMBER() OVER (), rt0.c1 FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c4 IN (rt0.c3))))<(((((((((('1285298613')OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0))))), LOWER(DISTINCT COALESCE(rt0.c4, rt0.c1)), (- (CAST(rt0.c2 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT ALL '1710635008', CAST(0.8112686157218154 COLLATE RTRIM AS TEXT), (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ((rt0.c0 IN ()), (((rt0.c5, rt0.c0, rt0.c4)) NOT BETWEEN (('', rt0.c3, rt0.c5)) AND ((0.8837474213562194, rt0.c5, rt0.c3))))) FROM rt0 WHERE ((((x'' IN (0xffffffffc3c986fd, x''))) IS FALSE)); -- 0ms;
SELECT ALL (~ (rt0.c2 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(CAST(rt0.c2 AS BLOB)), CAST(rt0.c5 AS NUMERIC) COLLATE BINARY, ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1))) ISNULL) FROM rt0 ORDER BY CASE WHEN LOWER(rt0.c4) THEN ((((NULL)OR(rt0.c2)))OR(rt0.c1)) END ASC; -- 0ms;
SELECT DISTINCT '-1996883225' FROM rt0 GROUP BY CASE (- (rt0.c0))  WHEN ((rt0.c3) IS TRUE) THEN NULL WHEN ((rt0.c1)*(0.7694923084568667)) THEN CAST(rt0.c5 AS TEXT) WHEN 'A' THEN rt0.c2 COLLATE RTRIM ELSE rt0.c2 END; -- 0ms;
SELECT ALL COUNT(((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c0))) OVER () FROM rt0 LIMIT 62286397; -- 1ms;
SELECT ALL ((((x'0fe7')) NOT BETWEEN ((x'')) AND ((rt0.c4))) IN ()), x'6da4', (((NOT (rt0.c2))) NOT BETWEEN ((((('W<')OR(NULL)))OR(rt0.c5))) AND (((rt0.c3)!=(rt0.c5)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT 0.7616087079328877 FROM rt0; -- 0ms;
SELECT rt0.c3, (((((- (rt0.c2)))AND(rt0.c0)))AND(((rt0.c3)||(rt0.c5)))), ((CAST(rt0.c5 AS REAL))<(COUNT(*))) FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c5)&(rt0.c0))) OVER () FROM rt0 WHERE ((((NULL IN ())) IS TRUE)) ORDER BY rt0.c0 DESC, ((CAST(rt0.c1 AS NUMERIC))==(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 END))  NULLS FIRST, ((((rt0.c3)IS(rt0.c5))) BETWEEN (((((((((rt0.c4)AND(rt0.c2)))OR(NULL)))OR(rt0.c2)))OR(rt0.c1))) AND (((NULL)AND(rt0.c1))))  NULLS FIRST LIMIT -1005537008 OFFSET -1088138440; -- 0ms;
SELECT (NOT (((((0Xfffffffffa66b125)AND(rt0.c3)))OR(rt0.c1)))), CASE WHEN rt0.c4 THEN 'u7sr' END COLLATE RTRIM, (NOT (CAST(rt0.c3 AS TEXT))) FROM rt0 WHERE ((((~ ('-837564136')))|(((1.036966287E9) NOTNULL)))); -- 0ms;
SELECT DISTINCT (('')/(((1.61969347E9)&(rt0.c4)))) FROM rt0; -- 0ms;
SELECT (~ ((NOT (rt0.c1)))), ((~ (rt0.c3)) IN (SUM(0.8816311913214498), ((rt0.c0)-(rt0.c5)))), ((((rt0.c3) NOT NULL))>=(rt0.c0)) FROM rt0; -- 0ms;
SELECT ((CASE WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c1 END)*((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt0; -- 0ms;
SELECT ALL x'' FROM rt0 LIMIT -1497973773; -- 0ms;
SELECT DISTINCT AVG(MIN(rt0.c1, rt0.c3)) FROM rt0 GROUP BY (((rt0.c1, rt0.c3, x'')) BETWEEN ((rt0.c2, (rt0.c3 IN (rt0.c1, rt0.c4)), rt0.c0)) AND ((rt0.c1 COLLATE NOCASE, ((rt0.c4)<=(rt0.c1)), rt0.c2 COLLATE BINARY))) HAVING CASE (~ (rt0.c4))  WHEN ((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)) THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c1)>>(rt0.c3)) END; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c0)<(rt0.c0)))) FROM rt0 GROUP BY CAST((((rt0.c1)) BETWEEN ((x'19963976')) AND ((rt0.c2))) AS INTEGER) HAVING ((rt0.c2) NOT NULL) LIMIT -1996894262; -- 0ms;
SELECT ALL '1073084299' FROM rt0; -- 0ms;
SELECT ALL (- (((rt0.c3) NOT BETWEEN (rt0.c5) AND ('0.8236823164839734')))), DENSE_RANK() OVER (), ((DATE(rt0.c3, rt0.c4, rt0.c0)) NOT NULL) FROM rt0 WHERE ((- (TRIM(NULL)))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt0 WHERE ((((- (-1.470871026E9)))*((('') ISNULL)))); -- 0ms;
SELECT ((TOTAL(rt0.c3)) IS FALSE) FROM rt0 GROUP BY ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c4))) IS FALSE), (((rt0.c1)|(rt0.c2)) IN (NULL, UNLIKELY(rt0.c0))), '-1996883225'; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0 WHERE (((((NULL) IS FALSE))*((('725628160') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c1 END)OR(SUBSTR(rt0.c5, rt0.c4))))OR(((rt0.c0)>=(rt0.c3)))) FROM rt0 LIMIT 1579074021; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS REAL))/(((rt0.c4)IS NOT(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL LOWER(rt0.c3 COLLATE RTRIM) FROM rt0 WHERE (x'' COLLATE NOCASE COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (+ ((((rt0.c5, rt0.c3, rt0.c2)) BETWEEN ((rt0.c3, x'', rt0.c3)) AND ((rt0.c5, rt0.c1, rt0.c4))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4)GLOB(LIKELIHOOD(DISTINCT rt0.c1, 0.02534546083140199))) FROM rt0 WHERE ((+ (((((x'')OR('-1470871026')))OR(x'89e0'))))); -- 0ms;
SELECT DISTINCT rt0.c2, CASE MAX(rt0.c1)  WHEN 0.861599931467533 THEN ((rt0.c4)>(NULL)) ELSE ((rt0.c1)>=(rt0.c2)) END, 0.7348024624760711 FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((((((((rt0.c5)AND(NULL)))AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2))) OVER (), (CAST(rt0.c5 AS TEXT) IN ()), SUM(rt0.c1) OVER () FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(NULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (NOT (rt0.c3 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT ALL rt0.c4, x'', ((((AVG(rt0.c3))OR((rt0.c3 IN ()))))OR(((rt0.c5) NOT NULL))) FROM rt0 WHERE ((((NULL)*('')) IN ())) GROUP BY rt0.c4 HAVING (((rt0.c4)) BETWEEN ((x'')) AND ((((rt0.c5)GLOB(rt0.c5))))) LIMIT 1613900927; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c1 ELSE (- (0Xffffffff91c198c8)) END FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c2))) NOT BETWEEN ((rt0.c3 IN ())) AND (rt0.c5 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 WHERE (((CASE 0.31419048361679724  WHEN -3.284481E8 THEN '593860563' END) NOT NULL)); -- 0ms;
SELECT ALL COALESCE(((rt0.c3)/(rt0.c1)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), NULLIF(rt0.c1, rt0.c3), x'') FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c3)<>(NULL)) THEN ((rt0.c2) IS TRUE) ELSE rt0.c3 END FROM rt0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT rt0.c5 COLLATE RTRIM) FROM rt0; -- 1ms;
SELECT ((((((((((rt0.c1)AND(0.050237962902981326)))OR(NULL)))AND(((rt0.c5) BETWEEN (0X346d14f0) AND (rt0.c5)))))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 END)))OR((+ (rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT BETWEEN ((((rt0.c0, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c2, rt0.c1, x'')) AND ((rt0.c4, rt0.c1, rt0.c5)))) AND (((rt0.c0)<(rt0.c5)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c1 IN (rt0.c2)) THEN ((rt0.c4)/(rt0.c3)) END FROM rt0; -- 0ms;
SELECT ((((rt0.c5)||(rt0.c2))) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((((rt0.c0)AND(rt0.c5)))AND(rt0.c2)))) FROM rt0 LIMIT -9223372036854775808; -- 0ms;
SELECT ALL ((((((((PRINTF(rt0.c0))AND(CASE WHEN '' THEN rt0.c5 ELSE rt0.c3 END)))OR(rt0.c5)))OR(SUM(rt0.c4))))OR(CAST(rt0.c1 AS BLOB))), CAST(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) AS INTEGER), TOTAL((((rt0.c1))<(('-927043929')))) OVER ( ORDER BY ((((((((rt0.c4)OR(LIKELIHOOD(rt0.c1, 0.2307798289592894))))OR((((rt0.c0))<>((rt0.c3))))))OR(CASE rt0.c5  WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c5))))  NULLS LAST) FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(CASE WHEN rt0.c2 THEN 0.26605580996313083 ELSE rt0.c1 END COLLATE BINARY) FILTER(WHERE ((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) IN ())) OVER (), COUNT(*), ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT ALL TRIM(DISTINCT ((((((((rt0.c1)OR(rt0.c5)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))), CAST(rt0.c1 COLLATE RTRIM AS REAL), (CAST(rt0.c0 AS TEXT) IN (((rt0.c1)>>(rt0.c4)))) FROM rt0 WHERE (CASE (('-66073190') BETWEEN (NULL) AND (''))  WHEN (~ ('1603090028')) THEN (NOT (0.354851805529932)) END); -- 0ms;
SELECT DISTINCT SUM(rt0.c0), (((((rt0.c4)AND(rt0.c4)))OR(rt0.c5)) IN ()), ((((TOTAL(NULL))OR(((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))))AND(MIN(rt0.c3))) FROM rt0 WHERE ((((x'bb04')<=(x'')) IN (((0x3fbf2aab)||(0.40765785020527723)), ('-1470871026' IN ())))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c2) FROM rt0 WHERE ((((('0.2559866696322307') BETWEEN (NULL) AND ('0.10710154391670679')))-(((-2.028580011E9) IS TRUE)))) ORDER BY ((CAST(rt0.c3 AS NUMERIC)) NOT NULL) ASC; -- 0ms;
SELECT DISTINCT CASE ((rt0.c3)LIKE(rt0.c2))  WHEN ((((((((rt0.c5)OR(rt0.c0)))AND(x'')))OR(rt0.c1)))OR(x'4394')) THEN rt0.c1 COLLATE RTRIM WHEN CAST(rt0.c3 AS NUMERIC) THEN (NOT (rt0.c5)) WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c5) NOTNULL) END FROM rt0; -- 0ms;
SELECT ((('(l''-' IN ())) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3)>(rt0.c5)))) FROM rt0 NOT INDEXED WHERE (((CAST(NULL AS TEXT))&(((NULL)OR(0.5817600192372687))))) GROUP BY rt0.c1; -- 0ms;
SELECT DISTINCT ((LIKELY(rt0.c2)) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3 COLLATE NOCASE))<>((COUNT(rt0.c4)))) FROM rt0 WHERE ((((((('h*gjH㨱\࠾')AND(8.11082124E8)))AND(-4.73421333E8))) NOTNULL)); -- 1ms;
SELECT DISTINCT ((((rt0.c5)IS(rt0.c1)))||(CASE WHEN 0.6692027508964656 THEN NULL ELSE 0.7348871229038006 END)), (NOT ((rt0.c4 IN ()))), GROUP_CONCAT(((rt0.c3)>>(rt0.c2))) OVER () FROM rt0 WHERE ((((('628492854')<=(x'')))%(0.23635187647857414))); -- 0ms;
SELECT CASE NULLIF(DISTINCT rt0.c0, x'b157')  WHEN '-211757149' THEN ((rt0.c5) NOT NULL) END, SUM(((rt0.c1)LIKE(rt0.c3))), CASE WHEN SUM(rt0.c4) THEN x'' WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) WHEN ((((((((rt0.c5)AND(rt0.c2)))AND(rt0.c5)))AND('1498639126')))AND(rt0.c3)) THEN CHANGES() ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) END FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c5))<=((rt0.c1))))<<((rt0.c5 IN ()))) FROM rt0 WHERE (820656689); -- 0ms;
SELECT DISTINCT ((((rt0.c5)+(rt0.c4)))<=(((rt0.c1)>=(rt0.c2)))) FROM rt0 WHERE ((((NULL)GLOB(x'')) IN ())); -- 0ms;
SELECT ALL CAST((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL TOTAL((rt0.c3 IN ())) OVER ( ORDER BY (((NULLIF(DISTINCT rt0.c1, rt0.c3), LIKELY(rt0.c2), ((((rt0.c0)AND(rt0.c5)))AND(rt0.c4))))>=(((rt0.c0 IN ()), rt0.c5, 0.0679948897665128)))), rt0.c0 COLLATE RTRIM, CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND ('0.9858620721540095')) THEN TOTAL(rt0.c4) ELSE rt0.c5 COLLATE BINARY END FROM rt0 GROUP BY (NOT (((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c5)))), ((('-1868948746')) NOT BETWEEN (((rt0.c5 IN ()))) AND (((((rt0.c3, rt0.c4, 0xffffffff8b53aaf3, '', rt0.c2))<=((rt0.c3, rt0.c4, rt0.c5, rt0.c5, rt0.c0)))))), (- (rt0.c4)) COLLATE NOCASE, LIKELY(DISTINCT (((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c3, rt0.c2, rt0.c1)))), (((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOTNULL); -- 0ms;
SELECT ALL ((((rt0.c3) NOTNULL)) NOT BETWEEN (CASE WHEN rt0.c1 THEN 0.2693401476112127 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c5 END) AND (rt0.c3 COLLATE NOCASE)) FROM rt0 WHERE ('cn^'); -- 0ms;
SELECT DISTINCT (~ ('')) FROM rt0 WHERE ((- (x'3da7' COLLATE BINARY))); -- 1ms;
SELECT (((rt0.c2 IN ()))OR(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(0.38073689888718476)))) FROM rt0 WHERE ((((0.965960405529909) IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT SUM((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) OVER ( RANGE BETWEEN ((((rt0.c3) ISNULL))+(((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c1)))) FOLLOWING AND  CURRENT ROW EXCLUDE TIES) FROM rt0 WHERE ((+ ((((0.24276928664823172))<((NULL))))));SELECT CAST((((rt0.c4, rt0.c2, rt0.c4))<((NULL, rt0.c4, rt0.c1))) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c0, 0.3409099842094163, rt0.c2, rt0.c0, rt0.c5))<>((rt0.c1, x'', '\n', rt0.c5, rt0.c3))) AS NUMERIC) FROM rt0 WHERE (((((x'8b02') NOT BETWEEN (x'11f8') AND (x'')))IS NOT((((NULL))<=((0.7101356606233447)))))); -- 0ms;
SELECT DISTINCT (((((rt0.c2, rt0.c3, rt0.c3))>=((rt0.c3, rt0.c2, rt0.c0))))IS NOT(((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))) FROM rt0 WHERE (((((((NULL) BETWEEN ('ZCw_!''') AND (NULL)))OR(((('I(q)', x'', '-1303243898'))>((NULL, x'', NULL))))))OR(((x'') BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT ALL ((((rt0.c1)AND(rt0.c5)))AND(rt0.c2)) COLLATE RTRIM FROM rt0 GROUP BY (((rt0.c4 COLLATE RTRIM, rt0.c3, ((rt0.c4)>(rt0.c2))))>=(((rt0.c0 IN ()), (((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c0))), ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c5))))) HAVING ((((CASE WHEN rt0.c3 THEN rt0.c0 END)AND(AVG(rt0.c2))))AND(RTRIM(rt0.c5))); -- 1ms;
SELECT ALL ((((rt0.c5) IS FALSE))<=((0.32945322238024766 IN ()))), LIKELIHOOD(((rt0.c0) ISNULL), 0.7265971748434976), ((GROUP_CONCAT(rt0.c1))/(((rt0.c1) IS FALSE))) FROM rt0 WHERE (((3.97806293E8) NOT BETWEEN (x'6b73') AND (0.6855273682973559)) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT DISTINCT x'4c6d' FROM rt0 WHERE ((((('-1787332')>=('tH')))<((NOT ('*P''ZNq*'))))) GROUP BY (- (CASE WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c3 END)) HAVING ((((((((CAST(rt0.c5 AS INTEGER))OR(((rt0.c5) IS FALSE))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN 'IN!?Q恖f9-' ELSE rt0.c1 END)))OR(x'' COLLATE RTRIM)))AND(MIN(rt0.c2))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE CAST(rt0.c4 AS INTEGER)) OVER ( ORDER BY 4.06130395E8 COLLATE BINARY) FROM rt0 WHERE (((((((NULL) IS TRUE))AND(CAST(NULL AS BLOB))))AND(CASE x''  WHEN NULL THEN '.BW' WHEN 0.37039929918038894 THEN x'' WHEN 0.6002280429051595 THEN '	c4|jTo끘' END))) ORDER BY (((rt0.c0 IN ())) NOT BETWEEN ((+ (rt0.c5))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) ASC  NULLS LAST, ((rt0.c1 COLLATE BINARY)<<(CASE WHEN rt0.c3 THEN rt0.c1 END)); -- 0ms;
SELECT (((NOT (rt0.c1))) IS FALSE), CAST(CAST(-1621611498 AS REAL) AS INTEGER), ((((((((((rt0.c5) IS TRUE))OR((- (rt0.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END)))OR((((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c5)) BETWEEN ((rt0.c0, rt0.c3, NULL, rt0.c3, 0.29266477868712004)) AND ((rt0.c2, rt0.c2, rt0.c4, rt0.c2, rt0.c1))))))OR(rt0.c4)) FROM rt0; -- 0ms;
SELECT ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))*(json_array_length(rt0.c0, NULL))) FROM rt0; -- 0ms;
SELECT ALL (rt0.c1 IN (rt0.c3)) COLLATE NOCASE FROM rt0 WHERE (UNLIKELY(DISTINCT ((x'') NOT NULL))); -- 0ms;
SELECT ALL (((((rt0.c0)) BETWEEN ((0.07334207746839194)) AND ((rt0.c5)))) BETWEEN (((((rt0.c3)AND(x'')))OR(rt0.c5))) AND (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) FROM rt0; -- 1ms;
SELECT DISTINCT (~ (((rt0.c4) NOTNULL))) FROM rt0; -- 0ms;
SELECT 0.36589193053957725 FROM rt0; -- 0ms;
SELECT ALL ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c4 END) IS TRUE) FROM rt0 WHERE (CASE (x'' IN ())  WHEN ((NULL)LIKE('盵WE')) THEN CASE WHEN 'PF9' THEN NULL ELSE '1371072378' END ELSE (('-1291972685') NOT BETWEEN (-1697040469) AND (x'')) END); -- 0ms;
SELECT DISTINCT SUM(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c5))) FROM rt0; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY rt0.c2 DESC), ((((rt0.c3) IS TRUE))*((((rt0.c1, rt0.c4, 0X771a498b)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4)) AND ((rt0.c5, 1546104882, 0.8174558024359753))))), rt0.c1 FROM rt0 WHERE (LOWER(DISTINCT ((0.25641151420626807)/(NULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)*(rt0.c0)))-((~ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(HEX(DISTINCT rt0.c2) AS REAL) FROM rt0 WHERE (-4.58770653E8); -- 0ms;
SELECT DISTINCT (~ (rt0.c3)) FROM rt0 WHERE (((1921753028 IN ('')) IN ())); -- 0ms;
SELECT ALL COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT TIME(((rt0.c4) IS FALSE), json_insert(rt0.c4, rt0.c3, rt0.c0), TOTAL(rt0.c3)) FROM rt0 WHERE (((('')) NOT BETWEEN ((((x'2e26')<(NULL)))) AND (('2026849781')))); -- 0ms;
SELECT ALL rt0.c5 FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('1597270661') IS FALSE)) OVER () FROM rt0 WHERE (IFNULL(json(NULL), ((0.6308856528380307) NOT BETWEEN (x'') AND (NULL)))); -- 0ms;
SELECT DISTINCT (((((((((((rt0.c3, rt0.c1, rt0.c4, rt0.c3, rt0.c5)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c1, rt0.c1, x'1803', rt0.c0, rt0.c2))))AND((+ (rt0.c4)))))AND(((rt0.c3)=(rt0.c3)))))AND((NOT (rt0.c2)))))OR((rt0.c0 IN ()))) FROM rt0 WHERE (((CASE WHEN 0xffffffff88f9fae7 THEN NULL ELSE '{8})' END) NOT NULL)); -- 0ms;
SELECT ALL ((STRFTIME(rt0.c3, rt0.c5, rt0.c1))*(x'')) FROM rt0 WHERE ((((((('')AND(0.3284848224570992)))AND(0.4901941753507405)))/(((((NULL)AND(1122659953)))OR(NULL))))); -- 0ms;
SELECT ALL TRIM((rt0.c2 IN ())) FROM rt0; -- 1ms;
SELECT DISTINCT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))<((rt0.c4 COLLATE BINARY))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c3 IN ()) THEN CASE rt0.c2  WHEN x'' THEN rt0.c2 ELSE rt0.c1 END WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c0 END THEN NULL WHEN NULL THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END THEN ((rt0.c3)<=(rt0.c4)) WHEN (rt0.c1 IN ()) THEN ((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)) END FROM rt0; -- 0ms;
SELECT DISTINCT (~ ((+ (rt0.c0)))) FROM rt0 WHERE (((CASE '-79862783'  WHEN x'00d0193b' THEN x'' ELSE NULL END) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((((rt0.c5)AND(rt0.c2)))AND(rt0.c3)))*(rt0.c4 COLLATE BINARY)) FROM rt0 WHERE (0.8443589194250537); -- 0ms;
SELECT DISTINCT (((rt0.c1) BETWEEN ('d') AND (1514096112)) IN (((rt0.c5) IS FALSE))) FROM rt0 WHERE ((((((((((((('-284984261')OR('')))AND(NULL)))AND(0.31950470865265057)))AND(((0xffffffffc4cd6a52)&(NULL)))))AND(NULL)))AND(IFNULL(DISTINCT '403369050', x'')))); -- 0ms;
SELECT GROUP_CONCAT(CASE rt0.c4  WHEN rt0.c1 THEN -1996883225 WHEN x'5294' THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c5 END) OVER ( PARTITION BY ((CAST(rt0.c1 AS TEXT))-(rt0.c4 COLLATE RTRIM)), ((rt0.c1 COLLATE RTRIM)IS NOT(ABS(DISTINCT rt0.c5))) GROUPS BETWEEN (((('1892025503') BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))) PRECEDING AND  CURRENT ROW EXCLUDE TIES) FROM rt0;SELECT DISTINCT 1.217127213E9, (- (rt0.c0)), (((0.9116736544758582)) BETWEEN ((((rt0.c5)==(rt0.c3)))) AND ((rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c0)) NOT NULL), CAST((rt0.c5 IN ()) AS BLOB), ((AVG(rt0.c1))|(rt0.c1)), ((rt0.c3) BETWEEN (((x'7710') ISNULL)) AND (((rt0.c0) IS TRUE))), (((((rt0.c5)AND(rt0.c1)))OR(rt0.c1)) IN ()) FROM rt0 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN ABS(DISTINCT x'6ee8') ELSE NULLIF(x'', '1856462513') END); -- 0ms;
SELECT DISTINCT ((((- (rt0.c5))))<>((rt0.c1 COLLATE NOCASE))) FROM rt0 WHERE ((((x'') NOT BETWEEN (0.0825222981938104) AND ('-1')) IN ())); -- 0ms;
SELECT DISTINCT json_array_length(((((rt0.c2)OR(rt0.c5)))OR(rt0.c0)), CASE WHEN rt0.c4 THEN rt0.c4 END), ((MAX(rt0.c3))>=(CAST(rt0.c2 AS BLOB))), (((((rt0.c5)OR(rt0.c4)))OR(rt0.c5)) IN (rt0.c3, TOTAL(rt0.c0))) FROM rt0 WHERE (((((x'' COLLATE NOCASE)AND(CASE WHEN '-2028580011' THEN 218652488 WHEN x'8140' THEN 0xffffffffb2e06e05 WHEN 0xffffffffda242f79 THEN NULL WHEN 0.49232001433232886 THEN NULL WHEN NULL THEN 'C L쀯\noP빒u' ELSE x'' END)))OR(LIKELY(DISTINCT 0.4295112483851262))));SELECT LIKE((NOT (rt0.c3)), COUNT(rt0.c5)) FROM rt0 WHERE ((((x'' IN (NULL))) NOT BETWEEN (((((((((x'')AND(NULL)))OR('''X5')))AND('#DBL \rKf')))OR(NULL))) AND ((('')&(-2088595807))))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c0)AND(rt0.c5)))AND(rt0.c3)))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))))AND(rt0.c1 COLLATE NOCASE)), ((((rt0.c5)IS NOT(rt0.c3)))>=(((rt0.c4) IS TRUE))), CASE rt0.c1  WHEN x'' THEN rt0.c1 END COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL (((((-1.69432812E9))<=((rt0.c0)))) NOT NULL) FROM rt0 LIMIT -21926584; -- 0ms;
SELECT COUNT(*) OVER (), LAST_VALUE(-348004100) OVER (), LAG((((+ (rt0.c5)))GLOB((~ (rt0.c4)))), (((- (rt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)), '') OVER ( ORDER BY ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))%(((rt0.c2) ISNULL))), ((x'b05ba16a') NOT BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((rt0.c2 IN (rt0.c0, rt0.c0)))) GROUPS  CURRENT ROW) FROM rt0 ORDER BY CASE WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CAST(rt0.c5 AS BLOB) ELSE NULL END  NULLS FIRST, ((((0.23960821034439472)GLOB(NULL)))GLOB('0.758394164564884'))  NULLS FIRST; -- 1ms;
SELECT DISTINCT INSTR(((rt0.c4) IS FALSE), rt0.c1) FROM rt0 ORDER BY 'h}' ASC  NULLS FIRST; -- 0ms;
SELECT (+ (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END)) FROM rt0 WHERE (((HEX(x''))||(((NULL)GLOB('-169221039'))))); -- 0ms;
