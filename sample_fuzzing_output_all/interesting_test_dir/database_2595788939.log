-- Time: 2024/06/07 01:16:24
-- Database: database39
-- Database version: 3.40.0
-- seed value: 2595788939
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 REAL ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (0.8468508663850682); -- 1ms;
UPDATE OR IGNORE rt0 SET c2='1286416128'; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES ('1286416128'); -- 5ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'', '', -1e500); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('1286416128'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES (0.9322129316743989, x'3909', x''); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x''), ('M4'), (887362512); -- 0ms;
UPDATE rt0 SET c2=0.9322129316743989; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 821344344); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
UPDATE OR FAIL vt1 SET c0='*/}''' WHERE CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN HEX(vt1.c0) ELSE ((vt1.c0) IS TRUE) END; -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET (c0, c1)=(1.286416128E9, '-724724839'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0='k*h1%ql䜘' WHERE (- (vt1.c0)) COLLATE BINARY; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (NULL); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c2) VALUES ('', 1252241486, 0x6502071c); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x'', c0=NULL WHERE ((rt0.c2 COLLATE NOCASE) BETWEEN ((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c3, rt0.c1)))) AND ((- (rt0.c0)))); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (0.9494169938971947), (0.8468508663850682), (0x770e9f27); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3) VALUES ('M4', 251522931); -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0.5019277227125378); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.03663891052893897); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'') WHERE CASE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))  WHEN (((vt1.c0))<((vt1.c0))) THEN (vt1.c0 IN ()) ELSE ((vt1.c0) IS TRUE) END; -- 1ms;
UPDATE OR ROLLBACK rt0 SET c0='1073029422'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c3)=(x'9d1355bd', 1286416128); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1073029422,7');\n; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1='1252241486'; -- 1ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.4173038793207635 WHERE CAST(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END AS BLOB); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt0 SET c2=x'' WHERE ((((((((rt0.c3)OR(rt0.c2 COLLATE NOCASE)))OR(CAST(rt0.c2 AS TEXT))))AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1252241486);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=269685547,5');\n; -- 0ms;
UPDATE OR ABORT vt1 SET c0=NULL WHERE ((CAST(vt1.c0 AS NUMERIC))-(SUBSTR(vt1.c0, vt1.c0))); -- 0ms;
ANALYZE temp; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c1) VALUES ('0.8468508663850682', x'', ''), (0.10989708273421317, 0.9494169938971947, NULL), (x'6507', x'', 0.4173038793207635); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c2) VALUES (x'', NULL, '622131771'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(x'', 0.29483094006297494) WHERE (((0.20155107512271997))>((0.9494169938971947))); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1) VALUES ('', 0xffffffffa83ef985), (NULL, NULL), (x'', 0.7899641012973868); -- 0ms;
DROP TABLE IF EXISTS rt0; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1810207265'); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (x''), (0.9698650540362732); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.4236297545396809); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.8844786546120436 WHERE TRIM(CAST(vt1.c0 AS REAL)); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0x3f3a7f20); -- 1ms;
UPDATE OR IGNORE vt1 SET c0='' WHERE ((((vt1.c0))>=((vt1.c0))) IN ()); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0.5951847203103191), (NULL), (0.09923936094225916); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (0.7448448572616445), (x'f76e'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (0.8047439001601455), ('-1472267899'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT OR REPLACE INTO vt1 VALUES (2.69685547E8), (NULL), ('5(,&'); -- 0ms;
UPDATE vt1 SET (c0)=(0.572508743753945); -- 1ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('Wࡃ'), (NULL), (x'5a41'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0Xffffffff84602d6e); -- 1ms;
END TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND (((vt1.c0 IN ())))), vt1.c0, RANK() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE (((((('0.7899641012973868')OR(NULL)), ((x'f321')<>(0X76bd71a6)), ((x'')IS(NULL))))<=((CAST(x'0178' AS TEXT), ((0.8904055092326295)-(0.41613753502351347)), (NULL IN ()))))) LIMIT 1256810824 OFFSET -1815258787; -- 0ms;
SELECT CAST((- (vt1.c0)) AS BLOB) FROM vt1; -- 0ms;
SELECT ALL NTILE(vt1.c0) OVER (), CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN TOTAL(vt1.c0) END, ((((vt1.c0) IS FALSE))/(vt1.c0 COLLATE BINARY)) FROM vt1;SELECT TOTAL(UNLIKELY(DISTINCT vt1.c0)) FROM vt1; -- 0ms;
SELECT ALL vt1.c0, COUNT(*) FILTER(WHERE UNLIKELY(DISTINCT (('251522931')<<(vt1.c0)))) OVER (), ((TOTAL(vt1.c0))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 ORDER BY CAST(((vt1.c0) NOT NULL) AS INTEGER) ASC; -- 0ms;
SELECT DISTINCT SUM(((vt1.c0)=(vt1.c0))) OVER ( ROWS BETWEEN ((CASE vt1.c0  WHEN '0.9494169938971947' THEN vt1.c0 END) NOT BETWEEN (vt1.c0) AND ((- (vt1.c0)))) PRECEDING AND  UNBOUNDED FOLLOWING) FROM vt1 WHERE (CASE WHEN ((0.09381987015171134) BETWEEN ('0.03663891052893897') AND (0.20680701680885505)) THEN ((((0x76bd71a6)OR('0.0')))OR(0.9502204227567104)) WHEN ((0.17924840872014114) NOT NULL) THEN (- (NULL)) WHEN NULL THEN (('j礪W\r[.E[P')*(x'')) ELSE '-2052810453' END) GROUP BY CASE LIKELIHOOD(DISTINCT vt1.c0, 0.4600424792923793)  WHEN (('') BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))) ELSE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) END HAVING CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN '9kc89' THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN GROUP_CONCAT(vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END LIMIT -670301167; -- 1ms;
SELECT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))IS(NULL COLLATE BINARY)), (((vt1.c0 IN (vt1.c0, vt1.c0))) IS FALSE), vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) FROM vt1; -- 0ms;
SELECT (((vt1.c0)>>(vt1.c0)) IN ()) FROM vt1 WHERE (((0.08410535807680797)=(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT NTILE((((vt1.c0)%(vt1.c0)) IN ())) OVER () FROM vt1 WHERE (((((json_patch(x'', NULL))AND('1256810824')))AND(((((x'')AND(NULL)))AND('')))));SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE) FROM vt1 WHERE (((CASE 1.992126886E9  WHEN x'' THEN 0xffffffffa4959b33 ELSE x'' END)||(((((x'')AND(NULL)))AND('xC䜘M'))))); -- 0ms;
SELECT DISTINCT ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))GLOB((+ (vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT json_array_length(((0X4cad2700)||(vt1.c0))) FROM vt1 WHERE (CASE ((x'') IS FALSE)  WHEN '1060798240' COLLATE BINARY THEN ((x'') ISNULL) WHEN (('1286416128') BETWEEN ('A㕺\rQv') AND (x'')) THEN (('U9') ISNULL) WHEN '' COLLATE NOCASE THEN ((((((((NULL)OR('b禟')))OR(NULL)))OR('874997090')))AND(1.06079824E9)) ELSE ((x'')AND(0.8904055092326295)) END); -- 0ms;
SELECT ALL LAST_VALUE(((x'164f' COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) OVER (), ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.09381987015171134 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '1514346235' THEN vt1.c0 END) ISNULL), ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0) IS FALSE))) FROM vt1 WHERE (CASE WHEN (('an]g') NOT BETWEEN ('856987057') AND (x'')) THEN CASE WHEN x'' THEN NULL WHEN 681409470 THEN 'an]g' WHEN '622131771' THEN 0xffffffffd4cd9399 ELSE '1060798240' END ELSE CAST('1997446951' AS TEXT) END) ORDER BY (((((vt1.c0))>=((vt1.c0))))>=((- (vt1.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL ((LIKELIHOOD(DISTINCT vt1.c0, 0.7303598783103541)) BETWEEN (((vt1.c0) NOTNULL)) AND ((vt1.c0 IN ()))) FROM vt1 WHERE (0.8515278703922748); -- 0ms;
SELECT DISTINCT ((((0.7945036953952452)+('-1533699277')))!=(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1; -- 0ms;
SELECT ALL (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((UNLIKELY(DISTINCT vt1.c0), (vt1.c0 IN ()), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND (((vt1.c0 IN ()), vt1.c0, ((vt1.c0)<(vt1.c0))))) FROM vt1; -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY '-1493487127' DESC) FROM vt1 WHERE (CASE (('-444649735')OR(NULL))  WHEN 0X3720024d THEN (('0.7448448572616445')AND(0.833589387435166)) END); -- 0ms;
SELECT ALL (+ (COUNT(*))) FROM vt1; -- 0ms;
SELECT DISTINCT CASE ((vt1.c0) ISNULL)  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) ISNULL) END FROM vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE) NOT BETWEEN ((- (vt1.c0))) AND ((- (vt1.c0)))) FROM vt1; -- 0ms;
SELECT (((COUNT('c*')))<>((CAST(vt1.c0 AS INTEGER)))), (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((load_extension(vt1.c0)))), ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS FALSE))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE ((((1.694631708E9 IN ())) NOTNULL));SELECT ALL 0.082639933457901 FROM vt1; -- 0ms;
SELECT DISTINCT -724724839 FROM vt1; -- 0ms;
SELECT ALL ((('oy*k*歋' IN ()))=(((((0.9502204227567104)AND(vt1.c0)))OR(vt1.c0)))) FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE) ASC; -- 0ms;
SELECT DISTINCT (- (vt1.c0 COLLATE NOCASE)) FROM vt1 ORDER BY ((((vt1.c0) IS FALSE)) NOT NULL)  NULLS FIRST, CAST((((x''))>((vt1.c0))) AS REAL) ASC; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1 WHERE (((CASE WHEN NULL THEN x'' ELSE '㷛\r' END)<=((- (x''))))); -- 0ms;
SELECT ALL TRIM(DISTINCT ((vt1.c0) BETWEEN (0.2507468046244403) AND ('5(,&'))) FROM vt1 WHERE (CAST(((((NULL)AND(0.07916139323199001)))OR(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((('-1875501846')) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(NULL)), (((((vt1.c0)|(874997090)), x'' COLLATE BINARY, ((vt1.c0)|(vt1.c0))))==(((- (vt1.c0)), CAST(vt1.c0 AS TEXT), (1.073029422E9 IN (vt1.c0))))), CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN vt1.c0 COLLATE NOCASE END FROM vt1; -- 1ms;
SELECT DISTINCT SUM(((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) FROM vt1; -- 0ms;
SELECT ALL (vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((((((NULL)OR(vt1.c0)))OR(vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'f528')))))), CAST('874997090' AS REAL) FROM vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(((HEX(vt1.c0))!=(((((vt1.c0)OR(NULL)))OR(vt1.c0))))) OVER (), ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN ()))), LIKE(x'', TOTAL(vt1.c0)), CAST(AVG(',}r	儚') AS TEXT), vt1.c0 FROM vt1 GROUP BY -666939443, ((TYPEOF(vt1.c0))-(6.22131771E8)), ((NOT (vt1.c0)) IN ((+ (x'')))), json_type(NULL), '269685547' HAVING ((GROUP_CONCAT(vt1.c0)) IS FALSE);SELECT DISTINCT LOWER((NOT (vt1.c0))), ((((vt1.c0)>>(vt1.c0))) IS TRUE), (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0)*(vt1.c0)))) FROM vt1; -- 0ms;
SELECT ALL (((- (vt1.c0)))AND(SUM(vt1.c0))) FROM vt1 WHERE (((x'') NOTNULL) COLLATE BINARY) GROUP BY (((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, '-1602693156'))))OR((x'' IN ()))))AND(((vt1.c0)||(vt1.c0)))); -- 0ms;
SELECT DISTINCT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) IN (COALESCE(DISTINCT vt1.c0, 0.24581196692058094), vt1.c0)) FROM vt1; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))<>('9KC89' COLLATE BINARY)) FROM vt1; -- 0ms;
SELECT ALL AVG(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) FROM vt1 WHERE (((((IFNULL(DISTINCT x'', 0.8844786546120436))AND((('1810207265')||(NULL)))))OR('yB￿n4H' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT NULL, ((CAST(vt1.c0 AS REAL))/(vt1.c0)), (NOT (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0)>=(x''))) NOT NULL) FROM vt1 ORDER BY CAST(((vt1.c0)OR(vt1.c0)) AS INTEGER), ((IFNULL(vt1.c0, vt1.c0))IS NOT(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))); -- 0ms;
SELECT ALL AVG(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT CASE ((vt1.c0)LIKE(vt1.c0))  WHEN TOTAL(vt1.c0) THEN TOTAL(vt1.c0) WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (~ (vt1.c0)) THEN ((vt1.c0)IS NOT(vt1.c0)) END FROM vt1 WHERE (CAST((NULL IN (NULL)) AS TEXT)); -- 0ms;
SELECT ALL CASE vt1.c0  WHEN ((vt1.c0) IS TRUE) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '' END ELSE ((vt1.c0)>=(vt1.c0)) END, LAG(vt1.c0, ((((vt1.c0)>=(vt1.c0)))|(((vt1.c0)*('-666939443')))), (~ ('(+'))) OVER (), vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT 0X3ff5212e FROM vt1 INTERSECT SELECT ALL (vt1.c0 IN (x'')) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)IS(vt1.c0)))*((- (vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)*(vt1.c0)))&(((((vt1.c0)OR(x'9204')))OR(vt1.c0)))) FROM vt1 WHERE (CAST('Q?ᘼQ' AS BLOB)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.17924840872014114))), GROUP_CONCAT((((vt1.c0))=((vt1.c0)))) OVER ( ROWS (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) PRECEDING), (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL), RANK() OVER ( ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((0x3468eb0)IS(vt1.c0)))))OR(((vt1.c0)/(vt1.c0))))), RANK() OVER ( ORDER BY ((vt1.c0) NOT NULL) DESC) FROM vt1 WHERE ((((('j ퟜ#WJ')<(NULL)))<=(1997446951 COLLATE NOCASE)));SELECT DISTINCT CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(0.5325682972452808)) AS TEXT) FROM vt1 WHERE ((((((0.4301550917446211) NOT NULL), (NOT (0.9322129316743989)), x''))<=(('p+7␅d74#' COLLATE NOCASE, ((NULL) BETWEEN ('') AND ('874997090')), NULL COLLATE NOCASE)))); -- 1ms;
SELECT DISTINCT CASE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN '-1709406647' ELSE CAST(vt1.c0 AS NUMERIC) END FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c0))) NOT NULL)  NULLS LAST; -- 0ms;
SELECT ALL COUNT(*) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM vt1 GROUP BY CAST(((vt1.c0)/(vt1.c0)) AS TEXT) HAVING vt1.c0; -- 0ms;
SELECT ALL TOTAL(NULLIF(vt1.c0, vt1.c0)) COLLATE NOCASE FROM vt1 WHERE ((((((NULL IN (x'')))OR(((x'')OR(NULL)))))AND(((0.9502204227567104) IS TRUE)))) GROUP BY ((((vt1.c0)OR(vt1.c0))) IS FALSE); -- 0ms;
SELECT ALL TOTAL(x'2dc5') OVER () FROM vt1 WHERE (UNLIKELY(((0.7899641012973868)IS NOT('-0.0')))); -- 0ms;
SELECT MAX(CAST(vt1.c0 AS BLOB)) FROM vt1 WHERE (''); -- 0ms;
SELECT ALL (+ ((vt1.c0 IN (vt1.c0)))), '250604273', COUNT(*) OVER () FROM vt1 WHERE (((((((NULL)OR(x'')))OR(x'8464')))>>(((((0x2dedbd0d)OR(0.01394355859701446)))OR('Q?ᘼQ'))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1; -- 1ms;
SELECT DISTINCT CAST(('1d* 7⃤' IN ()) AS NUMERIC), NULL COLLATE RTRIM, ((CAST(vt1.c0 AS REAL)) ISNULL) FROM vt1; -- 0ms;
SELECT (('-662570427') IS TRUE), ((vt1.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((NULL)GLOB(vt1.c0)))), (((vt1.c0))>=((-1.493487127E9))) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)!=(vt1.c0)))<('DZ')), (((vt1.c0))<((vt1.c0))) COLLATE BINARY, 0.9698650540362732 FROM vt1 WHERE ((NULL IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM(((vt1.c0)<=(vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT ALL ((((((((CAST(vt1.c0 AS INTEGER))AND(UPPER(DISTINCT vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0)/(vt1.c0)))))OR(MAX(x''))), vt1.c0, (((vt1.c0 IN (vt1.c0))) NOT NULL) FROM vt1; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt1 WHERE ((((+ (NULL))) BETWEEN (x'' COLLATE RTRIM) AND ((- (x'ae42e700'))))); -- 0ms;
SELECT ALL UNLIKELY(((vt1.c0)AND(vt1.c0))) FROM vt1 WHERE ((((('SOd3}{') NOT BETWEEN ('j礪W\r[.E[P') AND (x''))) NOT BETWEEN (((NULL)GLOB(NULL))) AND ('{}'))); -- 0ms;
SELECT DISTINCT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0)||(vt1.c0)))) FROM vt1 GROUP BY LOWER(vt1.c0) COLLATE NOCASE HAVING ((SQLITE_COMPILEOPTION_GET(vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
SELECT ALL (((vt1.c0 IN ()))==(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)), ((((vt1.c0)OR(ABS(vt1.c0))))AND(799707304 COLLATE RTRIM)), ((vt1.c0)LIKE(x'df17')) COLLATE RTRIM FROM vt1 WHERE ((((('Gdi%{t')>=('-1709406647'))) BETWEEN ((0X6faf1bac IN ())) AND (((x'') ISNULL)))); -- 0ms;
SELECT ((((((x'') ISNULL))OR(((vt1.c0) IS TRUE))))OR(((((vt1.c0)AND(vt1.c0)))OR(x'')))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)<=(vt1.c0))) ISNULL), (((((((((+ (vt1.c0)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(x'')))OR('')))OR((vt1.c0 IN (vt1.c0)))), ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) IS FALSE) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0, RANK() OVER (), (+ (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR('708398148')))AND(vt1.c0)))OR(vt1.c0)))) FROM vt1 WHERE (((((271971206 COLLATE BINARY)OR(json_quote(x''))))AND(LIKE(NULL, NULL)))); -- 1ms;
SELECT DISTINCT COUNT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM, GROUP_CONCAT(UNLIKELY(vt1.c0)), ((NOT (x'')) IN (((vt1.c0)%(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT (~ (CASE vt1.c0  WHEN NULL THEN vt1.c0 END)) FROM vt1 WHERE ((((((x'')OR(907779733)))OR(x'2dcf')) IN ())); -- 0ms;
SELECT DISTINCT ((((NULL) IS FALSE)) NOT NULL) FROM vt1 WHERE ((((('1060798240') IS FALSE))*((- (-1.996260961E9))))) GROUP BY (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((TRIM(vt1.c0, vt1.c0), vt1.c0 COLLATE BINARY, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0)), (vt1.c0 IN ()))) AND ((((vt1.c0) NOT BETWEEN (-6.62570427E8) AND (NULL)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)GLOB(vt1.c0)), (~ (vt1.c0)), json_extract(vt1.c0, vt1.c0, vt1.c0, vt1.c0)))), ((((vt1.c0)IS(vt1.c0)))IS((vt1.c0 IN (vt1.c0)))), (NOT (((NULL)+(vt1.c0)))) LIMIT 909064093 OFFSET -1; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN (vt1.c0))) IS FALSE) FROM vt1 WHERE ((((NULL)/(NULL)) IN ())); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (((((((((((vt1.c0, vt1.c0, vt1.c0))>=((vt1.c0, x'87c9c8e4', vt1.c0))))AND(((vt1.c0)AND(vt1.c0)))))OR((~ (vt1.c0)))))OR(CASE 0.7164242465004329  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR((((vt1.c0))=((vt1.c0))))) FROM vt1 WHERE (((((((0.34808982623979934)OR(0.5019277227125378)))OR('-1298086431'))) BETWEEN (((((0Xffffffffaf6f19fd)AND('-862996853')))AND(''))) AND (((0.24581196692058094) NOT BETWEEN (0.2449436454059385) AND (x'e34e'))))); -- 0ms;
SELECT DISTINCT ((vt1.c0)<(((vt1.c0)%(vt1.c0)))), (- (((vt1.c0)<(vt1.c0)))), TOTAL(COUNT(((vt1.c0) NOTNULL))) FROM vt1 WHERE (((NULL COLLATE NOCASE)-(CASE '1514346235'  WHEN 1.997446951E9 THEN 'r''mp' END)));SELECT ALL x'' FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)*(vt1.c0))) IS FALSE), ((+ (vt1.c0)) IN ()), FIRST_VALUE(TRIM((NOT (vt1.c0)))) OVER ( ORDER BY CASE WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0) IS FALSE) THEN ((vt1.c0)==(vt1.c0)) WHEN CAST(vt1.c0 AS BLOB) THEN SQLITE_SOURCE_ID() ELSE (vt1.c0 IN ()) END DESC  NULLS LAST) FROM vt1; -- 0ms;
SELECT ((vt1.c0 COLLATE NOCASE) BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (CAST(vt1.c0 AS REAL))) FROM vt1 WHERE ((((x'0003')) BETWEEN (((('5(,&') NOT BETWEEN ('') AND (x'')))) AND (((NOT ('')))))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT (- (((vt1.c0)/(vt1.c0)))), ((CAST(vt1.c0 AS REAL)) ISNULL), ((((NULL)OR(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) FROM vt1 WHERE ((((((((((((((NULL IN ()))AND(CASE WHEN '' THEN NULL END)))OR(NULL)))OR(((0x2e5081fa) NOTNULL))))OR(load_extension(x''))))AND((0.22277685059793528 IN ('Ap')))))OR(('-1522122303' IN ())))); -- 0ms;
SELECT ((AVG(vt1.c0))+(GROUP_CONCAT(vt1.c0))) FROM vt1 WHERE (('2116522036' COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT (CAST(vt1.c0 AS TEXT) IN ()) FROM vt1 WHERE ((x'' COLLATE RTRIM IN ())); -- 0ms;
SELECT ALL ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL), CAST(GROUP_CONCAT(vt1.c0) AS BLOB), ((((((vt1.c0)*(vt1.c0)))AND(((vt1.c0) ISNULL))))AND((vt1.c0 IN ()))) FROM vt1 WHERE ((('-862996853') BETWEEN (x'') AND ('0.20155107512271997')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST(0.7429689634136794 AS NUMERIC) FROM vt1 WHERE (((((x'') NOTNULL))*(x'e55c'))) LIMIT -1996260961; -- 0ms;
SELECT CAST((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AS REAL), ((SUM(vt1.c0)) IS FALSE), CAST((NOT (vt1.c0)) AS INTEGER) FROM vt1 WHERE (((CASE x'8e2c'  WHEN 924844621 THEN NULL WHEN '1369130314' THEN -2.052810453E9 WHEN x'' THEN x'' ELSE 1.810207265E9 END)-(TRIM(x'')))) LIMIT -1760863535 OFFSET -670301167; -- 0ms;
SELECT ALL (~ (vt1.c0)) COLLATE NOCASE FROM vt1 WHERE ('~7B}''H-'); -- 0ms;
SELECT DISTINCT (x'19fb' IN ()) FROM vt1 WHERE (((('')) NOT BETWEEN (((((0xffffffffde00ff17, 0.3945686755814828, 0.4236297545396809))>=((0.5178345881497081, NULL, x'8d21'))))) AND ((((1280978577) NOT BETWEEN (x'') AND (0.3024566852658819)))))); -- 0ms;
SELECT ALL CASE CAST(vt1.c0 AS BLOB)  WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN (NOT (vt1.c0)) THEN '-2074071698' WHEN (~ (vt1.c0)) THEN vt1.c0 ELSE x'' END FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0)<=(vt1.c0)))*(vt1.c0 COLLATE RTRIM)) FROM vt1 ORDER BY STRFTIME((((x'', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) ISNULL), (('gD') IS TRUE), vt1.c0, (~ (NULL))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((('735311094') IS TRUE) IN ())); -- 0ms;
SELECT ALL ((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))GLOB((vt1.c0 IN (vt1.c0)))), vt1.c0, ((((vt1.c0)+(vt1.c0))) NOT NULL) FROM vt1 WHERE (ABS(((7.70555149E8) ISNULL))) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT AVG('FALSE') OVER () FROM vt1 WHERE ((('gl')+(('1700111133' IN ())))); -- 0ms;
SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0, ((((CASE WHEN vt1.c0 THEN vt1.c0 END)OR((~ (vt1.c0)))))AND(CAST(vt1.c0 AS TEXT))), ((CASE vt1.c0  WHEN vt1.c0 THEN x'30e8' END) ISNULL) FROM vt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((x'e835d3f3') NOT BETWEEN (x'') AND (vt1.c0)) THEN (vt1.c0 IN ()) ELSE (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) END, ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ('819713525', ABS(DISTINCT vt1.c0))), (((ABS(DISTINCT vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), '1363929272'))>((vt1.c0, ((((vt1.c0)AND('}/')))AND(vt1.c0)), ((vt1.c0) NOTNULL)))) FROM vt1 WHERE (NULL) LIMIT 1810207265; -- 0ms;
SELECT DISTINCT CAST(json_array_length(vt1.c0) AS NUMERIC) FROM vt1 UNION SELECT vt1.c0 FROM vt1;SELECT DISTINCT CAST((vt1.c0 IN (vt1.c0, vt1.c0)) AS NUMERIC) FROM vt1 WHERE (((TRIM(DISTINCT 0.3945686755814828, 0.9074453323877423))&((x'' IN ())))) ORDER BY ((((((vt1.c0)+(vt1.c0)))OR(0.9762526562854728)))AND('-1709406647')) DESC  NULLS FIRST; -- 0ms;
SELECT (~ (TIME(vt1.c0, vt1.c0, vt1.c0))) FROM vt1 WHERE (NULL); -- 0ms;
SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0)) FROM vt1 WHERE (DATE((~ (0.3286829409553843)), CAST('(In)' AS REAL), (x'c38ed416' IN ()))) GROUP BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))<=((vt1.c0 IN (vt1.c0)))) HAVING vt1.c0; -- 0ms;
SELECT DISTINCT ((0.8160460800529946)==(((vt1.c0)=(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT ((SQLITE_VERSION())>>(((vt1.c0)<=(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) FROM vt1 GROUP BY (- (((vt1.c0)*(vt1.c0)))) HAVING ((vt1.c0)*(vt1.c0)) COLLATE RTRIM; -- 0ms;
SELECT ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))LIKE(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1 WHERE (((('*z' IN ('-2027727515', 0.4984912492846376))) NOT BETWEEN ((- (x''))) AND ('bl'))) ORDER BY (UNLIKELY(vt1.c0) IN ()); -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 ELSE ((1652826461)+(vt1.c0)) END, GROUP_CONCAT(((vt1.c0) IS TRUE)) OVER (), NTH_VALUE(0.7030049497821182, CAST(vt1.c0 COLLATE BINARY AS NUMERIC)) OVER ( ORDER BY (- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0X7978c74a)))) DESC  NULLS LAST), (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>=((((vt1.c0) IS TRUE)))), LIKELIHOOD(((vt1.c0)<=(vt1.c0)), 0.42515732471533185) FROM vt1;SELECT ALL COUNT(*) COLLATE BINARY FROM vt1 LIMIT 1843721003; -- 1ms;
SELECT ALL (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((+ (vt1.c0)))) FROM vt1 WHERE ((~ (((-795586005) IS FALSE)))); -- 0ms;
SELECT ((vt1.c0) IS FALSE), CASE WHEN (vt1.c0 IN ()) THEN NULL ELSE (NOT (vt1.c0)) END, (~ (COUNT(0.7726995913720469))) FROM vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) FROM vt1 WHERE ((- ((((NULL))=((x'')))))); -- 0ms;
SELECT ((((((vt1.c0))>((vt1.c0)))))>((CAST(vt1.c0 AS REAL)))) FROM vt1 GROUP BY (LOWER(vt1.c0) IN (((vt1.c0)>>(vt1.c0)))) HAVING ((GROUP_CONCAT(vt1.c0)) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (NULL COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT vt1.c0, RANK() OVER (), CASE WHEN MIN(vt1.c0) THEN ((((vt1.c0)OR('-1400405250')))OR(vt1.c0)) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN x'c6d245c6' WHEN ((vt1.c0) NOT BETWEEN ('250604273') AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END END, CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC), (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) FROM vt1 WHERE ((CASE WHEN '' THEN 1.363929272E9 ELSE x'ee06' END IN ((NULL IN ())))); -- 4ms;
SELECT ALL ((((vt1.c0 COLLATE RTRIM)AND((vt1.c0 IN ()))))AND(LIKELY(vt1.c0))) FROM vt1; -- 1ms;
SELECT ALL '', GROUP_CONCAT(((NULL)<<(vt1.c0))) OVER (), IFNULL(NULL, (+ (vt1.c0))) FROM vt1 WHERE ((((NULL IN (NULL, 'Ds['))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((((vt1.c0)OR(((vt1.c0)<=(vt1.c0)))))OR(0.7269908286161685)))OR((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)), 'B]5<>d#w', CAST(((vt1.c0) IS TRUE) AS BLOB) FROM vt1 UNION SELECT DISTINCT ((vt1.c0) BETWEEN (-1007859944) AND ((((vt1.c0))!=((vt1.c0))))), CASE WHEN (NOT (vt1.c0)) THEN SUBSTR(vt1.c0, NULL) END, CAST(vt1.c0 AS TEXT) FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0) IS TRUE))%(vt1.c0)) FROM vt1 WHERE (LIKELIHOOD(DISTINCT ((('')) BETWEEN ((NULL)) AND ((NULL))), 0.785528193951898)) ORDER BY ((vt1.c0)<('Th')) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC) FROM vt1 WHERE (CAST(0.9680973290695989 AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0)*(vt1.c0)) THEN ((NULL) NOT NULL) WHEN -1298086431 THEN (NOT (vt1.c0)) WHEN ((vt1.c0)<(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE vt1.c0 COLLATE BINARY END, (vt1.c0 COLLATE RTRIM IN (vt1.c0, (~ (vt1.c0)))), CAST(x'31a5' AS NUMERIC) FROM vt1 GROUP BY ((((vt1.c0)>(vt1.c0))) BETWEEN (ABS(vt1.c0)) AND ((NOT (vt1.c0)))) HAVING ((vt1.c0)%(0x5c44163c)); -- 0ms;
SELECT DISTINCT ((((((vt1.c0) IS TRUE))OR('')))AND(((vt1.c0)AND(0Xcecabf1)))) FROM vt1 LIMIT -1605567520 OFFSET -167392365; -- 0ms;
SELECT ALL ((((vt1.c0)AND(vt1.c0)))/(((vt1.c0) IS TRUE))) FROM vt1; -- 0ms;
SELECT TOTAL(MIN(vt1.c0)) COLLATE NOCASE FROM vt1 WHERE (((((('-2039687414', '118848143', 0.4248639793315425))<=((0Xffffffffa7d02adf, 't 3', NULL)))) NOT NULL));SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE), ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0) AND ((((vt1.c0, vt1.c0, vt1.c0, '1873746860', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '_723'))))), ((((vt1.c0) NOT NULL)) NOT BETWEEN (vt1.c0) AND ((NULL IN ()))) FROM vt1 GROUP BY ((CASE WHEN NULL THEN vt1.c0 END)&(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)); -- 0ms;
SELECT DISTINCT ((((((((CAST(0x7a0244e6 AS INTEGER))AND(((vt1.c0) BETWEEN (x'ae0f8ba1') AND (vt1.c0)))))AND(COALESCE(vt1.c0, x'7bc5', vt1.c0, vt1.c0, vt1.c0, vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN NULL END THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN COUNT(vt1.c0) WHEN ((vt1.c0)IS(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN NULL THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END, vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT (NOT ((vt1.c0 IN (vt1.c0)))) FROM vt1 WHERE (((((('-9223372036854775808') IS TRUE), ((0.7030049497821182)|(NULL)), ((0.6255971787483624) BETWEEN (NULL) AND (1501755676))))>=((COALESCE('n^', '-992702216'), (+ (0Xfffffffffca2c9e6)), (('')!=(x'')))))); -- 0ms;
SELECT ALL CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6200415479701507 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'B3tDcm*#' END COLLATE BINARY FROM vt1; -- 0ms;
SELECT ((vt1.c0 COLLATE NOCASE)|(CAST(vt1.c0 AS BLOB))) FROM vt1 WHERE (CASE ((((x'')AND(x'')))AND('3'))  WHEN ((NULL) ISNULL) THEN x'adda' COLLATE NOCASE ELSE (((NULL))=((NULL))) END); -- 0ms;
SELECT (+ (((vt1.c0) NOT NULL))), (((NOT (vt1.c0)))|(8.19713525E8)), COUNT(((0.672250813778927)LIKE(vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (- (vt1.c0)) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ALL CAST(vt1.c0 AS TEXT) COLLATE RTRIM, CASE WHEN vt1.c0 THEN TRIM(DISTINCT vt1.c0) END, (((vt1.c0 IN ())) NOT NULL) FROM vt1 WHERE (((((((NULL)LIKE(x'')))AND(((0.6164882176216777) BETWEEN (x'') AND (0X899b811)))))OR(((('-724724839'))<((x'')))))); -- 1ms;
SELECT DISTINCT ((0xffffffffe66dda03)+(vt1.c0)) COLLATE BINARY FROM vt1 LIMIT -925269419 OFFSET 819713525; -- 0ms;
SELECT ALL ((RTRIM(vt1.c0))AND((+ (vt1.c0)))) FROM vt1 WHERE (CASE WHEN 0.2580928368742348 COLLATE RTRIM THEN x'' COLLATE BINARY END); -- 0ms;
SELECT ALL LIKELY((vt1.c0 IN (vt1.c0))), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, (vt1.c0 IN (vt1.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((COUNT(vt1.c0), COUNT(*), LOWER(DISTINCT vt1.c0)))), GROUP_CONCAT(CASE vt1.c0  WHEN vt1.c0 THEN 0.22686038215087645 ELSE vt1.c0 END) OVER () FROM vt1; -- 0ms;
SELECT ALL COUNT(vt1.c0 COLLATE NOCASE) COLLATE NOCASE FROM vt1 ORDER BY ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0 COLLATE BINARY)) ASC, 0xffffffffd03cbfce DESC; -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT DISTINCT (MIN(vt1.c0) IN ()), (((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(8.56987057E8))) AND (((NULL) NOT NULL))), (((NOT ('-1539550950')))&('years')), CASE ((vt1.c0)-(vt1.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0)+(vt1.c0)) END, (((((((('R\ro~#YFr' COLLATE NOCASE)OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)||(vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))))AND(GROUP_CONCAT(vt1.c0))) FROM vt1 WHERE (CASE ((x'')/(NULL))  WHEN ((('(6'))>=((0x2dedbd0d))) THEN json_array_length(x'e54d', x'') ELSE (((0.8730583867091646)) BETWEEN (('jc.i鎗P,y')) AND ((NULL))) END) ORDER BY ((vt1.c0)>=(vt1.c0)) COLLATE BINARY  NULLS LAST, (((~ (vt1.c0))) NOTNULL)  NULLS LAST, ((('읊wmAqw51r', vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE NOCASE, ((vt1.c0) IS FALSE), ((vt1.c0)>=(vt1.c0)))) AND ((((vt1.c0)|(vt1.c0)), vt1.c0 COLLATE BINARY, TIME(vt1.c0, '', vt1.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT (- (CAST(vt1.c0 AS INTEGER))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(TOTAL(vt1.c0) AS BLOB) FROM vt1; -- 0ms;
SELECT ALL ((x'd587')OR(((vt1.c0) ISNULL))), (((CAST(vt1.c0 AS TEXT)))!=((CASE WHEN vt1.c0 THEN vt1.c0 END))), CAST(MAX(vt1.c0) AS NUMERIC), ((((vt1.c0)|(vt1.c0)))>=(0.010734089914384848)), ((((vt1.c0)<=(vt1.c0))) IS TRUE) FROM vt1 WHERE (IFNULL(DISTINCT (('gRL现UBu)')OR('鎿/')), (NULL IN ('1256810824', '-1332470983')))) GROUP BY (((vt1.c0 IN (vt1.c0, vt1.c0)))>(CAST(vt1.c0 AS INTEGER))), (((vt1.c0 IN ()))>>((vt1.c0 IN ()))), (((~ (vt1.c0))) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS INTEGER))); -- 0ms;
SELECT DISTINCT LAST_VALUE(LIKELY((((vt1.c0))>((vt1.c0))))) OVER ( GROUPS vt1.c0 PRECEDING EXCLUDE NO OTHERS), ((MIN(vt1.c0)) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(vt1.c0)) AND (((((vt1.c0)OR(NULL)))OR(vt1.c0)))), NULL FROM vt1;SELECT (vt1.c0 IN (CAST(vt1.c0 AS TEXT))) FROM vt1; -- 0ms;
SELECT ALL ((vt1.c0 COLLATE RTRIM)IS NOT((NOT (vt1.c0)))) FROM vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt1 WHERE ((('' COLLATE NOCASE)||((((x'79fa')) NOT BETWEEN (('-682462053')) AND ((0.06451483261913282)))))) ORDER BY ((vt1.c0)||(vt1.c0)) COLLATE NOCASE DESC, CASE WHEN (- (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END  NULLS FIRST; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))!=(vt1.c0 COLLATE BINARY)), (((vt1.c0)>>(vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1; -- 0ms;
SELECT vt1.c0, (~ (CAST(vt1.c0 AS REAL))), ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((vt1.c0)&(vt1.c0)))) FROM vt1 WHERE (((('-1779093249') NOT BETWEEN ('0.3286829409553843') AND (x'06a3')) IN (((0X34e413d0)IS NOT(-1.493487127E9))))); -- 0ms;
SELECT COUNT(vt1.c0) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (LIKELY(vt1.c0) IN (((vt1.c0) IS FALSE))), ((((vt1.c0) NOTNULL))GLOB('-444649735')), ((vt1.c0)+(vt1.c0)) COLLATE RTRIM FROM vt1 WHERE (CASE ((NULL)%(-9.92702216E8))  WHEN UPPER(DISTINCT x'') THEN x'4a86' COLLATE BINARY WHEN (('1992126886') BETWEEN (NULL) AND (0.9322129316743989)) THEN 0.033294949677183494 COLLATE NOCASE WHEN (('1499596867')GLOB(NULL)) THEN (x'16c3' IN (NULL)) WHEN (('0.17924840872014114') IS FALSE) THEN HEX('-1298086431') WHEN '䪐TzGH' COLLATE NOCASE THEN (('-1479529761')|(-1882127351)) END); -- 1ms;
SELECT SQLITE_SOURCE_ID() FROM vt1 ORDER BY HEX((((vt1.c0, vt1.c0, '-429008381')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))  NULLS LAST LIMIT 1652063309; -- 0ms;
SELECT vt1.c0, ((((((vt1.c0)IS(vt1.c0)))AND(vt1.c0)))OR(CAST(vt1.c0 AS INTEGER))), NULLIF(DISTINCT vt1.c0 COLLATE RTRIM, vt1.c0) FROM vt1; -- 0ms;
SELECT ALL ((vt1.c0)<((NOT (vt1.c0)))) FROM vt1 WHERE ((((NULL) BETWEEN (NULL) AND (0.13996818855832138)) IN ('1882745675'))) ORDER BY CAST(((vt1.c0) IS TRUE) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT MAX((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)GLOB(vt1.c0)), vt1.c0 COLLATE NOCASE, (+ (vt1.c0)), ((vt1.c0)||(vt1.c0)), (- (NULL))) FROM vt1; -- 0ms;
SELECT DISTINCT ((ABS(vt1.c0))*(((vt1.c0)!=(vt1.c0)))) FROM vt1 GROUP BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE RTRIM) AND (TRIM(vt1.c0))); -- 0ms;
SELECT DISTINCT CASE WHEN NULL COLLATE NOCASE THEN vt1.c0 COLLATE NOCASE END FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (x'6509'); -- 0ms;
SELECT COUNT(*) OVER () FROM vt1 LIMIT 590029028 OFFSET -666939443; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT NULL), ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) COLLATE BINARY, vt1.c0 FROM vt1 WHERE ((((0.8047439001601455)) NOT BETWEEN (((((-2027727515, '9kc89', NULL))!=((NULL, '-1711884819', 622131771))))) AND ((496763525 COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT MIN(((vt1.c0)-(vt1.c0)), MAX(vt1.c0), (- (vt1.c0)), (((vt1.c0))>=((vt1.c0)))), (NOT (((vt1.c0)%(vt1.c0)))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOTNULL) FROM vt1 GROUP BY UPPER(DISTINCT ((((((((vt1.c0)AND(0xffffffffb27ab14c)))OR(0.4301550917446211)))OR(vt1.c0)))OR(vt1.c0))) HAVING -1400405250; -- 0ms;
SELECT DISTINCT (((((vt1.c0))<=((vt1.c0)))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((vt1.c0)>=(vt1.c0)))), ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND('1-500000')))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))LIKE((0.30402171470269124 IN (vt1.c0)))), NTILE(((((+ (vt1.c0))))!=((((vt1.c0)>(NULL)))))) OVER () FROM vt1 GROUP BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)!=((- (vt1.c0)))) HAVING CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM;SELECT ALL CASE COUNT(*)  WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN '735311094' END WHEN ((vt1.c0)<=(vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END FROM vt1 WHERE (CAST((((0.5565291831533168)) BETWEEN ((7.99707304E8)) AND (('1514346235'))) AS INTEGER)); -- 0ms;
SELECT ALL CAST(((vt1.c0)||(vt1.c0)) AS BLOB), (((vt1.c0)LIKE(vt1.c0)) IN ()), TOTAL(NULL) OVER ( ORDER BY ((((vt1.c0) ISNULL))IS NOT(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(x'7277')))OR(vt1.c0)))) ASC), 0Xffffffffba2caf93, ((((vt1.c0) NOT NULL))|((((vt1.c0, vt1.c0, vt1.c0))>=((0.04679855737800409, vt1.c0, x'711e'))))), CAST(((vt1.c0)LIKE(vt1.c0)) AS TEXT), TOTAL((vt1.c0 IN (vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0 IN (vt1.c0))))>((((vt1.c0) NOT NULL)))) FROM vt1; -- 0ms;
SELECT ALL CASE WHEN x'' THEN vt1.c0 COLLATE NOCASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) WHEN (('\r2') BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE vt1.c0 END FROM vt1 WHERE (((('2023288820')) NOT BETWEEN ((((0.672250813778927) BETWEEN (874997090) AND (0.3271834126058556)))) AND ((CASE WHEN NULL THEN NULL WHEN -1737478717 THEN NULL WHEN x'' THEN '' END)))); -- 0ms;
SELECT ALL ((vt1.c0 COLLATE BINARY)-(TOTAL(vt1.c0))), ((((((((((((UPPER(DISTINCT vt1.c0))OR(CAST(vt1.c0 AS INTEGER))))AND((vt1.c0 IN (vt1.c0, vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR((vt1.c0 IN ()))))AND(SQLITE_VERSION())))OR(((vt1.c0)&(vt1.c0)))), vt1.c0 FROM vt1 WHERE (((681409470) BETWEEN ('251522931') AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT NULL FROM vt1; -- 0ms;
SELECT GROUP_CONCAT(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND (((vt1.c0 IN ())) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0)) FOLLOWING EXCLUDE GROUP), SUM(vt1.c0 COLLATE NOCASE COLLATE BINARY), ((TOTAL_CHANGES()) BETWEEN (NULL) AND ((vt1.c0 IN ()))), (428093557 IN ()), vt1.c0 FROM vt1 WHERE (('790336407' COLLATE NOCASE IN ()));SELECT 0.5215004511035518 FROM vt1; -- 0ms;
SELECT QUOTE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) FROM vt1 WHERE (((NULL COLLATE BINARY) IS FALSE)) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) IS FALSE) END DESC, ((((((vt1.c0)LIKE(vt1.c0)))AND(((vt1.c0)&(vt1.c0)))))AND(CAST(vt1.c0 AS BLOB))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(CAST(vt1.c0 AS REAL))), JULIANDAY(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS NUMERIC), (NOT (vt1.c0))), ROW_NUMBER() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0, (- (((vt1.c0)GLOB(vt1.c0)))), x'0d28' FROM vt1 ORDER BY vt1.c0 ASC  NULLS FIRST, ((((+ (vt1.c0))))!=((SUBSTR(vt1.c0, vt1.c0)))); -- 0ms;
SELECT ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))IS NOT((~ (vt1.c0)))) FROM vt1 WHERE (((((x'3fa2') NOT NULL)) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND (CAST(x'' AS TEXT)))) LIMIT -1605567520; -- 0ms;
SELECT DISTINCT (- (((vt1.c0)%(vt1.c0)))), (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, -270407303, vt1.c0))))>(CAST(vt1.c0 AS NUMERIC))), ((((((((x'6be8')OR((((vt1.c0))>=((vt1.c0))))))OR((vt1.c0 IN ()))))OR((+ (vt1.c0)))))OR('-1662401430')), vt1.c0, ((((vt1.c0)AND(258429180)))OR(MAX(vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT UNLIKELY(0xffffffffc7c64700) FROM vt1 WHERE ((+ (0x44c27021)) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (vt1.c0 IN ()) FROM vt1; -- 0ms;
SELECT ALL COUNT((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) FROM vt1 WHERE ((((((('|,>') NOT BETWEEN (0X34e413d0) AND (0x464337c)))OR(((x'dc21') NOT BETWEEN (x'') AND (NULL)))))OR(((('716237589'))<=((x'')))))); -- 0ms;
SELECT CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c0)>>(vt1.c0)) END FROM vt1 GROUP BY ((((vt1.c0 IN (NULL, vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(NULL AS REAL)))>((CAST(-1.300582068E9 AS TEXT), json_array_length(vt1.c0, vt1.c0), '924844621', ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), vt1.c0))) HAVING (NOT (((vt1.c0) IS TRUE))) LIMIT -1472267899; -- 0ms;
SELECT ALL 0xffffffffabc4e445, ((((((((NULL)OR((('-2039687414')!=(vt1.c0)))))AND(('w~' IN ()))))OR((- (vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))), ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT (((((x'', vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, 0.6402465084716021)))) IS TRUE) FROM vt1 GROUP BY ((NOT (vt1.c0)) IN ()), TRIM(vt1.c0, 1.882745675E9) COLLATE RTRIM, ((((vt1.c0) NOT NULL))||(((vt1.c0)&('')))), (+ ((- (vt1.c0)))), ((NOT (vt1.c0)) IN ()) HAVING vt1.c0; -- 0ms;
SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((+ (vt1.c0)))) FROM vt1 ORDER BY ((((vt1.c0)|(vt1.c0)))||((~ (vt1.c0)))); -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY (NOT (((vt1.c0)==(NULL))))  NULLS FIRST) FROM vt1 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(0x2f1b9397) THEN x'' WHEN CASE WHEN NULL THEN x'8237' WHEN 0Xffffffff99f6b5ed THEN 0xffffffff85a4992b WHEN 0x4d069e04 THEN NULL ELSE '|,>' END THEN TYPEOF(DISTINCT 0Xffffffffead27dbe) WHEN x'c845' COLLATE RTRIM THEN NULL COLLATE RTRIM ELSE CASE '0.8160460800529946'  WHEN -977379460 THEN '' ELSE x'' END END); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT ((vt1.c0) NOTNULL), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))), (~ (((vt1.c0)||(vt1.c0)))), ((((vt1.c0) NOTNULL))GLOB(((vt1.c0)LIKE(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS BLOB) FROM vt1; -- 0ms;
SELECT SUM('0.3271834126058556') OVER () FROM vt1 WHERE ('' COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) ORDER BY NULL DESC; -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS INTEGER) AS REAL) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)<(vt1.c0))) ISNULL) FROM vt1 WHERE (((((2.02328882E9) IS FALSE)) IS FALSE)); -- 0ms;
SELECT ((((vt1.c0) BETWEEN (0.9757669988168772) AND (vt1.c0))) BETWEEN (LOWER(vt1.c0)) AND (GLOB(vt1.c0, vt1.c0))) FROM vt1 WHERE (((('-343605124')*(-9.92702216E8)) IN ())); -- 0ms;
SELECT DISTINCT CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(NULL)))AND(vt1.c0)) AS NUMERIC) FROM vt1 WHERE ((((~ (''))) NOT BETWEEN ((('-960261578')>=(-2124612925))) AND (CASE NULL  WHEN x'9080' THEN '5L' ELSE 'OY*K*歋' END))); -- 0ms;
SELECT DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)>(vt1.c0)))) AND ((((vt1.c0)<(vt1.c0)), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)<<(vt1.c0))))) FROM vt1 WHERE (CAST((~ (NULL)) AS NUMERIC)); -- 0ms;
SELECT ((0.7361897242601312)IS NOT(vt1.c0)), (((CASE WHEN vt1.c0 THEN vt1.c0 END))>=((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))), ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(CAST(vt1.c0 AS REAL))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)&(vt1.c0)))OR(CASE vt1.c0  WHEN 0Xfffffffff6aea99c THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.6599489140148697 END)) FROM vt1; -- 0ms;
SELECT ALL ROUND(((vt1.c0)*(vt1.c0)), NULL) FROM vt1 GROUP BY vt1.c0; -- 0ms;
SELECT ALL (((vt1.c0 IN (vt1.c0)))IS NOT(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0)||(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN (('136253393')) AND ((vt1.c0))) END FROM vt1; -- 0ms;
SELECT CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN vt1.c0 WHEN (vt1.c0 IN (vt1.c0)) THEN 1763743584 COLLATE BINARY END FROM vt1 WHERE (CASE x'ae22'  WHEN CAST(1202213597 AS INTEGER) THEN CASE NULL  WHEN 0.4984912492846376 THEN NULL WHEN '1501755676' THEN NULL WHEN 'q/' THEN x'60d5' END ELSE ('-2027727515' IN ('-2039687414')) END); -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM vt1; -- 0ms;
SELECT ALL ((LOWER(DISTINCT vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(DISTINCT vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT (vt1.c0 IN (vt1.c0)) COLLATE RTRIM FROM vt1 WHERE ((+ (((('-819100726', -2.039687414E9, 1.18848143E8, NULL, NULL)) NOT BETWEEN ((0.5842429456695242, x'2c84', x'', 0.4319891890839972, 0.6453375918010846)) AND ((NULL, NULL, x'2304', 0.8195925023925196, NULL)))))) ORDER BY UPPER(DISTINCT vt1.c0); -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)-(vt1.c0)))) FROM vt1 WHERE ((~ (((NULL)>(908812806))))); -- 0ms;
SELECT ALL (vt1.c0 IN ()) COLLATE BINARY FROM vt1; -- 0ms;
SELECT AVG(x'') OVER (), vt1.c0, COUNT(CAST(vt1.c0 AS REAL)) FROM vt1; -- 0ms;
SELECT DISTINCT (((~ (vt1.c0)))+(CAST(vt1.c0 AS INTEGER))) FROM vt1 ORDER BY json_valid(vt1.c0) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (NOT (CAST(vt1.c0 AS TEXT))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)OR(vt1.c0))) NOTNULL) FROM vt1 WHERE (json_object('-1152445332', ((-1.300582068E9) NOTNULL), ((x'') NOTNULL), (~ (0.6599489140148697)))) GROUP BY '1252241486';SELECT DISTINCT ((vt1.c0 COLLATE BINARY)LIKE((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1 GROUP BY UNICODE(((vt1.c0)>>(vt1.c0))), NULL, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((vt1.c0)<=(vt1.c0)), CAST(vt1.c0 AS TEXT), vt1.c0)) AND ((CAST(vt1.c0 AS REAL), vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))); -- 1ms;
SELECT DISTINCT SUM(((NULL) NOT NULL)) OVER () FROM vt1 WHERE (((((NULL) NOT BETWEEN (267445611) AND (x''))) ISNULL)) GROUP BY 0x2e5081fa, ((((9.09064093E8))>((vt1.c0))) IN (0Xffffffffac8782fe)), 'u0O%v5EO' HAVING json_extract(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((((((('5l')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)));SELECT DISTINCT ')W' FROM vt1 WHERE ((((('')AND(x'')))OR(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((('')AND(NULL)))AND(x'')), (('949170893') IS TRUE), CAST(0.40824856737652526 AS REAL)))<>((CASE WHEN 269685547 THEN NULL ELSE '1652063309' END, ('' IN ()), NULL COLLATE BINARY)))) ORDER BY ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) IS FALSE))), (CAST(vt1.c0 AS NUMERIC) IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT '54955696' FROM vt1 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT DISTINCT (((vt1.c0)=(vt1.c0)) IN ()), vt1.c0, ((((((vt1.c0)|(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)IS('-869475908')))) FROM vt1 NOT INDEXED; -- 0ms;
SELECT ((CAST(vt1.c0 AS NUMERIC))||(((x'') BETWEEN (vt1.c0) AND (0.28633967200083577)))), (((vt1.c0))<>((0.8730583867091646))), CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN vt1.c0 ELSE (vt1.c0 IN ()) END FROM vt1; -- 0ms;
SELECT DISTINCT (((CAST('t1' AS REAL)))==((COUNT(*)))), ((vt1.c0)/(vt1.c0)) COLLATE RTRIM, NTILE(CAST(((vt1.c0)<(vt1.c0)) AS BLOB)) OVER () FROM vt1 WHERE (((((((((((((((NULL)<<(0.8596429363431076)))AND(((NULL)<>('')))))OR(CAST(NULL AS BLOB))))OR((('688286159')*('681409470')))))OR(CAST(x'' AS INTEGER))))OR((- (0.708583205488756)))))AND(((((x'9b64')OR(x'')))AND('#UF')))));SELECT 0X34e413d0, CAST(((vt1.c0) NOTNULL) AS TEXT), 0X2bc23bdc FROM vt1 GROUP BY SQLITE_VERSION(); -- 0ms;
SELECT GROUP_CONCAT(vt1.c0) OVER () FROM vt1 WHERE (-6.66939443E8); -- 0ms;
SELECT DISTINCT (TOTAL(x'') IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS REAL))<<(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST('0.0' AS INTEGER) COLLATE RTRIM COLLATE NOCASE, ((((((vt1.c0) NOTNULL))OR(vt1.c0)))OR(x'')), vt1.c0 FROM vt1 LIMIT 971933232; -- 0ms;
SELECT vt1.c0 FROM vt1 GROUP BY ((x'64f8') ISNULL) COLLATE RTRIM, (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), vt1.c0; -- 0ms;
SELECT LIKELY(DISTINCT (vt1.c0 IN ())) FROM vt1 LIMIT 1256810824; -- 1ms;
SELECT SUM(((vt1.c0)!=(vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT ALL ((vt1.c0)>>(CAST(vt1.c0 AS REAL))), (((((vt1.c0)>=(vt1.c0))))==(((- (vt1.c0))))), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT) FROM vt1 WHERE ((((((x'')LIKE(0.5565291831533168))))==((((((x'')OR(0.8621509650580037)))AND(NULL)))))); -- 0ms;
SELECT ALL vt1.c0, AVG(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) OVER (), (+ (vt1.c0 COLLATE RTRIM)) FROM vt1; -- 0ms;
SELECT DISTINCT (vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT NTILE(((((((((((vt1.c0)IS(vt1.c0)))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(CAST(vt1.c0 AS BLOB))))OR(((vt1.c0)<=(NULL))))) OVER () FROM vt1 WHERE (0.08306685599983987); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT vt1.c0)) ISNULL), TYPEOF(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))), json(((vt1.c0)<(vt1.c0))), CASE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN SUM(vt1.c0) THEN RTRIM(vt1.c0) WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) THEN (- (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (vt1.c0 IN ()) THEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '', vt1.c0))) ELSE vt1.c0 COLLATE RTRIM END, vt1.c0 FROM vt1; -- 1ms;
SELECT DISTINCT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0) IS FALSE))))OR(vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE ((((NULL)) BETWEEN ((CASE 0X717d85b8  WHEN x'8f4f' THEN x'48a1' ELSE '-74633710' END)) AND ((((NULL) IS FALSE))))) LIMIT 469900347; -- 0ms;
SELECT UPPER(DISTINCT vt1.c0) FROM vt1 WHERE (x''); -- 0ms;
SELECT ALL (~ ((vt1.c0 IN (vt1.c0, vt1.c0)))) FROM vt1 ORDER BY vt1.c0; -- 0ms;
SELECT ALL 0.8931007982426632, AVG(((vt1.c0)GLOB(vt1.c0))), COUNT(*) OVER () FROM vt1 WHERE (((NULL) NOT BETWEEN ((('''1') IS TRUE)) AND (x''))); -- 0ms;
SELECT DISTINCT 'B' FROM vt1 WHERE (CAST(7.35311094E8 AS TEXT)); -- 0ms;
SELECT DISTINCT ((((vt1.c0)IS(vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(x'')))AND(''))) AND (((NULL)*(vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL('770555149') OVER ( ORDER BY ((((vt1.c0)<=(0.9501463585551652)))*(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST, ((vt1.c0 COLLATE NOCASE)GLOB(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC) FROM vt1; -- 1ms;
SELECT DISTINCT json((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) FROM vt1 WHERE (((((0.11951002728504401)OR(0.28684504964394153)))OR(0.8283259136561707)) COLLATE NOCASE) LIMIT 1938518320 OFFSET -1025030254; -- 0ms;
SELECT DISTINCT ((((vt1.c0)IS NOT(x'')))<(CASE WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1 WHERE (((((x'') BETWEEN ('924844621') AND (0.5761294037129883)))==((('S2')>(NULL))))); -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN '-501661458' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)>=(MAX(vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT ((vt1.c0) IS FALSE), ((vt1.c0)<>(vt1.c0))) FROM vt1; -- 0ms;
SELECT ALL ((vt1.c0) NOT BETWEEN (0.647811129700363) AND (vt1.c0)) COLLATE BINARY FROM vt1 GROUP BY (NOT (vt1.c0)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)||(vt1.c0)))) FROM vt1; -- 0ms;
SELECT CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS TEXT), CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER), (+ ((((vt1.c0, vt1.c0, vt1.c0))<=((x'', vt1.c0, vt1.c0))))), MAX(vt1.c0) COLLATE RTRIM COLLATE NOCASE, ((((TOTAL(vt1.c0))AND(0.7771803134913615)))AND((vt1.c0 IN (NULL)))) FROM vt1 WHERE ((LIKE(0x551850ff, NULL, '4') IN (((x'')IS(NULL))))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((~ (TYPEOF('-0.0')))); -- 1ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((x''))) FROM vt1 WHERE (((((((x'')AND(x'')))OR(x''))) NOTNULL)) LIMIT 1650908169 OFFSET -519757065; -- 0ms;
SELECT CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(NULL)))OR(vt1.c0)) AS REAL), (((0.9595863322258593) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()), ((((vt1.c0) NOTNULL))>=(vt1.c0)) FROM vt1 WHERE ((((((((NULL))>((NULL))))OR(CAST(0.294358281108161 AS BLOB))))AND(((((1.700111133E9)OR(NULL)))OR(x'b0ac'))))) GROUP BY vt1.c0 COLLATE NOCASE; -- 0ms;
SELECT ALL ((((CAST(x'' AS NUMERIC))AND(vt1.c0 COLLATE NOCASE)))OR(vt1.c0 COLLATE NOCASE)) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((TOTAL(vt1.c0))) AND ((((vt1.c0)<(vt1.c0))))) FROM vt1 WHERE (((((0.520405469037274) IS FALSE)) ISNULL)); -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((((vt1.c0)%(vt1.c0)))) AND ((vt1.c0))) FROM vt1 WHERE (((((NULL)+(x''))) NOT BETWEEN (((NULL) NOTNULL)) AND (1873746860))); -- 0ms;
SELECT x'c1c1' FROM vt1; -- 0ms;
SELECT ALL COUNT((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))), ((vt1.c0 COLLATE RTRIM)<>(((vt1.c0)<<(vt1.c0)))), (~ (vt1.c0)) FROM vt1; -- 0ms;
SELECT TOTAL_CHANGES() FROM vt1 WHERE (((x'' COLLATE NOCASE)/(CAST(x'' AS TEXT)))); -- 1ms;
SELECT LEAD(CAST((vt1.c0 IN ()) AS REAL), ((((((((((((x'')AND(NULL)))OR(((vt1.c0) ISNULL))))AND((vt1.c0 IN ()))))OR((~ (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN x'57058f0d' END)))OR((((0.26819864695938145)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), ((vt1.c0 IN ()) IN ())) OVER () FROM vt1 WHERE (HEX(DISTINCT CASE 'PkYid쮓'  WHEN '-666939443' THEN x'' ELSE x'' END)) LIMIT 622131771; -- 0ms;
SELECT DISTINCT ((0.39428235304813297) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY FROM vt1 WHERE ((((')W', 5.90029028E8, 0X6b18ef88)) NOT BETWEEN (((((-1126498818, 0.6255971787483624, x'a604843f'))>=(('0.0', x'60a2', '909064093'))), (+ (x'')), (- ('&\nbC62c0')))) AND ((TRIM(NULL), ((((((((0.3171574736363306)OR(NULL)))OR(NULL)))AND(5.4955696E7)))AND(-6.70301167E8)), (0.01356077805357181 IN ()))))); -- 0ms;
SELECT (((vt1.c0)>(vt1.c0)) IN ()) FROM vt1 WHERE ((((('0.2507468046244403')GLOB(''))) BETWEEN (((NULL)==(x''))) AND ((NULL IN (x'', NULL))))); -- 0ms;
SELECT ((((vt1.c0) ISNULL)) ISNULL) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0, (('&1ᶿP79\n8')>>((- (vt1.c0)))), ((((vt1.c0 COLLATE RTRIM)AND(((NULL)|(vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), ROW_NUMBER() OVER (), LOWER((vt1.c0 IN ())) FROM vt1 GROUP BY COALESCE(DISTINCT vt1.c0, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0) ISNULL), ((((vt1.c0)OR(x'')))OR(vt1.c0))), (SUBSTR(vt1.c0, vt1.c0) IN ()), CASE (('grl现ubu)')IS NOT(x''))  WHEN ((vt1.c0)IS(x'')) THEN (((vt1.c0))<((vt1.c0))) ELSE (vt1.c0 IN ()) END; -- 1ms;
SELECT DISTINCT 0.28323822392964004 COLLATE NOCASE FROM vt1 WHERE ((CAST('-1332470983' AS TEXT) IN (((((x'')OR(x'')))AND(0.5857348877980656))))); -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) FROM vt1 WHERE ((NULL IN ())); -- 0ms;
SELECT GROUP_CONCAT(((vt1.c0)>(vt1.c0))) COLLATE NOCASE, ((vt1.c0)>=(UPPER(DISTINCT vt1.c0))), ((vt1.c0)/(NULL)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (ABS(-6.82462053E8 COLLATE RTRIM)) LIMIT 342396546; -- 0ms;
SELECT DISTINCT CASE (('%,wʅ\TnT')GLOB(vt1.c0))  WHEN ((x'')/(vt1.c0)) THEN (- (vt1.c0)) END FROM vt1 WHERE ((((NULL IN ()))-(NULL COLLATE BINARY))) GROUP BY (((vt1.c0, (- (vt1.c0)), (vt1.c0 IN ())))<=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, x'', 'B''^s' COLLATE BINARY))) LIMIT 1573630717 OFFSET -1479529761; -- 0ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN (((((vt1.c0))<>((vt1.c0))))) AND ((NULL))) FROM vt1 WHERE (highlight(CAST('1280978577' AS TEXT), (NOT ('SOd3}{')), '-1472267899', (((NULL)) BETWEEN (('-1972560561')) AND ((x'')))));SELECT FIRST_VALUE(CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CAST(vt1.c0 AS TEXT) THEN (((vt1.c0))==((vt1.c0))) WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN 'b''^s' WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) OVER () FROM vt1 WHERE (CAST((('174619788')AND(0X67c85630)) AS BLOB)); -- 1ms;
SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(vt1.c0)))OR((+ (vt1.c0)))) FROM vt1 GROUP BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ((((vt1.c0)) NOT BETWEEN (('')) AND ((vt1.c0))))), (((vt1.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) AND ((((vt1.c0)IS NOT(vt1.c0))))), (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, '479557823')))) BETWEEN ((vt1.c0 IN ())) AND (0.2926773780273828)) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((x'b719') IS TRUE), CASE '[m'  WHEN (~ (x'')) THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)>(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)>=(vt1.c0)) THEN (((vt1.c0))==((vt1.c0))) ELSE (('&F') IS FALSE) END, vt1.c0 FROM vt1 WHERE ((((+ (NULL)))||(((NULL)+(0.03663891052893897))))) GROUP BY LOWER(vt1.c0) HAVING (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ((((vt1.c0))>((vt1.c0))))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((((vt1.c0) IS FALSE)))) ASC; -- 0ms;
SELECT DISTINCT (~ (((216837105)>(vt1.c0)))) FROM vt1 WHERE ((('䟀&g\') ISNULL)); -- 0ms;
SELECT ALL (((((- (vt1.c0)))AND(((vt1.c0)OR(vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1; -- 0ms;
SELECT SUM(LIKE(vt1.c0, vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((COUNT(*), ((vt1.c0) NOT NULL), vt1.c0 COLLATE BINARY)) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), (((vt1.c0 IN ())) NOT NULL), ((json(vt1.c0))<(((vt1.c0)||(vt1.c0)))), CASE WHEN 0.7122160349402378 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE FROM vt1; -- 1ms;
SELECT ALL CASE (- (x''))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END, (~ (NULL)), ((((((((((vt1.c0)|(vt1.c0)))AND(((vt1.c0)%(vt1.c0)))))AND((vt1.c0 IN ()))))OR(x'')))OR(vt1.c0)) FROM vt1 UNION ALL SELECT DISTINCT SUM(((vt1.c0) ISNULL)) OVER (), CAST(vt1.c0 COLLATE RTRIM AS REAL), (SUM(vt1.c0) IN ()) FROM vt1 WHERE (CASE WHEN 1.501755676E9 COLLATE RTRIM THEN TRIM(DISTINCT x'', '-1685146582') ELSE ((('0.6200415479701507'))>((NULL))) END); -- 0ms;
SELECT ALL CAST(((vt1.c0)>(vt1.c0)) AS INTEGER), CAST(TOTAL(vt1.c0) AS REAL), DENSE_RANK() OVER () FROM vt1; -- 0ms;
SELECT (((((vt1.c0) IS TRUE)))<>((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) FROM vt1; -- 0ms;
SELECT (~ (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) FROM vt1 WHERE (((((0.20182219555181347)/(x'')))OR((((('C	')AND(x'd90b')))OR(x''))))); -- 0ms;
SELECT DISTINCT ((((CASE 1.44291857E8  WHEN vt1.c0 THEN vt1.c0 END)OR((NOT (x'')))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1 WHERE ((+ (((0.1217497035259757) NOT BETWEEN (x'') AND (''))))) GROUP BY (((((vt1.c0)<(vt1.c0))))==((((vt1.c0)IS NOT(vt1.c0))))) LIMIT -1521022151 OFFSET -769842873; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt1; -- 1ms;
SELECT ((LIKELIHOOD(vt1.c0, 0.5369822795762587)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ('-1533699277')) FROM vt1 WHERE ((((((0.3342910206626811, x'', '-1522122303', 'yB￿n4H', NULL)) NOT BETWEEN ((x'', NULL, x'', 'B[', x'')) AND (('	 J넻i', NULL, '', NULL, 0.7096226298059546)))) BETWEEN ((((0.32213298321368))<=((-1.779093249E9)))) AND ((((0.38591916359581147))!=((0.11453567720755797)))))); -- 0ms;
SELECT ALL (~ ((NOT (vt1.c0)))), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE -4.44649735E8  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, -1426818378, '483454573')) AND (((- (vt1.c0)), SUM(vt1.c0), vt1.c0))), CASE WHEN IFNULL(DISTINCT 'OY', vt1.c0) THEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL COLLATE NOCASE) IS TRUE)) ORDER BY CAST(((((vt1.c0)AND(1.652826461E9)))OR(vt1.c0)) AS BLOB)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt1.c0)==(vt1.c0)))<((vt1.c0 IN ()))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL) FROM vt1 WHERE (((~ (x'')) IN ())) ORDER BY (NOT ((('v?gB9')LIKE(vt1.c0)))) DESC  NULLS LAST; -- 3ms;
SELECT DISTINCT ((vt1.c0) BETWEEN (LIKELY(vt1.c0)) AND (((vt1.c0) IS FALSE))) FROM vt1; -- 0ms;
SELECT ALL CASE ((NULL)||(vt1.c0))  WHEN ABS(vt1.c0) THEN TOTAL(vt1.c0) END, ((CAST(vt1.c0 AS BLOB)) BETWEEN ('뉁)[A') AND ('1286416128')), ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN (((vt1.c0) NOTNULL))) FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0)<<(vt1.c0)))-((vt1.c0 IN ()))) FROM vt1; -- 0ms;
SELECT HEX(0.9676018619051833) FROM vt1 WHERE (CASE WHEN (NOT ('}	')) THEN (((x'3331'))>=(('622131771'))) ELSE (('0.2507468046244403') BETWEEN (x'b5bd') AND (0.49942645757551085)) END); -- 0ms;
SELECT ALL AVG((((vt1.c0)) NOT BETWEEN ((0.17533733761152692)) AND ((vt1.c0)))) FROM vt1 WHERE ((x'' COLLATE RTRIM IN (((x'')<>(''))))); -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS INTEGER) COLLATE BINARY FROM vt1 WHERE ((((x'' IN ()))*(((((NULL)AND(NULL)))OR(''))))); -- 0ms;
SELECT DISTINCT CASE vt1.c0 COLLATE BINARY  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE BINARY ELSE ('1514346235' IN ()) END, ((vt1.c0)&(vt1.c0)) COLLATE BINARY, CAST(((vt1.c0) NOT NULL) AS TEXT) FROM vt1 WHERE (((((NULL) NOT NULL)) BETWEEN (((')*')*(x''))) AND (x''))); -- 0ms;
SELECT '-570360041' FROM vt1 ORDER BY CASE WHEN ((x'') BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN (NOT (vt1.c0)) THEN (~ (vt1.c0)) WHEN (+ (vt1.c0)) THEN (- (vt1.c0)) ELSE ((vt1.c0)IS NOT(vt1.c0)) END DESC; -- 1ms;
SELECT DISTINCT vt1.c0, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(CAST(vt1.c0 AS REAL))), CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) THEN vt1.c0 WHEN ((vt1.c0)<(vt1.c0)) THEN ((vt1.c0)||(vt1.c0)) WHEN vt1.c0 THEN COALESCE(DISTINCT vt1.c0, vt1.c0) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN ((((((((x'6b96')OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN ((vt1.c0)GLOB(vt1.c0)) THEN AVG(vt1.c0) ELSE ((NULL) NOTNULL) END FROM vt1 LIMIT 790336407; -- 0ms;
SELECT DISTINCT TYPEOF(vt1.c0) COLLATE NOCASE, CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('-801325106')) THEN ((vt1.c0)*(NULL)) ELSE ((vt1.c0) ISNULL) END, (((((vt1.c0)) BETWEEN ((x'')) AND ((NULL)))) NOT BETWEEN ('-17420763') AND (SQLITE_COMPILEOPTION_GET(vt1.c0))) FROM vt1 GROUP BY ((('' COLLATE NOCASE, CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0Xffffffffde074762 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))>=(('725618979', CAST(vt1.c0 AS REAL), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY IFNULL(((vt1.c0) NOT NULL), (((vt1.c0))<((vt1.c0)))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)/(NULL)))OR(CASE WHEN vt1.c0 THEN '''1' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1 WHERE ((- ((((NULL)) BETWEEN ((x'')) AND (('8f')))))) LIMIT -881978213 OFFSET -1351673347; -- 0ms;
SELECT DISTINCT CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC), vt1.c0, SUM((~ (vt1.c0))) OVER () FROM vt1 WHERE ((('\	''') NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE); -- 1ms;
SELECT ALL vt1.c0 COLLATE NOCASE FROM vt1 WHERE (UPPER(((((0.36001629228774723)AND('2078498710')))OR(NULL)))); -- 0ms;
SELECT DISTINCT (- (vt1.c0)) FROM vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0) BETWEEN (vt1.c0) AND (0.039846774276277586))))!=(((x'' IN ())))) FROM vt1 LIMIT 790336407 OFFSET -1418231326; -- 0ms;
SELECT DISTINCT COUNT((((('')OR(vt1.c0)))OR(vt1.c0))) OVER () FROM vt1 GROUP BY ((('2139101110')%(vt1.c0)) IN ()); -- 0ms;
SELECT ALL ((('v?gb9'))>((CASE WHEN vt1.c0 THEN vt1.c0 END))), TRIM((vt1.c0 IN ())), CAST(((vt1.c0)%(vt1.c0)) AS REAL) FROM vt1 WHERE ((((0Xffffffffa54641c1 IN ())) BETWEEN ((('1252241486')*(x''))) AND ((0.9698650540362732 IN ('O-', x''))))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) ISNULL) FROM vt1; -- 0ms;
SELECT ALL '-406733708' FROM vt1; -- 0ms;
SELECT (NOT (vt1.c0)) COLLATE NOCASE FROM vt1 WHERE (((((((((((((((x'')*('-720049049')))AND((~ (1.256810824E9)))))OR(CAST(0Xffffffff8b72a206 AS TEXT))))OR((('1547966012') BETWEEN (0.5129904030695271) AND (0.17553769487978366)))))AND(((NULL)<=(0Xffffffff99f6b5ed)))))AND(NULL)))AND(CAST(0.30402171470269124 AS NUMERIC)))) LIMIT -862996853; -- 0ms;
SELECT RTRIM(((0X20b765f1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt1 WHERE (((((((x'')>(1.501755676E9)))OR(x'a28e93e1')))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL '-795586005' FROM vt1 ORDER BY ((~ (vt1.c0)) IN (vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE NOCASE))  NULLS LAST; -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY ((vt1.c0) IS FALSE) DESC) FROM vt1; -- 0ms;
SELECT (NOT ((((vt1.c0))==((vt1.c0))))), COUNT(*) FILTER(WHERE (~ (((vt1.c0)<=(vt1.c0))))) OVER (), ((((vt1.c0) NOT NULL))<((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1 WHERE (CAST(CAST(NULL AS REAL) AS NUMERIC)); -- 0ms;
SELECT (((vt1.c0)) NOT BETWEEN ((HEX(vt1.c0))) AND (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) FROM vt1; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), COUNT(*), CASE WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM FROM vt1; -- 1ms;
SELECT DISTINCT (((((vt1.c0)AND(x''))))<=((CAST(vt1.c0 AS INTEGER)))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(CAST(vt1.c0 AS INTEGER))) FROM vt1 ORDER BY vt1.c0 DESC LIMIT 1627067495; -- 0ms;
SELECT ((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0))<=((+ (vt1.c0)))), HEX(DISTINCT vt1.c0) COLLATE NOCASE, CAST(x'' AS NUMERIC) FROM vt1 GROUP BY json_array_length(CASE WHEN vt1.c0 THEN vt1.c0 END, CASE WHEN vt1.c0 THEN 'P뀁{RbQ)' END);SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT DISTINCT (('-58027073') IS TRUE) FROM vt1 WHERE (((('2046969062')<=('')) IN ())); -- 0ms;
SELECT DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.8739380453078902 THEN vt1.c0 END COLLATE NOCASE, LIKELY(DISTINCT vt1.c0), ((((vt1.c0)>>('0.2580928368742348')))/(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1; -- 0ms;
SELECT ALL ((((((((LTRIM(NULL, vt1.c0))AND(((((((((-1919995063)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0)))OR(vt1.c0)))AND(((vt1.c0) IS TRUE))) FROM vt1 WHERE (NULLIF(DISTINCT '-1737478717' COLLATE BINARY, (+ ('-2144415359')))); -- 0ms;
SELECT ALL (((MAX(vt1.c0)))=(((vt1.c0 IN ())))) FROM vt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN GLOB(vt1.c0, vt1.c0) END FROM vt1; -- 0ms;
SELECT ALL ((AVG(vt1.c0))<(vt1.c0)), COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' ELSE vt1.c0 END)<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1; -- 0ms;
SELECT DISTINCT (- ((- (vt1.c0)))) FROM vt1 WHERE (LIKELY('-1188108129')); -- 0ms;
SELECT DISTINCT CASE WHEN LOWER(vt1.c0) THEN vt1.c0 ELSE CAST(vt1.c0 AS TEXT) END FROM vt1 WHERE ((('1129050300' COLLATE NOCASE)>=((('2086669646')=(x'ed09'))))) ORDER BY (((vt1.c0, 0.5573452719036229, vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0)LIKE(vt1.c0)), x'4341')) AND (((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))), vt1.c0 COLLATE BINARY, CAST(vt1.c0 AS REAL)))) ASC; -- 0ms;
SELECT DISTINCT CASE WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) ELSE (((vt1.c0))>=((0.7291650693711839))) END, CASE ((vt1.c0) NOT NULL)  WHEN (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('.Ldo', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) THEN CAST(vt1.c0 AS REAL) ELSE vt1.c0 END, (0.8066254421654662 COLLATE RTRIM IN ((((vt1.c0))>=((vt1.c0))))) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt1 WHERE (x''); -- 0ms;
SELECT ALL (vt1.c0 IN (NULLIF(vt1.c0, vt1.c0))) FROM vt1 WHERE ((-1.88709543E9 COLLATE RTRIM IN ())) LIMIT -231148449; -- 0ms;
SELECT DISTINCT ((vt1.c0) NOT NULL), TRIM(DISTINCT vt1.c0, vt1.c0) COLLATE RTRIM, ((0x10f20c64) NOT NULL) FROM vt1 WHERE (((NULLIF('-1479529761', x''))>((- (2.046969062E9))))) ORDER BY CAST(((((((((vt1.c0)OR(NULL)))OR(0.1022899018510467)))AND(vt1.c0)))OR(vt1.c0)) AS INTEGER); -- 0ms;
SELECT ((((((vt1.c0)LIKE(vt1.c0)))AND((NOT (vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))), CAST(((vt1.c0)OR(vt1.c0)) AS TEXT), (~ (vt1.c0)) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ((ABS(vt1.c0))>=(CAST(vt1.c0 AS NUMERIC))) FROM vt1; -- 0ms;
SELECT ALL COUNT(vt1.c0 COLLATE NOCASE COLLATE BINARY) OVER ( ORDER BY ((((0.9990126097258926) NOTNULL))LIKE((~ (vt1.c0)))) DESC, ('1737387629' IN (vt1.c0)) COLLATE NOCASE  NULLS LAST), (~ (CAST(vt1.c0 AS TEXT))), ((CAST(vt1.c0 AS BLOB)) IS TRUE) FROM vt1 WHERE (((((NULL)<=(0.3735280005831184))) BETWEEN (CAST(NULL AS REAL)) AND (((('1893503070')) NOT BETWEEN ((x'')) AND (('V-')))))); -- 1ms;
SELECT DISTINCT vt1.c0, (+ (CAST(vt1.c0 AS NUMERIC))), CAST(vt1.c0 AS TEXT) FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(MAX(((vt1.c0)LIKE(0.41662995483560106)))) FROM vt1;SELECT DISTINCT (+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE ((+ (CAST('-167392365' AS TEXT)))); -- 0ms;
SELECT ALL CAST(vt1.c0 AS BLOB) COLLATE RTRIM, CAST(((vt1.c0)<=(vt1.c0)) AS NUMERIC), vt1.c0 FROM vt1 WHERE (-1287017654) GROUP BY ((vt1.c0 COLLATE RTRIM)-((('') NOTNULL))), (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL), ((vt1.c0) NOTNULL) HAVING ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(IFNULL(DISTINCT vt1.c0, vt1.c0))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((0.7448448572616445 IN (((x'b076') IS FALSE)))); -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)>(vt1.c0)))) FROM vt1 LIMIT -1716901980 OFFSET 250604273; -- 0ms;
SELECT DISTINCT vt1.c0, ROUND(vt1.c0 COLLATE BINARY, NULL), ((vt1.c0 IN ()) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1; -- 1ms;
SELECT DISTINCT ((((vt1.c0)GLOB(vt1.c0)))+(AVG(vt1.c0))) FROM vt1 WHERE (((CASE WHEN '1800913755' THEN NULL END) ISNULL)); -- 0ms;
SELECT ALL TOTAL(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) FROM vt1 WHERE (((('-801325106')) NOT BETWEEN (((('-1472267899') NOT BETWEEN (-152865606) AND ('1017182168')))) AND (((('gh') ISNULL))))); -- 0ms;
SELECT ALL ((SUM(vt1.c0)) ISNULL) FROM vt1 WHERE ((((((1696215446)) BETWEEN (('2024706198')) AND ((0.6297789126641694)))) BETWEEN (((0.02292190338503164) NOT BETWEEN (0.833589387435166) AND (NULL))) AND (((NULL) NOTNULL)))) GROUP BY (((((0.22275484376236665 IN ()))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(CAST(0.03663891052893897 AS INTEGER))) HAVING (((vt1.c0)) BETWEEN ((((vt1.c0)+(vt1.c0)))) AND ((((vt1.c0)>(vt1.c0)))));SELECT DISTINCT ((vt1.c0) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0) NOTNULL))) FROM vt1 GROUP BY ((((vt1.c0 COLLATE NOCASE)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((NULL IN (vt1.c0)))); -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS TEXT))==(NULL COLLATE BINARY)) FROM vt1; -- 0ms;
SELECT DISTINCT 0xfffffffff49b92e1 FROM vt1 WHERE ((+ (((('-429008381')) NOT BETWEEN ((NULL)) AND ((0.7234475616413937)))))); -- 0ms;
SELECT ALL TOTAL(vt1.c0) FROM vt1; -- 0ms;
SELECT DISTINCT AVG(((NULL)IS NOT(vt1.c0))) OVER (), (((+ (vt1.c0)))==(vt1.c0)), (vt1.c0 IN (vt1.c0)) COLLATE RTRIM FROM vt1; -- 1ms;
SELECT 217061062 FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)|(vt1.c0))) IS TRUE) FROM vt1 WHERE ((('ruoIQ쯊|' COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT ALL ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM, ((((vt1.c0)<=(vt1.c0)))!=((',ZtumA풼5p' IN ()))), ((vt1.c0)GLOB((vt1.c0 IN ()))) FROM vt1; -- 0ms;
SELECT CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS NUMERIC) FROM vt1 ORDER BY ((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)AND(vt1.c0)))) ASC, ((((NOT (vt1.c0)), (('-613785132')AND(vt1.c0)), ((vt1.c0)||(vt1.c0))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, 0.7070522661064685, ((vt1.c0) NOTNULL)))) DESC  NULLS LAST, ((NULL)>(vt1.c0)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), vt1.c0, CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN MIN(vt1.c0, 'CN') THEN (NOT (vt1.c0)) END FROM vt1; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN (('PKYID쮓') NOTNULL) WHEN (((NULL))!=((vt1.c0))) THEN vt1.c0 COLLATE NOCASE WHEN '0.7726995913720469' THEN vt1.c0 WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ (vt1.c0)) WHEN ((((7.08398148E8)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)AND(NULL)) ELSE ((vt1.c0) IS TRUE) END FROM vt1 WHERE (((NULL)IS NOT(NULL)) COLLATE RTRIM) LIMIT -254101696 OFFSET 1873746860; -- 0ms;
SELECT ALL (- (((vt1.c0)&(vt1.c0)))), (((vt1.c0 COLLATE BINARY, vt1.c0, TOTAL(vt1.c0)))>=((AVG(vt1.c0), (- (vt1.c0)), -2095172703))), ((((vt1.c0)OR(vt1.c0))) IS TRUE) FROM vt1 ORDER BY '-1815258787' DESC; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT vt1.c0)) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY)), ((((((((CAST(0x96fe6af AS TEXT))AND(vt1.c0 COLLATE NOCASE)))OR((- (vt1.c0)))))OR(CASE vt1.c0  WHEN 0.708583205488756 THEN vt1.c0 ELSE vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(0.8283259136561707)))), ((COUNT(vt1.c0))||(vt1.c0)) FROM vt1 WHERE (CASE WHEN CASE WHEN 0.2997832061181833 THEN x'' ELSE 0.2773810047869746 END THEN '-925269419' COLLATE NOCASE WHEN (- (NULL)) THEN COALESCE(0x57cef50b, 0.647811129700363) WHEN ((0.517717109863703) NOT BETWEEN (x'') AND (NULL)) THEN (('E-%u')&('pu')) END); -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM vt1; -- 0ms;
SELECT (~ ((+ (vt1.c0)))), (+ ('-1303602740' COLLATE BINARY)), (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0)))) IS FALSE) FROM vt1 GROUP BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c0)+(vt1.c0))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>((vt1.c0 IN ()))), vt1.c0, ((LIKE(vt1.c0, -9223372036854775808, ' ')) NOT NULL) FROM vt1 WHERE ((((NULL, x'', x'')) NOT BETWEEN ((0.71896002770305, NULL COLLATE BINARY, NULL COLLATE NOCASE)) AND ((((NULL)||(0.8144182534306866)), (((0X68280eea, 0.018229239271802977, x'3fd4'))<=(('1218061838', x'', 0X275d45e8))), json_array_length(x'', x''))))) LIMIT -685390527; -- 0ms;
SELECT CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) FROM vt1 WHERE (((('q' IN ())) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((vt1.c0 IN ()))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((vt1.c0)IS NOT(vt1.c0)))) FROM vt1 WHERE ((((~ (-399086283)))<((~ ('[7ldh俍'))))); -- 0ms;
SELECT ALL (NOT ('1694631708')) FROM vt1; -- 0ms;
SELECT ALL COALESCE(DISTINCT vt1.c0, vt1.c0) FROM vt1; -- 0ms;
SELECT ALL (((vt1.c0 IN ()))>((('b4''?')*(vt1.c0)))) FROM vt1 WHERE ((('' IN (NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<>((AVG('|_h{[wGI_')))) FROM vt1 WHERE (((((0.42558681613188376)OR(0X7db4197b)))AND(0.9018051254198852)) COLLATE NOCASE) ORDER BY (~ (NULL)) COLLATE RTRIM, (~ (vt1.c0 COLLATE NOCASE)), ((vt1.c0)+(vt1.c0)) COLLATE RTRIM DESC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0 COLLATE BINARY, x'', ((vt1.c0)<<(vt1.c0)))) AND ((vt1.c0, vt1.c0 COLLATE BINARY, ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS INTEGER) COLLATE NOCASE FROM vt1 LIMIT -1683763494 OFFSET 1288406075; -- 0ms;
SELECT ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) IS FALSE) FROM vt1; -- 0ms;
SELECT ALL ((LOWER(vt1.c0)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((vt1.c0 IN ()))) FROM vt1 WHERE (LTRIM(CASE '-264036252'  WHEN x'60d5' THEN 0x8792e8d END)); -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN vt1.c0 WHEN ((vt1.c0)AND('1873746860')) THEN (vt1.c0 IN ()) WHEN ((vt1.c0)-(vt1.c0)) THEN (0xffffffffaf646a2f IN ()) END FROM vt1; -- 0ms;
SELECT NTH_VALUE(((json(vt1.c0))||('-oZq')), CASE WHEN ('Q?ᘼQ' IN ()) THEN (vt1.c0 IN ()) ELSE vt1.c0 END) OVER ( ORDER BY vt1.c0 DESC) FROM vt1;SELECT DISTINCT (- (vt1.c0)) COLLATE NOCASE FROM vt1; -- 0ms;
SELECT DISTINCT (0.07845940639713644 IN ()) FROM vt1 WHERE ((((x'19a6')=(-5.8027073E7)) IN ())); -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0)))*(CASE vt1.c0  WHEN '211260534' THEN vt1.c0 WHEN '#9' THEN vt1.c0 WHEN '-687080731' THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1 WHERE (((((0x232b20e4)AND('1992814915')))/(TYPEOF('518476870')))); -- 0ms;
SELECT ALL COUNT(*) OVER (), SQLITE_COMPILEOPTION_GET((((x'')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))), (~ (CAST(vt1.c0 AS BLOB))) FROM vt1 WHERE (json_extract(LOWER('1-500000'), (NULL IN ()))) ORDER BY NULL ASC  NULLS LAST;SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR((+ (NULL)))) FROM vt1; -- 1ms;
SELECT DISTINCT (CAST(vt1.c0 AS TEXT) IN (((vt1.c0) NOT NULL), CASE WHEN vt1.c0 THEN vt1.c0 END)), FIRST_VALUE((~ (vt1.c0))) OVER (), (((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0))) IS TRUE) FROM vt1; -- 0ms;
SELECT ALL COALESCE(CAST(vt1.c0 AS REAL), ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) FROM vt1 ORDER BY TRIM((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0, vt1.c0)), ((vt1.c0)OR(vt1.c0))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NTH_VALUE((((vt1.c0 IN (vt1.c0)))IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), ((((x'')>>(vt1.c0))) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt1.c0) NOTNULL)))) OVER () FROM vt1 WHERE ((- (CAST(0.5657722417404728 AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((((x'ebab')OR(vt1.c0)))AND(vt1.c0)) IN ()), 1997446951, ((0.8090320588521253)||(vt1.c0)) COLLATE BINARY, ((((((vt1.c0)/(vt1.c0)))AND(-1.298086431E9)))OR(vt1.c0)), (CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN -1680694013 THEN vt1.c0 ELSE vt1.c0 END IN (SUM(vt1.c0), ((vt1.c0)<<(x'')))) FROM vt1 WHERE ((((((x'b0b6')%('-666939443')), (+ (0.8921162610875678)), ((x'') BETWEEN (0.28629103809796563) AND (x''))))>((((0.19680987706878605) NOT BETWEEN (NULL) AND (-1559785665)), (('^hS\n\n') ISNULL), ((NULL) NOT BETWEEN (x'') AND ('')))))); -- 0ms;
SELECT DISTINCT -8.62996853E8, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)*(((vt1.c0) ISNULL))), ((((vt1.c0)>(vt1.c0)))AND(((NULL) IS TRUE))) FROM vt1; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt1 WHERE (((((NULL)>('l&JJg,\6~'))) NOT BETWEEN (CAST(0.4340949247307827 AS NUMERIC)) AND (LOWER('1964465785')))) ORDER BY CAST(vt1.c0 AS TEXT) COLLATE RTRIM  NULLS FIRST, vt1.c0; -- 0ms;
SELECT ALL (((DATETIME(vt1.c0, vt1.c0, vt1.c0), ((vt1.c0)IS NOT(vt1.c0)), vt1.c0))<=((vt1.c0, UNLIKELY(vt1.c0), CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END))), (vt1.c0 IN (vt1.c0, '907779733')) COLLATE BINARY, ((AVG(vt1.c0)) NOT BETWEEN (highlight(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (vt1.c0)) FROM vt1;SELECT ALL CASE WHEN ((('卵Qp?놅~', vt1.c0, vt1.c0))>=((vt1.c0, NULL, vt1.c0))) THEN vt1.c0 END, 'oy*k*歋', (0.8426620240208662 IN ((vt1.c0 IN ()))) FROM vt1 WHERE ((((((((((((('~')OR('-1671924816')))AND(0.7529889985616982)))AND(0xffffffffd03cbfce)))AND('-1533699277')))AND(((NULL) BETWEEN (NULL) AND ('1959611357')))))AND(x''))); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0) NOTNULL) END FROM vt1 WHERE (NULL) GROUP BY (((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))<(((vt1.c0) NOT NULL))) HAVING ((vt1.c0) NOTNULL); -- 0ms;
SELECT ALL LEAD(((vt1.c0)IS(CAST(vt1.c0 AS NUMERIC))), CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST(vt1.c0 AS REAL) ELSE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END, (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS REAL), CAST(vt1.c0 AS INTEGER)))>((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), '735311094' COLLATE BINARY, (~ (vt1.c0)))))) OVER () FROM vt1 WHERE (CAST('Hr,>' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT DISTINCT (((MIN(NULL), vt1.c0 COLLATE NOCASE, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))!=((vt1.c0, (NOT (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0))))) FROM vt1; -- 1ms;
SELECT COUNT(*) OVER () FROM vt1 WHERE (json_valid(0.11754450817620143)); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (0.5761294037129883) AND (((vt1.c0)AND(0xffffffff85a4992b)))), vt1.c0, SUM(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) OVER ( GROUPS ((vt1.c0)>>((~ (vt1.c0)))) PRECEDING EXCLUDE CURRENT ROW) FROM vt1 WHERE (CASE 0.5440917808180021 COLLATE RTRIM  WHEN ((((0.26308079316051214)OR(x'')))AND(x'')) THEN (NOT ('-992702216')) WHEN (((0.29415373542134926))==((x''))) THEN CASE -1.711884819E9  WHEN 1.694631708E9 THEN 7.90336407E8 WHEN x'' THEN 0.6218528552502222 WHEN x'a077' THEN x'' ELSE NULL END WHEN '-1586158765' COLLATE BINARY THEN ((x'dc05') BETWEEN (x'1c5a') AND ('Cqi]S')) END); -- 0ms;
SELECT DISTINCT 'an]g', (((vt1.c0 IN ())) NOT BETWEEN (LIKE(vt1.c0, vt1.c0)) AND (((vt1.c0)GLOB('-682462053')))), ((((vt1.c0)>(vt1.c0)))<=(NULL)) FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(SUM(vt1.c0) COLLATE BINARY) FROM vt1 WHERE (CAST(((x'') NOTNULL) AS INTEGER));SELECT DISTINCT ((vt1.c0)IS(vt1.c0)) COLLATE RTRIM FROM vt1 ORDER BY ((x'') NOT NULL) DESC; -- 0ms;
SELECT DISTINCT '-1607293389' FROM vt1 GROUP BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))||('0.28633967200083577')) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt1.c0)))OR(((x'')>=(vt1.c0)))); -- 0ms;
SELECT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0) BETWEEN ('-1332470983') AND (vt1.c0)) IN ()) FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS REAL)  NULLS LAST, ((((vt1.c0)!=(vt1.c0))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((+ (vt1.c0)))) DESC, 0.5761294037129883 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS BLOB), ((((COUNT(*))OR(CASE WHEN vt1.c0 THEN '-762038220' END)))OR(((vt1.c0) NOTNULL))), (+ (COUNT(*))) FROM vt1; -- 0ms;
SELECT ((((((((TOTAL(vt1.c0))AND('')))OR((vt1.c0 IN ()))))OR((~ (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE (1714919391); -- 0ms;
SELECT DISTINCT x'' FROM vt1; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt1; -- 0ms;
SELECT ALL 0xea19d98, (('') NOTNULL) COLLATE BINARY, rtreenode((vt1.c0 IN (vt1.c0)), vt1.c0) FROM vt1 WHERE ((- ((((1784730105)) NOT BETWEEN (('-1332470983')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT NULL FROM vt1 ORDER BY vt1.c0 ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE), ((((vt1.c0)&(NULL))) NOT NULL), (('Tࠞ-[tzgg1' COLLATE NOCASE) NOTNULL) FROM vt1; -- 0ms;
SELECT CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS BLOB), CUME_DIST() OVER (), ((((((vt1.c0)*(271971206)))AND(x'')))AND('1073029422' COLLATE BINARY)) FROM vt1; -- 0ms;
SELECT (('0.708583205488756')<(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1; -- 0ms;
SELECT COUNT(((vt1.c0)<<('DZ'))), vt1.c0, ((COUNT(vt1.c0))|(CAST(vt1.c0 AS BLOB))) FROM vt1 WHERE (CAST(((('1252241486'))>=((NULL))) AS REAL)); -- 0ms;
SELECT ALL COALESCE((vt1.c0 IN ()), ((vt1.c0) IS FALSE)) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)LIKE(vt1.c0))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND (CAST(vt1.c0 AS NUMERIC))) FROM vt1; -- 0ms;
SELECT '-1760863535', AVG(NULLIF(DISTINCT vt1.c0, vt1.c0)) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL) FROM vt1 WHERE (HEX(CAST('' AS BLOB))); -- 0ms;
SELECT MIN(MIN(((0.33071533561399413) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE (DATETIME(((((x'')AND(0.5099827287060037)))AND(NULL)), (((0.6932931560534235, 1843721003, 271971206)) NOT BETWEEN ((x'0ec8', 10436059, '-1249971703')) AND (('<{ΠJ7m~3', x'', x'e28f'))), ((0.5761294037129883)<(x''))));SELECT ((((GROUP_CONCAT(vt1.c0))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((vt1.c0 IN ()))) FROM vt1; -- 0ms;
SELECT DISTINCT HEX((vt1.c0 IN ())) FROM vt1 WHERE (((+ (NULL)) IN ((('Y\nଣ#h)XV')-(x''))))); -- 0ms;
SELECT ((GROUP_CONCAT(x''))>(((vt1.c0)LIKE('F	MTx^	')))) FROM vt1 WHERE (('' IN ((('1350122146')<=(0.5866160522461359)), (('') NOT BETWEEN (x'') AND (0Xffffffff84602d6e))))) ORDER BY ((((vt1.c0)>=(x''))) NOT NULL)  NULLS LAST, (x'' IN ()) ASC; -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0))) NOT BETWEEN (((0.09083568995118751)IS NOT(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1; -- 0ms;
SELECT x'', TOTAL(((vt1.c0)<=(vt1.c0))) OVER (), NULL FROM vt1 WHERE (((1992126886) IS FALSE) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (vt1.c0 IN ((vt1.c0 IN (vt1.c0, vt1.c0)))) FROM vt1; -- 0ms;
SELECT ALL (NOT (CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1; -- 0ms;
SELECT GROUP_CONCAT(((vt1.c0)&(vt1.c0))) FROM vt1 GROUP BY (vt1.c0 IN ()), CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END, ((((vt1.c0)LIKE(vt1.c0))) NOTNULL), ((((vt1.c0)>>(vt1.c0)))||((((vt1.c0)) NOT BETWEEN ((0.01356077805357181)) AND ((vt1.c0))))), ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)&(vt1.c0)))); -- 1ms;
SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0)=(vt1.c0))) AND (((vt1.c0) IS TRUE))), CASE (- (vt1.c0))  WHEN vt1.c0 THEN ((vt1.c0) NOTNULL) ELSE (- (vt1.c0)) END, (LTRIM(vt1.c0) IN ()) FROM vt1 WHERE (((('856987057' IN ())) NOT NULL)); -- 0ms;
SELECT ALL (NOT (CAST(vt1.c0 AS NUMERIC))), (((vt1.c0 IN ())) BETWEEN (vt1.c0 COLLATE BINARY) AND (CAST(vt1.c0 AS REAL))), vt1.c0 FROM vt1 WHERE (CASE WHEN (x'' IN ()) THEN ((NULL)||('2046969062')) ELSE (- ('')) END); -- 0ms;
SELECT DISTINCT (+ (((vt1.c0) NOTNULL))), IFNULL(((vt1.c0)<=(vt1.c0)), vt1.c0 COLLATE RTRIM), AVG(((vt1.c0)||(vt1.c0))) FROM vt1 WHERE (CAST(CAST(0.6816923065708201 AS INTEGER) AS BLOB)) GROUP BY CASE CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END  WHEN x'' THEN ((vt1.c0) BETWEEN (x'') AND (vt1.c0)) WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN (((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN ((NULL) IS FALSE) END, CASE WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN IFNULL(vt1.c0, vt1.c0) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END, CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS BLOB) HAVING ((vt1.c0)<=((+ (vt1.c0)))); -- 0ms;
SELECT ALL CAST(vt1.c0 COLLATE RTRIM AS BLOB) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN (vt1.c0))) NOT NULL) FROM vt1 ORDER BY CAST((vt1.c0 IN (vt1.c0)) AS REAL) DESC; -- 0ms;
SELECT ALL (((vt1.c0, 'A㕺\rQV', vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)>>(vt1.c0)), NULL)) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt1 WHERE (((((((((((0X48ff2f8d)AND(1024608321)))AND(0.09381987015171134)))AND(0.3286829409553843)))OR('0.4173038793207635')))>((- (''))))); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN (x'' IN (vt1.c0, vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END FROM vt1 WHERE ((((('496763525') NOT BETWEEN (NULL) AND (x''))) IS FALSE)) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((load_extension(x'', vt1.c0), (NOT (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>=(('1280978577', vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), (((vt1.c0))>((vt1.c0))), COUNT(*), GROUP_CONCAT(vt1.c0), (NOT (vt1.c0))))==((((vt1.c0)LIKE(vt1.c0)), TOTAL(NULL), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt1.c0 END, CAST(vt1.c0 AS TEXT), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0))<((vt1.c0))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), json_insert(vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, '-1533699277')) AND ((vt1.c0, vt1.c0, vt1.c0))), (('now') NOT BETWEEN (vt1.c0) AND (vt1.c0))), AVG(ABS(DISTINCT vt1.c0)) FROM vt1 WHERE (CAST(((NULL)>=('1992126886')) AS BLOB)) GROUP BY COALESCE(0.12768403608834367, (((vt1.c0))<((NULL))), ((vt1.c0)GLOB(vt1.c0)), CAST(vt1.c0 AS BLOB)) HAVING CASE 0.45856391682516984  WHEN ((((vt1.c0)OR(6.22131771E8)))OR(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c0 AS REAL) WHEN (vt1.c0 IN ()) THEN ((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END LIMIT -444649735; -- 0ms;
SELECT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()) FROM vt1 GROUP BY ((vt1.c0 COLLATE BINARY)IS(((x'') NOT BETWEEN (vt1.c0) AND (NULL)))); -- 0ms;
SELECT (TOTAL_CHANGES() IN ()), CUME_DIST() OVER (), HEX(CAST(vt1.c0 AS BLOB)), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))+(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), CAST(((vt1.c0)-(vt1.c0)) AS INTEGER) FROM vt1 NOT INDEXED; -- 0ms;
SELECT ((1351282933) NOT BETWEEN (UNLIKELY(vt1.c0)) AND (CAST(vt1.c0 AS NUMERIC))), ((SUM(vt1.c0)) IS TRUE), CASE WHEN ((vt1.c0)LIKE(vt1.c0)) THEN UNICODE(vt1.c0) WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN COUNT(*) THEN ((vt1.c0)/(vt1.c0)) ELSE vt1.c0 COLLATE RTRIM END FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0, (((vt1.c0)) BETWEEN ((RTRIM(vt1.c0))) AND ((COUNT(*)))), DENSE_RANK() OVER () FROM vt1 WHERE (-670301167) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt1; -- 0ms;
SELECT ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY FROM vt1 WHERE (((DATE(x'', '-1779093249', NULL)) BETWEEN (CAST(0.26819864695938145 AS BLOB)) AND (NULL))); -- 0ms;
SELECT AVG(((((vt1.c0)AND('2037958474')))AND(vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT ALL (+ ((~ (vt1.c0)))), (- ((((vt1.c0))<((vt1.c0))))), CAST(TRIM(vt1.c0, vt1.c0) AS INTEGER), TOTAL(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) OVER (), CAST(x'4125' AS BLOB) FROM vt1 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT COUNT((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM) OVER (), LAST_INSERT_ROWID(), AVG(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), CASE (+ (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) ELSE (vt1.c0 IN (vt1.c0)) END, (((((vt1.c0) ISNULL)))==((CASE WHEN vt1.c0 THEN 0.15521963480585 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) FROM vt1 WHERE (((((((((CASE WHEN ']#R	' THEN 0.7317121894334058 WHEN '-1602693156' THEN NULL WHEN NULL THEN -1.996260961E9 END)OR(((0.7376200100569732)-(x'')))))AND((((-1007859944))=((''))))))AND((((1431239691)) BETWEEN (('345351276')) AND ((770555149))))))AND(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((((((vt1.c0)OR(vt1.c0)))OR(0.0963875282667892)))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0)LIKE(vt1.c0)))) FROM vt1 GROUP BY (((vt1.c0 IN (vt1.c0))) IS FALSE) ORDER BY 0.4236297545396809 DESC; -- 0ms;
SELECT DISTINCT (((vt1.c0) IS FALSE) IN (((vt1.c0)>=(vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1; -- 0ms;
SELECT ALL MIN(vt1.c0) FROM vt1 WHERE (HEX((((-1.007859944E9, NULL, 0.8468508663850682)) BETWEEN ((x'', x'', '')) AND ((NULL, 1477378189, NULL))))) GROUP BY ((vt1.c0 COLLATE NOCASE)<<(vt1.c0)); -- 0ms;
SELECT DISTINCT (('-666939443') BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(NULL))) AND (vt1.c0 COLLATE BINARY)), COUNT((+ (vt1.c0))), TOTAL((vt1.c0 IN ())) FROM vt1; -- 0ms;
SELECT ALL ((((((vt1.c0) IS TRUE))OR(((vt1.c0) NOT NULL))))OR(((vt1.c0)GLOB(vt1.c0)))), vt1.c0, LOWER(NULL) FROM vt1 WHERE (((CASE 0.09477645601651419  WHEN x'4d2a4102' THEN 0.06688561828423156 END)OR((((x'f565', NULL, NULL))<=((-1535187434, 0X60c70508, 0.28312753050384276)))))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt1 UNION ALL SELECT ALL (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))<((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) FROM vt1; -- 0ms;
SELECT DISTINCT '251522931' FROM vt1 WHERE (((((x'76ad') NOT BETWEEN ('ぃj䓦8>%') AND (0.790505897116085))) BETWEEN ((('pf')<=(x'0d707752'))) AND (((NULL)||('1480186947'))))); -- 0ms;
SELECT DISTINCT (((vt1.c0 IN (vt1.c0))) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE WHEN vt1.c0 THEN 'tQ' ELSE vt1.c0 END)), ((CASE WHEN vt1.c0 THEN vt1.c0 END)<<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), (~ ((((vt1.c0))=((vt1.c0))))) FROM vt1 LIMIT 1995203001; -- 0ms;
SELECT DISTINCT MAX((NOT (vt1.c0))) FROM vt1; -- 0ms;
SELECT ((vt1.c0 COLLATE BINARY)IS NOT(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1; -- 0ms;
SELECT (((vt1.c0 IN (vt1.c0, vt1.c0))) NOTNULL) FROM vt1 GROUP BY ((vt1.c0) IS TRUE) HAVING ((vt1.c0 COLLATE RTRIM)||((((vt1.c0, vt1.c0, vt1.c0, 0.0027551950604901565, vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0, 0.9999825259519317, vt1.c0, vt1.c0, vt1.c0))))); -- 0ms;
SELECT DISTINCT CASE LIKELY(vt1.c0)  WHEN ((vt1.c0)+(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)<<(vt1.c0)) THEN (('-429008381') NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN x'' ELSE (- (vt1.c0)) END FROM vt1; -- 0ms;
SELECT ALL ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) ISNULL) FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0) IS FALSE))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)), SUBSTR((- (vt1.c0)), (vt1.c0 IN ())), LTRIM((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '1653392920', NULL)))) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST('-1094185481' COLLATE NOCASE AS REAL)); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT UNICODE(x''), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffffc0060dfc THEN vt1.c0 ELSE vt1.c0 END, vt1.c0, ((vt1.c0) NOT NULL)), GROUP_CONCAT(TOTAL(vt1.c0) COLLATE NOCASE), SUM((~ ('-133383959'))) OVER () FROM vt1 WHERE ((((x'' IN (NULL)))||(((2116522036)-(x''))))) GROUP BY (((vt1.c0) ISNULL) IN ());SELECT DISTINCT TOTAL(ABS(vt1.c0)) OVER () FROM vt1 WHERE ((+ ((((((((('-1887095430')OR('-1602693156')))AND(0.6750923261931027)))AND(NULL)))AND(NULL))))); -- 0ms;
SELECT ALL -1.67392365E8 FROM vt1 WHERE ((((+ (-1300582068)))LIKE(x''))); -- 0ms;
SELECT ALL (((- (vt1.c0))) IS TRUE) FROM vt1 LIMIT 1845841235 OFFSET -1522122303; -- 0ms;
SELECT (vt1.c0 COLLATE NOCASE IN ()) FROM vt1 ORDER BY vt1.c0; -- 0ms;
SELECT ALL ((vt1.c0) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((vt1.c0 IN (vt1.c0, vt1.c0)))) FROM vt1 WHERE (UNLIKELY(DISTINCT CASE '-1737478717'  WHEN '' THEN x'' WHEN NULL THEN x'' WHEN 'uD' THEN '271971206' ELSE NULL END)) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)!=(vt1.c0)) DESC; -- 0ms;
SELECT ALL CASE x''  WHEN 'P]A\r笗0' COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) END FROM vt1 WHERE (((CASE x''  WHEN '-1539550950' THEN x'' END) NOT BETWEEN ((+ (0.039407645590815554))) AND (('PY' IN ('T&na,'))))); -- 0ms;
SELECT ALL '' FROM vt1 WHERE (1700111133) GROUP BY (+ ((((vt1.c0))<((vt1.c0))))); -- 0ms;
SELECT ((vt1.c0 COLLATE BINARY) NOTNULL) FROM vt1 ORDER BY json_object(((vt1.c0) ISNULL), ((vt1.c0)>(vt1.c0))) DESC  NULLS FIRST;SELECT ALL (((vt1.c0)>(0.7969158857708293)) IN ()), TOTAL((vt1.c0 IN ())) OVER (), UPPER(MAX(vt1.c0)) FROM vt1 LIMIT 399501925; -- 0ms;
SELECT DISTINCT ((MIN('0.294358281108161')) NOTNULL) FROM vt1; -- 0ms;
SELECT DISTINCT COUNT((+ (vt1.c0))) OVER () FROM vt1 WHERE (CAST((NULL IN (NULL, NULL)) AS INTEGER)); -- 0ms;
SELECT ALL json_array_length(TIME(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) FROM vt1; -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) FROM vt1 WHERE ((((((((x'')) NOT BETWEEN (('')) AND ((0.0))))OR((((0.5842429456695242))<=((1066899327))))))OR(CAST(0.5761294037129883 AS BLOB)))) GROUP BY vt1.c0, COALESCE(CHANGES(), (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))), (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN '725261033' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN (vt1.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT vt1.c0))>(((((((((((((x'7b70')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) FROM vt1 WHERE ((((0.9563830834744652 IN ())) IS FALSE)); -- 1ms;
SELECT DISTINCT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, '-1472267899'))))%(('907779733' IN (vt1.c0, vt1.c0)))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)>=(vt1.c0)))/(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE (((+ (NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((('-1582989273' IN ()))AND(COUNT(vt1.c0))) FROM vt1 WHERE ((((TRIM(DISTINCT 0.8150304506708396)))=(((('*XwvrqO') BETWEEN (859231181) AND (7.7702809E8)))))); -- 0ms;
SELECT ALL ((((vt1.c0) IS TRUE))/(CAST(',cMkO' AS REAL))) FROM vt1; -- 0ms;
SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c0 END)IS NOT((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))) FROM vt1 WHERE (json_array(CAST(NULL AS INTEGER), x'831e' COLLATE NOCASE));SELECT ((((vt1.c0)<(vt1.c0)))>(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) FROM vt1 WHERE ((CASE WHEN '' THEN NULL WHEN '-1559671670' THEN 0.49777872138657453 WHEN 0.20629731284167652 THEN x'' WHEN NULL THEN -1255032134 WHEN NULL THEN 'Bpk7|	a*\r' END IN (((((((((x'fc88')AND(0.7712932580488655)))AND(0.8904055092326295)))AND('')))OR(x'2259')), (- (x'84b6d977'))))); -- 0ms;
SELECT DISTINCT CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN MAX(vt1.c0) THEN (- (vt1.c0)) WHEN (+ (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) IS FALSE) THEN vt1.c0 ELSE ((vt1.c0)==(0.3271834126058556)) END FROM vt1 WHERE (((0.8160460800529946)<=(NULL)) COLLATE BINARY) LIMIT -2000306271; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT), ((((((((vt1.c0)OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS REAL))), (((vt1.c0) IS FALSE) IN (SUM(vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT (((((((((vt1.c0)OR(vt1.c0)))AND(0.3219774826983539)))AND(vt1.c0)))OR(vt1.c0)) IN (x'' COLLATE RTRIM, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) FROM vt1 WHERE (CASE ((((-765817001)OR(NULL)))AND(NULL))  WHEN ((NULL) IS TRUE) THEN (('751188714') BETWEEN ('OU') AND ('\r曑')) WHEN NULL COLLATE NOCASE THEN '-570360041' WHEN ((((x'')OR('HMihC_')))OR('-Infinity')) THEN (0.6803326453785397 IN ()) ELSE (- (NULL)) END); -- 0ms;
SELECT DISTINCT (((NULL IN (vt1.c0)))<=(vt1.c0)) FROM vt1 WHERE (CAST(NULL AS TEXT) COLLATE NOCASE) LIMIT 1504934911 OFFSET -1840058720 INTERSECT SELECT ALL NULL FROM vt1;SELECT ALL ((UNLIKELY(vt1.c0))<('铃m')), COUNT(TOTAL(vt1.c0)), CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS REAL) FROM vt1 GROUP BY ((0.4301550917446211) ISNULL) HAVING (((vt1.c0)) BETWEEN ((((vt1.c0)!=(vt1.c0)))) AND ((((vt1.c0) IS FALSE))));SELECT DISTINCT 0x70da51da FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((((vt1.c0) NOT NULL))) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))), ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))<(vt1.c0 COLLATE BINARY)), UPPER(((vt1.c0) ISNULL)) FROM vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|(vt1.c0 COLLATE BINARY)) FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN (vt1.c0))) IS TRUE) FROM vt1 WHERE ((('P뀁{RbQ)') NOT BETWEEN (0.34632907692128767) AND (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((+ (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), SUM(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))), (((vt1.c0)) NOT BETWEEN ((x'')) AND (((NOT (0.41613753502351347))))) FROM vt1 WHERE (CASE WHEN (~ (618044835)) THEN TYPEOF('') WHEN (('511279388')>(NULL)) THEN ((('(SБ?', 0.11436952689796565, '777028090')) BETWEEN (('-1645593637', 0.8865352361405056, 0.49555003904120676)) AND (('6T2..', 0x4f2d2814, NULL))) WHEN ((0.9375294473988819) IS TRUE) THEN (('w~') IS TRUE) END); -- 1ms;
SELECT DISTINCT (((vt1.c0 IN ())) BETWEEN (TYPEOF(vt1.c0)) AND (CAST(vt1.c0 AS REAL))) FROM vt1 WHERE (0.24036289776340147 COLLATE BINARY); -- 1ms;
SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT ((((((vt1.c0)+(vt1.c0)))AND(NULL)))OR('-2039687414')), ((((AVG(vt1.c0))OR(vt1.c0)))AND(CASE 'o>'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), DENSE_RANK() OVER ( PARTITION BY (- (vt1.c0 COLLATE BINARY)), ((((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) FROM vt1 WHERE ((NOT (CASE ''  WHEN NULL THEN '~︅' WHEN 'Gg93Wi77' THEN '3跸6J%' WHEN 0.5356263945161142 THEN '-795586005' END))) LIMIT -1407751909; -- 1ms;
SELECT ALL ((vt1.c0 COLLATE NOCASE) ISNULL), json(IFNULL(vt1.c0, vt1.c0)), (vt1.c0 COLLATE NOCASE IN (vt1.c0, CAST(vt1.c0 AS TEXT))) FROM vt1 GROUP BY '}BJc' COLLATE NOCASE, (((((NULL))>=((vt1.c0)))) ISNULL), ((CAST(vt1.c0 AS INTEGER)) IS TRUE); -- 0ms;
SELECT (COUNT(*) IN (AVG(vt1.c0))) FROM vt1; -- 0ms;
SELECT ALL CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) FROM vt1 LIMIT -375556711 OFFSET -1584759935; -- 0ms;
SELECT DISTINCT AVG((((vt1.c0))<((vt1.c0)))) FILTER(WHERE x'508c') OVER () FROM vt1 WHERE (CAST(((((((((x'b738')OR(x'')))OR(0.4236297545396809)))OR(0xffffffffe57f2ef9)))AND(x'')) AS NUMERIC)) GROUP BY (((((((vt1.c0))>((x'ed6d'))))AND(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)AND(vt1.c0)))) ORDER BY vt1.c0; -- 0ms;
SELECT DISTINCT CAST(COALESCE(DISTINCT vt1.c0, vt1.c0) AS BLOB), ((((vt1.c0)&(vt1.c0))) ISNULL), ((((vt1.c0)OR(vt1.c0)))>(((vt1.c0) NOTNULL))) FROM vt1 WHERE (CAST(CASE WHEN '-1596715980' THEN 0.6068837363299999 WHEN 'wB' THEN '3' WHEN '' THEN 0.6453375918010846 ELSE NULL END AS BLOB)) GROUP BY (((((((vt1.c0))>=((vt1.c0))))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR('뜓⻹')) HAVING -1848215425; -- 1ms;
SELECT ((((((vt1.c0) NOTNULL))OR(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN '663413443' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)), (+ ((vt1.c0 IN ()))), COUNT(vt1.c0) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt1; -- 0ms;
SELECT ((((HEX(vt1.c0))AND((vt1.c0 IN ()))))AND(((vt1.c0)+(0xffffffff87235565)))) FROM vt1 WHERE ((('p8' COLLATE NOCASE) BETWEEN (('R' IN ())) AND ((((-1867548315)) NOT BETWEEN ((0.7899641012973868)) AND ((0.07090475460436751)))))); -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((('o''1{.')-('E^')) AS INTEGER)); -- 0ms;
SELECT ALL CAST(((vt1.c0)>(0.9555817579184998)) AS BLOB) FROM vt1 WHERE (((ABS(NULL))>>(((x'cadb') BETWEEN ('q~') AND ('7Y'))))); -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (NOT (vt1.c0)) END, (((((vt1.c0))<((vt1.c0)))) ISNULL), ((LIKELY(DISTINCT vt1.c0))<=(((vt1.c0) NOT NULL))) FROM vt1 WHERE ((((NULL IN ()))<(((x'')<(1700111133))))); -- 0ms;
SELECT DISTINCT (((((vt1.c0))<>((vt1.c0))))AND(((vt1.c0) IS FALSE))) FROM vt1; -- 0ms;
SELECT ALL NULL FROM vt1; -- 0ms;
SELECT ALL TRIM(DISTINCT ((vt1.c0) NOT NULL)) FROM vt1 WHERE (((((~ (x'1f29')), (((('1433138510')OR(0xffffffffcd9aa9b5)))AND('?*Bcx뚋')), ((('0.7429689634136794'))>((-432591078)))))==((x'575d' COLLATE RTRIM, CASE WHEN 0.17924840872014114 THEN 0.9356384255568 WHEN '0.4236297545396809' THEN NULL WHEN x'' THEN NULL WHEN x'' THEN '-1887095430' WHEN NULL THEN 0.6937251796995175 END, (('') IS FALSE))))); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ABS(DISTINCT vt1.c0) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) THEN NULLIF(vt1.c0, '1217334884') ELSE -1.298086431E9 END FROM vt1 GROUP BY (LIKELIHOOD(vt1.c0, 0.09060664723724599) IN (json_patch(vt1.c0, vt1.c0), NULL)) HAVING ((((((((((((((vt1.c0)>(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ()))))AND(((vt1.c0)<(vt1.c0)))))OR(NULLIF(vt1.c0, vt1.c0))))OR(vt1.c0)))AND(((vt1.c0)LIKE(vt1.c0))));SELECT ALL vt1.c0 FROM vt1 WHERE ((((((NULL)AND(-2145573883)))OR(NULL)) IN (NULL COLLATE NOCASE))) LIMIT -862996853; -- 0ms;
SELECT ALL (((((NULL))>((vt1.c0)))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) FROM vt1; -- 0ms;
SELECT DISTINCT ((0.2786404834926457)AND(((vt1.c0)*(vt1.c0)))) FROM vt1 WHERE (CAST('' AS TEXT)) GROUP BY (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END IN ()) HAVING x''; -- 0ms;
SELECT ALL '-966472588' FROM vt1 WHERE ((((('0.033294949677183494') IS TRUE))<(CAST(NULL AS NUMERIC)))); -- 4ms;
SELECT DISTINCT (((- (vt1.c0)))IS NOT(MIN(NULL))), ((((vt1.c0) NOTNULL))AND(LIKELY(DISTINCT vt1.c0))), SUM((((vt1.c0))<=((vt1.c0)))) OVER () FROM vt1 GROUP BY vt1.c0; -- 1ms;
SELECT ((json_array_length(vt1.c0, vt1.c0)) BETWEEN (CASE WHEN '0.22686038215087645' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND ((((vt1.c0))=((vt1.c0))))), (((~ (vt1.c0)))/(((((vt1.c0)OR(NULL)))OR(vt1.c0)))), ((HEX(DISTINCT vt1.c0))|((- (vt1.c0)))), ((((vt1.c0)LIKE(vt1.c0)))<>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), ((((6.22131771E8) IS TRUE)) NOTNULL) FROM vt1 WHERE (((NULL) NOT BETWEEN (NULL) AND (741168518)) COLLATE BINARY) LIMIT 1642810243 OFFSET 1067295184; -- 0ms;
SELECT DISTINCT SUM((~ (vt1.c0))) OVER () FROM vt1 WHERE (rtreenode(((x'')GLOB('907779733')), (((0.4640010378844214)) BETWEEN (('-1783649231')) AND ((0.10106628753895186))))); -- 0ms;
SELECT DISTINCT CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END AS NUMERIC), ((CASE WHEN vt1.c0 THEN vt1.c0 END) IS TRUE), LOWER(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0) NOT NULL) AS BLOB) FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)))) AND ((((vt1.c0)+(vt1.c0))))); -- 0ms;
SELECT DISTINCT x'' FROM vt1; -- 0ms;
SELECT DISTINCT AVG(((vt1.c0) ISNULL)) FILTER(WHERE ((((vt1.c0) NOT NULL))%(vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT ((((vt1.c0)<>(vt1.c0)))%(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'de61' END)), ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN ((((vt1.c0))!=((vt1.c0)))) AND (SQLITE_SOURCE_ID())), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1 WHERE ('845180813') LIMIT -1171476589; -- 0ms;
SELECT FIRST_VALUE(CAST(((vt1.c0)GLOB(vt1.c0)) AS REAL)) OVER () FROM vt1; -- 0ms;
SELECT ALL CAST(UPPER(NULL) AS INTEGER), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE NOCASE, CAST(vt1.c0 AS BLOB) COLLATE BINARY, ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL), (((('-42382704') NOTNULL)) BETWEEN ((+ (vt1.c0))) AND (TOTAL(vt1.c0))) FROM vt1; -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE (((x'6c43' IN (0Xfffffffffd1c7b43)) IN ())) ORDER BY ((vt1.c0 COLLATE BINARY)<=(CASE WHEN vt1.c0 THEN 0.11964258188127097 ELSE vt1.c0 END)) ASC; -- 0ms;
SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT AVG(((vt1.c0) ISNULL)) FROM vt1 WHERE (((CASE WHEN 0.48877449865671563 THEN x'4c16' WHEN NULL THEN 0.8348989842080017 WHEN -20148652 THEN '271971206' ELSE x'' END)/((((('-1298086431')OR('9剼H+Lh')))OR('{}'))))); -- 0ms;
