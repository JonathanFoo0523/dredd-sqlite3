-- Time: 2024/06/07 15:35:01
-- Database: database34
-- Database version: 3.40.0
-- seed value: 3495246734
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE t0 (c0 INTEGER  CHECK ( NULL)); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL), (NULL), (x''); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (NULL); -- 0ms;
PRAGMA cache_size; -- 0ms;
ANALYZE main; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (((CASE WHEN 'DCb' THEN NULL END)AND(((((x'')OR(x'')))OR(0.08337811621111835))))), (NULL), ('DCB'); -- 0ms;
COMMIT; -- 0ms;
PRAGMA cache_spill; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c20 INT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA application_id; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL, '194010677'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1 VALUES (x'', x''), ('1305946151', NULL), ('', x''); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (NULL); -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT ALL ((((vt0.c0)IS NOT(t1.c20)))>=(((vt0.c0) IS FALSE))), CASE vt0.c0  WHEN t1.c20 THEN t1.c20 END COLLATE NOCASE COLLATE BINARY, LAST_VALUE(CASE ((t1.c0) NOTNULL)  WHEN CASE WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END THEN (('') IS TRUE) END) OVER ( ROWS  UNBOUNDED PRECEDING) FROM t1, vt0; -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c52 REAL; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.09145107437927291), (0xffffffffcffa6179), (x''), (x''), ('X'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0x7a2a22b9, '', NULL); -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA locking_mode; -- 0ms;
PRAGMA main.cache_size = 0; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '27735'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37886'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (-1e500), (((((((((((-579605602) NOT BETWEEN (0.35975115486845777) AND (0.5373585368668299)))OR(((((194010677)OR('S''HVI(E&')))OR(0.2953052028399381)))))OR(CAST(NULL AS TEXT))))AND((NULL IN ()))))AND((((x''))>=((NULL)))))), (0.4692078262163728); -- 3ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.7430490724799579); -- 0ms;
PRAGMA cache_spill = 320416475017623735; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
CREATE UNIQUE INDEX i98 ON t1(json_patch(c20 COLLATE NOCASE, c0) COLLATE RTRIM DESC,(((c20)) BETWEEN (((((c0)) NOT BETWEEN ((c0)) AND ((c52))))) AND ((c20 COLLATE RTRIM))) COLLATE RTRIM ASC,CASE WHEN CASE c0  WHEN c20 THEN c20 END THEN ((c0) NOT NULL) END COLLATE BINARY) WHERE ((CAST(c52 AS TEXT))<=(HEX(NULL))); -- 0ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(1428030978) WHERE ((vt0.c0 COLLATE BINARY)||(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (0.7747588560854626); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
DELETE FROM t1 WHERE ((((STRFTIME(t1.c20, t1.c52, t1.c20))AND(((t1.c20)-(NULL)))))OR(t1.c0)); -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR ROLLBACK t1 SET c0=x'', c0=NULL WHERE ((((((t1.c0)AND(t1.c20)))OR(t1.c20))) BETWEEN (((t1.c20) BETWEEN (t1.c0) AND (t1.c0))) AND ('Oc賚K')); -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 1ms;
INSERT OR IGNORE INTO t1(c52, c20) VALUES (0x60014d89, 0.29126151152511404); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.2953052028399381, x'fbce', x''); -- 0ms;
INSERT OR REPLACE INTO t1(c20, c52, c0) VALUES (NULL, NULL, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT t1.c52 FROM vt0;SELECT DISTINCT (('#K5JL') NOT NULL) FROM vt0; -- 0ms;
SELECT NTH_VALUE(((t1.c0 COLLATE RTRIM)*(0.726467116089399)), ((CASE t1.c52  WHEN t1.c0 THEN t1.c20 WHEN t1.c0 THEN t1.c52 WHEN NULL THEN t1.c52 ELSE t1.c20 END)OR(((t1.c0) BETWEEN (t1.c52) AND (t1.c20))))) OVER (), GROUP_CONCAT(((((t1.c52)AND(t1.c52)))OR(vt0.c0))) OVER (), (- (((t1.c0) NOTNULL))) FROM t1 GROUP BY ((((CAST(t1.c20 AS BLOB))AND(((t1.c52) NOT BETWEEN (t1.c20) AND (t1.c20)))))OR((t1.c0 IN ()))) HAVING ((((t1.c20) BETWEEN (t1.c0) AND (vt0.c0))) NOT BETWEEN (CASE t1.c0  WHEN t1.c52 THEN vt0.c0 END) AND (((t1.c20) NOT BETWEEN (t1.c20) AND (t1.c0))));SELECT DISTINCT IFNULL(t1.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY) FROM t1 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT ((t1.c0)IS NOT(t1.c52)) COLLATE BINARY FROM vt0, t1 WHERE (((((NULL)!=('mA/')))LIKE(((NULL) BETWEEN ('') AND ('-893271110'))))); -- 0ms;
SELECT ALL LAG(((vt0.c0 COLLATE NOCASE) IS FALSE), vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'2aad', vt0.c0, NULL))))) AND ((vt0.c0 COLLATE NOCASE, ((vt0.c0)||(vt0.c0)), (vt0.c0 IN ()))))) OVER () FROM vt0 WHERE (((((((((((((NULL)OR(0.4561275601764714)))OR(0.8206896329646403)))AND(MAX(0.906409904633992, 0.4561275601764714, NULL, '2049581753'))))AND(LIKELY('1610698121'))))OR('' COLLATE RTRIM)))OR(ABS(x'')))); -- 0ms;
SELECT ((t1.c0)AND(t1.c0)) COLLATE NOCASE FROM vt0, t1 WHERE (((CHANGES()) NOT BETWEEN (CAST('b' AS REAL)) AND ((NOT (NULL))))); -- 0ms;
SELECT ALL ((AVG(t1.c20))!=(x'')) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c52 THEN t1.c0 END) BETWEEN (CAST(t1.c20 AS INTEGER)) AND (CASE t1.c52  WHEN t1.c20 THEN t1.c52 END)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((t1.c0)<<(vt0.c0)) COLLATE BINARY FROM t1 WHERE (RTRIM(((((0.3771067709544609)OR(0xffffffff864bf5f3)))OR('%*\n0zR'))));SELECT ALL CASE WHEN x'' THEN ((vt0.c0) NOTNULL) END FROM vt0 WHERE ((((((x'')) NOT BETWEEN ((',')) AND ((x'')))) BETWEEN ('') AND (CASE 194010677  WHEN '1446083189' THEN 0.6370403948778015 WHEN x'' THEN NULL WHEN x'' THEN NULL END))); -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT t1.c52)) BETWEEN (CASE t1.c52  WHEN NULL THEN t1.c52 END) AND (MAX(t1.c52))) FROM vt0, t1 WHERE ((((x'' COLLATE NOCASE, CASE NULL  WHEN 1835933460 THEN '%*\n0zR' ELSE NULL END, ((NULL)<<(0Xffffffffa8b2060b))))=((((x'') NOT NULL), CASE WHEN '0.906409904633992' THEN 0.3830695387846924 WHEN '](Na0xh' THEN '/+o%fQ' WHEN NULL THEN x'' END, (NOT (0.8124053985877521)))))) GROUP BY ((CAST(vt0.c0 AS TEXT)) NOT NULL) HAVING ((CAST(t1.c52 AS INTEGER)) BETWEEN (((t1.c52)<=(t1.c20))) AND (((t1.c20)>>(t1.c20)))); -- 0ms;
SELECT DISTINCT '' FROM vt0 ORDER BY vt0.c0; -- 0ms;
SELECT DISTINCT ((((('' IN ()))AND((((t1.c20)) NOT BETWEEN ((t1.c20)) AND ((t1.c20))))))AND(SQLITE_SOURCE_ID())), CASE ''  WHEN (NOT (t1.c52)) THEN 0.818971304670025 END, ((((((((((((((t1.c52)||(t1.c52)))AND(CAST(t1.c20 AS NUMERIC))))OR(((t1.c0)!=(t1.c52)))))AND(CASE x'0fae'  WHEN vt0.c0 THEN t1.c0 END)))AND((+ (vt0.c0)))))OR((vt0.c0 IN ()))))OR(((((((((t1.c0)AND(t1.c52)))OR(t1.c52)))AND(vt0.c0)))AND(vt0.c0)))), ((((((t1.c52)OR(t1.c52)))OR(vt0.c0))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (IFNULL(vt0.c0, t1.c20))), CASE WHEN t1.c0 THEN t1.c20 END COLLATE BINARY FROM vt0, t1 WHERE ('-1036016454'); -- 1ms;
SELECT DISTINCT CAST(((((t1.c0)AND(t1.c0)))OR(vt0.c0)) AS BLOB), (- (TOTAL(vt0.c0))), FIRST_VALUE((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOTNULL), LIKELY(vt0.c0), vt0.c0)) AND ((((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (('2s') IS TRUE))))) OVER () FROM vt0 WHERE ((~ (x'')));SELECT ALL CAST(COUNT(vt0.c0) AS NUMERIC), (((t1.c52)+(t1.c20)) IN ()), ((vt0.c0 COLLATE RTRIM)>=((- (t1.c20)))) FROM t1;SELECT vt0.c0 FROM vt0, t1 WHERE ((~ (CAST(x'' AS NUMERIC)))) GROUP BY x''; -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) COLLATE RTRIM, CAST(-1.464728053E9 AS BLOB), (((((t1.c52) NOT NULL)))=((((t1.c0) NOTNULL)))) FROM t1;SELECT UNLIKELY(((vt0.c0) NOT BETWEEN (t1.c52) AND (t1.c20))) FROM t1 WHERE ((((CAST(x'2e31' AS TEXT)))=((((NULL) NOT NULL)))));SELECT DISTINCT CAST((((vt0.c0, t1.c52, t1.c52))<=((vt0.c0, vt0.c0, t1.c20))) AS INTEGER), CAST((t1.c0 IN ()) AS TEXT), ((t1.c52 COLLATE BINARY) IS TRUE) FROM t1;SELECT DISTINCT 0.7430490724799579 FROM vt0 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT (((t1.c20))>((((((vt0.c0)AND(t1.c52)))OR(vt0.c0))))), 0X7b1732c9 COLLATE BINARY, ((((((((((t1.c20)+(t1.c20)))OR(SUM(t1.c0))))AND(AVG(vt0.c0))))OR(vt0.c0)))AND(CASE t1.c52  WHEN t1.c52 THEN t1.c52 WHEN t1.c20 THEN t1.c20 WHEN t1.c52 THEN 'G}' ELSE t1.c52 END)) FROM t1, vt0 INDEXED BY i98 WHERE (((0Xffffffffdd73eb9e) BETWEEN ('-1089958694') AND (0xffffffffcb868542)) COLLATE BINARY) INTERSECT SELECT DISTINCT GROUP_CONCAT(((t1.c52) IS FALSE)) OVER ( ORDER BY CASE WHEN vt0.c0 THEN t1.c0 WHEN (t1.c0 IN ()) THEN CASE WHEN '881636015' THEN vt0.c0 ELSE t1.c0 END WHEN (~ (t1.c52)) THEN ((t1.c52)OR(t1.c20)) ELSE vt0.c0 END  NULLS LAST), NULL, CAST(t1.c52 COLLATE NOCASE AS INTEGER) FROM t1, vt0 WHERE (CAST((('](na0xh') BETWEEN (x'e32a') AND (2065117897)) AS INTEGER));SELECT ALL ((TOTAL(vt0.c0)) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (t1.c20)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT SUM(((((t1.c0)AND(t1.c20)))OR(t1.c0))) OVER (), (((t1.c52 IN (vt0.c0, t1.c52))) BETWEEN ((~ (t1.c0))) AND (vt0.c0)), t1.c52 FROM vt0, t1; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)IS NOT(t1.c20))) COLLATE RTRIM FROM vt0, t1 WHERE ((((((-8.9327111E8)<=(x'ad36'))))>((((x'')<=('1690542815')))))); -- 0ms;
SELECT DISTINCT (((t1.c0 IN (t1.c0)))AND((+ (t1.c0)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((('8~')OR(CAST(t1.c0 AS NUMERIC))))OR(NULL)) FROM vt0;SELECT NULL FROM t1, vt0 WHERE ((((x'' COLLATE NOCASE))>(((NOT (-1.7976931348623157E308)))))); -- 0ms;
SELECT DISTINCT MAX((((t1.c20)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))), 0.09145107437927291, UPPER(((vt0.c0)<=(vt0.c0))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((((('-~')GLOB(t1.c52)))OR(t1.c52)))AND(LOWER(DISTINCT t1.c0))), TOTAL((((t1.c52, vt0.c0, x'38d6', 'De', t1.c20))<=((vt0.c0, t1.c52, NULL, vt0.c0, vt0.c0)))), ((((((((SUM(t1.c20))AND(vt0.c0 COLLATE RTRIM)))OR(-8.9327111E8)))AND(((t1.c0)>(t1.c0)))))AND((((vt0.c0))>((t1.c0))))) FROM t1;SELECT CAST(t1.c20 COLLATE BINARY AS BLOB) FROM t1, vt0 GROUP BY (((t1.c0) NOT BETWEEN (t1.c52) AND (t1.c20)) IN ()) HAVING CAST((((t1.c0))<=((t1.c52))) AS TEXT); -- 0ms;
SELECT DISTINCT MAX(CASE WHEN NULL THEN vt0.c0 ELSE t1.c0 END) FROM vt0 WHERE ((NOT (NULL COLLATE RTRIM)));SELECT DISTINCT ((-1.7976931348623157E308) NOT BETWEEN ((NOT (vt0.c0))) AND (CASE vt0.c0  WHEN t1.c20 THEN t1.c52 ELSE t1.c0 END)) FROM t1 ORDER BY CAST((t1.c20 IN (t1.c20, t1.c0)) AS INTEGER)  NULLS FIRST, (((~ ('1428030978'))) IS FALSE);SELECT DISTINCT (- (json(t1.c52))) FROM vt0;SELECT json_valid(vt0.c0 COLLATE BINARY) FROM t1 WHERE (CAST(((0.3830695387846924)>>(NULL)) AS TEXT)) ORDER BY ((t1.c20 COLLATE RTRIM)IS((t1.c20 IN ())))  NULLS FIRST, (((((t1.c20)OR(t1.c0)))OR(t1.c20)) IN ())  NULLS LAST LIMIT -1944719844;SELECT ALL ((t1.c20) NOT BETWEEN (((t1.c52) BETWEEN (t1.c20) AND (t1.c52))) AND ((((t1.c52))<((t1.c0))))), CAST(MAX(vt0.c0) AS REAL), ((COUNT(*)) ISNULL) FROM vt0, t1; -- 0ms;
SELECT ALL ((((vt0.c0) IS FALSE))/((((t1.c52)) NOT BETWEEN ((t1.c20)) AND ((t1.c52))))) FROM vt0 GROUP BY ((((t1.c52) BETWEEN (t1.c20) AND (t1.c0))) ISNULL), t1.c20, CASE WHEN ((t1.c20) BETWEEN (t1.c20) AND (NULL)) THEN (((t1.c0))>=((vt0.c0))) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN vt0.c0 WHEN (t1.c0 IN (t1.c52)) THEN ((t1.c0)!=(t1.c52)) ELSE NULL END;SELECT (((((((('1610698121' COLLATE NOCASE)AND((((t1.c52)) BETWEEN ((t1.c52)) AND ((t1.c0))))))AND(((((((((t1.c52)AND(t1.c20)))AND(t1.c0)))AND(x'')))AND(t1.c0)))))OR(GROUP_CONCAT(vt0.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c52 THEN vt0.c0 WHEN t1.c52 THEN t1.c20 ELSE t1.c52 END)), NTH_VALUE(((((((t1.c20))==((t1.c0)))))>((SQLITE_SOURCE_ID()))), 1.610698121E9) OVER (), t1.c0 FROM t1 WHERE (((x'7869')&(NULL)) COLLATE NOCASE) ORDER BY ((((vt0.c0) NOT BETWEEN (t1.c52) AND (0xffffffffcffa6179)))==(((t1.c52)GLOB(vt0.c0)))) ASC  NULLS FIRST;SELECT DISTINCT json_extract(CAST(t1.c0 AS TEXT), (((t1.c20))>((t1.c0))), CASE t1.c52  WHEN t1.c20 THEN t1.c20 WHEN t1.c0 THEN t1.c20 WHEN vt0.c0 THEN t1.c20 END, ((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0))) FROM vt0, t1 WHERE (CASE ((NULL)|(x''))  WHEN ((0.2953052028399381) IS TRUE) THEN ((NULL) BETWEEN (0.4561275601764714) AND (NULL)) WHEN CASE 0.7874902098226085  WHEN '1428030978' THEN NULL END THEN ((x'2f578c04fe09')&(705658676)) WHEN (~ (0.4415266143915283)) THEN ((0.594611415324763)AND(0xffffffff8c15ee1c)) ELSE ((x'') BETWEEN ('-179370927') AND ('c⇙/')) END); -- 0ms;
SELECT ALL (~ (((NULL)/(t1.c0)))), COUNT(((t1.c20)IS(0.42075558579155525))) OVER (), CAST(MIN(t1.c0, t1.c52) AS NUMERIC) FROM vt0 WHERE ((((((((((((x''))>=((NULL))))OR(((x'3e50')=('#K5JL')))))OR((('-1469346015')+(0X60dae63c)))))AND(((x'')/(0.7917449957531345)))))OR(881636015)));SELECT ALL (- (vt0.c0 COLLATE BINARY)) FROM t1, vt0; -- 0ms;
SELECT DISTINCT AVG(t1.c20) OVER ( ORDER BY CASE t1.c0  WHEN t1.c20 THEN t1.c52 ELSE t1.c0 END COLLATE BINARY  NULLS LAST) FROM vt0, t1; -- 0ms;
SELECT DISTINCT HEX(((t1.c0)IS(vt0.c0))) FROM vt0, t1 WHERE (LIKELIHOOD(x'', 0.26869854689014594)); -- 0ms;
SELECT ((((t1.c20) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<((((vt0.c0))<((t1.c20))))) FROM vt0;SELECT DISTINCT ((((((t1.c0)OR(t1.c0)))AND(t1.c52))) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c20) AND (vt0.c0))) AND (CASE t1.c20  WHEN vt0.c0 THEN vt0.c0 END)), 0.6954471592006851, CAST(QUOTE(t1.c52) AS BLOB) FROM vt0, t1; -- 0ms;
SELECT DISTINCT IFNULL(t1.c20, t1.c20) COLLATE RTRIM, AVG(TRIM(t1.c52, t1.c20)) OVER (), CAST(((t1.c52) BETWEEN (t1.c52) AND (t1.c52)) AS TEXT) FROM vt0, t1 GROUP BY 'F䧁'; -- 0ms;
SELECT DISTINCT (((t1.c52 IN ()))-(((t1.c52) IS TRUE))), ((('9B#%L' IN ()))!=(-1.469346015E9)), (0.335306464097766 IN ()) FROM t1; -- 0ms;
SELECT DISTINCT COALESCE(json_type(t1.c52), (((vt0.c0, vt0.c0, t1.c0)) BETWEEN ((t1.c0, t1.c20, t1.c0)) AND ((vt0.c0, NULL, t1.c20)))) FROM t1, vt0 WHERE (CAST((((('-2041842189')OR(0.8206896329646403)))AND(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT (+ (CAST(t1.c52 AS REAL))), json_type(CASE vt0.c0  WHEN t1.c52 THEN t1.c52 END), (+ (((t1.c0)<=(vt0.c0)))) FROM t1 GROUP BY (((vt0.c0)) BETWEEN (((((vt0.c0))>=((t1.c52))))) AND ((vt0.c0))), t1.c52, (((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c20)))) ISNULL) HAVING ((CASE t1.c52  WHEN t1.c0 THEN '' END)AND(AVG(t1.c0))) ORDER BY ((((('-780777976') ISNULL)))=((t1.c0)))  NULLS LAST;SELECT (((((NOT (vt0.c0)))AND(((t1.c20)%(t1.c20)))))AND((+ (x'')))) FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN ((((t1.c52) BETWEEN (vt0.c0) AND (t1.c0)))) AND (((~ (t1.c0)))))  NULLS FIRST;SELECT ALL COUNT(*) OVER () FROM t1, vt0 WHERE (-1.469346015E9); -- 0ms;
SELECT (((((t1.c0) ISNULL), ((t1.c52) NOTNULL), ((((vt0.c0)OR(t1.c0)))AND(t1.c0))))>=((t1.c0 COLLATE NOCASE, ((t1.c20) NOTNULL), (+ (t1.c20))))) FROM t1, vt0 WHERE (CASE NULL  WHEN (((NULL))!=((0x7b1732c9))) THEN NULL ELSE (((((((('881636015')AND(NULL)))AND(2139094845)))AND('L')))AND(NULL)) END) LIMIT 1856340374 OFFSET 654212984; -- 0ms;
SELECT (+ ((- (vt0.c0)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT NULL, t1.c0, x'd2a8' FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c20))>=((t1.c0))) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((((- (0.7152742288384105)))AND((((t1.c52)) BETWEEN ((t1.c20)) AND ((t1.c52))))))OR(((vt0.c0)<(vt0.c0)))) FROM vt0, t1 WHERE ((((~ (-1.79370927E8))) NOTNULL)) GROUP BY ((t1.c20) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((t1.c0 IN ()))); -- 0ms;
SELECT CASE WHEN ((t1.c0)LIKE(t1.c0)) THEN CAST(t1.c0 AS TEXT) END FROM vt0, t1 GROUP BY 0.8206896329646403, 1.428030978E9, ((json_object(vt0.c0, NULL, t1.c20, t1.c52)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND ((NULL IN (t1.c52))));SELECT DISTINCT LAG(((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((0.6144112428671948)LIKE(vt0.c0))) AND (((((t1.c0)AND(-463613465)))AND(vt0.c0)))), (+ ((t1.c52 IN (x'1b38')))), ((((vt0.c0)-(t1.c20))) IS TRUE)) OVER () FROM vt0, t1 WHERE (((NULL COLLATE NOCASE)|(x''))); -- 0ms;
SELECT ALL NTILE(CASE WHEN CASE WHEN t1.c0 THEN vt0.c0 END THEN ((((t1.c20)AND(t1.c0)))AND(vt0.c0)) END) OVER (), (((((('1624958524')OR(t1.c0)))OR(vt0.c0)))GLOB(((((t1.c52)AND(t1.c52)))AND(t1.c52)))), vt0.c0 FROM t1, vt0 WHERE (COALESCE((((0.2806208062385309, x'f40c', x'')) BETWEEN (('1642168944', NULL, 0xfffffffff54f0451)) AND ((0.594611415324763, '', 0xffffffffcb868542))), ((('1323535992'))<((NULL))))) LIMIT 374897118 OFFSET -586506397; -- 0ms;
SELECT DISTINCT ((((COUNT(t1.c52))OR(((t1.c52)&(t1.c0)))))AND(((t1.c0)<=(t1.c52)))), RTRIM(json_array_length(t1.c0)), ((t1.c52)LIKE(((t1.c52) BETWEEN (t1.c52) AND (t1.c20)))) FROM vt0, t1 WHERE (((((NULL) IS FALSE)) NOTNULL));SELECT DISTINCT ((+ (t1.c20)) IN (t1.c0 COLLATE NOCASE)), (+ (x'')), (t1.c52 COLLATE RTRIM IN ()) FROM t1, vt0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(t1.c20) OVER ( PARTITION BY CASE vt0.c0  WHEN t1.c0 THEN t1.c52 WHEN t1.c0 THEN vt0.c0 WHEN NULL THEN 0.6639371677226709 ELSE NULL END COLLATE RTRIM, CASE WHEN ((t1.c52)IS NOT(t1.c0)) THEN CASE WHEN t1.c0 THEN t1.c20 ELSE 0.7917449957531345 END END ORDER BY (((t1.c20 IN ())) BETWEEN (HEX(t1.c20)) AND ((- (t1.c20))))  NULLS LAST) FROM t1, vt0 WHERE ((((((0.49838522518299777))!=((''))))LIKE(NULL))); -- 1ms;
SELECT ((t1.c0 COLLATE NOCASE) NOT BETWEEN (AVG(t1.c20)) AND ((t1.c20 IN ()))), ((((t1.c20)%(t1.c52)))|('-1165631499' COLLATE RTRIM)), '881636015' FROM vt0 GROUP BY ((CAST(t1.c0 AS TEXT)) NOT NULL);SELECT DISTINCT 413043027, ((t1.c52 COLLATE BINARY)==(((t1.c52)||(t1.c0)))), t1.c52 FROM vt0, t1 WHERE ((('')>>(CAST(0.4003112312373781 AS REAL)))) ORDER BY HEX((- ('f'''))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN SUM(vt0.c0) THEN (~ (t1.c52)) ELSE AVG(vt0.c0) END FROM vt0;SELECT ALL json_array_length(((t1.c0)IS NOT(t1.c52)), ((t1.c52)&(vt0.c0))) FROM t1;SELECT ((((((vt0.c0)-(t1.c52)))OR(((x'') NOT BETWEEN (t1.c52) AND (t1.c0)))))AND(((((t1.c20)OR(t1.c52)))OR(NULL)))), (((vt0.c0 IN ()))OR(((vt0.c0) BETWEEN (t1.c20) AND (t1.c52)))), CASE CAST(t1.c20 AS TEXT)  WHEN t1.c20 COLLATE NOCASE THEN t1.c20 END FROM t1;SELECT ALL (((((t1.c20)AND(vt0.c0)))AND(t1.c52)) IN ()), ((NULL)+((t1.c20 IN ()))), COUNT(LIKELY(t1.c52)) OVER () FROM t1, vt0; -- 0ms;
SELECT 'v<fcm' FROM vt0, t1 NOT INDEXED WHERE (CASE x'4c7a'  WHEN ((0.27590100902300474) NOT NULL) THEN CASE x''  WHEN 0.5924452825355457 THEN NULL ELSE '292278752' END END); -- 0ms;
SELECT DISTINCT (2109147998 IN ()) FROM vt0 WHERE (''); -- 0ms;
SELECT (((t1.c52))>=((CAST(t1.c0 AS TEXT)))), 1.446083189E9, LAST_VALUE(json_quote(CASE vt0.c0  WHEN t1.c0 THEN t1.c20 WHEN -1109064673 THEN 0.6450262207890731 WHEN t1.c0 THEN 0.010142075880936297 ELSE t1.c20 END)) OVER ( ORDER BY ((t1.c20) ISNULL) COLLATE RTRIM DESC  NULLS LAST) FROM vt0, t1 WHERE (((((CAST('-805674631' AS NUMERIC))OR('ss)#UUF' COLLATE BINARY)))OR(((-7.80777976E8) IS TRUE)))); -- 1ms;
SELECT DISTINCT (NOT (((t1.c0)<<(t1.c0)))), TOTAL(HEX(DISTINCT t1.c20)), ((((t1.c20) ISNULL))>=(CASE WHEN t1.c52 THEN vt0.c0 END)), ((((t1.c0) NOTNULL))&(COALESCE(t1.c20, t1.c0))), (COUNT(t1.c20) IN ()), ((CAST(vt0.c0 AS INTEGER)) ISNULL), LAST_VALUE(((((((((((((vt0.c0)OR(x'')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) IS FALSE))))AND(vt0.c0 COLLATE NOCASE))) OVER () FROM vt0 WHERE ((((((('0.4561275601764714')OR(NULL)))OR(NULL))) BETWEEN (CAST('483689952' AS INTEGER)) AND (((0.9252246557242024) ISNULL)))) GROUP BY CAST(((t1.c52) NOT NULL) AS TEXT) LIMIT 321601992 OFFSET 1323535992;SELECT DISTINCT ((t1.c20)%(GLOB(t1.c0, vt0.c0))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT SUM(CAST(NULL AS TEXT)) FROM t1, vt0; -- 0ms;
SELECT FIRST_VALUE((((((vt0.c0, t1.c0, NULL)) BETWEEN ((t1.c20, t1.c0, t1.c52)) AND ((t1.c20, t1.c20, vt0.c0)))) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))) AND ((+ (t1.c0))))) OVER () FROM t1, vt0 GROUP BY '{}k\r3' HAVING (((t1.c20, t1.c52, x'', t1.c52, t1.c0)) BETWEEN ((TRIM(NULL, vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c52) AND (t1.c20)), ((((t1.c20)OR(t1.c52)))OR(t1.c52)), ((vt0.c0) NOT BETWEEN (t1.c52) AND (t1.c0)), (0.9855562142281169 IN ()))) AND ((t1.c52 COLLATE NOCASE, t1.c52 COLLATE BINARY, CAST(t1.c52 AS BLOB), CASE WHEN t1.c52 THEN t1.c0 ELSE t1.c52 END, CASE t1.c20  WHEN t1.c20 THEN vt0.c0 WHEN t1.c20 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END))); -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c52)))IS((NOT (t1.c0)))) FROM vt0 WHERE ((NULL COLLATE BINARY IN ()));SELECT DISTINCT MIN((t1.c0 IN ())), GROUP_CONCAT(((t1.c20) IS TRUE)) FILTER(WHERE CAST(((t1.c20) IS FALSE) AS BLOB)) OVER (), CASE WHEN (((t1.c52))<=(('	M<d>s'))) THEN LIKELY(DISTINCT t1.c52) WHEN t1.c52 THEN t1.c0 COLLATE NOCASE WHEN ((NULL)<(vt0.c0)) THEN ((t1.c0)&(t1.c0)) END FROM vt0 ORDER BY (+ (t1.c20)) COLLATE NOCASE  NULLS FIRST LIMIT 1807597151 OFFSET -1964698292;SELECT ((vt0.c0)|(CASE WHEN vt0.c0 THEN t1.c20 ELSE vt0.c0 END)) FROM t1 WHERE ((x'' COLLATE BINARY IN ()));SELECT DISTINCT (((~ (vt0.c0)))=((((t1.c52))>=((vt0.c0))))), (+ (t1.c0 COLLATE BINARY)), MAX(COUNT(CAST(t1.c52 AS REAL))) FROM vt0, t1 LIMIT -1204103807 OFFSET 1446083189;SELECT DISTINCT ((COUNT(*)) BETWEEN ((NOT (t1.c0))) AND (((((t1.c52)AND(t1.c52)))AND(0xffffffff9700a36b)))) FROM t1 WHERE (CASE ((NULL)AND('769540289'))  WHEN ((((((((NULL)OR(NULL)))OR(0x1cd485e0)))OR(1206442014)))OR(2.109147998E9)) THEN x'76b4' WHEN NULL COLLATE NOCASE THEN ((x'7eeb')AND(0.08337811621111835)) WHEN CASE 0.43148983366440574  WHEN '5%EQh爅#' THEN 'GG' ELSE -2065938136 END THEN (('X''C&uHz/p') IS TRUE) END); -- 0ms;
SELECT DISTINCT ((COUNT(*)) ISNULL), '', 1.206442014E9 FROM vt0, t1 GROUP BY ((((((((((t1.c52) IS FALSE))AND(((vt0.c0)*(NULL)))))OR(((t1.c20)<=(t1.c52)))))AND(((t1.c0)IS(x'4fe2')))))AND(t1.c20 COLLATE NOCASE)); -- 0ms;
SELECT ALL 1407114348, ((((0.05917127098221431) ISNULL)) BETWEEN (AVG(vt0.c0)) AND ((t1.c0 IN ()))), -466012406 FROM t1;SELECT DISTINCT '1206442014', CASE (((t1.c20))<=((vt0.c0)))  WHEN t1.c20 COLLATE RTRIM THEN UNLIKELY(DISTINCT t1.c20) WHEN (((vt0.c0, t1.c20, t1.c20)) BETWEEN ((t1.c20, 0.010142075880936297, t1.c0)) AND ((t1.c20, x'', t1.c20))) THEN (((t1.c0))<((t1.c0))) WHEN ((t1.c20) BETWEEN (t1.c0) AND ('')) THEN ((t1.c52)||(t1.c0)) ELSE (((t1.c0))>=((t1.c52))) END, (((80507397))==((t1.c20))) FROM vt0, t1 WHERE (((('9xba')) NOT BETWEEN ((0.13055688974883561)) AND ((CASE '0.4692078262163728'  WHEN 0.966284343409582 THEN -561485194 ELSE 0.06764392816299192 END)))); -- 0ms;
SELECT ALL (- (CAST(t1.c20 AS REAL))), (+ (((((((((vt0.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c20)))AND(vt0.c0)))), CAST((t1.c20 IN ()) AS BLOB), CAST(((t1.c20)<<(t1.c0)) AS NUMERIC), x'eebc' FROM vt0 WHERE ((- (((((((((0.6990977317215384)AND('2049581753')))AND('2109147998')))OR('')))OR('_')))));SELECT DISTINCT CUME_DIST() OVER () FROM t1 WHERE (('' COLLATE RTRIM IN ())); -- 0ms;
SELECT ALL COUNT((vt0.c0 IN ())) FROM vt0, t1 WHERE (((((((0.27869336046769844)OR('')))OR(0.6338265351849024)))<=(((NULL)>>(x'525b'))))); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN t1.c20 COLLATE BINARY WHEN ((t1.c20) IS TRUE) THEN (((t1.c52))>((vt0.c0))) WHEN ((vt0.c0)LIKE(t1.c52)) THEN t1.c20 ELSE ((t1.c52) NOT BETWEEN (t1.c20) AND (t1.c20)) END FROM vt0, t1; -- 0ms;
SELECT (- (0.8206896329646403)) FROM t1, vt0 WHERE ((((0.39829342440912563))<(('-893271110'))) COLLATE NOCASE); -- 1ms;
SELECT ((((((((((((((((0.8748733644079648)AND(t1.c0)))AND(t1.c52)))AND(t1.c0)))AND(vt0.c0)))AND(CAST(t1.c0 AS NUMERIC))))AND(COUNT(t1.c20))))OR((- (t1.c52)))))OR(CAST(vt0.c0 AS REAL))), ((t1.c20) NOT NULL) COLLATE RTRIM, ((((CASE t1.c0  WHEN '' THEN NULL ELSE 0.05093235133598717 END)AND(t1.c20 COLLATE RTRIM)))OR(CASE WHEN t1.c52 THEN t1.c20 WHEN vt0.c0 THEN t1.c52 WHEN t1.c20 THEN '3839476' ELSE t1.c0 END)) FROM t1;SELECT DISTINCT (((t1.c20) ISNULL) IN (((vt0.c0)+(x'')))) FROM t1, vt0 WHERE (NULL COLLATE BINARY) LIMIT -553820462; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c0 COLLATE RTRIM THEN vt0.c0 WHEN ((t1.c52) NOT BETWEEN (t1.c52) AND (vt0.c0)) THEN ((((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))OR(NULL)))OR(x'f53c')))AND(t1.c20)))OR(x'')) WHEN ((t1.c20)==(t1.c0)) THEN ((t1.c0) NOT BETWEEN (vt0.c0) AND (0.36070608639045243)) ELSE vt0.c0 COLLATE RTRIM END FROM vt0 WHERE (((CASE WHEN 0.06971114176982973 THEN x'fcd8' END) BETWEEN ((2.92278752E8 IN ())) AND (((0.6338265351849024)IS(x'')))));SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC))GLOB(((t1.c52) NOT BETWEEN (t1.c20) AND (t1.c52)))), MAX((t1.c20 IN ())) COLLATE RTRIM, COUNT(*) FROM vt0, t1; -- 0ms;
SELECT ALL CASE (t1.c52 IN ())  WHEN ((t1.c0)LIKE(vt0.c0)) THEN (- (vt0.c0)) END FROM t1, vt0 WHERE (((((CAST(4.13043027E8 AS REAL))AND('1111913463' COLLATE NOCASE)))OR(x''))); -- 0ms;
SELECT DISTINCT ((((t1.c52)>(t1.c20))) BETWEEN (t1.c52) AND (AVG(t1.c0))), (~ (((vt0.c0) NOT NULL))), ((((((((t1.c0)AND(t1.c20)))OR(1487170516)))OR(GROUP_CONCAT(t1.c52))))AND(MIN(t1.c52))) FROM t1, vt0 WHERE ((((x'' IN (')࿼', '](Na0xh'))) NOTNULL)); -- 11ms;
SELECT ALL '1487170516' FROM vt0, t1 ORDER BY 0.5441657220840649 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((TOTAL(t1.c52)) NOT BETWEEN (NULL) AND (((vt0.c0)<(t1.c20)))), t1.c52, ((CAST(t1.c52 AS INTEGER))IS(((((t1.c52)OR(vt0.c0)))AND(t1.c52)))) FROM vt0, t1; -- 0ms;
SELECT ALL (+ (((t1.c52)OR(t1.c20)))), (NOT (((vt0.c0)OR(t1.c0)))), NULL FROM t1 WHERE ((((('') IS TRUE))<(0xffffffff9f36c8e0 COLLATE RTRIM)));SELECT CASE WHEN NULL THEN (+ (t1.c52)) ELSE ((t1.c20) IS TRUE) END, JULIANDAY(((t1.c20)<(t1.c20)), vt0.c0, ''), (x'd99a' IN ()) FROM vt0, t1 WHERE ((((x'' IN ()))!=(((x'2e0f9e66')+(6.54212984E8))))); -- 0ms;
SELECT DISTINCT NULL FROM vt0, t1 WHERE (json_array_length(0.08337811621111835, SQLITE_COMPILEOPTION_USED(1206442014)));SELECT ALL GROUP_CONCAT((+ (t1.c20))), NULL, ((((t1.c0)OR(((t1.c52)<>(t1.c0)))))AND(((x'')%(t1.c0)))) FROM vt0 WHERE ((((((~ (x'')))OR((((2.92278752E8)) NOT BETWEEN (('')) AND ((x''))))))AND((('-1165631499')<(0.0499864429728083))))) ORDER BY (((((((0X3ffbcaf7)AND(vt0.c0)))OR(t1.c20))))<(((- (t1.c52)))));SELECT DISTINCT IFNULL(DISTINCT MIN(t1.c20), GROUP_CONCAT(t1.c0)) FROM t1 WHERE (CAST((((('GG')AND(NULL)))OR(0.0592716152833731)) AS NUMERIC)) GROUP BY t1.c20, CAST(t1.c0 AS INTEGER) COLLATE BINARY, CASE WHEN ((t1.c52) IS TRUE) THEN (((t1.c0))=((vt0.c0))) WHEN t1.c0 COLLATE NOCASE THEN t1.c0 WHEN ((((((((t1.c52)AND(x'5fb7')))AND(t1.c52)))OR('430633557')))OR(vt0.c0)) THEN (((t1.c0)) NOT BETWEEN ((t1.c52)) AND ((t1.c20))) END;SELECT CAST(((t1.c52) IS FALSE) AS NUMERIC) FROM t1 WHERE (((((1.856340374E9)=('䤨L\n}O)PJq')))<(0.6705596166331007))); -- 0ms;
SELECT CASE ((vt0.c0) NOT NULL)  WHEN (- (t1.c0)) THEN (('^I')+(vt0.c0)) END FROM vt0, t1 WHERE (((0.6623621642080736 IN ()) IN ((('') NOT BETWEEN ('c1y51oCn\n') AND (0.736149319271046))))) GROUP BY CAST(((vt0.c0) NOT NULL) AS INTEGER) HAVING CAST(((((vt0.c0)OR(t1.c20)))AND('')) AS INTEGER); -- 0ms;
SELECT (((((t1.c20)) BETWEEN ((t1.c20)) AND ((t1.c52))))IS(((t1.c52)<<(t1.c52)))) FROM t1, vt0 WHERE (CAST(((-8.8037651E8) IS TRUE) AS REAL)); -- 0ms;
SELECT ALL ((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c52)))=(x'')) FROM vt0, t1 WHERE (((CASE WHEN '2s' THEN NULL ELSE x'' END) ISNULL)); -- 0ms;
SELECT ALL t1.c52, ((((t1.c20)<<(x'')))*((((t1.c0))<((t1.c0))))), CASE (((t1.c52))==((vt0.c0)))  WHEN ((t1.c20) NOT BETWEEN (-1.165631499E9) AND (t1.c0)) THEN COUNT(*) ELSE MIN(t1.c20) END FROM vt0, t1 WHERE (CASE '1642168944' COLLATE NOCASE  WHEN ('1714140612' IN ('', NULL)) THEN CAST(NULL AS REAL) END) ORDER BY CASE WHEN (((t1.c20))<((t1.c52))) THEN ((x'cf5b') NOT BETWEEN (t1.c0) AND (t1.c0)) END DESC; -- 0ms;
SELECT ALL MAX(SUM(CAST(t1.c52 AS NUMERIC))), NULL, ((MAX(0.6205607351611239)) NOT BETWEEN (CASE t1.c52  WHEN '#sK3*9' THEN vt0.c0 WHEN t1.c20 THEN t1.c20 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END) AND (CAST(t1.c20 AS INTEGER))) FROM t1, vt0 WHERE (((((0.2758037864770476, '-1165159090', 0.594611415324763))<=((598475629, x'', 0xffffffffa0dec239))) IN ()));SELECT FIRST_VALUE(CASE WHEN vt0.c0 THEN t1.c52 END COLLATE RTRIM) OVER () FROM vt0, t1; -- 0ms;
SELECT ALL ((((UNLIKELY(vt0.c0))AND(((((((((t1.c20)AND(vt0.c0)))OR(0X246e6d4c)))OR(t1.c20)))AND(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((((('', x'', 0.7881555163860274)) BETWEEN ((x'', '1621567052', x'')) AND (('x', x'', 0.35797090382177976))))>=((((x'')) NOT BETWEEN (('')) AND (('d5.<V]tBw'))))));SELECT DISTINCT ((CASE WHEN vt0.c0 THEN t1.c0 END)OR(((((t1.c52)AND(t1.c52)))OR(t1.c0)))), ((AVG(x''))/(0.6050852494119872)), 0.26813891940012724 COLLATE NOCASE FROM t1 INDEXED BY i98 WHERE (CASE WHEN (x'' IN (1012517374)) THEN (('1446083189') ISNULL) END);SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0)), (- (t1.c52)), (((((((('eS)w1Sb32')OR(vt0.c0)))AND(vt0.c0)))AND(t1.c0)))AND(x''))))>=((CAST(t1.c20 AS NUMERIC), LIKE(t1.c52, '-466012406', 'q'), ((((vt0.c0)AND(vt0.c0)))OR(t1.c20))))) FROM t1 WHERE (IFNULL((NOT ('0.7430490724799579')), CAST(NULL AS REAL)));SELECT 'De', CUME_DIST() OVER (), CASE t1.c52  WHEN t1.c20 THEN t1.c52 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c52 ELSE t1.c52 END COLLATE BINARY FROM vt0;SELECT DISTINCT CASE WHEN (- (t1.c20)) THEN t1.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS REAL) END FROM vt0 GROUP BY ('0' IN ()), NULL COLLATE NOCASE, rtreenode((((t1.c0))<>((t1.c20))), (~ (t1.c0))) HAVING CASE WHEN ((t1.c20)IS NOT(0.025849194524006802)) THEN ((t1.c0)IS(t1.c52)) ELSE 0.23458216758399186 END LIMIT -805674631 OFFSET -1015191565;SELECT DISTINCT '-491822018', UPPER(DISTINCT CASE t1.c20  WHEN t1.c52 THEN t1.c20 WHEN vt0.c0 THEN t1.c52 WHEN t1.c0 THEN t1.c20 END), CASE ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c20))  WHEN CAST(t1.c20 AS BLOB) THEN ((t1.c20) NOT NULL) ELSE (((vt0.c0))<=((t1.c52))) END FROM t1 WHERE (((((((x''))>((NULL)))))<>(('' COLLATE NOCASE))));SELECT DISTINCT INSTR(t1.c0, ((t1.c20) IS TRUE)) FROM vt0, t1 WHERE (CASE WHEN LOWER(DISTINCT 0.49733898940672483) THEN (NULL IN ()) ELSE ((NULL) NOT NULL) END); -- 0ms;
SELECT CASE WHEN ((t1.c0) IS FALSE) THEN CASE x''  WHEN vt0.c0 THEN NULL WHEN 0.007621051177498339 THEN x'' WHEN t1.c0 THEN t1.c0 END WHEN (- (vt0.c0)) THEN NULL WHEN CAST(1357212349 AS BLOB) THEN MAX(vt0.c0) ELSE (((t1.c52)) BETWEEN ((vt0.c0)) AND ((t1.c52))) END, NULL, CASE vt0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM FROM vt0;SELECT DISTINCT x'', LEAD(((t1.c52 COLLATE BINARY) IS FALSE), LIKE(CASE WHEN 1012517374 THEN t1.c20 ELSE t1.c52 END, LIKELY(DISTINCT t1.c20), 'I'), (t1.c52 IN ((+ (vt0.c0)), ((((t1.c52)AND(t1.c52)))OR(vt0.c0))))) OVER (), NULLIF(((t1.c20)>=(t1.c20)), ((t1.c20)<<(t1.c20))) FROM vt0, t1 WHERE (((json_array_length(x'')) NOT NULL));SELECT PERCENT_RANK() OVER () FROM t1 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT ((((0.4692078262163728) NOT BETWEEN (t1.c20) AND (t1.c20)))>>(SUM(vt0.c0))), (((((t1.c52)!=(t1.c0))))>=(((((vt0.c0)) BETWEEN ((t1.c52)) AND ((t1.c20)))))), (NOT ((((NULL))>((vt0.c0))))) FROM t1, vt0; -- 0ms;
SELECT ((((t1.c20)AND(t1.c52))) IS FALSE) FROM t1 WHERE (NULLIF(DISTINCT CASE '-328010150'  WHEN x'' THEN 0.9998085044430255 ELSE 0.25994096372484143 END, ((x'')LIKE('138901042')))); -- 0ms;
SELECT DISTINCT CASE ''  WHEN DATETIME(vt0.c0, vt0.c0, t1.c0) THEN t1.c52 END FROM vt0, t1 WHERE ((('')OR((('5%EQh爅#') IS FALSE)))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t1.c20) NOT BETWEEN (t1.c0) AND (t1.c20))) FROM vt0 WHERE (CAST(0X23802f38 AS INTEGER));SELECT ALL COUNT(COUNT(SUM(t1.c52))), CAST(((vt0.c0)!=(vt0.c0)) AS TEXT), GROUP_CONCAT(((((((((((((t1.c0)OR(t1.c52)))AND(t1.c52)))OR(vt0.c0)))AND(t1.c52)))AND(t1.c52)))AND(vt0.c0))) OVER ( ORDER BY (((vt0.c0)) BETWEEN ((((((t1.c52)AND(t1.c52)))AND(NULL)))) AND ((((t1.c0) IS FALSE)))) DESC  NULLS FIRST) FROM t1, vt0;SELECT DISTINCT ((vt0.c0)IS(NULL)) COLLATE NOCASE, LAG(CASE WHEN ((vt0.c0)/(vt0.c0)) THEN x'5288' WHEN ((vt0.c0) IS FALSE) THEN (((vt0.c0, vt0.c0, vt0.c0, 'Jb', vt0.c0)) BETWEEN ((0.9050181294317785, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'36e0a1275461'))) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.010202971484232326))) THEN x'' END, ((vt0.c0)<(vt0.c0)) COLLATE NOCASE, (+ (((vt0.c0)>=(vt0.c0))))) OVER (), (((+ (t1.c52))) IS FALSE) FROM vt0 ORDER BY t1.c20 DESC  NULLS FIRST;SELECT ALL CAST(((((vt0.c0)AND(t1.c0)))AND(vt0.c0)) AS INTEGER) FROM vt0, t1 WHERE ((+ (((NULL) ISNULL)))) GROUP BY 0.6570424939944899; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((NULL) NOT NULL)))=(((('Xe<Hxf㾦P') BETWEEN ('*[\n4aJvc') AND ('1374691646')))))); -- 0ms;
SELECT ALL ((((t1.c20) IS TRUE)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((('}8 0☼') NOTNULL))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c20 THEN NULL END)&((t1.c0 IN ()))), ((NULLIF(DISTINCT t1.c20, t1.c52))+(CASE t1.c20  WHEN x'' THEN t1.c52 WHEN t1.c52 THEN -944410259 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END)), TOTAL(CASE WHEN t1.c52 THEN t1.c20 END), t1.c20, CASE -1.469346015E9  WHEN ((t1.c52)LIKE(t1.c0)) THEN (t1.c20 IN ()) END FROM t1;SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) IS TRUE), (((((+ (vt0.c0)))AND(CASE WHEN t1.c20 THEN t1.c52 WHEN t1.c52 THEN t1.c52 WHEN t1.c52 THEN t1.c20 ELSE t1.c20 END)))OR(vt0.c0)), ((((((t1.c0)<=(t1.c20)))AND(((t1.c0)|(NULL)))))AND(CASE vt0.c0  WHEN t1.c20 THEN t1.c20 END)), UPPER(CASE t1.c20  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END), ((((t1.c20)>=(t1.c52)))<(t1.c52 COLLATE BINARY)) FROM vt0, t1 WHERE (CAST(CASE x''  WHEN 0X2ca30e9c THEN 0.5447156709389814 ELSE NULL END AS BLOB)); -- 0ms;
SELECT DISTINCT ((((t1.c0) NOT BETWEEN (t1.c20) AND (t1.c20)))=(CAST('-1494189339' AS TEXT))) FROM vt0 NOT INDEXED;SELECT DISTINCT GROUP_CONCAT(CASE WHEN t1.c20 THEN vt0.c0 END) OVER (), (((t1.c20)) NOT BETWEEN ((LOWER(430633557))) AND ((t1.c20 COLLATE BINARY))), (+ ((+ (t1.c52)))) FROM vt0, t1 WHERE ((((('1446083189')) BETWEEN (('^Pp+{')) AND (('1930503740'))) IN (CAST('	&' AS REAL)))); -- 0ms;
SELECT ALL (+ ((((t1.c52))>((vt0.c0))))) FROM vt0, t1 NOT INDEXED; -- 7ms;
SELECT DISTINCT COUNT(t1.c20) FROM vt0 WHERE (((((((1612816224) NOT BETWEEN ('-377455016') AND (x'')))OR(x'' COLLATE RTRIM)))OR(CAST(x'' AS BLOB))));SELECT TRIM(((((t1.c52)OR(t1.c52)))AND(t1.c52)), 0x26fe7f78) FROM t1, vt0 WHERE (((((0.5734904069514819)-(NULL)))OR(x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL t1.c52 FROM vt0 WHERE (((((('')) NOT BETWEEN ((0.7055979359653706)) AND ((NULL)))) NOT BETWEEN (CAST(x'a76d' AS REAL)) AND ('469689465' COLLATE RTRIM)));SELECT (((TOTAL(t1.c0), ((t1.c20)>=(t1.c20)), (('-1944719844') IS TRUE)))<((vt0.c0, -530628641, (vt0.c0 IN ())))), CAST(CAST(t1.c0 AS TEXT) AS TEXT), ((DATE(t1.c0, vt0.c0, vt0.c0)) IS FALSE) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((x'')/((~ (t1.c0)))) FROM t1 WHERE ((- ((('0.43148983366440574')<(NULL))))); -- 0ms;
SELECT ALL ((((vt0.c0)<<(t1.c20))) BETWEEN (t1.c52) AND ((t1.c20 IN ()))) FROM t1, vt0; -- 0ms;
SELECT ((((((t1.c52)AND(t1.c20)))OR(t1.c0))) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND ((t1.c0 IN (t1.c0)))), ((((((t1.c0)OR(t1.c0)))OR(t1.c20)))>>(json(vt0.c0))), (((t1.c0 IN ())) NOT BETWEEN (CASE t1.c52  WHEN t1.c52 THEN t1.c52 WHEN t1.c20 THEN vt0.c0 WHEN t1.c0 THEN t1.c20 ELSE x'' END) AND (((vt0.c0) NOT BETWEEN (t1.c52) AND (vt0.c0)))) FROM vt0, t1; -- 0ms;
SELECT t1.c52, ((t1.c0) IS FALSE) COLLATE BINARY, ((json_remove(vt0.c0, t1.c0)) NOT BETWEEN (((t1.c52)+(t1.c52))) AND (((t1.c0) NOT NULL))) FROM vt0, t1 WHERE (IFNULL(DISTINCT x'' COLLATE BINARY, NULLIF(x'c749', 0.2960270436235065))) LIMIT 747156741 OFFSET 925091710; -- 0ms;
SELECT ALL (((((x'47d825a2') NOTNULL)))<=((((((t1.c0)AND(t1.c0)))AND(t1.c52))))) FROM vt0 LIMIT -212183544;SELECT ALL (((NULL)LIKE(vt0.c0)) IN ()) FROM vt0, t1 WHERE (((TRIM(DISTINCT NULL))<>(CAST(-1184605809 AS REAL)))); -- 0ms;
SELECT CAST(TOTAL(t1.c52) AS NUMERIC), CASE WHEN CASE WHEN vt0.c0 THEN t1.c52 END THEN '1206442014' ELSE t1.c52 END, 0.7917449957531345 FROM vt0 WHERE ('-377455016');SELECT ALL ((t1.c52 COLLATE RTRIM)*(CASE vt0.c0  WHEN t1.c52 THEN 'vk|D#' WHEN x'f42a' THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM t1, vt0 LIMIT -286121417 OFFSET -1380542328; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((((((((((t1.c0)>=(t1.c52)))OR((((t1.c20))=((t1.c52))))))OR(CAST(t1.c0 AS BLOB))))AND(CAST(t1.c52 AS BLOB))))AND(t1.c20 COLLATE BINARY)), ((((vt0.c0)>=(t1.c20))) NOT BETWEEN (((t1.c52) NOT NULL)) AND (CASE WHEN t1.c52 THEN t1.c0 END)) FROM t1, vt0; -- 0ms;
SELECT ALL CASE ((t1.c52)%(vt0.c0))  WHEN (~ (t1.c52)) THEN ((1073466103)+(t1.c52)) ELSE ((vt0.c0)<>(t1.c20)) END, (((t1.c52, t1.c52, vt0.c0)) NOT BETWEEN (((t1.c52 IN ()), COUNT(t1.c20), t1.c20)) AND ((((vt0.c0) NOT NULL), ((t1.c52)IS(vt0.c0)), ((t1.c20)LIKE(t1.c0))))), ((t1.c20)%(t1.c20)) COLLATE NOCASE COLLATE BINARY FROM t1, vt0; -- 0ms;
SELECT DISTINCT IFNULL(t1.c0, t1.c52) COLLATE NOCASE FROM vt0 LIMIT -1964698292;SELECT DISTINCT ((t1.c52 COLLATE NOCASE) BETWEEN ((- (t1.c0))) AND (((vt0.c0)OR(t1.c20)))) FROM t1 ORDER BY (((((vt0.c0) BETWEEN (NULL) AND (t1.c52))))<>((CAST(0x7678be9a AS REAL))));SELECT ALL ((((vt0.c0 IN ())))=((vt0.c0 COLLATE RTRIM))) FROM t1, vt0 WHERE (((((0xffffffffbf2e9421)OR('G}')))OR(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((((CAST(t1.c0 AS INTEGER))AND(((t1.c52)+(vt0.c0)))))OR(((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c52)))AND(t1.c52)))))OR(((t1.c20) ISNULL))))AND(CASE t1.c52  WHEN 0.26813891940012724 THEN t1.c52 WHEN t1.c20 THEN vt0.c0 WHEN vt0.c0 THEN t1.c20 END)), vt0.c0, vt0.c0 FROM t1 WHERE (HEX((((-2.041842189E9, 0.9935864707495397, 0.6338265351849024)) BETWEEN ((0.5716784456387448, NULL, 0.7163005484274111)) AND (('LYvY[#', '0.05917127098221431', NULL))))) LIMIT 747156741 OFFSET -1109064673;SELECT CAST(((vt0.c0)<<(vt0.c0)) AS REAL), ((t1.c52 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)AND('FcNP'))) AND (t1.c20 COLLATE BINARY)), ((((vt0.c0)<=(vt0.c0))) NOTNULL) FROM vt0 ORDER BY HEX(((t1.c20) BETWEEN (t1.c52) AND (x'1274'))) DESC;SELECT DISTINCT CAST((((t1.c52))<=((t1.c20))) AS NUMERIC) FROM vt0;SELECT DISTINCT ROW_NUMBER() OVER (), ((t1.c52 COLLATE NOCASE)*(t1.c20)), (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c52)) IN ()) FROM t1 WHERE (CAST(0x103e825c AS NUMERIC) COLLATE BINARY) GROUP BY ((((vt0.c0) IS TRUE))>>((t1.c0 IN ()))), CAST((t1.c52 IN (NULL)) AS BLOB), (((vt0.c0, t1.c0, t1.c20)) BETWEEN ((t1.c52 COLLATE NOCASE, ((((t1.c0)AND(t1.c20)))AND(t1.c20)), (NOT (vt0.c0)))) AND ((((((t1.c52)OR(t1.c52)))OR(vt0.c0)), (NOT (vt0.c0)), (+ (vt0.c0))))) HAVING ((((CASE t1.c20  WHEN vt0.c0 THEN t1.c20 ELSE t1.c0 END)OR((NOT (t1.c20)))))OR((((vt0.c0))<=((t1.c52)))));SELECT DISTINCT CAST(CASE t1.c20  WHEN t1.c0 THEN 0.6019677147633908 ELSE t1.c0 END AS REAL) FROM t1, vt0 WHERE ((((((0.9031540476512835))<(('-377455016')))) ISNULL)); -- 0ms;
SELECT DISTINCT ((~ (vt0.c0)) IN ()), ((~ (t1.c20)) IN ()), ((AVG(t1.c52))|(CAST(t1.c52 AS REAL))) FROM t1 NATURAL JOIN vt0 GROUP BY (((((((t1.c20)AND(t1.c0)))OR(vt0.c0))))>=((t1.c20 COLLATE BINARY))) HAVING t1.c0; -- 0ms;
SELECT (+ (TRIM(t1.c20))), '', CAST((t1.c0 IN ()) AS INTEGER) FROM vt0, t1; -- 0ms;
SELECT (((((1.407114348E9)) NOT BETWEEN ((-3.77455016E8)) AND ((vt0.c0))))IS NOT(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((t1.c20)<>(t1.c20)))), COUNT(*) COLLATE NOCASE, TOTAL(COUNT(json_array_length(t1.c52, vt0.c0))) FROM vt0, t1;SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)AND(t1.c20)))) AND ((SUM(t1.c52)))) FROM vt0 UNION ALL SELECT DISTINCT CASE WHEN CAST(t1.c52 AS BLOB) THEN CASE WHEN vt0.c0 THEN t1.c20 ELSE 'B2h7CJMH' END WHEN (x'd89b' IN ()) THEN ((vt0.c0) BETWEEN (t1.c52) AND (vt0.c0)) WHEN vt0.c0 THEN NULL ELSE ((t1.c52) IS FALSE) END FROM t1 WHERE (((((((((((0.19823543130908206)<<(x'7152')))AND(CASE WHEN x'' THEN '-2107492073' WHEN NULL THEN NULL WHEN 0.9420898710854468 THEN NULL ELSE 1.610698121E9 END)))AND(UPPER(0.9951179327381146))))AND(((x'5dc4')||(-1848169392)))))AND(NULL COLLATE NOCASE)));SELECT DISTINCT ('-586506397' IN ()) FROM t1, vt0; -- 2ms;
SELECT DISTINCT MIN(x''), ((AVG(NULL)) NOT NULL), ((x'') BETWEEN (t1.c20) AND (t1.c52)) COLLATE RTRIM, ((CAST(t1.c52 AS BLOB)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c20) AND (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))), t1.c52 FROM vt0 WHERE (0.26589000296706433);SELECT (TOTAL(t1.c0) IN ()), ((((vt0.c0)OR(t1.c52)))GLOB(t1.c52)), CAST(t1.c52 COLLATE BINARY AS TEXT) FROM vt0, t1 GROUP BY (((t1.c0)) BETWEEN ((json_array_length(t1.c0))) AND ((((t1.c20)LIKE(t1.c20))))) HAVING vt0.c0;SELECT ((LOWER(t1.c52))<=((((vt0.c0))>=((t1.c20))))) FROM t1 WHERE ((((((NULL)) NOT BETWEEN ((0.6544869298394559)) AND ((NULL)))) NOT BETWEEN (('-1778329211' IN ('-0.0'))) AND (LIKE(0x2502ea06, NULL))));SELECT DISTINCT ((((((((((((((t1.c0)OR(t1.c52)))AND(t1.c52)))AND(t1.c52)))OR(vt0.c0)))OR(t1.c0)))OR(t1.c52))) BETWEEN (ABS(DISTINCT t1.c20)) AND (t1.c20)), t1.c52, (((CASE WHEN t1.c52 THEN t1.c0 ELSE t1.c52 END))<((((((vt0.c0)AND(t1.c52)))AND(vt0.c0))))) FROM vt0 ORDER BY CAST(t1.c20 AS BLOB) COLLATE RTRIM ASC;SELECT ALL CASE WHEN (- (vt0.c0)) THEN t1.c20 WHEN SUBSTR(t1.c52, NULL) THEN NULL WHEN ((t1.c0) ISNULL) THEN (((x'')) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))) END FROM t1, vt0 WHERE (((CASE WHEN 'V' THEN '-2145814055' END)+(x'c69c'))); -- 1ms;
SELECT DISTINCT JULIANDAY(t1.c52 COLLATE RTRIM, t1.c20 COLLATE RTRIM, ((t1.c20) NOTNULL), TRIM(DISTINCT t1.c0, 708991589), (+ (t1.c0))), COUNT(0.563808435476063) OVER ( ORDER BY ((vt0.c0 COLLATE BINARY)=(t1.c20)), x'fadb' DESC  NULLS FIRST, (- (CASE 0.7188860274458847  WHEN x'' THEN vt0.c0 END))), ((((t1.c0) IS TRUE))LIKE((+ (vt0.c0)))) FROM t1 WHERE (((((((NULL)OR(x'ac57')))AND(x''))) NOT BETWEEN ('524830641') AND ((('k ')<(0.6937556505303862)))));SELECT ALL t1.c52 FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((MIN(t1.c20))AND(t1.c0)))AND((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c20))))) FROM t1, vt0; -- 0ms;
SELECT ALL ((((((((vt0.c0)OR(t1.c20)))OR(t1.c0)))AND((((t1.c20))<=((t1.c52))))))OR(t1.c20)), (NOT (MAX(t1.c52))), CAST(CASE WHEN t1.c52 THEN t1.c20 END AS TEXT) FROM vt0 WHERE ((- (((NULL)&(NULL)))));SELECT DISTINCT t1.c52 FROM t1; -- 0ms;
SELECT DISTINCT (+ (t1.c20)) COLLATE BINARY COLLATE NOCASE, SUM((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((x'63effc3e')))) OVER (), TOTAL(''), UPPER((((t1.c20))==((vt0.c0)))), ((((((((((((((t1.c52)<>(t1.c20)))OR((~ (0.3893468816149338)))))AND(((t1.c52)>>(t1.c52)))))OR(TRIM(DISTINCT t1.c0, t1.c52))))AND(t1.c20)))AND(0x33238d1a)))OR(COUNT(*))) FROM vt0, t1 WHERE (((NOT (x'1f72')) IN ())) ORDER BY t1.c20  NULLS FIRST, ((t1.c0)AND((('')%(t1.c0)))); -- 1ms;
SELECT ((MAX(t1.c0)) IS FALSE) FROM vt0, t1 WHERE (CASE WHEN CASE WHEN NULL THEN '{}k\r3' ELSE 0X74259456 END THEN NULL COLLATE RTRIM ELSE ((1) NOT BETWEEN (NULL) AND (NULL)) END); -- 0ms;
SELECT DISTINCT ((x'') IS TRUE) FROM vt0; -- 0ms;
SELECT ((TIME(t1.c0, t1.c20, t1.c20))&((+ (t1.c52)))) FROM t1, vt0 INDEXED BY i98;SELECT ALL (~ (CASE WHEN vt0.c0 THEN t1.c52 END)) FROM t1, vt0; -- 0ms;
SELECT DISTINCT x'', ((((((t1.c0)AND(vt0.c0)))AND(NULL)))>(((t1.c52)==(NULL)))), COUNT((((vt0.c0, t1.c20, t1.c0)) BETWEEN ((t1.c0, t1.c52, vt0.c0)) AND ((t1.c20, '-2041842189', t1.c0)))) FROM vt0, t1 WHERE ((((('1612816224') NOT NULL)) BETWEEN ((((((((('-579605602')AND(NULL)))OR('2099911726')))OR(x'')))OR(NULL))) AND (IFNULL(DISTINCT '1624958524', '2109147998')))); -- 0ms;
SELECT DISTINCT (((NULL, (((t1.c0))!=((t1.c52))), ((((((((t1.c0)AND(t1.c52)))AND(')2-}')))AND(t1.c20)))OR(t1.c0))))>((t1.c20 COLLATE BINARY, MIN(-1.596014023E9), 0Xfffffffff35a5608))) FROM t1, vt0 GROUP BY ((NULL COLLATE RTRIM)>>((NOT (vt0.c0)))) HAVING ((NULLIF(t1.c20, NULL)) NOT BETWEEN (((t1.c20) NOT BETWEEN (t1.c52) AND (t1.c20))) AND (CAST(t1.c20 AS NUMERIC))) ORDER BY ((x'')||((NULL IN ('1')))); -- 0ms;
SELECT ALL vt0.c0 FROM t1 ORDER BY ((((~ (vt0.c0))))<((CASE WHEN NULL THEN t1.c52 END))) ASC  NULLS LAST;SELECT (CAST(t1.c52 AS INTEGER) IN ()), PERCENT_RANK() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING), (((vt0.c0)) BETWEEN ((((t1.c20) ISNULL))) AND ((vt0.c0))) FROM t1, vt0 WHERE (CAST(((0X5c1c9300)|(NULL)) AS INTEGER)); -- 0ms;
SELECT ((json(x'')) BETWEEN (((t1.c20)OR(t1.c0))) AND (t1.c52 COLLATE NOCASE)) FROM t1 INNER JOIN vt0 ON CASE ((vt0.c0) BETWEEN (0.7188860274458847) AND (vt0.c0))  WHEN (- (vt0.c0)) THEN ((t1.c52) NOT BETWEEN (t1.c20) AND (0.9193237449321041)) ELSE ((t1.c52)||(vt0.c0)) END WHERE (0.8026195223218433) ORDER BY t1.c20, (((- (t1.c0))) NOT BETWEEN (t1.c0) AND (x'd07f')) DESC  NULLS LAST LIMIT -1401668006; -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(((t1.c20)<=(t1.c20))) FROM t1 LIMIT 1428030978; -- 0ms;
SELECT DISTINCT ((vt0.c0)<<(t1.c20)) COLLATE BINARY FROM vt0 LIMIT 1714140612 OFFSET -1165159090;SELECT ((((t1.c20) IS FALSE))IS(((t1.c0)<>(t1.c0)))) FROM t1; -- 0ms;
SELECT DISTINCT 0.009964130668937421, (((vt0.c0))<>((t1.c0))) COLLATE RTRIM, (((t1.c52 IN (t1.c20)))<(((vt0.c0)||(t1.c20)))), t1.c0, COUNT(*) OVER () FROM vt0;SELECT DISTINCT '595603256' FROM t1, vt0 INDEXED BY i98 GROUP BY CASE (+ (vt0.c0))  WHEN t1.c0 COLLATE NOCASE THEN json_array_length(vt0.c0, t1.c52) WHEN (+ (t1.c52)) THEN ((('0.6370403948778015')) NOT BETWEEN ((t1.c0)) AND ((t1.c20))) WHEN ((t1.c52)|(t1.c20)) THEN ((x'') IS TRUE) END;SELECT DISTINCT (((t1.c20, vt0.c0, t1.c20)) BETWEEN ((GROUP_CONCAT(t1.c52), STRFTIME(vt0.c0, t1.c52, t1.c52), CAST(vt0.c0 AS INTEGER))) AND (((~ (vt0.c0)), MAX(vt0.c0, t1.c20), CASE WHEN t1.c20 THEN t1.c52 END))) FROM t1 ORDER BY CAST(SQLITE_COMPILEOPTION_USED(vt0.c0) AS BLOB), (- (CAST(t1.c52 AS BLOB))) DESC;SELECT DISTINCT NULLIF(GROUP_CONCAT(t1.c20), CAST(t1.c52 AS NUMERIC)) FROM vt0, t1 WHERE (((('W,X癄\n>(䶉' IN ()))GLOB((((x'722e'))>((x'')))))); -- 0ms;
SELECT (((vt0.c0)!=(t1.c52)) IN ()) FROM vt0, t1 WHERE (LTRIM((((NULL)) NOT BETWEEN ((x'')) AND ((0.15931607643594026))))) LIMIT 619352397; -- 0ms;
SELECT DISTINCT (CASE t1.c20  WHEN 419212438 THEN t1.c20 WHEN t1.c52 THEN vt0.c0 WHEN t1.c20 THEN t1.c52 END IN ()), LAST_INSERT_ROWID(), (('-1958177343')IS(0.733258760909351)) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN t1.c52 THEN NULL ELSE t1.c0 END) FILTER(WHERE (((t1.c52) NOTNULL) IN ((((t1.c0, t1.c20, t1.c0))<((t1.c20, t1.c20, t1.c20)))))) OVER () FROM t1 LIMIT 769540289 OFFSET -1571403096; -- 0ms;
SELECT DISTINCT (t1.c20 IN (t1.c52 COLLATE NOCASE, NULL)) FROM t1 INDEXED BY i98 WHERE ((((NULL) ISNULL) IN ()));SELECT ((SUM(t1.c52)) IS FALSE) FROM t1, vt0 WHERE (((('f䧁' IN ()))<<(((NULL) NOT NULL)))); -- 0ms;
SELECT ((((NULL)AND(((x'')/(vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((t1.c52)) AND ((t1.c52))))), (((((t1.c0))>((t1.c52))))>>(((t1.c0)+(vt0.c0)))), json_type(t1.c52) COLLATE RTRIM, (((x'', (((t1.c52, vt0.c0, t1.c52)) NOT BETWEEN ((t1.c0, t1.c0, t1.c52)) AND ((x'', t1.c0, t1.c0))), (t1.c0 IN ()), (((t1.c0))>((vt0.c0))), (((t1.c52, t1.c20, vt0.c0)) BETWEEN ((vt0.c0, x'', t1.c20)) AND ((t1.c0, t1.c52, t1.c52)))))>((SUM(t1.c20), ((t1.c0)&(t1.c20)), t1.c52 COLLATE NOCASE, x'dbdb', CASE WHEN t1.c20 THEN vt0.c0 END))), ((((t1.c20)>=(t1.c0)))<<(vt0.c0)) FROM t1 WHERE (0.009964130668937421);SELECT ALL TIME(t1.c20, t1.c20, '53170925') COLLATE RTRIM FROM t1, vt0 WHERE (x'13d4') ORDER BY (((((t1.c52 IN ()))OR((- (t1.c0)))))AND(((((NULL)OR(t1.c0)))OR(vt0.c0)))); -- 1ms;
SELECT ALL ((SQLITE_COMPILEOPTION_GET(t1.c20))||(CASE t1.c0  WHEN t1.c20 THEN t1.c52 END)), MAX(NULL COLLATE NOCASE), UNLIKELY(MIN(t1.c52, t1.c20, t1.c0, vt0.c0)) FROM vt0 WHERE (((((((((('fDWE')OR(x'')))AND(x'')))AND(NULL)))OR('0lv*')) IN ()));SELECT DISTINCT (((NOT (t1.c20)))+((t1.c20 IN ()))) FROM t1, vt0 WHERE (json_extract(((NULL) ISNULL), 0.31613105140494835 COLLATE NOCASE));SELECT DISTINCT COUNT(*) OVER () FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c52) NOT NULL)) NOT BETWEEN (((((x'')AND(t1.c0)))OR(t1.c52))) AND (vt0.c0)) FROM t1 GROUP BY (((~ (t1.c52)))IS NOT((~ (-965769440)))) HAVING CAST(COUNT(t1.c0) AS TEXT);SELECT DISTINCT CASE WHEN vt0.c0 THEN ((t1.c0) NOTNULL) ELSE CASE WHEN t1.c52 THEN t1.c20 ELSE t1.c52 END END FROM vt0;SELECT DISTINCT t1.c0, (((CAST(t1.c20 AS TEXT), '0.7152742288384105', (((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t1.c20, vt0.c0, t1.c52)) AND ((vt0.c0, t1.c20, vt0.c0)))))=(((t1.c52 IN ()), ((t1.c20) NOT NULL), vt0.c0 COLLATE RTRIM))), 0.7500139385755007 FROM t1, vt0; -- 0ms;
SELECT ALL (((+ (t1.c20)))<(t1.c0)), NULL, 0.6805082051040954 FROM t1, vt0; -- 0ms;
SELECT DISTINCT 0X6b49c82a FROM vt0, t1 WHERE (UPPER((((NULL))<>((0Xffffffffbc262cab))))) ORDER BY ((((t1.c0) NOTNULL))/(CAST('430633557' AS NUMERIC))) DESC; -- 0ms;
SELECT DISTINCT ((((json_insert(t1.c0, 0.36634849629331356, t1.c20))AND(((vt0.c0) NOTNULL))))AND((t1.c0 IN (vt0.c0)))), CAST(MAX(t1.c0) AS TEXT), ((x'4955')-(((t1.c52) NOT BETWEEN (t1.c20) AND (t1.c0)))) FROM t1;SELECT DISTINCT ((DATETIME(t1.c0, t1.c20, t1.c20))!=((- (t1.c0)))), CAST(CAST(t1.c0 AS TEXT) AS BLOB), ((((ROUND(t1.c52, vt0.c0))AND(((((((((t1.c20)OR(t1.c20)))AND(t1.c52)))OR(vt0.c0)))OR(t1.c52)))))OR(-1841639161)) FROM t1 WHERE ((('654212984' COLLATE RTRIM) NOTNULL));SELECT DISTINCT (((t1.c52 COLLATE BINARY))<=((0Xffffffffec72f65a))) FROM t1, vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(CASE WHEN t1.c20 THEN t1.c0 WHEN vt0.c0 THEN x'' WHEN t1.c20 THEN vt0.c0 END) OVER () FROM vt0;SELECT ALL RTRIM(t1.c0) COLLATE NOCASE FROM vt0 WHERE (((((((((((x'') BETWEEN (-754726200) AND ('1690542815')))OR(((-1.109064673E9)AND('')))))AND(((NULL)+(-1.964698292E9)))))OR(NULL COLLATE BINARY)))OR((~ ('A ]'))))) LIMIT -1370790399;SELECT ((((t1.c20) IS TRUE)) IS TRUE) FROM vt0 WHERE (((((('')||(x'54be'))))==((((0.36647544653388475) NOTNULL)))));SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c20 END) NOT BETWEEN ((+ (t1.c52))) AND (CAST(vt0.c0 AS BLOB))) FROM t1;SELECT DISTINCT LIKELY(t1.c0) COLLATE RTRIM FROM t1, vt0; -- 0ms;
SELECT ALL t1.c20, FIRST_VALUE(CASE NULL  WHEN ((0.818971304670025)!=(t1.c52)) THEN '-1329847847' ELSE ((t1.c0)/(t1.c20)) END) OVER ( ORDER BY ('-805674631' IN ()) DESC, (+ (((0.2378391831623582)<<(NULL))))), LAG(((t1.c20)%((NOT (t1.c20)))), ((((t1.c52)GLOB(t1.c20))) BETWEEN (((t1.c52)<<(t1.c52))) AND (LOWER(t1.c52))), ((((t1.c0)<<('f໕'))) BETWEEN ((t1.c20 IN ())) AND (highlight(t1.c0, t1.c52, t1.c0, t1.c52)))) OVER () FROM t1 WHERE ((- (CAST(0.37231736978260244 AS NUMERIC))));SELECT ALL ((((t1.c20)>=(t1.c0)))OR(t1.c52)) FROM vt0;SELECT DISTINCT (((t1.c52)) BETWEEN ((CAST(t1.c0 AS TEXT))) AND (((t1.c20 IN (x''))))) FROM vt0, t1 WHERE ((((((0.27869336046769844))==(('9>w?ḗ')))) BETWEEN ('0.563808435476063' COLLATE RTRIM) AND (json_quote(0.9998085044430255)))) GROUP BY ((+ (t1.c52)) IN ()), ((((((((((vt0.c0)OR(t1.c20)))OR(t1.c0)))OR(vt0.c0)))AND(NULL))) NOT BETWEEN (CASE WHEN vt0.c0 THEN 1.664565158E9 WHEN t1.c20 THEN t1.c0 WHEN vt0.c0 THEN x'949d8d3d' END) AND ((NOT (t1.c20)))), ((t1.c20)<(t1.c52)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((t1.c20)*(0.08155186995982577)))>=(((t1.c52)/(vt0.c0)))), SUM(HEX(DISTINCT t1.c0)), ((TOTAL(t1.c0)) IS FALSE) FROM vt0, t1 WHERE (((NULL) BETWEEN (((x'') BETWEEN (0.86847541155749) AND (x''))) AND (((0.6928399007972594)>=('-1645754709'))))); -- 0ms;
SELECT DISTINCT '-2044785197' FROM t1, vt0 WHERE ((- (1.714140612E9 COLLATE RTRIM))) ORDER BY ((((((((((((0.6050852494119872)OR(vt0.c0)))AND(vt0.c0)))OR(t1.c0)))OR(0.6742735711574237)))OR(((t1.c0) IS FALSE))))AND(((t1.c0)&(t1.c20)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c20)+(t1.c20)) THEN t1.c20 ELSE CASE t1.c0  WHEN '-1343416527' THEN t1.c20 ELSE t1.c0 END END, vt0.c0, ((((((((vt0.c0)AND(t1.c52)))OR(t1.c0)))AND(t1.c20)))OR(LIKELY(vt0.c0))) FROM t1, vt0 WHERE ('%7'); -- 0ms;
SELECT DISTINCT (('7J') NOT BETWEEN (((vt0.c0) NOT NULL)) AND (0.573146778144378)), LOWER(CAST(t1.c0 AS REAL)), ((((t1.c52) IS TRUE)) ISNULL), ((t1.c0 COLLATE NOCASE)&(RTRIM(vt0.c0))), ((t1.c0)||((((t1.c20, vt0.c0, vt0.c0, NULL, t1.c52)) NOT BETWEEN ((t1.c20, vt0.c0, t1.c0, t1.c52, x'f2df')) AND ((t1.c52, t1.c20, vt0.c0, x'', t1.c0))))) FROM t1 NATURAL JOIN vt0 WHERE (((0x72d705c COLLATE NOCASE) NOT BETWEEN ('') AND (COALESCE(x'', x'c3ce')))); -- 1ms;
SELECT ALL (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0, t1 WHERE (CAST(((-1.964698292E9)LIKE(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((t1.c52)>=(vt0.c0)))|((((t1.c20)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT LEAD(((((t1.c52) IS FALSE)) BETWEEN (((vt0.c0)=(t1.c52))) AND (NULL)), t1.c20, t1.c52) OVER () FROM vt0, t1 WHERE ((((x'')) NOT BETWEEN ((((('-377455016', 0.9309615439888229, '-579605602')) BETWEEN (('&䘈.㒒Qss^', 0x7fdcdf40, 0.6188045610770845)) AND ((NULL, x'8067', '1642168944'))))) AND ((x'' COLLATE NOCASE)))) ORDER BY LIKE(TRIM(DISTINCT NULL), ((t1.c20)>=(t1.c0)), '3')  NULLS FIRST, HEX(DISTINCT 'FB') DESC  NULLS FIRST; -- 0ms;
SELECT FIRST_VALUE(((t1.c20) BETWEEN (TYPEOF(DISTINCT t1.c20)) AND (CAST(t1.c0 AS REAL)))) OVER ( ORDER BY ((((t1.c52) NOTNULL))>(((t1.c20) BETWEEN (t1.c20) AND (t1.c20)))) DESC  NULLS LAST, LIKELIHOOD(DISTINCT ((t1.c0) BETWEEN (t1.c20) AND (t1.c0)), 0.49335896401507595) DESC  NULLS LAST), CAST((((vt0.c0, vt0.c0, t1.c0)) BETWEEN ((vt0.c0, vt0.c0, t1.c0)) AND ((vt0.c0, t1.c52, vt0.c0))) AS TEXT), CAST(t1.c0 AS NUMERIC) FROM t1 INTERSECT SELECT COUNT(*) OVER (), (((t1.c20) BETWEEN (t1.c52) AND (t1.c0)) IN ()), (((('Nab9V9''+R')GLOB(t1.c0))) BETWEEN (CASE WHEN 1612816224 THEN t1.c0 END) AND ((((t1.c0, t1.c20, vt0.c0, t1.c20, t1.c0))<((t1.c20, t1.c52, t1.c52, vt0.c0, t1.c20))))) FROM t1 WHERE (CASE 0.66511685130357  WHEN (~ (NULL)) THEN CASE WHEN '	L2E' THEN '1612816224' END END) GROUP BY ((((t1.c0 IN ())))<((((t1.c0)/(t1.c20)))));SELECT ALL ((((NULL)OR(CAST(t1.c20 AS BLOB))))AND(vt0.c0)) FROM vt0, t1 WHERE (((((('')) NOT BETWEEN ((x'8664')) AND ((0xfffffffff7e86c33))))IS NOT((((('Xy')OR(x'e61f')))AND(NULL))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t1, vt0 WHERE ((((((x'7606')) BETWEEN ((x'04b7')) AND (('\_')))) NOT BETWEEN (((0.3189830218185402)AND(-8.05674631E8))) AND ((('1610698121')*(x''))))) ORDER BY ((((t1.c20) NOT BETWEEN (t1.c52) AND (0xfffffffffe0bb3c9)))IS(((t1.c0) IS FALSE)))  NULLS LAST, (((t1.c52 IN (t1.c0))) IS TRUE) DESC  NULLS LAST; -- 0ms;
SELECT ALL (NOT (((t1.c20) IS FALSE))) FROM t1; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0))<(t1.c52)) FROM vt0, t1 WHERE (IFNULL(('0.733258760909351' IN (1747351686)), (- ('Jy')))); -- 0ms;
SELECT DISTINCT t1.c0 FROM vt0;SELECT 0.9824296832429573 FROM t1, vt0 WHERE (CASE WHEN CASE 'm''go'  WHEN 194010677 THEN 228069455 ELSE x'' END THEN ((x'') NOT NULL) ELSE ((NULL) NOT BETWEEN (x'') AND (x'')) END); -- 0ms;
SELECT DISTINCT (~ (x'')) FROM t1, vt0 WHERE ((((('1323535992')OR(x'272c')))OR(x'81ddfdb8')) COLLATE RTRIM); -- 0ms;
SELECT ((COUNT(*))!=((~ (vt0.c0)))) FROM vt0 WHERE (((((NULL)AND(((NULL) IS FALSE))))OR(((((((((x'')AND(0Xffffffffa9e1efbb)))OR('5%EQh爅#')))AND(x'd1be')))OR(0.6897465735304086))))); -- 0ms;
SELECT DISTINCT ((((t1.c0) BETWEEN (t1.c52) AND (t1.c52))) BETWEEN (vt0.c0) AND (t1.c52)) FROM vt0 WHERE (CASE (NULL IN ())  WHEN ((NULL) NOT NULL) THEN x'' ELSE ((-2.86121417E8)IS('Lk	Y')) END);SELECT (0.7489154456128643 IN (CAST(t1.c52 AS REAL), t1.c52)) FROM t1 WHERE ((((NOT (0.27869336046769844)))=(((NULL) IS TRUE)))) LIMIT -891466925; -- 0ms;
SELECT DISTINCT ((t1.c0)!=(t1.c52)) COLLATE NOCASE COLLATE RTRIM, (+ ((vt0.c0 IN ()))), COUNT(((vt0.c0)*(t1.c20))) FROM vt0;SELECT DISTINCT ((0.3407416345141011) BETWEEN ((((t1.c20)) BETWEEN ((t1.c52)) AND ((t1.c52)))) AND (((t1.c20) BETWEEN (t1.c52) AND (NULL)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((~ ('0.6937556505303862'))) NOT BETWEEN (((t1.c52)IS NOT(x''))) AND (CAST(t1.c52 AS REAL))) FROM vt0, t1; -- 0ms;
SELECT TYPEOF(vt0.c0 COLLATE NOCASE) FROM vt0, t1; -- 0ms;
SELECT ALL (((t1.c20, t1.c20, t1.c52)) BETWEEN ((t1.c52, vt0.c0, t1.c52)) AND ((t1.c0, t1.c20, vt0.c0))) COLLATE NOCASE, CAST(((vt0.c0)>>(t1.c52)) AS INTEGER), (((- (vt0.c0))) BETWEEN (((((0.5054087212970412)OR(t1.c0)))OR(x''))) AND (((t1.c0)GLOB(t1.c20)))) FROM t1 WHERE (((CAST(0.3099563888661627 AS TEXT)) IS FALSE)) ORDER BY '	l2e' ASC  NULLS LAST, (UNLIKELY(t1.c52) IN ()) DESC, ((((vt0.c0)>(t1.c52))) BETWEEN (0.31785850240639024) AND (CASE vt0.c0  WHEN t1.c20 THEN t1.c20 END)) ASC LIMIT 615195929 OFFSET -586506397;SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c20)) AS REAL), ((NULL) NOT BETWEEN (CAST(t1.c20 AS BLOB)) AND (highlight(t1.c20, NULL, t1.c20, t1.c52))), ((LIKELY(DISTINCT t1.c20))<=((((vt0.c0, vt0.c0, t1.c0, vt0.c0, 0.5953754085750155)) NOT BETWEEN ((t1.c0, NULL, t1.c0, t1.c52, t1.c0)) AND ((t1.c0, vt0.c0, t1.c20, t1.c20, vt0.c0))))) FROM t1, vt0 WHERE ((((NULL)) NOT BETWEEN ((('0.15931607643594026' IN ()))) AND ((x'')))); -- 0ms;
SELECT (((CASE t1.c20  WHEN vt0.c0 THEN t1.c20 END))!=((MIN(vt0.c0)))) FROM t1, vt0 WHERE ((CASE WHEN 0xffffffff9b7a4925 THEN 1828776035 END IN ())); -- 0ms;
SELECT DISTINCT x'' FROM vt0, t1 WHERE (((((x'')>(0x279c9fbc)))||(((x'1497e730') NOT BETWEEN ('') AND ('.?'))))); -- 0ms;
SELECT ALL ((((t1.c52)!=(t1.c52)))IS(vt0.c0)), ((((((((((t1.c20)OR(t1.c20)))OR(t1.c0)))OR(t1.c52)))AND(t1.c20)))||(CASE vt0.c0  WHEN t1.c52 THEN NULL WHEN vt0.c0 THEN t1.c20 WHEN t1.c0 THEN t1.c20 ELSE t1.c52 END)), (t1.c0 IN ()) COLLATE NOCASE FROM vt0 WHERE ((~ ((((x''))<=((0.6111534835277751)))))) ORDER BY CAST(((t1.c0) IS TRUE) AS NUMERIC) ASC;SELECT ALL ((LTRIM(t1.c0, t1.c52))|(CAST(vt0.c0 AS INTEGER))) FROM t1, vt0 WHERE ((((((NULL, x'', x'f8905db0'))<((x'e920c119', NULL, NULL))))-((+ (0.9011317105517831))))); -- 0ms;
SELECT ALL (((((((((NOT (t1.c52)))OR(LOWER(t1.c52))))OR(((((t1.c20)AND(t1.c20)))AND(t1.c0)))))AND(CAST(t1.c0 AS NUMERIC))))OR('8U')) FROM vt0;SELECT ALL AVG(t1.c52) OVER (), (((((((((t1.c0 IN ()))OR((~ (t1.c52)))))AND(TYPEOF(DISTINCT t1.c0))))AND(((t1.c20) BETWEEN (t1.c52) AND (t1.c20)))))OR(CAST(0.6990977317215384 AS BLOB))), ((vt0.c0 IN ()) IN ()), CASE WHEN MIN(vt0.c0) THEN NULL WHEN ((t1.c0)+(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN 0.17096979389666278 THEN GROUP_CONCAT(t1.c0) ELSE NULL COLLATE NOCASE END, ((t1.c0)IS NOT(CASE WHEN t1.c0 THEN t1.c20 WHEN t1.c20 THEN t1.c52 WHEN vt0.c0 THEN t1.c0 ELSE t1.c20 END)) FROM vt0 WHERE ((1.610698121E9 IN ('Y')) COLLATE NOCASE);SELECT DISTINCT ((((((((((t1.c0)<=(x'')))OR(UPPER(t1.c20))))OR(27971572 COLLATE RTRIM)))AND(CAST(t1.c52 AS NUMERIC))))AND(CAST(t1.c0 AS BLOB))) FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN (NOT (t1.c52)) THEN (~ (t1.c52)) ELSE LTRIM(t1.c0, vt0.c0) END;SELECT (('1430131877')>=(((t1.c0) NOT BETWEEN (x'') AND (t1.c20)))) FROM vt0, t1 WHERE (((((NULL)GLOB(x'')))>(((((x'')AND('1111913463')))AND(351725860))))); -- 0ms;
SELECT DISTINCT (((t1.c20)) BETWEEN ((t1.c20 COLLATE BINARY)) AND (((((('xqx')OR(t1.c0)))AND(t1.c0))))), (((t1.c0)+(t1.c52)) IN ()), ((CASE WHEN t1.c52 THEN t1.c20 ELSE t1.c20 END)||(x'')) FROM vt0, t1; -- 0ms;
SELECT ALL CASE WHEN CAST(t1.c52 AS NUMERIC) THEN COUNT(vt0.c0) WHEN (((vt0.c0, t1.c20, vt0.c0))>=((vt0.c0, t1.c52, vt0.c0))) THEN ((vt0.c0)*(0X6bbdbe5f)) WHEN ((t1.c20)&(t1.c20)) THEN (((t1.c52))>((t1.c0))) ELSE (((t1.c0, vt0.c0, t1.c52)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c0)) AND ((t1.c52, t1.c52, t1.c0))) END FROM vt0 WHERE ('-2139862591') GROUP BY CASE t1.c20  WHEN (t1.c20 IN ()) THEN (t1.c20 IN ()) WHEN t1.c0 COLLATE NOCASE THEN (t1.c0 IN ()) WHEN (NOT (t1.c20)) THEN x'' END HAVING (((((t1.c52) IS FALSE)))>=(((t1.c52 IN ())))) LIMIT 2069148473;SELECT CHAR(t1.c20) FROM t1, vt0; -- 0ms;
SELECT ALL CASE ((((t1.c20)AND(vt0.c0)))AND(t1.c52))  WHEN HEX(t1.c20) THEN t1.c0 WHEN CASE WHEN -5.53820462E8 THEN t1.c0 WHEN t1.c52 THEN vt0.c0 WHEN t1.c52 THEN t1.c52 END THEN COUNT(*) WHEN CAST(t1.c0 AS INTEGER) THEN ((vt0.c0) IS TRUE) ELSE ((t1.c0) BETWEEN (t1.c0) AND (vt0.c0)) END FROM vt0, t1; -- 0ms;
SELECT ((((t1.c0)||(t1.c52)))AND((~ (vt0.c0)))), MIN((~ (t1.c20))) COLLATE BINARY, (((((NULL, t1.c20, t1.c52))<=((t1.c20, t1.c20, t1.c52))))<=((t1.c0 IN ()))) FROM t1;SELECT ALL ((((t1.c0)<('1459045200'))) NOT BETWEEN (((t1.c0)!=(t1.c0))) AND ((t1.c20 IN ('')))) FROM vt0 LIMIT 598475629 OFFSET -1848169392;SELECT DISTINCT TOTAL(((vt0.c0)/(t1.c20))) FROM vt0 WHERE (((((0.6805082051040954) BETWEEN ('1089794046') AND (5.95603256E8))) BETWEEN ((('M9') NOT NULL)) AND ((('-659822603')|('_,x&f')))));SELECT DISTINCT TRIM(((t1.c52) BETWEEN (vt0.c0) AND (vt0.c0)), ((t1.c0)IS NOT(x'2e29'))) FROM t1 NATURAL JOIN vt0; -- 0ms;
SELECT CAST(SUM(vt0.c0) AS BLOB) FROM t1 WHERE (CASE WHEN (~ ('gm')) THEN ((NULL) NOT NULL) END);SELECT DISTINCT ((t1.c20 COLLATE BINARY)IS NOT(CAST(t1.c0 AS REAL))), t1.c0, 0x2fee295a FROM t1; -- 0ms;
SELECT (((t1.c20 COLLATE RTRIM, CAST(t1.c0 AS REAL), ((t1.c20) BETWEEN (t1.c52) AND (t1.c0))))<((TOTAL(t1.c20), ((0.2648754874712841) NOT BETWEEN (vt0.c0) AND (t1.c52)), vt0.c0 COLLATE RTRIM))) FROM vt0 WHERE ((((+ (NULL)))*(2065117897 COLLATE NOCASE)));SELECT NTH_VALUE((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), ((((vt0.c0)AND(x'')))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB)))), (((((NULL) IS FALSE), 0x3cf35ea9, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS REAL), (((vt0.c0))>=((vt0.c0))))))) OVER (), LAG(((((((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0))>=((vt0.c0))))), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), (+ (vt0.c0)), ((vt0.c0)<>(vt0.c0)))) AND ((CHAR(vt0.c0), ((vt0.c0)||('')), vt0.c0 COLLATE BINARY))), vt0.c0) OVER (), ((((t1.c52)-(t1.c0))) IS TRUE) FROM vt0 WHERE (LIKELY(DISTINCT CASE WHEN 0X3f369985 THEN 0.7909347009979113 ELSE NULL END));SELECT LEAD((((((t1.c0)) NOT BETWEEN ((t1.c20)) AND ((t1.c20))))AND((~ (t1.c20)))), ((x'')||(((t1.c20)>>(t1.c0)))), QUOTE(t1.c0)) OVER () FROM t1 GROUP BY ((((CAST(t1.c20 AS REAL))OR((t1.c20 IN ()))))OR((((vt0.c0)) NOT BETWEEN ((t1.c20)) AND ((t1.c0)))));SELECT DISTINCT MAX((t1.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT 0.11154737151530358 FROM t1 WHERE (((((((x'') IS TRUE))AND(CASE NULL  WHEN x'' THEN 0.021687656207668105 ELSE 0.5934036805342079 END)))AND(CASE x''  WHEN '194010677' THEN 0xffffffffa86b8f21 ELSE NULL END))); -- 0ms;
SELECT ALL GLOB(DATETIME(x'', t1.c20, vt0.c0), 0xffffffffb964598f) FROM vt0, t1; -- 0ms;
SELECT DISTINCT CAST(((t1.c0)LIKE(t1.c52)) AS REAL), (((t1.c52, t1.c20, t1.c0)) BETWEEN ((CAST(t1.c20 AS TEXT), COUNT(t1.c20), ((t1.c0) ISNULL))) AND ((((t1.c0) NOT NULL), IFNULL(t1.c20, t1.c20), vt0.c0))), ((((t1.c52)) BETWEEN ((t1.c52)) AND ((t1.c52))) IN ((('-530628641')|(t1.c0)))) FROM vt0, t1 WHERE ((NOT (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0)) BETWEEN (((t1.c52) BETWEEN (t1.c0) AND (vt0.c0))) AND (COUNT(t1.c20))), ABS(DISTINCT vt0.c0 COLLATE BINARY), ((((vt0.c0)|(t1.c52))) BETWEEN (((t1.c52) IS FALSE)) AND ((((vt0.c0))>((t1.c20))))) FROM vt0;SELECT DISTINCT TOTAL((~ (vt0.c0))) OVER ( ORDER BY t1.c52  NULLS FIRST) FROM t1;SELECT DISTINCT CAST((NOT (0.7434806638946775)) AS NUMERIC), ((CASE WHEN t1.c52 THEN t1.c0 END)+((vt0.c0 IN (t1.c20)))), x'4afb' FROM vt0, t1; -- 0ms;
SELECT (((((vt0.c0 IN ()))OR(((((((((t1.c0)AND(t1.c20)))AND(vt0.c0)))OR(t1.c0)))AND(t1.c20)))))AND((((t1.c0))>((t1.c0))))) FROM t1, vt0; -- 1ms;
SELECT DISTINCT ((TOTAL(vt0.c0)) IS TRUE) FROM vt0 FULL OUTER JOIN t1 ON UNLIKELY(t1.c52 COLLATE BINARY) WHERE (TRIM((('') BETWEEN (0.6623621642080736) AND ('0.7188860274458847')), ((0.020406807021896012) ISNULL))); -- 0ms;
SELECT DISTINCT ((vt0.c0)*(STRFTIME(t1.c52, t1.c52, '-1494189339', t1.c52, vt0.c0, t1.c0, t1.c20))) FROM t1, vt0 WHERE (CAST(x'' AS INTEGER) COLLATE BINARY); -- 3ms;
SELECT DISTINCT (SUBSTR(vt0.c0, t1.c20) IN ((((t1.c20))<((vt0.c0))))) FROM t1;SELECT DISTINCT (((CAST(t1.c52 AS INTEGER)))!=((((t1.c52) NOT BETWEEN (vt0.c0) AND (t1.c20))))) FROM vt0, t1 WHERE ((~ (((('2004910646', 4.13043027E8, '!K'))<((x'', 0.8026195223218433, x'a2e5')))))); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((CASE WHEN t1.c52 THEN vt0.c0 END)) AND ((t1.c0 COLLATE BINARY))) FROM vt0 WHERE (TYPEOF(DISTINCT COALESCE(0x7311263c, x'')));SELECT ALL CASE ((t1.c20) ISNULL)  WHEN vt0.c0 COLLATE BINARY THEN ((t1.c0)||(t1.c20)) WHEN MAX(t1.c52) THEN (((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c20))) WHEN CASE WHEN t1.c20 THEN t1.c20 ELSE vt0.c0 END THEN t1.c0 COLLATE NOCASE END FROM t1, vt0; -- 0ms;
SELECT CASE WHEN '9223372036854775807' THEN x'74c2' WHEN ((t1.c20) IS FALSE) THEN CASE WHEN t1.c20 THEN t1.c0 END WHEN (t1.c20 IN ()) THEN (((t1.c20, vt0.c0, t1.c52)) BETWEEN ((vt0.c0, 'WOnow0OK_j/8', t1.c52)) AND ((t1.c0, t1.c0, t1.c20))) ELSE CASE WHEN t1.c0 THEN t1.c0 END END, (((vt0.c0) IS FALSE) IN ()), ((AVG(t1.c20))-((t1.c0 IN ()))), CUME_DIST() OVER (), ((CAST(t1.c20 AS NUMERIC))<>(((vt0.c0) NOT NULL))) FROM vt0, t1; -- 1ms;
SELECT DISTINCT TOTAL(ABS(DISTINCT t1.c0)) FROM vt0 WHERE ((((x'094c', NULL, '')) BETWEEN ((load_extension(x'4fa8', 'ZJyomvk'), x'', CAST(x'' AS NUMERIC))) AND ((SQLITE_SOURCE_ID(), '^V_HW%', (+ ('es)w1sb32'))))));SELECT ALL ((((((vt0.c0) NOT BETWEEN (t1.c52) AND ('4겅|')))OR(CASE WHEN t1.c0 THEN t1.c52 END)))OR('')) FROM t1, vt0; -- 0ms;
SELECT AVG(((t1.c0) ISNULL)) FROM t1, vt0 WHERE (('\nO' IN ('YZ'))); -- 0ms;
SELECT (~ (t1.c20)) COLLATE BINARY, COUNT(CAST(x'4e7b' AS BLOB)), (((('-1070084078')LIKE(t1.c20))) NOTNULL) FROM vt0, t1; -- 0ms;
SELECT (((((t1.c52))<>((vt0.c0)))) BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) AND (CAST(t1.c20 AS REAL))) FROM vt0 WHERE ((((((((x'')) BETWEEN (('u鐡v')) AND (('?3'))))OR(LIKELY(DISTINCT ''))))AND(CASE '8U'  WHEN x'741a' THEN '' END)));SELECT DISTINCT x'000f' FROM t1 WHERE (((((x'')IS NOT('-637433516')))>(((0.3946842664902469) IS TRUE)))) LIMIT -1517173233 OFFSET 1690542815; -- 0ms;
SELECT DISTINCT CAST(((t1.c20)>=(t1.c52)) AS NUMERIC) FROM vt0, t1; -- 1ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) NOT BETWEEN (((t1.c52) ISNULL)) AND (CASE t1.c52  WHEN t1.c20 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t1.c20 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0, t1 WHERE (((CASE 1194823425  WHEN NULL THEN 1421536298 WHEN '' THEN x'' WHEN '-212183544' THEN 'PQ' END)+(CAST(x'74db' AS BLOB)))); -- 0ms;
SELECT ALL ((-5.86506397E8)+(((t1.c52)||(vt0.c0)))) FROM t1, vt0 WHERE (((((((x'1e55')OR(NULL)))OR('')))>=(CAST(0.8975362163316153 AS INTEGER)))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) COLLATE BINARY, ((((((((((t1.c20)+(vt0.c0)))AND(((t1.c0) ISNULL))))OR((((t1.c20)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))))AND(t1.c0)))AND((((vt0.c0))>((t1.c20))))), AVG(TOTAL(((0x4c186c0)||(vt0.c0)))) FROM vt0, t1 LIMIT -179370927;SELECT ALL ((t1.c20 COLLATE RTRIM)IS(((t1.c0)<>(t1.c52)))) FROM vt0, t1 LIMIT 197661626 OFFSET -137433256; -- 0ms;
SELECT ALL ((CAST(t1.c0 AS INTEGER)) BETWEEN ((t1.c0 IN (t1.c52, vt0.c0))) AND (TYPEOF(DISTINCT t1.c20))) FROM t1 WHERE (CAST((NULL IN ()) AS NUMERIC));SELECT DISTINCT AVG((((t1.c52))<=((t1.c20)))) FROM vt0, t1 WHERE (-1.761565845E9 COLLATE BINARY); -- 0ms;
SELECT CAST(t1.c20 AS REAL) FROM t1 WHERE (((+ (x'')) IN (x'cade'))); -- 0ms;
SELECT DISTINCT CAST(TOTAL(t1.c20) AS TEXT), ((((- (t1.c20))))==((0.9394798301839666))), ((((t1.c52)AND(TRIM(DISTINCT t1.c0))))AND(((t1.c52)<=('-1494189339')))), ((((((vt0.c0)OR(t1.c52)))OR(vt0.c0)))>('	p')), ((vt0.c0)OR(((t1.c52) NOT BETWEEN (t1.c0) AND (t1.c20)))), DENSE_RANK() OVER (), HEX(NULL) FROM t1 GROUP BY (TRIM(DISTINCT vt0.c0, t1.c52) IN ()) HAVING MIN((~ (t1.c52)));SELECT ALL ((vt0.c0) NOT NULL) FROM vt0 WHERE ((((',%')) BETWEEN ((ABS(1256450692))) AND (((((NULL)) BETWEEN (('-780777976')) AND ((x''))))))) GROUP BY ((CASE t1.c0  WHEN t1.c52 THEN t1.c0 WHEN t1.c20 THEN t1.c0 WHEN t1.c20 THEN vt0.c0 ELSE t1.c0 END) NOT NULL) HAVING CASE WHEN CAST(t1.c20 AS REAL) THEN (x'' IN ()) END;SELECT ALL '' FROM vt0; -- 0ms;
SELECT ((vt0.c0) IS TRUE), (((vt0.c0)) NOT BETWEEN ((((t1.c20)AND(t1.c52)))) AND ((MAX(t1.c0)))), (- (((t1.c0)-(t1.c20)))) FROM t1 ORDER BY t1.c52, (NOT (((((t1.c20)OR(t1.c0)))OR(0.9855562142281169)))), ((((t1.c20)*(t1.c20))) NOTNULL)  NULLS FIRST;SELECT DISTINCT ((CAST(t1.c20 AS INTEGER)) NOT NULL) FROM vt0 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT NULL FROM vt0, t1 WHERE (CASE WHEN CASE x''  WHEN 0.5134598912542169 THEN 0.04278560296655887 WHEN 0.4332787393659483 THEN 0x2a0f7f34 WHEN 0X2a3a86a8 THEN x'' ELSE NULL END THEN MIN(NULL, -1.964698292E9, 0.03209036065819093, ')T7^(o4 e') END) LIMIT 1864573667 OFFSET -1362221715; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((((t1.c0) NOT BETWEEN (t1.c20) AND (vt0.c0)))OR(CASE WHEN t1.c52 THEN t1.c20 ELSE t1.c52 END)))OR(((t1.c52) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) OVER (), t1.c52, ((((vt0.c0) BETWEEN (t1.c52) AND (t1.c52))) ISNULL) FROM vt0, t1 WHERE ('0.009964130668937421'); -- 0ms;
SELECT DISTINCT CAST(((t1.c0) IS TRUE) AS BLOB), (((t1.c0, NULL, 'I>n2kQU?')) NOT BETWEEN ((CAST(vt0.c0 AS REAL), AVG(t1.c20), ((NULL) ISNULL))) AND (((- (vt0.c0)), ((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)), ((0.25994096372484143) NOT BETWEEN (t1.c0) AND (t1.c0))))), LAST_VALUE(((((vt0.c0)|(vt0.c0)))<<((((vt0.c0))>((vt0.c0)))))) OVER () FROM vt0;SELECT DISTINCT MAX(CAST(t1.c0 AS BLOB)) FROM t1 WHERE (((((NULL)AND(-1184605809)))AND(x'46a92e8c')) COLLATE BINARY); -- 0ms;
SELECT (+ (((t1.c0) ISNULL))) FROM vt0 WHERE ((('-633926066' COLLATE BINARY) NOT NULL));SELECT SUM(((t1.c0)||(vt0.c0))) FILTER(WHERE NULL) OVER () FROM t1;SELECT ALL (((((vt0.c0, vt0.c0, t1.c52))!=((t1.c52, x'279b', vt0.c0)))) IS TRUE), t1.c0 COLLATE NOCASE, t1.c52 FROM vt0, t1 GROUP BY (SQLITE_COMPILEOPTION_GET(t1.c52) IN ()); -- 0ms;
SELECT ALL FIRST_VALUE(((vt0.c0)|((+ (vt0.c0))))) OVER () FROM vt0 WHERE (((x'e216' IN ()) IN ())) GROUP BY (((- (t1.c20)))*(((vt0.c0)<=(t1.c20))));SELECT AVG((((vt0.c0)) NOT BETWEEN ((t1.c20)) AND ((t1.c52)))) OVER ( ORDER BY ((((((x'b411') ISNULL))OR(CAST(vt0.c0 AS REAL))))AND(t1.c52))), ((CAST(NULL AS TEXT))OR(((t1.c20)GLOB(vt0.c0)))), 0.4739804196309212 FROM t1 WHERE (((((((x'')AND(0xfffffffff0b5e685)))OR(NULL))) NOTNULL));SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (t1.c52) AND (t1.c0)) AS INTEGER), CASE WHEN (NOT (t1.c0)) THEN SQLITE_SOURCE_ID() END, 'w' FROM vt0, t1; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0) NOT NULL)), ((((((((((t1.c0)>>(t1.c20)))AND(((t1.c0) NOTNULL))))AND((- (t1.c52)))))AND(CAST(t1.c20 AS INTEGER))))AND(((t1.c52)+(t1.c20)))), MAX(CASE WHEN t1.c52 THEN t1.c20 END) FROM vt0, t1 WHERE ('1899009850'); -- 0ms;
SELECT CAST(((vt0.c0)/(vt0.c0)) AS TEXT) FROM t1, vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(t1.c20) OVER () FROM vt0, t1 WHERE (((((x'')=('524830641')))<=(MAX('811834597', -1.848169392E9)))); -- 0ms;
SELECT DISTINCT (('1305946151') IS FALSE) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((CAST(t1.c52 AS NUMERIC)) BETWEEN (AVG(t1.c52)) AND (((((0.8124053985877521)OR(t1.c0)))AND(t1.c0)))) FROM vt0, t1 WHERE (((CAST(484906558 AS REAL)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((MIN(t1.c52)) BETWEEN (CASE t1.c0  WHEN t1.c20 THEN t1.c0 END) AND (CASE t1.c20  WHEN NULL THEN t1.c0 ELSE 's\' END)) FROM vt0, t1; -- 1ms;
SELECT DISTINCT UPPER(DISTINCT CAST(vt0.c0 AS REAL)) FROM vt0, t1 WHERE (((((x'', NULL, x'')) NOT BETWEEN (('892801541', 0.9815165110277082, 0.851171574770934)) AND (('', '-1e500', NULL))) IN (((0.40767961704488764)/(x''))))); -- 0ms;
SELECT DISTINCT (((((t1.c20)) BETWEEN ((t1.c0)) AND ((t1.c52))))OR(CASE t1.c52  WHEN t1.c0 THEN vt0.c0 ELSE t1.c0 END)) FROM t1;SELECT ALL CAST((~ (t1.c0)) AS TEXT) FROM t1 WHERE (((((((NULL, 'Ouea%B*Q', x''))<=((0.4286007084323832, 0.5213005568272231, '')))))<=((((((NULL)AND(NULL)))OR(0.7811144292042039)))))) GROUP BY ((x'') BETWEEN (((vt0.c0)<=(vt0.c0))) AND (CAST(t1.c52 AS TEXT))) HAVING t1.c0;SELECT 0.5429913049751489, SUM((((vt0.c0))>=((t1.c20)))), DENSE_RANK() OVER () FROM t1 WHERE ((CASE '{}k\r3'  WHEN '0.5924452825355457' THEN 684526360 WHEN '' THEN NULL WHEN -207494865 THEN '' ELSE x'' END IN ())) GROUP BY '' HAVING CASE ((t1.c52) BETWEEN (t1.c52) AND (t1.c20))  WHEN ((t1.c0) BETWEEN (t1.c52) AND (t1.c52)) THEN (+ (t1.c52)) END ORDER BY CASE WHEN (t1.c0 IN (t1.c52)) THEN vt0.c0 END DESC  NULLS LAST;SELECT DISTINCT ((CAST(t1.c0 AS BLOB))>=(SQLITE_COMPILEOPTION_USED(t1.c20))), ((((((t1.c20)AND(t1.c52)))OR(t1.c52))) NOT BETWEEN (((vt0.c0)&(t1.c20))) AND (0.15798936687105847)), (- (CAST(t1.c20 AS BLOB))) FROM vt0, t1 ORDER BY x''  NULLS LAST LIMIT 1783370084 OFFSET 58746128; -- 0ms;
SELECT DISTINCT 0.7999039243925093 FROM vt0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN (((t1.c0))!=((t1.c0))) ELSE MAX(t1.c0) END FROM t1; -- 0ms;
SELECT DISTINCT json_array_length((t1.c20 IN (t1.c52))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT json_array(((((vt0.c0)OR(t1.c0)))OR(vt0.c0)), t1.c0 COLLATE RTRIM), GROUP_CONCAT(CASE WHEN t1.c0 THEN t1.c20 ELSE t1.c20 END) OVER ( ORDER BY ' ᴤ'), ((((t1.c0) NOTNULL)) BETWEEN ((~ (t1.c20))) AND (CASE WHEN t1.c20 THEN t1.c20 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c20 END)) FROM vt0;SELECT ALL ((COUNT(t1.c52))/(((t1.c0) BETWEEN (NULL) AND (vt0.c0)))) FROM vt0, t1 WHERE (CAST(x'' COLLATE NOCASE AS TEXT)) GROUP BY ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN (((((t1.c52)OR(vt0.c0)))OR(t1.c20))) AND (vt0.c0 COLLATE RTRIM)) HAVING ((CAST(t1.c52 AS REAL))|(TYPEOF(DISTINCT vt0.c0))); -- 0ms;
SELECT MIN(t1.c0) FROM vt0, t1 WHERE ((((((x'')) NOT BETWEEN (('')) AND ((0.05958764598216715)))) NOT BETWEEN (x'' COLLATE BINARY) AND (0xffffffff8adb5042))); -- 0ms;
SELECT (((t1.c20 IN ()))%(((t1.c20) NOT BETWEEN (vt0.c0) AND (t1.c0)))) FROM vt0 WHERE (IFNULL(DISTINCT (((0.067045891276595)) NOT BETWEEN ((-1.596014023E9)) AND ((x''))), ((1.664565158E9) NOT BETWEEN ('-235744120') AND (NULL))));SELECT DISTINCT t1.c52 COLLATE NOCASE, ((t1.c52) BETWEEN (((t1.c52)<<(NULL))) AND (((t1.c20) NOT NULL))), (((CAST(0.42419452663951607 AS BLOB)))<=(((~ (t1.c52))))) FROM t1, vt0 WHERE ((((NULL IN ('1690542815')))||((('}<*')<<(x'82e5'))))); -- 1ms;
SELECT DISTINCT ((AVG(t1.c0))+(((t1.c52) BETWEEN (t1.c52) AND (vt0.c0)))), t1.c0, (((((vt0.c0, t1.c0, vt0.c0))<((t1.c0, vt0.c0, vt0.c0))))<<(CAST(t1.c20 AS NUMERIC))) FROM vt0 ORDER BY ((((((((((((t1.c20)AND(t1.c20)))AND(vt0.c0)))AND((((vt0.c0, vt0.c0, t1.c0, t1.c20, t1.c52))!=((t1.c0, t1.c52, t1.c0, t1.c20, t1.c20))))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c20)))))AND('-780777976')))AND((((t1.c20, t1.c52, t1.c20))<=((vt0.c0, vt0.c0, ')'))))) DESC  NULLS LAST;SELECT DISTINCT t1.c52 FROM vt0;SELECT ((((t1.c20)GLOB(t1.c52)))IS(((vt0.c0)>>(t1.c0)))) FROM t1, vt0 WHERE (CASE CASE WHEN x'' THEN NULL END  WHEN x'' THEN (~ ('1446083189')) ELSE '' COLLATE NOCASE END); -- 0ms;
SELECT ALL ((t1.c0 IN ()) IN (((t1.c20)>=(t1.c0)), t1.c0)) FROM t1, vt0 WHERE (CAST(',>' AS NUMERIC) COLLATE BINARY) LIMIT -1464728053 OFFSET -1087466463; -- 0ms;
SELECT (((((((((NOT (vt0.c0)))AND(CASE WHEN t1.c20 THEN t1.c52 ELSE vt0.c0 END)))OR(((t1.c52) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(x'')))AND(((vt0.c0)IS(vt0.c0)))), vt0.c0, NULLIF(DISTINCT ((t1.c20)GLOB(t1.c52)), ((((t1.c20)AND(t1.c52)))OR('CTy*Eg'))) FROM vt0, t1 WHERE (((NULL)<('黓y[qR	')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT json_array_length(t1.c52 COLLATE BINARY) FROM t1; -- 0ms;
SELECT t1.c0, (((NULL IN ())) NOTNULL), CASE CASE WHEN t1.c52 THEN t1.c52 END  WHEN AVG('') THEN ((t1.c20) BETWEEN (t1.c52) AND (vt0.c0)) END FROM t1 WHERE (((((0.2086861876710394)<<(x''))) IS TRUE));SELECT DISTINCT MAX((+ (t1.c52))) FROM vt0, t1 WHERE (CAST(((((x'1317')OR(0.7917449957531345)))OR(0.39257888342347425)) AS INTEGER)); -- 0ms;
SELECT CUME_DIST() OVER () FROM t1 WHERE (((((((0.5447156709389814)AND(x'')))AND(0.5204979096852002))) IS FALSE)) LIMIT -1665558781; -- 0ms;
SELECT COUNT((t1.c20 IN ())) FROM vt0 WHERE ((('925091710' COLLATE BINARY)<=(-2.86121417E8 COLLATE BINARY))); -- 1ms;
SELECT (NOT (t1.c0)) COLLATE NOCASE FROM vt0 WHERE ((CAST('' AS NUMERIC) IN ())) GROUP BY CASE WHEN (((t1.c52))<=(('vk*\r9bi'))) THEN t1.c0 COLLATE RTRIM END, ((x'')%((((t1.c0, x'', t1.c20))=((t1.c0, t1.c0, t1.c0))))), LTRIM(((vt0.c0)<=(t1.c20)), ((t1.c20)-('-2139862591')));SELECT DISTINCT ((((t1.c52)AND(t1.c20)))OR(((((vt0.c0)OR(523077963)))OR(t1.c20)))), ((t1.c20)LIKE((((vt0.c0))>(('-179370927'))))), CASE t1.c0  WHEN ((t1.c0)*(vt0.c0)) THEN ((vt0.c0)/(t1.c52)) WHEN ((t1.c52)IS(vt0.c0)) THEN ((t1.c20) NOT NULL) WHEN ((vt0.c0)<<(t1.c20)) THEN ((t1.c20) NOTNULL) ELSE COUNT(t1.c20) END FROM t1, vt0 WHERE (((((0.6604898295923357)/(x'')))+((('*[\n4AJVC')<('3^>HU'))))); -- 0ms;
SELECT (~ (vt0.c0)) COLLATE RTRIM FROM vt0 NOT INDEXED WHERE (((((x'')AND('0.27590100902300474'))) NOT BETWEEN ((('O45iv6')>('598475629'))) AND ((('') BETWEEN (0.09145107437927291) AND (3.74897118E8))))); -- 0ms;
SELECT DISTINCT CAST(((t1.c52)|(t1.c20)) AS REAL) FROM vt0, t1; -- 0ms;
SELECT (AVG('') IN ()) FROM t1; -- 0ms;
SELECT DISTINCT t1.c52, SUM((~ (t1.c20))) OVER (), LOWER(CASE t1.c20  WHEN t1.c0 THEN t1.c0 END), ((CASE t1.c52  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((((t1.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, t1.c0)))) AND ((t1.c0 IN ()))), (((((t1.c52, vt0.c0, t1.c20))<>((vt0.c0, t1.c52, t1.c0)))) ISNULL) FROM t1, vt0 WHERE (CASE ((0.055961066122749425) IS FALSE)  WHEN CASE WHEN -1165631499 THEN NULL END THEN (((NULL))>=(('-880376510'))) END) ORDER BY ((t1.c20) IS FALSE), (((t1.c20, t1.c20, t1.c52)) BETWEEN ((CAST(t1.c52 AS NUMERIC), ((vt0.c0)<=(t1.c0)), ((t1.c0)<(t1.c20)))) AND ((t1.c52, (((vt0.c0)) NOT BETWEEN ((t1.c20)) AND ((vt0.c0))), (- (t1.c0))))) DESC, ((((t1.c52)%(vt0.c0)))<=(((((((((t1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c20)))); -- 0ms;
SELECT ALL CAST((- (t1.c20)) AS TEXT), SQLITE_VERSION(), CASE WHEN ((t1.c20)LIKE(t1.c0)) THEN vt0.c0 COLLATE NOCASE ELSE MAX(t1.c20) END FROM t1, vt0; -- 1ms;
SELECT DISTINCT CAST(((t1.c52) NOTNULL) AS BLOB), COUNT(*) OVER (), (0.06408299535838535 IN ()) FROM t1; -- 0ms;
SELECT CAST(((t1.c0) IS FALSE) AS REAL) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((((t1.c20) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(t1.c52)), vt0.c0, ((t1.c0) NOT BETWEEN (NULL) AND (t1.c0)), CASE WHEN t1.c0 THEN t1.c52 WHEN t1.c52 THEN t1.c20 WHEN t1.c20 THEN t1.c52 END))>=((((((vt0.c0)AND(t1.c20)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN t1.c52 WHEN t1.c0 THEN t1.c20 WHEN t1.c20 THEN vt0.c0 END, (t1.c20 IN ()), (((vt0.c0)) NOT BETWEEN ((t1.c20)) AND ((t1.c0))), ((t1.c20)<(t1.c52))))) FROM vt0, t1 WHERE (((1.621567052E9)<(NULL)) COLLATE BINARY); -- 0ms;
SELECT CASE WHEN t1.c0 THEN t1.c20 ELSE vt0.c0 END COLLATE BINARY FROM vt0;SELECT DISTINCT 0X7825fcec FROM vt0 WHERE ((((NOT (0.4586001501889815)))-((x'' IN ())))); -- 0ms;
SELECT DISTINCT SUM(((t1.c20)>=(t1.c20))) OVER () FROM vt0, t1 WHERE (0.137834635577622); -- 0ms;
SELECT PERCENT_RANK() OVER (), ((((t1.c0)<<(x'9306'))) NOT BETWEEN (((t1.c20)>>(vt0.c0))) AND (vt0.c0 COLLATE BINARY)), (((t1.c20)) NOT BETWEEN ((CAST(t1.c52 AS TEXT))) AND (((t1.c52 IN ())))) FROM vt0, t1 GROUP BY ((CASE t1.c20  WHEN vt0.c0 THEN t1.c20 END)IS(((((t1.c20)AND(x'')))OR(t1.c52)))), CAST(t1.c52 AS INTEGER), x'390b', IFNULL(vt0.c0, t1.c0) COLLATE NOCASE, (NOT (TYPEOF(t1.c20))); -- 1ms;
SELECT DISTINCT ((((t1.c0)+(t1.c0))) NOT BETWEEN (((t1.c20)/(t1.c0))) AND (COUNT(*))), ((vt0.c0) IS FALSE), ((t1.c20)==(0.7430490724799579)) FROM t1 WHERE ((((((x'')AND('')))OR(x'f974')) IN ((- (1998640253)))));SELECT DISTINCT (+ (0.2967492230264258)) FROM vt0 WHERE (CASE WHEN ((NULL) ISNULL) THEN CAST(x'64a5' AS TEXT) END); -- 0ms;
SELECT DISTINCT CAST(x'' AS REAL), (~ (0.9794544251492282)) COLLATE RTRIM, NULL, (x'1964' IN ()), CAST((t1.c0 IN (vt0.c0)) AS BLOB) FROM t1 ORDER BY (((((((t1.c0)AND(t1.c52)))AND(t1.c0))))<=((((t1.c52) ISNULL))));SELECT ALL MAX(((vt0.c0) BETWEEN (t1.c0) AND (t1.c52))), x'', ((CAST(t1.c0 AS TEXT)) IS TRUE) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (~ (((((vt0.c0)OR(t1.c0)))AND(t1.c52)))), UNICODE(((((((((t1.c0)OR(t1.c52)))OR(vt0.c0)))OR('-569406785')))AND(t1.c0))), ABS(((t1.c0)+(t1.c52))) FROM vt0;SELECT NULL, ((((CAST(t1.c52 AS INTEGER))OR(TOTAL(t1.c0))))AND(((vt0.c0) NOTNULL))), ((((t1.c52)<(t1.c20))) BETWEEN (((t1.c52) NOT BETWEEN (t1.c0) AND (t1.c52))) AND (CAST(t1.c0 AS INTEGER))), (((((t1.c0)AND(vt0.c0)))OR(t1.c20)) IN ()), ((t1.c52)|(1819118280)) FROM vt0, t1; -- 0ms;
SELECT ALL AVG(((t1.c20)>(t1.c0))) FROM t1; -- 0ms;
SELECT ALL LIKE(vt0.c0 COLLATE BINARY, ((((((((vt0.c0)AND(t1.c52)))AND(t1.c52)))OR('nF|-K<\nv')))OR(t1.c52)), '!'), 'ἔ?J', (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (MAX(t1.c20) IN ((~ (t1.c52)), CASE WHEN t1.c20 THEN vt0.c0 END)) FROM t1 GROUP BY (NOT (t1.c20)) COLLATE RTRIM COLLATE RTRIM, ((((t1.c0)GLOB(t1.c0))) NOT BETWEEN ('\r>b.ꩿJ&썜') AND (((((((((t1.c20)OR(t1.c0)))OR(t1.c20)))AND(t1.c20)))OR(vt0.c0)))), '9>w?ḗ';SELECT DISTINCT COUNT(*) FROM t1 WHERE ((- (LTRIM(0.8148533702696689)))); -- 0ms;
SELECT DISTINCT (t1.c52 COLLATE NOCASE IN ()) FROM vt0 WHERE ((((x'c0fc')) NOT BETWEEN ((((NULL)>(x'')))) AND ((((((NULL)OR(0.5831394941309838)))AND(NULL)))))) LIMIT -306090141; -- 0ms;
SELECT ALL t1.c0 FROM t1, vt0; -- 0ms;
SELECT ALL x'c5ac' FROM t1; -- 0ms;
SELECT ALL ((CAST(t1.c52 AS NUMERIC)) BETWEEN (NULL) AND (vt0.c0 COLLATE BINARY)) FROM vt0 GROUP BY json_valid(CAST(0.3573071894176236 AS NUMERIC)) HAVING '2049581753' LIMIT -278251068;SELECT CAST(vt0.c0 AS TEXT) COLLATE RTRIM, COUNT(CASE WHEN t1.c20 THEN vt0.c0 END), CASE t1.c0  WHEN ((t1.c52)|(t1.c20)) THEN ((t1.c52)<(vt0.c0)) WHEN t1.c20 COLLATE BINARY THEN CAST(t1.c0 AS REAL) WHEN NULL THEN ABS(t1.c20) ELSE t1.c20 COLLATE BINARY END FROM vt0 GROUP BY ((SUBSTR(t1.c52, t1.c20))AND((+ ('820239029')))) HAVING MAX((~ (t1.c0))) ORDER BY TRIM((- (vt0.c0))) DESC, ((0.023564809864715097) NOT BETWEEN ((((t1.c52))>((t1.c52)))) AND (((vt0.c0) BETWEEN (t1.c52) AND (t1.c20))));SELECT DISTINCT ((((((t1.c20)>>(t1.c20)))AND(CAST(NULL AS TEXT))))OR(t1.c52 COLLATE BINARY)) FROM t1 WHERE (NULL); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c52))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (t1.c0 COLLATE BINARY)), LIKELIHOOD(((((((((((((t1.c0)OR(t1.c52)))AND(t1.c52)))OR(t1.c52)))OR(t1.c52)))AND(t1.c52)))OR(vt0.c0)), 0.308486678773756), NULLIF(x'', vt0.c0) FROM t1, vt0 ORDER BY ((((t1.c20) BETWEEN (t1.c0) AND (t1.c20)))>=(t1.c0))  NULLS FIRST LIMIT 1048449663; -- 0ms;
SELECT DISTINCT (((('307245897') IS FALSE))AND(COUNT(vt0.c0))) FROM t1;SELECT DISTINCT CAST(((t1.c52) NOT BETWEEN ('V]') AND (t1.c0)) AS INTEGER), CASE WHEN ((((((((t1.c52)OR(t1.c0)))AND(t1.c52)))OR(t1.c20)))AND(t1.c20)) THEN ((t1.c20) IS TRUE) END, GROUP_CONCAT('-1314671618') OVER () FROM t1 WHERE (CAST(((((((((0.5441657220840649)OR(NULL)))AND('-2065938136')))OR(0.4906835009692616)))OR(0.04107440662592632)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<<(t1.c20))) BETWEEN ('t+*킧X') AND (((t1.c20)GLOB(vt0.c0)))) FROM vt0 ORDER BY ((((t1.c52 COLLATE RTRIM)AND(((-2126822207) NOT NULL))))AND(((vt0.c0)LIKE(t1.c52)))), ((('0.6937556505303862')) BETWEEN (((- (NULL)))) AND ((((vt0.c0)||(t1.c52))))) ASC  NULLS LAST;SELECT DISTINCT COALESCE(((vt0.c0)<<(vt0.c0)), CAST(t1.c0 AS NUMERIC)) FROM vt0;SELECT DISTINCT (t1.c20 IN (TOTAL(t1.c20), ((((((((t1.c52)OR(t1.c52)))AND(-587505208)))AND(vt0.c0)))AND(t1.c52)))) FROM vt0, t1 WHERE (((((NULL))==((NULL))) IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c0)|(vt0.c0 COLLATE BINARY)) FROM t1 WHERE (TYPEOF(-1.087466463E9 COLLATE RTRIM)) GROUP BY (NOT (('Y弑uIi' IN ()))), (((t1.c20, t1.c52, t1.c0)) NOT BETWEEN (((vt0.c0 IN ()), ((t1.c20)>=(t1.c52)), x'')) AND ((((vt0.c0) BETWEEN ('1145243352') AND (t1.c0)), ((((((((vt0.c0)OR(t1.c20)))OR(t1.c52)))OR(t1.c52)))AND(t1.c52)), t1.c52))), TOTAL_CHANGES() HAVING ((t1.c0)GLOB(t1.c0)) COLLATE RTRIM;SELECT ALL ((SUM(t1.c20)) BETWEEN (CASE t1.c20  WHEN t1.c0 THEN t1.c52 END) AND (MIN(NULL))), (((t1.c20)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))) AND ((CAST(t1.c52 AS TEXT)))), DENSE_RANK() OVER ( ORDER BY vt0.c0 DESC) FROM vt0 WHERE ((((0.5415988911801283)) BETWEEN ((((((((((NULL)AND('?mD*V')))AND(NULL)))OR(NULL)))AND(0.8206896329646403)))) AND ((((NULL)&('-2095813311'))))));SELECT DISTINCT (TOTAL(t1.c0) IN ()) FROM vt0 WHERE (CAST(CASE x''  WHEN NULL THEN x'' WHEN x'' THEN NULL WHEN 0x82c3409 THEN NULL ELSE x'3c514fa7' END AS INTEGER)); -- 0ms;
SELECT (highlight(t1.c20, t1.c0, vt0.c0, t1.c20) IN ()) FROM vt0, t1 GROUP BY ((vt0.c0)>>(t1.c20)) COLLATE BINARY; -- 1ms;
SELECT DISTINCT (CAST(t1.c20 AS REAL) IN ()) FROM t1 WHERE ((((0.650533310322053 IN (0.09145107437927291, 0.9504384708707554, NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT (~ (((((((((t1.c52)AND(t1.c52)))OR(vt0.c0)))OR(vt0.c0)))AND(t1.c0)))) FROM vt0, t1 LIMIT 2109147998; -- 0ms;
SELECT ALL TRIM(DISTINCT MAX(t1.c0), (t1.c20 IN ())) FROM t1, vt0; -- 0ms;
SELECT ((t1.c0 COLLATE RTRIM) BETWEEN (json_quote(t1.c0)) AND ((t1.c0 IN ()))) FROM t1, vt0; -- 0ms;
SELECT ALL CASE WHEN CASE '-1469346015'  WHEN t1.c0 THEN '401959178' WHEN t1.c20 THEN t1.c20 WHEN t1.c52 THEN t1.c20 END THEN t1.c0 WHEN t1.c0 THEN (~ (vt0.c0)) WHEN SUM(vt0.c0) THEN ((((vt0.c0)OR(t1.c52)))OR(vt0.c0)) END FROM vt0, t1; -- 0ms;
SELECT ALL t1.c0 FROM t1 ORDER BY (((t1.c52)) NOT BETWEEN ((t1.c0)) AND ((7.05658676E8))) ASC, ((x'2aad')>>(((((t1.c52)AND(t1.c20)))AND(vt0.c0)))) DESC  NULLS FIRST, (+ ((t1.c20 IN ())))  NULLS LAST;SELECT ALL ((t1.c20 COLLATE BINARY)<<(t1.c20)) FROM t1 WHERE (((((CASE x'482fa898'  WHEN 0.7983999492196241 THEN '2139094845' END)AND((((x'', -377455016, 0.6113698707929857))<=((x'', 'Sg', NULL))))))AND(CAST(x'' AS INTEGER)))) ORDER BY ((~ (t1.c20)) IN ((((vt0.c0))<=((t1.c52))))) ASC  NULLS LAST;SELECT DISTINCT ((((+ (t1.c52))))<((((t1.c0)<(vt0.c0))))), HEX(t1.c20 COLLATE RTRIM), ((COUNT(*)) NOT BETWEEN ('3839476') AND (CAST('-288665379' AS REAL))) FROM t1;SELECT DISTINCT ((CAST(t1.c52 AS TEXT))GLOB(((((t1.c52)AND(t1.c20)))OR(t1.c0)))) FROM t1 WHERE (load_extension(LIKELIHOOD(0Xffffffffe7978934, 0.47827422589637314)));SELECT (((t1.c20)) BETWEEN ((((t1.c20)>(t1.c52)))) AND ((((((((((t1.c20)OR(vt0.c0)))OR(t1.c20)))AND(0.3893468816149338)))OR(t1.c20))))), SUM(t1.c0) OVER ( ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) ASC), (t1.c20 COLLATE BINARY IN ()) FROM t1, vt0 WHERE (((CASE '80507397'  WHEN 411174766 THEN x'e5b4' END)>(((0.002127525812334552) BETWEEN (-4.63613465E8) AND (x''))))) ORDER BY (((vt0.c0, t1.c52, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN 0.18432770888577554 THEN t1.c52 END, ((t1.c52) NOT BETWEEN (vt0.c0) AND (t1.c20)), LAST_INSERT_ROWID())) AND ((CASE t1.c0  WHEN vt0.c0 THEN t1.c20 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, TYPEOF(DISTINCT t1.c52)))) DESC; -- 0ms;
SELECT DISTINCT vt0.c0 FROM t1, vt0 ORDER BY ((((vt0.c0) BETWEEN (t1.c20) AND (vt0.c0))) BETWEEN (CAST(t1.c20 AS INTEGER)) AND (((((t1.c20)AND(0.9312583719311346)))AND(t1.c0))))  NULLS LAST LIMIT -146863046 OFFSET 523151298; -- 0ms;
SELECT (((((t1.c52, t1.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c0, t1.c20)) AND ((t1.c20, t1.c0, vt0.c0))))*((((t1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c52, t1.c52, t1.c0)) AND ((t1.c0, vt0.c0, t1.c20))))) FROM vt0, t1; -- 0ms;
SELECT ALL (~ (((t1.c52)>>(t1.c52)))) FROM vt0 WHERE ((NOT (315389455)) COLLATE BINARY);SELECT SUM(t1.c0 COLLATE RTRIM), NULL, t1.c0, ((((QUOTE(t1.c0))OR(((((t1.c0)AND(t1.c20)))OR(t1.c0)))))AND((~ (t1.c20)))), '2049581753' FROM t1 ORDER BY ((((vt0.c0)|(t1.c20)))<=(CAST(vt0.c0 AS TEXT))), CAST(0.9589454404844184 AS INTEGER) ASC;SELECT DISTINCT LOWER(DISTINCT (vt0.c0 IN ())) FROM t1 WHERE (((7.08991589E8)|(((x'')LIKE('1835933460'))))); -- 0ms;
SELECT ALL (NOT (CASE t1.c52  WHEN t1.c20 THEN t1.c0 END)) FROM vt0 WHERE ((((('-m*{wf?4,' COLLATE RTRIM)AND((('1690542815')&('c䤥')))))AND(CAST(NULL AS REAL))));SELECT DISTINCT (((NULL))>=((t1.c52))), CASE ((t1.c52)<<(t1.c20))  WHEN t1.c0 COLLATE NOCASE THEN MIN(t1.c52) WHEN 0X4ccb602d COLLATE BINARY THEN ((t1.c20)=(vt0.c0)) WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.20837196057896612) THEN ((t1.c0) NOT BETWEEN (x'') AND (x'2afc4b6f')) ELSE (t1.c52 IN ()) END, (((t1.c0, 0.09297157655047816, t1.c0)) BETWEEN ((t1.c0 COLLATE NOCASE, ((t1.c20) NOT NULL), ('1012517374' IN ()))) AND (((t1.c0 IN ()), ((t1.c0) ISNULL), ((vt0.c0) ISNULL)))) FROM vt0 WHERE ((((((0.966284343409582)OR(x'')))OR(0.41176014149531415)) IN (ABS(DISTINCT 0.31710964781520457), 0.11561905347468449))) GROUP BY (((t1.c0, t1.c0, t1.c20, t1.c20, x'80df')) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), LIKE(vt0.c0, t1.c52), ((((((((t1.c20)AND(t1.c0)))OR(t1.c0)))AND(t1.c20)))AND(t1.c52)), ((t1.c52) IS TRUE), t1.c0 COLLATE NOCASE)) AND ((t1.c52, ((-1509509681)|(t1.c52)), UPPER(t1.c20), NULL, t1.c20))), CASE 0.7163005484274111  WHEN (((vt0.c0)) NOT BETWEEN ((t1.c20)) AND ((t1.c20))) THEN CASE vt0.c0  WHEN t1.c20 THEN vt0.c0 ELSE t1.c20 END END, (((+ (t1.c0))) BETWEEN (((t1.c20) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING ((MAX(vt0.c0, t1.c20))AND(0.3952018718102569));SELECT DISTINCT CAST(((t1.c20) IS FALSE) AS REAL) FROM vt0;SELECT ALL (NOT (t1.c20)) COLLATE NOCASE, CASE GROUP_CONCAT(t1.c52)  WHEN t1.c0 THEN (t1.c0 IN ()) END, ((((t1.c20) IS FALSE))|((((x'93d4', t1.c0, t1.c52)) NOT BETWEEN ((t1.c0, vt0.c0, t1.c52)) AND ((t1.c0, vt0.c0, t1.c52))))) FROM vt0, t1 LIMIT 324414236; -- 0ms;
SELECT DISTINCT CASE (((t1.c52, vt0.c0, t1.c52))<=((t1.c52, t1.c0, t1.c0)))  WHEN LIKELY(DISTINCT t1.c0) THEN (+ (vt0.c0)) WHEN t1.c0 COLLATE BINARY THEN (+ (t1.c52)) WHEN ((t1.c20) BETWEEN (t1.c52) AND (t1.c52)) THEN t1.c52 COLLATE BINARY END FROM t1 LEFT OUTER JOIN vt0 ON ((((t1.c52)AND(t1.c20)))AND(0.2424130829370077)) COLLATE NOCASE WHERE (NULLIF(DISTINCT (('0.8206896329646403')*('䤨l\n}o)pjq')), ('-2041842189' IN ()))); -- 0ms;
SELECT ALL ((CAST(t1.c0 AS INTEGER))GLOB(CAST(t1.c0 AS NUMERIC))) FROM vt0 GROUP BY (((- (t1.c0)))<=(0.4150263659598622));SELECT DISTINCT t1.c20 FROM vt0 LEFT OUTER JOIN t1 ON CASE ((t1.c0)<(t1.c20))  WHEN ((0.8866541655603456) NOT NULL) THEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c52)) WHEN CAST(t1.c0 AS INTEGER) THEN CAST('1285387156' AS INTEGER) WHEN (vt0.c0 IN ()) THEN ((t1.c20)IS(t1.c52)) ELSE ((t1.c20)|(t1.c52)) END WHERE ((((('0.0') NOT BETWEEN (-1165631499) AND (0.6716173006676636))) ISNULL)) LIMIT 1690542815; -- 0ms;
SELECT ((CASE vt0.c0  WHEN t1.c20 THEN t1.c0 WHEN x'd4a3' THEN t1.c20 WHEN t1.c52 THEN t1.c20 END)/(t1.c0 COLLATE NOCASE)) FROM t1 WHERE (((('!?' IN ()))IS NOT(TRIM('', NULL))));SELECT ((((((t1.c52)AND(t1.c52)))AND(t1.c52)))IS NOT(((t1.c20)<=(-1156381861)))) FROM vt0 WHERE ((LIKELY(x'') IN ())) LIMIT 753863091 OFFSET 654212984;SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN t1.c20 ELSE t1.c20 END)AND(((x'')GLOB(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c52))))), CAST(t1.c20 AS TEXT), CASE WHEN ((t1.c20)%(t1.c0)) THEN RTRIM(t1.c52) WHEN ((vt0.c0)OR(t1.c52)) THEN ((t1.c0) BETWEEN (vt0.c0) AND (t1.c20)) WHEN ((t1.c0)||(t1.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0x5c420d2b THEN t1.c20 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END END FROM vt0, t1; -- 4ms;
SELECT DISTINCT ((CASE WHEN t1.c20 THEN t1.c20 ELSE t1.c52 END)&((((vt0.c0, t1.c52, t1.c20)) BETWEEN ((t1.c20, t1.c20, t1.c20)) AND ((t1.c0, vt0.c0, t1.c0))))) FROM t1 WHERE (((((0.043604443178713814) NOT BETWEEN (NULL) AND (0.060229101736154145)))=((((0.6474059029526581)) NOT BETWEEN (('1642168944')) AND ((x'5d4e'))))));SELECT DISTINCT (~ (((t1.c20) NOT BETWEEN (x'') AND (t1.c0)))) FROM vt0 WHERE (UNLIKELY(((x'06df') NOT BETWEEN ('pd') AND (x''))));SELECT DISTINCT ((((t1.c52) NOTNULL))==((((t1.c52)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM t1, vt0 WHERE (CASE ((x'') NOT NULL)  WHEN CAST(x'' AS REAL) THEN CAST('0.23458216758399186' AS BLOB) END) GROUP BY t1.c52; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c52) IS FALSE)) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOTNULL))OR(((t1.c52) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(t1.c0 AS NUMERIC))), (-332179372 IN ()), (NOT (NULLIF(t1.c20, t1.c52))) FROM t1 WHERE ((((0.8875606157203628 IN ())) IS TRUE));SELECT ALL GROUP_CONCAT('') FROM t1 WHERE (((((((((CAST('-1087466463' AS REAL))AND(((((NULL)AND(0.09818848333212749)))OR(0.9274819001761022)))))AND('-1611125700')))AND((('1446083189')=(x'f97f')))))AND(CAST(0.5792772068460353 AS REAL)))); -- 0ms;
SELECT DISTINCT CAST(CASE t1.c0  WHEN t1.c20 THEN t1.c0 END AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT x'' FROM t1 WHERE (0.022436110258447384) LIMIT -2086018248; -- 0ms;
SELECT DISTINCT (((((('')!=(t1.c0)))OR(COUNT(*))))AND(t1.c52 COLLATE BINARY)) FROM vt0;SELECT ((((t1.c52)&(t1.c20)))OR(((vt0.c0)<=(t1.c20)))), CAST(0.06764392816299192 AS REAL), ((((t1.c20)) BETWEEN ((t1.c0)) AND ((vt0.c0))) IN ()) FROM vt0 WHERE (((0.822698103542379 IN (NULL)) IN ((((0.011147942633932928, -17824317, '1446083189'))<(('-561485194', NULL, NULL))))));SELECT ALL CAST(((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR(vt0.c0)))AND(t1.c20)) AS NUMERIC) FROM t1, vt0 ORDER BY x'' COLLATE RTRIM, ((((t1.c52) BETWEEN (t1.c20) AND (t1.c20))) ISNULL) ASC, (((+ (vt0.c0))) BETWEEN (UPPER(DISTINCT t1.c0)) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL 0xffffffffd25ecf2b FROM t1 WHERE ('-1632205609'); -- 0ms;
SELECT (- (CAST('-1379109438' AS REAL))) FROM vt0 ORDER BY t1.c0 ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN t1.c52 END)<>(CASE vt0.c0  WHEN t1.c52 THEN t1.c20 WHEN t1.c52 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c52 WHEN t1.c0 THEN t1.c0 END));SELECT SUM(t1.c20) FROM vt0, t1 WHERE (((CASE WHEN '-763854118' THEN 0X1 WHEN NULL THEN x'2cbd' WHEN NULL THEN x'bce7' ELSE NULL END) IS TRUE)) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((t1.c20 IN ()))))AND(((((t1.c0)AND(t1.c52)))AND(vt0.c0)))))OR((t1.c0 IN ()))))AND(IFNULL(DISTINCT t1.c20, vt0.c0))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (t1.c52 IN ()) FROM vt0, t1 WHERE (x''); -- 0ms;
SELECT vt0.c0 COLLATE NOCASE, (((((t1.c20)<=(t1.c0)), CAST(vt0.c0 AS TEXT), (((t1.c52)) BETWEEN ((t1.c0)) AND ((t1.c0)))))>=(((t1.c0 IN (t1.c52)), 'D>rU2q', ((t1.c20)<(t1.c52))))), (- (CASE WHEN vt0.c0 THEN x'' ELSE t1.c52 END)), AVG((+ (t1.c52))), (((t1.c52)) BETWEEN (((NOT (t1.c0)))) AND ((SUM(t1.c0)))) FROM t1;SELECT ((CAST(t1.c0 AS INTEGER))&(((t1.c52) ISNULL))) FROM t1; -- 0ms;
SELECT CAST(t1.c52 COLLATE RTRIM AS TEXT), NULL, CASE ((t1.c0)-(vt0.c0))  WHEN '.5' THEN TOTAL(vt0.c0) ELSE CAST(t1.c0 AS INTEGER) END FROM t1, vt0 WHERE (')㜊n%') ORDER BY (~ (LOWER(t1.c20)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t1.c20)<(0X73f21856))) IS FALSE) FROM vt0;SELECT DISTINCT (((t1.c52 IN (t1.c52))) NOT BETWEEN ((vt0.c0 IN ())) AND ((t1.c20 IN ()))) FROM t1, vt0; -- 0ms;
SELECT (((t1.c52, t1.c0, t1.c20)) BETWEEN ((t1.c20, ((((t1.c20)AND(t1.c52)))OR(vt0.c0)), ((t1.c0) NOT BETWEEN (t1.c52) AND (vt0.c0)))) AND ((((t1.c0)<=(t1.c0)), ((vt0.c0)>(vt0.c0)), ((((vt0.c0)AND(t1.c20)))AND(t1.c52))))) FROM vt0;SELECT TOTAL((+ (t1.c20))) FROM t1 INDEXED BY i98 WHERE (x'');SELECT DISTINCT INSTR(CASE WHEN vt0.c0 THEN t1.c0 WHEN t1.c52 THEN t1.c52 WHEN vt0.c0 THEN t1.c0 ELSE t1.c52 END, json_insert(t1.c20, t1.c20, t1.c0, t1.c0, t1.c52)) FROM t1;SELECT ALL t1.c20 FROM vt0 WHERE ((((((((((((((((((('CTY*EG')AND(0.040511130257338435)))AND(x'1e61')))AND(0.1367321311339551)))OR(0.21685095559552292)))OR(1771555785)))OR(x'')))OR(NULL)))AND('705658676')))GLOB(CAST(NULL AS INTEGER))));SELECT ALL COUNT(*), ((((((((((((CASE WHEN t1.c52 THEN t1.c0 END)OR(((t1.c20) BETWEEN (t1.c20) AND (t1.c0)))))OR(0Xffffffffce94095a)))AND(CASE vt0.c0  WHEN t1.c52 THEN NULL ELSE t1.c0 END)))AND((((vt0.c0))>=((vt0.c0))))))AND('-1778329211')))AND(CASE t1.c20  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN x'' ELSE t1.c20 END)), (+ (((((t1.c20)AND(vt0.c0)))AND(t1.c0)))) FROM vt0 WHERE (((rtreenode(NULL, '-463613465')) NOT BETWEEN ((((('255962130')OR(0X3a95f4)))AND('0.9420898710854468'))) AND (((0Xffffffff9600d985)IS NOT(0.2067541914105866)))));SELECT t1.c52, NTILE(((((vt0.c0)>>(vt0.c0)))-((((vt0.c0))<>((vt0.c0)))))) OVER (), GROUP_CONCAT((vt0.c0 IN (t1.c52))) OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM vt0 WHERE (((TYPEOF(DISTINCT '1888216405'))%((('b纀') IS FALSE))));SELECT ALL CAST(1046030230 AS BLOB), (vt0.c0 COLLATE NOCASE IN ()), '{}' FROM vt0, t1; -- 0ms;
SELECT DISTINCT (+ (t1.c0)), COALESCE((t1.c20 IN ()), MAX(t1.c0), (((t1.c0, vt0.c0, t1.c52, '598475629', t1.c52)) BETWEEN (('-491822018', vt0.c0, vt0.c0, vt0.c0, t1.c20)) AND ((t1.c0, t1.c52, t1.c0, t1.c0, t1.c0))), CAST(x'' AS BLOB), t1.c20, json_extract(t1.c52, t1.c52, t1.c0, 'vdLu\rUf')), GROUP_CONCAT(((vt0.c0) NOT NULL)), SUM(((((((((t1.c0)OR(t1.c52)))AND(t1.c0)))AND(t1.c0)))AND('-1881713896'))) OVER (), SUM(0.0683460881519139) OVER () FROM vt0 RIGHT OUTER JOIN t1 ON NULL; -- 0ms;
SELECT DISTINCT ((((((t1.c52)OR(t1.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(t1.c20)))))OR(NULLIF(DISTINCT t1.c0, t1.c20))) FROM t1, vt0 WHERE ((((NULL, 0.9262598571603735, '331371822')) BETWEEN ((CAST(x'' AS BLOB), (- (0Xffffffffede4a1cc)), (0x5784fcad IN ()))) AND ((((0.645585256179167)LIKE(NULL)), ((((((((NULL)AND('0.9998085044430255')))AND(x'')))AND(x'aa69')))OR(334480290)), (0.13313281486140016 IN (x'8e5a5198', 1.357212349E9)))))); -- 0ms;
SELECT DISTINCT TOTAL(GLOB(t1.c52, vt0.c0)), (NOT ((t1.c0 IN (t1.c20)))), ((CAST(vt0.c0 AS BLOB))*(((vt0.c0)+(t1.c20)))) FROM t1, vt0 WHERE ((((0.13055688974883561) NOT BETWEEN (NULL) AND (0.25994096372484143)) IN ())) ORDER BY CASE WHEN t1.c0 THEN UPPER(DISTINCT t1.c20) ELSE CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c52 THEN t1.c20 WHEN t1.c52 THEN t1.c0 ELSE t1.c0 END END ASC  NULLS FIRST, (((NULL)==(t1.c20)) IN (((x'66e8')AND(vt0.c0)))) ASC, CAST((((t1.c52)) BETWEEN ((t1.c0)) AND ((t1.c20))) AS REAL); -- 0ms;
SELECT LAG((~ (CAST(vt0.c0 AS INTEGER))), (((t1.c0 IN ())) BETWEEN ((t1.c20 IN ())) AND (UNICODE(t1.c0))), ((t1.c0 COLLATE BINARY) NOT BETWEEN ('') AND ((('') NOT NULL)))) OVER ( ROWS BETWEEN 0.48231308490300917 COLLATE NOCASE FOLLOWING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM t1, vt0;SELECT DISTINCT CASE WHEN (t1.c20 IN ()) THEN (- (t1.c20)) END FROM vt0, t1 WHERE ((CAST('|#}	3籖' AS TEXT) IN ())); -- 0ms;
SELECT CAST((NOT (t1.c0)) AS REAL) FROM vt0 WHERE (((('-2065938136' IN ()))LIKE(CAST(',' AS NUMERIC))));SELECT DISTINCT COUNT(*) FROM t1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((((vt0.c0)=(t1.c0)))IS(CASE WHEN vt0.c0 THEN t1.c52 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c52 THEN vt0.c0 WHEN t1.c0 THEN t1.c52 WHEN t1.c52 THEN vt0.c0 END)), ((((767382372)!=(vt0.c0)))<<(((t1.c52)IS NOT(t1.c52)))) FROM vt0 WHERE ((((((((x'')) BETWEEN ((NULL)) AND ((x''))))AND(((x'7ee0')IS('')))))AND(((((((((x'')AND('k|')))OR(0xffffffffaa991823)))OR(NULL)))OR(25662168)))));SELECT ((t1.c20 IN ()) IN ()) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((CAST(t1.c20 AS INTEGER))-(CASE t1.c20  WHEN t1.c52 THEN t1.c20 ELSE t1.c20 END)) FROM vt0 WHERE ((((NULL IN ())) BETWEEN (((0x246e6d4c) BETWEEN (NULL) AND (-892613926))) AND (((((x'')AND(x'')))OR(x''))))) GROUP BY '-2065938136', ((x'' COLLATE NOCASE)>>(LIKELIHOOD(vt0.c0, 0.27470674620003455))), (((((t1.c52 IN ()))OR((t1.c20 IN ()))))AND(((((vt0.c0)AND(t1.c52)))OR(t1.c52)))), (CASE t1.c0  WHEN 0.6144112428671948 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c52 THEN t1.c52 ELSE t1.c0 END IN ()), '348063687' HAVING rtreenode(((((((((NULL)OR(t1.c52)))OR(t1.c0)))AND(t1.c20)))AND(vt0.c0)), GROUP_CONCAT(vt0.c0)) LIMIT -1574027993;SELECT ALL (((((((('925091710')AND(t1.c20)))AND(t1.c52)))OR(MAX(vt0.c0))))AND(SQLITE_SOURCE_ID())) FROM t1, vt0 WHERE ('-1'); -- 0ms;
SELECT DISTINCT RTRIM(ABS('1555191598')) FROM t1 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT DISTINCT (((t1.c52, t1.c0, t1.c20)) NOT BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0)<(t1.c0)), CAST(t1.c0 AS TEXT))) AND (((((t1.c0))=((t1.c52))), NULL, json_remove(vt0.c0, t1.c52)))) FROM t1, vt0 WHERE (0X33652347); -- 0ms;
SELECT DISTINCT 0.9617582220942698 FROM vt0 WHERE (TRIM(DISTINCT ((((((((0.726351665718434)OR(0.010072724361176344)))OR(NULL)))OR(x'')))OR(0.49838522518299777)), (('194010677')GLOB(1757417241)))); -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (t1.c20) AND (t1.c52)) COLLATE NOCASE, RANK() OVER (), CAST(((t1.c0)<=(t1.c0)) AS NUMERIC) FROM t1, vt0 WHERE (((IFNULL(NULL, NULL)) BETWEEN (((x'cd68') NOT BETWEEN (0.3363354140692002) AND ('627159588'))) AND (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT COUNT(*), (((CAST('753:-2025866180161831009T-9162750113672101142:-6708923831420401372:࿼m' AS NUMERIC), ((vt0.c0)||(t1.c20)), ((vt0.c0)&(1.374691646E9))))<=((((((t1.c0)OR(x'0836')))OR(t1.c20)), t1.c0 COLLATE RTRIM, ((((t1.c0)OR(t1.c20)))AND(t1.c0))))), ((((t1.c0)OR(t1.c0)))AND(vt0.c0)) COLLATE NOCASE FROM t1, vt0; -- 0ms;
SELECT ALL ((((UNICODE(t1.c0))AND((vt0.c0 IN ()))))AND(t1.c52 COLLATE NOCASE)) FROM t1, vt0 GROUP BY ((((t1.c20)|(t1.c0)))>>(t1.c20 COLLATE BINARY)) HAVING (((t1.c20, vt0.c0, t1.c20)) BETWEEN ((t1.c52, t1.c0, t1.c52)) AND ((t1.c20, t1.c20, t1.c52))) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CASE t1.c52  WHEN t1.c52 THEN NULL END) AND ((t1.c20 IN (t1.c0)))) FROM t1, vt0 WHERE ((((TRIM('', x'e318'), 0X8477632, CASE 0.9789743867730925  WHEN 1305946151 THEN '' ELSE NULL END))<=((((((((((x'')AND(NULL)))AND(0.9420898710854468)))AND(0.8791991900674844)))OR(0.22301115752170275)), (('')<('kVKV')), '0.35797090382177976')))); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT '228181019') COLLATE NOCASE, ((vt0.c0) NOTNULL), 2.065117897E9 FROM t1, vt0 WHERE (0.6742882428293206) ORDER BY ((((((((((t1.c0)||(vt0.c0)))OR(((t1.c52) IS FALSE))))OR(((t1.c0) NOT NULL))))OR((NOT (t1.c20)))))OR((t1.c0 IN ()))) DESC; -- 0ms;
SELECT DISTINCT ((CASE WHEN 2.7253206E8 THEN t1.c52 END)&(((((t1.c52)OR(t1.c20)))AND(t1.c20)))), ((((((((((((vt0.c0)OR(t1.c20)))AND(t1.c20)))OR(x'')))AND(vt0.c0)))AND(t1.c20)))AND(t1.c20)) COLLATE NOCASE, ((((vt0.c0)OR((NOT (t1.c52)))))AND(vt0.c0 COLLATE RTRIM)) FROM vt0 INNER JOIN t1 ON t1.c52 WHERE ((((((0.3210415262252869)*(0.06764392816299192)), (('-1841519471')GLOB('1316600371')), 0.5391490930545633))>(((((x'')) NOT BETWEEN ((NULL)) AND ((NULL))), GLOB(0.861556411370358, NULL), '	C' COLLATE NOCASE)))) GROUP BY (- (t1.c0 COLLATE RTRIM)), (- (t1.c20)), ((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((((t1.c52)AND(vt0.c0)))OR(NULL)))); -- 0ms;
SELECT DISTINCT (NOT (((t1.c20) NOT BETWEEN (t1.c0) AND (vt0.c0)))) FROM vt0, t1 WHERE (((x'3699fab8' COLLATE BINARY)*(x''))); -- 0ms;
SELECT ALL (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((CAST(vt0.c0 AS NUMERIC)))) FROM t1, vt0 WHERE ((CASE WHEN '-848186906' THEN 'H}s^V2.׻' ELSE x'' END IN ((((NULL)) NOT BETWEEN ((93477948)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT ALL (NOT (((t1.c20)IS(t1.c0)))) FROM vt0, t1 WHERE ((CASE WHEN NULL THEN NULL END IN ())); -- 0ms;
SELECT ALL (((((t1.c52) NOT BETWEEN (t1.c20) AND (t1.c0))))==((CAST(t1.c20 AS BLOB)))) FROM vt0, t1 GROUP BY CASE WHEN json_patch(vt0.c0, '430633557') THEN ((((t1.c20)OR(t1.c0)))AND('')) END;SELECT DISTINCT ((CASE NULL  WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c20 THEN t1.c20 ELSE t1.c0 END) BETWEEN ((((t1.c0, NULL, t1.c0, t1.c0, t1.c52))<>((t1.c0, t1.c52, t1.c52, t1.c20, t1.c20)))) AND (UPPER(DISTINCT t1.c20))), t1.c20, (((('-811616488') IS TRUE)) NOT BETWEEN (SUM(t1.c52)) AND (((t1.c20) IS TRUE))) FROM t1, vt0 LIMIT 1085781318; -- 0ms;
SELECT DISTINCT ((LOWER(t1.c0)) NOT BETWEEN (((vt0.c0)%(t1.c20))) AND (((((t1.c20)OR(t1.c52)))OR(vt0.c0)))) FROM vt0 WHERE (((((- ('124923160'))))<>((CAST(0x189e8953 AS BLOB)))));SELECT ALL TOTAL(((t1.c0)<<(t1.c0))) FROM vt0;SELECT ALL (- (CASE t1.c20  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END)), ((LIKELY(t1.c52))*(((t1.c52) NOT NULL))), ((IFNULL(t1.c52, vt0.c0))/(UNICODE(NULL))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((((t1.c20))<>((t1.c0))))==((((t1.c52)) NOT BETWEEN ((t1.c52)) AND ((t1.c20))))) FROM t1 WHERE (CASE WHEN NULL THEN '1229104663' END COLLATE BINARY); -- 0ms;
SELECT DISTINCT (~ (NULL)), ((CAST(vt0.c0 AS BLOB)) IS FALSE), (((t1.c0)) NOT BETWEEN ((json_type(t1.c0))) AND ((((t1.c20)>=(t1.c0))))) FROM vt0;SELECT DISTINCT (((+ (vt0.c0)))GLOB(((t1.c52)GLOB(vt0.c0)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (NOT (((t1.c52) NOT BETWEEN (t1.c0) AND (vt0.c0)))), CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS INTEGER) THEN AVG(t1.c0) END, FIRST_VALUE(t1.c20) OVER () FROM t1 GROUP BY (NOT (t1.c52)) COLLATE NOCASE;SELECT (NOT (((t1.c0)+(t1.c20)))) FROM vt0 WHERE (CAST(((NULL) BETWEEN ('0.7500139385755007') AND (x'9354f956')) AS REAL));SELECT DISTINCT GROUP_CONCAT((((vt0.c0))!=((NULL)))) FILTER(WHERE 0.33496632962414086) OVER (), (((((t1.c52) ISNULL)))<=((((x'') NOT BETWEEN (t1.c20) AND (t1.c20))))), ((((t1.c52)AND((+ (t1.c0)))))OR(SUM(t1.c52))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS TEXT) AS BLOB), TOTAL(((t1.c0)LIKE(t1.c52))) OVER (), ((((vt0.c0 IN ())))<=((((t1.c52) IS TRUE)))) FROM vt0;SELECT DISTINCT '\nO', (((~ (vt0.c0)))OR(CASE t1.c0  WHEN t1.c52 THEN t1.c0 ELSE 0.6144112428671948 END)), COUNT(vt0.c0) OVER () FROM t1;SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((0X5b36e7c9))>=(('\_'))))%(((NULL) BETWEEN ('') AND (0.04212341205335646))))) LIMIT 772705121; -- 0ms;
SELECT (((((((((t1.c52)OR(t1.c20)))AND(t1.c52)))AND(t1.c0)))AND(0x44e9bfd7)) IN ((t1.c0 IN (t1.c20)), ((vt0.c0)OR(t1.c52)))), CAST((+ (vt0.c0)) AS NUMERIC), ((('em'))>=((TOTAL(vt0.c0)))) FROM t1 GROUP BY ((((t1.c20)>=(t1.c0))) NOT BETWEEN (CAST(t1.c52 AS TEXT)) AND ((((t1.c20)) NOT BETWEEN ((t1.c0)) AND ((t1.c52))))) HAVING CAST((- (x'')) AS INTEGER) LIMIT 1433589603;SELECT t1.c52, (((t1.c52 IN ())) IS FALSE), (((((t1.c52, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c20, t1.c20))))>>(((vt0.c0)AND(t1.c0)))) FROM t1, vt0; -- 0ms;
SELECT ALL t1.c20, TRIM((NOT (t1.c0))), (((t1.c20)) NOT BETWEEN (((+ (t1.c52)))) AND ((t1.c52 COLLATE BINARY))) FROM t1, vt0 WHERE ((((x''))>((x'0c31' COLLATE RTRIM)))); -- 0ms;
SELECT TOTAL('524830641') OVER ( PARTITION BY (CAST(t1.c20 AS TEXT) IN (CASE t1.c0  WHEN t1.c0 THEN t1.c52 WHEN vt0.c0 THEN t1.c0 WHEN t1.c52 THEN vt0.c0 ELSE t1.c0 END)), ((((((t1.c0)OR(t1.c52)))OR(t1.c52))) NOT BETWEEN (((t1.c0)/(t1.c0))) AND (CAST(t1.c20 AS INTEGER)))), IFNULL((-780777976 IN ()), t1.c20), ((((t1.c52) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((vt0.c0)IS NOT(t1.c20)))) FROM vt0, t1; -- 1ms;
SELECT DISTINCT ((('鑘[uV*c')) BETWEEN ((((t1.c0) NOTNULL))) AND (((vt0.c0 IN ())))), (((((vt0.c0)OR(vt0.c0)))AND(t1.c52)) IN ()), vt0.c0 FROM vt0;SELECT DISTINCT ((CAST(t1.c0 AS REAL))AND(t1.c52)) FROM vt0, t1 GROUP BY (((CASE ''  WHEN vt0.c0 THEN t1.c20 END))<(('2095945767'))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))>>(x'')) FROM vt0; -- 0ms;
SELECT DISTINCT ((((t1.c20 COLLATE BINARY)OR(GROUP_CONCAT(vt0.c0))))AND(((t1.c0) BETWEEN (t1.c0) AND (vt0.c0)))) FROM t1, vt0; -- 0ms;
SELECT (((+ (t1.c52))) NOT BETWEEN (CASE t1.c20  WHEN x'' THEN t1.c52 ELSE t1.c20 END) AND (((vt0.c0)>(t1.c20)))) FROM t1 WHERE ((('v') NOT BETWEEN (((0x68f0254a) NOT BETWEEN (0.05388614532840519) AND (NULL))) AND ((NULL IN ())))) GROUP BY ((((((t1.c52)OR(vt0.c0)))AND(vt0.c0)))-(CAST('769540289' AS REAL))), (((t1.c52, t1.c52, t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE), ((((((((t1.c20)OR(t1.c20)))OR(t1.c20)))AND(vt0.c0)))OR(vt0.c0)), ((((((((t1.c20)AND(t1.c0)))AND(t1.c20)))OR(x'')))OR(NULL)))) AND ((t1.c52 COLLATE RTRIM, x'', (~ (t1.c0))))), CAST(((vt0.c0)*(vt0.c0)) AS INTEGER) HAVING CAST(((((((((t1.c0)AND(t1.c52)))OR(t1.c0)))OR(vt0.c0)))OR(t1.c52)) AS TEXT);SELECT DISTINCT ((NULL)IS NOT((NOT (t1.c20)))) FROM t1, vt0; -- 0ms;
SELECT ALL (((t1.c20)) NOT BETWEEN ((t1.c0)) AND ((ABS('1642168944')))) FROM t1 NOT INDEXED WHERE ((- (((0xfffffffffeb65d3d) NOT BETWEEN (NULL) AND (x'2935'))))); -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c20) NOT BETWEEN (vt0.c0) AND (t1.c52)) THEN '2110252409' END FROM t1, vt0 ORDER BY ((CAST(t1.c52 AS TEXT)) IS FALSE)  NULLS FIRST; -- 0ms;
SELECT ALL (+ ('#	p3')) COLLATE NOCASE FROM t1; -- 0ms;
SELECT ((((((t1.c0)<=(t1.c52)))AND(((vt0.c0)LIKE(t1.c52)))))OR((((t1.c20)) NOT BETWEEN ((t1.c52)) AND ((vt0.c0))))), ((((((((((t1.c20)OR(vt0.c0)))AND(t1.c52)))OR(NULL)))AND(t1.c20))) IS FALSE), ((COALESCE(DISTINCT t1.c0, x'')) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c20) AND (0.8748733644079648))) AND (t1.c20)) FROM t1 ORDER BY (((t1.c0))<((CAST(t1.c52 AS INTEGER))))  NULLS FIRST;SELECT ALL ((((GROUP_CONCAT(t1.c0))OR(((((t1.c52)AND(t1.c0)))OR(t1.c0)))))OR(((((((((t1.c20)OR(vt0.c0)))OR(vt0.c0)))OR(t1.c20)))AND(t1.c20)))) FROM vt0 WHERE (CAST('' AS NUMERIC)) ORDER BY NULL, x'' COLLATE RTRIM ASC;SELECT DISTINCT SUM((t1.c0 IN ())) OVER () FROM vt0, t1 WHERE (((('2\V' COLLATE NOCASE, (- (']z岢ⱽaB}l')), ((NULL) NOT BETWEEN ('') AND (-1.778329211E9))))!=((((('', NULL, '1138523157')) BETWEEN ((NULL, 0.7423576330907387, x'')) AND (('', NULL, '4'))), ('\nO8RQm|l1' IN ()), (('-944410259')||('-338822740')))))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((((t1.c52) NOT BETWEEN (vt0.c0) AND (t1.c20))) ISNULL)) OVER (), t1.c0 COLLATE NOCASE, MAX(((vt0.c0) IS TRUE) COLLATE NOCASE) FROM t1 WHERE ((+ (NULL)));SELECT DISTINCT (+ (((vt0.c0) NOTNULL))), CASE (NOT (t1.c52))  WHEN ((t1.c20)<<(t1.c52)) THEN t1.c0 END, QUOTE(COUNT(*)) FROM t1, vt0 WHERE ((((('-561485194')>('1012517374')))>=(((NULL)>>('-1564442431'))))); -- 0ms;
SELECT ALL (((vt0.c0 IN ()))!=(CASE WHEN NULL THEN t1.c52 ELSE vt0.c0 END)), vt0.c0, HEX(DISTINCT TOTAL(t1.c20)) FROM vt0 ORDER BY NULLIF(((t1.c52) NOT BETWEEN (NULL) AND ('￿X笱{9Bꆒ')), ((t1.c20) IS TRUE))  NULLS LAST;SELECT ALL CASE LIKELIHOOD(NULL, 0.64930970036971)  WHEN (NULL IN ()) THEN ((0.3247447642867801) NOT BETWEEN (t1.c52) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END FROM t1, vt0 WHERE ((~ ((((NULL)) NOT BETWEEN (('')) AND (('Kq醦*0')))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN t1.c20 END AS BLOB), ((((((((((t1.c52)<<(t1.c20)))OR(((vt0.c0) BETWEEN (t1.c20) AND (t1.c0)))))OR((t1.c0 IN (t1.c20, vt0.c0)))))AND(CASE t1.c0  WHEN '-1848169392' THEN t1.c20 ELSE t1.c20 END)))AND(MIN(t1.c0))), t1.c0, COUNT(*), GROUP_CONCAT(((vt0.c0) NOT NULL)) OVER () FROM t1, vt0 WHERE (CASE WHEN (('')/(x'')) THEN (~ (x'')) WHEN ((NULL) NOT BETWEEN (NULL) AND (NULL)) THEN CAST('a-8x?L<㨑' AS NUMERIC) WHEN ((0.448027559217561) NOTNULL) THEN ((1205343966)||(NULL)) ELSE ((NULL) NOT BETWEEN (0.2653150691843479) AND (x'')) END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY CASE WHEN (((t1.c0, NULL, t1.c0)) NOT BETWEEN ((t1.c52, t1.c52, t1.c52)) AND ((t1.c52, t1.c0, t1.c20))) THEN t1.c20 ELSE TRIM(t1.c0, vt0.c0) END, (((t1.c0)/(t1.c52)) IN ())) FROM t1, vt0 WHERE ((CAST(NULL AS BLOB) IN (CASE '-2121149242'  WHEN NULL THEN '0.36634849629331356' ELSE '' END))); -- 0ms;
SELECT CAST((+ (t1.c20)) AS INTEGER), LAST_VALUE((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<>('142754706'))) OVER (), 'T07]b]Dn', SUM((~ (t1.c20))), vt0.c0 FROM vt0 LIMIT 1327866049;SELECT ALL ((((t1.c52)OR((-530628641 IN ()))))AND((t1.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN ('?^2Wdn蕂{K') AND (((t1.c52)+(t1.c20)))) FROM vt0;SELECT CASE (- (t1.c52))  WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(t1.c0 AS INTEGER) WHEN (vt0.c0 IN (t1.c0, vt0.c0)) THEN ((t1.c20)IS('-622607961')) WHEN json_valid(t1.c52) THEN vt0.c0 COLLATE NOCASE ELSE ((((t1.c20)AND(vt0.c0)))OR(t1.c20)) END FROM vt0, t1 WHERE (((CASE WHEN NULL THEN 0.1029474828497915 END)IS(CAST(x'00a6' AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((((0.8026195223218433)AND(((t1.c52)*(vt0.c0)))))AND(NULL)) FROM vt0 WHERE (((UPPER(DISTINCT NULL)) IS TRUE));SELECT DISTINCT GROUP_CONCAT(((t1.c52)*(vt0.c0))), CASE CASE WHEN '' THEN vt0.c0 END  WHEN x'55b7ad8f' THEN ((((((((0x56317a75)OR(t1.c20)))OR(t1.c20)))AND(0.2685374644371943)))OR(vt0.c0)) ELSE ((((vt0.c0)OR(vt0.c0)))OR(t1.c0)) END, ((t1.c52) BETWEEN (t1.c52) AND (t1.c52)) COLLATE NOCASE FROM vt0;SELECT DISTINCT t1.c20 FROM t1 WHERE (HEX(CASE WHEN 0.7086881586497372 THEN '' ELSE NULL END)); -- 0ms;
SELECT DISTINCT (((+ (t1.c0))) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (t1.c52 COLLATE RTRIM)) FROM vt0, t1 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT DISTINCT (- (((t1.c20)*(vt0.c0)))) FROM vt0, t1 WHERE ((~ (0X58a46bd4)) COLLATE NOCASE) GROUP BY CAST((('')<(t1.c20)) AS REAL) HAVING (~ (CAST(vt0.c0 AS TEXT))) ORDER BY t1.c20  NULLS LAST; -- 0ms;
SELECT DISTINCT HEX(((((((((t1.c0)OR(t1.c52)))OR(t1.c20)))OR(vt0.c0)))OR(t1.c0))) FROM t1, vt0 NOT INDEXED WHERE ((- ((('-212183544') BETWEEN (x'') AND (0.5716784456387448))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE)) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (SQLITE_SOURCE_ID())), ((((((((((vt0.c0)+(t1.c0)))OR(CASE t1.c52  WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)))AND(t1.c0)))AND(((('-1329847847'))=((t1.c0))))))OR(t1.c52 COLLATE BINARY)), (((t1.c20)) NOT BETWEEN ((((t1.c0)&(vt0.c0)))) AND ((CAST(t1.c20 AS INTEGER)))), (((~ (vt0.c0))) NOT BETWEEN (t1.c20) AND ((vt0.c0 IN ()))), (~ (vt0.c0 COLLATE NOCASE)) FROM vt0, t1 WHERE ('-1187144901'); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, t1 WHERE ((CASE x'c03e'  WHEN x'' THEN 0.4003112312373781 WHEN NULL THEN 0.06764392816299192 WHEN x'64d5c272' THEN '1685231257' END IN (((')')*(0.0680048187245228)), ((((x'')OR('._	%RM胠(u')))OR(NULL))))); -- 0ms;
SELECT DISTINCT UPPER((vt0.c0 IN (t1.c0))) FROM vt0 WHERE (CAST(CASE WHEN x'' THEN NULL END AS REAL));SELECT ALL t1.c52 FROM vt0 WHERE (ABS(CAST(0.3930920830935277 AS BLOB)));SELECT DISTINCT ((((((((t1.c20)AND(vt0.c0)))OR(t1.c0)))OR(((((0X60dae63c)AND(vt0.c0)))AND(vt0.c0)))))OR(LTRIM(x'', t1.c0))) FROM vt0;