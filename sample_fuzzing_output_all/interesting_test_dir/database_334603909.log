-- Time: 2024/06/07 11:50:34
-- Database: database9
-- Database version: 3.40.0
-- seed value: 334603909
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 TEXT ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(NULL) WHERE ((((x'')<=(rt1.c0))) IS TRUE); -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c2)=('VgzH亮', NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0X2e225c1b); -- 0ms;
REINDEX NOCASE; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, order=ASC, prefix=448); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -233059730);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('%M'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=('%m', 0.11828756791793293, x''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE ((TRIM(DISTINCT 774003739)) ISNULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c0)=('', 0.8855384427685963) WHERE ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN ()); -- 0ms;
PRAGMA integrity_check; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
REINDEX  vt0; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i64 ON t0(c0) WHERE ABS(((c0)GLOB(c0))); -- 0ms;
REINDEX i64; -- 1ms;
END; -- 0ms;
REINDEX i64; -- 0ms;
ANALYZE temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(x'') WHERE (~ (rt1.c2)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0x2e225c1b; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1711274527' WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))>=((NOT (vt0.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt1 SET (c1)=(NULL) WHERE 0xffffffffbe59417f; -- 0ms;
END; -- 0ms;
DROP INDEX "i64"; -- 1ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(CAST(NULL AS BLOB))))AND(1794096527)))AND((NOT (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
INSERT OR ABORT INTO rt1(c0) VALUES ('-1300921605'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER UPDATE OF c0 ON t0 WHEN (((t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((json_patch(t0.c0, t0.c0)))) BEGIN INSERT OR IGNORE INTO rt1(c1, c0, c2) VALUES ('', x'', 'kRK.Z');END; -- 0ms;
UPDATE OR FAIL vt0 SET c0=x''; -- 0ms;
UPDATE vt0 SET (c0)=(0X44437a9); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-751839651'); -- 2ms;
UPDATE rt1 SET (c2)=(''); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt1 SET (c1)=(0.04569401657993677) WHERE CAST(CASE WHEN rt1.c1 THEN rt1.c2 END AS NUMERIC); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (x''); -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
UPDATE OR ABORT rt1 SET c1='', c2=0x55dc952a; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c0=0.04569401657993677, c1=NULL, c1=-2.3305973E8; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (NULL); -- 0ms;
UPDATE OR ABORT rt1 SET (c1)=(NULL) WHERE CASE CASE WHEN '-1300921605' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END  WHEN ((rt1.c1)|(NULL)) THEN ((rt1.c1)/(rt1.c2)) ELSE 0.02857195940021784 COLLATE BINARY END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('㳣xgJ', NULL) WHERE CAST(t0.c0 COLLATE BINARY AS INTEGER); -- 1ms;
PRAGMA main.application_id = 8861706157528421620; -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE vt0 SET c0=x'b9b9' WHERE x''; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(x'') WHERE ((((((rt1.c2) ISNULL))OR((~ (rt1.c2)))))AND((0.8462740848419167 IN ()))); -- 0ms;
PRAGMA main.stats; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=NULL WHERE NULLIF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE 0.9385443916002283 END, CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END); -- 1ms;
UPDATE OR REPLACE rt1 SET (c0)=(x'') WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.06907062545613563); -- 0ms;
UPDATE rt1 SET c0=0x0; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT SUM(((rt1.c0) NOT NULL)) FROM rt0, rt1, vt0 WHERE (((((x'') NOT BETWEEN ('') AND (x''))) BETWEEN (CASE WHEN '-2102512714' THEN '-233059730' WHEN NULL THEN '1794096527' WHEN 0.10301936779717658 THEN '' ELSE -1602511013 END) AND (CASE 0Xffffffffb06e873e  WHEN 0.8916599292599872 THEN NULL ELSE 0.6219632927286209 END))); -- 0ms;
SELECT ALL MAX(x'') FROM t0, rt0, vt0 WHERE (((CASE WHEN '' THEN NULL WHEN x'' THEN 1630937406 WHEN 0.5051444168280304 THEN 790525135 ELSE NULL END)OR(DATETIME(0.22850688137105557, -7.51839651E8, '{o')))); -- 0ms;
SELECT DISTINCT TYPEOF((((rt1.c1))<=((rt0.c2)))) FROM t0;SELECT DISTINCT SUM(((x'')>>(rt1.c0))) FROM t0, rt1, rt0, vt0 WHERE ((((((((((NOT (-1046227344)))OR(x'' COLLATE RTRIM)))AND(((0.6219632927286209) NOTNULL))))AND(((0.36211523628468023) NOT BETWEEN ('㳣xgj') AND ('paL')))))OR((+ (x''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(NULL) OVER (), rt0.c2, rt0.c0 FROM rt1, rt0 WHERE (TYPEOF(DISTINCT CASE '0?S'  WHEN '-733919209' THEN NULL WHEN NULL THEN 1.630937406E9 WHEN '-1335970661' THEN 7.1579561E7 ELSE '-304707753' END)); -- 0ms;
SELECT ALL MAX(MAX(0x2b09c988)) FROM rt1, t0, rt0, vt0;SELECT ALL ((rt1.c2)>>(rt0.c0)) COLLATE BINARY COLLATE NOCASE, (((t0.c0 IN (rt1.c0))) IS TRUE), COUNT((((rt1.c1, vt0.c0, rt1.c2))!=((rt0.c1, rt1.c2, rt0.c1)))), TYPEOF(DISTINCT (rt1.c1 IN ())), SUM(rt1.c2) FROM t0, rt1, rt0 WHERE (CAST(x'' AS REAL) COLLATE BINARY);SELECT ALL -1.101446785E9 FROM rt1, vt0, rt0 GROUP BY (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))) COLLATE RTRIM HAVING CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE ORDER BY ((CASE t0.c0  WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c2 THEN '珦e8~h*WdD' WHEN rt0.c0 THEN rt0.c1 END)AND(rt1.c1)), ((((rt0.c0)IS NOT(rt0.c0))) ISNULL)  NULLS FIRST;SELECT (((((rt0.c2)>=(rt0.c2))))<=((((((rt1.c2)OR(rt1.c2)))OR(rt0.c1))))), ((((((((((vt0.c0)OR(NULL)))OR(rt1.c2)))AND(x'')))AND(vt0.c0))) IS TRUE), ((((((((((((((((t0.c0)OR(NULL)))OR(rt1.c1)))AND(rt0.c0)))OR(rt1.c2)))AND('1705087829')))AND(COUNT(rt0.c2))))AND(((rt0.c2) IS TRUE))))OR(((x'b91c59af')>>(0.8672988298276091)))) FROM t0 WHERE (((((NULL) IS FALSE)) ISNULL));SELECT DISTINCT ((((((rt0.c1)AND(rt1.c1)))OR(rt1.c1))) IS FALSE), ((((((((((rt1.c0)==(rt1.c0)))AND(((((((((rt0.c1)AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))))AND(x'')))AND(((rt0.c2)*('1440519466')))))AND(CAST(rt1.c2 AS NUMERIC))), ((x'') NOTNULL) FROM t0, vt0;SELECT ALL CAST(((rt1.c1)IS NOT(rt1.c0)) AS TEXT) FROM rt0;SELECT ALL RANK() OVER () FROM rt0, vt0, t0, rt1; -- 1ms;
SELECT DISTINCT ((((((rt1.c1)AND(rt0.c2)))AND(vt0.c0))) IS FALSE) FROM rt1, t0, rt0;SELECT UPPER(DISTINCT CAST(t0.c0 AS INTEGER)) FROM rt0, vt0, rt1, t0; -- 0ms;
SELECT ALL (((NOT ('Ms')))GLOB(rt0.c0)), rt1.c0, (rt0.c2 IN ()), ((rt0.c0) BETWEEN (LIKE(rt0.c1, rt0.c0, '*')) AND (((((vt0.c0)OR(rt0.c2)))OR(rt1.c2)))), ((((rt0.c2) IS TRUE))||(CAST(rt1.c0 AS INTEGER))) FROM rt0, t0 WHERE (-1.335970661E9) ORDER BY CAST((((NULL, rt1.c1, rt1.c2))>=((rt1.c1, rt1.c2, rt0.c2))) AS INTEGER)  NULLS LAST LIMIT 704148462;SELECT '1711274527' FROM rt0, rt1, vt0 WHERE ((NOT (0.8855384427685963 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0, rt1, vt0; -- 1ms;
SELECT DISTINCT ((((((((((((rt0.c2)AND(CAST(t0.c0 AS NUMERIC))))AND(((((x'f0cc1c47')AND(rt0.c1)))AND(rt1.c0)))))AND(((t0.c0)IS(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))))OR((NOT (vt0.c0)))))OR(((NULL) NOT BETWEEN (vt0.c0) AND (rt1.c1)))) FROM vt0, t0, rt0, rt1 ORDER BY ((LIKE(rt1.c1, rt0.c2, '0'))&(((vt0.c0)/(rt1.c0))))  NULLS LAST, CAST(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END AS BLOB) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ ((NOT (rt0.c2)))), NULL, HEX(CASE vt0.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c1 END) FROM t0, rt0, rt1, vt0 WHERE (CASE CASE '-2102512714'  WHEN 1090844021 THEN 'R+3U뚯ℾu%%' END  WHEN (NOT (0.9666614216331715)) THEN json_valid(x'31cb') WHEN ((('-2102512714', x'', x'')) BETWEEN ((x'', 0.382051726830721, 0X10a3ce3)) AND ((0.6171325053277502, 0.11828756791793293, x''))) THEN CAST(NULL AS TEXT) WHEN (('-1249939223')<<(0.14359274774852948)) THEN (((0.7853488287318714, '㞩쉆', NULL)) BETWEEN ((NULL, 0.24980095498529964, 0.40641140298732137)) AND ((x'', 1.705087829E9, '0.8916599292599872'))) END) ORDER BY (- (rt0.c1)) COLLATE NOCASE DESC  NULLS LAST, ((CAST(rt1.c0 AS TEXT)) IS FALSE)  NULLS FIRST, (~ (((rt0.c1) IS FALSE))) DESC; -- 0ms;
SELECT (- (MIN(rt0.c1))), CUME_DIST() OVER (), (((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)) IN ()) FROM rt0, rt1, t0 ORDER BY ((CASE vt0.c0  WHEN t0.c0 THEN rt1.c1 ELSE rt0.c0 END)IS NOT((NOT (rt1.c1)))) ASC  NULLS LAST;SELECT DISTINCT ((((vt0.c0)LIKE(NULL)))LIKE(((t0.c0)<=(rt1.c1)))) FROM t0, rt1 WHERE (CAST(('-890322982' IN ()) AS TEXT));SELECT AVG(CAST(rt0.c0 AS REAL)), (((rt1.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)<=(rt1.c0))))), DATE(CAST(rt1.c2 AS REAL), (((rt0.c2, vt0.c0, rt0.c0))<>((vt0.c0, rt0.c2, rt1.c2))), ((t0.c0)|(rt0.c1))) FROM rt0 WHERE ((~ (0.14923625427966392)) COLLATE NOCASE);SELECT DISTINCT (((((x'')OR(rt0.c0)), ((((t0.c0)AND(rt0.c1)))OR(rt1.c1)), ((rt1.c0) NOT NULL)))<=((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)), ((NULL)*(vt0.c0)), (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))))) FROM vt0;SELECT ALL (((rt0.c2)<<(vt0.c0)) IN ()) FROM vt0, t0, rt1, rt0 WHERE (CASE WHEN '' THEN '-1816535282' END COLLATE BINARY); -- 0ms;
SELECT DISTINCT (- (json_patch(NULL, rt0.c1))) FROM t0, rt1 INNER JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) IS TRUE) THEN ((((0Xffffffff9f4f4e77)OR(rt1.c1)))OR(rt0.c2)) END;SELECT DISTINCT ((((((vt0.c0) IS TRUE))OR(x'')))AND((vt0.c0 IN (rt1.c2, rt0.c0)))), MAX(NULL), NULL FROM vt0;SELECT DISTINCT MAX((((vt0.c0, t0.c0, rt1.c0)) NOT BETWEEN ((rt1.c1, rt0.c1, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2)))), (CASE WHEN t0.c0 THEN rt1.c1 END IN ('㳣xgJ', (t0.c0 IN ()), load_extension(vt0.c0))), (((rt1.c1 IN ())) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c2)))AND(NULL)))AND(NULL)))AND(rt0.c1)))OR(vt0.c0)))) FROM vt0, rt1, rt0;SELECT DISTINCT (NOT (vt0.c0 COLLATE NOCASE)), (((vt0.c0 IN ()))LIKE(((rt0.c2) NOTNULL))), (((((+ (rt0.c0)))OR(HEX(DISTINCT t0.c0))))AND(LIKELIHOOD(rt1.c2, 0.9698478493018381))) FROM rt0, t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(71579561 COLLATE NOCASE));SELECT DISTINCT ((((((rt0.c2)AND(rt0.c2)))AND((~ (rt0.c0)))))AND(ABS(rt1.c2))), ((rt1.c1) IS TRUE), x'101d' FROM vt0, t0, rt0;SELECT ((SUM(rt1.c2))LIKE(CASE WHEN rt0.c2 THEN 0.6683353733917742 END)) FROM rt0 WHERE (((LIKE('-1692690459', '9<o\nQ)9x'))-(json_quote(x''))));SELECT DISTINCT AVG((('774003739') IS TRUE)) OVER () FROM t0, rt1, vt0, rt0 WHERE (((('' COLLATE NOCASE, (NULL IN (NULL)), CASE WHEN x'' THEN x'3c6b' ELSE 0.4916572330592799 END))<=((((1176245639)>=(835371590)), x'' COLLATE NOCASE, (NOT (NULL)))))); -- 1ms;
SELECT ALL (+ (CASE WHEN rt0.c2 THEN rt0.c0 END)) FROM t0, vt0 GROUP BY t0.c0;SELECT DISTINCT ((((0xffffffffe297ffd4)=(rt0.c1)))<(((((t0.c0)AND('-493355052')))AND(rt1.c2)))) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT ALL MIN(CASE rt1.c2  WHEN '' THEN rt0.c1 ELSE rt1.c1 END), ((((CASE WHEN NULL THEN rt0.c1 END)AND(t0.c0)))AND(NULL)), rt0.c1 FROM rt1, rt0 WHERE (ABS(DISTINCT ((0.699845267719778)>=(NULL))));SELECT CASE rt1.c1  WHEN ((rt1.c0) IS TRUE) THEN '0.02857195940021784' END, rt1.c0, ((CAST(rt1.c0 AS INTEGER))&(((rt0.c2)|('%J')))) FROM t0 WHERE ((- (('-233059730' IN (x'4339'))))) GROUP BY SQLITE_COMPILEOPTION_GET(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) HAVING CAST('' AS NUMERIC) LIMIT -1714755512 OFFSET -41321165;SELECT DISTINCT ((((x'748a')AND(x'')))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c1)))), (((rt1.c0 IN (vt0.c0, vt0.c0))) BETWEEN (t0.c0) AND ((rt0.c1 IN ()))), ((((rt0.c1) IS TRUE))OR((+ (rt0.c0)))) FROM rt0, rt1, vt0, t0 GROUP BY UPPER(((rt1.c1)==(t0.c0))); -- 0ms;
SELECT DISTINCT rt0.c2, NTILE(((NOT (rt0.c2)) IN ())) OVER (), ((vt0.c0)||(-1056425773)) FROM rt0, rt1, t0, vt0 LIMIT -268681614 OFFSET 540126428; -- 0ms;
SELECT ALL (rt1.c1 COLLATE RTRIM IN (CAST('-493355052' AS BLOB), rt0.c1)), CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c2 END WHEN ((rt0.c0)<=(rt0.c1)) THEN AVG(vt0.c0) WHEN MAX(rt0.c1) THEN ((NULL)+(vt0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END, CAST(((t0.c0) BETWEEN (rt1.c2) AND (rt0.c1)) AS NUMERIC) FROM vt0, rt1 NOT INDEXED;SELECT ALL 0X44437a9 COLLATE BINARY, FIRST_VALUE(x'26d7') OVER (), (~ (CAST(rt0.c1 AS NUMERIC))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT MIN(((rt1.c2) NOT NULL)) COLLATE RTRIM FROM rt1, vt0, t0, rt0; -- 0ms;
SELECT ALL ((((vt0.c0)!=(0xffffffffa9795182))) NOT BETWEEN (((vt0.c0)>(0.8148542601249187))) AND (-1.056425773E9)) FROM rt0, t0 WHERE (CAST(HEX(0.7580004281231394) AS REAL));SELECT COALESCE(DISTINCT LOWER(DISTINCT rt1.c1), ((((((((rt1.c2)OR(t0.c0)))AND(rt1.c2)))AND(NULL)))AND(rt0.c0))), CAST(((vt0.c0) NOTNULL) AS BLOB), ((- (t0.c0)) IN ()) FROM t0, rt0, vt0 WHERE ((((((('-2124246607')OR(0.5313508997692528)))OR(x'')))OR(((('-1556240647')) BETWEEN (('')) AND ((NULL))))));SELECT DISTINCT ((json_object(rt0.c2, rt0.c1))<<(((x'da92')>=(rt1.c2)))), CAST(rt1.c1 AS NUMERIC) COLLATE RTRIM, ((t0.c0) NOT NULL) FROM vt0, t0;SELECT DISTINCT CAST(((t0.c0)>(vt0.c0)) AS NUMERIC) FROM vt0;SELECT DISTINCT CASE CASE WHEN rt0.c0 THEN 0.7622533128609723 END  WHEN ((((rt0.c0)AND(rt0.c0)))OR(0.992022928500437)) THEN (rt1.c0 IN (rt0.c2)) ELSE TRIM(rt0.c2) END FROM rt1, vt0;SELECT DISTINCT (CAST(rt0.c2 AS REAL) IN ()) FROM t0, vt0, rt1, rt0 WHERE ((((((-1.816535282E9)) BETWEEN ((-4.1321165E7)) AND (('-1335970661')))) IS TRUE)); -- 0ms;
SELECT ALL GROUP_CONCAT(rt0.c2) FROM rt0 WHERE (((LIKELY(0.07638409450178829))OR((((('a,A7M1')OR(x'')))AND(x'a11e'))))); -- 0ms;
SELECT ALL CAST(rt0.c0 COLLATE RTRIM AS NUMERIC) FROM rt0, vt0 WHERE (CAST(CAST(NULL AS REAL) AS REAL)); -- 0ms;
SELECT DENSE_RANK() OVER (), rt1.c1, PERCENT_RANK() OVER () FROM vt0;SELECT DISTINCT TOTAL(((rt0.c2)<(NULL))), (+ ((('9<o\nQ)9x')<(rt0.c0)))), (rt1.c0 COLLATE RTRIM IN ()) FROM rt1, t0;SELECT DISTINCT ((((rt0.c1)OR(rt1.c0)))AND(rt0.c2)) COLLATE NOCASE, CAST((- (rt0.c2)) AS REAL), CAST(CASE rt0.c1  WHEN NULL THEN rt1.c2 ELSE rt1.c1 END AS BLOB), UNLIKELY(DISTINCT ((rt1.c2) ISNULL)), CASE (t0.c0 IN (0.06907062545613563))  WHEN CASE x''  WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 ELSE t0.c0 END THEN (- (rt1.c2)) ELSE CASE WHEN rt0.c2 THEN t0.c0 END END FROM vt0 WHERE ((~ (0.9666614216331715 COLLATE NOCASE)));SELECT DISTINCT ((((STRFTIME(rt0.c1, rt1.c0, rt1.c1, rt1.c0, rt0.c2))AND(CAST(rt0.c2 AS BLOB))))AND(((rt1.c0) IS FALSE))) FROM rt1 WHERE ((('r+3u뚯ℾu%%')*(0.6336834239981877)) COLLATE NOCASE) GROUP BY (rt1.c2 IN (rt1.c2)) COLLATE NOCASE HAVING ((((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c0 END)AND(CASE t0.c0  WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c1 END)))AND(((((((((((((rt0.c2)AND('-1696635290')))OR(rt1.c1)))OR(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))AND(rt0.c2)))) ORDER BY (((NULL) NOT NULL) IN (rt0.c1, ((rt0.c0)<<(-1032123566)))) ASC  NULLS LAST;SELECT DISTINCT CAST(t0.c0 COLLATE NOCASE AS TEXT) FROM vt0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((rt1.c1) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (0X4b89d010)), (((((((((rt1.c0 IN (rt1.c0)))OR(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)))))OR(((t0.c0)GLOB(vt0.c0)))))AND(rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt1.c0 ELSE vt0.c0 END)), ((((((((((0.6683353733917742)<(rt1.c1)))OR(rt1.c1 COLLATE RTRIM)))OR(CASE rt0.c1  WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c0 END)))OR((rt1.c2 IN (rt0.c0)))))OR(SUM(rt1.c1))) FROM rt0, t0, rt1;SELECT ((vt0.c0 COLLATE BINARY) BETWEEN (((rt1.c1) ISNULL)) AND ((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))), SUM((((rt0.c0))==((vt0.c0)))), (((rt0.c2)) BETWEEN ((((t0.c0)AND(rt1.c2)))) AND ((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2))))) FROM vt0 WHERE ((((- (0.5051444168280304))) NOT BETWEEN ((((-1.056425773E9))=((556626479)))) AND ((('rMt*b/E1_')GLOB(0.9719672507341645))))) LIMIT 639725311;SELECT DISTINCT ((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c0 END)&((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((0.2449990226038592))))), ((((((vt0.c0)<(rt0.c2)))OR(((rt1.c0) NOT NULL))))OR((vt0.c0 IN ()))), ((((rt1.c2)<<(rt1.c2))) NOT NULL) FROM vt0 WHERE (((((x'')<<(NULL))) NOT BETWEEN (((NULL)OR(NULL))) AND (((((((((1413771448)AND(x'')))AND('')))AND('-1046227344')))OR('1090844021'))))) ORDER BY ((((((((((vt0.c0)<=(rt0.c0)))AND(TRIM(rt1.c1))))OR(t0.c0)))OR(vt0.c0)))OR((rt1.c2 IN ()))) DESC  NULLS LAST, NULL DESC  NULLS LAST;SELECT DISTINCT (- ((NOT (t0.c0)))) FROM rt0, rt1 ORDER BY CAST(CAST(rt0.c2 AS NUMERIC) AS BLOB) ASC  NULLS FIRST;SELECT DISTINCT (CAST(NULL AS INTEGER) IN ()) FROM rt0, t0, rt1 WHERE (IFNULL(CASE WHEN '-1671872335' THEN -1e500 ELSE NULL END, ((((((((NULL)AND('761 1009 H趾\n')))AND(NULL)))OR('')))AND(x'')))); -- 0ms;
SELECT DISTINCT ((json_patch(rt0.c2, rt0.c1)) NOT BETWEEN (((((t0.c0)AND(0.9627187240874772)))OR(rt1.c2))) AND ((rt0.c0 IN ()))) FROM vt0, rt1;SELECT DISTINCT (((((rt1.c2, rt0.c1, rt1.c0))<>((rt1.c2, rt1.c1, rt1.c1))))|((~ (rt0.c1)))), ((((((((((((rt0.c2)AND(rt0.c0)))AND(t0.c0)))AND(0X29541c5e)))OR(vt0.c0)))OR(rt1.c2)))AND(rt0.c2)) COLLATE RTRIM, rt0.c1 FROM vt0;SELECT DISTINCT NULL, TOTAL((+ (t0.c0))), (rt1.c1 COLLATE RTRIM IN ()) FROM vt0, rt0, t0, rt1 WHERE (0.5535118442431549) ORDER BY (+ ((NOT (rt1.c1)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) IN (CAST(t0.c0 AS REAL))), CASE WHEN CAST(rt0.c2 AS INTEGER) THEN CAST(vt0.c0 AS BLOB) ELSE ((rt1.c2) ISNULL) END, GROUP_CONCAT(x'ca77c198') OVER () FROM vt0 WHERE (LIKELIHOOD(((NULL) NOT BETWEEN (NULL) AND ('-1293751317')), 0.030629241634057003));SELECT DISTINCT (((((NOT (rt0.c0)))AND(IFNULL(rt0.c1, rt1.c1))))OR((- (NULL)))) FROM rt0, vt0, rt1 WHERE (CASE (0.23904479265085665 IN ())  WHEN ((NULL)<('-1714755512')) THEN (((x'', '*G', ''))<(('-2102512714', '17448163', 'R	qm1cT5s'))) END); -- 0ms;
SELECT DISTINCT (CAST(rt0.c0 AS INTEGER) IN ()) FROM rt1, vt0, t0 WHERE ((~ ((('a,a7m1')<=(0.626412114285775))))); -- 0ms;
SELECT ALL COUNT(*) OVER ( GROUPS CAST((rt0.c0 IN ()) AS TEXT) PRECEDING), ((CAST(t0.c0 AS NUMERIC))<>((rt0.c2 IN ()))), CASE ((-2003624804)*(vt0.c0))  WHEN 243240357 THEN rt0.c0 ELSE ((t0.c0) NOTNULL) END FROM vt0 WHERE ((((((NULL, NULL, ''))>=(('2F', 'Bd*+ᣳQ\8g', 0.7041006572359033)))) IS TRUE));SELECT ALL ((0.9627187240874772 COLLATE NOCASE) NOT BETWEEN (COUNT(t0.c0)) AND ((~ (0.48991511850808944)))), PERCENT_RANK() OVER (), ((((COUNT(*))AND(((rt1.c1)|(rt0.c0)))))AND('71579561')) FROM t0, rt0, rt1, vt0; -- 0ms;
SELECT (+ (x'')) FROM rt1, t0; -- 0ms;
SELECT ALL rtreenode('', ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))AND(t0.c0)))AND(t0.c0))) FROM t0, vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c2 AS BLOB)) OVER () FROM rt0, t0, rt1, vt0 WHERE (CAST(((0.23945600055956107) BETWEEN ('-2003624804') AND (NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT SUM((rt0.c1 IN ())) FROM t0, vt0, rt1, rt0; -- 0ms;
SELECT ((~ (vt0.c0)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE NOCASE IN ()) FROM rt0 WHERE (((LIKELY(''))GLOB((NOT (NULL))))); -- 0ms;
SELECT ALL '' FROM t0; -- 0ms;
SELECT DISTINCT ((((rt1.c1)=(''))) ISNULL) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((rt1.c0) NOTNULL)) FROM rt0, vt0 GROUP BY (NOT (((((rt1.c1)AND('')))OR(rt1.c0)))) HAVING CAST(rt1.c2 AS REAL);SELECT DISTINCT ((((rt1.c1) NOT NULL))%(CASE WHEN t0.c0 THEN 0.5687173500731241 END)) FROM t0;SELECT DISTINCT (~ (((((0.4196146863161029)OR(0.8310446939123017)))AND(rt0.c0)))) FROM rt0, t0 LEFT OUTER JOIN vt0 ON x'' LEFT OUTER JOIN rt1 ON ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)&(NULLIF('䂱t7z', t0.c0))); -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (vt0.c0) AND ('-233059730'))) NOT NULL) FROM rt1, t0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0)|('1489508307'))))  NULLS LAST;SELECT (('1484970362' IN ()) IN (((rt0.c1)<(rt1.c0)))), (- (rt1.c1)), MAX(0.36211523628468023, ((((rt0.c0)OR(NULL)))AND(vt0.c0)), ABS(DISTINCT vt0.c0), LIKELIHOOD(DISTINCT t0.c0, 0.9288544595258322)) FROM rt0, t0, rt1 LIMIT 1526265454;SELECT DISTINCT ((((((NULL)AND(rt1.c2)))AND(rt1.c0))) IS FALSE) FROM rt1, rt0, t0 ORDER BY ((((rt1.c0))>((vt0.c0))) IN ()) DESC; -- 0ms;
SELECT ALL TOTAL((('') IS TRUE)) FROM rt0, t0 WHERE ((((((((('905413592')AND(((((30277359)AND('270914137')))AND(x'')))))AND((+ ('>')))))AND(CASE 2.70914137E8  WHEN -4.1321165E7 THEN x'' END)))AND((~ (0xffffffffde40452a))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM rt1, t0, rt0;SELECT DISTINCT (- (((vt0.c0) NOT NULL))) FROM vt0, rt1; -- 0ms;
SELECT NTILE(((TYPEOF(rt1.c0))<>((rt1.c2 IN ())))) OVER (), ((((((((((((rt0.c2)OR(rt1.c2)))AND(rt0.c1)))AND(vt0.c0 COLLATE BINARY)))OR(LIKE(t0.c0, rt0.c0, '8'))))AND(((rt0.c1) BETWEEN (rt1.c1) AND (x'')))))AND((rt0.c2 IN ()))), (UPPER(DISTINCT 0.4396898721500534) IN ()) FROM t0, rt1; -- 0ms;
SELECT ALL ((((rt0.c0) ISNULL))!=(CAST(rt0.c2 AS BLOB))), COUNT(CASE WHEN t0.c0 THEN rt1.c1 END) OVER (), ((json_array_length(rt1.c1, x''))AND(CAST(rt0.c2 AS TEXT))) FROM rt0, t0, vt0, rt1 WHERE (((((-1.056425773E9)AND('-1335970661')))-((((1.440519466E9))<>((0xffffffffef32507a)))))) GROUP BY CASE (NOT (rt1.c0))  WHEN ((rt0.c1) NOTNULL) THEN ((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))OR(vt0.c0)))AND(rt1.c0)) WHEN (x'' IN ()) THEN (NOT (0.06907062545613563)) WHEN (((rt0.c0, rt0.c0, rt0.c0))==((rt0.c2, rt1.c0, rt1.c1))) THEN 'U퀐' END; -- 0ms;
SELECT DISTINCT CASE ((((0Xffffffff9dc8611b)OR(rt1.c2)))OR(rt1.c2))  WHEN (- (t0.c0)) THEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)) END, TRIM(DISTINCT ((rt0.c2)%(rt0.c2)), json_array_length(rt0.c2)), (- (((vt0.c0)%(rt0.c0)))) FROM vt0, rt1, rt0 WHERE (IFNULL(COALESCE(0.7182123004488514, x'', x'3f77', '211626418'), (~ (NULL))));SELECT DISTINCT ((((CASE t0.c0  WHEN rt1.c1 THEN -1.334933698E9 ELSE rt1.c0 END)OR(((rt1.c0)AND('覜F?bz#ￔB')))))AND(-493355052)), (- (((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt1.c1)))AND(rt1.c1)))), ((((((((rt1.c2)AND(CHANGES())))AND(HEX(rt0.c2))))AND((((rt1.c0)) NOT BETWEEN (('-1647812325')) AND ((rt1.c1))))))AND(((rt1.c0) BETWEEN (rt0.c1) AND ('0.7622533128609723')))) FROM t0, rt0, rt1 WHERE (((ABS(0.1535755095028254)) NOT BETWEEN (NULL COLLATE NOCASE) AND (((NULL) BETWEEN (0.992022928500437) AND (x'7bf1'))))) GROUP BY (((((t0.c0)AND(t0.c0)))AND(rt1.c2)) IN ()), ((-662172695)==(CAST(rt0.c2 AS INTEGER))), ((rt0.c0) BETWEEN (((rt0.c2)|(t0.c0))) AND (rt1.c2)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN x'' WHEN x'' THEN rt1.c0 ELSE vt0.c0 END)=(MAX(rt1.c1))) FROM t0, vt0, rt1;SELECT ALL MAX((((rt1.c1)) BETWEEN ((x'')) AND ((rt0.c2)))) FROM vt0 WHERE (CAST((- (755236357)) AS BLOB)) GROUP BY (('/z')AND((((rt0.c0))<((rt0.c1)))));SELECT DISTINCT (((~ ('722061704'))) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND ((((rt0.c2))>=((rt0.c1))))) FROM vt0 NOT INDEXED, rt1, rt0, t0 WHERE (CAST(((835371590) IS TRUE) AS BLOB)); -- 1ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN (CASE WHEN rt1.c1 THEN rt0.c2 END, (rt0.c0 IN ()))), CAST(CAST(rt1.c2 AS BLOB) AS TEXT), TOTAL(MIN(rt0.c0)) FROM t0, rt1 CROSS JOIN rt0 ON CAST(CASE rt1.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END AS INTEGER) RIGHT OUTER JOIN vt0 ON (((json_extract(rt0.c0, rt0.c2, -5.66213334E8, rt0.c2)))<((ABS(rt1.c2)))) WHERE (0.4789108810683822);SELECT ALL ((rt0.c1 COLLATE RTRIM) IS FALSE) FROM rt1, t0, vt0 WHERE (CAST(('DB,R%r.+' IN ()) AS NUMERIC));SELECT DISTINCT GROUP_CONCAT(((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2))), COUNT(*) OVER (), ((((((((HEX(rt1.c1))OR(t0.c0)))AND(vt0.c0 COLLATE BINARY)))OR(vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))) FROM t0 WHERE (CAST(x'' AS REAL) COLLATE NOCASE);SELECT CASE (rt1.c2 IN (rt0.c2, vt0.c0))  WHEN rt0.c2 THEN ((rt0.c1) NOTNULL) WHEN t0.c0 COLLATE BINARY THEN ((647713589)+(rt1.c0)) WHEN ((t0.c0) NOTNULL) THEN (((rt1.c0, rt1.c1, rt0.c1)) NOT BETWEEN ((rt1.c1, rt0.c1, t0.c0)) AND ((x'dc38', rt1.c2, t0.c0))) END, (x'' IN ()), CASE WHEN (rt0.c2 IN (rt0.c2)) THEN MIN(rt0.c2) WHEN x'' THEN ((rt1.c2) ISNULL) WHEN rt1.c2 COLLATE BINARY THEN ((((((((((((rt1.c2)OR(t0.c0)))OR(t0.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(t0.c0)))OR(rt1.c0)) ELSE rt1.c0 END FROM rt0 WHERE ((NOT ((x'' IN ()))));SELECT CAST(ROUND(t0.c0, rt1.c1) AS BLOB) FROM rt1 WHERE (((((CASE WHEN '905413592' THEN 0.6006314250898258 WHEN 0.2712977506445813 THEN 'MR' WHEN x'5ec5' THEN NULL END)OR((('') NOT BETWEEN (NULL) AND (0x2b64b690)))))AND(0.774176058090937)));SELECT LTRIM(COUNT(rt1.c0)), -8.90322982E8, (((((t0.c0 IN ()))AND((NOT (rt0.c2)))))AND(((t0.c0)GLOB(x'')))) FROM rt0;SELECT ALL CASE (+ (rt0.c1))  WHEN ((vt0.c0) NOT NULL) THEN CAST(rt0.c0 AS NUMERIC) END FROM rt0, t0, rt1, vt0; -- 0ms;
SELECT CASE (vt0.c0 IN ())  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END FROM rt1, t0, rt0, vt0 WHERE (CASE (-2020846316 IN ())  WHEN CASE WHEN '1286015903' THEN 1.098287516E9 END THEN (~ (0.9477592978202319)) ELSE CAST('' AS INTEGER) END); -- 0ms;
SELECT DISTINCT ((((MIN(vt0.c0))AND((((t0.c0, rt1.c2, t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c1, 0.7698394723063294)) AND ((rt0.c2, rt1.c0, rt0.c2))))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0)))) FROM rt0;SELECT ALL ((((((rt0.c1)OR(rt1.c1)))AND(rt0.c0)))LIKE(vt0.c0 COLLATE BINARY)) FROM vt0, rt0, rt1, t0 WHERE (CAST(((((0.06907062545613563)OR(0.5019006707448466)))AND(0.7065044998897071)) AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(((228087546)<=(rt0.c2))), rt0.c1, LIKELIHOOD(DISTINCT TRIM(rt1.c1), 0.48609119486209285), SUM(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) OVER (), ((((((rt1.c1)/(0.12048219653259373)))AND(CAST(rt1.c2 AS NUMERIC))))AND(((x'4b6dced6') BETWEEN (2.28087546E8) AND (rt1.c1)))) FROM t0, rt1 LIMIT 1090844021 OFFSET 790525135;SELECT DISTINCT ((CAST(0.7622533128609723 AS BLOB)) ISNULL) FROM t0, rt1, rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY CASE rt1.c1 COLLATE RTRIM  WHEN (((rt1.c1, rt0.c1, x'')) BETWEEN ((rt0.c2, rt1.c2, rt1.c1)) AND ((rt0.c2, rt1.c0, x'23a0'))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c1)) END; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN '-1300921605' THEN rt1.c2 END)/(vt0.c0 COLLATE BINARY)) FROM rt0;SELECT DISTINCT ROW_NUMBER() OVER () FROM t0, rt1, vt0, rt0 ORDER BY CASE WHEN (((0.7117754764525309))=((rt0.c1))) THEN (rt1.c2 IN ()) WHEN ((rt1.c0)>(t0.c0)) THEN HEX(DISTINCT x'04cc') WHEN ((rt1.c0)+(rt0.c2)) THEN x'' ELSE TRIM(DISTINCT rt0.c0) END DESC  NULLS FIRST, ((((vt0.c0)*(rt1.c2)))-(CAST(rt1.c1 AS NUMERIC))); -- 0ms;
SELECT DISTINCT COUNT(*), (((((vt0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0))))>=(('#+AAAS'))), AVG(CAST(vt0.c0 AS BLOB)) OVER () FROM t0, rt0, rt1, vt0; -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((NULLIF(DISTINCT rt1.c2, rt1.c1))) AND (((NOT (rt1.c1))))) FROM vt0, rt0, t0, rt1 WHERE (json_valid(TYPEOF(1.7976931348623157E308))); -- 0ms;
SELECT CAST(((vt0.c0)||(rt1.c1)) AS BLOB), FIRST_VALUE(((rt0.c0 IN ()) IN (((((vt0.c0)AND(vt0.c0)))AND(x''))))) OVER ( ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND((+ (rt1.c0)))))AND(CASE WHEN rt1.c2 THEN t0.c0 ELSE NULL END)) DESC  NULLS LAST GROUPS  UNBOUNDED PRECEDING), (((rt0.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((0xfffffffffcfcbb25, ((vt0.c0)GLOB(vt0.c0)), ((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))) AND ((CAST(0.7851455192128174 AS REAL), rt1.c0, (rt0.c2 IN ())))) FROM t0, vt0, rt0 WHERE (((((((((1274417473)AND(x'')))AND(x'6cff')))OR('Ut')))OR(0.23294307612435883)) COLLATE RTRIM);SELECT DISTINCT CASE CAST(rt1.c0 AS BLOB)  WHEN rt1.c1 THEN CAST(rt0.c1 AS INTEGER) ELSE ((rt1.c0)<<(rt0.c2)) END FROM rt1 WHERE ((((((- (x'44b9')))AND((('4'',nt. ')LIKE(0X65a19355)))))AND(((x'a4d9')>>(0.6831934572707903)))));SELECT NTH_VALUE(((0.21834512499195546)|((t0.c0 IN ()))), CAST(0.7542410561447984 AS TEXT)) OVER (), ((((((rt1.c2) IS FALSE))AND((NOT (t0.c0)))))AND(((t0.c0)GLOB(rt0.c2)))), CAST(rt1.c2 COLLATE BINARY AS REAL) FROM rt1, t0, vt0, rt0; -- 0ms;
SELECT ((TIME(vt0.c0, t0.c0, rt1.c2, rt1.c0, NULL))OR((((rt0.c0, rt0.c2, 0.3233106171053375))<((t0.c0, rt0.c2, rt0.c0))))) FROM t0, vt0, rt1 WHERE ((((+ (NULL))) NOT NULL));SELECT (('eT' COLLATE RTRIM) ISNULL) FROM vt0 WHERE (('.' COLLATE NOCASE IN ())); -- 0ms;
SELECT CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)) AS REAL) FROM rt1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT 0X14c58249, NTILE(rt0.c0) OVER ( PARTITION BY (((('W') NOT BETWEEN (rt1.c2) AND (rt1.c1)))<<(CASE rt1.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c2 ELSE vt0.c0 END)), (+ (json_insert(rt1.c2, rt0.c0, vt0.c0)))), ((COUNT(t0.c0))>=((NOT (x'6325b9d0')))) FROM vt0, rt0 ORDER BY ((((CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 END)AND(((rt0.c0) BETWEEN (-1.69663529E9) AND (0.7065044998897071)))))AND((~ (rt1.c2)))) ASC, ((CAST(vt0.c0 AS INTEGER)) ISNULL)  NULLS LAST;SELECT ((((SUBSTR(rt0.c2, rt0.c1))AND(((rt1.c1)IS(vt0.c0)))))OR(MAX(rt1.c0))) FROM rt1, rt0 WHERE ((((('C|6Q')|(x'94801aa3')))&('-751839651' COLLATE NOCASE))) ORDER BY ((x'')>>((((rt1.c0, rt0.c0, t0.c0)) BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND ((rt1.c1, rt1.c0, rt0.c1))))) ASC;SELECT DISTINCT ((((((t0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))OR(UNLIKELY(DISTINCT vt0.c0))))AND(0.3170033516007481)) FROM rt1, rt0, vt0, t0 WHERE ((((0.6831934572707903)) NOT BETWEEN ((((0Xfffffffffcfcbb25)LIKE(NULL)))) AND (((0.10368947762717506 IN ()))))) ORDER BY ((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((- (rt1.c1))) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((+ (vt0.c0)) IN ()) FROM vt0, rt0, rt1, t0 WHERE (0xffffffffb5974591); -- 0ms;
SELECT DISTINCT '' FROM rt1; -- 0ms;
SELECT LAST_VALUE((+ ((+ (vt0.c0))))) OVER () FROM vt0, rt1, t0; -- 1ms;
SELECT DISTINCT (((~ (rt1.c2)))LIKE(((rt0.c0)OR(0x7b32a586)))), CASE rt1.c1  WHEN rt0.c0 THEN rt1.c0 END COLLATE RTRIM, (+ (vt0.c0)) FROM vt0, rt1, t0 WHERE (((((json_array_length(x'', 0.027177455888611313))OR((((0.7117754764525309))>=((x''))))))AND(x'' COLLATE BINARY)));SELECT DISTINCT ((vt0.c0)>(LTRIM(rt1.c0))) FROM t0, rt1, vt0 WHERE ((((('') BETWEEN (NULL) AND (NULL)))GLOB(((((NULL)OR('1649943791')))OR(0.4396898721500534))))) LIMIT -241077274 OFFSET -1707087423; -- 3ms;
SELECT DISTINCT 7.55236357E8 FROM rt0, t0, rt1; -- 0ms;
SELECT ALL (((rt0.c1 COLLATE RTRIM))>=((vt0.c0))) FROM vt0;SELECT TYPEOF(rt0.c1 COLLATE NOCASE) FROM vt0, t0, rt1, rt0; -- 1ms;
SELECT ALL SUM(((((rt0.c1)OR(rt1.c0)))OR(x''))) OVER () FROM rt0, t0 WHERE ('.7');SELECT ALL COUNT(MAX(rt0.c0, x'', rt1.c2, rt0.c2)) FROM t0 WHERE (((('')) BETWEEN (((('KNQ*')-(0xfffffffffcfcbb25)))) AND (('-9223372036854775808' COLLATE NOCASE))));SELECT ((CASE '-1707087423'  WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END) ISNULL) FROM rt0 WHERE ((((((('FALSE')OR(NULL)))AND('phS'))) IS TRUE));SELECT DISTINCT CAST(x'' AS INTEGER) FROM rt0 ORDER BY ((rt1.c0 COLLATE BINARY)&(((((rt0.c0)OR(rt1.c0)))OR(t0.c0)))), (((vt0.c0)>>(vt0.c0)) IN ()) ASC, ((UNLIKELY(DISTINCT rt0.c2))GLOB(JULIANDAY(0X35f783d8, '1630937406', NULL)));SELECT TRIM((NOT (vt0.c0)), ((rt0.c1) NOTNULL)) FROM vt0 GROUP BY '790525135' HAVING ((t0.c0) IS FALSE);SELECT SUM(0X3db026c1) FILTER(WHERE CASE rt0.c0 COLLATE NOCASE  WHEN (((vt0.c0))<>((rt0.c0))) THEN (~ (rt0.c1)) END) OVER ( ORDER BY (- (CAST(rt1.c1 AS BLOB)))  NULLS LAST) FROM rt1, rt0, t0;SELECT ALL CASE WHEN CASE WHEN '-566213334' THEN rt0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN x'301b' THEN rt1.c2 ELSE rt1.c1 END THEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 END END, NULL, ((((rt0.c2)+(rt1.c2)))!=(CAST(rt1.c1 AS BLOB))) FROM t0, rt0, vt0, rt1 NOT INDEXED; -- 1ms;
SELECT ALL ((((((((CASE WHEN vt0.c0 THEN rt1.c0 END)AND(((((x'')AND(rt0.c1)))AND(rt1.c1)))))OR(((vt0.c0)||(rt1.c2)))))AND(rt1.c0)))OR(TYPEOF(DISTINCT vt0.c0))) FROM rt0, t0, vt0 WHERE (((IFNULL(DISTINCT 0.6205038508743602, 0.30130485710421795))*((NULL IN ())))) ORDER BY HEX((((rt1.c1, rt0.c1, rt1.c1, rt0.c1, NULL))<((t0.c0, t0.c0, rt1.c1, rt1.c2, rt0.c0)))) DESC  NULLS LAST LIMIT 1489508307;SELECT DISTINCT ROW_NUMBER() OVER () FROM t0; -- 0ms;
SELECT ALL COUNT((- (rt1.c2))) FROM rt0, vt0, t0, rt1; -- 0ms;
SELECT DISTINCT ((((((((0.1084301733776214)AND(CAST('' AS TEXT))))AND(rt0.c1 COLLATE NOCASE)))AND(MAX(rt1.c0))))OR(NULL)) FROM rt1, rt0, t0, vt0 WHERE ((~ (CAST(0.9664889637946945 AS BLOB)))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0, vt0, t0;SELECT DISTINCT ((x'e699')>(((((rt1.c0)AND(vt0.c0)))OR(rt1.c1)))) FROM rt1, t0, rt0, vt0; -- 0ms;
SELECT DISTINCT CAST((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))) AS INTEGER), (((((t0.c0))>((rt1.c0))))%((~ (rt1.c1)))), CASE WHEN (((rt0.c1))<>((rt0.c1))) THEN ((((rt1.c1)AND('2066916742')))AND(vt0.c0)) WHEN ((t0.c0) BETWEEN (rt0.c1) AND (NULL)) THEN ((rt0.c2)<<(rt0.c1)) WHEN rt1.c2 COLLATE RTRIM THEN (~ ('m')) ELSE ((((rt1.c2)OR(rt0.c1)))AND(rt1.c0)) END FROM t0 WHERE ((NULL IN (((((x'')OR('540126428')))AND('113190327')), ((0.10368947762717506)>>(0X2d03fe05)))));SELECT DISTINCT (((- (rt0.c2))) NOTNULL), LOWER(DISTINCT rt0.c0) COLLATE RTRIM, ((('556626479', 0.5613350061037568, 0.3011248760036189, rt1.c0, t0.c0)) NOT BETWEEN ((rt0.c2, rt1.c0, vt0.c0, t0.c0, rt0.c2)) AND ((vt0.c0, rt1.c0, rt1.c1, rt0.c2, rt0.c0))) COLLATE BINARY FROM vt0 WHERE (CASE ((x'b2716272b2af') NOT BETWEEN (NULL) AND (-1383501006))  WHEN CAST(0.8124506344897886 AS INTEGER) THEN ('w2u_{MX' IN ()) ELSE (- ('-838993843')) END) ORDER BY (((((rt1.c0)OR(rt0.c0)))AND(rt1.c2)) IN (((rt1.c2)/(t0.c0)))) ASC  NULLS FIRST;SELECT ALL COUNT(CASE rt1.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END COLLATE RTRIM) OVER (), AVG((((rt1.c2, 0.6219632927286209, rt0.c2)) BETWEEN ((rt0.c1, -9223372036854775808, t0.c0)) AND ((rt1.c2, rt1.c1, rt0.c0)))), 0.7346751720618259, (((~ (t0.c0))) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c0)))) AND (CASE NULL  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)), ((((rt0.c0 COLLATE RTRIM)AND((NOT (vt0.c0)))))AND(CAST(t0.c0 AS NUMERIC))) FROM rt0, vt0, rt1 WHERE (((((((((((((x'')AND('* S')))OR('(F홝/')))AND(NULL)))AND(NULL)))OR(((((x'')OR(x'')))OR('yx')))))AND('偺 GV-' COLLATE RTRIM)));SELECT DISTINCT CAST((rt0.c2 IN ()) AS NUMERIC) FROM t0, vt0 NOT INDEXED, rt0, rt1 ORDER BY (((rt1.c1)==(x'7b3d')) IN ()) DESC; -- 1ms;
SELECT DISTINCT MIN(CAST(rt0.c1 AS REAL)) FROM rt1, t0 INNER JOIN vt0 ON ((((rt1.c1) IS TRUE)) NOT BETWEEN (CASE WHEN rt0.c2 THEN t0.c0 END) AND (rt0.c1 COLLATE BINARY)) INNER JOIN rt0 ON (rt0.c0 IN (rt0.c1, (+ (rt1.c2)), (((rt1.c1))>((rt1.c2))))); -- 0ms;
SELECT DISTINCT (((((835371590, rt1.c2, vt0.c0)) BETWEEN ((rt1.c2, rt1.c0, rt1.c0)) AND (('-181894692', rt1.c1, vt0.c0)))) NOT BETWEEN (((((rt0.c2)AND(t0.c0)))AND(vt0.c0))) AND (rt0.c0 COLLATE RTRIM)) FROM rt1;SELECT DISTINCT ((0Xe7f8da5) IS FALSE) FROM t0, vt0, rt1 GROUP BY (rt0.c2 COLLATE NOCASE IN (CASE WHEN NULL THEN rt0.c2 ELSE NULL END)), ((((rt1.c0)!=(rt0.c2)))IS(-1850558284)), CAST(((((vt0.c0)OR(t0.c0)))OR(rt0.c1)) AS TEXT);SELECT DISTINCT (((((NOT (rt0.c0)))OR(0.5798660497501933)))OR((NOT (rt0.c2)))), (NOT (rt1.c0)), (((((0xffffffffb57f70e9, rt0.c2, 'g.훁&'))>((rt1.c2, t0.c0, rt1.c2)))) NOTNULL), CASE WHEN ((t0.c0)>=(t0.c0)) THEN ((((((((rt0.c0)OR(x'e657559e')))OR(rt0.c1)))AND(t0.c0)))OR(rt0.c2)) ELSE CAST(rt1.c1 AS BLOB) END, CASE WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE rt0.c2 COLLATE RTRIM END, ((LIKELIHOOD(rt0.c0, 0.5730724422768867)) BETWEEN ((rt0.c2 IN ())) AND (IFNULL(rt1.c2, rt1.c2))), (((((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))<=((NULL))) FROM rt0, t0, rt1 WHERE (((CAST(NULL AS INTEGER))GLOB(((((((((-1.714755512E9)AND('')))AND(0.5535118442431549)))OR(NULL)))AND(0.2409338169789721)))));SELECT ALL AVG(CAST(t0.c0 AS NUMERIC)) OVER () FROM rt0;SELECT ((IFNULL(rt1.c0, t0.c0))LIKE(CASE WHEN '556626479' THEN rt0.c0 END)) FROM rt1, t0 ORDER BY (CAST(rt0.c2 AS INTEGER) IN ((+ (rt0.c0))))  NULLS FIRST, (((rt0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((''))) DESC  NULLS FIRST;SELECT DISTINCT (((((rt0.c2))>((rt0.c2)))) NOT BETWEEN ((('1104757979') ISNULL)) AND (((rt0.c2)+(rt0.c1)))) FROM rt0, vt0, rt1, t0 WHERE (((((((((((0.06995153298579593)OR(6.93378142E8)))AND(CAST(x'' AS REAL))))AND(((0xffffffffb9dc6cd7) NOT BETWEEN ('0.21834512499195546') AND (x'')))))OR(LIKELY('330206172'))))OR(('1526265454' IN (NULL))))) ORDER BY rt0.c1 COLLATE BINARY; -- 0ms;
SELECT ((LOWER(rt1.c2)) IS FALSE) FROM vt0, rt0, t0;SELECT DISTINCT COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0, rt1, rt0, t0; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM t0, rt1, vt0 WHERE (((UNLIKELY(DISTINCT '76')) NOT NULL)) GROUP BY -1707087423 COLLATE BINARY HAVING CAST(((((vt0.c0)OR(0.8672988298276091)))AND(rt1.c0)) AS TEXT);SELECT DISTINCT ((((rt1.c2)IS NOT(rt1.c0)))<=(rt1.c2 COLLATE BINARY)) FROM vt0, t0;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((0.9487996181137983)) AND ((0.5420485371365259))) FROM rt1 WHERE ((((x'') IS FALSE) IN ()));SELECT DISTINCT CAST(rt0.c2 AS INTEGER) FROM vt0, t0, rt1, rt0 WHERE (((((((0.29315452757014215)OR(NULL)))OR(NULL)))LIKE('' COLLATE NOCASE))); -- 0ms;
SELECT ALL SUM(((rt1.c2) NOT NULL)) FROM rt0, rt1, t0, vt0 GROUP BY -1248377455;SELECT ALL '-281915270' FROM t0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOTNULL))AND((~ (rt1.c1)))) FROM t0 LIMIT -1141216824;SELECT ALL (((NOT (t0.c0)))<(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) FROM t0, rt0 WHERE (((((((((((0.974432060682399)OR(x'')))OR(0xffffffff822adcd5)))AND(0.09888712926478604)))OR('-1217264221')))||(((((x'')AND('-1300921605')))OR(0xffffffffba398d51))))) ORDER BY ((((vt0.c0)=(t0.c0))) NOTNULL) DESC  NULLS LAST, (rt1.c2 COLLATE NOCASE IN ()) DESC  NULLS LAST LIMIT -2003624804 OFFSET -589360764;SELECT DISTINCT 0.06995153298579593 FROM rt0, t0, vt0, rt1 WHERE ('-769144035'); -- 0ms;
SELECT DISTINCT (~ ((~ ('1193156213')))) FROM rt1, rt0, t0, vt0 LIMIT 243240357; -- 0ms;
SELECT ALL CAST(t0.c0 AS BLOB) COLLATE BINARY FROM vt0, rt1 WHERE (((CASE WHEN x'5dd2' THEN NULL WHEN NULL THEN x'7d08' WHEN 0.1535755095028254 THEN 0xffffffffcdfdf84d ELSE '1794096527' END)>(load_extension('1121351575'))));SELECT DISTINCT (((rt1.c2)) BETWEEN ((AVG(rt1.c1))) AND ((((((((((((((0.30130485710421795)AND(rt1.c0)))AND(rt1.c2)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c0)))OR(x''))))) FROM vt0;SELECT DISTINCT ((((((((((((t0.c0)OR(rt0.c0)))OR(rt1.c2)))OR(CAST(rt1.c1 AS BLOB))))AND(((((rt0.c2)AND(t0.c0)))OR(rt1.c0)))))AND(((t0.c0) BETWEEN (rt1.c1) AND (t0.c0)))))AND((- (rt0.c0)))) FROM rt1 WHERE ((((('')>>(NULL))) NOTNULL)) GROUP BY (NOT (((((rt1.c1)OR(rt1.c0)))AND(rt1.c2))));SELECT DISTINCT rt0.c1 FROM rt0, vt0 UNION SELECT DISTINCT (((((vt0.c0, vt0.c0, rt1.c2, t0.c0, vt0.c0)) BETWEEN ((rt1.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) AND ((x'', vt0.c0, rt1.c0, vt0.c0, t0.c0)))) ISNULL) FROM t0, rt0;SELECT ALL ROW_NUMBER() OVER (), CAST((rt1.c2 IN ()) AS NUMERIC), (((rt1.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (rt1.c1) AND (0.8407836790802478)))) AND (((rt1.c2 IN (rt1.c1))))) FROM rt0;SELECT DISTINCT ((rt0.c0 COLLATE BINARY)&('-1879333007')) FROM rt0, vt0, rt1, t0 WHERE (((((('') NOTNULL), 8.021251365541993E-4, ((0xfffffffff2d72b44) NOT NULL)))>=((((x'') BETWEEN (0.9633091334922802) AND (NULL)), ((((NULL)AND('')))AND('ZM')), (('')*(NULL)))))) GROUP BY (((rt1.c0 IN ()))+((((rt0.c0))<=((rt0.c1))))); -- 0ms;
SELECT DISTINCT (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END IN (rt0.c2 COLLATE RTRIM, ((((rt1.c0)AND(rt0.c2)))OR(-1671872335)))) FROM rt1;SELECT ALL (((t0.c0, '-1888362061', ((rt0.c2)<(t0.c0))))>((((vt0.c0) NOT BETWEEN (rt1.c2) AND (NULL)), ((0.9666614216331715) IS FALSE), ((rt1.c2)<>(NULL))))), LEAD(((((rt0.c2) IS FALSE)) NOTNULL), rt1.c1, (((((rt1.c0))>((vt0.c0))))%(rt0.c1 COLLATE BINARY))) OVER (), rt1.c2 FROM rt1, vt0, rt0;SELECT ALL CAST((rt1.c1 IN (t0.c0)) AS BLOB) FROM rt0 ORDER BY rt0.c0, ((NULL) IS TRUE)  NULLS LAST;SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS INTEGER) FROM vt0, rt0 LIMIT -1714755512 OFFSET -1696635290;SELECT ((((rt0.c1) NOTNULL))OR(((vt0.c0)LIKE(rt0.c1)))) FROM vt0;SELECT DISTINCT ((NULL) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)IS(t0.c0))))>((PRINTF(rt0.c0)))) FROM rt1, rt0, t0, vt0 WHERE (CAST(((x'3b29') BETWEEN ('偺 GV-') AND (1441127250)) AS BLOB)); -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS BLOB), TOTAL((NOT (rt1.c0))) OVER (), ((((((vt0.c0)OR(rt0.c0)))AND(rt1.c2))) NOT BETWEEN (((vt0.c0)IS(rt0.c1))) AND (((((rt1.c0)AND(t0.c0)))AND(rt0.c0)))) FROM rt1, t0;SELECT NULL, (((rt0.c1) NOTNULL) IN (TYPEOF(rt1.c0))), (((rt1.c2))!=((rt1.c1))) COLLATE BINARY FROM vt0 WHERE (((((((NULL)*(0Xffffffffc1d7b0e9)))AND(NULL)))OR('偩Mh''tM' COLLATE RTRIM)));SELECT LIKELY((((rt1.c0))>((vt0.c0)))) FROM vt0, t0 WHERE (CASE WHEN (((NULL, x'', NULL)) BETWEEN ((x'', 0.6420486322904739, 0.7867616374001412)) AND ((0.5623188732080612, x'', 0.40296891567921966))) THEN 'XFWC' COLLATE NOCASE END) GROUP BY ((CAST(t0.c0 AS REAL))|(((rt0.c2)LIKE(rt0.c0)))), (rt1.c0 IN ()), ((0.3797015602988525)<<(rt0.c1)) COLLATE BINARY HAVING (+ ((NOT (rt0.c1))));SELECT ALL SUM(((rt1.c1)/(rt1.c2))) FROM rt0, vt0, rt1, t0 WHERE ((NOT (NULL))); -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN (rt0.c0)) AS REAL), ((((((((rt1.c1 COLLATE NOCASE)OR(((((rt0.c1)OR(x'c89d')))AND(rt0.c0)))))AND((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))))AND(((t0.c0) IS FALSE))))AND(((rt1.c0)<>(rt1.c2)))), (((rt0.c2)) NOT BETWEEN (('^u''ႋ#sVpL')) AND ((CASE NULL  WHEN rt0.c0 THEN rt1.c2 ELSE t0.c0 END))), t0.c0, TYPEOF((vt0.c0 IN ())) FROM vt0, rt1, t0;SELECT ALL ((rt1.c1) IS FALSE) COLLATE RTRIM, ((((rt0.c1) ISNULL))GLOB(((rt0.c0) ISNULL))), ((t0.c0 IN (rt1.c0)) IN (((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2)), MIN(rt0.c1))) FROM t0, rt0, vt0, rt1 WHERE (CASE WHEN IFNULL(DISTINCT x'', '') THEN LIKELY(DISTINCT -676692146) END) GROUP BY (+ (((0Xffffffffa12b8065) ISNULL))); -- 0ms;
SELECT ALL (NOT (CASE rt1.c0  WHEN rt0.c1 THEN x'' END)), (((((((((~ (rt0.c0)))AND(rt0.c2 COLLATE RTRIM)))AND(t0.c0 COLLATE NOCASE)))OR((rt1.c2 IN ()))))AND(((rt0.c2) IS TRUE))), CAST(((0.29472718287444577)/(vt0.c0)) AS INTEGER) FROM t0, rt1;SELECT ALL rtreenode(((x'41b6')<=(t0.c0)), ((rt1.c0) BETWEEN (x'') AND (rt1.c0))) FROM rt0;SELECT DISTINCT TOTAL(rt0.c2) FROM rt0, t0, vt0 GROUP BY ((((vt0.c0)<=(rt1.c2))) NOT BETWEEN (LIKE(rt0.c0, t0.c0)) AND (QUOTE(x'')));SELECT DISTINCT COUNT(*), ((((rt1.c0)IS(t0.c0))) BETWEEN (CHANGES()) AND (0.6832178167118322)), SUM(((((NULL)OR(rt1.c2)))AND(rt0.c2))) OVER () FROM rt0 WHERE (0Xffffffffeb3e5526) GROUP BY rt1.c2 COLLATE RTRIM, (((rt1.c0 IN ()))*(0.36211523628468023)), (((~ (rt1.c0)))<>(CASE rt0.c2  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END));SELECT ALL (~ ((((rt0.c1))!=((rt1.c1))))) FROM vt0, rt1, rt0 WHERE ((- (((('-116134899')) BETWEEN ((0.06327716146728002)) AND ((NULL)))))); -- 0ms;
SELECT ALL CAST(((((t0.c0)OR(rt0.c0)))AND(rt1.c0)) AS NUMERIC) FROM t0, vt0, rt0, rt1; -- 0ms;
SELECT ALL AVG(CAST(NULL AS REAL)) OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE GROUP), (((rt0.c0)>=(rt0.c1)) IN ()), (((((vt0.c0, rt1.c0, t0.c0)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((rt1.c2, rt0.c1, rt0.c2))))%(CAST(vt0.c0 AS TEXT))) FROM rt0, vt0, rt1, t0; -- 1ms;
SELECT DISTINCT (~ ((((vt0.c0, vt0.c0, x'')) BETWEEN ((rt1.c0, rt0.c2, vt0.c0)) AND ((vt0.c0, rt1.c0, rt0.c2))))) FROM t0 GROUP BY ((RTRIM(rt1.c0))|((((rt0.c2))!=((rt0.c1))))) HAVING CAST(((rt0.c1)>=(rt0.c1)) AS REAL);SELECT DISTINCT CASE WHEN MAX(rt0.c0) THEN (- (vt0.c0)) END FROM rt0, t0, rt1 WHERE (CAST(((x'')<=(NULL)) AS NUMERIC));SELECT ALL GROUP_CONCAT(AVG(rt1.c0) COLLATE BINARY) FROM rt0, t0;SELECT DISTINCT (((((rt0.c0, rt0.c1, '693378142')) BETWEEN ((rt0.c0, t0.c0, rt0.c2)) AND ((t0.c0, rt1.c0, rt1.c2))))<>((rt1.c1 IN ()))), ((t0.c0)>=(rt1.c2)) COLLATE BINARY, '(f홝/', PRINTF(TRIM(DISTINCT rt0.c1, rt0.c1), ((rt0.c2)|(rt1.c2)), CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 WHEN t0.c0 THEN rt0.c2 WHEN rt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c2 END), ((TOTAL(t0.c0)) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt0.c1)>>(t0.c0)))) FROM rt1, vt0;SELECT ABS(NULL) FROM rt0, t0, rt1, vt0 WHERE (((((((((((((((((x'55d7')OR(0.8879276130364184)))OR(NULL)))AND('')))AND(0Xffffffffcc889934)))OR(((x'')IS NOT('')))))AND((- ('{d^')))))AND(CAST(x'cf64' AS TEXT))))AND((0.6336834239981877 IN (x''))))); -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE (load_extension(TRIM(DISTINCT 7.04148462E8), (468866451 IN (NULL)))); -- 0ms;
SELECT DISTINCT ((((('-870393517')OR(rt0.c1)))OR(rt1.c2)) IN ()) FROM t0, rt1, vt0 LIMIT 1034954433 OFFSET 1326052346; -- 0ms;
SELECT ALL (+ (CASE WHEN rt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE t0.c0 END)), CASE WHEN (NULL IN (NULL, t0.c0)) THEN ((vt0.c0)==(rt1.c0)) END, TOTAL(CASE NULL  WHEN rt1.c0 THEN rt0.c2 ELSE t0.c0 END COLLATE RTRIM) OVER ( ORDER BY ((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c2 END) ISNULL) DESC  NULLS LAST) FROM rt0;SELECT ALL ((rt0.c2 IN ()) IN (((rt0.c0)-(rt1.c2)))) FROM rt0, rt1, vt0 GROUP BY (CASE rt0.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c2 THEN t0.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c1 END IN ()), ((((t0.c0)/(rt0.c1))) IS TRUE), (- (vt0.c0)) HAVING (((rt1.c2 IN (rt1.c2, rt0.c1))) IS TRUE);SELECT DISTINCT NULL FROM vt0, rt1, rt0 WHERE (((((((x'')OR('')))AND(x'7a93972a'))) ISNULL)) ORDER BY ((((rt0.c2 IN ())))==((0xffffffffdf870bb3))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE (((((0.872103104809401)==(NULL))) BETWEEN ((NOT ('-893311482'))) AND ((~ (0Xffffffffda269b1e))))); -- 0ms;
SELECT DISTINCT CAST(((x'')|(t0.c0)) AS NUMERIC) FROM rt0, vt0, t0, rt1 ORDER BY (rt0.c1 COLLATE BINARY IN (((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT UPPER((- (rt1.c2))) FROM vt0, t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((COALESCE(rt0.c0, NULL)) IS TRUE), ABS(((rt0.c2)AND(t0.c0))), ((- (7.74003739E8)) IN ()) FROM rt0, vt0 WHERE (-733919209 COLLATE NOCASE);SELECT DISTINCT (CAST(rt0.c1 AS REAL) IN ()) FROM t0, vt0, rt0 WHERE (((((NULL) BETWEEN ('+m_!l6') AND (x'')))*(((0.4905561279678934)OR('-1463951904'))))); -- 0ms;
SELECT DISTINCT ((((CASE t0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(((rt0.c1)&(t0.c0)))))AND(((vt0.c0) ISNULL))) FROM rt1, t0 WHERE ((NOT ('71579561')) COLLATE NOCASE);SELECT DISTINCT CASE HEX(DISTINCT t0.c0)  WHEN ((t0.c0)-(rt0.c0)) THEN TOTAL(rt0.c1) WHEN CAST(rt1.c0 AS BLOB) THEN ((NULL)<<(t0.c0)) WHEN ((rt0.c0)>=(rt0.c2)) THEN ((t0.c0)AND(rt1.c1)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt1.c1)) END, ((('0.6832178167118322') NOT NULL) IN ()), TOTAL(((rt1.c1) NOT NULL)) OVER () FROM vt0, t0 WHERE ((((((((((('%M')OR('J?8-n8%H')))OR(((1.413771448E9)>>(0.6577552390870472)))))AND(((NULL) NOT BETWEEN (x'') AND (-2.68681614E8)))))AND(0.03167185382381288 COLLATE NOCASE)))AND(CAST('1333332423' AS TEXT)))) ORDER BY CAST((((vt0.c0, x'a421', '-1562270133', rt1.c1, rt1.c1)) BETWEEN ((rt0.c0, rt1.c1, '~WQE*!', vt0.c0, rt0.c2)) AND ((rt0.c2, vt0.c0, rt1.c1, rt0.c1, 0Xffffffff8fd8757b))) AS INTEGER) ASC;SELECT 'eLOOK+S' FROM rt1 WHERE (((NULLIF(NULL, '')) BETWEEN (((-1.622192521E9)%('761247292'))) AND (CASE WHEN x'' THEN x'' END))); -- 0ms;
SELECT ALL (('.p') BETWEEN (((((rt0.c0)OR(rt0.c0)))OR(rt0.c2))) AND (((t0.c0) IS TRUE))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT ((((((rt1.c1)<<(rt1.c1)))OR((~ (-241077274)))))OR(x'')), ((rt1.c1)-(AVG(NULL))), ((((((((((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(rt0.c2)))OR(((vt0.c0) NOT NULL))))OR(NULL)))OR((NOT (rt1.c1)))) FROM rt1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT LAG((((vt0.c0 IN ())) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (')N3oQ}굷C')), ((((vt0.c0)OR(vt0.c0)))OR(0.6832178167118322)) COLLATE RTRIM, (((('')AND(0x13bc84e8)))OR(vt0.c0)) COLLATE NOCASE) OVER () FROM vt0 WHERE ((- (((NULL) IS FALSE)))); -- 0ms;
SELECT ALL 1274417473 FROM vt0 WHERE (((NULL)*(x'' COLLATE RTRIM))); -- 0ms;
SELECT ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (HEX(vt0.c0))) FROM vt0;SELECT ALL (NOT (CAST(t0.c0 AS NUMERIC))) FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT highlight(((((rt1.c0)AND(t0.c0)))OR(rt0.c2)), CAST(rt1.c0 AS REAL), t0.c0, ((rt1.c0) ISNULL)) FROM rt1, vt0, rt0 WHERE (json_valid(0.6962429700000334 COLLATE BINARY));SELECT x'' FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT (((- (rt1.c2)))GLOB(((-1622192521) NOT BETWEEN (t0.c0) AND (0.3976615726450762)))), (((rt0.c2) NOTNULL) IN (((rt0.c1)>>(-1308376948)))), '-2020846316', TOTAL((~ (vt0.c0))), ((((((t0.c0, rt1.c1, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((rt0.c2, rt1.c0, rt1.c1)))))>=(((rt0.c0 IN ())))) FROM vt0, rt0, t0, rt1; -- 1ms;
SELECT DISTINCT CASE vt0.c0  WHEN rt1.c0 THEN UPPER(DISTINCT t0.c0) WHEN vt0.c0 THEN rt1.c1 WHEN AVG(rt1.c1) THEN ((rt1.c1)OR(rt0.c1)) END, (('-125040127' COLLATE RTRIM) BETWEEN (((((((((((((rt0.c1)OR(rt1.c1)))OR('-990776968')))OR(rt1.c2)))AND(rt0.c0)))OR(t0.c0)))AND(rt1.c2))) AND (COUNT(t0.c0))), ((((rt0.c0 COLLATE RTRIM)OR(((((vt0.c0)AND('-2124246607')))AND(t0.c0)))))AND(COUNT(rt1.c1))) FROM t0, vt0, rt0 WHERE (0Xffffffff9850b6af);SELECT DISTINCT CASE WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt0.c1 AS REAL) END, CASE x''  WHEN (((rt0.c0))<=((0.6266820792733129))) THEN ((((t0.c0)OR(rt0.c1)))AND(rt1.c0)) WHEN ((rt0.c2)>=(rt1.c2)) THEN CASE WHEN rt1.c0 THEN rt1.c0 END WHEN vt0.c0 COLLATE BINARY THEN ((((rt0.c0)OR(rt1.c0)))AND(rt1.c1)) END, ((((GROUP_CONCAT(t0.c0))OR(t0.c0 COLLATE BINARY)))AND(CAST(rt1.c2 AS INTEGER))) FROM rt1 WHERE (NULL);SELECT DISTINCT (((((- (rt0.c2)))OR(0.8111217819129904)))AND((rt0.c0 IN ()))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c1)AND(vt0.c0)))OR(0.20320152685655457)))/(((t0.c0)GLOB(rt1.c2)))) FROM t0, vt0 LIMIT -1850558284;SELECT DISTINCT ((((t0.c0) IS TRUE)) BETWEEN ((((rt0.c0))>((NULL)))) AND ('')), ((((t0.c0)>(rt0.c1)))!=(LIKE(t0.c0, rt1.c2))), ((0.8035338752206985 COLLATE BINARY) BETWEEN (((rt0.c2) IS TRUE)) AND (((((rt0.c2)AND(rt1.c2)))OR(rt0.c0)))) FROM t0, vt0, rt0, rt1 WHERE ((((x'4199')) NOT BETWEEN (((('1267322896') NOT BETWEEN ('lI\nh ') AND ('-1451667070')))) AND ((CAST(NULL AS TEXT))))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0 WHERE (((CASE WHEN -4.1321165E7 THEN 0.7346751720618259 END) BETWEEN ((('ou') NOT BETWEEN (-2.68681614E8) AND (-1.056425773E9))) AND (CAST(0xffffffff9850b6af AS BLOB)))); -- 0ms;
SELECT ALL ((((rt1.c1) NOTNULL)) NOT BETWEEN (((((rt1.c2)OR(rt0.c2)))AND(rt1.c0))) AND (MAX(rt0.c1))) FROM rt0;SELECT ALL CASE WHEN NULL THEN ((((vt0.c0)AND(rt0.c1)))AND(rt1.c2)) ELSE (('29903885') IS FALSE) END, CAST(((vt0.c0) IS FALSE) AS NUMERIC), (((rt1.c1 IN (vt0.c0)))|(TRIM(rt0.c0, vt0.c0))) FROM vt0, t0 WHERE (((((('0.5623188732080612') NOTNULL)))>=(((+ (NULL))))));SELECT ALL ((((rt1.c1)AND(CAST(rt0.c2 AS INTEGER))))AND(((vt0.c0)IS(rt1.c1)))), x'', CASE ((t0.c0)<<(t0.c0))  WHEN rt0.c1 THEN (t0.c0 IN (vt0.c0, x'')) WHEN (~ (rt1.c1)) THEN rt0.c2 WHEN ((rt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) THEN (rt1.c1 IN ()) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END FROM t0;SELECT DISTINCT rt1.c1 FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL CAST(((rt0.c1) NOT BETWEEN ('-1816535282') AND (rt1.c2)) AS BLOB) FROM rt1, t0, vt0 WHERE (((((0Xffffffffedd68757) ISNULL))LIKE(('-304707753' IN ())))) LIMIT -487546246 EXCEPT SELECT DISTINCT NULL FROM rt0 WHERE (COALESCE(((((((((x'')AND('')))AND('|k')))AND(0.9897946511611185)))OR(x'')), CASE 1.7448163E7  WHEN 0.9246314881580147 THEN '{n' END));SELECT DISTINCT (((rt1.c0)LIKE(rt1.c1)) IN (ABS(DISTINCT vt0.c0), ((((NULL)AND(rt0.c1)))AND(t0.c0)))) FROM rt1, t0, vt0, rt0 WHERE (IFNULL(DISTINCT (+ (NULL)), (0.7334012936524531 IN (NULL)))); -- 0ms;
SELECT (- (((t0.c0)/(rt1.c0)))) FROM vt0, t0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((rt0.c2, rt0.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, -4.93355052E8)) AND ((rt1.c1, t0.c0, rt1.c0)))))>=((vt0.c0 COLLATE NOCASE))) FROM t0, vt0, rt0, rt1 WHERE ((((((NULL, '8m1lbk', 0x7d893a77)) BETWEEN ((NULL, '8.021251365541993E-4', '')) AND ((x'', 0.7182123004488514, 'Tq')))) NOT BETWEEN (CASE WHEN 1495285161 THEN 0X1cdfeef WHEN 0.8695057042630836 THEN NULL WHEN '' THEN 0x4ca70b9f ELSE '0.8148542601249187' END) AND ((('')LIKE('0.23294307612435883'))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((rt1.c0)/(rt1.c0)))) DESC  NULLS LAST, ((x'19df')==(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN 7.55236357E8 WHEN rt0.c2 THEN rt0.c1 END)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT x'' FROM vt0, t0 WHERE ((((((0X212d722f, '', '-268681614')) NOT BETWEEN (('cWO3''Kx', 0.16324125490006458, 'FALSE')) AND ((x'', NULL, '2066916742'))))IS(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT rt1.c2 FROM vt0, t0, rt0;SELECT DISTINCT ((rt1.c1)<=(rt1.c1)) COLLATE RTRIM, (~ (((t0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))), ((GROUP_CONCAT(rt1.c1))LIKE(rt0.c2 COLLATE NOCASE)) FROM t0, rt0 ORDER BY ((vt0.c0 IN ()) IN ())  NULLS LAST;SELECT COUNT(TRIM(rt1.c1)) OVER () FROM t0, vt0;SELECT ((((rt0.c0 IN (rt0.c0)), rt0.c0 COLLATE NOCASE, ((((((((rt1.c2)AND(x'')))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1))))>(((rt1.c0 IN ()), ((((((((rt0.c0)AND(rt1.c1)))OR(t0.c0)))OR(vt0.c0)))OR(rt1.c0)), ((((rt0.c2)OR(x'')))OR(rt0.c0))))), (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((t0.c0, rt1.c0, rt1.c2))<>((rt1.c0, rt0.c0, t0.c0))))), FIRST_VALUE(LIKELIHOOD(rt0.c2, 0.3143725219946236)) OVER () FROM vt0, rt0, t0;SELECT ALL ROW_NUMBER() OVER () FROM t0, rt1, rt0, vt0; -- 0ms;
SELECT ALL ((MIN(rt0.c1))>=(CAST(vt0.c0 AS TEXT))) FROM rt0 WHERE (((('1274417473', 1.440519466E9, 100281722)) NOT BETWEEN (((~ (NULL)), x'' COLLATE NOCASE, ((x'')&('1697197148')))) AND ((0.32672700791882314 COLLATE NOCASE, x'461b342e9fa1', CAST(NULL AS TEXT))))) GROUP BY ((((((((((((0.06257331646677389)AND(rt1.c0)))OR(rt0.c2)))OR(((((((((rt1.c1)AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c0)))AND(rt1.c1)))))AND(((rt0.c2)&(rt0.c2)))))OR(rt0.c0)))AND((((rt1.c1, rt1.c1, rt1.c0))<=((rt0.c0, rt1.c2, rt1.c0))))) HAVING (~ (rt0.c0));SELECT DISTINCT ((((rt0.c2) IS FALSE))/(((rt1.c2)OR(rt1.c0)))) FROM rt0, rt1, vt0, t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(CAST(rt1.c2 AS TEXT))))OR(CASE WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN 0.9536528288182887 WHEN t0.c0 THEN vt0.c0 END)))AND('1098287516')))OR(((rt0.c2) NOT NULL))) FROM t0, vt0, rt0 WHERE (((CAST('' AS TEXT)) NOT NULL));SELECT DISTINCT ((NOT (rt0.c1)) IN ()) FROM rt0, t0, vt0 WHERE (LIKE(CASE WHEN 0.15704698547463558 THEN '+H8#Gd5x*' END, ((0X352f6d72)OR(0.5553222157964716)))); -- 1ms;
SELECT DISTINCT (~ ((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt1.c2))))) FROM vt0, t0;SELECT (- (COALESCE(DISTINCT rt0.c2, rt0.c1, NULL, rt0.c1))) FROM rt0 WHERE ((NOT ((((x'9980'))!=((NULL)))))); -- 0ms;
SELECT DISTINCT '-1137575892' FROM vt0, rt0, rt1; -- 0ms;
SELECT FIRST_VALUE(((((t0.c0)&(t0.c0)))AND('0.872103104809401'))) OVER () FROM t0; -- 0ms;
SELECT (NOT (rt1.c1)) FROM vt0 WHERE (LIKELY(''));SELECT ((CASE WHEN rt1.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END)IS NOT(((rt1.c0)/(t0.c0)))) FROM vt0, rt1 WHERE (((((((((load_extension('.', NULL))AND((('')<=(-1339082133)))))OR((('1267322896')AND(NULL)))))OR(CASE WHEN x'' THEN 0.7450396349821622 WHEN x'' THEN x'' WHEN '' THEN x'' END)))OR((~ (-1602511013)))));SELECT DISTINCT (- (t0.c0)) FROM vt0 NOT INDEXED, t0 CROSS JOIN rt0 ON ((rt1.c1) BETWEEN (rt0.c2) AND (x'38781b38')) COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((((rt1.c1)OR(rt1.c1))) NOT NULL);SELECT DISTINCT CAST((NOT (rt1.c2)) AS TEXT) FROM rt0, vt0 WHERE ((0X6c49a895 COLLATE RTRIM IN ())) LIMIT -1852126281;SELECT ((((((t0.c0) BETWEEN (rt1.c0) AND (vt0.c0)))AND(AVG(t0.c0))))AND(((rt0.c1)OR(rt1.c0)))) FROM rt0 WHERE ((((((((-1815283936)) BETWEEN ((x'')) AND ((NULL))))AND((('1510756931') BETWEEN ('-1530915797') AND (x'80f5')))))AND((NOT (x'')))));SELECT (~ (((rt1.c0)*(t0.c0)))) FROM t0, vt0, rt1, rt0 WHERE (CASE CASE WHEN NULL THEN 0Xfffffffff4af8ea8 WHEN 0.2069825147850346 THEN x'' WHEN 0.6420486322904739 THEN NULL ELSE x'7cf1' END  WHEN ((-1.249939223E9)>>('偺 GV-')) THEN ((0.8922964948697643)>(845569485)) ELSE ((x'')>>(NULL)) END); -- 0ms;
SELECT DISTINCT ((('-%uX<1qP' COLLATE NOCASE))>=(((NOT (rt1.c0))))), (((('*G')>>(rt0.c2))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((((rt1.c0, rt0.c1, t0.c0))<>((rt0.c2, rt0.c1, rt0.c2))))), ((((((((((NULL)AND(rt0.c2)))OR(0.7473218532267404)))OR(x'4e6f97be')))AND(rt0.c1))) NOT BETWEEN (((t0.c0)<(rt1.c2))) AND (0Xffffffffdb8338aa)) FROM rt0, t0, vt0, rt1; -- 0ms;
SELECT ALL rt0.c0 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN ABS(rt0.c0) WHEN MAX(rt1.c1) THEN t0.c0 COLLATE NOCASE WHEN ((rt1.c2)>(vt0.c0)) THEN CASE vt0.c0  WHEN rt1.c2 THEN rt0.c0 END END FROM rt0, rt1, t0;SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0xffffffffe472619e)))>(IFNULL(t0.c0, rt0.c0))) FROM t0 WHERE (((CASE 0.7525463965855548  WHEN 1830666119 THEN 0.8271555059800694 WHEN NULL THEN '1018665535' WHEN '-540303044' THEN x'' END) BETWEEN ((x'' IN ())) AND (((NULL) NOT BETWEEN (NULL) AND (NULL)))));SELECT DISTINCT ((rt0.c0 COLLATE NOCASE)>=(CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN 0Xffffffffb2abe2a2 WHEN 1.13190327E8 THEN rt0.c1 END)) FROM rt0, rt1, vt0;SELECT DISTINCT ((AVG(vt0.c0))=((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))), ((((TOTAL(rt0.c2))AND(0Xffffffff90ef00c0 COLLATE BINARY)))OR(vt0.c0)), TOTAL((NOT (rt0.c0))), (((~ (rt1.c0)))-((((rt1.c0, rt0.c2, vt0.c0))=((rt1.c1, t0.c0, rt0.c2))))), CASE IFNULL(DISTINCT rt0.c0, '1630937406')  WHEN CASE vt0.c0  WHEN vt0.c0 THEN 0Xffffffffa39db028 END THEN CASE vt0.c0  WHEN rt0.c0 THEN rt1.c2 ELSE t0.c0 END ELSE ((x'')IS NOT(rt0.c2)) END FROM t0, rt1, rt0, vt0; -- 1ms;
SELECT TOTAL(((rt1.c2)||(rt0.c1))) OVER (), ((((rt0.c0)<>(rt0.c0))) NOT NULL), COUNT((((rt1.c2))<=((rt0.c0)))) OVER (), NULLIF(((0.9365603843269342)<('-1602511013')), '2109124734'), LAST_VALUE(x'') OVER () FROM rt1, vt0, rt0, t0 WHERE ((((IFNULL('I\n%ce', '+aH#F*\r2')))!=(((-807841952 IN ()))))); -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c2)%(vt0.c0))), (((rt1.c1)>(rt1.c2)) IN ()), GROUP_CONCAT(CASE WHEN vt0.c0 THEN vt0.c0 END), ((rt1.c0)<<((('{d^') ISNULL))), CASE WHEN (rt0.c2 IN ()) THEN ((((((((rt0.c1)AND(rt0.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(vt0.c0)) WHEN (- (vt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN rt1.c0 COLLATE BINARY THEN ((t0.c0) IS TRUE) WHEN (~ (0.2420287039907547)) THEN t0.c0 COLLATE BINARY WHEN ((rt1.c2)&(rt0.c2)) THEN NULL END FROM rt0;SELECT DISTINCT (rt1.c0 COLLATE RTRIM IN ()) FROM vt0 ORDER BY rt0.c1, ((x'')*(-2.68681614E8))  NULLS FIRST;SELECT ((((((rt0.c2)OR(0.24191556059977815)))OR(rt0.c1))) BETWEEN (((((rt0.c1)AND(t0.c0)))OR(rt0.c1))) AND (IFNULL(rt1.c0, rt0.c0))) FROM vt0, t0, rt1 WHERE (CASE WHEN NULL THEN '-240995259' COLLATE RTRIM WHEN ((NULL) IS TRUE) THEN CASE WHEN x'' THEN x'' WHEN 0.3378906847465175 THEN 7.74003739E8 WHEN '790525135' THEN 0x3965a31d END WHEN TRIM(x'') THEN CAST('Lg' AS INTEGER) END);SELECT DISTINCT ((((vt0.c0)<=(rt1.c2)))==(vt0.c0)) FROM rt0, t0 WHERE (((((((('WM[')) BETWEEN (('\rC')) AND (('P<D홰'))))OR(((0.7942121729784126)&(x'')))))OR(TOTAL_CHANGES())));SELECT DISTINCT NULL, '', ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) FROM rt0, t0, rt1, vt0 GROUP BY CAST(CASE rt1.c1  WHEN 'Aq#4' THEN rt1.c2 ELSE rt0.c0 END AS NUMERIC) HAVING CASE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2))  WHEN (rt0.c1 IN ()) THEN rt0.c0 END; -- 1ms;
SELECT ALL RANK() OVER () FROM t0, rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))%(TRIM(DISTINCT t0.c0))), SUM((t0.c0 IN (rt0.c0))), CASE WHEN (((rt0.c2))>=((rt0.c0))) THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)) WHEN CAST(rt1.c0 AS INTEGER) THEN (((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((x'66c3'))) WHEN ((((rt1.c2)OR(vt0.c0)))AND(rt1.c0)) THEN UPPER(DISTINCT x'7308') WHEN vt0.c0 COLLATE NOCASE THEN (((rt0.c1))<>((rt1.c2))) WHEN ((rt1.c1)>=(0.7950438476527979)) THEN CAST(rt1.c0 AS TEXT) ELSE CAST(rt0.c2 AS REAL) END FROM vt0, rt1 WHERE (((((0.11396820825755871)||('-147446647'))) NOT NULL));SELECT ALL ((((rt1.c2)>=(rt0.c1))) NOT BETWEEN (0.8644493854411476) AND ((vt0.c0 IN (rt0.c0)))), ((CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)GLOB(UPPER(DISTINCT rt0.c1))), ((((((((((rt0.c2) ISNULL))AND(((((rt1.c2)AND(rt1.c0)))OR(rt0.c1)))))AND(((rt0.c1)%(rt1.c2)))))AND(((rt0.c0)<<(rt1.c0)))))OR(CAST(rt1.c1 AS TEXT))), GROUP_CONCAT(((((((((((((vt0.c0)AND(rt1.c2)))OR('-1249939223')))AND(rt0.c1)))OR(rt1.c1)))OR('0.7867616374001412')))OR(t0.c0))), t0.c0 FROM t0;SELECT DISTINCT ((0.004789974050276369) BETWEEN (CAST(0.6974291914857137 AS NUMERIC)) AND (rt1.c1)) FROM t0, rt1; -- 0ms;
SELECT CASE MAX(rt1.c2)  WHEN ((((rt1.c0)AND(rt1.c0)))OR(vt0.c0)) THEN ((rt0.c2) IS TRUE) ELSE (((rt0.c1, '', vt0.c0))>=((rt1.c2, '0.8407836790802478', rt1.c0))) END, (rt1.c0 COLLATE RTRIM IN ('9987929')), (0.8744790630006786 IN ()) COLLATE BINARY FROM rt0, vt0 LIMIT 1529167834 OFFSET -733919209;SELECT ABS(((rt0.c1) NOTNULL)), ((1.121351575E9) NOT BETWEEN (RTRIM(rt0.c1)) AND ('1440519466')), (NOT (CAST(rt0.c1 AS TEXT))) FROM rt1, rt0, t0, vt0; -- 0ms;
SELECT ALL SUM((NULL IN (rt1.c1))) OVER ( ROWS (((rt0.c1 IN ())) NOT NULL) PRECEDING EXCLUDE TIES), rt1.c0, ((((((((CAST(rt0.c2 AS INTEGER))OR(LIKELIHOOD(DISTINCT rt1.c0, 0.5189291279817018))))OR(CASE WHEN t0.c0 THEN rt1.c2 ELSE 0.5942444228004506 END)))OR(CASE rt0.c1  WHEN rt1.c2 THEN rt0.c1 END)))AND(COUNT(*))) FROM rt0;SELECT CAST(rt1.c0 AS REAL) COLLATE BINARY FROM rt1 LIMIT -1249939223 OFFSET -1787516240; -- 0ms;
SELECT ALL (((((((((('{2ioQ')OR('761 1009 H趾\n')))OR(t0.c0)))OR(rt0.c2)))AND(rt0.c1))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c0))) AND (((rt1.c1) NOTNULL))) FROM rt0, vt0, rt1;SELECT ALL ((((((rt1.c1)-(rt0.c1)))OR(rt1.c0 COLLATE NOCASE)))AND(COALESCE(rt1.c0, rt1.c2))) FROM vt0;SELECT DISTINCT ((((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c0)))<=(((((t0.c0)AND(NULL)))OR(rt1.c1)))) FROM t0, rt0, vt0 WHERE ((NOT (((-1602511013)==(0.5490292823116008))))) ORDER BY (+ (CASE WHEN rt1.c0 THEN rt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, CASE WHEN 0.2449990226038592 THEN ((0.39821536720860196) NOT NULL) END;SELECT ((((rt0.c2)OR(((vt0.c0)*(rt0.c1)))))AND((+ (rt0.c1)))), CAST(vt0.c0 COLLATE BINARY AS REAL), (((0Xffffffffb06e873e)/(vt0.c0)) IN ()), ((rt0.c0)<>(vt0.c0 COLLATE NOCASE)), (((rt1.c0)) NOT BETWEEN (((((rt0.c2))<=((rt0.c0))))) AND (((((t0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) FROM t0;SELECT DISTINCT ((((t0.c0)OR(CASE WHEN vt0.c0 THEN NULL ELSE rt0.c2 END)))OR(CAST(t0.c0 AS BLOB))), (((rt0.c2)) NOT BETWEEN ((((rt1.c2)IS(rt1.c2)))) AND ((((rt0.c0)||(rt1.c1))))), (+ ((NOT (t0.c0)))), (SQLITE_COMPILEOPTION_USED(rt1.c2) IN ((((0.10368947762717506)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))), ((rt1.c1)*(((rt0.c1)>(rt0.c0)))) FROM t0 WHERE (x'');SELECT DISTINCT (((t0.c0 IN ()))LIKE(((rt0.c0) IS TRUE))) FROM t0, vt0 LIMIT 755236357 OFFSET -1426919231;SELECT COUNT(*) OVER ( ORDER BY TRIM(((rt1.c2) BETWEEN (rt0.c1) AND (vt0.c0)), ((rt0.c1) ISNULL)) ASC  NULLS LAST) FROM t0, vt0, rt1 WHERE (CASE CHAR(NULL, 0.5424126090437276, '-890322982')  WHEN ((0.5064644893379026)&('-1293751317')) THEN (~ ('1662142219')) ELSE ((NULL) BETWEEN (0.04257849152996185) AND (NULL)) END) ORDER BY ((NULL) IS TRUE)  NULLS FIRST;SELECT DISTINCT (~ ((+ (rt1.c2)))) FROM t0 WHERE (COALESCE('', TYPEOF(NULL), CASE WHEN '-540166792' THEN 0.857598937224278 ELSE x'' END, (~ (7.22061704E8))));SELECT DISTINCT (+ ((((2.70914137E8))<((x''))))), SUM(rt0.c1) OVER (), MIN(IFNULL(t0.c0, rt0.c1)) FROM rt0, t0 WHERE (('' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL (+ (((vt0.c0) NOT NULL))), (((((rt1.c0))<=((0.04008442024554981))))<(SUM(rt1.c2))), ((((rt1.c2) NOT NULL))AND(GROUP_CONCAT(rt1.c0))), ((((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (((vt0.c0) IS FALSE))), (((rt1.c2 IN (rt1.c1))) NOT BETWEEN ((((t0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))) AND (((((t0.c0)AND(rt0.c0)))AND(vt0.c0)))) FROM t0, rt1, vt0, rt0 WHERE ((((((x'')OR(NULL)))AND('')) IN (((NULL) NOT BETWEEN ('0.5019006707448466') AND ('-2118621407'))))) ORDER BY CASE WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c2)+(rt1.c0)) ELSE ((((rt0.c2)OR(rt1.c2)))OR(rt0.c0)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT (load_extension(rt1.c1, rt1.c1) IN (JULIANDAY(rt1.c1, 0.3170033516007481, rt0.c2))) FROM vt0, t0 WHERE (((0.6789330902430158)>=(0.2452313986490996)) COLLATE RTRIM COLLATE BINARY);SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (t0.c0) AND (NULL)) AS BLOB) FROM t0 WHERE (CASE CAST(NULL AS NUMERIC)  WHEN (NULL IN ()) THEN (('')&(0X3306d8cc)) ELSE NULLIF(DISTINCT '0.5313508997692528', 'ꩽNV[&꾳s') END);SELECT DISTINCT highlight(LAST_INSERT_ROWID(), ((((((((rt0.c0)OR(rt1.c0)))OR('-646095138')))OR(rt1.c1)))AND(vt0.c0)), (((vt0.c0))!=((vt0.c0))), UPPER(rt0.c0)), x'93b8', (((rt0.c0, rt1.c0, t0.c0, rt0.c0, rt1.c1)) NOT BETWEEN ((((t0.c0)>(rt1.c1)), x'bc43', LOWER(DISTINCT vt0.c0), CAST(rt1.c1 AS NUMERIC), MAX(rt0.c1))) AND ((((t0.c0) BETWEEN (rt1.c2) AND (vt0.c0)), ((((rt0.c2)AND(rt1.c0)))AND(rt1.c1)), MIN(t0.c0), json_type(rt1.c1), t0.c0))) FROM t0;SELECT ((((((rt0.c0, rt1.c2, rt1.c1)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((rt1.c2, rt0.c1, rt0.c2)))))<>((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) FROM rt0 WHERE ((((('-408053872') NOT BETWEEN ('30277359') AND ('')))GLOB(((x'') NOT BETWEEN (0.5657003518641798) AND (x'5a9c')))));SELECT ((CAST(rt0.c1 AS NUMERIC))*(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))), ((0.8838405214852117)|((rt0.c0 IN ()))), NULL, (((rt1.c0 IN (rt1.c0)))<(((((t0.c0)AND(rt0.c2)))AND(rt0.c1)))), (IFNULL(rt1.c0, t0.c0) IN ((t0.c0 IN ()))) FROM t0, rt0, rt1, vt0; -- 0ms;
SELECT ((((((rt1.c2)AND(rt0.c1)))AND(vt0.c0))) IS FALSE), ((CAST(rt0.c2 AS REAL)) BETWEEN (IFNULL(DISTINCT vt0.c0, rt0.c2)) AND (0X1a390bc3)), rt1.c2 FROM rt1 WHERE ((((NULL IN ()))LIKE('' COLLATE RTRIM))) GROUP BY ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (x'') AND (rt1.c1))) AND ((((0.4097655651351406)) BETWEEN ((NULL)) AND (('tP炸臜_-'))))), CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY, ((((- (rt1.c0))))=(((NOT (t0.c0))))) HAVING GROUP_CONCAT(((((rt0.c0)AND(vt0.c0)))OR(vt0.c0)));SELECT DISTINCT ((((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE) FROM rt1, rt0 WHERE (CAST(('' IN ()) AS BLOB)) ORDER BY (((t0.c0 COLLATE BINARY, ((rt0.c2)+(vt0.c0)), (t0.c0 IN ())))>=(((t0.c0 IN ()), LIKELIHOOD(rt1.c0, 0.35601765975394106), 0.39529009708716034)))  NULLS LAST;SELECT ALL ((CASE rt1.c0  WHEN NULL THEN rt0.c2 ELSE rt0.c1 END) NOT NULL) FROM rt1, rt0, t0, vt0 WHERE (((((('1267322896', NULL, x'473d')) NOT BETWEEN ((x'', x'09df', x'')) AND ((1705087829, NULL, x'c53b'))))<<(CAST(0.5051444168280304 AS BLOB)))); -- 0ms;
SELECT HEX(((rt1.c0) IS FALSE)) FROM vt0 WHERE ((((((x'')) NOT BETWEEN ((x'd0f8')) AND ((NULL)))) NOT BETWEEN (NULL) AND (json_remove(-1.170633391E9, x'', NULL, x''))));SELECT ALL ((((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c1))) BETWEEN (((((((((rt0.c2)OR(rt1.c2)))OR(-1309476709)))AND(rt0.c1)))OR(rt0.c0))) AND ((((rt0.c2, rt0.c1, rt0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((rt0.c0, rt1.c1, rt0.c1, t0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c1))))) FROM vt0, t0, rt0 WHERE ((+ (((x'0a38')AND('-70609250')))));SELECT DISTINCT LAST_VALUE((NOT (0.4456915010244711))) OVER (), CASE WHEN ((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN highlight(t0.c0, rt1.c0, x'', t0.c0) ELSE AVG(rt1.c2) END, MAX(rt1.c1) FROM vt0, t0, rt1 ORDER BY CAST(((t0.c0)+(rt1.c0)) AS TEXT) ASC, (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))))=((TRIM(rt1.c0))))  NULLS FIRST, (+ (((((((((((((rt0.c2)AND(t0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(t0.c0))))  NULLS LAST;SELECT ALL ((((rt1.c0) NOTNULL))|(((vt0.c0)GLOB(vt0.c0)))) FROM rt0;SELECT ((((((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))OR(vt0.c0)))OR((- (rt1.c2)))))AND((((rt1.c1))<((rt0.c1))))))AND(((rt0.c1) NOTNULL))) FROM rt1, vt0, t0 WHERE ((((('0.0')<=(x'cde4'))) NOT BETWEEN ((NULL IN ('-315203729'))) AND (((((((((x'8ca1')OR(1274417473)))OR(NULL)))OR(0.9477592978202319)))AND('0.4789108810683822'))))) ORDER BY ((rt0.c2) ISNULL) LIMIT -54432688;SELECT DISTINCT CASE ((t0.c0)&(rt1.c0))  WHEN COUNT(*) THEN CASE WHEN rt0.c0 THEN rt0.c1 END END, ((UPPER(rt0.c0))OR('/W\k0o')), (rt0.c0 COLLATE NOCASE IN (x'3b1f')) FROM rt0, t0, vt0 WHERE (((CASE x''  WHEN NULL THEN 0.6832178167118322 WHEN 0Xffffffff96347e40 THEN x'' WHEN '-1383501006' THEN x'' ELSE '⿫uet괢' END)*(('0.9719672507341645' IN ()))));SELECT DISTINCT rt1.c2 FROM vt0, rt0;SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND (((NULL)OR(rt1.c1)))) FROM t0 WHERE (INSTR((((x''))<(('929662117'))), 0.6777893207463974)) LIMIT 790525135;SELECT (NULL IN (COUNT(vt0.c0))) FROM rt0, t0, rt1, vt0 WHERE (CASE (NOT (x''))  WHEN CASE 0.8124506344897886  WHEN 228087546 THEN 0.4510510487322187 ELSE 2036922862 END THEN ((-1672700327) NOT BETWEEN (NULL) AND (0.1335970102075218)) WHEN (('') NOT BETWEEN (540126428) AND (0.4248175366367636)) THEN (NOT ('414193222')) WHEN 'Ut' THEN CASE WHEN 'r	qm1ct5s' THEN 'Z]ey' WHEN x'' THEN NULL WHEN '' THEN '-1451667070' ELSE '-733919209' END ELSE (((NULL, x'', NULL))>((0.8457377086223886, x'0625', x''))) END); -- 0ms;
SELECT DISTINCT COUNT((rt1.c2 IN ())), ((((((((rt1.c1 COLLATE NOCASE)OR((((rt1.c0))<=((t0.c0))))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt1.c0)))))OR(((rt1.c2) NOT BETWEEN (403150520) AND (rt1.c0)))))AND(CASE WHEN t0.c0 THEN rt0.c2 END)), LEAD(((((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0)))+((rt1.c2 IN ()))), (((((((('-329950853')AND(rt0.c2)))OR(rt1.c2)))OR((vt0.c0 IN ()))))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))), ((rt0.c1)IS NOT(rt0.c1)) COLLATE NOCASE) OVER () FROM rt0, rt1, vt0 WHERE ((((('639725311') IS FALSE)) NOT BETWEEN ((((('''o')AND(NULL)))OR(NULL))) AND (((('486015478'))=(('523931070'))))));SELECT (~ (((rt0.c1)>(vt0.c0)))) FROM vt0;SELECT ALL LTRIM((+ (rt1.c2)), ((rt1.c0) IS TRUE)), (x'' IN ()), (((((((((rt0.c0)AND(vt0.c0)))OR('搯1F<')))OR(rt1.c2)))OR(1489508307)) IN ('0.7698394723063294')) FROM rt0, vt0, t0 ORDER BY json_insert(((vt0.c0)&(vt0.c0)), ((vt0.c0) NOT NULL), ((((rt0.c0)AND('76')))OR(rt1.c1)))  NULLS LAST;SELECT ALL CASE ((((rt0.c0)AND(rt0.c1)))OR(rt1.c0))  WHEN rt0.c0 COLLATE NOCASE THEN ((((((((rt1.c2)AND(rt1.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(rt1.c0)) END, CAST(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c0 END AS REAL), ((((vt0.c0 IN ())))<=(((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((t0.c0)))))) FROM rt1, vt0, t0, rt0; -- 0ms;
SELECT x'3674' FROM t0, rt0, vt0; -- 0ms;
SELECT ALL LIKE(((t0.c0)==(rt0.c0)), TOTAL(rt0.c1)) FROM vt0, rt1, rt0, t0; -- 0ms;
SELECT DISTINCT TOTAL(((((((((rt0.c0)OR(rt0.c2)))OR('-1689486508')))OR(rt0.c2)))OR(rt1.c1))) OVER (), (~ (ABS(t0.c0))), (((rt0.c1)==(rt1.c2)) IN ()) FROM rt1, t0, vt0, rt0; -- 0ms;
SELECT (((((t0.c0))<=((vt0.c0))))+(((rt0.c0) IS TRUE))) FROM t0, vt0 INNER JOIN rt1 ON NULL FULL OUTER JOIN rt0 ON GLOB(rt0.c1 COLLATE BINARY, ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2))); -- 0ms;
SELECT DISTINCT (((rt1.c1))>((vt0.c0))) COLLATE RTRIM FROM rt1, t0, vt0, rt0 WHERE ('u') ORDER BY (NOT ((+ (rt1.c0)))); -- 0ms;
SELECT ((((('P홝Oz쉤~', rt1.c1, rt1.c0))<>((rt1.c1, rt0.c0, rt0.c1))))<<(SUM(rt0.c2))) FROM t0 WHERE (((CAST(x'' AS INTEGER))==(((((x'42ec')AND(1466057634)))OR(x''))))) GROUP BY (rt1.c2 COLLATE RTRIM IN ());SELECT ((HEX(DISTINCT rt1.c2)) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((rt0.c2 IN ()))) FROM rt0;SELECT DISTINCT rt0.c0, ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))IS NOT(((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))), (((((((((((((vt0.c0 IN (x'')))OR(NULL)))AND((+ (vt0.c0)))))OR(SUM(rt1.c2))))AND(LTRIM(rt0.c1, rt1.c2))))OR(json_array_length(t0.c0, rt1.c2))))AND(NULL)) FROM vt0, rt0, rt1, t0 WHERE (((((1.267322896E9) NOT BETWEEN ('1705087829') AND (x'')))|(-12623729))); -- 0ms;
SELECT DISTINCT ((rt1.c1)GLOB(rt1.c2)) COLLATE RTRIM, vt0.c0 COLLATE RTRIM, UPPER(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0))) FROM vt0, rt1 WHERE (CASE WHEN ((((x'')AND(0Xbbeb988)))AND(0.4218490312232237)) THEN CASE -1.176736553E9  WHEN 'Eᴰ5D' THEN NULL END WHEN (((-1.293751317E9, 3.0277359E7, NULL))==(('1123185766', NULL, 0.18469362859317928))) THEN (- (-1590770454)) WHEN (0Xffffffffa33da6f9 IN ()) THEN x'4fe34fdf' COLLATE NOCASE ELSE (NULL IN ()) END);SELECT ALL (((rt1.c2 IN ())) NOT BETWEEN (rt0.c1) AND (774003739 COLLATE NOCASE)) FROM t0;SELECT DISTINCT ((((rt0.c1)OR(((t0.c0)>(vt0.c0)))))AND((NOT (0.9023952608642063)))) FROM rt1, t0, vt0;SELECT COUNT(CAST(rt0.c0 AS NUMERIC)) OVER ( PARTITION BY CAST(LIKELY(rt0.c2) AS INTEGER), (+ ((NOT (rt1.c1)))) ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt1, t0, rt0 WHERE ((((((NULL)) BETWEEN ((0.8885154788214621)) AND ((835371590))))*(((0.6397824821358536)<<(x''))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt1 WHERE (((((((((((0.2729190223705903)AND(NULL)))AND(NULL)))AND(NULL)))AND('361027265')))IS NOT(((x'e8f5')GLOB(-1e500))))) ORDER BY (- (((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c0)))) ASC;SELECT DISTINCT (+ (rt1.c2)), CASE ''  WHEN (((rt0.c1, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, x'ec7a', vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c0))) THEN ((((((((((((rt0.c1)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))AND(NULL)))AND(t0.c0)))AND(rt1.c0)) ELSE AVG(rt1.c2) END, ((((rt1.c1)OR(((rt0.c0) IS FALSE))))OR(SQLITE_COMPILEOPTION_GET(rt0.c1))) FROM t0, rt0, vt0 WHERE (json_patch(0.10981452593101482 COLLATE BINARY, CASE NULL  WHEN '-1899041577' THEN NULL ELSE '-1143117969' END)) GROUP BY ((((rt1.c0) NOTNULL))IS(NULL)) HAVING (+ (x'')) LIMIT 1259126661 OFFSET -1816535282;SELECT DISTINCT (- (((t0.c0) BETWEEN (rt1.c0) AND ('-1923419802')))) FROM rt0, vt0, rt1, t0 WHERE ((((((0.6577552390870472)||(0X3c554eae))))<>((((((NULL)OR(0.9058935071334202)))AND(NULL)))))); -- 0ms;
SELECT DISTINCT ((((((((rt1.c2 COLLATE RTRIM)OR((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt1.c1, t0.c0)) AND ((vt0.c0, rt1.c1, rt0.c1))))))OR(NULL)))OR(((vt0.c0)&(vt0.c0)))))OR(((vt0.c0)<<(t0.c0)))), MAX(t0.c0 COLLATE NOCASE) COLLATE RTRIM, ((((x'') BETWEEN (rt1.c2) AND (t0.c0))) BETWEEN ((+ (rt1.c2))) AND ((rt0.c0 IN ()))) FROM vt0 FULL OUTER JOIN rt1 ON ((LIKE(x'', t0.c0))/(CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN t0 ON (((rt0.c0 IN (vt0.c0, rt0.c1))) IS TRUE) RIGHT OUTER JOIN rt0 ON ((((((rt1.c0) IS FALSE))AND(((vt0.c0)<=(rt0.c1)))))OR((+ (t0.c0)))) WHERE (((CAST('348488265' AS REAL))OR((('270914137') NOT BETWEEN (x'') AND ('280509283')))));SELECT DISTINCT ((((((((rt0.c0)AND(t0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt1.c0)) COLLATE RTRIM, (((vt0.c0)) BETWEEN ((((rt1.c1) NOT BETWEEN (0xffffffffda41387a) AND (rt1.c0)))) AND ((((rt1.c0)==(rt0.c2))))), ((rt1.c1) BETWEEN (NULL) AND (rt1.c2)) COLLATE NOCASE FROM t0 WHERE ((((((NULL)*(-907139561))))<>(((+ (x'6b86'))))));SELECT rt0.c0, CAST(ABS(DISTINCT rt0.c1) AS INTEGER), CASE WHEN ((rt1.c1)%(rt1.c2)) THEN ((vt0.c0) ISNULL) WHEN ((rt1.c0)<('P|e	D')) THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)) WHEN ((rt0.c2)|(rt1.c1)) THEN t0.c0 COLLATE NOCASE END FROM rt1, t0, rt0 WHERE (((CAST(NULL AS REAL))|(((0.772842604503144)<=('6F')))));SELECT DISTINCT ((x'')<<(CASE NULL  WHEN rt1.c1 THEN rt1.c2 END)) FROM t0, rt1, rt0, vt0 WHERE (((((CASE WHEN NULL THEN 0.9922509421371865 ELSE 0.8123663159517023 END)OR((((((((('zႂ')AND(NULL)))AND('835371590')))OR('-2020846316')))AND(0.05494779029334618)))))OR(((0.9499481915265025) NOT BETWEEN (0x43cf9ee4) AND (x''))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((((rt0.c1)AND(t0.c0)))OR(json(rt1.c2))))OR(((rt1.c2)IS(rt0.c0))))) OVER () FROM rt0, vt0, rt1, t0 WHERE (((('뼢?폟qJFr4眬' IN ()))/(('P,k^2GXnO' IN ())))) GROUP BY (((((rt0.c2) IS TRUE)))>((((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c1))))) ORDER BY ABS(DISTINCT rt0.c1) COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT ((LIKE(rt1.c2, '0.40641140298732137', '0')) NOT BETWEEN ((((rt0.c1, NULL, '-1929116284')) BETWEEN ((rt0.c0, rt1.c2, rt1.c0)) AND ((rt0.c0, rt1.c1, rt1.c1)))) AND (((vt0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))) FROM rt0;SELECT DISTINCT COUNT(*), ((MAX(t0.c0))GLOB(((rt1.c2) ISNULL))), LOWER((rt0.c2 IN ())), SUM(CAST(rt0.c2 AS TEXT)) OVER (), TOTAL(CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM) OVER () FROM vt0 WHERE (x'');SELECT ((rt0.c0) NOT NULL) COLLATE NOCASE FROM rt0, t0, vt0 WHERE (((((0Xffffffff934f8bde)>(0x4ca70b9f))) BETWEEN (((x'')<(1.098287516E9))) AND (((((((((NULL)OR(1090844021)))OR(41136218)))OR(1090844021)))OR(0.3696615080805533))))) GROUP BY t0.c0; -- 1ms;
SELECT DISTINCT -1170633391 FROM rt0, t0, vt0; -- 0ms;
SELECT ((((((((((rt0.c2)&('+Q')))AND((((rt1.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt1.c0, vt0.c0, rt1.c0))))))AND(CASE rt1.c2  WHEN t0.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt1.c1)<=(t0.c0)))))AND((rt0.c0 IN (rt0.c1, rt1.c1)))) FROM rt0, rt1, vt0;SELECT DISTINCT CAST((~ (0.6641905685361654)) AS INTEGER) FROM t0, rt0, vt0 WHERE ((CASE '1686390943'  WHEN 0.9785456520193313 THEN '1526265454' WHEN NULL THEN 0.5298284195010918 WHEN -1895390602 THEN 0.18659668221957515 ELSE 0Xffffffffe297ffd4 END IN ())) LIMIT -390407172; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN ())) ISNULL), (((rt1.c0)) BETWEEN ((((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)))) AND (((+ (t0.c0))))), CAST(CASE WHEN rt1.c0 THEN 1.526265454E9 WHEN 'jy(o' THEN rt0.c1 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END AS TEXT), (- ((t0.c0 IN (x'bb96')))), (((((rt1.c2) IS TRUE)))>=((rt0.c2 COLLATE BINARY))) FROM rt0, t0, vt0, rt1; -- 0ms;
SELECT x'6cf7' FROM vt0 WHERE ((((('8ᕢM㞌)ys')) NOT BETWEEN ((-1522267155)) AND ((x''))) IN ())); -- 0ms;
SELECT ALL LAG((0xffffffffb27582fb IN ()), '', TYPEOF(NULL)) OVER ( GROUPS  UNBOUNDED PRECEDING), (((rt1.c2 IN ()))||(((rt0.c1)GLOB(rt0.c1)))), ((((((t0.c0)+(t0.c0)))AND(CASE WHEN rt1.c1 THEN vt0.c0 END)))OR(SQLITE_SOURCE_ID())), CAST(((vt0.c0) NOTNULL) AS REAL), json((rt1.c0 IN ())) FROM rt0, rt1, t0 RIGHT OUTER JOIN vt0 ON CAST(rt1.c1 AS INTEGER) COLLATE RTRIM; -- 1ms;
SELECT DISTINCT CASE WHEN STRFTIME(t0.c0, rt0.c1, rt1.c2) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) ELSE vt0.c0 END, FIRST_VALUE((RTRIM(rt1.c0) IN ())) OVER (), RANK() OVER () FROM rt1, vt0, t0 WHERE ((~ (CAST(NULL AS TEXT)))) GROUP BY (((('sN' COLLATE BINARY)OR(((rt1.c1)|(rt1.c1)))))OR((t0.c0 IN ()))) HAVING ((((((0.8203839033097121)GLOB(rt0.c1)))AND((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))))AND(t0.c0)) LIMIT -50545883 OFFSET 950383386;SELECT ((rt0.c1)==(((((rt0.c2)AND(rt0.c1)))AND(0.1645867874239516)))) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON ((((((((vt0.c0)OR(rt0.c1)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c2)) COLLATE RTRIM CROSS JOIN t0 ON ((((rt1.c0)OR(t0.c0)))AND((NOT (0X2031acdc))));SELECT DISTINCT (((((('㳣xgj')OR('647713589')))AND(rt1.c1))) NOT NULL) FROM rt1, t0; -- 0ms;
SELECT FIRST_VALUE((((- (rt0.c0)))AND((rt0.c2 IN (rt1.c1))))) OVER () FROM t0, rt0, rt1 ORDER BY ((rt1.c1)&(vt0.c0)) COLLATE NOCASE DESC;SELECT ALL PRINTF(rt1.c0 COLLATE BINARY) FROM rt1, vt0, t0 WHERE ((~ (CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c2)OR(t0.c0)))), CASE '76'  WHEN COALESCE(DISTINCT rt1.c1, rt1.c0) THEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (t0.c0)) ELSE (~ (rt1.c0)) END, (((rt1.c1)+(rt0.c2)) IN (((t0.c0)=('0.7182123004488514')))) FROM rt1, t0, rt0 WHERE ((- ((~ ('0.9627187240874772'))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c2)=('}#ꦒ^')) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) WHEN MAX(rt1.c0) THEN rt1.c2 COLLATE BINARY WHEN NULLIF('-241077274', vt0.c0) THEN LOWER(rt0.c0) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END FROM t0, vt0, rt1 WHERE ((('-1335970661' IN ()) IN ((x'' IN ())))) GROUP BY (~ (((0.8467000994411668) IS TRUE))), (rt0.c1 IN (t0.c0)) COLLATE NOCASE, (~ (CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) ORDER BY '-838993843' DESC  NULLS FIRST;SELECT ALL LAST_VALUE(CASE WHEN (rt1.c1 IN (t0.c0, NULL)) THEN ((((rt0.c1)OR(rt1.c2)))OR(rt1.c0)) WHEN (rt1.c0 IN ()) THEN CASE rt1.c2  WHEN rt1.c1 THEN rt0.c1 END WHEN (((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN ((rt1.c1) NOT NULL) END) OVER () FROM t0, rt1, rt0 WHERE ('-241077274'); -- 0ms;
SELECT ALL (~ (0.268174662938487)) FROM rt0; -- 0ms;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (NULL) UNION ALL SELECT ALL ((((rt1.c2) BETWEEN (t0.c0) AND (rt0.c0)))IS(((x'') ISNULL))) FROM rt1, vt0 WHERE ((((((NULL)) BETWEEN (('㞩쉆')) AND ((NULL))))==(0X21355eae))) ORDER BY CAST((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0))) AS INTEGER)  NULLS FIRST;SELECT DISTINCT HEX(x'') FROM rt1, vt0, rt0, t0 WHERE ((((((('1568740837')AND('')))AND(x''))) NOT BETWEEN (LOWER(0.4616691141958279)) AND ((1649943791 IN ())))); -- 0ms;
SELECT ((((rt1.c0) NOT NULL)) IS FALSE) FROM t0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t0.c0 THEN rt1.c1 END) OVER (), ROW_NUMBER() OVER ( GROUPS BETWEEN ((NOT (rt0.c0)) IN ()) PRECEDING AND  CURRENT ROW EXCLUDE TIES), ((rt0.c2 COLLATE RTRIM)GLOB((rt1.c1 IN ()))), ((((t0.c0) ISNULL))<(rt1.c0 COLLATE BINARY)), COUNT(((rt0.c1)==(t0.c0))) FROM vt0, t0 WHERE (CASE LOWER(0.08015757765592701)  WHEN ((NULL)==(3.61027265E8)) THEN CASE 2.28087546E8  WHEN NULL THEN '' ELSE NULL END END);SELECT DISTINCT ((((((rt0.c1)OR(t0.c0)))OR(rt0.c2))) ISNULL) FROM t0, rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT MAX(CAST(rt1.c2 AS BLOB)), ((((((((((((IFNULL(DISTINCT rt1.c1, rt0.c0))OR(vt0.c0 COLLATE NOCASE)))AND(x'' COLLATE BINARY)))AND(rt1.c1 COLLATE BINARY)))OR(((x'') IS FALSE))))OR(rt1.c0)))AND(((rt1.c1) NOTNULL))), CAST(((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)) AS REAL) FROM rt1;SELECT DISTINCT CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 END COLLATE BINARY COLLATE BINARY, COALESCE(DISTINCT ((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)), ((rt0.c1)/(vt0.c0))), CASE WHEN CASE WHEN rt1.c2 THEN vt0.c0 WHEN 0xffffffff9b1b97e5 THEN rt0.c0 WHEN rt1.c1 THEN t0.c0 ELSE rt0.c0 END THEN ((rt0.c0)+(rt0.c2)) END FROM t0, rt1 WHERE ((((((NULL)) BETWEEN (('-1622192521')) AND ((x'b4f32670'))))IS NOT((((('905413592')OR(x'')))OR('')))));SELECT DISTINCT (~ (rt1.c1)) FROM rt0 WHERE (((0.39811924653060693)IS NOT((('t<5')GLOB(NULL)))));SELECT DISTINCT CASE WHEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)) THEN t0.c0 ELSE 0.7791312782083615 END FROM vt0, t0;SELECT ((((vt0.c0)AND(rt1.c2)))OR(rt1.c1)) COLLATE NOCASE, (CAST(rt1.c1 AS TEXT) IN ()), (- (((t0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))) FROM t0, vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC) FROM t0 WHERE ((((x'', x'', NULL)) BETWEEN ((((-5.89360764E8)GLOB(x'c199')), (('-1617997451') NOT BETWEEN (x'') AND (x'')), (('XnZK홝?\r') BETWEEN ('') AND (0Xffffffffc87dadd2)))) AND (((- (6.47713589E8)), (x'' IN ('')), ((0.6006314250898258)|(0X4b31af43)))))); -- 0ms;
SELECT DISTINCT (rt1.c0 IN ('-1735923047')), MIN(CASE WHEN rt0.c0 THEN rt1.c0 END, (~ (rt1.c2))), ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND ((rt1.c1 IN (rt0.c2)))) FROM t0, vt0, rt1;SELECT ((((((((((rt1.c1)AND(rt0.c0)))OR(1363313975)))OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN ((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2)))) AND (((rt0.c1)<(t0.c0)))) FROM rt1, rt0;SELECT DISTINCT CAST(((vt0.c0)-(rt0.c0)) AS REAL) FROM rt0, rt1, vt0, t0 WHERE (CAST(((NULL) IS FALSE) AS REAL)); -- 0ms;
SELECT ((((rt0.c0) IS FALSE))AND('-1184453859')) FROM rt0, vt0, t0, rt1 WHERE ((NOT ((~ (0.7346751720618259))))); -- 0ms;
SELECT ALL HEX(DISTINCT ((rt0.c0)/(vt0.c0))), (~ (((((rt1.c2)AND(t0.c0)))AND(rt1.c0)))), 'Fx' FROM rt1, rt0;SELECT ALL NULLIF(CASE t0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c2)GLOB(rt0.c1))) FROM vt0 WHERE (CASE WHEN (NOT ('-711972664')) THEN ((('0.23904479265085665'))>=(('0.06327716146728002'))) END);SELECT ALL (((+ (rt1.c1)))%(((rt0.c2)AND(rt0.c1)))), rt1.c1, CAST(((rt1.c2)+(rt0.c2)) AS BLOB) FROM rt1, t0, rt0, vt0 WHERE (((((-8.90322982E8) IS TRUE)) BETWEEN (((9.05413592E8) NOT BETWEEN (NULL) AND (0.3382426893454311))) AND (((('Fy}+M4lDE', 0.13590111411080075, NULL)) BETWEEN ((0.6610032832758593, NULL, NULL)) AND ((x'6e21', 0.5385968672500415, x'a8dd44a4')))))); -- 0ms;
SELECT 'fpeB', (+ (((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))), ROW_NUMBER() OVER () FROM vt0, t0, rt0 WHERE (((CASE '-1383501006'  WHEN '' THEN NULL WHEN 0.03128515073012872 THEN NULL WHEN 0.8575678455143886 THEN 0.8878894828152468 WHEN NULL THEN '330206172' WHEN '' THEN 0Xffffffff8978ebc1 END) BETWEEN (TRIM(DISTINCT 'xx2/S')) AND (CASE NULL  WHEN 'pBDyPGc' THEN NULL WHEN x'' THEN 0.03597582062875815 WHEN NULL THEN NULL ELSE 876201323 END)));SELECT (((((rt0.c0))>((rt0.c0))))||((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))), ((rt0.c1) NOT NULL) COLLATE NOCASE, ((CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 ELSE rt0.c2 END) IS TRUE) FROM rt0, vt0 WHERE ('e<jJ/8');SELECT DISTINCT (NOT ((rt1.c1 IN (rt0.c0)))) FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT IFNULL(json(rt0.c2), rt1.c1 COLLATE BINARY), ((CAST(rt1.c0 AS TEXT)) BETWEEN ((((rt1.c1))<=((t0.c0)))) AND (((rt1.c1)||(vt0.c0)))), ((NULLIF(rt0.c0, vt0.c0))GLOB(((rt1.c2)>=(rt1.c2)))) FROM rt1, t0 WHERE ((('8N5!uI4{?')GLOB(x'')) COLLATE BINARY) ORDER BY '^暄羭须\\rM' DESC;SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))*((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c2))))) FROM t0, rt1, vt0, rt0 WHERE ((((0.387867826661232 COLLATE NOCASE))!=(((x'' IN (x'', 0.7880178886151356)))))); -- 0ms;
SELECT ALL (NOT (AVG(vt0.c0))) FROM rt1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE NOCASE) NOTNULL) FROM t0, rt0, rt1, vt0; -- 0ms;
SELECT ((((NULL)+(0.699845267719778))) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE((((rt0.c0, vt0.c0, rt1.c0)) NOT BETWEEN ((rt0.c0, t0.c0, rt1.c1)) AND ((0.49566586045016925, -1.217264221E9, vt0.c0))), ((rt0.c2)|(rt1.c0)), TRIM(DISTINCT rt0.c1, rt1.c2), rt1.c0 COLLATE RTRIM), CASE (((t0.c0, rt0.c0, t0.c0, rt0.c2, NULL)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c2, rt0.c0, rt1.c2)) AND ((rt1.c1, rt1.c2, rt0.c1, rt0.c0, vt0.c0)))  WHEN ((t0.c0)|(rt0.c1)) THEN TRIM(DISTINCT rt0.c0, rt1.c2) END, ((((((vt0.c0, vt0.c0, rt1.c2))<((t0.c0, '', rt1.c0)))))!=((TRIM(t0.c0, rt0.c1)))) FROM vt0, rt1 WHERE ((CASE 0.1623646752947494  WHEN '330206172' THEN NULL END IN ()));SELECT ALL (~ (rt0.c2 COLLATE RTRIM)) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((+ (rt1.c2))))!=((NULL))), ((((((((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c1)))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))AND(rt0.c1 COLLATE NOCASE)))AND(((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))))OR('cJR[C^')), (((rt1.c0)<=(rt1.c0)) IN (CHAR(rt0.c2))) FROM rt1, rt0;SELECT LIKELY(DISTINCT ((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))) FROM rt0, vt0, rt1 WHERE (CASE WHEN 759568964 COLLATE BINARY THEN ((('>){lbr')) BETWEEN ((0Xffffffff9a3fe9c1)) AND ((''))) WHEN (((' '))<=((NULL))) THEN (('1630937406') BETWEEN ('348488265') AND (NULL)) WHEN '-1056425773' THEN (+ (x'3cb0')) ELSE (+ (x'06a19f5a')) END) ORDER BY ((CAST(rt1.c2 AS TEXT))AND(CAST(t0.c0 AS TEXT)))  NULLS FIRST;SELECT CUME_DIST() OVER () FROM rt0, vt0, t0, rt1 WHERE ((((- ('>R6qoai')))<>(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT RANK() OVER (), (vt0.c0 COLLATE BINARY IN (NULL)), CASE ((rt0.c2)==(rt0.c0))  WHEN ((((rt1.c1)AND(rt0.c1)))OR(rt1.c2)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))) ELSE ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END FROM rt0, rt1, t0 WHERE (CASE WHEN (- ('-1923072783')) THEN ((((((((((((NULL)AND('1958622571')))OR('')))OR(x'')))AND(x'520e')))AND(NULL)))OR(x'')) WHEN (('') BETWEEN (0.4176781334200167) AND (0.5128375163521088)) THEN json_insert('~?C', NULL, '5\') WHEN ('-1707087423' IN (0.8972762437230422)) THEN (((7.55236357E8))<>((0.9347895960682296))) END);SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) FROM rt1 WHERE ((+ ((0.18164535082939826 IN ())))) GROUP BY 'ET';SELECT DISTINCT rt0.c2, (((rt0.c0 IN ()))!=((rt1.c0 IN ()))), ((((rt0.c2)IS(rt0.c0)))==(((0.6421767537329296)<=('-1833524485')))) FROM rt0, rt1, t0 WHERE ((+ (CAST(0x4104f575 AS TEXT)))); -- 0ms;
SELECT DISTINCT (((- (rt0.c2))) IS TRUE) FROM t0, vt0, rt1, rt0 ORDER BY ((((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c0))) NOT BETWEEN (LIKELIHOOD(DISTINCT rt1.c2, 0.9494758560488827)) AND (((rt0.c2)<>(rt0.c0))))  NULLS FIRST; -- 1ms;
SELECT ALL (((rt1.c2, rt1.c1, rt0.c1)) BETWEEN ((CAST(rt1.c1 AS INTEGER), ((vt0.c0)OR(rt1.c1)), (vt0.c0 IN (rt1.c0, rt1.c0)))) AND (((rt0.c0 IN ()), ((NULL) NOTNULL), ((((rt0.c0)OR(rt1.c1)))AND(rt0.c1))))) FROM t0 WHERE ((((((('')AND(-1.602511013E9)))OR('1274417473')))<<(DATETIME('2c1ᱞ\yw', NULL, -1.046227344E9))));SELECT ((rt1.c2) IS TRUE) FROM vt0, t0;SELECT rt0.c1, LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(rt1.c1)), 0.5518351399706033), COUNT(CASE WHEN rt0.c1 THEN rt0.c1 END) OVER () FROM rt1, rt0 LIMIT 1526265454 OFFSET 117261748;SELECT DISTINCT ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt1.c2)) COLLATE NOCASE FROM vt0, rt0;SELECT (((NOT (rt0.c2)))OR((rt1.c0 IN (rt0.c1)))) FROM t0, rt0, rt1, vt0; -- 0ms;
SELECT (((((((rt0.c1)AND(1424551167)))AND(rt0.c0))))<>((rt0.c0))) FROM vt0, t0, rt0, rt1; -- 1ms;
SELECT ALL NULL FROM rt1, rt0; -- 0ms;
SELECT DISTINCT 0X30388b57 FROM vt0, rt0, t0, rt1 UNION SELECT DISTINCT (((('1794096527')>>(rt1.c0)))OR(rt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CAST(IFNULL('-1673583323', NULL) AS TEXT));SELECT DISTINCT COUNT(((rt1.c2)>>(rt1.c1))) OVER (), CAST((~ (rt1.c0)) AS INTEGER), ((rt1.c1) ISNULL) FROM t0, rt1, rt0, vt0 WHERE ((((x'')) BETWEEN (((('-1293751317') NOTNULL))) AND (((('') NOT BETWEEN (x'00d4') AND (NULL)))))); -- 0ms;
SELECT ALL ((((rt1.c2)AND(vt0.c0)))OR(rt1.c2)) COLLATE BINARY FROM rt1, t0, vt0 WHERE ((((CHANGES()))==(('0.8855384427685963')))) ORDER BY ((rt0.c0) NOTNULL) DESC;SELECT ALL DATETIME(((rt0.c0) IS FALSE), ((rt1.c1)<<(rt1.c0)), ((((t0.c0)OR(t0.c0)))OR(vt0.c0))) FROM rt1;SELECT NTILE(NULL) OVER ( ORDER BY ((((((((((((((('-1061733933', rt0.c2, t0.c0)) BETWEEN ((vt0.c0, rt1.c1, rt1.c0)) AND ((-181894692, rt0.c2, rt1.c2))))OR(t0.c0)))OR(((vt0.c0)<<(rt0.c2)))))AND(('P臜1' IN (t0.c0, rt0.c1)))))AND(((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(rt1.c0)))OR(rt1.c2)))))OR(json(rt1.c2))))OR(rt1.c1))  NULLS FIRST, (((((vt0.c0 IN (rt1.c2)))OR(((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((((t0.c0)OR(rt1.c2)))AND(rt0.c0)))) DESC  NULLS FIRST), ((~ (t0.c0)) IN ()), rt0.c0 FROM rt1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT (CAST(rt1.c1 AS INTEGER) IN ()) FROM t0, vt0, rt0 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c2)) THEN (rt0.c1 IN (vt0.c0)) ELSE rt0.c2 END;SELECT CASE ((rt0.c1)LIKE(rt0.c2))  WHEN CAST(t0.c0 AS REAL) THEN COUNT(*) ELSE rt1.c1 END FROM rt1, rt0, t0 WHERE ((((x'4012')) BETWEEN (((- (774003739)))) AND ((((x'ad02') BETWEEN (0.9847589123464148) AND ('Rze')))))); -- 0ms;
SELECT DISTINCT (((((rt1.c2, rt0.c1, rt1.c1))<=((vt0.c0, NULL, vt0.c0))))OR((NOT (vt0.c0)))) FROM vt0, rt0, t0 WHERE ((('' IN ()) IN ()));SELECT ALL FIRST_VALUE((((rt0.c1 IN (rt0.c0))) IS TRUE)) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND (((CAST(rt1.c0 AS REAL), ((rt1.c1)LIKE(rt0.c2)), (((t0.c0, rt1.c1, rt1.c2))<((rt0.c2, t0.c0, rt1.c0)))))>((((vt0.c0) IS TRUE), x'', ((t0.c0)*(NULL))))) FOLLOWING) FROM rt0, t0, rt1;SELECT DISTINCT (ABS(t0.c0) IN (('KP辞' IN ()), CAST(rt0.c2 AS TEXT))) FROM vt0 WHERE (((x'9402' COLLATE NOCASE)<(((NULL)IS NOT('dE\n9%[Fu'))))) LIMIT 380698317;SELECT DISTINCT x'a1f5', (((rt1.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()), CASE (((1.484970362E9))<(('Y')))  WHEN rt1.c2 COLLATE RTRIM THEN CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END END, (CASE t0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE 0X29541c5e END IN (((rt1.c0) NOT BETWEEN (rt0.c0) AND (0.9666614216331715)))), ((json_array_length(rt1.c0, '1180893340')) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (-1.647812325E9)) FROM rt1, rt0, t0, vt0 WHERE (((('-2003624804')<>(NULL)) IN ())); -- 0ms;
SELECT ALL NULLIF(t0.c0, rt1.c0) COLLATE BINARY FROM t0 WHERE (NULL);SELECT DISTINCT t0.c0, CAST('-662172695' AS NUMERIC), CASE ((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1))  WHEN ((-236363445) BETWEEN (rt0.c2) AND (rt0.c1)) THEN (~ (rt0.c0)) WHEN LOWER(vt0.c0) THEN rt0.c0 COLLATE BINARY WHEN (((rt0.c0, rt0.c2, rt1.c2))>=((rt0.c1, rt0.c1, rt1.c1))) THEN -1e500 COLLATE RTRIM END FROM rt0;SELECT (((rt0.c0) ISNULL) IN (((((rt0.c0)AND(rt1.c2)))OR(vt0.c0)))) FROM t0, rt0, rt1, vt0; -- 0ms;
SELECT (~ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) FROM vt0, rt1, rt0 WHERE (((((((((((x'')OR('jX')))OR(0.6955201613946728)))OR(x'')))AND(x''))) NOT BETWEEN (')so_3A&' COLLATE NOCASE) AND (CASE 0Xffffffffa07b9f5b  WHEN 0.12048219653259373 THEN '1277347204' END))) GROUP BY ((((((((CAST(vt0.c0 AS NUMERIC))AND((~ (rt1.c1)))))AND((- (rt0.c0)))))AND((~ (rt0.c2)))))OR((NULL IN ()))), NULL, rt1.c0; -- 0ms;
SELECT ALL (CAST(rt0.c1 AS TEXT) IN ()), (LIKELY(vt0.c0) IN ()), ((((rt0.c1 IN (vt0.c0, 0.14923625427966392)), ((rt1.c2)IS(rt0.c1)), (- (vt0.c0))))!=((x'', TIME(rt0.c0, rt0.c2, rt1.c0), vt0.c0 COLLATE RTRIM))) FROM rt0, rt1 GROUP BY SQLITE_COMPILEOPTION_GET(vt0.c0) COLLATE BINARY;SELECT ((((((rt1.c1)OR(0.992022928500437)))OR(t0.c0)))GLOB(((((rt0.c2)AND(t0.c0)))OR(rt0.c1)))) FROM vt0 CROSS JOIN rt0 ON ((t0.c0)IS NOT(vt0.c0 COLLATE BINARY)) WHERE ((('4&') IS FALSE) COLLATE BINARY);SELECT DISTINCT (((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((0.9748453598198628, rt1.c0, CAST(rt1.c1 AS REAL))) AND (((rt0.c2 IN ()), rt1.c0 COLLATE RTRIM, (NOT (rt1.c1))))) FROM rt1 NOT INDEXED WHERE (((~ ('647713589')) IN ()));SELECT DISTINCT ((((rt0.c1)*(t0.c0))) IS FALSE) FROM rt1 WHERE ((((((- ('(F홝/')))AND(CAST('-1739540817' AS REAL))))OR(0x3ab3c40a COLLATE RTRIM)));SELECT ALL PERCENT_RANK() OVER () FROM rt0, t0; -- 0ms;
SELECT ALL NTH_VALUE(((CAST(t0.c0 AS INTEGER)) ISNULL), ((((t0.c0)IS(t0.c0))) NOT NULL)) OVER () FROM t0 WHERE ((+ (0.7867616374001412))); -- 0ms;
SELECT (LIKELIHOOD(t0.c0, 0.10872844061751208) IN ()) FROM rt1, vt0 INNER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((0.6577552390870472) NOT BETWEEN (rt0.c2) AND (t0.c0))) AND (('71070597' IN (vt0.c0, rt1.c2)))) WHERE (((((x'') NOTNULL))|((x'' IN (x'')))));SELECT ALL CASE rt0.c2  WHEN ((rt0.c0)*(rt0.c0)) THEN rt1.c2 WHEN x'f028cde9' THEN (~ (t0.c0)) WHEN x'7ad4' THEN ((rt1.c2)>>(rt1.c1)) ELSE rt1.c0 END, CAST(MAX(rt0.c2) AS BLOB), (0.9329110111508809 IN (NULL COLLATE BINARY)) FROM rt1;SELECT ((t0.c0 IN ()) IN ()) FROM rt1, vt0, t0 GROUP BY CASE ((rt1.c1) BETWEEN (-821787284) AND (vt0.c0))  WHEN 0.7880781974281323 THEN ((rt1.c2)LIKE(rt1.c1)) END, ((((((rt1.c2)OR(rt0.c2)))OR(t0.c0))) IS FALSE), '' HAVING COUNT(COUNT(*)) ORDER BY (((((rt0.c0, rt0.c2, t0.c0)) BETWEEN ((rt0.c0, vt0.c0, t0.c0)) AND ((vt0.c0, t0.c0, rt1.c0)))) ISNULL) DESC  NULLS LAST, ((rt1.c0) BETWEEN (rt0.c0) AND (x'')) COLLATE BINARY;SELECT DISTINCT (((t0.c0 IN ())) NOT NULL) FROM rt1 WHERE ((((('-2023567244')>=(0.19771028211906772)))>(((0.41277234419257736) ISNULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ()))>(CASE vt0.c0  WHEN x'8ff0' THEN rt1.c2 END)), CAST((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS TEXT), (((('-1647812325')OR(((rt0.c2) NOTNULL))))OR(MIN('-589360764'))) FROM t0, rt1, vt0 WHERE ((('-306272381') BETWEEN ('-589360764') AND ('P,k^2GXnO')) COLLATE RTRIM);SELECT ALL ((((vt0.c0)>>(rt1.c2))) BETWEEN (vt0.c0) AND ((((vt0.c0))<>((vt0.c0))))) FROM vt0, rt1, rt0, t0; -- 0ms;
SELECT CAST(rt1.c2 COLLATE RTRIM AS INTEGER) FROM rt0, t0, vt0 WHERE (1104757979) LIMIT 1413771448 OFFSET 1528665246;SELECT (((((((((t0.c0)OR(rt0.c0)))AND(rt1.c2)))AND(rt0.c0)))AND(rt0.c0)) IN (COUNT(0.40641140298732137))), CAST(((('cWO3''Kx')) BETWEEN ((rt1.c1)) AND ((t0.c0))) AS NUMERIC), ((((CAST(t0.c0 AS TEXT))AND(CASE t0.c0  WHEN rt1.c2 THEN rt1.c0 END)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))), TOTAL(CASE rt1.c1  WHEN t0.c0 THEN rt1.c2 ELSE t0.c0 END), (- ((rt1.c2 IN ()))) FROM t0, vt0;SELECT DISTINCT ((vt0.c0) ISNULL) COLLATE NOCASE FROM rt0, vt0, rt1, t0; -- 0ms;
SELECT (((((((((rt0.c0 IN ()))OR((NOT (rt0.c1)))))OR(t0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))))AND(((((rt1.c2)OR(vt0.c0)))AND(rt0.c1)))), ((('113190327' IN ())) BETWEEN ((- (vt0.c0))) AND ((+ (rt1.c1)))), (((CAST(rt0.c1 AS BLOB)))==((0X26216eff))) FROM rt1, vt0, rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0, vt0.c0, rt0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c1) IS FALSE), ((-1.602511013E9) IS TRUE))) AND ((((rt1.c0)|(rt1.c0)), ((((rt1.c1)AND(rt1.c2)))AND(vt0.c0)), ((rt0.c0)IS NOT(rt0.c1))))) FROM t0, rt1 WHERE ((+ ((x'' IN ()))));SELECT DISTINCT (+ (CAST(rt1.c2 AS REAL))) FROM rt0, rt1 GROUP BY ((CAST(vt0.c0 AS NUMERIC))<<('-171513716')) HAVING vt0.c0;SELECT DISTINCT (NOT ((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))))), CASE WHEN CASE rt0.c2  WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN x'' ELSE rt0.c2 END THEN rt0.c0 END, ((rt0.c2) BETWEEN (rt1.c0) AND ('1935112146')) COLLATE NOCASE FROM rt0 WHERE ((((- (-2092245808)))<=(((NULL)&(NULL))))) GROUP BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c0 END) BETWEEN (((rt1.c0)LIKE(rt0.c1))) AND (json_array(t0.c0, vt0.c0, rt1.c0, rt1.c2)));SELECT DISTINCT NTILE((((rt0.c1)*(rt0.c0)) IN ())) OVER ( PARTITION BY (((- (rt0.c1))) IS FALSE), (((((rt1.c0))<=((rt1.c2))))IS NOT(((rt0.c2)>>(rt1.c1))))) FROM vt0, t0, rt0 WHERE (((((load_extension(x''))OR((('8M#O~kI]B')+('')))))OR(((0x6136213e) BETWEEN (0.5080990410279689) AND ('-2020846316')))));SELECT DISTINCT LIKE((((rt1.c1))<=((rt0.c1))), ((rt1.c0) IS FALSE)) FROM vt0 WHERE ((535312966 IN ()));SELECT NTH_VALUE((~ (0.31359853904675905)), ((rt1.c1 COLLATE RTRIM)>(TYPEOF(t0.c0)))) OVER () FROM vt0, rt0, rt1, t0 WHERE (((((NULL) NOT NULL)) BETWEEN (0xffffffff8166b46f COLLATE RTRIM) AND ((((0.4994613090973211))>(('-1911266009')))))); -- 0ms;
SELECT ALL ((TRIM(NULL, rt1.c0)) NOT BETWEEN (((t0.c0)*(vt0.c0))) AND (rt1.c2 COLLATE RTRIM)), (((rt1.c0 IN ())) NOTNULL), ((rt0.c0) NOT BETWEEN (0.7192853632240489) AND (rt1.c1)) COLLATE BINARY COLLATE RTRIM, (((rt1.c0)IS NOT('')) IN ()), (NOT (((rt0.c1)>=(rt1.c1)))) FROM rt0, rt1, t0, vt0 WHERE (((COALESCE(DISTINCT 0.4789108810683822, x''))||(CASE WHEN '' THEN x'' WHEN '-1541397682' THEN '-1622192521' WHEN 2.70914137E8 THEN -1.879333007E9 ELSE NULL END))) GROUP BY CASE ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))OR(rt1.c0))  WHEN ((vt0.c0)>=(rt1.c2)) THEN (((rt1.c0))<=((rt0.c1))) ELSE ((rt1.c0) ISNULL) END HAVING NULL; -- 0ms;
SELECT ALL ((((((t0.c0)>>(vt0.c0)))OR(((rt1.c0)GLOB(t0.c0)))))AND((rt1.c2 IN (rt0.c0)))), ((ABS(t0.c0)) IS TRUE), (- (rt1.c2)) COLLATE BINARY FROM vt0, rt0, t0, rt1 WHERE (((((7.04148462E8) NOT BETWEEN ('-2101634374') AND ('s	')))/(SQLITE_VERSION()))); -- 0ms;
SELECT DISTINCT ((t0.c0) IS FALSE) FROM vt0, t0, rt0 WHERE ((NULL COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT (rt1.c1 IN ()) COLLATE BINARY FROM rt1 WHERE ((((- (''))) NOT BETWEEN (((('2')) BETWEEN ((NULL)) AND ((0.3301041009509663)))) AND (((((((((x'5149e333')OR(NULL)))OR(210396038)))AND(0.9233324345313794)))AND(''))))); -- 0ms;
SELECT SUM(((t0.c0)LIKE(vt0.c0))) FROM rt0, rt1, vt0 GROUP BY ('' IN ()) ORDER BY CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS REAL) DESC, ((((t0.c0)OR((t0.c0 IN ()))))OR(rt1.c1 COLLATE NOCASE)) DESC  NULLS FIRST, CAST(-1.692690459E9 AS REAL) DESC  NULLS LAST;SELECT ALL SQLITE_COMPILEOPTION_USED(((rt0.c2)>=(rt0.c0))), CASE ((rt1.c1) NOTNULL)  WHEN 0x529af659 THEN x'' END, vt0.c0 FROM rt1 LIMIT 1047374435;SELECT DISTINCT (NOT (rt0.c1)) COLLATE NOCASE COLLATE BINARY FROM vt0, t0, rt0, rt1 WHERE (0.03546866894904288) LIMIT -1521693781 OFFSET -1293751317; -- 0ms;
SELECT DISTINCT CAST(((((rt0.c2)OR(rt1.c0)))OR(vt0.c0)) AS TEXT), ((((((rt0.c1)AND(rt1.c2)))AND(NULL)))AND(((rt0.c1)/(vt0.c0)))), ((((rt1.c1 COLLATE NOCASE)AND(((rt1.c1)>>(t0.c0)))))AND(TOTAL(rt1.c2))) FROM rt1, t0 WHERE ((((((((((((0.6387139630832639)AND(x'0921c3a6')))OR('774003739')))AND(x'')))OR(NULL))))>=(((+ (0xffffffffaeb87908)))))) GROUP BY (CAST(vt0.c0 AS TEXT) IN ()) ORDER BY NULL ASC  NULLS LAST;SELECT DISTINCT rt1.c0 FROM vt0, rt0, rt1 WHERE (((x'' COLLATE NOCASE)|((- (NULL))))); -- 0ms;
SELECT CASE WHEN CAST(rt1.c1 AS INTEGER) THEN NULL END, x'' COLLATE BINARY, (~ (NULLIF(rt0.c1, rt1.c2))) FROM vt0, rt0, t0 LIMIT 556626479 OFFSET -1335970661;SELECT DISTINCT COUNT(*), LAST_VALUE((((rt0.c2)%(0.36211523628468023)) IN ((+ (rt0.c0)), ((rt0.c1)/(rt0.c1))))) OVER (), ((CAST(rt0.c0 AS TEXT))OR(((rt1.c0) IS FALSE))) FROM rt0;SELECT DISTINCT (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) IN ()), ((((NULL COLLATE NOCASE)AND(((((rt0.c1)OR(rt0.c1)))AND(rt1.c1)))))OR(((rt0.c2)-(rt0.c0)))), (((rt1.c1, rt0.c1, rt0.c2)) BETWEEN (((((vt0.c0, rt0.c0, NULL))<=((rt0.c2, t0.c0, rt1.c1))), ((((t0.c0)AND(rt1.c1)))AND(x'648c')), ((rt0.c2) IS FALSE))) AND ((((((t0.c0)OR(rt0.c0)))AND('77627895')), COUNT(rt0.c2), '烂j'))) FROM t0, rt0, rt1;SELECT DISTINCT (((NOT (rt0.c1)))<>((((rt0.c0, rt1.c2, rt0.c2)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((0.8050527448715482, rt0.c0, rt0.c0))))) FROM rt0, rt1, vt0 WHERE (((((0.7065044998897071) BETWEEN (x'') AND (NULL)))LIKE(((('-2070200739')) BETWEEN ((0Xffffffffdeef993a)) AND ((x'')))))); -- 0ms;
SELECT ALL ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM FROM t0, vt0, rt1, rt0; -- 0ms;
SELECT ((rt1.c0 COLLATE NOCASE)&((rt1.c2 IN ()))) FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c2) IS FALSE) COLLATE NOCASE;SELECT DISTINCT (~ (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)))) FROM t0, rt1 WHERE (CAST(CASE WHEN x'' THEN '722061704' END AS INTEGER));SELECT ALL CASE WHEN (rt0.c0 IN ()) THEN (rt1.c0 IN ()) ELSE ((0x2b09c988) BETWEEN (rt0.c1) AND (0x6c6ffe82)) END FROM rt0, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT ((rt0.c0)+(rt1.c1)) COLLATE NOCASE COLLATE RTRIM FROM rt1, rt0, vt0, t0 WHERE ((((0.04130889548084371))=(((~ ('0.3233106171053375')))))); -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c1 AS NUMERIC))) FROM rt1, rt0, t0 WHERE ((((((0.1078860287804968)) NOT BETWEEN (('1286015903')) AND (('-1602511013')))) NOT BETWEEN (CASE WHEN NULL THEN x'' END) AND ((('xnzk홝?\r')>>(0.024065836042460265))))); -- 0ms;
SELECT LEAD((x'' IN ()), (((t0.c0 IN ())) BETWEEN (((NULL) IS TRUE)) AND (0.7708959599041727)), ((((((vt0.c0)OR(t0.c0)))OR(NULL))) BETWEEN (((t0.c0)*(t0.c0))) AND (((vt0.c0)+(t0.c0))))) OVER (), LIKELIHOOD(LIKELY(rt0.c0), 0.7289622132481548), CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))  WHEN ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN LTRIM(rt0.c0) END, COUNT(COUNT(*)), ((LIKELY(DISTINCT t0.c0)) NOT BETWEEN (MAX(rt0.c2)) AND (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) FROM t0, vt0;SELECT DISTINCT vt0.c0 FROM rt1, rt0, t0, vt0 WHERE ((((NULL, '㢗-z]B6i''n', '0.22850688137105557')) NOT BETWEEN (((NULL IN ()), ((x'') NOTNULL), ((NULL)>>(x'')))) AND ((('sl^k' IN ()), ('-1647812325' IN ('-1346192620', x'')), ((NULL)||(-1.602511013E9)))))); -- 0ms;
SELECT (SUM(rt1.c0) IN ()) FROM vt0, rt0, rt1, t0 WHERE (highlight(TRIM(DISTINCT '', NULL), (('-1647812325') IS FALSE), CAST(x'9ad9' AS BLOB), (((x'fda2', NULL, '-1635189392'))>((0x7ac79255, 0.6334634217690083, 0.5674399131396013)))));SELECT DISTINCT LIKELY(rt0.c0) COLLATE NOCASE, (((((NULL) BETWEEN (rt0.c0) AND (rt1.c0))))<=(((- (t0.c0))))), 0X46766c53 FROM t0, vt0, rt1 WHERE ((((((('*g') NOT BETWEEN (x'') AND (x'2a5e')))AND(load_extension('/!<\E'))))AND((- (0.008382908387700283)))));SELECT ROUND(vt0.c0, rt0.c0) COLLATE BINARY FROM vt0, t0, rt1, rt0 WHERE (((((((((0.3719558820423692)AND('6e1')))AND('0.992022928500437')))OR(((NULL)=(0.04171383128667716)))))AND(((0.8133992913182396)<(NULL))))); -- 0ms;
SELECT ALL (NOT (CAST(rt1.c1 AS NUMERIC))) FROM vt0 WHERE ((('1002235388' IN ()) IN ()));SELECT DISTINCT (((('-269536379')>(rt0.c1))) NOT NULL), (((((((rt0.c0, t0.c0, t0.c0))>((rt0.c0, rt1.c2, rt1.c0))))OR(((rt1.c1)>(rt0.c2)))))OR(((t0.c0) BETWEEN (rt1.c2) AND (rt0.c1)))), ((((((((t0.c0)OR(rt1.c1)))OR('-268681614')))OR(NULL)))AND(LIKE(rt0.c1, x'', '䟔'))) FROM vt0, rt1 UNION ALL SELECT ALL ((rt1.c0)OR(rt0.c0)) COLLATE RTRIM, json_object(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL), COALESCE((('330206172') IS FALSE), ((rt1.c2)IS(rt0.c1))) FROM t0, rt1, rt0;SELECT ALL ((MAX(rt0.c1)) ISNULL) FROM t0, rt1 ORDER BY (~ ((('0.40296891567921966')<<(rt0.c1)))) DESC  NULLS LAST;SELECT DISTINCT AVG(NULLIF(DISTINCT rt1.c1, rt0.c1)), ((((vt0.c0)|(vt0.c0))) IS TRUE), UPPER(DISTINCT CAST(rt1.c0 AS INTEGER)) FROM vt0, rt1, t0, rt0 WHERE (((CASE '*G'  WHEN 's绔' THEN x'' END)>>(((1098287516) NOT BETWEEN ('im') AND (0.3086657406283847))))); -- 1ms;
SELECT CASE WHEN (((rt0.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt1.c0, rt1.c0)) AND ((vt0.c0, rt1.c2, rt1.c1))) THEN ((rt0.c1)|(vt0.c0)) END, (((- (vt0.c0))) IS TRUE), COUNT(*) FROM t0, rt1, vt0, rt0; -- 0ms;
SELECT ((t0.c0 COLLATE RTRIM)/(((((rt1.c0)AND(t0.c0)))OR(vt0.c0)))), rt0.c2, ((DATETIME(rt0.c0, '1484970362', rt1.c1)) BETWEEN (((rt0.c2) NOTNULL)) AND (((((((((((((((((rt1.c1)OR(rt0.c1)))AND(vt0.c0)))AND(rt1.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt1.c2)))OR(t0.c0)))OR(t0.c0)))) FROM vt0, rt0, rt1, t0; -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((7.04148462E8)) AND ((vt0.c0)))) AND (((((rt1.c1)AND(rt0.c1)))AND(vt0.c0)))) FROM rt0, vt0, t0, rt1 WHERE (((~ (x'')) IN ())); -- 0ms;
SELECT ((((((((rt0.c2)OR(CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END)))AND(((t0.c0) IS TRUE))))OR((((''))==((vt0.c0))))))AND((- (rt0.c0)))) FROM rt1, vt0, t0;SELECT DISTINCT ((((rt0.c2) IS TRUE))GLOB(((rt1.c1)AND(rt1.c1)))) FROM rt1, rt0 WHERE (CAST(((('-241077274')) NOT BETWEEN ((x'')) AND ((x'd3f3'))) AS TEXT)); -- 0ms;
SELECT DISTINCT (((((rt1.c1) NOTNULL)))<=((((rt1.c1)-(rt0.c0))))), (((CAST(rt1.c2 AS TEXT)))==((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0))))), CAST(((rt0.c2) NOTNULL) AS REAL) FROM rt0, vt0 NOT INDEXED;SELECT DISTINCT LEAD('+b嶓O0aX', ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN ((((vt0.c0))!=((rt1.c2)))) AND (((rt1.c1)>=(NULL)))), CASE (rt1.c2 IN (vt0.c0, vt0.c0))  WHEN TRIM(rt1.c2, rt1.c0) THEN ((((rt1.c1)OR(rt1.c2)))AND(rt1.c2)) WHEN CASE vt0.c0  WHEN rt1.c0 THEN rt1.c0 END THEN (rt1.c1 IN ()) WHEN ((rt1.c1) IS TRUE) THEN vt0.c0 ELSE (('1090844021') NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) OVER (), (((rt0.c2)>=(rt0.c0)) IN ()), ((json_array_length(rt1.c1)) NOT NULL), ((vt0.c0) NOT NULL), ((((((NULL)>(rt0.c0)))OR(TOTAL(rt1.c0))))AND(((((((((rt1.c1)OR(rt1.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt1.c2)))) FROM rt1, vt0 WHERE ((+ (((NULL)>>(NULL)))));SELECT DISTINCT (NOT ((- (rt1.c0)))) FROM rt1, vt0 WHERE (((((0.849510405300139)%('''o'))) NOT BETWEEN (((((0.8035644592312914)AND(0xffffffffe26fb1cd)))OR('-1024539960'))) AND (((('-2020846316', '-41321165', 0X7188b663))<((0X471e1e75, '2X', x'')))))); -- 1ms;
SELECT DISTINCT ((((((((((t0.c0)AND(rt0.c1)))AND(vt0.c0)))AND(rt1.c2)))AND(rt1.c1))) IS FALSE) FROM rt1, t0;SELECT 'S]{qe/' FROM rt0, rt1 WHERE ((((('-589360764')OR(0.5323318917253744)))AND(NULL)) COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c2, RANK() OVER (), ((json_quote(vt0.c0))|(CAST(rt1.c2 AS TEXT))) FROM vt0, rt0, t0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((rt1.c0)||(t0.c0)))-(((((((((t0.c0)AND(t0.c0)))OR('-662172695')))AND(rt0.c0)))OR(rt0.c2)))), (((vt0.c0)IS NOT(t0.c0)) IN ()), (+ ((t0.c0 IN ()))) FROM t0;SELECT ALL ((CHAR(vt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))) AND (t0.c0)) FROM vt0, rt0, t0, rt1 GROUP BY CAST(rt0.c1 COLLATE BINARY AS INTEGER); -- 0ms;
SELECT DISTINCT (((((((((t0.c0 IN ()))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND((NOT (1632644491)))))OR((((t0.c0, rt1.c1, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, t0.c0)) AND ((rt0.c1, rt0.c0, rt1.c0))))))OR(((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) FROM rt1, rt0 WHERE ((- (CAST('iY(j+r^M	' AS NUMERIC))));SELECT ALL ((((rt0.c0))<((rt1.c1))) IN (NULL)), '607621445', (((rt0.c0, rt1.c0, 0.8777668097172654)) NOT BETWEEN ((((((((((rt1.c2)OR(rt0.c1)))OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c1)), (rt1.c2 IN ()), ((rt1.c1)IS(rt1.c1)))) AND ((CAST(rt0.c2 AS NUMERIC), CASE rt1.c2  WHEN rt0.c1 THEN rt1.c1 END, t0.c0))) FROM rt1, rt0, vt0;SELECT DISTINCT rt1.c0 FROM vt0, rt0, t0 WHERE (NULL);SELECT DISTINCT CASE WHEN t0.c0 THEN rt0.c1 WHEN vt0.c0 COLLATE BINARY THEN CASE WHEN rt0.c2 THEN rt1.c0 END WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt1.c0)) THEN rt0.c2 END FROM rt1, rt0, vt0;SELECT ((((NULL) NOTNULL))*(((((((((rt0.c1)AND(rt0.c1)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))) FROM rt0, vt0, t0 WHERE ((- (((('0.8462740848419167'))<=((NULL))))));SELECT ALL ((vt0.c0 COLLATE RTRIM)OR(vt0.c0)), (((- (rt1.c1))) NOT BETWEEN (TOTAL(rt1.c2)) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c1 END)), (((rt0.c2, t0.c0, rt1.c1)) BETWEEN ((CASE rt0.c1  WHEN rt1.c2 THEN x'' WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END, x'51f4', (NOT (x'')))) AND ((((t0.c0) NOT NULL), (NOT (rt0.c0)), ((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1))))) FROM t0, rt0, vt0, rt1; -- 1ms;
SELECT DISTINCT (((rt1.c1)<=(vt0.c0)) IN ()), (- (ABS(DISTINCT rt0.c0))), ((COUNT(*)) ISNULL) FROM vt0, rt1, t0 WHERE ((NULL IN ()) COLLATE BINARY) LIMIT 2116407861 OFFSET 748554994;SELECT DISTINCT TOTAL(((rt1.c2)>=(rt0.c0))), (((rt0.c1, (rt0.c0 IN ()), ((((vt0.c0)OR(0.08902642498664792)))OR(rt1.c2))))<((vt0.c0 COLLATE NOCASE, ((rt0.c1)<<(rt0.c2)), CASE rt1.c0  WHEN rt0.c0 THEN rt0.c2 END))), ((x'3549') NOT BETWEEN ((rt1.c0 IN (rt0.c0, vt0.c0))) AND (((rt0.c0)<(rt0.c2)))) FROM vt0, rt1 WHERE ((((('-259732456')OR(3.30206172E8)))<=(x'')));SELECT GROUP_CONCAT((NOT (NULL))) OVER (), LIKELIHOOD(NULL, 0.3905078186453631), ((CASE WHEN rt1.c1 THEN rt0.c0 END) IS FALSE) FROM t0, rt0;SELECT DISTINCT (((rt0.c1))<>((CAST(t0.c0 AS TEXT)))), (x'' IN (rt1.c0 COLLATE BINARY)), (IFNULL(DISTINCT rt0.c0, rt1.c0) IN ()) FROM t0, rt1, vt0 WHERE (17448163);SELECT DISTINCT (((NULL IN (rt0.c0))) NOT BETWEEN (((((rt1.c0)AND(NULL)))OR(rt1.c2))) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c0 END)), ((((((((((((((((x'694d')OR(rt1.c0)))AND(vt0.c0)))OR(UNLIKELY(rt0.c1))))AND(TOTAL(rt1.c2))))OR(CASE t0.c0  WHEN 'e7髋y' THEN rt1.c1 END)))OR(vt0.c0 COLLATE RTRIM)))AND(rt0.c1)))OR(((rt1.c2) NOT BETWEEN (rt0.c1) AND (0.5911086221624753)))), (~ (((((vt0.c0)OR(t0.c0)))AND(rt1.c0)))), SUM(((t0.c0)>=(vt0.c0))) OVER (), NULLIF(DISTINCT rt0.c0, rt1.c2) COLLATE BINARY FROM rt0, rt1 WHERE ((- (CAST(NULL AS BLOB))));SELECT DISTINCT CASE ((rt1.c2)<(x'7457'))  WHEN CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c1 END THEN NULL WHEN (((vt0.c0)) NOT BETWEEN ((-85268621)) AND ((rt1.c0))) THEN (rt0.c2 IN ('1221172285')) WHEN COUNT(*) THEN ((((rt1.c1)OR(rt1.c1)))OR(rt0.c2)) END FROM t0, vt0, rt1;SELECT STRFTIME(((rt1.c2)|(rt1.c0)), ((rt0.c2) ISNULL), '>F'), (((rt0.c2, vt0.c0, rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((((rt0.c0) IS FALSE), ((vt0.c0) NOT NULL), rt0.c1, ((rt0.c2)LIKE(x'')), CAST(rt1.c1 AS REAL))) AND (((rt0.c1 IN ()), (rt1.c0 IN ()), (rt1.c1 IN (rt0.c1)), ((rt1.c2)==(rt1.c0)), COUNT(*)))), SUM(HEX(DISTINCT rt0.c2)) OVER () FROM vt0, rt1 WHERE ('-566213334');SELECT (((((((rt0.c1))<>((NULL))))AND(((rt1.c1) NOT NULL))))OR((+ (rt0.c0)))) FROM rt0, rt1 GROUP BY (((rt1.c1) NOTNULL) IN ()) ORDER BY ((CAST(rt1.c2 AS TEXT)) BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((t0.c0))))) DESC  NULLS LAST;SELECT DISTINCT CASE WHEN rt1.c0 COLLATE BINARY THEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)) ELSE (((NULL, t0.c0, rt0.c0))!=((NULL, rt1.c2, t0.c0))) END FROM vt0, rt1;SELECT DISTINCT COUNT(((rt1.c2)OR(0.12384713852011286))) FROM vt0, rt1 NOT INDEXED, t0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) ISNULL) FROM rt0 GROUP BY (((((+ (rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)>=(vt0.c0)))) ORDER BY ((NULLIF(rt0.c0, x'')) BETWEEN (((((t0.c0)AND(rt0.c1)))AND(rt1.c1))) AND (UNLIKELY(DISTINCT rt1.c2))) ASC  NULLS LAST LIMIT -1010750915 OFFSET 1034954433;SELECT ALL COUNT(*) FILTER(WHERE x'') OVER (), (~ (((rt0.c1)>(rt0.c2)))), (~ (((vt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)))) FROM t0 NOT INDEXED, rt0 WHERE (((x'' COLLATE NOCASE) NOTNULL));SELECT DISTINCT MIN(((vt0.c0) BETWEEN (rt1.c1) AND (vt0.c0))), ((7.22061704E8) NOTNULL), NTH_VALUE(CASE WHEN rt0.c1 COLLATE NOCASE THEN t0.c0 WHEN (- (t0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (- (rt0.c2)) THEN t0.c0 ELSE (('') NOT BETWEEN ('') AND (rt0.c2)) END, NULL) OVER (), 0.4895054628289195, TOTAL(CAST(rt0.c1 AS NUMERIC)) OVER () FROM rt1, t0, rt0;SELECT DISTINCT SUM((((('')OR(rt0.c2)))OR(3.30206172E8))) OVER () FROM t0, rt1;SELECT DISTINCT CASE WHEN (((rt1.c2, rt0.c2, vt0.c0)) BETWEEN ((vt0.c0, 'x', rt0.c1)) AND ((rt1.c1, rt0.c0, rt1.c2))) THEN ((rt0.c0) NOTNULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END THEN '1808481163' WHEN (((vt0.c0))<>((rt1.c1))) THEN ((t0.c0) NOTNULL) ELSE CAST(rt0.c0 AS BLOB) END FROM t0, rt1, vt0, rt0 WHERE ((- ('-1248377455' COLLATE RTRIM))); -- 0ms;
SELECT ((- (t0.c0)) IN ()) FROM rt1, vt0 GROUP BY ((LIKE(x'', rt1.c0, '0'))IS((('') IS TRUE))), CAST(((t0.c0) ISNULL) AS BLOB), rt0.c1, t0.c0, (((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))%(rt0.c2 COLLATE NOCASE));SELECT DISTINCT CAST(((rt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c2)) AS INTEGER) FROM rt1 WHERE (((('+0' IN ()))OR('\r')));SELECT DISTINCT (((+ (rt0.c2)))<=((+ (rt1.c2)))), ((CASE WHEN t0.c0 THEN NULL END)+(rt0.c1 COLLATE BINARY)), ((((((t0.c0))>=((rt1.c0)))))>=(((NOT (vt0.c0))))) FROM rt0, rt1, vt0 WHERE (((((x'' COLLATE NOCASE)OR((('0.6219632927286209')|(x'')))))AND(((0.6322479443812112)|('&c'))))) ORDER BY ((rt1.c2 COLLATE BINARY)>>(CASE rt1.c0  WHEN rt0.c0 THEN rt1.c0 END))  NULLS LAST, ((((NOT (rt1.c2)), ((rt0.c1) NOTNULL), ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((rt1.c0)>(t0.c0)), (((rt1.c0))==((rt0.c1))), rt1.c1))) DESC, ((((rt1.c2)LIKE(t0.c0))) NOT NULL)  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((((rt1.c0)AND(rt1.c1)))AND(vt0.c0))), 0Xfffffffffc77900d, ((((rt0.c1 COLLATE RTRIM)AND(rt0.c1 COLLATE RTRIM)))OR(((rt1.c0) NOTNULL))) FROM t0, rt1, rt0 WHERE (LIKELY(DISTINCT CAST('/MsB' AS BLOB)));SELECT ALL ((t0.c0 COLLATE RTRIM)>=(CAST(vt0.c0 AS BLOB))), GROUP_CONCAT(((rt1.c0)AND(rt1.c0))) OVER ( ORDER BY CAST(((t0.c0)<(t0.c0)) AS INTEGER) ASC  NULLS FIRST ROWS (((((rt0.c2)) BETWEEN ((rt1.c0)) AND ((0Xffffffffb57f70e9)))) BETWEEN (((((rt1.c2)AND(rt0.c0)))OR(rt1.c0))) AND (CASE WHEN t0.c0 THEN rt0.c1 END)) PRECEDING), NTH_VALUE((((vt0.c0)<(rt0.c2)) IN (((((rt0.c2)AND(vt0.c0)))AND(t0.c0)), rt0.c2 COLLATE RTRIM)), CASE ((rt0.c0)&(vt0.c0))  WHEN ((rt0.c0)IS NOT(t0.c0)) THEN ((rt0.c2) NOT NULL) END) OVER (), CASE WHEN (((rt1.c1, rt0.c2, rt1.c0, rt0.c1, rt0.c0))<((rt1.c0, rt1.c2, rt1.c0, rt0.c2, vt0.c0))) THEN rt1.c2 COLLATE NOCASE ELSE rt0.c2 END, (((rt0.c1 COLLATE BINARY))=(((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((x'')))))) FROM rt0, t0, vt0 WHERE (((((((NULL)OR(NULL)))OR(x'')))/((- (0.0858425816734999)))));SELECT ALL UNLIKELY(((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'')))OR(t0.c0))), rt0.c2, FIRST_VALUE((((((0.22440554487893838, rt1.c0, rt1.c2))!=((rt1.c1, rt1.c1, 0.13599634585975306)))) NOTNULL)) OVER () FROM rt1 WHERE (((((((((((x'c0c0')GLOB(x'')))OR(-1833095530 COLLATE RTRIM)))OR(((NULL) IS TRUE))))OR((NOT (x'')))))AND((0.1483842563404043 IN ()))));SELECT DISTINCT SUM(((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) FROM rt0, rt1, t0, vt0; -- 0ms;
SELECT CASE WHEN CAST(rt1.c0 AS REAL) THEN CASE WHEN t0.c0 THEN rt1.c1 WHEN rt0.c2 THEN vt0.c0 WHEN 0.07596529111621986 THEN rt0.c0 END ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END END, (((+ (vt0.c0)))>>(ROUND(rt1.c1, t0.c0))), '', (((((((((+ (rt0.c2)))AND(((NULL)<=(rt0.c2)))))OR(0.09317161254977169)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))))OR(QUOTE(rt1.c2))), (- (((NULL)<=(rt0.c2)))) FROM t0;SELECT DISTINCT AVG(CAST(rt1.c1 AS TEXT) COLLATE RTRIM) OVER () FROM rt0, t0, vt0 WHERE (CASE WHEN (0.1303096480935304 IN ()) THEN ((x'')/(0X50fc99f8)) WHEN (('540126428') IS FALSE) THEN NULL WHEN ((-1192212973) IS FALSE) THEN (- (NULL)) ELSE (((('835371590')AND(x'111c')))OR(x'')) END);SELECT DISTINCT '-566213334' FROM t0; -- 0ms;
SELECT ALL (((~ (t0.c0))) BETWEEN (((rt1.c2)>(rt1.c0))) AND (((rt1.c1) IS FALSE))) FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN (('-829005014')AND(rt1.c1)) THEN rt0.c1 ELSE (((t0.c0))=((rt0.c0))) END CROSS JOIN t0 ON 'wA' CROSS JOIN rt1 ON ((rt0.c0 COLLATE BINARY) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt1.c2)+(vt0.c0))));SELECT ALL DENSE_RANK() OVER (), CASE WHEN ((((t0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN (+ (rt1.c2)) WHEN ((rt1.c0)<=(rt1.c0)) THEN -2.3305973E8 WHEN CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 END THEN CAST(rt1.c1 AS BLOB) END, LEAD(((((rt1.c2)IS(rt0.c0)))IS NOT((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))), 0.1972133318435232, UPPER(((t0.c0) BETWEEN (rt0.c2) AND (rt1.c0)))) OVER ( ORDER BY CAST(rt0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST, ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))) IN (((rt1.c2)>(rt1.c1)))) ASC  NULLS FIRST) FROM t0, rt1, vt0, rt0 WHERE (('1440519466' IN ())) GROUP BY CASE ((((rt1.c2)OR(rt0.c2)))OR(rt0.c0))  WHEN ((rt1.c1)==(rt0.c0)) THEN json_array(t0.c0, rt0.c1) END, rt0.c2, CAST(0.7116603533066836 AS NUMERIC) HAVING ((CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt1.c0 END)!=((t0.c0 IN ()))); -- 0ms;
SELECT ALL LEAD(CASE rt0.c0  WHEN rt0.c1 THEN rt1.c2 END COLLATE NOCASE, (- (rt0.c2)), CASE WHEN (NOT (rt1.c0)) THEN ((rt1.c2)%(rt0.c1)) ELSE (((rt1.c0)) BETWEEN ((NULL)) AND ((rt0.c1))) END) OVER () FROM rt0, vt0, rt1 LIMIT -1034960242 OFFSET -435017575; -- 0ms;
SELECT DISTINCT ((((((((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c2 END)OR('')))OR(((rt0.c2)&(rt0.c0)))))OR(rt0.c1)))OR(json_patch(rt1.c1, vt0.c0))), ((((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))OR(CHAR(vt0.c0))))OR(((x'')GLOB(rt0.c2)))))AND(((rt1.c0)*(rt1.c2)))))AND(vt0.c0 COLLATE RTRIM)), CASE ((((vt0.c0)OR(rt1.c1)))AND(rt0.c1))  WHEN t0.c0 THEN ((rt0.c0)+(rt0.c1)) ELSE ((((((((rt1.c0)OR('1034954433')))AND(rt1.c1)))AND(0Xffffffffb7864123)))AND('647713589')) END FROM vt0 LIMIT -376308536;SELECT DISTINCT CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt1.c2) IS FALSE) WHEN (((rt1.c1))==((rt0.c1))) THEN ((t0.c0) IS TRUE) WHEN (((rt1.c1))>((rt1.c1))) THEN ((rt1.c1)IS(0.7587537384911456)) ELSE 0.6556571136359177 END FROM rt0, rt1, vt0, t0 WHERE ((((((((((x'' IN ()))AND('-1647812325')))OR(((NULL)==(0.14921716379315186)))))AND(('t<5' IN ()))))AND(NULL))); -- 0ms;
SELECT ALL (~ ((vt0.c0 IN ()))) FROM t0, rt1; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) NOTNULL) FROM t0, vt0 WHERE ((((NULL)IS NOT('-1988756925')) IN ((('-5558052') BETWEEN (0.5104825310529966) AND (x'4795'))))); -- 0ms;
SELECT DISTINCT ((((rt1.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) NOT NULL) FROM rt0, rt1, vt0 WHERE ((((('1711274527') IS TRUE))>>(((x'9841')IS(x'14ea2997'))))); -- 0ms;
SELECT ALL ((((vt0.c0)>=(rt1.c2))) BETWEEN ((rt0.c2 IN ())) AND (CAST(rt1.c2 AS INTEGER))) FROM rt1, rt0 WHERE ((((('<b')AND(NULL))) NOT NULL));SELECT ALL CASE CAST(rt0.c1 AS REAL)  WHEN NULL THEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0)) ELSE ((rt0.c1)-(rt0.c1)) END FROM rt0, t0, rt1, vt0; -- 0ms;
SELECT DISTINCT SUM(((rt1.c0)OR(0.5687173500731241))) OVER () FROM rt0, t0, rt1, vt0; -- 0ms;
SELECT ((TYPEOF(vt0.c0))||(((rt0.c1)OR(rt0.c2)))) FROM vt0 WHERE (CAST((('')==('P劚')) AS REAL)) LIMIT -1608705693;SELECT DISTINCT NULL, GROUP_CONCAT(((((rt1.c0)AND(rt1.c0)))OR(rt0.c2))) OVER (), CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c2 COLLATE BINARY THEN TRIM(DISTINCT rt0.c1) WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c1 END THEN (rt0.c2 IN (rt1.c0)) WHEN rt1.c2 THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END END FROM vt0, rt0, rt1, t0; -- 1ms;
SELECT DISTINCT (COUNT(*) IN (((vt0.c0)/(rt1.c1)))) FROM rt1, t0, vt0; -- 0ms;
