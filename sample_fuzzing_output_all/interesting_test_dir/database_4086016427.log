-- Time: 2024/06/07 14:08:32
-- Database: database27
-- Database version: 3.40.0
-- seed value: 4086016427
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
UPDATE OR FAIL vt1 SET (c0)=(x''); -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES ('[9', 0x26f6ec8e, NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES (x'', 0.49741086750657615); -- 1ms;
UPDATE OR IGNORE rt0 SET c2='653716622' WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (CASE WHEN '1361409092' THEN 'j2' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND ((x'14c831e8923d' IN ()))); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (1.361409092E9), (NULL), (NULL); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
PRAGMA threads; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (1.361409092E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (x''), (0.5486550538568138); -- 1ms;
VACUUM temp; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('762787017'), ('653716622'), (0.4442504452050815); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (x''), ('1394549267'), ('嫧du㓉'), (x''), (1.361409092E9); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.5651299147702914); -- 1ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('嫧du㓉'); -- 1ms;
ANALYZE main; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.6746641965571483, 0xfffffffff976adbd); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.07035290496707436); -- 0ms;
PRAGMA application_id; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
UPDATE OR REPLACE rt0 SET c2='' WHERE rt0.c2; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 3ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES (x'73b8', x'c30c8b55'), (0.07035290496707436, 0.13176307637727058), (NULL, -109662787); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.6746641965571483; -- 0ms;
DROP TABLE vt1; -- 1ms;
PRAGMA main.short_column_names; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA temp.journal_size_limit = -5575926911716874841; -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (NULL), (NULL), (x''); -- 1ms;
PRAGMA incremental_vacuum(762787017); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES ('631336869', '1058818506'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c2) VALUES (0.04938558750584521, 0.2872669878491244); -- 0ms;
INSERT OR ROLLBACK INTO rt1 VALUES (0.27975285124907834, NULL, x'976c'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2) VALUES ('8', 1.394549267E9); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (x'', NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES (NULL, '-139287495', x''); -- 0ms;
INSERT OR FAIL INTO rt1(c1, c2, c0) VALUES (NULL, -772411020, -1391844826), (x'', '嫧', x''), ('0.6746641965571483', '?v', NULL), ('C곛w+s!cX{', x'', NULL), (0.07035290496707436, 0.6192224077111562, 'sl곛'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('-1', 0.8043306656356112); -- 1ms;
PRAGMA application_id; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (NULL, x''), ('-559291375', x''), (NULL, NULL), ('-1295007365', '400260422'), ('-1391844826', x''); -- 0ms;
INSERT OR ABORT INTO rt1(c0, c2) VALUES (x'afcd', '-973709508'); -- 1ms;
INSERT OR FAIL INTO rt1(c2, c1, c0) VALUES ('436812053', 0.015179624375542877, x'4f97'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (x'', 'cM', -1.295007365E9); -- 0ms;
INSERT OR ROLLBACK INTO rt1 VALUES ('', x'60e73216c15a', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (((CAST('骇\rXT' AS NUMERIC))<<(((x'')OR('-559291375'))))); -- 0ms;
REINDEX NOCASE; -- 0ms;
REINDEX NOCASE; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((0.887783689762179)AND(rt0.c0))) NOT NULL) FROM rt1 WHERE ((((NOT ('.Kn'))) IS FALSE)) ORDER BY ((rt0.c1)OR(rt1.c2)), rt1.c1 ASC;SELECT ((MIN(rt0.c0))+(COALESCE(rt1.c2, rt0.c1))) FROM rt0, rt1 ORDER BY (((x'')) BETWEEN ((IFNULL(rt0.c2, rt0.c0))) AND ((((rt0.c0)&(rt0.c2))))); -- 0ms;
SELECT ALL CUME_DIST() OVER (), COUNT((- (rt1.c0))), COUNT(*) FROM rt0, rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c1 AS REAL))<(((((((((rt1.c1)OR(rt0.c2)))AND(rt1.c1)))OR(rt0.c0)))AND(rt1.c1)))), ((COUNT(*))-(((((rt0.c0)AND(rt0.c0)))OR(x'17a4')))), (~ (GROUP_CONCAT(rt0.c0))) FROM rt0, rt1; -- 0ms;
SELECT CASE (~ (rt1.c0))  WHEN (NOT (rt1.c2)) THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c2)) END FROM rt0, rt1 WHERE (((LOWER('834099943'))IS((('') NOT NULL)))); -- 0ms;
SELECT ALL ('[륳' IN ((rt1.c2 IN (rt0.c2, rt0.c1)), rt1.c0 COLLATE RTRIM, (rt1.c1 IN ()))) FROM rt1 WHERE ((('0.5651299147702914')-(CASE 'Z￿'  WHEN -7.7241102E8 THEN 0.4092689018621736 END)));SELECT ALL ((((((((((rt0.c0)OR(0xffffffffd6d30753)))AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c0))) BETWEEN (((0Xffffffffa0be0827)-(rt0.c2))) AND (((rt0.c2)/(rt1.c1)))) FROM rt0, rt1 WHERE ('732482940'); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) AND (CASE WHEN rt0.c1 THEN rt0.c0 END)) FROM rt0, rt1 WHERE ((((NULL IN (x'')))+(CAST(-77133220 AS INTEGER)))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0)))) AND ((((((rt0.c1)AND(rt1.c0)))AND(rt0.c0))))) DESC; -- 0ms;
SELECT ALL 0.2872669878491244 FROM rt1, rt0 WHERE (((((('0.887783689762179')OR('-77133220')), json_patch(x'd386514c', NULL), NULL COLLATE NOCASE, ABS(0.27975285124907834), (((NULL)) BETWEEN (('0.6746641965571483')) AND ((0Xffffffffad0a2226)))))>=((((x'bd9f') IS FALSE), CASE WHEN NULL THEN '-139287495' END, CAST(NULL AS INTEGER), ((x'')==(0.9970649668899432)), ((((0.8200933250997491)OR(0.5070500208657781)))AND(NULL))))));SELECT DISTINCT FIRST_VALUE(CASE ((rt0.c0)>=(rt0.c2))  WHEN ((rt0.c0)*(rt0.c1)) THEN ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN CASE WHEN 0.8649916856791511 THEN 'sl곛' END THEN rt0.c1 WHEN (rt1.c2 IN ()) THEN COALESCE(DISTINCT rt1.c2, rt1.c1) END) OVER (), (((((rt0.c2))>=((rt0.c2))))>=(((((rt1.c2)OR(rt1.c2)))AND(rt0.c1)))), TOTAL(CAST(rt1.c0 AS NUMERIC)) OVER () FROM rt0, rt1 WHERE ((((0.5161161874495014)<>('')) IN ('0.8649916856791511' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT IFNULL(rt1.c2, rt1.c0)), CAST(CAST(rt1.c2 AS TEXT) AS TEXT), ((rt0.c1)||(CAST(rt0.c1 AS INTEGER))) FROM rt0, rt1 WHERE ((((NOT ('400260422')))+('' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((0Xffffffffad0a2226)AND(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))))AND(AVG(rt1.c1))), CASE ((rt1.c1)%(rt1.c2))  WHEN rt1.c2 COLLATE NOCASE THEN ((rt0.c1)<<(rt1.c1)) WHEN (((0.31442378345599487))>=((rt0.c1))) THEN rt1.c0 WHEN rt1.c1 THEN CAST(rt0.c0 AS REAL) WHEN ((rt1.c2) NOT NULL) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) WHEN ((rt0.c1) IS FALSE) THEN TRIM(DISTINCT 1604103250, rt0.c0) WHEN ((rt1.c1)||(rt0.c0)) THEN (((('^*%\*U')AND(rt1.c2)))OR(rt0.c2)) WHEN CAST(rt1.c1 AS BLOB) THEN ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt1.c0)))OR(rt1.c1)) END, (((rt1.c0)IS NOT(rt1.c1)) IN ((-1383456849 IN ()), ((((rt1.c0)OR(rt0.c2)))AND(rt1.c1)))), (- ('cm')), (('[륳') IS FALSE) COLLATE NOCASE FROM rt0, rt1 WHERE (CAST(HEX(-139777949) AS REAL)); -- 0ms;
SELECT DISTINCT ((MIN('sztCi')) NOTNULL) FROM rt0; -- 0ms;
SELECT (+ (((rt0.c1)>(rt0.c1)))) FROM rt0 WHERE (((((0.6746641965571483)GLOB(NULL)))=(((NULL)%(x''))))); -- 0ms;
SELECT DISTINCT LENGTH(((rt0.c0)!=(rt0.c1))), (((rt0.c2)) NOT BETWEEN ((rt1.c1 COLLATE RTRIM)) AND (('1361409092'))), LAG(TRIM(DISTINCT ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)), CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c2 END), ((UPPER(DISTINCT rt1.c0))IS NOT(((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1)))), (((((rt1.c2))==((rt0.c1))))AND((rt1.c2 IN ())))) OVER ( GROUPS  CURRENT ROW) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE (CAST((NOT (x'')) AS INTEGER)) LIMIT -1109161503; -- 1ms;
SELECT ALL CASE WHEN ('0.9970649668899432' IN (rt0.c2)) THEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)) ELSE NULL COLLATE RTRIM END FROM rt1;SELECT (((rt1.c0)) BETWEEN ((GROUP_CONCAT(rt1.c1))) AND (((- ('0.5486550538568138'))))) FROM rt0, rt1 WHERE (CASE ((x'')<=(NULL))  WHEN ((-2006804755)LIKE(0.6186174443785218)) THEN HEX(DISTINCT 1.847220357E9) WHEN NULL THEN CASE WHEN 0Xffffffffb85aac8f THEN NULL WHEN '' THEN '-883058041' WHEN -1.39777949E8 THEN NULL END WHEN (- ('CL]gD')) THEN (-1960849664 IN ()) ELSE (((0.030695886557445595, x'39dd', '-2006804755'))>=(('-628308473', '200294128', ''))) END); -- 0ms;
SELECT DISTINCT CASE WHEN (rt1.c0 IN ()) THEN ((rt0.c0)>>(rt1.c0)) END FROM rt0, rt1 GROUP BY ((((((rt1.c2)IS(rt0.c1)))OR(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c1)))))AND(((rt1.c1)LIKE(0.41717802693874106)))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c0) NOT NULL))) FROM rt0; -- 0ms;
SELECT ALL TRIM(DISTINCT SUM(rt1.c2), ((2137111804) NOT BETWEEN (rt0.c2) AND (rt0.c0))), (((CAST(rt0.c1 AS TEXT)))<>((CAST(rt1.c0 AS TEXT)))), GROUP_CONCAT(((rt0.c1) IS TRUE)) OVER () FROM rt0, rt1 WHERE ((((x'')) NOT BETWEEN (((NOT (NULL)))) AND ((SQLITE_COMPILEOPTION_USED('-1237723155'))))) ORDER BY ((((CAST(rt0.c1 AS BLOB))AND(((rt0.c0)IS NOT(rt1.c0)))))OR(((((rt1.c2)OR(rt0.c0)))OR(rt0.c2)))) DESC, CAST(rt1.c0 COLLATE NOCASE AS BLOB) ASC  NULLS FIRST; -- 1ms;
SELECT ALL MIN(rt1.c2), COUNT(*), ((((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)))>>(GROUP_CONCAT(rt1.c2))) FROM rt0, rt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT json_type(((rt0.c2)<<(rt1.c1))), MIN(MIN(((rt1.c2) NOT BETWEEN ('a!K1\') AND (rt0.c1)))), CAST(x'' AS NUMERIC) FROM rt0;SELECT DISTINCT COUNT(x'') FROM rt1, rt0 ORDER BY (((rt1.c2 IN (rt1.c2, rt1.c0)))IS((rt1.c1 IN (rt0.c1)))) ASC, CASE WHEN (~ (rt1.c1)) THEN ((((NULL)AND(rt0.c1)))OR(rt0.c1)) END  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY, (- (((rt1.c2)<=(rt1.c2)))), ((((rt1.c2) IS FALSE))*((~ (rt0.c2)))) FROM rt0 WHERE ((((((((('200294128')OR('Rw!')))AND('Gੜ')))OR(0xffffffff8b1fcf00)))OR('937563196')) COLLATE NOCASE) ORDER BY rt0.c0 COLLATE RTRIM ASC  NULLS FIRST;SELECT DISTINCT COUNT(((((((((rt0.c0)OR(rt0.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c0))) OVER ( PARTITION BY rt1.c2, CASE WHEN rt1.c2 COLLATE RTRIM THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 WHEN x'' THEN '1604103250' END ELSE ((rt0.c0)<(rt1.c2)) END), RANK() OVER (), LIKELY(DISTINCT NULL) FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((-6.90813101E8))) ASC;SELECT DISTINCT SQLITE_VERSION() FROM rt1 WHERE (((CASE 0.1972036347066879  WHEN '-1366780250' THEN '1435860570' ELSE x'' END) BETWEEN (CAST('0.887783689762179' AS TEXT)) AND ('631336869'))); -- 0ms;
SELECT DISTINCT (((rt1.c0, rt1.c2, rt0.c0)) BETWEEN (((- (rt1.c0)), (((rt0.c2, rt0.c2, 0.8649916856791511, rt0.c0, rt0.c0))<((rt1.c0, rt1.c0, rt1.c2, rt1.c0, ''))), ((rt0.c2)GLOB(rt0.c1)))) AND ((((rt1.c1) ISNULL), (((rt1.c2, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c1, rt1.c0))), (rt0.c2 IN ())))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT ALL (NOT ('21BG1Z')) COLLATE BINARY, (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c0 THEN '' WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END IN ()), ((rt0.c1) NOT BETWEEN (((rt0.c2)GLOB(rt1.c2))) AND ((rt0.c0 IN (rt1.c1, rt1.c2)))) FROM rt1;SELECT DISTINCT ((json_array_length(rt1.c0)) BETWEEN ((+ (rt0.c0))) AND (((NULL) ISNULL))), (NOT (rt1.c1)), CASE WHEN (rt0.c2 IN ()) THEN (rt0.c2 IN ()) END FROM rt1, rt0 WHERE (((0.9428282212179868)=(0.5651299147702914)) COLLATE BINARY); -- 0ms;
SELECT ALL (CAST(rt0.c1 AS INTEGER) IN ()), ((TOTAL(rt1.c2)) BETWEEN (((rt1.c2)>=('骇\rXT'))) AND (((rt0.c0)*(rt1.c2)))), (NOT (((rt0.c2) ISNULL))) FROM rt1;SELECT ALL COUNT(((rt0.c2)<>(rt0.c1))) OVER (), CAST((((rt0.c1))>((rt0.c2))) AS REAL), MAX(((rt0.c0)OR(rt1.c1))) FROM rt1;SELECT rt1.c0 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1 IN (rt0.c0, rt0.c1))))<((x'bb614216'))) FROM rt1, rt0 WHERE (((((('-40606847'))>((x'')))) NOT NULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c1)<=(rt1.c1))) OVER () FROM rt0, rt1 WHERE (CAST(NULL AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(*), NULLIF(((rt0.c2)||(rt0.c2)), CASE '-895757996'  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END), (((- (rt1.c1)))IS NOT(0.8944132635523111 COLLATE NOCASE)) FROM rt0 GROUP BY (NOT (CAST(rt1.c0 AS NUMERIC))), (((+ (rt0.c0)))||((((rt0.c2, '0.5161161874495014', rt1.c2))<>((rt0.c2, rt0.c1, rt1.c2))))), ((rt0.c2)<>(rt1.c1 COLLATE BINARY));SELECT (((+ (rt0.c2)))-(rt1.c0)), DENSE_RANK() OVER (), ((CAST(rt1.c1 AS TEXT)) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1))) AND (((rt1.c0) NOT NULL))) FROM rt1, rt0 GROUP BY ((((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c1 END)AND(((((rt0.c1)AND(rt1.c2)))OR(rt1.c2)))))OR(((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c1)))) HAVING ((rt0.c0)<<(rt0.c1)) COLLATE RTRIM; -- 0ms;
SELECT (+ (((rt0.c2)IS NOT(rt0.c1)))) FROM rt0 GROUP BY (NOT (((rt0.c1) IS TRUE))), ((0.5690915967810288) IS FALSE), ((((((rt0.c2)||(rt0.c2)))OR((((0Xffffffff9ffd78f1))>=((rt0.c2))))))AND(-1383456849)); -- 0ms;
SELECT ALL (((rt1.c0, '', rt0.c2)) BETWEEN ((RTRIM(rt1.c0), rt1.c0, x'293f')) AND ((((rt1.c1)|(rt1.c1)), ((rt1.c1)=(rt1.c1)), (NOT (rt0.c2))))) FROM rt0 WHERE (((CASE '-1432116744'  WHEN NULL THEN 619338424 ELSE 'sl곛' END)GLOB(NULL)));SELECT ALL rt0.c1, LEAD((((((0xffffffffce1713bd)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS TRUE), (((rt0.c2)GLOB(rt0.c1)) IN (CASE x''  WHEN -1270500568 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)), (((((rt0.c2))<=((rt0.c2))))<>((rt0.c2 IN (rt0.c0))))) OVER (), ((rt1.c2)IS NOT(rt1.c2)) COLLATE NOCASE FROM rt0;SELECT ALL ((UNLIKELY(rt0.c2))<<(((rt0.c2) NOTNULL))) FROM rt0, rt1 LIMIT 176529183 OFFSET 307489073; -- 0ms;
SELECT DISTINCT AVG((rt1.c1 IN ())) OVER () FROM rt0 WHERE (('' IN ())) ORDER BY ((((rt1.c2 IN ())))=((TYPEOF(DISTINCT rt0.c2)))), NULL DESC, '-1270500568' ASC; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt0.c0, rt1.c1)) BETWEEN (((~ (rt1.c0)), TOTAL(rt0.c0), ((((rt0.c1)OR(rt1.c0)))OR(rt0.c2)))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((rt1.c2)AND(rt0.c2)))OR(rt1.c2)), rt1.c1 COLLATE NOCASE))) FROM rt0, rt1 ORDER BY (NOT (((NULL)&(rt0.c2)))) DESC LIMIT 80240743; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2)<=(rt1.c0)) THEN '' ELSE ((rt1.c0) BETWEEN ('-1383456849') AND (rt0.c1)) END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT NULL, COUNT(x'0f12' COLLATE NOCASE), ((rt0.c1 IN ()) IN ()) FROM rt1 WHERE ((((0.9783182872020322, ((((((((((((x'3ae5')OR('-1926754419')))OR('')))OR('-824329869')))AND('0.887783689762179')))OR(x'')))OR('')), NULL COLLATE NOCASE))<((CAST(-8.37348419E8 AS NUMERIC), GLOB('2045563713', '-772411020'), (NOT (NULL)))))); -- 0ms;
SELECT DISTINCT ((SUBSTR(rt0.c1, x'00a3')) NOT BETWEEN (LAST_INSERT_ROWID()) AND (CASE rt1.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)), ((((((((rt1.c1 COLLATE NOCASE)OR(((rt1.c1)IS NOT(rt0.c1)))))OR(GROUP_CONCAT(rt0.c1))))OR((rt1.c1 IN (rt0.c1, rt1.c1)))))OR(((rt1.c0) NOTNULL))), ((((rt0.c2) IS FALSE)) BETWEEN (0.41717802693874106 COLLATE BINARY) AND ((~ (rt0.c0)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (~ (((rt1.c0)-(rt0.c0)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) FROM rt1 WHERE ((((('')OR(x'' COLLATE RTRIM)))OR(('21BG1Z' IN ())))) GROUP BY ((((rt1.c2)/(rt0.c0))) NOT NULL) HAVING ((CAST(rt1.c0 AS INTEGER))!=(((rt1.c1)|(NULL))));SELECT ((((((((rt0.c1)OR(rt1.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt1.c2)) COLLATE NOCASE, rt0.c2, DATETIME(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 END, CAST(rt0.c0 AS BLOB), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END, ((rt0.c1) IS FALSE), (+ (rt1.c0))) FROM rt0 WHERE (('PN},' COLLATE BINARY IN (CAST(206433734 AS TEXT))));SELECT ((((rt1.c1) NOT NULL))%(((rt0.c2)/(rt0.c2)))) FROM rt1 WHERE (((((0.8273178348630987 COLLATE RTRIM)OR('D{68,%}bn3㫡')))OR(((NULL)||(0Xfffffffff191246d)))));SELECT (((rt1.c0))<=((((rt0.c1) IS TRUE)))), (((rt0.c1)IS NOT('d{68,%}bn3㫡')) IN ()), ((rt1.c2)%(CASE rt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0, rt1; -- 0ms;
SELECT ALL LOWER(DISTINCT load_extension(rt0.c1)) FROM rt1, rt0;SELECT (((rt1.c2)) NOT BETWEEN ((TYPEOF(rt1.c0))) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) FROM rt0, rt1 LIMIT -1004282801; -- 0ms;
SELECT (NOT (((rt1.c1) NOTNULL))), UNLIKELY(((rt1.c0)==(rt1.c2))), (('0.0')LIKE(CASE WHEN rt0.c2 THEN rt0.c0 END)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) ISNULL) FROM rt0, rt1 WHERE ((+ (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((rt0.c2)IS NOT(rt0.c0))) NOT NULL) FROM rt1, rt0; -- 0ms;
SELECT ALL ((TRIM(rt1.c0)) NOT BETWEEN (AVG(rt1.c0)) AND ((rt0.c1 IN (rt0.c0)))), CAST(((rt1.c1)IS(rt1.c2)) AS NUMERIC), ((((rt1.c2)+(rt1.c0)))<<(((((rt1.c1)OR(rt0.c2)))OR(rt1.c0)))) FROM rt1, rt0 WHERE (((3.62602647E8 COLLATE BINARY)+((((x'')) BETWEEN (('')) AND ((x'')))))) ORDER BY NULL ASC; -- 0ms;
SELECT ALL ((CAST(rt1.c0 AS TEXT)) ISNULL) FROM rt1, rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))) BETWEEN (((((((((rt1.c2)OR(rt0.c0)))OR(rt1.c1)))OR(rt0.c0)))AND(rt0.c0))) AND (HEX(rt1.c2))) ASC, CASE IFNULL(rt1.c2, rt1.c1)  WHEN ((rt0.c1)=(rt1.c1)) THEN ((0.20395934611084243)&(rt1.c0)) WHEN CASE rt0.c0  WHEN NULL THEN rt1.c1 END THEN ((rt1.c1)||(rt1.c1)) WHEN JULIANDAY('1058818506', rt0.c2, rt0.c0) THEN rt1.c2 COLLATE NOCASE END; -- 0ms;
SELECT ((0.8684379388682393) IS TRUE) FROM rt1 LIMIT 557250035; -- 0ms;
SELECT DISTINCT (((((rt1.c2, rt1.c1, rt1.c0))<=((x'7eec', rt1.c0, rt0.c2))))=(CASE rt0.c1  WHEN rt1.c0 THEN rt1.c2 END)) FROM rt0, rt1 WHERE (((('')<<(NULL)) IN ())); -- 0ms;
SELECT AVG(((rt1.c0)IS(rt0.c0))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(SQLITE_VERSION() AS INTEGER) FROM rt0, rt1 WHERE (SQLITE_COMPILEOPTION_GET('h絆m[' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((rt1.c0) NOTNULL) COLLATE BINARY FROM rt1 CROSS JOIN rt0 ON (ABS(rt0.c0) IN (((rt0.c1) IS TRUE))) WHERE ((~ (CASE WHEN '\B1f' THEN 665005017 END))); -- 0ms;
SELECT ALL ((rt0.c0) NOT BETWEEN ('^*%\*U') AND (rt1.c0)) COLLATE NOCASE FROM rt0 WHERE (((0X27a32bd9) IS TRUE));SELECT ALL (((rt1.c0, rt1.c1, rt0.c0)) BETWEEN (((('') IS TRUE), CAST(rt1.c1 AS TEXT), ((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((((((((rt0.c1)OR(rt1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c0)), CASE WHEN 0.8381566185518954 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END, ((rt0.c1)&(rt1.c0))))) FROM rt1 WHERE ((+ (TRIM(DISTINCT NULL))));SELECT CASE '1563979632'  WHEN rt0.c0 THEN (((rt0.c2))=((rt0.c1))) END FROM rt1, rt0; -- 1ms;
SELECT DISTINCT MIN(CAST(rt1.c1 AS BLOB)) FROM rt0 WHERE ('-2129371391');SELECT ALL ((GROUP_CONCAT(rt1.c2)) NOT NULL) FROM rt0, rt1 WHERE (CAST(NULL AS TEXT) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c1)IS(rt0.c0)) IN ()), MAX(COUNT(*)), CUME_DIST() OVER () FROM rt1 NATURAL JOIN rt0 WHERE ((((('O텔')AND(((1.847220357E9)GLOB(NULL)))))OR(CASE 0.5005348851323728  WHEN NULL THEN 0.13963463629696193 END)));SELECT DISTINCT (NOT (rt0.c1 COLLATE RTRIM)) FROM rt1, rt0 WHERE ('') ORDER BY ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))) IN ()); -- 0ms;
SELECT DISTINCT (((~ (rt1.c1)))=(rt0.c2)) FROM rt0 GROUP BY CASE CASE rt1.c1  WHEN NULL THEN rt1.c2 ELSE rt0.c0 END  WHEN rt1.c0 THEN '1466843278' WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c0)) THEN ((rt0.c1)|(rt1.c0)) WHEN NULL THEN (((rt0.c2))<((rt1.c2))) END, CASE WHEN (((rt0.c1, rt1.c2, rt0.c1))==((rt1.c1, rt1.c1, rt1.c0))) THEN (((rt0.c2, rt1.c0, '-1509251480'))>=((rt0.c2, rt1.c1, rt1.c0))) ELSE (((rt1.c0))==((rt1.c0))) END, rt0.c1;SELECT DISTINCT (NOT (SUM(rt1.c1))), CAST(rt1.c0 COLLATE NOCASE AS BLOB), ((((rt1.c1) NOTNULL))IS((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))))) FROM rt1;SELECT DISTINCT ((((('', rt1.c2, rt1.c2))<((rt0.c1, rt1.c0, rt0.c1))))<(((rt1.c2)-(rt1.c1)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT '1394549267' FROM rt0, rt1 WHERE ((((((('SqF') NOTNULL))OR(CASE x''  WHEN x'' THEN x'081d' WHEN 0xffffffff9765d5e5 THEN 0.27975285124907834 WHEN x'33b0' THEN NULL END)))AND((NOT ('885349229'))))); -- 1ms;
SELECT DISTINCT LAST_VALUE((((rt0.c2)) NOT BETWEEN ((CASE WHEN -1926754419 THEN rt0.c1 END)) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)))) OVER ( ORDER BY (((json_array(rt1.c1, rt0.c1, rt1.c2, rt0.c0), rt1.c2 COLLATE BINARY, (+ (rt0.c1))))<(((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))), CAST(rt0.c2 AS INTEGER), rt0.c0 COLLATE RTRIM))) DESC) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT NTILE(rt1.c2) OVER (), TOTAL(GROUP_CONCAT(-1439809051)), GROUP_CONCAT(MAX(x'')) FROM rt0, rt1 WHERE (((((0xffffffffa971e460)>>('')))GLOB(CASE WHEN '' THEN '7W0_xu\n' ELSE '-1383456849' END)));SELECT DISTINCT (+ (((rt1.c2)-('384079351')))), ((((rt1.c1)OR(rt0.c1)))OR(rt1.c1)) COLLATE RTRIM, ((((rt0.c1) BETWEEN ('Eeꐹmy') AND (rt1.c2))) IS FALSE) FROM rt1 ORDER BY (((rt0.c1)>>(rt1.c2)) IN (((rt0.c2) BETWEEN (rt0.c0) AND (NULL)), (((rt0.c0))>((rt1.c2)))));SELECT ALL PERCENT_RANK() OVER () FROM rt1 WHERE (('732482940' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt0;SELECT json_patch(rt0.c0, rt0.c1) COLLATE NOCASE, AVG(UPPER(DISTINCT rt0.c1)) OVER (), '' FROM rt0 WHERE (NULL) ORDER BY (NOT (SQLITE_SOURCE_ID())), ((rt1.c1 IN (rt1.c2)) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(*) OVER ( ROWS BETWEEN  CURRENT ROW AND rt1.c1 PRECEDING EXCLUDE GROUP) FROM rt0, rt1;SELECT DISTINCT '-1088579640' FROM rt1 WHERE ((('<5)}\rޛ')>>(((1435860570)GLOB(NULL))))) GROUP BY 'J''7%K' HAVING ((rt1.c1 COLLATE BINARY) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 ELSE 'w' END) AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0)))) ORDER BY CAST(json(rt1.c2) AS REAL), ((rt1.c1 COLLATE RTRIM)AND(CASE WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c2 END)) DESC LIMIT -758263144 OFFSET -871146993;SELECT DISTINCT ((rt0.c2)AND(0.04307812308873937)) COLLATE BINARY FROM rt1, rt0 WHERE ((((NOT (0.7520747317304889)))*(x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL CASE (((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt1.c0)))  WHEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) THEN TOTAL(rt0.c1) ELSE rt1.c0 END FROM rt1 WHERE (NULL);SELECT DISTINCT -8.83058041E8 FROM rt1, rt0 WHERE ((((x'' IN (''))) BETWEEN (CAST(0.974765487184125 AS TEXT)) AND ((('') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((rt1.c0)=(rt0.c0))) NOT BETWEEN (CAST(0.1585809658880516 AS NUMERIC)) AND (UNLIKELY(DISTINCT rt1.c2))), (+ (SQLITE_VERSION())), AVG(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1))) FROM rt0, rt1; -- 0ms;
SELECT ALL ((rt1.c1 COLLATE RTRIM)IS((('-883058041') IS TRUE))), (((rt1.c1 IN ()))>=(((rt0.c1) NOT BETWEEN (0.700999417832988) AND (rt0.c1)))), ((TOTAL(rt1.c1))<(AVG(rt1.c1))) FROM rt0, rt1 GROUP BY ((((rt0.c0)==(rt0.c1))) BETWEEN (TRIM(DISTINCT 0.8931184489431739)) AND (0.5277097704306031)) HAVING CASE WHEN ((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)) THEN SUM(rt0.c2) ELSE ((-320712573) ISNULL) END; -- 0ms;
SELECT ALL (CASE rt1.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN ()) FROM rt0, rt1 WHERE (CAST(((0.5898966500702204)||(0.24622708816244288)) AS INTEGER)); -- 1ms;
SELECT ALL CAST(x'' AS NUMERIC) FROM rt1 GROUP BY CAST(((rt1.c0)<<(rt0.c0)) AS NUMERIC), rt0.c1, 0.06733033130878674;SELECT DISTINCT 'E ' FROM rt0; -- 0ms;
SELECT DISTINCT (rt1.c1 IN (rt1.c2)) COLLATE BINARY, UPPER(CAST(rt0.c1 AS NUMERIC)), RTRIM(CAST(rt1.c2 AS BLOB)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT 0.4553107161660962 FROM rt0 ORDER BY (~ (((NULL) NOT BETWEEN ('1058818506') AND (rt1.c0))))  NULLS FIRST;SELECT DISTINCT CAST(CAST(rt0.c2 AS TEXT) AS REAL) FROM rt0 WHERE (((('-374548885')) BETWEEN ((IFNULL('2045563713', '-1206388427'))) AND (((NOT ('')))))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOT NULL) FROM rt0, rt1 WHERE (((((((((NULL)AND(TRIM(DISTINCT NULL))))AND(((0.04681161090945385)>(x'bbe2')))))AND(((((((((-2024004988)OR(NULL)))AND(-1432116744)))OR('1847220357')))AND(x'4a63')))))OR(((x'') BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT (('-1735462228')>>(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)), (NOT (SUM(rt1.c0))), ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (TRIM(DISTINCT rt1.c0, rt1.c1)) AND (LIKELIHOOD(rt1.c0, 0.8503667314482375))), x'', CUME_DIST() OVER (), (((((((((((((NOT (rt1.c0)))AND(((rt1.c2)LIKE(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM)))AND(((((((((rt0.c1)OR(rt0.c1)))OR(rt1.c0)))AND(rt0.c1)))AND(rt0.c0)))))AND(LENGTH(rt0.c0))))AND(LTRIM(rt1.c1))))OR((~ (rt0.c0)))), rt0.c0 FROM rt0 WHERE ((('-973709508' COLLATE RTRIM) NOT NULL));SELECT ((((rt1.c1)IS(rt0.c0)))AND('1241834855')) FROM rt1 WHERE (LOWER(DISTINCT CAST(x'' AS NUMERIC)));SELECT DISTINCT LOWER(rt1.c1 COLLATE RTRIM) FROM rt0 WHERE ((((((((((+ (-631527643)))AND((((('^*%\*U')AND(NULL)))OR(x'')))))OR((NOT (x'f76a')))))AND('834099943')))AND((('-2032391930')*('-1206388427'))))) GROUP BY CASE rt1.c1 COLLATE RTRIM  WHEN HEX(rt0.c1) THEN CASE WHEN rt1.c1 THEN rt0.c0 END WHEN ((rt0.c1) NOT NULL) THEN rt1.c1 COLLATE RTRIM WHEN ((rt0.c2)%(rt0.c0)) THEN ((rt1.c1)>(rt1.c0)) WHEN -1.237723155E9 THEN ((rt1.c0)<>(rt1.c2)) WHEN 0.40664159984378145 THEN (((rt1.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((-429280213, rt1.c1, rt1.c2)) AND ((rt0.c1, rt1.c1, rt1.c1))) END HAVING ((((rt0.c0) BETWEEN (rt1.c0) AND (rt1.c2))) IS FALSE);SELECT DISTINCT ((((ABS(DISTINCT rt1.c2))AND(((((rt0.c0)AND(rt1.c0)))AND(rt1.c1)))))AND(0.8985145478649699)) FROM rt1 WHERE ((((+ (NULL))) BETWEEN ('152460924' COLLATE BINARY) AND (((x'')<=(x'')))));SELECT ((rt1.c1) BETWEEN ((- (rt1.c0))) AND ((((rt1.c0))!=((rt1.c2))))) FROM rt1 WHERE (0.931558343824977 COLLATE NOCASE); -- 0ms;
SELECT ((CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c2 END)<<(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))) FROM rt1, rt0 WHERE (((((((0Xfffffffff1b00859)||(0xffffffffda5ba725)))OR(((x'')AND(NULL)))))AND(NULL COLLATE BINARY))) ORDER BY ((rt0.c1 COLLATE NOCASE)+((rt1.c2 IN ())))  NULLS LAST, ((((rt1.c0)OR(rt1.c2)))GLOB(((((((((((((rt0.c2)AND(rt1.c0)))OR(0xffffffffb84b90ab)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))), CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE; -- 0ms;
SELECT ALL ((((rt1.c2)<<(rt0.c1))) BETWEEN (UNLIKELY(rt0.c1)) AND (CASE WHEN rt0.c2 THEN x'' WHEN x'' THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 END)) FROM rt0 GROUP BY (((((rt0.c1)<>(rt0.c2))))>=((rt0.c0 COLLATE BINARY))), ((((rt1.c1)OR(rt0.c2)))OR(rt1.c0)) COLLATE NOCASE COLLATE BINARY, rt0.c1;SELECT DISTINCT (+ (((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c1)))), (((+ (rt1.c1)))GLOB(((rt0.c0) ISNULL))), CAST((((rt1.c0)) NOT BETWEEN ((0.8649916856791511)) AND ((rt0.c2))) AS BLOB) FROM rt0;SELECT ((((rt1.c0) ISNULL)) BETWEEN (CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c1 THEN x'' ELSE rt1.c1 END) AND (((((rt0.c2)AND(rt1.c0)))OR(rt0.c1)))), (((((rt0.c0, rt1.c0, NULL))<((rt1.c2, rt0.c2, rt0.c0)))) NOT NULL), CASE WHEN (rt0.c2 IN ()) THEN (((rt1.c1))=((rt1.c2))) ELSE ((-234175002) NOT BETWEEN (rt0.c1) AND (rt1.c2)) END FROM rt0 WHERE (((0Xffffffffd3fa7ed0 IN ()) IN ()));SELECT DISTINCT CAST(((rt1.c0) IS TRUE) AS NUMERIC) FROM rt1 WHERE ('0.931558343824977'); -- 0ms;
SELECT DISTINCT (((rt1.c1 IN ()))-(GLOB(rt0.c2, rt0.c0))) FROM rt1, rt0; -- 0ms;
SELECT ALL MAX(CAST(rt1.c2 AS TEXT)) FROM rt0 WHERE (((x'')<>('-1961346335')) COLLATE RTRIM COLLATE BINARY);SELECT ALL CASE CASE WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 END  WHEN CAST(rt1.c2 AS BLOB) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN ((((rt1.c1)OR(rt0.c1)))OR(rt0.c0)) WHEN AVG(rt0.c1) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) WHEN (((rt1.c0, rt0.c1, rt0.c1))!=((rt1.c0, rt1.c2, rt1.c2))) THEN COUNT(*) WHEN ((rt0.c1)|(rt0.c2)) THEN CAST(rt1.c2 AS REAL) ELSE (NOT (rt0.c2)) END, '-1295007365', ((('1965568215' COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)), CASE WHEN rt0.c1 THEN rt1.c1 END))>=((((rt0.c0) IS TRUE), ((' /9	X&iQ') NOT NULL), '+*K	+E-(d'))) FROM rt1;SELECT DISTINCT ((CAST(rt1.c2 AS TEXT))*((rt1.c0 IN ()))) FROM rt1, rt0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER), LIKE(rt0.c2, rt0.c1, '3') COLLATE BINARY, rt0.c1 FROM rt0, rt1; -- 1ms;
SELECT DISTINCT CAST((- (rt0.c1)) AS INTEGER), ((((rt0.c2)>>(rt1.c2)))+(GROUP_CONCAT(rt0.c1))), ((((rt1.c0)|(rt1.c1))) BETWEEN (AVG(rt0.c2)) AND (((rt1.c2) NOT BETWEEN (rt0.c1) AND (NULL)))) FROM rt0, rt1 WHERE ((((+ ('-1699776293')))*((NULL IN ())))) GROUP BY (((((rt1.c1) IS FALSE)))!=(((~ (rt0.c2))))) HAVING ((((rt1.c0)AND(rt1.c0)))OR(rt0.c1)) COLLATE BINARY ORDER BY CHAR(((rt0.c1) IS FALSE), 1066973408, x'')  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((((HEX(rt0.c1))AND((NOT (rt0.c1)))))OR(rt1.c2 COLLATE BINARY)))AND(ABS(DISTINCT rt1.c0))))OR(rt1.c0)))OR(rt1.c1 COLLATE NOCASE)))AND(CAST(rt0.c1 AS BLOB))), ((CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c1 END)==((rt0.c0 IN ()))), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE BINARY FROM rt0 WHERE (x'');SELECT DISTINCT (rt0.c2 COLLATE BINARY IN ()) FROM rt1, rt0 WHERE (STRFTIME(TRIM(0X35655a60, NULL), CAST(0.427503705199743 AS TEXT), '', ((('TRUE'))==((NULL))), (((x'', 'T\', '-754449859', '-40606847', x''))!=((x'', '-973709508', NULL, NULL, x''))), CASE '362602647'  WHEN x'' THEN '<U' WHEN x'' THEN '1682885581' WHEN 0.38034090111536345 THEN x'190dde54' ELSE NULL END, 0.11763349779417542)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS REAL))||(((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c0)))) FROM rt1;SELECT DISTINCT TYPEOF(DISTINCT (- (rt0.c1))) FROM rt0 WHERE (((((((-1439809051)OR(x'')))OR(x''))) NOT BETWEEN ((('-1203007317')!=('0.5690915967810288'))) AND ((-8.95757996E8 IN (NULL))))) ORDER BY CASE WHEN '1999748693' THEN x'' COLLATE BINARY END DESC; -- 0ms;
SELECT ALL ((- (rt1.c0)) IN ()), ((((rt1.c2) IS TRUE)) BETWEEN ((((rt1.c1))=((rt1.c0)))) AND (rt1.c2)), ABS(((((NULL)OR(rt1.c1)))AND(rt0.c2))) FROM rt1 WHERE ((~ (((NULL)IS NOT('')))));SELECT ALL CASE rt1.c1  WHEN ((rt0.c0) NOT BETWEEN ('-936279638') AND ('4H/ck䒼')) THEN rt1.c0 COLLATE RTRIM WHEN ((rt1.c1)OR(rt0.c0)) THEN CASE '-1961346335'  WHEN rt1.c0 THEN rt0.c2 END WHEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c2)>(rt0.c2)) END FROM rt1 WHERE (((((((0xffffffff9e3102f5)AND(']Dtw')))AND('')))LIKE(CAST('-60694794' AS BLOB))));SELECT DISTINCT (((((((((rt0.c0 IN (rt0.c0)))OR(rt1.c1)))OR(rt1.c2)))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0, rt1 WHERE (CASE (((('90745242')OR(NULL)))OR(x'13980482'))  WHEN (('-242146195')>(0.9960421918609826)) THEN SQLITE_VERSION() END) ORDER BY ((CAST(rt1.c2 AS INTEGER))/(((rt1.c1)IS(rt1.c0)))); -- 0ms;
SELECT ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM, ((((CAST(rt0.c2 AS NUMERIC))OR(TOTAL_CHANGES())))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE NULL END)), ((((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)))<=(rt0.c2 COLLATE NOCASE)) FROM rt1;SELECT ALL SQLITE_COMPILEOPTION_GET(((rt0.c2)&(rt0.c2))) FROM rt1, rt0 WHERE ((((x'')-(0.46398901458124153)) IN (((('', 'PN},', 0.056497326233847955)) BETWEEN ((0.9243773894551158, '-883058041', 1.43586057E9)) AND (('997834935', 'PN},', 'N%*Z]')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2)IS(rt1.c1)))LIKE('557250035')), COUNT(*) OVER (), (((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c0)), ((rt0.c2)%(rt1.c0)), NULLIF(rt1.c1, rt1.c2)))==((((rt1.c2)IS NOT(rt0.c0)), ((rt1.c2)-(rt1.c2)), ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0))))), (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((((rt1.c0) IS TRUE)))), SUM(LIKELIHOOD(DISTINCT rt1.c2, 0.28132767345713494)) OVER () FROM rt0, rt1 ORDER BY CASE WHEN ((rt0.c1) NOTNULL) THEN QUOTE(rt0.c2) WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN (((rt0.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND (('L\DRa(', rt0.c0, rt1.c0))) WHEN ((rt0.c0)IS NOT(NULL)) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1)) END DESC  NULLS FIRST; -- 0ms;
SELECT ('t' IN ()) FROM rt1 WHERE (CAST(NULL AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS INTEGER) COLLATE BINARY, ((CAST(rt1.c1 AS TEXT))<=(NULL)), CASE WHEN rt0.c0 COLLATE NOCASE THEN load_extension(rt0.c0) WHEN TOTAL(rt1.c1) THEN rt0.c0 COLLATE NOCASE WHEN (rt0.c0 IN ()) THEN rt1.c1 END, (((((((('5	xm2]''')AND(rt0.c0)))OR(rt1.c2)))OR(rt0.c1)))AND(rt1.c2)) COLLATE RTRIM, rt0.c2 FROM rt0, rt1 WHERE ((~ ((~ (-383171290))))) ORDER BY (((rt1.c0, rt1.c2, rt0.c2)) BETWEEN ((((rt0.c1) NOT NULL), ((rt0.c1)<=(rt0.c2)), CAST(rt1.c0 AS NUMERIC))) AND ((CAST(rt1.c2 AS NUMERIC), rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c0 END)))  NULLS LAST;SELECT (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))), rt1.c2 COLLATE RTRIM, ((((((((((rt0.c1) IS TRUE))OR((((rt1.c2, rt0.c0, rt0.c1))>=((rt0.c1, rt0.c0, rt0.c1))))))OR((~ (rt1.c1)))))AND(rt1.c0)))AND(((0xffffffff8b1fcf00)||(rt1.c1)))) FROM rt1, rt0 WHERE (CAST(((((((((x'285c')AND(NULL)))OR(x'abe8')))OR(0.04938558750584521)))OR(NULL)) AS BLOB)); -- 0ms;
SELECT ALL (((((~ (rt0.c2)))AND(CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt1.c1 THEN rt0.c1 END)))OR(CASE WHEN rt1.c0 THEN rt1.c1 END)) FROM rt1 WHERE (((CAST(0.30402870248903446 AS BLOB))OR((NOT (0.28025095829755087)))));SELECT DISTINCT GROUP_CONCAT(IFNULL(rt0.c2, rt0.c1)) OVER () FROM rt0, rt1; -- 0ms;
SELECT ALL ((((rt1.c2)AND((('uG!''|') BETWEEN (rt0.c1) AND (rt1.c0)))))OR((rt0.c0 IN ()))) FROM rt1;SELECT DISTINCT COUNT((((x'', rt0.c1, rt0.c1)) BETWEEN ((rt1.c0, rt0.c1, rt0.c2)) AND ((rt1.c0, rt0.c1, rt0.c0)))) FROM rt1;SELECT DISTINCT CASE WHEN ((rt0.c1)||(rt1.c1)) THEN ((((x'a817')OR(rt1.c2)))AND(rt1.c0)) END FROM rt0 WHERE (CASE (((''))<((x'')))  WHEN NULL COLLATE BINARY THEN ((-7.38558256E8) NOTNULL) END);SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)OR((rt1.c1 IN ()))))AND(TRIM(DISTINCT rt1.c2, 1.999748693E9))) FROM rt0;SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE) FROM rt0, rt1 GROUP BY json_array_length(CASE rt1.c1  WHEN rt1.c2 THEN rt0.c2 END, ((x'')LIKE(rt1.c1))) HAVING ((((rt0.c0) ISNULL))*((NOT (rt1.c1))));SELECT (COUNT(*) IN ()) FROM rt0, rt1 ORDER BY (- (x''))  NULLS FIRST; -- 1ms;
SELECT ALL CAST(((rt1.c0) NOTNULL) AS REAL) FROM rt0 WHERE (((((('-1754933787'))<=(('1M	 gUqJ')))) NOT NULL));SELECT DISTINCT CASE ((rt1.c0) IS FALSE)  WHEN TOTAL(rt1.c2) THEN rt1.c1 WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN TRIM(DISTINCT rt0.c2) WHEN ((((rt1.c0)OR(rt1.c1)))AND(rt1.c1)) THEN rt1.c2 COLLATE BINARY ELSE ((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c0)) END, (((rt1.c2)) BETWEEN (((~ (rt1.c2)))) AND ((x''))), (NOT (json_array_length(rt0.c1, rt0.c1))) FROM rt1 WHERE (((((COALESCE(DISTINCT 0.1888818377445719, '-824329869'))OR(((x'')*(NULL)))))OR(((('-374548885', '', NULL)) NOT BETWEEN ((625722361, NULL, 0.26631769420312235)) AND ((NULL, -374548885, 0.6977430821104204))))));SELECT DISTINCT CAST(rt0.c2 COLLATE NOCASE AS REAL) FROM rt0, rt1 WHERE ((0.28660710412956847 IN ()) COLLATE BINARY); -- 0ms;
SELECT ALL CASE WHEN (rt0.c1 IN ()) THEN (NULL IN ()) END FROM rt1, rt0 GROUP BY (- (('' IN (rt0.c0)))), ((((x'' IN (x''))))>((((rt1.c2)|(rt0.c2))))), ((rt1.c0) NOT BETWEEN (x'') AND (rt0.c2)) COLLATE BINARY; -- 0ms;
SELECT ALL TOTAL((- (rt0.c2))) OVER () FROM rt0, rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(COALESCE(x'', rt0.c2)) OVER (), (((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND(rt1.c1)), ((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM FROM rt0 GROUP BY ((CASE rt1.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c2 END)LIKE(((((rt1.c0)OR(rt0.c1)))OR(rt1.c1)))), (((IFNULL(rt0.c0, rt0.c2), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)), rt0.c2))!=((SQLITE_SOURCE_ID(), ((((((((x'')AND(rt1.c0)))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c2)), CAST(rt1.c2 AS NUMERIC)))), CASE (9.97834935E8 IN (rt0.c2))  WHEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt0.c0)))OR(rt1.c1)))OR(rt0.c0)) THEN json_remove(rt1.c2, rt0.c2, rt0.c2, rt1.c2) END HAVING (- (rt0.c1 COLLATE BINARY)) ORDER BY x'' DESC  NULLS FIRST, ((rt1.c0)AND(NULL))  NULLS LAST, rt1.c2  NULLS FIRST;SELECT DISTINCT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))=((SUM(rt1.c1)))) FROM rt1 GROUP BY ((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN ('' COLLATE RTRIM)), NULL, '' HAVING GROUP_CONCAT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)));SELECT ALL ((rt0.c0) BETWEEN (rt1.c0 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) FROM rt0 WHERE ((((0.24414046954730928)IS NOT(159606912)) IN ()));SELECT DISTINCT ((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))) BETWEEN (LIKE(rt0.c0, rt0.c2)) AND (((NULL)<(rt1.c0)))) FROM rt0 WHERE (((CAST(0.6186174443785218 AS INTEGER))*(CASE ''  WHEN NULL THEN -1.45215376E9 END)));SELECT ')h8' FROM rt0, rt1 ORDER BY (~ (rt1.c0)) COLLATE NOCASE COLLATE RTRIM, ((rt1.c1)*(rt0.c0)) COLLATE NOCASE ASC  NULLS FIRST, CAST((rt0.c1 IN ()) AS TEXT) ASC, ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c2 THEN NULL ELSE rt0.c2 END)||(LIKELY(rt1.c2)))  NULLS LAST; -- 0ms;
SELECT CASE rt1.c2  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))) THEN '-1688224610' END FROM rt0 WHERE (ABS(((('-1919757448'))=((0.8684379388682393))))) LIMIT -1119847880 OFFSET 1965568215;SELECT DISTINCT (NOT ((+ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(TYPEOF(rt1.c1) AS NUMERIC), (((((rt1.c0, rt1.c0, x''))>=((rt0.c1, rt1.c1, rt0.c1)))) BETWEEN (((rt1.c1)-(rt0.c2))) AND (((rt0.c0)!=(rt0.c0)))), (((rt1.c1) ISNULL) IN (-343302900)), (((MIN(rt0.c1), CAST(rt0.c2 AS REAL), rt0.c0 COLLATE BINARY))<(((rt1.c1 IN ()), ((NULL)/(rt0.c1)), ((rt0.c1)|(rt0.c0))))), 1052740738 FROM rt0 WHERE (CASE WHEN x'7376' THEN '0.4553107161660962' END COLLATE BINARY);SELECT DISTINCT (((rt0.c0)IS(rt0.c1)) IN (CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 END)), CAST(((rt0.c1)IS NOT(rt0.c1)) AS TEXT), UNLIKELY(((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0 WHERE (((-2000046214 COLLATE BINARY)OR(((x'')LIKE('449794641')))));SELECT 0.4384980644280997 FROM rt0 LIMIT -1492118578 OFFSET 1308740202; -- 0ms;
SELECT ALL ((DATETIME(rt1.c2, rt1.c1, rt1.c2, rt0.c1, NULL))!=(CASE rt1.c0  WHEN rt0.c2 THEN 0.11892446955721026 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 END)) FROM rt1;SELECT ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)) COLLATE RTRIM, CASE (rt0.c1 IN ())  WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN CAST('1875790447' AS NUMERIC) ELSE ((rt0.c1)/(rt1.c1)) END, CASE (rt0.c1 IN (rt0.c0, rt0.c1))  WHEN ((((((((rt0.c1)AND(rt1.c0)))AND(rt1.c2)))OR(rt0.c1)))AND(rt1.c2)) THEN ((rt0.c2)||(rt1.c0)) END FROM rt0;SELECT DISTINCT GROUP_CONCAT((rt1.c0 IN ())) OVER ( ORDER BY (0.0817098403535117 IN ()) DESC  NULLS FIRST, (((rt1.c1)) NOT BETWEEN ((((rt0.c0)IS NOT(rt0.c0)))) AND ((rt0.c2 COLLATE RTRIM))), IFNULL(CAST(rt0.c0 AS TEXT), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 END)) FROM rt1 WHERE ((((CAST(NULL AS REAL)))=((CAST(NULL AS REAL))))) ORDER BY CAST(ABS(rt1.c2) AS BLOB)  NULLS LAST;SELECT DISTINCT rt0.c1, '()', CASE rt1.c1 COLLATE BINARY  WHEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c1)) THEN UPPER(DISTINCT rt1.c2) WHEN GROUP_CONCAT(rt1.c2) THEN NULL WHEN CASE rt1.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 END THEN (((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) END FROM rt1;SELECT ALL ((((rt1.c2)||(rt0.c1))) NOT BETWEEN (((((rt1.c2)OR(rt1.c1)))AND(rt1.c0))) AND ((((rt1.c0))<((rt1.c1))))), CAST(-497867210 AS NUMERIC), CASE WHEN CAST(rt0.c1 AS INTEGER) THEN (('937879520') IS TRUE) WHEN ((rt0.c0)<(rt0.c2)) THEN rt1.c1 WHEN rt0.c2 COLLATE BINARY THEN SUM(rt1.c1) END FROM rt0, rt1 WHERE (0.16447687002886024) GROUP BY CASE WHEN rt0.c0 THEN x'7bbf' ELSE (x'eef6' IN ('b /\L눝')) END HAVING ((((((rt0.c0)>>(rt0.c1)))AND(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((((((((((((rt0.c1)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(rt0.c0)))OR(rt1.c2)))); -- 1ms;
SELECT CASE ((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0))  WHEN rt0.c1 COLLATE RTRIM THEN ((rt1.c1)>>(rt0.c1)) WHEN CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN '1503204586' END THEN ABS(rt0.c2) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN LIKELIHOOD(rt1.c0, 0.6067144383561439) END, (((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND (((~ (rt0.c2))))), DATE(((rt0.c0)LIKE(rt1.c1)), SQLITE_SOURCE_ID(), ((((((((0.07669040716287989)OR(rt1.c0)))OR(rt0.c2)))OR(rt1.c2)))AND(rt0.c2)), (((rt0.c1))==((rt0.c2))), ((rt0.c2)<<(rt1.c1))) FROM rt1 WHERE (((CASE WHEN 0.4553107161660962 THEN x'8ebacd85e434' WHEN NULL THEN x'' WHEN NULL THEN 'In' ELSE 0.07710980040827087 END) ISNULL));SELECT ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) ISNULL) FROM rt0 WHERE ('') ORDER BY ((CAST(rt1.c2 AS TEXT)) NOT NULL) DESC  NULLS LAST, 0.600661973368236 ASC LIMIT 684853147;SELECT DISTINCT (((rt1.c0)) BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)) AND ((json_valid(rt0.c2)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (((((((((rt0.c1 IN ()))AND(((rt0.c1)IS(rt1.c0)))))AND(((rt1.c2)<>(rt1.c2)))))AND(((rt1.c2)=(rt0.c2)))))AND(((rt1.c1)&(rt0.c2)))) FROM rt1, rt0; -- 0ms;
SELECT (((((rt1.c2)=(''))))==((rt1.c1))), (((((0.427503705199743))<=((rt0.c2))))>(MIN(rt0.c0, rt0.c0))), ((1200928254) BETWEEN (rt1.c0 COLLATE NOCASE) AND (CAST('几' AS INTEGER))) FROM rt0, rt1 WHERE ((((x'')) BETWEEN (((~ ('-109662787')))) AND (((+ (x'')))))) GROUP BY TYPEOF(((rt1.c1)-(rt1.c1))), ((((((rt1.c2)AND(rt0.c0)))AND(rt1.c2))) ISNULL), ((UNLIKELY(rt0.c1))&((rt1.c2 IN ()))); -- 0ms;
SELECT ALL (+ (((rt0.c1)AND(rt0.c1)))), ((rt1.c2 IN (rt1.c2)) IN (x'447f', ((((rt1.c2)AND(rt0.c0)))AND(rt1.c0)))), ((((rt1.c2)) NOT BETWEEN ((0.8386052072683486)) AND ((0.3535456693507686))) IN ()) FROM rt0 GROUP BY ((((rt1.c0)>=(rt0.c1))) NOTNULL) HAVING (+ (CASE WHEN rt0.c0 THEN rt0.c1 END)) LIMIT -1923726148 OFFSET -1452153760;SELECT DISTINCT UPPER(rt1.c0) FROM rt1 WHERE (CASE WHEN ((0.8216931701656226) IS TRUE) THEN CASE WHEN x'' THEN 0.6977430821104204 END END); -- 0ms;
SELECT DISTINCT (((((((rt1.c1)) BETWEEN (('-60694794')) AND ((rt0.c0))))AND(rt0.c1)))OR((rt1.c0 IN ()))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c0, AVG(((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))), ((((((rt1.c0) NOT NULL))AND(TOTAL(rt1.c2))))OR(CASE WHEN 'w^.N)Z溒K' THEN x'33f9' END)) FROM rt0, rt1 WHERE ((LENGTH(0.2462704605988737) IN ())); -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN ((((rt0.c1)-(rt0.c2)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c1))))), (- (CAST(rt1.c1 AS NUMERIC))), 'UqbfO?V0', rt1.c0, (MIN(rt1.c2) IN ()) FROM rt0, rt1 WHERE ((((((x'') ISNULL)))!=((((((NULL)AND(0.1660880627770862)))AND('885349229')))))); -- 0ms;
SELECT DISTINCT (((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))*(((rt1.c1) NOT NULL))), rt1.c2, CAST(rt1.c0 COLLATE BINARY AS NUMERIC) FROM rt1, rt0 WHERE (((TYPEOF('舙Y')) ISNULL)) INTERSECT SELECT ALL AVG(((rt1.c1)!=(rt0.c0))) OVER (), (((('-1391844826')<=(rt1.c1))) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND (((((rt0.c2)OR(rt1.c2)))OR(rt0.c2)))), MAX(((rt1.c2)!=(rt1.c1))) FROM rt1, rt0 WHERE (((('1849251095' IN ()))IS NOT(187740648))); -- 2ms;
SELECT DISTINCT (LOWER(NULL) IN (((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0, rt1 WHERE ((((0.20395934611084243 IN (-1439763150))) NOT NULL)); -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((('~') IS FALSE))=(((x'ae02') IS FALSE)))); -- 0ms;
SELECT rt0.c0, CASE (rt1.c1 IN ())  WHEN ((((rt0.c1)AND(rt1.c2)))AND(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND ('')) END, ((((rt1.c1)IS NOT(rt1.c2)))/(CASE '2114226935'  WHEN rt0.c0 THEN rt0.c2 WHEN -1494920161 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c2 END)) FROM rt1, rt0 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN ((((((((('-2027724486')AND(0.0989621639562015)))OR(0Xffffffff9b998990)))AND('1972478402')))OR(NULL))) AND (-1502548402))) ORDER BY rt1.c2 COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt1.c0 IN (rt0.c0)) WHEN 0Xfffffffff20ac5e6 THEN ((rt0.c2) IS TRUE) WHEN ((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END FROM rt1 WHERE (UPPER(DISTINCT ((0xffffffff8bc85f42)>>('')))) ORDER BY ((((rt0.c1) IS TRUE))LIKE((- (rt0.c1)))) ASC, x''  NULLS FIRST, (('[X纲*BQ3(') BETWEEN ((rt0.c2 IN ())) AND (rt1.c2))  NULLS LAST;SELECT ALL (((~ (rt1.c0))) NOTNULL) FROM rt0;SELECT TOTAL(((rt1.c1)+(''))) OVER (), NTILE((((rt1.c0 IN ())) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))) AND (rt0.c2 COLLATE NOCASE))) OVER ( GROUPS  UNBOUNDED PRECEDING), rt0.c2 FROM rt1, rt0 LIMIT -1461851924; -- 0ms;
SELECT AVG((- (rt0.c2))) OVER () FROM rt0 WHERE (((((((((((((x'7d56')OR('-2129371391')))OR('1187988775')))AND(NULL)))OR(-1412595281)))OR(0.7919282249143886 COLLATE BINARY)))OR((('1253840486') IS TRUE)))); -- 0ms;
SELECT (+ (((rt1.c1) ISNULL))) FROM rt0, rt1 WHERE ((0.9593487070598836 IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM FROM rt0, rt1 WHERE (COALESCE((('3\nszPd') NOT BETWEEN (1472557059) AND ('-1610778383')), 'VV', (NOT (x'')), (((x'92681f97', '-2032391930', 0.026265523030627347)) BETWEEN ((NULL, 0.7761488456594822, 0.05706460713092831)) AND ((NULL, 0.21763208397076017, NULL))))); -- 0ms;
SELECT ALL (((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))<(CAST(rt0.c0 AS INTEGER))), COUNT(*), (((rt1.c1)) NOT BETWEEN (('370123027')) AND ((((((((((rt0.c0)OR(rt0.c1)))AND(rt1.c0)))AND(rt0.c2)))AND(rt1.c1))))), ((rt0.c1)LIKE(TOTAL(rt0.c0))), ((GROUP_CONCAT(rt1.c2)) BETWEEN (CAST(rt1.c2 AS REAL)) AND (((((rt1.c2)OR(rt1.c2)))OR(NULL)))) FROM rt0;SELECT DISTINCT NTH_VALUE(((((rt1.c1)OR(rt1.c1)))<(((((rt1.c1)OR(rt1.c0)))OR(rt1.c0)))), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE NOCASE) OVER ( ORDER BY rt1.c0) FROM rt1; -- 0ms;
SELECT (((- (rt1.c1))) IS FALSE) FROM rt1, rt0; -- 0ms;
SELECT ALL (- (TOTAL(rt1.c1))) FROM rt1; -- 0ms;
SELECT ALL ((rt1.c1)>(rt1.c0)) COLLATE NOCASE FROM rt1 WHERE ((- (CASE 1666805478  WHEN x'' THEN '362602647' WHEN 153137407 THEN x'0529' WHEN 0.8818399329789735 THEN -6.90813101E8 ELSE 0x2e8a62fd END))); -- 0ms;
SELECT DISTINCT ((((rt1.c1)>(rt0.c1))) NOT BETWEEN (((rt1.c1)>(rt1.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0, rt1 WHERE ((- (((NULL) NOTNULL)))) LIMIT 1434386749; -- 0ms;
SELECT CASE WHEN ((rt1.c1)==(rt1.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE MAX(rt1.c2) END FROM rt0;SELECT ALL ((((((rt0.c0)OR(rt1.c2)))AND(rt0.c1))) NOTNULL) FROM rt1, rt0; -- 0ms;
SELECT ALL (((rt0.c1) IS TRUE) IN (rt0.c2 COLLATE RTRIM)) FROM rt1 WHERE (((((NULL))>((NULL))) IN (json_patch('xBgL)骇', 0.5740473539041557), (NOT ('1718257359')))));SELECT '?v' FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c2, AVG(SQLITE_SOURCE_ID()) OVER (), (((((((((- ('-1554694154')))OR(((rt0.c2)LIKE(rt1.c2)))))AND(rt1.c2 COLLATE RTRIM)))OR(((NULL)IS(rt1.c2)))))AND(json(rt0.c2))) FROM rt1, rt0 WHERE ((- (CASE WHEN NULL THEN 1258532498 ELSE x'' END))); -- 0ms;
SELECT ALL 0.0501965275299463 COLLATE RTRIM, CAST(rt1.c1 AS REAL), ((((+ (rt1.c1))))=((((rt1.c0)GLOB(-9.36279638E8))))), ((((1155423342) NOTNULL))<(CAST(rt1.c2 AS INTEGER))), (((rt1.c1, rt1.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (x'') AND (rt1.c1)), CAST(rt1.c0 AS INTEGER), (rt0.c1 IN ()))) AND ((CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt0.c0) ISNULL), ((rt1.c1) NOTNULL)))) FROM rt1, rt0 ORDER BY ((((((rt0.c1)AND(rt1.c2)))OR(x'')))LIKE(rt1.c1 COLLATE BINARY))  NULLS FIRST; -- 0ms;
SELECT ALL CAST(CASE rt0.c2  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END AS NUMERIC) FROM rt1, rt0 GROUP BY IFNULL(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))); -- 1ms;
SELECT NULL FROM rt1; -- 0ms;
SELECT DISTINCT ((((NOT (rt1.c0))))>=(((rt1.c2 IN ())))), (((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0))))<(CAST(rt1.c2 AS TEXT))), 1466413068 FROM rt1, rt0 WHERE (((0.38826971989346626)+('%HsT[[uk')) COLLATE NOCASE) ORDER BY CAST(0.9744009711481361 AS REAL)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt0.c0)OR(rt1.c1)) IN (((rt1.c1) IS FALSE))) FROM rt1, rt0; -- 0ms;
SELECT NULL FROM rt1 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (CAST(0.6918827980559511 AS TEXT)) AND (CASE WHEN 'Lfc膪KB''' THEN x'' END))); -- 0ms;
SELECT (~ (x'')) FROM rt1, rt0 WHERE ((((((0.6404308756396353)IS(NULL)), ((0.40524649885225605)-('')), -1.09662787E8 COLLATE RTRIM))==((((x'')>>('-1237723155')), '' COLLATE RTRIM, ((0.931558343824977) NOT BETWEEN (x'') AND ('-9223372036854775808')))))); -- 0ms;
SELECT DISTINCT ((rt0.c2) BETWEEN (x'a04b') AND (rt1.c1)) COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1, rt0; -- 0ms;
SELECT ((((-269833559) IS TRUE)) IS TRUE) FROM rt1 WHERE (CASE WHEN ((x'') IS FALSE) THEN ((('', '-1754933787', x''))<=(('C6GkD9u', 0xffffffff9e285f0f, 0.6036311401645155))) ELSE (('')LIKE(x'')) END); -- 0ms;
SELECT DISTINCT ((IFNULL(DISTINCT rt0.c2, rt0.c1)) IS TRUE), (((rt0.c2 IN ())) NOTNULL), CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c2)*(rt0.c0)) THEN rt1.c1 COLLATE NOCASE ELSE x'637c' END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)AND(((rt1.c1)>>(rt1.c1)))))OR(((rt0.c0)>=(rt0.c1)))), LAST_VALUE((NOT ((- (rt1.c1))))) OVER (), ((TOTAL(rt0.c2))<=(rt1.c1 COLLATE NOCASE)) FROM rt1 ORDER BY NULL DESC  NULLS FIRST;SELECT ALL ((((((((((rt1.c0)OR(rt0.c2)))AND('0.5005348851323728')))OR(rt0.c0)))OR(rt0.c0))) NOT NULL) FROM rt0;SELECT 0.9315166489093772, SQLITE_COMPILEOPTION_GET((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1)))), NULLIF(((rt1.c2)AND(rt1.c2)), NULL) FROM rt1, rt0 WHERE (TRIM(DISTINCT CASE NULL  WHEN NULL THEN x'8c2b' ELSE 'o텔' END, (('wVhY+L') IS FALSE))); -- 0ms;
SELECT LAST_VALUE((((rt1.c0)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((x'')))) OVER () FROM rt0, rt1 LIMIT 1563979632 OFFSET 465148371; -- 1ms;
SELECT ALL ((- (rt1.c2)) IN ()) FROM rt0, rt1 LIMIT 1965568215; -- 0ms;
SELECT DISTINCT ((0.5070500208657781) BETWEEN ((((rt1.c2, rt1.c1, rt0.c0)) BETWEEN ((rt1.c0, rt1.c1, rt0.c2)) AND ((rt1.c0, rt1.c1, rt0.c2)))) AND (CAST(rt1.c2 AS TEXT))) FROM rt1, rt0 WHERE (CAST(((x'4070') NOTNULL) AS TEXT)) GROUP BY LOWER(DISTINCT ((x'ad76')GLOB(rt0.c2))) LIMIT -1871849561; -- 0ms;
SELECT DISTINCT (((rt1.c0)*(rt1.c2)) IN (((rt0.c1)IS NOT(rt0.c2)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt0.c0) ISNULL) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((rt1.c1)AND(rt1.c0)))AND(rt0.c1)))OR(0.3740947285244667)))AND((rt1.c0 IN ()))) FROM rt0, rt1 WHERE (((((((x'6ad2')OR('-973709508')))AND('rR&pK')))<=(((-1.295007365E9)IS NOT('TRUE'))))) GROUP BY CASE rt0.c1  WHEN ((rt0.c1)<=(rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) END, CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c2)!=(rt1.c1)) WHEN CAST(rt1.c0 AS INTEGER) THEN (rt1.c0 IN ()) WHEN CAST(0.09739448606216194 AS REAL) THEN '1995310153' END, ((CAST(rt1.c0 AS INTEGER)) ISNULL), ((CASE rt1.c2  WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 END)+(-3.20712573E8)), CASE WHEN (((rt0.c2))>=((0.7177771342155146))) THEN HEX(DISTINCT rt1.c1) ELSE CAST(rt1.c1 AS INTEGER) END; -- 1ms;
SELECT DISTINCT TOTAL((((rt1.c2))>((rt0.c2)))), LAG((((rt1.c2 IN (rt1.c1))) NOT BETWEEN (0.9232586940937038) AND (CASE rt1.c2  WHEN rt1.c2 THEN x'' WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)), (NOT (((rt1.c2)AND(rt1.c0)))), ((((rt1.c1, rt1.c2, rt1.c2))>((rt1.c0, rt1.c1, rt1.c0))) IN (((rt1.c1) ISNULL)))) OVER (), ((rt0.c1 COLLATE NOCASE) BETWEEN (rt1.c1) AND ((NOT (rt0.c0)))) FROM rt1 WHERE (CAST((('[1153:1024-]') NOT BETWEEN (x'') AND ('1847220357')) AS INTEGER));SELECT ALL (((((rt0.c2))>((rt1.c2))))IS((NOT (rt0.c1)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)LIKE(rt0.c2))) BETWEEN (((rt1.c2)+(rt1.c1))) AND (rt0.c2)) FROM rt1, rt0 WHERE (QUOTE(((0.3208932842226201) NOT BETWEEN ('895834720') AND (-8.24329869E8)))); -- 0ms;
SELECT DISTINCT COUNT(LIKELIHOOD(rt0.c2, 0.04999875384822683)) OVER () FROM rt1, rt0 WHERE (((CAST(0.8273178348630987 AS NUMERIC)) ISNULL)); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) BETWEEN ((- (rt1.c0))) AND ((NOT (rt1.c0)))) FROM rt1;SELECT ALL CASE WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c2)) THEN ((x'2f5e') NOT BETWEEN (rt1.c1) AND (rt1.c2)) END FROM rt0, rt1 WHERE (((CAST(NULL AS BLOB)) BETWEEN (HEX('(?')) AND ((('152460924')>=('4t'))))); -- 0ms;
SELECT DISTINCT CAST(json_array_length(rt0.c1, rt0.c0) AS REAL) FROM rt1, rt0;SELECT DISTINCT NULLIF((((rt0.c0, rt1.c2, rt0.c1))>=((rt0.c1, rt1.c1, rt1.c2))), (rt1.c1 IN (rt1.c0))), ((((((rt0.c1)AND(rt1.c2)))AND(rt0.c1))) IS TRUE), (((rt0.c2)) BETWEEN ((TRIM(rt1.c2))) AND ((CAST(rt1.c1 AS REAL)))), (rt0.c1 COLLATE BINARY IN ()), CAST(((rt1.c1)/(rt1.c0)) AS REAL), ((((((((((rt0.c2)OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c2)))AND(rt0.c1))) BETWEEN (COUNT(*)) AND (x'3309' COLLATE BINARY)), ((((((((((rt0.c1) IS FALSE))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c0)>(rt1.c0)))))AND(0.531614354166592)))AND(((NULL) IS TRUE))) FROM rt0 WHERE (((CAST(0.9768011931181066 AS NUMERIC)) NOTNULL));SELECT (((((rt1.c2, rt0.c0, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, NULL)) AND ((rt0.c2, rt0.c1, rt1.c0)))) NOTNULL), TOTAL(TYPEOF(DISTINCT rt1.c2)) OVER (), rt1.c1 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c1  WHEN rt1.c2 THEN rt1.c1 END AS TEXT) FROM rt0 LIMIT -1552367957;SELECT DISTINCT (((rt1.c2 IN ())) IS TRUE), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY, ((~ (rt1.c0)) IN ()) FROM rt0, rt1 WHERE (CASE WHEN (- (NULL)) THEN (((('-895757996')OR('541689178')))AND(NULL)) END); -- 0ms;
SELECT ALL rt0.c0 FROM rt1, rt0; -- 0ms;
SELECT ALL COUNT(((rt0.c2) NOT NULL)) OVER () FROM rt1 WHERE (x'');SELECT CAST((rt0.c2 IN ()) AS NUMERIC) FROM rt0, rt1 WHERE ((NOT (((0.11137774050469207)||(NULL))))) ORDER BY NULL; -- 1ms;
SELECT DISTINCT 0.9084813541376621, NULL, ((rt1.c2)IS NOT(((rt1.c1) NOTNULL))), AVG(((((((((rt1.c1)OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c1))), CAST(((rt0.c2) NOT NULL) AS TEXT), CASE (((x'', rt0.c0, rt1.c2)) BETWEEN ((rt0.c2, rt1.c1, '')) AND ((rt0.c2, rt0.c1, rt1.c0)))  WHEN CAST(rt1.c2 AS REAL) THEN rt0.c0 WHEN (- (NULL)) THEN rt0.c1 WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c0 END THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c1)) ELSE (((rt1.c0, rt0.c2, rt1.c0, rt1.c1, rt1.c1))!=((rt0.c0, 1.394549267E9, rt0.c0, rt1.c2, rt0.c1))) END, ((((rt0.c1)<<(rt1.c2))) IS TRUE) FROM rt1 WHERE (((((((NULL)AND(NULL)))AND('_u>\r'))) ISNULL)) GROUP BY (((rt1.c1) IS TRUE) IN ());SELECT MIN(((rt0.c2)+(rt1.c2)), CASE WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c2 END, (((rt0.c2, rt1.c0, rt0.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt0.c1)) AND ((rt1.c2, rt0.c0, rt1.c0))), CASE WHEN rt1.c0 THEN rt1.c1 END) FROM rt0 WHERE (CASE ((x'')>('-1684298169'))  WHEN (('1469394958')IS(x'')) THEN ((x'') IS TRUE) END);SELECT ALL (NOT (((rt0.c0) NOT NULL))) FROM rt0 WHERE (((((NULL) ISNULL))/((- (NULL))))); -- 0ms;
SELECT DISTINCT (((~ (rt0.c0)))IS NOT(((rt0.c2)>(rt0.c2)))) FROM rt0 WHERE ((~ (CAST(0X7028acdb AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((((rt0.c2 IN (rt0.c2, rt1.c1)))AND(COUNT(rt0.c1))))AND(CASE WHEN rt1.c0 THEN rt0.c0 END)), -60694794, CAST(((rt1.c2)>=(x'')) AS INTEGER) FROM rt0 WHERE (((('-700381285')<('.')) IN ((('1255525104') BETWEEN (NULL) AND (NULL)))));SELECT ((((((rt0.c2)AND(rt1.c2)))OR(rt1.c0))) IS TRUE) FROM rt1 WHERE (x'');SELECT ALL LAST_VALUE(((rt1.c0) NOT NULL) COLLATE RTRIM COLLATE NOCASE) OVER (), UPPER(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c0))), TOTAL(((rt0.c2)>>(x''))) OVER () FROM rt0, rt1 WHERE (((CASE x''  WHEN 'qr' THEN 0.2954601169377534 END) IS TRUE)); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c0 END) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (((rt1.c0)IS(rt0.c0)))) FROM rt1 WHERE (((0.8200933250997491) BETWEEN (((0Xffffffffea3ac441)==('|kWel5韈N'))) AND (COALESCE(x'', NULL, 0.7735780524400419, 'o'))));SELECT CASE ((rt0.c1)<>(rt1.c1))  WHEN HEX(DISTINCT x'') THEN rt0.c0 COLLATE BINARY ELSE SUM(rt1.c1) END FROM rt0, rt1 LIMIT 362602647; -- 0ms;
SELECT DISTINCT ((COUNT(rt1.c2))>=(rt1.c1)) FROM rt0;SELECT DISTINCT rt0.c2 FROM rt1, rt0; -- 0ms;
SELECT (~ (rt0.c0)) COLLATE NOCASE FROM rt0 ORDER BY (rt1.c0 IN ()); -- 0ms;
SELECT (((MAX(rt0.c0)))<((CAST(rt0.c2 AS TEXT)))) FROM rt1;SELECT DISTINCT UPPER(DISTINCT (rt0.c0 IN ())), (((((rt0.c0)AND(rt1.c2)))AND(rt0.c1)) IN (CASE rt1.c0  WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c0 END, (rt0.c2 IN ()))), (((((((((((('-1295007365')OR((rt1.c2 IN ()))))AND(((rt1.c1)IS NOT(rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (1.52460924E8) AND (290434391)))))AND(TRIM(DISTINCT rt1.c1))))AND((((('z{Q㩎2\r')AND(rt1.c2)))OR(rt1.c0)))))AND(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)))) FROM rt1;SELECT ALL (NOT (rt0.c1)) FROM rt1;SELECT DISTINCT GROUP_CONCAT(((((((((rt1.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt1.c0))) OVER () FROM rt0 ORDER BY ((((((rt0.c2)AND(rt1.c1)))OR(0.23272889895703164))) BETWEEN ((~ (rt1.c2))) AND (((rt1.c1) NOT NULL)));SELECT ALL TOTAL((NOT (rt0.c2))) OVER () FROM rt1, rt0 WHERE (CASE (NULL IN ())  WHEN ((0.0817098403535117) NOT NULL) THEN (NULL IN (0Xffffffff8e6de2bc, NULL)) WHEN (('')IS NOT(x'021a')) THEN (((NULL))=(('-1270500568'))) WHEN ((x'0596b7d8')IS NOT(x'')) THEN '-444583578' COLLATE BINARY END) LIMIT -1237723155 OFFSET -895757996; -- 0ms;
SELECT DISTINCT rt0.c1, GROUP_CONCAT(((((rt0.c2)OR(rt0.c0)))OR(-1598158809)) COLLATE RTRIM) OVER (), NTILE(((((((((rt0.c2 COLLATE RTRIM)AND(SQLITE_COMPILEOPTION_GET(rt0.c0))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c2)>=(rt0.c0))))) OVER ( ORDER BY (~ ((~ (rt1.c0))))  NULLS FIRST) FROM rt0;SELECT DISTINCT ((+ (rt0.c0)) IN ()), NULLIF(((rt0.c2)LIKE(rt1.c0)), rt1.c1 COLLATE BINARY), ((((rt0.c2)>=(rt0.c0))) BETWEEN (rt1.c0) AND ((- (rt1.c1)))) FROM rt0 WHERE ((NOT ((- (x'')))));SELECT DISTINCT GROUP_CONCAT(CASE rt0.c1  WHEN rt0.c1 THEN rt1.c0 END), RANK() OVER (), CAST(rt1.c0 AS BLOB), ((rt0.c1 IN ()) IN ()), LEAD(0.24622708816244288, rt1.c2, CASE (((rt1.c1))<(('')))  WHEN ((rt1.c1)IS NOT(rt1.c2)) THEN ((rt1.c0)>=(rt1.c1)) WHEN (- (rt1.c0)) THEN (rt1.c0 IN ()) WHEN ((rt1.c0) NOT NULL) THEN LIKELY(DISTINCT rt1.c0) END) OVER () FROM rt1;SELECT DISTINCT (LIKELIHOOD(DISTINCT rt0.c0, 0.34671844015116593) IN (0.8267057565652236)), CAST(UNLIKELY(DISTINCT rt1.c0) AS TEXT), MIN(CASE WHEN rt0.c2 THEN rt1.c0 END) FROM rt1, rt0 WHERE ((((x'', 1999748693, 0.5023774624860534)) NOT BETWEEN ((LIKELIHOOD('+z', 0.35327887540833947), UPPER('-1203007317'), CAST(x'aeeb' AS BLOB))) AND ((CAST(x'cb41' AS NUMERIC), (('355303829') NOTNULL), (('') IS TRUE))))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST, ((rt0.c0 IN ()) IN ()); -- 0ms;
SELECT ALL ((((rt0.c0)!=(rt0.c0))) NOT BETWEEN (((rt1.c1) ISNULL)) AND (rt0.c2 COLLATE NOCASE)), 0.7481364272559569 COLLATE BINARY, ((json_array_length(rt0.c1))OR((- (rt1.c2)))) FROM rt0;SELECT ALL ((((HEX(DISTINCT rt1.c2))OR(rt1.c0 COLLATE NOCASE)))OR(GROUP_CONCAT(rt1.c2))) FROM rt1 ORDER BY CAST((~ (rt0.c2)) AS REAL) DESC  NULLS LAST, CAST(((rt0.c0)-(rt1.c2)) AS INTEGER);SELECT DISTINCT (((((((((rt1.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND('j7')) IN ()) FROM rt1 LIMIT 581368900; -- 0ms;
SELECT DISTINCT (rt0.c1 COLLATE RTRIM IN ()), 1.241834855E9, ((((((x'') IS FALSE))AND(((rt1.c1)&('fskv')))))OR(0.8090245179180038 COLLATE RTRIM)) FROM rt1 WHERE (((LAST_INSERT_ROWID())IS NOT(''))); -- 0ms;
SELECT DISTINCT ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))) NOTNULL) FROM rt1 NOT INDEXED, rt0; -- 1ms;
SELECT ALL CAST(rt0.c0 AS TEXT) FROM rt1;SELECT DISTINCT ((((((rt0.c0)OR(rt0.c0)))AND(rt1.c0))) NOT BETWEEN (TOTAL(rt0.c0)) AND (CASE rt0.c2  WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END)) FROM rt0;SELECT DISTINCT ((((NULL) NOT BETWEEN (rt0.c2) AND (NULL))) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2)))), (- ((rt1.c0 IN ()))), ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0))) IS FALSE) FROM rt1, rt0 WHERE (CAST((((x'', '', '-1237723155')) NOT BETWEEN ((NULL, x'', NULL)) AND (('*', x'bbad', 0.16141086713245834))) AS NUMERIC)) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' END AS BLOB) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((NULL) IS FALSE))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))) FROM rt0;SELECT (((rt1.c0 IN ()))-(rt1.c0)), (~ (((((((((rt0.c1)AND(rt1.c1)))AND(rt1.c1)))AND(rt0.c1)))AND(rt1.c1)))), CAST(((rt1.c1) NOTNULL) AS TEXT), CAST(((((0.0694809139788396)OR(rt1.c1)))AND(rt1.c0)) AS TEXT), ((((rt1.c2)%('2114134941')))AND(AVG(rt1.c1))) FROM rt0;SELECT DISTINCT ((rt1.c1)AND(rt0.c2)) COLLATE RTRIM, ((CAST(rt0.c1 AS TEXT))LIKE(rt1.c2 COLLATE BINARY)), SUM(TOTAL('')) FROM rt1;SELECT ((CASE WHEN rt0.c0 THEN NULL END)>>(((((((((rt0.c0)AND('-241923883')))OR(rt1.c0)))OR(rt1.c0)))AND(rt0.c2)))) FROM rt0;SELECT DISTINCT ((QUOTE(rt0.c1)) BETWEEN ((~ (rt1.c0))) AND ((rt1.c2 IN ()))), PRINTF(rt1.c0 COLLATE BINARY), COUNT(json_remove(rt1.c1, rt0.c0)) OVER () FROM rt1;SELECT SUM(rt1.c0) FROM rt0, rt1 WHERE (((((('~7t0^ftf!'))<=(('-1268892256')))) BETWEEN (((997834935)>('0.9970649668899432'))) AND ((NULL IN ())))); -- 0ms;
SELECT ALL (json(rt1.c0) IN ()) FROM rt0, rt1 WHERE (((x'284b') NOT BETWEEN (UPPER(0xffffffffecaa409b)) AND (((NULL)||(1321747235))))) ORDER BY ((TOTAL_CHANGES()) BETWEEN (CHANGES()) AND (((((rt1.c1)AND(rt0.c2)))OR(rt1.c0)))) LIMIT -1561972431; -- 1ms;
SELECT CAST((rt0.c0 IN (rt1.c2)) AS NUMERIC) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((NULL)IS NOT(rt0.c0)))/(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0, rt1 ORDER BY (CAST(rt0.c2 AS TEXT) IN ()) ASC; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0, rt1 WHERE ((((((('-837348419')AND('-1190971936')))AND('Dg')))GLOB(CAST(NULL AS INTEGER)))) ORDER BY ((((rt0.c0)-(rt0.c2))) NOTNULL) ASC; -- 0ms;
SELECT ALL ((((rt0.c0)<(rt0.c1)))-(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt1, rt0 WHERE ((~ (666408573))); -- 0ms;
SELECT DISTINCT ((MIN(rt0.c1))*(CASE rt1.c0  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END)) FROM rt1, rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER))*((~ (rt0.c0)))); -- 0ms;
SELECT CASE ((rt1.c0) ISNULL)  WHEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt1.c1)))AND(rt1.c0)) THEN ((rt1.c2)>>(rt0.c0)) WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c1 END WHEN ((rt0.c1)LIKE(rt1.c2)) THEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) WHEN CASE rt0.c1  WHEN rt1.c0 THEN rt1.c2 END THEN AVG(rt0.c2) END FROM rt0;SELECT '', COUNT(*) OVER (), (rt0.c0 IN (rt1.c0)) COLLATE RTRIM FROM rt0 WHERE (((('1241834855' IN (0.6978193912483623)))/(('-1088579640' IN ()))));SELECT ((((rt0.c0) ISNULL)) BETWEEN (IFNULL(DISTINCT rt1.c2, rt1.c0)) AND ((~ (rt0.c0)))), MAX(MIN((~ (rt0.c2)))), GROUP_CONCAT(((((rt1.c1)AND(rt1.c1)))AND(rt1.c0))) OVER () FROM rt0 WHERE ((((('') ISNULL))||(CASE 'Fṯ'  WHEN '-1640955147' THEN -2.42146195E8 WHEN NULL THEN 'b /\L눝' WHEN NULL THEN 1831392926 ELSE NULL END)));SELECT DISTINCT ((']>' COLLATE NOCASE)>>(((((rt1.c0)OR(rt0.c1)))OR(rt0.c2)))) FROM rt1;SELECT ALL COUNT(CASE rt0.c2  WHEN rt0.c2 THEN rt1.c1 END) OVER () FROM rt1 NATURAL JOIN rt0 WHERE (((('', 0xffffffffe60ec531, x'')) BETWEEN (((- ('96y<MT')), ((-244476512)!=(0Xffffffffbde389e1)), (((1.881713883E9)) NOT BETWEEN ((0.6847654398414638)) AND (('-799016565'))))) AND ((CASE WHEN -2.006804755E9 THEN -8.95757996E8 ELSE x'' END, (((('')AND('')))OR(x'')), (('-1044283694')<(0.8437565070395424)))))) ORDER BY (CASE WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c1 END IN ()) DESC; -- 0ms;
SELECT ALL rt0.c1 FROM rt1 GROUP BY ((rt1.c1 COLLATE NOCASE)<<(((((rt0.c1)AND(rt1.c0)))AND(rt1.c0)))) HAVING CASE WHEN COUNT(rt1.c2) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c1 THEN '-320712573' END WHEN (((rt0.c1))>=((rt0.c0))) THEN rt0.c0 WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0)GLOB(rt1.c1)) END;SELECT DISTINCT ((((((rt1.c0)>=(rt0.c1)))AND(rt1.c0)))AND(((((0.12885574830295055)OR(rt0.c1)))AND(rt0.c0)))) FROM rt1, rt0 LIMIT 1148242449; -- 0ms;
SELECT ALL ((((rt1.c1)*(rt0.c1)))>(CAST(rt1.c2 AS TEXT))) FROM rt0, rt1; -- 1ms;
SELECT rt1.c0 FROM rt1, rt0; -- 0ms;
SELECT ALL RTRIM(((((rt0.c1)AND(rt0.c2)))AND(rt1.c2))), CAST(((((rt0.c2)OR(rt1.c0)))OR(NULL)) AS INTEGER), ((((((((NULLIF(DISTINCT x'', rt1.c0))AND(((rt1.c0)<(rt1.c0)))))AND(((rt0.c2) NOTNULL))))AND(((rt0.c1)IS(rt1.c1)))))OR(CAST(rt0.c2 AS INTEGER))) FROM rt1 WHERE (LIKELIHOOD(((((x'a39e')OR(0.19925702516158972)))OR(0.21444105310990902)), 0.007991722192408957));SELECT DISTINCT (~ (CAST(rt0.c0 AS TEXT))), (((((+ (rt0.c0)))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c1, rt1.c2, rt0.c2)) NOT BETWEEN (('>!K轑OV%^', rt0.c2, rt0.c0)) AND ((rt0.c1, rt1.c1, rt0.c0))))), (((rt1.c0) IS TRUE) IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c0 END, rt0.c2 COLLATE BINARY)) FROM rt0 WHERE ('-1439809051');SELECT DISTINCT (((LIKELY(rt0.c0)))>=((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) FROM rt0, rt1 WHERE (CAST(2.00294128E8 AS INTEGER)) ORDER BY ((((x'') NOT BETWEEN (rt0.c1) AND (rt1.c1)))<(((rt0.c0) NOT NULL)))  NULLS LAST LIMIT 19158533 OFFSET -1974036070; -- 0ms;
SELECT DISTINCT ((((rt1.c1)%(rt1.c1)))IS((+ (rt1.c0)))) FROM rt1 WHERE ((- ('')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT '-694074513' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((- (rt1.c1))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (AVG(rt0.c0))), CASE ((rt1.c0)IS NOT(rt1.c2))  WHEN UPPER(rt0.c1) THEN rt0.c0 COLLATE RTRIM END, (highlight(rt0.c1, '옇>rw\nD	K,', rt1.c0, rt1.c1) IN (0.466800167940136, MIN(rt0.c1))) FROM rt1 WHERE ((0.546456575078217 COLLATE BINARY IN ()));SELECT ((((rt1.c0)OR((rt1.c2 IN ()))))OR(((((rt0.c1)OR(rt0.c1)))AND(rt1.c2)))) FROM rt0, rt1 WHERE (0.07096741396416317) UNION SELECT DISTINCT 307489073 FROM rt1 WHERE (CASE WHEN (('-107202717')*('嫧')) THEN CAST(NULL AS TEXT) WHEN (('w^.N)Z溒K')>(x'')) THEN ((0.4028178307656971) BETWEEN (NULL) AND (-1295007365)) WHEN CASE NULL  WHEN x'' THEN '32840997' WHEN NULL THEN 0.21065234185457127 WHEN 0.6319147311620191 THEN x'' ELSE NULL END THEN (('732321877') NOT BETWEEN (NULL) AND (x'1b1c')) ELSE x'' COLLATE NOCASE END) GROUP BY CAST((((rt0.c2))!=((rt1.c0))) AS TEXT) HAVING UPPER(DISTINCT ((840442796) BETWEEN (rt1.c1) AND (rt1.c1)));SELECT DISTINCT ((NULL COLLATE NOCASE)AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c2)))) FROM rt1;SELECT DISTINCT ((LIKELIHOOD(DISTINCT rt0.c0, 0.8369590525183745)) NOT BETWEEN ((((rt0.c2, rt0.c0, rt0.c2, rt0.c1, rt1.c2)) BETWEEN ((x'5b76', rt1.c2, rt1.c1, rt1.c0, rt0.c0)) AND ((rt1.c0, rt0.c2, rt1.c1, rt0.c0, rt1.c1)))) AND (MIN(rt1.c2))) FROM rt1 WHERE (((((- (NULL))))==((((((NULL)AND(0.16052531290715844)))OR(-1683808781)))))) LIMIT -630187980 OFFSET -1655305935;SELECT x'' FROM rt0, rt1 ORDER BY rt1.c1; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((0.015179624375542877 IN (rt0.c0)))) AND (((((rt0.c2, rt0.c1, rt1.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c0, rt1.c1, rt0.c2)) AND ((rt1.c2, rt0.c2, rt0.c2, rt0.c0, rt1.c2)))))), SUM((rt1.c2 IN (rt1.c0))), (((((((((((x'', rt1.c1, rt1.c1))<=((rt1.c2, rt1.c1, rt0.c2))))AND(AVG(rt0.c0))))OR(CAST(rt1.c0 AS TEXT))))OR(LAST_INSERT_ROWID())))OR(((rt1.c0) NOT BETWEEN (rt0.c2) AND ('-178373217')))) FROM rt0, rt1 WHERE ((x'e282' COLLATE RTRIM IN (CASE '-895757996'  WHEN NULL THEN 0.06733033130878674 END))) GROUP BY '(_' LIMIT 1973382531 OFFSET -714539396; -- 0ms;
SELECT DISTINCT (((~ (rt0.c1))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0, CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER), json_insert(((rt1.c2)*(rt0.c2)), 0.9260717642153097, CASE rt1.c1  WHEN rt1.c0 THEN rt0.c1 END) FROM rt1 WHERE ((((0X718f291b)) NOT BETWEEN (((x'' IN ()))) AND ((x'' COLLATE RTRIM))));SELECT DISTINCT CASE MIN(rt1.c0)  WHEN ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c1)) THEN 0.06189985808931375 COLLATE NOCASE ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c0)) END FROM rt1, rt0 WHERE ((((((NULL))<((x'a00de5c2'))))%(CAST(NULL AS BLOB)))) ORDER BY ((CAST(rt1.c2 AS NUMERIC)) NOT NULL) ASC  NULLS FIRST; -- 0ms;
SELECT (((rt0.c2, rt0.c1, 936870012)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, ((rt0.c0) IS FALSE), (~ (rt0.c2)))) AND ((((NULL)/(rt1.c0)), (+ (rt1.c2)), CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c2 END))) FROM rt0;SELECT ALL ((rt1.c1 COLLATE NOCASE)AND(NULL)) FROM rt0;SELECT ALL CASE WHEN SUM(rt1.c0) THEN (+ (rt0.c0)) WHEN UPPER(rt0.c1) THEN rt1.c0 WHEN CAST(rt0.c0 AS TEXT) THEN CAST(rt1.c1 AS INTEGER) END, NULL, MIN((((rt0.c1, rt1.c1, rt1.c1))<((rt0.c2, rt0.c1, x'c4f4'))) COLLATE BINARY) FROM rt0 WHERE (((- (0.4033893549911822)) IN ()));SELECT DISTINCT rt1.c2 COLLATE NOCASE, CAST('' AS NUMERIC), rt0.c2 FROM rt0, rt1; -- 0ms;
SELECT ((-1349413576) ISNULL) FROM rt0 WHERE (((((NULL)) NOT BETWEEN ((0.5306610416535767)) AND ((x''))) IN ())) GROUP BY ((CASE WHEN rt1.c1 THEN '\n]yxD,' END) NOT BETWEEN (rt1.c0 COLLATE RTRIM) AND (CAST(rt1.c0 AS REAL))) HAVING ((rt0.c1 IN (rt1.c1)) IN ()) ORDER BY x'' ASC  NULLS FIRST;SELECT ALL ((((0.015179624375542877)AND(rt1.c1)))AND(((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)))) FROM rt1, rt0; -- 0ms;
SELECT ((((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c2))) IS FALSE), ((TYPEOF(rt0.c2)) NOTNULL), COUNT(CASE rt1.c1  WHEN rt0.c2 THEN NULL ELSE rt0.c0 END) OVER () FROM rt0;SELECT DISTINCT ((COUNT(*))AND(((((rt1.c2)OR(rt0.c2)))OR(rt1.c1)))), CASE WHEN AVG(rt1.c1) THEN ((rt1.c0)+(rt0.c0)) END, ((rt0.c1 COLLATE NOCASE) IS TRUE) FROM rt0, rt1 WHERE (((('-786082498' IN (-4.47777918E8, '80240743')))IS(json_type(NULL)))); -- 0ms;
SELECT ALL CAST((~ (rt0.c0)) AS REAL) FROM rt0 WHERE ('YdMlx'); -- 0ms;
SELECT ((MIN(rt0.c2)) IS FALSE), CAST(((rt0.c2) NOTNULL) AS INTEGER), CASE WHEN CAST(rt1.c2 AS TEXT) THEN ((rt0.c0)!=(rt0.c2)) ELSE MIN(x'') END FROM rt1 WHERE ((((ABS('-1923726148')))<=((CASE WHEN NULL THEN 0.30402870248903446 END))));SELECT DISTINCT rt1.c2 FROM rt0, rt1 WHERE ((~ ((((x''))!=((0Xffffffffdf94a40d)))))); -- 1ms;
SELECT DISTINCT (((1.7976931348623157E308)) BETWEEN ((((rt0.c0) NOT NULL))) AND ((((((NULL)OR(rt0.c0)))OR(rt0.c0))))) FROM rt1, rt0 GROUP BY CAST((((rt0.c2))<((rt1.c1))) AS REAL); -- 0ms;
SELECT (~ (((rt0.c2) NOT NULL))) FROM rt1 WHERE (((((NULL) BETWEEN ('538360611') AND (x'3a41'))) ISNULL));SELECT (((((rt1.c2, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c1, rt0.c1)) AND ((rt0.c0, rt1.c2, rt0.c0))))<=(x'b9b5')) FROM rt0 WHERE (NULL) GROUP BY ((rt1.c2 COLLATE RTRIM) NOT BETWEEN (NULL) AND ((rt0.c2 IN (rt1.c2))));SELECT ((rt1.c1) IS FALSE) COLLATE BINARY FROM rt0;SELECT ALL ((MAX(x'dd3e')) NOT BETWEEN (((rt1.c2)IS NOT(rt0.c2))) AND (((rt0.c2) NOT NULL))) FROM rt0, rt1 WHERE (((((-1.926754419E9) NOT BETWEEN (x'') AND (-77133220)))/('''6' COLLATE NOCASE))); -- 0ms;
SELECT ALL (('-2106810112') NOTNULL) COLLATE NOCASE FROM rt1, rt0 WHERE (((((-2013637170) IS FALSE)) BETWEEN ((('0.30402870248903446') NOT BETWEEN (x'38b4') AND ('-1234132375'))) AND (('-631527643' IN ())))) ORDER BY ((((rt1.c1)&(rt0.c1)))>>(CAST(rt1.c1 AS BLOB))) ASC; -- 0ms;
SELECT ALL ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))GLOB(((rt1.c1)%(rt0.c1)))), ROW_NUMBER() OVER (), '3\nszPd' FROM rt0, rt1 LIMIT -1926754419 OFFSET 1999748693; -- 1ms;
SELECT DISTINCT CAST(((rt0.c2)&(rt0.c1)) AS NUMERIC) FROM rt1;SELECT DISTINCT ((((rt0.c2)AND(x'')))OR(rt1.c1)) COLLATE RTRIM FROM rt1 ORDER BY ((((((rt1.c2)AND(rt0.c0)))AND(rt1.c2)))+(rt0.c0 COLLATE RTRIM)) ASC;SELECT DISTINCT ((((CAST(rt0.c1 AS REAL))OR((rt1.c0 IN ()))))AND(rt0.c1)), UNLIKELY(CASE WHEN rt1.c0 THEN 0.838622262373344 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END), (TRIM(rt1.c0, rt1.c0) IN ()), ((((rt0.c0 COLLATE NOCASE)OR(((0x2d7734c9) BETWEEN (rt1.c1) AND (rt0.c2)))))AND(((rt0.c0) NOT NULL))), -354980457 FROM rt0;SELECT ALL (((rt1.c0, rt0.c0, rt0.c1)) BETWEEN ((MAX(rt1.c0), ((rt0.c0) NOT NULL), NULL COLLATE NOCASE)) AND ((0.04681161090945385, ((rt0.c0)-(rt1.c0)), NULL))), (((((rt1.c2))==((rt1.c2))))<=(((rt1.c1)==(rt0.c2)))), ((rt1.c0 COLLATE RTRIM)LIKE(CAST(rt1.c2 AS TEXT))) FROM rt1;SELECT CASE WHEN (((rt1.c0, rt1.c0, rt0.c1)) BETWEEN ((rt1.c0, -158312132, rt0.c2)) AND ((rt1.c0, rt1.c1, rt1.c0))) THEN (((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE (+ (rt1.c2)) END, (+ (((rt0.c0)-(rt1.c0)))), rt1.c2 FROM rt0, rt1 WHERE ((((((NULL)AND('786263496')))AND('732482940')) IN ())); -- 0ms;
SELECT DISTINCT CASE rt1.c0  WHEN CAST('iaD' AS BLOB) THEN (rt1.c1 IN ()) ELSE ((rt1.c0) NOTNULL) END, ROW_NUMBER() OVER (), CAST((rt0.c0 IN ()) AS NUMERIC) FROM rt1, rt0 NOT INDEXED LIMIT 1005403342; -- 0ms;
SELECT ALL LOWER(DISTINCT rt0.c1 COLLATE RTRIM) FROM rt0 WHERE (((NULL) IS TRUE) COLLATE RTRIM) GROUP BY (((rt1.c1)) BETWEEN ((0.5437139973443545)) AND ((SQLITE_COMPILEOPTION_USED(rt0.c0)))) HAVING ((((rt1.c2))<=((rt0.c2))) IN ());SELECT ALL x'' FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY, CASE (NOT (rt0.c2))  WHEN (((rt0.c0))<=((rt0.c1))) THEN json_patch(rt0.c1, rt0.c1) ELSE ((rt0.c2)>>(rt0.c1)) END, NTH_VALUE((((((rt0.c2))>=((rt0.c2)))) BETWEEN (CASE WHEN rt0.c0 THEN '1678960874' END) AND ((NOT (rt0.c1)))), CAST((- (rt0.c2)) AS TEXT)) OVER () FROM rt0 LIMIT -1104717063;SELECT DISTINCT ((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END) BETWEEN (CAST(rt1.c2 AS REAL)) AND (json_insert(0.857425521283811, '-139777949', rt1.c1, rt0.c1, rt0.c1))) FROM rt1, rt0 WHERE (((((x'')GLOB(NULL))) BETWEEN (((NULL)>(1435860570))) AND ('-659209010'))) ORDER BY rt1.c2 DESC, x''; -- 0ms;
SELECT ((((+ (rt1.c0)), rt1.c0, MIN(rt1.c1), CASE WHEN rt1.c1 THEN rt1.c1 END, MIN(rt1.c0)))<((CASE rt0.c1  WHEN rt1.c0 THEN rt0.c0 END, ((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)), (rt1.c0 IN ()), 0.0942247581959762, (- (rt0.c1))))) FROM rt1, rt0 WHERE (((0.6036311401645155) NOT BETWEEN (NULL) AND ('')) COLLATE BINARY); -- 0ms;
SELECT ALL '-883058041', ((((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)))OR(rt0.c1)))AND((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0)%(rt0.c2)))), (((((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2))))<((0.09739448606216194))) FROM rt0, rt1 WHERE ('0') GROUP BY CASE '400260422'  WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)) THEN ((rt1.c0)!=(rt0.c1)) ELSE ((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)) END, HEX(1999748693), (CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END IN (TRIM(DISTINCT rt1.c0, rt1.c1))) HAVING (('-1754933787') ISNULL); -- 0ms;
SELECT ALL rt0.c0, CAST(rt0.c1 AS NUMERIC), NTH_VALUE(((('')-(rt1.c0)) IN ()), ((((((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))OR((((rt1.c0))>(('-559438941'))))))AND((+ (rt1.c0)))))AND(x'')))OR((((rt1.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c0, rt1.c2)))))) OVER () FROM rt1;SELECT ALL UPPER(DISTINCT SQLITE_VERSION()) FROM rt1, rt0 WHERE (NULLIF((('')OR('')), CAST(-2.40121767E8 AS BLOB))); -- 0ms;
SELECT DISTINCT (((rt0.c1)IS(rt1.c0)) IN ()), rt0.c1, ((rt0.c2 COLLATE NOCASE) IS TRUE) FROM rt0; -- 0ms;
SELECT PRINTF(0.887783689762179), ((COUNT(*))%(UPPER(DISTINCT rt1.c0))), (+ ((rt1.c0 IN ()))) FROM rt0, rt1 WHERE (((x'' COLLATE RTRIM)&(((((0.04938558750584521)AND(NULL)))AND(NULL))))); -- 0ms;
SELECT ALL ((((rt1.c0)OR(x'')))AND((rt1.c0 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(TOTAL(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) FROM rt0 WHERE ((((1558620149) NOT BETWEEN ('-320712573') AND (x'')) IN ()));SELECT ALL FIRST_VALUE(((rt1.c1)+(rt0.c1)) COLLATE BINARY) OVER (), rt1.c2, ((x'')AND((~ (rt0.c2)))) FROM rt1, rt0 WHERE ((((- (NULL)))<(CAST(x'9a3d' AS INTEGER)))) GROUP BY CAST((+ (rt0.c1)) AS NUMERIC); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c0)/(rt1.c2))) FROM rt0, rt1 WHERE (((((((x'e6e6')AND(NULL)))AND(x''))) NOT BETWEEN ((-1605353785 IN ())) AND (((x'') BETWEEN ('-2122718422') AND (1515417408))))); -- 1ms;
SELECT LOWER(((x'')>=(x''))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt1.c0 COLLATE NOCASE)) AND ((CAST(rt1.c1 AS NUMERIC)))) FROM rt1 NOT INDEXED, rt0 ORDER BY ((x'')>>(rt0.c1)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT ALL x'274e', ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.7901982552415353))) NOT BETWEEN (TYPEOF(DISTINCT rt1.c2)) AND (rt1.c0)), ((((rt1.c1)%('엦( 締'))) BETWEEN ((NOT (rt0.c2))) AND (((((((((rt1.c2)AND(rt0.c1)))AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c2)))) FROM rt1 WHERE (((((x'')<(x'')))-((('1028092766')>(NULL)))));SELECT DISTINCT GROUP_CONCAT(ABS(rt1.c0)) FROM rt1, rt0 WHERE (((((CASE WHEN 'j2' THEN x'' ELSE 0.47432016503902885 END)AND(((((0.7948222791698726)AND(x'ac8e')))AND(0Xffffffffc83181aa)))))OR(((x'') BETWEEN (0X2e46de46) AND (''))))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((CAST(NULL AS INTEGER)) IS TRUE)) GROUP BY ((((rt1.c0)+(rt0.c0)))*((rt0.c2 IN ()))) LIMIT 1598818083;SELECT COUNT(*) FROM rt1 WHERE (((x'677e' COLLATE RTRIM)LIKE((('-1109161503')<(0.9442276964630089))))); -- 1ms;
SELECT DISTINCT (+ (((0Xffffffffe314ea30)+(rt0.c0)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt1 WHERE (((('')) NOT BETWEEN ((LOWER(-586341907))) AND ((CASE 0.271849496521287  WHEN '' THEN 'TV' ELSE 0.18393149604281567 END))));SELECT ((((rt1.c1)&(rt1.c2))) BETWEEN (((((rt1.c2)AND(NULL)))AND(rt1.c2))) AND ((- (rt0.c2)))) FROM rt0, rt1 WHERE ((((((('O텔')AND(x'')))AND(NULL))) BETWEEN ((~ ('*K蓀uEݓ,.'))) AND (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT ALL 0.24414046954730928 FROM rt1, rt0 WHERE (COALESCE(x'e647' COLLATE BINARY, CAST(NULL AS TEXT), CAST(x'0847' AS NUMERIC), x'f61d')); -- 0ms;
SELECT CASE WHEN IFNULL(0.9011483929662872, 1125069895) THEN (+ (NULL)) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) END FROM rt0 LIMIT -628308473; -- 0ms;
SELECT DISTINCT AVG(LIKELIHOOD(rt1.c1, 0.5460773710313371)) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (~ (((rt1.c0)<<(rt1.c0)))) FROM rt0, rt1 WHERE (CAST(((0x48ae7977) ISNULL) AS NUMERIC)) ORDER BY ((json_array_length(rt0.c1, rt1.c0))&(CAST(rt0.c2 AS REAL))) ASC; -- 0ms;
SELECT DISTINCT ((-7.38558256E8 COLLATE RTRIM) NOT BETWEEN (IFNULL(rt1.c2, '1604103250')) AND (CASE WHEN 0.2481924347304938 THEN rt0.c0 END)) FROM rt0;SELECT DISTINCT AVG((rt0.c2 IN ())) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c0, rt1.c2, rt0.c0))>((rt1.c1, rt0.c1, rt1.c0)))) BETWEEN (((rt0.c2)+(rt1.c2))) AND (((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))) FROM rt0;SELECT COUNT(*) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE BINARY)LIKE(rt0.c1 COLLATE RTRIM)), rt1.c0, (((('-447777918')AND((~ (rt1.c1)))))OR(rt1.c0 COLLATE BINARY)), CASE WHEN ((rt1.c2)GLOB(rt1.c0)) THEN x'' WHEN 0.09182220952813946 THEN ((rt1.c0) IS FALSE) WHEN (+ (rt0.c1)) THEN ((rt1.c2)&('Lq-喝z')) WHEN ((rt1.c2) IS FALSE) THEN (~ (x'9f5f')) WHEN AVG(rt1.c1) THEN (- (rt1.c0)) ELSE ((rt1.c0)<(rt1.c0)) END, (((rt1.c1) NOT NULL) IN (rt0.c2 COLLATE RTRIM)) FROM rt0;SELECT CASE (((rt1.c1))>((rt0.c0)))  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rtreenode(rt0.c0, rt1.c1) ELSE CAST(rt1.c1 AS REAL) END, (('-936279638') IS TRUE), ((((rt1.c2) NOTNULL)) IS TRUE) FROM rt0, rt1 WHERE (((x'd67f')LIKE((- ('}t'))))); -- 0ms;
SELECT DISTINCT ((CASE 'l'  WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END)+(((rt0.c0)%(rt0.c0)))), TRIM((rt1.c1 IN ()), CAST(rt1.c0 AS INTEGER)), ((((rt1.c0)/(rt1.c1))) NOT BETWEEN ((((('1152044608')AND(rt0.c2)))OR('1466843278'))) AND ((~ (rt0.c2)))) FROM rt0, rt1 WHERE (((((NULL) ISNULL)) IS FALSE)); -- 0ms;
SELECT (((JULIANDAY(rt1.c0, rt1.c0, x'', rt1.c0, rt1.c2)))!=(((+ (rt1.c2))))), LIKELIHOOD(((rt1.c2)>=(rt0.c2)), 0.39756325138657345), HEX(DISTINCT CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c1 END) FROM rt1 WHERE (CASE WHEN ((0.8923416477712397)>>('80240743')) THEN (NOT ('륳(Wj')) END);SELECT DISTINCT rt0.c0, CASE WHEN rt1.c0 COLLATE NOCASE THEN (- (rt1.c1)) ELSE TRIM(DISTINCT rt0.c1, rt0.c1) END, (((rt1.c0))<((rt0.c0))) COLLATE NOCASE, COUNT(HEX(rt1.c1) COLLATE RTRIM), UPPER(AVG(rt1.c0)) FROM rt1, rt0 WHERE (((NULL COLLATE NOCASE)>>((((-1.735462228E9))<=((0.17295387107000915)))))) LIMIT 1965568215; -- 0ms;
SELECT (((rt1.c2)) NOT BETWEEN (((((rt0.c0, rt1.c0, rt1.c1))==((rt0.c2, rt0.c2, rt1.c1))))) AND (((~ (rt0.c2))))) FROM rt0, rt1 WHERE (((((NULL COLLATE BINARY)AND(x'')))AND(('129884723' IN ())))); -- 0ms;
SELECT ALL (~ (((rt0.c1) NOTNULL))) FROM rt0 WHERE (PRINTF(((x'')+(0.12425111338889527)))) GROUP BY CAST(TOTAL_CHANGES() AS REAL); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c0 END AS BLOB), MIN((NOT (rt1.c2))) COLLATE RTRIM, ((((rt0.c2) NOT NULL))IS NOT(((rt1.c1)IS NOT(rt1.c1)))) FROM rt0, rt1 WHERE (((('0.0501965275299463' IN ('9)9\rK3(T᜖', '2127544279', 0.03640755572284482)))|(0.27114117557639994 COLLATE BINARY))) GROUP BY 0.5576096772137097; -- 0ms;
SELECT ALL (((rt1.c1, rt1.c0, rt1.c0)) NOT BETWEEN (((((rt1.c1, rt1.c0, rt0.c1, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, 'Gੜ', rt1.c0, rt0.c1)) AND ((rt0.c2, rt1.c2, rt1.c1, rt0.c2, rt1.c1))), CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 END, (rt1.c1 IN ()))) AND ((CAST(rt1.c0 AS BLOB), (~ (rt1.c2)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) FROM rt1, rt0 WHERE (0.31442378345599487); -- 0ms;
SELECT ALL SUM((rt0.c0 IN (rt0.c2, rt1.c1))) OVER (), CASE WHEN rt0.c2 THEN ((rt1.c1)AND(rt0.c1)) WHEN ((rt1.c1)/(rt0.c1)) THEN (rt1.c2 IN ()) WHEN NULLIF(rt1.c1, 0.30402870248903446) THEN rt1.c0 COLLATE RTRIM WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN ((rt0.c2) BETWEEN (rt0.c0) AND (x'd741')) WHEN (((rt1.c0))>((rt1.c0))) THEN CASE rt1.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END END, ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END) IS TRUE) FROM rt0, rt1 WHERE (CASE WHEN 'B/z<' COLLATE RTRIM THEN CAST(NULL AS REAL) WHEN ((((((((0.11892446955721026)OR(x'')))OR(x'')))AND(0Xffffffffc1c6de8a)))AND(x'')) THEN ((((0.5662728243654715)AND(0x45f4f0ab)))AND('1881713883')) WHEN ((1445576361)<(NULL)) THEN UNLIKELY(x'') WHEN (('200294128')+(NULL)) THEN ((NULL) NOTNULL) WHEN ((x'26a0') IS FALSE) THEN ((((((((x'')OR(x'')))OR(x'')))AND(NULL)))AND(x'')) END); -- 0ms;
SELECT ALL (((- (rt0.c2))) NOT BETWEEN ((rt1.c2 IN ())) AND (0.5070500208657781 COLLATE BINARY)) FROM rt1, rt0 WHERE ((((NULL, 1199709499, '-1270079632'))<=(('22672475', NULL, ''))) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((rt1.c0)||(rt1.c0)))|(((((rt1.c2)OR(rt0.c2)))AND(rt1.c0)))) FROM rt0, rt1; -- 0ms;
SELECT ALL (rt0.c0 IN (rt1.c1)) COLLATE RTRIM FROM rt0 WHERE (SUBSTR((NULL IN ()), ((x'1ee0') BETWEEN ('-429280213') AND (0X4342a83c))));SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2))) ISNULL) FROM rt1 WHERE (CAST(((x'')*('0.4092689018621736')) AS BLOB)) LIMIT 1266059899;SELECT ALL (rt1.c1 COLLATE NOCASE IN ()), '0.38034090111536345', COUNT(((((rt1.c1)AND(x'')))AND(rt1.c0))) OVER () FROM rt0, rt1; -- 0ms;
SELECT (((((rt1.c1))>=((rt1.c1)))) BETWEEN ((- (rt0.c0))) AND (802086477 COLLATE BINARY)) FROM rt1 WHERE (x'c1c01581');SELECT NULLIF(rt0.c1 COLLATE NOCASE, (rt0.c2 IN (rt1.c0))) FROM rt1, rt0 LIMIT 834099943 OFFSET -1295007365; -- 0ms;
SELECT DISTINCT ((AVG(rt1.c1)) IS TRUE) FROM rt0 WHERE ((NOT (CASE 0.3442098288433967  WHEN 1e500 THEN 0xfffffffff7e3a23e END)));SELECT DISTINCT CAST(((rt1.c0)<(rt0.c0)) AS INTEGER) FROM rt1 WHERE ((((- (0.42356661884756575)))=((('348056322') NOT NULL))));SELECT DISTINCT ((((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c1 END)AND(((rt1.c0)+(rt1.c2)))))OR((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))) FROM rt0, rt1 WHERE (((((((((CAST(1.999748693E9 AS INTEGER))OR(0.021123728646927686 COLLATE RTRIM)))OR(IFNULL(NULL, 0.16014657429981838))))OR(CAST(-447777918 AS INTEGER))))AND(((x'') ISNULL)))); -- 0ms;
SELECT ALL rt1.c1 FROM rt0 WHERE ((('>') BETWEEN (((x'')>=('-1495438739'))) AND (CAST('305444343' AS TEXT))));SELECT ALL '' FROM rt0, rt1; -- 0ms;
SELECT ((rt0.c1)>=(rt1.c0)) COLLATE NOCASE, TOTAL(((rt0.c2)<(rt1.c2))), (((rt0.c0)) NOT BETWEEN (((((rt0.c0))>((rt0.c1))))) AND ((((rt0.c1)IS NOT(rt0.c2))))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt1.c1)OR(CAST(rt0.c1 AS BLOB))), (((0X44b5f7af IN (rt0.c0)))<>(((((rt1.c2)AND(rt1.c0)))AND(rt0.c0)))), (+ ((+ (rt0.c2)))) FROM rt0 WHERE ((((((0.70523598575946)AND(0.47942394930373256)))OR(x'')) IN ()));SELECT DISTINCT ((((rt0.c1)<<(rt1.c1)))>('hr')) FROM rt0;SELECT DISTINCT ((((rt1.c1)=(rt1.c2))) BETWEEN (rt0.c1) AND (GROUP_CONCAT(rt0.c2))) FROM rt0;SELECT DISTINCT ((COUNT(*)) NOTNULL) FROM rt0 WHERE (((load_extension(x'', x'c26e'))LIKE(((NULL)>>('Nds'))))) LIMIT -772411020 OFFSET -1878775401;SELECT COUNT(*) OVER (), (~ (CASE WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c2 END)), (- (((((rt1.c2)OR(rt1.c0)))AND(rt0.c0)))) FROM rt0, rt1 WHERE ('-917794820') LIMIT -374548885; -- 0ms;
SELECT ((((((rt0.c2)AND(rt1.c2)))AND(rt1.c1)))IS NOT(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c1 END)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c1 END)AND((((rt0.c0, rt0.c2, rt0.c2, x'', '-837348419')) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c1, rt0.c2, rt1.c1)) AND ((rt0.c1, rt0.c2, rt1.c0, rt1.c2, rt0.c0))))))OR(((rt0.c1)LIKE(rt1.c2)))))AND(((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0)))))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))) FROM rt1, rt0 WHERE (CAST(((((((((((((0.17268879029727757)AND(NULL)))AND(0.11892446955721026)))AND('')))OR(0.9717315236277085)))OR(1486965162)))OR('-384283884')) AS INTEGER)); -- 0ms;
SELECT (((((rt1.c2)) NOT BETWEEN (('.|s')) AND ((rt1.c2)))) NOT BETWEEN ((((rt0.c1, rt0.c0, rt0.c0))!=((rt0.c1, rt1.c0, rt0.c2)))) AND (NULL COLLATE RTRIM)), DENSE_RANK() OVER (), (((rt1.c0, rt0.c1, rt1.c2)) NOT BETWEEN (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0))), rt0.c1)) AND ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)), rt0.c0, ((rt1.c1)-(rt1.c0))))), LAG(((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0))) IN ()), rt0.c1, CASE (((rt1.c2, rt1.c1, rt1.c2))=((rt1.c0, rt1.c1, rt0.c1)))  WHEN '核{' THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END ELSE ((rt1.c2) IS FALSE) END) OVER (), (((~ (rt0.c0))) ISNULL) FROM rt1, rt0; -- 0ms;
SELECT rt0.c2, rt1.c0, ((rt0.c1)LIKE(rt1.c0)) COLLATE BINARY FROM rt1, rt0 WHERE (CAST(('619338424' IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((+ (rt1.c1))) NOT NULL), (+ ('x }y)&(9')), ((CAST(rt1.c0 AS BLOB)) NOTNULL) FROM rt1; -- 0ms;
SELECT ((UPPER(rt1.c0))OR(0.3684709462802759)) FROM rt0, rt1 ORDER BY SQLITE_VERSION()  NULLS LAST, CAST(rt0.c2 COLLATE BINARY AS TEXT)  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN -674259986 THEN (((rt0.c0, rt0.c2, rt1.c0)) BETWEEN ((rt1.c1, rt0.c2, rt1.c2)) AND ((rt1.c2, rt0.c1, rt1.c0))) ELSE (((rt1.c1, rt0.c1, rt0.c0, rt1.c0, NULL)) NOT BETWEEN ((rt0.c1, rt1.c0, rt0.c0, 0.46325169745811823, 0Xbbb35a8)) AND ((rt1.c1, rt1.c2, rt0.c0, rt1.c0, rt1.c0))) END, (((CAST(rt0.c0 AS BLOB)))>=((x''))), (((((((((rt0.c1 IN ()))OR(NULL)))OR(rt0.c0 COLLATE BINARY)))AND(CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 END)))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)) FROM rt0, rt1 WHERE ((((('') IS FALSE))|((-738558256 IN (1414515430))))) LIMIT 108819138; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 COLLATE NOCASE THEN ((0.8358842558352001) IS FALSE) WHEN ((('436812053', NULL, -695431773))==((rt1.c1, rt0.c0, rt1.c0))) THEN rt1.c0 WHEN (~ (rt0.c1)) THEN TRIM(DISTINCT rt0.c0, rt0.c2) END FROM rt1;SELECT DISTINCT ((rt1.c1) IS FALSE) COLLATE RTRIM FROM rt0, rt1 WHERE (((((CAST(1538030770 AS BLOB))OR(CASE '∓'  WHEN 2.137111804E9 THEN x'' ELSE x'' END)))OR(((3.07489073E8)IS NOT('~7t0^ftf!'))))); -- 0ms;
SELECT (rt1.c2 IN (rt0.c2, rt1.c0)) COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (~ (IFNULL(rt1.c2, rt0.c1))) FROM rt1 WHERE ((((NULL, '諷m7y*\yB', '710610322'))<=(('z8j!P隦p}', 0.2726277667160273, 0.508997418147479))) COLLATE NOCASE);SELECT DISTINCT CAST(rt0.c2 AS NUMERIC), ((rt0.c2) NOTNULL), NULLIF(QUOTE(rt0.c2), ((rt0.c2)IS(rt1.c1))) FROM rt1 ORDER BY CAST(rt1.c1 COLLATE NOCASE AS TEXT)  NULLS LAST, (- (((rt1.c1)>=(rt0.c0)))) ASC;SELECT DISTINCT ((((0X7e048af7) NOT NULL)) NOT BETWEEN ((('-1844302648')||(rt1.c1))) AND (((rt0.c1) ISNULL))) FROM rt1 WHERE ((('0.531614354166592') NOT BETWEEN ((('%HST[[UK') BETWEEN (0.18930341954435592) AND (436812053))) AND (UPPER(NULL))));SELECT DISTINCT CAST(MAX(rt0.c1) AS TEXT) FROM rt1;SELECT ALL ((rt1.c1 COLLATE RTRIM)>>(rt0.c0)) FROM rt1;SELECT DISTINCT 0.05006246931087377 FROM rt0 WHERE ((((NULL IN ())) IS TRUE)) LIMIT 41199485 OFFSET 362602647; -- 0ms;
SELECT ALL CASE (+ (rt0.c0))  WHEN ((((rt0.c1)OR(rt1.c2)))OR(rt1.c0)) THEN IFNULL(DISTINCT rt0.c1, rt1.c0) END FROM rt0, rt1 LIMIT 384079351; -- 0ms;
SELECT DISTINCT '' FROM rt1 WHERE (((CASE -1.237723155E9  WHEN 0.29772984833149263 THEN x'' WHEN x'' THEN 0.7964865769251298 WHEN 0.5926969927204943 THEN x'' WHEN '-1202017137' THEN x'' WHEN '+*k	+e-(d' THEN 0.8038934600635865 END) NOTNULL)); -- 0ms;
SELECT ((((rt0.c1)=(rt0.c2))) NOTNULL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((x'', rt1.c2, rt1.c1)) BETWEEN (((((rt0.c2))==((rt0.c1))), ((rt1.c0) NOTNULL), COUNT(*))) AND ((json_remove(rt0.c2, rt0.c0), ((rt1.c2)<(rt1.c2)), ((rt0.c0)>(rt1.c1))))), SUM((rt0.c2 IN ()) COLLATE NOCASE), 0.6215287968514533 FROM rt0, rt1;SELECT DISTINCT TRIM(DISTINCT x'', ((0.8734719759460683)&(rt1.c1))) FROM rt0;SELECT ALL SUM(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) FROM rt0, rt1 WHERE (CAST('v~nﴔkMN譨' COLLATE NOCASE AS INTEGER)) LIMIT 0; -- 0ms;
SELECT ((((0x64d8d172) NOT BETWEEN (rt1.c1) AND (rt0.c1)))>(((rt1.c2)-(rt1.c0)))) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT ((((rt1.c2) NOT NULL))OR((rt1.c1 IN ()))) FROM rt1, rt0; -- 0ms;
SELECT CASE WHEN CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 END THEN CASE WHEN NULL THEN rt1.c1 WHEN NULL THEN 0.055675646632308506 WHEN rt1.c1 THEN rt0.c1 END WHEN CASE rt0.c2  WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c0)AND(rt1.c0)) WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c1 END WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt1.c0)) THEN ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c1)))AND(rt1.c0)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt1.c2)) THEN AVG(rt0.c1) ELSE AVG(rt1.c2) END, ((((rt1.c1)<>(rt1.c2))) BETWEEN (MIN(rt0.c1)) AND (GROUP_CONCAT(rt0.c2))), ((0x5fdd6da3)<=(rt1.c0)) FROM rt0, rt1; -- 0ms;
SELECT (INSTR(rt0.c1, rt1.c0) IN (((NULL) BETWEEN ('oe_퍁K^') AND (rt0.c1)), ((((((((rt1.c2)OR(rt0.c0)))OR(rt1.c2)))OR(x'')))AND(rt1.c0)))) FROM rt0;SELECT DISTINCT rt1.c0, ((((rt0.c1)>=(rt1.c2)))IS NOT((((rt1.c1))>((rt1.c0))))), (((NOT (rt1.c1)))%(ABS(rt1.c1))) FROM rt1, rt0 WHERE (TYPEOF(CASE WHEN x'31eb' THEN NULL END)); -- 0ms;
SELECT DISTINCT NULL FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((DATE(rt1.c0, rt0.c2, rt1.c2)) BETWEEN ((rt0.c2 IN (rt1.c0))) AND (TYPEOF(rt1.c0))) FROM rt1 GROUP BY x'', (((((((rt1.c2)AND(rt0.c1)))OR(rt0.c0)), (NULL IN (rt0.c1)), rt0.c1))<=((0.427503705199743, CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE x'' END, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))), ((((rt0.c1)&(rt1.c2)))IS NOT(CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c2 END)) HAVING (TOTAL(rt0.c1) IN ());SELECT DISTINCT (- ((rt0.c1 IN ()))) FROM rt0 WHERE (CAST(0Xffffffffcfc42329 COLLATE RTRIM AS REAL)) ORDER BY ((((rt0.c2)AND((((rt0.c0))==((rt0.c2))))))AND(((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)))) ASC, CASE rt0.c1 COLLATE NOCASE  WHEN CAST(rt1.c1 AS INTEGER) THEN rt0.c2 WHEN CASE rt0.c1  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c1 END THEN (NOT (rt0.c0)) WHEN ((rt0.c0)+(rt0.c0)) THEN ((rt0.c0)IS(rt0.c0)) ELSE ((rt1.c0)*(rt0.c0)) END, ((((rt0.c2)>(rt0.c2)))||('')) DESC;SELECT ALL (((('-2024668169')>=('DQ'))) ISNULL) FROM rt0 WHERE (((((((((0.44357827666185357)AND(CAST(0.7729559522188139 AS TEXT))))OR(TIME(x'', 0.9736968730759237, x''))))AND(NULL)))OR(0.46398901458124153))); -- 0ms;
SELECT ALL ((((rt1.c0)IS(rt0.c1)))+((rt1.c0 IN ()))), json_valid(((((((((rt1.c2)AND(rt0.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1))), (((((rt0.c2)|(rt1.c2))))>=((TOTAL(rt0.c2)))) FROM rt0;SELECT ALL ((HEX(rt0.c1))IS NOT(MIN(rt0.c2))), COUNT(((0.4523443295574239) BETWEEN (x'') AND (rt0.c0))), (~ (148401473)) COLLATE NOCASE FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS TEXT) FROM rt1 WHERE (((NULL)>=(NULL)) COLLATE RTRIM);SELECT DISTINCT (((((rt0.c2))==((rt1.c1)))) NOT BETWEEN (IFNULL(DISTINCT rt1.c2, rt0.c0)) AND (MAX(rt1.c0))) FROM rt1;SELECT ALL CASE COUNT(*)  WHEN CAST(rt1.c0 AS INTEGER) THEN rt0.c1 COLLATE NOCASE ELSE (rt1.c0 IN (rt0.c2, rt0.c1)) END FROM rt1 WHERE ((NOT (CASE WHEN 0.7217945208539601 THEN '200294128' ELSE x'' END)));SELECT rt1.c0 FROM rt1, rt0 WHERE ((('1627621104')>>(271285620)) COLLATE RTRIM) ORDER BY rt1.c2 ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt1.c1)))OR(rt1.c1))) ISNULL) FROM rt1, rt0 GROUP BY LIKELIHOOD(DISTINCT ((rt1.c2)<=(rt1.c2)), 0.5869755608874175); -- 0ms;
SELECT DISTINCT NULL FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((TYPEOF(rt0.c0))!=((((rt0.c1, rt1.c0, rt0.c1, rt1.c0, rt1.c0)) BETWEEN ((NULL, rt0.c2, rt0.c2, rt0.c2, '')) AND ((rt1.c0, rt0.c0, rt1.c2, rt0.c0, rt1.c1))))) FROM rt0 LIMIT -635722670;SELECT ALL ((((((rt1.c1)>>(rt0.c1)))AND(((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c0)))))OR(((rt1.c1)IS NOT(rt1.c1)))) FROM rt0, rt1 LIMIT 792945773 OFFSET 1282450701; -- 0ms;
SELECT DISTINCT ((rt1.c1 COLLATE NOCASE)IS NOT(json_valid(rt0.c0))) FROM rt0 WHERE ((CASE WHEN '-871146993' THEN x'f181' END IN (((((((((x'')AND(x'')))OR('-401508483')))OR(x'3349')))AND(x'')))));SELECT ALL json_array_length(((((rt1.c1)OR(rt1.c1)))AND(rt1.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) FROM rt1, rt0 WHERE ((((((0xffffffffc0610daa)OR('-758263144')))AND(NULL)) IN (HEX(0.4841245404184513), json_valid(x'')))) GROUP BY ((rt0.c2 COLLATE NOCASE) NOTNULL); -- 1ms;
SELECT DISTINCT (((CAST(rt1.c2 AS REAL), ((rt1.c0)IS(rt1.c0)), CAST(rt0.c2 AS INTEGER)))<=((json_array_length(rt1.c2), ((rt1.c0) BETWEEN (rt1.c1) AND (0.6918827980559511)), CAST(0.23876043400957714 AS INTEGER)))) FROM rt0;SELECT (((((rt0.c1)OR(rt1.c2))))>((((rt0.c2)OR(rt0.c1))))) FROM rt0, rt1 WHERE (CASE (+ (0.1857717085172914))  WHEN x'' COLLATE RTRIM THEN 'ru|*iO ' COLLATE BINARY ELSE (- ('0.04938558750584521')) END); -- 0ms;
SELECT ALL GROUP_CONCAT(((((((((rt0.c1)AND(NULL)))AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c0))) FROM rt1, rt0 NOT INDEXED ORDER BY ((rt0.c2 IN ()) IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT (- ((((rt0.c0))>((rt0.c0))))), ((((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(rt0.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))), AVG(((((rt0.c0)OR(rt1.c2)))AND(rt1.c0))) FROM rt1, rt0; -- 0ms;
SELECT ALL (((rt1.c0)) BETWEEN (((~ (x'')))) AND ((((rt1.c2)<(rt0.c2))))) FROM rt0, rt1 GROUP BY IFNULL(DISTINCT x'', rt0.c2) COLLATE NOCASE HAVING ((((((rt1.c2) NOTNULL))AND(CAST(rt1.c1 AS INTEGER))))OR(rt1.c0)); -- 0ms;
SELECT x'', ((rt1.c0)LIKE(rt1.c1 COLLATE BINARY)), rt1.c0 FROM rt0, rt1 WHERE (((json_insert(0X210b140e, NULL, '_)*}8+\')) BETWEEN ((((('896175551')AND(NULL)))AND('s겏]Xf4/}n'))) AND (ROUND(x'', NULL)))); -- 0ms;
SELECT DISTINCT ((x'')-((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))))) FROM rt0, rt1 WHERE ((((-234175002 COLLATE NOCASE, ((x'')OR(x'')), CAST('-320712573' AS TEXT)))>((((0.7964678203897336)AND(x'')), CASE WHEN 1616836829 THEN NULL WHEN NULL THEN x'e731' WHEN 'b /\l눝' THEN x'' END, ((x'')=(0.0)))))) ORDER BY CAST((((rt1.c1, rt0.c0, rt1.c0))!=((rt0.c2, rt1.c1, rt1.c1))) AS BLOB)  NULLS LAST, (((rt0.c2 IN (rt0.c1))) IS TRUE) ASC; -- 0ms;
SELECT ALL (((((((((((((((((('E%Hdv猟P%X') IS FALSE))OR(CASE rt0.c1  WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 END)))AND(TYPEOF(DISTINCT rt0.c1))))AND((~ (rt0.c2)))))AND('')))AND(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))OR(((rt0.c0) NOTNULL))))AND(ABS(rt1.c0))))OR(((rt0.c1) IS FALSE))) FROM rt1, rt0 WHERE ((- (((x'') NOT BETWEEN (NULL) AND (-1.439809051E9))))); -- 0ms;
SELECT CASE CASE rt1.c0  WHEN rt0.c0 THEN 0.35006310801190743 ELSE rt0.c1 END  WHEN ((((rt1.c2)AND(rt1.c1)))OR(rt1.c1)) THEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) END FROM rt1;SELECT (- (((rt1.c2) IS FALSE))) FROM rt0 WHERE ((((((0.4872101627405526))>=((x''))))IS(json_array_length(0xffffffffebc26886))));SELECT ALL ((rt0.c1) NOT NULL) FROM rt0, rt1 WHERE ((('' COLLATE RTRIM) BETWEEN (CAST(NULL AS NUMERIC)) AND (((NULL)IS(0.38329367816982973))))); -- 0ms;
SELECT DISTINCT NTH_VALUE(rt0.c0, ((((TRIM(rt0.c1, rt0.c2))OR(rt0.c0)))AND(CAST(rt0.c1 AS BLOB)))) OVER () FROM rt0 WHERE (LIKELIHOOD((('IN') NOT BETWEEN (0.2908800785630439) AND (0.2914924659246282)), 0.2307126232014558));SELECT DISTINCT CASE WHEN LIKELY(DISTINCT rt1.c0) THEN (((x'12ee', rt1.c0, rt0.c0))!=((rt0.c0, rt1.c0, rt0.c2))) END FROM rt1, rt0 WHERE ((((- ('-973709508')))+(CAST(NULL AS TEXT)))) LIMIT -1070274789 UNION ALL SELECT ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE BINARY FROM rt1, rt0 WHERE ((+ ((((('')OR('1335590622')))AND('+*K	+E-(d')))));SELECT DISTINCT ((rt1.c1) BETWEEN ((~ (rt0.c1))) AND ((NOT (rt0.c0)))) FROM rt1, rt0 WHERE (((((+ (x''))))>((LIKELY(0xffffffffd07983f8))))); -- 0ms;
SELECT DISTINCT (((((rt1.c2))<>((rt0.c2)))) NOTNULL) FROM rt1 WHERE ((+ ('1574547098')) COLLATE RTRIM);SELECT DISTINCT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1)))OR(((((((((rt0.c1)AND(rt1.c0)))OR(NULL)))OR(rt1.c1)))AND(rt1.c2)))))AND(CASE WHEN rt1.c0 THEN rt0.c1 END)) FROM rt0 UNION ALL SELECT ((AVG(rt0.c0))|('152460924')) FROM rt1, rt0 ORDER BY (((~ (rt0.c1))) BETWEEN ('sl곛') AND (TRIM(DISTINCT rt1.c1))) ASC  NULLS LAST;SELECT DISTINCT CASE WHEN NULLIF(rt0.c0, rt1.c0) THEN CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c2 END END FROM rt0, rt1 ORDER BY (- (0X15290878)) COLLATE RTRIM ASC;SELECT DISTINCT (((CASE rt1.c1  WHEN rt1.c0 THEN rt0.c0 END))<=((CASE WHEN x'' THEN rt0.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END))) FROM rt0;SELECT COUNT(*) OVER (), ((rt0.c1)GLOB(rt1.c2)) COLLATE BINARY, ((((((rt0.c1)||(rt0.c1)))OR((~ (rt0.c2)))))OR(((rt0.c2)%(rt0.c0)))) FROM rt1, rt0 WHERE ((NOT (CASE WHEN 'SqF' THEN 0.5277097704306031 WHEN x'' THEN 'l\n' WHEN 8.9583472E8 THEN '0.4442504452050815' END))); -- 1ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT MIN(((rt1.c2)GLOB(0.5824407764858059))) FROM rt0 LIMIT -382253248 OFFSET -1907858823;SELECT ALL GROUP_CONCAT(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2))), ((rt1.c0 COLLATE NOCASE)LIKE(((((((((rt0.c0)OR(rt1.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))), ((((rt1.c2)>(rt1.c0)))&(1169205613)), (rt0.c0 COLLATE RTRIM IN ()), (+ (((((rt0.c0)AND(rt1.c0)))OR(rt0.c0)))) FROM rt1 WHERE ((((CASE WHEN 'GX' THEN '' WHEN '' THEN NULL WHEN x'' THEN '9223372036854775807' END))!=((((-1111033736)IS NOT(NULL)))))) LIMIT -53797110;SELECT DISTINCT ((AVG(rt0.c0))<>(rt1.c1 COLLATE RTRIM)), (((((((((rt0.c1)AND(rt0.c2)))OR(rt1.c1)))AND('-1295007365')))OR(rt1.c0)) IN ()), x'' FROM rt1 WHERE ((NOT (((('0.8818399329789735'))<((x'7c6d'))))));SELECT ALL AVG(CAST(rt1.c2 AS NUMERIC)) OVER (), (((rt1.c0 COLLATE NOCASE, rt1.c2, ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2))))<=((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)), ((rt1.c2) IS TRUE), TYPEOF(rt0.c1)))), ROW_NUMBER() OVER () FROM rt1 LIMIT -1735462228 OFFSET 2018224688;SELECT DISTINCT (((((rt0.c2)OR(rt1.c0)))AND(rt0.c1)) IN ()) FROM rt0 WHERE (((CAST('-1768215815' AS REAL))AND((((NULL, x'e15d', 'q\nE()')) NOT BETWEEN (('J''7%K', NULL, NULL)) AND ((1.682885581E9, -2142090612, 0.5151155900755107)))))); -- 0ms;
SELECT DISTINCT (((~ (rt0.c2)))=(0.3900422183877874)) FROM rt1, rt0 GROUP BY ((((rt0.c0) ISNULL)) NOTNULL), ((0.28025095829755087) NOT BETWEEN (rt0.c0) AND (CAST(rt1.c1 AS NUMERIC))), ((((rt1.c0) ISNULL)) IS TRUE); -- 0ms;
SELECT NTILE(x'a839') OVER () FROM rt0 LIMIT -924893100;SELECT ALL LTRIM(((rt0.c0)=(rt0.c2))), GROUP_CONCAT('') FILTER(WHERE ((((rt1.c0)*(rt0.c1))) ISNULL)) OVER ( ORDER BY (((((rt1.c1 IN ()))OR(CAST(rt1.c2 AS BLOB))))OR((('-151872478') NOT BETWEEN (rt1.c2) AND (rt1.c0)))) DESC  NULLS FIRST), x'' FROM rt1;SELECT DISTINCT CASE WHEN ((rt1.c2) BETWEEN (rt1.c0) AND ('?7OAj03^''')) THEN MIN(rt0.c0) ELSE CAST(rt1.c1 AS BLOB) END, IFNULL(DISTINCT ((rt1.c0)<=(rt0.c1)), (+ (rt1.c0))), (LIKELIHOOD(DISTINCT rt1.c1, 0.4140160993715374) IN (((rt0.c1) IS TRUE))) FROM rt0, rt1 WHERE ('QW'); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)AND(rt1.c1)) AS BLOB) FROM rt1, rt0; -- 0ms;
SELECT ALL ((rt1.c1) BETWEEN (0.5452514701934612) AND (json(rt1.c0))) FROM rt1, rt0 WHERE ((- (((NULL) BETWEEN ('460699583') AND (0.3469352748192389))))) ORDER BY (((((NOT (rt0.c2)))OR(rt1.c1 COLLATE RTRIM)))AND(((rt0.c0)||(rt0.c2)))) DESC  NULLS FIRST, (- (LTRIM(rt0.c2, rt0.c1))) DESC LIMIT 1678960874 OFFSET 90745242; -- 0ms;
SELECT ALL (0.3309394799729538 IN ()) FROM rt1, rt0 WHERE (CAST((0.40547818682807013 IN ()) AS BLOB)); -- 1ms;
SELECT LIKELY(((rt1.c0)GLOB(rt0.c2))) FROM rt1, rt0 ORDER BY ((((((rt1.c1)<(rt1.c2)))AND(((((((((((((rt1.c2)AND(rt0.c2)))OR(x'')))OR(rt1.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))))OR((NOT (x'2d28')))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((x'')OR(CAST(rt0.c0 AS REAL))))OR(CAST(NULL AS REAL))) FROM rt1 LEFT OUTER JOIN rt0 ON (rt1.c1 IN ()) COLLATE RTRIM WHERE ((+ ((NULL IN (NULL))))) LIMIT 659577679; -- 0ms;
SELECT 0x16e495f7 FROM rt1, rt0 WHERE (LOWER((x'' IN (NULL)))) GROUP BY ((TRIM(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c1) AND (0.6192224077111562))) AND (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END)), ((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE, 'L\DRa(', ((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))OR(rt0.c0)))|((NOT (rt0.c2)))), ((((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c1 WHEN 0.5311384640691472 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 WHEN '732482940' THEN rt1.c2 END)AND(((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))OR(0.16447687002886024)))AND(rt1.c1)))))OR((((rt1.c0, rt0.c2, rt1.c1, rt1.c0, rt0.c2))>=((x'', rt1.c0, rt0.c0, rt1.c1, rt0.c0))))); -- 0ms;
SELECT DISTINCT (~ (((rt1.c2) NOTNULL))) FROM rt1; -- 0ms;
SELECT COUNT(((((rt1.c0)OR(rt1.c2)))AND(rt1.c2))), ((CAST(rt0.c2 AS NUMERIC))IS NOT((- (rt0.c0)))), CAST('l>\nvYU*' AS BLOB) FROM rt1;SELECT JULIANDAY(CAST(0.7761488456594822 AS INTEGER), CAST(rt0.c2 AS TEXT), ((rt1.c2) NOT NULL)) FROM rt0 WHERE (CASE ((x'')%(x'0ac0'))  WHEN (x'' IN ()) THEN ((((x'071f')AND(x'')))AND('1965568215')) WHEN CASE 0.07710980040827087  WHEN 0.7559783128260963 THEN 619338424 WHEN NULL THEN NULL WHEN 'Y	' THEN NULL ELSE x'' END THEN NULL COLLATE BINARY WHEN 1.999748693E9 THEN (((('0.8684379388682393')OR(x'')))OR(NULL)) WHEN (NULL IN ()) THEN ((x'')==(x'')) WHEN CASE NULL  WHEN x'14f083e4' THEN NULL WHEN x'' THEN 0.1921185853540298 WHEN '1847220357' THEN 0.6990059685928716 END THEN ((x'')%(NULL)) END);SELECT ((NULL) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (CAST(rt0.c0 AS BLOB))), SUM(rt0.c0), rt1.c0, (((~ (rt1.c2))) IS TRUE), json_remove(rt0.c1, rt1.c1, rt0.c1, rt0.c0) COLLATE BINARY FROM rt0 WHERE (x'f380');SELECT GROUP_CONCAT(((((rt1.c2)AND(rt0.c0)))AND(rt0.c0))), json_object(((rt1.c2) IS FALSE), (NULL IN ())), ((((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 END)AND((rt1.c1 IN ()))))AND(((rt0.c1)&(rt1.c0)))) FROM rt0, rt1;SELECT ALL (((~ (rt1.c2)))<=(((x'')<=(rt1.c2)))), rt0.c0 COLLATE NOCASE, rt1.c0 FROM rt0, rt1; -- 0ms;
SELECT ALL CAST(CASE rt1.c0  WHEN NULL THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c1 END AS BLOB), ((x'' COLLATE BINARY) BETWEEN (rt1.c0 COLLATE NOCASE) AND (CASE rt0.c1  WHEN rt1.c1 THEN rt0.c1 END)), ((CASE WHEN 0.038891772943978054 THEN rt1.c1 END) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))) AND (((rt0.c0)IS NOT('T弼_D%')))) FROM rt1, rt0 WHERE (((NULL) NOTNULL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT 0.249685931228825, LIKE(CAST(0.0018900704255181422 AS BLOB), ((((((((rt1.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c0))), (~ ('2 gh' COLLATE BINARY)) FROM rt0;SELECT DISTINCT ((((((((((rt0.c0)GLOB('-784835473')))OR((rt0.c0 IN ()))))OR(CASE WHEN 0.7625131499742964 THEN x'06dc' ELSE rt1.c2 END)))OR((+ (2019303767)))))OR(CASE WHEN rt0.c2 THEN rt1.c0 ELSE rt0.c1 END)), ((((rt1.c2)OR(rt0.c2)))&(((NULL) NOT BETWEEN (rt1.c0) AND (x'6641684d')))), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)) COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT ((((rt1.c1) IS TRUE)) IS FALSE) FROM rt1 LIMIT 2137111804; -- 0ms;
SELECT DISTINCT (+ (((rt1.c2)OR(rt1.c2)))) FROM rt1 ORDER BY ((((rt1.c1) IS FALSE)) BETWEEN (rt1.c0) AND (((rt0.c2)<=(rt0.c1)))) DESC;SELECT DISTINCT DENSE_RANK() OVER () FROM rt1, rt0; -- 0ms;
SELECT ALL ((((rt0.c2)||(rt1.c1))) ISNULL) FROM rt1, rt0 WHERE (CASE (NULL IN (NULL))  WHEN ((272842742)<(NULL)) THEN NULL END) GROUP BY ((((((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE 1542299946 END)))AND('LyzJ')))OR(x'')))AND(((rt1.c0) ISNULL))))OR(((rt1.c2) ISNULL))))OR(rt1.c1)), ((NULLIF(DISTINCT rt1.c1, rt1.c2)) ISNULL), (rt0.c2 IN (rt0.c1)) COLLATE NOCASE COLLATE NOCASE HAVING rt1.c2; -- 0ms;
SELECT DISTINCT (((((('1781511093')AND(rt1.c0)))OR('w'))) BETWEEN (((((rt0.c2)AND(rt1.c1)))OR(rt1.c1))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c2 END)) FROM rt1 WHERE ((- (CASE 0.6458756661576124  WHEN 0.5070500208657781 THEN 'wvhy+l' ELSE x'2372' END)));SELECT DISTINCT UNLIKELY(x'') FROM rt1; -- 0ms;
SELECT CAST(rt1.c2 AS REAL) COLLATE BINARY, TRIM(DISTINCT ((rt1.c0) ISNULL), (x'd4cb' IN (rt0.c0, rt0.c1))), ((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) IN (CASE 'Jd'  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)), ((((((((rt0.c1 COLLATE RTRIM)OR(NULL)))OR(0.9052512106037697)))OR(rt1.c0 COLLATE NOCASE)))AND(((rt0.c2) NOTNULL))), (rt0.c1 IN (CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c0 END)) FROM rt1;SELECT (((0X55fc4421)-(x'')) IN ()), ((((rt0.c1)OR(rt0.c2)))AND(rt1.c1)) COLLATE RTRIM, GROUP_CONCAT(CASE rt0.c2  WHEN rt1.c2 THEN rt1.c1 END) FROM rt1, rt0; -- 0ms;
SELECT ALL (NOT (((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)))), SUM(NULL) FILTER(WHERE (((rt0.c1, rt0.c0, rt1.c0)) NOT BETWEEN ((CASE rt1.c0  WHEN x'' THEN rt1.c0 END, ((rt0.c0)=(rt1.c0)), ((((rt0.c2)AND(rt1.c0)))AND(rt1.c2)))) AND (((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (rt0.c1 IN ()), CAST(rt1.c2 AS BLOB))))) OVER (), CAST(CASE WHEN rt1.c2 THEN NULL WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE NULL END AS INTEGER) FROM rt0 GROUP BY CAST(NULL AS TEXT) HAVING ((((((((((rt0.c2)AND(rt0.c0)))OR((rt0.c1 IN (x'6cbd')))))OR(IFNULL(9.37563196E8, rt1.c2))))AND((NOT (rt0.c0)))))AND(((rt0.c2)<=(rt0.c0))));SELECT ALL (NOT (((0.8796406849219545)GLOB(rt1.c2)))) FROM rt0 WHERE ((((NULL) NOT BETWEEN ('0.26631769420312235') AND (0.16059131592834164)) IN ())) LIMIT 1596248158 OFFSET 621740957;SELECT ALL CUME_DIST() OVER ( ORDER BY ((rt1.c1)<(CASE WHEN rt1.c1 THEN rt0.c1 ELSE '-936279638' END)) GROUPS BETWEEN  UNBOUNDED PRECEDING AND (NULL IN (rt1.c2, rt1.c2)) COLLATE BINARY PRECEDING EXCLUDE CURRENT ROW) FROM rt0, rt1 WHERE (((((('G}UHQ2H}m')AND('')))OR('436812053')) IN ())) GROUP BY (((rt0.c2)) NOT BETWEEN ((CASE rt1.c2  WHEN rt0.c0 THEN rt1.c2 END)) AND ((rt1.c0))) HAVING NULL; -- 1ms;
SELECT DISTINCT (GROUP_CONCAT(rt0.c1) IN ()) FROM rt0, rt1 ORDER BY (((rt1.c1)) BETWEEN ((-2.024004988E9)) AND (((rt0.c1 IN ()))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c0 COLLATE RTRIM)AND(rt0.c1)))AND(CAST(0.5155715647674584 AS BLOB))) FROM rt1 WHERE ((((((('YNMl|0\rhU')AND('-936279638')))AND(x'7700')))<=(((NULL)<('R^')))));SELECT ALL AVG(rt1.c1) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1, rt0.c1 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE, (((((rt1.c0, rt0.c0, rt1.c1, rt0.c0, rt0.c0))>=((rt1.c1, rt1.c1, rt0.c0, rt1.c1, rt1.c1)))) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))) AND (rt0.c2 COLLATE NOCASE)) FROM rt0, rt1; -- 0ms;
SELECT ALL CAST((- (0Xffffffff8b1fcf00)) AS BLOB) FROM rt0 ORDER BY CASE WHEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END THEN CASE WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END WHEN (- (rt1.c2)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((rt1.c0)IS(rt1.c2)) THEN (- (rt0.c0)) END  NULLS FIRST;SELECT (((((x'9d50b53a', rt0.c0, rt1.c0, rt1.c2, rt1.c2))==((rt0.c1, rt0.c2, rt1.c1, rt1.c1, NULL))))-(rt1.c1 COLLATE RTRIM)) FROM rt0;SELECT DISTINCT ((+ (rt0.c1)) IN ()) FROM rt1 NOT INDEXED, rt0 WHERE (((((NULL)IS('')))<((NULL IN ())))) GROUP BY (((rt0.c1)) BETWEEN (((((-8.95757996E8))<>((rt0.c0))))) AND ((((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) HAVING ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>=(((rt1.c1)AND(NULL)))) LIMIT 1168746894 OFFSET 997834935; -- 1ms;
SELECT DISTINCT ((((((((((((((((LIKELIHOOD(rt1.c1, 0.07165486405131993))AND(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 WHEN 0Xfffffffffa54b344 THEN rt1.c0 ELSE rt1.c0 END)))OR(MAX(rt1.c1))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))AND((rt0.c0 IN ()))))AND(rt0.c0 COLLATE RTRIM)))AND(CAST(rt1.c2 AS NUMERIC))))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0)*(rt0.c1)))), ((CAST(rt0.c2 AS TEXT))>=(((rt1.c1)>>(NULL)))), DATE((rt1.c2 IN ()), ((rt0.c0)%(rt0.c2)), ((((rt0.c1)AND(rt0.c0)))OR(rt1.c0))) FROM rt0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (CAST(0.32101642057770385 AS REAL) IN ()), ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END) ISNULL), COALESCE(DISTINCT rt0.c0, rt0.c0) COLLATE BINARY FROM rt0 WHERE (((NULL)>=(((0Xffffffff9e3102f5) NOT NULL)))) LIMIT 1929618331;SELECT json_extract(((rt1.c2)+(rt1.c1)), (+ (rt1.c1)), rt0.c1, UNLIKELY(rt0.c2)) FROM rt1, rt0;SELECT DISTINCT MIN(x''), CASE WHEN ((rt0.c2)<(rt1.c1)) THEN rt0.c0 END, ((SUM(rt0.c2)) NOT BETWEEN ((rt1.c2 IN ())) AND ((NOT (rt0.c1)))) FROM rt0, rt1 WHERE (''); -- 0ms;
SELECT DISTINCT ((((COUNT(*))AND(((rt0.c2) IS TRUE))))AND(SUM(rt0.c1))) FROM rt0, rt1; -- 0ms;
SELECT 0.930573454974902 FROM rt0 NOT INDEXED, rt1; -- 0ms;
SELECT ALL ((((rt0.c1)+(rt1.c2))) NOT BETWEEN (rt0.c1) AND (((x'a7b5') BETWEEN (rt1.c2) AND (0.38826971989346626)))), ((((((rt1.c0) NOT NULL))OR(rt0.c2)))OR((NOT (rt0.c1)))), rt0.c0 FROM rt1, rt0; -- 0ms;
SELECT TRIM(DISTINCT CAST(rt0.c1 AS REAL), CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 END) FROM rt1 WHERE (((((0.8498886750034949)) BETWEEN ((x'')) AND (('-139287495'))) IN ()));SELECT DISTINCT (((rt0.c1 IN (rt0.c0)))LIKE(((((((((rt0.c1)AND(rt0.c1)))OR(rt1.c0)))OR(rt0.c1)))AND(rt0.c1)))), PERCENT_RANK() OVER (), ((rt1.c2)GLOB(rt0.c1)) COLLATE RTRIM FROM rt1, rt0 NOT INDEXED WHERE (((('665005017' IN ())) NOT BETWEEN (TRIM(0.06490523342095178)) AND (((1.058818506E9)+(NULL))))); -- 1ms;
SELECT ALL (CASE WHEN rt1.c1 THEN rt1.c1 END IN ()) FROM rt0 WHERE (((HEX('vh˵M4/'))&(((((0.029931662107445134)AND(0.505095675035094)))AND(NULL))))); -- 0ms;
SELECT DISTINCT CAST(((((rt0.c1)OR(rt1.c2)))AND(rt1.c1)) AS REAL) FROM rt1, rt0 LIMIT 907613569 OFFSET -238693392; -- 0ms;
SELECT (((rt0.c1 IN ())) BETWEEN (-1.203007317E9) AND (SUM(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT x'', CASE TRIM(rt1.c2)  WHEN ((rt0.c1)<>(rt1.c0)) THEN (rt1.c1 IN ()) WHEN ((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c2)) THEN ((x'')==(rt0.c2)) WHEN (~ (rt1.c1)) THEN rt0.c1 END, rt1.c2 FROM rt0 WHERE (CASE WHEN (((0.9362491325457192, 6.19338424E8, x'')) NOT BETWEEN ((0.14635502565942238, -1.923726148E9, x'')) AND ((x'', 0.43628321639703305, ''))) THEN CASE WHEN 0.4456138186150109 THEN NULL WHEN x'' THEN x'7d38' WHEN '0.8931184489431739' THEN '1355404718' END ELSE (x'' IN (594999716, NULL)) END);SELECT DISTINCT ((((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL) FROM rt0, rt1 WHERE (CAST('>t\r	{1P' COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT ((((rt0.c0) IS TRUE)) BETWEEN (json_type(rt1.c2)) AND (-139777949)), (((x'')>=(rt0.c1)) IN ()), COUNT(CAST(rt0.c0 AS TEXT)) FROM rt1 WHERE ((((+ (-973709508))) IS FALSE));SELECT (((((- (rt1.c0)))AND(CAST(rt0.c2 AS REAL))))AND(((-8.24329869E8) IS FALSE))) FROM rt1;SELECT DISTINCT (NULL IN ()) FROM rt0 NOT INDEXED, rt1; -- 0ms;
SELECT ALL CAST(SUM(rt1.c2) AS TEXT) FROM rt0 GROUP BY CASE WHEN rt1.c2 COLLATE BINARY THEN COALESCE(DISTINCT rt0.c0, rt0.c2) ELSE (((0X467100b6)) BETWEEN ((rt0.c0)) AND ((0x2ba8cd7c))) END, ((rt1.c1 IN (rt0.c2)) IN ()), (((rt1.c2, rt0.c1, rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((((rt1.c0)GLOB(rt0.c2)), ((((rt1.c1)AND(rt0.c0)))AND(rt1.c2)), ((rt1.c1) NOT BETWEEN ('1364460031') AND (rt1.c1)), CAST(rt0.c1 AS TEXT), CHAR(rt0.c2, rt0.c2, rt1.c1))) AND ((((rt0.c0) IS TRUE), ((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)), SQLITE_VERSION(), ((rt1.c1)<(rt0.c1)), CASE WHEN rt1.c1 THEN rt0.c0 END))) HAVING (('-776954980')<=(SUM(rt1.c2))) ORDER BY ((((rt1.c2)<=(rt0.c0))) IS FALSE);SELECT ALL SUM(LOWER(rt1.c0)) FROM rt0, rt1 WHERE (((-1e500)IS((~ (NULL))))); -- 0ms;
SELECT ALL ((((rt0.c2)LIKE(rt0.c2))) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL UNLIKELY(DISTINCT ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))), (((~ (rt1.c0)))%(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))), ((rt0.c0)>(((rt0.c2)AND(rt1.c0)))) FROM rt1, rt0; -- 0ms;
SELECT ALL COUNT(((rt0.c2) ISNULL)) OVER () FROM rt1 WHERE (STRFTIME(UNLIKELY(DISTINCT NULL), ((x'acc1') BETWEEN (x'') AND (NULL)), ((NULL)>>('2044821335'))));SELECT DISTINCT LENGTH(((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c1)))OR(rt1.c0))) FROM rt1, rt0 WHERE (NULLIF((- ('+d(RK幼8 ')), CASE WHEN 0x1251cc2f THEN 'aV' ELSE 0.887783689762179 END)) LIMIT -1206388427 OFFSET 1200287735; -- 1ms;
SELECT (TOTAL(rt0.c0) IN ()), ((CAST('-1336583482' AS INTEGER))<<(((((((((rt0.c0)OR(rt0.c1)))OR(rt1.c1)))OR(rt1.c2)))AND(rt0.c1)))), ((NOT (rt0.c1)) IN ()) FROM rt0, rt1 WHERE (((((0.4460596618924886)IS(x''))) NOT BETWEEN (((('-1735462228')) NOT BETWEEN ((x'')) AND ((NULL)))) AND (((NULL)>=('762787017'))))); -- 0ms;
SELECT DISTINCT LEAD(CASE rt0.c1  WHEN (rt0.c0 IN (rt0.c1)) THEN (rt0.c0 IN ()) END, '-436976024', CAST((rt0.c1 IN ()) AS REAL)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(8.85349229E8, 0.2634185818845577), ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt1.c1))) NOT BETWEEN (rt1.c1) AND (NULL)), CASE ((rt0.c0)%(rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt1.c2 END THEN (((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) ELSE AVG(rt0.c0) END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE LTRIM(rt1.c1)  WHEN (NOT (rt1.c0)) THEN rt0.c1 ELSE (rt0.c2 IN (rt1.c1)) END FROM rt1 WHERE (CASE (('-1109161503') NOT BETWEEN (0.40252624698298234) AND (0Xffffffffd641079b))  WHEN ((0.029969752966694574)||(0xffffffff9765d5e5)) THEN LAST_INSERT_ROWID() ELSE (- (0.08444606817649092)) END);SELECT DISTINCT '*Mf' FROM rt1, rt0; -- 0ms;
SELECT (+ (((rt1.c2)|(rt0.c1)))) FROM rt0 LIMIT 384079351;SELECT DISTINCT ((((CAST(rt1.c0 AS TEXT))AND(((rt1.c2)<>(rt0.c0)))))AND((NOT (rt0.c1)))) FROM rt0, rt1 WHERE ((((((0.31965231399245453) NOT NULL)))>=(((~ (x'')))))); -- 1ms;
