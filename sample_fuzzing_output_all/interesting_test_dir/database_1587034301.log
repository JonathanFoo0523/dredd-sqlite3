-- Time: 2024/06/06 02:57:05
-- Database: database1
-- Database version: 3.40.0
-- seed value: 1587034301
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, notindexed=c0); -- 5ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
UPDATE OR IGNORE rt1 SET c1=-2111839058 WHERE (+ (SQLITE_COMPILEOPTION_USED(rt1.c0))); -- 1ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA default_cache_size; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt0 SET c1=NULL, c1='-1388005505' WHERE ((((vt0.c1)OR(vt0.c0))) ISNULL); -- 0ms;
UPDATE vt0 SET (c1, c1, c0)=(0.22003257197806192, x'3034564f', '-2111839058'); -- 0ms;
PRAGMA temp.auto_vacuum = NONE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DELETE FROM rt1 WHERE (((NOT (rt1.c2)))&((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))); -- 1ms;
PRAGMA temp.wal_autocheckpoint = 9026181651215185649; -- 0ms;
UPDATE OR FAIL rt1 SET c2=x'', c1=x'', c2=0.3569171793604542; -- 0ms;
UPDATE OR ABORT rt1 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.3569171793604542; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=(0.46659969802046974, x'67fc'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
UPDATE rt1 SET c2=x'', c0='816526411'; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 1ms;
PRAGMA incremental_vacuum(-2111839058); -- 0ms;
END; -- 0ms;
UPDATE OR ABORT rt0 SET c0=0.06635183681212309 WHERE (- (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.13063183907708753 WHERE HEX(rt1.c1) COLLATE NOCASE; -- 0ms;
UPDATE OR ABORT vt0 SET c1=NULL; -- 0ms;
PRAGMA temp.mmap_size = 726247964611012415; -- 0ms;
UPDATE vt0 SET (c0)=(-1388005505) WHERE (((((((vt0.c0))<=((vt0.c1))))OR(((vt0.c1)%(vt0.c0)))))OR((vt0.c1 IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
PRAGMA cell_size_check = true; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=('	C㑋O5O|'); -- 1ms;
UPDATE vt0 SET (c1)=(x'7382') WHERE '&E'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.2434631660185833); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1948199737); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.060446642685219265, c1=418417773 WHERE ((CAST(rt1.c0 AS TEXT))-(NULL)); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR FAIL rt1 SET c0='816526411' WHERE ((json_insert(rt1.c2, rt1.c1, rt1.c2))AND(rt1.c2 COLLATE RTRIM)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(0x202fcde7); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c2, c0) VALUES (0.8515597354906957, '', -2.111839058E9); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.43083642613950734; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c1)=('-927878192', 0.2779043902039905, 0.8515597354906957); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('574252271', '0.060446642685219265'), ('_kkm', '}'), (757657980, x''); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1816933314 unordered noskipscan'); -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62562'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('1321723849', x''); -- 0ms;
COMMIT; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('aV-q'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
ANALYZE rt1; -- 3ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'cc05'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT COUNT(rt0.c2), (- ((rt0.c2 IN ()))), (((- ('!A')))&((NOT (rt0.c1)))) FROM rt1, vt0 WHERE ((- (CASE WHEN '1174069061' THEN NULL WHEN '1184637502' THEN '757657980' WHEN 0.737407531037262 THEN x'' ELSE x'8e87' END)));SELECT DISTINCT ((((rt0.c0)||(rt0.c0)))|(((0xffffffffeecafe7f)==(rt1.c0)))) FROM vt0, rt0 GROUP BY (rt0.c2 IN ()) COLLATE RTRIM;SELECT DISTINCT CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (1816933314)) AS INTEGER), CAST(TOTAL_CHANGES() AS INTEGER), (((((((-1.388005505E9)OR('')))OR(rt0.c2))))<>((COUNT(vt0.c1)))) FROM rt0 NOT INDEXED, vt0 GROUP BY (('-927878192') IS FALSE), (((rt1.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c2))))), ((((((vt0.c1)IS NOT(rt1.c2)))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(rt0.c0 AS REAL))) LIMIT -161235144 OFFSET 1144197725;SELECT CAST(((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) AS NUMERIC) FROM rt0 WHERE (((((0.7317960131042063) IS TRUE))&((('#T')<(NULL)))));SELECT DISTINCT ((COUNT(rt0.c1))LIKE(((rt1.c0)GLOB(rt1.c0)))) FROM vt0, rt1 WHERE (NULL) GROUP BY CASE (rt0.c2 IN ())  WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c1)) ELSE ((rt0.c2)*(rt0.c2)) END, ((CASE rt0.c1  WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (LOWER(vt0.c1)) AND (rt0.c0 COLLATE NOCASE)), LAST_INSERT_ROWID() HAVING SUM((NOT (rt1.c0))) LIMIT 9223372036854775807 OFFSET -1393959136;SELECT DISTINCT x'', LIKE(load_extension(rt1.c0, vt0.c1), rt0.c2), TRIM(DISTINCT (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c0))), (((rt1.c0))<>((rt1.c2)))) FROM rt1, rt0;SELECT DISTINCT (((CASE 989518693  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c2 END))<((CHANGES()))) FROM rt1;SELECT DISTINCT ((rt1.c1) NOTNULL) COLLATE RTRIM COLLATE RTRIM, ABS((rt1.c2 IN ())), vt0.c0 FROM rt0, rt1;SELECT DISTINCT CAST(((rt1.c2)*(rt0.c2)) AS REAL) FROM vt0 WHERE (CAST(((NULL) BETWEEN (x'') AND (NULL)) AS BLOB)) ORDER BY (((rt1.c2 IN ())) NOT BETWEEN (vt0.c1) AND ('-1077193954' COLLATE RTRIM)) DESC, '1321723849' DESC, (((NULL, rt1.c2, rt1.c2))>((rt1.c2, vt0.c1, rt0.c1))) COLLATE RTRIM ASC  NULLS FIRST;SELECT DISTINCT (~ (((((rt1.c1)OR(rt1.c0)))AND(rt0.c1)))), AVG(SQLITE_COMPILEOPTION_GET(vt0.c1)), ((((((rt1.c0)OR(rt1.c0)))OR(vt0.c1))) NOTNULL) FROM rt1, rt0, vt0 WHERE (((0.46659969802046974)IS NOT(NULL)) COLLATE BINARY) GROUP BY (NOT (load_extension(rt1.c2))), ((((((((((rt1.c1)AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(vt0.c1))) NOT NULL), rt1.c2 HAVING -2.111839058E9 ORDER BY ((((vt0.c1)IS NOT(rt0.c0))) NOT NULL) DESC  NULLS FIRST; -- 0ms;
SELECT '-1116844770' FROM rt0, rt1; -- 0ms;
SELECT LAST_VALUE(((((rt1.c0, rt1.c2, rt1.c0))!=((0.7317960131042063, rt1.c1, 0.4855420449820359))) IN ())) OVER () FROM rt1 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT DISTINCT ((x'e8ad') BETWEEN (vt0.c1) AND (rt0.c2)) COLLATE RTRIM FROM rt1 ORDER BY (- (rt1.c1)) COLLATE BINARY  NULLS FIRST;SELECT DISTINCT (((((((((- (rt0.c2)))AND(((((rt0.c1)AND(rt1.c0)))AND(rt0.c1)))))OR(((vt0.c0)OR(rt1.c0)))))AND(CAST(rt1.c0 AS INTEGER))))AND('-949888944')) FROM vt0 WHERE ((((NULL)) BETWEEN ((((NULL) NOTNULL))) AND (((('0.2779043902039905')<=(0.7182587623990879))))));SELECT (((vt0.c0)) BETWEEN (((('}')AND(rt1.c1)))) AND (((('') NOT BETWEEN (vt0.c1) AND (rt0.c1))))) FROM vt0 WHERE ((((((NULL)) BETWEEN ((0.06635183681212309)) AND ((NULL)))) IS FALSE));SELECT DISTINCT CASE WHEN (NOT (vt0.c0)) THEN ((rt0.c2) IS TRUE) WHEN ((((NULL)OR(vt0.c0)))OR(rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN rt1.c0 COLLATE NOCASE THEN ((rt1.c1)>=(rt1.c0)) END FROM vt0 WHERE (((((TRIM(0.7182587623990879))AND((NOT ('z')))))AND(CASE 0.9687650054023339  WHEN NULL THEN '' WHEN x'a3e1' THEN NULL WHEN 0.013404572673559212 THEN x'13bf' END)));SELECT ((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0;SELECT DISTINCT GROUP_CONCAT((rt0.c1 IN (rt0.c0))) FROM rt1 WHERE ((((~ (-1388005505))) IS FALSE));SELECT DISTINCT (((rt0.c2)) BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN rt0.c0 THEN 'kAY픽d)pGb' END))) FROM rt1, vt0, rt0; -- 1ms;
SELECT DISTINCT rt0.c0 FROM rt1 NOT INDEXED WHERE (((NULL) IS FALSE));SELECT ALL AVG(((rt1.c1) NOT NULL)) FROM rt1, vt0, rt0 WHERE (((NULL COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT DISTINCT ((rt0.c1)OR(CAST(rt1.c2 AS BLOB))) FROM rt1;SELECT ALL CAST((~ (rt1.c0)) AS BLOB) FROM rt0, rt1 WHERE (x'6b79' COLLATE BINARY) GROUP BY (((((vt0.c1)||(rt1.c2))))>=((DATE('385139950', '-181304942', x'ead2')))) HAVING GROUP_CONCAT(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))) ORDER BY rt1.c2 DESC  NULLS LAST;SELECT AVG(rt1.c1) OVER (), PERCENT_RANK() OVER (), (((rt1.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt1.c2, vt0.c0, x'')) AND ((rt1.c1, rt0.c2, rt0.c2))) COLLATE NOCASE, ((((0.013404572673559212) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOTNULL), CAST((rt0.c2 IN ()) AS REAL) FROM rt1 GROUP BY (NOT ('816526411')) COLLATE RTRIM;SELECT NTILE(CASE ((vt0.c0) ISNULL)  WHEN (+ (rt0.c0)) THEN ((rt0.c0) IS FALSE) WHEN NULL THEN (((('')OR(vt0.c0)))AND(rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (0.7181949263854679)) THEN ((rt0.c1)<=(-9.27878192E8)) END) OVER ( ORDER BY SQLITE_COMPILEOPTION_GET(CASE ''  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 END) ASC  NULLS LAST, ((rt0.c1)LIKE(vt0.c0)) COLLATE BINARY DESC, CAST(rt1.c2 AS TEXT) COLLATE RTRIM DESC  NULLS LAST) FROM vt0, rt0 ORDER BY (((vt0.c1)) BETWEEN (('2032295999')) AND ((CAST(rt0.c0 AS INTEGER)))) ASC;SELECT ALL CAST(((rt1.c0)>(rt1.c0)) AS REAL) FROM rt1 GROUP BY MAX((rt1.c0 IN ()), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((x'adf7'))), ((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1)), rt1.c0 COLLATE NOCASE);SELECT DISTINCT (NOT (IFNULL(DISTINCT rt1.c2, vt0.c0))) FROM rt0, vt0, rt1 WHERE (((('-400156216')<<(NULL)) IN ())); -- 0ms;
SELECT (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c0 END IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT HEX((- (vt0.c0))) FROM rt0;SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)/(CASE WHEN 0Xffffffffffffffff THEN rt0.c2 ELSE rt1.c0 END)) FROM rt0, rt1, vt0; -- 0ms;
SELECT (((((NULL)*(vt0.c0))))>=(((((rt1.c2, vt0.c0, rt1.c1))>((vt0.c0, rt0.c1, rt1.c2)))))) FROM rt1, rt0 WHERE ((NOT ((('528395457') BETWEEN (x'') AND (x'')))));SELECT COUNT(*) FROM rt0, vt0 WHERE (((('#t')) BETWEEN ((CASE WHEN '' THEN '-1393959136' WHEN NULL THEN '쓮Z' WHEN 0.7846743932365766 THEN NULL ELSE '-1393959136' END)) AND ((((-1.11684477E9) NOT BETWEEN (1.184637502E9) AND (NULL)))))); -- 0ms;
SELECT ALL COUNT(rt1.c1) OVER () FROM rt0, rt1 ORDER BY json_object((rt1.c0 IN (rt0.c2)), COALESCE(vt0.c1, vt0.c1), (((rt1.c2, rt0.c2, x'eb77'))<((rt0.c0, rt1.c2, vt0.c0))), NULL COLLATE RTRIM);SELECT ALL rt0.c2 FROM rt1 WHERE (CAST(((((NULL)AND(0.13063183907708753)))OR(NULL)) AS NUMERIC));SELECT DISTINCT ((((rt0.c1) IS FALSE))!=(((((((((rt1.c0)OR(rt0.c0)))AND(-1.388005505E9)))OR(rt0.c1)))AND(rt0.c2)))) FROM rt1 RIGHT OUTER JOIN vt0 ON (NULLIF(DISTINCT vt0.c1, x'5b58') IN ());SELECT ALL (+ (MIN(rt0.c1))) FROM rt0, vt0, rt1; -- 0ms;
SELECT vt0.c0, COUNT(CAST(rt0.c0 AS INTEGER)), ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c1))) ISNULL) FROM vt0 WHERE (CASE WHEN 0.5057478015294099 COLLATE NOCASE THEN ((1184637502)OR('')) WHEN (('HlDDjs(j)W') IS TRUE) THEN (((0xffffffffae5f75ac, 0.10367145470208483, 1.321723849E9))<>((0xfffffffface9df20, '418417773', -1.61235144E8))) WHEN (('	C㑋O5O|') ISNULL) THEN CASE '-161235144'  WHEN 0Xffffffffdf80e0db THEN x'' ELSE x'' END END);SELECT (((vt0.c0, rt0.c1, rt1.c1)) BETWEEN ((((rt1.c0) NOT BETWEEN ('?u') AND (rt0.c2)), ((rt0.c2)&(rt1.c2)), CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN rt0.c1 ELSE vt0.c1 END)) AND ((((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)), ((NULL)&(rt1.c2)), (NOT (rt0.c1))))), ((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt1.c2))) IS FALSE), ((((rt1.c0) NOT NULL))!=(((((rt1.c0)OR(rt1.c2)))OR(rt0.c1)))) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL LIKE(CAST(rt0.c2 AS TEXT), ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c1))) FROM rt0;SELECT (((COUNT(rt0.c0), (~ (rt0.c0)), CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN NULL WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END))>=(((~ (rt1.c1)), rt0.c1 COLLATE RTRIM, ((vt0.c0) ISNULL)))) FROM rt0, vt0 LIMIT -181304942;SELECT DISTINCT ((((((rt1.c1) IS TRUE))AND(((0x6c4c33c2) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c1)))) FROM rt1, vt0 WHERE (CASE (('1144197725') BETWEEN ('1906654895') AND (x''))  WHEN (NOT ('mP')) THEN ((NULL)*(0.9415858865789732)) ELSE (('')||(NULL)) END);SELECT ALL TOTAL(CASE WHEN vt0.c1 THEN x'd787' WHEN vt0.c0 THEN '[]' WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END), ((DATE(rt0.c1, rt1.c2, rt0.c1)) IS FALSE), (((NOT (vt0.c0))) BETWEEN (((rt1.c2) IS FALSE)) AND (((rt0.c0)>>(rt1.c1)))) FROM rt1, vt0, rt0; -- 0ms;
SELECT (((((vt0.c0, rt0.c0, NULL)) NOT BETWEEN ((rt0.c0, rt1.c2, vt0.c0)) AND ((vt0.c1, rt0.c0, rt1.c2))))<=(((rt0.c2) IS TRUE))) FROM rt1 LIMIT 885196715 OFFSET 2107661101;SELECT MAX(((rt0.c1)LIKE(rt0.c1))) FROM vt0;SELECT DISTINCT MAX(((((vt0.c0)OR(rt0.c0)))AND(rt1.c2))) FROM rt1 WHERE (968552687);SELECT UNICODE(((')嫖	,1')+(rt0.c1))), json_insert((((vt0.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c1, vt0.c0, vt0.c0)) AND ((rt0.c0, rt1.c2, vt0.c0))), ((rt0.c1) ISNULL), rt0.c0, (~ (vt0.c0)), UNLIKELY(DISTINCT vt0.c1)), ((((((rt1.c1)OR(rt0.c1)))AND(vt0.c1)))>=(((rt0.c2)<<(rt1.c2)))) FROM vt0;SELECT DISTINCT (((((rt0.c0, rt0.c1, vt0.c0))<=((rt0.c2, rt0.c0, rt0.c0)))) IS TRUE) FROM rt1, rt0, vt0 WHERE (((((((NULL)IS('')))OR(x'680d')))AND((((0.8693105619744868))<=((0.31704002167189893)))))); -- 0ms;
SELECT ALL CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN ((vt0.c1)+(rt1.c2)) ELSE '-161235144' END FROM rt1, vt0; -- 0ms;
SELECT AVG((((vt0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt1.c0, vt0.c1, vt0.c1)) AND ((rt0.c1, vt0.c1, rt0.c0)))) FROM rt0;SELECT ALL CAST(((((rt1.c1)OR(rt0.c2)))AND(rt0.c2)) AS BLOB) FROM vt0, rt0;SELECT DISTINCT CAST(rt1.c0 COLLATE BINARY AS NUMERIC), SUM(CASE NULL  WHEN rt1.c0 THEN '-400156216' ELSE rt1.c1 END) OVER ( ORDER BY ((CAST(0.12733577615312153 AS NUMERIC))>(COALESCE(DISTINCT '1173362685', rt1.c1, rt1.c1, rt1.c0))) ASC, (((vt0.c1))==(((- (rt1.c0))))) ASC, ((json_type(rt0.c2))-(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c2 WHEN ')嫖	,1' THEN '[]' WHEN rt0.c0 THEN rt0.c2 END))  NULLS LAST), COUNT(LIKELY(rt1.c1)) FROM rt1, vt0, rt0 WHERE (((((NULL) BETWEEN ('-1077193954') AND (0.9209580429114413))) NOTNULL)); -- 1ms;
SELECT CAST(((vt0.c1) ISNULL) AS REAL), (~ (((((vt0.c1)AND(rt1.c0)))AND(vt0.c1)))), rt0.c0 FROM vt0, rt1;SELECT (((((((885196715))<>((rt0.c0))))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (0.08286151202395342)))))AND(SQLITE_VERSION())) FROM vt0, rt0 WHERE (LOWER(''));SELECT DISTINCT (CASE rt0.c0  WHEN vt0.c0 THEN rt1.c0 ELSE vt0.c1 END IN ((+ (rt0.c2)), ((rt1.c0)||(vt0.c1)))) FROM rt0 WHERE (NULLIF(((NULL) BETWEEN ('') AND (x'')), LOWER(x'a587')));SELECT ((rt1.c1 COLLATE NOCASE) ISNULL) FROM vt0;SELECT DISTINCT LEAD(((((x'9300')GLOB(rt1.c1)))<=(x'')), rt1.c2, TYPEOF(rt1.c2) COLLATE RTRIM) OVER ( ROWS load_extension(vt0.c0) COLLATE BINARY PRECEDING) FROM rt1 WHERE ((((('9 ') IS TRUE)) NOT NULL)) ORDER BY CHANGES() ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((('YT?W', NULL, rt1.c0))<((vt0.c0, rt1.c1, vt0.c1)))) IS TRUE), CAST(((1273636328) ISNULL) AS REAL), '2!9I*3' FROM vt0;SELECT ((((((((((rt1.c1)AND(rt0.c0)))AND(rt1.c1)))AND(vt0.c1)))AND(rt0.c0)))AND((vt0.c0 IN ()))) FROM rt0 ORDER BY ((((rt1.c0)&(vt0.c1)))|(((((rt1.c2)AND(rt0.c1)))AND(rt1.c0))))  NULLS LAST;SELECT DISTINCT 1321723849, ((((((vt0.c0)OR(rt1.c1)))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)))))AND(CAST('4.&i\''d' AS BLOB))), ((((((rt0.c1)OR(rt0.c1)))OR(rt1.c2)))=(NULL)) FROM rt1, rt0, vt0 GROUP BY (vt0.c1 IN (rt0.c1)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (+ (((rt1.c0)<=(vt0.c0)))), (((((rt1.c0)) BETWEEN ((0.9494618453612022)) AND ((rt1.c2))))%(((0.8253140797020235)AND(rt1.c2)))), rt0.c0 COLLATE NOCASE FROM rt0 WHERE ((((0.8115855226529791)) NOT BETWEEN (((x'' IN (-181304942)))) AND (((NULL IN ()))))) GROUP BY ((CAST(rt0.c0 AS TEXT)) NOTNULL), ((LIKELY(x'9dee')) ISNULL), rt1.c1;SELECT DISTINCT rt1.c1, CAST(CASE WHEN rt1.c2 THEN rt0.c2 ELSE vt0.c0 END AS TEXT), ROUND(vt0.c1, rt1.c2) COLLATE BINARY FROM vt0, rt0 WHERE (NULL) GROUP BY CAST(((rt1.c0) NOT NULL) AS NUMERIC) HAVING (((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN ((((((vt0.c0)AND(rt1.c0)))OR(rt0.c0)), ((((((((vt0.c0)AND('o')))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)), CAST(vt0.c0 AS NUMERIC))) AND (((((rt1.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0))), ((vt0.c0)%(rt1.c0)), json('-1469859937')))) LIMIT -1736793550;SELECT AVG(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c0) IS FALSE))||(MAX(rt0.c0))) FROM vt0, rt0 WHERE (((((x'' COLLATE BINARY)OR((('2k')<=(0.10218778627534753)))))OR(CAST(x'0edc' AS REAL))));SELECT ((((- (rt0.c2))))<=(((- (rt1.c1))))) FROM vt0, rt0 WHERE ((((-767434710)) NOT BETWEEN ((CAST('' AS TEXT))) AND (((('-1523352943')IS(0.5057478015294099))))));SELECT TYPEOF(((rt1.c1) IS TRUE)) FROM rt0;SELECT DISTINCT ((((rt0.c1)AND((vt0.c1 IN ()))))OR(rt0.c0)) FROM vt0, rt1, rt0 WHERE (((((((((('PTnIV邝')AND(x'3c71')))OR(x'')))OR('?H')))AND(0.7430186428904646)) IN ())); -- 3ms;
SELECT DISTINCT (((~ (vt0.c0)))!=(((rt1.c0)|(rt1.c2)))) FROM vt0, rt1, rt0 WHERE (((((((((((((((((x'')OR(x'')))OR(NULL)))AND(0X648b6986)))AND(NULL)))OR(((((NULL)OR(NULL)))AND(0.737407531037262)))))AND((x'ca37' IN (1210771395)))))AND(CASE 'icJ\㏻벛9'  WHEN '-2111839058' THEN x'' ELSE '260546254' END)))AND((((NULL))>(('')))))); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT '' COLLATE BINARY, GROUP_CONCAT(8.85196715E8)) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((0.2490045175626343)OR(rt1.c2)))) FROM rt0;SELECT DISTINCT CASE ((vt0.c1) NOT NULL)  WHEN ((rt1.c2)&(vt0.c1)) THEN CAST(rt1.c0 AS NUMERIC) WHEN (rt1.c2 IN (vt0.c0, rt0.c1)) THEN CAST(rt1.c0 AS NUMERIC) WHEN CAST(rt1.c1 AS REAL) THEN (((rt0.c1, rt1.c0, rt0.c2)) BETWEEN ((rt0.c2, vt0.c1, rt1.c2)) AND ((rt0.c2, vt0.c0, -1517406762))) ELSE (rt1.c1 IN ()) END FROM rt0;SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((x'') ISNULL))) AND ((((rt1.c2)OR(rt1.c0))))), PERCENT_RANK() OVER (), ((CASE rt1.c0  WHEN rt0.c1 THEN '' END) NOT BETWEEN (rt0.c1) AND ((('Y0j*')<=(rt1.c2)))) FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL NULL COLLATE BINARY FROM vt0 WHERE (CASE x''  WHEN 0.028549007044885277 THEN 't*~\npyꍌ' END COLLATE BINARY COLLATE BINARY) GROUP BY rt1.c2 HAVING ((((rt0.c1)GLOB(rt1.c1)))&((((rt1.c2))<((vt0.c0)))));SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0))) IS FALSE) FROM rt0, rt1;SELECT ALL NTILE(((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))>>(CASE 0.795889262968562  WHEN x'7f29' THEN rt0.c0 END))) OVER () FROM rt0;SELECT ALL rt1.c0 FROM rt0;SELECT DISTINCT (NOT (CAST(rt0.c1 AS REAL))) FROM rt0 WHERE (((CASE '-1077193954'  WHEN '0.7430186428904646' THEN NULL END)AND((('1059923077') BETWEEN ('y^?!i''F') AND ('989518693'))))); -- 5ms;
SELECT ALL ((((((((((rt1.c0)OR(x'')))OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c2))) NOTNULL) FROM vt0, rt1, rt0 LIMIT -1331133922 OFFSET -1469859937; -- 0ms;
SELECT (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((rt1.c2) ISNULL), (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1))), (- (vt0.c1)))) AND (((NOT (rt0.c0)), GROUP_CONCAT(rt0.c2), CASE WHEN vt0.c1 THEN rt1.c1 END))), rt1.c0, (((rt0.c2 IN (rt0.c1, rt0.c1))) NOT NULL) FROM vt0, rt1, rt0 WHERE (CASE WHEN (x'' IN ()) THEN ('-1168797894' IN (NULL)) ELSE ((((0.49606560149546397)AND('-1182986809')))OR(x'd4d4')) END); -- 0ms;
SELECT DISTINCT CAST(((((((((vt0.c0)AND(vt0.c1)))AND(rt1.c1)))OR(x'')))OR(rt0.c0)) AS REAL) FROM rt1, vt0;SELECT ALL CAST(((((rt1.c2)OR(rt0.c0)))AND(rt1.c0)) AS BLOB), (((((((rt1.c2)) NOT BETWEEN ((0.8115855226529791)) AND ((rt0.c0))))OR(TYPEOF(vt0.c0))))AND(((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), ((((rt0.c0)=(rt0.c0))) IS FALSE) FROM rt0, rt1 LIMIT 847902805 OFFSET -545201957;SELECT DISTINCT (((('&Q.kvEy8H') ISNULL)) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((NOT (rt0.c0)))), ((((((((rt0.c1 COLLATE RTRIM)AND(TRIM(vt0.c0, vt0.c1))))OR((((rt1.c2))<((rt0.c1))))))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c1 END)))OR(NULL)), (((~ (rt0.c0))) IS TRUE) FROM rt0 WHERE (CASE x'' COLLATE NOCASE  WHEN (((('?^.DeWrㄟ')OR('9 ')))OR(x'')) THEN LIKELIHOOD(0.23340311838863625, 0.21705372119355693) END);SELECT ALL (((0Xffffffffe6460af4)) BETWEEN ((CAST(rt1.c0 AS REAL))) AND (('T'))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt1.c2) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN 0xffffffffb8d3bd26 END) AND (TOTAL(rt0.c0))) FROM rt0 WHERE (CASE x'b304'  WHEN x'' THEN x'e076' END COLLATE BINARY);SELECT DISTINCT ((AVG(rt1.c2))<=(((((rt0.c2)OR('1274836849')))OR(vt0.c1)))) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN ((rt0.c2)<(rt0.c0)) THEN ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) WHEN ((x'') BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c2)&(rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (rt0.c1 IN (rt0.c2, rt0.c0)) END, (((((((((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c1, rt0.c2, NULL))))AND(((rt0.c0) ISNULL))))AND(((rt0.c1) NOTNULL))))AND(((rt0.c0)IS NOT(rt0.c0)))))OR(CAST(rt0.c1 AS REAL)))) OVER (), LOWER(DISTINCT '205149750'), (((((NULL))<((0.7370691265305028))))||(((((((((vt0.c1)OR(rt1.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) FROM rt0;SELECT ((CAST(rt1.c1 AS REAL))AND(rt1.c0 COLLATE NOCASE)) FROM rt1, vt0 WHERE ((((NULL)) NOT BETWEEN ((x'8148')) AND (('U]'))) COLLATE RTRIM); -- 0ms;
SELECT ALL rt1.c1 COLLATE RTRIM FROM vt0 GROUP BY ((((rt1.c2)AND(((rt1.c0)<>(rt1.c0)))))OR((- (rt1.c2)))) HAVING TRIM(vt0.c0) COLLATE NOCASE;SELECT DISTINCT CASE COUNT(*)  WHEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c0 END THEN vt0.c0 ELSE rt1.c0 COLLATE RTRIM END, CASE (((rt1.c2))>=((rt1.c0)))  WHEN CAST(rt0.c2 AS TEXT) THEN ((vt0.c1) BETWEEN (rt0.c0) AND (x'')) END, (((((rt0.c0, '-1101495019', vt0.c0)) NOT BETWEEN ((vt0.c1, '&', vt0.c0)) AND ((vt0.c0, rt1.c2, vt0.c0)))) NOT BETWEEN (((((rt0.c0)AND(rt1.c1)))AND(rt1.c0))) AND (UPPER(DISTINCT vt0.c1))) FROM rt0, rt1 WHERE (LIKELY(ROUND('!.O', '285568892'))) LIMIT 473067131 OFFSET 1210771395;SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY ((((- (rt0.c2)), ((rt1.c2) IS TRUE), CAST(rt0.c2 AS BLOB)))<=((((rt1.c1) BETWEEN ('-2042719965') AND (rt1.c1)), (rt1.c0 IN ()), ((rt0.c0) ISNULL)))), ((CAST(rt1.c2 AS INTEGER))-(highlight(rt1.c1, rt0.c0, vt0.c0, rt0.c0))), (- (vt0.c1)) COLLATE RTRIM, (((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN ((- (rt0.c0))) AND (TYPEOF(rt0.c2))), json_extract(((rt1.c2) BETWEEN (vt0.c1) AND (rt1.c1)), (((rt0.c1, rt0.c1, rt1.c0)) NOT BETWEEN ((rt1.c0, rt0.c1, rt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c1)))), (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2)) IN ()) ROWS  UNBOUNDED PRECEDING), CASE WHEN 0Xffffffffaf35c835 THEN ((vt0.c0)!=(NULL)) END, (((TRIM(rt1.c0, rt0.c2), CAST(rt0.c2 AS BLOB), CAST(rt0.c0 AS INTEGER)))<(((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c2))), ((rt0.c2)>>(rt0.c2)), (rt1.c2 IN ())))) FROM rt1, rt0;SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY ((0.9078220696877687) NOT NULL) DESC  NULLS LAST), LAST_VALUE(CASE WHEN ((rt1.c2)!=(rt1.c2)) THEN (NOT (NULL)) WHEN ((rt1.c1)OR(rt0.c1)) THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) WHEN UPPER(DISTINCT rt0.c2) THEN 'VN<WsnF_' ELSE rt1.c2 COLLATE BINARY END) OVER (), NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt0.c1) AND (x'29b7')), CASE WHEN rt1.c2 THEN rt0.c2 END), COUNT(((rt1.c0)+(x''))), FIRST_VALUE(((((rt0.c0) NOT NULL))LIKE('375045291'))) OVER () FROM rt1, rt0; -- 0ms;
SELECT rt0.c2, ((rt0.c0)>>((((rt1.c2, rt0.c2, rt1.c1))<((rt1.c1, rt1.c0, vt0.c1))))), MIN(SUM(((-6.22543717E8)AND(rt0.c0)))) FROM rt1, rt0 WHERE (((((((NULL)!=('0.08286151202395342')))OR(CASE x'04e2'  WHEN '-1603296027' THEN NULL ELSE '1' END)))AND(((x'') ISNULL))));SELECT ALL (LTRIM(0.12733577615312153) IN (((rt0.c2) NOT NULL))), ((((rt1.c1))<>((rt0.c1))) IN ()), (CAST(vt0.c1 AS BLOB) IN ()) FROM rt1, vt0 WHERE (((((((0.46659969802046974)|(x'')))AND(((((NULL)OR('-97258868')))OR(x'')))))AND(((1466331537)GLOB(x'')))));SELECT DISTINCT (((CAST('0.2434631660185833' AS REAL)))<((SUM(rt0.c0)))) FROM vt0;SELECT DISTINCT CAST((rt0.c2 IN ()) AS INTEGER), vt0.c0, CAST(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS NUMERIC), (~ (((vt0.c1)>=(vt0.c0)))), ((CAST(vt0.c0 AS TEXT)) IS FALSE) FROM vt0, rt1, rt0 WHERE ('1034629407'); -- 0ms;
SELECT DISTINCT ')祌+/K⒅4x#' FROM rt0, vt0, rt1 WHERE (((((x'' IN ('\n*F', '-400156216'))))==((CASE WHEN NULL THEN -1193082970 END)))); -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN vt0.c1 END)) AND ((rt0.c2 COLLATE NOCASE))), CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) AS TEXT), ((((rt1.c2) BETWEEN (vt0.c1) AND (rt1.c2))) IS FALSE) FROM rt0 WHERE (CASE WHEN (('')>>(NULL)) THEN ((NULL) NOTNULL) END) GROUP BY NULLIF(DISTINCT CAST(rt1.c0 AS TEXT), LOWER(rt1.c0)), CAST(json_valid(rt1.c1) AS BLOB), ((((((((((rt1.c0)AND('0.8253140797020235')))OR(rt1.c0)))AND(rt0.c1)))OR(vt0.c0))) NOT NULL);SELECT DISTINCT '|', (CASE rt0.c2  WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c2 END IN ()), (((vt0.c1)<=(rt1.c2)) IN (((rt0.c1) NOT NULL), ((rt0.c1)>(rt0.c0)))) FROM rt0, vt0;SELECT DISTINCT (((vt0.c0)) BETWEEN ((NULL COLLATE NOCASE)) AND ((AVG(vt0.c0)))), (((((rt0.c1) IS FALSE)))!=(((vt0.c1 IN ())))), 0.08835660310850069 COLLATE NOCASE COLLATE RTRIM FROM rt1, vt0;SELECT DISTINCT CAST(GROUP_CONCAT(rt1.c1) AS TEXT), (NOT (((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c2)))), CASE WHEN ((((((((((((rt1.c1)OR('-456759839')))AND(rt0.c2)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(vt0.c1)) THEN CAST(rt1.c1 AS TEXT) END FROM rt1, rt0;SELECT ALL ((((vt0.c0)==(rt1.c0)))!=(((rt0.c0) IS TRUE))), (((vt0.c0 IN ())) BETWEEN (((((rt0.c0)AND(vt0.c1)))OR(rt0.c1))) AND (rt1.c0 COLLATE NOCASE)), CASE ((rt1.c0) NOT NULL)  WHEN CASE WHEN vt0.c0 THEN rt1.c0 END THEN CAST(rt0.c2 AS INTEGER) ELSE ((0.7978029347448033)LIKE(rt0.c2)) END FROM rt1;SELECT DISTINCT ((((((x'd8b9')AND(vt0.c0)))AND(rt1.c1))) NOT NULL) FROM rt1;SELECT ALL vt0.c0 FROM rt1, vt0; -- 0ms;
SELECT DISTINCT (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))LIKE(COALESCE(rt1.c2, rt1.c0))), SQLITE_SOURCE_ID(), GROUP_CONCAT(((NULL)IS(rt1.c2))) OVER (), ((rt1.c1) NOTNULL), (((rt1.c2)) BETWEEN ((json_patch(0.334363992993003, rt1.c0))) AND (((NOT (-4.31617292E8))))) FROM rt0, vt0, rt1 WHERE (((NULL) BETWEEN ('0M') AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS NUMERIC), ((((NULL) NOT NULL))>=((+ (rt1.c2)))), ((((x'') NOT BETWEEN (rt1.c2) AND (vt0.c1))) NOT BETWEEN ((- (rt1.c1))) AND (CAST(rt0.c0 AS REAL))) FROM vt0, rt1 WHERE (LENGTH(x'')) ORDER BY ((UNICODE(rt0.c0))||(((((rt1.c1)AND(rt0.c0)))OR(rt1.c2))))  NULLS LAST;SELECT DISTINCT vt0.c0 FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 COLLATE BINARY FROM rt0, rt1;SELECT DISTINCT ((CASE rt1.c2  WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)%(json_array_length(x''))), ((((((rt1.c2)AND(-5.45201957E8)))OR(1.7976931348623157E308))) BETWEEN (MIN(rt0.c1)) AND (rt1.c1)), (+ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))) FROM vt0, rt1 WHERE (((x'0af9')>=(HEX(DISTINCT 0.8405000069860985)))) GROUP BY CAST(load_extension(rt1.c0) AS BLOB) HAVING (~ (((rt1.c2) IS TRUE)));SELECT DISTINCT CASE WHEN GROUP_CONCAT(rt0.c2) THEN COUNT(rt1.c2) WHEN rt0.c2 COLLATE RTRIM THEN (rt1.c0 IN (rt0.c1, vt0.c0)) WHEN (+ (rt1.c2)) THEN LTRIM(rt0.c2) END, ((vt0.c1)GLOB(((vt0.c1) NOT BETWEEN (rt1.c0) AND (x'')))), (((rt1.c2)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((((rt0.c0)!=(vt0.c1))))) FROM rt0, vt0, rt1 WHERE ((('') BETWEEN ('660319626') AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (~ (((((rt0.c1)OR(rt0.c2)))OR(rt1.c2)))) FROM rt1 WHERE (SQLITE_VERSION()) LIMIT 1 OFFSET -1613526867;SELECT DISTINCT ((((vt0.c0)OR(rt1.c1)))LIKE(highlight(rt0.c1, vt0.c1, rt0.c2, rt1.c2))) FROM rt1 WHERE (CAST(1.210771395E9 AS NUMERIC) COLLATE BINARY) LIMIT -394891889 OFFSET -159340636;SELECT ALL (0.5411287192790274 IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((IFNULL(rt0.c0, rt1.c1))OR(vt0.c1)))AND(((vt0.c1) BETWEEN (rt1.c1) AND (rt0.c0)))) FROM rt0 WHERE (('2130614081' IN ()) COLLATE RTRIM);SELECT DISTINCT SUM(((rt1.c1) NOT BETWEEN (NULL) AND (rt0.c0))) OVER ( ORDER BY rt0.c0 ASC) FROM vt0 WHERE ((((((x'')) BETWEEN (('2079579325')) AND ((x'f797'))))-(CASE NULL  WHEN x'6e8c' THEN '0.10367145470208483' END))) ORDER BY (NOT (((vt0.c1) IS TRUE)));SELECT DISTINCT CAST(CAST(rt1.c1 AS REAL) AS REAL), AVG((((rt0.c2, rt1.c1, rt0.c0))>=((rt0.c2, vt0.c0, vt0.c0)))) OVER (), (NOT (((NULL) IS FALSE))) FROM vt0, rt0 WHERE (IFNULL(DISTINCT (((''))>(('1184637502'))), CASE WHEN '-2063524015' THEN x'' WHEN '-664248013' THEN x'' WHEN 497399156 THEN NULL END));SELECT DISTINCT ((NULL) NOT NULL) FROM vt0, rt0, rt1 WHERE (((((NULL IN (x'', 0.060446642685219265))))>((((x'') BETWEEN (0.29935755252978824) AND (1598759927)))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC))OR(COUNT(*))) FROM vt0, rt0, rt1 WHERE ((0.23340311838863625 IN ())); -- 0ms;
SELECT (((vt0.c1, rt1.c2, rt0.c2)) BETWEEN ((AVG(rt0.c0), ((rt1.c2) IS FALSE), ((rt1.c0) NOTNULL))) AND ((((((((((rt1.c2)OR(rt0.c0)))AND(vt0.c1)))OR(rt1.c1)))OR(rt0.c0)), (vt0.c1 IN ()), (NOT (x''))))), (((rt0.c1 IN (rt0.c1))) NOTNULL), (~ (CHAR(rt1.c0))) FROM rt1, vt0, rt0 LIMIT 1294658482 OFFSET -1447166898; -- 0ms;
SELECT TOTAL((NOT (rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((rt1.c0))>=((vt0.c1))))AND((vt0.c1 IN ()))))AND(((rt0.c1)=(rt0.c2)))) FROM vt0, rt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0)OR(rt1.c1)))AND(rt0.c0)))AND(rt1.c1)))OR(rt1.c0))) ISNULL) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (~ (rt0.c0)) FROM vt0, rt0, rt1; -- 0ms;
SELECT ((('8_', ((vt0.c1) IS TRUE), rt1.c1 COLLATE RTRIM))>((rt0.c0 COLLATE BINARY, MIN(rt1.c0), CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN 0.13799221314284538 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c2 END))), (NOT (CASE rt1.c0  WHEN vt0.c1 THEN rt0.c1 ELSE rt1.c2 END)), CASE UNLIKELY(DISTINCT vt0.c1)  WHEN (rt0.c1 IN (rt1.c1, rt0.c0)) THEN ((rt1.c2)/(rt0.c2)) END FROM rt1, rt0, vt0 GROUP BY CAST(((rt0.c1) NOT BETWEEN (x'') AND (vt0.c1)) AS BLOB), ((((((NULL)AND(rt0.c0)))AND(rt0.c1)))>((vt0.c1 IN ()))), (((rt1.c0)GLOB(rt0.c1)) IN (1585977148 COLLATE BINARY)) HAVING ((CAST(vt0.c0 AS BLOB))=(((rt1.c0)GLOB(rt0.c0)))) LIMIT -674913460 OFFSET 1737986205; -- 0ms;
SELECT CASE (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))  WHEN 'V6' THEN 0.4071668863575626 END, AVG(CAST(rt0.c2 AS BLOB)) OVER (), ((x'4d87')*(rt1.c0 COLLATE BINARY)) FROM rt1, rt0;SELECT ALL (((NOT (vt0.c1)))GLOB(CAST(rt1.c1 AS INTEGER))) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c2 AS INTEGER))IS(CASE '-1193082970'  WHEN rt1.c0 THEN rt0.c2 END)) RIGHT OUTER JOIN rt1 ON CASE WHEN ((rt1.c0)GLOB(vt0.c1)) THEN ((vt0.c1) IS FALSE) WHEN vt0.c1 THEN CAST(rt1.c2 AS REAL) WHEN (rt0.c0 IN ()) THEN ((rt1.c1)>=(rt1.c0)) END LIMIT 1686858118;SELECT SUM((NOT (NULL))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM)>=(((((rt1.c1)OR(rt0.c1)))AND(rt0.c1)))) FROM rt1 WHERE (CAST((('-1925131247')<=('1868960231')) AS INTEGER)) LIMIT -1221495011;SELECT ALL (((vt0.c1, rt1.c1, rt0.c1))>((rt0.c1, rt1.c2, rt1.c1))) COLLATE RTRIM FROM rt0 CROSS JOIN vt0 ON ((CASE rt0.c2  WHEN '1174069061' THEN rt1.c2 END)GLOB(CASE x''  WHEN vt0.c0 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt0.c0 END));SELECT ((vt0.c0) NOTNULL) COLLATE NOCASE, COUNT(*), 7.5765798E8 FROM vt0, rt1 ORDER BY ((((vt0.c0) NOT BETWEEN (rt1.c2) AND (NULL))) BETWEEN (rt1.c2) AND (((rt0.c2) BETWEEN (vt0.c0) AND (rt1.c1))))  NULLS FIRST;SELECT ALL ((CAST(rt0.c0 AS REAL))OR((NOT (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((x'') NOTNULL), ((rt1.c0)>=(rt0.c2)) COLLATE BINARY, ((((((((vt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(CAST(rt0.c2 AS REAL))))AND(LAST_INSERT_ROWID())) FROM rt0, vt0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT AVG(DATE(rt0.c0, rt0.c2, rt1.c2)) OVER (), (vt0.c1 IN ()) COLLATE RTRIM, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((rt1.c0)<>(rt0.c2)) WHEN vt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN rt1.c0 END WHEN CASE WHEN vt0.c0 THEN rt1.c2 END THEN ((((vt0.c0)OR(rt0.c1)))OR(rt1.c1)) ELSE rt0.c1 COLLATE NOCASE END FROM vt0, rt0;SELECT DISTINCT LEAD(((((((vt0.c1)OR(rt0.c2)))OR(rt0.c2))) ISNULL), ((rt0.c0)LIKE(vt0.c0)) COLLATE NOCASE, LOWER(DISTINCT ((((NULL)OR(vt0.c1)))AND(rt0.c2)))) OVER ( ORDER BY rt0.c2 DESC) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c2 COLLATE BINARY  WHEN CASE WHEN x'9a50aafc' THEN rt0.c1 END THEN ((rt1.c2)||(rt0.c1)) ELSE HEX(DISTINCT rt1.c1) END, LIKELY(GROUP_CONCAT(rt0.c2)), ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c1)) COLLATE RTRIM FROM vt0, rt0;SELECT ((rt1.c0)+(vt0.c1)) COLLATE BINARY, ((((rt0.c2)*(vt0.c0))) NOT BETWEEN (((rt0.c1)>(vt0.c0))) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))), ((CASE WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN NULL THEN rt1.c1 END) NOT BETWEEN ((((rt1.c0))==((x'7307')))) AND (((((rt0.c0)AND(rt1.c1)))OR(rt1.c0)))), CASE (+ (rt0.c1))  WHEN CASE rt0.c0  WHEN 0.7306492365997803 THEN rt1.c1 ELSE rt0.c2 END THEN ((vt0.c0)>>(rt1.c0)) END, json_array(AVG(rt0.c2), rt0.c0 COLLATE NOCASE) FROM rt1 WHERE (CAST(((x'')OR(NULL)) AS INTEGER));SELECT ((((vt0.c1)IS NOT(rt1.c0)))AND(((rt1.c0)/(rt0.c0)))) FROM rt1, vt0 WHERE (x'');SELECT ALL (((~ (x'')))<((~ (rt1.c1)))), (NOT (rt0.c2)) COLLATE RTRIM, ABS(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))) FROM rt1 LIMIT 1585977148 OFFSET -1911205724;SELECT ALL ((vt0.c0 COLLATE BINARY) NOT NULL) FROM vt0 WHERE ((((((NULL, NULL, x'')) NOT BETWEEN ((0.46251116425649463, 0.943640830689373, '#騕_b>~zt憰')) AND ((-1.523352943E9, '8_', ')3UA5V~C')))) NOT NULL)) GROUP BY NULL HAVING TOTAL(json_array_length(rt0.c2, vt0.c1));SELECT DISTINCT (((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1)))) ISNULL) FROM vt0;SELECT CASE CASE rt0.c1  WHEN rt1.c2 THEN 0.018060458452227923 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '?H' ELSE rt0.c2 END  WHEN (- (rt0.c1)) THEN (rt0.c0 IN ()) END FROM rt0, rt1;SELECT DISTINCT (((((rt1.c2))>((vt0.c1))))>=(NULL)) FROM vt0 GROUP BY ((vt0.c0) NOT BETWEEN ((((rt1.c1))<>((0.31838728631599966)))) AND (CAST(rt1.c1 AS INTEGER))) HAVING CAST(rt0.c0 COLLATE BINARY AS NUMERIC) LIMIT -396317749 OFFSET 2071751050;SELECT vt0.c1 FROM rt0;SELECT ((rt0.c1)/(rt0.c1)) COLLATE RTRIM, TOTAL(rt1.c1) OVER (), (((rt0.c1)<(x'')) IN ()) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt1.c0) NOTNULL)) FROM rt1, rt0, vt0 GROUP BY ((0.13998635510212476) BETWEEN (((((((((rt1.c2)AND(x'')))AND(rt0.c0)))OR(rt0.c1)))OR(rt1.c2))) AND ((rt1.c2 IN ()))) LIMIT -674913460; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((0.9626958633964828)OR(NULL)))OR(NULL)))AND(NULL)))AND('u'))) BETWEEN (0.12264370736757113 COLLATE RTRIM) AND (CAST(NULL AS TEXT)))); -- 0ms;
SELECT ((((COUNT(*))AND(((rt0.c0)IS NOT(NULL)))))OR((rt0.c1 IN ()))), (- (CAST(rt1.c0 AS BLOB))), COUNT((((vt0.c1)) BETWEEN ((0.4760148057073983)) AND ((rt0.c1)))) OVER () FROM rt0, vt0;SELECT ALL (+ (NULL)), ((((rt1.c2)+(rt0.c2))) NOT BETWEEN (((vt0.c0)%(rt1.c1))) AND (CAST(rt1.c0 AS TEXT))), UPPER(DISTINCT rt1.c1), CUME_DIST() OVER (), ((UNLIKELY(DISTINCT rt0.c0))||(CAST(rt1.c1 AS NUMERIC))) FROM vt0 WHERE (((CASE 'z'  WHEN '1251932021' THEN '1874624029' END) IS FALSE));SELECT DISTINCT AVG(((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c0))) FROM vt0, rt1, rt0; -- 0ms;
SELECT (((((((((((vt0.c1, rt1.c2, rt0.c1)) BETWEEN ((rt1.c1, rt1.c2, vt0.c1)) AND ((rt1.c2, rt1.c2, '0.737407531037262'))))OR(((vt0.c1)GLOB(rt1.c2)))))AND((((rt1.c1))<((vt0.c0))))))OR(((rt0.c2)>>(vt0.c1)))))OR(rt1.c2 COLLATE RTRIM)) FROM rt0, vt0 WHERE ((NOT (((((1939216609)OR(-2086959856)))OR('>'))))) ORDER BY (('1466331537') NOT BETWEEN ((- (rt1.c2))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS LAST;SELECT ALL MIN(((rt1.c1) ISNULL)), ((((rt0.c2) NOT NULL))<(1.48792595E9)), x'' FROM rt0, vt0;SELECT HEX(DISTINCT 0.07676912991286511 COLLATE NOCASE), CASE rt0.c1  WHEN (((rt1.c2, 0.6082116803060867, rt0.c2, '0.13998635510212476', rt1.c2)) NOT BETWEEN ((rt1.c1, rt0.c2, rt1.c0, rt1.c0, rt1.c0)) AND ((vt0.c1, vt0.c0, rt1.c0, vt0.c1, vt0.c1))) THEN rt0.c0 END, ((~ (rt1.c0)) IN ()), CAST(CAST(rt0.c0 AS TEXT) AS REAL), PERCENT_RANK() OVER () FROM rt1;SELECT ALL CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2))  WHEN (rt1.c1 IN ()) THEN rt1.c2 ELSE rt1.c0 END FROM vt0 WHERE (((((-9.49888944E8)GLOB('')))||((('') BETWEEN (NULL) AND (NULL))))) LIMIT -928728815 OFFSET -64523428;SELECT DISTINCT ROUND((((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((x'cd13')*(rt1.c0))) FROM rt0;SELECT ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM COLLATE RTRIM, ((CAST(rt0.c0 AS NUMERIC)) NOTNULL), (- (COUNT(rt0.c1))) FROM rt1, vt0 WHERE ('0.2490045175626343');SELECT DISTINCT rt0.c1, ((rt1.c0 COLLATE RTRIM)&(NULL COLLATE RTRIM)), CASE WHEN CASE vt0.c0  WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN '#l[''X' WHEN rt1.c2 THEN rt1.c0 END THEN 0Xffffffff962db7c6 END FROM rt1;SELECT ALL ((((rt1.c1, x'', rt0.c1, rt0.c1, rt1.c1)) BETWEEN ((rt1.c0, rt0.c1, rt0.c0, rt1.c2, vt0.c1)) AND ((x'', vt0.c1, 0.7663710155619687, rt1.c1, rt0.c2))) IN ()) FROM rt1; -- 0ms;
SELECT CASE ((rt1.c2)OR(rt0.c2))  WHEN (vt0.c1 IN (rt1.c2)) THEN NULL ELSE NULL END FROM vt0 WHERE ((((('447180033') IS TRUE)) BETWEEN ((+ (0.9821965489238247))) AND (((0.4240636695654434) BETWEEN ('1294658482') AND (x'd5d0500f')))));SELECT json_array_length((NOT (-1.19308297E9)), rt1.c0), (((+ (rt0.c2)))LIKE(rt1.c0 COLLATE RTRIM)), (- (IFNULL(DISTINCT rt0.c2, rt1.c2))), vt0.c1, TOTAL((rt1.c2 IN (x''))) OVER () FROM rt1, rt0, vt0; -- 0ms;
SELECT ALL CAST(COALESCE(rt0.c1, rt0.c0) AS BLOB) FROM vt0, rt0 WHERE (((((NULL) IS FALSE)) NOT NULL)); -- 0ms;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON 0X275bad8a WHERE ((((('-2042719965') NOT NULL)) IS TRUE)); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL vt0.c1 FROM vt0 ORDER BY ((rt0.c0 COLLATE BINARY) ISNULL) ASC;SELECT COUNT(*) OVER (), (((rt1.c0 IN ()))&(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)), TOTAL((rt1.c2 IN (rt0.c0, rt1.c1))), vt0.c1, 1.144197725E9 FROM vt0, rt1 WHERE (CASE WHEN (0.6379019948571946 IN ()) THEN ((NULL)%('0.3569171793604542')) ELSE ((NULL) BETWEEN ('802440539') AND (x'2278')) END);SELECT DISTINCT (~ (TOTAL(rt1.c2))) FROM rt0, vt0 FULL OUTER JOIN rt1 ON ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((0.4692782607756001)))))==((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 END))); -- 0ms;
SELECT DISTINCT (+ ((rt1.c2 IN ()))) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT 0.7400973691617886 COLLATE RTRIM FROM rt1, vt0, rt0 WHERE ((NOT (((NULL)&(0xffffffff821f9f30))))); -- 0ms;
SELECT ((((x'7f816aab')AND(CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c1 THEN '1470322393' WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c0 END)))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((CASE rt1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END)OR(((rt0.c0) IS FALSE))))OR(NULL)) FROM rt0 WHERE (((((('PTnIV邝'))=((0x1fd7c3b4))))%((('gp')IS NOT(NULL)))));SELECT ALL (((rt0.c0 IN ()))IS NOT(((rt1.c0) ISNULL))) FROM rt1, vt0 GROUP BY (((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt1.c2 COLLATE NOCASE))) ORDER BY 0.9389834122270304, CAST((- (vt0.c1)) AS TEXT) ASC  NULLS LAST, ((((((((((vt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c1)))*((- (vt0.c1))))  NULLS FIRST;SELECT ALL SUM(4.18417773E8) FROM rt0; -- 0ms;
SELECT (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((CASE rt0.c1  WHEN rt0.c2 THEN x'' WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c0 END))), (rt0.c1 IN ()) COLLATE BINARY, (rt1.c1 COLLATE NOCASE IN (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)) FROM rt1, rt0 WHERE (x'a7fe');SELECT ALL (((((+ (rt0.c0)))AND(CAST(rt0.c0 AS REAL))))AND(rt0.c1 COLLATE NOCASE)) FROM rt1, rt0, vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN json_patch(rt1.c1, NULL) END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT LAG(((((((((((((rt1.c0)AND(rt1.c1)))AND(vt0.c1)))OR('5' COLLATE BINARY)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))))AND(((rt1.c0)|('<S')))), CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS INTEGER), (((rt1.c1)) NOT BETWEEN ((((vt0.c1)<(vt0.c1)))) AND ((CAST(rt1.c1 AS BLOB))))) OVER () FROM rt1, vt0; -- 0ms;
SELECT ALL NULL FROM rt1 GROUP BY (((vt0.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, vt0.c1 COLLATE BINARY, CAST(rt0.c0 AS INTEGER))) AND ((((rt0.c0) NOTNULL), '964247868', (- (vt0.c1))))), 0.1083442951352852, 0.5411287192790274 COLLATE RTRIM;SELECT DISTINCT CASE WHEN ((rt0.c0) ISNULL) THEN rt0.c2 COLLATE BINARY END, LIKELIHOOD(((rt0.c0)GLOB(rt1.c1)), 0.4198886061917606), (vt0.c0 IN ()) FROM rt0 WHERE (CASE (+ (x''))  WHEN (('0.1083442951352852')<<('3779040949901988130 613:-1864142857721244571-1758:1536T-6341335295726530483 6296774117008929178-7311596725473501074-a>')) THEN CASE 0.44624151929350886  WHEN '0.7663710155619687' THEN '' ELSE -1781661741 END WHEN NULL THEN ((x'') NOTNULL) WHEN CASE WHEN x'' THEN 0.9879025275071355 WHEN '-1245367301' THEN 'Ek<l%leO' WHEN NULL THEN x'' END THEN x'' COLLATE RTRIM WHEN HEX(x'') THEN CASE ''  WHEN '%+8rZ戟[n' THEN '1210771395' END WHEN CASE WHEN 1379434498 THEN '' ELSE '%nPoU\n' END THEN MAX('1606617586', x'', '', 0X5f4b23f7) ELSE ('᝽/FN' IN (x'', 525271160)) END) LIMIT -702242289;SELECT ALL (((vt0.c1, rt1.c1, rt0.c1)) NOT BETWEEN (('', ((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c1)), rt1.c1 COLLATE RTRIM)) AND ((MIN(rt0.c0), ((vt0.c0) NOT BETWEEN (rt1.c2) AND (vt0.c1)), ((((vt0.c0)OR(rt1.c2)))AND(rt0.c1))))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT vt0.c1, CAST(CASE rt0.c2  WHEN rt1.c1 THEN vt0.c1 ELSE rt1.c1 END AS TEXT), CAST(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) AS INTEGER) FROM vt0 WHERE ((((((((((((0.5775302363367957)) NOT BETWEEN ((NULL)) AND ((NULL))))AND((('-685255279')IS NOT(NULL)))))AND(UNLIKELY(699505152))))AND('eE^R')))OR((- (x'9628')))));SELECT ALL ((COUNT(*)) IS FALSE) FROM vt0 WHERE ((((0.15532822872962615)) NOT BETWEEN (('1326488600')) AND ((CAST('-367042128' AS REAL))))); -- 0ms;
SELECT DISTINCT LTRIM('') FROM vt0 WHERE ((((((((('' COLLATE BINARY)AND(('#o' IN ()))))AND(((0.6744986838676068) NOT BETWEEN (x'') AND (0)))))OR((((x''))<=(('-159340636'))))))AND(CASE WHEN '2088147477' THEN x'' WHEN '-1369475668' THEN x'5e9754ff' WHEN x'' THEN '1251932021' END))) LIMIT 276499823 OFFSET -400156216; -- 0ms;
SELECT DISTINCT MIN('') FROM rt1 LIMIT -1170649464; -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c1 AS REAL))OR((rt0.c2 IN ()))))OR(((vt0.c1) NOT NULL))), vt0.c1, LIKELY(CAST(vt0.c1 AS INTEGER)) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((PRINTF(rt1.c2, rt1.c1, rt0.c0))OR((~ (0.5626266905623577)))))AND(((rt1.c1) ISNULL))) FROM vt0, rt0 WHERE ((('%YH+b') NOT NULL));SELECT DISTINCT ((((rt1.c2) NOTNULL))GLOB(GROUP_CONCAT(rt1.c1))), CASE 0.24568940061763778  WHEN (((rt0.c0))<((vt0.c0))) THEN ((rt0.c0)&(rt1.c1)) END, AVG(CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END) FROM rt1 LIMIT 16548794 OFFSET 823555677;SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)%(x'1f24')))AND('')) FROM rt1, rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c0))) ISNULL); -- 0ms;
SELECT ((((rt0.c2)|(vt0.c1))) IS FALSE) FROM vt0 GROUP BY (CASE rt0.c0  WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 ELSE NULL END IN ());SELECT DISTINCT ((((rt0.c0)%(vt0.c0))) IS TRUE), (NOT (QUOTE(rt1.c1))), ((((rt0.c2)AND(rt1.c2)))AND('-385857985')) COLLATE BINARY, CAST(SUM(rt0.c2) AS REAL), '1010605272' FROM rt0, rt1;SELECT ALL (('^-#i')=(((((((((rt0.c2)OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))OR(rt0.c0)))) FROM rt0 WHERE ((((('1514047084')GLOB(x'3bdc')))*((('-895760148')<>(0Xfffffffff41e2d65)))));SELECT DISTINCT ((((((vt0.c1)>=(rt1.c0)))OR(((vt0.c0) ISNULL))))AND(CAST(rt1.c2 AS BLOB))) FROM vt0, rt0, rt1; -- 0ms;
SELECT ((TOTAL(rt0.c1)) BETWEEN (vt0.c1) AND (rt0.c1 COLLATE RTRIM)), (rt1.c1 COLLATE BINARY IN ((+ (vt0.c1)))), ((((rt0.c2)<(0.9209580429114413))) NOT NULL) FROM vt0 GROUP BY vt0.c0;SELECT ALL CAST((((rt1.c0))<((vt0.c0))) AS REAL), ((((rt0.c1) IS TRUE))>(((rt0.c2) NOT BETWEEN (0xffffffffd4c568c5) AND (rt1.c2)))), ((((rt1.c2)OR(rt0.c0)))AND(rt1.c2)) COLLATE RTRIM FROM vt0, rt0, rt1 WHERE (((x'dba5')>=(x'12ddc57df035')) COLLATE RTRIM) INTERSECT SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((vt0.c0)==(vt0.c1)))) AND ((x'' COLLATE NOCASE))), 0x739618e1, ((((+ (rt1.c0))))>=((rt0.c1 COLLATE NOCASE))) FROM rt1 WHERE ('쓮z');SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 END)AND(rt0.c0)))OR((rt1.c2 IN (rt1.c1)))) FROM rt1 WHERE ((0X690e281d COLLATE NOCASE IN ())) ORDER BY ((vt0.c1 COLLATE NOCASE)IS((NOT (rt0.c2)))), (((rt0.c1) NOTNULL) IN ()) ASC;SELECT DISTINCT (((NULL))<((rt0.c2))) COLLATE NOCASE, TOTAL((rt0.c0 IN (rt1.c2))), (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c0 AS BLOB)))) FROM rt1;SELECT DISTINCT (rt1.c0 IN ()) FROM rt1, rt0 WHERE ((- (CAST('1034135761' AS INTEGER)))); -- 0ms;
SELECT ALL CASE rt1.c0  WHEN NULL THEN rt0.c1 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c2 THEN 0.4218506047084052 END COLLATE BINARY FROM rt0, vt0 WHERE ((~ (NULL)));SELECT DISTINCT LOWER(DISTINCT '&Q.kvEy8H') FROM rt1; -- 0ms;
SELECT NULLIF(DISTINCT CASE rt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c0 END, CASE WHEN vt0.c0 THEN rt0.c2 END), rt1.c2, MIN(rt1.c0), (~ (rt0.c1 COLLATE BINARY)), (vt0.c1 IN (MAX(rt0.c1), (- (rt0.c1)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL (((rt1.c2) IS FALSE) IN ()) FROM vt0, rt0, rt1 NOT INDEXED WHERE (CHAR(CASE WHEN 0.49933910551385363 THEN 0.5998738367703823 WHEN 0.8856597710747953 THEN NULL WHEN NULL THEN 0xd5c478 END)) ORDER BY ((((vt0.c1 COLLATE RTRIM)OR(rt0.c2)))OR(((rt0.c2) ISNULL))) DESC  NULLS LAST, ((rt1.c1)&(rt0.c0)) COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c1))) BETWEEN ('y^?!i''F') AND (((((vt0.c0)OR(NULL)))OR(vt0.c1)))), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))<<(((rt0.c2)!=(rt1.c2)))), (((vt0.c1 IN (rt0.c1))) NOT NULL) FROM rt0, vt0 WHERE (((x'20bf') NOT BETWEEN ((NOT ('	}*eY'))) AND ('#T'))) ORDER BY CAST((- (rt0.c1)) AS TEXT) DESC  NULLS LAST, ((('-2067170305' IN ()))>>(CHANGES())) ASC;SELECT ALL vt0.c1, vt0.c0, UNLIKELY(DISTINCT '1200155685') FROM rt0, rt1 WHERE (((((NULL)+('-367042128')))IS NOT(((0Xffffffffaf35c835) NOTNULL))));SELECT ALL CAST((rt0.c1 IN ()) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT CASE CAST(rt1.c0 AS NUMERIC)  WHEN ((NULL)>=(x'351e')) THEN 0Xfffffffff9439e49 END FROM vt0;SELECT DISTINCT (- (((rt0.c2)-('k!')))), ((((rt0.c0)==(rt1.c1)))+(CASE rt0.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c1 END)), NULL FROM vt0, rt1 WHERE (CASE WHEN ('-1116844770' IN (0x3ffc2f23)) THEN CAST(-764446258 AS BLOB) ELSE -1.19308297E9 COLLATE BINARY END);SELECT ALL ((((rt1.c0)-(rt1.c0)))IS NOT(((vt0.c0)/(0.052666915454503416)))) FROM vt0 WHERE (COALESCE(DISTINCT (((('-456759839')AND(0.05671180082118121)))OR(-1.73679355E9)), CAST('?튟ev|}' AS BLOB), CASE NULL  WHEN '-930162421' THEN '-894273204' ELSE 0.3398851923970051 END, ((NULL) NOT BETWEEN ('418417773') AND (0.22109313634377492))));SELECT CAST(((((rt1.c1)OR(rt1.c1)))OR(vt0.c1)) AS NUMERIC) FROM rt1, rt0, vt0 WHERE ((((0.6177225867211992 IN ())) NOT BETWEEN (((NULL)GLOB(x''))) AND (CASE 0.4196498522322428  WHEN '獿DT' THEN '' WHEN x'54e0' THEN '3}芔RVwQ' WHEN x'2704' THEN 0.9626958633964828 END))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR('-222812035')))OR(rt1.c0)))>((rt1.c2 IN ()))) FROM vt0 WHERE (CAST(((817166499) NOT BETWEEN (x'') AND ('f)*oJLd#*')) AS REAL)) GROUP BY (((+ (NULL)))OR(((rt1.c1)<=(rt0.c2))));SELECT DISTINCT CASE WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c1)-(rt1.c2)) ELSE ((((((((rt0.c2)AND(rt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt1.c0)) END FROM vt0, rt1, rt0 WHERE (0.7909547959668305) GROUP BY (+ ((NOT (rt1.c2)))), (('-1077243512')LIKE(CAST(vt0.c0 AS REAL))), ((rt0.c2 COLLATE BINARY)AND(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))) HAVING vt0.c1; -- 4ms;
SELECT DISTINCT COUNT(*) OVER (), ((rt1.c1) IS TRUE), COUNT(rt0.c1) COLLATE RTRIM COLLATE BINARY FROM vt0, rt1, rt0 WHERE (TRIM(((NULL) NOT NULL), '}' COLLATE BINARY)); -- 0ms;
SELECT ALL '3779040949901988130 613:-1864142857721244571-1758:1536t-6341335295726530483 6296774117008929178-7311596725473501074-a>' FROM vt0 WHERE ((x'' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt1.c0)&(rt1.c0))))) FROM vt0 WHERE (((('473067131' IN ('2131442120', 0.5491995917424832))) IS TRUE)) GROUP BY ((((((vt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0)))))==(((((vt0.c1, rt1.c2, '1575596026')) NOT BETWEEN ((rt0.c1, 'p[L9D/', rt0.c0)) AND ((vt0.c0, rt0.c1, -0.0)))))), 'rF', ((rt0.c1) NOT BETWEEN ((((rt1.c2))>((vt0.c1)))) AND (((((rt1.c1)OR(rt1.c0)))AND(rt0.c2)))) HAVING (((((((rt1.c1))!=((rt1.c0))))OR(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(rt1.c1)))AND(rt0.c1)))))AND(((((((((rt0.c1)AND(vt0.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c2)))) ORDER BY ((TYPEOF(rt1.c1)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((((rt1.c1)AND(rt1.c2)))OR(rt0.c1))))  NULLS LAST;SELECT DISTINCT ((1.607589225E9) BETWEEN ((((vt0.c1))>((0.2549753046902281)))) AND (((((rt1.c1)OR(vt0.c1)))AND(rt1.c1)))), 0.9512694208704482 COLLATE RTRIM, ((((x'')OR(((rt1.c0) NOT NULL))))AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))) FROM rt1, rt0 ORDER BY ((rt1.c0)<<(rt0.c2)) COLLATE NOCASE;SELECT ((CAST(rt1.c1 AS NUMERIC))|(MAX(rt0.c1))), CAST(((((vt0.c1)AND(x'')))OR(x'')) AS TEXT), ((((((((((vt0.c0)OR(rt1.c1)))AND(rt1.c2)))OR('')))OR(rt0.c2)))-(TRIM(DISTINCT rt0.c2, rt0.c0))) FROM vt0 LIMIT 1273636328;SELECT ALL (- (rt1.c0 COLLATE BINARY)) FROM rt0, rt1; -- 0ms;
SELECT (((((vt0.c1)!=(rt0.c2)), TOTAL(rt1.c0), MAX(rt1.c0)))>((((((rt1.c1)OR(vt0.c0)))AND(rt1.c0)), CAST(vt0.c1 AS NUMERIC), rt1.c1 COLLATE BINARY))) FROM vt0, rt1, rt0 WHERE ('-450514827'); -- 0ms;
SELECT DISTINCT ((((((rt1.c2)*(rt1.c0)))AND(574252271)))AND(((('-394891889', rt1.c1, rt1.c1)) BETWEEN ((vt0.c1, 961882857, rt0.c1)) AND ((rt1.c0, rt1.c0, rt1.c1))))) FROM vt0;SELECT ALL (((- (rt1.c0))) IS FALSE) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)!=(vt0.c0)), ((vt0.c0)>=(vt0.c1))))<(((vt0.c0 IN (vt0.c0, vt0.c1, x'')), ((vt0.c0) NOTNULL), COALESCE(vt0.c1, vt0.c1))))) OVER ( ORDER BY INSTR(CASE rt1.c2  WHEN x'' THEN rt0.c1 END, rt0.c0 COLLATE NOCASE)  NULLS LAST) FROM vt0 WHERE (CASE WHEN (((0X2872dcaf)) BETWEEN (('-1074956759')) AND ((NULL))) THEN CASE 0.3405161649741043  WHEN 0Xffffffffa4c72e4f THEN NULL WHEN '#''6kL' THEN '''' WHEN -1797191216 THEN '쓮8' ELSE 0.5988944396463161 END WHEN CAST('1924127835' AS NUMERIC) THEN CAST(NULL AS INTEGER) WHEN 1874374680 COLLATE RTRIM THEN ((x'')OR('-545201957')) END);SELECT (((((rt0.c0)OR(vt0.c1)), ((rt0.c1) NOTNULL), COUNT(NULL)))==(((((rt1.c2)) NOT BETWEEN ((2130614081)) AND ((vt0.c1))), ((((((((rt1.c2)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(rt0.c0)), ((rt1.c1) IS FALSE)))), (((NULL)) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((rt0.c1)OR(vt0.c0))))), NULL FROM vt0, rt1 WHERE ((((((NULL)) BETWEEN ((x'947e714a')) AND ((0.38162456828596825)))) NOT BETWEEN (COALESCE(DISTINCT x'', NULL)) AND ((((('[]')AND('-1258600519')))AND(NULL))))) ORDER BY x'b7292c46' ASC  NULLS FIRST, ((rt0.c2 COLLATE BINARY) BETWEEN ((vt0.c1 IN ('%-'))) AND ((rt0.c0 IN ()))) DESC  NULLS FIRST, 0.31704002167189893 COLLATE RTRIM  NULLS LAST;SELECT DISTINCT PRINTF((vt0.c0 IN (rt1.c2, rt0.c1))) FROM rt1, rt0, vt0 GROUP BY CAST(((((((((((((vt0.c1)AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(rt1.c2)))OR(rt0.c1)))OR(rt1.c1)) AS INTEGER), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE, ((((-6.7491346E8) BETWEEN (vt0.c0) AND (rt0.c2))) IS TRUE); -- 0ms;
SELECT DISTINCT TRIM(((((rt1.c1)AND(rt1.c2)))AND(rt0.c0))) FROM rt1, vt0;SELECT CASE NULLIF(x'', vt0.c0)  WHEN (((vt0.c1, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c0, rt1.c2)) AND ((vt0.c1, vt0.c0, rt1.c2))) THEN ((((rt1.c0)AND(0.0308776151422383)))AND(-1570990513)) END, (MAX(rt1.c1) IN ()), ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)))<>((+ (rt0.c0)))) FROM rt1, vt0, rt0 WHERE (TRIM(x'e6b9', 405923258) COLLATE BINARY); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c2))IS(rt1.c1)), CAST(((0.6391192280508627)+(rt1.c0)) AS NUMERIC), CASE WHEN ((rt0.c0)%(rt0.c2)) THEN ((x'a5be') NOT BETWEEN (rt0.c1) AND (rt1.c1)) WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c1))<>((vt0.c0))) WHEN ((((((((vt0.c1)AND(vt0.c1)))AND(rt1.c1)))OR(rt1.c2)))OR(vt0.c1)) THEN (NOT (rt0.c0)) END, NULL, LIKELY(rt0.c0) FROM rt0, rt1 WHERE (CAST((- ('Z8')) AS BLOB));SELECT ALL RANK() OVER () FROM rt1, vt0 LIMIT -478224629 OFFSET 1339089859; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT (rt1.c2 IN ('+}2', rt1.c0)), UPPER(rt1.c2), ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((((vt0.c0)OR(rt0.c0)))OR(vt0.c0))), NTILE(json_insert(((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)), '-1895008320', ((((((((((((vt0.c1)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(0x4a9ef775)))AND(rt0.c0)))) OVER (), ((CAST(rt1.c1 AS BLOB))LIKE(CASE rt1.c2  WHEN 0Xffffffff834d991b THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c2 END)) FROM vt0, rt0;SELECT DISTINCT ((rt1.c0) NOT BETWEEN ((((rt1.c1))>=((rt0.c1)))) AND (rt1.c0 COLLATE BINARY)), rt1.c1, rt1.c2 COLLATE RTRIM FROM rt0, vt0;SELECT DISTINCT (((NULL) NOTNULL) IN ()) FROM vt0, rt0 ORDER BY CASE (NOT (rt1.c1))  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) END  NULLS LAST;SELECT DISTINCT (0Xffffffff99a34043 COLLATE BINARY IN ()), (((CASE 1491819222  WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END))>((((rt0.c0)>=(rt1.c1))))), TOTAL(((rt1.c1)|(rt1.c2))) OVER (), COUNT(*), ((UPPER(rt1.c2))LIKE(((((rt1.c2)AND(rt0.c0)))AND(rt0.c1)))) FROM rt0 WHERE ((((x'' IN ()))%(((0.5988944396463161) NOT BETWEEN (x'') AND (NULL)))));SELECT DISTINCT NTILE((((NULL)) BETWEEN ((CAST(rt1.c0 AS TEXT))) AND (((rt1.c0 IN (rt1.c0)))))) OVER () FROM rt1, vt0, rt0; -- 0ms;
SELECT vt0.c1 FROM rt0;SELECT DISTINCT ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt1.c1))) IN (NULL)), (UNLIKELY('583291822') IN ()), ((LTRIM(rt0.c0, rt0.c1))+((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c2))))) FROM rt1, rt0 WHERE (CAST(((NULL)*('')) AS INTEGER)); -- 0ms;
SELECT DISTINCT 0.12278856395214655 FROM vt0, rt0 WHERE ((json_remove(0.33851758837719137, 'p[L9D/') IN ((~ ('816526411')), (0.05667034065115495 IN ()))));SELECT DISTINCT ((0.8486911438317517) NOT BETWEEN (NULLIF(DISTINCT vt0.c1, rt1.c0)) AND (CASE WHEN rt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) FROM vt0, rt1, rt0 WHERE ((((('䴞*Wo|BIT')IS NOT('-394891889'))) NOT BETWEEN (((0.08835660310850069) BETWEEN ('') AND (NULL))) AND ((('') BETWEEN ('qcfe⁸䗫蘗h') AND (x''))))) GROUP BY NULL COLLATE BINARY; -- 0ms;
SELECT ALL CAST(CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 WHEN '2107661101' THEN vt0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c2 END AS INTEGER), (((rt1.c1)IS(rt0.c2)) IN (highlight(rt1.c1, rt0.c1, rt0.c0, rt0.c0))), (((((vt0.c0) IS TRUE)))<>((rt1.c0 COLLATE RTRIM))) FROM rt0, vt0 WHERE ((((('') BETWEEN (-1.101495019E9) AND (0.795889262968562)))>>((('Q퐑E\r,') IS TRUE))));SELECT DISTINCT SUM((rt1.c2 IN ())) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt0, vt0 WHERE (TYPEOF(TRIM(DISTINCT 'CK꺑l'))); -- 0ms;
SELECT DISTINCT '-159340636', ((NULL) NOTNULL), CASE WHEN GROUP_CONCAT(rt0.c0) THEN ((vt0.c0) BETWEEN (0.036507365423087856) AND (rt1.c0)) END FROM vt0;SELECT DISTINCT CASE WHEN vt0.c0 THEN 0xfffffffff2876b73 END FROM rt0, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT NULLIF(CHANGES(), (rt0.c1 IN ())), (NOT (MIN(rt1.c1))), (((rt1.c2 IN ())) BETWEEN (CASE WHEN rt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END) AND (CASE rt1.c1  WHEN vt0.c1 THEN rt1.c1 END)) FROM vt0 WHERE (CAST((x'' IN ()) AS NUMERIC)) GROUP BY CASE rt0.c1 COLLATE NOCASE  WHEN CASE vt0.c1  WHEN rt1.c1 THEN vt0.c1 END THEN (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) END;SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (2.032295999E9))) IS FALSE) FROM rt1 NOT INDEXED, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1) IS FALSE))<=((rt1.c2 IN ()))) WHERE (((0.6706560012974081)>=((('49')<=(NULL))))); -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)AND(rt1.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(((rt0.c2) ISNULL))))AND(((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c2)))OR(rt1.c0)))OR(rt1.c1)))), NULL, (+ (rt1.c0)), NULL, UPPER(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) FROM vt0 WHERE ('0.4855420449820359' COLLATE RTRIM);SELECT 0.26030754611678075 FROM vt0, rt1, rt0 WHERE (((((NULL)AND(1.273636328E9))) IS TRUE)); -- 0ms;
SELECT DISTINCT (+ (rt0.c1)) COLLATE BINARY FROM rt0, rt1 WHERE ((((x'938f')) BETWEEN (((((NULL))<=(('뇁^8P5+&_q'))))) AND ((CAST('sbqOcItX' AS TEXT))))); -- 0ms;
SELECT ALL (+ ((((rt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c0, vt0.c1)) AND ((rt0.c0, rt0.c1, NULL))))) FROM rt1, vt0, rt0 WHERE (((0.44732689393800185 COLLATE BINARY)<<(((((NULL)OR('0.0')))AND('傷*'))))) LIMIT -767434710 OFFSET 1962836704; -- 0ms;
SELECT DISTINCT (rt1.c1 IN ()) FROM rt1, rt0 WHERE (NULLIF(x'', (('')>=(x'468df106')))) ORDER BY (+ (CAST(rt0.c2 AS REAL))) ASC; -- 0ms;
SELECT ALL COUNT(*) OVER ( GROUPS  CURRENT ROW), ((SQLITE_COMPILEOPTION_GET(vt0.c1)) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt1.c2 COLLATE BINARY)), (((rt1.c0 IN (rt1.c2))) IS TRUE) FROM rt0, vt0, rt1 WHERE (CAST(CAST(NULL AS BLOB) AS NUMERIC)); -- 1ms;
SELECT ALL AVG(CASE WHEN rt1.c2 THEN NULL END) FROM rt0, vt0 WHERE (((((('0.1083442951352852')>=(NULL)), CASE WHEN 0.4300605279758718 THEN x'' ELSE x'' END, json_array_length(NULL)))=((((NULL)OR(NULL)), '''' COLLATE NOCASE, ((NULL)OR(NULL))))));SELECT DISTINCT ((((rt0.c2))<((rt0.c0))) IN ((+ (rt1.c0)), ROUND(rt0.c2, vt0.c0))) FROM rt0, vt0 WHERE ((((('806874669')<>('1014377777')))IS((- (0.01135805504796994)))));SELECT x'7ae0' FROM rt1, vt0, rt0 GROUP BY CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c1 END COLLATE NOCASE; -- 0ms;
SELECT (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND ('LWHl')))), ((NULL)IS(((rt0.c2)!=(rt1.c2)))), LOWER(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c1 END), CAST((~ (vt0.c0)) AS INTEGER), (((rt0.c0))<=((vt0.c1))) COLLATE RTRIM FROM rt0, vt0, rt1 WHERE (LIKELY(x'' COLLATE NOCASE)) GROUP BY LIKE(rt0.c0, HEX(vt0.c0), 'p'); -- 0ms;
SELECT ((vt0.c0) IS FALSE) COLLATE NOCASE FROM vt0 WHERE ((((((NULL)) NOT BETWEEN (('')) AND ((x''))))IS NOT(((0.5190076603869208)!=(0x5d39e064))))); -- 0ms;
SELECT ((rt0.c1)||(((rt1.c2)>=(0x3289f855)))) FROM vt0 LIMIT -1447166898;SELECT ALL CAST(((vt0.c1)+(rt1.c2)) AS REAL) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT (MIN(rt0.c0) IN (rt1.c1 COLLATE BINARY, '')), (~ (((rt1.c1)LIKE(rt1.c2)))), NULLIF(((rt0.c1)OR(rt1.c1)), TIME(rt1.c0, vt0.c0, rt0.c1)) FROM vt0;SELECT ALL (((CAST(rt1.c1 AS TEXT)))>=(((NOT (rt1.c2))))) FROM vt0, rt0, rt1 WHERE ((((x'803fa83b') NOT BETWEEN ('pg') AND (0.30715635991192025)) IN ())); -- 0ms;
SELECT DISTINCT ((SUM(rt1.c1)) BETWEEN (rt0.c0) AND (x'a3b7')) FROM rt1, vt0 WHERE (ABS(CASE WHEN x'f0f5' THEN x'' END));SELECT ALL (NULL IN ()), (((rt1.c2))=((((((rt0.c1)AND(vt0.c0)))OR(rt0.c1))))), ((((0.8741713420588043) BETWEEN (rt1.c2) AND (rt0.c0))) IS FALSE) FROM vt0, rt0, rt1 WHERE (((CASE WHEN 0Xffffffff8aa43248 THEN 'еV!(d7榊C2' ELSE x'' END) NOT BETWEEN ((((0xffffffff857d37e6))!=(('P7IsK*|#')))) AND ((~ (x''))))) ORDER BY (LOWER(DISTINCT rt0.c2) IN (((rt1.c1)<<('-2099187007')))) ASC; -- 1ms;
SELECT ALL (NOT (vt0.c0)) COLLATE BINARY FROM rt1 NOT INDEXED, vt0, rt0 WHERE (((((((x'6000')/(8.85196715E8)))AND((((0.5713471015656982)) NOT BETWEEN ((0.2434631660185833)) AND ((NULL))))))OR((- (0.2772488130443591))))) ORDER BY (((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) IN (((rt1.c0) NOT NULL))), ((((((rt1.c0)OR(1874624029)))OR(rt1.c0)))|((+ (rt1.c0)))); -- 0ms;
SELECT CASE ((((vt0.c1)OR(rt0.c1)))OR(rt0.c1))  WHEN CAST(rt1.c1 AS REAL) THEN ((vt0.c1) NOTNULL) END, ((((((((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END)AND(((rt0.c0)!=(rt0.c0)))))OR(CASE rt1.c1  WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 END)))AND(rt1.c1 COLLATE BINARY)))AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c2))))), rt1.c0 FROM rt1, rt0, vt0 LIMIT -1646203426 OFFSET -664248013; -- 0ms;
SELECT ALL rt1.c1 FROM rt0 WHERE (CAST((~ (x'')) AS TEXT)) LIMIT 2032295999 OFFSET -1355429835;SELECT ((CAST(vt0.c1 AS INTEGER))<=(NULL)) FROM vt0 GROUP BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0))) AS INTEGER), ABS(rt0.c2), ((CAST(rt1.c0 AS TEXT)) BETWEEN (vt0.c1 COLLATE BINARY) AND (((((rt0.c0)AND('1775720801')))OR(rt0.c1))));SELECT CASE WHEN ((((rt1.c2)OR(0.008661147404329217)))AND(vt0.c0)) THEN CAST(rt0.c2 AS REAL) END FROM rt0, rt1;SELECT ALL ((((vt0.c1) NOT NULL)) NOTNULL) FROM vt0, rt0 WHERE (CAST(LIKE(-2.063524015E9, '䴞*Wo|BIT', ')') AS BLOB)) ORDER BY (((NOT (rt0.c0))) BETWEEN (rt1.c2 COLLATE RTRIM) AND (CAST(rt1.c1 AS BLOB))) DESC;SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((0xffffffffd241e02a, '968552687', x''))<>((x'', '1144197725', 0.7592571909050818))) IN ())) GROUP BY ((((rt0.c2)&(rt0.c0))) NOTNULL) HAVING (((rt1.c0)) NOT BETWEEN (((0.7690396966763451 IN ()))) AND ((((vt0.c0)*(rt0.c1))))) ORDER BY (~ (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST, (~ (rt1.c0)) DESC;SELECT DISTINCT (((+ (rt1.c2))) NOT BETWEEN (NULLIF(DISTINCT vt0.c0, rt0.c2)) AND (CAST('M81Qi.)pY' AS INTEGER))), MAX(CASE WHEN rt1.c0 THEN 0.31610577811255247 END), ((MAX('-1646203426'))!=(rt0.c0)) FROM vt0, rt1 WHERE (CHAR(((x'')LIKE('\rW쒏b_'' ?'))));SELECT DISTINCT ((COUNT(rt1.c1))IS NOT(LENGTH(0.416985130432193))) FROM rt1, vt0, rt0; -- 0ms;
SELECT vt0.c1 FROM vt0, rt0, rt1 WHERE ((('')<>(((0.29935755252978824)>(''))))); -- 0ms;
SELECT DISTINCT NULL, (NOT (CASE rt0.c0  WHEN '1251932021' THEN vt0.c0 END)), TRIM(CASE rt1.c2  WHEN rt0.c0 THEN vt0.c1 END, (rt0.c1 IN ())) FROM rt1 NOT INDEXED ORDER BY ((((vt0.c1) BETWEEN (rt1.c1) AND (rt1.c0))) BETWEEN (((((rt1.c2)AND(rt1.c2)))OR(vt0.c0))) AND (((rt1.c0)||(rt0.c1)))) ASC, rt0.c2, ((((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (((((((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))OR(rt1.c1)))AND(vt0.c1)))AND(0.2941251216152727)))OR(vt0.c0))))  NULLS FIRST;SELECT DISTINCT ((rt1.c1) NOT NULL) FROM vt0;SELECT ALL CASE ((vt0.c0)AND(rt1.c0))  WHEN ((((vt0.c1)AND(vt0.c1)))OR('')) THEN (((vt0.c1))<=((0X4ec7e7c9))) WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN MIN(rt0.c2) WHEN ((199557832) NOTNULL) THEN (('v6') NOT NULL) ELSE MIN(vt0.c1) END FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt0 WHERE (((7.5765798E8)GLOB(0.8115855226529791)) COLLATE NOCASE);SELECT COUNT(*) FROM rt1 WHERE (((CASE NULL  WHEN x'' THEN '-647637416' END) IS TRUE)); -- 0ms;
SELECT DISTINCT NULLIF(JULIANDAY(rt0.c1, rt1.c0, rt0.c0), CASE rt1.c0  WHEN rt0.c1 THEN rt1.c1 END) FROM rt0, vt0 WHERE ((((('')<(x''))) NOTNULL)) ORDER BY ((CAST(rt0.c1 AS TEXT))OR(((((0.1688432500053294)AND(rt1.c0)))OR(vt0.c0))))  NULLS LAST;SELECT ALL CASE ((rt0.c0) NOTNULL)  WHEN CASE rt1.c2  WHEN vt0.c1 THEN rt1.c0 WHEN vt0.c0 THEN 0.12498974196779555 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)) END FROM rt1;SELECT ALL (((rt0.c2)) NOT BETWEEN ((((((rt0.c2)AND(x'')))OR(rt1.c0)))) AND ((rt0.c1))), ((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))LIKE((((rt1.c1))<=((rt0.c1))))), (((UPPER(rt0.c2)))>=(((vt0.c1 IN ())))) FROM vt0, rt1 FULL OUTER JOIN rt0 ON CAST(HEX(DISTINCT rt0.c1) AS BLOB) WHERE (CASE WHEN ((((0.8002728271298322)AND(NULL)))OR(x'')) THEN (('I{}8') NOTNULL) END); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1, rt0, vt0 WHERE (((TOTAL_CHANGES())IS(((x'')>>(0.20635127699558176))))); -- 0ms;
SELECT DISTINCT ((UPPER(1.059923077E9))>>(vt0.c1 COLLATE RTRIM)), ((rt1.c0)|(rt1.c1)) COLLATE NOCASE, ((rt0.c0) IS FALSE) FROM vt0, rt0, rt1 WHERE (CAST((('1967618871')*('᜼(z\n?N')) AS TEXT)); -- 0ms;
SELECT ALL ((((rt1.c0)LIKE(rt1.c1)))>(TOTAL_CHANGES())) FROM rt1 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT ((((((((rt0.c2)AND(2.032295999E9)))OR(rt1.c2)))OR((rt0.c0 IN ()))))AND(TRIM(rt0.c0, rt1.c2))) FROM rt1, vt0, rt0 WHERE (CASE x''  WHEN (- ('-328664298')) THEN CAST(NULL AS TEXT) WHEN '-1918246927' THEN ((NULL) NOT BETWEEN (1079362887) AND (x'')) WHEN (('0.4196498522322428') IS FALSE) THEN (((NULL, x'1fab', NULL)) BETWEEN ((1931127521, '1686858118', 0.9937058851459243)) AND (('', 1.868960231E9, NULL))) ELSE (- ('-1013290117')) END); -- 1ms;
SELECT ALL x'c4c2e99a' FROM rt1 WHERE (CAST((NOT (x'55e1')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((NULL)>>(rt1.c0))) NOT BETWEEN (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN '' END) AND (((((rt1.c0)AND(vt0.c1)))AND(rt0.c2)))), CUME_DIST() OVER (), CASE WHEN 1.184637502E9 THEN ((rt1.c0) BETWEEN (rt1.c1) AND (-962918476)) END, CASE WHEN CASE vt0.c1  WHEN rt0.c2 THEN rt1.c1 ELSE vt0.c0 END THEN (rt0.c2 IN ()) ELSE CAST(vt0.c1 AS TEXT) END, ((((rt0.c0)-(rt0.c1))) NOT BETWEEN (TRIM(rt0.c1)) AND (NULL)) FROM rt0, rt1 GROUP BY rt1.c2;SELECT DISTINCT (- (LOWER(rt1.c0))), COALESCE(COUNT(*), (((('')OR(rt1.c1)))OR(rt1.c0))), '1338066465' FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL IFNULL(((vt0.c1)<<(rt1.c0)), (rt0.c1 IN ())) FROM rt0, vt0 WHERE (CASE (- (0.43083642613950734))  WHEN NULL COLLATE BINARY THEN ((0.013432200632011781) NOTNULL) ELSE (~ ('-878554520')) END);SELECT DISTINCT (((((vt0.c1))<=((rt0.c0))))&(((rt0.c2)<<(rt1.c0)))) FROM rt1;SELECT ALL PERCENT_RANK() OVER () FROM vt0, rt1 NOT INDEXED, rt0; -- 0ms;
SELECT rt1.c0, (((rt0.c2 IN ()))OR(rt0.c2)), COUNT((((rt0.c0))<=((rt1.c2)))) FROM vt0 WHERE (((((0.018330971462653833) ISNULL))/(json_array('', NULL)))) ORDER BY ((((((rt0.c2)OR(rt1.c2)))OR(rt1.c0)))IS(((rt1.c2) IS FALSE))), (((+ (vt0.c0)))|((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), (~ (json(rt1.c2)));SELECT ((((rt1.c1)+(vt0.c0))) IS FALSE) FROM rt1 WHERE ((((('') ISNULL))>(((x'') IS FALSE))));SELECT '-1369475668', LIKE(rt0.c2 COLLATE RTRIM, (('_') IS FALSE)), COUNT(((rt1.c0)<=(rt1.c2))) OVER ( ORDER BY ((vt0.c1 COLLATE NOCASE) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND ((- (rt0.c2)))) ASC GROUPS BETWEEN (((NULL, (((rt1.c1, rt0.c0, rt1.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt1.c0, rt0.c0, -1584230952, vt0.c0)) AND ((rt0.c1, rt1.c2, vt0.c1, vt0.c1, NULL))), (+ (rt0.c1))))!=((((rt1.c2)&(x'adabf77c')), ((rt1.c0)IS NOT(rt1.c0)), (vt0.c0 IN ())))) PRECEDING AND CAST(rt0.c0 AS TEXT) PRECEDING) FROM vt0;SELECT DISTINCT (((- (rt1.c2)))&(rt0.c2)) FROM rt0, vt0, rt1 ORDER BY ((COALESCE(rt1.c0, rt1.c1))|(CAST(1184637502 AS NUMERIC))), ((((((((LTRIM(rt0.c2))OR(NULL)))AND(CAST(rt0.c0 AS NUMERIC))))OR(CAST(rt0.c2 AS INTEGER))))AND((~ (rt0.c2)))) DESC, json_extract(((((((((NULL)AND(rt0.c1)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)), -1.326980203E9, (('	7')/(rt0.c1)), json_insert(rt1.c0, rt1.c2, rt1.c2, rt1.c2, vt0.c1))  NULLS FIRST; -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER (), (((+ (vt0.c1)))&(vt0.c1)), ((vt0.c1 COLLATE RTRIM)<=(LTRIM(x'8186', rt0.c0))) FROM vt0 WHERE (CASE WHEN ((0.4481331598140099)GLOB(0.17046862330296486)) THEN ((((NULL)OR(0.036507365423087856)))AND(0.8314341905862738)) WHEN ((0.21350501557315238)IS('0.2549753046902281')) THEN ('Rw*-' IN (x'140e', 0.36112348377865067)) WHEN ((((0.08867886010505244)AND(NULL)))AND(x'4208')) THEN LIKELIHOOD('dk', 0.39689392632430864) ELSE (- (0.6956743146988892)) END);SELECT ALL ((INSTR(rt0.c1, rt1.c0)) IS TRUE) FROM rt1, rt0, vt0 WHERE (((('|\n' IN (-830250981, 0.7896185130234241))) NOT BETWEEN (((0.7229154460124053)<>(x'0045'))) AND (((0.16225313303570976) IS FALSE)))) UNION ALL SELECT DISTINCT rt0.c2 FROM rt1, rt0 WHERE ((((~ (0.8363133191778147))) NOT BETWEEN ('' COLLATE BINARY) AND (NULLIF('쉆䙧.J◨,7hp', x'')))) LIMIT -1925131247; -- 0ms;
SELECT COUNT(vt0.c0) COLLATE BINARY FROM rt0, vt0, rt1 WHERE ((CAST(NULL AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT rt0.c1))AND(HEX(rt0.c1))), rt1.c2, rt1.c2 FROM rt1, vt0, rt0 WHERE ((((NOT (NULL)))OR(CAST(0.04483744574709658 AS NUMERIC)))) LIMIT -1553734253 INTERSECT SELECT DISTINCT ((((((((HEX(vt0.c0))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)||(x'56a7')))))AND(((vt0.c0)IS NOT(rt0.c2)))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt1.c1))))), LAST_VALUE(((((COALESCE(rt0.c0, rt0.c1))AND((- (NULL)))))OR(NULLIF(rt0.c1, vt0.c0)))) OVER (), TOTAL((((rt0.c2))<>((vt0.c1)))) OVER () FROM vt0, rt0 WHERE (((('%YH+b' IN (-1.393959136E9, 0.19953956681028617)))IS(((x'0f6b')IS NOT(0.722470782724622)))));SELECT ALL (((~ (rt0.c0))) NOT BETWEEN (rt1.c2) AND ((('-1268989103') NOTNULL))) FROM rt0, rt1; -- 0ms;
SELECT ((CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END)>=(CAST(vt0.c0 AS BLOB))), (((vt0.c0)) BETWEEN ((((vt0.c1)+(vt0.c0)))) AND ((TOTAL(vt0.c1)))), CASE CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 END THEN ((rt0.c2) ISNULL) ELSE (((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) END FROM rt0, vt0, rt1 WHERE (x'e471'); -- 0ms;
SELECT UPPER(DISTINCT GROUP_CONCAT(rt0.c0)) FROM vt0, rt1, rt0 WHERE (((SQLITE_SOURCE_ID())!=((('1034629407')|(NULL))))) GROUP BY HEX(DISTINCT rt1.c2) HAVING ((((rt1.c2)<(vt0.c0)))GLOB(rt0.c2)); -- 0ms;
SELECT DISTINCT NULL, (rt0.c0 COLLATE BINARY IN ()), '-1331133922' FROM rt0; -- 0ms;
SELECT DISTINCT (- (((0.6960164320652844) IS TRUE))) FROM rt1, vt0 WHERE (((0X4dec3529) NOT NULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt1.c0 THEN 'P2jK5k/GA' ELSE rt1.c2 END) OVER () FROM rt1, rt0, vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOTNULL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL) COLLATE NOCASE, (~ (LIKELIHOOD(rt1.c1, 0.37533113934090934))), ((((NULL) NOTNULL)) NOTNULL) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL ((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE NOCASE FROM rt0, rt1, vt0 WHERE (HEX(DISTINCT (NULL IN ()))); -- 0ms;
SELECT DISTINCT ((LIKELY(NULL)) NOT NULL) FROM vt0, rt0, rt1 WHERE ((((((('')AND(NULL)))OR(0.9389834122270304))) BETWEEN (((((NULL)OR(NULL)))AND(x''))) AND ('-507998983' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((((((rt0.c2))>=((vt0.c0))))AND(((1251932021) NOTNULL))))AND(JULIANDAY(rt0.c0, NULL, rt0.c1))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2))) BETWEEN (TOTAL(x'')) AND (rt1.c1)) FROM vt0, rt0;SELECT ((COALESCE(DISTINCT vt0.c1, rt0.c2))%(CAST(rt1.c0 AS TEXT))) FROM vt0, rt1, rt0 WHERE ((((0x5e88173c IN ('-159340636', x'3b0f')))>=((0.4212428164333837 IN ())))); -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c1)) IS TRUE) FROM rt1, rt0 WHERE (UNICODE(NULL COLLATE BINARY)) GROUP BY ((((rt1.c0)%(vt0.c0)))<>(((vt0.c1)+(rt0.c0)))), 0.6787814158986601, ((CAST(rt0.c1 AS REAL))>>((rt1.c2 IN ()))) HAVING ((0x18f08c6d)%((((rt1.c2, rt0.c2, vt0.c1)) BETWEEN ((rt1.c1, rt0.c2, rt1.c2)) AND (('', rt0.c0, vt0.c0))))) ORDER BY (((((((rt0.c1)OR(rt1.c2)))OR(rt1.c0))))>((vt0.c0 COLLATE RTRIM)))  NULLS FIRST;SELECT DISTINCT (+ (CAST(rt1.c2 AS BLOB))), ((NULL)>=(LIKELY(DISTINCT rt0.c1))), NTH_VALUE(((NULL) IS FALSE), (((((('515768117')==(vt0.c0)))OR(((rt0.c0)/(rt0.c2)))))AND(((rt0.c2)IS NOT(0.7625459057126291))))) OVER ( ORDER BY ((CHAR(vt0.c0, rt0.c1, rt0.c1)) NOTNULL), (NOT (CASE WHEN rt1.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c2 END))) FROM rt0, vt0 WHERE (CASE NULLIF(DISTINCT -1.369475668E9, -184514411)  WHEN (0 IN ()) THEN json_patch(NULL, x'e91e') ELSE (('1545993748')|(0Xffffffff869007de)) END);SELECT DISTINCT ((- (rt1.c0)) IN ()) FROM rt1 ORDER BY ((((rt0.c0)!=(rt0.c2))) NOT NULL) ASC  NULLS LAST;SELECT DISTINCT rt1.c1 FROM rt0 WHERE ((- (CAST(0x28f2e7d AS INTEGER)))) ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))>>((((NULL))<=((rt1.c2)))))  NULLS LAST;SELECT ALL (((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))-(CAST(rt0.c1 AS TEXT))) FROM rt1, vt0, rt0 GROUP BY (+ (vt0.c1)) HAVING CAST((NOT (vt0.c0)) AS NUMERIC); -- 0ms;
SELECT ((((CASE rt1.c2  WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c1 WHEN vt0.c1 THEN '-1821685915' WHEN 'h&' THEN vt0.c1 ELSE rt1.c0 END)AND(rt1.c0)))AND('-1101495019')) FROM rt0, rt1, vt0 WHERE ((((('')GLOB(x'')))IS((((x'')) BETWEEN (('T*\nzxP')) AND ((x'')))))); -- 0ms;
SELECT ALL COUNT(((vt0.c1) IS FALSE)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, vt0; -- 0ms;
SELECT vt0.c0, CAST(((((vt0.c1)OR(rt1.c1)))OR(rt0.c0)) AS BLOB), (+ (((vt0.c0) IS FALSE))), (((NOT (vt0.c1))) NOT BETWEEN (CHANGES()) AND (vt0.c1)), CAST((rt1.c0 IN ()) AS INTEGER) FROM vt0, rt0, rt1 WHERE ((+ ((- (NULL))))) GROUP BY vt0.c1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY (((((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))==(((- (rt0.c1)))))  NULLS FIRST, rt0.c0 DESC  NULLS FIRST), ((('')) NOT BETWEEN ((UPPER(DISTINCT rt0.c2))) AND (((rt0.c2 IN ())))), ((CAST('-1116844770' AS NUMERIC)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((NULL) NOT BETWEEN (x'') AND (rt1.c1)))) FROM rt0, rt1;SELECT (((rt0.c2))<=(((NOT (rt1.c1))))) FROM rt1 WHERE (CAST((('-1369475668')<<(NULL)) AS BLOB));SELECT ALL (((((rt0.c1 IN ()))OR(((0.8050641544920396)!=(x'')))))OR(GROUP_CONCAT(vt0.c1))) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT AVG('-949888944') FROM vt0, rt1; -- 0ms;
SELECT ((((rt0.c1) ISNULL))<<(CAST(NULL AS BLOB))) FROM rt1 WHERE (((((x'') IS TRUE)) ISNULL)) GROUP BY '' COLLATE RTRIM LIMIT 1897041099;SELECT DISTINCT CAST(((rt1.c2)>=(rt1.c0)) AS NUMERIC) FROM rt0, vt0 WHERE (((((((((CASE 0.0772329097383484  WHEN '-538548398' THEN x'' WHEN NULL THEN '' WHEN NULL THEN '' END)AND((x'' IN ()))))OR(LIKELIHOOD(0.24167501968830862, 0.9181273841570556))))AND((('fQ')!=(1292757251)))))OR(CASE 'w(m{D?M'  WHEN x'' THEN '0.3405161649741043' WHEN 0Xffffffffdae4bc9b THEN NULL WHEN 0.33851758837719137 THEN '-2063524015' WHEN '497399156' THEN NULL WHEN x'' THEN 'kJBenowJ4SEk' END)));SELECT ALL MIN(((((vt0.c1)OR(vt0.c1)))OR(rt1.c1))), (('-281142333')<=(((0.8493823933153019) NOT NULL))), FIRST_VALUE((((~ (rt1.c0))) IS TRUE)) OVER () FROM rt1, rt0 WHERE ((((((x'95e9')) BETWEEN (('')) AND ((0.3405161649741043))))!=((((1.7976931348623157E308))==((-1510686122))))));SELECT DISTINCT (((NOT (rt1.c1))) NOTNULL) FROM rt0;SELECT 0xffffffffb5582e49, (- (CASE WHEN rt1.c2 THEN rt1.c2 END)), (((((((((((((NOT (rt0.c1)))AND((((x'')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))))OR(HEX(rt1.c0))))OR(((((NULL)AND(rt0.c2)))AND(rt1.c2)))))OR(CASE vt0.c0  WHEN rt1.c1 THEN rt0.c0 END)))OR(UNICODE(rt0.c1))))AND(COALESCE(DISTINCT rt0.c2, rt1.c1))) FROM vt0;SELECT DISTINCT CASE (((rt0.c1))!=((rt1.c1)))  WHEN (((vt0.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((rt1.c0, rt1.c0, x''))) THEN (((rt1.c0))>=((rt0.c2))) ELSE LIKELIHOOD(rt1.c0, 0.6194273784079551) END FROM vt0, rt0;SELECT ALL CAST(x'7b8c' AS REAL), rtreenode(SUM(vt0.c1), (~ (rt0.c1))), ((((rt1.c1)<=(rt0.c2))) ISNULL) FROM rt1;SELECT DISTINCT (rt1.c2 IN ()), MAX(json_valid(rt0.c1) COLLATE NOCASE), (((((rt1.c1))!=((rt1.c2))))LIKE((((rt1.c0))<>((vt0.c1))))) FROM rt1, vt0 ORDER BY ((TRIM(vt0.c1))AND(x'')) DESC;SELECT DISTINCT (((((('1737986205')AND(rt1.c0)))AND(vt0.c1)))GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (x'5415')))) FROM rt0, rt1;SELECT DISTINCT NULLIF(DISTINCT ((rt1.c2)AND(385139950)), CASE rt0.c0  WHEN 0xffffffffba558f3a THEN rt0.c1 END), ((rt0.c1) BETWEEN (rt0.c2) AND (x'7c882776')) COLLATE BINARY, ((MIN(rt1.c2))<=(NULL)) FROM vt0 WHERE (0.3442410159062177 COLLATE NOCASE) GROUP BY CASE ((rt0.c1) NOTNULL)  WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN rt1.c2 COLLATE NOCASE WHEN CAST(rt0.c2 AS BLOB) THEN (rt1.c1 IN (vt0.c0, vt0.c1)) WHEN ((rt1.c2) NOT BETWEEN (NULL) AND ('306872455')) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) END;SELECT ALL CHAR(rt1.c0) FROM vt0;SELECT DISTINCT (((((((((rt0.c0 IN (rt0.c0, rt0.c1)))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))))OR((~ (vt0.c1)))))OR(CASE WHEN 6.60319626E8 THEN '' WHEN rt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c0 ELSE rt0.c2 END)))OR((((vt0.c0))>=((rt1.c0))))) FROM rt1, vt0, rt0 WHERE (((((0.1083442951352852) BETWEEN ('4i(2f ') AND (NULL))) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND ((('-2070554409')AND(x''))))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) IS FALSE), MIN(rt0.c2), CAST(rt0.c2 COLLATE NOCASE AS INTEGER) FROM rt0, vt0 WHERE ((((NULL)) BETWEEN ((x'a0b2')) AND ((CASE 0.9951138866857447  WHEN 0.6311136719045 THEN '497399156' END)))); -- 0ms;
SELECT ALL AVG(rt0.c1), (((rt0.c2 COLLATE RTRIM))==((vt0.c1))), RANK() OVER () FROM vt0, rt0, rt1 WHERE (((((0.63501703402051) NOT NULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT -1326980203, ((rt0.c0) BETWEEN (((vt0.c0) NOT NULL)) AND (((rt1.c0) BETWEEN ('x7F8v/H') AND (rt1.c1)))), (rt0.c2 IN ()) FROM rt0, rt1;SELECT ALL x'' FROM vt0; -- 1ms;
SELECT DISTINCT rt1.c2, RANK() OVER (), ((((rt1.c0))==((rt0.c0))) IN ()) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL (((vt0.c1 IN ())) NOT BETWEEN (((NULL)LIKE(NULL))) AND ((- (rt0.c1)))), rt0.c2, AVG(((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))) OVER () FROM vt0, rt1, rt0 LIMIT 2089537307; -- 0ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((CASE rt1.c1  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END)) AND ((((rt1.c1) IS TRUE)))) FROM rt0 WHERE ((((0Xffffffffb50fd625 IN ())) ISNULL)) LIMIT 885196715;SELECT vt0.c0, (((CAST(rt1.c1 AS NUMERIC)))<((((rt1.c0)AND(rt0.c1))))), ((HEX(rt0.c2)) NOT NULL) FROM rt0, vt0, rt1 WHERE ((((('_' COLLATE BINARY)AND(((788524293)<<('do#-ޫ2㸀')))))AND(((('-288686465', NULL, NULL))!=(('_r', '-622543717', 't*\nzxp')))))); -- 0ms;
SELECT LEAD(((-1.393959136E9)AND(CASE WHEN rt0.c1 THEN x'' ELSE rt0.c0 END)), (((vt0.c1)) NOT BETWEEN ((LIKELY(rt0.c1))) AND ((((vt0.c1) NOT BETWEEN (0.9497085735480437) AND (rt0.c0))))), ((((CAST(vt0.c1 AS NUMERIC))OR('~{1|U|MT')))AND((rt1.c0 IN ())))) OVER () FROM rt1, vt0, rt0 WHERE ((- ((('YyU-(LSp') NOT BETWEEN (0.36125485603936835) AND (x'980b'))))); -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((LIKE(vt0.c1, rt0.c0, ','))) AND (((((rt0.c1)) BETWEEN ((-1.355429835E9)) AND (('-1116844770')))))) FROM rt0, vt0, rt1; -- 0ms;
SELECT (((- (vt0.c0))) BETWEEN ((rt1.c2 IN ())) AND (rt0.c1 COLLATE RTRIM)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(rt1.c0, rt1.c0) OVER () FROM rt1, rt0 WHERE ((((NULL) NOT BETWEEN (67599770) AND (x'e352')) IN ())); -- 0ms;
SELECT CASE WHEN ((0X1d273167) NOT BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((rt0.c2)*(rt0.c2)) END FROM rt0, rt1, vt0 WHERE ((CASE 0.8357139544316962  WHEN 0.4216415350152002 THEN -1.73679355E9 WHEN x'' THEN NULL WHEN NULL THEN x'' END IN ())) ORDER BY ((((rt1.c1) BETWEEN (rt1.c1) AND (vt0.c1))) ISNULL); -- 0ms;
SELECT ALL ((((rt1.c1)IS(rt0.c0))) NOT NULL) FROM vt0;SELECT SUM((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) OVER ( PARTITION BY CAST(rt0.c2 AS NUMERIC), ((('-882887006' IN (rt1.c0)))&(rt0.c0))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(*) THEN (+ (vt0.c0)) ELSE AVG(rt0.c0) END FROM vt0, rt1;SELECT rt0.c2 FROM rt1, vt0 INNER JOIN rt0 ON (vt0.c0 COLLATE RTRIM IN ()); -- 0ms;
SELECT ALL rt0.c0 FROM vt0, rt0 WHERE (((((x'')IS NOT('0.31704002167189893'))) ISNULL)); -- 0ms;
SELECT DISTINCT CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 THEN DATE(rt0.c0, rt1.c2, vt0.c1) WHEN CASE WHEN rt0.c0 THEN vt0.c1 END THEN CASE rt0.c2  WHEN vt0.c0 THEN rt1.c2 END WHEN ((((((((vt0.c0)OR(rt0.c2)))AND(x'')))AND(rt0.c1)))AND(rt1.c2)) THEN vt0.c0 END FROM rt1, vt0, rt0 GROUP BY MAX(((vt0.c0)!=(rt1.c0)), (((rt1.c2, vt0.c1, vt0.c1))<=((rt1.c1, rt1.c1, rt1.c0)))) HAVING ABS(AVG(0.5592320675737084)); -- 0ms;
SELECT DISTINCT AVG(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c1)))OR(rt1.c0)))AND(rt1.c1))) FROM rt1, vt0;SELECT ALL (((- (rt1.c1)))OR(((vt0.c0)<(rt1.c1)))) FROM vt0;SELECT DISTINCT (((((((((((((((rt0.c0)OR(rt1.c0)))AND(0.784638139209132)))AND(rt1.c0)))OR(rt1.c2)))OR('')))OR(vt0.c1))))==((vt0.c1 COLLATE BINARY))) FROM rt0 WHERE ((- (CAST(NULL AS INTEGER))));SELECT DISTINCT ((((((((LIKE(vt0.c1, x'afe0'))AND(rt1.c2)))OR(CAST(rt0.c1 AS TEXT))))OR((rt1.c0 IN ()))))AND(((rt1.c1)==(rt1.c1)))) FROM rt0, rt1 WHERE (((((x'')) BETWEEN ((0.2830479493591036)) AND (('旡e'))) IN (((0.11136346871707781) NOT BETWEEN (NULL) AND (x'')))));SELECT DISTINCT CAST((((rt0.c0, vt0.c1, rt0.c2))>=((vt0.c0, rt0.c0, rt1.c2))) AS NUMERIC) FROM rt1 WHERE ((- ('-2091739676' COLLATE RTRIM))) LIMIT 394824033 OFFSET -738828153;SELECT ALL CAST(rt0.c2 COLLATE NOCASE AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1))==((rt1.c1))) IN ()) FROM rt0, rt1, vt0; -- 0ms;
SELECT TRIM(DISTINCT COUNT(rt0.c2), (vt0.c1 IN (rt0.c2, rt0.c1))) FROM rt1 GROUP BY ((((rt1.c0)>>(rt1.c2)))&(CAST(x'8ed4' AS BLOB))), ((((rt1.c1)) NOT BETWEEN (('{擠O?')) AND ((rt0.c2))) IN ()), ((rt0.c0) ISNULL) COLLATE BINARY HAVING ((((0.7745841017358417))<((rt0.c0))) IN ());SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER)) IS TRUE), ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((rt0.c2) IS TRUE))))AND(COALESCE(DISTINCT rt1.c1, rt1.c0))), CAST((('D') ISNULL) AS TEXT) FROM rt1, vt0, rt0 WHERE (((CAST(NULL AS NUMERIC))=((((0Xffffffffdbf0c36b)) BETWEEN (('-1918246927')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (vt0.c0) AND (rt1.c0)))<=((~ (rt0.c2)))) FROM rt0, vt0;SELECT ALL ((((rt0.c1) NOT BETWEEN (0.2549753046902281) AND (rt1.c2)))+('Fkx+Y6XQ' COLLATE NOCASE)) FROM rt0;SELECT COUNT(*), ((vt0.c0 COLLATE RTRIM)==('2061467328')), CASE WHEN NULL COLLATE RTRIM THEN CAST(vt0.c1 AS NUMERIC) ELSE ((((rt1.c2)OR(vt0.c1)))AND(vt0.c0)) END FROM rt1, vt0; -- 0ms;
SELECT ALL ((CAST(rt1.c1 AS REAL)) IS TRUE) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT CAST((((NULL)) NOT BETWEEN ((NULL)) AND (('635099767'))) AS REAL) FROM rt0, vt0 WHERE (((CAST(-2.88686465E8 AS BLOB))<=(((('Q/v<f}dU', NULL, NULL)) NOT BETWEEN (('<M', NULL, 0.4240636695654434)) AND (('-jr?5J硢)', '-1812030029', NULL)))))); -- 0ms;
SELECT DISTINCT '?l~涏' FROM vt0, rt0, rt1 WHERE (((('757736467')OR(NULL)) IN (((x'')&(0.8568966671910724))))); -- 0ms;
SELECT DISTINCT ((((((((CASE rt0.c1  WHEN NULL THEN rt1.c0 ELSE rt1.c1 END)OR(((rt1.c2)AND(rt0.c1)))))OR(((rt1.c1)<=(rt0.c1)))))OR((((vt0.c1, rt1.c2, rt1.c1))==((rt1.c0, rt1.c0, rt1.c1))))))OR(LIKELIHOOD(rt0.c0, 0.4161759358281458))) FROM vt0, rt0;SELECT DISTINCT CASE (- (vt0.c1))  WHEN 'yu''Zbh' THEN ((((rt0.c0)AND('4L')))AND(vt0.c1)) END FROM vt0, rt1 WHERE ((((((0Xffffffffd7c5a34c, x'', '>\0', '460933224', -1438724727)) NOT BETWEEN ((0.898545691853584, x'', 0.7385324836153255, -723114344, 0.3148965763162763)) AND ((0.7663710155619687, '~C', 1.173362685E9, '1939216609', '')))) IS FALSE));SELECT ALL COALESCE(((((((((NULL)OR(vt0.c1)))AND(rt0.c2)))AND(rt1.c0)))AND(vt0.c0)), CAST(rt1.c0 AS BLOB), ((rt0.c1)*(rt1.c0)), ((rt1.c1)/(rt0.c0))), (((((vt0.c1 IN ()))OR(((rt0.c0) BETWEEN (vt0.c0) AND (rt1.c0)))))AND((rt0.c1 IN (rt0.c2)))), CAST(rt1.c0 COLLATE NOCASE AS BLOB) FROM rt1 WHERE (((((0.6362086559286467)AND(0.8545835510669126)))AND('')) COLLATE RTRIM);SELECT DISTINCT LAST_VALUE(UPPER(CAST(rt0.c0 AS REAL))) OVER () FROM rt0, vt0 WHERE (((((CASE x'db81'  WHEN NULL THEN 0.7822210087922683 END)AND((+ (NULL)))))OR(((NULL)+('0.7430186428904646'))))) ORDER BY (((((((rt0.c0, rt1.c0, NULL))<((rt0.c1, rt0.c1, rt0.c1))))OR((+ (rt0.c1)))))OR(SUBSTR(x'', x''))) DESC;SELECT DISTINCT ((((rt0.c0)>(rt0.c1)))&(((rt0.c0) IS FALSE))) FROM vt0, rt1, rt0 WHERE (((((6.60319626E8)OR(0.6067327608228431)))LIKE(((x'6ee1')IS NOT(NULL))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOTNULL)) NOTNULL) FROM vt0, rt1 WHERE ((((~ ('-927878192')))<>((- (x'')))));SELECT ((NULL) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1)))) AND (((rt1.c0)<(vt0.c0)))) FROM rt0;SELECT ALL ((rt0.c0 COLLATE RTRIM)OR(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c2)))) FROM vt0, rt0 GROUP BY CAST('' COLLATE NOCASE AS REAL), vt0.c0, ((rt0.c2 COLLATE RTRIM) IS FALSE) HAVING ROUND(((rt0.c1)>>(NULL)), CAST(rt0.c2 AS REAL)) ORDER BY ((0.9780821900930474 COLLATE RTRIM) NOTNULL);SELECT ALL CAST(rt1.c1 COLLATE BINARY AS BLOB), ((CAST(vt0.c1 AS INTEGER))>('%4瓚1.t)' COLLATE RTRIM)), ((vt0.c0) NOTNULL), MAX(0.3342696623228989), (((rt1.c0)) BETWEEN ((CASE WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c2 THEN '' WHEN rt0.c1 THEN vt0.c1 END)) AND ((((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) FROM rt0, rt1 WHERE (((((((x'')>('UpI⏷E1')))AND(((NULL)+(0.7027681908326224)))))AND('#騕_b>~zt憰' COLLATE RTRIM)));SELECT ALL (((((vt0.c1)LIKE(vt0.c1))))<((CAST(rt1.c0 AS BLOB)))) FROM vt0, rt1, rt0 WHERE (CASE WHEN ('#''6kL' IN ()) THEN 0.8088630450932763 WHEN (0.2438534783954892 IN (0Xffffffffb731771d, x'')) THEN (x'' IN ()) WHEN (('0.29935755252978824')IS(-1208858564)) THEN ((x'4d54')%('W1x')) ELSE CAST(x'' AS TEXT) END); -- 0ms;
SELECT DISTINCT LAST_VALUE(rt1.c0) OVER () FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL 0.3928844350138201 FROM rt1, rt0, vt0; -- 0ms;
SELECT ALL (- (NULL)), ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1)))-(((rt1.c2) ISNULL))), (NOT ((((rt1.c2, rt0.c2, vt0.c0, rt1.c1, '')) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c2, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c0, vt0.c1, NULL))))) FROM rt0, vt0, rt1 GROUP BY (((~ (vt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) IS FALSE))); -- 0ms;
SELECT 0.8984245625945634 FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c0) BETWEEN (rt1.c1) AND (x'')))AND(((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt1.c1)GLOB(rt1.c0)))))OR(json_object(vt0.c0, rt0.c1))))AND(rt0.c1)) FROM rt1, vt0, rt0 WHERE ((~ (x'')) COLLATE BINARY); -- 0ms;
SELECT (~ (NULL)) FROM rt0 WHERE (((x'')LIKE('')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END COLLATE RTRIM FROM rt1;SELECT (0x7bf3dcbd IN ((rt0.c0 IN ()))) FROM rt0, vt0, rt1 WHERE (((((x'2b61bc6d')OR('-1245367301')))OR(0.44380083816751614)) COLLATE BINARY) LIMIT -1740843589; -- 1ms;
SELECT ALL LAG(((NULL)/(((rt1.c2)*(rt0.c2)))), ((((rt0.c0)GLOB(rt0.c2))) IS FALSE), ((0xffffffffa818f941)<((((rt1.c1))>=((-6.7491346E8)))))) OVER () FROM rt0, vt0, rt1 WHERE (((((NULL))<((-3.96317749E8))) IN ((((('-1911205724')OR('-1878743259')))OR('260546254')), json_remove(x'', NULL, 0.13799221314284538, '-647704514', '0.1083442951352852', x'e20f8d99'))));SELECT CASE WHEN '-1194083034' THEN CASE WHEN 0X5e88173c THEN rt1.c1 ELSE rt1.c2 END WHEN ((rt1.c2) NOT NULL) THEN x'' COLLATE NOCASE WHEN rt1.c1 COLLATE BINARY THEN CASE rt1.c2  WHEN x'' THEN rt0.c2 END END FROM rt1, rt0 WHERE (((((NULL)<=('-674913460'))) NOT BETWEEN (CAST('634084974' AS NUMERIC)) AND (UPPER(-1603296027)))); -- 0ms;
SELECT GROUP_CONCAT(LIKELY(rt0.c0)) COLLATE NOCASE, ((CASE WHEN rt1.c0 THEN NULL END)<=(((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))), (((((vt0.c0, rt1.c1, rt0.c1))==((rt0.c1, '-159340636', vt0.c1))))%(((rt0.c1) NOT BETWEEN (rt1.c2) AND (vt0.c0)))) FROM rt1;SELECT DISTINCT rt0.c0 FROM vt0, rt0; -- 0ms;
SELECT (((('1872065522') BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE WHEN rt1.c0 THEN rt0.c1 ELSE '-1054697994' END)), (((((((rt0.c1, x'', vt0.c1))<=((rt0.c0, rt1.c1, vt0.c0))))AND(((rt1.c2)||(vt0.c0)))))AND(CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt1.c1 END)), AVG(AVG(rt0.c0)) FROM vt0, rt1 WHERE ((+ (CASE WHEN NULL THEN 'A2' WHEN '(OwSu&A' THEN 0x469c223e WHEN NULL THEN '' WHEN NULL THEN x'' WHEN '/j\rmIuU' THEN NULL ELSE 0.5526260956032423 END))) LIMIT 1996945179;SELECT DISTINCT vt0.c0 FROM rt1, rt0, vt0 WHERE ((((((('') NOTNULL))AND(((NULL)>=(',Y')))))AND(json(0.3310763784661158)))); -- 0ms;
SELECT DISTINCT (+ ((~ (rt1.c1)))), NULL, ((vt0.c0)<>(vt0.c0)) COLLATE NOCASE FROM rt0, rt1 WHERE (CAST(NULL AS REAL) COLLATE NOCASE);SELECT ((rt0.c1 COLLATE NOCASE)+(((vt0.c0) NOT NULL))) FROM rt1, rt0, vt0 WHERE (((((('ﾦ[')) BETWEEN ((x'')) AND ((NULL))))IS(((((0.6864977956458612)OR('0.6744986838676068')))AND(x''))))) ORDER BY (((((rt1.c2)) BETWEEN ((vt0.c1)) AND ((x''))))%((rt0.c2 IN ()))) ASC LIMIT 2026374456; -- 0ms;
SELECT DISTINCT LIKELIHOOD(vt0.c0, 0.2076661337293425) COLLATE BINARY FROM vt0, rt0 WHERE (CASE ('-1116844770' IN ())  WHEN (~ (NULL)) THEN CASE WHEN '1144197725' THEN 0.2537361936744543 ELSE 0Xffffffffdc169bf6 END WHEN ((NULL)>=(NULL)) THEN CAST('*now4 j' AS INTEGER) WHEN ((NULL) NOT NULL) THEN CAST(x'9632' AS NUMERIC) END) LIMIT -622543717 OFFSET -949888944; -- 0ms;
SELECT DISTINCT (((((vt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT NULL), RTRIM((vt0.c0 IN (vt0.c0))), CAST(vt0.c0 AS BLOB) FROM rt0, rt1, vt0 WHERE ((((0.6176474331539874, 0.6283083167894128, NULL, NULL, 'P')) NOT BETWEEN (((NOT ('0.9209580429114413')), ((NULL)GLOB(x'')), '-143895823', ((('J픽mL䷰_+<[')) NOT BETWEEN ((x'')) AND ((x''))), '-394891889')) AND (((((-1294834285, 0X3dab311f, '957490483'))=(('', NULL, NULL))), (((NULL, NULL, 'G?\6<V,俛'))>=((0.6268222729432177, 205149750, '5vs<WA'))), (- (0.9404081302489257)), CASE 0.16808179715445604  WHEN x'ee46' THEN NULL END, SQLITE_VERSION())))) ORDER BY CASE CAST(rt1.c1 AS REAL)  WHEN rt0.c0 COLLATE BINARY THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END END DESC  NULLS LAST; -- 0ms;
SELECT (((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)) IN (TYPEOF(DISTINCT rt0.c2))) FROM vt0, rt0 WHERE (LIKELIHOOD(((x'') NOT BETWEEN (x'') AND ('1939203265')), 0.38074683750141347)); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL ((rt1.c2) NOTNULL), (((((rt0.c1)<(rt0.c0))))=((rt0.c2 COLLATE BINARY))), (((rt1.c0 COLLATE RTRIM))>=(((((rt0.c2, vt0.c1, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((rt1.c1, rt1.c1, rt1.c1)))))) FROM rt0, rt1, vt0 GROUP BY ((((((((ABS(vt0.c1))AND((vt0.c1 IN (vt0.c1, vt0.c1)))))AND((- (vt0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND((rt1.c0 IN (vt0.c1, NULL)))) HAVING ((((vt0.c1)OR('Q)['))) IS FALSE); -- 1ms;
SELECT DISTINCT (((0.5626266905623577 IN ()))IS NOT(x'a4c9')) FROM rt0 WHERE (((((ROUND(0.31838728631599966, 1.274836849E9))AND(CAST(1.251932021E9 AS REAL))))OR((('w') BETWEEN ('-1388005505') AND (0.7033502572901945))))); -- 0ms;
SELECT ALL LOWER(DISTINCT (((vt0.c1, rt1.c2, rt0.c1))>((rt0.c1, rt1.c1, vt0.c0)))), rt1.c0, ((CAST(vt0.c1 AS NUMERIC))+(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))) FROM rt1, rt0, vt0 WHERE ((~ (((NULL) NOT BETWEEN ('') AND (0.9609243691857634))))); -- 0ms;
SELECT DISTINCT STRFTIME(SQLITE_VERSION(), CASE WHEN rt0.c0 THEN rt0.c2 ELSE x'0ec97474' END, COUNT(rt0.c0)), (((((((((NOT (rt0.c1)))OR(UPPER(DISTINCT rt1.c2))))OR((rt0.c1 IN (vt0.c0, rt1.c1)))))OR(rt0.c1)))AND(((rt0.c2) NOT NULL))), ((((((((rt0.c2 COLLATE NOCASE)OR(rt1.c0 COLLATE NOCASE)))OR(vt0.c0)))OR((NOT (rt0.c2)))))OR(vt0.c1 COLLATE BINARY)) FROM vt0 WHERE ((((('*~')-(x'')))%(((0.2006241530987135)>>(NULL))))) GROUP BY (~ (rt0.c0)) HAVING ((('')) BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((rt1.c0)GLOB(rt1.c1))))) LIMIT -1388005505 OFFSET -288686465;SELECT DISTINCT GROUP_CONCAT(rt1.c1), CAST(((x'') IS TRUE) AS TEXT), ((NOT (rt1.c1)) IN ()) FROM rt1 WHERE (((((('1585977148') NOTNULL), ((x'')<=('0.737407531037262')), SQLITE_VERSION()))=((((0X38b95acc) NOTNULL), (((x''))>((0x4a9ef775))), (((((((('^.mvRN+U')OR(NULL)))OR(NULL)))AND(NULL)))OR(0.060446642685219265)))))) GROUP BY (+ (rt0.c0)), rt1.c2, rt0.c0;SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS TEXT) THEN x'8457' ELSE rt1.c0 COLLATE RTRIM END FROM vt0, rt0, rt1 WHERE ((('\#( dᣡb') BETWEEN (NULL) AND (CAST(x'10debbcf' AS NUMERIC)))); -- 0ms;
SELECT ALL (+ (TYPEOF(rt0.c2))) FROM rt0 WHERE ((+ (((0.019547397489690255) IS TRUE)))); -- 0ms;
SELECT ALL NTH_VALUE(rt1.c0, CASE WHEN json_patch(rt0.c0, rt1.c1) THEN ((rt0.c0)AND(rt0.c0)) WHEN (- (rt1.c1)) THEN (((rt0.c0))<>((vt0.c0))) WHEN (+ (vt0.c1)) THEN CAST(rt0.c0 AS TEXT) ELSE ((((rt1.c0)AND(vt0.c0)))AND(vt0.c0)) END) OVER (), UPPER(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN x'4cb64f53' THEN rt0.c0 ELSE '540003815' END), rt1.c1 FROM vt0, rt0, rt1 WHERE (x'902e'); -- 0ms;
SELECT DISTINCT ((((((439208237)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((rt0.c1) NOT BETWEEN ('e)ᚯ4>') AND (rt0.c1)))) FROM rt0, rt1 WHERE ((NOT ((NULL IN ())))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS TEXT) DESC;SELECT ALL (((('')<>(vt0.c1))) IS TRUE) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (((~ (rt1.c1))) IS TRUE), (((((((rt0.c1, rt1.c2, vt0.c1)) NOT BETWEEN ((rt1.c2, vt0.c1, rt1.c2)) AND ((rt1.c0, rt0.c0, rt0.c0))))OR(CAST(rt0.c0 AS INTEGER))))OR(SUM(vt0.c0))), NTH_VALUE(CHAR(rt1.c0 COLLATE RTRIM), (rt1.c0 IN ())) OVER () FROM rt1 WHERE ((((((NULL) NOTNULL)))!=((''))));SELECT COUNT(*) OVER () FROM vt0, rt0, rt1 WHERE ((~ (TRIM('', 0.20727442050316003)))) ORDER BY ((((((((((((rt1.c1)OR(((rt1.c2)<<(rt1.c0)))))OR(((rt1.c2) BETWEEN (rt1.c0) AND (vt0.c1)))))AND(rt0.c2)))OR(((rt1.c1) BETWEEN (vt0.c1) AND (rt0.c0)))))AND((((rt1.c2))>=((rt0.c2))))))AND(CAST(rt0.c1 AS TEXT)))  NULLS LAST, rt0.c1 DESC, (((vt0.c0, 0.7181949263854679, rt1.c0)) NOT BETWEEN ((((rt0.c1)<=(rt1.c1)), rt0.c1, ((rt1.c0) NOT NULL))) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)), 0.4752847165391326, vt0.c0))) ASC; -- 1ms;
SELECT DISTINCT ((LENGTH(vt0.c1))OR('2F긳&T+')) FROM rt1, vt0 WHERE (CASE 0.9626958633964828 COLLATE BINARY  WHEN ('\4+' IN (x'')) THEN ((NULL) BETWEEN (0.2556857970248606) AND ('u0ᚱޫc')) END); -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c1))*(CASE WHEN rt1.c0 THEN rt0.c0 END)), CAST(rt0.c2 COLLATE BINARY AS REAL), rt1.c2 FROM rt1, rt0 WHERE (((((0Xffffffffd1cfd5fe)<>('-927878192'))) NOT NULL)) ORDER BY ((((((((((('*#F')) BETWEEN ((rt0.c1)) AND (('z%騕 '))))AND(ABS(vt0.c0))))AND(((rt1.c2)IS(vt0.c0)))))AND(RTRIM(vt0.c0))))AND((~ (rt0.c2)))), ((((((((((rt1.c0)&(rt1.c0)))AND(rt1.c1 COLLATE NOCASE)))AND((((vt0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))))))AND(80156604)))AND(rt1.c0)) DESC;SELECT DISTINCT (((rt1.c1 IN (rt1.c2))) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND (rt0.c0)) FROM rt1, rt0 WHERE (((((x'03d1346d')>=(0xffffffff927a5bc7))) IS FALSE)); -- 0ms;
SELECT DISTINCT (+ ((rt0.c1 IN ()))) FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((((x'393d')>=(vt0.c0)))) AND ((rt0.c1)));SELECT ((((rt1.c2) IS FALSE)) IS FALSE), ((LIKELIHOOD(rt1.c1, 0.5505542985565913)) NOT NULL), (((((rt0.c0))=((vt0.c0))))%(GROUP_CONCAT(rt0.c2))) FROM vt0 WHERE ((CAST(x'' AS BLOB) IN ()));SELECT ALL (((- (rt0.c2)))<<(((rt1.c2) IS FALSE))) FROM rt1 WHERE (json_object(CAST(0x1260edf AS BLOB), (((0.27087832293792347, 0.6065573097333257, '-1693118914'))!=(('-2052449527', NULL, '')))));SELECT DISTINCT 'f[dyUs', ((((rt0.c0)/(rt1.c2)))>(vt0.c0)), LAG(rt1.c1, CAST(((rt1.c0)-(vt0.c0)) AS NUMERIC), vt0.c1) OVER ( ORDER BY (((vt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND ((CASE WHEN rt0.c1 THEN rt0.c0 END)))  NULLS LAST) FROM vt0, rt1;SELECT DISTINCT CASE (+ (rt1.c2))  WHEN rt1.c0 THEN UPPER(rt1.c2) END FROM rt0 WHERE (((((CASE 'j1<m^8_/'  WHEN 0xffffffffeecafe7f THEN x'b517' WHEN x'' THEN x'' WHEN 0.6631745241502311 THEN 0.7217824059936414 ELSE x'44f8' END)AND(((x'')<<(x'')))))AND(NULL)));SELECT ALL ((CAST(vt0.c0 AS BLOB))IS NOT((((vt0.c0))<=((vt0.c0))))) FROM vt0, rt1 WHERE (NULL); -- 0ms;
SELECT (((('-1368730486')AND(rt0.c0 COLLATE BINARY)))AND(((rt1.c2)>=(rt0.c0)))), '-1469859937', (((rt0.c1 IN (rt0.c0, rt0.c2)))||(rt0.c1 COLLATE NOCASE)), ((rt0.c2 IN ()) IN ()), COUNT(rt1.c1 COLLATE RTRIM), CAST(((((rt1.c1)AND(vt0.c1)))AND(x'9ae4')) AS NUMERIC), '383037659' FROM rt0 WHERE ((((~ (2.107661101E9))) NOT BETWEEN (((x'5664') NOTNULL)) AND ((('') NOT BETWEEN (NULL) AND (0Xffffffffe860abcb)))));SELECT DISTINCT vt0.c1 FROM rt0, rt1 WHERE (((0.7774377977020022) BETWEEN (((((0.15532822872962615)AND(-394891889)))OR(''))) AND (CASE WHEN 0.9484899660773612 THEN 0X26639819 ELSE '528395457' END))) INTERSECT SELECT rt0.c0 FROM vt0 WHERE (((((x'') ISNULL))/(CASE WHEN x'' THEN 'HJ' END)));SELECT DISTINCT COUNT(*) FILTER(WHERE ((((rt0.c2)&('-1101495019'))) NOT BETWEEN ((NULL IN ())) AND (((rt1.c1)IS NOT(0.8445986017069106))))) OVER () FROM rt0, rt1, vt0; -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c1))/(0.12264370736757113 COLLATE NOCASE)) FROM rt0, rt1, vt0 ORDER BY (NOT (rt1.c1 COLLATE BINARY)) DESC, rt0.c0  NULLS FIRST, (((((((((((((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(((rt0.c0) ISNULL))))OR(((rt0.c1)<(rt0.c0)))))AND(CAST(rt1.c1 AS NUMERIC))))OR(((rt1.c0)+(vt0.c0)))))AND((((rt0.c1))=((vt0.c0))))))OR(-1104323047)) ASC; -- 0ms;
SELECT ALL ((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) IN ()) FROM rt1, vt0 ORDER BY ((((vt0.c1) NOT NULL)) NOT NULL)  NULLS LAST; -- 0ms;
SELECT CASE WHEN x'' THEN CASE rt0.c1  WHEN vt0.c1 THEN rt1.c0 END END FROM vt0;SELECT DISTINCT CASE ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((rt0.c0)>=(vt0.c1)) THEN ((((rt0.c0)OR(rt1.c2)))AND(rt0.c2)) WHEN ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN ((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c1)) WHEN json_object(rt1.c0, vt0.c1) THEN (((vt0.c0))==((NULL))) ELSE (+ (rt0.c0)) END FROM rt0 WHERE ((json_quote(x'7ad9') IN (((0.7479538330012825)+(x'')))));SELECT (+ (rt0.c1)) COLLATE RTRIM, ((((CASE rt0.c0  WHEN vt0.c0 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c0 WHEN x'' THEN 0.9625810172977776 ELSE rt0.c0 END)OR(rt1.c0)))OR((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))), ((((rt0.c0))>((rt0.c2))) IN ()) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL (((rt1.c2, CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE 0X1 END, (((rt0.c1))!=((rt1.c2)))))<=((NULL, SUM(rt1.c1), MAX(rt1.c1)))), (((((~ (rt1.c1)))AND(CASE WHEN 1763661478 THEN vt0.c1 END)))AND((((NULL))<=((rt0.c2))))), NULL COLLATE RTRIM FROM rt1, rt0 WHERE (((((CAST(x'0ee2' AS TEXT))OR(x'' COLLATE BINARY)))AND(((x'31c7') NOT BETWEEN (0.015393943298243506) AND ('pHX^SU5'))))) GROUP BY (((((rt1.c2) NOT NULL)))>((rt1.c1 COLLATE BINARY))), '1501566453', LIKELIHOOD(rt1.c0, 0.2608897980469891) COLLATE BINARY LIMIT 340878273 OFFSET 1;SELECT DISTINCT rt0.c1 FROM vt0;SELECT DISTINCT TYPEOF(((rt1.c0)<(rt1.c1))) FROM rt0 WHERE ((((('傷*')GLOB('-2042719965')))/(x'')));SELECT DISTINCT ((((rt0.c2 COLLATE NOCASE)OR(CAST(vt0.c0 AS NUMERIC))))AND(LIKELIHOOD(rt0.c2, 0.5903513683562271))), ((0.3938662946385808) BETWEEN (CAST(rt1.c2 AS BLOB)) AND ((~ (rt0.c1)))), TIME(rt1.c2 COLLATE RTRIM, ((((((((vt0.c1)OR(vt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c1)), ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) FROM rt0 WHERE (((LIKE(0.26146867557913833, 0.7775767733832741, '!'))>=((('u~j') BETWEEN (0.30936644953201675) AND (0.9296270609307208)))));SELECT DISTINCT '2107661101' FROM vt0, rt0 WHERE (((CASE WHEN 'Ge' THEN NULL END)%(((x'44b9')IS(0.2907001730078139))))); -- 0ms;
SELECT ALL vt0.c1, (vt0.c1 IN ()), 0.2105093692921035 FROM vt0, rt1, rt0 WHERE ((((((x'')) BETWEEN (('-1460293647')) AND ((0.7681317363140822)))) NOT BETWEEN (((0x7585846f) BETWEEN (-2.042719965E9) AND (0.3503947003216389))) AND ((- ('-159340636'))))); -- 0ms;
SELECT DISTINCT (NOT (rt1.c0)) COLLATE BINARY, (((((((((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND(CASE WHEN vt0.c1 THEN rt0.c1 END)))AND(rt1.c1 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))OR((x'' IN ()))), COUNT(*) OVER ( PARTITION BY ((rt0.c1 COLLATE BINARY) ISNULL), ((((rt0.c2)AND(((((vt0.c1)AND(vt0.c0)))AND(rt0.c1)))))AND(CASE WHEN rt0.c2 THEN rt1.c2 END)) GROUPS BETWEEN ((((((rt0.c2)OR(-1116844770)))AND(rt1.c0))) IS TRUE) PRECEDING AND  CURRENT ROW) FROM rt1;SELECT DISTINCT ((((((((((((GROUP_CONCAT(rt1.c2))OR((NOT (vt0.c1)))))OR(UNLIKELY(rt0.c2))))OR(SUM(rt0.c2))))OR(ABS(DISTINCT rt1.c2))))OR(json_array(rt0.c1, '0.5411287192790274'))))AND(QUOTE(rt0.c2))) FROM rt0;SELECT DISTINCT (((rt1.c2) NOTNULL) IN ()), (((NULL, rt0.c1, '-367042128')) NOT BETWEEN ((((((((((rt0.c1)OR(0.1411610166421048)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)), ((rt0.c0) BETWEEN (rt0.c0) AND (NULL)), CAST(rt1.c1 AS NUMERIC))) AND ((QUOTE(rt0.c1), (rt0.c2 IN ()), ((rt0.c0)|(rt1.c1))))), SUM((vt0.c0 IN (rt1.c1, vt0.c0))) FROM rt0;SELECT DISTINCT ((CASE WHEN rt1.c1 THEN rt1.c2 ELSE vt0.c0 END) BETWEEN (((vt0.c1)+(rt0.c0))) AND (((rt1.c0)|(vt0.c1)))) FROM rt1 NOT INDEXED WHERE (TRIM(NULL) COLLATE RTRIM);SELECT DISTINCT rt0.c2, x'', ((((((rt0.c2)OR(rt1.c2)))AND(rt0.c1)))<((~ (rt0.c2)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c1))), MAX((((rt1.c0))<=((vt0.c0)))), (((((rt1.c1)) BETWEEN ((vt0.c1)) AND (('1e )z٬?')))) ISNULL) FROM rt0 NOT INDEXED, vt0 WHERE ((((((x'' IN ()))OR(((0.7978029347448033)<<(1e500)))))OR(((0.02027957914157097)>=(x'')))));SELECT DISTINCT TOTAL((rt0.c1 IN ())) FROM rt0, vt0 WHERE (((CASE -1.245367301E9  WHEN 0Xfffffffff3bcdb6f THEN '9223372036854775807' END)<=((- (x'fd6b6acd7aa5'))))); -- 0ms;
SELECT ALL (((((rt0.c2) ISNULL), AVG(rt0.c1), ((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c2))))<=((CAST(rt1.c1 AS BLOB), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c1 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt1.c2 ELSE rt1.c1 END))), (((rt0.c0) IS TRUE) IN ()), vt0.c0 FROM rt1, vt0;SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c1 END)|(TOTAL(rt0.c2))) FROM vt0, rt1, rt0 WHERE (IFNULL(((1.737986205E9)IS NOT(NULL)), 'eE^R')); -- 0ms;
SELECT DISTINCT 1816933314 COLLATE RTRIM, CAST(((vt0.c0)%(vt0.c0)) AS INTEGER), TOTAL(((((vt0.c1)AND(rt0.c1)))OR(vt0.c1))) FILTER(WHERE ((vt0.c1)AND((rt1.c2 IN (rt0.c1, rt0.c0))))) OVER () FROM vt0 GROUP BY (- (CAST(rt1.c1 AS NUMERIC)));SELECT DISTINCT CAST((+ (rt0.c2)) AS BLOB) FROM vt0, rt1 WHERE (CASE (0xffffffffdf80e0db IN ())  WHEN STRFTIME('1210771395', x'', x'', NULL, 0x50c13585) THEN SQLITE_COMPILEOPTION_GET(0.785923399444665) WHEN (('')>>(NULL)) THEN (0.4437627531553118 IN ()) WHEN ((NULL)%(x'831b')) THEN 0.1765386806680499 END);SELECT DISTINCT (((((((((vt0.c0 IN ()))AND(rt0.c0)))OR(rt0.c1 COLLATE BINARY)))AND(((((NULL)AND(rt1.c2)))AND(rt1.c1)))))OR(COALESCE(DISTINCT rt1.c1, rt0.c1))) FROM rt0, rt1, vt0 WHERE ((+ (LIKELIHOOD(DISTINCT -1.221495011E9, 0.8389837060960985)))); -- 0ms;
SELECT MAX(CAST(rt1.c1 AS INTEGER)), (((CASE WHEN vt0.c1 THEN vt0.c1 END))>=((((rt0.c2)=(rt1.c0))))), ((MAX(rt1.c0))<<(((((0.49606560149546397)AND(rt0.c0)))OR(rt0.c1)))) FROM rt1, rt0, vt0 WHERE (((NULL COLLATE BINARY)AND(('-1995830675' IN ('[?} H'))))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c1) IS FALSE))OR(((((rt0.c1)OR('?H')))AND(rt1.c2)))))OR('0.334363992993003' COLLATE RTRIM)))AND(((vt0.c0)OR(rt0.c0)))))AND(rt1.c0 COLLATE RTRIM)), ((((((((CAST(vt0.c0 AS REAL))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c1 ELSE vt0.c1 END)))OR(TRIM(rt0.c0, vt0.c0))))AND(TOTAL(rt1.c2))))AND(((rt1.c2)%(rt0.c2)))), NULL FROM rt1 ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOTNULL) DESC  NULLS LAST;SELECT CAST('1607589225' AS REAL), (((x'', rt0.c0, vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (rt0.c0) AND (rt1.c2)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN '-97258868' THEN 838828624 END, ((((rt0.c1)OR(rt1.c0)))OR(vt0.c0)))) AND ((NULLIF(rt1.c2, ''), rt0.c2 COLLATE RTRIM, ((vt0.c1) IS TRUE)))), CASE WHEN (((vt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) THEN ((rt1.c0) NOT BETWEEN (x'dfab') AND (vt0.c0)) END FROM rt1 LIMIT -249831817 OFFSET 660319626;SELECT DISTINCT (NOT (((rt0.c2) NOTNULL))), COUNT(*), '260546254' FROM rt1, vt0;SELECT DISTINCT rt0.c1 FROM rt0, vt0, rt1 WHERE ((((-394891889)) BETWEEN ((((NULL)<=(NULL)))) AND ((CAST('91522464' AS REAL))))); -- 0ms;
SELECT ALL rt1.c2, (((UNLIKELY(rt1.c1), (rt1.c2 IN (rt1.c2)), MIN(rt1.c0)))<=((vt0.c0 COLLATE NOCASE, NULL, CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 ELSE rt0.c2 END))), NULLIF(((((rt0.c1)AND(rt0.c2)))AND(rt1.c0)), -2036651895 COLLATE BINARY) FROM rt1, vt0, rt0; -- 0ms;
SELECT rt0.c1 FROM vt0 WHERE (CASE WHEN (('&')|(0.11408478344597128)) THEN x'bbb2a71c' END);SELECT DISTINCT ((CAST(vt0.c1 AS REAL)) BETWEEN ((('0.13799221314284538')LIKE(rt0.c2))) AND (rt0.c0 COLLATE BINARY)) FROM vt0, rt1 WHERE ((((((((((((NULL)) BETWEEN ((NULL)) AND ((NULL))))AND(((0.142093658074969)&(x'8757')))))OR(CASE WHEN x'' THEN NULL ELSE '' END)))OR('-1221495011' COLLATE BINARY)))AND(((NULL)LIKE(-479074727)))));SELECT DISTINCT (((((rt0.c2)) NOT BETWEEN ((0.0440713243335088)) AND ((0.2549753046902281)))) NOT NULL), COUNT(*), LIKELY(DISTINCT ((((NULL)OR(rt1.c0)))OR(rt0.c2))), ((((rt1.c2))!=((rt1.c1))) IN ()), NULL FROM vt0, rt0, rt1 WHERE (((((((((0.8890915614684187 COLLATE RTRIM)OR((+ (-894273204)))))OR(((NULL)||('-685255279')))))OR(0.3233711797788742)))OR(COALESCE(DISTINCT '453656601', '-1646203426')))); -- 0ms;
SELECT CASE COUNT(vt0.c1)  WHEN rt1.c2 COLLATE RTRIM THEN ((((rt1.c0)AND(vt0.c0)))OR(rt0.c1)) ELSE ((rt1.c2)+(rt0.c1)) END, NTH_VALUE((+ ((NOT (rt0.c0)))), CASE WHEN ((((rt0.c1)AND(rt1.c0)))AND(rt0.c1)) THEN 0.17036229594716346 ELSE (- (rt0.c2)) END) OVER ( RANGE (((rt0.c1, rt1.c1, rt0.c1, rt1.c2, rt0.c2)) BETWEEN ((((rt1.c1)<<(rt1.c2)), CASE NULL  WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END, (+ (rt1.c0)), (- (rt1.c0)), CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN '' ELSE rt0.c0 END)) AND (((((x'', rt1.c2, rt1.c0)) BETWEEN ((rt1.c1, NULL, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))), CASE WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END, ((rt1.c2) NOT NULL), ((vt0.c1)||(rt0.c1)), ((vt0.c0)LIKE(rt1.c1))))) PRECEDING), ((COUNT(*))/((((vt0.c0))>((vt0.c1))))) FROM rt0, rt1;SELECT (- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c0)))) FROM vt0 WHERE ((((((('eK+~')AND(1.48792595E9)))AND('-1101495019')))+(UNICODE('')))) GROUP BY ((CASE WHEN rt0.c2 THEN vt0.c1 END) BETWEEN ((vt0.c0 IN (rt1.c2, rt0.c0))) AND (rt0.c2)), ((vt0.c1) BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE RTRIM, (((rt1.c1) NOTNULL) IN (rt0.c0 COLLATE BINARY, ((((rt1.c2)OR(rt0.c1)))OR(NULL))));SELECT DISTINCT CASE (rt1.c0 IN (rt1.c1, rt1.c2))  WHEN (((NULL)) NOT BETWEEN ((vt0.c1)) AND (('-1410984000'))) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)) WHEN MAX(rt0.c2) THEN ((rt0.c0)GLOB(rt0.c1)) WHEN SUBSTR(rt1.c2, vt0.c1) THEN COUNT(rt1.c0) WHEN (rt1.c0 IN ()) THEN (+ (rt1.c1)) WHEN rt0.c2 COLLATE NOCASE THEN rt1.c0 COLLATE NOCASE END FROM rt0;SELECT DISTINCT rt0.c0 FROM rt1, rt0, vt0 WHERE (((0.8310145713443451 IN ()) IN ())); -- 0ms;
SELECT ALL CASE WHEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((((((rt1.c1)AND(vt0.c0)))AND(rt1.c0)))OR(vt0.c0)))OR(rt0.c0)) WHEN ((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN MAX(rt0.c2) THEN ((((((((vt0.c0)OR(rt1.c2)))AND(NULL)))AND(rt0.c0)))AND(rt0.c2)) END FROM vt0 WHERE (((NULL COLLATE BINARY) IS FALSE));SELECT ALL 'xnU' FROM rt0 WHERE (0.8398560994010533 COLLATE BINARY COLLATE RTRIM) LIMIT -1729857578; -- 0ms;
SELECT DISTINCT (- (CASE rt0.c0  WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (+ ('816526411')) COLLATE NOCASE FROM vt0, rt1; -- 0ms;
SELECT DISTINCT MAX((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c1)))) FROM vt0;SELECT AVG((rt1.c2 IN (vt0.c0))), CAST(CAST(rt1.c2 AS BLOB) AS INTEGER), COUNT(((rt1.c1)>>(rt0.c0))), rt1.c0 COLLATE RTRIM, (vt0.c1 IN ()) FROM rt1, vt0;SELECT DISTINCT ((((AVG(rt0.c0))OR(((((rt1.c0)OR(rt0.c0)))AND(vt0.c0)))))AND((((rt0.c1, rt0.c2, rt0.c1))<((vt0.c1, rt1.c2, rt1.c0))))) FROM rt0, rt1;SELECT DISTINCT AVG(((vt0.c1) BETWEEN (rt1.c2) AND (rt0.c0))) OVER (), CAST((+ (vt0.c1)) AS NUMERIC), ((((CAST(rt1.c1 AS INTEGER))OR(((vt0.c1) ISNULL))))OR(rt0.c2)) FROM rt1 LIMIT -42141183 OFFSET 285568892;SELECT DISTINCT ((vt0.c1) BETWEEN (rt1.c0) AND (rt0.c2)) COLLATE NOCASE FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c2)AND(rt1.c1)))) FROM rt1 WHERE ((NOT (('1686858118' IN ())))) ORDER BY (NOT ('p')) ASC, rt0.c2  NULLS LAST;SELECT DISTINCT ABS(DISTINCT rt1.c2) FROM vt0, rt1 WHERE (((((0X2e183772) IS FALSE))<((- ('-872335331'))))); -- 0ms;
SELECT ((((rt1.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))) IS FALSE) FROM vt0, rt0;SELECT DISTINCT CASE WHEN (((vt0.c1, rt0.c1, rt0.c1))<>((rt1.c2, rt1.c1, rt1.c1))) THEN (((rt0.c2, NULL, rt0.c2)) BETWEEN ((rt1.c1, rt0.c1, rt1.c1)) AND ((vt0.c1, vt0.c1, rt0.c2))) END, ((GROUP_CONCAT(rt1.c0))>>(0.7930901120917075)), (~ (rt1.c2)) FROM rt1, rt0 WHERE (((CASE WHEN NULL THEN -951509367 ELSE 0.27665754552004096 END) IS TRUE)) GROUP BY ((((rt1.c0, 'gUIw{', rt0.c0))<=((vt0.c0, rt1.c1, rt1.c2))) IN (CAST(rt0.c2 AS NUMERIC))) HAVING ((rt0.c1) BETWEEN (rt1.c1) AND (x'')) COLLATE RTRIM COLLATE RTRIM;SELECT ALL AVG((rt0.c2 IN (rt0.c2))) OVER () FROM rt0, vt0, rt1; -- 0ms;
SELECT ((((LIKELY(rt0.c1))AND(CAST(rt1.c2 AS INTEGER))))OR(((rt1.c0)*(rt1.c2)))) FROM rt0, rt1, vt0 WHERE (((CAST(0.01495004756966245 AS BLOB))AND(((0xffffffff8da9dff1) NOT BETWEEN (0.943640830689373) AND ('2032295999'))))) GROUP BY NULL HAVING (~ (MAX(rt1.c2))); -- 0ms;
SELECT DISTINCT (- (x'2e4f')) FROM vt0 WHERE (x'' COLLATE NOCASE); -- 0ms;
SELECT ((('-1998341626' IN ())) NOT BETWEEN ('497399156') AND ((+ (rt1.c0)))) FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c1)||(vt0.c0))) AND (((rt0.c1) NOTNULL)));SELECT DISTINCT rt1.c2, (CAST(rt1.c1 AS TEXT) IN ()), ((rt0.c2)=(((rt0.c2)IS(rt0.c2)))), (((((((((- (rt1.c2)))AND(((((vt0.c1)OR(vt0.c1)))OR(rt0.c0)))))AND(SQLITE_VERSION())))AND(CASE WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 END)))AND(MIN(rt0.c1))), vt0.c0 FROM rt1, rt0, vt0 WHERE (((((1.144197725E9)<<('-97258868')))*(CASE 0.31704002167189893  WHEN '0.052666915454503416' THEN NULL WHEN '-1194083034' THEN '-288686465' WHEN x'd82da149' THEN 0X794ef2fc END))) GROUP BY (((((((rt0.c0, rt1.c2, rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt1.c2, vt0.c0, vt0.c1)) AND ((vt0.c0, rt0.c0, rt1.c0, rt0.c2, vt0.c0))))OR(((vt0.c1)IS(vt0.c1)))))AND(vt0.c1)), rt1.c1, (rt0.c0 IN ()) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CASE WHEN ((0.1643813384474444)<<(rt1.c1)) THEN ((vt0.c1) NOTNULL) END, ((((vt0.c0)<<(rt0.c1)))<<(((rt0.c2)IS(rt1.c2)))), rt1.c1 FROM rt0, vt0, rt1 ORDER BY ((('-767434710', (- (vt0.c0)), ((((((((((((rt0.c2)OR(rt1.c2)))AND(rt0.c1)))AND(rt1.c0)))AND('1210771395')))OR(rt1.c0)))OR(rt0.c1))))<(((((rt0.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c1))), CAST(rt0.c0 AS INTEGER), (rt1.c0 IN ())))); -- 0ms;
SELECT DISTINCT (((x'')) BETWEEN ((((rt1.c2) NOT NULL))) AND (((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c1)))))), (+ (CAST(vt0.c1 AS INTEGER))), LIKELY(GROUP_CONCAT(vt0.c0)) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))  WHEN CAST(NULL AS REAL) THEN rt1.c0 WHEN rt1.c1 COLLATE NOCASE THEN CAST(rt0.c1 AS INTEGER) WHEN (NOT (vt0.c1)) THEN SQLITE_COMPILEOPTION_GET(vt0.c1) ELSE ((rt1.c0)<>(rt1.c2)) END, '0.12264370736757113', (((rt1.c0))>=((rt1.c1))) COLLATE BINARY, NULL, ((((vt0.c0)*(rt1.c0)))|(SUM(vt0.c1))) FROM rt0 WHERE ((+ (STRFTIME(NULL, NULL, 0.10009851503133782))));SELECT ((UNLIKELY(rt1.c0)) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) AND ((((rt0.c0, rt0.c2, rt1.c0))==((rt1.c0, rt0.c1, rt0.c1))))), x'', TRIM(vt0.c1 COLLATE NOCASE, '1274836849') FROM rt0, vt0 GROUP BY CASE WHEN x'' THEN rt0.c1 END COLLATE RTRIM, IFNULL(DISTINCT rt1.c2, rt1.c0), ((((rt0.c2) BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (CASE rt1.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 ELSE rt1.c2 END) AND (vt0.c1 COLLATE BINARY));SELECT DISTINCT SUM((rt0.c1 IN ())) COLLATE BINARY FROM vt0 WHERE (((((((0.04476774172545417)+('*rW')))AND(LOWER(-1911357771))))OR(NULL))); -- 0ms;
SELECT ALL ((((CAST(vt0.c1 AS REAL))OR(CAST(rt0.c0 AS REAL))))AND(((((rt0.c1)OR(vt0.c0)))OR(vt0.c1)))) FROM rt0 WHERE (CAST(0.310249543511226 AS NUMERIC) COLLATE BINARY) GROUP BY (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ()) HAVING rt0.c1 COLLATE RTRIM LIMIT -1444935771;SELECT ALL NULLIF(DISTINCT ((rt0.c0)<>(rt0.c0)), CAST(vt0.c1 AS TEXT)), rt1.c2, UPPER(COUNT(*)) FROM rt1, rt0, vt0 WHERE (((((((((((((1.173362685E9)AND(0.3569171793604542)))AND(0.0719688760186854)))AND((- (0.8506479830533193)))))AND(UNLIKELY(-1.918246927E9))))AND(x'')))OR(LAST_INSERT_ROWID()))) GROUP BY (('205149750')<=((~ (rt0.c0)))); -- 0ms;
SELECT ALL CAST(vt0.c1 COLLATE BINARY AS TEXT) FROM rt1, rt0;SELECT DISTINCT TOTAL((~ (vt0.c1))) OVER (), ((((('B'))>((vt0.c1))))!=(((rt0.c0)<=(rt0.c2)))), MAX((((vt0.c0))<=((rt0.c1)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS REAL))>=(vt0.c1)) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM vt0, rt0 GROUP BY ((((rt0.c2) IS FALSE))>>((vt0.c1 IN ()))), CAST(rt1.c2 AS INTEGER), ((((((((((vt0.c0)>=(vt0.c0)))OR(INSTR(vt0.c1, vt0.c0))))OR(((rt1.c2)=(rt0.c2)))))AND((+ (rt1.c0)))))OR(((rt0.c2)<=(rt1.c1)))) HAVING load_extension(((rt0.c1)AND(vt0.c1)), CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN x'4b50' ELSE rt0.c1 END);SELECT rt0.c2, (NOT (((vt0.c0) ISNULL))), '-1907778303' FROM vt0 WHERE (((ABS(DISTINCT 0Xffffffffcab2794c)) BETWEEN ((('-2910374') BETWEEN (x'e25d') AND (x''))) AND (CASE WHEN x'' THEN x'' WHEN NULL THEN '-165419137' WHEN NULL THEN x'' END)));SELECT (((~ (rt1.c0)))>=(((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c2)))) FROM rt0 ORDER BY ((((rt1.c2) NOT NULL)) ISNULL) DESC  NULLS LAST;SELECT ALL ((((CASE rt0.c0  WHEN rt1.c0 THEN vt0.c0 END)OR((rt0.c2 IN ()))))OR(((0xffffffff98664ab1)||(x'')))) FROM rt1, rt0 WHERE ((('')*(0.31704002167189893)) COLLATE BINARY);SELECT DISTINCT (~ (((((((((rt1.c2)OR(rt0.c1)))OR(rt1.c0)))OR(rt1.c2)))AND(vt0.c1)))) FROM rt0 WHERE ((((((0Xffffffffc3fc5ec3, NULL, NULL))>(('䷛\Nex', 0.14924469362748527, x'')))) BETWEEN (CAST('<s' AS BLOB)) AND (CAST(-2063524015 AS INTEGER)))) GROUP BY (((((((((rt1.c1)AND(rt1.c0)))AND(NULL)))OR(rt0.c1)))OR(rt1.c2)) IN ()), ((rt0.c1)GLOB(rt0.c2)) COLLATE BINARY, (CASE rt1.c0  WHEN 1736851301 THEN rt0.c2 ELSE rt0.c0 END IN ()) ORDER BY x''  NULLS LAST, CAST(ABS(vt0.c1) AS NUMERIC) DESC;SELECT DISTINCT (((('') BETWEEN (vt0.c1) AND (rt1.c0)))IS(((rt0.c0)+(rt0.c1)))), (((NULL)) NOT BETWEEN (((rt1.c0 IN ()))) AND (((vt0.c0 IN ())))), CASE ('{CME-Ea' IN ())  WHEN rt1.c2 COLLATE NOCASE THEN ((rt0.c2)IS(vt0.c1)) END FROM rt1, vt0;SELECT ALL COALESCE(((rt0.c2)IS(x'')), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) FROM vt0, rt0, rt1 WHERE (((json('i8#wAy^'))>=((((('-927878192')OR(NULL)))AND(968552687))))) GROUP BY (- (((((vt0.c1)AND(rt1.c2)))AND(vt0.c0))));SELECT DISTINCT NULL FROM rt1, vt0, rt0 WHERE (((- (NULL)) IN ())); -- 1ms;
SELECT DISTINCT ((((((rt1.c1)OR(rt0.c1)))OR(vt0.c0)))|(((rt0.c2) NOT BETWEEN (x'2c47') AND (rt0.c2)))), TOTAL(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) OVER (), IFNULL(((rt0.c0) IS FALSE), (((rt0.c0))>=((vt0.c0)))) FROM rt0;SELECT DISTINCT TYPEOF(DISTINCT COALESCE(rt1.c2, rt1.c1)) FROM rt0, rt1, vt0 WHERE ((((x'' IN ('Qmk'))) NOT NULL)) LIMIT 246874243 OFFSET 709312819; -- 0ms;
SELECT ALL (- (json(rt0.c1))) FROM rt0, vt0, rt1 WHERE ((NOT (0.49933910551385363)) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT DISTINCT x'' FROM rt0, rt1, vt0 WHERE (((x'')LIKE('Uz')) COLLATE RTRIM) ORDER BY (((-1.474964163E9, ((vt0.c0) ISNULL), (((vt0.c1, rt1.c0, rt0.c2)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt1.c0, rt1.c2, vt0.c0)))))<(((rt1.c0 IN ()), -2.111839058E9 COLLATE BINARY, ((rt1.c2)AND(vt0.c1))))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT (rt0.c0 COLLATE RTRIM)), CASE WHEN SQLITE_VERSION() THEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 END WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN (vt0.c0)) WHEN ((rt0.c1)-(rt0.c2)) THEN NULL END, (+ (NULL)) FROM rt1 WHERE (LOWER(DISTINCT NULL COLLATE NOCASE));SELECT DISTINCT (NOT (((vt0.c1)<(rt1.c2)))) FROM vt0, rt0;SELECT rt0.c1 FROM rt0 WHERE (CAST(((x'4d73') NOT BETWEEN ('y^?!i''f') AND (NULL)) AS INTEGER)); -- 0ms;
SELECT ALL (((((((vt0.c0)OR(rt0.c1)))AND(vt0.c1))))>((((rt0.c2) ISNULL)))) FROM rt0, vt0 WHERE (CAST(((x'0bfa630d') NOT BETWEEN ('-803919259') AND (x'')) AS REAL)); -- 0ms;
SELECT ALL NTILE('0.0308776151422383') OVER (), GROUP_CONCAT((((rt0.c0, rt1.c0, vt0.c1)) BETWEEN ((vt0.c1, rt1.c0, rt0.c0)) AND ((vt0.c1, rt1.c1, rt1.c0)))) OVER (), CAST(rt1.c0 COLLATE NOCASE AS TEXT), (~ ((((vt0.c0))>=((rt1.c0))))), ((((rt1.c1)OR(rt0.c0))) ISNULL) FROM vt0, rt0 NOT INDEXED, rt1 WHERE (((((CAST(NULL AS REAL))OR(CAST(0X157a491c AS TEXT))))AND(IFNULL('-1261854994', 0X6c4c33c2)))); -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT NULL) FROM rt0 ORDER BY ((NULL) NOT BETWEEN ((+ (rt1.c0))) AND ((((rt0.c1))<>((rt0.c0))))) DESC  NULLS FIRST, ((CASE WHEN vt0.c1 THEN NULL END) BETWEEN (((rt0.c0) BETWEEN (rt1.c2) AND (vt0.c1))) AND (NULL)) DESC;