-- Time: 2024/06/07 15:40:25
-- Database: database9
-- Database version: 3.40.0
-- seed value: 2647947109
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 2ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 REAL ); -- 10ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
DROP TABLE vt0; -- 1ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 1ms;
PRAGMA recursive_triggers; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3, c1, c0) VALUES (x'', x'2a96', NULL, ',\rP9kGDⴊ'); -- 2ms;
UPDATE OR IGNORE rt1 SET (c3)=(NULL) WHERE CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC); -- 1ms;
REINDEX; -- 0ms;
REINDEX; -- 1ms;
INSERT OR ABORT INTO rt1(c2) VALUES (0X46e142c8); -- 2ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c3, c2) VALUES (x'', 1189167816, x''); -- 0ms;
DELETE FROM rt1; -- 2ms;
UPDATE rt1 SET c1=x'', c0=',\rP94GDⴊ' WHERE rt1.c0; -- 0ms;
UPDATE OR ABORT rt1 SET c2=0.2426324056486585, c1=x'0a5e', c1=x'' WHERE CASE WHEN json_array_length(rt1.c3, rt1.c1) THEN (- (rt1.c3)) END; -- 1ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (0.4183781454487008), (x''), (',\rP9kGDⴊ'); -- 0ms;
UPDATE rt1 SET (c0)=('iz>'); -- 0ms;
UPDATE rt1 SET (c3)=(x'428a5546') WHERE CAST(x'' COLLATE NOCASE AS REAL); -- 1ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (NULL, -1876667761); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (NULL); -- 1ms;
PRAGMA short_column_names; -- 1ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', '1189167816', x'', NULL), (0.7439697987895568, 0.4866030240912861, '-1796523435', x''), (1.189167816E9, (((((NULL, 0.9581232104411207, x'5442', 0.3195479128440232, ''))<=(('-1876667761', '1189167816', '', x'5830', ')nWS+D'))))|(((((((((0.5624713747456372)AND(x'84bc')))AND(x'')))AND(-2.33100022E8)))AND(NULL)))), NULL, 0.6761865318742459); -- 0ms;
REINDEX; -- 1ms;
PRAGMA journal_size_limit = -7373374164898696934; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c3, c1) VALUES (x'', 0.7039771310313278, NULL), ('-1876667761', (((((x'') IS TRUE)))>=((((0.7991449387587137) ISNULL)))), 0.1586949312458632), (x'', 0.44825074323852965, '-1360745173'); -- 1ms;
PRAGMA main.cache_size = -5952134055800864454; -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES (-233100022); -- 0ms;
UPDATE rt1 SET (c2, c0)=('-1796523435', x'') WHERE x'd9f1'; -- 0ms;
ANALYZE; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c0, c2, c1, c3) VALUES (-233100022, x'', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c3, c2) VALUES ('77293730', 0.9298845145076204, x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c3) VALUES (0xffffffff9024528f, 0X68f360d1, '!!c'), (x'', 0Xfffffffff0700940, '-233100022'), (NULL, '<孺\rFkwE', NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0='y', c2=NULL; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c2, c0) VALUES ('B7', '1527499306', 1.527499306E9); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA cache_spill = -8806749297001843531; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
UPDATE OR REPLACE rt1 SET c3=NULL WHERE DATE((((0.7889726840229364)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), (+ (rt1.c0)), ((rt1.c1) IS FALSE)); -- 0ms;
PRAGMA temp.automatic_index = true; -- 0ms;
UPDATE rt1 SET c3='-233100022'; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c2, c0) VALUES (NULL, 'Ne', 0.9581232104411207); -- 1ms;
REINDEX; -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0, c3, c2) VALUES ('', 0Xffffffff86731950, NULL, '77293730'), (0xfffffffff0700940, x'', '0.6761865318742459', ' F'), (0X49b68a2, x'', -1473250859, -233100022); -- 1ms;
PRAGMA integrity_check; -- 5ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE rt1 SET c1=''; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c3=NULL, c2='1527499306', c3=0x18c9fa9c; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES (NULL), (0.5870697318638556), (x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c1) VALUES (x'', -2.039277232E9); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (x''); -- 1ms;
UPDATE OR IGNORE rt1 SET c3=x'ffa1', c1='-1796523435' WHERE (((((rt1.c0)AND(rt1.c2)))AND(rt1.c3)) IN ()); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0, c1) VALUES (NULL, -1473250859, NULL); -- 0ms;
PRAGMA application_id; -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=(NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c1)=('-415284862', '-1589270272'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c2, c2, c0)=('-1876667761', x'', 175208025); -- 2ms;
UPDATE OR IGNORE rt1 SET c1='P()ቩ'; -- 7ms;
INSERT OR IGNORE INTO rt1(c0, c3, c1) VALUES ('!!c', -2.039277232E9, '-1876667761'); -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c3, c1) VALUES (NULL, '꤀'), ('1012525553', ')nWS+D'), (x'', NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c0, c3) VALUES ('543727367', NULL), ('', NULL), (NULL, 0X49b68a2); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c1, c3, c0) VALUES (NULL, x'', -1589270272, 'Ne'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('A3{drF'), ('0.7991449387587137'), (0X7e1c5100); -- 0ms;
UPDATE rt1 SET (c3)=(''); -- 0ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2) AS SELECT (+ (((rt1.c1)<(rt1.c3)))), (('-415284862')>>(((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c1)))), ('1012525553' IN ()) FROM rt1 WHERE (((197147889 COLLATE RTRIM)>>((+ (0.5104611381352161))))) ORDER BY (((('1783102280' IN ())))>((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE 0.5870697318638556 END))) DESC  NULLS FIRST, (((0.21075729449023806 IN ()))>(((rt1.c3)-(rt1.c0))))  NULLS LAST; -- 1ms;
END; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.32388785066211867); -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (NULL, '', NULL, x'7fdf'), (x'', x'1548', 0.42058522130446796, x'2a1f'), (x'', '-2039277232', '', x''); -- 1ms;
INSERT OR ABORT INTO t0 VALUES (0.6567828854352609), (x''), ('5?9U>' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c3, c1) VALUES (0.3844771124415717, '-582700157', NULL), (NULL, '247136386', ((CAST('D' AS NUMERIC))AND(((NULL) ISNULL)))), (' i䫎bB(Ea,', 0.033597353777010786, NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.03763611130562505); -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c63; -- 4ms;
UPDATE OR IGNORE rt1 SET c2=NULL, c3=' F', c0=NULL; -- 1ms;
REINDEX; -- 0ms;
END; -- 0ms;
INSERT OR ROLLBACK INTO rt1 VALUES (0.6860164132883781, x'', NULL, x''); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c63 TO c87; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR ABORT t0 SET c87='-49913822', c87=NULL WHERE ((((t0.c87)+(t0.c87)))>=(CASE t0.c87  WHEN t0.c87 THEN t0.c87 ELSE t0.c87 END)); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.stats; -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(NULL); -- 0ms;
ALTER TABLE t0 ADD COLUMN c38 BLOB; -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ((((((rt1.c1)AND(rt1.c1)))OR(rt0.c0)))&(((rt0.c0)OR(NULL)))) FROM v0, t0, rt0 WHERE (((NULL COLLATE BINARY) BETWEEN (((((NULL)OR(0.7039771310313278)))OR(-2142517376))) AND (TYPEOF('-508916316'))));SELECT ALL LAG(((CASE WHEN rt1.c2 THEN rt1.c3 WHEN t0.c87 THEN t0.c87 WHEN NULL THEN rt1.c0 ELSE v0.c0 END)AND(CASE t0.c38  WHEN v0.c0 THEN v0.c2 WHEN t0.c87 THEN v0.c0 WHEN rt1.c0 THEN rt1.c0 END)), (((rt1.c2))>=((((((rt1.c3)AND(rt1.c0)))AND(x''))))), ((CAST(v0.c1 AS NUMERIC)) ISNULL)) OVER () FROM v0, rt1, t0; -- 3ms;
SELECT DISTINCT CASE ((t0.c38)|(rt0.c0))  WHEN '0.6567828854352609' THEN CAST(rt0.c1 AS REAL) WHEN (('\n}I') BETWEEN (rt1.c0) AND (v0.c2)) THEN (((t0.c38, 'l_3i', rt1.c0))<=((rt0.c0, t0.c87, rt0.c1))) WHEN (((rt1.c1))!=((v0.c2))) THEN ((t0.c38)*('-1473250859')) WHEN (((rt1.c1))>((NULL))) THEN NULL WHEN (x'' IN ()) THEN 0xffffffffbc9aff13 ELSE ((((rt1.c0)AND(v0.c0)))OR(rt0.c0)) END, (v0.c1 COLLATE BINARY IN (((rt0.c0)AND(rt0.c0)), json_quote('1765074509'))), TOTAL(((rt0.c2)IS(rt1.c1))) FROM v0 GROUP BY (('HQN') NOT NULL) HAVING (((0.9581232104411207 IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ('屮%1MJ喸+'));SELECT ALL (((rt1.c0 IN (v0.c1)))>((((t0.c87)) NOT BETWEEN ((v0.c1)) AND ((rt1.c1))))) FROM t0, rt1, rt0 WHERE (((x'') BETWEEN (json_array(-233100022, x'43ad', '717207055', '967118562')) AND (json_patch(x'3d261127', NULL))));SELECT (((((((((~ (x'')))OR(CASE WHEN rt1.c3 THEN t0.c38 END)))OR(((v0.c0) NOTNULL))))OR(v0.c1 COLLATE NOCASE)))AND(((((((((rt0.c1)AND(rt1.c2)))OR(rt1.c3)))AND(rt1.c0)))OR(v0.c2)))), ((rt1.c0) NOT BETWEEN (TOTAL(rt1.c2)) AND (CASE WHEN rt0.c0 THEN t0.c38 WHEN v0.c0 THEN v0.c1 WHEN rt1.c2 THEN t0.c87 END)), ((((v0.c2)AND(rt0.c2)))-(rt1.c1)), PERCENT_RANK() OVER ( PARTITION BY (((((((((v0.c2 IN ()))OR(LIKELY(rt1.c2))))OR((((x'15293629'))<=((rt1.c2))))))OR((((x'9c4357a6')) BETWEEN ((rt1.c0)) AND ((rt0.c2))))))AND(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c1)))), CASE WHEN ((v0.c0) NOT NULL) THEN (v0.c1 IN ()) WHEN 0.3796166411111239 THEN ((rt1.c1)||(1.527499306E9)) WHEN ((t0.c87) NOT BETWEEN (rt1.c3) AND (v0.c0)) THEN t0.c87 COLLATE NOCASE WHEN CASE rt1.c1  WHEN rt0.c1 THEN t0.c38 WHEN rt0.c2 THEN rt1.c3 WHEN v0.c1 THEN rt1.c1 END THEN ((v0.c0)||(t0.c38)) WHEN (((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c2))) THEN t0.c87 COLLATE RTRIM ELSE v0.c0 END), ((((- (v0.c0))))=((((rt1.c3) BETWEEN (v0.c2) AND (rt1.c3))))) FROM rt1 GROUP BY LTRIM((((t0.c87)) NOT BETWEEN ((rt0.c2)) AND ((t0.c87))), CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN rt1.c0 WHEN v0.c2 THEN rt1.c1 WHEN t0.c87 THEN rt1.c2 WHEN '5?9u>' THEN rt1.c0 END), CAST(((((((((v0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt1.c0)))OR(rt0.c2)) AS NUMERIC), CASE (((v0.c0, rt0.c2, 1.97147889E8)) NOT BETWEEN ((v0.c2, rt1.c3, rt1.c1)) AND ((0.5624713747456372, rt1.c2, rt1.c1)))  WHEN CAST(t0.c38 AS BLOB) THEN ((0.43519985247295945)+(v0.c0)) END HAVING ((((((((v0.c0 COLLATE BINARY)AND(IFNULL(rt1.c2, t0.c38))))AND(rt1.c0)))AND(0Xfffffffff7131269)))OR(((rt1.c3) NOT BETWEEN (v0.c0) AND (v0.c1))));SELECT ((v0.c1) NOTNULL), COUNT(((((rt1.c1)OR(rt0.c2)))AND(rt1.c3))), (- (((v0.c2)GLOB('5닛')))) FROM rt0 WHERE (((((0.5624713747456372)>=('-1876667761')))>>(((NULL) ISNULL))));SELECT ALL ((TRIM(v0.c0, 0.40167320376683724))GLOB(0.27899646037183323)), v0.c2, (((~ (rt1.c3)))>>(((rt1.c2) NOTNULL))) FROM rt0, rt1, t0, v0 WHERE ('䏖IUotM?\n'); -- 1ms;
SELECT DISTINCT ((SUM(rt0.c1))>(((t0.c87) IS FALSE))) FROM rt1, rt0, v0, t0 GROUP BY ((((t0.c87)AND(rt1.c1 COLLATE RTRIM)))AND((NOT (rt0.c2)))); -- 0ms;
SELECT ALL ((((((t0.c38) IS FALSE))AND((((v0.c0, NULL, rt1.c2, v0.c0, t0.c87))<>((rt1.c1, rt0.c2, t0.c87, rt1.c0, t0.c87))))))OR(((rt1.c2)*(rt0.c2)))) FROM rt0, t0, rt1, v0; -- 0ms;
SELECT ALL (+ (((t0.c87)<(t0.c38)))) FROM t0, v0, rt1 WHERE (CAST((x'' IN (NULL, 'z喸')) AS BLOB)) GROUP BY (((((((((((((rt1.c2 IN (-1.49745047E8)))AND(CAST(rt0.c1 AS TEXT))))OR(ABS(DISTINCT 0xffffffffe1aa8da4))))OR(((t0.c38) BETWEEN (rt0.c1) AND (v0.c0)))))AND((((v0.c2, '-1360950698', rt0.c0)) BETWEEN ((0.43964981248554635, '1541102458', t0.c38)) AND (('1765074509', v0.c1, rt0.c1))))))AND(x'')))OR(rt1.c2)) HAVING rt0.c1;SELECT ALL NTILE(0X1da7f869) OVER ( ORDER BY ((((rt0.c1) NOTNULL))>>(CAST(rt0.c0 AS REAL))) ASC) FROM v0, rt1, rt0 UNION SELECT DISTINCT AVG((((((((('717207055')AND(0X7cc282bf)))AND(rt1.c1)))OR(rt0.c1)))OR(t0.c87))) OVER () FROM v0;SELECT DISTINCT CAST(v0.c1 AS INTEGER) COLLATE RTRIM FROM v0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c0 COLLATE NOCASE)OR(CAST(rt0.c2 AS NUMERIC))))OR(v0.c2)) FROM v0, t0;SELECT ALL (((t0.c38)) BETWEEN ((((NULL)AND(t0.c87)))) AND ((((v0.c0)<=(rt0.c0))))), ((COUNT(rt0.c2)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((v0.c2) IS FALSE))), (((rt1.c2)) NOT BETWEEN ((((((t0.c87)OR(t0.c38)))AND(v0.c2)))) AND ((CASE rt1.c2  WHEN t0.c38 THEN t0.c38 END))) FROM rt1 WHERE (CASE WHEN 0xffffffffa325d67f COLLATE RTRIM THEN ((x'') IS FALSE) END);SELECT ALL (((rt0.c2 IN ()))AND(CASE rt0.c1  WHEN t0.c87 THEN rt0.c0 ELSE rt0.c0 END)) FROM v0, rt1, t0, rt0; -- 0ms;
SELECT DISTINCT '4)' FROM rt1; -- 0ms;
SELECT ALL v0.c0, CASE 0.5104611381352161  WHEN CAST(v0.c1 AS TEXT) THEN CASE v0.c1  WHEN v0.c2 THEN rt0.c1 END END, (- ((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((rt0.c2, rt1.c0, NULL)) AND ((rt1.c1, rt1.c2, rt1.c0))))) FROM rt0, rt1, v0, t0; -- 0ms;
SELECT COUNT(*) OVER () FROM rt0, rt1, t0, v0; -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT NULL)) BETWEEN (COUNT(v0.c2)) AND (((rt0.c2)-(rt1.c0)))) FROM rt0, rt1, t0, v0 WHERE (json_remove((~ (NULL)), ((('1!SMh''㺙*')) NOT BETWEEN ((NULL)) AND ((x''))), CAST(0.27400324371881657 AS NUMERIC), json_insert(NULL, x'', 0.3796166411111239))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (t0.c38)))IS(CAST(rt1.c1 AS INTEGER))) FROM rt1, rt0, v0;SELECT ((v0.c2)<(rt0.c0)) COLLATE RTRIM FROM v0, t0, rt1 WHERE (((CASE WHEN 'A3{drF' THEN '0.1586949312458632' WHEN NULL THEN -1348685093 WHEN x'dc20' THEN x'f9c6' END) NOT NULL)) GROUP BY (~ (rt1.c3 COLLATE RTRIM));SELECT ALL LIKELY(DISTINCT GROUP_CONCAT(0.7889726840229364)) FROM rt1, t0, rt0, v0 WHERE ((((0.8022955901261472, -2.142517376E9, '543727367', x'058e', 0.583886110729352)) BETWEEN ((((x'')>('')), 0.8562757791619733, CAST(0.34940054818577015 AS TEXT), (('9)')LIKE(x'')), TOTAL_CHANGES())) AND (((('') NOT NULL), ((-1104655291)+(NULL)), ((((((((0.3195479128440232)AND('-64360869')))AND(0.005373580269850908)))OR('*')))OR(NULL)), (((1381556558))<>((NULL))), CAST(1.765074509E9 AS REAL))))); -- 2ms;
SELECT DISTINCT TOTAL(CASE WHEN v0.c2 THEN rt1.c0 ELSE rt0.c2 END) FROM rt0 GROUP BY ((((((x'0488')OR(0.6485406442192138)))AND(t0.c38))) ISNULL) HAVING (((t0.c87, rt0.c2, rt1.c3)) BETWEEN ((((rt0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)), ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)), CASE WHEN t0.c38 THEN rt1.c1 WHEN rt0.c0 THEN v0.c2 WHEN rt0.c2 THEN v0.c1 END)) AND (((v0.c2 IN ()), (v0.c1 IN ()), TIME(rt1.c0, rt1.c0, rt1.c1, rt0.c0, rt0.c1)))) LIMIT 467793479 OFFSET -1981926112;SELECT DISTINCT ((((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c3))) IS TRUE) FROM rt1, t0, rt0; -- 0ms;
SELECT DISTINCT ((0.8562757791619733 COLLATE RTRIM)=(MIN(v0.c1))) FROM v0, t0 WHERE ('0.5624713747456372'); -- 0ms;
SELECT DISTINCT ((v0.c2 COLLATE BINARY)*(((rt0.c0)/(x'')))) FROM rt1 WHERE (((x'552a') NOTNULL) COLLATE NOCASE) ORDER BY ((((rt1.c3) NOTNULL))>>(((1527499306) IS TRUE)))  NULLS FIRST, CAST(v0.c0 COLLATE NOCASE AS TEXT)  NULLS FIRST, '\n}I' COLLATE RTRIM ASC;SELECT DISTINCT (((9223372036854775807)) BETWEEN ((CASE WHEN 0.8086092684877495 THEN rt0.c0 ELSE NULL END)) AND ((((rt0.c2) NOTNULL)))) FROM v0, t0, rt0, rt1 WHERE (LOWER(CASE '{}'  WHEN 'ऑj-3' THEN NULL END)); -- 0ms;
SELECT DISTINCT (CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END IN ()), ((((((v0.c1) NOT BETWEEN ('1541102458') AND (v0.c0)))AND(CAST(rt0.c1 AS INTEGER))))OR(NULL)), (('247136386' COLLATE RTRIM) NOT BETWEEN (4.67793479E8) AND (rt0.c2 COLLATE RTRIM)) FROM t0 WHERE ((((('497547369')AND((((('1012525553')OR('1765074509')))OR(x'')))))OR(CAST(x'b903' AS INTEGER)))) GROUP BY CASE WHEN (((t0.c87))>=((rt0.c1))) THEN (NOT (rt1.c1)) END HAVING CASE WHEN rt0.c1 THEN (- (v0.c0)) WHEN '-1898429482' THEN CASE t0.c38  WHEN v0.c2 THEN v0.c1 ELSE rt1.c3 END WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt0.c0) BETWEEN (v0.c2) AND (rt0.c2)) END;SELECT DISTINCT ((((v0.c2)GLOB(t0.c38)))GLOB(((rt1.c0)<=(v0.c0)))), (CAST(rt1.c1 AS REAL) IN ()), 0Xffffffffe70993c9 FROM v0, rt0, t0 WHERE (UPPER(((0xffffffff94eb3a55) BETWEEN (1.765074509E9) AND (NULL))));SELECT DISTINCT rt0.c0 FROM rt1, t0, v0, rt0 WHERE ((((((x'' IN ()))AND(((NULL) BETWEEN ('') AND (0.5230167223887742)))))AND(((0.6075686102086664)LIKE(NULL))))); -- 0ms;
SELECT ALL ((SUM('2115784960'))IS NOT((((rt0.c0))>((rt1.c2))))) FROM rt1, v0, rt0; -- 0ms;
SELECT (((((t0.c38)>=(rt1.c3))))>((DATE(v0.c1, rt0.c0, rt1.c1)))), LIKELIHOOD(((2.11578496E9) NOT BETWEEN ('0.42058522130446796') AND (t0.c87)), 0.36868990577325633), ((((((rt0.c0)OR(t0.c38)))AND(rt1.c2)))&((((rt1.c1)) BETWEEN ((t0.c38)) AND ((rt1.c2))))) FROM rt1, v0, t0, rt0 WHERE (((((0.05368049136372499) NOT BETWEEN ('717207055') AND (0.3790891439119307))) NOTNULL)); -- 1ms;
SELECT DISTINCT ((((((v0.c2)AND(rt0.c0)))AND(rt0.c0))) NOT BETWEEN ((((rt1.c2))<(('-1360745173')))) AND (((v0.c2) IS TRUE))) FROM t0, v0, rt0 WHERE ((('')||(0.8674436304268164)) COLLATE RTRIM);SELECT ((SQLITE_COMPILEOPTION_USED(rt1.c0)) NOT BETWEEN (SUM(t0.c87)) AND ((- (rt1.c1)))) FROM v0, t0, rt0, rt1; -- 0ms;
SELECT DISTINCT x'' FROM rt1 NOT INDEXED RIGHT OUTER JOIN v0 ON (((- (v0.c0)))<=(CAST(rt0.c2 AS INTEGER))) RIGHT OUTER JOIN t0 ON (- ((NOT (v0.c1)))) WHERE (CAST(CAST(x'' AS NUMERIC) AS NUMERIC)) ORDER BY 0.22051004298348842 ASC;SELECT ALL (((v0.c1 IN (rt1.c3)))<=((NOT (rt1.c3)))) FROM t0, rt0, rt1;SELECT DISTINCT ((((rt1.c0)=(v0.c2))) BETWEEN ((((rt1.c1)) BETWEEN ((t0.c87)) AND ((v0.c2)))) AND ((((rt0.c2))==((v0.c1))))), ((('')IS(rt1.c0)) IN ()), CAST((- (v0.c1)) AS NUMERIC) FROM v0, rt1;SELECT ALL HEX(DISTINCT ((v0.c1)|(rt0.c1))), (CASE WHEN t0.c87 THEN rt1.c0 END IN ()), v0.c1, (((v0.c0 IN ())) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt1.c3 WHEN '1664703598' THEN t0.c38 WHEN NULL THEN rt1.c0 END) AND (0.9298845145076204)), SQLITE_SOURCE_ID() FROM rt1;SELECT ALL SUBSTR(GROUP_CONCAT(rt0.c2), ')Ik8') FROM v0, rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT((((t0.c38, rt1.c3, v0.c2)) BETWEEN ((rt0.c1, rt1.c3, v0.c2)) AND ((rt0.c1, rt1.c0, 'cYEop')))) OVER () FROM v0, t0, rt0, rt1 INTERSECT SELECT (((rt1.c2 IN ()))LIKE(CASE 2146188953  WHEN v0.c0 THEN rt0.c1 ELSE x'508b' END)) FROM rt1 NOT INDEXED LIMIT 165158343 OFFSET -1741767681;SELECT json_object(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END, t0.c87 COLLATE NOCASE) FROM rt0, rt1 GROUP BY ((((rt0.c1)||(rt1.c1))) IS FALSE);SELECT DISTINCT (+ ((((v0.c1, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c1, rt0.c2)) AND ((v0.c0, rt1.c0, rt1.c2))))) FROM v0, t0, rt0, rt1 WHERE ((CAST(0.1586940896709076 AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT ((rt1.c2)||(rt1.c3 COLLATE RTRIM)) FROM v0, rt0;SELECT (('-415284862') NOTNULL) COLLATE RTRIM FROM v0 NOT INDEXED WHERE ((~ (0x5c887d7a)) COLLATE RTRIM COLLATE BINARY) ORDER BY x''  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c87)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((COUNT(rt1.c1)))), (((NULL)) BETWEEN ((QUOTE(t0.c87))) AND ((((rt1.c1) NOTNULL)))), (((t0.c87, rt1.c1, rt1.c3)) NOT BETWEEN ((rt0.c2, rt1.c2, ((v0.c1) NOT NULL))) AND ((('''tp<' IN ()), (- (rt1.c1)), (+ (rt1.c0))))), MAX((NOT (0xffffffffdd44b383))), CAST(rt1.c1 AS TEXT) FROM rt1, t0;SELECT CASE (((1506458759))<=((rt1.c1)))  WHEN ((rt0.c1)<=(rt1.c3)) THEN ((NULL) NOT NULL) WHEN (((rt0.c1)) BETWEEN ((t0.c87)) AND ((rt0.c0))) THEN CASE t0.c38  WHEN x'' THEN '-1412633830' WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c1 ELSE rt0.c1 END WHEN (rt0.c2 IN ()) THEN ((v0.c2) ISNULL) END, CASE (((rt0.c0, t0.c38, NULL, rt1.c2, NULL)) BETWEEN ((v0.c2, rt0.c1, t0.c38, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c1, rt0.c0, t0.c87)))  WHEN ((t0.c38)>>(rt0.c2)) THEN (v0.c1 IN ()) ELSE (+ (rt0.c1)) END, CAST(CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END AS BLOB) FROM v0, rt0 FULL OUTER JOIN rt1 ON (rt1.c0 IN ()) LEFT OUTER JOIN t0 ON (((rt0.c1 IN ())) NOTNULL) WHERE ((~ (CASE WHEN NULL THEN '-1106680480' END))); -- 0ms;
SELECT (NOT (CAST(rt1.c3 AS BLOB))) FROM t0, rt0, v0;SELECT DISTINCT rt0.c0 FROM rt1, rt0, v0; -- 0ms;
SELECT DISTINCT 0xffffffffb3fdbbc4 FROM rt0, t0, rt1; -- 0ms;
SELECT ALL ((((((x'') BETWEEN (t0.c38) AND (v0.c0)))OR(v0.c2)))OR(((rt0.c1) BETWEEN (t0.c87) AND (v0.c0)))) FROM v0;SELECT t0.c87, rt0.c1, AVG(TYPEOF(rt0.c2)) OVER () FROM rt0, rt1, v0 WHERE (NULL);SELECT (((((t0.c87) NOT BETWEEN (rt1.c3) AND (rt0.c0))))<=((CAST(rt0.c1 AS NUMERIC)))) FROM v0 WHERE ((CAST('1460784484' AS NUMERIC) IN ()));SELECT ALL (~ ((rt1.c3 IN ()))) FROM rt1; -- 0ms;
SELECT DISTINCT ((UPPER(v0.c0)) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (MAX(rt0.c1))), LAST_VALUE(rt0.c0) OVER ( RANGE  CURRENT ROW), LAG((((v0.c2)) BETWEEN ((((rt0.c2) BETWEEN (v0.c0) AND (v0.c0)))) AND ((json_type(rt0.c1)))), ((((rt0.c0) NOT NULL)) NOTNULL), '550537341') OVER (), CAST(v0.c2 AS BLOB) COLLATE RTRIM, (((v0.c1 IN ()))&(((rt0.c0)LIKE(rt0.c1)))) FROM rt0, v0 GROUP BY (rt0.c2 IN (rt1.c2)) COLLATE NOCASE HAVING MAX(((((rt1.c3)OR(t0.c87)))AND(t0.c38)));SELECT DISTINCT SQLITE_SOURCE_ID(), LEAD(((rt1.c2)<<(((((v0.c1)AND(rt1.c2)))OR(rt1.c1)))), (v0.c1 IN (rt1.c2)) COLLATE RTRIM, (((((rt1.c0)IS NOT(rt1.c2))))>(((((rt1.c3))<=((v0.c1))))))) OVER (), MIN(((rt0.c2) BETWEEN (rt1.c1) AND (NULL))) COLLATE NOCASE, SUM(((rt1.c1)+(v0.c0))), ((((((rt1.c2)OR(rt1.c0)))OR(t0.c38)))==(((rt1.c2)+(rt0.c1)))) FROM t0, v0, rt1 WHERE (((('2115784960')) BETWEEN ((((-49913822)-(0x56475dd5)))) AND (('TAL*%T' COLLATE BINARY)))) GROUP BY CASE WHEN ((((((((rt0.c1)OR(rt0.c1)))OR(v0.c2)))AND(rt1.c1)))OR(v0.c0)) THEN ((v0.c1)*(v0.c0)) WHEN rt0.c1 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c0)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt1.c2)<<(x'162b')) END HAVING ((SUM('')) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((~ (rt1.c1))));SELECT CUME_DIST() OVER () FROM rt0, t0 WHERE ((~ (((x'')<=(x'854d'))))); -- 0ms;
SELECT ALL CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (v0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END FROM rt1, rt0, t0, v0; -- 0ms;
SELECT DISTINCT (((NOT (rt1.c2)))|(rt1.c2 COLLATE RTRIM)) FROM rt0, v0, rt1, t0; -- 0ms;
SELECT DISTINCT SUM(((rt1.c0)!=(v0.c2))) OVER () FROM t0, rt1, rt0 WHERE ((((NULL, 0.9338851132246432, '_몔!#1#7<]'))<=(('1680115734', x'', x'a667'))) COLLATE BINARY);SELECT DISTINCT ((((rt0.c0 COLLATE RTRIM)OR(((((rt1.c2)AND(t0.c38)))OR(rt1.c3)))))OR(LTRIM(rt0.c1, t0.c38))) FROM v0, rt1 WHERE ((((- (x'2ddd')))<((- (NULL))))) ORDER BY CAST((NOT (rt0.c2)) AS TEXT) DESC, ((LIKELY(rt1.c3)) IS FALSE);SELECT ALL (((v0.c2, rt1.c0, t0.c87)) NOT BETWEEN (((((v0.c1, rt0.c1, v0.c1)) NOT BETWEEN ((t0.c87, rt1.c2, v0.c1)) AND ((v0.c1, v0.c1, rt1.c3))), NULL, (((rt1.c3))!=((rt1.c0))))) AND ((CAST(rt1.c0 AS TEXT), MAX(rt1.c2), CASE WHEN v0.c2 THEN 0.5870697318638556 ELSE x'' END))) FROM rt1, t0;SELECT ALL ((((rt0.c1)AND(t0.c38)))AND(v0.c1)) COLLATE NOCASE, CASE WHEN ((v0.c2)<>(rt1.c3)) THEN ((rt1.c0) IS TRUE) END, '兩' FROM v0;SELECT MAX(((0.05319709342760348)<<(rt1.c2))), CAST(IFNULL(t0.c87, t0.c87) AS TEXT), ((((rt1.c0) NOT BETWEEN (t0.c38) AND (t0.c87)))||((v0.c1 IN ()))) FROM v0, rt1;SELECT COUNT((- (t0.c87))) FILTER(WHERE 0.8674436304268164) OVER ( PARTITION BY LOWER(rt1.c3) COLLATE RTRIM COLLATE NOCASE, CASE ((rt1.c3)>=(rt1.c2))  WHEN (rt1.c0 IN ()) THEN (~ (rt0.c2)) END, (- (((rt0.c0)IS(rt1.c2)))), json_type(((rt1.c0) BETWEEN (rt0.c0) AND (v0.c1)))), CASE WHEN rt1.c0 THEN SUM(NULL) ELSE (- (rt1.c0)) END, NTH_VALUE((((rt0.c1 IN ()))/((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))), QUOTE(((rt0.c0) NOT NULL))) OVER () FROM rt1, rt0 WHERE ((- (x'')) COLLATE RTRIM);SELECT ALL PERCENT_RANK() OVER () FROM rt1, v0; -- 1ms;
SELECT DISTINCT ((((((((CAST(v0.c2 AS REAL))OR(((rt1.c3)-(v0.c0)))))OR(((t0.c87)*(rt0.c2)))))OR(CAST(rt1.c2 AS NUMERIC))))AND((((rt0.c2))>=((rt1.c1))))) FROM v0, t0 ORDER BY CAST(CASE rt1.c0  WHEN NULL THEN v0.c0 END AS TEXT);SELECT ((((v0.c0)AND('*ZJa')))OR(rt1.c3)) COLLATE NOCASE FROM rt0, rt1;SELECT ((((rt1.c0)IS NOT(rt0.c2)))%(t0.c38 COLLATE RTRIM)) FROM t0, v0 WHERE (((((('712733792') NOTNULL)))==((((('-1104655291'))>=(('')))))));SELECT DISTINCT AVG(IFNULL(rt0.c1, v0.c0)) OVER () FROM t0, rt1, rt0, v0 WHERE (((((((((x'')OR(NULL COLLATE RTRIM)))OR(((((((((((((2.11578496E9)OR(x'b670554d')))OR(NULL)))OR('~Z''Y')))AND(0.5020426457531099)))AND('TRUE')))AND('Igx)r-q')))))OR(CAST('-703927475' AS NUMERIC))))AND((('') ISNULL)))); -- 0ms;
SELECT DISTINCT (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END))<=((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END))), (CASE v0.c1  WHEN 0.5020426457531099 THEN t0.c87 ELSE t0.c87 END IN (MAX(v0.c2))), ((CASE WHEN rt1.c0 THEN t0.c38 ELSE 1.394805009E9 END) ISNULL) FROM rt0;SELECT DISTINCT LIKE((NOT (rt1.c2)), SUM(rt1.c3)) FROM v0 WHERE (CASE TYPEOF(DISTINCT x'')  WHEN ((x'') NOTNULL) THEN CASE WHEN 0.466778243309649 THEN 0.4866030240912861 WHEN x'' THEN NULL WHEN 0X1c9b1cf4 THEN x'4ab5cc48' END END) ORDER BY ((json_remove(v0.c2, v0.c0, t0.c38, v0.c2))%(((rt0.c2) BETWEEN (rt1.c2) AND (t0.c87)))) ASC  NULLS FIRST;SELECT DISTINCT NTH_VALUE(CAST(((((v0.c0)OR(v0.c1)))AND(v0.c2)) AS INTEGER), (((v0.c0)) NOT BETWEEN ((LIKE(v0.c2, v0.c0))) AND ((v0.c0)))) OVER () FROM v0 WHERE ((NOT ((('')LIKE('?1h&B%xg|')))));SELECT DISTINCT (NOT (((((((((rt1.c2)AND(rt1.c3)))AND(v0.c1)))OR(0X7208bdc0)))OR(v0.c1)))) FROM rt0, t0 GROUP BY CAST(rt0.c2 COLLATE BINARY AS NUMERIC), ((((((t0.c87) NOT BETWEEN (v0.c1) AND (v0.c0)))OR(CAST(rt1.c3 AS NUMERIC))))AND((((rt1.c1, rt1.c2, v0.c1)) NOT BETWEEN ((rt0.c0, v0.c1, t0.c38)) AND ((v0.c1, rt1.c3, rt1.c1))))), (rt0.c0 COLLATE BINARY IN ()) HAVING rt1.c3 COLLATE BINARY;SELECT ALL 'h' FROM rt1, t0, rt0, v0; -- 0ms;
SELECT DISTINCT (CASE WHEN v0.c2 THEN t0.c38 ELSE v0.c1 END IN (GROUP_CONCAT(rt0.c2), (rt1.c0 IN ()))), ((((rt1.c0 IN ()), CASE WHEN v0.c1 THEN v0.c1 END, (v0.c0 IN (rt0.c1))))>(((- (rt1.c1)), ((rt1.c1)||(rt0.c0)), ((v0.c2) BETWEEN (t0.c38) AND (v0.c1))))), ((CAST(v0.c1 AS NUMERIC)) BETWEEN (((t0.c87)|(rt0.c0))) AND (((rt1.c3)|(rt0.c0)))) FROM t0 NOT INDEXED;SELECT DISTINCT SUM((rt1.c2 IN ())) OVER () FROM rt0 WHERE ((((~ (0.9381614915012595))) IS FALSE)); -- 0ms;
SELECT DISTINCT COALESCE(((v0.c0) ISNULL), ((t0.c87)&(rt0.c1))) FROM t0, v0, rt1;SELECT DISTINCT (((rt0.c1)GLOB(rt1.c2)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE 0Xffffffffc359c548) OVER ( ORDER BY (+ (CAST(v0.c2 AS BLOB)))  NULLS FIRST) FROM t0 WHERE (((((((((((((CAST(x'' AS NUMERIC))AND(UPPER(''))))AND(CAST(x'' AS REAL))))AND((('0.3844771124415717')*(x'fc7e')))))OR(CAST(0.6485406442192138 AS BLOB))))AND(x'' COLLATE RTRIM)))AND((0X1da7f869 IN (NULL)))));SELECT DISTINCT ((rt0.c1) IS TRUE) FROM rt0, rt1, t0; -- 0ms;
SELECT ALL NULL FROM rt0, t0 WHERE (((((((NULL))=((x''))), CASE WHEN 'l_3i' THEN 'w	' END, ((x'ca72') NOT BETWEEN (0.14953799673510104) AND (0.22286128278690953))))==((x'885ddd24' COLLATE BINARY, (+ ('0.583886110729352')), NULL COLLATE BINARY)))) GROUP BY x'' HAVING v0.c0;SELECT DISTINCT ((((t0.c38)>>(t0.c87))) IS FALSE), ((CASE rt1.c0  WHEN rt1.c0 THEN t0.c38 WHEN rt1.c0 THEN rt1.c1 WHEN t0.c87 THEN rt0.c0 END) NOT NULL), ((v0.c0 COLLATE BINARY)-(UPPER(DISTINCT '-49913822'))) FROM v0, rt0, rt1 WHERE ((((CAST(0.4093573204533706 AS REAL)))<=(((('-609200540') NOT BETWEEN (x'') AND (x''))))));SELECT ALL CAST(rt0.c2 AS REAL) FROM t0, rt1, rt0, v0; -- 0ms;
SELECT ALL rt1.c0 FROM t0, rt1, v0 NOT INDEXED WHERE (((NULLIF(-836122673, x'')) BETWEEN (-1158409060 COLLATE NOCASE) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT LOWER(CAST(rt0.c1 AS REAL)) FROM t0, rt1, v0 GROUP BY t0.c87 HAVING MIN(LIKE(v0.c2, rt0.c0, '1'), rt0.c1 COLLATE BINARY);SELECT ALL NULL FROM v0, rt0; -- 0ms;
SELECT ALL (((('0.1586949312458632')>=(v0.c2)))>>(AVG(rt1.c1))) FROM t0 WHERE (((((NULL) ISNULL))GLOB(CASE NULL  WHEN NULL THEN 309684521 WHEN x'' THEN '616124730' WHEN '165158343' THEN NULL END))) ORDER BY '-582700157';SELECT ALL ((((((((CAST(rt1.c2 AS INTEGER))OR(((v0.c1)>=(t0.c38)))))OR((v0.c1 IN ()))))AND((((t0.c38))<=((rt0.c2))))))AND(rt0.c0)) FROM rt0, v0 WHERE (((LTRIM(x''))IS(CAST(-866795006 AS REAL))));SELECT (CAST(rt0.c1 AS NUMERIC) IN ()) FROM v0, rt0, t0, rt1 WHERE ((((NOT (717207055)))*(0.1623685514103984))); -- 0ms;
SELECT ALL (((v0.c0) BETWEEN (rt1.c3) AND (0.40167320376683724)) IN ()) FROM t0, rt1; -- 0ms;
SELECT ALL ((((((v0.c2)AND(t0.c87)))OR(-1589270272)))AND(CASE WHEN v0.c0 THEN rt1.c1 WHEN rt1.c3 THEN v0.c1 WHEN rt0.c1 THEN rt1.c3 END)) FROM rt0, t0, v0 WHERE (((((('')) NOT BETWEEN ((0.7692310543102304)) AND ((1.7976931348623157E308)))) NOTNULL));SELECT ((((rt1.c2) NOT BETWEEN (v0.c0) AND (v0.c1)))<>(CASE t0.c38  WHEN rt1.c1 THEN rt1.c1 END)) FROM v0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN (('&U')+(0.4025154138347703)) WHEN LOWER(x'') THEN (((('116007443')AND(NULL)))OR(x'')) WHEN ((x'') IS TRUE) THEN (-968862280 IN ()) ELSE CASE WHEN NULL THEN 0.7421308641208745 ELSE NULL END END);SELECT ALL AVG(((rt0.c0) BETWEEN (t0.c38) AND (v0.c1))) FROM v0 WHERE (((((NULL) NOTNULL))OR('-1473250859')));SELECT (NOT (CAST(t0.c87 AS REAL))) FROM t0, v0 WHERE (((0Xffffffffef355997) BETWEEN (CAST(0.25175450429940605 AS NUMERIC)) AND ((('-985552315')+(0.982578807002795))))) LIMIT 1664703598 OFFSET -1163153104; -- 0ms;
SELECT ((((v0.c2)OR(rt1.c1)))AND(v0.c2)) COLLATE BINARY, (((+ (rt1.c0))) NOT BETWEEN (CAST(t0.c38 AS REAL)) AND (v0.c0 COLLATE BINARY)), rt0.c1 FROM v0 LIMIT -1163153104 OFFSET 43351144;SELECT DISTINCT ((((((((rt0.c1)OR(((((((((rt0.c0)OR(t0.c38)))AND(v0.c0)))OR(v0.c1)))OR(NULL)))))OR(0.9809009920396324)))AND((~ (v0.c1)))))AND((rt0.c1 IN (0.9581232104411207)))) FROM v0 WHERE (((((CAST(x'ff44' AS NUMERIC))OR((('?E{	!v') NOT BETWEEN ('1463849099') AND ('')))))AND(CASE WHEN x'' THEN '' END))) LIMIT 551556273;SELECT (CAST(rt1.c3 AS TEXT) IN ()) FROM rt0 WHERE (LIKELY(((0xffffffff88ade98f) NOT BETWEEN (4.67793479E8) AND ('ks*W &%')))); -- 0ms;
SELECT DISTINCT (t0.c38 IN (rt1.c1)) COLLATE NOCASE, GROUP_CONCAT((('-831970658') NOT BETWEEN (rt1.c2) AND (rt1.c2))) OVER ( ROWS  CURRENT ROW), CAST((v0.c1 IN ()) AS TEXT) FROM t0 WHERE (((CASE 0.2426324056486585  WHEN 0.8413783557438456 THEN '-415284862' WHEN '415890076' THEN 0.6300984889454403 WHEN 0.8856532822759732 THEN '-148669104' ELSE 0.7039771310313278 END)!=(('550537341' IN ()))));SELECT DISTINCT CAST(((rt0.c1) BETWEEN (v0.c1) AND (rt1.c2)) AS BLOB), ((SQLITE_SOURCE_ID()) NOT BETWEEN (0.43964981248554635) AND (v0.c2)), ((UNLIKELY(DISTINCT t0.c38))<>(CAST(t0.c87 AS NUMERIC))) FROM rt1, t0, rt0 UNION ALL SELECT ALL ((CASE WHEN rt1.c0 THEN v0.c1 ELSE rt0.c2 END)OR(((((rt0.c1)AND(v0.c2)))OR(v0.c0)))), NTH_VALUE(CASE WHEN v0.c1 THEN v0.c2 END COLLATE BINARY, ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN t0.c38 END) AND ((((x''))>((v0.c2)))))) OVER (), ((((rt1.c3, rt1.c3, rt1.c0)) BETWEEN ((t0.c38, rt0.c1, v0.c1)) AND ((rt1.c2, v0.c0, t0.c38))) IN ()) FROM v0, rt0, t0 WHERE (CAST(x'1699' AS INTEGER) COLLATE NOCASE);SELECT ALL (((v0.c2 IN ()))*('1933968257')) FROM t0, v0, rt0, rt1; -- 0ms;
SELECT ALL json_valid((('FALSE') NOT NULL)), (+ (((t0.c87)+(rt1.c2)))), (((rt0.c0)) BETWEEN ((((v0.c1)<(rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))) FROM t0 WHERE (CAST(CAST('2115784960' AS BLOB) AS INTEGER));SELECT DISTINCT ((AVG(rt1.c1))&(((v0.c1)GLOB(rt1.c3)))), (CAST(v0.c0 AS INTEGER) IN ()), CAST((('1447517653')|(v0.c2)) AS TEXT) FROM rt0, v0, rt1, t0 WHERE (((TRIM('bp]-'))<=(('' IN ())))) LIMIT -1130692845 OFFSET 1394805009; -- 0ms;
SELECT ALL (((- (v0.c1)))*(rt1.c2)) FROM v0, rt1, rt0 WHERE (CAST(((NULL) NOTNULL) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((rt1.c3) IS FALSE))OR((((rt1.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, t0.c38, rt1.c2)) AND ((x'dbd6', rt1.c2, v0.c1))))) FROM t0, rt0, rt1, v0 WHERE (((0.41483674524249103) BETWEEN (NULL) AND (x'2476')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUBSTR((~ (t0.c38)), UPPER(DISTINCT NULL)) FROM rt1, v0;SELECT (((v0.c0)|(rt0.c1)) IN ()) FROM rt1 WHERE ((((((NULL, NULL, 0x500a6162)) BETWEEN ((0.5803728692738095, x'b085', NULL)) AND ((NULL, NULL, 0.6700477976033559))))%((-692520176 IN ())))); -- 0ms;
SELECT DISTINCT (NOT ('1381556558')) FROM v0 WHERE ((((''))<=((x'582a'))) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((CASE rt1.c1  WHEN t0.c87 THEN 0.4025154138347703 END)*(((v0.c1)%(NULL)))) ASC  NULLS LAST;SELECT DISTINCT CASE WHEN (x'd581' IN (rt0.c0)) THEN rt1.c2 COLLATE RTRIM WHEN ((((((((((((v0.c0)AND(rt1.c3)))AND(v0.c0)))OR(rt0.c0)))OR(rt1.c2)))AND(v0.c1)))AND(rt1.c1)) THEN ((((rt0.c0)AND('')))OR(v0.c2)) WHEN ((((((((v0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt1.c2)))OR(rt1.c3)) THEN ABS(DISTINCT v0.c0) END FROM t0;SELECT DISTINCT MIN(((v0.c2) IS FALSE)) FROM v0, t0, rt1, rt0 WHERE (ABS('-1' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((MIN(0.42752995396435356)) IS TRUE) FROM v0, rt1, rt0 WHERE (((((x'') NOT BETWEEN (0.5020426457531099) AND (0X622fd5e8))) IS FALSE)) GROUP BY ((((NULL) BETWEEN (v0.c0) AND (rt0.c2)))<<((rt0.c2 IN ()))) HAVING (((+ (v0.c2))) NOT BETWEEN (((t0.c38)IS(rt1.c1))) AND (((t0.c87) NOT BETWEEN (v0.c0) AND (rt0.c2))));SELECT DISTINCT ((v0.c2)+(NULL)) COLLATE RTRIM, ((((CASE WHEN v0.c1 THEN NULL END)AND(0.3809701127994233)))OR((~ (rt0.c1)))), CAST(((rt1.c3)<<(v0.c0)) AS INTEGER) FROM v0 WHERE ((- (CAST(NULL AS REAL)))) LIMIT -372031379 OFFSET 1527499306;SELECT NTH_VALUE(UPPER(((('[Fp*,#''n'))>=((rt0.c2)))), CASE t0.c38 COLLATE RTRIM  WHEN 0.9104837366493387 THEN rt1.c2 COLLATE RTRIM END) OVER () FROM v0, rt0, rt1 NOT INDEXED, t0 UNION ALL SELECT ALL ((rt0.c2) NOT BETWEEN ((((t0.c38)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))) AND ((- (rt0.c0)))) FROM t0, rt1, v0, rt0 WHERE (LTRIM(((NULL)+('')))); -- 0ms;
SELECT DISTINCT ((rt1.c3) ISNULL) COLLATE RTRIM FROM t0, v0 WHERE ((((0x622fd5e8, ((0.43964981248554635) BETWEEN (0.05657063744082913) AND (5.51556273E8)), CAST(x'' AS NUMERIC)))>((NULL COLLATE NOCASE, ((NULL) IS FALSE), CASE WHEN x'95d3c841' THEN x'' END))));SELECT ((((0.34940054818577015)OR((((''))>((t0.c38))))))AND((+ (rt1.c0)))) FROM t0, rt0;SELECT (NOT (((t0.c38) IS FALSE))) FROM t0, rt0, rt1 LIMIT -1217456461 OFFSET 832546972; -- 0ms;
SELECT DISTINCT CAST(COUNT(t0.c38) AS BLOB) FROM rt1, t0 WHERE (NULL); -- 0ms;
SELECT ALL ((((((((((((('-1275216956')AND('\r~Ks#D')))AND(rt0.c2)))AND(rt1.c2)))OR(rt0.c0)))OR(rt1.c2)))OR(v0.c1)) IN (CAST(t0.c38 AS TEXT))), ((((rt1.c0)%(rt1.c1))) NOT BETWEEN (((rt1.c0)<>(NULL))) AND (((v0.c1)LIKE(rt0.c2)))), (((v0.c2) IS FALSE) IN ()) FROM t0, rt0, rt1, v0; -- 0ms;
SELECT DISTINCT ((((((v0.c2) BETWEEN (v0.c2) AND (v0.c2)))AND((rt1.c2 IN ()))))OR(CAST(v0.c1 AS BLOB))) FROM t0, rt0, v0 ORDER BY (((COALESCE(DISTINCT x'9a0b', rt1.c3)))<(((((v0.c0, rt0.c0, rt1.c1)) BETWEEN ((rt0.c0, t0.c87, rt1.c1)) AND ((rt0.c2, rt1.c1, rt0.c0)))))) ASC, (((v0.c2)<=('497547369')) IN ((rt1.c1 IN ()))) DESC  NULLS FIRST LIMIT -1473250859;SELECT DISTINCT ((((v0.c0) BETWEEN (rt1.c2) AND (rt0.c2))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(rt1.c3)) AND (((rt1.c1)>=(t0.c38)))), LIKELY(DISTINCT (+ (rt1.c1))), (((~ (rt1.c1)))|(((rt1.c1) BETWEEN ('%oOZ)mZO') AND (rt1.c3)))), NTH_VALUE((((((rt1.c3)) NOT BETWEEN ((v0.c1)) AND ((NULL)))) BETWEEN (rt0.c0 COLLATE NOCASE) AND ((((t0.c38, rt1.c0, 'YDKKw沌')) NOT BETWEEN ((rt1.c0, rt0.c0, rt0.c0)) AND ((rt1.c3, rt1.c3, rt1.c3))))), CASE (v0.c0 IN ())  WHEN MAX(t0.c38, rt0.c1) THEN ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) END) OVER (), RANK() OVER () FROM v0, t0, rt0, rt1; -- 6ms;
SELECT DISTINCT ((t0.c87) NOTNULL) FROM rt0, t0, rt1, v0 WHERE ((((((0.2339190606081436)OR(NULL)))OR(0.8690990926722153)) IN (0.4183781454487008 COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((((((((((CASE WHEN v0.c2 THEN rt1.c3 WHEN v0.c2 THEN rt1.c3 WHEN x'' THEN rt1.c3 WHEN rt1.c3 THEN v0.c2 WHEN rt0.c1 THEN 1.189167816E9 END)OR((v0.c1 IN (rt0.c2)))))AND((rt0.c1 IN ()))))AND((rt0.c1 IN ()))))OR(((v0.c1)&(rt1.c0)))))AND((((v0.c1)) NOT BETWEEN ((t0.c87)) AND (('724038196'))))))AND(((t0.c38) NOT BETWEEN (rt1.c3) AND (v0.c2)))) FROM rt0;SELECT NULL FROM rt1, t0, v0, rt0; -- 1ms;
SELECT ((rt0.c0)*(((((v0.c0)OR(rt0.c1)))AND(v0.c2)))) FROM rt1, t0, rt0 WHERE (((- ('N%Bp')) IN (TRIM(DISTINCT '489584469', NULL), 0.8367934075286813 COLLATE BINARY)));SELECT DISTINCT x'' FROM v0 WHERE (CAST(0x5801ada9 AS NUMERIC)); -- 0ms;
SELECT ((CASE v0.c1  WHEN t0.c38 THEN rt0.c1 ELSE v0.c2 END)>(CAST(rt1.c0 AS TEXT))), ((CAST(rt0.c1 AS REAL))-(NULL)), NULLIF(((t0.c87) BETWEEN (rt1.c2) AND (rt0.c1)), ((t0.c87) NOT NULL)) FROM v0, rt1, rt0;SELECT DISTINCT ((((rt0.c0)IS(rt0.c1))) BETWEEN ((((t0.c87))<=((t0.c38)))) AND (NULLIF(DISTINCT rt1.c3, rt0.c1))), ((((v0.c0)>=(rt0.c0)))OR((NOT (rt0.c2)))), GROUP_CONCAT(CASE WHEN rt1.c0 THEN rt0.c0 WHEN t0.c87 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 ELSE rt1.c1 END) OVER (), ((((rt0.c1)AND(v0.c0)))<>('1863010574')), ((((((t0.c87) ISNULL))AND(((((((((t0.c87)OR(rt1.c0)))AND(0.2688697697788325)))AND(v0.c2)))OR(rt0.c1)))))OR(((rt1.c3)OR(t0.c87)))), (+ (CAST(v0.c1 AS TEXT))), (((- (v0.c0)))<<(json_quote(rt0.c1))) FROM v0, rt0, t0 ORDER BY (((((v0.c2)-(rt1.c1))))=((((rt0.c0)%(0.049525495998511526)))));SELECT CASE WHEN CAST(v0.c0 AS REAL) THEN ((rt1.c1)GLOB(rt0.c0)) WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (t0.c38)) THEN (((rt1.c1)) BETWEEN ((t0.c38)) AND ((v0.c1))) WHEN v0.c0 THEN ((((rt1.c3)AND(rt1.c2)))OR(rt0.c0)) ELSE rt1.c1 COLLATE NOCASE END FROM rt0, v0, t0;SELECT DISTINCT TOTAL((('77293730')-(rt0.c1))) OVER () FROM rt1;SELECT DISTINCT TOTAL(CAST(rt1.c0 AS REAL)) FROM t0, rt0, rt1 WHERE (((((((x'')AND(-148669104)))AND(x'b8f1')))OR(CAST('1476505001' AS NUMERIC)))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END)<<('-1473250859' COLLATE NOCASE)), (+ (COUNT(rt1.c2))), ((rt1.c0)&(0.33773440673974153)) FROM rt1, v0, rt0 WHERE (((x'') IS TRUE) COLLATE BINARY) ORDER BY CAST(('' IN ()) AS BLOB) ASC, '116007443'  NULLS FIRST, ((CAST(t0.c38 AS BLOB)) BETWEEN (UNICODE('')) AND (rt1.c0));SELECT (TRIM(rt1.c1) IN (((rt0.c2) NOT BETWEEN (rt1.c2) AND ('cp')), TYPEOF(v0.c2))) FROM v0, t0;SELECT DISTINCT ((((((t0.c38) IS FALSE))OR(((717207055) NOT BETWEEN (v0.c2) AND (rt1.c2)))))OR(((rt1.c1)!=(rt1.c2)))) FROM rt1, v0, rt0 WHERE (((UPPER(DISTINCT x'')) IS FALSE));SELECT ALL CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE FROM rt1;SELECT ALL ((~ ('1733258294')) IN ()) FROM rt0 WHERE (((~ (x'')) IN (((((1.730038478E9)AND('1664703598')))OR(NULL))))); -- 1ms;
SELECT DISTINCT x'', LEAD(((CAST(v0.c0 AS REAL)) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND (((x'') IS TRUE))), CASE WHEN ((rt0.c1)LIKE(0.0921283942083635)) THEN ((rt0.c0)LIKE(rt0.c2)) ELSE '' END, (((((('0.8413783557438456')OR(v0.c2)))OR(rt0.c2))) BETWEEN (COALESCE(DISTINCT rt1.c2, rt0.c1)) AND (rt1.c1))) OVER (), rt1.c3 FROM rt1, v0, rt0; -- 0ms;
SELECT ALL (((rt1.c1)) NOT BETWEEN (((~ (rt1.c2)))) AND ((((v0.c0) ISNULL)))) FROM v0 WHERE (CAST(NULL AS TEXT)) GROUP BY CAST(LIKE(v0.c0, t0.c87, '☧') AS NUMERIC), (((v0.c2)<<(-1375692984)) IN ()), CASE WHEN (rt1.c2 IN ()) THEN ((x'1678') ISNULL) WHEN ((v0.c0)=(rt0.c2)) THEN t0.c38 COLLATE BINARY WHEN (((v0.c2, t0.c38, rt1.c3))>=((rt0.c0, rt0.c2, rt0.c1))) THEN (rt1.c0 IN ()) END HAVING ((((rt1.c0) IS FALSE))+(((((rt1.c1)AND(rt1.c2)))OR(rt0.c1))));SELECT DISTINCT ((((rt0.c2)|(rt0.c0)))+((- (rt1.c1)))) FROM t0, rt1, rt0, v0 WHERE ((((616124730)&('')) IN ())); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, v0 WHERE (((CASE '-1473250859'  WHEN NULL THEN '>L' ELSE '꤀' END) IS FALSE)); -- 0ms;
SELECT ((CASE WHEN t0.c87 THEN t0.c38 ELSE rt1.c1 END) NOT BETWEEN ((((rt1.c1))<=((t0.c38)))) AND (SQLITE_SOURCE_ID())) FROM rt0, v0, rt1 WHERE (((((-1.275216956E9 COLLATE BINARY)OR(((x'') NOT BETWEEN ('!B~9}_') AND ('igx)r-q')))))OR(NULL))) GROUP BY TRIM(((((v0.c1)OR('415890076')))OR(v0.c2))), ((CASE WHEN rt0.c0 THEN rt1.c2 ELSE v0.c2 END) BETWEEN ((rt1.c1 IN ())) AND ((rt1.c2 IN ()))), (rt0.c1 IN ());SELECT DISTINCT ((0X49b68a2)>>(TOTAL(rt1.c3))), MAX(((t0.c87) BETWEEN (v0.c0) AND (rt1.c0))), (CASE WHEN rt1.c3 THEN v0.c1 WHEN t0.c38 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END IN ()) FROM t0, rt1 WHERE (CAST((~ ('')) AS TEXT));SELECT DISTINCT (((v0.c2 IN ())) ISNULL), MIN(((((((((v0.c1)AND(t0.c38)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c38))), COUNT(*) FROM rt0, rt1, v0;SELECT ALL SUM(((((((((v0.c1)OR(rt1.c2)))OR(rt1.c0)))OR(x'75bc')))AND(rt0.c2))) OVER () FROM t0, v0 WHERE (((((x'')&(NULL))) IS FALSE)) GROUP BY TRIM((rt0.c1 IN ())) HAVING (('' COLLATE NOCASE)<(rt1.c1 COLLATE RTRIM));SELECT (CAST(v0.c2 AS INTEGER) IN (((1757597248)*(v0.c2)))), ((((rt1.c1))<=((rt1.c3))) IN (rt1.c3, v0.c2)), rt0.c1 FROM rt0, t0 GROUP BY IFNULL(((((((((t0.c38)OR(v0.c1)))OR(rt0.c0)))OR(rt1.c0)))AND(rt1.c2)), CAST(rt1.c3 AS REAL));SELECT DISTINCT (((t0.c87) ISNULL) IN ()) FROM v0, rt1; -- 0ms;
SELECT TOTAL(LIKELY(t0.c87)), (((((((('')AND(t0.c87)))OR(v0.c0)))AND(CHAR(rt1.c0))))OR(((((-1.360950698E9)AND(v0.c2)))AND(rt1.c1)))), v0.c0 FROM t0, v0;SELECT ((((43351144) NOT BETWEEN (rt0.c0) AND (rt1.c2))) NOT NULL) FROM t0, v0, rt1 WHERE ((NOT (UNICODE('967118562'))));SELECT (((rt1.c2 IN ())) BETWEEN (((v0.c0)GLOB(NULL))) AND (((x'') NOT NULL))) FROM rt0;SELECT DISTINCT 0.9809009920396324 FROM rt0; -- 1ms;
SELECT (((SUM('1738029081'), ((v0.c0) NOT NULL), TOTAL(rt1.c2)))<((COUNT(*), ((((1544701281)OR(v0.c2)))AND(rt0.c1)), 1506458759))) FROM rt1, t0 WHERE ((((((((((NOT ('')))OR((((((((('719979997')AND(NULL)))OR(0.1576224685187506)))AND(0Xffffffffab16676a)))AND(x'')))))AND((~ (-1249493132)))))AND(NULL)))OR((((('-1473250859')OR(x'')))OR(x'')))));SELECT ((CAST(t0.c87 AS INTEGER)) NOT NULL) FROM v0, rt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((((-418802743)/(t0.c38)))LIKE(t0.c87 COLLATE RTRIM)) FROM v0, t0 WHERE (((UNLIKELY(DISTINCT 0.5751375343163758)) BETWEEN (-1.017526968E9) AND (('' IN ())))) GROUP BY (((((((((t0.c38)OR(v0.c1)))OR(v0.c2)))OR(rt1.c2)))OR(v0.c2)) IN (((t0.c38)<=(v0.c0)))), LIKELIHOOD(DISTINCT (((0.7277869959550552, rt1.c0, t0.c87))<=((rt1.c2, rt1.c2, rt0.c0))), 0.15500673204979765), rt0.c1 LIMIT -1533016969;SELECT DISTINCT (((((rt0.c1, v0.c1, t0.c87))<=((v0.c0, t0.c87, v0.c2)))) IS TRUE), GROUP_CONCAT((((rt1.c3, v0.c0, v0.c2))=((v0.c0, rt0.c0, rt1.c3)))), (- ((rt0.c2 IN ()))), rt0.c1, (((rt1.c0))>((rt1.c3))) COLLATE BINARY FROM rt0 WHERE (ABS((1527499306 IN (x'')))) ORDER BY ((v0.c2)|((NOT (rt1.c2)))) DESC  NULLS FIRST;SELECT ALL CASE rt0.c0 COLLATE BINARY  WHEN SUM(v0.c0) THEN (((rt1.c3, t0.c38, NULL))>=((rt1.c1, rt1.c1, rt1.c3))) END FROM rt0, rt1, v0 WHERE (((CASE WHEN 0X6bca7a02 THEN '247136386' END) IS TRUE));SELECT ALL ((0.9348323927429569 COLLATE NOCASE)%(CAST(v0.c2 AS INTEGER))) FROM v0 WHERE (TRIM(DISTINCT ((x'')<>('')))); -- 0ms;
SELECT ((((((rt0.c2))<((t0.c87)))))<>(((('2117766603') IS TRUE)))), ((TOTAL(rt0.c2))<<(CAST(rt1.c0 AS NUMERIC))), 0.5624713747456372 FROM rt0, v0, rt1 WHERE ((+ (json_array_length('1506458759'))));SELECT DISTINCT CASE WHEN (~ (rt1.c2)) THEN ((t0.c38)*(v0.c0)) ELSE ((((rt0.c1)AND(rt1.c2)))OR(rt1.c0)) END FROM rt0, t0, v0, rt1 WHERE ((((((((x'')OR('')))AND('-9223372036854775808'))))>=((IFNULL(NULL, '0.1586940896709076'))))) ORDER BY -215657879  NULLS FIRST, CAST(ABS(rt1.c1) AS INTEGER) DESC;SELECT ALL x'' FROM rt0 RIGHT OUTER JOIN rt1 ON UPPER(v0.c1 COLLATE RTRIM);SELECT DISTINCT SUM((x'' IN ())) FROM rt0, t0, rt1, v0 WHERE (CASE WHEN x'' THEN '0.9104837366493387' WHEN 1.757597248E9 THEN 0.7987958293368748 WHEN '' THEN 0.2339190606081436 END COLLATE NOCASE); -- 0ms;
SELECT (((rt1.c3 COLLATE NOCASE))!=((('Igx)r-q' IN (rt1.c0, 0.2527896735382903))))) FROM t0 WHERE (((CAST(x'' AS INTEGER)) NOT BETWEEN (((NULL) IS TRUE)) AND (CAST(NULL AS INTEGER))));SELECT DISTINCT SUM(LIKELY(rt0.c2)) FROM rt0, t0 WHERE ((((0.7531688681451687, 0.42058522130446796, 'Yag')) NOT BETWEEN ((CASE WHEN 'JHZz*-' THEN NULL END, NULL COLLATE RTRIM, ((0.8367934075286813)%(NULL)))) AND (((('311397242')GLOB(0.3195479128440232)), ((((0.8929517441580848)OR(NULL)))OR(0xfffffffff18458ae)), ((0.5218904632382474) BETWEEN (NULL) AND (x'')))))); -- 0ms;
SELECT DISTINCT CAST(t0.c87 AS TEXT) COLLATE RTRIM, (- (rt1.c1)) COLLATE BINARY COLLATE NOCASE, ((v0.c2) IS TRUE) FROM t0, v0, rt1; -- 1ms;
SELECT ALL MIN(SUM(((rt1.c2) NOTNULL))) FROM rt1, v0, t0 WHERE ((((+ ('')))<<((('hD䔑') IS TRUE))));SELECT ALL QUOTE(CASE WHEN v0.c1 THEN v0.c1 END), (- (CAST(NULL AS TEXT))), CASE WHEN GROUP_CONCAT(NULL) THEN rt1.c1 ELSE CASE WHEN rt1.c2 THEN t0.c38 ELSE rt1.c1 END END FROM v0, t0, rt1 WHERE ((CAST(0.22051004298348842 AS TEXT) IN ())); -- 0ms;
SELECT DISTINCT v0.c2 FROM t0 WHERE ((('-418802743') NOT BETWEEN (NULL) AND (x'')) COLLATE NOCASE);SELECT DISTINCT ((((0.5447932197554621)OR(CAST(rt0.c2 AS INTEGER))))AND(((((rt0.c0)AND(rt1.c3)))OR(rt1.c2)))) FROM rt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY)*(rt1.c2)) FROM v0, rt1 WHERE ((((+ ('')))>=(((NULL)AND(NULL)))));SELECT DISTINCT ((((t0.c38)/(rt1.c1))) BETWEEN ((NOT (rt1.c0))) AND (COUNT(*))), CASE NULL  WHEN NULL COLLATE RTRIM THEN (- (rt1.c1)) WHEN ('LN-k*>o^J' IN ()) THEN rt0.c0 COLLATE NOCASE WHEN NULLIF(DISTINCT v0.c0, rt1.c3) THEN ((rt0.c1) NOTNULL) END, CUME_DIST() OVER (), AVG(((((rt1.c1)AND(t0.c38)))OR(rt0.c0))), TOTAL(((x'')>(rt1.c2))) FROM t0, v0 WHERE ((((NOT (0.01228307826984032)))-((('-1898429482') ISNULL))));SELECT (NOT (CAST(v0.c2 AS TEXT))) FROM t0, rt0;SELECT DISTINCT rt0.c0 COLLATE RTRIM FROM t0, v0, rt1;SELECT ALL ((0.7887545716449753 COLLATE BINARY)/(UPPER(t0.c87))), (((rt1.c1)) BETWEEN ((((rt1.c2)-(rt1.c2)))) AND ((CAST(rt1.c0 AS BLOB)))), (((CAST(t0.c38 AS BLOB)))>=((((v0.c1) IS TRUE)))) FROM rt1, v0, t0, rt0 GROUP BY ((v0.c0)GLOB(rt0.c2)) COLLATE BINARY HAVING (((t0.c38)) BETWEEN (((NOT (x'9a8a')))) AND ((CASE rt0.c2  WHEN rt1.c3 THEN rt1.c0 END))); -- 0ms;
SELECT ALL 0.05319709342760348 FROM t0, rt0, rt1; -- 0ms;
SELECT LAST_INSERT_ROWID() FROM rt1, v0, t0 WHERE ((NOT (NULL)) COLLATE RTRIM) GROUP BY (((v0.c0) BETWEEN (v0.c1) AND (t0.c87)) IN (((((v0.c0)AND(v0.c1)))AND(t0.c38)))), (ROUND(rt0.c2, '2v6e[Q''') IN ()), LIKELIHOOD(0.08291248409459417 COLLATE NOCASE, 0.1610803215641179); -- 0ms;
SELECT ALL CASE WHEN ((rt1.c1)&(v0.c1)) THEN CAST(t0.c38 AS REAL) WHEN rt0.c2 THEN (NULL IN ()) WHEN rt1.c3 THEN ((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c38)) ELSE MIN(v0.c1) END FROM rt0 NOT INDEXED, v0, t0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c3) NOT BETWEEN (v0.c0) AND (t0.c38))) FILTER(WHERE MIN((((v0.c1, rt1.c2, rt0.c0)) BETWEEN ((v0.c2, t0.c38, t0.c87)) AND ((rt1.c2, rt0.c2, rt1.c0))), NULL)) OVER (), (((~ (rt0.c1)))&(((rt1.c1)!=(t0.c87)))), (((t0.c38)) BETWEEN ((((rt0.c1) BETWEEN (rt1.c3) AND (v0.c0)))) AND (('7m' COLLATE RTRIM))) FROM v0, t0, rt1, rt0 WHERE (NULLIF(DISTINCT '2.Kv!+U', NULL) COLLATE NOCASE); -- 0ms;
SELECT ((NOT (0Xffffffffc359c548)) IN ()), rt0.c1, (NOT (CASE WHEN t0.c87 THEN t0.c87 END)) FROM rt0, t0 LIMIT 434714202 OFFSET -555293998; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS BLOB))<=(rt1.c2 COLLATE BINARY)), 0Xffffffff8e7dfc2f, ((CAST(NULL AS TEXT)) IS TRUE) FROM t0, rt1, rt0, v0; -- 0ms;
SELECT ALL ((((v0.c0)*(v0.c2))) ISNULL), ((t0.c38)*(rt1.c1 COLLATE BINARY)), (- (rt1.c1)), MIN((((t0.c87)) BETWEEN ((v0.c0)) AND ((rt1.c1)))), v0.c0 FROM v0 WHERE (((json_extract(0x5ee9d89d, -605080183)) NOT BETWEEN (('' IN ())) AND ((~ (5.51556273E8)))));SELECT DISTINCT CAST((t0.c87 IN ()) AS REAL) FROM rt1, v0, rt0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((t0.c87) BETWEEN (rt0.c0) AND (v0.c0)), (v0.c1 IN (rt1.c0)), (t0.c87 IN (x'806dcd6168ad')), ((('1')) BETWEEN ((0.2939166214519279)) AND ((t0.c87)))), TRIM(DISTINCT (+ (v0.c0))), (CAST(x'' AS NUMERIC) IN ()) FROM rt1 LIMIT -942504635;SELECT DISTINCT ((((((((rt1.c3)AND(rt1.c0)))AND(v0.c1)))AND(rt0.c1)))OR(rt0.c2)) COLLATE BINARY COLLATE RTRIM FROM t0, v0;SELECT DISTINCT (CAST(rt0.c2 AS INTEGER) IN (NULL)) FROM rt0, rt1 GROUP BY NULL HAVING ((((((((rt1.c2)AND((NOT (t0.c87)))))AND((+ (v0.c2)))))AND(('5344181648361572991-1456--6446836972806750186T3023149255247191226-1474 -6888356729545680434 ' IN ()))))AND(rt0.c2 COLLATE RTRIM)); -- 1ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c0)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((((rt1.c0)OR(t0.c38)))OR(v0.c0)))), (((rt1.c0) NOT BETWEEN (rt0.c1) AND (NULL)) IN ()), (((((rt1.c0))<((v0.c2))))=((t0.c38 IN ()))) FROM t0, rt1;SELECT ABS(DISTINCT ('&sbh' IN ())) FROM t0, rt1, v0 WHERE (CASE WHEN ((NULL) NOT BETWEEN ('0.6075686102086664') AND ('2018469481')) THEN ((0.6300984889454403) IS TRUE) END); -- 0ms;
SELECT (~ (rt1.c3 COLLATE BINARY)) FROM t0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((t0.c87)/(rt0.c1)))AND(rt1.c3)))AND(CASE WHEN v0.c2 THEN rt1.c0 END)) FROM rt0, t0 WHERE ((- (((((NULL)AND(NULL)))OR(x'20df')))));SELECT ALL CAST(rt0.c2 AS REAL) COLLATE RTRIM, ((v0.c0 IN ()) IN ()), CASE (rt0.c0 IN (NULL))  WHEN (NOT (v0.c1)) THEN CASE v0.c2  WHEN v0.c2 THEN rt1.c2 END END FROM v0 GROUP BY ((((rt1.c3) NOTNULL))+(((((rt0.c0)OR(rt1.c0)))AND(t0.c38)))) HAVING x'' LIMIT -1201138152 OFFSET 881906342;SELECT ((((((((v0.c0)AND(AVG(v0.c0))))OR(COUNT(rt1.c2))))AND(((t0.c38)+(rt0.c0)))))OR(json_quote(rt0.c2))) FROM t0, rt1, rt0 WHERE ((- (CASE 26633560  WHEN x'' THEN x'' END)));SELECT DISTINCT ((t0.c87)IS NOT(v0.c0)) FROM v0 WHERE (((0.43489836735107956) BETWEEN (x'') AND (NULL)) COLLATE BINARY);SELECT DISTINCT 0.5662305949873018 FROM t0, rt1, rt0 WHERE (IFNULL(CAST(0.55276965471831 AS NUMERIC), 0.6700477976033559 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (((rt1.c2, v0.c0, rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt1.c3)))AND(rt1.c3)), ((v0.c0) IS FALSE), ((rt1.c3) ISNULL))) AND ((COUNT(*), ((rt0.c0)/(v0.c1)), ((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))), ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))) BETWEEN (((rt1.c1)*(rt0.c1))) AND (v0.c2 COLLATE NOCASE)), (((~ (rt1.c3))) BETWEEN (TYPEOF(v0.c2)) AND ('-774903260')), (NOT ((rt1.c1 IN ()))), (rt1.c1 IN ()) FROM rt0 WHERE (((((0.4197566955626665)AND(((NULL)AND(x'')))))OR(((NULL) IS FALSE))));SELECT rt1.c3 FROM rt1, rt0, t0 WHERE ((((IFNULL(NULL, '')))>(((('290936275') NOT BETWEEN (x'e2a6b0bd') AND ('1889308158')))))); -- 0ms;
SELECT ALL ((((((((((v0.c0)OR(NULL)))OR(rt0.c0)))AND(rt1.c1)))OR(rt0.c0))) NOT BETWEEN (MIN(t0.c38)) AND (rt1.c0 COLLATE BINARY)) FROM v0, rt0 LIMIT -74508432;SELECT DISTINCT MIN('-0.0') FROM rt1, rt0, t0 WHERE ((('妗7R0') NOT BETWEEN ((((x'')) NOT BETWEEN ((0.20303124799125682)) AND (('1765074509')))) AND (((x'') NOT BETWEEN (NULL) AND (x''))))) GROUP BY '', (((rt1.c0) NOT BETWEEN (v0.c1) AND (t0.c87)) IN (((((((((t0.c38)OR(v0.c1)))OR(v0.c2)))OR(v0.c1)))OR(rt0.c1)))), (((((rt1.c2)) NOT BETWEEN ((v0.c1)) AND ((rt0.c0)))) NOTNULL) HAVING (((CASE rt1.c3  WHEN v0.c1 THEN rt1.c3 END))<=((((rt0.c1)<(rt1.c1)))));SELECT ALL CASE WHEN COUNT(t0.c87) THEN ((t0.c87)/(v0.c0)) WHEN ((rt0.c1)<(rt0.c0)) THEN ((v0.c2) IS TRUE) WHEN COUNT(*) THEN ((rt0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)) ELSE (rt1.c1 IN ()) END FROM rt0, v0, rt1, t0; -- 0ms;
SELECT (((rt0.c1, t0.c38, rt0.c2)) NOT BETWEEN ((CAST(rt1.c3 AS INTEGER), TRIM(DISTINCT rt0.c2, v0.c1), (- (t0.c87)))) AND ((rt1.c2 COLLATE RTRIM, (((v0.c2))<((rt1.c0))), MAX(t0.c38)))), ((rt0.c0)<>(v0.c1)) COLLATE RTRIM COLLATE BINARY, rt1.c3 FROM rt0;SELECT ALL (+ (((t0.c38) NOT BETWEEN (t0.c38) AND (rt0.c2)))) FROM t0, rt0; -- 0ms;
SELECT ALL ((((rt1.c2)>=('2115784960'))) NOT BETWEEN ((~ (0.3434154146527769))) AND (CAST('' AS BLOB))) FROM rt0 WHERE (x'');SELECT ALL ((CASE WHEN v0.c2 THEN v0.c1 ELSE rt0.c0 END)GLOB(((rt0.c1)|(t0.c87)))) FROM t0, v0, rt1, rt0 WHERE (((CASE 'z[qaꕟlM'  WHEN NULL THEN '-1817723607' ELSE x'' END)OR(x'0875' COLLATE NOCASE))); -- 0ms;
SELECT ALL CAST((~ (rt0.c1)) AS TEXT) FROM v0, t0 LIMIT 1733258294 OFFSET -375586900;SELECT DISTINCT (((((NOT (rt1.c0)))OR(AVG(v0.c2))))AND(rt1.c3 COLLATE RTRIM)) FROM t0, v0, rt0 WHERE (json_array_length(x''));SELECT (NOT (((rt1.c2)OR(t0.c87)))) FROM t0, rt0, v0 WHERE (((((((x'') BETWEEN (0.08291248409459417) AND ('Mg{v9MrD')))AND(x'')))OR((((-1163153104, 0.36622833746802486, '<.)'))>=((x'', x'', NULL))))));SELECT LIKELIHOOD(DISTINCT rt1.c3, 0.4801900410554357) FROM rt0 WHERE (((CASE x''  WHEN 0.7531688681451687 THEN 0.36411352613706227 END)<=((('jhzz*-') NOTNULL))));SELECT v0.c2, (((t0.c38 IN (rt1.c3, rt0.c2))) BETWEEN (CAST(t0.c87 AS BLOB)) AND (NULL)), (((((t0.c38)=(v0.c2))))<((((rt1.c2) NOT BETWEEN (v0.c1) AND (v0.c0))))) FROM t0, rt1, rt0 ORDER BY CASE v0.c0  WHEN rt0.c1 THEN t0.c38 ELSE t0.c38 END COLLATE RTRIM ASC;SELECT ALL (((v0.c0)) NOT BETWEEN ((((rt1.c0) BETWEEN (x'') AND (rt0.c0)))) AND (((((('1466014774')AND(rt1.c2)))AND(t0.c38))))) FROM t0, rt1;SELECT (((x'', v0.c2, v0.c1)) BETWEEN ((v0.c0, v0.c0 COLLATE NOCASE, ((rt0.c0) ISNULL))) AND ((((rt0.c1)LIKE(rt1.c3)), GROUP_CONCAT(t0.c87), ((rt1.c0)IS NOT(rt1.c1))))), SUM(((rt0.c0)>(rt1.c2))) OVER ( PARTITION BY (~ (DATETIME(t0.c38, rt0.c2, rt1.c2))), ((((((v0.c1)OR(rt0.c0)))AND(rt1.c2))) BETWEEN ((((rt1.c3))<=((rt1.c3)))) AND (((rt0.c1)<<(t0.c38))))), (NOT (((((rt1.c3)OR(rt0.c1)))OR(rt0.c1)))), (v0.c0 COLLATE RTRIM IN ()), ((CAST(rt0.c0 AS REAL)) NOT BETWEEN ('A8') AND (rt0.c0)) FROM rt1, t0;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY rt0.c1 ASC  NULLS LAST) FROM rt0, t0 LIMIT 667214048 OFFSET -1633120009; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT v0.c1 COLLATE BINARY) FROM rt0, rt1 WHERE (((((((NULL, 0.4893243158717058, '-1034744385', '2057780741', NULL))>((0.41916678463775403, '972947238', x'6bd3', NULL, NULL))), CASE '83邋nCR*඿B'  WHEN x'' THEN '敠g' WHEN 0.39823523541370376 THEN x'' WHEN 'abw2EE믄\n' THEN NULL WHEN 0.9100083478520636 THEN '褙h*7' WHEN NULL THEN 0Xffffffff99ba2627 END, CAST(0.4866030240912861 AS TEXT)))<((CASE WHEN '15125773' THEN '()' END, (('-1857599159')AND('/o?䠊,㴈HaO')), ((0.32820522678947917)>(0.5219074269916903))))));SELECT DISTINCT TOTAL(((rt0.c1) IS FALSE)) OVER () FROM t0, v0 WHERE ((((((+ ('-1030793079')))AND(SQLITE_SOURCE_ID())))AND((('-1741767681') NOT BETWEEN ('') AND (1.680115734E9))))) LIMIT 1893620377 OFFSET -1413831258;SELECT (((rt0.c1)&(t0.c38)) IN ()) FROM t0, rt0 WHERE (''); -- 0ms;
SELECT DISTINCT ((LIKE(rt0.c2, rt0.c2))IS NOT((('') NOT BETWEEN (v0.c2) AND (rt1.c1)))) FROM rt0, v0 WHERE (((((NULL) BETWEEN (x'') AND (''))) IS TRUE));SELECT DISTINCT v0.c1 FROM rt0 WHERE (CAST(((NULL) IS FALSE) AS NUMERIC)) GROUP BY (((0.22051004298348842))<((CASE x''  WHEN rt1.c2 THEN rt1.c0 WHEN t0.c87 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c0 WHEN v0.c1 THEN rt1.c2 WHEN v0.c2 THEN rt1.c1 WHEN v0.c2 THEN rt1.c3 WHEN t0.c38 THEN rt1.c0 ELSE rt1.c2 END)));SELECT COUNT((0.7784239920481905 IN (rt1.c1))) OVER () FROM v0, t0, rt0, rt1 WHERE ((((('1711690569') NOT NULL))=(((('')) BETWEEN (('KoYHx')) AND ((0.05657063744082913)))))); -- 0ms;
SELECT ALL COUNT(rt0.c0) OVER () FROM v0, t0 GROUP BY (((NOT (t0.c38))) ISNULL) HAVING (((v0.c2, v0.c2, t0.c38)) NOT BETWEEN ((CAST(v0.c2 AS BLOB), ((rt0.c2) ISNULL), ((0xfffffffff7131269) NOT NULL))) AND ((x'' COLLATE BINARY, HEX(rt0.c0), (NOT (t0.c38)))));SELECT ALL (~ (v0.c2)) COLLATE RTRIM FROM rt1, v0, t0, rt0; -- 0ms;
SELECT (((rt0.c1 IN ())) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1)))) AND ((rt0.c2 IN (rt1.c2)))), TOTAL(TRIM(rt0.c1)) OVER (), ((t0.c87) NOT BETWEEN (((((rt0.c2)AND(rt1.c1)))OR(v0.c2))) AND (((rt1.c1)>(rt0.c2)))), (((CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN v0.c1 WHEN rt0.c0 THEN '' ELSE v0.c1 END, highlight(0.08775472678691065, v0.c1, v0.c2, v0.c0), (rt1.c2 IN (t0.c38, t0.c87, rt1.c2))))>((((((rt1.c0)OR(rt1.c2)))OR(v0.c2)), (~ (v0.c0)), (('674513418') ISNULL)))), x'' COLLATE NOCASE FROM rt1, v0, t0 WHERE (((((COALESCE(x'aca2', x''))AND(json_quote(''))))OR(CASE WHEN NULL THEN x'' ELSE 0.017773606208738357 END)));SELECT x'082d', ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((rt1.c1))) IN ()), CASE WHEN 1.381556558E9 THEN CAST(rt0.c1 AS INTEGER) ELSE ((v0.c1) IS FALSE) END FROM t0, v0;SELECT ALL ((((((((TOTAL(rt0.c1))OR((rt1.c1 IN ()))))AND(NULL)))OR((v0.c0 IN (rt1.c3, rt0.c0)))))AND(CAST(rt0.c1 AS NUMERIC))) FROM t0, rt0 WHERE (LOWER(DISTINCT CASE x''  WHEN 0.5413218600640456 THEN x'b265' END));SELECT ALL MAX(CASE WHEN rt1.c3 THEN t0.c87 ELSE NULL END), NULL, CAST((((t0.c87)) NOT BETWEEN ((t0.c87)) AND ((rt1.c2))) AS BLOB) FROM t0 WHERE ((((((((((((((('y')OR(-1731375704)))AND('')))OR(x'')))AND(x'')))OR(x'77111b06')))AND(-845968543)))IS NOT((((0Xffffffff825cb032))==((''))))));SELECT ALL rt0.c1, ((NULL)%(((((rt0.c0)OR(rt1.c3)))OR(v0.c1)))), ((((((t0.c38)-(v0.c1)))OR('()' COLLATE BINARY)))AND(((((v0.c2)AND(t0.c87)))AND(v0.c0)))) FROM rt0, rt1, t0 WHERE ((((('')<>(x'25d9'))) BETWEEN (((x'')GLOB(0.5698641608882372))) AND (0.3195479128440232)));SELECT '()', '1C<', LAG((NOT (((v0.c0) BETWEEN (rt1.c0) AND (t0.c38)))), (+ (((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1)))), v0.c0) OVER ( ORDER BY (~ (((v0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) DESC  NULLS FIRST) FROM t0, rt0, v0, rt1 ORDER BY CAST(rt0.c1 COLLATE BINARY AS BLOB)  NULLS FIRST; -- 0ms;
SELECT DISTINCT rtreenode(CAST(rt0.c0 AS BLOB), (rt1.c1 IN ())) FROM rt1, rt0, v0, t0; -- 0ms;
SELECT DISTINCT (+ (((v0.c1)<<(rt1.c2)))) FROM v0, rt0, rt1, t0 LIMIT -1341976037 OFFSET 1012694375; -- 1ms;
SELECT ALL TOTAL(ABS(v0.c2)) OVER (), COALESCE(DISTINCT CASE WHEN rt0.c0 THEN rt1.c1 END, LOWER(1355960681), TOTAL(v0.c1), ((((t0.c87)AND(rt1.c2)))AND(rt1.c1))), ROW_NUMBER() OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM v0, t0, rt1, rt0 WHERE (CAST(((('-1104655291')) BETWEEN (('-1360745173')) AND ((200163511))) AS NUMERIC)) ORDER BY HEX(((rt0.c2)|('-426737872')))  NULLS FIRST LIMIT 2064131437; -- 0ms;
SELECT DISTINCT CAST(((v0.c2) NOT BETWEEN (t0.c38) AND (v0.c1)) AS REAL), ((CASE WHEN v0.c1 THEN x'' END) NOT NULL), ((CASE WHEN t0.c87 THEN rt1.c0 END) ISNULL) FROM t0, rt0, rt1 WHERE (CASE 0.04605308135319108 COLLATE BINARY  WHEN CASE x''  WHEN 0.3270623692629958 THEN x'' WHEN x'ac06' THEN '337224312' WHEN '' THEN NULL WHEN '-1217456461' THEN NULL WHEN 0.5548402952569841 THEN 0X781757c4 ELSE x'' END THEN (((0.39911596564181406))<((NULL))) END) GROUP BY rt0.c2 HAVING json_quote(MAX(rt1.c2)) LIMIT 927311095 OFFSET 616124730;SELECT DENSE_RANK() OVER (), ((GROUP_CONCAT(rt1.c1))||((v0.c0 IN ()))), rt1.c3 FROM v0, rt1 WHERE ((('KoYHx' COLLATE RTRIM) NOTNULL)); -- 0ms;
SELECT ((((rt0.c1)LIKE(t0.c87))) NOT BETWEEN (((rt1.c0)+(''))) AND (v0.c1)), TOTAL(((((rt0.c0)OR(rt0.c2)))OR(v0.c0))) OVER (), GROUP_CONCAT((((rt0.c1, rt1.c2, rt1.c3))<>((rt1.c0, 0.27899646037183323, t0.c87))) COLLATE BINARY) OVER () FROM v0 WHERE (((CASE WHEN NULL THEN NULL ELSE NULL END)AND((x'6e16' IN ()))));SELECT ALL (((x'' COLLATE BINARY))<>((((rt1.c3)>>(v0.c0))))) FROM v0, rt0, t0, rt1 WHERE (NULL); -- 0ms;
SELECT TOTAL(CASE WHEN v0.c1 THEN v0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN v0.c0 THEN rt0.c2 END) FROM t0;SELECT DISTINCT (NOT (json_insert(rt1.c3, t0.c87, v0.c2))) FROM t0, rt0, v0, rt1; -- 0ms;
SELECT ALL x'' FROM rt0, rt1 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT DISTINCT NTILE(((IFNULL(v0.c2, 0.4197566955626665)) NOTNULL)) OVER () FROM v0 WHERE (CAST((~ (-1.163153104E9)) AS TEXT)); -- 0ms;
SELECT DISTINCT NTILE(((((t0.c38)OR(CASE t0.c38  WHEN t0.c87 THEN t0.c87 END)))AND(CAST(t0.c87 AS INTEGER)))) OVER () FROM t0;SELECT CASE (- (rt0.c1))  WHEN COALESCE(DISTINCT rt0.c0, NULL, rt1.c1, t0.c38) THEN (~ (t0.c87)) END, COALESCE(DISTINCT ((((v0.c0)OR(rt1.c2)))OR(rt0.c0)), ((rt1.c2)==(rt1.c2)), rt0.c0 COLLATE BINARY, json_array_length(v0.c1, x'')), COUNT(CAST(rt0.c1 AS INTEGER)) FROM t0 WHERE (CAST((('0.6567828854352609') NOT NULL) AS NUMERIC)) GROUP BY t0.c87, ((((v0.c1))>=((t0.c38))) IN ()), v0.c2, CASE rt1.c1 COLLATE NOCASE  WHEN ((v0.c0)IS(t0.c87)) THEN rt0.c1 COLLATE BINARY ELSE (((v0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END, ((CAST(t0.c38 AS TEXT))||(v0.c1)) HAVING AVG(AVG(((rt1.c2) NOT BETWEEN (t0.c38) AND (rt1.c3))));SELECT IFNULL(((v0.c1) BETWEEN (rt0.c0) AND (rt1.c3)), (((v0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1)))) FROM v0, rt1, rt0 ORDER BY (NOT (STRFTIME(rt1.c0, rt1.c0, '116007443')))  NULLS FIRST; -- 1ms;
SELECT ALL CASE ((((((((((((rt1.c2)OR(v0.c2)))OR(rt0.c0)))OR(v0.c1)))OR(rt0.c2)))AND(rt1.c1)))OR(rt0.c1))  WHEN ((t0.c38)<<(t0.c38)) THEN v0.c1 COLLATE RTRIM WHEN json_insert(rt0.c0, rt1.c3, v0.c1) THEN ((rt1.c2)<>(rt0.c2)) WHEN ((((rt0.c2)OR(t0.c87)))OR(rt0.c1)) THEN ((v0.c2)IS NOT(rt1.c0)) END, rt1.c3, 0.27400324371881657 FROM t0, rt0 NOT INDEXED, v0;SELECT ALL TRIM(rt1.c2), (rt1.c0 IN ()), PERCENT_RANK() OVER () FROM v0, rt1; -- 0ms;
SELECT CAST(HEX(DISTINCT 0.20589361881986767) AS TEXT) FROM t0, rt1 LIMIT -1473250859 OFFSET 1541102458; -- 0ms;
SELECT CASE WHEN ((rt0.c1)IS(rt1.c3)) THEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2))) END, MIN((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c0)))), json_quote(COUNT(*)), SUM((v0.c0 IN (rt0.c2))), ((((rt0.c0) ISNULL))*((- (rt0.c2)))) FROM rt0, v0, rt1 WHERE ((((+ (NULL))) BETWEEN ((((NULL))>=(('-1086505820')))) AND ((0.1331355873566077 IN ())))); -- 1ms;
SELECT TRIM(rt1.c3) COLLATE BINARY FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( PARTITION BY (((-1.017526968E9) IS FALSE) IN (TRIM(DISTINCT t0.c38, v0.c1), (v0.c0 IN (v0.c0)))), rt1.c1) FROM rt0;SELECT DISTINCT ((((rt1.c2) BETWEEN (v0.c2) AND (rt0.c1))) BETWEEN (((rt1.c2)>>(rt1.c3))) AND (((('-1104655291')) BETWEEN ((rt1.c1)) AND ((rt0.c2))))), (((((v0.c1 IN ()))OR(CASE 5.50537341E8  WHEN rt1.c1 THEN rt0.c1 END)))OR(t0.c87)), LEAD(CASE 'sC'  WHEN ((rt1.c1) IS TRUE) THEN TRIM(rt1.c1) ELSE ((rt1.c3)>(NULL)) END, TYPEOF(DISTINCT LIKELY(rt1.c2)), x'') OVER () FROM rt1 WHERE (((((((0Xffffffffbaabb130)OR(0.2118243440805454)))OR(x''))) BETWEEN ((((x''))==((0.09473805435876947)))) AND (((x'') BETWEEN (NULL) AND ('-2039277232')))));SELECT DISTINCT ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c3 END) BETWEEN (((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c2))) AND (((0.7953137309609768)>>(rt0.c2)))) FROM t0, rt1, v0, rt0; -- 0ms;
SELECT DISTINCT (((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c2)))) NOT BETWEEN (x'') AND (LIKE(rt1.c3, v0.c1))) FROM v0, rt0, rt1, t0; -- 1ms;
SELECT DISTINCT SUM(((rt1.c2) NOT BETWEEN (v0.c0) AND (v0.c2))) OVER ( ORDER BY (((((((((((((v0.c1)AND('zN')))OR(rt1.c3)))AND(t0.c38)))AND(t0.c38)))OR(rt1.c2)))AND(t0.c87)) IN ()) ASC  NULLS LAST) FROM t0, rt1, rt0, v0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM v0, rt1, rt0; -- 0ms;
SELECT DISTINCT TOTAL(MAX(v0.c1)), NULL, CUME_DIST() OVER () FROM t0, rt0 WHERE (UNLIKELY(LIKELIHOOD(0.44825074323852965, 0.30907999064108327)));SELECT DISTINCT (((((v0.c2) IS FALSE), (+ (-1170656589)), CAST(t0.c38 AS REAL), CAST('-1014157856' AS NUMERIC), (((v0.c0, rt0.c1, v0.c2)) NOT BETWEEN ((v0.c2, rt1.c3, rt0.c2)) AND ((rt0.c1, '', rt1.c2)))))<((AVG(rt0.c2), ((((rt1.c3)OR(rt1.c1)))AND(v0.c1)), (((rt1.c3))!=(('0.42058522130446796'))), 'lb0[䰮&m<', HEX(rt1.c0)))) FROM rt0 WHERE (((NULL) NOT BETWEEN ((+ (NULL))) AND ('' COLLATE RTRIM)));SELECT ALL NTILE(((((v0.c1)IS(v0.c1))) IS TRUE)) OVER () FROM rt1, rt0, v0 WHERE (('EBH6vB*S' IN ()) COLLATE RTRIM); -- 1ms;
SELECT (((NOT (rt0.c1))) ISNULL) FROM t0 WHERE (((((((0.4897274540631269) NOT BETWEEN (NULL) AND (0.26200493649397416)))OR(((0.801132551774028)>>('jTP&5')))))AND(LOWER(DISTINCT '')))) LIMIT -2005885894;SELECT DISTINCT COUNT(*) OVER ( ORDER BY UNICODE(t0.c87) DESC  NULLS FIRST), ((((t0.c87)*(rt0.c2)))IS NOT((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))), (((rt1.c3, 0.28571824665659584, rt1.c1)) NOT BETWEEN ((v0.c0 COLLATE NOCASE, rt0.c2 COLLATE BINARY, NULL)) AND (((~ (rt0.c0)), v0.c2, ((v0.c2) NOT NULL)))) FROM rt1, t0, v0;SELECT ((IFNULL(DISTINCT rt1.c1, v0.c1)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((v0.c0)/(rt0.c2)))), COUNT(*), ((((rt0.c0)OR(rt1.c3)))|(((((v0.c1)OR(x'')))AND(t0.c38)))) FROM t0, v0 WHERE ((((- ('-1301557432'))) NOT BETWEEN (NULL COLLATE NOCASE) AND (1.189167816E9 COLLATE BINARY)));SELECT DISTINCT (('479927540')<(CASE rt0.c0  WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c1 THEN t0.c38 WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END)) FROM v0, rt1, rt0 WHERE (0.11135620590881612) GROUP BY CASE WHEN rt0.c0 THEN (((rt0.c2))<((rt0.c2))) END HAVING ((COUNT(rt1.c2))>((+ (rt1.c0)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c2 END) IS FALSE) DESC  NULLS LAST;SELECT DISTINCT ((((((x'bbde') NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR(CASE rt1.c1  WHEN rt0.c2 THEN t0.c38 ELSE rt0.c1 END)))OR(((rt0.c1) IS TRUE))), ((((((((((t0.c87)OR(t0.c87)))AND(v0.c1)))OR(rt1.c2)))OR('펞gQ')))/(CAST(rt1.c3 AS INTEGER))), ((((((rt0.c0) NOTNULL))OR(rt1.c2)))AND(((t0.c87)>(rt1.c3)))) FROM t0 CROSS JOIN rt0 ON ((((((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)))OR(((t0.c87)<=(rt0.c1)))))AND(((rt0.c1) IS TRUE))) FULL OUTER JOIN rt1 ON rt0.c2 COLLATE RTRIM WHERE (((CAST(-1.898429482E9 AS BLOB)) IS TRUE));SELECT DISTINCT v0.c2 FROM rt0 GROUP BY (((rt0.c2 IN ()))>=((+ (v0.c1))));SELECT DISTINCT (COUNT(*) IN ()) FROM t0, rt0, v0 WHERE (UPPER(CASE WHEN '&sbh' THEN '1<' ELSE '1933968257' END)); -- 0ms;
SELECT TOTAL((rt1.c3 IN ())), (NOT (JULIANDAY(rt1.c2, NULL, v0.c0, v0.c2, rt0.c2))), ((((rt0.c0 COLLATE RTRIM)OR((((rt1.c0))<((rt1.c2))))))AND(COUNT(rt1.c2))) FROM t0, rt0 WHERE (((((((x'')AND('1381556558')))AND(616124730))) NOTNULL)) UNION SELECT ALL ((((((((((v0.c1)OR(rt1.c3)))OR(rt0.c0)))AND(rt1.c2)))OR(v0.c1)))>(CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c0 THEN v0.c1 WHEN t0.c38 THEN rt1.c0 END)), ((((COALESCE(DISTINCT v0.c1, t0.c87))AND(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c3)))))AND(((v0.c1) BETWEEN (rt1.c3) AND (v0.c1)))), TOTAL('1408331290') FROM rt1, t0;SELECT ALL (+ (json_extract(rt0.c2, rt0.c2))) FROM rt0, t0; -- 0ms;
SELECT CASE WHEN ((('P()ቩ'))==((v0.c2))) THEN (((v0.c1))=((rt1.c3))) END, CAST(((NULL)IS(v0.c2)) AS TEXT), AVG(((rt1.c0) NOT NULL)) FROM rt1, rt0 WHERE ((((CAST(NULL AS BLOB)))==((LIKELY(-685854691)))));SELECT CASE ((v0.c2)GLOB(t0.c38))  WHEN ((((rt1.c1)OR(rt1.c2)))AND(v0.c1)) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((v0.c0))) ELSE rt1.c2 END, AVG(((t0.c87) IS TRUE)) OVER (), ((((rt0.c1) BETWEEN (x'') AND (rt1.c1))) NOT NULL), (((rt0.c1 IN ()))>=((((v0.c0, t0.c38, rt1.c1)) NOT BETWEEN ((v0.c0, 'C쇷颈7D飺', rt0.c1)) AND ((rt1.c1, rt1.c0, v0.c1))))), RTRIM(((rt0.c2)<=(rt0.c2))) FROM t0, v0 WHERE (CAST('d{7s| pG' AS TEXT));SELECT DISTINCT CAST(((v0.c2) NOT BETWEEN (t0.c87) AND (rt1.c2)) AS TEXT) FROM rt1;SELECT DISTINCT '-1473250859' FROM rt1, rt0; -- 0ms;
SELECT ALL (+ ((t0.c38 IN ()))) FROM rt1, v0, rt0, t0 GROUP BY ((json_object(0.4974864433586188, t0.c38))%((NOT (rt1.c1)))), (((rt0.c0) BETWEEN (v0.c2) AND (rt0.c1)) IN ()), rt0.c2 ORDER BY json_remove((rt0.c1 IN (rt0.c1, rt0.c2)), rt1.c1 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((v0.c1)>>(rt1.c2)) IN ()) FROM t0, v0, rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c2)<<(rt0.c0)) IN ()) FROM rt0 GROUP BY (- (rt0.c0)), ((('479928385') IS TRUE) IN ()), ((NULLIF(v0.c1, v0.c2))LIKE(((v0.c0)LIKE(v0.c1)))), ((((((((((rt1.c1)=(rt1.c0)))OR(CASE rt0.c0  WHEN rt1.c1 THEN t0.c38 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c1 END)))OR(((rt0.c0)IS NOT(v0.c0)))))AND(((rt1.c1) BETWEEN (v0.c2) AND (t0.c87)))))OR(CASE WHEN v0.c0 THEN rt1.c1 ELSE t0.c38 END)), (~ (CAST(v0.c0 AS TEXT)));SELECT DISTINCT t0.c38 FROM rt0 GROUP BY ('0.1623685514103984' IN ()) HAVING ((((v0.c1) NOT BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN (CAST(rt1.c2 AS REAL)) AND (rtreenode(v0.c2, rt1.c3))) ORDER BY rt0.c2  NULLS LAST;SELECT ALL ((((((rt1.c2)AND(v0.c0)))OR(rt0.c2))) NOT BETWEEN (((rt1.c0) NOT NULL)) AND ((+ (rt0.c1)))) FROM v0 WHERE ((x'' IN ()) COLLATE RTRIM) LIMIT -1714166461;SELECT ALL TIME(((t0.c87)-(t0.c87)), rt0.c2, '1956548561', TOTAL(rt1.c3), ((rt1.c1)+(rt1.c2))) FROM rt0, t0, v0, rt1 GROUP BY (((t0.c87 IN (t0.c87, rt1.c1)))&(v0.c2)) LIMIT 1806669751 OFFSET -1223708041; -- 0ms;
SELECT ((((((((((rt1.c2) NOTNULL))AND(((((rt1.c1)OR(v0.c2)))AND(rt0.c2)))))AND(CASE v0.c0  WHEN rt0.c2 THEN v0.c1 ELSE rt1.c2 END)))OR(rt0.c1)))AND(t0.c38)), IFNULL(DISTINCT rt0.c0 COLLATE BINARY, ((((v0.c1)AND(v0.c0)))OR(rt1.c2))), ((((((((((((rt0.c1)AND(rt0.c0)))AND(v0.c1)))OR(rt0.c2)))AND(x'')))AND('')))OR(((rt1.c0)<<(rt0.c0)))) FROM t0 WHERE (UPPER(DISTINCT ((0.754833918867193) BETWEEN (0.7692310543102304) AND (NULL))));SELECT DISTINCT ((CASE t0.c87  WHEN rt0.c1 THEN v0.c1 END) NOT BETWEEN (t0.c87) AND (((('돮')) NOT BETWEEN ((v0.c2)) AND ((rt1.c0))))) FROM v0;SELECT DISTINCT CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE v0.c2  WHEN t0.c38 THEN v0.c1 END ELSE json_valid(rt1.c0) END FROM v0 WHERE ((((((((((((0xf7194a4)) BETWEEN ((x'')) AND ((x'cb59'))))AND((NULL IN ()))))AND(NULLIF(DISTINCT x'', NULL))))OR((((NULL))>=((NULL))))))OR(('0.6761865318742459' IN ()))));SELECT DISTINCT (((rt1.c1)) NOT BETWEEN (((t0.c87 IN ()))) AND (((~ (x'348e'))))) FROM rt1, t0, rt0, v0 ORDER BY '1621402141' ASC, (((((((((t0.c87)AND(rt1.c2)))OR(v0.c2)))OR(v0.c1)))AND(rt0.c0)) IN (STRFTIME(rt1.c0, rt0.c1, v0.c1), SQLITE_VERSION())); -- 0ms;
SELECT NTH_VALUE(-1.034744385E9, t0.c38) OVER (), GROUP_CONCAT(CAST(rt0.c2 AS INTEGER)) OVER ( ORDER BY (- (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST, rt0.c1  NULLS LAST, ((t0.c38) BETWEEN (((rt1.c3) IS FALSE)) AND (NULL))), CASE WHEN CAST(rt1.c2 AS TEXT) THEN v0.c1 WHEN ((((t0.c38)OR(rt0.c2)))OR(rt1.c0)) THEN '2.Kv!+U' COLLATE NOCASE WHEN v0.c1 THEN ((x'')>(rt1.c0)) END FROM rt0, v0, rt1, t0 WHERE ((((0.27394370393889433)IS NOT(1e500)) IN ())); -- 0ms;
SELECT ((TOTAL(rt1.c3))>(((v0.c0) NOT NULL))) FROM t0, rt1 WHERE ('-0.0');SELECT DISTINCT CASE ((((((((rt1.c0)AND(rt0.c2)))OR(NULL)))OR(rt1.c0)))AND(v0.c0))  WHEN MAX(t0.c87) THEN ((v0.c0) IS TRUE) WHEN ((rt1.c1)AND(rt0.c2)) THEN (((rt1.c1, rt0.c1, v0.c1))<>((rt1.c2, t0.c87, rt1.c3))) WHEN ((((((((rt0.c1)OR(rt1.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(NULL)) THEN ((rt1.c1) NOTNULL) ELSE COUNT(rt1.c0) END FROM rt1, rt0 WHERE (((('44139476')) NOT BETWEEN ((NULL)) AND ((CASE WHEN NULL THEN x'd9c5' END))));SELECT DISTINCT v0.c1 FROM v0 LIMIT -655236752; -- 0ms;
SELECT DISTINCT COUNT(*), rt1.c2, ((rt0.c1)<=((((v0.c1, v0.c2, rt0.c0))>=((rt1.c1, rt0.c0, NULL))))), ((((((((((rt1.c0)AND(rt0.c2)))AND(v0.c2)))OR('-1196517840')))AND(rt1.c2))) IS TRUE), COUNT(*) FROM rt1, rt0, v0, t0 WHERE (CASE ((x'7c22') ISNULL)  WHEN ((NULL) BETWEEN (x'') AND (0.3809701127994233)) THEN ((((-971163504)OR(-1.130692845E9)))AND(0X6b9d7986)) WHEN ((x'7716')LIKE(x'')) THEN ((0.305065685513216) NOT NULL) WHEN ((((((((NULL)AND(4.97547369E8)))OR('v')))OR(0.3956551621962143)))AND(0.9714640177384971)) THEN ((0.09290808352082369) BETWEEN ('l]') AND ('1447517653')) END); -- 0ms;
SELECT DISTINCT ((((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c1)))||(t0.c87 COLLATE NOCASE)), ((((((rt0.c2)OR(rt0.c1)))OR(v0.c2)))<<(ROUND(rt1.c2, rt1.c3))), v0.c1 FROM rt1, rt0, t0, v0 WHERE (UPPER((('?D') NOTNULL))) LIMIT 1342857570; -- 0ms;
SELECT DISTINCT ((((v0.c1) NOT NULL)) NOT BETWEEN ((v0.c2 IN ())) AND (rt1.c0 COLLATE RTRIM)) FROM rt1, v0, t0, rt0; -- 1ms;
SELECT DISTINCT (- (LIKE('1416572388', v0.c2))), rt1.c2, (~ (NULL)) FROM v0;SELECT DISTINCT x'0ff850eb', LAG(((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))) IS TRUE), ((CAST(rt0.c2 AS REAL))LIKE(rt0.c0 COLLATE BINARY)), CAST(1e500 AS BLOB) COLLATE RTRIM) OVER (), DENSE_RANK() OVER () FROM rt0 WHERE (((((CAST(NULL AS TEXT))AND((('0.41483674524249103')<(0X59de341e)))))AND(UNLIKELY('594205107')))); -- 0ms;
SELECT DISTINCT (((v0.c1)) NOT BETWEEN (((((rt1.c3))<>((rt0.c2))))) AND ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) FROM rt1, v0 WHERE (((((('1189167816'))<=((0.3960791164165878)))) IS FALSE));SELECT ALL ((((rt1.c3) IS TRUE))<>((0xffffffffe9d3406d IN ()))) FROM v0, rt1, rt0, t0 WHERE ((((NOT ('!u')))>(((x'') IS TRUE)))); -- 1ms;
SELECT DISTINCT 0.1586940896709076, ((CAST(t0.c87 AS REAL)) NOT NULL), ((((((rt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2))), (((v0.c1))==((t0.c87))), ((v0.c2) BETWEEN (rt1.c2) AND (rt1.c2))))<((CASE rt1.c1  WHEN rt1.c2 THEN v0.c1 ELSE rt1.c2 END, TOTAL(t0.c38), rt1.c0))) FROM v0 WHERE (((((NULL) NOT NULL))LIKE(('' IN (x'')))));SELECT ((v0.c0) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (((v0.c0) IS FALSE))) FROM t0, rt1 CROSS JOIN v0 ON (CAST(t0.c38 AS TEXT) IN ((- (rt1.c0)))) WHERE (((((NULL) NOT BETWEEN (0X3aa7dd59) AND (4.67793479E8)))<=(ABS(0.43129950066243816)))) LIMIT -569559929 OFFSET 772871135;SELECT ALL ((((COUNT(*))AND(x'')))OR(rt1.c3)) FROM t0 WHERE ((- ((((('1394805009')OR(NULL)))OR(0Xffffffff86731950)))));SELECT DISTINCT ((rt0.c1) BETWEEN (rt0.c1) AND (0.0377464625201257)) COLLATE BINARY FROM t0, rt1, rt0 WHERE ((((((('S囃c94')<=(x'')))AND(((NULL) ISNULL))))AND(((NULL) NOT NULL)))) ORDER BY (rt1.c2 IN ()) COLLATE RTRIM DESC  NULLS LAST LIMIT 970958768 OFFSET -2039277232; -- 1ms;
SELECT GROUP_CONCAT(CAST(v0.c0 AS INTEGER)) FROM v0; -- 0ms;
SELECT DISTINCT (((CASE rt1.c0  WHEN v0.c0 THEN t0.c38 END))=((0.10071247925827276))) FROM rt1 ORDER BY CHANGES();SELECT DISTINCT (NOT (t0.c38)) COLLATE RTRIM FROM t0, rt0, rt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM v0, rt1, rt0, t0; -- 0ms;
SELECT NTILE(CAST(((rt0.c1)OR(t0.c38)) AS TEXT)) OVER () FROM rt1, t0, rt0 WHERE ((((x''))<=((((x'') NOT BETWEEN ('妗7R0') AND ('')))))) GROUP BY (+ ((((rt1.c0, rt0.c1, v0.c0))<=((v0.c0, rt1.c3, v0.c0))))), (((((v0.c2))>((rt1.c3)))) IS FALSE), COALESCE(CAST(rt1.c0 AS TEXT), ((((t0.c38)OR(t0.c38)))AND(rt0.c0)), (v0.c1 IN ()), -573735193 COLLATE BINARY) HAVING CASE (+ (rt0.c2))  WHEN QUOTE(x'5c49') THEN (t0.c38 IN (rt1.c2)) WHEN (~ (rt0.c1)) THEN ((rt0.c0)OR(rt1.c0)) WHEN CASE WHEN v0.c1 THEN v0.c1 WHEN t0.c87 THEN t0.c38 WHEN 'K&uDh7)d' THEN rt0.c1 ELSE rt1.c0 END THEN (rt1.c2 IN ()) ELSE (+ (rt1.c2)) END;SELECT ALL ((('984748759' IN ())) ISNULL), ((v0.c1)%(rt1.c1)) COLLATE BINARY, GROUP_CONCAT((- (t0.c38))) OVER () FROM t0, rt0, v0, rt1; -- 0ms;
SELECT ALL CASE WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY FROM t0;SELECT ALL LAST_VALUE(CAST(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)) AS REAL)) OVER () FROM rt0, rt1 WHERE (DATE('{X~u''I', (((((((('X\n')OR(x'1e93')))OR(x'')))AND(x'')))OR(x'')), (NULL IN ()), (((x'0558', NULL, '0.9338851132246432'))!=(('!-um,', 'WC', x'dcf5'))), x'' COLLATE NOCASE)) ORDER BY CASE WHEN CAST(rt1.c3 AS INTEGER) THEN CAST(rt0.c2 AS REAL) WHEN ((v0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3)) THEN ((rt1.c2) IS TRUE) WHEN (- (t0.c87)) THEN CASE WHEN v0.c1 THEN rt1.c3 ELSE t0.c87 END ELSE ((v0.c2)%(rt0.c1)) END DESC, CAST((((('P[F~JA')OR(v0.c2)))AND(rt1.c2)) AS BLOB);SELECT ALL TOTAL(((rt1.c0) IS FALSE)) OVER (), (((((t0.c38)AND(rt1.c1)))OR(rt1.c3)) IN ()), rt1.c0 FROM v0, t0, rt0;SELECT CAST((rt1.c2 IN (rt0.c2)) AS REAL) FROM rt0, rt1, v0, t0 ORDER BY (((((v0.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((v0.c1, t0.c38, rt1.c2)) AND ((x'', rt0.c0, '')))) NOTNULL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((rt1.c1) NOTNULL) COLLATE BINARY FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c2 COLLATE RTRIM)OR(((rt0.c0) BETWEEN (t0.c87) AND (rt0.c1)))))AND(CASE rt1.c2  WHEN v0.c2 THEN rt1.c1 WHEN NULL THEN '73817504' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)), ((rt1.c3) NOTNULL) COLLATE RTRIM, (~ (((rt0.c1) BETWEEN ('185325235') AND (v0.c2)))) FROM t0, rt0, v0, rt1; -- 0ms;
SELECT ALL ((rt1.c1 COLLATE NOCASE) BETWEEN ((((rt1.c1)) NOT BETWEEN ((t0.c87)) AND ((rt0.c0)))) AND (COUNT(rt1.c0))), (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((NULL))))<(((v0.c1) IS FALSE))), (('a*') NOT BETWEEN (((((t0.c87)AND(t0.c87)))AND(t0.c87))) AND ((rt0.c2 IN ()))) FROM v0, t0 NATURAL JOIN rt0;SELECT ALL GROUP_CONCAT((+ (rt1.c3))) FROM rt0, t0, v0, rt1 WHERE ((((- ('')))IS(((-1e500) IS FALSE)))); -- 0ms;
SELECT CAST(v0.c0 COLLATE RTRIM AS INTEGER) FROM rt0 WHERE ((+ (CASE WHEN NULL THEN 'aG3)+9*-' WHEN '251189387' THEN 0.0 WHEN '{X~U''I' THEN NULL ELSE '-1129987416' END))) ORDER BY ((v0.c0) NOTNULL)  NULLS FIRST;SELECT ALL ((v0.c1 COLLATE NOCASE)<=((rt0.c2 IN (rt0.c2, rt1.c2)))), TYPEOF(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END), ((IFNULL(DISTINCT v0.c1, t0.c38)) NOTNULL) FROM rt0;SELECT ((((rt0.c0) NOT BETWEEN (t0.c87) AND (rt0.c0))) IS TRUE) FROM rt1, t0, rt0, v0 WHERE ((- (((NULL) ISNULL)))); -- 0ms;
SELECT ALL (~ (((rt1.c2)LIKE(v0.c0)))) FROM rt1 WHERE (551556273);SELECT DISTINCT (((v0.c1)) NOT BETWEEN (((('1552448890') NOTNULL))) AND ((rt1.c0))) FROM t0, v0, rt1, rt0 WHERE ((- (CASE '\P'  WHEN 'U2' THEN '1303640124' WHEN NULL THEN x'' WHEN 0.47855506087828237 THEN x'' ELSE '-1171271245' END))); -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((UPPER(v0.c0))) AND ((((v0.c2)<>(rt0.c2))))) FROM v0, t0, rt1, rt0; -- 0ms;
SELECT ALL LTRIM(COUNT(t0.c87)), (((x'', t0.c87, rt1.c2)) NOT BETWEEN ((v0.c1, ((rt1.c2) NOTNULL), (('-117040940') NOT NULL))) AND (((((t0.c87, v0.c2, v0.c2))>=((rt0.c2, rt1.c2, rt0.c0))), ((((v0.c0)OR('1541102458')))AND(rt0.c1)), MIN(rt1.c1)))), (+ (rt0.c2 COLLATE RTRIM)) FROM v0 GROUP BY ((CASE rt1.c0  WHEN t0.c38 THEN t0.c87 END)<((((rt1.c2, rt0.c1, t0.c87, rt1.c2, v0.c0))==((t0.c38, rt1.c3, rt0.c2, rt0.c2, rt1.c1))))) HAVING ((((v0.c0)=('-1694574076'))) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0));SELECT ALL ((((rt1.c2) NOTNULL)) IS FALSE), ((((CAST(0.94270462569102 AS BLOB))AND(SUM(x''))))OR(v0.c0 COLLATE RTRIM)), ((((v0.c2) ISNULL))<((~ (t0.c87)))) FROM t0, rt0 FULL OUTER JOIN rt1 ON (((v0.c0 IN ()))<=(((rt1.c0)>(rt1.c1)))) WHERE (LOWER(DISTINCT LOWER(x'92e9')));SELECT ALL (- (CAST(rt0.c0 AS NUMERIC))) FROM rt0, v0 WHERE ((- (CAST(0xffffffffaf9cb2db AS NUMERIC)))) LIMIT -1886291790; -- 0ms;
SELECT (((rt0.c0, ((((0.6607032178925619)AND(rt0.c0)))AND(v0.c0)), ((rt1.c1) NOT BETWEEN (t0.c87) AND (rt0.c1))))>((CAST(v0.c0 AS REAL), ((rt0.c2)>>(rt0.c0)), ((((NULL)OR(t0.c87)))OR(rt0.c0))))) FROM v0, rt1 LIMIT -1359473441;SELECT (- ((~ (v0.c2)))) FROM rt0 ORDER BY CAST((NOT (rt1.c1)) AS BLOB) ASC, ((((rt0.c1)+(rt0.c0)))GLOB(((('tvc', rt1.c3, rt0.c0)) BETWEEN ((t0.c87, v0.c2, v0.c1)) AND ((t0.c38, rt0.c2, rt0.c2)))));SELECT DISTINCT (+ (CASE rt1.c1  WHEN t0.c38 THEN v0.c0 END)), v0.c0, ((((MAX(rt0.c2))AND(CAST(v0.c0 AS TEXT))))OR(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c3)))) FROM rt0, v0, rt1;SELECT CASE ((((((((rt1.c3)OR(t0.c38)))OR('1594249172')))AND(v0.c1)))OR(v0.c2))  WHEN CASE WHEN rt1.c2 THEN rt0.c1 WHEN x'' THEN rt1.c2 WHEN v0.c1 THEN rt1.c2 END THEN ((rt1.c0)/(rt0.c0)) END, rt1.c2, '-1377891550' FROM t0 WHERE ('77293730');SELECT ALL LAST_VALUE(((rt0.c1)-((((('')OR(v0.c2)))OR(t0.c87))))) OVER () FROM v0, rt0, t0 WHERE ((((((((((((0.5489501214471606)OR(NULL)))OR(-1876667761)))AND('')))OR(''))))<>(((~ (-0.0)))))); -- 0ms;
SELECT rtreenode(GROUP_CONCAT(rt0.c1), CASE WHEN rt1.c1 THEN rt0.c2 END) FROM rt0, t0;SELECT DISTINCT rt0.c1 FROM rt1 ORDER BY CAST((~ (v0.c1)) AS BLOB)  NULLS FIRST;SELECT DISTINCT UNLIKELY(DISTINCT t0.c38) COLLATE BINARY FROM rt0 WHERE (((((((0.6753084757813288)==('43351144')))AND(((NULL)AND(-1.796523435E9)))))OR((('Mr')<>(0x3ba4d623)))));SELECT DISTINCT ((rt0.c2 COLLATE BINARY)*(v0.c2)), ((((t0.c87) BETWEEN (v0.c2) AND (rt0.c1))) BETWEEN (rt1.c2) AND (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)), LAST_VALUE(((x'')OR(t0.c38)) COLLATE RTRIM) OVER () FROM t0 WHERE ((((((((((('-1163153104') BETWEEN ('-1130692845') AND (NULL)))AND(((0Xffffffff99ba2627) NOT BETWEEN (0.6161295687586926) AND (0.577381795521006)))))AND((((((((('')AND(0.7105891461999293)))AND('-384446765')))AND('-1898429482')))AND(0.9534637508507036)))))AND((((NULL))>=((x'bc85'))))))AND(((((((((-1945609782)OR(NULL)))OR(NULL)))OR(NULL)))AND(0.10463181169668478)))));SELECT ALL CHANGES(), (((rt1.c2, rt1.c1, t0.c87)) BETWEEN (((((v0.c1, rt0.c1, rt0.c1, v0.c1, rt0.c0)) BETWEEN ((rt0.c0, v0.c2, rt0.c1, t0.c38, v0.c1)) AND ((NULL, v0.c0, rt1.c2, rt0.c2, rt0.c2))), (((rt1.c1))>((rt1.c2))), rtreenode(rt1.c3, rt1.c0))) AND (('sC', (((rt1.c2)) BETWEEN ((rt0.c2)) AND ((t0.c38))), (- (rt0.c1))))), (CAST(v0.c1 AS REAL) IN ()) FROM t0, v0, rt1, rt0 WHERE (((((((0.8740564748671422)LIKE('-952875929')))AND(((-1189195172) BETWEEN ('0.8674436304268164') AND ('')))))AND(DATETIME(0.8209127822018498, NULL, NULL, NULL, x'68ba')))); -- 0ms;
SELECT ALL ((((CAST(t0.c38 AS REAL))AND(MIN(rt1.c3))))OR(((v0.c0)/(rt1.c2)))) FROM v0, rt1 NOT INDEXED WHERE (CASE WHEN -1545529978 COLLATE BINARY THEN (('832546972')=(0.37550451711943766)) END);SELECT DISTINCT (((NOT (rt1.c1))) IS FALSE) FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt1.c2)<(rt0.c2)) AS NUMERIC) WHERE ((((('8|d2qU+V' COLLATE BINARY)AND(((128888811) NOT BETWEEN (4.15890076E8) AND (0.5671509171392888)))))OR((0Xffffffff88ade98f IN (-9.6886228E8)))));SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, v0, rt1 ORDER BY CASE CAST(v0.c2 AS REAL)  WHEN (v0.c1 IN ()) THEN (NOT (rt1.c2)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((v0.c1, rt0.c1, 0.9433976795358202)) NOT BETWEEN ((rt1.c0, rt0.c0, rt1.c0)) AND ((rt0.c1, '', rt0.c0))))OR(rt1.c0 COLLATE NOCASE)))OR(((rt1.c3)>(v0.c0)))) FROM v0, rt0 WHERE (('-1104655291' IN ())) GROUP BY rt0.c1;SELECT ALL CASE WHEN (~ (rt1.c1)) THEN TYPEOF(DISTINCT v0.c0) WHEN AVG(v0.c1) THEN ((((v0.c1)AND(v0.c0)))OR(x'')) WHEN t0.c87 COLLATE BINARY THEN v0.c0 ELSE NULL END, CASE (((rt1.c2)) BETWEEN (('-1360745173')) AND ((rt1.c1)))  WHEN ((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) THEN (+ (rt1.c3)) ELSE '-2001868401' COLLATE BINARY END, '-492527906' FROM v0, t0 WHERE (((('ZcRG') IS FALSE) IN (HEX(0.9056602601413607))));SELECT ALL CASE WHEN ((v0.c2)|(rt0.c0)) THEN (((rt1.c1))=((rt0.c0))) END, (CAST(rt0.c1 AS TEXT) IN (CASE WHEN t0.c87 THEN rt1.c2 END)), (- (CAST(v0.c0 AS INTEGER))) FROM rt0, rt1 WHERE (UNLIKELY(DISTINCT (+ (x''))));SELECT ALL json_remove(((v0.c0)+(rt1.c3)), -2.142517376E9) FROM t0, rt1 GROUP BY (((rt0.c1, v0.c0, rt0.c0)) BETWEEN ((TYPEOF(rt1.c3), CAST(t0.c87 AS REAL), ((v0.c0) ISNULL))) AND ((t0.c38 COLLATE RTRIM, 0xffffffffc15da2ea, CAST(t0.c87 AS REAL)))) HAVING t0.c87;SELECT (((rt1.c3 IN ()))||(SUM(rt1.c0))), (((v0.c2, rt1.c0, rt1.c1)) BETWEEN (((~ (rt0.c0)), MAX(v0.c2), CAST(rt1.c3 AS INTEGER))) AND ((CHANGES(), rt0.c1, ((t0.c38) NOT NULL)))), SUM((('c')-(t0.c38))) OVER ( ORDER BY TRIM(DISTINCT v0.c1, (((v0.c1))>=((rt0.c1)))), x''  NULLS LAST) FROM rt1 WHERE ((- (((x'')>('')))));SELECT DISTINCT ((LIKE(t0.c38, '')) IS FALSE), '-703927475', rt0.c1 FROM v0;SELECT ALL (NOT ((((t0.c38, rt1.c0, v0.c1)) BETWEEN ((rt1.c3, t0.c87, t0.c87)) AND ((rt0.c1, rt1.c0, rt1.c1))))) FROM rt0 WHERE ((- (((x'') NOT BETWEEN (x'') AND (1446839355)))));SELECT ((((('-760180854'))==((x'')))) BETWEEN (((((rt1.c1)OR(rt1.c1)))AND(t0.c87))) AND (((rt1.c3) NOT BETWEEN (rt1.c2) AND (v0.c1)))), SUM(t0.c87) OVER (), ((((v0.c1)OR(((((rt0.c2)OR(rt1.c3)))OR(rt0.c0)))))OR(CAST(t0.c87 AS TEXT))), ((NULL)|(v0.c2 COLLATE NOCASE)), ((LIKE(v0.c0, rt1.c2))IS(v0.c0)) FROM rt0, t0 WHERE (NULL);SELECT ALL ((rt0.c0)&(rt0.c1)) COLLATE BINARY FROM rt0, v0; -- 0ms;
SELECT ((CASE NULL  WHEN -1.48669104E8 THEN t0.c87 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c1 THEN v0.c1 END) IS FALSE) FROM v0, t0, rt1 WHERE (((((-831970658)<<(x''))) NOT BETWEEN (467793479) AND (((('yi,픡	WU}'))>=((0.4916274566824629)))))) ORDER BY ((ABS(v0.c1))<=((((t0.c38, v0.c0, rt1.c3)) NOT BETWEEN ((v0.c2, 0.9104837366493387, NULL)) AND ((v0.c1, rt1.c1, rt1.c3)))));SELECT CASE WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c1 WHEN v0.c2 THEN t0.c87 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c0 END COLLATE RTRIM COLLATE BINARY FROM t0, rt0;SELECT ALL ((0.6406353449753736)&(v0.c1)) FROM rt1, rt0, t0, v0 WHERE (((((('')||(NULL)), CASE 0.8088258067103958  WHEN x'' THEN '' ELSE NULL END, CAST(x'' AS NUMERIC)))>=(((+ (0.8723662961034406)), (('-1104679144')!=(x'')), CASE WHEN -2074619013 THEN NULL ELSE x'4b32' END)))); -- 0ms;
SELECT DISTINCT CASE ((t0.c38) BETWEEN (t0.c87) AND (v0.c1))  WHEN CASE WHEN rt0.c1 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c3 WHEN 0Xffffffff804bc780 THEN v0.c1 ELSE rt0.c2 END THEN (rt1.c0 IN ()) END FROM rt0, v0, rt1 LIMIT 1;SELECT DISTINCT ((('yLaFhJX') NOT BETWEEN ('P[F~JA') AND (rt0.c0)) IN ()), ((HEX(NULL))IS(rt0.c2)), ((SUM(rt1.c0)) IS FALSE) FROM v0, rt1;SELECT DISTINCT COUNT(0X5fa32795) OVER ( PARTITION BY ((rt1.c1)OR(((NULL) BETWEEN (rt1.c3) AND (rt0.c0)))), t0.c38, ((((rt1.c2)<<(rt1.c2)))<>(((rt1.c0) NOT NULL))), (NOT ((rt0.c0 IN ())))), (((((((('55035129')OR(MAX('0.3844771124415717', rt1.c3, t0.c38, rt1.c1))))OR(((v0.c1)||(v0.c2)))))AND((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((t0.c87))))))AND((- (v0.c0)))), (((v0.c0 IN ()))<(CASE WHEN rt0.c1 THEN rt0.c0 END)) FROM rt0 WHERE (CASE ((NULL) NOT NULL)  WHEN CASE WHEN 0.7733789401770029 THEN 'E^''SUE' END THEN (('-1646341795') IS FALSE) WHEN (((NULL)) BETWEEN ((1.381556558E9)) AND ((0.6201377887809415))) THEN CASE WHEN 0.9551174155119532 THEN 0.4189381908466542 END WHEN ((x'') NOT BETWEEN (0.05657063744082913) AND (x'')) THEN (((('165158343')OR(0.8741062605700007)))OR(']E')) ELSE (((x'')) NOT BETWEEN (('-1839052309')) AND ((0.6099050025163695))) END);SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS TEXT), ((((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2))) ISNULL), CASE ((rt1.c1)IS(rt0.c0))  WHEN UPPER(x'741c') THEN ABS(v0.c0) WHEN ((((rt1.c2)AND(rt1.c2)))OR(t0.c38)) THEN (NOT (t0.c38)) WHEN ((rt0.c1)<=(rt0.c0)) THEN 0.3434154146527769 ELSE rt1.c0 COLLATE BINARY END FROM rt1, t0, v0 WHERE (((CASE x''  WHEN x'fd3e' THEN 489584469 END) ISNULL)) GROUP BY CAST((- (rt0.c1)) AS BLOB) HAVING CAST(rt1.c1 AS NUMERIC) ORDER BY CHANGES(), CASE SQLITE_COMPILEOPTION_GET(rt0.c1)  WHEN rt0.c2 COLLATE BINARY THEN ((v0.c0)|(rt0.c2)) WHEN CASE t0.c38  WHEN t0.c87 THEN t0.c38 ELSE rt1.c2 END THEN (((v0.c2, t0.c87, x'')) BETWEEN ((rt1.c0, NULL, rt0.c0)) AND ((t0.c87, rt1.c1, rt1.c1))) WHEN ((rt0.c0) NOTNULL) THEN (((rt1.c3, rt0.c1, t0.c87)) BETWEEN ((t0.c87, t0.c87, v0.c1)) AND ((rt0.c2, rt1.c1, NULL))) ELSE rtreenode(v0.c1, rt0.c1) END ASC  NULLS FIRST;SELECT (+ (((472841672) IS FALSE))) FROM t0, rt0, v0; -- 0ms;
SELECT (- ((((t0.c38)) NOT BETWEEN ((v0.c1)) AND ((rt1.c1))))) FROM v0, t0;SELECT (((rt0.c0, t0.c87, rt0.c2)) BETWEEN (((((rt0.c0)) BETWEEN ((v0.c2)) AND ((rt0.c0))), ABS(DISTINCT rt0.c2), IFNULL(rt1.c3, rt1.c3))) AND ((IFNULL(rt0.c0, v0.c1), (rt1.c2 IN ()), ((t0.c38)<<(v0.c2))))) FROM v0 WHERE (((((NULL)OR(x'')))OR('')) COLLATE NOCASE) ORDER BY CAST(((rt0.c0) NOTNULL) AS BLOB);SELECT DISTINCT (((((((v0.c0))<((rt1.c2))))OR(AVG(t0.c87))))OR('1647302120')) FROM v0 WHERE ((((NULL IN ()))>=(116007443)));SELECT DISTINCT v0.c0 FROM rt1, t0, v0, rt0 WHERE (((NULL) NOT BETWEEN ('830256533') AND (0.7639448877734244)) COLLATE BINARY); -- 4ms;
SELECT SUM(CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM) FROM rt1;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY CASE WHEN t0.c87 THEN STRFTIME(rt1.c2, v0.c2, v0.c1, rt1.c1, x'') END ASC, v0.c2  NULLS LAST) FROM v0 WHERE ((((0.235975261486161)) BETWEEN ((((((0.3844771124415717)AND(896806288)))OR(x'0818')))) AND ((((((x'90f7')OR(NULL)))AND(''))))));SELECT DISTINCT COUNT(((((((((v0.c1)OR(v0.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(v0.c0))) OVER () FROM rt0, rt1, t0, v0 WHERE (((-1928279040) BETWEEN (0.05368049136372499) AND (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NULL FROM rt0, rt1, t0, v0 WHERE (''); -- 0ms;
SELECT (SUM(t0.c38) IN ()) FROM v0, rt0, t0; -- 0ms;
SELECT DISTINCT TOTAL(0.03251950221214872) OVER () FROM rt0, t0, rt1, v0 WHERE (((((((0.5057361029207743)<('1e500')))OR(LIKELY(''))))AND(((0.02634635233496918) IS FALSE)))); -- 0ms;
SELECT ((rt1.c1) IS FALSE) FROM rt0, rt1 WHERE ((((CAST('197147889' AS TEXT)))==((((x'f314')AND(-1796523435)))))); -- 0ms;
SELECT DISTINCT CASE x''  WHEN ((((((((rt1.c3)AND(t0.c38)))AND(v0.c2)))OR(rt1.c0)))OR(v0.c1)) THEN CAST(rt1.c3 AS REAL) WHEN ((rt0.c2)IS NOT(rt1.c2)) THEN (rt0.c0 IN ()) WHEN 1450577166 THEN ((rt0.c2) NOT NULL) ELSE (((v0.c2, rt1.c0, rt0.c0))=((t0.c87, rt1.c0, rt1.c0))) END FROM t0, v0 RIGHT OUTER JOIN rt1 ON (rt1.c0 COLLATE RTRIM IN ()) WHERE (((((NULL)-(0.1576224685187506))) NOT NULL));SELECT DISTINCT '1463849099' FROM t0, v0, rt1, rt0; -- 0ms;
SELECT ALL (NOT (((rt0.c0)&(v0.c1)))) FROM rt0;SELECT AVG(((rt0.c2)<<(rt0.c2))) OVER (), LAST_INSERT_ROWID() COLLATE RTRIM, ((((((((x'')OR((rt1.c1 IN (v0.c2)))))AND(TOTAL(rt1.c1))))OR(((v0.c0) IS FALSE))))OR((rt1.c2 IN ()))) FROM rt0, rt1, t0, v0 WHERE (((((UPPER(0.16540917226864515))OR(((NULL)<=(NULL)))))OR((x'' IN ())))) ORDER BY CAST(((rt1.c1)%(v0.c2)) AS REAL), LIKELIHOOD((+ (rt1.c1)), 0.13425864376417462); -- 0ms;
SELECT ALL ((((v0.c0)==(x'')))==(((v0.c2) IS TRUE))) FROM rt1, v0 NOT INDEXED, rt0 WHERE (LOWER((((']3')) BETWEEN (('X{')) AND ((-1.876667761E9))))); -- 0ms;
SELECT DISTINCT json_extract(rt1.c2, rt1.c3), rt0.c0, (((rt0.c0 IN ()))IS NOT(rt1.c3 COLLATE NOCASE)) FROM rt1;SELECT DISTINCT CAST((((t0.c87)) BETWEEN ((rt1.c2)) AND ((v0.c2))) AS REAL) FROM v0, rt0 LIMIT -703927475 OFFSET -831423624;SELECT ALL COUNT(*), ((TRIM(DISTINCT rt0.c0)) NOT NULL), ((((((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c0)))OR(((t0.c38) BETWEEN (rt1.c0) AND (v0.c1)))))AND(((v0.c1)/(rt1.c3)))), CASE WHEN (((rt1.c3)) NOT BETWEEN ((v0.c2)) AND ((rt1.c2))) THEN ((rt1.c0)<(v0.c0)) WHEN (+ (rt0.c2)) THEN ((rt0.c1)|(v0.c2)) WHEN ((v0.c1) BETWEEN (NULL) AND (rt1.c1)) THEN TOTAL(rt1.c3) END, COUNT(*) OVER () FROM rt0, v0 ORDER BY LIKELIHOOD(v0.c2 COLLATE RTRIM, 0.16725961713228077) ASC  NULLS LAST, CASE t0.c87 COLLATE BINARY  WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt1.c0)) THEN ((rt1.c1)<=(rt1.c3)) END ASC, ((UPPER(rt0.c1))=((((rt1.c0)) NOT BETWEEN ((t0.c38)) AND ((rt1.c0)))));SELECT (((((rt1.c1)==(v0.c0))))==(((+ (v0.c0))))) FROM v0, t0, rt0, rt1 ORDER BY TRIM(DISTINCT rt0.c1) DESC; -- 0ms;
SELECT DISTINCT (((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((v0.c2))))%(x'')), CAST(rt0.c0 AS INTEGER), (((rt0.c0)) NOT BETWEEN ((((((v0.c2)OR(v0.c1)))OR(rt0.c1)))) AND ((rt1.c3))) FROM v0, rt1 WHERE ((~ (('-9223372036854775808' IN ()))));SELECT DISTINCT (((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c87)))) IS TRUE), (((((((((+ (v0.c2)))AND(v0.c2)))OR(((rt1.c2)<(rt1.c0)))))OR((rt1.c2 IN ()))))AND(((((rt1.c1)AND('1813266231')))AND(rt1.c1)))), ((((((v0.c1) NOT NULL))AND(MIN(x''))))OR((v0.c0 IN ()))) FROM v0, rt0, t0, rt1; -- 0ms;
SELECT ALL TOTAL((((v0.c2, rt1.c2, v0.c0)) BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt1.c2, x'', v0.c0)))), (('!N') NOTNULL), ((((SQLITE_COMPILEOPTION_GET(rt0.c2))AND((('0.41483674524249103')LIKE(v0.c0)))))OR(((t0.c87)*(v0.c0)))) FROM t0, rt1, rt0 WHERE (((rtreenode('-985552315', NULL)) NOT BETWEEN (((((((((NULL)AND(0.010384801745072392)))AND(-1.557801345E9)))AND(NULL)))AND(0X67b4516b))) AND (((x'')=(x'')))));SELECT DISTINCT (NOT (((((v0.c2)AND(rt1.c1)))AND(rt0.c0)))) FROM rt0, t0, v0, rt1 WHERE ((((('')<(0.4802118932054038))) NOT BETWEEN ((((((((('-1503243546')AND(x'')))AND(NULL)))AND('Xf( ]')))OR(1.394805009E9))) AND (CASE x'31a3'  WHEN '~Z4Y' THEN x'' END))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN 'l[!\r	iq' THEN x'' END)>=(((t0.c38) BETWEEN (v0.c2) AND (rt1.c1)))), ((v0.c0 COLLATE RTRIM)>=((v0.c2 IN ()))), LOWER(DISTINCT '1595281236') FROM t0, v0, rt0;SELECT DISTINCT (((t0.c38 IN ())) NOTNULL), (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((v0.c1)))) IS FALSE), ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((((rt1.c2))<((v0.c0))))) FROM v0, t0 WHERE (((CAST('ei4དoD' AS INTEGER))>=(((NULL)>(NULL)))));SELECT DISTINCT (('&')/(t0.c87)) COLLATE RTRIM FROM rt0 WHERE (((((((NULL)) BETWEEN ((x'')) AND ((1700843704)))))>((('-1' IN ('gT/(A')))))) GROUP BY ((CASE WHEN rt1.c0 THEN v0.c2 END)IS(rt0.c1 COLLATE NOCASE)) HAVING (((t0.c87)) NOT BETWEEN (((- (v0.c2)))) AND ((x'')));SELECT DISTINCT CAST(MAX(x'') AS INTEGER), ((v0.c2 COLLATE NOCASE)GLOB(rt1.c3)), (((NULL)%(rt0.c0)) IN ()) FROM rt0, t0, rt1;SELECT MIN((v0.c1 IN (rt1.c2, v0.c0))) FROM rt1;SELECT CASE WHEN 0.23803966485536332 THEN rt1.c1 COLLATE RTRIM WHEN (t0.c87 IN ()) THEN 1344498186 WHEN (('wꞹ') NOT BETWEEN (v0.c2) AND (v0.c1)) THEN v0.c0 COLLATE NOCASE ELSE 'hiqu' END FROM rt0, v0 WHERE ((((((((('1328784188')AND(1.64730212E9)))AND(x'ee55')))AND((('1228361986')|(NULL)))))AND((~ (NULL)))));SELECT ALL (((~ (t0.c87))) BETWEEN (SUM(rt1.c0)) AND (((t0.c38) IS FALSE))) FROM rt1 GROUP BY ((((v0.c1)+(rt1.c3)))-(CAST(rt1.c0 AS BLOB))) HAVING CASE WHEN CASE rt1.c1  WHEN x'' THEN t0.c87 WHEN v0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN ((t0.c38) IS FALSE) WHEN CASE WHEN rt1.c3 THEN v0.c2 ELSE v0.c2 END THEN CASE rt0.c1  WHEN NULL THEN rt1.c0 END WHEN (((rt1.c0))<((rt1.c1))) THEN ((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c3)) ELSE LIKE(rt1.c0, rt1.c1) END;SELECT ALL rt0.c2 FROM rt1, v0, rt0 WHERE ('H1cq' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (v0.c1 IN (CAST(t0.c87 AS REAL))) FROM v0 WHERE ((~ (x'f17c')) COLLATE RTRIM);SELECT ALL AVG(NULL), (((CASE WHEN rt1.c1 THEN t0.c38 WHEN v0.c2 THEN t0.c87 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN rt0.c0 WHEN 0.6037256580885767 THEN '7(F*1/O' ELSE rt1.c2 END, (+ (rt0.c0)), ((v0.c1)%(rt1.c2))))=((MAX(v0.c0), ((v0.c2) NOTNULL), ((v0.c0) NOT BETWEEN (v0.c2) AND (rt0.c1))))), LOWER(GROUP_CONCAT(x'')), GROUP_CONCAT(LOWER(DISTINCT rt0.c0)), GROUP_CONCAT(rt0.c1) OVER () FROM rt1, v0, rt0;SELECT DISTINCT TOTAL(CASE WHEN t0.c38 THEN rt1.c2 WHEN 0xffffffffc434cfbf THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN 0.3364544942829577 THEN v0.c2 WHEN v0.c2 THEN NULL END) OVER () FROM v0, rt0, rt1 WHERE (((((0xffffffffe70993c9)-(x''))) BETWEEN ((NOT ('ci)'))) AND (CAST('-1557801345' AS NUMERIC))));SELECT rt0.c1, (((rt1.c0, v0.c0, t0.c87, t0.c87, t0.c38)) NOT BETWEEN ((x'', (((rt1.c0))>=((t0.c87))), NULLIF(DISTINCT rt1.c2, ''), (v0.c2 IN (t0.c87)), (((rt0.c0, t0.c38, v0.c1))=((v0.c0, t0.c38, rt0.c0))))) AND ((((rt1.c2)>=('+q>K藟x')), rt0.c0, (v0.c1 IN (rt1.c3)), ((0.5751375343163758)AND(rt1.c1)), UNICODE(rt0.c2)))), MIN(((rt0.c2)>=(t0.c38))) FROM rt1;SELECT DISTINCT TOTAL(((rt1.c2)&(rt0.c1))) OVER () FROM t0, rt0, rt1, v0; -- 0ms;
SELECT (((v0.c0)) BETWEEN (((~ (rt1.c1)))) AND ((((rt1.c3)=(rt0.c1))))), (((rt1.c1)LIKE(NULL)) IN ()), STRFTIME(NULL, (v0.c1 IN ()), ((rt1.c3)/(rt0.c2)), ((t0.c38) NOT BETWEEN (t0.c38) AND (v0.c1)), (t0.c87 IN (rt1.c0))) FROM rt0, t0, rt1, v0 WHERE (((CASE 'YW'  WHEN x'' THEN x'23956e0e' END) BETWEEN ((+ ('1517117452'))) AND ((NOT (NULL))))); -- 0ms;
SELECT (CASE rt1.c2  WHEN rt1.c2 THEN v0.c2 ELSE rt1.c1 END IN (((rt1.c3)<=(t0.c38)))) FROM v0 WHERE (((NULL COLLATE RTRIM)IS NOT(SQLITE_VERSION())));SELECT ALL CAST((((''))<((rt1.c0))) AS INTEGER) FROM t0, rt0, v0 NOT INDEXED, rt1 ORDER BY ((x'') IS TRUE) ASC  NULLS FIRST; -- 0ms;
SELECT (- (((v0.c1)&(v0.c0)))), CASE (((rt1.c3))>=((t0.c87)))  WHEN (((rt1.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) THEN ((rt0.c1)||(rt1.c0)) ELSE t0.c87 END, COUNT(((v0.c1) IS FALSE)) FROM rt0, v0 WHERE ((0.42173837892780097 COLLATE RTRIM IN ())) ORDER BY ((CAST(rt1.c3 AS NUMERIC))-(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))) ASC LIMIT 892086971 OFFSET -437320731;SELECT ALL LAST_VALUE((rt0.c1 COLLATE NOCASE IN ())) OVER ( PARTITION BY CASE WHEN ((rt1.c3)<=(rt0.c2)) THEN v0.c2 COLLATE BINARY ELSE (NOT (rt1.c0)) END, (((v0.c1, NULL, rt1.c2)) NOT BETWEEN (((~ (v0.c1)), (NOT (v0.c1)), (((rt0.c2))<((rt1.c3))))) AND ((((rt1.c0)OR(v0.c0)), CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c87 END, (+ (rt1.c0)))))) FROM t0, rt1, rt0;SELECT DISTINCT GROUP_CONCAT((('巕6') NOT NULL)) OVER (), ((rt1.c2) BETWEEN (rt0.c1) AND (v0.c2)) COLLATE RTRIM, LAST_INSERT_ROWID() COLLATE NOCASE FROM v0 WHERE (CAST(UPPER(DISTINCT x'f426') AS TEXT));SELECT DISTINCT ((((rt0.c0)<(rt1.c2))) BETWEEN ((~ (rt1.c1))) AND (((rt0.c2) NOTNULL))) FROM v0, t0 WHERE (((x'b2e4') NOT BETWEEN (NULL) AND (0.8672665967013911)) COLLATE RTRIM);SELECT DISTINCT CAST(((rt1.c2) IS TRUE) AS BLOB) FROM t0, v0, rt1, rt0 LIMIT 504963809 OFFSET 479927540; -- 0ms;
SELECT (((rt1.c1)) NOT BETWEEN ((GROUP_CONCAT(v0.c1))) AND ((((rt0.c1)LIKE(rt0.c0))))) FROM t0;SELECT DISTINCT '' FROM rt1, v0 WHERE (((((('')AND(NULL)))OR(0.03843463280787629)) IN ((x'd060b443' IN ())))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1) NOTNULL))OR(CAST(rt0.c1 AS BLOB))))AND(rt1.c1 COLLATE NOCASE)) FROM t0, rt0, rt1, v0; -- 0ms;
SELECT ((((CASE WHEN v0.c0 THEN v0.c2 WHEN t0.c38 THEN rt1.c2 WHEN rt0.c1 THEN t0.c38 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c87 THEN NULL END)AND(((rt1.c0)>=(v0.c2)))))AND(((rt1.c0)!=(rt1.c2)))) FROM t0, rt0;SELECT (~ (((v0.c0)LIKE(v0.c1)))) FROM t0;SELECT DISTINCT SUM(v0.c1) OVER () FROM t0 CROSS JOIN rt0 ON ((rt1.c1 IN ()) IN ());SELECT COUNT(*) FROM v0, t0 WHERE (CASE ((NULL)AND('-148669104'))  WHEN IFNULL(DISTINCT 0.8457189249530803, 0.40167320376683724) THEN TRIM(NULL, x'') WHEN (((NULL))>(('-1277506958'))) THEN ((x'') ISNULL) WHEN -1497380860 COLLATE BINARY THEN (((0.9541541129032226)) BETWEEN ((x'')) AND ((NULL))) END) ORDER BY ((((JULIANDAY(rt0.c0, 1999723125, t0.c38))AND(((v0.c2) NOTNULL))))OR(((rt1.c1) NOTNULL)))  NULLS LAST;SELECT ALL GROUP_CONCAT((- (v0.c0))) OVER () FROM v0, rt0, t0, rt1 WHERE ((load_extension('-2008481451') IN ())) LIMIT -445328333; -- 0ms;
SELECT DISTINCT (('-49913822')=(((v0.c1)*(rt1.c0)))), rt1.c0, COUNT(((t0.c87)<<(rt1.c1))) OVER () FROM v0, rt1, rt0, t0 NOT INDEXED; -- 0ms;
SELECT ALL '' FROM rt1; -- 0ms;
SELECT DISTINCT (+ (rt0.c2)) COLLATE BINARY FROM t0, rt0 WHERE ((- (CASE '-1337341800'  WHEN NULL THEN x'' END))); -- 0ms;
SELECT ((((((((highlight(rt1.c3, t0.c87, '-1375692984', rt1.c3))AND(((rt0.c0) NOTNULL))))AND((~ (rt1.c1)))))OR(((((rt1.c1)AND(rt0.c0)))OR(rt1.c3)))))AND(((rt0.c0)>=(v0.c2)))), (GROUP_CONCAT('D') IN (((rt1.c1) BETWEEN (v0.c2) AND (rt1.c3)))), CASE rt0.c1  WHEN CHANGES() THEN COUNT(*) END FROM rt0, t0, v0 WHERE (CASE WHEN 0.8088056003385408 THEN '-2012373146' WHEN NULL THEN x'4162' WHEN '>L' THEN 0.3022940488497695 WHEN 'tC' THEN x'' WHEN NULL THEN x'' END COLLATE NOCASE);SELECT DISTINCT (NOT (((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))) FROM v0, rt0, rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c2 AS INTEGER)) BETWEEN (CAST(x'' AS TEXT)) AND (rt1.c3 COLLATE NOCASE)) FROM v0, rt1, t0 GROUP BY (NOT (CAST(NULL AS REAL))); -- 1ms;
SELECT DISTINCT ((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c1)) COLLATE BINARY, (+ (t0.c87)), LIKE(t0.c38, CAST(rt0.c1 AS BLOB), 'u') FROM rt0 WHERE (((0.28483697042854217 COLLATE RTRIM)*(((0.033597353777010786)IS NOT(0.7771116839779543)))));SELECT DISTINCT TRIM(DISTINCT ((rt1.c2)>(0Xffffffffb37c8047))), COUNT(*) FILTER(WHERE ((((rt0.c1) NOT NULL))OR(((rt1.c1) NOT BETWEEN (rt0.c1) AND (v0.c2))))) OVER (), NTH_VALUE((((0X7bb58a95)=(rt0.c0)) IN ()), (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((0xffffffffa371f267))))AND(CAST(rt0.c1 AS REAL))))AND('O?\e*Lu9x'))) OVER (), CAST((((rt1.c2, t0.c38, rt0.c0))<=((rt1.c1, rt0.c2, rt0.c1))) AS BLOB), LTRIM(((rt0.c2)<=(rt1.c1)), ((v0.c2) BETWEEN (t0.c38) AND (NULL))) FROM rt0;SELECT GROUP_CONCAT(((rt1.c0) IS FALSE)) OVER () FROM v0 WHERE ('i☿');SELECT DISTINCT LAST_INSERT_ROWID(), CASE ((rt1.c3)AND(rt0.c2))  WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c38))) THEN TOTAL(v0.c1) END, (((rt1.c0) BETWEEN (t0.c87) AND (v0.c1)) IN (rt1.c1 COLLATE NOCASE)) FROM rt1 WHERE (PRINTF((('qw')AND(NULL))));SELECT ALL CAST(CAST(rt1.c3 AS BLOB) AS NUMERIC), COUNT(*) OVER (), LIKELY(DISTINCT ((rt1.c1)/(v0.c2))) FROM rt1;SELECT ALL (((rt0.c2 IN (v0.c2)))/((~ (v0.c2)))) FROM rt0, t0, rt1 WHERE (CASE WHEN 7.17207055E8 THEN SQLITE_SOURCE_ID() ELSE CAST(x'ce831197' AS INTEGER) END);SELECT DISTINCT (((((t0.c87)<(rt0.c2)), (('') NOT NULL), t0.c38 COLLATE RTRIM, TOTAL(rt1.c3), PRINTF(v0.c2)))>((CASE WHEN t0.c38 THEN rt0.c0 ELSE v0.c2 END, CASE rt0.c0  WHEN rt1.c2 THEN t0.c38 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, TYPEOF(DISTINCT rt1.c2), rt1.c0, (rt0.c1 IN ())))) FROM t0, rt0;SELECT (rt0.c1 IN (v0.c1)) COLLATE BINARY FROM rt0 LIMIT -596634366 OFFSET 553087352;SELECT DISTINCT COUNT((((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND (('-957919160'))) COLLATE BINARY) FILTER(WHERE 0.3561267059973028) OVER () FROM t0, v0, rt1 WHERE (CASE WHEN CASE WHEN x'' THEN 0xffffffffc494d465 ELSE '2ーཷ᜛' END THEN ((0xffffffff88e652bb) NOT BETWEEN (NULL) AND (NULL)) ELSE ('!u	nHm' IN ()) END); -- 0ms;
SELECT ALL COUNT(*), ((CAST(rt1.c1 AS BLOB)) IS TRUE), ((((rt0.c2) NOT BETWEEN (rt0.c0) AND ('#6F8')))LIKE(CAST(rt0.c0 AS TEXT))) FROM rt0 WHERE (4.67793479E8);SELECT DISTINCT '1200764854' FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((v0.c1))<((v0.c2))) IN ()) FROM v0, rt1 WHERE ((((('')&(0.9633356665162106)))GLOB((NOT ('-777775345'))))); -- 0ms;
SELECT CAST(CAST(NULL AS INTEGER) AS REAL), (((CAST(rt0.c1 AS REAL)))=((((v0.c2) BETWEEN (v0.c0) AND (''))))), ((((0xbc03cf1)||(rt0.c1))) ISNULL) FROM t0 WHERE (((CAST(NULL AS REAL))%(CASE 'Xg[U'  WHEN '1880497691' THEN 832546972 END))) GROUP BY (((NOT (rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN t0.c38 ELSE rt1.c1 END) AND ((~ (x''))));SELECT DISTINCT LIKELY((~ (rt0.c0))) FROM rt1, t0 WHERE (CAST('hPAi' AS NUMERIC));SELECT ((((((rt1.c0)OR(rt0.c0)))OR(t0.c38)))IS(CAST(v0.c0 AS REAL))) FROM rt0, v0, rt1 WHERE ((((((('')AND(x'')))OR('1625318285'))) NOT NULL)) ORDER BY ((t0.c87 COLLATE BINARY)>=((rt1.c0 IN ()))) DESC;SELECT DISTINCT rt1.c3 FROM rt0, rt1, v0 WHERE ((((NULL)) BETWEEN ((((NULL)IS NOT('0.22051004298348842')))) AND ((((x'c698')!=(0.9338851132246432)))))) GROUP BY ABS(rt0.c1), ((t0.c38)||(((((-1715853785)AND(v0.c1)))AND(t0.c38)))), ((v0.c2 COLLATE BINARY)-(CAST('' AS BLOB)));SELECT ALL DATETIME(((t0.c87)GLOB(t0.c87)), LOWER(DISTINCT t0.c87), ((t0.c38) NOT BETWEEN (v0.c2) AND (rt1.c0)), ((v0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c0)), SUM(t0.c87)), (rt0.c2 COLLATE BINARY IN (LIKELIHOOD(DISTINCT rt1.c3, 0.6965772273251999))), CASE CASE WHEN rt0.c2 THEN v0.c1 ELSE rt1.c0 END  WHEN json_valid(rt0.c0) THEN TOTAL(0.644813788367668) ELSE ((((rt1.c1)OR(t0.c38)))AND(0.4508286021535798)) END FROM rt1 WHERE (((CAST(NULL AS TEXT))=((('') IS FALSE)))) LIMIT -1648560809 OFFSET -1360950698;SELECT ((((((((rt0.c1)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)))AND(rt0.c2)) COLLATE RTRIM FROM v0, t0, rt0, rt1; -- 0ms;
SELECT DISTINCT CAST((NOT (v0.c1)) AS REAL) FROM rt0, t0 WHERE (((((0.4197566955626665) ISNULL))|(((('1012525553', NULL, '1738029081', '197147889', '1552448890'))==((NULL, 0.5473135039460825, NULL, 0.04723674396181321, x'')))))) GROUP BY (rt0.c2 IN (rt1.c1)) COLLATE RTRIM HAVING ((((t0.c38)AND(v0.c0))) NOT BETWEEN (GROUP_CONCAT(rt0.c2)) AND (((v0.c1) BETWEEN (rt1.c1) AND (v0.c1)))) ORDER BY (((((rt1.c3))>=((rt1.c1))))GLOB(((rt0.c1) NOTNULL)));SELECT DISTINCT ((((0xffffffff8c56120f) IS TRUE))IS(((((((((rt1.c0)OR(rt0.c1)))OR(rt1.c0)))OR(rt1.c1)))OR(v0.c0)))) FROM t0, v0 WHERE ((((NULL)) NOT BETWEEN (((((NULL, NULL, '5닛'))>=((0.6884597564333109, x'', x''))))) AND (((NULL IN (NULL, ''))))));SELECT DISTINCT CASE SUM(rt1.c0)  WHEN 0.41295688175926126 THEN (rt0.c2 IN (v0.c2, v0.c2)) END FROM rt0, v0, t0, rt1 WHERE (((((0.6474325298196671)<(0.6020437737091011))) NOT BETWEEN (CAST('.7,᨝\n' AS TEXT)) AND (HEX(DISTINCT 0.3790891439119307)))); -- 0ms;
SELECT LIKELY(DISTINCT CAST(t0.c38 AS NUMERIC)) FROM v0, rt1, t0 WHERE (LIKELY(((NULL)GLOB(NULL)))); -- 0ms;
SELECT ALL COALESCE(CASE 0.14953799673510104  WHEN v0.c1 THEN rt1.c2 WHEN v0.c1 THEN rt0.c1 WHEN t0.c38 THEN rt1.c3 ELSE rt0.c2 END, v0.c2 COLLATE BINARY, LIKELIHOOD(DISTINCT rt1.c0, 0.39025740445469215), rt0.c1, TOTAL(v0.c1), ((v0.c1)*(t0.c87))) FROM rt1, t0, v0 WHERE ('');SELECT ALL CAST(((rt1.c2)<<(rt1.c1)) AS REAL) FROM v0, rt0, rt1, t0 WHERE ((((0X28daff0e) NOT BETWEEN ('qန') AND ('-97367953')) IN ((('M!') IS FALSE), (((''))=(('')))))); -- 0ms;
SELECT DISTINCT ((COUNT(rt1.c2)) ISNULL) FROM rt0, v0 WHERE (CASE WHEN '670163571' THEN (('-637569928')IS(NULL)) END);SELECT (((rt0.c1)==(t0.c38)) IN ()) FROM rt1, t0, v0 WHERE (((x'' COLLATE RTRIM) NOTNULL)); -- 0ms;
SELECT ALL COUNT(2.11578496E9) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM rt1 WHERE (CASE WHEN HEX(DISTINCT NULL) THEN 0.18106140573342622 COLLATE BINARY ELSE (('1247015829')>>('')) END); -- 1ms;
SELECT (((rt0.c2))<=((v0.c2 COLLATE RTRIM))) FROM t0 WHERE ((+ (((x'')|(NULL)))));SELECT CAST((- (rt1.c0)) AS BLOB) FROM rt1; -- 0ms;
SELECT ALL CASE WHEN x'0617' THEN (((0x1d2e7755, t0.c38, rt1.c1))<>((rt1.c3, '偋d', t0.c87))) ELSE CASE NULL  WHEN v0.c1 THEN v0.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c0 THEN 0.2594849375349746 ELSE t0.c38 END END, ((((v0.c0) NOT NULL)) NOT BETWEEN ((t0.c38 IN ())) AND (TOTAL(rt1.c1))), (((t0.c38, t0.c38, rt0.c0)) BETWEEN ((((rt1.c0)<=(rt1.c2)), ((t0.c87) NOT BETWEEN (t0.c38) AND (NULL)), CASE WHEN v0.c0 THEN rt1.c1 WHEN v0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 ELSE '' END)) AND (((rt1.c1 IN ()), CASE WHEN t0.c38 THEN rt1.c1 ELSE rt1.c3 END, CASE WHEN rt0.c2 THEN v0.c1 END))) FROM v0, rt0, rt1;SELECT rt1.c0 FROM rt0, rt1 WHERE ((((0.7054261097454592, ''',', '-1497942413')) BETWEEN ((((0.27400324371881657) NOT BETWEEN ('1364703892') AND ('1647302120')), (NULL IN ()), ((NULL)<=(-1.589270272E9)))) AND ((((((((((NULL)OR(x'')))OR(0.9981472875779189)))AND('')))AND(NULL)), (((NULL))=(('%start of year~'))), (((('1932285977')OR(x'')))AND('-838583835')))))); -- 0ms;
SELECT ALL CAST((((t0.c38))>=((NULL))) AS INTEGER) FROM t0, v0 WHERE ((((((((((((NULL)) BETWEEN ((-1804745088)) AND ((NULL))))OR((((0.733983446773147, x'', '165158343'))>=(('s篽b쇕TqW', x'', '1981013809'))))))AND(TRIM(DISTINCT x''))))AND(COALESCE(x'5da1', NULL, NULL, 0.43280547076434206))))AND(CASE WHEN NULL THEN 0Xffffffffaee18a56 ELSE x'' END))); -- 0ms;
SELECT DISTINCT ((CASE WHEN v0.c0 THEN rt0.c1 END)AND(((rt1.c0) ISNULL))), ROW_NUMBER() OVER ( ORDER BY NULL DESC  NULLS LAST), COUNT(*) FILTER(WHERE (('0.25175450429940605') NOT BETWEEN (((v0.c2)+(v0.c2))) AND ((rt0.c1 IN (t0.c87))))) OVER () FROM t0, v0;SELECT ALL (NOT (CAST(t0.c87 AS INTEGER))) FROM t0, v0, rt1 WHERE ((((SQLITE_VERSION()))=((('' IN ()))))); -- 0ms;
SELECT ALL NTH_VALUE(((rt1.c3 IN (rt1.c2)) IN ()), CAST(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) OVER () FROM rt1, rt0 WHERE (HEX(((NULL) BETWEEN (NULL) AND (x'')))); -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((CAST(rt1.c0 AS TEXT)))) FROM t0, rt1 WHERE (((NULL COLLATE RTRIM)IS(CAST('-1153104072' AS NUMERIC))));SELECT DISTINCT ((UPPER(DISTINCT rt0.c1))/(((v0.c2)*(t0.c38)))) FROM v0, t0, rt1;SELECT ALL ((((((((((rt0.c0) NOTNULL))OR(((rt1.c2)>(rt1.c2)))))OR(((rt1.c3) NOT NULL))))OR('	')))AND(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c0)))) FROM rt0 WHERE ((((0.40496761108978796, x'', 0.7801180898223671)) NOT BETWEEN (((x'7705' IN ('', x'86ee')), x'' COLLATE BINARY, ((x'') BETWEEN ('-2142517376') AND (x'')))) AND (((x'' IN ()), (('''j') BETWEEN (NULL) AND (0.7421308641208745)), CAST('247136386' AS TEXT)))));SELECT DISTINCT FIRST_VALUE((((((((((rt0.c0)AND(rt0.c0)))AND(0.2776685916987146)))AND(rt0.c1)))OR(v0.c0)) IN ())) OVER ( ORDER BY (NOT (((rt1.c3)<=(rt1.c3))))  NULLS FIRST, (((t0.c87)) NOT BETWEEN (((((rt1.c2, rt1.c2, rt0.c2)) NOT BETWEEN ((t0.c38, rt1.c2, rt1.c1)) AND ((rt1.c3, rt1.c0, rt0.c2))))) AND ((rt1.c0 COLLATE BINARY)))) FROM rt0, v0 WHERE (((((CASE WHEN 'vcR\nUdnow㔠(' THEN 0.06850388157403331 ELSE 0x6ea2213 END)OR(CAST(1526578168 AS NUMERIC))))AND(((((((((1.78310228E9)OR('')))OR('-1481107085')))AND(x'e9d4')))AND('')))));SELECT DISTINCT (NOT (((t0.c38) IS TRUE))) FROM rt0;SELECT DISTINCT COUNT(*) OVER () FROM rt1, v0, t0, rt0 WHERE (CAST(CASE '/o?䠊,㴈HaO'  WHEN 'S3' THEN x'53da' ELSE '' END AS BLOB)); -- 0ms;
SELECT DISTINCT (x'' IN (CASE WHEN rt0.c0 THEN rt1.c0 ELSE 0Xffffffffc739cde9 END)) FROM rt1, t0 WHERE (((((((((((((LOWER(NULL))AND((('ufwQ1esC') IS FALSE))))OR('-934142686')))OR(((456824652)>(0.8022955901261472)))))AND(CAST('-1412633830' AS BLOB))))AND(((0.8183810807016141)||('Dkꃍ]㧏b')))))OR(CAST('z喸' AS BLOB))));SELECT ((CASE rt0.c0  WHEN t0.c38 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c2 WHEN x'' THEN t0.c87 WHEN v0.c1 THEN t0.c38 ELSE v0.c0 END) ISNULL) FROM t0, rt1;SELECT ALL ((((rt1.c2)AND(rt0.c2)))AND(rt1.c3)) COLLATE RTRIM, HEX(DISTINCT x'9c2c'), ((((v0.c0)IS NOT('')))==(((rt1.c1)OR(rt1.c1)))) FROM rt0;SELECT ALL ((((((((((rt1.c3)OR(0x53230911)))AND(((((rt0.c1)OR(rt1.c0)))AND(rt1.c3)))))AND(CASE WHEN rt1.c2 THEN v0.c0 END)))AND(COUNT(t0.c38))))AND((((rt1.c2, 0.5503501536472737, rt0.c0))<=((v0.c2, rt1.c3, t0.c87))))) FROM rt0, t0, rt1, v0 GROUP BY ((((rt1.c3 IN (t0.c87))))<>((CASE WHEN v0.c0 THEN t0.c38 END))) HAVING COUNT(*); -- 0ms;
SELECT (NOT ((((NULL, t0.c38, rt0.c0)) BETWEEN ((v0.c0, t0.c38, v0.c0)) AND ((v0.c2, t0.c38, t0.c38))))) FROM rt0, rt1, t0, v0 GROUP BY ((((('-1448829341' IN ()))OR((+ (rt1.c0)))))AND((((rt1.c2))>=((t0.c38))))), CASE WHEN ((v0.c0) BETWEEN (t0.c87) AND (NULL)) THEN (((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((rt1.c1))) END, rt0.c1; -- 0ms;
SELECT DISTINCT NTH_VALUE((('-148669104') ISNULL), (((rt0.c2))>=((v0.c2))) COLLATE BINARY) OVER () FROM rt0, v0; -- 0ms;
SELECT COUNT(rt0.c2) COLLATE RTRIM COLLATE RTRIM FROM rt0, rt1 WHERE ('1431775439'); -- 0ms;
SELECT ((CAST(rt1.c1 AS NUMERIC)) NOTNULL), NULL, ((SQLITE_SOURCE_ID())!=('1913175488')) FROM rt0;SELECT DISTINCT UNLIKELY(((rt1.c2)<<(rt1.c1))), ((((((rt0.c0)AND(rt1.c0)))AND(t0.c87))) IS TRUE), ((MIN(v0.c1))-(((v0.c0)IS(rt0.c2)))) FROM t0, v0, rt0 WHERE ((((((((('巕5')OR(NULL)))AND(0xffffffffc6253483)))OR(CASE NULL  WHEN 'yl*pxlEP' THEN 0xffffffffe92ae3e7 ELSE 0.7887545716449753 END)))AND(((0.7892096838009476) BETWEEN (0.4847245070982814) AND (NULL)))));SELECT ALL CAST(CASE v0.c1  WHEN rt1.c0 THEN t0.c38 WHEN t0.c38 THEN rt1.c3 WHEN t0.c87 THEN rt0.c1 END AS NUMERIC), (((0.4093573204533706) NOT BETWEEN (t0.c38) AND (rt1.c2)) IN ((((v0.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))), CASE ((v0.c2) NOT BETWEEN (t0.c38) AND (NULL))  WHEN (-372031379 IN (rt0.c1)) THEN AVG(t0.c87) WHEN ((t0.c87)>(2.146188953E9)) THEN (rt1.c3 IN ()) WHEN v0.c1 COLLATE NOCASE THEN (((-7.03927475E8))!=((rt0.c2))) END FROM t0, rt0, rt1, v0 ORDER BY ((t0.c38 COLLATE BINARY)>(CASE x''  WHEN '' THEN v0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c87 THEN t0.c87 WHEN NULL THEN v0.c2 WHEN rt1.c0 THEN rt1.c1 END))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE UNLIKELY(DISTINCT ((((t0.c38)AND(rt1.c0)))AND(t0.c38)))) OVER (), UNLIKELY(DISTINCT CAST(rt0.c0 AS INTEGER)), '\r~ks#d' FROM v0;SELECT (SUM(rt0.c1) IN ()), CASE WHEN AVG(rt1.c0) THEN ((v0.c0)IS NOT(rt0.c2)) WHEN ((v0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)) THEN (+ (rt1.c1)) WHEN CASE WHEN x'' THEN rt0.c1 ELSE t0.c87 END THEN rt0.c1 COLLATE NOCASE ELSE v0.c1 END, ((((NULL) BETWEEN (v0.c0) AND (rt1.c3)))-(TYPEOF(DISTINCT x''))), ((rt1.c2 IN (v0.c1, rt0.c1)) IN (CAST(rt1.c2 AS BLOB))), (((rt1.c2, v0.c1, v0.c2)) BETWEEN (((+ (rt1.c2)), (~ (t0.c38)), rt1.c3)) AND ((ABS(rt1.c3), (((rt1.c3))!=((v0.c2))), ((v0.c2)>>(v0.c0))))) FROM rt1, rt0, t0, v0 WHERE (CAST(0.23261958802700655 COLLATE RTRIM AS NUMERIC)) GROUP BY (((t0.c87 IN (v0.c0)))=((+ (rt1.c1)))); -- 0ms;
SELECT DISTINCT COUNT(CASE t0.c38  WHEN rt0.c1 THEN v0.c0 ELSE rt1.c1 END) OVER () FROM rt1 WHERE ((((x'ca6b', x'9c75', NULL))<(('XeOmQ2_u', NULL, 0.9298845145076204))) COLLATE RTRIM) GROUP BY ((json(x'e4d8'))==(((v0.c1) NOT BETWEEN (t0.c38) AND (rt0.c2)))) HAVING ((v0.c0 COLLATE NOCASE) NOT BETWEEN (CAST(rt1.c0 AS TEXT)) AND (LIKELY(rt1.c2)));SELECT DISTINCT (((x'' IN ())) BETWEEN (IFNULL(v0.c1, rt1.c3)) AND (MIN(v0.c0))), ((CASE WHEN v0.c2 THEN rt0.c0 END) NOTNULL), NULL FROM t0, rt0 WHERE (((CASE x'd92f8f72'  WHEN 1798775732 THEN NULL END)<=((((0.7549291428258564))==((-193727398))))));SELECT DISTINCT PERCENT_RANK() OVER () FROM v0 ORDER BY CAST(CASE rt1.c3  WHEN v0.c1 THEN '2|' WHEN rt0.c1 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c0 END AS REAL) DESC  NULLS FIRST;SELECT DISTINCT CASE WHEN CASE WHEN rt0.c2 THEN v0.c1 END THEN 0.5931230565497625 ELSE ((rt0.c2) NOT NULL) END FROM v0;SELECT CASE ((rt1.c2) IS FALSE)  WHEN (v0.c1 IN ()) THEN CASE WHEN 0xffffffff8511ff54 THEN rt1.c2 END ELSE t0.c87 END FROM rt0 WHERE ('\&*\T');SELECT DISTINCT CASE WHEN ((((((((rt0.c1)OR(rt0.c2)))AND(t0.c38)))OR(v0.c2)))OR(v0.c1)) THEN ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c87)))AND(v0.c2)))AND(rt1.c0)) ELSE x'' END, CASE t0.c87  WHEN rt1.c1 THEN rt0.c2 END COLLATE BINARY, TOTAL((((v0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c38)))) FROM v0, t0, rt1 WHERE ('1647302120');SELECT json_type(v0.c2) FROM rt1, v0; -- 0ms;
SELECT ((((((rt1.c3)OR(0Xffffffff8ce2e921)))OR(v0.c2)))=(((((t0.c38)OR(rt1.c0)))AND(rt0.c0)))), ((((((((GROUP_CONCAT(rt1.c0))OR(COALESCE(rt0.c2, v0.c2))))OR(((v0.c0) NOT NULL))))AND(((v0.c0)+(t0.c38)))))OR(v0.c2)), MIN(TOTAL((+ (v0.c2)))) FROM v0, rt1, t0;SELECT (((~ (rt1.c3)))>>(((-1360745173) BETWEEN (rt1.c1) AND ('fPzZ&,rj')))) FROM t0, v0, rt1 LIMIT -309142524 OFFSET -1275216956; -- 0ms;
SELECT DISTINCT ((((rt1.c2)OR(rt0.c0))) NOTNULL) FROM rt0, v0, t0 GROUP BY ((((t0.c38)!=(rt0.c1)))==(((((((((v0.c1)OR(t0.c38)))OR(t0.c38)))AND(v0.c2)))AND(rt0.c1)))) HAVING (((v0.c0 IN ())) NOTNULL) ORDER BY ((CASE WHEN v0.c0 THEN t0.c38 END) IS TRUE) ASC  NULLS LAST;SELECT DISTINCT json_array(v0.c2, rt0.c2, t0.c38, v0.c0, t0.c87, t0.c38) COLLATE BINARY FROM rt0, v0 WHERE (((((0Xffffffffb0ea1bc4)<=(-4.15284862E8)))LIKE((~ (NULL)))));SELECT ALL (- (CAST(rt1.c3 AS NUMERIC))) FROM v0, t0, rt0 WHERE (((((((((((NULL)AND(x'1a92')))OR(0.05199919937696784)))OR('uW')))OR(NULL)))||(((((NULL)OR(NULL)))AND(0.21083611986531825)))));SELECT ALL ((CAST(v0.c1 AS REAL))+(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))) FROM rt0;SELECT DISTINCT (((rt1.c2)*('-1106680480')) IN ()) FROM rt1, t0, rt0, v0 LIMIT 1463849099; -- 0ms;
SELECT DISTINCT COUNT(*), '0.27899646037183323', (((((((rt0.c2)) BETWEEN ((v0.c1)) AND ((rt1.c1))))AND((- (NULL)))))OR(((((t0.c38)OR(rt1.c0)))AND(rt0.c1)))) FROM v0, rt1, rt0, t0 GROUP BY ((((rt0.c2)AND(((t0.c38)<(rt0.c2)))))AND(t0.c38)); -- 1ms;
SELECT DISTINCT CASE WHEN ((t0.c87) IS TRUE) THEN COUNT(v0.c2) END FROM v0, rt1 WHERE ((- (((0Xffffffff94eb3a55) BETWEEN (NULL) AND ('HuOE<')))));SELECT DISTINCT 0.9051940274347466, COUNT((((rt1.c3))<=((t0.c87)))), (((((rt0.c0)) BETWEEN ((v0.c0)) AND ((t0.c38))))%(v0.c1)) FROM rt0, t0;SELECT ALL (COALESCE(DISTINCT rt0.c1, rt1.c0) IN ()) FROM rt1; -- 0ms;
SELECT COUNT(*), rt1.c2, LOWER(DISTINCT (rt1.c2 IN (rt0.c0, t0.c38))) FROM v0, rt1;SELECT DISTINCT COUNT(*) OVER () FROM v0, t0, rt0, rt1 NOT INDEXED WHERE ((((x'd377' COLLATE BINARY, NULL COLLATE BINARY, LIKE('*E', NULL)))<(((('0.3790891439119307')LIKE('-703927475')), ((((x'')OR(NULL)))OR('*')), (((0.400845910802217)) BETWEEN (('1648723734')) AND ((''))))))); -- 0ms;
SELECT DISTINCT CAST(NULL AS INTEGER), ((CASE WHEN rt1.c0 THEN rt1.c2 END) NOT BETWEEN (((((t0.c87)OR(rt1.c2)))OR(t0.c87))) AND (((t0.c87)GLOB(t0.c87)))), (((rt1.c2))<=((v0.c0))) COLLATE BINARY FROM rt0, v0 WHERE ((('')||(((0.02250442839557143)>(0X24175996))))) LIMIT -1130692845 OFFSET 627147907;SELECT DISTINCT HEX(CASE WHEN v0.c0 THEN t0.c38 END), MIN((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1)))) COLLATE NOCASE, CAST(((v0.c2)-(v0.c2)) AS INTEGER) FROM rt1, v0, rt0, t0 WHERE (((CAST(x'' AS TEXT))%((((((((('1664703598')AND(0x2957c68)))AND(0.3839656269358145)))AND('309684521')))OR('-640941407'))))); -- 0ms;
SELECT DISTINCT NULL, UPPER(rt0.c0 COLLATE NOCASE), MAX(rt1.c2), COUNT(*) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND (((0.33906607557667223)) NOT BETWEEN ((((v0.c0) BETWEEN (rt1.c2) AND (rt0.c1)))) AND (('1211560111'))) PRECEDING), LIKELY(CAST(rt0.c2 AS INTEGER)) FROM rt0, v0, rt1, t0 WHERE (((CASE 1068968524  WHEN 0.2733866325989338 THEN -1063729136 WHEN x'd9e3' THEN 0.6949796652986749 WHEN '197767274' THEN NULL ELSE x'2760' END)<=(CASE WHEN 0.39405819142788934 THEN 0.4093885405701566 ELSE 0.5256986109186906 END)));SELECT DISTINCT ')CLC2g' COLLATE NOCASE FROM rt1, t0, rt0, v0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT CAST(rt1.c2 AS REAL)) FROM v0, t0 WHERE (UNLIKELY(CAST(NULL AS BLOB)));SELECT DISTINCT CAST((((rt1.c3)) BETWEEN ((v0.c1)) AND ((rt1.c3))) AS NUMERIC), CASE WHEN CAST(t0.c87 AS BLOB) THEN ',4[[' COLLATE NOCASE WHEN ((t0.c87)|(x'')) THEN t0.c38 COLLATE BINARY WHEN ((t0.c38) IS FALSE) THEN '-2001868401' COLLATE BINARY ELSE (NOT (rt0.c2)) END, (((NULL)/(v0.c2)) IN ()) FROM v0 WHERE (CAST('-1375692984' AS REAL));SELECT ALL (+ (t0.c87)) COLLATE RTRIM COLLATE RTRIM FROM v0, rt1;SELECT ALL TOTAL(((x'd2e0') IS TRUE)) FROM rt1 WHERE (((('21537434' IN (x''))) NOT NULL)) GROUP BY COALESCE((rt0.c0 IN (rt1.c0, t0.c87)), '312069006');SELECT DISTINCT rt1.c1 FROM t0, rt1 FULL OUTER JOIN rt0 ON (CASE rt1.c1  WHEN x'' THEN rt1.c3 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN '-2075419834' WHEN v0.c0 THEN rt0.c0 WHEN rt1.c3 THEN 0.30653073288526345 END IN ()); -- 0ms;
SELECT DISTINCT rt1.c1 FROM v0, rt1 WHERE ((CASE WHEN NULL THEN NULL ELSE 'm怢3YQQ᳴' END IN ((0.9481914095358914 IN ())))); -- 0ms;
SELECT t0.c87 FROM rt1, v0, rt0 WHERE (((NULL COLLATE BINARY)*(0.15868858500920324 COLLATE NOCASE)));SELECT (((((((rt1.c0)) BETWEEN ((v0.c2)) AND ((rt0.c0))))OR((((v0.c0))<((0.1119975852066567))))))AND((((v0.c0)) NOT BETWEEN ((t0.c87)) AND ((rt1.c0))))) FROM t0, rt0, rt1 WHERE ('-2001868401');SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE (0x33408d5b) LIMIT 609609283; -- 0ms;
SELECT ALL LTRIM(COUNT(*), json_valid(v0.c2)) FROM rt0, rt1, t0, v0 WHERE (CAST(('197147889' IN ()) AS INTEGER)) ORDER BY ((+ (rt1.c3)) IN ()) DESC; -- 0ms;
SELECT (((v0.c0)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt1.c2) IS TRUE)))), (((((rt0.c1)>(rt0.c2))))>=((((rt1.c2) NOTNULL)))), v0.c1 FROM t0, rt0, v0, rt1; -- 0ms;
SELECT DISTINCT ((((((NULL)AND(v0.c2)))AND(rt1.c0)))*(((rt0.c1) IS TRUE))) FROM v0, rt0, rt1, t0 WHERE ((((0.6638271582937643)) BETWEEN ((CASE WHEN '543727367' THEN NULL END)) AND ((NULLIF(x'', 'Ay'))))) LIMIT -53427659; -- 0ms;
SELECT ALL (((rt0.c2 IN ())) NOT BETWEEN ('0.5218904632382474') AND (rt0.c0)), rt0.c1, v0.c2 FROM v0, rt0, t0, rt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT t0.c87 FROM rt1 WHERE ((UPPER('333819333') IN ()));SELECT DISTINCT ((((-2072788097)AND((((rt0.c0, v0.c0, rt1.c1)) BETWEEN ((rt1.c2, t0.c87, t0.c87)) AND ((rt0.c2, t0.c87, rt1.c3))))))AND(rt1.c3 COLLATE BINARY)) FROM rt0, rt1;SELECT DISTINCT CASE (v0.c2 IN ())  WHEN ((v0.c0)/(rt1.c2)) THEN (((rt1.c2, t0.c87, rt1.c0)) NOT BETWEEN ((rt1.c3, rt0.c1, t0.c87)) AND ((rt0.c2, rt0.c2, rt1.c2))) ELSE CASE WHEN rt1.c3 THEN v0.c1 ELSE v0.c2 END END FROM rt0, v0 WHERE (CAST(((0.49377600821254963)+(0.297589635865379)) AS NUMERIC)) GROUP BY CHANGES();SELECT ALL MAX((~ (rt1.c0))), ((((t0.c87)|(rt1.c0))) IS TRUE), rt0.c1 FROM v0, rt1;SELECT ALL CAST(CAST(rt0.c2 AS TEXT) AS REAL), CAST(rt0.c2 AS REAL), (((rt1.c1)) NOT BETWEEN (((t0.c38 IN (NULL)))) AND ((((t0.c87)GLOB(rt0.c0))))) FROM rt0, rt1, v0;SELECT rt1.c1 FROM rt0 WHERE ((((((('h') IS TRUE))AND(((NULL) NOT NULL))))OR(NULL COLLATE BINARY))) ORDER BY 't읟Gf9HkE';SELECT DISTINCT (((rt1.c0, rt1.c1, rt1.c2, v0.c1, v0.c1)) NOT BETWEEN ((CASE WHEN t0.c38 THEN NULL WHEN t0.c38 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END, 0Xffffffffe45de0db, rt0.c1 COLLATE BINARY, (0.08504636054921222 IN (rt1.c0)), json_quote(rt0.c0))) AND (((rt0.c2 IN ()), ((rt1.c1)/(v0.c2)), ((rt1.c1)<=(rt0.c1)), (+ (rt1.c0)), (NOT (v0.c2))))) FROM v0, t0, rt0, rt1; -- 1ms;
SELECT ((((rt1.c2) BETWEEN (rt1.c0) AND (v0.c2))) IS TRUE), ((((((((((((((((rt1.c1)AND(v0.c2)))AND(x'')))AND(rt0.c1)))OR(v0.c1)))AND((v0.c0 IN ()))))AND(AVG(rt1.c3))))AND(((v0.c1) BETWEEN (t0.c87) AND ('1-500000e*')))))AND(((rt1.c2) ISNULL))), json_type(NULL), v0.c0, 0.9348323927429569 FROM rt1;SELECT DISTINCT ((v0.c2)&(rt0.c2)) COLLATE RTRIM, CASE ((((t0.c87)OR(rt0.c0)))AND(t0.c38))  WHEN (- (v0.c2)) THEN CAST(rt1.c3 AS BLOB) END, (NOT (((rt1.c2) IS TRUE))) FROM rt0 WHERE (((0.6077694928763878 IN ()) IN ()));SELECT DISTINCT CAST(rt0.c1 AS BLOB), CAST(((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c1)) AS INTEGER), ((((((((((t0.c87)OR(v0.c1)))AND(rt1.c0)))OR(v0.c1)))OR(t0.c38))) NOTNULL), (~ (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c1 END)), HEX(TOTAL(t0.c38)) FROM v0, t0, rt1;SELECT ((((v0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3))) BETWEEN ((((t0.c38)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2)))) AND ((t0.c87 IN ()))), CASE WHEN CAST(v0.c1 AS REAL) THEN MAX(v0.c0) END, ((((rt0.c0)OR(v0.c2)))IS(((rt1.c2) ISNULL))) FROM rt0 WHERE (NULL);SELECT ((((rt1.c2)+(rt0.c0))) NOT BETWEEN (((v0.c2) NOTNULL)) AND (LIKELY(rt1.c3))) FROM t0, rt0, v0 WHERE (((TYPEOF(DISTINCT x''))||(x'5f427739' COLLATE BINARY)));