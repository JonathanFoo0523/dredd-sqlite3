-- Time: 2024/06/07 00:31:56
-- Database: database2
-- Database version: 3.40.0
-- seed value: 3804346602
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, compress=likely, uncompress=likely, matchinfo=fts3); -- 1ms;
UPDATE OR FAIL vt0 SET (c0)=(NULL) WHERE (('-504281855') BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END) AND ((0.6906494312947291 IN ()))); -- 1ms;
PRAGMA main.default_cache_size = -1117306868; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.8877101400573737); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 2ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1, c1)=(x'', '748142617', -1117306868); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, NULL), ('F+I5 쀙{', NULL), (x'', x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
END TRANSACTION; -- 6ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'7af93296'); -- 1ms;
PRAGMA secure_delete = FAST; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34702'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.40998169120181793); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 6ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', -148173054), (x'f88a', NULL), ('1314039388', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0.2054894369653817, '0.2054894369653817'), ('-1699045450', 0.9072433180158691), (x'', -3.31643045E8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 443277719); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x'b906', c0=x'' WHERE (vt0.c0 IN ()) COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.2054894369653817), (NULL), (x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2950'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 826601483); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35965'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62387'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1022254599); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.8374217008790955); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('* 9牿]E', x'8b4c'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR FAIL vt0 SET (c1, c0, c0)=(NULL, '-1699045450', '-1699045450'); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.1361448021548871); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0x36624eb6) WHERE ((((((vt0.c0) IS FALSE))AND(vt0.c1)))AND((- (vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1904144935); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '655'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL vt0 SET c1=x'' WHERE ((vt0.c0 COLLATE RTRIM)>(((vt0.c1) IS TRUE))); -- 3ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x'', 0.5022311396019467); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'acef', c1=0.2054894369653817, c1=NULL WHERE (((((vt0.c1) ISNULL)))=(((vt0.c0 IN (-1.48173054E8))))); -- 1ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (0.462300175559587); -- 5ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES (NULL, 0.09446527354748069); -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (NULL, NULL); -- 7ms;
PRAGMA soft_heap_limit; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c1=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-696695588,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'44c9', x'70d9'), ((NOT (NULL)) COLLATE BINARY, '748142617'), (x'1648bd37', 0.6906494312947291); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.13738317286580304); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='-696695588', c1=NULL; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '30316'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='' WHERE x''; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'9a50', ''), (1.314039388E9, -1.117306868E9), ('-1956820559', -4.91359617E8); -- 0ms;
PRAGMA mmap_size; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58778'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x'7ff4', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('\n', '-1406694916'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.recursive_triggers = false; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='', c1=0.5720670847181245; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET c1=NULL, c0=0.142066026283847 WHERE TOTAL_CHANGES(); -- 4ms;
CREATE TEMP TABLE t0 (c0 TEXT ); -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES ('-1406694916', 0.04593358225346733), (-1.117306868E9, 1613797229), (x'', x''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR FAIL vt0 SET c0=-1420534123, c0=0.9072433180158691 WHERE (((vt0.c1 IN (vt0.c1, NULL)))>((vt0.c1 IN ()))); -- 5ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('#8'), (NULL), (NULL), ('''q'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.1361448021548871), (0.8544379710916261), ('-132998052'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE vt0 SET c1=0.2054894369653817 WHERE vt0.c1; -- 1ms;
DROP TABLE vt0; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT AVG((NOT (t0.c0))) COLLATE BINARY, CAST(t0.c0 AS NUMERIC), GROUP_CONCAT('0.462300175559587') OVER () FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT LEAD(LTRIM(((t0.c0)>=(t0.c0)), (- (t0.c0))), '-1117306868', 0x36624eb6) OVER () FROM t0 ORDER BY LAST_INSERT_ROWID() DESC  NULLS LAST LIMIT 1366554577; -- 0ms;
SELECT (((((t0.c0)) BETWEEN ((x'e351')) AND ((t0.c0))))-(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (NOT (TOTAL(t0.c0))), ((((t0.c0)AND(CAST(t0.c0 AS BLOB))))OR((t0.c0 IN ()))), GROUP_CONCAT(((((t0.c0)AND('')))OR(t0.c0))), (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()) FROM t0 WHERE (((SQLITE_COMPILEOPTION_GET(NULL)) IS TRUE)) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT NULL) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c0)+(t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE x'6322' END WHEN (((0.15345357340772814))>((t0.c0))) THEN (((x'')) BETWEEN ((-152098086)) AND ((t0.c0))) END, CASE WHEN AVG(t0.c0) THEN CAST(t0.c0 AS BLOB) WHEN (NOT (NULL)) THEN json_insert(t0.c0, t0.c0, t0.c0) WHEN ((t0.c0)%(-1.956820559E9)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END, t0.c0 FROM t0 LIMIT -1406694916 OFFSET -1460275843; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER) FROM t0 GROUP BY (((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND ((ABS(t0.c0)))); -- 0ms;
SELECT ((json_extract(t0.c0, t0.c0)) NOT BETWEEN (t0.c0) AND (t0.c0)) FROM t0 LIMIT -1420534123; -- 0ms;
SELECT DISTINCT ((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(NULL)))AND(t0.c0)))IS NOT(NULL)), 0Xfffffffff04de062, CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END)) AND ((((t0.c0)|(t0.c0))))) FROM t0 LIMIT -1956820559 OFFSET -1406694916; -- 1ms;
SELECT DISTINCT (t0.c0 IN ()) FROM t0 WHERE ((ROUND(NULL, 'jB') IN ((- (''))))) LIMIT 912412342 OFFSET 1366554577; -- 1ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((((t0.c0)||(t0.c0)))) AND ((CASE WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT AVG(((('912412342'))!=((t0.c0)))) FILTER(WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)>>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) OVER (), ((CASE t0.c0  WHEN 0.00623666607505724 THEN t0.c0 END)LIKE(0xffffffffff65e7a5)), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) FROM t0 WHERE (CAST(0.9393894963236683 COLLATE BINARY AS NUMERIC)); -- 2ms;
SELECT DISTINCT CASE json_valid(t0.c0)  WHEN (t0.c0 IN ()) THEN GLOB(t0.c0, t0.c0) WHEN NULL THEN ((t0.c0) ISNULL) WHEN ((t0.c0)!=(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END, COUNT(COALESCE(DISTINCT t0.c0, t0.c0)), CASE t0.c0 COLLATE BINARY  WHEN (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END FROM t0 WHERE ('1631464439'); -- 0ms;
SELECT ((((t0.c0)&(NULL))) NOT BETWEEN (((((t0.c0)OR(t0.c0)))OR(x'56e0'))) AND (t0.c0)), (- (t0.c0)), TOTAL(((t0.c0)OR(t0.c0))) FILTER(WHERE t0.c0 COLLATE BINARY) OVER ( ROWS t0.c0 PRECEDING EXCLUDE GROUP) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)|(t0.c0)) AS NUMERIC) FROM t0 WHERE ('2m'); -- 0ms;
SELECT ALL ((COUNT(t0.c0))<((NOT (t0.c0)))) FROM t0 LIMIT 1366554577; -- 0ms;
SELECT ALL TRIM(DISTINCT t0.c0) COLLATE BINARY FROM t0 WHERE (((CASE WHEN 'C\rwZ' THEN '329146319' ELSE 0.8993176234520988 END) ISNULL)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT CAST(((((t0.c0)OR(t0.c0)))OR(t0.c0)) AS INTEGER) FROM t0 WHERE ((('') IS TRUE)); -- 1ms;
SELECT GROUP_CONCAT(MAX((((t0.c0))!=(('%'))))) FROM t0;SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR((('-491359617') IS TRUE))))OR(x'edbd')))OR('mo')))OR(((t0.c0)GLOB(t0.c0)))) DESC  NULLS LAST) FROM t0 WHERE ((- (CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c0 AS BLOB) AS BLOB), t0.c0 COLLATE BINARY, ((SUM(t0.c0)) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)IS(t0.c0)))) FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))|(ABS(DISTINCT 0.4602474873591065))); -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN ()) AS INTEGER) FROM t0 WHERE ((((('ue⠸x^H}') ISNULL))GLOB(x'e557' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((CAST(t0.c0 AS TEXT)))=((AVG(t0.c0)))), FIRST_VALUE(CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END  WHEN ((t0.c0) NOT BETWEEN (0.43217160734113946) AND (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)>=(t0.c0)) THEN ((t0.c0) ISNULL) WHEN ((t0.c0)GLOB(t0.c0)) THEN ((t0.c0) ISNULL) END) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM t0; -- 0ms;
SELECT ALL CAST((t0.c0 IN ()) AS NUMERIC) FROM t0 GROUP BY (- (t0.c0)) COLLATE RTRIM, ((TOTAL_CHANGES())!=((t0.c0 IN ()))), 'Q!l^v4&~K' HAVING CAST(t0.c0 COLLATE BINARY AS NUMERIC); -- 0ms;
SELECT ALL (((t0.c0 IN ()))%((NOT (t0.c0)))) FROM t0 WHERE ((((((((((((0.8320006301653629))<>(('-10098779'))))OR(((((((((((((1808302960)OR('')))OR(NULL)))AND('-148173054')))AND('跡龶')))AND('XXk}')))AND(0X6bc88370)))))OR(-1110217325)))OR((('-1577808415') BETWEEN (x'') AND ('\rK杘5/X2')))))OR(((NULL) NOT BETWEEN (0Xffffffffb565c371) AND ('JB'))))) GROUP BY ((~ (t0.c0)) IN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) HAVING COALESCE(((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END); -- 0ms;
SELECT ALL (((~ (t0.c0))) BETWEEN ((NOT (t0.c0))) AND (((t0.c0)<(t0.c0)))), ((((((((((t0.c0) IS FALSE))AND(SUM(t0.c0))))OR((- (t0.c0)))))AND('1281498963')))OR(t0.c0 COLLATE BINARY)), (~ (CAST(t0.c0 AS NUMERIC))) FROM t0; -- 0ms;
SELECT ALL CAST(t0.c0 COLLATE NOCASE AS REAL), t0.c0, 0.18784213840345343 FROM t0 WHERE ((('157802128') NOT BETWEEN (x'') AND (0.25110862909813814)) COLLATE BINARY) EXCEPT SELECT DISTINCT (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), (((t0.c0)) NOT BETWEEN ((((t0.c0)*(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))), ((((json_valid(t0.c0))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.06867988673218528 END)))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((x'', '', t0.c0)) AND ((t0.c0, t0.c0, '-1'))))) FROM t0 WHERE (CAST(x'' AS INTEGER)); -- 0ms;
SELECT ALL CAST(((t0.c0)&(t0.c0)) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT x'd188' FROM t0 WHERE (CASE CASE WHEN '73636205' THEN '-1406694916' WHEN '跡龶' THEN -1655342505 WHEN x'959f' THEN NULL ELSE 1366554577 END  WHEN (((x'4491')) NOT BETWEEN (('')) AND (('Bc73'))) THEN '' COLLATE NOCASE WHEN ((((x'')OR(x'')))AND('-861891636')) THEN (('-1497985570') NOTNULL) WHEN (((('')OR(NULL)))OR('-1251622031')) THEN (('') BETWEEN (1.80830296E9) AND (x'')) END); -- 1ms;
SELECT DISTINCT (((((- (NULL)))OR(CAST(t0.c0 AS INTEGER))))AND(HEX(t0.c0))) FROM t0 WHERE (((((((((((((((((((x'f1b0')OR(0xffffffffa6b68dde)))AND(x'')))AND(NULL)))AND(x'19f6')))OR('1519727019')))OR(NULL)))AND(x'bd2a')))AND('1010707467')))>=(ABS(DISTINCT x'4dad')))); -- 0ms;
SELECT ALL CASE x'' COLLATE NOCASE  WHEN ((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN (+ (t0.c0)) ELSE ((t0.c0)GLOB(x'')) END, ((((((t0.c0)&(t0.c0)))OR(t0.c0)))AND((t0.c0 IN ()))), HEX(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0) NOTNULL) COLLATE BINARY FROM t0 WHERE (((CASE ''  WHEN x'2a23' THEN x'' WHEN 0X120efa91 THEN 'Kq6' WHEN 1.57802128E8 THEN x'' ELSE x'9866' END)/(((-1.49798557E9) BETWEEN ('-1110217325') AND (x'eae4'))))); -- 0ms;
SELECT DISTINCT COUNT(NULL) FILTER(WHERE (((t0.c0)*(t0.c0)) IN ())) OVER (), ((0Xfffffffff527115e)+(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), t0.c0 FROM t0 WHERE (0X6cb71bf6); -- 0ms;
SELECT DISTINCT x'8f481bd7', ((CAST(t0.c0 AS INTEGER))==(TOTAL(t0.c0))), t0.c0 FROM t0; -- 0ms;
SELECT ((t0.c0 COLLATE BINARY) IS TRUE) FROM t0 WHERE ((((((('0.9072433180158691')AND('128540986')))AND(-1123175657))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))||((('1281498963') NOT NULL))) FROM t0 WHERE (x'') GROUP BY ((t0.c0 COLLATE RTRIM) NOT NULL); -- 0ms;
SELECT DISTINCT 0.14524467036687494 FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE '*\n'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN '-1699045450' THEN t0.c0 ELSE t0.c0 END THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0)-(t0.c0)) END FROM t0 WHERE (NULL) INTERSECT SELECT DISTINCT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(MIN(t0.c0))))AND((t0.c0 IN ()))) FROM t0 WHERE (((json_quote(-1.0098779E7))&(((NULL)|(x''))))); -- 0ms;
SELECT ALL ((0.8170262751972066)-('S?GTS~')), ((t0.c0)LIKE(t0.c0)) COLLATE BINARY, t0.c0 FROM t0; -- 0ms;
SELECT (- (((t0.c0) NOT BETWEEN (1.7976931348623157E308) AND (NULL)))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE ((((('1618302627', '', '0.8544379710916261', '㮞', NULL, '-2089957392', NULL))=((x'', -1.117306868E9, x'bb28', x'', '-1110217325', x'b9ca', NULL))) IN ())); -- 1ms;
SELECT TYPEOF(DISTINCT t0.c0 COLLATE RTRIM), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))LIKE(t0.c0)), UNLIKELY(DISTINCT t0.c0) FROM t0; -- 0ms;
SELECT ALL CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE, UPPER(DISTINCT 0.22188770647392775), PRINTF(((t0.c0)>(t0.c0)), (t0.c0 IN ()), '1297141114') FROM t0; -- 0ms;
SELECT CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN 0Xfffffffff3c561f5 ELSE ((t0.c0)<=(t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((((t0.c0)-(t0.c0))))), (((t0.c0 IN ()))<>((~ (t0.c0)))), NULL FROM t0 WHERE ((~ (LIKELIHOOD(DISTINCT '1784519051', 0.8262394764299104)))) ORDER BY (((t0.c0) IS TRUE) IN (((t0.c0) IS FALSE), (((t0.c0, t0.c0, NULL)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t0.c0)<<(t0.c0))) BETWEEN (json_object(t0.c0, t0.c0, '-491359617', t0.c0, t0.c0, t0.c0)) AND (t0.c0)), t0.c0, ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND('1010707467')))OR(t0.c0))) ISNULL) FROM t0; -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN 0.11982096715750068 ELSE t0.c0 END)|(t0.c0)), UNLIKELY(DISTINCT CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), ((t0.c0 COLLATE BINARY)||(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (((((((NULL) IS FALSE))OR((~ (-8.61891636E8)))))OR(CASE NULL  WHEN '997957167' THEN '*\n' WHEN NULL THEN NULL WHEN '䊛s82?[w' THEN NULL WHEN NULL THEN '' WHEN NULL THEN NULL ELSE x'' END))); -- 0ms;
SELECT AVG(((t0.c0)LIKE(t0.c0))) FROM t0 WHERE ((- (CASE WHEN '0.15345357340772814' THEN '' WHEN 194974625 THEN '1010707467' WHEN x'' THEN x'' END))); -- 0ms;
SELECT DISTINCT (((((((((t0.c0 IN ()))AND(CAST(t0.c0 AS TEXT))))AND(x'')))AND(CAST(t0.c0 AS TEXT))))OR(SUM(t0.c0))) FROM t0 GROUP BY (~ (((((-4.91359617E8)OR(t0.c0)))OR(t0.c0)))), (~ ((x'212cda0a' IN ()))), ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) BETWEEN (COALESCE(t0.c0, 'TZQ,f9嗍V''', t0.c0, t0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)); -- 1ms;
SELECT DISTINCT (t0.c0 IN ()) FROM t0 WHERE (x'c933'); -- 0ms;
SELECT ALL ((((t0.c0))<=((t0.c0))) IN ()), CASE WHEN CASE t0.c0  WHEN t0.c0 THEN 0.04809169781960698 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN (NOT (t0.c0)) THEN ((t0.c0)>(t0.c0)) WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((t0.c0) NOTNULL) END, FIRST_VALUE(((CAST(t0.c0 AS BLOB)) BETWEEN (((t0.c0)LIKE(t0.c0))) AND (t0.c0 COLLATE NOCASE))) OVER () FROM t0 WHERE (TYPEOF(DISTINCT (((((((((((('714187235')AND(NULL)))AND(0.00623666607505724)))OR('-2050236240')))AND(x'')))AND(NULL)))AND(0.37974395261977867)))); -- 0ms;
SELECT t0.c0 FROM t0 WHERE (((CASE NULL  WHEN x'e4e5' THEN NULL ELSE 0.8524049851284703 END) NOT BETWEEN (3.02971537E8 COLLATE BINARY) AND (((NULL)<=(NULL))))); -- 0ms;
SELECT AVG(((t0.c0) IS TRUE)) FROM t0; -- 0ms;
SELECT DISTINCT RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM t0 GROUP BY (((((t0.c0)>(t0.c0))))>=((t0.c0))), ((((((((((((t0.c0 COLLATE NOCASE)AND((~ (t0.c0)))))OR('kz')))AND(t0.c0 COLLATE RTRIM)))AND(-1033574686)))AND((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))))OR((t0.c0 IN (t0.c0)))), (- (((t0.c0)+(NULL)))), ((((((((((((CAST(t0.c0 AS REAL))OR(0.3064580372794463)))OR(CAST(t0.c0 AS REAL))))AND(t0.c0 COLLATE RTRIM)))OR(CAST(t0.c0 AS BLOB))))OR(((t0.c0)AND(t0.c0)))))OR(NULL)), ((json(t0.c0))>=(((t0.c0)||(t0.c0)))); -- 0ms;
SELECT (((t0.c0 IN (x'')))<>(HEX('-861891636'))), CAST(((t0.c0)&(t0.c0)) AS BLOB), (NOT (t0.c0)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((t0.c0, t0.c0, t0.c0))<=((t0.c0, NULL, t0.c0))) COLLATE BINARY) OVER ( PARTITION BY CAST((t0.c0 IN ()) AS NUMERIC), NULL) FROM t0 GROUP BY CAST(t0.c0 COLLATE NOCASE AS TEXT); -- 0ms;
SELECT DISTINCT AVG(((((t0.c0)OR(t0.c0)))AND(t0.c0))) FROM t0; -- 0ms;
SELECT ALL ((t0.c0)<<(t0.c0)) COLLATE RTRIM, CASE WHEN ((t0.c0)||('9z')) THEN t0.c0 COLLATE BINARY END, SQLITE_SOURCE_ID() FROM t0 WHERE (CAST(((NULL)<>(x'10ea')) AS BLOB)); -- 0ms;
SELECT DISTINCT (((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN ((+ (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, x'', t0.c0))))>=(GROUP_CONCAT('-1655342505'))) FROM t0 WHERE (TRIM(DISTINCT (- (x'')), (((-2.05168139E8, NULL, '-1956820559')) BETWEEN (('<ld''0W6nU', NULL, '-2089957392')) AND ((0.74402539255835, NULL, '-815180339'))))); -- 1ms;
SELECT DISTINCT t0.c0, t0.c0, (((t0.c0)||(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL COUNT(((t0.c0) ISNULL)), TRIM(DISTINCT t0.c0), ROW_NUMBER() OVER () FROM t0 WHERE (((('1624987700' IN (0X188cc0e6)))=(x''))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((t0.c0))>((((t0.c0)>>(t0.c0))))), CAST((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, -2.089957392E9, t0.c0, t0.c0))) AS TEXT), MIN(CAST(t0.c0 AS REAL)) FROM t0 WHERE ((((((+ (0.2917404222400346)))AND((('-1860986576') BETWEEN ('<ld''0w6nu') AND (0.7895390946285956)))))OR((NULL IN ())))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) ELSE ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END, ((((t0.c0) ISNULL))GLOB(((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(t0.c0)))AND(0Xffffffffe2b6727f)))), GROUP_CONCAT((((t0.c0)) BETWEEN ((t0.c0)) AND ((-1715787459))) COLLATE BINARY) OVER () FROM t0 WHERE ((((0.7300056217921245) NOT BETWEEN (0.590204857201493) AND (x'6cda')) IN (((NULL) BETWEEN ('*ᕩf	iaQ') AND ('U	AF'))))); -- 0ms;
SELECT CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE FROM t0 WHERE (CASE -1420534123  WHEN x'' THEN x'fc401f7e' END COLLATE BINARY) LIMIT 1987508352; -- 0ms;
SELECT DISTINCT (~ (CHAR(t0.c0, t0.c0, t0.c0))) FROM t0 LIMIT -70418440 OFFSET -661182281; -- 0ms;
SELECT CAST(((t0.c0)LIKE(t0.c0)) AS REAL) FROM t0 WHERE ((SQLITE_COMPILEOPTION_GET(-696695588) IN ())) GROUP BY ((((CAST(0.3576332120933313 AS INTEGER))OR((t0.c0 IN (t0.c0)))))OR((NOT (0X657b2511)))); -- 0ms;
SELECT DISTINCT ((t0.c0) NOTNULL) FROM t0 WHERE (((NULL)LIKE('1702569233')) COLLATE BINARY COLLATE RTRIM); -- 1ms;
SELECT ALL (NOT (0.2917404222400346)) FROM t0 WHERE (CASE CAST(x'' AS REAL)  WHEN (('-605518804') IS FALSE) THEN ((0.39096013971688015)GLOB('G,')) WHEN (NOT (x'8c1983bb')) THEN ((((((((NULL)OR('1366554577')))OR(0.17826133124403076)))OR('238996037')))AND(x'')) WHEN ((x'')IS('')) THEN (NOT (0xf28dc17)) ELSE NULL COLLATE BINARY END); -- 1ms;
SELECT (((((((((~ (t0.c0)))OR(t0.c0)))OR(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(CASE WHEN t0.c0 THEN '1010707467' END)))AND(t0.c0)) FROM t0 GROUP BY (NOT ((+ (t0.c0)))) HAVING (t0.c0 IN ()) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (- (CAST(t0.c0 AS INTEGER))), (AVG(t0.c0) IN (((t0.c0)>=(t0.c0)))), AVG((t0.c0 IN ())) FROM t0 WHERE (((('埐a')) BETWEEN ((TYPEOF(x'37b030e9'))) AND ((x'')))) ORDER BY 0.08785074725386155, 2.54336023E8 DESC; -- 0ms;
SELECT x'7d7b' FROM t0 WHERE (0.5933740456611126); -- 0ms;
SELECT CASE WHEN t0.c0 COLLATE BINARY THEN (((t0.c0))!=((t0.c0))) END FROM t0 WHERE ((((x'3041' IN (0xffffffffb2bed477)))<>(CAST(0x28e6d9ee AS REAL)))); -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0 COLLATE RTRIM))>((((t0.c0)|(t0.c0)), ((t0.c0) ISNULL), ((t0.c0)==(t0.c0))))), ((RTRIM(t0.c0))>>((t0.c0 IN ()))), (NOT (SUM(-1577808415))) FROM t0 WHERE ((((NULL IN ())) NOT BETWEEN (x'' COLLATE BINARY) AND ((x'' IN (''))))); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE BINARY)|(CAST(t0.c0 AS TEXT))) FROM t0 WHERE (x'33ce' COLLATE BINARY); -- 0ms;
SELECT ((t0.c0)>>(t0.c0)) COLLATE NOCASE COLLATE BINARY FROM t0; -- 0ms;
SELECT ((x'a11a')*(TOTAL(t0.c0))) FROM t0; -- 0ms;
SELECT ALL CAST(SUM(t0.c0) AS INTEGER), (+ (((t0.c0) IS FALSE))), CUME_DIST() OVER () FROM t0; -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT CAST((+ (t0.c0)) AS REAL), '[/]E!', ((((((((((((NULL)AND(x'')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))))AND(CAST(t0.c0 AS NUMERIC))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ (((((NULL)AND(NULL)))OR(''))))); -- 0ms;
SELECT ALL (NOT (CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE ((CASE WHEN x'' THEN 0.1944848550406283 ELSE NULL END IN ())); -- 0ms;
SELECT ALL ((1.784519051E9)<=(t0.c0)) COLLATE BINARY FROM t0; -- 0ms;
SELECT (((t0.c0)-(t0.c0)) IN ()), ((((CAST('U' AS TEXT))OR(MIN(t0.c0))))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))), ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) IS FALSE), (+ (t0.c0))))==((GROUP_CONCAT(t0.c0), CASE t0.c0  WHEN t0.c0 THEN '繾f' END, (t0.c0 IN ())))) FROM t0 GROUP BY CAST(0.5082938817989392 AS REAL) HAVING TOTAL(IFNULL(t0.c0, t0.c0)) ORDER BY 1010707467  NULLS FIRST, CASE t0.c0  WHEN (t0.c0 IN ()) THEN 0Xffffffffc7210aea END;SELECT DISTINCT COUNT((- (t0.c0))) FILTER(WHERE 0Xffffffff87f7b11f) OVER ( ORDER BY t0.c0) FROM t0; -- 0ms;
SELECT (((t0.c0)<(t0.c0)) IN ()) FROM t0 WHERE ((((('1618302627')>>(0.19591767525761117)))&((('-1840244208')GLOB('#B'))))) LIMIT 202299336 OFFSET 998799362; -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c0)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (t0.c0)) FROM t0 WHERE (CASE 0.39096013971688015  WHEN x'1f4a' THEN x'' WHEN NULL THEN 'jQ#I' WHEN x'' THEN x'' ELSE NULL END COLLATE NOCASE); -- 0ms;
SELECT ALL ((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE BINARY FROM t0 WHERE (((((((NULL) NOTNULL))OR(((0.37242286069990793) NOTNULL))))OR(CAST(0.2917404222400346 AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((SQLITE_SOURCE_ID()) NOTNULL) FROM t0; -- 0ms;
SELECT ALL rtreenode(((t0.c0)IS NOT(t0.c0)), COUNT(*)), TYPEOF(DISTINCT '埐a'), (LOWER(t0.c0) IN (((t0.c0)-(t0.c0)), t0.c0 COLLATE BINARY)) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0) NOT NULL) IN ()) FROM t0 GROUP BY t0.c0, IFNULL(t0.c0, ((NULL) ISNULL)), t0.c0, ((0.5082938817989392 COLLATE BINARY)!=('')), x'' HAVING ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))%(2.02299336E8)); -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (SUBSTR(t0.c0, 'm2H%sy#'))), (((t0.c0)) NOT BETWEEN ((MAX(t0.c0))) AND ((((((t0.c0)OR(t0.c0)))OR(t0.c0))))), COALESCE(DISTINCT (((t0.c0))==((t0.c0))), t0.c0) FROM t0 WHERE (UNLIKELY(((NULL) NOT BETWEEN (x'06ae') AND (NULL)))); -- 0ms;
SELECT ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) FROM t0 WHERE (UNLIKELY(CAST(NULL AS TEXT))) LIMIT -260264176 OFFSET -1406694916; -- 0ms;
SELECT ((NULL)&(CAST('' AS TEXT))) FROM t0; -- 0ms;
SELECT DISTINCT MAX(AVG(t0.c0), ((((t0.c0)AND('-1420534123')))AND(t0.c0)), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), (~ (t0.c0)), CAST(t0.c0 AS NUMERIC), (~ (t0.c0))) FROM t0 WHERE (CASE (('ꎛA%4h9|~')==('-1420534123'))  WHEN ((x'28a5d08a')IS(x'5513')) THEN HEX(NULL) ELSE ((((NULL)OR(x'8ea2')))OR(-2.013810401E9)) END) GROUP BY ((((t0.c0))<((t0.c0))) IN ()) HAVING CASE WHEN ((((t0.c0)AND(t0.c0)))AND(0x5173f7d1)) THEN ((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) WHEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) WHEN (NULL IN (t0.c0)) THEN x'359d' ELSE CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END; -- 0ms;
SELECT ALL ((((t0.c0) IS TRUE)) BETWEEN (t0.c0) AND (((t0.c0)%(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))=(((t0.c0)GLOB(t0.c0)))), (~ (CAST(t0.c0 AS REAL))) FROM t0 GROUP BY NULL HAVING COUNT(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0.8959331084189748 END); -- 0ms;
SELECT DISTINCT (((t0.c0 IN (t0.c0)))&(ROUND('SVuJRN', t0.c0))), AVG(((t0.c0)=(t0.c0))), ((t0.c0 COLLATE NOCASE)-(((0.010655688713043121) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (((((json_type(NULL))OR(((x'') BETWEEN (NULL) AND (0Xffffffffd67944dc)))))AND(((NULL) BETWEEN ('0.5933740456611126') AND (x''))))) GROUP BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND (((NOT (t0.c0))))), (((((t0.c0) NOT BETWEEN (NULL) AND (0.5734264698585052))))<>((0xffffffff8f6c7d36))), CASE WHEN UPPER(DISTINCT t0.c0) THEN CAST(t0.c0 AS INTEGER) END; -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT ALL NTH_VALUE((((t0.c0 IN ()))||(CASE WHEN 1622335514 THEN t0.c0 ELSE t0.c0 END)), ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND((NOT (t0.c0)))))OR(CAST('-21087330' AS REAL))))OR(CASE WHEN t0.c0 THEN 0.9072433180158691 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) OVER (), IFNULL(((t0.c0) NOT NULL), (t0.c0 IN ())), CASE TRIM('', t0.c0)  WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c0 AS REAL) END FROM t0 WHERE (((CAST(x'' AS NUMERIC))>>(CASE ''  WHEN '-1769256965' THEN '-27061503' END))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT (NOT (t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ALL (NOT (AVG(t0.c0))), (((t0.c0 IN (t0.c0)))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)), SUM('683634308') OVER () FROM t0 WHERE (((NOT ('')) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN (- (t0.c0)) THEN LIKELIHOOD(t0.c0, 0.8983830859381968) WHEN CAST(t0.c0 AS TEXT) THEN ((t0.c0) ISNULL) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN t0.c0 COLLATE RTRIM END FROM t0 ORDER BY ((((t0.c0) NOTNULL))>=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC  NULLS FIRST, CASE json_quote(t0.c0)  WHEN CAST(t0.c0 AS REAL) THEN ((t0.c0)|(t0.c0)) WHEN (- (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN CAST(t0.c0 AS TEXT) THEN (+ (t0.c0)) ELSE LIKELIHOOD(NULL, 0.4460298401322832) END DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(((t0.c0)&(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))) FROM t0 GROUP BY ((t0.c0 COLLATE BINARY) NOTNULL); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 LIMIT -1344208644 OFFSET -148173054; -- 0ms;
SELECT ((((- (t0.c0))))<(((t0.c0 IN ())))) FROM t0; -- 3ms;
SELECT DISTINCT TOTAL(((t0.c0)>(t0.c0))) FROM t0 WHERE (CASE WHEN ((0.12864252295073075) NOT NULL) THEN CASE 0xffffffffac2789fc  WHEN NULL THEN x'' ELSE '' END END); -- 0ms;
SELECT ALL (((t0.c0)!=(t0.c0)) IN ()), (NOT (x'')), TOTAL((~ (t0.c0))) COLLATE RTRIM FROM t0 WHERE (((((((((1.80830296E9)AND(NULL)))OR(NULL)))OR(0.5658344197904185)))AND(x'')) COLLATE BINARY); -- 0ms;
SELECT (((t0.c0, t0.c0, '<跞')) NOT BETWEEN ((t0.c0 COLLATE NOCASE, (((t0.c0))==((t0.c0))), ((t0.c0)>=(t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), LTRIM(0.7300056217921245, t0.c0)))) FROM t0; -- 0ms;
SELECT CAST(((t0.c0) IS FALSE) AS REAL) FROM t0; -- 0ms;
SELECT (NOT ((t0.c0 IN ()))) FROM t0 WHERE (((('J쟰')) BETWEEN ((((x'')+('-872652096')))) AND (((NOT (x'9a2e')))))); -- 0ms;
SELECT LAG(CAST(CAST(t0.c0 AS REAL) AS TEXT), ((t0.c0 COLLATE RTRIM) NOTNULL), (NOT (t0.c0)) COLLATE BINARY COLLATE RTRIM) OVER (), ((((((t0.c0))=((t0.c0))), ((t0.c0)>(t0.c0)), t0.c0))<(((~ (t0.c0)), '', (+ (t0.c0))))), t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT LAG((CAST(t0.c0 AS INTEGER) IN ((+ (0.7337602628013574)))), (((+ (t0.c0))) IS TRUE), NULL) OVER (), ((CAST(t0.c0 AS BLOB)) NOT NULL), (((t0.c0 IN (t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND (LENGTH('-1732261669'))) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) WHEN ((t0.c0)/(t0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((t0.c0) BETWEEN (0.9936505883997625) AND (t0.c0)) THEN (0x3c3e2c0b IN (t0.c0, t0.c0)) WHEN LIKELIHOOD(DISTINCT NULL, 0.9867894861999145) THEN ((t0.c0)|(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0) IS FALSE) END FROM t0 WHERE ((((- ('-590767908'))) NOT BETWEEN ((NULL IN ('', 0xffffffffc355c70c))) AND (CASE 1.623789877E9  WHEN x'' THEN x'' ELSE '1623789877' END))); -- 0ms;
SELECT CASE WHEN t0.c0 THEN (t0.c0 IN ()) ELSE t0.c0 END, ((((t0.c0)|(t0.c0)))GLOB(((t0.c0)||(t0.c0)))), (((((((t0.c0)OR(t0.c0)))AND(t0.c0))))>=((t0.c0))) FROM t0 WHERE (((((x'ea69') NOT NULL))*(((NULL) NOT BETWEEN (0Xffffffff9d557a57) AND (0.11982096715750068))))); -- 0ms;
SELECT ((((t0.c0)LIKE(t0.c0)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0 LIMIT -1123175657; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t0.c0)IS(t0.c0))))) FROM t0 WHERE (((~ ('1366554577')) IN ())) GROUP BY t0.c0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) FROM t0 ORDER BY NULL  NULLS FIRST; -- 0ms;
SELECT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))IS('LTj')) FROM t0 WHERE (UNLIKELY('-661182281') COLLATE BINARY); -- 4ms;
SELECT ALL CAST(COUNT(*) AS TEXT) FROM t0 WHERE (LIKELY(DISTINCT 0.8320006301653629 COLLATE BINARY)); -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT ALL STRFTIME(((t0.c0)>(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (- (t0.c0))) FROM t0 WHERE (CAST(NULL AS REAL)); -- 0ms;
SELECT DISTINCT ((x'')IS(x'')) FROM t0; -- 0ms;
SELECT DISTINCT CASE IFNULL(DISTINCT t0.c0, t0.c0)  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END THEN MAX(t0.c0) ELSE '1279784692' END, highlight((t0.c0 IN ()), GROUP_CONCAT(t0.c0), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((NULL)/(t0.c0))), ((((t0.c0)LIKE(t0.c0))) NOT NULL) FROM t0;SELECT ALL CASE WHEN (NOT (x'')) THEN CAST(t0.c0 AS TEXT) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN x'5a74fa4c' THEN t0.c0 END WHEN ((t0.c0)OR(t0.c0)) THEN CAST(t0.c0 AS TEXT) ELSE ((((t0.c0)OR(t0.c0)))AND(t0.c0)) END FROM t0; -- 0ms;
SELECT RANK() OVER ( PARTITION BY (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN t0.c0 END)), (((t0.c0 IN ()))GLOB(((t0.c0)LIKE(t0.c0)))), t0.c0, '0.18784213840345343') FROM t0 WHERE ((- ((((('t''xxV1jZ')AND(NULL)))OR('值6Y'))))); -- 0ms;
SELECT DISTINCT (NOT (t0.c0)), CAST(((t0.c0) NOT NULL) AS REAL), LAST_VALUE(((IFNULL(t0.c0, t0.c0)) NOTNULL)) OVER () FROM t0 WHERE (0.30395968921980954); -- 0ms;
SELECT ALL (NOT (t0.c0)) COLLATE NOCASE FROM t0 WHERE (((('')) NOT BETWEEN (((((0.3776143924050068, '', '686217710'))>=((NULL, NULL, '-1110217325'))))) AND ((((NULL)*(x'')))))) GROUP BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(CAST(t0.c0 AS TEXT))))OR(t0.c0)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0)OR(t0.c0)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 WHERE (((((x'163d') NOT NULL)) NOT BETWEEN ('') AND (((x'')GLOB(x''))))) ORDER BY CAST(x'' AS NUMERIC), ((COALESCE(t0.c0, t0.c0))*((- (t0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 WHERE (HEX((('-1123175657') NOT NULL))); -- 0ms;
SELECT ALL ((COUNT(t0.c0))+(t0.c0 COLLATE NOCASE)), t0.c0, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<<((((t0.c0))<=((t0.c0))))) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c0 THEN t0.c0 END IN ()), (((t0.c0 IN ())) NOT NULL), ((((t0.c0) IS FALSE)) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0)) FROM t0 WHERE ((((((x'5e6f', x'', 0.8993176234520988, 0.6878125209266107, 0.5022541041058313)) NOT BETWEEN ((0.7185466181708692, '0.8320006301653629', '-504281855', '-146206163', x'')) AND ((x'', x'', 0.9331615875801977, -1.033574686E9, '')))) IS FALSE)); -- 0ms;
SELECT DISTINCT (~ (SUM(x''))), CAST(((t0.c0)GLOB(t0.c0)) AS TEXT), (((((t0.c0)OR(x'e7cd')))OR(t0.c0)) IN (TOTAL(t0.c0))) FROM t0 WHERE ((~ (CAST('-1224023353' AS INTEGER)))) ORDER BY ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0 COLLATE RTRIM)) DESC; -- 0ms;
SELECT 0.9166837336247731 FROM t0 WHERE ((((+ (0Xffffffffcd25ee67))) IS FALSE)); -- 0ms;
SELECT ALL CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER) FROM t0 WHERE ((((((((NULL)AND('0.3776143924050068')))AND('-2036336085')), 0.3064580372794463, CASE WHEN 0x71f7071f THEN x'' END))>((((0.2522296330682935) NOT BETWEEN ('場0') AND ('3y>V龶,7')), ('-1123175657' IN ()), ((((NULL)OR(0.6994604170895146)))AND('206803225')))))); -- 0ms;
SELECT (NOT (((('998799362', t0.c0, '-146206163')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -1344208644, t0.c0))))) FROM t0 WHERE (CAST((~ (NULL)) AS NUMERIC)) GROUP BY CASE WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)||('0.08785074725386155')) ELSE (- (t0.c0)) END HAVING ((((t0.c0)=(t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0)IS NOT(t0.c0)))); -- 0ms;
SELECT FIRST_VALUE(CASE (((t0.c0)) NOT BETWEEN ((0.741990317892381)) AND ((t0.c0)))  WHEN (t0.c0 IN (t0.c0)) THEN 0.462300175559587 WHEN HEX(DISTINCT t0.c0) THEN CAST(t0.c0 AS TEXT) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)==(t0.c0)) END) OVER ( ORDER BY (+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST) FROM t0; -- 0ms;
SELECT DISTINCT (((NOT (t0.c0))) IS TRUE), (((((t0.c0)) BETWEEN ((1784519051)) AND ((t0.c0)))) IS TRUE), CASE COUNT(*)  WHEN COUNT(t0.c0) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END FROM t0 ORDER BY (CAST(t0.c0 AS NUMERIC) IN ()); -- 0ms;
SELECT DISTINCT ((((NULL) NOT NULL))+((~ (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST('190750108' AS BLOB)) BETWEEN (-2.013810401E9) AND ((1590394592 IN ()))), NULLIF(DISTINCT t0.c0 COLLATE RTRIM, (((-491359617))!=(('-1002177960')))), CAST(CAST(t0.c0 AS REAL) AS REAL) FROM t0 WHERE (CAST(NULL AS INTEGER)); -- 0ms;
SELECT 1366554577 FROM t0 LIMIT -885418621; -- 0ms;
SELECT ALL '1010707467', CAST(CAST(t0.c0 AS NUMERIC) AS BLOB), ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)OR(((t0.c0) NOTNULL))))OR(GROUP_CONCAT(t0.c0))) FROM t0 WHERE ((((1.221847455E9)IS NOT(0x3670eece)) IN ())); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (t0.c0 IN (t0.c0)), CASE WHEN t0.c0 THEN '' END), ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS FALSE), MAX(0xfffffffff749122d COLLATE RTRIM) FROM t0 ORDER BY CASE WHEN ((t0.c0)<<(t0.c0)) THEN CAST(t0.c0 AS REAL) ELSE ((t0.c0)GLOB(t0.c0)) END  NULLS FIRST LIMIT 609016789; -- 0ms;
SELECT DISTINCT TRIM((((t0.c0))>=((-1192571439))), (((t0.c0))<((t0.c0)))) FROM t0 LIMIT -1715787459; -- 1ms;
SELECT DISTINCT (((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (t0.c0 COLLATE BINARY) AND ((t0.c0 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, (+ ('')), json_array_length(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) FROM t0; -- 0ms;
SELECT CASE CAST(t0.c0 AS INTEGER)  WHEN MAX(t0.c0) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END ELSE t0.c0 END FROM t0 LIMIT 1562786996 OFFSET -917244130; -- 0ms;
SELECT ALL ((t0.c0) IS FALSE) FROM t0 WHERE ((((NULL COLLATE BINARY, CASE x'7398'  WHEN '' THEN NULL WHEN x'' THEN 0.31602473257713426 WHEN x'4654' THEN 0xffffffff8b5d49b1 END, (((((((('-1215664841')OR('-978377714')))OR('')))AND(NULL)))OR('-491359617')), (- ('')), 0.06149605196860641, 0.3795888693860634 COLLATE NOCASE, (('-260264176')||('0.9072433180158691'))))>=(((x'' IN ()), (('')IS(NULL)), (('* 9牿]E') IS FALSE), CASE '1281498963'  WHEN 0.033800393297385156 THEN NULL END, CHAR(x'', '-1655342505', 0.7568918541844543), ((((x'72bf')OR(x'')))OR('h1')), ((((633673695)AND(x'34dd')))OR(0.1944848550406283)))))) ORDER BY (((t0.c0, NULL, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) COLLATE BINARY ASC  NULLS LAST LIMIT -148173054; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0) NOTNULL))AND(x'' COLLATE RTRIM)))AND((t0.c0 IN ()))))OR(CAST(t0.c0 AS NUMERIC))))AND((x'' IN ()))) FROM t0 GROUP BY IFNULL(DISTINCT UNLIKELY(DISTINCT t0.c0), ((t0.c0)<<(t0.c0))) HAVING ((((((((x'0137')OR(t0.c0)))OR(t0.c0)))AND(TRIM(t0.c0, 0.006920159596604303))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (t0.c0)))) AND (('1702569233'))) ASC LIMIT 852731477; -- 1ms;
SELECT ((t0.c0)IS(t0.c0)) COLLATE RTRIM, ((t0.c0)+(t0.c0)) COLLATE NOCASE, ((('-427889309')IS(t0.c0)) IN ((~ (t0.c0)), (t0.c0 IN ()))) FROM t0; -- 0ms;
SELECT ALL t0.c0, MAX(((0.07694731505886332) NOT BETWEEN (t0.c0) AND (t0.c0))), MAX(((t0.c0)!=(t0.c0))) FROM t0 WHERE (((((0X5dbbaeaa) NOT BETWEEN ('-1899238331') AND ('2')))&((~ (x'3034'))))); -- 0ms;
SELECT DISTINCT (((0.12342741961440684 IN ()))<>('')) FROM t0; -- 0ms;
SELECT ALL COUNT(CAST(t0.c0 AS BLOB)) OVER () FROM t0 WHERE ((((('') NOT BETWEEN (NULL) AND ('-2127883330')))IS((((('-689703299')AND(x'f40f')))AND(0.01736663382225334))))); -- 0ms;
SELECT DISTINCT MIN(((t0.c0)/(t0.c0))), t0.c0, ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(('1366554577' IN ()))))OR(((0.8544356098261238) ISNULL))) FROM t0 WHERE (ABS(DISTINCT ((x'')LIKE('1e500')))); -- 0ms;
SELECT CAST(CASE x''  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END AS TEXT), AVG(t0.c0), (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) FROM t0 WHERE (((COALESCE(0.1260452898295107, x'', NULL, x'4dbe9833')) IS TRUE)); -- 0ms;
SELECT ALL (((t0.c0 IN ())) NOT BETWEEN (((t0.c0)|(t0.c0))) AND (CAST(t0.c0 AS NUMERIC))) FROM t0; -- 0ms;
SELECT ALL CASE WHEN CAST(t0.c0 AS TEXT) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0) ISNULL) THEN CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END THEN ((t0.c0) ISNULL) ELSE LOWER(DISTINCT t0.c0) END FROM t0 LIMIT -494250643 OFFSET -152098086; -- 1ms;
SELECT ALL ((((((t0.c0)/(t0.c0)))AND(NULL)))OR(GROUP_CONCAT(0X5ecb7ee0))), AVG(x'') OVER (), SUM(CAST(t0.c0 AS NUMERIC)) OVER () FROM t0 WHERE (((((((NULL)AND(0Xffffffffe1630395)))OR(NULL)))LIKE(QUOTE('0.0')))); -- 0ms;
SELECT DISTINCT ((((((x'') BETWEEN ('') AND (t0.c0)))OR((t0.c0 IN ()))))OR(((t0.c0)GLOB(0.1206867360175804)))) FROM t0; -- 0ms;
SELECT COUNT(*) FROM t0 WHERE (((NULL COLLATE BINARY) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((1646220490)IS('\rK杘5/X2'))) NOT BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c0))) AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT LEAD((ABS(t0.c0) IN (CAST(t0.c0 AS NUMERIC))), ((((t0.c0) IS FALSE))LIKE(((t0.c0)AND(t0.c0)))), ((((t0.c0 IN ()), HEX(t0.c0), CAST(t0.c0 AS INTEGER)))<((((0.2507418328898191) BETWEEN (0xffffffff9d557a57) AND (t0.c0)), NULLIF(DISTINCT t0.c0, t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) OVER () FROM t0 WHERE (((((x'')||(0xffffffffb523e6eb))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 COLLATE RTRIM FROM t0 WHERE ((((x'843b', x'a15f', '-177966784')) NOT BETWEEN ((((((((((0.6812539201015178)AND('-1499795654')))OR(0xffffffff81421098)))AND('-1715787459')))AND('!x')), json(NULL), (('Y䊛M<''TU') NOT NULL))) AND (('', ('-339704459' IN ()), ((((NULL)OR(x'')))AND(0.7217754241553619)))))) GROUP BY CAST(t0.c0 COLLATE BINARY AS TEXT) HAVING ((((((((CAST(t0.c0 AS INTEGER))AND(((t0.c0)LIKE(NULL)))))AND(CASE '997957167'  WHEN '-1381645099' THEN 0.7667943849279214 END)))OR((+ (t0.c0)))))AND((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('-132998052', t0.c0, t0.c0))))); -- 0ms;
SELECT NULLIF(DISTINCT ((((x'0f9d')AND(t0.c0)))OR(t0.c0)), CASE WHEN t0.c0 THEN '' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '-1497985570', t0.c0)) AND ((t0.c0, t0.c0, '-260264176'))) COLLATE BINARY, (((t0.c0)<=(t0.c0)) IN ()) FROM t0 WHERE ((((-2059019010) IS FALSE) IN ())); -- 0ms;
SELECT DISTINCT json_remove(MAX(t0.c0), MAX(t0.c0), t0.c0, SUM(t0.c0), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), '') FROM t0; -- 0ms;
SELECT GROUP_CONCAT(((('-152098086'))<>((t0.c0)))) FROM t0 WHERE (((json_remove(-7.041844E7, 0Xffffffff96165cfe, '-661182281', x'')) ISNULL));SELECT ALL SUM(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT COALESCE(((t0.c0)%(t0.c0)), (t0.c0 IN ()), ((((t0.c0)AND(t0.c0)))AND(t0.c0)), ((t0.c0) IS TRUE)), (((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))), t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((((CAST(t0.c0 AS REAL))AND((((t0.c0)) BETWEEN (('')) AND ((t0.c0))))))AND((+ (t0.c0)))), (('*N') ISNULL), 0.02083574970314228 FROM t0 WHERE ((~ (((x'') NOT BETWEEN (0Xffffffffd8b56a72) AND ('-1381943447'))))); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (t0.c0) AND (t0.c0 COLLATE NOCASE)) FROM t0 WHERE (((((NULL)IS NOT('94355009')))||(ROUND(0.3795888693860634, x'')))); -- 0ms;
SELECT ALL ((x'')<(((t0.c0) IS TRUE))) FROM t0; -- 0ms;
SELECT (((t0.c0 IN ()))OR(t0.c0 COLLATE RTRIM)) FROM t0 WHERE ('-1497985570'); -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE BINARY IN ((('-1242108312')/('411877606')))), t0.c0, MIN(0.5506440947990401, t0.c0 COLLATE BINARY) FROM t0 WHERE (CASE NULL  WHEN x'643d' THEN NULL END COLLATE NOCASE); -- 0ms;
SELECT CASE (('540046473') IS FALSE)  WHEN CAST(t0.c0 AS REAL) THEN t0.c0 COLLATE BINARY END FROM t0; -- 0ms;
SELECT DISTINCT SUM(((t0.c0) BETWEEN (0.8155581146038879) AND (t0.c0))) FROM t0 WHERE (CAST(((((NULL)OR(0.3529747628976381)))OR(NULL)) AS NUMERIC)); -- 0ms;
SELECT ALL COUNT(*) FROM t0; -- 0ms;
SELECT ALL (- (t0.c0)) COLLATE BINARY, '-1033574686', (((((NULL))<=((NULL)))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(NULL AS NUMERIC))==(t0.c0)) FROM t0 GROUP BY CAST(STRFTIME(t0.c0, t0.c0, t0.c0) AS INTEGER); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((t0.c0)+(((t0.c0) IS TRUE)))) OVER () FROM t0 WHERE (x''); -- 0ms;
SELECT TOTAL(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) COLLATE BINARY, 1.631464439E9, (((t0.c0) NOT BETWEEN (t0.c0) AND (0Xffffffffbff5cf7d)) IN ()) FROM t0; -- 1ms;
SELECT DISTINCT RANK() OVER ( ORDER BY ((((0.17826133124403076)OR(((t0.c0)%(t0.c0)))))OR(0.8871768775341811))) FROM t0 WHERE ((((((x''))>((-2.60264176E8)))) IS TRUE)); -- 0ms;
SELECT DISTINCT MIN(x'f311'), GROUP_CONCAT((t0.c0 IN ())) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT LIKELY(t0.c0) COLLATE RTRIM, x'', TYPEOF(DISTINCT NULL) FROM t0 WHERE (((((((((((x'')OR(NULL)))OR(408912845)))AND(282024699)))OR('1243951958')))<=(0.1747870052332131))); -- 0ms;
SELECT ALL RANK() OVER (), CAST((t0.c0 IN ()) AS TEXT), ((((CASE WHEN t0.c0 THEN t0.c0 END)OR(x'4a54607a')))AND(((t0.c0) IS FALSE))) FROM t0 GROUP BY ((((t0.c0)IS NOT(t0.c0)))>(0.3064580372794463)), ((t0.c0)OR(((t0.c0)OR(t0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) LIMIT 1314039388; -- 0ms;
SELECT DISTINCT TOTAL(CAST(t0.c0 AS NUMERIC)) OVER () FROM t0 WHERE (((CASE WHEN 0.6751023608074773 THEN x'' ELSE 0xfffffffff3c561f5 END)IS NOT((~ (x''))))); -- 0ms;
SELECT ALL CAST('1784519051' AS INTEGER), ((((x'') NOT BETWEEN (t0.c0) AND (t0.c0)))*(CAST(t0.c0 AS REAL))), CASE WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c0)<>(t0.c0)) END, (((t0.c0)) BETWEEN (((((t0.c0))!=((t0.c0))))) AND (('FALSE'))), COUNT((((t0.c0, t0.c0, t0.c0))>=((t0.c0, x'f4cc', t0.c0)))) OVER ( ORDER BY 'iX'  NULLS LAST, (((((t0.c0) NOT NULL), NULL, '1^O'))!=(((~ (t0.c0)), SQLITE_COMPILEOPTION_USED(t0.c0), 0.9072433180158691))) DESC) FROM t0; -- 1ms;
SELECT DISTINCT CASE ((t0.c0)+(t0.c0))  WHEN ((t0.c0)/(t0.c0)) THEN t0.c0 WHEN ROUND(t0.c0, x'be89') THEN UNLIKELY(t0.c0) WHEN (~ (t0.c0)) THEN '-148173054' ELSE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END, SUM(((0.8710854712348599) NOTNULL)), ((((t0.c0))>=((t0.c0))) IN (TOTAL(t0.c0), (t0.c0 IN ()))) FROM t0 WHERE (((NULL) NOT NULL) COLLATE RTRIM); -- 0ms;
SELECT ALL UPPER(DISTINCT CAST(t0.c0 AS TEXT)), (~ ((t0.c0 IN (t0.c0)))), MAX(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) FROM t0 WHERE (((x'')=(CAST(x'eea5' AS REAL)))); -- 0ms;
SELECT DISTINCT (((((t0.c0 IN ()))AND(TOTAL(t0.c0))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0; -- 0ms;
SELECT json_remove(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, (((t0.c0))<((t0.c0))), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), COALESCE(DISTINCT t0.c0, NULL, t0.c0, t0.c0)) FROM t0 WHERE (load_extension(((((((((0x34a34efe)OR(NULL)))AND(x'3277')))AND('73636205')))AND('XA')))); -- 0ms;
SELECT DISTINCT CAST(x'' AS TEXT), SUM(((t0.c0)>(t0.c0))) OVER ( PARTITION BY (((t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c0) ISNULL)))), (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ())), (- ((t0.c0 IN (t0.c0)))) FROM t0 WHERE (((((0.010655688713043121) ISNULL))AND(((((((((0.28118622795124903)OR(0.19164690921784888)))OR(NULL)))OR(-21087330)))OR(683634308))))) GROUP BY ('SVuJRN' IN ()); -- 0ms;
SELECT DISTINCT DATE(AVG(t0.c0), ((t0.c0) IS FALSE), ((t0.c0)==(t0.c0)), (+ (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) FROM t0; -- 0ms;
SELECT CAST('-205168139' AS REAL) FROM t0 WHERE (''); -- 0ms;
SELECT ALL '#b' FROM t0 LIMIT 1794538745 OFFSET -304370956; -- 0ms;
SELECT ALL ((((- (t0.c0))))>((((t0.c0)>=(t0.c0))))) FROM t0; -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN ((((t0.c0)<>(t0.c0)))) AND ((t0.c0 COLLATE NOCASE))), MAX(((((t0.c0)OR(t0.c0)))AND(t0.c0))), NULL, ((DATETIME(t0.c0, NULL, t0.c0))AND((((NULL, t0.c0, 0.5672720430874735)) BETWEEN ((t0.c0, t0.c0, '-1873302398')) AND ((x'', t0.c0, t0.c0))))), (((((t0.c0)||(t0.c0))))<((0.9691135922378324))) FROM t0 WHERE (CAST(((((x'')AND(0.6447532560722654)))AND('')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (AVG(t0.c0))) FROM t0 WHERE (((CASE x''  WHEN x'a3c3' THEN NULL END) BETWEEN (CAST(NULL AS BLOB)) AND (((x'25e3')/('-1487168894'))))); -- 0ms;
SELECT DISTINCT '1795722369', MIN(((t0.c0)*(0.9393894963236683))), ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)&(0.5658344197904185)) FROM t0 WHERE ((((((-1.110217325E9)) BETWEEN (('')) AND ((NULL))))<<(NULLIF(DISTINCT NULL, 1.010707467E9)))); -- 1ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)=(0Xffffffffd6a88dc0)) FROM t0 WHERE (CASE TRIM(DISTINCT 0.03476239281913729)  WHEN ((x'acf1') BETWEEN (0x196c05f8) AND (NULL)) THEN ((0.5601253323022175)-(x'a163')) WHEN -1147610858 THEN ((NULL) BETWEEN (0.7578912821595007) AND (NULL)) WHEN (('-1460275843') NOT BETWEEN (0.21607166034188052) AND ('1624987700')) THEN ((0.9128691371940445)LIKE('YAUxO	')) ELSE ((NULL)-('0.7337602628013574')) END) LIMIT 1636706539; -- 0ms;
SELECT ALL (- (((t0.c0)<<(t0.c0)))), t0.c0, '-1303907616' FROM t0; -- 0ms;
SELECT ((((')/45鸯┑&n牎')AND(t0.c0)))OR(t0.c0)) COLLATE RTRIM FROM t0 WHERE (((((((((json_array(NULL, '423027853'))OR(CASE WHEN '' THEN NULL END)))OR(((0Xffffffffa2d71c96) NOTNULL))))OR(CAST('EbU*' AS BLOB))))OR((('/Z)L嗃P,X')>('0.1361448021548871'))))); -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE)) BETWEEN (json_valid(t0.c0)) AND (((x'') IS FALSE))) FROM t0 LIMIT -1296116617 OFFSET 1234644817; -- 0ms;
SELECT MIN(((t0.c0)<(t0.c0))) FROM t0 WHERE (((0.12342741961440684 COLLATE BINARY) ISNULL)); -- 0ms;
SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(t0.c0 COLLATE BINARY)))OR((((t0.c0))<((t0.c0))))), DENSE_RANK() OVER (), AVG(t0.c0) OVER () FROM t0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN ((x'')<=('-2036336085')) END); -- 1ms;
SELECT AVG(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE RTRIM) FROM t0; -- 0ms;
SELECT DISTINCT (((- (t0.c0))) IS TRUE) FROM t0 GROUP BY ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN '|县UB(㢭E\nI' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) NOTNULL))); -- 0ms;
SELECT DISTINCT json_array_length(CHANGES()) FROM t0 WHERE (((0.49692145383442843) ISNULL) COLLATE BINARY) LIMIT 2025981506 OFFSET -815293334; -- 0ms;
SELECT DISTINCT SUM(((((t0.c0)AND('8o,')))AND(t0.c0))) COLLATE RTRIM, (~ (((((((((t0.c0)OR(NULL)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN x'' END, ((t0.c0)GLOB(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) AND ((t0.c0, (t0.c0 IN ()), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) FROM t0 ORDER BY ((0.142066026283847) ISNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('0.31602473257713426') BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM t0; -- 0ms;
SELECT ALL t0.c0, ((t0.c0 COLLATE BINARY)/((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))), CASE WHEN CAST(t0.c0 AS REAL) THEN 0xffffffffcbfc62c0 ELSE ((t0.c0)>=(t0.c0)) END FROM t0 WHERE (((json_type(x'bd0d')) IS TRUE));SELECT DISTINCT (((((((t0.c0)OR(t0.c0)))AND(t0.c0))))>((t0.c0))), CASE WHEN LIKELY(t0.c0) THEN LOWER(DISTINCT t0.c0) END, ((t0.c0) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND (0X511a7fbc)) FROM t0 GROUP BY CASE ((t0.c0)<=(t0.c0))  WHEN NULL THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END, (t0.c0 COLLATE RTRIM IN ()), ((((t0.c0)|(t0.c0)))<((+ (t0.c0)))) HAVING 'h1'; -- 1ms;
SELECT DISTINCT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))OR(((t0.c0) NOT NULL))))AND(((((NULL)AND(t0.c0)))OR(t0.c0)))) FROM t0 WHERE (((0x26bee901) IS FALSE) COLLATE BINARY); -- 0ms;
SELECT DISTINCT NTH_VALUE((~ (t0.c0)) COLLATE NOCASE, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (t0.c0) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) OVER (), (((((t0.c0)IS NOT(t0.c0)), (t0.c0 IN (t0.c0)), ((t0.c0)OR(t0.c0))))<((((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((((0.7571820056710092)AND(t0.c0)))AND(t0.c0)), ((t0.c0)OR(t0.c0))))), ((((t0.c0)&(t0.c0)))IS(t0.c0 COLLATE RTRIM)) FROM t0 GROUP BY ((CAST(t0.c0 AS NUMERIC))/((t0.c0 IN (t0.c0)))), ((t0.c0)!=(CAST(NULL AS NUMERIC))), LOWER(DISTINCT (('1077081208') IS TRUE)) HAVING t0.c0; -- 0ms;
SELECT DISTINCT ((UNICODE(t0.c0)) NOTNULL), AVG(((((t0.c0)OR(t0.c0)))AND(t0.c0))), ((CASE WHEN t0.c0 THEN x'' ELSE t0.c0 END) BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT CAST(CAST(t0.c0 AS REAL) AS TEXT), ((t0.c0) NOT BETWEEN (CAST(t0.c0 AS BLOB)) AND (((t0.c0) BETWEEN (-7.041844E7) AND (t0.c0)))), SUM(((1.281498963E9)>=(t0.c0))) FROM t0 WHERE ((((- (x'ee4a'))) NOT BETWEEN (((x'') IS FALSE)) AND (('<' IN (0.6447532560722654))))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (SUBSTR(CASE 0.4265951628599496  WHEN 0.1790975073575759 THEN x'' END, ((x'')<(0.6123835901544991)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t0.c0)AND(t0.c0)) IN ()), CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN TYPEOF(t0.c0) ELSE t0.c0 END, ((((t0.c0) IS FALSE))-(((t0.c0)>=(t0.c0)))) FROM t0; -- 1ms;
SELECT ALL IFNULL(((((t0.c0)OR(0.06716014915199886)))OR(t0.c0)), t0.c0 COLLATE RTRIM) FROM t0 WHERE (((x'' COLLATE BINARY)|(((NULL)||(x''))))) GROUP BY (((t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER))) AND ((LIKELY(t0.c0)))) HAVING ((NULLIF(DISTINCT t0.c0, t0.c0))/((((t0.c0))<((t0.c0))))); -- 0ms;
SELECT DISTINCT t0.c0, CAST(((((t0.c0)OR(t0.c0)))AND(-1441069966)) AS REAL), x'', ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))<<((((t0.c0)) BETWEEN ((x'7ad3')) AND ((t0.c0))))), json_object(UPPER(t0.c0), ((t0.c0)>(t0.c0)), (((t0.c0))==((t0.c0))), t0.c0) FROM t0 WHERE (((9.17979803E8)LIKE(((('-1123175657'))<(('%j')))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE ((NOT ((((x'', 0.1270133742485945, 18410271)) NOT BETWEEN ((x'', '-1184996480', NULL)) AND (('', 568134738, 1624987700)))))); -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(((t0.c0) BETWEEN (0.9128691371940445) AND (t0.c0))) FROM t0 WHERE ((((((''))<((2114188201))))GLOB(('1321787130' IN (0xffffffffdb821d0a))))); -- 0ms;
SELECT COUNT(*), (- (((t0.c0) NOTNULL))), GROUP_CONCAT(((t0.c0) ISNULL)) OVER () FROM t0; -- 1ms;
SELECT DISTINCT ((COUNT(*)) ISNULL), ((((t0.c0) IS TRUE))=(json_array_length(t0.c0))), (((CAST(NULL AS TEXT)))!=((CAST(t0.c0 AS INTEGER)))) FROM t0 WHERE ((2.38996037E8 IN ()) COLLATE BINARY) GROUP BY HEX(DISTINCT t0.c0), ((LIKE(t0.c0, 1.010707467E9, ' '))LIKE(CASE WHEN t0.c0 THEN t0.c0 END)), t0.c0, CAST((~ (t0.c0)) AS TEXT), t0.c0 HAVING x''; -- 3ms;
SELECT TRIM(DISTINCT t0.c0), (((t0.c0) IS TRUE) IN ()), TOTAL_CHANGES() FROM t0 WHERE ((((((('')AND(0xffffffff968b47fb)))AND(NULL))) BETWEEN ((- (NULL))) AND ((((('2077217062')OR('')))OR(NULL))))); -- 1ms;
SELECT t0.c0, ((TOTAL(t0.c0)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))), (+ ((t0.c0 IN (t0.c0)))) FROM t0 WHERE ((((CASE 0.751609891752078  WHEN NULL THEN 456803962 END, NULL, CAST(0.6809691408059014 AS NUMERIC)))<=((((0.2054894369653817) NOT NULL), (NOT ('XXk}')), 0.6712710690954342)))); -- 0ms;
SELECT TOTAL(CAST(t0.c0 AS NUMERIC)) OVER ( ORDER BY ((((((t0.c0)=(t0.c0)))AND(x'')))AND(t0.c0 COLLATE BINARY)) ASC  NULLS FIRST) FROM t0 WHERE ((((SQLITE_COMPILEOPTION_GET(0X250ab003), ((0.8909503895094457) ISNULL), (0xffffffffa3557fdf IN ())))=((TOTAL_CHANGES(), ((x'') NOT NULL), ((NULL) BETWEEN ('cCT1') AND ('0.9072433180158691')))))); -- 0ms;
SELECT DISTINCT (((NULL IN ())) IS TRUE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY, (CAST(t0.c0 AS TEXT) IN ()) FROM t0; -- 0ms;
SELECT ALL ((NULL)==((t0.c0 IN ()))) FROM t0 WHERE (((((0.01736663382225334) BETWEEN (0x4f09ed38) AND ('0.8877101400573737')))<=(x'' COLLATE RTRIM))) GROUP BY CASE t0.c0 COLLATE NOCASE  WHEN ((((t0.c0)AND(t0.c0)))OR(t0.c0)) THEN (((t0.c0, '-1481628044', t0.c0))>=((t0.c0, t0.c0, t0.c0))) ELSE ('-1117306868' IN ()) END; -- 0ms;
SELECT (((~ (t0.c0)))/(((t0.c0) IS TRUE))) FROM t0; -- 0ms;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE NULL  WHEN NULL THEN x'' ELSE NULL END AS INTEGER)); -- 0ms;
SELECT ((((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))) IN ()) FROM t0; -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN NULL THEN t0.c0 ELSE t0.c0 END) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c0 AS BLOB)  WHEN COUNT(t0.c0) THEN TOTAL(t0.c0) WHEN (t0.c0 IN ()) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN (NOT (t0.c0)) THEN (((t0.c0))>=((t0.c0))) ELSE UNLIKELY(DISTINCT t0.c0) END FROM t0 LIMIT 1842823300 OFFSET -1577808415; -- 0ms;
SELECT GROUP_CONCAT(((((t0.c0)AND(t0.c0)))OR(t0.c0))), LENGTH(t0.c0), (((SUM(t0.c0)))>=((CAST('' AS NUMERIC)))) FROM t0 WHERE (((((0xffffffffbe314915) BETWEEN (x'75d6') AND (''))) BETWEEN (CAST(0.06665199489605889 AS NUMERIC)) AND ((('-1123175657') BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((t0.c0)IS NOT(0.9936505883997625)), ((~ (t0.c0)) IN ()), ((((t0.c0)LIKE(t0.c0)))AND(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((x'd867') NOT BETWEEN (x'') AND (t0.c0)) AS BLOB) FROM t0; -- 0ms;
SELECT CAST(COUNT(t0.c0) AS TEXT) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((NULL)>=(t0.c0)))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(((t0.c0) NOTNULL))) FROM t0 WHERE ((~ (0.7185466181708692)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST((~ (t0.c0)) AS REAL) FROM t0; -- 0ms;
SELECT CAST(t0.c0 AS BLOB) FROM t0 GROUP BY t0.c0 COLLATE BINARY HAVING ((((t0.c0)<(t0.c0))) BETWEEN (COUNT(t0.c0)) AND (t0.c0)); -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE))OR(((t0.c0)%(t0.c0)))) FROM t0 WHERE ((('39896687')LIKE(0.08260119126876098)) COLLATE RTRIM); -- 0ms;
SELECT ((0.3873888977574378)*(t0.c0)) FROM t0; -- 0ms;
SELECT ALL ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))||(HEX(DISTINCT t0.c0))), ((NULL)GLOB(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 'j3' ELSE t0.c0 END)), TYPEOF(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) FROM t0; -- 0ms;
SELECT DISTINCT ('og,Th' IN (t0.c0, t0.c0)) COLLATE NOCASE, ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))!=(x'')), ROW_NUMBER() OVER ( ORDER BY '-1296116617' ASC) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0)>(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0)&(x'')) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)OR(t0.c0)) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END FROM t0 WHERE (((('') NOTNULL) IN ())) ORDER BY (((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) ISNULL); -- 0ms;
SELECT ((COALESCE(DISTINCT t0.c0, t0.c0))LIKE((('1010206810') ISNULL))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)<<(t0.c0)) AS REAL) FROM t0 NOT INDEXED WHERE (NULLIF(((NULL) ISNULL), (((NULL))>=((x''))))); -- 0ms;
SELECT t0.c0 FROM t0; -- 1ms;
SELECT ALL NULL FROM t0; -- 0ms;
SELECT MAX(((((t0.c0)AND(t0.c0)))AND('1449744336'))) COLLATE RTRIM, NTH_VALUE(((((((t0.c0)+(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((~ ('-733261546')) IN ())) OVER (), COUNT(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) OVER ( ORDER BY json(((t0.c0)OR(t0.c0))) DESC) FROM t0;SELECT LOWER(LIKELY(DISTINCT t0.c0)), ((((((t0.c0)AND(t0.c0)))AND(x''))) NOT NULL), t0.c0 COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN (t0.c0 IN ()) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN t0.c0 THEN ((t0.c0)GLOB('748142617')) ELSE ((t0.c0)OR(t0.c0)) END FROM t0 WHERE ('-912965697'); -- 0ms;
SELECT ALL CUME_DIST() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t0; -- 0ms;
SELECT ALL ((t0.c0 COLLATE RTRIM) NOT BETWEEN ((t0.c0 IN ())) AND (((t0.c0) IS TRUE))), (((CAST(NULL AS TEXT)))<((x''))), HEX(DISTINCT (NOT (t0.c0))), t0.c0, ((x'')LIKE((t0.c0 IN ()))) FROM t0 WHERE ((((('*') NOT BETWEEN ('&') AND (0.25012942571941155)))<(NULL))); -- 1ms;
SELECT DISTINCT COUNT(*), PERCENT_RANK() OVER (), ((t0.c0)/(t0.c0 COLLATE RTRIM)) FROM t0 LIMIT -1335719950 OFFSET -1789662445; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)IS NOT(t0.c0)))AND(GROUP_CONCAT(t0.c0))))OR(((t0.c0)&(t0.c0)))))AND(((t0.c0) ISNULL))))OR(MAX(t0.c0))), (((((NULL, t0.c0, t0.c0))<=((t0.c0, '-389564731', t0.c0))))<=(TOTAL(t0.c0))), ((NOT (t0.c0)) IN ()), (((((t0.c0)AND(t0.c0))))<(((NOT (697948648))))), ((((CAST(t0.c0 AS REAL))OR(AVG(t0.c0))))OR(COUNT(*))) FROM t0; -- 0ms;
SELECT ALL (~ (t0.c0)) FROM t0 GROUP BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) AND ((((t0.c0))==((t0.c0))))); -- 1ms;
SELECT (((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND (955544071)) FROM t0 WHERE ((x'cfdc' IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB), ((((((((COALESCE(t0.c0, t0.c0))AND((t0.c0 IN ()))))OR(t0.c0 COLLATE BINARY)))AND(((t0.c0)GLOB(t0.c0)))))AND(((t0.c0)<(t0.c0)))), ((t0.c0 COLLATE NOCASE)||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0Xffffffff810f2374 THEN t0.c0 ELSE t0.c0 END)) FROM t0; -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((load_extension(t0.c0)) NOT BETWEEN (t0.c0) AND (MAX(t0.c0))) FROM t0;SELECT (NOT (((((t0.c0)OR(t0.c0)))OR(t0.c0)))) FROM t0 WHERE (CASE x'f2892371'  WHEN 9223372036854775807 THEN '714187235' END COLLATE RTRIM) GROUP BY HEX(DISTINCT (x'' IN ())) HAVING SUM((((t0.c0, t0.c0, t0.c0))<>((t0.c0, x'8508', t0.c0)))) ORDER BY (((t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND ((t0.c0)))  NULLS FIRST; -- 0ms;
SELECT ((CAST(t0.c0 AS TEXT)) NOT NULL), CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS BLOB), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), '')) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0) NOT BETWEEN (t0.c0) AND ('1658493909')), t0.c0 COLLATE BINARY))) FROM t0; -- 1ms;
SELECT ALL ((((t0.c0)IS(t0.c0))) NOTNULL), t0.c0, ((AVG('1026809694'))<=(((t0.c0) NOTNULL))) FROM t0; -- 0ms;
SELECT ALL ((('0.13738317286580304' IN ()))>=(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) FROM t0 WHERE (((((((NULL)OR(NULL)))OR('8h~鑳K'))) IS TRUE)); -- 0ms;
SELECT (((t0.c0)>(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL (- (CAST(t0.c0 AS NUMERIC))) FROM t0 LIMIT -1635009500; -- 0ms;
SELECT ALL (((t0.c0)<>(t0.c0)) IN ()) FROM t0 WHERE (((('(s')) BETWEEN ((((x'7f55') NOT NULL))) AND ((SQLITE_COMPILEOPTION_USED(0.49692145383442843))))); -- 0ms;
SELECT ALL (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, -1.224023353E9 COLLATE NOCASE)) AND (('<跞', ('9z' IN ()), ((t0.c0)=(t0.c0))))), json_type(((t0.c0)+(t0.c0))), t0.c0 FROM t0 GROUP BY (+ (CAST(t0.c0 AS REAL))) HAVING (((t0.c0, t0.c0, t0.c0)) BETWEEN (((t0.c0 IN ()), (((''))<>((t0.c0))), CAST(284394369 AS REAL))) AND (((t0.c0 IN ()), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 END))) ORDER BY ((t0.c0 COLLATE NOCASE)AND(t0.c0 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((COUNT(t0.c0))) AND ((t0.c0 COLLATE NOCASE))) FROM t0 WHERE ((((1250453164, 0.2948202281351098, -3.31643045E8)) BETWEEN ((CAST('' AS BLOB), CAST(NULL AS REAL), CASE '-343721939'  WHEN x'' THEN NULL END)) AND (((x'' IN ()), CASE NULL  WHEN '-70418440' THEN x'' WHEN 0.09453307504141983 THEN '' WHEN 'Kt7' THEN NULL END, COALESCE(NULL, NULL))))); -- 1ms;
SELECT DISTINCT ((((((t0.c0)IS(t0.c0)))OR((((t0.c0))<=((t0.c0))))))OR(((t0.c0) ISNULL))) FROM t0 WHERE ((('-590767908')<((('2544921264020966500:-6384818815560583629T1782298057954496810T1391-988T1736T895:839:8172832546527747989 2')>(0.3290843718823535))))); -- 0ms;
SELECT CAST(t0.c0 COLLATE NOCASE AS INTEGER), CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS TEXT), ((0.460834275573744)||(((t0.c0) NOTNULL))) FROM t0 WHERE (((((('-590767908', 0.27292489218453597, 0xffffffff8d0c1f29))>=(('', NULL, x''))))<(CAST('917979803' AS BLOB)))); -- 0ms;
SELECT DISTINCT (((((((t0.c0))<>((t0.c0))))AND(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0 WHERE ((- (TRIM(DISTINCT NULL)))) GROUP BY CAST((((t0.c0))>=((-661182281))) AS BLOB), CASE TRIM('1675574274')  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)||(t0.c0)) END, CAST(((x'') BETWEEN (t0.c0) AND (t0.c0)) AS TEXT) HAVING ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) IS FALSE)) AND ((('3q|')<<('510835472')))); -- 1ms;
SELECT DISTINCT 0.2534122264055856 FROM t0 WHERE ((((((0.39354517249729226, '', '1657640606'))>=((0.41198786361980777, NULL, '-100547080'))))=(NULL COLLATE BINARY))) UNION SELECT DISTINCT FIRST_VALUE(x'') OVER () FROM t0; -- 0ms;
SELECT AVG(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))) OVER () FROM t0; -- 0ms;
SELECT (((~ (t0.c0)))<((- (0X657b2511)))) FROM t0 ORDER BY t0.c0, ((CAST(t0.c0 AS NUMERIC))>(CAST('0.04809169781960698' AS TEXT)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((t0.c0)<<(t0.c0))))<((NULL))), FIRST_VALUE((t0.c0 IN ()) COLLATE RTRIM) OVER ( ORDER BY ((((((t0.c0)OR(NULL)))OR(t0.c0))) NOT BETWEEN (t0.c0) AND (((t0.c0)GLOB(t0.c0))))  NULLS FIRST ROWS  CURRENT ROW), (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT STRFTIME(CASE WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), (t0.c0 IN (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 162967390 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, '-70418440'))<(('0.3795888693860634', NULL, t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))), ((((((((t0.c0)OR(t0.c0)))OR(' /&5穗鰻ꈠ')))OR(t0.c0)))AND(x'')) COLLATE BINARY, (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0) IS TRUE), ((t0.c0)+(t0.c0)), (478422212 IN ()))) AND (((t0.c0 IN (t0.c0)), ((t0.c0)AND(t0.c0)), CAST(t0.c0 AS INTEGER)))), ((LIKELY(DISTINCT t0.c0)) BETWEEN (SUM(t0.c0)) AND (CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), (((((((((t0.c0 IN ()))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((t0.c0)>(0.7196421593922813)))))AND(((t0.c0) NOT BETWEEN ('jQ#I') AND (t0.c0)))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))) FROM t0 ORDER BY (- (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'2b6c' END)); -- 1ms;
SELECT ALL 0.7280460400091061 FROM t0 WHERE ((~ ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT LEAD(((((t0.c0)AND(t0.c0))) NOTNULL), (- (0.6768748269796001)), CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) OVER () FROM t0 WHERE ((('-1224023353' COLLATE BINARY)*(NULL))); -- 0ms;
SELECT LAG(t0.c0, 0.03438558653049484 COLLATE RTRIM, CASE WHEN (t0.c0 IN ()) THEN ((t0.c0)/(t0.c0)) ELSE ((t0.c0) ISNULL) END) OVER (), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR((('0.8544379710916261') IS FALSE))), FIRST_VALUE(COALESCE(DISTINCT ((t0.c0) NOT BETWEEN (x'7a5a') AND (t0.c0)), (((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0))))) OVER ( RANGE  CURRENT ROW EXCLUDE TIES) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c0) NOTNULL))AND(t0.c0)))OR((('1808302960') NOTNULL))) FROM t0 ORDER BY (('1666254107') BETWEEN (0.5477307508550041) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ASC, NULL ASC, ((t0.c0) ISNULL) COLLATE RTRIM ASC; -- 0ms;
SELECT ((((((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((t0.c0)>(0.6812539201015178)))))OR(t0.c0)))OR(SQLITE_COMPILEOPTION_GET(''))))AND((t0.c0 IN (t0.c0)))), ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) IS FALSE), AVG(t0.c0) FROM t0 WHERE (((((((x'')OR(1.010707467E9)))AND(0.887201221332953))) IS TRUE)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY '-661182281'  NULLS LAST) FROM t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c0) FROM t0; -- 0ms;
SELECT DISTINCT '', NULLIF(DISTINCT RTRIM(t0.c0), (t0.c0 IN (t0.c0))), AVG((+ (t0.c0))) FROM t0 WHERE ((((('-590767908') BETWEEN (0.6036565480080002) AND (0Xffffffff85cbe0b0))) NOT BETWEEN ((((('-70418440')AND(0xfffffffff3c561f5)))OR('ő4'))) AND ((((NULL))=((0.22188770647392775)))))); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN 0.9122395903468277 WHEN 1519727019 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)%((((t0.c0))>=((t0.c0))))) FROM t0 WHERE ((((((('nt')==('<t')))AND(('' IN ()))))OR(CASE WHEN 0.7300056217921245 THEN '-1966344598' WHEN 1660690529 THEN NULL WHEN NULL THEN 1631464439 ELSE '-504281855' END))); -- 0ms;
SELECT (('128540986')<=(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND('-1224023353')))OR(t0.c0)))) FROM t0 WHERE (((((((NULL) NOTNULL))AND(((x'')*(x'afc948ae')))))OR((+ (1366554577))))) ORDER BY (((t0.c0)) BETWEEN ((((t0.c0) NOT NULL))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) DESC  NULLS LAST LIMIT -14430580; -- 0ms;
SELECT ((((t0.c0)AND(t0.c0)))AND((t0.c0 IN ()))) FROM t0 WHERE (((((0xfffffffff157201b)-('3kR'))) IS TRUE)) GROUP BY CASE WHEN ((t0.c0) BETWEEN ('-1769256965') AND (t0.c0)) THEN (((t0.c0))<=((0.010655688713043121))) END; -- 0ms;
SELECT DISTINCT CAST('' AS TEXT) FROM t0 WHERE ((((((NULL) BETWEEN ('0.3064580372794463') AND (0.9128691371940445))))!=(((((x'')) NOT BETWEEN (('917979803')) AND ((-1847598258))))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0)>(t0.c0))) OVER () FROM t0; -- 0ms;
SELECT ALL (((COUNT(t0.c0)))=((CASE t0.c0  WHEN NULL THEN t0.c0 END))), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY, GROUP_CONCAT(((((t0.c0)AND(t0.c0)))AND('%j8(qa?'))) FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((+ (t0.c0))) NOTNULL) FROM t0 WHERE (UNICODE(x'' COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(t0.c0)))OR(t0.c0)) COLLATE RTRIM, CASE WHEN t0.c0 COLLATE NOCASE THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) END, (((t0.c0)) BETWEEN ((-1.888715466E9)) AND ((t0.c0 COLLATE BINARY))) FROM t0 GROUP BY ((UPPER(t0.c0))<>(((t0.c0)/(t0.c0)))); -- 0ms;
SELECT GROUP_CONCAT(COALESCE(t0.c0, t0.c0)) FROM t0; -- 0ms;
SELECT ((((t0.c0)<(t0.c0)))=(((t0.c0)GLOB(t0.c0)))) FROM t0 WHERE ((((NULL)) NOT BETWEEN (((0Xffffffff971ab8c7 IN ()))) AND ((CAST(x'' AS TEXT))))); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)))GLOB((((t0.c0))<>((t0.c0))))), LAG(NULLIF(t0.c0 COLLATE BINARY, ((t0.c0) IS FALSE)), CAST((t0.c0 IN (t0.c0, t0.c0)) AS NUMERIC), ((((((t0.c0)OR(t0.c0)))AND(t0.c0))) BETWEEN (UNLIKELY(DISTINCT t0.c0)) AND (CAST(t0.c0 AS TEXT)))) OVER (), x'' FROM t0 WHERE (((NULL) NOTNULL) COLLATE NOCASE); -- 0ms;
SELECT ALL 'YF	b,弬' FROM t0 WHERE (((((((((((((0.05634799307001748)AND(x'b66e')))AND('1297141114')))AND(x'')))OR(NULL)))AND(((-987142496)GLOB('-2116212680')))))OR(((((((((((((0X7fffffffffffffff)AND('')))OR(x'818d')))OR(x'')))AND(NULL)))OR(0X3b7b9e2f)))AND(x''))))); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)>=(IFNULL(t0.c0, t0.c0))) FROM t0; -- 0ms;
SELECT ALL '141009819' FROM t0 WHERE (((((((NULL)OR(NULL)))OR('0.7300056217921245'))) IS FALSE)); -- 0ms;
SELECT 0xfffffffff23f429c FROM t0 WHERE ((('KUg*KY{L3') NOTNULL) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT (t0.c0 COLLATE NOCASE IN ()) FROM t0 WHERE (((((x'')OR(('8o,' IN ()))))OR(((NULL)*('-1497985570'))))); -- 0ms;
SELECT ((((t0.c0) NOT NULL))||(((t0.c0) NOT NULL))), TRIM(DISTINCT t0.c0) COLLATE RTRIM, (x'' IN (((t0.c0) NOT BETWEEN (t0.c0) AND ('949789821')), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) FROM t0 WHERE (x'') GROUP BY CAST(((t0.c0)>>(t0.c0)) AS BLOB) HAVING ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOTNULL); -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE NOCASE IN (((t0.c0)>=(-1)))), UNLIKELY(DISTINCT (t0.c0 IN (t0.c0))), (+ (load_extension(t0.c0))) FROM t0 ORDER BY CASE NULL  WHEN ((t0.c0) ISNULL) THEN CAST(t0.c0 AS BLOB) ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END LIMIT -661182281; -- 0ms;
SELECT CAST('1728460976' AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((CASE WHEN 0x3b7b9e2f THEN x'' ELSE 0.7822654226128023 END IN ())); -- 0ms;
SELECT (MAX(t0.c0) IN ()) FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC) ASC, t0.c0 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (TRIM(t0.c0, t0.c0) IN ()) FROM t0; -- 0ms;
SELECT ALL (((t0.c0)) NOT BETWEEN ((((t0.c0)IS NOT(t0.c0)))) AND ((((t0.c0) BETWEEN ('&4?Qp') AND (t0.c0))))) FROM t0 WHERE ((x'dbbf' IN ())) GROUP BY x'' HAVING ((((t0.c0) IS FALSE)) NOTNULL); -- 0ms;
SELECT DISTINCT ((NULL) IS FALSE), NULLIF(DISTINCT '', ((t0.c0) IS FALSE)), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE (((('2140626534', -645792471, 0.6636753512315732, -474903, '-37776360')) NOT BETWEEN ((TOTAL_CHANGES(), (('J/')=(x'')), (x'' IN (0.7936038449735655, x'f4e02b79')), LIKE(NULL, 0.8877101400573737, 'T'), ((((((((NULL)AND(x'')))OR(x'')))AND(x'')))OR('-421655325')))) AND ((-1715787459 COLLATE RTRIM, ((('-1840244208'))<((NULL))), (+ ('1935394939')), (x'a59d' IN ()), ((((0.5424381618256254)AND('')))AND(0.9414644596417974)))))); -- 0ms;
SELECT DISTINCT '' FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t0 LIMIT 73636205; -- 0ms;
SELECT DISTINCT TOTAL((- (t0.c0))) OVER () FROM t0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT '-1439168240' COLLATE NOCASE, t0.c0, t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT (~ (((t0.c0)>=(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((NULL) NOTNULL) FROM t0 WHERE (DATETIME(((0.6476389626539939)AND('-652939112')), ((((-368792841)AND(302971537)))AND('221772782')), CAST(NULL AS REAL))) LIMIT 1618302627 OFFSET -696695588; -- 0ms;
SELECT DISTINCT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0)<(t0.c0)))))OR(t0.c0 COLLATE NOCASE)), NULL, (t0.c0 IN ()) FROM t0 WHERE (LIKE((('534210457') BETWEEN ('') AND (NULL)), 0Xffffffffa18bf7c2)); -- 0ms;
SELECT DISTINCT ((LIKELY(t0.c0)) BETWEEN (ABS(DISTINCT t0.c0)) AND (t0.c0 COLLATE NOCASE)) FROM t0 WHERE (CASE UNLIKELY(DISTINCT 0.08785074725386155)  WHEN TYPEOF(-1.0098779E7) THEN CASE x''  WHEN 0.13327394223128342 THEN 0xffffffffcca093cc ELSE 0xffffffff923b51c9 END WHEN (0.24363406595440285 IN ()) THEN SQLITE_COMPILEOPTION_USED(0.6812539201015178) WHEN (+ ('\')) THEN ((x'') BETWEEN (x'') AND ('-6629417745280895902:-2366577340525835731-1780 1468T')) ELSE UNLIKELY(DISTINCT 0.6533185846409156) END) LIMIT 1953938656 OFFSET 1086252133; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND ('N*')) FROM t0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END) FROM t0; -- 0ms;
SELECT ((CAST(0.738256120590097 AS TEXT)) IS TRUE) FROM t0 WHERE ((((~ (''))) ISNULL)); -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN ((t0.c0 IN ())) AND (UPPER(t0.c0))) FROM t0 WHERE (CAST(((0.11150097116945923) NOTNULL) AS NUMERIC)); -- 0ms;
SELECT ALL (((+ (t0.c0)))<=((t0.c0 IN ()))) FROM t0 WHERE (((((x'') NOTNULL))>>(CASE ''  WHEN 'Aw㌍|' THEN 0.3746512678860273 END))); -- 0ms;
SELECT CUME_DIST() OVER () FROM t0 WHERE ('') LIMIT 912412342; -- 1ms;
SELECT 1.010707467E9 FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL LIKELIHOOD(((t0.c0)||(t0.c0)), 0.4437926706538564) FROM t0; -- 0ms;
SELECT ((GROUP_CONCAT(t0.c0))GLOB((+ (t0.c0)))) FROM t0; -- 0ms;
SELECT CASE t0.c0  WHEN ((t0.c0)>(t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0)||(t0.c0)) END FROM t0; -- 0ms;
SELECT CAST(LOWER(DISTINCT t0.c0) AS NUMERIC), ((((UPPER(DISTINCT t0.c0))AND((t0.c0 IN ()))))OR(((t0.c0)<<(t0.c0)))), (((NOT (t0.c0)))>=(MAX(t0.c0))) FROM t0 WHERE ((~ (CASE NULL  WHEN '' THEN '0.06149605196860641' END))); -- 0ms;
SELECT ALL ((((((((((NULL) NOTNULL))AND(((t0.c0)IS NOT(t0.c0)))))OR(x'd5aca3094c57')))OR(SUM(x''))))OR((((t0.c0))<=((t0.c0))))), ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOTNULL), t0.c0 FROM t0 WHERE (CASE WHEN TRIM(DISTINCT x'', x'') THEN (('-27061503')+(x'4dcc')) WHEN (((0.19152057163616187, 'rHpx*b>d3', 0.7487441870921843))>=((0.4021932330792901, -2126773991, x''))) THEN CAST(NULL AS INTEGER) WHEN ((NULL) NOTNULL) THEN (~ (0.8744967941523178)) END); -- 0ms;
SELECT DISTINCT ((t0.c0)/('0.8170262751972066')) COLLATE RTRIM FROM t0 WHERE (LIKELY((((1091011859)) NOT BETWEEN ((NULL)) AND (('-1895251721'))))) LIMIT -1251622031 OFFSET 1262618811; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c0 THEN t0.c0 END AS TEXT), CASE WHEN x'' THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE ((t0.c0)LIKE(t0.c0)) END, CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) FROM t0; -- 0ms;
SELECT CASE WHEN (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END END, CASE WHEN LIKELIHOOD(t0.c0, 0.8453234615359538) THEN ((t0.c0)=(t0.c0)) ELSE SUM(x'') END, (((t0.c0, NULL, t0.c0))>=((t0.c0, t0.c0, t0.c0))) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL ((t0.c0 COLLATE RTRIM) BETWEEN (((((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))) AND ((((t0.c0))!=((t0.c0))))) FROM t0 WHERE ((CASE NULL  WHEN x'' THEN x'' END IN ())) ORDER BY ((((((((x'')AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((- (t0.c0)))))AND(LENGTH(t0.c0))))OR(TYPEOF(t0.c0))) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((t0.c0)IS NOT(t0.c0)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT '183533492' FROM t0; -- 0ms;
SELECT ALL (((t0.c0)<(t0.c0)) IN (((t0.c0)*(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL (((((t0.c0)LIKE(t0.c0))))!=((IFNULL(DISTINCT x'', t0.c0)))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM COLLATE BINARY, ((((t0.c0)>>(t0.c0)))+((t0.c0 IN ()))) FROM t0 WHERE ((CASE 1369957529  WHEN 0.15739662388507458 THEN 0xffffffffc853eae0 END IN ())); -- 0ms;
SELECT DISTINCT (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN ()) FROM t0 WHERE (NULL) ORDER BY ((((t0.c0) NOTNULL))+(t0.c0))  NULLS LAST, ((t0.c0) IS FALSE) COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN ((((t0.c0)AND('1631464439')))OR(t0.c0)) THEN CAST(t0.c0 AS TEXT) ELSE ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) END FROM t0 ORDER BY ((((t0.c0)||(t0.c0)))>>(((t0.c0) BETWEEN ('') AND (t0.c0)))) DESC, ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ('0.462300175559587' COLLATE RTRIM) AND (UNLIKELY(DISTINCT t0.c0)))  NULLS LAST, CASE WHEN ((((NULL)AND(t0.c0)))OR(0.5511050276712569)) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE CAST(t0.c0 AS TEXT) END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (NULL)) FROM t0 WHERE ((((NOT ('w'))) NOT BETWEEN (((NULL) NOT BETWEEN ('xG{g*J') AND (x''))) AND ((+ (x'ba39'))))); -- 0ms;
SELECT DISTINCT (((('yearsBＧ') NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((t0.c0 IN ())) AND ((~ (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(((238996037)LIKE('')) AS BLOB)); -- 0ms;
SELECT ALL UNLIKELY(CAST(t0.c0 AS NUMERIC)), ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(x'a2a9')))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE '' END))=((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) FROM t0 WHERE (NULL); -- 0ms;
SELECT (CAST(t0.c0 AS INTEGER) IN ()) FROM t0 WHERE (CAST((+ ('1748944458')) AS INTEGER)); -- 0ms;
SELECT DISTINCT LOWER(t0.c0) COLLATE RTRIM, AVG(MIN(t0.c0)), ((((((t0.c0)AND(4.11877606E8)))AND(t0.c0))) NOT BETWEEN (LIKELIHOOD(DISTINCT 'f', 0.6403428885493446)) AND ((t0.c0 IN (t0.c0, t0.c0)))) FROM t0 WHERE ((('-372570568') NOT BETWEEN ((((x'c61d', 0.9986467958537901, 0.5578002065468327)) NOT BETWEEN ((49036817, x'', NULL)) AND ((0.945261195385115, -1.110217325E9, NULL)))) AND (x'' COLLATE BINARY)));SELECT DISTINCT (- (SUM(t0.c0))) FROM t0 ORDER BY HEX(SQLITE_SOURCE_ID()) ASC; -- 0ms;
SELECT DISTINCT TRIM(x'5485', '7瞴mLsc,z#'), (((((x'b6c8') NOTNULL)))>(((('0.7337602628013574')%(t0.c0))))), GROUP_CONCAT(((t0.c0)<=(t0.c0))) OVER (), COALESCE((((t0.c0))<=((t0.c0))), ((t0.c0)|(t0.c0))), STRFTIME(((t0.c0) IS TRUE), (t0.c0 IN (t0.c0, t0.c0)), CASE t0.c0  WHEN 0.5900297640080339 THEN t0.c0 END) FROM t0; -- 0ms;
SELECT ALL '-971926388', ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)>>(CAST(-764729439 AS REAL))), (((NOT ('1485981988'))) BETWEEN (NULLIF(-2107842282, t0.c0)) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0 WHERE (((((NULL)+('-194512234'))) ISNULL)); -- 0ms;
SELECT DISTINCT MIN(((t0.c0) IS FALSE)), ((t0.c0) NOTNULL) COLLATE NOCASE, CAST((NOT (t0.c0)) AS BLOB) FROM t0 WHERE (x'dce3c771'); -- 0ms;
SELECT ((((((((((t0.c0)AND(t0.c0)))OR(0Xffffffff92501a10)))OR(t0.c0)))AND(t0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0 WHERE ((('')GLOB((x'f57d' IN ())))); -- 0ms;
SELECT DENSE_RANK() OVER ( RANGE  CURRENT ROW) FROM t0 WHERE (((((((NULL)>=(0.2137990255016935)))OR(CASE 0Xfffffffff72b0f02  WHEN x'529e' THEN NULL END)))OR(((0.6516294629710694)|(0Xffffffffbdd36d93))))) ORDER BY ((((t0.c0)OR((~ (t0.c0)))))OR(CAST(t0.c0 AS INTEGER))) DESC; -- 0ms;
SELECT DISTINCT LEAD(CAST(CAST(t0.c0 AS REAL) AS NUMERIC), t0.c0, TRIM(DISTINCT '0.01736663382225334', (t0.c0 IN ()))) OVER (), (((t0.c0 IN ()))-((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))), ((SUM(0.21607166034188052))/('1898714473' COLLATE BINARY)) FROM t0 ORDER BY ((((t0.c0)<(t0.c0))) BETWEEN (TRIM(DISTINCT t0.c0, t0.c0)) AND (CAST(t0.c0 AS NUMERIC))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL t0.c0, (((t0.c0)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((CAST(t0.c0 AS INTEGER)))), SUM(((t0.c0)GLOB(t0.c0))), (- (t0.c0 COLLATE RTRIM)), (((t0.c0)) BETWEEN ((AVG(t0.c0))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('1321787130')))))) FROM t0; -- 0ms;
SELECT ALL (((0.13346028234102003 IN ()))<=(COUNT(t0.c0))) FROM t0 WHERE (((((CASE 0.6247158646695858  WHEN 0.9358431244814656 THEN '-1303468702' WHEN 0.16861569236191754 THEN 0xfffffffff04de062 WHEN x'' THEN '1301009243' ELSE 0.15945445306732964 END)AND(((((0.1944848550406283)AND('BN(i|YF/')))OR(0.5807575324682248)))))AND(HEX('1702569233')))) ORDER BY (((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((CASE t0.c0  WHEN t0.c0 THEN 0.3694112536119206 ELSE t0.c0 END)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT 1.010707467E9 COLLATE RTRIM FROM t0; -- 0ms;
SELECT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('#*'))))<>(COUNT(t0.c0))), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))!=(-806764284)), (((((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))OR(MIN(t0.c0))))AND(((t0.c0) IS TRUE))) FROM t0; -- 0ms;
SELECT DISTINCT ABS(COUNT(*)) FROM t0; -- 0ms;
SELECT DISTINCT (('-1460275843')>(((t0.c0) NOTNULL))) FROM t0 WHERE ((- ((('0.06149605196860641') NOT BETWEEN ('') AND (0.18379431165682825))))); -- 0ms;
SELECT ALL CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER), ((CAST(t0.c0 AS TEXT)) IS TRUE), 'FlL푷6' FROM t0; -- 0ms;
SELECT DISTINCT NULL, CASE t0.c0 COLLATE NOCASE  WHEN t0.c0 COLLATE BINARY THEN CAST(t0.c0 AS INTEGER) ELSE t0.c0 END, COUNT((((t0.c0))<((NULL)))), CAST((NULL IN ()) AS NUMERIC), ((t0.c0) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT (CAST(NULL AS REAL) IN (t0.c0)) FROM t0 WHERE ((((((0.18784213840345343)||('-1736289028'))))<(((((0.6244670780747584, 0X7fef2535, 0X967de90))>(('', x'', 0Xffffffffb7931586))))))) GROUP BY ((0.026173749726655537)LIKE(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) HAVING ((TYPEOF(x''))<<((~ (t0.c0)))); -- 0ms;
SELECT ((((t0.c0)-(t0.c0)))*((t0.c0 IN ()))) FROM t0 WHERE ((((x'aec0' IN ())) IS TRUE)); -- 0ms;
SELECT ALL (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()), CASE ''  WHEN MAX(NULL) THEN UPPER(t0.c0) END, MAX((NOT (t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c0 AS NUMERIC)  WHEN IFNULL(t0.c0, t0.c0) THEN ((t0.c0) ISNULL) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END, (('912412342')GLOB(NULL)) COLLATE RTRIM, LAG(((((((t0.c0))<>((t0.c0)))))<=((CAST(t0.c0 AS NUMERIC)))), ((((t0.c0) NOT NULL)) IS TRUE), (((t0.c0)/(t0.c0)) IN ((((t0.c0))>((t0.c0))), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM t0 WHERE (ABS(DISTINCT CASE WHEN 0x609f4f76 THEN NULL END)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 WHERE (0.9134511840778836); -- 0ms;
SELECT ALL ((CAST(t0.c0 AS NUMERIC))&(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (0.6223605903823639); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c0) BETWEEN (0.1747870052332131) AND (t0.c0))) AND (NULL)) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) IS TRUE) FROM t0 WHERE (NULL) GROUP BY LIKELIHOOD(CAST(t0.c0 AS BLOB), 0.8192263798904771) HAVING t0.c0; -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN t0.c0 END)<>(((t0.c0)IS(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT CHANGES(), ((((((t0.c0)AND('-1499200551')))OR(t0.c0)))<(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), (((t0.c0)GLOB(t0.c0)) IN ((+ ('0.8374217008790955')), CAST(t0.c0 AS REAL))) FROM t0; -- 0ms;
SELECT LEAD((((t0.c0, t0.c0, t0.c0, t0.c0, '\r3')) NOT BETWEEN ((-1708777828, t0.c0, t0.c0, t0.c0, x'246c')) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))) COLLATE RTRIM, (((t0.c0)) NOT BETWEEN ((((t0.c0) IS FALSE))) AND ((COALESCE(t0.c0, t0.c0)))), ((TYPEOF(DISTINCT t0.c0)) NOTNULL)) OVER (), (NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))), CASE WHEN (NULL IN ()) THEN ((t0.c0) BETWEEN (t0.c0) AND (0.6661313509144079)) ELSE (((t0.c0, 0.4779335085906167, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, '420980759', t0.c0))) END FROM t0; -- 1ms;
SELECT DISTINCT CAST((((t0.c0))>=((t0.c0))) AS NUMERIC) FROM t0 WHERE ((CAST(x'' AS BLOB) IN ((('-701372602')>(0.5022541041058313))))); -- 0ms;
SELECT x'971b' FROM t0 WHERE (CASE (0.7948632464560454 IN ())  WHEN ((NULL) ISNULL) THEN (~ (-78204091)) WHEN (0Xfffffffff08d0e87 IN ()) THEN (('nf')AND(0xef73e9e)) WHEN 0.25110862909813814 THEN ((0x566957d0) IS FALSE) WHEN LIKELY(DISTINCT x'') THEN x'0a5a' WHEN highlight(x'2a37', 0.8538286811770166, NULL, 0.561861948556464) THEN CAST(NULL AS REAL) END); -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS INTEGER))||((((t0.c0))<=((t0.c0))))) FROM t0 WHERE (CASE WHEN (((('h1')AND('\')))AND(x'')) THEN '' ELSE TRIM(DISTINCT x'f142', 0xffffffffd701227a) END); -- 0ms;
SELECT ALL ((((((t0.c0)>>(t0.c0)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0)||(t0.c0)))) FROM t0 GROUP BY (((t0.c0))>((1.987508352E9))); -- 0ms;
SELECT COUNT(*) OVER () FROM t0 LIMIT -41238696; -- 0ms;
SELECT ABS(t0.c0) FROM t0; -- 0ms;
SELECT (((t0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND (((((t0.c0))>=((t0.c0)))))) FROM t0 WHERE (x''); -- 0ms;
SELECT ALL CAST(AVG(t0.c0) AS BLOB) FROM t0 LIMIT 351511819; -- 1ms;
SELECT FIRST_VALUE(-918014145) OVER () FROM t0 LIMIT 912412342; -- 0ms;
SELECT TOTAL((NOT (t0.c0))) COLLATE BINARY, ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE), CAST(((t0.c0) NOT NULL) AS NUMERIC) FROM t0 ORDER BY t0.c0; -- 0ms;
SELECT DISTINCT ((((t0.c0 COLLATE RTRIM)OR(t0.c0)))AND(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(NULL)))) FROM t0; -- 0ms;
SELECT ALL (((x'2d3e' IN ()))<(((t0.c0)/(t0.c0)))) FROM t0 WHERE (('-1090136213' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS NUMERIC), COUNT(t0.c0), NULL)) AND ((t0.c0, ((((t0.c0)OR(t0.c0)))OR(t0.c0)), ((t0.c0)GLOB(t0.c0)), ((t0.c0) ISNULL), COUNT(*)))), (((NOT (t0.c0))) ISNULL), TOTAL(((((t0.c0)AND(NULL)))OR(t0.c0))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM t0; -- 0ms;
SELECT ALL SUM((t0.c0 IN ('1806619419'))) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT LOWER(json_patch(t0.c0, t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0 IN (t0.c0)) IN ()), (CAST(t0.c0 AS REAL) IN ()), ((((t0.c0)OR(t0.c0))) BETWEEN (t0.c0 COLLATE NOCASE) AND ((NOT (t0.c0)))) FROM t0 WHERE (RTRIM(((x'0c07')>=(0.8816084924422423)))) GROUP BY ((((t0.c0)+(t0.c0))) NOTNULL) HAVING (((((((('868877690')OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))AND(CAST(t0.c0 AS TEXT))))OR(t0.c0)))AND(CAST(t0.c0 AS NUMERIC))) LIMIT 20400241 OFFSET -1102298677; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER (), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE, t0.c0, CUME_DIST() OVER (), (NOT ((t0.c0 IN ()))) FROM t0 GROUP BY (- ((t0.c0 IN ()))) HAVING '-2116212680'; -- 0ms;
SELECT ALL MIN(((t0.c0)IS NOT(t0.c0))) FROM t0 WHERE (CASE ((0.3255186316543607)%(0.9591628506476547))  WHEN 0.8374217008790955 COLLATE RTRIM THEN (~ ('474333990')) ELSE ((0.371095608330672)*(NULL)) END) LIMIT -1769256965; -- 0ms;
SELECT DISTINCT CASE ((x'f8e8')IS(t0.c0))  WHEN t0.c0 THEN (~ ('-2116212680')) WHEN MIN(t0.c0) THEN ((t0.c0)<>(t0.c0)) WHEN t0.c0 THEN GROUP_CONCAT(t0.c0) END, LEAD((x'6ffb' IN ()), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN ((+ (t0.c0))) AND ((+ (t0.c0)))), ((-2.11621268E9) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND ('0.8544379710916261'))) AND (CAST(t0.c0 AS NUMERIC)))) OVER (), CAST(((t0.c0)%(t0.c0)) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT TOTAL((t0.c0 IN ())) OVER ( ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((t0.c0) IS TRUE) END ASC), TYPEOF(DISTINCT t0.c0), CAST(((t0.c0) NOT BETWEEN (x'8d82') AND (t0.c0)) AS NUMERIC) FROM t0 WHERE (CASE WHEN LIKELIHOOD(2.38996037E8, 0.9242267967543396) THEN ((NULL)IS(0.3734840242628854)) END) LIMIT -1220446413; -- 0ms;
SELECT DISTINCT (((0.04549992712813333)LIKE(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT (((NOT (t0.c0)))IS(COUNT(*))), ((((t0.c0)<=(t0.c0)))||(MIN(t0.c0))), ((((t0.c0)||(t0.c0)))<<(t0.c0 COLLATE BINARY)) FROM t0 WHERE (GLOB(((0.44997200589139763) BETWEEN (-1.888715466E9) AND ('655945214')), x'826808ac' COLLATE NOCASE)) GROUP BY (((t0.c0 IN ()))-((- (t0.c0)))); -- 0ms;
SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (((NULL)/(t0.c0))) AND (((t0.c0) IS FALSE))), (((t0.c0)GLOB(t0.c0)) IN (UNLIKELY(t0.c0))), ((t0.c0) IS TRUE) FROM t0 WHERE ((((((((((+ (0.1260452898295107)))AND(LIKE(0xffffffffb70ae2c7, 0X602f1c70))))AND(((x'') NOT BETWEEN ('-10098779') AND (NULL)))))AND(CASE WHEN NULL THEN 0.19845940163571507 ELSE '' END)))OR((NOT ('1912014623'))))); -- 0ms;
SELECT json_array_length(highlight(t0.c0, t0.c0, t0.c0, 53035207), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0))), ((COUNT(*)) ISNULL), TOTAL(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) FROM t0;SELECT ALL COUNT(*) OVER () FROM t0; -- 0ms;
SELECT CASE t0.c0  WHEN TOTAL(t0.c0) THEN SUM(t0.c0) ELSE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) END FROM t0 WHERE (CASE WHEN ((0.958170316424119) BETWEEN (NULL) AND (NULL)) THEN (((0.6994604170895146)) NOT BETWEEN (('-1431111058')) AND ((0.8698444776881414))) ELSE 'i?h7 ' END); -- 0ms;
SELECT DISTINCT TOTAL(PRINTF(t0.c0)) OVER (), ((((t0.c0) BETWEEN ('Aw') AND (t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c0)>=(t0.c0)))), ((((t0.c0 COLLATE NOCASE)OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))AND((NOT (t0.c0)))) FROM t0 GROUP BY CASE (('') ISNULL)  WHEN t0.c0 THEN ((t0.c0)*('㲋E')) ELSE t0.c0 END HAVING CAST((t0.c0 IN ()) AS NUMERIC); -- 1ms;
SELECT ALL CAST(CAST(t0.c0 AS INTEGER) AS BLOB), (((CAST(t0.c0 AS NUMERIC)))==((((t0.c0) IS TRUE)))), COUNT(((t0.c0) IS FALSE)) FROM t0 GROUP BY CAST(((t0.c0)>>(t0.c0)) AS TEXT); -- 0ms;
SELECT DISTINCT '1314039388', t0.c0, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0 COLLATE BINARY))), ((t0.c0 COLLATE NOCASE)<<(COUNT(t0.c0))), ((TOTAL(t0.c0)) BETWEEN (t0.c0) AND (((t0.c0) NOT NULL))) FROM t0 WHERE (((((x'')+('1702569233')))<((~ (0xffffffffa9d20edd))))); -- 0ms;
SELECT ((((t0.c0)<(t0.c0)))<=(CAST(t0.c0 AS NUMERIC))) FROM t0; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c0 AS REAL)  WHEN t0.c0 COLLATE BINARY THEN DATE(t0.c0, t0.c0, t0.c0) ELSE MAX(t0.c0) END FROM t0 WHERE (((CASE NULL  WHEN 1271363244 THEN '-1860986576' ELSE NULL END)LIKE(((NULL)*(-1.460275843E9))))); -- 0ms;
SELECT DISTINCT CAST('1449744336' AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT '\' FROM t0; -- 0ms;
SELECT ((((t0.c0)AND(t0.c0)))OR(x'')) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) NOTNULL) AS BLOB), ((NULL) BETWEEN (t0.c0) AND (((t0.c0)<<(t0.c0)))), CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN (t0.c0 IN ()) END FROM t0 WHERE (((((NULL)|(3.02971537E8)))>=(((0xffffffff9e2e9c5e)LIKE(NULL))))); -- 1ms;
SELECT ALL (((TIME(t0.c0, NULL, t0.c0)))<=((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))), (((CASE WHEN t0.c0 THEN t0.c0 END, ROUND(t0.c0, '-132998052'), (NOT (t0.c0))))<>((CASE 0.5967319005451753  WHEN t0.c0 THEN t0.c0 END, 0.1206867360175804, ((((t0.c0)AND(t0.c0)))AND(t0.c0))))), NTH_VALUE((((t0.c0 IN ())) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))), CAST(CAST(t0.c0 AS TEXT) AS REAL)) OVER () FROM t0 WHERE ((((NULL))>=((CASE WHEN 0.7031399247497185 THEN NULL END)))); -- 0ms;
SELECT ALL '' FROM t0 WHERE (CAST((+ ('-1316565620')) AS REAL)) ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), ((((t0.c0)>>(t0.c0)))-(x'')); -- 0ms;
SELECT ((t0.c0) NOT BETWEEN ((+ (t0.c0))) AND ('0.8320006301653629')) FROM t0 NOT INDEXED ORDER BY (((t0.c0)) NOT BETWEEN (((('1009615683')OR(t0.c0)))) AND ((t0.c0 COLLATE BINARY))); -- 0ms;
SELECT ALL SUM(t0.c0) OVER ( PARTITION BY '-1453662470', ((LIKELY(t0.c0)) BETWEEN (((t0.c0)/(0.37242286069990793))) AND ((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))))) FROM t0 WHERE (((x'') NOT NULL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT x'' COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM t0; -- 0ms;
SELECT HEX(((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) FROM t0 GROUP BY (('0.6447532560722654') IS FALSE) HAVING ((t0.c0)GLOB(((t0.c0)+(t0.c0)))); -- 0ms;
SELECT ALL (- (t0.c0 COLLATE NOCASE)) FROM t0 WHERE ((((0.8959331084189748)) NOT BETWEEN ((UNLIKELY(0.7641761432811657))) AND ((((x'e753')&('1318365346')))))); -- 0ms;
SELECT 0Xffffffffaa6c08d0, CAST((~ (t0.c0)) AS INTEGER), (CHANGES() IN ()) FROM t0 WHERE (((CASE x''  WHEN 'I.''!jn' THEN x'' WHEN 'f[B4' THEN NULL WHEN NULL THEN x'' END)=((NULL IN ())))); -- 0ms;
SELECT CAST(STRFTIME(t0.c0, t0.c0, t0.c0) AS INTEGER) FROM t0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0 WHERE (((((((NULL)AND('1702569233')))OR(0x7fffffffffffffff)))*((1662685517 IN ())))) GROUP BY (((NOT (t0.c0)))+('1314039388')); -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE (((0X48d3e99f) NOT BETWEEN (x'') AND (1.6249877E9)) COLLATE NOCASE) GROUP BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))&(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(0Xffffffff97fc0cd1)))AND(t0.c0)))); -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN x'' THEN (~ (t0.c0)) ELSE CAST(t0.c0 AS INTEGER) END FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)IS(0.5476757935167972))) ISNULL) FROM t0; -- 0ms;
SELECT ALL HEX(CASE WHEN t0.c0 THEN x'a393' WHEN '\r镢<RK' THEN t0.c0 WHEN NULL THEN t0.c0 END), (((((t0.c0 IN ()))AND(CAST(-1.769256965E9 AS TEXT))))AND(((t0.c0)IS NOT(x'')))), CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL ABS((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) FROM t0 WHERE ((((NULL IN ())) BETWEEN ((((((((((((('')OR('1314039388')))AND(0.30395968921980954)))AND('-MὈR')))OR(0x7fffffffffffffff)))AND(x'')))AND(NULL))) AND ((('C䶬TfO?Lα]')<('0.5720670847181245'))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))>=(t0.c0 COLLATE NOCASE)) FROM t0 GROUP BY (+ ((~ (t0.c0)))); -- 0ms;
SELECT ALL (((t0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS BLOB), (((t0.c0))<>((t0.c0))), CAST(t0.c0 AS TEXT))) AND (((t0.c0 IN ()), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), t0.c0 COLLATE RTRIM))) FROM t0 WHERE (((((CAST(x'' AS BLOB))OR(CAST('1702569233' AS TEXT))))OR('f-~2now蝛' COLLATE BINARY))) GROUP BY ((((HEX(t0.c0))OR(t0.c0)))OR((~ (t0.c0)))) HAVING CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER); -- 0ms;
SELECT (~ (t0.c0)) FROM t0 WHERE (((((((((((((((((NULL)OR(NULL)))OR(0.39043952878643917)))AND('583804464')))AND(x'')))AND((NOT (NULL)))))AND(CASE WHEN 'c拀U|跡&' THEN NULL END)))OR('1724601729')))OR(((0.6258156316831917) NOTNULL)))); -- 1ms;
SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC)) NOT NULL), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))), GROUP_CONCAT((~ (t0.c0))) OVER () FROM t0 NOT INDEXED LIMIT 1891001893; -- 1ms;
SELECT LTRIM((((t0.c0))>((t0.c0))), ((t0.c0)|(t0.c0))) FROM t0 WHERE (LOWER(((x'')<('-954135830')))) LIMIT -1858496913; -- 0ms;
SELECT DISTINCT ((0.2980991363171899) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT ((x'72af') NOTNULL), ((CAST(t0.c0 AS BLOB)) IS FALSE), (((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))*((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))), (((((t0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.32140054306578103 END)))OR(t0.c0)), CAST(((NULL)LIKE(t0.c0)) AS INTEGER) FROM t0 WHERE ((((((((((NULL)AND(0.6058451720863003)))OR('1651835753')))OR(0Xfffffffffa74af1d)))OR(0.3243217735178533)) IN ())); -- 0ms;
SELECT ALL ((((t0.c0) ISNULL))|(CAST(t0.c0 AS TEXT))), CAST(SQLITE_COMPILEOPTION_USED(t0.c0) AS INTEGER), ((((((t0.c0)<=(t0.c0)))OR(((t0.c0)!=(t0.c0)))))OR(((t0.c0)||(t0.c0)))) FROM t0 WHERE ((json_object('190750108', '', 0Xffffffffbd0db317, -1.49798557E9) IN ())) LIMIT 1004212162 OFFSET 526792875; -- 0ms;
SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND ((NULL)))) NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT MAX(((t0.c0) IS FALSE)) FROM t0 WHERE (((((NULL)=('nl')))|(((('-696695588', '*', x''))<(('1279784692', 0xffffffffd3200a27, '776323765')))))); -- 0ms;
SELECT DISTINCT CAST(((0.9636690414444862)<<(t0.c0)) AS REAL) FROM t0 WHERE (((((-540739375)OR('')))OR(NULL)) COLLATE RTRIM); -- 0ms;
SELECT COUNT(TYPEOF(t0.c0)) OVER ( ORDER BY 0xffffffff97faab79 ASC) FROM t0; -- 0ms;
SELECT NTILE(CAST(t0.c0 AS INTEGER)) OVER () FROM t0 WHERE ((((NULL IN (x'')))/(((NULL) BETWEEN (NULL) AND (NULL))))) LIMIT 1227230969 OFFSET 766963966; -- 0ms;
SELECT ALL ((MAX(NULL)) NOT NULL), ((x'6b50')>=((+ (t0.c0)))), ((CAST(t0.c0 AS NUMERIC)) NOTNULL), TRIM(DISTINCT 0x1b7c3a7f), COUNT(*) OVER () FROM t0 WHERE ((- (CAST(0.8111016607803347 AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((json_patch(t0.c0, t0.c0))AND(((t0.c0) BETWEEN (t0.c0) AND (9.98799362E8)))) FROM t0; -- 0ms;
SELECT ALL CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS NUMERIC) FROM t0 WHERE (json_insert(CASE WHEN '' THEN x'' WHEN 'N\' THEN x'' WHEN '-1296116617' THEN '' ELSE -1.033574686E9 END, '484512620' COLLATE NOCASE, (('1823939574')>=('-1010587738'))));SELECT ALL ((('u'))<=((((t0.c0)OR(t0.c0))))) FROM t0 WHERE ((- (CASE -1833691498  WHEN x'' THEN '陊lY)b\nqi' WHEN x'' THEN '-2036336085' WHEN x'' THEN NULL ELSE '1115480680' END))); -- 1ms;
SELECT ((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(t0.c0 COLLATE RTRIM)))OR(x'243c')))OR(((t0.c0)/(t0.c0)))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) FROM t0 LIMIT -813005635 OFFSET 1281498963; -- 0ms;
SELECT ALL (((((((t0.c0)AND(t0.c0)))AND(t0.c0))))==((CAST(t0.c0 AS REAL)))) FROM t0 WHERE (ABS(DISTINCT CAST(0.729596367744706 AS REAL))); -- 0ms;
SELECT ALL FIRST_VALUE(NULL) OVER () FROM t0; -- 0ms;
SELECT ((((LOWER(DISTINCT t0.c0))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 125881231 END)))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))), 1.366554577E9, CAST(t0.c0 AS REAL) COLLATE RTRIM FROM t0; -- 0ms;
SELECT GROUP_CONCAT(((t0.c0)>=(t0.c0))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(t0.c0) IN (t0.c0)), (NOT ((+ (t0.c0)))), (~ ((+ (t0.c0)))) FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))<=(x'')); -- 0ms;
SELECT DISTINCT ((t0.c0)/(t0.c0)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT ((((0X7a9613a)AND(t0.c0)))AND(((t0.c0)>>(t0.c0)))) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (NOT ((~ (t0.c0)))) FROM t0; -- 0ms;
SELECT ALL (~ (((x'4ad1')LIKE(t0.c0)))) FROM t0 GROUP BY x'90ee'; -- 0ms;
SELECT DISTINCT json_insert(UPPER(DISTINCT t0.c0), CAST(t0.c0 AS BLOB), TOTAL(t0.c0), (((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0))), t0.c0) FROM t0; -- 1ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT ALL (NOT (((t0.c0) NOT NULL))) FROM t0 WHERE ((((((NULL))>=((0X6b53011c))))|(((x'3e18') IS FALSE)))) ORDER BY (NOT ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, 0.11510638004340001, t0.c0)))))  NULLS LAST; -- 0ms;
SELECT HEX(t0.c0) FROM t0 LIMIT -1584913924 OFFSET 638384117; -- 0ms;
SELECT DISTINCT (+ (((t0.c0) NOT NULL))), LOWER(DISTINCT t0.c0) COLLATE NOCASE, ROW_NUMBER() OVER () FROM t0 WHERE (((x'') NOTNULL)) ORDER BY (((HEX(t0.c0)))<((0.11044233974179507)))  NULLS LAST, ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE) ASC; -- 0ms;
SELECT ALL (+ (CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL END)) FROM t0 WHERE (CASE CAST(NULL AS REAL)  WHEN x'' THEN (NOT (-1.110217325E9)) WHEN (('-1251622031') NOT BETWEEN ('75258707') AND ('Mj푷2L\co*')) THEN 0X3bbfca0f COLLATE RTRIM WHEN json_array_length('u9_5s-x8', NULL) THEN ((('-148173054'))>=(('254336023'))) END);SELECT DISTINCT (((t0.c0)/(t0.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL COUNT(t0.c0) FROM t0 WHERE (CASE x''  WHEN x'' THEN x'168d' END COLLATE RTRIM) LIMIT 1566448819 OFFSET -605518804; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (((t0.c0))==((t0.c0)))), ((((t0.c0) NOT BETWEEN (t0.c0) AND (0.025948995282180642))) ISNULL), AVG(t0.c0), t0.c0, (~ (((t0.c0) IS TRUE))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL), UNLIKELY(DISTINCT UPPER(DISTINCT t0.c0)), ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((((t0.c0))>((t0.c0))))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c0) NOTNULL))), ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(json_insert(t0.c0, t0.c0, NULL, t0.c0, t0.c0))))OR((t0.c0 IN ('start of year')))))AND(CAST(t0.c0 AS TEXT))))AND(COUNT(*))), SUM(((t0.c0) IS TRUE) COLLATE BINARY) FROM t0 WHERE ((((((NULL, -7.041844E7, 0xffffffff8c02d91b))<(('1366554577', NULL, -853152153)))) IS TRUE)) GROUP BY t0.c0 COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0)<(t0.c0)) THEN t0.c0 COLLATE RTRIM ELSE ((t0.c0) NOT NULL) END, ((AVG(t0.c0))<<(t0.c0)), x'', (- (((t0.c0)%(t0.c0)))), GROUP_CONCAT(COALESCE(t0.c0, t0.c0)) FROM t0 LIMIT 1917133945; -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN ()) AS NUMERIC) FROM t0 WHERE ((+ (1.94974625E8)) COLLATE BINARY COLLATE NOCASE) GROUP BY (((+ (t0.c0))) IS FALSE) HAVING 'l8Z35M' LIMIT 2068977667 OFFSET -674046903; -- 0ms;
SELECT ALL LEAD(((((t0.c0)AND(t0.c0))) NOTNULL), ((t0.c0)>=(t0.c0 COLLATE BINARY)), UNLIKELY(CAST(t0.c0 AS INTEGER))) OVER ( GROUPS  CURRENT ROW) FROM t0 WHERE ((((NOT (0X60b2e01a)))IS NOT((((((((('683634308')AND(0.8993176234520988)))OR(NULL)))AND(NULL)))AND(1.613797229E9))))); -- 0ms;
SELECT ALL t0.c0 COLLATE RTRIM FROM t0; -- 1ms;
SELECT ALL (((+ (t0.c0)))GLOB(((0.37692005934589057) NOT NULL))) FROM t0 ORDER BY CASE ((t0.c0)<>(t0.c0))  WHEN (+ (t0.c0)) THEN (+ (t0.c0)) END DESC; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (t0.c0 IN ()), t0.c0) FROM t0; -- 0ms;
SELECT ALL '' FROM t0 WHERE (((((((((((NULL)AND(0.7582650966678744)))AND(NULL)))AND(0xfffffffffe631301)))OR('0.39096013971688015')))||(UPPER('190750108')))); -- 0ms;
SELECT ALL ((CAST(-1.420534123E9 AS TEXT)) NOT NULL) FROM t0 WHERE (CASE WHEN (((0.5938704160499957)) BETWEEN ((NULL)) AND ((-238619559))) THEN ((NULL)%('-2013810401')) END) GROUP BY CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) THEN (NOT (t0.c0)) END, ((SQLITE_SOURCE_ID())<((~ (t0.c0)))), ((+ (t0.c0)) IN ()) HAVING (((NOT (t0.c0)))IS NOT(NULL)); -- 0ms;
SELECT ALL ((((0.8074603342584599) NOT NULL))>(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 WHERE (TIME(0.4881771432304307 COLLATE BINARY, UNLIKELY(DISTINCT 0.9702191971398384), ((0.046483597936879506) BETWEEN (0.9208356118097709) AND (3.02971537E8)))); -- 0ms;
SELECT TOTAL(((((t0.c0)OR(t0.c0)))OR(t0.c0))) FROM t0 WHERE (((NULL COLLATE BINARY) BETWEEN (LOWER('')) AND (((0xffffffff8bdde336) BETWEEN (x'') AND (0xfffffffff492fbe7))))); -- 0ms;
SELECT DISTINCT (((NULL)GLOB(t0.c0)) IN (((t0.c0)>=(t0.c0)))) FROM t0; -- 0ms;
SELECT (t0.c0 IN (t0.c0 COLLATE NOCASE)), (NOT (NULL)), ((((((t0.c0)OR(t0.c0)))AND(t0.c0)))<=(t0.c0)) FROM t0; -- 0ms;
SELECT ALL CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC) FROM t0 WHERE (((((~ (NULL))))=(((((NULL))==((NULL))))))); -- 0ms;
SELECT DISTINCT '1465080851' FROM t0 WHERE ((~ ((~ ('-2067342217'))))) GROUP BY (((LIKE(t0.c0, t0.c0, 'b')))>((t0.c0))) HAVING TRIM(((t0.c0)+(0.788405609976087))); -- 0ms;
SELECT ALL CASE WHEN t0.c0 COLLATE RTRIM THEN (~ (t0.c0)) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) END, GROUP_CONCAT(COUNT(((((t0.c0)OR(t0.c0)))OR(NULL)))), SUM(((t0.c0) ISNULL)) OVER () FROM t0 WHERE ((((NULL)OR(x'fa72')) IN (((NULL)<('場0')))));SELECT DISTINCT x'7324' COLLATE NOCASE FROM t0 WHERE (((((NULL) NOT NULL)) BETWEEN (((('302971537'))>=((NULL)))) AND ((((((((('683634308')AND(x'')))AND(-1.48173054E8)))OR('-1256386353')))OR(-1.860986576E9))))) ORDER BY (t0.c0 IN ()) ASC  NULLS FIRST LIMIT 1785835533 OFFSET 238996037; -- 0ms;
SELECT DISTINCT COUNT(-786459366) FROM t0 WHERE (CAST((('c_|馋{	') IS FALSE) AS TEXT)); -- 0ms;
SELECT DISTINCT ('uic8.a' IN ()) FROM t0 ORDER BY t0.c0 ASC; -- 0ms;
SELECT ((t0.c0) ISNULL) FROM t0 WHERE ((((((+ (NULL)))OR('' COLLATE RTRIM)))OR(((x'')IS('S'))))); -- 0ms;
SELECT DISTINCT '' FROM t0 WHERE ((~ ((~ ('	]'))))); -- 0ms;
SELECT DISTINCT IFNULL(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (NULL))) FROM t0 LIMIT -1552944286; -- 0ms;
SELECT DISTINCT ((t0.c0)||('2')) COLLATE NOCASE, COUNT('1321787130'), (((((t0.c0)GLOB(-1.732261669E9)), CAST(t0.c0 AS TEXT), ((t0.c0) ISNULL)))<((t0.c0 COLLATE NOCASE, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), TRIM(t0.c0)))) FROM t0 WHERE ((((('-605518804')OR(x'')))AND(((0.1260452898295107)IS NOT(NULL))))); -- 1ms;
SELECT DISTINCT ((((((t0.c0)OR('-181989026')))AND(t0.c0))) BETWEEN (t0.c0) AND (((t0.c0)<(t0.c0)))), (((t0.c0)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((((((t0.c0)AND(t0.c0)))OR(t0.c0))))), (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) FROM t0; -- 0ms;
SELECT ALL CAST(t0.c0 AS BLOB), (~ (((((t0.c0)AND(t0.c0)))OR(t0.c0)))), CAST(0.48783653207861744 AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN (('1823939574')) AND (((- (t0.c0))))) FROM t0 WHERE ((((((0.7173551309618318)>=(0.18637824205478548))))<>(((('1221847455') ISNULL))))); -- 0ms;
SELECT ALL ((ABS(t0.c0))IS(NULL)), (((t0.c0 IN ())) IS FALSE), 0.36803960087280463 FROM t0 WHERE ((((((((((0Xe3eca45 IN (0.17319039029011774)))OR(((0.8018787223910979)GLOB('{&')))))OR(((NULL) NOT BETWEEN (0X68224b63) AND (NULL)))))AND((- (NULL)))))AND(rtreenode(NULL, 0.7667943849279214)))); -- 0ms;
SELECT DISTINCT ((((t0.c0)+(t0.c0)))<<(GROUP_CONCAT(t0.c0))) FROM t0; -- 0ms;
SELECT ROW_NUMBER() OVER ( PARTITION BY (((t0.c0 IN ()))%(((t0.c0) IS TRUE))), TRIM(x'') COLLATE NOCASE), (((t0.c0, t0.c0, 0.9158153614780628, 0x9532040, 0.9449699866494577)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), LIKELY(t0.c0), (t0.c0 IN (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)), 'v')) AND ((((((t0.c0)OR('D3')))AND(t0.c0)), ((t0.c0)AND(t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), x'8d86', (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))), x'305b' FROM t0 WHERE (((('771111908')) NOT BETWEEN (((726995051 IN ()))) AND (((((''))==((NULL))))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE (json_quote(x''));SELECT ALL (((('-1815547941')&(t0.c0)))OR((((((((((((('s')OR(t0.c0)))OR(t0.c0)))AND(-1.48173054E8)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((x'f899')<(t0.c0)))*(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)), (~ (((t0.c0) BETWEEN (t0.c0) AND (1342155355)))), LOWER(0.21467772833337928) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS TRUE)) BETWEEN (((t0.c0) ISNULL)) AND (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE, ((t0.c0)IS(t0.c0)) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT (((('*09Q\' COLLATE RTRIM)AND(((t0.c0)GLOB(t0.c0)))))AND(CASE 0.932279554635047  WHEN t0.c0 THEN t0.c0 END)) FROM t0 WHERE (CAST(((x'')AND(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((- (t0.c0)))>=(t0.c0)), ((CAST('' AS TEXT)) BETWEEN (t0.c0) AND (((t0.c0)IS NOT(t0.c0)))), CAST(TYPEOF(DISTINCT t0.c0) AS REAL) FROM t0; -- 0ms;
SELECT ALL AVG(((t0.c0)-(t0.c0))), json_array((+ (t0.c0)), t0.c0, (t0.c0 IN (t0.c0)), (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))), t0.c0 FROM t0 WHERE (((((0Xffffffffe1f14501) NOT NULL))%((('-590920769') BETWEEN ('714187235') AND ('1-500000O&4s'))))); -- 0ms;
