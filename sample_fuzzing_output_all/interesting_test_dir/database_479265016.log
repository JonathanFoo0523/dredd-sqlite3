-- Time: 2024/06/07 06:55:24
-- Database: database16
-- Database version: 3.40.0
-- seed value: 479265016
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 TEXT , c1 INT , c2 REAL ); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, NULL, 0.21075102678916446); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL; -- 1ms;
INSERT OR ROLLBACK INTO t0(c2, c1) VALUES (x'', 726965296); -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c2)=(0X73ad5d93, ',N') WHERE ((((x''))<>((t0.c0))) IN (((t0.c0) IS FALSE), CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)); -- 0ms;
UPDATE t0 SET (c2, c1)=(x'', '-1239874447'); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t1 (c0 INT , c1 INT , c2 REAL ); -- 0ms;
PRAGMA cache_spill = 4230193071083964143; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('1005616937') WHERE ((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) IN ()); -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('25136076', x'', x''), ('', 'i', '1005616937'), (NULL, 0x362503fb, ']䥏'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_spill = -8433075652269863332; -- 0ms;
COMMIT; -- 1ms;
UPDATE t0 SET c0='2002163808', c1='-1449277898'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=(x'') WHERE (((t1.c1, t1.c1, t1.c2)) BETWEEN ((CAST(t1.c1 AS INTEGER), CAST(t1.c1 AS INTEGER), (((t1.c2, t1.c1, t1.c2))>=((t1.c0, t1.c0, t1.c0))))) AND ((((t1.c1)|(t1.c2)), (t1.c1 IN (t1.c1)), t1.c0 COLLATE NOCASE))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1, c2)=(-1.239874447E9, 'dtz缩', 0x73ad5d93); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (NULL, NULL, '233486580'), ('-2029263142', '1787644239', '0.21075102678916446'), (NULL, -9223372036854775808, NULL), (0X6fee1bb4, x'', NULL), ('233486580', x'', x'8b3d'); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
PRAGMA temp.mmap_size = 2382009983470284369; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-1.449277898E9, NULL, 'm''d.i n'), (x'', 0.4172437345893858, '*U'), (2.3348658E8, '908395515', NULL); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'' WHERE (SUBSTR(t0.c1, t0.c1) IN (CASE WHEN t0.c2 THEN t0.c0 END)); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c68; -- 1ms;
PRAGMA busy_timeout = 0; -- 0ms;
UPDATE OR IGNORE t1 SET c68=0.5784774643835762; -- 0ms;
INSERT OR REPLACE INTO t0(c2, c1) VALUES ('-449001865', NULL), ('', 0.21075102678916446), (x'7a53', 0.1504215653912666); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA temp.stats; -- 0ms;
UPDATE t0 SET c0=x'', c2=NULL WHERE TRIM(DISTINCT 0.1504215653912666); -- 0ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c2) VALUES (0.43546528565754516, '1782836709'); -- 0ms;
DROP TABLE IF EXISTS t1; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0, c1) VALUES (0.11087546150742422, '0.5784774643835762', '1782836709'), ('C?', 2.3348658E8, x''), (NULL, x'ce5d5591', ''); -- 5ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('*U', 0.38611584034430835) WHERE json_array_length(DATE(t0.c2, t0.c1, t0.c0)); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO t1(c2, c0, c1) VALUES ('', '-126440076', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c65; -- 1ms;
UPDATE OR IGNORE t1 SET c65=x'9926' WHERE (((DATE(t1.c65, t1.c0, t1.c0, t1.c65, t1.c0), CAST(t1.c65 AS TEXT), ((0.6270709062619264) NOTNULL)))<((t1.c65, CAST(t1.c2 AS INTEGER), ((t1.c0) BETWEEN (t1.c0) AND (t1.c2))))); -- 0ms;
UPDATE OR IGNORE t1 SET c65=0.22331214075559347; -- 0ms;
INSERT OR FAIL INTO t1(c65, c2) VALUES (0.29238701421564894, '-2029263142'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO t1(c65, c2) VALUES (x'2b77', '-1624625410'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
INSERT OR IGNORE INTO t1(c2) VALUES (0x4e00ed6e); -- 0ms;
UPDATE OR ROLLBACK t1 SET c65=',N' WHERE (t1.c0 IN ()) COLLATE RTRIM; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO t1(c0, c2, c65) VALUES (x'', 0X2d01ec4, NULL), (0x6a43ede5, '1308683630', -1704141017), (x'', '-126440076', 0.134028443405672), (x'', x'', 'C?'), ('m''d.i n', 'sb', NULL); -- 0ms;
INSERT OR FAIL INTO t1(c65, c0) VALUES (726965296, NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c2) VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i90 ON t1((((c0)*(828799089)) IN ()) DESC,(((c2, c0, c0, c0, c65)) BETWEEN ((((((c2)OR(c2)))AND(c0)), (0.5745015843911532 IN (c0, c2)), CAST(c2 AS REAL), ((c65)GLOB(c0)), (~ (c2)))) AND ((((((((((c65)AND(0.8137096601332369)))OR(c2)))OR(c0)))OR(c2)), (c2 IN ()), (+ (c2)), (((c65)) NOT BETWEEN ((NULL)) AND ((c2))), (~ (c2))))) ASC,c2 COLLATE RTRIM); -- 1ms;
CREATE UNIQUE INDEX i52 ON t1((((c0) BETWEEN (c0) AND (c2)) IN (CASE WHEN '233486580' THEN c2 END)) COLLATE BINARY,(~ ((NOT (c2)))),'+6zt3酴~]嗭') WHERE (- (c0)); -- 0ms;
CREATE INDEX IF NOT EXISTS i39 ON t1(((((((c0) NOT NULL))AND(((((c0)OR(c2)))AND(c2)))))OR(((c65) NOT BETWEEN (0.23788837553309272) AND (NULL)))),((c0 COLLATE RTRIM)|(((((c2)AND(NULL)))OR(c2)))) COLLATE NOCASE DESC,((c2 COLLATE NOCASE)IS(c0)) DESC); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c2 TO c16; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cache_spill; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO t1(c65, c16) VALUES (NULL, 828799089), (0xffffffffadd39004, NULL), (NULL, x''); -- 0ms;
INSERT OR ROLLBACK INTO t1(c16) VALUES (NULL), (NULL), ('-761612228'); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT OR FAIL INTO t1(c16, c0) VALUES ('%8[J', 0xffffffffb06191ed), (NULL, NULL), (-1.62462541E9, x''); -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (~ (CASE t1.c0  WHEN t1.c65 THEN t1.c0 ELSE t1.c65 END)) FROM t1 WHERE (x'' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t1.c0, t1.c16, NULL FROM t1; -- 0ms;
SELECT (LIKELY(DISTINCT t1.c16) IN ()) FROM t1; -- 0ms;
SELECT ALL ((((((t1.c16)<(t1.c0)))OR(((((t1.c65)OR(t1.c16)))OR(t1.c65)))))AND(MAX(t1.c65))), CAST((+ (t1.c16)) AS NUMERIC), ((t1.c0) NOT NULL) FROM t1; -- 0ms;
SELECT DISTINCT ((((((((CASE t1.c65  WHEN t1.c16 THEN t1.c0 ELSE t1.c65 END)AND((~ (t1.c0)))))OR(((0.3443540534860403) NOT NULL))))OR(AVG(t1.c16))))OR(((t1.c16) ISNULL))) FROM t1; -- 0ms;
SELECT DISTINCT 0.1504215653912666 FROM t1 WHERE (CASE (((0.1442765496794769, '', '+6zt3酴~]嗭', '-1624625410', 'ꌣ}')) BETWEEN ((x'14f4', 0Xfffffffff5848572, x'', '-1876745161', '908395515')) AND (('0.38611584034430835', '', x'', NULL, '1129928173')))  WHEN (((x'')) NOT BETWEEN ((x'')) AND (('CGf2[3P'))) THEN CAST(x'370e' AS INTEGER) ELSE ((('gD', '1167880690', x'27a7'))<(('W	>>\F)&', x'', -223613172))) END); -- 0ms;
SELECT (NOT ((((t1.c0))==((t1.c65))))), (((t1.c0) NOTNULL) IN ()), x'aa7a' FROM t1 LIMIT 1308683630 OFFSET -12381738; -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((t1.c0)LIKE(t1.c65))), (+ (((t1.c16)/(t1.c65)))), ((((((t1.c0))>=((t1.c65))), t1.c0 COLLATE BINARY, SUM(t1.c16)))==((((t1.c0)>=(t1.c65)), COUNT(*), HEX(t1.c0)))) FROM t1; -- 0ms;
SELECT ALL ((((((((NULL COLLATE NOCASE)AND((- (t1.c16)))))AND(TOTAL(t1.c65))))AND(json_quote(t1.c16))))OR(SQLITE_SOURCE_ID())) FROM t1; -- 0ms;
SELECT DISTINCT CASE (((t1.c65))>=((0.37775109058466994)))  WHEN t1.c16 THEN (t1.c65 IN ()) WHEN (((((((('0.3443540534860403')AND(t1.c0)))AND(t1.c0)))AND(t1.c16)))OR(t1.c65)) THEN ((t1.c16) BETWEEN (t1.c0) AND (t1.c65)) WHEN CASE t1.c65  WHEN t1.c65 THEN -1373112999 ELSE t1.c16 END THEN ((t1.c0) BETWEEN (t1.c16) AND (t1.c16)) END FROM t1 WHERE (TRIM(((NULL) ISNULL), CASE 0xfffffffffcf2a323  WHEN x'' THEN 0.4999729810036154 ELSE 0.3558219251420448 END)) ORDER BY ((((((((((t1.c16)OR(t1.c0)))OR(t1.c16)))AND(t1.c65)))OR(t1.c0)))IS(LIKELIHOOD(t1.c16, 0.40561989431175294))) ASC  NULLS FIRST, UPPER(DISTINCT ((((t1.c65)AND(t1.c16)))OR(t1.c0))); -- 1ms;
SELECT DISTINCT ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c0)==(t1.c65))) AND ((((t1.c65))==((t1.c65))))) FROM t1 WHERE (0.22331214075559347); -- 0ms;
SELECT COUNT(((t1.c16)>(-1.373112999E9)) COLLATE BINARY) OVER () FROM t1; -- 0ms;
SELECT ALL t1.c65, TOTAL(CASE 0.3162643119373203  WHEN t1.c65 THEN t1.c65 ELSE t1.c65 END), COUNT(*) OVER () FROM t1 WHERE ((((+ (0.7293084042613263)))OR(((((0.678767566775275)OR('swt*')))OR(x'340f'))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t1.c0 AS TEXT)) FROM t1; -- 1ms;
SELECT DISTINCT (- (((t1.c65)IS NOT(1782836709)))), (((t1.c16 IN ()))<((t1.c0 IN ()))), CASE WHEN t1.c65 THEN ((((((((t1.c0)OR(t1.c65)))OR(t1.c16)))OR(t1.c65)))OR(t1.c0)) WHEN AVG(t1.c65) THEN (t1.c0 IN ()) WHEN ((((t1.c0)AND(t1.c0)))OR(t1.c16)) THEN t1.c0 ELSE (NOT (t1.c0)) END FROM t1; -- 0ms;
SELECT DISTINCT NULL FROM t1; -- 0ms;
SELECT AVG('9턤') OVER (), '0.3162643119373203', ((((t1.c65)IS(t1.c0))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (((t1.c0) BETWEEN (t1.c65) AND (t1.c16)))) FROM t1 WHERE ((((((((('-1942057661')OR(2067606028)))AND(0X28bce78a)))OR((((NULL, 0.5937686973681665, NULL))>((0.03666678404386525, x'', x''))))))AND((- (''))))); -- 1ms;
SELECT DISTINCT CASE CAST(t1.c0 AS TEXT)  WHEN (t1.c65 IN ()) THEN TYPEOF(DISTINCT t1.c16) ELSE ((t1.c16)AND(t1.c16)) END FROM t1 WHERE (((x'') NOT NULL)); -- 0ms;
SELECT COUNT((((t1.c0)) BETWEEN ((t1.c16)) AND ((t1.c0)))) OVER (), ((CASE WHEN t1.c16 THEN 0.057688423770188124 END)+(((t1.c65) NOT BETWEEN (t1.c16) AND (t1.c0)))), CAST(t1.c16 AS REAL) COLLATE NOCASE FROM t1 GROUP BY ((CASE WHEN t1.c65 THEN t1.c0 ELSE t1.c0 END) NOT BETWEEN ((~ (t1.c16))) AND (CAST(-617795765 AS TEXT))) ORDER BY (((t1.c16 IN ())) NOT NULL) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((t1.c65) BETWEEN (t1.c16) AND (t1.c0)))<<(((t1.c16) ISNULL))) FROM t1 GROUP BY ((CASE t1.c0  WHEN t1.c65 THEN t1.c0 END)LIKE((((']䥏'))<>((0.047846936450094635))))) ORDER BY (((t1.c16)) NOT BETWEEN ((((t1.c65) NOT BETWEEN (t1.c0) AND (t1.c16)))) AND ((((t1.c16) ISNULL)))), (((((t1.c65))<>((t1.c65)))) NOT BETWEEN ((((t1.c16)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((((t1.c65)) BETWEEN ((t1.c16)) AND ((t1.c65))))) DESC  NULLS FIRST; -- 0ms;
SELECT ((t1.c0)-(t1.c0)) COLLATE BINARY COLLATE BINARY, (NOT (t1.c65)) COLLATE RTRIM, CAST((t1.c0 IN (t1.c16, t1.c0)) AS TEXT) FROM t1 WHERE ((- ((((x'')) NOT BETWEEN ((-1926888167)) AND ((1595912501)))))); -- 0ms;
SELECT DISTINCT COUNT(((((t1.c16)OR(t1.c65)))AND(t1.c0))), ((((((((t1.c65)AND(t1.c65)))AND(t1.c65)))OR(t1.c0)))OR(t1.c65)) COLLATE NOCASE, t1.c16 FROM t1; -- 0ms;
SELECT ALL LIKE(MIN(t1.c65), t1.c65 COLLATE RTRIM, '-') FROM t1; -- 0ms;
SELECT DISTINCT CASE ((t1.c16)-(t1.c65))  WHEN ((t1.c65) IS FALSE) THEN ((t1.c0) NOTNULL) WHEN ((((t1.c0)OR(t1.c16)))AND(x'')) THEN CASE WHEN t1.c65 THEN t1.c0 END WHEN ((t1.c16)>=(t1.c0)) THEN ((((x'')AND(t1.c65)))OR(t1.c0)) ELSE AVG(t1.c65) END FROM t1 WHERE ((((0.2220554620718117, 0xffffffffc4cf5b18, 0.7293084042613263)) BETWEEN ((((((((((((((((((NULL)AND(NULL)))OR(NULL)))AND(0Xffffffffcf3ad422)))OR(x'')))OR(x'')))AND('	JH%K亶')))AND(NULL)))OR(NULL)), (((x'0ee0')) NOT BETWEEN ((x'bacc')) AND ((NULL))), ((NULL) ISNULL))) AND ((((0.8997217222908312) NOT BETWEEN (0.5425457888746599) AND ('')), ((']')>(0.43523933045718977)), ((NULL) NOT BETWEEN (-1.704141017E9) AND (NULL)))))); -- 1ms;
SELECT ((((((t1.c65)OR(t1.c0)))OR(t1.c16)))&(t1.c65)) FROM t1 WHERE (((((x'' IN ())))<((((x'c66d') NOTNULL))))); -- 0ms;
SELECT ALL ((t1.c16)*(CAST(t1.c65 AS TEXT))) FROM t1 WHERE ((- (CAST(x'f2ee' AS REAL)))) GROUP BY ((((((((CASE WHEN t1.c16 THEN t1.c0 ELSE t1.c65 END)OR(t1.c65 COLLATE BINARY)))OR(CASE t1.c0  WHEN t1.c16 THEN t1.c65 WHEN t1.c65 THEN t1.c65 WHEN t1.c65 THEN t1.c0 END)))AND(JULIANDAY(t1.c0, t1.c65, t1.c65))))AND((~ (t1.c16)))), (((t1.c16 IN ()))*(CAST(t1.c65 AS TEXT))), (((((((('&x+bz-')AND(((t1.c16) NOT BETWEEN (t1.c65) AND (t1.c0)))))OR(((t1.c16) NOT BETWEEN (t1.c0) AND ('-46523347')))))AND(((t1.c65)LIKE(t1.c0)))))OR(CASE WHEN t1.c16 THEN t1.c65 END)) HAVING ((((t1.c16) NOTNULL)) NOT NULL); -- 0ms;
SELECT ALL (((((((((~ (t1.c65)))AND(t1.c0)))OR(0.8705030273127198)))OR(((t1.c65)&(t1.c16)))))OR(TOTAL(t1.c65))) FROM t1 WHERE (((((('-795045497') NOT NULL)))!=((((((NULL)AND('*qX')))AND(NULL)))))); -- 0ms;
SELECT DISTINCT ((t1.c65 IN ()) IN ()), TOTAL(CASE t1.c0  WHEN t1.c65 THEN t1.c65 END) OVER (), TOTAL(((t1.c65)==(t1.c16))) OVER (), ((CAST(t1.c65 AS REAL))<((((t1.c0)) BETWEEN ((t1.c16)) AND ((t1.c16))))), NTILE(0.8705030273127198) OVER () FROM t1 WHERE (CAST('' AS INTEGER)) LIMIT 1782836709 OFFSET 951734431; -- 0ms;
SELECT (((~ (t1.c65))) NOTNULL), AVG(((t1.c16) NOT NULL)), (((NOT (t1.c0)))IS(t1.c0 COLLATE BINARY)) FROM t1 WHERE ((NOT ('-993043688' COLLATE NOCASE))) GROUP BY NULLIF(DISTINCT t1.c0, t1.c65) COLLATE RTRIM HAVING ((((t1.c16) NOT BETWEEN (t1.c65) AND (t1.c0))) IS TRUE); -- 0ms;
SELECT ((CASE t1.c65  WHEN t1.c0 THEN t1.c16 END) IS TRUE) FROM t1 WHERE (CASE WHEN (((0xffffffff90232437)) NOT BETWEEN (('')) AND ((''''))) THEN ((0.3759768457689203) NOT BETWEEN (1174935776) AND (x'22e1')) ELSE (((('-1926888167')OR('')))OR(x'757b')) END); -- 0ms;
SELECT ALL (((t1.c0)) NOT BETWEEN ((json_patch(t1.c16, t1.c16))) AND (((NOT (t1.c65))))) FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c16) IS FALSE), ((((((((((((t1.c65)OR(t1.c65)))OR(t1.c65)))OR(t1.c16)))OR(t1.c16)))OR(NULL)))AND(t1.c16)), (((t1.c65))>((1787644239)))))<((((t1.c16)||(t1.c0)), ((((((((((((t1.c65)AND(t1.c65)))AND(t1.c0)))AND(t1.c16)))AND(x'3d92')))AND(t1.c65)))OR(x'd5e1')), HEX(t1.c16)))), ((((t1.c65) NOTNULL))-(((t1.c16)-(t1.c0)))), CAST((((('-63635401')OR(t1.c0)))AND(t1.c16)) AS INTEGER) FROM t1; -- 1ms;
SELECT DISTINCT CASE t1.c0 COLLATE NOCASE  WHEN ((t1.c0) NOT BETWEEN (t1.c65) AND (t1.c0)) THEN (((t1.c0))>=(('1157236259'))) WHEN t1.c16 THEN ((t1.c16) BETWEEN (t1.c65) AND (t1.c0)) WHEN CASE t1.c0  WHEN t1.c65 THEN t1.c0 END THEN COUNT(t1.c16) END, (((t1.c16) BETWEEN (t1.c16) AND (t1.c16)) IN ()), ((x'')<((t1.c0 IN ()))) FROM t1; -- 0ms;
SELECT CASE ABS(x'')  WHEN ((t1.c0)IS NOT(t1.c65)) THEN CAST(NULL AS NUMERIC) END FROM t1; -- 0ms;
SELECT DISTINCT CASE (((('-~')AND(t1.c16)))AND(t1.c65))  WHEN t1.c0 COLLATE BINARY THEN ((t1.c65) NOT BETWEEN (x'') AND (t1.c16)) ELSE ((t1.c0) NOTNULL) END FROM t1; -- 0ms;
SELECT ALL CASE WHEN CASE t1.c16  WHEN t1.c0 THEN t1.c65 WHEN 0.38611584034430835 THEN t1.c16 WHEN t1.c16 THEN t1.c0 WHEN t1.c16 THEN t1.c65 WHEN t1.c65 THEN t1.c16 ELSE t1.c16 END THEN t1.c0 END, (((NOT (t1.c65)))GLOB(((t1.c16) NOT BETWEEN (t1.c16) AND (t1.c65)))), (((t1.c65 IN ())) NOT BETWEEN (MIN(t1.c0)) AND (t1.c65)) FROM t1 WHERE (((x'' COLLATE NOCASE)&(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((0.9604611497149383)<(0.13156685539775326)))||(((x'')GLOB('1073656676'))))) GROUP BY ((0.7496237341117146)GLOB((t1.c65 IN ()))); -- 0ms;
SELECT DISTINCT CAST(t1.c0 AS INTEGER) FROM t1 ORDER BY -12381738 DESC, (((((t1.c0)AND(t1.c65)))AND(NULL)) IN ())  NULLS FIRST;SELECT DISTINCT AVG(((((t1.c16)OR(-189784401)))AND(t1.c16))) OVER () FROM t1; -- 1ms;
SELECT DISTINCT ((((((t1.c16)AND(t1.c0)))AND(t1.c65)))LIKE((~ (t1.c0)))) FROM t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((~ (t1.c0))) OVER (), CASE t1.c0  WHEN 0.233386252390424 THEN t1.c0 END COLLATE RTRIM, (- (t1.c0)) COLLATE RTRIM, CASE WHEN (+ (t1.c16)) THEN (((t1.c65))<=((t1.c0))) END, t1.c16 FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c16 COLLATE NOCASE))<=((((((t1.c16)AND(t1.c16)))AND(t1.c16))))) FROM t1 WHERE (CAST(((x'e726') ISNULL) AS INTEGER)); -- 0ms;
SELECT ALL (((0.6819151436405276)) BETWEEN (((t1.c16 IN (t1.c16, t1.c65)))) AND ((((t1.c16)&(t1.c0))))), ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c65 END) BETWEEN (((t1.c16) IS FALSE)) AND ((NOT (x'')))), (((((((t1.c0)) BETWEEN ((t1.c65)) AND ((t1.c0))))OR(((x'2bb0') NOT NULL))))OR(((t1.c0)|(t1.c0)))) FROM t1; -- 0ms;
SELECT DISTINCT CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c16))  WHEN t1.c0 THEN 0.1442765496794769 WHEN '-126440076' THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c16)) WHEN TRIM(t1.c0) THEN TRIM(DISTINCT t1.c16) ELSE CAST(t1.c0 AS INTEGER) END FROM t1 WHERE ('S?'); -- 0ms;
SELECT ALL COUNT(*) FROM t1 GROUP BY (((x'6f79' IN ()))-(((t1.c65)||(t1.c65)))) HAVING ((((x'65aa')OR(t1.c65)))>>(t1.c16)); -- 0ms;
SELECT DISTINCT SUM(((t1.c16) IS TRUE)) FILTER(WHERE ((CASE WHEN t1.c65 THEN '-761612228' ELSE t1.c65 END)IS(((((t1.c0)OR(t1.c0)))AND(t1.c16))))) OVER () FROM t1 WHERE (CASE WHEN ((NULL)GLOB(NULL)) THEN ((x'124b') NOT NULL) END) GROUP BY (NOT (((t1.c65)/(t1.c0)))), ((CAST(t1.c0 AS REAL)) ISNULL), ((((t1.c65) NOT BETWEEN (x'') AND (t1.c0))) NOT NULL); -- 1ms;
SELECT (+ (SQLITE_COMPILEOPTION_USED(t1.c0))) FROM t1; -- 0ms;
SELECT ALL ((((t1.c65)) NOT BETWEEN ((t1.c16)) AND ((t1.c65))) IN ()), (((0.5217567067599685)%(t1.c65)) IN ()), t1.c65 FROM t1 WHERE (((((x'' COLLATE NOCASE)OR('-1876745161' COLLATE NOCASE)))AND((x'a156' IN ())))) LIMIT -1990295978; -- 0ms;
SELECT DISTINCT ((((t1.c0)AND(t1.c0)))+(t1.c0 COLLATE NOCASE)), ((CASE t1.c65  WHEN t1.c16 THEN t1.c65 ELSE t1.c65 END) BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c16))) AND (CAST(t1.c65 AS REAL))), ((NULL)==(((t1.c16) ISNULL))) FROM t1 WHERE (CASE WHEN ((('794122188')) BETWEEN ((NULL)) AND ((''))) THEN NULLIF(NULL, 'm''d.i n') ELSE (((('-818228190')OR('	dKlH')))OR('1308683630')) END); -- 0ms;
SELECT DISTINCT t1.c0 FROM t1 GROUP BY CAST(CAST(t1.c0 AS NUMERIC) AS NUMERIC); -- 1ms;
SELECT ALL ((x'152c') ISNULL) FROM t1 WHERE (CASE WHEN ((NULL)<(0.1442765496794769)) THEN ((0.920866324616608) NOTNULL) END) ORDER BY (((t1.c0)) BETWEEN ((t1.c16)) AND ((t1.c65))) COLLATE RTRIM ASC; -- 0ms;
SELECT MIN(TRIM(DISTINCT 'siW,D', t1.c16)), (((((((((t1.c0 IN ()))AND(t1.c65)))AND(((t1.c65) NOT BETWEEN (t1.c16) AND (t1.c0)))))OR(CHANGES())))OR((+ (t1.c65)))), ((((t1.c65) IS TRUE))!=(SUM(0.43523933045718977))) FROM t1 WHERE ((CASE WHEN NULL THEN NULL ELSE x'' END IN ((((0x7be2976f)) NOT BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT (- ((t1.c16 IN ()))) FROM t1; -- 0ms;
SELECT (((t1.c16)) BETWEEN ((SUM(t1.c65))) AND (((((t1.c16))=((t1.c65)))))) FROM t1 WHERE ((2002163808 COLLATE RTRIM IN ((~ ('w^'))))) ORDER BY ((TRIM(DISTINCT t1.c0)) NOT BETWEEN (x'b661') AND (((t1.c16) BETWEEN (t1.c0) AND (t1.c65))))  NULLS LAST, ((LOWER(t1.c0))&((t1.c65 IN ()))) ASC; -- 0ms;
SELECT ALL (((((t1.c0))>=((t1.c0))))-('969636051')), ((((t1.c16) ISNULL)) IS FALSE), ROUND(((t1.c16)/(835559164)), UPPER(DISTINCT x'')) FROM t1 WHERE (((((-1370848629) ISNULL)) NOT BETWEEN (0.7859356676000621 COLLATE RTRIM) AND ((((NULL, x'', NULL))<>((969636051, 1.005616937E9, NULL)))))); -- 0ms;
SELECT DISTINCT AVG(CAST(t1.c16 AS INTEGER)) FILTER(WHERE ((CASE t1.c0  WHEN '.\n' THEN t1.c65 END)<<(CAST(t1.c16 AS REAL)))) OVER () FROM t1; -- 0ms;
SELECT ALL ((t1.c0) BETWEEN (t1.c65) AND (t1.c0)) COLLATE RTRIM FROM t1 NOT INDEXED WHERE (((CASE WHEN 0.047846936450094635 THEN 'gD' END) NOT BETWEEN ((('1167880690') BETWEEN (x'') AND ('-956837296'))) AND ((('1755083878') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((COUNT(t1.c16)) IS TRUE) FROM t1 WHERE (ABS('') COLLATE BINARY); -- 0ms;
SELECT ((((((t1.c65)OR(2002163808)))AND(t1.c0))) IS TRUE) FROM t1; -- 0ms;
SELECT DISTINCT TOTAL(((t1.c0)GLOB(t1.c16))) FROM t1; -- 0ms;
SELECT ALL ((CAST(t1.c65 AS INTEGER))|(NULL)) FROM t1 WHERE (((((0Xffffffffa99dc636)*(0.5937686973681665)))OR(((-2029263142) ISNULL)))); -- 0ms;
SELECT DISTINCT ((AVG(t1.c65)) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t1.c0) IS TRUE))), TYPEOF(((t1.c0) BETWEEN (t1.c65) AND (t1.c65))), ((((((((((((((t1.c16) NOT BETWEEN (t1.c65) AND (t1.c65)))AND(((t1.c0)>(t1.c65)))))AND(((t1.c16) BETWEEN (t1.c16) AND (t1.c16)))))OR(AVG(t1.c16))))AND(((((t1.c0)AND(t1.c16)))AND(t1.c0)))))OR((t1.c65 IN ()))))AND(x'')) FROM t1 WHERE ((((('-1624625410')<('-1239874447')))|(((0.7096335710376916) BETWEEN (0.6166703890073229) AND (-1593471568))))); -- 1ms;
SELECT DISTINCT CAST((((t1.c16))!=((t1.c0))) AS REAL), (NOT (((t1.c0) NOTNULL))), (+ ((t1.c0 IN ()))) FROM t1 WHERE (((NULL)>=((('1595912501') ISNULL)))) GROUP BY ((CAST(t1.c0 AS TEXT)) IS FALSE) HAVING (((t1.c16 IN ())) NOT BETWEEN (((t1.c0)>=(t1.c16))) AND ('j8')); -- 0ms;
SELECT DISTINCT RANK() OVER (), ((((((((CAST(t1.c0 AS BLOB))OR(AVG(t1.c65))))OR(CASE WHEN t1.c0 THEN t1.c65 ELSE 0.9401943991830631 END)))AND(t1.c16)))AND(NULL)), t1.c65 FROM t1 WHERE (((CAST('-1704141017' AS NUMERIC))!=(((x'ab97')==(x''))))); -- 0ms;
SELECT ((CASE t1.c65  WHEN t1.c16 THEN t1.c16 WHEN t1.c0 THEN t1.c65 WHEN t1.c16 THEN '腇e' ELSE t1.c16 END)/(((t1.c16)GLOB(t1.c16)))) FROM t1 WHERE (((('siW,D' IN ())) BETWEEN (((x'')%('511690973'))) AND ((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((((CASE WHEN t1.c16 THEN t1.c16 ELSE t1.c16 END)OR(((t1.c65) BETWEEN (t1.c16) AND (t1.c65)))))OR(LOWER(DISTINCT NULL))) FROM t1 WHERE (x''); -- 0ms;
SELECT x'' FROM t1; -- 0ms;
SELECT DISTINCT (t1.c16 IN (t1.c0, t1.c0)) COLLATE BINARY FROM t1; -- 0ms;
SELECT ((t1.c16)AND(t1.c65)) COLLATE BINARY, COUNT((NOT (t1.c65))), NULLIF(t1.c0 COLLATE BINARY, ((t1.c16) BETWEEN (t1.c0) AND (t1.c16))) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c0) NOT BETWEEN (t1.c16) AND (t1.c65)))IS NOT(NULL)), (+ ((t1.c65 IN ()))), QUOTE(t1.c16 COLLATE RTRIM) FROM t1 WHERE (CAST(CASE WHEN 0X6e38d82d THEN '' ELSE x'' END AS INTEGER)); -- 0ms;
SELECT DISTINCT CAST(((t1.c65)>(t1.c0)) AS REAL), (+ (((t1.c16)<<(t1.c16)))), CASE (t1.c16 IN ())  WHEN (('')>>(t1.c0)) THEN (t1.c65 IN ()) WHEN ((((((((t1.c65)AND(t1.c0)))AND(t1.c0)))AND(t1.c65)))AND(t1.c0)) THEN t1.c0 COLLATE BINARY WHEN t1.c0 THEN t1.c16 COLLATE NOCASE ELSE SQLITE_SOURCE_ID() END FROM t1; -- 0ms;
SELECT DISTINCT NTH_VALUE(SUBSTR(t1.c16, t1.c16) COLLATE RTRIM, 0.9026712197359071) OVER ( PARTITION BY (((t1.c16 IN (650697039)))>=((~ (t1.c65)))), ((((CAST(t1.c0 AS REAL))OR(t1.c16 COLLATE BINARY)))OR(((t1.c0)<=(t1.c0))))) FROM t1 ORDER BY (((t1.c65 IN ()))<(((t1.c0) NOT NULL)))  NULLS FIRST, ((0.5420291370299108)|(CAST(t1.c16 AS NUMERIC)))  NULLS FIRST, LOWER(DISTINCT x'') DESC;SELECT ((NOT (x'')) IN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c16)), ((t1.c65) BETWEEN (0.5170854124849452) AND (t1.c16)))) FROM t1; -- 0ms;
SELECT AVG(COUNT(((t1.c16) BETWEEN (t1.c65) AND (t1.c0)))), CASE WHEN t1.c16 COLLATE BINARY THEN (((t1.c65)) BETWEEN (('')) AND ((t1.c65))) END, CASE ((t1.c16) NOT BETWEEN ('1525962446') AND (t1.c16))  WHEN CASE t1.c65  WHEN t1.c65 THEN t1.c65 END THEN (+ (t1.c16)) WHEN 0X2599e90e THEN ((((t1.c0)AND(t1.c16)))AND(t1.c16)) WHEN ((t1.c0) IS FALSE) THEN CASE t1.c65  WHEN t1.c16 THEN t1.c16 WHEN 0.09597439472244185 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END END FROM t1 WHERE (CAST((+ (0.5745015843911532)) AS NUMERIC));SELECT AVG(TOTAL(COUNT(*))) FROM t1 ORDER BY (((((((('-1400342777')OR(((t1.c16) NOT BETWEEN ('a ') AND (t1.c16)))))OR(t1.c16)))AND(LIKELIHOOD(DISTINCT t1.c0, 0.017816713848579968))))OR(NULL));SELECT DISTINCT GROUP_CONCAT(0x48e785be) FROM t1 WHERE (((((x'a20a')OR(1.595912501E9)))OR(((x'')==(NULL))))); -- 0ms;
SELECT DISTINCT ((((t1.c65) BETWEEN (NULL) AND (t1.c65)))GLOB(CAST(t1.c0 AS INTEGER))) FROM t1; -- 0ms;
SELECT ALL (COUNT(t1.c0) IN (CAST(t1.c16 AS BLOB))), NULL, MAX(((t1.c0) BETWEEN ('-1163161228') AND (t1.c65))) FROM t1 WHERE (COALESCE((((x'a1c9', x'', '쩹', 0.4999729810036154, ''))<=((NULL, '0.8137096601332369', x'', 0.46161731309791976, 0.1283914749050089))), ((((((((NULL)AND('')))AND('1787644239')))OR(0.29238701421564894)))AND(0.395605628719471)))); -- 0ms;
SELECT DISTINCT ((((t1.c65)<=(t1.c65))) NOTNULL) FROM t1 WHERE ((NOT (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((0.6537965724636385)<=(t1.c16 COLLATE NOCASE)) FROM t1; -- 0ms;
SELECT ALL CASE ((t1.c0) NOT NULL)  WHEN (((t1.c0)) NOT BETWEEN ((t1.c16)) AND ((t1.c65))) THEN ((t1.c0)LIKE(t1.c16)) END, (+ (((((t1.c0)OR(t1.c16)))AND('1299827321')))), (((t1.c65)) NOT BETWEEN ((CAST(t1.c65 AS REAL))) AND ((CASE t1.c65  WHEN t1.c16 THEN t1.c0 ELSE t1.c16 END))), CAST(CAST(t1.c65 AS INTEGER) AS TEXT), t1.c0 COLLATE NOCASE FROM t1 WHERE (((((NULL) NOT BETWEEN (0.4999729810036154) AND (0.3944431093923779)))|(0.3029519620072417))) GROUP BY '-1926888167' COLLATE BINARY HAVING MAX(LIKE(t1.c0, t1.c65)) ORDER BY CAST(CAST(t1.c65 AS BLOB) AS BLOB) DESC  NULLS FIRST LIMIT -1282902824 OFFSET -1292272473; -- 0ms;
SELECT DISTINCT ((('' IN (t1.c16))) IS FALSE), GROUP_CONCAT(CAST(t1.c65 AS REAL)), ((((t1.c16) NOT BETWEEN (t1.c16) AND (t1.c65)))!=(((((t1.c65)OR(t1.c16)))AND(t1.c16)))) FROM t1 ORDER BY (t1.c65 IN (t1.c65)); -- 0ms;
SELECT DISTINCT (((((t1.c65, t1.c0, t1.c0)) NOT BETWEEN ((t1.c16, t1.c16, t1.c65)) AND ((t1.c16, t1.c0, t1.c65))))GLOB(UPPER(t1.c16))) FROM t1 LIMIT 2042422665 OFFSET 1101566489; -- 0ms;
SELECT DISTINCT MAX(t1.c0) FROM t1 WHERE (SQLITE_COMPILEOPTION_USED('-1145750206')); -- 0ms;
SELECT ALL ((CASE WHEN 0Xffffffffdc4eb307 THEN t1.c0 WHEN t1.c65 THEN t1.c0 WHEN t1.c65 THEN t1.c16 ELSE t1.c65 END)>>((((t1.c0)) BETWEEN ((t1.c65)) AND ((t1.c65))))), AVG(CASE WHEN t1.c16 THEN '-475311261' WHEN t1.c0 THEN t1.c65 WHEN t1.c16 THEN t1.c16 END), (((t1.c0 IN ()))%((((x'')) NOT BETWEEN ((t1.c16)) AND ((t1.c16))))) FROM t1 GROUP BY CAST(((t1.c0)>=(t1.c65)) AS INTEGER); -- 0ms;
SELECT DISTINCT '' FROM t1 WHERE ((((x'')) BETWEEN ((0.43546528565754516 COLLATE NOCASE)) AND (((('1425478036')&('CGf2[3P')))))); -- 1ms;
SELECT DISTINCT LAG((CASE WHEN t1.c65 THEN t1.c0 ELSE t1.c65 END IN ()), LIKELY(0.22331214075559347), CASE ((((t1.c0)AND(t1.c16)))OR(t1.c65))  WHEN CASE WHEN t1.c16 THEN t1.c16 ELSE t1.c0 END THEN t1.c16 END) OVER () FROM t1 WHERE (TRIM(DISTINCT ((NULL) IS TRUE))) ORDER BY -70633144  NULLS FIRST;SELECT (((+ (t1.c16)))*(TOTAL(t1.c16))) FROM t1 WHERE (((IFNULL(NULL, NULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(((t1.c65) BETWEEN (t1.c0) AND (t1.c0)) AS TEXT) FROM t1 WHERE (((('650697039')) BETWEEN ((CASE WHEN '	hzq ' THEN '-882839916' ELSE -1072885343 END)) AND ((1097555688 COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT NULL, IFNULL((((t1.c16)) NOT BETWEEN ((t1.c16)) AND ((t1.c65))), UNLIKELY(t1.c16)), ((TRIM(t1.c16, t1.c0))IS(((t1.c65) BETWEEN (NULL) AND (t1.c65)))) FROM t1; -- 0ms;
SELECT (((((t1.c65))<>((t1.c0)))) NOT BETWEEN (CAST(t1.c0 AS REAL)) AND (((t1.c0) ISNULL))) FROM t1 WHERE ((((0.5491959730257069) BETWEEN (0.18186709697904002) AND (NULL)) IN (((x'47e5')LIKE(-1145750206)), (NULL IN ())))); -- 0ms;
SELECT ((((t1.c65)/(t1.c16))) NOT BETWEEN (((t1.c65) NOTNULL)) AND (0.38611584034430835)) FROM t1 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(SUM(t1.c0) AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT CASE ((t1.c16)-(t1.c65))  WHEN (~ (t1.c16)) THEN (((t1.c0))<=((t1.c65))) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c16 ELSE t1.c0 END THEN CAST(t1.c65 AS BLOB) WHEN CAST(t1.c16 AS REAL) THEN (~ (t1.c16)) WHEN HEX(t1.c0) THEN ((t1.c16)<>(t1.c16)) WHEN ((t1.c0)OR(t1.c65)) THEN '*vLxyC4D' WHEN CASE t1.c65  WHEN t1.c65 THEN t1.c16 WHEN t1.c65 THEN t1.c0 WHEN t1.c16 THEN t1.c16 END THEN 0.10528654863682829 WHEN t1.c16 COLLATE NOCASE THEN ((t1.c16) BETWEEN (t1.c16) AND (t1.c65)) ELSE CASE t1.c0  WHEN NULL THEN t1.c0 END END FROM t1 WHERE (((((('-832937515'))>=((NULL))))>>(((0.5419814263110937)||('0.11087546150742422'))))) GROUP BY CASE WHEN (((t1.c65, t1.c65, t1.c16))<((t1.c65, 0X498a6007, t1.c0))) THEN (((t1.c16))>((t1.c16))) ELSE highlight(t1.c16, t1.c65, t1.c0, t1.c0) END; -- 0ms;
SELECT ALL ((t1.c0)|(DATE('0.7496237341117146', t1.c65, t1.c65, '+~', t1.c0))) FROM t1 GROUP BY ((t1.c0)>=((((t1.c16))!=((t1.c0))))); -- 0ms;
SELECT DISTINCT (((NOT (t1.c16)))IS NOT((t1.c0 IN ()))) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c65) BETWEEN (t1.c16) AND (t1.c0))) ISNULL) FROM t1 WHERE ((CAST(NULL AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT ((((t1.c65)LIKE(t1.c65))) BETWEEN (CASE WHEN t1.c65 THEN t1.c65 ELSE t1.c0 END) AND (((t1.c16) IS TRUE))) FROM t1 WHERE ((((((0.3852922740900979, 0Xffffffffb38874d8, NULL)) BETWEEN (('-175864462', '-1840435856', NULL)) AND ((-1.072885343E9, x'', x''))))||((((NULL))>(('-449001865')))))) GROUP BY (~ (NULL)) HAVING AVG(t1.c0); -- 0ms;
SELECT DISTINCT ((((t1.c65)*(t1.c65))) NOTNULL), CAST(((t1.c0)IS NOT(t1.c0)) AS NUMERIC), ((((t1.c65) IS TRUE))*(CAST(t1.c16 AS BLOB))) FROM t1 WHERE (((json_extract(x'', NULL))<=(('0.3443540534860403' IN ())))) INTERSECT SELECT DISTINCT CUME_DIST() OVER (), (((((t1.c0)AND(t1.c0)))AND(t1.c16)) IN ()), TYPEOF(DISTINCT t1.c65) FROM t1 GROUP BY ((((((((CASE t1.c0  WHEN t1.c16 THEN 1.073656676E9 END)AND((t1.c65 IN ()))))AND(((t1.c0) BETWEEN (t1.c0) AND (t1.c65)))))AND(((t1.c0) IS TRUE))))OR(((t1.c16) BETWEEN (t1.c0) AND (0.9265580270945243)))), (NOT (CASE t1.c0  WHEN t1.c16 THEN t1.c16 WHEN t1.c65 THEN t1.c65 WHEN t1.c0 THEN t1.c0 END)), MIN((((((((((((('')AND(t1.c16)))OR(t1.c65)))AND(t1.c65)))AND(5.11690973E8)))OR(t1.c16)))OR(t1.c65)), ((t1.c65) BETWEEN (t1.c16) AND (t1.c65))) HAVING t1.c65;SELECT ((CAST(0.0014107251963251244 AS BLOB))LIKE(((0.5937686973681665)>(t1.c16)))), ((CASE WHEN t1.c65 THEN t1.c65 WHEN t1.c16 THEN t1.c16 WHEN t1.c65 THEN t1.c0 END)GLOB((t1.c65 IN ()))), (~ ((t1.c0 IN ()))) FROM t1; -- 0ms;
SELECT DISTINCT (((ABS(t1.c0), ((t1.c65)<=(t1.c0)), ((t1.c65)!=(t1.c16))))<=((CASE WHEN t1.c16 THEN t1.c16 END, ((t1.c16) NOT BETWEEN (t1.c16) AND (t1.c0)), t1.c65))), x'', 0.45591246805366026 FROM t1; -- 0ms;
SELECT DISTINCT ((CASE t1.c0  WHEN t1.c16 THEN t1.c0 ELSE t1.c16 END)!=(CAST(t1.c16 AS TEXT))) FROM t1 LIMIT 862491276 OFFSET -1399584298; -- 0ms;
SELECT ((('''_'))==(((t1.c65 IN ())))) FROM t1 WHERE ('WG*z|d' COLLATE NOCASE); -- 0ms;
SELECT ALL (NOT (COUNT(t1.c16))), (CASE t1.c16  WHEN t1.c16 THEN t1.c16 ELSE t1.c0 END IN ()), ((((((t1.c0)AND(t1.c16)))AND(t1.c0)))!=(x'')) FROM t1 WHERE ((((('') BETWEEN ('-1335782931') AND (1.073656676E9)))>>((('') IS FALSE)))) GROUP BY t1.c0, ((t1.c0) IS FALSE), CAST(0.13156685539775326 AS TEXT) HAVING t1.c0; -- 0ms;
SELECT DISTINCT (NOT (t1.c16 COLLATE NOCASE)), (+ (CASE t1.c0  WHEN t1.c0 THEN t1.c16 ELSE t1.c65 END)), GROUP_CONCAT(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c16 THEN t1.c16 WHEN t1.c16 THEN t1.c65 ELSE t1.c16 END) OVER () FROM t1; -- 0ms;
SELECT ((t1.c65)||(NULL)) FROM t1; -- 0ms;
SELECT AVG(((t1.c16)LIKE(t1.c16)) COLLATE RTRIM) OVER (), ((t1.c16) IS FALSE) COLLATE NOCASE, (((t1.c16)) NOT BETWEEN ((((t1.c16) NOT NULL))) AND ((((t1.c65)GLOB(t1.c16))))), t1.c65, (((+ (t1.c0))) NOT NULL) FROM t1; -- 0ms;
SELECT TOTAL(t1.c65) FILTER(WHERE GLOB(t1.c16, t1.c65) COLLATE RTRIM) OVER () FROM t1; -- 0ms;
SELECT (+ (((t1.c16)==(t1.c16)))) FROM t1 WHERE (((((((((((x'')AND(-4.75311261E8)))OR(NULL)))AND('S')))AND('')))/(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((t1.c16 IN (t1.c0)) IN ()) FROM t1 WHERE (CAST(UNICODE(NULL) AS REAL)); -- 0ms;
SELECT COUNT((~ (t1.c0))) COLLATE BINARY, (((((t1.c0))==((t1.c0)))) NOT BETWEEN (0.41176122916061597) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c65)))), LEAD((((((((((t1.c16)AND(t1.c0)))AND(t1.c0)))OR(t1.c16)))OR(t1.c65)) IN ()), ((t1.c16) BETWEEN (t1.c16) AND (t1.c0)) COLLATE NOCASE, CASE WHEN ((t1.c16) NOTNULL) THEN json_array_length(t1.c0, t1.c16) ELSE ((t1.c0)LIKE(t1.c0)) END) OVER () FROM t1 GROUP BY ((((t1.c16 COLLATE RTRIM)OR(LAST_INSERT_ROWID())))AND(((((t1.c16)AND(0.9762296582172505)))OR(t1.c65)))) LIMIT -1225661464 OFFSET -1821710950;SELECT DISTINCT '-2029263142' FROM t1 WHERE (((((((('2005291232')AND(NULL)))AND(0.4795779328261963)), (0.01974594136955299 IN ('^r.V-)L''t')), (('-1282902824')<>('EB{1? '))))<=((CASE WHEN NULL THEN x'ee5b' WHEN x'' THEN x'' WHEN 1167880690 THEN 0.8816235000613012 ELSE '1558307228' END, ((((x'')AND(0.370386837278078)))OR(1.7976931348623157E308)), (+ ('-1163161228')))))); -- 0ms;
SELECT DISTINCT ((t1.c16 COLLATE BINARY)OR(LOWER(t1.c65))) FROM t1 INDEXED BY i39 WHERE (((794122188) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST((+ (t1.c16)) AS REAL), MIN(NULL, (x'' IN ()), (('-0.0') ISNULL), t1.c65 COLLATE NOCASE), CAST((NOT (t1.c0)) AS NUMERIC) FROM t1 WHERE ((((((((('-1694348928')OR(0.7255562548843187)))OR(x'')))AND(NULL)))AND(0.23931901355501417)) COLLATE RTRIM); -- 0ms;
SELECT ((x'260e')OR('''(rm7x')) FROM t1 WHERE (((((x'') NOT BETWEEN (x'') AND ('%ᰭ'))) ISNULL)) GROUP BY (t1.c65 COLLATE BINARY IN (NULL)) HAVING (- (((t1.c65) IS TRUE))) ORDER BY CASE WHEN (+ (t1.c65)) THEN (((t1.c16))=((t1.c16))) END ASC; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c0 THEN t1.c16 ELSE t1.c65 END COLLATE RTRIM FROM t1 ORDER BY (((t1.c0, t1.c16, t1.c0)) BETWEEN ((((((NULL)OR(t1.c16)))OR(t1.c16)), (((x''))<((t1.c65))), t1.c16)) AND ((((0.047846936450094635) BETWEEN (t1.c0) AND (t1.c65)), t1.c0, t1.c65))) DESC  NULLS FIRST, ABS(((t1.c0) NOT BETWEEN (t1.c16) AND (t1.c0))) DESC, ((((((x'')OR(t1.c65)))OR(t1.c65))) NOT NULL) ASC  NULLS LAST LIMIT -993043688 OFFSET -1468809990; -- 0ms;
SELECT DISTINCT x'b954' FROM t1 WHERE ((+ ((+ (NULL))))); -- 0ms;
SELECT ALL t1.c0 FROM t1 WHERE ((((((((-956837296)) BETWEEN ((x'0a8a')) AND ((NULL))))AND(CAST(1460254617 AS TEXT))))OR((NOT ('1606183495'))))); -- 0ms;
SELECT ALL ((CASE 1.849219117E9  WHEN t1.c65 THEN t1.c65 WHEN t1.c65 THEN t1.c16 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)||(0.17113300261635211)) FROM t1 WHERE ((((((((('683468682' COLLATE NOCASE)AND((('1x1.xu+')<>(1.097555688E9)))))AND((((x''))>((0.03666678404386525))))))OR((('') BETWEEN (NULL) AND ('-1145750206')))))OR((NULL IN ())))); -- 0ms;
SELECT '1348960583', ((((((((((t1.c65)OR(t1.c65)))AND(t1.c16)))OR(t1.c65)))AND(t1.c65)))>>(TYPEOF(''))), (((t1.c65)-(t1.c65)) IN (((t1.c65)/(t1.c65)))) FROM t1 WHERE (LIKELIHOOD((('-550681887') BETWEEN (0xffffffffef624eb6) AND (NULL)), 0.7153972727741079)) GROUP BY x'6a1e', ((((((t1.c16)OR(t1.c16)))AND(0X52b70dbe)))=(((t1.c16) NOTNULL))), COALESCE(DISTINCT ((t1.c65) NOT BETWEEN (t1.c0) AND (t1.c0)), CASE WHEN t1.c65 THEN t1.c65 END, NULL, (('-1624625410')<>(t1.c65))) HAVING (((t1.c16)>(t1.c65)) IN ()) ORDER BY CASE ((t1.c65) ISNULL)  WHEN CAST(t1.c16 AS TEXT) THEN CASE t1.c16  WHEN t1.c0 THEN t1.c65 END END DESC, ((((t1.c65 COLLATE RTRIM)OR(((t1.c65)OR(t1.c0)))))OR((t1.c0 IN ()))) LIMIT -13551794; -- 0ms;
SELECT (NOT (t1.c16 COLLATE RTRIM)) FROM t1 ORDER BY ((json_extract(t1.c0, t1.c65))IS NOT((((t1.c0)) BETWEEN ((t1.c65)) AND ((t1.c65))))) DESC;SELECT DISTINCT TOTAL(((x'') NOT BETWEEN (t1.c65) AND (t1.c0))) FROM t1; -- 0ms;
SELECT DISTINCT ((NULL IN (t1.c16)) IN ()) FROM t1 ORDER BY (((CASE WHEN t1.c65 THEN t1.c0 END))>=(((t1.c16 IN ()))))  NULLS FIRST, ((((((((((((((t1.c0) IS TRUE))OR(((t1.c0)<=(t1.c16)))))AND((t1.c65 IN ()))))AND(x'06889090' COLLATE BINARY)))OR(UNLIKELY(DISTINCT t1.c65))))OR(((t1.c65) NOT NULL))))AND(((t1.c65)+('Zfows+eQ'))))  NULLS LAST; -- 0ms;
SELECT DISTINCT 0.9750814325176611 FROM t1 WHERE (((((0.9446382837831996)<<(0.4508033019122596)))*((x'' IN ())))); -- 0ms;
SELECT 0.1772926454234942 FROM t1; -- 0ms;
SELECT ((((((((0.4681183130288862)AND(((((t1.c65)AND(t1.c65)))AND(t1.c65)))))OR(((t1.c16) NOT NULL))))AND(TRIM(DISTINCT t1.c0))))OR(((t1.c0)*(t1.c16)))), COUNT(630843662) OVER (), ((((((t1.c65)AND(t1.c16)))OR(t1.c16))) IS TRUE) FROM t1 LIMIT -1282902824; -- 0ms;
SELECT DISTINCT x'' FROM t1 WHERE (((((x'7b6ea7ee' COLLATE RTRIM)OR(((0.8125125082346437)||(0xffffffffc2bd3426)))))OR(NULL))); -- 0ms;
SELECT DISTINCT 0.46416894591748514, COUNT(*), SUM((- (t1.c16)) COLLATE BINARY) OVER () FROM t1 WHERE ((((1088484032)) NOT BETWEEN ((0.11748835947163117 COLLATE NOCASE)) AND (((- (0.5253201422587033)))))); -- 1ms;
SELECT ALL (((t1.c0 IN ()))GLOB(0.10192253422076991)) FROM t1; -- 0ms;
SELECT ALL ABS(((t1.c16)+(t1.c0))) FROM t1 WHERE (CASE WHEN (('') NOT BETWEEN ('-993043688') AND ('')) THEN '1940741523' COLLATE BINARY WHEN ((0.48518310205258297)AND(0.0)) THEN (((x'')) NOT BETWEEN ((0.13969936994665733)) AND ((x'ef78'))) WHEN CAST(-1764146957 AS TEXT) THEN COALESCE('1214942689', 6.50697039E8) END); -- 0ms;
SELECT DISTINCT ((t1.c0) NOT BETWEEN ((t1.c16 IN (t1.c0, t1.c16))) AND (((t1.c16) IS TRUE))), NULL, t1.c65 FROM t1 LIMIT 369691622 OFFSET 645888551; -- 0ms;
SELECT MAX(((t1.c65) NOT BETWEEN (0.8337233671684866) AND (t1.c16))) FROM t1; -- 0ms;
SELECT ALL (((t1.c16)*(t1.c65)) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT ((COUNT(t1.c65)) ISNULL) FROM t1 NOT INDEXED WHERE (CAST('1101566489' AS BLOB)); -- 0ms;
SELECT DISTINCT NULL FROM t1 WHERE ((- (((((-2.78769994E8)AND('D+	EyQt_喙')))AND(NULL))))); -- 0ms;
SELECT DISTINCT LEAD(t1.c0, DATETIME(t1.c0, t1.c16, t1.c0, t1.c16, t1.c0) COLLATE RTRIM, t1.c65) OVER ( ORDER BY (- (t1.c16)) COLLATE RTRIM DESC, CAST(((t1.c16)IS NOT(t1.c65)) AS NUMERIC) ASC) FROM t1 WHERE ('-617795765'); -- 0ms;
SELECT DISTINCT (NOT (NULLIF(DISTINCT t1.c65, t1.c16))), ((((((((((((((t1.c0)+(t1.c65)))AND((t1.c0 IN ()))))AND((t1.c65 IN (t1.c65)))))OR(ROUND(t1.c0, t1.c65))))AND(((((t1.c16)OR(t1.c16)))AND(t1.c65)))))OR(((((t1.c0)OR(t1.c0)))OR(t1.c0)))))OR(CAST(t1.c0 AS REAL))), CASE CASE t1.c65  WHEN t1.c16 THEN t1.c16 WHEN t1.c65 THEN t1.c65 WHEN t1.c65 THEN NULL END  WHEN ((t1.c65) NOTNULL) THEN '4t_G)' END, (((((t1.c0 IN ()))OR(CAST(t1.c0 AS BLOB))))AND(((t1.c16) IS TRUE))), SUM((~ (t1.c65))) FROM t1; -- 0ms;
SELECT DISTINCT t1.c16, PERCENT_RANK() OVER (), ((t1.c0)&(((t1.c0)-('')))) FROM t1 WHERE ((((((((NULL)) NOT BETWEEN ((NULL)) AND ((x'31e0'))))OR(x'' COLLATE RTRIM)))AND(0x3368928c COLLATE NOCASE))) LIMIT -1875994910 OFFSET -300905553; -- 0ms;
SELECT DISTINCT CASE WHEN ((((t1.c16)AND(t1.c16)))OR(t1.c0)) THEN CAST(t1.c16 AS TEXT) END, ((CAST(t1.c0 AS TEXT)) ISNULL), (((t1.c0)) BETWEEN ((0.4795779328261963)) AND ((((t1.c0) IS TRUE)))) FROM t1 WHERE (LIKELIHOOD(DISTINCT ((((x'')OR(x'85f3')))OR(0x54f13b43)), 0.31794567427729126)); -- 0ms;
SELECT DISTINCT (- (t1.c16)) COLLATE BINARY FROM t1; -- 0ms;
SELECT ALL GROUP_CONCAT(t1.c65) FROM t1 WHERE (CAST(NULL AS BLOB)) LIMIT 1211217367 OFFSET -2075946968; -- 0ms;
SELECT ALL ((((t1.c65)AND(t1.c65)))<<(((t1.c0) BETWEEN (t1.c0) AND (t1.c65)))) FROM t1; -- 0ms;
SELECT DISTINCT t1.c16 FROM t1 WHERE (((((NULL)%('2096268777'))) NOT BETWEEN (((NULL) NOTNULL)) AND (json_patch('4t_%)', '-819719980'))));SELECT DISTINCT t1.c0 FROM t1; -- 0ms;
SELECT ((((t1.c0) BETWEEN (t1.c16) AND (t1.c0)))>=(((t1.c0)GLOB(t1.c65)))) FROM t1 WHERE (TRIM(((0.13969936994665733) NOT NULL))) GROUP BY (+ (((((t1.c16)OR(t1.c16)))OR(t1.c65)))) HAVING (((t1.c0) BETWEEN (t1.c65) AND (t1.c16)) IN (((t1.c0)<>(t1.c16)), ((t1.c0)/('')))); -- 1ms;
SELECT LOWER(1.940741523E9) FROM t1; -- 0ms;
SELECT DISTINCT (((('[UouF') NOTNULL))IS NOT(CAST(t1.c16 AS NUMERIC))), t1.c65, (('0.395605628719471')IS NOT(t1.c65)) COLLATE BINARY FROM t1; -- 0ms;
SELECT SUM(((t1.c16)<<(t1.c65))), COUNT(*), ((((x'')-(t1.c16))) NOT BETWEEN (SQLITE_COMPILEOPTION_USED(t1.c65)) AND (((t1.c65) IS FALSE))) FROM t1 WHERE (((('Em')) BETWEEN (((((('<v.j}84|꺖')AND(x'')))OR('683468682')))) AND ((CAST(0.04198316645350664 AS INTEGER))))); -- 0ms;
SELECT ALL 0.9002317806603368 FROM t1; -- 0ms;
SELECT ALL (((t1.c16, t1.c16, t1.c0)) NOT BETWEEN ((CASE t1.c65  WHEN t1.c65 THEN t1.c65 END, (((t1.c0, t1.c16, t1.c65)) BETWEEN ((t1.c65, t1.c0, NULL)) AND ((t1.c65, t1.c0, t1.c0))), t1.c16 COLLATE BINARY)) AND ((CAST(t1.c16 AS INTEGER), (((t1.c16)) BETWEEN ((t1.c16)) AND ((t1.c0))), ((t1.c0)<>(t1.c0))))), ((((((t1.c16)AND(t1.c16)))OR(-46523347))) NOT BETWEEN ((+ (t1.c0))) AND ((NOT (t1.c65)))), ((LIKE(t1.c16, t1.c65))/(((((t1.c0)AND(t1.c65)))AND(t1.c65)))), (+ (CASE WHEN t1.c65 THEN t1.c65 END)), ((((((((((794122188)AND(t1.c65)))AND(t1.c65)))AND(t1.c16)))OR(t1.c65))) ISNULL) FROM t1 WHERE (((((-701371666) NOT BETWEEN ('650697039') AND (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT TOTAL(((t1.c65)IS(t1.c16))) FROM t1 WHERE (CASE (((0.5401835698012879))<(('-223613172')))  WHEN ((NULL)>=('')) THEN CASE WHEN 0.43916321605985087 THEN 0.17956804063845422 WHEN NULL THEN x'' WHEN x'' THEN 0.7634105022541378 END WHEN (((1.16788069E9))>=((x''))) THEN 0.1640300326365256 WHEN ((((1.073656676E9)OR(x'f2f5')))AND(x'')) THEN (((-609817794, x'', -1.027787738E9))==((0.14304470040779393, NULL, x''))) ELSE -4.75311261E8 COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT (((((t1.c65)) NOT BETWEEN ((t1.c16)) AND ((t1.c65))))AND(((t1.c0) NOT BETWEEN (t1.c65) AND (t1.c16)))) FROM t1 WHERE ((~ (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), ((((t1.c16, t1.c0, t1.c16))<=((t1.c0, t1.c0, t1.c16))) IN ((t1.c16 IN (t1.c65)))), LOWER(MAX(t1.c0)) FROM t1 WHERE ((((((1.558307228E9) BETWEEN (NULL) AND (0.9873905640270866))))>=(((((x'7f3a'))<=((x''))))))); -- 0ms;
SELECT DISTINCT (~ ((+ (t1.c0)))), ((SUM(t1.c0))OR(((t1.c16)>=(t1.c0)))), CASE t1.c65  WHEN t1.c16 THEN t1.c0 WHEN t1.c65 THEN t1.c0 WHEN t1.c16 THEN t1.c65 ELSE t1.c16 END COLLATE NOCASE FROM t1 WHERE (((0x5af456ce COLLATE RTRIM)IS NOT((((((((('')OR(588831422)))OR(NULL)))OR(0.10192253422076991)))AND(NULL))))); -- 0ms;
SELECT (((t1.c16)) NOT BETWEEN ((GROUP_CONCAT(t1.c65))) AND ((((t1.c65)==(t1.c0))))), AVG((t1.c16 IN ())), ((((((((((t1.c65)GLOB(t1.c65)))OR((- (t1.c65)))))AND(0.08778225067089995)))OR(((t1.c16) NOT NULL))))AND(0.5019684638259538)) FROM t1; -- 4ms;
SELECT DISTINCT (NOT ('')) FROM t1; -- 0ms;
SELECT ALL t1.c16 COLLATE BINARY COLLATE NOCASE, COUNT(CAST(t1.c65 AS INTEGER)) FILTER(WHERE (x'' IN ())) OVER (), CAST((((t1.c16))>=((t1.c16))) AS BLOB) FROM t1 WHERE (((((((((0xffffffffdf2d42e1)AND(x'')))OR(1.7976931348623157E308)))OR(x'')))OR(x'38f4')) COLLATE RTRIM) LIMIT -1621207078; -- 0ms;
SELECT DISTINCT (((((t1.c65, t1.c0, t1.c16))>((t1.c0, t1.c65, t1.c16))))+(((t1.c16)&(t1.c0)))), HEX(t1.c65), (((t1.c16)) BETWEEN ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) AND ((t1.c16))) FROM t1 WHERE ((((('X^z&!웠')OR((NOT (NULL)))))OR(0Xffffffffd8b0123a))) GROUP BY ((((((t1.c0)AND(t1.c65)))OR('EB{1? ')))OR(((t1.c0)|(-1819920230)))), (+ (CAST(t1.c16 AS REAL))), CAST(highlight(t1.c0, t1.c65, t1.c16, NULL) AS BLOB);SELECT CAST(TOTAL(0X3469bc05) AS TEXT) FROM t1; -- 0ms;
SELECT (((((t1.c65)) BETWEEN ((t1.c0)) AND ((t1.c16)))) IS TRUE) FROM t1 WHERE (((- (-4.49001865E8)) IN ())); -- 0ms;
SELECT DISTINCT (~ (MIN(t1.c16))) FROM t1 WHERE ((('-1027787738')<('-46523347')) COLLATE RTRIM); -- 0ms;
SELECT ALL CASE WHEN t1.c16 COLLATE NOCASE THEN (((t1.c65))>((t1.c0))) ELSE CASE t1.c0  WHEN '-996308159' THEN t1.c0 ELSE t1.c65 END END FROM t1; -- 0ms;
SELECT ALL CAST(((t1.c16)IS NOT(t1.c16)) AS NUMERIC), ((((((((CAST(t1.c0 AS REAL))AND((((t1.c65)) BETWEEN ((t1.c65)) AND (('835559164'))))))OR(TOTAL(t1.c0))))OR(((t1.c65)/(t1.c0)))))OR(((t1.c16) IS TRUE))), '-1199703044', COUNT(*), ((t1.c16 COLLATE RTRIM) NOT BETWEEN (((t1.c0)>=(t1.c0))) AND (((t1.c0)>=(t1.c65)))) FROM t1; -- 0ms;
SELECT DISTINCT NULL, ((NULL)&((((t1.c65))=((NULL))))), (NOT (((t1.c65)LIKE(t1.c65)))) FROM t1; -- 1ms;
SELECT DISTINCT ((t1.c0 COLLATE RTRIM) NOT NULL), COUNT(*) OVER (), CASE ((t1.c0)IS(t1.c0))  WHEN COUNT(*) THEN (- (t1.c0)) WHEN CAST(t1.c16 AS INTEGER) THEN ((((t1.c16)AND(t1.c0)))AND(t1.c16)) WHEN (((t1.c16))>=((t1.c0))) THEN t1.c0 COLLATE RTRIM ELSE ((t1.c0) IS FALSE) END FROM t1 ORDER BY CASE (t1.c0 IN (x''))  WHEN (~ (t1.c65)) THEN TRIM(DISTINCT t1.c16, t1.c65) END  NULLS FIRST; -- 0ms;
SELECT ALL ((((((((((t1.c65) NOT BETWEEN (t1.c16) AND (1755083878)))OR(((t1.c65) NOT BETWEEN (t1.c0) AND (t1.c65)))))AND(STRFTIME(t1.c16, t1.c0, t1.c65))))OR(((t1.c65) NOT BETWEEN (t1.c16) AND (t1.c0)))))AND(t1.c0 COLLATE RTRIM)), '1747515042', CAST((+ (t1.c0)) AS BLOB) FROM t1; -- 0ms;
SELECT ALL t1.c65, TOTAL((~ (t1.c16))), CAST(((t1.c65) BETWEEN (t1.c65) AND (t1.c0)) AS BLOB) FROM t1 WHERE ((('h*')*((NULL IN ())))) GROUP BY x'' HAVING ((t1.c0)%(t1.c65)); -- 0ms;
SELECT ALL COALESCE(((x'') NOTNULL), ((t1.c0) NOT NULL)) FROM t1 WHERE ((((0.868013725229998))<>(((((1661613159)) BETWEEN ((-1840435856)) AND ((0.48518310205258297))))))) ORDER BY ((ABS(t1.c0)) NOT NULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT NULL FROM t1 NOT INDEXED GROUP BY json_patch(t1.c65, CAST(t1.c65 AS INTEGER)) HAVING SUM(t1.c65);SELECT CASE WHEN ((t1.c65) BETWEEN (t1.c0) AND ('-818228190')) THEN MIN(t1.c0) WHEN ((t1.c0) IS TRUE) THEN CAST(0.8605229346393705 AS NUMERIC) WHEN (((t1.c16)) NOT BETWEEN ((t1.c65)) AND ((t1.c65))) THEN load_extension(t1.c65) END, COUNT(*) OVER (), CAST((('-1803470788') BETWEEN (x'') AND (t1.c16)) AS REAL) FROM t1 WHERE ((((((('0') NOT NULL))AND(((NULL) ISNULL))))OR(((((0.3944431093923779)OR(1.595912501E9)))AND(0.678767566775275))))); -- 1ms;
SELECT ((highlight(t1.c0, t1.c65, t1.c0, t1.c65))==(CAST(t1.c65 AS NUMERIC))), ((ABS(t1.c65)) BETWEEN (((t1.c0)&('cCR-'))) AND (CAST(t1.c0 AS INTEGER))), (((((t1.c65))!=((t1.c16))))<((NOT (t1.c0)))) FROM t1 LIMIT 1606183495 OFFSET -1163161228;SELECT DISTINCT (((t1.c16 IN ()))<(((t1.c65) IS TRUE))) FROM t1 ORDER BY ((t1.c65 COLLATE RTRIM) BETWEEN (((((((((t1.c16)OR(t1.c0)))OR(t1.c16)))OR(t1.c16)))OR(t1.c65))) AND (CASE t1.c0  WHEN NULL THEN '1101566489' END)) ASC LIMIT -780900928 OFFSET 969636051; -- 0ms;
SELECT ALL ((((((((MIN(t1.c0, t1.c65))AND(((((t1.c65)OR(t1.c65)))OR(t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c16) AND (t1.c16)))))OR(((t1.c0)IS NOT(t1.c65)))))AND(((t1.c65)<>(t1.c16)))), x'1337', (('K<TR+?') NOT BETWEEN (TOTAL(t1.c16)) AND (t1.c65 COLLATE NOCASE)) FROM t1 WHERE (CASE WHEN (x'' IN ()) THEN ((0.9749557195107922)GLOB(x'')) END); -- 0ms;
SELECT json_type(((((t1.c65)OR(t1.c0)))AND(t1.c16))), ((((t1.c16)>>(t1.c65)))>>(((t1.c65) NOT BETWEEN (t1.c16) AND (t1.c16)))), RANK() OVER () FROM t1 WHERE (((ABS(DISTINCT x''))=(x''))); -- 0ms;
SELECT DISTINCT ((((((t1.c16)AND(t1.c0)))OR('0.9401943991830631'))) ISNULL) FROM t1 WHERE ((((('-1030714476') IS TRUE))/(CASE WHEN 0.741501369761918 THEN NULL WHEN '(	\rl' THEN x'd4d6' WHEN 0.7255562548843187 THEN 0X7f8c5377 END))); -- 1ms;
SELECT ALL SUM(CASE t1.c65  WHEN t1.c0 THEN t1.c16 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) OVER () FROM t1; -- 0ms;
SELECT ((MAX(t1.c0)) ISNULL) FROM t1; -- 0ms;
SELECT SUM((t1.c65 IN (x''))), ((UNLIKELY(DISTINCT t1.c16)) NOT BETWEEN (((t1.c65)/(t1.c16))) AND (MIN(t1.c0))), ((((t1.c16)AND(t1.c16)))AND(t1.c0)) COLLATE NOCASE FROM t1; -- 0ms;
SELECT ALL (((t1.c16)+(t1.c65)) IN ()) FROM t1 WHERE ((((('d0p')-(1.755083878E9)))&(TRIM(',C1&6_䭬b', NULL)))); -- 0ms;
SELECT CAST((((t1.c16)) NOT BETWEEN ((t1.c16)) AND ((t1.c65))) AS REAL), 0.2660601458942089, (((((((((((t1.c65))>=((t1.c0))))OR(((((((((t1.c65)AND(t1.c65)))AND(t1.c65)))OR(t1.c0)))OR(t1.c0)))))AND((((t1.c16))=((t1.c0))))))AND(((t1.c16) NOT BETWEEN (t1.c65) AND (x'82dd')))))AND(((((t1.c0)AND(t1.c65)))OR(x'3689')))) FROM t1 WHERE ((((x'', 'j8', NULL)) BETWEEN ((NULL, ((((0.048484081849017424)AND(x'2dcd')))AND(861853756)), 0Xfffffffffbca3948 COLLATE RTRIM)) AND ((DATE(NULL, '-2029263142', NULL), ((NULL) BETWEEN ('1725829910') AND (x'6a90')), ((0.43031775817950557)&(-1.292272473E9)))))); -- 0ms;
SELECT DISTINCT t1.c16 FROM t1 WHERE (((+ (0xffffffff870be6da)) IN (((-7.95045497E8) IS FALSE)))) GROUP BY ((CASE WHEN t1.c0 THEN t1.c0 END)>=(-1.46880999E9)) HAVING (((t1.c16 IN ()))>(LIKELY(t1.c65))); -- 0ms;
SELECT GLOB(((t1.c0)=(t1.c16)), (~ (NULL))) FROM t1 WHERE (CASE WHEN ((((0Xffffffff90232437)AND(0.1442765496794769)))OR(x'a64b')) THEN ((1306681771) ISNULL) ELSE ((NULL)%(NULL)) END); -- 0ms;
SELECT ALL (((t1.c16)|(t1.c65)) IN ()) FROM t1 ORDER BY ((((((t1.c65)OR(0.4060096695798623)))AND(0.370386837278078)))LIKE((((t1.c65))<=((t1.c16)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT LAST_VALUE(x'8131') OVER () FROM t1 WHERE (((0.6278891713641113 COLLATE NOCASE)AND('1129928173' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((t1.c65 IN (0.7127480536296382, t1.c65)) IN (t1.c16 COLLATE BINARY)), (+ ((t1.c0 IN ()))), (((NOT (t1.c16)))IS(CASE t1.c65  WHEN t1.c65 THEN t1.c0 ELSE t1.c0 END)) FROM t1 LIMIT 1849219117 OFFSET 67954046; -- 0ms;
SELECT ALL IFNULL(t1.c65, t1.c0) COLLATE NOCASE FROM t1 WHERE ((((NULL)) BETWEEN ((((x'5145') NOT NULL))) AND (((- ('-~')))))); -- 0ms;
SELECT DISTINCT t1.c16, 0.9933480614047722, NTILE(t1.c65 COLLATE NOCASE) OVER () FROM t1 WHERE ((((NOT (0.43727628967078047)))>=(CASE -1145750206  WHEN NULL THEN x'2774' ELSE 0.759753439128666 END))); -- 0ms;
SELECT ALL ((x'')+((~ (t1.c65)))) FROM t1; -- 0ms;
SELECT DISTINCT CASE ((t1.c65)>>(t1.c65))  WHEN HEX(DISTINCT t1.c65) THEN (((t1.c65, t1.c65, t1.c0)) BETWEEN ((t1.c0, t1.c16, t1.c0)) AND ((t1.c65, t1.c0, t1.c65))) ELSE GROUP_CONCAT(t1.c0) END, t1.c16, (((((t1.c16))==((t1.c16))))&(COUNT(*))) FROM t1 WHERE ((((((x'')) NOT BETWEEN ((0.5087291088978438)) AND ((x'e4fc')))) NOT BETWEEN ((((NULL, '9o冖', NULL)) BETWEEN ((x'3d23', '1425478036', '>T')) AND ((445580155, NULL, x'')))) AND (((((NULL)AND(NULL)))AND(NULL))))); -- 1ms;
SELECT ALL UNLIKELY(((t1.c0) NOT NULL)) FROM t1 WHERE ((((x'e0a2b613')) NOT BETWEEN (('%f&?G{l')) AND ((CASE x''  WHEN x'' THEN 0.367450729983272 END)))) LIMIT -733190986; -- 0ms;
SELECT ALL (- (t1.c0 COLLATE BINARY)), ((((((((LIKE(t1.c0, t1.c65))AND((t1.c65 IN ()))))OR((t1.c16 IN ()))))OR(((t1.c65) ISNULL))))OR(((t1.c65)>(x'')))), ((t1.c16)<>(t1.c16)) COLLATE NOCASE COLLATE RTRIM, ((((-1935162410)|(t1.c0))) IS FALSE), NULL FROM t1 WHERE ((((x'')<<(0.9962112397003386)) IN (((('-1704141017', x'', ''))<=((0.1442765496794769, x'', 0.6256412974068496)))))) GROUP BY CAST(((t1.c0) BETWEEN (t1.c65) AND (t1.c65)) AS INTEGER) LIMIT -1402768751; -- 0ms;
SELECT ALL CAST(((t1.c16) IS TRUE) AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT '0.2220554620718117' FROM t1 WHERE (x''); -- 1ms;
SELECT DISTINCT (((NULL))>((((t1.c16)<=(t1.c16))))) FROM t1 WHERE (CAST((((x'99dd63cf')) NOT BETWEEN (('-1353329040')) AND ((2020044164))) AS BLOB)); -- 0ms;
SELECT DISTINCT ((t1.c0) IS FALSE), GROUP_CONCAT(CAST(t1.c65 AS REAL)), (t1.c16 COLLATE RTRIM IN ()) FROM t1 WHERE ((- (0.9401943991830631)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c65 THEN t1.c65 WHEN t1.c65 THEN t1.c16 END))<=(((((t1.c65))<>((t1.c0)))))) FROM t1 GROUP BY ((((((((((t1.c0) ISNULL))OR(t1.c16)))AND(((t1.c0) NOT NULL))))AND(((t1.c65) NOTNULL))))AND(1406365107)) HAVING (((t1.c0)/(t1.c0)) IN (((t1.c16) IS TRUE))); -- 0ms;
SELECT ((((t1.c0) NOTNULL)) NOT NULL), ((CASE WHEN NULL THEN t1.c0 END)<('''')), ((((t1.c0) BETWEEN (t1.c16) AND (t1.c16)))+(t1.c65 COLLATE RTRIM)), (((t1.c16 IN (t1.c0))) BETWEEN (CAST(t1.c16 AS NUMERIC)) AND (t1.c65 COLLATE RTRIM)), DENSE_RANK() OVER () FROM t1; -- 0ms;
SELECT ALL ((((-1201297139) NOTNULL)) NOT NULL), ((((t1.c65)<=(t1.c0)))||(MIN(t1.c0))), CAST(t1.c65 AS NUMERIC) FROM t1; -- 0ms;
SELECT ALL ((((t1.c0)|(t1.c0))) IS FALSE) FROM t1 WHERE (CASE -1.373112999E9  WHEN 0.1640300326365256 THEN '683468682' ELSE x'' END COLLATE BINARY); -- 0ms;
SELECT CAST(t1.c16 AS TEXT) FROM t1 WHERE (((('/0亶3--' IN ())) NOT BETWEEN (((-1.378643964E9) BETWEEN (NULL) AND ('-|D'))) AND (((x'')IS NOT(''))))); -- 0ms;
SELECT DISTINCT CAST(CASE t1.c65  WHEN t1.c0 THEN t1.c65 ELSE t1.c16 END AS REAL) FROM t1 WHERE (CAST(UNLIKELY(DISTINCT '{r') AS BLOB)) GROUP BY ((CAST(t1.c16 AS NUMERIC)) NOT BETWEEN ((((t1.c65))!=((t1.c16)))) AND (t1.c0)); -- 0ms;
SELECT ((((((((CAST(t1.c16 AS INTEGER))OR(((t1.c65)|(t1.c65)))))OR((- (t1.c0)))))OR(((x'')<=(t1.c0)))))AND(CASE t1.c16  WHEN t1.c16 THEN t1.c65 ELSE t1.c0 END)) FROM t1 WHERE (((((CAST(x'fc86' AS INTEGER))OR(((x'f617') NOT BETWEEN (0x6a43ede5) AND ('\rXn')))))OR(CASE NULL  WHEN 0Xffffffffad0b520f THEN 0xffffffff96d940f3 END))); -- 0ms;
SELECT ((((t1.c16) NOT NULL))>=(((t1.c16)*(t1.c16)))) FROM t1; -- 0ms;
SELECT DISTINCT ((t1.c16 COLLATE NOCASE)>=(CASE WHEN NULL THEN t1.c16 WHEN t1.c65 THEN t1.c65 WHEN t1.c16 THEN t1.c0 END)), (((t1.c0) IS FALSE) IN ()), GROUP_CONCAT(((t1.c0) BETWEEN (t1.c65) AND (x''))) FROM t1; -- 0ms;
SELECT ALL (((((t1.c16)AND(t1.c0)))OR(t1.c65)) IN ()), AVG(((x'')AND(t1.c65))) COLLATE RTRIM, ((t1.c65) BETWEEN (t1.c65) AND (t1.c65)) COLLATE NOCASE FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c16 IN ())) ISNULL) FROM t1 WHERE (((('') NOT BETWEEN (0.7859356676000621) AND ('}''')) IN ())); -- 0ms;
SELECT DISTINCT CASE (+ (t1.c16))  WHEN (t1.c0 IN ()) THEN CASE t1.c0  WHEN t1.c16 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c65 THEN t1.c16 END END FROM t1 WHERE ((((CASE WHEN 'q7hXwut/' THEN NULL WHEN '' THEN x'' WHEN '353311750' THEN NULL END, ((('	JKdJ꨽')) BETWEEN (('0.233386252390424')) AND ((0xffffffffac887707))), ((x'384a')%('f^^,'))))<(((('')/(47193796)), ((((0.3958058288241546)OR(0.34760943957568335)))AND('-898379438')), ((((NULL)OR(NULL)))AND(-127152563)))))); -- 0ms;
SELECT DISTINCT (((((((t1.c0)) NOT BETWEEN ((t1.c65)) AND ((t1.c0))))AND(((NULL)IS('-1604460011')))))OR(((t1.c16) NOT NULL))), (((t1.c65)) NOT BETWEEN (((~ (t1.c16)))) AND ((MAX(t1.c16)))), (((((t1.c0, t1.c0, t1.c65)) NOT BETWEEN ((t1.c65, t1.c0, t1.c16)) AND ((t1.c16, t1.c16, t1.c65))))IS(t1.c16 COLLATE NOCASE)) FROM t1 WHERE (LOWER(DISTINCT CAST('B ' AS REAL))); -- 1ms;
SELECT LIKELIHOOD(DISTINCT t1.c65 COLLATE BINARY, 0.46469323835238796) FROM t1 WHERE ((((0.08596733707413229)) BETWEEN ((((0.920866324616608)<=('125400398')))) AND (((('G拌%BvN+&,')>(NULL)))))) LIMIT -1296509229 OFFSET 1196395144; -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(t1.c16 COLLATE BINARY AS REAL)) OVER () FROM t1; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), CASE WHEN ((t1.c16) BETWEEN (t1.c0) AND (t1.c16)) THEN ((t1.c65) IS TRUE) WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c65 WHEN t1.c16 THEN t1.c16 END THEN NULLIF(t1.c16, t1.c65) WHEN (((t1.c65)) NOT BETWEEN ((t1.c0)) AND ((x''))) THEN '0.21075102678916446' ELSE (((t1.c0))<=((t1.c0))) END, ((((((((IFNULL(t1.c65, 0.29238701421564894))AND(t1.c16 COLLATE BINARY)))OR(x'' COLLATE RTRIM)))AND(((NULL) BETWEEN (t1.c65) AND (t1.c16)))))OR((~ (t1.c65)))) FROM t1; -- 0ms;
SELECT DISTINCT MIN((((t1.c16))<=(('1425478036')))), 0.5932273473497014 COLLATE BINARY, ((((COALESCE(t1.c65, t1.c65))AND(CAST(t1.c0 AS REAL))))AND(((t1.c0) IS TRUE))) FROM t1; -- 0ms;
SELECT DISTINCT json_type((t1.c16 IN (t1.c16))), t1.c0, (((t1.c65 IN ()))+(((x'a47d') ISNULL))) FROM t1 WHERE (((((NULL)-(0.4712966115049162))) NOT BETWEEN (CAST(0X615e8f02 AS INTEGER)) AND (('M(oz+2' IN ())))) GROUP BY CAST((t1.c0 IN (t1.c0)) AS REAL), (((CAST(t1.c0 AS INTEGER)))<(((t1.c0 IN ())))), CASE WHEN '630843662' THEN (~ (t1.c16)) END HAVING t1.c16 ORDER BY COALESCE(DISTINCT CAST(t1.c0 AS NUMERIC), (NOT ('2002163808')), CAST(t1.c65 AS TEXT), CASE WHEN t1.c0 THEN t1.c16 END) ASC  NULLS FIRST; -- 0ms;
SELECT ((((TOTAL(t1.c0))AND(t1.c16)))AND(NULL)), HEX((((t1.c65)) BETWEEN ((t1.c16)) AND ((t1.c65)))), TOTAL(CAST(t1.c65 AS INTEGER)) OVER () FROM t1 WHERE (((((0.3873184529574344)/(1)))IS(0.31801665030925963 COLLATE BINARY))) GROUP BY CAST(-1145750206 COLLATE NOCASE AS TEXT), ((NOT (t1.c0)) IN ()), CASE WHEN (~ (t1.c65)) THEN (t1.c0 IN ()) WHEN CAST(t1.c16 AS TEXT) THEN t1.c0 WHEN t1.c0 THEN CAST(t1.c0 AS REAL) ELSE CAST(t1.c16 AS BLOB) END HAVING ((((2.005291232E9)LIKE(t1.c16))) NOT BETWEEN (((((t1.c0)OR(t1.c16)))OR(t1.c16))) AND (0xd3a6138)); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT t1.c16) COLLATE NOCASE COLLATE NOCASE FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c16)) BETWEEN ((t1.c65)) AND ((t1.c65))))>(((((t1.c65)OR(NULL)))OR(t1.c65)))) FROM t1; -- 3ms;
SELECT MAX((t1.c0 IN (t1.c65))) FROM t1 WHERE ((CAST('2078447471' AS TEXT) IN ())) LIMIT 1233805319 OFFSET -1900437998; -- 0ms;
SELECT (NOT (t1.c0)) FROM t1 NOT INDEXED WHERE (CASE ((0.7654454628002156) ISNULL)  WHEN ((x'')<>(x'')) THEN '' ELSE (('<v.j}84|꺖')AND(NULL)) END) GROUP BY t1.c0, CASE (((t1.c16, t1.c65, t1.c16)) NOT BETWEEN ((t1.c16, t1.c0, t1.c0)) AND ((t1.c65, t1.c65, t1.c0)))  WHEN t1.c65 COLLATE RTRIM THEN ((t1.c16)<<(t1.c16)) END, CASE WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c16 THEN t1.c0 WHEN t1.c65 THEN t1.c0 ELSE t1.c0 END THEN ((969636051) BETWEEN (t1.c16) AND (t1.c65)) WHEN CAST(t1.c65 AS TEXT) THEN ((t1.c65) BETWEEN (t1.c0) AND (t1.c65)) WHEN ((((((((t1.c0)AND(t1.c65)))AND(t1.c0)))OR(x'')))AND(t1.c0)) THEN (- (t1.c65)) ELSE ((((((((t1.c16)AND(NULL)))AND(t1.c0)))AND(t1.c16)))AND(t1.c0)) END; -- 1ms;
SELECT DISTINCT ((CASE WHEN NULL THEN t1.c16 ELSE t1.c65 END) IS FALSE), CAST(((t1.c0)GLOB(t1.c0)) AS TEXT), ((t1.c16 COLLATE NOCASE)LIKE(t1.c16 COLLATE RTRIM)) FROM t1 WHERE (-1399584298 COLLATE NOCASE) LIMIT 1624196688 OFFSET -1710917251; -- 0ms;
SELECT DISTINCT CASE (((t1.c16)) BETWEEN ((t1.c65)) AND ((t1.c0)))  WHEN '\nqb' THEN ((t1.c65)>=(t1.c65)) END FROM t1; -- 0ms;
SELECT ALL t1.c65 FROM t1; -- 0ms;
SELECT GROUP_CONCAT(CASE t1.c0  WHEN t1.c16 THEN t1.c0 ELSE -1370848629 END), t1.c0, x'' FROM t1 WHERE ((NOT (CAST(-8.1822819E8 AS REAL)))); -- 0ms;
SELECT ((((((NULL))>((t1.c0)))))>((CAST(t1.c65 AS NUMERIC)))) FROM t1; -- 0ms;
SELECT ALL (~ (((t1.c0)OR(t1.c16)))) FROM t1; -- 0ms;
SELECT (((t1.c65 IN (t1.c16, t1.c0))) ISNULL), CAST(((t1.c0)IS NOT(t1.c16)) AS INTEGER), (((((t1.c0 IN ()))OR(((t1.c65) BETWEEN (t1.c65) AND (t1.c16)))))AND(((((t1.c65)AND(t1.c65)))AND(t1.c16)))) FROM t1 WHERE ((((CAST(x'32e5' AS BLOB)))=((((0.4795779328261963) NOT BETWEEN ('2005291232') AND ('FALSE')))))) ORDER BY ((((((t1.c16)||(t1.c16)))AND(NULL)))AND(((t1.c0)|(t1.c0)))), 960024636 DESC;SELECT 1 COLLATE BINARY FROM t1; -- 0ms;
SELECT ALL ((((t1.c0) BETWEEN (t1.c65) AND (t1.c0))) BETWEEN (CAST(t1.c16 AS NUMERIC)) AND (t1.c65)) FROM t1; -- 0ms;
SELECT DISTINCT '', (NOT (((t1.c16) NOT BETWEEN (t1.c65) AND (t1.c16)))), CAST(((t1.c16)&(t1.c0)) AS TEXT), ((json_valid(NULL))<<(((((((((t1.c65)OR(t1.c65)))OR(t1.c0)))AND(t1.c0)))OR(t1.c16)))), (+ (t1.c0)) FROM t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t1.c0 THEN t1.c65 END) OVER () FROM t1; -- 0ms;
SELECT DISTINCT LOWER((t1.c65 IN (t1.c0, t1.c65))) FROM t1 WHERE ((((('ilC|7O\zi')>>(''))) BETWEEN ((+ (''))) AND (((((x'')OR('679727396')))AND(-1.335782931E9))))) GROUP BY (((((t1.c65)IS(t1.c65)), ((t1.c65) IS FALSE), ((t1.c65) NOT BETWEEN (t1.c16) AND (t1.c65)), t1.c0, CAST(t1.c65 AS BLOB)))<=((((NULL)!=(t1.c16)), (- (t1.c16)), (+ ('-1815886033')), (((t1.c16, t1.c16, t1.c0, t1.c0, t1.c16))<=((t1.c0, t1.c16, -70633144, t1.c65, t1.c0))), ((t1.c16)GLOB(t1.c16))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(x''), CASE WHEN (t1.c0 IN ()) THEN ((t1.c65)IS(t1.c0)) WHEN ((((t1.c0)OR(t1.c16)))AND(t1.c0)) THEN CAST(t1.c65 AS REAL) WHEN (((t1.c0))!=((t1.c65))) THEN ((t1.c16) BETWEEN (0.6480463258520522) AND (t1.c16)) ELSE t1.c16 END, ABS(DISTINCT ((t1.c16) NOT BETWEEN (t1.c16) AND (t1.c65))) FROM t1; -- 0ms;
SELECT DISTINCT t1.c16, (((t1.c0) NOT BETWEEN (t1.c16) AND (t1.c65)) IN ()), CASE CASE t1.c0  WHEN t1.c0 THEN t1.c65 ELSE t1.c0 END  WHEN (NOT (t1.c0)) THEN ((t1.c65) IS TRUE) ELSE (+ (t1.c65)) END FROM t1 WHERE ((- (((((((((NULL)OR('1088484032')))OR(x'')))OR(x'')))AND(8.28799089E8))))); -- 0ms;
SELECT DISTINCT NULL, t1.c16, DENSE_RANK() OVER ( RANGE BETWEEN  CURRENT ROW AND ((t1.c16) BETWEEN (json_insert(t1.c0, t1.c16, t1.c16)) AND (((t1.c0) NOT BETWEEN ('130944924') AND (NULL)))) PRECEDING EXCLUDE CURRENT ROW) FROM t1 WHERE ((~ ((('630843662')GLOB(0.42523250212596775)))));SELECT DISTINCT CAST(MAX(t1.c16) AS REAL), (((('2002163808')OR(t1.c16)))OR(t1.c16)) COLLATE RTRIM, (((~ (t1.c65))) BETWEEN (UNLIKELY(DISTINCT '')) AND (((t1.c16)&(t1.c16)))), ((((t1.c0)GLOB(0.7916132025259796)))>=((((t1.c16, t1.c16, t1.c65)) NOT BETWEEN ((t1.c0, t1.c65, t1.c0)) AND ((t1.c65, t1.c0, t1.c16))))), ((((CAST(t1.c16 AS REAL))AND(((((t1.c0)OR(t1.c65)))AND(t1.c0)))))AND(SUM(t1.c0))) FROM t1; -- 0ms;
SELECT DISTINCT t1.c65, (t1.c65 COLLATE NOCASE IN ()), ((((t1.c0)>>(t1.c0))) BETWEEN ((((-223613172, t1.c65, t1.c16)) BETWEEN ((t1.c65, t1.c16, '-1649233682')) AND ((t1.c16, t1.c16, t1.c16)))) AND (CAST(t1.c65 AS TEXT))) FROM t1 WHERE ((((((((((((0.233386252390424, -538260184, x''))>=(('Qz)TE헭_,', '1809559375', '-1072885343'))))AND(((NULL) NOT NULL))))AND(((2067606028) NOT BETWEEN (0.9988768458104422) AND ('-1802687666')))))AND((((NULL, NULL, '0NT[F撴as)')) NOT BETWEEN (('l1XHkn x4', 0.1503273425363718, 0.7402810233344104)) AND ((x'', '', '1525962446'))))))AND(((((0.741501369761918)OR(NULL)))OR('#u'))))); -- 1ms;
SELECT TOTAL(CAST(t1.c16 AS NUMERIC)) OVER () FROM t1 WHERE (CAST(((NULL) NOT BETWEEN (NULL) AND (NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT '[]' FROM t1 WHERE ((((x'61dfd2af' IN ())) BETWEEN ((NULL IN ('ᐶ,w挮N '))) AND (((x'')==(x'80306435'))))); -- 1ms;
SELECT ((((t1.c16) BETWEEN (t1.c16) AND (t1.c16))) IS FALSE) FROM t1 WHERE (CASE WHEN (('죝')%(x'')) THEN json_array(0.3205109447348379, 'm''d.i n') WHEN CAST(874983535 AS INTEGER) THEN UNLIKELY('1786304375') WHEN ((0.7293084042613263) NOTNULL) THEN (('0.11087546150742422') IS FALSE) ELSE ((NULL) NOT BETWEEN (x'') AND (0.8277126341476224)) END); -- 0ms;
SELECT ((t1.c65)LIKE(t1.c16)) COLLATE RTRIM FROM t1 WHERE (((('|', -2126914590, NULL))==(('', 0.7944838584915472, x''))) COLLATE BINARY); -- 0ms;
SELECT CAST(-146504935 AS TEXT) COLLATE NOCASE, 'gD', x'' FROM t1 GROUP BY (+ (((t1.c0) ISNULL))); -- 0ms;
SELECT (((((t1.c65))>=((t1.c65)))) BETWEEN (TOTAL(t1.c65)) AND ('835559164')) FROM t1 WHERE (((((CASE ''  WHEN x'' THEN ',' WHEN -1.335782931E9 THEN '630843662' WHEN '' THEN NULL END)AND(NULL COLLATE NOCASE)))AND((('-617795765')<(0.36088986215331176))))); -- 0ms;
SELECT DISTINCT TRIM(((((((((t1.c16)OR(t1.c0)))AND(t1.c16)))OR(t1.c16)))OR(t1.c65)), ((t1.c16)&(t1.c16))), FIRST_VALUE((((t1.c65 IN ())) ISNULL)) OVER (), MIN((('98')*(t1.c0))) FROM t1; -- 0ms;
SELECT ALL NULL, COUNT((t1.c65 IN ())), (((((t1.c65)) BETWEEN ((t1.c0)) AND ((t1.c16)))) NOT BETWEEN (((((((((t1.c65)AND(t1.c65)))OR(t1.c65)))OR(t1.c0)))OR(t1.c0))) AND ((t1.c16 IN ()))) FROM t1 WHERE (CAST(((NULL)-('2074987511')) AS TEXT)) LIMIT 862491276 OFFSET -1933795784; -- 0ms;
SELECT DISTINCT ((((((0.8109728832105295)OR(t1.c65)))AND(NULL))) NOT BETWEEN (((t1.c0)|(NULL))) AND (json_insert(t1.c0, t1.c0, t1.c16))) FROM t1 LIMIT -1573687172;SELECT DISTINCT ((((((t1.c16)OR(t1.c0)))OR(t1.c0)))-(t1.c0)) FROM t1 WHERE (CAST(x'' AS TEXT)); -- 0ms;
SELECT ALL CAST(t1.c0 AS NUMERIC), ((((t1.c65)||(t1.c65))) NOT BETWEEN (CASE t1.c0  WHEN t1.c65 THEN '-1823269365' END) AND (t1.c16 COLLATE RTRIM)), ((((((((((t1.c0) NOTNULL))AND(CASE -1335856564  WHEN t1.c0 THEN t1.c16 END)))AND(((t1.c65) ISNULL))))OR(((x'') NOT BETWEEN (t1.c65) AND (t1.c16)))))OR(NULL)) FROM t1 WHERE ((((NULL, 'f^^,', '?5'))==((NULL, NULL, 0.590482254783386))) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT ALL (+ (t1.c16)) FROM t1 WHERE (rtreenode((((0.23411118653474672)) BETWEEN (('')) AND ((NULL))), '9')); -- 0ms;
SELECT ALL (CAST(t1.c65 AS INTEGER) IN ()), (((0.0454816215531747)) NOT BETWEEN ((0x303fb9a9)) AND ((((((t1.c16)OR(t1.c0)))OR(t1.c16))))), t1.c65 FROM t1 WHERE (((((1.877875636E9) BETWEEN (0.16234850068763573) AND ('1266208880')))AND(CAST('vV' AS NUMERIC)))) LIMIT 2018615470 OFFSET 1146884610; -- 0ms;
SELECT DISTINCT TRIM((((t1.c65))=((t1.c16)))) FROM t1 WHERE (((SQLITE_COMPILEOPTION_USED(0x1d0d95b6))!=((((x'839f')) BETWEEN ((NULL)) AND (('Z7^oZX懕(')))))); -- 0ms;
SELECT DISTINCT CASE WHEN LOWER(x'') THEN (((t1.c65, 0.7808064826280974, t1.c65)) BETWEEN ((t1.c16, 0x23cd477, t1.c16)) AND ((0.9026712197359071, t1.c16, t1.c65))) WHEN (t1.c0 IN (t1.c65)) THEN t1.c16 WHEN ((t1.c65) BETWEEN (t1.c0) AND (t1.c0)) THEN SUM(t1.c16) ELSE (((t1.c65)) NOT BETWEEN ((x'')) AND ((t1.c0))) END FROM t1; -- 0ms;
SELECT DISTINCT LAG(((((-8.82839916E8)+(x'')))-((NOT (t1.c65)))), ((t1.c16 COLLATE BINARY)/(((t1.c65) NOT BETWEEN (t1.c65) AND (t1.c0)))), (- (json_insert(t1.c16, t1.c65, t1.c65)))) OVER () FROM t1 ORDER BY load_extension(((((t1.c0)AND(t1.c16)))OR(t1.c65)), ((0.43546528565754516)=(t1.c16))) LIMIT 1606183495 OFFSET -665874202;SELECT ALL (((NOT (t1.c65)))OR(((t1.c16)||(t1.c65)))), (((NULL, t1.c65, t1.c65)) BETWEEN ((CASE NULL  WHEN t1.c16 THEN t1.c0 END, ((((((((((((1606183495)OR(t1.c65)))OR(0.6637093105191043)))AND(x'')))AND(0.5929663529384523)))OR(t1.c16)))OR(t1.c0)), CAST(t1.c65 AS NUMERIC))) AND ((HEX(DISTINCT t1.c65), (((t1.c16, t1.c0, t1.c16))<>(('1223132606', t1.c0, t1.c65))), (((t1.c0, t1.c16, t1.c16))<((t1.c0, t1.c16, t1.c16)))))), (- (MAX(t1.c65))) FROM t1 GROUP BY CAST(t1.c65 AS TEXT) COLLATE BINARY; -- 0ms;
SELECT ALL (~ (((t1.c16)|(t1.c65)))) FROM t1 WHERE (((LTRIM(x'', '-175864462'))==((((0X2ba06f86)) NOT BETWEEN (('1591395310')) AND ((0.778467535926917)))))); -- 0ms;
SELECT 'Bࠞk윬[덤A<' FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c0 COLLATE NOCASE)OR(AVG(t1.c16))))OR(CASE ''  WHEN t1.c16 THEN t1.c0 END)) FROM t1; -- 0ms;
SELECT LIKELY(HEX(DISTINCT t1.c65)) FROM t1 WHERE ((((('-945140628')OR('951734431')))%(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((((t1.c65 IN ()))OR(((t1.c0)AND(t1.c0)))))AND(((t1.c16) BETWEEN (0.4001209520312645) AND (t1.c65)))) FROM t1 WHERE ((((((NOT ('')))OR(ABS(DISTINCT 'Cȴ'))))OR(((NULL)<<(0.5643810662141807))))); -- 0ms;
SELECT DISTINCT CASE ((t1.c65)OR(t1.c65))  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (+ (t1.c65)) WHEN ((t1.c0)IS(t1.c65)) THEN ((t1.c65) NOTNULL) WHEN t1.c0 THEN ((t1.c65) ISNULL) ELSE ((t1.c0)<(t1.c0)) END FROM t1; -- 0ms;
SELECT CASE CASE WHEN t1.c0 THEN NULL WHEN t1.c16 THEN t1.c0 WHEN t1.c16 THEN t1.c0 END  WHEN t1.c0 COLLATE NOCASE THEN MIN(t1.c0) WHEN (((t1.c65)) BETWEEN ((t1.c16)) AND ((t1.c65))) THEN MIN(0Xffffffffd0142580) WHEN ((0.37775109058466994)=(t1.c65)) THEN SUBSTR(t1.c0, t1.c0) ELSE (~ (0xffffffff96d11282)) END FROM t1 GROUP BY (((t1.c0)) BETWEEN (((t1.c16 IN ()))) AND ((((((t1.c16)AND(t1.c0)))OR(NULL))))) HAVING t1.c0; -- 0ms;
SELECT ALL GROUP_CONCAT((NOT ('죝'))) OVER ( ORDER BY CAST(((t1.c65)-(t1.c65)) AS BLOB) DESC  NULLS FIRST, t1.c65 DESC, (((((t1.c0, t1.c65, t1.c0))!=((NULL, t1.c16, t1.c0))))&((- (t1.c0))))), NULL, ((((t1.c0)OR(((t1.c16)AND(t1.c0)))))OR((((t1.c65, t1.c16, t1.c16)) BETWEEN ((t1.c65, t1.c65, t1.c16)) AND ((t1.c65, t1.c65, t1.c16))))), (((t1.c16, t1.c16, t1.c0)) NOT BETWEEN (((t1.c16 IN ()), ((t1.c16) IS TRUE), ((t1.c16) NOTNULL))) AND ((t1.c65 COLLATE NOCASE, t1.c16, CASE t1.c65  WHEN t1.c16 THEN t1.c16 END))), CASE WHEN ((t1.c16) NOT BETWEEN (t1.c16) AND (t1.c0)) THEN CAST(t1.c65 AS BLOB) ELSE ((t1.c65) IS TRUE) END FROM t1 WHERE ((+ ('0.4999729810036154'))) EXCEPT SELECT DISTINCT NULLIF(((t1.c16) NOT BETWEEN (NULL) AND (t1.c65)), ((t1.c16)AND(NULL))), NULLIF(DISTINCT ((t1.c16)GLOB(t1.c65)), (+ (NULL))), t1.c16, CASE ((((t1.c0)AND(t1.c65)))AND(t1.c65))  WHEN (('-223613172')|(0.050054082680397016)) THEN CASE WHEN t1.c65 THEN t1.c65 END WHEN t1.c16 COLLATE NOCASE THEN ((t1.c65)IS NOT(t1.c0)) WHEN t1.c16 THEN json_array_length(t1.c16) END, (t1.c65 IN (t1.c65, t1.c0)) COLLATE BINARY FROM t1; -- 1ms;
SELECT CASE WHEN ((x'') NOT BETWEEN (t1.c16) AND (t1.c65)) THEN CASE WHEN t1.c65 THEN t1.c0 WHEN '' THEN t1.c65 WHEN t1.c16 THEN t1.c0 END ELSE CAST(t1.c16 AS REAL) END FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c65)*('1129928173')) IN (((t1.c65) IS FALSE), t1.c0 COLLATE NOCASE)) FROM t1 WHERE (((-1.694348928E9 COLLATE BINARY)IS NOT(((0.13969936994665733) BETWEEN (1017486924) AND (x''))))); -- 0ms;
SELECT DISTINCT ((TOTAL(t1.c16))&((((t1.c16))<((t1.c65))))) FROM t1 WHERE ('>?Y'); -- 0ms;
SELECT ALL NTILE(((((t1.c65) NOTNULL)) NOT BETWEEN (CAST(t1.c16 AS REAL)) AND (t1.c16 COLLATE BINARY))) OVER (), NULL, ((((t1.c65)LIKE(t1.c65))) BETWEEN (((t1.c16)&(NULL))) AND (t1.c0)) FROM t1 WHERE (('-826593844' IN ()) COLLATE NOCASE) ORDER BY (CASE t1.c0  WHEN t1.c65 THEN NULL WHEN t1.c16 THEN t1.c0 WHEN t1.c65 THEN t1.c16 ELSE t1.c0 END IN ()) ASC, CAST(TYPEOF(t1.c65) AS BLOB) ASC, (((t1.c0, t1.c65, t1.c0)) NOT BETWEEN ((CAST(t1.c16 AS TEXT), ((t1.c0)||(t1.c0)), (t1.c16 IN ()))) AND ((((((t1.c0)OR(t1.c0)))AND(t1.c0)), (~ (t1.c65)), (NOT (t1.c65))))) ASC; -- 0ms;
SELECT ALL (((((t1.c0 IN ()))AND(x'')))AND(CAST(t1.c65 AS NUMERIC))) FROM t1; -- 1ms;
SELECT DISTINCT (((t1.c65, t1.c16, t1.c16)) NOT BETWEEN ((CAST(t1.c65 AS BLOB), ((1.214942689E9)=(t1.c0)), CASE t1.c0  WHEN t1.c16 THEN t1.c65 END)) AND ((((((t1.c16)OR(t1.c0)))OR(t1.c0)), ((t1.c65)<(t1.c16)), (+ (t1.c16))))) FROM t1 WHERE (ABS((NOT ('4_y>௼ꊟhf')))); -- 0ms;
SELECT DISTINCT AVG(t1.c16) FROM t1; -- 0ms;
SELECT ((CAST(t1.c16 AS REAL))GLOB(CASE WHEN t1.c0 THEN t1.c65 WHEN t1.c16 THEN t1.c65 WHEN t1.c0 THEN 0.5036405158495197 ELSE t1.c16 END)) FROM t1 WHERE (UPPER(((NULL) BETWEEN (x'') AND (x'f65f')))); -- 0ms;
SELECT ALL TRIM((- (t1.c65)), (((t1.c65)) BETWEEN ((t1.c0)) AND ((t1.c65)))) FROM t1 GROUP BY CAST((- (t1.c0)) AS NUMERIC) HAVING ((((t1.c65 COLLATE BINARY)OR(((t1.c16) IS FALSE))))OR(GROUP_CONCAT(t1.c0))); -- 0ms;
SELECT DISTINCT CASE (((t1.c16, t1.c0, t1.c0))!=((t1.c16, t1.c0, t1.c16)))  WHEN ((0x5d02be39) NOT BETWEEN (t1.c65) AND (t1.c0)) THEN MIN(0.6537965724636385) END FROM t1 WHERE ((~ (((0x45f80686) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((t1.c65 IN ()))<>((t1.c65 IN (t1.c0)))) FROM t1 WHERE ((((x'849c')<>(x'')) IN ())) LIMIT -63635401; -- 0ms;
SELECT DISTINCT '-693791996' FROM t1; -- 0ms;
SELECT CASE WHEN ((t1.c0)<(t1.c0)) THEN (((t1.c16))>((t1.c16))) WHEN CAST(t1.c0 AS TEXT) THEN t1.c16 WHEN (('vx') BETWEEN ('M>h[F/') AND (t1.c16)) THEN ((t1.c16)IS NOT(t1.c0)) WHEN (- (t1.c0)) THEN ((((t1.c65)OR(t1.c16)))OR('-2099281206')) WHEN t1.c0 COLLATE RTRIM THEN ((t1.c0)IS NOT(t1.c0)) ELSE (~ (t1.c65)) END FROM t1 WHERE (((HEX(DISTINCT 0x14e69d47))>(((' ]')LIKE(NULL))))) LIMIT 353546732 OFFSET 1348960583; -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(t1.c0, 0.5404331321208387)) BETWEEN (TOTAL(t1.c16)) AND (x'f51e' COLLATE BINARY)) FROM t1 WHERE (((0X34a3bfe3) NOT BETWEEN (NULL) AND ('9')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), '-2029263142', ((((((((((t1.c65)AND(t1.c65)))AND(t1.c16)))OR(t1.c16)))AND(t1.c16)))<>(((t1.c16) BETWEEN (t1.c65) AND (t1.c16)))) FROM t1 WHERE (CAST('-0' AS NUMERIC) COLLATE NOCASE); -- 1ms;
SELECT ALL CASE CASE WHEN t1.c65 THEN t1.c65 WHEN t1.c16 THEN t1.c16 WHEN x'' THEN t1.c0 END  WHEN CAST(t1.c65 AS REAL) THEN ((t1.c0)AND(t1.c0)) ELSE ((((((((t1.c0)AND(t1.c16)))AND(t1.c0)))OR(t1.c16)))AND(t1.c0)) END FROM t1; -- 0ms;
SELECT ALL (~ (LIKELIHOOD(DISTINCT t1.c65, 0.9506434754061811))) FROM t1; -- 0ms;
SELECT ALL t1.c16 FROM t1 GROUP BY CASE WHEN ((t1.c16) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN CASE t1.c0  WHEN t1.c65 THEN t1.c0 END ELSE TRIM(DISTINCT t1.c16, x'') END; -- 0ms;
SELECT t1.c65 FROM t1; -- 0ms;
SELECT ALL (((((t1.c0) NOTNULL)))<((((t1.c16)>(t1.c65))))) FROM t1 WHERE ((('')IS NOT('-498165317')) COLLATE NOCASE); -- 0ms;
SELECT 0.5021921455851611 FROM t1; -- 0ms;
SELECT ((TOTAL(t1.c16)) BETWEEN ((~ (t1.c65))) AND (AVG(t1.c65))), 0.30167291933997686, x'' FROM t1; -- 0ms;
SELECT (- (((t1.c0)=(t1.c16)))), t1.c0, ((((t1.c0) NOT BETWEEN (t1.c65) AND (t1.c16)))IS NOT(COUNT(*))) FROM t1; -- 0ms;
SELECT ALL CAST(NULL AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT ((NULL)>(((t1.c16)+(t1.c0)))) FROM t1 GROUP BY CASE CAST(t1.c65 AS REAL)  WHEN ((t1.c0) NOTNULL) THEN ((t1.c16) IS FALSE) ELSE (NOT (t1.c16)) END, ((((CAST(t1.c0 AS REAL))OR(CAST(t1.c16 AS NUMERIC))))OR(NULL)), 0.2849827534405983 HAVING TYPEOF(((t1.c16) NOT BETWEEN (t1.c16) AND (NULL))); -- 0ms;
SELECT DISTINCT ROUND(((t1.c0)%(t1.c16)), CASE WHEN t1.c65 THEN t1.c16 ELSE 0.9173473824380919 END) FROM t1 WHERE (('R/' IN ())) LIMIT 616746223 OFFSET 1503319482; -- 0ms;
SELECT DISTINCT CASE x''  WHEN 'B㇗▦p6' THEN CASE t1.c16  WHEN t1.c16 THEN t1.c16 ELSE t1.c65 END ELSE t1.c16 END FROM t1; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t1.c16 THEN t1.c0 ELSE t1.c16 END AS NUMERIC) FROM t1; -- 0ms;
SELECT ((((0xffffffff8ee8811c)>(t1.c0))) NOT BETWEEN (CASE t1.c0  WHEN t1.c16 THEN t1.c0 ELSE t1.c16 END) AND ((((0.8816235000613012)) NOT BETWEEN ((t1.c16)) AND ((t1.c16))))) FROM t1 WHERE (CAST((~ ('-1840435856')) AS NUMERIC)) GROUP BY (((((t1.c0)&('191271907'))))<=((((t1.c65)>(t1.c65))))) HAVING CASE CASE t1.c16  WHEN t1.c65 THEN t1.c16 END  WHEN ((t1.c16)<=(t1.c16)) THEN ((t1.c0) ISNULL) WHEN CAST(t1.c16 AS NUMERIC) THEN (t1.c16 IN ()) WHEN json_object(t1.c65, t1.c16) THEN IFNULL(t1.c0, -1.145750206E9) END;SELECT DISTINCT (((t1.c65) BETWEEN (t1.c65) AND (t1.c16)) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT AVG(((t1.c65) IS FALSE)), SUM(ABS(t1.c16)) OVER (), (((UNLIKELY(t1.c0)))>=((((t1.c16)!=(t1.c0))))) FROM t1 WHERE (NULL); -- 2ms;
SELECT ((((t1.c0) NOT NULL)) BETWEEN (t1.c0 COLLATE BINARY) AND (((t1.c65) NOTNULL))) FROM t1 ORDER BY (- (((((t1.c16)OR(t1.c0)))OR(t1.c16))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1; -- 1ms;
SELECT DISTINCT (- (t1.c65 COLLATE RTRIM)), (((- (t1.c0))) IS FALSE), ((((x'') NOT BETWEEN (t1.c0) AND (t1.c0)))<(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c16 THEN t1.c16 WHEN t1.c0 THEN t1.c65 END)) FROM t1 WHERE (CASE WHEN (- (0.3029519620072417)) THEN LIKELIHOOD(DISTINCT '*7NcVD5*', 0.0376447092936506) ELSE 0.3029519620072417 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT CASE ((((((((t1.c65)OR(t1.c0)))OR(t1.c65)))OR(t1.c65)))OR(t1.c16))  WHEN CASE t1.c16  WHEN t1.c16 THEN t1.c16 WHEN t1.c16 THEN t1.c65 WHEN t1.c65 THEN t1.c0 END THEN t1.c0 COLLATE BINARY WHEN ((t1.c0)>=(t1.c0)) THEN ((((((((t1.c65)AND(t1.c16)))AND(t1.c65)))OR(t1.c65)))AND(t1.c0)) WHEN (+ (t1.c16)) THEN (t1.c65 IN ()) ELSE SQLITE_SOURCE_ID() END FROM t1 WHERE (((((NULL)LIKE('-956837296')))>(((NULL)!=(x''))))); -- 0ms;
SELECT DISTINCT '-677405003' FROM t1 WHERE (CAST(('0.23788837553309272' IN ()) AS TEXT)); -- 0ms;
SELECT ALL t1.c0 FROM t1; -- 0ms;
SELECT DISTINCT (~ ((((t1.c16, t1.c16, t1.c65))<=((t1.c0, t1.c0, t1.c16))))) FROM t1 WHERE (COALESCE(0.715336544238801, 0Xffffffffb7ece6a1) COLLATE BINARY); -- 0ms;
SELECT (((t1.c16 IN ())) ISNULL) FROM t1; -- 0ms;
SELECT DISTINCT UNICODE(CAST(t1.c16 AS INTEGER)) FROM t1; -- 0ms;
SELECT DISTINCT t1.c65 FROM t1 WHERE (IFNULL(DISTINCT (+ (1226626011)), ('vxztXl댇S' IN (0.5619730210961158)))); -- 0ms;
SELECT DISTINCT CAST((NOT (t1.c16)) AS INTEGER) FROM t1; -- 0ms;
SELECT CAST(((('0.37775109058466994')) BETWEEN ((t1.c65)) AND ((t1.c16))) AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT t1.c65, LEAD(HEX(DISTINCT ('-1769678781' IN ())), ((CAST(t1.c0 AS TEXT))<(CASE WHEN t1.c16 THEN t1.c0 ELSE '<v.j}84|꺖' END)), t1.c65) OVER (), ((GROUP_CONCAT(t1.c65))&(t1.c65)) FROM t1 WHERE ((((((('')OR(NULL)))OR('-617795765')))-((((1595912501, '-2029263142', NULL)) NOT BETWEEN ((NULL, x'', NULL)) AND ((0.5795523048555307, '-1634693429', -1926076936)))))) ORDER BY ((((((((t1.c16)AND(t1.c16)))AND(t1.c16)))AND((+ (t1.c65)))))AND(((t1.c65) BETWEEN (t1.c16) AND (t1.c65))))  NULLS FIRST LIMIT 1703911079 OFFSET 1425478036; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT 0.01974594136955299, t1.c16) COLLATE NOCASE FROM t1 WHERE ((((('zi') NOT BETWEEN ('233486580') AND (x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((t1.c16) IS TRUE)))<(((((t1.c0)) BETWEEN ((t1.c65)) AND ((t1.c0)))))) FROM t1; -- 0ms;
SELECT DISTINCT (0.11087546150742422 IN (((t1.c65) BETWEEN (t1.c65) AND (t1.c0)))), (~ ((~ (t1.c0)))), ((CAST(t1.c16 AS INTEGER)) NOT BETWEEN (((t1.c16)GLOB(t1.c16))) AND ((- (0.7031255248562344)))), CAST(HEX(t1.c65) AS INTEGER), ((0X41a89219)<<(t1.c0)) COLLATE BINARY COLLATE NOCASE FROM t1; -- 0ms;
SELECT DISTINCT ((((CAST(t1.c0 AS INTEGER))OR((0xffffffff82ae940a IN ()))))OR(UPPER(DISTINCT t1.c65))) FROM t1 GROUP BY 0.7847964678444794 HAVING 0X7be2976f; -- 0ms;
SELECT DISTINCT x'' FROM t1 WHERE (((((x'3980f2e5'))>=((''))) IN (((((((((x'')OR(x'')))AND('0.17956804063845422')))OR(NULL)))OR('0.5019684638259538'))))) GROUP BY (((t1.c16)) NOT BETWEEN ((0.8200774279352276)) AND ((((t1.c65)%(t1.c16))))), (((CASE WHEN t1.c16 THEN t1.c0 WHEN t1.c65 THEN t1.c65 WHEN t1.c0 THEN t1.c65 WHEN t1.c0 THEN t1.c16 WHEN t1.c16 THEN t1.c0 END, ((t1.c16) BETWEEN (0.9749557195107922) AND (t1.c0)), ((t1.c0)=(x''))))=(((((t1.c0))<((t1.c16))), CASE t1.c65  WHEN t1.c16 THEN t1.c16 END, ((((t1.c65)OR(0.8209347859664576)))OR(t1.c65))))), '-175864462'; -- 0ms;
SELECT ALL (CAST(t1.c0 AS TEXT) IN ()) FROM t1 WHERE ((((('0.9265580270945243')&(0.23548112109239694))) NOT BETWEEN (((0.3622545421494613)+('1581363483'))) AND (((NULL)%(-1.46880999E9))))) LIMIT -2061537990; -- 1ms;
SELECT DISTINCT 1410171524, CASE ((t1.c65) NOTNULL)  WHEN ((((((((t1.c16)AND(t1.c0)))AND(t1.c0)))OR(t1.c65)))AND(t1.c65)) THEN CASE t1.c0  WHEN t1.c65 THEN t1.c16 ELSE 0.5170854124849452 END WHEN ((((((((t1.c65)AND(NULL)))OR(t1.c16)))OR(t1.c65)))OR(t1.c16)) THEN 0Xa4ef9c9 WHEN (NOT (t1.c65)) THEN (~ (t1.c16)) END, (((t1.c0)) NOT BETWEEN ((t1.c16 COLLATE RTRIM)) AND (((- (t1.c0))))) FROM t1; -- 0ms;
SELECT DISTINCT (CASE WHEN NULL THEN t1.c65 ELSE t1.c0 END IN ()) FROM t1 WHERE (((CAST('-617795765' AS NUMERIC))IS NOT(((0.856228052434187)/(x''))))); -- 0ms;
SELECT ALL RTRIM(CAST(t1.c0 AS NUMERIC)) FROM t1; -- 0ms;
SELECT DISTINCT UNICODE(0.6166703890073229), (('c9szwf')<('')), ROW_NUMBER() OVER ( ORDER BY (((((t1.c0)AND(t1.c0)))AND(t1.c65)) IN ())) FROM t1 WHERE (((((((((CAST(x'' AS TEXT))AND(CAST('d0p' AS INTEGER))))OR(((1518679949)+(0.8414985250002209)))))AND(CAST('0.7634105022541378' AS NUMERIC))))OR(8.28799089E8))); -- 0ms;
SELECT DISTINCT (~ (t1.c65)) FROM t1 WHERE ((+ (0.1772926454234942)) COLLATE BINARY); -- 0ms;
SELECT (('') BETWEEN (AVG(t1.c65)) AND ((((t1.c0)) BETWEEN ((t1.c16)) AND ((t1.c0))))) FROM t1 WHERE (((((('o,X')>('-1058493587'))))>(((- (0.3300128351784871)))))) UNION ALL SELECT ALL (((t1.c65)) BETWEEN ((t1.c65)) AND ((((t1.c16) NOT NULL)))) FROM t1 WHERE (UPPER(DISTINCT ((NULL)|(x'')))) ORDER BY ((t1.c65) NOTNULL) COLLATE NOCASE ASC;SELECT (((t1.c16)) NOT BETWEEN ((CAST(t1.c65 AS REAL))) AND ((COUNT(*)))) FROM t1 WHERE ((('1157236259') NOT BETWEEN (NULL) AND (462629567)) COLLATE RTRIM) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c65))) NOT BETWEEN (((t1.c16) IS TRUE)) AND (NULL)), (((((t1.c65)) NOT BETWEEN ((t1.c16)) AND ((t1.c65)))) IS FALSE), (((TOTAL_CHANGES()))<((CASE t1.c16  WHEN t1.c0 THEN t1.c65 ELSE t1.c16 END))) ASC  NULLS LAST LIMIT -1225661464 OFFSET 1214942689; -- 0ms;
SELECT DISTINCT ((((((((((('1174935776')) BETWEEN ((t1.c65)) AND (('1425478036'))))AND(((t1.c0)>=(t1.c65)))))AND(((((t1.c0)OR(t1.c16)))OR(t1.c0)))))AND(((x'') IS FALSE))))OR(MIN(t1.c65))), TRIM(t1.c16) COLLATE RTRIM, SUM(t1.c16) OVER () FROM t1 WHERE (((CAST(0.7660732654831056 AS REAL)) BETWEEN (((6.50697039E8) NOT BETWEEN (0X5ce1e19c) AND (0X223c2bfa))) AND (((0.24286858540266842) NOTNULL)))); -- 0ms;
SELECT ALL ((((t1.c65)IS(t1.c16))) IS TRUE), (((((t1.c0)OR(t1.c16)))OR(x'')) IN ()), NTILE(CAST((((t1.c16)) NOT BETWEEN ((t1.c16)) AND ((t1.c0))) AS BLOB)) OVER ( ORDER BY 0.3162643119373203 DESC  NULLS LAST), ((t1.c16)>=(x'14bb')) COLLATE RTRIM, ('G_~#7i' IN ()) FROM t1 WHERE ((((-7.95045497E8)) NOT BETWEEN (((NOT (x'')))) AND ((((x'')<>(NULL))))));SELECT DISTINCT SQLITE_SOURCE_ID() FROM t1 WHERE (((x'')IS NOT('ⶃ,8v*Eq')) COLLATE BINARY) LIMIT -74829154 OFFSET 1129928173; -- 0ms;
SELECT ALL ('-882839916' IN ()), LEAD((('n')-((+ (t1.c0)))), ((((t1.c16) NOT BETWEEN (t1.c0) AND (t1.c16)))AND(CASE WHEN t1.c16 THEN t1.c65 END)), CAST((- (t1.c0)) AS NUMERIC)) OVER (), 'v%\rKh' FROM t1 WHERE (((CASE WHEN x'' THEN 0.2440396036328495 ELSE x'' END)||(CASE NULL  WHEN x'' THEN NULL ELSE NULL END))); -- 0ms;
SELECT ((CASE t1.c0  WHEN t1.c65 THEN t1.c16 WHEN t1.c0 THEN t1.c0 WHEN t1.c16 THEN t1.c65 END)|(t1.c0)) FROM t1 ORDER BY CAST(x'' AS REAL) DESC  NULLS FIRST, t1.c0, ((((t1.c0)IS(t1.c16)))<=(t1.c16)) ASC  NULLS LAST; -- 0ms;
SELECT ((((t1.c16)<=(t1.c16)))<>(((((((((((((t1.c0)AND(t1.c65)))OR(t1.c16)))OR(t1.c65)))OR(t1.c0)))OR(t1.c65)))AND(t1.c0)))) FROM t1; -- 0ms;
SELECT ALL (((t1.c16 COLLATE RTRIM))=((((t1.c65)<(t1.c16))))), (+ (CASE WHEN t1.c65 THEN t1.c0 ELSE t1.c16 END)), CAST(NULL AS NUMERIC) FROM t1 ORDER BY CASE WHEN t1.c0 THEN ((((t1.c16)AND(t1.c0)))AND(t1.c65)) ELSE t1.c65 COLLATE NOCASE END  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((((t1.c0)OR(t1.c16)))AND(t1.c65)))<=(1558307228)) FROM t1 WHERE (TYPEOF(DISTINCT (((x''))<(('}'))))) ORDER BY (((t1.c16)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((t1.c16) IS FALSE)) IS TRUE) FROM t1 LIMIT 607780164 OFFSET -693456422; -- 0ms;
SELECT ALL (((TRIM(DISTINCT t1.c65)))<((((t1.c16) NOT BETWEEN (t1.c16) AND (t1.c0))))), ((t1.c16)=(x'')), CAST(CAST(t1.c0 AS INTEGER) AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT t1.c16, PERCENT_RANK() OVER (), MAX(((((x'')OR(t1.c16)))OR(t1.c0))) FROM t1; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((((((('183382201'))=((x'')))))=((((0.32023771632284737) NOT BETWEEN (x'') AND (NULL)))))); -- 0ms;
SELECT DISTINCT IFNULL(t1.c16, t1.c0) COLLATE BINARY, COUNT((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c65)))), (((0.9608641743749238 IN ()))>>((NOT (t1.c65)))) FROM t1; -- 0ms;
SELECT (((((t1.c16))=((t1.c16))))>=(CAST(t1.c65 AS BLOB))), 0x2c8dce0e, (((t1.c0 IN (x'')))=(((t1.c0) IS FALSE))) FROM t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (+ (CASE t1.c16  WHEN t1.c65 THEN t1.c16 END)) FROM t1 WHERE (((('-1292272473') ISNULL) IN ())); -- 0ms;
SELECT DISTINCT '-815376444' FROM t1 WHERE (x'61e1') GROUP BY CAST(((t1.c0)-(t1.c65)) AS NUMERIC), CAST(t1.c65 COLLATE BINARY AS BLOB), (+ ((((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c16))))) HAVING ((((t1.c65) NOTNULL)) BETWEEN (((t1.c16) BETWEEN (t1.c16) AND (t1.c0))) AND (((t1.c0) BETWEEN (t1.c65) AND (t1.c0)))); -- 0ms;
SELECT '' FROM t1 WHERE ((+ (('-78654528' IN ())))); -- 0ms;
SELECT DISTINCT CASE WHEN t1.c0 COLLATE BINARY THEN ((t1.c16) ISNULL) END FROM t1 ORDER BY (((CASE WHEN t1.c0 THEN t1.c16 END, t1.c16, (((t1.c16))<=((t1.c65)))))<=((MIN(t1.c65, t1.c65), (t1.c16 IN (t1.c16)), (((t1.c16)) BETWEEN ((t1.c0)) AND ((t1.c16)))))) DESC  NULLS FIRST LIMIT 1167880690; -- 0ms;
SELECT DENSE_RANK() OVER () FROM t1 ORDER BY ((CASE WHEN t1.c16 THEN t1.c16 ELSE t1.c65 END)*((((t1.c65)) NOT BETWEEN ((t1.c16)) AND ((t1.c65))))) ASC, (((NOT (t1.c0))) NOT BETWEEN (((t1.c65)OR(t1.c0))) AND (CASE WHEN t1.c65 THEN t1.c65 ELSE t1.c65 END))  NULLS LAST, t1.c0 ASC LIMIT 443656457; -- 0ms;
SELECT ALL CAST((NULL IN ()) AS TEXT), 's*', ((t1.c0 COLLATE NOCASE)<<(CAST(t1.c65 AS TEXT))) FROM t1 WHERE (CASE ((('Mqu['))<=(('TRUE')))  WHEN ((x'') NOT NULL) THEN ((0.9615391423695161)<<('834495466')) ELSE LIKELY(NULL) END) ORDER BY json_type(CAST(t1.c0 AS TEXT))  NULLS FIRST; -- 0ms;
SELECT ((0X41a89219)>(((t1.c16) NOT BETWEEN (t1.c0) AND (t1.c0)))) FROM t1; -- 0ms;
SELECT ALL CASE WHEN (x'ae04' IN (t1.c0, t1.c65)) THEN 0xfffffffffd3a1c2d END FROM t1 INDEXED BY i39 WHERE ((('.趰') IS TRUE)) LIMIT -70633144 OFFSET 1595912501; -- 0ms;
SELECT DISTINCT ((COUNT(*)) ISNULL) FROM t1 WHERE (((((((((((((((-664444990)AND('-351484450')))AND('궓e蔶yt『')))AND('')))OR('-1941521680')))AND(0.01974594136955299)))OR(x''))) IS FALSE)); -- 0ms;
SELECT (CAST(t1.c0 AS TEXT) IN ()), COUNT(*), UNLIKELY(DISTINCT (((t1.c0)) NOT BETWEEN ((t1.c16)) AND ((t1.c16)))) FROM t1; -- 0ms;
SELECT DISTINCT 0.6729682980694637 COLLATE BINARY FROM t1 WHERE (json_patch((((0.5784037941312513)) BETWEEN (('814885524')) AND (('+6zt3酴~]嗭'))), NULL COLLATE BINARY)); -- 0ms;
SELECT DISTINCT CAST(((t1.c16)<=(t1.c65)) AS INTEGER) FROM t1 WHERE ((- (((-916014871)<=(x'1a26'))))); -- 0ms;
SELECT DISTINCT t1.c0 FROM t1; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t1; -- 0ms;
SELECT DISTINCT CASE CAST(t1.c16 AS INTEGER)  WHEN ((t1.c16) ISNULL) THEN (t1.c0 IN ()) ELSE CASE WHEN x'' THEN t1.c65 END END FROM t1 WHERE (((('0.134028443405672')) BETWEEN ((((2.5136076E7) NOTNULL))) AND ((((NULL)|('nowt')))))) GROUP BY t1.c65 HAVING COUNT(CAST(t1.c65 AS NUMERIC)); -- 0ms;
SELECT DISTINCT (~ (t1.c0 COLLATE NOCASE)) FROM t1; -- 0ms;
SELECT DISTINCT ((CAST(t1.c0 AS INTEGER))LIKE(0.4935907633371731)) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN (((t1.c65, t1.c0, t1.c0)) NOT BETWEEN ((t1.c16, t1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c16))) THEN t1.c0 ELSE ((t1.c65)<<(t1.c65)) END FROM t1 WHERE (CASE WHEN ((('813619105', '564965972', '-蕲cqᎠr'))<((x'', 1.782836709E9, x'cc8a'))) THEN CAST(NULL AS TEXT) END); -- 1ms;
SELECT DISTINCT COUNT(((((t1.c65)AND(t1.c65)))OR(t1.c16))) OVER (), CASE WHEN json(t1.c65) THEN ((t1.c65)&(t1.c0)) END, ((t1.c16) NOT BETWEEN (t1.c65) AND (0.57255182016003)) COLLATE BINARY FROM t1 WHERE (LIKE('TRUE', (+ (x'')))); -- 0ms;
SELECT DISTINCT ((((t1.c65) IS FALSE))>(t1.c0)) FROM t1; -- 0ms;
SELECT DISTINCT t1.c65, CASE WHEN t1.c65 THEN t1.c16 WHEN t1.c16 THEN x'' WHEN t1.c16 THEN t1.c0 ELSE t1.c65 END COLLATE RTRIM, ((((t1.c0)&(t1.c0))) NOT NULL), 0.28245204952465197, ((((((t1.c16)=(t1.c65)))OR(((((t1.c0)OR(t1.c0)))OR(t1.c65)))))OR((NOT (t1.c65)))) FROM t1; -- 0ms;
SELECT ABS(DISTINCT x'') FROM t1 WHERE (TRIM(DISTINCT LIKELY(NULL), ((x'') IS FALSE))); -- 0ms;
SELECT DISTINCT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()) FROM t1 WHERE (NULLIF((((-1827549475, x'4943', NULL)) BETWEEN ((1197535757, 12575265, '1849219117')) AND ((x'', NULL, '7ve4[薾BK&'))), -1652391169)); -- 0ms;
SELECT DISTINCT ((((''))<=((t1.c65))) IN ()) FROM t1 WHERE (CASE x'062e' COLLATE RTRIM  WHEN x'' COLLATE NOCASE THEN CAST(-1926888167 AS BLOB) ELSE (('1299827321')OR(NULL)) END) ORDER BY json_extract(NULLIF(t1.c16, t1.c65), t1.c0, (NULL IN ()), t1.c0, ((t1.c16) NOT NULL), t1.c16) DESC; -- 1ms;
SELECT DISTINCT CASE WHEN AVG(t1.c16) THEN (t1.c65 IN (t1.c0)) WHEN 0.09597439472244185 THEN CASE WHEN t1.c16 THEN t1.c65 ELSE t1.c65 END WHEN ((t1.c65)<(t1.c65)) THEN (('-70633144')<(t1.c65)) ELSE x'' END FROM t1; -- 0ms;
SELECT ALL COUNT(t1.c65) OVER (), CAST(NULL AS NUMERIC), ((((((((CASE t1.c16  WHEN t1.c16 THEN t1.c0 WHEN t1.c16 THEN t1.c16 WHEN t1.c16 THEN t1.c0 ELSE t1.c65 END)AND(((t1.c65)<(t1.c0)))))AND(CASE t1.c16  WHEN t1.c0 THEN t1.c16 WHEN t1.c16 THEN '1174935776' WHEN t1.c16 THEN t1.c0 ELSE t1.c0 END)))OR(LIKELIHOOD(t1.c65, 0.4808713787950989))))AND(t1.c16)) FROM t1 WHERE (NULL); -- 0ms;
SELECT (((NOT (t1.c0))) NOT BETWEEN (((t1.c16) BETWEEN (t1.c0) AND (t1.c65))) AND (((t1.c65)>>(t1.c16)))) FROM t1; -- 0ms;
SELECT CASE 'P	'  WHEN t1.c0 THEN t1.c65 ELSE t1.c16 END COLLATE BINARY FROM t1; -- 0ms;
SELECT ALL SUM(((t1.c65) NOT NULL)) OVER () FROM t1; -- 0ms;
SELECT (((t1.c65)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM, t1.c16, DENSE_RANK() OVER ( ORDER BY ((t1.c65 COLLATE RTRIM)GLOB(json_valid(t1.c65)))  NULLS FIRST), (((t1.c0)) NOT BETWEEN ((((t1.c65)IS(t1.c0)))) AND ((COUNT(t1.c16)))), ((('415795776'))>(((+ (t1.c0))))) FROM t1; -- 1ms;
SELECT DISTINCT ((CASE t1.c16  WHEN t1.c16 THEN t1.c16 END)>=(IFNULL(DISTINCT t1.c65, t1.c0))) FROM t1; -- 0ms;
SELECT DISTINCT HEX((0.8600298285813308 IN (t1.c65))) FROM t1 ORDER BY CAST(x'7ee9' COLLATE NOCASE AS TEXT)  NULLS LAST; -- 0ms;
SELECT t1.c16 FROM t1 WHERE ((CAST(0x7f600d0c AS TEXT) IN ())); -- 0ms;
SELECT DISTINCT (t1.c65 IN ()) COLLATE RTRIM COLLATE RTRIM FROM t1 WHERE (((((((((CASE x''  WHEN x'bb99' THEN 0.9026712197359071 WHEN NULL THEN 970587837 WHEN '1061331636' THEN '' END)AND((('-1816117527')-('-475311261')))))OR(((-1.694348928E9)>(-1.75864462E8)))))AND((('') IS FALSE))))AND(((x'') IS TRUE)))); -- 0ms;
SELECT t1.c0, (((+ (t1.c65))) NOTNULL), ((((((t1.c16) NOT BETWEEN (t1.c16) AND (t1.c0)))AND(IFNULL(t1.c16, t1.c65))))AND((~ (t1.c16)))) FROM t1 WHERE (CAST(0.2563931895639444 AS BLOB) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((t1.c65)OR(t1.c0)) IN ((- (t1.c0)))) FROM t1 WHERE (NULLIF((('1214942689')>>('䋡C~(''6hIp')), CASE 0.7557969131531395  WHEN x'' THEN x'' WHEN -475311261 THEN 0.6467922125347804 WHEN 0.9614355110345509 THEN 0X323d0bdd ELSE x'' END)) LIMIT 1261240617 OFFSET -388248953; -- 0ms;
SELECT ((((CASE t1.c65  WHEN t1.c65 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN 0.6166703890073229 THEN t1.c0 ELSE t1.c16 END)OR(UPPER(DISTINCT t1.c0))))AND(((t1.c16) BETWEEN (t1.c65) AND (t1.c65)))), ((CASE WHEN t1.c16 THEN t1.c0 ELSE t1.c16 END) ISNULL), ((('5kmA'))>=((t1.c16 COLLATE RTRIM))), ((((t1.c16) NOT NULL)) NOT BETWEEN (CASE t1.c16  WHEN NULL THEN t1.c65 WHEN t1.c0 THEN t1.c16 WHEN t1.c65 THEN t1.c0 ELSE t1.c16 END) AND (CAST(t1.c65 AS REAL))), CAST(CAST(NULL AS TEXT) AS BLOB) FROM t1 WHERE ((~ (((((((((0x51adf93f)OR('EeZ^')))OR(0.8342941498976142)))AND('-1548757183')))AND(NULL))))); -- 0ms;
SELECT ((CAST(t1.c0 AS INTEGER))-(0.5087735092082721)) FROM t1 WHERE ((('-10572044')|(0x31be70a1))); -- 0ms;
SELECT ALL ((((((((((((t1.c16)AND(t1.c16)))AND(t1.c16)))OR(t1.c65)))AND(t1.c0)))AND((+ (t1.c0)))))OR('679727396' COLLATE BINARY)), CASE (((t1.c65)) NOT BETWEEN ((t1.c16)) AND ((t1.c16)))  WHEN (- (t1.c16)) THEN ('1385358104' IN ()) ELSE ((((((((t1.c65)AND(t1.c0)))OR(t1.c16)))OR(t1.c0)))OR(t1.c16)) END, ((t1.c0)<(t1.c16 COLLATE RTRIM)) FROM t1; -- 0ms;
SELECT DISTINCT LEAD(CAST(LOWER(t1.c65) AS TEXT), (((((NULL, t1.c0, 2061941856)) NOT BETWEEN ((t1.c65, t1.c16, t1.c16)) AND ((t1.c65, 0.5206634877957701, t1.c65))))GLOB((+ (t1.c16)))), CASE WHEN t1.c65 THEN t1.c65 ELSE '' END COLLATE BINARY) OVER (), ((((- (t1.c0))))<((UNLIKELY(DISTINCT t1.c16)))), (((((((((NOT (t1.c0)))AND(((((t1.c16)AND(t1.c65)))AND(t1.c65)))))AND(((t1.c65)>(x'')))))AND(((t1.c65) NOT NULL))))OR(((t1.c16)OR(t1.c0)))), NULL, t1.c65 FROM t1 WHERE ((((x'd13d')) NOT BETWEEN ((((-1.62462541E9)>=('X%uUe똛')))) AND (('t1' COLLATE RTRIM)))) GROUP BY '-189784401' HAVING t1.c65 ORDER BY (+ (((t1.c65) NOT BETWEEN (t1.c0) AND (t1.c0)))); -- 0ms;
SELECT DISTINCT ((CAST(-1548871392 AS REAL))||((- (t1.c16)))), t1.c65, (((t1.c0)) NOT BETWEEN ((((t1.c16) IS TRUE))) AND (((+ (t1.c16))))), ((LAST_INSERT_ROWID())||(((t1.c65)/(0.5598330387931875)))), ((CAST(x'' AS INTEGER)) ISNULL) FROM t1; -- 0ms;
SELECT DISTINCT json_type(((t1.c65) BETWEEN (t1.c65) AND (t1.c16))), (+ (HEX(DISTINCT t1.c16))), ((((((((t1.c16)AND(CASE WHEN t1.c16 THEN t1.c0 ELSE t1.c65 END)))OR(CASE t1.c65  WHEN t1.c65 THEN t1.c16 ELSE t1.c16 END)))OR(CAST(t1.c65 AS NUMERIC))))OR(((t1.c65) BETWEEN (t1.c0) AND (t1.c16)))) FROM t1; -- 0ms;
SELECT ALL ((t1.c16) NOTNULL) COLLATE BINARY FROM t1 GROUP BY t1.c0 HAVING (~ (((t1.c65) NOT BETWEEN (0.11748835947163117) AND (t1.c0)))); -- 0ms;
SELECT (((t1.c16, t1.c16, t1.c0)) BETWEEN (((NOT (t1.c16)), t1.c16 COLLATE RTRIM, 0.2660601458942089)) AND (((NOT (t1.c0)), (t1.c0 IN (t1.c0)), t1.c65))), (NOT (t1.c16)), CAST(((t1.c0) IS FALSE) AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT (((- (-1468809990))) NOT NULL) FROM t1 WHERE ((NOT ((((0.39416330707805525)) BETWEEN (('1940741523')) AND (('0.3558219251420448')))))) ORDER BY (NOT (t1.c0)) COLLATE NOCASE DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1 ORDER BY 899373468  NULLS FIRST;SELECT ALL LAST_VALUE(UNLIKELY(IFNULL(t1.c0, t1.c16))) OVER () FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c0))>=((t1.c16))) COLLATE NOCASE FROM t1 WHERE (981775125); -- 0ms;
SELECT CASE WHEN (((t1.c0))!=((t1.c65))) THEN t1.c65 COLLATE NOCASE WHEN (((t1.c65, t1.c65, t1.c65))!=((t1.c0, t1.c65, t1.c0))) THEN ((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))OR(t1.c16)))OR(t1.c16)) WHEN (('1849219117') BETWEEN ('8렼') AND (t1.c0)) THEN t1.c16 COLLATE NOCASE ELSE NULLIF(t1.c65, t1.c65) END FROM t1; -- 0ms;
SELECT t1.c16 FROM t1; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN t1.c65 THEN t1.c0 END)), CASE WHEN (+ (t1.c65)) THEN (((t1.c65)) NOT BETWEEN ((t1.c16)) AND ((NULL))) WHEN ((t1.c0)*(t1.c16)) THEN ((t1.c16) BETWEEN (t1.c65) AND ('-F')) WHEN ((t1.c0) IS TRUE) THEN ((((t1.c16)OR(t1.c0)))OR(t1.c65)) WHEN ((t1.c65) BETWEEN (t1.c0) AND (t1.c0)) THEN UNLIKELY(t1.c65) WHEN ((t1.c65) BETWEEN (t1.c16) AND (t1.c0)) THEN (+ (t1.c65)) ELSE COALESCE(DISTINCT t1.c16, t1.c65) END, CASE WHEN CASE WHEN 0.13902610545998018 THEN t1.c0 WHEN t1.c65 THEN t1.c0 WHEN t1.c16 THEN t1.c16 END THEN ((t1.c65) IS TRUE) WHEN ((((((((t1.c0)AND(t1.c65)))AND(t1.c0)))AND(t1.c65)))AND(t1.c65)) THEN HEX(DISTINCT t1.c0) WHEN (- (t1.c16)) THEN CAST(t1.c65 AS TEXT) END FROM t1 ORDER BY ((((NOT (t1.c0)), ((0Xffffffffd5834eca)>(t1.c65)), ((((((((t1.c65)OR(t1.c16)))AND(t1.c16)))OR(t1.c0)))AND(t1.c16))))>((((t1.c16) NOT BETWEEN (-731364861) AND (t1.c0)), (NOT (t1.c16)), (NOT (t1.c16))))) ASC  NULLS LAST; -- 0ms;
SELECT ALL TOTAL(HEX(DISTINCT t1.c65)), (((+ (t1.c65)))LIKE(((t1.c16)=(t1.c16)))), '-9223372036854775808' FROM t1 WHERE (CASE WHEN 0.08778225067089995 THEN ((0Xffffffffcf3ad422)<(NULL)) WHEN ((0.9265580270945243) BETWEEN (0.9881435529544387) AND ('w^')) THEN CASE WHEN -8.1822819E8 THEN x'' END WHEN LOWER('0.3852922740900979') THEN ((((x'88b8')OR(0.13381906132743704)))AND(0.3829023526354791)) ELSE (((0.2803552700954298))>((x''))) END); -- 0ms;
SELECT CAST(((t1.c0) BETWEEN (t1.c16) AND (t1.c0)) AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT ((NULL)AND(t1.c65)) COLLATE NOCASE FROM t1 WHERE (CAST(CAST('1223132606' AS INTEGER) AS NUMERIC)); -- 0ms;
SELECT DISTINCT t1.c0 FROM t1; -- 1ms;
SELECT DISTINCT ((t1.c65 IN ()) IN (t1.c16 COLLATE BINARY)) FROM t1 WHERE ((((NOT (NULL))) NOT BETWEEN (((NULL) ISNULL)) AND ((~ (x''))))); -- 0ms;
SELECT ALL MIN(LIKE(t1.c0, t1.c0)), ((((t1.c65)<(t1.c0))) ISNULL), COUNT(CAST(t1.c16 AS REAL)) FROM t1 WHERE (ROUND(CAST(NULL AS NUMERIC), ((((NULL)OR(-1468809990)))OR('+6zt3酴~]嗭')))); -- 0ms;
SELECT ALL (UNLIKELY(DISTINCT t1.c65) IN (((NULL) IS FALSE))), ((LAST_INSERT_ROWID())&(CAST(t1.c65 AS BLOB))), '~G梂L-?\' FROM t1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1; -- 0ms;
SELECT ALL (~ (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) FROM t1 WHERE ((((x''))<=((0X704247f0))) COLLATE BINARY) ORDER BY 'uq+e'  NULLS LAST, t1.c65; -- 0ms;
SELECT ALL LAST_INSERT_ROWID() COLLATE RTRIM FROM t1 WHERE (CAST((('{m')>>('-795045497')) AS NUMERIC)); -- 1ms;
SELECT DISTINCT RANK() OVER () FROM t1 WHERE (x'' COLLATE NOCASE) GROUP BY NULL HAVING ((CAST(NULL AS BLOB))IS(((t1.c65)>>(t1.c65)))); -- 0ms;
SELECT DISTINCT ((((t1.c16) NOTNULL))AND((((t1.c65, t1.c16, t1.c16))<=((t1.c16, t1.c0, t1.c16))))) FROM t1 WHERE (((CASE WHEN x'be54' THEN x'' END)>(((NULL) NOT NULL)))) UNION SELECT (((t1.c16) BETWEEN (t1.c65) AND (t1.c65)) IN (1849219117, ((t1.c16) IS FALSE))) FROM t1 LIMIT -1192038130; -- 2ms;
SELECT ALL SUM((((1.849219117E9, t1.c65, t1.c0)) NOT BETWEEN ((t1.c0, t1.c65, t1.c65)) AND ((t1.c65, t1.c16, t1.c0)))) OVER (), (NOT (CASE t1.c65  WHEN t1.c65 THEN t1.c65 END)), TOTAL(0.17949685834173879) FILTER(WHERE (~ ('-1399584298'))) OVER (), ((((t1.c16)IS NOT(t1.c0)))||(TRIM(t1.c0))), ((COALESCE(DISTINCT t1.c65, t1.c16))<<(NULL)) FROM t1; -- 0ms;
SELECT ALL TOTAL(CAST(t1.c16 AS REAL)) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN (t1.c0 IN ()) THEN t1.c16 COLLATE NOCASE END, ((GROUP_CONCAT(t1.c0))IS(((t1.c0)<>(t1.c65)))), t1.c0 FROM t1; -- 0ms;
SELECT DISTINCT CASE ((((t1.c0)OR(t1.c16)))OR(t1.c65))  WHEN (t1.c16 IN (t1.c65)) THEN CAST(t1.c65 AS BLOB) END FROM t1 WHERE ((((0Xffffffffa0b302ff)) BETWEEN (('q!r(lq栕' COLLATE RTRIM)) AND ((x'' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t1 WHERE (TIME(('s\n7L[''e' IN ()), CASE '0.7496237341117146'  WHEN 0.2278055130081177 THEN NULL END, ((x'9dfd')*('')))); -- 0ms;
SELECT DISTINCT NTILE(((CASE WHEN t1.c16 THEN t1.c0 WHEN t1.c0 THEN '1064026808' WHEN t1.c65 THEN t1.c16 WHEN t1.c0 THEN t1.c65 WHEN t1.c65 THEN t1.c16 END) BETWEEN (((((t1.c16)OR(t1.c65)))OR(t1.c16))) AND (((t1.c65) IS TRUE)))) OVER () FROM t1 WHERE (CAST(('0.5491959730257069' IN ('Vw\r1br왷q')) AS REAL)); -- 0ms;
SELECT ALL GROUP_CONCAT(t1.c0 COLLATE NOCASE) FILTER(WHERE (((t1.c16 IN ()))&(ABS(t1.c0)))) OVER ( RANGE t1.c0 PRECEDING EXCLUDE GROUP), CAST(((((t1.c16)AND(t1.c16)))AND(t1.c65)) AS BLOB), 0.18186709697904002 FROM t1 WHERE (CAST((1.129928173E9 IN (x'', x'936e')) AS REAL)) LIMIT 969636051;SELECT DISTINCT (+ (NULL)) FROM t1 WHERE (((((CAST('-449001865' AS NUMERIC))OR(((-1913468456) NOT BETWEEN (x'') AND (' K瑦x(ꊻ')))))OR(((((NULL)OR(-5.50681887E8)))OR(NULL))))); -- 0ms;
SELECT DISTINCT RANK() OVER (), '-1942057661', t1.c0 FROM t1; -- 0ms;
SELECT DISTINCT COUNT(((0.5868755321882166) NOT BETWEEN (0.2660601458942089) AND (t1.c65))) FROM t1 WHERE (((((0.7554681040301963)<('646636221')))%(((((0Xffffffffd3a23b39)OR(0Xffffffffbdcb9b9d)))OR(0.2665638445787759))))); -- 0ms;
SELECT DISTINCT ((t1.c16 IN ()) IN ()) FROM t1 WHERE (CAST(((0.6512853027808017)+(0.8705030273127198)) AS REAL)); -- 0ms;
SELECT CASE WHEN UNICODE(t1.c0) THEN 0.8816235000613012 END FROM t1; -- 0ms;
SELECT ALL '1558307228' FROM t1 WHERE ((HEX(DISTINCT NULL) IN ())); -- 0ms;
SELECT ALL GROUP_CONCAT(((t1.c65) BETWEEN (t1.c65) AND (t1.c16))), t1.c0, CAST(0x61565f88 AS NUMERIC) FROM t1 ORDER BY CAST(UPPER(t1.c16) AS NUMERIC), IFNULL(((t1.c0) IS FALSE), (t1.c0 IN ())) ASC; -- 0ms;
SELECT DISTINCT CASE WHEN 'Rto99]' THEN (('609201076')&(t1.c0)) END, ((((t1.c65)<(t1.c0)))IS(((t1.c0) IS TRUE))), ((CASE WHEN t1.c16 THEN t1.c16 ELSE t1.c16 END)<=((~ (t1.c65)))) FROM t1 WHERE ((((0.8110406383401247)) NOT BETWEEN ((((('&඾vfHN90', 0.5784774643835762, x'', NULL, x''))<>(('825482228', 'L/mm|f*', -1.82171095E9, NULL, 1.387728318E9))))) AND (((('*Y} 	ep') BETWEEN (NULL) AND (0.6767189013848738)))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY (NOT (SQLITE_COMPILEOPTION_GET(t1.c65))), (- (((t1.c65) NOT BETWEEN (x'5c91') AND (t1.c16))))) FROM t1 WHERE ((~ ((- (0.41176122916061597))))) GROUP BY CAST(LTRIM(t1.c0, NULL) AS NUMERIC), (((t1.c16)||(t1.c0)) IN ()), ((((COALESCE(t1.c0, t1.c0))AND(CAST(t1.c16 AS BLOB))))AND(CAST(t1.c0 AS TEXT))) HAVING json_patch(COUNT(t1.c0), COUNT(t1.c16)); -- 0ms;
SELECT ((((((((((((t1.c16)AND(t1.c16)))AND(t1.c16)))OR(t1.c0)))OR(t1.c65)))OR('---vN')))OR(((t1.c0)!=(t1.c16)))) FROM t1 WHERE (((((-8.32937515E8)=(x'1fbe')))-(((-1821710950) ISNULL)))); -- 0ms;
SELECT ALL CASE CASE WHEN t1.c65 THEN t1.c0 ELSE t1.c65 END  WHEN t1.c0 COLLATE NOCASE THEN CAST(t1.c16 AS REAL) END, ((x'' COLLATE NOCASE) IS TRUE), t1.c0 FROM t1 WHERE (CASE (((NULL)) BETWEEN (('퓡nk^FaZ')) AND ((0.5237539053474947)))  WHEN x'' COLLATE RTRIM THEN UNLIKELY(DISTINCT -1.3551794E7) END) GROUP BY IFNULL(NULLIF(t1.c0, t1.c0), CAST(0.6922715986485123 AS TEXT)); -- 1ms;
SELECT CAST(((((((((t1.c0)OR('1569988773')))OR(t1.c0)))OR(t1.c16)))AND(t1.c65)) AS TEXT) FROM t1 LIMIT -1078105756 OFFSET -1807151925; -- 0ms;
SELECT DISTINCT CASE IFNULL(NULL, t1.c65)  WHEN LIKE(t1.c16, '1460254617') THEN ((t1.c65)LIKE(t1.c0)) ELSE t1.c65 END FROM t1 WHERE (((((NULL) NOT BETWEEN (NULL) AND ('SInd')))-((~ (NULL))))); -- 0ms;
SELECT DISTINCT 0.027083013281136825, (((IFNULL(DISTINCT t1.c16, t1.c0)))<>((((((t1.c65)OR(t1.c0)))AND(t1.c0))))), t1.c0 FROM t1; -- 0ms;
SELECT ALL LEAD(((t1.c0) IS FALSE), ((((CAST(t1.c16 AS INTEGER))OR(CASE WHEN t1.c65 THEN t1.c0 WHEN t1.c16 THEN t1.c0 WHEN t1.c0 THEN t1.c16 ELSE t1.c0 END)))OR(CAST('' AS BLOB))), LIKELY(t1.c16) COLLATE RTRIM) OVER () FROM t1 WHERE ((('o9o3') IS TRUE)) ORDER BY 0.6008226170509186 LIMIT 722330518 OFFSET 1073656676; -- 0ms;
SELECT ALL (NOT (((((t1.c65)AND(t1.c0)))OR(t1.c0)))) FROM t1 WHERE (CASE WHEN (('<~')OR(NULL)) THEN ((NULL)IS(x'')) END); -- 0ms;
SELECT ALL ((t1.c0 COLLATE BINARY)+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c65)))), 0xafc27ed, ((((t1.c65)LIKE(t1.c16)))>>(((t1.c65) BETWEEN (t1.c65) AND (t1.c0)))) FROM t1 WHERE (((NULL COLLATE BINARY) NOT BETWEEN ((~ (NULL))) AND ((((x'')) BETWEEN ((x'')) AND ((x'')))))); -- 1ms;
SELECT ALL '1849219117' FROM t1 WHERE ((((+ (x''))) NOT BETWEEN (-1.942057661E9 COLLATE NOCASE) AND ((('') BETWEEN (NULL) AND ('CW.9^C(5'))))); -- 0ms;
SELECT ALL ((CAST(t1.c0 AS REAL))OR(((((((((t1.c0)OR(t1.c0)))OR(x'f0ed')))OR(t1.c65)))AND(t1.c0)))), COUNT(((((t1.c0)OR(t1.c0)))AND(t1.c0))), (CASE t1.c65  WHEN t1.c16 THEN t1.c65 END IN ()) FROM t1 WHERE (TRIM(DISTINCT ((NULL) BETWEEN (x'') AND (x'')))) ORDER BY CAST(((t1.c16) IS TRUE) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT DISTINCT UNICODE(SUM(t1.c0)), (t1.c16 IN ()) COLLATE BINARY COLLATE NOCASE, ((((((((AVG(t1.c16))AND((((t1.c16))<((t1.c16))))))AND(((t1.c16)+(t1.c16)))))OR((+ (t1.c16)))))AND(((t1.c65) IS TRUE))) FROM t1 WHERE (((('%ᰭ')IS(0Xffffffffcc4c1ef8)) IN ())); -- 0ms;
SELECT ALL CAST(((t1.c65)<('')) AS TEXT), COUNT(*) OVER (), MAX((t1.c0 IN ())) FROM t1 WHERE ((+ (CAST(0.370386837278078 AS REAL)))); -- 0ms;
SELECT MAX(((t1.c0)LIKE(t1.c65))) COLLATE RTRIM FROM t1; -- 0ms;
SELECT (~ (((t1.c16) BETWEEN (t1.c16) AND (t1.c65)))) FROM t1 WHERE (((((((((CAST(x'c52d' AS NUMERIC))OR((x'' IN ()))))OR(CAST(x'' AS NUMERIC))))AND((((x'')) BETWEEN ((NULL)) AND ((NULL))))))OR((('0.5217567067599685')/(0.9762296582172505))))) ORDER BY (~ ((t1.c0 IN ()))); -- 1ms;
SELECT DISTINCT (((t1.c16, t1.c0, t1.c0)) BETWEEN ((SUM(t1.c0), MIN(0.15221789623691517), ((('', t1.c0, t1.c0))==((t1.c16, t1.c0, t1.c65))))) AND ((CASE WHEN t1.c0 THEN 0.43523933045718977 WHEN t1.c16 THEN t1.c65 WHEN t1.c16 THEN t1.c0 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c65)), ((t1.c0)>>(t1.c16))))) FROM t1; -- 0ms;
SELECT ALL ((MAX(t1.c16)) BETWEEN (IFNULL(DISTINCT t1.c0, NULL)) AND (((t1.c16)IS(t1.c16)))) FROM t1; -- 0ms;
SELECT DISTINCT TOTAL(((((t1.c0)OR(t1.c0)))OR(t1.c16))) FROM t1; -- 0ms;
SELECT ALL (NOT (INSTR(t1.c65, t1.c0))), ((((CASE WHEN t1.c0 THEN t1.c65 END)OR(((t1.c65) IS FALSE))))AND(MIN(t1.c65))), (((t1.c16)>>(t1.c0)) IN ()) FROM t1 WHERE (x''); -- 0ms;
SELECT RANK() OVER () FROM t1 WHERE (((((x'5088') BETWEEN ('(#') AND (NULL)))%((('-1050556131')-(0.035258940681236584))))); -- 0ms;
SELECT DISTINCT '' COLLATE NOCASE, (((AVG(t1.c0)))>((load_extension(t1.c65)))), ((TOTAL(233486580)) BETWEEN ((~ (t1.c0))) AND (CAST(t1.c16 AS NUMERIC))), (((- ('1711872324'))) BETWEEN (((t1.c65)AND(t1.c0))) AND (COUNT(t1.c16))), (((t1.c0)) NOT BETWEEN ((t1.c65)) AND ((t1.c16))) COLLATE NOCASE FROM t1 WHERE ((((((((('qA])+n')AND('725129829')))OR(NULL)))AND(CASE x''  WHEN 'aw' THEN x'd6f007c1' ELSE 0.05784597103880118 END)))AND('1174935776')));SELECT DISTINCT (((((NULL, t1.c16, t1.c0))<((t1.c16, t1.c0, '5')))) NOTNULL), ((t1.c16 COLLATE RTRIM)+(('()' IN ()))), (SUM(t1.c0) IN ()), NULL COLLATE BINARY COLLATE BINARY COLLATE NOCASE, (~ (TRIM(DISTINCT t1.c65, 0.3399238851649752))), (+ ((((t1.c0))<((t1.c16))))), ((((t1.c16)*(t1.c16)))+(ROUND(t1.c65, t1.c0))) FROM t1; -- 0ms;
SELECT DISTINCT (((CAST(t1.c0 AS NUMERIC)))==(((((t1.c0, t1.c0, t1.c16))<=((t1.c65, t1.c0, t1.c0)))))), (NULL IN ()), ((CASE t1.c65  WHEN t1.c16 THEN t1.c65 ELSE t1.c16 END) BETWEEN (((t1.c65)>=(x''))) AND (SQLITE_VERSION())) FROM t1 WHERE ((((0.654309047218921)) NOT BETWEEN ((((x'') NOT BETWEEN (x'') AND (0X5d848f4a)))) AND (((('-2087125988') NOT NULL))))); -- 0ms;
SELECT DISTINCT LAG(((((t1.c0)IS(t1.c65))) NOT BETWEEN (t1.c0) AND (t1.c0)), t1.c0, ((((t1.c65)/(t1.c0)))*(((t1.c16)LIKE(t1.c0))))) OVER () FROM t1 WHERE (CAST(CAST(-1004599052 AS INTEGER) AS INTEGER)); -- 0ms;
SELECT ALL CUME_DIST() OVER (), TOTAL((((t1.c16, t1.c16, t1.c16)) BETWEEN ((t1.c16, t1.c16, 0.6711137411835211)) AND ((t1.c65, t1.c0, 'm''d.i n')))), ((t1.c0)=(0xffffffffcf3ad422)) COLLATE BINARY, ((((t1.c16)GLOB(t1.c0))) BETWEEN (t1.c0) AND (((t1.c65)*(t1.c65)))), (+ (t1.c16 COLLATE BINARY)) FROM t1; -- 0ms;
SELECT DISTINCT SUM(x'') OVER () FROM t1 GROUP BY (x'' IN (0.9873905640270866)), CASE WHEN ((t1.c0) NOT NULL) THEN IFNULL(DISTINCT t1.c16, t1.c0) ELSE ((t1.c65) BETWEEN (t1.c65) AND (NULL)) END, CASE t1.c65  WHEN ((t1.c16)<=(t1.c0)) THEN (t1.c0 IN ()) WHEN ((t1.c16)<=(t1.c65)) THEN CASE t1.c0  WHEN t1.c16 THEN t1.c0 ELSE -550681887 END WHEN x'2d9b' COLLATE NOCASE THEN ((t1.c65) BETWEEN (t1.c65) AND (t1.c0)) WHEN ((t1.c16)+(t1.c65)) THEN (t1.c0 IN ()) WHEN (t1.c16 IN (t1.c16, t1.c0)) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END; -- 0ms;
SELECT ALL ((0.17113300261635211)GLOB(LIKELY('-1741316523'))), ((t1.c16) NOT BETWEEN (0x66f5845) AND (t1.c16)) COLLATE NOCASE, (((((((((+ (t1.c0)))OR((((t1.c65)) BETWEEN ((t1.c16)) AND ((t1.c16))))))OR(0.6885561872262798)))AND(((t1.c65) BETWEEN (t1.c65) AND (t1.c16)))))OR(t1.c0 COLLATE BINARY)) FROM t1 LIMIT 1299827321; -- 0ms;
SELECT DISTINCT (((((t1.c0) IS TRUE)))=((((((t1.c16)OR(t1.c0)))AND(t1.c0))))) FROM t1 WHERE ((0.08171795341453492 IN ())); -- 0ms;
SELECT t1.c65 FROM t1; -- 0ms;
SELECT (((t1.c0, t1.c16, x'', t1.c65, t1.c16)) BETWEEN ((t1.c0 COLLATE RTRIM, (t1.c65 IN (t1.c65, t1.c0)), (- (t1.c16)), x'', ((((t1.c65)AND(t1.c16)))AND(t1.c16)))) AND ((((t1.c16)*(t1.c65)), x'', ((t1.c65)>(t1.c0)), ((((t1.c16)OR(t1.c0)))AND(t1.c65)), ((t1.c65)=(t1.c65))))) FROM t1 WHERE ((((((x'', 'MP5Fxp', NULL)) BETWEEN ((NULL, -698834071, '1067989702')) AND ((0xffffffffbfcd6b89, '1011355282', 0.25506398597253244))))||(((0x78284008)<>(NULL))))); -- 0ms;
SELECT LAST_VALUE(((((((((((t1.c65)OR(t1.c16)))AND(t1.c16)))AND(x'')))OR(t1.c65))) NOT BETWEEN ((t1.c16 IN ())) AND (((((((((((((t1.c0)OR(t1.c16)))AND(t1.c16)))AND(t1.c65)))OR(t1.c16)))OR(t1.c0)))AND(t1.c0))))) OVER () FROM t1 ORDER BY '-976841788' ASC; -- 1ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM t1 WHERE ((((((((x'')AND(0.5336247156438516)))AND(NULL)), CAST('' AS INTEGER), (+ (-1.942057661E9))))>=((x'10fa', ((((((((0.7788118663131179)OR('/|%4SAV!]')))AND(-1282902824)))AND('1425478036')))OR(0.21075102678916446)), CASE -1.399584298E9  WHEN '0.38611584034430835' THEN 0x63f2a483 END)))) GROUP BY (((t1.c0)) NOT BETWEEN (((t1.c0 IN (t1.c65, t1.c16)))) AND ((((t1.c65) NOT BETWEEN (t1.c0) AND (t1.c0))))) HAVING GROUP_CONCAT(((t1.c0) NOT BETWEEN (t1.c65) AND (t1.c0))) LIMIT 828799089 OFFSET 1130696701; -- 0ms;
SELECT DISTINCT COUNT(((')&\n') NOT BETWEEN (t1.c16) AND (t1.c0))) FROM t1 WHERE (LOWER(DISTINCT json_array_length('-218378417', '-100664981'))) GROUP BY (((((t1.c16) NOTNULL), ((t1.c65)+(t1.c0)), t1.c65 COLLATE BINARY))>((((NULL)/(t1.c0)), LAST_INSERT_ROWID(), CASE NULL  WHEN t1.c65 THEN t1.c16 END))) HAVING t1.c0;SELECT DISTINCT ((GROUP_CONCAT(t1.c16))LIKE((+ (t1.c0)))) FROM t1 WHERE ((+ ((((0.9796752619823973, NULL, 0.8907142261379867)) BETWEEN ((NULL, 0Xffffffff9b7b5de5, 0.6537965724636385)) AND ((0.6038955403670218, '25136076', x'')))))) LIMIT -278769994 OFFSET -1373112999; -- 0ms;
SELECT ALL t1.c16 FROM t1; -- 0ms;
SELECT ALL ((0.8745583005048064)>(((t1.c16) BETWEEN (t1.c16) AND (t1.c16)))), (+ ((NOT (x'491f')))), (((t1.c16, t1.c16, NULL)) BETWEEN ((((-4.6523347E7)=(t1.c0)), (~ (t1.c65)), MIN(t1.c16, t1.c0))) AND (((('-987047587')<=(t1.c16)), ((t1.c0) IS TRUE), ((NULL) NOT BETWEEN (t1.c16) AND (t1.c0))))) FROM t1; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t1.c16 THEN t1.c0 END AS INTEGER) FROM t1; -- 0ms;
SELECT ALL (((t1.c0) NOTNULL) IN ()), 0.6008722249520928, t1.c16, ((t1.c0)||(CAST('-993043688' AS BLOB))), ((((COUNT(t1.c65))OR((- (t1.c65)))))AND((t1.c0 IN ()))) FROM t1 ORDER BY ((((CASE WHEN t1.c0 THEN t1.c16 WHEN t1.c65 THEN t1.c65 WHEN t1.c16 THEN t1.c65 END)AND((((t1.c65, t1.c65, t1.c65)) BETWEEN ((t1.c0, t1.c65, t1.c65)) AND ((t1.c0, t1.c16, t1.c0))))))AND((((t1.c0))<=((t1.c65))))); -- 0ms;
SELECT ALL (+ (((t1.c16) ISNULL))) FROM t1; -- 0ms;
SELECT TYPEOF(CAST(t1.c16 AS INTEGER)) FROM t1 GROUP BY ((CASE NULL  WHEN t1.c65 THEN t1.c65 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c65 ELSE t1.c0 END)<<(((NULL)*(t1.c16)))); -- 0ms;
SELECT CAST(((t1.c16)IS NOT(t1.c65)) AS TEXT) FROM t1 WHERE ((((('-550681887')-(-382731188)))+('yYo!gG~iC' COLLATE BINARY))) LIMIT 1623336697 OFFSET -504153396; -- 0ms;
SELECT DISTINCT SUM(0.2660601458942089) FROM t1 WHERE (CAST(((-1.239874447E9) ISNULL) AS REAL)); -- 0ms;
SELECT COUNT(*) OVER ( GROUPS  CURRENT ROW), ((1079009733) NOTNULL), AVG(t1.c16) FROM t1 ORDER BY CAST(((0X50678147)<(t1.c65)) AS BLOB); -- 0ms;
SELECT CAST(CAST(t1.c0 AS REAL) AS TEXT) FROM t1 WHERE ((((~ ('O7*')))<('0.8605229346393705'))); -- 0ms;
SELECT (((t1.c16)) BETWEEN ((((0.9446382837831996) BETWEEN (t1.c65) AND (t1.c16)))) AND ((((t1.c65) NOTNULL)))) FROM t1 WHERE (((STRFTIME(NULL, '*K6㥈', 0.9762296582172505)) NOT BETWEEN ((((('1787644239')OR(0.5278135191929495)))OR(x''))) AND ((((-575359856))>((0.9401943991830631)))))); -- 0ms;
SELECT MIN('') FROM t1; -- 0ms;
SELECT ALL ((((((((((((((((CAST(t1.c65 AS TEXT))OR(((((t1.c65)AND(t1.c0)))OR(t1.c0)))))OR(((t1.c0)>>(t1.c16)))))OR(UPPER(t1.c65))))OR(CASE t1.c0  WHEN t1.c16 THEN t1.c65 WHEN t1.c65 THEN t1.c65 WHEN t1.c0 THEN t1.c0 END)))OR(GROUP_CONCAT(t1.c65))))AND(((((((((t1.c65)OR(t1.c0)))AND(t1.c16)))OR(t1.c65)))OR(t1.c65)))))AND(((t1.c65)OR(t1.c65)))))AND(MIN(t1.c65))), (((t1.c16 COLLATE RTRIM, (t1.c65 IN ()), HEX(t1.c0)))<=(((((t1.c65))<=((t1.c0))), ((t1.c0)>(t1.c0)), ((t1.c0) IS TRUE)))), CAST(((((t1.c16)AND(t1.c0)))AND(t1.c16)) AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c65) BETWEEN (t1.c65) AND (0.08133799094291505)))|(UPPER(DISTINCT t1.c0))) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c65)>(t1.c0)) THEN (~ (t1.c0)) ELSE (+ (t1.c16)) END, (MAX(t1.c0) IN (CAST(t1.c65 AS BLOB))), ((((t1.c0)+(t1.c16)))<<(CASE t1.c65  WHEN t1.c0 THEN t1.c65 ELSE t1.c0 END)) FROM t1 WHERE (x'') ORDER BY (((+ (x'')))%(((((t1.c0)OR(t1.c0)))OR(t1.c16)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(t1.c65 AS BLOB), CASE WHEN (t1.c65 IN (t1.c65)) THEN ((((t1.c65)AND(t1.c0)))OR(t1.c0)) ELSE ((x'e641')IS NOT(t1.c65)) END, UNLIKELY(DISTINCT (t1.c65 IN ())) FROM t1 WHERE ((LIKELIHOOD(DISTINCT NULL, 0.2032227055228515) IN (CASE 0.06952298823462666  WHEN x'efef' THEN 0X6e065a1e ELSE 0.04899432302323725 END))) GROUP BY t1.c65 COLLATE NOCASE, t1.c16, (((~ (t1.c16)))<<(((t1.c65)OR(t1.c65)))) HAVING t1.c0; -- 0ms;
SELECT DISTINCT (((AVG(t1.c0), ((((((((t1.c16)AND(t1.c0)))OR(x'')))OR(t1.c16)))AND(t1.c0)), SUM(NULL)))=(((~ (t1.c16)), (((t1.c0, t1.c65, t1.c65, t1.c16, t1.c0))>=((t1.c16, t1.c65, NULL, t1.c65, t1.c16))), (((t1.c65)) BETWEEN ((t1.c65)) AND ((t1.c65)))))) FROM t1 WHERE (((((0.3489512099560642) ISNULL)) ISNULL)); -- 0ms;
SELECT ALL t1.c16 FROM t1 WHERE (0.9488285839379093); -- 0ms;
SELECT DISTINCT (NOT (CAST(t1.c16 AS NUMERIC))) FROM t1 WHERE (LIKELIHOOD(DISTINCT ((x'') BETWEEN (0X482dedb) AND (x'')), 0.7352571686521325)) ORDER BY CASE 0.6815389580585126  WHEN (- (t1.c0)) THEN t1.c65 COLLATE RTRIM ELSE ((((((((t1.c65)AND(t1.c0)))OR(t1.c16)))AND(t1.c16)))OR(t1.c0)) END, 'e0'  NULLS LAST, t1.c65 COLLATE NOCASE; -- 0ms;
SELECT DISTINCT (~ ((((0X6a43ede5))>=((t1.c65))))) FROM t1 ORDER BY ((((((((t1.c65 COLLATE NOCASE)AND(CASE WHEN t1.c0 THEN t1.c0 ELSE 0.6982167794354609 END)))OR((((t1.c65, t1.c65, t1.c16)) BETWEEN ((t1.c0, t1.c16, t1.c0)) AND ((t1.c16, t1.c65, t1.c65))))))OR('-993043688')))OR(((((t1.c16)OR(t1.c16)))OR(t1.c16))))  NULLS LAST; -- 0ms;
SELECT ALL t1.c65 FROM t1; -- 0ms;
SELECT TOTAL(t1.c65) FROM t1 WHERE (((CAST(NULL AS REAL)) BETWEEN (CAST(1507530020 AS NUMERIC)) AND (HEX(DISTINCT 1e500)))); -- 0ms;
SELECT DISTINCT ((t1.c65 COLLATE RTRIM)GLOB((((t1.c16))>=((t1.c65))))) FROM t1 WHERE (((0x498a6007 COLLATE RTRIM) NOT BETWEEN ((('%8[J')AND(0.8081204155987369))) AND (((0x2f075cd0) ISNULL)))); -- 0ms;
SELECT ALL (((GLOB('SB', '513384803')))>=((CASE WHEN t1.c0 THEN t1.c65 ELSE t1.c0 END))) FROM t1 WHERE ('-1704141017'); -- 0ms;
SELECT ((((((NULL)AND(t1.c16)))AND(t1.c0))) ISNULL) FROM t1 WHERE (CAST((- (NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t1; -- 0ms;
SELECT DISTINCT AVG((- (x''))) COLLATE RTRIM FROM t1 WHERE (((CAST(x'' AS REAL)) ISNULL)); -- 0ms;
SELECT DISTINCT RANK() OVER (), (((((0.868013725229998)-(t1.c0))))<((((t1.c65)IS(t1.c65))))), ((((((((((t1.c65) NOT BETWEEN (t1.c0) AND (t1.c65)))AND(-1.399584298E9)))AND(t1.c0)))AND(((t1.c0) BETWEEN (t1.c16) AND (t1.c65)))))AND(CAST(t1.c0 AS REAL))) FROM t1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1; -- 1ms;
SELECT DISTINCT (~ (((((((((t1.c65)OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))OR(t1.c16)))) FROM t1 GROUP BY ((((((((((((t1.c0)OR('oQu')))OR(t1.c16)))AND(t1.c65)))OR(t1.c16)))OR((- (t1.c0)))))OR(CAST(t1.c16 AS TEXT))); -- 0ms;
SELECT DISTINCT ((((((t1.c16)IS(t1.c0)))OR(((((t1.c65)AND(t1.c16)))OR(t1.c0)))))AND(CHAR(x'edbd', t1.c16, t1.c16))) FROM t1 WHERE (('0.7293084042613263' IN (NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL (- ((NOT (t1.c0)))) FROM t1; -- 0ms;
SELECT DISTINCT CASE CASE WHEN x'2673' THEN t1.c0 ELSE t1.c0 END  WHEN ((t1.c16) NOT NULL) THEN (- (t1.c16)) ELSE TOTAL(0.9945484986974398) END, (((t1.c16)) BETWEEN ((0.0779461941969265)) AND (('902770124'))), (NOT (((t1.c16) BETWEEN ('-980476920') AND (t1.c16)))) FROM t1 WHERE ((((((-786632189) NOTNULL)))<((((NULL) NOT NULL))))); -- 0ms;
SELECT (((0.1256332545009794))<=(((((t1.c16)) NOT BETWEEN ((t1.c16)) AND ((t1.c16)))))) FROM t1 WHERE ((((NULL) NOT NULL) IN (((('3K|HO.', 0.5410744206284163, 0xffffffffae4b26e8, 0xffffffffff012ad0, NULL))<(('ROa', 0.05028660163299803, NULL, NULL, 0x200ad14f)))))); -- 0ms;
SELECT UNLIKELY(((t1.c0)/(t1.c65))) FROM t1; -- 0ms;
SELECT ((((NULL)>=(t1.c0))) BETWEEN (CASE WHEN t1.c65 THEN t1.c0 ELSE t1.c65 END) AND ((- ('hv')))) FROM t1; -- 0ms;
SELECT (((t1.c0 COLLATE NOCASE, (t1.c65 IN ()), (+ (NULL))))<=((CAST(0.134028443405672 AS BLOB), (~ (t1.c65)), json_array(t1.c16, t1.c16)))) FROM t1; -- 0ms;
SELECT DISTINCT ((t1.c65)+(t1.c0)) COLLATE RTRIM FROM t1; -- 0ms;
SELECT ALL ((CASE WHEN 0.5745015843911532 THEN t1.c65 WHEN t1.c16 THEN t1.c0 WHEN t1.c65 THEN t1.c16 ELSE t1.c0 END) IS FALSE) FROM t1 WHERE (((((((((HEX(0.5347526181156412))AND(((x'') BETWEEN (0.49293894254222936) AND ('-1704141017')))))AND(CASE x'6a62'  WHEN 0.20413989528193643 THEN '0.21075102678916446' ELSE NULL END)))OR(CASE WHEN 0.25512447286351936 THEN x'c6ba' ELSE 0x7b0cbae END)))AND(-7.61612228E8 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((t1.c16 COLLATE BINARY, CASE WHEN t1.c16 THEN t1.c0 END, ((t1.c0) IS TRUE)))=((COUNT(t1.c0), (t1.c0 IN ()), ((t1.c0) NOT NULL)))), ((((t1.c0)) BETWEEN ((t1.c65)) AND ((t1.c0))) IN ()), (+ ((((t1.c65))>((t1.c65))))) FROM t1 WHERE ((('2m6')==(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((CAST(t1.c65 AS REAL))<(json_type(t1.c0))) FROM t1 WHERE (((CAST(x'' AS REAL)) IS TRUE)); -- 0ms;
SELECT COUNT(*) FROM t1; -- 0ms;
SELECT ALL CAST(CAST(t1.c0 AS REAL) AS BLOB), (+ (t1.c16)) COLLATE NOCASE, NULL, ((((t1.c65) ISNULL))>(((((((((t1.c0)AND(t1.c65)))AND(t1.c65)))OR(t1.c65)))OR(t1.c16)))), ((((x'') NOT NULL))<(SUM(t1.c16))) FROM t1 LIMIT 2067606028 OFFSET -1449277898; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(json_array(t1.c0, t1.c0)) OVER (), (~ (((((t1.c16)OR(t1.c0)))OR(t1.c65)))), load_extension((((t1.c16)) BETWEEN (('-''K(X|_')) AND ((t1.c0))), ((t1.c65)<<(t1.c0))) FROM t1 LIMIT -1025025571 OFFSET -317302903;SELECT DISTINCT ((((t1.c0)>=(t1.c65)))>>(((t1.c16)%(t1.c65)))), MIN((((t1.c65, t1.c16, t1.c65))<((t1.c0, t1.c0, -1600180049)))), ((CAST(t1.c16 AS INTEGER)) NOT NULL) FROM t1; -- 0ms;
SELECT ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c65)))*(((t1.c0) NOT BETWEEN (t1.c65) AND (t1.c0)))) FROM t1 WHERE (((((0x7d5bdf5f) ISNULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE (t1.c0 IN (t1.c65, t1.c16))  WHEN LOWER(DISTINCT t1.c65) THEN CASE WHEN t1.c0 THEN t1.c65 END ELSE CAST(NULL AS BLOB) END FROM t1; -- 0ms;
SELECT ALL '壜h\n''' FROM t1 LIMIT -1147198757 OFFSET -1340703637; -- 0ms;
SELECT DISTINCT CASE (((t1.c65, t1.c65, t1.c65)) BETWEEN ((t1.c65, t1.c0, x'')) AND ((t1.c16, t1.c0, t1.c0)))  WHEN (t1.c16 IN ()) THEN CASE WHEN t1.c65 THEN t1.c65 WHEN t1.c65 THEN t1.c65 WHEN t1.c0 THEN t1.c16 END ELSE (+ (t1.c65)) END, CASE WHEN ((t1.c16) NOT NULL) THEN ((t1.c0)==(t1.c16)) END, ((((t1.c65) BETWEEN (t1.c65) AND (t1.c0)))IS(((t1.c16) BETWEEN (t1.c65) AND (t1.c65)))), ((t1.c65) NOTNULL) COLLATE NOCASE, ((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(MIN(t1.c16))) FROM t1 ORDER BY t1.c16  NULLS FIRST, (((NOT ('44650127')))>>(((t1.c16)>(t1.c16))))  NULLS LAST; -- 0ms;
SELECT ALL MIN((t1.c65 IN ())), COALESCE(CAST(t1.c0 AS REAL), (((t1.c65)) NOT BETWEEN ((t1.c65)) AND ((t1.c65)))), CASE ((t1.c0) BETWEEN (t1.c65) AND (t1.c65))  WHEN MAX(t1.c16) THEN ((t1.c65)&(t1.c0)) ELSE MIN(t1.c16) END FROM t1 WHERE (0Xffffffffd252d7ad) LIMIT 956738387; -- 1ms;
SELECT DISTINCT (((x''))<=((COALESCE(DISTINCT NULL, 0.5051852807873144)))), (((t1.c65 IN ()))>((t1.c65 IN ()))), MIN('98') FROM t1 WHERE ((((- ('ccr-')))==(CAST('1167880690' AS TEXT)))); -- 0ms;
SELECT ALL CASE ((((((((t1.c16)AND(t1.c0)))OR(t1.c16)))OR(t1.c0)))AND(t1.c65))  WHEN ((t1.c65) ISNULL) THEN x'' COLLATE BINARY ELSE 0.134028443405672 END FROM t1; -- 0ms;
SELECT GROUP_CONCAT(((((((((t1.c65)AND(t1.c0)))OR(t1.c16)))AND(t1.c65)))OR(NULL))) OVER () FROM t1 WHERE (LIKELY(DISTINCT (~ (1425188728)))) GROUP BY CASE t1.c0 COLLATE RTRIM  WHEN t1.c0 THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) WHEN NULL THEN t1.c16 COLLATE BINARY WHEN TRIM(t1.c65, t1.c0) THEN HEX(t1.c16) END, (((- (t1.c0))) IS TRUE), (~ (t1.c0)); -- 0ms;
SELECT DISTINCT ABS(CASE t1.c0  WHEN t1.c0 THEN t1.c65 ELSE NULL END) FROM t1 WHERE ((((((x'')) NOT BETWEEN ((NULL)) AND ((x'73f6')))) NOT BETWEEN (CAST('t赃Oo' AS BLOB)) AND (HEX('')))); -- 0ms;
SELECT ALL ((CAST(t1.c0 AS TEXT))*(((t1.c65) NOTNULL))), ((CAST(t1.c0 AS NUMERIC)) NOT NULL), t1.c0 FROM t1 WHERE ((((NULL)) NOT BETWEEN ((((((NULL)OR(x'')))AND('-0')))) AND ((-1.239874447E9 COLLATE BINARY)))) GROUP BY CAST(((((((((t1.c16)AND(t1.c0)))OR(t1.c16)))AND(t1.c0)))OR(t1.c0)) AS INTEGER); -- 0ms;
SELECT CAST(((t1.c0)==(t1.c16)) AS BLOB), json_type(((((t1.c65)OR(t1.c0)))OR(t1.c0))), CASE t1.c65 COLLATE NOCASE  WHEN ((t1.c65)>(t1.c16)) THEN t1.c16 WHEN (~ (t1.c0)) THEN (t1.c0 IN ()) WHEN ((((t1.c16)AND(t1.c65)))AND(t1.c16)) THEN (~ (t1.c0)) END, LAST_VALUE('B4qP>oA') OVER (), '[굴' FROM t1; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t1.c16 THEN t1.c65 WHEN t1.c16 THEN t1.c65 WHEN t1.c65 THEN t1.c0 WHEN t1.c16 THEN t1.c0 WHEN t1.c0 THEN t1.c16 WHEN t1.c65 THEN NULL WHEN t1.c16 THEN t1.c16 END) OVER () FROM t1 WHERE (((CAST('(' AS INTEGER)) IS TRUE)); -- 0ms;
