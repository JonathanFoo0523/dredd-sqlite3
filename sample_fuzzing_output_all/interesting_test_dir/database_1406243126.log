-- Time: 2024/06/07 07:28:43
-- Database: database26
-- Database version: 3.40.0
-- seed value: 1406243126
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, matchinfo=fts3); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (1905946287), ('529175646'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='' WHERE (((vt0.c0 IN ())) BETWEEN (((vt0.c0) IS TRUE)) AND ((vt0.c0 IN ()))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-604742724,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 158580773); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=1905946287,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
PRAGMA main.journal_size_limit; -- 1ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (-1e500); -- 6ms;
UPDATE vt0 SET (c0)=(0.07574335254038211); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64330'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'4215'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
DELETE FROM vt0 WHERE ((((((vt0.c0)||(vt0.c0)))OR(((vt0.c0) NOT NULL))))AND((vt0.c0 IN ()))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIEW v0(c0, c1, c2, c3, c4) AS SELECT ALL ((((vt0.c0) IS FALSE)) ISNULL), vt0.c0, CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, -6.04742724E8)))) NOT NULL), NTILE((- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) OVER () FROM vt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''), ('s^m Dt'), (x''); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('-604742724'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''), (0.859825086939494), (0.07574335254038211); -- 1ms;
PRAGMA main.optimize; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('529175646'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('WQs?MjGFy'); -- 5ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (0.5656093465772637), (0.5656093465772637); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE 0.8834813057250958; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-1128641776), ('3E'), (0.21091771177929952); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ' U&q5u,\n'; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.2682026216904464); -- 5ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (1895228294); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (1.905946287E9), (''), (NULL); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-675960137'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 7ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'8793'); -- 2ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x'7dc5'), (x''), (NULL); -- 2ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (''), (NULL), (x''); -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1425927941); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 2ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (' m'); -- 0ms;
DROP VIEW v0; -- 0ms;
PRAGMA threads = -5930758192743231730; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
PRAGMA cache_spill; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 5ms;
PRAGMA automatic_index = false; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT LOWER(CASE vt0.c0  WHEN 0.8834813057250958 THEN vt0.c0 END), (NULL IN ()), CASE 0.7880796485106651 COLLATE NOCASE  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0) NOT NULL) END FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE BINARY)>=(((vt0.c0) NOT NULL))), vt0.c0, (- ((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((vt0.c0) NOTNULL) COLLATE BINARY FROM vt0 WHERE (CAST((((('-+c0+!A')OR(NULL)))OR(1.895228294E9)) AS TEXT)); -- 0ms;
SELECT DISTINCT ((SQLITE_SOURCE_ID())&(((vt0.c0)/(vt0.c0)))), CASE vt0.c0 COLLATE BINARY  WHEN TOTAL(vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN '-1128641776' ELSE vt0.c0 END WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 END, x'85bd' FROM vt0 WHERE (((((x'' IN (x'', x'')), CASE 0.9507974012381972  WHEN -323411172 THEN NULL WHEN 0xffffffffdbf88acc THEN '-693112010' WHEN '775883954' THEN x'f67b4c69' END, x''))<=((((((((((x'')OR(0.746215965541015)))OR(x'2d61')))OR(NULL)))AND('[H')), CASE WHEN '588418481' THEN NULL ELSE '' END, ((5.88418481E8)AND(NULL)))))) LIMIT 588418481 OFFSET 2056419777; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS LAST, CASE ((x'e382') BETWEEN ('1984389454') AND ('pA'))  WHEN MIN(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN (((x'f3ec')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE BINARY END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT '.RH\nJ9' COLLATE BINARY FROM vt0 WHERE ('0.859825086939494'); -- 1ms;
SELECT DISTINCT LEAD(CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) ELSE ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0)) END, (((vt0.c0)!=('0.859825086939494')) IN ()), CASE ((vt0.c0) IS TRUE)  WHEN ((0.050045759920117505)*(vt0.c0)) THEN '-378599837' END) OVER () FROM vt0 WHERE (CAST(CAST(x'' AS REAL) AS TEXT)); -- 0ms;
SELECT MIN(((NULL)%(vt0.c0))), ((((vt0.c0) NOT NULL)) IS FALSE), ((vt0.c0 COLLATE RTRIM)*(((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))), (NOT ((vt0.c0 IN ('2056419777')))), ((((((vt0.c0))<=((NULL)))))>=((LIKE(0.8332931899562674, vt0.c0, '0')))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)GLOB(0.16926423341449137)))GLOB(COUNT(*))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) IS TRUE) COLLATE NOCASE FROM vt0 WHERE (-6.04468532E8); -- 0ms;
SELECT DISTINCT (((vt0.c0)<<(vt0.c0)) IN (COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 ORDER BY UNLIKELY(((0.22642723505550222) IS TRUE)) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(vt0.c0) OVER ( ROWS BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((NULL)GLOB(vt0.c0)))) PRECEDING AND ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0)<>(vt0.c0))) AND (((vt0.c0) IS TRUE))) FOLLOWING EXCLUDE CURRENT ROW), PERCENT_RANK() OVER (), COUNT(CAST(vt0.c0 AS TEXT)) OVER () FROM vt0 WHERE ((((((('-675960137') IS FALSE))AND(CASE 0.40590784012631387  WHEN 0.16624231804549294 THEN NULL WHEN 0Xffffffff8291d40f THEN x'59b7' WHEN x'3878' THEN NULL WHEN '1364862824' THEN x'' WHEN NULL THEN x'' END)))OR(UNICODE(x'9a9d9f8dcfdc'))));SELECT DISTINCT (((- (vt0.c0)))%(((vt0.c0)AND(vt0.c0)))) FROM vt0 WHERE (CAST(((0x7a9279c1)|(x'')) AS INTEGER)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((0.3376317908526665) NOT BETWEEN (vt0.c0) AND (0.7645958439761923)))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) COLLATE NOCASE) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt0 LIMIT 588418481 OFFSET -2079192147; -- 0ms;
SELECT ALL TYPEOF(DISTINCT AVG(vt0.c0)), (- (vt0.c0)) COLLATE BINARY, 0.5180728710935103 FROM vt0 ORDER BY CASE vt0.c0 COLLATE RTRIM  WHEN (+ (vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END LIMIT -675960137; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0 WHERE ((- ((+ ('-675960137'))))); -- 0ms;
SELECT ALL (+ ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)<<(vt0.c0))))<((((vt0.c0)LIKE(vt0.c0))))) FROM vt0 WHERE ((((~ (0Xffffffffd7b5aab7)))=(((0.27839694178767993) NOT BETWEEN (0.050045759920117505) AND (NULL))))) LIMIT 547988671 OFFSET -414876073; -- 0ms;
SELECT CAST((((NULL))<((vt0.c0))) AS NUMERIC), ((vt0.c0)<(CAST(vt0.c0 AS BLOB))), CAST(((vt0.c0) NOT NULL) AS NUMERIC), MIN(((vt0.c0) ISNULL)), ((vt0.c0 COLLATE RTRIM) ISNULL) FROM vt0; -- 0ms;
SELECT CASE (vt0.c0 IN ())  WHEN ((vt0.c0) IS FALSE) THEN 0.49960273181115367 ELSE CAST(vt0.c0 AS BLOB) END FROM vt0 LIMIT -2111270742; -- 0ms;
SELECT DISTINCT SQLITE_VERSION(), TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER (), (((CASE WHEN vt0.c0 THEN vt0.c0 END))=((CAST(vt0.c0 AS INTEGER)))) FROM vt0 WHERE (((('0.5180728710935103')/(NULL)) IN (((NULL) IS FALSE), (('2120325355') NOT BETWEEN (NULL) AND (0.7645958439761923))))); -- 0ms;
SELECT ((vt0.c0 IN (vt0.c0)) IN (((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (CASE CASE x''  WHEN x'' THEN '-604742724' WHEN 0.8332931899562674 THEN 1.905946287E9 WHEN x'ba32' THEN 0x6f558b01 END  WHEN CASE WHEN 0x6b90562f THEN NULL END THEN (((0X515a2768))>((0.16926423341449137))) END) GROUP BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) WHEN (+ (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN NULLIF(vt0.c0, vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5946539604703459)) END HAVING (x'd792df0d' IN ()); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT CASE 0X6f823c88  WHEN vt0.c0 THEN '' ELSE vt0.c0 END), CAST((NOT (vt0.c0)) AS INTEGER), NULL COLLATE RTRIM FROM vt0 WHERE (((2056419777)!=('}8i]h')) COLLATE NOCASE) ORDER BY x'' DESC, (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) LIMIT -323411172; -- 0ms;
SELECT DISTINCT (((((vt0.c0))==((vt0.c0))))-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE) COLLATE NOCASE FROM vt0 WHERE ((((('-1128641776'))!=((0.2794512154358719))) IN ())); -- 0ms;
SELECT ALL (+ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CASE WHEN (('1984389454') BETWEEN (0.8627196554940207) AND (0.11876898075678688)) THEN (('') NOT BETWEEN (0.7880796485106651) AND ('')) WHEN (((('2120325355')OR(NULL)))OR(NULL)) THEN (NOT (0Xffffffffecb9231c)) WHEN (('-571278466')IS('547988671')) THEN NULL COLLATE BINARY END); -- 0ms;
SELECT (NOT (((vt0.c0)*(vt0.c0)))), (((((~ (vt0.c0)))OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)<=(vt0.c0)))), CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM FROM vt0 WHERE (((((NULL)IS(NULL)))/(CAST(NULL AS BLOB)))); -- 1ms;
SELECT ((vt0.c0 COLLATE BINARY) NOT NULL) FROM vt0 WHERE (((((NULL) NOTNULL)) BETWEEN ((NOT (x''))) AND ((((NULL, x'671d', NULL))>((x'da03', x'3b3d', NULL)))))) GROUP BY (NULL IN ()), ((((vt0.c0)/(vt0.c0)))>=(((vt0.c0) IS TRUE))), CAST(((vt0.c0) ISNULL) AS TEXT); -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN ())) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT json_remove(vt0.c0, vt0.c0)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)-(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=(('촦^|u~}I', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END, x'', (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CASE x''  WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 WHERE ('-323411172'); -- 0ms;
SELECT ALL STRFTIME(((vt0.c0)LIKE(vt0.c0)), MIN(vt0.c0), vt0.c0 COLLATE BINARY) FROM vt0 WHERE (((CAST(NULL AS NUMERIC))>>(((NULL)&('auQcn'))))); -- 0ms;
SELECT DISTINCT AVG(((((((((vt0.c0)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE ((((((('-qUw1)')OR(NULL)))OR(NULL)))>>('0.2682026216904464' COLLATE BINARY))) LIMIT 1152785239; -- 0ms;
SELECT ((0.7645958439761923)||(UNICODE(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)==(vt0.c0)))))OR(1222540005)))AND((vt0.c0 IN ()))), ((IFNULL(DISTINCT vt0.c0, vt0.c0))<>((((vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0))))), ((COUNT(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (MIN(vt0.c0))) FROM vt0 WHERE (NULLIF((('') BETWEEN (x'') AND (0.34840150927595415)), CASE WHEN x'600d' THEN 0X1a856b32 ELSE 0.9269754988284346 END)); -- 0ms;
SELECT DISTINCT NULL, ((x'bfb8') BETWEEN ('RD') AND (CASE vt0.c0  WHEN vt0.c0 THEN '260623654' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))!=(((vt0.c0 IN ())))), GROUP_CONCAT(((vt0.c0)=(vt0.c0))) OVER ( ORDER BY (('1680459579') BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'v欲' END))), ((((vt0.c0)-(vt0.c0)))GLOB(((vt0.c0) NOTNULL))) FROM vt0 ORDER BY '-+c0+!A' DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOTNULL) FROM vt0; -- 0ms;
SELECT CHANGES() FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt0.c0 AS REAL)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)|(vt0.c0)) AS TEXT) FROM vt0 WHERE (((x'' COLLATE RTRIM) NOT BETWEEN (((((NULL)AND('1769182134')))AND(NULL))) AND (-1536161033 COLLATE RTRIM))); -- 0ms;
SELECT ((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(CAST(vt0.c0 AS REAL))))AND(CAST(vt0.c0 AS BLOB))))OR((((vt0.c0))==((vt0.c0))))))OR(COUNT(x'29b9'))) FROM vt0 WHERE (((((((((((((1.680459579E9)OR(0.11832340010358344)))AND(0x1ac40800)))OR(NULL)))AND(NULL)))AND(((NULL)+('-852870040')))))OR(HEX(NULL)))) GROUP BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT ALL TOTAL(((-1293424090) BETWEEN (vt0.c0) AND (x''))) OVER () FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)-(vt0.c0)))>(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((- (vt0.c0)))IS(CAST(0.341669387368025 AS NUMERIC))) FROM vt0 NOT INDEXED; -- 0ms;
SELECT ALL CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM FROM vt0 UNION SELECT DISTINCT ((((vt0.c0) IS TRUE)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ('775883954')) FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0)%(vt0.c0)))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((('202192778')AND(x'')))AND('0.49960273181115367')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (((((('T0^S'))<=((0.746215965541015)))) BETWEEN (0.7392758596108531) AND ((((NULL)) NOT BETWEEN ((0.5719027198536006)) AND ((x'27b7')))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)  NULLS LAST, (((((NULL, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  NULLS FIRST, ((TRIM(vt0.c0))IS NOT(vt0.c0)) LIMIT 654392860 OFFSET -1313107324; -- 0ms;
SELECT ALL ((TOTAL(vt0.c0)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ()))) FROM vt0 WHERE ((x'' COLLATE NOCASE IN ())) ORDER BY ((((vt0.c0)<=(1.804621359E9))) NOTNULL), ((json_array_length(vt0.c0))LIKE(((vt0.c0) BETWEEN (NULL) AND (NULL))))  NULLS FIRST; -- 0ms;
SELECT ((((vt0.c0)) BETWEEN (('')) AND ((vt0.c0))) IN ()), ((vt0.c0)/((((vt0.c0))<((vt0.c0))))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (CASE WHEN '-1056279792' THEN 0xffffffffdcd0a547 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0))<((vt0.c0)))) ISNULL) FROM vt0 GROUP BY vt0.c0, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((((((0.4901955834738855)AND('')))AND(vt0.c0))) NOT NULL); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM vt0 LIMIT -2111270742; -- 0ms;
SELECT DISTINCT AVG(((NULL) NOT NULL)) OVER () FROM vt0 WHERE (CAST('' AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT ((CAST(vt0.c0 AS REAL)) IS FALSE), ((NULL)*(LIKELIHOOD(vt0.c0, 0.0019450944632206646))), CUME_DIST() OVER () FROM vt0; -- 1ms;
SELECT ((vt0.c0 IN (vt0.c0)) IN (NULL)) FROM vt0 WHERE (((((NULL)OR('-451054091'))) NOTNULL)); -- 0ms;
SELECT ALL AVG(((vt0.c0) ISNULL)) OVER (), AVG(((vt0.c0) NOTNULL)) OVER (), (((vt0.c0)) BETWEEN ((AVG(vt0.c0))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), ((CAST(vt0.c0 AS NUMERIC))GLOB(((vt0.c0)LIKE(vt0.c0)))), (- (NULL)) FROM vt0; -- 1ms;
SELECT DISTINCT (~ (0xffffffff8a1db657)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((-5.71278466E8, vt0.c0, vt0.c0)) AND ((vt0.c0, 5.29175646E8, vt0.c0))) WHEN ((vt0.c0) NOTNULL) THEN CAST(vt0.c0 AS TEXT) WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END, SUM(vt0.c0), x'' FROM vt0 WHERE (json_array(CAST(NULL AS REAL), CASE '-388876101'  WHEN NULL THEN 'I\rC' WHEN x'' THEN NULL WHEN 0Xffffffff9772e1de THEN 0.5195154402131095 END)) ORDER BY (('') IS TRUE) DESC  NULLS LAST; -- 2ms;
SELECT ALL CAST(vt0.c0 COLLATE BINARY AS REAL), LAST_VALUE(x'') OVER (), DENSE_RANK() OVER ( ORDER BY '1857217613' ASC) FROM vt0 LIMIT 1222540005 OFFSET -2079192147; -- 0ms;
SELECT DISTINCT ((vt0.c0)<>(((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT ALL LAST_VALUE(CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER)) OVER ( ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) DESC), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.017221083337397913)) AS BLOB), (NOT (((vt0.c0)%(vt0.c0)))) FROM vt0 WHERE (IFNULL(DISTINCT (x'' IN ('')), '-56109533' COLLATE BINARY)) LIMIT 444951346 OFFSET 1397374794; -- 0ms;
SELECT ((TYPEOF(DISTINCT vt0.c0))||(((vt0.c0)AND(0.39877384377059033)))) FROM vt0; -- 0ms;
SELECT ALL ((MAX(vt0.c0))OR(((((((((vt0.c0)OR(vt0.c0)))AND('wzMPj0%B?')))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((NOT ((((((((((((('-852870040')OR(0.1881493114962114)))OR(0.6890450773819344)))OR('')))AND(NULL)))AND(-5.90305977E8)))OR(x''))))); -- 0ms;
SELECT DISTINCT CAST(CASE 0.032857672046344044  WHEN vt0.c0 THEN vt0.c0 END AS BLOB) FROM vt0 WHERE ((((CAST(0.0931965629568774 AS REAL)))<>((((NULL) NOTNULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)/(vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) ISNULL))) FROM vt0 WHERE ((~ (CASE '110991992'  WHEN 0.032857672046344044 THEN '' ELSE -9223372036854775808 END))) ORDER BY ((((vt0.c0)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(CAST(0X7647614e AS BLOB))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND (((vt0.c0 IN ())))), COUNT(*) FILTER(WHERE (- (((0xffffffffbcba4b10) IS FALSE)))) OVER (), (NULL IN ()) FROM vt0; -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) ISNULL), ((((vt0.c0)<<(vt0.c0))) BETWEEN ('' COLLATE BINARY) AND (AVG(vt0.c0))), (((((vt0.c0)<(vt0.c0)), '-1128641776', CAST(0.18853048994405985 AS TEXT), MAX(vt0.c0), TRIM(DISTINCT vt0.c0)))>(((NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), GLOB(vt0.c0, vt0.c0), vt0.c0))) FROM vt0; -- 1ms;
SELECT ALL ((((x'0a8810f8') BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((('-1536161033')IS(vt0.c0)))), LAG((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((x''))), CAST(vt0.c0 AS BLOB) COLLATE BINARY, (- (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))) OVER () FROM vt0 WHERE (NULLIF(((0.678280319533635)-(NULL)), ((0.47016843602034264)&(-604468532)))); -- 0ms;
SELECT IFNULL(((vt0.c0)+(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((- ((('dN9')LIKE(0.925125897577113))))); -- 0ms;
SELECT ALL TRIM(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN 'y鑊諌9V*' ELSE vt0.c0 END) FROM vt0 WHERE (((CASE WHEN '271874892' THEN x'' ELSE 1743471094 END) BETWEEN (((0xffffffffb2e7ea26) NOT NULL)) AND ((1.867877121E9 IN (-378599837, NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(vt0.c0, x''), MAX((((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<=(('202192778', vt0.c0, vt0.c0, vt0.c0, vt0.c0)))), '''S}괙a]	wA' FROM vt0; -- 0ms;
SELECT ALL (((NOT ('mA')))IS((vt0.c0 IN (vt0.c0)))) FROM vt0 GROUP BY ((((+ (vt0.c0))))>((((((vt0.c0)OR(NULL)))OR(vt0.c0))))), vt0.c0, CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN '2031767444' THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE (vt0.c0 IN (vt0.c0)) END; -- 0ms;
SELECT DISTINCT (NOT ((vt0.c0 IN ()))) FROM vt0 WHERE (CASE ((x'') NOT NULL)  WHEN NULL COLLATE NOCASE THEN (0.3732589313826198 IN ()) END); -- 0ms;
SELECT DISTINCT (((vt0.c0))<((vt0.c0))) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))||((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT LOWER(DISTINCT ((vt0.c0)%(vt0.c0))), (- (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), CASE load_extension(vt0.c0, vt0.c0)  WHEN x'c5577d43' THEN (vt0.c0 IN ()) END FROM vt0;SELECT NULL FROM vt0 WHERE (((1.857217613E9 COLLATE BINARY) BETWEEN (((0.5033152939261529)<<(x'3157'))) AND ((((0xffffffffbcba4b10)) NOT BETWEEN ((x'')) AND ((x'')))))) GROUP BY (((NOT (vt0.c0))) NOTNULL), ((((((vt0.c0)IS(vt0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END HAVING (~ ((- (vt0.c0)))); -- 4ms;
SELECT (+ ((((vt0.c0, vt0.c0, x'5154')) NOT BETWEEN (('y.', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 LIMIT 460106330 OFFSET 501354292; -- 0ms;
SELECT (- (MIN(vt0.c0))), LAG((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ('-835078877')), NULL, CAST(NULL AS NUMERIC)) OVER (), ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((('') IS TRUE)) AND (((vt0.c0)*(vt0.c0)))) FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN (NOT (vt0.c0)) THEN (vt0.c0 IN ()) END; -- 0ms;
SELECT ALL (((vt0.c0 IN ())) NOT NULL), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))&(((vt0.c0) NOTNULL))), ((LIKE('', vt0.c0, ''''))>(LIKELIHOOD(vt0.c0, 0.6754626005691275))) FROM vt0 WHERE (((((((((((x'4a12')OR(0.5180728710935103)))AND(NULL)))OR('-1128641776')))AND('0.8332931899562674'))) BETWEEN (('n\r' IN (1999584695))) AND (((0.8273660478630753) NOT NULL)))); -- 0ms;
SELECT ALL (((((vt0.c0))<((vt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((NOT (vt0.c0)))), CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)=(vt0.c0)) WHEN ABS(DISTINCT vt0.c0) THEN vt0.c0 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END, CASE ((vt0.c0)||(vt0.c0))  WHEN SUM(vt0.c0) THEN 0.06304127376894908 COLLATE NOCASE ELSE GROUP_CONCAT(vt0.c0) END FROM vt0 WHERE (CAST((((x'')) NOT BETWEEN (('')) AND (('414323849'))) AS BLOB)) ORDER BY (((((vt0.c0 IN ()))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND((((vt0.c0))>=((vt0.c0)))));SELECT (((('0.18853048994405985')<(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (((vt0.c0, 523570338, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), AVG(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0)IS(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) FROM vt0 WHERE ((('218513235') ISNULL) COLLATE BINARY) GROUP BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE HAVING MIN((vt0.c0 IN ())); -- 0ms;
SELECT DISTINCT (- (vt0.c0)) FROM vt0 WHERE ((((0x6feea21e, ' M', '')) BETWEEN ((CASE WHEN '-1911384350' THEN x'3a544142' END, ((x'8e46') BETWEEN ('0.21091771177929952') AND (0.07574335254038211)), 0Xd063f53)) AND ((((((NULL)AND(0.997031339112457)))OR(x'')), (- (NULL)), ((((0.925125897577113)AND('')))OR(0.43742339829858823)))))); -- 0ms;
SELECT COUNT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE ((('-1914705460')*(x'ba31')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0)) IS TRUE) FROM vt0 WHERE ((((0.7606094236920933) ISNULL) IN ())); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((DATE(vt0.c0, vt0.c0, vt0.c0)))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, '1275775236' FROM vt0 WHERE (HEX(((-803917918)IS NOT('-1914705460')))); -- 0ms;
SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x43f46a52 THEN vt0.c0 ELSE '260623654' END))>((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC; -- 0ms;
SELECT AVG(vt0.c0) OVER (), GROUP_CONCAT((((vt0.c0))>=(('-378599837')))) OVER (), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) IN ()) FROM vt0 WHERE ((1984389454 IN ())); -- 0ms;
SELECT DISTINCT ((CAST(0.3250238287614404 AS REAL)) NOT BETWEEN ((0.4263206800519618 IN ())) AND (((vt0.c0)>=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((- (0.4879958492226605)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 ORDER BY (- (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC; -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL COUNT(*) OVER (), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-((+ (vt0.c0)))), AVG(((vt0.c0)/(vt0.c0))) FROM vt0 WHERE (x'' COLLATE RTRIM) GROUP BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0)<=(vt0.c0)))) HAVING (((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((CAST(0.12841044718204675 AS BLOB), (vt0.c0 IN ()), CAST(vt0.c0 AS REAL))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (- (vt0.c0))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((NULL IN ('-604742724', NULL))) BETWEEN (CASE WHEN '899658343' THEN NULL ELSE NULL END) AND ((1.857217613E9 IN ())))); -- 0ms;
SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN -8.03917918E8 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), AVG(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)/(vt0.c0)))>=((NOT (vt0.c0)))) FROM vt0 WHERE (((CAST(x'01e2' AS TEXT))||(1867877121 COLLATE BINARY))); -- 0ms;
SELECT ALL ((('g' IN ()))LIKE(COUNT(*))) FROM vt0 EXCEPT SELECT DISTINCT ((((vt0.c0) IS FALSE))&((+ (vt0.c0)))) FROM vt0 WHERE ((~ (NULL))); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST; -- 0ms;
SELECT CAST(CAST(vt0.c0 AS INTEGER) AS TEXT) FROM vt0 LIMIT -610130619; -- 0ms;
SELECT ALL ((SUM('-852870040')) BETWEEN (0.6579126531868621) AND ((NOT (vt0.c0)))) FROM vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS TEXT)) OVER (), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (MIN(vt0.c0)) AND (((vt0.c0) NOTNULL))), vt0.c0, NULL, (((((vt0.c0))==((vt0.c0))))LIKE(IFNULL(vt0.c0, vt0.c0))) FROM vt0 WHERE ((((-1.977764265E9 IN ('')))||((('')-('F}l첵MAI'))))) GROUP BY json_array(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, (vt0.c0 IN (x'', vt0.c0)), UPPER(vt0.c0), LIKELIHOOD(vt0.c0, 0.20080215414807534), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) HAVING CASE vt0.c0  WHEN ((vt0.c0) NOT NULL) THEN NULL ELSE (vt0.c0 IN ()) END ORDER BY ((((NOT (vt0.c0))))>((((vt0.c0) NOTNULL))))  NULLS LAST; -- 3ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)%(vt0.c0)) THEN vt0.c0 WHEN TYPEOF(DISTINCT vt0.c0) THEN (NOT (vt0.c0)) WHEN x'a4c9cf00' THEN vt0.c0 END FROM vt0; -- 1ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(COUNT(vt0.c0))))OR(CASE vt0.c0  WHEN 0xffffffff8291d40f THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), CAST(vt0.c0 COLLATE BINARY AS NUMERIC), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS TRUE) FROM vt0 WHERE ((((x'c575')) BETWEEN ((CAST(x'' AS REAL))) AND ((0Xffffffffecb9231c)))); -- 0ms;
SELECT DISTINCT NTH_VALUE(LOWER((vt0.c0 IN (vt0.c0))), ((((vt0.c0)IS NOT(1.895228294E9))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ('219973650'))) OVER ( ORDER BY (~ (vt0.c0))) FROM vt0;SELECT DISTINCT MIN(COUNT((~ (vt0.c0)))) FROM vt0;SELECT ALL MIN(((vt0.c0)IS(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE (CASE WHEN (+ (NULL)) THEN (('202192778') NOT BETWEEN (0.923433828272637) AND (NULL)) ELSE (0X512e1c2f IN ()) END) LIMIT -378599837; -- 1ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS NUMERIC))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, 0.49960273181115367, x''))))))AND((((vt0.c0))>((x''))))), CASE ((x'd6be')LIKE(vt0.c0))  WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE BINARY END, ((((vt0.c0)%(vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((NULL))>=((ABS(DISTINCT vt0.c0)))) FROM vt0 LIMIT -1859578674 OFFSET 992097081; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((NULLIF(DISTINCT vt0.c0, vt0.c0))AND(x'')))AND(MIN(vt0.c0))), LAG(CAST(CASE vt0.c0  WHEN 0 THEN vt0.c0 END AS NUMERIC), (((NOT (vt0.c0)))>>(json_valid(vt0.c0))), (- (vt0.c0))) OVER (), CASE WHEN x'' THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END FROM vt0 WHERE (((((((((((((((((x'')AND(0.20514891903853216)))AND('1630358883')))OR(0.17057477146156252)))OR('1140091474')))AND(((0xffffffff822890aa) NOTNULL))))OR(((NULL)<<(x'')))))OR((+ ('''S}괙a]	wA')))))OR(((0.5103983062544354)<=(1.870806152E9))))); -- 1ms;
SELECT DISTINCT (((NULL IN ()))>=(vt0.c0)), ((vt0.c0)AND(vt0.c0 COLLATE NOCASE)), (((NOT (NULL))) ISNULL), 0.5196688654709843 COLLATE RTRIM, (((((x'eeec', vt0.c0, vt0.c0, vt0.c0, vt0.c0))!=(('0.9269754988284346', 0.8678865263889762, vt0.c0, vt0.c0, vt0.c0)))) NOTNULL) FROM vt0 WHERE ((((((-8.03917918E8)) BETWEEN ((0.6257530754673646)) AND ((0.20608231616603545))))=(((x'')LIKE(1.361976367E9))))); -- 4ms;
SELECT CAST((((vt0.c0, vt0.c0, 0.024676297863437058)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB) FROM vt0; -- 0ms;
SELECT (((+ (vt0.c0))) BETWEEN (NULL) AND (json(vt0.c0))) FROM vt0 WHERE (0.9361995731398399); -- 0ms;
SELECT ALL TOTAL((- (vt0.c0))) FROM vt0 LIMIT -1528303802 OFFSET 104890053; -- 0ms;
SELECT DISTINCT '', ((((((((AVG(vt0.c0))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0)!=(vt0.c0)))))OR(((x'') ISNULL))))AND(((vt0.c0) NOTNULL))), ((vt0.c0)OR(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (CASE WHEN x'' THEN (((NULL, 0.14252023500747746, x''))>=(('', 'wzMPj0%B?', x'22ca'))) END); -- 0ms;
SELECT IFNULL(DISTINCT -3.23411172E8, MAX(vt0.c0, vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE COLLATE NOCASE, (((-1859578674)) BETWEEN ((((vt0.c0)<<(vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) FROM vt0 WHERE ((((('1895228294') ISNULL)) BETWEEN (TYPEOF(NULL)) AND ((((('0.4879958492226605')AND('L7S.H')))AND(0xffffffffe1ea011b))))) LIMIT -1648071325; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))%(COUNT(NULL))), (NOT ((vt0.c0 IN ()))), ((TOTAL(vt0.c0))*(SQLITE_COMPILEOPTION_GET(vt0.c0))) FROM vt0 WHERE ((('-1017172991')IS NOT('-1911384350')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((TOTAL_CHANGES()) BETWEEN (CASE WHEN vt0.c0 THEN 0.4879958492226605 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (AVG(vt0.c0))), NTH_VALUE(DATE(vt0.c0, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), '10248562'), ((GLOB(vt0.c0, vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((0.9507974012381972)<(vt0.c0))))) OVER (), 0.4211244445789002 FROM vt0 WHERE ((('' COLLATE NOCASE) ISNULL));SELECT DISTINCT NULL FROM vt0 WHERE (CASE 0.20276967433395088  WHEN x'' THEN -1 ELSE '2120325355' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT 0.024676297863437058) FROM vt0 LIMIT -414876073; -- 0ms;
SELECT ALL (SUM(vt0.c0) IN (((vt0.c0) NOT BETWEEN (-8.5287004E8) AND (vt0.c0)), vt0.c0 COLLATE NOCASE)) FROM vt0 LIMIT 1152785239 OFFSET 202192778; -- 0ms;
SELECT ALL (~ (vt0.c0)), ((CASE WHEN vt0.c0 THEN vt0.c0 END)<(IFNULL(DISTINCT vt0.c0, vt0.c0))), (NULL IN ()), UNLIKELY(DISTINCT (- (vt0.c0))), CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))=((vt0.c0))) END FROM vt0 WHERE ((NULL IN ())); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 GROUP BY (((+ (vt0.c0)))&(CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE ((((('2097794229') BETWEEN (x'') AND (1529565583))) NOT NULL)); -- 0ms;
SELECT DENSE_RANK() OVER ( ORDER BY ((((vt0.c0)==(vt0.c0))) NOTNULL)), NULL COLLATE BINARY, ((vt0.c0)||(NULL)) COLLATE BINARY FROM vt0 WHERE (((CASE WHEN NULL THEN -776680644 ELSE NULL END) NOTNULL)); -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '110991992' ELSE vt0.c0 END IN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (((((1.0248562E7)=(-4.14876073E8))) ISNULL)) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM COLLATE BINARY ASC  NULLS FIRST, vt0.c0; -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN ())) OVER () FROM vt0; -- 0ms;
SELECT LEAD(((vt0.c0)*((vt0.c0 IN ()))), ((json_valid(0.6557876309513095))>(vt0.c0 COLLATE NOCASE)), CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING), NTH_VALUE((vt0.c0 IN ()), (((- (vt0.c0))) ISNULL)) OVER (), TYPEOF(DISTINCT x'') FROM vt0 WHERE (CAST(x'7e76f378' COLLATE RTRIM AS REAL)); -- 1ms;
SELECT ((((vt0.c0)OR(((vt0.c0)==(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))), CASE ((vt0.c0)AND(vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0)||(0.5654287257695596)) ELSE MAX(vt0.c0) END, (+ (RTRIM('-526885283'))) FROM vt0 WHERE (((x'e0af')||(0.12169432468409458)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN ())) OVER (), FIRST_VALUE(((0.004483303130468075)IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) OVER (), (CAST(vt0.c0 AS TEXT) IN ()) FROM vt0 GROUP BY ((((vt0.c0) NOT BETWEEN ('202192778') AND (vt0.c0))) ISNULL), vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END COLLATE NOCASE HAVING ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('Ef') AND (vt0.c0)); -- 0ms;
SELECT DISTINCT MAX((NOT (vt0.c0))) FROM vt0 GROUP BY (((NULL IN (vt0.c0)))%(vt0.c0)); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE, (((('-1')*(NULL))) ISNULL), (- ((((x''))<((vt0.c0))))), COUNT(((vt0.c0) IS TRUE)), ((vt0.c0)<>('-2111270742')) COLLATE RTRIM, (CAST(NULL AS BLOB) IN ()), SUM(CAST(vt0.c0 AS REAL)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0))<=((vt0.c0))))>(vt0.c0)) FROM vt0 GROUP BY CASE IFNULL(vt0.c0, -2.111270742E9)  WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END THEN (vt0.c0 IN (vt0.c0)) ELSE (~ (vt0.c0)) END HAVING ((((SUM(vt0.c0))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))); -- 1ms;
SELECT DISTINCT UNLIKELY('444951346') FROM vt0 GROUP BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), ((vt0.c0) NOT NULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, ABS(vt0.c0)))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE), CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN LIKELY(DISTINCT vt0.c0) END ORDER BY ((vt0.c0 COLLATE RTRIM) ISNULL) ASC; -- 0ms;
SELECT DISTINCT CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)*(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0, vt0.c0, 0.42879999645460964, 0Xffffffffe2376d55, 0.21466489016933032))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) THEN MAX(vt0.c0) WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE ((('' IN ()) IN ())) GROUP BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) HAVING ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(((NULL)|(NULL)))) ORDER BY ((((((((vt0.c0)OR(vt0.c0 COLLATE RTRIM)))OR((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN '1]' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS TEXT))) DESC  NULLS FIRST; -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE) BETWEEN (x'11dd') AND (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((HEX('''S}괙A]	WA'))>(((NULL)||('1752909637'))))) GROUP BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM LIMIT -110921894 OFFSET 878525316; -- 1ms;
SELECT DISTINCT CAST('-748338185' AS BLOB) FROM vt0; -- 0ms;
SELECT ((-1850095348)%((vt0.c0 IN ()))), ((vt0.c0)AND(vt0.c0)) COLLATE RTRIM, RTRIM(TYPEOF(vt0.c0)), SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) OVER (), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((CASE WHEN x'' THEN '678989071' ELSE x'' END) BETWEEN (((((((((-2.104372209E9)AND(0xffffffffe96f0663)))AND(449054720)))OR(0.8305449480263164)))OR('110991992'))) AND (CAST('1175307355' AS BLOB)))); -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))-((vt0.c0 IN ()))) FROM vt0 WHERE ((~ ((NOT ('cJN	\nuQ'))))); -- 0ms;
SELECT ALL ((((CAST(x'' AS TEXT))OR(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0) IS TRUE))) FROM vt0 WHERE (CASE x''  WHEN -1953751040 THEN NULL END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((vt0.c0)<=(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (SUBSTR('>e?', CAST('-323411172' AS BLOB))) GROUP BY ((+ (vt0.c0)) IN ((~ (vt0.c0)))) HAVING (((((vt0.c0)<=(vt0.c0))))!=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))); -- 0ms;
SELECT DISTINCT LTRIM(vt0.c0, MAX(NULL)) FROM vt0; -- 0ms;
SELECT CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS TEXT) ELSE AVG(vt0.c0) END, ((((vt0.c0) NOT NULL)) IS TRUE), (((NULL)==(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 NOT INDEXED WHERE (x'') ORDER BY (((vt0.c0 IN (vt0.c0))) BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC; -- 0ms;
SELECT DISTINCT TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) FROM vt0 WHERE (CASE WHEN ((x'') BETWEEN (x'') AND ('1321185440')) THEN x'ae43' COLLATE NOCASE WHEN ((x'')|('1857217613')) THEN (('-2138237186')|('')) WHEN ((0.15177703728576508) NOT BETWEEN (0.34018082924348114) AND ('')) THEN INSTR('635792966', '1623737778') ELSE x'' END); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<<(vt0.c0))) IS FALSE), GROUP_CONCAT(vt0.c0), ((((vt0.c0)=(NULL))) NOT BETWEEN (((('0.5656093465772637', vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (NULL) ORDER BY (~ (vt0.c0)) COLLATE RTRIM  NULLS LAST, vt0.c0 ASC, ((CAST(0.4099482727399594 AS INTEGER)) IS FALSE)  NULLS LAST; -- 1ms;
SELECT DISTINCT ((vt0.c0)<<(vt0.c0)) COLLATE RTRIM, ((vt0.c0 COLLATE NOCASE)!=(COUNT(*))), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (vt0.c0) AND ((~ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT CASE WHEN (NOT (NULL)) THEN COUNT(vt0.c0) END FROM vt0 WHERE ('10248562'); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT NULL) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((((x'eb9c')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND ((- (vt0.c0)))) FROM vt0 WHERE (ABS(DISTINCT (~ (NULL)))); -- 0ms;
SELECT CASE (((vt0.c0))!=((vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0; -- 0ms;
SELECT SUM((~ (vt0.c0))), ((TRIM(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE END FROM vt0; -- 1ms;
SELECT ALL (LIKELIHOOD(vt0.c0, 0.5200930491728162) IN ()) FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END AS TEXT); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0 WHERE ('0.17057477146156252' COLLATE BINARY); -- 0ms;
SELECT ALL -1425927941 FROM vt0 WHERE (CAST(CAST(0xffffffffc0b9a63e AS NUMERIC) AS TEXT)) GROUP BY ((((vt0.c0 IN ())))>=((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))); -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(((((vt0.c0)|(0.8559056076000608)))+(x'')), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))/(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) OVER (), (5.47988671E8 IN (CAST(vt0.c0 AS TEXT))), (((CAST(vt0.c0 AS BLOB), vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(NULL))))>=((((((vt0.c0)OR(vt0.c0)))OR(NULL)), (~ (0.5654287257695596)), ((vt0.c0)<=(vt0.c0))))) FROM vt0; -- 1ms;
SELECT ALL LEAD(((CAST(vt0.c0 AS REAL)) BETWEEN ((((((((('')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (0.4263206800519618)), CASE WHEN (NOT (vt0.c0)) THEN -1.850095348E9 END, ((vt0.c0 COLLATE RTRIM)<(vt0.c0 COLLATE NOCASE))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS TRUE) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) IS FALSE), ((vt0.c0) ISNULL) COLLATE BINARY, NULL FROM vt0 WHERE ((((((NULL)) BETWEEN ((x'')) AND ((x'')))) NOTNULL)) GROUP BY ((((((((x'')AND((+ (vt0.c0)))))AND(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0)*(vt0.c0)))))OR(((((((((vt0.c0)OR('	%')))AND('775883954')))OR(vt0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) IS TRUE))), (((((((((NOT (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))OR(((vt0.c0) IS FALSE))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0)), (((+ (vt0.c0)))>=(((vt0.c0) ISNULL))), ((CASE vt0.c0  WHEN 2.60623654E8 THEN vt0.c0 ELSE vt0.c0 END)&(((vt0.c0) NOT NULL))) HAVING (~ (((((((((vt0.c0)AND(vt0.c0)))OR(0.6241448382562504)))AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
SELECT ALL vt0.c0 COLLATE NOCASE FROM vt0 WHERE (CAST(((NULL)>(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST(CAST('271874892' AS TEXT) AS INTEGER)) GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'2073' THEN vt0.c0 WHEN vt0.c0 THEN '1281388753' ELSE vt0.c0 END) NOT BETWEEN (LOWER(vt0.c0)) AND ((((vt0.c0))>((vt0.c0))))); -- 0ms;
SELECT CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM vt0 ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))OR((NOT (vt0.c0)))))AND((NOT (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))))AND(TRIM(vt0.c0, vt0.c0))) ASC  NULLS LAST, ((((0.1142447766447946) IS FALSE))AND(CAST(x'' AS REAL))) DESC, ((TYPEOF(vt0.c0))=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (TOTAL_CHANGES()) AND (((vt0.c0)<=(vt0.c0)))) FROM vt0 WHERE (((NULL)IS(5.47988671E8))); -- 0ms;
SELECT ALL ((NOT (vt0.c0)) IN ()) FROM vt0 WHERE (UPPER(DISTINCT x'' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT x'bfe1' FROM vt0 GROUP BY HEX(DISTINCT ((vt0.c0)IS NOT(vt0.c0))) HAVING (((0.8017695267428576, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) AND (((('1894570810')AND(vt0.c0)), CAST(vt0.c0 AS INTEGER), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))); -- 0ms;
SELECT (((vt0.c0)>(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR((- (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), LTRIM(((vt0.c0) IS TRUE)), CAST((- (vt0.c0)) AS TEXT), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)==(NULL)), UPPER(vt0.c0), vt0.c0)) AND ((((vt0.c0)!=(vt0.c0)), vt0.c0, vt0.c0 COLLATE BINARY))), (((((((vt0.c0))!=((vt0.c0))))OR(CAST(vt0.c0 AS TEXT))))AND(0.9185243484909718)) FROM vt0 WHERE (json_patch((('iqN') NOT NULL), '1905946287')); -- 0ms;
SELECT DISTINCT TOTAL((vt0.c0 IN (vt0.c0))) OVER () FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL json_quote(COUNT(*)), (((vt0.c0 IN ())) IS TRUE), COUNT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT ((MIN(vt0.c0)) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL CAST(vt0.c0 AS BLOB) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT LAG(((CAST(vt0.c0 AS TEXT))IS(((vt0.c0) NOT NULL))), ((((vt0.c0) IS TRUE))<=((- (vt0.c0)))), (vt0.c0 IN ()) COLLATE RTRIM) OVER (), ((((vt0.c0)AND((((vt0.c0))<=((vt0.c0))))))OR(GROUP_CONCAT(0x7f8f1fa9))), (NOT ((NOT (vt0.c0)))) FROM vt0 WHERE (TIME(json_quote(x''), ((0Xffffffff8c485a79)+(']jZ9ZA⬲-')), CASE WHEN NULL THEN NULL WHEN x'' THEN 0.10970418831905981 WHEN 0.7808098033011264 THEN 0.48392180179114175 ELSE x'' END)) GROUP BY ((((vt0.c0)IS NOT(vt0.c0)))>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));SELECT '', (((+ (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)<<(vt0.c0)))), ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()), GROUP_CONCAT(LAST_INSERT_ROWID()) FILTER(WHERE ((CAST('0.06304127376894908' AS NUMERIC)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (((((x'89b9')AND(vt0.c0)))OR(vt0.c0))))) OVER (), SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) FROM vt0 WHERE (((('Gs>'))>((NULL))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((vt0.c0)|(vt0.c0)) COLLATE NOCASE, CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL), TOTAL(vt0.c0) FROM vt0 WHERE ((((635792966, NULL, -584130815))<=((0.905376346306335, x'', 0.07133707445310788))) COLLATE BINARY); -- 0ms;
SELECT CASE WHEN (vt0.c0 IN ()) THEN SUM(x'') WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) END FROM vt0 WHERE (((CAST('1065139258' AS TEXT))>>('' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), FIRST_VALUE(((((((-1121944841)/(vt0.c0)))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) IS FALSE)))) OVER (), (((vt0.c0)) BETWEEN ((((x'')<<(vt0.c0)))) AND ((SUM(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL MIN(CAST(vt0.c0 AS REAL)), ((vt0.c0)IS NOT(CAST(vt0.c0 AS INTEGER))), (- (AVG(vt0.c0))) FROM vt0 WHERE ((((- (''))) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'z.' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY FROM vt0 WHERE ((((((('')GLOB('x*')))AND(CASE x'7823f9dd'  WHEN 6.5439286E8 THEN NULL ELSE NULL END)))OR(((x'') NOT NULL)))) ORDER BY ''  NULLS FIRST, ((vt0.c0)<(x'')) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) FROM vt0 WHERE (((CASE WHEN NULL THEN x'' ELSE 0.6643325098346118 END) NOT BETWEEN ((((x'', x'', NULL))<>((x'', -1249491521, '0.20514891903853216')))) AND (x'fb63'))) ORDER BY ((0.5468508488512479)<((- (vt0.c0)))); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS INTEGER)) BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0)), (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0)OR(vt0.c0)))))OR(vt0.c0)))OR(((x'e1ae') BETWEEN (vt0.c0) AND (vt0.c0)))), CUME_DIST() OVER () FROM vt0 WHERE (((((NULL) BETWEEN ('dT') AND (0.306239149912368))) ISNULL)); -- 0ms;
SELECT ALL ((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(SUM(vt0.c0))), MIN(((vt0.c0) NOT NULL)) COLLATE NOCASE, vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(NULLIF(DISTINCT vt0.c0, vt0.c0)) FROM vt0 GROUP BY ('' IN ()) LIMIT -1056279792 OFFSET -1160801496; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)AND((vt0.c0 IN ()))))OR(GROUP_CONCAT('-415440895'))))AND(CAST(NULL AS BLOB))))OR(0xffffffffd6aff336)) FROM vt0 WHERE (((COALESCE(DISTINCT x'', 0.9109222722807598)) NOTNULL)) LIMIT -100433696; -- 0ms;
SELECT ALL CAST((('<~') IS TRUE) AS INTEGER) FROM vt0 WHERE (((((+ (NULL)), (((((((('r')AND(0.4866286659536282)))AND(9.92097081E8)))AND(NULL)))AND('')), CASE WHEN NULL THEN x'' WHEN '-323411172' THEN x'' WHEN NULL THEN x'1cd2' ELSE 0.8058807448006309 END))<=(((NOT ('')), json_remove(0.0031853801978366514, '0.0'), '-1671877897' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (- (GROUP_CONCAT(vt0.c0))) FROM vt0; -- 0ms;
SELECT NTILE((((('1752909637')IS NOT(vt0.c0))) NOT BETWEEN (vt0.c0) AND ('{y'))) OVER ( ORDER BY CAST('1754382925' AS INTEGER)  NULLS LAST) FROM vt0;SELECT DISTINCT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), (((vt0.c0)) BETWEEN ((((vt0.c0)<(vt0.c0)))) AND (((vt0.c0 IN ())))), (+ ((- (vt0.c0)))) FROM vt0 LIMIT 444951346; -- 1ms;
SELECT (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), x'e772', ((((vt0.c0)AND('-1948879023')))AND(vt0.c0))))<(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.4989728722069767))), vt0.c0, ((vt0.c0)-(vt0.c0))))) FROM vt0 WHERE (CAST(((0.6838717876648126) IS TRUE) AS BLOB)); -- 0ms;
SELECT LIKELY(CAST(vt0.c0 AS INTEGER)) FROM vt0 WHERE (ROUND(((0.8426080109685782) NOTNULL), CAST(0.4109745542748835 AS INTEGER))); -- 0ms;
SELECT DISTINCT COUNT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER () FROM vt0 WHERE (CAST(x'ade8' AS NUMERIC) COLLATE RTRIM) ORDER BY ((('-148842723' IN (vt0.c0, vt0.c0)))||(((((vt0.c0)AND(NULL)))OR(vt0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT vt0.c0) FROM vt0 WHERE ((((NOT (0.1331925597622886))) BETWEEN (x'') AND ('*s*PU]'))) ORDER BY NULL  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))<=(json_type(vt0.c0))) ASC; -- 0ms;
SELECT ALL ((((0.6548633484978467)/(vt0.c0))) NOT NULL) FROM vt0; -- 1ms;
SELECT (((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((x''))))+(CAST(NULL AS REAL))) FROM vt0 WHERE ((NOT (((0.7635346257904428) BETWEEN (x'5cf5') AND ('nj'))))); -- 0ms;
SELECT ALL CAST(((vt0.c0) ISNULL) AS NUMERIC) FROM vt0 LIMIT -110921894 OFFSET -835078877; -- 0ms;
SELECT CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB) FROM vt0 WHERE (('-qUw1)' IN ()) COLLATE RTRIM); -- 0ms;
SELECT ALL x'' FROM vt0 WHERE (((CAST(NULL AS TEXT)) NOT NULL)); -- 0ms;
SELECT ((((vt0.c0 COLLATE RTRIM)OR(highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((((+ (NULL))) IS TRUE)) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))  NULLS LAST, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE DESC; -- 0ms;
SELECT DISTINCT SUM((((vt0.c0, NULL, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))), ((((((((((vt0.c0)GLOB(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0)!=(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(COALESCE(NULL, 0.735306038865037, vt0.c0, vt0.c0))) FROM vt0 WHERE ((((((-1953751040, 1.281388753E9, 0.9361995731398399, x'', x'5c8d')) BETWEEN ((1.32118544E9, x'5a9c', 'SG?_ dg''', '0.923433828272637', x'')) AND ((x'', x'', x'', x'', ''))))/(CASE 've\}'  WHEN x'77a0' THEN x'4edc' WHEN x'' THEN '-1924317144' WHEN 2.02192778E8 THEN x'' ELSE 0.8666073836860002 END))) ORDER BY CASE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END DESC, '-504757989' DESC LIMIT -110921894; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) IS FALSE))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(LAST_INSERT_ROWID())) FROM vt0; -- 0ms;
SELECT ((COUNT(*))<<(((vt0.c0)!=(vt0.c0)))), (((CAST(vt0.c0 AS NUMERIC)))<((0Xffffffffad2376ab))), ('' IN (IFNULL(DISTINCT vt0.c0, vt0.c0), vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CASE WHEN ((((0.16537883771013384)AND(x'')))AND(NULL)) THEN (('-610130619')<<(x'8c1ae615')) WHEN x'' COLLATE RTRIM THEN (NOT (0.31910625809913384)) WHEN 0x5d941ccd THEN CAST(x'' AS BLOB) END) ORDER BY (+ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT (+ (((vt0.c0)>>(vt0.c0)))) FROM vt0 WHERE ('dz') GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))IS NOT(SQLITE_COMPILEOPTION_GET(vt0.c0))); -- 0ms;
SELECT DISTINCT vt0.c0, (~ (((vt0.c0) NOT NULL))), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0))!=((vt0.c0)))) AND (((vt0.c0)==(vt0.c0)))), (+ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), (NOT (x'')) FROM vt0; -- 0ms;
SELECT ALL CAST(((((NULL)AND(vt0.c0)))OR(vt0.c0)) AS TEXT), '1743471094', NTILE(((SQLITE_COMPILEOPTION_USED(vt0.c0)) BETWEEN ((('-1754078754')>=(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) OVER ( PARTITION BY CAST(json_type(vt0.c0) AS INTEGER), (~ (((vt0.c0)GLOB(vt0.c0))))) FROM vt0;SELECT ((((vt0.c0) ISNULL))GLOB(COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) FROM vt0 WHERE (CASE WHEN (NULL IN ()) THEN (~ ('306733548')) WHEN CASE WHEN 0xffffffffcf8a7368 THEN 0x5b8bfb8c ELSE '' END THEN (~ ('-610130619')) WHEN ((NULL)|(x'')) THEN NULL COLLATE NOCASE ELSE (((0X6f558b01)) NOT BETWEEN (('n\r')) AND ((x''))) END) LIMIT -1475951401; -- 0ms;
SELECT ALL (~ ('-1128641776')) FROM vt0 WHERE (((((NULL) NOT BETWEEN (x'bde5') AND ('?[壜J{.1aꕇ')))GLOB((+ (0.5648827667458762))))); -- 0ms;
SELECT ALL AVG(CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) OVER ( ORDER BY (NOT (((vt0.c0)AND(vt0.c0)))) ASC, ((ROUND(vt0.c0, vt0.c0)) BETWEEN (NULLIF(vt0.c0, vt0.c0)) AND (0.8834813057250958)) DESC  NULLS FIRST, ((((vt0.c0) NOT NULL)) BETWEEN (CASE x''  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)) ASC RANGE BETWEEN ((vt0.c0) IS TRUE) COLLATE NOCASE FOLLOWING AND  CURRENT ROW EXCLUDE CURRENT ROW), (((((((((vt0.c0 IN (NULL)))OR(NULL)))OR((((vt0.c0))!=((vt0.c0))))))OR((((vt0.c0))=((vt0.c0))))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))), (((vt0.c0 COLLATE RTRIM))>(((((vt0.c0, '1583512659', vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))))), vt0.c0, (((CAST(1726432954 AS NUMERIC), ((vt0.c0) IS FALSE), NULL))<(((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), CAST(vt0.c0 AS REAL), ((vt0.c0)<=(vt0.c0))))) FROM vt0 WHERE ((((0.36541937506320055)-(NULL)) IN (((NULL)OR(0.6769258438422098)))));SELECT DISTINCT CUME_DIST() OVER (), CASE ((vt0.c0)AND(vt0.c0))  WHEN CAST(NULL AS BLOB) THEN vt0.c0 COLLATE NOCASE END, ((((vt0.c0)-(vt0.c0))) IS FALSE) FROM vt0 WHERE (CASE WHEN ((-1.648071325E9)%('0.11832340010358344')) THEN ((NULL) BETWEEN (x'') AND ('-388876101')) ELSE (~ (552702322)) END); -- 4ms;
SELECT DISTINCT CASE (~ (vt0.c0))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN MIN(vt0.c0) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<(vt0.c0)) THEN AVG(vt0.c0) ELSE CASE WHEN '*l' THEN vt0.c0 END END FROM vt0 WHERE (((CASE WHEN 0xffffffffdba22545 THEN '' ELSE NULL END)>>((((('0.5180728710935103')OR('')))OR('-1132534882'))))) GROUP BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((((((((IFNULL(vt0.c0, x''))AND(((vt0.c0)<(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)-(vt0.c0)))) FROM vt0 GROUP BY CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)==(vt0.c0)) END; -- 2ms;
SELECT DISTINCT CAST((((vt0.c0))<=((vt0.c0))) AS REAL) FROM vt0 WHERE ('	%'); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((x'e262')&('z''U绅')))+(((x'b03f') IS TRUE)))); -- 0ms;
SELECT ALL AVG(COUNT(*)) FROM vt0 WHERE (((CASE WHEN 0.5090488213070732 THEN x'' WHEN 's.xczJ_Y' THEN '1752909637' WHEN 0.4086712679908724 THEN x'' ELSE 0.34018082924348114 END) ISNULL));SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)OR(vt0.c0)) FROM vt0 WHERE (CASE 0.6117907799053586 COLLATE NOCASE  WHEN NULL COLLATE BINARY THEN (((NULL))<>((0xfffffffffca7d623))) WHEN (('')GLOB(NULL)) THEN ((NULL) BETWEEN (NULL) AND (NULL)) WHEN ((x'') BETWEEN (0.05062969377107651) AND ('438765648')) THEN (('}7b,cR酕')=(280804619)) ELSE ((NULL)||('-1623091241')) END); -- 1ms;
SELECT DISTINCT ((((vt0.c0)IS(vt0.c0)))OR((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))))), (vt0.c0 COLLATE NOCASE IN ()), '-1850095348' COLLATE NOCASE FROM vt0 GROUP BY vt0.c0; -- 0ms;
SELECT UNLIKELY(NULLIF(vt0.c0, vt0.c0)) FROM vt0 WHERE ((x'' COLLATE RTRIM IN ('' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CASE WHEN (- (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END FROM vt0 WHERE ((((+ (NULL)))%('0.0931965629568774' COLLATE RTRIM))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER); -- 0ms;
SELECT COUNT(*) FILTER(WHERE (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0) NOT NULL))))) OVER () FROM vt0 ORDER BY ((json_remove(vt0.c0, vt0.c0)) BETWEEN ((NOT (vt0.c0))) AND ((- (vt0.c0)))) DESC  NULLS LAST;SELECT vt0.c0 FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN 1529565583 END)>(CAST(vt0.c0 AS INTEGER))) HAVING ((COUNT(*))OR(((NULL) IS TRUE))) ORDER BY ((vt0.c0)-(vt0.c0)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0)) NOTNULL), (CAST(vt0.c0 AS INTEGER) IN ()), vt0.c0 FROM vt0 GROUP BY vt0.c0, ((((((vt0.c0)||(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(LIKE(vt0.c0, NULL, 'A'))), ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))!=(vt0.c0)) HAVING ((((((vt0.c0) IS FALSE))AND(((vt0.c0)IS(vt0.c0)))))OR(MAX(vt0.c0))); -- 0ms;
SELECT ALL (((vt0.c0)IS(vt0.c0)) IN ()) FROM vt0 WHERE (((((((((CASE WHEN '' THEN -1.10921894E8 ELSE NULL END)OR(((('192174356', x'007e', NULL)) BETWEEN ((x'', 0.5719027198536006, NULL)) AND (('', NULL, ')'))))))OR(CAST(NULL AS TEXT))))AND(CAST('1275775236' AS BLOB))))OR((NOT ('(G'))))); -- 0ms;
SELECT ALL vt0.c0, CASE CASE WHEN vt0.c0 THEN vt0.c0 END  WHEN SQLITE_SOURCE_ID() THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END ELSE NULLIF(DISTINCT vt0.c0, vt0.c0) END, SUM((+ (vt0.c0))) FROM vt0 WHERE ((((1.752909637E9, x'', 0.731533577416619)) NOT BETWEEN ((((('La촦W')) NOT BETWEEN ((0Xffffffff868ec552)) AND ((NULL))), ((0.8373123950281821) IS TRUE), ((0.6654699469672409)/(-1507849753)))) AND ((((0x2990fa05)IS('-1425927941')), 'j}' COLLATE NOCASE, LIKELY(DISTINCT 0.43742339829858823))))); -- 0ms;
SELECT ALL GROUP_CONCAT(0.659960071965397) FILTER(WHERE vt0.c0) OVER ( ORDER BY x'194b' ASC, (((vt0.c0 IN ()))!=(IFNULL(vt0.c0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.8273660478630753')))>=(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)||(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(0X18b21489)))OR(0.16817904136243844)))OR(vt0.c0)))OR(0.519140573967743)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0)LIKE(vt0.c0)) END FROM vt0 WHERE (((CASE 0.8369152459747713  WHEN 0.3817104406441567 THEN NULL WHEN NULL THEN x'' WHEN NULL THEN x'bbe8' END) BETWEEN (x'' COLLATE NOCASE) AND (((('-1083269977')) NOT BETWEEN ((NULL)) AND (('1752909637')))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0)))IS NOT(vt0.c0 COLLATE BINARY)) FROM vt0; -- 1ms;
SELECT ALL GROUP_CONCAT(AVG(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), (((((((vt0.c0))>((NULL))))OR((vt0.c0 IN ()))))AND(((-1219943047) BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0)IS(MAX(vt0.c0))) FROM vt0;SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM, RANK() OVER ( PARTITION BY NULL, CASE WHEN (((vt0.c0))==((vt0.c0))) THEN CAST(vt0.c0 AS BLOB) END), (((vt0.c0)) BETWEEN ((((0Xffffffffc46eda29)GLOB(-1.7976931348623157E308)))) AND ((vt0.c0 COLLATE NOCASE))), CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN ((vt0.c0)<<(x'')) THEN MAX(vt0.c0) WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) END, CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS INTEGER) ELSE vt0.c0 END FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) LIMIT 133187085; -- 0ms;
SELECT ((((vt0.c0) NOTNULL))||(((vt0.c0)||(vt0.c0)))) FROM vt0 WHERE ((((0.14485876647401885 IN ()))AND(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT FIRST_VALUE((~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) OVER (), COUNT(*), (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=((vt0.c0 IN ()))), ((((0.9998721978800204) NOTNULL)) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)|(vt0.c0)))), (- (((vt0.c0)||(vt0.c0)))) FROM vt0 LIMIT 1290572192; -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (ROUND(vt0.c0, NULL))), SUM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER (), ((CASE vt0.c0  WHEN 0.34436823258860894 THEN vt0.c0 ELSE vt0.c0 END)<(COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0))<((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('110991992')) FROM vt0 WHERE (CASE (((0X512e1c2f)) BETWEEN ((0.3850188502155454)) AND ((NULL)))  WHEN (NOT (0.7250123326866212)) THEN NULL COLLATE RTRIM ELSE (- (x'86bc')) END); -- 0ms;
SELECT ALL (((((vt0.c0) IS FALSE), (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>=((0.4467885931729758, CAST(vt0.c0 AS INTEGER), (NOT (vt0.c0))))) FROM vt0 WHERE (ROUND(((x'') NOT NULL), NULL)); -- 0ms;
SELECT ALL (vt0.c0 COLLATE NOCASE IN ()), (((((- (vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR((+ (vt0.c0)))), CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((((((((vt0.c0)AND(0.10970418831905981)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) ELSE ABS(vt0.c0) END FROM vt0 WHERE ((('1437234189' IN ()) IN ())); -- 0ms;
SELECT DISTINCT FIRST_VALUE(0.3310173874311171) OVER (), ((vt0.c0)+((vt0.c0 IN ()))), 0.9046012731833946 FROM vt0 WHERE ((((0Xffffffff98d86932 IN ()))AND(((('-852870040', 0.6063845674962451, -1.29342409E9))<=((0.24752065335938123, NULL, NULL)))))); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((json_extract(vt0.c0, vt0.c0), (vt0.c0 IN ()), ('-1293424090' IN ()))) AND ((GROUP_CONCAT(vt0.c0), CAST(vt0.c0 AS BLOB), (('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER (), QUOTE(((vt0.c0)>=(vt0.c0))), ((((vt0.c0) IS TRUE)) NOT NULL), CASE (+ (vt0.c0))  WHEN COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN x'' WHEN ((vt0.c0)>=('558099029')) THEN NULL ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, ABS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) FROM vt0 WHERE (((NULL COLLATE RTRIM)<<(((NULL)!=('!/䘢3'))))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0, 'SD{.', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC; -- 1ms;
SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN json_type(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE ((~ (((0.3291535008245283) IS FALSE)))); -- 0ms;
SELECT (SQLITE_SOURCE_ID() IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(1882777991 AS TEXT) COLLATE BINARY COLLATE RTRIM) ORDER BY ((0.47551399298107133) IS TRUE)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>(CASE WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0))>((vt0.c0))) COLLATE RTRIM, ABS(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), 0.3971533321496874, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((('' COLLATE RTRIM)OR(CAST(x'ab6a8f80' AS BLOB)))); -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR((((vt0.c0))=((vt0.c0))))) FROM vt0 WHERE (((('0.27839694178767993') IS FALSE) IN ())); -- 1ms;
SELECT MAX(((vt0.c0) IS TRUE)) FROM vt0 WHERE (NULL); -- 0ms;
SELECT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)%(vt0.c0)))=(MIN(vt0.c0))), UNLIKELY(DISTINCT (((vt0.c0))==((vt0.c0)))), ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))IS NOT(SUM(vt0.c0))), ((((- (vt0.c0)), vt0.c0, x'' COLLATE NOCASE))==((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, (((vt0.c0))>=((vt0.c0)))))), UPPER(((x'7754') IS FALSE)) FROM vt0; -- 0ms;
SELECT DISTINCT ABS(CAST(vt0.c0 AS NUMERIC)), TOTAL((vt0.c0 IN (vt0.c0))) OVER (), COUNT(*) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT 2120325355 COLLATE BINARY FROM vt0 LIMIT 682868355 OFFSET 544351445; -- 0ms;
SELECT AVG((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) IS FALSE))))OR(NULL)), AVG(((vt0.c0)<<(vt0.c0))) FILTER(WHERE 0.11153750987962674) OVER () FROM vt0; -- 0ms;
SELECT ALL 1743471094 FROM vt0; -- 0ms;
SELECT DISTINCT (~ (GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE (7.75883954E8); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES(), vt0.c0, SUM(((NULL)==(vt0.c0))) OVER (), ((((CAST(vt0.c0 AS INTEGER))OR(SUM(vt0.c0))))AND((~ (vt0.c0)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (TOTAL(vt0.c0)) AND (((vt0.c0)IS NOT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT CAST(vt0.c0 AS TEXT) COLLATE RTRIM FROM vt0 WHERE ((('326048201' IN ()) IN ())); -- 1ms;
SELECT DISTINCT (~ (((6.78989071E8) BETWEEN (NULL) AND (vt0.c0)))) FROM vt0 WHERE ((((((x'e6c5')<(NULL))))!=((('/n^V}	' IN ()))))); -- 0ms;
SELECT (((- (x'')))*(((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)|(vt0.c0)) IN (((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT LTRIM(vt0.c0, SQLITE_COMPILEOPTION_GET(vt0.c0)) FROM vt0 WHERE (((-2.079192147E9)%((NULL IN ())))); -- 0ms;
SELECT DISTINCT LIKELY(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE (((LIKELY(DISTINCT NULL))GLOB(NULL))); -- 0ms;
SELECT CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'380b', vt0.c0))) AS BLOB) FROM vt0 WHERE ((NOT ((0.17057477146156252 IN (0.8627196554940207, 0xffffffff9772e1de))))); -- 0ms;
SELECT DISTINCT (((TOTAL(vt0.c0), ((vt0.c0) ISNULL), vt0.c0 COLLATE BINARY, GROUP_CONCAT(-4.51054091E8), ((vt0.c0) ISNULL)))>(((((vt0.c0, vt0.c0, 0.8882338806439739))<=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) IS TRUE), vt0.c0, ((vt0.c0)>(vt0.c0)), TRIM(DISTINCT vt0.c0)))), (((NOT (vt0.c0)))*((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), TOTAL((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0)))) OVER () FROM vt0 WHERE (((((-918221787) BETWEEN (0.8005113760349484) AND (-1.754078754E9)))<>(((0.4395967925607759) NOTNULL)))); -- 0ms;
SELECT DISTINCT (TIME(vt0.c0, vt0.c0, vt0.c0) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '.銄E7T' ELSE vt0.c0 END)) FROM vt0; -- 1ms;
SELECT CAST((NULL IN ()) AS NUMERIC) FROM vt0 WHERE (((('1561196460' IN (x'')))>=(((('547988671')) NOT BETWEEN ((1565573996)) AND (('Ⰱ%CyC')))))) GROUP BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL), UNLIKELY(DISTINCT ((vt0.c0) IS TRUE)), (((0.5282695529368531)) NOT BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND ((vt0.c0))) HAVING CAST(vt0.c0 AS NUMERIC); -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT TYPEOF(DISTINCT (vt0.c0 IN (vt0.c0))) FROM vt0 UNION SELECT ALL ((((vt0.c0)-(vt0.c0)))OR((vt0.c0 IN ()))) FROM vt0 WHERE (((((((((CASE -2.079192147E9  WHEN 1.999584695E9 THEN '104890053' ELSE x'' END)OR(('567410399' IN (0.6554602733036669)))))OR(((0.48545125355474306)+(NULL)))))OR((('') BETWEEN (1.529565583E9) AND (0.39430410394272275)))))AND(CAST(0.2805260699593559 AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)<=(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c0)))AND((vt0.c0 IN (vt0.c0)))) FROM vt0 LIMIT -451054091; -- 0ms;
SELECT ALL '', ((((vt0.c0)AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ('V)' COLLATE NOCASE)), TYPEOF(((vt0.c0) IS FALSE)) FROM vt0 WHERE (((((((((((x'')AND('-2110687101')))OR(x'')))AND(x'd7e7')))OR(0.859825086939494)))GLOB((0.6241448382562504 IN ())))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 1ms;
SELECT ALL (vt0.c0 IN ()), vt0.c0, ((vt0.c0 IN ()) IN ()) FROM vt0; -- 0ms;
SELECT ALL IFNULL(DISTINCT ((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY) FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))OR(CASE WHEN 0X1 THEN vt0.c0 END)) DESC  NULLS LAST, vt0.c0  NULLS LAST; -- 0ms;
SELECT COUNT(vt0.c0) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, x'', vt0.c0)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) NOTNULL)  WHEN SUM('112603871') THEN ((vt0.c0) ISNULL) END, rtreenode(vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), ((SUBSTR(vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (NULL)) FROM vt0; -- 1ms;
SELECT ((vt0.c0)GLOB((vt0.c0 IN ()))) FROM vt0 WHERE (COALESCE((NOT (NULL)), CASE WHEN '''S}괙A]	WA' THEN 0.8492809406557973 WHEN NULL THEN 0.050045759920117505 WHEN x'' THEN x'273e' ELSE NULL END)) LIMIT 1984389454; -- 0ms;
SELECT DISTINCT ((((ABS(vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (((UNLIKELY(0.972083137771257)) NOT BETWEEN (((NULL) NOT BETWEEN ('') AND (0.2037923246537472))) AND (CAST('' AS BLOB)))); -- 0ms;
SELECT ALL CASE WHEN ((((NULL)OR(vt0.c0)))OR(vt0.c0)) THEN 0.004483303130468075 WHEN (('1944769134')<>(vt0.c0)) THEN 'f' WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8282525513759267 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) END, COUNT(*) OVER ( GROUPS (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ((((vt0.c0))<>((10248562))), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) PRECEDING EXCLUDE TIES), (- ((('0.5656093465772637')+(vt0.c0)))) FROM vt0 WHERE ((((x'', '', 0.9109222722807598)) BETWEEN ((((1166455267)IS('1321185440')), CASE WHEN '1769182134' THEN '1-500000' END, (('-1') ISNULL))) AND ((((NULL) IS TRUE), ((((NULL)OR('-1293424090')))AND(0.594907315510003)), ((0.40558447852329915) ISNULL))))); -- 1ms;
SELECT DISTINCT ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))>>((vt0.c0 IN ()))) FROM vt0 WHERE (UNLIKELY(DISTINCT ((x'')*(-6.04742724E8)))); -- 0ms;
SELECT ALL ((((vt0.c0)>(vt0.c0))) IS FALSE) FROM vt0; -- 2ms;
SELECT TYPEOF(CAST(vt0.c0 AS NUMERIC)), (+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)/(vt0.c0)))) AND ((((vt0.c0)-(vt0.c0))))) FROM vt0; -- 1ms;
SELECT vt0.c0 FROM vt0 WHERE (((((('N{\n}')AND(x'')))AND('-613962694')) IN ())); -- 0ms;
SELECT ALL (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), 0.11998123947684658, load_extension((((vt0.c0))==((NULL))), COUNT(*)) FROM vt0;SELECT DISTINCT AVG(((vt0.c0) IS FALSE) COLLATE RTRIM) FILTER(WHERE NULLIF(vt0.c0, vt0.c0) COLLATE RTRIM) OVER ( RANGE BETWEEN '1557773194' PRECEDING AND (CASE WHEN vt0.c0 THEN vt0.c0 END IN (0.684576671085938, (vt0.c0 IN (vt0.c0, x'')))) PRECEDING EXCLUDE CURRENT ROW) FROM vt0 ORDER BY '929823365' ASC;SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<<((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0 WHERE ((~ ((((x'aa81', '547988671', x'')) BETWEEN ((1804621359, 1.222540005E9, x'2fde')) AND ((x'', 0.7764548522192133, x'')))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)=('449054720')))) AND ((((vt0.c0) IS FALSE)))), ((((vt0.c0)GLOB(vt0.c0)))<(TOTAL(vt0.c0))), ((((((vt0.c0)IS NOT(vt0.c0)))OR((vt0.c0 IN ()))))AND(CASE WHEN x'524c' THEN vt0.c0 END)) FROM vt0; -- 1ms;
SELECT DISTINCT ((((((((0.9109222722807598)OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(NULL COLLATE NOCASE)))OR((((NULL, vt0.c0, vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)%(vt0.c0)))) FROM vt0 GROUP BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 'o' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), CAST((- (vt0.c0)) AS NUMERIC) ORDER BY CASE TRIM(vt0.c0)  WHEN json_quote(vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN ((vt0.c0) NOTNULL) THEN '-56109533' WHEN CAST(vt0.c0 AS NUMERIC) THEN x'' WHEN ((vt0.c0) IS FALSE) THEN 0.7729433968990359 WHEN NULL THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN CAST(0.37367132904938305 AS TEXT) THEN CAST('-982774962' AS REAL) WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE BINARY ELSE NULL COLLATE BINARY END DESC, ((IFNULL(DISTINCT vt0.c0, vt0.c0))GLOB(((0.14107872019039036) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), vt0.c0, (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<=(((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) FROM vt0 GROUP BY load_extension(UNICODE(vt0.c0), ((vt0.c0) NOTNULL)), (~ (NULL)), (((((vt0.c0)<=(vt0.c0))))>((((vt0.c0)/(vt0.c0)))));SELECT x'4249' FROM vt0 WHERE (UPPER(DISTINCT 'mT,' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE((((((vt0.c0)) BETWEEN (('k''')) AND ((vt0.c0))))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN '637250365' ELSE IFNULL(DISTINCT vt0.c0, vt0.c0) END) OVER (), TOTAL((vt0.c0 IN ())), (NOT (((vt0.c0) ISNULL))) FROM vt0 WHERE (((((((((x'')AND((((NULL)) NOT BETWEEN ((0.931272460806423)) AND ((0.34840150927595415))))))AND(((0.306239149912368)>(x'')))))AND((((('Zj')AND(NULL)))AND(x'')))))AND(x'')));SELECT DISTINCT (((((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))OR((+ (vt0.c0)))))OR(CAST(NULL AS NUMERIC))), RANK() OVER (), CASE COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0)  WHEN HEX(vt0.c0) THEN vt0.c0 ELSE CAST(vt0.c0 AS REAL) END FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 1ms;
SELECT ALL (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0 WHERE ((NOT (x'dcdb'))); -- 0ms;
SELECT ALL ((((vt0.c0) IS TRUE))AND(((vt0.c0) IS FALSE))) FROM vt0 WHERE (LIKELY(DISTINCT x'')); -- 0ms;
SELECT ALL (vt0.c0 IN ()), vt0.c0, ((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)<<(vt0.c0)))))OR((NOT (vt0.c0)))) FROM vt0 WHERE (((CAST(NULL AS REAL))!=(((NULL) BETWEEN (-464682863) AND (x''))))); -- 0ms;
SELECT ALL '-1971939522', vt0.c0, SUM((((vt0.c0))<>((vt0.c0)))) FILTER(WHERE ((x'')|(CASE WHEN vt0.c0 THEN vt0.c0 END))) OVER () FROM vt0; -- 0ms;
SELECT ALL x'0108' FROM vt0; -- 0ms;
SELECT (((CAST(vt0.c0 AS INTEGER)))>((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('-1004056313'))))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY, x'', ((LOWER(DISTINCT vt0.c0))GLOB((NOT (vt0.c0)))), ((CAST(vt0.c0 AS BLOB)) ISNULL) FROM vt0 WHERE (273141372); -- 0ms;
SELECT ALL LAST_VALUE(((((CASE WHEN vt0.c0 THEN 0.8678865263889762 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) OVER () FROM vt0 WHERE ((((0.7509570026807503)) BETWEEN ((CAST('1638462165' AS REAL))) AND ((0.28650094420958117)))); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (((vt0.c0)*(NULL))) AND (((vt0.c0) BETWEEN (0X4c1d089) AND (vt0.c0)))), ((((ABS(DISTINCT '-610130619'))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL), (((vt0.c0)>(vt0.c0)) IN (COALESCE(vt0.c0, vt0.c0))), ((TOTAL(vt0.c0))/(LAST_INSERT_ROWID())) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (+ (((('567725428'))<=((vt0.c0))))) FROM vt0 GROUP BY x'', CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS BLOB), vt0.c0; -- 0ms;
SELECT DISTINCT CAST(0.44402606017447865 AS NUMERIC) FROM vt0; -- 1ms;
SELECT DISTINCT 0X139fad19 FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)%(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((NULL IN (x'')) IN ())); -- 0ms;
SELECT (((((vt0.c0))>=((vt0.c0))))>=((vt0.c0 IN (vt0.c0)))), (((- (vt0.c0)))|((vt0.c0 IN ()))), (~ (vt0.c0)) COLLATE NOCASE, ((((vt0.c0)<<(vt0.c0)))&(vt0.c0 COLLATE NOCASE)), UNLIKELY(TOTAL(vt0.c0)) FROM vt0 WHERE ((- ((('')<<(x'1e3c'))))); -- 0ms;
SELECT DISTINCT (~ (((vt0.c0)IS(vt0.c0)))), ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) NOT NULL))), 0.5947948274816741 FROM vt0 WHERE (((-1911384350 COLLATE NOCASE) NOT BETWEEN (((x'0885') NOT NULL)) AND (((NULL)*(x''))))) ORDER BY CASE ((vt0.c0)!=(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE BINARY END ASC; -- 0ms;
SELECT DISTINCT MIN(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE ((NOT (NULL)) COLLATE NOCASE); -- 0ms;
SELECT ALL (((+ (vt0.c0)))<<(MAX(vt0.c0))) FROM vt0 WHERE ((((0.2783305065964997))<=((x''))) COLLATE NOCASE) LIMIT 878525316 OFFSET 815620565; -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY SQLITE_COMPILEOPTION_USED((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ASC RANGE  CURRENT ROW EXCLUDE TIES) FROM vt0 WHERE (((((0.07613464501617828) ISNULL)) BETWEEN (((1.877910046E9) BETWEEN ('460106330') AND (''))) AND ((('') NOTNULL)))) ORDER BY (((vt0.c0, vt0.c0, 0.03517326115768449)) NOT BETWEEN (((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, (((vt0.c0))<>((vt0.c0))))) AND ((((vt0.c0) NOT NULL), 'X''', ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))); -- 2ms;
SELECT DISTINCT ((vt0.c0) ISNULL) COLLATE RTRIM FROM vt0 WHERE ((((NULL IN ()))LIKE(((NULL) IS TRUE)))); -- 0ms;
SELECT ALL MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((((+ (x'')))OR((x'' IN ())))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))IS(((vt0.c0)>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) ISNULL) COLLATE BINARY FROM vt0 WHERE ((((x'')LIKE(NULL)) IN ())) GROUP BY CASE WHEN vt0.c0 THEN x'4542' ELSE vt0.c0 END COLLATE NOCASE ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 GROUP BY CASE 2.056419777E9  WHEN ((vt0.c0)%(vt0.c0)) THEN (+ (vt0.c0)) END HAVING CASE CAST(vt0.c0 AS BLOB)  WHEN (~ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE vt0.c0 END ORDER BY LIKELIHOOD(((vt0.c0)|(vt0.c0)), 0.4320248387911405)  NULLS LAST, NULL DESC  NULLS LAST, (~ (vt0.c0))  NULLS LAST; -- 0ms;
SELECT ALL ((((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)), ((((vt0.c0)||(x'5d7833a1'))) BETWEEN (((vt0.c0)<(vt0.c0))) AND (MIN(vt0.c0))), LIKE((~ (vt0.c0)), ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('329231641')))AND(NULL)))OR('0.21466489016933032')))OR(vt0.c0)), '-') FROM vt0 WHERE (((((((((NULL)OR(x'')))AND(x'')))OR(NULL COLLATE NOCASE)))AND(0.4211244445789002))); -- 1ms;
SELECT DISTINCT (((+ (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0)<=(vt0.c0)))), (((~ (vt0.c0))) IS TRUE), '1857217613' FROM vt0 WHERE (((((CASE WHEN NULL THEN NULL WHEN NULL THEN '-170184597' WHEN 0.8822707022496913 THEN NULL ELSE x'' END)OR(CASE WHEN 202192778 THEN x'' WHEN NULL THEN NULL WHEN NULL THEN '730503622' END)))OR(((NULL)<(0.4211244445789002))))); -- 0ms;
SELECT (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)), COUNT(*) OVER (), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)AND(vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), ((((0.7361780161895958) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)=(vt0.c0))) AND (vt0.c0)), (((((vt0.c0)-(vt0.c0))))<=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0 WHERE (CAST(NULL AS TEXT)); -- 0ms;
SELECT DISTINCT NTILE('0.017221083337397913') OVER (), AVG((('0.5033152939261529')/(vt0.c0))), COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE RTRIM, (((vt0.c0))>=((vt0.c0))), ((((((((x'')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) FROM vt0;SELECT INSTR(SUM(vt0.c0), ((vt0.c0)<(vt0.c0))) FROM vt0 GROUP BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, '-2111270742')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, ''))))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) HAVING ((GROUP_CONCAT(vt0.c0))<<(((vt0.c0)>(vt0.c0)))); -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(LIKELY(DISTINCT vt0.c0))) FROM vt0; -- 0ms;
SELECT LAST_VALUE((((~ (vt0.c0)))OR(((vt0.c0) IS FALSE)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST((~ (vt0.c0)) AS REAL) FROM vt0; -- 0ms;
SELECT (+ (UPPER(DISTINCT vt0.c0))) FROM vt0 WHERE ((('0.746215965541015')+('')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT AVG((vt0.c0 IN ())) FROM vt0 ORDER BY CAST((- (vt0.c0)) AS REAL) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) FROM vt0 WHERE (((((x'') BETWEEN (0xffffffff837e04fa) AND ('1437193316')))IS NOT((('GI')OR(NULL))))) UNION SELECT DISTINCT ((((vt0.c0)&(vt0.c0)))-(vt0.c0 COLLATE BINARY)) FROM vt0 GROUP BY (NOT (((vt0.c0)|(vt0.c0)))) HAVING 0X4880cc81; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((((((((((((vt0.c0)GLOB(vt0.c0)))OR((vt0.c0 IN ()))))AND((vt0.c0 IN ()))))OR((- (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)%('.I溯y侔K?[혣')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST LIMIT -734168279; -- 0ms;
SELECT ALL (NOT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((vt0.c0 COLLATE NOCASE)<=(((vt0.c0)GLOB(vt0.c0)))), TOTAL((+ (vt0.c0))) FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS TEXT) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((~ (vt0.c0))) BETWEEN (COUNT(*)) AND (CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE (((((((NULL) BETWEEN (x'988e2649') AND (NULL)))OR(NULL)))AND(((0.07133707445310788) NOT BETWEEN (0.37322238050259726) AND (x'fe32'))))) ORDER BY ((LIKELIHOOD(DISTINCT vt0.c0, 0.4803220756086579))>>(x'0c78')) ASC, NULL; -- 0ms;
SELECT ALL (((vt0.c0 IN ()))<(((((vt0.c0)OR(NULL)))AND(vt0.c0)))) FROM vt0 WHERE ((((x'86cd' IN ())) NOTNULL)); -- 0ms;
SELECT CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))  WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))<((vt0.c0))) WHEN ((x'')>(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.11776570426098443, '-1610914552', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c0 END, (SUM('1287948207') IN ()), vt0.c0 FROM vt0 WHERE (((CAST('-1648071325' AS REAL)) IS TRUE)); -- 1ms;
SELECT DISTINCT ((CASE WHEN 0.6883556920436306 THEN vt0.c0 ELSE vt0.c0 END)|(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 GROUP BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), (((TRIM(vt0.c0, vt0.c0)))<((((vt0.c0) IS TRUE)))), ((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c0) IS TRUE))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) ISNULL), ((((((vt0.c0) IS FALSE))OR((vt0.c0 IN (vt0.c0)))))AND((+ (vt0.c0)))), GROUP_CONCAT(((vt0.c0) IS TRUE)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT -6.10130619E8, ((((vt0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(vt0.c0 AS INTEGER))), SUM(((vt0.c0)*(x'')) COLLATE BINARY) FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((vt0.c0) IS TRUE)) IS FALSE), ((((vt0.c0)<(vt0.c0)))%(vt0.c0))) OVER () FROM vt0;SELECT ALL COUNT(*) OVER ( GROUPS (((~ (vt0.c0))) BETWEEN ('1') AND (vt0.c0 COLLATE RTRIM)) PRECEDING) FROM vt0;SELECT ALL (((vt0.c0)) BETWEEN ((UPPER(vt0.c0))) AND ((vt0.c0 COLLATE BINARY))), (('-1977764265') NOT BETWEEN ((~ (vt0.c0))) AND (0.48355966585613175)), (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((QUOTE('?[壜J{.1Aꕇ'))GLOB(vt0.c0 COLLATE RTRIM)) FROM vt0 ORDER BY CASE WHEN (+ (x'')) THEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) ELSE vt0.c0 END DESC; -- 0ms;
SELECT DISTINCT MIN((- (vt0.c0))) FROM vt0 WHERE (((x'f129') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT ALL GROUP_CONCAT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER () FROM vt0 WHERE (('972002378' COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT (((((((((x'4df1' IN ()))OR((((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))))))OR(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOTNULL))) FROM vt0 WHERE ((((0.29702513477393055 IN (NULL)))|(((x'') NOT BETWEEN (-2104372209) AND (x''))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN ('J\r') AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)), '0%C7N', (((((vt0.c0) ISNULL), MAX(vt0.c0), MIN(vt0.c0)))<=((NULL, ((vt0.c0)=(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0 WHERE ((((NOT (x'')))>>(CASE 0.8848654349098034  WHEN 0.5498238971834741 THEN '460106330' ELSE '972002378' END))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT MAX(((vt0.c0)==(vt0.c0))), ((NULL)GLOB(CAST(vt0.c0 AS TEXT))), 0Xffffffff86c93ce5 FROM vt0 WHERE (((((NULL))>((0.8540504039526342))) IN ())); -- 1ms;
SELECT DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE, CAST(CAST(vt0.c0 AS BLOB) AS INTEGER), (~ ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT TOTAL(((vt0.c0) NOTNULL)) OVER () FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))>>(vt0.c0))  NULLS LAST; -- 0ms;
SELECT ((MIN(vt0.c0))<=(MIN(vt0.c0))) FROM vt0 WHERE ((((1867877121, NULL, 0.18993478159984112)) BETWEEN (((('')<(0X2cfbec07)), (('lT?IU') IS FALSE), CAST(1.529565583E9 AS BLOB))) AND (((('-748338185') BETWEEN (NULL) AND (NULL)), ((('0')) BETWEEN ((0.49118231831902714)) AND ((NULL))), (((('')OR('g5Ku')))AND(NULL)))))) ORDER BY (('1987236422') ISNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT ((+ ('')))) FROM vt0 WHERE ((NOT (((x'')GLOB(x'6236'))))); -- 0ms;
SELECT DISTINCT TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0; -- 0ms;
SELECT ALL COALESCE(DISTINCT CAST(vt0.c0 AS REAL), ((0.14203540312119467)<<(vt0.c0)), (vt0.c0 IN ()), ((((((((vt0.c0)AND(0.6255602622929386)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))), vt0.c0, CAST((NOT (vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)%(vt0.c0)) IN ()), '', CASE vt0.c0  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)<=(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)OR(vt0.c0)) THEN vt0.c0 COLLATE BINARY END FROM vt0 ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('e&K0sO')) WHEN ((7.75883954E8) IS TRUE) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) IS TRUE) ELSE CAST(vt0.c0 AS TEXT) END DESC  NULLS LAST; -- 0ms;
SELECT ALL (vt0.c0 IN (-1413192176)) FROM vt0; -- 0ms;
SELECT NULL FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN x'79cc' ELSE vt0.c0 END)>(QUOTE(vt0.c0))); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)||(vt0.c0))), 0Xffffffffb2a0d681, TOTAL(vt0.c0) OVER () FROM vt0 WHERE (((LIKELIHOOD(DISTINCT NULL, 0.2856795797225762))==(x'0e24'))); -- 0ms;
SELECT ((GROUP_CONCAT(vt0.c0))&(x'af02')) FROM vt0 WHERE (((CAST(1837114481 AS TEXT)) NOT NULL)); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()) FROM vt0 WHERE ((json_array_length(1397374794, '899658343') IN ())); -- 0ms;
SELECT ALL LAG(((CAST(0.8426080109685782 AS TEXT)) IS TRUE), ((vt0.c0) IS TRUE), ((vt0.c0)IS(UNICODE(vt0.c0)))) OVER () FROM vt0 GROUP BY ((NOT (NULL)) IN ()) HAVING ((NULLIF(DISTINCT vt0.c0, vt0.c0))LIKE(CAST(vt0.c0 AS REAL))); -- 1ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER)))) FROM vt0; -- 0ms;
SELECT DISTINCT (('413741087') BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (CAST(((x'ce5f')&(0xffffffffeeab74fa)) AS TEXT)) ORDER BY json_quote(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST; -- 0ms;
SELECT (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((NULL) NOT NULL)); -- 1ms;
SELECT 0.21206199343029786 FROM vt0 WHERE (0x41e0e96a); -- 0ms;
SELECT CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL TOTAL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER () FROM vt0; -- 0ms;
SELECT ALL (- (((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE (((((((((((((((((((0.12142481460371057)|(0.7671233407811596)))AND(((0.015287487111747322)||(x'6389')))))AND(0.8672304483428055)))OR((('-526885283') ISNULL))))AND(NULL COLLATE BINARY)))OR((((((((('-197075573')OR('1912705976')))AND('-378599837')))OR(0xffffffffb1bb9284)))OR('Ul')))))OR(0.7789829261483248 COLLATE BINARY)))OR(((6.5439286E8)||(1358774559)))))OR(TRIM(DISTINCT x'')))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((NULL) NOT BETWEEN ('1143582154') AND (x'3885')))OR(((x'f370e8e3') NOT BETWEEN (NULL) AND (NULL)))))OR((((0.5931279987179982, 1.140091474E9, '1140091474'))<>((0.4805809238878431, 0.779554283435631, 0.18882917116787679))))))AND((((0.8627196554940207))>=((''))))))OR((('/n^V}	') BETWEEN (x'71da') AND (0.9361995731398399))))) ORDER BY (~ (((vt0.c0)<<(vt0.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (9.72002378E8))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)LIKE(vt0.c0)))) ASC; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((('') IS TRUE)))) FROM vt0; -- 0ms;
SELECT CAST(MIN(vt0.c0) AS REAL) FROM vt0; -- 0ms;
SELECT ALL (((NOT (vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT TYPEOF(0.30127174764606024), 0.2993833717058233) FROM vt0; -- 0ms;
SELECT DISTINCT LTRIM(0.27839694178767993), COUNT(*), ((((((((((vt0.c0)OR('1657504844')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL (~ (SUM(vt0.c0))) FROM vt0 WHERE (NULL) ORDER BY (((((x'6d21', vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0, NULL)))) NOTNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT RTRIM(vt0.c0 COLLATE BINARY) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL (((vt0.c0 IN ()))IS(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL 0.8731488103433253 FROM vt0 WHERE (((('' IN ()))>(('2097794229' IN ())))); -- 1ms;
SELECT CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT CASE WHEN GROUP_CONCAT(vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE 'e\n童p俯KxF' END FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)>>(vt0.c0)) COLLATE BINARY FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('0.21466489016933032')))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) NOT NULL), (+ (((((vt0.c0)AND(vt0.c0)))OR('F蠊N0h^~/')))), (x'' IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS INTEGER)))>(((~ (vt0.c0))))), DATE(((vt0.c0) NOT BETWEEN ('-253676075') AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0), LIKELY(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) FROM vt0 LIMIT 212684967 OFFSET 1222540005; -- 0ms;
SELECT (((+ (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((((x'' IN ()))|((NOT (0.20948079503381178))))); -- 0ms;
SELECT AVG((((vt0.c0))<=((vt0.c0)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((LIKELY(DISTINCT vt0.c0)) BETWEEN (TRIM(vt0.c0)) AND (((vt0.c0)||(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (((json_valid(vt0.c0), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('1300515752'))), COUNT(*)))<=(((vt0.c0 IN ()), ((vt0.c0)>(vt0.c0)), vt0.c0))), NULLIF(((vt0.c0)<>('')), CAST(vt0.c0 AS NUMERIC)), (((((((('}뉾<1oyfw')AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(json_type(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL COUNT(*) OVER (), (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()), ((((TRIM(DISTINCT 0.4341168810773911, '-693112010'))OR(CAST(vt0.c0 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))) FROM vt0; -- 0ms;
SELECT UNLIKELY(CAST(vt0.c0 AS REAL)), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) END, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)/(json_extract(vt0.c0, vt0.c0))) FROM vt0 WHERE (((x'') NOT NULL)) LIMIT 1364862824 OFFSET -1036957290; -- 0ms;
SELECT (((NOT (vt0.c0)))!=(HEX(DISTINCT vt0.c0))) FROM vt0 WHERE ((((0.24058215001187822, NULL, '2044973323')) NOT BETWEEN ((5.88418481E8, x'e508', x'')) AND ((0.02161433574268934, x'', '-1953751040'))) COLLATE RTRIM) LIMIT -1425927941 OFFSET 1028270620; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((+ (vt0.c0)))OR('1262277436')))OR(COUNT(vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(0.42879999645460964)))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CAST((- (x'')) AS INTEGER)) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), 0.06639825848072245)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt0.c0)|(vt0.c0)) IN ()), MAX(COUNT(((vt0.c0)OR(vt0.c0)))), CASE WHEN ((vt0.c0) IS TRUE) THEN TOTAL(vt0.c0) ELSE (vt0.c0 IN ()) END FROM vt0;SELECT DISTINCT (+ (((vt0.c0)-(vt0.c0)))), ((GROUP_CONCAT(vt0.c0)) IS FALSE), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) FROM vt0 WHERE (CAST('#&,P4llCo' AS TEXT) COLLATE BINARY) LIMIT 1220149350 OFFSET 1205478220; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))<=((vt0.c0 IN ()))), UNLIKELY(((((((((vt0.c0)AND(vt0.c0)))AND(1916711484)))AND(vt0.c0)))OR(vt0.c0))), CASE WHEN ((((vt0.c0)AND(x'')))AND(1.804621359E9)) THEN CAST(vt0.c0 AS BLOB) END FROM vt0 WHERE ((((0.3369628922485056)==(0xffffffffa258ff75)) IN (((NULL) ISNULL), (((NULL)) NOT BETWEEN ((x'')) AND ((NULL)))))) LIMIT -1746688126; -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)|(vt0.c0))  WHEN SUM(vt0.c0) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT NULL) END FROM vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((CAST(vt0.c0 AS REAL))IS NOT(((vt0.c0)AND(vt0.c0)))), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT 0.8734097275578053 FROM vt0 WHERE (CAST(UNLIKELY(DISTINCT '') AS TEXT)); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE BINARY) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (x'')), (- (vt0.c0)) COLLATE RTRIM, (- ((((vt0.c0, vt0.c0, '>e?')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (CAST(CASE WHEN -1.859578674E9 THEN x'' WHEN NULL THEN NULL WHEN '' THEN '' ELSE NULL END AS REAL)) GROUP BY CASE vt0.c0  WHEN ((vt0.c0) IS FALSE) THEN 'c*im7>	y_' WHEN vt0.c0 COLLATE RTRIM THEN ((((vt0.c0)OR('-1754078754')))AND(vt0.c0)) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (NOT (0X345d3b84)) ELSE (NOT (vt0.c0)) END HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)/(COUNT(*))); -- 0ms;
SELECT DISTINCT ((((((((GROUP_CONCAT(vt0.c0))AND(COUNT(*))))AND(((vt0.c0) NOT NULL))))AND(((vt0.c0) NOT NULL))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN x'1b0c' THEN vt0.c0 END, CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN CAST(x'' AS NUMERIC) END, CASE WHEN MIN(vt0.c0) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c0))<((vt0.c0))) ELSE MIN(vt0.c0) END FROM vt0 WHERE (CASE WHEN ((x'') NOT NULL) THEN (((NULL)) BETWEEN (('SG?_ DG''')) AND (('-604468532'))) WHEN ((-1.313107324E9)|(x'd6c3')) THEN ((((0x2658db5a)AND('1223433667')))OR(NULL)) WHEN ((('1299681144')) NOT BETWEEN (('LoUI ')) AND (('rQ'))) THEN x'fd25' COLLATE RTRIM END) GROUP BY (- (vt0.c0)) COLLATE RTRIM HAVING ((((vt0.c0) ISNULL))<=(CAST(NULL AS INTEGER))) LIMIT -765069457; -- 0ms;
SELECT DISTINCT ((NULL)&(x'')) COLLATE BINARY FROM vt0; -- 1ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))) FROM vt0 WHERE ((((((0xffffffffa4e7ef46)GLOB(NULL))))>((('5\r' IN ()))))); -- 0ms;
SELECT ALL (~ ((NOT (vt0.c0)))) FROM vt0 WHERE (0xffffffff8b8c2000); -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0))<>((('0.032857672046344044')AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOTNULL), x'' COLLATE BINARY, COALESCE(((vt0.c0) ISNULL), SUM(vt0.c0)) FROM vt0 ORDER BY (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN ()))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (0.969738583066027)))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT '0.8017695267428576' COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CASE COUNT(*)  WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN ()) END, FIRST_VALUE(vt0.c0) OVER () FROM vt0 WHERE (((x'' COLLATE RTRIM)AND(LTRIM(x'')))); -- 0ms;
SELECT (COUNT(vt0.c0) IN (NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT MAX((- (vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT json_array(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULL) FROM vt0 WHERE ((+ (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((vt0.c0)>>(x'')) COLLATE RTRIM FROM vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY (((- (vt0.c0)))*(-2118816061)); -- 0ms;
SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 END))>=((((vt0.c0)GLOB(vt0.c0))))) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT((NOT (vt0.c0))) OVER () FROM vt0 WHERE ((NOT (9.72002378E8 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)/(vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT json_patch(((vt0.c0)%(vt0.c0)), load_extension(vt0.c0)) FROM vt0;SELECT DISTINCT (CAST(vt0.c0 AS INTEGER) IN ()) FROM vt0; -- 1ms;
SELECT DISTINCT ((((GROUP_CONCAT(vt0.c0))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)), CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) END, ((vt0.c0) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL json_type(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))), ((((vt0.c0) IS TRUE)) BETWEEN (1368507286) AND ((~ (0.9269754988284346)))), NTILE(CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN vt0.c0 COLLATE NOCASE END) OVER () FROM vt0;SELECT ALL ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (SUM(vt0.c0))) FROM vt0 WHERE ((((((-9124993)IS NOT(-68192885))))=(((((((((((((('-245036848')AND(0.6241448382562504)))AND('0.8834813057250958')))AND(0.27279468586415345)))OR(NULL)))OR('2031767444')))OR('376743769')))))); -- 0ms;
SELECT ((NOT (vt0.c0)) IN ()), CAST(CAST(vt0.c0 AS REAL) AS BLOB), (((vt0.c0)OR(vt0.c0)) IN (NULL, CASE vt0.c0  WHEN '' THEN vt0.c0 END)) FROM vt0 GROUP BY 0x526231a6 HAVING ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY;SELECT vt0.c0 FROM vt0 WHERE ((((0.516028597768517)) BETWEEN ((((('tkJk㢜]2+'))!=((0.23040265548927075))))) AND (((NOT ('NJ')))))); -- 1ms;
SELECT ((((((((COUNT(vt0.c0))OR(0.678280319533635)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS BLOB))), CASE (~ (vt0.c0))  WHEN ((vt0.c0)/(vt0.c0)) THEN vt0.c0 COLLATE RTRIM END, CAST(COUNT(vt0.c0) AS TEXT) FROM vt0; -- 0ms;
SELECT ALL COUNT(((vt0.c0) IS FALSE)) OVER (), ((vt0.c0)<<(vt0.c0)) COLLATE BINARY, CASE vt0.c0  WHEN (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))) THEN LIKELY(vt0.c0) END FROM vt0; -- 0ms;
SELECT ALL (((+ (vt0.c0))) ISNULL) FROM vt0 WHERE ((((('')%(x'')))OR((~ (''))))); -- 0ms;
SELECT DISTINCT SUM((~ (0.8305449480263164))), (NOT (vt0.c0 COLLATE RTRIM)), (((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 NOT INDEXED WHERE (CAST(UNLIKELY(x'') AS NUMERIC)) LIMIT -1333162918 OFFSET 1048409472; -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))+(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))) FROM vt0 WHERE (((((NULL)) BETWEEN ((NULL)) AND (('fI'))) IN (((-738088029) NOT BETWEEN (0X665a9631) AND ('-1128641776'))))); -- 0ms;
SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.5682281957813178) FROM vt0; -- 0ms;
SELECT DISTINCT (- ('1266471006')), ((((vt0.c0)>(vt0.c0))) ISNULL), ((vt0.c0)<=(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ((CAST('K' AS INTEGER)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) BETWEEN (NULL) AND (x'beea')))) FROM vt0 WHERE ((- (CAST(0.8367239617397298 AS BLOB)))); -- 0ms;
SELECT COUNT(((vt0.c0)GLOB(vt0.c0))), ((vt0.c0) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (((vt0.c0)IS NOT(vt0.c0)))), (((0.32357861612820826, AVG(vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, UPPER(DISTINCT vt0.c0)))) FROM vt0 WHERE ((((- (x''))) IS FALSE)); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) IS TRUE) THEN SUM(vt0.c0) END FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)IS NOT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( GROUPS BETWEEN '56821987' FOLLOWING AND (+ (IFNULL(vt0.c0, vt0.c0))) FOLLOWING EXCLUDE TIES) FROM vt0 ORDER BY '';SELECT DISTINCT SUM(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.485788835115992 ELSE vt0.c0 END) OVER () FROM vt0 WHERE (CAST(('Zj' IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((((vt0.c0)<<('')), vt0.c0, ('' IN ())))!=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), '', LTRIM(vt0.c0)))) FROM vt0 WHERE (0.4766057518912574) ORDER BY json_remove(CASE WHEN vt0.c0 THEN vt0.c0 END, (NOT (0.47851870149756903)))  NULLS FIRST, vt0.c0 ASC  NULLS FIRST, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE CAST(x'' AS REAL) END ASC;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '(IP儆' END)=(vt0.c0)) FROM vt0 LIMIT -1549694121; -- 0ms;
SELECT DISTINCT (((vt0.c0)GLOB(vt0.c0)) IN ()) FROM vt0 WHERE ((- ((- (''))))); -- 0ms;
SELECT COALESCE(DISTINCT TRIM(vt0.c0, vt0.c0), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) FROM vt0; -- 0ms;
SELECT (COUNT(*) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (- (((vt0.c0)<(vt0.c0)))) FROM vt0 WHERE (((((NULL)<(-3.88876101E8)))&(((((NULL)OR(NULL)))OR('719222358'))))) LIMIT 17317615 OFFSET -1565410926; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(GROUP_CONCAT(vt0.c0)) FROM vt0 WHERE (((NULL) BETWEEN (x'') AND ('k''')) COLLATE NOCASE); -- 1ms;
SELECT ALL (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (((CAST('e&K0sO' AS TEXT))GLOB(((0.9845183242115744) BETWEEN (NULL) AND (-4.51054091E8))))); -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))) ASC  NULLS LAST) FROM vt0 WHERE ((((((('2129131490') NOT BETWEEN (0.10562137348216605) AND (x'')))AND(((0X60c845b2)+(x'')))))AND((((('')OR(-1058823297)))OR('#d'))))); -- 0ms;
SELECT DISTINCT AVG((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt0 WHERE (((((-2.111270742E9)>(x'')))<>(UPPER('')))); -- 0ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ()), ABS(DISTINCT ((vt0.c0)<(vt0.c0))), MIN(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) FROM vt0 GROUP BY LOWER(DISTINCT vt0.c0), x'ca01', NULL; -- 0ms;
SELECT CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) IS FALSE) ELSE (- (vt0.c0)) END FROM vt0; -- 1ms;
SELECT ALL CASE WHEN ((vt0.c0) NOT BETWEEN (0.574778468966942) AND (vt0.c0)) THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN LENGTH(vt0.c0) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)OR(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) WHEN 0.2066065615680599 THEN 'o' WHEN (- (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS NUMERIC) THEN 0.15377943743276923 END FROM vt0 WHERE (CAST((- (x'')) AS TEXT)) GROUP BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(x'' COLLATE NOCASE)), ((CAST(vt0.c0 AS BLOB))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (- (((8.99658343E8) NOT NULL))); -- 2ms;
SELECT DISTINCT (0x52aaf9fe IN ()) FROM vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS BLOB))OR(SUM(vt0.c0))) FROM vt0 WHERE (((CASE 0.0  WHEN 0.3712019674511726 THEN x'' WHEN 2119613565 THEN 0.7899021612159031 WHEN x'' THEN -6.04468532E8 END) IS TRUE)); -- 0ms;
SELECT ALL vt0.c0, CAST((vt0.c0 IN ()) AS NUMERIC), (((NULL IN ()))|((((('끭')OR(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER (), ((((NOT (vt0.c0))))>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((+ (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (((CASE WHEN '' THEN NULL END) BETWEEN (((((((((x'')AND(1.281388753E9)))OR(0.7683848328425759)))AND('++3,')))OR(NULL))) AND ((((('')AND('-501506820')))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0))|((((vt0.c0, 1886358415, vt0.c0))<((NULL, vt0.c0, vt0.c0))))) FROM vt0 GROUP BY ((CAST('0.8426080109685782' AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('243367362')) HAVING ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<((CAST(vt0.c0 AS REAL), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL) DESC; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS INTEGER)))>=((((vt0.c0) IS FALSE)))) FROM vt0; -- 0ms;
SELECT ((SUM(vt0.c0))%(CAST(vt0.c0 AS INTEGER))), NULL, ((((vt0.c0)*(vt0.c0))) BETWEEN (vt0.c0) AND ((~ (vt0.c0)))), (vt0.c0 COLLATE RTRIM IN ()), ((vt0.c0 COLLATE BINARY)LIKE(CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT CASE (~ (NULL))  WHEN ((vt0.c0) NOT NULL) THEN NULL ELSE ((vt0.c0) IS FALSE) END FROM vt0 WHERE ((- ((('0') NOT NULL)))) LIMIT -1853718773; -- 0ms;
SELECT ALL MIN(CAST(vt0.c0 AS TEXT)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((vt0.c0)|(vt0.c0))))), NULL FROM vt0 LIMIT -709030134 OFFSET 2117133094; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN '' THEN vt0.c0 END)), SUM(((vt0.c0)<=(vt0.c0))) OVER ( RANGE (((+ (vt0.c0)))+(CASE WHEN '5Rx' THEN vt0.c0 END)) PRECEDING), (((0.16926423341449137) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0 WHERE (((((((((((('')) BETWEEN (('-1914705460')) AND (('1321185440'))))OR(((x'427f')LIKE(-378599837)))))OR((('ᆠ[ೕ[৶2]T)')IS(x'')))))OR(((x'')<>('-1843321518')))))OR((~ (0.1142447766447946))))) GROUP BY MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM HAVING ((LENGTH(vt0.c0))&(((vt0.c0)>>(vt0.c0)))) LIMIT -1264533709;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(NULL COLLATE NOCASE)) FROM vt0 NOT INDEXED WHERE ((((('qx') NOT BETWEEN (0.47531291835333556) AND ('-499684011'))) BETWEEN ((('Fj]w7B2rV')&(NULL))) AND ((((0.16298289994192894)) NOT BETWEEN ((0.2842499739527523)) AND (('lt?iu')))))) GROUP BY vt0.c0 HAVING ((vt0.c0)IS(vt0.c0)) COLLATE BINARY COLLATE BINARY; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT ((NULLIF(DISTINCT vt0.c0, '浕*)*E\r''')) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((NOT (vt0.c0)) IN (((vt0.c0)*('M>t2!')))), ((x'de4b') NOTNULL), CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'acf1' WHEN vt0.c0 THEN vt0.c0 END AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT LIKELY(SUBSTR(vt0.c0, vt0.c0)) FROM vt0 GROUP BY CAST(TYPEOF(vt0.c0) AS NUMERIC); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT 812842725 FROM vt0 WHERE ((NOT (0.6385238257983527))) GROUP BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0)>(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) HAVING MIN((~ (vt0.c0))); -- 0ms;
SELECT (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((((vt0.c0 COLLATE BINARY)OR(((vt0.c0)>(vt0.c0)))))OR(((vt0.c0)<=(NULL)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))), CASE CAST(vt0.c0 AS REAL)  WHEN ((vt0.c0) BETWEEN (0.4332558968646705) AND (vt0.c0)) THEN CHANGES() END) OVER (), CAST(MAX(vt0.c0) AS BLOB), (((((vt0.c0))<>((vt0.c0)))) ISNULL) FROM vt0 WHERE ((((((1.361976367E9)) NOT BETWEEN ((x'f2e5')) AND ((NULL))))IS('' COLLATE BINARY)));SELECT ((TOTAL(vt0.c0)) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (COUNT(vt0.c0))) FROM vt0 WHERE (CAST(0.04431040222198834 AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((x'0939' IN (vt0.c0)))OR((- (vt0.c0)))))OR((vt0.c0 IN ()))) FROM vt0; -- 1ms;
SELECT (((x'5f81'))=((vt0.c0))) COLLATE BINARY, ((((vt0.c0)>(vt0.c0)))&(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), (((1714356863) IS FALSE) IN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT MAX((vt0.c0 IN (vt0.c0))) FROM vt0 WHERE (((CAST(NULL AS REAL)) NOT BETWEEN (((((0.905376346306335)OR(2.1997365E8)))AND('0.3250238287614404'))) AND (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB) FROM vt0 WHERE ((NOT ((+ ('El'))))); -- 0ms;
SELECT ALL '-2011519577', ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(((vt0.c0)&(-7.76680644E8)))), (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))=((x''))) FROM vt0; -- 0ms;
SELECT AVG(CAST(vt0.c0 AS BLOB)) OVER (), ((vt0.c0 COLLATE RTRIM) IS TRUE), (((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))IS NOT(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0)!=(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((AVG(vt0.c0), TRIM(vt0.c0, vt0.c0), (('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CAST(vt0.c0 AS REAL), ((vt0.c0)=(vt0.c0)), json_array_length(vt0.c0, 0.33520261637832316)))) FROM vt0; -- 0ms;
SELECT '1361976367' FROM vt0 WHERE ((((GLOB(0x147a65b0, 0.5379515409656879)))!=((CASE ''  WHEN x'' THEN 0.07320178055771509 WHEN '2025868114' THEN NULL WHEN NULL THEN '-1763670923' WHEN NULL THEN x'' WHEN 1.222540005E9 THEN x'b2cc' ELSE '-817154233' END)))); -- 0ms;
SELECT ALL json(((vt0.c0) IS FALSE)), CASE ((vt0.c0) IS FALSE)  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN MIN(vt0.c0) WHEN CASE vt0.c0  WHEN NULL THEN '-280619906' ELSE vt0.c0 END THEN ((vt0.c0)*(NULL)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, COUNT(*) FROM vt0 LIMIT -556836761; -- 0ms;
SELECT TOTAL((((1.895228294E9, '-1398418664', NULL))<>((vt0.c0, x'', vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))&(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((((-1712614275)AND(NULL)))AND(NULL)) IN ())) ORDER BY (- (vt0.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((- (vt0.c0))) OVER () FROM vt0 WHERE ('') LIMIT 1804621359 OFFSET -1128641776; -- 1ms;
