-- Time: 2024/06/07 22:40:14
-- Database: database18
-- Database version: 3.40.0
-- seed value: 2076601118
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB , +c4 TEXT ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 TEXT , +c4 BLOB ); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 1ms;
INSERT OR ABORT INTO rt1(c2) VALUES (NULL), (0.11827397972152609), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c4, c3, c2) VALUES ('0.11827397972152609', NULL, '\na', '\na'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c3, c0) VALUES (x'', NULL, 'dzV', 1343472646), (1.343472646E9, x'5b6a6a04', x'', '1343472646'), ('-883424809', 'j', 0.11827397972152609, NULL); -- 1ms;
INSERT OR ABORT INTO rt1(c3, c2) VALUES (NULL, NULL); -- 0ms;
UPDATE rt1 SET c4=NULL WHERE (((((((((((x''))!=((rt1.c4))))AND((rt1.c3 IN ()))))OR(x'')))OR((NOT (rt1.c1)))))OR((rt1.c1 IN (rt1.c1, rt1.c0)))); -- 1ms;
INSERT OR FAIL INTO rt0(c4, c3) VALUES (x'2b4c', 'DL>>e1'), ('', ''), (0.9578883161481512, x'aa3d'); -- 1ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
UPDATE rt1 SET (c1)=(0.10614082618713627); -- 1ms;
UPDATE OR ROLLBACK rt1 SET (c4, c4)=(0.8270785025866535, x''); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(0.8270785025866535); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES ('619998480'), (0.1420598280192341), ('^|w8%%Q(mi'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (''); -- 1ms;
INSERT OR FAIL INTO rt0(c2, c4, c3, c1) VALUES (x'789e22f3', 0Xffffffff8fb13e81, NULL, '	.1/BǗ/y'); -- 1ms;
INSERT OR ABORT INTO rt1 VALUES (0.1420598280192341, 0.772727329422707, 0x20e49840, NULL, '619998480'); -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
ANALYZE; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0, c2, c1) VALUES ('', 0.8222249637167587, NULL, NULL); -- 0ms;
PRAGMA main.cell_size_check = true; -- 0ms;
UPDATE rt0 SET c1=x'', c4=6.1999848E8 WHERE ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c4, c2) VALUES (CAST((0Xffffffffc3c09e41 IN ()) AS BLOB), NULL, x'1995', ((((NULL) BETWEEN (NULL) AND ('1343472646')))&((NOT (NULL))))); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
REINDEX; -- 0ms;
UPDATE rt0 SET c3='276959868'; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c3, c2) VALUES ('1357742782', NULL, NULL); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (0.11736126264002578, '', x'', 551852096, x'd229'); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (''), (x''), (NULL), ('1357742782'), ('-1884209535'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c3, c4) VALUES ('1343472646', 0.1420598280192341, 'tY*&fh9'), (x'', NULL, ''), (NULL, 1.343472646E9, ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c0, c4) VALUES (-702747311, x'3eba', 0.11736126264002578, 0xffffffffadcc6ee7); -- 0ms;
INSERT OR ABORT INTO rt1(c0, c4, c2, c1) VALUES (NULL, 'L', NULL, 0.6768078389581652); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='.U0'; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE rt0 SET c3=x'' WHERE CAST(rt0.c3 AS INTEGER); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c0) VALUES (0X50ed82be, 0xfffffffff8cadbec), (x'', x''), (NULL, NULL); -- 3ms;
INSERT OR ROLLBACK INTO rt1(c3) VALUES (NULL); -- 0ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt1 SET c1=-1884209535 WHERE CAST(CASE 1727053746  WHEN rt1.c4 THEN rt1.c2 ELSE NULL END AS REAL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt1(c0, c4, c2, c1) VALUES ('464030235', NULL, '%L', 0.4030928936783491), (x'c8c7c7f3', 0xffffffffa3645715, '767994918', '85302075'), (-1010786751, 0.5979608734060861, 0.7309304493086545, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2, c4) VALUES (0.18045547643642468, NULL, '-1026019365', NULL); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt1 SET c4=x''; -- 1ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt1 VALUES (0.7716686665054022, '254474881', NULL, -8.83424809E8, NULL); -- 0ms;
PRAGMA threads; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0, c2, c3) VALUES (NULL, '-1451649008', NULL, 0.5751867869607133); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL WHERE ((('%,p'))!=((((rt1.c0)&(rt1.c3))))); -- 1ms;
PRAGMA main.journal_mode; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=0xffffffffc3c09e41; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=('ጤ}Rrjl') WHERE ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE NOCASE; -- 1ms;
UPDATE rt0 SET (c3)=(x'0e31') WHERE (488909019 COLLATE NOCASE IN (((rt0.c3)IS NOT(rt0.c3)))); -- 0ms;
CREATE VIRTUAL TABLE rt2 USING rtree(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.journal_size_limit = 0; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR FAIL INTO rt2(c2, c1, c0) VALUES (NULL, x'', NULL), (x'', '0.1420598280192341', NULL), (x'', 0xffffffffcf162823, x''), (9.2275178E8, '˾挻', 0X1f4ef93f), (x'', 0.5893282602665024, NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c4, c1, c3) VALUES ('1727053746', 254399629, x''), (x'f823', NULL, x'27b1'), (x'', '-1379111193', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES (x'', 0.31304425277377124); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.journal_size_limit = -5083457041941297102; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt2(c2) VALUES (x''); -- 0ms;
UPDATE OR IGNORE rt2 SET (c0)=('-1005514963') WHERE CASE CASE rt2.c0  WHEN rt2.c1 THEN rt2.c0 ELSE rt2.c0 END  WHEN (rt2.c0 IN ()) THEN '' ELSE CAST(rt2.c0 AS NUMERIC) END; -- 2ms;
UPDATE OR IGNORE rt0 SET c2=0.46493296714404164, c4=0.6757316574098788, c2='254399629'; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0, c2, c1) VALUES ('ጤ}Rrjl', '-893559238', NULL, x'2116'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.8585783055667573, x'', NULL, '.4', NULL), ('-1010786751', x'4ad5', '-1197773171', x'', '	.1/BǗ/y'), (NULL, x'', NULL, '1894806816', NULL); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((rt1.c2 IN ())))==((GROUP_CONCAT(rt1.c2)))), DENSE_RANK() OVER (), AVG(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0))) FROM rt1, rt2 WHERE (((((((-1.005514963E9)AND(x'')))AND(-1602966961))) NOTNULL));SELECT DISTINCT (((HEX(rt2.c2)))>((''))), ((rt0.c0)LIKE(rt0.c0)) COLLATE RTRIM, CAST(rt2.c0 AS NUMERIC) FROM rt2 LIMIT 551852096 OFFSET -1191172027;SELECT DISTINCT rt0.c1, ((((((((((rt1.c0)OR(rt0.c3)))AND(rt1.c2)))OR(rt2.c1)))OR(rt2.c1)))>=(((((rt1.c4)AND(rt2.c0)))OR(rt1.c3)))), ((((((rt0.c4)IS(rt2.c2)))OR(((rt0.c2)OR(rt1.c4)))))AND((rt0.c1 IN ()))) FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT (((((rt1.c1, rt2.c0, rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((rt2.c2, rt1.c1, rt2.c1, rt1.c1, rt1.c3)) AND ((rt2.c1, rt0.c2, rt2.c1, '', rt2.c1))))=((NOT (rt1.c2)))) FROM rt2, rt1;SELECT ALL json_insert(((rt1.c0)OR(rt2.c1)), rt0.c1 COLLATE BINARY, ((rt1.c0)||(rt2.c0)), RTRIM(NULL), COUNT(*)), '619998480', ((((SUM(rt2.c0))AND(SUM(rt2.c0))))OR(((rt1.c4)AND('*(c9)')))) FROM rt0, rt2, rt1 ORDER BY ((rt0.c4) NOT BETWEEN (((rt2.c1) ISNULL)) AND ((~ (rt2.c0)))) ASC;SELECT DISTINCT NULL COLLATE BINARY COLLATE RTRIM FROM rt2, rt0, rt1 ORDER BY ((rt0.c3) NOT NULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS INTEGER)) NOTNULL) FROM rt1 WHERE (CAST((('0.8222249637167587')||(0.04060671953435535)) AS REAL)); -- 0ms;
SELECT DISTINCT (rt0.c1 COLLATE NOCASE IN ()), rt1.c2, DENSE_RANK() OVER () FROM rt2, rt1, rt0 WHERE (((((0.11736126264002578)>>(-1.197773171E9))) NOT BETWEEN ((~ (NULL))) AND ((('W(gቼ|(笠g⠣') ISNULL)))) ORDER BY ((('%L')>>(rt1.c4)) IN ()); -- 1ms;
SELECT ALL COUNT(((rt1.c2)=(rt2.c0))) OVER (), TRIM(((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2))), RANK() OVER ( ORDER BY (((- (rt1.c1)))*(LIKELY(rt1.c2)))  NULLS FIRST) FROM rt0, rt2, rt1; -- 2ms;
SELECT ((rt1.c2)>>(rt1.c4)) COLLATE NOCASE FROM rt1, rt2, rt0 WHERE (((CASE WHEN x'' THEN x'' WHEN 'LNP5' THEN '0.8222249637167587' WHEN '254399629' THEN 0.3979365366326326 END) NOT BETWEEN (((2000230079) IS FALSE)) AND ((0Xfffffffffdb52a64 IN ())))) LIMIT -937263115 INTERSECT SELECT DISTINCT rt0.c2 FROM rt2, rt0;SELECT rt2.c2 FROM rt0;SELECT DISTINCT AVG(CAST(rt1.c2 AS REAL)), CASE CAST(rt1.c4 AS INTEGER)  WHEN COALESCE(DISTINCT rt0.c0, rt0.c1, rt2.c0, rt1.c2) THEN ((rt2.c2)<>(rt0.c4)) WHEN CASE WHEN rt1.c2 THEN rt2.c0 ELSE -1.553705195E9 END THEN TYPEOF(rt2.c1) WHEN rt2.c1 THEN CAST('-946453093' AS TEXT) ELSE (((rt1.c3, rt1.c2, rt1.c4)) BETWEEN ((rt1.c0, rt0.c0, rt1.c4)) AND ((rt1.c2, rt0.c3, 0.6486713206251876))) END, (rt2.c1 IN ((NOT (rt0.c1)))) FROM rt2, rt0, rt1; -- 1ms;
SELECT DISTINCT ((((rt0.c4) NOT NULL))>>(rt1.c3)) FROM rt0, rt2;SELECT DISTINCT 'm]/cdbPy' FROM rt1 GROUP BY ((((((rt2.c0)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (((rt1.c0)!=(rt2.c0)))), (((NOT (rt1.c2)))<>((rt1.c0 IN (rt0.c2)))), ((((rt2.c1)<(rt0.c2))) ISNULL) ORDER BY (- (((rt1.c4)AND(rt1.c1)))) DESC, ((UPPER(rt2.c0))IS NOT((+ (rt0.c2)))) ASC  NULLS LAST;SELECT DISTINCT TOTAL(((rt0.c1) IS TRUE)) OVER () FROM rt1, rt2;SELECT ((NULL)*((NOT (rt0.c1)))) FROM rt1;SELECT DISTINCT COUNT(*) FROM rt2; -- 0ms;
SELECT DISTINCT (~ (((rt0.c0)LIKE(rt0.c1)))) FROM rt0 NOT INDEXED, rt1 GROUP BY CASE rt1.c1  WHEN CAST(rt0.c4 AS NUMERIC) THEN CAST(rt0.c0 AS REAL) ELSE ((rt0.c4)||(rt1.c0)) END HAVING ((((((rt0.c2) NOT BETWEEN (rt2.c0) AND (rt2.c1)))AND(QUOTE(rt1.c4))))OR(CAST('1343472646' AS REAL)));SELECT DISTINCT TOTAL((- (rt0.c1))) OVER ( PARTITION BY CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt1.c4 ELSE rt1.c1 END THEN ((rt2.c1)IS NOT(rt1.c2)) END, rt0.c0), CASE (~ (rt1.c2))  WHEN CAST(rt2.c1 AS INTEGER) THEN rt0.c3 COLLATE RTRIM WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.8270785025866535)) WHEN (rt2.c1 IN ()) THEN ((rt1.c4) NOT BETWEEN (rt2.c1) AND (rt0.c3)) WHEN ((rt1.c0) IS FALSE) THEN (((x'46b1')) NOT BETWEEN ((rt0.c3)) AND ((rt2.c1))) WHEN ((rt2.c2)LIKE(rt0.c0)) THEN LIKELY(rt0.c4) END, ((rt2.c0)&((('-2110564357')>=(rt2.c2)))) FROM rt2 ORDER BY (((CAST(rt1.c3 AS REAL)))>=(((rt1.c1 IN ())))) ASC  NULLS FIRST;SELECT LAST_VALUE(rt0.c1) OVER () FROM rt0, rt2 WHERE ((((((0.005260071155044566)LIKE(0.13210422794241972)), (0.2211706056225512 IN ()), (((x'')) BETWEEN ((0Xffffffffa074aa4f)) AND ((0.7691603799622492))), ABS(-1405479977), ((x'')&(''))))==((CASE WHEN '0.0' THEN 0.9972237064102072 ELSE 0xffffffffc52252e6 END, ((((NULL)AND('-1281890356')))OR('-358051147')), ((NULL)|('G⡅gHD ')), (((('-941610449')AND(NULL)))AND(0.9317196487533803)), ((NULL) NOTNULL))))) ORDER BY '-1209754151' DESC  NULLS LAST, (((0x5aa0b9be, rt1.c4, rt1.c3)) NOT BETWEEN (((((('%t')AND(rt2.c1)))OR(rt0.c3)), ((rt2.c2) BETWEEN (rt0.c3) AND (rt0.c2)), ((rt1.c0)||(rt2.c1)))) AND (((NOT (rt1.c2)), rt2.c2 COLLATE RTRIM, ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)))AND(rt2.c0))))) DESC;SELECT DISTINCT ((rt1.c0)&((rt0.c0 IN ()))), rt0.c2, TRIM(SUM(rt1.c3)) FROM rt1, rt0, rt2; -- 0ms;
SELECT CAST(NULLIF(rt1.c3, rt0.c3) AS NUMERIC), rt0.c3, DENSE_RANK() OVER () FROM rt1, rt2, rt0 WHERE (((((NULL)IS(0x6854ead1)))<(0.7062355515066041 COLLATE NOCASE))); -- 7ms;
SELECT DISTINCT NTH_VALUE(((ABS(0.4550640733490262)) NOTNULL), -1.209754151E9) OVER () FROM rt0, rt1 WHERE (CAST((~ (0Xffffffff8f310097)) AS BLOB));SELECT (CASE WHEN rt1.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END IN ()) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (+ ('26oYW')) FROM rt0, rt2 WHERE ((~ (((((0.2572804656592751)OR(0Xffffffff885ef294)))AND(-915990594))))) ORDER BY ((((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<>(((rt1.c2)GLOB(rt0.c0)))) DESC;SELECT UNLIKELY(DISTINCT CHAR(rt1.c1)) FROM rt0, rt2, rt1 WHERE (((- (0.28836623612765844)) IN ())) GROUP BY CAST(((rt1.c0)IS(rt1.c0)) AS REAL); -- 0ms;
SELECT (~ ((~ (rt1.c2)))) FROM rt2, rt1 WHERE ((~ (''))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL))+(IFNULL(DISTINCT rt1.c0, 0X66f0bfb2))) FROM rt1 WHERE (((((NULL)GLOB(0.18045547643642468))) NOT BETWEEN ((((((((('N7')AND(NULL)))AND(x'')))OR(x'')))AND(x'af31'))) AND (((NULL)OR('Z')))));SELECT ALL CAST(((((((((rt2.c0)OR(rt0.c1)))AND(rt2.c2)))OR(rt2.c1)))AND('''^')) AS TEXT) FROM rt2 ORDER BY CAST(((NULL)<(rt1.c2)) AS INTEGER) ASC  NULLS LAST, (NOT (MAX(rt0.c0, rt1.c3))) DESC, TRIM(((((rt0.c0)OR(rt0.c1)))OR(rt1.c2)), (NOT (rt2.c2))) DESC;SELECT ((((rt0.c0)-(rt1.c2)))<=(CASE rt0.c4  WHEN rt2.c1 THEN rt0.c0 END)) FROM rt2, rt1;SELECT DISTINCT TOTAL((- (rt2.c0))) FROM rt2 LIMIT 1018549713 OFFSET -866279201; -- 0ms;
SELECT DISTINCT ((NOT (rt0.c3)) IN ()), 0xffffffffcc5da0df, x'0abf' FROM rt2 NOT INDEXED WHERE (CASE ('-1044095745' IN ())  WHEN (x'' IN (x'c0e0')) THEN ((('1214814915', NULL, 0.6486713206251876))==((x'', -1451649008, -565989917))) END); -- 0ms;
SELECT CAST('' AS TEXT) FROM rt0; -- 0ms;
SELECT (((((((rt2.c1)AND(rt2.c1)))OR(rt2.c0))))<=(((- (rt1.c1))))) FROM rt1, rt0, rt2 WHERE ((+ (NULL COLLATE BINARY))) ORDER BY CAST(((rt2.c1) BETWEEN (rt2.c2) AND (rt2.c2)) AS BLOB)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((LIKELY(rt1.c2)) BETWEEN (((x'e7db') IS TRUE)) AND (IFNULL(DISTINCT rt1.c4, rt1.c0))) FROM rt1, rt2, rt0 WHERE (CASE CASE NULL  WHEN '1779615935' THEN '' ELSE 0.8585783055667573 END  WHEN NULL COLLATE BINARY THEN '-838655189' END) GROUP BY ((((((((rt1.c2)AND(SQLITE_VERSION())))AND(((x'')<<(rt2.c1)))))AND(((rt0.c0) ISNULL))))OR('I2')), ((rt1.c4)-(((rt1.c4)<<(rt2.c0)))), (rt2.c2 IN ()) COLLATE NOCASE, CASE ((rt2.c1)OR(rt1.c2))  WHEN rt0.c1 THEN -2.007043436E9 ELSE rt1.c4 COLLATE RTRIM END, ((2031872337)OR(((rt1.c3) NOT NULL))) ORDER BY INSTR(NULL, (('-358051147')AND(rt1.c2))); -- 0ms;
SELECT DISTINCT (((((rt2.c2) ISNULL), SUM(rt0.c3), (- (rt2.c0))))==((NULLIF(rt1.c2, rt2.c2), ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((NULL) NOT BETWEEN (rt2.c0) AND (x''))))), 0.5979608734060861, rt1.c2 FROM rt1, rt2, rt0 GROUP BY ((((((((((rt1.c3)=(rt0.c4)))AND(CASE WHEN rt1.c0 THEN NULL END)))OR(rt0.c3 COLLATE NOCASE)))OR(((rt2.c2) BETWEEN (rt1.c2) AND (rt1.c1)))))OR(((rt1.c1)==('0.28836623612765844')))) HAVING ((((rt1.c4) NOTNULL)) IS TRUE) ORDER BY (((((NOT (0.8222249637167587)))AND(CAST(rt0.c4 AS TEXT))))AND(((rt0.c1)IS(rt0.c3)))) DESC  NULLS FIRST, (((rt1.c3, rt1.c2, x'', rt1.c1, rt2.c2)) BETWEEN ((((((((((rt0.c3)OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c1)))OR(rt1.c1)), rt1.c0, UNLIKELY(DISTINCT rt1.c4), ((rt0.c2) NOTNULL), CASE WHEN rt1.c4 THEN rt0.c1 END)) AND (((rt1.c3 IN (rt2.c1)), (((rt0.c3, x'919aeb0d', rt2.c2)) NOT BETWEEN ((rt2.c2, NULL, rt0.c3)) AND ((rt0.c0, rt0.c4, rt0.c3))), CASE WHEN rt2.c2 THEN rt0.c2 END, (('ꁨw')%(rt0.c1)), ((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))  NULLS FIRST; -- 1ms;
SELECT '' FROM rt0 GROUP BY ((((rt0.c2)AND(rt2.c0))) NOT BETWEEN (((NULL) IS FALSE)) AND (LTRIM(rt0.c2, rt2.c0))) HAVING ((MIN(rt2.c0))*(((NULL)OR(rt1.c0))));SELECT ALL ((((rt0.c3) BETWEEN (rt0.c4) AND (rt1.c4))) NOT BETWEEN ((+ (rt0.c1))) AND ((((rt0.c4))>=((rt2.c0))))) FROM rt2, rt1 ORDER BY (((rt1.c3)!=(rt2.c0)) IN ())  NULLS FIRST, CASE (((('Mﱯ귣A\nR')AND(rt1.c2)))OR(rt0.c0))  WHEN rt0.c4 THEN rt2.c2 WHEN ((rt1.c2)+(rt2.c2)) THEN CASE WHEN rt0.c3 THEN rt1.c3 END WHEN ((rt0.c3)AND(rt1.c4)) THEN ((rt1.c0) IS FALSE) END ASC  NULLS FIRST, CAST(rt0.c2 COLLATE NOCASE AS TEXT);SELECT DISTINCT LEAD((rt0.c0 IN ()) COLLATE NOCASE, CAST((~ (0Xffffffffd559fc6f)) AS REAL), ((rt2.c2 COLLATE NOCASE)|(((((((((rt1.c3)OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3))))) OVER (), CAST(rt0.c3 AS BLOB) COLLATE NOCASE, CASE WHEN ((rt0.c2) IS FALSE) THEN ((rt1.c4)>=(rt0.c4)) ELSE ((rt0.c3)IS NOT(rt0.c1)) END FROM rt0, rt2, rt1; -- 2ms;
SELECT DISTINCT (((((0.772727329422707) NOT BETWEEN (rt2.c1) AND (rt2.c0))))>=((((((rt1.c0)AND(rt1.c3)))OR(rt2.c2))))) FROM rt2, rt1 WHERE (CASE ((0.31304425277377124)/(464030235))  WHEN TYPEOF('~ⲏIF') THEN (('(s{') NOT BETWEEN (x'') AND (x'd5c9')) WHEN ((x'') BETWEEN (0x309b2850) AND ('')) THEN TRIM('>m1,hf\n荩', '') WHEN CASE WHEN 5.51852096E8 THEN '-255883194' ELSE 0.05201583232324203 END THEN '\G' COLLATE BINARY ELSE ((0.6563093925698545) NOT NULL) END) ORDER BY CASE WHEN ((rt0.c2)/(rt2.c2)) THEN rt0.c4 WHEN rt1.c1 THEN (rt0.c1 IN ()) WHEN ((rt1.c4)AND(rt1.c0)) THEN ((rt0.c4) IS FALSE) ELSE (rt2.c0 IN ()) END DESC, ((rt1.c4)>>(rt2.c0)) COLLATE NOCASE DESC  NULLS LAST;SELECT (NULLIF('1113002925', rt0.c3) IN ()) FROM rt2, rt0; -- 0ms;
SELECT ALL rt1.c0 FROM rt2, rt1, rt0 WHERE ((((((NULL) BETWEEN (NULL) AND (0.8036078970782501))))<>((x'' COLLATE NOCASE)))); -- 0ms;
SELECT ((COUNT(*)) ISNULL) FROM rt1 ORDER BY (((rt0.c0)) BETWEEN ((((-1153081194) IS FALSE))) AND ((CAST(rt1.c0 AS BLOB)))) DESC;SELECT ((((rt2.c0) ISNULL))>((((rt0.c4))<=((rt0.c3))))) FROM rt0, rt2 WHERE (CASE 0X71c63ded COLLATE BINARY  WHEN HEX(DISTINCT '*') THEN (x'' IN (0.2909792908436726)) WHEN ('1598081591' IN ()) THEN STRFTIME(-120923156, '', x'') WHEN (('*') NOT BETWEEN (NULL) AND (NULL)) THEN (((('4?')AND(NULL)))OR(0.36769714692821853)) END); -- 0ms;
SELECT ALL x'' FROM rt2, rt1, rt0 WHERE ((((NOT (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT AVG(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c3))) COLLATE NOCASE FROM rt2;SELECT DISTINCT rt0.c4 FROM rt2 WHERE (((((((((((NULL)/(x'')))AND((('V7풍A?V	') IS TRUE))))AND((x'' IN ()))))OR(CASE -830076831  WHEN NULL THEN 1.6823376837049597E-4 ELSE -883424809 END)))AND(CASE WHEN x'9041' THEN '470492893' END)));SELECT ((((((rt0.c0) IS FALSE))AND((((rt2.c1))<((rt0.c0))))))OR(MIN(rt1.c4))) FROM rt2, rt1, rt0; -- 1ms;
SELECT ((rt1.c4)AND(rt0.c1)) COLLATE RTRIM, MAX(TRIM(rt1.c1)), COUNT(*) OVER (), LEAD(rt1.c1 COLLATE NOCASE, (((rt0.c0, rt1.c2, rt0.c0)) NOT BETWEEN ((CASE rt1.c1  WHEN rt0.c0 THEN rt1.c4 END, IFNULL(rt0.c2, rt1.c2), ((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) AND ((LIKELY(rt0.c4), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((((rt1.c3)OR(rt0.c1)))OR(rt0.c0))))), '-FzoE') OVER (), SQLITE_VERSION() FROM rt0, rt1 WHERE (((((-7.15522961E8)OR(0.9329227029811735)))AND(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(NULL AS NUMERIC) FROM rt1 WHERE ((((((((((+ (x'')))AND(('' IN ()))))AND(((x'e936')<<('{')))))AND(((('hp', NULL, NULL))=(('~oup', x'', '-1220013454'))))))OR((((x'')) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT ALL (- (((rt0.c1)|(rt2.c0)))) FROM rt2, rt1 WHERE ((((((NULL, -1160537046, '292098051'))=(('2063639003', x'', '-866279201')))) BETWEEN (((NULL)IS NOT(x''))) AND (CASE ''  WHEN '-715522961' THEN x'952f' ELSE 0X43745e50 END)));SELECT DISTINCT ((((((rt1.c0)<=(rt1.c3)))AND((NOT (rt2.c1)))))AND((('9?f') NOT BETWEEN (NULL) AND (rt1.c3)))) FROM rt1, rt2, rt0 LIMIT 1900476666 OFFSET -8018460; -- 1ms;
SELECT DISTINCT ((AVG(rt1.c4))>=(CAST(rt2.c1 AS BLOB))) FROM rt1, rt2 WHERE (CAST((('0.772727329422707')%('-90681264')) AS TEXT)); -- 0ms;
SELECT DISTINCT CAST((+ (rt2.c2)) AS INTEGER) FROM rt0, rt2; -- 0ms;
SELECT ALL rt2.c0, ((((rt0.c0) ISNULL)) NOTNULL), COUNT(GROUP_CONCAT(((rt0.c3) NOTNULL))) FROM rt0 WHERE (CASE (~ ('OJy'))  WHEN '-358051147' COLLATE NOCASE THEN ((' %u>0%IDW') NOT BETWEEN (NULL) AND ('cNDQZDz')) ELSE ((NULL)*(NULL)) END);SELECT (+ (CAST(rt1.c1 AS REAL))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c4))) FROM rt1 INNER JOIN rt2 ON ((((rt0.c3) ISNULL))GLOB(((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c1))));SELECT ALL ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE) FROM rt0 WHERE ((- (CAST(NULL AS BLOB)))) UNION ALL SELECT ((((rt0.c4) IS TRUE)) BETWEEN (CAST(rt1.c1 AS REAL)) AND (((rt0.c4)>>(rt0.c0)))) FROM rt1, rt0, rt2 WHERE (((((0.4614121788443186) NOT BETWEEN ('-1405514076') AND (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT UNLIKELY(((rt2.c1)-(rt1.c4))), ((rt1.c1)IS(rt1.c2 COLLATE RTRIM)), COUNT(*) OVER ( PARTITION BY ((((((((((NULL)AND(rt1.c1)))AND(((rt0.c0)>(rt2.c0)))))OR(NULLIF(DISTINCT rt0.c4, rt0.c3))))OR((NOT (rt1.c4)))))OR(((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2)))), CASE WHEN CAST(rt1.c0 AS BLOB) THEN CAST(rt2.c2 AS TEXT) ELSE CAST(rt0.c0 AS BLOB) END) FROM rt0, rt2 CROSS JOIN rt1 ON '-7'; -- 2ms;
SELECT DISTINCT ((((rt0.c4)OR(TOTAL_CHANGES())))AND(SUBSTR(rt0.c4, -38458780))), (('488909019')>(((rt2.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), ROW_NUMBER() OVER (), x'', CASE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt1.c1) NOT NULL) THEN MIN(rt1.c0) WHEN -8.20631517E8 COLLATE NOCASE THEN 0.031468169472463 WHEN ((rt0.c1)*(rt2.c1)) THEN ((rt1.c3) IS TRUE) ELSE CASE WHEN rt1.c0 THEN '0.13210422794241972' END END FROM rt2, rt0, rt1 NOT INDEXED GROUP BY 0x50191796 HAVING rt2.c1;SELECT DISTINCT (((((rt0.c2) IS TRUE), MAX(rt0.c4), rt1.c1 COLLATE BINARY))!=((rt1.c4, x'', 0xffffffffc7e02a2f))), (((((- (rt1.c3)))OR((((rt2.c1, rt1.c2, rt2.c1))<((rt1.c3, rt2.c0, rt1.c0))))))OR((((rt0.c3))<=((rt2.c1))))), ((NULLIF(rt0.c1, rt1.c2)) NOT NULL) FROM rt2 WHERE ((0.6555308518030178 IN ()) COLLATE RTRIM);SELECT rt0.c3 FROM rt2 WHERE (((((660982077) NOTNULL))<((('-1026019365')|(NULL)))));SELECT ((CASE WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c3 THEN rt2.c0 WHEN rt1.c4 THEN rt2.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt2.c1 THEN rt2.c1 END)<>(DATE(rt0.c4, rt0.c3, rt1.c2))), ((((rt1.c1)OR(rt2.c2)))AND(rt1.c3)) COLLATE BINARY, COUNT(*) OVER () FROM rt1, rt0, rt2 ORDER BY rt0.c2 COLLATE NOCASE LIMIT 1727053746 OFFSET -1909644210; -- 8ms;
SELECT DISTINCT PERCENT_RANK() OVER (), (((((rt0.c3, rt1.c2, rt2.c1)) BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c2, rt0.c3, rt0.c2))))>=(((rt0.c4)IS NOT(rt1.c1)))), CASE rt0.c1  WHEN rt0.c0 THEN rt2.c0 ELSE rt2.c2 END COLLATE BINARY FROM rt2, rt0;SELECT DISTINCT rt1.c4, (((rt0.c1) ISNULL) IN ()), (- (((((((((x'')OR(rt0.c3)))AND(rt2.c0)))AND(rt1.c0)))AND(rt1.c1)))) FROM rt0, rt2, rt1 WHERE (((((((((((-9.0681264E7)OR(0.1757969913365185)))AND(0.7893310751992344)))OR(0.09891175984955669)))OR(229303686)))>=((~ ('1795369330'))))); -- 0ms;
SELECT DISTINCT MIN(CAST(rt1.c0 AS TEXT)), ((((rt0.c4) BETWEEN (rt1.c4) AND (-358051147)))<<(TYPEOF(rt0.c1))), ((((256730658) IS TRUE)) NOT BETWEEN (CAST(rt0.c4 AS NUMERIC)) AND (CASE rt0.c1  WHEN rt1.c3 THEN rt2.c1 END)) FROM rt1, rt2, rt0 WHERE ((((CASE '-1281890356'  WHEN NULL THEN x'' WHEN x'' THEN 0.16648614674256612 WHEN NULL THEN 1.018549713E9 END))<=((CASE NULL  WHEN NULL THEN NULL ELSE 'm]/cdbpy' END)))) GROUP BY CASE WHEN rt1.c3 THEN CAST(rt1.c1 AS TEXT) ELSE ((rt1.c4) NOTNULL) END HAVING CASE WHEN rt2.c0 THEN COUNT(rt2.c0) WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c4)) WHEN ((((rt1.c2)OR(rt2.c0)))AND(rt0.c4)) THEN NULL WHEN ((((((((rt0.c4)AND(rt0.c4)))AND(rt1.c0)))AND(rt2.c0)))AND(rt0.c1)) THEN rt2.c0 WHEN ((rt1.c2)OR(rt1.c2)) THEN x'' END; -- 0ms;
SELECT ALL rt2.c2 FROM rt0 WHERE ('-979038894');SELECT DISTINCT rt1.c4, 0.09906354094894776, CASE WHEN rt0.c0 THEN (~ (rt2.c0)) END FROM rt2, rt1;SELECT DISTINCT (- (CAST(rt0.c1 AS NUMERIC))), (((rt2.c1) NOT NULL) IN (((rt2.c0)>=('-183188535')), CASE rt1.c2  WHEN rt0.c2 THEN rt0.c0 END)), ((((rt2.c0 COLLATE NOCASE)AND(((rt0.c3)|(rt1.c0)))))AND(((rt1.c0) NOT BETWEEN (rt0.c3) AND (rt1.c1)))) FROM rt2 WHERE ((((~ ('0.005260071155044566')))>((- ('ጤ}rrjl')))));SELECT DISTINCT CASE WHEN rt0.c2 THEN COUNT(rt0.c1) END FROM rt2, rt0, rt1 WHERE (((('d>')) BETWEEN ((((0.6033942195951478) NOT NULL))) AND ((((0.16648614674256612) BETWEEN ('NP') AND (0.10614082618713627)))))); -- 0ms;
SELECT ALL (((((rt2.c0))=((x'')))) ISNULL), CASE (NOT (rt0.c4))  WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c3) NOT BETWEEN (rt2.c0) AND (rt2.c1)) WHEN ((rt2.c0)>>(rt2.c1)) THEN CAST(rt1.c0 AS NUMERIC) WHEN (rt1.c4 IN (rt1.c1)) THEN rt0.c4 END, TOTAL(CAST(rt0.c1 AS BLOB)) OVER () FROM rt1 LIMIT 889076062;SELECT CAST(((((rt2.c1)AND(rt0.c0)))AND(rt1.c4)) AS REAL) FROM rt2, rt1, rt0 WHERE ((((~ (NULL))) NOT BETWEEN ((('31F?')GLOB(x''))) AND ((('粄>') BETWEEN ('-1726971095') AND (0X7b0e1723))))); -- 0ms;
SELECT ALL (((((rt2.c2 IN ()))AND(((((rt1.c2)AND('411763709')))AND(rt1.c3)))))AND(COUNT(rt0.c4))) FROM rt1 WHERE ((NOT ('')) COLLATE BINARY); -- 0ms;
SELECT (((((rt1.c2)>=(rt1.c1)), TOTAL(rt0.c3), (((rt0.c1))<=((rt1.c4))), ((rt0.c3)<=(rt2.c0)), (((rt1.c2))>=((NULL)))))=((CAST(rt0.c4 AS NUMERIC), rt2.c1 COLLATE NOCASE, GROUP_CONCAT(rt2.c0), AVG(rt0.c2), ((((rt1.c2)OR(rt0.c2)))AND(rt2.c2))))) FROM rt0;SELECT (((((rt1.c4) ISNULL)))<>((((rt0.c1) IS FALSE)))) FROM rt2, rt0 WHERE (((json_array_length('157592854', NULL)) BETWEEN (CASE WHEN -9.0681264E7 THEN '-1005514963' ELSE '464030235' END) AND ('ጤ}Rrjl')));SELECT json_remove(NULL, CAST(rt0.c3 AS TEXT)) FROM rt2, rt1, rt0; -- 1ms;
SELECT CAST(((((rt0.c1)AND(rt2.c1)))OR(rt2.c0)) AS NUMERIC), ((rt2.c0 COLLATE NOCASE) NOT NULL), ((rt1.c2) NOT BETWEEN (((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c3))) AND (((rt1.c2)IS NOT(rt1.c4)))) FROM rt0 WHERE (((CAST(0.44404019289455066 AS INTEGER)) IS TRUE));SELECT HEX(CAST(rt1.c0 AS TEXT)) FROM rt0, rt2 WHERE (((json_remove(x'', 0.1561804293711967))IS NOT(CASE WHEN '-830076831' THEN '^8' WHEN '-2007043436' THEN -1.197773171E9 WHEN '-176295649' THEN x'' WHEN x'' THEN NULL WHEN 654082900 THEN NULL ELSE 'BY' END))) ORDER BY (((x'', (rt2.c1 IN (rt0.c3, rt0.c4)), CAST(rt0.c3 AS NUMERIC)))<((TYPEOF(DISTINCT rt0.c4), (NOT (rt2.c0)), ((rt2.c1)>(rt2.c2))))) ASC  NULLS LAST;SELECT ALL AVG((- (rt0.c4))) OVER ( ORDER BY 0.41563233382269693  NULLS LAST) FROM rt0, rt2, rt1 WHERE (NULL); -- 0ms;
SELECT ((((rt2.c2)|(rt2.c2))) BETWEEN ((((rt2.c1, rt2.c1, rt1.c2)) NOT BETWEEN ((rt0.c0, rt2.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt1.c4)))) AND (CASE rt1.c3  WHEN rt1.c1 THEN NULL END)) FROM rt2, rt0 WHERE (((NULL)|(1.779615935E9 COLLATE NOCASE)));SELECT NTH_VALUE(CAST(LOWER(rt0.c4) AS NUMERIC), (((rt0.c1)) BETWEEN ((((rt0.c1) BETWEEN (rt1.c4) AND (rt0.c0)))) AND ((TYPEOF(DISTINCT rt0.c3))))) OVER () FROM rt1, rt0 WHERE (COALESCE((('26oYW') BETWEEN (x'') AND (x'')), ((x'') IS FALSE))); -- 1ms;
SELECT DISTINCT (((((rt1.c1)>=(rt0.c3))))<=((rt0.c4))) FROM rt0 WHERE ((((((x'')*(0.2211706056225512)), ((((x'1591')OR(2136485007)))OR('')), x'7a93'))<(((((x''))=(('-484453408'))), (((NULL)) BETWEEN ((0x2e4e3882)) AND ((NULL))), (('<\r')!=(-1.197773171E9))))));SELECT ALL (CAST(rt1.c4 AS TEXT) IN ()) FROM rt0, rt1 LIMIT -1100505970; -- 0ms;
SELECT DISTINCT ((NULL)%(rt1.c3)) FROM rt0 WHERE (CAST((- ('RKR9&m	')) AS REAL));SELECT DISTINCT AVG(CASE WHEN rt1.c2 THEN x'' WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 END), RANK() OVER (), ((CAST(rt2.c1 AS INTEGER)) IS TRUE) FROM rt0, rt1, rt2; -- 0ms;
SELECT ALL (CHANGES() IN ()), UPPER(COUNT(*)), (('G⡅gHD ') NOTNULL) FROM rt2, rt1; -- 1ms;
SELECT DISTINCT (NOT (rt1.c1)) FROM rt0 GROUP BY (rt2.c0 COLLATE NOCASE IN ());SELECT DISTINCT CASE WHEN rt1.c1 COLLATE RTRIM THEN rt0.c0 WHEN MAX(0.557922868420266) THEN CAST(rt1.c1 AS REAL) WHEN TRIM(rt1.c1, rt0.c0) THEN rt2.c0 END FROM rt1 WHERE ((((NULL))<=((2.031872337E9))) COLLATE BINARY);SELECT DISTINCT rt1.c1, ((((rt1.c1)<>(rt2.c2)))==((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))), rt2.c2 FROM rt0 WHERE (CAST((+ ('f2&꤫s')) AS TEXT));SELECT ((rt1.c1) BETWEEN (((rt0.c4)>=(rt0.c3))) AND (CASE WHEN rt1.c2 THEN rt2.c1 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c0 END)) FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT ((rt1.c0)GLOB(((rt0.c0)|('-1160537046')))), CASE WHEN rt2.c0 THEN rt1.c0 ELSE rt1.c1 END COLLATE BINARY, (- (((rt1.c0)>(rt1.c2)))) FROM rt0;SELECT ALL MIN(((((((((((((rt0.c0)AND(rt2.c0)))AND(rt0.c0)))OR(rt1.c0)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c2))) FROM rt2 ORDER BY (+ (CAST(rt2.c0 AS BLOB))) DESC;SELECT DISTINCT '2063639003' FROM rt0, rt1 GROUP BY (((((((rt1.c4)AND(rt2.c0)))OR(rt2.c2))))>((rt2.c0))) HAVING ((((rt2.c0)/(rt0.c1)))<(CAST(rt0.c0 AS NUMERIC)));SELECT RANK() OVER ( ORDER BY ((((rt2.c1)>=(rt1.c2)))>(((rt0.c1) ISNULL))) DESC, STRFTIME(((((rt0.c3)OR(rt0.c4)))OR(rt2.c0)), (rt2.c2 IN ()), ((0xffffffffc50988fb) IS FALSE)) ASC  NULLS FIRST) FROM rt2 WHERE ((NOT ((- (0xa36928d)))));SELECT ALL ((CHAR(rt2.c2)) NOTNULL) FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)<(rt1.c2)) AS INTEGER) FROM rt0, rt2, rt1 LIMIT 840186490 OFFSET -1551980018; -- 0ms;
SELECT DISTINCT ((((rt2.c1) IS FALSE))-(((((rt1.c1)OR(rt1.c2)))AND(rt0.c0)))), ROUND(((((rt0.c2)OR(rt0.c2)))AND(rt1.c1)), (rt1.c2 IN (rt1.c0, rt0.c1, rt1.c2))), TOTAL(((rt2.c2)+('-8018460'))) OVER () FROM rt1, rt0, rt2 LIMIT -1405514076 OFFSET 436732670; -- 1ms;
SELECT ALL (+ (('start of month' IN (rt1.c4)))) FROM rt0, rt1, rt2; -- 0ms;
SELECT ((((0x7fffffffffffffff)OR(rt0.c4 COLLATE BINARY)))OR((('q0')LIKE(rt1.c1)))) FROM rt2 WHERE (((((((0.5926025664026298, '', NULL)) BETWEEN ((0.7845273859439656, NULL, 't')) AND (('-8018460', 0Xc5428, NULL)))))>((CAST(0Xffffffff885ef294 AS TEXT))))) GROUP BY (CASE rt2.c0  WHEN rt1.c2 THEN rt2.c1 END IN ());SELECT ((((((rt1.c3) NOT BETWEEN (rt2.c2) AND (rt1.c3)))OR((rt2.c0 IN ()))))OR(((rt1.c2) ISNULL))) FROM rt1, rt2, rt0 WHERE ((('1929879646') BETWEEN ((NOT (NULL))) AND (((((((((NULL)AND(0.13018079533178795)))AND(0.3562005262093566)))OR(x'')))AND(x'a882'))))); -- 0ms;
SELECT ALL SUM((NOT (rt2.c0))) OVER () FROM rt2 WHERE (((((('-1576828055', x'', x''))!=((NULL, NULL, x'')))) NOT BETWEEN (0.09949283679526555) AND (((NULL) NOT BETWEEN ('9?F') AND (0.36680065347189317))))); -- 0ms;
SELECT DISTINCT (- (SUM(rt2.c1))) FROM rt1, rt0 WHERE (((((0Xffffffffe5dd5d18) IS TRUE)) BETWEEN (((NULL) BETWEEN (NULL) AND (1608702497))) AND ('-367380536' COLLATE BINARY)));SELECT rt2.c0 FROM rt1;SELECT ALL CAST((+ (rt1.c0)) AS REAL), (((((+ (rt0.c2)))OR(GROUP_CONCAT(rt1.c3))))AND(((rt0.c1)OR(rt1.c1)))), ((((rt1.c3, rt1.c1, rt2.c1, rt1.c0, rt2.c0)) BETWEEN ((rt0.c3, rt0.c3, '-937263115', rt1.c2, NULL)) AND ((rt1.c0, rt0.c3, rt0.c3, rt1.c2, rt1.c2))) IN ()) FROM rt0, rt2 WHERE (((('2099933489') BETWEEN (x'') AND (x'')) IN ()));SELECT DISTINCT ((rt2.c0) ISNULL) COLLATE RTRIM, IFNULL(DISTINCT ((('[', rt0.c4, rt1.c0))!=(('', rt1.c0, rt0.c0))), CASE WHEN rt2.c0 THEN rt0.c4 END), rt0.c4, NULL, json_patch((rt0.c2 IN ()), CAST(rt1.c2 AS INTEGER)) FROM rt1 WHERE (((('')) BETWEEN (((((('''qp')OR('Ae.')))OR(x'd8e4')))) AND ((((NULL)>>(0Xfffffffff8cadbec))))));SELECT CAST(rt2.c0 AS REAL) COLLATE BINARY FROM rt0, rt1;SELECT DISTINCT (MAX(rt0.c1) IN ()) FROM rt1 WHERE (-782239240); -- 0ms;
SELECT ALL (TRIM(rt1.c0, rt0.c0) IN (LIKELIHOOD(rt2.c0, 0.2593715268008736), 0.5312327019370379)) FROM rt1, rt0 WHERE ((+ (((x'')>('')))));SELECT DISTINCT (- (((rt0.c3)>(rt2.c0)))), (CAST(rt0.c1 AS INTEGER) IN ()), ((NOT (rt2.c1)) IN (((rt0.c1)<(rt0.c1)))) FROM rt0 RIGHT OUTER JOIN rt2 ON CASE WHEN ((rt0.c3)*(rt0.c1)) THEN ((rt1.c3)==(rt1.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN (rt0.c1 IN ()) WHEN CAST(rt1.c3 AS TEXT) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END;SELECT ALL ((rt1.c3 IN (rt0.c0, rt1.c3)) IN ()) FROM rt0, rt2 WHERE ((- ((((0.2568255631005454, -1507978827, 'Ǘ5풍G~qH'))>=(('hp', '-1379111193', x'1950')))))) GROUP BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1))) BETWEEN (((rt1.c2)||(rt2.c1))) AND (((((rt2.c2)AND(rt1.c1)))OR(rt0.c2)))), (((rt2.c0 IN ())) IS FALSE), ((((rt1.c3) BETWEEN (rt0.c1) AND (rt2.c2)))<=(((rt2.c0)GLOB(rt1.c3)))) HAVING (((((rt1.c0))==((rt1.c1))))<(((rt1.c1)LIKE(rt2.c0))));SELECT DISTINCT ((((((((((((COUNT(rt0.c0))OR(((rt0.c1)>>(rt2.c1)))))AND(((x'')&(rt0.c2)))))OR(rt0.c3)))AND(rt0.c3 COLLATE BINARY)))OR(CASE NULL  WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c3 END)))AND(NULLIF(DISTINCT rt0.c0, rt0.c1))) FROM rt2, rt0 ORDER BY (((RTRIM(NULL)))<=((rt0.c4))) ASC;SELECT DISTINCT (((rt0.c2, rt2.c2, rt1.c1)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c0)), ((rt0.c2)<=(rt1.c4)), (rt1.c1 IN ()))) AND (((((rt2.c0, rt1.c0, rt1.c3)) BETWEEN ((rt0.c4, 0.4288689735261543, rt1.c0)) AND ((rt1.c4, rt0.c4, rt1.c0))), CASE rt0.c4  WHEN rt2.c1 THEN rt0.c1 END, CASE WHEN rt1.c4 THEN rt2.c1 ELSE rt0.c2 END))), ((((((((((rt2.c0)LIKE(rt0.c3)))OR(((rt2.c2)&(rt0.c4)))))OR(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c4)))))AND(((rt0.c4)-(rt1.c1)))))AND(((rt1.c1) IS TRUE))), ((((((rt1.c1)>(rt0.c1)))OR(LIKELY(rt1.c3))))AND(((rt2.c0)IS NOT(rt1.c2)))) FROM rt2, rt1, rt0 WHERE (('-1862370921' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT CAST(((((-1929891331)AND(rt1.c2)))OR(rt0.c2)) AS BLOB) FROM rt1 NOT INDEXED, rt2 WHERE (CASE (((2063639003))<((x'')))  WHEN ((0.9317196487533803)*('-979038894')) THEN CAST('254399629' AS INTEGER) WHEN x'' COLLATE NOCASE THEN (('\r') NOT BETWEEN (2002202391) AND (0.5366101668672043)) WHEN ((0.37591288647676835)<>(x'')) THEN NULL COLLATE BINARY END) LIMIT 1152563611 OFFSET 31960246;SELECT DISTINCT (((((rt2.c1)) NOT BETWEEN ((NULL)) AND ((x'')))) NOTNULL) FROM rt1, rt0, rt2 LIMIT 1520482750; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt2, rt1, rt0 WHERE ((((('릾*,b')<=(x'6623')))==(COALESCE(0.1420598280192341, NULL)))); -- 1ms;
SELECT ALL (~ (rt1.c4 COLLATE RTRIM)) FROM rt0, rt2 WHERE ((('l<' COLLATE NOCASE) ISNULL));SELECT ALL (TRIM(rt2.c1) IN ()), CAST(CASE WHEN rt1.c3 THEN rt2.c1 END AS BLOB), ((rt0.c3) BETWEEN (x'') AND (rt1.c0)) COLLATE NOCASE FROM rt1, rt2;SELECT ALL ((((('-1564695764') NOT BETWEEN (rt1.c1) AND (rt0.c2))))==((((rt0.c1)!=(rt1.c4))))), (((rt1.c4) IS TRUE) IN ()), ((((rt0.c0)<=(rt2.c0)))|(CAST(rt0.c3 AS NUMERIC))) FROM rt1, rt2, rt0 WHERE ((- (((-2092422582)!=('R'))))); -- 0ms;
SELECT ALL LAG(0.10822192450237789, (+ (((rt1.c2)||(rt1.c2)))), MIN((+ (rt1.c3)), CAST(rt1.c1 AS TEXT))) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP), (~ (((((rt1.c3)AND(rt2.c0)))OR(rt0.c0)))), MIN(((rt2.c2) IS TRUE)), ((((rt1.c2)AND(rt2.c2))) BETWEEN (((rt2.c2)<=(0.6738187717693903))) AND (rt1.c0)), NULL FROM rt1 WHERE (x'');SELECT DISTINCT ((CAST(rt1.c0 AS TEXT))=(((rt0.c1)<>(rt2.c0)))) FROM rt0, rt1, rt2 WHERE (CAST('-1025678533' AS BLOB) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT CASE WHEN ((rt1.c4) BETWEEN (rt0.c0) AND (rt2.c0)) THEN ((rt0.c4) IS FALSE) END FROM rt1, rt2 WHERE (CASE WHEN ((((((((NULL)AND('525269311')))OR(x'')))AND(-4.84453408E8)))AND(NULL)) THEN (- (x'')) END);SELECT DISTINCT (((rt2.c1)) NOT BETWEEN ((((rt0.c2)>(rt1.c3)))) AND ((rt0.c2))) FROM rt1, rt2 WHERE ((((~ (''))) NOT NULL));SELECT FIRST_VALUE(rt1.c4) OVER (), ((rt2.c0)*(rt0.c4)) COLLATE RTRIM, RANK() OVER () FROM rt2, rt0, rt1 WHERE ((((ABS(DISTINCT x'79c0'), (('\TDFB>')||(x'3d10089d')), (('a_R7E괖')LIKE(0.9216100301341591))))=(((((-484453408, -1909644210, '1')) NOT BETWEEN ((0.41563233382269693, x'', 470492893)) AND ((NULL, NULL, '1795369330'))), x'' COLLATE NOCASE, ('<eNt' IN (NULL)))))); -- 0ms;
SELECT DISTINCT ((((rt1.c1 COLLATE RTRIM)OR(((rt2.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR(rt0.c3 COLLATE BINARY)) FROM rt1, rt2, rt0; -- 1ms;
SELECT (((((rt0.c3 IN ()))AND(((rt1.c3) IS TRUE))))OR(((rt0.c4)>>(rt0.c4)))) FROM rt0, rt1, rt2 WHERE (CAST('1750395601' COLLATE BINARY AS INTEGER)); -- 0ms;
SELECT ALL CAST(((((NULL)AND(rt0.c3)))AND(x'')) AS TEXT) FROM rt2, rt1;SELECT MIN((rt2.c2 IN (rt1.c1, rt2.c0))), LAG(CASE WHEN '5 krRrj\r7' COLLATE RTRIM THEN rt1.c4 END, ((x'746c')<>((NOT (rt0.c1)))), ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (('' IN (rt1.c3, rt0.c4))) AND ((rt1.c4 IN (rt1.c3))))) OVER (), CAST(((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt2.c1)) AS REAL) FROM rt1, rt0;SELECT ALL ROW_NUMBER() OVER () FROM rt0 NOT INDEXED, rt2 GROUP BY 0.5331449308001657 HAVING CAST(((rt2.c0) NOT BETWEEN (rt1.c3) AND (rt2.c1)) AS REAL) LIMIT 168367038 OFFSET -1553705195;SELECT DISTINCT rt1.c0 FROM rt1, rt2; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt0, rt2 WHERE (((-565989917) NOT BETWEEN (((((0X50403de)AND(x'')))AND(NULL))) AND ((('玸\')OR(x''))))) GROUP BY IFNULL(CAST(rt2.c1 AS TEXT), (NOT (rt1.c0))), (((((rt0.c4) BETWEEN (rt0.c2) AND (rt2.c0)), ((0.6307613392476944)||(0.5889386496812048)), CAST(rt1.c3 AS TEXT)))<((ROUND(rt1.c3, rt0.c2), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 END, ((rt2.c2)<(rt1.c0))))), ((LIKELIHOOD(rt1.c1, 0.4628610012809242)) ISNULL);SELECT ALL ((((((((((rt1.c3)AND(rt2.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt1.c1)))||((('')-(rt0.c0)))), NULL, CASE WHEN rt2.c0 COLLATE RTRIM THEN ((((rt2.c1)OR(rt0.c0)))OR(rt2.c1)) WHEN (rt2.c2 IN ()) THEN (NOT ('0.2568255631005454')) WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c3)GLOB(rt0.c4)) ELSE ((rt1.c2)>(rt0.c1)) END FROM rt2, rt1, rt0 WHERE ((- ((('0.1757969913365185') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ALL '' FROM rt1 WHERE (((CASE ''  WHEN '-321190433' THEN x'' ELSE NULL END)<<(((((NULL)OR(0.7289011498250909)))OR(-1929357091))))) ORDER BY rt1.c4 DESC  NULLS LAST, ((LAST_INSERT_ROWID())LIKE(rt1.c4 COLLATE BINARY)) ASC; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c2))*(((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c1)))), 1.57592854E8, (((rt1.c2 IN ())) IS TRUE) FROM rt2, rt0, rt1; -- 0ms;
SELECT ALL TOTAL((+ (rt0.c4))) COLLATE RTRIM, rt0.c4, LAG(((CASE rt1.c1  WHEN 'iF' THEN rt1.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt1.c1 THEN rt1.c3 END) ISNULL), ((rt1.c4 COLLATE NOCASE)!=(((rt0.c0)<<(rt0.c2)))), (((rt1.c1 IN (rt0.c0))) IS FALSE)) OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(CAST(rt2.c2 AS REAL) AS INTEGER) FROM rt2, rt1 ORDER BY (rt1.c3 IN ()) ASC; -- 0ms;
SELECT ALL IFNULL(DISTINCT ((rt2.c1)>>(rt2.c0)), ((rt2.c1)<<(rt2.c1))) FROM rt1;SELECT DISTINCT 'G⡅gHD ' FROM rt2, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)%(rt1.c3)))AND('')))AND(CASE WHEN rt0.c1 THEN rt2.c0 END)), ((SQLITE_SOURCE_ID())IS(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt1.c0)))), (NOT (CASE WHEN rt2.c0 THEN NULL WHEN rt2.c2 THEN rt1.c3 WHEN rt0.c3 THEN rt2.c1 END)) FROM rt0 WHERE ((((((254474881, NULL, NULL))<(('881237825', x'', x''))))<>(((x'') NOT BETWEEN ('1551411798') AND (0.5637017396073175)))));SELECT COALESCE(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, CASE WHEN rt1.c1 THEN rt2.c2 ELSE rt2.c2 END), ((COUNT(*))>(((rt1.c4) IS FALSE))), (~ ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt1.c1))))), CASE MIN('186110167')  WHEN ((rt0.c4) NOT BETWEEN (x'') AND (rt1.c0)) THEN CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt2.c0 END ELSE (~ (rt1.c4)) END, ((((((((rt1.c1)AND(rt1.c3)))OR(rt2.c0)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt1.c4 END)))OR(CASE rt1.c4  WHEN rt2.c2 THEN rt2.c2 WHEN rt0.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt2.c2 THEN rt1.c1 END)), rt0.c3, AVG(SUM(CAST(rt1.c1 AS BLOB))) FROM rt1 WHERE ((((((0.20474786744610352))>=((NULL)))) NOT BETWEEN ((((((((('85302075')AND(x'')))AND('\r')))AND('-1772021670')))AND(0.9254672994464991))) AND ((NOT (NULL)))));SELECT DISTINCT 0.2642183736199214 FROM rt2, rt0 WHERE (((0.35113147462034155 COLLATE NOCASE) NOT BETWEEN (((NULL) NOT BETWEEN ('2136485007') AND ('-110059416'))) AND (CAST(0.7893310751992344 AS NUMERIC)))) GROUP BY ((CAST('' AS BLOB))LIKE(CAST(rt0.c1 AS INTEGER))) HAVING 0x54a0b528; -- 0ms;
SELECT ((rt0.c3) NOT NULL) FROM rt2 WHERE (LIKELY(DISTINCT (x'0582' IN ())));SELECT ALL CAST(COALESCE(rt1.c0, rt0.c4) AS REAL) FROM rt0, rt2 WHERE (((((((((((((NULL)AND((NOT (x'b201')))))AND((((NULL)) BETWEEN ((x'')) AND ((NULL))))))OR(CASE NULL  WHEN 1495766746 THEN x'' END)))AND((+ (x'')))))OR(((((x'170f')OR(NULL)))OR(NULL)))))OR((((x'')) NOT BETWEEN ((0.6555308518030178)) AND ((x''))))));SELECT ALL x'' FROM rt1, rt0, rt2 WHERE (((((((x'5747') BETWEEN (x'') AND (-9.87606298E8)))AND((NULL IN ()))))OR(((1042272063) IS TRUE)))); -- 0ms;
SELECT ALL rt1.c2 FROM rt0, rt2 LIMIT -1654891830;SELECT ALL ((((rt1.c0)IS(rt2.c2))) NOT NULL) FROM rt0 ORDER BY ((CASE rt2.c2  WHEN rt0.c4 THEN rt2.c2 ELSE rt0.c0 END) IS FALSE) DESC  NULLS LAST, ((((rt1.c4)=(rt0.c0)))OR(CASE WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN NULL END));SELECT DISTINCT LAST_VALUE('2000230079') OVER ( ORDER BY rt2.c0  NULLS LAST) FROM rt0, rt2; -- 0ms;
SELECT DISTINCT LEAD((((((((((((((rt2.c2)OR(rt2.c1)))OR(x'')))AND(rt2.c2)))OR(rt2.c2)))OR(rt2.c0)))OR(rt2.c2)) IN ()), (((((((((((((((((((rt2.c2)AND(rt2.c0)))OR(rt2.c0)))AND(rt2.c0)))OR(rt2.c2)))OR(rt2.c1)))OR(rt2.c0)))OR(rt2.c0)))AND(rt2.c1)), NULL, CASE rt2.c0  WHEN x'' THEN rt2.c0 END))!=((((rt2.c2) IS FALSE), ((rt2.c0) BETWEEN (rt2.c2) AND (rt2.c0)), ((rt2.c1) NOT BETWEEN (rt2.c1) AND (rt2.c0))))), (((rt2.c1, rt2.c2, rt2.c0)) BETWEEN (((NOT (rt2.c2)), ((rt2.c0)>=(rt2.c2)), (rt2.c0 IN ()))) AND ((((rt2.c2) NOT NULL), NULL, CAST(x'ccb1' AS BLOB))))) OVER () FROM rt2; -- 0ms;
SELECT DISTINCT ((0xffffffffb74c518e)/(rt0.c4)) FROM rt1, rt0, rt2 WHERE (CASE WHEN SQLITE_VERSION() THEN CAST('1131699792' AS NUMERIC) ELSE CASE WHEN NULL THEN 'ud' ELSE 0xffffffff9b35c5a7 END END); -- 0ms;
SELECT DISTINCT ((((((rt1.c3)OR(rt1.c3)))AND(rt2.c0)))>>(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c4 END)) FROM rt2, rt0 GROUP BY ((CAST(rt1.c3 AS NUMERIC))GLOB(rt1.c1)) HAVING 0.868731305643479;SELECT DISTINCT rt0.c2 COLLATE BINARY FROM rt2, rt1, rt0 WHERE (((((CAST(334646879 AS NUMERIC))AND(CASE '-1115800575'  WHEN 0.7309304493086545 THEN '' WHEN 1.52048275E9 THEN '1795369330' WHEN x'e21f' THEN NULL ELSE NULL END)))OR(0.12343756586635946 COLLATE BINARY))); -- 0ms;
SELECT ALL CASE 818368287  WHEN (6.60982077E8 IN (rt0.c2, rt2.c1)) THEN COUNT(*) WHEN CASE NULL  WHEN rt1.c3 THEN rt0.c3 ELSE rt1.c1 END THEN 4.64030235E8 WHEN (((rt0.c1))>=((rt0.c1))) THEN (NOT (rt0.c2)) ELSE MAX(rt1.c2) END FROM rt0, rt1;SELECT ((((rt0.c4)<=(rt0.c1)))IS(SUM(rt1.c0))) FROM rt2, rt0, rt1; -- 0ms;
SELECT CASE WHEN ((rt2.c1)GLOB(rt1.c4)) THEN CASE NULL  WHEN rt2.c1 THEN rt0.c2 END ELSE ((rt2.c0) IS FALSE) END, NULL, (((((((rt1.c2)OR(rt0.c1)))OR(rt0.c1))))<>((NULL))) FROM rt1 WHERE (CASE PRINTF(NULL, 0x203778d8, x'')  WHEN CASE x'd31a'  WHEN '' THEN '-1892613993' END THEN x'78896186' COLLATE NOCASE ELSE ((0xffffffffac2a04c9)<=(NULL)) END);SELECT ALL CASE ((rt0.c3)GLOB(rt2.c0))  WHEN CASE rt1.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt1.c4 END THEN (- (rt1.c2)) ELSE CASE rt0.c0  WHEN rt1.c3 THEN rt2.c2 WHEN rt1.c4 THEN rt1.c3 WHEN x'f85e' THEN rt2.c0 END END FROM rt2 WHERE ((((((1.79536933E9))>=((0.39376601851385096))))AND(((x'c910')AND(0.1260134162780181)))));SELECT DISTINCT (((0X45e94988 IN ())) ISNULL) FROM rt1, rt2 WHERE (((CASE '254399629'  WHEN x'' THEN 654082900 ELSE NULL END)=(x'' COLLATE RTRIM))) GROUP BY (LIKELY(DISTINCT rt1.c0) IN ()) HAVING (((- (rt2.c0))) ISNULL); -- 0ms;
SELECT ALL SUM(IFNULL(DISTINCT rt1.c3, rt1.c4)), ((MAX(rt1.c1)) IS FALSE), (((((0.060868833926192245))<((rt2.c2)))) BETWEEN (((rt0.c4)LIKE(rt1.c1))) AND (((0.9216100301341591)+(rt2.c0)))) FROM rt1, rt2 LIMIT -255883194;SELECT DISTINCT DENSE_RANK() OVER (), (~ ('-1153081194')), (((((((((- (rt0.c4)))AND(((rt2.c0) NOTNULL))))AND(rtreenode(rt0.c2, 815474768))))OR((((rt0.c4))>((rt1.c2))))))AND(COUNT(*))) FROM rt1, rt2, rt0; -- 1ms;
SELECT CAST(((rt1.c0) ISNULL) AS BLOB) FROM rt0, rt2;SELECT ALL CASE LOWER(DISTINCT rt1.c4)  WHEN ((((rt2.c2)AND(rt2.c1)))AND(rt0.c4)) THEN (rt0.c3 IN ()) ELSE (((rt1.c2, rt2.c2, rt2.c1)) BETWEEN ((x'ebb4', rt1.c0, rt1.c2)) AND ((rt2.c1, rt1.c0, rt0.c1))) END FROM rt1, rt2, rt0 WHERE (((NULL)AND(0.5068338234019197)) COLLATE BINARY); -- 0ms;
SELECT ALL (NOT (rt1.c4 COLLATE NOCASE)) FROM rt2 WHERE ((((0.12667886115462224 IN (''))) BETWEEN (CASE WHEN 0.26331798620066627 THEN '' ELSE -277931386 END) AND (((x'') IS TRUE))));SELECT DISTINCT ((rt2.c2)<(((rt2.c2)IS NOT(0.8029841699939175)))), rt2.c2, (('807504828') NOT BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE RTRIM FROM rt1, rt0;SELECT ALL ((((rt1.c4)AND(rt2.c2))) BETWEEN (((rt1.c1)/(rt2.c0))) AND (((rt1.c2) IS TRUE))), (((((rt0.c1)|(rt1.c0))))<>(((NOT ('-830076831'))))), (rt0.c2 COLLATE RTRIM IN ()), TOTAL((((rt1.c2)) BETWEEN ((rt0.c3)) AND ((rt1.c0)))) OVER (), ((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c0)) COLLATE BINARY FROM rt2, rt1, rt0 WHERE (TRIM(DISTINCT CAST('1900476666' AS INTEGER), NULL)); -- 0ms;
SELECT DISTINCT ((- (rt0.c3)) IN (0.9329227029811735 COLLATE NOCASE)) FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT ((((x'b7e0') IS TRUE))&((((rt1.c0)) BETWEEN ((rt0.c4)) AND ((rt2.c0))))) FROM rt0;SELECT DISTINCT ((((x'' COLLATE BINARY)AND(((rt1.c3)==(rt1.c0)))))AND(UPPER(rt1.c0))) FROM rt1, rt2, rt0; -- 1ms;
SELECT ALL CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN rt1.c0 COLLATE RTRIM WHEN COUNT(*) THEN (NOT (rt0.c2)) WHEN rt2.c1 COLLATE NOCASE THEN rt0.c3 COLLATE BINARY ELSE rt1.c3 COLLATE BINARY END, 1e500, (((NULL)<<(rt1.c2)) IN ()) FROM rt0;SELECT DISTINCT TOTAL(CASE NULL  WHEN rt0.c4 THEN rt1.c0 END) FROM rt1 WHERE (IFNULL(DISTINCT (0.060868833926192245 IN ()), ((x'ea53') NOT BETWEEN (0.7888408097939191) AND (0.9964352964054289))));SELECT DISTINCT (((rt1.c1) NOTNULL) IN ()) FROM rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT TOTAL((NOT (rt1.c2))) OVER ( ORDER BY (((rt1.c4)) NOT BETWEEN ((SQLITE_VERSION())) AND ((RTRIM(rt2.c1)))) DESC  NULLS LAST), TOTAL(CASE rt1.c0  WHEN rt2.c2 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 ELSE rt0.c1 END) COLLATE NOCASE, ((CAST(rt1.c3 AS BLOB)) IS FALSE) FROM rt0, rt2;SELECT DISTINCT NTILE(((SQLITE_COMPILEOPTION_USED(rt0.c4))<=(((rt0.c2)<>(rt0.c1))))) OVER () FROM rt0 WHERE (COALESCE((('316531070')|('654082900')), 'MZ')); -- 1ms;
SELECT DISTINCT (((CAST(rt0.c1 AS REAL), ((rt0.c4) NOTNULL), ((((((((rt1.c3)OR(rt0.c2)))AND(rt2.c0)))AND(rt1.c4)))OR(rt2.c0))))>=((((((((((rt0.c0)OR(rt2.c2)))OR(rt1.c2)))AND(rt0.c2)))AND(rt0.c2)), (+ (rt0.c2)), ((rt0.c0)GLOB(rt2.c1))))) FROM rt2, rt0 WHERE (((json_insert('-544081655', 2109211104, 0.2817847775413074)) BETWEEN (4.3673267E8) AND (CASE WHEN 0.6854250214985762 THEN -320682608 END)));SELECT DISTINCT LEAD(((((LAST_INSERT_ROWID())AND(((((((((rt0.c3)AND(rt2.c0)))AND(rt2.c2)))AND(rt0.c1)))OR(rt0.c1)))))AND(((rt0.c0) NOT NULL))), ((rt2.c1)/(((((rt2.c0)AND(rt0.c1)))OR(rt0.c0)))), ((((rt2.c1) IS TRUE))OR(CAST(x'ff65' AS BLOB)))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt2, rt0 WHERE (((((0.7737668693819617)>('157592854')))|(CAST('2064520995' AS REAL)))); -- 0ms;
SELECT DISTINCT (NOT (rt1.c0 COLLATE NOCASE)) FROM rt2 WHERE (((((((((NULL)AND('.?n\rJ')))OR(x'')))OR(0.1420598280192341)))OR(-1.281890356E9)) COLLATE NOCASE);SELECT ((((rt1.c2)*(rt0.c1)))<<(QUOTE(rt2.c0))) FROM rt2 WHERE ((((('dzv')OR(((((-1.026019365E9)OR(NULL)))OR(0.6776161365962607)))))AND(CASE NULL  WHEN x'' THEN NULL END)));SELECT ALL ((((((((((rt2.c0)OR(rt2.c0)))AND(rt2.c1)))OR(rt1.c1)))OR(rt0.c2)))OR(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c3)))), (LTRIM(rt0.c3) IN ()), SUM(CAST(rt2.c0 AS INTEGER)) OVER () FROM rt0, rt1 WHERE ((('f൹~' COLLATE NOCASE) ISNULL));SELECT DISTINCT COUNT(((((rt0.c4)OR(rt1.c1)))AND(rt1.c2))), ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt2.c0))) BETWEEN ((((rt2.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c4)))) AND (((rt1.c1)<<(rt0.c4)))), CAST((rt0.c1 IN ()) AS NUMERIC) FROM rt0;SELECT DISTINCT (((rt2.c0, rt2.c1, rt0.c3)) NOT BETWEEN ((((rt2.c1)<<(rt0.c3)), ((rt2.c2)>=(rt1.c1)), SQLITE_COMPILEOPTION_USED(rt2.c1))) AND ((rt1.c2, ((rt1.c1)!=(rt2.c1)), ((rt2.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) FROM rt1, rt2 WHERE ((+ ((- ('-1191172027')))));SELECT DISTINCT '201584897' FROM rt2 WHERE (NULL); -- 0ms;
SELECT DISTINCT FIRST_VALUE(rt0.c0) OVER ( RANGE BETWEEN ((TYPEOF(DISTINCT rt0.c4))==(((rt1.c2)%(rt1.c4)))) PRECEDING AND  CURRENT ROW EXCLUDE GROUP), GROUP_CONCAT((rt1.c4 IN ())), ((((((((((NULL)OR(rt2.c0)))AND(rt0.c0)))AND(rt1.c0)))OR(rt0.c1))) NOT BETWEEN (((rt2.c0) IS TRUE)) AND (SUM(rt2.c2))) FROM rt0, rt2;SELECT DISTINCT NTH_VALUE(((0.8029841699939175) BETWEEN ((- (rt2.c2))) AND ((rt2.c0 IN ()))), rt2.c0) OVER () FROM rt2; -- 1ms;
SELECT 0.6396101148379857 FROM rt1 LIMIT -1246802015; -- 0ms;
SELECT rt1.c1 FROM rt1; -- 0ms;
SELECT (((rt0.c1, ((rt2.c0)LIKE(rt2.c1)), (('-1005514963') IS FALSE)))>=(((~ ('q7')), (rt0.c3 IN ()), ((rt1.c3)>>(rt0.c4))))) FROM rt0, rt1, rt2; -- 0ms;
SELECT (((rt1.c1)) BETWEEN ((((rt2.c2) ISNULL))) AND ((CAST('芾c' AS TEXT)))) FROM rt1, rt0 WHERE (((((~ (x'8421f694'))))<((CASE WHEN 0.9732530161100619 THEN 1658086237 END)))) ORDER BY ((rt1.c2)AND(((rt0.c3) NOT NULL)))  NULLS FIRST, ((rt2.c1 COLLATE NOCASE)<>(CASE rt2.c0  WHEN rt1.c4 THEN rt0.c1 ELSE rt1.c0 END));SELECT DISTINCT FIRST_VALUE((((rt1.c3 IN (0.31304425277377124))) NOT BETWEEN (((rt1.c2)IS NOT(x''))) AND (CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END))) OVER () FROM rt0 NOT INDEXED, rt2, rt1 WHERE (((('Bd*yGh芾')) NOT BETWEEN ((((NULL) ISNULL))) AND ((DATE('1343472646', '', '889076062'))))); -- 0ms;
SELECT DISTINCT 0.1438657878866968 FROM rt0, rt2, rt1 WHERE (((((-2056976544)AND('-1026019365')))OR(0Xffffffffc8227ff5)) COLLATE RTRIM); -- 0ms;
SELECT ALL rt0.c3 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (NOT (((((((((rt2.c2)OR(rt1.c0)))AND(rt1.c2)))AND(rt2.c0)))OR(rt1.c4)))) FROM rt2, rt0 GROUP BY json_patch(CAST(rt0.c0 AS REAL), ((rt0.c4)>>(rt2.c0))) ORDER BY (rt2.c1 COLLATE RTRIM IN ()) DESC  NULLS LAST, CAST(((rt2.c2)LIKE(rt0.c2)) AS REAL) DESC  NULLS FIRST LIMIT 1316548631 OFFSET 1018549713;SELECT ((((((((rt1.c1)AND((rt2.c0 IN ()))))AND(0.1726951638935429)))AND(((rt1.c0) BETWEEN (rt2.c2) AND (rt2.c0)))))OR(((rt0.c3)GLOB(rt1.c3)))) FROM rt1, rt2;SELECT DISTINCT 1.6823376837049597E-4 COLLATE BINARY FROM rt0, rt2 WHERE (CAST((('1472275890')<<('2064520995')) AS REAL)); -- 0ms;
SELECT NULL FROM rt0 WHERE ((((((((x'c373')OR(x'')))AND('bm&'))))>(((x'' IN ()))))); -- 0ms;
SELECT rt1.c2, ((((rt2.c0)LIKE(rt1.c3)))AND(((NULL) NOT NULL))), (((COUNT(rt2.c2)))>((((rt2.c0) BETWEEN (rt1.c2) AND (rt1.c0))))) FROM rt1 WHERE (((((((((((0.21534001921828805)OR(0.7062355515066041)))AND(NULL)))AND(x'474b')))AND('')))|(',mbJ⣩')));SELECT FIRST_VALUE(x'ee59') OVER () FROM rt0, rt2, rt1; -- 0ms;
SELECT DISTINCT TOTAL('' COLLATE RTRIM) OVER () FROM rt0; -- 0ms;
SELECT ALL CASE WHEN 0.2267371953631252 THEN rt0.c0 COLLATE NOCASE END, (~ (rt1.c1 COLLATE NOCASE)), ((((rt2.c1)|(rt1.c1))) IS TRUE) FROM rt0, rt2 WHERE ((((((NULL)) NOT BETWEEN (('-1025678533')) AND ((0.5130775767564003)))) NOT BETWEEN ((('-958611970') ISNULL)) AND (-1147124801 COLLATE RTRIM)));SELECT DISTINCT (+ (CAST(rt2.c0 AS TEXT))) FROM rt1, rt0;SELECT ALL COUNT(rt2.c2) FROM rt0, rt1, rt2; -- 0ms;
SELECT NULL COLLATE RTRIM FROM rt2, rt0, rt1 WHERE (CAST(((((-647053131)OR(NULL)))AND(6.540829E8)) AS INTEGER)) EXCEPT SELECT DISTINCT ROW_NUMBER() OVER () FROM rt2, rt0 WHERE (((-1623432546)+(((((-484453408)AND(NULL)))AND('T''GO)'))))); -- 0ms;
SELECT DISTINCT ((rt0.c2) NOTNULL) COLLATE NOCASE FROM rt0, rt2, rt1; -- 1ms;
SELECT (((rt2.c2)) BETWEEN ((rt0.c4)) AND (('Euj&MGCq'))) FROM rt0, rt2 WHERE ((('j.')<=(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c0)+(rt2.c0)) COLLATE BINARY FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT rt2.c1 FROM rt2 WHERE ((+ (TRIM(x'', '1866403980')))); -- 0ms;
SELECT DISTINCT CASE (((rt0.c2)) BETWEEN ((rt1.c3)) AND ((rt0.c1)))  WHEN ((((rt0.c3)AND(rt1.c2)))AND(rt1.c4)) THEN ((rt0.c4)>=(rt0.c0)) ELSE NULL END FROM rt1;SELECT DISTINCT CASE ((0.3769852901211911) BETWEEN (rt0.c3) AND (rt0.c2))  WHEN ((((rt2.c2)OR(rt2.c0)))AND(rt1.c4)) THEN CAST(rt2.c2 AS BLOB) WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c4))) THEN AVG(rt0.c3) WHEN rt1.c1 COLLATE BINARY THEN (rt1.c2 IN (rt0.c4)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt2.c0))) END FROM rt2, rt0, rt1 WHERE (CASE WHEN ((NULL)OR('254474881')) THEN CAST('''c.)㺁Hko' AS REAL) ELSE CAST(0.7025089236335373 AS NUMERIC) END) ORDER BY (((rt0.c1 COLLATE BINARY))>(((((rt1.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3)))))); -- 1ms;
SELECT ALL TRIM(DISTINCT (rt2.c1 IN ())) FROM rt0, rt2 WHERE (CAST('' AS INTEGER)); -- 0ms;
SELECT ALL NULLIF((rt1.c0 IN (rt1.c2, rt0.c3)), TRIM(rt2.c1)) FROM rt2, rt1, rt0 WHERE (((NULL COLLATE NOCASE) BETWEEN (((x'c07b') NOT NULL)) AND (0.18965471469794837))); -- 0ms;
SELECT DISTINCT CAST(rt1.c0 AS TEXT) FROM rt0, rt2, rt1 WHERE (SQLITE_COMPILEOPTION_GET(CASE WHEN x'a38c' THEN '' END)); -- 0ms;
SELECT DISTINCT rt2.c0 FROM rt1 WHERE ((('-1010786751' COLLATE NOCASE) NOTNULL));SELECT ALL (- (((rt2.c0)GLOB(rt0.c0)))) FROM rt2;SELECT DISTINCT rt0.c3, (((((rt1.c3) ISNULL), ((rt1.c1) NOT BETWEEN (rt1.c2) AND ('')), (NOT (rt2.c2))))<(((rt0.c4 IN (rt2.c2)), (rt0.c3 IN ()), ((rt1.c2)IS NOT(rt1.c1))))), -7.15522961E8 COLLATE NOCASE FROM rt2;SELECT DISTINCT (+ (((((((((rt1.c4)AND(rt1.c4)))OR(rt2.c2)))AND(rt1.c0)))OR(rt1.c2)))) FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt1.c0) BETWEEN (-937263115) AND (rt2.c1)), (rt1.c2 IN (rt2.c2)), rt1.c1))!=((((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt2.c1)), ((rt0.c2) IS FALSE), ((((rt0.c0)OR('-991020439')))OR(rt0.c1))))) FROM rt2, rt1;SELECT ((rt2.c0 IN (rt0.c3)) IN ()) FROM rt0; -- 0ms;
SELECT ((((((((((-783240842)OR(rt2.c1)))OR(rt0.c4)))AND(rt1.c4)))AND(rt0.c3))) BETWEEN (((rt1.c3)>=(rt1.c1))) AND ((('Euj&MGCq') BETWEEN (rt0.c3) AND (rt2.c2)))) FROM rt1, rt0 WHERE ((~ (((-8.93559238E8)+(x'')))));SELECT ALL ((((NULLIF(rt1.c1, rt1.c4))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt1.c2 END)))OR(rt1.c4)), ((((rt0.c4)AND(rt1.c4)))AND(rt2.c2)) COLLATE NOCASE, HEX(CASE WHEN NULL THEN '-1283055238' ELSE rt1.c2 END) FROM rt2, rt0, rt1 WHERE (CAST(CAST(NULL AS NUMERIC) AS REAL)); -- 0ms;
SELECT DISTINCT (CAST(rt0.c0 AS BLOB) IN ()), ((CASE rt1.c0  WHEN rt1.c3 THEN 0.5312327019370379 END)*((rt0.c0 IN ()))), rt2.c2 FROM rt2, rt0, rt1; -- 0ms;
SELECT ALL (((((rt1.c1)<>(rt1.c2))))==((((((((((rt0.c4)OR(NULL)))OR(rt1.c2)))OR(rt1.c3)))OR(''))))), (((((rt1.c2))<>(('2064520995')))) IS TRUE), ((LIKE(rt0.c2, rt1.c2))*((~ (rt1.c4)))) FROM rt0, rt1, rt2; -- 0ms;
SELECT (AVG(rt2.c0) IN (((((rt1.c3)OR(0.13928482611276471)))OR(rt1.c2)))) FROM rt1, rt2 WHERE (CAST(CASE WHEN x'' THEN x'' END AS INTEGER)) ORDER BY ((rt0.c4) NOT BETWEEN (((rt0.c2) ISNULL)) AND (CAST(rt0.c4 AS INTEGER))), CASE ((rt1.c2)LIKE(rt0.c4))  WHEN (- (rt1.c0)) THEN (- (rt2.c1)) WHEN ABS(rt0.c4) THEN rt0.c2 COLLATE RTRIM WHEN rt1.c1 THEN ((rt0.c0)LIKE('0.557922868420266')) ELSE ((rt0.c2) NOTNULL) END, ((((rt0.c0) IS TRUE))||(((0.5712431046186902)<('2063639003'))));SELECT DISTINCT rt2.c0 FROM rt1, rt2; -- 0ms;
SELECT DISTINCT NTH_VALUE(((rt1.c2)AND(((rt0.c3) NOTNULL))), ((((rt1.c3)*(rt0.c4)))<>(((rt0.c0)LIKE(rt1.c2))))) OVER () FROM rt0, rt1 WHERE (((((((-1.10059416E8)AND(0.7245329852421926)))AND(x''))) BETWEEN (((NULL)>>('0.2642183736199214'))) AND (LTRIM('', 0X42d2034f)))) GROUP BY ((((0.8222249637167587)AND(((((((((rt2.c2)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c4)))))OR(NULL)) HAVING ((((rt1.c3)OR(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM LIMIT 1255672142;SELECT ALL ((rt1.c0) NOT NULL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT MIN(((rt0.c1)<(rt2.c2))) FROM rt0, rt2; -- 0ms;
SELECT ALL SUM(((rt0.c4)==(rt0.c0))) OVER ( PARTITION BY (((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt2.c1)) IN ()), UNLIKELY(DISTINCT ((rt0.c2)IS(rt2.c2)))) FROM rt2 WHERE (((1.779615935E9 IN ()) IN ()));SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((((((rt1.c2)AND(rt1.c2)))OR(rt0.c2)))) AND ((rt1.c4))), CASE WHEN ((rt0.c2) BETWEEN ('fC') AND (rt1.c1)) THEN (((rt0.c2, rt0.c4, rt0.c3))!=((rt2.c0, rt1.c3, rt2.c2))) WHEN LIKELIHOOD(rt2.c0, 0.9886099572380616) THEN rt1.c3 COLLATE RTRIM WHEN CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt2.c1 END THEN ((rt1.c0) IS FALSE) END, ((- (rt2.c2)) IN ()) FROM rt2, rt1, rt0 WHERE (((((x'5c86')<<(0.1420598280192341)))<=((0.519268889421232 IN ())))); -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE BINARY)IS(rt1.c0 COLLATE NOCASE)) FROM rt1, rt2 WHERE (((x'')>=((((NULL)) NOT BETWEEN ((0.5610570133669776)) AND ((0x15e044d6))))));SELECT DISTINCT ((((((((rt0.c4 COLLATE NOCASE)OR(((rt0.c3) IS TRUE))))OR(rt1.c1)))OR(UNLIKELY(DISTINCT rt0.c3))))AND(CASE WHEN rt2.c2 THEN rt0.c0 END)) FROM rt2, rt0 WHERE ((((-1.220013454E9) IS FALSE) IN ()));SELECT DISTINCT (((((rt2.c0, rt2.c0, 0.09144337294979688))>((rt1.c3, rt0.c2, rt0.c2))))=(((rt0.c0)GLOB(rt0.c1)))) FROM rt2, rt1;SELECT DISTINCT ((rt0.c3 IN ()) IN ()) FROM rt2, rt0; -- 0ms;
SELECT LAST_INSERT_ROWID() FROM rt2, rt0 WHERE (COALESCE(DISTINCT NULL, x'') COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN '' THEN rt2.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 END AS TEXT) FROM rt2, rt1, rt0 WHERE (((((NULL) NOTNULL))/((~ (NULL))))); -- 0ms;
SELECT ALL LAG(((x'')/(rt2.c2)) COLLATE NOCASE, ((((((((((((CAST(rt2.c0 AS BLOB))OR(-1.553705195E9)))OR((~ (rt2.c1)))))OR((((rt2.c0))>((rt2.c1))))))OR((((rt2.c0)) NOT BETWEEN ((rt2.c0)) AND ((0.04489249058965461))))))OR((rt2.c0 IN (rt2.c1, rt2.c0)))))OR((rt2.c0 IN ()))), ((((rt2.c0) BETWEEN (rt2.c2) AND (rt2.c1)))%(CASE WHEN rt2.c0 THEN rt2.c0 END))) OVER (), ((((rt0.c3) NOT BETWEEN (x'') AND (rt2.c1))) IS TRUE), (MAX(rt1.c4) IN (CAST(rt1.c2 AS INTEGER), ((rt0.c2) BETWEEN (NULL) AND (rt2.c0)))) FROM rt2 WHERE (NULL);SELECT DISTINCT ((((rt2.c2)||(rt0.c3)))LIKE(rt0.c4 COLLATE NOCASE)), ((((rt2.c2)=(rt0.c1)))GLOB(((rt2.c0) NOT BETWEEN (rt1.c2) AND (rt0.c4)))), CASE WHEN (rt0.c0 IN ()) THEN ((((rt0.c2)OR(rt1.c3)))OR(rt0.c2)) END FROM rt2, rt1;SELECT DISTINCT TOTAL(((rt2.c0)>>(rt0.c2))) FROM rt2, rt0, rt1 WHERE ((((1.900476666E9 IN ('4u\nx')))<((('')>>(NULL))))) ORDER BY ((((NULL)!=(rt1.c1)))==(rt1.c2 COLLATE BINARY)) ASC  NULLS LAST; -- 0ms;
SELECT ALL (((CAST(rt0.c3 AS TEXT)))==((COUNT(0.13706945743822185)))) FROM rt2 WHERE ((~ ((((x'')) NOT BETWEEN ((x'')) AND ((0.09576146852101552))))));SELECT GROUP_CONCAT(MIN(((rt0.c2)=(rt1.c4)))), ((((((((rt1.c1)AND(rt2.c1)))OR(rt1.c2)))OR(rt2.c0)))OR(rt1.c0)) COLLATE BINARY, CAST((rt0.c4 IN (rt2.c0)) AS REAL) FROM rt1, rt0, rt2;SELECT ALL (~ (rt1.c2 COLLATE BINARY)) FROM rt1, rt0, rt2; -- 0ms;
SELECT AVG(0.28593966412008365), ((((NULL) BETWEEN (rt2.c2) AND (rt1.c0)))IS(CAST(rt1.c1 AS BLOB))), (NOT (CAST(rt2.c0 AS NUMERIC))) FROM rt0, rt2, rt1 WHERE ((ABS(x'10be') IN ())); -- 0ms;
SELECT DISTINCT ((((rt2.c1)&(rt1.c3)))>=(((rt2.c1)LIKE('y')))), CASE (~ (rt1.c4))  WHEN (((rt1.c1, rt2.c0, rt0.c2))!=((x'f863', rt0.c3, rt0.c3))) THEN (rt1.c0 IN (rt0.c3, rt2.c2)) END, ((((CAST(-1049865785 AS NUMERIC))AND(x'')))OR(rt0.c3)) FROM rt1, rt2 WHERE (CASE '-820631517' COLLATE BINARY  WHEN (+ (NULL)) THEN ((('2063639003')) BETWEEN (('1121721923')) AND ((x'668a'))) ELSE ((NULL) BETWEEN (229303686) AND (0.21534001921828805)) END);SELECT (rt1.c2 COLLATE BINARY IN ()), (~ (CAST(rt2.c2 AS NUMERIC))), ((((rt1.c1 IN ())))>=((((rt2.c0)>>(rt0.c2))))) FROM rt1, rt2 WHERE ((((('W6	~]洐') ISNULL))<((+ (-987606298)))));SELECT DISTINCT COALESCE(DISTINCT (rt0.c4 IN ()), ((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c3)), CASE WHEN rt1.c3 THEN 0.5200751027960903 ELSE rt2.c0 END, '-1405479977') FROM rt0;SELECT ((CASE rt0.c3  WHEN rt0.c4 THEN rt2.c2 WHEN rt1.c3 THEN -1830198689 WHEN rt1.c4 THEN rt0.c3 ELSE rt1.c2 END)>=((((((((('gl\nrC6')OR(rt0.c2)))AND(rt2.c2)))AND(rt1.c2)))OR(rt2.c0)))), rt1.c0, TOTAL(LOWER(rt1.c3)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT (rt1.c0 COLLATE RTRIM IN ()) FROM rt0, rt1; -- 0ms;
SELECT ALL DATETIME((- (rt1.c4)), CASE rt2.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c1)<<(rt1.c2))) FROM rt2, rt1;SELECT ALL CAST(((rt1.c1)&(NULL)) AS TEXT) FROM rt0, rt1, rt2; -- 1ms;
SELECT (((rt2.c2 IN ()))&((- (rt0.c1)))) FROM rt0, rt1 WHERE (((highlight('-1197773171', 0.6621410894772191, 0Xffffffffa82f858a, '-937263115')) IS FALSE));SELECT ALL CAST('0.4550640733490262' AS INTEGER) FROM rt1 WHERE (0X11e163a6); -- 0ms;
SELECT ((NULL)%(UNLIKELY(''))), NULL, ((CASE rt0.c0  WHEN -8018460.0 THEN rt1.c1 ELSE rt0.c2 END) NOT BETWEEN (((rt2.c1) ISNULL)) AND (x'')) FROM rt0 WHERE ((('_<S#Ꝅ7vzm' IN ()) IN ()));SELECT DISTINCT CAST(0.5120842376879255 AS NUMERIC) FROM rt1 WHERE (TRIM('' COLLATE NOCASE)); -- 0ms;
SELECT ALL CAST(MAX(-1404887291) AS BLOB) FROM rt1; -- 0ms;
SELECT ALL SUM(rt0.c2) OVER () FROM rt0, rt2 GROUP BY (((rt1.c1)) NOT BETWEEN (((NOT (0.7121769383922593)))) AND ((CAST(rt0.c4 AS INTEGER)))), (rt1.c3 IN ()) COLLATE NOCASE, ((((((rt1.c0) IS TRUE))OR(rt2.c0 COLLATE BINARY)))OR(((rt1.c1)|(rt1.c3)))) HAVING CAST(((NULL)%(rt0.c2)) AS BLOB);SELECT ALL (('')AND(CASE WHEN rt2.c2 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 WHEN rt2.c0 THEN rt1.c3 WHEN 1.343472646E9 THEN rt0.c0 END)) FROM rt1, rt2;SELECT DISTINCT CASE WHEN rt0.c0 THEN rt1.c0 END COLLATE RTRIM FROM rt0, rt2, rt1; -- 0ms;
SELECT COUNT(UNLIKELY(rt0.c4)), '256730658', ROW_NUMBER() OVER () FROM rt0, rt1, rt2; -- 0ms;
SELECT ((rt1.c3)GLOB(rt1.c0)) COLLATE BINARY FROM rt2;SELECT DISTINCT ((((((((GROUP_CONCAT(rt0.c3))OR(((rt1.c3)>=(rt1.c0)))))OR(0.8325515528102553)))AND(((((x'')OR(rt0.c3)))OR('')))))OR(((rt1.c4) IS FALSE))) FROM rt2;SELECT (CAST(rt0.c0 AS TEXT) IN ()), (((- (rt0.c1)))/(((rt1.c1) BETWEEN (rt0.c2) AND (NULL)))), SUM((('1666722076')+(rt0.c2))) FROM rt0, rt1 WHERE (((0x4d7c61ae) NOT BETWEEN (('-917028456' IN ())) AND (((NULL)!=('211938723'))))); -- 0ms;
SELECT DISTINCT ((rt2.c2) BETWEEN ((+ (rt0.c4))) AND (UNLIKELY(DISTINCT rt1.c2))) FROM rt2 WHERE ((+ (CASE WHEN 0.4293972454314885 THEN x'' ELSE x'' END)));SELECT CAST('1520482750' AS TEXT), (((rt2.c0, rt1.c2, rt0.c0)) NOT BETWEEN ((rt2.c1, rt1.c3, rt2.c1)) AND ((rt1.c3, rt0.c4, rt0.c0))) COLLATE NOCASE, x'' COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE FROM rt1, rt0 WHERE ((- (((NULL)||(NULL)))));SELECT '-702747311', CASE MAX(rt0.c3)  WHEN ((((rt1.c1)OR(rt2.c0)))AND(rt2.c2)) THEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)) END, rt1.c4 FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT (((rt2.c2)) NOT BETWEEN (((NOT (rt1.c4)))) AND ((CASE rt0.c4  WHEN rt1.c1 THEN rt2.c2 WHEN rt2.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c1 END))), 0.18045547643642468, ((rt0.c0 COLLATE NOCASE)|(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt2.c1 THEN -9.46453093E8 ELSE rt0.c0 END)) FROM rt2;SELECT DISTINCT rt1.c3 FROM rt0;SELECT ALL 0xffffffffbc5df00f FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c3, rt1.c0, '956717557')) BETWEEN ((rt1.c0, rt1.c2, rt2.c2)) AND ((rt1.c0, rt2.c1, rt0.c0))))&(((((rt1.c3)OR(rt1.c0)))OR(rt2.c0)))) FROM rt0 WHERE ('680888762');SELECT COUNT(*), ((rt0.c2)IS(((rt1.c4) BETWEEN (rt0.c3) AND (rt0.c1)))), ((CASE WHEN rt0.c3 THEN rt2.c1 WHEN rt1.c0 THEN rt2.c0 WHEN rt1.c1 THEN rt1.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c0 THEN rt1.c4 ELSE rt2.c0 END)|(((rt2.c0) BETWEEN (rt1.c3) AND (rt1.c4)))) FROM rt2, rt1;SELECT ALL ((((rt2.c1) NOTNULL))&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)))) FROM rt2, rt1, rt0 GROUP BY (((((x'')) NOT BETWEEN ((rt0.c4)) AND ((rt1.c4)))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (rt2.c0 COLLATE RTRIM)), ((NULLIF(rt0.c4, rt1.c0)) NOTNULL), (((rt0.c4 IN (rt0.c0))) NOT NULL); -- 5ms;
SELECT DISTINCT LIKELIHOOD(CAST(rt2.c0 AS REAL), 0.24349858781009037) FROM rt0, rt1, rt2 WHERE (',mbJ⣩' COLLATE RTRIM COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY NULL, ((NULL)<(rt1.c0))) FROM rt0 GROUP BY ((((rt1.c4) NOT NULL))IS NOT(((NULL) NOT NULL))), ((((((((((rt2.c0) IS TRUE))OR(LIKE(rt0.c4, rt0.c0))))AND((((rt2.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))))AND((~ (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt1.c0 END)), (COALESCE(rt1.c4, rt0.c0) IN ()) ORDER BY rt1.c4;SELECT (((NULLIF(rt1.c4, rt0.c3)))>((TOTAL_CHANGES()))) FROM rt2 WHERE ((((x'' IN ())) NOTNULL));SELECT DISTINCT LIKELIHOOD(DISTINCT ((rt1.c2)GLOB(rt1.c3)), 0.6038751794749584) FROM rt0, rt2, rt1 WHERE (((0.28836623612765844 COLLATE BINARY)OR((('')IS(0.5318604850511486))))); -- 1ms;
SELECT ALL (- ('107122071')) FROM rt0 WHERE (CAST(LIKELIHOOD(1160866184, 0.038772432768502174) AS BLOB)); -- 0ms;
SELECT DISTINCT (((rt2.c2) ISNULL) IN ()) FROM rt2; -- 0ms;
SELECT ALL CASE WHEN (rt0.c4 IN ()) THEN (NOT (rt1.c1)) ELSE (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((NULL))) END FROM rt2, rt1 WHERE ((((NOT (NULL))) NOT NULL));SELECT DISTINCT LIKELY(0.9972237064102072), ((highlight(rt0.c2, '0.20474786744610352', rt1.c4, rt1.c1)) NOT NULL), (((((((((+ (rt0.c0)))OR((+ (rt2.c2)))))OR(((rt2.c0)==(rt0.c3)))))OR(((rt2.c2)&(rt0.c1)))))AND(rt1.c4 COLLATE RTRIM)) FROM rt2;SELECT DISTINCT ((rt1.c2)OR(((((rt1.c3)OR(rt1.c4)))OR(rt0.c4)))) FROM rt0 WHERE (((0Xffffffffcd5431e5) BETWEEN ('') AND ('')) COLLATE BINARY);SELECT ALL TOTAL(((rt2.c0)GLOB(rt1.c4))) FROM rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt2.c0 THEN rt0.c1 WHEN rt2.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN x'ecd8' THEN rt1.c3 WHEN rt2.c0 THEN rt1.c0 ELSE rt0.c2 END) ISNULL), SUM(((((rt1.c2)AND(rt1.c1)))OR(rt1.c4))) OVER (), (((~ (rt2.c0))) NOTNULL) FROM rt1;SELECT ALL ((0.2001845574672857) NOT BETWEEN (((((((((rt1.c0)AND(rt2.c1)))AND(rt2.c2)))OR(rt0.c1)))OR(rt2.c0))) AND ((((rt2.c2))<=((0.9972237064102072))))) FROM rt2 WHERE (CASE WHEN NULL THEN (~ (NULL)) END) ORDER BY ((rt1.c1)<<(rt1.c3)) COLLATE BINARY;SELECT ALL (UPPER(DISTINCT rt2.c1) IN ((((rt0.c4))<=((rt0.c0))))) FROM rt0, rt1, rt2 WHERE (((((NULL)) NOT BETWEEN ((x'766df672')) AND ((0.5331449308001657))) IN ())); -- 0ms;
SELECT ((rt1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE RTRIM FROM rt2, rt0, rt1 WHERE (NULL); -- 0ms;
SELECT x'7e835f19', ((('.4', rt1.c2, rt1.c4)) BETWEEN ((((((rt0.c0)AND(rt0.c4)))OR(rt2.c0)), rt0.c2, ((((((((NULL)OR(rt2.c1)))OR(rt0.c2)))OR(rt1.c2)))OR(rt1.c0)))) AND (((('1188812409') BETWEEN (-1892613993) AND (rt1.c3)), rt0.c4 COLLATE NOCASE, 0.09949283679526555))), (rt0.c0 IN ()) FROM rt2, rt1 GROUP BY (((((rt1.c2))<>((rt2.c1))))<<(((rt1.c1)/(rt1.c1))));SELECT rt0.c0, (((rt0.c3, rt1.c4, rt1.c1)) BETWEEN ((((NULL)|(rt0.c4)), CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt1.c4 END, COUNT(rt1.c3))) AND ((rt2.c0, AVG(8.89076062E8), (((rt1.c0))>((rt0.c1)))))), ((rt2.c0) IS TRUE) FROM rt1;SELECT DISTINCT ((((rt2.c2))>(('470492893'))) IN (CASE WHEN rt2.c1 THEN rt1.c4 WHEN rt2.c2 THEN rt0.c4 WHEN rt2.c1 THEN rt1.c1 END)), ((NULL) NOT NULL), '#\r' FROM rt0, rt2;SELECT '619998480', (((((rt0.c2)!=(rt0.c3))))>(((rt1.c0 IN ())))), (NOT (CAST(rt2.c2 AS REAL))) FROM rt1, rt0 WHERE ((((0.497931985731371) ISNULL) IN ()));SELECT (~ (0.6309129853263651)) COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT (((rt1.c4 IN ())) ISNULL) FROM rt0; -- 0ms;
SELECT TOTAL(HEX(DISTINCT rt1.c1)) OVER () FROM rt1, rt0, rt2 WHERE (TIME(x'' COLLATE BINARY, 0x56e03268 COLLATE NOCASE, CASE '1750395601'  WHEN -1851804422 THEN 0.8130518144202846 WHEN '-1214535381' THEN NULL WHEN ']c咻b' THEN 0.44404019289455066 ELSE '-1892613993' END)) GROUP BY (((CASE rt0.c1  WHEN '2031872337' THEN rt2.c1 WHEN rt2.c0 THEN rt2.c2 WHEN rt1.c4 THEN rt1.c0 ELSE rt2.c0 END))<(((((rt1.c2, rt2.c2, rt2.c1)) BETWEEN ((rt2.c1, rt1.c2, rt0.c2)) AND ((rt0.c3, rt0.c2, '660982077')))))); -- 0ms;
SELECT (((((rt0.c0) NOTNULL), (rt1.c3 IN ()), ((((rt0.c2)AND(rt1.c0)))OR(rt1.c0))))>=((rt2.c0 COLLATE RTRIM, CASE WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt2.c2 WHEN rt1.c3 THEN rt0.c2 END, rt1.c2))) FROM rt2 WHERE ((((('-819717886')>>(0.2806969996754205))) BETWEEN (((((NULL)OR('.S悖QUh笠')))OR(x''))) AND ((('1000862467') NOTNULL)))) LIMIT -1197773171;SELECT DISTINCT CASE WHEN ((rt0.c3)<=(rt1.c3)) THEN COUNT(rt2.c0) WHEN (~ (rt1.c2)) THEN ((((rt1.c2)OR(rt2.c0)))AND(rt1.c2)) WHEN GROUP_CONCAT(-1408808841) THEN UPPER(DISTINCT rt1.c0) ELSE CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c4 END END FROM rt0, rt2, rt1 LIMIT 1906729458 OFFSET 1251499112; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN ()))>>(UPPER(DISTINCT rt1.c2))) FROM rt2, rt1, rt0 WHERE (CAST(((0.057654860217101866)/('-2007043436')) AS REAL)); -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt2.c1 THEN rt2.c1 END)AND((NOT (rt1.c2)))))OR(((((rt2.c1)AND(rt1.c4)))AND(rt0.c3)))) FROM rt2, rt1, rt0; -- 0ms;
SELECT ((((((((((((((((rt1.c1)AND(rt0.c0)))AND('')))AND(NULL)))AND(rt2.c1)))OR(rt2.c0)))AND(rt0.c2)))AND(((0x64866884)GLOB(rt1.c3)))))AND((- (rt2.c0)))) FROM rt2 WHERE (((((((x'')IS(x'658f')))AND((('||.AB揧U᫄*')<(x'')))))AND((('-830076831')<('1271275912'))))) LIMIT -842821958 OFFSET 382186871;SELECT ALL ((CAST(rt2.c0 AS BLOB)) NOT BETWEEN (((rt2.c1)IS(rt0.c1))) AND (DATETIME(rt1.c3, rt2.c1, rt1.c3))) FROM rt1, rt0, rt2 NOT INDEXED; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c3) NOT NULL) THEN '-1197773171' WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c4)<=(rt1.c1)) WHEN (- (rt0.c2)) THEN (((rt2.c2))==((rt0.c2))) WHEN ((rt0.c4)|(rt0.c0)) THEN ((rt0.c0)<(rt1.c4)) WHEN ((((rt2.c1)AND(rt1.c2)))OR(rt1.c3)) THEN json_object(rt2.c1, rt1.c3) END FROM rt2 WHERE (CAST(((0.5142467112326943)-(NULL)) AS TEXT));SELECT DISTINCT (((rt1.c4, rt1.c2, rt1.c0)) BETWEEN ((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c4)), x'fe61', ((rt0.c2)<(rt1.c2)))) AND ((rt2.c2, AVG(rt0.c2), ((rt0.c2) BETWEEN ('kv') AND (rt1.c3))))), (((((rt2.c1, rt2.c0, rt2.c0, rt0.c0, rt2.c2)) NOT BETWEEN ((rt2.c2, rt0.c3, rt2.c2, rt2.c0, rt0.c2)) AND ((rt2.c1, rt1.c4, rt2.c1, rt1.c2, rt0.c0)))) NOTNULL), TOTAL((rt1.c3 IN (rt0.c4))) FROM rt1, rt2, rt0; -- 1ms;
SELECT rt0.c2 FROM rt2, rt1, rt0 WHERE (((('229303686')-(0.8984801852877592)) IN ())); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c0))AND(((rt1.c4) BETWEEN (rt1.c3) AND ('-1726971095')))) FROM rt0, rt1 ORDER BY (rt1.c2 IN (CASE WHEN rt2.c0 THEN rt2.c0 ELSE rt2.c1 END, (- (rt0.c1)))), rt0.c4;SELECT ((((rt0.c1)&(rt1.c1))) IS FALSE) FROM rt1, rt2 WHERE (CASE 0.2823574873833967 COLLATE NOCASE  WHEN CAST(x'' AS REAL) THEN ('2138033650' IN (2.92098051E8)) ELSE x'' COLLATE BINARY END);SELECT ALL ((load_extension(rt0.c2, rt1.c4))<<((NOT (rt1.c2)))) FROM rt0, rt2, rt1 WHERE (0.119800229474333);SELECT DISTINCT CASE ((((x'')OR(rt0.c4)))AND(rt0.c2))  WHEN ((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0)) THEN CAST(rt2.c1 AS INTEGER) ELSE COUNT(*) END FROM rt2 WHERE (MAX(((0.10033523186311788) NOT BETWEEN (0x65fd97f6) AND ('H6w')), ((x'ea270e7c') ISNULL)));SELECT DISTINCT rt1.c1 FROM rt0, rt2, rt1; -- 1ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((CAST(rt1.c2 AS TEXT)))) FROM rt0 GROUP BY (((rt2.c1 IN ()))<=((((rt2.c2))<=((x''))))) HAVING CASE SQLITE_SOURCE_ID()  WHEN TRIM(DISTINCT rt2.c0, rt1.c2) THEN ((rt1.c1) BETWEEN (rt0.c0) AND (rt2.c2)) END;SELECT (((AVG(NULL), '1750395601', CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c0 END))>((LTRIM(rt1.c0, rt0.c2), CAST(rt0.c1 AS BLOB), CAST(rt0.c4 AS REAL)))), ((((((rt0.c4)OR(rt2.c2)))OR(rt1.c3))) NOT BETWEEN ((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0)))) AND (rt2.c0)), CAST(rt2.c2 AS BLOB) COLLATE NOCASE FROM rt2, rt1;SELECT DISTINCT (- (rt2.c2)) FROM rt2 WHERE (CAST(('1732214341' IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY)<<((rt1.c1 IN (rt0.c3)))), ((((((rt1.c4)<(rt0.c3)))OR(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))OR(((rt0.c2) NOT BETWEEN (rt2.c1) AND (rt1.c3)))), (x'' IN ()) COLLATE NOCASE FROM rt2, rt0, rt1; -- 0ms;
SELECT TIME(IFNULL(rt0.c4, rt0.c0), (('0.6486713206251876') BETWEEN ('mP') AND (rt2.c2)), ((rt0.c0)+(rt0.c2))) FROM rt2, rt1 GROUP BY ((rt1.c2) BETWEEN ((rt2.c1 IN (rt0.c2, rt1.c1))) AND (((1475003388)>>(rt0.c0)))), CASE WHEN (+ (rt1.c0)) THEN (((rt2.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) WHEN ((rt1.c1)%(rt1.c4)) THEN CAST(rt2.c1 AS REAL) WHEN rt0.c2 THEN rt1.c1 COLLATE RTRIM WHEN '1446679108' THEN (- (rt0.c2)) WHEN rt0.c4 THEN json_quote(rt1.c3) ELSE rt0.c2 COLLATE RTRIM END, LIKE(((-1.220013454E9) NOT BETWEEN (rt0.c4) AND (rt0.c2)), ((rt0.c0)AND(rt0.c0))) HAVING ((0.7962804343930133)/(CASE WHEN rt0.c3 THEN rt1.c4 ELSE rt0.c4 END)) LIMIT 1908817389 OFFSET 2031019979;SELECT DISTINCT rt0.c2, json_quote(((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c1))), 275038971 FROM rt1;SELECT ALL (((((rt2.c2))>((NULL))))IS(((((((((rt1.c3)AND(rt0.c0)))AND(rt1.c3)))OR(rt1.c1)))AND(rt0.c0)))), (((((rt0.c3))>=((rt2.c0))))LIKE(0.4465911694992446)), (('-565989917')GLOB(NULL COLLATE BINARY)) FROM rt2;SELECT DISTINCT NULL FROM rt0, rt1; -- 0ms;
SELECT DISTINCT '-786611165' FROM rt0, rt2 WHERE (LIKELY('-1306310131' COLLATE BINARY)) GROUP BY ((x'')AND(((rt2.c1) IS FALSE))), rt2.c0, ((rt1.c0) NOT BETWEEN (rt0.c3) AND (((((((((rt0.c4)AND(rt0.c2)))AND(rt2.c1)))AND(rt1.c2)))OR(rt1.c0))));SELECT '-830076831' COLLATE BINARY, CASE ((('-38458780', rt1.c0, rt2.c2)) NOT BETWEEN ((rt2.c2, rt1.c2, rt0.c1)) AND ((rt0.c0, 1.750395601E9, 0.4242512881074926)))  WHEN LIKELY(rt0.c3) THEN ((rt2.c1)|('')) END, (((rt2.c1, x'', rt0.c1)) NOT BETWEEN ((UPPER(rt0.c4), CAST(rt2.c2 AS TEXT), NULL)) AND (((('Z\9?,') BETWEEN (rt0.c4) AND (rt1.c0)), (~ (rt0.c3)), LIKELIHOOD(rt0.c2, 0.4486329634046097)))) FROM rt0, rt2;SELECT ALL CAST(rt2.c2 AS NUMERIC), LIKELY(DISTINCT ((rt2.c0)*(rt1.c0))), x'' FROM rt1, rt2, rt0 WHERE ((~ ((+ (0.5160729122254436))))) LIMIT -484453408; -- 0ms;
SELECT DISTINCT (LIKELIHOOD(DISTINCT rt1.c3, 0.7416993728879647) IN (((rt0.c1) NOTNULL))), (((json_array_length(rt0.c0), ((0.2572804656592751)&(rt0.c3)), CASE rt2.c1  WHEN rt1.c0 THEN rt0.c1 WHEN rt2.c1 THEN rt1.c4 WHEN rt1.c1 THEN '-2035345966' WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 END))>=((((rt1.c0)IS(rt2.c0)), (~ (rt2.c0)), ((rt2.c1) BETWEEN (rt1.c3) AND (rt1.c1))))), CASE (((rt2.c1, rt2.c1, rt0.c2)) BETWEEN ((rt1.c1, rt2.c2, rt0.c0)) AND ((NULL, rt0.c2, rt1.c0)))  WHEN NULL THEN CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt0.c0 END END, (+ (((((rt2.c0)AND(rt2.c2)))OR(rt1.c1)))), ((((rt0.c3) NOTNULL))/(((((rt1.c1)AND(rt0.c0)))OR(rt1.c1)))) FROM rt2, rt0, rt1 WHERE ((((((NULL)IS(NULL)), ((0.10712882090761888) NOT BETWEEN (x'a695eade') AND (NULL)), UNLIKELY(2063639003)))!=(((NOT (NULL)), NULL, (- ('㹘}%Ml?^Vp')))))); -- 0ms;
SELECT DISTINCT rt2.c1 FROM rt2, rt0, rt1 WHERE (CAST(((NULL)>>(4.64030235E8)) AS INTEGER)) GROUP BY ((CAST(rt0.c1 AS TEXT))GLOB(rt2.c0 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)OR(rt0.c0)))AND(rt0.c0)))|(((rt1.c3)<<(rt0.c0)))), ((4.3673267E8) NOT BETWEEN (rt2.c1) AND (((rt1.c4)<(rt0.c0)))), CASE WHEN CAST(rt1.c3 AS REAL) THEN (rt1.c4 IN ()) WHEN rt1.c3 COLLATE NOCASE THEN ((rt1.c1) BETWEEN (rt0.c2) AND (0.7162424080023992)) WHEN rt2.c1 COLLATE NOCASE THEN CAST(rt1.c4 AS NUMERIC) END, (AVG(rt0.c2) IN ()), LEAD(((rt0.c0)|(rt0.c3)) COLLATE NOCASE, (((LIKELIHOOD(rt1.c4, 0.25282511436069977)))>=((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt1.c0 WHEN rt2.c2 THEN rt2.c1 ELSE rt1.c1 END))), CAST(rt1.c1 AS BLOB) COLLATE RTRIM) OVER () FROM rt1, rt2, rt0 WHERE (((((((x'')OR(0.228512932518264)))AND(x''))) NOTNULL)); -- 2ms;
SELECT CASE rt0.c0  WHEN AVG(rt0.c2) THEN ((rt2.c1)<<(rt0.c4)) WHEN ((rt1.c4) BETWEEN (rt1.c4) AND (rt0.c3)) THEN ((rt2.c1) ISNULL) WHEN (- (rt0.c4)) THEN ((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c3)) END FROM rt2, rt0 LIMIT 1357742782 OFFSET -90284413;SELECT DISTINCT (NOT (NULL)) COLLATE BINARY FROM rt1 GROUP BY (((((((((rt1.c2 IN (0.8934060022166995)))OR((rt1.c3 IN ()))))AND(0.7475184479423116)))OR(rt1.c2)))AND(((rt0.c1)IS(rt0.c3))));SELECT rt1.c1 FROM rt1, rt2, rt0; -- 1ms;
SELECT DISTINCT ((((((((CAST(rt1.c2 AS BLOB))AND(rt1.c3 COLLATE NOCASE)))AND(((rt1.c0)||(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM)))OR(CAST(rt1.c2 AS INTEGER))) FROM rt1, rt2 WHERE (((((NULL)IS('-1266761484'))) IS FALSE));SELECT DISTINCT x'' FROM rt1, rt2, rt0 WHERE (LIKELIHOOD(CASE 0.06569557189758135  WHEN 0.6690498780466407 THEN '' END, 0.3080355602446522)); -- 0ms;
SELECT DISTINCT TRIM((NOT (rt1.c2))) FROM rt2 WHERE (CASE WHEN TIME(0.09433091003439464, 216667048, 0x7acd4e8d, NULL, 0.2534122713161142) THEN ((0.7413064964772882)GLOB('CQ')) END);SELECT DISTINCT CAST(rt1.c0 AS TEXT) COLLATE NOCASE FROM rt2;SELECT ALL CASE ((((((((rt2.c2)AND(rt2.c0)))AND(rt0.c4)))AND(rt0.c2)))AND(rt2.c0))  WHEN (NOT (rt1.c1)) THEN (rt1.c4 IN ()) ELSE NULL END FROM rt0, rt2 WHERE (((CASE WHEN 0.5889386496812048 THEN x'ed46' END) BETWEEN (((0.5420369215913421)<(-1.209754151E9))) AND (CASE '1789329153'  WHEN 0xffffffffd8252d2b THEN x'' END)));SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1, rt0, rt2 WHERE (((('767994918' IN ())) NOT BETWEEN (CAST(0.2817847775413074 AS NUMERIC)) AND (((-1) NOT BETWEEN (NULL) AND (NULL))))); -- 1ms;
SELECT DISTINCT ((((rt0.c2)) NOT BETWEEN ((rt2.c0)) AND ((rt0.c1))) IN ()) FROM rt0, rt2 WHERE ((((~ ('粄>'))) ISNULL)) ORDER BY QUOTE((~ (rt0.c0))) DESC, ((rt0.c2)%(rt1.c4)) COLLATE BINARY ASC;SELECT DISTINCT (((rt2.c1 IN (rt0.c2))) NOT NULL) FROM rt1 WHERE (((NULL)>(0Xdaae586)) COLLATE RTRIM);SELECT DISTINCT ((rt1.c3 IN ()) IN (rt2.c1)) FROM rt2; -- 0ms;
SELECT (NOT (rt0.c0 COLLATE NOCASE)), (MAX(rt1.c3) IN ()), ((((rt2.c0)&(x''))) NOTNULL) FROM rt0;SELECT DISTINCT (((rt1.c2)) BETWEEN ((json_extract(rt1.c2, NULL))) AND ((x'3970'))) FROM rt2, rt1, rt0 ORDER BY CASE (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND (('0.12667886115462224')))  WHEN CASE rt1.c4  WHEN rt1.c3 THEN rt1.c1 ELSE rt2.c0 END THEN LIKELY(rt1.c2) WHEN (((rt2.c0, rt1.c1, rt0.c2))>((rt2.c2, rt2.c2, rt0.c4))) THEN rt2.c2 WHEN ((((rt2.c1)AND(rt0.c0)))OR(rt0.c3)) THEN ((((rt0.c3)OR(rt1.c4)))OR(0.12343756586635946)) ELSE ((rt2.c0)IS NOT(rt0.c2)) END DESC; -- 0ms;
SELECT DISTINCT CAST(((rt1.c0) BETWEEN (rt2.c1) AND (0.14022533455500563)) AS BLOB) FROM rt1, rt0 WHERE (((((((NULL)) BETWEEN ((x'')) AND (('<ent')))))<((((x'4806') BETWEEN (1539158878) AND (NULL)))))) LIMIT 57098096 OFFSET 1404201102;SELECT CASE WHEN (rt0.c0 IN (rt1.c0)) THEN ABS(DISTINCT rt0.c0) ELSE TOTAL(rt1.c4) END FROM rt0, rt1 GROUP BY '1799045225' HAVING (rt2.c1 IN (((rt1.c3)-(rt2.c1))));SELECT ALL (((NOT (rt1.c4))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt0.c1) ISNULL))) FROM rt2 WHERE ((((-454493236 IN (x''))) IS FALSE)) ORDER BY (((((rt0.c2)/(rt0.c2)), rt1.c0, rt1.c0))>=(('(QBxYQA9', (rt0.c3 IN (rt2.c0)), (NOT (-1220013454)))))  NULLS FIRST;SELECT ('' IN ()) FROM rt0, rt2, rt1; -- 0ms;
SELECT DISTINCT ((('644721890', rt0.c0, rt1.c1, rt1.c1, rt0.c0)) NOT BETWEEN ((((rt0.c0)IS(rt1.c3)), rt2.c2 COLLATE BINARY, ((rt1.c1)<(rt0.c3)), ((((rt2.c0)AND(rt1.c0)))OR(x'')), (rt1.c1 IN ()))) AND (((rt0.c0 IN ()), CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt2.c0 END, ((rt0.c1) NOT NULL), CAST(rt0.c2 AS BLOB), QUOTE(x'')))) FROM rt1 WHERE (CASE WHEN json_array_length(x'') THEN 0x54b89d4a COLLATE BINARY END);SELECT DISTINCT COUNT(((rt1.c2) BETWEEN (rt2.c2) AND (rt0.c0))) OVER () FROM rt2, rt0;SELECT DISTINCT (((rt2.c0, rt1.c0, rt0.c3)) BETWEEN ((0.13018079533178795, CAST(rt1.c0 AS BLOB), ((((rt0.c0)AND(rt2.c1)))AND(rt0.c3)))) AND ((((rt0.c1)==(rt2.c2)), TRIM(DISTINCT '-1853369623', rt2.c2), MAX(rt1.c4)))) FROM rt1, rt0;SELECT rt1.c1 FROM rt1, rt0 WHERE (TOTAL_CHANGES()) GROUP BY LOWER(DISTINCT (NOT (rt1.c1))) HAVING PRINTF(((rt2.c0) ISNULL)) ORDER BY CAST(rt1.c0 AS TEXT)  NULLS FIRST, (- (((rt1.c0)/(rt1.c1)))) ASC  NULLS FIRST;SELECT ALL (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) COLLATE RTRIM, x'', (((rt0.c3 IN (rt2.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c4 COLLATE NOCASE)) FROM rt2, rt1;SELECT ALL ((((x'') IS FALSE)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2)))) AND (AVG(x'68ee'))) FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c3) BETWEEN (rt1.c0) AND (rt2.c2))) BETWEEN ((rt2.c1 IN ())) AND (MIN(rt1.c4))) FROM rt0 WHERE (((CAST('-1105417738' AS BLOB)) IS TRUE));SELECT DISTINCT AVG(LIKELIHOOD(DISTINCT rt1.c4, 0.8169000385240757)) OVER (), rt0.c2, ((TRIM(rt1.c0, rt2.c0))/(((rt0.c1)<=(rt0.c1)))), CAST(((rt0.c1)>=(rt2.c2)) AS REAL), rt0.c0 FROM rt2, rt1 WHERE (CASE NULL  WHEN 0.20474786744610352 THEN CASE 0.16457720547312493  WHEN x'' THEN '-1025678533' ELSE x'' END WHEN CAST('-128621366' AS TEXT) THEN (((815474768))>=((x''))) WHEN (('kYyn?')LIKE(x'')) THEN (('痧A巗㜬n\l]')IS NOT(NULL)) END);SELECT DISTINCT ((rt2.c1)<<(CASE WHEN rt2.c0 THEN rt1.c2 ELSE rt2.c1 END)) FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c3)AND(rt1.c1))) FROM rt0, rt1, rt2 NOT INDEXED; -- 0ms;
SELECT ALL NULL FROM rt2, rt0; -- 0ms;
SELECT RANK() OVER () FROM rt0 WHERE ((((NOT ('')))<(CASE WHEN 0.5092333628771377 THEN 0.2267371953631252 END))); -- 0ms;
SELECT (((rt0.c2)) BETWEEN ((GROUP_CONCAT(rt1.c0))) AND ((AVG(rt0.c3)))), CASE WHEN ((rt2.c2) IS FALSE) THEN CAST(rt0.c0 AS INTEGER) ELSE (+ (NULL)) END, (CAST(rt0.c1 AS TEXT) IN (GROUP_CONCAT(rt2.c2))) FROM rt0, rt2 WHERE ('439886884');SELECT CAST(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c3 WHEN '902272588' THEN rt0.c0 END AS NUMERIC) FROM rt0 WHERE ((NOT (((0.41563233382269693) NOT BETWEEN (x'75b9') AND (0.41702371065157995))))) ORDER BY (+ ((((rt0.c1))==((rt0.c0)))))  NULLS FIRST;SELECT ALL (CASE rt0.c2  WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c1 END IN ()) FROM rt1; -- 0ms;
SELECT CASE 0X4dc59f9c  WHEN rt0.c1 THEN rt1.c4 END COLLATE RTRIM FROM rt2, rt1, rt0 WHERE (((NULL COLLATE BINARY) ISNULL)); -- 0ms;
SELECT ALL (((rt0.c1))==((rt2.c2))) COLLATE RTRIM FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT TOTAL(MAX((((rt2.c1))<=((rt2.c0))))) FROM rt2, rt1, rt0;SELECT CAST(((((rt0.c3)OR(rt2.c1)))AND(rt0.c2)) AS INTEGER) FROM rt2;SELECT DISTINCT (((UNICODE(''), rt1.c2, LOWER(rt1.c3)))<((('-1602966961' IN ()), rt2.c0 COLLATE BINARY, ((((rt0.c1)AND(rt0.c1)))OR(rt1.c0))))) FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT TOTAL((rt2.c1 IN ()) COLLATE NOCASE) OVER (), ((1757932233) NOTNULL), ((((x'') IS FALSE))>(((((rt0.c4)AND(rt0.c1)))OR(rt0.c1)))), CASE WHEN x'7325' THEN rt2.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt2.c2 THEN rt0.c1 ELSE rt0.c3 END COLLATE RTRIM, (((rt1.c0, rt0.c3, rt0.c0)) NOT BETWEEN (((rt0.c3 IN ()), CAST(rt0.c2 AS NUMERIC), ((rt0.c1)GLOB(rt0.c2)))) AND ((((rt1.c0)AND(rt1.c0)), ((rt0.c1)LIKE(rt1.c1)), ((rt2.c1) BETWEEN (rt1.c3) AND (rt2.c0))))) FROM rt2, rt0, rt1 WHERE (LIKELY(DISTINCT ((NULL) BETWEEN (NULL) AND (0.48090366982180555)))); -- 0ms;
SELECT ALL CASE WHEN ((((rt1.c4)OR(rt1.c3)))AND(rt0.c3)) THEN CASE WHEN rt1.c2 THEN rt2.c2 END ELSE ((((rt2.c1)AND(0.8084864473516409)))AND(rt1.c2)) END FROM rt1, rt2, rt0; -- 0ms;
SELECT ((SUBSTR(rt1.c4, rt0.c2))<=(((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c1)))) FROM rt1, rt0, rt2 WHERE (((NULL)>(x'')) COLLATE RTRIM); -- 0ms;
SELECT MAX((~ (rt0.c3)) COLLATE RTRIM), TRIM(DISTINCT ((rt1.c2) IS FALSE)), CASE AVG(rt0.c2)  WHEN ((rt0.c2) NOT BETWEEN (rt2.c1) AND (rt2.c2)) THEN (+ (rt0.c3)) ELSE ((rt1.c0) NOT NULL) END FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT json_quote(((rt2.c1)IS NOT(rt0.c4))) FROM rt2, rt1 GROUP BY ABS(DISTINCT ((rt0.c1) ISNULL));SELECT rt2.c1, rt1.c4, SUM(((rt2.c1) IS TRUE) COLLATE NOCASE) OVER () FROM rt2, rt0 WHERE ((((NULL)) NOT BETWEEN ((((NULL) IS TRUE))) AND ((LIKELIHOOD(DISTINCT x'', 0.21579826648092026)))));SELECT ALL NULL, ((rt1.c1)*((NOT (rt1.c4)))), (~ (((rt1.c3) ISNULL))), (+ ((rt2.c1 IN ()))), (((((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))AND('zfY8Ͻ4')))AND(rt0.c3)) FROM rt0, rt2, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c2 COLLATE RTRIM THEN (rt0.c0 IN ()) ELSE ((((rt0.c3)AND(rt2.c1)))AND(rt0.c0)) END FROM rt0, rt1, rt2 WHERE (CASE WHEN NULL COLLATE BINARY THEN TYPEOF(DISTINCT -1.10050597E9) ELSE ((((NULL)OR('n&2F')))OR(1.894806816E9)) END); -- 0ms;
SELECT ((((((rt2.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0)))OR(((rt0.c1)+(rt2.c0)))))OR(((rt1.c2)=(rt1.c3)))) FROM rt1, rt0, rt2 ORDER BY (((('	i	ad轁')AND(CAST(rt2.c0 AS REAL))))OR(((rt0.c4)<=(rt1.c4)))), ((CAST(rt0.c2 AS REAL)) NOTNULL) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT rt0.c3, TOTAL(((rt0.c1) BETWEEN (rt1.c4) AND (rt0.c1))) OVER (), GROUP_CONCAT(IFNULL(rt1.c2, rt0.c2)) COLLATE RTRIM FROM rt2, rt1 WHERE ((+ ((0.10851284807698014 IN ()))));SELECT DISTINCT (- ((rt1.c1 IN ()))), rt1.c1, ((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)))/(UPPER(rt1.c4))) FROM rt2, rt1;SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((((((rt2.c0)OR(rt0.c0)))AND(rt0.c4)))) AND ((CAST(rt1.c3 AS REAL)))), rt2.c1, (NOT (((((rt0.c3)AND(rt0.c2)))AND(rt1.c1)))) FROM rt0 WHERE (((CASE WHEN NULL THEN '' WHEN 0Xffffffffbc894f26 THEN 0.3392604684648476 WHEN 0xfffffffffdb52a64 THEN NULL ELSE 0Xffffffff847fad12 END) NOT NULL));SELECT ((((rt1.c4)-(rt2.c1)))GLOB(((((rt1.c4)OR(rt1.c2)))OR(rt2.c2)))), (((COALESCE(DISTINCT rt2.c0, x'f0c1')))=((((rt1.c0) NOTNULL)))), CAST((NOT (rt0.c2)) AS BLOB) FROM rt2, rt0 WHERE (x'') LIMIT -220569967;SELECT ((COUNT(rt0.c1)) NOT BETWEEN (COUNT(rt1.c4)) AND (rt0.c3 COLLATE RTRIM)), SUM(((rt2.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))), CAST(((((rt1.c1)OR(rt2.c1)))OR(rt0.c1)) AS REAL) FROM rt1 NOT INDEXED, rt2, rt0 WHERE (((((json_extract(0.942642480237526, -632913884))AND(((0X1f4ef93f)LIKE(0.5068338234019197)))))AND(-1778116854))) GROUP BY (((rt0.c4, rt1.c0, rt1.c2)) NOT BETWEEN (((((rt2.c1, rt2.c0, rt1.c3))!=((rt1.c0, rt1.c3, rt1.c2))), (((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c1))), ((rt1.c2)!=(rt1.c3)))) AND (((((rt1.c4))<((rt2.c2))), CAST(rt1.c4 AS BLOB), (rt0.c2 IN (rt1.c3))))), (('-1085417642')*(((rt1.c4)IS(rt2.c2)))), -1.602966961E9;SELECT DISTINCT rt2.c0 FROM rt1, rt0, rt2 WHERE (('' IN ())); -- 0ms;
SELECT ALL (((LOWER(DISTINCT rt1.c4)))=((rt1.c4 COLLATE BINARY))) FROM rt2, rt0, rt1 WHERE ((((x'' IN ())) IS TRUE)); -- 0ms;
SELECT ALL CASE ((rt1.c2)AND(rt1.c1))  WHEN ((rt2.c1)>(rt0.c3)) THEN (NOT (rt2.c0)) END FROM rt0 WHERE ((~ (x'16b1')));SELECT ALL COUNT(*) OVER ( PARTITION BY NULL, ABS((rt1.c3 IN ()))) FROM rt0 WHERE (((UPPER(DISTINCT '-994581076')) NOTNULL)); -- 0ms;
SELECT DISTINCT AVG(((rt0.c0)<=(rt1.c2))) OVER (), ((rt1.c2) IS TRUE) COLLATE NOCASE, ((((rt1.c4)*(rt1.c3)))<<(((rt1.c4)<(-418934605)))), ((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c1)))%(((rt1.c3)<=(rt1.c3)))), NTH_VALUE((((rt2.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c3 END, CAST(rt0.c2 AS REAL), CASE WHEN rt2.c2 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c2 END)) AND ((((rt2.c1) BETWEEN (rt2.c2) AND (rt1.c4)), ((rt1.c4)>>(rt0.c1)), ((rt0.c2)>=(rt1.c2))))), (CASE rt1.c1  WHEN 0.1561804293711967 THEN rt2.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt2.c2 THEN rt1.c4 END IN ())) OVER () FROM rt2, rt1, rt0 WHERE (((CAST(NULL AS BLOB)) BETWEEN (('0.36680065347189317' IN ())) AND (1e500 COLLATE BINARY))) ORDER BY ((((((rt2.c2)AND(rt0.c0)))AND(0x628aeae0)))<(rt1.c4 COLLATE RTRIM)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL RANK() OVER () FROM rt1, rt0 WHERE ((('' COLLATE RTRIM)>(json_insert(NULL, 411763709, 'Bgb2(7', '-1940507942', '^◝!^{\rG')))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2)GLOB(rt0.c0)))OR(MIN(rt2.c0, rt1.c1))))OR(CAST(rt1.c1 AS INTEGER))) FROM rt1, rt0 GROUP BY (((rt1.c3)) BETWEEN (((rt2.c1 IN (rt2.c2)))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt2.c1))))));SELECT DISTINCT (rt0.c3 IN (((rt1.c4)<(rt2.c0)), CASE WHEN rt0.c3 THEN rt0.c0 END)) FROM rt1, rt2;SELECT CASE WHEN ((rt0.c0)-(x'')) THEN (((rt1.c0)) NOT BETWEEN ((rt2.c1)) AND ((rt2.c0))) WHEN SQLITE_COMPILEOPTION_USED(rt2.c2) THEN rt0.c2 WHEN ('-484453408' IN (rt1.c2)) THEN ((rt1.c3)||(rt1.c1)) ELSE CAST(rt1.c3 AS REAL) END FROM rt2 WHERE (CAST(CASE x'9ed2'  WHEN NULL THEN 0.9296455593900038 END AS REAL));SELECT DISTINCT LOWER(DISTINCT CAST(0.4030928936783491 AS BLOB)) FROM rt0, rt1 WHERE ((~ (CAST(NULL AS TEXT)))) GROUP BY (((rt1.c1 IN (rt2.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt1.c2 THEN rt0.c3 ELSE '-1' END) AND ('WJ,')), CASE WHEN (+ (rt0.c3)) THEN ((rt2.c0)<<(rt2.c1)) END, ((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)) COLLATE RTRIM HAVING (((2.064520995E9))>((((rt0.c2) NOTNULL))));SELECT DISTINCT IFNULL((rt1.c4 IN ()), (rt0.c4 IN (rt2.c0))), ((((rt2.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))) IS FALSE), ((CASE WHEN '' THEN rt1.c2 END) BETWEEN (((rt2.c1)IS NOT(rt0.c0))) AND (CAST(rt1.c1 AS INTEGER))) FROM rt1, rt0 NOT INDEXED WHERE (HEX(DISTINCT ((-1220013454) NOT BETWEEN (-264206438) AND ('0.2642183736199214'))));SELECT DISTINCT ((TOTAL(rt0.c4)) NOT NULL), ((((rt1.c1)==(rt0.c4)))AND((rt2.c0 IN ()))), ((((rt0.c4) BETWEEN (rt2.c1) AND (rt0.c4))) BETWEEN ('Rl^') AND (((((rt2.c2)OR(-9.37263115E8)))AND(rt0.c2)))) FROM rt2;SELECT DISTINCT ((((((((((rt2.c0) ISNULL))OR(ABS(rt1.c3))))OR(rt1.c1 COLLATE BINARY)))OR(((x'0b54')OR(rt0.c0)))))AND((((('1532794728')OR(rt1.c2)))OR(rt1.c1)))) FROM rt2;SELECT CASE CASE rt0.c1  WHEN rt1.c0 THEN rt2.c0 ELSE rt1.c2 END  WHEN ((rt0.c1)IS NOT(rt1.c2)) THEN (NOT (rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END FROM rt2, rt1, rt0 WHERE (CASE WHEN x'e2d0' THEN CASE WHEN 0.9236052384894027 THEN x'' WHEN x'1060' THEN '0.5068338234019197' WHEN '289603991' THEN x'' END END); -- 1ms;
SELECT ALL (((((rt0.c0))<((rt0.c4)))) NOT BETWEEN (((rt0.c3) NOT NULL)) AND (HEX(rt1.c1))) FROM rt2, rt1;SELECT DISTINCT 578526363 FROM rt2, rt1 WHERE (((0.7893310751992344 IN ()) IN (json_array('-838655189', x''), (NULL IN (1343821718))))) ORDER BY ((x'' COLLATE NOCASE) NOT BETWEEN ((((rt0.c0, rt0.c1, rt1.c0))!=((rt1.c3, rt1.c3, rt0.c2)))) AND (CASE rt2.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt2.c0 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c2 WHEN rt0.c0 THEN rt2.c0 END)) ASC  NULLS FIRST;SELECT (((rt1.c3)|(rt0.c4)) IN ()), COUNT(*) OVER (), (((rt2.c2, (rt0.c0 IN (rt1.c4, rt0.c2)), MAX(rt0.c4)))!=((CAST(rt2.c1 AS REAL), (~ (rt2.c0)), ((((((((rt1.c2)OR('1940623763')))OR(rt1.c4)))OR(rt1.c0)))AND(rt0.c1))))) FROM rt1, rt0, rt2 WHERE (CAST(((-9.87606298E8)%(0.39561212676419155)) AS INTEGER)) ORDER BY (((NOT (rt2.c2)))+(((rt1.c2)IS(rt0.c2))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt2.c2)) BETWEEN ((((rt0.c1)GLOB(rt0.c0)))) AND (((rt2.c2 IN ())))), ((UNLIKELY(rt0.c4))LIKE(((rt1.c0) NOT BETWEEN (rt1.c0) AND (0.18118193332128252)))), MIN(((rt1.c1) ISNULL)) FROM rt1, rt2 WHERE ((~ (('-289189217' IN ()))));SELECT DISTINCT ((JULIANDAY(rt0.c3, rt2.c1, rt0.c2))%('0.9254672994464991')), rt1.c0, (((((rt0.c1) IS FALSE), (+ (rt1.c2)), ((rt0.c3) BETWEEN (rt2.c0) AND (rt0.c2))))=((((rt1.c3) NOTNULL), CAST(rt0.c0 AS INTEGER), (NOT (rt1.c1))))) FROM rt1, rt2 WHERE ((((x'' IN ())) NOT NULL)) GROUP BY (((rt2.c1 IN (rt0.c4))) BETWEEN (rt1.c0) AND (((rt1.c2)OR(rt1.c3)))) HAVING (-893113748 COLLATE RTRIM IN ((+ (rt0.c0)), IFNULL(rt0.c4, rt2.c0))) ORDER BY ((((CASE rt2.c2  WHEN rt1.c2 THEN rt1.c1 END)AND(rt1.c3)))OR(TYPEOF(DISTINCT rt2.c1))) ASC LIMIT -1116140580 OFFSET 1500446244;SELECT DISTINCT LAST_VALUE(((rt2.c0) IS FALSE)) OVER () FROM rt2 WHERE ((((-2.110564357E9)) BETWEEN ((((0.6273952168420402) NOT BETWEEN (-1202820854) AND (NULL)))) AND ((CASE NULL  WHEN NULL THEN 0.37591288647676835 WHEN x'' THEN NULL WHEN x'' THEN NULL END)))) GROUP BY (((((rt2.c0)||(rt2.c2))))!=((((((rt1.c3)AND(rt1.c1)))OR(rt1.c3))))) HAVING MAX(COUNT(*));SELECT DISTINCT ((((rt0.c3) NOTNULL))|(CASE rt1.c0  WHEN rt1.c4 THEN rt0.c4 ELSE rt1.c3 END)) FROM rt0, rt1 WHERE (CAST(((0.07998553103464578) NOTNULL) AS NUMERIC)) UNION ALL SELECT DISTINCT (((rt1.c0) NOT BETWEEN (rt2.c2) AND (rt0.c0)) IN (((rt1.c1) IS FALSE), rt0.c1 COLLATE RTRIM)) FROM rt2, rt1, rt0; -- 0ms;
SELECT (NOT (COUNT(*))) FROM rt0, rt1, rt2; -- 0ms;
SELECT ALL SUM(((rt2.c2) NOTNULL)) FROM rt0;SELECT DISTINCT ((COUNT(*))||(((rt0.c3)<(rt2.c0)))) FROM rt0 WHERE ((CASE NULL  WHEN x'' THEN '뉁3OV ' END IN ()));SELECT DISTINCT CASE (rt0.c0 IN ())  WHEN ((rt0.c3)<(rt0.c4)) THEN (~ (rt2.c2)) ELSE MAX(rt2.c0) END FROM rt0, rt1, rt2; -- 1ms;
SELECT ALL TOTAL(LIKELY(rt1.c2)) OVER () FROM rt0, rt2;SELECT ALL ((((rt2.c2)AND(rt2.c1)))AND(CAST(rt2.c0 AS REAL))), load_extension(rt2.c0), CASE COUNT(*)  WHEN rt1.c1 THEN CASE WHEN x'7871' THEN rt0.c1 ELSE rt0.c3 END END FROM rt1, rt0 WHERE ((+ (NULL)) COLLATE BINARY) ORDER BY ((((rt0.c0) IS FALSE))*(((rt2.c0) NOT BETWEEN (rt0.c2) AND (rt2.c2)))) ASC  NULLS LAST;SELECT DISTINCT CASE WHEN (rt1.c0 IN (rt1.c2, rt1.c1)) THEN ((rt1.c2)IS(rt1.c2)) END, TOTAL(CASE WHEN rt1.c3 THEN rt2.c0 ELSE rt0.c3 END) OVER (), ((((MIN(rt0.c1))AND(((rt2.c2)|('-915990594')))))AND(((((rt1.c3)OR(rt2.c1)))OR(rt2.c0)))) FROM rt0, rt2, rt1; -- 0ms;
SELECT LAST_VALUE(((((((rt1.c1) ISNULL))OR('zC')))AND(ABS(DISTINCT rt2.c2)))) OVER ( PARTITION BY ((((rt1.c1) IS TRUE)) BETWEEN (rt1.c2) AND (NULL)), CASE rt1.c3  WHEN rt0.c3 THEN rt2.c2 ELSE rt0.c0 END COLLATE BINARY), LIKELY(rt2.c0), rt1.c3 FROM rt0, rt2, rt1 WHERE (x'') ORDER BY ((rt1.c1)/((((rt0.c3))>=((rt0.c2))))) DESC  NULLS FIRST, ((NULL)/(rt0.c3)) COLLATE BINARY ASC, rt1.c4 DESC; -- 0ms;
SELECT DISTINCT (((rt2.c1)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((rt1.c4 COLLATE BINARY))), (((NULL)) BETWEEN ((rt0.c1)) AND ((COUNT(rt0.c3)))), (((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((''))))-(rt0.c1)) FROM rt2;SELECT ALL x'' FROM rt1, rt2, rt0 LIMIT -989230853 OFFSET -908994929; -- 0ms;
SELECT ALL CAST(0.37618358904745786 AS NUMERIC) COLLATE RTRIM FROM rt0, rt2, rt1 WHERE (((((NULL)GLOB(0.15253409514143335)))IS NOT(NULL))); -- 0ms;
SELECT ALL (((((((('')OR(((x'')||(rt0.c2)))))OR(((rt2.c2)+(rt0.c0)))))AND(0xffffffffc8947b0d)))OR((((rt0.c4)) NOT BETWEEN ((x'')) AND ((rt0.c4))))), rt2.c1, NULL, LOWER(rt1.c2) COLLATE NOCASE, AVG(((rt0.c3)/(rt0.c2))) FROM rt2, rt0 WHERE (((((((NULL))>=((x''))), (x'' IN ()), ((0.26511694918325246)AND(0.42438100516182564))))==((MIN(NULL, NULL), (('0.5926025664026298')+(x'3e16')), CAST(x'8e71' AS INTEGER)))));SELECT (((rt0.c1) ISNULL) IN (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c4)))), (- (((rt0.c4)=(rt0.c1)))), NULLIF(DISTINCT ((((rt1.c2)OR(rt0.c0)))OR(rt0.c1)), rt0.c0), ((((((((((rt2.c1)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))AND(rt1.c2)))+(CASE WHEN '' THEN rt0.c0 WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt1.c0 END)), (~ (((rt2.c0)||(rt0.c2)))) FROM rt0, rt2, rt1 WHERE (CAST(((NULL) NOT NULL) AS REAL)); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT rt1.c1 COLLATE BINARY) FROM rt0, rt2 WHERE ((((('1727053746')<=('-1101211740'))) NOT NULL));SELECT CASE COUNT(rt2.c1)  WHEN rt0.c1 COLLATE NOCASE THEN '-1979375370' WHEN rt1.c2 THEN (((rt0.c4))>((rt2.c2))) WHEN ((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c3)) THEN (((rt0.c2)) BETWEEN ((rt2.c0)) AND ((x''))) WHEN rt1.c2 COLLATE RTRIM THEN CAST(NULL AS TEXT) WHEN ((rt2.c2) BETWEEN (rt1.c2) AND (rt2.c2)) THEN rt0.c4 COLLATE BINARY ELSE MIN(x'f8ca') END FROM rt2, rt0;SELECT DISTINCT ((((rt1.c4) IS FALSE)) NOT BETWEEN (INSTR(rt1.c0, rt1.c2)) AND (CASE rt2.c0  WHEN rt2.c1 THEN rt2.c0 END)), ((rt2.c1) IS TRUE), (NOT ((- ('~qK<1n,Vx')))) FROM rt0, rt2, rt1; -- 0ms;
SELECT ALL ((CASE rt1.c1  WHEN rt1.c0 THEN x'' END) NOT BETWEEN ((rt0.c2 IN (rt2.c0))) AND ('-2045998920')) FROM rt1, rt2, rt0 WHERE (((('m7\r') BETWEEN (NULL) AND (x'')) IN ())); -- 0ms;
SELECT DISTINCT 0.17959936484484462, (+ ((('2138237027') ISNULL))), (((rt1.c2 IN (rt2.c0)))>=(((rt0.c4)|(rt1.c4)))) FROM rt0 WHERE (CAST(CASE -176295649  WHEN 0.2216321344409089 THEN NULL ELSE 0.7769284232571146 END AS TEXT));SELECT ALL (NULL IN ()), ((CASE WHEN rt0.c0 THEN rt0.c3 END)|(GROUP_CONCAT(rt2.c2))), COUNT(*) OVER ( GROUPS BETWEEN ((('Am'))>((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))) FOLLOWING AND rt0.c4 PRECEDING EXCLUDE NO OTHERS) FROM rt1;SELECT ALL ((((((((0.9393281936483054)OR(CASE WHEN '&' THEN rt2.c1 END)))OR(((rt2.c0) IS FALSE))))OR(json(rt2.c0))))OR((rt0.c4 IN ()))), COUNT(CASE rt2.c1  WHEN rt0.c1 THEN rt1.c3 WHEN rt2.c1 THEN rt2.c2 WHEN '254399629' THEN rt0.c0 WHEN 0.6203150158464542 THEN rt1.c1 WHEN rt0.c4 THEN rt1.c3 END) OVER ( ORDER BY NULL), ((((((((((((COALESCE(rt1.c0, rt0.c2))OR((('-893559238') NOT BETWEEN (rt2.c1) AND (rt0.c0)))))OR(((rt1.c3)&(rt1.c0)))))OR(((rt2.c0) BETWEEN (rt1.c2) AND (rt0.c3)))))AND(json_quote(rt1.c0))))AND(IFNULL(DISTINCT rt0.c3, rt0.c0))))AND(ABS(rt2.c2))) FROM rt0, rt1, rt2; -- 2ms;
SELECT DISTINCT (MIN(rt1.c2) IN ()) FROM rt2 LIMIT 1798926271 OFFSET 1; -- 0ms;
SELECT DISTINCT (((NULL)) BETWEEN ((((rt2.c2)<<(x'4825')))) AND (((NOT (rt1.c2))))) FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT CASE (rt1.c0 IN ())  WHEN CAST(rt0.c3 AS BLOB) THEN ((rt0.c4)AND(rt1.c4)) WHEN CAST(rt0.c3 AS REAL) THEN ((((rt2.c2)OR(rt2.c1)))OR(rt0.c4)) WHEN ((rt0.c0)!=(rt1.c0)) THEN TOTAL(rt2.c0) END FROM rt2, rt0, rt1 WHERE (((((((((((((((NULL)/(x'')))OR(((('-830076831')) NOT BETWEEN ((x'2da575c3')) AND ((-1927902096))))))OR(-1379111193)))OR('-0.0' COLLATE RTRIM)))AND((0x157afae4 IN ()))))OR(0.34792165438001654 COLLATE NOCASE)))AND(((NULL)+(0.7850065845604343))))); -- 0ms;
SELECT DISTINCT (((NULL IN (rt0.c0))) NOT BETWEEN ((~ (rt2.c2))) AND (CASE WHEN rt2.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt2.c2 WHEN rt1.c2 THEN rt2.c0 ELSE rt1.c4 END)) FROM rt1, rt2, rt0 WHERE ((((NOT (NULL)))IS(CASE -1.197773171E9  WHEN '' THEN x'5e1b' ELSE '0.13210422794241972' END))); -- 0ms;
SELECT ((json_remove(rt1.c4, rt0.c3))<(((rt1.c1) NOT NULL))) FROM rt0, rt2, rt1 WHERE (CAST((0.3404118077630234 IN (NULL)) AS INTEGER)); -- 1ms;
SELECT ALL CASE rt2.c2 COLLATE BINARY  WHEN ((rt1.c2)||(rt0.c2)) THEN COUNT(*) END FROM rt1, rt2;SELECT ALL ((((rt2.c2)LIKE(rt0.c4)))OR(((rt1.c3)GLOB(rt1.c1)))) FROM rt2 LIMIT 851516785 OFFSET 254399629;SELECT DISTINCT ((SUM(rt0.c2))%(((rt1.c2)&(rt0.c1)))) FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c4)>(rt2.c0)))IS(json_extract(rt0.c4, rt0.c1, rt1.c3, rt1.c1, '1018549713', rt0.c4))) FROM rt0 WHERE ((((((((1.57592854E8, x'', x'')) BETWEEN (('9Y䯱U\r%''>T', 0.0, 0xffffffffd988feed)) AND ((x'', 1037760015, ''))))AND(((NULL) IS FALSE))))AND(CASE WHEN x'602b' THEN NULL ELSE x'' END)));SELECT DISTINCT CAST(CAST(rt1.c0 AS TEXT) AS INTEGER) FROM rt2 WHERE ((((((((((((((('(b')AND(-1.10050597E9)))AND(0.9239748994036775)))AND('1779615935')))OR(NULL)))AND(x'e5f9')))OR(x'0cef')))|(x'')));SELECT rtreenode(rt0.c4, rt0.c4) COLLATE BINARY FROM rt2, rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) IS FALSE), (CASE rt1.c4  WHEN rt0.c1 THEN rt0.c3 END IN ()), CAST(rt1.c4 COLLATE RTRIM AS INTEGER), GROUP_CONCAT(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c4 END) OVER (), RANK() OVER () FROM rt2, rt0 WHERE (((x'') IS FALSE) COLLATE NOCASE);SELECT DISTINCT ((((rt2.c0) BETWEEN (rt0.c3) AND ('1795819229')))LIKE(CASE WHEN rt2.c2 THEN rt1.c4 WHEN x'' THEN rt0.c2 WHEN rt2.c2 THEN rt1.c4 END)) FROM rt2, rt1, rt0; -- 0ms;
SELECT ((CAST(rt0.c1 AS INTEGER))AND(COUNT(*))), CAST(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c0 END AS NUMERIC), CAST(rt0.c2 AS INTEGER) FROM rt0;SELECT DISTINCT (((rt2.c2) BETWEEN (rt0.c2) AND (rt1.c4)) IN ()) FROM rt2 WHERE (CAST(((('', 0.23488249807668338, '1037343096', '-838655189', 'G6Vꀟ-W	', 'M', x'')) BETWEEN ((-1093608153, '-127767229', NULL, '懟89\', 0.9725328972780308, '', 0X70f07520)) AND ((x'', x'', 1.113002925E9, 0.35925008503627753, '1779615935', '-1136812867', NULL))) AS TEXT)); -- 0ms;
SELECT DISTINCT (((rt0.c3, rt1.c1, rt1.c2)) BETWEEN (((('256730658') BETWEEN (rt1.c0) AND (x'')), CAST(rt2.c2 AS REAL), rt0.c3 COLLATE RTRIM)) AND ((rt1.c0, (('') NOT BETWEEN (rt0.c4) AND (rt1.c2)), 0.5331449308001657))) FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT rt2.c0 FROM rt2, rt0, rt1 ORDER BY (x'9d73' IN (rt1.c3)) COLLATE RTRIM DESC; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT SQLITE_VERSION(), 0.6656801521665996) FROM rt0, rt1 WHERE (CASE WHEN ('-358051147' IN ()) THEN ((('')) BETWEEN ((x'')) AND ((''))) ELSE '' COLLATE NOCASE END) ORDER BY x'' DESC, (+ ((((rt1.c4, rt1.c1, '-1153081194')) NOT BETWEEN ((rt0.c3, rt0.c0, rt1.c1)) AND ((rt2.c2, rt0.c1, rt1.c0)))));SELECT rt0.c0, rt1.c3, (((NOT (rt0.c3))) NOT BETWEEN (((rt0.c3)&(rt0.c1))) AND (((rt2.c2) BETWEEN (rt0.c1) AND (rt1.c4)))) FROM rt1;SELECT 0.0 FROM rt0, rt2 WHERE ((((+ (0.8523737458189878))) NOT BETWEEN (NULL COLLATE RTRIM) AND (UPPER(DISTINCT x'dd05')))); -- 0ms;
SELECT ALL 0.6757316574098788, ((CASE rt0.c4  WHEN rt0.c3 THEN '>(' WHEN NULL THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((('꫙''	.I\r')IS NOT(rt1.c2))) AND (rt1.c1 COLLATE NOCASE)), CASE COUNT(*)  WHEN rt2.c2 COLLATE RTRIM THEN CAST(rt1.c0 AS NUMERIC) ELSE CASE rt2.c0  WHEN rt1.c2 THEN rt2.c1 END END FROM rt1 GROUP BY (((NOT (rt0.c1))) NOT BETWEEN (rt2.c1) AND (rt1.c4 COLLATE BINARY)) HAVING (((rt0.c1)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND (((NOT (rt0.c3)))));SELECT ALL RANK() OVER () FROM rt0, rt2, rt1 ORDER BY ((((rt1.c3) IS FALSE))==(CAST('0.5130775767564003' AS TEXT))); -- 3ms;
SELECT ALL ((((rt0.c1)*(rt0.c3)))<=((rt0.c4 IN (rt0.c3, rt2.c1)))) FROM rt2, rt0, rt1 WHERE (((((NULL)||('-1384968607')))>(0.7368054917651932))); -- 0ms;
SELECT JULIANDAY((rt1.c1 IN ()), ((rt0.c1) IS TRUE), CASE WHEN rt0.c4 THEN rt1.c1 ELSE rt0.c1 END) FROM rt2 WHERE ((((((NULL)) BETWEEN ((x'')) AND ((0Xffffffffa4ad15a0))))<=((0.8482905469864429 IN ()))));SELECT DISTINCT ((((rt0.c4) BETWEEN (rt1.c0) AND (rt1.c2)))|(CASE rt0.c3  WHEN rt2.c0 THEN rt0.c1 END)) FROM rt1, rt0, rt2 ORDER BY (((0.26928927280809245))==((CAST(rt1.c0 AS BLOB)))); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt2;SELECT DISTINCT '甠R똈r' FROM rt2, rt1; -- 1ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (3482680) AND (rt0.c0)))LIKE((rt1.c1 IN ()))) FROM rt1, rt0, rt2; -- 0ms;
SELECT ALL NTILE(CASE rt2.c1  WHEN rt2.c0 THEN rt2.c2 WHEN rt2.c1 THEN rt2.c0 WHEN rt2.c1 THEN rt2.c0 END COLLATE NOCASE) OVER (), (((- (rt2.c2))) BETWEEN (((rt0.c0) ISNULL)) AND (SUM(rt1.c3))), AVG(((rt1.c4)/(rt1.c3))) OVER (), ((((((rt1.c1)) BETWEEN ((rt0.c4)) AND ((rt2.c1))), x'25279ee6' COLLATE NOCASE, (+ (rt0.c2))))<((((rt0.c1)>=(rt0.c0)), (- (rt1.c3)), ((rt1.c0)=(rt1.c0))))), (((CAST(rt0.c1 AS BLOB)))>(('-81783064'))) FROM rt2 GROUP BY NULL HAVING CASE rt1.c0  WHEN ((rt2.c0)GLOB(rt0.c3)) THEN rt2.c1 ELSE (rt0.c2 IN ()) END;SELECT ALL DENSE_RANK() OVER (), ((((rt1.c2) NOT BETWEEN (rt2.c0) AND (rt0.c2)))|(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt2.c0 END)), ((x'') NOT BETWEEN (((rt2.c0)AND(rt1.c4))) AND (x'7cd7')) FROM rt0, rt2 WHERE (TRIM(CASE WHEN 'S\n' THEN x'' END)) GROUP BY ((rt0.c4) BETWEEN ((- (0.9679657864661677))) AND (915710325)), CASE (+ (rt2.c2))  WHEN TRIM(DISTINCT rt2.c2) THEN CASE rt1.c4  WHEN rt0.c4 THEN rt1.c0 END ELSE (rt1.c2 IN ()) END, '}N>[' HAVING rt0.c4 LIMIT -522869172;SELECT ALL CAST(((rt1.c4)/(rt1.c3)) AS TEXT), x'', ((rt0.c1) NOT BETWEEN (((rt1.c4) BETWEEN (rt0.c1) AND (rt2.c1))) AND (x'')) FROM rt1 WHERE (((('' IN ()))<>((('uJ#+{M | ')==(NULL)))));SELECT ALL DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT((rt1.c2 IN ())) FILTER(WHERE rt0.c2) OVER (), ((NULL)|(UPPER(rt0.c4))), ((rt0.c1 IN ()) IN ()) FROM rt2, rt1 WHERE ((NULLIF(x'', 'N7>&') IN (('' IN ()))));SELECT ALL NTILE(ABS(DISTINCT LIKELY(DISTINCT rt2.c1))) OVER () FROM rt1, rt2, rt0;SELECT DISTINCT (((+ (rt1.c0)))-(MIN(rt0.c2))), ((((rt0.c3)*(rt0.c4)))*(rt1.c1)), TOTAL(0.41690256932386016) OVER ( PARTITION BY ((((NULL)AND(rt1.c3 COLLATE RTRIM)))AND((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt2.c0))))), ((((((((rt0.c3)OR(rt2.c1)))OR('}?g6rq')))OR(CASE WHEN rt1.c2 THEN rt0.c3 ELSE rt0.c3 END)))OR((~ (rt1.c1)))), ((((((rt0.c0)OR(0.23764345090351724)))AND(rt2.c2))) NOT BETWEEN (CAST(rt0.c4 AS BLOB)) AND ((rt2.c2 IN (rt2.c1)))), (((((((rt2.c0))<=((rt2.c1))))AND(rt1.c4 COLLATE RTRIM)))OR((- (rt1.c3)))), CASE WHEN rt1.c1 THEN rt1.c3 END COLLATE BINARY, JULIANDAY(CAST(rt0.c2 AS NUMERIC), CASE WHEN rt1.c2 THEN rt0.c2 END, ((rt0.c1) NOT NULL))) FROM rt1 WHERE (CASE WHEN ((0x48689ac3) NOT NULL) THEN CAST(1651375178 AS BLOB) WHEN (-309131557 IN ()) THEN (NULL IN ()) WHEN ((x'') NOT NULL) THEN (~ ('-1160537046')) WHEN (('1562220097')<<(x'ea69')) THEN '1608702497' WHEN (('')-(-799575777)) THEN 0Xffffffffc7db2087 COLLATE BINARY END);SELECT DISTINCT (CASE rt2.c1  WHEN rt0.c0 THEN rt1.c3 END IN ((rt0.c2 IN ()), json_extract(rt0.c2, '-883424809'))), 0.3191633013804336, HEX(DISTINCT ((x'002b')|(rt1.c0))) FROM rt1, rt2, rt0 WHERE ((((0.16990695032331016))>=((NULL))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY ((rt0.c4)<<(rt2.c0)) COLLATE RTRIM, rt0.c1 GROUPS BETWEEN DATE(((rt0.c1)IS NOT(rt1.c1)), rt0.c3, (~ ('')), ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c4)), ((rt2.c2)+(rt2.c2)), rt0.c0 COLLATE NOCASE, CASE NULL  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN -946286020 WHEN rt0.c1 THEN rt0.c4 WHEN rt1.c2 THEN rt2.c0 WHEN rt0.c3 THEN rt2.c0 ELSE rt0.c4 END) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM rt2 WHERE (('7l>t>{	}' IN ()) COLLATE RTRIM);SELECT ALL ((((rt0.c0 COLLATE NOCASE)AND(CAST(rt0.c3 AS INTEGER))))AND('P')) FROM rt0 WHERE (CASE WHEN (('-1411846765')AND(0.8381581983681864)) THEN (+ (x'adbd')) WHEN (('-1153393551') NOT NULL) THEN (0Xffffffffb09d4f4b IN ()) WHEN '8' COLLATE NOCASE THEN '' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS REAL), (((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c0))) COLLATE RTRIM, TOTAL((((rt1.c0))>=((rt2.c1)))) FROM rt0 WHERE (CASE WHEN NULL THEN '-1484611153' ELSE x'0b51' END COLLATE BINARY) GROUP BY ((IFNULL(DISTINCT rt1.c4, rt0.c0))<(LIKELIHOOD(DISTINCT rt0.c0, 0.8328508740546716))) HAVING (((rt1.c4 COLLATE NOCASE))>((AVG(rt0.c2))));SELECT (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt1.c3))) COLLATE RTRIM FROM rt2, rt0 WHERE (LTRIM(((NULL) NOT NULL)));SELECT ((((rt2.c0)==(rt1.c3)))*(CAST(rt1.c0 AS REAL))) FROM rt1;SELECT DISTINCT ((TOTAL('曌\n'))<<(((0xffffffffb397e7cc) NOT NULL))) FROM rt2, rt0, rt1 ORDER BY STRFTIME(((rt1.c4) BETWEEN (rt2.c2) AND (rt2.c1)), NULL COLLATE RTRIM, ((((rt1.c1)OR(rt0.c0)))AND(rt1.c0))) DESC, ((((((rt0.c2)AND(rt1.c3)))AND(rt0.c0))) ISNULL); -- 1ms;
SELECT ALL CAST(CAST(rt1.c3 AS NUMERIC) AS REAL), UNICODE(rt0.c0) COLLATE BINARY, x'79110ac3' FROM rt2, rt0 WHERE (CAST((((NULL))>((-7.8223924E8))) AS TEXT));SELECT ((ABS(rt1.c2)) NOTNULL), LAG(x'', ((CASE rt0.c1  WHEN rt1.c1 THEN rt0.c0 END) NOTNULL), CAST((NULL IN ()) AS NUMERIC)) OVER (), GROUP_CONCAT(CASE rt1.c1  WHEN rt1.c4 THEN rt2.c1 ELSE rt0.c0 END) OVER ( RANGE  UNBOUNDED PRECEDING), CAST(-5.65989917E8 AS REAL), (((((rt0.c0)>(rt1.c3))))>((((rt1.c0)IS(rt1.c3))))) FROM rt0, rt1 WHERE ((((+ (''))) NOT NULL));SELECT ALL ((((((rt0.c2)OR(rt0.c4)))OR(NULL))) NOT NULL) FROM rt0, rt1 WHERE (CASE (- (x''))  WHEN (NOT (NULL)) THEN NULL COLLATE BINARY ELSE ((((NULL)AND(0X3c357975)))AND('')) END); -- 0ms;
SELECT ((CASE WHEN rt0.c2 THEN rt0.c3 END)%(((rt1.c1)<(rt0.c3)))) FROM rt2, rt1;SELECT DISTINCT (((- (rt1.c2)))||(rt1.c4)), DATE(CAST(rt2.c1 AS TEXT), ((rt1.c0)GLOB(rt1.c1)), (((NULL))<=((rt0.c1)))), (((((rt1.c2)AND(rt2.c1)), (rt2.c2 IN ()), ((rt0.c3)<=(rt1.c0))))==((((((((((rt1.c0)AND(rt1.c0)))OR(rt0.c3)))AND(NULL)))AND(rt1.c4)), SUM(rt2.c2), (((rt2.c2, rt1.c3, rt0.c3)) BETWEEN ((rt1.c0, rt0.c2, rt1.c1)) AND (('^ab?YyVf', rt0.c4, rt0.c0)))))) FROM rt2, rt0, rt1 WHERE (((((((0Xf4d6622)||('')))AND(0.7363210500446801)))OR(((((-1600216878)OR(0.34279748304792657)))OR(NULL))))); -- 1ms;
SELECT DISTINCT (((UNICODE(rt2.c2)))<(((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt0.c0)))))) FROM rt0, rt2 WHERE (LOWER(DISTINCT CAST(-1.884209535E9 AS REAL)));SELECT ((((rt1.c4)-(rt0.c1))) BETWEEN (rt0.c4 COLLATE BINARY) AND (highlight(rt1.c1, rt1.c3, rt1.c3, rt0.c0))), '-806442715', (CASE rt0.c3  WHEN rt2.c0 THEN rt0.c2 END IN ()) FROM rt2, rt0;SELECT (+ (((rt0.c3) NOTNULL))), ((json_quote(rt0.c2))!=((+ (rt0.c4)))), (((rt0.c1)IS(rt0.c4)) IN ()) FROM rt0, rt1 LIMIT -1556425377 OFFSET -969440685; -- 0ms;
SELECT (rt1.c4 COLLATE RTRIM IN ()) FROM rt1; -- 0ms;
SELECT NTILE((((rt2.c2) BETWEEN (rt2.c2) AND (rt2.c0)) IN (rt2.c1))) OVER (), (((rt1.c0))>=((((rt0.c3)AND(rt1.c1))))), (rt2.c0 IN ()) COLLATE BINARY, rt1.c2, ((rt0.c0 COLLATE BINARY)IS(((rt2.c1) IS FALSE))) FROM rt2 GROUP BY CASE WHEN ((((rt2.c2)OR(rt1.c4)))AND(rt2.c2)) THEN (~ (rt1.c4)) END;SELECT ALL TRIM(DISTINCT ((rt1.c4)<>(NULL))) FROM rt0, rt2 WHERE (((NULL COLLATE NOCASE)+(NULL))) GROUP BY (((rt1.c2 IN ()))&(((rt2.c2)AND(rt0.c2)))) HAVING LENGTH('-1e500');SELECT DISTINCT ((rt0.c0)IS(rt0.c2)) COLLATE RTRIM FROM rt1, rt0 WHERE (((((x'') NOT BETWEEN ('d^') AND (1287156625)))IS((('yv') NOT BETWEEN ('''qp') AND (0.6307613392476944))))) GROUP BY CASE ((rt0.c2)AND(rt2.c1))  WHEN rt2.c2 THEN (rt1.c1 IN ()) ELSE ((x'f05e')>=(rt1.c4)) END;SELECT DISTINCT ((rt0.c0)|(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c2 END)), (((CASE WHEN rt2.c0 THEN rt2.c0 END))<>(((((rt0.c4))>((rt2.c0)))))), NTH_VALUE(NULL, (((rt0.c4)) BETWEEN (((rt2.c0 IN ()))) AND ((COALESCE(rt1.c4, rt2.c1))))) OVER () FROM rt2, rt0, rt1 WHERE (CAST((((('256730658')OR('I2pnow<%v.	')))OR(0.8469416524081747)) AS REAL)); -- 5ms;
SELECT DISTINCT CAST(0Xffffffffacd29123 AS INTEGER), TOTAL(((rt1.c3) IS FALSE)), ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt0.c2)) COLLATE BINARY FROM rt0 WHERE (((NULL) BETWEEN ((- ('-1602966961'))) AND ((('-1026019365')=(x'')))));SELECT DISTINCT FIRST_VALUE(((rt2.c0 COLLATE RTRIM) ISNULL)) OVER () FROM rt2, rt1; -- 0ms;
SELECT ALL 0.8451317767624903 FROM rt0; -- 0ms;
SELECT (((rt0.c1)OR(rt0.c3)) IN ()), ((rt1.c0)GLOB((rt0.c1 IN (1.214814915E9)))), FIRST_VALUE(CAST('488909019' AS TEXT)) OVER () FROM rt0, rt2, rt1 WHERE (((((UPPER(0.36769714692821853))OR(((((-2.110564357E9)OR(NULL)))OR('1346169797')))))OR((+ (0.3979365366326326))))); -- 1ms;
SELECT DISTINCT TOTAL(CAST(rt1.c2 AS REAL)) FROM rt2, rt1 WHERE (LENGTH(CAST(NULL AS NUMERIC))) ORDER BY rt1.c4 ASC  NULLS FIRST, ((((rt2.c0) IS TRUE)) NOT NULL); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS TEXT) COLLATE BINARY FROM rt0 WHERE ('||.AB揧U᫄*'); -- 0ms;
SELECT DISTINCT NULL FROM rt2 LIMIT -492520471; -- 0ms;
SELECT DISTINCT SUM(HEX(rt2.c1)), CASE (rt1.c0 IN ())  WHEN rt0.c1 THEN x'' COLLATE NOCASE END, 0.5926025664026298 FROM rt1, rt2, rt0 WHERE (((((NULL)-(x'')))LIKE((~ (NULL))))); -- 0ms;
SELECT (rt1.c1 IN ()) COLLATE RTRIM FROM rt2, rt0, rt1 GROUP BY (((CASE rt0.c4  WHEN rt1.c3 THEN rt2.c1 END))>=(((((rt1.c1)) BETWEEN ((rt2.c2)) AND ((rt1.c2)))))), ABS(((rt1.c4)||(rt1.c3))), CAST(CASE rt0.c4  WHEN rt0.c4 THEN rt1.c2 WHEN rt2.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END AS TEXT) HAVING (~ (CASE rt1.c3  WHEN rt2.c1 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c4 END)) LIMIT 551852096; -- 2ms;
SELECT ALL (NOT (((rt0.c1) BETWEEN (rt0.c3) AND (1.113002925E9)))), AVG(((rt2.c0) BETWEEN (rt0.c4) AND (rt1.c0))), CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 ELSE rt1.c4 END THEN ((rt0.c2) BETWEEN (rt1.c4) AND (rt1.c1)) END FROM rt2, rt1, rt0 WHERE (((((COALESCE('0.5893282602665024', x'124e'))AND((((('-180782819')OR(NULL)))OR(x'b461')))))OR(CASE ''  WHEN x'a64d' THEN '0.7893310751992344' END))); -- 4ms;
SELECT AVG(((rt2.c2) BETWEEN (rt0.c3) AND ('0.8585783055667573'))) OVER () FROM rt2, rt1, rt0 WHERE (((((((x'')OR('0.9732530161100619')))AND('#w+c')))&((NULL IN ())))) ORDER BY (+ ('0?7')) DESC  NULLS FIRST, CASE ((rt2.c0) NOTNULL)  WHEN x'' THEN CAST(rt0.c4 AS BLOB) ELSE rt2.c2 END  NULLS LAST LIMIT -1026019365; -- 0ms;
SELECT DISTINCT (((rt2.c1)) NOT BETWEEN (((((rt1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) AND ((((rt2.c1) IS TRUE)))) FROM rt1;SELECT DISTINCT rt2.c1 FROM rt0, rt1, rt2 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt0.c0)>=(rt0.c3)))) AND ((x''))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ ((((rt0.c4))<((rt0.c0))))) FROM rt0, rt1, rt2 WHERE (((NULL) IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((rt2.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN ()) FROM rt0, rt2, rt1; -- 0ms;
SELECT MIN(HEX(rt0.c2)), (((rt0.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt2.c2))) COLLATE NOCASE, (- (HEX(rt1.c2))) FROM rt0, rt1, rt2 WHERE (CASE WHEN ((0.8103945747144142) BETWEEN (0X1082127c) AND (NULL)) THEN 2.031872337E9 COLLATE RTRIM ELSE ((0X67ab1a53)AND('366505455')) END); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT CASE CASE WHEN rt1.c1 THEN rt2.c0 END  WHEN 0.0377731094799445 THEN ('-1892613993' IN ()) ELSE rt1.c4 END FROM rt2 WHERE ((('?>,鷙')GLOB(NULL)) COLLATE RTRIM);SELECT DISTINCT CAST(rt0.c3 AS TEXT) COLLATE RTRIM FROM rt1 RIGHT OUTER JOIN rt0 ON ((0x425713ad)OR(((rt1.c3)>(rt1.c0)))) RIGHT OUTER JOIN rt2 ON CASE (('') NOT NULL)  WHEN rt0.c0 COLLATE NOCASE THEN ((((((((rt0.c4)OR(rt0.c0)))OR(rt2.c2)))AND(rt0.c0)))AND(rt0.c3)) ELSE ((((rt1.c1)OR(rt1.c2)))AND(rt0.c3)) END; -- 0ms;
SELECT LAG(CAST(CAST(rt2.c1 AS INTEGER) AS TEXT), (((NOT (rt2.c1))) BETWEEN (CAST(rt2.c1 AS BLOB)) AND (((rt2.c2)LIKE(rt2.c2)))), (((((rt2.c1) IS TRUE), ((rt2.c1) BETWEEN (rt2.c2) AND (rt2.c0)), TRIM(rt2.c2, rt2.c2)))>(((+ (rt2.c0)), 0.7845273859439656, ((((rt2.c1)AND(rt2.c1)))OR(rt2.c0)))))) OVER ( RANGE  UNBOUNDED PRECEDING), ((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c2))) IN ()), ((((((rt1.c4)AND(rt0.c1)))OR(rt2.c2)))IS NOT(((rt0.c2)>=(rt2.c0)))) FROM rt2;SELECT ALL rt2.c2 COLLATE BINARY FROM rt2, rt0, rt1 WHERE (CAST(CASE NULL  WHEN x'' THEN 0.44404019289455066 WHEN x'' THEN '0.36769714692821853' WHEN NULL THEN x'' END AS TEXT)); -- 0ms;
SELECT DISTINCT AVG(((rt2.c1) NOT BETWEEN (rt1.c4) AND (0.3805532141662137))) OVER (), (((rt2.c2)) NOT BETWEEN ((CAST(rt1.c3 AS NUMERIC))) AND ((((((rt0.c3)AND(rt1.c3)))OR(rt0.c4))))), NTILE(((((((rt2.c0)>=(rt0.c2)))AND((((rt0.c2)) NOT BETWEEN ((rt2.c2)) AND ((rt1.c3))))))AND(rt2.c1))) OVER (), COUNT(((rt1.c4) BETWEEN (0.35583916038405616) AND (rt1.c1))), LAG(((((rt0.c2)<>(rt0.c2)))==(CASE WHEN rt2.c0 THEN rt1.c3 WHEN '' THEN rt0.c4 WHEN rt2.c1 THEN rt1.c3 ELSE rt2.c2 END)), NULL, (((rt0.c4)) BETWEEN ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((rt1.c1 COLLATE RTRIM)))) OVER () FROM rt1, rt0, rt2;SELECT ALL (rt1.c4 IN ()) COLLATE BINARY, NULLIF((rt1.c2 IN (rt1.c2, -1.10050597E9)), json_remove(rt2.c0, rt1.c4, rt1.c3, rt2.c1)), rt0.c4 FROM rt2 LIMIT 1722734990;SELECT ALL rt2.c1 FROM rt2 INTERSECT SELECT '386304579' COLLATE NOCASE FROM rt1, rt2 GROUP BY CAST(1071639419 AS INTEGER) HAVING (+ ((+ (NULL)))); -- 0ms;
SELECT DISTINCT ((rt0.c0)>(rt0.c3)) COLLATE RTRIM FROM rt1, rt0; -- 1ms;
SELECT DISTINCT rt2.c1, COUNT(((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL))), ((((((rt1.c2)AND(rt1.c4)))OR(rt2.c1))) NOT BETWEEN (((rt1.c0)/(rt0.c3))) AND (CAST(rt0.c2 AS TEXT))) FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt2 WHERE ((((((((x''))<=((0.8954957624828755))))OR('v69x')))OR(('0.13018079533178795' IN ()))));SELECT DISTINCT ROW_NUMBER() OVER ( RANGE (~ (((rt2.c0) NOT NULL))) PRECEDING), ((((((((((rt0.c4)<=(NULL)))AND(((rt0.c4) BETWEEN (rt2.c1) AND (rt1.c2)))))OR('4p')))AND((- (2.064520995E9)))))OR(rt0.c2)), MIN(CAST(rt0.c4 AS BLOB)) FROM rt2, rt0, rt1;SELECT DISTINCT (~ (x'' COLLATE BINARY)) FROM rt0, rt2 LIMIT -989230853 OFFSET -1371987644; -- 0ms;
SELECT ALL ABS(rt2.c2 COLLATE RTRIM) FROM rt0 WHERE (((((CASE WHEN -1.7976931348623157E308 THEN 'el1' ELSE NULL END)OR(((((x'')OR(x'')))AND(4.3673267E8)))))AND('244341972')));SELECT ((CASE rt0.c4  WHEN x'' THEN rt0.c2 END) BETWEEN (((rt0.c3) IS TRUE)) AND (((rt1.c2)<(rt2.c1)))), (((rt1.c3)<<(rt2.c0)) IN (((rt1.c1)LIKE(rt1.c2)))), x'7e51' FROM rt1, rt0, rt2 ORDER BY CAST((rt1.c4 IN ()) AS REAL)  NULLS LAST; -- 2ms;
SELECT DISTINCT ((CAST(rt1.c3 AS TEXT)) BETWEEN (((rt1.c3)GLOB(rt0.c3))) AND (((rt1.c2)==(rt2.c1)))) FROM rt1, rt0, rt2 WHERE ((x'' COLLATE NOCASE IN ())); -- 0ms;
SELECT ((+ (rt0.c2)) IN ()), ((((NOT (rt0.c3))))<((((((((((rt1.c4)AND(rt1.c2)))OR(rt2.c2)))AND(rt1.c1)))AND(x''))))), (((+ (rt1.c0))) IS FALSE) FROM rt2 LIMIT 441168547 OFFSET 292098051;SELECT DISTINCT (((rt2.c1 IN ())) NOT BETWEEN (((rt0.c1)>(rt2.c2))) AND (CASE WHEN 'C^' THEN rt2.c1 END)) FROM rt0;SELECT (((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)), TOTAL(rt0.c2), ((rt0.c2)<(rt2.c2)), (~ ('-1010786751')), -1909644210))=((UNLIKELY(rt0.c3), x'1207', rt0.c0, 0.27230721693248294, (((rt0.c4))<=((rt0.c3)))))), CAST(rt1.c4 AS NUMERIC), ((((((((((((((((((((rt0.c1)AND('-90681264')))AND(rt0.c1)))OR(rt0.c2)))AND(0X12c1f618)))AND(((rt1.c0)+(rt0.c3)))))AND(((rt1.c0)%(rt1.c3)))))AND(rt1.c1 COLLATE NOCASE)))AND((((rt1.c1))<((rt2.c0))))))OR(json_patch('2줈', rt1.c0))))AND(COUNT(rt0.c3))) FROM rt1, rt0 WHERE (((((('')) NOT BETWEEN (('')) AND (('-1586781037'))))<<((NULL IN (NULL)))));SELECT DISTINCT rt2.c0 FROM rt1, rt0, rt2; -- 0ms;
