-- Time: 2024/06/07 10:52:48
-- Database: database36
-- Database version: 3.40.0
-- seed value: 4140944136
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 0ms;
UPDATE OR ABORT rt1 SET (c4)=(x'b5a0') WHERE (NOT (0.5341801225455557)); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c3, c2) VALUES ('-493846915', '-677454448', '-493846915'); -- 0ms;
UPDATE rt0 SET c3=0.6581837240537802; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c0)=(x'f25c', NULL) WHERE HEX(DISTINCT COALESCE(DISTINCT rt0.c0, rt0.c1)); -- 1ms;
REINDEX  rt1; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c1, c0, c4, c6) VALUES ('!!', NULL, x'b48e', NULL, x'283c'), (-1784091436, NULL, -493846915, x'b073', NULL), (0.21281567600324602, NULL, '-677454448', '4831887128304216000:-7268370085973056792 604:-5333564422178021804:-987288495630460712 v{', 0x430b6e63); -- 1ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3) VALUES (397288835, '-254511326'), (NULL, 0.2989149088163412), (x'91c4', x''); -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('QVj4*\/G'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE rt1 SET (c3)=(0.1607201049541256); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-493846915'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2)=('0.6581837240537802', '721707977'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.9416281652001053, 'N'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE rt2 USING rtree(c0, c1, c2, c3, c4, c5, c6); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt2', ' sz=-677454448 unordered'); -- 0ms;
UPDATE OR IGNORE rt1 SET c6=x'' WHERE (((rt1.c4))>((''))) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE rt2 SET (c0, c1)=(x'98b1', ''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'bcf5', x'', x'5c37', -1358559766, NULL, x'', '-1294837850'), (0.2987494782728718, x'', x'9406898b', 0.21281567600324602, NULL, NULL, NULL), (0.2989149088163412, x'', x'', NULL, x'', 0.3884916846391794, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt2(c5) VALUES (0.8960506225496498), ('qvj4*\/g'), (x'' COLLATE NOCASE), ('Cj\rJB6T'), (x'ffb415a5'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES ('721707977', 0xffffffff9281d270); -- 0ms;
ANALYZE rt1; -- 0ms;
INSERT OR IGNORE INTO rt2(c4, c0, c3, c2, c1) VALUES ('1862409850', x'', ((((((((((('-2046580976')OR('{a')))OR(x'5a3a')))AND('-254511326')))AND(x''))))!=((x'6330'))), '-200009606', ((CASE WHEN NULL THEN NULL ELSE ',9' END) NOTNULL)); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c2, c1) VALUES (((((((',9')AND(1.86240985E9)))AND(0Xffffffff95a8ecd4))) NOT BETWEEN (CASE x''  WHEN -1784091436 THEN '!!' ELSE '眢t,[8]' END) AND (((((0.9155176207951233)OR(x'')))AND(NULL)))), '-1294837850', 0x23cac115); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1) VALUES (x'3293631a', 0.3884916846391794), ('0.5341801225455557', '-1836985744'), ('895553341', 0.3884916846391794); -- 0ms;
UPDATE rt1 SET c3=x'7f3bc363'; -- 0ms;
END; -- 0ms;
INSERT OR ABORT INTO rt2(c1, c2, c0, c5, c3, c6, c4) VALUES (-612745404, x'', '07', '-200009606', '', x'', 0.5999767884401309); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2, c5, c0, c6) VALUES (x'd1b8', 0.1812643759847452, x'', x'', 0x3342d6de); -- 0ms;
DELETE FROM rt0; -- 0ms;
INSERT OR ABORT INTO rt1(c0, c4, c3, c2, c6, c1) VALUES (554301127, 0.12800296951075252, '', 0.8275458682837061, x'', NULL), (NULL, -2.54511326E8, '8045513', NULL, NULL, '-677454448'), (NULL, x'', NULL, x'c67c', x'', 0x1ea805db); -- 0ms;
INSERT OR IGNORE INTO rt1(c6, c4) VALUES ('2004418532', '-254511326'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c3='1368520832'; -- 0ms;
PRAGMA main.short_column_names = false; -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 1ms;
UPDATE rt1 SET (c6)=(0.5999767884401309); -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c1, c3, c2, c4) VALUES ('QVj4*\/G', '', NULL, '1000926488', NULL); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c3) VALUES (0.6047137193508964, '514328027'); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0, c3, c1) VALUES (0.4752015159776668, 0.9759635809079664, NULL, x''); -- 0ms;
UPDATE OR IGNORE rt2 SET c6=NULL WHERE (((rt2.c3)LIKE(rt2.c6)) IN ()); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'', 0.8165675752212148, 'S嫷J''{'), ('眢t,[8]', NULL, NULL, 1368520832), (0Xffffffff95f5f19e, x'', x'', NULL); -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c5, c4, c6) VALUES ('1947385546', 0.801196008074712, '325073522', x''), ('Z9F', 1173704141, '601169343', NULL), (x'ec69', NULL, x'', 1284607362); -- 0ms;
INSERT OR IGNORE INTO rt2(c6, c4, c1, c2, c5, c3) VALUES ('', x'', '600490261', 0.3329615915244335, x'dc5f', '-474045'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('m.') WHERE (((rt0.c1, rt0.c1, rt0.c1)) BETWEEN (((NOT (1.173704141E9)), CAST(rt0.c3 AS NUMERIC), ((rt0.c2)AND(rt0.c1)))) AND (((- (rt0.c2)), ((rt0.c3)<<(rt0.c0)), CAST(rt0.c1 AS NUMERIC)))); -- 1ms;
PRAGMA main.journal_mode; -- 0ms;
UPDATE OR FAIL rt1 SET c0=NULL; -- 0ms;
PRAGMA temp.auto_vacuum = INCREMENTAL; -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-vH1zC' AS REAL); -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT COUNT(*) FROM rt1, rt2, rt0 WHERE ((NOT ('Tt/17xJ챲'))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt2', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c6) VALUES (NULL, NULL), (x'', -474045.0), (0.12800296951075252, NULL); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2, c1, c3) VALUES ('gF', 0.9012881285014656, NULL, '601169343'); -- 0ms;
INSERT OR REPLACE INTO rt2(c0, c2, c5, c1, c4, c3, c6) VALUES (NULL, '-1992856595', x'', x'db6c', x'15a3', 0.8713696045612438, '1173704141'), (NULL, 888239169, 0.7065161736312812, '-1784091436', x'', NULL, NULL), (x'a89d', '-359155195', NULL, '-677454448', '2063853684', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3) VALUES (-1725794410, NULL); -- 0ms;
INSERT OR IGNORE INTO rt2(c0, c3, c2) VALUES (0.13814097760198496, 0.7869571067257937, '1862409850'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c6, c2, c5)=('', NULL, 'Od') WHERE ((((((rt1.c5)+(rt1.c0)))AND((+ (rt1.c6)))))AND(CAST(rt1.c2 AS BLOB))); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (NULL, NULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt2(c1, c6) VALUES ('', NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES ('-1500067230'); -- 0ms;
INSERT OR REPLACE INTO rt1(c4) VALUES ('-68621987'); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES ((((((((((((0.14931594778013135)) BETWEEN (('-621134469')) AND ((NULL))))AND(CASE x''  WHEN x'7896' THEN NULL END)))OR(((0xffffffff95a8ecd4)!=(0xffffffff93dbd6f0)))))AND((((NULL)) BETWEEN ((NULL)) AND ((x''))))))AND(((((NULL)AND(x'')))AND(x''))))); -- 0ms;
INSERT OR IGNORE INTO rt2(c0, c4, c2, c1, c6, c3) VALUES (514328027, 0.31598028192097727, NULL, NULL, 0.20912263222245442, NULL); -- 1ms;
UPDATE OR IGNORE rt2 SET (c3, c3, c0)=(5.14328027E8, '[.', '-223050951'); -- 1ms;
PRAGMA cache_size = -7924691595660049098; -- 0ms;
UPDATE OR REPLACE rt0 SET (c3)=('1861629133'); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
UPDATE OR ABORT rt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT DISTINCT rt0.c1, ((((((((((((vt0.c0)AND(rt1.c6)))AND(0.010928731044142492)))OR(rt1.c2)))AND(rt0.c3)))OR(CAST(0.7804733206754351 AS TEXT))))AND(0.08455136367672411)), ((TOTAL(rt0.c3))AND(rt2.c2 COLLATE BINARY)) FROM vt0, rt1;SELECT DISTINCT ((AVG(rt1.c4))<(rt2.c2)) FROM rt1 NOT INDEXED, rt0, vt0, rt2, v0 GROUP BY ((((((((((((((rt1.c1) NOTNULL))OR('')))OR(rt0.c0 COLLATE RTRIM)))OR(rt0.c2)))AND((rt0.c3 IN (rt1.c4)))))OR(((v0.c0) BETWEEN (rt2.c0) AND (vt0.c0)))))OR(NULLIF(0x5755adb7, rt0.c3))); -- 0ms;
SELECT ALL (((((((rt2.c6)OR(rt1.c1)))AND(rt0.c0))))>((CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c6 END))), ((((SUM(rt1.c3))OR(((v0.c0)%(v0.c0)))))AND(((vt0.c0)==(NULL)))), ((((rt1.c4) NOT BETWEEN (rt0.c0) AND (rt2.c5))) ISNULL), (((vt0.c0 IN ()))+(RTRIM(rt1.c5))), ((((((((((((rt0.c0)OR(rt2.c1)))AND(rt1.c1)))OR(rt0.c3)))AND('0.21281567600324602')))OR(((rt2.c1) BETWEEN (rt2.c3) AND (rt1.c6)))))OR(((vt0.c0) BETWEEN (x'') AND (v0.c0)))) FROM rt1, rt2, vt0, v0, rt0 WHERE (((((((((((((('' IN ()))OR((('-1134246116')|('0.8960506225496498')))))AND(CASE 0.13814097760198496  WHEN '8045513' THEN '' ELSE NULL END)))AND((NOT ('')))))OR((('') IS TRUE))))OR('' COLLATE RTRIM)))AND((~ (1.947385546E9))))); -- 0ms;
SELECT (((rt1.c5)>(rt2.c1)) IN (rt0.c1 COLLATE RTRIM, CASE WHEN v0.c0 THEN rt1.c5 ELSE rt1.c2 END)) FROM vt0, v0;SELECT ALL (0.24037401932141866 IN ()) FROM rt0; -- 1ms;
SELECT ALL (((((rt2.c2))<=((rt2.c1)))) NOT BETWEEN (((rt2.c4)|(rt1.c5))) AND (((rt2.c3)IS(rt1.c2)))) FROM v0, rt2, vt0, rt0 WHERE ((+ (x'' COLLATE BINARY)));SELECT DISTINCT (((((rt1.c4) BETWEEN (vt0.c0) AND (rt1.c5)), vt0.c0, (rt1.c4 IN (NULL))))=((json_type(rt2.c3), ((NULL)>>(rt2.c0)), ((rt2.c4)>(rt2.c5))))) FROM v0, rt0, vt0, rt2, rt1 WHERE (LIKELY(DISTINCT ((0.11568286700840891)!=(0.11568286700840891)))) GROUP BY (((((((('')AND('*d')))AND(v0.c0 COLLATE RTRIM)))AND(rt2.c5)))AND((('寡*&')OR('N麫\1뉺*gw')))) LIMIT 1549552954; -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((CAST(rt2.c4 AS BLOB))) AND (((rt1.c2 IN ())))) FROM v0, rt1, vt0, rt2, rt0 WHERE (((((0.5042794528906499) ISNULL))LIKE(CASE WHEN x'' THEN -2.133828639E9 WHEN 0.10820538972338467 THEN '|盰)' WHEN NULL THEN '7368438' ELSE '' END))) ORDER BY LOWER(DISTINCT (rt0.c2 IN (rt2.c5))) ASC; -- 0ms;
SELECT DISTINCT CAST(((rt2.c0) NOT NULL) AS TEXT) FROM rt1, rt0, v0, rt2, vt0; -- 0ms;
SELECT ALL rt2.c4, NTILE(rt0.c1) OVER (), DENSE_RANK() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0, v0, rt1, vt0 WHERE ((('1862563244') ISNULL) COLLATE BINARY);SELECT DISTINCT ABS(DISTINCT (rt2.c0 IN ())) FROM rt1; -- 0ms;
SELECT DISTINCT '399559794' FROM v0 WHERE ((((((('')OR(0.9748966677437181)))OR('dn}z}BP19')))AND(TRIM(x'6c66')))); -- 0ms;
SELECT DISTINCT json_array_length(rt1.c3) FROM v0, vt0, rt1, rt2, rt0 WHERE (((CAST(0.1800421952794643 AS INTEGER)) NOT NULL)); -- 0ms;
SELECT DISTINCT (((rt1.c1) BETWEEN (rt2.c3) AND (rt2.c4)) IN (CASE rt2.c4  WHEN rt1.c4 THEN v0.c0 ELSE NULL END, NULL)) FROM vt0, rt2, rt0 WHERE ('''I]{+\s');SELECT DISTINCT ((((NOT (rt0.c0))))<=((((rt0.c0) NOT BETWEEN (rt1.c5) AND (NULL))))) FROM rt0, vt0, rt2, v0, rt1 WHERE ((((('')|('869578126'))) IS TRUE)) GROUP BY CAST(((rt2.c0)>=(rt2.c3)) AS INTEGER), CASE WHEN CASE v0.c0  WHEN rt1.c5 THEN rt2.c0 ELSE rt0.c2 END THEN (~ (rt1.c3)) END, CASE ((rt1.c5) IS FALSE)  WHEN (((vt0.c0, rt1.c4, rt2.c3)) NOT BETWEEN ((rt2.c6, rt2.c3, -0.0)) AND ((0.4613870500224513, rt0.c0, rt2.c6))) THEN ((rt0.c3)-(rt1.c0)) END HAVING ((((NOT (NULL))))>((((rt2.c6)AND(rt0.c0))))); -- 0ms;
SELECT DISTINCT rt2.c1 FROM rt1, rt2, vt0, v0; -- 0ms;
SELECT ALL CAST((rt0.c0 IN ()) AS REAL) FROM rt0, v0, vt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c3 IN (v0.c0)))>(COUNT(rt2.c4))), (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL), CAST((rt1.c2 IN ()) AS REAL) FROM rt0 FULL OUTER JOIN v0 ON ((rt2.c1 COLLATE NOCASE) NOT NULL) CROSS JOIN rt1 ON (((rt2.c3)%(rt1.c2)) IN ()) RIGHT OUTER JOIN rt2 ON CAST(((rt1.c3)>=(rt2.c6)) AS NUMERIC);SELECT DISTINCT rt1.c3 FROM rt1 LIMIT 1316882709 OFFSET 337188010; -- 0ms;
SELECT ALL (NOT (((rt2.c1) IS FALSE))), (- (CASE WHEN rt2.c3 THEN rt2.c6 WHEN v0.c0 THEN x'5f5a' WHEN rt2.c6 THEN rt1.c2 ELSE rt1.c1 END)), MAX(CAST(rt0.c3 AS NUMERIC)) FROM rt2;SELECT ALL ((x'') IS TRUE) FROM rt1, vt0 LIMIT -474045 OFFSET 1666315579; -- 0ms;
SELECT (((((vt0.c0))>=((rt0.c2)))) NOT BETWEEN ((rt2.c2 IN ())) AND (rt0.c3 COLLATE BINARY)) FROM rt0 WHERE (CAST(((0.5932217676278281)IS NOT(NULL)) AS TEXT)) GROUP BY '(Pp' HAVING COUNT(*);SELECT ALL ((NULL) NOT BETWEEN (COUNT(*)) AND (CASE x''  WHEN rt1.c2 THEN rt2.c6 END)) FROM rt0, v0, rt2, vt0 WHERE (((((NULL)IS NOT('Ak*h'))) ISNULL));SELECT DISTINCT ((((((((LOWER('j'))OR((((rt1.c0))>=((rt1.c6))))))OR(CAST(rt0.c3 AS INTEGER))))AND(((rt1.c5)-(rt1.c2)))))OR(((rt2.c6) BETWEEN (rt0.c2) AND (rt1.c4)))), ((((((((((rt1.c5) IS TRUE))AND((rt0.c2 IN (rt0.c2)))))OR(CAST(rt0.c1 AS REAL))))OR(GROUP_CONCAT(NULL))))OR(MIN(rt1.c5))), '1173704141' FROM vt0, rt1, v0 WHERE (CASE (((('337188010')AND('0.0')))AND(NULL))  WHEN CAST(x'e0f1' AS NUMERIC) THEN (- ('t0')) WHEN NULLIF(DISTINCT 1690419949, NULL) THEN ((x'') ISNULL) WHEN (((((((('')OR(NULL)))OR(NULL)))AND(0.31598028192097727)))AND('1뻊')) THEN ((0.0832096126445867) ISNULL) END);SELECT -1545438850 FROM rt0, v0, rt2 NOT INDEXED GROUP BY rt1.c3 COLLATE NOCASE HAVING (((rt1.c6)) BETWEEN ((LIKELY(DISTINCT rt2.c1))) AND ((rt2.c1)));SELECT DISTINCT (((x'55f9')+(0.11467503380566679)) IN (0.2615247403245128)) FROM rt2, rt1, vt0, v0 WHERE ((((0X6f0475ac IN ())) NOT BETWEEN ((- (-1.991346448E9))) AND (CAST('' AS REAL)))); -- 0ms;
SELECT ((CASE WHEN rt1.c6 THEN rt2.c0 ELSE rt0.c1 END)>(CAST(NULL AS REAL))) FROM rt2, rt0, rt1, v0, vt0 WHERE (CASE WHEN CASE NULL  WHEN x'64bd' THEN NULL ELSE x'' END THEN CAST(0x662c1fd0 AS REAL) ELSE CAST(2.063853684E9 AS INTEGER) END); -- 1ms;
SELECT IFNULL(DISTINCT CASE WHEN rt1.c3 THEN v0.c0 WHEN NULL THEN rt1.c0 WHEN rt2.c3 THEN rt1.c2 END, ((v0.c0)<(rt1.c3))) FROM v0 WHERE ((0.0024782660724442795 IN ()));SELECT (rt1.c5 IN ()) COLLATE BINARY, 0.6913087874180242 COLLATE NOCASE, ((((rt2.c3) ISNULL)) NOT BETWEEN (CAST(rt2.c5 AS TEXT)) AND ((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt2.c1))))), ((rt2.c3 IN ()) IN (rt1.c2)), rt0.c3 FROM rt0, rt2, vt0, v0;SELECT ALL (((rt2.c0)) BETWEEN ((NULLIF(DISTINCT '-1816212779', rt1.c2))) AND (('-1358559766' COLLATE NOCASE))), (((vt0.c0)) BETWEEN ((rt2.c6)) AND ((COUNT(*)))), (((rt1.c6))<=((NULL))) COLLATE NOCASE FROM vt0;SELECT CASE WHEN CASE rt0.c0  WHEN rt2.c3 THEN v0.c0 END THEN ((((((((rt0.c3)AND(rt2.c6)))AND(rt0.c3)))AND(rt0.c0)))AND(rt2.c4)) ELSE ((((vt0.c0)AND('m.')))OR(0.8902448101598227)) END FROM rt0 WHERE ((((('1386041330' IN ())))!=(((x'' IN ())))));SELECT ((TOTAL(rt2.c4))||(((NULL)OR(rt1.c1)))), CASE rt2.c1  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c2 THEN x'070c9a13' WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c3 WHEN rt2.c2 THEN rt0.c1 ELSE rt2.c6 END COLLATE BINARY, ((((((((CAST(rt1.c0 AS REAL))AND(MAX('7L5R2{'))))OR((NOT (vt0.c0)))))AND(rt2.c2 COLLATE RTRIM)))AND(SUM(rt1.c1))) FROM rt2, vt0 GROUP BY ((((rt2.c5) IS FALSE)) NOT BETWEEN (((rt1.c2) NOT NULL)) AND (((rt2.c5) ISNULL)));SELECT DISTINCT ((UPPER(rt2.c0))=(-1390340378)) FROM rt0, rt2, vt0 GROUP BY (((((rt0.c1)<<(rt2.c5)), CASE rt2.c1  WHEN rt2.c2 THEN rt0.c1 ELSE rt2.c1 END, CASE rt0.c1  WHEN rt2.c2 THEN rt2.c3 WHEN rt1.c4 THEN rt1.c5 WHEN vt0.c0 THEN rt0.c1 ELSE rt1.c3 END))<(((((rt1.c5, x'', rt0.c1))>=((rt1.c3, rt2.c5, rt2.c6))), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))), (NOT (rt0.c3))))) HAVING CAST(((((((((((((rt0.c2)AND('')))OR(v0.c0)))AND('0.13814097760198496')))AND(rt2.c5)))AND(rt1.c3)))OR(rt2.c1)) AS BLOB);SELECT ALL ((((v0.c0)AND(rt2.c6)))-(((((((((rt1.c1)OR(rt2.c4)))OR(rt1.c2)))AND(rt2.c3)))OR(rt2.c3)))), LIKELY(DISTINCT ((((((((rt2.c1)AND(rt2.c2)))AND(rt0.c1)))AND(rt1.c6)))AND(rt1.c4))), CASE CAST(rt0.c2 AS INTEGER)  WHEN ((rt2.c4)>(rt2.c6)) THEN rt0.c0 END FROM rt1, rt2 GROUP BY ((rt2.c2 COLLATE RTRIM) ISNULL) HAVING ((CASE rt2.c6  WHEN rt1.c5 THEN rt1.c2 END)|(LAST_INSERT_ROWID())) ORDER BY 0.2989149088163412  NULLS FIRST LIMIT 1714167760;SELECT DISTINCT ((((rt2.c6 COLLATE BINARY)AND(((NULL) ISNULL))))OR(ABS(DISTINCT rt0.c2))) FROM rt0;SELECT ALL GROUP_CONCAT(((vt0.c0)*(rt2.c5))) OVER (), CAST((NOT (vt0.c0)) AS BLOB), GROUP_CONCAT(((NULL)/(rt1.c4))) OVER ( ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ((rt1.c1 IN ())) AND (((rt1.c2) NOTNULL)))), ((((rt1.c0) IS TRUE))/(rt0.c2 COLLATE RTRIM)), ((((v0.c0) NOT NULL)) IS TRUE) FROM v0 WHERE ((((0.46677927441920775)) NOT BETWEEN (('xT')) AND ((CASE NULL  WHEN 0.9136741044607348 THEN '1015730319' WHEN NULL THEN '' WHEN NULL THEN 0Xffffffffd31244ef ELSE 0.9035207098081333 END))));SELECT DISTINCT LIKELY(LOWER(rt2.c0)), '2051794065', (((rt2.c6)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN vt0.c0 ELSE v0.c0 END)) AND ((((rt1.c0)%(rt2.c5))))) FROM rt0, rt2, vt0, v0 WHERE (((((CAST('1666315579' AS INTEGER))OR(((((0.39078308643100024)AND('823098144')))AND(0X2109f6c7)))))AND((('337188010') IS TRUE))));SELECT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt2.c1)) COLLATE RTRIM FROM vt0, rt0, rt1, v0, rt2; -- 0ms;
SELECT ALL NTH_VALUE((NOT (rt1.c6)) COLLATE BINARY, CAST(((NULL) NOT BETWEEN (x'') AND (rt1.c1)) AS INTEGER)) OVER () FROM vt0, rt2, rt1, rt0 WHERE (((((0.23492368256891638) NOT BETWEEN ('J') AND ('0.6581837240537802'))) NOT NULL)); -- 1ms;
SELECT DISTINCT ',9' FROM rt0, v0, vt0, rt2 ORDER BY NULL  NULLS LAST, (((((rt2.c0)/(rt2.c3)), rt0.c0 COLLATE BINARY, ((rt2.c0)<(rt0.c2)), rt2.c5 COLLATE BINARY, CASE rt1.c0  WHEN rt2.c6 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c5 END))<((json_array(v0.c0, rt0.c3), ((rt2.c1)%(rt1.c2)), ((rt2.c0)GLOB(rt0.c2)), rt0.c0 COLLATE NOCASE, ((x'') IS FALSE))))  NULLS FIRST, (((((rt0.c2) IS TRUE), (((rt2.c3)) BETWEEN ((rt0.c2)) AND ((823098144))), ((rt1.c1) BETWEEN (rt1.c4) AND (NULL))))>((((rt1.c1) NOT NULL), ((rt2.c1) NOT BETWEEN (rt2.c5) AND (rt0.c1)), ((NULL)AND(rt1.c0)))));SELECT ALL ((TOTAL(rt1.c3))GLOB(TRIM(rt1.c2, vt0.c0))) FROM rt0, vt0, rt1, v0, rt2; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS REAL) FROM rt2, vt0, rt0, rt1; -- 0ms;
SELECT CAST(rt2.c1 AS NUMERIC) FROM v0, rt0, rt1 WHERE ((((((((x'')) NOT BETWEEN ((x'')) AND (('-223050951'))))OR(((0.10726088912753784)>>(0xffffffffd31244ef)))))AND(json_array('1947385546', '7368438'))));SELECT ((CAST(rt1.c6 AS REAL))!=((- (rt1.c6)))) FROM rt0, rt2, vt0, rt1, v0 WHERE (NULLIF(CAST('2004418532' AS BLOB), CASE 0.8496652556015888  WHEN x'' THEN 0x6f021e7a END)); -- 0ms;
SELECT DISTINCT CAST(rt1.c2 AS REAL), CAST(((((rt1.c3)AND(rt2.c3)))OR(rt0.c3)) AS NUMERIC), DENSE_RANK() OVER () FROM rt2;SELECT 0.5773759136749017, (((rt0.c3)+('-1779043938')) IN ()), CASE WHEN 0.1607201049541256 THEN ((rt1.c5) NOTNULL) END FROM rt1, vt0 WHERE (((((((((x'' COLLATE BINARY)AND(CASE NULL  WHEN 0.5636927325594521 THEN x'' END)))AND((('1173704141')==(x'1c02')))))OR(((NULL)IS NOT(NULL)))))OR(''))) GROUP BY ((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt2.c1 THEN rt2.c2 WHEN rt1.c2 THEN rt1.c2 END)<<(TOTAL_CHANGES())) ORDER BY rt1.c6 DESC  NULLS LAST, x'' DESC  NULLS FIRST;SELECT DISTINCT CAST(((rt1.c0) IS TRUE) AS TEXT), ((((((((rt0.c0 COLLATE BINARY)OR((rt2.c6 IN ()))))OR(((((((((x'ca9f')OR('55\r\rK')))OR(rt1.c3)))OR(rt1.c4)))OR(rt2.c2)))))AND(((vt0.c0) NOT BETWEEN (rt2.c5) AND (rt2.c5)))))AND(((rt2.c6) BETWEEN (rt1.c5) AND (rt0.c2)))), CASE rt2.c4  WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt2.c6 THEN rt0.c1 END COLLATE BINARY FROM vt0 WHERE (NULLIF(DISTINCT '''V', 'wF') COLLATE NOCASE) ORDER BY ''  NULLS LAST;SELECT (((rt1.c0, rt1.c4, rt1.c2)) BETWEEN ((((rt1.c0) ISNULL), CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c5 WHEN rt2.c6 THEN rt1.c3 END, (((rt0.c1)) NOT BETWEEN ((rt2.c6)) AND ((rt2.c0))))) AND ((((((((((rt2.c4)AND(rt2.c5)))OR(rt0.c0)))AND(rt2.c1)))OR(rt2.c6)), rt1.c5, rt1.c0 COLLATE NOCASE))), ((rt2.c5 COLLATE NOCASE) IS TRUE), -9223372036854775808 FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN ((((v0.c0)AND(v0.c0)))OR(rt2.c6)) THEN (rt0.c1 IN ()) ELSE ((((rt1.c4)OR(vt0.c0)))OR(v0.c0)) END WHERE (CASE ((((((((((((NULL)AND(NULL)))AND(0.1875113676264898)))AND(0.4612687894156585)))AND(1.86240985E9)))AND(1.173704141E9)))OR(' t[寡'))  WHEN rtreenode('0.46677927441920775', 0x7f368964) THEN 0x3f1337ce ELSE CASE x''  WHEN 0X3bb81026 THEN '' ELSE 0x7688278 END END);SELECT ALL '944709223', (rt0.c1 IN ()), CAST(((rt1.c1)&(rt0.c0)) AS BLOB), NULLIF(DISTINCT (- (rt2.c6)), CAST(rt0.c0 AS BLOB)), 0xffffffffa3701382 FROM vt0, rt0, rt1 WHERE ((((0.2541176156876179)<=(x'')) IN ()));SELECT COUNT(*) OVER (), UPPER('NSs᡺?fQ+'), ((((((rt2.c6)AND(rt2.c1)))AND(rt0.c0))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (rt1.c0 COLLATE BINARY)), 0xffffffff93dbd6f0, ((CASE WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c3 END) IS TRUE) FROM rt2, vt0 WHERE ((- (TRIM(DISTINCT ''))));SELECT ((((((rt1.c2)OR(vt0.c0)))OR(rt1.c2)))>>(((v0.c0) NOT BETWEEN (rt2.c0) AND (v0.c0)))) FROM rt2, rt0, rt1, vt0, v0; -- 0ms;
SELECT ALL (NOT ((((rt1.c0))>((rt2.c3))))) FROM rt0;SELECT ALL CAST((NOT (rt0.c2)) AS BLOB), NULL, CASE WHEN rt2.c0 THEN rt2.c0 WHEN rt2.c4 THEN rt0.c3 WHEN v0.c0 THEN vt0.c0 END COLLATE NOCASE FROM rt1;SELECT ALL AVG((((rt2.c3)) NOT BETWEEN ((rt2.c5)) AND ((v0.c0)))) OVER () FROM vt0, v0 WHERE ((NULL IN ()) COLLATE BINARY);SELECT AVG(rt2.c5) OVER () FROM rt1, v0, rt0, rt2, vt0; -- 0ms;
SELECT ALL (((~ (v0.c0)))<=((rt1.c0 IN ()))), GROUP_CONCAT((((rt1.c2, 'Ikw', rt0.c3))!=((rt0.c1, rt0.c0, rt2.c1)))) OVER (), ((((((((((((-1.836985744E9)OR(rt2.c2)))OR(rt2.c5)))AND(CASE rt2.c4  WHEN rt2.c1 THEN vt0.c0 END)))AND(((rt1.c4) BETWEEN (v0.c0) AND (rt1.c4)))))AND((+ (rt0.c2)))))AND(x'')) FROM vt0, rt0, rt2, v0, rt1 WHERE (((('V'))<=((('32596831' IN (-1500067230)))))) ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)), (((rt2.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c6))), 'Sp}kH', highlight(rt1.c4, rt0.c1, rt2.c1, rt1.c2), ((0.5222721433141905)/(rt1.c3))))<>((((rt0.c3) NOT NULL), (~ (-1.814309136E9)), rt1.c3 COLLATE NOCASE, rt1.c4 COLLATE RTRIM, rt2.c2 COLLATE RTRIM)))  NULLS LAST; -- 0ms;
SELECT ALL ((((((((((rt1.c3) NOTNULL))OR(((v0.c0)GLOB(rt1.c4)))))OR((~ (rt0.c3)))))AND(((((rt1.c2)OR(NULL)))OR(rt1.c4)))))AND('310453052')), ((rt2.c2 COLLATE RTRIM) BETWEEN (TOTAL(x'')) AND ((rt2.c2 IN ('pXWj7', rt1.c1)))), x'3e2df400' FROM v0 WHERE ((((x'31bade0d' IN ('1361176359'))) NOT BETWEEN ((~ (2014305109))) AND (((x'')>(NULL)))));SELECT DISTINCT CASE WHEN CASE WHEN rt2.c0 THEN rt1.c5 END THEN ((rt2.c5)&(rt2.c1)) END FROM v0, rt2, rt1, rt0; -- 0ms;
SELECT TOTAL('V0^A1') OVER () FROM rt0, rt1, rt2, vt0 WHERE (CASE (((('')AND(NULL)))OR(0X3729ccac))  WHEN '' THEN (~ (NULL)) WHEN ((NULL)=(x'dd2cb645')) THEN DATE(NULL, 'Bb꥖UE HP%', 6.01169343E8, '', NULL) WHEN (x'ef7b' IN ()) THEN CAST(NULL AS INTEGER) ELSE (~ (0Xffffffffff7cb4d0)) END); -- 0ms;
SELECT ((((((((rt2.c1)OR(CAST(rt1.c1 AS NUMERIC))))AND((rt2.c1 IN ()))))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt1.c6)))AND(rt2.c2)))AND(rt0.c1)))))OR(((rt2.c0)<=(rt2.c5)))) FROM rt0, vt0, rt1, rt2, v0 GROUP BY LAST_INSERT_ROWID(); -- 0ms;
SELECT DISTINCT rt1.c0 FROM vt0 WHERE (x'') GROUP BY NULL, (((rt1.c6 IN ())) IS TRUE), rt1.c5 ORDER BY rt0.c1  NULLS LAST, CASE WHEN ((v0.c0)<(rt1.c1)) THEN ((((rt2.c0)AND(rt2.c4)))AND(0X623b1120)) WHEN CAST('-1150115657' AS REAL) THEN CAST('-1786117454' AS INTEGER) WHEN ((rt2.c5)>(rt2.c3)) THEN (((rt2.c3)) BETWEEN ((rt0.c3)) AND ((rt2.c0))) WHEN rt2.c1 THEN ((rt0.c1)+(rt1.c5)) WHEN (((rt1.c2))>=((rt2.c6))) THEN rt1.c4 END ASC  NULLS LAST, ((((((rt2.c6) IS TRUE))OR(((v0.c0) IS TRUE))))OR(CASE rt0.c2  WHEN rt2.c0 THEN v0.c0 END));SELECT ALL ((((0.16169104841854387)AND((rt1.c3 IN (rt2.c2, '1263323513')))))OR(x'')) FROM rt1, rt0, rt2, vt0, v0 WHERE (x''); -- 0ms;
SELECT DISTINCT '-844344074' FROM v0, rt0, rt2, rt1, vt0 WHERE ((((1)) NOT BETWEEN (((((0.37585745029523787)) BETWEEN ((0.9400973178443415)) AND ((NULL))))) AND ((CAST(x'' AS REAL))))) LIMIT -975947352 OFFSET -646605711; -- 0ms;
SELECT ALL ((rt0.c2)==(rt2.c3)) COLLATE BINARY FROM vt0 WHERE ((((x'' IN ())) BETWEEN ((- (0.9033173782952229))) AND ('|')));SELECT (AVG(rt0.c3) IN ()) FROM v0 WHERE (highlight(LAST_INSERT_ROWID(), (('*|JSCb') BETWEEN (x'') AND ('{}EC\sxE')), CAST(NULL AS TEXT), (('')!=('0.8496652556015888'))));SELECT ALL (((((rt2.c3, x'e9d4', rt2.c5)) BETWEEN ((rt0.c3, rt2.c0, vt0.c0)) AND ((rt2.c6, rt1.c4, rt0.c0))))>(rt1.c0 COLLATE NOCASE)) FROM v0, vt0, rt1, rt0 GROUP BY ((((((rt0.c0)OR(x'')))AND(rt2.c5))) NOT NULL);SELECT DISTINCT CASE rt2.c6 COLLATE NOCASE  WHEN '-396382908' THEN (~ (rt2.c2)) END FROM v0, rt1, rt2, vt0 WHERE (TYPEOF(DISTINCT '397288835' COLLATE RTRIM)); -- 0ms;
SELECT ALL CASE (((rt2.c0))>=((rt2.c0)))  WHEN ((rt2.c5)GLOB(rt2.c0)) THEN NULL COLLATE RTRIM END, ((((CASE rt2.c2  WHEN rt1.c3 THEN rt1.c4 ELSE rt2.c3 END)OR(((rt0.c3) IS TRUE))))AND('1970380001')), ((rt0.c1) BETWEEN (rt2.c1) AND (rt1.c5)) COLLATE NOCASE FROM v0, vt0 WHERE (CAST(((x'205d') NOT BETWEEN (0.6718272274168681) AND (0.22490459610805558)) AS BLOB));SELECT ALL (v0.c0 IN (((rt2.c3) BETWEEN (rt1.c4) AND (rt0.c2)), '-621134469')), ((rt0.c0)>(rt0.c1)) COLLATE BINARY, MAX((((0.8101882661658105))==((rt1.c1)))) FROM rt2, vt0 WHERE (((((((((((2092930621) NOT BETWEEN (x'') AND (NULL)))AND(((-1814309136)==(0Xffffffffbccaf2d9)))))AND('^r(kl>#')))OR(CASE NULL  WHEN 7.21707977E8 THEN 0x1106de6b ELSE 0.8275458682837061 END)))OR(CASE WHEN '-1862520331' THEN NULL END)));SELECT DISTINCT ((((vt0.c0)-(vt0.c0))) NOTNULL) FROM rt2, v0 WHERE (((((((((((NULL) BETWEEN ('-1816212779') AND ('39082323')))AND((((NULL))<>(('b|bY'))))))AND(UPPER(DISTINCT '0.11467503380566679'))))AND(((NULL) IS TRUE))))OR(((NULL)LIKE(NULL)))));SELECT ALL HEX(((rt2.c2) NOT NULL)) FROM v0, rt0, vt0 WHERE (HEX(((x'') IS TRUE)));SELECT ((((((((((((((((vt0.c0)OR(rt1.c5)))AND('0.14931594778013135')))OR(rt2.c0)))AND(v0.c0)))AND(rt0.c3)))AND(rt1.c2)))AND((rt1.c2 IN ()))))AND(MAX(rt2.c0))) FROM rt0 WHERE ((CAST('-8604464' AS BLOB) IN ())); -- 0ms;
SELECT (NOT (NULL)), ((((+ (rt0.c3))))<=((vt0.c0))), 0.27117612489715537 FROM rt0, rt2 WHERE ((((((NULL)IS NOT('-1725794410'))))==((('jL9\r' IN ())))));SELECT DISTINCT MAX((v0.c0 IN (x''))), ((CAST(rt1.c2 AS INTEGER))!=(rt1.c4)), COUNT(CASE WHEN rt1.c3 THEN rt1.c3 END) FILTER(WHERE (('-1134246116' COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)OR('譻TD')))AND(rt1.c5)))OR(rt2.c2)))AND(rt2.c3))) AND (((rt1.c3)|(rt2.c2))))) OVER () FROM rt0 ORDER BY ((NULL IN (rt2.c0)) IN (v0.c0 COLLATE NOCASE, ((rt1.c6)<=(rt2.c1)))) ASC  NULLS LAST;SELECT ALL ((rt1.c2)%(v0.c0)) COLLATE RTRIM FROM rt0, rt2, v0, vt0 WHERE (0.30252071292294835) GROUP BY x'', (((rt1.c3)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND ((rt1.c1 COLLATE NOCASE))), ((rt0.c3)!=(((rt1.c5) BETWEEN (rt0.c1) AND (rt0.c1))));SELECT MIN(((rt2.c5)GLOB(rt2.c3))), CASE ((rt2.c6)>(NULL))  WHEN ((((rt0.c3)AND(rt0.c2)))AND(rt1.c5)) THEN CAST(rt2.c4 AS REAL) WHEN (((rt1.c4))<>((rt2.c2))) THEN ((rt2.c5)OR(rt2.c1)) WHEN ((((rt2.c5)AND(rt2.c4)))OR('-760794721')) THEN NULL END, rt2.c2 FROM rt0;SELECT DISTINCT (((- ('-884076514')))LIKE(x'9e66')) FROM v0, rt2; -- 0ms;
SELECT DISTINCT ((NOT (rt2.c3)) IN ()), COUNT(CAST(rt2.c2 AS NUMERIC)), ((((((((rt0.c2)OR(rt1.c6)))OR(rt0.c3)))AND(rt2.c1 COLLATE RTRIM)))OR(((rt0.c1) NOT BETWEEN (rt2.c0) AND (rt0.c1)))) FROM vt0 WHERE (((NULL) BETWEEN (x'0db76039') AND (CASE 0.5293638344030089  WHEN x'' THEN x'' ELSE 0.008574075159740513 END))) ORDER BY (CASE rt2.c2  WHEN v0.c0 THEN vt0.c0 ELSE rt2.c6 END IN (((rt2.c5) ISNULL)))  NULLS LAST;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt1.c6)<(rt1.c6)) WHEN ((rt2.c5)-(NULL)) THEN CAST(rt2.c3 AS TEXT) WHEN ((rt2.c0) NOTNULL) THEN (NOT (vt0.c0)) ELSE ((((rt2.c4)AND(rt1.c6)))AND(rt0.c2)) END) FROM v0, rt0, rt1, rt2, vt0 ORDER BY ((((rt2.c6)AND(CASE WHEN rt1.c0 THEN rt0.c1 END)))OR(SQLITE_VERSION())); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt2.c4)) AS INTEGER) FROM v0, rt0, rt2, rt1, vt0 GROUP BY CAST(STRFTIME(rt1.c1, rt2.c3, rt1.c2) AS NUMERIC), (((((vt0.c0)AND(rt1.c0)), ((rt2.c4) NOT BETWEEN (rt2.c6) AND (rt1.c4)), CASE WHEN 'Od' THEN rt2.c3 END))>(((((rt0.c3, rt2.c3, rt1.c2)) BETWEEN ((rt0.c3, rt2.c6, rt1.c1)) AND ((v0.c0, rt2.c4, rt0.c0))), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt2.c6))), HEX(DISTINCT rt1.c2)))), ((((v0.c0)AND((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c1))))))AND(CAST(rt0.c3 AS NUMERIC))) LIMIT 355760080; -- 0ms;
SELECT ((((v0.c0) BETWEEN (rt2.c3) AND (rt0.c2))) IS TRUE), CAST(rt1.c4 AS BLOB), ((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (rt2.c4) AND ((+ (rt1.c4)))) FROM rt2;SELECT ALL ((CASE rt2.c6  WHEN rt2.c6 THEN v0.c0 ELSE rt1.c5 END) IS FALSE) FROM vt0, rt0;SELECT DISTINCT COUNT(((rt0.c1)*(rt0.c0))) OVER ( ORDER BY ((rt2.c4) NOT BETWEEN (rt1.c6) AND (rt1.c5)) COLLATE NOCASE COLLATE RTRIM ASC), ((((rt2.c4)+(NULL)))GLOB(MAX(vt0.c0))), (CASE rt0.c3  WHEN v0.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 END IN ()) FROM rt1, v0, rt2 WHERE (((((((NULL)<>(x'')))AND((('') NOTNULL))))OR((((0.5222721433141905)) NOT BETWEEN (('-493846915')) AND (('-1958031016'))))));SELECT DISTINCT (+ (x'')) FROM v0, vt0, rt1, rt0; -- 0ms;
SELECT ALL ((CAST(rt2.c3 AS TEXT))LIKE(((rt1.c6)+(rt1.c1)))) FROM rt2, rt0;SELECT DISTINCT CASE WHEN ((0X18b62834)OR(rt0.c0)) THEN (~ ('')) ELSE rt2.c6 END FROM rt0, rt2, vt0; -- 0ms;
SELECT ALL ((((rt2.c2) IS TRUE))|((NULL IN ()))) FROM vt0, v0 ORDER BY CAST(CAST(x'' AS BLOB) AS INTEGER)  NULLS LAST, CAST((+ (rt2.c4)) AS REAL);SELECT NULL FROM rt1, v0, vt0, rt2, rt0 WHERE ((((NULL, x'', '')) BETWEEN (((- (0.12650046677795657)), (('-1205299893')<(-1.836985744E9)), ((0xffffffffac872ba0)/(x'')))) AND ((HEX(x'b16f'), CAST(0.5932217676278281 AS BLOB), ((('1209950717')) BETWEEN ((1970380001)) AND ((NULL))))))); -- 0ms;
SELECT ALL COUNT(rt2.c2) FROM rt1, rt2, vt0, rt0 WHERE (ABS((x'' IN ()))) ORDER BY ((((rt1.c1)OR(rt2.c6))) NOT BETWEEN ((rt0.c2 IN ())) AND (json_object(rt2.c3, rt2.c2))), rt0.c1 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((('-144720819'))>=((rt0.c1))) COLLATE NOCASE FROM rt0, rt1, vt0, rt2; -- 0ms;
SELECT ALL (+ (rt2.c2)) COLLATE RTRIM FROM vt0, rt2, rt0, rt1, v0 WHERE (CASE SQLITE_SOURCE_ID()  WHEN (('F')<<('au')) THEN SQLITE_VERSION() WHEN ('-1005883929' IN ()) THEN TOTAL_CHANGES() WHEN ((-1.449335735E9)==(NULL)) THEN NULL ELSE (('ë嫺Z歜vRN8')==(x'')) END) LIMIT 759822653; -- 0ms;
SELECT ((SUM(v0.c0))<>(vt0.c0)) FROM rt2, v0;SELECT DISTINCT (((((rt2.c2)) NOT BETWEEN ((v0.c0)) AND ((rt1.c0)))) BETWEEN (((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt1.c4))) AND (CAST(rt0.c1 AS NUMERIC))) FROM vt0, rt2, v0 WHERE (((((('-472549675' IN (x'')))AND((('-1725794410')<('')))))OR(CAST(x'' AS INTEGER))));SELECT DISTINCT SUM(((rt2.c5)IS(rt1.c1))) OVER () FROM vt0 WHERE (((CAST('-474045' AS TEXT)) NOT BETWEEN (2.051794065E9 COLLATE BINARY) AND ((((0.14827370788561167)) NOT BETWEEN (('T')) AND ((0x64222d9d)))))) LIMIT 428373098 OFFSET 1257633337;SELECT ((((((((rt1.c6)AND((~ (rt1.c3)))))AND(rt1.c5 COLLATE RTRIM)))AND(CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c6 THEN rt2.c3 WHEN rt0.c0 THEN NULL ELSE rt0.c1 END)))AND(COUNT(*))) FROM v0, rt1, rt0, rt2, vt0; -- 0ms;
SELECT ALL ((CASE rt2.c4  WHEN rt2.c2 THEN rt0.c2 END)>(((rt2.c1)==(rt0.c1)))), ((((0.21281567600324602) BETWEEN (rt1.c2) AND (rt0.c1)))>=(CAST(rt1.c1 AS REAL))), GROUP_CONCAT(((((((((rt1.c2)OR(rt2.c5)))OR(v0.c0)))AND(0X7ab60bc2)))AND(rt1.c1))) OVER ( GROUPS (((((((rt1.c6))>((rt1.c3))))OR(((rt2.c2) NOT BETWEEN (rt0.c3) AND (rt1.c0)))))OR(((((rt1.c6)OR(rt0.c3)))AND(rt2.c5)))) PRECEDING) FROM rt0 WHERE (0.06032291691559444);SELECT DISTINCT SUM(CAST(rt2.c0 AS REAL)) OVER ( GROUPS  CURRENT ROW) FROM rt0, vt0, rt1, v0 WHERE (CAST((('J_Y#F')|(x'')) AS TEXT));SELECT ALL rt2.c0, CASE WHEN rt2.c4 COLLATE NOCASE THEN (+ (rt2.c3)) ELSE ((((rt1.c3)AND(rt1.c0)))AND(rt0.c0)) END, TOTAL(((rt1.c0) ISNULL)) OVER () FROM v0, rt0, rt1, vt0, rt2 WHERE (LIKELIHOOD('-1893346233', 0.5852246759104224) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT rt1.c3 COLLATE NOCASE), ((0.14576941293862)>(((((0xffffffff8be28010)AND(rt2.c3)))OR(x'77cc')))), ((((((rt0.c0))<((rt1.c5)))))>((((rt1.c4) ISNULL)))) FROM rt2, v0, rt0, rt1; -- 0ms;
SELECT ALL ((((rt1.c3)!=(rt0.c1)))IS(CASE WHEN rt2.c2 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c3)%(rt2.c2))) FROM v0 WHERE ((- (((((0.9693593623752128)AND(NULL)))AND(x'8fe2'))))) LIMIT 2043339068 OFFSET -1192021025;SELECT DISTINCT ((((rt0.c3) NOTNULL))>(((NULL) BETWEEN (rt2.c1) AND (rt0.c1)))), '306363519', AVG(ABS(rt2.c0)) OVER () FROM rt1;SELECT DISTINCT (- (rt2.c2 COLLATE NOCASE)), ((((vt0.c0 COLLATE RTRIM)OR(((rt1.c5)<<(rt0.c3)))))AND(((rt1.c6)||(rt2.c2)))), ((((~ (rt0.c2))))<((((rt2.c6) NOT BETWEEN (rt1.c4) AND (rt0.c1))))) FROM v0, rt1, rt2, vt0;SELECT DISTINCT (x'2fe0' IN ()) FROM vt0, v0, rt2, rt1 WHERE ((((((x'') NOT BETWEEN ('285662827') AND ('554301127')), ((0.6718272274168681) NOTNULL), ((((793434695)AND(-1836985744)))AND(x''))))<((((x'')<=(0.2984414251345163)), CAST(0X766373b0 AS INTEGER), (('-1875223817')%(0.4493302714849189)))))); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(rt1.c3, 0.19286641339498134))GLOB(CAST(rt1.c1 AS TEXT))), ((rt2.c4 COLLATE NOCASE)GLOB((('-744341489')/(rt1.c3)))), (((((rt0.c0))>((v0.c0))))LIKE(CAST('|盰)' AS TEXT))) FROM vt0, rt2, rt0, v0 WHERE ((~ (CAST(x'' AS NUMERIC))));SELECT DISTINCT ((((((rt2.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c1))), ((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt2.c2)), rt2.c1))<=(((v0.c0 IN (v0.c0)), ((rt1.c4)>(rt0.c0)), CASE WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END))) FROM rt2, v0 LIMIT -681368850 OFFSET 866237152;SELECT ALL SUBSTR(((rt2.c1) NOT BETWEEN (rt0.c1) AND (rt2.c2)), NULL), LAG((((((rt2.c3)LIKE(rt1.c3)), (((rt2.c6))<=((rt2.c6))), (rt1.c5 IN (rt2.c0))))!=((rt2.c1 COLLATE NOCASE, HEX(rt2.c6), (~ (rt1.c0))))), ((rt0.c1)>=(rt1.c2)) COLLATE NOCASE, rt0.c2) OVER (), (((rt0.c3 IN ())) NOT BETWEEN (((rt1.c3)<=(rt1.c3))) AND (((rt0.c2)=(rt1.c6)))), FIRST_VALUE(CAST(((rt1.c1)==(rt2.c4)) AS TEXT)) OVER ( GROUPS  CURRENT ROW), AVG(((rt1.c1)<>(rt0.c1))), ((((rt1.c0)GLOB(rt1.c3)))<=((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt1.c4))))), (((NOT (rt2.c0)))LIKE(NULLIF(DISTINCT rt0.c0, rt2.c0))) FROM rt2, rt1, vt0, rt0 WHERE (CASE WHEN (('491336392')%(NULL)) THEN (~ (NULL)) ELSE ((x'1680') BETWEEN (NULL) AND (895553341)) END); -- 0ms;
SELECT DISTINCT CASE rt1.c5  WHEN CAST(rt2.c2 AS REAL) THEN ((rt0.c2) ISNULL) WHEN (~ (rt1.c5)) THEN (- (rt2.c5)) WHEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((((rt2.c4)OR(rt1.c6)))OR(rt1.c6)) END, COUNT(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c5 THEN rt1.c1 WHEN rt2.c0 THEN rt1.c3 ELSE rt2.c6 END), (+ (MIN(rt1.c0))), CAST((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) AS NUMERIC), (((((((('1342040501')AND(x'')))AND(((((((((((((vt0.c0)AND(rt2.c2)))OR(rt2.c1)))OR(rt1.c1)))AND(v0.c0)))OR(rt0.c0)))OR(rt2.c2)))))AND(x'5c5c')))AND(((rt2.c3)*(rt0.c0)))) FROM vt0, rt2, rt0, rt1 WHERE ((((0.670358789487245) IS TRUE) IN ()));SELECT NULLIF(((vt0.c0) ISNULL), (rt2.c6 IN ())), CAST(((rt1.c0) IS TRUE) AS BLOB), CHAR(CASE WHEN rt2.c6 THEN rt2.c5 ELSE rt1.c0 END) FROM rt1, rt2;SELECT DISTINCT ((((((((rt2.c5 COLLATE BINARY)AND(rt1.c4)))AND(MAX(rt2.c0))))OR((~ (rt1.c6)))))AND(GROUP_CONCAT(rt1.c4))), rt0.c3, (NOT (COUNT(rt2.c5))) FROM rt0, rt1, vt0, rt2, v0; -- 0ms;
SELECT ALL json_extract(CASE WHEN vt0.c0 THEN rt2.c1 WHEN rt1.c6 THEN rt0.c0 WHEN rt2.c4 THEN rt1.c6 END, -1242795732) FROM rt1, rt2, v0, vt0 WHERE (((SQLITE_VERSION()) NOT BETWEEN ((('콆eꂷD!2㩲') NOT BETWEEN (0.5418607928250871) AND ('-299733800'))) AND (CASE WHEN NULL THEN '8M' WHEN 0.28483719660870244 THEN '823098144' WHEN '-1781813763' THEN x'9a22' END))) ORDER BY LIKELY(CASE WHEN rt2.c0 THEN rt1.c2 END) DESC, (NOT (((vt0.c0) IS FALSE))) ASC  NULLS LAST;SELECT DISTINCT (((NOT (rt1.c5))) IS FALSE), ((((rt2.c3) IS TRUE))+(CAST(rt2.c4 AS INTEGER))), (((+ (rt2.c0))) NOT BETWEEN (CAST(rt1.c6 AS BLOB)) AND (TRIM(rt2.c1))) FROM rt0, v0, rt2, rt1 GROUP BY (((((rt1.c1))>((v0.c0))))+(-1.127550247E9 COLLATE BINARY)) HAVING rt1.c3; -- 0ms;
SELECT rt1.c4 FROM rt2, vt0 WHERE (CAST((('925486252') BETWEEN ('-1991346448') AND ('171104477')) AS REAL));SELECT ((CAST(rt2.c1 AS BLOB)) NOT NULL), load_extension('-2017823288'), LAST_VALUE((NOT (((((rt2.c6)AND(rt1.c2)))AND(rt2.c5))))) OVER (), (~ (((rt2.c6) NOT BETWEEN (rt2.c4) AND (rt2.c1)))), ((((((rt1.c1)OR(rt1.c5)))AND(rt1.c5))) NOT NULL) FROM v0, vt0, rt1, rt2; -- 0ms;
SELECT ALL (((rt0.c3 IN ())) NOTNULL), DENSE_RANK() OVER (), ((COUNT(rt2.c5))>(((((rt2.c3)AND(rt0.c3)))AND(rt2.c1)))) FROM rt0 WHERE ((0xffffffffaf0605ea IN ()) COLLATE BINARY);SELECT (- (((rt1.c5)>=(rt2.c5)))) FROM rt1, rt0, rt2, v0, vt0 WHERE (((((x'c6ef')<=(0.04323187606308809)))<=(((((((((((((NULL)OR(0x75719ce1)))AND(x'')))OR(0.6397397681012565)))OR(823098144)))OR('Sf&e\n6')))OR(x''))))) GROUP BY DATETIME(0.5295076438699624, ((vt0.c0)AND(rt1.c1)), (rt0.c0 IN (rt1.c3)), ((rt0.c3) NOTNULL), ((rt0.c1)/(rt2.c4))) HAVING ((rt2.c3) NOT NULL); -- 0ms;
SELECT DISTINCT (AVG(vt0.c0) IN ()) FROM v0 ORDER BY x'5842' ASC  NULLS FIRST LIMIT 1550476054 OFFSET 869578126; -- 1ms;
SELECT ALL 'In' FROM vt0, v0, rt0, rt1, rt2; -- 0ms;
SELECT ((rt2.c4 COLLATE NOCASE) IS TRUE), ((rt0.c2) IS TRUE) COLLATE RTRIM, COUNT(*) FROM rt1, vt0 WHERE (CASE (+ (0.9748966677437181))  WHEN ((x'') IS TRUE) THEN '' COLLATE NOCASE WHEN (((((((('246068321')OR('hc!')))AND('0.9748966677437181')))OR(-2133828639)))OR(0x1157c056)) THEN ((x'') NOT NULL) WHEN NULL THEN ((((x'')AND('-1725794410')))OR(0Xffffffffcc420695)) END);SELECT DISTINCT ((((((((rt1.c4)OR(rt2.c3)))AND(rt2.c0)))AND((rt1.c4 IN (rt0.c1, rt0.c2)))))AND(x'')) FROM vt0 WHERE (((0.28483719660870244) ISNULL) COLLATE NOCASE) LIMIT -302710735 OFFSET 243635477;SELECT DISTINCT '0.39078308643100024' FROM rt0, vt0, v0, rt1, rt2; -- 0ms;
SELECT LIKELIHOOD(UNLIKELY(DISTINCT rt2.c6), 0.4375710950280045), ((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt0.c3)))|((+ (rt2.c3)))), SUM((rt0.c2 IN ())) FROM vt0, v0;SELECT ((('411165095') ISNULL) IN ((+ (rt2.c3)))) FROM rt0, rt2, v0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3, rt1.c5, '')) BETWEEN ((CAST(rt2.c1 AS NUMERIC), CASE vt0.c0  WHEN rt2.c5 THEN rt1.c4 END, COUNT(x''))) AND ((CASE rt1.c5  WHEN rt1.c3 THEN vt0.c0 WHEN rt0.c0 THEN rt2.c2 WHEN rt2.c1 THEN rt1.c4 WHEN rt2.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c3 END, vt0.c0 COLLATE RTRIM, rt2.c4 COLLATE BINARY))) FROM v0, rt0, rt2, rt1, vt0 WHERE ((((((NULL, '-1836985744', '')) BETWEEN ((NULL, '-1991346448', 0.6925307245578947)) AND (('>]X', x'', NULL)))) IS TRUE)); -- 0ms;
SELECT ALL (- (SUM(rt0.c2))), (((SUM(rt2.c4)))>(((- (rt1.c1))))), (NOT (TRIM(rt0.c1))) FROM rt0, vt0, rt2, rt1; -- 0ms;
SELECT COUNT(*) OVER (), SUM(((rt2.c4) NOT BETWEEN (rt1.c4) AND (rt0.c1))), (- (TYPEOF(DISTINCT x''))), (~ (((rt2.c5)<=(rt1.c1)))), (((((((((v0.c0 IN ()))OR(rt1.c1)))AND((((rt1.c0))>=((NULL))))))OR((rt2.c0 IN (rt2.c5)))))AND(((v0.c0) IS TRUE))) FROM v0, vt0 WHERE ((~ (((x'') NOT NULL))));SELECT v0.c0, CASE WHEN ((rt0.c1) BETWEEN (rt2.c2) AND (rt1.c5)) THEN CAST(rt2.c3 AS INTEGER) END, rt1.c3 FROM rt0, v0, vt0, rt1 WHERE (((((NULL)<<(0x16def8a1))) ISNULL));SELECT ALL ((TOTAL(rt0.c1))<((~ (rt1.c4)))), ((HEX(rt2.c2))>=((- (rt2.c1)))), CASE json_quote(rt1.c0)  WHEN LIKELIHOOD(NULL, 0.6190190898073992) THEN rt1.c4 COLLATE BINARY ELSE rt0.c3 COLLATE RTRIM END FROM rt1, rt0, rt2, v0, vt0 WHERE (((NULL COLLATE NOCASE)+(CAST(0.6041245641627803 AS BLOB)))); -- 0ms;
SELECT DISTINCT ((TRIM(rt2.c3)) NOTNULL), (((rt2.c3))>=((((rt2.c1) NOT BETWEEN (rt2.c6) AND (rt2.c1))))), TOTAL((((rt2.c6))<=((rt2.c5)))), (~ (0.6397397681012565)), CUME_DIST() OVER () FROM rt0;SELECT ALL ((TRIM(rt1.c3, rt2.c6))<(((rt1.c1) NOT NULL))) FROM rt2, v0, vt0 WHERE ((NOT ((('124289656')||(0.02283251886987203)))));SELECT DISTINCT rt2.c2 FROM rt1, rt2 GROUP BY (((0.903698062694533))>=((((rt1.c4)LIKE(rt2.c2))))), ((+ (rt0.c2)) IN (rt1.c1, LIKELIHOOD(rt0.c0, 0.29979651851603784), (((rt1.c6))>((rt2.c2))))), ((((((((((vt0.c0)AND(rt1.c2)))AND(rt1.c5)))OR(rt2.c0)))AND(rt1.c2)))+(json_patch(rt1.c5, 'ଡ[5㈟\3')));SELECT DISTINCT ((CASE WHEN rt2.c6 THEN rt2.c4 ELSE rt1.c0 END) BETWEEN (((vt0.c0)&(rt0.c3))) AND (((rt2.c6)<=(rt1.c0)))) FROM rt1, rt0, v0, rt2;SELECT DISTINCT ((LIKELY(rt2.c0)) NOT NULL) FROM v0;SELECT (((rt0.c1)>(rt1.c5)) IN (((vt0.c0) BETWEEN (rt1.c4) AND (rt1.c1)))) FROM v0, rt1, vt0, rt0, rt2 WHERE (((((x'cda7')) NOT BETWEEN ((x'0260')) AND ((NULL))) IN ())) GROUP BY ((rt2.c4)IS((rt0.c1 IN (rt1.c5, rt1.c4)))) HAVING ((((rt1.c5) BETWEEN (vt0.c0) AND (rt1.c1)))IS NOT((+ (v0.c0)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((json_valid(rt2.c1))) AND (((((rt1.c3))=((rt2.c3)))))) FROM rt1 WHERE ((~ (CASE NULL  WHEN x'' THEN NULL END)));SELECT DISTINCT ((((CAST(rt2.c0 AS INTEGER))AND((+ (x'')))))AND(CASE WHEN rt1.c4 THEN rt1.c0 ELSE rt2.c3 END)) FROM rt1, rt2, rt0 WHERE (((((((((CASE '5㟎[a'  WHEN 0.4784235312030767 THEN x'' END)AND(((')&⇷50x%,A')-(x'883c')))))OR((((0.05435312334435005))=((x'698c'))))))OR(SQLITE_COMPILEOPTION_USED(NULL))))AND(((((0x4ffde9b5)AND('TRUE')))AND(x''))))); -- 1ms;
SELECT '', (((((rt0.c2)) BETWEEN ((rt2.c1)) AND ((rt2.c1)))) NOTNULL), 0Xfffffffff53e0c9f FROM v0, rt0 WHERE (((((CAST(0X298b9b03 AS NUMERIC))AND(((((((((0.2165096824385847)OR(295243033)))AND('1549552954')))OR(x'')))OR(x'')))))AND(((NULL)<<(x'')))));SELECT DISTINCT (CAST(vt0.c0 AS TEXT) IN ()) FROM v0 WHERE (((((0.15703434126278326)==(0.9834882815451358))) BETWEEN ((NOT ('-1894857174'))) AND ((~ (''))))); -- 0ms;
SELECT ((rt1.c6) NOT NULL) COLLATE BINARY FROM rt1 WHERE ((((((NULL) NOTNULL), COALESCE('-1e500', NULL), -1786117454))<=((((0X6f021e7a) ISNULL), (((('')OR(x'')))OR(698472218)), CASE WHEN x'64d9b42a' THEN '''!ezobmonthsuH0' END)))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)>>('5460337545506496092 1009T1731-4557067398023529944--7132686346594926061T951 ')))AND(((rt2.c2) ISNULL))))OR(((rt2.c5) NOT BETWEEN (rt1.c3) AND (rt1.c6)))))AND(((rt2.c4)%(vt0.c0)))))AND(rtreenode(rt0.c0, rt2.c5))) FROM rt0, v0, rt1, vt0 NOT INDEXED, rt2 WHERE (((CASE x'6bc56afc'  WHEN x'' THEN '895553341' END) BETWEEN (((8.60018398E8)&(0.30678686490822804))) AND (((x'') IS FALSE)))) LIMIT 1952307734; -- 1ms;
SELECT ALL STRFTIME(((rt1.c5)<(rt0.c2)), ((rt2.c1) BETWEEN (rt0.c1) AND (rt2.c6)), rt2.c0), CASE WHEN 0.9868419622302826 THEN (((rt2.c6))>=((rt2.c6))) END, CAST(COUNT(vt0.c0) AS INTEGER) FROM rt0, rt1;SELECT DISTINCT (((v0.c0)) BETWEEN ((((rt2.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((CAST(rt0.c1 AS NUMERIC)))) FROM vt0, rt2, v0;SELECT DISTINCT ((((rt0.c3)OR(v0.c0)))OR(rt2.c2)) COLLATE BINARY, (((((rt2.c1))=((rt1.c2)))) NOT NULL), COUNT(*) FROM rt2 WHERE (CAST(LAST_INSERT_ROWID() AS BLOB)) ORDER BY ((v0.c0 IN ()) IN ()) DESC, ((((rt0.c3) IS FALSE))>=((rt1.c6 IN ())))  NULLS LAST;SELECT ((((((((((rt1.c5)IS(rt2.c0)))AND(SUBSTR(rt2.c3, rt1.c4))))OR(CASE WHEN rt2.c3 THEN rt2.c0 WHEN rt1.c2 THEN rt1.c5 WHEN v0.c0 THEN rt2.c6 ELSE rt2.c3 END)))OR(AVG(rt2.c2))))OR(json_valid(rt1.c6))), ((CASE rt0.c2  WHEN rt0.c0 THEN rt2.c0 ELSE rt1.c5 END) BETWEEN (x'') AND (TOTAL(rt1.c3))), CAST(((rt2.c1)>(rt1.c6)) AS NUMERIC) FROM v0, vt0;SELECT DISTINCT TOTAL(CASE rt2.c2  WHEN rt2.c3 THEN vt0.c0 END) FILTER(WHERE 0X283461ef) OVER ( ORDER BY ((CAST(rt1.c6 AS NUMERIC))<=((+ (rt2.c2))))  NULLS LAST, ((((rt1.c4) NOTNULL))<<((((rt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) DESC  NULLS LAST), CASE WHEN (((rt1.c0))>((rt0.c1))) THEN MAX(rt2.c3) WHEN ((rt2.c0) NOT BETWEEN (rt1.c4) AND (rt2.c5)) THEN GROUP_CONCAT(rt1.c6) WHEN CAST(rt2.c3 AS NUMERIC) THEN rt2.c1 ELSE ((vt0.c0) IS FALSE) END, ((((((rt1.c4)AND(rt2.c2)))AND(v0.c0)))<=((((rt0.c0))<((rt1.c1))))) FROM v0;SELECT ALL CAST((('-677454448')!=(rt1.c1)) AS REAL) FROM rt1, v0 WHERE ((((0.1875113676264898) IS FALSE) IN (((NULL) BETWEEN (NULL) AND (0.6944832787344887))))) ORDER BY 0.008333212132425438; -- 0ms;
SELECT ALL x'26d7' FROM v0, rt1, vt0, rt2 NOT INDEXED, rt0 GROUP BY -157500441;SELECT ((((((rt1.c5)AND(rt0.c2)))AND(rt1.c4))) NOT BETWEEN (((rt0.c2) NOT BETWEEN ('T)kKu') AND ('2QUH'))) AND (rt1.c3)) FROM v0, vt0, rt2 WHERE (CAST(((0Xffffffff89a3dba5) NOT BETWEEN (x'') AND (0.7812867637668154)) AS TEXT)) LIMIT -1142020299;SELECT rt1.c6, (NOT (-1654337341)), COUNT(AVG(((rt2.c2)IS(v0.c0)))) FROM v0, vt0, rt0, rt1, rt2;SELECT DISTINCT (((rt2.c0 IN (rt2.c0, rt2.c1))) NOTNULL), ((rt2.c2) BETWEEN (((rt1.c6) BETWEEN (rt1.c1) AND (rt2.c5))) AND (rt2.c6)), ((((((((CAST(rt2.c4 AS BLOB))AND(((rt1.c5) NOT NULL))))AND(STRFTIME(rt1.c6, rt2.c0, rt1.c4))))OR(GROUP_CONCAT(rt2.c3))))OR(((rt2.c6) ISNULL))) FROM v0, vt0, rt1, rt0, rt2 WHERE (CAST(CAST('-2107522963' AS TEXT) AS REAL)); -- 0ms;
SELECT COUNT((NOT (rt0.c2))), CAST((-982177731 IN ()) AS REAL), CASE (- (rt1.c3))  WHEN LIKELY(rt0.c3) THEN rt1.c0 WHEN AVG(rt1.c2) THEN rt2.c6 COLLATE RTRIM WHEN NULL COLLATE BINARY THEN CASE vt0.c0  WHEN rt1.c2 THEN x'778b' ELSE rt0.c2 END END FROM v0, rt0;SELECT DISTINCT DENSE_RANK() OVER () FROM rt2, rt0 WHERE ((((((x'1766'))=((0.8215106290457206))))!=((('g阽M')>(NULL))))); -- 0ms;
SELECT DISTINCT (rt1.c4 COLLATE BINARY IN ()) FROM rt1, v0, vt0 WHERE (((((('p7?v'))>=((x'')))) NOTNULL)); -- 0ms;
SELECT ALL ((rt1.c5) IS FALSE) COLLATE RTRIM FROM v0, rt2 WHERE (COALESCE(CASE NULL  WHEN NULL THEN x'b2ff' WHEN ',Db9' THEN NULL WHEN '' THEN NULL WHEN -9.75947352E8 THEN -9.75947352E8 WHEN NULL THEN '2051794065' ELSE NULL END, CASE NULL  WHEN x'' THEN '1549552954' END));SELECT CASE (- (rt0.c3))  WHEN (((rt1.c5))<((rt2.c3))) THEN ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt2.c2)) ELSE CASE rt1.c1  WHEN rt2.c4 THEN rt2.c2 WHEN rt1.c3 THEN rt2.c1 WHEN rt2.c6 THEN rt2.c4 ELSE rt2.c5 END END FROM rt2, rt0 WHERE ((((((0xffffffffdc46ad29)) NOT BETWEEN ((x'')) AND (('?k)/&h')))) IS TRUE)) ORDER BY ((((rt1.c3) NOT NULL)) NOT NULL);SELECT ALL rt2.c2 FROM rt0 WHERE (CASE WHEN '' THEN NULL END COLLATE RTRIM) LIMIT -1979693497 OFFSET -859427620;SELECT ALL (((((((((- (rt2.c3)))AND((((vt0.c0)) NOT BETWEEN ((0.5012465524430382)) AND ((rt2.c2))))))AND(CAST(rt1.c5 AS INTEGER))))AND((('j')%(rt2.c6)))))AND(MAX(rt1.c1))) FROM rt0, rt2, v0;SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt2.c3 ELSE rt1.c0 END) NOTNULL) FROM vt0, rt1;SELECT ((rt0.c3)/(rt2.c1)) COLLATE RTRIM FROM rt0, rt2, vt0 WHERE (CAST((NOT (0Xfffffffff775957a)) AS BLOB)) LIMIT -536000899; -- 0ms;
SELECT DISTINCT ((((rt1.c4)IS NOT(rt1.c1)))<=(((rt1.c3) NOT BETWEEN (rt2.c3) AND (rt1.c1)))), (NOT ((rt1.c1 IN ()))), (((rt1.c4)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((((rt0.c2) IS TRUE)))) FROM v0, vt0, rt2;SELECT ALL (rt2.c2 COLLATE NOCASE IN (((rt2.c3)<=(rt1.c6)), UNLIKELY(rt1.c3))), (AVG(v0.c0) IN (((rt2.c5)/('0.14576941293862')))), HEX(DISTINCT x'51d1') FROM rt1, v0, vt0, rt0 WHERE (NULL) ORDER BY NULL  NULLS LAST, CASE WHEN ((rt2.c4)LIKE(rt2.c5)) THEN ((rt0.c0) IS TRUE) END DESC  NULLS LAST;SELECT 0.28641612821567075 COLLATE NOCASE FROM rt1, rt0, rt2 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN (NOT ('2081500114')) WHEN (NULL IN ()) THEN CASE NULL  WHEN 0.9678199429668596 THEN 0.4227583589317898 WHEN '*ogAm ' THEN NULL WHEN '뿢AL3oub' THEN NULL WHEN 0.6717158655383537 THEN 0.526136663881786 WHEN NULL THEN '895553341' WHEN x'' THEN '2029819829' WHEN 0.5839056082087066 THEN 0.2998518788693634 END WHEN NULL THEN MAX(x'6349', '') END); -- 0ms;
SELECT ALL ((rt0.c2)<>((rt1.c6 IN ()))) FROM rt2, rt1, v0, rt0, vt0 GROUP BY ((x'f61c')<>(((rt2.c6) NOTNULL))); -- 0ms;
SELECT DISTINCT MAX(TOTAL(CAST(rt2.c3 AS NUMERIC))) FROM v0, rt2, rt1, vt0, rt0 WHERE (((((((0.2165096824385847)OR(NULL)))AND(x'')))IS NOT((- ('-1542030007')))));SELECT (((((((rt2.c6))<=((rt2.c1))))OR(0.4816535555839916)))OR(NULLIF(DISTINCT rt1.c0, rt1.c1))) FROM vt0, rt1, v0;SELECT DISTINCT CASE WHEN ((rt2.c6)OR(v0.c0)) THEN ((rt1.c0) NOT NULL) WHEN ((rt2.c5)-(0.3663045042868567)) THEN rt0.c2 COLLATE BINARY WHEN (+ (rt2.c2)) THEN rt0.c3 COLLATE NOCASE END FROM vt0, rt0, rt2 LIMIT -2133828639 OFFSET -1517889130;SELECT DISTINCT CASE (rt1.c2 IN (rt1.c0, '944105272'))  WHEN COALESCE(DISTINCT '-677454448', rt2.c0) THEN ((rt0.c1)|(rt2.c2)) WHEN (rt2.c6 IN (rt2.c0, 0.8406791751909659)) THEN rt1.c6 COLLATE NOCASE WHEN ((rt1.c6)>=(rt1.c1)) THEN ((((rt1.c6)OR(vt0.c0)))OR(rt0.c3)) ELSE (((vt0.c0, rt2.c3, rt2.c0)) NOT BETWEEN ((v0.c0, rt0.c3, rt1.c2)) AND ((rt1.c2, rt2.c1, rt2.c0))) END FROM v0 INNER JOIN rt2 ON (('lX)*q&' COLLATE NOCASE)LIKE((- (rt1.c4)))) LEFT OUTER JOIN vt0 ON (((NULL IN ()))<<(CAST(rt2.c6 AS BLOB))) CROSS JOIN rt0 ON CAST((rt1.c0 IN ()) AS TEXT) FULL OUTER JOIN rt1 ON HEX(DISTINCT 0.952779423382071) WHERE (CAST((('1622070422')OR('-704628478')) AS INTEGER));SELECT (((- (v0.c0))) IS FALSE) FROM rt2, v0, rt1 WHERE (CASE WHEN (('G69\r')=(x'1f57')) THEN (x'467b' IN ()) END) GROUP BY ((((((rt0.c3)AND(rt2.c3)))OR(rt1.c0)))-(((rt1.c4)=(rt2.c1)))), x'', rt2.c4 HAVING ((((rt2.c6) NOT BETWEEN (rt2.c4) AND (rt0.c0))) NOT BETWEEN (CASE WHEN rt2.c6 THEN rt1.c2 END) AND (rt1.c0 COLLATE NOCASE));SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c4))) NOT BETWEEN ((rt2.c1 IN ())) AND ((NOT (rt1.c2)))) FROM vt0;SELECT DISTINCT x'' COLLATE NOCASE, (~ (MAX(rt1.c0))), TOTAL(GROUP_CONCAT(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt2.c6)))) FROM rt0, rt1, v0, vt0, rt2 WHERE (LOWER(CAST(NULL AS TEXT)));SELECT ALL ((rt1.c1 COLLATE BINARY) NOT NULL) FROM v0, rt0, vt0, rt2 WHERE (CASE ((0.7813507546250466)<>(x''))  WHEN (+ (NULL)) THEN 0.46953230916973443 ELSE NULL COLLATE RTRIM END);SELECT x'1042', SUM(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt2.c5))) OVER (), DENSE_RANK() OVER () FROM rt2;SELECT DENSE_RANK() OVER ( ORDER BY CAST(CAST(rt2.c0 AS TEXT) AS NUMERIC)  NULLS FIRST, ((((rt2.c1)<>(rt1.c3)))AND(SQLITE_COMPILEOPTION_USED(rt2.c5))) DESC  NULLS FIRST, COALESCE(DISTINCT (((rt1.c0, rt2.c6, rt2.c2)) NOT BETWEEN ((rt2.c3, rt0.c2, '1017954421')) AND ((vt0.c0, rt2.c2, rt1.c5))), (~ (rt1.c4))) DESC) FROM vt0, v0 WHERE ((((0.46152883460383043)) BETWEEN ((CASE NULL  WHEN '{vTs+P' THEN x'' WHEN NULL THEN NULL WHEN '-1486455097' THEN NULL END)) AND ((x'e11a'))));SELECT ALL ((rt2.c4 COLLATE BINARY) NOTNULL) FROM v0, vt0, rt0, rt1 WHERE (NULL);SELECT ((((rt1.c1) IS FALSE)) NOTNULL), LEAD(CAST(CAST(NULL AS INTEGER) AS TEXT), (QUOTE(rt0.c2) IN ()), ((((rt0.c2 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))OR(((rt0.c1)/(rt0.c3))))) OVER ( ORDER BY ((((((rt2.c0)%(rt0.c3)))AND((rt2.c5 IN ()))))OR((((vt0.c0, rt1.c6, rt2.c5))>((rt1.c0, rt1.c3, rt2.c5))))) ASC, rt1.c0 ASC), CASE rt1.c6  WHEN rt2.c3 THEN rt0.c1 END COLLATE BINARY, ((((rt2.c2))>((rt2.c0))) IN ()), (+ (rt1.c4)) COLLATE NOCASE COLLATE NOCASE FROM rt0 WHERE (((((x'c19d')IS(x''))) NOT NULL));SELECT ALL rt2.c2, ((CASE rt1.c5  WHEN rt1.c4 THEN rt2.c5 END) IS TRUE), COUNT(*) FROM rt0 WHERE ((((((x'4f2f', NULL, 0.22981310937775457))==(('0!', '0.8960506225496498', 0.7065161736312812)))) IS FALSE));SELECT ((rt1.c3)<(((rt0.c3) BETWEEN (0.9783521828228394) AND (rt1.c3)))) FROM vt0, rt0, rt2;SELECT DISTINCT rt2.c2 FROM v0, rt1, vt0 INNER JOIN rt0 ON 0.18030744945159305 WHERE (CAST(((0.4049057925942562) IS FALSE) AS NUMERIC));SELECT DISTINCT COUNT(*), load_extension('-1390340378', rt1.c1 COLLATE NOCASE), (((- (rt2.c4)))AND(((rt2.c5) NOT NULL))) FROM vt0, rt0, v0, rt2, rt1 WHERE (CAST(925486252 AS REAL) COLLATE RTRIM) LIMIT -254511326 OFFSET 2113925240; -- 0ms;
SELECT DISTINCT (+ ((rt1.c5 IN (rt1.c5)))) FROM v0, rt2, rt0, rt1 WHERE (((CASE 0.6268061710721633  WHEN -479158613 THEN NULL END) NOT BETWEEN ((NOT (x'0f26'))) AND (((x'') ISNULL)))); -- 0ms;
SELECT CASE WHEN -1.72579441E9 THEN rt1.c6 ELSE (rt1.c3 IN ()) END FROM rt1, rt0, v0; -- 0ms;
SELECT 0.16169104841854387 FROM v0, rt0, rt2, vt0 WHERE (((((((0.6397397681012565)OR(0.21813192452617258)))OR(((NULL) NOT NULL))))AND(CASE WHEN NULL THEN 0xffffffffa53e8e57 ELSE 0.05173998657215728 END))); -- 1ms;
SELECT ALL (((((rt1.c6)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c5))))OR(rt2.c1 COLLATE BINARY)), ROW_NUMBER() OVER ( ORDER BY ((rt1.c5) BETWEEN (((rt1.c1) NOTNULL)) AND (((rt1.c6) IS TRUE)))  NULLS FIRST), ((((rt2.c1 IN ())))<>(((~ (rt2.c0))))) FROM vt0, rt1 FULL OUTER JOIN v0 ON (((((rt1.c1)OR(rt0.c0)))OR(rt1.c3)) IN (((rt0.c3)-(rt1.c2)))) WHERE ((((((((((('-88704619')OR(0.933380409255663)))AND('')))AND(x'')))OR(-735017474)))||((NOT (2.063853684E9)))));SELECT UNLIKELY(((rt2.c3)*(v0.c0))) FROM v0 WHERE (CASE CASE 'V0^A1'  WHEN x'' THEN NULL ELSE 'WXW~臠' END  WHEN ((x'') BETWEEN (0xffffffffd4ab681a) AND ('t!o{')) THEN ((0.477173624739333) IS TRUE) ELSE (~ (NULL)) END);SELECT rt1.c1, rt1.c1 COLLATE NOCASE, CAST(vt0.c0 COLLATE BINARY AS TEXT), (+ ((rt2.c1 IN ()))), TOTAL(((((rt2.c2)OR(rt2.c4)))OR(rt2.c5))) OVER () FROM rt0, vt0, rt2, v0, rt1 WHERE (('0.670358789487245' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), GROUP_CONCAT(rt0.c2 COLLATE BINARY COLLATE NOCASE), 1.465232823E9 FROM vt0 WHERE ((((('[H&x&') BETWEEN ('-1816212779') AND (NULL)))<<('-1370717729' COLLATE BINARY)));SELECT DISTINCT (CAST(rt2.c3 AS INTEGER) IN (MAX(rt2.c5))) FROM rt1, v0, vt0, rt2 WHERE (((UNLIKELY(DISTINCT x''))>=(NULL COLLATE NOCASE))); -- 0ms;
SELECT (+ (TYPEOF(DISTINCT rt2.c0))) FROM rt0 LEFT OUTER JOIN rt1 ON rt2.c3;SELECT ALL DENSE_RANK() OVER () FROM rt1 WHERE (CASE (((x'', x'', NULL))<((NULL, '', 3.10453052E8)))  WHEN (('yg')<=('-884076514')) THEN ((0.4752015159776668) IS FALSE) END); -- 0ms;
SELECT ((SUM(rt1.c3))LIKE(CASE WHEN rt2.c0 THEN rt1.c4 ELSE rt1.c6 END)) FROM rt0, rt2, rt1, vt0 WHERE ((NOT (x''))); -- 0ms;
SELECT DISTINCT (rt2.c1 IN (x'', rt0.c2)) COLLATE NOCASE FROM rt1, v0, vt0;SELECT DISTINCT HEX(DISTINCT ((NULL)>=(x''))) FROM rt0, v0 WHERE (CHANGES()); -- 0ms;
SELECT ALL 0.9122813269857577, CASE 0.8596545962125616  WHEN ((((((((rt1.c1)OR(rt0.c2)))AND(rt1.c1)))AND(rt2.c4)))AND(rt2.c3)) THEN ((rt0.c2) ISNULL) WHEN ABS(NULL) THEN ((rt2.c4)%(rt0.c1)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt1.c0 ELSE rt1.c6 END THEN MAX(rt1.c1) ELSE rt0.c3 END, vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM FROM rt2, rt0, vt0, rt1, v0 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN (NULL IN ()) WHEN (0.7602615613765282 IN ()) THEN ((0.28641612821567075) NOT BETWEEN ('*|jscb') AND ('r>')) WHEN (x'' IN ()) THEN CAST('Q*xau' AS NUMERIC) ELSE ((((x'')AND(NULL)))AND(-1390340378)) END); -- 0ms;
SELECT ((((rt1.c2)<=(rt2.c3))) ISNULL), GROUP_CONCAT(((rt2.c5) IS TRUE) COLLATE NOCASE), CAST(CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt2.c2 THEN rt1.c3 WHEN rt2.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c3 WHEN rt2.c0 THEN rt1.c4 ELSE rt1.c1 END AS INTEGER) FROM rt0, rt2, rt1, vt0, v0 GROUP BY ((x'8c6f') BETWEEN (((rt1.c2)>(rt1.c2))) AND (((((rt0.c2)AND(v0.c0)))AND(x'cda4')))); -- 0ms;
SELECT DISTINCT (((rt2.c0)) NOT BETWEEN (((((rt0.c1))<=((rt1.c4))))) AND ((((rt1.c2) IS FALSE)))) FROM vt0, v0, rt1, rt0, rt2; -- 0ms;
SELECT ALL (((('0.1800421952794643', rt0.c2, rt2.c3))<=((rt2.c4, rt1.c1, v0.c0))) IN ()) FROM vt0, rt2, rt1, v0 WHERE (CASE 'Od' COLLATE RTRIM  WHEN -732322869 THEN CASE '\nj}0'  WHEN -2133828639 THEN 0.9563332475244816 END ELSE ('%J' IN ()) END); -- 1ms;
SELECT DISTINCT (~ (MAX(rt2.c0))) FROM rt2, rt0, vt0, v0, rt1 LIMIT -1411783146 OFFSET 947633396; -- 0ms;
SELECT ALL json_type(rt0.c3) COLLATE BINARY FROM v0, vt0, rt0, rt1, rt2 WHERE ((((('''!ezobmonthsuh0') NOT BETWEEN (NULL) AND (x'6719'))) NOT BETWEEN (TRIM(DISTINCT x'')) AND ((((x''))=(('-975947352')))))); -- 0ms;
SELECT DISTINCT ((1862563244) IS TRUE), TOTAL(((rt1.c5) NOT BETWEEN (rt2.c1) AND (rt2.c5))) OVER (), (((rt2.c0, rt1.c5, rt1.c4)) BETWEEN ((rt2.c5, v0.c0, rt0.c2)) AND ((rt1.c5, rt2.c2, rt1.c5))) COLLATE BINARY FROM rt2, vt0 CROSS JOIN rt0 ON ((rt2.c2) ISNULL) COLLATE BINARY LEFT OUTER JOIN rt1 ON CASE WHEN rt1.c4 THEN CAST(rt1.c1 AS TEXT) ELSE ((rt2.c0) NOT BETWEEN (rt0.c0) AND (rt2.c5)) END FULL OUTER JOIN v0 ON NULL; -- 0ms;
SELECT ALL AVG((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))) OVER () FROM rt1, v0, vt0, rt0, rt2 LIMIT 285287473 OFFSET 62470244; -- 1ms;
SELECT ALL GROUP_CONCAT(((rt0.c0)|(rt1.c3))) FROM rt0, vt0 WHERE (CASE CASE WHEN 0.3136783227706217 THEN 0.008574075159740513 WHEN 0xffffffffce15284f THEN 553771601 WHEN '0.9400973178443415' THEN x'c182' ELSE 'z\n''〒*2' END  WHEN CASE WHEN x'' THEN 'hn7\rYf\' ELSE '98Vt	' END THEN (NOT (x'eca1')) END);SELECT DISTINCT ((rt1.c4) NOT BETWEEN (rt2.c3) AND (rt0.c2)) COLLATE BINARY COLLATE BINARY FROM rt0, vt0, rt1, v0;SELECT DISTINCT rt2.c4 FROM rt0, v0, rt2, vt0, rt1; -- 0ms;
SELECT ALL ((((rt1.c0)<(v0.c0))) IS FALSE) FROM rt1, rt2, vt0 WHERE ((((NULL IN ())) NOT BETWEEN (((0.9440832171596273) BETWEEN (x'') AND (NULL))) AND (((('eE', 0xffffffffe2907e7d, 0Xffffffffb8c663bb)) NOT BETWEEN ((x'', '601169343', '850178682')) AND ((0.008333212132425438, x'', '2051794065'))))));SELECT DISTINCT (((rt0.c1 IN ()))+(CASE WHEN rt2.c6 THEN rt2.c5 WHEN rt1.c6 THEN rt1.c2 WHEN rt0.c3 THEN rt2.c3 ELSE rt2.c6 END)), NTILE((((((rt2.c0)OR(rt2.c0)))OR(rt2.c4)) IN (UNLIKELY(DISTINCT rt0.c3), rt0.c3 COLLATE NOCASE))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), CAST(((rt0.c0)>=(rt1.c6)) AS NUMERIC) FROM vt0, rt2, rt0;SELECT DISTINCT CASE (((rt0.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt2.c3)))  WHEN CAST(rt1.c3 AS REAL) THEN ((((0x39d5ef8b)OR(x'')))OR(rt2.c1)) END, (((CAST(rt0.c2 AS REAL)))<>(((rt1.c2 IN ())))), rt1.c6 FROM v0;SELECT UNLIKELY(((x'')&(rt2.c2))), ((rt0.c2 IN (rt0.c2, rt1.c2)) IN ()), ('1539594664' IN ()), (((MAX(x'bf022da9', rt2.c4), (~ (rt1.c0)), ((rt2.c2) IS TRUE)))!=((CAST(rt2.c0 AS NUMERIC), (((rt0.c0))<=((rt1.c3))), 0.7511975450118278))), 0.0 FROM rt2, rt0, v0 ORDER BY CAST(rt0.c2 COLLATE BINARY AS NUMERIC)  NULLS FIRST;SELECT DISTINCT ((('1977469051')) NOT BETWEEN ((0.76899008153726)) AND ((SQLITE_COMPILEOPTION_USED(rt0.c3)))), ((rt2.c1) ISNULL), ((rt1.c4 COLLATE RTRIM)<<(((rt2.c5)AND(rt0.c1)))) FROM rt0, vt0;SELECT DISTINCT ((((rt2.c2))>((rt1.c1))) IN (GROUP_CONCAT(rt2.c2))) FROM v0, rt0 NOT INDEXED, rt2, rt1 LIMIT -1358559766 OFFSET 1435620930; -- 0ms;
SELECT DISTINCT (((rt2.c6)) BETWEEN ((((((rt1.c1)OR(rt2.c2)))AND(rt2.c0)))) AND (((((v0.c0, rt2.c1, rt2.c5)) BETWEEN ((rt0.c1, rt1.c0, v0.c0)) AND (('-702406466', rt2.c4, rt1.c0)))))) FROM rt1, rt2, vt0 WHERE (CAST((NULL IN (0.561257059921293)) AS REAL)) ORDER BY (+ (((v0.c0) BETWEEN (rt2.c4) AND (rt1.c3)))) DESC;SELECT DISTINCT (((rt1.c6)) NOT BETWEEN (((((((((('Hc4q\r')OR(x'')))AND(rt1.c3)))OR(rt2.c3)))OR(rt0.c3)))) AND (((((rt2.c3)) BETWEEN ((rt1.c6)) AND ((rt0.c2)))))), COUNT(v0.c0) OVER ( ORDER BY (((('1898126307') NOT BETWEEN (rt1.c1) AND (rt0.c0))) BETWEEN ((+ ('~2'))) AND ((rt0.c2 IN ()))) DESC), LIKE((((rt1.c0, rt0.c0, rt2.c5)) NOT BETWEEN ((vt0.c0, rt2.c6, rt2.c2)) AND ((rt1.c4, rt2.c0, x''))), CASE WHEN rt2.c5 THEN vt0.c0 WHEN 1648038176 THEN rt2.c4 WHEN rt2.c5 THEN rt1.c3 END), LOWER(((rt1.c4) NOT NULL)), (((((rt0.c0)GLOB(rt2.c5))))<((((rt0.c3) BETWEEN (rt2.c2) AND (rt2.c0))))) FROM vt0 GROUP BY ((CASE x''  WHEN rt2.c3 THEN rt2.c4 END) IS FALSE);SELECT DISTINCT (-3.59155195E8 IN ()) FROM v0, vt0, rt2, rt1 ORDER BY ((((0.31598028192097727) IS TRUE))IS NOT(CASE WHEN rt1.c5 THEN rt1.c3 ELSE rt1.c6 END)) DESC, ((rt1.c0) IS FALSE) COLLATE RTRIM; -- 0ms;
SELECT LEAD(CAST(((((rt2.c6)OR(rt0.c0)))OR(rt1.c5)) AS BLOB), ((COALESCE(rt1.c2, rt1.c0)) NOTNULL), '-1875223817') OVER ( ORDER BY (((((((rt2.c4, -567718916, rt1.c2))>((rt2.c2, rt2.c6, rt0.c3))))AND(CAST(rt1.c5 AS INTEGER))))AND(((rt2.c3) NOT BETWEEN (rt1.c3) AND (''))))  NULLS LAST, ((rt2.c5)&(rt2.c4)) COLLATE NOCASE  NULLS FIRST), ((((v0.c0)*(rt2.c2)))<<(CASE WHEN rt2.c3 THEN rt0.c1 ELSE rt2.c5 END)), TRIM(DISTINCT (+ (rt1.c6))) FROM rt1, rt0, rt2 WHERE (CASE WHEN UPPER(1344624649) THEN ((x'') NOTNULL) ELSE (((1386041330))<=((1256500415))) END);SELECT ALL -1194519413 COLLATE BINARY FROM vt0 WHERE ((((0Xffffffff8c5528bf IN ()))IS NOT(0.3884916846391794))) ORDER BY (((((((((NOT (rt2.c6)))AND(vt0.c0)))OR(((0.08101996512194387) NOT BETWEEN (rt1.c0) AND (rt2.c3)))))OR((vt0.c0 IN ()))))AND(((rt2.c6)>=(rt1.c6)))) DESC  NULLS LAST;SELECT DISTINCT ((((rt1.c5)AND(rt1.c0))) ISNULL), COUNT(*), CAST(v0.c0 COLLATE BINARY AS BLOB) FROM rt1 WHERE (CASE WHEN (((x'6f84bf94', 0.903698062694533, x'')) BETWEEN ((x'', 0.4613870500224513, x'')) AND (('8045513', NULL, x'0796'))) THEN (('') NOT BETWEEN (0.224120076326072) AND (x'')) END);SELECT DISTINCT MIN((- (rt1.c2))) FROM vt0;SELECT ALL ((rt0.c3)||(rt0.c0)) COLLATE BINARY FROM v0, vt0;SELECT ALL (((rt0.c1 IN ())) BETWEEN ((- (rt1.c4))) AND (((rt1.c6)IS NOT(rt2.c1)))), (((rt2.c6)LIKE(v0.c0)) IN (json_valid('2014305109'))), ((((rt1.c6 IN (rt2.c4, rt2.c6))))>((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))) FROM rt0, rt1 WHERE (NULLIF(((x'')/(0.38724665844544137)), CASE WHEN x'662a' THEN x'' ELSE '2051794065' END)) GROUP BY '1034462392';SELECT SQLITE_COMPILEOPTION_USED((((rt1.c0, rt2.c5, rt2.c5))!=((vt0.c0, rt0.c2, rt2.c6)))), FIRST_VALUE(TOTAL_CHANGES()) OVER (), UNLIKELY(DISTINCT (rt0.c3 IN ())) FROM v0, vt0, rt2, rt0, rt1; -- 1ms;
SELECT DISTINCT (((rt1.c5) NOT NULL) IN (rt2.c4 COLLATE BINARY)), (~ ((NOT (rt2.c4)))), '109489106' FROM rt1, rt0 WHERE ('0.8165675752212148');SELECT ALL (~ ((((rt1.c3)) NOT BETWEEN ((rt1.c5)) AND ((rt2.c5))))), CAST(COALESCE(rt2.c0, v0.c0, rt2.c0, rt2.c0) AS INTEGER), (((- (rt1.c2))) NOT NULL), CAST(((((((((-1.991346448E9)AND(rt2.c6)))OR(rt1.c5)))AND(rt1.c6)))OR('䩜D%Hs!5<-')) AS TEXT), HEX(DISTINCT ((((rt1.c0)OR(vt0.c0)))AND(rt0.c2))) FROM rt1, rt0 WHERE (CASE DATETIME(x'', '', NULL)  WHEN CASE 0.23917529816687122  WHEN NULL THEN NULL WHEN 0.25126112317714433 THEN '0.6944832787344887' WHEN -1719446485 THEN '1284607362' ELSE '895553341' END THEN -396382908 COLLATE NOCASE ELSE ((0Xffffffff894e76f0)IS NOT('LD')) END);SELECT ALL GROUP_CONCAT(CAST(rt2.c4 AS NUMERIC) COLLATE RTRIM) FROM rt1, v0, rt0 WHERE (CAST((((x'')) NOT BETWEEN ((x'b22b')) AND (('-474045'))) AS TEXT));SELECT DISTINCT (((rt1.c2 COLLATE RTRIM))!=(('-1862520331'))) FROM vt0, rt2;SELECT CASE WHEN QUOTE(rt1.c3) THEN x'' COLLATE BINARY ELSE (rt2.c2 IN ()) END FROM rt2, vt0, rt1 WHERE ((((+ (x'e47f')))>=((((0x3c8ad08f, NULL, 'JF\VV.O\r3')) NOT BETWEEN (('-474045', NULL, x'')) AND ((NULL, 0.15938757166361162, 0.37585745029523787)))))); -- 0ms;
SELECT DISTINCT ((((rt1.c4)<<(rt1.c5))) BETWEEN ((((rt1.c4))!=(('-1786117454')))) AND ((((rt2.c4))>((rt2.c2))))) FROM vt0, v0, rt1 WHERE (((((x'')<=('0.9748966677437181'))) NOTNULL));SELECT ALL (((rt2.c6)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt2.c3)))) AND ((CASE WHEN rt1.c4 THEN rt0.c1 END))) FROM rt0, rt2, rt1, vt0 WHERE (((('oEnZO8Q' IN ()))<('1112538790' COLLATE NOCASE)));SELECT ALL rt2.c1 FROM v0, rt0, rt1, rt2, vt0 WHERE ((((((x'' IN ()))OR('' COLLATE RTRIM)))OR(((x'') IS TRUE)))) GROUP BY HEX(2.85662827E8) HAVING (+ (SUM(rt2.c2))); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) COLLATE NOCASE FROM vt0 WHERE (LIKELY((x'' IN ()))); -- 0ms;
SELECT DISTINCT (- (((rt1.c6) ISNULL))) FROM vt0 NOT INDEXED, rt2;SELECT (NOT (vt0.c0 COLLATE NOCASE)) FROM rt1, vt0; -- 0ms;
SELECT CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt2.c0)) AND ((rt2.c0))) THEN DATETIME('931348944', v0.c0, rt0.c1, rt1.c0, rt1.c5) ELSE (NOT (rt2.c3)) END FROM vt0, v0, rt1, rt0 WHERE (((HEX(x'')) IS FALSE)) LIMIT -336347665 OFFSET -1487074045;SELECT ALL ((AVG(rt1.c0))|(MAX(''))) FROM rt0, v0 WHERE (((((0.20912263222245442) NOTNULL)) BETWEEN (0.4944125544077178 COLLATE NOCASE) AND (TRIM(0.8156107612205895))));SELECT DISTINCT rt2.c5 COLLATE BINARY FROM vt0;SELECT ((NULL) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE FROM rt1, rt2, rt0, vt0, v0 LIMIT -1422896861 OFFSET 1862563244; -- 0ms;
SELECT CAST(rt2.c0 AS TEXT) COLLATE NOCASE FROM vt0, rt2, rt0, rt1 WHERE (((((1368520832) ISNULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((rt2.c2)) BETWEEN ((rt0.c1)) AND ((rt2.c0)))))<=((((rt1.c3)&(rt2.c1))))) FROM rt0, vt0, rt2, v0, rt1 WHERE ((((((((((((((('556485950')AND(x'')))AND(601169343)))OR(0.8956403508506293)))AND(1226867181)))OR(1837994602)))OR(NULL)))|((('J.') BETWEEN (-231974733) AND ('-8604464'))))); -- 0ms;
SELECT DISTINCT ((rt2.c5 COLLATE BINARY) IS FALSE) FROM rt1, rt0, v0, rt2, vt0 WHERE (((((((-359155195)OR(0.2380723957432227)))AND(x'')))+('1'))); -- 0ms;
SELECT ALL ((rt2.c2) IS FALSE) FROM rt2, v0, rt0 WHERE ((((NOT (NULL)))+(TRIM(x'')))) LIMIT -1561409394 OFFSET -1784091436; -- 0ms;
SELECT vt0.c0 FROM rt2, rt1, rt0, vt0, v0 WHERE (((((x'f2e7') NOT BETWEEN (-7.60794721E8) AND ('796560298'))) ISNULL)); -- 0ms;
SELECT ALL 5.14328027E8 FROM rt1 LIMIT 1182780572 OFFSET -1756571729; -- 0ms;
SELECT ALL rt0.c1, (((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt2.c6 THEN rt2.c3 END)) AND ((((rt1.c1)IS NOT(rt1.c6))))), (((rt2.c6) BETWEEN (vt0.c0) AND (NULL)) IN ()) FROM rt2, vt0 WHERE ((((((('-235997673')AND(-8.44344074E8)))AND(x''))) BETWEEN ((('-612745404') NOT BETWEEN ('잧4') AND ('A䆖'''))) AND ((('-1910094844')&(NULL)))));SELECT ALL ((((rt1.c6) BETWEEN (rt1.c6) AND (rt1.c5))) IS TRUE) FROM vt0, rt1 WHERE (CAST(1666315579 AS BLOB)) GROUP BY '888239169' HAVING x'' LIMIT -1878135587; -- 0ms;
SELECT ALL rt2.c3 FROM rt1, rt2, rt0, vt0, v0; -- 1ms;
SELECT (((((((((('wB')||(rt1.c0)))AND((~ (rt1.c1)))))AND(((rt2.c6)>>(rt1.c0)))))OR(((rt0.c0)<=(rt1.c0)))))AND((NOT (rt2.c0)))), (ABS(DISTINCT rt1.c1) IN (((((rt0.c0)AND(rt1.c2)))OR(rt1.c6)))), CAST(rt0.c1 COLLATE BINARY AS REAL) FROM rt1, v0 WHERE (CAST(((x'')=(2126173754)) AS INTEGER));SELECT ALL ((((rt0.c1))!=((rt2.c6))) IN ((((rt2.c3)) NOT BETWEEN ((rt1.c6)) AND ((rt2.c3))))) FROM v0, rt2, rt0;SELECT ALL AVG(((((rt2.c3)OR(NULL)))OR(rt1.c6))) FROM vt0, v0;SELECT (((((((((((((rt0.c0)OR(0.8171471357510688)))AND(rt0.c2)))OR(rt2.c1)))OR(rt2.c3)))OR(rt1.c1)))AND(rt1.c0)) IN ()) FROM v0; -- 0ms;
SELECT ALL (((CAST(rt0.c2 AS BLOB)))<((((rt2.c0)-(rt0.c2))))) FROM rt0, rt2, v0 WHERE (((((('0.9155176207951233') NOTNULL)))<(((~ (NULL)))))); -- 0ms;
SELECT DISTINCT (((v0.c0, rt0.c1, rt2.c2)) NOT BETWEEN ((GROUP_CONCAT(rt0.c2), rt1.c1 COLLATE BINARY, CASE rt2.c3  WHEN 'I冿E\	aAFV' THEN rt2.c6 END)) AND (((NOT (x'')), 2.004418532E9, ((vt0.c0)-(rt1.c6))))) FROM rt2, rt1, v0, vt0, rt0 WHERE ((CAST('[.' AS TEXT) IN ('-2042879869' COLLATE BINARY))); -- 0ms;
SELECT ALL NULL COLLATE NOCASE COLLATE NOCASE FROM rt1, vt0, rt2 WHERE (((((((((((((((NULL)AND(x'')))AND(x'')))OR('1337483056')))AND('2014305109')))OR(0.5966250857883768)))OR(x'ef7c'))) NOTNULL)); -- 0ms;
SELECT DISTINCT (~ (((('2134280548')) BETWEEN ((rt1.c5)) AND ((rt0.c1))))), (~ ((((0.6911102649843562)) BETWEEN ((rt2.c0)) AND ((rt1.c0))))), STRFTIME(rt2.c5, rt1.c5, NULL) COLLATE NOCASE FROM rt2 LIMIT 637808069 OFFSET 860018398;SELECT (((rt1.c6, rt0.c0, rt1.c3)) BETWEEN ((rt1.c0, rt0.c0, rt1.c0)) AND ((rt2.c0, rt0.c0, rt2.c3))) COLLATE BINARY, ((((((rt2.c3)AND(rt1.c1)))AND(rt1.c2)))LIKE(SUM(rt0.c0))), CAST(rt1.c2 AS BLOB) COLLATE NOCASE, ((((rt0.c1)IS NOT(rt0.c0))) BETWEEN (SUM(rt2.c3)) AND (TYPEOF(DISTINCT v0.c0))), PERCENT_RANK() OVER () FROM rt2, v0, rt1 WHERE ((((((x'')OR('')))OR(' UsIB6nl')) IN ()));SELECT ALL rt1.c0 FROM vt0, rt0, v0, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c6) BETWEEN (rt1.c4) AND (rt2.c1)) AS REAL) FROM rt2, vt0;SELECT ALL LAG((- (rt0.c2)), ((0.4784235312030767)IS NOT(rt0.c1 COLLATE BINARY)), CAST(v0.c0 AS NUMERIC) COLLATE BINARY) OVER () FROM vt0, v0, rt0, rt2; -- 0ms;
SELECT ALL (((rt2.c6 IN ()))LIKE(rt2.c5)) FROM vt0, rt1 WHERE ((((0x4ffde9b5)!=('-646605711')) IN ()));SELECT ALL TOTAL((~ (rt2.c5))) FROM vt0, rt1 WHERE (((0.4449830536406083) BETWEEN (x'') AND (NULL)) COLLATE BINARY);SELECT DISTINCT (((((rt2.c4)&(rt2.c5)), ((rt1.c3) NOTNULL), (((rt1.c0))==((rt1.c2)))))>=((((rt2.c4)=(rt2.c1)), ((rt1.c2)-(rt2.c0)), UNLIKELY(vt0.c0)))) FROM rt0 WHERE (LOWER(DISTINCT ((NULL)IS NOT('now')))) ORDER BY (~ (TYPEOF(rt1.c4)))  NULLS LAST;SELECT DISTINCT (- (0.2935716850727017)) COLLATE BINARY FROM rt0 WHERE ((((('-2113479783') NOT BETWEEN (x'2b02') AND ('5460337545506496092 1009T1731-4557067398023529944--7132686346594926061T951 ')))|(NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE WHEN MIN(v0.c0) THEN IFNULL(rt2.c6, rt2.c1) WHEN ((rt2.c4) NOT BETWEEN (rt1.c3) AND (rt2.c4)) THEN ((((rt2.c3)AND(rt1.c2)))OR(rt1.c6)) WHEN NULL THEN ((((rt2.c1)AND(rt2.c4)))AND(rt1.c5)) END FROM rt1, rt0 WHERE (0X34713b12);SELECT DISTINCT '	K' FROM rt0, rt2, v0, rt1; -- 1ms;
SELECT (((rt0.c3, rt2.c4, NULL)) BETWEEN ((((rt2.c3) NOT NULL), ((((rt2.c3)AND(rt1.c4)))OR(rt1.c4)), ((((rt2.c5)AND(rt1.c5)))OR(v0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c6)), ((NULL) NOT BETWEEN (vt0.c0) AND (rt1.c2))))) FROM rt0, rt1, v0 GROUP BY x'';SELECT DISTINCT MAX(((rt2.c4)LIKE(rt1.c3))) FROM vt0, rt0;SELECT 7368438.0 FROM vt0, v0 WHERE (TRIM(2.092930621E9) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT x'', COUNT((- (rt1.c2))) OVER (), ((((rt2.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))*(((rt2.c5) IS FALSE))) FROM rt1 LIMIT 888239169;SELECT DISTINCT rt1.c3 FROM v0, rt0, rt1, vt0, rt2 WHERE (((((((((CASE WHEN 0.9999189092222449 THEN 0.8011678019972912 END)AND(QUOTE(x''))))OR(((((0x3ab2e876)OR(x'92beb3b7')))AND(NULL)))))AND((x'' IN ()))))AND(((x'') NOT BETWEEN ('t?') AND ('-1779043938'))))); -- 0ms;
SELECT DISTINCT (((rt1.c6)) NOT BETWEEN ((CASE rt1.c4  WHEN rt2.c3 THEN rt2.c0 ELSE rt2.c3 END)) AND (((NOT (rt0.c0))))), ((((CASE WHEN rt0.c1 THEN rt2.c4 ELSE rt1.c2 END)AND(((rt2.c0)<(rt1.c2)))))AND(AVG(rt0.c3))), MIN(((rt2.c3) IS FALSE)) FROM rt2;SELECT NULL COLLATE RTRIM, rt1.c6, (((rt1.c6)) BETWEEN ((((0.058288387276884346) BETWEEN (rt2.c6) AND (rt1.c2)))) AND (((rt2.c1 IN ())))) FROM rt0, rt2, v0, rt1, vt0 WHERE (x'' COLLATE BINARY) ORDER BY load_extension((('m萠Xj|')/(rt1.c6))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((((((((((rt1.c1)) BETWEEN ((rt1.c2)) AND (('xt'))))OR(((((((((rt2.c4)AND(vt0.c0)))AND(rt2.c2)))AND(vt0.c0)))AND(rt1.c5)))))AND(SUM(rt0.c0))))OR(CAST(NULL AS BLOB))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt2.c1))))) FROM rt0 WHERE ((((((((((((0x43413362)AND('p[5Ra')))OR('-1343384458')))OR(0.6442668706748685)))AND('0.8902448101598227')), ((((0.9905886581642314)OR('916098969')))OR(0.9187669430464199)), (('1862409850')IS(NULL))))=((((-9.75947352E8) ISNULL), ((0.9330453110298569)<(x'')), (+ (NULL))))));SELECT ((UNLIKELY(v0.c0)) ISNULL) FROM rt2, rt0, rt1, vt0, v0 WHERE ((- (CASE 0xffffffff8be10df2  WHEN NULL THEN x'' ELSE 0.30499280643609494 END))); -- 2ms;
SELECT ALL (((rt2.c0)) BETWEEN (((rt1.c6 IN ()))) AND ((NULL))) FROM v0, rt1, rt2, vt0 WHERE ((+ ((0.7680127587087366 IN (x'3534fec1'))))); -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((HEX(NULL))AND(CAST(0.4165270755599716 AS NUMERIC))))OR((('1437613538')AND(x''))))) GROUP BY rt1.c5 ORDER BY NULL ASC  NULLS FIRST;SELECT ALL ((CASE NULL  WHEN rt1.c3 THEN rt2.c1 ELSE rt1.c0 END) ISNULL), CAST(((((rt2.c4)AND(rt2.c4)))OR(rt2.c5)) AS NUMERIC), CASE WHEN ((rt1.c6)<>(rt2.c3)) THEN (((rt1.c1))=((rt1.c6))) WHEN rt0.c1 COLLATE BINARY THEN (((rt2.c1))<=((v0.c0))) WHEN ((rt2.c1) NOT NULL) THEN COUNT(rt0.c1) ELSE rt0.c0 END FROM v0, rt2, rt0, rt1 WHERE (((SUBSTR(NULL, x'')) IS FALSE)); -- 0ms;
SELECT rt2.c3, MAX(CAST(rt2.c1 AS TEXT)), '-677454448' FROM rt1, v0, rt0;SELECT DISTINCT CAST(((vt0.c0)>(rt0.c2)) AS REAL) FROM rt0, v0 WHERE (((((NULL) NOT NULL))>>(((0Xfffffffff2a50783) NOT NULL))));SELECT LIKELIHOOD(rt0.c3, 0.8110906189715097), ((rt1.c6) NOT NULL) COLLATE RTRIM, GROUP_CONCAT(HEX(rt2.c2)) FROM v0;SELECT DISTINCT ((rt2.c1)!=(CAST(rt2.c0 AS INTEGER))) FROM rt1, rt0, v0, vt0 WHERE (((LIKELY(DISTINCT '	eZ)~-')) BETWEEN (((((x'')OR(NULL)))AND('944709223'))) AND (((NULL) NOT BETWEEN ('羅37nxzR0') AND (0.0969899566375686))))) LIMIT 454814831;SELECT ALL GROUP_CONCAT(((rt2.c5)/(rt1.c5))) OVER ( GROUPS  UNBOUNDED PRECEDING), COUNT(*) OVER (), ((TRIM(rt0.c2))<>(((((rt2.c1)OR(rt0.c2)))OR(rt1.c3)))) FROM rt0, vt0, v0, rt2, rt1 WHERE ((((0.7884674452757748)) BETWEEN ((LIKELIHOOD(DISTINCT '垦\.', 0.88414376857102))) AND ((((NULL) NOT BETWEEN (0.788292676871347) AND ('-941187364')))))); -- 0ms;
SELECT DISTINCT x'' FROM vt0, rt2, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c0) NOTNULL) IN (NULL)) FROM vt0, rt1, rt0, v0 GROUP BY (~ (((v0.c0)LIKE(rt1.c2)))) HAVING (((rt2.c0) IS FALSE) IN ((rt0.c2 IN ()), TOTAL(rt2.c2)));SELECT CAST(((rt2.c1)=('u) ⪼}')) AS INTEGER) FROM vt0 GROUP BY ((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt2.c5)))=(((rt1.c0) IS TRUE)));SELECT ALL (('-906346268') ISNULL) FROM rt1, rt0, rt2, v0, vt0; -- 0ms;
SELECT rt2.c2 FROM rt0, v0, rt2; -- 0ms;
SELECT DISTINCT RANK() OVER (), NULL COLLATE BINARY, ((((0.8165675752212148)<(rt1.c3)))/(rt1.c2 COLLATE RTRIM)) FROM v0 WHERE (((x'') IS FALSE));SELECT ((CAST(rt2.c0 AS TEXT))-(rt1.c2)), ((((((((rt1.c2 COLLATE BINARY)OR(LIKELY(rt2.c4))))AND(TOTAL(rt1.c5))))OR(CASE WHEN rt1.c4 THEN rt2.c2 ELSE rt0.c0 END)))OR(((rt2.c2) NOT BETWEEN (v0.c0) AND (-6.12745404E8)))), 'n2' FROM rt0, rt1, vt0, v0 GROUP BY (rt0.c0 COLLATE RTRIM IN (((rt2.c5)<<(rt2.c0)))) HAVING CASE WHEN ((rt0.c3) IS FALSE) THEN rt2.c2 WHEN ((rt2.c4)!=(vt0.c0)) THEN ((0.8801538004808364)AND(rt0.c2)) WHEN (rt2.c0 IN ()) THEN ((vt0.c0)AND(rt2.c4)) ELSE vt0.c0 END;SELECT DISTINCT COUNT(*), CASE WHEN NULL THEN ((((((((rt0.c2)AND(rt1.c6)))AND(rt0.c3)))OR(rt1.c5)))OR(rt2.c4)) ELSE ((((0.5541255754203048)AND(rt0.c1)))OR(rt2.c1)) END, GROUP_CONCAT(((vt0.c0)>>(rt1.c4))) OVER () FROM rt0, rt1, rt2, v0;SELECT ALL '-1725794410', ((rt1.c5 IN (rt0.c2, rt0.c0)) IN ()), ((((rt2.c3) BETWEEN (rt0.c3) AND (rt2.c0))) BETWEEN (((((((((((((rt2.c6)OR(rt1.c2)))AND(rt2.c5)))OR(rt0.c1)))OR(rt2.c4)))AND(rt1.c2)))OR(rt0.c2))) AND ((+ (NULL)))) FROM rt2, v0, rt1, vt0, rt0 WHERE (']츐') GROUP BY CASE ((rt1.c0)IS NOT(rt1.c3))  WHEN ((x'')IS(rt2.c1)) THEN rt0.c2 WHEN x'' THEN ((rt1.c5)&(rt2.c4)) WHEN HEX(rt0.c1) THEN ((vt0.c0)/(rt2.c0)) END; -- 0ms;
SELECT ALL CASE (((NULL)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))  WHEN LIKELIHOOD('F[^', 0.23426078255287586) THEN rt2.c3 COLLATE NOCASE WHEN CAST(0.17691039048752366 AS REAL) THEN 0.5181159253562339 WHEN ((vt0.c0)=(rt2.c2)) THEN ((NULL) IS FALSE) END, ((rt1.c4 IN ()) IN ()), (((((~ (rt2.c3)))OR(TRIM(rt0.c2, rt1.c2))))AND(CASE rt0.c1  WHEN rt1.c6 THEN rt1.c5 ELSE rt2.c6 END)) FROM rt1, v0, rt2, rt0, vt0; -- 0ms;
SELECT (x'5223' IN ()) COLLATE BINARY FROM rt1, v0, rt2, rt0, vt0 WHERE ((('4ﾄꙙ' COLLATE NOCASE) NOT BETWEEN (((0X33d4b58e) BETWEEN (0.9185986057571357) AND (0xfffffffffd7ef4c1))) AND ((x'' IN ())))); -- 1ms;
SELECT (- (((((((((rt1.c1)OR(rt2.c4)))AND('E')))AND(0x54d8f31f)))OR('8045513')))) FROM rt1, v0 ORDER BY (((rt2.c0)) BETWEEN ((((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt0.c1)))) AND ((CASE WHEN rt1.c4 THEN rt2.c1 WHEN v0.c0 THEN '-1826556190' WHEN rt1.c6 THEN rt2.c2 END)));SELECT TOTAL(CASE WHEN rt1.c3 THEN rt2.c0 ELSE rt2.c6 END), LOWER(DISTINCT CAST(rt2.c6 AS INTEGER)), SUM(CAST(v0.c0 AS BLOB)) OVER () FROM rt1, v0, rt2 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT ALL CASE WHEN ((rt2.c0)/(vt0.c0)) THEN ((rt0.c2)%(rt0.c2)) END, rt2.c3, ((((rt2.c1) BETWEEN (8.95553341E8) AND (rt2.c1)))LIKE((((rt2.c6))>=((rt1.c2))))) FROM rt2, vt0, rt1;SELECT DISTINCT (0.05834541999826681 IN ()), CASE (+ (rt0.c2))  WHEN ((rt1.c5)<<(vt0.c0)) THEN ((rt2.c3) NOT BETWEEN (rt0.c2) AND (rt1.c5)) END, (+ (((rt2.c2) ISNULL))) FROM rt0, v0 WHERE (QUOTE(((0.47126052253209183)<>(x'')))) GROUP BY (((rt0.c1, ((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0)), rt0.c2))>(((vt0.c0 IN (rt1.c5)), CASE WHEN rt0.c0 THEN rt2.c2 ELSE 0.9624766447189096 END, 0.912443474143391))), (- (((rt0.c3) NOT NULL))), rt2.c4 COLLATE NOCASE;SELECT ((((rt0.c2) BETWEEN ('-241998040') AND (rt1.c1))) NOT BETWEEN ((NOT (rt2.c5))) AND (CASE WHEN rt0.c2 THEN rt0.c3 WHEN x'49a8' THEN rt1.c4 WHEN rt2.c6 THEN rt1.c0 ELSE rt1.c3 END)), x'60db', (((rt2.c6 IN ())) IS TRUE) FROM rt0, vt0, rt2 WHERE (x'');SELECT COUNT(*) FROM v0, rt1 WHERE (((((0.0956136164674316) NOT BETWEEN ('') AND (0.3249695813280221)))>('' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)<(rt2.c0))  WHEN '1103381320' THEN ((rt2.c2) IS FALSE) ELSE ((((rt1.c0)AND(rt2.c1)))AND(rt0.c2)) END FROM rt1, rt0 WHERE (NULL);SELECT CAST(((rt1.c5)<=(rt0.c1)) AS BLOB) FROM v0, rt0, rt2;SELECT DISTINCT UNLIKELY(CAST(rt1.c1 AS TEXT)), GROUP_CONCAT(((rt0.c3)LIKE(rt0.c1))), (v0.c0 IN ()) FROM rt2, rt1 WHERE (CAST(0.9868419622302826 AS REAL));SELECT DISTINCT (((+ (rt2.c2)))LIKE(((rt1.c3)<=(v0.c0)))) FROM v0, rt1, rt0;SELECT DISTINCT (((rt2.c3)*(rt2.c2)) IN ((rt2.c5 IN ()))), (- (((rt0.c0)<<(rt2.c1)))), TOTAL(((rt2.c1) NOT NULL)) OVER () FROM v0, vt0, rt1 NOT INDEXED, rt2, rt0 WHERE (((NULL) NOT NULL)) GROUP BY rt1.c6; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt2; -- 0ms;
SELECT CASE (- (0.1211637571315558))  WHEN ((vt0.c0)!=(rt0.c3)) THEN (((rt0.c3))>((rt1.c1))) WHEN (rt2.c1 IN (rt1.c4)) THEN CASE rt2.c5  WHEN rt2.c3 THEN rt1.c2 END WHEN (((428689121)) BETWEEN ((x'8feb')) AND ((rt2.c1))) THEN json_array(rt2.c2, rt1.c4) END FROM vt0, rt0, rt1 WHERE (((((0x20056d03)LIKE(x''))) BETWEEN ((((x'')) BETWEEN ((x'9813')) AND ((NULL)))) AND ('325073522')));SELECT ((v0.c0) NOT BETWEEN ((((x'', rt1.c3, v0.c0, v0.c0, rt2.c2, rt2.c3, rt1.c5)) NOT BETWEEN ((rt2.c6, rt1.c3, NULL, rt1.c1, rt1.c4, rt2.c6, vt0.c0)) AND (('0.5295076438699624', 0.6128584206798652, rt2.c0, rt1.c2, rt2.c3, '106940181', rt1.c4)))) AND (((rt0.c1)GLOB(vt0.c0)))) FROM rt0 WHERE ((((((('632565122')OR(-233303042)))OR(NULL)))+(json_type(5.14328027E8)))) ORDER BY (((((rt2.c0) NOTNULL), (NOT (0xffffffffd2c05ee5)), 1715282528))<=((SQLITE_SOURCE_ID(), 0.17834183810481297, ((((rt2.c3)AND(v0.c0)))OR(rt1.c4)))));SELECT DISTINCT CAST(rt0.c3 COLLATE NOCASE AS TEXT) FROM rt2, v0 WHERE (((((x'')<=(0.4361567680261009))) IS FALSE));SELECT DISTINCT ((((rt2.c6) BETWEEN (rt0.c0) AND (rt1.c1))) BETWEEN (CAST(rt1.c3 AS NUMERIC)) AND (((v0.c0) ISNULL))) FROM rt1 ORDER BY (~ (CAST(rt2.c4 AS BLOB))) ASC  NULLS LAST;SELECT ALL LIKELIHOOD(DISTINCT GROUP_CONCAT(rt1.c6), 0.7436273695720308), ((((NOT (rt2.c5)), ((((v0.c0)OR(rt0.c3)))OR(rt2.c6)), ((' *-Ur') BETWEEN (rt2.c6) AND (rt0.c2))))>((((rt2.c0)+(rt2.c1)), ((rt2.c0) BETWEEN (rt0.c1) AND (rt0.c1)), (NOT (rt2.c3))))), TOTAL((rt1.c6 IN (rt1.c6))) OVER () FROM rt1, rt0, vt0, v0, rt2; -- 0ms;
SELECT DISTINCT (((rt2.c2 IN (rt2.c2)))GLOB(((rt1.c1)AND(rt2.c0)))) FROM vt0, v0, rt2, rt1, rt0 WHERE (((((NULL) BETWEEN (NULL) AND (x''))) IS FALSE)); -- 0ms;
SELECT (((((rt1.c5) IS FALSE)))>=(((+ (rt2.c4))))), '/꛱', NTILE(((((((vt0.c0) NOTNULL))AND(((rt1.c1) IS TRUE))))OR((rt1.c4 IN (v0.c0, rt1.c5))))) OVER (), (CASE rt1.c4  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN (CAST(rt0.c0 AS NUMERIC))), CAST(((rt2.c0) BETWEEN ('|') AND (rt0.c0)) AS TEXT) FROM vt0, rt1, v0;SELECT ALL (+ (CAST(rt2.c0 AS TEXT))) FROM rt2 WHERE ((0.21281567600324602 COLLATE BINARY IN ())) ORDER BY (NOT (((rt1.c0) NOTNULL)));SELECT DISTINCT 0.836784447067247, '', COUNT(((rt1.c1)GLOB(rt2.c4))) FROM rt1, vt0, rt0, rt2, v0 WHERE (((((((x'2d6a'))<((0x23cac115)))))<(((('n6')==(NULL)))))); -- 0ms;
SELECT (rt2.c4 IN ()) COLLATE BINARY, COUNT(rt2.c4) COLLATE NOCASE, ((rt2.c5) BETWEEN (v0.c0) AND (rt2.c3)) COLLATE BINARY FROM vt0, rt1 GROUP BY (NOT (((vt0.c0)<(rt1.c3))));SELECT DISTINCT ((((((rt0.c0) IS TRUE))AND((NOT (rt2.c1)))))OR((rt0.c1 IN ()))), (((v0.c0 IN (rt1.c0)))IS NOT(GROUP_CONCAT(rt2.c6))), NULL FROM rt0, rt2, vt0, v0, rt1; -- 0ms;
SELECT (+ (x'4c093193')) FROM rt0, rt1, v0; -- 0ms;
SELECT DISTINCT ((((~ (vt0.c0))))>((UPPER(rt0.c3)))) FROM rt1, v0, vt0;SELECT DISTINCT (NOT (CAST(rt1.c2 AS REAL))) FROM vt0, v0, rt2, rt1, rt0 WHERE (((((NULL) NOT BETWEEN (0.4053794408699013) AND (0.6795602242288209)))%(((0X472ae981) ISNULL)))); -- 0ms;
SELECT ALL (CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END IN (CASE v0.c0  WHEN v0.c0 THEN rt2.c3 ELSE v0.c0 END, CAST(rt2.c5 AS INTEGER))) FROM rt2, vt0, rt0, v0 WHERE (x'ece8' COLLATE NOCASE);SELECT DISTINCT CASE WHEN ((rt2.c4)<(v0.c0)) THEN (NOT (rt2.c6)) WHEN (- (rt2.c2)) THEN ((rt1.c6)<(rt1.c6)) WHEN CASE rt2.c6  WHEN rt2.c3 THEN rt0.c0 ELSE vt0.c0 END THEN (rt2.c1 IN (rt1.c6)) END FROM rt2, vt0, rt1 WHERE (CAST((0.9380844577450922 IN ()) AS NUMERIC));SELECT DISTINCT ((((((((((rt0.c0)IS NOT(rt1.c1)))AND(CAST(vt0.c0 AS BLOB))))AND(rt0.c3)))AND(((((rt1.c6)AND(rt1.c1)))OR(rt1.c4)))))AND((rt0.c3 IN ()))), ((load_extension(rt1.c6, rt1.c5))LIKE(rt1.c2 COLLATE BINARY)), UPPER(DISTINCT (((rt0.c0))>=((rt0.c1)))) FROM vt0, rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)AND(rt0.c0))  WHEN NULL THEN ((rt2.c2)-(rt1.c2)) WHEN ((((rt2.c4)AND(rt0.c2)))OR(rt0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) WHEN ((rt0.c3)==(rt2.c1)) THEN ((rt2.c6)-(rt1.c3)) END, CASE WHEN rt1.c4 THEN CASE WHEN rt0.c0 THEN rt2.c0 ELSE rt1.c6 END END, ((TOTAL(rt1.c5))|(((6.00490261E8) NOT BETWEEN (rt2.c1) AND (rt1.c3)))) FROM rt2, rt1, vt0, rt0, v0 ORDER BY CASE ((rt2.c6) NOT BETWEEN (rt0.c1) AND (rt1.c3))  WHEN rt1.c3 THEN ((rt0.c2)&(rt2.c6)) END ASC; -- 0ms;
SELECT DISTINCT UNICODE((rt1.c4 IN (0.15928044192990454))), (- ((rt2.c1 IN (rt2.c1)))), CAST(IFNULL(rt1.c0, rt1.c2) AS INTEGER) FROM rt0 LIMIT -836163405;SELECT DISTINCT CASE rt2.c5  WHEN (+ (rt0.c3)) THEN rt2.c5 WHEN CASE rt0.c2  WHEN 1.000926488E9 THEN rt1.c6 WHEN rt1.c6 THEN rt1.c4 WHEN rt2.c6 THEN rt1.c4 END THEN ((rt2.c6)+(rt0.c2)) WHEN rt2.c0 COLLATE RTRIM THEN json_object(rt1.c0, rt2.c1) END FROM rt1, vt0, rt2 WHERE ((((0.026269809439057323))=((0.22983276723729107))) COLLATE RTRIM);SELECT v0.c0 FROM v0, rt0, rt2, rt1 WHERE (CASE WHEN NULL COLLATE BINARY THEN (((x'22a3'))>=((0.10499562658940564))) END); -- 0ms;
SELECT DISTINCT ((MAX(rt1.c3))*(rt1.c2)) FROM vt0, rt1, rt2 NOT INDEXED, rt0, v0 WHERE ((((('-1814309136')IS(x'')))+((1 IN ())))); -- 0ms;
SELECT DISTINCT (((rt1.c3, rt1.c5, rt1.c5)) NOT BETWEEN (((((x'fa1a'))=((x''))), ((rt1.c0)*(rt1.c3)), CAST(rt2.c1 AS REAL))) AND ((rt0.c3, ((v0.c0)%(NULL)), ((rt1.c0)|(rt0.c0))))) FROM rt2, v0, vt0 WHERE (CASE WHEN ((0X17d0cc72)<=(NULL)) THEN (0.26254192070367666 IN (0x7688278, '')) ELSE ((0.24371396323741623)LIKE(NULL)) END);SELECT ALL 0.22226122066018128, ((((vt0.c0) IS FALSE)) NOT BETWEEN (rt2.c3 COLLATE NOCASE) AND (MAX(rt1.c1))), CAST('' AS INTEGER) FROM v0, rt0, rt2, vt0, rt1 WHERE (((((((0X430b6e63)%(0x6e0f1d91)))AND((NOT (NULL)))))AND((0x76cbf65d IN (NULL, x'cb27'))))); -- 0ms;
SELECT DISTINCT MAX(((rt1.c0) NOTNULL)) COLLATE RTRIM FROM vt0, rt2 WHERE ((+ ((((0.11741289421378553))>((''))))));SELECT DISTINCT ((((0.9012881285014656)AND(json_array(rt0.c0, rt2.c2))))OR((- (rt2.c5)))), TYPEOF((((v0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))), AVG((rt2.c0 IN ())) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE TIES) FROM rt0, v0, rt2, rt1 WHERE (((CAST(NULL AS TEXT))=(CAST(-953728951 AS REAL)))); -- 0ms;
SELECT DISTINCT '383711393' FROM vt0, v0, rt1; -- 0ms;
SELECT DISTINCT (((((('1#sA')<<(rt2.c4)))OR(((((rt1.c0)AND(rt2.c0)))OR(rt1.c1)))))AND(CAST(rt0.c1 AS INTEGER))) FROM v0, vt0, rt2, rt1 WHERE (((((x'92dd')&('')))>=((((('155414121')OR(0.40183125094642325)))AND('')))));SELECT ALL ((((rt1.c5)/(rt2.c0))) BETWEEN ((NOT (rt1.c5))) AND (((rt1.c6)>>(rt1.c1)))) FROM rt2 WHERE (TRIM(('404188658' IN (x''))));SELECT ALL CAST(((rt2.c5) BETWEEN (rt1.c4) AND (rt1.c3)) AS TEXT) FROM v0, rt0 WHERE (CASE WHEN (('?襙a')+('*?iDUmC')) THEN ((((((((NULL)AND(206257645)))OR('ꀘ}+A')))AND('951041533')))AND(0.08455136367672411)) END);SELECT ALL (((rt2.c4)) NOT BETWEEN ((CASE WHEN rt2.c3 THEN rt2.c0 WHEN rt0.c3 THEN NULL WHEN vt0.c0 THEN rt2.c0 ELSE rt2.c1 END)) AND ((COUNT(*)))) FROM rt1, rt0, vt0, rt2; -- 0ms;
SELECT CAST(rt1.c0 COLLATE RTRIM AS NUMERIC) FROM rt0, rt1 GROUP BY ((((rt2.c5)OR((((rt0.c0))==((rt2.c3))))))AND('ih'));SELECT DISTINCT LIKELY(((rt2.c1)GLOB('荪'))) FROM v0, vt0 WHERE (LOWER(DISTINCT 9.44709223E8)) GROUP BY ((((rt0.c3)<<(v0.c0))) NOT BETWEEN ((v0.c0 IN ())) AND ((((rt1.c4)) BETWEEN ((rt0.c0)) AND ((rt1.c5))))) HAVING SUM((- (rt0.c1))) LIMIT 15604776;SELECT CAST((((vt0.c0))<((rt1.c2))) AS REAL), (((rt1.c4 IN ())) BETWEEN (CASE WHEN rt2.c6 THEN NULL END) AND ((~ (v0.c0)))), NTH_VALUE(((((vt0.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN (vt0.c0, 0.8349938030101309))) AND (((rt0.c0) IS TRUE))), CASE WHEN ((0.47199136793319796) NOT NULL) THEN CASE WHEN rt0.c0 THEN 'Pm' WHEN rt2.c4 THEN rt2.c1 WHEN rt2.c6 THEN rt0.c1 ELSE rt0.c0 END WHEN ((rt0.c0) NOTNULL) THEN v0.c0 COLLATE BINARY WHEN 'kᒪT෴MQ' THEN rt2.c1 COLLATE BINARY END) OVER () FROM vt0, rt0, rt2, v0;SELECT HEX(x'' COLLATE BINARY) FROM rt0, rt1, rt2, v0, vt0; -- 1ms;
SELECT NULLIF(DISTINCT (((vt0.c0))<>((rt0.c1))), (rt2.c4 IN ())) FROM rt0, vt0, rt1 WHERE (((((((x'')<>(NULL)))AND(((x'')IS NOT('')))))OR(CAST('' AS NUMERIC)))); -- 0ms;
SELECT ALL x'' FROM rt1, vt0 WHERE (((((((0.18259400340847942)AND('_V')))AND(x''))) NOT NULL)); -- 0ms;
SELECT DISTINCT rt1.c1, ((((rt1.c0)&(rt1.c1))) BETWEEN ((((rt2.c1)) BETWEEN ((rt2.c5)) AND ((rt2.c4)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))), ((((NULL IN ()), (((rt2.c2)) BETWEEN ((rt2.c2)) AND ((rt2.c6))), CAST(rt2.c4 AS INTEGER)))<=((0.6735954355106823 COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(rt0.c2), ((((rt0.c0)OR(rt2.c3)))AND(rt0.c1))))) FROM rt0, v0, rt1, rt2;SELECT DISTINCT ((CAST(rt2.c2 AS INTEGER)) NOT NULL) FROM rt1;SELECT DISTINCT ((rt2.c3)<>((((rt2.c4))>((rt2.c4))))), vt0.c0, IFNULL(rt0.c2, (((rt2.c5))<((v0.c0)))) FROM vt0, rt2, rt1, rt0;SELECT DISTINCT TRIM(DISTINCT rt2.c5) FROM v0, rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT 0.5390747512040056, SQLITE_COMPILEOPTION_GET(((((rt2.c2)AND(rt0.c0)))AND(rt2.c0))), (((NULL) NOT BETWEEN (0.9502763449409232) AND (vt0.c0)) IN ((((rt2.c5, rt2.c6, rt1.c1, rt0.c2, v0.c0))<((rt2.c0, rt0.c3, rt0.c0, rt1.c2, rt1.c3))))) FROM rt2, rt1, vt0, rt0, v0 GROUP BY ((((((((((x'5205')OR(rt0.c0)))OR(rt2.c1)))OR(rt2.c2)))AND(v0.c0))) NOTNULL) HAVING (((0.4797036785733211)IS NOT(rt1.c1)) IN ()); -- 1ms;
SELECT ALL (((rt2.c1 IN ())) NOTNULL) FROM rt0, rt1, rt2 WHERE ((((((((((((((('170633558')AND(x'4224')))AND(x'')))AND('-621134469')))OR(NULL)))OR(0.10740410820045099)))AND(NULL))) BETWEEN (((8.50178682E8)LIKE(x''))) AND (CAST(0xfffffffffc418839 AS BLOB)))) ORDER BY rt2.c5, x'', ((CAST(rt2.c1 AS BLOB)) BETWEEN ((rt1.c5 IN ())) AND (((rt1.c6)>=(rt1.c5)))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)LIKE(rt2.c0)) AS TEXT) FROM rt0, vt0;SELECT DISTINCT ((((CAST(rt2.c5 AS REAL))AND(((rt1.c6)|(rt0.c3)))))AND(TOTAL('we'))) FROM v0, vt0, rt1 WHERE (((((('')*(484102378))))!=((IFNULL(DISTINCT '0.9400973178443415', 0.15648138703211945)))));SELECT DISTINCT ((((CASE WHEN rt2.c5 THEN rt2.c3 WHEN NULL THEN rt0.c1 WHEN rt0.c3 THEN rt1.c5 END)AND(((rt0.c1)<<(rt2.c3)))))AND(((((x'')OR(rt1.c1)))OR(v0.c0)))) FROM rt0, v0, vt0, rt2, rt1 WHERE (CASE ((-1.836985744E9)IS('-519376983'))  WHEN ((NULL)OR(NULL)) THEN '' END); -- 0ms;
SELECT ALL CAST(CASE rt1.c1  WHEN 0.1060044949522213 THEN rt0.c0 END AS REAL) FROM vt0, rt0, rt2 WHERE (((NULL)||(NULL)) COLLATE RTRIM);SELECT (((((((((((rt2.c6)) BETWEEN ((rt0.c3)) AND ((rt2.c6))))OR(((rt2.c5)-(rt2.c1)))))OR(CAST(rt2.c5 AS BLOB))))AND(CAST(rt2.c4 AS INTEGER))))OR(CAST(rt1.c3 AS BLOB))) FROM vt0, v0, rt1;SELECT DISTINCT 0.6009270080536094 COLLATE NOCASE FROM rt0 CROSS JOIN rt2 ON CAST(rt2.c3 AS BLOB) COLLATE RTRIM; -- 0ms;
SELECT ALL (((NULL)) NOT BETWEEN ((((vt0.c0)>=(rt1.c4)))) AND (((NOT (rt2.c2))))), NULL, (((((NULL)>=(rt1.c1))))!=((((((rt1.c4)AND(rt1.c6)))OR(rt2.c5))))), ((rt1.c2 COLLATE BINARY) ISNULL), ((rt0.c3) ISNULL) FROM v0, rt0, rt1, rt2, vt0 WHERE ((CAST(x'' AS NUMERIC) IN ())) GROUP BY ((((((rt1.c5) ISNULL))OR(((rt1.c2)<(0.006505502153227094)))))OR(CASE rt1.c6  WHEN rt0.c1 THEN '' END)), (((rt2.c3)) NOT BETWEEN ((((x'0f94') NOT BETWEEN (rt0.c3) AND (v0.c0)))) AND (((rt1.c5 IN (rt2.c3))))), (((((((8.69578126E8)AND(rt0.c2)))AND(rt1.c0))))<=((rt1.c5))) HAVING CASE WHEN rt2.c1 COLLATE BINARY THEN (((rt1.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt2.c0))) WHEN rt2.c1 THEN ((rt2.c0) BETWEEN (0.801196008074712) AND (rt0.c2)) WHEN ((rt2.c0) NOT BETWEEN (NULL) AND (rt2.c4)) THEN ((rt1.c6) BETWEEN (rt2.c2) AND ('1258212838')) ELSE rt2.c1 END; -- 0ms;
SELECT ALL ((0X577c12e2)-(((rt1.c4)+(rt1.c5)))), json_valid(CAST(rt2.c1 AS NUMERIC)), ((((((rt1.c6)AND(rt2.c6)))AND(rt2.c2)))|(((rt0.c3) ISNULL))), (((rt1.c5) NOT NULL) IN (((((rt2.c6)OR(rt1.c1)))AND(rt2.c1)))), '0.3884916846391794' FROM rt1;SELECT DISTINCT MAX(0.825489668581943) FROM rt2, rt1, v0 WHERE (((SQLITE_SOURCE_ID())<=(((NULL)<<(x'49f6'))))) GROUP BY (((CAST(rt1.c0 AS NUMERIC)))<((CASE WHEN rt2.c1 THEN rt2.c4 ELSE rt1.c6 END))), rt1.c2 COLLATE BINARY, (rt1.c6 COLLATE RTRIM IN ((((rt1.c6)) BETWEEN ((rt2.c5)) AND ((rt2.c5))), ((v0.c0)|(rt0.c2)))) HAVING (~ (SUM(rt2.c0)));SELECT ALL rt2.c4, rt1.c2, 0.3948969497901015 FROM rt2 WHERE (((((((x'')&(x'fc04')))AND(json_quote(0.3222723201331483))))OR(((x'dfc7614e')>(x'')))));SELECT ((((((((((((rt2.c4)OR(rt0.c3)))OR(v0.c0)))AND(vt0.c0)))AND(rt0.c3)))OR(rt1.c0 COLLATE BINARY)))AND((((rt2.c5))>=((rt2.c0))))) FROM v0, rt2 WHERE (CAST((0.4683066631678724 IN ()) AS REAL));SELECT ALL 1146947269 FROM rt1, rt0, rt2, v0, vt0 WHERE (CASE ((((x'')AND(NULL)))OR(NULL))  WHEN ((0.5669818618807195)>(x'')) THEN ((((0.769592637454219)AND(1.690419949E9)))AND(0.7608531826200393)) END); -- 0ms;
SELECT ALL COALESCE(DISTINCT (+ (0x23cac115)), 1.058224078E9), (~ (((rt2.c4) NOT BETWEEN (rt2.c3) AND (rt0.c2)))), (rt0.c3 IN ()) COLLATE BINARY, ((json_insert(rt1.c5, v0.c0, rt2.c6, rt0.c3, rt1.c5, v0.c0, rt1.c4)) NOTNULL), (((rt1.c5)) BETWEEN ((((rt0.c3)<=(rt0.c1)))) AND ((((rt1.c2)<>(rt2.c1))))) FROM v0;SELECT DISTINCT LAST_VALUE(((((rt0.c0)%(rt1.c2))) BETWEEN ((+ (rt2.c6))) AND (((rt2.c0)<>(-223050951))))) OVER () FROM rt2, rt1, rt0, v0 LIMIT -1355907379 OFFSET -432871195; -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN rt2.c1 THEN rt2.c2 ELSE rt0.c2 END)) FROM vt0, rt0;SELECT DISTINCT (((rt1.c0) IS TRUE) IN ('U\n\njm')) FROM vt0, v0, rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c2, COUNT(*) OVER ( ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN x'8344' THEN UNLIKELY(rt1.c3) ELSE ((rt1.c5) IS FALSE) END  NULLS LAST, CASE INSTR(rt2.c6, rt2.c0)  WHEN ((rt2.c4) ISNULL) THEN CAST(rt2.c4 AS INTEGER) WHEN (((vt0.c0, rt1.c5, v0.c0))<=((x'7d2b', rt1.c0, rt2.c4))) THEN (((rt2.c0, rt1.c3, rt0.c1)) NOT BETWEEN (('N!', rt1.c4, rt2.c2)) AND ((rt0.c2, 0.9495455238486633, rt0.c1))) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c2 WHEN v0.c0 COLLATE NOCASE THEN (((rt1.c1, rt2.c6, rt2.c6)) BETWEEN ((rt1.c1, 0.5910576320464829, rt0.c0)) AND ((rt2.c1, NULL, rt2.c6))) WHEN NULLIF(rt2.c4, v0.c0) THEN CAST(rt2.c6 AS TEXT) ELSE (+ (rt1.c0)) END  NULLS FIRST, ((((((((rt2.c6)AND(((rt2.c1)>>(rt2.c4)))))OR(((rt2.c2)>(rt2.c0)))))OR(rt1.c1)))AND(rt2.c3)) DESC  NULLS LAST), x'2b8388cc' FROM v0, rt2, rt1, rt0, vt0 WHERE ((TOTAL_CHANGES() IN ())); -- 0ms;
SELECT (((((rt1.c2, rt2.c5, rt1.c5)) BETWEEN ((rt1.c5, rt2.c5, rt2.c0)) AND ((rt2.c3, rt1.c4, rt0.c1)))) IS FALSE) FROM vt0, rt2, rt0, rt1, v0 LIMIT -2134196164; -- 0ms;
SELECT DISTINCT ((((((NULL) BETWEEN (rt1.c6) AND (x'f7a0')))AND((NOT (rt1.c4)))))OR('z	wP,og儷')) FROM vt0 LEFT OUTER JOIN rt0 ON (NOT (0x1697f02e));SELECT ((((x'0621' IN (rt1.c5)), TRIM(rt1.c2), ((((rt2.c1)OR(rt1.c5)))OR(rt0.c3))))>((rt2.c6, ((rt2.c1) BETWEEN (0X6b9a8134) AND (rt2.c6)), (rt1.c4 IN (rt1.c0, rt2.c5))))) FROM rt1, vt0, rt0;SELECT DISTINCT ((CAST(rt2.c4 AS REAL))*(MAX(NULL))) FROM rt2, v0, rt0 GROUP BY ((((((rt2.c0)OR(rt1.c0)))OR(rt2.c6)))||(rt2.c4 COLLATE NOCASE));SELECT DISTINCT ((((rt2.c6) NOT NULL))IS NOT((+ (vt0.c0)))) FROM v0;SELECT ALL '0.4493302714849189' COLLATE NOCASE FROM rt1, rt0, vt0, rt2 WHERE ((((-612745404 IN (-1451552594)))LIKE(CASE WHEN '' THEN 0x616af707 END))); -- 0ms;
SELECT DISTINCT ((((rt2.c2)OR(x''))) BETWEEN (((rt0.c1) ISNULL)) AND (((((NULL)OR(rt0.c0)))OR(rt1.c1)))) FROM rt0, rt1 INNER JOIN v0 ON ((CASE WHEN rt1.c1 THEN rt2.c3 WHEN rt2.c5 THEN rt2.c5 WHEN rt1.c1 THEN rt1.c4 ELSE vt0.c0 END)=(((rt1.c0)IS NOT(rt2.c2)))) FULL OUTER JOIN vt0 ON CAST(rt0.c2 AS INTEGER) COLLATE NOCASE WHERE (CASE CASE NULL  WHEN -1.358559766E9 THEN '' WHEN '143129492' THEN '' WHEN '' THEN '273361178' END  WHEN CASE WHEN '1947385546' THEN '0.5636927325594521' END THEN CAST(0.5999767884401309 AS INTEGER) ELSE CASE WHEN NULL THEN 0.10029680350991965 END END);SELECT ALL (CAST(vt0.c0 AS TEXT) IN ()), ((rt2.c2)*(rt0.c1)) COLLATE NOCASE, (((~ (v0.c0))) IS FALSE) FROM vt0, rt0, v0, rt1 WHERE (((CAST(0.06767481495700767 AS NUMERIC)) IS TRUE));SELECT ALL LEAD((((v0.c0) BETWEEN (rt2.c6) AND (v0.c0)) IN (LOWER(DISTINCT rt1.c5))), json_object(json(rt2.c4), ((0.9416281652001053) BETWEEN (rt1.c0) AND (rt2.c2))), (((~ (rt2.c2))) NOTNULL)) OVER ( GROUPS  CURRENT ROW EXCLUDE TIES) FROM rt1, rt2, v0 WHERE (((('''V')) BETWEEN (((((-1.836985744E9, '1104374524', 'pw'))>(('', x'', 0Xffffffffba07e697))))) AND ((0.9646884893915268 COLLATE NOCASE)))); -- 1ms;
SELECT DISTINCT ((CASE WHEN rt2.c3 THEN rt2.c5 WHEN rt0.c2 THEN rt2.c6 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((1.361176359E9) BETWEEN (rt1.c2) AND ('78'))) AND ((rt0.c1 IN (rt2.c4)))) FROM rt0;SELECT ALL AVG((rt0.c1 IN (v0.c0))), (v0.c0 IN ()), ((((PRINTF(rt2.c1))AND(CASE WHEN rt0.c3 THEN rt1.c3 WHEN rt1.c3 THEN '543607163' WHEN rt2.c5 THEN rt1.c5 ELSE NULL END)))OR(CASE rt0.c2  WHEN rt2.c5 THEN rt0.c1 WHEN rt1.c1 THEN rt2.c3 WHEN rt2.c5 THEN rt1.c4 ELSE rt1.c6 END)) FROM rt0, v0 WHERE ((((x''))<=((NULL)))) GROUP BY ((((rt2.c4) NOTNULL)) BETWEEN (CAST(rt1.c2 AS BLOB)) AND (json_remove('1124822627', rt2.c3))), ((rt2.c2)>=(((rt1.c1)|(rt1.c3)))), ((CAST(rt2.c5 AS TEXT))>>(CAST(x'11a9' AS BLOB))) HAVING COUNT((((rt0.c0))<>((rt0.c1))));SELECT DISTINCT (((rt1.c5)) NOT BETWEEN ((((rt0.c1)GLOB(NULL)))) AND ((CAST(rt0.c3 AS BLOB)))) FROM rt0, rt2, rt1, vt0, v0 WHERE ((~ (UPPER(x'f360')))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c3) NOT NULL))AND(((rt2.c0)<(rt0.c1)))))OR((rt2.c5 IN ()))))OR('-2048443960')))AND('0.1812643759847452')) FROM rt0 RIGHT OUTER JOIN rt2 ON (((rt1.c4)GLOB(rt1.c5)) IN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt2.c4 END)) INNER JOIN rt1 ON x'';SELECT DISTINCT CASE (rt2.c4 IN ())  WHEN rt0.c1 COLLATE BINARY THEN (+ (rt1.c6)) END FROM rt2 WHERE ((((+ (NULL)))AND(1592441665 COLLATE NOCASE)));SELECT DISTINCT ((((rt1.c3) BETWEEN (rt2.c3) AND (rt0.c0)))GLOB(TOTAL(v0.c0))), ((TOTAL(v0.c0)) BETWEEN ((rt1.c4 IN ())) AND (vt0.c0)), ((x'c305c6d1')=(x'')) FROM rt0, rt1, rt2, vt0 WHERE (0.670358789487245);SELECT ALL (((((rt1.c4) ISNULL)))==(((NOT (rt1.c1))))), TOTAL(rt0.c0 COLLATE RTRIM COLLATE NOCASE) FILTER(WHERE (- (rt2.c0))) OVER (), ((((rt2.c6) ISNULL))<((+ (rt0.c3)))) FROM rt1 WHERE (((NULL COLLATE NOCASE)IS((+ ('i_')))));SELECT ALL (((((rt2.c5)AND(vt0.c0)))AND(rt2.c0)) IN ()) FROM rt2, rt1, v0, rt0, vt0; -- 0ms;
SELECT DISTINCT SUM(((((rt1.c3)OR(rt2.c1)))OR(rt2.c4))) FROM vt0, rt2, rt1, rt0, v0 LIMIT -1552936062 OFFSET 2092930621; -- 0ms;
SELECT DISTINCT (((('-884076514')OR(((rt1.c5) BETWEEN (rt2.c1) AND (rt2.c6)))))OR(rt0.c1)) FROM rt1 WHERE (((NULL)!=(((NULL)GLOB(x'e994')))));SELECT COUNT((rt2.c2 IN ())) FROM rt2, rt0 WHERE (((((('-1575290025') BETWEEN (0.19103084011015437) AND (0.26976688293385553)), (('-597504144')==('sq')), (('-1991346448')<(NULL)), ABS(x''), UPPER(-8604464.0)))==((((0Xfffffffff0255474) NOT BETWEEN (0.8165675752212148) AND (NULL)), ((NULL)+(0Xffffffffd31244ef)), SQLITE_SOURCE_ID(), (((('2L')OR('-96694764')))AND('2092930621')), ((((((((NULL)OR(0.7848829148982447)))OR(0.11568286700840891)))OR(x'')))OR(0.7544613619049997)))))); -- 0ms;
SELECT ALL v0.c0, CAST(((rt2.c1)>(rt2.c0)) AS NUMERIC), (COUNT(rt1.c1) IN ()) FROM rt0, rt2, rt1, vt0, v0 WHERE ((((+ ('^'))) IS FALSE)); -- 1ms;
SELECT CAST((rt0.c0 IN ()) AS REAL) FROM vt0 GROUP BY CASE (+ (rt1.c5))  WHEN ((rt2.c3) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN DATETIME(rt1.c0, rt0.c1, rt1.c1) ELSE (+ (rt0.c1)) END HAVING 0.8495659540728526 COLLATE BINARY;SELECT json_extract(NULL, ((rt1.c6) IS FALSE), ((rt1.c5) BETWEEN (rt1.c4) AND (rt2.c4)), 682943519, CASE rt1.c2  WHEN rt1.c0 THEN x'e367' END, ((rt1.c5) BETWEEN (rt2.c1) AND (rt1.c1))) FROM v0, vt0, rt2 WHERE ((((0.07687346811902684)OR('dB92>pJU')) IN ()));SELECT ALL CAST(((rt2.c5) IS TRUE) AS TEXT) FROM rt2, vt0 WHERE (CAST(CAST(2038226539 AS INTEGER) AS TEXT)); -- 0ms;
SELECT ALL CAST((+ (rt1.c6)) AS REAL) FROM rt2 WHERE (((CAST('860018398' AS INTEGER)) NOT NULL));SELECT DISTINCT (CASE rt2.c4  WHEN '' THEN rt1.c0 ELSE rt0.c3 END IN ()), (CASE vt0.c0  WHEN rt2.c2 THEN rt2.c6 ELSE rt0.c3 END IN ()), LAST_VALUE(rt0.c1) OVER (), json_patch(((((rt1.c5)OR(rt2.c5)))OR(rt1.c3)), UNLIKELY(DISTINCT rt1.c5)), CAST(((((rt0.c0)OR(rt1.c4)))OR(-1963511050)) AS TEXT) FROM rt0, rt1, vt0 WHERE (((HEX(x'')) NOTNULL));SELECT DISTINCT (+ (rt1.c0 COLLATE NOCASE)), (((+ (rt1.c6))) BETWEEN (((rt0.c2)+(rt2.c5))) AND ((NOT (rt2.c0)))), ((CAST(vt0.c0 AS BLOB)) IS TRUE) FROM v0;SELECT DISTINCT (NOT (CAST(NULL AS BLOB))), ((((rt0.c2)AND(vt0.c0)))OR(SQLITE_SOURCE_ID())), CASE WHEN (NOT (NULL)) THEN COUNT(NULL) ELSE LAST_INSERT_ROWID() END FROM rt0, v0 GROUP BY (((((rt1.c1))>=((rt2.c6)))) BETWEEN (((rt2.c1) BETWEEN (rt1.c5) AND (rt1.c2))) AND (((rt1.c2) ISNULL))), ((rt2.c2 IN ()) IN ()), ((((((rt2.c5)OR(rt2.c1)))AND(rt2.c4)))LIKE(CAST(rt1.c2 AS REAL)));SELECT DISTINCT ((((AVG(rt1.c5))AND(json_quote(rt2.c3))))AND(((rt1.c2)-(rt2.c4)))) FROM rt0;SELECT ALL ((rt1.c1)>>((rt2.c4 IN (rt1.c5)))) FROM v0, rt2;SELECT CASE ((rt2.c2) NOT BETWEEN (rt2.c6) AND (rt0.c0))  WHEN ((rt1.c1) NOT BETWEEN (rt2.c2) AND (rt1.c0)) THEN COUNT(*) END FROM v0, vt0, rt1 WHERE (((('90440841', 0x65999aec, 2.063853684E9)) BETWEEN ((NULL, ((x'f48d') IS FALSE), ((0.110719863019755) NOTNULL))) AND ((x'' COLLATE RTRIM, ((-1500067230)*('-1352154572')), (+ (0.95173155841726))))));SELECT DISTINCT (~ (((rt2.c0)LIKE(rt0.c2)))), CAST(-1369324994 AS NUMERIC), CAST(((rt1.c6)*(rt1.c0)) AS TEXT) FROM rt1, rt0;SELECT ((rt1.c2 IN (rt0.c3, rt2.c5)) IN ((x'' IN ()), (((rt0.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c1))))), LAST_VALUE((((((- (rt0.c1)))OR(((rt1.c5)>=(rt1.c2)))))OR((+ (rt1.c3))))) OVER ( RANGE CAST(rt2.c2 AS REAL) PRECEDING EXCLUDE CURRENT ROW), ((((x'')AND(((rt2.c4) NOT NULL))))OR((((rt1.c0, rt1.c4, rt1.c0))<=(('''!ezobmonthsuH0', 0.9155176207951233, rt2.c6))))) FROM rt0, v0, rt1, vt0;SELECT DISTINCT CASE ((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt2.c3))  WHEN CASE WHEN rt1.c4 THEN rt2.c3 WHEN rt1.c3 THEN rt2.c4 WHEN rt2.c6 THEN rt0.c1 END THEN CASE rt2.c5  WHEN rt0.c3 THEN rt2.c1 END ELSE MIN(rt0.c0) END, x'', CASE WHEN CASE rt2.c4  WHEN rt1.c6 THEN v0.c0 END THEN 0.4456880251784787 WHEN MIN(rt1.c0, rt1.c2, rt2.c3, rt2.c6) THEN CAST(rt1.c5 AS BLOB) WHEN ((rt0.c3)<<(rt1.c0)) THEN CAST(vt0.c0 AS NUMERIC) END FROM v0, rt1, vt0, rt0, rt2 WHERE (CASE ((0.07100861781747558)!=(NULL))  WHEN (- (x'25171e3f')) THEN CASE WHEN x'c7a6' THEN NULL ELSE '' END ELSE ((NULL) IS FALSE) END); -- 1ms;
SELECT DISTINCT ((((((rt0.c1)LIKE(rt1.c6)))AND(((rt2.c6)GLOB(rt1.c5)))))OR(((rt1.c4) BETWEEN (rt2.c1) AND (vt0.c0)))) FROM v0, rt1 WHERE (((((0.6569837967876311)LIKE(''))) BETWEEN ((((x'6591', '&[]', x'6497', NULL, 1.666315579E9)) BETWEEN ((x'', x'5e74', 0.7800440509802116, x'', 0.2596256326009867)) AND (('b79snk', -8.44344074E8, '111673464', 'hn7\rYf\', 'x')))) AND (((NULL) BETWEEN (x'b9912652') AND ('1284607362')))));SELECT (((rt1.c1 IN ()))<=(((rt2.c0)<<(rt0.c0)))), MAX(GROUP_CONCAT(CAST(rt2.c6 AS INTEGER))), rt0.c3 FROM rt1, rt0, rt2, vt0;SELECT ALL rt1.c6 FROM rt2, v0 ORDER BY (((0xffffffff8c9845a2)) NOT BETWEEN ((NULLIF(rt1.c0, rt1.c1))) AND ((((rt2.c0) ISNULL)))) ASC LIMIT -713517290;SELECT vt0.c0, CAST(CASE WHEN rt2.c3 THEN rt1.c5 ELSE v0.c0 END AS BLOB), COUNT(*) OVER () FROM rt2, rt1, rt0, vt0;SELECT DISTINCT ((CASE rt2.c0  WHEN rt1.c6 THEN rt0.c1 END)<(TOTAL(rt2.c5))) FROM rt0, vt0, rt2, rt1 WHERE ((NOT ((((('J0l)q')AND(x'd22e')))AND('869578126'))))); -- 0ms;
SELECT ALL (((rt1.c3 COLLATE RTRIM))>=(((((rt1.c4))>=((rt0.c2)))))) FROM rt0, rt2, v0, vt0, rt1 NOT INDEXED GROUP BY CASE (NOT (rt2.c3))  WHEN (NOT (x'')) THEN ((rt2.c5) BETWEEN (rt1.c4) AND (rt0.c0)) END, 0.05100852686437651, '-1862520331' COLLATE BINARY; -- 1ms;
SELECT (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt2.c5)) IN ()) FROM vt0 WHERE ((((('86217367') BETWEEN (0xffffffffd79edd90) AND ('811100238'))) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(v0.c0 COLLATE RTRIM AS BLOB) FROM vt0;SELECT v0.c0 FROM vt0, rt0, rt1, rt2, v0 WHERE (((json_patch(x'', 0.3307869993634813))LIKE(CAST('-1816212779' AS INTEGER)))) LIMIT 1666315579 OFFSET -254511326;SELECT DISTINCT 0.14123274855918388 FROM vt0 WHERE ((((((+ (860018398)))AND(((1e500)GLOB(x'')))))OR((0.007925807677383379 IN ())))) ORDER BY CAST(((vt0.c0)IS NOT(vt0.c0)) AS BLOB) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CAST((rt2.c4 IN ()) AS INTEGER) FROM rt2; -- 0ms;
SELECT DISTINCT ((LIKE(rt1.c6, rt1.c5, '3')) NOT BETWEEN (COUNT(rt1.c0)) AND (((v0.c0) IS FALSE))) FROM v0, vt0, rt2 NOT INDEXED WHERE (QUOTE(((x'')*(x'')))) LIMIT -2095514269;SELECT ALL CAST(TIME(rt1.c2, rt2.c1, rt0.c1) AS INTEGER) FROM v0, rt0;SELECT DISTINCT rt2.c0 FROM rt0, vt0, v0;SELECT DISTINCT (((rt2.c5)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND ((CASE WHEN rt1.c5 THEN rt2.c6 WHEN 2063853684 THEN 0.13914511692680653 WHEN rt2.c5 THEN rt1.c2 END))) FROM vt0, rt1, rt2 WHERE (LAST_INSERT_ROWID()); -- 1ms;
SELECT AVG(json_valid(rt1.c1)) OVER () FROM vt0, rt1, rt2; -- 0ms;
SELECT rt2.c3 COLLATE RTRIM FROM rt1;SELECT (- ((NOT (NULL)))) FROM rt1; -- 0ms;
SELECT rt2.c6 FROM rt2, vt0, rt1, v0 WHERE (CAST('-1791448905' COLLATE RTRIM AS INTEGER)) LIMIT -1964385350 OFFSET 1223787448; -- 0ms;
SELECT ALL MAX(CAST(rt1.c0 AS REAL), rt2.c3 COLLATE RTRIM) FROM v0, vt0, rt2, rt0 WHERE ((~ (((0Xffffffffc57d7abb)>(0.7823103080361385))))) ORDER BY (((((rt1.c0 IN ()))AND((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) ASC;SELECT ((((-1134246116)AND(((((((((rt2.c4)AND(rt2.c2)))AND(rt1.c3)))AND(rt2.c4)))OR(rt2.c0)))))OR(((((rt2.c0)OR(rt1.c3)))AND(rt1.c6)))), 0.7500414917653374, ((((rt2.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))) IS TRUE), ((((NULL)) NOT BETWEEN ((rt1.c5)) AND ((rt2.c0))) IN ()), IFNULL('-1953162215', COUNT(vt0.c0)) FROM rt0, v0 WHERE ((((('4()/V䬔b')>=(0.008574075159740513))) BETWEEN ((((('''0A')OR(NULL)))OR(x''))) AND (((0.9155176207951233)|(NULL)))));SELECT DISTINCT (+ (rt1.c6 COLLATE RTRIM)) FROM vt0, v0, rt0, rt2;SELECT TOTAL(x'') OVER () FROM vt0 WHERE (((((((0.48946845401416306))<>((0.7402388598609041)))))>=((((0X141914aa)LIKE(-396382908)))))) ORDER BY ((rt1.c4) IS FALSE) ASC, SQLITE_COMPILEOPTION_GET(CASE WHEN rt0.c2 THEN rt2.c3 ELSE rt0.c0 END) ASC  NULLS LAST;SELECT DISTINCT NTILE(((((CASE WHEN rt1.c0 THEN rt2.c6 END)OR(((((rt1.c5)OR(rt1.c5)))AND(rt0.c2)))))AND((NOT (rt2.c2))))) OVER () FROM v0, rt2, vt0, rt0, rt1; -- 0ms;
SELECT ALL CASE WHEN AVG(v0.c0) THEN ((rt2.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END FROM vt0;SELECT DISTINCT json_insert(rt0.c1, NULL, ((rt1.c3)%(rt1.c6)), ((v0.c0) NOT BETWEEN (rt2.c4) AND (rt2.c4)), ((rt1.c2) IS TRUE), vt0.c0 COLLATE BINARY, ((x'')%(rt0.c3))) FROM rt2, vt0;SELECT DISTINCT DENSE_RANK() OVER () FROM v0, rt1, vt0, rt2; -- 0ms;
SELECT AVG(((((rt1.c1)OR(rt0.c0)))OR(v0.c0))) OVER (), ((CASE WHEN rt2.c6 THEN rt1.c3 END) NOT BETWEEN (x'2a8b') AND (CASE WHEN rt2.c4 THEN rt1.c5 WHEN rt1.c3 THEN rt0.c1 WHEN rt2.c2 THEN rt1.c5 END)), 0.8902448101598227 FROM rt2, rt1 WHERE (((CAST(x'' AS INTEGER))OR(((('', 0.49709895766918766, -1134246116, -89703004, NULL, NULL, NULL))<((NULL, x'', x'', x'', '-1453588244', NULL, 0.5653953579193587))))));SELECT DISTINCT (rt0.c3 IN ()) COLLATE RTRIM, (~ (((((rt2.c2)OR(v0.c0)))OR(rt2.c4)))), TOTAL((rt1.c3 IN ()) COLLATE RTRIM) OVER () FROM v0, vt0;SELECT DISTINCT COALESCE(DISTINCT ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt2.c2)), ((rt2.c4)>(rt1.c4))) FROM vt0, rt0, rt1, rt2, v0 WHERE (((((((x'') BETWEEN (x'') AND (x'')))OR((('T퉺')>=(0.6044346426086397)))))AND((((x'')) BETWEEN ((0.31598028192097727)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (rt1.c5) AND ((rt1.c4 IN (rt2.c5, rt2.c2)))), rt2.c0, LIKELY(DISTINCT ''), LAG(((CAST(rt0.c0 AS TEXT)) BETWEEN (rt2.c0 COLLATE RTRIM) AND (((((((((((((rt2.c1)OR(rt2.c1)))OR(rt2.c6)))OR(rt0.c3)))AND(0.0016854442411765591)))OR(rt0.c3)))AND(rt0.c0)))), UNLIKELY((((rt0.c0))==((rt0.c3)))), (UNLIKELY(DISTINCT rt0.c3) IN ())) OVER (), PERCENT_RANK() OVER () FROM rt2, rt0;SELECT MIN(rt1.c6) FROM rt2, rt0 LIMIT -933038140;SELECT rt0.c3 FROM rt2, rt1, v0, rt0 LIMIT 1846904555 OFFSET 242763002; -- 0ms;
SELECT ALL 'A/*s,/&D' FROM v0; -- 2ms;
SELECT DISTINCT ((rt1.c6)>>(rt2.c4)) COLLATE NOCASE FROM rt0 WHERE (((('-1046262365' IN ('JL9\r'))) BETWEEN ((((0.6490418672436365))==((NULL)))) AND (0.4716702802509356)));SELECT ALL ((((rt1.c4)>=(rt2.c3))) IS FALSE) FROM v0, rt2, rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(rt0.c2 COLLATE RTRIM, 0.050500383335048915) FROM rt0, vt0, rt2 WHERE (((json_array_length(x'0621', 0.9500283890862753))>=(((-1632744694)+(x'')))));SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt2.c5 END) NOT BETWEEN (((rt1.c2)<<(rt2.c5))) AND (((((rt2.c6)OR(rt2.c5)))OR(rt2.c0)))), CAST(((rt0.c1)<=(rt1.c3)) AS REAL), ((~ (rt2.c3)) IN (((rt2.c1) NOTNULL))) FROM rt2, vt0, v0, rt0;SELECT DISTINCT rt1.c4, UPPER((((rt1.c1))==((rt2.c5)))), TOTAL((NOT (rt1.c5))) OVER () FROM rt1, v0, vt0 WHERE ((((CASE 0.9125084504934805  WHEN 0.9598835811017453 THEN 0.4085351119432279 END, ((0.8505248482139828)<=(0.3575366461383477)), ((((NULL)AND(NULL)))OR(NULL))))<>((((((0.9035207098081333)AND(-0.0)))OR(NULL)), (((NULL))<=(('亏\r'))), (('2u[9(')||(0.07497383384174328))))));SELECT DISTINCT ((((((((((((COUNT(rt0.c0))OR((((rt1.c5))<((rt0.c2))))))AND((((vt0.c0))<=((rt1.c4))))))AND(SUM(rt0.c0))))OR(rt2.c0 COLLATE BINARY)))OR('')))AND((rt2.c6 IN ()))) FROM v0, rt0, rt2, vt0, rt1 WHERE (('OENZO8Q' IN ('850178682')) COLLATE BINARY); -- 0ms;
SELECT ALL (~ (((rt1.c6)*(rt2.c1)))), ((((rt1.c2) BETWEEN (rt2.c6) AND (rt1.c4))) IS FALSE), rt0.c2 FROM rt2, vt0, rt1, rt0 WHERE ((+ ((((0Xffffffffaf56e371, 0.1703717481218363, 0.057652717426615485, x'', ''))>=((NULL, x'c55c', x'', NULL, NULL)))))); -- 0ms;
SELECT DISTINCT (((rt1.c6)) BETWEEN ((rt1.c0)) AND (((((rt2.c6))<((rt2.c3)))))) FROM rt1, rt2, vt0, v0, rt0; -- 0ms;
SELECT ((((COUNT(*))AND((((rt1.c3)) BETWEEN ((rt0.c0)) AND ((v0.c0))))))OR(((rt1.c2) NOTNULL))), CAST(((rt1.c2)LIKE(rt1.c1)) AS INTEGER), ((((((rt1.c6)OR(rt2.c1)))OR(x'43106f0e'))) IS TRUE) FROM rt1 ORDER BY json_quote(SUBSTR(rt2.c2, rt2.c6)) ASC  NULLS LAST;SELECT ALL ((LIKELIHOOD(0.518982050567636, 0.8008271828355381)) BETWEEN (((vt0.c0)=(rt1.c4))) AND ((- (rt1.c0)))), x'72ce', (((rt2.c6))=((rt2.c1))) COLLATE NOCASE FROM vt0, v0 NOT INDEXED WHERE (((((('')) NOT BETWEEN (('')) AND (('')))) NOT NULL));SELECT ALL (((rt1.c0, rt1.c0, rt2.c4)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN (('-1816212779')) AND ((rt1.c0))), ((rt2.c4)+(rt1.c0)), (rt0.c1 IN (rt2.c0)))) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt2.c5)), CASE rt1.c6  WHEN rt0.c2 THEN NULL ELSE rt2.c5 END, ((rt2.c3)&(v0.c0))))) FROM vt0 WHERE ((((('0.11467503380566679')/(0.5575759812874225)))!=(CASE -1.29483785E9  WHEN NULL THEN x'' END)));SELECT DISTINCT (NOT ((((rt1.c6, rt1.c6, 0.10589831975723052)) BETWEEN ((v0.c0, rt0.c0, rt0.c3)) AND ((rt2.c0, rt1.c6, NULL))))), ((((((rt1.c5) BETWEEN (v0.c0) AND (rt1.c3)))OR(CAST(rt1.c0 AS INTEGER))))OR(AVG(rt1.c5))), MAX(0.670886056463668) COLLATE RTRIM, CASE WHEN (3464071 IN ()) THEN (+ ('Q퇍?qE.faw')) ELSE (rt1.c4 IN (rt2.c6)) END, SUM(((rt2.c1) BETWEEN (rt2.c0) AND (rt1.c2))) OVER () FROM rt1, rt0, vt0 WHERE (json_patch('iEJnx', 3.99559794E8) COLLATE RTRIM COLLATE NOCASE) ORDER BY (rt2.c6 IN (rt1.c4)) COLLATE BINARY, ((CAST(rt1.c5 AS TEXT)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (NULL)) DESC, ((((0.20494476599895062)|(rt1.c5)))<<(rt2.c2 COLLATE BINARY));SELECT DISTINCT TOTAL((((rt2.c0, rt0.c0, rt1.c5)) BETWEEN ((rt2.c6, rt2.c4, rt1.c4)) AND ((rt1.c3, rt2.c5, rt1.c3)))) FROM rt1, rt2, rt0, v0; -- 0ms;
SELECT DISTINCT CASE WHEN MAX(rt2.c2) THEN MIN(rt2.c5) END FROM v0, rt1;SELECT DISTINCT ((COUNT(rt1.c4)) BETWEEN (rt2.c1 COLLATE RTRIM) AND (NULL)) FROM rt0 CROSS JOIN v0 ON ((((((((((rt1.c0)<(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (0.7833924679068727) AND (rt2.c3)))))AND(rt0.c2)))AND(vt0.c0 COLLATE RTRIM)))AND((- ('')))) CROSS JOIN vt0 ON (((((rt1.c6))<>(('-732193609')))) NOT NULL);SELECT ALL (- (rt2.c2)), (rt0.c0 IN ()), CAST(((v0.c0)<(rt2.c5)) AS TEXT) FROM v0, rt2, vt0; -- 0ms;
SELECT COALESCE(DISTINCT rt0.c3 COLLATE NOCASE, ((vt0.c0)>>(rt2.c0))) FROM v0, rt2;SELECT (+ (((rt1.c3) NOTNULL))) FROM vt0, v0, rt2, rt0;SELECT DISTINCT '-359155195', TOTAL(LIKELIHOOD(rt1.c5, 0.12569559233123206)), (NOT ((((rt1.c5))>=((rt2.c0))))) FROM rt2, v0, rt1; -- 0ms;
SELECT ALL COUNT(((rt2.c4)GLOB(rt1.c6))) FROM rt0, rt1, vt0, v0, rt2 WHERE ((((0.22059051613812009)+(x'')) IN ())); -- 0ms;
SELECT DISTINCT ((rt1.c2)IS NOT((((rt2.c5))=(('쑃E%n*'))))) FROM rt0, rt1, rt2, vt0, v0; -- 0ms;
SELECT DISTINCT '-545853639' FROM rt1, rt0, rt2 WHERE ((((NULL)) BETWEEN (('2092930621')) AND ((((NULL)==(0.5819417508883016)))))); -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT (rt1.c3 IN ()), 0.6210856023096992), CASE WHEN ((rt1.c6)|(v0.c0)) THEN CASE WHEN rt2.c4 THEN rt2.c4 END WHEN rt1.c3 THEN rt1.c1 COLLATE BINARY WHEN CAST(rt1.c3 AS INTEGER) THEN (- (rt2.c1)) ELSE CAST(rt2.c6 AS INTEGER) END, json_patch(rt1.c3, ((rt1.c4) BETWEEN (NULL) AND (rt2.c6))), ((rt2.c6) IS TRUE) COLLATE BINARY, ((((rt2.c0)AND(x'')))OR(v0.c0)) COLLATE BINARY FROM rt0, rt1 NOT INDEXED WHERE (((NULL IN ()) IN (CAST('' AS REAL))));SELECT rt1.c5 FROM rt2, v0, rt0 WHERE ((+ ((('-223050951') IS TRUE)))) GROUP BY ((280573179) NOTNULL) COLLATE BINARY LIMIT 1862563244 OFFSET -68621987;SELECT DISTINCT (- (SUM(0.06032291691559444))) FROM vt0; -- 0ms;
SELECT ALL (((((((rt1.c2))!=((rt2.c4))))OR(CAST(rt1.c1 AS BLOB))))AND(CAST(rt2.c6 AS INTEGER))) FROM rt1, rt2, v0, vt0; -- 0ms;
SELECT ((rt2.c4)<(NULL)) COLLATE BINARY, rt1.c1, ROW_NUMBER() OVER () FROM rt1, rt0, rt2, vt0 WHERE ((~ ('' COLLATE NOCASE))) ORDER BY rt1.c4 DESC; -- 1ms;
SELECT DISTINCT ((((((rt0.c0)&(rt1.c0)))OR((x'' IN ()))))AND(COALESCE(rt0.c3, rt0.c0))), ((((((((((rt2.c5)OR(rt2.c5)))AND(rt2.c0)))OR(rt1.c5)))OR(rt0.c1)))<<(TOTAL(rt1.c6))), (NOT (rt0.c2 COLLATE RTRIM)) FROM v0, vt0, rt1, rt0, rt2 WHERE ((('721707977')<=((((5.54301127E8)) NOT BETWEEN (('\n6s8C')) AND ((NULL)))))) LIMIT 1862590719; -- 0ms;
SELECT DISTINCT 0.6913087874180242 FROM rt2, rt1, v0, rt0 GROUP BY ((((((rt1.c4) NOT NULL))AND(((((rt2.c3)AND(rt2.c2)))OR(rt1.c4)))))AND(UNLIKELY(0.8930503129150634))) HAVING x'' COLLATE RTRIM; -- 0ms;
SELECT (+ (((rt0.c0)||(rt1.c1)))) FROM rt2, vt0, rt0;SELECT ALL CASE (((rt2.c0)) BETWEEN ((0.9759635809079664)) AND ((rt2.c4)))  WHEN (rt1.c2 IN ()) THEN CAST(rt1.c1 AS NUMERIC) END FROM vt0, rt0, v0, rt1 WHERE (TRIM(''));SELECT DISTINCT ((3.99559794E8)GLOB(rt1.c2 COLLATE NOCASE)), COUNT(*) OVER (), rt0.c0 FROM rt1, rt2 WHERE (((('f*pu?', x'', 0.13814097760198496)) NOT BETWEEN (((('')%(x'')), '', json_patch('1188187906', '0.15703434126278326'))) AND ((((0.977303706749852)AND(x'5d99')), (- (x'')), (x'28ff' IN ())))));SELECT DISTINCT load_extension((rt0.c1 IN ())) FROM rt0 WHERE ((((('2092930621') NOT NULL)) IS FALSE)); -- 1ms;
SELECT DISTINCT ((v0.c0 COLLATE BINARY)-(((((rt1.c2)OR(rt2.c5)))OR(rt2.c6)))) FROM vt0, rt1, rt2, rt0;SELECT ALL (((((((rt0.c3)AND(rt1.c6)))AND(rt1.c1))))>=(((~ (rt0.c3))))) FROM v0, rt2, rt0, vt0;SELECT ((((rt1.c3) NOT BETWEEN (rt2.c1) AND (rt1.c3))) NOT BETWEEN (rt1.c5) AND ('1342040501')) FROM rt0, vt0, rt2, v0, rt1; -- 0ms;
SELECT DISTINCT rt1.c5 COLLATE RTRIM, ((((rt1.c2)>>(rt0.c1)))<<(COUNT(*))), json_valid(((vt0.c0)<>(rt2.c1))) FROM rt2, v0, rt1, rt0, vt0 WHERE ((((('?.')&(0.697790507995582))) NOT BETWEEN ((((NULL))=((NULL)))) AND ((((('')OR(-6.21134469E8)))OR(NULL))))); -- 0ms;
SELECT ALL GROUP_CONCAT(((rt2.c3) NOT BETWEEN (NULL) AND (NULL))) OVER () FROM vt0, rt1 WHERE ('-1750811325');SELECT ((((rt1.c2)IS(rt1.c3)))IS NOT(rt1.c3 COLLATE RTRIM)) FROM v0 WHERE ((+ ('],TC' COLLATE BINARY)));SELECT DISTINCT COUNT(*) OVER () FROM rt2, v0, rt0; -- 1ms;
SELECT DISTINCT (((0.8034288619398119)) NOT BETWEEN ((CASE rt1.c4  WHEN rt2.c3 THEN rt1.c4 ELSE rt2.c3 END)) AND ((CASE rt1.c0  WHEN rt0.c0 THEN -1449335735 WHEN v0.c0 THEN rt0.c3 WHEN rt1.c3 THEN vt0.c0 ELSE rt2.c3 END))) FROM v0, rt1, vt0, rt2, rt0 WHERE (CAST(((((NULL)OR('-1150115657')))OR('')) AS REAL)); -- 0ms;
SELECT DISTINCT (NOT (((rt2.c5) NOT BETWEEN ('-28706779') AND (rt1.c2)))) FROM rt1, rt2, vt0 WHERE (((('u', '-1816212779', '-1138720209')) BETWEEN ((((('꥖4')) NOT BETWEEN ((0.5293638344030089)) AND ((NULL))), ((x'')+(0.9033173782952229)), 0.9197577287665074 COLLATE BINARY)) AND ((((x'5f8b265b')<=(x'6642')), ((-1917462476)+(0.5932217676278281)), (- (x'')))))) ORDER BY TYPEOF(((((0Xffffffff9ff9cec5)OR(rt0.c2)))AND(rt2.c6)))  NULLS LAST;SELECT DISTINCT ROUND(CAST(rt2.c2 AS NUMERIC), CAST(rt0.c0 AS REAL)) FROM rt1, rt2 WHERE (((~ (NULL)) IN ())) LIMIT 1534004874 OFFSET 823098144;SELECT DISTINCT CAST(((rt2.c3)>(NULL)) AS TEXT) FROM rt0, vt0, v0, rt2, rt1; -- 0ms;
SELECT DISTINCT json_array_length((((vt0.c0)) NOT BETWEEN ((rt2.c0)) AND ((rt1.c2)))), COUNT((rt1.c3 IN (x''))), ((((rt1.c4) NOT NULL)) IS FALSE) FROM rt2, rt0 GROUP BY ((CASE v0.c0  WHEN vt0.c0 THEN rt1.c6 ELSE 0.6845181557308755 END) NOTNULL) HAVING rt1.c3;SELECT ((((rt1.c3)GLOB(rt2.c5)))OR(COALESCE(rt0.c3, rt1.c5))) FROM v0 WHERE (((('-878125350', 0x20deb0c2, 'Ikw')) BETWEEN (((((((((('83860161')OR(0.3298412967167387)))AND(x'f08d')))AND(0.2770786172108296)))OR('-1150115657')), x'', (('-1500067230') IS TRUE))) AND ((((NULL) NOT BETWEEN (x'') AND (0.7503675037573098)), CAST(0x10505e08 AS BLOB), LIKELIHOOD(0.35761927120060355, 0.08681418622925596))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) BETWEEN (rt2.c3) AND (rt1.c6))) AND (((((rt2.c0)AND(rt0.c0)))OR(rt2.c3)))) DESC  NULLS LAST;SELECT DISTINCT CASE WHEN rt2.c6 THEN ((NULL) IS TRUE) WHEN CAST(rt2.c5 AS BLOB) THEN ((rt1.c6)/(rt2.c3)) WHEN CAST(rt1.c1 AS INTEGER) THEN json_array_length(rt0.c0) END, ((COUNT(*))<=(((rt1.c0) NOT NULL))), CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)&(vt0.c0)) END FROM vt0 WHERE (CASE WHEN CASE WHEN x'' THEN 'v' WHEN 0xffffffff89376bed THEN x'8798' WHEN '-884076514' THEN -1.779043938E9 END THEN (- ('')) END);SELECT DENSE_RANK() OVER ( ORDER BY CAST('Y损e}' AS BLOB)  NULLS FIRST, (+ ((rt2.c3 IN ())))  NULLS LAST) FROM v0, rt2 WHERE (((CASE NULL  WHEN 1494918640 THEN NULL WHEN x'8de3' THEN 0.5156477884502656 WHEN 'zs쉉' THEN NULL END)AND(CAST(x'' AS BLOB)))); -- 0ms;
SELECT (((rt2.c5, rt0.c1, rt1.c1, 0X2b0463c9, rt1.c2)) NOT BETWEEN (('SF&E\n6', ((rt2.c2)>=(rt1.c5)), (+ (rt1.c4)), rt2.c4 COLLATE BINARY, ((rt1.c4)-(rt0.c2)))) AND ((rt2.c3, v0.c0, -2.00009606E8, rt0.c0, '' COLLATE RTRIM))) FROM rt2, rt1 INNER JOIN vt0 ON rt1.c4 FULL OUTER JOIN v0 ON (+ ((((rt2.c6, rt2.c1, rt2.c4))=((rt2.c6, v0.c0, rt1.c2)))));SELECT ALL ((((rt2.c4 IN (v0.c0, rt2.c5)), ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), x'e6c8' COLLATE NOCASE, (~ (vt0.c0)), ((rt2.c6) BETWEEN (rt0.c3) AND (rt1.c4))))<=((((rt2.c6) NOT BETWEEN (-2137367805) AND (NULL)), rt0.c3 COLLATE NOCASE, ((NULL) BETWEEN (rt0.c1) AND ('')), ((((rt1.c3)AND(rt1.c6)))OR(rt2.c5)), ((rt2.c1) NOT BETWEEN (NULL) AND (rt1.c6))))), CAST(MAX(x'a5f79c548505') AS REAL), (((CASE rt1.c3  WHEN v0.c0 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c1 END))<>((((rt1.c1) IS FALSE)))) FROM vt0, rt0, rt1, v0, rt2 WHERE (SQLITE_COMPILEOPTION_GET((~ (NULL)))); -- 1ms;
SELECT DISTINCT ((v0.c0) BETWEEN ('271945404') AND (3.83711393E8)) COLLATE NOCASE, LOWER(DISTINCT 0.12800296951075252), (((+ (rt1.c4)))LIKE(TYPEOF(DISTINCT rt1.c5))) FROM vt0, rt2, v0;SELECT ALL (((+ (rt2.c2))) IS TRUE), FIRST_VALUE(((((((((rt0.c0)OR(NULL)))OR(rt1.c6)))OR(0.38690645992009076)))AND((rt1.c4 IN ())))) OVER (), ((1173704141) ISNULL) FROM rt0, v0, rt1, vt0 WHERE ((((NOT ('1597836660'))) IS FALSE));SELECT DISTINCT AVG(CASE rt1.c5  WHEN NULL THEN rt2.c3 END), rt1.c5, SUM(CAST(rt1.c1 AS INTEGER)) FROM rt0, rt2, vt0, rt1; -- 0ms;
SELECT (NOT (CAST(vt0.c0 AS INTEGER))) FROM rt1, v0, vt0, rt2; -- 0ms;
SELECT DISTINCT (~ ((((rt2.c1))<>((v0.c0))))) FROM v0, rt2, rt0, rt1 WHERE (''); -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c4))LIKE((rt0.c2 IN (vt0.c0, rt0.c0)))) FROM v0, rt2, vt0, rt1;SELECT (+ (((rt1.c4)OR(rt1.c2)))) FROM rt1, rt2, rt0; -- 1ms;
SELECT ALL COALESCE(DISTINCT ((rt1.c2)&(rt2.c1)), rt0.c1 COLLATE RTRIM) FROM rt0, vt0, v0, rt2, rt1 INTERSECT SELECT ALL NULL FROM rt1, rt2 WHERE ((CASE WHEN 0.5042794528906499 THEN NULL END IN ())); -- 0ms;
SELECT DISTINCT (+ (((rt2.c2)AND(rt2.c6)))) FROM rt1, v0, vt0;SELECT LTRIM(((rt2.c4) IS FALSE)), '.', (((rt1.c3, NULL, rt1.c4)) BETWEEN (((((rt1.c6, rt2.c6, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0, rt1.c4)) AND ((rt2.c2, rt0.c3, v0.c0))), ((rt0.c2)|(rt2.c1)), rt2.c0)) AND ((((rt2.c6) BETWEEN (rt2.c2) AND (rt2.c4)), ((rt0.c2) NOTNULL), SUM(vt0.c0)))) FROM v0, vt0 WHERE (CAST(CAST(x'' AS BLOB) AS BLOB));SELECT DISTINCT FIRST_VALUE(CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) END) OVER () FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0) NOT NULL) AS REAL) FROM vt0, rt1, v0 WHERE ((CASE WHEN '麫/' THEN 0.45279805725725464 WHEN NULL THEN 0.6563552358805123 WHEN '-1294837850' THEN '-1487264543' END IN ())); -- 0ms;
SELECT ALL CASE CASE v0.c0  WHEN rt0.c3 THEN rt1.c1 WHEN rt2.c1 THEN v0.c0 WHEN rt1.c6 THEN rt2.c1 ELSE 1.124822627E9 END  WHEN ((rt1.c0)<>(rt2.c4)) THEN ((rt1.c3)%(rt1.c6)) END, (NOT (LOWER(rt2.c1))), ((((rt0.c3)AND(rt2.c5)))GLOB(((rt2.c1) NOT BETWEEN ('') AND (rt2.c0)))) FROM rt2 LEFT OUTER JOIN v0 ON (((rt2.c0 IN (rt2.c0))) IS TRUE) RIGHT OUTER JOIN rt0 ON ((((rt2.c4) ISNULL))<=((+ (rt1.c5)))) FULL OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt2.c5 THEN rt2.c6 WHEN '-181457591' THEN rt2.c5 ELSE rt2.c4 END)*(CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN rt1 ON CASE x''  WHEN ((rt1.c6)>>(v0.c0)) THEN ((rt1.c5)IS NOT(1933060174)) ELSE (((rt2.c2)) BETWEEN ((rt1.c3)) AND ((NULL))) END;SELECT DISTINCT (+ (((rt1.c1)||(rt2.c6)))) FROM vt0, rt2, rt1; -- 0ms;
SELECT DISTINCT '0.9759635809079664' FROM rt2 NOT INDEXED; -- 0ms;
SELECT ALL ((0.27949748872829216) BETWEEN ('1198093469') AND (MIN(vt0.c0, rt2.c6, rt2.c1, rt1.c4))), CASE WHEN rt1.c3 COLLATE BINARY THEN (rt2.c0 IN ()) WHEN -2046580976 THEN 0.4186665729392621 WHEN COALESCE(DISTINCT rt0.c3, rt1.c6) THEN ((rt0.c0) BETWEEN (rt1.c6) AND (rt2.c1)) END, ((rt2.c5 COLLATE NOCASE)IS(rt1.c2)) FROM vt0, v0, rt2, rt1, rt0 WHERE ((+ (CAST('' AS BLOB)))) LIMIT 1050118094; -- 0ms;
SELECT ALL (('b') NOT BETWEEN (CAST(rt2.c4 AS TEXT)) AND (SUM(rt1.c4))) FROM vt0 LIMIT -1552936062;SELECT ((((v0.c0 COLLATE BINARY)AND(((rt1.c4)|(v0.c0)))))AND(MIN(rt1.c2))) FROM rt0;SELECT DISTINCT rt1.c2 FROM rt0 WHERE (json_array_length(1.70633558E8, ((0.02228037603448796)LIKE('-168037838'))));SELECT ALL CAST(CASE WHEN '-396372533' THEN 0.12569896479048293 END AS NUMERIC) FROM rt0 WHERE (CASE WHEN (8.60018398E8 IN ()) THEN -1.54543885E9 COLLATE NOCASE ELSE (('325187803') NOT NULL) END); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c3)<(rt2.c2))) OVER ( ORDER BY CAST((x'' IN ('^GoCpH', NULL)) AS INTEGER) ASC) FROM vt0, rt1 LIMIT -614084034;