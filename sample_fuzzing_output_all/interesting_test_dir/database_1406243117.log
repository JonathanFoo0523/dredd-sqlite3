-- Time: 2024/06/07 07:28:43
-- Database: database17
-- Database version: 3.40.0
-- seed value: 1406243117
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 11ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 10ms;
PRAGMA temp.recursive_triggers; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 909902067);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0X1a27e1c0, 438821312); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (''); -- 0ms;
DROP TABLE vt0; -- 1ms;
END; -- 0ms;
END; -- 2ms;
PRAGMA main.application_id = 4206384362630066212; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT OR REPLACE INTO rt1(c0) VALUES (0.05129407859678203); -- 0ms;
REINDEX; -- 0ms;
REINDEX  rt1; -- 0ms;
END; -- 0ms;
REINDEX  rt1; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c3) VALUES ('NVnbHX.', 0.5376171398868157, IFNULL(DISTINCT ((-9223372036854775808) NOT BETWEEN (NULL) AND (0x119c5ed0)), NULL COLLATE NOCASE)), (NULL, 0.05129407859678203, ''), ('', '801073000', ''); -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
REINDEX BINARY; -- 0ms;
PRAGMA main.optimize; -- 1ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.short_column_names = true; -- 0ms;
UPDATE rt1 SET c1=NULL, c0='1861962871'; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES ('qC /ivW'); -- 5ms;
PRAGMA secure_delete = true; -- 0ms;
INSERT OR REPLACE INTO rt1(c3, c1) VALUES ('909902067', x'a3e9'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c4) VALUES ((((((x'') BETWEEN ('-1026436686') AND (NULL))))>((TOTAL_CHANGES()))), '126336913'); -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c3, c2) VALUES (NULL, NULL); -- 1ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
INSERT OR FAIL INTO rt1(c4) VALUES (NULL), (x'3ad3'), (x'f3bd'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0, c4) VALUES (x'', 'qc /ivw', x'd86b'); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INT ); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES ('801073000'), (0.1239083915026864), (0.49391693579967133); -- 1ms;
INSERT OR FAIL INTO rt0(c1, c0, c2) VALUES (9.09902067E8, x'', '/\n꣯9TEZRY'), ('801073000', x'', -1171183323), ('-2085478590', NULL, 0xffffffffba312925); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c1, c2) VALUES (x'', x'', ''); -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES (NULL), (0xffffffff82496021), (NULL); -- 2ms;
DELETE FROM rt1 WHERE ((((CAST(rt1.c1 AS NUMERIC))AND(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)))AND((rt1.c4 IN ()))); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(-1171183323); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=x'', c0=''; -- 3ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((('맄8') BETWEEN (rt1.c0) AND (rt0.c1)))GLOB(((rt0.c1)<=(rt1.c2)))) FROM rt0 ORDER BY rt0.c3 DESC  NULLS FIRST LIMIT -1026436686 OFFSET 155019056;SELECT ALL (((rt1.c2))<>((((rt0.c2) ISNULL)))) FROM rt0;SELECT DISTINCT CAST(COUNT(rt1.c3) AS INTEGER), ((- (rt0.c1)) IN (((((((((rt0.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt0.c1)))AND(rt0.c3)))), (((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))))<((CASE WHEN rt0.c3 THEN '2037781414' WHEN rt0.c3 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c2 END))) FROM rt0;SELECT DISTINCT CAST((- (rt1.c1)) AS REAL) FROM rt1, rt0 ORDER BY (((PRINTF(rt1.c0, rt0.c0, rt1.c3), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)), ((((rt0.c1)OR(rt1.c1)))OR(rt0.c3))))>=((0xffffffff92ffdf1b, ((((rt1.c4)AND(rt0.c2)))AND(rt1.c3)), (((rt0.c3))>((0.012847495805106246)))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE ((rt0.c2) NOT NULL)  WHEN CASE rt0.c1  WHEN x'' THEN rt0.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c4 THEN '?/Y+' END THEN ((rt1.c3) IS FALSE) WHEN rt1.c2 COLLATE RTRIM THEN (((rt1.c1)) BETWEEN ((NULL)) AND ((rt1.c3))) WHEN ((rt1.c0)!=(rt0.c2)) THEN PRINTF(rt0.c1) ELSE (NOT (rt1.c2)) END, UNLIKELY(DISTINCT 1861962871), (((rt0.c1)) BETWEEN ((((((((((rt0.c1)OR(NULL)))AND(x'7a50')))AND(rt1.c2)))OR(rt0.c3)))) AND (((((rt0.c1, rt1.c2, rt0.c2)) BETWEEN ((rt0.c2, 0.25464320258761, 0.05129407859678203)) AND ((rt0.c1, rt1.c1, rt1.c1)))))) FROM rt1, rt0 WHERE ((((((((('-895701324' COLLATE NOCASE)AND((('kO-Dbᅽ^') IS FALSE))))OR(NULL COLLATE BINARY)))OR((0.14070105711427872 IN ()))))OR(CASE WHEN '' THEN '801073000' ELSE x'' END))); -- 1ms;
SELECT ((((rt1.c0)GLOB(rt1.c0)))<>(NULL)) FROM rt0, rt1 WHERE ((((x'1917', ((('-1489786264', x'', x'')) BETWEEN (('-641405582', '-1489786264', NULL)) AND ((0xffffffffed925688, '-1171183323', 0.5858646882026184))), 0.49869428435285823))<((TYPEOF(0.5858646882026184), (x'8cd3' IN (0xffffffff83b21f42, 0.5841356784808596, NULL)), 0xfffffffffd14828c COLLATE RTRIM)))); -- 0ms;
SELECT (~ (rt0.c0)), TRIM(((rt0.c0)*(rt0.c2)), ((rt1.c3)*(rt0.c3))), 8.01073E8 FROM rt0 WHERE ((('+0LDco3O' COLLATE RTRIM)IS(CAST(NULL AS REAL))));SELECT DISTINCT ((((rt1.c3) ISNULL)) IS TRUE), ((MAX(rt1.c4)) ISNULL), TOTAL((-2.109120479E9 IN (rt1.c3))) OVER () FROM rt0 ORDER BY ((((rt1.c3)!=(rt0.c0)))=(CAST(x'' AS TEXT)))  NULLS FIRST;SELECT ALL CASE WHEN UNLIKELY(DISTINCT rt0.c3) THEN (0.10243962287109709 IN ()) END FROM rt0 WHERE ((((((0.9224446916642214, 801073000, ''))<((556111560, -1504478377, x''))))<=(-0.0))); -- 0ms;
SELECT ((((((rt0.c2)OR(rt0.c3)))OR('2044348790'))) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(rt1.c1) FILTER(WHERE UNLIKELY(CAST(x'3c84' AS TEXT))) OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (('/5')OR(((((rt1.c3)AND(rt1.c1)))OR(rt1.c1)))), CAST(((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c1)) AS BLOB), ((rt1.c4 COLLATE NOCASE)=(((rt0.c3)=(-885028795)))), DATE(((rt1.c0) IS TRUE), ((rt1.c2) IS FALSE), (rt1.c2 IN ()), rt0.c1, -8.95701324E8), (((rt1.c1)&(rt1.c4)) IN ()) FROM rt1 INTERSECT SELECT '-1828724965', CASE WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c2 IN (rt1.c3, rt0.c3)) ELSE ((0.26608069337865214) BETWEEN (rt0.c3) AND (rt0.c2)) END, ((((((rt0.c1)OR(rt1.c1)))AND(rt1.c3)))==(PRINTF(rt1.c0))), CASE WHEN ((rt0.c1)<>(rt1.c4)) THEN ((rt0.c1)=(rt0.c2)) WHEN CASE WHEN rt1.c0 THEN rt1.c3 END THEN ((rt1.c1)<<(rt1.c2)) WHEN x'4ea3' THEN (NOT (rt1.c2)) WHEN (rt1.c0 IN (-3.09176696E8)) THEN rt0.c0 WHEN ((rt1.c4)IS('')) THEN ((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)) END, (((((rt0.c1) NOT NULL)))!=((((rt1.c4)!=(rt0.c1))))) FROM rt0, rt1 WHERE ((((((('/5')>=('')))AND((1151094620 IN (x'f532', 0.8642167095674217)))))AND(((('-1621383243'))==(('!'))))));SELECT DISTINCT CASE WHEN COUNT(*) THEN ((rt1.c4) IS FALSE) END, (((rt0.c0)) NOT BETWEEN ((COUNT(rt0.c3))) AND ((CASE x''  WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c0 END))), AVG((rt0.c3 IN ())) OVER () FROM rt0, rt1; -- 1ms;
SELECT ((NULL) NOT NULL) FROM rt1, rt0 WHERE (((((((0.05129407859678203)&('')))OR(((1.15109462E9) BETWEEN (NULL) AND ('643148015')))))OR((('')>>(NULL))))); -- 0ms;
SELECT DISTINCT (~ (CASE rt1.c4  WHEN rt1.c3 THEN rt0.c3 END)) FROM rt1 WHERE ('7蕈%''i') GROUP BY rt0.c1, CASE (rt1.c2 IN ())  WHEN ((rt0.c0) IS TRUE) THEN ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END, (~ (rt1.c0)) COLLATE RTRIM HAVING ((((((((((((((rt1.c4)OR(rt1.c4)))AND('-2109120479')))AND(rt0.c3)))OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))GLOB(((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))));SELECT DISTINCT x'' FROM rt1 WHERE (CAST(((0.38108964359018915) NOT BETWEEN (NULL) AND (NULL)) AS NUMERIC)) GROUP BY CASE rt0.c2  WHEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c3)) THEN (((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) WHEN ((rt0.c1) BETWEEN ('1151094620') AND (rt0.c1)) THEN IFNULL(rt1.c4, rt1.c2) WHEN ((rt0.c2)>=(rt0.c0)) THEN CAST(rt1.c2 AS BLOB) END HAVING (((rt0.c1) ISNULL) IN ());SELECT DISTINCT rt1.c0 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt0.c3, (((rt0.c1)%(rt1.c1)) IN ((((rt0.c0))<>((rt1.c0))), ((rt0.c3)|(rt0.c2)))), (((rt1.c2)) NOT BETWEEN ((((rt0.c3)&(rt1.c2)))) AND ((((rt1.c1)>=(NULL))))) FROM rt1 WHERE (CASE WHEN (((x''))>=((-1.7976931348623157E308))) THEN ((((NULL)OR(0.5429740235973994)))OR(NULL)) ELSE (- (0.24579958042323335)) END);SELECT ALL ((((MIN(rt1.c2))OR((rt0.c1 IN (rt0.c0)))))OR(((rt0.c2)>=(rt0.c2)))), LAG((~ ((- (0.5858646882026184)))), CASE WHEN ((NULL) IS TRUE) THEN ((rt1.c2)AND('{o⤥8\')) WHEN CAST(rt0.c3 AS INTEGER) THEN CAST(rt0.c0 AS REAL) WHEN rt1.c4 COLLATE RTRIM THEN ((rt1.c2)<(rt1.c1)) END, ((rt0.c0) IS FALSE)) OVER (), UPPER(DISTINCT rt1.c1 COLLATE RTRIM) FROM rt1, rt0 WHERE ((+ ((((0.4212451977375685))>=((0.8556649279510877)))))); -- 0ms;
SELECT ALL COALESCE(DISTINCT TRIM(DISTINCT rt0.c0, rt1.c2), CAST(rt0.c3 AS BLOB)) FROM rt1;SELECT ((((rt1.c3)>(rt1.c3)))!=((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c0))))) FROM rt0 WHERE ((((0.5967228369180595, '220729725', 8.01073E8)) NOT BETWEEN (((0.4430495790513592 IN ()), 0.9381562635992434, ((x'') BETWEEN ('Z8') AND ('{O⤥8\')))) AND (((NOT (NULL)), ((('297478112'))!=(('0.9381562635992434'))), ((x'') BETWEEN ('IN>p8') AND ('f[Ꮻd*\'))))));SELECT x'' FROM rt0, rt1 WHERE ((((NULL)) BETWEEN ((((NULL) BETWEEN (0.12580758409365478) AND (NULL)))) AND ((0.7035548315200358)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0 CROSS JOIN rt1 ON (- (TRIM(-788509863))) GROUP BY ((CAST(rt1.c0 AS INTEGER)) NOTNULL) HAVING -1.489786264E9; -- 0ms;
SELECT DISTINCT MIN(NULL) COLLATE NOCASE, (- (rt1.c4)), CAST((rt1.c2 IN ()) AS INTEGER) FROM rt1; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID(), LTRIM(UPPER(rt1.c3), TYPEOF(rt1.c0)), json_remove(((rt1.c2)OR(rt1.c3)), CAST(rt1.c3 AS NUMERIC)) FROM rt1 WHERE ((((((NULL))>((0.16329089528478113))))-(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c1))|(0.5858646882026184)) FROM rt1, rt0 WHERE ((('') NOT BETWEEN ('-1217508717') AND (x'0280')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1; -- 0ms;
SELECT ALL ((rt1.c4) IS FALSE) FROM rt0, rt1 WHERE (((((((x''))!=((x'')))))<((((x'') NOT NULL))))); -- 0ms;
SELECT ALL ((x'a2d4' COLLATE RTRIM)>>((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt0.c3))))) FROM rt0 WHERE ((CASE WHEN '1608245297' THEN NULL END IN ('[]'))) LIMIT 875543126 OFFSET 556111560;SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((0.5642215272877549) BETWEEN (rt1.c0) AND (rt1.c0))))), ((CAST(rt1.c2 AS TEXT)) NOT NULL), CAST(((rt0.c1) BETWEEN (rt0.c3) AND (rt1.c1)) AS INTEGER) FROM rt0;SELECT ((rt1.c4) BETWEEN ((+ (rt0.c0))) AND (((rt1.c1)<>(rt1.c3)))) FROM rt1 WHERE (((((((((NULL)OR(-895701324)))AND('0.12580758409365478')))OR(0.03790380397204696)))OR(x'9775')) COLLATE RTRIM) ORDER BY ABS(NULLIF(DISTINCT rt0.c2, rt1.c0)) DESC  NULLS FIRST;SELECT DISTINCT ((CASE rt0.c3  WHEN rt1.c0 THEN rt1.c1 END)+(((rt0.c1)/(rt1.c3)))) FROM rt1, rt0 WHERE (CASE CASE 0.38108964359018915  WHEN x'5548' THEN -1246009313 ELSE 'Oh9#z#N2' END  WHEN (~ ('')) THEN (+ (x'')) END); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt1, rt0; -- 0ms;
SELECT MAX(rt1.c0), ((rt1.c4) IS TRUE) COLLATE NOCASE, ((CAST(rt1.c2 AS INTEGER)) NOT NULL) FROM rt0, rt1 WHERE (UNLIKELY(((x'')IS('')))); -- 0ms;
SELECT (MAX(rt0.c0) IN ()), (((x'')) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt1.c4 END)) AND ((CASE rt1.c4  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))), CAST(rt1.c0 AS NUMERIC) FROM rt0 WHERE ((CAST(NULL AS REAL) IN ((- ('-934505438')))));SELECT NTILE((((((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c0))))!=((rt1.c1 COLLATE BINARY)))) OVER ( PARTITION BY (((((((((+ (rt1.c1)))OR((rt0.c1 IN ()))))AND(((((((((((((rt1.c2)OR(rt0.c2)))AND(rt1.c1)))AND(x'')))AND(rt1.c4)))OR(rt0.c0)))AND(rt1.c0)))))OR(((rt0.c3)IS NOT(rt1.c3)))))AND((rt0.c2 IN ()))), (((rt0.c1))<((552315452))) COLLATE BINARY), (((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt0.c0)))) BETWEEN (((rt0.c0) NOT NULL)) AND ('vw䥶\pc''u' COLLATE BINARY)), CASE WHEN (- (rt0.c3)) THEN rt0.c2 COLLATE RTRIM WHEN rt1.c4 COLLATE RTRIM THEN GROUP_CONCAT(rt1.c4) WHEN ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c3)) THEN CAST(rt0.c3 AS NUMERIC) END FROM rt1 WHERE (((((CAST(x'' AS NUMERIC))AND(((((((((x'8858')OR(NULL)))OR(NULL)))AND('-~')))OR(x'')))))OR(((1.26336913E8)+(-1254648236))))) ORDER BY rt0.c0  NULLS LAST;SELECT DISTINCT (((rt1.c1 IN ())) NOT BETWEEN ((rt1.c0 IN ())) AND (CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c3 END)), CASE WHEN rt0.c1 THEN rt1.c4 END COLLATE NOCASE, (((+ (rt1.c2)))-(((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((((((((- (rt1.c4)))AND('1365098259')))OR((NOT (rt1.c2)))))AND((NOT (rt1.c3)))))OR((- (rt0.c1)))) FROM rt0 CROSS JOIN rt1 ON (((((rt1.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))))>>(((rt0.c3)-(rt1.c2)))); -- 0ms;
SELECT DISTINCT ((((rt1.c3) IS FALSE)) NOT BETWEEN (((rt0.c2)<(rt1.c0))) AND (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c1 ELSE '9f1)Qz' END)) FROM rt1 LIMIT 1344937473 OFFSET 1518348095;SELECT DISTINCT ((rt1.c1 COLLATE BINARY)LIKE(rt1.c1)) FROM rt0, rt1 WHERE (0.2990128664894882); -- 1ms;
SELECT DISTINCT (((CAST(rt0.c2 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3)), rt1.c0))>=((LTRIM(rt1.c3, rt0.c2), ((((rt1.c1)OR(rt0.c1)))AND(rt0.c0)), '974030413'))), TRIM(DISTINCT (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt0.c1)%(rt1.c2))), (- (((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt1.c3)))), ((MIN(rt1.c2))==((((rt0.c1))==((rt1.c0))))), NULL FROM rt0 WHERE (json_array_length(((8.01073E8)<=(x'16b5')), ((((1191294397)AND(NULL)))AND('875543126')))) ORDER BY 0, ''  NULLS LAST, (((~ (rt0.c3))) BETWEEN (((((rt1.c3)AND(rt0.c3)))AND(rt1.c1))) AND ((+ (rt1.c1)))) DESC;SELECT DISTINCT (((rt0.c3 IN ())) BETWEEN (CAST(NULL AS REAL)) AND ((+ (rt0.c3)))), ((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c3)) COLLATE NOCASE, ROW_NUMBER() OVER ( RANGE ((((rt0.c2)<>(rt1.c1))) ISNULL) PRECEDING) FROM rt1, rt0;SELECT DISTINCT rt0.c2 FROM rt0, rt1 WHERE (((NULL)&(NULL)) COLLATE RTRIM) GROUP BY CASE rt1.c4  WHEN ((((rt1.c1)OR(rt0.c2)))OR(rt1.c2)) THEN rt0.c3 END, ((((((((rt0.c3)OR(-1429378366)))AND(rt1.c0)))AND(rt0.c2)))AND(rt1.c3)) COLLATE BINARY, (NULL IN (CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c3 END, ((rt1.c4) NOTNULL))), (- (PRINTF(rt0.c2))), (rt0.c3 COLLATE NOCASE IN ()); -- 0ms;
SELECT NULL FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1, rt0 WHERE (((((((((CAST('126336913' AS TEXT))AND(((((0X93d6730)OR(x'')))OR('')))))OR(((1970015066) NOT NULL))))AND(CASE '2044348790'  WHEN -113025618 THEN NULL WHEN 'ማi+' THEN '0.5429740235973994' WHEN 0x10ee31c9 THEN 0.2783752143338918 ELSE NULL END)))AND(((x'8fc693a6') NOT BETWEEN ('Y2	/W') AND (x'f0f0'))))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((rt1.c0)>>(rt0.c2)))) AND ((rt1.c4 COLLATE BINARY))) FROM rt0 WHERE ((((NULL)) BETWEEN (((((NULL, 0xffffffff92ffdf1b, NULL)) NOT BETWEEN ((0.6658662182020322, '-920116719', '552315452')) AND ((0.23269461589026574, '-46219627', 852773797))))) AND (((- (-2.109120479E9)))))) LIMIT 1561629921;SELECT DISTINCT UPPER(CASE rt1.c3  WHEN rt1.c1 THEN rt0.c1 END) FROM rt1 WHERE (((CASE WHEN '-832285759' THEN 0.16329089528478113 WHEN 'KT雈eEb' THEN x'' WHEN '0.49869428435285823' THEN 1.970015066E9 ELSE NULL END) NOT BETWEEN ('909902067') AND (NULL))) GROUP BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c2)) THEN ((rt1.c3)LIKE(rt1.c2)) ELSE ((rt1.c2)=(rt1.c4)) END, ((rt1.c2)<<(((rt1.c4) BETWEEN (rt0.c1) AND (rt1.c1)))), ((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4))) BETWEEN ((NOT (0.10243962287109709))) AND (CAST(rt1.c2 AS INTEGER))) LIMIT 295460560 OFFSET -1423681388;SELECT ALL NTILE((((((((((rt1.c2 IN ()))OR(((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c4)))))AND(((((((((rt1.c0)OR(rt0.c3)))OR(rt0.c2)))AND(2.97478112E8)))OR(rt1.c0)))))AND(0xffffffffe04b765e)))AND((rt0.c2 IN ())))) OVER (), (((rt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0 COLLATE NOCASE))), COUNT(*) OVER () FROM rt1, rt0;SELECT ALL (~ ((((rt1.c3))<=((rt1.c4))))), rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE, SUM(rt1.c4) FROM rt1;SELECT ALL LEAD(x'5f53', ((((rt1.c3)|(rt0.c1)))|(((rt1.c0)>>(rt0.c1)))), CAST(((((((((rt1.c4)AND(rt1.c1)))OR(rt1.c3)))OR(rt0.c2)))OR(x'')) AS BLOB)) OVER (), CAST(((((rt0.c3)AND(rt1.c4)))OR(NULL)) AS BLOB), (((((((((((rt0.c1)AND(rt0.c2)))OR(rt1.c3)))AND(rt1.c4)))AND(rt1.c4))))<=((CASE rt0.c1  WHEN rt1.c3 THEN '' ELSE rt1.c0 END))) FROM rt0, rt1 WHERE (x'879a') GROUP BY ((CAST(rt1.c4 AS BLOB)) BETWEEN (((rt1.c4)!=(rt1.c4))) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt1.c3 END)), (((((rt1.c3))>((rt1.c4)))) IS TRUE), CASE (~ (rt1.c3))  WHEN ((rt0.c2)*(rt1.c3)) THEN ((((rt0.c2)OR(NULL)))OR(NULL)) END; -- 1ms;
SELECT DISTINCT ((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 END)LIKE(((rt1.c2) IS FALSE))) FROM rt0, rt1 WHERE (CASE (('-61810445') IS FALSE)  WHEN (+ (1420507017)) THEN (('')LIKE('Rta')) WHEN ABS(DISTINCT '-1087272414') THEN ((x'51cf')>=(0x554d3b53)) WHEN ((x'6434')>>('9223372036854775807')) THEN TYPEOF(NULL) ELSE ((0.4430495790513592) IS FALSE) END); -- 0ms;
SELECT CAST(((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)) AS BLOB), ((CAST(rt1.c2 AS BLOB)) NOT BETWEEN (CAST(rt0.c3 AS TEXT)) AND (IFNULL(x'', rt1.c0))), ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))<((rt1.c0 IN ()))) FROM rt0, rt1; -- 0ms;
SELECT ALL rt0.c0, CASE ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c4))  WHEN ((((((((NULL)OR(rt1.c2)))OR('*-mw9jec')))OR(rt1.c3)))OR(rt1.c0)) THEN rt1.c0 COLLATE NOCASE WHEN (((rt0.c1, rt1.c0, rt1.c4)) BETWEEN ((rt1.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, ''))) THEN ((rt1.c2) IS FALSE) WHEN x'63a7' THEN TRIM(DISTINCT rt1.c1) WHEN HEX('-834886695') THEN ((rt0.c2)+(rt1.c4)) WHEN GROUP_CONCAT(rt1.c1) THEN CAST('!硿]痞x' AS NUMERIC) ELSE ((((rt0.c0)AND(NULL)))AND(rt0.c1)) END, CAST(CAST(rt0.c3 AS INTEGER) AS BLOB), NULL, ((((rt0.c0)<=(rt1.c3))) IS FALSE) FROM rt0 WHERE (((((NULL IN ())))==((CASE WHEN 0.37700446681016686 THEN x'' END))));SELECT ((405472316)=(rt1.c3)) COLLATE BINARY FROM rt0, rt1 WHERE (((((((((NULL)OR('-1489786264')))AND('(h4HP^y')))AND(0X119c5ed0)))AND(x'')) COLLATE BINARY); -- 0ms;
SELECT GROUP_CONCAT(CASE rt0.c3  WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c2 END) OVER () FROM rt0;SELECT DISTINCT COUNT(*) OVER (), LAG((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))) NOT BETWEEN (0.9782716643484106) AND (((rt1.c2)IS(rt1.c3)))), (- (((rt1.c2) IS TRUE))), NULLIF(TYPEOF(rt0.c0), ((rt0.c0) IS FALSE))) OVER (), (((NOT (rt1.c2))) NOT BETWEEN ((rt1.c0 IN (rt0.c1))) AND (UPPER(rt0.c0))) FROM rt0, rt1 WHERE ((((((x''))=((NULL))))<(CASE WHEN '*' THEN NULL END))); -- 0ms;
SELECT ALL rt0.c2, rt0.c1, NULLIF(((rt1.c0) NOTNULL), ((NULL)IS NOT(rt0.c0))), (((rt1.c2)) NOT BETWEEN ((TRIM(rt1.c0))) AND (((((rt0.c2))!=((rt1.c2)))))), rt1.c2 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2) NOTNULL))+(((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))) FROM rt1, rt0; -- 1ms;
SELECT ALL x'178e' FROM rt1; -- 0ms;
SELECT ((CASE rt1.c2  WHEN rt0.c3 THEN rt1.c3 END)+((((rt1.c2, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c0, rt1.c2, rt0.c3)) AND ((rt1.c1, rt1.c1, rt0.c1))))), json_array(CAST(rt0.c3 AS INTEGER), -2123158560, x'', ((rt1.c4) NOTNULL)), ((CASE rt1.c1  WHEN rt0.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c4 END)IS NOT((('')IS NOT(rt0.c3)))) FROM rt1, rt0;SELECT DISTINCT ((((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0))) AND (CASE WHEN rt0.c3 THEN rt1.c1 END)) FROM rt0;SELECT ALL ((((rt0.c2) NOT BETWEEN ('1426662792') AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt1.c1)>=(rt0.c0)))) FROM rt0 WHERE ((((- (x'')))*((('ꭚY#apSj绤	') NOT BETWEEN (0.8439211304810463) AND (x''))))) ORDER BY rt1.c4 ASC  NULLS LAST;SELECT (((((0.700794217209305, rt1.c1, rt0.c0))>=((rt1.c2, rt1.c2, rt1.c1))))>(((rt1.c1)<=(x'')))) FROM rt1, rt0; -- 0ms;
SELECT ALL (+ ((rt0.c1 IN ()))), DENSE_RANK() OVER (), ((rt1.c2 COLLATE BINARY) NOT BETWEEN (((rt0.c1)|(rt0.c3))) AND (rt1.c0 COLLATE NOCASE)) FROM rt0, rt1 WHERE ((((((((((NOT (x'')))OR('211606515' COLLATE NOCASE)))AND(CAST(-448097243 AS REAL))))OR(CASE x''  WHEN x'be41' THEN NULL ELSE '|]Q^r!#' END)))OR(CASE WHEN '-' THEN 0.36711880056015733 ELSE x'' END))); -- 1ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2)))) AND ((((((rt1.c4)OR(rt1.c1)))OR(NULL))))) FROM rt0, rt1 LIMIT 1344937473 OFFSET 861965254; -- 0ms;
SELECT rt0.c2, (((((rt1.c0))<((0.13501814524424227)))) NOTNULL), ((CASE rt0.c2  WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 WHEN -2.12315856E9 THEN rt1.c2 END) NOT BETWEEN ((~ (0xffffffffe04b765e))) AND (rt1.c1 COLLATE NOCASE)) FROM rt1;SELECT DISTINCT (rt1.c4 COLLATE RTRIM IN ()) FROM rt1, rt0 WHERE (((((CAST(0.5429740235973994 AS TEXT))AND(SQLITE_SOURCE_ID())))AND(CASE -1707781848  WHEN NULL THEN 0.9782716643484106 ELSE '-1540633713' END))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS BLOB))<<(CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c1 END)), NULL, (((((NULL))<((rt1.c2))))=((rt1.c0 IN (rt1.c0, rt1.c1)))) FROM rt1, rt0 ORDER BY ABS(CASE rt0.c1  WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c3 END) ASC; -- 0ms;
SELECT DISTINCT (((0.304736132985714))<=((CAST(rt1.c0 AS TEXT)))) FROM rt0, rt1 WHERE (((CASE NULL  WHEN 0.9520517638595041 THEN 'rA' ELSE '0.24579958042323335' END) IS FALSE)); -- 0ms;
SELECT ALL CAST(rt1.c1 AS TEXT) COLLATE RTRIM, GROUP_CONCAT(CASE rt1.c4  WHEN rt0.c3 THEN rt0.c0 END), LAG(((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c2) AND (0xde79ba)), ((rt0.c3 COLLATE NOCASE) NOTNULL), (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) IN ((- (rt0.c2)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END))) OVER () FROM rt0 WHERE (CASE WHEN (((NULL, '1419540607', NULL, 'lt', NULL))!=((0.21232256960402773, NULL, NULL, x'', x'84fe'))) THEN CASE WHEN NULL THEN '150779801' END WHEN ((0xffffffff8116260f)%(875543126)) THEN ((((((((x'1625')AND('-179161189')))AND(x'')))AND('-1115938015')))AND(x'')) WHEN ((x'')>(0.700794217209305)) THEN 'b5i)' COLLATE BINARY END);SELECT DISTINCT CASE (rt0.c2 IN ())  WHEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c3 END THEN CASE x''  WHEN rt0.c1 THEN rt0.c1 END END FROM rt1, rt0 WHERE ((((('') NOTNULL))>(((((x'')AND(x'fc49')))OR(''))))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt1.c4, x'a2f6', rt1.c1)))IS NOT(((rt1.c1)+(rt1.c4)))), AVG(((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c1))) OVER (), NTH_VALUE(NULLIF(DISTINCT ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)), (- (rt0.c1))), ((('')) BETWEEN ((((rt0.c1)==(rt0.c0)))) AND ((CAST(rt0.c3 AS TEXT))))) OVER () FROM rt0 WHERE ((((((((('-558927143')AND(NULL)))OR(x'fbce')))OR((~ (x'')))))OR(DATETIME(-2.109120479E9, '-1465839077', 0.07660549517290771, 0.11566931146129567, NULL)))) LIMIT -113025618 OFFSET -289678625;SELECT ((rt1.c3)<<(0.2927970732249716)) COLLATE RTRIM FROM rt0 WHERE ((('덷>e范')/(0.8439211304810463)) COLLATE BINARY);SELECT DISTINCT TOTAL(TOTAL(CAST(rt1.c2 AS NUMERIC))) FROM rt0, rt1 WHERE (((((CAST(0.03790380397204696 AS NUMERIC))OR(x'' COLLATE NOCASE)))AND(((x'41d5')*(0.6680440339169536)))));SELECT CASE CAST(rt0.c2 AS INTEGER)  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c2 END THEN CAST(rt0.c2 AS BLOB) ELSE rt0.c3 COLLATE RTRIM END FROM rt0, rt1 NOT INDEXED WHERE ('') ORDER BY NULL DESC; -- 1ms;
SELECT ALL ((CAST(rt1.c1 AS REAL)) NOT BETWEEN (GROUP_CONCAT(rt0.c2)) AND (((rt1.c3)AND('18505898')))), NULL, ((CAST(rt0.c1 AS NUMERIC)) ISNULL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT 0xde79ba, AVG((((rt0.c3))<((rt1.c0)))) OVER (), ((((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))OR(rt1.c3)))AND(rt0.c0)))OR(rt1.c2 COLLATE NOCASE)))AND((- (rt1.c2)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((((- (rt1.c1)))OR(((((((((rt1.c2)OR(rt0.c3)))OR(rt1.c0)))OR(rt1.c3)))AND(rt0.c3)))))OR(rt1.c4 COLLATE RTRIM)) FROM rt0, rt1 WHERE (CASE WHEN CASE '-1746582213'  WHEN 1426662792 THEN 0xffffffffb5bb681f ELSE '4r' END THEN SQLITE_COMPILEOPTION_USED('820358000') ELSE '-27837772' END); -- 0ms;
SELECT DISTINCT CAST(((NULL)=('')) AS TEXT) FROM rt0 WHERE ((((~ ('e什(6]0 R0'))) NOTNULL)); -- 0ms;
SELECT DISTINCT rt0.c0, ((((((rt1.c3)!=(rt0.c3)))AND(rt0.c3)))AND(1426662792)), AVG(CAST(rt0.c0 AS BLOB)) OVER () FROM rt1 GROUP BY rt1.c2;SELECT DISTINCT TOTAL(NULL) OVER ( RANGE  CURRENT ROW EXCLUDE TIES), GROUP_CONCAT((NOT (rt1.c2))) OVER (), (((((rt0.c0))>((rt1.c1)))) IS FALSE) FROM rt1, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c3)/(rt1.c2)))) AND ((x'')))  NULLS FIRST; -- 0ms;
SELECT ALL CAST('9GHK\r6Z' AS INTEGER) FROM rt1 NOT INDEXED, rt0; -- 0ms;
SELECT ((CASE WHEN rt0.c1 THEN 0.14668127974959022 ELSE rt1.c1 END)IS(((x'') NOT BETWEEN (rt1.c1) AND (rt1.c0)))) FROM rt0, rt1; -- 4ms;
SELECT DISTINCT rt0.c0 FROM rt0, rt1 WHERE (((((NULL) BETWEEN ('ql') AND ('d(7作c?''')))+(((0.8043347803590069)<<(0Xffffffff94d4885b))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c0, rt1.c1, '819465416')) NOT BETWEEN ((rt1.c2, rt0.c2, rt1.c1)) AND ((rt0.c3, rt0.c0, rt0.c0)))))<=((((rt1.c2)-(rt0.c0))))) FROM rt1, rt0; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c4)LIKE(rt1.c1)) THEN 'I' END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (IFNULL(DISTINCT '430883983', rt0.c3) IN (((x'') NOT BETWEEN (rt0.c3) AND (rt1.c2)))) FROM rt1 WHERE ((+ ((('295460560') NOTNULL))));SELECT DISTINCT MIN(GROUP_CONCAT((((rt1.c1))>=((rt1.c3))))) FROM rt1, rt0 WHERE (((((7.05866586E8) NOT BETWEEN (0xffffffffaa7c9384) AND (NULL)))IS NOT('sn1'))) ORDER BY (((rt1.c3) IS FALSE) IN ()), CASE (~ (rt0.c1))  WHEN ((((((((NULL)AND(x'')))AND(rt0.c2)))AND(rt0.c0)))OR(rt1.c1)) THEN rt0.c1 COLLATE RTRIM END  NULLS FIRST;SELECT DISTINCT ((GROUP_CONCAT(rt1.c4)) IS TRUE) FROM rt1 WHERE ((+ ((0X449c4f5c IN ())))); -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE NOCASE, rt0.c1, rt0.c1 FROM rt1, rt0; -- 0ms;
SELECT ALL CAST(rt0.c1 COLLATE NOCASE AS TEXT) FROM rt0, rt1; -- 0ms;
SELECT rt1.c0 FROM rt1, rt0 GROUP BY (((rt0.c1) IS TRUE) IN ()), MAX(x'', rt1.c2) COLLATE RTRIM, (x'e435' IN (rt0.c0)) COLLATE NOCASE HAVING ((((GROUP_CONCAT(rt1.c0))AND(((rt0.c1) NOTNULL))))AND(((NULL)>=(rt1.c1)))) LIMIT -578636733; -- 0ms;
SELECT DISTINCT CASE rt1.c4 COLLATE RTRIM  WHEN CASE NULL  WHEN '\' THEN rt1.c4 END THEN 0.33650925454404146 WHEN rt0.c3 COLLATE BINARY THEN COUNT(rt0.c0) WHEN ((((rt1.c3)AND(rt1.c2)))OR(rt1.c2)) THEN MIN(rt1.c4) ELSE (- (rt0.c3)) END FROM rt0;SELECT ALL (((((((rt1.c0)OR(rt0.c2)))AND(rt1.c1)), ((rt1.c4)-(rt1.c3)), CAST(rt1.c3 AS TEXT)))<((((rt1.c2) NOT NULL), CASE WHEN 0.5940200218751569 THEN rt0.c1 WHEN 0.86335700241814 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c1 END, ((rt1.c3) NOT NULL)))) FROM rt1 LIMIT 1407330498;SELECT DISTINCT (((((rt1.c1)>=('/*?5\no'))))>((((rt1.c4) BETWEEN (rt0.c0) AND (rt0.c0))))) FROM rt1, rt0 GROUP BY CASE WHEN ((rt1.c2)IS NOT(rt0.c3)) THEN (rt1.c0 IN ()) END, ((((((((((rt1.c4)|(rt0.c3)))OR(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(rt0.c3 COLLATE NOCASE)))AND((rt0.c1 IN ()))))OR('0.5429740235973994')), ((((-1465839077)AND((rt1.c2 IN ()))))OR(LOWER(rt0.c0))); -- 0ms;
SELECT DISTINCT CASE CAST(0.832826795651145 AS INTEGER)  WHEN rt0.c0 COLLATE NOCASE THEN (((0.5580552445982434)) BETWEEN ((rt0.c1)) AND ((rt1.c0))) ELSE rt1.c0 COLLATE RTRIM END FROM rt1, rt0 WHERE (LENGTH(((NULL) BETWEEN ('') AND ('WL')))) ORDER BY rt0.c0  NULLS LAST; -- 0ms;
SELECT ALL SUM((+ (rt0.c3))) FROM rt1 WHERE ((((0.6479900937103458))<=((((('-1439419881')) BETWEEN ((0.3665011060016843)) AND ((NULL)))))));SELECT DISTINCT CUME_DIST() OVER (), RANK() OVER (), ((rt0.c3)/(CASE WHEN rt0.c2 THEN rt1.c0 ELSE NULL END)) FROM rt0 WHERE (((((x'fd53') NOTNULL)) BETWEEN (NULL COLLATE NOCASE) AND ('-1171183323' COLLATE NOCASE)));SELECT DISTINCT ((JULIANDAY(rt1.c1, rt0.c3, rt0.c2)) NOTNULL) FROM rt0;SELECT LOWER(DISTINCT rt0.c1 COLLATE NOCASE) FROM rt1 WHERE (CASE (((('1924602966')AND(0.5916658680930537)))OR(819465416))  WHEN ((1.7976931348623157E308)<>('-1258298645')) THEN (- (NULL)) END) ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))  WHEN rt1.c1 COLLATE BINARY THEN (+ (0.7304740238136334)) END DESC  NULLS LAST;SELECT ((((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c3 END)OR(rt0.c2)))AND(rt1.c4)), ((((((((((((rt1.c2)AND(rt0.c1)))OR(rt0.c2)))OR(((rt1.c4)>(rt1.c0)))))AND(rt1.c4)))OR((((rt1.c1, rt0.c1, rt0.c1)) NOT BETWEEN (('967307051', rt1.c4, rt0.c3)) AND ((0.49517878276897154, rt0.c2, rt1.c2))))))OR(CASE rt0.c2  WHEN rt0.c3 THEN rt1.c0 ELSE rt1.c1 END)), CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 END COLLATE BINARY FROM rt1;SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((LOWER(rt0.c1)) NOT BETWEEN (rt1.c2) AND (rt1.c1)) DESC  NULLS LAST) FROM rt1;SELECT ALL ((((((rt1.c2) NOTNULL))OR(rt1.c1)))OR((((rt1.c3))<=((rt0.c1))))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c3 IN (rt1.c1, rt1.c4)))+((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c3))))) FROM rt0 WHERE (CAST(((x'')||(0.15070568506535575)) AS REAL));SELECT DISTINCT CASE ((((rt0.c0)OR(rt0.c2)))OR(rt0.c3))  WHEN NULL THEN ((NULL) BETWEEN (rt0.c3) AND (rt1.c1)) END FROM rt1, rt0 WHERE ((((0.8690685704580835 COLLATE NOCASE))>(('덷>e范' COLLATE RTRIM)))) GROUP BY (~ ('-1504478377' COLLATE BINARY)); -- 0ms;
SELECT DISTINCT CAST(('^.' IN ()) AS NUMERIC) FROM rt1 WHERE (((((0X5a80273f) NOT NULL)) NOT BETWEEN ((('-1168086152') NOT NULL)) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((0.9364135447123596) NOT NULL) FROM rt1 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 END)AND(((rt0.c3)AND(rt1.c0))));SELECT DISTINCT CAST((((rt0.c2, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c4, rt1.c2, rt0.c2)) AND ((rt1.c2, rt0.c0, rt0.c3))) AS BLOB), ((((((rt0.c0, x'', rt0.c0))>((rt1.c0, rt1.c0, rt0.c3))), ((rt0.c1)OR(rt0.c0)), ((rt1.c3)>=(rt0.c1))))<=((((rt0.c3)*(rt1.c3)), NULLIF(rt1.c2, rt1.c0), ((rt0.c2)/(rt1.c1))))), x'' FROM rt0;SELECT ALL CASE 0.8260531040285787  WHEN UPPER(DISTINCT rt1.c2) THEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 END WHEN MIN(rt0.c0) THEN (NOT (rt0.c3)) WHEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c4)) THEN CAST(rt1.c1 AS NUMERIC) ELSE TIME(rt0.c1, rt1.c0, rt1.c3) END FROM rt1 ORDER BY LOWER(load_extension(rt1.c0))  NULLS FIRST;SELECT ((rt1.c3)IS NOT(rt1.c1)) COLLATE NOCASE FROM rt0, rt1 WHERE ((((('462962462') BETWEEN (x'') AND (x'')))IS((((('')OR(x'')))AND(x''))))); -- 0ms;
SELECT DISTINCT ((COUNT(*))OR((rt1.c0 IN ()))) FROM rt0; -- 0ms;
SELECT SUM(((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c2))) OVER () FROM rt0 ORDER BY '1233916066';SELECT CASE SUM(rt0.c3)  WHEN rt1.c4 THEN (((rt1.c4, rt0.c2, rt0.c2))<((rt1.c4, rt1.c0, rt1.c1))) ELSE ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) END FROM rt0, rt1 WHERE (((STRFTIME('', x'', NULL))<>('-531925410'))); -- 0ms;
SELECT ALL 284045769, ((rt1.c3)||(rt0.c0)) COLLATE NOCASE, x'' FROM rt0, rt1 WHERE (((((x'') BETWEEN ('S68⟠RY') AND ('癞\ne-['))) BETWEEN (TRIM('')) AND (((x'') BETWEEN (x'3ca6') AND (587781539))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1, rt0 WHERE ((((x'')GLOB(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) ISNULL))OR(rt1.c0)) WHERE (UNLIKELY('') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((- (rt0.c1))))<=((LIKE(rt1.c4, rt1.c2)))), ((((- (rt1.c2)), ((x'')|(rt0.c0)), (((-46219627))>=((rt0.c1)))))<=((CAST(rt1.c3 AS INTEGER), ((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c1)), ((rt0.c0) NOT NULL)))), CAST(TYPEOF(rt1.c4) AS INTEGER) FROM rt0, rt1 GROUP BY '1481106871', (((rt0.c1)) NOT BETWEEN ((rt1.c3 COLLATE RTRIM)) AND ((((rt0.c0)<>(rt0.c0))))), (CASE WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c3 END IN ()) HAVING (rt1.c3 COLLATE BINARY IN ()) ORDER BY CASE WHEN NULL THEN (rt0.c3 IN (rt1.c3)) WHEN (((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) THEN rt1.c1 COLLATE BINARY WHEN (+ (rt1.c2)) THEN (- (rt0.c2)) ELSE NULL END DESC, (- (((rt0.c0) ISNULL))) DESC; -- 0ms;
SELECT ALL ((((CAST(rt1.c0 AS INTEGER))OR(CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c0 END)))OR(COUNT(*))), INSTR((((rt0.c1))<>((rt1.c4))), rt0.c3), ((((rt0.c3)GLOB(rt0.c1))) BETWEEN (rt1.c4) AND (rt1.c2 COLLATE NOCASE)) FROM rt0 WHERE (((((0Xffffffff81732be0)OR('0.16329089528478113')))AND(x'')) COLLATE RTRIM);SELECT ALL CAST(rtreenode(rt1.c0, rt0.c3) AS TEXT) FROM rt1;SELECT (((((rt0.c1, rt1.c4, rt1.c3)) BETWEEN ((rt1.c4, rt1.c3, rt1.c4)) AND ((rt1.c1, rt0.c1, rt1.c2)))) NOT BETWEEN (((rt0.c3) BETWEEN (rt1.c0) AND (rt1.c2))) AND (MIN(rt0.c2))) FROM rt1;SELECT ALL ((((((rt0.c3)AND(rt1.c1)))OR(rt1.c0)))==((NOT (rt1.c1)))), (+ ((- (rt1.c0)))), 50371491 FROM rt1, rt0; -- 0ms;
SELECT ALL (((rt1.c0)) BETWEEN ((CAST(rt1.c3 AS INTEGER))) AND ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END))) FROM rt0;SELECT ALL ((((rt0.c0 COLLATE RTRIM)AND((rt0.c3 IN ()))))OR(MIN(rt0.c0))) FROM rt0, rt1 WHERE (load_extension(0.11476903980672204));SELECT (CAST(rt1.c3 AS INTEGER) IN (rt0.c0 COLLATE RTRIM)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (- (((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c0)))), NULLIF(((rt1.c4)OR(rt1.c4)), CAST(rt0.c1 AS BLOB)), CASE MIN(rt1.c4)  WHEN LOWER(DISTINCT rt0.c0) THEN (((rt1.c0, rt1.c4, rt1.c4))>=((rt1.c1, rt1.c2, rt1.c4))) END FROM rt0, rt1 WHERE (CASE ((0.4367669686363883) NOT NULL)  WHEN ((0.49869428435285823) BETWEEN (x'') AND (x'cc2c')) THEN x'' COLLATE BINARY END) ORDER BY ((((rt1.c1) NOTNULL)) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT ALL AVG(((rt0.c2)%(rt1.c1))) FROM rt1;SELECT ((rt1.c4) BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt0.c3))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c3)))) FROM rt0 WHERE (CASE WHEN ((((x'b3b0')OR(0.17496207441465994)))AND(0xffffffffc2e4b0e2)) THEN (((x'8dbf379e')) BETWEEN (('-1790363632')) AND (('sn1'))) ELSE (('otQU0-1⟻') ISNULL) END);SELECT ALL ((rt1.c2) BETWEEN (((rt1.c4)AND(rt0.c0))) AND ((rt0.c1 IN ()))) FROM rt1, rt0 WHERE ((+ ((((2117350190))<=(('1522805531')))))) GROUP BY CAST((((rt0.c1)) BETWEEN ((rt0.c1)) AND (('-959596092'))) AS NUMERIC); -- 0ms;
SELECT ALL (rt1.c2 IN ()) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((((- (rt1.c2)))OR(CASE WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c1 WHEN '-1429378366' THEN rt1.c2 ELSE 0.8433054749959927 END)))AND(CASE rt1.c1  WHEN rt1.c4 THEN NULL ELSE rt1.c4 END)), ((CAST(rt1.c0 AS NUMERIC)) NOT NULL), (((rt1.c3, rt0.c2, rt1.c3)) BETWEEN ((((rt1.c3) ISNULL), NULL, CAST(rt0.c0 AS REAL))) AND ((json_type(rt1.c2), rt1.c2 COLLATE NOCASE, CAST(rt1.c1 AS REAL)))) FROM rt1, rt0 WHERE (((((NULL)GLOB('-885028795')))GLOB(((x'') BETWEEN (-1e500) AND (0.22643898846100607))))); -- 1ms;
SELECT DISTINCT TOTAL(NULL), ((CAST(rt0.c3 AS TEXT))LIKE(rt1.c0)), ((rt1.c1 COLLATE RTRIM)<(NULL)) FROM rt0 WHERE (LOWER(DISTINCT ((0.7061478520514332)OR(NULL))));SELECT ALL (+ ((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM rt0, rt1 WHERE ((((+ ('1287193750'))) NOT BETWEEN ((('117545406')AND(x''))) AND (((0.4573081721829726) BETWEEN (NULL) AND (-9.59596092E8))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE ((((0.6489023023812122 IN ())) BETWEEN (CASE 0.0  WHEN 0.3847612518394915 THEN 'fU/V/ijk' ELSE '' END) AND (CAST('-128847637' AS BLOB)))); -- 0ms;
SELECT ((rt0.c2 COLLATE NOCASE)>(((rt1.c4)<=(rt0.c2)))) FROM rt0, rt1 LIMIT 292541507 OFFSET -895701324; -- 0ms;
SELECT ALL rt1.c2, '0.38108964359018915', ((COUNT(rt1.c1))>=(rt0.c1 COLLATE RTRIM)) FROM rt1 WHERE (x'');SELECT ALL CASE WHEN NULL THEN CASE rt0.c1  WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c0 END END FROM rt1 WHERE (((CASE WHEN NULL THEN 'tX' END)|(CAST(x'' AS REAL)))) GROUP BY ((rt0.c0)*((- (rt1.c0))));SELECT ALL (NOT (((((rt1.c4)OR(rt1.c3)))AND(rt1.c4)))) FROM rt1, rt0 WHERE ((('/*?5\no' COLLATE NOCASE)<=(0.28791202068104316 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((rt1.c4 IN ()) IN ()) FROM rt1, rt0 LIMIT -1115938015 OFFSET 1693387577 INTERSECT SELECT '^K黯V' FROM rt0, rt1;SELECT DISTINCT (((((rt1.c3))<=((rt1.c0)))) NOTNULL) FROM rt0, rt1 WHERE (((x'66c0')%(((-1e500) NOT BETWEEN (x'') AND (0.12314747423107164))))) LIMIT -2037896032; -- 0ms;
SELECT ALL TOTAL(rt1.c0) FROM rt1 ORDER BY CASE ((((rt0.c1)AND(rt0.c0)))AND(rt1.c0))  WHEN (((rt1.c3, rt1.c1, NULL))<>((rt0.c3, rt0.c2, rt1.c2))) THEN ((rt1.c2)>=(rt0.c0)) ELSE rt1.c0 COLLATE NOCASE END  NULLS LAST;SELECT ALL rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c4 AS INTEGER) AS REAL), NTH_VALUE(-2129254897, x'ef9b') OVER ( RANGE  UNBOUNDED PRECEDING), COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN '' THEN ((NULL)IS NOT('-397147722')) ELSE NULL COLLATE BINARY END) GROUP BY (+ (rt1.c3 COLLATE BINARY)), rt0.c2, ((((((rt0.c1)>>(rt1.c3)))AND(rt0.c0)))AND((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))); -- 0ms;
SELECT ALL SUM(rt1.c0) OVER (), COUNT((rt1.c3 IN (rt1.c2))), ((rt0.c0)OR(COUNT(*))) FROM rt1 WHERE (((TYPEOF(x''))<>(0.5930870232435678 COLLATE NOCASE)));SELECT load_extension(((-2129254897) ISNULL)) FROM rt1, rt0 ORDER BY ((((((rt1.c3)==(x'1e039b23')))AND((((rt0.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))))))AND((+ (rt1.c2)))) ASC, rt0.c0  NULLS LAST;SELECT DISTINCT LIKELY(((rt1.c4)>=(rt1.c1))), rt1.c4, ((NULL) NOT BETWEEN ((rt1.c2 IN (rt1.c4))) AND ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt0;SELECT DISTINCT ((rt1.c1)>(rt0.c0)) COLLATE RTRIM, ((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c2)) COLLATE NOCASE, ((CASE WHEN rt1.c4 THEN rt0.c3 END) BETWEEN (((NULL) NOTNULL)) AND (((rt1.c2)-(rt1.c2)))) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (((((((rt0.c2))=((rt0.c3))))OR(NULL)))AND(((rt1.c2)||(rt0.c1)))), ((rt1.c1 COLLATE NOCASE)&(rt1.c0 COLLATE RTRIM)), CASE WHEN CAST(x'' AS REAL) THEN (~ (x'')) ELSE ((rt1.c4) ISNULL) END FROM rt0, rt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE ((((((x'deb3') BETWEEN ('n]') AND (NULL))))=((((((((((-1339117802)OR(NULL)))OR('0.38108964359018915')))OR(x'')))OR(NULL)))))) GROUP BY (rt1.c0 COLLATE BINARY IN ()) ORDER BY (- (rt1.c1)) COLLATE RTRIM  NULLS FIRST;SELECT DISTINCT -2.109120479E9 FROM rt1; -- 0ms;
SELECT rt0.c0 COLLATE NOCASE FROM rt1, rt0 WHERE ((((x''))<=((0.1202695698614823))) COLLATE RTRIM); -- 0ms;
SELECT ALL SUM(COALESCE(rt0.c2, rt1.c3)) OVER ( ORDER BY ((((rt0.c1) IS TRUE)) IS FALSE), json_array(CASE WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END, (((NULL, rt0.c3, rt1.c4)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt1.c0, rt1.c3, rt1.c4)))) DESC), (((rt1.c0, rt0.c2, rt0.c3, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt1.c2, rt1.c4, (~ (rt1.c0)), x'ef2f')) AND ((json_object(rt1.c3, rt1.c2, rt1.c0, rt0.c3, rt1.c0, rt1.c2), (((rt1.c1))<=((rt0.c3))), ((rt1.c2) ISNULL), rt1.c0, rt0.c0))), ((rt1.c1)<>(rt1.c3 COLLATE NOCASE)) FROM rt1, rt0 WHERE (LIKELIHOOD(DISTINCT LAST_INSERT_ROWID(), 0.39837506768593867));SELECT ALL CASE WHEN (NOT (rt0.c3)) THEN ((rt1.c2)IS(rt1.c1)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((((rt1.c2)OR(rt1.c4)))AND(rt0.c2)) WHEN rt0.c3 COLLATE BINARY THEN rt0.c0 WHEN ((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c0)) THEN ((rt0.c0) NOT NULL) WHEN GROUP_CONCAT(rt1.c2) THEN (rt1.c4 IN ()) END FROM rt0 WHERE (UNLIKELY('1608245297'));SELECT DISTINCT CAST((((rt0.c0))==((rt1.c1))) AS NUMERIC) FROM rt0;SELECT (NOT ((rt0.c1 IN ()))), GROUP_CONCAT(rt1.c0 COLLATE BINARY), 1634397381, ((((((rt1.c3)AND(rt1.c0)))AND(rt0.c1)))OR(CASE WHEN rt1.c4 THEN 'C' WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c4 THEN rt1.c0 END)), ((COALESCE(rt0.c0, rt1.c0))>>(0.6585447810329379)), (((NOT (rt1.c0)))<(rt1.c1)), COUNT(*) FILTER(WHERE CAST(((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c3)) AS TEXT)) OVER () FROM rt1;SELECT ALL ROW_NUMBER() OVER () FROM rt1 WHERE (CASE (~ (NULL))  WHEN CAST(NULL AS NUMERIC) THEN CAST('-1217508717' AS INTEGER) END) GROUP BY ((rt0.c0) NOT BETWEEN (((rt1.c4)-(NULL))) AND (((((((((rt0.c1)OR(rt1.c4)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c2)))) HAVING ((((((rt0.c0) IS FALSE))AND(rt1.c2)))AND(SUM(rt1.c3)));SELECT ALL rt1.c0 FROM rt1, rt0; -- 0ms;
SELECT ALL CASE WHEN -885028795 THEN rt0.c2 END COLLATE NOCASE FROM rt1, rt0 LIMIT 1608245297; -- 0ms;
SELECT (((((rt0.c2))<=((rt1.c2))))!=(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)) FROM rt0, rt1 WHERE (((('1459016329', NULL, '1431124819')) NOT BETWEEN (((('') BETWEEN (NULL) AND (x'')), (- (x'')), ((x'311e') ISNULL))) AND ((((((0.2783752143338918)OR(0X32e2748a)))OR(0.10114268017041328)), (((0.14668127974959022)) BETWEEN ((0.9605723896032583)) AND ((x''))), 0.7591063706234588 COLLATE RTRIM)))) GROUP BY CASE ((rt0.c1) IS FALSE)  WHEN ((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)) THEN '1236407275' END; -- 0ms;
SELECT (((((rt0.c3))<>((rt1.c1))))&(LIKELIHOOD(rt0.c2, 0.6903188530411125))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c2)))-(rt1.c1)), rt1.c0, CAST(rt0.c2 AS BLOB) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((((((rt1.c2)AND(rt1.c1)))AND(rt0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN 0.232470782085067 THEN rt0.c3 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c2 END))) FROM rt0 WHERE ((((x'')-('')) IN ()));SELECT TOTAL(rt1.c4 COLLATE NOCASE) FROM rt0, rt1 WHERE (((NULL) NOT BETWEEN (((-46219627) IS FALSE)) AND (((NULL) BETWEEN (NULL) AND ('2044348790'))))); -- 0ms;
SELECT ALL (- ((rt1.c1 IN (rt1.c3, rt1.c2)))) FROM rt1, rt0 WHERE (((((0Xffffffffc84c9422) BETWEEN ('}yG') AND (x'0d7934b6')))<((((0Xffffffffe7a0d60d)) NOT BETWEEN ((x'')) AND (('-594365577')))))) ORDER BY CAST(rt1.c4 COLLATE NOCASE AS INTEGER); -- 0ms;
SELECT ALL rt0.c0, ((((((rt0.c2)OR(rt1.c2)))AND(rt0.c3))) IS FALSE), LIKELIHOOD(DISTINCT ((rt0.c3) IS TRUE), 0.007965783298447882) FROM rt0, rt1 WHERE ((((((('341551662')AND('r\n''i<aZ(t')))OR(x'48ee')))<(IFNULL(DISTINCT '-618198219', NULL)))); -- 0ms;
SELECT x'' FROM rt0 INNER JOIN rt1 ON CASE WHEN rt0.c0 THEN rt1.c1 END COLLATE RTRIM WHERE ((((+ (0.5429740235973994))) BETWEEN ('-1962203562' COLLATE RTRIM) AND ((NULL IN (x'', '-1798010789'))))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((('0.5642215272877549')) BETWEEN ((((0x6d75ebeb) NOT NULL))) AND (((+ (rt0.c2)))))) OVER () FROM rt1, rt0; -- 0ms;
SELECT ALL LAST_VALUE(TYPEOF(NULL)) OVER () FROM rt0, rt1 WHERE ((((CAST(x'' AS BLOB)))<>(((NOT (NULL)))))) LIMIT -740379293; -- 0ms;
SELECT DISTINCT (- (CASE rt0.c3  WHEN NULL THEN rt1.c0 END)) FROM rt0, rt1 LIMIT -274830511; -- 1ms;
SELECT DISTINCT CASE rt1.c0 COLLATE BINARY  WHEN COUNT(rt1.c0) THEN ((rt1.c3) ISNULL) END, CAST(HEX(DISTINCT rt1.c3) AS INTEGER), (CAST(rt0.c2 AS TEXT) IN ()), (((x'', rt1.c4, rt1.c0)) NOT BETWEEN ((rt1.c3 COLLATE RTRIM, ((((rt1.c2)OR(rt1.c0)))AND(rt0.c0)), ((rt1.c0)=(rt1.c2)))) AND ((((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)), ((((((((rt1.c4)AND(rt1.c1)))AND(rt1.c3)))OR(rt0.c2)))AND(rt0.c0))))), CASE WHEN ((rt1.c3) IS TRUE) THEN ((rt1.c2)*(rt0.c1)) ELSE ((((rt0.c2)AND(rt1.c3)))AND(rt0.c0)) END FROM rt1, rt0 WHERE (0.7256190850088488); -- 4ms;
SELECT DISTINCT ((CAST(rt0.c0 AS BLOB))|((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt1.c4))))), IFNULL(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)||(rt1.c2))), MIN(((rt1.c2)>(rt1.c4))) FROM rt0, rt1; -- 0ms;
SELECT ALL CASE WHEN rt0.c3 THEN json_insert(rt1.c1, rt0.c0, rt1.c1, rt1.c3, rt0.c2) WHEN ((rt1.c3)*(rt1.c2)) THEN CASE rt1.c0  WHEN rt1.c4 THEN rt1.c0 END WHEN rt1.c4 COLLATE BINARY THEN ((rt1.c3)=(rt1.c0)) END FROM rt1;SELECT DISTINCT ((((rt0.c3)>(rt0.c3))) BETWEEN ('q(') AND (rt1.c2)) FROM rt0, rt1 WHERE (63009958) ORDER BY ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (rt1.c3) AND (TYPEOF(rt1.c3))); -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE BINARY)<=((rt0.c1 IN ()))) FROM rt1 WHERE (-18877930 COLLATE RTRIM); -- 0ms;
SELECT ALL (((- (rt1.c4))) NOT BETWEEN (((rt0.c3)<=(rt0.c0))) AND (((rt1.c2)<<(rt1.c1)))), COUNT(*) OVER (), (((rt1.c2 IN ()))&('1561629921')), rt1.c1, (~ (((-44001195) NOT BETWEEN (rt1.c3) AND (rt1.c4)))), ((((NULL) IS TRUE)) NOTNULL), RANK() OVER () FROM rt0;SELECT ALL ((CAST(0.019645579623094322 AS TEXT))<(rt1.c2 COLLATE BINARY)) FROM rt1; -- 0ms;
SELECT DISTINCT load_extension(TRIM(DISTINCT rt1.c0), 1.26336913E8), COUNT(*) OVER (), COUNT(*) OVER (), ((MAX(rt1.c2))/(((rt0.c1)<<(rt1.c4)))), (COALESCE(0x1dba048e, rt0.c2, rt1.c3, rt1.c3) IN ()) FROM rt0, rt1 WHERE (((((NULL)OR(0.7687089204902771)))AND('T?')) COLLATE BINARY);SELECT ((((((rt1.c1) IS TRUE))AND((((rt1.c3, rt1.c0, rt1.c1, rt1.c0, rt0.c0))<>((rt1.c3, rt1.c1, rt1.c0, rt1.c1, x''))))))AND((NOT (rt0.c2)))) FROM rt1;SELECT NTILE(CASE ((rt1.c3)<<(rt1.c0))  WHEN (rt1.c3 IN (rt1.c1)) THEN ((rt0.c0) IS TRUE) ELSE LIKELY(DISTINCT rt0.c2) END) OVER ( ORDER BY (+ ((~ (rt1.c1))))), (CAST(rt0.c1 AS NUMERIC) IN (rt1.c0)), CASE WHEN CAST(rt1.c2 AS BLOB) THEN ((rt1.c3)GLOB(rt0.c1)) END FROM rt0, rt1;SELECT ((((TRIM(rt1.c2))OR((+ (rt1.c0)))))AND(((rt1.c2) IS FALSE))), (NOT (CAST(rt1.c4 AS INTEGER))), ((x'3faf')<(0.7895445408242896)) FROM rt0, rt1; -- 0ms;
SELECT ALL ((CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c3 WHEN rt1.c3 THEN rt1.c2 END) ISNULL) FROM rt1 WHERE ((NOT (('220729725' IN (NULL, NULL)))));SELECT DISTINCT ABS(((rt1.c3) IS FALSE)) FROM rt1, rt0; -- 0ms;
SELECT (((',1}O' IN (rt1.c3, rt0.c0)))GLOB(CAST(rt0.c3 AS BLOB))), NULL, COUNT(*) OVER () FROM rt1, rt0 WHERE (((CAST('c' AS NUMERIC))<>((('1407330498')&(0.2873144763716534))))); -- 0ms;
SELECT DISTINCT (((((rt1.c3) NOT NULL), rt0.c2 COLLATE BINARY, COUNT(rt0.c0)))=((CAST(rt1.c2 AS INTEGER), ((rt0.c3) NOT NULL), rt1.c3))), NULL, '' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c3)>=(rt1.c3)) AS INTEGER) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT TOTAL(rt1.c4) FROM rt1, rt0 WHERE (((((-929547544) BETWEEN (x'') AND (x'f33e'))) NOTNULL)) ORDER BY (((((rt1.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c3)))) NOTNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((rt1.c1)IS(rt0.c0)))&((rt1.c0 IN ()))), ((((((rt0.c1)AND(rt1.c2)))AND(rt1.c4))) IS FALSE) FROM rt1;SELECT DISTINCT ((((CAST(rt0.c0 AS REAL))AND(x'')))AND((rt1.c2 IN (rt0.c3)))), ((((NULL)AND(NULL)))OR(((((((((rt1.c3)OR(rt0.c0)))AND(rt0.c3)))AND(rt1.c0)))AND(rt0.c1)))), NULL FROM rt0 WHERE ((((((NULL)IS NOT(1344937473)), ((-1.087272414E9) BETWEEN (NULL) AND (0xffffffffb5379654)), ((0.14668127974959022) NOT BETWEEN (0.5667002941572497) AND (NULL)), (('0.13501814524424227')&(NULL)), ((('*%v|叁#陔', '1573926680', '-2109120479')) BETWEEN (('-228890554', '', 'dIlL&6醝')) AND ((405472316, x'', NULL)))))<=(((((0.6932137256918297, 0.8690685704580835, 0.28102432624933105)) NOT BETWEEN ((-1341811953, '-1146406356', NULL)) AND ((x'0ea9', 'SA0', x''))), ((('-531925410', x'', '967307051')) BETWEEN ((x'', 0.371938367048417, NULL)) AND (('f[Ꮻd*\', -557996947, NULL))), (NULL IN ()), ((NULL)<>('-1456912582')), ((NULL)<<(NULL)))))) ORDER BY (~ ((((rt0.c2))=((rt1.c2))))) ASC;SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt1.c3)))IS(((rt0.c2)>=(rt0.c2)))) FROM rt1;SELECT DISTINCT CASE (((rt0.c2, rt1.c2, rt0.c0, rt1.c3, rt1.c4))<((rt0.c0, x'', rt1.c4, rt0.c3, rt1.c3)))  WHEN CASE WHEN rt1.c4 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 WHEN '-1465839077' THEN rt1.c4 END THEN CAST(rt1.c1 AS INTEGER) END FROM rt0 WHERE ((((-1.217508717E9 IN ())) BETWEEN (NULL COLLATE BINARY) AND (x'' COLLATE BINARY))) GROUP BY ((((rt1.c0)GLOB(rt0.c2))) NOT BETWEEN ((~ (rt1.c4))) AND (rt0.c3 COLLATE NOCASE)) HAVING -1.13025618E8;SELECT DISTINCT LIKE(((rt0.c0)AND(rt0.c0)), ((rt0.c2)>=(0.19747494530051335)), 'W') FROM rt0, rt1; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((NULL)<>(rt1.c2)), ((rt0.c2)/(rt0.c0)), CASE x''  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c4 END, CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c2 END, ((rt0.c2)IS(rt0.c1)), (~ (rt1.c4))) FROM rt1;SELECT ALL ((NULL)/(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c3 THEN 'lRl-\h' END)) FROM rt1; -- 0ms;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ('9F1)QZ'); -- 0ms;
SELECT DISTINCT rt0.c1, rt1.c1, ((CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c2 END)&((~ (0.7896567239343459)))), rt0.c2, ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((((rt0.c0))=((rt0.c0))))) FROM rt1;SELECT ((((CAST(rt0.c3 AS INTEGER))AND(((rt0.c3)<=(rt0.c3)))))AND((- (rt1.c4)))) FROM rt1, rt0 WHERE ((((('1333414925')AND((('884056472')OR(NULL)))))OR((((('1608245297')AND(NULL)))AND('1204222625'))))); -- 0ms;
SELECT (~ ('C\n	bl{q?R')) COLLATE BINARY, CASE (((rt0.c0, rt1.c1, rt0.c2)) NOT BETWEEN ((rt1.c3, rt1.c4, rt1.c3)) AND ((rt1.c1, rt0.c0, rt1.c0)))  WHEN (+ (rt1.c4)) THEN LIKELIHOOD(rt0.c1, 0.11945196379887024) ELSE CAST(rt0.c0 AS TEXT) END, (((rt0.c2)) BETWEEN (((rt1.c0 IN ()))) AND ((CASE WHEN rt0.c0 THEN NULL END))) FROM rt1, rt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE WHEN ((x'') BETWEEN ('0.12580758409365478') AND ('')) THEN ((0.4430495790513592) NOT BETWEEN (0.52379853519623) AND (x'5eca')) ELSE ((0.42110388744106364)-(0.965081515626133)) END) LIMIT 502389186; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0)<=(rt1.c2)) THEN CAST(rt0.c0 AS NUMERIC) ELSE (((x'ff74')) NOT BETWEEN ((rt1.c4)) AND ((rt0.c1))) END, CAST((rt0.c0 IN (rt0.c3, rt1.c2)) AS INTEGER), MIN(CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c1 END) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE TYPEOF(DISTINCT rt0.c1)  WHEN ((((((((rt1.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt1.c4)) THEN ((((rt1.c0)OR('+(qtL')))OR(rt1.c3)) ELSE '1608245297' END FROM rt1, rt0 GROUP BY CASE WHEN (((rt1.c4))>=((rt1.c4))) THEN (((rt1.c4)) BETWEEN ((rt1.c0)) AND ((0.33060636969748547))) ELSE ((rt1.c2)<<(rt1.c0)) END; -- 1ms;
SELECT DISTINCT TOTAL(((rt0.c3) BETWEEN (rt1.c0) AND (rt0.c3))), x'', CAST(UNLIKELY(rt1.c4) AS REAL), (NOT (0.07570678973531131 COLLATE BINARY)), (('h]%\rm')<>((rt1.c4 IN ()))) FROM rt0;SELECT COUNT(((rt0.c1)|(rt0.c2))) FILTER(WHERE (+ (((((rt1.c3)AND(rt1.c2)))OR(rt0.c0))))) OVER ( ORDER BY (((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((NULL))))GLOB(((((rt1.c0)OR(rt0.c1)))OR(x'')))), rt0.c2  NULLS LAST), TOTAL(0.866451215809581) OVER (), IFNULL(rt0.c2 COLLATE NOCASE, (((rt1.c2))=((rt1.c4)))), MAX((NOT (rt0.c2))), (((((((rt1.c4)AND(rt0.c1)))AND(rt1.c3))))<((''))) FROM rt1, rt0 WHERE ((((((x'b957836f' IN ()))AND(('1561629921' IN ()))))AND(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT (- ((rt1.c0 IN ()))) FROM rt0, rt1; -- 0ms;
SELECT MAX(((rt1.c2)/(rt1.c1)) COLLATE BINARY) FROM rt1, rt0 WHERE ((- ((~ (x'ba33'))))); -- 1ms;
SELECT ((COALESCE(DISTINCT rt0.c3, rt0.c2))||(LIKELY(DISTINCT rt1.c0))), CUME_DIST() OVER (), rt1.c1 FROM rt1, rt0 ORDER BY LIKELIHOOD(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)), 0.8771089014105402)  NULLS LAST; -- 0ms;
SELECT DISTINCT -1.115938015E9, CAST(rt0.c3 AS NUMERIC), CAST(rt1.c4 AS TEXT) FROM rt1, rt0; -- 0ms;
SELECT ALL CAST(rt1.c3 AS INTEGER) COLLATE BINARY FROM rt1, rt0 WHERE ((((('1541498724') IS TRUE)) BETWEEN (x'') AND (CAST(-4.8987508E7 AS REAL)))) ORDER BY ((rt0.c2 IN ()) IN (rt0.c3)) ASC  NULLS LAST, CAST(ABS(DISTINCT rt1.c4) AS REAL); -- 0ms;
SELECT ALL ((((rt1.c0) IS FALSE))GLOB(((rt1.c4)%(rt1.c2)))), ((MIN(rt1.c3))AND(CASE WHEN rt0.c0 THEN -1865626589 WHEN rt1.c2 THEN NULL WHEN rt0.c1 THEN rt0.c2 END)), AVG(((rt1.c4)IS(rt0.c1))) OVER () FROM rt1;SELECT DISTINCT RANK() OVER (), CAST(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt1.c4)) AS INTEGER), (((rt0.c1)) BETWEEN ((rt1.c4 COLLATE RTRIM)) AND ((((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c0))))), (((rt1.c1 IN ()))OR(((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c4)))), ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) IN ()) FROM rt0, rt1 WHERE ((((NULL)) NOT BETWEEN (((NOT ('')))) AND (((('1445573109')||('')))))) ORDER BY (('1697316058') ISNULL) COLLATE RTRIM; -- 1ms;
SELECT ALL (((((rt1.c4, '1561629921', rt1.c1)) NOT BETWEEN ((rt0.c0, rt1.c3, NULL)) AND ((rt0.c3, rt1.c0, rt1.c3))))/(CAST(rt1.c4 AS INTEGER))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST((((rt1.c0, rt1.c0, rt0.c2))=((rt0.c2, rt0.c2, rt0.c3))) AS TEXT) FROM rt1, rt0 WHERE (0.1383478830679763 COLLATE BINARY); -- 0ms;
SELECT UNLIKELY(TRIM(x'4a84')) FROM rt0, rt1; -- 0ms;
SELECT NULL FROM rt0; -- 0ms;
SELECT ALL rt1.c2, (((rt0.c1)IS NOT(rt0.c2)) IN (CASE rt0.c2  WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c3 END, ((rt0.c0)%(rt0.c1)))), 0.9142553563050887 FROM rt1 WHERE ((~ (((x'c622614b')+(x'')))));SELECT DISTINCT CAST(rt1.c2 AS BLOB) COLLATE RTRIM FROM rt0;SELECT DISTINCT (- (CAST(rt0.c3 AS BLOB))) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT SUM(((rt0.c1)|(rt0.c3))) FILTER(WHERE LIKELIHOOD(CAST('' AS NUMERIC), 0.19203270523977667)) OVER (), MAX(((rt1.c3) ISNULL)) COLLATE BINARY, ((((rt0.c2)|(rt1.c3))) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND ((rt1.c1 IN (rt1.c4, rt0.c2)))) FROM rt0, rt1 WHERE (((CAST(x'aae3' AS INTEGER))IS NOT(((-42381003) NOT BETWEEN (x'2e35') AND (0.44875609089424306))))); -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT rt0.c1))IS NOT(MIN(rt1.c4))) FROM rt0;SELECT GROUP_CONCAT(CASE WHEN rt1.c3 THEN rt1.c3 WHEN x'' THEN rt1.c3 WHEN rt0.c0 THEN rt1.c1 END) OVER () FROM rt0 WHERE (CASE (('RO') NOTNULL)  WHEN (NULL IN ()) THEN CAST(NULL AS NUMERIC) END);SELECT DISTINCT ((CAST(rt1.c3 AS REAL)) IS TRUE) FROM rt1; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, rt1 WHERE ((x'bcaf' COLLATE RTRIM IN ())); -- 0ms;
SELECT ALL '-2013668140' COLLATE BINARY FROM rt0 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN '' WHEN ((-1367791734)/(x'ebccbcd7')) THEN ((((0.386950595064098)AND(0xffffffffa8a1121b)))AND('0.7687089204902771')) WHEN x'' THEN (((0.865218595597091, x'', 1.861962871E9))<=(('0.7304740238136334', '1227009645', 0.8709007193218563))) END); -- 1ms;
SELECT DISTINCT (((((rt1.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c4))))<=((((rt0.c1))<((rt0.c2))))), ((0.5743596683701474) NOT BETWEEN ((rt1.c0 IN (rt1.c2))) AND (rt0.c0)), (((((rt1.c2)OR(rt1.c1)))OR(rt0.c0)) IN ()) FROM rt1, rt0 WHERE (0xffffffffab245894 COLLATE RTRIM) ORDER BY ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) NOTNULL) ASC  NULLS LAST, (LOWER(DISTINCT rt1.c0) IN (0.2563474950334519))  NULLS LAST, ((((CAST(rt0.c2 AS INTEGER))AND(ABS(DISTINCT rt1.c4))))OR(((rt0.c2)*(rt0.c2))))  NULLS FIRST, 0x45e8a9e9;SELECT ALL CAST(((rt0.c1) ISNULL) AS INTEGER), ((((rt1.c0 IN ())))=(((rt0.c2 IN (rt1.c2))))), ((x'7869')>=((NOT (rt1.c2)))) FROM rt1;SELECT ((rt1.c3 COLLATE NOCASE) BETWEEN ((('4Z1]') NOT NULL)) AND (CASE WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)), LOWER(DISTINCT (~ (rt1.c1))), ((((((((((rt1.c4)<=(rt0.c2)))OR(CASE rt0.c0  WHEN 'fu/v/ijk' THEN rt1.c2 END)))OR(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)))))OR(((rt0.c2)<=(rt1.c0)))))OR(SQLITE_SOURCE_ID())) FROM rt1, rt0 WHERE ((((((('!')AND(0.7787796324167147)))OR('e什(6]0 R0')))%(-1168086152))) ORDER BY (((rt1.c0) IS TRUE) IN ()) ASC  NULLS FIRST, (((json(x'1264')))!=((CASE WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c3 END))), CAST(rt1.c1 COLLATE RTRIM AS BLOB)  NULLS FIRST; -- 0ms;
SELECT 747608560 FROM rt1, rt0 GROUP BY ((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c0))) NOTNULL), (- (((rt0.c1) IS FALSE))), NULL COLLATE BINARY; -- 0ms;
SELECT ALL ((((((rt0.c1)AND(rt1.c3)))OR(rt1.c1)))>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0 WHERE (TRIM(CAST('' AS TEXT)));SELECT CASE rt1.c1  WHEN ((rt1.c1) IS TRUE) THEN (rt1.c2 IN (rt0.c0, 0.5003274649608483)) END FROM rt0 WHERE (CASE WHEN CASE WHEN 1001675408 THEN NULL WHEN '-1439419881' THEN '' WHEN x'' THEN 1435775594 END THEN (0.2775543385361471 IN (182306145)) ELSE CAST('t ' AS INTEGER) END);SELECT (((CAST(rt1.c4 AS BLOB), rt1.c3 COLLATE NOCASE, (NOT (x''))))>=((UPPER(DISTINCT rt1.c3), CAST(rt0.c1 AS REAL), ((((rt0.c3)AND(rt1.c0)))AND(rt0.c1))))), (((rt0.c2 IN ()))<<((((rt1.c2, rt1.c3, rt1.c3)) BETWEEN ((rt1.c1, -1649148652, rt1.c1)) AND ((rt1.c3, rt0.c1, NULL))))), ((CASE x'9b31'  WHEN rt1.c4 THEN rt1.c4 END)>=(TOTAL(rt1.c4))) FROM rt0 WHERE (CASE WHEN (x'' IN ()) THEN (('-453719473') ISNULL) END);SELECT DISTINCT LEAD(((CASE WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END) NOTNULL), (- ((rt1.c2 IN ()))), (+ (0xffffffffccf3a2bc COLLATE RTRIM))) OVER (), x'7f84', ((((rt1.c3) BETWEEN (rt0.c2) AND (x''))) NOT BETWEEN (((((((((rt0.c3)AND(rt1.c2)))OR(rt1.c0)))AND(rt0.c1)))OR(rt0.c0))) AND (((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c4)))), ((rt0.c2 COLLATE NOCASE)AND(rt0.c0 COLLATE NOCASE)), CAST(LOWER(rt0.c3) AS NUMERIC) FROM rt1;SELECT ((((rt1.c1) ISNULL)) ISNULL) FROM rt1; -- 0ms;
SELECT (((((rt1.c1, rt1.c2, rt0.c3))>=((rt0.c1, rt0.c0, rt1.c1)))) BETWEEN ((((rt0.c0))<=((rt0.c0)))) AND (rt0.c1)), ((COUNT(rt1.c4))OR((- (rt0.c1)))), AVG(NULL) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c4 COLLATE RTRIM, COUNT(*), CAST((rt0.c0 IN (rt1.c0)) AS INTEGER) FROM rt0 WHERE ((NULL IN ((((((((('315045916')OR('1861962871')))OR(NULL)))OR(0.12573080398856717)))AND('-1746621455')))));SELECT DISTINCT SUM((rt0.c0 IN ())) COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN (((+ (rt1.c1)))) AND ((COUNT(rt1.c4)))), CAST(rt0.c0 AS INTEGER) FROM rt0;SELECT DISTINCT ((CAST(rt1.c0 AS NUMERIC))>>((((rt0.c1))>=((rt1.c0))))), (((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c1)) IN ()), ((AVG(rt1.c3))AND(rt1.c2)) FROM rt0;SELECT DISTINCT NTILE((((rt1.c4 COLLATE NOCASE, ((rt1.c1) NOTNULL), ((rt1.c4) NOTNULL)))<=((CAST(rt1.c4 AS TEXT), CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END, rt1.c3)))) OVER () FROM rt1 WHERE (((NULL COLLATE BINARY) NOTNULL)); -- 0ms;
SELECT ALL ((rt1.c0)<(((((rt1.c0)AND(rt0.c1)))OR(rt1.c4)))) FROM rt0;SELECT ALL (((+ (rt1.c1)))+((~ (rt1.c4)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c2, COUNT(*), LAST_INSERT_ROWID() FROM rt1 WHERE (CAST((('-891453636')IS NOT(NULL)) AS BLOB)) LIMIT 1544866938 OFFSET -1854065420; -- 0ms;
SELECT DISTINCT (((((rt1.c0)AND(rt1.c1)))AND(rt0.c0)) IN ()) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c2) IS TRUE)), x'' COLLATE RTRIM, (~ ((((rt1.c1, rt1.c4, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt1.c2)) AND ((rt1.c0, rt1.c2, rt1.c0))))) FROM rt1 WHERE ((((('')LIKE(0.3108551795236324)))*((('x_4W+\r*,')+(0.08309890231857442))))) ORDER BY CASE WHEN rt0.c2 THEN CAST(rt1.c3 AS REAL) END  NULLS FIRST;SELECT ALL FIRST_VALUE((((rt1.c3 COLLATE BINARY))<=((-1.772849698E9)))) OVER ( ORDER BY CASE ((0X11ae015f)||(rt1.c2))  WHEN ((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c4)))AND(rt1.c0)))OR(9.76977636E8)) WHEN (rt1.c0 IN ()) THEN (((x'6580')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4))) WHEN rt1.c3 THEN ((rt1.c1)IS(rt0.c0)) ELSE ((rt0.c2) BETWEEN (rt1.c4) AND (0.0116746179606394)) END ROWS BETWEEN (rt0.c0 COLLATE NOCASE IN ()) FOLLOWING AND  UNBOUNDED FOLLOWING) FROM rt0, rt1; -- 0ms;
SELECT ((((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c4)))&(rt1.c1)) FROM rt0 LIMIT 1924602966 OFFSET -1276813781;SELECT ALL ((rt1.c2 COLLATE BINARY)<=(((((rt0.c2)OR(rt0.c0)))AND(rt1.c1)))) FROM rt0;SELECT DISTINCT ((GROUP_CONCAT(rt0.c0))==((('1712193373') NOT NULL))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((NULL)) AND (((rt0.c3 IN (rt1.c4))))) FROM rt0, rt1 WHERE (((((((x'aaf70a7c')OR(x'fa22')))AND(0X10199fb1)))OR(((NULL) NOT BETWEEN ('-27837772') AND ('0w'))))) LIMIT 340928939; -- 1ms;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((x'') NOTNULL) COLLATE RTRIM) GROUP BY (((- (rt0.c1))) IS TRUE);SELECT DISTINCT json_array(AVG(rt1.c2), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c0))) FROM rt0;SELECT DISTINCT ((((json_array_length(rt0.c3))AND(x'')))AND(((rt0.c1) NOTNULL))), ((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN x'' END) NOT BETWEEN (((((((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))OR(rt0.c2)))AND('1236407275')))OR(NULL)))AND(rt0.c0))) AND ((((rt0.c1))<>((rt0.c2))))), ((((rt1.c0)&(rt0.c0)))IS(((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c0)))) FROM rt0;SELECT DISTINCT NULL FROM rt0, rt1 WHERE (((((((x'')OR(NULL)))AND('')))*(((-542681073)&('-1617900638'))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( PARTITION BY (((rt0.c3 IN ())) BETWEEN (((rt1.c1)<=(rt1.c4))) AND (COALESCE(DISTINCT rt0.c1, rt1.c0, rt1.c4, rt1.c4))), (rt1.c4 COLLATE BINARY IN ())), ((((((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c3)))AND(((rt1.c1) ISNULL))))OR(((rt1.c4)>=(rt1.c2)))), NULLIF(DISTINCT (rt0.c0 IN ()), (((rt0.c1, rt1.c2, rt1.c4))<((rt1.c2, rt1.c1, rt1.c1)))) FROM rt1;SELECT ((rt0.c0 COLLATE RTRIM)<(COUNT(rt0.c0))), ((rt1.c0) NOT BETWEEN ((rt0.c3 IN ())) AND (rt0.c0)), MAX(((((rt1.c2)OR(rt0.c0)))OR(rt1.c0))) FROM rt0;SELECT TOTAL((((rt1.c1))!=((rt0.c0)))) OVER () FROM rt0;SELECT (((rt1.c1) IS TRUE) IN ()) FROM rt1, rt0 WHERE (UPPER(DISTINCT TOTAL_CHANGES())); -- 0ms;
SELECT DISTINCT (NOT ((((rt1.c4, -1453600406, rt1.c1))=((rt0.c1, rt0.c1, rt0.c0))))) FROM rt1 WHERE (((((x'') BETWEEN (0.16596662394746087) AND ('Xw')))>=((+ (0.25995565945415877)))));SELECT TRIM(((579097942)<>(rt1.c4)), rt1.c0), CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN TRIM(DISTINCT rt0.c0, rt1.c4) WHEN (NOT (rt0.c1)) THEN (~ (rt0.c1)) WHEN ((((((((rt0.c3)OR(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)) THEN (((rt1.c4, rt1.c1, rt1.c1))<>((rt0.c1, x'', rt0.c3))) END, ((COUNT(*)) IS FALSE) FROM rt1 WHERE ((((0.2090897970963307)) BETWEEN ((NULL COLLATE BINARY)) AND (((((0.7412080752418688, x'', x'5c7c'))<=((-2.7837772E7, x'', x'770b'))))))) GROUP BY ((((((0.38704252224168234) ISNULL))AND(((((rt0.c3)AND(rt1.c1)))AND(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (0.2997238113404499) AND (rt0.c0)))) HAVING ((NULL COLLATE RTRIM)LIKE(((rt0.c1) BETWEEN (rt1.c4) AND (rt1.c3))));SELECT ALL (((rt1.c4)) NOT BETWEEN ((NULL COLLATE NOCASE)) AND ((json_extract(rt1.c0, 'tV')))) FROM rt1, rt0 WHERE (TRIM(COALESCE(DISTINCT x'7953', 405472316))); -- 0ms;
SELECT DISTINCT json_quote((+ (rt0.c3))), (- (((((rt0.c2)OR(rt0.c1)))AND(rt1.c0)))), rt1.c3 FROM rt1, rt0 WHERE ((NOT ((((0.0220048921738627)) NOT BETWEEN (('(Yr')) AND ((NULL)))))) ORDER BY (~ (CAST(rt1.c0 AS BLOB))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS INTEGER))IS NOT(((((rt1.c3)AND(rt1.c3)))AND(x'')))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT NULLIF(rt0.c0, rt1.c2) COLLATE RTRIM COLLATE NOCASE FROM rt1 WHERE ((('mR-&2MV' COLLATE NOCASE) IS FALSE)) ORDER BY CASE WHEN ((-16634552) ISNULL) THEN ((((rt0.c0)AND(rt0.c2)))AND(0Xde79ba)) END DESC  NULLS FIRST;SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, rt1 ORDER BY CASE WHEN rt0.c1 THEN rt1.c4 END COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((NULLIF(rt0.c3, rt1.c4)) BETWEEN (((rt0.c3)IS NOT(rt0.c1))) AND ((+ (0x4b8e357e)))), (~ (((rt1.c0)==(rt1.c3)))), json_array_length(IFNULL(rt0.c0, rt0.c1), (rt0.c3 IN ())) FROM rt0;SELECT ALL ((((((rt0.c3)AND(rt1.c2)))OR(x'115a'))) NOTNULL), ((CASE '126336913'  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL END) NOTNULL), NULL FROM rt0, rt1; -- 0ms;
SELECT DISTINCT SUM(((((rt0.c3)AND(rt0.c3)))OR(NULL))) FROM rt0, rt1 WHERE ((((((((((- ('-150516775')))AND(json_object(NULL, -7.88509863E8))))AND(('' IN ()))))AND(((x'')IS NOT(x'88df')))))OR((('1683115835') NOT BETWEEN (0.30092044543261465) AND (x''))))) GROUP BY NULL, ((rt0.c0)OR(((rt0.c0)>=(rt0.c2)))), (((rt1.c0)) NOT BETWEEN (((NOT (rt1.c4)))) AND ((CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))); -- 0ms;
SELECT ALL ((((rt1.c0) IS FALSE)) IS FALSE) FROM rt1, rt0; -- 0ms;
SELECT '627270237' FROM rt1 ORDER BY (((rt1.c0))>((rt1.c1))) COLLATE BINARY, rt0.c2;SELECT ALL ((((rt1.c0)-(rt1.c3))) IS TRUE), (((rt0.c3) ISNULL) IN (rt1.c1, ((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c2)))), CAST(0.8697303186949483 AS TEXT) FROM rt0, rt1; -- 0ms;
SELECT (((rt1.c1, rt1.c2, rt0.c2)) NOT BETWEEN (((rt0.c1 IN ()), ((rt0.c3) NOTNULL), ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((('r\n''i<aZ(t' IN ()), '?/Y+', (((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) FROM rt0, rt1; -- 1ms;
SELECT LAST_VALUE(SQLITE_COMPILEOPTION_USED(rt0.c1)) OVER () FROM rt0, rt1 WHERE (((((0Xffffffffdbab2e7e)AND((((NULL)) BETWEEN (('-918315049')) AND ((x'e7f5'))))))OR(CAST(NULL AS REAL)))) ORDER BY IFNULL(DISTINCT ABS(DISTINCT rt1.c1), ((rt1.c0) IS FALSE)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (CASE rt1.c0  WHEN rt0.c3 THEN rt0.c0 END)) FROM rt0;SELECT (((rt0.c3)) BETWEEN (((((x''))<=((rt1.c3))))) AND ((json_remove(rt1.c4, rt0.c1)))) FROM rt1, rt0;SELECT DISTINCT GROUP_CONCAT(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))AND(rt1.c4))), TOTAL(rt1.c0) OVER (), GROUP_CONCAT(CAST(rt1.c0 AS NUMERIC) COLLATE NOCASE) OVER () FROM rt1, rt0 WHERE (((((-6.41405582E8 COLLATE RTRIM)AND((((0.5575647513023297, -1.246009313E9, x'')) NOT BETWEEN ((x'', 0.7810443959363316, 0.7078512847493068)) AND ((NULL, -1506396441, NULL))))))OR(((2.84045769E8) BETWEEN (-1254648236) AND (''))))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c3 COLLATE RTRIM)), CASE WHEN CAST(rt1.c3 AS REAL) THEN UNLIKELY(rt0.c2) END, ((MIN(rt1.c1)) BETWEEN (SQLITE_SOURCE_ID()) AND (CASE WHEN rt1.c0 THEN rt0.c0 ELSE 0Xffffffffba312925 END)) FROM rt1 LIMIT -797864932;SELECT DISTINCT (((- (rt1.c4)))|((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))), 0.8122516296032876, CAST(((((((((rt1.c3)AND(rt1.c1)))OR(rt0.c0)))AND('ማi+')))AND(rt0.c2)) AS REAL) FROM rt1, rt0 WHERE ((((((((0.8773971884558356)AND(NULL)))OR(0.7311891444207601))))>=((x'153c13f6f994')))); -- 0ms;
SELECT DISTINCT ((((NULL)*(-8.06451896E8))) NOTNULL) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (+ (IFNULL(rt1.c3, rt1.c0))) FROM rt0 ORDER BY ((((rt1.c1)>=(rt0.c1)))||((rt1.c2 IN (rt0.c0))))  NULLS LAST;SELECT DISTINCT ((rt0.c3)<<(rt0.c0)) COLLATE NOCASE FROM rt1 WHERE ((SUBSTR(0.07570678973531131, 0.9364135447123596) IN ()));SELECT TIME(rt0.c0, rt1.c4, rt0.c1) COLLATE BINARY FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c4))) BETWEEN (CAST(rt0.c1 AS REAL)) AND (rt1.c3)) FROM rt0 LIMIT -1935048162 OFFSET 354236671;SELECT GROUP_CONCAT((- (rt1.c0))), ((((rt0.c3)) BETWEEN ((rt1.c0)) AND ((rt0.c0))) IN ()), LIKE((- (rt0.c0)), CAST(rt1.c1 AS REAL)) FROM rt0;SELECT DISTINCT COUNT(((rt1.c0) NOT BETWEEN ('198366198') AND (rt0.c3))) FROM rt0, rt1 WHERE ((((x'' IN ('-233127870', NULL)))<>(TRIM(DISTINCT -1101954283, 0.9645057900476425)))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt1 ORDER BY ((rt0.c0)IS NOT(((rt0.c2)LIKE(rt0.c3))))  NULLS LAST;SELECT DISTINCT '' FROM rt1, rt0 LIMIT 14580154; -- 0ms;
SELECT ALL (rt1.c1 COLLATE RTRIM IN (CAST(rt0.c0 AS NUMERIC))) FROM rt0;SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))))<(((((rt0.c3)AND(x'')))OR(rt1.c0)))) FROM rt1, rt0; -- 0ms;
SELECT ALL rt1.c2 COLLATE BINARY FROM rt0;SELECT DISTINCT (((rt0.c2)) BETWEEN ((CAST(rt1.c1 AS TEXT))) AND ((MAX(rt0.c2)))) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT rt0.c3 FROM rt0, rt1 ORDER BY CASE ((rt0.c1)>(rt1.c1))  WHEN (NOT (rt1.c0)) THEN rt0.c3 WHEN (rt1.c2 IN ()) THEN ((((((((rt1.c3)AND(rt1.c4)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c4)) WHEN ((rt1.c1)GLOB(rt1.c2)) THEN ((rt1.c4) IS TRUE) END; -- 0ms;
SELECT ((CASE WHEN rt1.c0 THEN rt0.c3 END)<<(CAST(rt1.c4 AS NUMERIC))) FROM rt1, rt0 WHERE (((CASE WHEN 'q ucM*}&' THEN x'24bdbf56' ELSE 0Xffffffffc5fe9ebd END)<=((((1924602966, x'238c', '155019056', 'TRUE', 0X14d86f3d)) NOT BETWEEN ((0.5634067109691403, x'', x'', NULL, NULL)) AND ((-1e500, NULL, NULL, 0.57541241374267, '894676139')))))); -- 0ms;
SELECT ((rt0.c1) IS FALSE) COLLATE RTRIM FROM rt1 WHERE (((((((((NULL)AND('')))AND(1.15109462E9)))AND('-45036669')))OR(NULL)) COLLATE NOCASE);SELECT ALL CASE 0.28602106425063034  WHEN rt0.c3 COLLATE NOCASE THEN 0X3a12dac3 WHEN (rt1.c3 IN ()) THEN ((rt0.c1)|(rt1.c4)) WHEN (rt1.c4 IN ()) THEN (((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((0.38951833726908247))) ELSE QUOTE(rt0.c1) END FROM rt1;SELECT ALL (((rt1.c3 COLLATE NOCASE))>=((((((((((rt1.c2)OR('f7C')))AND(rt0.c3)))OR(rt0.c0)))OR(rt1.c4))))) FROM rt0 WHERE ((((NULL, NULL, '')) BETWEEN (((~ ('yT\')), CASE WHEN x'f751' THEN '}yG' WHEN 0.8378252637102748 THEN x'0345' WHEN '1151094620' THEN '' ELSE 0.5392156854213682 END, ((('>C ', NULL, 0Xffffffffb8c15633)) BETWEEN (('413334013', '|ｲg<t>!0%', '-1154362095')) AND ((x'', NULL, NULL))))) AND (((x'' IN ()), ('_' IN (NULL, '-1214005024')), (('-2085478590')|('155019056'))))));SELECT rt1.c0 FROM rt1; -- 0ms;
SELECT ALL CAST((~ (rt0.c2)) AS REAL) FROM rt0 WHERE (((x'' COLLATE BINARY)||(CASE x''  WHEN NULL THEN x'' END))) ORDER BY ((rt1.c2) BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0 COLLATE RTRIM))  NULLS FIRST LIMIT -27837772;SELECT ALL ((rt1.c1)<<(0.7519693223968252)) COLLATE RTRIM, (((rt1.c3)+(rt0.c3)) IN (RTRIM(rt1.c2))), ((NULL)<<(((rt1.c0)||(rt1.c0)))) FROM rt0;SELECT ((rt0.c1 COLLATE NOCASE)IS NOT(((rt1.c0)<=(rt1.c2)))), COUNT((((rt0.c1))=((rt0.c3)))), DENSE_RANK() OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW), ((IFNULL(rt1.c0, rt1.c2)) IS TRUE), ((CASE rt0.c1  WHEN rt1.c2 THEN rt0.c0 END) NOTNULL) FROM rt0, rt1; -- 0ms;
SELECT COUNT(*) OVER () FROM rt0 WHERE ((COALESCE(DISTINCT '643148015', x'') IN (((('-1217508717', x'a00e', '-1757778700'))<>((x'', '1410042092', NULL)))))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) ISNULL))>=(COUNT(*))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS NOT(rt0.c2))) ISNULL) FROM rt0 WHERE ((+ (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)AND(rt1.c4)))AND(rt0.c0))) BETWEEN (((rt1.c1) NOT BETWEEN (x'eba3c4ac') AND (rt1.c3))) AND (((rt0.c3)IS(rt0.c0)))) FROM rt0, rt1 WHERE ((NOT (STRFTIME('4P7!N', x'', '1608245297')))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)/(NULL)) AS BLOB) FROM rt1, rt0 WHERE ((- (NULL))) ORDER BY CASE ((rt1.c0)>('0.21232256960402773'))  WHEN ((rt0.c2) ISNULL) THEN (((rt0.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, '}H')) AND ((rt1.c0, rt1.c2, rt1.c3))) WHEN rt1.c0 THEN ((rt0.c2) IS FALSE) WHEN (rt0.c1 IN (rt0.c3)) THEN (rt1.c1 IN ()) END ASC  NULLS LAST; -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((((rt1.c3) ISNULL))) AND (((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c1)))))) FROM rt0;SELECT DISTINCT GROUP_CONCAT(rt1.c4), SUM((((rt0.c1, rt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c0)) AND ((rt0.c1, rt0.c3, rt1.c2)))), (+ (CAST(rt1.c2 AS BLOB))) FROM rt1;SELECT ALL (((((((rt1.c0))>((x'273c'))))OR(COUNT(rt1.c4))))AND(((rt1.c3)=(rt0.c2)))) FROM rt1 WHERE (CAST(LTRIM(-688758282) AS NUMERIC));SELECT DISTINCT NTILE(((((rt0.c1)==(rt0.c3))) IS TRUE)) OVER ( RANGE BETWEEN (((rt0.c3 IN ()))<=(rt1.c4 COLLATE BINARY)) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS), CASE WHEN x'c6b0' THEN (rt0.c3 IN ()) WHEN (((rt0.c2))>=((rt0.c0))) THEN ((((rt0.c1)AND(rt1.c0)))OR(rt0.c3)) WHEN ((((rt1.c0)AND(rt1.c2)))OR(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt1.c1 ELSE rt0.c0 END ELSE ((NULL) BETWEEN (rt1.c3) AND (rt0.c2)) END, ((((rt0.c3) NOTNULL)) IS FALSE), CAST(((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS NUMERIC), ((COUNT(rt1.c2))>>(COUNT(rt0.c0))) FROM rt0 ORDER BY (((('6jÔ\nBOlw#')OR(rt0.c3)))OR(rt1.c0)) COLLATE NOCASE ASC  NULLS FIRST;SELECT (((rt1.c4 IN (rt0.c0)))>(rt1.c3 COLLATE RTRIM)) FROM rt0;SELECT ALL (((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c1))))GLOB((rt1.c2 IN (-531925410)))), (~ (0.29318695703653863)), ROW_NUMBER() OVER (), STRFTIME(CAST(rt0.c1 AS BLOB), rt1.c4 COLLATE RTRIM, ((rt1.c2)OR(rt1.c3))), ((((rt0.c2)AND(rt1.c2)))OR(rt1.c4)) COLLATE RTRIM, IFNULL((+ (NULL)), COUNT(*)), ((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c1))) IN ()) FROM rt0, rt1 WHERE ((((CAST(0.9408826497154578 AS TEXT)))>((((0.820791202047876)%(x'')))))); -- 0ms;
SELECT 0.1451118637045381 FROM rt1, rt0 WHERE (CAST(CAST('-1924041504' AS TEXT) AS REAL)) GROUP BY CAST((rt0.c1 IN (rt0.c0)) AS REAL); -- 0ms;
SELECT ALL SUM(((rt1.c0)<=(rt0.c3))) FROM rt1 WHERE (((('' IN ())) BETWEEN ((('')>(x''))) AND (((0.15852906098808206)*(x'3f81')))));SELECT DISTINCT rt1.c3 FROM rt0;SELECT DISTINCT (((rt1.c4)) NOT BETWEEN (((- (NULL)))) AND ((CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c3 END))) FROM rt0;SELECT DISTINCT ((rt0.c1 COLLATE BINARY)<(rt0.c3 COLLATE BINARY)) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT FIRST_VALUE(((((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)OR(((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))))OR(CASE WHEN rt1.c1 THEN rt1.c3 END))) OVER (), (~ (rt1.c1)) COLLATE BINARY, (((rt1.c3 IN ())) BETWEEN (((rt1.c1)OR(rt1.c0))) AND (CASE rt1.c2  WHEN x'' THEN rt1.c4 END)) FROM rt1 LIMIT 1861962871 OFFSET 220729725; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c1)==(rt1.c3))) OVER ( ORDER BY ((UPPER(rt1.c4))<(CASE WHEN '-806451896' THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS LAST, (rt1.c3 IN ())  NULLS FIRST), MAX('7lt듈b^{'), ((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))>((((rt0.c2)<=(rt0.c3))))) FROM rt0 ORDER BY rt0.c0  NULLS LAST;SELECT DISTINCT ((((rt0.c0)>>(rt0.c2)))-(rt1.c4 COLLATE NOCASE)), TOTAL(((rt1.c0)||(rt1.c4))) OVER (), ((rt0.c2)<=(CAST(rt0.c3 AS NUMERIC))) FROM rt0, rt1 WHERE (((((((((((((CASE ''  WHEN 'uvk㞉' THEN NULL WHEN 0.8256621664159687 THEN '976977636' WHEN '976977636' THEN 0.762292442342719 ELSE 'W7W' END)OR(CAST(x'' AS TEXT))))OR(((x'') ISNULL))))OR((NULL IN (x'af6e')))))AND(((311795761) IS FALSE))))AND((+ ('')))))AND((('f8Mt')*('^f-3888078339630857434 249-1842 1494:1368T1636404697975172707-945 ?'))))) ORDER BY ((CAST(rt0.c3 AS BLOB)) IS TRUE); -- 0ms;
SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c1 END)<=(((rt1.c4)||(rt1.c1)))), CAST((((rt1.c4))=((0.7597070752435787))) AS BLOB), CAST(((0.12314747423107164)=(rt1.c3)) AS NUMERIC) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2, NULL, GROUP_CONCAT((~ (rt0.c3))) FROM rt1;SELECT ALL GROUP_CONCAT(TRIM(rt1.c3, rt1.c1)) OVER ( ORDER BY (((rt0.c1 IN ())) NOT BETWEEN (0Xffffffffe16ea702) AND (0.4550291395697138)), ((((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1)))!=((- (rt1.c4))))  NULLS FIRST), CASE WHEN (('643148015')AND(rt0.c3)) THEN ((rt0.c1)>=(rt1.c2)) WHEN ((rt1.c2) IS FALSE) THEN ((rt1.c2) NOT BETWEEN (rt1.c4) AND (rt0.c3)) WHEN ((rt0.c3)!=(rt0.c1)) THEN ((rt0.c2)AND(0.4657519379522428)) END, CASE IFNULL(rt1.c3, rt1.c2)  WHEN LIKE(rt1.c3, 0.0768380244133886, '-') THEN rt0.c0 WHEN (((rt0.c3))!=((rt1.c2))) THEN ((rt1.c1)<>(rt1.c2)) WHEN CAST(rt0.c2 AS TEXT) THEN CAST(rt1.c0 AS NUMERIC) END FROM rt1;SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE (((((x'')AND(CAST(-8.95701324E8 AS NUMERIC))))AND(((x'') IS FALSE)))) GROUP BY (((((rt1.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))LIKE(((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c0)))) HAVING (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c4 END IN ());SELECT ALL ((rt0.c2)+(rt0.c1)) COLLATE RTRIM FROM rt0 WHERE (CASE WHEN (- (NULL)) THEN TRIM(x'') ELSE CASE WHEN x'' THEN x'' ELSE 0.21336749565532676 END END) GROUP BY TRIM(((((rt0.c0)OR(rt1.c0)))AND(rt1.c1))) HAVING (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL);SELECT ALL (((((2127313268 IN (rt0.c2)))OR((((rt1.c1))!=((rt0.c1))))))OR(((rt0.c0) IS TRUE))), (NOT (((((((((NULL)AND(rt0.c0)))AND(rt1.c4)))OR(rt0.c0)))AND(rt1.c4)))), AVG(AVG(NULL)) COLLATE RTRIM FROM rt1, rt0;SELECT rt1.c0 FROM rt1 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT DISTINCT rt1.c1, ((rt1.c3)>((+ (rt1.c2)))), (((+ (rt0.c0)))==(((rt0.c2)>(rt0.c0)))) FROM rt0;SELECT DISTINCT AVG((- (rt0.c0))) FROM rt0 WHERE (((((x'')>('sG|IEr'))) BETWEEN (CASE x''  WHEN '|]毗-e' THEN '0.5580552445982434' END) AND ((0.5244526151505916 IN ())))); -- 1ms;
SELECT DISTINCT (((rt0.c2)LIKE(rt0.c2)) IN (((rt0.c0)/(rt1.c4)))) FROM rt0;SELECT DISTINCT CAST((~ (rt1.c1)) AS NUMERIC) FROM rt0;SELECT ((CAST(rt0.c2 AS TEXT))*(((rt0.c1)>=(rt0.c2)))) FROM rt0 WHERE (CASE WHEN CAST('*PT허rT1' AS INTEGER) THEN CASE '*y'  WHEN '-1163724592' THEN x'be14' WHEN NULL THEN x'655a' WHEN 'a2' THEN NULL WHEN 'ѵ+' THEN x'6d9e' WHEN '_Weg' THEN x'' END END); -- 0ms;
SELECT DISTINCT (NOT (((rt1.c0) NOT BETWEEN (rt0.c3) AND (rt1.c4)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN rt1.c4 END) BETWEEN (((rt1.c4)|(rt0.c0))) AND (((((((((NULL)AND(rt0.c1)))AND(rt1.c2)))AND(rt0.c2)))AND(rt1.c2)))), COUNT(*) OVER (), (+ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c1)))), MIN(CAST('qwU?Q' AS BLOB), CAST(rt1.c0 AS TEXT)), (((rt0.c1 IN ('-480620667'))) BETWEEN (TRIM(rt1.c2, rt0.c0)) AND (((NULL)<=(rt0.c2)))), 268786191, COUNT(*) FROM rt1 WHERE ((- (NULL)));SELECT DISTINCT (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((MAX(rt0.c2)))) FROM rt0, rt1 WHERE (CAST((((('2105059260')OR('<O')))AND('852773797')) AS NUMERIC)); -- 1ms;
SELECT DISTINCT (((+ (rt1.c2)))=(((rt1.c3) NOTNULL))), ((((((rt0.c3)OR(rt1.c2)))AND('974030413')))*(MIN(rt0.c2))), rt1.c4 FROM rt1 GROUP BY ((CAST(rt1.c1 AS NUMERIC)) IS FALSE) HAVING CAST(((rt1.c1) ISNULL) AS REAL);SELECT DISTINCT (((('916134065')IS(rt1.c4))) NOTNULL) FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (CASE '衵I'  WHEN '#.ZY' THEN x'' ELSE '-179161189' END))); -- 0ms;
SELECT ((((((((NULL)AND(((rt0.c2)/(rt0.c0)))))AND(((rt0.c0) NOTNULL))))OR(' ^cr')))OR(COUNT(rt0.c2))) FROM rt0 WHERE ('967307051'); -- 0ms;
SELECT DISTINCT ((((rt0.c0)||(0Xffffffff8116260f)))>(((-2.7837772E7) ISNULL))), ((rt1.c3 IN ()) IN ()), ((((rt1.c4) IS FALSE)) NOT NULL), PERCENT_RANK() OVER (), ((rt1.c3) NOTNULL) COLLATE NOCASE FROM rt0 WHERE ((((('q#h|a' COLLATE NOCASE)OR(('-832285759' IN ()))))AND(((0.03790380397204696) IS TRUE)))) LIMIT -1171183323 OFFSET 1781364135;SELECT ALL CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c4 END COLLATE BINARY COLLATE RTRIM FROM rt1, rt0 WHERE (((((((x'f57b')LIKE(x'ca6e')))OR((+ (0.042673276585110664)))))AND(((x'') NOT BETWEEN ('') AND (0.7923732039283695))))); -- 1ms;
SELECT DISTINCT CASE WHEN 0.4212451977375685 THEN (+ (rt1.c0)) END FROM rt1, rt0 WHERE (((((((0.4983599004287431)AND(x'')))OR(NULL))) IS TRUE)) LIMIT -448097243; -- 0ms;
SELECT ALL TRIM(((rt1.c2) IS FALSE)) FROM rt0, rt1 WHERE (((((NULL)>(NULL))) NOTNULL)) ORDER BY (((rt1.c1)) NOT BETWEEN ((((((((((rt1.c1)OR(rt0.c2)))OR(rt0.c1)))AND('')))AND(rt1.c2)))) AND ((rt1.c2))); -- 0ms;
SELECT ALL (CAST(rt0.c3 AS REAL) IN ((+ (rt1.c3)), ((rt1.c0) NOT NULL))), DATETIME(((rt1.c3)IS(rt1.c4)), GROUP_CONCAT(rt1.c4), ((rt0.c0) BETWEEN (rt1.c0) AND (0.7623752012936266))), (CASE rt1.c2  WHEN rt0.c3 THEN 'VoV' END IN (SUM(rt1.c1), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt1.c0)))) FROM rt1 WHERE (((((((((CAST(x'' AS TEXT))AND(((x'') ISNULL))))AND((((1.344937473E9))>(('-236843500'))))))AND(((0.035508770677965984)&(NULL)))))AND(x'')));SELECT DISTINCT LIKELIHOOD(DISTINCT ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)), 0.5266136125454716) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((TOTAL(rt0.c3))AND(((rt0.c2)<(rt1.c3)))))AND(rt1.c0)) FROM rt1 WHERE ((+ ('976977636')));SELECT ALL ((((rt1.c4)==(rt1.c3))) NOT NULL) FROM rt0, rt1 WHERE (((LIKELY(0.5606420489797613)) ISNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL))/(((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((((rt1.c2) NOT BETWEEN (0.3662512217720415) AND (rt0.c2)))OR(((rt0.c2) IS FALSE))), 0.5822751685779188 FROM rt1 WHERE (((((0Xa6eda78)/(NULL))) BETWEEN (CAST(0.8492251045822804 AS BLOB)) AND ((('s}') NOT BETWEEN (0.10068284074897438) AND ('861965254')))));SELECT DISTINCT ((((((rt0.c2, rt0.c1, rt0.c3))>((rt1.c2, rt1.c0, rt1.c4))), CAST(rt0.c0 AS INTEGER), rt1.c4 COLLATE NOCASE))>((0.19705370652674592, ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c4)), ((((rt0.c0)AND(rt1.c4)))OR(rt0.c2))))), ((NULL) BETWEEN ((rt1.c1 IN (rt0.c0))) AND (0.0)), CAST(((((((((rt0.c3)OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c0)))AND(rt1.c3)) AS REAL) FROM rt1 WHERE (CAST((((0.0)) NOT BETWEEN ((-9223372036854775808)) AND (('0.1202695698614823'))) AS INTEGER)) UNION SELECT ALL -1090957707, rt0.c1, COUNT(*) FILTER(WHERE (((rt0.c1)) BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt0.c0)))))) OVER () FROM rt1, rt0 WHERE (((((x'') BETWEEN (x'2d08') AND (-1.798010789E9))) NOTNULL));SELECT ((((rt1.c4)OR(rt1.c1)))<(((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.6755691515685328)))) FROM rt0;SELECT DISTINCT ((((+ (rt0.c2))))<=((((rt1.c4) ISNULL)))) FROM rt1;SELECT ALL CASE WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)) ELSE rt0.c2 COLLATE BINARY END FROM rt0 WHERE (((~ (9.743243972062388E-4)) IN ())) LIMIT -309176696 OFFSET 441291520;SELECT ALL (((rt0.c1 IN (rt0.c3)))>(rt1.c1)), FIRST_VALUE(CASE WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN ((((rt0.c2)OR(rt0.c3)))AND(0Xfffffffffa444b6a)) WHEN (NOT (rt0.c0)) THEN rt1.c1 COLLATE BINARY WHEN (+ (1.561629921E9)) THEN ((rt0.c0) IS FALSE) ELSE (~ (rt0.c1)) END) OVER (), x'9671' FROM rt0, rt1 WHERE ((+ (NULL COLLATE RTRIM))); -- 0ms;
SELECT ((((rt1.c4)AND(rt1.c2)))OR(rt1.c0)) COLLATE NOCASE, CAST('801073000' AS INTEGER), ((rt0.c3) BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE NOCASE FROM rt0 WHERE (CASE WHEN CASE x'27e4'  WHEN 'XW' THEN 0.5967228369180595 ELSE 0.4995772176451777 END THEN ((-1531134129) NOT BETWEEN ('{P7x\') AND (0.9485838970052728)) ELSE -885028795 END);SELECT SUM(rt1.c2 COLLATE NOCASE) OVER () FROM rt1, rt0 WHERE ((((((('-1026436686')OR('705866586')))OR(0Xffffffffde4df1e3)))OR(((('GEI9b')) BETWEEN ((x'')) AND ((0.8612404882899367)))))) GROUP BY '0W', ((((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt0.c2))) IS TRUE), (~ (((rt0.c2)*(rt0.c0)))); -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ()))IS NOT(((rt0.c2) NOT NULL))) FROM rt0; -- 0ms;
SELECT SUM(((((((((rt1.c4)AND(NULL)))AND(rt0.c1)))OR(rt0.c2)))AND(rt1.c0))) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c0) NOTNULL) IN (COUNT(rt1.c2))) FROM rt0 GROUP BY ((((rt1.c1)/(rt1.c2))) NOT BETWEEN (COALESCE(DISTINCT rt0.c0, rt1.c4)) AND (rt0.c1 COLLATE NOCASE)) HAVING CASE WHEN x'' COLLATE BINARY THEN CAST(rt0.c1 AS BLOB) ELSE (rt1.c4 IN ()) END;SELECT DISTINCT IFNULL(DISTINCT rt0.c0 COLLATE RTRIM, ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))) FROM rt1;SELECT DISTINCT NULL, ((((((rt0.c0) BETWEEN (x'27d2') AND (rt1.c2)))AND(rt0.c1 COLLATE RTRIM)))AND(x'')), CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) AS BLOB) FROM rt1, rt0; -- 0ms;
SELECT ALL rt1.c2 FROM rt0, rt1 LIMIT -944363006 OFFSET 330878773; -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt1.c1 THEN rt1.c3 ELSE '801073000' END) NOT BETWEEN (TRIM(rt0.c1, rt1.c1)) AND (rt0.c0)), rt1.c2, 0.2310902201558903 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN (x'', rt1.c1)))>>(CAST(rt1.c3 AS INTEGER))), ((((rt0.c2)>>(rt0.c1))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (((rt1.c3) ISNULL))), (((rt0.c3)) BETWEEN ((((((((((rt1.c0)OR(0.1530191660125616)))OR(rt0.c1)))AND(rt1.c3)))OR(rt1.c4)))) AND ((MIN(rt1.c1)))) FROM rt0 WHERE (((('2000334500') NOTNULL) IN ('1214490535')));SELECT ((((rt1.c0) IS FALSE)) BETWEEN (LIKELY(DISTINCT rt1.c0)) AND (NULL)) FROM rt0 WHERE (CASE WHEN ((('299038355')) BETWEEN (('T')) AND ((378741564))) THEN 0.9605723896032583 END);SELECT DISTINCT ((((rt1.c2) IS TRUE))&(CASE rt0.c3  WHEN rt1.c1 THEN rt1.c2 END)) FROM rt1 WHERE (((LIKELY(DISTINCT 0.0))+(CASE WHEN x'' THEN 0.42110388744106364 WHEN NULL THEN 0.33650925454404146 WHEN NULL THEN NULL WHEN 'iDY' THEN 0.8690685704580835 WHEN 0.39390429930527826 THEN '' ELSE 'lx' END))) GROUP BY SQLITE_COMPILEOPTION_GET((+ (rt1.c1))) HAVING ((x'')IS(CASE WHEN rt1.c1 THEN 0.23269461589026574 END));SELECT DISTINCT (~ (((rt1.c1)IS(x'')))) FROM rt0;SELECT DISTINCT ((rt0.c0) ISNULL) COLLATE BINARY, (~ (rt0.c1 COLLATE BINARY)), rt0.c2 FROM rt0, rt1 WHERE (-8.85028795E8); -- 0ms;
SELECT ALL ((IFNULL(rt1.c3, rt1.c0)) NOT BETWEEN (((((rt1.c1)OR(rt0.c1)))AND(rt1.c2))) AND (((rt0.c1) BETWEEN (rt1.c4) AND (rt1.c1)))), LAST_VALUE(json_array_length(((rt1.c3)GLOB(rt0.c2)))) OVER ( RANGE rt1.c4 PRECEDING EXCLUDE GROUP), ((rt0.c0)+(CAST(rt0.c2 AS INTEGER))), (((((((((~ (-1.746582213E9)))OR(COUNT(*))))AND(CASE 0.15996252452907345  WHEN rt0.c1 THEN NULL ELSE x'' END)))OR(((rt0.c2)|(rt0.c1)))))AND((rt1.c0 IN ()))), ((((0x5f9f5c6a)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()) FROM rt1, rt0 WHERE (((((((((NULL)AND(x'')))AND(x'')))AND('-1087272414')))OR(LAST_INSERT_ROWID())));SELECT DISTINCT ((GROUP_CONCAT(rt1.c1)) BETWEEN (((rt1.c1)>(rt1.c0))) AND (CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0;SELECT ((('e什(6]0 R0'))>((((rt1.c2)>=(rt0.c3))))) FROM rt1 WHERE (NULL) GROUP BY CASE (- (rt1.c0))  WHEN rt1.c0 THEN NULL END HAVING json_extract(((rt1.c4)=(rt1.c1)), rt1.c4 COLLATE BINARY);SELECT ALL (((((rt0.c0))>((rt1.c4))))IS NOT(((rt1.c1)<=(rt0.c2)))) FROM rt1 WHERE (((CASE x''  WHEN -1.171183323E9 THEN 0.8884153463697115 ELSE '197867856' END) ISNULL));SELECT DISTINCT 0.5235354596407479 FROM rt1, rt0 WHERE (((IFNULL('-2077469856', ''))-('-958993410' COLLATE BINARY))); -- 0ms;
SELECT (~ (rt0.c0 COLLATE RTRIM)) FROM rt0 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT ((rt1.c4 IN ()) IN ()) FROM rt1; -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))>=((((rt0.c2))==((rt1.c1))))) FROM rt0;SELECT CAST(((rt0.c2)AND(rt1.c2)) AS REAL) FROM rt0, rt1 WHERE ('641707892'); -- 0ms;
SELECT x'' FROM rt0 WHERE ((('1260783480' COLLATE BINARY)=(((('-788509863')) BETWEEN (('TRUE')) AND ((0.4414051565715007)))))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT CASE 0.019645579623094322  WHEN 1.191294397E9 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c3 ELSE rt1.c1 END) FROM rt0 RIGHT OUTER JOIN rt1 ON (+ ((+ (rt0.c1)))) WHERE (((((0.9129692455804431)>('oi')))+(((1627540866)GLOB(x''))))) GROUP BY ((CAST(rt0.c2 AS REAL))%(((((((((rt0.c2)AND(rt0.c3)))AND(rt1.c3)))AND(rt1.c3)))OR(rt1.c3)))), (((((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))OR((((rt0.c1, rt1.c0, NULL)) NOT BETWEEN ((0.448459334731114, rt0.c1, -895701324)) AND ((rt0.c0, rt0.c3, rt0.c3))))))AND(((rt1.c2) IS TRUE))), (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c2 END IN ()), SQLITE_COMPILEOPTION_USED(((rt0.c0)<=(''))), ABS(rt0.c1 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (NOT (rt1.c1)) COLLATE RTRIM FROM rt0 ORDER BY (+ (rt1.c2)) COLLATE RTRIM ASC  NULLS FIRST;SELECT ((((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt0.c1))) ISNULL), (NOT (((((((((rt1.c3)OR(rt1.c1)))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)))), ((rt0.c3)>=(((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c3)))) FROM rt0, rt1 WHERE (((((IFNULL('\n !+', x''))OR(((NULL)|('-636938752')))))AND(x'c1f3'))); -- 0ms;
SELECT (NOT ((rt0.c0 IN (rt0.c3)))) FROM rt1 WHERE (json_extract(NULL COLLATE RTRIM, (('1379664376')/(0.5974097604452079))));SELECT DISTINCT CASE CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt1.c0)) THEN (((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) WHEN (((rt1.c1))>((rt1.c2))) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c0)<<(-1707781848)) THEN ((rt1.c1)==(rt0.c0)) ELSE ((rt0.c3) ISNULL) END FROM rt0, rt1 WHERE ((((((('') NOT BETWEEN ('-349555304') AND ('-885028795')))OR(CASE WHEN NULL THEN 0.04475619965827571 WHEN 0.7254265416354284 THEN 0x5fdbe031 WHEN '-1038340486' THEN x'' END)))AND(CASE 1.420507017E9  WHEN NULL THEN NULL ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL))-('-2005276549')) FROM rt1 WHERE (CAST(NULL AS INTEGER)) ORDER BY ((((((((((rt1.c2)OR(rt0.c0)))OR(rt0.c3)))AND(rt1.c0)))AND(rt0.c1)))>>((NOT (rt1.c3)))) DESC;SELECT ALL COUNT(*) OVER ( RANGE CAST((NOT (rt1.c1)) AS NUMERIC) PRECEDING EXCLUDE CURRENT ROW) FROM rt0 WHERE (((CAST(0.5792840652361622 AS TEXT))>((0X797613a6 IN (0.8532858736310146)))));SELECT DISTINCT (((rt1.c1 IN ()))LIKE(CAST('맄8' AS BLOB))) FROM rt0 WHERE (((((CASE WHEN x'a4ca' THEN '1970015066' END)OR(((x'')==(0xffffffff8d444340)))))OR(x'47a75e12' COLLATE BINARY))) ORDER BY json_extract((~ (rt1.c0)), MIN(0.047360231545833575, rt1.c3, rt1.c0, rt0.c3), NULL, rt1.c2) DESC  NULLS FIRST;SELECT (((rt1.c0)) BETWEEN ((((rt1.c4)+(rt0.c2)))) AND ((SUBSTR(rt1.c1, rt1.c4)))), ((CASE WHEN rt0.c3 THEN rt1.c3 END)>((rt0.c3 IN (rt1.c0, rt0.c1)))), CAST(((rt1.c0)<>(rt0.c0)) AS INTEGER) FROM rt0 LIMIT 0 OFFSET 444262987;SELECT NULL, SUM(((rt0.c0) IS FALSE)) OVER (), (+ (CAST(rt1.c2 AS TEXT))) FROM rt1;SELECT DISTINCT CASE (+ (x''))  WHEN ((rt1.c2)/(rt0.c2)) THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) END FROM rt0 LIMIT 1861962871 OFFSET -27837772;SELECT rt0.c0 FROM rt1 WHERE (((((((((((((((x'')AND(NULL)))AND(0.4415785670815623)))OR(NULL)))OR('0.232470782085067')))AND(x'768d')))AND(NULL))) NOT BETWEEN ((+ ('-1504478377'))) AND ('1580893981'))) LIMIT -1772849698 OFFSET -1609614839;SELECT DISTINCT SUM((~ (rt1.c1))) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (0.8943746815154688 IN ((rt1.c4 IN ()))), TYPEOF(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt1.c1))), (NOT (0.2554331261219247)) FROM rt1, rt0; -- 0ms;
SELECT ALL LAST_VALUE((((rt1.c3 COLLATE BINARY))==((NULL)))) OVER (), AVG(((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt1.c1))) OVER (), x'' FROM rt1, rt0; -- 0ms;
SELECT (((rt0.c0 IN ())) IS TRUE) FROM rt1 WHERE (TRIM(DISTINCT ((0.28102432624933105) IS TRUE), ((('1865897406', x'', 0.21232256960402773))>((0.774624673182649, 0.8001458039176502, x''))))); -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c0 AS BLOB) AS TEXT), ((((((0.9520517638595041) NOT NULL))OR(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c4)))))OR('-1480586123')), ((TRIM(DISTINCT rt0.c0, rt1.c1)) NOT BETWEEN (((((rt1.c4)OR(rt0.c3)))OR(rt0.c3))) AND (rt0.c1)), ((rt1.c2)==((((rt1.c2, rt0.c0, rt1.c2))<((rt0.c2, rt1.c0, rt0.c0))))), CASE NULL  WHEN (rt1.c1 IN ()) THEN ((rt1.c2)+(rt1.c3)) END FROM rt1 ORDER BY ((((((rt1.c0)AND(rt1.c0)))AND(rt0.c1))) NOT NULL)  NULLS FIRST;SELECT DISTINCT 0.10114268017041328, (((0.15070568506535575)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((CAST(rt1.c0 AS NUMERIC)))), CUME_DIST() OVER () FROM rt0;SELECT DISTINCT (((((~ (rt0.c2)))OR(rt1.c3 COLLATE RTRIM)))OR(NULL)), (((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c3)) IN ()), (rt1.c0 IN ((((rt1.c2))>((rt0.c2))))) FROM rt1 LIMIT -52296539;SELECT (((('^f-3888078339630857434 249-1842 1494:1368T1636404697975172707-945 ?')AND(UNICODE(rt0.c0))))AND(((rt1.c2) IS FALSE))), ((((json_array_length(rt0.c3, rt1.c2))AND(((rt0.c1)GLOB('-591018981')))))OR(rt0.c3 COLLATE BINARY)), ((GROUP_CONCAT(rt1.c4)) IS TRUE) FROM rt0 WHERE (CAST((NOT ('c7')) AS BLOB));SELECT DISTINCT SUM(CAST(rt1.c2 AS REAL)) OVER () FROM rt0 WHERE (((CASE '덷>e范'  WHEN x'd3c5' THEN NULL END)IS NOT(LIKELY(DISTINCT x''))));SELECT ALL CASE rt1.c4 COLLATE RTRIM  WHEN NULLIF(DISTINCT x'528f', rt1.c1) THEN rt1.c1 COLLATE NOCASE WHEN (- (rt0.c0)) THEN rt1.c3 COLLATE RTRIM WHEN ((((((((((((NULL)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)))OR(rt1.c3)))OR(rt1.c3)) THEN COUNT(rt0.c3) END, 0.28461010445918244, TOTAL(rt1.c4) OVER (), NTILE(UNLIKELY(DISTINCT (((rt1.c1))<((rt1.c2))))) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), (((- (x'')))||(((rt1.c2)>(rt0.c1)))) FROM rt1, rt0 WHERE (CASE (+ (NULL))  WHEN (('s8') IS FALSE) THEN (((0.5608037935894238)) NOT BETWEEN ((NULL)) AND (('-895701324'))) END);SELECT DISTINCT (((rt0.c2)) BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c0))))) FROM rt0, rt1 WHERE ((((((((((('-1429378366')IS NOT('1648263251')))AND(CASE 0.5580552445982434  WHEN NULL THEN x'ac15' END)))OR('297478112')))OR(COALESCE(-1.746582213E9, NULL, '2044348790', 0.7433556701081556))))OR((x'' IN (NULL))))); -- 0ms;
SELECT (NOT (((-1857876583) BETWEEN (rt1.c0) AND (rt1.c0)))) FROM rt1 WHERE ((MIN(0.026467465271572177, '', 0X429a8e9d, NULL) IN ())); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), ((((((((((((CAST(rt0.c0 AS BLOB))AND(CAST(rt1.c1 AS REAL))))AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c2)))))AND((rt0.c3 IN ()))))AND(((rt1.c4) BETWEEN (rt0.c3) AND (rt1.c2)))))OR((+ (0.8430444926770947)))))OR(NULL)), ((((rt1.c2)<=(rt0.c0)))==(CAST(rt0.c2 AS TEXT))) FROM rt0, rt1 WHERE ((CAST(NULL AS TEXT) IN (CAST('-g XWJ0u?' AS INTEGER), (('-1772849698')-(-9.59596092E8))))); -- 0ms;
SELECT ALL (rt1.c0 COLLATE RTRIM IN ()), CASE (rt0.c2 IN ())  WHEN (((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt1.c2))) THEN CAST(rt0.c2 AS INTEGER) WHEN CASE WHEN rt1.c4 THEN rt0.c3 ELSE '' END THEN rt1.c3 WHEN MAX(rt1.c1) THEN AVG(rt0.c2) ELSE ((rt1.c2)AND(rt0.c3)) END, (((((((((rt0.c3)OR(rt0.c0)))AND('1061988286')))OR(rt1.c0)))OR(rt1.c0)) IN ()), ((CAST(rt1.c3 AS REAL)) NOTNULL), rt1.c2 FROM rt1, rt0 WHERE (('1310887903' IN (((((-1614880561)AND(x'b86e')))OR(NULL))))) LIMIT -161403420; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt1.c4 THEN '-293347520' ELSE rt0.c0 END THEN SUM(rt0.c2) WHEN MAX(0X35fd296f) THEN LIKE(rt1.c2, rt0.c3) WHEN rt1.c0 COLLATE BINARY THEN CASE WHEN 0.45609630099617693 THEN rt1.c4 WHEN 0.8784058916220203 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c2 END ELSE (rt1.c2 IN ()) END FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt0.c0 END IN ()) FROM rt0 GROUP BY (((rt1.c3)*(rt0.c2)) IN (((rt0.c0)<=(rt1.c2)))), NULL, x'';SELECT ALL GROUP_CONCAT((rt1.c2 IN ())) OVER (), LEAD(rt1.c0, 0.6722658899314204, CAST(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER)) OVER (), TRIM(HEX(rt1.c2)), CUME_DIST() OVER (), (((0.6467940703076159))>((rt0.c0))) FROM rt1, rt0 WHERE (((((NULL)=(NULL))) NOT NULL)); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((NOT (((x'5082')!=(0x6ced3813))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c2)) IS TRUE), ((rt0.c3 COLLATE BINARY)/('297478112')), SUM(((rt0.c2) IS TRUE)) OVER () FROM rt1, rt0; -- 0ms;
SELECT ALL ((((rt0.c3) NOT BETWEEN (rt1.c3) AND (rt1.c3)))IS NOT(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END)), TOTAL(rt1.c2) FILTER(WHERE CAST(load_extension(rt0.c1) AS INTEGER)) OVER (), rt0.c3 FROM rt1 WHERE (IFNULL(DISTINCT CAST(0.1202695698614823 AS TEXT), CASE NULL  WHEN '-1157437145' THEN x'' END));SELECT DISTINCT ((((rt1.c1)AND(rt1.c0)))OR(rt1.c4)) COLLATE NOCASE FROM rt1, rt0 WHERE (((((NULL COLLATE NOCASE)AND(((((x'3c73af28')OR(x'')))OR(NULL)))))OR('-0.0' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CASE rt1.c1 COLLATE BINARY  WHEN rt1.c0 THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) ELSE rt0.c1 END, ((ABS(DISTINCT rt1.c1)) IS TRUE), ((CASE WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c2 END) BETWEEN ((((rt0.c0, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt1.c2, rt0.c0)) AND ((rt0.c2, rt0.c1, rt1.c0)))) AND (UNLIKELY('Dk'))) FROM rt1, rt0; -- 0ms;
SELECT ALL CAST(((rt0.c0) IS FALSE) AS INTEGER) FROM rt0 WHERE (CAST(((x'') BETWEEN (0.9059181797598097) AND ('1*eLx')) AS BLOB)); -- 0ms;
SELECT DISTINCT (NOT (rt1.c4 COLLATE NOCASE)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT MIN((5.10034691E8 IN ())), CAST(SUM(rt0.c1) AS INTEGER), (((CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END, ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)), ((rt0.c1) ISNULL)))>=((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt0.c2)), ((rt1.c4)&(rt0.c0)), 0.38281481445329146 COLLATE BINARY))) FROM rt0;SELECT DISTINCT CAST(((rt0.c2)OR(rt0.c0)) AS REAL) FROM rt0 WHERE (COALESCE(DISTINCT (0X11bb27e0 IN ()), NULL)) GROUP BY ((((((rt0.c1)OR(rt0.c2)))AND(rt1.c4))) IS TRUE);SELECT DISTINCT NTH_VALUE((((rt1.c2)*(rt1.c4)) IN ()), (((NOT (rt1.c2)))|((rt1.c1 IN ())))) OVER () FROM rt1, rt0 WHERE (((CASE x''  WHEN x'' THEN x'8700' WHEN 0.3571599996457684 THEN 0.45828115561598526 WHEN x'bba2' THEN NULL ELSE x'' END) NOTNULL)); -- 0ms;
SELECT DISTINCT ((COALESCE(rt1.c1, rt0.c0, rt0.c3, rt1.c1))IS NOT(((((rt0.c3)AND(rt1.c3)))OR(rt1.c4)))) FROM rt1 WHERE ((((0.13788983597733973)) BETWEEN ((CASE WHEN 0x304f2cfa THEN NULL WHEN x'' THEN x'934e' WHEN '-1434676348' THEN NULL ELSE 0.5967228369180595 END)) AND (((('Pukz(]') NOT BETWEEN (NULL) AND ('K>'))))));SELECT rt1.c2, ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (((x'') IS TRUE)) AND (((rt0.c0)&(rt0.c0)))), ((CAST(rt1.c4 AS NUMERIC))+((NOT (rt1.c1)))) FROM rt0, rt1 WHERE (((((NULL)OR(2.20729725E8))) BETWEEN (LIKELY(DISTINCT 0X38b8720)) AND (((0.7560135943637833)/(NULL))))) GROUP BY ((((rt0.c0)IS(rt0.c0)))=(((x'b807')IS(rt0.c0)))); -- 0ms;
SELECT ALL ((((rt0.c3) NOT NULL))<<(((rt1.c3)%(rt1.c2)))), ((((((rt0.c1) NOTNULL))OR(CAST(rt1.c3 AS TEXT))))AND(rt0.c2)), MIN(((1.50779801E8) NOT BETWEEN (rt1.c1) AND (rt0.c2))) FROM rt0, rt1; -- 1ms;
SELECT DISTINCT x'', ((((CASE rt1.c0  WHEN rt0.c3 THEN rt0.c3 END)AND(rt0.c2)))AND(DATE(rt0.c1, rt1.c4, rt0.c0, rt1.c4, rt0.c1))), ((((((rt1.c1)<=(rt1.c4)))OR(CASE WHEN rt1.c3 THEN rt0.c3 ELSE rt0.c3 END)))OR(rt1.c1 COLLATE BINARY)), GROUP_CONCAT(NULL) COLLATE RTRIM, (AVG(rt0.c3) IN ()) FROM rt1;SELECT ((((((rt1.c4)OR(rt1.c3)))AND(rt1.c3)))%(SUM(rt0.c2))) FROM rt1, rt0 WHERE (((CAST(0X6efb4c77 AS BLOB))=(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT ALL (((+ (rt1.c2)))>>(((rt0.c0) NOT NULL))) FROM rt1;SELECT (NULL IN (((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), (NOT (rt0.c3)), RTRIM(rt0.c1))), (('719178222' COLLATE BINARY) NOT BETWEEN ((((rt1.c3, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c1)) AND ((rt0.c2, rt0.c0, rt0.c3)))) AND (rt0.c2)), ((((rt1.c4)+(rt0.c3)))AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))) FROM rt1 WHERE (((((((((0.873140404775444 COLLATE RTRIM)OR(CAST('-665491700' AS INTEGER))))AND((0Xffffffffe395c0b5 IN ()))))AND(CAST(0.9138012537040957 AS REAL))))OR(CASE WHEN 1848489642 THEN NULL ELSE 0.36355792185933533 END)));SELECT rt1.c3 FROM rt0 WHERE (json_patch(TRIM(DISTINCT NULL, NULL), (((('G+gg e?')AND(NULL)))AND('3'))));SELECT ALL MAX((((rt1.c1, rt1.c0, 0.32885085723582697))>=((rt0.c1, rt1.c2, rt0.c2)))) FROM rt0;SELECT DISTINCT CASE WHEN rt1.c4 THEN NULL ELSE CASE rt1.c2  WHEN rt0.c2 THEN rt0.c1 END END FROM rt0, rt1 WHERE (((CASE WHEN 0.4064713485983349 THEN x'' ELSE NULL END)>(ABS(0.45234600748265286)))); -- 0ms;
SELECT DISTINCT AVG(CASE WHEN rt1.c1 THEN rt0.c2 END), CAST(((rt0.c1)|(rt0.c3)) AS BLOB), CASE ((((rt1.c2)OR(rt0.c2)))OR(rt1.c3))  WHEN CASE '|l'  WHEN rt0.c2 THEN 0xffffffffb3c1e2a8 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c4 THEN x'c236' WHEN rt0.c1 THEN rt0.c2 END THEN ((rt1.c4) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt1.c2 AS REAL) END FROM rt1, rt0 GROUP BY ((((rt0.c1)AND(rt0.c2)))OR(NULL)) COLLATE NOCASE ORDER BY CAST(json_array_length(rt1.c2, rt1.c3) AS TEXT);SELECT DISTINCT (((rt0.c3))<>((rt0.c0))) COLLATE RTRIM FROM rt0 WHERE (((('0.4367669686363883')) NOT BETWEEN ((CAST(NULL AS NUMERIC))) AND (((('1789419349') IS TRUE))))); -- 0ms;
SELECT ALL COUNT((+ (rt0.c1))) FROM rt0, rt1; -- 0ms;
SELECT ALL ((((((((((rt0.c1)AND(rt1.c0)))OR(CASE rt1.c2  WHEN 'A7' THEN rt0.c2 ELSE rt1.c4 END)))AND(CAST(rt1.c3 AS INTEGER))))OR(((rt1.c4) NOT NULL))))OR((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) FROM rt1;SELECT DISTINCT ((((rt0.c3)*(rt0.c3))) NOT BETWEEN (rt1.c0) AND (CAST(rt0.c0 AS TEXT))) FROM rt0, rt1 WHERE ((((NULL COLLATE BINARY, ((('-2085478590', '', NULL))<=((x'', 0.35402774049489205, '564008671'))), (((0.026492910451334395, 0.0010122111953176915, x'', x'', 1.431124819E9))!=(('-550848596', x'', x'15e5', 0.9605723896032583, NULL))), ((NULL) BETWEEN (0.5103312898441202) AND ('-1828724965')), (NULL IN ())))>=((((0.4924445270814537)IS NOT('%?')), SQLITE_VERSION(), (- (x'47c4ed09')), (+ (NULL)), (- (0.1469550675277641)))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)>(rt1.c3)))GLOB(((rt0.c3) ISNULL))) FROM rt0, rt1; -- 0ms;
SELECT ALL CASE rt1.c1 COLLATE NOCASE  WHEN ((rt0.c2)IS NOT(NULL)) THEN (~ (rt0.c0)) WHEN (rt1.c4 IN ()) THEN rt0.c2 WHEN (((rt0.c3)) NOT BETWEEN (('2044348790')) AND ((rt1.c1))) THEN ((rt0.c3)<=(rt1.c0)) ELSE (('')-(rt1.c1)) END FROM rt0 WHERE (((CAST(x'' AS BLOB))>=((('')/(NULL)))));SELECT DISTINCT x'1e97' FROM rt1 WHERE ((((((~ ('-531925410')))AND((NOT (x'b469')))))OR(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((CAST(rt0.c1 AS INTEGER), COUNT(*), CAST(424748487 AS REAL)))!=(((((rt1.c0))>((rt1.c2))), (((rt0.c2))!=((rt0.c2))), COALESCE(rt0.c0, rt0.c3)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c3)OR(rt0.c1)))AND(rt1.c0)) IN (CAST(rt1.c3 AS INTEGER), ((rt1.c1) IS TRUE))) FROM rt1 WHERE (((('m/')) NOT BETWEEN (((((0xffffffff930bc283, 0.4890267018455131, x'd813'))>((x'', 0.5459208964310998, 0.12075801452377855))))) AND ((CASE '-456699976'  WHEN '' THEN 0x5d1494e1 WHEN 0.27189285785530204 THEN x'' WHEN NULL THEN 'RO' ELSE -1.79161189E8 END))));SELECT ((rt0.c2)%(rt1.c4)) COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT ALL MIN(-48987508) FROM rt1 WHERE (COALESCE(DISTINCT -1772849698, ROUND(0.40734081681555145, 1.518348095E9))); -- 0ms;
SELECT DISTINCT CASE WHEN 0.9127207023829735 THEN ABS(DISTINCT rt1.c3) WHEN MAX(rt0.c3) THEN ((rt1.c0)<=(rt0.c1)) WHEN 0.653344566636472 THEN CASE WHEN x'2fa0' THEN rt0.c3 WHEN rt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c1 END WHEN ((rt1.c4)<<(rt0.c3)) THEN rt1.c1 COLLATE RTRIM WHEN rt0.c3 THEN rt0.c3 COLLATE NOCASE ELSE (rt1.c0 IN ()) END, MIN(((x'')GLOB(rt0.c2))), TOTAL((- (rt0.c2))) OVER () FROM rt0;SELECT DISTINCT ((rt0.c3 IN (rt1.c0, rt0.c2)) IN ()) FROM rt1 WHERE (json_type(((x'') IS FALSE))); -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c1 THEN ((rt1.c3)+(rt1.c4)) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(rt1.c2 AS BLOB) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST((((rt1.c4))<((rt1.c3))) AS REAL)) OVER () FROM rt1 WHERE (CASE WHEN QUOTE(0.7324828465553453) THEN (+ ('9223372036854775807')) END) ORDER BY (rt1.c1 IN (rt0.c0)) COLLATE NOCASE  NULLS FIRST;SELECT DISTINCT (0.47943621365304145 COLLATE BINARY IN ()) FROM rt1 WHERE (TYPEOF(DISTINCT (('-48987508') BETWEEN (2.04434879E9) AND (NULL)))); -- 0ms;
SELECT DISTINCT (- (((rt0.c3) NOT NULL))) FROM rt1, rt0 WHERE ((((0x726d7538) NOT BETWEEN (0.7701233975912729) AND (0.34878415157708875)) IN ())); -- 0ms;
SELECT ((('') IS FALSE) IN ()), COUNT(rt1.c3), MIN((NOT (rt1.c2))) FROM rt0, rt1 ORDER BY ((rt1.c2 IN ()) IN ()) ASC, (- (rt1.c0)) COLLATE BINARY; -- 0ms;
SELECT ALL (((rt1.c0))==((rt0.c0))) COLLATE RTRIM FROM rt0, rt1 WHERE ((((x'c056', 0.35720569083190556, 0xfffffffffe573ab4)) NOT BETWEEN ((NULL, ((0.8885817795890437) IS FALSE), (((((((('9f1)Qz')AND(0.10114268017041328)))OR('r/l>s')))AND('284045769')))AND(NULL)))) AND (((NULL IN ()), ((0.4588627067540164) IS TRUE), ((('-1884930149', '-948228332', 0.6394372807625293)) BETWEEN ((974030413, 0.6330210843404951, 'ajS1eypl')) AND ((0.06643285685285738, 0.7790275045116749, 0.6932137256918297))))))); -- 0ms;
SELECT SUM(((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM) OVER () FROM rt0 NOT INDEXED;SELECT DISTINCT ROW_NUMBER() OVER ( ROWS BETWEEN rt1.c3 PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 LIMIT -1540633713 OFFSET -1504478377; -- 0ms;
SELECT ALL ((((0.0780442344677803)>>(rt0.c1)))>((((rt1.c0, NULL, rt1.c1)) NOT BETWEEN ((x'', rt1.c4, rt0.c3)) AND (('-1423681388', rt1.c3, rt0.c3))))), 0.1202695698614823, TOTAL(((rt0.c3)<=(rt1.c1))) OVER (), CASE CASE WHEN rt1.c2 THEN rt0.c2 END  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (~ (rt0.c3)) WHEN ((rt0.c3)IS(x'')) THEN rt0.c1 WHEN rt0.c0 COLLATE BINARY THEN '-806451896' WHEN CASE rt1.c2  WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c2 END THEN rt1.c3 COLLATE BINARY WHEN CAST(rt1.c0 AS NUMERIC) THEN 'nl' ELSE (((rt0.c2))>((rt0.c2))) END, ((((NULL) ISNULL)) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3))) AND (TYPEOF(DISTINCT rt1.c2))) FROM rt0, rt1 WHERE (CASE CAST('126336913' AS NUMERIC)  WHEN 0x53bfac54 THEN ((x'')<(0.6834281220671716)) WHEN CASE x''  WHEN x'' THEN 0.11604797524312382 ELSE x'4a01' END THEN ('1339181446' IN ()) WHEN (('-128847637')||('-46219627')) THEN x'' END); -- 0ms;
SELECT ALL (NULL IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(*), (((CASE WHEN 1.970015066E9 THEN rt0.c0 ELSE rt0.c3 END))<((((x'2be6') BETWEEN (rt1.c4) AND (rt0.c1))))), LIKELIHOOD(DISTINCT ((rt1.c0)IS(rt0.c2)), 0.5465771308551204) FROM rt1, rt0; -- 0ms;
SELECT ALL ((((rt0.c2)==(rt1.c3)))GLOB(NULL COLLATE RTRIM)) FROM rt1, rt0 WHERE ((LTRIM(0x63d0ee69) IN ('2120258312', ((NULL) BETWEEN (0.8721121999638451) AND (0.49391693579967133))))); -- 1ms;
SELECT ALL UNLIKELY(DISTINCT ((NULL) BETWEEN (NULL) AND (rt0.c0))) FROM rt0 WHERE (CAST(((('')) BETWEEN (('BᏆ䰪D硿iV')) AND (('TRUE'))) AS TEXT)); -- 0ms;
SELECT ALL TOTAL(((((rt1.c2)AND('-885028795')))OR(0.10821247234224607))) OVER (), ((((rt0.c1)-(rt1.c2)))||((((0.7680760727637682))>((rt0.c0))))), (((CASE rt1.c0  WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END))<>(((rt0.c1 IN ())))) FROM rt0, rt1 WHERE (((((((((NULL)OR(x'')))OR(NULL)))AND('-1249768609' COLLATE RTRIM)))OR(((0.8384124985755638) NOT BETWEEN (0.7613289345489466) AND ('456278206'))))) ORDER BY CASE (- (rt1.c2))  WHEN rt1.c2 THEN CAST(rt1.c4 AS TEXT) ELSE NULL END; -- 0ms;
SELECT DISTINCT ((((((rt1.c2) ISNULL))OR(MAX(rt0.c0))))AND(((rt1.c1)GLOB(rt1.c1)))), CASE WHEN rt0.c2 THEN load_extension(rt1.c0) ELSE CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c3 END END, ((rt0.c0 COLLATE NOCASE) IS FALSE) FROM rt1, rt0 WHERE (x'6f92' COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt0.c0, SUM(rt0.c3) OVER (), (NOT (rt1.c4)) FROM rt0;SELECT DISTINCT COUNT(((((((((rt1.c0)OR(-2.7837772E7)))AND(NULL)))AND(rt1.c1)))AND(rt1.c4))) FILTER(WHERE (((CAST(rt1.c2 AS INTEGER)))<=((((rt1.c4) IS FALSE))))) OVER () FROM rt1, rt0; -- 1ms;
SELECT DISTINCT MIN(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c3))), SUM(((rt1.c1)OR(rt1.c2))) OVER ( ORDER BY ((rt0.c0 COLLATE BINARY)-(CASE WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c2 END)), (((- (0.10866316410659882)))/(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))  NULLS LAST), ((COUNT(rt1.c2))GLOB(((((rt1.c1)AND('ꊞL')))AND(0.52661054280392)))) FROM rt1;SELECT DISTINCT ((COUNT(*))%(MAX(rt1.c1))) FROM rt1, rt0 WHERE (((((((((((('-1798010789')AND(NULL)))AND(NULL)))OR('1431124819')))AND(''))))>((-1712231523 COLLATE BINARY)))); -- 0ms;
SELECT ALL 0.02226187176260619, '-885028795', CASE WHEN '' THEN (('510034691') BETWEEN ('D|u') AND (rt1.c2)) END FROM rt1; -- 0ms;
SELECT ALL ((((rt0.c3 IN (rt1.c1, rt1.c2)), ((rt0.c1)-(rt0.c3)), ((rt0.c2)=(rt1.c3))))=((rt0.c2 COLLATE RTRIM, TOTAL(rt1.c2), CAST(rt0.c1 AS INTEGER)))) FROM rt0, rt1 WHERE (((((((((SUBSTR(-402860782, -1651700578))OR(((0.9904519467261693) NOT BETWEEN (NULL) AND (0.12861966353446874)))))AND('hj' COLLATE NOCASE)))AND(((x'c84f')>>(0.601034608397117)))))OR('tv' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (rt1.c4 COLLATE NOCASE) AND (((rt1.c1)LIKE(rt0.c0)))) FROM rt0;SELECT ALL (NOT ((rt0.c2 IN ('p(')))), rt1.c0, CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)) WHEN ((rt1.c1)LIKE(rt1.c2)) THEN ((((rt1.c0)AND(rt0.c1)))OR(rt0.c1)) WHEN (rt1.c0 IN ()) THEN NULL ELSE COUNT(*) END FROM rt0, rt1 NOT INDEXED WHERE (x''); -- 0ms;
SELECT ((TRIM(DISTINCT rt1.c0))<=(CASE WHEN rt1.c3 THEN rt1.c0 END)) FROM rt0;SELECT DISTINCT TOTAL((rt1.c3 IN ())) OVER () FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(rt1.c2)))OR(rt1.c0))) IS FALSE) FROM rt0 WHERE ((((~ (-1323680173))) NOTNULL));SELECT DISTINCT CASE WHEN ((rt0.c0)IS NOT(rt1.c1)) THEN CAST(rt1.c1 AS TEXT) WHEN CAST(rt0.c1 AS REAL) THEN ((rt1.c0) ISNULL) WHEN ((((rt0.c1)AND(rt1.c3)))OR(rt0.c0)) THEN ((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c1)) ELSE x'' END FROM rt0, rt1; -- 0ms;
SELECT (((rt1.c3 IN ())) IS TRUE) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((CASE WHEN rt0.c0 THEN 0Xffffffffe34e60fb ELSE rt1.c1 END, (((rt0.c3))<=((0X148660c9))), CASE rt0.c3  WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c2 END))==((rt1.c0, CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c3 END, (~ (rt1.c3))))) FROM rt0;SELECT CAST(0x1246c69c AS TEXT) FROM rt0; -- 0ms;
SELECT x'' FROM rt1 ORDER BY ((((rt0.c2)OR('0.9782716643484106')))AND(rt1.c1)) COLLATE BINARY LIMIT 569314431 OFFSET 327811172;SELECT DISTINCT 0.8872080513758331, ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3))) BETWEEN (GROUP_CONCAT(rt0.c3)) AND ((((rt1.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))), ((CAST(rt1.c1 AS REAL))IS NOT(CAST(rt0.c3 AS INTEGER))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c2, json_quote(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt1.c0))), AVG(((rt1.c4) IS TRUE)) FROM rt0 WHERE (((((-6.41405582E8)OR(NULL)))OR(x'21d3')) COLLATE RTRIM);SELECT ((((rt0.c0)AND(rt1.c2)))AND(rt1.c2)) COLLATE NOCASE FROM rt0 WHERE (((CASE WHEN 0.30921298382149776 THEN '-1489264177' END)>>(0.7035548315200358 COLLATE NOCASE)));SELECT COUNT(CAST(rt1.c1 AS NUMERIC)) FROM rt0;SELECT ((CASE WHEN rt0.c1 THEN rt1.c2 END) BETWEEN (CAST(rt1.c0 AS BLOB)) AND ((rt1.c4 IN (rt0.c0)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT ALL (CAST(rt0.c0 AS NUMERIC) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c0, 0.1383478830679763, rt1.c2)) NOT BETWEEN (((('430883983') NOTNULL), rt0.c2 COLLATE NOCASE, '-1212422765')) AND ((TOTAL(rt0.c2), x'59d4', (rt1.c1 IN (rt1.c4, rt1.c1))))) FROM rt1 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC));SELECT DISTINCT NULL FROM rt0 NATURAL JOIN rt1 LIMIT -61810445; -- 1ms;
SELECT DISTINCT ((((rt1.c0)*(rt1.c0)))IS(rt1.c3)) FROM rt0 LIMIT -779736060;SELECT DISTINCT (rt1.c1 IN ()) FROM rt0, rt1 WHERE (((0.6680440339169536) NOT BETWEEN ('1192657639') AND (0.36514798370079526)) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT rt1.c3, PERCENT_RANK() OVER (), ((rt1.c4) IS TRUE) COLLATE BINARY FROM rt0 WHERE ((((((('&G')<>(x'fc5e')))AND((('L7&%d䮥yM\')>(0X30d80cc8)))))OR((((0.13796402888141712))<=((NULL))))));SELECT DISTINCT ((((((((((((rt0.c1)OR(rt1.c1)))AND(rt1.c3)))OR(((rt1.c2) NOT NULL))))AND(((((((((((((rt0.c0)AND(rt0.c2)))AND(rt1.c3)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2)))OR(rt1.c4)))))OR((rt1.c4 IN ()))))AND(((((((((rt1.c0)AND(rt0.c3)))OR(rt0.c2)))AND(rt1.c2)))OR(rt0.c3)))) FROM rt0, rt1 WHERE ((((NULL IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT (LIKE(x'', NULL)))); -- 0ms;
SELECT ALL (((rt1.c3 IN ())) BETWEEN (((rt1.c3)>(rt0.c3))) AND (((((rt0.c3)OR(rt0.c3)))OR(rt0.c2)))), ((((rt1.c3)||(rt0.c3)))*(((rt0.c2)+(rt1.c3)))), GROUP_CONCAT((- (rt1.c4))) FROM rt1, rt0 WHERE (((((NULL)OR(0.08836920180053687)))OR(0.5439202723170664)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((SUM(''))>=((~ (rt1.c0)))) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c4)|('N]'))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND (CAST(rt0.c3 AS BLOB))) FROM rt0;SELECT (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((NULL))) COLLATE BINARY FROM rt0, rt1 WHERE (CASE WHEN CASE x'4acc'  WHEN 0.7377395730869857 THEN '*-mw9jec' WHEN x'' THEN 'vt(' WHEN 'hgyl' THEN x'' ELSE x'' END THEN ((0.7452045425031377) NOT BETWEEN ('-682941411') AND (0x23781d4e)) END); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 ORDER BY json_object('', (((rt0.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c4, rt1.c1, rt1.c1)) AND ((0.7854695933196733, rt1.c2, rt1.c1))));SELECT MIN(((rt1.c0)==(rt1.c3))), LIKELIHOOD(HEX(rt1.c4), 0.37175969299774525), MIN(((((rt1.c3)AND(rt0.c1)))AND(rt1.c0)), rt1.c0 COLLATE NOCASE), (((rt1.c3)) BETWEEN ((((rt1.c4) NOT BETWEEN (rt0.c3) AND (rt1.c2)))) AND ((rt1.c0))), AVG((NOT (rt0.c2))) OVER () FROM rt0, rt1; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(json_insert(rt1.c3, rt1.c4, '0.4430495790513592', rt0.c2, rt0.c3)) OVER ( RANGE BETWEEN  CURRENT ROW AND ((rt0.c0 IN ()) IN ((~ (rt0.c0)))) PRECEDING EXCLUDE NO OTHERS) FROM rt0, rt1 WHERE ((- ((('e(L6')-(0.5092437898408663))))) LIMIT -27837772 OFFSET -1017240739;SELECT DISTINCT COALESCE(DISTINCT CASE x''  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c1)*(rt0.c1))) FROM rt0 WHERE (((CAST(NULL AS REAL))<<(((x'')>('-1423681388')))));SELECT DISTINCT MIN((~ (rt0.c1)) COLLATE RTRIM) FROM rt1 WHERE (((NULL) BETWEEN (x'') AND ((('875543126')!=(NULL)))));SELECT DISTINCT (('0.38108964359018915')AND(CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c2 END)), NTH_VALUE(rt0.c3, ((((rt0.c1) NOT NULL)) ISNULL)) OVER (), CAST(rt0.c1 COLLATE NOCASE AS TEXT) FROM rt1, rt0 GROUP BY TRIM((+ (rt0.c0)), (((rt1.c1)) NOT BETWEEN ((0xffffffffdeaf72d9)) AND ((rt0.c3)))) HAVING ((CASE rt0.c3  WHEN rt1.c0 THEN x'' WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN 0.386950595064098 END)GLOB(rt1.c4)); -- 0ms;
SELECT DISTINCT CASE WHEN JULIANDAY(rt1.c0, '1236407275', rt1.c3) THEN ((NULL) ISNULL) END FROM rt1, rt0 WHERE (CASE (x'' IN ())  WHEN ((0xffffffffc8ad3b8a) BETWEEN ('') AND ('0.7035548315200358')) THEN ((x'') BETWEEN (x'be76') AND (-2005929036)) ELSE ((('', 0x4397110d, '-1258298645')) NOT BETWEEN ((0.23097415553228529, 'i[', 0.07660549517290771)) AND ((0.21232256960402773, '', x''))) END) GROUP BY ((rt0.c1)|(rt0.c2)) COLLATE BINARY, LIKELY((~ (rt0.c2))), (rt0.c3 IN (rt0.c2, rt1.c0)) COLLATE RTRIM; -- 0ms;
SELECT LAST_INSERT_ROWID() FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c1)) AS BLOB), ((rt0.c3 COLLATE RTRIM)*((rt1.c0 IN (rt1.c1, rt0.c1)))), LAST_VALUE((((NOT (rt1.c1)))>>(((((rt1.c0)OR('2132878899')))AND(rt0.c1))))) OVER () FROM rt0, rt1 WHERE (((((0.49391693579967133)<<(0.3410161178683927)))*(CASE WHEN '' THEN NULL END))); -- 0ms;
SELECT DISTINCT (~ ((rt0.c1 IN ()))) FROM rt0 WHERE (HEX(((8.61965254E8) BETWEEN (x'') AND (-1.168086152E9)))); -- 0ms;
SELECT DISTINCT ((json_valid(rt1.c3)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c3 END)), COUNT(CASE WHEN rt1.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt1.c4 ELSE 1.419540607E9 END) OVER (), x'7ac0' FROM rt1 WHERE (((('', NULL, 0.18910572300006945, x'', '00b뾨㞛!')) NOT BETWEEN ((((' ^dJS3fH') NOT BETWEEN (x'') AND (0.5350183601377053)), ((('-1828724965'))>(('jk'))), STRFTIME(NULL, '', NULL, NULL, ''), ((2145063356)<=(NULL)), LIKELY(DISTINCT x'39da'))) AND ((CAST(0.43059297718770884 AS REAL), (((x'1ae8'))>(('1608245297'))), ((x'')+('DGpls')), ((((x'bee2')OR(NULL)))OR(NULL)), x'' COLLATE RTRIM))));SELECT ((4.13334013E8) BETWEEN ('57⒩2j') AND (rt0.c3)) COLLATE NOCASE FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c3)) AS REAL) FROM rt1, rt0 WHERE (CASE WHEN (~ (NULL)) THEN NULL WHEN CASE 0.20135030089162698  WHEN 0.7758390538989407 THEN 0.8599272542436265 END THEN (~ (0xffffffffce6453c1)) WHEN -179161189 COLLATE NOCASE THEN ((0.8380717416344522)GLOB(x'2696b458')) ELSE ((x'b13afb05')&(0xffffffffc2bc4d20)) END); -- 0ms;
SELECT DISTINCT CAST((((rt1.c2, rt1.c0, rt0.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c3, rt0.c2, rt0.c1)) AND ((NULL, rt0.c1, rt0.c3, rt1.c1, 0.9364135447123596))) AS REAL) FROM rt1, rt0 WHERE (LIKELIHOOD(DISTINCT ((x'1f57') IS FALSE), 0.9881949550310216)); -- 0ms;
SELECT NTILE(CAST(x'' AS NUMERIC)) OVER () FROM rt0, rt1 WHERE (((((0.05129407859678203)OR(((0.4573081721829726)LIKE(-5.3192541E8)))))AND(((NULL)<<(0.9938026707577665))))); -- 1ms;
SELECT DISTINCT ((('-5039145836178809329:499 1974:1682T67T1752:1605:-1377885901557254968-' IN ()))IS NOT(CAST(rt0.c3 AS BLOB))) FROM rt0; -- 0ms;
