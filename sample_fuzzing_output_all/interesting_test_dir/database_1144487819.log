-- Time: 2024/06/07 17:54:40
-- Database: database19
-- Database version: 3.40.0
-- seed value: 1144487819
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.513412326510263) WHERE (((('')==(vt0.c0))) ISNULL); -- 0ms;
VACUUM; -- 1ms;
REINDEX; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=0x5cd5e585; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1557521797'); -- 0ms;
UPDATE OR FAIL vt0 SET c0='1557521797'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-776815479,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1763135300); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='1062804430'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'3178' WHERE ((vt0.c0 COLLATE NOCASE)<((('1557521797')%(vt0.c0)))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 2ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1062804430'; -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 0; -- 1ms;
UPDATE OR REPLACE vt0 SET c0='1062804430'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c0=1162074311; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR ABORT vt0 SET c0='', c0=0.513412326510263, c0=0.513412326510263; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=('-776815479', NULL) WHERE vt0.c0; -- 0ms;
REINDEX  vt0; -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL WHERE CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
PRAGMA main.recursive_triggers; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'ede8'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1062804430,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(2047613356, 0X5cd5e585); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1062804430', c0=0.9387278617375547, c0='-240689838' WHERE UPPER(DISTINCT (((vt0.c0))==((vt0.c0)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0='嵒Je~}', c0=-2100602684; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM vt0; -- 0ms;
PRAGMA threads; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=(x'e976', '1557521797') WHERE CAST(((vt0.c0) NOT NULL) AS BLOB); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size = -4671102112555292572; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.9504290897796821), (0.8408645680429182), ('83'); -- 1ms;
REINDEX; -- 1ms;
COMMIT TRANSACTION; -- 1ms;
REINDEX; -- 1ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.728093124705013); -- 1ms;
UPDATE OR ABORT vt0 SET c0='-45537139', c0=NULL WHERE (((((((vt0.c0))<=((vt0.c0))))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS INTEGER))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('0.9387278617375547'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')AND(x'fd0d')))AND(NULL)))OR((('-776815479')+('')))))OR(NULL COLLATE BINARY)); -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOTNULL) COLLATE NOCASE, ((HEX(vt0.c0))IS NOT('1162074311' COLLATE NOCASE)), CASE WHEN (vt0.c0 IN ()) THEN 0.9504290897796821 ELSE CAST(vt0.c0 AS NUMERIC) END FROM vt0 WHERE (CAST((0.1408549195847405 IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)>(0.5956092908997275)), (vt0.c0 IN ()))), (((((vt0.c0 IN ()))OR(vt0.c0 COLLATE NOCASE)))AND((- (vt0.c0)))), (((- (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c0)))) FROM vt0 WHERE (TRIM(DISTINCT ((((((((NULL)AND(1557521797)))AND(0.6345678615791831)))AND(x'')))AND(x'')))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS TEXT), CASE 'iw\'  WHEN CAST(vt0.c0 AS BLOB) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT) FROM vt0 WHERE (((((x'')|('j]H')))GLOB(((((((((((((0xffffffffe2370791)OR(x'585e')))OR(x'')))AND('DS#n(6Qv')))AND(NULL)))OR(x'')))AND(NULL))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)!=(COALESCE(vt0.c0, vt0.c0))) DESC  NULLS FIRST; -- 1ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN -4.5537139E7 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (MAX(0.24204337564589462))) FROM vt0 LIMIT 1777300905 OFFSET 911770957; -- 0ms;
SELECT ALL ((vt0.c0) IS FALSE), (NOT (vt0.c0)), COUNT((((vt0.c0, vt0.c0, '-821012941')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) FROM vt0 UNION ALL SELECT ALL GROUP_CONCAT(x'' COLLATE BINARY), (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (2.047613356E9) AND ((+ (0.1408549195847405)))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND (((- (vt0.c0))))) FROM vt0 WHERE (((0Xffffffffcf432c7c COLLATE RTRIM)<=(TRIM(0.7426041117240678, x'e5cd')))); -- 0ms;
SELECT ALL vt0.c0 COLLATE NOCASE FROM vt0 ORDER BY NULL ASC; -- 0ms;
SELECT '_Lp|/u!q' FROM vt0; -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c0) NOT NULL))) FROM vt0; -- 0ms;
SELECT ALL ((TOTAL(vt0.c0))=((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0 WHERE (((UNLIKELY(NULL))&((((x''))!=(('-504677108')))))) LIMIT -821012941; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0)=(x''))))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((- (CAST('-499710063' AS INTEGER)))); -- 0ms;
SELECT ALL ((vt0.c0)*(COALESCE(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE (((((('-817681284'))!=((-499710063))))>=(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT ((((CAST(vt0.c0 AS INTEGER))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), ((NULL) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)IS NOT(vt0.c0)))), 0.8246566399164477 FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE('-504677108', ((vt0.c0) NOT NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS TEXT), ((vt0.c0)||(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0)), -2009769633, vt0.c0))) FROM vt0 WHERE (UPPER(DISTINCT (((9.11770957E8)) BETWEEN (('-817681284')) AND ((0X3ab360bd))))) EXCEPT SELECT DISTINCT -2.009769633E9 FROM vt0; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS TEXT)  WHEN ((x'')>=(x'7185')) THEN ((((vt0.c0)AND(vt0.c0)))AND(x'')) WHEN (((vt0.c0))>((vt0.c0))) THEN (vt0.c0 IN ()) WHEN AVG(vt0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')) END FROM vt0 WHERE (((((('1901562808'))<>((''))))&(0.8882345578253508))); -- 0ms;
SELECT (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 WHERE (NULLIF((x'' IN ()), 585110129)) GROUP BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (vt0.c0, vt0.c0)))), ((((0.24204337564589462) IS TRUE))*((NOT (vt0.c0)))), ((vt0.c0)OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), NULLIF(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) HAVING ((vt0.c0) ISNULL) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) FROM vt0 WHERE ((0.765731155591164 IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END)+(vt0.c0)) FROM vt0; -- 0ms;
SELECT CUME_DIST() OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW), json(CAST(vt0.c0 AS TEXT)), CAST(TYPEOF(NULL) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM END, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (vt0.c0) AND (AVG(vt0.c0))), ((vt0.c0)LIKE((vt0.c0 IN (vt0.c0)))), CHANGES() COLLATE RTRIM, (~ (((vt0.c0)|(vt0.c0)))) FROM vt0 LIMIT 1608620513; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (TYPEOF(vt0.c0)) AND (vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT (+ ((((vt0.c0))<=((vt0.c0))))) FROM vt0 WHERE (((((((x'')AND('1162074311')))AND(0Xffffffffc1b1df49))) IS FALSE)); -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS TEXT)) FROM vt0; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c0 END))>=((((((((((((((((((1901562808)OR(vt0.c0)))OR(2.047613356E9)))AND(NULL)))AND(-2061161452)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL))))), NTH_VALUE(((vt0.c0 COLLATE RTRIM) NOTNULL), ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<((('')+(vt0.c0))))) OVER ( RANGE BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING), ((x'')<>((vt0.c0 IN ()))) FROM vt0;SELECT ALL CASE NULL COLLATE NOCASE  WHEN (((vt0.c0))==((vt0.c0))) THEN (('')<>(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)<=(vt0.c0)) THEN LIKE(vt0.c0, vt0.c0, '1') ELSE CAST(vt0.c0 AS TEXT) END FROM vt0 WHERE ((((((((((~ (0.38608401483543364)))AND(((1.557521797E9)IS(x'')))))AND((x'' IN (NULL, 'v!\n')))))OR(CAST(1.608620513E9 AS REAL))))AND(CASE 0.25908009729716075  WHEN 0.6213327458790456 THEN -922916374 ELSE 'z' END))); -- 1ms;
SELECT DISTINCT LOWER(DISTINCT '710006903') FROM vt0; -- 0ms;
SELECT vt0.c0, highlight(vt0.c0, vt0.c0, ((vt0.c0) NOT NULL), ((vt0.c0)%(vt0.c0))), ((vt0.c0)>(x'e109')) COLLATE BINARY FROM vt0 WHERE (CASE WHEN CASE WHEN -45537139 THEN NULL WHEN 0xffffffffc8fd69ea THEN -593376652 WHEN x'' THEN 0.33072106765284237 WHEN '-1714162335' THEN x'' WHEN '' THEN NULL ELSE ' 9\nT2Z' END THEN (NULL IN ()) WHEN (x'ba97' IN ()) THEN CASE x''  WHEN '-1465640376' THEN '0.0' END WHEN CAST('496981914' AS REAL) THEN (+ ('邶')) WHEN ((NULL)+('-419834202')) THEN ('uM' IN ()) WHEN CASE 0.6684505886172967  WHEN x'5f01' THEN x'' WHEN NULL THEN 0.8629775253524643 WHEN '-1434977523' THEN 0.4794209518764815 ELSE 0.733390419098324 END THEN CAST('|?r[' AS BLOB) ELSE '0.9387278617375547' COLLATE NOCASE END); -- 1ms;
SELECT DISTINCT ((((((((x'a702')OR(0.9485426496164956)))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((- (x'')))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN '7' THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN ((vt0.c0)<<(vt0.c0)) THEN TOTAL(vt0.c0) WHEN (+ (vt0.c0)) THEN (((vt0.c0))!=((vt0.c0))) END, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)IS NOT(0.3180552141106828)))), CUME_DIST() OVER () FROM vt0 GROUP BY ((((((vt0.c0)AND(vt0.c0)))OR(x'13e1')))|(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x'')))), (vt0.c0 COLLATE BINARY IN ()), CASE (vt0.c0 IN ())  WHEN ((vt0.c0)-(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END ORDER BY (((((-4.19834202E8))=((vt0.c0)))) NOTNULL), vt0.c0 COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((('483031331')==(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)), CAST(((vt0.c0) NOTNULL) AS NUMERIC), ((((vt0.c0)<=(vt0.c0)))IS(((vt0.c0) IS FALSE))) FROM vt0 WHERE (x'b04e') LIMIT -2009769633 OFFSET -1414669838; -- 0ms;
SELECT ((((vt0.c0)GLOB(vt0.c0)))OR((~ (vt0.c0)))) FROM vt0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT CASE ((vt0.c0) NOTNULL)  WHEN (NOT (x'')) THEN vt0.c0 COLLATE BINARY WHEN LIKELY(DISTINCT vt0.c0) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) END FROM vt0 WHERE (((((('')AND(x'')))AND('p2>Qv')) IN ())); -- 0ms;
SELECT DISTINCT (((vt0.c0) IS TRUE) IN (CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE ('-258733065' COLLATE BINARY) LIMIT -98987055; -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT CAST(CAST(vt0.c0 AS INTEGER) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c0)))IS NOT((((vt0.c0, vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT AVG((NOT (vt0.c0))) OVER (), TOTAL_CHANGES(), ((CAST(vt0.c0 AS BLOB))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((((('-1333007243') IS TRUE))&((- (0.7244994617212526))))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0 GROUP BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT ALL 1351796770 FROM vt0 ORDER BY ((((vt0.c0 IN ())))<=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('', x'', 0.44099979522660393)))))) DESC  NULLS LAST, MAX((vt0.c0 IN ()), vt0.c0) DESC; -- 0ms;
SELECT DISTINCT ((vt0.c0)&(((vt0.c0)>>(vt0.c0)))) FROM vt0 WHERE ((((NULL)) BETWEEN ((((0.9607173911880307) NOT BETWEEN (NULL) AND (x'4b3e')))) AND ((CAST(1.7976931348623157E308 AS TEXT))))); -- 0ms;
SELECT CAST((+ (vt0.c0)) AS INTEGER), ((((vt0.c0) NOT BETWEEN (9.11770957E8) AND (vt0.c0))) NOT NULL), (vt0.c0 IN ()) COLLATE NOCASE, ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), LIKELIHOOD(DISTINCT TOTAL(vt0.c0), 0.38702778045340347) FROM vt0; -- 0ms;
SELECT (NOT (vt0.c0)) COLLATE NOCASE FROM vt0 NOT INDEXED WHERE ((((((NULL))==(('-1812843868'))))<=(CAST('邶' AS INTEGER)))); -- 0ms;
SELECT ((((vt0.c0)<>(vt0.c0))) BETWEEN ('') AND ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))), ((((((((((vt0.c0)=(vt0.c0)))AND((vt0.c0 IN ()))))OR((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, '+K*'))))))OR(0xffffffffab5cfefc)))OR((((vt0.c0))>((vt0.c0))))), GROUP_CONCAT(CAST(vt0.c0 AS TEXT)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)AND(vt0.c0)) END FROM vt0 GROUP BY ((((vt0.c0) IS FALSE)) NOTNULL), ((vt0.c0 COLLATE NOCASE) NOT NULL), (((vt0.c0) IS FALSE) IN (INSTR(vt0.c0, vt0.c0), vt0.c0 COLLATE NOCASE)) HAVING CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM; -- 0ms;
SELECT DISTINCT INSTR(vt0.c0, vt0.c0 COLLATE RTRIM) FROM vt0 WHERE (SQLITE_VERSION()); -- 0ms;
SELECT DISTINCT '-835431605' FROM vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM vt0; -- 0ms;
SELECT DISTINCT (- (((1928553152)||(vt0.c0)))), (((('')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))AND('Iv')), (~ (((vt0.c0)LIKE(vt0.c0)))) FROM vt0 WHERE (((((('-1045307575', x'', x'')) BETWEEN (('0.733390419098324', 0.5108533381248463, x'')) AND ((NULL, -1273897913, x'')))) IS TRUE)) ORDER BY CAST(TRIM(vt0.c0) AS INTEGER)  NULLS FIRST, vt0.c0, LIKELY(DISTINCT (vt0.c0 IN ())) ASC; -- 0ms;
SELECT DISTINCT LAG(TRIM(DISTINCT vt0.c0, ((vt0.c0) NOT NULL)), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<(CAST('-593376652' AS REAL))), ((((vt0.c0)OR(vt0.c0)))AND(((vt0.c0)&(vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT ALL (CASE 0.4474966399943645  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()), CASE NULL  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN TOTAL(vt0.c0) WHEN ((vt0.c0)<<(vt0.c0)) THEN CASE vt0.c0  WHEN '585110129' THEN vt0.c0 ELSE vt0.c0 END WHEN ((x'f8ff52cb') BETWEEN (vt0.c0) AND (vt0.c0)) THEN '' WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) NOT NULL) END, ((0.5097322882819252) NOT BETWEEN (((vt0.c0)<<(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))), ((((vt0.c0)>>(vt0.c0)))=(((vt0.c0)+(vt0.c0)))), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN (~ (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN (vt0.c0))) FROM vt0 WHERE (((((('-1465640376')) BETWEEN ((0.7673581603163843)) AND ((x''))))|('-2061161452' COLLATE BINARY))); -- 0ms;
SELECT (NULLIF(DISTINCT vt0.c0, vt0.c0) IN ()) FROM vt0 WHERE ((((('' IN (1.928553152E9))))!=((((0Xffffffffc1b1df49) IS TRUE))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0)) FROM vt0 WHERE ('-1536458663'); -- 0ms;
SELECT ((UPPER(DISTINCT vt0.c0))-((vt0.c0 IN ('-419834202')))) FROM vt0 WHERE (CASE WHEN 0.7539856318418267 THEN ((((0xffffffffd0c121c1)AND(x'')))AND('-2061161452')) WHEN ((NULL) NOT BETWEEN (NULL) AND (0.589885105885823)) THEN (('364256544')AND(x'')) WHEN CASE 'fw3Iu%{y'  WHEN x'' THEN NULL END THEN ((((0.50905580595133)OR(x'')))OR('aJD*]Uz.')) WHEN ((0.50905580595133) BETWEEN ('v!\n') AND ('K7p>U^S')) THEN ((NULL) ISNULL) WHEN CAST(-1749293880 AS NUMERIC) THEN CASE 'f.d|⢍*H6}'  WHEN NULL THEN NULL WHEN 0.5201845872303931 THEN NULL WHEN 0.9067871943129879 THEN x'' END END); -- 1ms;
SELECT DISTINCT (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST(json_remove(NULL, x'') AS BLOB)); -- 0ms;
SELECT DISTINCT '', ((((vt0.c0)>>(NULL))) BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((vt0.c0 IN ()))), (((((vt0.c0)GLOB(vt0.c0))))<>((((vt0.c0) IS FALSE)))) FROM vt0 WHERE (((((((x'1c38')||(0x54d258e3)))OR(((0X6d5b7340)+(0.292249373496837)))))AND((('') BETWEEN (0.9485426496164956) AND ('R'))))); -- 0ms;
SELECT CASE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))  WHEN json_array(vt0.c0, vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN '0.6213327458790456' COLLATE RTRIM THEN ((vt0.c0)*(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN (('984834237') NOTNULL) END, ((((((((((vt0.c0)=(vt0.c0)))AND(NULL)))AND(vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), x'10e4' FROM vt0 WHERE (((NULL)&(NULL)) COLLATE NOCASE) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=('9*q<#'))) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('0.7539856318418267') AND (vt0.c0))) AND (vt0.c0)) FROM vt0 WHERE (((((((x'')==(0X5eeeac5d)))OR('0.4794209518764815')))AND(CASE WHEN x'' THEN '-419834202' END))); -- 0ms;
SELECT DISTINCT LAG(LAST_INSERT_ROWID(), (NOT (CHAR(vt0.c0))), CAST(CAST(vt0.c0 AS REAL) AS TEXT)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c0))>=(((vt0.c0)<(vt0.c0)))) FROM vt0 WHERE (((('FALSE'))<=(('-922916374'))) COLLATE RTRIM) LIMIT -839895476; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0 WHERE ((~ (CAST(0.37629239041174545 AS INTEGER)))) LIMIT -2100602684 OFFSET 309026002; -- 0ms;
SELECT ALL LIKELIHOOD(((vt0.c0)<=('}1uL鏑U0')), 0.448058306072295) FROM vt0 WHERE ((((((('')<=(0X7fbcb34a)))OR(NULL COLLATE BINARY)))AND((~ (0.8119389441638447))))); -- 0ms;
SELECT MIN(load_extension(vt0.c0)), CASE (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))  WHEN CASE '\rCx腋OZ'  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffd559b209 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE NOCASE ELSE vt0.c0 COLLATE BINARY END, TRIM(DISTINCT (('-388662827') NOT NULL)) FROM vt0;SELECT (((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(LTRIM(0.38608401483543364, vt0.c0))))AND(CASE vt0.c0  WHEN vt0.c0 THEN 1777144158 END)))AND('0.7539856318418267')))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN ()))), ((((vt0.c0)IS NOT(vt0.c0))) NOTNULL), ((((vt0.c0)OR(0.9459228202126067)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))/((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
SELECT CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB) FROM vt0 GROUP BY ((((((((NULL)OR(ABS(DISTINCT vt0.c0))))OR((vt0.c0 IN ()))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.796315199425768)))))AND(TRIM(DISTINCT vt0.c0))) LIMIT 911770957 OFFSET -1419968772; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0 WHERE ((((('2047613356') NOT BETWEEN (-394796688) AND (x'75d4'))) NOT NULL)); -- 0ms;
SELECT ((vt0.c0)OR((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE (NULLIF('-258733065', (NULL IN (x'')))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))!=(((vt0.c0)>=(vt0.c0)))) FROM vt0 WHERE (IFNULL(((-1338661424)<>(x'')), (('') BETWEEN (0Xffffffffadd14d11) AND ('时f')))); -- 4ms;
SELECT DISTINCT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()) FROM vt0 GROUP BY ((((vt0.c0)IS(vt0.c0))) NOT NULL); -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS(vt0.c0))) NOT NULL), (vt0.c0 COLLATE BINARY IN ()), ((CAST(vt0.c0 AS INTEGER))*(((vt0.c0)LIKE(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT json_valid((vt0.c0 IN ())), 0.6798309197319782, COUNT(*) FROM vt0 GROUP BY ((((vt0.c0) BETWEEN (x'f1a7') AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))) HAVING (((0.6290187407392028) IS TRUE) IN ()); -- 0ms;
SELECT ALL ((((vt0.c0)/(vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((((0xffffffffd95ec3a8)%('-20000681'))) NOT NULL)); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS TEXT), (((vt0.c0))<=((vt0.c0))))) AND (((~ (vt0.c0)), LIKELY(vt0.c0), ((vt0.c0) NOTNULL)))) FROM vt0 WHERE ((- (LIKELIHOOD(0.05952989108901119, 0.9932169547643624)))) GROUP BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) HAVING ((((vt0.c0)/(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ()))); -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (0Xfffffffff4c79144)))-(CAST(vt0.c0 AS TEXT))), json_object((~ (x'')), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, CASE WHEN 0.6460898237961534 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), (+ (((vt0.c0) NOTNULL))) FROM vt0 WHERE (UNLIKELY(NULL COLLATE RTRIM)); -- 1ms;
SELECT (((vt0.c0) NOTNULL) IN (SUM(vt0.c0), (vt0.c0 IN ()))), (+ ((vt0.c0 IN (vt0.c0, vt0.c0)))), SQLITE_COMPILEOPTION_GET(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'e7c098e1' END) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) NOTNULL))%(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((+ (CHAR(x'', '', -1766289226)))); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN ((NULL) IS TRUE) END FROM vt0 WHERE (CAST(((('0.733390419098324'))!=((1699650593))) AS TEXT)); -- 0ms;
SELECT ALL ('ajd*]uz.' IN (COUNT(*), (vt0.c0 IN ()))), (((((vt0.c0 IN (vt0.c0)))OR('823141199')))OR((((vt0.c0, vt0.c0, vt0.c0))<((0.6290187407392028, vt0.c0, vt0.c0))))), AVG(((vt0.c0)OR(vt0.c0))), vt0.c0, 0X70b9f729 FROM vt0 WHERE ((('' COLLATE NOCASE)/(NULL))); -- 0ms;
SELECT ALL CASE WHEN ((x'a60f01f5')<=(vt0.c0)) THEN 0xffffffffe877e170 WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)&(vt0.c0)) END FROM vt0 WHERE ((((1928553152)) BETWEEN ((CAST(x'' AS INTEGER))) AND ((CAST(NULL AS REAL))))); -- 0ms;
SELECT AVG('᳞Tdv' COLLATE NOCASE) OVER () FROM vt0; -- 0ms;
SELECT MAX((x'0e12' IN ())) FROM vt0 WHERE ((((('''')<=(-978301333)))-(0.04914698131760342))) ORDER BY ((+ (vt0.c0)) IN ()); -- 1ms;
SELECT -145012317, CASE (NOT (vt0.c0))  WHEN vt0.c0 THEN MAX(vt0.c0) ELSE TOTAL(vt0.c0) END, (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0.5528753281437236, vt0.c0, vt0.c0, x'ca2d', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((vt0.c0)&(vt0.c0)))), AVG(vt0.c0), (((vt0.c0)IS('-240689838')) IN ()), CASE ABS(vt0.c0)  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END, vt0.c0 FROM vt0 WHERE (((((((NULL)AND(x'1b71')))OR(1377639646))) NOT BETWEEN (((-792649279)>=(-240689838))) AND (json_extract('309026002', '', 0X390595a9, NULL))));SELECT COUNT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt0 WHERE ((((NULL IN ())) BETWEEN (CAST('p\rZTE' AS TEXT)) AND (((x'b45c')|(NULL))))); -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (LOWER(NULL)) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT NULL, 0.6412662551123461, CASE (((vt0.c0))=((vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT GROUP_CONCAT((((vt0.c0, vt0.c0, x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 959893161)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '343387015')))) FROM vt0; -- 0ms;
SELECT (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), TRIM(TRIM(vt0.c0, vt0.c0)), vt0.c0 COLLATE BINARY FROM vt0 ORDER BY ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0) IS TRUE))); -- 0ms;
SELECT DISTINCT json_patch(vt0.c0 COLLATE NOCASE, HEX(vt0.c0)) FROM vt0 WHERE ((((0.9412770763130619)/(0.04787471975181112)) IN ())); -- 0ms;
SELECT ALL ((0.765731155591164)||(ABS(NULL))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((((((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN ()))))OR(((vt0.c0)*(vt0.c0)))))AND(COUNT(vt0.c0))), (((x''))<=((((0.32622342214925504)*(vt0.c0))))) FROM vt0 WHERE ('0.24204337564589462'); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE BINARY)>>(((vt0.c0)-(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM vt0 WHERE (((CAST(-852033028 AS INTEGER)) NOTNULL)) ORDER BY ((((((-1591812648)IS(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)AND(vt0.c0)))) ASC  NULLS LAST, UPPER(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) DESC; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (CAST((x'63cb' IN (NULL, x'', '-258733065')) AS REAL)); -- 0ms;
SELECT ALL (((-1.45012317E8, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND('')))OR(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt0.c0)!=(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (~ (vt0.c0))))), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((('2143073098') BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) ISNULL))), ((- (x'9e0e')) IN ((~ (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0 WHERE (((((((((x'8cd1' COLLATE NOCASE)OR(CAST('blqt' AS TEXT))))AND(CAST(0.8865510937799245 AS TEXT))))OR(NULL COLLATE NOCASE)))AND(((x'')<<(0.2305365116555711))))) ORDER BY ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((NOT (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt0.c0))))  NULLS FIRST LIMIT 1777144158 OFFSET 1713644343; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((x'', x'5960', '')) NOT BETWEEN (('', '-45537139', 'q')) AND ((x'', NULL, '-1591812648')))) BETWEEN (TYPEOF(DISTINCT x'')) AND (CAST(x'' AS BLOB)))); -- 0ms;
SELECT CAST(vt0.c0 AS REAL) FROM vt0 WHERE (CASE WHEN 0.579540112003797 COLLATE RTRIM THEN (x'' IN ()) WHEN -4.19834202E8 COLLATE BINARY THEN ((NULL) IS FALSE) WHEN CASE 0.9254740383531922  WHEN 0.15261927780812856 THEN '136086580' ELSE 0xffffffffd1365eab END THEN ((0.5528753281437236)IS('-258733065')) ELSE (('{iAi*n<~F')OR(x'')) END); -- 0ms;
SELECT DISTINCT (+ (((vt0.c0) IS TRUE))) FROM vt0 WHERE (((x'') BETWEEN (NULL) AND (0.7624863000847875)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)IS NOT(vt0.c0))) OVER () FROM vt0 WHERE ((~ (ABS(DISTINCT '')))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS NUMERIC) FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(x'605a'), 0.7811918782340632, (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((vt0.c0 IN ())) BETWEEN (0.026115779260569183 COLLATE RTRIM) AND (NULL)), NULL COLLATE BINARY FROM vt0; -- 2ms;
SELECT ALL (+ (vt0.c0 COLLATE BINARY)) FROM vt0 UNION SELECT ALL CASE WHEN NULL THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0)+(0.36684370024878343)) THEN (vt0.c0 IN ()) WHEN LOWER(vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END FROM vt0 WHERE (('-124147340' IN ('茤S?Z', NULL)) COLLATE RTRIM) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1562490350')))&(vt0.c0)), ((vt0.c0 COLLATE RTRIM)*(x''))  NULLS LAST;SELECT ALL CASE WHEN 0.728093124705013 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE (((((0xffffffffce34534b) NOTNULL))LIKE(((0.982692938732453)+(-329993258))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(x'')))AND(vt0.c0)) THEN vt0.c0 END FROM vt0; -- 0ms;
SELECT DISTINCT SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '-1240898058' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c0))) AND ((vt0.c0 COLLATE RTRIM))) FROM vt0 WHERE ((((x'')) BETWEEN (((('-499710063') IS FALSE))) AND ((0.6842882160160614)))); -- 0ms;
SELECT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT AVG((vt0.c0 IN ())) FROM vt0 WHERE (CASE (NULL IN (0.8270540541521445))  WHEN (('i_2Hd^5') BETWEEN ('-1273897913') AND (0.030949028933015987)) THEN (~ ('wmxXm#')) END); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS INTEGER), CAST((vt0.c0 IN (vt0.c0)) AS BLOB), ((vt0.c0)=(vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('-47511312') AND (((vt0.c0) ISNULL))) FROM vt0 WHERE (((CASE WHEN -790640521 THEN 'cBA-' ELSE NULL END)&(((NULL) NOT BETWEEN (x'') AND (0Xffffffffd0e773e6))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN (((((x'', vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) AND (((('1901562808')>(0xffffffff81cebfe8))))) FROM vt0 WHERE ((CAST('q' AS REAL) IN ())); -- 0ms;
SELECT (((((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT ALL (~ (((vt0.c0)IS(vt0.c0)))) FROM vt0 WHERE (((LENGTH('GwgB3K'))|(1557521797))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)>(vt0.c0)))AND(AVG(vt0.c0))))AND((+ (vt0.c0)))))OR(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.4474966399943645 END) AND ('{襳Z/')), ((((vt0.c0) NOTNULL))+((((vt0.c0))<((vt0.c0))))) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0) NOTNULL) AS TEXT) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>(vt0.c0)) FROM vt0 WHERE (((0.030949028933015987)||('-1766289226')) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT NULL) DESC; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 WHERE (CASE WHEN (((x''))>=((x'a9c9'))) THEN CASE '0.4474966399943645'  WHEN 1423071459 THEN 0Xffffffffd1365eab WHEN 0.733390419098324 THEN NULL WHEN '-1333007243' THEN 1522231786 END END); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT 'n|x_q-Wt' FROM vt0 WHERE (CAST((NOT ('')) AS TEXT)) ORDER BY (CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((~ (vt0.c0)))) ASC, (((((vt0.c0)||(vt0.c0))))<=((vt0.c0 COLLATE RTRIM)))  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(vt0.c0) FROM vt0 WHERE (CAST(CASE 0.9932753782171824  WHEN 'dk᳞Pཇ{' THEN NULL ELSE x'' END AS INTEGER)) LIMIT -93495419 OFFSET -2061161452; -- 0ms;
SELECT ALL ((((vt0.c0) ISNULL)) IS TRUE) FROM vt0 GROUP BY vt0.c0, (((vt0.c0, ((vt0.c0)<<(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<>(((NULL IN (8.23141199E8)), (~ (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))), ((((((((CASE WHEN vt0.c0 THEN x'9793' END)OR(json_array_length(vt0.c0, NULL))))OR(x'')))OR((~ (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) HAVING (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0)GLOB('-1062153596'))))); -- 1ms;
SELECT DISTINCT (((vt0.c0)AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ((vt0.c0)>(LIKELIHOOD(DISTINCT vt0.c0, 0.673966892643552))) FROM vt0 WHERE (((((((NULL)|(-1584829937)))OR(x'')))OR((((('	\nR')OR('1852313089')))OR(NULL))))) GROUP BY (NOT (((vt0.c0) ISNULL))) HAVING ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)/(vt0.c0)))); -- 0ms;
SELECT ALL (- (CAST(vt0.c0 AS TEXT))), GROUP_CONCAT((NOT (vt0.c0))) FILTER(WHERE '-2068032298') OVER (), (vt0.c0 IN ()) FROM vt0 WHERE ((x'' IN ())); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE)GLOB(((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT ((vt0.c0)<<(vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)!=(vt0.c0)))) FROM vt0 WHERE ((((((((('-124147340')OR((('⍏|U') ISNULL))))OR(NULLIF(NULL, 1155451230))))AND(0.16741868583251218 COLLATE NOCASE)))AND(((0.18044107947984678) NOT BETWEEN (x'a499') AND (2.143073098E9))))); -- 0ms;
SELECT ALL CAST(SUM(vt0.c0) AS BLOB), vt0.c0, ((((HEX(vt0.c0))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT LAST_VALUE(((('jk') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) OVER (), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END) IS TRUE), ((((((((vt0.c0)AND(vt0.c0 COLLATE RTRIM)))AND(LENGTH(vt0.c0))))OR(MIN(vt0.c0, vt0.c0))))AND(TOTAL(vt0.c0))), ((('-1939014094')) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((vt0.c0)/(vt0.c0))))), '1980135472' FROM vt0 WHERE ((+ (((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT MAX(LOWER('-574608770')) FROM vt0 WHERE (CASE (+ (NULL))  WHEN UNLIKELY(NULL) THEN ('bt' IN (0.3487946835903041)) END); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c0)<(x'de1a'))))) FROM vt0; -- 0ms;
SELECT ALL ((((((((((vt0.c0)<=(vt0.c0)))AND(vt0.c0)))AND(CASE WHEN '' THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT NULL))), CAST(vt0.c0 AS REAL), (((- (vt0.c0)))OR(x'43c1')), ((vt0.c0 COLLATE RTRIM)IS((~ (vt0.c0)))), ((((vt0.c0) IS FALSE))>>(AVG(0.9932753782171824))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0)+(NULL)) THEN ((vt0.c0)OR(vt0.c0)) WHEN ((x'ef98')IS NOT(NULL)) THEN ((vt0.c0)<<(vt0.c0)) END FROM vt0 WHERE (((((((NULL)OR('c>萴Ii')))AND('{iAiDn<~F'))) IS FALSE)); -- 0ms;
SELECT (((vt0.c0) IS FALSE) IN ()) FROM vt0 WHERE ((NOT (((x'') NOT BETWEEN (0.7195836826043907) AND (0.3630699179835898))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt0.c0))) AND ((((vt0.c0) NOT NULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))*(PRINTF(vt0.c0, vt0.c0, vt0.c0))) FROM vt0 WHERE (DATETIME(((0.5097322882819252) NOTNULL), ((0x617105ab)AND('')), 's~/{+h+.\n')); -- 0ms;
SELECT CASE WHEN ((vt0.c0) IS TRUE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE CAST(0X4c7013e1 AS INTEGER) END, vt0.c0, COALESCE(DISTINCT (+ (vt0.c0)), LIKELY(vt0.c0)) FROM vt0 WHERE ((((((((NULL)) BETWEEN (('230293973')) AND ((x''))))AND(((1.423071459E9)/(NULL)))))AND(((x'') NOT BETWEEN (x'1939') AND (x''))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL), ((((vt0.c0) NOTNULL)) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((NOT (x'')))), ((CAST(vt0.c0 AS REAL))||((- (vt0.c0)))), TOTAL(((vt0.c0) ISNULL)) OVER () FROM vt0 GROUP BY (((vt0.c0 IN (x'', vt0.c0)))*(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))), (((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN ((TIME(vt0.c0, 0.05952989108901119, vt0.c0), (vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()), 0xffffffffd72264ea)) AND (((('\nN1iQ') ISNULL), ((vt0.c0)%(vt0.c0)), ABS(vt0.c0), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), NULL COLLATE BINARY))), ((((vt0.c0)<(vt0.c0)))%(0.4311715744421851)) ORDER BY 0Xffffffffe1eb3d0c, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '2143073098' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL); -- 0ms;
SELECT DISTINCT ((vt0.c0)AND(vt0.c0)) COLLATE NOCASE, FIRST_VALUE(CHAR(vt0.c0, x'', (~ (vt0.c0)))) OVER (), (((vt0.c0 COLLATE BINARY))>=((vt0.c0))) FROM vt0; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN '2134309877' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND ('Cj')) FROM vt0 WHERE ((((('b㩚UA')|(NULL)))LIKE(CASE WHEN x'' THEN x'deef' ELSE '823141199' END))) GROUP BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.9714560572199046 END)AND(((vt0.c0)+(vt0.c0)))))AND(0.5193546126976477)) HAVING ((((vt0.c0)-(vt0.c0)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) BETWEEN (MIN(vt0.c0)) AND (NULLIF(vt0.c0, vt0.c0))), ((UPPER(NULL)) IS FALSE), (((1221767116)>=(vt0.c0)) IN (((vt0.c0)GLOB(vt0.c0)))) FROM vt0 WHERE (CASE WHEN UNLIKELY(x'') THEN (((('dk᳞Pཇ{')AND(0.2875994663844327)))OR(0Xffffffffe68691b1)) ELSE CASE NULL  WHEN '' THEN x'' END END) ORDER BY json_valid(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((('L8W{' IN ()))>>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 ORDER BY SUBSTR((((vt0.c0))<=((vt0.c0))), NULLIF(DISTINCT vt0.c0, vt0.c0)) ASC, (((vt0.c0) IS FALSE) IN (((vt0.c0) IS TRUE))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT TIME(vt0.c0, vt0.c0, vt0.c0) COLLATE BINARY COLLATE BINARY, CASE WHEN ((vt0.c0) NOT NULL) THEN (+ (vt0.c0)) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 268721206 END WHEN vt0.c0 THEN CAST(vt0.c0 AS BLOB) END, CAST(vt0.c0 COLLATE BINARY AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, CAST('PTi옱L' AS INTEGER), vt0.c0 FROM vt0 WHERE (((0Xffffffffa11eddd8 COLLATE BINARY)*(CAST('aJD*]Uz.' AS BLOB)))); -- 0ms;
SELECT ALL CAST(((vt0.c0)>=(vt0.c0)) AS REAL), GROUP_CONCAT(vt0.c0) OVER (), (((vt0.c0)AND(vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC), TOTAL_CHANGES())) FROM vt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN ((x'')IS NOT(x'')) ELSE (x'' IN ()) END); -- 0ms;
SELECT DISTINCT CAST((('v!\n') BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), LOWER((- (vt0.c0))), (CAST('*N' AS TEXT) IN ()) FROM vt0; -- 0ms;
SELECT FIRST_VALUE(((((vt0.c0)OR(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END))) OVER () FROM vt0 WHERE (((((((((((NULL)<=(NULL)))AND(CAST(x'' AS TEXT))))OR(((x'') BETWEEN ('1852313089') AND (NULL)))))AND((('AeN&P,E*')||(0X14d5da6f)))))OR(((x'0916')LIKE(343387015))))); -- 0ms;
SELECT x'0827' FROM vt0 WHERE ((((('-124147340')|(NULL)))*('0.3180552141106828'))); -- 0ms;
SELECT ALL -0.0 FROM vt0 LIMIT -1345983698 OFFSET 1186313526; -- 0ms;
SELECT CAST((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC), (NOT ((vt0.c0 IN (vt0.c0)))), (((- (vt0.c0))) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND ((((vt0.c0))!=((vt0.c0))))) FROM vt0; -- 1ms;
SELECT ALL CAST((- (vt0.c0)) AS BLOB), (+ (((vt0.c0) NOTNULL))), '''￑gxs-	4' FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0 EXCEPT SELECT DISTINCT ((((0.6833804686950408) ISNULL)) NOT NULL) FROM vt0; -- 0ms;
SELECT ALL NTILE((((+ (vt0.c0))) ISNULL)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) OVER () FROM vt0 WHERE (CAST(((1345041549)&(NULL)) AS REAL)); -- 0ms;
SELECT CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN SQLITE_VERSION() WHEN vt0.c0 THEN (vt0.c0 IN ()) WHEN 1.377639646E9 THEN (('/OdHDI|>u') IS FALSE) WHEN 0xfffffffffeced057 THEN CAST(vt0.c0 AS BLOB) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END, json_valid(vt0.c0) COLLATE BINARY, json(UNICODE(vt0.c0)) FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL), CAST(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) AS INTEGER)  NULLS LAST, ((CAST(vt0.c0 AS BLOB))>=((- (vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>=(UPPER(vt0.c0))), '2004093817', (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0 COLLATE BINARY))) FROM vt0 UNION ALL SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE((~ ('-567632238')))), (~ (((vt0.c0)GLOB(vt0.c0)))), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)GLOB(vt0.c0)))) FROM vt0 GROUP BY ((((vt0.c0 IN (vt0.c0, vt0.c0))))>((NULLIF(DISTINCT vt0.c0, vt0.c0)))); -- 1ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END AS BLOB), LAST_VALUE((((((- (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) OVER (), HEX((+ (vt0.c0))), ((- (vt0.c0)) IN ()), -4369952 FROM vt0 WHERE (((x'')IS(((x'')IS NOT('-1490648106'))))) ORDER BY CAST(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS TEXT), 'G' DESC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((('ye?tA') NOT NULL)))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CAST('-1018853085' AS REAL)) BETWEEN ((~ (vt0.c0))) AND (IFNULL(vt0.c0, vt0.c0))) FROM vt0 WHERE ((x'' COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER)) NOT NULL) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9549622957093852))) FROM vt0 WHERE (CAST((+ ('3MqZ_')) AS BLOB)); -- 0ms;
SELECT (~ (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((((NULL)*(x'')))|((('1482119876')OR('<?*'))))) ORDER BY ((LOWER(DISTINCT vt0.c0))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt0.c0)|(vt0.c0))) NOTNULL), ((((((((CASE WHEN '' THEN vt0.c0 END)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0))<>((0.43391974583730675))))))AND(((0.8189115576462612)%(vt0.c0)))))OR((((NULL, vt0.c0, vt0.c0))==((NULL, vt0.c0, vt0.c0))))), STRFTIME((vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) IS TRUE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), AVG(0.35568441735904077)) FROM vt0 WHERE (CAST('' AS NUMERIC) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((vt0.c0)|(vt0.c0)))|((((vt0.c0))>=((NULL))))), CAST(0X4f305b3 AS REAL), -1.766289226E9 COLLATE NOCASE FROM vt0 WHERE (((json_extract(NULL, NULL, NULL, '0.16741868583251218')) NOTNULL)) ORDER BY (~ (((vt0.c0)<<(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT 230293973 FROM vt0 WHERE (((((((x'')OR(0.09683532273204998)))OR(x'')))&((NOT (x'9bd1ac20'))))); -- 0ms;
SELECT DISTINCT LEAD(((vt0.c0 COLLATE BINARY) NOT BETWEEN (UNLIKELY(vt0.c0)) AND (UNLIKELY(vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((vt0.c0 IN ()))), ((NULL) IS TRUE) COLLATE RTRIM) OVER () FROM vt0; -- 0ms;
SELECT ALL CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS TEXT) FROM vt0 WHERE (((((((-1259942388)AND(0Xffffffff87c68b3e)))OR(NULL))) NOT NULL)) LIMIT 1127476133; -- 0ms;
SELECT ((UPPER(x'')) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, x'', vt0.c0)))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((json_array_length(x'', '823141199') IN (TRIM(x'7b99', 0xfffffffff05a879b), CAST('' AS REAL))));SELECT MIN((((vt0.c0))!=((vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)+(vt0.c0)) COLLATE BINARY FROM vt0; -- 2ms;
SELECT DISTINCT SUM(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), ((vt0.c0 COLLATE RTRIM)<=(COUNT(vt0.c0))), CASE ((vt0.c0)IS(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 ELSE vt0.c0 END FROM vt0 LIMIT -1240898058; -- 0ms;
SELECT GROUP_CONCAT(vt0.c0 COLLATE NOCASE) OVER () FROM vt0 WHERE ('-2068032298') LIMIT 564558094 OFFSET 426148663; -- 1ms;
SELECT (vt0.c0 IN ()) FROM vt0 WHERE ((- (((NULL)AND(NULL))))) ORDER BY (NOT (json_array_length(vt0.c0))) DESC  NULLS LAST; -- 0ms;
SELECT ((vt0.c0 IN ()) IN ()), (((0.7244994617212526 IN ())) NOT BETWEEN (vt0.c0) AND (0.20366675504432874)), CASE WHEN 0.10529294490493857 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) END FROM vt0 WHERE (((('-839895476'))>=((0.4326830333319722))) COLLATE BINARY); -- 0ms;
SELECT ALL 0.24818064083253122, RANK() OVER (), 0.4025072952778118 COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL 0.6851582119967315 COLLATE BINARY, COUNT(NULL), ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) IS FALSE) FROM vt0;SELECT ALL vt0.c0 FROM vt0 ORDER BY ((json(vt0.c0)) ISNULL)  NULLS LAST, (((((vt0.c0 IN ()))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))))OR((((vt0.c0))<>((vt0.c0)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0; -- 1ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((('1980135472' COLLATE NOCASE) NOT BETWEEN (CASE WHEN 0x7a0c19ac THEN '' WHEN NULL THEN '*u' WHEN NULL THEN x'' END) AND ((('-519435484')OR(0.08490728494653743))))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE ASC  NULLS LAST, ((CAST(vt0.c0 AS REAL))GLOB(NULL)) LIMIT 1161359883 OFFSET -910727400; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (((((vt0.c0))>((vt0.c0)))) ISNULL), CAST(((vt0.c0) ISNULL) AS NUMERIC) FROM vt0 WHERE ((NOT (0.8861271702578762))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 WHERE ((((('-998627771') NOT BETWEEN (x'') AND ('-1584829937'))) NOT BETWEEN (CASE '-1371892136'  WHEN '' THEN 's~/{+h+.\n' ELSE 0.09551460748141638 END) AND ((('0.24818064083253122') BETWEEN (NULL) AND (1025671838))))); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 COLLATE NOCASE THEN AVG(vt0.c0) ELSE vt0.c0 COLLATE NOCASE END FROM vt0; -- 1ms;
SELECT ALL CASE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))  WHEN vt0.c0 THEN 'WB2W樏h' WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN -7.15542007E8 WHEN ((vt0.c0)OR(vt0.c0)) THEN NULL ELSE ((NULL) NOT NULL) END FROM vt0; -- 0ms;
SELECT DISTINCT (((x'7828')) NOT BETWEEN ((x'bffd')) AND ((((vt0.c0)AND(vt0.c0))))), x'', vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((vt0.c0 COLLATE NOCASE))) FROM vt0; -- 0ms;
SELECT ALL x'', SUM(((vt0.c0)||(vt0.c0))) OVER (), NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)-(vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-2061161452' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(0.77183230345187)))AND(((vt0.c0) IS TRUE))))OR((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(((vt0.c0) NOT NULL)) FROM vt0 WHERE ((((('%lMqC')<>(714700768))) IS FALSE)); -- 0ms;
SELECT CASE ((vt0.c0) IS FALSE)  WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN (('1684855305')>>(vt0.c0)) WHEN 0.4219984721068881 COLLATE NOCASE THEN SUM(vt0.c0) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)AND(vt0.c0)) ELSE ((vt0.c0) NOT NULL) END FROM vt0 WHERE (x'') LIMIT 1691004809 OFFSET -634877591; -- 0ms;
SELECT TYPEOF(DISTINCT (vt0.c0 IN (vt0.c0, vt0.c0))) FROM vt0 WHERE (((((x'9b0a') BETWEEN (x'') AND (-7.15542007E8)))IS(((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NOT (vt0.c0))) OVER (), COUNT(*), ((((((((TYPEOF(vt0.c0))AND(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((0.3630699179835898) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE ((- ((('5sKk]') NOT BETWEEN (NULL) AND (NULL))))); -- 1ms;
SELECT ALL TRIM(((vt0.c0)<>(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE (0X6e680e01); -- 0ms;
SELECT ALL ((((UPPER(vt0.c0))AND(((vt0.c0)||(vt0.c0)))))OR((vt0.c0 IN ()))) FROM vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN ('') AND (0.18044107947984678)) THEN (x'' IN ()) ELSE CAST(NULL AS BLOB) END); -- 0ms;
SELECT ALL MAX(vt0.c0 COLLATE NOCASE) COLLATE RTRIM, (LIKELIHOOD(vt0.c0, 0.8850562039415452) IN ()), (+ (NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (CASE WHEN ABS(DISTINCT x'6b27') THEN ((x'') IS TRUE) ELSE LOWER(NULL) END); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) IS FALSE) FROM vt0 WHERE (((x'ab72')GLOB(((0x1ba17016)OR(x''))))) ORDER BY '~' COLLATE BINARY LIMIT 1916816255 OFFSET -1967862937; -- 1ms;
SELECT DISTINCT '᳞*f[' FROM vt0; -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (json_patch('ub (', vt0.c0)) AND (vt0.c0 COLLATE BINARY)) FROM vt0;SELECT DISTINCT (((0.4211719237552014 IN ()))>((- (vt0.c0)))), CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN ((0.15838415502456638)+(vt0.c0)) THEN NULL WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) END, TOTAL(vt0.c0) FROM vt0 WHERE ((((-1.766289226E9)<('')) IN ())); -- 0ms;
SELECT ALL ((vt0.c0) IS TRUE) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL ((UNLIKELY(vt0.c0))+((((vt0.c0)) BETWEEN (('1062804430')) AND ((vt0.c0))))) FROM vt0 GROUP BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) HAVING ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0)!=(vt0.c0)))))OR(MAX(vt0.c0))); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE RTRIM FROM vt0 WHERE (((((x'7e85') IS FALSE))||((('712050733')GLOB('0.09683532273204998'))))); -- 0ms;
SELECT ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) IN (vt0.c0 COLLATE RTRIM)), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (0.8915242784509023) AND (vt0.c0)))))AND(((vt0.c0) NOT NULL))), COUNT(*), vt0.c0, DENSE_RANK() OVER () FROM vt0 NOT INDEXED WHERE (NULL); -- 0ms;
SELECT CASE AVG(vt0.c0)  WHEN vt0.c0 THEN ((vt0.c0)&(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0; -- 0ms;
SELECT CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, 0.27807111480267854, (((((vt0.c0)>(vt0.c0))))==((((vt0.c0) BETWEEN (0.10842567670535685) AND (vt0.c0))))) FROM vt0 WHERE (((((x'')>=('WB2W樏h'))) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8408645680429182)) AS BLOB) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)) OVER () FROM vt0 WHERE (((((NULL)IS NOT(0.9387278617375547))) IS FALSE)); -- 0ms;
SELECT CAST(CAST(vt0.c0 AS TEXT) AS BLOB) FROM vt0 WHERE ((((('-1319527212')+(0Xffffffffaf3444a7))) BETWEEN (((x'') ISNULL)) AND (((('g8]R'))>=(('')))))) LIMIT -1591812648; -- 1ms;
SELECT DISTINCT COUNT(((((NULL)OR(vt0.c0)))AND(vt0.c0))) OVER () FROM vt0 GROUP BY ((((vt0.c0)GLOB(vt0.c0)))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) LIMIT -1617479214 OFFSET 1296914334; -- 0ms;
SELECT ALL vt0.c0, IFNULL(DISTINCT (vt0.c0 IN ()), ((vt0.c0)IS NOT(vt0.c0))), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0)) FROM vt0 WHERE (((((x'')>=(0.509669750278606))) ISNULL)) ORDER BY ((((vt0.c0) ISNULL))!=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST; -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM vt0 WHERE ((((x'd9e4') IS FALSE) IN (-5.04677108E8, (('QJ	Q端f卋K') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE ((((((NULL) NOT NULL)))==((1.891235625E9)))) GROUP BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0x684a9557 WHEN 0.8408645680429182 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (vt0.c0))))) HAVING ABS(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.3589031460314732)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB(vt0.c0)))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT NTILE(((((vt0.c0)IS(vt0.c0))) NOT BETWEEN ((((vt0.c0, vt0.c0, '-934624912')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, -2117156888)))) AND (x'6263'))) OVER ( ORDER BY SQLITE_VERSION() DESC  NULLS FIRST) FROM vt0 WHERE (CAST((+ (NULL)) AS TEXT)); -- 0ms;
SELECT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (-1.45012317E8)) AS NUMERIC), (((~ (vt0.c0))) IS TRUE), (((+ (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT ALL (((NOT (vt0.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (QUOTE(293174516) COLLATE BINARY); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM)>>(NULL)), TOTAL(vt0.c0), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) FROM vt0 ORDER BY NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST LIMIT -20000681 OFFSET -2068032298; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 WHERE (CAST((((0.842796772025655, '960291330', 0.9840423375615847)) NOT BETWEEN ((x'', NULL, 533437112)) AND ((0Xffffffffa2de4a12, NULL, 0.6218528851872581))) AS BLOB)); -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN vt0.c0 THEN vt0.c0 END), (((vt0.c0)) BETWEEN (('')) AND ((UNLIKELY(DISTINCT vt0.c0)))), ((vt0.c0)LIKE(vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT AVG(((vt0.c0)||(vt0.c0))) OVER ( ROWS ((NULL) ISNULL) PRECEDING EXCLUDE CURRENT ROW) FROM vt0 WHERE (((NULL) IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT FIRST_VALUE(((((vt0.c0)LIKE(vt0.c0)))IS(vt0.c0))) OVER (), LEAD(CASE WHEN NULL THEN (((vt0.c0))>=((vt0.c0))) END, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE), ((load_extension(vt0.c0, vt0.c0))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER (), ((vt0.c0)>>((('968189993')<(vt0.c0)))) FROM vt0 WHERE (((((((x'709b6f7d')AND(x'')))AND('11191005')))/(TIME(3.09026002E8, x'', x'', 1.282413537E9, x'')))); -- 0ms;
SELECT DISTINCT (- (vt0.c0)) FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (NULL, ((vt0.c0)>>(vt0.c0)))); -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) COLLATE NOCASE, AVG(CASE WHEN vt0.c0 THEN vt0.c0 END) OVER (), (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((NOT ((0.09551460748141638 IN ())))); -- 1ms;
SELECT DISTINCT vt0.c0, ((vt0.c0)<=(vt0.c0)) COLLATE BINARY, (((vt0.c0 IN ()))|(MAX(vt0.c0))), 0.6514998942980518, ((((((vt0.c0)AND(0.8189115576462612)))AND(vt0.c0)))/(IFNULL(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT ((vt0.c0)IS(vt0.c0)) COLLATE NOCASE, CASE ((0.32622342214925504)&(vt0.c0))  WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) ELSE ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END, (NULL IN (((vt0.c0)IS(vt0.c0)))), COUNT((((x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) FILTER(WHERE ((((LTRIM(vt0.c0, vt0.c0))OR('' COLLATE NOCASE)))OR(((vt0.c0) NOTNULL)))) OVER (), ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(((((vt0.c0)OR(NULL)))OR(vt0.c0)))))OR(((vt0.c0) NOTNULL))), ((LIKELY(vt0.c0)) NOTNULL), (LAST_INSERT_ROWID() IN (CASE WHEN '?(' THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 LIMIT 1518470243; -- 0ms;
SELECT DISTINCT ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ((+ (vt0.c0)) IN ()), vt0.c0, (~ (CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT DISTINCT x'', CASE NULL  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('<VE', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (+ (vt0.c0)) ELSE ((vt0.c0)IS(vt0.c0)) END, CAST(vt0.c0 AS TEXT) FROM vt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ORDER BY ((LIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST), COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) COLLATE NOCASE, vt0.c0 FROM vt0 GROUP BY ((((vt0.c0)|(vt0.c0)))/(load_extension(NULL)));SELECT FIRST_VALUE((~ (CAST(vt0.c0 AS NUMERIC)))) OVER (), ROUND(((vt0.c0)<(vt0.c0)), ((vt0.c0)/('-45537139'))), SUM(((vt0.c0) NOT NULL)) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(AVG(NULL))) FROM vt0; -- 0ms;
SELECT RTRIM(((vt0.c0)>>(vt0.c0))) FROM vt0 WHERE ((((((('2000171828')*(NULL)))AND(((x'ca71') ISNULL))))AND((((('w졯')OR(1614191186)))AND(x''))))); -- 0ms;
SELECT '_U68' FROM vt0 WHERE ((((('-1338661424') NOT BETWEEN (0xffffffffcdf0364c) AND (NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)/((((vt0.c0, 0.43816865037093256, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (LIKELY((('') BETWEEN (NULL) AND ('Gm')))); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0))) END FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))==((CHAR(vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT AVG(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (UNLIKELY(vt0.c0))) FROM vt0 WHERE (CASE WHEN ('1383503925' IN (NULL)) THEN ((0.3908557526904908) NOT BETWEEN (NULL) AND (' ')) END); -- 0ms;
SELECT ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)AND(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((~ (((1777144158) BETWEEN (0.5570963376714105) AND ('w과'))))); -- 1ms;
SELECT ALL (- (vt0.c0)) COLLATE RTRIM, 'u#IJ[(V(' COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC) FROM vt0 WHERE (((CASE 1.980135472E9  WHEN '1D' THEN x'' ELSE -2066854881 END) BETWEEN (((NULL)<>(1.423071459E9))) AND (((0.7179062474434995) NOT BETWEEN (0.8381113437652528) AND ('747602380'))))) LIMIT 467347374; -- 0ms;
SELECT ALL ((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((~ (vt0.c0)))), NULLIF(((vt0.c0)%(vt0.c0)), vt0.c0 COLLATE BINARY), (~ (vt0.c0)), (HEX(vt0.c0) IN ()), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(LOWER(DISTINCT vt0.c0)) OVER () FROM vt0 WHERE ((((NULL, '1134621791', 0.3478140416025104, '-790137882', '-157109478')) BETWEEN (((((x'', 0.2687959740836685, 0.9872533498518612))>=(('c>萴Ii', x'', 0xffffffffeaf40d71))), (('') BETWEEN (-2112414421) AND (0.750595616800844)), CAST(NULL AS NUMERIC), (~ (x'')), 0.6140834318166482)) AND (('1395104660' COLLATE BINARY, CASE NULL  WHEN '-1118541592' THEN NULL WHEN NULL THEN 0.20434841500522538 WHEN 'h{l0' THEN 'Q' ELSE 7.10006903E8 END, CAST(0.04198855190198225 AS INTEGER), ((0.6323323311479758) IS TRUE), (('-504677108') NOTNULL))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)/(vt0.c0)) IN ()), CAST('-1119988945' AS INTEGER), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=(vt0.c0 COLLATE NOCASE)) FROM vt0 LIMIT 1675685234 OFFSET -1749293880; -- 0ms;
SELECT (- (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((CASE WHEN NULL THEN '-1465640376' WHEN NULL THEN '' WHEN '' THEN 884946054 ELSE NULL END)/(((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT 0.6049903050726325 FROM vt0 WHERE (CASE WHEN '-1419968772' THEN (NULL IN ()) ELSE (((x'', -297647394, NULL))>(('', x'c8c1', '1139497924'))) END); -- 0ms;
SELECT DISTINCT SUM(vt0.c0) FROM vt0 WHERE (CAST(((('', 0.026115779260569183, NULL)) BETWEEN ((0.6272372720602118, NULL, x'')) AND ((x'bbeb', NULL, 0.3187185793725653))) AS INTEGER)) ORDER BY (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' END, (vt0.c0 IN ())))=(((((vt0.c0))<(('-9223372036854775808'))), ((vt0.c0)|(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))); -- 0ms;
SELECT ((vt0.c0)==(vt0.c0)) COLLATE NOCASE FROM vt0 ORDER BY ((LTRIM(vt0.c0))AND(((vt0.c0) BETWEEN ('!G') AND (vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((vt0.c0)*(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((((-258733065 IN (-22503187)))AND(((((x'')OR('g^')))AND(x'')))))AND(((('0.9932753782171824', NULL, 0.631959332848682)) BETWEEN ((NULL, 0.713966926516734, 0.29879083317901434)) AND ((x'', 0.15261927780812856, x'0643')))))); -- 0ms;
SELECT CAST('' AS REAL) FROM vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((~ ('-1434977523'))) AND ('&⟎q}wGL')) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)/(x'd2fd'))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, ((((((((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('''￑gxs-	4')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)%(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(vt0.c0) FROM vt0 WHERE ((((NULL IN ()))<(31184315))) GROUP BY ((CAST(vt0.c0 AS INTEGER))>>((NOT (vt0.c0)))) HAVING (((((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0)<(vt0.c0)), LOWER(vt0.c0)))>=(((~ (vt0.c0)), ((vt0.c0)>=(vt0.c0)), (((vt0.c0))<>((vt0.c0)))))); -- 0ms;
SELECT DISTINCT NULL, NULLIF(DISTINCT (~ (vt0.c0)), (NOT (vt0.c0))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), vt0.c0, (NOT (((((vt0.c0)AND('-1273897913')))OR(vt0.c0)))), '-1334084995', (((vt0.c0)/(vt0.c0)) IN (((-1564317235)<<(vt0.c0)), ((vt0.c0) NOT NULL))) FROM vt0; -- 0ms;
SELECT ALL (NOT (MIN(vt0.c0))) FROM vt0 WHERE (((x'5a1f' COLLATE RTRIM)GLOB(NULL COLLATE RTRIM))) ORDER BY (((((- (vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)>=(vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT vt0.c0, TIME(vt0.c0, vt0.c0, vt0.c0) COLLATE BINARY, TYPEOF(vt0.c0) FROM vt0 WHERE (((CAST(0.15764001424817853 AS REAL)) NOT BETWEEN ((('')*(NULL))) AND ((('dbR\r䥆B') ISNULL)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((1462911444 IN ()))OR(((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT (NOT ((+ (vt0.c0)))) FROM vt0 WHERE ((((((((((((('')OR('')))AND('QVarIs')))OR((((NULL, 0.6758141279138006, -1058155110, x'0353', 0.77183230345187)) BETWEEN ((x'68f5', '', x'', '{G�}.K)j', 0.7279756531228261)) AND ((0xffffffff92a9c6fa, x'882d', NULL, '&I궼rIxW', 0xffffffffef47d525))))))AND((((0.2759427791666854))<=((0.37629239041174545))))))AND((NOT (NULL)))))OR((('') IS TRUE)))); -- 0ms;
SELECT DISTINCT LTRIM(LOWER(vt0.c0)), NULL, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC), MIN((- (vt0.c0))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)) FROM vt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT (- (vt0.c0)), ((vt0.c0) ISNULL), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LTRIM(vt0.c0, vt0.c0))))OR((((vt0.c0))<>((vt0.c0))))) FROM vt0 WHERE ((((((((((+ (NULL)))OR(((0.5464810306174789) ISNULL))))OR(((0.03608449180680717)!=(x'8e4e')))))OR(((((0xffffffffa2de4a12)AND(-594409726)))AND('0.8270540541521445')))))AND((('f.d|⢍*H6}')+(NULL))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)/(x''))))=((MAX(vt0.c0)))), (((vt0.c0)<(vt0.c0)) IN ()), GROUP_CONCAT(((vt0.c0)||(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)OR(vt0.c0))) NOT NULL) FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM DESC; -- 0ms;
SELECT (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (((((0Xffffffff97bbe4c8) BETWEEN ('-835431605') AND (0.41314597827537036))) IS TRUE)); -- 1ms;
SELECT ALL (((vt0.c0) IS FALSE) IN (COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (+ (vt0.c0)))) AND (('-246368193', (vt0.c0 IN (vt0.c0, '-852033028')), CAST(vt0.c0 AS INTEGER)))), ROW_NUMBER() OVER (), (((((0.4219984721068881)!=(vt0.c0))))<=((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) FROM vt0 WHERE (((((((((x'')OR(x'c2f73f41')))AND(NULL)))AND(CAST(NULL AS INTEGER))))AND(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'') GROUP BY (((-1441517149 IN ()))<(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL), (vt0.c0 IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) HAVING CASE WHEN ((vt0.c0)+(vt0.c0)) THEN vt0.c0 END; -- 0ms;
SELECT ALL CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) END FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((x'', vt0.c0, ''))<=((vt0.c0, vt0.c0, vt0.c0))))) AND ((TIME(vt0.c0, vt0.c0, vt0.c0)))) DESC LIMIT 1567384003 OFFSET -1383068634; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY (((LOWER(vt0.c0)))<=((((vt0.c0) IS TRUE)))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)>=(vt0.c0)) AS BLOB) FROM vt0 WHERE ((((NULL IN ()))IS NOT(x''))); -- 0ms;
SELECT DISTINCT ((((0xffffffffdf95a0f7)||('-1310542939')))<(vt0.c0)) FROM vt0; -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 LIMIT -1032116058; -- 0ms;
SELECT DISTINCT vt0.c0, COUNT(*), ((CAST(vt0.c0 AS BLOB)) NOT NULL) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT (+ (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((CAST('.A' AS TEXT)) NOTNULL)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (CASE '-1189550131'  WHEN vt0.c0 THEN vt0.c0 END) AND (((('343387015'))>=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(((vt0.c0) NOTNULL))) FROM vt0 GROUP BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (CASE 0.8984947836247814  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
SELECT DISTINCT TRIM((vt0.c0 IN ()), ((vt0.c0)>(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((MIN(vt0.c0)))<(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) FROM vt0; -- 0ms;
SELECT ALL 0.33953319336762455 FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)GLOB(0.15588298424760805)))))OR('884868830')))AND(NULL)))AND((vt0.c0 IN (vt0.c0)))), '0.77183230345187', ((vt0.c0)OR(x'')) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT json(0.8414226732521123) FROM vt0 WHERE (((CAST(NULL AS BLOB))LIKE(NULLIF(DISTINCT '-2100602684', 0Xffffffffc8fd69ea)))); -- 0ms;
SELECT (~ (COUNT(*))) FROM vt0 WHERE ((((x'', NULL, NULL)) BETWEEN ((0x29095d6f, 0x16d0b235, 'fw3iu%{y')) AND ((NULL, '-1882726325', 0x57f9cf3b))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TYPEOF(((vt0.c0) NOT NULL)), GROUP_CONCAT(CHANGES()), DENSE_RANK() OVER (), (((- (vt0.c0))) NOTNULL), ((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)||(CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT CASE WHEN (((vt0.c0))==((vt0.c0))) THEN (+ (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT GROUP_CONCAT((~ (vt0.c0))) OVER () FROM vt0 WHERE (ABS(DISTINCT ((0.6459720392187546)-(-506138743)))); -- 0ms;
SELECT DISTINCT NTH_VALUE((((NULL)|(vt0.c0)) IN ()), ((vt0.c0)GLOB(UPPER(vt0.c0)))) OVER (), MAX(CAST(NULL AS NUMERIC)), COUNT(ABS(DISTINCT vt0.c0) COLLATE RTRIM) OVER (), COUNT(*), COUNT((vt0.c0 IN (vt0.c0))) FROM vt0 WHERE ((CASE WHEN NULL THEN '0.796315199425768' WHEN '' THEN 0.8861271702578762 WHEN 0.7628933236285923 THEN x'' END IN (((((-1811312859)AND(0.21964497621188495)))AND('#')))));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND (((NOT (vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT (((0.21489006729851312 IN ()))|((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (((((x'') NOT NULL)) IS TRUE)); -- 0ms;
SELECT ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))OR(((NULL) IS FALSE))))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0X2212cf02)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0)+(vt0.c0)))) FROM vt0 WHERE (((((x'49fe')%(NULL)))AND(((('-715542007')) BETWEEN (('-1044668643')) AND ((x'')))))); -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE BINARY  WHEN LOWER(DISTINCT vt0.c0) THEN MAX(vt0.c0) ELSE (vt0.c0 IN ()) END FROM vt0 GROUP BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0))<((vt0.c0))), vt0.c0 COLLATE BINARY, CAST(x'' AS NUMERIC))) AND ((0.1709061588225217, 0Xffffffffc0b0d284, ((vt0.c0)=(vt0.c0))))), (((NOT (vt0.c0)))AND((vt0.c0 IN ()))), ((vt0.c0 COLLATE RTRIM)>>((('-1812843868')/(vt0.c0)))) ORDER BY x'';SELECT ALL vt0.c0 FROM vt0 WHERE (CASE (('1e500') NOTNULL)  WHEN CAST(0.2094233537382073 AS INTEGER) THEN '1888702971' END); -- 0ms;
SELECT DISTINCT (((TOTAL(vt0.c0), vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=(('Roy', (~ (0.7886806350771317)), CAST('sk\niDn' AS BLOB)))) FROM vt0 WHERE ((- ((- (-1.515057337E9))))); -- 0ms;
SELECT ALL COALESCE(DISTINCT NULL, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))), ((((vt0.c0) NOT NULL)) BETWEEN (IFNULL(DISTINCT vt0.c0, vt0.c0)) AND ('\&-Bt')), SUM(((vt0.c0) NOT NULL)) FROM vt0 WHERE (CASE ((0.4385911575000889)>=(0x4aa0c486))  WHEN SQLITE_COMPILEOPTION_USED('-452222288') THEN ((((0.5324428285755171)OR(NULL)))OR(0.6384250763207994)) WHEN ((x'')%(NULL)) THEN QUOTE('2028378376') WHEN ((NULL)|(0.2724778316436429)) THEN LIKELY(1700418538) ELSE (NOT ('WsJ!᰿b5X')) END); -- 1ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))>((- (vt0.c0)))) FROM vt0 GROUP BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING vt0.c0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0))==((vt0.c0))) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT CAST(vt0.c0 AS NUMERIC), 0.732958626769186), (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (('')>(vt0.c0)), ((vt0.c0) IS TRUE)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN ()), -334105308, json_object(vt0.c0, vt0.c0), vt0.c0))), NULL FROM vt0 WHERE (CASE ((NULL)<=(NULL))  WHEN -4.5537139E7 THEN ((-85958454)<=(0.8231035908932611)) WHEN ('聬B+Q-' IN ()) THEN ((0.858069041684127) IS FALSE) WHEN ((0x4ddee530)GLOB(0x6aa2345f)) THEN ((0.10106419759831153) NOTNULL) ELSE ((NULL)>>('')) END); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS NUMERIC), ((x'') NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)<(vt0.c0)))), ((((((((SUM(vt0.c0))AND(((vt0.c0)-(vt0.c0)))))OR((+ (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, '-1522742000'))))) FROM vt0 WHERE (((((((0x4bfb00d2)OR(x'c6b2')))OR(x''))) NOT NULL)) GROUP BY (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0), vt0.c0, ((((x'')AND(0.8930613038998315)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((CAST('0.10842567670535685' AS BLOB)) NOTNULL)); -- 0ms;
SELECT DISTINCT SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) OVER ( PARTITION BY (vt0.c0 IN ()) COLLATE NOCASE, ((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((- (vt0.c0))))) FROM vt0 WHERE (((((((((((((CAST('' AS BLOB))AND(((((0.29704378814063537)AND('')))AND('136086580')))))OR(NULL COLLATE BINARY)))AND(SQLITE_COMPILEOPTION_USED('-1649382992'))))OR(((x'')*('uM')))))OR((('<!brcNu')IS NOT(NULL)))))AND((- (NULL))))); -- 0ms;
SELECT ((vt0.c0)>>(vt0.c0)) COLLATE NOCASE, CASE (~ ('MON*k'))  WHEN ((x'')>>(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<=(CAST(vt0.c0 AS BLOB))), (((CAST(vt0.c0 AS INTEGER)))=((x''))), 'NP\r[(T' FROM vt0 WHERE ((((('*Z')/('-')))<(CAST(0x30decef7 AS BLOB)))) LIMIT 585110129 OFFSET -1276318177 INTERSECT SELECT (NULL IN ((((vt0.c0, vt0.c0, '1527567070', vt0.c0, vt0.c0))==((0.7875573725520726, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))), (+ (((vt0.c0) IS TRUE))), ((((vt0.c0) NOTNULL))&(3.09026002E8)), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NOT (((x'')LIKE(vt0.c0)))) FROM vt0 WHERE (((('256677837')<<(x'')) IN ()));SELECT ALL (((0x69ef75a9, vt0.c0, '\&-Bt')) NOT BETWEEN (('Ss', (NOT (vt0.c0)), vt0.c0)) AND ((TOTAL(vt0.c0), ((vt0.c0)-(vt0.c0)), ((vt0.c0)<>(vt0.c0))))) FROM vt0; -- 1ms;
SELECT ALL CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (NOT (vt0.c0)) WHEN json_quote(x'') THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(0Xffffffffa5b20f47)) WHEN x'' THEN ((((vt0.c0)OR(vt0.c0)))AND(x'')) END FROM vt0 WHERE ((((((((((('0.8408645680429182')/(x'')))AND((- (NULL)))))OR((('-978301333')LIKE('-*qoc~')))))AND(CASE WHEN x'' THEN 0X612e9a71 END)))AND(((-744402725)>=(x''))))) LIMIT 39433162 OFFSET 1608620513; -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE RTRIM, (NOT (COUNT(*))), '-1714162335' FROM vt0 WHERE (((((0.2376449504195881) ISNULL))LIKE(NULL))); -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOTNULL)))=(((vt0.c0 IN ())))) FROM vt0 GROUP BY vt0.c0, (((((vt0.c0))>((vt0.c0))))&(vt0.c0 COLLATE BINARY)), ((NULL) BETWEEN ((+ (vt0.c0))) AND (load_extension(vt0.c0, vt0.c0))) HAVING '' COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (((((((((vt0.c0)AND(NULL)))OR(vt0.c0)))AND(vt0.c0)))AND(NULL)) IN ()), (((('plSB|M,R')LIKE(vt0.c0)))||(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((((vt0.c0) BETWEEN (0.8732256643158365) AND (vt0.c0))))=((TOTAL(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((ROUND('+', '(翸*')) NOT BETWEEN (CAST('-d' AS TEXT)) AND (('1u>1B3Ch' IN ())))) LIMIT 1824023526; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)<(vt0.c0))) FROM vt0 WHERE (TRIM(CAST('-58410187' AS NUMERIC), 'J疩dJ')); -- 0ms;
SELECT DISTINCT (COUNT(vt0.c0) IN ()) FROM vt0 WHERE (((('487295347') IS TRUE) IN ('-2044343878'))); -- 0ms;
SELECT ((CAST(vt0.c0 AS NUMERIC))<(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (CAST(CAST(0x5db61d2b AS NUMERIC) AS BLOB)); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) ISNULL) FROM vt0; -- 0ms;
SELECT ALL (- (CAST(vt0.c0 AS INTEGER))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((x'')OR('CmB/7')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))<(LOWER(DISTINCT vt0.c0))), LIKELIHOOD(x'', 0.16980090867331055), (((vt0.c0)) BETWEEN (('1411460895' COLLATE NOCASE)) AND ((TOTAL(vt0.c0)))) FROM vt0 NOT INDEXED WHERE (CAST((('2143073098')IS(0Xffffffffff2a95a4)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((vt0.c0)>=(vt0.c0)) IN ()), CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN ((vt0.c0) NOTNULL) END, DENSE_RANK() OVER ( ORDER BY NULLIF(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)>>(vt0.c0)))  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE)  NULLS FIRST) FROM vt0 WHERE (CAST((4.87295347E8 IN (0.8882345578253508)) AS BLOB)); -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 WHERE (CASE WHEN CAST(NULL AS REAL) THEN LIKELY(DISTINCT 0.05767302623817516) ELSE ((-1.240898058E9)>(0.33736266036180884)) END); -- 0ms;
SELECT ALL NTH_VALUE((((NOT (vt0.c0))) NOT BETWEEN (((('1901562808', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.30417423638213126, vt0.c0)))) AND ((- (vt0.c0)))), (- (vt0.c0 COLLATE BINARY))) OVER ( ORDER BY ((((vt0.c0)<>(vt0.c0))) ISNULL)  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (json_remove(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) DESC GROUPS ABS(DISTINCT (((x''))!=((vt0.c0)))) PRECEDING EXCLUDE GROUP) FROM vt0;SELECT CASE json_insert(vt0.c0, vt0.c0, vt0.c0)  WHEN (((vt0.c0)) BETWEEN ((3657662)) AND ((vt0.c0))) THEN (((vt0.c0))<((vt0.c0))) END FROM vt0 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)&(vt0.c0)))OR(ROUND(vt0.c0, vt0.c0))))OR(CASE x'd048'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1071271248' THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((((x'cfd1') IS TRUE))IS(((((((((0Xffffffffd889999e)AND(NULL)))OR(x'55fa4dd4')))OR(0X22e01271)))AND('62275263'))))); -- 0ms;
SELECT ALL json_extract(vt0.c0 COLLATE RTRIM, ((vt0.c0)!=(vt0.c0)), vt0.c0, (((vt0.c0))==(('')))), -1.333007243E9, ((x'')*(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))<<(((vt0.c0)*(vt0.c0)))), ((((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)))AND(UNLIKELY(vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)), '-1e500' FROM vt0; -- 0ms;
SELECT STRFTIME((- (vt0.c0)), ((vt0.c0)>>(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)!=(vt0.c0)), COUNT(*)), NTH_VALUE(vt0.c0, CASE WHEN ((vt0.c0) NOT BETWEEN ('-784965973') AND (vt0.c0)) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN ABS(vt0.c0) THEN (((('QJ	Q端f卋K')AND(vt0.c0)))AND(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-240689838' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 END) OVER ( ORDER BY ((((vt0.c0)%(vt0.c0)))<<('O槾!bcl횦8<'))), ((((vt0.c0)>>(vt0.c0))) BETWEEN (((((((((NULL)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (((('0.7426041117240678')) NOT BETWEEN ((vt0.c0)) AND ((''))))) FROM vt0;SELECT DISTINCT (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(MAX(vt0.c0))))OR((0.07520907914259167 IN ()))))OR((- (vt0.c0)))))OR(((vt0.c0) IS FALSE))), COUNT(*) OVER (), (((vt0.c0, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN ())))<=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)*(vt0.c0)), ABS(3.43387015E8)))) FROM vt0 WHERE (((- (NULL)) IN (((NULL) IS FALSE)))) LIMIT -211647264 OFFSET -2061161452; -- 0ms;
SELECT (((((vt0.c0)AND(vt0.c0)))OR(-498523641)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL))+((((0.8685730295315865)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT NULL, (((NOT (vt0.c0)))LIKE((((vt0.c0))>((vt0.c0))))), ABS(json_remove(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) FROM vt0 WHERE (((0.9611830773773392)&(-790137882)) COLLATE BINARY); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<=((0.2657637791595382))))) AND ((x''))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)<>(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8068054063248719 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), CAST(vt0.c0 AS TEXT)))<=((CAST(vt0.c0 AS NUMERIC), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'7795' END))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT ALL LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.01589671943862181) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0))<>((vt0.c0)))) IS TRUE), (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))>=((SUM(vt0.c0)))), (((- (NULL)))=(CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((('-419834202') NOTNULL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((TIME(vt0.c0, vt0.c0, NULL)) BETWEEN (CASE vt0.c0  WHEN x'' THEN vt0.c0 END) AND (0.7962046427353122)) FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((((((((vt0.c0)OR('0.579540112003797')))AND(vt0.c0)))OR(vt0.c0)))OR(0.1792903484803836))) AND (((vt0.c0)==(vt0.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT COUNT(CASE 0.24204337564589462  WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 WHERE (CASE 'm?	&' COLLATE NOCASE  WHEN (('-365873692')GLOB('-1383505325')) THEN ABS(DISTINCT 'UO낊oaV') WHEN (x'' IN ()) THEN (((x'')) NOT BETWEEN ((0x6e6c365a)) AND ((0.07800208001986653))) WHEN (- (1.377639646E9)) THEN (NOT ('')) ELSE x'1881' END); -- 0ms;
SELECT 0.8703897195326911 FROM vt0; -- 0ms;
SELECT (vt0.c0 IN ()) COLLATE RTRIM, ((x'' COLLATE BINARY)||(SUM(vt0.c0))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((vt0.c0) IS FALSE))) FROM vt0 WHERE (((CASE x''  WHEN NULL THEN '639564782' END)GLOB((('L6j22硎,}~')<>('1016329048'))))); -- 0ms;
SELECT DISTINCT CAST(((x'') IS FALSE) AS BLOB) FROM vt0 WHERE (((('aJD*]Uz.')) NOT BETWEEN ((((NULL) BETWEEN (0.7465357894326513) AND (x'')))) AND (((((NULL))>=((0.125723414576298))))))); -- 0ms;
SELECT ((vt0.c0) IS FALSE) COLLATE NOCASE FROM vt0 WHERE (CAST(CASE WHEN '9*q<#' THEN NULL END AS TEXT)); -- 1ms;
SELECT ALL COUNT(*) FROM vt0 GROUP BY ((vt0.c0)<<((((vt0.c0))<=((vt0.c0))))), CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN CAST(vt0.c0 AS REAL) END, CAST((((vt0.c0))<((vt0.c0))) AS REAL) HAVING ((CASE WHEN vt0.c0 THEN 0Xffffffffa0feba8f END) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT CAST('' AS NUMERIC) FROM vt0 WHERE ((((NULL IN ())) NOTNULL)) UNION SELECT CASE ((vt0.c0)<=(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE json_valid(vt0.c0) END FROM vt0 LIMIT 1777300905 OFFSET -617153505; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0 WHERE (((('-294720116')IS NOT('')) IN ())); -- 0ms;
SELECT NULL FROM vt0 WHERE (CASE WHEN ((0.7501633111561993) ISNULL) THEN (('L1')IS NOT(0x761df93f)) END); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((NOT ((~ (NULL))))); -- 0ms;
SELECT (((((vt0.c0, vt0.c0, 0x66242337)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS TRUE) FROM vt0 WHERE (CAST(((NULL) BETWEEN (NULL) AND (0.5838816254136426)) AS INTEGER)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0 LIMIT -552358436 OFFSET 810030229; -- 1ms;
SELECT ALL LIKE(vt0.c0, NULL) COLLATE NOCASE FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN ()) ASC  NULLS LAST, CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) IS TRUE) END ASC; -- 0ms;
SELECT DISTINCT COUNT(CAST(0xfffffffff0c4af99 AS TEXT)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 NOT INDEXED WHERE ((((((x'', 0.3009686519146405, 0.4474966399943645))<((x'', '8낳X', 0.6616464810149373)))) NOT NULL)) ORDER BY ((((vt0.c0)<=(vt0.c0))) BETWEEN (((-1438651314)>(vt0.c0))) AND (CASE WHEN vt0.c0 THEN NULL ELSE '茤S?Z' END)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) IS FALSE) FROM vt0; -- 4ms;
SELECT CASE CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END  WHEN 0.4248688211025532 THEN json_object(vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS BLOB) WHEN INSTR(vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), CAST((vt0.c0 IN ()) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, SUM(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))), COUNT(*) FROM vt0 WHERE (CAST('0.77183230345187' AS REAL) COLLATE RTRIM); -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)||(vt0.c0)) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0)||(vt0.c0)) AS INTEGER) FROM vt0 LIMIT 1613915377; -- 0ms;
SELECT DISTINCT 0.6555004716826279 FROM vt0 WHERE ((('ht') IS TRUE)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c0))) IS FALSE), (+ (x'')), CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN x'' THEN vt0.c0 WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CASE vt0.c0  WHEN -702041163 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-329993258' END WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((NULL) NOTNULL) ELSE ((vt0.c0)IS NOT(vt0.c0)) END FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)||(vt0.c0)) COLLATE RTRIM, ABS((1377639646 IN ())), '402806249' FROM vt0; -- 0ms;
SELECT MIN(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) FROM vt0; -- 0ms;
SELECT CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0; -- 0ms;
SELECT LIKELY(DISTINCT ((vt0.c0)=(vt0.c0))) FROM vt0 WHERE ((((('')==('254082513')))GLOB(((0.5601691818335691)>>(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(vt0.c0))) NOTNULL) FROM vt0 WHERE (((json_patch('-388662827', 0.869541424954602))>(IFNULL('1285561478', NULL)))) GROUP BY '0.44099979522660393'; -- 1ms;
SELECT ALL (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ((((COUNT('|Vn'))OR(CAST(vt0.c0 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE ((((x'5254')=(NULL)) IN ())); -- 0ms;
SELECT ((SUM(vt0.c0))<(((vt0.c0)LIKE(vt0.c0)))) FROM vt0 ORDER BY (((vt0.c0))<((((('WYEARSJ'))>=((vt0.c0)))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT -8.17681284E8 FROM vt0 ORDER BY (((0.4219984721068881 IN (vt0.c0, vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1205739721' THEN vt0.c0 END) AND (((vt0.c0)+(vt0.c0)))) DESC, '-1584829937' DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt0.c0)<(vt0.c0)))+(((vt0.c0)IS NOT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), TOTAL((((0.03999048547844619)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER (), (((('%gG)?')LIKE(vt0.c0)))+((((vt0.c0))<=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT NTILE((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL)) OVER () FROM vt0 WHERE ((((((0Xe3f6769)<(-744746072))))>((NULL COLLATE NOCASE)))); -- 0ms;
SELECT ALL AVG(((vt0.c0)GLOB(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( RANGE  CURRENT ROW), (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (- (((((vt0.c0)AND(vt0.c0)))AND('(z')))) FROM vt0 WHERE (((NULL)+(((NULL) BETWEEN ('w') AND (x'9423'))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL))&((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((((NULL)) BETWEEN ((((x'')<<('R\y')))) AND ((CASE WHEN x'' THEN -835431605 ELSE 0X2ab7b3a3 END)))) GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((x'', x'c955', NULL)) NOT BETWEEN (('p~뿌', x'', NULL)) AND (('將B', '-504677108', NULL))))LIKE(((((((((0.6213327458790456)AND(NULL)))AND(x'e8df')))AND('483031331')))OR(603751936))))); -- 0ms;
SELECT ALL ((vt0.c0) NOT NULL) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE) FROM vt0 GROUP BY (- (vt0.c0)), CAST(SQLITE_COMPILEOPTION_GET(x'ac4b') AS REAL), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND ((~ (vt0.c0)))) HAVING TRIM(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END); -- 0ms;
SELECT CAST(vt0.c0 AS TEXT), 0.9363641026587409 COLLATE RTRIM, CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN COUNT(vt0.c0) ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END FROM vt0 GROUP BY (vt0.c0 COLLATE NOCASE IN ()); -- 0ms;
SELECT DISTINCT 0.8874660398482438 FROM vt0 WHERE ((NOT (x'')) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT ALL (('-1812843868')/(TRIM(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (('-2051153566')<<(TYPEOF(DISTINCT vt0.c0))) FROM vt0 WHERE ((~ ((('&}\r᪷M0Z') IS FALSE)))); -- 0ms;
SELECT 0.4206275689498815 FROM vt0 GROUP BY ((vt0.c0) ISNULL) HAVING vt0.c0; -- 0ms;
SELECT ALL CAST('.r%P' AS NUMERIC), ((((((vt0.c0) IS TRUE))OR(((vt0.c0)<<(x'18e7')))))OR(((vt0.c0)<=(vt0.c0)))), (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT ((vt0.c0) IS FALSE) FROM vt0 WHERE (IFNULL(DISTINCT ((NULL) IS TRUE), CASE 0.29669568886209674  WHEN '972097355' THEN NULL ELSE '1834709824' END)) ORDER BY (((+ (vt0.c0))) NOTNULL) DESC; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN (0.6460898237961534, vt0.c0)) AS REAL), ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0)))), LAG(vt0.c0, ((vt0.c0) NOT NULL) COLLATE RTRIM, ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>((((NULL)>(vt0.c0)))))) OVER () FROM vt0; -- 1ms;
SELECT ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((((x'4dcd')) NOT BETWEEN ((LTRIM(x'', 0.292249373496837))) AND ((NULL COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOTNULL) AS INTEGER), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))||(((vt0.c0) NOTNULL))), CAST((x'' IN (vt0.c0)) AS INTEGER), TRIM(DISTINCT ((vt0.c0)-(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END), ((vt0.c0 COLLATE NOCASE)-(UNLIKELY(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((NULLIF(vt0.c0, '911770957')) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0))<=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT CAST(x'' AS INTEGER) FROM vt0 ORDER BY (((((vt0.c0))>=((x'')))) IS TRUE) DESC  NULLS FIRST, (((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(x'')))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL), (((~ (vt0.c0)))<<((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))))), (- (CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((CASE NULL  WHEN NULL THEN NULL END)/((1.713644343E9 IN ())))); -- 0ms;
SELECT DISTINCT 0.9975311796239212, ((LOWER(vt0.c0))+(x'')), GROUP_CONCAT(((((vt0.c0)OR(vt0.c0)))AND(''))) FROM vt0 WHERE (CAST(json_object(x'', 0.9419114366768342) AS TEXT));SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (-2.009769633E9) AND (0xdba01d5)) THEN (('-1034978436') ISNULL) ELSE ((((1.522231786E9)AND(NULL)))AND(NULL)) END); -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM)>=(TOTAL(vt0.c0))) FROM vt0 WHERE (((((0xffffffff81cebfe8) ISNULL))&(CAST('-1515057337' AS BLOB)))); -- 0ms;
SELECT DISTINCT (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 ORDER BY ((CASE vt0.c0  WHEN NULL THEN vt0.c0 END)>>(((vt0.c0)<<(vt0.c0))))  NULLS LAST, (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (((vt0.c0 IN ())))); -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT AVG((- (vt0.c0))) FROM vt0 WHERE ((((('0.0')%('')))LIKE(((x'')<=(0.8720894902839925))))) UNION ALL SELECT ALL UPPER(DISTINCT ((x'') NOT NULL)) FROM vt0 WHERE ((NOT ((('') BETWEEN (x'19e7e8b8') AND (x''))))); -- 0ms;
SELECT ABS((((0.9428846417759141)) BETWEEN (('pⲺ&f]')) AND ((vt0.c0)))), CAST(((vt0.c0) ISNULL) AS INTEGER), (NOT (CAST(vt0.c0 AS BLOB))) FROM vt0; -- 0ms;
SELECT ALL NULL FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((0x3936cea9)AND('ql')))OR(0.8881384386708705)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (MIN(vt0.c0) IN ()) FROM vt0 WHERE ((+ (((((0.16741868583251218)AND('1712911084')))AND(x''))))) LIMIT 309026002; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT 0.7624863000847875, MAX(vt0.c0, ((x'')<<(vt0.c0)), vt0.c0, GROUP_CONCAT(vt0.c0), (- (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), vt0.c0, vt0.c0, MAX(((vt0.c0) NOTNULL)) FROM vt0 WHERE ((('') NOTNULL)); -- 0ms;
SELECT DISTINCT vt0.c0, (NOT (((vt0.c0)<<(vt0.c0)))), LAST_INSERT_ROWID() FROM vt0; -- 0ms;
SELECT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, TOTAL(vt0.c0), (+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))>((((vt0.c0)<<(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, TRIM(vt0.c0, vt0.c0), (vt0.c0 IN ()), ((x'')|(vt0.c0))))) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((((vt0.c0)<>(vt0.c0))))) FROM vt0; -- 0ms;
SELECT LAG((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-922916374')))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((vt0.c0 IN ()))), CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((NULL)IS NOT(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) END, json_extract(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), '-117485205', vt0.c0 COLLATE NOCASE, (- (vt0.c0)))) OVER () FROM vt0 WHERE ((('-1465640376' COLLATE RTRIM)&(((0xffffffffd95ec3a8)LIKE('-1812843868'))))); -- 0ms;
SELECT ALL (((~ (vt0.c0)))/(((vt0.c0) IS FALSE))) FROM vt0 LIMIT 1364773247; -- 1ms;
SELECT DISTINCT CAST(((((((((vt0.c0)OR(vt0.c0)))AND(x'')))AND(vt0.c0)))OR(399550733)) AS NUMERIC), (vt0.c0 COLLATE RTRIM IN ()), (((((0.3633121200213085) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.10775403359411284, ((vt0.c0) BETWEEN (vt0.c0) AND ('-1432591614'))))==(((((vt0.c0, vt0.c0, 1.980135472E9))==((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)||(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))) FROM vt0 WHERE (((((x'') IS FALSE)) IS TRUE)) GROUP BY ((vt0.c0) NOTNULL) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT (((((((vt0.c0))>((vt0.c0))))AND(vt0.c0)))OR((+ (vt0.c0)))), CASE WHEN vt0.c0 THEN AVG(vt0.c0) END, ((NOT (vt0.c0)) IN ()) FROM vt0 GROUP BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((- (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' ELSE vt0.c0 END, x'7e2b')) AND ((vt0.c0, CAST(vt0.c0 AS TEXT), (vt0.c0 IN (vt0.c0, vt0.c0))))), (((NULL))>((TRIM(vt0.c0)))), vt0.c0; -- 0ms;
SELECT DISTINCT MAX(((vt0.c0)&(vt0.c0))), UPPER(((vt0.c0)==(vt0.c0))), ((CAST(vt0.c0 AS TEXT))>(((vt0.c0)<(vt0.c0)))) FROM vt0; -- 0ms;
SELECT LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' ELSE vt0.c0 END) FROM vt0; -- 0ms;
SELECT ALL MAX(((vt0.c0)>=('-1905302012'))) FROM vt0; -- 0ms;
SELECT ((COUNT(*)) NOT BETWEEN ('0.030949028933015987') AND (vt0.c0)) FROM vt0 WHERE (((x'')<<(0.48995198341643575)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)<=(vt0.c0))  WHEN ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('Z[M')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END FROM vt0 WHERE (CAST((-1186921525 IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(((x'c6a1ac02') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB(vt0.c0 COLLATE NOCASE)), TRIM(((x'')GLOB(vt0.c0)), CAST(vt0.c0 AS BLOB)) FROM vt0 WHERE (((CASE WHEN 0.39307140445162725 THEN '-1591812648' END)&((((0.9785054650285614))>=(('-1206046476')))))) LIMIT 1313496949 OFFSET 666775548; -- 0ms;
SELECT (((('-715542007') BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT ABS(((((vt0.c0)AND(0.9932500837419056)))AND(vt0.c0))), ((0.05911794429956296) ISNULL), (((vt0.c0)|(vt0.c0)) IN ()) FROM vt0 LIMIT 1889076043 OFFSET 841618612; -- 1ms;
SELECT ((((((((((vt0.c0)+(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR('0.24204337564589462' COLLATE NOCASE)))AND(CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE ((- (((0.6491442852406455)IS('1U'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))), (((vt0.c0)) BETWEEN ((HEX(DISTINCT vt0.c0))) AND ((IFNULL(vt0.c0, vt0.c0)))), SUM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) FROM vt0 WHERE (((((x'')<=('}겯')))IS((('-419834202')AND('1062804430'))))) GROUP BY '-817681284', ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c0)<(vt0.c0)))), CAST(vt0.c0 AS INTEGER); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT NULL))) FROM vt0 WHERE ((((x'' IN (-1950650107))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))>((((vt0.c0))>((vt0.c0))))), CAST(((vt0.c0) ISNULL) AS REAL), ((vt0.c0 COLLATE NOCASE)|(((vt0.c0) IS TRUE))), json_type(vt0.c0), CASE (+ (vt0.c0))  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 WHERE ((((((NULL) NOTNULL)))<((CAST('-648100952' AS NUMERIC))))); -- 0ms;
SELECT CASE WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((vt0.c0)<(vt0.c0)) THEN (((NULL))==((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN NULL ELSE vt0.c0 END ELSE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END FROM vt0 WHERE (CASE WHEN 0.5615090581104223 THEN x'' WHEN x'' THEN '2029641054' WHEN NULL THEN x'' ELSE '1282413537' END COLLATE RTRIM); -- 0ms;
SELECT ALL (((((((((((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0, vt0.c0, vt0.c0))<((x'd1f2', vt0.c0, 'P9<'))))))OR((NOT (vt0.c0)))))OR(((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), CUME_DIST() OVER (), CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (vt0.c0) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), (((NOT (vt0.c0))) NOT NULL) FROM vt0 WHERE ((((CAST(-1.338661424E9 AS REAL)))==((CAST(x'' AS INTEGER))))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)-(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((NULL)<=(x'')) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0 WHERE ('-556119333') ORDER BY (('3vO*TX]B') BETWEEN (vt0.c0) AND (''))  NULLS FIRST; -- 0ms;
SELECT CASE (((vt0.c0))<>((vt0.c0)))  WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN -593376652 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN SUM(vt0.c0) THEN vt0.c0 ELSE LOWER(DISTINCT 0.9899661734885726) END FROM vt0 WHERE (((((x'') NOT BETWEEN (0.6337819913008025) AND (NULL)))GLOB((('') ISNULL)))) ORDER BY vt0.c0  NULLS LAST LIMIT -790640521; -- 0ms;
SELECT TOTAL(LTRIM(vt0.c0, vt0.c0)), GROUP_CONCAT((((vt0.c0))>((vt0.c0)))), vt0.c0, json_quote(CAST(vt0.c0 AS REAL)), (((vt0.c0))>=((x'04ac'))) COLLATE BINARY FROM vt0; -- 0ms;
SELECT (NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 ORDER BY (('T	0') BETWEEN ((~ (vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(MAX(NULL)) FROM vt0;SELECT ALL ((((vt0.c0 IN ())))!=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))), CAST('' AS INTEGER), (- ((vt0.c0 IN (vt0.c0)))) FROM vt0 GROUP BY (TYPEOF(DISTINCT 0.4192372127069679) IN ()), vt0.c0, ((vt0.c0)GLOB(vt0.c0)) COLLATE NOCASE HAVING (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE x'b005'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (~ (vt0.c0)))) AND ((x'1cebbca1', ((vt0.c0) NOTNULL), x''))); -- 0ms;
SELECT DISTINCT ((((('1979334682', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS REAL), (vt0.c0 IN ()) FROM vt0 LIMIT -101484256 OFFSET -394796688; -- 1ms;
SELECT GROUP_CONCAT(CAST(vt0.c0 AS REAL)) OVER () FROM vt0 WHERE (((TOTAL_CHANGES())<=((('0.20366675504432874') NOTNULL)))) ORDER BY ((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY COLLATE RTRIM ASC  NULLS FIRST LIMIT 1713644343; -- 0ms;
SELECT ALL MAX(((vt0.c0)%(vt0.c0))) COLLATE RTRIM FROM vt0 GROUP BY ((vt0.c0 IN (vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)-(vt0.c0))), ((CAST(vt0.c0 AS REAL)) NOT NULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL ((((NOT (vt0.c0))))>=(((+ (vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL ((x'') IS TRUE), (vt0.c0 IN ()), COUNT(CAST(vt0.c0 AS INTEGER)) OVER ( GROUPS BETWEEN vt0.c0 FOLLOWING AND ((((((((((vt0.c0)<=(vt0.c0)))AND(((vt0.c0)%(vt0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FOLLOWING EXCLUDE TIES) FROM vt0 LIMIT -1404477813;SELECT DISTINCT (((~ (NULL)))*(((vt0.c0) IS FALSE))) FROM vt0 LIMIT 627928636; -- 0ms;
SELECT DISTINCT (+ (COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 1ms;
SELECT ALL CAST((vt0.c0 IN (vt0.c0)) AS BLOB), (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()), SUM(CAST(vt0.c0 AS BLOB)) COLLATE BINARY FROM vt0 WHERE (((((((('kI')AND(NULL)))OR('{b3'))))>((((((((((9.56667305E8)OR(-7.90137882E8)))AND('c|')))OR(NULL)))AND(x'')))))); -- 0ms;
SELECT DISTINCT '礣1z''v^FI蕍', (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), NULLIF(DISTINCT (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<=(vt0.c0))), GROUP_CONCAT((- (vt0.c0))) OVER ( ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE, NULL COLLATE BINARY ASC), vt0.c0 FROM vt0 WHERE (((HEX(-240689838))==(0X4dd7aaef))) LIMIT 1949806368; -- 1ms;
SELECT ALL 'k&<wy[徂K/' FROM vt0; -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED(CASE WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 WHERE ((((('-11529841')>('-990252031'))) BETWEEN (CASE NULL  WHEN NULL THEN 0.24520249500891955 END) AND ('1' COLLATE NOCASE))) LIMIT 1349168959 OFFSET 531423012; -- 0ms;
SELECT ALL ((((vt0.c0) NOT NULL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(x''))) AND ((('823141199')AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT MIN(0.5336765327596894) FROM vt0 NOT INDEXED WHERE (((((x'')) BETWEEN ((0.8031017042506357)) AND ((x'bec0'))) IN ())); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY FROM vt0 WHERE (((HEX(DISTINCT 0.7333560021827875)) NOTNULL)); -- 0ms;
SELECT DISTINCT 0.9260516159775426, CAST(AVG(vt0.c0) AS INTEGER), TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN -5.04677108E8 ELSE vt0.c0 END COLLATE NOCASE) FROM vt0 WHERE (((NOT (372868346)) IN ())) GROUP BY CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) END ORDER BY ((((vt0.c0)|(vt0.c0)))+(CAST(vt0.c0 AS BLOB)))  NULLS FIRST; -- 0ms;
SELECT NULL, (- (vt0.c0 COLLATE BINARY)), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)), (('')%(vt0.c0)), vt0.c0 COLLATE BINARY)) AND ((0.7757598523313363, vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0) NOTNULL)))  NULLS FIRST, CAST(LIKELIHOOD(vt0.c0, 0.3148433251305913) AS INTEGER) DESC  NULLS FIRST, (vt0.c0 IN (vt0.c0, vt0.c0)) COLLATE BINARY ASC; -- 0ms;
SELECT CAST(vt0.c0 COLLATE RTRIM AS INTEGER), COUNT(SQLITE_COMPILEOPTION_GET(vt0.c0)) OVER ( PARTITION BY TYPEOF(x''), (- (((vt0.c0)>=(vt0.c0)))) ORDER BY NULL  NULLS LAST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) ASC, ((((vt0.c0) IS FALSE)) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))), ((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, 0X375bb155, vt0.c0)) AND ((vt0.c0, vt0.c0, ''))))))OR((((vt0.c0))=((x''))))) FROM vt0; -- 0ms;
SELECT DISTINCT 0.7534138401313244 FROM vt0 WHERE (CAST(CASE WHEN '-2072959990' THEN 0.21072837135676448 ELSE NULL END AS BLOB)); -- 0ms;
SELECT TOTAL(HEX(DISTINCT vt0.c0)) OVER () FROM vt0 LIMIT 1351796770 OFFSET 2116636618; -- 0ms;
SELECT DISTINCT CASE WHEN json_type(vt0.c0) THEN vt0.c0 END FROM vt0 WHERE (('-2117156888' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(vt0.c0 AS REAL))) FROM vt0 GROUP BY vt0.c0 ORDER BY (((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)>(vt0.c0)))))AND((- (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))OR(vt0.c0)) DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=((- (vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((AVG(vt0.c0))%(((vt0.c0)OR(vt0.c0)))), MAX((vt0.c0 IN (vt0.c0))), (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE ((~ (0.09572355324280113))); -- 0ms;
SELECT DISTINCT CAST(((0.8085802845064565) IS TRUE) AS NUMERIC), GROUP_CONCAT(AVG((+ (vt0.c0)))), CAST(CASE vt0.c0  WHEN 0.019138575076368847 THEN vt0.c0 END AS TEXT) FROM vt0;SELECT DISTINCT (('-648100952') NOT BETWEEN ((vt0.c0 IN ())) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 LIMIT 1816718227 OFFSET 1901562808; -- 3ms;
SELECT DISTINCT CAST(((vt0.c0) IS FALSE) AS REAL) FROM vt0; -- 1ms;
SELECT ((x'5329')*(NULL COLLATE BINARY)) FROM vt0 WHERE (((NULL)GLOB('' COLLATE BINARY))); -- 0ms;
SELECT (((((~ (vt0.c0)))OR((((vt0.c0))<((vt0.c0))))))AND((('-1435238140') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((vt0.c0 IN ()))), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '496981914' WHEN vt0.c0 THEN NULL ELSE NULL END IN ()) FROM vt0; -- 0ms;
SELECT ALL CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE COLLATE RTRIM FROM vt0 LIMIT -1325973075; -- 0ms;
SELECT ALL ((AVG(vt0.c0)) BETWEEN ((((vt0.c0, 0.5956092908997275, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE ((((- (x''))) IS FALSE)) GROUP BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE COLLATE BINARY; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 WHERE ((((((('')<>(NULL)))AND(((1393588156)!=(0.2564283926969644)))))OR((x'' IN ('1557521797', 0.8480614018752946))))) GROUP BY ((((((((vt0.c0)OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS TRUE))))AND(IFNULL(DISTINCT x'', vt0.c0))))OR(CAST(vt0.c0 AS TEXT))) HAVING (vt0.c0 COLLATE BINARY IN ()) ORDER BY JULIANDAY(((vt0.c0)-(vt0.c0)), x'' COLLATE RTRIM, (+ (vt0.c0))); -- 0ms;
SELECT ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) FROM vt0; -- 0ms;
SELECT NULL FROM vt0 WHERE ((((('-2117156888')>>('i3')))<=(CAST(NULL AS TEXT)))); -- 0ms;
SELECT ((vt0.c0 IN ()) IN (vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL COUNT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FROM vt0 GROUP BY json_extract(((((vt0.c0)AND('1186519354')))OR(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL), '0.4311715744421851'), '*<F(A/%bC', CAST(vt0.c0 AS INTEGER) COLLATE RTRIM HAVING CAST(AVG(vt0.c0) AS INTEGER);SELECT DISTINCT (+ (COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT TOTAL(((vt0.c0) IS FALSE)) OVER () FROM vt0 WHERE ((((~ (x'2071'))) NOT BETWEEN ((((NULL))==((-4.99710063E8)))) AND (NULL))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN (((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), (NOT ((~ (vt0.c0)))), (vt0.c0 COLLATE RTRIM IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOTNULL) FROM vt0 EXCEPT SELECT ALL (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 1ms;
SELECT DISTINCT (CAST('-1679708982' AS REAL) IN ()) FROM vt0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0 WHERE ((((('1366211359') BETWEEN (x'8e6b') AND (NULL))) IS FALSE)) GROUP BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, '-47511312', CASE WHEN (~ (vt0.c0)) THEN NULL END HAVING ((((vt0.c0 COLLATE RTRIM)AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(((0.4694620561748175) NOTNULL))) ORDER BY 'q' ASC  NULLS FIRST; -- 0ms;
SELECT ALL CAST((NOT (vt0.c0)) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS TEXT)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), vt0.c0 FROM vt0 WHERE ((((0.043645597544956116) BETWEEN (NULL) AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT TYPEOF(vt0.c0) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY ((LIKELY(vt0.c0))==((- (vt0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT MIN(vt0.c0, vt0.c0) COLLATE NOCASE FROM vt0 LIMIT -1298852931; -- 0ms;
SELECT ((CAST(vt0.c0 AS NUMERIC)) NOTNULL) FROM vt0 WHERE (((('kP~V' IN (x'9eed', '954596836'))) NOT BETWEEN (ROUND(NULL, 0.2875994663844327)) AND (((x'')>>(0.9397317635266599))))); -- 0ms;
SELECT DISTINCT COUNT(*), CAST(((vt0.c0)/(vt0.c0)) AS NUMERIC), CAST('uYⰧ' AS NUMERIC) FROM vt0; -- 3ms;
SELECT ALL (((0.4326830333319722)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(((((((vt0.c0)OR(vt0.c0)))OR(0x3658854d)))>>((- (vt0.c0)))), json_remove(vt0.c0 COLLATE RTRIM, ((x'')>(vt0.c0))), ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ('*p'))) OVER (), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))||(vt0.c0)), ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)LIKE(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))) FROM vt0 GROUP BY vt0.c0;SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS TRUE) FROM vt0 WHERE (CASE ((x'')OR('HxIJ1Tg ⸚'))  WHEN ((0.04787471975181112)IS(NULL)) THEN ((NULL)<>(NULL)) END); -- 0ms;
SELECT ALL ((((vt0.c0)>(vt0.c0)))LIKE(MIN(0.9485426496164956))) FROM vt0; -- 0ms;
SELECT DISTINCT (- (vt0.c0 COLLATE RTRIM)), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE x'f20e'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ('-839895476')), (- (((vt0.c0)>(vt0.c0)))) FROM vt0 LIMIT 138506198; -- 1ms;
SELECT DISTINCT MAX(((((((((vt0.c0)AND(x'')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((SUM(vt0.c0)) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ALL ((((MIN(vt0.c0))AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)<<(vt0.c0)))), TOTAL(MIN(CAST(vt0.c0 AS INTEGER))), (~ (UNLIKELY(DISTINCT vt0.c0))) FROM vt0 GROUP BY ((CAST(vt0.c0 AS INTEGER))=((~ (vt0.c0))));SELECT DISTINCT vt0.c0, vt0.c0, ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(CASE WHEN x'f7e0' THEN 0.6218528851872581 ELSE vt0.c0 END)))AND(vt0.c0)) FROM vt0 GROUP BY ((((((((((((CAST(vt0.c0 AS REAL))AND(vt0.c0 COLLATE NOCASE)))OR(vt0.c0 COLLATE NOCASE)))AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(NULL)), CASE WHEN '' THEN ((vt0.c0) IS FALSE) ELSE ((vt0.c0) IS TRUE) END, ((((vt0.c0)==(vt0.c0)))-(CAST(vt0.c0 AS NUMERIC))); -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(((vt0.c0)IS(vt0.c0)))))AND((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC), COUNT(1562834950) OVER ( ORDER BY CASE CAST(vt0.c0 AS TEXT)  WHEN ((NULL)IS(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN (x'')) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) WHEN NULL THEN CAST(0.4025072952778118 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c0 THEN '-790640521' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC), ((((((((vt0.c0)AND(vt0.c0)))OR('1304439908')))AND((vt0.c0 IN ()))))AND(((vt0.c0) IS FALSE))) FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS LAST; -- 1ms;
SELECT DISTINCT ((vt0.c0)/(((vt0.c0)>(vt0.c0)))), ((((NOT (vt0.c0))))>=((vt0.c0))), x'' FROM vt0; -- 0ms;
SELECT DISTINCT (SQLITE_COMPILEOPTION_GET(vt0.c0) IN ()), (vt0.c0 COLLATE RTRIM IN ()), CAST(((x'') NOTNULL) AS TEXT) FROM vt0; -- 0ms;
SELECT ALL (((- (vt0.c0)))IS((- (vt0.c0)))), (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), LIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (CAST(((0X509eef18) NOT BETWEEN ('543727846') AND ('0.765731155591164')) AS REAL)) ORDER BY ((vt0.c0 IN ()) IN (CAST(vt0.c0 AS BLOB))) DESC  NULLS FIRST; -- 0ms;
SELECT NULL, ((0.9739362785579838)*((+ (0.4588599224800528)))), CASE WHEN ((vt0.c0) IS TRUE) THEN COUNT(*) WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, 'E+Ty^2~B'))) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN TYPEOF(vt0.c0) THEN vt0.c0 COLLATE BINARY END FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) FROM vt0 WHERE ((- (MAX(0Xffffffffd5c223f0, x'1f5ab388')))); -- 0ms;
