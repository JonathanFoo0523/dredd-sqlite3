-- Time: 2024/06/07 10:56:11
-- Database: database37
-- Database version: 3.40.0
-- seed value: 306584537
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c0) VALUES (122590574, 'R<X9	镮', '1375690199'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, NULL, '122590574'); -- 1ms;
PRAGMA default_cache_size = 122590574; -- 0ms;
ANALYZE; -- 1ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (1.603297016E9, '122590574', x''); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (x''); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.38004186595152356, x'', 0Xffffffff872dba7c); -- 1ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (NULL, 0.5790333895277788, '122590574'); -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, 1054721709, -1225572384), (NULL, '1375690199', NULL), (0.7935882852852696, NULL, 0x3c4826ad); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0xf9ac5d8, '-1073672076'); -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
PRAGMA soft_heap_limit = 2176221388190235559; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1054721709 noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES ('-2027046276', '-2027046276', ''), (x'', NULL, NULL), ('1210156272', NULL, 1.011361453E9); -- 0ms;
END; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1603297016')<(x'')))/(((((((((x'')AND(x'')))AND('')))AND(NULL)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL , c1 BLOB , c2 INT ); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-1e500'; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE ((t0.c1)|(JULIANDAY(t0.c2, t0.c2, t0.c2, t0.c1, t0.c0))); -- 0ms;
ANALYZE t0; -- 0ms;
REINDEX; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
PRAGMA temp.threads; -- 0ms;
DELETE FROM rt0; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'12bee00d', c1=0.38004186595152356; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(1.22590574E8); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(-1073672076); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (0.38004186595152356); -- 0ms;
REINDEX RTRIM; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(NULL, 1334174203); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR ABORT INTO t0(c1, c2) VALUES (1.334174203E9, NULL), ('Oe+]', NULL), (x'39c3', x''); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES ('0.7935882852852696', '(엘.o'), (-1901621147, x'036b'), (NULL, 0.314363968611412); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (x''); -- 0ms;
UPDATE OR ABORT t0 SET c0=0X5f905ef8; -- 0ms;
PRAGMA main.journal_mode = WAL; -- 24ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-769308770'))) ISNULL), TOTAL(((('1603297016')) BETWEEN ((t0.c2)) AND ((x'')))), 0Xffffffffb6f33fe0 FROM rt0 LIMIT -1225572384 OFFSET 261801432;SELECT ALL (~ (rt0.c2)) COLLATE BINARY, NULL, ((TOTAL(t0.c1)) BETWEEN (DATETIME(t0.c2, 0.5790333895277788, rt0.c0)) AND (COUNT(rt0.c2))) FROM rt0 NOT INDEXED, t0 WHERE ((-1073672076 IN (NULL)) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT ALL (((NULLIF(rt0.c0, t0.c2)))=((CAST(t0.c1 AS TEXT)))) FROM rt0;SELECT DISTINCT ((t0.c1)>=(t0.c2)), (((x'')<<(t0.c1)) IN ((- (t0.c0)))), CASE WHEN ((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (rt0.c0 IN (x'', t0.c1)) END, ((((((((t0.c0)AND(t0.c2)))AND(rt0.c2)))OR(CAST(t0.c2 AS TEXT))))OR(NULL)), CASE WHEN SUM(t0.c0) THEN rt0.c0 END FROM t0 WHERE ((((x'')<=(NULL)) IN ()));SELECT ALL json_array_length(t0.c1 COLLATE RTRIM, CAST(t0.c2 AS REAL)) FROM t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY rt0.c2  NULLS LAST) FROM t0;SELECT DISTINCT ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) NOT NULL), rt0.c2, ((1.210156272E9) NOTNULL), '-1901621147', SUM((((0.26581285321057235, t0.c2, x'4412')) NOT BETWEEN ((rt0.c2, t0.c2, t0.c0)) AND ((NULL, rt0.c2, t0.c1)))) FROM rt0, t0; -- 1ms;
SELECT ALL 0.6995991035761201, ((((((rt0.c2)AND(t0.c0)))OR('\r뼖'))) NOT NULL), CASE ((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))  WHEN ((t0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN (rt0.c2 IN ()) WHEN t0.c1 THEN NULL WHEN CAST(t0.c1 AS REAL) THEN ((t0.c1)IS NOT(t0.c2)) END, RANK() OVER ( ORDER BY rt0.c0  NULLS FIRST, ((((t0.c0)OR((+ (t0.c2)))))AND(((rt0.c0) ISNULL))) DESC  NULLS FIRST), (~ (((1909726092)AND(t0.c0)))) FROM t0 WHERE (CASE CAST('-1225572384' AS TEXT)  WHEN (('JT\rjc')AND(0X1e17aa6a)) THEN ((' T')<(NULL)) WHEN x'' THEN 'I).p]5c' WHEN (('')<<(0x23df4465)) THEN ((x'2018c58e')|(x'')) END) ORDER BY x'c5b9' COLLATE BINARY ASC  NULLS LAST;SELECT DISTINCT (((((+ (rt0.c1)))OR(((t0.c1)>=(rt0.c2)))))AND(COUNT(rt0.c0))), (((COUNT(t0.c2)))>((((rt0.c0)+(rt0.c0))))), ((((t0.c0 IN ()), ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)), TRIM(NULL, rt0.c0)))>=(((NOT (NULL)), ((t0.c2)>(t0.c1)), -1.901621147E9))) FROM rt0, t0 WHERE (((((0x1b957f12)LIKE(x'')))%(UNLIKELY(DISTINCT 0.12869208171955238)))); -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c1)AND(t0.c1)))OR(t0.c2)))OR('2176221388190235559')))AND(rt0.c2)) AS NUMERIC) FROM rt0 WHERE (((x'' COLLATE RTRIM)IS(((NULL)LIKE('I).p]5c')))));SELECT DISTINCT load_extension(((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)), CASE t0.c0  WHEN '' THEN t0.c2 END) FROM t0 WHERE ((((((('-1798254192') BETWEEN (1.603297016E9) AND (0.05053861706975138)))AND(((('FDG쑬m+4L	', x'1097', 0.16075595894223416, -1120315136, 0x42d7ccb3)) BETWEEN ((NULL, '-1409480318', NULL, '634874854', NULL)) AND ((NULL, '(엘.o', '868921379', NULL, x'4d087a8e'))))))OR('1714226418')));SELECT (NOT ((((rt0.c1, rt0.c1, t0.c0, rt0.c1, t0.c2))>((rt0.c2, NULL, rt0.c2, rt0.c0, rt0.c1))))) FROM rt0, t0 WHERE (((((x'' COLLATE NOCASE)OR(((x'')>('jsM')))))AND(((0.6634720072096324) NOT BETWEEN (x'') AND (x'a336'))))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) ISNULL), SUM(CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END), ((rt0.c1) NOT BETWEEN (((t0.c2) NOT BETWEEN ('Wd') AND (rt0.c0))) AND ((NOT (t0.c2)))) FROM rt0 WHERE ((+ (x'')));SELECT ALL ((t0.c1 IN ()) IN (((t0.c1)<=(rt0.c1)))) FROM rt0, t0 WHERE (CASE WHEN ((-1146575544)IS(x'')) THEN CAST(780648214 AS BLOB) ELSE ((((((((0x5a3dd10a)OR(0.4260382783652321)))OR(x'b5c6')))AND(x'')))OR(NULL)) END) ORDER BY (~ ((~ (t0.c0)))); -- 0ms;
SELECT CAST(CAST(t0.c0 AS INTEGER) AS BLOB) FROM t0, rt0; -- 0ms;
SELECT NULL FROM rt0, t0 WHERE (((CAST('Yi6TD\n' AS INTEGER)) BETWEEN (x'') AND (NULL COLLATE RTRIM))) GROUP BY CASE WHEN CHANGES() THEN NULL WHEN (+ (t0.c2)) THEN ((t0.c0)<>(rt0.c2)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(t0.c1 AS NUMERIC) END HAVING ((((t0.c1)>>(rt0.c2))) NOT BETWEEN (rt0.c0) AND (CASE WHEN t0.c1 THEN rt0.c1 END)); -- 0ms;
SELECT DISTINCT rt0.c0, ((((((((((((((t0.c0) IS FALSE))AND(((t0.c1)>(rt0.c0)))))AND(((NULL)&(rt0.c1)))))AND((- (rt0.c1)))))OR(CASE WHEN t0.c2 THEN rt0.c1 END)))OR(((rt0.c2)IS(rt0.c2)))))AND(((t0.c2)%(rt0.c1)))), ((SUM(rt0.c2)) BETWEEN (((rt0.c1)&(rt0.c0))) AND ('')) FROM rt0;SELECT CAST(t0.c1 AS TEXT) FROM rt0 WHERE (CAST((('462782226') ISNULL) AS INTEGER));SELECT DISTINCT (((((NULL) NOTNULL)))>((CASE WHEN t0.c2 THEN rt0.c1 END))) FROM t0;SELECT ((((MIN(t0.c0))AND(0.8243107834028586)))OR(CASE rt0.c1  WHEN t0.c1 THEN rt0.c0 END)) FROM rt0 WHERE (0.5790333895277788) GROUP BY (rt0.c1 IN ()) HAVING SUM(CAST(t0.c0 AS REAL));SELECT ((('601834597' IN (t0.c1))) NOT NULL) FROM t0 WHERE ((NULL IN ()) COLLATE BINARY) GROUP BY (((((t0.c2))=((rt0.c1)))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((((((rt0.c2)OR(t0.c0)))OR(t0.c1)))AND(t0.c1)))AND(x'2c7a798299d7')))) HAVING ('601834597' IN ());SELECT DISTINCT ((((((rt0.c0)AND(NULL)))AND(t0.c0))) BETWEEN (COUNT(0.4007414623729434)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))), (((((- (rt0.c2)))OR(((t0.c1) NOT NULL))))AND(CASE WHEN t0.c1 THEN 720430631 END)), MIN(TYPEOF(t0.c2), ((((rt0.c2)AND(rt0.c1)))OR(t0.c0))) FROM rt0, t0; -- 0ms;
SELECT ALL NULL FROM rt0 ORDER BY ((((t0.c2 COLLATE BINARY)AND((~ ('')))))OR(rt0.c2));SELECT ((t0.c1) NOT BETWEEN (CAST(NULL AS TEXT)) AND ((NOT (t0.c2)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (('엘*7159119155835821488-1650T7682816893556423655:482 -5564340364622830992-_R') IS TRUE) FROM t0 WHERE ((+ (CASE WHEN 'j|t' THEN '1714226418' ELSE NULL END))) GROUP BY (((CAST(t0.c2 AS NUMERIC)))<=((((t0.c2)||(rt0.c1)))));SELECT 'u)ᮌ䰮__#', COUNT(*) OVER (), COALESCE(rt0.c1, t0.c0 COLLATE RTRIM, '-1949081134', ((t0.c2)%('y<')), (rt0.c0 IN ()), ((t0.c1) IS FALSE)), (((((NOT (t0.c0)))AND(x'')))OR(CASE '1011361453'  WHEN t0.c0 THEN t0.c1 END)), CUME_DIST() OVER () FROM t0 NOT INDEXED, rt0 WHERE (((((((NULL) NOT NULL))AND(((((x'423a')OR(0.13164305751774052)))OR(x'')))))OR((('1054721709') NOT BETWEEN (NULL) AND ('&e'))))); -- 0ms;
SELECT ALL t0.c2 COLLATE BINARY FROM rt0, t0 ORDER BY CASE WHEN (('ࣃw?c') NOT BETWEEN (rt0.c1) AND (t0.c1)) THEN ((0.3212103305021643) IS FALSE) WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN SQLITE_COMPILEOPTION_USED(rt0.c0) WHEN ((((((((((((rt0.c0)AND(t0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))AND(rt0.c2)) THEN (((rt0.c1))>=((rt0.c0))) ELSE rt0.c0 END ASC  NULLS FIRST, ((t0.c1 COLLATE RTRIM) BETWEEN (((0Xfffffffff31e4321)<=(t0.c1))) AND (CAST(t0.c1 AS INTEGER))) DESC; -- 0ms;
SELECT rt0.c2 FROM t0 WHERE ((((('-1896598524')%(NULL))) IS TRUE));SELECT ALL (IFNULL(rt0.c1, rt0.c0) IN ()) FROM t0, rt0 WHERE (''); -- 0ms;
SELECT DISTINCT MAX((((('\n')AND('601834597')))AND(t0.c1))), ((((t0.c2)OR(COUNT(*))))OR(CASE rt0.c2  WHEN t0.c0 THEN '545069645' ELSE t0.c0 END)), (((t0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((GROUP_CONCAT(t0.c1), AVG(rt0.c1), TYPEOF(t0.c2))) AND (((+ (rt0.c1)), t0.c1, (~ (t0.c0))))) FROM t0, rt0 ORDER BY NULLIF(862775772, ((rt0.c2)&(rt0.c2))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt0.c0, t0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE), CASE rt0.c2  WHEN t0.c0 THEN x'' END, ((rt0.c2) NOT NULL))) AND ((rt0.c1, ((t0.c0)|(t0.c2)), ((rt0.c0)GLOB(t0.c0))))) FROM rt0 WHERE (0X2af0e627);SELECT DISTINCT ((COALESCE(rt0.c2, rt0.c0)) BETWEEN ((rt0.c2 IN ())) AND ((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))) FROM t0, rt0 GROUP BY CASE ((t0.c0) ISNULL)  WHEN NULL THEN ((rt0.c0) NOT NULL) WHEN DATETIME(rt0.c2, t0.c0, rt0.c1, rt0.c0, rt0.c2) THEN ((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)) WHEN t0.c1 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN t0.c2 THEN t0.c2 END) AND (((((((((rt0.c2)AND(t0.c1)))AND(t0.c2)))OR(t0.c1)))OR(rt0.c0)))) FROM t0, rt0 WHERE (HEX(DISTINCT ((((NULL)AND('_2 ')))AND(0.046719644702015395)))); -- 0ms;
SELECT ALL rt0.c2, (CASE WHEN rt0.c2 THEN rt0.c1 END IN ((+ (x'')))), (((((rt0.c0)AND(rt0.c2)))OR(t0.c1)) IN ()) FROM rt0 WHERE (CASE '1186669250'  WHEN (('f ') IS TRUE) THEN (((((((('0.3212103305021643')OR('D?!L')))OR(x'f62c')))AND(x'')))OR('')) ELSE (((('868921379')AND('-215984210')))AND('')) END) GROUP BY UPPER(((NULL) NOTNULL)) HAVING ((((((((t0.c2)OR((NOT (t0.c1)))))OR(rt0.c0 COLLATE RTRIM)))OR(((((rt0.c2)AND(t0.c0)))OR(rt0.c1)))))AND(t0.c0));SELECT DISTINCT (((t0.c2)>>(NULL)) IN (0.33539942177337556 COLLATE NOCASE, x'95aa9f30')) FROM rt0, t0 WHERE ((((('')AND('\n')))AND(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 GROUP BY (- ((((rt0.c1, t0.c2, t0.c0)) NOT BETWEEN ((t0.c2, t0.c0, rt0.c0)) AND ((rt0.c0, t0.c2, rt0.c1))))) LIMIT -2079533158 OFFSET 1480074125;SELECT DISTINCT CASE WHEN (((t0.c1))==((t0.c1))) THEN CASE WHEN t0.c2 THEN rt0.c1 END WHEN NULL THEN t0.c1 COLLATE NOCASE WHEN rt0.c0 COLLATE RTRIM THEN t0.c1 WHEN CASE WHEN 'XT痰' THEN t0.c0 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c0 THEN t0.c2 WHEN rt0.c2 THEN t0.c0 WHEN '-661090117' THEN t0.c1 ELSE t0.c2 END THEN ((((((((t0.c2)OR('Z	')))OR(t0.c1)))AND(rt0.c2)))OR(rt0.c1)) WHEN (((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, t0.c2, t0.c0)) AND ((t0.c2, rt0.c1, x''))) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) END, (NOT (((('5', rt0.c2, rt0.c1))!=((t0.c0, rt0.c2, rt0.c0))))), CAST((((t0.c2))<((rt0.c1))) AS INTEGER) FROM rt0 WHERE (((((LIKELIHOOD('-1061423202', 0.3971380139248494))OR(CAST(NULL AS TEXT))))OR(CAST(x'aa2c' AS NUMERIC))));SELECT ((((t0.c2) IS FALSE)) IS TRUE) FROM rt0, t0 GROUP BY ((((t0.c2)=(rt0.c0)))&((- (NULL)))), (((t0.c1, rt0.c1, t0.c2)) NOT BETWEEN ((((rt0.c0) BETWEEN (x'') AND (t0.c1)), ((t0.c1)AND(t0.c2)), ((t0.c2) ISNULL))) AND (((rt0.c0 IN (t0.c0, t0.c0)), ((rt0.c0)-(t0.c0)), (t0.c0 IN (t0.c1))))), (TRIM(DISTINCT rt0.c2, rt0.c2) IN ()), ((t0.c0 IN ()) IN (CASE rt0.c1  WHEN t0.c2 THEN t0.c2 ELSE x'a9e8' END)), ((x'') ISNULL) HAVING ((((((((rt0.c0)AND(CAST(t0.c1 AS BLOB))))AND(((((t0.c0)AND(t0.c0)))AND(rt0.c0)))))OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c2)LIKE(t0.c2)))) LIMIT -661090117; -- 0ms;
SELECT DISTINCT SUM(rt0.c2), GROUP_CONCAT(((rt0.c1) ISNULL)), rt0.c0 FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0)AND(t0.c2)) AS INTEGER) FROM rt0, t0; -- 1ms;
SELECT DISTINCT NULL FROM rt0 WHERE ((((NULL)) NOT BETWEEN ((x'')) AND ((x''))) COLLATE NOCASE) GROUP BY (((t0.c0)>=(t0.c0)) IN (t0.c2)) HAVING UNICODE(((rt0.c2)<<(t0.c2)));SELECT DISTINCT (NOT (CAST(t0.c0 AS TEXT))), ((((rt0.c0)AND(t0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) AND (((rt0.c2)-(rt0.c1)))), MAX((((t0.c1))>=((t0.c2)))) FROM t0, rt0 WHERE (((('))O\' IN (''))) BETWEEN (json_remove(x'', '-1387458697')) AND (((x'1c57') IS TRUE))));SELECT DISTINCT (NOT (rt0.c1)) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT rt0.c1 FROM t0 GROUP BY (((- (rt0.c0))) NOT BETWEEN (((t0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (CASE WHEN rt0.c0 THEN t0.c2 END)), LIKELY(DISTINCT CAST(rt0.c1 AS TEXT)), ((((t0.c2)<=(rt0.c2)))>>(CASE WHEN rt0.c0 THEN '/T' WHEN t0.c2 THEN rt0.c2 WHEN x'' THEN rt0.c0 END)) HAVING CASE WHEN ((x'') IS FALSE) THEN IFNULL(DISTINCT t0.c2, t0.c2) END;SELECT DISTINCT (+ (t0.c1)) COLLATE BINARY FROM rt0 WHERE ((NOT (0.6894530493073456 COLLATE RTRIM))) ORDER BY (((+ (rt0.c1)))<(rt0.c0)) ASC  NULLS LAST;SELECT DISTINCT CAST(((t0.c0) NOT NULL) AS REAL) FROM t0, rt0 WHERE (LENGTH((((NULL))<=((x''))))) ORDER BY (- (rt0.c0)) DESC; -- 0ms;
SELECT CASE WHEN 0.9245084304388888 THEN t0.c2 COLLATE BINARY WHEN ((((t0.c0)OR(rt0.c2)))OR(0.7726595263124637)) THEN t0.c2 WHEN COALESCE(DISTINCT '', rt0.c1) THEN ((rt0.c1)<<(t0.c0)) END FROM t0, rt0 WHERE (((CAST('''' AS BLOB))%(((0.971137731825614) BETWEEN ('') AND (x'7e12'))))); -- 0ms;
SELECT ALL ((t0.c1)=(t0.c0)) COLLATE BINARY FROM t0 WHERE (CASE WHEN '-1061423202' THEN NULL WHEN '535659232' THEN '-59356114' WHEN NULL THEN 0xffffffff96fbb8ec ELSE -1.146575544E9 END COLLATE RTRIM) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c0)))AND(rt0.c0)) THEN t0.c2 COLLATE NOCASE END ASC LIMIT -252178425 OFFSET 1514000650;SELECT ALL NULL, rt0.c1, (t0.c1 IN (json_patch(t0.c2, t0.c2), ((((t0.c1)OR(rt0.c1)))OR(rt0.c1)))) FROM rt0, t0; -- 1ms;
SELECT DISTINCT x'20cd' FROM rt0, t0 WHERE (json_type(0.9996225475533601) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((t0.c2, rt0.c0, x'13c5')) BETWEEN ((SQLITE_SOURCE_ID(), (NOT (t0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND (((((rt0.c1))>=((t0.c1))), GROUP_CONCAT(rt0.c0), ((((rt0.c0)AND(' L')))AND(x'890f'))))) FROM t0 WHERE ((CASE WHEN 0X336ce9dc THEN x'' WHEN '-456408502' THEN '' WHEN x'' THEN 2.1762213881902356E18 END IN (CAST('Fc<' AS NUMERIC))));SELECT DISTINCT COUNT(((NULL)IS(rt0.c1))) OVER ( ORDER BY CAST(((t0.c0) BETWEEN (rt0.c2) AND (t0.c1)) AS NUMERIC) ASC, (((rt0.c1 IN ()))%(rt0.c2))  NULLS LAST) FROM t0 WHERE (CASE NULL  WHEN ((x'') NOTNULL) THEN CAST('-1901621147' AS NUMERIC) ELSE ((x'')GLOB(0.6560121487336171)) END) GROUP BY ((((t0.c1) NOTNULL)) BETWEEN (((rt0.c0)<(rt0.c0))) AND (QUOTE(rt0.c0)));SELECT DISTINCT ROW_NUMBER() OVER (), ((t0.c2)%('Ӳ' COLLATE BINARY)), (((t0.c1, rt0.c1, rt0.c2)) BETWEEN ((t0.c2, rt0.c2, t0.c1)) AND ((t0.c2, t0.c2, rt0.c2))) COLLATE NOCASE FROM t0 WHERE ((((((((0.6951659063121837, '-2079533158', 0.7436452836363374))!=((x'', NULL, x'9e28'))))AND(((0.09046281807820822) NOT BETWEEN ('') AND (NULL)))))OR(('?z''{fd' IN ()))));SELECT DISTINCT ((((- (rt0.c2))))=((((((t0.c2)AND(rt0.c2)))OR(t0.c1))))), ((((TOTAL(rt0.c1))OR(((rt0.c2)AND(t0.c1)))))OR((((rt0.c2, t0.c0, t0.c0))>((t0.c1, rt0.c2, t0.c0))))), (((t0.c2, (- (rt0.c2)), CASE WHEN t0.c2 THEN rt0.c1 WHEN t0.c2 THEN t0.c0 WHEN 'yi6td\n' THEN t0.c2 ELSE t0.c2 END, COUNT(*), AVG(rt0.c0)))<=((CAST(0x1c6f9271 AS INTEGER), ((((rt0.c0)AND('')))AND(rt0.c0)), ((t0.c1)<(t0.c1)), GROUP_CONCAT(rt0.c0), rt0.c2 COLLATE BINARY))) FROM rt0, t0 ORDER BY CASE WHEN ((rt0.c0)/(t0.c1)) THEN ((2.61801432E8) BETWEEN (rt0.c0) AND (t0.c1)) WHEN (((t0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t0.c2))) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (+ (t0.c0)) END DESC, (((((((('545069645')AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c1)>=(t0.c1)))))OR(((t0.c1)>=(t0.c1)))))OR(rt0.c1)) DESC; -- 0ms;
SELECT DISTINCT CAST(json_array_length(rt0.c2, rt0.c1) AS NUMERIC) FROM rt0, t0;SELECT ALL ((ABS(t0.c2)) BETWEEN ((- (rt0.c0))) AND (((((t0.c2)AND(t0.c0)))OR(t0.c2)))) FROM rt0 LIMIT 2140166398 OFFSET 1016349230;SELECT x'' COLLATE NOCASE, SUM(LIKELY(DISTINCT t0.c2)), ((((rt0.c0)OR(NULL)))&(CASE 0.3212103305021643  WHEN rt0.c1 THEN rt0.c1 END)) FROM t0, rt0 WHERE ((~ (1.01634923E9 COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT (+ ((((t0.c1))==((rt0.c1))))) FROM rt0;SELECT DISTINCT (((('f ') IS TRUE)) NOTNULL) FROM t0, rt0; -- 0ms;
SELECT ALL (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))))==((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))), AVG(((t0.c1)-(t0.c2))) OVER (), ((AVG(rt0.c1))<<(SUM(rt0.c1))) FROM rt0;SELECT ALL (((x'')) BETWEEN ((LIKE(t0.c2, rt0.c0))) AND ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))))) FROM rt0, t0; -- 2ms;
SELECT ALL ((((TRIM(rt0.c2, t0.c1))OR((- (t0.c0)))))OR((((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c2))))), json_type(((rt0.c1)LIKE('-215984210'))), (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE NULL  WHEN (- (t0.c2)) THEN (+ (rt0.c2)) ELSE UPPER(NULL) END FROM t0, rt0 WHERE (((((NULL)OR('-548934974')))OR(x'fa61')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT 0.5093949361329153 FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((('-1200373575'))<((t0.c0))) AS BLOB) FROM t0 WHERE (COALESCE(x'' COLLATE NOCASE, ((x'') IS TRUE))) GROUP BY ((NULL) IS TRUE), (- (((((t0.c1)OR(t0.c0)))AND(t0.c2)))), ((CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c1 END) BETWEEN ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, rt0.c1, t0.c1)) AND ((t0.c0, rt0.c2, rt0.c0)))) AND (CAST(t0.c1 AS REAL))) HAVING ((((CASE t0.c1  WHEN t0.c2 THEN rt0.c2 END)OR(((rt0.c1) IS FALSE))))AND(rt0.c0)) ORDER BY ((((((((rt0.c0)OR((t0.c0 IN (NULL)))))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOTNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c2))))  NULLS FIRST;SELECT ALL ((((((t0.c0)OR(t0.c1)))OR(t0.c2))) IS FALSE), rt0.c0, (- ((- (t0.c1)))) FROM t0 WHERE (((((((((COALESCE(NULL, 0Xffffffffd7d50e4a, NULL, 0xffffffffa2493705))AND((- (0.630879962764395)))))AND((('-1270435867')OR('1714226418')))))AND(COALESCE(1.714226418E9, x'48e07d1b'))))AND((868921379 IN (0.10288702981389608))))) GROUP BY CASE WHEN ((0.49543804713199247) IS TRUE) THEN (((rt0.c0, rt0.c1, t0.c0, rt0.c1, t0.c1)) NOT BETWEEN ((t0.c0, t0.c0, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c1, t0.c2, x'', t0.c2))) WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c0)OR(rt0.c0)))AND('-252178425')))AND(rt0.c1)))OR(t0.c0)) WHEN CAST(232881323 AS INTEGER) THEN LIKELY(DISTINCT rt0.c1) ELSE rt0.c1 COLLATE BINARY END ORDER BY '2140166398', CASE (('') NOT BETWEEN (t0.c2) AND (rt0.c2))  WHEN rt0.c0 THEN x'6541' END ASC  NULLS LAST;SELECT DISTINCT (t0.c2 COLLATE RTRIM IN (0.7071241725254583)) FROM t0, rt0 WHERE ((((-1896598524 IN ('	kooz,K'))) NOT NULL)) ORDER BY (((x'')>>(t0.c2)) IN (CAST(t0.c2 AS NUMERIC), ((rt0.c1)>=(rt0.c1)))) DESC  NULLS FIRST LIMIT 545069645; -- 0ms;
SELECT CAST((NOT (t0.c2)) AS INTEGER), NTILE(((((((((((t0.c1) IS TRUE))AND(((rt0.c2) BETWEEN ('634874854') AND (t0.c2)))))AND(CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)))OR((+ (t0.c0)))))AND(CAST(rt0.c2 AS INTEGER)))) OVER (), ((((rt0.c0) ISNULL))>>(MAX(rt0.c2))) FROM t0, rt0 WHERE (CAST((('-673903030')*(NULL)) AS TEXT));SELECT ((t0.c1) NOT NULL) COLLATE NOCASE, SUM(((rt0.c2) ISNULL)) OVER (), DENSE_RANK() OVER () FROM rt0, t0 LIMIT -2027046276 OFFSET 1204335853; -- 0ms;
SELECT ALL ((t0.c2)<=(((('')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM t0, rt0 WHERE ((((CASE '1634076867'  WHEN 0.05044153792853967 THEN 0.7071241725254583 ELSE 753648272 END))<=(((((x'', x'', x''))<((NULL, NULL, -9.47075988E8))))))); -- 0ms;
SELECT DISTINCT (- (CAST(t0.c2 AS INTEGER))) FROM t0 WHERE (((((0.14884967768421753) BETWEEN (0xffffffffffffffff) AND ('1063413026')))*((('듭suj') NOT NULL)))); -- 1ms;
SELECT ALL CASE (((rt0.c0))>=((rt0.c2)))  WHEN (rt0.c0 IN ()) THEN CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c0 END END FROM rt0 ORDER BY x'2ae6fef7'  NULLS LAST;SELECT ALL (+ (((rt0.c2) BETWEEN (rt0.c0) AND (' t')))) FROM t0 WHERE ((+ (CHAR(NULL)))) LIMIT 735942165 OFFSET -1200373575;SELECT CASE WHEN ((t0.c1) BETWEEN (rt0.c2) AND (t0.c2)) THEN ((x'6b48b3ef') BETWEEN (t0.c1) AND (rt0.c2)) ELSE rt0.c0 COLLATE BINARY END FROM t0, rt0 LIMIT -9223372036854775808; -- 0ms;
SELECT SUBSTR(((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)), UNLIKELY(DISTINCT rt0.c2)) FROM rt0 WHERE (((((((0.7726595263124637)LIKE('')))AND(((x'6e52')&(1.18666925E9)))))OR((NOT (x'e75f')))));SELECT (- ((((rt0.c1, -1.120315136E9, t0.c1))=((t0.c2, rt0.c2, t0.c1))))) FROM rt0, t0 WHERE (((((((0.2311219052713821)>>('1785084855')))AND((('-548934974')<=(NULL)))))AND(((x'')|(NULL))))); -- 0ms;
SELECT ((t0.c0 IN ()) IN (CAST(rt0.c0 AS NUMERIC))), CAST(IFNULL(t0.c2, rt0.c2) AS REAL), LTRIM(AVG(t0.c2)) FROM rt0 WHERE ((('-1225572384' IN (NULL)) IN ()));SELECT ((((t0.c2)>=(t0.c0)))OR((t0.c2 IN ()))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((rt0.c2) NOT NULL)) NOT BETWEEN (((((((((rt0.c2)AND(t0.c1)))OR(t0.c2)))AND(t0.c1)))OR(t0.c2))) AND (rt0.c2)), CAST(((((rt0.c2)AND(t0.c2)))OR(rt0.c0)) AS INTEGER)) OVER ( ORDER BY (((rt0.c0)||(t0.c2)) IN ())  NULLS FIRST, LAST_INSERT_ROWID(), rtreenode((rt0.c1 IN ()), UPPER(t0.c0)) DESC  NULLS FIRST) FROM rt0, t0; -- 0ms;
SELECT ((rt0.c1) NOT NULL) FROM t0, rt0 WHERE (LOWER(NULL COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((NULLIF(t0.c1, t0.c1)) BETWEEN ((((t0.c2, t0.c2, rt0.c0))==((rt0.c2, rt0.c2, t0.c1)))) AND (((rt0.c1)IS(t0.c2)))) FROM rt0;SELECT DISTINCT ((t0.c1) ISNULL) COLLATE RTRIM FROM rt0 WHERE (((((NULL COLLATE RTRIM)AND(json_object(0.06823374202703347, NULL))))AND(((0.8125166186296655)IS(x''))))) GROUP BY CAST(json_quote(rt0.c0) AS BLOB);SELECT ALL CAST(GROUP_CONCAT(rt0.c0) AS TEXT) FROM rt0, t0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, t0 WHERE ((((((((((('')OR(x'')))OR('꟣')))AND(8.62775772E8)))AND(0.9208056023750119)))<=(x''))); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c1) NOT NULL))), ((((((rt0.c1)OR(t0.c0)))OR(t0.c0)))<=(t0.c0 COLLATE RTRIM)), (((rt0.c1)) NOT BETWEEN ((TOTAL(t0.c2))) AND ((t0.c2 COLLATE RTRIM))) FROM rt0, t0; -- 0ms;
SELECT ALL COUNT((NOT (x''))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT CASE SUM(t0.c0)  WHEN DATE(2.1762213881902356E18, rt0.c1, 0.3151003993709054, rt0.c2, t0.c2) THEN ((0Xfffffffff2fd62dd)+(x'')) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN (t0.c1 IN ()) WHEN ((rt0.c0) BETWEEN (t0.c2) AND (rt0.c2)) THEN ((((((((t0.c1)OR(rt0.c2)))AND(t0.c0)))AND(t0.c1)))OR(t0.c0)) END FROM rt0, t0 WHERE (((0X616608c3)-(0Xfffffffffff8bb14)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE ((t0.c0)+(t0.c0))  WHEN (((t0.c1, t0.c1, rt0.c2))>((t0.c0, t0.c1, rt0.c2))) THEN MIN(t0.c0) END, ((((LOWER(rt0.c2))OR(rt0.c0 COLLATE RTRIM)))OR(MIN(t0.c1))), (((t0.c1)) NOT BETWEEN ((((NULL)/(rt0.c0)))) AND ((x''))) FROM t0;SELECT LEAD(CASE WHEN t0.c2 THEN rt0.c1 END COLLATE NOCASE, ((((rt0.c1) BETWEEN (t0.c1) AND (rt0.c2))) NOT BETWEEN (((t0.c0)&(t0.c1))) AND (rt0.c2 COLLATE BINARY)), t0.c0 COLLATE BINARY) OVER ( ORDER BY t0.c0 DESC  NULLS FIRST, CASE WHEN (NULL IN (NULL)) THEN CAST(t0.c2 AS BLOB) ELSE ((rt0.c1)>>(0.7137327099428282)) END  NULLS LAST), (((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((CASE t0.c0  WHEN t0.c2 THEN rt0.c0 END))), (((rt0.c1)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END)) AND (((- (rt0.c0))))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((((rt0.c1, '*LW\n~K#', t0.c1))!=((rt0.c0, rt0.c0, t0.c2)))) BETWEEN ((((t0.c1)) BETWEEN ((rt0.c0)) AND ((t0.c1)))) AND (COUNT(*))) FROM t0 WHERE (((NULLIF('\r뼖', 0x16c4bd64)) BETWEEN (((((0.7247906496498517)OR(x'')))OR(NULL))) AND (CAST(x'cd55' AS NUMERIC)))) LIMIT -1665722133 OFFSET -2129249127;SELECT DISTINCT CAST(CASE t0.c1  WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END AS TEXT) FROM rt0, t0 WHERE (((((((x'')AND(NULL)))AND(NULL)))<=(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (t0.c1 COLLATE RTRIM IN ()), (NOT ((((rt0.c1))>=((t0.c1))))), (- (((t0.c0)=(t0.c0)))) FROM rt0;SELECT (- (((t0.c1)GLOB(t0.c1)))) FROM t0, rt0 WHERE ((+ (LIKELIHOOD(DISTINCT '1054721709', 0.31906907072340707)))); -- 0ms;
SELECT DISTINCT TIME(t0.c0 COLLATE BINARY, rt0.c0 COLLATE NOCASE, rt0.c1, COUNT(t0.c2), ((rt0.c0) IS FALSE)), (((CAST(rt0.c2 AS BLOB)))>=(((((rt0.c2, t0.c1, 0.5064204730977068)) NOT BETWEEN ((t0.c1, x'', t0.c2)) AND ((rt0.c1, t0.c1, rt0.c0)))))), x'' FROM rt0 WHERE ((((0xffffffffd07d6952 COLLATE RTRIM))<=((LIKELY(0xffffffffabfd0982)))));SELECT DISTINCT ((((rt0.c0)!=(NULL))) NOT BETWEEN ((~ (t0.c1))) AND (((rt0.c0)>(t0.c0)))) FROM t0, rt0; -- 0ms;
SELECT ALL ((((((((((t0.c2)AND(t0.c0)))AND(t0.c2)))AND(t0.c1)))AND(713958551))) NOT BETWEEN (NULLIF(DISTINCT rt0.c2, t0.c2)) AND (((t0.c1) NOT NULL))) FROM rt0;SELECT CHANGES() FROM rt0 WHERE (((((x'' COLLATE NOCASE)AND((+ (0.37978212790298704)))))AND(LTRIM(NULL, NULL)))) GROUP BY CAST(NULL COLLATE NOCASE AS NUMERIC) HAVING ((t0.c0 COLLATE RTRIM) NOT BETWEEN ((((rt0.c0))<=((rt0.c0)))) AND ('416123121'));SELECT rt0.c0 FROM t0, rt0; -- 1ms;
SELECT ALL ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CAST(t0.c1 AS REAL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))), (((((rt0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (TOTAL(t0.c0)) AND (((t0.c1)&(rt0.c1)))), (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))<=(CASE WHEN rt0.c2 THEN t0.c2 END)) FROM rt0 WHERE (((('208922809', '*>4G/|K', 0.8116047873032709)) BETWEEN (((('-947075988') IS TRUE), (+ (NULL)), x'')) AND ((((((((((0.10288702981389608)OR(266072168)))AND('232881323')))AND(NULL)))AND(x'')), ((0.8139074718075264) IS TRUE), ((x'') NOT BETWEEN ('') AND (x'a5bd'))))));SELECT ALL ((((('780648214'))>((t0.c2)))) IS FALSE), ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((((t0.c1))<>((rt0.c0)))) AND (0.7488598242662463)), ((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)) COLLATE BINARY FROM t0, rt0 WHERE (CAST((NULL IN ()) AS TEXT)); -- 0ms;
SELECT DISTINCT (- (((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)))) FROM rt0;SELECT DISTINCT ((MAX('-408645203'))*(highlight(t0.c0, t0.c1, rt0.c0, t0.c2))), CAST(((((t0.c1)OR(rt0.c2)))OR(rt0.c0)) AS REAL), GROUP_CONCAT(CAST(t0.c2 AS REAL)) FROM rt0, t0 GROUP BY UNLIKELY((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c2))));SELECT '-1572260091' FROM rt0; -- 0ms;
SELECT (((rt0.c1 IN (rt0.c2)))<((((t0.c2))>((t0.c2))))) FROM t0;SELECT DISTINCT rt0.c2, CASE ((rt0.c1) BETWEEN (rt0.c1) AND (x''))  WHEN LIKELY(DISTINCT -4.56408502E8) THEN (((rt0.c2, rt0.c2, t0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))) END, t0.c0, (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ()), (((CAST(rt0.c1 AS TEXT)))<(((t0.c1 IN ())))) FROM t0;SELECT DISTINCT 0.8139074718075264 FROM t0; -- 1ms;
SELECT ALL t0.c2 FROM rt0;SELECT ((rt0.c2 COLLATE NOCASE) ISNULL) FROM rt0, t0; -- 0ms;
SELECT DISTINCT json_valid(((t0.c2) IS TRUE)) FROM t0 ORDER BY ((x'' IN ()) IN (((((rt0.c0)AND(t0.c2)))AND(t0.c2)), t0.c1)) ASC  NULLS LAST, CAST(x'714fd37b' AS INTEGER) COLLATE NOCASE;SELECT DISTINCT COUNT(*) OVER () FROM rt0 LIMIT -207757872; -- 0ms;
SELECT DISTINCT NTILE('ࣃw?c') OVER (), (NOT (CAST(t0.c1 AS BLOB))), COALESCE(DISTINCT '_2 ', (((t0.c2))<((t0.c1)))), NULL, t0.c0 FROM rt0, t0 WHERE ((((((NULL) IS TRUE), CAST('0.5064204730977068' AS INTEGER), COALESCE(DISTINCT 0.8707879113949077, NULL)))<=(((((0.6632288965431665, NULL, -1.061423202E9, 0xfffffffff32057ae, 0x336ce9dc)) NOT BETWEEN (('0.49543804713199247', NULL, 0x16c4bd64, NULL, '535659232')) AND ((NULL, 0xc73e8b9, 0.4435818708031294, x'', '-1024844790'))), json('.p<wP6ဇ'), 2.140166398E9))));SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((rt0.c2))))||(((t0.c2)>=(x'')))) FROM t0 ORDER BY '!84K'  NULLS FIRST, '' ASC  NULLS FIRST;SELECT COALESCE(CASE WHEN t0.c2 THEN x'' ELSE t0.c2 END, -2.18275107E8) FROM t0, rt0 GROUP BY CAST((rt0.c0 IN ()) AS REAL) HAVING ((((t0.c0) IS FALSE)) NOT BETWEEN (((t0.c2)IS(rt0.c2))) AND (HEX(rt0.c1))); -- 0ms;
SELECT DISTINCT CASE WHEN (- (t0.c2)) THEN AVG(rt0.c2) ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c2))) END, ((x'8839') NOT BETWEEN ((((t0.c2))<((t0.c2)))) AND (((rt0.c2) NOTNULL))), COUNT(*) FROM t0;SELECT DISTINCT (((CASE WHEN rt0.c1 THEN rt0.c1 END, ((rt0.c1)IS NOT(rt0.c0)), (t0.c0 IN (rt0.c2, t0.c1)), (((rt0.c1))>((rt0.c1))), ((rt0.c0)>>(rt0.c0))))>=((((0.3551475115114645) NOT BETWEEN (x'') AND (rt0.c2)), 0x37d47e2f, ((t0.c1) NOT NULL), t0.c2, CAST(rt0.c1 AS INTEGER)))), CASE WHEN ((rt0.c2)%(rt0.c1)) THEN (('!Vu')||(t0.c0)) END, (~ (((rt0.c2) IS TRUE))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (~ ('126772187')) FROM rt0, t0 WHERE ((- (((1334174203) NOT BETWEEN (0.5511474159388028) AND (x''))))) LIMIT -2026243566; -- 0ms;
SELECT ALL NTILE((((rt0.c2))>((((((t0.c2)AND('-207757872')))OR(t0.c2)))))) OVER (), GROUP_CONCAT((NOT (t0.c0))), CUME_DIST() OVER () FROM rt0, t0;SELECT ((((((((((t0.c1)AND(t0.c2)))AND(t0.c1)))AND(t0.c2)))OR(t0.c1))) BETWEEN (((rt0.c0) NOT NULL)) AND (((((t0.c0)AND(-215984210)))OR(t0.c0)))), ((((rt0.c1) NOTNULL))GLOB((t0.c0 IN ()))), ((t0.c1 COLLATE NOCASE) BETWEEN (((((((((rt0.c1)AND(rt0.c1)))AND(t0.c0)))AND(rt0.c0)))OR(rt0.c0))) AND (CAST(t0.c0 AS NUMERIC))) FROM rt0;SELECT DISTINCT t0.c2, LAG(NULL, CASE WHEN (~ (rt0.c1)) THEN NULL END, rt0.c0) OVER ( ORDER BY rt0.c2  NULLS LAST), -850567380 FROM rt0, t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), (('#ezxHp')=(((t0.c2) ISNULL))), ((((((x'9706', t0.c2, rt0.c1))<>((rt0.c0, rt0.c2, t0.c0))), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)), CAST(t0.c1 AS TEXT), x'', ((((rt0.c2)AND(0.10288702981389608)))AND(t0.c0))))==((rt0.c2, CASE WHEN rt0.c0 THEN rt0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END, rt0.c0 COLLATE NOCASE, CASE rt0.c2  WHEN rt0.c1 THEN t0.c1 END, CAST(rt0.c1 AS BLOB)))) FROM rt0, t0 WHERE (0.16792192602828093); -- 0ms;
SELECT DISTINCT ((((rt0.c0)/(t0.c0)))%((1509751384 IN ()))) FROM rt0, t0 WHERE ((- (CASE 0.7071241725254583  WHEN 2.61801432E8 THEN 0.3868315659236734 END))) LIMIT -1354085709 OFFSET 485977656; -- 0ms;
SELECT DISTINCT (NOT ((NOT (rt0.c0)))), CASE (('')<>(t0.c2))  WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2)) THEN ((((t0.c2)OR(t0.c1)))AND(0.6223330324542203)) ELSE COUNT(t0.c0) END, DATE(((t0.c2)*(rt0.c1)), (t0.c2 IN ()), MAX(t0.c1)) FROM rt0, t0 WHERE (((((0.03632781137497465)<(x''))) NOT BETWEEN (-350481783 COLLATE BINARY) AND (CAST(0.6959941559776897 AS INTEGER)))); -- 1ms;
SELECT ((NULL) NOT NULL) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (rt0.c2) AND (x'')), t0.c1, (((rt0.c2) BETWEEN (t0.c2) AND (t0.c1)) IN ()) FROM rt0, t0 WHERE (((((((x'', NULL, '0.8707879113949077'))<(('\n', NULL, '')))))<=(((('덏7222816414783136144:7012996728642910555-355085871567778282 -7151549960248655775TK5')|('261801432')))))); -- 0ms;
SELECT DISTINCT CAST(LIKELY(rt0.c1) AS REAL), ((((t0.c0)GLOB(t0.c1))) BETWEEN (((t0.c0)LIKE(rt0.c0))) AND (((rt0.c2) IS TRUE))), (- (((rt0.c1) NOTNULL))), (t0.c0 IN ()), (((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND (((~ (t0.c1))))) FROM t0;SELECT ALL (+ ((((0.5447582973897698, NULL, NULL)) NOT BETWEEN (('-982781307', t0.c2, rt0.c2)) AND ((rt0.c0, t0.c0, rt0.c1))))) FROM rt0 WHERE (CAST(0xffffffffd225479e COLLATE RTRIM AS INTEGER));SELECT DISTINCT TRIM(DISTINCT (((rt0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c1))), CASE rt0.c1  WHEN rt0.c0 THEN t0.c2 ELSE t0.c1 END), LAG(CASE ((rt0.c1)>>(rt0.c0))  WHEN (((('F덏')OR(rt0.c1)))AND(rt0.c2)) THEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) WHEN 0.26921343908169915 THEN (NOT ('-1137659220')) WHEN (rt0.c1 IN (rt0.c1)) THEN COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c2, rt0.c2) END, (((((rt0.c0)<=('-1807560352'))))>(((NULL IN ())))), ((rt0.c0 COLLATE NOCASE)%(((rt0.c2) IS TRUE)))) OVER (), CASE WHEN ((((((((((((rt0.c2)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))AND(t0.c1)))OR(t0.c1)))AND(t0.c2)) THEN ((t0.c1)LIKE(rt0.c0)) ELSE ((('1727097892'))>=((rt0.c0))) END FROM rt0;SELECT ((((rt0.c1)OR(0.3297003863282706)))OR(t0.c1 COLLATE BINARY)) FROM rt0 WHERE (CASE SUBSTR(0x3f626522, 0x65a96976)  WHEN json_extract(-918342177, '0.03632781137497465') THEN x'' COLLATE RTRIM ELSE 0.036330871078457894 COLLATE RTRIM END);SELECT CAST(((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))AND(rt0.c2)) AS INTEGER), COALESCE(((t0.c2)<('-850567380')), CASE t0.c1  WHEN t0.c2 THEN rt0.c2 END, (t0.c0 IN (t0.c0)), rt0.c1), NULL COLLATE BINARY FROM t0 GROUP BY ((CASE 0Xffffffffe7a491ad  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END) NOT BETWEEN (((rt0.c1)!=(rt0.c2))) AND (((t0.c2)%(rt0.c0))));SELECT DISTINCT ((((t0.c1) NOTNULL)) IS TRUE), (- (LIKE(t0.c0, t0.c1))), COUNT(((rt0.c0)-(t0.c1))) OVER () FROM rt0;SELECT ALL CASE rt0.c1 COLLATE NOCASE  WHEN (('>谷A')LIKE(rt0.c2)) THEN ((((t0.c1)OR(rt0.c1)))OR(t0.c1)) END FROM rt0 WHERE (json_extract(((0.16075595894223416) NOT BETWEEN (1536811166) AND (NULL)), CASE x''  WHEN -1793090203 THEN NULL END));SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((CASE t0.c1  WHEN rt0.c1 THEN t0.c0 ELSE t0.c2 END)) AND ((CAST(t0.c0 AS REAL)))), ((((rt0.c2)||(rt0.c2)))>((rt0.c2 IN ()))), (((((rt0.c0, t0.c0, t0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, t0.c2, t0.c1)))) NOT NULL) FROM rt0 WHERE (x'');SELECT ALL LOWER(CASE rt0.c0  WHEN rt0.c1 THEN t0.c2 ELSE rt0.c1 END) FROM rt0;SELECT ALL (~ ((((rt0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c2))))), (((- (t0.c0))) IS FALSE), 0xffffffffd1e88c95 FROM t0, rt0 WHERE ((('26741100' COLLATE BINARY)>=((((NULL))>(('/t')))))) LIMIT 1976651956; -- 1ms;
SELECT ALL COUNT(*), ((((((x'')AND(NULL)))OR(NULL)))LIKE(-2040336501)), rt0.c0 FROM t0 GROUP BY ((t0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (CAST(t0.c2 AS NUMERIC))) ORDER BY rt0.c0;SELECT DISTINCT GROUP_CONCAT(((rt0.c1) NOT BETWEEN (t0.c0) AND ('-1062736201'))) OVER (), '!f?5', CAST(CAST(t0.c2 AS NUMERIC) AS REAL) FROM t0, rt0 WHERE ((('-216120543')<(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT NULL) COLLATE RTRIM, ((COALESCE(DISTINCT t0.c0, t0.c1)) BETWEEN (CASE t0.c0  WHEN rt0.c2 THEN t0.c1 ELSE rt0.c0 END) AND (0.5953182180452646)), CASE CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c1 END  WHEN CAST(t0.c0 AS NUMERIC) THEN t0.c0 COLLATE BINARY WHEN CAST(rt0.c1 AS BLOB) THEN CASE WHEN rt0.c1 THEN rt0.c0 END WHEN (rt0.c1 IN (rt0.c0, t0.c2)) THEN (t0.c2 IN ()) ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c1)) END FROM t0;SELECT ALL (((((~ (rt0.c2)))OR(rt0.c0 COLLATE BINARY)))OR(UPPER(DISTINCT x''))), CUME_DIST() OVER (), CASE WHEN CASE WHEN t0.c1 THEN rt0.c0 END THEN x'' ELSE t0.c0 END FROM rt0 WHERE (((0.3624584061590944)-((0x6e2d09ab IN ()))));SELECT ALL CASE ((rt0.c0)<>(t0.c1))  WHEN CASE WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN rt0.c2 THEN t0.c1 END THEN TOTAL(t0.c2) ELSE rt0.c0 COLLATE NOCASE END, ((((((((((rt0.c2)AND(t0.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))|(CAST(rt0.c0 AS TEXT))), ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c0 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c2 THEN t0.c1 WHEN rt0.c1 THEN t0.c1 END)|(rt0.c2)) FROM t0 WHERE (CASE CASE 790538739  WHEN '0.5511474159388028' THEN NULL WHEN '0.03632781137497465' THEN 0Xf9ac5d8 WHEN NULL THEN 0.9319331212994476 ELSE x'' END  WHEN ('勔A' IN ()) THEN (('1711440753') BETWEEN ('-1174048343') AND (588053989)) END);SELECT DISTINCT (+ ((+ (t0.c2)))) FROM t0, rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c1))>((rt0.c1))) IN ()), rt0.c1, (((((rt0.c0))<>((t0.c2))))IS NOT(((((t0.c0)OR(t0.c2)))OR(t0.c0)))), CASE ((t0.c1)<(t0.c1))  WHEN ((t0.c2) NOT NULL) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) BETWEEN (t0.c1) AND (NULL)) THEN (rt0.c0 IN ()) WHEN '-76774393' THEN t0.c1 ELSE CAST(rt0.c2 AS TEXT) END, (((rt0.c1 IN ()))!=(t0.c2)) FROM t0, rt0 WHERE (((('936672815' IN ()))<(((0.5181906092933779) IS TRUE)))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2)||(x'')) THEN x'' WHEN (((NULL, rt0.c1, '', t0.c0, t0.c1)) BETWEEN ((t0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1, rt0.c2, 0.4007414623729434))) THEN ((rt0.c2)+(rt0.c2)) WHEN ((rt0.c1)>(t0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END, (+ ('194677075')) COLLATE NOCASE, ((((x'')AND(((t0.c1)<=(NULL)))))AND(rt0.c2 COLLATE NOCASE)), -1793090203, CASE WHEN ((rt0.c1)&(rt0.c0)) THEN ('gX' IN ()) ELSE CAST(t0.c1 AS REAL) END FROM rt0 GROUP BY 0.6634720072096324, (((rt0.c0, rt0.c0, t0.c1, t0.c2, t0.c2)) NOT BETWEEN (((+ (rt0.c2)), 0.13858137383059954, ((rt0.c0)||(rt0.c2)), ((rt0.c0)-(rt0.c2)), ((t0.c0)*(rt0.c2)))) AND ((LIKELY(DISTINCT t0.c2), (((rt0.c1, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, rt0.c0, t0.c2)) AND ((t0.c0, -4.08645203E8, t0.c2))), IFNULL(rt0.c2, rt0.c0), x'', NULLIF(rt0.c1, t0.c1)))), ((-1e500)OR(((((((((t0.c2)AND(rt0.c2)))OR(t0.c0)))OR(rt0.c1)))OR(rt0.c0)))), (t0.c0 IN ()), ((((rt0.c0)OR(t0.c2 COLLATE NOCASE)))OR((((t0.c2, t0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, rt0.c2, rt0.c0)) AND ((t0.c0, 'n#\r덏Iw', rt0.c2))))) HAVING ((CASE WHEN rt0.c0 THEN t0.c1 ELSE t0.c1 END)IS NOT((rt0.c1 IN ()))) LIMIT -546150510 OFFSET -2047951491;SELECT ROW_NUMBER() OVER () FROM t0, rt0 WHERE ((((1703717717 IN ('1330673136')))AND(CAST('-2040336501' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT LOWER(MAX(rt0.c2)) FROM t0, rt0 WHERE (CASE NULLIF(DISTINCT x'', 'ᣫ+I/ue')  WHEN ((('', 'g{_M࠱+v', NULL))!=((0.5260600801456744, '', x''))) THEN CHAR(NULL) END) ORDER BY (~ ((t0.c1 IN ()))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c0, ((GROUP_CONCAT(t0.c1))&(((((t0.c1)AND('149699523')))OR(rt0.c1)))), CASE WHEN ((((t0.c2)OR(t0.c2)))OR(t0.c2)) THEN t0.c2 END FROM rt0 WHERE (CAST(CAST('1727097892' AS TEXT) AS NUMERIC)) ORDER BY ((json_insert('', rt0.c2, rt0.c0))/(((t0.c2)==(t0.c1)))) ASC;SELECT DISTINCT rt0.c2, ((CAST(t0.c0 AS REAL)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND ((- (t0.c0)))), LOWER(DISTINCT t0.c0) COLLATE NOCASE, (((t0.c2) NOTNULL) IN ()), (((((((rt0.c2))<>((rt0.c2))))AND(((((t0.c1)AND(t0.c1)))OR(t0.c2)))))AND((0.3551475115114645 IN ()))) FROM rt0, t0; -- 0ms;
SELECT ((CAST(t0.c1 AS NUMERIC))OR('')) FROM t0; -- 0ms;
SELECT ALL ((t0.c1 COLLATE RTRIM) BETWEEN (((t0.c1) NOTNULL)) AND (t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT (((rt0.c2, rt0.c2, t0.c0, rt0.c1, t0.c0)) BETWEEN (((- (t0.c2)), CAST(rt0.c1 AS NUMERIC), (((rt0.c1))>((t0.c0))), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), (((rt0.c0))<((t0.c1))))) AND ((((t0.c1) NOT NULL), ((t0.c0) NOTNULL), ((rt0.c0)OR(rt0.c2)), CAST('0.05053861706975138' AS TEXT), ((rt0.c1) BETWEEN (t0.c0) AND (t0.c2))))) FROM t0, rt0; -- 0ms;
SELECT COUNT(*), 713958551, (((~ (t0.c1))) NOT NULL) FROM rt0, t0 WHERE ((((x'', 1727097892, '-1896598524')) BETWEEN ((-814654904, x'', 0.5748526679708001)) AND (('傴Rbe', '-548934974', NULL))) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT PERCENT_RANK() OVER (), RANK() OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE TIES), '' FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((COUNT(0.49543804713199247)) BETWEEN (MIN(2.66072168E8)) AND (((t0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))), (((((rt0.c2, rt0.c2, t0.c2))<((t0.c1, rt0.c0, rt0.c2))))=(NULL)), (((rt0.c2, t0.c2, rt0.c0)) NOT BETWEEN ((UNLIKELY(t0.c2), rt0.c0, x'')) AND ((t0.c0 COLLATE RTRIM, ABS(x''), (((t0.c0)) BETWEEN ((NULL)) AND ((x'')))))), AVG((((t0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c2)))), ((NULL) BETWEEN (((((((((rt0.c0)AND(t0.c2)))AND(rt0.c0)))OR(t0.c1)))OR(t0.c0))) AND (rt0.c0 COLLATE NOCASE)) FROM t0 WHERE (CASE WHEN (((((((((((('731997260')AND(0.31475544918526943)))OR(x'')))OR(x'')))AND(x'')))AND(NULL)))OR(x'')) THEN ((((-2.16120543E8)OR('*Q9fNz5#')))OR(x'')) ELSE UPPER(-306498448) END) GROUP BY (((t0.c0 IN ()))<<((- (rt0.c2)))) HAVING UPPER(DISTINCT ((t0.c1) IS TRUE));SELECT DISTINCT (rt0.c0 IN ()) COLLATE RTRIM FROM t0 WHERE ((((NOT ('-847922844'))) NOT NULL)) GROUP BY t0.c1 HAVING CAST(((((((((rt0.c0)AND(rt0.c1)))OR(t0.c1)))AND(t0.c1)))AND(rt0.c0)) AS INTEGER) LIMIT -1062736201 OFFSET 1971916259;SELECT DISTINCT ((t0.c0) IS FALSE) COLLATE NOCASE, COUNT(*), SUM(CASE WHEN t0.c1 THEN rt0.c2 END) FROM t0 WHERE ((((('551420640') BETWEEN (NULL) AND ('#)\ >T0\'))) ISNULL));SELECT DISTINCT CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM FROM t0, rt0; -- 0ms;
SELECT ((rt0.c2 IN ()) IN ()) FROM t0, rt0 UNION ALL SELECT CASE t0.c0  WHEN t0.c2 THEN rt0.c2 END COLLATE NOCASE COLLATE NOCASE FROM rt0 WHERE ((('s/|u' COLLATE RTRIM) NOTNULL)) GROUP BY rt0.c2, ((((rt0.c2)%(rt0.c0))) BETWEEN ((- (rt0.c0))) AND (CAST(t0.c2 AS TEXT))), CAST(rt0.c2 AS INTEGER) COLLATE BINARY, ((t0.c2)+(((((rt0.c2)OR(t0.c0)))AND(rt0.c2)))), ((UPPER(DISTINCT rt0.c2))!=((+ (t0.c1))));SELECT ALL (((rt0.c0)) BETWEEN ((((x'572a') BETWEEN (t0.c2) AND (rt0.c2)))) AND ((((((((((rt0.c2)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c2))))), SUM(CASE WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN '-701836048' THEN 2097794125 ELSE t0.c1 END), ((((0.6223330324542203)>(rt0.c1))) BETWEEN ('1480074125') AND (NULL)) FROM t0, rt0 GROUP BY ((((((((((((((((t0.c2)AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(((((rt0.c0)OR(t0.c0)))AND(1553541049)))))AND((+ (t0.c1)))))OR((rt0.c2 IN ()))))OR(rt0.c2 COLLATE RTRIM)); -- 0ms;
SELECT ALL ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((rt0.c2) NOTNULL)) AND ((((t0.c0, rt0.c1, t0.c0))<((rt0.c0, rt0.c2, rt0.c0))))) FROM rt0, t0; -- 0ms;
SELECT ALL ((ABS(rt0.c2)) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (-1.13765922E9))) AND ((rt0.c2 IN (t0.c0)))), ((rt0.c2)IS(t0.c2)) COLLATE BINARY, rt0.c1 FROM rt0 GROUP BY ((t0.c2 COLLATE RTRIM)>>(NULL)) HAVING (CAST('AtrJⵐ&C' AS NUMERIC) IN ());SELECT (((((rt0.c2, rt0.c2, rt0.c0))==((NULL, t0.c2, t0.c1))))>(((0.8478009149961305) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM t0, rt0 GROUP BY (~ (rt0.c0)) COLLATE BINARY COLLATE NOCASE HAVING ((ABS(t0.c0)) ISNULL); -- 0ms;
SELECT HEX(DISTINCT (((rt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1)))) FROM rt0, t0 WHERE ('Y5j[aL(z'); -- 0ms;
SELECT DISTINCT DATE('', ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)), t0.c1) FROM rt0 WHERE (x'');SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT ALL rt0.c2, (((rt0.c2) NOT BETWEEN (t0.c1) AND ('-456408502')) IN ((t0.c1 IN ()))), (((rt0.c2 COLLATE NOCASE))>((SUM(t0.c2)))) FROM t0;SELECT '' FROM t0 WHERE (CASE WHEN '0.6223330324542203' THEN '0K\rEqn^' WHEN ((0.14851814664543705) BETWEEN (-641631289) AND ('-1430498039')) THEN (NULL IN ()) WHEN ((x'')*(NULL)) THEN ((NULL)<<(0.8707879113949077)) ELSE CAST(x'' AS NUMERIC) END); -- 0ms;
SELECT ((t0.c0)GLOB(((0.4587218317113603)+(t0.c0)))), (-1573676301 IN ()), (NOT (CAST(rt0.c1 AS INTEGER))) FROM rt0 WHERE (TRIM(0.9319471607048921 COLLATE BINARY, LOWER(x'')));SELECT ALL COUNT(*) FROM rt0, t0; -- 0ms;
SELECT ((((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))GLOB(((((((((t0.c0)OR(0.990517268919853)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c2)))) FROM t0 WHERE ((+ ('D(H6夀U갻' COLLATE RTRIM))) ORDER BY ((((t0.c2)%(rt0.c0)))||(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))OR(x'8e2c')))OR(rt0.c0))))  NULLS LAST;SELECT ((t0.c1)OR(rt0.c2)) COLLATE NOCASE FROM rt0, t0 WHERE (((((((739601631)AND(0.10428697972090062)))AND(((NULL)<(0.10288702981389608)))))OR(((x'')>=(NULL))))) LIMIT -1270435867; -- 0ms;
SELECT COUNT(*) OVER (), (NOT (MAX(rt0.c2))), (((((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c1))))<=(((rt0.c1) NOTNULL))) FROM t0, rt0 WHERE ('-1513524316') LIMIT 663730847; -- 0ms;
SELECT ((((rt0.c2) IS FALSE))LIKE('_G_*8z]vz')), ((((CAST(t0.c0 AS BLOB))OR(t0.c2 COLLATE BINARY)))AND(SUM(t0.c2))), 1.054721709E9 FROM t0;SELECT DISTINCT UNLIKELY(DISTINCT t0.c0) COLLATE BINARY FROM rt0, t0 WHERE ((((('Us#()') BETWEEN ('2140166398') AND (-1436113236)))*(CASE '_2 '  WHEN x'' THEN '-1896598524' END))); -- 0ms;
SELECT DISTINCT t0.c2 FROM rt0 WHERE (((((1883327900)%(0xffffffff920ee2ec)))OR(CASE 0.2967419306061023  WHEN NULL THEN '' WHEN 0.5953182180452646 THEN '0.16075595894223416' WHEN '-599757143' THEN '-1665722133' END)));SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c2 END)=(TYPEOF(DISTINCT t0.c0))) FROM rt0 WHERE (0.7987901434709036);SELECT DISTINCT ((CAST(t0.c1 AS TEXT)) NOTNULL), COUNT(*) OVER (), COUNT(*), NTILE((((((((((((((NOT (t0.c2)))AND((t0.c2 IN (t0.c2, t0.c1)))))OR(((0.6632288965431665) NOT NULL))))OR(t0.c2)))AND(((t0.c0)>=(NULL)))))OR((((t0.c0))<=((t0.c0))))))AND((- (t0.c0))))) OVER (), (~ (((rt0.c1) IS FALSE))) FROM t0 WHERE ((((NOT (NULL))) NOT BETWEEN ((('1062777497')>(0.5093949361329153))) AND ((- ('ጮፓih鉱\n銁')))));SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END) BETWEEN (MIN(rt0.c0)) AND (CASE rt0.c2  WHEN rt0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c1 END)) FROM rt0, t0; -- 1ms;
SELECT ALL rt0.c1, (((rt0.c1)<(t0.c0)) IN ()), ((t0.c2)<<(t0.c2)) COLLATE NOCASE FROM t0, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c1)) COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT 'ꗏY]X\flN]', (((((rt0.c0))<((t0.c2))))*((NOT (rt0.c2)))), ((((AVG(t0.c0))OR((t0.c0 IN ()))))AND((((rt0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))) FROM rt0 ORDER BY rt0.c0 ASC;SELECT ALL 0.19228742782100894, ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END)>>(TRIM(x'', rt0.c1))), ROW_NUMBER() OVER () FROM t0 WHERE (TRIM((((('|5U4H')OR('-252178425')))AND(0.17309911341506323))));SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE t0.c1 END)>=(CAST(t0.c2 AS REAL))) FROM t0 WHERE (((('', '-216120543', 0.3640409287653853))<=((0.25995775011891376, NULL, '-483124325'))) COLLATE RTRIM);SELECT DISTINCT rt0.c1, (~ (((t0.c1) BETWEEN (rt0.c1) AND (t0.c2)))), LIKELIHOOD((- (t0.c0)), 0.6189917715701636) FROM t0;SELECT DISTINCT ((((t0.c1)LIKE(t0.c0)))<(((((t0.c1)OR(t0.c0)))AND(rt0.c0)))) FROM t0 NOT INDEXED WHERE ((((NULL)<=('MHpB')) IN ()));SELECT ALL CASE t0.c2 COLLATE RTRIM  WHEN ((rt0.c2) BETWEEN (t0.c0) AND (t0.c2)) THEN rt0.c1 COLLATE NOCASE END FROM t0, rt0 WHERE ((- (CASE ''  WHEN 1424303530 THEN NULL WHEN '-497481364' THEN 26741100 WHEN x'cb47' THEN -941914636 END))) GROUP BY (((((rt0.c0)) BETWEEN ((t0.c1)) AND ((rt0.c0))))OR((t0.c1 IN ()))) HAVING (((CAST(t0.c1 AS TEXT)))<((rt0.c0 COLLATE RTRIM))); -- 1ms;
SELECT ALL (rt0.c0 IN ()) COLLATE BINARY FROM rt0, t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((NOT (t0.c2)))GLOB('y<')), (((rt0.c2))<((t0.c2))) COLLATE RTRIM, LIKELY(t0.c1 COLLATE NOCASE) FROM rt0;SELECT ALL t0.c1 FROM rt0, t0 GROUP BY 0.06823374202703347, ((PRINTF(t0.c2))|(t0.c2)), CAST(((rt0.c1) ISNULL) AS REAL) HAVING (((t0.c2, '', rt0.c0)) BETWEEN ((t0.c1, CAST(t0.c2 AS INTEGER), NULL)) AND ((json_extract(t0.c2, t0.c2, rt0.c0, t0.c1), (((t0.c1))>((t0.c1))), ('-417208903' IN ())))); -- 0ms;
SELECT ALL TOTAL(TYPEOF(t0.c1)) COLLATE NOCASE, ((MAX(rt0.c2))IS NOT(AVG(t0.c2))), GROUP_CONCAT(((((((((((((((((rt0.c0)OR(rt0.c1)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c2)))OR('KI')))OR(NULL)))AND(rt0.c2))) FROM rt0 WHERE ((((x'1fc7' IN ())) NOT BETWEEN (NULL COLLATE NOCASE) AND (CAST(NULL AS TEXT))));SELECT ALL (NULL IN ()), rt0.c0, (+ ((('m*')&(t0.c2)))) FROM t0 WHERE (((CASE WHEN NULL THEN '0.13164305751774052' WHEN NULL THEN x'' WHEN '\]j' THEN 0.09046281807820822 END)<=((((x''))<=((x'')))))) GROUP BY CAST((0.314363968611412 IN ()) AS BLOB);SELECT ALL HEX(((NULL) BETWEEN (rt0.c1) AND (x''))) FROM rt0 LIMIT 1688330047 OFFSET -1706140972; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)<=(rt0.c0)) AS TEXT) FROM t0;SELECT ALL ((t0.c1) BETWEEN ((x'8a30' IN ())) AND (((rt0.c1) BETWEEN (rt0.c2) AND (t0.c2)))), ((CAST(1168715623 AS BLOB))%(((rt0.c0)*(rt0.c1)))), RANK() OVER () FROM t0, rt0 GROUP BY NULL, CASE WHEN ((rt0.c2)+(rt0.c2)) THEN LOWER(rt0.c1) ELSE ((t0.c0)IS(rt0.c1)) END, (((rt0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c2))>=((t0.c2)))))), CASE WHEN ((rt0.c1) IS TRUE) THEN ((((((((t0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)) ELSE (((t0.c1, rt0.c1, t0.c0, t0.c2, rt0.c1)) BETWEEN ((t0.c1, t0.c1, rt0.c1, rt0.c0, NULL)) AND ((rt0.c0, 0xffffffffd28b2ed1, '*-', t0.c2, t0.c0))) END, CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC); -- 1ms;
SELECT DISTINCT 0X2347d8d0 FROM rt0; -- 0ms;
SELECT DISTINCT MIN(CASE t0.c2  WHEN rt0.c1 THEN t0.c1 WHEN rt0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c1 ELSE t0.c1 END) FROM rt0;SELECT ALL x'', TOTAL(((rt0.c2)<>(t0.c1))) OVER (), rt0.c2 FROM rt0, t0; -- 1ms;
SELECT ALL COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL SUM((NOT (rt0.c0))) FROM t0;SELECT DISTINCT ((0X39997062)>=(LIKELY(t0.c0))), ((((t0.c1) NOT NULL))==(((rt0.c1)>(rt0.c0)))), COUNT(CASE WHEN rt0.c1 THEN rt0.c1 ELSE t0.c1 END) FROM rt0, t0 LIMIT -1653893228; -- 0ms;
SELECT ((t0.c0 COLLATE BINARY) NOT NULL) FROM rt0;SELECT ((((((t0.c0)AND(rt0.c1)))OR(t0.c2))) IS FALSE) FROM rt0, t0; -- 0ms;
SELECT CAST(TOTAL(rt0.c0) AS INTEGER) FROM t0 UNION ALL SELECT ALL (((~ (t0.c2)))||(t0.c0 COLLATE BINARY)) FROM t0 GROUP BY LIKELY(TYPEOF(DISTINCT t0.c0)) HAVING (0.046719644702015395 IN ()) LIMIT 381992292 OFFSET -673903030;SELECT DISTINCT ((json_quote(rt0.c2))OR(MIN(rt0.c0))) FROM rt0, t0 WHERE ((NULL IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt0.c1 FROM t0 WHERE (CAST(CASE WHEN '-215984210' THEN '襻V' WHEN '~B' THEN 0.6217612171804504 WHEN NULL THEN x'' END AS TEXT));SELECT DISTINCT CAST(CASE WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c1 WHEN 0.19538801040289255 THEN rt0.c2 WHEN '753648272' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS INTEGER) FROM rt0, t0 ORDER BY rt0.c0 ASC LIMIT -745557127 OFFSET -992270378; -- 0ms;
SELECT DISTINCT '1054721709' FROM rt0; -- 0ms;
SELECT DISTINCT (~ ((t0.c0 IN ()))) FROM rt0 LIMIT -1117963592 OFFSET -694921902; -- 0ms;
SELECT ALL ((((t0.c1)IS(rt0.c0)))<<(((rt0.c0) IS TRUE))) FROM t0, rt0 WHERE (((((x'')<<(NULL))) NOT BETWEEN (NULL) AND ((('1351037177')<(''))))); -- 0ms;
SELECT ((((((x'')OR(x'1d6c')))OR(rt0.c2)))||(((t0.c1) IS TRUE))), (((((-797087406)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))LIKE(CASE rt0.c0  WHEN 0.5759912017353028 THEN rt0.c0 ELSE rt0.c1 END)), (t0.c2 COLLATE BINARY IN ()) FROM rt0 GROUP BY (((0.2709003706960301))!=(((('') NOT BETWEEN (t0.c1) AND (rt0.c2))))), rt0.c2, ((((rt0.c0)/(rt0.c1))) NOT NULL) HAVING 0.5368425640276138 COLLATE NOCASE;SELECT DISTINCT (~ (rt0.c0)) FROM t0, rt0 WHERE (STRFTIME(x'' COLLATE NOCASE, TYPEOF(NULL), ((x'')|(1264741564)))) GROUP BY (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND (((NULL IN ())))) HAVING ((NULL)<<(rt0.c1)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT ((((((((((((t0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(CASE t0.c1  WHEN rt0.c2 THEN 'j' END)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))))OR(CAST(t0.c1 AS NUMERIC))))OR(rt0.c0)) FROM rt0 WHERE (((CAST('tJA~s-' AS TEXT))IS(((((NULL)OR(x'')))AND(''))))) LIMIT 107226231 OFFSET 1459847338;SELECT DISTINCT (+ (TOTAL(0.6560121487336171))) FROM rt0 LIMIT 1213255680 OFFSET -185305863; -- 0ms;
SELECT DISTINCT CASE (((t0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1)))  WHEN (((t0.c0, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, rt0.c2))) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE t0.c2 END ELSE ((((rt0.c1)OR(rt0.c0)))AND(t0.c1)) END, (+ (((t0.c1) IS TRUE))), ((((rt0.c2) IS TRUE)) NOT NULL) FROM t0, rt0 WHERE (((((((((0Xffffffffc2d48ebd)OR(('L5' IN ()))))AND((x'' IN ('1639051094')))))OR(UNLIKELY(0.9117875648317485))))OR(CAST('0.4260382783652321' AS BLOB)))); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0 WHERE ((((((x'') BETWEEN (x'') AND (NULL))))==((CASE WHEN x'8f66' THEN 0x3728419d WHEN -1901621147 THEN NULL WHEN -438521009 THEN 1513489677 ELSE -2131073327 END)))); -- 0ms;
SELECT ALL CAST(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))OR(t0.c0)))AND('#?A''?c*')) AS INTEGER) FROM t0, rt0 WHERE (((CAST(-276718934 AS INTEGER))<=((((NULL)) NOT BETWEEN ((x'')) AND ((0xffffffff96df243d)))))) ORDER BY (((((+ (rt0.c2)))OR(((t0.c0)<<(rt0.c0)))))AND(t0.c0)) DESC  NULLS FIRST, CASE t0.c2  WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY; -- 0ms;
SELECT DISTINCT TOTAL(x'') OVER () FROM t0; -- 0ms;
SELECT (((((t0.c2, rt0.c2, t0.c0, t0.c2, t0.c2))<((rt0.c0, rt0.c1, rt0.c0, rt0.c2, t0.c0))))<=((+ (t0.c2)))) FROM rt0;SELECT DISTINCT ((-797087406) NOTNULL) FROM rt0, t0 LIMIT -252178425 OFFSET -622082120; -- 0ms;
SELECT ABS(DISTINCT t0.c1) COLLATE BINARY FROM t0, rt0; -- 0ms;
SELECT ALL LAST_VALUE(CAST(((rt0.c0) NOTNULL) AS NUMERIC)) OVER () FROM rt0, t0 WHERE (TRIM(((',z굄')LIKE(-1.387458697E9)), TRIM(DISTINCT x''))) LIMIT 545069645; -- 0ms;
SELECT TOTAL(CASE rt0.c1  WHEN rt0.c2 THEN NULL END) OVER (), ((((CAST(rt0.c0 AS INTEGER))OR(((((rt0.c1)AND(t0.c0)))AND(t0.c0)))))OR((rt0.c0 IN ()))), (((- (rt0.c1)))=(CAST(rt0.c0 AS INTEGER))) FROM rt0, t0 WHERE (((((((((((NULL)OR(NULL)))AND(-1741504786)))AND(0.6841093088360979)))AND(x''))) NOT BETWEEN (0.9308290386989843) AND ((('-744975754') NOT BETWEEN ('') AND (0.29974709547938216))))); -- 0ms;
SELECT DISTINCT ((COUNT(t0.c1))/(((rt0.c1)>=(rt0.c2)))) FROM t0;SELECT ALL SUM(((0.9810723815202627) IS FALSE)) FILTER(WHERE CAST(t0.c1 AS BLOB)) OVER () FROM t0 WHERE (((CASE WHEN x'' THEN 1.705601398E9 ELSE -665416649 END) IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT((+ (rt0.c1))), (((((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0))))OR(rt0.c2)))AND(COUNT(*))), (((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1))))<>(((((t0.c0, rt0.c2, t0.c2))<((t0.c1, rt0.c0, '485977656')))))) FROM t0, rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT DISTINCT (((~ (t0.c1))) NOTNULL) FROM t0 WHERE ((((((NULL)) BETWEEN (('-2049983119')) AND ((0Xffffffffffffffff)))) ISNULL)) GROUP BY ((0.901920207758872)LIKE('ӳ')) HAVING -1528532190; -- 0ms;
SELECT NULL FROM rt0 WHERE (((CAST('x|qVg' AS REAL))>>(x'f854' COLLATE NOCASE))); -- 0ms;
SELECT ((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY FROM t0 GROUP BY (((((((t0.c0, t0.c0, t0.c2))<>((rt0.c0, t0.c2, t0.c1))))AND((((t0.c2))<=((t0.c0))))))OR(CASE WHEN 0.6959941559776897 THEN rt0.c0 ELSE rt0.c1 END));SELECT DISTINCT ((((t0.c2)>>(t0.c1)))<=(((t0.c1)>(rt0.c1)))) FROM t0;SELECT DISTINCT RANK() OVER () FROM rt0 WHERE (((((0.9263877616154936) NOT NULL)) BETWEEN (((((((((((((((((x'')AND(x'')))OR(x'')))OR(NULL)))OR('&⒗.⦼V')))AND('0.971137731825614')))AND(0.32219078305090354)))OR(0xd8675eb)))AND(0.18612494108778754))) AND ((('-854572976') NOT BETWEEN (0.651874547300632) AND (''))))) GROUP BY SQLITE_COMPILEOPTION_USED(t0.c2 COLLATE RTRIM) HAVING ((rt0.c2 IN ()) IN ((rt0.c0 IN ())));SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY load_extension((((NULL))<((t0.c2))))) FROM rt0, t0 WHERE (((('Rvi''INjT')AND(NULL)) IN ())) ORDER BY ((((rt0.c0) BETWEEN (t0.c2) AND (1210156272)))<=((+ (rt0.c0)))) DESC  NULLS FIRST, (~ ((((((((('⛟5lBZ	')AND(rt0.c1)))AND(t0.c1)))AND(t0.c1)))OR(rt0.c0)))); -- 0ms;
SELECT CAST(LIKELIHOOD(DISTINCT t0.c1, 0.3292752100046319) AS NUMERIC) FROM t0 WHERE (UNICODE((('') IS FALSE))) LIMIT 232881323 OFFSET -1903347401; -- 0ms;
SELECT DISTINCT (((((t0.c2) BETWEEN (rt0.c0) AND (t0.c2)), SUM('-626271278'), ((((rt0.c1)AND(rt0.c1)))OR(t0.c2))))<=((((rt0.c0)IS NOT(t0.c1)), ((t0.c0)<(t0.c2)), json_quote(rt0.c2)))), ((((((((((('+{', rt0.c1, t0.c2, rt0.c2, rt0.c1))<((t0.c0, rt0.c2, t0.c1, rt0.c2, rt0.c1))))OR((NOT (t0.c0)))))AND((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((x''))))))OR(CAST(t0.c2 AS REAL))))AND((NOT (rt0.c2)))), t0.c2 FROM t0 NOT INDEXED, rt0; -- 0ms;
SELECT CAST((('듭SUJ') ISNULL) AS REAL), LAG((~ (0.7488598242662463)), ((((rt0.c0)-(t0.c2))) NOT BETWEEN (t0.c2) AND (((t0.c0) IS FALSE))), rt0.c2) OVER (), NTILE((((t0.c2)>=(rt0.c1)) IN ())) OVER () FROM t0, rt0 WHERE (CAST((NOT (NULL)) AS INTEGER)); -- 0ms;
SELECT ALL LEAD((('-456408502')<=(CAST(rt0.c1 AS INTEGER))), ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) COLLATE BINARY, rt0.c0) OVER ( PARTITION BY ((NULL)<((t0.c1 IN ()))), ((rt0.c1)==(rt0.c1)) COLLATE NOCASE COLLATE NOCASE), rt0.c0, SQLITE_COMPILEOPTION_USED(NULL) FROM rt0; -- 0ms;
SELECT (((rt0.c1)) BETWEEN ((rt0.c0)) AND (((((rt0.c0, rt0.c2, t0.c2))==((t0.c0, '-1024844790', t0.c2)))))) FROM rt0;SELECT CAST(0Xffffffffd89890bb AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT (((((0.9267813067861815))<((x'')))) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (rt0.c0))) AND (UNLIKELY(0.5447582973897698))) FROM t0;SELECT ALL CASE WHEN ((((((((((((t0.c1)OR(t0.c2)))OR(rt0.c1)))OR(t0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(t0.c2)) THEN (- (t0.c0)) WHEN ((rt0.c1) BETWEEN (t0.c2) AND (NULL)) THEN (t0.c1 IN ()) WHEN (((rt0.c2))>((rt0.c1))) THEN t0.c0 COLLATE BINARY ELSE CAST(t0.c1 AS INTEGER) END FROM rt0, t0 ORDER BY ((((t0.c1))=((rt0.c2))) IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS TRUE)) NOTNULL), ((((((((t0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(rt0.c2)) COLLATE RTRIM, ((NULLIF(DISTINCT t0.c0, 'kR)*')) NOT BETWEEN (((rt0.c2)*(t0.c2))) AND (((rt0.c2)GLOB(rt0.c1)))) FROM rt0;SELECT DISTINCT LAST_VALUE(((((((((((((NULL)AND(rt0.c0)))AND(0.6042726831166966)))OR(rt0.c2)))AND(rt0.c1)))AND(((NULL) NOT BETWEEN (NULL) AND (rt0.c0)))))AND((('X䈮')>>(rt0.c1))))) OVER () FROM rt0 WHERE (json_remove((((('208922809')AND(NULL)))AND(x'')), NULL COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (CAST(t0.c1 AS REAL) IN ()) FROM rt0 WHERE (-1137659220); -- 0ms;
SELECT ((((t0.c0) NOT NULL)) NOT NULL) FROM t0 WHERE (((((((((NULL COLLATE BINARY)AND(CASE WHEN NULL THEN NULL WHEN '' THEN x'' WHEN 'DshR' THEN x'' ELSE NULL END)))OR(((-1.270435867E9)<>('-360993270')))))AND((NOT (0.7382655523870336)))))OR((- (x''))))); -- 1ms;
SELECT DISTINCT NULL, ((rt0.c2) IS TRUE) COLLATE NOCASE, (TOTAL(t0.c2) IN (((t0.c1) NOTNULL), ((t0.c1)+(t0.c1)))), (x'cbed' COLLATE RTRIM IN (json_patch(rt0.c2, rt0.c0), NULL)), ((((((((MIN(rt0.c2))OR(CAST(t0.c0 AS BLOB))))OR(((rt0.c0)==(t0.c2)))))OR(NULL)))AND(MAX(rt0.c0))), ((COUNT(rt0.c1))+(t0.c0)), CASE ((rt0.c1)*(rt0.c2))  WHEN ((t0.c1)>=(t0.c1)) THEN ((rt0.c2)OR(rt0.c1)) END FROM rt0, t0; -- 0ms;
SELECT CASE WHEN (+ (t0.c0)) THEN '-548934974' END, ((((((((((t0.c1)OR(t0.c1)))OR(t0.c1)))AND(rt0.c0)))OR(rt0.c2))) ISNULL), '753648272' FROM rt0 WHERE (((NULL)GLOB((x'' IN ('581569413')))));SELECT DISTINCT '+{', ((((((t0.c1) BETWEEN (t0.c0) AND (rt0.c2)))OR(LENGTH(t0.c1))))AND(NULL)), ((CAST(t0.c0 AS INTEGER))IS NOT(t0.c1)) FROM rt0;SELECT DISTINCT MIN(LTRIM(rt0.c2)), CAST(((rt0.c0)GLOB(rt0.c2)) AS REAL), ((((t0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (CAST(t0.c0 AS TEXT)) AND (COUNT(rt0.c0))) FROM rt0, t0 WHERE (((x'' COLLATE BINARY)&(CASE NULL  WHEN NULL THEN NULL WHEN '' THEN 'yHr䪈{EY' WHEN 0.7085621249836712 THEN '-1949081134' WHEN NULL THEN 0.09553816691148076 WHEN x'' THEN x'' END))) ORDER BY '-797087406'  NULLS FIRST, ((((((((t0.c1)OR(((rt0.c2) IS FALSE))))OR(rt0.c1)))OR(NULLIF(rt0.c2, rt0.c1))))OR((rt0.c0 IN ())))  NULLS LAST, t0.c0  NULLS LAST LIMIT -1704701210 OFFSET 852062895; -- 0ms;
SELECT DISTINCT (((((((((((rt0.c0))==((t0.c0))))OR(((t0.c0)||(t0.c2)))))OR(((t0.c1) IS FALSE))))OR(MIN(t0.c0))))OR(((t0.c0) NOT BETWEEN (0x47c8b4ed) AND (t0.c1)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c1) BETWEEN (rt0.c0) AND (t0.c0)))AND(CAST(t0.c1 AS INTEGER))))AND(x'')) FROM rt0, t0 WHERE (((((NULL)IS(-2.129249127E9))) NOT BETWEEN ((+ (0x641c585c))) AND (((NULL)AND(x''))))); -- 0ms;
SELECT DISTINCT ((- (rt0.c1)) IN ((t0.c2 IN ()), ((t0.c2) IS TRUE))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT '462782226' FROM t0, rt0 WHERE (((NULL COLLATE NOCASE)-('1011361453'))) GROUP BY LIKE(x'', NULL); -- 0ms;
SELECT COUNT(CAST(rt0.c2 AS REAL)) FROM rt0, t0 NOT INDEXED WHERE ((- (CAST(0.9263877616154936 AS BLOB)))); -- 0ms;
SELECT DISTINCT t0.c0, CASE MIN(rt0.c1)  WHEN CAST(1.7976931348623157E308 AS NUMERIC) THEN ((rt0.c2)>(rt0.c2)) END, rt0.c0 FROM t0;SELECT DISTINCT t0.c2 FROM rt0;SELECT DISTINCT LAG(((rt0.c1 COLLATE BINARY)IS NOT((((t0.c1))==((NULL))))), (((rt0.c1 IN ()))<(CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END)), (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c1)))) NOT BETWEEN (((rt0.c0)%(rt0.c0))) AND (t0.c0 COLLATE NOCASE))) OVER () FROM rt0, t0 GROUP BY CASE t0.c0  WHEN ((rt0.c0) NOTNULL) THEN CASE t0.c1  WHEN t0.c0 THEN rt0.c2 END ELSE ((t0.c1) NOT BETWEEN (t0.c2) AND (rt0.c1)) END; -- 0ms;
SELECT ALL rt0.c2 FROM rt0, t0; -- 0ms;
SELECT ALL CAST('b熌i79Xდ' AS REAL) COLLATE NOCASE, CAST((((t0.c1))<=((t0.c0))) AS BLOB), AVG(TYPEOF(t0.c0)) FROM rt0, t0 WHERE ((- (((0.1690467535495379) ISNULL)))); -- 0ms;
SELECT DISTINCT CASE ((((((((((((rt0.c0)OR(t0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN TOTAL(t0.c0) WHEN t0.c0 COLLATE NOCASE THEN ((t0.c1)||(rt0.c1)) WHEN rt0.c1 COLLATE NOCASE THEN NULLIF(DISTINCT rt0.c0, rt0.c2) END, ((((((t0.c1)AND(rt0.c1)))AND(t0.c0)))<=(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))), t0.c1 FROM t0 WHERE (((NOT (NULL)) IN (json_valid(NULL))));SELECT ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c2))) IN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 END, rt0.c0)) FROM rt0, t0; -- 0ms;
SELECT 0.3151003993709054 FROM t0, rt0 WHERE (NULL) LIMIT -1120315136 OFFSET -1285110306; -- 0ms;
SELECT ALL ((rt0.c2) IS TRUE) COLLATE BINARY FROM t0;SELECT DISTINCT ((rt0.c2)%(((rt0.c0) IS TRUE))) FROM rt0 GROUP BY ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(((t0.c1)AND(rt0.c1)))))OR((rt0.c0 IN ()))))AND(((((((((((((((((t0.c0)OR(t0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))OR(t0.c2)))OR(0x2a77360d)))AND(rt0.c2)))AND(t0.c2)))))AND(rt0.c2 COLLATE NOCASE));SELECT DISTINCT ((0.25657229824204053) ISNULL), ((rt0.c1)<(t0.c0)) COLLATE NOCASE, (((((rt0.c2, t0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((t0.c2, NULL, rt0.c2))))|(((rt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)))) FROM t0 WHERE (((UNLIKELY(NULL)) NOT NULL));SELECT DISTINCT (((t0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c1)))) AND ((((t0.c2)|(rt0.c2))))), json_valid(UPPER(t0.c2)), ((SUM(rt0.c1))%(t0.c2 COLLATE BINARY)) FROM t0, rt0 GROUP BY CAST(CAST(rt0.c0 AS NUMERIC) AS NUMERIC); -- 1ms;
SELECT ((((t0.c0)AND(rt0.c0)))>((NOT (rt0.c1)))) FROM rt0, t0 WHERE (CASE ((x'')IS('838267149'))  WHEN CASE ''  WHEN 'ᣫ1,' THEN NULL WHEN '-1270435867' THEN -1901621147 WHEN '#8(9I' THEN 136610901 ELSE 0.033908695018121215 END THEN (((('266072168')AND('0.6560121487336171')))AND('470973017')) ELSE ((NULL)GLOB(NULL)) END); -- 0ms;
SELECT ALL ((t0.c1 COLLATE NOCASE)==((rt0.c0 IN ()))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt0.c1)) THEN ((((t0.c0)AND('')))AND(t0.c2)) END FROM rt0, t0 WHERE ((- (PRINTF('842129379', '', -0.0)))) ORDER BY t0.c1 DESC, ((((t0.c0)-(rt0.c2)))IS NOT(CAST(rt0.c0 AS NUMERIC))) DESC; -- 0ms;
SELECT ALL (NOT (LIKELY(t0.c2))) FROM t0, rt0 WHERE (''); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) IS FALSE)) FILTER(WHERE (UPPER(rt0.c1) IN ())) OVER (), (((COUNT(*), ((((t0.c1)OR(t0.c1)))OR(rt0.c2)), t0.c2 COLLATE BINARY))<=((CAST(t0.c2 AS INTEGER), ((t0.c0) ISNULL), GROUP_CONCAT(rt0.c2)))), '' FROM t0;SELECT (((t0.c1)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((0.8523212134261605 COLLATE RTRIM))) FROM t0 WHERE (((x'45f6a836' COLLATE BINARY) NOT BETWEEN ('777rN(糏H5') AND (CAST(x'' AS TEXT)))) GROUP BY (NOT (INSTR(rt0.c1, rt0.c0))) HAVING ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY;SELECT (rt0.c1 IN ()), (((RTRIM(rt0.c1), rt0.c0 COLLATE NOCASE, rt0.c1 COLLATE BINARY))==((((((rt0.c1)AND(rt0.c0)))OR(t0.c1)), ((((t0.c2)OR(rt0.c1)))AND(t0.c2)), ((t0.c1)*(t0.c2))))), (((t0.c0 COLLATE RTRIM))<(((t0.c1 IN ())))), GROUP_CONCAT(((t0.c2) NOT NULL)) FILTER(WHERE (NOT (rt0.c0))) OVER (), (NOT (((rt0.c1) IS FALSE))) FROM t0 WHERE (CASE (0.8070015370766476 IN ())  WHEN COALESCE(0.8248960301763938, 0.9755196469168269) THEN ((NULL) IS TRUE) END);SELECT DISTINCT COUNT(*) OVER ( RANGE  CURRENT ROW), CASE WHEN TOTAL_CHANGES() THEN ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)) WHEN t0.c1 THEN SUM(t0.c0) WHEN ((t0.c2) IS TRUE) THEN ((((((((t0.c2)OR(rt0.c2)))AND(t0.c2)))AND(rt0.c1)))AND(t0.c1)) END, (NOT (TOTAL(t0.c1))) FROM t0 WHERE (x'ddbe5f25');SELECT ALL LAST_VALUE(((((((t0.c1)AND(t0.c2)))AND(-1387458697))) BETWEEN ((t0.c2 IN (t0.c2, t0.c1))) AND (((t0.c2)>(rt0.c2))))) OVER () FROM t0, rt0 WHERE (((('앀g') NOT BETWEEN (NULL) AND (0.6854197811358315)) IN ())); -- 0ms;
SELECT SUM(IFNULL(DISTINCT rt0.c2, t0.c1)) FROM rt0 WHERE (((((0.1511191694172913)) BETWEEN (('-1844401142')) AND ((x''))) IN (CAST('0.18612494108778754' AS REAL))));SELECT '_2 ' FROM rt0, t0 WHERE (((((NULL)<=(221541770))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((COUNT(*))AND(((((rt0.c0)AND(t0.c0)))AND(t0.c1)))))AND('-689783011')), CAST(t0.c1 AS NUMERIC), COUNT(0X71d41b8c) FROM rt0;SELECT DISTINCT (((CASE rt0.c1  WHEN t0.c0 THEN t0.c1 ELSE NULL END, ((rt0.c0)||(t0.c0)), ((rt0.c1)<=(0xffffffffa0abb2b5))))!=(((rt0.c2 IN ()), ((rt0.c1)<=('-1793090203')), CAST(t0.c0 AS NUMERIC)))) FROM rt0, t0 WHERE (((((NULL)<=(x'38a2')))+(CASE x''  WHEN x'' THEN 0.13298413648954432 ELSE NULL END))) GROUP BY CASE ((t0.c2) NOTNULL)  WHEN IFNULL('0.03632781137497465', -1594788610) THEN rt0.c2 ELSE (rt0.c1 IN ()) END HAVING (+ (((rt0.c2)LIKE(-320300338)))); -- 1ms;
SELECT DISTINCT UPPER(LIKE(t0.c1, rt0.c1, '룬')) FROM rt0 GROUP BY ((((rt0.c2)-(t0.c2)))OR((((t0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));SELECT ALL ((((~ (t0.c1))))<=((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN t0.c0 THEN rt0.c0 END))) FROM t0;SELECT DISTINCT NTH_VALUE((((((0.2459059141881893)|(t0.c1)), 'j힚' COLLATE BINARY, CAST(t0.c0 AS REAL)))<>((((t0.c0) NOTNULL), ((t0.c0)==(NULL)), (t0.c0 IN ())))), LIKELIHOOD(DISTINCT (t0.c2 IN (t0.c1, t0.c1)), 0.2626240824725321)) OVER () FROM t0;SELECT CAST(t0.c2 AS TEXT) COLLATE RTRIM, ((((t0.c2 IN ())))>((ROUND(t0.c1, rt0.c0)))), CAST(((t0.c0)<(t0.c2)) AS REAL) FROM t0, rt0 WHERE (CAST(((((0.23603842013763165)AND(0.24573753279758825)))OR(x'4bc7')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt0.c1 COLLATE BINARY)OR((~ (t0.c2)))))AND(((((((((rt0.c0)AND(t0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))), rt0.c2, (((CASE rt0.c1  WHEN rt0.c2 THEN -2.07757872E8 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'f9c7' ELSE t0.c0 END))>=((json_valid(t0.c1)))) FROM rt0;SELECT DISTINCT (NOT ((((t0.c0))>=((rt0.c1))))) FROM rt0, t0 WHERE ((('0.651874547300632')==(((0.9778321409902462)>>('-1146575544'))))); -- 0ms;
SELECT ALL ((t0.c0) BETWEEN (((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1))) AND (rt0.c1 COLLATE BINARY)) FROM t0, rt0 WHERE (((((((NULL)>=(0.08371710519005382)))OR(x'')))OR(0.5869260286532578))) ORDER BY ((((CASE WHEN rt0.c0 THEN t0.c2 ELSE t0.c1 END)AND((~ (t0.c1)))))OR((rt0.c1 IN ()))) ASC; -- 0ms;
SELECT DISTINCT ((((COUNT(*))OR(rt0.c1 COLLATE NOCASE)))OR(DATE(rt0.c0, t0.c1, t0.c0))) FROM t0 WHERE ((- (((0X26481b09)>>(x''))))) UNION ALL SELECT DISTINCT t0.c0 FROM rt0, t0 WHERE (((0.22912939836938728) NOT NULL) COLLATE BINARY);SELECT ALL CAST(CAST(rt0.c0 AS REAL) AS BLOB) FROM t0 WHERE (((88049901) IS FALSE) COLLATE BINARY COLLATE RTRIM);SELECT DISTINCT (- (rt0.c0 COLLATE RTRIM)) FROM t0, rt0 WHERE (1131344197); -- 0ms;
SELECT DISTINCT NULL, (((0.12965724335854323) BETWEEN (rt0.c2) AND (rt0.c2)) IN (t0.c0)), t0.c0 FROM rt0, t0 WHERE (((((((0Xffffffffd7d50e4a)AND(x'')))AND(x'cd42')))OR(((x'') NOT BETWEEN (-228571568) AND ('-1073672076'))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c0))-(x'')) FROM t0, rt0; -- 0ms;
SELECT (((- (t0.c0))) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((rt0.c0 IN ()))) FROM rt0 WHERE (CAST((((('1330673136')OR(NULL)))OR(NULL)) AS TEXT));SELECT ((rt0.c1 COLLATE NOCASE) NOT NULL) FROM rt0 WHERE (((0x4f5075f0)IS NOT(-830050184)) COLLATE RTRIM) LIMIT 1499212460 OFFSET 1727871076; -- 0ms;
SELECT DISTINCT x'' FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)) AS NUMERIC), (((rt0.c0)) BETWEEN ((GROUP_CONCAT(t0.c2))) AND (((+ (rt0.c1))))), (((NOT (rt0.c1))) NOT NULL) FROM t0, rt0 GROUP BY '1330673136', ((((NOT (rt0.c1)), (((t0.c0, 0.7406541060462551, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, t0.c2))), rt0.c2))<((HEX(DISTINCT rt0.c1), t0.c0 COLLATE BINARY, MIN(rt0.c0, t0.c0)))), ((((t0.c2)IS(rt0.c1))) NOT NULL); -- 0ms;
SELECT ALL ((IFNULL(rt0.c1, t0.c1))|(((rt0.c1)/(rt0.c1)))) FROM t0, rt0 ORDER BY (('')>(((((t0.c2)AND(rt0.c1)))OR(rt0.c0)))) DESC, CASE ((rt0.c2)>=(rt0.c1))  WHEN (t0.c0 IN ()) THEN TRIM(rt0.c2) ELSE ((rt0.c2)IS NOT(x'')) END  NULLS LAST, t0.c1  NULLS LAST; -- 1ms;
SELECT DISTINCT COUNT(*), (((((rt0.c1)AND(rt0.c0)))OR(t0.c2)) IN ()), (((~ (rt0.c1)))*((((t0.c0))=((t0.c1))))) FROM t0, rt0 WHERE (((0.07789746940660625)+('126772187')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((x'') ISNULL), (((t0.c2, t0.c2, t0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((CASE t0.c0  WHEN rt0.c1 THEN t0.c1 ELSE t0.c0 END, t0.c0, t0.c0 COLLATE NOCASE, (+ (rt0.c0)), (rt0.c1 IN ()))) AND ((rt0.c1, ((NULL) IS TRUE), t0.c2 COLLATE BINARY, (x'2fd6' IN ()), ((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))))), '3G0>J?' FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN t0.c1 END COLLATE NOCASE, LEAD((((t0.c0)) NOT BETWEEN ((t0.c1 COLLATE BINARY)) AND ((CAST(t0.c0 AS INTEGER)))), (+ (t0.c0 COLLATE NOCASE)), NULL) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), 0.9091588445346998 FROM t0;SELECT DISTINCT UNLIKELY(DISTINCT COUNT(rt0.c1)) FROM rt0, t0 WHERE (LIKELY(((((-476396)AND(0.3678277710846696)))AND(x'')))); -- 0ms;
SELECT DISTINCT (+ (t0.c2)) COLLATE NOCASE, SUM(CAST(t0.c0 AS NUMERIC)) OVER (), GROUP_CONCAT(CASE WHEN rt0.c2 THEN t0.c2 ELSE rt0.c2 END) FROM rt0;SELECT DISTINCT ((((t0.c2)-(t0.c1))) IS FALSE) FROM rt0 WHERE (((((((((x'' COLLATE RTRIM)OR(((((NULL)OR('楒C>#E&t')))OR('_I(w')))))OR(('122590574' IN ()))))AND(CASE WHEN 0.05044153792853967 THEN 0.8961899202886883 END)))OR((((NULL)) BETWEEN ((2146253357)) AND (('911035608')))))) GROUP BY '-229783967' LIMIT -1951102801 OFFSET -1420208296;SELECT DATE(rt0.c2, CASE WHEN rt0.c0 THEN t0.c0 END, NULL, ((((t0.c2)AND(rt0.c0)))OR(rt0.c2)), x'') FROM t0, rt0 WHERE ((((0.07863627259936201, x'4501', '!''	dA5#&D')) BETWEEN (((((x'', 0.6737882044212508, NULL, 0Xffffffffbc30b2ac, NULL))<(('485977656', 'X*c!', '-649061330', '780648214', '504867434'))), CAST(NULL AS REAL), ((((NULL)OR('~s4')))AND(NULL)))) AND ((x'dfb6' COLLATE NOCASE, ((('1131299584')) BETWEEN ((-7.97087406E8)) AND ((0.38905174648543983))), ((x'') NOT BETWEEN (NULL) AND (']r')))))); -- 1ms;
SELECT ((rt0.c2 COLLATE BINARY)/(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM t0 GROUP BY (~ (t0.c1));SELECT DISTINCT TOTAL(((((rt0.c2)OR(t0.c0)))OR(t0.c2))) FROM t0, rt0 WHERE (((- (NULL)) IN ())); -- 0ms;
SELECT ALL ((((t0.c2)<(rt0.c0))) BETWEEN ((rt0.c2 IN (t0.c1, t0.c0))) AND (0xffffffffdf47eac2)), TOTAL(((t0.c1)&(rt0.c1))), ((((t0.c2)+(rt0.c1))) ISNULL), ((((~ (t0.c2))))>(('601834597' COLLATE NOCASE))), 0.20678298544139306 FROM rt0 GROUP BY (((t0.c2)) BETWEEN ((t0.c1 COLLATE NOCASE)) AND ((UPPER(t0.c2))));SELECT DISTINCT CASE CAST(rt0.c2 AS REAL)  WHEN ((t0.c2) NOT NULL) THEN (((rt0.c0))<=((t0.c1))) ELSE ((t0.c2)>(t0.c1)) END, CASE (t0.c1 IN ())  WHEN CAST(t0.c2 AS INTEGER) THEN (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) ELSE ((rt0.c2)>=(t0.c1)) END, NULL COLLATE RTRIM FROM t0 WHERE (CASE -2.16120543E8  WHEN -1.200373575E9 THEN 0.9099882271866717 END COLLATE RTRIM);SELECT DISTINCT ((t0.c0 COLLATE NOCASE)<=(CAST(rt0.c1 AS NUMERIC))), t0.c2, SUM((((rt0.c2, rt0.c1, t0.c1))<=((rt0.c2, rt0.c1, rt0.c2)))) OVER () FROM rt0;SELECT DISTINCT COALESCE(DISTINCT rt0.c0, json_insert(rt0.c0, t0.c0, rt0.c2)) FROM t0, rt0; -- 0ms;
SELECT (((t0.c1 IN ()))-((- (rt0.c2)))) FROM t0 GROUP BY (((t0.c2)) NOT BETWEEN ((((t0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((t0.c0)%(0.07248542389172163)))));SELECT LIKELIHOOD(DISTINCT TRIM(DISTINCT rt0.c2, t0.c2), 0.006164719282347297) FROM t0 ORDER BY (((t0.c0 IN (t0.c2))) NOT BETWEEN ((((rt0.c0, rt0.c1, t0.c2))=(('XT痰', t0.c1, t0.c0)))) AND (rt0.c2)) DESC;SELECT ALL CASE WHEN rt0.c2 COLLATE BINARY THEN MAX(t0.c1, t0.c2, rt0.c1, t0.c2, t0.c2, t0.c2) END FROM t0;SELECT DISTINCT TOTAL(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) FROM t0, rt0 WHERE (json_patch(((((((((((((((((x'')AND('A)?l镮')))AND('-1540514959')))OR(NULL)))OR('452306057')))OR('0.13164305751774052')))AND(x'')))OR(0.009068878306028871)))AND('\nQW')), (('-511950874')AND(x'5ec1')))); -- 0ms;
SELECT DISTINCT ((((0x5a3dd10a)AND(CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN rt0.c2 WHEN -1988953327 THEN rt0.c0 WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)))OR(AVG(t0.c0))) FROM rt0;SELECT ALL NULL FROM rt0, t0 WHERE ((NOT (0.8478009149961305)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (0.8139074718075264)) FROM rt0 WHERE (CASE (- ('V}8TP6jr'))  WHEN x'' THEN ((('\rwTos}&r')) BETWEEN (('듭suj')) AND (('982898135'))) ELSE 0.314363968611412 END) ORDER BY (((rt0.c1) IS TRUE) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c2 FROM t0, rt0 WHERE (((((((((((NULL) NOTNULL))OR(0.9708045460168322 COLLATE BINARY)))AND(((((0.10288702981389608)OR(x'7916')))AND(x'')))))OR((('1110503345')LIKE(x'')))))AND(((((NULL)OR(0.41198386263704)))OR(x''))))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0 WHERE (LOWER(DISTINCT (((225929109))>=((0.7488598242662463))))); -- 0ms;
SELECT DISTINCT ((((t0.c1) ISNULL)) BETWEEN (rt0.c1) AND (UNLIKELY(x''))) FROM t0, rt0; -- 0ms;
SELECT ALL (('*|' COLLATE BINARY) IS FALSE) FROM t0 EXCEPT SELECT DISTINCT json_remove(rt0.c1, rt0.c0) COLLATE BINARY FROM rt0 WHERE (((CAST(-665416649 AS BLOB))<>((('7c') NOT NULL))));SELECT DISTINCT (((rt0.c0, t0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), ((t0.c0)<>(t0.c1)), CASE WHEN t0.c2 THEN 0Xc73e8b9 ELSE rt0.c0 END)) AND ((((rt0.c2)<(t0.c1)), (t0.c2 IN ()), TOTAL(t0.c2)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((- (t0.c0)))<=(t0.c0 COLLATE BINARY)), COUNT(*), TOTAL(CASE rt0.c0  WHEN t0.c1 THEN 0.39521227996641617 WHEN t0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END) OVER () FROM t0, rt0 WHERE (TRIM(DISTINCT (NULL IN ()))); -- 0ms;
SELECT DISTINCT CASE WHEN (- (t0.c1)) THEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) END FROM t0; -- 0ms;
SELECT ALL TOTAL(((rt0.c1)*(t0.c0))) OVER () FROM rt0;SELECT ALL CAST(((((t0.c1)AND(rt0.c2)))AND(rt0.c0)) AS NUMERIC) FROM rt0, t0 WHERE (((((x'') IS TRUE))<=(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT t0.c0 FROM rt0, t0 WHERE (TYPEOF(((NULL) ISNULL))); -- 0ms;
SELECT (~ (t0.c2)) COLLATE NOCASE, (((NOT ('|J')))||(UNLIKELY(DISTINCT t0.c1))), ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL) FROM rt0;SELECT t0.c2 FROM t0, rt0 WHERE (((x'0dfd') NOTNULL)); -- 0ms;
SELECT (((TRIM(rt0.c0, rt0.c0)))<((rt0.c2 COLLATE NOCASE))), CAST(((rt0.c2)GLOB(t0.c0)) AS TEXT), (((((+ (4.16123121E8)))OR((t0.c0 IN ()))))OR((rt0.c0 IN (rt0.c1)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((SUM(t0.c1))<>(CASE WHEN t0.c1 THEN t0.c0 END)) FROM t0 WHERE ((((NULL COLLATE NOCASE))==((UNLIKELY(x''))))); -- 0ms;
SELECT 0.9167023430974428 COLLATE RTRIM FROM t0, rt0 WHERE ((('')=(0x24656295)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((rt0.c1)>>(t0.c2))) ISNULL) FROM t0, rt0 LIMIT 1714226418; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(MAX(((rt0.c2)&(t0.c2)))) FROM rt0, t0 GROUP BY ((((((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c2)))AND(CASE WHEN t0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN -1896598524 WHEN t0.c2 THEN t0.c2 WHEN NULL THEN rt0.c0 ELSE x'' END)))AND((~ (rt0.c0))));SELECT CASE WHEN TYPEOF(DISTINCT rt0.c1) THEN 0X3eddc6ad ELSE CAST('950701588' AS BLOB) END FROM rt0; -- 0ms;
SELECT DISTINCT AVG(NULL) FROM t0 WHERE ((+ (1.603297016E9))); -- 0ms;
SELECT COUNT(CAST(t0.c0 AS TEXT)) FROM rt0, t0 WHERE ((((((((('XR')AND(x'')))AND(x'a69f4812')))AND('-1137659220')))AND(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (- (((t0.c0) IS FALSE))) FROM t0 WHERE (((((((((((x'')-(NULL)))AND(LOWER(NULL))))AND(CAST('' AS BLOB))))OR((~ (-140298691)))))OR(0.413099332497202 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT NULL, LIKE((((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2))), ((t0.c1)<=(t0.c2))), '袝<' FROM t0 WHERE (((((((NULL)OR('325223738')))OR('')))||((((NULL))<=((x'')))))) GROUP BY ((((0.8922938967916513)+(0x45383796)))IS(CAST(rt0.c2 AS INTEGER)));SELECT ALL CASE WHEN t0.c1 THEN t0.c2 WHEN rt0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c0 END COLLATE NOCASE FROM t0, rt0 GROUP BY ((((rt0.c1) IS TRUE))*(t0.c0)) HAVING LIKELIHOOD(DISTINCT ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), 0.3282082118263797); -- 0ms;
SELECT DISTINCT AVG(NULL) OVER (), t0.c2, (((SUM(rt0.c0), (((t0.c0, t0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, 0.642713084418009)) AND ((t0.c1, t0.c1, rt0.c1))), ((0x482184f0)<<(t0.c2))))<=((UNLIKELY(DISTINCT t0.c1), (~ (t0.c2)), t0.c2))) FROM rt0 WHERE (NULL);SELECT ALL (((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END, TYPEOF(t0.c2), CASE WHEN rt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END))==((t0.c0 COLLATE BINARY, x'', (NOT (t0.c2))))), rt0.c2, (((((rt0.c0)AND(rt0.c1)), NULLIF(rt0.c2, t0.c1), ((rt0.c0)&(t0.c0))))<>((x'', ((t0.c2) NOTNULL), (('-1354085709') NOT BETWEEN (rt0.c0) AND (t0.c0))))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (NOT ((+ (rt0.c2)))) FROM rt0 WHERE (((((NULL)OR('-573847628')))<<((((0X221aa548)) BETWEEN ((NULL)) AND ((0.5246033340663823)))))); -- 0ms;
SELECT ALL (+ (CASE rt0.c1  WHEN t0.c2 THEN rt0.c2 ELSE rt0.c2 END)) FROM t0 WHERE (((CASE '862775772'  WHEN NULL THEN x'' WHEN NULL THEN x'' WHEN x'' THEN 0.3621212627961161 ELSE '-1146575544' END)<<((~ (NULL)))));SELECT (~ (t0.c1)) FROM t0, rt0 WHERE (((0.7089729427847096 COLLATE RTRIM)/('1729524360' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS INTEGER))>>(CASE WHEN 0.9454635821087443 THEN t0.c0 ELSE t0.c2 END)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((+ (t0.c1)))>(t0.c0)), (((rt0.c1, t0.c1, t0.c2)) BETWEEN ((t0.c0, (rt0.c2 IN (rt0.c1)), (t0.c1 IN ()))) AND ((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)), ((t0.c1)||(rt0.c2)), ((((rt0.c2)AND(t0.c2)))OR(t0.c2))))), COUNT((((rt0.c1))=((t0.c2)))) OVER () FROM rt0;SELECT AVG((t0.c1 IN (t0.c1))) OVER (), ((t0.c1 COLLATE NOCASE) NOT NULL), ((NULL) NOT NULL), GROUP_CONCAT(LIKELY(DISTINCT t0.c0)) OVER (), ((t0.c0 IN ()) IN ()) FROM t0 WHERE (CAST((('713958551') ISNULL) AS BLOB)); -- 0ms;
SELECT ((((t0.c0 COLLATE RTRIM)OR(LIKELIHOOD(t0.c0, 0.6405960215826214))))AND((~ (rt0.c2)))) FROM t0 WHERE (CAST(CAST('4鏩Y7' AS NUMERIC) AS BLOB)) ORDER BY CASE WHEN t0.c0 THEN 0xffffffffa10bedc6 ELSE CAST(rt0.c1 AS BLOB) END ASC  NULLS FIRST, rt0.c0 ASC  NULLS FIRST, ((((t0.c1)OR(SQLITE_COMPILEOPTION_USED(rt0.c0))))OR(((((((((t0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(-1094360615)))OR(t0.c0)))) ASC  NULLS FIRST;SELECT DISTINCT (t0.c0 IN (SUM(rt0.c2))) FROM t0, rt0 WHERE ((~ ((((x'', 'q+bA3', -661090117)) NOT BETWEEN ((x'', 'ED', x'')) AND (('', '-1354085709', 'eqIs')))))); -- 0ms;
SELECT ALL (- ((- (rt0.c1)))), ((((((((((((((((CAST(t0.c0 AS INTEGER))AND((((t0.c0, t0.c2, t0.c0))=((t0.c1, rt0.c2, rt0.c0))))))AND(((rt0.c0) BETWEEN (0.3212103305021643) AND (t0.c0)))))AND((((rt0.c1, rt0.c2, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c1)) AND ((rt0.c1, t0.c0, t0.c0))))))OR((((rt0.c2, rt0.c0, t0.c1))=((t0.c2, rt0.c2, rt0.c1))))))AND(((((((((x'7065')OR(x'f2fc')))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))))OR(((x'') NOTNULL))))OR(((t0.c1) NOTNULL))))OR((((t0.c2, rt0.c0, -1290493769)) BETWEEN ((rt0.c0, t0.c2, rt0.c0)) AND ((t0.c0, t0.c0, -2.040336501E9))))), ((COUNT(*))*(rt0.c1)), (((t0.c2)) NOT BETWEEN ((x'')) AND ((ABS('楒C>#E&t')))), COUNT(*) OVER () FROM rt0;SELECT DISTINCT (NOT (((rt0.c1)&(t0.c2)))) FROM rt0 WHERE ((((- (x'9d93')))||((((1727097892))>=((0.4750179623046197)))))) ORDER BY rtreenode(((((NULL)OR(rt0.c2)))OR(t0.c0)), ((((((((rt0.c1)OR(t0.c2)))AND(x'86c9')))AND(t0.c1)))AND(t0.c0))) DESC  NULLS FIRST;SELECT (NOT (((rt0.c0) NOTNULL))) FROM t0, rt0; -- 0ms;
SELECT ((NULL)>>(t0.c1 COLLATE RTRIM)), GROUP_CONCAT((NOT (t0.c2))) OVER (), (~ (CAST(rt0.c1 AS REAL))) FROM rt0, t0 WHERE (((((CAST(NULL AS BLOB))OR(((x'')>>(NULL)))))OR(((0Xffffffff8378f59e) IS TRUE)))); -- 0ms;
SELECT DISTINCT (- (MAX(t0.c0))), SUM(CAST('' AS TEXT)), AVG(((((rt0.c2)OR(rt0.c1)))AND(t0.c0))) OVER () FROM t0 WHERE ((((NULL IN ()))-(((NULL)>(0.29597349681831253)))));SELECT t0.c2 FROM t0 WHERE ((((((((((((((((('-357931876')OR(x'')))OR(x'')))OR(x'2355')))OR(0X42d7ccb3)))AND(CAST(981528862 AS REAL))))AND(CASE WHEN NULL THEN '1143329368' WHEN 0.5790333895277788 THEN -769308770 WHEN 0xffffffff85cffb61 THEN NULL END)))OR((~ (NULL)))))AND(((((x'')AND(x'fa16')))AND(x''))))); -- 0ms;
SELECT DISTINCT NULL FROM t0 LIMIT 1701502854; -- 0ms;
SELECT MAX(x'6d2b'), (((rt0.c2)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c2)==(t0.c1))))), (CAST(0.5837947848543036 AS REAL) IN (rt0.c1)) FROM t0, rt0; -- 1ms;
SELECT ALL t0.c1 FROM rt0, t0 GROUP BY (((((NULL)OR(rt0.c1)))AND(t0.c0)) IN ((NOT (rt0.c0)))) HAVING CAST(t0.c1 AS INTEGER); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(x'')))AND(t0.c1))), ((('0.9319331212994476')GLOB(t0.c0)) IN ()), (((rt0.c1)) BETWEEN (((t0.c2 IN ()))) AND ((CAST(rt0.c0 AS NUMERIC)))) FROM t0 WHERE ((((((NULL, '0.5748526679708001', x''))>=(('>!#*', x'', '1016349230'))))>>(0.24090460906780065 COLLATE RTRIM)));SELECT ((CAST(rt0.c0 AS TEXT))&((t0.c0 IN (t0.c1)))), (CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END IN ()), CHANGES() FROM rt0, t0; -- 1ms;
SELECT ((((((((((((((rt0.c1)<>(t0.c2)))AND('936672815')))OR(TOTAL(t0.c0))))OR(TYPEOF(t0.c0))))AND(((rt0.c0)<(0.3666485377249771)))))OR(CAST(t0.c2 AS TEXT))))AND((~ (x'')))), CASE (+ (rt0.c1))  WHEN CAST(t0.c2 AS BLOB) THEN t0.c0 WHEN 0.22768334410177216 THEN '0.6841093088360979' WHEN 't귷' THEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN t0.c1 COLLATE NOCASE THEN ((t0.c1)>(t0.c2)) WHEN rt0.c1 COLLATE BINARY THEN (rt0.c2 IN ()) END, t0.c2 FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((((t0.c2))<>((rt0.c1)))) NOT BETWEEN ((t0.c2 IN (t0.c2))) AND (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))) FROM t0, rt0 WHERE (CASE WHEN ((0.26180635036737143)AND('-1285365238')) THEN json_array(NULL, NULL) END); -- 0ms;
SELECT ALL rt0.c1 FROM t0, rt0 NOT INDEXED; -- 0ms;
SELECT ALL CASE WHEN json_insert(rt0.c2, t0.c0, t0.c0) THEN MIN(rt0.c0) END FROM t0, rt0;SELECT DISTINCT ((TOTAL(rt0.c0)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (0.7433159122269303)) FROM t0, rt0 ORDER BY (- (CASE WHEN t0.c2 THEN t0.c1 END))  NULLS FIRST; -- 0ms;
SELECT (+ (rt0.c1)) FROM t0;SELECT ALL (((((t0.c1) NOTNULL), ((t0.c1)OR(1.536811166E9)), (((rt0.c0))<=((rt0.c1)))))>=((SUBSTR(rt0.c2, t0.c1), (t0.c2 IN ()), CASE ''  WHEN t0.c1 THEN rt0.c2 ELSE rt0.c0 END))) FROM t0, rt0 WHERE (((CAST(x'62e8' AS BLOB)) NOT BETWEEN (((x'') NOTNULL)) AND ((('[j')!=(0.16792192602828093))))); -- 0ms;
SELECT DISTINCT (~ ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2))))) FROM t0 LEFT OUTER JOIN rt0 ON (CAST(t0.c0 AS TEXT) IN (((t0.c2)||(t0.c1)), ((t0.c1)|(t0.c1)))); -- 0ms;
SELECT CAST(((rt0.c0)<=(0.5511474159388028)) AS TEXT) FROM t0, rt0; -- 0ms;
SELECT x'733e' FROM rt0; -- 0ms;
SELECT ALL TOTAL(rt0.c1 COLLATE RTRIM) FROM t0 WHERE (CAST((- (0Xfffffffffff77962)) AS INTEGER)) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS FALSE)  NULLS LAST;SELECT ALL (~ (CASE WHEN t0.c1 THEN '1701902757' END)), COUNT((NOT (t0.c0))) FILTER(WHERE CASE rt0.c1  WHEN CAST(t0.c1 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN (((rt0.c1))<>((rt0.c0))) THEN t0.c2 WHEN CASE WHEN t0.c1 THEN t0.c0 END THEN ((rt0.c2) NOTNULL) END) OVER (), (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t0.c0))))+(rt0.c0)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT SUM(((t0.c0) NOTNULL)) FILTER(WHERE json_patch((t0.c1 IN ()), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) OVER () FROM t0 WHERE ((CAST(x'' AS BLOB) IN ()));SELECT DISTINCT CASE WHEN (((rt0.c2, t0.c1, rt0.c2)) NOT BETWEEN ((t0.c2, t0.c2, '')) AND ((rt0.c0, rt0.c0, t0.c1))) THEN (((rt0.c0, '.,', rt0.c1, rt0.c1, '1284588954')) NOT BETWEEN ((t0.c1, t0.c2, t0.c2, t0.c0, t0.c1)) AND ((t0.c1, rt0.c1, t0.c0, t0.c2, t0.c2))) WHEN ((((t0.c2)AND(t0.c2)))OR(rt0.c0)) THEN (((t0.c1, rt0.c0, rt0.c0))>=((t0.c0, t0.c0, t0.c0))) WHEN x'' THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c1) ISNULL) END, CAST(((t0.c2)IS(t0.c1)) AS REAL), (((((rt0.c0)||(rt0.c0)), UPPER(DISTINCT t0.c0), ((rt0.c1) NOT NULL)))<=((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(t0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), CAST(t0.c1 AS REAL)))) FROM t0;SELECT ((((CASE WHEN t0.c1 THEN x'd97d' WHEN t0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR((((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(CAST(rt0.c1 AS BLOB))), ((CAST(t0.c0 AS BLOB))<=((((t0.c1))==((-0.0))))), ((SUM(rt0.c2))*((t0.c0 IN (rt0.c0)))) FROM rt0;SELECT DISTINCT AVG(x'') OVER () FROM t0, rt0 NOT INDEXED; -- 0ms;
SELECT GROUP_CONCAT((((rt0.c2, NULL, rt0.c0)) NOT BETWEEN ((rt0.c2, t0.c0, rt0.c2)) AND ((rt0.c2, t0.c0, rt0.c1)))) OVER (), NULL, AVG(((0.7436452836363374)<(t0.c0))) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((((0.046719644702015395, t0.c2, t0.c2))!=((rt0.c1, t0.c2, t0.c0)))) BETWEEN ((((((((('')AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (CASE rt0.c0  WHEN t0.c2 THEN rt0.c2 END)), MIN(CASE t0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN x'f259' THEN rt0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END), CAST(((t0.c2)IS NOT(rt0.c2)) AS BLOB) FROM rt0;SELECT DATE(t0.c0, 0.37298771511239615, t0.c2, t0.c2, x'') COLLATE RTRIM FROM t0, rt0; -- 0ms;
SELECT ALL (rt0.c2 IN ()) FROM rt0 LIMIT 607303275; -- 0ms;
SELECT ALL (((8.62775772E8)>=(rt0.c2)) IN ()) FROM rt0 WHERE (((((CASE WHEN 'n#\r덏Iw' THEN NULL ELSE 0.4870666426932181 END)AND((('-1146575544') IS TRUE))))AND((((NULL)) NOT BETWEEN ((NULL)) AND ((0.9827645785506085)))))); -- 0ms;
SELECT DISTINCT CAST(((x'16c6')LIKE(rt0.c2)) AS BLOB) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((((rt0.c2)IS(rt0.c2))))>=((0.24763963643832454))), (((0.2427485890955765))>=((((t0.c0) IS TRUE)))), SUM(0.7641106457428568) FROM rt0 WHERE (((NULL)AND(x'')) COLLATE NOCASE) LIMIT 1581113726 OFFSET -1062736201;SELECT DISTINCT ((CASE WHEN 'yPa.-ཷWT' THEN rt0.c2 ELSE t0.c0 END) IS TRUE) FROM t0, rt0; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM rt0, t0; -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c1))) BETWEEN (((t0.c1) IS FALSE)) AND (CAST(t0.c2 AS NUMERIC))) FROM rt0 WHERE (CAST('>谷A' COLLATE NOCASE AS REAL));SELECT DISTINCT AVG(((t0.c0)GLOB(rt0.c1))) OVER () FROM t0, rt0 WHERE ((((((((((2120625418)OR(-4.38521009E8)))OR(NULL)))AND('-/')))OR(0.4007414623729434)) IN ())); -- 0ms;
SELECT DISTINCT ((((((t0.c1)AND(t0.c2)))OR(NULL)))IS NOT((NOT (t0.c0)))) FROM rt0 WHERE (INSTR(((((0.6703211624096912)AND(x'')))OR('')), (+ ('ld	色}4'))));SELECT DISTINCT ((('-207757872' IN ()))|(CAST('Lr' AS REAL))) FROM rt0, t0 WHERE ((+ (CAST(0.7726595263124637 AS BLOB)))); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0, rt0 WHERE (((NULLIF(0xffffffffa7e15b39, 0.5312868588816582)) BETWEEN (CASE '9*L~'  WHEN 0.24179830413424985 THEN '0' ELSE '' END) AND (CASE WHEN x'' THEN 0.6147768162436703 ELSE '-932788597' END))); -- 0ms;
SELECT ALL CASE WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END COLLATE NOCASE FROM rt0, t0; -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (t0.c2) AND (t0.c0)))<=(((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1)))) FROM rt0, t0 LIMIT -1807560352; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN t0.c1 END) ISNULL) FROM t0 WHERE (((((NULL)/(x'')))+(CAST(NULL AS INTEGER))));SELECT ALL rt0.c0, x'038a', CASE NULL  WHEN ((rt0.c1) NOTNULL) THEN (((rt0.c0)) BETWEEN (('2067247714')) AND ((t0.c2))) WHEN ((t0.c0)GLOB(t0.c2)) THEN ((((rt0.c0)AND(t0.c1)))OR(rt0.c1)) WHEN (NULL IN ()) THEN t0.c1 COLLATE BINARY END FROM t0, rt0 ORDER BY ((t0.c0)/(t0.c2)) COLLATE BINARY, TYPEOF(DISTINCT ((rt0.c0)||(t0.c2))); -- 0ms;
SELECT ALL TOTAL(((t0.c0) NOT BETWEEN (t0.c2) AND (-1.13765922E9)) COLLATE RTRIM), ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))AND(rt0.c1 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN t0.c2 THEN '0.9319471607048921' WHEN rt0.c1 THEN t0.c2 WHEN rt0.c0 THEN t0.c1 END)), ((('囻'))!=((((((((((((((rt0.c1)OR(t0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(1121438899)))AND(rt0.c2)))OR(t0.c2))))) FROM t0;SELECT TYPEOF(rt0.c2 COLLATE BINARY) FROM rt0, t0 LIMIT 1705869361; -- 0ms;
SELECT DISTINCT CASE (- (t0.c2))  WHEN (('0K')<=(rt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN ((((t0.c2)AND(0.9615432151661729)))OR(t0.c2)) THEN ((rt0.c1) NOT NULL) WHEN (((t0.c0, t0.c2, rt0.c1))==((rt0.c1, rt0.c2, 'J'))) THEN MAX(t0.c0, t0.c2) WHEN COALESCE(DISTINCT rt0.c1, t0.c1, rt0.c1, rt0.c1) THEN (+ (t0.c0)) WHEN (t0.c2 IN ()) THEN ((((t0.c0)OR(t0.c1)))OR(t0.c2)) ELSE (((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) END, (+ (((((t0.c0)OR(rt0.c2)))AND(t0.c2)))), t0.c2 FROM t0;SELECT ALL ((CAST(rt0.c2 AS TEXT))>=(((t0.c0) BETWEEN (rt0.c0) AND (t0.c0)))) FROM t0 WHERE (((1.727097892E9) NOT NULL) COLLATE NOCASE);SELECT ALL TOTAL(TRIM(DISTINCT t0.c2)) OVER () FROM rt0, t0 WHERE ((((NULL)<(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((((t0.c1)OR(t0.c2)))AND(rt0.c0)))))AND(((t0.c0)%(t0.c2)))), (((t0.c2)<>(t0.c1)) IN ()), SUM(((t0.c0)/(rt0.c0))) OVER () FROM rt0;SELECT ((0Xffffffff872dba7c)=((('-1994774279') NOTNULL))) FROM rt0, t0 WHERE (((TRIM(DISTINCT '')) NOT NULL)); -- 0ms;
SELECT ALL rt0.c1 FROM t0, rt0 WHERE (CASE ((0xffffffffe8ad8978)=(NULL))  WHEN ((NULL) BETWEEN (NULL) AND (NULL)) THEN (0.6483272939036567 IN ()) ELSE CAST(7.20430631E8 AS TEXT) END); -- 0ms;
SELECT DISTINCT TOTAL(((((t0.c1)AND(rt0.c0)))AND('aNᛅ{SoL'))) FROM t0 WHERE (CASE WHEN 2098053246 COLLATE BINARY THEN ((x'') BETWEEN (x'') AND (0.5902181767757803)) WHEN (((('-1225572384')AND(x'c981')))AND(NULL)) THEN CAST('' AS REAL) WHEN (NULL IN (x'36f04fdc')) THEN LIKELY(x'b2ed') END);SELECT DISTINCT ((((~ (t0.c0)), ((rt0.c1) NOT BETWEEN (t0.c1) AND ('-1419912393')), rt0.c1 COLLATE RTRIM))<((json_array(NULL, t0.c2, t0.c2, rt0.c1), ((rt0.c2)AND(t0.c2)), CAST(NULL AS TEXT)))), SUM(CAST(t0.c1 AS TEXT)) OVER ( RANGE  CURRENT ROW EXCLUDE TIES), t0.c1 FROM t0 NOT INDEXED WHERE ((((('1121438899')>>(0x569794b5)))<=(CASE WHEN '}/vчF!\n' THEN '1528361160' END)));SELECT DISTINCT (('')!=(x'5236')), (((- (t0.c2))) ISNULL), NTH_VALUE(((((rt0.c2) NOT NULL))=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))), ((((rt0.c2)GLOB(rt0.c0))) NOT BETWEEN ('536634555') AND ((rt0.c2 IN ())))) OVER () FROM rt0 WHERE (NULL);SELECT DISTINCT LEAD((((~ (t0.c1)))>=(x'')), ((t0.c2)LIKE('55')) COLLATE BINARY, (((- (t0.c2))) BETWEEN (((((x'')OR(t0.c2)))AND(t0.c1))) AND (((x'')-(t0.c0))))) OVER () FROM t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0, t0 WHERE ((((((((((((x'', 'L9x_', 0.7424594749658504, 0x741a78bf, 0.060702868585053915)) NOT BETWEEN (('545069645', 0.6113736966261383, '', x'', -2.07757872E8)) AND ((NULL, x'0aca', '145022268', NULL, 0xffffffffeb1c1289))))OR(x'' COLLATE RTRIM)))AND(CASE x''  WHEN '-981350972' THEN NULL ELSE 0.08366089321842007 END)))AND(((0Xffffffffb10e26f4)AND(x'')))))AND((- (''))))); -- 1ms;
SELECT ALL ((((((((t0.c0 COLLATE NOCASE)OR(((rt0.c1) BETWEEN (t0.c1) AND (rt0.c1)))))OR((+ (rt0.c1)))))AND(((rt0.c2)/(rt0.c0)))))AND(((((t0.c0)OR(rt0.c1)))AND(rt0.c2)))) FROM rt0, t0 WHERE (MAX(0Xffffffffe7a491ad, ((x'6d1f') BETWEEN (x'') AND (1011361453)), ((x'') NOT BETWEEN (0.9635218980976347) AND (NULL)), x'' COLLATE NOCASE, (+ (0Xffffffffcd4d5f2c)), ((NULL)!=(0.3490187932639638)), ((((((((x'')OR(NULL)))AND(x'45d6')))OR(0.953170759306672)))AND(NULL)), CAST(x'' AS REAL))); -- 0ms;
SELECT ALL CASE WHEN ((t0.c0) NOT NULL) THEN ((x'') NOT NULL) WHEN rt0.c2 THEN t0.c2 COLLATE BINARY WHEN (NULL IN (rt0.c2, rt0.c2)) THEN t0.c2 ELSE rt0.c0 COLLATE RTRIM END FROM rt0, t0 NOT INDEXED; -- 0ms;
SELECT LAG(GLOB((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))), CAST(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)) AS BLOB), CAST(((t0.c1)<>(t0.c2)) AS BLOB)) OVER (), LIKELIHOOD(DISTINCT ((((rt0.c2)OR(t0.c2)))OR(rt0.c2)), 0.772105441839609), (CAST(t0.c1 AS INTEGER) IN ()), (((((rt0.c1, rt0.c1, t0.c2, t0.c2, rt0.c1))>((t0.c0, rt0.c2, rt0.c0, rt0.c0, t0.c2))))LIKE(((rt0.c2)&(t0.c1)))), (NOT (((t0.c0) ISNULL))) FROM t0 WHERE (NULL);SELECT DISTINCT x'' FROM rt0, t0 WHERE (((CHAR(x'80ec', x'', NULL))>>(CASE WHEN x'e226' THEN '1669763567' END))); -- 0ms;
SELECT DISTINCT CASE (~ (t0.c1))  WHEN ((rt0.c1)>=(t0.c1)) THEN ((t0.c0) NOTNULL) WHEN t0.c2 COLLATE NOCASE THEN CASE WHEN NULL THEN '0.7987901434709036' ELSE t0.c1 END WHEN ((t0.c1)>>(t0.c2)) THEN ((rt0.c2)>(rt0.c1)) END FROM t0, rt0 WHERE (((CAST('' AS INTEGER)) ISNULL)) ORDER BY (~ (rt0.c0)) COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT DISTINCT LAG((((rt0.c1) IS TRUE) IN (NULLIF(t0.c2, rt0.c0))), IFNULL('wꩪ	dyw', t0.c1) COLLATE NOCASE, (NOT (((rt0.c0) ISNULL)))) OVER () FROM t0, rt0 WHERE (CAST(('-408645203' IN (0.6163677972769943)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (+ (((t0.c0)+(rt0.c0)))), (((((t0.c1) NOT NULL)))>=((((t0.c0)IS(t0.c1))))), ((~ (NULL)) IN ()) FROM t0 ORDER BY CAST((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))) AS INTEGER) ASC  NULLS LAST, CASE CASE t0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c0 END  WHEN x'' THEN '' ELSE (rt0.c0 IN ()) END DESC  NULLS FIRST;SELECT DISTINCT x'48e1' FROM t0; -- 0ms;
SELECT ALL SUM((((('-476396')AND(t0.c2)))OR(rt0.c2))) COLLATE BINARY, ((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN t0.c2 THEN rt0.c2 END) BETWEEN (t0.c2) AND (AVG(t0.c2))), rt0.c2 FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(x'd86169b0' AS INTEGER), SUM(CAST(rt0.c0 AS NUMERIC)) FILTER(WHERE '?0') OVER (), GROUP_CONCAT((rt0.c2 IN ())) FROM rt0 WHERE (TRIM((('p.')||('')))) ORDER BY ((((t0.c0)OR(t0.c2)))&(LIKELIHOOD(rt0.c2, 0.906845184465726)));SELECT DISTINCT ((CAST(rt0.c0 AS BLOB))/(CHAR('dshr'))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC)) IS FALSE) FROM rt0; -- 1ms;
SELECT DISTINCT MIN((t0.c1 IN ())) FROM t0 WHERE (((NULL)GLOB(((0Xffffffff8f3e01d5) BETWEEN (NULL) AND ('381992292'))))); -- 0ms;
SELECT DISTINCT (((((t0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c1))))LIKE(((rt0.c2) NOT NULL))) FROM t0 WHERE (((x'2ce6e498') BETWEEN (NULL) AND ('(YvL4)換')) COLLATE NOCASE);SELECT ALL ((((rt0.c2) NOTNULL))AND(ABS(DISTINCT rt0.c0))), ((0.6545916113091855) ISNULL), (~ ((- (t0.c1)))) FROM t0;SELECT t0.c2 COLLATE RTRIM, GROUP_CONCAT(ABS(t0.c2)) OVER (), ((((rt0.c2)OR(rt0.c2))) IS TRUE) FROM t0 WHERE (((((NULL)OR(x'29bc')))AND(NULL)) COLLATE NOCASE) ORDER BY t0.c0  NULLS FIRST;SELECT ALL INSTR((NOT ('tV9F/<*\n')), TOTAL(rt0.c0)), (((rt0.c1 IN ())) NOTNULL), ((CASE WHEN t0.c1 THEN rt0.c1 END) IS TRUE) FROM t0, rt0 WHERE (((((((('')AND(x'')))OR(NULL))))<((((x'') NOT BETWEEN (0Xa61f41) AND (NULL)))))) GROUP BY ((t0.c2) BETWEEN (((((((((x'')AND(t0.c2)))OR(rt0.c0)))OR(t0.c1)))AND(t0.c1))) AND (((t0.c0) NOT BETWEEN (t0.c1) AND (0.9264168443868519)))) HAVING CAST((rt0.c0 IN (rt0.c2)) AS REAL); -- 0ms;
SELECT ALL CAST(NULL AS TEXT), (- (((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))), ((((((((rt0.c2 COLLATE NOCASE)OR(((rt0.c0)>=(t0.c0)))))OR(MIN(rt0.c0))))AND((('') BETWEEN (t0.c0) AND (rt0.c0)))))OR(((rt0.c1)==(rt0.c0)))) FROM rt0;SELECT ALL LIKELIHOOD(CASE WHEN rt0.c1 THEN t0.c1 ELSE t0.c1 END, 0.29618365545498504) FROM rt0 ORDER BY 0.7615841934438548  NULLS FIRST, ((((CAST(rt0.c2 AS INTEGER))AND(CASE WHEN '-1594166841' THEN t0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE 0.11130559272759799 END)))OR(((t0.c2)&(t0.c1)))) ASC  NULLS LAST, ((t0.c2) NOTNULL) ASC;SELECT DISTINCT COUNT(((rt0.c0) NOTNULL)) FILTER(WHERE LOWER(CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE NULL END)) OVER (), CUME_DIST() OVER (), ((((rt0.c1)AND(t0.c2)))OR(t0.c1)) COLLATE NOCASE FROM t0 WHERE ((((NOT (0.9996225475533601)))>=(((-1793090203) NOTNULL)))) GROUP BY ((UNLIKELY(t0.c1)) IS TRUE), CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t0.c1 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN -1896598524 THEN t0.c1 END END, (((rt0.c1))==((t0.c0))) COLLATE RTRIM HAVING (~ (CHAR(t0.c1, t0.c2, rt0.c2)));SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c0)%(t0.c0)))), CASE WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE CAST(x'' AS BLOB) END, MIN(((t0.c0)>=(t0.c1))) FROM rt0 WHERE (CASE WHEN (('261801432')|('RzA2}ဇQ*')) THEN ((0.21894543381917575)<=(-1151567796)) ELSE ((((0.45508467393313856)AND(NULL)))OR('397246482')) END);SELECT DISTINCT (NOT (rt0.c1)) FROM t0;SELECT ALL MAX((((rt0.c2)) NOT BETWEEN ((t0.c2)) AND ((rt0.c0)))) FROM rt0, t0; -- 0ms;
SELECT ((((rt0.c2)==(t0.c0))) BETWEEN (GROUP_CONCAT(rt0.c0)) AND ((x'7532348748cb4a65' IN (rt0.c2)))), (((((t0.c1, rt0.c1, rt0.c1, t0.c1, t0.c1))!=((t0.c1, t0.c1, NULL, rt0.c2, rt0.c0))))|(t0.c2 COLLATE BINARY)), '720430631' FROM t0, rt0; -- 1ms;
SELECT ((((rt0.c0) IS TRUE)) NOTNULL) FROM t0, rt0 WHERE (CAST(NULL COLLATE BINARY AS TEXT)) LIMIT 1392139147; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) AS TEXT) FROM t0 WHERE (((CAST(NULL AS TEXT)) IS FALSE));SELECT (((t0.c0 IN ()))%(((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))) FROM rt0, t0 WHERE (((CASE NULL  WHEN '!]' THEN -1058902710 ELSE '4|' END) ISNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN rt0.c1 ELSE (NOT (t0.c0)) END FROM rt0;SELECT (((((rt0.c0, t0.c1, 'qKLp_ogM')) NOT BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((t0.c2, t0.c0, t0.c0))))+(((t0.c2)<>(t0.c1)))), (((x'', rt0.c2, rt0.c1)) BETWEEN ((((rt0.c1)IS NOT(t0.c2)), ((t0.c1)<(t0.c2)), ((t0.c2)/(t0.c0)))) AND (((+ (']燲')), 0.6914241668236398, ((t0.c2)&('㱶C'))))), t0.c1 FROM t0, rt0; -- 0ms;
SELECT ALL x'' FROM t0, rt0 ORDER BY LIKELIHOOD(DISTINCT t0.c1, 0.5091614625203472)  NULLS LAST; -- 0ms;
SELECT (((json_remove(t0.c2, rt0.c2)))<>((UPPER(DISTINCT rt0.c0)))), CAST(CASE t0.c1  WHEN t0.c1 THEN t0.c2 END AS TEXT), '748984717' FROM rt0, t0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT t0.c1) COLLATE RTRIM FROM t0, rt0; -- 1ms;
SELECT ((CASE WHEN rt0.c1 THEN rt0.c2 END)<<(rt0.c1)) FROM t0 CROSS JOIN rt0 ON CAST(CAST(rt0.c0 AS REAL) AS BLOB) WHERE ((((x'edd6')%(-408645203)) IN ())); -- 0ms;
SELECT ALL 0.8426685849482298 FROM rt0, t0 WHERE (((((x'') ISNULL)) ISNULL)); -- 0ms;
SELECT DISTINCT (((t0.c1) IS TRUE) IN ()) FROM t0 RIGHT OUTER JOIN rt0 ON ((CAST('1785084855' AS BLOB)) IS FALSE); -- 0ms;
SELECT DISTINCT AVG(CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN 0.4993842696736547 WHEN t0.c2 THEN t0.c2 END) OVER ( RANGE t0.c2 PRECEDING EXCLUDE GROUP) FROM rt0, t0 WHERE ((((0.33539942177337556) BETWEEN (NULL) AND (x'')) IN (ABS(NULL))));SELECT CAST(((((rt0.c1)OR(x'')))AND(t0.c0)) AS NUMERIC) FROM rt0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((((((((~ (t0.c1)))OR(rt0.c1)))AND('')))AND((((('-456408502')AND(NULL)))AND(rt0.c0)))))AND((((-217219507))>=((rt0.c2))))) FROM t0, rt0 WHERE (COALESCE(DISTINCT ((x'dbd2')>(-6.61090117E8)), LIKELY(DISTINCT 0.8771890838762265), json_type(0xffffffffa7e34a04), ('0.8243107834028586' IN ()))); -- 0ms;
SELECT CASE t0.c0 COLLATE NOCASE  WHEN (((t0.c0)) NOT BETWEEN ((0xfffffffff38885f3)) AND ((-1354085709))) THEN ((((((((rt0.c1)OR(x'')))OR(rt0.c2)))AND(t0.c1)))AND(t0.c2)) ELSE ((t0.c0) IS TRUE) END FROM rt0;SELECT CASE (((rt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1)))  WHEN ((t0.c2) NOT NULL) THEN ((t0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)) WHEN ((((NULL)AND(rt0.c1)))OR(t0.c1)) THEN (((t0.c2, rt0.c0, rt0.c2))<>((t0.c0, t0.c1, t0.c1))) WHEN (NULL IN ()) THEN CASE WHEN 0.18770303369944086 THEN rt0.c1 END END FROM t0, rt0; -- 0ms;
SELECT DISTINCT (~ (CAST(rt0.c1 AS TEXT))) FROM t0;SELECT DISTINCT rt0.c2 FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((rt0.c2)IS('')) THEN CHAR(t0.c1) END FROM rt0;SELECT DISTINCT DENSE_RANK() OVER () FROM t0 WHERE ((((((((((x'')AND('Hl')))AND(x'b254')))AND(0.3820011440559994)))OR(NULL)) IN ())) ORDER BY (- (CAST(rt0.c1 AS BLOB)));SELECT DISTINCT NULL FROM rt0, t0 WHERE ((1506040213 IN (((-1770538051) NOTNULL), ((x'')GLOB(x'f248'))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST('f^' AS NUMERIC)), ((rt0.c0) ISNULL) COLLATE BINARY, PERCENT_RANK() OVER () FROM t0, rt0 WHERE (((TRIM(DISTINCT '868921379'))/((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c1 THEN rt0.c0 ELSE t0.c2 END) NOT BETWEEN (((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))) AND ((~ (t0.c0)))) FROM rt0 FULL OUTER JOIN t0 ON ((((((((t0.c1)OR(((0.5229403420130526)-(-1042121918)))))OR((((t0.c1))>((rt0.c1))))))AND((((rt0.c1)) BETWEEN ((t0.c2)) AND ((t0.c0))))))OR(HEX(DISTINCT x'67b0'))) WHERE (((((NOT ('늬Em>v')), (x'' IN (NULL, 'rK!')), HEX(DISTINCT NULL)))=((TRIM(DISTINCT '-673903030', 0.06808870178548243), ((0X1ac39586) NOT BETWEEN (0.9491966463188913) AND (-5.48934974E8)), (- ('282611590')))))) EXCEPT SELECT CAST((((t0.c1, rt0.c2, '')) BETWEEN ((t0.c2, rt0.c0, t0.c0)) AND ((t0.c2, t0.c2, rt0.c0))) AS INTEGER) FROM t0;SELECT ALL COUNT(((t0.c1)AND(t0.c0)) COLLATE NOCASE) OVER () FROM t0, rt0 LIMIT 1698700754 OFFSET 2176221388190235559; -- 0ms;
SELECT DISTINCT rt0.c0, ((((t0.c0)+(rt0.c2))) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((((t0.c1)AND(rt0.c2)))OR(t0.c0)))), TRIM(rt0.c0) COLLATE RTRIM FROM t0 WHERE (((0.9789922742929014)/(1594014031)) COLLATE BINARY);SELECT DISTINCT 0X205368ee, (((((((rt0.c0)OR(rt0.c0)))OR(t0.c1))))!=((((t0.c1) NOT BETWEEN (x'') AND (t0.c2))))), (((((rt0.c0 IN ()))AND((((rt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(rtreenode(t0.c1, t0.c2))), (((rt0.c0)) BETWEEN (('883511930' COLLATE RTRIM)) AND ((COALESCE(DISTINCT t0.c1, t0.c0)))), ABS(((0x3f3a9749) NOTNULL)) FROM t0 WHERE (((((((((((((('-1108610569')AND(-1.7976931348623157E308)))AND(0.16944839296132208)))AND(NULL)))AND(x'')))AND('')))AND('~B')) IN ()));SELECT ALL TYPEOF(DISTINCT ((((((((rt0.c0)AND(t0.c1)))AND(rt0.c0)))OR(t0.c2)))AND(rt0.c2))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT x'', t0.c0, '-69978180' FROM rt0 WHERE ((NOT (CAST(NULL AS NUMERIC))));SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS INTEGER) THEN SQLITE_COMPILEOPTION_USED(rt0.c2) WHEN (+ (t0.c2)) THEN TYPEOF(DISTINCT rt0.c2) WHEN ((t0.c2)+(t0.c0)) THEN CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END FROM t0, rt0 WHERE ((((0.4542401448781135) NOT BETWEEN (x'd5dd') AND (0.9728234482682913)) IN ())); -- 0ms;
SELECT ABS(t0.c0) COLLATE NOCASE FROM t0, rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS NUMERIC))<=((- (rt0.c1)))) FROM t0, rt0 WHERE (CASE WHEN (((x'', NULL, NULL))<((5.45069645E8, 0.630879962764395, x''))) THEN ((((0.6976402196575724)AND('-2040336501')))AND(x'')) ELSE ((('tja~s-')) BETWEEN ((0.06470264001899273)) AND ((x''))) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((- (rt0.c1))) OVER () FROM t0;SELECT (((t0.c2 IN ()))||(((t0.c2)>=(x'b5c6b90e')))) FROM rt0, t0 WHERE (((((((((((0.6876334593886606) NOT BETWEEN (x'') AND (1186669250)))OR((NOT (NULL)))))AND((('-773288811') IS TRUE))))AND(((((x'0c99')OR(0.7085621249836712)))OR(NULL)))))AND(((0.8075199056526283)/(''))))) ORDER BY t0.c0 ASC, ((((rt0.c2)OR((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((0.31839051806890895, NULL, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))))OR(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), (+ (rt0.c2)) COLLATE RTRIM, GROUP_CONCAT(((t0.c0)>=(t0.c0))) OVER ( ORDER BY t0.c2 GROUPS  CURRENT ROW) FROM rt0, t0 WHERE (CAST(NULL COLLATE BINARY AS TEXT)); -- 0ms;
SELECT TOTAL(CASE '1025673173'  WHEN rt0.c0 THEN t0.c2 END), x'' COLLATE RTRIM, CASE t0.c1 COLLATE NOCASE  WHEN rt0.c1 THEN (((rt0.c1))>((rt0.c1))) WHEN TOTAL(t0.c1) THEN ((t0.c2)&(rt0.c1)) WHEN (((t0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2))) THEN ((rt0.c1) NOT NULL) END, GROUP_CONCAT(((t0.c0)>(rt0.c2))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND ((t0.c1) NOT NULL) FOLLOWING), ((((rt0.c1)*(t0.c2)))<>(rt0.c0)) FROM rt0, t0 WHERE (((((0X62e8e59b) BETWEEN ('1~') AND (-1.793090203E9))) NOTNULL));SELECT ((((rt0.c0) ISNULL))>(((t0.c1)IS(t0.c1)))), t0.c0, ((json_patch(rt0.c2, rt0.c0)) ISNULL), COUNT(*), CASE WHEN (((t0.c1))!=((rt0.c2))) THEN ((((rt0.c2)OR(0.15505194492938468)))OR(t0.c2)) ELSE NULLIF(DISTINCT rt0.c0, t0.c1) END FROM t0 WHERE (CAST(((((0x2efdd18f)AND(0.9665353072476613)))AND('wm')) AS REAL)) ORDER BY CASE t0.c2  WHEN (('0.8139074718075264')IS(t0.c1)) THEN CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN t0.c1 THEN x'' WHEN rt0.c0 THEN t0.c2 END ELSE t0.c1 COLLATE RTRIM END ASC  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT(((t0.c1)<=(t0.c2))) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT ((CAST(t0.c0 AS TEXT)) NOT NULL) FROM rt0 WHERE ((((('-1061423202') BETWEEN (x'1c7d') AND (' y'))) ISNULL)) GROUP BY ((COALESCE(DISTINCT rt0.c1, t0.c1)) IS FALSE) HAVING ((CASE WHEN t0.c2 THEN t0.c2 ELSE rt0.c2 END) BETWEEN (((((t0.c2)OR(rt0.c1)))AND(rt0.c0))) AND (CAST(t0.c0 AS TEXT)));SELECT ALL (~ ((NOT (t0.c0)))) FROM rt0;SELECT ALL (- (((t0.c2) IS TRUE))) FROM t0 WHERE (CASE CASE WHEN 0.43985670870014415 THEN '0.7935882852852696' ELSE -1300848354 END  WHEN CAST(0Xfacc1b2 AS INTEGER) THEN -665416649 ELSE (NULL IN (NULL)) END); -- 0ms;
SELECT DISTINCT (((((t0.c0))=((t0.c2)))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 END) AND (rt0.c2)), ((((rt0.c1) BETWEEN (NULL) AND (t0.c1))) NOTNULL), t0.c1 FROM rt0, t0 WHERE ((((1807597100 IN ())) BETWEEN (((((-1.073672076E9)OR(NULL)))OR(x''))) AND ('-1807560352' COLLATE BINARY))) ORDER BY ((rt0.c0)LIKE(IFNULL(t0.c2, t0.c0))) ASC; -- 0ms;
SELECT DISTINCT t0.c0 FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)<('楶')))IS((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c1))))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT COALESCE(((rt0.c2)IS(rt0.c0)), ((rt0.c0) IS FALSE)) FROM rt0, t0 WHERE (((((x'')AND((('R\n') IS FALSE))))OR(('26741100' IN ())))); -- 0ms;
SELECT ((((rt0.c2)AND(t0.c0)))AND(t0.c1)) COLLATE RTRIM, (((NOT (rt0.c1)))>(GROUP_CONCAT(t0.c1))), t0.c0 FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((('-343157188', rt0.c1, t0.c0, t0.c2, rt0.c2)) NOT BETWEEN ((GROUP_CONCAT(t0.c2), ((t0.c0)<>(rt0.c0)), CAST(t0.c0 AS NUMERIC), (rt0.c1 IN ()), ((rt0.c2)AND(rt0.c2)))) AND (((NOT (rt0.c1)), x'' COLLATE RTRIM, ((t0.c0) IS TRUE), ((rt0.c1)OR(rt0.c0)), 4.16123121E8))) FROM rt0 WHERE (((x'471db967') BETWEEN ((- ('862775772'))) AND (((('-438521009')) BETWEEN (('766505429')) AND ((0.26581285321057235)))))) GROUP BY (((((t0.c1)+(rt0.c0))))<((rt0.c1))) HAVING (rt0.c0 IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c2))));SELECT DISTINCT ((((rt0.c0)>>(rt0.c1)))>>(CASE WHEN t0.c2 THEN rt0.c0 END)) FROM rt0, t0; -- 0ms;
SELECT ALL ((((((rt0.c1) NOT NULL))AND(MAX(NULL))))AND(t0.c2)) FROM t0;SELECT '' FROM t0 LIMIT 1204335853 OFFSET 993181712; -- 0ms;
SELECT ALL UNLIKELY(LOWER(DISTINCT t0.c0)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((((((((t0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN ()), (CAST(t0.c0 AS REAL) IN ()), ((((((t0.c1)!=(rt0.c2)))OR(((((((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))AND(t0.c2)))OR(rt0.c1)))))AND(TYPEOF(DISTINCT rt0.c1))) FROM rt0;SELECT '-1699417317' FROM rt0 WHERE (CAST(x'829964c8' AS TEXT)); -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM rt0, t0 WHERE ((NULL IN ()) COLLATE NOCASE) ORDER BY json_array(x'c0a3b9f8', t0.c0 COLLATE NOCASE) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT UNLIKELY(t0.c1 COLLATE NOCASE), CASE WHEN CAST(NULL AS NUMERIC) THEN '' END, CAST(((rt0.c2) NOTNULL) AS BLOB) FROM t0 NOT INDEXED, rt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT DISTINCT JULIANDAY(CAST('62' AS INTEGER), ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c1)), CASE WHEN t0.c2 THEN t0.c0 END) FROM t0;SELECT ALL ((CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c2 END) NOT NULL) FROM rt0 ORDER BY CASE WHEN ((t0.c2) BETWEEN (rt0.c1) AND (t0.c0)) THEN (NOT (t0.c1)) END ASC  NULLS FIRST;SELECT (NOT ((rt0.c2 IN (rt0.c0)))) FROM t0 WHERE ((((((-1601566868))<((0X1bd00c63))))!=(x'' COLLATE RTRIM))) GROUP BY t0.c1 HAVING ((((NULL IN ())))==((0.05053861706975138)));SELECT ALL x'', LAST_VALUE((('-2040336501')IS((- (rt0.c0))))) OVER (), GROUP_CONCAT(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))) OVER ( ORDER BY CASE (((rt0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c1, rt0.c0)) AND ((t0.c2, t0.c2, rt0.c0)))  WHEN 0.9513759410277669 THEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c1)) ELSE ((((rt0.c1)AND(t0.c1)))AND(NULL)) END ASC  NULLS LAST) FROM t0 LEFT OUTER JOIN rt0 ON -1.665722133E9 WHERE (UNLIKELY(DISTINCT 0.6560121487336171 COLLATE RTRIM)) GROUP BY 0.13244925843587718 HAVING ((CAST(t0.c1 AS NUMERIC)) BETWEEN (((('-2129249127')) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (GROUP_CONCAT(rt0.c2))); -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN ((NULL) NOT BETWEEN (t0.c2) AND ('	29rn')) THEN ((rt0.c2) IS FALSE) END FROM rt0 WHERE (CAST(('#?/''?c*' IN (x'', NULL, 0.26731918472841654)) AS INTEGER));SELECT ((((((((((t0.c2)OR(rt0.c0)))AND(t0.c2)))AND(rt0.c1)))OR(t0.c0)))LIKE((NOT (rt0.c2)))) FROM t0;SELECT ALL TOTAL(((rt0.c2)OR(t0.c1))), rt0.c0, '' FROM rt0, t0; -- 0ms;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c1, LIKELY(CAST(rt0.c1 AS REAL)), CAST(INSTR(t0.c2, rt0.c0) AS TEXT) HAVING ((t0.c2) NOT BETWEEN (NULL) AND ((~ (rt0.c0))));SELECT ALL ((((rt0.c0)AND(t0.c0))) NOT NULL), (((((rt0.c2, 0.24888001634209123, rt0.c0, rt0.c2, rt0.c1))<=((t0.c0, rt0.c0, t0.c2, '261801432', t0.c2)))) IS FALSE), ((((((((((((NULL COLLATE RTRIM)OR(((rt0.c0)AND(rt0.c2)))))OR((t0.c2 IN ()))))AND((NOT (t0.c2)))))AND(rt0.c1)))AND(((((t0.c1)AND(t0.c1)))OR(rt0.c0)))))OR((t0.c1 IN ()))) FROM rt0, t0 GROUP BY rt0.c1 HAVING ((CAST(rt0.c0 AS REAL))|(t0.c0)); -- 0ms;
SELECT DISTINCT TOTAL('yjH0r') OVER () FROM t0, rt0 GROUP BY (((((((rt0.c1, t0.c1, rt0.c1))<=((t0.c0, t0.c0, rt0.c0))))AND(CASE '4䈮'  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(t0.c0 COLLATE RTRIM)); -- 0ms;
SELECT ALL (COUNT(*) IN ()) FROM t0, rt0 WHERE (((((x'c2ea')GLOB(x'a232')))<=(-720559362 COLLATE BINARY))) GROUP BY ((+ (rt0.c1)) IN ()) ORDER BY (((t0.c1)) NOT BETWEEN ((CAST(t0.c2 AS BLOB))) AND (((- (t0.c2))))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, t0 WHERE ((((CAST(-2040336501 AS REAL)))>(('0.4587218317113603')))); -- 0ms;
SELECT ((((rt0.c1 COLLATE BINARY)AND(t0.c1 COLLATE NOCASE)))AND(CASE rt0.c2  WHEN rt0.c2 THEN t0.c2 ELSE -1851234724 END)) FROM rt0, t0 WHERE (((((x'') IS FALSE))/((('') NOT BETWEEN (0.6002339119847105) AND (0.3151003993709054))))); -- 0ms;
SELECT DISTINCT ((t0.c1)<=(rt0.c1)) COLLATE RTRIM FROM rt0 WHERE ((~ ((('搖g7景DL醭^&') IS TRUE))));SELECT rt0.c0, FIRST_VALUE(((((rt0.c2)*(rt0.c1))) NOTNULL)) OVER (), rt0.c2, ((- (rt0.c0)) IN ()), (+ (SUM(rt0.c2))) FROM rt0 WHERE (((('-2079533158')LIKE('462782226')) IN ())); -- 0ms;
SELECT ALL NTILE(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) COLLATE BINARY) OVER (), CAST((((rt0.c2))<=((rt0.c2))) AS INTEGER), ((rt0.c1) ISNULL) COLLATE BINARY FROM t0 WHERE (ABS('-2079533158' COLLATE NOCASE)) LIMIT 961037255 OFFSET 862775772;SELECT ALL CAST(((t0.c2)<(t0.c1)) AS BLOB) FROM t0 WHERE (json_object(CASE x'94b1'  WHEN 0.7935882852852696 THEN 1016349230 ELSE x'ada5' END, CAST(5.04867434E8 AS TEXT)));SELECT ALL (CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END IN (CAST(rt0.c2 AS REAL))) FROM t0, rt0 WHERE (CAST(('' IN ()) AS TEXT)); -- 0ms;
SELECT ALL ((HEX(t0.c2)) NOT BETWEEN (COUNT(*)) AND (CAST(t0.c2 AS REAL))) FROM rt0, t0 WHERE (LOWER(((775230574)<('0.10288702981389608')))); -- 0ms;
