-- Time: 2024/06/07 17:06:38
-- Database: database33
-- Database version: 3.40.0
-- seed value: 3312626333
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE t0 (c0 REAL , c1 INT , c2 INTEGER ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0, c1) VALUES (-474299893, NULL, -4.74299893E8); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE UPDATE ON t0 WHEN ((((UPPER(t0.c0))AND((('-474299893')AND(t0.c1)))))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))) BEGIN INSERT OR REPLACE INTO t0(c1, c0) VALUES (0.6945525727595993, ((((((('', x'', ''))<=(('a nA', -2009311580, x''))))AND(CASE x''  WHEN 0.9239373159056621 THEN 0.9239373159056621 WHEN -2009311580 THEN 0.6945525727595993 WHEN x'' THEN NULL ELSE x'ed23' END)))OR(NULL)));END; -- 1ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (x'', NULL, 0.5408569512023267); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES ('-474299893'); -- 0ms;
CREATE UNIQUE INDEX i37 ON t0(((CAST(c1 AS NUMERIC))+(NULL)) COLLATE BINARY DESC,CASE (NOT (x''))  WHEN ((c0) NOT BETWEEN (c2) AND (0.6018374356064712)) THEN ((((((((c0)AND(c1)))AND(c1)))OR(c0)))OR(c0)) ELSE ((c1) BETWEEN (c1) AND (c1)) END COLLATE NOCASE DESC,(+ (0x3a6c5c03))); -- 0ms;
CREATE UNIQUE INDEX i78 ON t0((+ (((c1) BETWEEN (c1) AND (c2)))) COLLATE RTRIM DESC,CASE WHEN (c0 IN ()) THEN (c2 IN ()) ELSE CAST(c2 AS BLOB) END DESC,CASE WHEN ((((((((c0)OR(c1)))OR(c1)))AND(c2)))OR(c0)) THEN CAST(0.10088604489238207 AS TEXT) ELSE 0X3a6c5c03 END COLLATE NOCASE DESC); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES ('', '-1751421572', NULL); -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL, c1=0.5520550155246724; -- 0ms;
UPDATE OR FAIL t0 SET (c1)=('襴d3r'); -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c1)=('0.5408569512023267', x'') WHERE (~ (t0.c0)); -- 0ms;
UPDATE rt1 SET (c2, c2, c2)=('a nA', '', 0X7fab8ba4) WHERE ((rt1.c1)<>(rt1.c1)) COLLATE RTRIM; -- 1ms;
END TRANSACTION; -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES (0.9612832785895271, '^QR6FdtJ{'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (NULL, 0.6564256984667647); -- 0ms;
UPDATE OR IGNORE t0 SET c1='认N~/ n' WHERE CAST((t0.c1 IN ()) AS INTEGER); -- 0ms;
UPDATE rt1 SET (c0)=(NULL) WHERE (((0xffffffff883c56a4))<>(((rt1.c1 IN ())))); -- 1ms;
ANALYZE i37; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (NULL, 0.8656192940760767, 0.5520550155246724), (NULL, x'', NULL), (x'', '0.6018374356064712', 0.5927253650511864); -- 0ms;
INSERT OR FAIL INTO t0(c1, c2) VALUES (0X1f8efacd, 0.7817872911267059); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (974258054, 0xffffffff883c56a4, 0X2f2b76d4); -- 0ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c0) VALUES ('973256441', 0.6851843166211293), (NULL, '0.7817872911267059'), (NULL, ''); -- 0ms;
INSERT OR FAIL INTO t0(c0, c2) VALUES (NULL, 0x3719e055); -- 0ms;
PRAGMA main.wal_autocheckpoint = -9057090868980250077; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (1754455565); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
UPDATE OR ABORT rt1 SET (c2)=('.Y'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3359'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE CAST(((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i37', ' sz=-1715657742 unordered noskipscan'); -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE (~ (((vt0.c0) NOTNULL))); -- 0ms;
UPDATE rt1 SET c2=NULL WHERE (((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)) IN ()); -- 0ms;
UPDATE vt0 SET (c0)=(0.2166469571020816) WHERE CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, x'c93f'))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN vt0.c0 THEN NULL WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) ELSE ((((((((vt0.c0)OR(x'ee71')))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(x'6358') WHERE (CAST(vt0.c0 AS REAL) IN ()); -- 0ms;
REINDEX i37; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.4542886466450261, c2=NULL WHERE (((t0.c1, t0.c1, t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), ((((t0.c2)AND(0.1354746526488877)))OR(t0.c2)), x'', CAST(t0.c0 AS REAL), (t0.c1 IN (t0.c1)))) AND (((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), ((t0.c1)GLOB(t0.c2)), (((t0.c1, x'', t0.c1)) BETWEEN ((0.7817872911267059, t0.c1, 0.6793471906425683)) AND ((t0.c2, t0.c0, t0.c1))), ((t0.c0)+(t0.c0)), CASE NULL  WHEN t0.c0 THEN t0.c2 ELSE 0.024600482697433312 END))); -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(0X500b79e1, 0.6172834854362371) WHERE ((t0.c2)GLOB(t0.c0)) COLLATE NOCASE; -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE SQLITE_VERSION(); -- 0ms;
UPDATE t0 SET (c1, c1)=(0.38985440489506396, NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-1715657742') WHERE CASE WHEN UNICODE(vt0.c0) THEN ((vt0.c0) IS TRUE) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END; -- 0ms;
UPDATE t0 SET c0='' WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.6362734342950626; -- 1ms;
REINDEX; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c2, c0) VALUES (0.955481102994163, x'0326', '.Y'), (NULL, '-215105960', ''), (0.12045506422981245, 0.17335581019568747, 791377620); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.18625735712267533); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE ROUND(CAST(vt0.c0 AS INTEGER), ((vt0.c0) NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'a037'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i57 ON t0((((c1, c2, c1)) NOT BETWEEN (((c0 IN (c1)), (('now!zVWY') NOT BETWEEN ('-1968183911') AND (c2)), ((c1) NOTNULL))) AND ((HEX(c0), (((c1)) BETWEEN ((c1)) AND ((c2))), (((c1))=((c0)))))) ASC,HEX(DISTINCT CHAR(c0)) COLLATE RTRIM ASC,CAST(c2 AS BLOB) COLLATE RTRIM COLLATE BINARY DESC) WHERE (((c1, c0, c1)) BETWEEN ((c1 COLLATE NOCASE, UPPER(c1), ((c1) ISNULL))) AND ((c0, CHAR(c1, c2, NULL), CAST(0.36119484656671963 AS INTEGER)))); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (9.24442709E8, NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL, c0='1581151271'; -- 1ms;
DROP INDEX "i37"; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47554'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), (0.8382794603402708), ('-914180460'); -- 1ms;
UPDATE vt0 SET c0=0.1354746526488877, c0=974258054, c0=9.80179971E8; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'ce8b', c0=0.8371202758673915, c0=x'' WHERE ((vt0.c0)|(vt0.c0)) COLLATE RTRIM; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (x'', x'7c89', x''); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA threads = 8033404856747092639; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (0xffffffffc1f663d4, 0.6018374356064712); -- 0ms;
REINDEX  t0; -- 0ms;
SELECT rtreecheck('rt1'); -- 1ms;
REINDEX i78; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i30 ON t0((((c0 IN ()))>=(((c0)!=(c1)))) DESC,(~ (((((c1)OR(c1)))OR(c2)))),((((CASE WHEN c2 THEN '-1968183911' WHEN c2 THEN c2 WHEN c2 THEN c0 END)OR(((((c0)AND(c2)))AND(c1)))))AND(CAST(c2 AS REAL))) DESC); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.27726834486511787); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1858863514'); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c1=x''; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 867053651); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'i78', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''), (NULL), ('1115724945'); -- 0ms;
VACUUM main; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i78', ' unordered'); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES ('1754455565', 0.17335581019568747), (0.6851843166211293, x''), (x'', '-1517214418'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.7658773501317833); -- 1ms;
UPDATE t0 SET c0=0xffffffffa0f91941; -- 0ms;
UPDATE t0 SET c1='1115724945', c0='1581151271', c0=-1.968183911E9; -- 0ms;
UPDATE OR REPLACE t0 SET (c1)=(x''); -- 1ms;
UPDATE t0 SET (c0)=(0.83186516395959) WHERE t0.c0; -- 0ms;
UPDATE vt0 SET (c0)=(0.623095979137258) WHERE 0.83186516395959; -- 0ms;
UPDATE rt1 SET (c0)=(0Xffffffffc4afa94d) WHERE (UPPER(rt1.c1) IN ((((rt1.c0))<=((0.17994108980987333))), ((rt1.c2)<>(rt1.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (x'', 'G袆_Kr|&'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='-1517214418'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'', '-1928729033', 0.11301341651656815); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR FAIL INTO t0(c0, c2) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c1, c0) VALUES (0.5030883958851246, -1.594287807E9, x''); -- 0ms;
CREATE TABLE t1 (c0 REAL ); -- 1ms;
UPDATE OR REPLACE t0 SET c0=0.5408569512023267, c2=NULL, c2=x'' WHERE (((t0.c1 IN (t0.c1, t0.c0)))>(CASE '2115484960'  WHEN t0.c2 THEN t0.c0 END)); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=2073129500, c0=0.2802279779853202, c0=NULL; -- 2ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
UPDATE t0 SET c0=NULL WHERE TRIM(DISTINCT ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))); -- 1ms;
UPDATE OR IGNORE rt1 SET c1=NULL, c2=NULL, c0=NULL, c1=NULL; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.21879513551153884); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (1950416037); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('1513070525'); -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA wal_autocheckpoint; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
UPDATE OR IGNORE t1 SET c0='T䦗z1E4I'''; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((RTRIM(t0.c2))<(((t1.c0)<=(vt0.c0)))) FROM rt1, t0 WHERE (NULL);SELECT DISTINCT LAG(json_valid((~ (vt0.c0))), (CASE '>E'  WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0)OR(vt0.c0)))), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((-2078501084) BETWEEN (vt0.c0) AND (vt0.c0)))))) OVER () FROM vt0 LIMIT 529464013 OFFSET 791377620; -- 0ms;
SELECT ALL (((0.5943084837496692)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND (((((rt1.c2, t0.c2, rt1.c2, t1.c0, vt0.c0))>=((rt1.c1, rt1.c1, t1.c0, rt1.c0, vt0.c0)))))) FROM rt1, vt0, t0;SELECT vt0.c0 FROM t0, rt1;SELECT DISTINCT MIN(((t0.c1)*(vt0.c0))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT rt1.c2, 'p', CAST((((rt1.c2))<>((rt1.c1))) AS TEXT) FROM rt1, vt0, t1; -- 0ms;
SELECT DISTINCT (((((((((vt0.c0 IN ()))AND(vt0.c0)))OR(((t1.c0)>(t0.c1)))))AND(UPPER(rt1.c0))))AND(((vt0.c0)AND(vt0.c0)))) FROM vt0, t1 WHERE (((((x'') NOT NULL)) IS FALSE));SELECT DISTINCT NULLIF(DISTINCT ((x'')<=(rt1.c1)), ((t0.c0)/(''))), 1936506191, COUNT(((rt1.c0)LIKE(rt1.c2))) OVER () FROM rt1 NOT INDEXED, t1;SELECT DISTINCT CASE (NOT (vt0.c0))  WHEN ((vt0.c0)-(t1.c0)) THEN (((t0.c2, rt1.c0, t1.c0))<=((t0.c2, rt1.c1, t1.c0))) END FROM t1, t0, vt0, rt1; -- 0ms;
SELECT ALL COUNT(((((t0.c2)AND(vt0.c0)))OR(t1.c0))) COLLATE BINARY, (((((((((+ (rt1.c2)))OR(SUM(t0.c1))))OR(rt1.c2)))OR(t0.c1)))OR(((((((((t0.c1)AND(t0.c1)))AND(t0.c0)))OR(rt1.c2)))AND(t0.c1)))), '1133636506' FROM rt1, t1, vt0, t0 WHERE (x''); -- 0ms;
SELECT ALL (NOT (CAST(vt0.c0 AS INTEGER))) FROM t0, vt0, t1, rt1 WHERE (CASE (NOT (x'1342'))  WHEN ('0Yan' IN ()) THEN NULL WHEN ((('974258054', x'bec2', '惻KFt*')) NOT BETWEEN (('-1858863514', NULL, 'now!zVWY')) AND ((0.5943084837496692, 0Xffffffffe1989f09, x'7626'))) THEN ((0.7658773501317833)<>(-1.82165253E8)) WHEN ((0.9421147332296975) NOT BETWEEN (-434075276) AND ('1837135548')) THEN x'' ELSE ((0.8382794603402708)IS(791377620)) END) GROUP BY ((t0.c1) NOT NULL), CAST(rt1.c2 COLLATE BINARY AS REAL), CASE CASE t0.c1  WHEN rt1.c0 THEN t0.c1 ELSE t1.c0 END  WHEN CASE WHEN t0.c0 THEN t1.c0 WHEN rt1.c2 THEN t0.c2 WHEN t0.c2 THEN NULL END THEN ((t0.c0)+(rt1.c1)) WHEN t0.c2 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)) WHEN (~ (t0.c2)) THEN (~ (t0.c0)) END LIMIT -215105960 OFFSET -1517214418; -- 1ms;
SELECT ((((((((x'')OR(t0.c2)))OR(rt1.c2)))OR(CAST(vt0.c0 AS TEXT))))AND(((rt1.c1) ISNULL))) FROM rt1, t1 WHERE (((CAST(NULL AS TEXT)) IS FALSE));SELECT DISTINCT ((((((((((rt1.c0) BETWEEN (t0.c2) AND (rt1.c0)))AND(((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((- (rt1.c1)))))OR(CAST(t0.c2 AS TEXT))))AND(LOWER(DISTINCT t0.c0))) FROM t0;SELECT DISTINCT ((((rt1.c2)|(rt1.c1))) ISNULL) FROM vt0 WHERE ((((NULL COLLATE BINARY))>=((x'f27939d8' COLLATE NOCASE))));SELECT DISTINCT (((((((((t1.c0 IN ()))OR('vs(p\nzV龽x' COLLATE RTRIM)))AND(t0.c2)))AND(AVG(rt1.c1))))OR(((vt0.c0)<<(t0.c2)))) FROM rt1 WHERE (x'a6b4');SELECT DISTINCT 0.6793471906425683 FROM vt0; -- 0ms;
SELECT ALL TOTAL(t0.c0) FROM t1, rt1, t0; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c2) NOTNULL)) FROM vt0, rt1 WHERE ((((('i4Jmb5') NOT NULL))>((~ (0.16601963653731422))))); -- 0ms;
SELECT DISTINCT (((((x'78be0106'))!=((t1.c0)))) NOT NULL) FROM t0, rt1, t1 WHERE (CAST(((((-1880353106)OR(0.3428488074574728)))AND(NULL)) AS REAL)) INTERSECT SELECT ALL LEAD(((t0.c2) BETWEEN (t0.c1) AND (t0.c2)) COLLATE RTRIM, ((((((t1.c0)AND(t1.c0)))OR(t0.c1))) NOTNULL), (((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0))))<=(((NOT (t0.c0)))))) OVER ( RANGE  CURRENT ROW) FROM t0, t1 WHERE ((('Ee' COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT ((((rt1.c1) BETWEEN (t0.c0) AND (t0.c2)))&((rt1.c2 IN ()))) FROM t1, rt1 WHERE ((0.06455071827131842 IN (x'', NULL)) COLLATE RTRIM COLLATE BINARY);SELECT DISTINCT (((((rt1.c1, 0.2663857360202403, rt1.c0))<=((rt1.c0, t1.c0, t1.c0))))+(((t0.c2)>>(rt1.c2)))), CAST(rt1.c1 AS TEXT), (((((rt1.c0)OR(rt1.c2)))AND(t1.c0)) IN ()) FROM t0, t1, rt1, vt0 WHERE (((('980179971' IN ()))GLOB((((NULL)) NOT BETWEEN ((0.9631479844353642)) AND ((NULL)))))); -- 0ms;
SELECT (~ (((((t0.c1)OR(t0.c2)))OR(t0.c1)))), (rt1.c0 IN ()), LAST_INSERT_ROWID() FROM vt0, rt1, t0, t1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1, vt0, rt1; -- 0ms;
SELECT ALL MAX(CASE WHEN '974258054' THEN vt0.c0 END), ((NULLIF(t0.c0, rt1.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((rt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)))), x'' FROM rt1, vt0, t0; -- 1ms;
SELECT DISTINCT ((((rt1.c1) NOT NULL))+(t0.c1)) FROM t0;SELECT CUME_DIST() OVER () FROM t0, vt0, rt1, t1 WHERE ((((- (x'7402'))) NOT BETWEEN (LOWER(0.2788976784636007)) AND (CAST(0.44896853173651796 AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((0.5750332698889667) IS TRUE) FROM rt1, vt0, t1 LIMIT -1801490246 OFFSET -2143816616; -- 0ms;
SELECT ALL (NOT (-1858863514)) FROM vt0, t0 NATURAL JOIN rt1 WHERE ((((- (NULL))) BETWEEN ((('>XvSYz{') BETWEEN (0.3228239717651612) AND ('-661409540'))) AND ((~ ('A%Zs5R}f'))))); -- 0ms;
SELECT ((x'') ISNULL) FROM t1, rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c1)AND(rt1.c2)))AND(NULL)))-(AVG(t1.c0))) FROM vt0, t1, t0, rt1; -- 0ms;
SELECT ALL MAX(((t1.c0) IS TRUE)), ((((vt0.c0)>>(rt1.c2))) IS TRUE), (CASE WHEN vt0.c0 THEN rt1.c2 END IN ()) FROM t0;SELECT (((rt1.c2) NOT BETWEEN (x'c3d8') AND (rt1.c2)) IN ()), (~ (CASE WHEN t1.c0 THEN vt0.c0 ELSE t0.c0 END)), NULL FROM rt1, vt0, t0, t1 WHERE (((((((x'') IS FALSE))AND((+ (0.43749458785983164)))))OR(((((x'')AND(0.9508765541551591)))OR(NULL))))) LIMIT -1832778858; -- 0ms;
SELECT t1.c0, CASE CASE WHEN t0.c2 THEN t0.c1 END  WHEN CASE rt1.c0  WHEN rt1.c0 THEN t1.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c1 THEN '' WHEN t1.c0 THEN NULL WHEN vt0.c0 THEN rt1.c1 END THEN ((((t0.c0)AND(rt1.c1)))OR(t0.c0)) END, 0.7307887761908858 FROM rt1, t1, vt0, t0 WHERE (((((UNICODE(NULL))OR(NULL COLLATE BINARY)))OR(json_remove(0.2663857360202403, '],-1'))));SELECT DISTINCT TOTAL(((t0.c0)IS NOT(rt1.c2))), (((((rt1.c1, t0.c1, rt1.c1))!=((vt0.c0, rt1.c0, NULL))))*((('1024021086') NOTNULL))), LAST_VALUE(((((rt1.c2) NOT BETWEEN (rt1.c1) AND (t0.c1))) NOT BETWEEN ((rt1.c2 IN ())) AND (((t1.c0)&(NULL))))) OVER () FROM vt0, t1, rt1, t0 WHERE (((((0.11623471318346257) NOTNULL))>=(NULL))); -- 0ms;
SELECT ((((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))) NOT BETWEEN (t0.c1) AND (((rt1.c2)||(rt1.c1)))), ((x'') ISNULL), CAST(((t0.c1) BETWEEN (t1.c0) AND (t0.c1)) AS INTEGER) FROM rt1;SELECT DISTINCT CAST(0x5da37374 AS BLOB) FROM t0, vt0, rt1 WHERE ((TRIM(x'', 0.5927253650511864) IN ((('盾s㥣aD7')IS NOT(-2.1510596E8))))) GROUP BY (((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)) IN (((rt1.c1)>(vt0.c0)))) HAVING UNLIKELY(DISTINCT x'' COLLATE BINARY) LIMIT 1315765590; -- 0ms;
SELECT DISTINCT (((('],-1') IS FALSE)) NOT NULL) FROM t0, t1, vt0 WHERE (CASE ((x'981f')!=(NULL))  WHEN (((-1595060191, x'', NULL)) NOT BETWEEN (('-182165253', '0.83186516395959', 'Ivireo?<2')) AND ((NULL, '-17649768', 0.12200273930467043))) THEN ((1.950416037E9) ISNULL) END); -- 1ms;
SELECT ALL (((((t0.c2)AND(rt1.c0)))OR(t0.c1)) IN ()) FROM t1, vt0, t0 NOT INDEXED, rt1 WHERE ((((- ('ꥍU}i')))||(HEX(NULL)))) LIMIT -2143816616; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (t0.c0 IN ()), 0.4276484082271619) FROM t1, t0 WHERE ((CAST('-1801490246' AS TEXT) IN ())); -- 0ms;
SELECT DISTINCT COALESCE(((rt1.c2)IS(t1.c0)), (((t0.c2, t0.c2, t1.c0))<=((t0.c0, t0.c0, rt1.c0)))) FROM rt1 WHERE (((CASE NULL  WHEN '169796087' THEN 0.5927253650511864 WHEN '577496793' THEN x'a861' WHEN 0.6430623436579842 THEN NULL ELSE x'0259' END) ISNULL));SELECT ALL ((json_insert(t0.c2, rt1.c0, t0.c2)) NOT BETWEEN ((t1.c0 IN ())) AND (((rt1.c0) BETWEEN (vt0.c0) AND (t0.c2)))) FROM t0, vt0 GROUP BY (((t0.c1 IN ()))||((rt1.c0 IN ())));SELECT ALL (COALESCE(t1.c0, t1.c0, vt0.c0, t0.c2) IN ()), (((('i4Jmb5') BETWEEN (rt1.c1) AND (rt1.c2)))IS NOT((t0.c1 IN (vt0.c0)))), CAST(COALESCE(rt1.c2, rt1.c2) AS BLOB) FROM t1, vt0, t0, rt1 GROUP BY CASE t0.c2 COLLATE NOCASE  WHEN t0.c0 COLLATE RTRIM THEN CASE vt0.c0  WHEN t1.c0 THEN t0.c1 WHEN rt1.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN rt1.c1 THEN rt1.c0 ELSE t0.c0 END END HAVING ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (COUNT(rt1.c2)) AND (((rt1.c1) ISNULL))) LIMIT -1223995349 OFFSET -1649848405; -- 1ms;
SELECT t0.c2 FROM t0, t1, vt0; -- 0ms;
SELECT LTRIM(((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) FROM vt0, t1, t0, rt1; -- 0ms;
SELECT SUM(((((((((rt1.c0)OR(rt1.c2)))OR(vt0.c0)))OR(t0.c2)))AND(rt1.c1))) OVER () FROM t1, rt1, t0, vt0; -- 1ms;
SELECT (+ (((t0.c2) ISNULL))) FROM t1 WHERE (((((((x'')AND(NULL)))AND(0.5943084837496692)))-(((((0.7527446820181491)AND(NULL)))OR(-2.143816616E9)))));SELECT DISTINCT 1598168777, (((- (t0.c1)))&(CAST(0.442426432111532 AS BLOB))), '-661409540', vt0.c0, CAST(TOTAL(rt1.c1) AS NUMERIC) FROM vt0, rt1, t1, t0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1, t1, vt0 LIMIT 1133202493; -- 0ms;
SELECT MAX('938924827'), (((((((((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c2))))OR(((vt0.c0) IS FALSE))))OR('125962311')))OR(((t0.c2) BETWEEN (t0.c0) AND (vt0.c0)))))AND(CASE WHEN rt1.c0 THEN '1278974617' ELSE t0.c0 END)), SUM(((t1.c0)/(0.16601963653731422))) FILTER(WHERE ((((((((((t0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt1.c1)))AND('>\r\n뵏e')))||((t0.c0 IN (t1.c0))))) OVER ( PARTITION BY ((((UPPER(rt1.c1))AND((t0.c2 IN ()))))OR(rt1.c1 COLLATE NOCASE)), ((NULL) NOTNULL), CASE t0.c2 COLLATE RTRIM  WHEN ((((t1.c0)OR(rt1.c0)))OR(t1.c0)) THEN ((rt1.c1)IS('&eC)')) WHEN CASE rt1.c2  WHEN vt0.c0 THEN rt1.c1 ELSE x'' END THEN rt1.c2 WHEN ((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN (((t0.c2))=((vt0.c0))) WHEN CAST(t0.c1 AS BLOB) THEN ((((((((t0.c0)OR(t0.c2)))AND(rt1.c2)))AND(t1.c0)))AND(t0.c0)) WHEN (NOT (rt1.c0)) THEN rt1.c0 END, vt0.c0) FROM t1, t0 WHERE ((CASE 0.8493294275879767  WHEN 0.1955630656410553 THEN 0.9239373159056621 WHEN '' THEN 'z䫅Vlx|~\n' WHEN 1936506191 THEN 0.6289886327484927 ELSE -3.2229021E7 END IN (('1877564279' IN ('-2143816616')))));SELECT DISTINCT CASE WHEN t0.c2 THEN CASE rt1.c2  WHEN '\n~' THEN t0.c0 END END FROM t0, t1, vt0;SELECT ALL (+ ((t0.c1 IN ()))) FROM rt1, vt0, t0; -- 0ms;
SELECT ALL ((CAST(t1.c0 AS TEXT))LIKE(((rt1.c0)||(t1.c0)))), '', ((((rt1.c2)||(vt0.c0)))>(t0.c0)) FROM rt1 WHERE ((NULL IN ())) ORDER BY t1.c0 ASC  NULLS LAST;SELECT ALL (((vt0.c0)) BETWEEN ((CAST(t1.c0 AS TEXT))) AND ((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))))), (((('^QR6FdtJ{')GLOB(rt1.c2))) NOTNULL), ((((t0.c0)/(t0.c0))) IS TRUE) FROM t1 WHERE (((((NULL) NOT BETWEEN (0.7400051543296291) AND (NULL))) IS FALSE));SELECT DISTINCT ((rt1.c2)<>(vt0.c0)) COLLATE BINARY FROM t1, vt0, rt1 WHERE ((((NULL, x'', 0xffffffff87a43c94)) BETWEEN ((((((x'')OR('')))AND(0.6945525727595993)), (-1883388680 IN ()), ((('*3m'))<((x''))))) AND (((((x'', '', 0.40798099157818724))=((x'', NULL, NULL))), (- (x'')), x'')))); -- 0ms;
SELECT CAST(((t0.c2) ISNULL) AS INTEGER) FROM vt0, t0, rt1, t1 WHERE (((((((NULL)-('376959686')))OR((x'5623' IN ()))))AND(SQLITE_COMPILEOPTION_GET('973256441')))); -- 0ms;
SELECT DISTINCT CASE t0.c2 COLLATE NOCASE  WHEN '-2078501084' THEN 0.8496783809629612 END FROM rt1, t1, t0, vt0 WHERE (((((938924827)-(NULL))) BETWEEN ((0.6810280464979552 IN ())) AND (UPPER('-2009311580')))); -- 0ms;
SELECT DISTINCT TIME(t1.c0, '-118200790', ((t0.c2) BETWEEN (rt1.c0) AND (t0.c0))) FROM vt0, rt1, t1;SELECT ALL (((((t0.c2))>((t0.c0)))) BETWEEN ((~ (vt0.c0))) AND ((+ (vt0.c0)))), (((- (t0.c1))) NOTNULL), ((((CAST(rt1.c0 AS TEXT))OR(((t1.c0) NOT BETWEEN (rt1.c0) AND (t0.c1)))))AND(NULL)) FROM t1, rt1;SELECT ((((rt1.c2) NOTNULL)) BETWEEN (t0.c1 COLLATE BINARY) AND (((((((((rt1.c0)AND(t0.c2)))AND(rt1.c0)))OR('-1e500')))OR(rt1.c0)))) FROM vt0, t0, rt1, t1 GROUP BY CAST((t0.c1 IN ()) AS BLOB), ((rt1.c1 COLLATE RTRIM) BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN t1.c0 ELSE 1.950416037E9 END) AND (vt0.c0 COLLATE NOCASE)), (((NOT (rt1.c2)))+(((rt1.c0)<=(t0.c2)))); -- 2ms;
SELECT AVG((((t0.c2))<>((rt1.c2)))) OVER () FROM t1, t0, rt1; -- 0ms;
SELECT DISTINCT x'' FROM rt1, vt0, t1, t0 WHERE ((((('\^uo/ N8') NOT BETWEEN (NULL) AND (0.12200273930467043)))IS((('376959686') IS FALSE)))); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c1)<>(t0.c0))) OVER () FROM rt1, t1, vt0, t0; -- 0ms;
SELECT ALL (((((((vt0.c0)) BETWEEN ((t0.c2)) AND ((x'3c4e'))))OR(MAX(rt1.c0, rt1.c0))))OR(CASE WHEN vt0.c0 THEN t0.c0 WHEN '-2009311580' THEN t0.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)) FROM t0, rt1, vt0 WHERE ((- (load_extension(0x7440fca5, '0.0'))));SELECT (+ (rt1.c2)) COLLATE NOCASE FROM t1 WHERE ((((('#.Gj2-	~4') BETWEEN (NULL) AND (NULL))) NOT BETWEEN (CASE NULL  WHEN '-1594287807' THEN '974258054' WHEN x'' THEN '' WHEN 'i*' THEN '791377620' WHEN NULL THEN 0.5224905578065827 WHEN x'' THEN NULL ELSE 0.8773179886884354 END) AND ((1024021086 IN ()))));SELECT DISTINCT 0x13a84997 FROM t0 WHERE (((- ('')) IN ())) ORDER BY ((((rt1.c1)<(rt1.c2)))>=(x''));SELECT DISTINCT (((+ (t0.c2)))-((+ (rt1.c0)))) FROM t1, rt1, t0, vt0 WHERE (((((((NULL)AND(NULL)))AND(x'')))<>((((('980179971')OR('0.9612832785895271')))AND('poY<\rUCN'))))); -- 0ms;
SELECT DISTINCT (((((t0.c1))>=((t1.c0))))IS(0Xffffffff8fec16ae)), (NOT (((rt1.c2) BETWEEN (t0.c2) AND (t0.c0)))), ((t0.c0) NOTNULL) FROM rt1, vt0, t0, t1 WHERE (json_array_length((NULL IN ()), NULL COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT LAST_VALUE(CASE WHEN ((rt1.c2)>(t0.c2)) THEN t0.c2 ELSE ((((t0.c1)AND(t0.c0)))OR(rt1.c0)) END) OVER () FROM t1, rt1, t0, vt0 WHERE ((((NULL, '-2073167312', x'5a7d')) NOT BETWEEN ((((NULL) NOT NULL), CASE '0.8371202758673915'  WHEN NULL THEN NULL END, (((x''))>=(('CZ'))))) AND ((((x'')<=(x'6217')), ((1.936506191E9) IS FALSE), CAST('1191743820' AS BLOB))))) LIMIT -914180460 OFFSET -301138565; -- 0ms;
SELECT ALL ((COUNT(*)) BETWEEN ((rt1.c0 IN (t1.c0))) AND (((t0.c1) NOT NULL))) FROM rt1, t1, t0, vt0 WHERE (((CASE WHEN '&9.v/㲔' THEN NULL WHEN x'' THEN x'' WHEN NULL THEN x'' END)IS((('-1715657742')=('-746238513'))))); -- 1ms;
SELECT DISTINCT (+ (((t0.c1)IS NOT(t0.c2)))) FROM t0, rt1; -- 0ms;
SELECT ALL 0xffffffffc6463c22 COLLATE RTRIM, TRIM(DISTINCT ((t1.c0)<<(t0.c2)), (rt1.c0 IN ())), (CAST(t1.c0 AS NUMERIC) IN ()) FROM rt1, t1, vt0;SELECT AVG(vt0.c0) OVER ( ORDER BY ((t1.c0) IS FALSE)  NULLS FIRST) FROM t0;SELECT ALL COUNT(*) OVER ( ORDER BY CAST('' AS NUMERIC) DESC) FROM rt1 WHERE ((((((NULL)AND(NULL)))OR('nS')) IN ())) ORDER BY (((('7_㌕R1fP', t0.c0, rt1.c0)) NOT BETWEEN ((t1.c0, t0.c0, t0.c2)) AND ((rt1.c2, rt1.c1, t0.c2))) IN ()), '2073129500'  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (((t0.c0)LIKE(rt1.c2)))) FROM vt0 WHERE (CAST(x'96b9' AS TEXT) COLLATE NOCASE) GROUP BY ((INSTR(t1.c0, rt1.c0)) NOT BETWEEN (DATETIME(t0.c2, t0.c1, vt0.c0, rt1.c2, t0.c1)) AND (load_extension(t0.c1)));SELECT (('' COLLATE RTRIM)>(CAST(t0.c2 AS TEXT))) FROM rt1, t0, vt0, t1 WHERE ((((((('1598168777')OR(NULL)))OR('-203001101')))%(((((1133202493)OR('1936506191')))OR(NULL))))); -- 0ms;
SELECT ALL (((t1.c0)IS NOT(t0.c2)) IN ()) FROM t1, vt0, rt1 WHERE (((((NULL)) NOT BETWEEN ((0x30c23e57)) AND ((x''))) IN ())); -- 0ms;
SELECT LOWER(DISTINCT ((t0.c2)IS(rt1.c0))) FROM t0, vt0, rt1 WHERE (CASE WHEN (+ (x'')) THEN IFNULL(x'', 0.23431306299845167) WHEN (+ ('1798738933')) THEN (+ (NULL)) WHEN CAST(x'' AS REAL) THEN ((NULL) NOT NULL) ELSE ROUND('iO', -1649848405) END); -- 0ms;
SELECT DISTINCT ((rt1.c0)<=(t0.c0)) COLLATE BINARY FROM t1 WHERE ((((((((NULL)) NOT BETWEEN (('642939562')) AND ((x''))))AND((('-') BETWEEN ('-2009311580') AND ('-722628875')))))OR('\^uo/ N8' COLLATE NOCASE)));SELECT ALL CASE (t0.c0 IN ())  WHEN vt0.c0 COLLATE BINARY THEN json_array(rt1.c0, rt1.c0) END, GROUP_CONCAT(((((((((t0.c2)OR(rt1.c2)))AND(t0.c1)))AND(t0.c1)))OR(vt0.c0))) OVER ( ORDER BY ((t0.c0)||((+ (vt0.c0)))) DESC), CAST(LOWER(DISTINCT vt0.c0) AS INTEGER), ((MIN(t0.c0))>=(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))), (((rt1.c0 IN (t1.c0)))IS(((t0.c0)=(t1.c0)))) FROM t1, t0 RIGHT OUTER JOIN rt1 ON (+ (CAST(rt1.c0 AS BLOB))) WHERE (CASE WHEN json_patch(0.5840889540978287, '-1967825991') THEN UPPER('-1967825991') END);SELECT DISTINCT ((t0.c1) NOT BETWEEN (rt1.c0) AND (t0.c2)) COLLATE BINARY FROM vt0 WHERE (((((x'' COLLATE NOCASE)OR(((0X7440fca5)OR(0.32458054504567224)))))AND(0.5520550155246724))) GROUP BY ((((((t0.c2)OR(t0.c1)))AND(0.4591467661597243)))>=((((rt1.c1)) NOT BETWEEN ((t0.c2)) AND ((t1.c0))))), 'r', x'' HAVING ((t1.c0 COLLATE NOCASE)LIKE((('169796087') NOTNULL)));SELECT DISTINCT (((t1.c0 IN (rt1.c2))) BETWEEN ((x'' IN ())) AND ('1570993012')) FROM vt0, t1, rt1, t0 GROUP BY ((((t0.c0) IS TRUE))IS NOT(((((t0.c1)OR(t1.c0)))AND(vt0.c0)))), t0.c1, ((((t0.c0)<(rt1.c0))) NOT BETWEEN (x'') AND (((rt1.c1)/(rt1.c0)))) HAVING (((NOT ('-968301539')))|(((t0.c0)<=(vt0.c0)))); -- 1ms;
SELECT DISTINCT COUNT(0x7e610f45) FROM vt0, t0, rt1, t1 WHERE ((+ (NULL)) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (MIN(rt1.c0) IN ()) FROM rt1, vt0 WHERE (((((((((((((NULL)OR(CASE '9k\pO?'  WHEN '' THEN '32117913' ELSE NULL END)))AND(0.7613887752337309)))OR(((NULL) BETWEEN (x'') AND (-9.68301539E8)))))OR((x'2e6c' IN (2139213290)))))OR(((0.15731880411397214) BETWEEN (NULL) AND ('p')))))OR(CASE WHEN 0.9466582070977373 THEN NULL END))) ORDER BY (+ ((('z뚔~''MNt爜a') NOT BETWEEN (t1.c0) AND (t0.c2)))) DESC  NULLS FIRST, (rt1.c2 COLLATE NOCASE IN ()), ((json_array_length(rt1.c2))+(t0.c2));SELECT DISTINCT ((((0.2625454426940925) ISNULL))|('봠uuKⷻv')) FROM vt0, t1, t0, rt1; -- 0ms;
SELECT DISTINCT SUM((+ (NULL)) COLLATE BINARY) OVER () FROM t0 WHERE (((CAST(3.76959686E8 AS INTEGER))<<((((-1.1820079E8)) NOT BETWEEN ((NULL)) AND (('u\n!_W?z9,')))))); -- 0ms;
SELECT COUNT(*) OVER () FROM t1 WHERE ('숋s'); -- 0ms;
SELECT DISTINCT ((((t1.c0 COLLATE BINARY)AND(CAST(vt0.c0 AS BLOB))))OR('')), ('jqkH' IN ()), ((t0.c1)>>(t0.c0)) COLLATE BINARY FROM rt1, vt0 INDEXED BY i30;SELECT ALL GROUP_CONCAT(MIN(t0.c1 COLLATE BINARY)) FROM rt1 WHERE (-968301539);SELECT DISTINCT CASE WHEN vt0.c0 THEN ((rt1.c2)OR(t0.c2)) END FROM vt0 WHERE (((CAST('\n~' AS NUMERIC)) NOT BETWEEN (LOWER(DISTINCT NULL)) AND (((0X46223b97) BETWEEN ('-1832778858') AND (0xffffffffb0809709)))));SELECT DISTINCT (((((rt1.c2, vt0.c0, rt1.c1)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((NULL, rt1.c2, t0.c1))))<(((x'')%(rt1.c2)))) FROM t0 LIMIT -347754142 OFFSET -2024687597;SELECT DISTINCT RTRIM(((('0.4276484082271619')) BETWEEN ((t0.c0)) AND ((t1.c0)))) FROM vt0, rt1, t0, t1; -- 0ms;
SELECT DISTINCT SUM((((t0.c0))<>((vt0.c0)))) FROM rt1, t0, vt0; -- 0ms;
SELECT ALL (+ (((t0.c0) BETWEEN (rt1.c2) AND (t0.c2)))) FROM vt0, t1 WHERE ((((((((((((('!6')OR(0xfffffffffe80eabf)))OR(NULL)))OR((('-764584336') NOT BETWEEN ('7Iyw1m*2') AND ('o{t')))))AND((+ (NULL)))))OR(x'')))OR(LAST_INSERT_ROWID())));SELECT DISTINCT MIN(UNLIKELY(t0.c2)) COLLATE BINARY, COUNT(*), (((rt1.c2) BETWEEN (t0.c2) AND (vt0.c0)) IN (CASE rt1.c0  WHEN rt1.c2 THEN x'' END)) FROM t0, vt0 WHERE (((((((((((0x7fab8ba4) NOT BETWEEN (NULL) AND (0.11100938144750361)))OR(CAST(NULL AS BLOB))))AND((((((((('B2')OR(0.19034257915604558)))AND(NULL)))AND(3.29795991E8)))AND(NULL)))))AND(((((NULL)OR(x'')))AND(0.34427176582182606)))))AND(CASE WHEN '169796087' THEN '-69611354' ELSE '-17649768' END)));SELECT CAST(t1.c0 COLLATE NOCASE AS NUMERIC), CASE UPPER(DISTINCT t1.c0)  WHEN t0.c1 COLLATE RTRIM THEN ((t0.c0) BETWEEN (rt1.c0) AND (t1.c0)) END, ((CASE WHEN t0.c1 THEN vt0.c0 ELSE rt1.c1 END)GLOB(t0.c1 COLLATE BINARY)), x'27c1', PRINTF(((t0.c2) BETWEEN (rt1.c2) AND (x'')), (((rt1.c0))>=((t0.c2))), ((t0.c2)<=(rt1.c1))) FROM t1, t0, rt1, vt0 WHERE (CAST(CASE WHEN NULL THEN 'i*' END AS TEXT)) INTERSECT SELECT ALL AVG((rt1.c2 IN ())), MIN(((((rt1.c1)AND(t0.c1)))OR(rt1.c1))), ((0.053644883213019856 COLLATE NOCASE) ISNULL), TOTAL(LIKE('-17649768', rt1.c1)) OVER (), ((((t0.c2) BETWEEN (t1.c0) AND (rt1.c2))) BETWEEN ((vt0.c0 IN ())) AND (((t0.c1) NOT NULL))) FROM t0, rt1, vt0, t1; -- 0ms;
SELECT DISTINCT ((((-89835017) BETWEEN (vt0.c0) AND (rt1.c0))) IS TRUE), ((((((((rt1.c1)AND((vt0.c0 IN (t0.c0)))))OR(((((t0.c1)AND(t0.c2)))AND(t1.c0)))))AND(CASE vt0.c0  WHEN rt1.c2 THEN t0.c1 END)))OR((((t0.c2, t0.c2, rt1.c0))>=((t0.c1, t0.c1, t1.c0))))), t0.c2 FROM vt0, rt1 WHERE ('-623497733') GROUP BY (((rt1.c2)) NOT BETWEEN (((t0.c2 IN ()))) AND ((((t0.c0)-(t0.c0)))));SELECT DISTINCT ((((t0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) IN (((rt1.c1)>=(0.43110631568989133)), (NOT (vt0.c0)))) FROM rt1 NOT INDEXED, t0, t1;SELECT DISTINCT ((((('2g'))<((rt1.c1)))) BETWEEN ('*+d*') AND (t0.c0)) FROM t0 WHERE ((LIKELIHOOD(DISTINCT NULL, 0.2964430476604897) IN ()));SELECT ((x'')%(((t0.c2) NOTNULL))) FROM vt0, rt1, t1 WHERE (((((((((NULL COLLATE BINARY)OR(CAST(x'' AS INTEGER))))AND(((0Xffffffffc4afa94d)<(NULL)))))AND(((((1736381868)AND(x'')))AND('>E')))))OR(((((x'e4db')AND(x'b9e6')))AND(0.32583572715175924)))));SELECT ALL ((NULL)LIKE(((rt1.c2)>=(rt1.c2)))), CASE WHEN NULLIF(DISTINCT rt1.c0, t0.c1) THEN rt1.c2 ELSE (~ (t1.c0)) END, '_J&d142^' FROM t1, t0, rt1; -- 0ms;
SELECT ALL UPPER(vt0.c0) COLLATE NOCASE FROM vt0, rt1, t1, t0 WHERE ((('%K㨙8F捰\rJ}')OR('۝J')) COLLATE RTRIM) ORDER BY ((rt1.c1)IS(highlight(rt1.c1, rt1.c2, t0.c1, t0.c0))); -- 0ms;
SELECT SUM(CAST(vt0.c0 AS INTEGER)) OVER ( ORDER BY rt1.c2  NULLS LAST) FROM t0 NOT INDEXED, t1 ORDER BY (+ (((t0.c0) IS FALSE)));SELECT (((('1024021086', t0.c2, rt1.c2))>=((t1.c0, rt1.c2, 0.6534385918376936))) IN (t0.c1 COLLATE BINARY)) FROM t0;SELECT DISTINCT ((CAST(t0.c2 AS INTEGER))<(t0.c1 COLLATE BINARY)) FROM t1, t0, vt0 WHERE (((CASE WHEN '-2007857388' THEN NULL WHEN x'e19f' THEN x'' WHEN '1315765590' THEN -764584336 END)%(CAST(x'' AS REAL)))); -- 0ms;
SELECT -2078501084 COLLATE NOCASE, (((NOT (rt1.c0)))GLOB((((t0.c0))>=((rt1.c2))))), LIKELY(t0.c1) FROM vt0, rt1, t0, t1; -- 0ms;
SELECT ALL ((((t0.c0) IS FALSE))LIKE((NOT (t0.c2)))) FROM t1, t0, rt1; -- 0ms;
SELECT ((CASE rt1.c0  WHEN t1.c0 THEN rt1.c1 END)>((- (t1.c0)))), (CAST(rt1.c1 AS NUMERIC) IN ((NOT (t0.c1)))), CAST(CASE WHEN 0xffffffffe803b33e THEN t0.c1 END AS BLOB) FROM rt1, t0, vt0 GROUP BY CASE WHEN (+ (rt1.c0)) THEN ((t1.c0)<=(NULL)) ELSE (((t1.c0)) NOT BETWEEN ((t0.c2)) AND ((NULL))) END, t1.c0, GLOB(CHANGES(), (~ (rt1.c0))) HAVING (((rt1.c2)) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND (((~ (t0.c2)))));SELECT DISTINCT (((((t0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (((rt1.c1)OR(vt0.c0)))) FROM rt1, t0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (t0.c2))) IS TRUE) FROM vt0, rt1, t0 WHERE (((TRIM(NULL))&(x'3fe3' COLLATE RTRIM))); -- 0ms;
SELECT CAST(((rt1.c1)!=(vt0.c0)) AS BLOB) FROM t0;SELECT DISTINCT TOTAL(MAX(rt1.c1)) FROM t1, t0, rt1, vt0;SELECT ((((t0.c0 IN (vt0.c0)), ABS(vt0.c0), ABS(t1.c0)))<(((NOT (t0.c0)), ((t1.c0)<>(rt1.c0)), (((rt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c2)))))) FROM rt1 GROUP BY CAST(((((t0.c2)OR(t0.c1)))OR(vt0.c0)) AS BLOB) HAVING ((rt1.c0 COLLATE BINARY)IS((+ (vt0.c0))));SELECT ALL ((NULLIF(DISTINCT t1.c0, t0.c1)) IS FALSE), (((((((((t1.c0 IN (vt0.c0)))OR((((t0.c0)) BETWEEN ((0.9325682403281348)) AND ((t0.c2))))))OR(((t1.c0) ISNULL))))OR(((t0.c0)<<(rt1.c1)))))AND(t0.c2 COLLATE RTRIM)), ((-2.1510596E8) ISNULL) FROM rt1, vt0 WHERE ((((((0.9860521043419825) NOT NULL)))=((CAST('7ꋧ' AS REAL)))));SELECT DISTINCT TIME(TOTAL(t0.c2), CASE t0.c2  WHEN rt1.c0 THEN t1.c0 END, ((t1.c0)%(t0.c0))) FROM t0;SELECT DISTINCT ((rt1.c1)>>(COUNT(*))) FROM vt0, t1 WHERE ((('-1984660272' COLLATE NOCASE) NOT NULL));SELECT ALL ((((((((AVG(rt1.c2))OR(((rt1.c1)IS NOT(t0.c0)))))AND(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c0)))))AND(((vt0.c0) NOT BETWEEN (t1.c0) AND ('1315765590')))))AND(x'c602')) FROM vt0, rt1, t0, t1 WHERE (CASE WHEN NULL COLLATE BINARY THEN (NOT (484687305)) END); -- 0ms;
SELECT NTILE((((LENGTH(t0.c0), ((t0.c0) ISNULL), (- (t0.c1))))<=((((((((((vt0.c0)AND(t0.c2)))OR(t0.c0)))OR(t0.c0)))AND(t0.c2)), (((t0.c1, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2)) AND ((vt0.c0, t0.c2, vt0.c0))), ((t0.c2)GLOB(vt0.c0)))))) OVER (), CAST(TRIM(DISTINCT NULL) AS TEXT), (((('_')AND(CASE x''  WHEN 0.574251162930757 THEN NULL END)))OR((- (0.2830606862603119)))) FROM t0, vt0 WHERE (x'') LIMIT -2024687597; -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((((rt1.c1) ISNULL)))), SUM(((vt0.c0)OR(-4.0241069E8))) OVER (), CASE t1.c0 COLLATE NOCASE  WHEN ((((((((t0.c0)OR(t0.c1)))OR(rt1.c1)))AND(t0.c0)))OR(vt0.c0)) THEN ((rt1.c1) NOTNULL) END FROM t0, vt0 NOT INDEXED, t1 WHERE (((CAST(NULL AS NUMERIC)) ISNULL));SELECT DISTINCT ((rt1.c1)IS NOT(vt0.c0)) COLLATE BINARY FROM vt0, rt1, t1, t0 LIMIT 484687305 OFFSET 1648017698; -- 0ms;
SELECT DISTINCT ((COALESCE(DISTINCT rt1.c0, t0.c2)) NOT BETWEEN ((((t0.c1, t0.c1, t1.c0))<(('0.7817872911267059', rt1.c2, rt1.c1)))) AND (IFNULL(t1.c0, t0.c2))) FROM vt0, rt1 WHERE (-3.2229021E7) ORDER BY x'1e71' DESC;SELECT ALL CAST(t1.c0 AS REAL) COLLATE NOCASE FROM rt1, t0;SELECT DISTINCT ((NULL)&(rt1.c0)) FROM t0, t1 WHERE ((((((x''))<=((0.12200273930467043))))>=(TYPEOF(0.9508765541551591))));SELECT DISTINCT GROUP_CONCAT(CASE t0.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN vt0.c0 WHEN t1.c0 THEN 0.4481174048883493 ELSE t0.c1 END) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS) FROM vt0 WHERE (((NULL) BETWEEN (x'') AND ('0.6172834854362371')) COLLATE BINARY) UNION ALL SELECT ((((((((rt1.c1)OR(t0.c1)))OR(t1.c0)))OR(((t0.c2) BETWEEN (vt0.c0) AND (t0.c1)))))OR(json_array_length(rt1.c1))) FROM vt0;SELECT DISTINCT ((((t0.c1)||(t0.c0)))&(t1.c0)) FROM vt0, t1;SELECT DISTINCT rt1.c0 FROM vt0, t0, rt1, t1 ORDER BY NULL DESC  NULLS FIRST; -- 0ms;
SELECT ALL rt1.c2, MAX((vt0.c0 IN ())), (~ (((vt0.c0) IS FALSE))) FROM rt1 WHERE (CAST(((NULL) NOT BETWEEN (NULL) AND ('-1936769138')) AS INTEGER));SELECT DISTINCT ((COUNT(*)) BETWEEN (t0.c1 COLLATE RTRIM) AND ((rt1.c1 IN ('Y04Gx', t0.c1)))) FROM t1, rt1, vt0, t0 WHERE (NULL) LIMIT 1430109015 OFFSET 1455892930; -- 0ms;
SELECT DISTINCT LIKELY(CASE WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN '-1883388680' WHEN t0.c0 THEN rt1.c2 END) FROM t1, t0, vt0 WHERE (CAST('541070533' AS REAL)) LIMIT -1517214418;SELECT ((((t1.c0)OR(rt1.c2))) BETWEEN ((((t1.c0))>=((t0.c2)))) AND ((rt1.c0 IN ()))), '\{N', ((((t1.c0)%(vt0.c0))) ISNULL) FROM vt0, rt1, t1 WHERE ((+ ('.Y')) COLLATE NOCASE COLLATE BINARY);SELECT ALL (((t0.c1 IN ())) NOTNULL) FROM rt1, vt0, t1, t0; -- 0ms;
SELECT t0.c0 FROM vt0, t1, t0 WHERE (CASE 0.5611684257106083  WHEN x'' THEN NULL ELSE '642939562' END COLLATE RTRIM); -- 0ms;
SELECT ALL x'' COLLATE RTRIM FROM rt1, t0, vt0, t1; -- 0ms;
SELECT ALL CASE WHEN ((((t0.c0)AND(vt0.c0)))OR(rt1.c1)) THEN t0.c0 ELSE ((rt1.c2)>=(vt0.c0)) END FROM t0, rt1, t1;SELECT ((t0.c2)|(((vt0.c0)GLOB(rt1.c0)))) FROM rt1, t1;SELECT DISTINCT CASE t0.c1  WHEN t0.c0 THEN rt1.c0 END COLLATE NOCASE FROM t0, rt1 WHERE (((UNLIKELY(''))&(((x'')/(x''))))); -- 0ms;
SELECT ALL ((((rt1.c1)<=(rt1.c0))) BETWEEN (CASE WHEN t0.c1 THEN rt1.c0 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t1.c0 ELSE '247726586' END) AND (CAST(t0.c0 AS INTEGER))) FROM t1, vt0, rt1 WHERE ((((NULL IN ())) NOT BETWEEN ((~ (x'3df8'))) AND ((('924442709') ISNULL)))) ORDER BY CAST((t0.c2 IN (t1.c0, t0.c0)) AS INTEGER) DESC  NULLS FIRST, (((((x'42d7') NOTNULL)))<=((LIKE(t0.c0, t1.c0)))) DESC;SELECT DISTINCT CASE (((('360699013')OR(t0.c1)))AND(t0.c2))  WHEN (0.24437802092638983 IN (t0.c2)) THEN ((((rt1.c0)OR(3.76959686E8)))AND(rt1.c0)) WHEN '-139353677' THEN 0.5714709117199712 WHEN CASE WHEN t0.c2 THEN vt0.c0 ELSE '-1801490246' END THEN NULL WHEN (((t0.c2, t0.c2, rt1.c1)) BETWEEN ((vt0.c0, rt1.c1, t0.c1)) AND ((t1.c0, t0.c0, t0.c2))) THEN '1405584501' WHEN (((rt1.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))) THEN NULL END FROM t0, t1 WHERE (CASE WHEN ((0.5540031977225771)|(NULL)) THEN ((0x6582568e)|(0xffffffffa19707c9)) END) LIMIT -1883388680;SELECT DISTINCT ((t0.c2 COLLATE BINARY) BETWEEN (((t1.c0) IS FALSE)) AND (1.115724945E9)), ((CASE WHEN t0.c1 THEN rt1.c1 ELSE rt1.c1 END) NOT BETWEEN (((t0.c2)||(vt0.c0))) AND (CAST(t0.c0 AS REAL))), ((((((rt1.c0)AND(0.13322005175179685)))OR(t0.c0))) NOT BETWEEN (json_array('492432748', 0.6667332569171193)) AND (((rt1.c0) BETWEEN (t0.c0) AND (rt1.c2)))) FROM t1, vt0, t0 CROSS JOIN rt1 ON NULL WHERE ((+ (CAST(x'd623' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT SUM(((((vt0.c0)OR(rt1.c2)))AND(rt1.c2))) FILTER(WHERE ((((t0.c1)>(t1.c0))) NOT NULL)) OVER () FROM vt0, rt1, t0, t1 WHERE (9.80179971E8); -- 1ms;
SELECT ((((t0.c2) BETWEEN (rt1.c2) AND (t0.c0))) ISNULL) FROM vt0, t1;SELECT ABS(DISTINCT CAST(t0.c0 AS BLOB)) FROM t0, t1, vt0; -- 0ms;
SELECT ALL ((CAST(NULL AS BLOB))LIKE(((((((((rt1.c0)AND(rt1.c0)))AND(NULL)))OR(rt1.c1)))OR(t0.c2)))) FROM rt1, vt0, t1 WHERE (((((x'59ed') ISNULL)) NOTNULL)) GROUP BY (((((((rt1.c1)AND(t0.c0)))OR(NULL))))>=(((t0.c2 IN ())))), 1.581151271E9, -7.64584336E8;SELECT DISTINCT rt1.c0, UPPER(DISTINCT ((vt0.c0)>(t0.c2))), (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) IS FALSE) FROM vt0, rt1, t1 WHERE ((((((NULL)) BETWEEN ((-1260996921)) AND ((0xffffffffe3bac20b)))) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CAST(x'' AS REAL))));SELECT ((GROUP_CONCAT(''))>=(rt1.c1)) FROM t0;SELECT DISTINCT CASE WHEN COUNT(*) THEN MAX(0.5540031977225771) WHEN rt1.c1 COLLATE RTRIM THEN CAST(x'' AS INTEGER) WHEN ((rt1.c0) ISNULL) THEN (('.y')>=(t0.c1)) WHEN CHAR(t0.c0, rt1.c2, t0.c0) THEN t0.c0 COLLATE BINARY WHEN UNLIKELY(t0.c2) THEN ((0.7805760528159994) BETWEEN (t0.c2) AND (t0.c1)) ELSE CASE WHEN rt1.c1 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN 0.19034257915604558 THEN t1.c0 WHEN rt1.c0 THEN NULL WHEN rt1.c1 THEN t1.c0 ELSE rt1.c2 END END FROM vt0, rt1, t0 WHERE (CAST(0.7092019738080322 AS INTEGER));SELECT DISTINCT CASE '9k\pO?'  WHEN t0.c2 THEN HEX(t1.c0) END, (((((((t1.c0)) NOT BETWEEN ((x'')) AND ((rt1.c2))))OR(((vt0.c0) NOT NULL))))AND((((rt1.c2))>((t0.c1))))), ((((rt1.c2)%(rt1.c2)))>>(((rt1.c1) BETWEEN (rt1.c0) AND (t0.c1)))) FROM vt0, t0 WHERE (((CASE WHEN x'' THEN 'I3d' WHEN 0xffffffffa261d4b0 THEN '1736381868' WHEN x'' THEN 0.4779195429586728 END) NOT NULL));SELECT DISTINCT UNLIKELY(DISTINCT ((t0.c1) ISNULL)) FROM vt0, t1, t0, rt1; -- 0ms;
SELECT ALL load_extension((((t1.c0))==((rt1.c2))), ((((rt1.c1)OR(t1.c0)))OR(rt1.c2))) FROM t1, t0, vt0 ORDER BY ((((rt1.c0) ISNULL)) NOTNULL) DESC, load_extension(LENGTH(rt1.c0), ((t0.c2)+(vt0.c0))), ((((((((((t0.c2)<>(rt1.c1)))AND(((((t0.c1)OR(rt1.c1)))AND(t0.c1)))))OR((rt1.c2 IN ()))))OR(((rt1.c0)==(rt1.c2)))))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)) DESC, CASE (('-1961679831')<(-7.46238513E8))  WHEN (rt1.c1 IN (rt1.c0, vt0.c0)) THEN CAST(t1.c0 AS REAL) WHEN (- (t1.c0)) THEN ((t1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) WHEN ((rt1.c1) IS TRUE) THEN ((t0.c1)|(NULL)) END  NULLS LAST;SELECT DISTINCT RANK() OVER () FROM t0, t1, rt1 WHERE ('-38843026'); -- 0ms;
SELECT ALL ((((t0.c2) NOT NULL))>((+ (t0.c0)))) FROM rt1, t1 WHERE (((((((-1880353106)OR(x'')))AND(x'c16a'))) NOTNULL));SELECT DISTINCT ((((vt0.c0) NOT NULL)) IS TRUE), (CASE t0.c2  WHEN t0.c0 THEN rt1.c1 ELSE t0.c2 END IN ((t0.c0 IN (t0.c1)))), '', COALESCE((- (t0.c1)), rt1.c0 COLLATE BINARY), (- (CASE t0.c0  WHEN vt0.c0 THEN rt1.c0 END)) FROM t0, vt0, rt1; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c0)OR(t0.c1)) THEN t0.c2 COLLATE RTRIM WHEN ((t0.c2)AND(rt1.c1)) THEN rt1.c0 COLLATE NOCASE WHEN STRFTIME(rt1.c0, t1.c0, rt1.c1) THEN CASE t0.c1  WHEN rt1.c1 THEN t0.c0 WHEN t0.c2 THEN t1.c0 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END ELSE ((vt0.c0)%(t0.c0)) END FROM t1, vt0;SELECT DISTINCT ((CAST(t0.c0 AS REAL)) NOT BETWEEN (load_extension(rt1.c1, 0x4391eb9a)) AND (((rt1.c2)AND(t1.c0)))), (+ (rt1.c1)), ((x'') IS FALSE) FROM t0;SELECT DISTINCT ((rt1.c1 IN (t0.c0)) IN ()), (((t0.c0, rt1.c2, vt0.c0)) BETWEEN (((~ (t0.c2)), ((rt1.c1) NOT BETWEEN (t0.c2) AND (t0.c1)), rt1.c2)) AND ((t0.c1, SUM(t0.c0), (- (rt1.c1))))), (((rt1.c0 IN ()))>(GROUP_CONCAT(t0.c2))) FROM t1, rt1 WHERE (NULL);SELECT ((((rt1.c0 COLLATE RTRIM)OR(((t0.c1) ISNULL))))AND(LIKE(rt1.c0, NULL))), t0.c0, ((CASE t1.c0  WHEN t1.c0 THEN t0.c2 WHEN t0.c0 THEN rt1.c2 WHEN t0.c2 THEN rt1.c1 ELSE NULL END)+((- (t0.c1)))) FROM rt1, t0 WHERE (ABS(DISTINCT ((0.07146956783681024)|(x'1bdf'))));SELECT ALL (((t0.c0, t0.c0, rt1.c1, vt0.c0, vt0.c0))>=((t0.c1, t1.c0, rt1.c1, x'', rt1.c1))) COLLATE NOCASE FROM t1, t0 NOT INDEXED, rt1, vt0 LIMIT 1648017698; -- 0ms;
SELECT ALL SUM(((rt1.c2)>=(rt1.c1))) OVER () FROM rt1, t1; -- 0ms;
SELECT DISTINCT ((rt1.c1)!=(((vt0.c0)!=(rt1.c1)))) FROM rt1, vt0, t1, t0 WHERE (((((((((NULL COLLATE NOCASE)OR(CASE '0.16601963653731422'  WHEN '' THEN NULL END)))AND(CAST(x'' AS TEXT))))OR((~ ('902101569')))))AND(((((0xfffffffff5649a8b)OR(0.6549817786212913)))AND(529464013))))) LIMIT 839668831 OFFSET -1610311591; -- 0ms;
SELECT ((CASE rt1.c0  WHEN t1.c0 THEN t0.c2 ELSE rt1.c0 END) BETWEEN (TRIM(t0.c2)) AND (((t0.c2)||(rt1.c2)))) FROM vt0 FULL OUTER JOIN rt1 ON ((NULLIF(t0.c1, rt1.c0)) NOTNULL) RIGHT OUTER JOIN t0 ON (- ((+ (rt1.c2)))) RIGHT OUTER JOIN t1 ON ((((((((((rt1.c0)AND(t0.c1)))OR('-1968183911')))AND(rt1.c1)))AND(t0.c0)))AND(((rt1.c2) NOT BETWEEN (t0.c1) AND (t1.c0))));SELECT DISTINCT COUNT(*), ((((vt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND (rt1.c1 COLLATE BINARY)), CAST(((((((((t0.c1)AND(t0.c2)))OR(t1.c0)))AND(vt0.c0)))OR(rt1.c1)) AS TEXT) FROM rt1, t1, vt0, t0 ORDER BY ((((UPPER(DISTINCT rt1.c2))AND((NULL IN ()))))OR(((((((((t0.c0)AND(0X71eeeaf9)))AND(rt1.c1)))OR(t0.c1)))AND(rt1.c0)))); -- 0ms;
SELECT ALL t0.c0, ((((CASE WHEN rt1.c1 THEN t0.c0 END)AND(COUNT(*))))AND(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)))), LAG(((CAST(vt0.c0 AS REAL))||((t0.c1 IN ()))), TYPEOF((t0.c1 IN (rt1.c1))), t0.c0) OVER ( ROWS (COALESCE(rt1.c2, t0.c2) IN ()) PRECEDING EXCLUDE GROUP) FROM t0, rt1, vt0 WHERE (TRIM(DISTINCT NULL COLLATE BINARY)); -- 0ms;
SELECT DISTINCT t0.c1 FROM t1, vt0 WHERE ('B7') EXCEPT SELECT DISTINCT 'ZF' FROM rt1, vt0, t0;SELECT DISTINCT ((((t0.c0) NOT BETWEEN (rt1.c0) AND ('G{')))/(CAST(t0.c1 AS INTEGER))) FROM t1 WHERE ((((('0.24437802092638983')>=(x'e116')))GLOB(1877564279 COLLATE RTRIM)));SELECT DISTINCT ((HEX(rt1.c2)) BETWEEN (((t1.c0)|(rt1.c1))) AND (((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c1)))AND(t0.c1)))) FROM t1, vt0, t0, rt1; -- 0ms;
SELECT ALL x'' FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN NULL WHEN rt1.c0 THEN t0.c2 WHEN rt1.c0 THEN t0.c1 END) NOTNULL), ((t0.c2) BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN t0.c2 END)), -118200790 FROM t1 WHERE ((- (((((((((x'')AND(NULL)))AND(x'e78a')))OR('fO''g\rV煮L|')))OR('''O')))));SELECT LEAD(NULLIF(DISTINCT CASE WHEN rt1.c1 THEN t1.c0 ELSE rt1.c1 END, rt1.c1), ((SQLITE_VERSION())>(((((rt1.c2)OR(vt0.c0)))AND(rt1.c2)))), 0.0888153758339345) OVER () FROM rt1, vt0, t1 WHERE ((((+ ('-215105960'))) NOT NULL)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING) FROM t1, t0, rt1; -- 0ms;
SELECT DISTINCT NULL FROM t0, t1 WHERE (x''); -- 0ms;
SELECT ((CAST(t0.c1 AS TEXT)) IS TRUE), DENSE_RANK() OVER (), ((((((t1.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))OR((NOT (t1.c0)))))AND(((rt1.c2) IS FALSE))) FROM t1, rt1, vt0;SELECT ALL rt1.c0 FROM t0 LIMIT 1735270375;SELECT DISTINCT ROW_NUMBER() OVER () FROM t1, rt1, t0 WHERE ((((NULL IN (x''))) IS FALSE)); -- 0ms;
SELECT ALL ((x'')AND((((rt1.c0, t1.c0, rt1.c0)) NOT BETWEEN ((t0.c0, rt1.c0, t0.c2)) AND ((rt1.c0, rt1.c0, rt1.c0))))) FROM rt1 LEFT OUTER JOIN t1 ON ((TRIM(rt1.c0, 0.41296879345201043)) NOT BETWEEN (((vt0.c0)||(t1.c0))) AND (rt1.c2)) FULL OUTER JOIN vt0 ON ((((vt0.c0) IS FALSE))>=(((NULL)+(rt1.c1)))) INNER JOIN t0 ON (((t0.c2 IN (rt1.c1))) NOT BETWEEN (0xffffffff8037f458) AND (((vt0.c0)>=(t1.c0)))) WHERE (0.32927916457625384);SELECT CAST((vt0.c0 IN ()) AS BLOB), ((((COUNT(*))OR(((rt1.c2)||(vt0.c0)))))OR(((rt1.c2) NOT NULL))), x'987b' FROM rt1 LEFT OUTER JOIN vt0 ON NULL COLLATE NOCASE LEFT OUTER JOIN t1 ON ((((t0.c2)IS NOT(rt1.c0))) NOT BETWEEN ((+ (x''))) AND (vt0.c0)) LEFT OUTER JOIN t0 ON ((((((rt1.c2) ISNULL))OR((~ (t0.c1)))))OR(((((t0.c0)AND(rt1.c1)))AND(t1.c0))));SELECT t0.c1, rt1.c0, CASE WHEN (- (rt1.c2)) THEN MAX(vt0.c0) END FROM rt1, t1 WHERE ((CASE WHEN NULL THEN 1628660491 ELSE 0Xffffffffe4224ac5 END IN (((((NULL)AND(NULL)))OR('2116692755'))))) GROUP BY CAST((((0.869380703616718))<>((0.3428488074574728))) AS NUMERIC) LIMIT -145906839;SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) BETWEEN (((rt1.c0)*(rt1.c0))) AND (t0.c2 COLLATE RTRIM)), CAST(vt0.c0 COLLATE RTRIM AS NUMERIC), TOTAL(CASE WHEN t0.c1 THEN rt1.c0 WHEN rt1.c2 THEN t1.c0 WHEN rt1.c2 THEN t0.c0 ELSE t0.c2 END) FROM t1, rt1, vt0 EXCEPT SELECT DISTINCT ((((rt1.c0) BETWEEN (rt1.c2) AND (t0.c2)))LIKE((NULL IN ()))), ((((vt0.c0) IS TRUE))>>(((t0.c0) NOT BETWEEN (rt1.c2) AND ('1581151271')))), ((((((t0.c1) ISNULL))AND(HEX(DISTINCT t0.c0))))OR(((((t0.c1)AND(vt0.c0)))AND(rt1.c0)))) FROM t1, vt0;SELECT DISTINCT ((COUNT(*))<=(((t0.c0) BETWEEN (t1.c0) AND (vt0.c0)))) FROM rt1 NATURAL JOIN t1;SELECT DISTINCT COALESCE((+ (t1.c0)), CASE WHEN rt1.c0 THEN vt0.c0 ELSE t0.c1 END) FROM vt0, t1, rt1;SELECT load_extension(CASE t1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN t1.c0 WHEN t0.c0 THEN t0.c0 END, ((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))) FROM vt0, rt1, t1, t0 WHERE (((((x'401f' COLLATE BINARY)OR(json(-1.333750007E9))))OR((('0.6018374356064712') IS TRUE))));SELECT ALL (((rt1.c0 IN ())) IS TRUE) FROM rt1 WHERE (((('-539788295')) BETWEEN ((((NULL)+('De┮{>rq')))) AND ((((0.9945815219554067) NOTNULL))))) GROUP BY ((((NULL) NOT BETWEEN (x'') AND (rt1.c2)))>=(t0.c2)), ((t1.c0)IS NOT((((t0.c2, t1.c0, t1.c0))<>((rt1.c2, rt1.c1, rt1.c1))))), (((t0.c0)) BETWEEN ((((((rt1.c1)AND(rt1.c2)))OR(t0.c2)))) AND ((''))) HAVING ((rt1.c0) BETWEEN (json_patch(vt0.c0, rt1.c0)) AND (TRIM(rt1.c1)));SELECT DISTINCT ((t0.c0)<=('0.7613887752337309')) COLLATE BINARY FROM rt1, vt0;SELECT ALL CAST(((rt1.c0) NOT NULL) AS NUMERIC) FROM vt0, t0, rt1; -- 0ms;
SELECT CASE WHEN ((rt1.c0)*(vt0.c0)) THEN (t0.c0 IN ()) END FROM t1, vt0 WHERE (CASE WHEN highlight('\^UO/ N8', 0.5730773776502845, 0X69a2626, NULL) THEN ABS('') ELSE ((((0.39245240021549854)AND(x'')))OR(x'')) END);SELECT DISTINCT x'' FROM t1, t0; -- 0ms;
SELECT (((~ (t0.c0))) IS FALSE) FROM rt1, vt0, t1, t0; -- 0ms;
SELECT ALL (((x'16a2')) NOT BETWEEN (('?Q륥㓉p')) AND ((MAX(vt0.c0)))), (((((vt0.c0))!=((t0.c0))))%(COUNT(rt1.c2))), ((MAX(t1.c0))+((((t0.c0, rt1.c1, vt0.c0))<=((rt1.c0, rt1.c0, vt0.c0))))) FROM rt1, t0, t1 FULL OUTER JOIN vt0 ON CAST(((rt1.c2)>>(t0.c2)) AS REAL); -- 2ms;
SELECT ALL ((CASE WHEN t1.c0 THEN rt1.c0 WHEN t0.c1 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c1 END) BETWEEN (((rt1.c2) NOTNULL)) AND (CAST(0.39649358485911657 AS BLOB))), ((CASE WHEN rt1.c2 THEN t1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0X45408886 ELSE rt1.c0 END) IS TRUE), json_array_length(((rt1.c0)>>(rt1.c2))) FROM t0;SELECT ALL ((MAX(t1.c0))GLOB((NOT (rt1.c2)))), 0.4600803970456191, '' FROM t0, vt0, rt1, t1 WHERE (((x'' COLLATE BINARY)<<((((NULL, x'259b', NULL)) BETWEEN ((x'', NULL, NULL)) AND (('jNMMe獻Y%8', '-1801490246', '5D')))))); -- 0ms;
SELECT DISTINCT (rt1.c0 IN ()) COLLATE RTRIM, (+ (x'')), (((t1.c0 IN ()))<=(rt1.c0)) FROM t0, rt1 WHERE (((((- (x''))))==(((((('5挀F')OR(0.48109994018462454)))AND('-758207258')))))) GROUP BY x'e77a' HAVING MAX((t1.c0 IN (vt0.c0, rt1.c1)));SELECT DISTINCT (+ ('0.7307887761908858')) FROM vt0, t0; -- 0ms;
SELECT DISTINCT COUNT(TRIM(DISTINCT vt0.c0)) FROM t1, rt1, t0 ORDER BY ((t0.c2 COLLATE BINARY) NOT BETWEEN (((rt1.c0)||(t0.c2))) AND (UPPER(DISTINCT rt1.c0)))  NULLS LAST, t1.c0 ASC  NULLS LAST;SELECT DISTINCT t0.c1 FROM t1, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2) IS FALSE))AND(((rt1.c0)>=(vt0.c0)))), ((((rt1.c0)OR(((t0.c0) ISNULL))))OR((((rt1.c2))<((rt1.c1))))), MAX(((t0.c2)>>(t0.c0)) COLLATE BINARY) FROM t0 WHERE (((('\伂WC\n'))<(('᥁䝑'))) COLLATE RTRIM);SELECT ALL ((((rt1.c1)>(t0.c1))) ISNULL), (((NOT (t0.c0)))+(LIKELIHOOD(t1.c0, 0.5488098338538572))), CASE WHEN (t1.c0 IN ()) THEN ((rt1.c0) ISNULL) ELSE (~ (rt1.c1)) END FROM vt0, t0, t1, rt1 WHERE (((((NULL) NOT NULL))IS NOT((x'a2fc' IN ())))); -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (-553284623) AND (NULL)))&(SQLITE_VERSION())) FROM t0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL))<>(GROUP_CONCAT(rt1.c1))) FROM t0, vt0, rt1, t1 WHERE (CAST(CASE x''  WHEN NULL THEN 0X1230eb6b END AS INTEGER)); -- 0ms;
SELECT DISTINCT t0.c2, (((rt1.c2) ISNULL) IN ()), GLOB(vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE)) FROM t1, rt1, t0, vt0 WHERE (CASE WHEN CASE WHEN 'm	' THEN x'' END THEN (((('')AND('')))OR(0X63e084e3)) ELSE '0.8656192940760767' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT MAX(CAST(t0.c2 AS REAL)) FROM t0, t1, rt1; -- 0ms;
SELECT UNLIKELY(DISTINCT (t1.c0 IN ())), (+ (CAST(rt1.c1 AS BLOB))), COUNT(MAX(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)) FROM t0, vt0, rt1;SELECT ((t0.c0 COLLATE NOCASE)>=(t1.c0 COLLATE NOCASE)) FROM vt0;SELECT FIRST_VALUE((((((t0.c2, t0.c2, t0.c0))<=((t0.c0, t0.c1, t0.c2))))*('-420046465' COLLATE RTRIM))) OVER ( ORDER BY t0.c1 DESC), TOTAL(UNLIKELY(rt1.c1)) OVER ( ROWS ((((vt0.c0)<=(0.6564841276335399)))%(((vt0.c0) IS FALSE))) PRECEDING EXCLUDE NO OTHERS), t0.c0 FROM t0 LIMIT 1136067970;SELECT NTH_VALUE(DATETIME((((vt0.c0))>=((vt0.c0))), CAST(vt0.c0 AS NUMERIC), HEX(vt0.c0), CAST(vt0.c0 AS NUMERIC), ((((0x7fab8ba4)OR(vt0.c0)))OR(vt0.c0))), ((((((((((((vt0.c0)AND(load_extension(vt0.c0))))AND((('-1798921569')<=(vt0.c0)))))OR(x'2a83')))OR(json_object(vt0.c0, vt0.c0))))OR(((vt0.c0)&('924442709')))))OR(vt0.c0 COLLATE NOCASE))) OVER () FROM vt0 WHERE (((0.22840437906390432) IS TRUE) COLLATE BINARY);SELECT DISTINCT ((t0.c1)LIKE(vt0.c0)) COLLATE BINARY FROM rt1, t0, vt0, t1 WHERE ((((NOT (x'')))>=(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((t0.c0)>(rt1.c1))) FROM t1, vt0, t0 WHERE (((NULL) IS TRUE));SELECT (((t0.c1 IN (rt1.c1, rt1.c2))) NOTNULL) FROM vt0, rt1;SELECT ALL TOTAL(((rt1.c1)|(rt1.c0))) FROM vt0;SELECT DISTINCT ((((rt1.c0))<=((rt1.c1))) IN ()) FROM t1 ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN rt1.c1 END) NOT BETWEEN (((t0.c0) NOT BETWEEN (NULL) AND (rt1.c1))) AND (0.3340041259760247)) DESC;SELECT DISTINCT ((((((((((t1.c0) NOT BETWEEN (NULL) AND (rt1.c2)))OR(((t0.c2)*(t0.c0)))))AND(((t0.c2)GLOB(rt1.c2)))))OR(vt0.c0)))AND(SUM('0.2802279779853202'))), t0.c0 COLLATE RTRIM, TRIM(DISTINCT ((t1.c0) BETWEEN (vt0.c0) AND (rt1.c1)), 349395027) FROM t0, rt1, t1;SELECT ((((rt1.c1) NOT BETWEEN (t0.c2) AND (rt1.c0))) IS TRUE) FROM t1 LIMIT -1333750007;SELECT DISTINCT COUNT(((t1.c0) IS TRUE)) FROM rt1, vt0, t0;SELECT DISTINCT CAST(((rt1.c1) IS FALSE) AS TEXT), json_type(CASE t1.c0  WHEN rt1.c1 THEN rt1.c0 END), (rt1.c2 IN ((~ (vt0.c0)))), CUME_DIST() OVER (), (rt1.c2 IN ()) COLLATE NOCASE FROM t1 WHERE ((('-467514683' COLLATE NOCASE)>=(((((((((x'')AND(x'')))OR(0.23760856291284183)))AND(x'')))AND(0.32458054504567224)))));SELECT DISTINCT ((CASE WHEN NULL THEN vt0.c0 WHEN rt1.c0 THEN t0.c1 WHEN t1.c0 THEN 0.1877507593973905 END)>(((NULL) NOTNULL))), (~ ((- ('-221917050')))), (((t0.c0, rt1.c2, t0.c1)) NOT BETWEEN ((((t0.c2)>=(rt1.c0)), (t0.c2 IN ()), ((((((((((((vt0.c0)AND(rt1.c0)))OR(t1.c0)))OR(t0.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c2)))) AND ((CAST(t0.c1 AS NUMERIC), rt1.c0, MAX('蜔Y冤')))) FROM t1, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN (rt1.c2 COLLATE RTRIM)), CAST(((rt1.c0) IS TRUE) AS INTEGER), CHANGES() FROM t0, vt0;SELECT ALL CASE ((vt0.c0)&(t0.c0))  WHEN (- (rt1.c2)) THEN rt1.c1 COLLATE RTRIM ELSE (vt0.c0 IN ()) END, rt1.c0, ((((((((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))AND(COUNT(rt1.c2))))AND(((t0.c1)||(t1.c0)))))OR(NULL)))AND((((t1.c0))=((0.4650600701994204))))) FROM vt0, t0 RIGHT OUTER JOIN t1 ON (+ (HEX(DISTINCT rt1.c2)));SELECT DISTINCT (((rt1.c1) NOT BETWEEN (rt1.c2) AND (t0.c0)) IN ()) FROM vt0, t0, rt1; -- 0ms;
SELECT ALL (- (((rt1.c1)<>(rt1.c2)))) FROM t0, rt1, t1, vt0; -- 0ms;
SELECT (rt1.c2 COLLATE RTRIM IN ()), (((MAX(vt0.c0)))<((((t0.c0) BETWEEN (rt1.c0) AND (t1.c0))))), '1877564279' FROM t1 GROUP BY (((((((((((('')OR(IFNULL(t1.c0, rt1.c1))))OR(t1.c0 COLLATE BINARY)))OR(SQLITE_SOURCE_ID())))AND(x'')))AND(rt1.c2)))AND(((t0.c2)-(t0.c1)))), (~ (CAST(rt1.c0 AS INTEGER))), HEX(CAST(t0.c1 AS BLOB)) HAVING MAX(t0.c1);SELECT ALL (~ (((rt1.c0)AND(t0.c0)))) FROM t0, t1, vt0 WHERE (x'') ORDER BY t1.c0 ASC  NULLS FIRST, (((rt1.c2)) NOT BETWEEN (((t0.c1 IN ()))) AND ((HEX(DISTINCT t0.c1))))  NULLS LAST;SELECT json_array_length(CASE WHEN rt1.c1 THEN t1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN t1.c0 THEN rt1.c2 ELSE rt1.c2 END) FROM t1, t0;SELECT (((rt1.c1)) NOT BETWEEN ((((t1.c0) IS TRUE))) AND ((((t0.c1) IS FALSE)))), ((UNLIKELY(rt1.c1))<=(t0.c2 COLLATE NOCASE)), ((t0.c0 COLLATE RTRIM) BETWEEN (rt1.c1 COLLATE BINARY) AND (((t0.c1) BETWEEN (t0.c2) AND (x'')))) FROM t0, t1, vt0 WHERE ((((x'' IN ()))>((('-1928729033') ISNULL))));SELECT DISTINCT ((((t0.c2)||(t0.c0))) NOT BETWEEN (x'') AND ((t0.c0 IN ()))), (- (GROUP_CONCAT(t0.c2))), SUM((rt1.c1 IN ())) OVER () FROM t1, t0, vt0, rt1; -- 1ms;
SELECT DISTINCT LOWER(((((rt1.c1)OR(rt1.c0)))OR(rt1.c2))), GROUP_CONCAT(((((t1.c0)AND(rt1.c0)))AND(rt1.c2)) COLLATE BINARY) OVER (), ((((((rt1.c0)>(rt1.c0)))OR((((NULL, rt1.c0, vt0.c0)) BETWEEN ((t0.c2, t1.c0, rt1.c2)) AND ((rt1.c1, t0.c1, t0.c0))))))AND(((t1.c0)<=(t0.c0)))) FROM rt1, vt0, t1, t0 WHERE (((((NULL)IS(x'be6c619e'))) IS FALSE)); -- 1ms;
SELECT ALL ((((t0.c1) NOT NULL)) NOT BETWEEN ((+ (rt1.c2))) AND (((rt1.c1) BETWEEN (rt1.c2) AND (t0.c0)))) FROM vt0, t1, t0 WHERE (((((((0.5224905578065827)AND('')))AND(((((NULL)AND('SyeC|y!')))OR(NULL)))))AND(((-47051803)LIKE(NULL))))) GROUP BY ((((((((CAST(rt1.c1 AS REAL))AND(((((rt1.c0)OR(t0.c0)))OR(0x343301bc)))))AND(((rt1.c1)*(0.9037600299604908)))))OR((((t1.c0, NULL, t0.c0)) NOT BETWEEN ((rt1.c0, t0.c0, NULL)) AND ((vt0.c0, t0.c1, 0.24641993472785773))))))AND(((rt1.c1)>=(rt1.c1))));SELECT ALL (((((((((+ (t0.c2)))OR(AVG(vt0.c0))))AND(CAST(t0.c2 AS NUMERIC))))OR(MIN(t0.c2))))OR(((((((((t0.c1)AND(t1.c0)))AND(t0.c1)))AND(rt1.c0)))AND(rt1.c2)))) FROM t0, t1, rt1 WHERE ((((0Xffffffff8c38c5c5 IN (0.13322005175179685)))IS NOT((NOT (0.7083316639316988)))));SELECT DISTINCT ((((((vt0.c0)OR(t0.c2)))OR(t0.c0))) NOT BETWEEN (((t0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))) AND (CHAR(rt1.c0, t0.c2, t0.c1))), ((rt1.c0)-(vt0.c0)) COLLATE NOCASE, CASE WHEN NULL COLLATE RTRIM THEN (~ (x'')) END, ((t0.c2) IS TRUE), (((rt1.c2)) BETWEEN (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))) AND (((rt1.c2 IN ())))), ((((rt1.c1)LIKE(rt1.c0))) IS TRUE), (((((rt1.c0)%(t0.c1))))>=(((t1.c0 IN ())))) FROM t0, vt0 EXCEPT SELECT CAST(((((((((t0.c2)OR(rt1.c1)))OR(rt1.c2)))AND(t1.c0)))OR(0x3bf4bce5)) AS REAL), CASE ((rt1.c1) ISNULL)  WHEN (rt1.c0 IN ()) THEN (NOT ('-905347424')) ELSE (((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) END, (((vt0.c0)LIKE('1937632071')) IN ()), ((HEX(DISTINCT t0.c2)) NOTNULL), (- ((rt1.c2 IN (rt1.c0)))), (((x'', ((((rt1.c2)AND(t0.c0)))OR(t0.c1)), ((rt1.c1)<(t1.c0))))<=(((('') BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c2, GROUP_CONCAT(vt0.c0)))), (((rt1.c2 IN (t0.c2)))<((t0.c1 IN (vt0.c0, t0.c2)))) FROM rt1, t0, t1 INDEXED BY i78 GROUP BY (((((rt1.c0) NOT BETWEEN (rt1.c2) AND (t1.c0)), ((t1.c0) IS TRUE), ((rt1.c2)=('-1598811142')), 0.3112729382981515, (t0.c0 IN ())))<=((((((((((t1.c0)OR(rt1.c2)))OR(t0.c1)))AND(t0.c2)))AND(rt1.c2)), CASE WHEN t0.c2 THEN t0.c2 ELSE 0Xfffffffff9f37b47 END, (rt1.c2 IN (t0.c1)), ((rt1.c0) BETWEEN (rt1.c0) AND (t0.c1)), CAST(t1.c0 AS INTEGER)))), (NOT (((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))), ((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))OR(t0.c0)))OR(t0.c2)))=(CASE rt1.c0  WHEN 0.9383975635949294 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE vt0.c0 END)), (CASE WHEN rt1.c1 THEN rt1.c1 WHEN t1.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 END IN (((t0.c2)>=(rt1.c1)))), json_object(t0.c0 COLLATE BINARY, (t0.c1 IN ()));SELECT (((rt1.c1, t0.c2, t1.c0)) BETWEEN (((NOT (t0.c0)), (t1.c0 IN ()), (((t1.c0))!=((rt1.c2))))) AND ((((rt1.c0)<=(rt1.c0)), ((x'') NOTNULL), rt1.c0))), NULLIF(vt0.c0, CAST(t0.c2 AS NUMERIC)), (+ (((vt0.c0)OR(vt0.c0)))) FROM rt1, t0, vt0;SELECT ALL ((0.7092019738080322) ISNULL), (((t0.c2)) NOT BETWEEN (((t1.c0 IN (vt0.c0)))) AND (('-1178233022'))), DENSE_RANK() OVER ( ORDER BY 2073129500 DESC  NULLS LAST, (((((t1.c0))!=((rt1.c0))))OR(((rt1.c0)IS(rt1.c2))))) FROM t1 WHERE (0.8116593563806416);SELECT ALL ((CAST(rt1.c2 AS TEXT))*(MIN(rt1.c0))) FROM t1, vt0, t0, rt1; -- 0ms;
SELECT COUNT(*) OVER () FROM rt1, vt0, t1; -- 0ms;
SELECT ALL (t0.c0 IN ()) COLLATE BINARY FROM t0 WHERE (CASE ((NULL) BETWEEN (-1223995349) AND ('	3'))  WHEN CASE NULL  WHEN '' THEN NULL END THEN (((x'')) BETWEEN ((x'')) AND (('	3'))) WHEN CAST(NULL AS BLOB) THEN ((0xfffffffffbf7f51f)>>(NULL)) WHEN (((('329795991')AND(NULL)))AND(NULL)) THEN ((NULL)>('PE}F{B''')) ELSE ((0Xffffffffa2ee8f59)/(x'')) END); -- 0ms;
SELECT DISTINCT MAX(t0.c2 COLLATE RTRIM COLLATE RTRIM) FROM t0 WHERE (((x'35c9')>>(x'9f14' COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT CAST(((t1.c0) IS FALSE) AS BLOB) FROM rt1 WHERE (CASE ((x'')||(0Xffffffffbc1b51fb))  WHEN (x'' IN ()) THEN (('1877564279')IS(x'75e7')) END);SELECT x'5ae0', x'c27a', ((((((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((rt1.c0))), ((((rt1.c2)AND(vt0.c0)))OR(t0.c2)), ((vt0.c0)OR(vt0.c0)), (((t1.c0))=((x''))), ((((rt1.c2)AND(vt0.c0)))OR(t0.c0))))<((x'233f8a0e', 0.6191220268863742, ((vt0.c0)+(t0.c0)), CASE x''  WHEN vt0.c0 THEN t0.c1 ELSE t0.c2 END, AVG(t0.c0)))) FROM t0;SELECT ((vt0.c0 IN ()) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT 0.40488137390909473 FROM vt0, rt1 WHERE (((((((((((NULL) NOT NULL))AND(0.7825333072836197 COLLATE NOCASE)))OR('')))OR(CASE WHEN NULL THEN 0X79d681a9 WHEN '' THEN '' WHEN x'51a9' THEN 0X46223b97 END)))AND((((-504611165)) BETWEEN ((0.04390715229570741)) AND (('#iqm*_It|')))))); -- 0ms;
SELECT DISTINCT (NOT (0.6430623436579842)) FROM rt1, t0 LIMIT 1729578134; -- 0ms;
SELECT DISTINCT ((((((t1.c0) IS TRUE))OR(rt1.c2)))AND((+ (t1.c0)))), rt1.c2, TOTAL(NULL) FROM vt0, t1, rt1 WHERE (((((NULL)>>(NULL))) NOT BETWEEN ((('') NOT BETWEEN (0.7734318316890836) AND (x''))) AND (x'3c81' COLLATE BINARY))) UNION SELECT (- (((t0.c2)!=(rt1.c0)))), '', ((((((rt1.c0)AND(t0.c2)))AND(''))) NOT BETWEEN ((~ (0x5a5869aa))) AND (((t0.c0) IS TRUE))) FROM vt0;SELECT COUNT(*) FROM vt0, t1, rt1, t0; -- 1ms;
SELECT ALL ((((((((((((t0.c0)OR(rt1.c2)))OR(t0.c0)))OR(rt1.c1)))OR(t0.c1)))OR((((t1.c0))>=((rt1.c0))))))OR(((rt1.c2) IS FALSE))) FROM t1, vt0, t0, rt1; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1, t0, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2) ISNULL) AS TEXT) FROM vt0;SELECT DISTINCT ((t0.c1) NOT BETWEEN (rt1.c1) AND (t0.c2)) COLLATE NOCASE FROM t0, rt1 GROUP BY 'IJ', ((((0Xfffffffffeee39e5 IN ()), CAST(vt0.c0 AS INTEGER), CASE WHEN rt1.c0 THEN t0.c1 END))>((rt1.c2 COLLATE RTRIM, json_extract(vt0.c0, rt1.c0, t0.c2, vt0.c0), ((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0))))), ((((rt1.c2) NOT NULL)) BETWEEN (t1.c0 COLLATE RTRIM) AND ((t0.c0 IN (rt1.c2, 0.4422574337152543)))) HAVING AVG(json_valid('')) ORDER BY ((((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)))OR((+ (t1.c0))))  NULLS FIRST;SELECT DISTINCT CAST(MIN(vt0.c0, vt0.c0, t0.c2, vt0.c0) AS TEXT) FROM t0, vt0 WHERE (((json(0.4947674493747485)) NOT BETWEEN (((0X1ce3bdc9)|(NULL))) AND ((('-1295407833') ISNULL)))); -- 0ms;
SELECT ALL (NOT (LAST_INSERT_ROWID())) FROM vt0, t0, rt1 WHERE (((NULLIF(DISTINCT NULL, x''))LIKE(((-549163229) BETWEEN (0.7817872911267059) AND (0.13506486693212005))))); -- 0ms;
SELECT DISTINCT LEAD(rt1.c2, (+ (LIKELIHOOD(DISTINCT rt1.c2, 0.002538891888140604))), ((LIKELY(rt1.c0)) NOT NULL)) OVER (), ((COUNT(*))LIKE(CAST(t0.c1 AS REAL))), LAG(rt1.c1, CASE WHEN rt1.c1 COLLATE BINARY THEN CAST(rt1.c0 AS INTEGER) ELSE ((((rt1.c1)AND('202542362')))AND(rt1.c2)) END, ((((rt1.c1) NOT BETWEEN ('2033755024') AND (rt1.c0))) NOT BETWEEN (rt1.c2) AND (((((rt1.c2)AND(vt0.c0)))OR(rt1.c2))))) OVER () FROM rt1, vt0 WHERE ((((x'')==(0x2a305467)) IN ()));SELECT DISTINCT (0.13223084803538243 IN (((rt1.c1) IS FALSE))), ((((((((((vt0.c0)AND(rt1.c1)))AND('')))AND(t0.c2)))AND(t0.c2))) NOTNULL), ((((rt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c2)))=(t0.c2)) FROM vt0, rt1, t1 WHERE ('0.574251162930757');SELECT ((((CAST(t0.c1 AS TEXT))AND((rt1.c0 IN (rt1.c1)))))AND(((vt0.c0)+(rt1.c1)))) FROM vt0;SELECT GROUP_CONCAT(((((((((t0.c2)AND(vt0.c0)))AND(rt1.c0)))AND(t0.c1)))OR(rt1.c2))), ((((rt1.c2)/(t0.c0)))<(0x650d6ea6 COLLATE NOCASE)), ((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN rt1.c1 THEN t0.c2 END)) FROM t1, t0;SELECT DISTINCT CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE, RANK() OVER (), CAST(rt1.c0 AS TEXT) FROM t0, vt0 LIMIT -232185213;SELECT DISTINCT (t0.c1 COLLATE BINARY IN ()) FROM t0 INDEXED BY i57, vt0, t1, rt1;SELECT ALL (((((t0.c0))<=((t1.c0))))!=((+ (t0.c2)))) FROM t1, t0, rt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL))+(NULL)) FROM rt1, vt0, t0, t1; -- 0ms;
SELECT MAX((NULL IN (t0.c1))), 0.8493294275879767, CASE (rt1.c1 IN (t0.c0))  WHEN ((((rt1.c2)AND(vt0.c0)))OR(rt1.c1)) THEN ((((rt1.c2)AND(t0.c2)))OR(vt0.c0)) ELSE CASE NULL  WHEN vt0.c0 THEN t0.c2 WHEN t0.c1 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END END FROM vt0, t1, rt1, t0 WHERE (CASE WHEN CAST(NULL AS REAL) THEN (((6.42939562E8, '0.6534385918376936', -722628875, 0.07134466955167884, 0.2646765462097008))<=((NULL, x'', '\rb!kN\ni', 0.9860521043419825, '-1517214418'))) END); -- 0ms;
SELECT ALL ((rt1.c1) BETWEEN ((~ (vt0.c0))) AND (((((t0.c2)OR(vt0.c0)))AND(t0.c0)))) FROM t0 WHERE ((('' COLLATE BINARY)IS NOT(((NULL) IS FALSE))));SELECT DISTINCT CAST(NULL AS NUMERIC) FROM t1, vt0, rt1 WHERE (CAST(CASE WHEN '933602946' THEN x'' WHEN NULL THEN '-2143816616' WHEN x'aac4' THEN x'2f67' END AS INTEGER)) ORDER BY 0.8219067295059053 DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) COLLATE RTRIM, COUNT(*) OVER (), (+ ('-1862493916')) FROM t0, rt1, vt0, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((t0.c2 IN ())) OVER () FROM vt0, rt1, t0, t1 ORDER BY CASE WHEN (- (t0.c1)) THEN ((t0.c0) NOTNULL) ELSE (((vt0.c0, vt0.c0, t0.c1)) NOT BETWEEN ((1103839923, t0.c1, '')) AND ((rt1.c1, t1.c0, vt0.c0))) END DESC LIMIT -358363057 OFFSET -1798716108; -- 2ms;
SELECT ALL t0.c1 FROM t0, vt0, t1, rt1; -- 0ms;
SELECT ALL LOWER(rt1.c1 COLLATE RTRIM) FROM rt1, t1 GROUP BY t0.c2 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c2))) BETWEEN ('') AND (CASE rt1.c2  WHEN rt1.c2 THEN NULL END));SELECT DISTINCT ((rt1.c0 COLLATE RTRIM) IS TRUE), ((t1.c0 COLLATE NOCASE)<=(((t0.c1) BETWEEN (rt1.c1) AND (rt1.c0)))), NTH_VALUE(LTRIM(((t0.c2) NOT BETWEEN (t1.c0) AND (rt1.c1))), MAX(t0.c0, ((t0.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))) OVER () FROM vt0, t0, rt1, t1 WHERE ((((NULL IN ())) NOT NULL));SELECT DISTINCT (NULLIF(rt1.c1, t1.c0) IN ()) FROM vt0, rt1, t0, t1; -- 0ms;
SELECT DISTINCT (((((~ (vt0.c0)))OR(CAST(t0.c1 AS BLOB))))OR('-1236759318')), TOTAL(((t0.c0)<(t0.c2))) OVER (), ((((UNLIKELY(t0.c0))AND(CAST(rt1.c0 AS NUMERIC))))AND((((t0.c2, t0.c1, 0.058936607253809226))<((t1.c0, t1.c0, t0.c0))))), (((rt1.c2 IN (-2078501084)))AND(((rt1.c1) IS FALSE))), ((NULL) BETWEEN ((- (rt1.c0))) AND (rt1.c2)) FROM t1 INDEXED BY i78, rt1 WHERE ((((NULL)) NOT BETWEEN ((((0.12276713255722072) BETWEEN (NULL) AND (x'')))) AND (((~ (x'd8a2'))))));SELECT ALL ((CASE WHEN t0.c0 THEN 0.5408569512023267 END) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (((t0.c0) NOT BETWEEN (t0.c1) AND (9.73256441E8)))) FROM t1, vt0 ORDER BY ((((t0.c2)-(vt0.c0))) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND (((t0.c0) BETWEEN (t1.c0) AND (rt1.c1))))  NULLS LAST;SELECT ALL ((LENGTH(t1.c0))+(COUNT(*))) FROM t1 RIGHT OUTER JOIN rt1 ON ((rt1.c1 IN ()) IN ((((rt1.c1))<=((t0.c1))))) ORDER BY ((((t0.c1, vt0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((vt0.c0, t1.c0, t1.c0))) IN ()) DESC  NULLS LAST, CASE WHEN (rt1.c1 IN ()) THEN ((t1.c0)GLOB(rt1.c0)) END;SELECT ALL ((((t0.c0) NOTNULL))>>(CAST(rt1.c0 AS NUMERIC))), (((t0.c2 COLLATE RTRIM))<=((t1.c0 COLLATE RTRIM))), (~ (NULL)) FROM vt0, t0, t1 LIMIT -402410690 OFFSET -1832778858;SELECT CAST(((rt1.c1)OR(rt1.c2)) AS TEXT), (((t0.c2 IN ())) NOT BETWEEN (x'') AND ((((rt1.c0))<=((t0.c2))))), (~ (((t0.c0) BETWEEN (rt1.c2) AND (t0.c1)))) FROM t1, rt1;SELECT ((rt1.c2) NOTNULL) COLLATE BINARY FROM t0;SELECT ((((x'') IS FALSE))GLOB(((rt1.c1)|(rt1.c1)))), TOTAL_CHANGES(), ((((((t0.c0)AND(t0.c0)))OR(vt0.c0))) NOT NULL) FROM t1, rt1, vt0, t0 WHERE ((~ ((((0.8655709906105454))<>((0Xffffffffb2082474)))))); -- 0ms;
SELECT (t0.c0 COLLATE NOCASE IN ()), CASE LOWER(DISTINCT rt1.c0)  WHEN 'xa' THEN '974258054' ELSE CASE t0.c0  WHEN vt0.c0 THEN NULL ELSE t0.c2 END END, CAST(json_array(t1.c0, t1.c0, rt1.c1, t1.c0) AS INTEGER), ((((((vt0.c0))=((t0.c1))), x'', (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))))>(((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t1.c0))), CASE t0.c2  WHEN t1.c0 THEN t1.c0 ELSE rt1.c0 END, ((t0.c1)<<(t0.c1))))), NTILE((('')IS(((t0.c1)<>(t0.c2))))) OVER () FROM t1, t0 WHERE (x'1756');SELECT ALL (((((t1.c0 IN (t0.c1, t1.c0)))AND(json_valid(NULL))))AND(rt1.c0 COLLATE BINARY)) FROM rt1 WHERE (0Xffffffff841c9724);SELECT DISTINCT SUBSTR(((((vt0.c0)AND(rt1.c2)))OR(t1.c0)), (t0.c1 IN (t0.c2))) FROM t0, t1, rt1 WHERE ((((x'' IN ()))+(((('1648017698', 0xfffffffffef2af98, 0.8587413107196685))<=((NULL, 0X26f68957, -1999508299))))));SELECT DISTINCT ((((((rt1.c1)OR(t0.c1)))OR(t0.c0))) BETWEEN (((t0.c1)!=(-402410690))) AND ((t0.c2 IN ()))) FROM t0, vt0 WHERE ((((((NOT ('981957270')))OR(((1350614038) ISNULL))))AND(((0.32189461416717013)IS NOT(NULL))))) GROUP BY ((((rt1.c1)||(t0.c1)))||(((((vt0.c0)OR(t1.c0)))AND(t0.c0)))), ((NOT (-1936769138)) IN ()), ((((t1.c0) ISNULL)) BETWEEN ((((t0.c1))!=((t0.c0)))) AND (t0.c0)) HAVING (0.8263301460045116 IN (CAST(rt1.c1 AS INTEGER)));SELECT DISTINCT (((+ (NULL))) NOT BETWEEN (COUNT(rt1.c0)) AND (0.9325682403281348)) FROM t0, rt1, t1 WHERE (((CAST('1919506407' AS TEXT))IS NOT((('1655019109') BETWEEN (NULL) AND (NULL))))) LIMIT 1791505455 OFFSET -1314764922; -- 0ms;
SELECT (((+ (rt1.c1))) IS FALSE) FROM t1, vt0, t0 GROUP BY ((((((((rt1.c1)OR(((x'')%(t0.c1)))))OR(((((vt0.c0)OR(rt1.c0)))OR('-1880353106')))))AND(CASE t0.c0  WHEN t0.c0 THEN 0.40519291294205695 WHEN vt0.c0 THEN t0.c2 WHEN NULL THEN rt1.c2 ELSE t0.c0 END)))AND(CASE WHEN t0.c0 THEN rt1.c2 ELSE '孷]jjp[GQ' END)), t0.c1, (((((((vt0.c0, t1.c0, NULL))>((rt1.c2, t0.c2, t0.c0))))OR(t0.c0)))OR((((vt0.c0, rt1.c0, t1.c0, 0X2cc76858, t0.c0))==((t0.c0, t0.c2, rt1.c1, rt1.c0, rt1.c2))))), ((t0.c1 COLLATE NOCASE) BETWEEN (t1.c0) AND (((t0.c2)|(rt1.c0)))), ((((t1.c0)LIKE(rt1.c0)))<=(((rt1.c0)<<(vt0.c0)))) HAVING (((rt1.c1, t0.c0, rt1.c1, rt1.c0, t0.c1)) BETWEEN ((((t0.c0)<<(t1.c0)), MIN(vt0.c0), ((((rt1.c1)OR(vt0.c0)))OR(rt1.c0)), (t1.c0 IN ()), ((t1.c0) IS TRUE))) AND ((NULL, ((t0.c1)>(t0.c0)), ((((((((t0.c2)AND(t0.c1)))AND(rt1.c1)))AND(t0.c0)))AND(rt1.c2)), SUM(vt0.c0), UNICODE(t1.c0))));SELECT (x'' IN (((t0.c2)+(rt1.c0)))) FROM rt1 WHERE ((((+ ('-940242996')))||((- (0.6328699651517687))))) LIMIT -1033721493 OFFSET 2063112984;SELECT DISTINCT MIN(UPPER(t0.c1)) FROM vt0, t0, rt1; -- 0ms;
SELECT DISTINCT LEAD(CAST(((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), CAST((((t1.c0, t1.c0, t1.c0, t1.c0, vt0.c0))>=((t1.c0, t1.c0, t1.c0, vt0.c0, vt0.c0))) AS TEXT), CASE 0.09034491718797089  WHEN ((vt0.c0)&(vt0.c0)) THEN ((t1.c0)<>(x'')) END) OVER () FROM t1, vt0; -- 0ms;
SELECT DISTINCT 0.907257202078065, SUM(CASE t0.c1  WHEN vt0.c0 THEN rt1.c2 WHEN t0.c2 THEN rt1.c1 WHEN rt1.c1 THEN '-137880523' ELSE rt1.c2 END), CAST(((t0.c1)<<(t0.c2)) AS REAL) FROM vt0, rt1, t0, t1 WHERE ((((TIME(x'', 0X1ce3bdc9, x'cd88')))>(((('2026206974') BETWEEN (x'') AND (0.930654146721682)))))) LIMIT -364584474; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0)/(t0.c2)) THEN MAX(0.8538385760112075) WHEN ((((0xffffffffe4679fb1)AND(rt1.c0)))AND(vt0.c0)) THEN 0.19190495844257804 WHEN CAST(t0.c2 AS BLOB) THEN (((rt1.c0, -3.2229021E7, t1.c0)) BETWEEN ((rt1.c0, t0.c1, -1280576298)) AND ((t0.c0, vt0.c0, t0.c1))) WHEN (((rt1.c1, vt0.c0, t0.c0, t0.c1, vt0.c0))>=(('*', t0.c1, -989368236, rt1.c0, t1.c0))) THEN CAST(t0.c2 AS INTEGER) WHEN MIN(rt1.c1) THEN (((vt0.c0))>((t0.c1))) END, ((COUNT(*))-((((('QUHf|')AND(vt0.c0)))AND(vt0.c0)))), vt0.c0 FROM t0, rt1, t1, vt0 ORDER BY ((t0.c2)<(t0.c2)) COLLATE NOCASE ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) FROM rt1, t0, t1;SELECT (((rt1.c1 COLLATE NOCASE))<((STRFTIME('{C6s|', rt1.c1, rt1.c1, x'16e2', rt1.c0)))), TOTAL(((((((((t0.c0)AND(vt0.c0)))OR(rt1.c2)))OR(t0.c1)))AND(rt1.c1))) OVER (), '盾s㥣ad7' FROM rt1 WHERE (((MAX(NULL, '1598168777'))%(((x'8553') NOT NULL))));SELECT ALL (~ (t1.c0 COLLATE RTRIM)) FROM rt1;SELECT DISTINCT ((NOT (t0.c0)) IN ()) FROM t0, t1, vt0, rt1 GROUP BY (~ (((t1.c0)*(vt0.c0)))), (NOT (vt0.c0 COLLATE RTRIM)), (~ (t0.c0)) HAVING t0.c2; -- 1ms;
SELECT DISTINCT ((((vt0.c0)-(t0.c2))) NOT BETWEEN ((NOT (t0.c2))) AND ((t0.c0 IN ()))) FROM rt1;SELECT (NULL IN ()) FROM t1, t0 WHERE (ABS((((0.6205720805494381, x'eeaf', x'')) BETWEEN (('', NULL, x'')) AND ((x'', x'', NULL))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t0, vt0, rt1 GROUP BY ((((((t0.c1) NOT BETWEEN (rt1.c1) AND (t0.c0)))AND(((x'')%(t0.c2)))))AND(CAST(rt1.c0 AS BLOB))), CASE WHEN (t0.c1 IN ()) THEN t0.c1 COLLATE NOCASE WHEN 0.5611684257106083 THEN t0.c0 COLLATE NOCASE WHEN ((t0.c2)IS NOT(t0.c1)) THEN CAST(t1.c0 AS REAL) END, ((((rt1.c0)!=(''))) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN t0.c2 ELSE t0.c1 END) AND (((rt1.c1) IS TRUE)));SELECT CAST(((t1.c0)*(rt1.c0)) AS REAL) FROM vt0 WHERE (CASE WHEN x'' COLLATE NOCASE THEN (+ ('')) ELSE CASE WHEN '-714409473' THEN x'b20f' END END);SELECT ALL AVG(((t1.c0) NOT NULL)) OVER () FROM vt0, t1, t0, rt1; -- 1ms;
SELECT DISTINCT (+ (vt0.c0)) COLLATE NOCASE FROM vt0, rt1 WHERE (((((((x'36e5')AND('')))AND(x''))) BETWEEN (SQLITE_COMPILEOPTION_GET(x'a5ac')) AND ((((('-722628875')AND('139644582')))OR('-51501346'))))) ORDER BY t0.c1 COLLATE RTRIM;SELECT DISTINCT ((((t0.c1)AND(((t0.c2)GLOB(rt1.c2)))))AND(CAST('-1695245581' AS NUMERIC))) FROM vt0, t0, t1, rt1 WHERE ((('-2073167312') NOTNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (rt1.c1)) THEN ((t0.c0)|(vt0.c0)) END FROM t0, t1, rt1;SELECT DISTINCT CASE (+ (rt1.c0))  WHEN ((t0.c0)<=(x'')) THEN rt1.c1 END FROM vt0, rt1, t0, t1 WHERE (((CASE '	g띍盽q('  WHEN x'' THEN -1.595060191E9 END)<(CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT DATE(t0.c2 COLLATE RTRIM, CAST(t0.c2 AS NUMERIC), ((rt1.c0)<=(vt0.c0))) FROM t0 WHERE (((((CASE '2073129500'  WHEN x'' THEN '-467514683' ELSE x'' END)AND(0Xffffffffaa1b0678 COLLATE RTRIM)))OR(RTRIM('*3M'))));SELECT DISTINCT CAST((rt1.c0 IN ()) AS NUMERIC), (((+ (rt1.c1))) NOT BETWEEN (((((x'd603')AND(rt1.c1)))OR(rt1.c1))) AND (((rt1.c0) ISNULL))), (t1.c0 IN ()) COLLATE NOCASE FROM vt0, rt1, t0 WHERE ((((NULL IN (x'', 0.8607056677505127))) NOT NULL)); -- 0ms;
SELECT DISTINCT AVG(json_type(NULL)) OVER () FROM vt0, t0 WHERE (CASE WHEN (- (NULL)) THEN ('-8267224' IN (NULL)) END); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt1, t0 WHERE (TRIM(DISTINCT RTRIM(0.11100938144750361))); -- 1ms;
SELECT ALL rtreenode(((((rt1.c1)OR(t0.c1)))AND(t0.c2)), ((((t0.c0)OR(t0.c1)))AND(vt0.c0))) FROM vt0 INDEXED BY i30 RIGHT OUTER JOIN t0 ON IFNULL((((rt1.c2))!=((rt1.c2))), ((t0.c0)GLOB(rt1.c2))) FULL OUTER JOIN rt1 ON ((((((((((((((-876336680)LIKE(t0.c0)))OR((rt1.c1 IN (vt0.c0)))))OR((NOT (0.06165747812036815)))))AND(((rt1.c1)||(t0.c0)))))OR(((vt0.c0)>=(t0.c0)))))AND(vt0.c0)))AND((vt0.c0 IN (t0.c1, rt1.c0))));SELECT DISTINCT TOTAL(rt1.c0), (json_type(t1.c0) IN (((rt1.c2) IS TRUE))), CASE WHEN CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c2 THEN 0.4596779144927815 WHEN rt1.c2 THEN rt1.c0 END THEN (((rt1.c1)) BETWEEN ((vt0.c0)) AND ((rt1.c0))) END FROM t1, vt0, rt1 WHERE ((((0.14968217931265448)) BETWEEN (((NOT (NULL)))) AND (((+ (0.16601963653731422))))));SELECT DISTINCT ((((CAST(rt1.c1 AS INTEGER))AND(NULL)))OR(MAX(rt1.c2))), (((+ (rt1.c1)))|(((t0.c1) BETWEEN (t0.c2) AND (rt1.c1)))), HEX(t1.c0 COLLATE NOCASE), SQLITE_COMPILEOPTION_GET(AVG(t1.c0)), ((((((t0.c0) ISNULL))AND(rt1.c2 COLLATE NOCASE)))AND(rt1.c1 COLLATE BINARY)) FROM rt1, t1, vt0;SELECT ALL MAX(COUNT(((rt1.c1)AND(rt1.c0)))), t0.c1, ((0.4370632895647002) IS TRUE), ROW_NUMBER() OVER (), vt0.c0, TOTAL(((((t1.c0)OR(vt0.c0)))OR(rt1.c0))) OVER (), TOTAL(CAST(x'' AS REAL)) FROM t1, rt1, vt0;SELECT DISTINCT (((t0.c2)) NOT BETWEEN (((((t0.c0, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, vt0.c0)) AND ((t0.c2, rt1.c2, rt1.c2))))) AND ((UPPER(t0.c1)))) FROM vt0, t0, rt1; -- 0ms;
SELECT DISTINCT NULL FROM t1, t0, vt0, rt1 WHERE (((0.9115083048239793 COLLATE RTRIM)IS((('L6') BETWEEN (-2.007857388E9) AND (0.20000012896459252))))); -- 0ms;
SELECT ALL GROUP_CONCAT(t1.c0) OVER () FROM vt0 WHERE ((((((((((('\rb!kn\ni')OR(NULL)))OR(x'')))AND('')))AND('-1217417298'))) NOT BETWEEN (CAST(x'ce03' AS REAL)) AND (((0.6441622852301992) NOT BETWEEN (NULL) AND (1.7976931348623157E308)))));SELECT DISTINCT ((('P~') IS TRUE) IN (COUNT(t1.c0))), vt0.c0, CAST(((((t0.c0)AND(vt0.c0)))AND(0.14939024498340614)) AS REAL) FROM rt1, t0, t1 WHERE ((((0.7053485705357221 IN ())) BETWEEN (((-1981453337) ISNULL)) AND ((NOT (0.18841959980073675)))));SELECT DISTINCT (CASE vt0.c0  WHEN rt1.c0 THEN t0.c1 ELSE vt0.c0 END IN ()) FROM t1 WHERE ((((0.8371202758673915 IN ()))GLOB((('2073129500') BETWEEN ('VC6Q幰zya') AND (0xffffffff866d2a03))))) GROUP BY CAST(((vt0.c0) NOT NULL) AS REAL), CASE (+ (t1.c0))  WHEN LIKELY(t1.c0) THEN ((((vt0.c0)AND(x'')))AND(t0.c2)) WHEN SQLITE_VERSION() THEN ((rt1.c0)IS NOT(vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((rt1.c1) NOTNULL) END, (((t0.c1)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) AND (((rt1.c0 IN (t0.c1)))));SELECT ALL (((CAST(0.42317700837912897 AS REAL)))<(((t1.c0 IN ())))) FROM t1; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((((rt1.c2) ISNULL)))) FROM vt0, t1, t0, rt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((rt1.c1)<=(vt0.c0)) COLLATE RTRIM FROM t1, t0;SELECT DISTINCT ((MIN(t1.c0))<=(rt1.c2)) FROM rt1, vt0, t1; -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE NOCASE) NOT NULL) FROM vt0, rt1, t0 WHERE (((CASE NULL  WHEN 0.8371202758673915 THEN 0x30c23e57 END) NOT BETWEEN (((x'')-(NULL))) AND (('818036311' IN ('1754455565'))))); -- 0ms;
SELECT DISTINCT (((rt1.c2))>=((((((rt1.c1)AND(rt1.c0)))OR(t0.c1))))) FROM vt0, t0, t1, rt1 WHERE (NULL); -- 0ms;
SELECT ALL (NOT ((+ (vt0.c0)))), ((((((((CAST(vt0.c0 AS INTEGER))OR(((t1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(((t0.c0)/(t0.c1)))))AND(t0.c2 COLLATE BINARY)))AND((((vt0.c0, vt0.c0, 0.25159948172482327))<((rt1.c2, rt1.c0, t0.c1))))), json_array_length(HEX(DISTINCT t0.c1), t1.c0 COLLATE BINARY) FROM vt0, rt1;SELECT DISTINCT ((((t1.c0)<=(t0.c0)))GLOB(TYPEOF(t0.c2))) FROM t1, vt0 LIMIT -1223995349;SELECT ALL ((((LIKELIHOOD(t0.c2, 0.16896748350124247))OR(0X226be6d9)))OR(AVG(t0.c1))), RANK() OVER (), ((NOT (t1.c0)) IN (rt1.c2)), ((SUM(rt1.c2))-(((t0.c0)IS(t0.c1)))), TOTAL(t0.c2) OVER () FROM rt1 NOT INDEXED, vt0, t0 ORDER BY CAST(t1.c0 AS TEXT) COLLATE BINARY DESC  NULLS LAST, CAST(((t0.c0)<>(rt1.c0)) AS BLOB);SELECT DISTINCT x'028d' FROM rt1, t0, vt0, t1; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c2) IS FALSE)), (t1.c0 COLLATE RTRIM IN ()), (SUM(t1.c0) IN (vt0.c0)), vt0.c0, 0.01787991687063084 FROM rt1, t1, t0 ORDER BY ((((((t1.c0)-(rt1.c1)))AND((t0.c2 IN ()))))OR(((t0.c2)IS NOT(rt1.c1)))) ASC  NULLS LAST;SELECT DISTINCT ((x'afba')==(((((((((((((rt1.c0)OR(t0.c0)))OR(t0.c0)))AND('-1797468035')))OR('-1311011869')))AND(t0.c0)))AND(t0.c1)))), CASE WHEN (((t0.c2, rt1.c2, rt1.c2)) BETWEEN ((rt1.c0, t1.c0, rt1.c2)) AND ((t1.c0, rt1.c2, t0.c0))) THEN (((t0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) ELSE ((rt1.c1) NOT NULL) END, CAST(((((vt0.c0)AND(rt1.c2)))OR(t1.c0)) AS REAL) FROM t0, t1, vt0, rt1 WHERE (STRFTIME(CAST('-685239523' AS INTEGER), x'' COLLATE NOCASE, ('826483529' IN ()))); -- 0ms;
SELECT ((((CASE -1e500  WHEN rt1.c0 THEN t0.c1 END)AND('-1e500')))AND(((rt1.c2) NOT BETWEEN (t1.c0) AND (rt1.c0)))) FROM vt0, rt1, t0, t1 ORDER BY (((t1.c0)) BETWEEN ((((rt1.c2) NOT NULL))) AND (((+ (t0.c0)))))  NULLS LAST; -- 1ms;
SELECT DISTINCT SUM(CASE t0.c1  WHEN t0.c1 THEN vt0.c0 ELSE t0.c1 END) FROM t1;SELECT DISTINCT rt1.c0 FROM vt0, t0 NOT INDEXED LIMIT 1323161203 OFFSET 537735349;SELECT ((((rt1.c2) NOT NULL)) IS FALSE) FROM vt0, t0;SELECT DISTINCT (((+ (t0.c1))) BETWEEN (((t0.c0)&(t0.c0))) AND ((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))), (+ (vt0.c0 COLLATE RTRIM)), ((t1.c0) NOT BETWEEN (0.5224905578065827) AND (0.10630099181093855)) COLLATE BINARY FROM t1 GROUP BY ((rt1.c2) IS TRUE) COLLATE NOCASE HAVING ((t0.c2 IN (NULL)) IN (((rt1.c0) BETWEEN (t1.c0) AND (rt1.c2)), (~ (rt1.c1))));SELECT DISTINCT ((((t0.c1) NOT BETWEEN (rt1.c1) AND (t0.c0)))|((t1.c0 IN ()))) FROM t1;SELECT DISTINCT ((NOT (t0.c2)) IN ()) FROM rt1, t1, t0, vt0; -- 1ms;
SELECT DISTINCT CASE CAST(t1.c0 AS BLOB)  WHEN rt1.c0 THEN ((rt1.c0)OR(rt1.c0)) WHEN NULL THEN CASE t0.c0  WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c2 WHEN t1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c2 END WHEN TRIM(DISTINCT vt0.c0) THEN '' END, ((((t0.c1)<(rt1.c2)))OR(CASE t0.c0  WHEN rt1.c2 THEN t0.c1 END)), ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1))) NOTNULL) FROM rt1, vt0, t1 WHERE ((((('g') NOT NULL))<<(UNLIKELY(DISTINCT 0.004843420793665287))));SELECT DISTINCT (CASE t0.c2  WHEN t0.c2 THEN rt1.c0 WHEN 0.7227173212210647 THEN t0.c2 WHEN t0.c1 THEN vt0.c0 END IN ()) FROM t0, rt1, t1, vt0; -- 0ms;
SELECT ALL ((((((((t0.c2)AND(t0.c1)))OR(vt0.c0)))AND((((rt1.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))))))OR(((t0.c1) NOT NULL))) FROM t1, vt0, t0, rt1 WHERE (CAST(CASE 0.9466582070977373  WHEN '' THEN '859242069' ELSE NULL END AS NUMERIC)); -- 0ms;
SELECT ABS(DISTINCT t0.c0) COLLATE RTRIM FROM t1, rt1, t0, vt0 WHERE (-9223372036854775808) GROUP BY ((((rt1.c1) ISNULL)) NOT BETWEEN (((t1.c0)<>(t1.c0))) AND (DATE(vt0.c0, t0.c1, t0.c2, rt1.c0, rt1.c2))); -- 1ms;
SELECT DISTINCT (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)) IN ()) FROM vt0, t0, t1 WHERE (((NULL)AND(CASE '2026206974'  WHEN NULL THEN NULL ELSE x'' END))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1, t0, vt0, t1; -- 0ms;
SELECT COUNT(rt1.c0) FROM rt1, t0, t1 WHERE (((((0.34840821952022805)AND(1211032541)))OR(0.910833232390906)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((t0.c1)AND(t0.c0)))AND(t0.c2)) IN ()) FROM t1, vt0 NATURAL JOIN t0; -- 0ms;
SELECT DISTINCT json_insert(((rt1.c1)<>(rt1.c2)), (NOT (t0.c0)), ((vt0.c0)*(vt0.c0))), CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM, COUNT(((t1.c0)>=(t0.c1))) FROM vt0 WHERE (((COALESCE(x'f7fbc500', 0.7915829795994848))OR(CAST(NULL AS REAL))));SELECT ALL SUM((t0.c1 IN ())) OVER () FROM t0, t1, vt0, rt1; -- 1ms;
SELECT (((rt1.c0 IN (t1.c0))) NOT BETWEEN (((t1.c0) ISNULL)) AND (CAST(t1.c0 AS INTEGER))) FROM t1 INDEXED BY i78, t0, vt0, rt1 LIMIT -1395498281;SELECT COUNT(*) COLLATE NOCASE COLLATE RTRIM FROM vt0, t0; -- 0ms;
SELECT ALL ((NULLIF(vt0.c0, NULL))IS NOT(0.25518234623055347)) FROM t1, t0 LIMIT -347754142;SELECT ALL (((((t0.c1))==((rt1.c2)))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c1 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN rt1.c0 END) AND (IFNULL(DISTINCT rt1.c1, rt1.c2))), (~ (t1.c0)), ((((t0.c2) BETWEEN (t0.c1) AND (vt0.c0)))<<(((rt1.c0) NOTNULL))) FROM t0, rt1, t1 GROUP BY ((NOT (vt0.c0)) IN ()), ((t0.c2 COLLATE RTRIM)*(JULIANDAY(vt0.c0, rt1.c2, rt1.c0, t0.c2, t0.c2))), ((CASE WHEN vt0.c0 THEN x'' END) NOTNULL);SELECT DISTINCT (((((t0.c2) NOTNULL)))==((((((rt1.c0)OR('Infinity')))OR(t1.c0))))) FROM vt0, t0, t1, rt1 LIMIT 767977934 OFFSET -1789956477; -- 0ms;
SELECT ALL t0.c1, NTH_VALUE(((NULL)<>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((NULL) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (-968301539))) OVER (), LAG(((vt0.c0 COLLATE BINARY) ISNULL), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)<>(((vt0.c0)==('1936506191')))), '䰣.dL') OVER () FROM vt0 GROUP BY ((((vt0.c0) NOTNULL)) BETWEEN (t0.c0) AND (((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))), ((((t1.c0) IS TRUE)) ISNULL), ((t1.c0)IS NOT(((rt1.c2) IS TRUE)));SELECT CUME_DIST() OVER ( ORDER BY ((((NOT (t1.c0))))=((((t1.c0)+(rt1.c0))))), (NOT (((t1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) FROM rt1, t0 WHERE (CASE WHEN x'5d4d' THEN '<W' WHEN '2023883663' THEN 'hYMPY~' WHEN NULL THEN 0.1354746526488877 END COLLATE RTRIM);SELECT ALL (((((NOT (t0.c2)))AND((- (t0.c1)))))OR((((0.9361959481164146))=((t0.c0))))) FROM vt0, t1 WHERE ((((LENGTH(0X6d8076bc), '-1801490246', NULLIF(NULL, x'')))!=((((x'') NOT BETWEEN (NULL) AND ('-1909290073')), NULL COLLATE NOCASE, ((('-1993208423', NULL, x''))<>((x'4c0a', '#皼', 0.6362734342950626)))))));SELECT DISTINCT ((rt1.c2) IS TRUE) FROM vt0 WHERE (CASE (((('')AND(x'')))AND(']S0JKbA'))  WHEN 1.25962311E8 COLLATE NOCASE THEN ((1873726763) BETWEEN (x'039b') AND ('gZ嫛*WCZ')) WHEN x'' THEN 0.9631479844353642 WHEN ((x'76cf') NOTNULL) THEN CAST(NULL AS BLOB) ELSE ((0.22595197423858748) NOTNULL) END);SELECT DISTINCT ((((((t0.c0)OR(t0.c0)))AND(NULL)))|(TOTAL_CHANGES())), t0.c1, ((((((((rt1.c2)AND(vt0.c0)))OR(t0.c1)))AND((NOT (rt1.c1)))))OR(((((t0.c0)OR(t0.c2)))AND(rt1.c0)))) FROM rt1 WHERE (x'') ORDER BY (((rt1.c1 IN ())) BETWEEN (((((rt1.c0)AND(rt1.c1)))OR(rt1.c1))) AND ((- (t1.c0)))) ASC  NULLS LAST, ((((CASE vt0.c0  WHEN rt1.c1 THEN t0.c2 WHEN 0.270767764934725 THEN '-1801273658' WHEN t0.c1 THEN t1.c0 END)AND(CASE WHEN t0.c2 THEN vt0.c0 END)))AND(((t0.c1) IS FALSE)))  NULLS FIRST;SELECT CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER), (NOT (rt1.c0)) COLLATE NOCASE, 0.2428319358013883 FROM t1, vt0, rt1 INDEXED BY i78, t0;SELECT DISTINCT ((0.7067060752817105)%(rt1.c0)) COLLATE NOCASE FROM vt0 WHERE (((NULL IN (NULL, '820846509')) IN ()));SELECT DISTINCT vt0.c0, ((((t0.c2)=(vt0.c0))) IS TRUE), CASE (- (rt1.c2))  WHEN t0.c1 THEN ((((t0.c1)OR(t0.c0)))AND(t1.c0)) END, (((rt1.c1))>(((((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c1)))))), ((NULL) BETWEEN (((vt0.c0) BETWEEN (rt1.c0) AND (t0.c0))) AND (((rt1.c0) NOT NULL))) FROM t0, vt0, t1, rt1; -- 0ms;
SELECT DISTINCT t0.c2, (((~ (t0.c2))) NOT BETWEEN ((t1.c0 IN (rt1.c2, t0.c1))) AND ((('-1967825991') IS FALSE))), (((((vt0.c0, NULL, rt1.c0))>((rt1.c0, vt0.c0, t0.c2)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (vt0.c0 COLLATE NOCASE)) FROM t0 LIMIT -366101523;SELECT DISTINCT CASE ((0.3736066391242422) BETWEEN (rt1.c2) AND (t0.c0))  WHEN 1.133202493E9 THEN ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)) WHEN CASE t0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN x'' WHEN t0.c2 THEN t1.c0 END THEN CASE vt0.c0  WHEN 1371466396 THEN x'' END WHEN ((t0.c2)%(t0.c0)) THEN t0.c0 COLLATE BINARY WHEN ((t0.c2)GLOB(t0.c1)) THEN (((rt1.c0))<((rt1.c2))) WHEN (t0.c1 IN (rt1.c0)) THEN CASE WHEN t0.c0 THEN rt1.c1 END ELSE UNICODE(vt0.c0) END FROM rt1 WHERE (CAST(((0xffffffff979b6d7c)&(0x5647532c)) AS TEXT));SELECT ALL PERCENT_RANK() OVER ( ORDER BY ((((t0.c0)IS(t0.c1))) NOT BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c1) IS FALSE)))  NULLS LAST GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM rt1;SELECT DISTINCT CASE WHEN ((((((((rt1.c0)AND(rt1.c1)))OR(NULL)))OR(1.648017698E9)))OR(rt1.c0)) THEN (x'' IN ()) WHEN ((rt1.c2) NOT NULL) THEN rt1.c1 WHEN t0.c2 THEN CAST(rt1.c0 AS NUMERIC) END FROM t1, t0;SELECT 0.5989035603422459 FROM t0, rt1 WHERE (LTRIM(((-2.5105729E7)AND(0.18625735712267533)), CAST(x'' AS REAL))) ORDER BY x'' COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT (((t0.c2 IN ()))+((((t1.c0, t0.c1, vt0.c0)) NOT BETWEEN ((t1.c0, t0.c1, rt1.c1)) AND ((t0.c1, rt1.c2, t0.c1))))) FROM vt0, t1, rt1, t0 WHERE ((((CAST(0.43081574353565466 AS REAL), ((1.648017698E9) NOT BETWEEN (-252775455) AND (0x2aa6564f)), (0.8863983968581314 IN ())))<>((1.798738933E9 COLLATE NOCASE, ((x'') BETWEEN (0.8123854219599062) AND (0.46895514647349745)), ((((NULL)OR(NULL)))OR(-1936769138)))))) ORDER BY ((~ (t0.c0)) IN (((t0.c0) ISNULL))) DESC; -- 1ms;
SELECT (((~ (t0.c1))) IS FALSE), (rt1.c1 COLLATE BINARY IN ()), json_type((((NULL))<=((rt1.c2)))) FROM t1;SELECT SUM((+ (t0.c1))) OVER () FROM rt1, t0, vt0, t1 WHERE (ABS((('-32229021')!=(818036311)))); -- 0ms;
SELECT DISTINCT t0.c2 FROM t1, vt0, t0, rt1 WHERE (0.8449208379359471); -- 0ms;
SELECT ((rt1.c0 COLLATE NOCASE) IS FALSE), (SUM(NULL) IN ((NOT (t1.c0)))), t1.c0 FROM vt0, rt1, t1; -- 1ms;
SELECT DISTINCT (- (((((t0.c1)AND(t0.c0)))AND(rt1.c2)))) FROM vt0, t1, rt1, t0 WHERE ((+ ((- (0xffffffffc01a916a))))); -- 0ms;
SELECT DISTINCT (((rt1.c2, '-1955719518', t0.c0)) NOT BETWEEN ((((t0.c1)<=(NULL)), t0.c0, rt1.c2 COLLATE RTRIM)) AND (((x'' IN ()), CASE WHEN t1.c0 THEN rt1.c1 END, (((rt1.c0))>((t0.c2)))))) FROM vt0, rt1, t1, t0 WHERE (CASE NULL COLLATE NOCASE  WHEN CASE WHEN '0.6172834854362371' THEN '-2073167312' WHEN x'0001' THEN NULL WHEN 0.6631021277521245 THEN 0.741506802217203 ELSE -1222708499 END THEN (+ ('-69611354')) END); -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), t1.c0 COLLATE NOCASE, TRIM(rt1.c1, t0.c1)))<=(((t0.c1 IN (rt1.c2, t0.c2)), ((rt1.c2)||(t1.c0)), vt0.c0 COLLATE RTRIM))) FROM t0, rt1, vt0 WHERE (((('0.2166469571020816')) NOT BETWEEN ((('_' IN ('-914180460', NULL)))) AND ((((1.950416037E9)<<(0.9383607427474345))))));SELECT DISTINCT GROUP_CONCAT(((t1.c0) IS TRUE)) OVER (), (((((vt0.c0)) BETWEEN ((t0.c2)) AND ((rt1.c0))))AND((~ (t1.c0)))), TYPEOF(HEX(DISTINCT t0.c0)) FROM vt0, t1;SELECT DISTINCT t1.c0, TIME('', '#Kb6r}Q|', (t0.c1 IN ())), 0.007346237343539452 FROM rt1, t0, t1, vt0 WHERE (((((((NULL)AND('雴Z')))OR(NULL)))||(CASE WHEN '鲑8F]GOUFM' THEN NULL ELSE NULL END))); -- 0ms;
SELECT ((t0.c0 COLLATE NOCASE) NOT BETWEEN (CASE t0.c1  WHEN vt0.c0 THEN rt1.c1 END) AND (((rt1.c0) ISNULL))) FROM vt0, t1 WHERE (((((((''))<((-1398468707)))))<((CAST(-1379272491 AS INTEGER))))) ORDER BY CASE ((rt1.c1)<<(rt1.c2))  WHEN IFNULL(DISTINCT t1.c0, rt1.c1) THEN NULLIF(rt1.c0, t0.c0) ELSE MIN('0', vt0.c0, t0.c1, rt1.c2, t0.c0, rt1.c2) END ASC  NULLS LAST, CASE WHEN CASE WHEN '109455346' THEN t1.c0 END THEN ((t1.c0) NOT BETWEEN (rt1.c2) AND (t0.c1)) ELSE CASE WHEN vt0.c0 THEN rt1.c1 WHEN t0.c2 THEN 0.1309394816771947 WHEN t0.c0 THEN t0.c1 END END ASC;SELECT ALL ((((0Xffffffffdafc91da)) NOT BETWEEN ((t1.c0)) AND ((t0.c1))) IN ()) FROM vt0, rt1, t0, t1 WHERE (((((CAST(NULL AS TEXT))OR(((NULL) IS FALSE))))OR((((x'', NULL, x'5fe0')) NOT BETWEEN ((-89819379, x'988e3216c94d', '947362057')) AND ((x'', x'', 0x68ee023f)))))) GROUP BY ((t0.c0 COLLATE RTRIM)+(CASE WHEN rt1.c1 THEN rt1.c1 ELSE t0.c0 END)) ORDER BY (- (LTRIM(t0.c2))); -- 0ms;
SELECT DISTINCT ((+ (rt1.c1)) IN (NULL)), (((rt1.c2 IN ()))OR(((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))), CASE (~ (rt1.c2))  WHEN ((vt0.c0)<=(t1.c0)) THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 WHEN '-1437928086' THEN ((x'') IS TRUE) ELSE (('Z/#RF ') IS TRUE) END FROM t0, vt0, t1;SELECT DISTINCT ((('-1997237452'))<=((((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))))), ((((t0.c0) NOTNULL)) BETWEEN (((rt1.c2)-(t0.c2))) AND ('x.JdmX0(')), ((rt1.c0 COLLATE RTRIM)OR((((t1.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) FROM t1 WHERE ((CASE NULL  WHEN NULL THEN 0.9515253671223665 END IN ((((NULL)) BETWEEN ((NULL)) AND ((NULL)))))) GROUP BY (UNLIKELY('\rRxe 1浼') IN (CAST(t0.c0 AS BLOB), ((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1))));SELECT DISTINCT (((rt1.c2) ISNULL) IN ()), (((((+ (rt1.c2)))AND(vt0.c0 COLLATE RTRIM)))OR((((t0.c0))>=((rt1.c1))))), CAST(t0.c2 AS TEXT) FROM t1, rt1 WHERE ((((0.8382794603402708)) BETWEEN ((((((0.7057157448075232)OR('973256441')))AND('*')))) AND (((((x'')) BETWEEN ((0.4888334229915561)) AND ((0.5813987897090578)))))));SELECT DISTINCT CAST('-1965402469' AS TEXT), 0.3937791171817142, (((((~ (rt1.c1)))AND((rt1.c0 IN ()))))AND((((t0.c0, rt1.c0, t1.c0))<=((t1.c0, t0.c0, t1.c0))))) FROM rt1, vt0 NOT INDEXED, t0; -- 0ms;
SELECT ALL SUM('}PK m浼') FROM t0, rt1 GROUP BY (((((rt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))-(((t0.c2) BETWEEN (t1.c0) AND (rt1.c0))));SELECT COUNT((NOT (t0.c0))) FILTER(WHERE ((((t1.c0)<=(t0.c2)))<=(((rt1.c0)=(t1.c0))))) OVER (), ((vt0.c0) BETWEEN (rt1.c2) AND (t0.c1)) COLLATE NOCASE, GROUP_CONCAT(CASE WHEN rt1.c2 THEN t0.c2 ELSE t0.c2 END) OVER (), GLOB(t0.c1, t0.c0) COLLATE BINARY, CAST(((t0.c1) IS FALSE) AS REAL) FROM t1, t0, rt1;SELECT ((((rt1.c0)IS(t0.c2))) IS FALSE), GROUP_CONCAT(NULL), NULL COLLATE NOCASE FROM vt0, t1, t0, rt1 ORDER BY ((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))) IN ()); -- 1ms;
SELECT DISTINCT t0.c0 FROM t1, vt0, t0, rt1; -- 0ms;
SELECT DISTINCT rt1.c0 FROM t1, t0, rt1 WHERE (((((('_', '<,', '-467514683'))<=((x'', x'', x''))))-((+ (x''))))); -- 4ms;
SELECT UNLIKELY(DISTINCT CAST(rt1.c1 AS BLOB)) FROM t0, vt0;SELECT DISTINCT NTILE((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((- (vt0.c0)))))) OVER () FROM vt0, t1 WHERE (NULLIF(((0xc93b2e8)GLOB(1774025745)), 526612214)); -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)AND((+ (rt1.c0)))))AND(((((rt1.c0)AND(rt1.c2)))AND(t0.c1)))))OR(((0.4797388187248479) NOT NULL))))AND(((t0.c2)%(t1.c0)))) FROM t0 LIMIT 791625525;SELECT (((t0.c2)*(rt1.c1)) IN ()), CASE CAST(t0.c1 AS INTEGER)  WHEN LOWER(rt1.c0) THEN t1.c0 WHEN CASE WHEN vt0.c0 THEN rt1.c2 END THEN ((t0.c2) NOTNULL) WHEN t1.c0 THEN ((rt1.c2) NOTNULL) WHEN rt1.c0 THEN CASE t1.c0  WHEN rt1.c1 THEN t0.c0 END WHEN COUNT(*) THEN 0.14485652877605504 END, TOTAL((~ (t0.c1))) OVER ( PARTITION BY ((((rt1.c2)AND((t0.c0 IN (t1.c0)))))AND((((t0.c2))=((rt1.c0))))), ((((-1.362808043E9 COLLATE NOCASE)OR(((x'') NOT NULL))))AND(rt1.c0 COLLATE RTRIM)) ORDER BY t0.c2, ((((+ (t0.c0))))!=((CASE NULL  WHEN '945822683' THEN rt1.c2 ELSE t0.c2 END)))  NULLS LAST) FROM vt0, t0;SELECT DISTINCT MIN(AVG(((rt1.c1)<<(t0.c1)))) FROM vt0, t0, rt1, t1 WHERE ((((0.5510000741612644)) BETWEEN ((0.8746622771625552)) AND ((CASE WHEN -1430426320 THEN -3.01138565E8 WHEN NULL THEN 'S\gᬵ' WHEN NULL THEN 0.21879513551153884 END))));SELECT 0X6fd7ae70 FROM t0 WHERE (((CAST(0.6851843166211293 AS BLOB))<<(load_extension(x'')))) GROUP BY (((((t1.c0, rt1.c1, t0.c1, t0.c0, t0.c1, rt1.c1, t0.c2)) NOT BETWEEN ((rt1.c1, t1.c0, t0.c2, t0.c1, t0.c0, t0.c1, t0.c2)) AND ((0.8305694831353175, vt0.c0, t1.c0, t1.c0, rt1.c0, rt1.c2, t0.c1)))) NOT BETWEEN ('') AND (CAST(vt0.c0 AS BLOB))) HAVING NULL;SELECT DISTINCT ((((COALESCE(vt0.c0, t0.c1, rt1.c0, t0.c1))OR(((rt1.c0) NOT BETWEEN (t1.c0) AND (rt1.c2)))))OR(IFNULL(DISTINCT t0.c1, rt1.c1))) FROM vt0, t0, t1, rt1 WHERE (((((((('0.3428488074574728', 0xffffffff8fbdc4f8, '03LFFν+}3')) BETWEEN ((x'', NULL, '-215105960')) AND ((x'', '-301138565', x'e94d'))))AND((((x'')) NOT BETWEEN ((0xffffffffc6710e4e)) AND ((0Xffffffffe6208974))))))OR(('j锸YB>[*E' IN ())))); -- 0ms;
SELECT ALL (- (CASE WHEN t0.c2 THEN t0.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c2 THEN -9.1418046E8 END)) FROM rt1, vt0, t0 WHERE ((- ((((0X5d33a0ca)) NOT BETWEEN ((791377620)) AND ((NULL)))))) LIMIT -678709559;SELECT (((vt0.c0 IN ()))&(NULL)) FROM t1 WHERE ((((791377620) BETWEEN (x'') AND ('1980168073')) IN (CASE WHEN -1e500 THEN x'' ELSE 'XF' END, (('-2024687597') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((t0.c1)GLOB(t0.c0)))<=(LAST_INSERT_ROWID())) FROM vt0, rt1, t0; -- 0ms;
SELECT ((('-434075276' IN ())) BETWEEN (t0.c2) AND (CAST(t0.c0 AS TEXT))) FROM vt0, t1 WHERE (CAST((- (NULL)) AS REAL));SELECT DISTINCT DATE(((rt1.c0)>=(vt0.c0)), t0.c1, ((rt1.c1)*(vt0.c0))) FROM t1, vt0, t0 WHERE (((CASE NULL  WHEN -1.936769138E9 THEN x'' END) BETWEEN (((NULL)>=(0.4779195429586728))) AND ('')));SELECT DISTINCT ((t0.c2 COLLATE RTRIM) NOT NULL) FROM t0, rt1, t1; -- 1ms;
SELECT DISTINCT ((vt0.c0) IS TRUE), ((UPPER(DISTINCT rt1.c0)) ISNULL), CASE rt1.c2  WHEN rt1.c1 THEN vt0.c0 END COLLATE RTRIM FROM vt0 RIGHT OUTER JOIN rt1 ON rt1.c1 GROUP BY CASE WHEN (t0.c2 IN ()) THEN t0.c2 COLLATE NOCASE WHEN 0.7764997047124556 THEN x'' WHEN rt1.c2 COLLATE NOCASE THEN CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN rt1.c0 WHEN t0.c2 THEN t1.c0 ELSE rt1.c0 END ELSE CAST(t0.c2 AS INTEGER) END HAVING (((vt0.c0)AND(rt1.c0)) IN (vt0.c0));SELECT ALL (((((((((rt1.c2 IN (t0.c1)))OR((((t0.c0)) BETWEEN ((t0.c1)) AND ((rt1.c0))))))AND((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt1.c0, t0.c2, t0.c1)) AND ((vt0.c0, vt0.c0, t0.c2))))))AND(((x'')*(vt0.c0)))))AND((+ (vt0.c0)))) FROM vt0;SELECT ALL (((((vt0.c0, t0.c0, t0.c2))>((t0.c2, rt1.c0, t0.c2)))) ISNULL) FROM rt1, t0, vt0, t1 WHERE ((((0.20484971877523506 IN ()))AND('-1880353106' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((t0.c1)>=(NULL)))IS((('_') NOT NULL))) FROM rt1, vt0, t0 WHERE (((LIKELY(x''))%(((NULL)%(x''))))); -- 0ms;
SELECT DISTINCT (((t0.c0)>(rt1.c0)) IN ()) FROM vt0 NOT INDEXED, rt1, t1; -- 0ms;
SELECT DISTINCT AVG((((rt1.c2))<((t0.c0)))) OVER () FROM vt0, rt1, t1, t0; -- 1ms;
SELECT ALL FIRST_VALUE(((NULL)=(CAST(rt1.c0 AS BLOB)))) OVER (), COUNT(*) OVER (), AVG((rt1.c1 IN ())) OVER () FROM t1, t0, rt1, vt0 WHERE ((NOT (CAST(NULL AS BLOB)))); -- 0ms;
SELECT ALL TYPEOF(DISTINCT CAST(rt1.c2 AS INTEGER)) FROM rt1 WHERE ((NOT ((((((((('')AND(0.6945525727595993)))AND(x'')))OR(0.36150390617455663)))AND(-1.984660272E9))))); -- 0ms;
SELECT DISTINCT TRIM(CASE t0.c0  WHEN rt1.c1 THEN rt1.c2 ELSE t1.c0 END) FROM t1, t0 WHERE (((NOT ('0.32583572715175924')) IN ((- (0.7376145245801992)))));SELECT ((('') NOTNULL) IN ()) FROM t0, vt0, t1, rt1 WHERE (TYPEOF(-1057833632) COLLATE NOCASE); -- 0ms;
SELECT ALL (NOT (((((rt1.c1)OR(t0.c1)))AND(t0.c0)))) FROM rt1;SELECT DISTINCT 'ek]#GK' FROM t0, vt0, t1 WHERE ((+ (STRFTIME('M{D)Nﲥ', 1176648599, 'I_h/!?*I')))); -- 0ms;
SELECT DISTINCT '938924827', CAST('NS' AS NUMERIC), ((COALESCE(t0.c1, rt1.c0))>=(((rt1.c1) BETWEEN (rt1.c1) AND (x'')))) FROM rt1, vt0;SELECT '169796087' FROM rt1, t0, t1; -- 0ms;
SELECT DISTINCT (((t0.c2 COLLATE NOCASE, CASE t0.c0  WHEN t1.c0 THEN t0.c1 ELSE rt1.c2 END, (t0.c1 IN (t0.c0))))==((((rt1.c2)IS(NULL)), ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)), (+ (rt1.c1))))), ((((x'') BETWEEN (rt1.c1) AND (vt0.c0)))IS(CASE WHEN rt1.c1 THEN t0.c1 WHEN rt1.c2 THEN vt0.c0 WHEN t1.c0 THEN t0.c0 END)), 'ཅv' FROM t1, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT t0.c2 FROM t1 WHERE (((((('-1880353106'))<>(('ea8q'))))==(CASE x''  WHEN '<\nM8hm' THEN 'j' ELSE 0.09475025089494393 END)));SELECT DISTINCT AVG((t0.c0 IN (rt1.c2, t1.c0))) FROM t0, t1, vt0 WHERE ((~ (((x'') IS FALSE))));SELECT ((((((t0.c2)OR(vt0.c0)))OR(t0.c0)))OR(CASE WHEN vt0.c0 THEN t0.c2 WHEN rt1.c1 THEN rt1.c0 WHEN vt0.c0 THEN t0.c0 END)) FROM t0 WHERE (((((CASE x''  WHEN NULL THEN 0.9080095575275046 ELSE '' END)OR(CASE WHEN x'' THEN '1451233585' ELSE -1.517214418E9 END)))OR(((x'') NOT NULL))));SELECT DISTINCT (~ (((t0.c2) IS TRUE))) FROM rt1, t0 WHERE ((((((NULL)+(NULL))))>=(('0嚤	fZ')))); -- 0ms;
SELECT DISTINCT ((((rt1.c0)&(rt1.c2))) IS FALSE) FROM rt1, t1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)IS(rt1.c1))) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (t0.c2)))) FROM t0, vt0;SELECT DISTINCT (((vt0.c0 IN ()))IS(COUNT(*))) FROM t1, t0, vt0, rt1; -- 0ms;
SELECT DISTINCT (- (((rt1.c2)IS NOT(t0.c1)))) FROM t0, rt1, t1, vt0; -- 0ms;
SELECT PERCENT_RANK() OVER (), ((MAX(t0.c2))OR(((rt1.c1)/(t0.c1)))), (((((rt1.c2)IS(NULL))))==((CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN t1.c0 THEN t0.c0 ELSE 0.26596974574744114 END))) FROM t0;SELECT ALL CASE (((vt0.c0))>=((t1.c0)))  WHEN 1733655928 COLLATE RTRIM THEN COUNT(*) ELSE t0.c0 COLLATE RTRIM END, NULL, GROUP_CONCAT(((rt1.c0)IS NOT(rt1.c2))) FROM t0, vt0;SELECT DISTINCT (('iV') NOTNULL) FROM t1, t0, rt1, vt0; -- 0ms;
SELECT DISTINCT x'' FROM rt1, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c1)OR(t0.c0)))OR(t0.c0))) IS FALSE), COUNT((t0.c0 IN ())) OVER (), CAST(((t1.c0)IS(rt1.c1)) AS TEXT) FROM t1, vt0, rt1 WHERE (0.2899065442742633);SELECT DISTINCT ((MIN(rt1.c2))>>(CASE rt1.c0  WHEN NULL THEN 0.648499289085717 ELSE rt1.c0 END)) FROM vt0, t0, t1;SELECT DISTINCT '' COLLATE RTRIM FROM rt1, t0, vt0; -- 0ms;
SELECT DISTINCT (~ (NULL)), CAST((NOT (t0.c0)) AS TEXT), (((t0.c0)) BETWEEN ((((rt1.c1)GLOB(t0.c1)))) AND ((SUM(t0.c2)))) FROM t0 INDEXED BY i78, rt1 WHERE (((((('980179971')LIKE(0.9281049517997304)), ((x'')IS NOT(NULL)), ((((((((((((NULL)AND(x'')))OR(NULL)))OR('2%')))OR('-211927279')))AND(0.8646110624708575)))OR(NULL))))>=((CASE 0xffffffff9d499e4f  WHEN NULL THEN ')sFHK P)m' ELSE 1.31576559E9 END, CASE WHEN 0X73e66354 THEN x'36793634' ELSE NULL END, '0.5714709117199712' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (((+ (rt1.c0))) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (COALESCE(rt1.c0, t0.c0))), GROUP_CONCAT(json_insert(rt1.c0, rt1.c0, rt1.c0, rt1.c2, t0.c0, rt1.c1, rt1.c1) COLLATE NOCASE) OVER (), COUNT(('1!<&' IN ())) OVER () FROM t0, vt0 WHERE (((((((((('>%ix#*Ip۝')AND(0.538215056596803)))OR('R-{h')))AND('-1333750007')))OR('0.6793471906425683')) IN ()));SELECT DISTINCT COUNT(*) FROM vt0, t0 WHERE (CAST(((x'') IS FALSE) AS NUMERIC)); -- 0ms;
SELECT DISTINCT LIKELY(t0.c1) FROM vt0, t1 GROUP BY ((((t0.c1)>(t0.c1)))<=((~ (rt1.c1)))), t1.c0, (((((t0.c2, t1.c0, t0.c0)) BETWEEN ((vt0.c0, t0.c1, t0.c1)) AND ((t0.c2, rt1.c0, t1.c0)))) BETWEEN (((t0.c1)/(t0.c0))) AND (CAST(t0.c1 AS NUMERIC))) HAVING CASE ((((vt0.c0)AND(t0.c0)))AND(rt1.c2))  WHEN NULL THEN CASE t0.c2  WHEN vt0.c0 THEN vt0.c0 END ELSE (t1.c0 IN ()) END;SELECT 336054091 FROM rt1 WHERE (((583449904) NOT BETWEEN (0.917343707022645) AND (NULL)) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT ALL TRIM(DISTINCT AVG(vt0.c0), x'') FROM rt1, t1, t0, vt0 WHERE (((((0.47770387808234027)IS('-332570741')))*(((NULL) NOT BETWEEN (x'') AND (NULL))))) LIMIT -89835017; -- 0ms;
SELECT DISTINCT (+ (((vt0.c0)GLOB(t0.c2)))) FROM rt1, vt0 WHERE (CASE (~ (0.028647984353176614))  WHEN TRIM('1794104227', x'') THEN ((0.49321459468093687)-(0.7343912679921492)) END);SELECT ALL (NOT (t1.c0 COLLATE RTRIM)), (~ (CASE WHEN rt1.c1 THEN t0.c0 ELSE rt1.c1 END)), COUNT(*) OVER () FROM rt1, t1, vt0, t0 WHERE ((+ (((x'a9a0') NOTNULL)))); -- 1ms;
SELECT DISTINCT (((x'')) BETWEEN ((0.05253707144982922)) AND ((t0.c1))) COLLATE BINARY, ((((((t0.c1) NOT NULL))AND(NULL)))AND((((t0.c2)) NOT BETWEEN ((rt1.c1)) AND ((t0.c1))))), (((t1.c0)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND ((((('0.43110631568989133')) BETWEEN ((t0.c1)) AND ((rt1.c2)))))) FROM vt0, rt1, t1 WHERE (json_array_length((0.030464018918170188 IN ()))) LIMIT -285707949 OFFSET 1877564279;SELECT DISTINCT ((t0.c0)GLOB(rt1.c1)) COLLATE RTRIM, (((t0.c1 IN ()))|((t0.c1 IN ()))), ((((vt0.c0) ISNULL)) NOTNULL) FROM t0;SELECT DISTINCT rt1.c2 FROM t1 WHERE (UNLIKELY((('OWQ)') NOTNULL)));SELECT DISTINCT (('Mx^b') BETWEEN ((((rt1.c0))<>((t0.c0)))) AND (NULL)) FROM t0, rt1, vt0, t1 WHERE ((+ ((((((((('s#z7')AND(NULL)))AND(NULL)))AND(x'')))OR('mstart of yearc'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c1)) AND (('1513070525')))) AND (((t1.c0)>(rt1.c0)))) FROM t1, t0, rt1, vt0 WHERE (CAST(0.027116485822829883 AS BLOB) COLLATE BINARY) GROUP BY CAST((~ (x'')) AS NUMERIC) HAVING CASE WHEN LIKELIHOOD(rt1.c2, 0.7192553174325688) THEN (((t1.c0, t0.c0, rt1.c2))>=((vt0.c0, t1.c0, rt1.c2))) WHEN ((((t0.c2)OR(t0.c2)))AND(t0.c1)) THEN MAX(t0.c2) WHEN (NOT (rt1.c1)) THEN (t0.c2 IN ()) WHEN ((((((((NULL)AND(t0.c2)))OR(0.5326935225966145)))OR(t1.c0)))OR(t1.c0)) THEN (+ (t0.c1)) WHEN rt1.c0 COLLATE BINARY THEN HEX(rt1.c1) END LIMIT 88932751; -- 1ms;
SELECT DISTINCT (+ (CAST(rt1.c1 AS REAL))), AVG((((t0.c2))<=((t0.c2)))), ((((t0.c1)>(rt1.c0)))LIKE(vt0.c0 COLLATE RTRIM)) FROM rt1, vt0 WHERE (CASE WHEN NULL COLLATE NOCASE THEN x'' COLLATE RTRIM ELSE (NULL IN ('?Q륥㓉p')) END) GROUP BY t0.c1, ((((vt0.c0)>=(rt1.c0))) BETWEEN (((t0.c1) IS TRUE)) AND ((2017611302 IN ()))), CASE WHEN t0.c0 COLLATE RTRIM THEN ((t0.c2)<>(rt1.c0)) WHEN LAST_INSERT_ROWID() THEN ((rt1.c1)IS NOT(rt1.c2)) WHEN (t0.c1 IN (rt1.c0)) THEN ((((t1.c0)OR(rt1.c2)))OR(vt0.c0)) WHEN t0.c1 THEN 0xffffffff87bbe59d WHEN (((t0.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN ((t1.c0)+(t0.c2)) ELSE ((t0.c2)LIKE(vt0.c0)) END HAVING (((((t1.c0)AND(t0.c1)))AND(t0.c0)) IN ()) LIMIT 2066437804;SELECT ((t0.c1 IN ()) IN ()) FROM vt0, rt1, t1 ORDER BY (((((rt1.c0)<(rt1.c1))))==((((0.7465352431410579) NOT BETWEEN (t0.c1) AND (t0.c2))))) DESC;SELECT DISTINCT (+ (t0.c2)) FROM t1, rt1, vt0;SELECT ((t0.c2 COLLATE BINARY)OR(NULL)) FROM t1, rt1, t0 WHERE (CASE WHEN (NULL IN ()) THEN (- (NULL)) ELSE ((NULL) NOT BETWEEN (NULL) AND (0.5611684257106083)) END) ORDER BY ((('1278974617' IN ())) NOT BETWEEN ((~ (rt1.c2))) AND (rt1.c1 COLLATE RTRIM))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((t0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN t0.c2 THEN t0.c0 ELSE rt1.c1 END) AND (LIKELIHOOD(t0.c1, 0.1280664815084891))), COUNT((rt1.c0 IN (t1.c0))) OVER (), ((((rt1.c1)<=(vt0.c0)))>=((((t0.c1, t1.c0, rt1.c0))<((t0.c2, t0.c1, t1.c0))))) FROM vt0, t1;SELECT DISTINCT CAST(CAST(t0.c1 AS REAL) AS REAL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT AVG((((rt1.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 0.7395792490457842)) AND ((t0.c0, rt1.c0, t0.c0)))) OVER ( ORDER BY (((NOT (t0.c1)))LIKE(t0.c0)) ASC  NULLS FIRST, (((CASE WHEN vt0.c0 THEN rt1.c2 WHEN t0.c0 THEN t1.c0 WHEN rt1.c1 THEN t1.c0 END))>((('' IN (t0.c2, rt1.c0)))))  NULLS LAST) FROM t1 WHERE (((CASE '44044462'  WHEN 0.43921367352476026 THEN -1649848405 WHEN '-510091511' THEN '-995120819' WHEN NULL THEN x'da35' ELSE '4!' END) NOTNULL));SELECT ALL CAST(((rt1.c2) BETWEEN (t1.c0) AND (rt1.c1)) AS TEXT) FROM t0 WHERE ((+ (((((((((((((x'')AND(x'')))OR(0.02014646620875582)))AND(NULL)))OR(0.9258959257286349)))AND('FNMMe]Y%8')))AND('-746238513'))))) ORDER BY CAST((rt1.c1 IN ()) AS BLOB)  NULLS FIRST, ((((t0.c1 IN (t1.c0))))!=((((NULL) NOT NULL)))), ((NULL) BETWEEN (t0.c0 COLLATE NOCASE) AND (rt1.c0 COLLATE BINARY)) DESC LIMIT 9223372036854775807;SELECT CAST((((('ne')OR(t0.c2)))OR(t0.c0)) AS INTEGER) FROM t1, t0 WHERE (NULL) GROUP BY CAST(((rt1.c1)||(t0.c1)) AS INTEGER);SELECT ALL t0.c1 FROM rt1, vt0 WHERE ((((NULL) NOT BETWEEN ('/') AND (NULL)) IN (((x'')AND(0.4016908093759952)), ((NULL)OR(NULL))))) LIMIT -1484597748 OFFSET -1560946441;SELECT ((((t0.c1) ISNULL))%(((rt1.c2)<>(776748466)))) FROM vt0, t1, rt1 WHERE (((((0.0029922922136049745)GLOB(NULL)))<(((0.030364877406435564) NOTNULL))));SELECT '-1166222701', CASE WHEN '169796087' THEN -467514683 WHEN (rt1.c1 IN ()) THEN TOTAL(rt1.c1) WHEN MIN(NULL) THEN ((rt1.c0)%(rt1.c1)) END, ((CASE t1.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (NULL) AND (((t0.c2)IS(rt1.c2)))), ((((((rt1.c2)AND(t0.c0)))AND(rt1.c2)))<(((1.024021086E9) BETWEEN (rt1.c0) AND (rt1.c0)))), (- ((t0.c0 IN ()))), (- (SQLITE_COMPILEOPTION_USED(t1.c0))), SUM(IFNULL(t0.c2, t0.c1)) FROM t0 CROSS JOIN t1 ON NULL WHERE (((((NULL) BETWEEN ('#皼') AND (3.2117913E7))) IS FALSE));SELECT DISTINCT ((CAST(rt1.c2 AS REAL))<=((~ (x'')))) FROM vt0, rt1, t0, t1; -- 0ms;
SELECT DISTINCT (((rt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((CAST(rt1.c2 AS INTEGER), rt1.c2 COLLATE BINARY, ((rt1.c0)GLOB(vt0.c0)))) AND ((CAST(rt1.c2 AS INTEGER), json_array_length(t0.c0), CASE rt1.c0  WHEN 'B' THEN t0.c1 END))) FROM vt0, t0, rt1 WHERE (((('c*sOt>/G')<('붫~')) IN ())); -- 0ms;
SELECT ALL ((((t0.c2)IS(t0.c1)))-(rt1.c2 COLLATE BINARY)) FROM vt0, t0 LIMIT 1161857158;SELECT DISTINCT ((LIKELIHOOD(rt1.c0, 0.576877371743261))<=(CAST(NULL AS INTEGER))) FROM rt1, t1, t0, vt0; -- 0ms;
SELECT DISTINCT ((CASE 0.786975642373765  WHEN t0.c2 THEN t0.c1 ELSE vt0.c0 END)IS NOT(NULL)) FROM t0 NOT INDEXED, t1, vt0, rt1; -- 0ms;
SELECT ALL MAX(((t1.c0)<<(rt1.c0))) FROM vt0, t0 WHERE (CASE WHEN ((x'')<('fo''g\rv煮l|')) THEN (('50125127')IS(0.2857992326126305)) ELSE (((('2125307796')OR(x'')))OR(-1.7649768E7)) END);SELECT ALL DENSE_RANK() OVER ( PARTITION BY (+ (((t0.c1) ISNULL))), ((CASE WHEN t0.c0 THEN rt1.c1 WHEN t0.c0 THEN t0.c2 WHEN t1.c0 THEN t0.c2 ELSE vt0.c0 END)LIKE(CASE WHEN rt1.c0 THEN t0.c1 END))) FROM t1, t0;SELECT DISTINCT '', (~ (((t0.c0) NOT NULL))), ((((((t0.c2)) BETWEEN ((t1.c0)) AND ((rt1.c1))), CAST(x'' AS REAL), ((t0.c1)OR(0.33662646370423455))))>(((((vt0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((NULL)||(t0.c1)), ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))OR(t0.c0)))OR(t1.c0))))) FROM t0, rt1, t1, vt0 WHERE ((((+ ('1570993012')))<<(((('', NULL, NULL))==((159859089, 0.20709044947728106, 0.3674561836990574)))))); -- 0ms;
SELECT DISTINCT ((((t1.c0) IS FALSE)) NOTNULL), LOWER(DISTINCT vt0.c0), ((vt0.c0) IS FALSE), (((+ (t0.c1))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((((vt0.c0))<((t0.c1))))), ((((rt1.c1) NOT BETWEEN (rt1.c0) AND ('0.869380703616718')))IS NOT(NULL)) FROM rt1, vt0, t0, t1 WHERE ((((('zf')IS NOT(0.19474702026818902))) NOT BETWEEN ((+ ('1315765590'))) AND ((- (NULL))))); -- 0ms;
SELECT DISTINCT MAX(((((((((rt1.c2)AND(t0.c2)))AND(t0.c0)))OR(rt1.c1)))AND(t0.c0))) FROM rt1, t1, t0, vt0; -- 0ms;
SELECT DISTINCT LEAD((t1.c0 IN ()), (t1.c0 IN (t1.c0)), ((TYPEOF(t1.c0))IS((((t1.c0, t1.c0, t1.c0))<=((t1.c0, t1.c0, t1.c0)))))) OVER () FROM t1 WHERE ((((((NULL)AND('-17649768')))OR(NULL)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN (('1250675464')) AND ((t0.c0))) COLLATE NOCASE DESC  NULLS LAST, (+ ((t0.c0 IN ())));SELECT DISTINCT ((x'') BETWEEN (t0.c1 COLLATE NOCASE) AND ((NOT (t0.c1)))) FROM t1, rt1, t0; -- 0ms;
SELECT DISTINCT rt1.c2 FROM t0;SELECT ALL (((((((((((vt0.c0, '392174417', rt1.c0)) NOT BETWEEN ((t1.c0, t0.c1, rt1.c1)) AND ((t0.c0, t0.c0, rt1.c2))))AND(CAST(t0.c0 AS BLOB))))OR((rt1.c2 IN (rt1.c0)))))AND((t0.c0 IN ()))))AND((((rt1.c1)) BETWEEN ((t0.c2)) AND ((rt1.c0))))) FROM t1, t0; -- 0ms;
SELECT ALL ((rt1.c0)-(t0.c2)), COUNT(*) OVER ( ORDER BY (- ((rt1.c1 IN ()))) DESC  NULLS LAST), DENSE_RANK() OVER () FROM t1, t0, rt1; -- 0ms;
SELECT DISTINCT (((-31607910 IN (t0.c0, t0.c0))) BETWEEN (rt1.c0 COLLATE BINARY) AND ((((rt1.c1, rt1.c1, t0.c1))>((t0.c1, t0.c1, t0.c0))))) FROM rt1, t0 WHERE (((CASE '-2143816616'  WHEN '1191743820' THEN '87M▀wH' END) ISNULL)); -- 0ms;
SELECT DISTINCT rt1.c0, (((rt1.c0, rt1.c0, t0.c1)) NOT BETWEEN ((((vt0.c0)<=(rt1.c0)), ((rt1.c2) NOT BETWEEN ('0.6362734342950626') AND (t0.c1)), ((vt0.c0) IS FALSE))) AND ((rt1.c2, ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)), ((t0.c2)==(rt1.c0))))), t0.c0 FROM rt1, vt0;SELECT DISTINCT CAST(((rt1.c1) BETWEEN (t0.c0) AND (t0.c1)) AS INTEGER), CASE (t0.c0 IN ())  WHEN ((t1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN (NOT (NULL)) WHEN NULL THEN ((t1.c0)<=(t0.c2)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c1)) ELSE (NOT (rt1.c0)) END, NTH_VALUE((((NULL))<((UPPER(rt1.c0)))), ((((t0.c2) IS TRUE)) BETWEEN (((((((((((((t0.c2)OR(NULL)))OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))AND(NULL)))OR(t0.c1))) AND (CASE WHEN t0.c1 THEN rt1.c0 END))) OVER (), UNLIKELY(t0.c1), CAST(CAST(vt0.c0 AS REAL) AS TEXT) FROM t1, vt0, rt1, t0 WHERE ((((((0Xffffffffaa68593e)IS NOT(''))))>=(((('')*(NULL)))))); -- 0ms;
SELECT MIN(((((t1.c0)AND(t0.c0)))AND(t0.c1))), FIRST_VALUE(((t0.c2) NOT NULL)) OVER ( ORDER BY ((((t1.c0) NOTNULL))|(((rt1.c0) NOT NULL))) DESC), ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((t0.c0)<(t0.c0))) AND (((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))), ((+ ('hE')) IN ()), ((GROUP_CONCAT(t1.c0))%(LOWER(rt1.c1))) FROM t0;SELECT ALL COUNT(*) COLLATE RTRIM, x'', CASE WHEN ((((((((rt1.c2)OR(rt1.c1)))OR(t0.c2)))OR(t1.c0)))OR(t0.c0)) THEN ((t0.c0)OR(t0.c1)) END FROM t0, t1, rt1 WHERE ((- ((((('')AND(-7.46238513E8)))OR(x''))))); -- 0ms;
SELECT ALL rt1.c1 FROM t0, t1;SELECT DISTINCT COUNT((((t0.c2))==((rt1.c1)))) OVER (), ((MAX(rt1.c0))IS(((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))), rt1.c2, ((0x8b649e9)IS(((((rt1.c0)OR(vt0.c0)))OR(t0.c0)))), (((((t0.c0)&(t0.c2))))<(((- (t1.c0))))) FROM rt1, t1 WHERE (((NULL) NOT BETWEEN (-8.9835017E7) AND (NULL)) COLLATE RTRIM);SELECT CASE t0.c2  WHEN t1.c0 THEN rt1.c1 ELSE t0.c1 END COLLATE BINARY, (((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c1 THEN t1.c0 END) AND (((t0.c1)!=(t0.c2)))), (((((+ (t0.c1)))OR(t0.c0)))OR(t0.c0 COLLATE RTRIM)) FROM t0;SELECT DISTINCT ((((t0.c1)LIKE(vt0.c0)))GLOB(((t0.c2)&(rt1.c0)))), COUNT(*) FILTER(WHERE (+ (rt1.c1))) OVER (), CAST(((rt1.c1) NOT NULL) AS INTEGER), ((+ (rt1.c1)) IN ()), (NOT ((NOT (t1.c0)))) FROM vt0, rt1, t1 WHERE (((((((0.98488616614323)OR('G)')))OR('-1613486989'))) NOT BETWEEN (CAST(x'' AS BLOB)) AND (((NULL) NOT BETWEEN (0.07446464752749327) AND (NULL)))));SELECT ALL ((rt1.c2 COLLATE BINARY) ISNULL) FROM rt1; -- 0ms;
SELECT ((((rt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)))OR(-1843945468)) FROM vt0, t1 WHERE (((((NULL) IS TRUE))=((('0.15731880411397214')*(NULL))))) ORDER BY ((('y?r 딍')) BETWEEN (((((t1.c0, t0.c2, t1.c0)) NOT BETWEEN ((t0.c1, t0.c0, t0.c1)) AND ((NULL, t1.c0, t0.c0))))) AND (((vt0.c0 IN ())))) ASC  NULLS LAST, CASE WHEN ((rt1.c2) ISNULL) THEN (NOT (vt0.c0)) ELSE ((t1.c0) NOT NULL) END;SELECT DISTINCT ((((t0.c1 COLLATE NOCASE)AND((vt0.c0 IN ()))))OR(((t0.c2)<=(t0.c0)))), (((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c1 THEN rt1.c0 END)) AND ((((rt1.c1) IS FALSE)))), ((((NULL) NOTNULL)) ISNULL) FROM vt0;SELECT DISTINCT ((((vt0.c0)AND(((0.6534385918376936)>>(t1.c0)))))OR((((rt1.c2)) NOT BETWEEN ((0.04849678567089655)) AND ((t1.c0))))) FROM vt0 WHERE ('-1967825991');SELECT DISTINCT (((((((('-434075276')AND(rt1.c2)))OR(rt1.c2)))OR(((rt1.c0) ISNULL))))AND(((t0.c0)IS(x'fb0d')))), -1156838910, COUNT(((t0.c0) NOT BETWEEN (t0.c0) AND (rt1.c2))) OVER () FROM t1, rt1;SELECT DISTINCT ((((((t1.c0)AND(t0.c0)))AND(rt1.c0))) IS TRUE), COUNT(*), (((((t1.c0, t0.c0, NULL))<(('326622587', rt1.c0, t0.c1))))GLOB(CAST(t0.c2 AS TEXT))) FROM t1, vt0, rt1 NOT INDEXED, t0 WHERE ((((('^P*A')%(0Xffffffffd7112f8b)))-(((x'')<<(x'9eb5'))))); -- 1ms;
SELECT ALL COUNT(CASE WHEN t0.c0 THEN t1.c0 END) OVER ( ORDER BY ((rt1.c2 COLLATE NOCASE) IS TRUE) DESC, ((((rt1.c1)OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM  NULLS FIRST, ((((t0.c2) NOT BETWEEN (rt1.c2) AND (t1.c0))) NOTNULL) DESC) FROM vt0, rt1, t1, t0 WHERE (COALESCE((0.15316753403715822 IN (NULL)), ((((0.9222354023211604)AND(-1.82165253E8)))OR(x'')))); -- 1ms;
SELECT DISTINCT ((rt1.c1) IS FALSE) COLLATE RTRIM FROM t0 WHERE ((((((x'4525') NOT BETWEEN (NULL) AND (0.7400051543296291)), ((((((((0.6702614006520515)AND('125962311')))OR(NULL)))AND(x'd540')))AND(-7.64584336E8)), (('1075496752')>(NULL))))>=((TRIM(2.65905008E8, x'8761'), ((((NULL)OR(NULL)))OR('䰣.dL')), (('N*')>(0xfffffffff52460fb))))));SELECT MIN(CAST(t1.c0 AS TEXT)) FROM t1 INDEXED BY i57 WHERE (((('625181252'))>=((x''))) COLLATE BINARY);SELECT ALL UPPER(x'') FROM t1, t0, rt1; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c0 THEN t1.c0 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c0 END) FROM rt1 LIMIT 1020498817 OFFSET -1517260028;SELECT ALL COUNT(*), ((AVG(vt0.c0)) IS TRUE), ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (t0.c0))) ISNULL) FROM t1, rt1, t0;SELECT DISTINCT ((((rt1.c2) IS TRUE))|(MAX(rt1.c0))) FROM t0, vt0, rt1, t1 GROUP BY ((((('670934871')) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))&(((NULL) NOT BETWEEN (t0.c2) AND (t0.c1)))), t0.c2, rt1.c1; -- 1ms;
SELECT DISTINCT t0.c2, COUNT(((rt1.c0) IS FALSE)), ((((t1.c0) NOTNULL)) BETWEEN ('w') AND (CASE vt0.c0  WHEN t0.c1 THEN t0.c1 ELSE t1.c0 END)) FROM rt1;SELECT DISTINCT json(rt1.c1) COLLATE BINARY FROM t1 CROSS JOIN vt0 ON (NOT (CAST(t0.c0 AS TEXT))) WHERE (((NULL IN ()) IN ()));SELECT ALL t0.c2 FROM t1, vt0, rt1, t0; -- 0ms;
SELECT ((COUNT(rt1.c1))LIKE(COUNT(rt1.c2))), x'', ROW_NUMBER() OVER () FROM t1, rt1, t0, vt0 WHERE ((((((((((('0.9631479844353642') NOT BETWEEN (x'') AND (0.7976087031204856)))OR(TOTAL_CHANGES())))OR('-1832778858' COLLATE NOCASE)))OR(((('0.5750332698889667'))<=((NULL))))))AND(NULL COLLATE BINARY))) ORDER BY ((CASE rt1.c0  WHEN t1.c0 THEN rt1.c2 END)%((+ (t0.c2)))) DESC; -- 0ms;
SELECT DISTINCT TRIM((NOT (t0.c2))) FROM t0, vt0 WHERE (((((((NULL) ISNULL))AND('*為c' COLLATE NOCASE)))AND(('tk' IN ('0.0888153758339345', '0.9239373159056621'))))); -- 0ms;
SELECT CAST(HEX(t0.c0) AS BLOB) FROM vt0, t1, rt1 LIMIT -648329195 OFFSET -764584336;SELECT RANK() OVER () FROM rt1 WHERE (((x'' COLLATE BINARY)<>(CAST(0xfffffffffef2af98 AS BLOB)))); -- 0ms;
SELECT DISTINCT (((rt1.c0 IN ()))==(((t1.c0)>(vt0.c0)))), ((ABS(t0.c2))>>(((t1.c0)<=(rt1.c0)))), GROUP_CONCAT((- (t1.c0))) FROM t0 INDEXED BY i30, vt0, t1, rt1 WHERE (0Xffffffffa72e0523); -- 1ms;
SELECT ALL CASE CASE t0.c0  WHEN t0.c0 THEN rt1.c2 END  WHEN t0.c0 COLLATE RTRIM THEN ((NULL) NOT NULL) END FROM t0, vt0, t1;SELECT CAST((((t1.c0, t0.c0, t1.c0))<((rt1.c0, rt1.c1, NULL))) AS TEXT) FROM rt1, t0, t1, vt0 INDEXED BY i30 WHERE ((+ (CAST('L⏲uVRA盾%' AS REAL))));SELECT DISTINCT ((t0.c1) BETWEEN (((rt1.c2)GLOB(rt1.c0))) AND ((~ (t0.c2)))), TOTAL(CAST(t1.c0 AS TEXT)), NTILE(CAST(((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)) AS TEXT)) OVER (), (- (((t0.c2) BETWEEN (t0.c0) AND (rt1.c2)))), LAST_VALUE('-1218540049') OVER () FROM rt1, vt0;SELECT DISTINCT (((rt1.c0 IN ())) BETWEEN (rt1.c0 COLLATE BINARY) AND (((t0.c1)<>(rt1.c2)))) FROM t1 INDEXED BY i78, t0, rt1, vt0 GROUP BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1)))AND(((t1.c0)||(t1.c0)))))AND(((rt1.c2)GLOB(t0.c1)))) HAVING (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE BINARY;SELECT DISTINCT GLOB(((t0.c0) BETWEEN (t1.c0) AND (t0.c1)), (((rt1.c2))=((rt1.c1)))), (~ (CAST(t0.c1 AS BLOB))), (((((((((((((vt0.c0 IN ()))AND((+ (rt1.c2)))))OR((t0.c2 IN ()))))AND(CASE vt0.c0  WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c2 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 WHEN t0.c1 THEN rt1.c1 END)))OR(MIN(rt1.c2))))OR(TOTAL(rt1.c2))))OR(((t0.c2)GLOB(vt0.c0)))) FROM vt0, rt1, t1, t0; -- 0ms;
SELECT DISTINCT t0.c1 COLLATE NOCASE FROM t0, t1; -- 1ms;
SELECT DISTINCT t0.c0 FROM t1, t0, rt1 LIMIT -707593415; -- 0ms;
SELECT ALL ((((rt1.c0) ISNULL)) NOT BETWEEN (0Xffffffff9535c1c0) AND (TRIM(vt0.c0))) FROM t1, t0 WHERE (CASE WHEN ((0.09898622919660194) NOTNULL) THEN ((((NULL)OR('0.10088604489238207')))OR(-634256981)) END) ORDER BY ((LIKELIHOOD(t1.c0, 0.8040205480054464))>(((rt1.c1) NOT BETWEEN (t0.c2) AND (rt1.c1)))) ASC  NULLS FIRST;SELECT ((CASE WHEN rt1.c2 THEN rt1.c2 END) NOT NULL) FROM t0 WHERE (UNLIKELY(0xffffffff927f73b0));SELECT DISTINCT (((GROUP_CONCAT('KV')))<>((t1.c0))), ((((((rt1.c1)/(t0.c0)))OR(((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))))AND(MIN(t0.c1))), SUM(((rt1.c2)=(t0.c2))) OVER () FROM t1, t0, vt0, rt1 WHERE (CASE (+ (NULL))  WHEN ((NULL)==(0.6798516516018506)) THEN (('922059928')/(x'')) END); -- 0ms;
SELECT ALL (((((t0.c0, NULL, rt1.c1, '&1F,I!', NULL)) BETWEEN ((rt1.c2, rt1.c2, '', vt0.c0, rt1.c2)) AND ((t0.c2, t0.c1, rt1.c2, t1.c0, 0X7e17bd20)))) IS FALSE), '', CASE GROUP_CONCAT(vt0.c0)  WHEN ((((rt1.c2)OR(0xffffffffbb892d58)))AND(t0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)) WHEN (t1.c0 IN ()) THEN ((rt1.c0)IS(t0.c0)) WHEN '' COLLATE NOCASE THEN CAST('q' AS INTEGER) END FROM rt1, t1 WHERE (((x'' COLLATE BINARY)%(CASE WHEN '' THEN x'708d' WHEN 0.5994021870491357 THEN NULL WHEN NULL THEN NULL ELSE '' END))) ORDER BY ((((t0.c2)<<(t0.c0)))LIKE(((rt1.c1)>(t0.c0)))) DESC  NULLS FIRST, (t0.c2 IN ()) COLLATE BINARY ASC LIMIT -634449092 OFFSET -655362078;SELECT ALL ((((t0.c1 IN (t1.c0))))>(((- ('0.6667332569171193'))))) FROM t1, rt1, vt0, t0; -- 0ms;
SELECT DISTINCT x'3587' FROM t0, rt1, t1, vt0; -- 0ms;
SELECT ((NULL COLLATE NOCASE) IS FALSE) FROM rt1, t1 RIGHT OUTER JOIN vt0 ON CASE (NOT (rt1.c1))  WHEN ((('n.'))>((rt1.c0))) THEN ((((t0.c1)OR(rt1.c0)))OR(t0.c2)) END FULL OUTER JOIN t0 ON (+ (t0.c1)) COLLATE RTRIM WHERE (MAX(0.8238187259492671 COLLATE BINARY, x'', x'3dd0' COLLATE NOCASE, ((0.13322005175179685)+('8t9M'))));