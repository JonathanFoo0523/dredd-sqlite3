-- Time: 2024/06/07 05:43:09
-- Database: database6
-- Database version: 3.40.0
-- seed value: 3925749806
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 3ms;
ROLLBACK TRANSACTION; -- 2ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19106'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 2ms;
UPDATE vt0 SET c0=NULL WHERE CASE WHEN ((vt0.c0)<>('[bB')) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, detail=full); -- 1ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1546403786);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA legacy_file_format = false; -- 1ms;
UPDATE vt1 SET (c0)=(0Xffffffffecb76d87) WHERE ((vt1.c0) ISNULL); -- 0ms;
REINDEX  vt1; -- 0ms;
VACUUM main; -- 2ms;
PRAGMA incremental_vacuum(-454940517); -- 0ms;
END TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT CAST((vt0.c0 IN ()) AS TEXT) FROM vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 10ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 13ms;
INSERT INTO vt1(vt1) VALUES('merge=-129532252,7');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
DELETE FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE)>>('[bB')); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
PRAGMA locking_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA journal_mode = WAL; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1170630438); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE main; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='[bB', c0=NULL, c0=0.94443675152709; -- 0ms;
ANALYZE vt1; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-323523193') WHERE (ABS(DISTINCT vt0.c0) IN ()); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1002118022); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA busy_timeout; -- 1ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-323523193,2');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1356314381);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1589224856); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
VACUUM main; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 956723513); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '1870'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2047691083); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 289862947); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF INSERT ON v0 BEGIN SELECT RAISE(IGNORE);END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT CASE WHEN ((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN CAST(NULL AS REAL) ELSE ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END, MIN(HEX(DISTINCT v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY FROM vt1, vt0 WHERE (HEX(((0.710772241447023)>(x'fb43')))) LIMIT -129532252 OFFSET 1333429574;SELECT DISTINCT (- (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0 WHERE ((((json_valid(0xffffffff873af070)))>((((NULL)<<(0.6576977754973403))))));SELECT ALL (vt1.c0 IN (vt1.c0, v0.c0)) COLLATE NOCASE FROM vt1, vt0, v0 WHERE (json_object(CASE x''  WHEN x'' THEN 7693727278432837253 WHEN x'' THEN x'437e' WHEN NULL THEN 'O' END, CASE WHEN '1546403786' THEN 0.5080061782336772 ELSE 0.43070153147031776 END, json_array_length('-995331688', 0.94443675152709), (0.24521673754046935 IN ('VZ]xEc)&'))));SELECT DISTINCT CAST(((NULL) NOTNULL) AS NUMERIC) FROM vt1, vt0 WHERE (JULIANDAY(CASE x'8dc8'  WHEN x'' THEN 0.654835285752663 ELSE NULL END, ((('1546403786')) BETWEEN ((NULL)) AND (('1333429574'))), (('') IS TRUE), CAST(0.6576977754973403 AS REAL), (~ (0.34367803994972335)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN '1356314381' END)||(v0.c0 COLLATE RTRIM)), NTH_VALUE((((NOT (vt1.c0)))*(((vt1.c0)%(vt1.c0)))), x'ec7b') OVER (), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((+ (vt1.c0))))) FROM vt1 WHERE (ABS(DISTINCT (+ (0Xffffffff873af070))));SELECT DISTINCT (((v0.c0, 1.546403786E9, vt0.c0)) BETWEEN (((v0.c0 IN (vt1.c0)), (((vt0.c0))==((vt0.c0))), ((v0.c0) NOT NULL))) AND ((CASE WHEN vt1.c0 THEN v0.c0 WHEN 0.5226867276438208 THEN 'Ná£¶_' WHEN vt1.c0 THEN vt1.c0 END, (+ (v0.c0)), QUOTE(v0.c0)))) FROM v0 WHERE (((((NULL)=('-995331688')))!=(CAST(x'' AS INTEGER)))) GROUP BY (NOT (((vt0.c0) ISNULL)));SELECT DISTINCT ((((v0.c0)<<(vt1.c0))) NOT NULL) FROM vt1;SELECT DISTINCT ((((v0.c0) BETWEEN (v0.c0) AND (-1.29532252E8))) NOT NULL) FROM v0; -- 0ms;
SELECT ALL CAST(vt0.c0 AS TEXT) COLLATE BINARY, v0.c0, CASE (+ (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN v0.c0 COLLATE NOCASE THEN ((vt0.c0)<<(vt0.c0)) WHEN AVG(vt1.c0) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END END FROM vt0, v0, vt1 WHERE (((CASE '-36536003'  WHEN 0.94443675152709 THEN x'' END) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((v0.c0)+(vt1.c0)))==((+ (vt1.c0)))), ((((NULL)AND(json_array_length(vt1.c0))))OR(CAST(v0.c0 AS BLOB))), (COUNT(vt0.c0) IN (((v0.c0) NOTNULL))) FROM vt1, vt0;SELECT DISTINCT (((v0.c0))<=((v0.c0))) COLLATE RTRIM FROM v0; -- 0ms;
SELECT (~ (((v0.c0) NOTNULL))) FROM vt1;SELECT ALL ((LOWER(DISTINCT vt0.c0)) ISNULL) FROM v0 FULL OUTER JOIN vt0 ON ((((load_extension(vt0.c0, vt1.c0))AND(CAST(vt1.c0 AS NUMERIC))))AND((((v0.c0))<((v0.c0))))) LEFT OUTER JOIN vt1 ON CAST(((v0.c0) ISNULL) AS BLOB);SELECT DISTINCT ((CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END) BETWEEN (TOTAL(x'')) AND (COALESCE(DISTINCT x'', vt1.c0))) FROM vt1, vt0 ORDER BY (+ ((+ (vt0.c0)))) ASC  NULLS LAST, ((((~ (vt1.c0)), CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 END, ((v0.c0)AND('-129532252'))))>((vt1.c0 COLLATE RTRIM, (- (vt0.c0)), ((0.01372574843156571) BETWEEN (v0.c0) AND (vt0.c0))))) DESC  NULLS LAST;SELECT ALL (json_quote(vt0.c0) IN ()), ((((CASE WHEN '-129532252' THEN v0.c0 ELSE vt1.c0 END)OR(((0.34367803994972335) NOT NULL))))OR((NOT (v0.c0)))), UNICODE(GROUP_CONCAT(vt0.c0)), json_extract(COUNT(vt1.c0), ((v0.c0)/(vt1.c0))), TOTAL(((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))AND('B	')))OR(vt1.c0)))AND(v0.c0))) OVER () FROM vt1, vt0 LIMIT -323523193 OFFSET -1703274250;SELECT ALL '-454940517', vt0.c0, CASE WHEN (((('[bB')OR(vt0.c0)))OR(vt0.c0)) THEN json_array_length(vt1.c0) ELSE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) END FROM v0, vt1;SELECT DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((v0.c0) ISNULL), '0.94443675152709', ((vt1.c0) NOT NULL))) AND ((v0.c0, vt0.c0, ((vt0.c0)|(vt0.c0))))) FROM vt1 GROUP BY CAST(v0.c0 AS NUMERIC) HAVING ((((((vt0.c0, v0.c0, vt1.c0))=((vt0.c0, vt0.c0, vt1.c0))), COUNT(1546403786), ((((1546403786)AND(vt1.c0)))AND(vt0.c0))))==((CAST(vt1.c0 AS NUMERIC), ((vt0.c0)*(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));SELECT ALL (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((NOT (vt0.c0))) AND (((v0.c0)<=(vt0.c0)))) FROM vt1, vt0;SELECT DISTINCT CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE FROM vt0, vt1, v0 WHERE (((((('-2026180496'))<((0.30622783428845146))))>(CAST(x'c9f0' AS NUMERIC)))); -- 0ms;
SELECT vt0.c0 FROM v0, vt1 WHERE ((((('451069224') NOT BETWEEN (0.6576977754973403) AND (0.656434293593155))) BETWEEN (CAST(NULL AS TEXT)) AND ((((('[bb')AND(NULL)))OR(0.21084456208349445)))));SELECT ALL v0.c0 FROM vt0, vt1;SELECT DISTINCT COUNT(CAST(0Xfffffffff67cfcd5 AS REAL)) OVER () FROM vt0 WHERE (json_insert((x'' IN ()), CAST(0X319e7d20 AS TEXT), ((NULL) NOT NULL), (('-129532252') NOT BETWEEN (8.32470304E8) AND (0.7237459426832534)), CAST('ta''t' AS REAL)));SELECT ((CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'774f' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (((vt1.c0)/(vt0.c0))) AND (((v0.c0)>=(vt1.c0)))), COUNT(*), ((COUNT(*)) NOT BETWEEN (vt1.c0) AND (CAST(v0.c0 AS BLOB))) FROM vt0 WHERE (SUBSTR(((x'')|('B	')), CASE WHEN NULL THEN 0.4371365810378668 WHEN '' THEN 'aMK4s' WHEN '' THEN 0.34367803994972335 WHEN 0X1ae2c528 THEN x'8efd' WHEN 0.8559520775567206 THEN 0Xffffffffbdd5ac2c END));SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((NULL)>>(MAX(0.7540886470175987, x'c974')))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))<=((vt1.c0 IN ()))) FROM vt0, v0, vt1 WHERE (((((((((('aMK4s')OR('-1509743413')))AND('-454940517')))OR(NULL)))OR(0.7694559122019752)) IN ())) GROUP BY CAST(json_valid('-995331688') AS INTEGER) HAVING CASE WHEN CAST(x'' AS BLOB) THEN (- (vt0.c0)) ELSE TOTAL(v0.c0) END LIMIT -323523193 OFFSET -2026180496; -- 0ms;
SELECT ALL LOWER(DISTINCT (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))), ((4.51069224E8)>=(vt1.c0)), CAST(((((v0.c0)OR(vt0.c0)))AND(v0.c0)) AS BLOB) FROM vt0, vt1, v0 ORDER BY (((vt1.c0)) NOT BETWEEN ((((((329150170)AND(vt0.c0)))OR(v0.c0)))) AND ((((vt1.c0) NOT NULL)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (~ (CAST(v0.c0 AS BLOB))) FROM v0, vt1 CROSS JOIN vt0 ON v0.c0 LIMIT -1509743413 OFFSET 1799264745; -- 0ms;
SELECT ALL (MAX(v0.c0) IN ()), ((x'') NOT NULL), CASE (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN ((v0.c0)OR(v0.c0)) THEN ((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)) END FROM vt0, v0, vt1 ORDER BY (((vt0.c0 IN ()))AND('^W')) ASC;SELECT ALL (((v0.c0, vt0.c0, v0.c0)) BETWEEN ((((v0.c0) NOTNULL), v0.c0, ((vt0.c0)<(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt1.c0)%(vt0.c0)), ((v0.c0)%(vt0.c0))))), (~ (((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))), x'', vt0.c0, ((((((0xfffffffffdd2813d)OR(vt0.c0)))AND(0.5743840121525002))) BETWEEN (((((((((vt1.c0)OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c0))) AND (vt0.c0)) FROM vt0, v0 WHERE (((((((NULL))>=((0.2710819899955045)))))!=(((NULL IN ('O'))))));SELECT DISTINCT CAST(v0.c0 AS NUMERIC) COLLATE RTRIM FROM vt1;SELECT ALL (((v0.c0)OR(vt0.c0)) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT COUNT(COUNT(x'' COLLATE RTRIM)) FROM vt0, v0 WHERE (((GLOB(NULL, x'')) ISNULL));SELECT (((+ (vt1.c0)))!=(((v0.c0)IS(vt1.c0)))) FROM v0 WHERE (json_object(NULL COLLATE NOCASE, ((NULL) NOT NULL), ((((NULL)OR(x'a028086f9300')))AND(NULL)), ((0xfffffffff9149213) IS TRUE)));SELECT DISTINCT CAST(v0.c0 COLLATE RTRIM AS INTEGER), ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ('') AND ((v0.c0 IN (v0.c0, vt0.c0)))), v0.c0 FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT (((- (NULL)))AND(((vt1.c0)&(v0.c0)))) FROM v0, vt0 WHERE (NULL COLLATE NOCASE) GROUP BY TOTAL_CHANGES() HAVING (NOT (((v0.c0) IS TRUE)));SELECT ALL LIKELY(vt0.c0) FROM vt0, v0, vt1; -- 0ms;
SELECT vt0.c0 COLLATE NOCASE, ((((vt0.c0) IS FALSE)) BETWEEN ((v0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM)), ((LIKE(vt0.c0, v0.c0))=(vt0.c0)) FROM v0, vt1;SELECT DISTINCT CAST(((vt0.c0)AND(vt1.c0)) AS INTEGER), (((('-2013978577')||(vt0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))), NULL FROM vt1, vt0 WHERE (LIKE(((x'')>(x'')), ((0.3404013921465209) IS FALSE), '-')) GROUP BY (NOT ((- (vt0.c0)))) HAVING TRIM(DISTINCT (~ (v0.c0)));SELECT DISTINCT ((((vt1.c0 COLLATE RTRIM)OR(((v0.c0) IS FALSE))))AND(((vt0.c0)>>(vt0.c0)))) FROM v0, vt0;SELECT (((+ (vt1.c0)))IS('')) FROM vt1 LEFT OUTER JOIN v0 ON ((((((vt0.c0) IS TRUE))OR(((((vt0.c0)OR(vt1.c0)))AND(v0.c0)))))OR((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) WHERE (CAST(CASE WHEN 0.024721788455872917 THEN x'' ELSE 'B	' END AS NUMERIC));SELECT DISTINCT CASE UNLIKELY(DISTINCT 0.41875299761745977)  WHEN CAST(vt0.c0 AS INTEGER) THEN (vt1.c0 IN ()) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0)LIKE(vt1.c0)) THEN SUM(v0.c0) ELSE x'' END FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c0) BETWEEN ('-274549228') AND (vt0.c0))) ISNULL) WHERE (CAST(((NULL)+(0X5ee43b1b)) AS REAL));SELECT DISTINCT (((vt0.c0)GLOB(1.799264745E9)) IN ()), ((CAST(v0.c0 AS REAL)) ISNULL), ((GROUP_CONCAT(vt1.c0)) NOTNULL) FROM vt0 WHERE (CASE WHEN (NOT ('0.656434293593155')) THEN (('m') NOT NULL) ELSE ((NULL) NOTNULL) END);SELECT ALL TRIM(DISTINCT ((vt0.c0)!=(v0.c0))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER) FROM v0, vt0;SELECT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1833887647' WHEN vt0.c0 THEN 'MA*~\rd' END COLLATE NOCASE FROM vt1;SELECT DISTINCT (((vt0.c0)) BETWEEN ((AVG(vt0.c0))) AND ((vt0.c0 COLLATE NOCASE))) FROM vt1, vt0 WHERE (((((x'')&(0.8241705404356587))) ISNULL)); -- 0ms;
SELECT SUM(0.5947065497200418) OVER ( ORDER BY load_extension((((vt0.c0))<=((v0.c0)))) DESC  NULLS LAST), COUNT(v0.c0) OVER (), (((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) IN ()) FROM vt0;SELECT ALL v0.c0 FROM v0 WHERE ((+ ((+ ('1799264745'))))) GROUP BY x''; -- 0ms;
SELECT ALL (((vt1.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((vt0.c0)>(vt0.c0))), ((vt0.c0)||(-705774906)) COLLATE BINARY, ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, ((((vt0.c0) ISNULL))!=(((vt1.c0)>>(v0.c0)))), (((v0.c0) IS TRUE) IN ((vt0.c0 IN (vt1.c0)), ((x'') NOTNULL))) FROM v0 WHERE (((LIKELIHOOD('0.94443675152709', 0.5519313949337127)) BETWEEN (SQLITE_SOURCE_ID()) AND ('ì®iF')));SELECT DISTINCT (CASE WHEN vt1.c0 THEN vt0.c0 END IN ((vt0.c0 IN (vt0.c0)), (v0.c0 IN (NULL)))) FROM v0, vt1 WHERE (('1333429574' IN ()));SELECT CAST(((vt0.c0)+(v0.c0)) AS NUMERIC) FROM vt0, vt1;SELECT ALL (('600476853')<=(CASE v0.c0  WHEN vt1.c0 THEN -1.833887647E9 ELSE vt1.c0 END)) FROM v0, vt0;SELECT DISTINCT LAG(((-1.59580971E8)>=((v0.c0 IN ()))), (v0.c0 COLLATE BINARY IN ()), ((('X&22')) NOT BETWEEN ((((v0.c0)=(v0.c0)))) AND ((v0.c0)))) OVER (), '', ((+ (vt0.c0)) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT v0.c0, ((((CAST(vt0.c0 AS REAL))OR((- (v0.c0)))))OR(UPPER(DISTINCT vt1.c0))), '' FROM vt0, v0, vt1 WHERE (highlight((+ (NULL)), json_array(NULL, NULL, '-1633271077', '', NULL, NULL), 0.9988490376038819 COLLATE BINARY, 0.5681202120494796));SELECT ALL ((COUNT(v0.c0)) IS FALSE) FROM vt0;SELECT DISTINCT (((PRINTF(v0.c0, 'VZ+xEcY&', v0.c0)))<=((CAST(v0.c0 AS REAL)))), CAST(((vt1.c0)==(v0.c0)) AS NUMERIC), (((((vt1.c0))>=((v0.c0)))) NOT BETWEEN (COUNT(*)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND ('-1833887647'))) AND (0X4c1ff7c3)), TOTAL(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))), ((((CAST(v0.c0 AS NUMERIC))OR(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))AND((vt0.c0 IN ()))), vt1.c0, DENSE_RANK() OVER () FROM vt1 WHERE (CAST((((x'6404', NULL, -1.509743413E9)) NOT BETWEEN ((0.3112536114118387, '1882390267', NULL)) AND ((x'2a08', '5ï³ká¹½B&', NULL))) AS INTEGER));SELECT DISTINCT CASE WHEN ((0.01372574843156571)IS NOT(vt0.c0)) THEN ((vt1.c0)IS(v0.c0)) ELSE vt1.c0 END FROM vt0 WHERE (CASE WHEN ('-773190504' IN ()) THEN x'' ELSE (('-1633271077')-(0.01372574843156571)) END);SELECT DISTINCT UNLIKELY((NOT (v0.c0))), (((((vt1.c0)>=(v0.c0))))!=((CAST(v0.c0 AS INTEGER)))), CAST(vt1.c0 COLLATE BINARY AS REAL) FROM vt0 WHERE (UNLIKELY(x'f6da'));SELECT CAST(json_extract(vt1.c0, 0.9988490376038819, vt1.c0, vt1.c0) AS REAL), CASE WHEN ((0.7777484956733853)IS(vt0.c0)) THEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(v0.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0)/(vt0.c0)) WHEN COUNT(*) THEN (vt0.c0 IN ()) ELSE v0.c0 END, ((TRIM(DISTINCT vt0.c0)) NOTNULL) FROM vt1 WHERE (((((CASE WHEN x'' THEN NULL WHEN '' THEN -1807116860 WHEN '-1833887647' THEN '-1255407501' WHEN 0.1269637766161903 THEN 'MA*~\rD' WHEN '^{ç VXH<' THEN x'' END)AND(CASE WHEN 0.009638797630263207 THEN x'' END)))AND(((((((((NULL)OR('hfJ!}~')))OR('')))OR('832470304')))AND(0.34367803994972335)))));SELECT vt1.c0 FROM vt0, v0;SELECT DISTINCT MIN((+ (v0.c0)), v0.c0), (NOT (v0.c0)), (((vt0.c0 IN ())) ISNULL) FROM v0, vt0, vt1 WHERE (CAST(CASE x''  WHEN 4.51069224E8 THEN x'2998' WHEN 0.24830772527375367 THEN 0.3944091433285587 WHEN 463042080 THEN NULL END AS INTEGER)); -- 1ms;
SELECT (((((v0.c0 IN ()))AND((((vt0.c0, NULL, vt1.c0)) NOT BETWEEN ((NULL, v0.c0, vt0.c0)) AND ((vt1.c0, v0.c0, v0.c0))))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 END)) FROM vt1 NOT INDEXED, vt0, v0; -- 0ms;
SELECT ALL v0.c0, LAST_VALUE(HEX(DISTINCT HEX(v0.c0))) OVER (), v0.c0 FROM v0 WHERE (((((-1739081083)) NOT BETWEEN ((x'')) AND ((0.009638797630263207))) IN ((('9*\ãW')<(x'fa9d'))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) ISNULL))>(((((v0.c0)OR(vt0.c0)))AND(vt1.c0)))), (((vt0.c0 IN (vt1.c0))) NOTNULL), CASE WHEN ((vt1.c0)<<('1882390267')) THEN ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(vt1.c0)))OR(vt0.c0)) END FROM vt0, v0 WHERE (((((((('2001749184')) NOT BETWEEN ((NULL)) AND ((-1834163572))))AND((NULL IN ()))))OR((x'' IN ())))) ORDER BY ((NULL) BETWEEN (DATETIME(v0.c0, vt0.c0, v0.c0)) AND (((x'')-(x'613e')))) DESC  NULLS FIRST;SELECT DISTINCT (((~ (vt1.c0))) IS TRUE) FROM v0, vt1 WHERE (CASE CAST(NULL AS BLOB)  WHEN ((x'')>=(NULL)) THEN ((NULL)-(-2082467847)) WHEN ((((x'')OR(x'968e')))AND('1717029361')) THEN NULL COLLATE RTRIM WHEN ((-1989452736) NOT BETWEEN (0.5545095390044346) AND (0.2657093286591363)) THEN (('399658280')!=(0.5450489528412817)) END); -- 0ms;
SELECT ((vt1.c0) BETWEEN (x'') AND (vt1.c0 COLLATE RTRIM)), highlight(((v0.c0)!=('[bb')), NULL, ((vt0.c0)+(v0.c0)), 'RZb0'), vt0.c0 FROM vt1, v0, vt0; -- 0ms;
SELECT 0.7281904353370549 FROM vt1 ORDER BY (- ((+ (v0.c0)))) ASC  NULLS LAST;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (TOTAL(vt0.c0)) AND (CASE WHEN v0.c0 THEN 1.799264745E9 ELSE v0.c0 END)) FROM vt1 WHERE (((-2136822574 COLLATE RTRIM) BETWEEN (CAST(x'' AS INTEGER)) AND (((((x'')OR(x'')))AND(0.32916026203829674)))));SELECT DISTINCT ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) FROM vt1, v0;SELECT DISTINCT '463042080' FROM v0 WHERE (((((((x'')AND('lKKY3Lï »6T')))AND(((NULL) NOTNULL))))OR((((NULL))<>((NULL)))))); -- 0ms;
SELECT DISTINCT COALESCE(vt1.c0 COLLATE RTRIM, ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)), CASE WHEN v0.c0 THEN vt1.c0 END, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS TEXT))AND(((vt0.c0)<(v0.c0)))), (((TYPEOF(DISTINCT vt0.c0)))==(((v0.c0 IN ())))), AVG((- (vt1.c0))) FILTER(WHERE SQLITE_SOURCE_ID()) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt1 LIMIT -1836650046 OFFSET 1566876365;SELECT vt0.c0, CAST(((vt0.c0) NOT NULL) AS BLOB), NTILE(CASE (v0.c0 IN ())  WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN NULL THEN CAST(vt0.c0 AS NUMERIC) WHEN (('-1255407501')/(vt1.c0)) THEN 'I^' ELSE (v0.c0 IN ()) END) OVER () FROM vt0, v0, vt1 WHERE (((((x'')*(NULL))) IS TRUE)); -- 0ms;
SELECT (+ (((vt0.c0)>>(vt1.c0)))) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT (((~ (vt1.c0)))>>((('0.2657093286591363')AND(vt1.c0)))), vt1.c0, ((0.09738249641437513 COLLATE BINARY) IS TRUE) FROM vt1, vt0 LIMIT -2049616112; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) IS TRUE) AS BLOB) FROM vt1, v0, vt0 ORDER BY v0.c0 COLLATE BINARY, (- ((((vt0.c0))==((vt1.c0))))) DESC; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(0.9368911271097488 AS REAL) THEN vt1.c0 COLLATE BINARY END FROM vt1, v0 WHERE ((((x'deb8')) NOT BETWEEN ((((0.8241705404356587) NOT BETWEEN (NULL) AND (0.8733136871391319)))) AND ((((-422005045) IS FALSE))))); -- 0ms;
SELECT ((((vt0.c0) NOT NULL)) IS FALSE), vt0.c0, AVG(COUNT(vt1.c0)) FROM v0 LIMIT -69831477 OFFSET -1867604266;SELECT DISTINCT (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0)))) IS TRUE) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((LOWER(DISTINCT 'm'))-(((vt1.c0) IS FALSE))), (((v0.c0)) NOT BETWEEN ((((0X5a64060c) BETWEEN (vt1.c0) AND (v0.c0)))) AND (((((v0.c0))>((vt1.c0)))))), LIKELY(((vt1.c0)>(vt1.c0))) FROM v0, vt1; -- 0ms;
SELECT NULL FROM vt0, vt1 WHERE (((((x'') NOT BETWEEN (x'63f3') AND (-456469885))) IS TRUE)) ORDER BY ((CASE -1418723184  WHEN v0.c0 THEN x'' END)>>(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END))  NULLS LAST;SELECT ALL '2074510071' FROM vt0, vt1 LIMIT -1401358540 OFFSET -1330209277; -- 1ms;
SELECT DISTINCT CASE WHEN ((((((((v0.c0)AND(vt1.c0)))OR(v0.c0)))OR(vt1.c0)))AND(NULL)) THEN vt0.c0 END, CAST(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS TEXT), SUM((v0.c0 IN (vt0.c0, v0.c0))) OVER () FROM vt1, v0;SELECT 'T' FROM vt1 LIMIT 1703678238 OFFSET -2121365145; -- 0ms;
SELECT ALL MAX(((vt1.c0)!=(vt1.c0))) FROM vt0 LIMIT 687480445;SELECT (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) FROM vt0 WHERE (2.97990203E8);SELECT DISTINCT GROUP_CONCAT(vt1.c0) FROM vt1; -- 0ms;
SELECT ALL (((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, vt0.c0, ((vt0.c0)OR(v0.c0)))) AND ((COUNT(v0.c0), CAST(vt0.c0 AS INTEGER), rtreenode(vt1.c0, v0.c0)))) FROM vt0, vt1 WHERE (COALESCE(DISTINCT (NULL IN ()), (x'76ef' IN ()))) GROUP BY (((((v0.c0)/(vt0.c0))))<=((6.87480445E8))) HAVING (vt0.c0 IN ());SELECT ALL NULL FROM v0, vt1 WHERE (HEX((0.8241705404356587 IN ()))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1; -- 0ms;
SELECT MIN(json_array_length(v0.c0, vt0.c0)), ((vt1.c0) IS FALSE) COLLATE BINARY, ((((((v0.c0)OR(v0.c0)))OR(vt1.c0))) ISNULL) FROM vt0, vt1, v0; -- 0ms;
SELECT CAST(MIN(vt0.c0) AS REAL) FROM v0;SELECT DISTINCT SQLITE_COMPILEOPTION_USED(MAX(vt0.c0)), (((v0.c0)) NOT BETWEEN (((((v0.c0))>=((v0.c0))))) AND ((GROUP_CONCAT(v0.c0)))), (((((v0.c0)AND(vt0.c0)))AND(0.22751235080790122)) IN ()) FROM vt1, v0 WHERE ((((- (NULL))) NOTNULL));SELECT (- (-7.05774906E8)), (((((((vt1.c0)AND(v0.c0)))OR(v0.c0))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))), ((json_remove(vt1.c0, vt1.c0, vt1.c0, v0.c0)) BETWEEN (((vt1.c0) ISNULL)) AND ((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))), (((+ (v0.c0))) NOT BETWEEN (((((vt1.c0)AND(v0.c0)))AND(vt1.c0))) AND ((vt0.c0 IN (v0.c0, vt0.c0)))), ((vt0.c0 COLLATE RTRIM) ISNULL) FROM vt1;SELECT ALL CAST(vt0.c0 AS TEXT), ((((vt0.c0)<(x'eb08'))) IS FALSE), ((vt0.c0)&(v0.c0)) COLLATE RTRIM FROM vt1 WHERE (LAST_INSERT_ROWID());SELECT DISTINCT vt1.c0, (CAST(vt1.c0 AS NUMERIC) IN (COUNT(vt0.c0), ((v0.c0)>(v0.c0)))), FIRST_VALUE(((vt0.c0)==(x'6292')) COLLATE BINARY) OVER () FROM vt0 WHERE (NULL);SELECT DISTINCT COUNT(*) OVER () FROM vt0, v0 WHERE ((- ((- (-2.136822574E9))))); -- 0ms;
SELECT ALL (- ((NOT (vt0.c0)))), ((((((vt1.c0)AND(v0.c0)))AND(v0.c0)))<<(MAX(v0.c0))), GROUP_CONCAT(((vt0.c0)>(v0.c0))) OVER () FROM vt1 WHERE (0x4888b783);SELECT DISTINCT NULL FROM vt1, v0, vt0 WHERE (CAST((('-1330209277')LIKE(x'')) AS INTEGER)) LIMIT 1588230377 OFFSET -371787868; -- 0ms;
SELECT ALL HEX(((vt1.c0)IS NOT(vt0.c0))) FROM vt1, v0 WHERE (((((x'' COLLATE RTRIM)OR(((NULL)-('1244265004')))))OR(CASE NULL  WHEN 0.8241705404356587 THEN -101304885 WHEN '-1833887647' THEN '451069224' WHEN '+Y\rfJ_' THEN x'' END)));SELECT DISTINCT (((((NULL)) BETWEEN ((v0.c0)) AND ((vt1.c0)))) BETWEEN ('') AND (v0.c0 COLLATE RTRIM)), 0.6443265627049178, x'1d51' FROM vt1, vt0, v0; -- 0ms;
SELECT ALL ((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (NULL)) FROM vt0, vt1, v0 WHERE (((TRIM('2074510071', -2.013978577E9)) NOT BETWEEN ('XDg0zvLé¬%') AND ((NULL IN (x''))))); -- 0ms;
SELECT DISTINCT v0.c0 COLLATE RTRIM, GROUP_CONCAT(vt0.c0) OVER (), ((CAST(vt1.c0 AS REAL)) NOTNULL) FROM v0, vt1;SELECT DISTINCT ((- (vt0.c0)) IN ()), vt1.c0, ROW_NUMBER() OVER () FROM vt1, v0, vt0 WHERE ((((('1799264745')>(x'')))>>(CASE '-1597164005'  WHEN NULL THEN 0x14fa5578 WHEN '1993043427' THEN x'6d45' WHEN -1.110070228E9 THEN NULL ELSE x'' END))) LIMIT 0 OFFSET -881953660; -- 0ms;
SELECT DISTINCT ((AVG(v0.c0)) IS FALSE), vt1.c0, ((CAST(x'' AS REAL))+(CAST(v0.c0 AS TEXT))) FROM vt1 LIMIT 351950200;SELECT DISTINCT ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) COLLATE BINARY, CAST(((v0.c0)>(vt0.c0)) AS BLOB), (+ (((vt1.c0)/(vt1.c0)))) FROM vt1 WHERE (((((('-349091206')IS('ï»»')), 0.6040850211500844, CAST(0.7237459426832534 AS INTEGER)))>(((((-1.989452736E9))=(('eB'))), (+ (NULL)), CASE WHEN 0.9847622925531648 THEN ',iæ¶ã£cmjE' ELSE NULL END))));SELECT DISTINCT load_extension(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) FROM v0;SELECT DISTINCT ((vt1.c0)=(((vt0.c0)%(0.6734968008708458)))) FROM vt0, vt1 WHERE (CASE (+ (0.33235796365952563))  WHEN (((0.575945511522042)) BETWEEN (('-159580971')) AND ((-1.509743413E9))) THEN ((NULL) IS FALSE) END); -- 0ms;
SELECT ALL (((NOT (vt0.c0)))=(LTRIM(vt0.c0, v0.c0))) FROM v0 WHERE (((((((((((NULL)AND(-1.633271077E9)))OR(NULL)))AND(NULL)))OR('ç¡­a')))>(((((x'')OR(x'')))AND(0.04383763865348056)))));SELECT RANK() OVER (), CHAR(SUM(vt0.c0)), v0.c0 FROM vt0, v0 LIMIT 2074510071; -- 0ms;
SELECT DISTINCT (((((((vt0.c0, v0.c0, v0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, v0.c0, '-1666696806', vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0, vt1.c0, v0.c0))))AND(GROUP_CONCAT(vt0.c0))))OR(MAX(vt0.c0))), DENSE_RANK() OVER (), PERCENT_RANK() OVER () FROM v0, vt0;SELECT CAST((- (vt0.c0)) AS BLOB) FROM vt0, vt1 WHERE (((((((0.9122759878351466)<<('-995331688')))AND(((0.20883003685985801) BETWEEN (NULL) AND ('-1807116860')))))OR((x'fd02' IN ())))); -- 1ms;
SELECT CAST(vt1.c0 COLLATE RTRIM AS REAL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT -1.7976931348623157E308 FROM vt0 WHERE ((((- (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((NULL) IS TRUE))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0, v0, vt1 GROUP BY x'' HAVING -2.082467847E9 ORDER BY (((v0.c0) NOT NULL) IN (CASE v0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
SELECT ALL '1767464467' FROM v0; -- 0ms;
SELECT DISTINCT TOTAL(CAST(v0.c0 AS INTEGER)) OVER (), TYPEOF(((v0.c0)AND(vt1.c0))), CASE QUOTE(v0.c0)  WHEN ((vt0.c0)/(v0.c0)) THEN IFNULL(DISTINCT v0.c0, vt0.c0) ELSE vt1.c0 COLLATE RTRIM END FROM vt1, vt0 WHERE ((((NULL, x'', '-537012893')) NOT BETWEEN (((x'' IN ()), ((((NULL)OR(NULL)))OR('-1989452736')), (NOT ('-323523193')))) AND ((highlight(NULL, 'mdl', -1.7976931348623157E308, '754339473'), ((('-1597164005')) BETWEEN (('')) AND ((x''))), ((0.05965898728340646) IS FALSE)))));SELECT DISTINCT (TYPEOF(vt0.c0) IN ()) FROM vt1 WHERE (((NOT ('-1780849567')) IN ())) ORDER BY CHANGES() DESC; -- 0ms;
SELECT (((vt0.c0, '1708167805', vt0.c0)) NOT BETWEEN ((vt1.c0, ((((v0.c0)OR(vt1.c0)))OR(vt1.c0)), IFNULL(vt0.c0, v0.c0))) AND ((vt1.c0, ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)), x''))) FROM vt1, vt0 WHERE ((((NULL, '', x'a5aa', NULL, x'')) BETWEEN (((- ('-143001198')), (- (0.6282872762700447)), (+ ('m_')), ((NULL)|(1396125399)), (((x'298d')) NOT BETWEEN ((NULL)) AND ((x'38dd'))))) AND ((((NULL) BETWEEN (NULL) AND (0xffffffffe617547b)), (('-143001198')IS(1.546403786E9)), ((((NULL)AND('5ï³ká¹½b&')))AND(0.06338004866903946)), ((0.3488865015750483) ISNULL), ((((x'5581')OR(1487251083)))AND(x'')))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))))<=(((v0.c0) ISNULL)))  NULLS LAST;SELECT DISTINCT ((vt0.c0)==(vt1.c0)) COLLATE NOCASE FROM v0 WHERE (UNLIKELY(DISTINCT ((NULL) IS TRUE)));SELECT DISTINCT (~ (SUM(vt1.c0))) FROM vt1 WHERE (((((NULL) NOT BETWEEN ('') AND (NULL))) BETWEEN ((NOT (x''))) AND (TIME(0.283967798375927, 0.3437733711369103, 'â¯')))); -- 0ms;
SELECT GROUP_CONCAT(vt1.c0) OVER () FROM vt0 ORDER BY ((((v0.c0)*(v0.c0)))<>(((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND('1e500')))) ASC LIMIT 1396125399 OFFSET -1810374807;SELECT DISTINCT ((((vt0.c0)*(v0.c0)))>(NULL)), ((v0.c0 COLLATE RTRIM) IS FALSE), (((LIKELY(DISTINCT vt1.c0)))!=((CASE WHEN vt1.c0 THEN vt1.c0 END))) FROM vt1, v0 LIMIT -434678661;SELECT (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE NOCASE FROM vt0, v0; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN ((vt0.c0)!=(vt0.c0)) END FROM v0, vt0, vt1 LIMIT 145398901; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)||(vt1.c0)))), AVG(vt0.c0) OVER (), CASE WHEN ((v0.c0)|(vt0.c0)) THEN CASE WHEN vt1.c0 THEN v0.c0 END ELSE vt1.c0 COLLATE RTRIM END, ((((NULL) ISNULL)) ISNULL), (((CAST(vt0.c0 AS TEXT)))<=((((vt1.c0)|(vt1.c0))))) FROM v0, vt0, vt1; -- 0ms;
SELECT ((((vt0.c0) NOTNULL)) ISNULL) FROM vt1, v0 GROUP BY CASE WHEN vt0.c0 COLLATE NOCASE THEN (+ (vt1.c0)) END ORDER BY CAST((vt1.c0 IN ()) AS BLOB), (LTRIM(vt1.c0, 0.13572214927040038) IN ()) ASC;SELECT ALL ((((v0.c0)%(v0.c0))) NOTNULL) FROM vt1, vt0;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))) AND ((((vt1.c0)<<(vt1.c0))))) FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0) IS FALSE) FROM vt0, vt1 WHERE (((ABS(-7.73190504E8)) NOT BETWEEN (LOWER(DISTINCT '-116092397')) AND ((- (x''))))); -- 0ms;
SELECT DISTINCT ((((+ (v0.c0))))>((vt0.c0 COLLATE BINARY))), (- ((v0.c0 IN ()))), (- (vt0.c0)) COLLATE BINARY FROM v0 WHERE ((((-4.56469885E8)) NOT BETWEEN ((COALESCE(x'', '-1199883254'))) AND (((+ ('Gzsw%-zT'))))));SELECT NTILE('uã)N5') OVER () FROM vt0, v0, vt1; -- 0ms;
SELECT ALL CAST(((v0.c0) ISNULL) AS BLOB) FROM v0, vt0 WHERE (((x'de6ded49')-(x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT MAX(CAST(v0.c0 AS TEXT)), ((((((((((0xffffffffcbbbee05)=(vt0.c0)))AND(0.6669428740289834)))OR(TOTAL(vt0.c0))))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))AND(MIN(v0.c0))), (((((((('811928547')OR('811928547')))OR((vt0.c0 IN (v0.c0, vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN '1' WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))AND(LOWER(vt1.c0))), (- (vt0.c0)), ((((((((((vt0.c0) IS TRUE))AND(vt1.c0 COLLATE NOCASE)))AND(-69831477)))OR(((vt1.c0) ISNULL))))OR(vt0.c0)) FROM v0, vt1 WHERE ((((((- ('')))OR(CASE '.fQMu'  WHEN 0.6740103970841874 THEN 6.00476853E8 END)))AND((((('aWt_')AND(-1.780849567E9)))AND(x''))))) GROUP BY ((~ (v0.c0)) IN (((v0.c0)/(vt0.c0)), (vt1.c0 IN (NULL)))) HAVING ((HEX(vt0.c0))>>((((v0.c0, '-256913839', vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))));SELECT (((vt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))), ((CAST(vt0.c0 AS INTEGER)) IS FALSE), (NOT (vt1.c0)) FROM vt0, v0, vt1 ORDER BY vt1.c0  NULLS FIRST, ((~ (vt1.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((((vt0.c0)=(vt1.c0))) BETWEEN (CHAR(NULL)) AND (((v0.c0) NOT NULL))), CASE WHEN v0.c0 COLLATE RTRIM THEN GROUP_CONCAT(v0.c0) WHEN (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN ((vt1.c0)%(v0.c0)) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN (v0.c0 IN ()) END, ((HEX(DISTINCT vt1.c0))>(vt1.c0 COLLATE NOCASE)) FROM v0, vt1;SELECT ((vt1.c0) IS TRUE) COLLATE NOCASE FROM vt0 WHERE ((- (CASE x''  WHEN NULL THEN x'' ELSE 0.8031563208293048 END))) GROUP BY CASE (vt0.c0 IN (vt0.c0))  WHEN UNLIKELY(v0.c0) THEN (((-4.54940517E8))<((vt0.c0))) END ORDER BY (((CASE '-1836650046'  WHEN v0.c0 THEN x'' ELSE v0.c0 END))!=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))), (v0.c0 IN (0.3092373049919227)) COLLATE BINARY DESC  NULLS LAST, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (vt0.c0 IN ()) END ASC;SELECT DISTINCT QUOTE((((v0.c0, vt1.c0, 351950200)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) FROM vt1, v0 WHERE ((((1703678238, NULL, '-537012893')) NOT BETWEEN ((CASE WHEN 1516504588 THEN 'ç¡­a' ELSE 0.8733136871391319 END, ((((x'7716')AND(x'')))AND(0x2e3fb1d2)), CAST(NULL AS BLOB))) AND ((NULL COLLATE BINARY, (((('udQu')OR('')))AND(NULL)), -3.79011026E8 COLLATE RTRIM))));SELECT ALL CAST((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) AS NUMERIC) FROM vt0, vt1, v0 WHERE (((('zm' COLLATE RTRIM, ((NULL) BETWEEN (0.6452910110223322) AND (NULL)), x''))<=((('1592015643' IN ('1146132814', NULL)), ((NULL) IS TRUE), ((x'')IS NOT(-2.049616112E9)))))); -- 0ms;
SELECT vt1.c0 FROM vt1, v0 WHERE (((x'' COLLATE RTRIM) BETWEEN (x'd689') AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((0.34367803994972335)) AND ((v0.c0))))||(((vt0.c0)<=(vt0.c0)))) FROM v0, vt1, vt0 WHERE ((((NULL))>=(((('<W2cHw}') IS TRUE))))); -- 0ms;
SELECT ALL CAST(LTRIM(NULL) AS INTEGER) FROM vt0, vt1 WHERE (CASE ((((((((((((NULL)AND(NULL)))AND('1396125399')))OR(NULL)))OR(x'')))OR(NULL)))OR(1.993043427E9))  WHEN ((((-2013978577)AND('')))OR(0.29178428407767654)) THEN ((x'') IS TRUE) ELSE ((x'') IS FALSE) END) ORDER BY (((TRIM(v0.c0)))<=((((v0.c0)&(vt0.c0)))))  NULLS FIRST;SELECT DISTINCT LIKELIHOOD(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)), 0.9344939089363181), GROUP_CONCAT((- (vt1.c0)) COLLATE RTRIM) OVER (), COUNT(*) FROM v0, vt0;SELECT 1080790008, TOTAL(LTRIM(vt0.c0, vt0.c0)) OVER ( GROUPS  UNBOUNDED PRECEDING), ((CAST(v0.c0 AS NUMERIC))!=(((v0.c0) IS FALSE))), AVG(vt1.c0) OVER (), AVG(((x'') BETWEEN (vt1.c0) AND (vt1.c0))) OVER () FROM vt1, vt0 WHERE ((+ ((('G<MëåBLT\r') NOTNULL))));SELECT ((COUNT(vt0.c0))OR(((vt0.c0) NOTNULL))), (+ ((v0.c0 IN ()))), ((((CAST(v0.c0 AS TEXT))AND(((vt1.c0)||(vt1.c0)))))OR((vt1.c0 IN (vt0.c0)))) FROM v0;SELECT ALL (((v0.c0)>>(vt0.c0)) IN ()) FROM vt0, v0 WHERE ((((x'2481')>(x'')) IN ())); -- 0ms;
SELECT DISTINCT ((vt0.c0)-(((v0.c0)*(vt0.c0)))) FROM vt0, v0 WHERE (((((0.7419445408451318)OR(NULL)))OR(-506521292)) COLLATE NOCASE) GROUP BY (v0.c0 COLLATE RTRIM IN ()); -- 0ms;
SELECT COUNT(*) FILTER(WHERE ((((CASE vt1.c0  WHEN v0.c0 THEN v0.c0 END)AND(v0.c0 COLLATE BINARY)))AND(((v0.c0)*(vt1.c0))))) OVER () FROM vt1, vt0, v0; -- 0ms;
SELECT (((((+ (vt0.c0)))OR((v0.c0 IN ()))))OR(((vt0.c0)>=(vt0.c0)))), NULL, ((((((((NULL)AND(vt1.c0)))OR(vt1.c0)))AND(((v0.c0) IS FALSE))))AND(vt0.c0)), v0.c0, COUNT(*) OVER () FROM vt0 WHERE ((+ (CAST('c*!A	fV' AS TEXT))));SELECT DISTINCT ((((v0.c0) IS FALSE)) ISNULL), CASE WHEN ((v0.c0) NOTNULL) THEN (((vt1.c0))<>((vt1.c0))) END, CASE WHEN (((x'')) BETWEEN ((vt1.c0)) AND ((-1.666696806E9))) THEN ((vt1.c0)<>(vt0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN (((vt0.c0))!=((vt0.c0))) WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE NOCASE END FROM v0, vt1, vt0; -- 0ms;
SELECT ALL (((((vt0.c0)>>(vt1.c0))))<((GROUP_CONCAT(v0.c0)))) FROM v0, vt0;SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN ((vt1.c0)!=(v0.c0)) WHEN 0.5080061782336772 THEN LOWER(vt0.c0) WHEN (v0.c0 IN ()) THEN LIKELY(v0.c0) ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END, ((CASE WHEN v0.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '-143001198' THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 END) IS FALSE), x'', GROUP_CONCAT('-1053783192'), PERCENT_RANK() OVER () FROM v0 ORDER BY ((((vt0.c0)/(vt1.c0)))&(((v0.c0)>=(vt0.c0)))) DESC;SELECT TOTAL('.[*7') OVER () FROM v0, vt1 WHERE ('0.9122759878351466'); -- 1ms;
SELECT ALL (+ (x'' COLLATE RTRIM)), ((-1.666696806E9) BETWEEN (x'') AND (v0.c0)) COLLATE NOCASE, json_remove(((vt1.c0)<<(vt0.c0)), (((vt1.c0))!=((vt0.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0 COLLATE BINARY) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOTNULL))||(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))) FROM vt0, vt1, v0 WHERE ((+ (x''))); -- 0ms;
SELECT DISTINCT vt1.c0, (((v0.c0, vt1.c0, v0.c0)) BETWEEN ((((vt1.c0)=(vt0.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END, ((vt0.c0)OR(vt1.c0)))) AND (((vt1.c0 IN ()), '7693727278432837253', (((v0.c0))>((0.3230764255600802)))))), MIN(CAST(vt0.c0 AS INTEGER)) FROM vt1, v0, vt0; -- 0ms;
SELECT ALL (- (((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)))) FROM vt1, v0 WHERE (x'');SELECT ((vt0.c0 COLLATE NOCASE)!=(vt1.c0)) FROM vt1, vt0 INNER JOIN v0 ON (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(v0.c0)) IN ()); -- 0ms;
SELECT (- (((NULL)>=(vt0.c0)))) FROM v0, vt1 GROUP BY (((vt0.c0 IN (0.9257768529225305)))/(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (TRIM(vt0.c0) IN ()), vt0.c0 HAVING ((').]')=(v0.c0)) COLLATE BINARY;SELECT CASE WHEN ((vt0.c0) ISNULL) THEN (~ (vt0.c0)) ELSE ((vt1.c0)/(vt0.c0)) END, (((((vt0.c0))>((vt1.c0)))) NOTNULL), ((vt1.c0 COLLATE NOCASE) NOTNULL) FROM vt0, v0;SELECT DISTINCT (v0.c0 COLLATE RTRIM IN ()) FROM v0; -- 0ms;
SELECT ALL '', NTILE((((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0)IS NOT(vt0.c0)))))) OVER (), (~ (v0.c0)) COLLATE RTRIM, AVG((((v0.c0))==((vt1.c0)))) OVER (), CAST(NULL AS INTEGER) FROM vt1 LEFT OUTER JOIN vt0 ON ((UNLIKELY(DISTINCT vt0.c0))%((- (vt0.c0)))) WHERE (IFNULL((('') NOT BETWEEN ('~//') AND (109462187)), (1631622666 IN (0.8959323388944831)))) GROUP BY (~ (((((vt1.c0)OR(v0.c0)))OR(v0.c0)))), CASE WHEN vt1.c0 THEN LIKELY(vt1.c0) ELSE (- (vt0.c0)) END, CAST(((('jê¶°dK9<TXë²¶')) NOT BETWEEN ((v0.c0)) AND (('é°¥kCc'))) AS INTEGER) ORDER BY ((vt0.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM));SELECT DISTINCT (((vt1.c0)) BETWEEN ((0.3404013921465209)) AND (((((vt0.c0, v0.c0, x'')) BETWEEN ((vt1.c0, v0.c0, vt0.c0)) AND ((vt1.c0, v0.c0, '[bb')))))), COUNT((+ (vt1.c0))), vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((('.fQMu')>=('1333429574'))))); -- 0ms;
SELECT DISTINCT LOWER(((vt1.c0)*(vt1.c0))), (((vt1.c0)) NOT BETWEEN ((CAST(-1053783192 AS TEXT))) AND ((((vt0.c0)=(vt0.c0))))), ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))*(COUNT(vt1.c0))) FROM v0, vt1 WHERE ((- (((0.8559520775567206) IS TRUE)))) LIMIT -705774906;SELECT DISTINCT MIN(CAST(vt1.c0 AS NUMERIC)), TRIM(DISTINCT ((v0.c0) NOTNULL)), v0.c0 COLLATE RTRIM FROM vt1, v0, vt0 WHERE (((0.6407847357502983) NOT BETWEEN ((- (0.5858288803168175))) AND (json_insert(0.36600038275703595, '109462187', 0.17260056373536714))));SELECT DISTINCT (NOT ((((vt1.c0))!=((vt0.c0))))), ((((((vt0.c0)LIKE(vt0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 'eå' THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN 244175913 THEN vt0.c0 END)))OR(vt1.c0 COLLATE BINARY)), TYPEOF(DISTINCT ((vt1.c0)|(vt0.c0))) FROM v0, vt1 WHERE (((((0.24486744450618592)==(NULL)))LIKE(CAST(x'05517589' AS TEXT))));SELECT DISTINCT '' FROM v0 WHERE ((((('0.6282872762700447')>=(x'7e61')))OR(('0.22751235080790122' IN (x'8d16'))))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((vt0.c0) ISNULL)) FROM vt0, vt1 ORDER BY LOWER(CAST(vt1.c0 AS INTEGER)) ASC  NULLS LAST; -- 0ms;
SELECT CAST(((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) FROM v0, vt1, vt0 WHERE (((((((-1531693353)OR(x'8cdc')))OR('-1597164005')))<<(CASE -2.013978577E9  WHEN 0.8671288319972387 THEN x'6fdf' END))); -- 0ms;
SELECT DISTINCT AVG((- (vt0.c0))) FROM v0 ORDER BY v0.c0, ((((((((((vt0.c0) IS TRUE))AND((((0.5450489528412817)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))OR((((v0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))))OR((vt1.c0 IN (vt1.c0)))))OR(((((v0.c0)AND(NULL)))AND(v0.c0)))) DESC;SELECT DISTINCT NTILE((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))) NOTNULL)) OVER ( GROUPS  UNBOUNDED PRECEDING), NULLIF((NOT (vt1.c0)), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))), CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN vt1.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END FROM vt1 WHERE ((((NOT (NULL)))%(x'' COLLATE BINARY)));SELECT (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)) IN ()), DENSE_RANK() OVER (), ((vt1.c0) NOTNULL) COLLATE NOCASE FROM v0 UNION ALL SELECT ALL ((ABS(DISTINCT vt1.c0))>(CAST(v0.c0 AS REAL))), (((v0.c0)>>(v0.c0)) IN ()), CAST(((vt0.c0)<>(vt0.c0)) AS BLOB) FROM v0 WHERE (SUBSTR(((NULL)/(0xf9fdb5b)), (((((((('0.36600038275703595')OR(NULL)))OR('-1812197249')))OR('~\ï¡ Kbrr')))AND('1401096907'))));SELECT ALL '-705774906' FROM v0, vt1, vt0 WHERE (CAST((('471953937') IS FALSE) AS REAL)); -- 0ms;
SELECT DISTINCT ((vt1.c0) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE, SQLITE_VERSION(), v0.c0 FROM v0, vt1, vt0 WHERE (((((((x'8f39')OR(0.03621821118174551)))OR('')))>(LOWER(0.1583800611719246)))) LIMIT 1306718222 OFFSET -407868544; -- 0ms;
SELECT DISTINCT COUNT(x'cc78c00c') FROM v0 WHERE ((((('2041289119')/(0.19802087426948356))) BETWEEN ((('-1694394688') IS TRUE)) AND (((-1085877137)&(-1758701957))))); -- 0ms;
SELECT DISTINCT v0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE, ((UPPER(DISTINCT vt1.c0))LIKE(IFNULL(vt0.c0, vt1.c0))), 0Xffffffffc130964f COLLATE RTRIM FROM vt0 WHERE ((((('543193197')>>(121937162))) ISNULL)) ORDER BY ((CAST(v0.c0 AS NUMERIC))<=(((((vt1.c0)AND(NULL)))OR(v0.c0)))) DESC  NULLS LAST, (((((((((((('m_')AND(vt1.c0)))OR(v0.c0)))AND((vt1.c0 IN ()))))OR(CAST(vt0.c0 AS BLOB))))AND(CAST('5p# ê³6c' AS TEXT))))AND(CAST(NULL AS TEXT)));SELECT vt0.c0 FROM v0;SELECT DISTINCT ((v0.c0)LIKE(GROUP_CONCAT(vt1.c0))) FROM vt0, vt1 WHERE ((((x'', NULL, x'')) NOT BETWEEN ((((((0.7404325020707208)OR(x'')))OR(0.40107165422696167)), ((NULL) BETWEEN ('23500524') AND ('+&)')), (('-994550603') BETWEEN ('') AND (x'3ba6')))) AND ((UPPER(DISTINCT NULL), (('') NOT BETWEEN ('-129532252') AND (0Xffffffff8948938e)), ((0.7776940665922113) IS TRUE)))));SELECT ALL ((((vt0.c0)||(v0.c0))) NOT BETWEEN ((v0.c0 IN (v0.c0))) AND (AVG(vt0.c0))) FROM vt1, vt0, v0; -- 0ms;
SELECT DISTINCT v0.c0, ((vt1.c0 COLLATE BINARY) NOT NULL), ((((((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)))AND(vt0.c0)))AND(x'')) FROM vt0, v0;SELECT DISTINCT (((((vt0.c0)||(vt1.c0))))>((((vt1.c0)IS(vt0.c0))))) FROM vt1 WHERE (((('U6' COLLATE BINARY))=(((((x'40c6')) BETWEEN ((x'')) AND ((0.7286329557208162)))))));SELECT ((vt0.c0 IN ()) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((0.06544160527032417)-(v0.c0)))), (~ ((NULL IN (vt0.c0)))), (+ (vt0.c0)) FROM vt1, v0, vt0; -- 0ms;
SELECT (((NULL IN ())) BETWEEN ((- (vt1.c0))) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt0 WHERE (json_array(((0.6576977754973403) BETWEEN (x'') AND (x'f12f')), ((NULL) NOT BETWEEN ('wL') AND ('-1154507745')), ((x'') NOT NULL), LIKELY(DISTINCT NULL)));SELECT ((((vt1.c0)<<(vt1.c0)))>(((v0.c0)|(vt0.c0)))) FROM v0, vt0;SELECT DISTINCT ((AVG(vt0.c0))*((v0.c0 IN ()))) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL -1353300688 FROM vt1, vt0, v0 WHERE (((((((((-1665733020 COLLATE RTRIM)AND(((((((((0.13572214927040038)AND(-995331688)))OR(NULL)))OR(0.24486744450618592)))AND(x'')))))OR(CAST(0.584866985829922 AS INTEGER))))AND(((((((((NULL)OR('0.24486744450618592')))AND(NULL)))AND(0x18634d5e)))OR(0.5350382863154488)))))AND(CASE NULL  WHEN x'' THEN x'' WHEN x'' THEN x'db27' WHEN x'' THEN 2129296850 END))) LIMIT -1858507601 OFFSET -1672295942; -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN (vt0.c0) AND (((vt0.c0) IS TRUE))) FROM v0, vt1 WHERE (CASE WHEN CASE 0X18de348e  WHEN '119004200' THEN x'' ELSE NULL END THEN 506672799 WHEN TRIM('0.575945511522042', '1706060510') THEN ((0.9636529220004575) IS TRUE) WHEN CAST(1285637812 AS REAL) THEN CAST('Z>ä¡' AS TEXT) END) LIMIT -1773137555 OFFSET 1216919427;SELECT DISTINCT ((((vt1.c0) ISNULL)) NOTNULL) FROM vt0, vt1, v0 WHERE ((((((NULL) NOT BETWEEN (NULL) AND ('0.6669428740289834'))))>=((x'681b861d')))); -- 1ms;
SELECT ALL CAST((v0.c0 IN ()) AS NUMERIC) FROM vt1 WHERE (CASE (((0.5720023699496443, 264048250, NULL)) BETWEEN ((NULL, '2/Næ¢·ïtu', x'')) AND ((NULL, '-547273931', '')))  WHEN 1e500 COLLATE BINARY THEN ((NULL) BETWEEN (0x7c521ac9) AND ('-1997327949')) END); -- 0ms;
SELECT DISTINCT NULL FROM v0, vt1, vt0 WHERE ((('-698555857') NOT BETWEEN (HEX(DISTINCT 0xffffffffd1ea0c98)) AND (NULL))); -- 0ms;
SELECT DISTINCT json_type(((((((((v0.c0)OR(vt1.c0)))OR(0.51954960499896)))AND(vt1.c0)))AND(vt1.c0))) FROM vt1 WHERE ((((0.5846869087180439)<>('')) IN ()));SELECT DISTINCT COUNT(CASE WHEN v0.c0 THEN vt0.c0 END) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, vt1;SELECT (- ((vt1.c0 IN (vt0.c0)))) FROM vt1, v0;SELECT ALL CAST((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0))) AS INTEGER) FROM vt1, vt0 WHERE (CAST('-2057046189' AS BLOB));SELECT ((((vt0.c0)<(vt0.c0))) IS FALSE) FROM v0, vt1 WHERE ((((((0x3ef63f33)) BETWEEN ((NULL)) AND ((-644803133))))&((('1396125399')>=('613944921')))));SELECT IFNULL(DISTINCT v0.c0, x'') COLLATE BINARY, v0.c0, CASE WHEN CASE vt1.c0  WHEN '' THEN vt1.c0 ELSE x'' END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt1.c0)&(vt1.c0)) THEN vt0.c0 COLLATE BINARY WHEN ((vt1.c0)OR(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN (('-1352208340')) AND ((v0.c0))) ELSE ((v0.c0)%(vt0.c0)) END FROM vt1, v0;SELECT DISTINCT CASE WHEN LIKELIHOOD(DISTINCT -1.834163572E9, 0.863954123837283) THEN CASE WHEN vt1.c0 THEN '^	>,(Z' ELSE v0.c0 END END FROM vt0, v0 WHERE ((((0.44436649023443475)-('-2092192336')) IN ((((0.6669428740289834))<((0.9210195508342808)))))) LIMIT -223852453 OFFSET -1395362505;SELECT ((LIKELIHOOD(x'', 0.060299334120948456)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (CAST(vt1.c0 AS INTEGER))), (+ (((((((((vt1.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))), ((((CAST(vt1.c0 AS REAL))OR(((v0.c0)OR(vt1.c0)))))AND(CASE WHEN 0X79cb0fb6 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c0 END)) FROM v0, vt0, vt1; -- 6ms;
SELECT ((CAST(vt0.c0 AS INTEGER)) NOTNULL) FROM v0, vt1, vt0 WHERE ((((('-1932463524') BETWEEN ('2001749184') AND ('977116197')))==(((NULL)IS NOT(-2092192336))))); -- 0ms;
SELECT (v0.c0 IN ()) FROM vt0, vt1, v0 GROUP BY NULLIF(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)), ((((vt1.c0)OR(vt0.c0)))AND(x''))) HAVING ((('')) NOT BETWEEN ((((((vt0.c0)OR('Ldxu|jB*O')))AND(vt1.c0)))) AND ((LIKELY(DISTINCT -454940517)))); -- 1ms;
SELECT DISTINCT LAG(CAST('-323463095' COLLATE BINARY AS REAL), (~ (((0.13104762150626648) IS FALSE))), CAST((vt0.c0 IN ()) AS REAL)) OVER () FROM vt1, v0, vt0 ORDER BY CASE ((v0.c0) BETWEEN ('1566876365') AND (vt0.c0))  WHEN ((vt0.c0)!=(vt0.c0)) THEN CAST(v0.c0 AS TEXT) WHEN vt1.c0 THEN vt0.c0 WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) END ASC LIMIT -1510302059; -- 0ms;
SELECT DISTINCT ABS(((vt0.c0)IS(vt0.c0))) FROM vt0 WHERE ((((- (NULL))) NOTNULL)); -- 0ms;
SELECT vt1.c0, CAST(((NULL)>(vt0.c0)) AS TEXT), v0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE FROM vt1, vt0, v0 WHERE ((((x'9156') NOT BETWEEN ('%KfZP%+') AND ('{æº}é¦')) IN ((((((((((((('1139747269')OR(x'a052')))AND(x'')))AND(x'8947')))OR(x'')))AND('C')))OR(x''))))) ORDER BY ((((((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((v0.c0 IN ()))))OR((vt1.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM)) DESC; -- 0ms;
SELECT DISTINCT MAX(CAST(vt1.c0 AS NUMERIC)) FROM vt1, v0 WHERE ((- ((x'ad58' IN ())))); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) ELSE (((1708167805))<=((v0.c0))) END, FIRST_VALUE((((vt1.c0))<=((v0.c0))) COLLATE RTRIM) OVER (), ((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)) COLLATE RTRIM, v0.c0, (((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))))>=(((v0.c0 IN (vt1.c0))))) FROM vt1, v0 WHERE (((((((NULL))<=((NULL)))))=((PRINTF(0.8561045663680896))))) INTERSECT SELECT ((((v0.c0) NOTNULL))-((('1277163459') NOT BETWEEN (v0.c0) AND (vt0.c0)))), CASE ((v0.c0) IS FALSE)  WHEN ((vt1.c0)%(vt1.c0)) THEN x'6df4' END, (+ (((v0.c0)<>(vt1.c0)))), ((((vt0.c0)<>(vt1.c0)))>>(((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))), ((CASE vt0.c0  WHEN v0.c0 THEN '' ELSE NULL END) BETWEEN (NULL COLLATE NOCASE) AND (CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1 GROUP BY ((((vt0.c0)IS NOT(vt0.c0)))||(vt0.c0));SELECT CAST(((vt0.c0)>=(vt1.c0)) AS INTEGER) FROM vt0, v0 WHERE ((((- (NULL)))>(CASE 0.03729853498997937  WHEN NULL THEN -4.56469885E8 END)));SELECT (((vt1.c0)) BETWEEN ((((vt0.c0)OR(v0.c0)))) AND ((MAX(vt1.c0)))) FROM vt0, vt1 GROUP BY (((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))))==((((v0.c0)=(vt1.c0)))));SELECT DISTINCT (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) IN ()) FROM v0, vt0, vt1 WHERE (((~ (x'82cc')) IN ())); -- 0ms;
SELECT (+ (((vt0.c0) NOT NULL))) FROM vt1, v0;SELECT ALL FIRST_VALUE(CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0) IS FALSE) THEN (v0.c0 IN ()) WHEN CAST(v0.c0 AS REAL) THEN v0.c0 WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN '-1255407501' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) END) OVER (), (v0.c0 IN ()), SUM(((vt1.c0) NOTNULL)) OVER () FROM v0 GROUP BY CAST((('145398901') BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB);SELECT TOTAL(x'') OVER () FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT (+ ('-248599903')) FROM v0, vt1 WHERE ((+ ('206809331' COLLATE RTRIM))) LIMIT -1199883254; -- 0ms;
SELECT DISTINCT (~ (((v0.c0) IS TRUE))) FROM vt1, v0; -- 0ms;
SELECT ALL TOTAL(CASE vt1.c0  WHEN 0.5220333872127181 THEN vt1.c0 WHEN v0.c0 THEN x'e576' WHEN vt1.c0 THEN vt0.c0 END) OVER () FROM v0, vt1 GROUP BY ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)OR(((vt0.c0) NOT BETWEEN (1277163459) AND (vt0.c0)))))OR(vt1.c0)))AND(((((vt0.c0)OR(vt1.c0)))OR(x'')))))OR((~ (vt0.c0))));SELECT DISTINCT CASE ((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN CAST(v0.c0 AS NUMERIC) END, (~ ('2011482305')), (((NOT (vt1.c0)))IS NOT(((vt1.c0)<(vt1.c0)))) FROM vt1, vt0 WHERE (LIKELIHOOD(DISTINCT ((0Xffffffff85d55710)-(x'')), 0.5496255065011952));SELECT ((((((vt0.c0)<<(vt1.c0)))OR(CAST(-1600194469 AS TEXT))))OR(((vt0.c0) NOT NULL))) FROM v0 NOT INDEXED, vt1, vt0; -- 1ms;
SELECT DISTINCT (((v0.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((1.993043427E9))) FROM vt1 WHERE ((((-284965519)) NOT BETWEEN ((0.7125751742475662)) AND ((0.41464440558533644))) COLLATE NOCASE) LIMIT 1702923202 OFFSET -1220772184;SELECT DISTINCT (((((v0.c0)|(vt0.c0)), (vt1.c0 IN ()), CAST(vt1.c0 AS NUMERIC)))>((json_array(vt1.c0, vt1.c0), (- (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0))))), NULL, ((((vt0.c0)IS(vt1.c0)))-(LIKELY(vt0.c0))) FROM vt1, vt0 WHERE ((CASE WHEN '-506521292' THEN 0.4371365810378668 WHEN 0x3ba267ed THEN 'vèª°î!T\	zA' WHEN 0X304a0f THEN x'77a4' WHEN '!b' THEN x'' WHEN x'' THEN '520779676' END IN ()));SELECT DISTINCT ((COUNT(*))|((vt1.c0 IN ()))), (((x'345a' IN ())) NOTNULL), v0.c0 FROM vt0 WHERE ((((0.49698241825755485)) BETWEEN ((((x'') IS TRUE))) AND ((LOWER(x'')))));SELECT v0.c0, (('0.7777484956733853') BETWEEN (TRIM(DISTINCT vt1.c0)) AND (CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 END)), ('942140775' IN ()) FROM v0;SELECT ALL (((v0.c0 IN ()))>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), ((((v0.c0)<=(vt1.c0)))IS NOT(vt1.c0 COLLATE NOCASE)), vt1.c0, (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((0.37802761503833926))), 0.15255193590989158 FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT ((3.2915017E8) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, ((vt1.c0 COLLATE BINARY)>(vt1.c0)), ((AVG(x'12dc'))LIKE(SUM(vt1.c0))) FROM v0 WHERE ((((((('éL+\rZqq')AND(NULL)))AND(NULL))) BETWEEN ((((x''))<((x'41f7')))) AND (CAST(NULL AS TEXT)))) LIMIT 1447485927 OFFSET 720656754;SELECT ALL '1072456292' FROM v0, vt1 WHERE (CASE WHEN (NULL IN ('')) THEN CAST(NULL AS REAL) ELSE ((NULL)IS NOT('-1681606613')) END); -- 0ms;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (x'453e'); -- 0ms;
SELECT AVG(((vt0.c0) IS FALSE)) OVER () FROM vt1;SELECT ALL (((vt1.c0 IN ())) IS TRUE), ((((((vt0.c0)|(vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))AND(((vt0.c0) IS TRUE))), TOTAL(((('\rGS0'))<((v0.c0)))) FROM v0, vt0;SELECT ALL MAX(CAST(vt0.c0 AS REAL)) FROM v0, vt0, vt1; -- 0ms;
SELECT ALL (v0.c0 IN ()) COLLATE NOCASE FROM vt0, vt1, v0 WHERE (((((((x'')OR(0.6164600182531961)))OR(1.703678238E9)))%((NULL IN ())))); -- 0ms;
SELECT DISTINCT MIN(vt1.c0) FROM vt1, v0 WHERE (CAST(((NULL) IS FALSE) AS TEXT)); -- 0ms;
SELECT DISTINCT ((vt1.c0)|(((vt1.c0)>>(vt1.c0)))), (~ (((v0.c0)+(vt0.c0)))), 0.7087755764421076, (((- (vt0.c0)))GLOB((((vt0.c0))<((vt0.c0))))), -1968837279 FROM vt0 WHERE (MAX(((x'')!=(0.4158495605301691)), ((0.40054103426662635)<>(NULL)), ((NULL)OR('-422005045')), ((((x'7b92623f')AND('-1050327376')))AND('*Xqa[c+~j'))));SELECT DISTINCT CASE (v0.c0 IN ())  WHEN ((vt1.c0) NOT NULL) THEN ((v0.c0)>=(v0.c0)) WHEN vt1.c0 THEN v0.c0 COLLATE RTRIM WHEN (v0.c0 IN ()) THEN SUM(v0.c0) ELSE TOTAL(vt1.c0) END FROM v0 WHERE ((NOT (NULL)) COLLATE NOCASE);SELECT ((json_extract(vt1.c0, vt0.c0, vt1.c0, v0.c0)) BETWEEN (v0.c0 COLLATE NOCASE) AND (((vt1.c0)>>(v0.c0)))) FROM vt0, vt1 NOT INDEXED, v0 GROUP BY vt0.c0; -- 0ms;
SELECT 0.8473357959705423 FROM v0, vt1; -- 0ms;
SELECT DISTINCT '-506521292', (- (AVG(vt0.c0))), ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(INSTR(v0.c0, vt1.c0))))OR(x'')))OR(AVG(vt0.c0))))AND((0.3447517784718297 IN ()))), ((CASE 0.65186236144509  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)%(CAST(vt1.c0 AS TEXT))), LIKELY(((v0.c0) ISNULL)) FROM vt1 GROUP BY (((~ (v0.c0)))!=(vt1.c0)) HAVING CASE WHEN ROUND(vt0.c0, vt0.c0) THEN vt1.c0 END;SELECT MAX(((487727724) NOT BETWEEN (vt0.c0) AND (vt1.c0)), x'a79a') FROM vt1, v0 ORDER BY ((((vt0.c0) IS FALSE)) NOT NULL) DESC  NULLS FIRST;SELECT ((CASE WHEN v0.c0 THEN vt1.c0 END)GLOB((v0.c0 IN ()))), MIN(NULL), (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) COLLATE BINARY FROM v0, vt0 WHERE (CASE WHEN ((((x'e601')OR('')))AND('-1053783192')) THEN (NOT (0.4580455441254807)) ELSE x'' END);SELECT DISTINCT SUM(((vt1.c0)<(vt0.c0))), (((vt1.c0 IN ())) NOT BETWEEN (json_array_length(vt0.c0)) AND (CAST(NULL AS TEXT))), CAST((- (0.9613994951880567)) AS TEXT), CAST(x'' AS REAL), ((((vt0.c0))!=((vt0.c0))) IN ()) FROM vt0, v0 GROUP BY vt1.c0;SELECT DISTINCT ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))!=((~ (vt1.c0)))) FROM v0, vt0, vt1 WHERE (CAST(((0.6040850211500844)IS(NULL)) AS NUMERIC)) GROUP BY (((((vt0.c0)) BETWEEN ((x'')) AND ((v0.c0)))) ISNULL); -- 0ms;
SELECT v0.c0 FROM vt1, v0 WHERE (0.51954960499896 COLLATE RTRIM); -- 0ms;
SELECT ALL (((((vt1.c0)|(vt0.c0))))>((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))) FROM v0;SELECT DISTINCT ((((+ ('')), (((0x0)) BETWEEN ((v0.c0)) AND ((vt1.c0))), ((vt1.c0)<<(0.7156137334791047))))>((LIKELIHOOD(vt0.c0, 0.6639947641256838), (+ ('5W*')), SUM(vt1.c0)))) FROM vt0, vt1 WHERE ((((((x'5e7a', '', x'')) NOT BETWEEN (('1566876365', '<', x'')) AND ((0.13572214927040038, '244175913', 0.19582134457426892)))) IS TRUE));SELECT DISTINCT CAST(((((((((vt1.c0)AND(v0.c0)))AND(0x353c5574)))AND(vt0.c0)))AND(vt1.c0)) AS BLOB) FROM v0, vt0, vt1 WHERE ((((('292151149') IS FALSE)) BETWEEN (CASE WHEN NULL THEN '0.22751235080790122' WHEN x'f14c' THEN '0.03729853498997937' WHEN -850789478 THEN NULL ELSE x'35a4' END) AND (LIKELIHOOD(0xffffffffbaf8ab0c, 0.3694412650083724)))); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))) OVER (), DENSE_RANK() OVER (), (- ((NOT (vt1.c0)))) FROM vt1, vt0, v0 WHERE (((((0.8472904171587183)IS(0.4518404823230594)))&((('34299290') BETWEEN (0.13522936394467) AND ('|å¢g/U+GX'))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, v0, vt0 WHERE (((((((((((0.5353905870718015)AND(NULL)))OR(0x2e3fb1d2)))AND('-873996379')))OR(x'258d'))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt1.c0)=(v0.c0))))), COUNT((v0.c0 IN (vt1.c0, vt1.c0))) OVER (), ((v0.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (x'') AND (vt0.c0))) AND (((v0.c0)<<(v0.c0)))) FROM vt0, v0 WHERE (CAST(x'' AS REAL) COLLATE RTRIM);SELECT (((+ (vt1.c0)))!=(json(vt0.c0))), GROUP_CONCAT((((vt0.c0, vt1.c0, v0.c0))<((vt0.c0, 0xffffffff88451620, v0.c0)))) OVER (), CASE ''  WHEN vt0.c0 COLLATE NOCASE THEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((NULL, v0.c0, vt1.c0))) ELSE ((vt0.c0)>(vt0.c0)) END FROM v0, vt1 WHERE (((('', x'', 0.8077421045106605)) NOT BETWEEN (('ç¡­a', (NOT ('')), (((''))>=((x''))))) AND ((((x'') ISNULL), (~ (0.3074692442151977)), ((x'5e6e')|(x''))))));SELECT (vt0.c0 IN ((('éL+\rZqq') BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT CAST(vt1.c0 AS TEXT) COLLATE RTRIM, (+ ((((('-885010192')AND(vt0.c0)))AND(vt1.c0)))), (((((NULL) IS FALSE)))==((v0.c0))) FROM vt0, vt1, v0; -- 0ms;
SELECT (((v0.c0, vt0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, (- (vt0.c0)))) AND ((((v0.c0)OR(v0.c0)), (v0.c0 IN (v0.c0)), CASE vt1.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt1, v0, vt0; -- 0ms;
SELECT CAST(SUM(vt0.c0) AS NUMERIC) FROM v0 GROUP BY ((((COALESCE(NULL, vt1.c0, vt1.c0, vt0.c0))OR(vt1.c0)))OR(CAST(vt0.c0 AS TEXT))), ((((vt1.c0)IS NOT(v0.c0)))==(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(vt1.c0 AS NUMERIC) COLLATE BINARY HAVING (((v0.c0 IN ())) BETWEEN ((NOT (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (x''))));SELECT DISTINCT GROUP_CONCAT((vt1.c0 IN ())), (((SQLITE_SOURCE_ID()))!=((((vt1.c0)<(vt0.c0))))), LIKELY(vt1.c0) FROM vt1 WHERE (CASE WHEN ((-3.49091206E8) NOT BETWEEN ('') AND ('')) THEN 'Xhî¢H' COLLATE RTRIM ELSE (0xffffffff917c3aaf IN ()) END);SELECT ALL ((vt0.c0)GLOB(NULL)) COLLATE BINARY FROM vt1;SELECT DISTINCT DENSE_RANK() OVER (), NULL, ((COUNT(*)) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (CASE vt0.c0  WHEN v0.c0 THEN 0.45754706903648923 END)), load_extension(vt0.c0) COLLATE NOCASE, ((((NOT (vt0.c0))))<>((MAX(vt0.c0)))) FROM vt0, vt1 WHERE ((((((0.20484076154561737))<=((x''))))IS((x'' IN ()))));SELECT DISTINCT CASE WHEN ((v0.c0) IS TRUE) THEN (((vt0.c0))<((vt0.c0))) ELSE (NOT (vt0.c0)) END FROM vt0, vt1, v0; -- 0ms;
SELECT CASE WHEN ((vt0.c0)<(vt1.c0)) THEN (vt1.c0 IN (vt0.c0, x'')) WHEN CAST(vt1.c0 AS TEXT) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) WHEN AVG(0.3907661280316759) THEN STRFTIME(vt0.c0, x'', v0.c0) WHEN ((vt1.c0)<=(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt1.c0))>=((vt1.c0, v0.c0, vt1.c0))) WHEN COUNT(*) THEN ((549556686) NOT BETWEEN (vt0.c0) AND (v0.c0)) END FROM vt0, vt1 WHERE (((('1682576983')) BETWEEN (((~ (0.418817031152972)))) AND ((((NULL)<=('0.6452910110223322'))))));SELECT ALL ((x'')GLOB(((vt1.c0)AND(vt0.c0)))) FROM v0, vt0 WHERE ((((x'') ISNULL) IN ()));SELECT ALL CAST(vt0.c0 AS BLOB) FROM vt1, v0, vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))AND('~\ï¡ Kbrr')))OR(vt0.c0))), ((- (vt1.c0)) IN (x'd95e')), vt0.c0, CASE v0.c0 COLLATE NOCASE  WHEN ((vt1.c0)<<(-1709259765)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)OR(x'46d5')) THEN x'' WHEN UNLIKELY(DISTINCT vt1.c0) THEN LIKELIHOOD(0X3f1d14f2, 0.731443113136006) ELSE CAST(vt1.c0 AS TEXT) END, LEAD((~ ((((((((('él+\rzqq')AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))), (v0.c0 IN ()) COLLATE RTRIM, vt0.c0) OVER () FROM vt0, vt1, v0 GROUP BY v0.c0 HAVING CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS INTEGER); -- 0ms;
SELECT DISTINCT vt0.c0, (NULL IN ()) COLLATE BINARY, NULL FROM v0 WHERE (((((1.244265004E9)AND(CAST(0.7819590176653781 AS BLOB))))AND(NULLIF('|å¢g/u+gx', NULL))));SELECT DISTINCT '#', 0.9379954623331223, (~ (6.00476853E8)) COLLATE BINARY FROM vt1 WHERE ((((-1814854242, '-1021089741', 0.7694559122019752)) BETWEEN ((x'', x'', 0Xffffffff859eba13)) AND ((x'', 0.034615587299280604, x'3dda'))) COLLATE RTRIM) ORDER BY ((((0.45622940105759013)AND(((v0.c0)-(vt0.c0)))))AND(CAST(vt0.c0 AS TEXT)));SELECT DISTINCT ((((((((vt1.c0)AND('-537012893')))AND(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(((vt1.c0)AND(vt0.c0)))) FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt1.c0))|(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))), TYPEOF(DISTINCT ((v0.c0) BETWEEN (NULL) AND (vt1.c0))), vt1.c0 FROM v0, vt1, vt0; -- 0ms;
SELECT ((TRIM(vt0.c0, vt1.c0)) IS FALSE), (+ (vt0.c0)) COLLATE RTRIM, ((COUNT(*)) ISNULL) FROM vt0 WHERE ((((x'81e6') NOTNULL) IN ()));SELECT ((vt0.c0) NOTNULL) COLLATE BINARY, ((((((v0.c0)AND(v0.c0)))OR(vt0.c0))) NOTNULL), CASE '-x1a'  WHEN vt1.c0 THEN vt0.c0 ELSE x'' END COLLATE BINARY, (- (TOTAL(vt1.c0))), (((('1487251083')/(0.31372604303468543)))IS(NULL)) FROM vt1;SELECT DISTINCT ((((COUNT(*))OR(CAST(vt1.c0 AS BLOB))))AND(CAST(vt0.c0 AS TEXT))) FROM vt0, vt1 WHERE ((((SQLITE_COMPILEOPTION_USED(x''), (~ (NULL)), ('-2007712586' IN ())))<=((CASE 0.500634616030569  WHEN '1396125399' THEN 0X5eaa78e9 WHEN 0.41875299761745977 THEN NULL WHEN NULL THEN 0.8508026970723234 ELSE 0.3268331931724121 END, (('')IS NOT('244175913')), CAST(NULL AS INTEGER))))); -- 1ms;
SELECT DISTINCT ((CAST('-459022133' AS REAL)) NOT NULL) FROM vt1, vt0, v0; -- 0ms;
SELECT ((COUNT(*))%((~ (vt0.c0)))) FROM vt1 WHERE (CAST(NULL COLLATE RTRIM AS INTEGER)) ORDER BY (((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0)LIKE(vt1.c0)))) DESC  NULLS FIRST LIMIT -1441493062 OFFSET 1017800308;SELECT GROUP_CONCAT(((vt0.c0)GLOB(v0.c0)) COLLATE NOCASE), SUM((vt1.c0 IN (vt0.c0))) OVER (), AVG(MIN(((vt0.c0)>=(v0.c0)))) FROM v0, vt0;SELECT ALL CASE WHEN vt0.c0 THEN '-1833887647' END COLLATE RTRIM FROM v0, vt0, vt1; -- 2ms;
SELECT DISTINCT (x'' IN ((+ (vt0.c0)))) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((ABS(DISTINCT vt0.c0)))) FROM vt1;SELECT DISTINCT ((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END)AND(((v0.c0)!=(vt1.c0)))))OR(MIN(vt1.c0))), CASE WHEN ((v0.c0) BETWEEN (vt1.c0) AND (0.2015974551810844)) THEN (vt0.c0 IN ()) ELSE SUM(vt0.c0) END, 0.9180913980708747 FROM v0, vt1 WHERE ((NOT (0.9104415323242567 COLLATE RTRIM))) ORDER BY vt0.c0 DESC;SELECT DISTINCT ((((((vt0.c0) IS TRUE))OR(NULL)))AND(((vt0.c0) NOTNULL))) FROM vt0, vt1, v0 WHERE ((((+ ('-159580971'))) NOT BETWEEN (IFNULL(DISTINCT 0.24830772527375367, '0.44436649023443475')) AND (x'1c5c' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT '\nm6n[à»­', (NOT (((((vt0.c0)OR(vt1.c0)))OR(0.708322403547854)))), CAST((NOT (NULL)) AS NUMERIC) FROM v0, vt1 WHERE (CAST(x'' AS BLOB) COLLATE BINARY);SELECT DISTINCT ((((v0.c0)OR(vt1.c0)))OR(vt0.c0)) COLLATE RTRIM, (((v0.c0, x'', '555361578')) BETWEEN ((((vt1.c0)IS NOT(v0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)), (((''))<((vt0.c0))))) AND ((((v0.c0)AND(v0.c0)), CAST(v0.c0 AS TEXT), SUM(vt0.c0)))), ((vt0.c0) NOTNULL) COLLATE RTRIM FROM vt0, v0, vt1; -- 0ms;
SELECT DISTINCT ((((v0.c0) IS TRUE))%(load_extension(vt1.c0, vt1.c0))) FROM vt0;SELECT 'B-' FROM vt1, vt0 WHERE (((x'f0cb') IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT TOTAL(CAST(vt1.c0 AS NUMERIC)) FROM v0, vt1, vt0 WHERE (IFNULL((((1216919427, x'5cc2', NULL)) NOT BETWEEN (('[]', 290790956, 0.831036751174873)) AND ((x'', NULL, x'3497'))), 0.925540185733922)); -- 0ms;
SELECT ALL ((((vt1.c0)|(v0.c0))) ISNULL), CAST(v0.c0 AS NUMERIC), SUM(CAST(1.708167805E9 AS REAL)) OVER () FROM vt1;SELECT (((((vt1.c0 IN ()))AND((- (vt1.c0)))))OR(SUM(v0.c0))), ((CAST(v0.c0 AS INTEGER))LIKE(COUNT(vt1.c0))), ((((((((LIKELIHOOD(v0.c0, 0.23356531949344927))OR(vt0.c0 COLLATE NOCASE)))AND(((v0.c0)IS NOT(v0.c0)))))OR(LIKELIHOOD(v0.c0, 0.8821092534675756))))OR((+ (vt0.c0)))) FROM vt1;SELECT DISTINCT ((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>((- (v0.c0)))) FROM v0;SELECT DISTINCT (((TOTAL('109462187')))<=((rtreenode(v0.c0, vt1.c0)))) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL ((CASE v0.c0  WHEN x'' THEN v0.c0 ELSE vt0.c0 END)>>(vt1.c0)) FROM vt0, v0, vt1 WHERE (CASE (+ (0X1f8ea2b8))  WHEN x'' THEN (('-754252352')OR(x'')) END); -- 0ms;
SELECT ((LIKE(vt0.c0, vt0.c0))|(((v0.c0)=(vt1.c0)))) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL ((v0.c0)<=(vt0.c0)) COLLATE NOCASE COLLATE RTRIM, '', (- (((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) FROM vt0 WHERE (((UPPER(1219575797))&(((x'be07')<>(1370063531)))));SELECT ALL NTH_VALUE((((vt0.c0 IN ())) ISNULL), ((((vt0.c0)%(vt0.c0))) NOTNULL)) OVER () FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c0, MAX((+ (v0.c0))), ((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END)<<(((vt1.c0)+(vt1.c0)))) FROM vt1, v0 WHERE ((1505435145 COLLATE NOCASE IN ()));SELECT ALL ((((v0.c0) IS TRUE)) NOTNULL) FROM v0, vt1; -- 0ms;
SELECT CASE WHEN MAX(NULL) THEN (v0.c0 IN ()) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN NULL WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) THEN vt1.c0 COLLATE BINARY ELSE GROUP_CONCAT(vt0.c0) END FROM v0, vt0, vt1 WHERE ('1588230377' COLLATE BINARY) GROUP BY CAST(((vt0.c0)IS(0.6157843248841584)) AS NUMERIC); -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN (((vt1.c0 IN (vt0.c0, vt0.c0)))) AND ((((vt1.c0)>=(vt1.c0))))), (v0.c0 IN ()) COLLATE NOCASE, ((((((((((vt1.c0)AND(vt0.c0)))AND(((vt1.c0)!=(vt1.c0)))))OR((+ (v0.c0)))))AND(LIKELIHOOD(vt1.c0, 0.8652739207625556))))AND((vt0.c0 IN ()))) FROM v0 WHERE (CAST(CAST(-1.739081083E9 AS TEXT) AS INTEGER)) LIMIT -274549228;SELECT ALL ((LTRIM(vt1.c0)) NOTNULL) FROM vt1 GROUP BY UPPER(0Xffffffffc149ccbf) HAVING ((((((((((vt1.c0)OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0))) IS TRUE);SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) FROM vt0, vt1, v0 ORDER BY vt0.c0 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE ((vt1.c0)*(vt0.c0))  WHEN (((vt1.c0)) BETWEEN ((NULL)) AND ((v0.c0))) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, v0.c0, vt0.c0))) WHEN (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, v0.c0))) THEN ((']R')GLOB(vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN -3.6536003E7 WHEN ((v0.c0)OR(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 COLLATE BINARY END, COUNT(*), ((vt1.c0)+(v0.c0)) COLLATE BINARY, (- (v0.c0)) COLLATE BINARY, COUNT(*) OVER ( ORDER BY CAST((- (v0.c0)) AS REAL) ASC) FROM vt0, vt1, v0 WHERE (CHANGES()); -- 0ms;
SELECT ALL TOTAL(NULLIF(vt0.c0, v0.c0) COLLATE NOCASE) OVER () FROM v0 WHERE ((((('-1920386101') NOT NULL)) IS TRUE));SELECT ALL (NOT (x'')), CAST(((((vt1.c0)AND(vt0.c0)))AND('-1867604266')) AS REAL), ((((v0.c0)>=(vt0.c0)))==((((vt1.c0))!=((vt0.c0))))), CASE WHEN (((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (((v0.c0, v0.c0, vt1.c0))!=((v0.c0, vt0.c0, v0.c0))) WHEN (vt1.c0 IN (vt0.c0, x'')) THEN ((v0.c0) NOT NULL) WHEN GROUP_CONCAT(vt0.c0) THEN AVG(vt0.c0) WHEN (- (vt0.c0)) THEN TYPEOF(vt1.c0) WHEN ((((vt1.c0)OR(v0.c0)))AND(v0.c0)) THEN v0.c0 END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY FROM v0 WHERE (CASE WHEN (x'04e3' IN (NULL)) THEN (('-2092192336')||('-1330209277')) WHEN COALESCE('1871227197', 0.22535506922923132, 'ë²8ÞgR6&{a', NULL) THEN NULL WHEN (((0.8998401073239903)) BETWEEN (('1799264745')) AND (('(4á½<0|'))) THEN ((NULL) ISNULL) ELSE ((((((((0.3532859463800818)OR(x'e83c')))OR(5.80736836E8)))OR(0X4a29fa2c)))AND(0.4164413019781541)) END);SELECT DISTINCT ((GLOB(v0.c0, vt0.c0)) IS FALSE) FROM v0, vt1 WHERE (((1.703678238E9)!=(((-456469885) BETWEEN (-2046230223) AND (NULL)))));SELECT DISTINCT ((((x'') IS FALSE))<=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM v0, vt1, vt0 WHERE (HEX(CAST(NULL AS BLOB))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0;SELECT ALL (NOT (TRIM(v0.c0, vt1.c0))) FROM vt1;SELECT ALL (((v0.c0)OR(vt0.c0)) IN ()), ((UPPER(DISTINCT v0.c0))<<((NULL IN ()))), (((vt1.c0)) BETWEEN ((v0.c0)) AND ((((vt0.c0)/(vt0.c0))))) FROM v0, vt0 WHERE (1.396125399E9);SELECT ALL ((((vt1.c0)||(v0.c0)))%((+ (vt0.c0)))) FROM vt0 GROUP BY vt0.c0;SELECT ((v0.c0) NOTNULL) FROM vt0, v0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC))/((~ ('u#')))) FROM vt0 WHERE (((((((0.18594837993554925)OR('%s')))AND(0.32932507870124983))) NOT BETWEEN ((((('')OR('8')))AND(0.40730202305671714))) AND (((0xffffffff9417df69) BETWEEN ('2001749184') AND (x'59a5'))))); -- 0ms;
SELECT DISTINCT CASE ((((vt1.c0)OR(v0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN json_type(v0.c0) END, ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(CAST(vt0.c0 AS INTEGER))))AND(((v0.c0) NOT NULL))), ((((vt1.c0)>(vt0.c0))) IS TRUE) FROM vt0, vt1 WHERE (((x'')%(CASE WHEN 0.6255766530138104 THEN 0.3277086782205164 END)));SELECT GROUP_CONCAT(CHANGES()), ((COUNT(*))IS NOT(vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((LIKE(vt0.c0, v0.c0), ((v0.c0)LIKE(v0.c0)), vt1.c0)) AND ((CASE vt1.c0  WHEN v0.c0 THEN NULL ELSE vt1.c0 END, x'7d5e', vt0.c0 COLLATE NOCASE))) FROM v0, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 COLLATE BINARY AS NUMERIC) FROM vt0, v0, vt1 WHERE ((((((((((((((('-991556718') NOT BETWEEN ('') AND (0x25e9b63a)))AND(UNLIKELY(NULL))))OR(0x1ce5c7c9)))OR((((NULL)) BETWEEN (('17701139')) AND ((x''))))))OR(((NULL)IS('\gu')))))AND(((x'e8b9')>=('nsUé­/')))))AND(NULL))); -- 1ms;
SELECT DISTINCT (((- (v0.c0))) BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c0 ELSE '-1836650046' END) AND (CAST(v0.c0 AS TEXT))) FROM vt0, v0 WHERE (((UPPER(DISTINCT '-2026180496')) NOT BETWEEN ((- (0.41195434149890653))) AND (NULL)));SELECT ALL 811928547, IFNULL(((vt1.c0) NOTNULL), SUM(vt0.c0)), ((vt0.c0)||(vt1.c0)) COLLATE RTRIM FROM vt1, vt0, v0 GROUP BY (((((vt1.c0) BETWEEN (v0.c0) AND ('-1633271077'))))!=(((v0.c0 IN ())))); -- 1ms;
SELECT DISTINCT ((((vt1.c0)>=(vt1.c0)))IS NOT(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) FROM vt0, vt1 WHERE (((((((((((((((0.1193884688559067)OR('*Wv4S56')))AND(0.3944091433285587)))OR(0.37802761503833926)))OR(x'f7e0')))AND('')))OR('0.5226867276438208')))LIKE(CAST(0.935177340995711 AS BLOB))));SELECT DISTINCT (((NOT (vt1.c0)))%(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) FROM vt0;SELECT DISTINCT ((CAST(v0.c0 AS BLOB))>=(380572678)) FROM vt1, v0, vt0 WHERE (CAST(CAST(0.22751235080790122 AS BLOB) AS TEXT)) ORDER BY vt0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE SQLITE_COMPILEOPTION_USED(vt1.c0)  WHEN (((v0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN ((vt0.c0) NOTNULL) END, (((((NULL))==((vt1.c0))))<=(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))), ((((vt0.c0)<(vt1.c0))) IS TRUE), CASE WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0) NOTNULL) END, (((vt0.c0 IN ())) IS FALSE) FROM vt0, vt1;SELECT DISTINCT (NOT (v0.c0 COLLATE NOCASE)) FROM vt0;SELECT DISTINCT AVG(CAST(vt1.c0 AS NUMERIC)) FROM vt1, v0, vt0 WHERE ((- (((x'') BETWEEN (x'') AND (-705774906))))); -- 0ms;
SELECT ALL NULL FROM vt1, v0 WHERE ((((x'ca1d', NULL, NULL))>((x'351e', NULL, x'fb51'))) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT ((((v0.c0)AND(v0.c0)))AND(vt0.c0)) COLLATE NOCASE, (((((vt0.c0)) NOT BETWEEN ((0.14314206095681614)) AND ((vt0.c0))))AND((v0.c0 IN ()))), (COUNT(vt1.c0) IN ((((v0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt1.c0, vt0.c0))))) FROM vt1, v0, vt0; -- 0ms;
SELECT COUNT(CAST(vt0.c0 AS INTEGER)) FILTER(WHERE (((- (v0.c0)))GLOB((NOT (vt0.c0))))) OVER (), CASE (NOT (vt1.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((((v0.c0)AND(vt1.c0)))AND(vt0.c0)) END, vt1.c0 FROM vt0 CROSS JOIN v0 ON ((json_patch(vt0.c0, vt0.c0)) NOT BETWEEN (((vt1.c0)==('1216919427'))) AND (((((vt1.c0)OR('')))AND(vt0.c0)))) CROSS JOIN vt1 ON ((((vt1.c0)OR(((vt0.c0)OR(vt1.c0)))))OR(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))) ORDER BY UNICODE(SQLITE_COMPILEOPTION_USED(vt0.c0))  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG(NULL COLLATE RTRIM) OVER () FROM vt0, vt1 WHERE ((x'' IN ('')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 END IN ()) FROM vt0, vt1, v0 WHERE (((NULL) NOT NULL)) GROUP BY (v0.c0 IN (vt1.c0)) COLLATE NOCASE, (((- (vt0.c0))) BETWEEN ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((6.00476853E8)%(vt0.c0)))), (((vt1.c0)>=(v0.c0)) IN ()) HAVING vt0.c0; -- 0ms;
SELECT (vt1.c0 IN ()) FROM v0, vt1; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM v0; -- 0ms;
SELECT DISTINCT ((((((v0.c0)AND(vt1.c0)))OR(v0.c0))) BETWEEN (vt0.c0) AND (vt1.c0)) FROM vt1 WHERE (((((((0X5bad64c7)OR(-245822641)))OR('')))>=(-387161923 COLLATE RTRIM)));SELECT ALL (vt1.c0 IN (((((vt1.c0)OR(vt0.c0)))AND(v0.c0)))), CASE ((v0.c0) IS TRUE)  WHEN ((vt0.c0)!=(vt0.c0)) THEN x'' END, (CASE -3.6536003E7  WHEN vt1.c0 THEN v0.c0 END IN ()) FROM v0, vt0, vt1 WHERE ((~ (((NULL)||(-1509743413))))); -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) FROM vt1, vt0;SELECT ALL 0.18911172099087237 COLLATE BINARY, NULLIF((0x5d64a2cd IN (vt1.c0)), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))), json_quote(json_valid(NULL)) FROM vt0 WHERE ((((((0xffffffff9f24e3d8)) BETWEEN ((-101304885)) AND ((NULL))))&((('') IS TRUE))));SELECT vt0.c0 FROM vt1;SELECT DISTINCT (((((((((((('-1683661762')AND(((v0.c0)LIKE(vt1.c0)))))AND(SQLITE_COMPILEOPTION_USED(v0.c0))))OR(((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(COUNT(vt1.c0))))AND(CASE vt0.c0  WHEN v0.c0 THEN 0Xffffffffa60324cb END)))AND((((v0.c0, vt0.c0, NULL))>((vt0.c0, 0Xffffffffbc7a6b74, v0.c0))))) FROM vt0, vt1, v0 GROUP BY x'', CASE WHEN CAST(vt0.c0 AS REAL) THEN (v0.c0 IN (vt0.c0)) ELSE (((vt1.c0))<>((vt0.c0))) END, CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS BLOB) HAVING ((((vt0.c0)<=(v0.c0)))|(CASE WHEN vt0.c0 THEN 0.7969798604402814 WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END)); -- 0ms;
SELECT ((NOT (vt0.c0)) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT (- (((vt1.c0) NOT BETWEEN (vt1.c0) AND ('K(t*%ï¼g5|')))), (((vt1.c0) BETWEEN (vt1.c0) AND ('7N')) IN ()), (NOT (v0.c0)) FROM vt0 GROUP BY 0Xffffffffca1d1853 HAVING vt0.c0;SELECT DISTINCT LIKELY(vt0.c0 COLLATE BINARY) FROM v0 WHERE ((('{}') BETWEEN ('-481269985') AND (x'')) COLLATE NOCASE);SELECT ALL ((vt1.c0 COLLATE RTRIM) BETWEEN ((NOT (vt0.c0))) AND (NULL)) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT 0xffffffff98af5089 FROM vt1; -- 0ms;
SELECT ALL ((COUNT(*)) IS TRUE) FROM v0 WHERE (((((((0.8197723195972892))<=(('')))))<(((~ (NULL)))))) ORDER BY CASE v0.c0  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END;SELECT ((TOTAL(vt1.c0))*(((NULL) NOT NULL))) FROM v0, vt0 WHERE (0.6616099074619346 COLLATE BINARY) LIMIT -1166449412;SELECT DISTINCT (vt0.c0 IN ()), CAST(NULL AS REAL), ABS(DISTINCT ((((NULL)AND(v0.c0)))OR(vt1.c0))) FROM v0, vt1; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS REAL) FROM v0; -- 0ms;
SELECT vt1.c0 FROM v0, vt0;SELECT ((COUNT(vt1.c0)) BETWEEN (((vt1.c0)GLOB(vt0.c0))) AND (((vt0.c0)%(vt0.c0)))), (((~ (vt0.c0)))AND(v0.c0)), CAST((vt1.c0 IN ()) AS INTEGER) FROM vt1, vt0;SELECT ALL CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END THEN AVG(vt1.c0) END FROM v0, vt1 GROUP BY ((MIN(v0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (-1071980659));SELECT DISTINCT ((vt1.c0)|(x'')) COLLATE NOCASE, NTILE(CASE WHEN LOWER(v0.c0) THEN v0.c0 ELSE ((v0.c0) ISNULL) END) OVER (), SQLITE_VERSION() FROM v0 WHERE ((('_b')>=((((((((((((('-36536003')AND('eGC+<1~')))OR(x'')))AND(NULL)))AND(NULL)))AND(NULL)))AND(NULL))))) LIMIT -397536279 OFFSET -272101046;SELECT DISTINCT ((vt0.c0) NOTNULL) FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT MAX(((vt1.c0)&(vt1.c0)), (+ (vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END IN ()), ((vt0.c0 IN ()) IN ()), ((((v0.c0)LIKE(v0.c0)))-(GROUP_CONCAT(vt1.c0))) FROM v0;SELECT ALL ((COUNT(vt0.c0))>=(x'')) FROM vt0, vt1, v0; -- 0ms;
SELECT ALL (((vt1.c0 IN (vt1.c0))) IS TRUE) FROM v0 NOT INDEXED WHERE ((((x'f638')) NOT BETWEEN (((((0.025981557626117868))==((x''))))) AND (('798315734'))));SELECT ALL LIKELIHOOD(v0.c0, 0.6036100742507967) FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT ((((((v0.c0) IS TRUE))AND(((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)))))OR(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) FROM vt1, vt0 LIMIT -306829726 OFFSET 60573930;SELECT DISTINCT ((TOTAL(vt1.c0)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0)||(v0.c0)))) FROM vt0 CROSS JOIN v0 ON ((NULL) NOT BETWEEN (((v0.c0)=(vt1.c0))) AND (((x'db4e') NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(vt1.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND ((+ (v0.c0)))) ASC LIMIT 920773220 OFFSET -413161288;SELECT DISTINCT (('53376061') ISNULL), ((0.13344020008793478) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (((vt1.c0) BETWEEN (v0.c0) AND (vt0.c0)))), (((vt1.c0 IN ())) IS FALSE) FROM vt1 CROSS JOIN vt0 ON CAST(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) AS TEXT) LIMIT 747671133 OFFSET 775926226;SELECT ALL CAST(vt0.c0 AS TEXT) COLLATE BINARY FROM v0, vt1;SELECT DISTINCT ((((UPPER(vt1.c0))AND(((v0.c0)<<(v0.c0)))))OR((NOT (vt1.c0)))), v0.c0, vt0.c0 FROM v0 WHERE (((('')|(NULL)) IN (NULL, ((0.7776940665922113)>>(NULL)))));SELECT ALL (+ (x'e2207c4c')), ((vt0.c0 COLLATE NOCASE) NOT NULL), ((((((((((vt0.c0)IS(vt0.c0)))AND(LIKELIHOOD(DISTINCT v0.c0, 0.2917895526119667))))OR(((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(((((vt1.c0)OR(v0.c0)))OR(v0.c0)))))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN '1928997924' THEN 0.01476151693420169 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (CASE WHEN ((((NULL)AND('H7ê/GJã¿+')))OR(x'')) THEN ((('754339473')) NOT BETWEEN ((0.5908638841422477)) AND ((x''))) WHEN NULLIF(x'b991', NULL) THEN 0.04622611007811672 WHEN CAST(NULL AS REAL) THEN LIKELY(0x60ec35a3) ELSE ((NULL) NOT NULL) END);SELECT ALL CAST(SUM(0.44597103120063386) AS REAL) FROM vt1, v0, vt0 WHERE (((CAST(-1413616314 AS TEXT)) BETWEEN ((('')|('3/'))) AND ((('') BETWEEN (0.5517252013376299) AND (0.5081361097163092))))); -- 0ms;
SELECT DISTINCT (((((((vt0.c0, vt1.c0, x'6b50')) BETWEEN ((v0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, v0.c0, v0.c0))))AND(((v0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((((v0.c0)AND(vt1.c0)))AND(v0.c0)))), v0.c0 COLLATE NOCASE, ((((vt1.c0) IS TRUE))-(CASE WHEN vt1.c0 THEN 0x3a3d9c25 END)) FROM vt1, v0;SELECT DISTINCT ((v0.c0) BETWEEN (vt1.c0) AND (0.6849159894525767)) COLLATE BINARY, MAX(((((v0.c0)OR(v0.c0)))OR(v0.c0))), CASE GROUP_CONCAT(vt0.c0)  WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN '?\nZ)' WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt1.c0)>=(vt1.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(v0.c0)) END FROM v0, vt1, vt0 WHERE (((((((x'42c4') NOT BETWEEN (0.6321706702072302) AND (x'')))OR(((((0.6443265627049178)AND(0.9718889685763431)))OR(-498805706)))))OR(((NULL) BETWEEN (x'') AND ('-650610148'))))); -- 0ms;
SELECT ALL NULLIF(((vt1.c0) IS FALSE), RTRIM('145398901')), '-627180093', CASE SUM(vt1.c0)  WHEN (v0.c0 IN ()) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0)<>(v0.c0)) WHEN ((v0.c0)>(v0.c0)) THEN GROUP_CONCAT(vt1.c0) ELSE (((vt0.c0, vt1.c0, v0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))) END FROM vt0, vt1 WHERE (((ABS(1.546403786E9)) IS FALSE));SELECT DISTINCT CAST(x'143fb47058f1' AS INTEGER) FROM vt0 WHERE (((((((((((((CASE NULL  WHEN x'' THEN x'3b5a' WHEN '1396125399' THEN 0x4858a254 WHEN NULL THEN x'' WHEN x'' THEN NULL WHEN NULL THEN x'' END)OR(1.626092963E9 COLLATE NOCASE)))OR(UNLIKELY('-259937776'))))AND((0.14631758871567624 IN ()))))OR(((x'd4c9c758')|('')))))OR('f%' COLLATE RTRIM)))OR(((-995331688) IS FALSE)))) GROUP BY CAST(vt0.c0 AS INTEGER) HAVING LOWER(DISTINCT json_insert('-2126035934', vt0.c0, vt1.c0, vt1.c0, vt0.c0)) LIMIT 1032752607;SELECT ALL ((((~ (vt0.c0))))>((((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt1.c0))))) FROM vt1, vt0, v0; -- 0ms;
SELECT LAST_VALUE((((vt0.c0)) NOT BETWEEN ((NULLIF(vt0.c0, v0.c0))) AND ((CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) OVER ( ORDER BY ((CASE WHEN vt1.c0 THEN v0.c0 END)<=(((vt0.c0) NOTNULL)))) FROM v0, vt0, vt1; -- 0ms;
SELECT NTH_VALUE(((v0.c0 IN ()) IN ()), ((CAST(vt0.c0 AS BLOB))<<(CAST(vt0.c0 AS TEXT)))) OVER ( GROUPS  UNBOUNDED PRECEDING), (((((((((x'' IN (v0.c0, vt0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE 0.828794058500778 END)))OR(0X1ff6f62d)))AND(((((vt1.c0)OR(vt0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))), CHANGES() FROM v0, vt0 WHERE ((NOT ((('dL')==('-664516876'))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((v0.c0 IN (vt1.c0, v0.c0)))) ASC;SELECT DISTINCT (((((~ (v0.c0)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)) FROM v0;SELECT ((((load_extension(v0.c0, vt0.c0))OR(CASE -1.40135854E9  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END)))OR(x'8e42')) FROM vt0, vt1, v0 WHERE (((((((NULL)AND(0.5847697593267369)))OR(x'4ae3')))AND(((0x3d99f826)<=('O\r'))))); -- 0ms;
SELECT DISTINCT '-516715627', (((CASE v0.c0  WHEN vt1.c0 THEN '0.19802087426948356' END))>=((vt1.c0 COLLATE BINARY))), (+ (v0.c0)) FROM v0, vt0, vt1; -- 0ms;
SELECT ALL (((v0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN x'' THEN vt0.c0 END, LAST_INSERT_ROWID(), (- (vt0.c0)))) AND ((((-39116532) NOTNULL), ((vt1.c0) IS TRUE), (+ (v0.c0))))), ((((NULL)AND(((v0.c0)>(v0.c0)))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))), (~ (LTRIM(v0.c0))) FROM v0, vt1, vt0 WHERE (TYPEOF(DISTINCT 0.9944417102293291 COLLATE NOCASE)); -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (MIN(v0.c0)) AND (CASE WHEN v0.c0 THEN vt0.c0 END)) FROM vt1 LIMIT -791670004;SELECT ALL (((((((((~ (vt1.c0)))OR(((vt0.c0) IS TRUE))))OR(((vt1.c0)<(vt1.c0)))))AND(AVG('1487251083'))))OR((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) FROM vt1, v0, vt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN v0.c0 THEN vt0.c0 END)OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(((vt1.c0) NOTNULL))) FROM v0 WHERE (x'');SELECT DISTINCT CAST(((vt0.c0)<<(vt0.c0)) AS BLOB), (~ (((vt1.c0) IS FALSE))), CASE WHEN GROUP_CONCAT(vt1.c0) THEN LIKELIHOOD(DISTINCT v0.c0, 0.9024163057021032) ELSE '' END FROM vt0, vt1 LIMIT 2001980312;SELECT DISTINCT (((v0.c0)IS NOT(v0.c0)) IN ()) FROM vt1 WHERE (UNLIKELY(CASE WHEN 'L}N,6ê³' THEN 0xffffffffa5ceb260 WHEN x'' THEN 0.8274900058322476 WHEN 'î¸Eâ¯µ' THEN '' ELSE '2074510071' END)) LIMIT 1588230377; -- 0ms;
SELECT DISTINCT RANK() OVER (), '', ((((vt1.c0 COLLATE NOCASE)AND(((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(v0.c0)))AND('å5')))))OR(vt1.c0)) FROM v0, vt0, vt1 ORDER BY ((((v0.c0)GLOB(vt1.c0))) IS TRUE) DESC; -- 0ms;
SELECT ((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))OR(vt1.c0)), (((((vt1.c0, vt0.c0, v0.c0, vt1.c0, vt0.c0))<>(('-881953660', '145398901', vt0.c0, v0.c0, vt0.c0))))<<((NOT (vt1.c0)))), (+ (CAST(v0.c0 AS NUMERIC))) FROM v0, vt1 WHERE ((((NULL)) BETWEEN ((((0.773801929651588) BETWEEN (-8.8195366E8) AND ('0.8959323388944831')))) AND ((MAX('101577912', 'U6wN')))));SELECT DISTINCT (((NOT (vt1.c0)))!=((NOT (vt1.c0)))), NTILE((vt0.c0 COLLATE RTRIM IN ())) OVER (), TOTAL(GROUP_CONCAT(TOTAL(vt0.c0))) FROM vt0 ORDER BY (NOT (v0.c0)) DESC  NULLS LAST, SQLITE_VERSION()  NULLS FIRST;SELECT DISTINCT (((vt0.c0 IN ())) NOTNULL) FROM vt1; -- 0ms;
SELECT DISTINCT (- (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)))), ((vt1.c0) NOT NULL) COLLATE NOCASE COLLATE NOCASE, COUNT(*) FROM v0;SELECT ((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE FROM vt0;SELECT ALL ((((v0.c0)/(vt0.c0))) ISNULL) FROM v0, vt0, vt1; -- 0ms;
SELECT MAX(((v0.c0)-(vt1.c0))) COLLATE NOCASE FROM v0 WHERE (UPPER(LOWER(DISTINCT 'sP'))) ORDER BY ((CAST(v0.c0 AS INTEGER))=((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, 0.2659309831586164, v0.c0)) AND ((NULL, vt1.c0, vt0.c0)))));SELECT DISTINCT ((ROUND(vt1.c0, v0.c0))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))), v0.c0, CAST(NULLIF(v0.c0, v0.c0) AS REAL) FROM vt1, vt0, v0 WHERE ((((NOT (0xffffffff8854bcb6)))>(CAST(0Xfffffffff779f992 AS BLOB)))) ORDER BY ((x'') NOT BETWEEN (((vt0.c0)<(v0.c0))) AND (NULL)); -- 0ms;
SELECT ALL (((v0.c0)) BETWEEN ((json_array_length(v0.c0, vt0.c0))) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) FROM vt0 WHERE (CASE NULL COLLATE NOCASE  WHEN CAST(0.4068498348727818 AS TEXT) THEN ((((-379011026)AND(0.9513577205458125)))AND(-434678661)) ELSE (((NULL)) NOT BETWEEN ((0X5b0a88fd)) AND (('400549277'))) END);SELECT (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((CAST(vt1.c0 AS INTEGER), ((vt0.c0) IS FALSE), vt0.c0)) AND ((((((x'')OR(vt0.c0)))OR(vt1.c0)), SUM(vt0.c0), '2074510071'))), COUNT(((vt0.c0)>>(v0.c0)) COLLATE RTRIM) OVER (), (((((v0.c0))>((vt0.c0))))||(((((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(v0.c0)))) FROM vt0, vt1, v0 WHERE (0.9414459131528273) LIMIT -264529025; -- 0ms;
SELECT DISTINCT AVG(UNLIKELY(DISTINCT vt1.c0) COLLATE NOCASE) FROM vt1, v0; -- 0ms;
SELECT DISTINCT ((COUNT(v0.c0)) NOT NULL) FROM vt0, vt1;SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) FROM vt1, v0 WHERE (CASE CASE WHEN NULL THEN 'Uã)N5' ELSE NULL END  WHEN (~ (x'')) THEN CASE '803774558'  WHEN 'OhI' THEN '0.41464440558533644' ELSE x'' END ELSE ((0.9847622925531648) IS TRUE) END);SELECT ALL TRIM(DISTINCT ((v0.c0)<(v0.c0)), CASE vt0.c0  WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END) FROM v0 WHERE (CAST((+ (NULL)) AS BLOB)) LIMIT -1538383194;SELECT CAST(NULLIF(v0.c0, vt1.c0) AS INTEGER), '', (((vt1.c0)|(vt0.c0)) IN ()) FROM v0, vt0 LIMIT -435127475;SELECT CAST(((v0.c0) ISNULL) AS NUMERIC) FROM vt0 WHERE (((((((((((1144688964)OR(0.15227322109290353)))OR('-773190504')))AND(NULL)))OR(x'a199'))) NOT BETWEEN (NULL COLLATE BINARY) AND ((('iLaP%á')<=(NULL)))));SELECT (vt0.c0 IN ()) FROM vt1 ORDER BY INSTR(((vt1.c0) NOT BETWEEN (x'bedf') AND (vt0.c0)), NULLIF(v0.c0, vt0.c0));SELECT DISTINCT ((((((((((((vt0.c0)OR(x'')))OR(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(v0.c0 COLLATE BINARY)), COUNT(*) OVER (), (((vt1.c0 IN ()))&(((0.9257717251591491) BETWEEN (vt1.c0) AND (vt0.c0)))), (((vt0.c0, ((vt1.c0)<<(x'')), ((vt0.c0) ISNULL)))!=((GROUP_CONCAT(vt1.c0), ((v0.c0) NOT NULL), (~ (v0.c0))))), COUNT(vt1.c0 COLLATE BINARY), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))LIKE(vt0.c0 COLLATE BINARY)), COUNT(*) FROM vt1, v0;SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE (((((((((((((x'c766')AND('0.24521673754046935')))OR(NULL)))OR('0.24521673754046935' COLLATE RTRIM)))OR(((((0.541509933100551)AND('')))OR(0.8490475399164226)))))OR(((NULL) NOT BETWEEN (NULL) AND ('0.7281904353370549')))))AND(x''))); -- 0ms;
SELECT DISTINCT ((((vt0.c0 COLLATE BINARY)AND((~ (vt1.c0)))))OR(((vt1.c0) ISNULL))) FROM vt0 WHERE (CASE ((((x'')AND('0.09738249641437513')))AND(1.767464467E9))  WHEN 0.5877350706987933 COLLATE BINARY THEN ((-239315019)<(NULL)) WHEN 0.9933301788039176 COLLATE NOCASE THEN (('^	>,(Z')<(x'')) WHEN ((0.8290057768172439)*(x'913d')) THEN (((((((('-1509743413')OR('1244265004')))OR(NULL)))OR(0.9210195508342808)))OR(NULL)) ELSE NULL COLLATE BINARY END);SELECT DISTINCT CAST((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) FROM vt0, vt1 WHERE ((- (LIKELY(NULL))));SELECT MAX((vt0.c0 IN (v0.c0))), COUNT(*) OVER (), (((NOT ('-2082467847'))) NOT BETWEEN (CASE WHEN NULL THEN v0.c0 END) AND (v0.c0)) FROM v0, vt0, vt1 WHERE ((((('') NOT BETWEEN ('-1199883254') AND ('0.9368911271097488'))) NOT NULL)); -- 0ms;
SELECT ALL ((((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0))) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM, (~ ((~ (vt0.c0)))) FROM vt0, v0;SELECT ALL json_patch((((v0.c0))=((v0.c0))), CAST('c#Qà¤*K' AS TEXT)) FROM vt0, vt1, v0 WHERE (CAST(((x'')<=('4I3\ndaysy')) AS BLOB)) ORDER BY x'' DESC, (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ()), v0.c0 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT 0.024721788455872917 FROM vt0, vt1, v0 WHERE (CAST(x'' AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((vt1.c0)=(v0.c0))))<((((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))), x'', ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)=(NULL)), (((- (vt0.c0))) NOT BETWEEN (((vt1.c0)>(vt0.c0))) AND (v0.c0 COLLATE RTRIM)), (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM FROM vt0, v0, vt1 WHERE (CAST(((x'') NOT BETWEEN (0xffffffffa3c1cbcf) AND ('')) AS REAL)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB(vt1.c0)))IS NOT(COUNT(v0.c0))) FROM v0, vt1, vt0 WHERE ((((UNLIKELY(0.818656599604372), ((0.27850621217720617) NOT BETWEEN (x'') AND (-1.110070228E9)), (((NULL))>((NULL)))))>=((CASE x''  WHEN '-940917697' THEN '-371787868' WHEN 0Xffffffff818e8967 THEN x'55ac' WHEN '1971203089' THEN 0.8959323388944831 ELSE 0Xffffffffc1fe2f6c END, IFNULL(DISTINCT -8.76876283E8, 0.045806557515041924), (('ê¿§ë')*(x'')))))); -- 0ms;
SELECT ALL ((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((NOT (v0.c0)))) FROM vt1, v0, vt0 WHERE (((((((NULL)<(NULL)))AND(json_array('-1895074036', 0.09959804249985116))))AND('-1703128119'))) LIMIT -422005045 OFFSET -89705730; -- 0ms;
SELECT DISTINCT '^n},', ((0Xffffffffd1ea0c98) ISNULL), CAST('580736836' COLLATE BINARY AS REAL) FROM v0, vt0, vt1 LIMIT 987527922; -- 0ms;
SELECT ('' IN (-1987102701)) FROM vt1 WHERE (CAST((('0.3404013921465209')|(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT json_array(vt1.c0 COLLATE NOCASE, ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) FROM v0, vt0;SELECT ALL CASE WHEN SUM(vt1.c0) THEN vt0.c0 COLLATE BINARY ELSE vt1.c0 COLLATE RTRIM END, ((((CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN 0X3367c1fa THEN vt0.c0 END)AND(0Xffffffffbdc9da59)))OR((v0.c0 IN (vt1.c0)))), (((((vt1.c0) IS TRUE)))<=(((NOT (0.25012175989935226))))) FROM vt0;SELECT DISTINCT ((((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(vt1.c0))) NOT BETWEEN (v0.c0) AND ((0Xffffffffd1919f61 IN ()))) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt1.c0)OR(v0.c0)))OR(x'')))<(CAST(vt0.c0 AS INTEGER))) ORDER BY -0.0 COLLATE NOCASE DESC;SELECT (((((((((+ ('u,R Xq*p')))OR(v0.c0)))AND(((v0.c0)OR(vt1.c0)))))AND(GROUP_CONCAT(v0.c0))))AND(((vt1.c0) BETWEEN (vt0.c0) AND (v0.c0)))) FROM v0, vt0 WHERE (((NULL)/(((x'') NOTNULL))));SELECT DISTINCT (~ (CASE WHEN vt1.c0 THEN vt0.c0 END)) FROM vt0, vt1, v0 WHERE (((((-1)OR(x''))) BETWEEN (((0.5689936725495749) ISNULL)) AND ((- ('-422005045'))))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)<('-1053783192')) AS REAL) FROM v0;SELECT TOTAL(((NULL) NOTNULL)) FROM vt1, vt0, v0 WHERE (CAST(((0X6e2e3eb7)<=(x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM v0, vt1, vt0 WHERE ((- ((('. vLB^6') NOT NULL)))) ORDER BY IFNULL(DISTINCT CAST(v0.c0 AS REAL), (+ (''))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((0.806479223938629) IS TRUE), ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE), COUNT(((0.6746319699103696) ISNULL)) FROM vt1, vt0, v0 WHERE (((CAST(NULL AS BLOB))&(((('-129532252', '-1836650046', NULL))<=(('N_N6', NULL, 0.8733136871391319)))))); -- 0ms;
SELECT ALL (((- (v0.c0))) ISNULL) FROM vt1, vt0, v0 WHERE (UNICODE(CAST('1303347765' AS INTEGER))); -- 0ms;
SELECT DISTINCT AVG((v0.c0 IN ())), (vt0.c0 COLLATE NOCASE IN ()), (((MAX(v0.c0, v0.c0)))<((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0))))) FROM v0;SELECT ALL TRIM((((NULL))<=((NULL))), SUBSTR(vt1.c0, -493244333)), ((((vt0.c0)<(v0.c0)))%(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 ELSE vt1.c0 END)), COUNT(*) OVER () FROM vt1 WHERE ((((CAST(x'' AS TEXT)))=((((x'6842') ISNULL)))));SELECT RANK() OVER () FROM vt0, vt1, v0; -- 0ms;
SELECT DISTINCT v0.c0 FROM vt1 WHERE (UPPER(((((x'')AND(x'')))AND('374409734')))) LIMIT 1143541713 OFFSET 1244265004;SELECT DENSE_RANK() OVER (), vt0.c0, GROUP_CONCAT('0.2710819899955045') COLLATE BINARY, TOTAL(CASE WHEN v0.c0 THEN vt1.c0 ELSE v0.c0 END), (((vt1.c0 IN ())) NOT BETWEEN (UNLIKELY(vt1.c0)) AND (MIN(vt0.c0))) FROM vt0, vt1;SELECT DATE('-371787868', ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)), ((v0.c0)>>(vt1.c0))), ((v0.c0) BETWEEN ((v0.c0 IN ())) AND (((((((((((((vt1.c0)AND(v0.c0)))AND(vt1.c0)))OR(NULL)))OR(v0.c0)))OR(vt1.c0)))OR(vt0.c0)))), (((- (v0.c0))) BETWEEN (json_insert(v0.c0, v0.c0, v0.c0, vt0.c0, v0.c0)) AND (CASE v0.c0  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) FROM vt0, v0, vt1; -- 0ms;
SELECT ALL (vt0.c0 COLLATE NOCASE IN ()) FROM vt1, vt0 WHERE (((-672055242)*(CASE WHEN x'7d77' THEN 0.5681202120494796 WHEN -7.05774906E8 THEN '244175913' WHEN '1708167805' THEN -4.56469885E8 END))); -- 0ms;
SELECT DISTINCT ((QUOTE(vt0.c0))==(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0;SELECT -1556125026 FROM v0 EXCEPT SELECT DISTINCT ((((((((((vt0.c0)=(vt0.c0)))AND(v0.c0)))AND((vt0.c0 IN ()))))OR((((vt1.c0))>=((vt0.c0))))))OR(GROUP_CONCAT(vt0.c0))) FROM v0;SELECT DISTINCT (CAST(v0.c0 AS INTEGER) IN (((NULL)||(vt0.c0)), ((v0.c0) IS TRUE))), CHAR(x'' COLLATE RTRIM), COUNT(vt0.c0) FROM vt0, v0 WHERE (((x'') IS FALSE)); -- 0ms;
SELECT CASE WHEN LOWER(DISTINCT vt0.c0) THEN ((v0.c0) NOT NULL) WHEN ((vt1.c0)<(vt1.c0)) THEN CAST(v0.c0 AS REAL) WHEN GROUP_CONCAT(vt1.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) END FROM v0;SELECT DISTINCT CAST(NULL AS NUMERIC) FROM vt1, vt0 WHERE (''); -- 1ms;
SELECT LEAD((- (((v0.c0)GLOB(vt1.c0)))), CASE MAX(vt1.c0, v0.c0, vt1.c0, v0.c0)  WHEN NULLIF('E+owJ!]N', vt1.c0) THEN ((((v0.c0)AND(v0.c0)))AND(vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END END, ((((vt1.c0) NOT NULL))>(vt1.c0 COLLATE BINARY))) OVER () FROM v0, vt1 WHERE (((((NULL)&('445963633')))>>(((NULL)-('934032372'))))); -- 0ms;
SELECT ALL ((CAST(v0.c0 AS BLOB)) BETWEEN (((vt0.c0)IS(vt1.c0))) AND (ABS(0.22751235080790122))), CASE v0.c0 COLLATE RTRIM  WHEN CAST(vt1.c0 AS TEXT) THEN ((vt1.c0)>(vt0.c0)) END, ((((vt1.c0)!=(vt1.c0)))<=(((vt1.c0)>=(x'440b')))) FROM vt1, v0 WHERE ((+ ((((NULL)) BETWEEN ((1708167805)) AND ((0.2930698430984623))))));SELECT DISTINCT vt0.c0 FROM v0, vt1 WHERE (((((x'f986')%('bwdEç´ >~'))) BETWEEN (NULL COLLATE NOCASE) AND ((('-32962368') NOT BETWEEN (x'4841') AND ('?å¿¾v-')))));SELECT DISTINCT (vt1.c0 IN ()) FROM v0, vt0, vt1 WHERE ((+ (((((NULL)OR('879055713')))AND(x''))))); -- 0ms;
SELECT CAST(((vt1.c0)<=(v0.c0)) AS REAL) FROM vt1;SELECT DISTINCT (((v0.c0, CAST(vt1.c0 AS TEXT), ((((v0.c0)AND(vt0.c0)))AND(v0.c0)), CAST(v0.c0 AS TEXT), ((vt1.c0)>=(x''))))<(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE v0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END, LIKE(vt0.c0, vt0.c0), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END, ((((v0.c0)AND(vt0.c0)))OR(vt0.c0))))) FROM vt0;SELECT DISTINCT v0.c0 COLLATE RTRIM FROM vt1, v0 WHERE ((((((((((((('-1425830066')OR('2003289092')))OR(NULL)))OR(((('-256913839', '2001749184', -1.418723184E9, '1518978362', NULL)) BETWEEN ((NULL, '4O>F/~1#d', x'0a0d', x'ec87', '189522346')) AND ((NULL, '363169260', NULL, NULL, 'fHl\Z'))))))AND(LENGTH(x''))))OR((('&[ J^&vT') IS FALSE))))AND(0Xffffffffcdcb9e17 COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((((((((((TOTAL(vt0.c0))AND(MAX(vt1.c0))))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))))))OR(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))))AND((vt0.c0 IN (v0.c0, vt1.c0)))))AND((((vt0.c0))!=((vt1.c0))))))OR(COUNT(vt0.c0))), (NOT ((0.4713563127361504 IN ()))), ((((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(0.9364409878356985)))AND(vt1.c0)))AND(x'')))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)))) FROM vt0 WHERE (LIKELY(-284505880) COLLATE RTRIM);SELECT (((((+ (vt0.c0)))AND(COALESCE(DISTINCT vt1.c0, v0.c0, x'', vt1.c0))))OR(((vt0.c0)OR(0.9286482570182019)))) FROM v0;SELECT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.6399800529135306 THEN '-881953660' END IN ()) FROM v0, vt0 WHERE (0.2836906562061704); -- 0ms;
SELECT DISTINCT LOWER(vt0.c0 COLLATE NOCASE) FROM vt1, v0 WHERE (((CAST('788822530' AS INTEGER))AND(((-2056813031)<(NULL)))));SELECT (((((vt0.c0)) BETWEEN (('ä­')) AND ((v0.c0)))) IS FALSE) FROM vt1, vt0, v0; -- 0ms;
SELECT DISTINCT AVG(x'') OVER () FROM vt0, v0 WHERE (((CASE WHEN NULL THEN NULL WHEN 0.555227813836729 THEN -1633271077 WHEN NULL THEN 0.3944091433285587 END) ISNULL)) GROUP BY ((((v0.c0)>(0.056931424658497654))) NOT BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 END) AND (v0.c0 COLLATE BINARY)), 0xffffffffd2013191, ((((((((((vt0.c0)AND(-252509704)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) BETWEEN ((~ (vt0.c0))) AND (((843867774) NOT BETWEEN ('-159580971') AND (0.11376175250037524))));SELECT DISTINCT (((CAST(v0.c0 AS NUMERIC)))=((vt1.c0))) FROM vt1, v0; -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY (((v0.c0)) NOT BETWEEN (((+ (vt0.c0)))) AND ((((vt1.c0) ISNULL)))) ASC  NULLS FIRST) FROM v0, vt1, vt0; -- 1ms;
SELECT DISTINCT MAX(((0Xfffffffff9149213) IS FALSE), v0.c0 COLLATE RTRIM, load_extension(-5.37012893E8, vt1.c0), NULL COLLATE RTRIM) FROM vt1;SELECT CASE WHEN vt1.c0 COLLATE NOCASE THEN (+ (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END WHEN LAST_INSERT_ROWID() THEN ((vt1.c0)==(v0.c0)) ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0)) END, ((vt1.c0)&(vt0.c0)) COLLATE RTRIM COLLATE BINARY, SUM(((1.080790008E9)|(v0.c0))) FROM vt0, vt1;SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM vt1, v0 WHERE (((('_+x|')) BETWEEN ((CASE x''  WHEN 'eGC+<1~' THEN NULL ELSE 0.67805043101019 END)) AND ((CASE WHEN x'' THEN '0.24486744450618592' WHEN -3.23523193E8 THEN NULL WHEN x'' THEN '*+_.' ELSE 0.8263874392485637 END)))); -- 0ms;
SELECT NULL FROM v0, vt0, vt1 LIMIT -760303318 OFFSET 818774961; -- 0ms;
SELECT DISTINCT COUNT(((v0.c0)<<(vt1.c0)) COLLATE NOCASE) OVER (), COALESCE(DISTINCT ((vt0.c0)+(vt1.c0)), NULL), ((vt1.c0 IN ()) IN ()) FROM vt1 WHERE (LIKELIHOOD(DISTINCT ((((x'fdd1')AND(-1.80711686E9)))OR(0.2733927331113313)), 0.8710974070038033));SELECT TOTAL(MIN(CASE WHEN vt0.c0 THEN v0.c0 END)) FROM vt0, vt1, v0;SELECT ALL CASE (x'' IN (vt1.c0, vt1.c0))  WHEN ((vt0.c0)IS(v0.c0)) THEN (v0.c0 IN (vt0.c0, v0.c0)) ELSE vt1.c0 COLLATE BINARY END, AVG(TYPEOF(DISTINCT v0.c0)), ((((CASE WHEN vt1.c0 THEN vt1.c0 END)AND(COUNT(vt1.c0))))AND(0.9498238115854428)) FROM vt0, v0, vt1 GROUP BY ((((v0.c0) NOT BETWEEN (vt1.c0) AND (x''))) ISNULL); -- 0ms;
SELECT DISTINCT (((((((vt0.c0))<=((vt0.c0))))AND(CAST(1.333429574E9 AS NUMERIC))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))), ((vt1.c0)<=(vt0.c0)) COLLATE BINARY, (CAST('\nM6N[à»­' AS NUMERIC) IN ()) FROM vt0;SELECT GROUP_CONCAT(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0))) OVER ( ORDER BY ((vt1.c0)%(LTRIM(vt1.c0)))), ((CAST(vt1.c0 AS NUMERIC))LIKE(((((((((v0.c0)OR(v0.c0)))OR(x'9735a9cd')))AND(vt0.c0)))AND(v0.c0)))), ((v0.c0)<=(v0.c0)) COLLATE NOCASE FROM vt0 WHERE (COALESCE(DISTINCT (NOT (132818671)), HEX(DISTINCT x''))) GROUP BY CASE CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((vt0.c0)<<(vt0.c0)) THEN (((vt1.c0))>=((vt0.c0))) ELSE v0.c0 END HAVING (((((((((+ (v0.c0)))OR('bH)\nNkm')))OR('-1193895166')))AND(vt1.c0)))AND((~ (vt1.c0))));SELECT ((0.47094607847262604)GLOB(ABS(vt1.c0))), ((((vt0.c0)%(0.01954010821309582)))<<(ABS(v0.c0))), ((vt1.c0) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((((vt1.c0)OR(v0.c0)))OR(vt0.c0)))) FROM vt0;SELECT DISTINCT CAST((~ (vt0.c0)) AS BLOB), ((((vt0.c0)LIKE(vt1.c0))) NOT NULL), ((((('\rr9e}f\nx')OR(vt0.c0))))==((json_insert(vt1.c0, vt1.c0, v0.c0)))) FROM vt1, vt0, v0; -- 0ms;
SELECT ABS(vt1.c0) COLLATE NOCASE FROM vt0, vt1, v0 WHERE (CASE (((0.14271069567037542, '', '798315734'))=((0.9636529220004575, '', 'B}q')))  WHEN NULL COLLATE RTRIM THEN ((0x51237f17)/(-1340084446)) END); -- 0ms;
SELECT TOTAL(SUM(((x'd07f') NOTNULL))) FROM vt0, v0 WHERE (((((((((LOWER(DISTINCT NULL))AND(CAST(x'' AS NUMERIC))))OR(((x'') ISNULL))))AND(0.2710819899955045)))OR(((NULL)OR(NULL))))) LIMIT -289721771 OFFSET 1464580510;SELECT DISTINCT '784894353' COLLATE BINARY FROM v0; -- 0ms;
SELECT DISTINCT CASE WHEN ((0.9597738932368094) IS FALSE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (vt1.c0 IN (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN '' WHEN v0.c0 THEN vt1.c0 END WHEN (vt1.c0 IN (vt1.c0, v0.c0)) THEN (- (v0.c0)) END, ((((0xffffffff87f5202f) BETWEEN (vt1.c0) AND (v0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (1.592015643E9) AND (v0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))AND(x'4f3bc9a9')))AND(vt1.c0)))), json_valid(((1396125399)<(v0.c0))) FROM v0 WHERE (((((((x'')AND('')))AND(NULL)))<<('228915407')));SELECT DISTINCT ((TOTAL(x''))*(((((vt0.c0)AND(0xffffffff87f5202f)))AND(NULL)))) FROM vt0 WHERE (LOWER(((NULL) IS TRUE))) GROUP BY ((0.3299263292192598) NOTNULL); -- 0ms;
SELECT ALL (((vt1.c0 IN ()))%(-9022584)), ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((vt1.c0)%(vt1.c0))) AND (json_object(v0.c0, vt1.c0))), ((vt1.c0)=(((((v0.c0)OR(v0.c0)))AND(v0.c0)))), (((vt0.c0)) BETWEEN ((json_valid(NULL))) AND ((((vt1.c0) BETWEEN (0Xffffffffe7b4d732) AND (vt1.c0))))), (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.6025160412400561 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END IN (((vt1.c0) NOT NULL))) FROM vt0 WHERE ((((((((((NULL)OR(0.3128536990745092)))OR(0.14833623467298673)))AND(0.31620296439647255)))OR('1773024109')) IN ()));SELECT ALL NULL FROM vt1, vt0 WHERE (((NULL)=('jo(X]nâ')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL) FROM v0 NOT INDEXED, vt0, vt1; -- 0ms;
SELECT DISTINCT json_array_length(NULLIF(v0.c0, vt0.c0)), (((v0.c0 COLLATE BINARY, CAST(v0.c0 AS BLOB), ((v0.c0)IS(v0.c0))))==((((vt0.c0) ISNULL), vt0.c0, ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))))), LAST_INSERT_ROWID() FROM v0 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)LIKE(vt1.c0)) AS NUMERIC) WHERE (json_array_length(((((0.9122759878351466)AND(0.8761249762169462)))OR(NULL)), (0.562206322336784 IN ())));SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS(vt0.c0)))) AND ((vt0.c0))) FROM vt0, v0, vt1 GROUP BY CASE WHEN CAST(vt1.c0 AS INTEGER) THEN '-554520228' ELSE CAST(v0.c0 AS REAL) END, CAST(((vt1.c0)LIKE(0.3664674659914129)) AS TEXT), ((((TRIM(v0.c0, vt1.c0))OR(((NULL)%(vt1.c0)))))OR('~I')); -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((vt1.c0)<<(NULL))) FROM v0 NOT INDEXED, vt1 WHERE ((((('qyp') IS FALSE)) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST('1717365942' AS REAL), (+ (IFNULL(vt1.c0, vt0.c0))), vt1.c0 FROM vt1 WHERE (((((((NULL)AND(NULL)))OR(0Xffffffffffffffff)))<<(0.9902414353965444)));SELECT ALL COUNT(CAST(vt0.c0 AS TEXT)) OVER () FROM vt1, vt0, v0; -- 0ms;
SELECT 4.6304208E8 FROM v0, vt1, vt0; -- 0ms;
SELECT ((NULL)=((NOT (vt1.c0)))), SQLITE_COMPILEOPTION_USED(CAST(vt0.c0 AS TEXT)), vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT CASE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(v0.c0))  WHEN '1850854540' THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM v0, vt0 GROUP BY ((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN ('1516504588') AND (vt1.c0))) AND ((vt1.c0 IN ())));SELECT DISTINCT LAST_VALUE((+ (CASE WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END))) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), (((((vt1.c0) ISNULL)))<=(((vt0.c0 IN ())))), GROUP_CONCAT((v0.c0 IN ())) FROM v0, vt1 WHERE ((((((('')OR(0.7418771681221559)))OR(-323523193))) BETWEEN (((NULL)<=('IzZ'))) AND (((((0.6407847357502983)AND(x'3e26')))AND(x''))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt1.c0)))AND('-1255407501')))%((x'589b' IN (x'')))), ((AVG(vt0.c0)) BETWEEN (0.9584436070339568) AND (((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))), ((((v0.c0)GLOB(vt1.c0))) NOT NULL) FROM vt1;SELECT DISTINCT LEAD((((NULL)>=(v0.c0)) IN (((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), (((~ (vt1.c0)))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), (((((((vt1.c0))=((vt1.c0))))OR((- (vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN v0.c0 END))) OVER () FROM v0, vt1; -- 0ms;
SELECT DISTINCT CHANGES() FROM vt0, vt1 WHERE ((((((('[bB')AND(x'acc2e429')))OR('hfJ!}~'))) IS FALSE)); -- 1ms;
SELECT (- (CAST(vt1.c0 AS TEXT))) FROM vt1 ORDER BY vt0.c0  NULLS FIRST;SELECT DISTINCT FIRST_VALUE(((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||((('') NOTNULL)))) OVER (), (((vt1.c0 IN ())) NOT BETWEEN (((((vt1.c0)OR(v0.c0)))OR(vt0.c0))) AND ('1458170891')), FIRST_VALUE(vt0.c0) OVER () FROM vt0 WHERE (LIKELY(NULL COLLATE NOCASE));SELECT DISTINCT CASE v0.c0  WHEN vt1.c0 THEN 0.8720706606052437 ELSE v0.c0 END COLLATE RTRIM, NULL, (+ ((vt0.c0 IN ()))) FROM vt0;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((-1.053783192E9)) AND ((NULLIF(v0.c0, v0.c0)))) FROM v0, vt0; -- 0ms;
SELECT ((((v0.c0)IS(vt1.c0)))IS(MIN(vt1.c0))) FROM vt1, vt0;SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1 WHERE (((((0.8959323388944831)>>('-143001198')))>((('-184649800')IS NOT(0.15071870105513918))))); -- 0ms;
SELECT DISTINCT CAST(NULL AS BLOB), NTILE(CAST(vt1.c0 AS INTEGER) COLLATE NOCASE) OVER (), ((0.97536850490954) BETWEEN (((vt1.c0) NOTNULL)) AND (json_object(vt0.c0, -143001198))) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL))<>((+ (vt1.c0)))) FROM vt0, v0 NOT INDEXED, vt1; -- 0ms;
SELECT ((((v0.c0, 0Xffffffffc89ad5a3, vt1.c0))>=((v0.c0, NULL, v0.c0))) IN ()) FROM v0 WHERE (COALESCE(CAST(0.584866985829922 AS NUMERIC), (~ ('-108893092')))) GROUP BY (((vt1.c0) ISNULL) IN ()) HAVING ((((vt1.c0)=(vt0.c0)))-((((1333429574)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) LIMIT 832470304;SELECT ALL LIKELIHOOD(DISTINCT CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7336922865836215 WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END, 0.10191247796585867), (vt0.c0 COLLATE RTRIM IN (CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)), (- (((((vt0.c0)OR(vt0.c0)))AND(v0.c0)))) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT SUM(TRIM(vt1.c0)) OVER (), GROUP_CONCAT(vt1.c0), ((v0.c0) BETWEEN (((((((((vt0.c0)OR(vt1.c0)))OR(v0.c0)))OR('7')))AND(v0.c0))) AND (vt0.c0 COLLATE RTRIM)) FROM vt1, v0;SELECT DISTINCT NTILE(((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN ((NOT (vt1.c0))) AND ((vt1.c0 IN (vt1.c0))))) OVER () FROM vt1; -- 0ms;
SELECT ALL ((INSTR(NULL, v0.c0)) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE WHEN 145398901 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 END)LIKE(((vt1.c0) IS TRUE))), x'' FROM vt1 WHERE (((('2019941110')) BETWEEN (((3.519502E8 IN ()))) AND (('-1479149996' COLLATE BINARY))));SELECT DISTINCT GROUP_CONCAT(vt1.c0) FROM vt0 WHERE ((NOT (QUOTE('FALSE'))));SELECT DISTINCT ((vt0.c0)/((v0.c0 IN ()))), ((NOT (vt0.c0)) IN ()), NTH_VALUE(v0.c0, ((v0.c0)>(v0.c0)) COLLATE BINARY COLLATE BINARY) OVER () FROM v0;SELECT ALL (NOT (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0 WHERE ((((((NULL)) BETWEEN ((0.7609603583424253)) AND ((0.33235796365952563)))) IS FALSE));SELECT DISTINCT CAST(CAST(v0.c0 AS TEXT) AS REAL) FROM vt1;SELECT DISTINCT 0.7024503145798466, CASE WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY WHEN CAST(v0.c0 AS REAL) THEN 0.214753046257798 WHEN ((vt0.c0)-(vt1.c0)) THEN ((((((((vt1.c0)AND(0.21000548685728337)))AND(vt0.c0)))OR(vt0.c0)))AND(v0.c0)) ELSE (+ (v0.c0)) END, (((COUNT(vt1.c0), (- (v0.c0)), (('\*0(á£¶') NOT BETWEEN (x'') AND (vt0.c0))))<=((SQLITE_COMPILEOPTION_USED(v0.c0), ((vt1.c0)LIKE('V6*{Ztm')), ((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.5722681680255723)))AND(vt1.c0))))) FROM vt1;SELECT ALL NULLIF(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0), CAST((+ (vt0.c0)) AS TEXT), (((COUNT(vt1.c0)))<=(((NOT (v0.c0))))) FROM vt1, vt0, v0; -- 0ms;
SELECT ((((vt1.c0)>(vt1.c0)))OR(((vt1.c0)<<(vt1.c0)))) FROM v0, vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt1.c0) IS TRUE)))<>((vt0.c0 COLLATE NOCASE))) FROM vt1 WHERE ((((CAST(0x113c6398 AS REAL), CASE 0.0015523357412496885  WHEN NULL THEN 0Xfe2a565 WHEN '270572290' THEN 0.13964355490432123 WHEN x'' THEN NULL WHEN x'' THEN 0.5814788631462819 WHEN '' THEN 0.49698241825755485 END, ((0.33235796365952563)&(0.20781947155840863))))<=(((x'f56e' IN ()), ((x'') IS TRUE), ((('1566876365', x'', 'QC''E2B8'))>=((0.13669829034216896, NULL, NULL)))))));SELECT vt1.c0, ((AVG(x'')) NOT BETWEEN (((((((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) AND ((NOT (vt1.c0)))), NULL FROM v0;SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))OR(((vt0.c0) ISNULL))))AND((NOT (vt1.c0)))), NULLIF(vt0.c0, (v0.c0 IN ())), (+ (v0.c0)) COLLATE RTRIM FROM vt0, vt1, v0 WHERE (((1.333429574E9) BETWEEN (CASE 0.23052766653923173  WHEN x'' THEN x'' END) AND (('Z' IN ())))); -- 0ms;
SELECT ALL NULL, DENSE_RANK() OVER (), ((vt1.c0)<=(vt1.c0)) COLLATE RTRIM COLLATE RTRIM FROM v0, vt1; -- 0ms;
SELECT DISTINCT AVG(((((v0.c0)OR(v0.c0)))OR(vt1.c0))) OVER () FROM vt0, vt1;SELECT (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(((v0.c0)<(vt0.c0)))))AND((+ (v0.c0)))))AND(CAST(vt0.c0 AS BLOB))))AND(GROUP_CONCAT(vt0.c0))) FROM v0, vt0 ORDER BY v0.c0 ASC LIMIT 1274226050 OFFSET -1280666508;SELECT DISTINCT (NOT (((((vt0.c0)AND(v0.c0)))OR(v0.c0)))), ((SUM(vt1.c0)) NOT NULL), TOTAL(IFNULL('Nk', vt0.c0)), COUNT(CAST(vt0.c0 AS INTEGER)) OVER (), TRIM(((v0.c0) NOT BETWEEN (vt0.c0) AND ('1300748355'))) FROM vt0, vt1;SELECT ALL LIKELIHOOD(rtreenode(vt0.c0, v0.c0), 0.470935769013215), ((x'') NOTNULL), (((~ (vt1.c0))) BETWEEN (CAST(v0.c0 AS BLOB)) AND (((vt0.c0)!=('~5n]Z5C')))) FROM vt0 WHERE (TOTAL_CHANGES()) LIMIT -1879614656;SELECT ALL ((COUNT(*))<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), ((((v0.c0)OR(((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))))OR(v0.c0)), ((((vt0.c0)+(v0.c0))) NOT NULL), ((((vt0.c0)AND(v0.c0)))||(((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))), FIRST_VALUE(PRINTF(((vt0.c0)IS NOT(NULL)), '[	Z,é¬X', ((((vt0.c0)OR(x'')))AND(vt0.c0)))) OVER () FROM vt0;