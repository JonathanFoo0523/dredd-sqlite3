-- Time: 2024/06/07 10:52:48
-- Database: database12
-- Database version: 3.40.0
-- seed value: 4140944112
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INTEGER , c1 INTEGER , c2 TEXT ); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
UPDATE OR REPLACE t0 SET c1='', c1=0.1472192576168715; -- 0ms;
END; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
UPDATE OR ABORT t0 SET c2=NULL, c1=1543864389, c2=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1, c1)=(0.5945005076211952, '湰G', NULL); -- 0ms;
PRAGMA automatic_index; -- 1ms;
UPDATE OR IGNORE t0 SET (c2, c2)=(x'', x'3f70') WHERE x'894e8f0b'; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c1)=(0.42801128617867545, '-1177588112') WHERE (((~ (t0.c1)))>>(0.8745430147892929)); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(x'') WHERE ((t0.c0)<>(t0.c2)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.9894805765736361 WHERE ((((((t0.c0)%(t0.c1)))AND(((t0.c2)*(t0.c1)))))OR(CAST(t0.c2 AS INTEGER))); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c38; -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=('-1177588112'); -- 0ms;
ANALYZE main; -- 0ms;
UPDATE t0 SET c38=NULL WHERE ((((t0.c1)||(-1.177588112E9)))<<(CAST(t0.c38 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c38=NULL, c0='' WHERE ((NULLIF(t0.c38, t0.c0)) BETWEEN ('2002463575') AND ((- (t0.c38)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=''; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET c38='', c1='Ux' WHERE ((load_extension(t0.c1)) NOTNULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-1177588112'), (0.9894805765736361), (x''); -- 0ms;
UPDATE OR IGNORE t0 SET c38='1543864389' WHERE (((((t0.c38) IS FALSE), t0.c0, (((t0.c38, t0.c1, t0.c38)) NOT BETWEEN ((t0.c38, t0.c38, t0.c1)) AND ((t0.c38, t0.c0, t0.c1)))))>=((CASE WHEN t0.c38 THEN t0.c1 END, 0.42801128617867545, (NOT (t0.c0))))); -- 1ms;
UPDATE OR FAIL t0 SET (c38)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.default_cache_size; -- 2ms;
UPDATE OR REPLACE t0 SET (c1)=(NULL); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL (+ ((~ (0.0324697287764687)))) FROM t0 WHERE (0.9240760237771839) ORDER BY (NOT (CASE WHEN t0.c38 THEN t0.c0 ELSE t0.c0 END))  NULLS FIRST; -- 0ms;
UPDATE t0 SET c0=x'ec94' WHERE CAST(((0.8745430147892929) IS FALSE) AS INTEGER); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x'6fbf') WHERE CASE ((((((((t0.c0)OR(t0.c38)))AND(t0.c1)))AND(t0.c38)))OR(t0.c1))  WHEN ((t0.c1)>>(t0.c0)) THEN (t0.c38 IN ()) ELSE (((t0.c1, t0.c38, t0.c1, t0.c38, '1543864389', t0.c0, t0.c38))>((t0.c38, t0.c38, t0.c0, t0.c0, t0.c1, t0.c0, t0.c38))) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.default_cache_size = -782739464; -- 1ms;
PRAGMA recursive_triggers = true; -- 0ms;
CREATE VIRTUAL TABLE rt35 USING rtree(c0, c1, c2, +c3 REAL , +c4 INT ); -- 0ms;
UPDATE t0 SET (c38)=(x'5e8b') WHERE t0.c0; -- 0ms;
CREATE TEMP TABLE t1 (c0 INT , c1 BLOB , c2 TEXT ); -- 0ms;
UPDATE OR IGNORE t1 SET (c1)=('-1177588112'); -- 1ms;
PRAGMA main.auto_vacuum; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c38=NULL WHERE t0.c0; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0='-823179742', c0=0.42801128617867545; -- 0ms;
PRAGMA incremental_vacuum(-1282751749); -- 0ms;
CREATE TEMPORARY TRIGGER IF NOT EXISTS tr0 BEFORE UPDATE OF c0 ON t0 BEGIN DELETE FROM t0;END; -- 0ms;
UPDATE t1 SET (c1)=(0.6856691801595949); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum(-1949525314); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c1=NULL WHERE (((('Kk')AND(t1.c1 COLLATE NOCASE)))OR(CAST(t1.c1 AS NUMERIC))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c2, c2)=(1.394735679E9, NULL); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE rt35; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(((rt35.c2)>(rt35.c4))) COLLATE BINARY FROM t0 WHERE (((LIKE(0.017363897923777016, NULL, 'A'))LIKE((- (0.40487127159584657)))));SELECT DISTINCT rt35.c3 FROM t0, rt35, t1 GROUP BY CAST(((((((((t0.c38)OR(rt35.c3)))OR('-782739464')))OR(t0.c38)))AND(rt35.c3)) AS REAL); -- 0ms;
SELECT DISTINCT ((t1.c1) NOT BETWEEN (((t1.c2)<<(t1.c1))) AND (((t0.c38)&(rt35.c4)))) FROM t1, rt35, t0; -- 0ms;
SELECT TOTAL(NULL), (((t0.c0)) BETWEEN ((CAST(rt35.c4 AS INTEGER))) AND ((((t1.c0) IS TRUE)))), ((t0.c38) NOT BETWEEN (CASE WHEN rt35.c2 THEN rt35.c1 END) AND ((((0.5985732937576053)) NOT BETWEEN ((t0.c1)) AND ((t1.c2))))) FROM t0, t1, rt35; -- 0ms;
SELECT DISTINCT ((rt35.c3 IN ()) IN (0.8849739581668208)), LEAD(NULL, NULL, CASE ((rt35.c4) IS TRUE)  WHEN rt35.c0 THEN (- (t1.c0)) END) OVER (), ((((((t1.c1)AND(rt35.c1)))OR(rt35.c3))) NOTNULL) FROM rt35, t1 WHERE ((((- (x'')))==(((((((((((((((((0.6493010889089794)AND(x'')))AND(NULL)))OR('湰	')))OR(NULL)))OR(0.6460929459259493)))OR(x'')))AND(-683069768)))AND('hB'))))); -- 1ms;
SELECT ALL ((((t1.c0, t1.c0, rt35.c0))>((rt35.c0, t1.c1, rt35.c4))) IN (((t0.c0)&(t1.c2)))) FROM t0, rt35 WHERE (LOWER(DISTINCT ((727642995) BETWEEN ('') AND ('-1949525314'))));SELECT LIKE(AVG(t1.c1), AVG(rt35.c2), 'ꨠ') FROM t0 GROUP BY ((((t0.c38 IN ()), CAST(rt35.c2 AS BLOB), t1.c2 COLLATE RTRIM))<=(((((t0.c0, t0.c1, t1.c0))=((rt35.c1, t0.c38, rt35.c4))), CAST(rt35.c1 AS INTEGER), ((t1.c1) ISNULL)))) ORDER BY ((((((((((((NULL)AND((t0.c0 IN ()))))AND((+ (rt35.c0)))))OR(CASE WHEN t1.c1 THEN '' END)))AND(CASE 0xf54f5e3  WHEN x'' THEN rt35.c0 END)))AND(CAST(t0.c0 AS BLOB))))AND((NOT (rt35.c4)))) ASC  NULLS LAST;SELECT DISTINCT CAST(((((rt35.c1)AND(t0.c38)))OR('-1177588112')) AS NUMERIC) FROM rt35, t1;SELECT DISTINCT t0.c38 FROM t1, t0 GROUP BY CAST(((((rt35.c3)AND(rt35.c3)))AND(t0.c1)) AS NUMERIC) HAVING (((t0.c38)) BETWEEN (((((rt35.c2)) NOT BETWEEN ((NULL)) AND ((t0.c1))))) AND ((NULL COLLATE RTRIM)));SELECT DISTINCT ((MAX(rt35.c4)) BETWEEN (((rt35.c1)>=(t1.c0))) AND (CASE t1.c1  WHEN rt35.c3 THEN rt35.c1 WHEN 0.9914664753353 THEN t0.c0 WHEN rt35.c2 THEN t1.c0 END)) FROM rt35, t0 WHERE (((((-8.23179742E8) ISNULL)) IS TRUE));SELECT ALL (((((rt35.c1 IN ()))AND(((t0.c38) NOT BETWEEN (rt35.c1) AND (t0.c1)))))OR((- (t0.c1)))), ((rt35.c0 COLLATE NOCASE)<=(rt35.c3 COLLATE RTRIM)), ((HEX(t0.c0)) ISNULL) FROM t1, t0, rt35 GROUP BY json_array((((t0.c0)) NOT BETWEEN ((x'96188184')) AND ((t1.c2))), CASE WHEN t1.c0 THEN rt35.c2 ELSE rt35.c0 END) HAVING ((t1.c0)/(t1.c0)); -- 0ms;
SELECT ((t0.c0)%(x'f089')) COLLATE NOCASE FROM rt35, t0; -- 0ms;
SELECT ((((rt35.c0)>=(t0.c1)))>(((t1.c1)OR(7.27642995E8)))), '', MIN((t0.c0 IN ())) FROM rt35, t1, t0; -- 0ms;
SELECT 0.3047692713622797 FROM t1; -- 0ms;
SELECT DISTINCT '1616898309', CASE t0.c38 COLLATE RTRIM  WHEN (- ('')) THEN (((t0.c1)) NOT BETWEEN ((t1.c2)) AND ((t0.c0))) WHEN (rt35.c0 IN ('727642995', t0.c0)) THEN t0.c1 WHEN ((((((((rt35.c3)AND(rt35.c2)))OR(t1.c1)))OR(rt35.c1)))AND(rt35.c1)) THEN rt35.c0 END, CAST(((rt35.c0) ISNULL) AS INTEGER) FROM t0, t1 ORDER BY CAST(t0.c1 COLLATE RTRIM AS TEXT)  NULLS LAST, (IFNULL(rt35.c3, rt35.c3) IN ()) DESC  NULLS LAST;SELECT DISTINCT (((((((((t1.c2)AND(rt35.c4)))OR(rt35.c3)))OR(t0.c38)))AND('0.0')) IN ()) FROM t0, t1 WHERE (UNLIKELY(DISTINCT 0.2002566777869209) COLLATE RTRIM) ORDER BY ((HEX(DISTINCT -1602098384)) ISNULL) DESC  NULLS FIRST; -- 0ms;
SELECT ALL TOTAL(GROUP_CONCAT(rt35.c4)) FROM t0, rt35, t1;SELECT DISTINCT ((t0.c1) BETWEEN (((((((((rt35.c1)AND(t0.c1)))OR(t0.c0)))OR(2.57226211E8)))OR(t1.c0))) AND ((~ (-8.23179742E8)))) FROM t1 WHERE ((((0.35314420962352633)) NOT BETWEEN (((((((((('-1043307311')OR('')))AND(NULL)))AND(x'38a3')))OR(x'')))) AND ((CASE 2.002463575E9  WHEN NULL THEN x'7efcc4e4' WHEN 0.7191101536821277 THEN 0Xffffffffc8ac806e WHEN '' THEN 'JU' END))));SELECT ALL CAST(CAST(t1.c2 AS TEXT) AS TEXT), ((rt35.c2 COLLATE RTRIM)<(COUNT(t1.c0))), IFNULL(DISTINCT (((t0.c38)) NOT BETWEEN ((t0.c1)) AND ((rt35.c2))), ((rt35.c0)<=(rt35.c1))) FROM rt35;SELECT ALL ((((t1.c1)AND(rt35.c0))) ISNULL) FROM t1;SELECT ALL CASE (- (t1.c0))  WHEN (t0.c1 IN ()) THEN rt35.c1 END, CAST(((t0.c1)IS NOT(t0.c1)) AS INTEGER), (((((t1.c0)) NOT BETWEEN ((t0.c38)) AND ((t1.c0))))>((((t0.c38, t0.c38, t1.c0))!=((t1.c2, rt35.c2, rt35.c3))))) FROM t0, t1, rt35 LIMIT 1698653544 OFFSET -1949525314; -- 0ms;
SELECT CAST(rt35.c2 AS BLOB) COLLATE RTRIM FROM t0, t1, rt35 NOT INDEXED WHERE (NULL); -- 1ms;
SELECT ALL CAST(((t1.c1) NOT NULL) AS INTEGER) FROM t1 GROUP BY UPPER(DISTINCT x'') HAVING UNLIKELY(DISTINCT ((rt35.c2)/(rt35.c0)));SELECT (- ('A	DlNO*c')) FROM t0, t1, rt35; -- 0ms;
SELECT DISTINCT (((rt35.c3)) BETWEEN ((TRIM(DISTINCT t0.c0))) AND (((+ (t0.c1))))) FROM rt35, t0; -- 0ms;
SELECT DISTINCT CASE CASE rt35.c2  WHEN rt35.c3 THEN t1.c0 WHEN NULL THEN t1.c0 WHEN t0.c38 THEN t0.c38 ELSE rt35.c0 END  WHEN CAST(t1.c0 AS REAL) THEN t1.c2 ELSE CAST(rt35.c4 AS REAL) END FROM t0;SELECT t1.c1 FROM rt35;SELECT GROUP_CONCAT(((rt35.c1) NOT BETWEEN (x'') AND (t0.c38))) OVER (), ((((NULL)%(t1.c1)))>(COALESCE(rt35.c0, t0.c1, rt35.c0, t0.c0))), (json_remove(rt35.c2, t0.c0) IN ()), ((COUNT(rt35.c0)) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 ELSE rt35.c0 END) AND (HEX(t1.c1))), x'' FROM t1, rt35 WHERE ((~ (CASE '-782739464'  WHEN 1.27314464E8 THEN NULL END)));SELECT ((((((t0.c0) BETWEEN (rt35.c3) AND (t0.c1)))OR(CASE WHEN t1.c0 THEN -1.602098384E9 END)))OR(((t1.c2) IS TRUE))) FROM t1, t0, rt35; -- 0ms;
SELECT x'', (- (((t1.c2)|(t1.c1)))), rt35.c1, AVG(((rt35.c4)>(t0.c0))), ((((NULL)OR(t1.c1)))OR(((rt35.c0) BETWEEN ('1940995516') AND (t0.c0)))) FROM t0, t1, rt35; -- 0ms;
SELECT DISTINCT SUM(TOTAL(rt35.c2) COLLATE BINARY) FROM rt35, t1;SELECT (CASE t0.c1  WHEN rt35.c4 THEN NULL WHEN t0.c38 THEN rt35.c3 WHEN rt35.c1 THEN t0.c0 END IN ()), ((((((t0.c1)AND(x'')))AND((+ (rt35.c0)))))OR(((t1.c2) IS FALSE))), ((NULL IN ()) IN ()) FROM t1, t0 WHERE (((('241165462')) NOT BETWEEN ((NULL)) AND (((0.9099000865960124 IN ())))));SELECT DISTINCT TOTAL(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) FROM rt35, t1, t0 ORDER BY ((((rt35.c1) NOT NULL)) BETWEEN (((((rt35.c1)OR(t0.c1)))OR(t1.c2))) AND ((((rt35.c1, t1.c0, t1.c1))<>((rt35.c2, rt35.c4, rt35.c1))))) DESC  NULLS FIRST; -- 0ms;
SELECT TOTAL((((NULL, t0.c1, rt35.c1)) NOT BETWEEN ((rt35.c0, rt35.c4, rt35.c0)) AND ((t1.c2, t0.c0, t1.c0)))) OVER () FROM t1, rt35, t0; -- 0ms;
SELECT DISTINCT MAX(LOWER(t1.c1)) FROM t1, t0 WHERE (CASE WHEN ((-1.043307311E9) NOT NULL) THEN 0.8051133587689712 COLLATE NOCASE END); -- 0ms;
SELECT ALL MAX(((t0.c38)-(t1.c2))) FROM t0, t1; -- 1ms;
SELECT ALL rt35.c2 FROM t0;SELECT (CASE WHEN rt35.c1 THEN rt35.c0 ELSE t0.c38 END IN ()) FROM rt35, t1 WHERE ((NOT (0X77eac2e1)) COLLATE BINARY) ORDER BY (((((t0.c1) BETWEEN (rt35.c3) AND (NULL))))<((((t1.c0) IS FALSE))))  NULLS LAST;SELECT DISTINCT CASE (t0.c1 IN ())  WHEN (~ (rt35.c4)) THEN t1.c2 ELSE ((((rt35.c4)OR(t0.c38)))AND(t1.c1)) END FROM rt35, t0 WHERE ((((((((x'', '1336241506', 1022181751)) NOT BETWEEN ((x'4a6a', NULL, NULL)) AND ((0Xffffffffb10eb2f9, '', 0.7342503580852697))))AND((0.32914986272535285 IN ()))))AND(CAST('1231859507' AS REAL))));SELECT DISTINCT TRIM(DISTINCT ((t1.c2) NOT NULL), UPPER(DISTINCT rt35.c0)), (((t0.c0 IN (rt35.c1)))<=((((rt35.c0)) BETWEEN ((rt35.c4)) AND ((t0.c0))))), (((NOT (t0.c1)))<(((x'')GLOB(rt35.c4)))) FROM t1, t0;SELECT DISTINCT ((((((((((((NULL)AND(rt35.c2)))AND(rt35.c4)))AND('1828242032')))AND(t1.c2)))AND((t1.c0 IN ()))))OR(t1.c1 COLLATE NOCASE)) FROM t1, t0 WHERE (((((NULL) BETWEEN (0.47962725126438266) AND (0.9163044118489021)))%((+ (''))))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS BLOB)) NOT NULL), CAST(t1.c1 AS TEXT) COLLATE RTRIM, ((rt35.c2 COLLATE NOCASE) NOT BETWEEN (IFNULL(rt35.c2, t0.c0)) AND (((((0Xffffffffe282e169)AND(rt35.c0)))OR(t1.c0)))) FROM rt35, t1, t0; -- 0ms;
SELECT ALL (((rt35.c2 IN (rt35.c2, t1.c1))) NOT NULL) FROM t0, rt35;SELECT DISTINCT (((t0.c0, json_quote(t0.c38), ((t0.c1)<(t0.c38))))>((((t0.c38) IS FALSE), ((rt35.c2) NOT BETWEEN (t0.c38) AND (t0.c38)), rt35.c2))) FROM t0, t1 WHERE (CASE WHEN (241165462 IN ('-990110906', 'ju')) THEN '' WHEN CASE WHEN x'' THEN NULL WHEN NULL THEN 0.5945005076211952 WHEN NULL THEN x'6bc9' ELSE 0.9099000865960124 END THEN 'Zl' WHEN (x'0eda' IN ()) THEN UPPER(DISTINCT 0.9427972072490588) END) LIMIT -41686318;SELECT ALL (t1.c1 COLLATE RTRIM IN ()), ((((CASE WHEN rt35.c0 THEN rt35.c1 WHEN rt35.c2 THEN '-1949525314' WHEN rt35.c4 THEN rt35.c1 ELSE t1.c1 END)OR(((t0.c1)OR(t1.c0)))))OR(((((((((t0.c1)AND(x'')))OR(t1.c0)))AND(rt35.c4)))OR(rt35.c1)))), LIKELY(DISTINCT ((rt35.c1)IS('1321480629'))) FROM t0, rt35;SELECT ALL ((+ ('0.35314420962352633')) IN ()) FROM t1 NOT INDEXED, t0, rt35 WHERE (0.9367010954637066); -- 0ms;
SELECT ALL ((((((((((((rt35.c2)OR(rt35.c3)))AND(rt35.c0)))OR(CAST(t0.c1 AS BLOB))))OR((NOT (-188360244)))))OR(COUNT(*))))AND(rt35.c1)) FROM t1, rt35, t0 WHERE (CAST(CAST('*' AS INTEGER) AS TEXT)); -- 0ms;
SELECT DISTINCT (+ (CAST(rt35.c1 AS BLOB))) FROM rt35, t0, t1 WHERE (CAST(0.16408444078222462 AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((t1.c0) BETWEEN (0.7521683403455588) AND (t0.c0)))>=(ABS(t0.c38))) FROM rt35, t1;SELECT ALL t0.c1, ((((load_extension(t1.c2))OR(((t1.c2) NOTNULL))))AND(rt35.c2 COLLATE RTRIM)), ((((t0.c38) ISNULL))OR(((t0.c1) NOT BETWEEN (t0.c1) AND (rt35.c0)))), t0.c38, AVG(((t1.c1) BETWEEN (t1.c0) AND (t1.c2))) OVER () FROM rt35 WHERE (('x2' IN ())) ORDER BY (((rt35.c3 IN ()))*(rt35.c4 COLLATE RTRIM)) DESC  NULLS LAST;SELECT TRIM(((rt35.c3) NOTNULL)), CAST(((((t0.c38)AND(rt35.c0)))OR(t0.c1)) AS REAL), LAST_VALUE(rt35.c4) OVER ( ORDER BY ((((t1.c0)GLOB(rt35.c4))) ISNULL) DESC  NULLS LAST ROWS (((CASE WHEN t0.c0 THEN t0.c38 ELSE rt35.c4 END))<>((t0.c38))) PRECEDING EXCLUDE GROUP) FROM rt35 WHERE (CASE RTRIM(x'')  WHEN (NULL IN ()) THEN '' ELSE (('4|')>(x'')) END);SELECT DISTINCT AVG(CAST(rt35.c4 AS REAL)) FROM t1, t0, rt35; -- 0ms;
SELECT DISTINCT ((((t0.c38)AND(((rt35.c4)>>(t0.c38)))))OR(((((t1.c0)AND(rt35.c0)))OR(t0.c1)))) FROM t1 WHERE (CASE (NOT (0.9099000865960124))  WHEN CAST('257226211' AS TEXT) THEN CASE WHEN NULL THEN 0.7771856363713927 END ELSE (~ (-295665608)) END);SELECT DISTINCT (NOT (((((t1.c0)OR(t1.c2)))AND(t1.c0)))), ((CAST(t1.c0 AS TEXT))GLOB((- (rt35.c4)))), (((rt35.c1 IN ('1543864389'))) BETWEEN (((rt35.c4)<=(rt35.c3))) AND ((NOT (rt35.c3)))) FROM rt35, t1; -- 0ms;
SELECT ALL t1.c2 FROM t0;SELECT CAST(rt35.c2 AS BLOB) FROM t1;SELECT DISTINCT ((((t1.c0)>=(rt35.c0)))|(((((((((t1.c2)OR(rt35.c2)))OR(rt35.c1)))AND(t1.c1)))OR(t0.c1)))), ((CAST(t0.c1 AS INTEGER))LIKE(((t1.c2) IS TRUE))), ((((((((((t1.c1)LIKE(t0.c38)))AND(t0.c38 COLLATE NOCASE)))OR(((rt35.c3)IS NOT(rt35.c1)))))AND((((t0.c38)) BETWEEN ((rt35.c3)) AND ((NULL))))))OR(t0.c38)) FROM t1 WHERE (0.15624465574936197);SELECT DISTINCT ((((rt35.c2)GLOB(rt35.c2))) IS TRUE) FROM t1, t0;SELECT DISTINCT DATE(t0.c1, rt35.c2, rt35.c1, t0.c1, t1.c2) COLLATE RTRIM FROM rt35, t0, t1; -- 1ms;
SELECT DISTINCT ((((((((x'ef07')OR(((rt35.c2)OR(rt35.c4)))))AND((~ (t0.c38)))))AND(rt35.c3)))OR(((t1.c2)GLOB(t0.c1)))), GROUP_CONCAT((rt35.c3 IN (rt35.c4))), CASE t1.c2  WHEN rt35.c3 THEN COUNT(*) END FROM t0;SELECT DISTINCT COUNT(*) OVER () FROM rt35, t0 WHERE (((((((((0.019627612406293515 COLLATE RTRIM)AND(((((NULL)AND(x'')))OR('wO')))))OR(0.3697121506449633)))AND(((((0.20791574610891694)OR('4D2')))AND(NULL)))))OR(((-1602098384)=(NULL))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((rt35.c1) NOT NULL)) IS FALSE)) OVER () FROM rt35; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c1 THEN ((rt35.c4)||(rt35.c2)) ELSE ((t0.c0)IS NOT(rt35.c4)) END, ((rt35.c3)LIKE(((t1.c1) NOT NULL))), (((CAST(rt35.c1 AS BLOB)))>=((t0.c38 COLLATE NOCASE))) FROM t1, t0, rt35; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c38 THEN rt35.c2 END AS NUMERIC) FROM rt35, t0 WHERE ((((((0.2557877155083599)OR(NULL)))AND(NULL)) IN ())); -- 0ms;
SELECT (~ (t1.c1)) FROM rt35, t0;SELECT DISTINCT ((((t1.c2)OR(SUM(rt35.c3))))AND(((((((((t0.c38)AND(t1.c2)))AND(0x3f14c61)))OR(NULL)))AND(rt35.c3)))) FROM t0 WHERE (((0.9540792510070322 IN ('')) IN ()));SELECT DISTINCT CAST(TOTAL(t1.c1) AS REAL) FROM t0, rt35, t1 GROUP BY IFNULL(rt35.c2, t1.c0 COLLATE BINARY) HAVING ((((((((x'')OR((~ (t0.c38)))))AND(((((rt35.c2)OR(t1.c1)))OR(rt35.c1)))))OR(((t1.c2)IS NOT(t1.c2)))))OR((~ (rt35.c2)))); -- 0ms;
SELECT DISTINCT ((x'') IS TRUE) FROM t1, rt35 WHERE ((((((x'')!=(''))))<=((0.7260970409584278)))); -- 0ms;
SELECT ALL (((((t1.c2 IN ()))AND(((t1.c0)OR(rt35.c1)))))OR(TOTAL(t1.c2))) FROM rt35, t0 WHERE ((~ (((0.012503214471936919) NOT BETWEEN (0.009111509051583866) AND ('+J')))));SELECT DISTINCT x'' FROM t1 WHERE (json_remove(CASE WHEN 'QD''(-20m' THEN 0x3ced4177 END, ((x'cadc')&('bo')))); -- 0ms;
SELECT DISTINCT CASE CASE rt35.c4  WHEN t0.c38 THEN t1.c0 END  WHEN CAST(t0.c38 AS TEXT) THEN CAST(t0.c38 AS REAL) ELSE 0.9427972072490588 END, (((rt35.c2)) NOT BETWEEN ((((t1.c2)OR(t0.c38)))) AND (('ꬆr餯'))), CASE WHEN ((t0.c1)>(rt35.c2)) THEN t0.c0 END FROM t0, t1 WHERE (json_valid(((0x72e9d21) ISNULL)));SELECT DISTINCT CAST((NOT ('')) AS BLOB), (((rt35.c1)) BETWEEN ((((t0.c38) NOT BETWEEN (rt35.c0) AND (t1.c1)))) AND ((((t1.c0) NOT NULL)))), (((((+ (rt35.c2)))AND(TYPEOF(rt35.c4))))AND((- (t0.c38)))) FROM t0, t1 WHERE ((((((0Xfffffffff82c7127) NOT NULL)))<=((((x'')>>(0.8859693050605522))))));SELECT ALL CASE WHEN ((((rt35.c1)OR(t1.c2)))AND(t1.c0)) THEN ((((((((rt35.c4)OR(t1.c2)))OR(t1.c1)))OR(t1.c2)))AND('CE<\})')) ELSE ((0.7342503580852697)&(rt35.c1)) END, t1.c1, SUM(CASE rt35.c3  WHEN rt35.c1 THEN t0.c0 WHEN rt35.c3 THEN rt35.c1 WHEN t1.c2 THEN t1.c1 END) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t0;SELECT ALL (((t0.c1 COLLATE BINARY, ((t1.c0)AND(rt35.c1)), CAST(t0.c38 AS INTEGER)))<((((((t1.c2)OR(t0.c38)))AND(-1.31305177E8)), MIN(t1.c2), CAST(t0.c0 AS BLOB)))), COUNT(NULL), (((t0.c38)) NOT BETWEEN ((((((t1.c0)AND(rt35.c2)))AND(rt35.c1)))) AND ((rt35.c0 COLLATE RTRIM))), ((((((((((t1.c1)OR(t0.c38)))AND(t0.c1)))AND(rt35.c2)))AND(rt35.c0))) NOTNULL), SUM(CAST(rt35.c2 AS INTEGER)) OVER () FROM t1, t0, rt35 WHERE (NULLIF(DISTINCT 0.4597306345438861, 's焧') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST((((rt35.c3)) BETWEEN ((t1.c0)) AND ((t0.c38))) AS BLOB) FROM t1, t0 RIGHT OUTER JOIN rt35 ON (('-513585339') NOT BETWEEN ((((rt35.c0, t0.c0, rt35.c3)) BETWEEN ((t1.c2, t0.c1, NULL)) AND ((rt35.c4, rt35.c2, x'')))) AND (t1.c0)); -- 0ms;
SELECT DISTINCT CAST(((t1.c1) NOT BETWEEN (rt35.c4) AND (0.04666793046161022)) AS INTEGER) FROM t0, rt35, t1; -- 0ms;
SELECT CASE WHEN rt35.c4 COLLATE NOCASE THEN (t1.c0 IN ()) ELSE rt35.c1 END FROM rt35 LIMIT 103187653 OFFSET 1828242032; -- 0ms;
SELECT DISTINCT TIME(SUM(rt35.c1), rt35.c3, t1.c2) FROM t0, rt35, t1 WHERE (CAST(x'0aa0' AS NUMERIC)); -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), (((t0.c0)) BETWEEN ((rt35.c0)) AND ((NULL))) COLLATE RTRIM, (~ ((((rt35.c2)) BETWEEN ((rt35.c2)) AND ((t0.c1))))) FROM rt35;SELECT CASE WHEN TYPEOF(rt35.c4) THEN NULL ELSE ((rt35.c4)*(rt35.c3)) END, ((t0.c0 COLLATE BINARY)LIKE(((t1.c0)<(t1.c2)))), ((((t0.c0)OR(rt35.c3)))OR(t0.c1)) COLLATE NOCASE FROM t0 ORDER BY 'g1X+' ASC  NULLS LAST;SELECT LENGTH(((((rt35.c2)AND(t0.c1)))OR(-782739464))) FROM t1, rt35, t0; -- 0ms;
SELECT CASE 0.7218694307078515  WHEN (((rt35.c1)) NOT BETWEEN ((rt35.c2)) AND ((x'fa75'))) THEN (t0.c38 IN ()) ELSE ((rt35.c2) BETWEEN (t1.c0) AND (t0.c1)) END FROM rt35, t0, t1 WHERE (((CASE NULL  WHEN '-1602098384' THEN NULL END) IS TRUE)); -- 0ms;
SELECT DISTINCT t1.c1, CAST(CASE WHEN rt35.c0 THEN x'd6f5' ELSE rt35.c3 END AS BLOB), CASE ((t1.c1)GLOB(t0.c38))  WHEN (t0.c38 IN ()) THEN ((((t0.c1)OR(rt35.c3)))AND(t0.c0)) WHEN (NOT (t0.c38)) THEN ((t0.c38)>=(rt35.c0)) WHEN ((t0.c1) NOT NULL) THEN ((t1.c2)LIKE('-2083590735')) END FROM t1, rt35, t0 WHERE ((((((('-1752878673')<=('h')))OR(0.1309263363069475)))OR((('i|~WM1|q') NOTNULL)))) LIMIT 1555632211; -- 1ms;
SELECT ALL LIKELY(((t0.c0)/(rt35.c3))) FROM t0 ORDER BY json_patch(((((t1.c2)OR(t0.c1)))AND(x'')), (((t1.c1))<((x''))));SELECT DISTINCT (((t1.c0) BETWEEN (t1.c2) AND (rt35.c3)) IN (((((x'')OR(t1.c0)))AND(0.5732555138033888)))) FROM rt35;SELECT ALL UPPER((rt35.c4 IN (t1.c0))) FROM t0, rt35, t1 WHERE (0xf54f5e3); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t1.c1 AS INTEGER)) FROM rt35, t0, t1; -- 0ms;
SELECT ALL (~ (((t0.c1) BETWEEN (rt35.c1) AND (rt35.c3)))) FROM t1, rt35, t0; -- 0ms;
SELECT DISTINCT NULL COLLATE NOCASE FROM t1, t0, rt35; -- 1ms;
SELECT DISTINCT (((rt35.c4, t1.c1, t0.c1)) BETWEEN ((json_array(rt35.c3, t1.c1, rt35.c4, t0.c0), '' COLLATE RTRIM, (((t1.c1, t1.c1, t1.c0)) BETWEEN ((rt35.c1, t1.c1, rt35.c2)) AND ((x'', t1.c1, rt35.c1))))) AND (((t0.c1 IN ()), ((rt35.c2)>>(t1.c2)), (NOT (t0.c0))))), CASE WHEN (rt35.c1 IN ()) THEN t0.c38 END, HEX(((rt35.c2) BETWEEN (t1.c1) AND (rt35.c1))) FROM t1, rt35, t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING), ((TIME(t0.c1, t0.c1, t0.c1))+(((0.5299545403361217) NOT BETWEEN (rt35.c0) AND (rt35.c2)))), CASE ((((rt35.c4)OR(rt35.c3)))OR(rt35.c1))  WHEN t1.c2 COLLATE BINARY THEN TRIM(t1.c1) WHEN ((t1.c1)-(rt35.c2)) THEN ((((t1.c1)OR(t0.c0)))OR(rt35.c3)) WHEN CAST(t0.c38 AS TEXT) THEN (((rt35.c0))=(('0.8745430147892929'))) ELSE ((t0.c38) BETWEEN (t1.c0) AND ('-595214479')) END FROM t1;SELECT ((((((rt35.c2)AND(rt35.c1)))OR(t0.c38))) NOT BETWEEN ((+ (-9.28219026E8))) AND (rt35.c3)) FROM t0 NOT INDEXED, rt35; -- 0ms;
SELECT DISTINCT (NOT (((t0.c38)>(t0.c0)))), ((t0.c1)<=(t0.c0)) COLLATE NOCASE, rt35.c3 FROM rt35, t0, t1 WHERE (((((0xffffffffb38ac2fb))>((NULL))) IN ())); -- 1ms;
SELECT DISTINCT ((((rt35.c4)AND(rt35.c1 COLLATE NOCASE)))AND(CAST(rt35.c4 AS INTEGER))) FROM t1;SELECT DISTINCT ((((MIN(rt35.c0))AND(x'' COLLATE RTRIM)))AND(TRIM('e'))) FROM t0, t1, rt35 WHERE (((CHANGES()) NOTNULL)); -- 0ms;
SELECT DISTINCT ((CASE rt35.c4  WHEN rt35.c4 THEN t1.c2 END) BETWEEN (rt35.c1) AND (highlight(rt35.c0, t1.c0, rt35.c3, t0.c1))), DENSE_RANK() OVER (), -225405904 FROM t1;SELECT t1.c0 FROM t1, t0, rt35 WHERE ((((~ (''))) ISNULL)) GROUP BY ((((rt35.c2) IS FALSE)) IS FALSE), CAST((+ (rt35.c1)) AS NUMERIC), ((((t1.c2)||('-1360589009'))) BETWEEN (rt35.c2 COLLATE BINARY) AND (CASE WHEN rt35.c4 THEN t0.c1 END)); -- 0ms;
SELECT ((t0.c0 COLLATE RTRIM)AND(x'dc47')) FROM t1;SELECT ((((((t1.c1)OR(t1.c1)))AND(t0.c38))) NOT NULL), CAST(((((rt35.c4)OR('sWn(~2佅>')))AND(t1.c0)) AS REAL), ((json_valid(rt35.c1))GLOB(((t1.c0)>(t1.c0)))) FROM t0 ORDER BY (((+ (t0.c0)))IS NOT(((rt35.c4)<=(rt35.c4)))) ASC  NULLS FIRST;SELECT ((((t1.c1) IS TRUE)) IS FALSE) FROM rt35 WHERE ('g}');SELECT DISTINCT (((t0.c0)<<(rt35.c3)) IN ()) FROM t0, t1, rt35 WHERE (((((NULL) NOT BETWEEN ('8KM{㙎?qj') AND (x'2eb6d879992f'))) BETWEEN (((-2.95665608E8) NOT NULL)) AND (((((0.9894805765736361)AND('43628096')))OR(NULL))))); -- 0ms;
SELECT DISTINCT ((t0.c0) BETWEEN (((((((((rt35.c3)AND(t1.c2)))OR(t1.c2)))OR(t0.c0)))OR(t0.c1))) AND (((t1.c1) BETWEEN (rt35.c2) AND (rt35.c2)))) FROM t1, rt35, t0 WHERE ((('g4DlC')>=(x'' COLLATE RTRIM))) LIMIT 1940995516 OFFSET 0; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c1 COLLATE RTRIM THEN ABS(t1.c1) END FROM t0, t1 WHERE ((+ ((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((t1.c2) NOT NULL), TYPEOF(CAST(rt35.c2 AS REAL)), CASE rt35.c2 COLLATE RTRIM  WHEN ((rt35.c0)/(t1.c1)) THEN (+ (t1.c2)) END FROM rt35 GROUP BY rt35.c4 HAVING CAST(CAST(rt35.c1 AS BLOB) AS INTEGER);SELECT SUM(CAST(t1.c1 AS TEXT)) OVER () FROM rt35, t0;SELECT DISTINCT JULIANDAY(0.7515890135595327, x'', (((rt35.c1, t0.c0, t0.c1)) NOT BETWEEN ((0.29247937862724305, rt35.c0, t1.c1)) AND ((t1.c2, rt35.c1, t1.c2))), (NOT (NULL)), ((rt35.c3) NOT BETWEEN (rt35.c3) AND (t1.c2))) FROM t0, rt35, t1; -- 0ms;
SELECT DISTINCT (x'' IN ()) FROM t1, t0, rt35; -- 1ms;
SELECT ALL (- (x'bb98')), t0.c38, UNLIKELY(DISTINCT ((NULL)+(rt35.c0))) FROM rt35, t0 WHERE (((((((NULL)AND('-782739464')))AND(0.4399910898713112)))LIKE(((x'0e13') NOT BETWEEN (x'0c05') AND (NULL))))); -- 0ms;
SELECT CUME_DIST() OVER (), '597163515', ((MIN(t1.c2))AND(rt35.c2 COLLATE BINARY)) FROM rt35, t1; -- 0ms;
SELECT ALL ((('Iyꬆ<?~_Ib')) NOT BETWEEN (('')) AND ((((t0.c1)!=(rt35.c0))))), CAST((rt35.c2 IN ()) AS NUMERIC), (((~ (t0.c1))) IS FALSE) FROM t0, t1 WHERE (((NULL IN ()) IN ())) LIMIT 1698653544;SELECT DISTINCT CAST((('')<=(t1.c1)) AS BLOB) FROM t0;SELECT (('') BETWEEN (((((rt35.c4)OR(rt35.c2)))OR(rt35.c3))) AND ((+ (rt35.c3)))) FROM rt35, t0, t1; -- 0ms;
SELECT ALL (((~ (t1.c2))) NOT NULL) FROM rt35;SELECT ALL 0.21138506362531406 FROM rt35, t1, t0 WHERE (((LIKELIHOOD(DISTINCT '', 0.43836347158654454)) NOT BETWEEN ((((NULL)) NOT BETWEEN (('-188360244')) AND (('1395387305')))) AND (((NULL) NOT BETWEEN ('-1017947916') AND (NULL))))); -- 0ms;
SELECT (((((t0.c38, t1.c2, rt35.c0)) BETWEEN ((rt35.c2, t1.c2, 1243417875)) AND ((rt35.c1, t0.c0, rt35.c0)))) BETWEEN (LIKE(t0.c1, rt35.c0, 't')) AND (((((t0.c38)OR(t0.c0)))AND(rt35.c4)))) FROM t1, rt35, t0; -- 0ms;
SELECT DISTINCT MAX(((((((((rt35.c1)OR(rt35.c3)))OR(t1.c1)))OR(t1.c0)))AND(rt35.c0))) FROM t1;SELECT DISTINCT rt35.c4 FROM rt35 WHERE (CASE WHEN NULL THEN x'' WHEN '_!\' THEN NULL WHEN '//' THEN '-823179742' WHEN x'9dfd8951' THEN NULL WHEN '-64146941' THEN x'' END COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((t0.c1)IS NOT(rt35.c0)) IN ()) FROM t1, rt35, t0 WHERE (CAST((('1555632211') NOTNULL) AS BLOB)); -- 0ms;
SELECT ((((((t0.c38)<=('Uycs꧘i+')))OR(TRIM(rt35.c2, t0.c38))))AND(CAST(rt35.c3 AS BLOB))) FROM rt35, t0 WHERE (((((NULLIF(DISTINCT x'', '0.5732555138033888'))AND((- ('1698653544')))))AND((NOT ('727642995'))))); -- 0ms;
SELECT ALL TOTAL_CHANGES(), COUNT(*) OVER ( ORDER BY NULL  NULLS FIRST), ((rt35.c1) NOT BETWEEN (t0.c38) AND (t0.c38)) COLLATE BINARY FROM t1 WHERE ('1282054122');SELECT DISTINCT (((~ (rt35.c3))) NOT NULL), (('-990110906')<>(CAST(t1.c2 AS NUMERIC))), (((((((t0.c0))<((t1.c2))))OR(((t0.c1)&(t1.c1)))))OR((((0.31701174385493514))<((rt35.c2))))) FROM t0, rt35, t1 GROUP BY ((((rt35.c0) NOT NULL))<(CAST(t0.c1 AS REAL))); -- 1ms;
SELECT ALL ((((rt35.c4)IS NOT(x''))) NOT BETWEEN (json_type(t0.c38)) AND (CASE 0.4597306345438861  WHEN t0.c0 THEN t0.c38 ELSE t1.c0 END)), (((rt35.c0 IN ()))=(COUNT(rt35.c4))), (LOWER(DISTINCT t0.c0) IN ()) FROM t1, rt35 WHERE (CAST(0.9432511949561625 AS TEXT) COLLATE NOCASE);SELECT ALL CAST(AVG(t0.c1) AS REAL), NTH_VALUE(CASE WHEN rt35.c0 COLLATE BINARY THEN ((t1.c0) BETWEEN (t1.c2) AND (rt35.c3)) WHEN (((t0.c38)) BETWEEN ((rt35.c4)) AND ((t1.c2))) THEN CAST(rt35.c0 AS NUMERIC) WHEN (((rt35.c3))>((t0.c0))) THEN (- (rt35.c0)) END, 0.31701174385493514) OVER (), LIKELIHOOD((- (rt35.c2)), 0.6866509878038587) FROM rt35, t1, t0 NOT INDEXED ORDER BY ((~ (rt35.c0)) IN ('' COLLATE NOCASE));SELECT DISTINCT (STRFTIME(t1.c2, x'', rt35.c1) IN (rt35.c4 COLLATE RTRIM)) FROM t1, t0;SELECT CASE WHEN (- (t1.c2)) THEN ((rt35.c1)OR(rt35.c1)) WHEN t1.c2 COLLATE BINARY THEN ((t1.c2) BETWEEN (t1.c1) AND (rt35.c2)) WHEN CASE t1.c1  WHEN t0.c1 THEN rt35.c0 END THEN ((rt35.c0)<=(t1.c1)) END FROM t1, rt35, t0; -- 0ms;
SELECT ALL RANK() OVER (), ((json_object(t1.c0, t1.c1, rt35.c0, t1.c1))GLOB(COUNT(*))), json(((t1.c1)<(t0.c38))) FROM t1, rt35 GROUP BY (((t1.c0)>=(rt35.c0)) IN ()) HAVING ((((rt35.c4)-(0xffffffffe38dab49))) NOTNULL);SELECT ALL (- (x'')) FROM t0, rt35, t1 GROUP BY rt35.c1 HAVING rt35.c2; -- 0ms;
SELECT DISTINCT (((~ (rt35.c4))) NOT BETWEEN (CASE WHEN t0.c38 THEN t0.c0 END) AND ((- (t1.c0)))) FROM rt35, t0, t1 WHERE ((((('328391506') NOT NULL)) BETWEEN (CAST('1282054122' AS BLOB)) AND ((('ꖳ.n.o%') BETWEEN (x'15bf') AND ('-536177546'))))); -- 0ms;
SELECT DISTINCT ((MAX(rt35.c1)) NOT NULL) FROM t1, rt35; -- 0ms;
SELECT DISTINCT 0.01284612206885516, ((t1.c2) IS FALSE) COLLATE BINARY, SUM(t0.c0) OVER () FROM t1, rt35, t0 LIMIT -61015872 OFFSET 43628096; -- 0ms;
SELECT DISTINCT ((CAST(NULL AS TEXT)) ISNULL) FROM t0, rt35, t1; -- 0ms;
SELECT ALL ((~ (rt35.c3)) IN ()) FROM t0, rt35, t1; -- 0ms;
SELECT DISTINCT (((NULL))<=((CASE WHEN rt35.c3 THEN rt35.c0 END))) FROM t1;SELECT DISTINCT (UNLIKELY(rt35.c1) IN ()) FROM t1 GROUP BY (((NOT (rt35.c4)))GLOB(IFNULL(t0.c1, rt35.c1))) LIMIT 241165462 OFFSET -875545521;SELECT CAST(CAST(t0.c0 AS BLOB) AS REAL) FROM t0 WHERE (UNLIKELY(-759009065) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((x'')<<(t1.c0)))OR(t0.c1 COLLATE RTRIM)), SUM(COALESCE(t0.c1, t0.c38)) OVER (), ((((t1.c1, rt35.c3, t0.c0))!=((t0.c38, 0.025229089424608664, t0.c1))) IN ()) FROM t1, t0 WHERE (((((-1498996071)!=(']')))LIKE(CAST('' AS TEXT)))); -- 0ms;
SELECT ((CHANGES()) NOT BETWEEN ('\r') AND (t1.c2)), GROUP_CONCAT((t1.c0 IN (rt35.c0))), (('2011874017' COLLATE BINARY)IS((~ (t0.c0)))) FROM t0 GROUP BY (- (rt35.c2)) HAVING (- (CASE ''  WHEN rt35.c1 THEN rt35.c3 WHEN t0.c0 THEN rt35.c4 WHEN t0.c38 THEN t1.c2 ELSE 0x7fffffffffffffff END));SELECT (((rt35.c2)) NOT BETWEEN ((((((t0.c0)OR(rt35.c2)))OR(NULL)))) AND (((+ (t0.c0))))) FROM t1;SELECT DISTINCT ((((((((t1.c2)AND(0.7972468571296777)))OR(rt35.c0)))AND((((rt35.c1)) NOT BETWEEN ((rt35.c3)) AND ((t1.c2))))))OR(rt35.c0)), NULL, (((((rt35.c2) IS TRUE)))>((((rt35.c1)&(t1.c1))))), COUNT(*), (- (NULL)), GROUP_CONCAT((rt35.c0 IN (t0.c1, rt35.c2))), ((t0.c0) BETWEEN ((~ (rt35.c3))) AND (MIN(t1.c2))) FROM t0;SELECT ((('Cy')) NOT BETWEEN ((CASE t0.c38  WHEN rt35.c4 THEN rt35.c2 ELSE t1.c0 END)) AND ((t0.c1))) FROM t1, rt35 WHERE ((((((((-2.95665608E8))<((0.16158094790561062))))OR(((NULL) BETWEEN ('1394735679') AND (x'')))))OR((+ (0xffffffffe1634f45))))) GROUP BY (((t1.c1)) BETWEEN ((((t1.c2)<<(t1.c2)))) AND ((NULL)));SELECT DISTINCT rt35.c2 FROM t0, t1, rt35 WHERE (LIKELIHOOD(DISTINCT ((0X72e9d21)AND(NULL)), 0.015087518383129939)); -- 0ms;
SELECT DISTINCT ((((rt35.c4) NOT NULL))<(t1.c0 COLLATE BINARY)) FROM rt35, t0, t1; -- 0ms;
SELECT DISTINCT (((t0.c38, '-1017947916', rt35.c3)) NOT BETWEEN (((rt35.c4 IN ()), ((t1.c0)>(t0.c0)), ((((((((((((t1.c0)AND(t1.c0)))OR(rt35.c4)))AND(t1.c1)))AND(NULL)))AND(rt35.c2)))AND(t1.c2)))) AND ((((0.4968393007769135)IS NOT(t0.c1)), COUNT(*), json_insert(rt35.c4, t0.c1, rt35.c0)))) FROM t1, rt35, t0 WHERE ((NOT (((0.5323025588558062) NOT NULL)))); -- 0ms;
SELECT ALL UNICODE(rt35.c4) COLLATE BINARY, (((t1.c0)) BETWEEN ((CAST(rt35.c2 AS BLOB))) AND ((rt35.c4 COLLATE NOCASE))), ((((((rt35.c4) NOT BETWEEN (t1.c2) AND (rt35.c1)))OR(CAST(rt35.c2 AS INTEGER))))OR(CASE rt35.c4  WHEN rt35.c2 THEN t1.c0 WHEN t0.c1 THEN rt35.c0 WHEN t0.c1 THEN t1.c1 ELSE t1.c1 END)) FROM t1, rt35 WHERE ((((((('q閬')OR(0.8373495261422423)))OR(x''))) NOT BETWEEN ('-1511566528') AND (((0.26291708618389487) NOTNULL))));SELECT DISTINCT CAST(((t0.c38)/(rt35.c0)) AS BLOB), (((rt35.c1)) NOT BETWEEN ((MIN(t0.c1))) AND (((+ (rt35.c4))))), ABS(((((((((((((t0.c38)OR(t1.c2)))AND(rt35.c3)))OR(rt35.c4)))AND(rt35.c2)))OR(rt35.c1)))AND(t1.c0))) FROM rt35;SELECT DISTINCT CASE WHEN ((t0.c0) NOT BETWEEN (rt35.c2) AND (t1.c1)) THEN MIN(t0.c1) END, ((((CASE WHEN t1.c2 THEN rt35.c4 END)AND(COALESCE(t1.c2, rt35.c2, rt35.c0, ''))))AND((t0.c0 IN ()))), COUNT(CAST(rt35.c3 AS TEXT)) FROM rt35;SELECT DISTINCT CASE ((rt35.c0)|(rt35.c1))  WHEN 0.8827533599851165 THEN ((((rt35.c0)OR(rt35.c1)))OR(t1.c2)) ELSE CAST(t0.c0 AS REAL) END FROM rt35, t0;SELECT ALL ((rt35.c1)<(0xffffffffa5e75340)) FROM t1;SELECT ALL -1.017947916E9, t1.c2, CASE WHEN ((t0.c0)LIKE(t0.c38)) THEN CAST(t1.c2 AS TEXT) ELSE ((rt35.c4) NOT BETWEEN (t0.c0) AND (rt35.c0)) END FROM rt35, t1 WHERE (CASE ((-131305177) IS FALSE)  WHEN ((('1651004358', NULL, 0.32981118281784183)) NOT BETWEEN ((NULL, 0Xffffffffea01bdfc, -1103844904)) AND (('577456372', 'wO7X', '-1024808496'))) THEN (('209792603')<=(NULL)) END);SELECT (rt35.c1 IN (((t0.c38) NOT NULL))), CAST(((t0.c0) IS FALSE) AS INTEGER), CAST(MAX(rt35.c4) AS NUMERIC), ((- (t1.c0)) IN (((t1.c1)<(rt35.c0)), MIN(t0.c0))), ((((t0.c38)&(t1.c0)))|(((t0.c38) NOT BETWEEN (rt35.c2) AND (rt35.c3)))) FROM rt35, t0, t1 INTERSECT SELECT DISTINCT (((t0.c1)) NOT BETWEEN ((NULL)) AND ((((rt35.c3) IS FALSE)))), UNLIKELY(DISTINCT 'Iyꬆ<?~_Ib'), '241165462', ((IFNULL(rt35.c2, t0.c0)) NOTNULL), COUNT(*) OVER ( ORDER BY MAX(((rt35.c1)&(t1.c1)), (~ (t0.c1)))  NULLS FIRST) FROM t0, t1, rt35 ORDER BY ((rt35.c1 IN (rt35.c3)) IN ((NOT (rt35.c4)), ((x'') BETWEEN (t0.c0) AND (rt35.c3)))) ASC  NULLS LAST;SELECT ALL DENSE_RANK() OVER () FROM t0, rt35, t1; -- 0ms;
SELECT DISTINCT ((((t0.c0)OR(rt35.c4)))/((t1.c1 IN ()))) FROM t1, rt35, t0; -- 0ms;
SELECT (rt35.c1 IN ()), (~ (AVG(rt35.c0))), 0.16158094790561062 FROM rt35, t1, t0 WHERE (CAST('' COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT DISTINCT CAST(((rt35.c4) IS FALSE) AS NUMERIC) FROM t1, t0;SELECT ALL (((rt35.c3 IN (t1.c2))) NOT BETWEEN (((rt35.c1) NOT NULL)) AND (((((t0.c1)AND(rt35.c0)))OR(rt35.c3)))) FROM t1, t0, rt35 WHERE (('-1746897862' IN (CASE 'w4\꼮걏CSH'  WHEN 0.963076312901782 THEN x'' WHEN x'' THEN 0.21903015512835078 WHEN 'ams.''GI' THEN '0.7342503580852697' ELSE 0Xffffffffe5f0f0eb END))); -- 0ms;
SELECT GROUP_CONCAT(((rt35.c4)||(t1.c1))) FROM rt35 WHERE ((x'83fb' COLLATE NOCASE IN ()));SELECT DISTINCT DENSE_RANK() OVER () FROM t0, t1, rt35 WHERE ((((x'54fb') IS FALSE) IN ())); -- 0ms;
SELECT CUME_DIST() OVER () FROM t0 GROUP BY (((rt35.c1, t1.c2, rt35.c0)) NOT BETWEEN ((0.30620860619811474, (+ (rt35.c0)), CASE WHEN rt35.c2 THEN t0.c1 END)) AND ((0X2cccd556, (((rt35.c4, t0.c0, '-17983480')) NOT BETWEEN ((rt35.c1, rt35.c1, 0.32914986272535285)) AND ((rt35.c0, t0.c0, x''))), ((t1.c0) NOT NULL)))) HAVING ((CASE rt35.c4  WHEN t0.c1 THEN t0.c1 WHEN t0.c38 THEN t1.c1 WHEN t0.c1 THEN rt35.c4 ELSE rt35.c2 END)<((rt35.c1 IN ('0.20791574610891694'))));SELECT ALL SUM(json(t1.c2)) OVER () FROM rt35, t1 WHERE (((((0xffffffffdcf7b368)AND(0.12779640426658356))) BETWEEN (CAST('-1405853057' AS INTEGER)) AND (NULL))); -- 0ms;
SELECT ALL t0.c38, FIRST_VALUE(((((t0.c1)IS(NULL)))LIKE((((t0.c38, t0.c1, t0.c38))<=((t0.c0, t0.c38, t0.c1)))))) OVER (), ((((((x'') NOTNULL))AND(COUNT(t1.c1))))AND(NULL)) FROM t0;SELECT ALL CAST(CAST(rt35.c3 AS TEXT) AS NUMERIC) FROM rt35, t1, t0; -- 0ms;
SELECT (((((t0.c38) BETWEEN (t0.c0) AND (t0.c1)), ((t0.c38)IS(rt35.c4)), COUNT(*)))!=((((t0.c38)IS NOT(0.3354381809700744)), HEX(rt35.c0), CAST(t0.c1 AS TEXT)))) FROM t0 ORDER BY ((((t1.c0) ISNULL)) ISNULL) DESC  NULLS FIRST, ((TRIM(t0.c38)) NOT BETWEEN ((((rt35.c0))>=((t0.c0)))) AND ((- (rt35.c0)))) ASC;SELECT ALL ((t1.c1) NOT BETWEEN (t1.c2) AND (rt35.c1)) COLLATE RTRIM FROM t0;SELECT ALL SUM(((rt35.c4)<>(rt35.c0)) COLLATE NOCASE) OVER (), CASE WHEN CASE t1.c2  WHEN t1.c0 THEN rt35.c2 WHEN NULL THEN '' WHEN rt35.c4 THEN t1.c2 ELSE rt35.c2 END THEN ((t0.c0)+(rt35.c3)) WHEN CAST(t1.c1 AS TEXT) THEN rt35.c1 WHEN (((rt35.c4, t1.c2, t1.c1)) BETWEEN ((t0.c0, NULL, -1221887655)) AND ((rt35.c3, rt35.c1, rt35.c2))) THEN CASE WHEN t0.c38 THEN rt35.c4 ELSE rt35.c1 END END, ((rt35.c1 COLLATE RTRIM) BETWEEN (AVG(NULL)) AND (AVG(rt35.c2))) FROM t0, rt35;SELECT (~ (0.04626238342154576)), t0.c38, ((t1.c0)<<(((rt35.c3) BETWEEN (rt35.c2) AND (rt35.c3)))) FROM t0, t1, rt35 WHERE (((((1.282054122E9) NOT BETWEEN (x'') AND ('-1043307311')))<>((('') ISNULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN (((t1.c2))<((rt35.c0))) THEN SUM(t0.c0) END FROM t1, t0, rt35 LIMIT -638364728 OFFSET 1022181751; -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS TEXT)) ISNULL) FROM t1, rt35, t0 GROUP BY (t1.c1 IN ()) COLLATE RTRIM HAVING json_object(TOTAL(t1.c1), rt35.c3); -- 0ms;
SELECT ALL CAST(SQLITE_SOURCE_ID() AS INTEGER), (((0.08091865070823179)) NOT BETWEEN ((((t0.c0)OR(t1.c0)))) AND ((((t0.c38)>>(rt35.c4))))), ((CASE rt35.c3  WHEN 'Zl' THEN t1.c2 END)/(((((t0.c38)OR(x'')))OR(t1.c1)))), LIKELY(DISTINCT (rt35.c4 IN (t0.c0, rt35.c3))), ((CAST(t1.c1 AS REAL))IS NOT(1.231859507E9)) FROM t0, t1, rt35 WHERE ('湰g'); -- 1ms;
SELECT DISTINCT LEAD((('1828242032')OR(((((rt35.c3)OR(rt35.c0)))OR(t0.c38)))), ((((- ('5'))))<=(((rt35.c1 IN ())))), UPPER((((rt35.c4))<>((rt35.c1))))) OVER () FROM t1, rt35 NATURAL JOIN t0 WHERE ((((-881300074 IN ('234825523', ''))) NOT BETWEEN (UNLIKELY(DISTINCT 0.1559561167514908)) AND (((x'') NOT BETWEEN (NULL) AND (0.016230699066872578))))); -- 0ms;
SELECT DISTINCT ((((((t0.c38)AND(x'e346')))OR(t1.c1)))==(((t0.c1) NOT NULL))) FROM rt35;SELECT ALL t1.c0 FROM t0, t1, rt35; -- 0ms;
SELECT ((((((rt35.c3) NOT BETWEEN (t1.c0) AND (t1.c1)))OR(rt35.c4 COLLATE NOCASE)))AND(((t1.c1) NOT BETWEEN (rt35.c3) AND (rt35.c4)))) FROM t0, t1 WHERE (CASE ((']nRV]')GLOB(x'1f7c'))  WHEN '1231859507' COLLATE BINARY THEN x'' WHEN CAST(x'' AS INTEGER) THEN (+ ('')) WHEN ((x'')-(NULL)) THEN ((0.8238984810191261) BETWEEN (x'') AND ('-881300074')) END);SELECT DISTINCT LAST_VALUE(((rt35.c1 IN (rt35.c2, 1335370469)) IN ())) OVER () FROM rt35, t1 WHERE ((((x'')) NOT BETWEEN ((((x'')<('')))) AND ((((-312486672)&(4.1213415E8)))))); -- 0ms;
SELECT DISTINCT ((MAX(rt35.c4))+(((t0.c0)+(t1.c0)))) FROM rt35, t1 WHERE (((HEX(DISTINCT x'a6fa')) NOT BETWEEN ((NOT (x'4ea9'))) AND (0.6651609649928982)));SELECT ALL COALESCE(((((t0.c38)AND(NULL)))OR(rt35.c0)), (((rt35.c4, t1.c1, t1.c2)) BETWEEN ((t0.c0, rt35.c3, t1.c1)) AND ((t0.c1, rt35.c4, t1.c0))), (x'' IN (t1.c0)), ((t0.c0) NOT NULL), ((((rt35.c0)AND(t0.c0)))AND(t0.c38)), ((NULL)<=(rt35.c3))), (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt35.c1))))AND(((((((((t0.c1)OR(rt35.c4)))OR(rt35.c4)))OR(rt35.c1)))AND(rt35.c3)))))OR((((rt35.c4)) BETWEEN ((t0.c38)) AND ((rt35.c3))))), (((t0.c1, t1.c2, t0.c38)) BETWEEN (((t0.c1 IN ()), ((((rt35.c3)OR(rt35.c2)))OR(rt35.c4)), (+ (rt35.c0)))) AND ((rt35.c0, 0.2502833529566162, '1000863119'))) FROM rt35, t1, t0 GROUP BY CASE t0.c0  WHEN t0.c1 THEN t1.c1 ELSE rt35.c4 END COLLATE RTRIM, (((rt35.c3)) NOT BETWEEN ((((((t0.c38)AND(rt35.c3)))OR(rt35.c2)))) AND ((rt35.c2 COLLATE NOCASE))), (NOT (NULL)); -- 1ms;
SELECT DISTINCT (((t1.c1)<=(t0.c1)) IN (((rt35.c2)%(rt35.c0)))) FROM rt35 WHERE ((((((('')IS NOT(NULL)))AND(((((0X10979fe3)OR(0.9633179381302386)))AND(0Xffffffffb3f9bd4f)))))AND((+ (0.3559363056066178))))) ORDER BY ((CAST(t1.c1 AS TEXT)) BETWEEN (((t0.c38)>=(t1.c2))) AND (HEX(DISTINCT t0.c0))) ASC;SELECT DISTINCT CAST(t0.c0 AS TEXT) COLLATE NOCASE FROM t1, rt35 ORDER BY ((((t0.c0)) NOT BETWEEN ((t0.c38)) AND ((rt35.c4))) IN ()) ASC, CAST((((t0.c1, rt35.c2, rt35.c3)) NOT BETWEEN ((t1.c1, t1.c2, t0.c1)) AND ((t1.c2, '-875545521', t0.c1))) AS BLOB) DESC  NULLS LAST, ((t0.c38 COLLATE NOCASE) BETWEEN (((t0.c0) IS FALSE)) AND (CASE rt35.c4  WHEN rt35.c0 THEN '|Xj' WHEN rt35.c0 THEN 'kk' WHEN rt35.c1 THEN t1.c2 ELSE rt35.c2 END)) ASC  NULLS FIRST;SELECT ALL (((NOT (NULL))) NOT BETWEEN (x'9fb2') AND (((((t0.c38)AND(t1.c1)))AND(t0.c1)))) FROM rt35, t1, t0 WHERE ((CAST(x'' AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT ((t1.c2 COLLATE RTRIM)&(rt35.c2 COLLATE NOCASE)) FROM t0, t1, rt35 GROUP BY -1.752878673E9; -- 0ms;
SELECT DISTINCT (((NOT (t1.c2))) NOTNULL), (((t1.c2, t0.c0, rt35.c4)) NOT BETWEEN (((((rt35.c0))>((rt35.c0))), CASE rt35.c1  WHEN t0.c0 THEN rt35.c4 ELSE rt35.c4 END, ((rt35.c4)>>(t1.c1)))) AND ((COUNT(*), (rt35.c3 IN ()), ((t0.c1) NOT BETWEEN (x'') AND (t1.c1))))), UNLIKELY((+ (rt35.c0))) FROM t1 WHERE (((((((((((NULL)GLOB(x'')))OR((~ (x'b6ae')))))AND((+ (x'04b5')))))AND(((x'b71c')<>('')))))AND((NOT ('')))));SELECT DISTINCT COUNT(*) FROM t1 WHERE (((((0.3241293310608617) NOT NULL)) ISNULL)); -- 0ms;
SELECT ALL NULL FROM t0, t1 WHERE (0.5323025588558062) ORDER BY ((t1.c1 IN (t0.c1)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((rt35.c0))==((rt35.c1))))LIKE(((rt35.c3) NOT BETWEEN (rt35.c1) AND (rt35.c3)))) FROM t1;SELECT DISTINCT NULL FROM rt35, t1 ORDER BY (((((((((t1.c1)OR(rt35.c3)))OR(t0.c0)))OR(t1.c0)))AND(rt35.c0)) IN ()); -- 0ms;
SELECT NULL FROM rt35, t0 GROUP BY json_object(rt35.c1, IFNULL(t0.c38, t1.c0)), LOWER(((((rt35.c2)OR(t1.c1)))OR(rt35.c3))), ((((((((((rt35.c0)AND(t0.c1)))AND(t0.c1)))OR(t1.c2)))AND(t0.c0)))IS NOT(((rt35.c2)>=(t0.c0))));SELECT DISTINCT SUM(((t1.c2) IS TRUE)) OVER () FROM rt35;SELECT CAST((((rt35.c1)) NOT BETWEEN ((rt35.c2)) AND ((t0.c0))) AS BLOB), ((rt35.c3 COLLATE RTRIM)-(CAST(t0.c38 AS TEXT))), ((((rt35.c1)|(rt35.c4)))||(t0.c1 COLLATE BINARY)), t0.c0, GROUP_CONCAT(((rt35.c2)*(t0.c0))) OVER ( RANGE  CURRENT ROW) FROM rt35, t1;SELECT ALL (- (((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c2)))) FROM t1 WHERE (CASE ((((0.7177138456470968)OR('-1')))OR(NULL))  WHEN ((((-1275478705)AND(NULL)))OR(x'')) THEN ((0.6079743098781404)AND('?WZ')) END); -- 0ms;
SELECT ALL (((('')AND(COALESCE(DISTINCT t1.c2, rt35.c1))))AND(x'')) FROM t1, rt35 INNER JOIN t0 ON (((rt35.c0 IN ()))>>(json_valid(t0.c0))) WHERE (((x'') NOT BETWEEN (0.4499523322248763) AND ((('') IS TRUE)))); -- 0ms;
SELECT ((((((1.27314464E8) IS TRUE))AND(t1.c0)))AND(((((t0.c38)OR(NULL)))OR(t1.c0)))), TRIM(CAST(t1.c2 AS TEXT)), NTILE(CASE ((t1.c0) IS FALSE)  WHEN t1.c2 THEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c1)) WHEN (t1.c0 IN ()) THEN STRFTIME(t1.c0, t1.c2, t1.c2) WHEN (((t1.c2, t1.c2, t1.c0, t1.c2, t1.c0)) BETWEEN ((t1.c1, t1.c2, t1.c2, t1.c1, -8.23179742E8)) AND ((t1.c0, t1.c1, t1.c0, t1.c0, t1.c0))) THEN ((t1.c2)!=(t1.c1)) ELSE (t1.c0 IN (t1.c2)) END) OVER () FROM t1 LIMIT -976700876;SELECT DISTINCT ((((((rt35.c4)AND(t0.c1)))OR(rt35.c2)))<=((t1.c0 IN ()))) FROM t1, rt35 LIMIT -1498996071;SELECT 0Xffffffffb24510df FROM rt35 WHERE (((CASE WHEN '950328261' THEN NULL WHEN x'' THEN x'2dcd' WHEN '1165953657' THEN NULL END)>(CASE WHEN NULL THEN x'' ELSE '_殧3' END))); -- 0ms;
SELECT ALL t1.c0, CASE ((t1.c2)IS NOT(rt35.c0))  WHEN json_type(t1.c2) THEN x'' END, (rt35.c4 IN ()) COLLATE BINARY FROM t0 WHERE (((((241165462) NOT BETWEEN (-1194607608) AND (NULL)))<>((+ (0.41593836505310466))))) GROUP BY ((((t1.c1)!=(rt35.c1)))OR((t0.c1 IN ()))), (((rt35.c3) NOT BETWEEN ('') AND (t1.c0)) IN ()), '0.017363897923777016' HAVING (((t1.c0 IN ())) NOT BETWEEN (((t1.c0) IS FALSE)) AND (LIKELY(t0.c1))) LIMIT -845924582;SELECT ALL ((((rt35.c3)OR(t1.c1))) NOT BETWEEN (t0.c38 COLLATE RTRIM) AND (t0.c0)) FROM t1, t0, rt35 ORDER BY rt35.c0 DESC  NULLS LAST; -- 0ms;
SELECT ALL CAST((('120495393') BETWEEN (rt35.c3) AND (rt35.c2)) AS BLOB) FROM t0, t1, rt35 WHERE (CASE WHEN (('-2035159957') ISNULL) THEN 0.8910444559715227 WHEN (NOT ('')) THEN NULL COLLATE BINARY WHEN json_type(x'') THEN ('1771422638' IN ()) END); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 NOT INDEXED, t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt35, t1 WHERE (CASE NULL COLLATE RTRIM  WHEN ((NULL) BETWEEN (0.6280466208950576) AND (2111446848)) THEN CASE NULL  WHEN '/' THEN 7.27642995E8 END ELSE ((0.9596791357249516)<<(NULL)) END) LIMIT 2117545510 OFFSET -295665608; -- 0ms;
SELECT (((t0.c0 IN (rt35.c4))) IS TRUE) FROM t1 WHERE (((CAST('0.9432511949561625' AS INTEGER)) BETWEEN ((((NULL)) BETWEEN ((NULL)) AND ((NULL)))) AND (((x'') IS FALSE)))) ORDER BY ((CASE WHEN NULL THEN rt35.c1 WHEN t0.c0 THEN rt35.c0 WHEN t1.c2 THEN rt35.c3 ELSE t1.c1 END)||((+ (rt35.c1)))) DESC;SELECT DISTINCT LIKELY(DISTINCT ((rt35.c3) NOT BETWEEN (t0.c1) AND (t0.c38))) FROM t1, t0, rt35; -- 0ms;
SELECT ALL ((((((t1.c0) NOT NULL))AND(((rt35.c3)>(rt35.c2)))))OR(((rt35.c2)+(rt35.c3)))), ((rt35.c1 IN ()) IN ()), ((((((((((t0.c38) BETWEEN (rt35.c0) AND (rt35.c3)))OR(t0.c1 COLLATE RTRIM)))AND(((((((((t0.c1)AND(rt35.c4)))AND(t1.c0)))AND(rt35.c2)))AND(t0.c1)))))AND((NOT (t0.c38)))))AND(((rt35.c4) IS TRUE))), ((((t1.c2) BETWEEN (rt35.c2) AND (t0.c0)))%(((t0.c0)LIKE(t0.c38)))), CAST((rt35.c2 IN ()) AS REAL) FROM t0, t1 LIMIT 1227816992 OFFSET -1024808496;SELECT DISTINCT (((~ (t1.c0))) NOT BETWEEN (0.6374173184001312) AND (((rt35.c0)-(rt35.c0)))) FROM t1 GROUP BY CASE WHEN ((rt35.c3)>>(t0.c0)) THEN ((t0.c38) NOT BETWEEN (t0.c0) AND (rt35.c4)) ELSE rt35.c3 COLLATE NOCASE END HAVING (((t1.c0)) NOT BETWEEN ((x'')) AND ((AVG(t1.c1))));SELECT DISTINCT (((((rt35.c3)-(rt35.c3)), (~ (t0.c38)), CAST(rt35.c4 AS INTEGER)))==((((((t0.c1)OR(t1.c2)))AND(rt35.c1)), (+ (t0.c38)), rt35.c0 COLLATE RTRIM))), ABS(SUM(rt35.c2)), (- (1.165953657E9)), (+ ((- (NULL)))), (((t0.c0)) BETWEEN ((x'f85d')) AND ((((rt35.c3)<>(t1.c2))))) FROM rt35, t1, t0 LIMIT 1394735679; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM t0 WHERE ((~ (CAST(0x70c0db6a AS BLOB)))) GROUP BY ((((rt35.c3) IS FALSE)) NOT BETWEEN (CAST(rt35.c3 AS REAL)) AND (rt35.c1));SELECT DISTINCT (RTRIM(t0.c38) IN (((x'75c5') BETWEEN (t1.c0) AND (t0.c1)), CAST(t0.c1 AS NUMERIC))) FROM rt35, t0 WHERE (((0.33042960790581866)/('0.21903015512835078')) COLLATE NOCASE);SELECT DISTINCT (((((t1.c2 IN ()))AND(rt35.c3)))AND(((NULL) BETWEEN (t1.c1) AND (rt35.c1)))), AVG(((rt35.c4) IS FALSE)), (NOT (t1.c2)) FROM t0 WHERE (((('')) BETWEEN (((0.5369013497527845 IN ('.w', x'')))) AND ((((x'')-(x''))))));SELECT DISTINCT (((t1.c0) NOTNULL) IN ()), AVG(((((t1.c0)AND(t1.c1)))OR(t0.c0))) OVER (), ((CASE rt35.c0  WHEN rt35.c2 THEN rt35.c4 WHEN t1.c0 THEN t0.c0 WHEN '' THEN t1.c0 ELSE t0.c38 END) BETWEEN (NULL) AND (CASE rt35.c0  WHEN t0.c0 THEN 0x4080e534 WHEN x'' THEN t0.c38 WHEN rt35.c0 THEN rt35.c3 ELSE t0.c0 END)) FROM rt35, t1, t0 WHERE (((((((((((NULL)AND(x'')))OR('{[]z')))OR(0.13691627332839484)))AND(0.06145539395411925))) NOT BETWEEN ((('1336241506')OR(1138393293))) AND (x'' COLLATE NOCASE))) ORDER BY ((((((((((((CASE WHEN t0.c38 THEN -1227269361 WHEN rt35.c1 THEN t0.c1 WHEN t0.c38 THEN t1.c2 ELSE '' END)OR('BO' COLLATE BINARY)))AND(((t1.c0)+(t0.c1)))))AND(t1.c1 COLLATE RTRIM)))AND(((rt35.c1)IS NOT(t0.c1)))))AND(t1.c0)))OR(((NULL) IS TRUE))); -- 0ms;
SELECT DISTINCT SUM(((((((((-1360589009)OR(rt35.c0)))OR(t1.c2)))OR(rt35.c0)))AND(rt35.c3))) OVER (), COUNT(*), NTH_VALUE((~ (((('', t0.c38, rt35.c1))>=((rt35.c3, t1.c2, t0.c38))))), (((rt35.c3)AND(rt35.c3)) IN ())) OVER (), t0.c1, ((rt35.c3) BETWEEN ((('1588892302') BETWEEN (rt35.c2) AND (rt35.c1))) AND (t0.c38 COLLATE BINARY)) FROM rt35, t0, t1;SELECT DISTINCT ((((t0.c1)OR(((t0.c0)<=(t1.c2)))))OR(COUNT(*))), (((rt35.c4) IS FALSE) IN ()), ((SUM(t1.c0)) IS FALSE) FROM t0, rt35, t1 WHERE ((((x'11f8')!=(-2025015493)) IN ())) ORDER BY (- (((t1.c2) ISNULL))); -- 0ms;
SELECT ALL (CAST(t1.c0 AS INTEGER) IN (((t1.c0)-(t1.c2)))) FROM rt35, t0, t1 WHERE (((((x'')IS(x''))) ISNULL)); -- 0ms;
SELECT ALL LIKELY(rt35.c4) COLLATE BINARY FROM t0, rt35; -- 0ms;
SELECT DISTINCT ((COUNT(*))<=(CAST(rt35.c1 AS TEXT))), GROUP_CONCAT(((rt35.c3) NOTNULL)), (((rt35.c1, x'754e', rt35.c2)) NOT BETWEEN ((CASE WHEN t1.c0 THEN rt35.c4 ELSE rt35.c4 END, t1.c2, (((rt35.c2))>=((NULL))))) AND ((CASE WHEN rt35.c3 THEN t1.c2 WHEN rt35.c0 THEN rt35.c3 WHEN t0.c38 THEN t1.c1 END, (((t0.c38))>((rt35.c2))), CAST(t1.c1 AS REAL)))) FROM rt35, t1, t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0, t1 WHERE (((('-477254839')) BETWEEN ((((x'72f34db0')!=(x'')))) AND ((((0.6372598384299262)&(-1.7976931348623157E308)))))) GROUP BY CAST(((t0.c38) BETWEEN (rt35.c4) AND (t1.c1)) AS REAL) HAVING CAST(((rt35.c0) IS FALSE) AS INTEGER);SELECT ALL ((CAST(t1.c2 AS TEXT)) BETWEEN (NULL) AND (t1.c1)) FROM rt35, t0 WHERE (CASE WHEN CASE WHEN 0.005029695738016704 THEN NULL END THEN CAST('YEH3GSp' AS REAL) END);SELECT DISTINCT (((t0.c0)) NOT BETWEEN (((((t1.c1))<=((t1.c0))))) AND ((QUOTE(rt35.c3)))) FROM t0 WHERE ((((x'7aa4' IN ())) ISNULL));SELECT (((rt35.c2, rt35.c3, rt35.c2)) NOT BETWEEN ((x'', (rt35.c0 IN ()), ((((((((t1.c0)AND('-41686318')))AND(t0.c1)))OR(rt35.c4)))OR(rt35.c0)))) AND ((-1.221887655E9, (- (t1.c1)), t1.c1))) FROM t0 LIMIT 110041346;SELECT DISTINCT SQLITE_VERSION() FROM t1, rt35; -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS NUMERIC))>=(((t1.c0)=(t1.c1)))) FROM t1, rt35, t0 WHERE (json_insert(highlight(0X2397fdfb, x'', x'', NULL), ((('1243417875', 0x3ced4177, '0.7521683403455588')) NOT BETWEEN ((NULL, 0xfffffffff3fe9549, 0.8849739581668208)) AND (('66145377', NULL, ''))), CASE 0.9432511949561625  WHEN '458010193' THEN '8' ELSE NULL END)); -- 0ms;
SELECT ALL COUNT(*) FROM rt35, t0, t1; -- 0ms;
SELECT 'kS' FROM rt35, t0 GROUP BY (((((((t1.c1)AND(rt35.c1)))OR(t0.c38))))>=((((rt35.c0) NOTNULL)))), (rt35.c0 COLLATE BINARY IN (HEX(0Xffffffffb823294a))), ((((t0.c38)>(rt35.c4))) ISNULL) HAVING CHAR(t0.c38 COLLATE BINARY, (((rt35.c2, rt35.c1, t1.c2))>((rt35.c1, t0.c38, t0.c1))), NULL);SELECT CASE ((t0.c0)+(t1.c1))  WHEN ABS(rt35.c4) THEN CASE t1.c2  WHEN t0.c38 THEN t0.c38 END WHEN x'' THEN CAST(rt35.c1 AS TEXT) WHEN 0.52294624601401 THEN ((t0.c38)AND(rt35.c1)) END, UPPER(DISTINCT CASE t1.c2  WHEN rt35.c0 THEN t1.c1 ELSE t1.c2 END), ((GROUP_CONCAT('766763939')) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((rt35.c4)IS NOT('4m2<5lD')))), rt35.c1, COUNT(CASE t1.c2  WHEN NULL THEN t0.c38 WHEN rt35.c3 THEN t1.c0 WHEN rt35.c2 THEN rt35.c4 END) FROM t1, t0, rt35; -- 0ms;
SELECT (((t1.c2))>=((rt35.c3))) COLLATE RTRIM, CAST(((t0.c0) BETWEEN (rt35.c0) AND (x'5276')) AS TEXT), TOTAL(CASE WHEN t1.c0 THEN rt35.c3 ELSE rt35.c1 END) OVER () FROM t0 WHERE (UPPER(CASE WHEN NULL THEN -1.177588112E9 ELSE x'' END));SELECT ALL CAST((rt35.c3 IN (rt35.c4)) AS INTEGER) FROM t0, rt35; -- 1ms;
SELECT DISTINCT ((((rt35.c3) BETWEEN (rt35.c2) AND (rt35.c4))) NOT BETWEEN (((t1.c1) NOT BETWEEN (rt35.c0) AND (rt35.c0))) AND ((t0.c0 IN ()))) FROM rt35, t1 LEFT OUTER JOIN t0 ON (((NOT (rt35.c4)))<(CASE WHEN rt35.c4 THEN rt35.c3 END)) WHERE (((('-1573042367' IN ())) IS FALSE)); -- 0ms;
SELECT ALL MIN((t0.c38 IN (t1.c2, rt35.c3))) FROM rt35, t1 WHERE (((((-1577407630)AND(((0.12281878938013246)IS NOT('1566705557')))))AND(('-1221887655' IN ())))) GROUP BY (((rt35.c2 IN (t1.c0)))GLOB(CASE rt35.c0  WHEN rt35.c1 THEN rt35.c2 ELSE t1.c0 END)), CAST(rt35.c2 AS TEXT) COLLATE BINARY, ((NULL)IS(((rt35.c2)-(t0.c0)))) HAVING rt35.c4 ORDER BY (((t1.c2)>=(t1.c0)) IN (NULL COLLATE RTRIM));SELECT ALL ((CAST(t0.c38 AS BLOB)) NOTNULL) FROM t0 WHERE (x'' COLLATE BINARY); -- 0ms;
SELECT ((((((rt35.c4) NOT BETWEEN (rt35.c3) AND (t1.c2)))OR(rt35.c3 COLLATE BINARY)))OR(LOWER(rt35.c0))) FROM t1 WHERE (CAST(((NULL)>(NULL)) AS TEXT));SELECT ((NULL) NOT BETWEEN (((rt35.c4) NOT NULL)) AND (CASE WHEN t1.c2 THEN rt35.c4 ELSE t1.c0 END)), NTILE(((((rt35.c4)|(t1.c2)))>(((rt35.c1)GLOB(t1.c2))))) OVER (), (- (TYPEOF(DISTINCT t1.c0))) FROM t1, rt35; -- 0ms;
SELECT DISTINCT ((((rt35.c4)<<(rt35.c0)))%((t1.c2 IN ()))), ((0xfffffffff6c4a2db) NOT BETWEEN ((rt35.c2 IN (rt35.c0))) AND (GROUP_CONCAT(rt35.c3))), ((((((((CASE rt35.c3  WHEN '5' THEN t1.c0 ELSE rt35.c2 END)OR(t0.c38)))AND(((rt35.c0) NOT BETWEEN (NULL) AND (t1.c2)))))OR(NULL COLLATE NOCASE)))AND(((t1.c1) NOT BETWEEN (rt35.c0) AND (rt35.c4)))) FROM rt35, t0;SELECT CASE WHEN ((t0.c1) BETWEEN (rt35.c3) AND (x'5601')) THEN ((t0.c38) NOTNULL) WHEN ((t0.c0)<(t1.c2)) THEN ((t1.c0)||(t0.c38)) WHEN (~ (t1.c0)) THEN ((t0.c1) BETWEEN (t1.c1) AND (t1.c2)) END, ((t1.c1)<(((t0.c1)GLOB(t1.c0)))), (((((x'e825') NOT BETWEEN (t0.c1) AND (rt35.c4))))==((((((((((t1.c0)AND(rt35.c0)))AND(rt35.c2)))OR(t0.c1)))AND(rt35.c0))))) FROM t0, t1, rt35 WHERE (((CAST(-6.38364728E8 AS REAL))*(CAST(x'' AS BLOB)))); -- 0ms;
SELECT MIN(CASE WHEN rt35.c3 THEN t0.c38 ELSE rt35.c0 END), ((((t0.c0) IS TRUE))||(((t1.c1)>(t1.c2)))), 0x796aa20 FROM rt35 WHERE (json_array_length((x'' IN ())));SELECT (json_valid(t0.c1) IN (AVG(rt35.c1))), NULL, ((t1.c2)+(t0.c0)) COLLATE BINARY FROM t1, rt35, t0 WHERE ((((5.77456372E8)) BETWEEN ((TYPEOF(DISTINCT x''))) AND (((('0.963076312901782') NOTNULL))))); -- 0ms;
SELECT ALL ((TOTAL(t0.c38))GLOB(((((rt35.c3)AND(t1.c2)))AND(rt35.c4)))), (+ (CASE WHEN '' THEN 1.505352944E9 WHEN rt35.c0 THEN rt35.c1 WHEN t0.c38 THEN t0.c0 END)), ((((((((((t0.c38)AND(rt35.c3)))OR(rt35.c1)))AND(rt35.c3)))OR(t1.c1))) IS TRUE) FROM t1;SELECT ALL (NOT (t0.c1 COLLATE RTRIM)), GROUP_CONCAT((+ (rt35.c2))) OVER (), DENSE_RANK() OVER (), (((rt35.c2 COLLATE RTRIM))>(((t0.c0 IN ())))), (((t0.c0)) NOT BETWEEN ((rt35.c0)) AND ((rt35.c1))) COLLATE NOCASE FROM rt35, t1 GROUP BY (((t0.c1)) BETWEEN ((rt35.c3)) AND ((t0.c0 COLLATE BINARY))) HAVING (((((rt35.c2)AND(t1.c1)))OR(t1.c1)) IN (((rt35.c2) NOT BETWEEN (t0.c38) AND (rt35.c1)))) ORDER BY t0.c38;SELECT ALL t1.c0 FROM t0, t1, rt35; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(LIKE(rt35.c4, t0.c1)) OVER ( ORDER BY t1.c2) FROM rt35, t0, t1 WHERE (((((((NULL)+('Ri')))OR((('''') BETWEEN (NULL) AND (-684502928)))))OR(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT ((((t1.c0)AND(COALESCE(t0.c1, 0.9822033296767281))))OR(ROUND(t1.c1, t0.c0))), (- (((t0.c1) ISNULL))), COUNT(*) OVER () FROM t0, t1, rt35 WHERE (CAST(((NULL) BETWEEN ('66145377') AND (NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((0.7260970409584278)AND(rt35.c2)))OR(rt35.c0)) COLLATE NOCASE FROM rt35, t1, t0; -- 0ms;
SELECT DISTINCT (~ (CASE 0.7405348516457158  WHEN rt35.c1 THEN t0.c38 END)) FROM t0;SELECT DISTINCT RTRIM((t1.c1 IN ())) FROM t1 LIMIT -1360589009; -- 0ms;
SELECT DISTINCT ((t1.c2 IN ()) IN ()) FROM t0, rt35, t1 WHERE (CASE WHEN 0x299b640 THEN (x'' IN ()) END); -- 0ms;
SELECT (((rt35.c3)) BETWEEN (((t1.c2 IN ()))) AND (((((0.8859693050605522, rt35.c3, rt35.c1))=((t1.c1, rt35.c3, t1.c0)))))) FROM t1, t0, rt35; -- 0ms;
SELECT DISTINCT (~ (((rt35.c2) NOTNULL))) FROM t0;SELECT DISTINCT x'' FROM rt35, t1; -- 0ms;
SELECT SUM(CASE rt35.c1  WHEN t1.c1 THEN -9.28219026E8 END) OVER (), ((CAST(rt35.c4 AS NUMERIC))<<(CAST(rt35.c0 AS BLOB))), CASE t0.c0 COLLATE RTRIM  WHEN json_object(t0.c0, t1.c1) THEN ((rt35.c1) BETWEEN (t0.c38) AND (rt35.c4)) END FROM rt35 WHERE (((+ (0.7352089525947718)) IN ()));SELECT ((((((rt35.c3) NOT BETWEEN (t1.c2) AND (rt35.c0)))OR(t1.c0)))OR(CAST(t0.c0 AS TEXT))) FROM rt35;SELECT DISTINCT GROUP_CONCAT(CASE t0.c38  WHEN t0.c38 THEN rt35.c2 WHEN rt35.c0 THEN rt35.c0 WHEN t1.c2 THEN t0.c1 ELSE rt35.c2 END) FROM t0 WHERE (CAST(((x'41f4')AND('2044645311')) AS TEXT)) ORDER BY ((((rt35.c2)>(rt35.c3))) NOT BETWEEN (((((t1.c2)AND('234825523')))OR(t1.c1))) AND ((NOT (t1.c0))));SELECT DISTINCT CASE rt35.c0 COLLATE RTRIM  WHEN (~ (t1.c2)) THEN ((rt35.c3) NOTNULL) ELSE (~ (t0.c38)) END, (- (((rt35.c0)+(rt35.c2)))), (+ (((((((((((((t1.c0)AND(t0.c0)))OR(rt35.c0)))OR(t1.c0)))AND(rt35.c0)))OR(rt35.c2)))OR(t0.c1)))) FROM t1 GROUP BY ((json_insert(t1.c1, rt35.c3, 0.14334008175297475))AND((((NULL))==((rt35.c0)))));SELECT ALL ((((t1.c2)IS NOT(rt35.c0))) NOT NULL) FROM rt35, t0, t1; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CASE rt35.c0  WHEN t1.c0 THEN t1.c1 WHEN rt35.c0 THEN rt35.c2 WHEN rt35.c0 THEN t1.c2 ELSE t1.c1 END, CAST(t1.c0 AS NUMERIC)) FROM t1, t0, rt35 WHERE ((~ ('-1418541455' COLLATE RTRIM))) ORDER BY CAST(0.08287816174719465 COLLATE NOCASE AS BLOB); -- 0ms;
SELECT DISTINCT ((UNICODE(t0.c0)) ISNULL), ((((((t1.c2)*('103187653')))OR(rt35.c0 COLLATE BINARY)))OR(rt35.c1 COLLATE BINARY)), (((('456743561') IS FALSE))-(((t0.c0) NOTNULL))) FROM t0, t1, rt35; -- 0ms;
SELECT DISTINCT ((NULL)|(CAST(t1.c0 AS REAL))) FROM rt35 WHERE (((x'38d456be') IS TRUE) COLLATE RTRIM);SELECT DISTINCT t0.c1, (((((((((((((rt35.c4)OR(t0.c1)))OR(0.4868689102639763)))AND(rt35.c3)))OR(t0.c38)))AND(rt35.c4)))AND(t0.c0)) IN ()), ((((((t0.c1)AND(t0.c0)))OR(rt35.c1))) NOT BETWEEN (((rt35.c2) NOT BETWEEN (rt35.c3) AND (t1.c2))) AND (((t1.c2) NOT BETWEEN (NULL) AND (t0.c1)))) FROM rt35, t0, t1 WHERE (CASE '\nK<?5'  WHEN x'' THEN 0.1309263363069475 WHEN NULL THEN '[]' WHEN -1.445026381E9 THEN NULL ELSE 0.6561834582157029 END COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT ALL CASE WHEN CAST(rt35.c0 AS BLOB) THEN MIN(rt35.c3) ELSE CASE WHEN rt35.c4 THEN rt35.c0 WHEN '0.52294624601401' THEN rt35.c2 WHEN t0.c1 THEN NULL ELSE t0.c0 END END FROM t0, t1 ORDER BY CASE t0.c1 COLLATE BINARY  WHEN ((((rt35.c1)AND(t0.c1)))AND(t1.c1)) THEN ((((rt35.c1)AND(rt35.c2)))OR(t0.c1)) WHEN t1.c0 COLLATE NOCASE THEN (0.3627183730739042 IN ()) WHEN CASE WHEN NULL THEN t1.c0 ELSE t1.c1 END THEN ((((((((rt35.c4)OR(t1.c1)))OR(t1.c0)))AND(rt35.c3)))AND(rt35.c0)) END DESC  NULLS LAST, t1.c0  NULLS LAST;SELECT DISTINCT ((x'') BETWEEN (t1.c0) AND (((((t1.c1)OR(t0.c38)))AND(rt35.c3)))) FROM rt35;SELECT DISTINCT ((CASE WHEN rt35.c4 THEN rt35.c3 ELSE t1.c1 END) BETWEEN ((- (t0.c38))) AND (CASE WHEN t0.c38 THEN -1.752878673E9 ELSE rt35.c1 END)), ((SUM(rt35.c0))%((rt35.c3 IN ()))), (((t0.c1)) BETWEEN ((AVG(t0.c0))) AND (((t1.c2 IN (rt35.c4))))) FROM t1 GROUP BY ((((((((((((CASE WHEN rt35.c1 THEN t0.c0 ELSE 0xffffffffa8d9a98c END)OR(CASE rt35.c3  WHEN rt35.c2 THEN t0.c0 ELSE t1.c2 END)))AND((('') NOT BETWEEN (t1.c2) AND (rt35.c4)))))AND(((((t0.c0)AND(rt35.c2)))OR(rt35.c0)))))OR('')))AND(((((rt35.c0)AND(rt35.c0)))OR(rt35.c0)))))OR(((t0.c0) NOT BETWEEN (rt35.c1) AND (1.000863119E9)))) HAVING LIKELIHOOD(ABS(DISTINCT t0.c1), 0.7047696358319778);SELECT DISTINCT (((t0.c38 IN ())) NOT BETWEEN (((t1.c1) NOT NULL)) AND (CAST(t1.c1 AS INTEGER))) FROM rt35, t0, t1 WHERE (JULIANDAY((((('㻀I焧m9')OR(NULL)))AND(NULL)), '1499025012' COLLATE BINARY, (('P%5뇫ą抰!u#')IS NOT(NULL)), ((0.21545840513030712)==(NULL)), (~ (NULL)), (NOT (x'')), CAST(0.5542576375901977 AS REAL))); -- 0ms;
SELECT DISTINCT (+ (SUM(t1.c2))) FROM t0;SELECT ALL ((0xfffffffff41fdcd8) NOT NULL), IFNULL((((t1.c2))>((rt35.c1))), 'P%5뇫ą抰!u#' COLLATE NOCASE), COUNT(*) FROM rt35, t0, t1; -- 0ms;
SELECT DISTINCT (~ (CAST(t1.c0 AS REAL))) FROM t1, t0 LIMIT -1326209226 OFFSET 993458055; -- 0ms;
SELECT DISTINCT (((((((((rt35.c2 IN ()))OR(SUM(rt35.c3))))AND(MAX(rt35.c0))))OR((((t0.c38))<((rt35.c3))))))OR(((rt35.c4) BETWEEN (rt35.c3) AND (rt35.c0)))) FROM t1;SELECT DISTINCT ((t0.c38)==(t1.c1)) FROM rt35;SELECT ALL ((((t0.c38)<=(t1.c2)))=((- (rt35.c1)))) FROM t0, rt35 WHERE (CAST(TIME('1288384918', 0.3169452364999371, x'', '-1573042367', 0.46761011043580547) AS INTEGER));SELECT CASE WHEN ((rt35.c2)&(rt35.c4)) THEN ((t1.c2)IS NOT(x'7111')) END FROM t1, rt35 LIMIT 1321480629 OFFSET 1033852075; -- 0ms;
SELECT ALL ((MAX(t0.c38)) NOT BETWEEN (LIKELY(rt35.c0)) AND (((rt35.c3) BETWEEN (rt35.c3) AND (t1.c0)))) FROM t1, t0, rt35; -- 0ms;
SELECT GROUP_CONCAT(CAST(rt35.c2 AS REAL)) OVER (), ((rt35.c0) IS FALSE), (((t0.c0) BETWEEN (t0.c38) AND (t0.c1)) IN ()) FROM rt35, t1, t0 WHERE ((('1977680695')<=(SQLITE_VERSION()))) GROUP BY '1091663683' HAVING UPPER(((rt35.c0)*(0.2546175828154451))) LIMIT -662601241; -- 0ms;
SELECT DISTINCT t1.c1, TIME(((t1.c1)%(rt35.c0)), NULL, ((rt35.c1) NOT BETWEEN (t1.c2) AND (t1.c2)), NULL, ((x'') BETWEEN (rt35.c2) AND (t1.c0))), ((rt35.c0 COLLATE NOCASE) NOT BETWEEN (((rt35.c0) NOTNULL)) AND ((t0.c0 IN ()))) FROM rt35 LIMIT -1537645008;SELECT DISTINCT (((((t0.c1))>((rt35.c4)))) BETWEEN (t0.c38) AND (CASE WHEN x'' THEN '' ELSE rt35.c1 END)) FROM rt35, t0 WHERE (CAST(-3.12486672E8 AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT ALL ((CASE WHEN t0.c0 THEN rt35.c2 ELSE t1.c0 END)|((- (t1.c2)))), ((t1.c1 IN (rt35.c3)) IN ((+ (t1.c1)))), COALESCE(DISTINCT rt35.c0, (t0.c0 IN (t1.c0)), ((-1.798348E7)==(t0.c0)), t1.c0 COLLATE RTRIM, (((t1.c2))<((t0.c0))), AVG(t1.c1)) FROM t1, t0 WHERE (((CAST(0Xffffffff978531af AS INTEGER)) BETWEEN (CAST(x'' AS BLOB)) AND (CASE WHEN 'm&' THEN 0X2cccd556 END)));SELECT ALL (~ ((((t1.c2, t1.c0, t0.c0)) NOT BETWEEN ((rt35.c3, t0.c38, t0.c0)) AND ((t1.c0, t1.c2, '0.9367010954637066'))))) FROM t0, rt35 NOT INDEXED LIMIT -1150713918 OFFSET 1657003989;SELECT DISTINCT CAST(t1.c2 AS TEXT) FROM t1, t0, rt35 WHERE (json_array(CAST(NULL AS REAL), (((NULL))=((NULL))))); -- 0ms;
SELECT ((((((rt35.c3)AND(t0.c38)))OR(x'')))%(t0.c0)) FROM t1 GROUP BY CASE WHEN ((((t1.c1)OR(rt35.c1)))AND(t1.c2)) THEN (((rt35.c4)) NOT BETWEEN ((rt35.c0)) AND ((t0.c1))) ELSE CASE t0.c0  WHEN t1.c0 THEN t0.c0 WHEN rt35.c1 THEN t1.c2 WHEN t1.c2 THEN rt35.c4 ELSE t0.c38 END END;SELECT DISTINCT TOTAL(((t0.c0) NOT BETWEEN (rt35.c2) AND (t1.c1)) COLLATE RTRIM) OVER ( ORDER BY (+ (CASE WHEN NULL THEN '' END))  NULLS LAST, CASE WHEN CAST(t1.c1 AS BLOB) THEN ((rt35.c4)<<(t0.c1)) ELSE x'' END) FROM t0, rt35, t1 WHERE (NULLIF(DISTINCT 0.3932871747794009, CASE NULL  WHEN '-17983480' THEN x'' END)); -- 1ms;
SELECT DISTINCT (((NOT (rt35.c0))) ISNULL) FROM rt35 WHERE (x'9a3defad'); -- 0ms;
SELECT (((- (t1.c0))) IS FALSE), (rt35.c1 IN ()), ((t1.c2) BETWEEN (rt35.c3) AND (0.6107596942795326)) COLLATE RTRIM FROM t1, t0, rt35 WHERE (UNICODE(NULLIF(DISTINCT '2111446848', '-2113941137'))) GROUP BY (TRIM(rt35.c3, rt35.c3) IN ()), x'' COLLATE RTRIM, ((t0.c1)!=(0.9138964848093558)); -- 0ms;
SELECT DISTINCT (((rt35.c1)&(rt35.c2)) IN ((- (t0.c1)))) FROM rt35, t0, t1 WHERE (((((NULL) ISNULL)) NOT NULL)); -- 0ms;
SELECT ALL json(t1.c2) FROM t1 WHERE (((((TRIM(DISTINCT '0.3354381809700744', 1104279448))AND(x'' COLLATE NOCASE)))OR((((0.2002566777869209, NULL, 'b~')) BETWEEN ((0.3468417078640277, '''3-P632143068208642646 571-748T8062762896523516603T-6562940358431728251 -7113445810475853846T106795569737308796:-7381299695348779676:-7201032272189758925 h', 'kXKJ>^Uu')) AND ((0.16158094790561062, 9223372036854775807, '-31960065')))))) ORDER BY (((CASE t1.c1  WHEN rt35.c3 THEN rt35.c4 END, (NOT (0.7553590370769576)), (((t0.c0, t1.c1, t0.c38))<>((t1.c0, t0.c1, rt35.c1)))))=((((rt35.c0)OR(0.19190626677931644)), CAST(t0.c38 AS BLOB), CHAR(t1.c1)))), ((rt35.c4 COLLATE RTRIM)<(((((((((rt35.c4)OR(t0.c38)))AND(t1.c2)))OR(t1.c1)))AND(t1.c0)))) ASC;SELECT ALL ((CASE rt35.c4  WHEN t1.c1 THEN NULL ELSE t0.c0 END)+(CASE WHEN '0.8051133587689712' THEN NULL END)) FROM t1, t0 WHERE (((((((0.7387168865575067)|(x'')))OR((NOT (NULL)))))OR((NULL IN ()))));SELECT DISTINCT (((((rt35.c4, rt35.c0, t0.c0)) NOT BETWEEN ((rt35.c0, t1.c1, rt35.c2)) AND ((rt35.c2, t1.c0, t0.c38)))) IS TRUE) FROM t1 WHERE (LIKELY('') COLLATE BINARY) ORDER BY ((CASE t0.c1  WHEN t0.c38 THEN rt35.c4 ELSE rt35.c2 END)>>((((t0.c1, x'', ''))<=((t1.c2, rt35.c3, rt35.c4))))) ASC  NULLS LAST;SELECT ALL ((((((((TRIM(DISTINCT rt35.c4))OR(CASE t1.c2  WHEN rt35.c2 THEN t0.c0 ELSE t1.c2 END)))AND(t1.c1 COLLATE RTRIM)))OR(((t0.c0)/(t0.c38)))))OR(t0.c1 COLLATE RTRIM)) FROM t0;SELECT (x'' IN (((rt35.c0)==(t1.c0)))), (((((t1.c1)AND(rt35.c1)), CAST(t0.c0 AS BLOB), (((rt35.c4))>((t1.c2)))))==(('5{}P', (('-1024808496') BETWEEN (rt35.c0) AND (NULL)), CAST(t0.c1 AS NUMERIC)))), rt35.c2 FROM t1 WHERE (((NULL) NOT BETWEEN ('-2077425252') AND (x'')) COLLATE NOCASE);SELECT ALL (((rt35.c0 IN ())) BETWEEN (((t0.c0) IS TRUE)) AND (rt35.c0 COLLATE RTRIM)), t0.c38, ((CASE t0.c0  WHEN rt35.c4 THEN rt35.c4 ELSE '-1405853057' END)>=(CASE WHEN t1.c1 THEN -2.95665608E8 END)) FROM t1, rt35, t0; -- 0ms;
SELECT DISTINCT (- (((t1.c0)%(rt35.c3)))) FROM rt35;SELECT DISTINCT (SUBSTR(t0.c0, t1.c1) IN ()), ((((((t0.c38))>((rt35.c1)))))>=((AVG(t0.c0)))), ((((t0.c1)*(t0.c1))) NOT NULL) FROM t0 NOT INDEXED WHERE ((- (CAST('233175154' AS NUMERIC)))) GROUP BY (((NULL)) NOT BETWEEN (('J')) AND ((((-1.31305177E8) NOT BETWEEN (rt35.c4) AND (t0.c0))))) HAVING AVG(t1.c0);SELECT DISTINCT ((t1.c0) NOT BETWEEN (((((t1.c0)OR(rt35.c0)))OR(t0.c1))) AND (CAST(rt35.c4 AS NUMERIC))) FROM rt35 WHERE (((CAST(x'' AS NUMERIC))!=((('1735390034') NOT BETWEEN (x'') AND (NULL)))));SELECT DISTINCT 184419596, (+ (((rt35.c0) IS FALSE))), ((((t1.c0)<=(rt35.c2))) IS FALSE) FROM t0, t1, rt35 WHERE (((0.22709569553039888 IN (0Xfffffffff68ff6da, '-469119575')) IN ())); -- 0ms;
SELECT DISTINCT 0.30847238227410156 FROM t1, t0, rt35 WHERE (CAST(((NULL)==(x'')) AS BLOB)); -- 0ms;
SELECT COUNT(*) OVER () FROM t1, rt35, t0 WHERE (((((x'8058') IS FALSE)) NOT BETWEEN ((+ (NULL))) AND ((('-368984580')/(x''))))); -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1, rt35, t0 WHERE ((((NULL)) BETWEEN (((((x'')) NOT BETWEEN ((0.11483239420839664)) AND ((-8.45924582E8))))) AND ((((('Y+⹁3', '7YC', x'ee21', x'6844', NULL)) NOT BETWEEN ((-160981827, 0.5753846337140165, '439074555', NULL, '727642995')) AND (('<]D', -2.035159957E9, NULL, '0.9427972072490588', '+F[ꭉU埸^%'))))))); -- 0ms;
SELECT DISTINCT MIN(LIKELY(rt35.c0)) FROM t1, rt35, t0 ORDER BY ((((t1.c0)<(t0.c0))) IS FALSE) DESC  NULLS LAST, CASE WHEN ((t1.c0) NOT NULL) THEN TIME(rt35.c0, t1.c0, 0.45677913088840516, t1.c2, rt35.c2, NULL, rt35.c4) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(rt35.c0 AS NUMERIC)) BETWEEN (((t1.c1)LIKE(t0.c1))) AND (((x'7a5c') NOT BETWEEN (rt35.c0) AND (t0.c1)))) FROM t1;SELECT DISTINCT MAX(rt35.c0) COLLATE BINARY FROM t0, rt35, t1 LIMIT 1940995516; -- 0ms;
SELECT DISTINCT json(CAST(rt35.c2 AS NUMERIC)) FROM t0 WHERE (((((x'') IS TRUE)) NOT NULL));SELECT ALL SUM(TYPEOF(t0.c38)) FROM t1 WHERE (x'');SELECT DISTINCT (((rt35.c4 IN ()))AND(((x'')+('1552026956')))) FROM t1, t0; -- 0ms;
SELECT DISTINCT (LIKELY(rt35.c4) IN ()) FROM t0, t1, rt35 WHERE (((((((((x'')AND(NULL COLLATE BINARY)))OR(NULL)))AND((NULL IN ('.2')))))AND(((x'f1513dba')|(x''))))); -- 0ms;
SELECT ALL rt35.c4 FROM rt35, t1, t0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT (t1.c2 IN ())), ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (((t0.c38) BETWEEN (t1.c2) AND (t0.c0))) AND (CASE t1.c1  WHEN t1.c0 THEN t1.c0 WHEN t1.c2 THEN t0.c1 WHEN t0.c38 THEN rt35.c0 END)), ((t0.c38) BETWEEN (rt35.c4) AND (t1.c1)) COLLATE NOCASE FROM t0;SELECT DISTINCT ((SUM(rt35.c3)) NOT BETWEEN (((t0.c0)LIKE(NULL))) AND (((((rt35.c4)AND(rt35.c1)))OR(rt35.c1)))), QUOTE(((t0.c1) NOT NULL)), ((CAST(t0.c38 AS BLOB)) NOT BETWEEN (LOWER(rt35.c2)) AND ((((rt35.c1, t0.c38, t1.c2)) NOT BETWEEN ((t1.c1, rt35.c3, x'')) AND ((t0.c38, rt35.c3, t1.c2))))) FROM t1 WHERE (CAST('-1103416329' COLLATE RTRIM AS TEXT));SELECT ALL ((-188360244)OR(((rt35.c4)>>(t1.c0)))) FROM t0, t1, rt35; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c38))&(((rt35.c2) BETWEEN (rt35.c0) AND (t1.c2)))) FROM rt35, t1;SELECT DISTINCT ABS(((t0.c0)/(t1.c1))) FROM t0;SELECT DISTINCT CASE (((0.22603598988986418)) BETWEEN ((t0.c0)) AND ((rt35.c0)))  WHEN CAST(rt35.c2 AS REAL) THEN AVG(t1.c1) END, DATE(t1.c0, (- (rt35.c4)), CASE WHEN t1.c0 THEN t1.c1 END, ((t1.c1)OR(rt35.c3)), AVG(t1.c1)), NULL COLLATE BINARY FROM t0, t1 LIMIT -1085122446;SELECT ALL SUM(CAST(t0.c1 AS TEXT) COLLATE NOCASE) OVER () FROM t1, rt35;SELECT DISTINCT CAST(TOTAL(t1.c0) AS INTEGER) FROM t0 WHERE (((((((NULL) IS TRUE))AND(((((NULL)AND('-1062622257')))OR(-1910170811)))))OR(((NULL) BETWEEN (NULL) AND ('1940995516')))));SELECT AVG(COUNT(*)) FROM t0, t1 WHERE ((((((x'' IN ()))OR(NULL)))AND(((NULL) NOT BETWEEN (NULL) AND (0.8225513427781762)))));SELECT ALL (((((((t1.c2, t1.c2, t0.c0))<((x'4da5', rt35.c1, x'1cdc'))))OR(LIKE(rt35.c1, t0.c0))))OR(CASE WHEN t1.c1 THEN t1.c2 END)) FROM rt35, t1 WHERE ((((((-0.0) ISNULL)))=((CASE x'6aa2'  WHEN NULL THEN NULL WHEN 0.8594893681898367 THEN 'q41T\r+' WHEN 'Zl' THEN '\r}&+Q' WHEN NULL THEN 'Gh' WHEN x'' THEN x'2391' ELSE x'' END))));SELECT ((((t1.c1)<(rt35.c3)))LIKE(LAST_INSERT_ROWID())) FROM t0 WHERE ((0.009111509051583866 IN ()));SELECT DISTINCT CASE WHEN ((rt35.c4)AND(t1.c1)) THEN CASE t1.c2  WHEN 0.875230035247209 THEN rt35.c0 ELSE 0.29259218621594274 END END FROM t1, rt35, t0; -- 0ms;
SELECT DISTINCT (((CAST(t1.c0 AS TEXT)))=((CAST(rt35.c0 AS NUMERIC)))) FROM t1 WHERE (((((((((((((((0.5386822723299985)AND(NULL)))AND(1.336241506E9)))AND(x'')))OR(0.7777833014879949)))OR(0.5369013497527845)))OR(x'30fe')))LIKE((0.8984032328724854 IN (NULL)))));SELECT CAST((NOT (t1.c1)) AS TEXT) FROM t1; -- 0ms;
SELECT t1.c1, CASE CAST(t1.c2 AS BLOB)  WHEN MAX(t0.c38) THEN (rt35.c4 IN ()) ELSE ((t0.c1) BETWEEN (t1.c2) AND (rt35.c3)) END, ((((t1.c0) IS FALSE)) BETWEEN (CASE t1.c0  WHEN rt35.c4 THEN rt35.c2 WHEN rt35.c1 THEN t0.c38 WHEN t1.c1 THEN rt35.c2 WHEN t0.c0 THEN rt35.c4 WHEN x'06a3' THEN t1.c2 ELSE rt35.c4 END) AND (COUNT(t1.c0))) FROM rt35, t0 WHERE (((x'') NOT NULL) COLLATE BINARY);SELECT CASE t0.c38  WHEN TOTAL(rt35.c3) THEN rt35.c2 END FROM t0, rt35 FULL OUTER JOIN t1 ON ((((rt35.c1) BETWEEN (rt35.c0) AND (0xffffffffe5f0f0eb))) IS TRUE) WHERE ('-225405904'); -- 0ms;
SELECT ALL 1651004358 FROM t1, t0, rt35 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT ALL (NOT ((((t0.c1))>((rt35.c3))))), AVG(CASE WHEN 0.26964196021140585 THEN t0.c38 WHEN t1.c1 THEN rt35.c4 WHEN rt35.c2 THEN t0.c1 ELSE rt35.c2 END) OVER ( ORDER BY (CASE WHEN rt35.c2 THEN t1.c1 ELSE rt35.c4 END IN (((((t0.c0)OR(rt35.c0)))AND(0.7515890135595327))))), GROUP_CONCAT(((((t1.c0)OR(t1.c1)))AND(rt35.c1))) FROM t1, t0 WHERE (((((x'2e11')*('680037966')))AND(((NULL)|('-1360589009')))));SELECT COUNT(-8.23179742E8) FROM rt35; -- 0ms;
SELECT ALL AVG(((t1.c1)IS NOT(rt35.c4))) OVER () FROM t1, t0, rt35 WHERE ((((('') BETWEEN ('W5 _Dt') AND (NULL)))>=((('-1324436743')-(x'5326'))))); -- 0ms;
SELECT ALL (((t1.c1)) BETWEEN ((CASE 0Xffffffffdf2ecc75  WHEN t0.c0 THEN t0.c1 ELSE 'J' END)) AND ((load_extension(t0.c1, t0.c0)))) FROM t0, rt35 WHERE (CASE CAST(x'' AS INTEGER)  WHEN (('') IS FALSE) THEN LOWER(-488020006) WHEN ((0Xffffffff8cddb5f5)AND(1124542760)) THEN NULL WHEN ((NULL)-(0.0324697287764687)) THEN ((NULL) BETWEEN (x'') AND ('478753661')) WHEN (('h yDB!k.')LIKE(0.33178685302705047)) THEN CASE '-1304096545'  WHEN x'4bcf' THEN 'h*8P' END WHEN ((x'')<('1847727493')) THEN (((NULL, 'a%', 2.002463575E9)) NOT BETWEEN ((x'', '0.005029695738016704', 0.35008323831649124)) AND ((NULL, x'', x''))) ELSE ((0.9084441393427489) IS FALSE) END);SELECT ALL (((t0.c1)) NOT BETWEEN ((CAST(t0.c1 AS NUMERIC))) AND ((((rt35.c1) NOT BETWEEN (t0.c0) AND (rt35.c1))))) FROM t1, rt35, t0; -- 0ms;
SELECT DISTINCT 0X3ba7f58f COLLATE RTRIM FROM t1, t0 WHERE (((CASE NULL  WHEN 0.08287816174719465 THEN x'a979' ELSE '(({鶢A擑!뷬!' END)>=(((NULL) IS TRUE)))) GROUP BY ((t0.c38)<(((t1.c1) IS FALSE))), ((((CASE WHEN t0.c38 THEN t1.c2 WHEN rt35.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c2 END)OR(((t0.c38) IS FALSE))))OR((((rt35.c1)) NOT BETWEEN ((rt35.c3)) AND ((rt35.c2))))), '-312486672' ORDER BY (- (((t0.c0)=(rt35.c4))))  NULLS FIRST;SELECT DISTINCT '\nk<?5', ((((t1.c1 COLLATE NOCASE)AND(COUNT(*))))AND(((rt35.c0)GLOB(rt35.c2)))), SUM(((t1.c2)OR(rt35.c0))) OVER ( ORDER BY 'U*M'  NULLS FIRST) FROM t1, t0, rt35 GROUP BY (CAST(1.03187653E8 AS NUMERIC) IN ()), (((t1.c1 IN (t0.c1))) IS TRUE), ((((((t0.c1)AND(t0.c0)))OR(((rt35.c1)OR(rt35.c0)))))AND(((t0.c38) ISNULL))) HAVING 0.8849739581668208; -- 0ms;
SELECT DISTINCT (((((rt35.c3, t1.c2, rt35.c3)) BETWEEN ((rt35.c2, rt35.c3, t1.c1)) AND ((rt35.c2, rt35.c1, t1.c0)))) BETWEEN (((t0.c38)LIKE(t1.c1))) AND (CAST(t1.c0 AS BLOB))) FROM t0, rt35;SELECT ((((rt35.c2)>>(t0.c38)))>>(((t0.c1) IS TRUE))), rt35.c0, ((((((((((t1.c2)AND(rt35.c3)))OR(t0.c38)))OR(rt35.c0)))AND(t0.c38))) NOT BETWEEN (0.687896686192395) AND (json_quote(rt35.c3))) FROM t0, t1 WHERE (((((((((((x'3e2e')-('')))AND((0xffffffffba35d30f IN ('Qq0>w%O')))))AND(((((0X588cf6ed)AND(4.1213415E8)))OR(0.3138144591561187)))))AND(((x'') BETWEEN ('Gh') AND (NULL)))))AND(UNICODE(NULL))));SELECT DISTINCT (t1.c0 IN ()) COLLATE NOCASE COLLATE RTRIM FROM t0, t1, rt35; -- 0ms;
SELECT highlight(((t0.c38)IS(rt35.c3)), (t0.c1 IN (t1.c0, NULL)), ((rt35.c2) IS TRUE), MIN(rt35.c4, rt35.c4)), MAX(CAST(t0.c1 AS NUMERIC)), ((((rt35.c0)=(t1.c1)))-(((t1.c2) BETWEEN (rt35.c2) AND (t1.c0)))) FROM t1 GROUP BY CASE WHEN t0.c38 THEN rt35.c0 WHEN rt35.c2 THEN rt35.c4 WHEN t1.c1 THEN t0.c0 WHEN t1.c0 THEN rt35.c3 WHEN rt35.c2 THEN rt35.c1 END COLLATE NOCASE, ((((NULL)<=(rt35.c2)))!=(((rt35.c2) NOT NULL))), ((((t0.c0)+(rt35.c4)))&(NULL)) HAVING ((((((rt35.c2)AND(rt35.c4)))AND(rt35.c4))) IS FALSE);SELECT ((((rt35.c1)<<(t0.c38)))%(CASE rt35.c0  WHEN rt35.c4 THEN t0.c38 ELSE rt35.c0 END)) FROM rt35, t0, t1 WHERE (ABS((+ (NULL)))) GROUP BY (((rt35.c2 IN ()))IS((+ (rt35.c2)))) HAVING ((CAST(rt35.c4 AS REAL))AND(((t0.c0)=('-')))); -- 0ms;
SELECT DISTINCT ((LIKELY(rt35.c1)) IS TRUE) FROM t0;SELECT DISTINCT ((((rt35.c3)=(rt35.c3))) IS FALSE) FROM t0, t1;SELECT DISTINCT CASE t0.c38 COLLATE RTRIM  WHEN (((t1.c0, rt35.c4, t1.c1)) BETWEEN ((t1.c0, rt35.c2, t0.c1)) AND ((t0.c1, -5.49360729E8, t0.c0))) THEN (t0.c38 IN ()) END, MIN(((t1.c1) BETWEEN (t0.c1) AND (rt35.c2))), LIKELY(((t1.c0) NOT BETWEEN (t0.c38) AND (t0.c38))) FROM t1 NATURAL JOIN rt35;SELECT ALL ((t0.c0 IN ()) IN (t0.c1)) FROM t0; -- 0ms;
SELECT LEAD((((~ (',50Qq\n%b')))OR(rt35.c2 COLLATE NOCASE)), 0.9367010954637066, (((('''5')OR((rt35.c2 IN ()))))OR(IFNULL(rt35.c0, rt35.c2)))) OVER (), (((t0.c38) NOT BETWEEN (t0.c1) AND (rt35.c4)) IN (t1.c0 COLLATE RTRIM)), COUNT(*) FROM rt35 WHERE ((((((((((((NULL, x'', '毵3')) NOT BETWEEN (('', 0.21903015512835078, x'')) AND (('-756321498', -616818845, '43628096'))))OR(((NULL)GLOB('66145377')))))AND((('2067670466') BETWEEN (NULL) AND (-855691814)))))OR((('g}') NOT BETWEEN ('1209278821') AND (NULL)))))OR(((((0.16419544671495367)OR(x'')))OR(x'c378f44c')))));SELECT DISTINCT MIN(((rt35.c0) NOT BETWEEN (rt35.c3) AND (t1.c1))) FROM t0, t1, rt35; -- 0ms;
SELECT t1.c0 COLLATE BINARY, CASE WHEN ((t1.c1) IS FALSE) THEN t1.c0 ELSE AVG(rt35.c2) END, ((((rt35.c0) IS TRUE))>(CASE t1.c2  WHEN rt35.c1 THEN t1.c0 ELSE t1.c1 END)) FROM t1;SELECT LEAD(CASE (rt35.c0 IN ())  WHEN ((NULL) NOTNULL) THEN ((rt35.c4) IS TRUE) ELSE ((rt35.c2)&(t0.c0)) END, t0.c0, '-1194607608') OVER () FROM rt35, t0 WHERE (((CASE NULL  WHEN 0X6c089596 THEN 0x495c9cdd ELSE NULL END) IS TRUE)) LIMIT 328391506; -- 0ms;
SELECT DISTINCT LTRIM(COUNT(t1.c2), t1.c0) FROM t0 WHERE (((((CASE 'iF'  WHEN 'YEH3GSp' THEN x'' END)AND((((NULL)) NOT BETWEEN ((NULL)) AND ((')OL&'))))))AND(UPPER(NULL))));SELECT DISTINCT (((t0.c0)) NOT BETWEEN (((NOT (rt35.c2)))) AND ((((rt35.c2) NOTNULL)))), ((rt35.c3) NOTNULL), ((((rt35.c0) BETWEEN (t1.c1) AND (rt35.c3)))LIKE(((t0.c0)*(0.5390973167106478)))) FROM t0, t1 WHERE (CAST((((NULL, 0xffffffffc8da82be, 0xfffffffff4c5d9cc)) BETWEEN ((NULL, NULL, 'ᭆU')) AND ((-1.024808496E9, '~^,{sb', 751621462))) AS BLOB));SELECT DISTINCT NTH_VALUE((((rt35.c3, rt35.c1, t1.c0)) NOT BETWEEN ((rt35.c1 COLLATE BINARY, ((rt35.c1) IS TRUE), ((((rt35.c0)AND(rt35.c2)))AND(t0.c38)))) AND ((((t1.c1)LIKE(rt35.c0)), rt35.c2 COLLATE RTRIM, t0.c0))), ((((((x'')AND('')))OR(rt35.c0))) IS FALSE)) OVER ( ORDER BY ((((rt35.c4) ISNULL)) IS TRUE) DESC, (((t1.c1) BETWEEN (t1.c1) AND (rt35.c0)) IN ())), x'49e6', (((0.613249209449803))>((((((((((rt35.c1)OR(rt35.c1)))AND(t1.c0)))AND(rt35.c0)))AND(t0.c1))))) FROM t0, rt35, t1 WHERE (CAST(MIN(x'cae4', '') AS NUMERIC)); -- 0ms;
SELECT DISTINCT x'' FROM t0, rt35 WHERE (x''); -- 1ms;
SELECT ALL (((t1.c2 IN ()))%(((((-112961004)OR(t0.c1)))AND(rt35.c4)))) FROM t0 WHERE (CAST((NOT (x'')) AS TEXT));SELECT ((((rt35.c4) IS TRUE))-(((rt35.c2) IS FALSE))) FROM rt35, t1, t0 LIMIT 120495393 OFFSET -990110906; -- 0ms;
SELECT CAST((('0.6280466208950576')&(NULL)) AS BLOB) FROM rt35 WHERE (CASE WHEN x'' THEN x'' ELSE -7.7276186E7 END COLLATE RTRIM) LIMIT -1221887655 OFFSET 1292984053; -- 0ms;
SELECT CASE rt35.c4  WHEN rt35.c4 THEN rt35.c4 END COLLATE BINARY FROM t0, t1;SELECT ALL ((TRIM(DISTINCT rt35.c1))*(((rt35.c1)+(t1.c0)))) FROM rt35, t1 WHERE ((+ (6.6145377E7 COLLATE BINARY))); -- 0ms;
SELECT ALL (((rt35.c2)) BETWEEN ((((((((((rt35.c0)AND(rt35.c3)))OR(t0.c38)))AND(t0.c1)))AND(t1.c0)))) AND ((UNLIKELY(rt35.c4)))) FROM t0, rt35 WHERE (CAST((('1575304102') ISNULL) AS BLOB));SELECT DISTINCT (- (rt35.c1)), ((rt35.c4)*(((t0.c1)GLOB(rt35.c2)))), (SQLITE_VERSION() IN (((t1.c0)/(t1.c2)))) FROM rt35;SELECT t1.c1 FROM t1, rt35, t0; -- 0ms;
SELECT ALL x'd527' FROM t0, t1, rt35 WHERE (((((((((NULL)AND(0.7183714104125357)))OR(x'')))OR((NOT ('-595214479')))))OR((- (0.8238984810191261))))) GROUP BY ((((((rt35.c0) IS TRUE))OR(NULLIF(t0.c1, rt35.c3))))AND(CASE WHEN t0.c0 THEN rt35.c1 ELSE rt35.c2 END)) HAVING (((MAX(rt35.c1), ((rt35.c2)GLOB(rt35.c2)), COALESCE(DISTINCT t1.c1, t1.c0)))>=((t1.c0, (((t0.c1))=((rt35.c3))), t1.c1))); -- 0ms;
SELECT DISTINCT SUM((((t1.c0)) NOT BETWEEN ((rt35.c3)) AND ((rt35.c1)))) OVER () FROM t0, t1;SELECT ALL '0' COLLATE BINARY, NULL, ((((t1.c0) BETWEEN (t0.c1) AND (rt35.c0)))&(((t1.c0)/(rt35.c4)))) FROM rt35;SELECT rt35.c2 FROM rt35, t0, t1; -- 0ms;
SELECT DISTINCT (((t1.c0)) NOT BETWEEN ((((0x35ddbc1a) IS TRUE))) AND ((((rt35.c3) NOTNULL)))) FROM t1 GROUP BY t1.c1, ((((t0.c38)IS NOT(rt35.c1)))+((rt35.c2 IN (t1.c1)))), (((rt35.c3 IN ())) NOT BETWEEN (((rt35.c3)+(t0.c0))) AND ((NOT (t1.c2)))) HAVING ((((((t0.c38)&(t0.c1)))AND(((rt35.c2) IS FALSE))))AND(json_type(rt35.c1)));SELECT DISTINCT CASE WHEN CAST(t0.c1 AS TEXT) THEN SUM(rt35.c1) END, (t1.c2 IN (((rt35.c4) NOTNULL))), (((x'7c6d'))<(((- (t1.c2))))) FROM rt35 LIMIT 1194037723 OFFSET -77276186;SELECT MAX(((t1.c1)+(rt35.c0))) FROM t1, rt35, t0 WHERE ((((('j\') BETWEEN (')OL&') AND (0.40939996111789656))) NOT BETWEEN (-1282751749) AND ((('bo') NOT BETWEEN (NULL) AND (0.7191101536821277))))) ORDER BY ((x'f0df') IS TRUE) COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT ALL NULL FROM rt35 WHERE ((+ ((NOT (0.3274316360675952))))) LIMIT 2022741955 OFFSET -1847548279; -- 0ms;
SELECT ALL ((t0.c0) NOT BETWEEN (NULL) AND (rt35.c4)) COLLATE NOCASE, CAST((t1.c1 IN (rt35.c1)) AS NUMERIC), (((NOT (t0.c0))) BETWEEN (((NULL) NOT BETWEEN (t0.c0) AND (t1.c0))) AND ((((rt35.c1))<>((t0.c1))))) FROM rt35 WHERE ((('1639760016')&('g4DlC')) COLLATE NOCASE);SELECT DISTINCT ((((0Xfffffffffb9b0b6c)>>(rt35.c0)))=(rt35.c0)) FROM t0 WHERE ((((x'')) NOT BETWEEN ((CAST(0.00697020252566849 AS BLOB))) AND ((CASE NULL  WHEN 0X72e9d21 THEN x'3c8d' ELSE NULL END))));SELECT ((CAST(rt35.c2 AS BLOB)) IS TRUE) FROM t1 WHERE (CASE WHEN (NULL IN (x'b4e5')) THEN ((((0.07770928296441049)AND(0.8238984810191261)))AND('1771422638')) WHEN ((NULL) BETWEEN ('-415147496') AND (x'')) THEN rtreenode(NULL, 0x59b9dcf0) WHEN (('<H&26&') ISNULL) THEN ((NULL) BETWEEN ('') AND (x'')) WHEN NULL COLLATE RTRIM THEN ((0.7347630100371965)>('')) WHEN ((0.4848701441414267) NOTNULL) THEN (((0.7833813389552307)) BETWEEN (('\r+C)OoaS{')) AND ((''))) ELSE 0x7ad2d058 COLLATE BINARY END);SELECT DISTINCT CASE WHEN '뛊%/\rq%,?' THEN rt35.c0 ELSE t0.c38 END COLLATE NOCASE FROM t0, t1 ORDER BY ((('-1752878673' IN (t1.c0)))AND(t0.c38 COLLATE NOCASE)) ASC;SELECT DISTINCT t1.c2 COLLATE BINARY COLLATE NOCASE, CAST(COUNT(*) AS INTEGER), DENSE_RANK() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM t1 WHERE ((((((NULL)) NOT BETWEEN (('-84981389')) AND ((x'')))) BETWEEN (CASE x''  WHEN 0.44655066855521286 THEN '3' WHEN NULL THEN NULL WHEN '' THEN '209792603' END) AND ('-1282751749'))); -- 0ms;
SELECT DISTINCT (NOT (((rt35.c4) BETWEEN (t0.c0) AND (t1.c2)))) FROM t1, t0, rt35 WHERE ((('') BETWEEN ((('M') IS FALSE)) AND (0.3668939123382595))); -- 0ms;
SELECT DISTINCT CAST((t0.c0 IN (rt35.c4)) AS REAL) FROM t1, rt35, t0 WHERE (((((NULL)<(x'')))!=(((0x74c33a5c)=(0.07618874555361665))))) ORDER BY (((t0.c1)) NOT BETWEEN (((((t0.c1))>=((rt35.c3))))) AND (((((0.2531894738442052, t1.c0, t1.c0))<=((rt35.c0, t0.c1, '-1848711887')))))); -- 0ms;
SELECT ALL ((((((rt35.c1)AND(rt35.c2)))AND(''))) NOT NULL) FROM rt35, t1, t0 WHERE ((~ (((NULL) NOT BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((rt35.c2) NOTNULL))OR(((t1.c1)|(t1.c0)))))AND(CASE t0.c38  WHEN rt35.c3 THEN t0.c1 ELSE t1.c0 END))) OVER ( GROUPS ((json_quote(rt35.c0)) IS FALSE) PRECEDING) FROM t1, rt35, t0; -- 0ms;
SELECT ALL t0.c0 FROM rt35 WHERE (((x'')/(NULL)) COLLATE NOCASE);SELECT DISTINCT ((((((((((((((rt35.c1)AND(t1.c2)))AND(t1.c1)))OR(t0.c1)))OR(0X5c058045)))OR(rt35.c0)))OR(t1.c2)))=(CASE WHEN rt35.c1 THEN t0.c1 END)), (((t0.c0 IN ()))>=(TRIM(rt35.c3))), CASE t1.c0  WHEN ((t0.c0) NOT BETWEEN (t1.c2) AND (rt35.c2)) THEN ((t0.c38)<=(t0.c1)) ELSE ((rt35.c4) NOT NULL) END FROM rt35 WHERE (((TYPEOF(NULL))GLOB(ABS(NULL))));SELECT ALL 0.6592966950683713 COLLATE RTRIM, '', (~ (((t1.c0) ISNULL))), CASE WHEN ((x'b7f5')>=(t0.c1)) THEN ((t1.c1)LIKE(t1.c0)) WHEN CASE '-596788780'  WHEN rt35.c3 THEN t1.c2 END THEN ((((((((t0.c38)OR(t1.c2)))OR(rt35.c1)))AND(rt35.c4)))AND(t0.c1)) WHEN rt35.c1 THEN 0xffffffffb6638acc COLLATE NOCASE END, ((((t0.c38 IN ()), NULL, ((t1.c2) IS TRUE)))<=((CASE WHEN rt35.c3 THEN rt35.c2 END, TYPEOF(rt35.c2), ((t1.c0) ISNULL)))) FROM t1, t0, rt35; -- 0ms;
SELECT t1.c0 FROM t0, rt35 WHERE ((((NULL, '-513585339', 0X796aa20)) BETWEEN ((x'', 0.784661771154849, ((NULL)/(x'')))) AND (((('1617410205')IS(0.5320065859479488)), LENGTH(NULL), NULL COLLATE NOCASE))));SELECT DISTINCT (((((('5gB<')AND(t0.c1)))AND(t1.c0))) NOT BETWEEN ((((x''))<=((t0.c0)))) AND (rt35.c1 COLLATE BINARY)) FROM rt35 WHERE (CAST(((x'')!=(NULL)) AS TEXT));SELECT (((((((t1.c2)OR(t1.c1)))OR(t0.c1))))>((CASE rt35.c1  WHEN t1.c0 THEN -1931337108 END))) FROM t0;SELECT DISTINCT (((((((((rt35.c3)AND(rt35.c4)))OR(t0.c38)))AND(t0.c38)))AND(rt35.c0)) IN ()), (((((t1.c2, rt35.c2, t1.c2))>=((rt35.c3, '', NULL)))) BETWEEN (((rt35.c2) NOT BETWEEN (0.4968393007769135) AND (rt35.c3))) AND (((rt35.c3)&(t0.c1)))), (((((+ (t1.c2)))AND(t1.c0 COLLATE BINARY)))AND(((rt35.c3)%('b')))) FROM t1 WHERE (((('-1445026381' IN ())) BETWEEN (x'' COLLATE BINARY) AND ((((x'', 0x651780cc, NULL, 'G⒋', 'Hk?m&⵴#[')) BETWEEN ((x'447d', 0.9590049622583247, NULL, NULL, '-324144147')) AND ((x'', x'', '278372323', 'or<	', 0.8411729760935139))))));SELECT ALL ((((rt35.c2)|(x''))) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (t1.c0))) AND ((((rt35.c2, rt35.c1, rt35.c1, t1.c0, t0.c38)) NOT BETWEEN ((rt35.c1, rt35.c0, rt35.c0, rt35.c1, x'')) AND ((t0.c38, rt35.c3, t0.c1, rt35.c1, t0.c0))))) FROM rt35, t0, t1 WHERE ((((((((((~ (2008319569)))OR((((0.6140221705829816, NULL, x'')) NOT BETWEEN ((0.6460929459259493, x'', x'')) AND (('Fs', 'UOz*3k!', x''))))))OR(((-681804366) IS FALSE))))AND(CAST(0.3889167164466838 AS INTEGER))))OR((- (''))))) GROUP BY 0X4b882a4b, CHAR(((t0.c0)||(rt35.c3))), rt35.c2 COLLATE RTRIM HAVING (t0.c38 IN (t1.c1, t0.c38)) COLLATE NOCASE;SELECT rt35.c2 FROM t1, rt35; -- 0ms;
SELECT DISTINCT ((((t0.c1) IS FALSE)) NOT NULL), ((rt35.c1)+(rt35.c2)) COLLATE BINARY, ((((((t0.c1)*(rt35.c3)))OR((((t1.c0, 0.01284612206885516, rt35.c3)) BETWEEN (('0.0', rt35.c4, t0.c0)) AND ((t0.c1, t1.c0, '-1154509396'))))))AND(rt35.c1 COLLATE RTRIM)) FROM t1, t0, rt35; -- 0ms;
SELECT CAST(rt35.c0 COLLATE RTRIM AS NUMERIC) FROM t1 WHERE (NULLIF(DISTINCT (((NULL, 0Xe5fe496, x'', 0.04019187409738789, 0x6d2e1bc2))<=((0.017695696184624854, '1983773834', 0.23748687675603264, NULL, x'f4d0'))), ((0.723217342110134) BETWEEN ('2117545510') AND (-1560861270))));SELECT DISTINCT ((((((((ABS(DISTINCT t1.c1))OR(x'fe70')))OR(CASE t0.c0  WHEN rt35.c3 THEN rt35.c2 ELSE t1.c2 END)))OR(((rt35.c3)GLOB(rt35.c4)))))AND(t1.c0)), AVG(t1.c0), (((NOT (NULL))) NOT BETWEEN (TOTAL(t1.c2)) AND (COUNT(t0.c0))), json_object('', rt35.c1) COLLATE NOCASE, ((((((((((((CAST(rt35.c1 AS BLOB))OR(NULL)))AND(CASE WHEN t0.c38 THEN '-494739095' WHEN t1.c1 THEN rt35.c4 WHEN t0.c1 THEN rt35.c0 END)))OR(((((t1.c1)OR(rt35.c4)))AND(t0.c38)))))OR((+ (t1.c1)))))AND(((rt35.c2)<(rt35.c0)))))AND(CAST(t1.c0 AS NUMERIC))) FROM t1, t0, rt35 WHERE (x''); -- 0ms;
SELECT ((t0.c38) NOTNULL) COLLATE BINARY FROM t0, rt35 ORDER BY ((((((rt35.c4, t0.c0, t0.c38))>((x'1e97', t0.c0, t0.c0)))))>=((CAST(t1.c2 AS TEXT)))) DESC  NULLS FIRST;SELECT DISTINCT CAST(((x'') NOT BETWEEN (t0.c38) AND (rt35.c3)) AS NUMERIC) FROM t0, rt35 WHERE ('478594570'); -- 0ms;
SELECT DISTINCT (((~ (rt35.c1)))>(t1.c0 COLLATE BINARY)), ((SUM(rt35.c2))+(((t0.c1) NOT BETWEEN (rt35.c1) AND (rt35.c3)))), (((((t0.c0)OR(rt35.c4)))AND(t0.c38)) IN (LTRIM(rt35.c1))) FROM t0, rt35 WHERE (((('b', x'be2f', x'')) NOT BETWEEN (('c*jꇺRz' COLLATE NOCASE, ((x'') BETWEEN (NULL) AND ('!uE')), ((-6.43453138E8) NOT NULL))) AND ((CAST(NULL AS INTEGER), ((x'11d06c19') IS TRUE), ((0.19933028291628085)|('')))))) LIMIT 648371237 OFFSET 522097182;SELECT CAST(((((t0.c38)OR(t1.c1)))AND(NULL)) AS REAL) FROM rt35, t1, t0 WHERE ((((LIKE(0.9695280604772051, -1552164960)))<=((((('#{_Ux')) NOT BETWEEN (('')) AND (('<X⸦kdቘ'))))))); -- 0ms;
SELECT DISTINCT CASE t1.c2  WHEN rt35.c3 THEN CASE WHEN rt35.c3 THEN rt35.c0 END END FROM rt35, t0 WHERE ((((x'aa0d', NULL, NULL)) BETWEEN (((('A%gM0NﭝFC')GLOB('d낟k㝥.')), LIKELY(0.27612922251982397), ((1.231859507E9) NOTNULL))) AND (((((0.08889705682653137)) NOT BETWEEN ((0.2731571367265795)) AND ((''))), CAST('h' AS BLOB), ((0X255606e4)/(NULL))))));SELECT 1790249673 FROM rt35, t0, t1 WHERE (((CAST(x'' AS REAL))>=(0.6071850365237226))); -- 0ms;
SELECT MIN(((rt35.c1)==(rt35.c2))) FROM t0, t1;SELECT DISTINCT (~ (CAST(t1.c1 AS INTEGER))) FROM t0, t1 WHERE ((((((('154466034')OR(x'')))OR(NULL)))IS(((x'')LIKE(x''))))) LIMIT -1686791245; -- 0ms;
SELECT DISTINCT SUM(CAST(NULL AS BLOB)) OVER () FROM rt35, t1 NATURAL JOIN t0; -- 0ms;
SELECT DISTINCT UPPER(t1.c0 COLLATE RTRIM), ((CASE t1.c2  WHEN t0.c1 THEN t0.c1 ELSE rt35.c2 END)%(((0.19960457367620255)*(rt35.c4)))), ((CAST(t0.c0 AS TEXT)) NOT BETWEEN (((((rt35.c4)AND(t1.c0)))AND(rt35.c4))) AND (((t0.c0) BETWEEN (rt35.c2) AND (rt35.c0)))) FROM t0, t1 WHERE (((((CASE NULL  WHEN x'' THEN '1533845329' ELSE '㯗1Ox#뷼Ho' END)AND((~ (0.7245587367719876)))))OR('7*87%17+')));SELECT DISTINCT (+ (((rt35.c3) BETWEEN (rt35.c1) AND (t0.c0)))) FROM t1 WHERE (CAST(CASE WHEN x'' THEN NULL ELSE '-1975237681' END AS TEXT));SELECT DISTINCT RANK() OVER () FROM rt35, t1, t0; -- 0ms;
SELECT DISTINCT MAX(rt35.c4) FROM rt35, t0, t1 WHERE ((((0.2700894135999642)) NOT BETWEEN (((('+F[ꭉW埸^%') NOT BETWEEN (NULL) AND ('-131305177')))) AND ((NULL)))); -- 0ms;
SELECT CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c1)) THEN ((rt35.c2)<<(rt35.c3)) ELSE ((rt35.c0) IS FALSE) END FROM t0;SELECT ALL (((((t1.c1))>((rt35.c4))))LIKE(((t0.c1) NOT BETWEEN (t1.c0) AND (NULL)))) FROM rt35, t0 WHERE ((((+ ('>|cEUI')))GLOB((- (x'9d6a')))));SELECT ALL ((IFNULL(DISTINCT rt35.c4, t0.c38)) NOTNULL), ((CAST(t1.c2 AS INTEGER))<=(CASE t1.c1  WHEN t0.c38 THEN t1.c1 END)), t0.c1 FROM rt35, t1, t0 WHERE ((((('')OR(-41686318)))*((NULL IN ())))); -- 0ms;
SELECT ((IFNULL(rt35.c2, t0.c0))>=((rt35.c4 IN (rt35.c4, t0.c1)))), ((((rt35.c3) BETWEEN (0.6561834582157029) AND (x''))) NOT NULL), ((t0.c1 IN ()) IN ('-207008746')), LIKELY(((t1.c0)IS(rt35.c4))), (((NOT (rt35.c1))) NOT NULL) FROM t1 WHERE ((((('1154311219') NOT BETWEEN (x'') AND (578512955))) BETWEEN (NULL COLLATE RTRIM) AND (((x'')LIKE(x'8d80'))))) ORDER BY x'' ASC;SELECT DISTINCT (((t1.c1, rt35.c0, t1.c2, t1.c2, rt35.c3)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c1 END, '-1363416859', COUNT(rt35.c4), CAST(6.6145377E7 AS TEXT), ((t0.c1)-(t1.c0)))) AND ((((t0.c1)<<(rt35.c2)), (((t0.c1))<=((t0.c1))), CAST(t0.c1 AS REAL), ((rt35.c2) NOTNULL), (+ (t1.c0))))) FROM t0 NATURAL JOIN t1 WHERE (((('')) NOT BETWEEN (((NULL IN ('501238187')))) AND (((('')<(NULL))))));SELECT ((COUNT(*)) BETWEEN (0xffffffffe3a1fd05) AND (((rt35.c2) IS FALSE))) FROM rt35, t0, t1 WHERE (((('-188360244', x'', x'3f0d')) NOT BETWEEN ((((((NULL)OR(x'')))OR(-1674353327)), (- (x'6505')), ('-77276186' IN ()))) AND ((UNLIKELY(' ('), (('KauG<') BETWEEN (x'5dfa') AND (x'')), (('H,')<(0.15191972897685202)))))); -- 0ms;
SELECT DISTINCT ((((t0.c1) IS TRUE))<<(AVG(rt35.c4))) FROM t0, rt35, t1 WHERE (0.16311261160758095) GROUP BY ((rt35.c4) BETWEEN (rt35.c0) AND (x'')) COLLATE RTRIM HAVING ((SUM(t0.c1)) NOT BETWEEN (((rt35.c2) IS FALSE)) AND (t0.c1)); -- 0ms;
SELECT DISTINCT ((rt35.c4 COLLATE BINARY) NOTNULL) FROM t1, t0;SELECT DISTINCT ((rt35.c3 COLLATE BINARY) IS TRUE), CASE ((((((((rt35.c2)AND(rt35.c4)))OR(t0.c1)))OR(rt35.c3)))OR(rt35.c4))  WHEN ((((t0.c1)AND(rt35.c0)))AND(rt35.c4)) THEN load_extension(rt35.c0) END, AVG((('328391506')AND(t0.c0))) OVER () FROM rt35, t0 WHERE ((((((((((+ ('0.16158094790561062')))OR(((0.9429843677246572)IS(0.4867775907874985)))))OR(('U䘢yVu_Ld	' IN ()))))AND(json_array(x'0d92', 'Z#N1~44', 0.8485194476469772, x''))))AND(((NULL) IS FALSE)))) GROUP BY ((((json_extract(t0.c1, t1.c1, 0Xffffffffc639a98b, t1.c1, t0.c38, t0.c0, t0.c0, rt35.c3))AND('2002463575')))AND(((-5.87746456E8) BETWEEN (rt35.c1) AND (t0.c1)))), ((CAST(rt35.c3 AS NUMERIC)) IS TRUE), (NULL IN ((t0.c0 IN ()), rt35.c1)) HAVING ((((((((CASE WHEN rt35.c2 THEN rt35.c0 WHEN -7.7276186E7 THEN rt35.c4 WHEN rt35.c3 THEN t1.c2 ELSE x'' END)AND(SQLITE_COMPILEOPTION_USED('1321480629'))))AND(MIN(rt35.c1))))AND(rt35.c2)))AND(rt35.c1 COLLATE NOCASE));SELECT DISTINCT (NOT (rt35.c3)) COLLATE NOCASE FROM rt35, t0, t1 ORDER BY (((rt35.c2 IN (t1.c1, t0.c38))) IS TRUE)  NULLS FIRST, (((((rt35.c4)OR(t1.c1)))AND(rt35.c3)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM((0xffffffff9beaea5b IN (t0.c1))) OVER ( GROUPS ((NULLIF(t0.c38, rt35.c1)) BETWEEN ((- (rt35.c1))) AND (t1.c1 COLLATE RTRIM)) PRECEDING), (((t0.c1)OR(t0.c0)) IN ()), (((t1.c0)>>(rt35.c4)) IN (AVG(rt35.c1), ((rt35.c4) NOT NULL))) FROM rt35, t1, t0;SELECT DISTINCT (((((t1.c1 IN ()))OR(x'')))OR(((t1.c2)AND(rt35.c4)))) FROM t0, rt35, t1 WHERE ((((('')) NOT BETWEEN ((NULL)) AND ((NULL))) IN ())) LIMIT -1511566528 OFFSET -1383219826; -- 0ms;
SELECT ALL (((('C5')LIKE(rt35.c0))) BETWEEN (CASE NULL  WHEN t0.c1 THEN t0.c1 END) AND ((((t0.c0, rt35.c4, t0.c1)) NOT BETWEEN ((rt35.c1, rt35.c2, t0.c38)) AND (('<]d', t1.c0, t1.c1))))), ((TYPEOF(DISTINCT rt35.c3))&((- (t0.c0)))), ((highlight(t0.c1, rt35.c3, rt35.c3, t1.c1)) IS FALSE) FROM t0, rt35 WHERE ((CASE NULL  WHEN '&' THEN '555761338' WHEN 0.4251096526163385 THEN NULL WHEN 0.8051133587689712 THEN x'' END IN (x''))) ORDER BY 0x52d8b5cb ASC  NULLS FIRST;SELECT DISTINCT ((((t1.c1) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (NULL) AND ((((rt35.c3, rt35.c0, t1.c1))<=((NULL, rt35.c0, t1.c1))))) FROM t1, rt35 WHERE ((((NOT (x'')))>>(NULL COLLATE NOCASE))) ORDER BY ((0.9089331823048643 COLLATE RTRIM) BETWEEN (0.8051133587689712) AND (SQLITE_COMPILEOPTION_USED(0.7973902535848614))) DESC; -- 0ms;
SELECT DISTINCT ((((rt35.c0) NOTNULL)) BETWEEN (NULL COLLATE BINARY) AND (((t0.c0) IS TRUE))) FROM t1, t0, rt35; -- 0ms;
SELECT ((((t1.c0) BETWEEN (x'') AND (t1.c1)))LIKE(((rt35.c2) NOT BETWEEN (t1.c2) AND (rt35.c2)))) FROM t1;SELECT DISTINCT ((CASE WHEN t0.c38 THEN NULL ELSE t0.c38 END) NOTNULL), ((t1.c0)<<(t1.c2 COLLATE BINARY)), x'2cd3' FROM t0, t1 WHERE (((((('^#')OR(0.49296385890893846)))AND(NULL)) IN ())); -- 1ms;
SELECT TOTAL(((rt35.c2) NOT BETWEEN (x'5a06') AND (t1.c1))) FROM t0, rt35 WHERE (UPPER(DISTINCT ((NULL)%('d(0\F'))));SELECT ((((rt35.c0) NOT BETWEEN (rt35.c1) AND (rt35.c0)))>=(((rt35.c4)<=(rt35.c4)))) FROM t1, t0, rt35 WHERE (((((x'')) NOT BETWEEN ((x'')) AND ((0.606182325094302))) IN (x'', (('WDG<1J')>=('-640718580'))))) ORDER BY '-2036523479'  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((0.35314420962352633, ((rt35.c1) NOT BETWEEN (t1.c0) AND (t1.c2)), (t0.c1 IN (rt35.c4, rt35.c0))))>=((TRIM(t0.c0, t1.c0), CAST(rt35.c2 AS INTEGER), rt35.c2))), FIRST_VALUE(((((((rt35.c4)OR(0Xffffffffa0c004ff)))OR(NULL))) IS TRUE)) OVER (), PERCENT_RANK() OVER () FROM t1, rt35, t0; -- 0ms;
SELECT ALL ((((((rt35.c1)OR(rt35.c2)))AND(t1.c1)))*(((t1.c1)IS(rt35.c2)))), (~ (((t0.c0) NOTNULL))), TOTAL(NULL) FROM t1 ORDER BY t0.c0 DESC;SELECT ((CASE WHEN rt35.c3 THEN rt35.c0 WHEN t0.c38 THEN t0.c38 WHEN t1.c1 THEN rt35.c3 END) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (('1231859507' IN ()))) FROM t0, rt35, t1 ORDER BY ((CASE t1.c1  WHEN rt35.c0 THEN t0.c0 ELSE rt35.c1 END)/(((rt35.c2) ISNULL))) ASC; -- 0ms;
SELECT DISTINCT (((('La') BETWEEN (t1.c0) AND (t0.c1))) NOTNULL) FROM rt35;SELECT DISTINCT MAX(rt35.c3 COLLATE NOCASE) COLLATE BINARY FROM t1, t0;SELECT DISTINCT ((TOTAL(t1.c1))>=(((t1.c1)<<(t0.c1)))) FROM rt35, t0 WHERE ((((0.7780834430826626) BETWEEN ('-147288193') AND (0.5565772581683618)) IN ())) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE WHEN t1.c0 THEN t1.c2 END)) AND ((((t0.c1)>>(rt35.c0))))) ASC  NULLS FIRST;SELECT ((((rt35.c1)||(rt35.c1)))!=(MIN(rt35.c4, rt35.c4))), ('MWyu' IN (CASE rt35.c4  WHEN rt35.c3 THEN t0.c0 WHEN t1.c0 THEN NULL WHEN rt35.c1 THEN rt35.c2 ELSE t1.c1 END, (t1.c0 IN ()))), (~ (((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))), ((((rt35.c2)OR(((t0.c0)/(t1.c1)))))AND((t0.c38 IN (t0.c1)))), (((0.2707162120236847)) NOT BETWEEN ((0.7555590565571827)) AND (('1523340580'))) FROM t1;SELECT DISTINCT ((((rt35.c2) NOTNULL))+(((rt35.c1)<(x'')))) FROM rt35, t0, t1; -- 1ms;
SELECT ALL ((CAST('412134150' AS REAL)) NOT BETWEEN (rt35.c4 COLLATE RTRIM) AND ((- (rt35.c3)))) FROM t0, t1 NOT INDEXED ORDER BY NULL;SELECT ((rt35.c2 COLLATE NOCASE)||((~ (t0.c0)))) FROM t1, rt35, t0 WHERE (CASE WHEN ((-4.94739095E8)>>(x'')) THEN (+ ('湰	')) ELSE (NOT (NULL)) END); -- 0ms;
SELECT DISTINCT ((((((((((t1.c2)AND(rt35.c2)))AND(rt35.c1)))AND(NULL)))AND(0.8629619597196213))) IS FALSE) FROM t0;SELECT DISTINCT x'9ac9' FROM rt35, t0 GROUP BY CASE t1.c1  WHEN ((t1.c2)!=(t0.c1)) THEN (t0.c1 IN ()) WHEN ((t1.c0) NOTNULL) THEN (('O)GZ') IS FALSE) WHEN ((rt35.c4)IS(rt35.c1)) THEN CAST(t0.c38 AS INTEGER) ELSE ((t0.c1) NOTNULL) END HAVING CAST(((rt35.c3) BETWEEN (rt35.c1) AND (t1.c2)) AS BLOB);SELECT ALL CASE WHEN CAST(t0.c1 AS BLOB) THEN NULL END FROM rt35, t1, t0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ('-1489994300' IN ())), x'', (TYPEOF(DISTINCT t0.c0) IN ()) FROM t1, t0 WHERE ((((0xfffffffff47e5a08 IN (0.7486198505998707)))IS NOT(((('1015585620', x'', NULL))>=(('-1026718225', 209792603, 0.7997152818185238)))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((rt35.c2)AND(rt35.c1)))OR(t0.c1)))OR(t0.c0)))OR(t0.c38)) THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt35.c0) BETWEEN (rt35.c1) AND (t1.c2)) END FROM t1, t0 WHERE ((((x'' IN ()))*((x'' IN ('', 328391506, -1.103844904E9))))) GROUP BY (((((((('-2063606369')AND(rt35.c0)))OR((((t1.c0))==((t0.c0))))))AND((((t1.c2))>((rt35.c3))))))AND(CASE WHEN t1.c0 THEN rt35.c4 WHEN t0.c1 THEN rt35.c4 WHEN t0.c0 THEN t1.c1 WHEN t0.c1 THEN t0.c1 WHEN t1.c1 THEN t0.c0 END)) ORDER BY ((CAST(rt35.c4 AS BLOB)) ISNULL)  NULLS FIRST;SELECT DISTINCT CASE WHEN ((((((((t0.c0)AND(t1.c2)))OR(t0.c38)))AND(rt35.c0)))AND(x'')) THEN CAST(t0.c0 AS TEXT) ELSE (((t1.c1))>((t0.c0))) END FROM rt35, t1;SELECT DISTINCT (~ (rt35.c3)), t0.c0, ((TOTAL_CHANGES()) NOTNULL) FROM rt35, t0; -- 0ms;
SELECT (((((~ (t1.c2)))OR(((t1.c0)<<(t1.c2)))))OR((NULL IN ()))) FROM t1, rt35 WHERE ((((NOT ('1290222723')))<=(DATE(NULL, x'bc64', 0.9432511949561625)))) LIMIT 241165462 OFFSET -867230197; -- 1ms;
SELECT ALL (((rt35.c0, t0.c38, t1.c2)) NOT BETWEEN ((CAST(t0.c38 AS REAL), rt35.c0, COUNT(t1.c0))) AND ((CAST(rt35.c3 AS REAL), ((rt35.c2) BETWEEN (rt35.c3) AND (t0.c0)), MIN(rt35.c2)))) FROM t0, rt35 WHERE (TYPEOF(LIKELY(NULL)));SELECT SUM(CASE WHEN NULL THEN t0.c1 WHEN t1.c0 THEN t1.c2 WHEN 0.5726268563988569 THEN t1.c2 END) OVER ( ORDER BY (((((rt35.c3 IN (rt35.c2)))OR(((t1.c0)GLOB(rt35.c4)))))AND(CAST(t1.c2 AS INTEGER)))) FROM rt35, t0 ORDER BY ((rt35.c0)%(((NULL) BETWEEN (rt35.c1) AND (x''))))  NULLS LAST, rt35.c1;SELECT DISTINCT (((t1.c0) ISNULL) IN ()) FROM t0, rt35, t1 GROUP BY 0.8623885998101319; -- 0ms;
SELECT DISTINCT ((((((rt35.c1)OR(rt35.c0)))AND(rt35.c3))) NOT NULL) FROM rt35; -- 0ms;
SELECT DISTINCT ((((t1.c2) NOT BETWEEN (t0.c38) AND (t1.c2)))-(((rt35.c3) NOT NULL))) FROM t1, rt35, t0 WHERE (ABS((NOT (0.4873252603724886)))) GROUP BY LIKELY(DISTINCT x'') COLLATE BINARY HAVING (((t1.c1)) NOT BETWEEN (((((rt35.c1, rt35.c3, t0.c1)) NOT BETWEEN (('-1261135614', t0.c1, rt35.c2)) AND ((x'b5e6', t0.c1, t0.c0))))) AND ((CAST(t1.c2 AS BLOB)))); -- 1ms;
SELECT DISTINCT '1784022666', (CASE WHEN x'' THEN rt35.c4 ELSE t1.c0 END IN ()), CASE WHEN rt35.c1 THEN ((((NULL)OR(NULL)))OR(rt35.c0)) END FROM rt35, t1 ORDER BY ((rt35.c3 COLLATE RTRIM) NOT BETWEEN (CASE t0.c38  WHEN rt35.c2 THEN t0.c38 END) AND (((rt35.c3) IS FALSE))) LIMIT -965477320 OFFSET -136122056;SELECT DISTINCT 0.1400802200978436 FROM rt35, t0, t1 WHERE (LIKELIHOOD(((x'') NOT NULL), 0.28630836827901096)) INTERSECT SELECT DISTINCT TOTAL(((rt35.c2) BETWEEN (rt35.c3) AND (t1.c0))) FROM t0, rt35;SELECT DISTINCT CAST(t1.c1 AS NUMERIC) FROM rt35, t0;SELECT ALL LAG((((((rt35.c2) NOT BETWEEN (t1.c2) AND (rt35.c0))))>=((((((rt35.c3)AND(x'e7808f38')))AND('950328261'))))), ((((t1.c1) IS FALSE)) BETWEEN (rt35.c1 COLLATE BINARY) AND (((rt35.c0) NOT BETWEEN (0.05503969836329359) AND (t1.c0)))), ((((rt35.c0) NOT NULL))IS NOT(((rt35.c3)IS NOT(0Xffffffffa6f2e337))))) OVER () FROM t1, rt35 LIMIT -1097789736; -- 0ms;
SELECT DISTINCT COALESCE(((rt35.c1) BETWEEN (rt35.c0) AND (rt35.c2)), ((rt35.c1) NOT BETWEEN (rt35.c2) AND (rt35.c1))) FROM t1, t0 WHERE ((~ ((~ (0xdb480db))))) LIMIT 787208005;SELECT AVG(CASE WHEN rt35.c2 THEN t0.c38 ELSE t0.c0 END) OVER ( ORDER BY ((((rt35.c4)/(rt35.c4)))>>(t1.c0 COLLATE NOCASE)) DESC) FROM rt35 LIMIT -477254839 OFFSET 1000863119;SELECT (((t1.c1 COLLATE NOCASE))>=((((rt35.c1)&(rt35.c1))))), (((rt35.c2)) BETWEEN ((((rt35.c4)GLOB(t0.c38)))) AND ((((t0.c1) IS FALSE)))), rt35.c0, GROUP_CONCAT((+ (t1.c1))), COUNT(*) OVER () FROM t1 ORDER BY x'' ASC  NULLS LAST;SELECT DISTINCT 'bo' FROM t1, rt35 LIMIT 328391506; -- 0ms;
SELECT ALL COUNT(TRIM(t0.c0)) FROM t1, rt35 WHERE ((((((0x6e427bff))>=((0x56581c0e)))) BETWEEN ((('I᧌')*('-513585339'))) AND ((('1282054122') NOT NULL))));SELECT DISTINCT CASE WHEN ((t0.c1) IS TRUE) THEN CAST(rt35.c4 AS REAL) WHEN 5.77456372E8 THEN CAST(rt35.c3 AS BLOB) WHEN ((t0.c1)AND(rt35.c2)) THEN 0xffffffffdc85bf71 END, ((rt35.c4 COLLATE RTRIM)/(CAST(t1.c0 AS BLOB))), rt35.c4 FROM t0 WHERE (NULL);SELECT DISTINCT x'', NULL, ((CASE 'bE'  WHEN '0.7521683403455588' THEN t1.c0 ELSE t0.c38 END)IS NOT(((rt35.c0)/(t1.c1)))) FROM t0, t1, rt35 WHERE ((((NOT (x''))) NOT BETWEEN (CAST('562855005' AS TEXT)) AND (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT rt35.c0 FROM t0, t1, rt35 ORDER BY (((TOTAL_CHANGES(), (((rt35.c2))>((rt35.c2))), (t0.c1 IN (rt35.c1, rt35.c2)), CASE WHEN t1.c1 THEN x'0aac' WHEN NULL THEN rt35.c1 WHEN x'8920' THEN t0.c0 WHEN t1.c0 THEN rt35.c0 WHEN rt35.c0 THEN rt35.c4 ELSE rt35.c2 END, ((rt35.c3) IS FALSE)))<((((((rt35.c3)AND(rt35.c3)))OR(rt35.c1)), CASE WHEN t1.c2 THEN t0.c1 END, CAST(t0.c38 AS INTEGER), ((rt35.c0) BETWEEN (rt35.c0) AND (rt35.c3)), CASE t0.c38  WHEN t0.c38 THEN rt35.c0 END))); -- 0ms;
SELECT ALL (json_patch(t1.c1, '0.5369013497527845') IN ()), (((rt35.c2)-(t1.c2)) IN ()), (((((((rt35.c1)) BETWEEN ((0.7304693835382337)) AND ((t1.c2))))OR(t0.c0)))AND(((((((((t0.c0)AND(t1.c0)))OR(t0.c38)))AND(t0.c38)))AND(t1.c2)))) FROM rt35, t1;SELECT ALL FIRST_VALUE((((+ (rt35.c3))) IS FALSE)) OVER () FROM rt35, t0, t1 WHERE (((NULL)<((1363759081 IN (0.019627612406293515))))); -- 0ms;
SELECT ALL (GLOB(rt35.c1, t0.c38) IN ()) FROM t1, rt35 WHERE (((((('-2004700702')) BETWEEN ((x'')) AND ((0.4962219004034527))))||((NULL IN ())))) LIMIT -1508373635 OFFSET -560326502; -- 0ms;
SELECT DISTINCT (- (0.5208629692343439)) FROM rt35, t0 WHERE (((UNLIKELY(DISTINCT 'X븰W&|Xfr')) NOT NULL)) ORDER BY MAX((t0.c38 IN ()), ((rt35.c0)&(t1.c0)), ((rt35.c3)AND(rt35.c3)), ((-4.37194517E8) IS FALSE)) ASC LIMIT -77276186;SELECT DISTINCT (((json_type(rt35.c3)))<((((t1.c2)>(NULL))))) FROM t0, rt35 WHERE ((((- (NULL))) BETWEEN ((((NULL))>((NULL)))) AND (('' IN ()))));SELECT ALL (((((t1.c2))>=((t1.c2))))OR((- (t0.c1)))) FROM t0, t1, rt35; -- 0ms;
SELECT DISTINCT ((((((t1.c2)AND(rt35.c4)))AND(t1.c1))) BETWEEN (t1.c0 COLLATE BINARY) AND (((rt35.c0)&(rt35.c4)))) FROM t1, rt35, t0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN ((NULL IN (NULL))) AND ((0.8525406373240803 IN ())))); -- 0ms;
SELECT DISTINCT (- (((((rt35.c4)AND(t0.c1)))OR(rt35.c3)))), t0.c1, -1551742194 FROM t1, rt35, t0 LIMIT 520750659; -- 0ms;
SELECT ALL NTH_VALUE(t1.c2, (NOT (((((t0.c38)AND(t0.c0)))OR(t0.c1))))) OVER () FROM t1, t0 ORDER BY (t0.c1 COLLATE BINARY IN ())  NULLS LAST, ((((t0.c0)) NOT BETWEEN ((-1.221887655E9)) AND ((t0.c1))) IN (0Xffffffff8337afb6, json_array_length(t1.c1, t0.c0))) ASC, (- (0.3371605089808024))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t1.c1 COLLATE NOCASE)OR((((rt35.c2)) NOT BETWEEN ((rt35.c4)) AND ((t0.c38))))))AND(((((t0.c38)OR(rt35.c3)))AND('-1279095939')))) FROM rt35;SELECT DISTINCT CASE WHEN ((rt35.c3)IS NOT(rt35.c1)) THEN (~ (t1.c1)) END FROM t1 GROUP BY ((rtreenode(t0.c1, t0.c38))>=(((t0.c1) ISNULL))), ((((((rt35.c3)%(t0.c0)))AND('')))AND(ABS(x''))), CAST(((NULL) BETWEEN (rt35.c0) AND (t0.c1)) AS INTEGER) LIMIT -1282751749;SELECT DISTINCT (((('617843991')+(rt35.c4)))<>((t0.c1 IN ()))), CASE ((rt35.c3) ISNULL)  WHEN TRIM(rt35.c1, t1.c2) THEN CASE rt35.c2  WHEN '堑}q\w\n~' THEN rt35.c1 ELSE t0.c1 END END, (((t0.c1, rt35.c3, t1.c2)) NOT BETWEEN ((((rt35.c2) BETWEEN (t0.c1) AND (rt35.c0)), ((t0.c38) ISNULL), MAX(rt35.c1))) AND ((((rt35.c4) IS TRUE), (((t1.c0)) BETWEEN ((rt35.c1)) AND ((t0.c1))), rt35.c1))), 'Q2{*C~<', (UNLIKELY(rt35.c2) IN ((- (rt35.c2)))) FROM rt35;SELECT ALL (((rt35.c0) BETWEEN (rt35.c1) AND (rt35.c4)) IN (SQLITE_COMPILEOPTION_USED(t1.c2), CAST(t0.c0 AS TEXT))), (((((((rt35.c3))>=((t0.c1))))OR((+ (t1.c2)))))AND(((rt35.c1)=(rt35.c1)))), ((((((rt35.c3)OR(rt35.c1)))AND(t1.c2 COLLATE NOCASE)))OR(CASE WHEN t1.c1 THEN rt35.c4 ELSE rt35.c3 END)) FROM t0, t1, rt35 WHERE (((x'708d') ISNULL)) GROUP BY (((NOT (rt35.c0))) ISNULL) HAVING ((((t1.c2)+(t1.c0)))*(COUNT(*))); -- 0ms;
SELECT DISTINCT ((((t1.c1) IS TRUE))||(t1.c1)) FROM t0, rt35 WHERE ((((((' g*V%V'))<=((NULL))))LIKE(CASE WHEN x'7ef8' THEN '-1498996071' ELSE NULL END)));SELECT DISTINCT ((t1.c1)>(((t0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)))), ABS(CASE rt35.c1  WHEN rt35.c1 THEN rt35.c3 ELSE rt35.c1 END), (((rt35.c4)) NOT BETWEEN ((LIKELIHOOD(DISTINCT t0.c0, 0.33356429251169517))) AND ((0.6462983759288188))), ((((t1.c2 IN ()), (((rt35.c3))<((NULL))), UPPER(DISTINCT t0.c0)))=((AVG(rt35.c1), (rt35.c0 IN ()), ((rt35.c1)<>(t0.c38))))), ((((t1.c0) ISNULL))GLOB(((t0.c1) NOT BETWEEN (rt35.c1) AND (rt35.c4)))) FROM t1 FULL OUTER JOIN t0 ON (~ (rt35.c2 COLLATE RTRIM)) LEFT OUTER JOIN rt35 ON ((CASE rt35.c0  WHEN rt35.c0 THEN rt35.c4 END) BETWEEN (((((t1.c2)AND(t1.c1)))OR(t0.c38))) AND (((rt35.c0)-(t0.c38))));SELECT CASE (t1.c0 IN (t1.c0))  WHEN LIKELIHOOD(DISTINCT rt35.c2, 0.6722702362830957) THEN -1.360589009E9 END FROM t0, t1, rt35; -- 0ms;
SELECT DISTINCT ((((((rt35.c4)OR(rt35.c2)))AND(t0.c38)))||(t1.c2)) FROM t1, t0, rt35 WHERE (((CASE NULL  WHEN NULL THEN 0.5509595854300916 ELSE '' END) IS FALSE)); -- 0ms;
SELECT ALL (((rt35.c0 IN ())) NOT BETWEEN (((t0.c1) BETWEEN (t1.c0) AND (t1.c0))) AND (MAX(rt35.c0))) FROM t0 WHERE ('0.1309263363069475');SELECT ALL ((((((rt35.c2)&('2Z^1C4')))OR(PRINTF(t0.c0))))AND(((rt35.c4)<>(t1.c0)))) FROM rt35, t1 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (CASE x'29a9'  WHEN x'4d02' THEN x'' WHEN NULL THEN NULL WHEN 2002463575 THEN '''t' ELSE x'6b0d' END) AND (('\O+EsA.' IN ('-975628746'))))) GROUP BY (((NOT (rt35.c0)))<<(((rt35.c2) ISNULL))) HAVING ((((t0.c38) BETWEEN (rt35.c3) AND (rt35.c4)))<=((((rt35.c0)) NOT BETWEEN ((NULL)) AND ((t1.c1)))));SELECT 0.016230699066872578 FROM rt35 WHERE ((~ (((('1505352944'))<=(('533029633')))))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((((((((t0.c1)OR('A')))AND(rt35.c3)))AND(rt35.c0)))OR(t0.c38))) FROM t1, rt35 WHERE (CASE WHEN (x'' IN (0.9894805765736361)) THEN ((NULL) NOTNULL) WHEN (('-1379765933')||(0x4992fffc)) THEN (('ꬆr餯') NOT NULL) WHEN (x'' IN ('0.6079743098781404')) THEN (((0xc812e5b)) BETWEEN (('')) AND ((0x6850e68d))) ELSE (((NULL, x'ef3e', 0.12706164246803953))==((-5.13585339E8, NULL, 0.2666135437201107))) END) ORDER BY t1.c2 COLLATE BINARY  NULLS FIRST;SELECT DISTINCT (NOT ((((x'', t1.c1, t0.c38, NULL, t1.c0)) NOT BETWEEN ((rt35.c2, t1.c0, t1.c0, rt35.c0, t0.c1)) AND ((t0.c0, t1.c0, x'', t0.c0, rt35.c1))))), (((rt35.c1)) BETWEEN (((- (x'')))) AND ((((t0.c1)<>(-478563235))))), rt35.c4 FROM t0 WHERE (CAST(IFNULL('', 0.06780144851988978) AS INTEGER));SELECT DISTINCT COUNT(*) FROM t1 WHERE (CAST(((2113667059)LIKE(x'')) AS NUMERIC)); -- 0ms;
SELECT x'eb82', (((+ (t1.c1)))||((NOT (rt35.c1)))), (((((rt35.c3)IS(t1.c2))))<=((((t1.c1) NOTNULL)))) FROM t0 WHERE (NULLIF(DISTINCT ((0.7521065884245827) NOT BETWEEN (NULL) AND (NULL)), (((x'')) NOT BETWEEN (('895295151')) AND (('-225405904')))));SELECT SUM(((rt35.c2)-(rt35.c3))) FROM t1, rt35; -- 0ms;
SELECT DISTINCT NULL FROM t1, t0, rt35 WHERE (TYPEOF(1151514005) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((json_array_length(rt35.c3))%((t1.c1 IN ()))) FROM t0 GROUP BY (((rt35.c1 IN ()))%(x'0427'));SELECT DISTINCT ((((rt35.c2)OR(rt35.c3)))OR(rt35.c0)) COLLATE NOCASE FROM t1, t0, rt35 WHERE (((CAST('-320905857' AS INTEGER))OR(NULLIF(DISTINCT 1263101598, '963216732')))); -- 0ms;
SELECT ((0Xffffffff866dd10d) IS TRUE) COLLATE NOCASE FROM t1, rt35 WHERE ((((((~ ('0.21903015512835078')))AND((('毵3')>('-1172539123')))))OR(TRIM(0.47331743250918934, 0.19799318241441222)))); -- 0ms;
SELECT DISTINCT CAST('-643453138' AS TEXT) FROM rt35, t1 WHERE ((((((NULL)IS NOT('751621462'))))>(((x'' IN ()))))); -- 0ms;
SELECT DISTINCT ((LIKELY(DISTINCT rt35.c1))IS(CASE t1.c1  WHEN 0.5711503188068107 THEN rt35.c3 WHEN t1.c0 THEN t0.c0 WHEN rt35.c0 THEN x'' END)) FROM t0;SELECT DISTINCT (+ (((rt35.c0)|(rt35.c1)))) FROM t1, t0, rt35 WHERE ((((((0.1881874761547132)OR(1966735024)))AND(x'')) IN ((x'a027' IN ())))); -- 0ms;
SELECT DISTINCT CAST((~ (rt35.c0)) AS TEXT) FROM t1, t0, rt35; -- 1ms;
SELECT DISTINCT PRINTF(UNLIKELY(t1.c1), 0.025229089424608664, ((t0.c1)>=(t0.c38))) FROM t1, t0, rt35 WHERE (TOTAL_CHANGES()) GROUP BY (DATE(rt35.c2, rt35.c2, t1.c1) IN (-1517805628)), 1593889877, (((((rt35.c1)) BETWEEN ((rt35.c1)) AND ((rt35.c4)))) BETWEEN (((t1.c0) IS FALSE)) AND ((NOT (t0.c0))));SELECT ((((GLOB(rt35.c0, 'w5 _dt'))OR(rt35.c2)))AND(TYPEOF(rt35.c3))) FROM t0, rt35, t1 WHERE (((((((x'')AND(0xffffffffaee70f2f)))AND(x'')))%((NULL IN ('1395387305'))))) LIMIT 33967616; -- 0ms;
SELECT ALL ((((((t1.c2)AND(rt35.c1)))OR(t0.c1))) BETWEEN ((+ (rt35.c4))) AND (AVG(rt35.c1))) FROM t1 ORDER BY '';SELECT (((t1.c1 IN ()))LIKE(load_extension(t1.c1))), LAST_VALUE((~ ((t1.c2 IN (t1.c1, t1.c2))))) OVER (), ((((((((((t0.c0) BETWEEN (t0.c38) AND ('1321480629')))OR(CAST(t0.c0 AS TEXT))))AND(((rt35.c0) IS FALSE))))OR(t0.c0)))OR(rt35.c1)) FROM t1 WHERE ((~ (highlight(x'', NULL, 0.5849319004061996, NULL))));SELECT DISTINCT LAG(rt35.c4, (((rt35.c3 COLLATE BINARY))>=(((((rt35.c0))>=((rt35.c2)))))), ((((('!Z')AND(rt35.c2)))OR(rt35.c4)) IN ())) OVER () FROM t1, rt35; -- 1ms;
SELECT DISTINCT AVG(LIKELY(t0.c38)), ((CAST(rt35.c0 AS TEXT))*((((t0.c1, t1.c0, rt35.c4))<>((t0.c0, t0.c0, t0.c0))))), PRINTF(COUNT(t1.c1), rt35.c3 COLLATE BINARY, ((rt35.c4)>>(t0.c38))) FROM t0, rt35 GROUP BY CASE WHEN rt35.c1 THEN CASE t1.c2  WHEN t1.c2 THEN t0.c38 WHEN t1.c2 THEN rt35.c4 WHEN t1.c0 THEN t0.c38 END END, '-1152979825', ((CASE WHEN t1.c1 THEN t1.c2 END) NOT BETWEEN ((rt35.c0 IN ())) AND (CAST('731065199' AS BLOB)));SELECT ALL MIN(CASE WHEN t0.c1 THEN NULL END) FROM t1 WHERE (((((((((((((0.4399181900206859)AND(0.4956175561099344)))AND(x'')))OR('407159003')))OR(x'065c')))AND(x'dde5')))AND(0.23154885676152492)) COLLATE NOCASE);SELECT DISTINCT 0.26419551234198113 FROM t0; -- 0ms;
SELECT ALL (+ (rt35.c2 COLLATE RTRIM)), GROUP_CONCAT((NOT (rt35.c0))) FILTER(WHERE ((t0.c1) NOT BETWEEN (rt35.c1) AND (rt35.c0)) COLLATE BINARY) OVER (), LAST_VALUE(((((t1.c1)<<(t1.c2))) IS TRUE)) OVER ( ORDER BY CAST((+ (t1.c1)) AS BLOB) ASC, (((0.8720978163150506, ((rt35.c0) IS FALSE), t1.c1))==((CASE WHEN t1.c0 THEN t0.c1 END, ((t1.c1) NOT BETWEEN (t0.c1) AND (t1.c1)), ((t0.c0) IS TRUE)))) ASC) FROM t1;SELECT ALL TOTAL(((((((((((((rt35.c4)OR(rt35.c1)))AND(t1.c0)))OR(t1.c2)))AND(rt35.c4)))OR(0.070146527642725)))AND(t0.c1))) OVER (), NULL, ((((rt35.c4) NOT BETWEEN (t0.c1) AND (t0.c38)))-(0.4968393007769135)) FROM t0, rt35, t1 WHERE (942665478); -- 1ms;
SELECT ((((((t1.c1)AND(rt35.c3)))AND(rt35.c0))) IS FALSE) FROM t1, rt35 WHERE (((CASE '-1329680218'  WHEN NULL THEN '⋥' END)>(((0Xffffffffaf82bfbb)IS NOT(0X3ced4177))))); -- 0ms;
SELECT ALL (t1.c1 IN ()) COLLATE NOCASE, ((CAST(rt35.c4 AS TEXT)) NOT NULL), (((t0.c1)) BETWEEN ((SUM(t1.c0))) AND (((rt35.c2 IN ())))) FROM rt35, t0, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(COUNT(*)) FROM t1, rt35;SELECT DISTINCT (NOT (CASE WHEN rt35.c3 THEN rt35.c1 END)) FROM t1, t0 WHERE (IFNULL((NULL IN ()), ((('1280111407'))=((NULL)))));SELECT DISTINCT (((rt35.c1)||(t1.c2)) IN ()) FROM rt35 WHERE (((((0.6460929459259493)<(NULL))) BETWEEN ((((x'fb40'))>((-1399651380)))) AND (((NULL) NOT BETWEEN (0Xfffffffffc5cf8c0) AND ('1505352944'))))); -- 0ms;
SELECT TOTAL(CASE WHEN t1.c0 THEN t1.c1 END) FROM t1 WHERE ((((('584569647')<<(''))) NOT BETWEEN ((('Y#') ISNULL)) AND (CAST('0.35314420962352633' AS TEXT)))) GROUP BY (+ ((rt35.c1 IN ()))) HAVING (~ (((rt35.c2)<=(t0.c1))));SELECT ALL ((HEX(rt35.c1)) ISNULL), MAX(((((t0.c1)OR(rt35.c4)))AND(rt35.c0))), CASE CAST(rt35.c1 AS NUMERIC)  WHEN CAST(rt35.c0 AS NUMERIC) THEN (((rt35.c4, NULL, t0.c0)) NOT BETWEEN ((t1.c1, t1.c0, rt35.c3)) AND ((t0.c38, x'0e74', rt35.c4))) ELSE (((rt35.c3))>=((t0.c0))) END FROM t1, t0 WHERE ((~ (CAST(1.616898309E9 AS TEXT))));SELECT COUNT(*) FROM t1 ORDER BY ((((((t0.c38)/(t1.c0)))OR(t0.c38)))AND((((rt35.c3))=((rt35.c1))))) DESC  NULLS LAST, 5.97163515E8;SELECT ALL ((rt35.c2 COLLATE NOCASE) BETWEEN (COUNT(rt35.c3)) AND (0.7638634539597522)) FROM t1 WHERE ((((NULL, 1911885086, NULL)) NOT BETWEEN ((((0.007011075757850205)==(1.243417875E9)), NULL, (+ ('X?')))) AND (('-1897035128', NULL, (x'' IN ()))))) LIMIT -1663652170 OFFSET -1975974929;SELECT DISTINCT TOTAL((((rt35.c4))>=((t1.c2)))) FROM t0 WHERE (((((('')) NOT BETWEEN ((0.7288929745156132)) AND ((0.365930859863296))))<>((((('-W摅蒱X')OR(2.57226211E8)))AND(x'')))));SELECT ALL CASE WHEN (- (rt35.c4)) THEN x'' WHEN (t1.c0 IN ()) THEN ((rt35.c0) NOTNULL) WHEN CASE WHEN t0.c0 THEN t0.c1 END THEN ((rt35.c1) BETWEEN (rt35.c1) AND (t0.c1)) WHEN 0.1474666408634867 THEN ((rt35.c0)IS NOT(0.31701174385493514)) WHEN CAST('-638364728' AS REAL) THEN ((rt35.c3) NOT BETWEEN (rt35.c0) AND (rt35.c2)) END, GLOB(rt35.c0 COLLATE NOCASE, (t1.c2 IN (t1.c2))), CAST(x'' COLLATE NOCASE AS INTEGER) FROM t1, rt35 WHERE ('') LIMIT 128997419 OFFSET 1335370469;SELECT DISTINCT '0.26291708618389487' FROM t1, rt35 WHERE (CAST((((NULL)) NOT BETWEEN ((x'')) AND (('biV'))) AS BLOB)); -- 0ms;
SELECT DISTINCT (NOT (rt35.c1 COLLATE RTRIM)), ((TOTAL(t1.c2))>=(((((((((rt35.c0)OR('V[X4浢1먴#')))AND(rt35.c1)))AND(t0.c0)))OR(rt35.c0)))), TOTAL(x''), CAST(((NULL)+(rt35.c1)) AS REAL), ((CAST(rt35.c4 AS INTEGER))>(rt35.c4)) FROM t1 WHERE (((((x'')|(0.7972468571296777))) ISNULL));SELECT ALL ((CASE WHEN rt35.c1 THEN '\' WHEN t0.c0 THEN t0.c38 WHEN t0.c0 THEN rt35.c1 END)|(((((t0.c38)AND(rt35.c0)))OR(rt35.c1)))), CASE CAST(t0.c1 AS REAL)  WHEN ((rt35.c4) IS FALSE) THEN x'31b6' ELSE rt35.c3 END, (((((((rt35.c1, rt35.c2, rt35.c0)) BETWEEN ((rt35.c4, t0.c1, -6.83069768E8)) AND ((rt35.c2, rt35.c0, t1.c1))))AND(rt35.c1)))AND(((t1.c1)>=(t1.c2)))) FROM rt35;SELECT (((rt35.c3, rt35.c0, t1.c2))>((t1.c2, t1.c0, rt35.c3))) COLLATE BINARY FROM rt35, t0, t1; -- 0ms;
SELECT DISTINCT rtreenode(rt35.c1 COLLATE BINARY, ((((rt35.c1)AND(rt35.c3)))AND(rt35.c1))), (NOT (t0.c0)), CAST(((rt35.c3) NOT BETWEEN (rt35.c3) AND (rt35.c0)) AS INTEGER) FROM t0, rt35, t1 WHERE ((((((NOT (1875223776)))OR((((0.12281878938013246, '꧐X', '', NULL, 0.0724750676748761))>((x'7d15', '1828242032', 0.29247937862724305, x'', NULL))))))OR(json_array_length(x''))));