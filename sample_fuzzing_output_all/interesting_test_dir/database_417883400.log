-- Time: 2024/06/07 15:13:45
-- Database: database0
-- Database version: 3.40.0
-- seed value: 417883400
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 2ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 3ms;
UPDATE OR IGNORE rt1 SET c2='t' WHERE ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)))*(((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))); -- 1ms;
ANALYZE; -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (x''), ('Mj'), (''), (0.08143310259986203), ('<y'); -- 1ms;
INSERT OR REPLACE INTO rt1(c0, c1, c2) VALUES (NULL, 0.02371754429734174, 'tf'); -- 5ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt1 SET c2=x'9b38' WHERE ABS(((rt1.c2)>=(rt1.c0))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES ('0f'); -- 1ms;
UPDATE OR IGNORE rt1 SET (c2)=(0.4572065789608819); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES ('t', '0.08143310259986203', '-2113371186'), ('-112185364', '', NULL), ('_3<j&GS}', -276639659, '}kX'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES ('0.08143310259986203', NULL), (0X1699ed99, 0.77543830426904), (x'', NULL); -- 0ms;
DELETE FROM rt1 WHERE rt1.c2; -- 2ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (x'', '', NULL), (NULL, NULL, '-112185364'), ('-2113371186', 0.17728197952434432, NULL), ('-781642092', 0.3202528565720453, NULL), (NULL, 0.08143310259986203, 'er''\r'); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=''; -- 1ms;
UPDATE OR ROLLBACK rt1 SET c0=0.07914025059533025; -- 1ms;
UPDATE OR IGNORE rt1 SET c1=x''; -- 4ms;
ANALYZE rt1; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-394910765 unordered'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(x'') WHERE CAST(rt1.c1 COLLATE RTRIM AS REAL); -- 0ms;
INSERT OR REPLACE INTO rt1(c0) VALUES ('-1888485244'); -- 3ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE rt1 SET c1='F_7Mz\r}''3' WHERE ((rt1.c2 COLLATE RTRIM) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES (0X359fbe78, x''), (x'', 0.6033193533422758), (x'', 'YJZez+[%'); -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='0.17728197952434432' WHERE (((rt1.c1, rt1.c1, rt1.c1)) BETWEEN ((((rt1.c1) ISNULL), ((rt1.c0) IS TRUE), ((rt1.c2)/(rt1.c2)))) AND ((rt1.c2, json(-1.12185364E8), CAST(rt1.c0 AS TEXT)))); -- 0ms;
PRAGMA main.auto_vacuum = FULL; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL; -- 1ms;
COMMIT TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt1 SET (c0, c1, c0)=('', NULL, 0.724669572137755) WHERE CASE CHAR(rt1.c0)  WHEN (rt1.c2 IN (rt1.c0)) THEN ((rt1.c1) NOTNULL) END; -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES ('0.4572065789608819'); -- 0ms;
UPDATE rt1 SET (c1)=(NULL) WHERE ((rt1.c2 IN ()) IN ()); -- 0ms;
UPDATE rt1 SET (c0)=(x''); -- 0ms;
UPDATE OR ABORT rt1 SET (c1, c2)=(x'', 0xffffffffd9cce6c5) WHERE (((((NULL)OR(rt1.c0)))AND(rt1.c2)) IN ()); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=NULL, c1=0X1699ed99, c1=0.04510155748434275 WHERE (rt1.c2 IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES ('\y&XWe	'); -- 0ms;
REINDEX; -- 1ms;
ANALYZE; -- 6ms;
UPDATE OR IGNORE rt1 SET c0=NULL, c0=0.4572065789608819; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt1 SET c2=x'' WHERE (+ (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))); -- 6ms;
INSERT OR REPLACE INTO rt0(c2, c1) VALUES (-926303693, x'b1c1'); -- 1ms;
INSERT OR ABORT INTO rt1(c2, c1) VALUES ('', x'f3456516'), (-1936914022, CASE (((0Xffffffffd1691694))>((x'')))  WHEN LENGTH('f') THEN (('') BETWEEN (0.3202528565720453) AND (0.07914025059533025)) WHEN (((0.08143310259986203)) BETWEEN (('634480276')) AND ((x'424e'))) THEN 0.19105903741288832 COLLATE BINARY WHEN x'' COLLATE NOCASE THEN CASE WHEN '-640883003' THEN NULL END ELSE ((x'')%(x'')) END), ('-1267266291', NULL), ('-276639659', 0.6961938867135139), (0.6947684225171655, 0.410159598666184), ('899661432', x'ea08'), (NULL, 0.737270210246959); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2, c1) VALUES (0.6820895186566467, x'71f9', 'YJZez+[%'); -- 0ms;
END TRANSACTION; -- 1ms;
UPDATE rt1 SET (c2)=(NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2029009929 unordered'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=('') WHERE 0.42744264597981496; -- 1ms;
UPDATE OR IGNORE rt1 SET (c2)=(NULL) WHERE CAST(IFNULL(x'', rt1.c0) AS TEXT); -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=1227601501; -- 0ms;
UPDATE OR FAIL rt1 SET (c2)=(0.8408974535770763) WHERE rt1.c0; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL, c2=NULL, c0=''; -- 0ms;
INSERT OR ABORT INTO rt1 VALUES ('-781642092', '-1267266291', NULL), (x'e6d8ff26', NULL, x''), ('', 0.07914025059533025, '1444348471'); -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (0.6820895186566467), (NULL), (0.009059006751272913); -- 1ms;
UPDATE OR ABORT rt0 SET c2=0.904230988771204, c2=0.19105903741288832, c0=x'' WHERE ((((rt0.c2) ISNULL)) NOT BETWEEN ((('1695758454')-(rt0.c0))) AND (((rt0.c2)%(rt0.c0)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c1=0.944715076572728 WHERE rt0.c1; -- 1ms;
UPDATE rt1 SET (c1)=(-1.888485244E9); -- 4ms;
VACUUM; -- 5ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('MJ'); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (899661432, NULL), ('f', NULL), (NULL, NULL); -- 1ms;
INSERT OR IGNORE INTO rt1 VALUES (0.0, -1e500, '-781642092'); -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT ); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=-781642092, c0=NULL, c1=0x886b224 WHERE CASE '_3<j&gs}'  WHEN ((rt1.c0)=(rt1.c1)) THEN (~ ('-h''9')) END; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(''); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c20; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('쏷H3mvryB\r', x'42b8'); -- 0ms;
PRAGMA main.soft_heap_limit = 0; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL COLLATE BINARY)); -- 0ms;
REINDEX BINARY; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ANALYZE t1; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c20 TO c54; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c54 TO c97; -- 0ms;
UPDATE t1 SET (c97)=(0.77543830426904); -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE OR REPLACE t1 SET c97=NULL WHERE (((t1.c97) BETWEEN (t1.c97) AND (t1.c97)) IN ()); -- 1ms;
REINDEX; -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT NULL FROM t1, rt1, rt0 WHERE (('tf' IN ())) INTERSECT SELECT (CASE rt0.c0  WHEN t1.c97 THEN rt0.c0 ELSE rt0.c0 END IN ()) FROM t1, rt0, rt1; -- 1ms;
SELECT ALL ((SUM(rt1.c1))&(((t1.c97)LIKE(rt0.c1)))) FROM rt0, rt1, t1; -- 0ms;
SELECT COUNT(*) FROM rt0; -- 0ms;
SELECT ALL rt1.c0 COLLATE RTRIM FROM rt0 GROUP BY (((((rt0.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))AND(((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))));SELECT DISTINCT ((((t1.c97)!=(rt0.c0)))<<(((t1.c97)<=(rt1.c1)))), (((rt0.c2)) NOT BETWEEN ((((rt0.c0) BETWEEN (0.9191288725437333) AND (rt1.c1)))) AND ((CAST(x'' AS NUMERIC)))), ((CAST(rt1.c1 AS REAL))AND(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c1 END)) FROM rt1, t1 WHERE (((x'') NOTNULL));SELECT COUNT((rt1.c2 IN ())) OVER ( ORDER BY rt0.c2 ASC  NULLS FIRST, CASE '-926303693'  WHEN UPPER(rt1.c0) THEN (((rt0.c2))>=((rt0.c1))) WHEN (~ (rt1.c0)) THEN HEX(rt1.c0) WHEN rt0.c0 THEN ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)) ELSE ((rt1.c2) BETWEEN (rt0.c0) AND (rt0.c0)) END  NULLS FIRST) FROM rt1;SELECT ((rt1.c2) IS TRUE) COLLATE NOCASE FROM rt0;SELECT DISTINCT (+ (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c2 THEN NULL ELSE rt0.c1 END)) FROM t1, rt0, rt1; -- 0ms;
SELECT ALL (((rt1.c0 IN ())) IS FALSE) FROM rt1 WHERE (((((- (NULL)), CASE WHEN NULL THEN 0.609632763385212 END, CAST(0xffffffffbff6c208 AS TEXT), CAST('N)' AS NUMERIC), ((x'')<=(-9.26303693E8))))<=((NULL, ((0xffffffff870fc3f7)|(NULL)), (NOT ('')), NULL COLLATE NOCASE, 0.77543830426904 COLLATE NOCASE)))) LIMIT 1348804232 OFFSET 1621899057; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS NUMERIC))IS NOT(GROUP_CONCAT(rt0.c2))), (((rt1.c2)) NOT BETWEEN ((t1.c97)) AND ((rt1.c2))) COLLATE RTRIM, COUNT(*) FROM t1, rt0, rt1 WHERE (ABS(((NULL)<=(NULL)))) LIMIT 1582078427; -- 0ms;
SELECT DATETIME(((((rt0.c0)OR(rt1.c0)))AND(t1.c97)), GROUP_CONCAT(rt1.c2), (rt1.c0 IN ())) FROM rt1;SELECT CAST(((x'') IS FALSE) AS TEXT), ((((rt0.c1)/(rt1.c2)))/(CHAR(rt0.c2))), (((t1.c97)) BETWEEN ((CASE t1.c97  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND ((CAST(rt1.c2 AS INTEGER)))) FROM rt1, rt0, t1 WHERE (((((x'') IS FALSE)) BETWEEN ((('0.19105903741288832') NOT BETWEEN ('0.08143310259986203') AND (0.18957058927653692))) AND ((((x''))!=((NULL)))))); -- 0ms;
SELECT DISTINCT json_quote(t1.c97) FROM rt0 LIMIT 171291721 OFFSET 1047460559;SELECT ALL CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(x'5cb3' AS INTEGER) WHEN ABS(t1.c97) THEN (- (rt0.c1)) WHEN ((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)) THEN (NOT (rt0.c2)) END FROM t1, rt1, rt0 GROUP BY CASE rt1.c1  WHEN 0x5490681 THEN rt0.c2 END COLLATE NOCASE HAVING (- (HEX(DISTINCT t1.c97))); -- 0ms;
SELECT DISTINCT (- (rt1.c2)) FROM t1, rt0 WHERE (CASE 'a<'  WHEN '-2113371186' THEN NULL WHEN '-781642092' THEN 0.7372085177523885 WHEN 0.37442035818463104 THEN '-1888485244' ELSE x'63cf' END COLLATE RTRIM) GROUP BY NULL HAVING IFNULL(t1.c97, CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c2 THEN x'' WHEN rt0.c0 THEN t1.c97 WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END);SELECT DISTINCT ((0.5556720761963038) BETWEEN (LIKELY(rt1.c2)) AND (((rt1.c0)IS NOT(NULL)))) FROM rt1, rt0 WHERE (rtreenode(x'', 0.07914025059533025) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt0.c2)|(t1.c97)) COLLATE NOCASE, (+ (((rt1.c0)>=(rt0.c2)))), (MAX('zd') IN ((0.04510155748434275 IN ()))) FROM rt0, rt1, t1; -- 0ms;
SELECT DISTINCT ((rt0.c0 IN ()) IN ()) FROM t1, rt1 ORDER BY CASE WHEN (+ (rt0.c1)) THEN NULL WHEN x'c78e' THEN rt1.c2 COLLATE RTRIM WHEN (~ (t1.c97)) THEN ((rt0.c1)>=(rt0.c1)) ELSE -1878268771 END;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((json_extract(rt0.c1, rt0.c1, rt1.c0, t1.c97, rt0.c2, rt1.c1))) AND (((+ ('-248275228'))))) FROM rt1, rt0;SELECT ROUND(((((((((rt1.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)), (rt1.c1 IN ())), TOTAL(((rt0.c1) ISNULL)) OVER ( ORDER BY CAST(((NULL) BETWEEN (rt1.c0) AND (rt0.c2)) AS REAL)  NULLS LAST, rt0.c2 ROWS  CURRENT ROW EXCLUDE GROUP), MAX(rt1.c1) COLLATE BINARY COLLATE BINARY, CAST((+ (rt1.c2)) AS INTEGER), (- (CASE rt1.c0  WHEN rt0.c0 THEN t1.c97 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)), (((rt1.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((((rt0.c0) NOT NULL), CAST(rt1.c1 AS NUMERIC), rt0.c2)) AND (((- (rt0.c0)), COALESCE(rt0.c2, rt1.c2), SUM(t1.c97)))), GROUP_CONCAT(CASE rt0.c2  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END) OVER () FROM t1;SELECT DISTINCT CASE WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (0Xf794ccb)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND ('663720350')) END FROM rt0, t1;SELECT DISTINCT ((t1.c97 IN ()) IN ()), ((((rt0.c2)IS NOT(rt1.c0)))OR(CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 END)), 0.6213169937651881 FROM rt1, t1 WHERE (((1897564176) NOT BETWEEN ((0.8436825738814497 IN ())) AND (CAST(0.41120296597971007 AS NUMERIC))));SELECT DISTINCT 0.5010235029771193, ((CASE t1.c97  WHEN NULL THEN rt1.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN 0.39709223429242635 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN NULL ELSE '' END)=(CAST(rt0.c1 AS NUMERIC))), x'' FROM rt0, rt1 WHERE (((CAST('0.8408974535770763' AS TEXT)) IS TRUE)) ORDER BY (((rt0.c0)+(rt0.c1)) IN ())  NULLS FIRST, (((CAST(rt1.c0 AS NUMERIC)))>((((((rt1.c1)OR(rt0.c1)))AND(t1.c97))))) ASC;SELECT ALL ((((t1.c97) NOTNULL))-(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))) FROM rt1, t1;SELECT ((((((((((rt1.c1) BETWEEN (rt0.c2) AND (rt1.c0)))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))))OR((rt1.c2 IN (rt0.c0, rt0.c0)))))AND(((rt0.c0)<<(rt0.c2)))))AND((((rt0.c2))<=((rt0.c0))))) FROM rt1, rt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), FIRST_VALUE(((rt1.c1) NOTNULL) COLLATE BINARY) OVER (), AVG((rt0.c0 IN ())) FILTER(WHERE LENGTH(TRIM(DISTINCT rt0.c2, rt0.c1))) OVER () FROM rt1, rt0 WHERE ((((0.07914025059533025, x'', x'')) NOT BETWEEN ((((0.5060358835594115) BETWEEN ('-2113371186') AND (-826578459)), CASE WHEN NULL THEN NULL END, COALESCE(0.8065764675573547, ')', '578915897', 0.8378969723825516))) AND ((((((x'')OR(0.5849093056823258)))AND(0.3535181037305599)), (+ (x'a992')), (- (x'')))))); -- 0ms;
SELECT ALL (NULLIF(rt0.c0, rt1.c2) IN (CASE rt0.c1  WHEN rt0.c2 THEN t1.c97 WHEN x'' THEN rt1.c1 WHEN NULL THEN rt1.c0 ELSE rt0.c2 END)) FROM rt1, t1;SELECT DISTINCT ((CASE WHEN rt1.c2 THEN rt0.c2 END) IS TRUE) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((t1.c97)OR(rt1.c2))) BETWEEN ((0X359fbe78 IN ())) AND (((rt1.c2) ISNULL))), ((TOTAL(rt0.c1))!=(((0.7224985097461091) BETWEEN (rt0.c0) AND (rt0.c1)))), (((((((((rt0.c1 IN ()))AND(((rt0.c1) ISNULL))))OR(rt1.c2)))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)))))OR(((rt1.c0)<>(t1.c97)))) FROM rt1 WHERE ((NOT (((0.7466242642862271)!=(x''))))) LIMIT -396096438 OFFSET 775984654;SELECT ALL ((((((((json_patch(rt1.c1, t1.c97))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(t1.c97)))AND((+ (rt1.c2)))))OR(rt0.c1)) FROM t1, rt0 WHERE (0.18957058927653692);SELECT (- (x'9d7f')) FROM rt1, rt0, t1 WHERE (0x278f919e); -- 0ms;
SELECT ((rt0.c1 IN (rt1.c2)) IN (((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c2)))) FROM t1 WHERE (((((((((0.7329219820573392)AND(809486582)))AND('')))AND('Mc^pe')))OR(NULL)) COLLATE RTRIM COLLATE RTRIM);SELECT ALL LEAD(((((((((rt0.c2)OR(rt1.c2)))OR('c{Hx(i4볜')))AND((rt1.c0 IN ()))))OR(rt0.c1)), CAST(rt0.c0 AS BLOB), ((NULLIF(rt1.c0, rt1.c0)) ISNULL)) OVER (), ((((rt1.c2)) NOT BETWEEN ((t1.c97)) AND ((rt1.c2))) IN ()), (0.3938234336420334 IN (rt1.c2)) COLLATE RTRIM FROM rt1, rt0; -- 1ms;
SELECT ((CASE WHEN rt0.c1 THEN x'' END) BETWEEN ((+ (rt0.c2))) AND (MIN(rt0.c0))), CAST(((rt1.c2)>>(rt0.c0)) AS REAL), 0.3746711567360037 FROM rt0 WHERE (NULLIF(DISTINCT 'K', (NULL IN ())));SELECT ((((rt0.c2) NOT NULL))/(((rt0.c0)!=(rt0.c0)))) FROM rt1, t1, rt0; -- 0ms;
SELECT ALL (- (((((rt0.c1)AND(t1.c97)))AND('쏷h3mvryb\r')))) FROM t1, rt0, rt1 WHERE (CASE x'1038'  WHEN ((((((((-926303693)OR('-600825744')))AND(NULL)))OR('B傩P')))AND('')) THEN ((((-1267266291)OR(0Xffffffff9d458b7a)))OR(0.725937133646626)) ELSE (NOT (0.6820895186566467)) END); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL)) IS FALSE) FROM rt0; -- 0ms;
SELECT (((t1.c97)) NOT BETWEEN (((((rt0.c0))<((rt0.c2))))) AND (((rt0.c1 IN (rt1.c2))))) FROM rt0 WHERE (((143045156 COLLATE NOCASE) IS TRUE));SELECT ALL CAST((rt0.c1 IN ()) AS BLOB) FROM rt0, rt1, t1 GROUP BY (((rt1.c2 IN ())) IS FALSE); -- 0ms;
SELECT (+ (t1.c97)), CAST(((rt0.c2)LIKE(rt0.c0)) AS BLOB), ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(((t1.c97)-(rt0.c1)))))OR(NULL)) FROM rt1, rt0;SELECT DISTINCT (+ (rt1.c2 COLLATE NOCASE)) FROM rt1, rt0, t1 WHERE (((((0xffffffffd5a0763b)<('-248275228')))>>(((0.39384462036928003)<<(0.1888069871331518))))); -- 0ms;
SELECT ALL rt0.c2 COLLATE NOCASE, ((((rt1.c0)<>(rt0.c0))) BETWEEN (((((rt0.c2)OR(rt1.c2)))AND(rt0.c2))) AND (((rt1.c1)-(rt1.c1)))), LTRIM(0.8409184964611132, ((t1.c97)<<(rt1.c2))) FROM rt1, rt0;SELECT CAST(rt1.c2 AS REAL) COLLATE NOCASE FROM rt0, rt1, t1 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT ALL LOWER(json_array_length(rt1.c2, rt1.c0)) FROM rt1, t1, rt0 WHERE (CASE 0.9327458989629549  WHEN NULL THEN 0Xffffffffa7db45c3 END COLLATE NOCASE COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((((rt0.c0)-(rt0.c2)))%(rt1.c0 COLLATE BINARY)), GROUP_CONCAT(CAST(rt1.c0 AS TEXT)), (((rt1.c2 IN (rt0.c1))) NOT BETWEEN ((+ (rt0.c0))) AND (rt1.c1 COLLATE BINARY)) FROM rt1;SELECT DISTINCT CAST(((((((((t1.c97)OR(rt0.c1)))AND(rt1.c2)))AND(t1.c97)))OR(t1.c97)) AS TEXT) FROM t1, rt0, rt1 WHERE ((((((((0X86b811f)) NOT BETWEEN ((0xffffffffa8898f3c)) AND ((88671873))))AND(LAST_INSERT_ROWID())))AND('0.3938234336420334' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((x'32e2')AND(TOTAL(rt0.c0))))OR((rt0.c1 IN ()))), (- ((((0.6033193533422758)) BETWEEN ((rt1.c0)) AND ((rt0.c0))))), x'' FROM rt0, rt1 WHERE (((((x'')==(x'6280'))) IS TRUE)); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt1 WHERE ((((NULL, NULL, 0.18297038884631844)) BETWEEN ((((NULL)<(NULL)), ((('-1476339068'))!=((1.444348471E9))), CAST(x'' AS NUMERIC))) AND (((('744254238') NOT BETWEEN ('') AND (0x3b102fb8)), (('-640883003') BETWEEN (NULL) AND (NULL)), LAST_INSERT_ROWID())))) GROUP BY ((((rt1.c1) NOTNULL)) IS TRUE); -- 0ms;
SELECT ((((rt0.c2)=(rt1.c2)))>=(json_insert(rt0.c1, rt1.c1, 0.7767771427696153))) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(rt1.c2) FROM rt0, t1, rt1 WHERE ((((('379186585') BETWEEN (1.227601501E9) AND ('*{Zচ'))) NOT NULL)); -- 0ms;
SELECT ALL (((((t1.c97)AND(rt1.c0)))OR(rt1.c2)) IN ()) FROM rt0 FULL OUTER JOIN rt1 ON rt0.c2 CROSS JOIN t1 ON '1861802593'; -- 0ms;
SELECT DISTINCT (+ (CAST(rt1.c1 AS INTEGER))) FROM rt1, t1 WHERE (0.26778040221041544); -- 0ms;
SELECT ALL (((((rt0.c0)||(rt1.c0))))>=((x''))), (CASE WHEN t1.c97 THEN rt0.c1 WHEN t1.c97 THEN rt0.c2 WHEN t1.c97 THEN rt0.c2 END IN ()), COUNT(*) OVER () FROM rt1, t1 WHERE ((((+ ('0.8409184964611132'))) BETWEEN ((NULL IN ())) AND (((x'8e5c')%(x'')))));SELECT ALL ((((rt1.c2) NOTNULL))==(rt0.c0 COLLATE RTRIM)) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT rt1.c2 FROM rt1, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))) IN ()) FROM rt0, t1; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)) NOT BETWEEN ((t1.c97)) AND ((rt1.c0))), CASE rt0.c0  WHEN rt1.c2 THEN rt0.c1 END, ((((rt1.c0)AND(x'')))OR(NULL))))=(((((rt1.c0))>=((t1.c97))), ((rt0.c0) BETWEEN (rt0.c0) AND (t1.c97)), (rt0.c1 IN (rt0.c1, rt0.c0))))) FROM rt1, rt0, t1 WHERE (CASE x''  WHEN x'733d' THEN 'qF' ELSE 'VZ>K%5' END COLLATE NOCASE); -- 0ms;
SELECT ALL CASE WHEN ((((rt0.c0)OR(rt1.c0)))OR(rt0.c0)) THEN 0.9451421774413937 END, LENGTH(((rt1.c0)<=(x''))), CASE ((rt0.c1)AND(rt0.c0))  WHEN CAST(t1.c97 AS NUMERIC) THEN ((rt1.c0) NOTNULL) END FROM rt1, t1;SELECT DISTINCT rt0.c0 FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)))%(CASE t1.c97  WHEN 0.8072693622998344 THEN rt0.c2 WHEN t1.c97 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c1 END)) FROM rt1;SELECT ALL SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT NULL)) FROM rt1, rt0 WHERE (((((NULL) BETWEEN (x'10f2') AND ('')))GLOB((('899661432') NOT BETWEEN (NULL) AND ('}kJ'))))); -- 0ms;
SELECT DISTINCT LAST_VALUE((~ ((((rt0.c2))<=((t1.c97)))))) OVER (), TOTAL(((rt0.c1)/(rt1.c1))) OVER (), HEX(((rt1.c2) IS TRUE)) FROM t1, rt1, rt0; -- 0ms;
SELECT ALL (rt0.c0 IN ()) COLLATE RTRIM, ((((((rt1.c2)<=(rt1.c0)))OR((~ (t1.c97)))))OR(-2.76639659E8)), TRIM(DISTINCT ((rt0.c1)/(rt0.c1)), ((rt0.c1)+(rt1.c0))) FROM rt0, t1, rt1 ORDER BY (((CAST(rt1.c2 AS BLOB)))<((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) DESC; -- 0ms;
SELECT ALL (rt0.c0 IN ()) FROM t1, rt1, rt0 WHERE (((((((0.8065764675573547) BETWEEN (0Xfffffffff640831a) AND (x'')))OR((+ (x'')))))OR(CASE -1584823863  WHEN '1334907672' THEN -1538379626 ELSE x'7109' END))); -- 0ms;
SELECT ALL CAST(((t1.c97)&(rt1.c0)) AS INTEGER) FROM rt0;SELECT DISTINCT ((((rt1.c1)-(0.2875596750479188))) NOTNULL), GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC)), rt1.c0 FROM t1;SELECT DISTINCT CASE WHEN rt1.c1 THEN t1.c97 END COLLATE NOCASE COLLATE NOCASE FROM rt1;SELECT DISTINCT LAST_VALUE(rt0.c2) OVER () FROM rt0 ORDER BY rt0.c1; -- 0ms;
SELECT -1588729742 FROM rt1; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) IN ()), CAST(((rt0.c0) BETWEEN (t1.c97) AND (rt1.c0)) AS BLOB) FROM rt0 LIMIT 832869046;SELECT ALL NULL FROM rt0, t1 WHERE (x''); -- 0ms;
SELECT MAX(((rt1.c1)LIKE(rt0.c2))), NTH_VALUE(((((((((((0.9327458989629549)AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1)))AND(rt1.c2))) IS TRUE), (((CAST(rt1.c2 AS INTEGER)))<=((((rt1.c1)IS('')))))) OVER (), (((rt0.c0)OR(NULL)) IN ()) FROM rt1 WHERE ((((+ ('x98띭')))+((('8⁰XgB&vv')||('')))));SELECT DISTINCT FIRST_VALUE(0X5490681) OVER () FROM rt0, t1, rt1 WHERE ((((('-396096438') ISNULL))IS(((0X69ad05ee)>>('*{zচ'))))) LIMIT -2075824908; -- 0ms;
SELECT DISTINCT LIKELIHOOD(((rt1.c1) IS FALSE), 0.36615838192725836), CAST((rt0.c0 IN ()) AS BLOB), CUME_DIST() OVER () FROM t1, rt0, rt1; -- 0ms;
SELECT DISTINCT SUM(x'' COLLATE RTRIM), (NOT (IFNULL(DISTINCT rt0.c2, rt1.c1))), ((CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END) NOT NULL) FROM t1 WHERE (NULLIF(x'', ((NULL)<=(252754557))));SELECT DISTINCT ((LOWER(rt1.c1))IS((+ (rt0.c2)))), json_patch(SUM(rt0.c2), 0.8436825738814497), ((((NULL)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)))OR(((0.5667670401515281)>(1533849688)))) FROM rt0 WHERE (((x'' COLLATE RTRIM)>=(CASE 'I#4d빸}L['  WHEN x'd612' THEN x'' WHEN 0.7991560193047512 THEN x'' WHEN NULL THEN NULL ELSE 0.9327458989629549 END)));SELECT NULL, ((((x'61ce')OR(rt1.c0)))AND(((rt1.c0)-(rt0.c0)))), (+ (NULL)) FROM t1, rt0, rt1 GROUP BY ((rt0.c1 COLLATE NOCASE)>(((((((((rt0.c1)AND(rt0.c1)))OR(-808503300)))OR(rt0.c0)))OR(rt1.c0)))), rt1.c1, ((((((rt1.c2)-(t1.c97)))AND(((((((((t1.c97)OR(rt1.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))))OR(((rt1.c2)<<(rt0.c2)))); -- 0ms;
SELECT DISTINCT (((((0.904230988771204)) BETWEEN ((t1.c97)) AND ((x'')))) ISNULL) FROM t1, rt1 WHERE ((+ (CASE WHEN -1870012438 THEN 0.12983747567600223 ELSE NULL END))); -- 0ms;
SELECT rt1.c0 FROM t1, rt0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS BLOB) AS REAL), (- (-1.669339512E9)), LIKELY(LENGTH(rt1.c1)) FROM rt0, rt1, t1 WHERE ((((((((('379186585')OR(((-1.584823863E9) NOT NULL))))AND(((NULL) NOTNULL))))AND((((-2.48275228E8))<=((NULL))))))AND(0.3746711567360037 COLLATE RTRIM))); -- 0ms;
SELECT ALL ((rt0.c2) NOT BETWEEN (t1.c97) AND (rt1.c1)) COLLATE BINARY, (((rt0.c0)AND(rt1.c2)) IN ()), UNLIKELY(((rt1.c0)+(rt1.c2))), ROW_NUMBER() OVER (), 'A.~A9WQ' FROM rt1;SELECT DISTINCT rt0.c2, MIN((rt0.c2 IN ())), RANK() OVER () FROM rt0, t1, rt1 WHERE ((((0xffffffffae3d409c) NOT BETWEEN ('379186585') AND ('	')) IN ())) LIMIT 507633354 OFFSET 783242946; -- 1ms;
SELECT ALL (((((rt1.c2 IN ()))AND(((rt1.c2)<<(rt1.c1)))))OR((rt1.c0 IN (rt0.c1, rt1.c1)))), TOTAL(ABS(rt1.c2)) OVER ( ORDER BY RTRIM(rt0.c2 COLLATE NOCASE)  NULLS LAST), CAST((((0x2714206e, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt1.c2)) AND ((t1.c97, rt0.c0, rt1.c2))) AS REAL) FROM rt0, t1, rt1 WHERE (CASE WHEN ((-1936914022)+(0.046745631555185074)) THEN (+ (-9223372036854775808)) END); -- 0ms;
SELECT ALL GROUP_CONCAT('-27255332') FILTER(WHERE (((t1.c97 IN ())) ISNULL)) OVER (), (~ (((rt0.c0)<=(rt1.c0)))), (NOT (rt1.c1)) FROM rt0;SELECT DISTINCT rt0.c1, AVG((t1.c97 IN ()) COLLATE BINARY) OVER ( PARTITION BY ((rt0.c0 COLLATE RTRIM)IS NOT((~ (rt1.c2)))), CAST((rt0.c2 IN ()) AS BLOB), IFNULL((('1577108585') IS TRUE), ((rt1.c0)IS(rt0.c1))), LIKELIHOOD(((rt1.c1)|(rt1.c2)), 0.6693802575877715)), t1.c97 FROM t1, rt0, rt1 ORDER BY rt0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT (((-597855280) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt1.c0)) FROM rt0, t1 WHERE (CASE CAST('-1218499289' AS NUMERIC)  WHEN ((x'') BETWEEN (1.577108585E9) AND (x'')) THEN (~ (0Xffffffffdc302070)) ELSE (('X77	5C5\n{') NOT BETWEEN (NULL) AND ('GS脟&\nqg傩')) END) ORDER BY 0Xa35b449 ASC;SELECT ALL (((rt0.c0) NOT NULL) IN (CAST(t1.c97 AS BLOB), ((rt1.c1)>=(t1.c97)))) FROM rt0, t1, rt1 WHERE (((SQLITE_VERSION())<(0.942157939191505 COLLATE NOCASE))); -- 0ms;
SELECT ALL (((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN (((t1.c97 IN ()), ((rt0.c1) NOT NULL), ABS(rt1.c2))) AND ((ABS(t1.c97), SQLITE_COMPILEOPTION_USED(rt1.c2), x'' COLLATE BINARY))) FROM t1, rt0 WHERE ((((~ ('832869046'))) NOT BETWEEN ((((0xffffffffdf860367)) BETWEEN (('-1218499289')) AND ((0.9234993737061453)))) AND ('I3	cN' COLLATE RTRIM))) GROUP BY ((rt0.c0 COLLATE BINARY)GLOB(((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) HAVING CAST(rt0.c1 AS REAL);SELECT ALL (~ (CAST(x'' AS INTEGER))) FROM rt1 GROUP BY json(CASE WHEN rt1.c0 THEN rt1.c2 WHEN t1.c97 THEN t1.c97 WHEN rt1.c2 THEN rt1.c0 END);SELECT DISTINCT COUNT(((rt1.c0)AND(rt1.c1))), (- (CAST(rt1.c2 AS INTEGER))), (((rt1.c2, rt1.c1, t1.c97)) NOT BETWEEN ((rt0.c0, rt0.c1, '10620131')) AND ((rt1.c1, rt0.c0, rt0.c1))) COLLATE BINARY FROM rt0;SELECT ALL LIKELIHOOD(DISTINCT CAST(rt1.c2 AS REAL), 0.15198130955329126) FROM rt1, rt0; -- 1ms;
SELECT ALL COUNT((rt1.c2 IN ())) FROM t1 WHERE ((((0.08986717308981107)||(x'')) IN ())); -- 0ms;
SELECT (('939140668')<>(rt1.c2)) FROM rt0, t1, rt1 WHERE (CAST(TYPEOF(x'') AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((rt1.c0)IS(rt1.c1))) BETWEEN (((rt0.c0)==(rt0.c1))) AND ((((rt1.c2, rt0.c0, rt0.c1)) BETWEEN ((rt1.c1, rt0.c2, 'P9~!휷c⁆+땔')) AND ((t1.c97, 0.725937133646626, t1.c97))))) FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((CAST(rt1.c0 AS NUMERIC))OR(((((((((rt1.c1)AND('0.8072693622998344')))AND(rt0.c0)))OR(rt0.c0)))OR(rt1.c0)))))OR(((rt0.c0)>(rt1.c1)))), (NOT (rt1.c1 COLLATE NOCASE)), COUNT(*) OVER ( ORDER BY CASE ((0.942157939191505) BETWEEN ('-2029009929') AND (rt1.c0))  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c97))) THEN ((rt0.c1) ISNULL) END ASC  NULLS FIRST) FROM rt1, t1;SELECT ALL 0.5818832586944768 FROM t1, rt0 WHERE (((((((NULL)AND(NULL)))OR('-600825744')))==(LIKELIHOOD(NULL, 0.38587787347738023)))); -- 0ms;
SELECT DISTINCT MAX(((((rt1.c2)AND(rt1.c2)))AND(rt1.c2))) FROM rt0, rt1 WHERE ((+ (CAST(-1.478801981E9 AS REAL)))); -- 1ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((((((x'')OR(rt0.c2)))AND('-276639659'))))) FROM t1, rt0;SELECT MAX(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) FROM t1, rt1 NOT INDEXED;SELECT ((rt1.c2)/(t1.c97)) COLLATE RTRIM FROM t1 WHERE (load_extension('1834749104') COLLATE RTRIM);SELECT ALL COUNT((+ (rt0.c2))) FILTER(WHERE (((((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c0))))>=((((NULL)<>(t1.c97)))))) OVER (), ((x'') BETWEEN (((rt0.c2)AND(rt0.c2))) AND (CASE rt0.c2  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)), ((((rt1.c2) IS TRUE))<>(((((rt0.c1)OR(rt1.c2)))OR(rt1.c1)))) FROM rt0, t1;SELECT DISTINCT (CAST(rt0.c1 AS TEXT) IN ()) FROM rt0, rt1, t1 LIMIT -1878268771; -- 0ms;
SELECT CASE ((NULL) ISNULL)  WHEN MAX(rt0.c1) THEN ((rt1.c1)/(rt0.c1)) END FROM rt0 GROUP BY (json_object(rt1.c1, rt0.c1, x'3fc3', rt1.c2) IN ()), ((rt0.c2)<>(NULL)), 0.5972572242424078 COLLATE NOCASE;SELECT CAST(CASE '>(.'  WHEN t1.c97 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c1 THEN t1.c97 ELSE rt1.c0 END AS REAL) FROM rt0, rt1 WHERE ((HEX(DISTINCT 0.05411719724205588) IN ())) LIMIT -1478801981;SELECT DISTINCT ((rt0.c2 COLLATE BINARY) NOTNULL) FROM rt0, t1 WHERE (((+ ('')) IN ())) ORDER BY x'', IFNULL(DISTINCT ((NULL)>(rt0.c1)), (~ (rt0.c0))) ASC, CASE (((rt1.c2))<=((rt0.c1)))  WHEN ((t1.c97)GLOB(rt1.c1)) THEN rt0.c0 COLLATE RTRIM ELSE '' END;SELECT 0.482082639863475 FROM rt1, rt0; -- 0ms;
SELECT CASE COALESCE(DISTINCT rt0.c2, rt0.c1, x'', t1.c97, rt0.c0, rt0.c2)  WHEN ((((rt0.c1)OR(rt1.c1)))OR(t1.c97)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt0.c1)) WHEN COUNT(rt0.c2) THEN ((rt0.c0) NOT NULL) WHEN (NOT (rt1.c0)) THEN ((t1.c97) IS FALSE) ELSE CAST(rt0.c0 AS REAL) END, rt1.c1, LIKELIHOOD(COUNT(rt0.c1), 0.8282402675815406) FROM rt1, t1, rt0 WHERE ((+ (CAST(0X599e7288 AS INTEGER)))); -- 0ms;
SELECT ((HEX(rt0.c2)) NOT NULL) FROM t1;SELECT ALL CASE WHEN rt1.c1 THEN rt0.c2 END COLLATE RTRIM, rt1.c0, GROUP_CONCAT(((rt1.c2)*(rt1.c1))) OVER () FROM rt1, t1 WHERE (CASE CASE NULL  WHEN '' THEN 'I,' ELSE 0.23160085371250516 END  WHEN ((((((((((((((((0X16e76890)AND(x'a364')))AND(-7.10904261E8)))OR('1334907672')))AND(1.71291721E8)))AND(x'6e65c048')))OR(0.1293205996298541)))OR(NULL)))OR(NULL)) THEN ((x'')IS NOT('-1299716305')) ELSE (('')||(x'')) END);SELECT DISTINCT t1.c97, ((rt1.c1 COLLATE NOCASE) NOT BETWEEN (((('ొxY\r#}(', 0.5093925595267881, rt0.c0))=((t1.c97, rt1.c2, 0.06541039248103508)))) AND (CASE WHEN rt0.c2 THEN x'' ELSE rt0.c0 END)), (~ (rt1.c0 COLLATE BINARY)) FROM t1;SELECT DISTINCT ((((('45427697', rt0.c2, t1.c97))=((rt0.c0, rt0.c0, rt1.c1))))GLOB((((rt0.c0))<((rt0.c2))))), rt0.c1, TOTAL(CAST(rt0.c0 AS REAL)) OVER () FROM t1 WHERE (NULL) UNION ALL SELECT ALL ((((rt1.c0)AND(((t1.c97)>=(rt1.c2)))))OR((rt1.c0 IN (rt0.c2)))), ((rt1.c0) NOTNULL) COLLATE RTRIM, (((rt1.c1, rt1.c0, rt0.c1))<((t1.c97, '98470611', t1.c97))) COLLATE RTRIM FROM rt1;SELECT DISTINCT CASE rt1.c2 COLLATE RTRIM  WHEN (('S演')<=(rt0.c1)) THEN rt0.c1 ELSE ((((t1.c97)AND(t1.c97)))OR(rt0.c2)) END FROM rt1 WHERE (x'');SELECT DISTINCT ((((MAX(rt1.c2))OR((t1.c97 IN ()))))AND(x'89b60cd0')) FROM rt0, t1, rt1 WHERE (CAST(x'' COLLATE RTRIM AS NUMERIC)) LIMIT 1613212652 OFFSET 2136024960; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY CAST(CAST(rt1.c0 AS REAL) AS REAL) DESC  NULLS LAST GROUPS BETWEEN  UNBOUNDED PRECEDING AND '-1318449565' PRECEDING EXCLUDE CURRENT ROW), ((((((((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR('-112185364')))AND(((rt1.c2) ISNULL))))AND((rt0.c1 IN ()))))AND(((((((((rt0.c0)OR(t1.c97)))OR(t1.c97)))AND(rt1.c0)))OR(rt1.c1)))), ((((rt0.c2)<=(rt1.c2)))+(((rt0.c0) NOT NULL))) FROM rt1, t1, rt0; -- 0ms;
SELECT COALESCE((~ (rt0.c2)), CAST(rt0.c1 AS NUMERIC)), (((rt1.c1) NOT NULL) IN ()), (rt1.c1 IN ()) COLLATE NOCASE FROM t1, rt1 WHERE (CAST((- (0.628282717020417)) AS REAL));SELECT (((((- (rt0.c1)))AND(((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c1 END)) FROM rt0 WHERE (((((((((((((NULL)OR(NULL)))AND(NULL)))OR('}b<[b')))AND(x'')))OR(((('-1299716305')) NOT BETWEEN ((1.834749104E9)) AND ((NULL))))))OR(((7.83242946E8) BETWEEN (NULL) AND (-9.26303693E8)))));SELECT (rt1.c2 COLLATE RTRIM IN ()), CASE WHEN ((rt0.c2)%(rt0.c1)) THEN CASE WHEN t1.c97 THEN rt0.c0 ELSE rt0.c2 END END, CASE CAST(rt1.c2 AS NUMERIC)  WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c2) BETWEEN (t1.c97) AND (rt0.c0)) END FROM t1 WHERE (((('')) NOT BETWEEN (('F')) AND ((0.6519976946130982))) COLLATE BINARY);SELECT ALL (((0.8656385709776596, CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN t1.c97 WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c2 END, TOTAL(rt0.c0)))=((GROUP_CONCAT(rt1.c0), ((rt1.c1)>(rt1.c2)), CASE WHEN '-1478801981' THEN rt0.c1 END))), json_quote(((x'1f8b')<>(rt0.c1))), ((COUNT(*)) IS FALSE) FROM rt0, rt1, t1; -- 0ms;
SELECT ALL ((((NOT ('g跓}|gY')), AVG(t1.c97), ((t1.c97) BETWEEN (x'') AND (rt1.c1))))>(((+ (rt0.c1)), CAST(t1.c97 AS TEXT), (rt0.c1 IN ())))), NULL, (rt1.c2 COLLATE NOCASE IN ()) FROM t1, rt0, rt1 WHERE (((((0.041719259362555716) BETWEEN (0.9694104249643776) AND ('{}'))) NOT BETWEEN (946278682 COLLATE NOCASE) AND ((-1912267563 IN (0.8888485074345298, 1.834749104E9))))) GROUP BY (((((rt0.c0, rt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c0, rt0.c2, t1.c97)) AND ((rt1.c1, rt0.c1, rt1.c0)))) IS TRUE) HAVING COUNT(CAST(rt0.c0 AS REAL)); -- 0ms;
SELECT ALL ((((rt1.c0 COLLATE NOCASE)OR((~ (rt0.c0)))))AND((rt0.c2 IN (rt0.c1, t1.c97)))), COUNT(*), rt1.c2 FROM t1, rt0, rt1 GROUP BY CASE CAST(rt1.c0 AS NUMERIC)  WHEN ((rt1.c2) BETWEEN (rt0.c1) AND (rt1.c0)) THEN ((((t1.c97)AND(x'')))OR(rt1.c2)) WHEN CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN t1.c97 WHEN rt0.c0 THEN t1.c97 ELSE rt1.c2 END THEN LOWER(DISTINCT NULL) WHEN (+ (rt1.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c2 THEN NULL END ELSE (rt1.c0 IN ()) END; -- 0ms;
SELECT DISTINCT x'' FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( RANGE BETWEEN (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOTNULL) FOLLOWING AND ((rt0.c2 COLLATE BINARY) BETWEEN (UPPER(rt0.c0)) AND ((((rt0.c1)) BETWEEN ((t1.c97)) AND ((t1.c97))))) PRECEDING EXCLUDE NO OTHERS) FROM rt1 NOT INDEXED WHERE ((((0.550684070433926) NOT BETWEEN (NULL) AND ('')) IN ()));SELECT DISTINCT CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN t1.c97 THEN t1.c97 WHEN rt1.c2 THEN rt1.c1 END AS REAL), TYPEOF(DISTINCT ((rt1.c0)<(rt1.c2))), (- (rt0.c0 COLLATE RTRIM)), AVG(UNLIKELY(rt0.c1)) OVER (), (((rt1.c1)*(rt0.c0)) IN ((NOT (rt0.c2)))) FROM t1 WHERE (((((x'') ISNULL))>>('x+x?E3o\n' COLLATE BINARY)));SELECT DISTINCT (((x'9080')) NOT BETWEEN (((- (rt1.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (NULL))))), SUM(((rt1.c2) BETWEEN (t1.c97) AND (rt1.c0))) OVER (), ((((rt0.c2, rt0.c1, t1.c97))<>((t1.c97, rt0.c2, rt1.c1))) IN ()) FROM rt0 LEFT OUTER JOIN rt1 ON ((CAST(t1.c97 AS TEXT))&((rt1.c1 IN ()))) LEFT OUTER JOIN t1 ON ((LIKELIHOOD(DISTINCT rt0.c2, 0.27008832674868366))<=(SQLITE_VERSION()));SELECT ((((((((LIKELY(rt1.c2))OR(NULL)))AND(((rt1.c2) ISNULL))))OR(((t1.c97) NOT BETWEEN (rt0.c0) AND (t1.c97)))))OR(CAST(rt0.c1 AS TEXT))) FROM rt1 WHERE (TYPEOF(TRIM(0X47ab5305, NULL)));SELECT ALL CASE (t1.c97 IN ())  WHEN COUNT(t1.c97) THEN (+ (rt0.c2)) ELSE ((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) END FROM t1, rt0, rt1; -- 1ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN t1.c97 WHEN rt1.c0 THEN rt1.c2 END)) AND ((((0X2714206e) IS FALSE)))) FROM rt1, t1;SELECT DISTINCT SUM('1503556232') OVER (), UNLIKELY(CAST(rt1.c2 AS NUMERIC)), ((NULL) NOT BETWEEN (CASE WHEN t1.c97 THEN rt0.c2 ELSE NULL END) AND (((rt1.c1) NOTNULL))) FROM t1, rt0 WHERE (((UPPER(x'2744')) NOT BETWEEN ((((((((('骪2%9ﭏ')OR(x'')))AND(x'57626129')))OR(NULL)))OR(0.4770631150714866))) AND (((0.7936382665682475)>>(x'')))));SELECT DISTINCT LEAD(json_array_length((((t1.c97))<((t1.c97)))), TOTAL_CHANGES(), (- (t1.c97)) COLLATE RTRIM COLLATE BINARY) OVER () FROM t1 WHERE ((((('-1888485244') NOT BETWEEN (x'') AND (0.081698523178929))) NOT BETWEEN (((((919969322)OR(0.9451421774413937)))AND('>/P\n'))) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL CASE rt1.c0  WHEN t1.c97 THEN rt0.c0 END COLLATE RTRIM FROM rt0 FULL OUTER JOIN rt1 ON ((t1.c97) NOT BETWEEN (rt0.c0) AND (((rt1.c0)%(rt1.c2)))) INNER JOIN t1 ON ((rt0.c2)<<(rt0.c1)) COLLATE NOCASE WHERE ('8' COLLATE BINARY) LIMIT -1996784803;SELECT DISTINCT ((((rt0.c1)*(rt0.c0)))-(rt1.c0)) FROM t1 NOT INDEXED WHERE (NULL);SELECT ALL (~ (x'')) FROM rt0; -- 0ms;
SELECT DISTINCT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c97 WHEN rt1.c1 THEN rt0.c1 END IN ()), rt0.c2, LAST_VALUE(CAST((NOT (rt0.c2)) AS BLOB)) OVER () FROM rt0; -- 0ms;
SELECT ALL COUNT(CAST(rt0.c2 AS INTEGER)) OVER (), rt0.c2, FIRST_VALUE(((x'') ISNULL)) OVER () FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) NOTNULL) AS REAL), rt0.c0, (+ (CAST(rt1.c1 AS BLOB))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0) IS FALSE) FROM rt1, rt0 WHERE (CAST(((8.32869046E8)<(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((rt0.c2)|(t1.c97)) COLLATE NOCASE FROM rt1 CROSS JOIN rt0 ON NULL WHERE (CAST('DJ' COLLATE BINARY AS INTEGER)) LIMIT 229894118 OFFSET 888362042;SELECT DISTINCT (- ((+ (rt1.c1)))), (((ABS(NULL)))>(((NOT (rt0.c0))))), CAST(rt0.c0 AS NUMERIC) COLLATE BINARY FROM rt1 WHERE (((('1112063196', x'3e26', '-396096438')) NOT BETWEEN ((((((')reoL뇶OG')AND('-902508445')))OR('')), -3.94910765E8 COLLATE RTRIM, (('!pRGAxd')AND(NULL)))) AND (((+ (x'')), ((x'') NOT BETWEEN (0.6820895186566467) AND (NULL)), (('*I,E1P*')<<('775984654')))))) GROUP BY t1.c97;SELECT COUNT((NOT (rt0.c1))) OVER () FROM rt0, rt1 WHERE ((((NULL)) BETWEEN (((0.7780949153093243 IN ()))) AND (((((0.8659925475606158)) BETWEEN ((NULL)) AND ((''))))))) ORDER BY 0.410159598666184  NULLS FIRST, CAST(((t1.c97) IS TRUE) AS REAL) ASC  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c0))) OVER () FROM rt1 WHERE (ABS(CHAR(x'02af')));SELECT RTRIM((rt0.c2 IN ())), COUNT(rt0.c0) OVER (), (+ (LIKELIHOOD(DISTINCT rt1.c1, 0.6601036656844369))) FROM rt1;SELECT DISTINCT CAST(-1.478801981E9 AS TEXT) COLLATE NOCASE FROM rt1, t1; -- 0ms;
SELECT DISTINCT (NOT (t1.c97)) COLLATE RTRIM, NULL, LEAD(((((ROUND(x'', rt1.c0))OR(rt0.c2)))AND(((rt0.c1)!=(rt1.c1)))), ((((((x'ad4c')OR(NULL)))AND(rt0.c2)))=(((rt1.c1) IS FALSE))), (NOT ((rt1.c2 IN ())))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0, rt1, t1 WHERE (0.12564728765597233) GROUP BY ((NULLIF(rt0.c1, rt0.c0)) NOT BETWEEN (NULL) AND (((rt0.c1)IS NOT('3>')))), LOWER(DISTINCT CAST(rt0.c1 AS NUMERIC)), '1334907672', (~ ((rt0.c1 IN ()))), ((rt0.c0 IN (rt0.c0)) IN ()) HAVING ((((((rt1.c2)OR(rt1.c1)))OR(rt0.c0)))-((((rt0.c2))!=((x''))))); -- 0ms;
SELECT UPPER(DISTINCT rt0.c0) FROM t1, rt1 ORDER BY (((((rt0.c1)AND(rt0.c2))))>=((CAST(rt0.c2 AS INTEGER))));SELECT ((((((rt1.c0)AND(rt1.c2)))OR(rt0.c0)))+(CAST(rt1.c0 AS INTEGER))) FROM t1, rt0 WHERE (('1190727242' IN ()) COLLATE RTRIM) GROUP BY ((CASE rt1.c2  WHEN rt1.c0 THEN '-1179678767' WHEN rt0.c2 THEN t1.c97 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 WHEN '' THEN rt0.c1 END)AND(((((rt0.c0)OR(rt0.c2)))OR(rt1.c0)))) HAVING CAST((rt1.c2 IN (rt0.c0, rt0.c1)) AS TEXT);SELECT DISTINCT CAST(SUM(rt1.c1) AS REAL), ((LOWER(DISTINCT rt0.c1)) IS FALSE), CASE NULL  WHEN ((rt0.c1) BETWEEN (rt1.c0) AND (x'')) THEN ((((rt1.c1)OR(rt1.c2)))OR(rt1.c1)) END FROM t1, rt1, rt0 WHERE ((('[{' COLLATE RTRIM)GLOB(((0.4491183583129379)+(0.5972572242424078))))) ORDER BY rt0.c2 COLLATE NOCASE ASC  NULLS FIRST LIMIT -2049215037 OFFSET 1336790559; -- 0ms;
SELECT DISTINCT ((rt1.c1)OR(t1.c97)) COLLATE RTRIM FROM t1, rt1, rt0 WHERE ((((0.27454901004871746)) BETWEEN ((0.6265521651789083)) AND ((x'00fb'))) COLLATE BINARY); -- 0ms;
SELECT (((((rt0.c2))>((rt1.c0))))>('VZ>K%5')), TRIM(DISTINCT ((rt1.c2)<=(rt1.c2))), (+ ((((rt0.c0))<((rt0.c1))))) FROM rt0 GROUP BY '1190727242' HAVING (((((rt0.c2, t1.c97, rt0.c2))>((0.6531657460298469, rt0.c0, rt0.c0))))&(SUM(rt0.c2)));SELECT CASE WHEN ((rt1.c1)+(rt1.c2)) THEN ((rt1.c2)&(rt1.c2)) END FROM t1 LIMIT -544865433;SELECT DISTINCT CASE WHEN (- (rt1.c1)) THEN (((rt1.c0, x'', rt0.c0))==((rt0.c2, rt0.c0, rt1.c0))) END FROM t1 WHERE (x'') GROUP BY ((((((rt1.c1)OR(rt0.c1)))OR(rt0.c2)))IS NOT(rt1.c0 COLLATE BINARY)), CAST(((((rt0.c0)OR(rt0.c1)))OR(rt1.c1)) AS BLOB), TRIM(DISTINCT ((rt0.c1) NOTNULL), rt0.c2 COLLATE NOCASE), ((rt1.c1) IS TRUE) COLLATE BINARY, rt0.c2 ORDER BY CAST(CASE WHEN t1.c97 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c1 ELSE -343317594 END AS NUMERIC) DESC  NULLS FIRST;SELECT ((((NOT ('c%'))))<((rt0.c0 COLLATE BINARY))), (((x'' IN (rt1.c1)))>>(HEX(DISTINCT t1.c97))), SUM(CAST(rt1.c1 AS NUMERIC)) OVER () FROM t1;SELECT ((((((rt0.c0)IS(rt1.c0)))OR(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE BINARY)) FROM rt1, t1, rt0; -- 0ms;
SELECT ALL rt1.c0 FROM t1;SELECT DISTINCT '-1218499289', UPPER(((t1.c97)IS(rt0.c0))), NULL FROM rt0 WHERE (HEX(DISTINCT NULL));SELECT DISTINCT (((t1.c97, rt1.c2, 'vz>k%5')) BETWEEN ((CAST(rt0.c0 AS INTEGER), ((rt0.c2) ISNULL), CAST(rt0.c2 AS BLOB))) AND ((((rt0.c2)IS(rt1.c2)), CASE WHEN rt0.c2 THEN rt1.c1 END, (- (rt1.c2))))), rt1.c0, TOTAL(CAST(rt0.c1 AS NUMERIC)) FROM rt1, t1 WHERE (CAST(NULL AS NUMERIC) COLLATE NOCASE) LIMIT -1888485244;SELECT DISTINCT CAST(rt0.c1 AS BLOB) COLLATE BINARY FROM t1 WHERE ((((((x'456b')) BETWEEN ((x'')) AND ((x'e575')))) IS TRUE));SELECT DISTINCT TOTAL(x'') OVER () FROM rt0, rt1 WHERE (((CAST(8.99661432E8 AS INTEGER))GLOB((NULL IN ())))); -- 0ms;
SELECT ALL ((((TOTAL(rt0.c0))AND((rt0.c1 IN (rt0.c0)))))OR(' 6v\r0됾')) FROM rt1 WHERE (((- (0.24204361081806292)) IN (((x'') BETWEEN (x'') AND (9.19969322E8)))));SELECT DISTINCT CAST((NOT (0.02371754429734174)) AS INTEGER) FROM rt1, rt0 WHERE ((((((0.870115028303109)<=('798047023'))))<((CASE WHEN NULL THEN '' WHEN 0xbcd720e THEN 0.9917551179495095 WHEN NULL THEN '1203757951' ELSE x'' END)))); -- 0ms;
SELECT ((((rt0.c1 COLLATE RTRIM)AND((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c2, '-1438635209', rt1.c0)) AND ((rt0.c0, rt1.c1, rt0.c1))))))AND((+ (rt1.c0)))) FROM rt1, rt0, t1; -- 0ms;
SELECT ALL (((rt0.c0 IN ())) BETWEEN (NULL) AND (rt1.c1 COLLATE NOCASE)) FROM t1 CROSS JOIN rt1 ON CASE WHEN (((rt1.c0))>=((rt0.c0))) THEN ((rt0.c1) NOTNULL) ELSE ((rt0.c2) BETWEEN (rt1.c0) AND (0.26778040221041544)) END WHERE (HEX((((((((('384264336')AND(NULL)))AND(0.05411719724205588)))OR(-1262215098)))OR('/QX')))) LIMIT 1621196397 OFFSET 1480382263;SELECT TOTAL(((rt0.c1) ISNULL)) OVER () FROM rt1, t1 WHERE (COALESCE(DISTINCT x'', NULL) COLLATE RTRIM) LIMIT 259607755 OFFSET 183890773;SELECT DISTINCT COUNT(CASE WHEN t1.c97 THEN rt1.c2 ELSE rt1.c1 END) FILTER(WHERE ((((((rt1.c1)+(rt1.c1)))AND(CASE WHEN 0.9100834714646032 THEN rt0.c0 ELSE rt0.c1 END)))AND((+ (rt1.c1))))) OVER (), HEX(DISTINCT (+ (rt0.c1))), (((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c2)) IN ()) FROM t1;SELECT DISTINCT -1042517211 FROM t1, rt1; -- 0ms;
SELECT DISTINCT (((- (rt1.c2)))GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c0)))) FROM rt1 LEFT OUTER JOIN t1 ON ROUND(CAST(rt0.c1 AS REAL), (((rt0.c2)) NOT BETWEEN ((0.724669572137755)) AND ((x''))));SELECT DISTINCT ((((((((rt1.c2 COLLATE BINARY)AND(CAST(rt1.c0 AS BLOB))))AND(TRIM(rt1.c1, rt0.c0))))OR(CASE 2078554207  WHEN t1.c97 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c0)>>(rt0.c2)))), ((((NULL)OR((- (t1.c97)))))OR((t1.c97 IN (rt1.c1, rt1.c0)))), (((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt1.c1)) AND ((rt0.c0, rt1.c2, rt0.c1))))GLOB((+ (rt1.c1)))) FROM t1, rt1;SELECT DISTINCT (((('-248275228') NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c1)IS NOT(rt0.c0))) AND ((rt1.c1 IN ()))) FROM t1, rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt0.c0)>=(rt1.c1)) COLLATE BINARY FROM rt1, rt0, t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((rt1.c1)-((~ (t1.c97)))), (+ (rt1.c1 COLLATE BINARY)), COUNT(((rt0.c2)&(rt0.c0))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT UNLIKELY((- (rt1.c1))) FROM t1 WHERE (((((NULL) NOT BETWEEN ('lPq') AND (' RnO')))>>((0xffffffffa5fce9e6 IN ())))) GROUP BY (((RTRIM(0xffffffffad5f300e), ((((t1.c97)AND(rt1.c2)))OR(rt0.c2)), (rt1.c1 IN ())))!=(((((rt0.c2))<=((-293078413))), json_insert(rt0.c1, t1.c97, rt1.c0), ((NULL) BETWEEN (-369671696) AND (rt0.c1))))) HAVING CAST(CASE WHEN t1.c97 THEN rt1.c2 ELSE rt0.c1 END AS INTEGER) ORDER BY NULL  NULLS FIRST, ((CASE rt0.c1  WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c1 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END) NOT NULL)  NULLS FIRST, rt0.c0 DESC  NULLS FIRST;SELECT ALL ((((rt0.c0)IS NOT('702748035')))|(((((rt1.c2)AND(t1.c97)))AND(rt1.c0)))) FROM t1, rt0 WHERE (((CASE WHEN 0.8580832854343619 THEN x'' WHEN 0.5849093056823258 THEN x'' WHEN 'H?/W?' THEN 0Xffffffffc6bd480c ELSE 0Xffffffffe6e40fc6 END)|(((0.5818832586944768)IS NOT(0.9234471329994539)))));SELECT CAST(TYPEOF(rt0.c1) AS BLOB) FROM t1, rt1, rt0 WHERE (((((0.609632763385212)AND(-1678152953)))AND('-902508445')) COLLATE RTRIM); -- 0ms;
SELECT rt1.c2, 1801336847 COLLATE NOCASE, PERCENT_RANK() OVER () FROM rt0 GROUP BY rt0.c2 COLLATE BINARY ORDER BY (((NULL))<=((TRIM(rt1.c1)))) DESC  NULLS LAST;SELECT DISTINCT x'b79e' FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c2))IS NOT(CAST('F' AS TEXT))) FROM t1, rt0 WHERE (CASE WHEN (- (NULL)) THEN CAST('' AS INTEGER) END) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((((rt1.c0)OR(rt0.c2)))OR(x''))) AND (UNLIKELY(DISTINCT 0.9936716271680449)));SELECT ALL ((CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt0.c1 END)%((rt1.c2 IN ()))) FROM rt1;SELECT ((((rt1.c2)>=(rt1.c1)))GLOB(((-963665718)OR(rt1.c2)))), GROUP_CONCAT((((rt0.c0, rt0.c1, rt0.c0))<((t1.c97, t1.c97, t1.c97)))) COLLATE RTRIM, FIRST_VALUE(LIKELIHOOD(DISTINCT (((t1.c97, ',黈,q<ro*', t1.c97))>((t1.c97, x'a4327f8c', t1.c97))), 0.6547627319406476)) OVER (), ((rt1.c1)/(((rt1.c1)%(rt1.c0)))), MAX((((rt0.c1, rt1.c2, t1.c97)) NOT BETWEEN ((rt0.c1, rt0.c0, rt1.c0)) AND ((rt0.c0, rt1.c0, rt1.c0)))) FROM t1 WHERE (CAST((NOT (x'')) AS TEXT));SELECT ALL ((LIKELY(DISTINCT rt1.c0)) NOT BETWEEN (((rt0.c1)>=(t1.c97))) AND (x'' COLLATE BINARY)), ((rt1.c2)OR(t1.c97)) COLLATE NOCASE, LAST_VALUE(((((((((((rt1.c0) NOT BETWEEN (rt1.c0) AND ('-808503300')))OR(rt1.c0 COLLATE RTRIM)))AND('')))OR('0.9451421774413937')))OR(TRIM(rt1.c0, rt1.c1)))) OVER ( ROWS  CURRENT ROW) FROM rt1 WHERE ((((('v_aJ') BETWEEN ('-1267266291') AND (0.5667670401515281))) ISNULL)) LIMIT -1 OFFSET 1911021612;SELECT ALL AVG(MAX(((0.7847214571198733)IS(t1.c97)))) FROM rt0, t1 WHERE (((((((((((x'9f6b')OR(x'')))OR('-1318449565')))OR(NULL)))AND('775984654'))) IS TRUE));SELECT DISTINCT (x'49ba' IN ()), ((rt0.c0) IS TRUE), '-396096438' FROM t1 LIMIT -163544294 OFFSET 1685473527;SELECT TOTAL(COUNT(((rt0.c0) NOT NULL))), (((rt1.c2) NOT BETWEEN (x'fffa') AND (rt1.c0)) IN ()), MIN((+ (rt0.c0))) FROM rt0 GROUP BY CAST(CASE rt1.c2  WHEN t1.c97 THEN rt0.c0 WHEN rt0.c2 THEN NULL WHEN rt1.c1 THEN rt0.c2 END AS REAL) HAVING (((rt0.c2 IN ())) NOT BETWEEN ((NOT (rt1.c2))) AND (AVG(rt0.c2)));SELECT ALL (('-0.0')<(((rt0.c1)>=(rt0.c1)))) FROM rt1, t1, rt0 GROUP BY ((((((']r') NOTNULL))OR(((t1.c97) BETWEEN (rt1.c0) AND (NULL)))))AND((rt1.c2 IN ())));SELECT DISTINCT ((((((rt1.c1)AND(rt0.c0)))OR(CAST(rt1.c1 AS INTEGER))))AND(rt0.c0 COLLATE RTRIM)) FROM rt0, t1 GROUP BY ((((rt0.c0 COLLATE BINARY)OR(highlight(rt1.c1, rt0.c1, rt0.c2, rt0.c2))))AND(((rt1.c2) ISNULL)));SELECT ALL CAST(rt1.c0 COLLATE BINARY AS REAL) FROM t1 WHERE (((((((((((x'')AND(NULL)))OR(NULL)))OR(0Xffffffffb8cf9fd9)))AND(x'')))OR(CASE 0.12983747567600223  WHEN 0.8659925475606158 THEN NULL END))) GROUP BY PRINTF(x'04b3');SELECT DISTINCT CAST((((rt0.c1, rt0.c0, rt0.c2))>((NULL, rt1.c0, rt1.c1))) AS TEXT), (((~ (rt1.c2)))&(CASE rt0.c1  WHEN '0.8659925475606158' THEN rt1.c2 END)), FIRST_VALUE((0.7691238425971518 IN ())) OVER ( PARTITION BY CASE rt0.c1  WHEN ((rt0.c0)-(rt0.c1)) THEN (('-843298842')<<(rt0.c1)) END, x'fc0a' ORDER BY CASE ((((rt1.c2)AND(rt1.c0)))OR(-1878268771))  WHEN (((t1.c97)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))) THEN (rt1.c2 IN ()) WHEN ((t1.c97)&(rt1.c1)) THEN CASE rt0.c2  WHEN t1.c97 THEN NULL ELSE rt1.c0 END WHEN ((t1.c97) BETWEEN (t1.c97) AND ('-2075824908')) THEN rt1.c0 END  NULLS FIRST, rt1.c1 ASC  NULLS LAST) FROM rt0, rt1;SELECT (NOT (CASE rt0.c2  WHEN rt1.c1 THEN rt1.c0 END)) FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c0 IN (rt1.c2))) NOTNULL) RIGHT OUTER JOIN t1 ON (~ (((rt0.c2)<=(rt0.c1)))) WHERE (x'd949'); -- 0ms;
SELECT ALL (((t1.c97, rt0.c1, 0.39384462036928003)) BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c2 END, ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c2)), 0.6388532996876525)) AND ((IFNULL(DISTINCT rt0.c2, t1.c97), ((rt1.c2) NOTNULL), (rt0.c0 IN ())))), ((((((0Xffffffffba9b8ecb)OR(-276639659)))OR(NULL)))>>(rt0.c1 COLLATE BINARY)), (CAST(rt1.c0 AS REAL) IN (((rt1.c0)%(rt0.c2)))) FROM t1, rt1 WHERE ((NULL IN ()) COLLATE RTRIM) ORDER BY '' COLLATE NOCASE ASC  NULLS LAST;SELECT DISTINCT ((NOT (rt0.c1)) IN (json_array(rt1.c2, rt1.c0), ((rt0.c1)IS NOT(rt1.c2)), ((rt1.c0)==(0.8165481211931925)))) FROM rt0 WHERE (ABS((- (0X69ad05ee))));SELECT ALL ((((rt0.c1)LIKE(t1.c97))) BETWEEN (CASE t1.c97  WHEN rt1.c0 THEN rt0.c0 WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE NULL END) AND (CAST(rt1.c1 AS REAL))), CAST(((NULL) BETWEEN (rt1.c0) AND (rt1.c2)) AS INTEGER), ((((CAST(rt0.c2 AS INTEGER))OR(rt0.c0)))OR((((rt0.c0, x'', t1.c97)) NOT BETWEEN ((rt1.c0, t1.c97, x'')) AND ((rt1.c0, rt1.c1, 0.30205040390548443))))) FROM t1, rt1 ORDER BY '-394910765' DESC  NULLS LAST, (- ((- (rt0.c0)))) DESC  NULLS FIRST;SELECT (((((rt1.c1) ISNULL), (~ (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)), (rt0.c1 IN ()), (rt0.c2 IN ())))==((((rt0.c2) BETWEEN (NULL) AND (NULL)), (rt0.c0 IN ()), rt1.c2 COLLATE BINARY, ((rt0.c1) NOTNULL), (((rt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) FROM t1 WHERE ((((((('aX.]Yad''')<<(NULL)))AND(STRFTIME(0.08907475442110668, x'3ee0', '7'))))OR(((NULL)LIKE('ax.]yad''')))));SELECT CASE WHEN CAST(rt1.c0 AS REAL) THEN (((t1.c97)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c1))) ELSE CASE WHEN t1.c97 THEN rt0.c1 ELSE rt0.c1 END END FROM rt1;SELECT DISTINCT rt0.c0 FROM t1 WHERE (x'34c1');SELECT ((rt1.c0)>((((t1.c97, rt1.c1, rt1.c1)) BETWEEN ((rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c1, t1.c97, rt1.c0))))) FROM rt1, t1, rt0 WHERE (((((x'')>>('')))>((0.732890350085398 IN ())))); -- 0ms;
SELECT DISTINCT CASE WHEN MAX(rt1.c0) THEN ((rt0.c0)<(rt1.c0)) ELSE 1643894760 COLLATE RTRIM END, ((CASE rt0.c1  WHEN rt1.c1 THEN '-1909820087' END) BETWEEN ((((rt1.c0))<=((rt0.c1)))) AND (CASE WHEN rt0.c0 THEN rt1.c1 END)), SUM(((((((((rt1.c0)OR(rt1.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(0.8490820437767566))) OVER () FROM t1, rt1 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) ISNULL) FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT (+ (t1.c97)) COLLATE BINARY, rt0.c1, CASE WHEN (((rt0.c0)) BETWEEN ((t1.c97)) AND ((rt1.c1))) THEN CAST(rt1.c2 AS TEXT) ELSE t1.c97 COLLATE NOCASE END FROM t1 WHERE (((((x'') IS FALSE))%(((('', x'', '-1074347512')) NOT BETWEEN ((x'9cb79120', 1.834749104E9, -1.299716305E9)) AND (('D	Ta', '1e500', 1.897564176E9)))))) GROUP BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t1.c97))) THEN (((t1.c97)) BETWEEN ((rt1.c2)) AND ((rt0.c1))) WHEN LOWER(DISTINCT rt1.c2) THEN CAST(rt1.c0 AS BLOB) WHEN json_valid(rt0.c0) THEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END WHEN json_quote(rt0.c0) THEN rt1.c2 COLLATE NOCASE WHEN (((rt0.c0, rt0.c1, 0xffffffffa14de872, rt1.c2, rt0.c1))>((rt0.c0, rt0.c2, rt1.c2, rt0.c1, ''))) THEN (((rt0.c1))<>((rt0.c2))) ELSE t1.c97 COLLATE NOCASE END HAVING ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))) ISNULL);SELECT DISTINCT rt1.c1 COLLATE BINARY FROM rt0, t1, rt1 ORDER BY t1.c97 ASC; -- 0ms;
SELECT (((((t1.c97)OR('')))OR(rt0.c1)) IN (((((rt0.c1)AND(t1.c97)))OR(0.7165697538126637)))) FROM rt0;SELECT DISTINCT ((((((rt1.c0) IS FALSE))AND(TOTAL(rt1.c1))))OR(((rt1.c1)&(rt1.c1)))) FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((t1.c97)AND((('s') NOT BETWEEN ('2[eQ') AND (rt0.c1)))))OR(rt0.c1 COLLATE BINARY)))OR((t1.c97 IN (rt0.c1, t1.c97)))))AND(((rt1.c1) NOTNULL))) FROM t1, rt0;SELECT DISTINCT ((rt1.c2 COLLATE RTRIM) NOTNULL) FROM rt1, rt0; -- 0ms;
SELECT ALL (((rt1.c2, t1.c97, rt1.c2)) BETWEEN ((((rt0.c2)<=(rt1.c1)), COALESCE(rt1.c1, rt0.c2, rt0.c2, rt0.c1), HEX(rt1.c1))) AND ((MIN(NULL), (rt1.c2 IN ()), 0.9046145381155042))), COUNT(*), ((((rt1.c0) ISNULL)) BETWEEN ((rt0.c1 IN ())) AND (NULL)), ((((((((rt0.c2)AND(rt1.c1)))AND(rt0.c2)))OR(t1.c97)))OR(t1.c97)) COLLATE BINARY, ((0.35991931928534526)+(rt0.c2)) FROM rt0, t1 GROUP BY NULL HAVING (CASE rt0.c0  WHEN NULL THEN rt1.c0 ELSE rt1.c1 END IN (MAX(rt1.c0, rt1.c2, rt1.c1, rt1.c1), (rt1.c2 IN ())));SELECT ALL (~ (x'')) FROM rt0, rt1, t1 WHERE (load_extension((((''))<=((x'b472dc70'))), '-262818476' COLLATE NOCASE));SELECT CAST(rt0.c0 AS REAL) COLLATE RTRIM FROM t1 GROUP BY (NOT (((t1.c97)/(rt0.c2)))) HAVING rt1.c0;SELECT DISTINCT TRIM(rt0.c1, t1.c97) COLLATE NOCASE FROM t1 RIGHT OUTER JOIN rt1 ON CAST(1.41263135E8 AS TEXT) WHERE ((((((x'') ISNULL), ((x'2d16')LIKE(0xffffffff8a40b671)), CASE NULL  WHEN -765399535 THEN NULL WHEN 0xffffffffc2505fc7 THEN 0.5791694737845575 WHEN 0.27005965501706364 THEN 0.9019845893417714 END))<((((0.42744264597981496) IS TRUE), CASE WHEN x'88d6' THEN 0.04510155748434275 WHEN 634480276 THEN x'' WHEN x'753f' THEN NULL WHEN 0.9028411625482008 THEN x'9697d594' WHEN 0.6311727514042262 THEN 'Zg' END, 0.40266909384552485 COLLATE BINARY))));SELECT (((0.38836873472540057)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN t1.c97 ELSE rt0.c1 END)) AND ((((rt1.c2) NOT BETWEEN (NULL) AND (rt0.c0))))) FROM t1, rt1;SELECT DISTINCT ((((rt1.c1)>=(rt1.c1)))||(((((((((t1.c97)AND(rt1.c0)))OR(rt1.c2)))OR(t1.c97)))OR(rt0.c0)))) FROM rt1 WHERE (((CASE WHEN 'YJZEZ+[%' THEN x'' WHEN '-1796249863' THEN NULL WHEN 0x1e58b264 THEN NULL END)+(CAST('45427697' AS REAL))));SELECT DISTINCT CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0) NOT NULL) END FROM t1, rt0; -- 0ms;
SELECT DISTINCT (- ((rt0.c1 IN ()))) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c1) IS TRUE) END FROM rt0, rt1, t1 WHERE (HEX(DISTINCT 0.15507899633853606)); -- 1ms;
SELECT ALL ((((rt0.c1)>(rt0.c0)))+(rt1.c0)) FROM rt0, rt1 GROUP BY x''; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY) NOT NULL), ((CASE WHEN rt0.c1 THEN t1.c97 WHEN rt0.c2 THEN rt0.c1 WHEN x'114e' THEN t1.c97 ELSE rt0.c0 END) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))), (((((rt1.c2, t1.c97, rt0.c1))>((rt0.c0, rt0.c2, rt0.c2))))IS(((rt1.c0)LIKE(rt0.c2)))) FROM rt0, rt1;SELECT ((((((((((((t1.c97)AND(rt1.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt1.c2)))AND('1897564176')))AND(((t1.c97) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) FROM t1 WHERE (UPPER(DISTINCT CASE '-1175211874'  WHEN 1543926568 THEN 0.9530202324881687 ELSE 0.8659925475606158 END));SELECT '' FROM t1 WHERE (x'f465'); -- 0ms;
SELECT ALL COUNT(IFNULL(DISTINCT x'61ff', rt0.c2)) OVER (), rt1.c0, AVG((+ (rt0.c1))) FILTER(WHERE rt0.c2) OVER ( ORDER BY ((rt0.c0 IN (rt1.c0, rt1.c0)) IN ())  NULLS LAST, ((CAST(rt0.c1 AS NUMERIC))%(UNLIKELY(rt0.c0))) DESC  NULLS LAST), ((rt1.c1)GLOB((~ (rt1.c0)))), COUNT(((rt0.c2) NOTNULL)), CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END COLLATE NOCASE, (~ ((((t1.c97)) BETWEEN ((rt1.c0)) AND ((rt0.c1))))) FROM t1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt0.c2) AND (t1.c97))) ISNULL) ASC  NULLS FIRST, (((rt1.c2))<=((rt1.c1))) COLLATE BINARY, CASE json_insert(rt1.c1, rt1.c0, rt1.c0)  WHEN rt1.c2 COLLATE RTRIM THEN ((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt0.c1)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c97))) THEN ((t1.c97)<<(t1.c97)) WHEN (((rt1.c0))>=((rt1.c2))) THEN UPPER(DISTINCT rt1.c2) ELSE CAST(t1.c97 AS TEXT) END  NULLS FIRST;SELECT DISTINCT rt1.c2 FROM t1, rt0, rt1; -- 0ms;
SELECT ((((((((((rt0.c0)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))IS NOT(((rt1.c1) NOT BETWEEN ('1227601501') AND (rt0.c1)))) FROM rt1, rt0, t1 WHERE (((((('-568189659')) BETWEEN (('1897564176')) AND ((x''))))*((~ (x''))))); -- 0ms;
SELECT ALL (((rt1.c0 IN ()))<<((NOT (rt1.c0)))) FROM t1, rt1, rt0 ORDER BY ((((((((rt1.c0)AND(t1.c97)))OR(rt1.c2)))AND('')))OR((((t1.c97)) BETWEEN ((t1.c97)) AND ((rt0.c1))))) ASC; -- 0ms;
SELECT DISTINCT CAST(rt1.c1 AS BLOB), (- (((rt0.c2) NOT BETWEEN (rt1.c0) AND (t1.c97)))), (((NOT (t1.c97))) NOTNULL) FROM t1 WHERE ((- ((('0.7780949153093243') NOT BETWEEN (-9.02508445E8) AND (NULL))))) LIMIT 1373986511 OFFSET 475440131;SELECT ALL rt1.c2 FROM rt0, t1 ORDER BY (((((x''))!=((t1.c97))))+((('') ISNULL))) ASC  NULLS LAST, (((((NULL))<=((rt1.c2))))/((~ (rt0.c2))))  NULLS LAST;SELECT ALL (((+ (NULL)))AND((+ (rt1.c0)))) FROM rt1, t1; -- 0ms;
SELECT DISTINCT (NOT (CAST(rt0.c2 AS REAL))), x'e1f5', ((((t1.c97)LIKE(t1.c97)))>=(((rt0.c1)+(rt0.c2)))) FROM rt0 WHERE (((((0.09613789051050814) BETWEEN ('1613212652') AND (0.975062566182824)))+(LIKELY(x''))));SELECT ALL 0.29826989090307743 FROM rt1, rt0, t1 LIMIT 1613212652 OFFSET 1533849688; -- 0ms;
SELECT ALL (((((x'ec5e')<>(x''))))<((CAST(t1.c97 AS REAL)))), GROUP_CONCAT(((rt1.c2) BETWEEN (rt0.c0) AND (x''))) OVER (), FIRST_VALUE(CAST(((t1.c97)%(t1.c97)) AS TEXT)) OVER ( ORDER BY (((t1.c97 COLLATE BINARY, ROUND(rt1.c2, rt0.c0), rt1.c2))>=((CAST(rt0.c0 AS TEXT), ((rt0.c2) IS TRUE), t1.c97)))) FROM t1 WHERE ((((((x'')>>(-1.467379908E9))))>((((0.944715076572728) BETWEEN ('}*Gv') AND (NULL))))));SELECT ALL CAST((((rt0.c2))>((rt1.c1))) AS BLOB) FROM t1;SELECT DISTINCT COUNT(((((rt0.c1)AND(rt0.c1)))OR(x''))) FROM rt0, t1, rt1 ORDER BY CASE (((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))  WHEN (+ (rt0.c1)) THEN CASE t1.c97  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END END DESC; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)) AS REAL) FROM rt0, rt1, t1 WHERE (((((0Xffffffffefe31296) BETWEEN ('') AND (x'656b')))<>(CAST('1507600419' AS BLOB)))); -- 1ms;
SELECT ALL ((1412483068) BETWEEN (((((t1.c97)AND(rt0.c1)))AND('*{Zচ'))) AND ((rt0.c2 IN ()))), rt1.c2, ((((((((rt0.c1)OR(rt0.c2)))OR(rt1.c1)))OR(((((((((0.9189691090153649)OR(rt0.c1)))OR(t1.c97)))AND(rt1.c1)))OR(rt0.c1)))))AND(CASE rt0.c0  WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c0 END)) FROM rt0, t1 WHERE ((((((NULL, -9223372036854775808, NULL, '', 0X562271b4)) BETWEEN ((0.06541039248103508, NULL, 1.047460559E9, NULL, x'')) AND (('0.08986717308981107', x'', x'', '-118767378', 1.43045156E8))))AND(CAST('m*F' AS INTEGER))));SELECT ALL CASE TOTAL(rt0.c2)  WHEN CASE rt1.c2  WHEN t1.c97 THEN rt0.c2 ELSE rt0.c1 END THEN ((((x'')OR(rt0.c2)))OR(rt0.c2)) ELSE ((((((((rt0.c0)AND(rt1.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt1.c1)) END FROM rt1, t1, rt0 WHERE (((((((((((('Axhq輼7^3A')AND('-1054443376')))AND(0.567560350943634)))AND(NULL)))OR(NULL))))!=(('1869380176' COLLATE RTRIM)))); -- 0ms;
SELECT ((PRINTF(rt0.c1)) NOT BETWEEN (rt1.c1) AND ((((rt0.c2))>=((t1.c97))))) FROM rt0, t1, rt1 WHERE (TRIM(((((0.6690403407920901)AND(NULL)))AND(NULL)))) GROUP BY (((((('-1467379908') NOTNULL))OR(0.4032524383508316)))OR(((((((((rt0.c1)OR(rt0.c2)))AND(rt1.c0)))OR('655630446')))AND(rt0.c0)))) HAVING (- ((rt0.c0 IN ()))) LIMIT -1588729742 OFFSET -1686395769; -- 0ms;
SELECT ALL t1.c97 FROM t1 NOT INDEXED; -- 0ms;
SELECT DISTINCT TRIM(((t1.c97) IS TRUE)) FROM rt1, rt0, t1; -- 0ms;
SELECT ALL (~ (NULL)) FROM rt1, t1, rt0; -- 0ms;
SELECT ALL ((((rt0.c1)>>(rt1.c2)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c97)))) FROM rt0, t1 WHERE (CAST(0.8085374404575791 AS TEXT));SELECT ALL (+ (TOTAL(rt0.c0))) FROM rt0, t1 ORDER BY ((2030256967) BETWEEN ((- (t1.c97))) AND (((((rt1.c0)AND(rt1.c0)))OR(t1.c97)))), ((((rt0.c1) NOT NULL))&(((rt0.c0) BETWEEN (rt0.c0) AND ('똦pSum嶘')))) DESC  NULLS FIRST;SELECT ALL ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))+(COUNT(*))), CASE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (t1.c97))  WHEN rt1.c1 THEN (((rt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) ELSE SUM(rt1.c2) END, (NOT (0.061209303375217794)) FROM rt0, t1 WHERE (CAST(((9.90916536E8)IS NOT(NULL)) AS BLOB));SELECT 0.664034811367416 FROM rt1, t1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS REAL))&(UNLIKELY(DISTINCT rt0.c1))) FROM t1 WHERE ((((('.F#C?') IS FALSE))&('{b')));SELECT DISTINCT LEAD(((rt0.c0 COLLATE BINARY)IS NOT(((rt0.c0)/(rt1.c0)))), rt0.c2, UPPER(((0xffffffff820883ce) BETWEEN (rt1.c2) AND (rt0.c1)))) OVER (), ((((rt0.c2)<(1.190727242E9)))>(((x'') IS FALSE))), LOWER((- (rt0.c0))) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR((rt0.c0 IN ()))))AND(rt1.c2)) FROM rt0 WHERE ((((CAST(NULL AS BLOB)))>((((851300831)%(x''))))));SELECT DISTINCT ((CASE rt0.c2  WHEN 521961127 THEN rt0.c0 ELSE rt1.c1 END) NOT BETWEEN (CASE WHEN rt1.c1 THEN NULL END) AND ((~ (rt0.c0)))) FROM rt1 WHERE ((((('') NOTNULL)) NOT BETWEEN (CASE x'a1f4'  WHEN 0.7410157867116964 THEN '1444348471' ELSE 0Xffffffffdc302070 END) AND (((NULL)&(0.957169706016152)))));SELECT DISTINCT CAST((~ (t1.c97)) AS TEXT) FROM rt1, rt0;SELECT DISTINCT x'', (((((rt1.c2))==((t1.c97))))/((NOT (rt1.c2)))), (- (rt0.c0)) COLLATE BINARY FROM t1, rt0;SELECT ALL CASE rt0.c1  WHEN 0.4453290065685751 THEN (~ (rt1.c1)) ELSE ((((t1.c97)OR(rt1.c1)))OR(rt0.c0)) END, ((0x5490681)<>(rt0.c2 COLLATE NOCASE)), (- (((rt0.c0) NOTNULL))) FROM rt0;SELECT ALL ((((((rt0.c0)OR(NULL)))OR(rt1.c1)))/((((rt0.c0, rt0.c0, rt0.c0))<=((rt1.c0, rt1.c2, rt1.c1))))) FROM rt0, t1 WHERE ((NULL IN ()) COLLATE RTRIM);SELECT DISTINCT (((((rt1.c1)<(rt0.c2))))>(((~ (rt0.c1))))) FROM rt1 GROUP BY (NOT (0.18075435147910734 COLLATE RTRIM)), ((rt1.c1) NOT BETWEEN (NULL) AND (rt0.c1)) COLLATE BINARY, ((((rt1.c2) NOTNULL))GLOB(((((rt0.c1)OR(rt0.c1)))AND(NULL)))) HAVING CASE rt1.c1  WHEN rt0.c0 THEN rt1.c0 END COLLATE BINARY LIMIT 888362042 OFFSET -1847427272;SELECT DISTINCT LEAD(t1.c97, ((CASE t1.c97  WHEN t1.c97 THEN t1.c97 ELSE t1.c97 END)<=(((((t1.c97)AND(0.5220704353895504)))AND(t1.c97)))), (((t1.c97))<=((((t1.c97) NOT BETWEEN (t1.c97) AND (t1.c97)))))) OVER (), ((((((((((t1.c97) NOT BETWEEN (rt0.c0) AND (rt1.c1)))OR(CAST(rt0.c0 AS REAL))))OR((NOT (rt0.c1)))))OR(MAX(t1.c97, t1.c97))))AND(CASE rt0.c2  WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c1 END)), (('') BETWEEN ((rt1.c0 IN (rt0.c1, rt0.c1))) AND (((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c0)))), GROUP_CONCAT(((rt1.c0) NOT BETWEEN (rt1.c2) AND (x''))), x'' FROM t1 WHERE ((((NULL)) NOT BETWEEN (((('') NOT BETWEEN (NULL) AND (171291721)))) AND ((((1.047460559E9)%(NULL))))));SELECT t1.c97 FROM rt0, rt1 WHERE (((((NULL)+('똦pSum嶘')))<=((-1.179678767E9 IN (0.6907755542980178)))));SELECT DISTINCT (((((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))AND(CAST(rt0.c2 AS NUMERIC))))AND((- (rt0.c0)))) FROM t1, rt0;SELECT DISTINCT AVG(((((((((((((((((rt0.c1)AND(rt1.c1)))OR(t1.c97)))OR(rt0.c1)))OR(rt1.c0)))AND(rt0.c0)))AND(x'')))AND(rt1.c1)))AND(t1.c97))), CASE rt0.c2  WHEN rt0.c2 THEN -6.15254949E8 END COLLATE NOCASE, (((((rt0.c1))>=(('-1476339068'))))%((rt1.c2 IN ()))) FROM rt0, rt1, t1 GROUP BY rt0.c2; -- 0ms;
SELECT ((((rt0.c0) NOT NULL))IS NOT(x'')), ((((((((((((t1.c97)AND((rt0.c0 IN ()))))AND((rt0.c0 IN (rt0.c2, rt0.c1)))))AND(rt0.c2 COLLATE BINARY)))AND(((t1.c97)|(rt0.c0)))))OR((t1.c97 IN (rt1.c0)))))AND((((rt0.c0, t1.c97, rt1.c2))=((rt1.c2, rt1.c1, ''))))), CAST((((rt0.c0, rt0.c2, rt1.c0)) BETWEEN ((rt0.c1, 0.07861436334070493, rt1.c2)) AND ((rt1.c0, t1.c97, rt0.c0))) AS NUMERIC) FROM rt1 WHERE ((('F_7Mz\r}''3' COLLATE NOCASE)<=(x'' COLLATE NOCASE)));SELECT DISTINCT (((rt0.c0 IN ())) NOT NULL) FROM rt0, rt1, t1 WHERE (((((((((0.12230619912705831 COLLATE RTRIM)OR(CAST('}b<[b' AS REAL))))AND((1905018544 IN ()))))OR((- (0.5922577871278759)))))OR(((NULL)||('-781642092'))))); -- 0ms;
SELECT ((SUM(t1.c97)) NOT BETWEEN (COUNT(rt0.c2)) AND (CAST(t1.c97 AS INTEGER))) FROM rt1, rt0;SELECT ALL (((((rt0.c2 IN (rt1.c0)))OR(rt0.c1)))OR((((rt1.c2, rt1.c2, rt0.c2))>=((rt1.c2, rt1.c2, rt0.c0))))), (((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN (GROUP_CONCAT(rt0.c1))), ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0)))LIKE(CAST(rt1.c1 AS NUMERIC))) FROM t1 WHERE ((((('-1773658106')IS(x'3861'))) BETWEEN (NULL) AND (((x'0fb1') BETWEEN (NULL) AND (NULL)))));SELECT DISTINCT LAST_VALUE((rt0.c2 IN ())) OVER () FROM rt0; -- 0ms;
SELECT ALL MIN(((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2))) FROM t1, rt1 WHERE ((((0.47810390401849234)) BETWEEN ((0X50651e88 COLLATE RTRIM)) AND (((-1996784803 IN ())))));SELECT NTILE((((- (rt0.c1)))/(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0))))) OVER () FROM rt0 GROUP BY (((rt0.c2)) BETWEEN ((((NULL) ISNULL))) AND ((((rt1.c2) BETWEEN (x'') AND (rt1.c0))))) HAVING ((rt0.c0) NOT BETWEEN (((-2.075824908E9) IS FALSE)) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) LIMIT 736584662 OFFSET 9223372036854775807;SELECT ALL ((((((t1.c97)AND(rt0.c0)))AND(rt0.c0)))&(((rt0.c2)GLOB(t1.c97)))) FROM rt1, t1 ORDER BY (- (NULL)) ASC  NULLS LAST;SELECT DISTINCT rt1.c0, ((((rt0.c1) BETWEEN (t1.c97) AND (rt1.c2)))*(TOTAL(x'9131'))), LEAD(CAST(CAST(rt1.c1 AS INTEGER) AS NUMERIC), ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)))||('384264336')), (- (((t1.c97) ISNULL)))) OVER () FROM rt1, t1;SELECT DISTINCT GROUP_CONCAT((NOT (rt0.c0))) FROM rt1 WHERE (NULLIF(DISTINCT (('*o')AND(x'')), (+ (0.4465694408270259))));SELECT DISTINCT CASE WHEN ((rt1.c2)>=(rt1.c1)) THEN QUOTE(rt1.c2) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(((((((((t1.c97)AND(rt1.c0)))AND(t1.c97)))AND(rt1.c2)))AND(rt0.c0)) AS INTEGER) FROM rt0, rt1 ORDER BY CAST((- (rt0.c1)) AS BLOB)  NULLS FIRST LIMIT -1001693496;SELECT GROUP_CONCAT(((rt1.c0)>(t1.c97))) OVER () FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c97 THEN rt1.c1 WHEN 0xffffffffa5af94ae THEN rt1.c1 WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c1 END COLLATE RTRIM, ((SUM(rt1.c1))<>('-1267266291' COLLATE NOCASE)), (((CAST(rt0.c0 AS BLOB)))==((((rt0.c2)OR(rt0.c0))))) FROM rt0 ORDER BY ((rt1.c1) NOT BETWEEN (t1.c97) AND (rt0.c0)) COLLATE RTRIM ASC;SELECT (NOT ((+ (rt0.c1)))) FROM rt0, rt1; -- 1ms;
SELECT ALL CAST(-9223372036854775808 COLLATE NOCASE AS REAL) FROM rt0, rt1, t1 WHERE ((NOT (x''))); -- 0ms;
SELECT ALL (((rt0.c2 IN ()))&(rt1.c0 COLLATE NOCASE)), ((HEX(rt0.c1))<(NULL)), GROUP_CONCAT(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c0 END) FROM rt0, rt1 LEFT OUTER JOIN t1 ON (rt1.c2 COLLATE NOCASE IN ()); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c0)<>(rt0.c0)) THEN COALESCE(DISTINCT rt0.c2, rt1.c1) WHEN ((rt0.c2)>=(t1.c97)) THEN ((NULL) BETWEEN (rt0.c1) AND (t1.c97)) WHEN rt1.c2 THEN MIN(rt1.c0) ELSE (- ('1861802593')) END, ((~ (rt0.c0)) IN ()), ((CASE WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt1.c0 END)-(((rt1.c2) IS FALSE))) FROM t1 WHERE ((('-396096438')AND(CAST(x'' AS TEXT))));SELECT CASE WHEN (rt1.c1 IN ()) THEN load_extension(rt0.c2) WHEN ((rt1.c0) BETWEEN (t1.c97) AND (rt0.c0)) THEN ((rt0.c2) BETWEEN (rt1.c1) AND (t1.c97)) WHEN (rt1.c1 IN ()) THEN (rt0.c2 IN ()) ELSE UNLIKELY(DISTINCT t1.c97) END FROM rt0;SELECT DISTINCT x'' FROM t1, rt1 WHERE ((+ (((-1845320692) BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT ALL (rt0.c2 IN ()) COLLATE RTRIM, ABS(DISTINCT t1.c97 COLLATE RTRIM), COUNT((+ (rt1.c0))) OVER (), RTRIM((~ (rt0.c1))), (((rt1.c0) NOT NULL) IN ()) FROM rt1, rt0, t1 LIMIT 712445659 OFFSET 1191639654; -- 0ms;
SELECT ALL ((((((t1.c97)==(rt1.c0)))OR(((rt1.c2) IS FALSE))))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0)))) FROM rt1 WHERE ((((NULL)) BETWEEN ((((NULL) NOTNULL))) AND ((((0.5248296100490293)LIKE(x''))))));SELECT DISTINCT ((((rt0.c0)%(rt1.c2))) NOT NULL) FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c0)>=(rt1.c1)) IN (0Xffffffffa41a9159)), ((((t1.c97) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(((rt0.c1) ISNULL))), (((rt0.c0)) BETWEEN (((('-256101919')OR(rt1.c0)))) AND ((((rt0.c0) NOT BETWEEN (t1.c97) AND (rt1.c2))))) FROM rt0, t1 LIMIT -2127802199;SELECT x'' FROM t1, rt1, rt0 GROUP BY (((t1.c97)/(rt1.c2)) IN ()) HAVING (NULL IN ()) ORDER BY ((+ (rt1.c2)) IN ()), (((rt0.c0 IN (t1.c97)))GLOB(CASE WHEN rt1.c0 THEN rt1.c0 END))  NULLS LAST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt0.c2)AND(t1.c97)))OR(rt0.c1))), SUM(((rt1.c2)>=(rt0.c2))), (NOT (rt1.c1 COLLATE RTRIM)) FROM t1 WHERE (((NULL COLLATE BINARY)>((((('9K')AND(x'')))OR(0.7936382665682475)))));SELECT DISTINCT CAST(((x'') BETWEEN (rt1.c1) AND (rt0.c1)) AS REAL) FROM t1 LIMIT 1621899057 OFFSET 577428349;SELECT DISTINCT COUNT(*) OVER () FROM rt1 WHERE ((((0x97182c3, 0.08907475442110668, 0.20814110775906025)) BETWEEN (((+ ('-1554378405')), (('-1766972158') IS TRUE), '-1844989360')) AND ((SQLITE_COMPILEOPTION_USED(x''), 'vv' COLLATE NOCASE, ((('z(<cF')) BETWEEN ((x'')) AND ((NULL))))))); -- 0ms;
SELECT COUNT(((rt0.c0)||(rt0.c2))) OVER () FROM rt0, rt1, t1; -- 0ms;
SELECT DISTINCT SUM((+ (t1.c97)) COLLATE RTRIM) OVER () FROM rt1, rt0, t1; -- 0ms;
SELECT CAST(NULLIF(DISTINCT ' m', rt0.c0) AS NUMERIC) FROM rt0, rt1, t1 WHERE (((((((((HEX(DISTINCT ''))OR(0x4e6d80dc COLLATE BINARY)))AND(((0.2725598828097815)IS NOT(NULL)))))OR((((NULL, 3.84264336E8, x'')) BETWEEN ((0.9234993737061453, x'', x'5063')) AND ((x'3074', x'', 0.878045558818826))))))AND((((NULL))>=((NULL)))))); -- 1ms;
SELECT ALL (SUM(rt1.c1) IN ()) FROM rt0; -- 0ms;
SELECT CASE (+ (t1.c97))  WHEN ((rt1.c1) ISNULL) THEN rt1.c0 ELSE rt1.c2 END FROM rt0, rt1, t1 WHERE (((x'' COLLATE BINARY)&(0X31a492b6))); -- 0ms;
SELECT DISTINCT CAST(((t1.c97)/(x'97a9')) AS TEXT), MIN(((rt1.c1)|(t1.c97))), rt1.c1 FROM t1, rt0, rt1 WHERE (TYPEOF(((NULL)AND(0Xfffffffff1339ee4)))) UNION ALL SELECT DISTINCT COUNT(*) OVER (), NTILE(((((rt1.c1 IN ()), ((((rt1.c1)AND(x'')))OR(rt1.c2)), rt1.c2))>=((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)), (((rt1.c1, rt1.c1, rt1.c0))<((rt1.c0, rt1.c2, rt1.c1))), '968877175')))) OVER (), -151138403 FROM t1, rt1 WHERE (json_insert(NULL, 259607755, '', x'728ad008', '') COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT NTILE(((CASE rt1.c1  WHEN t1.c97 THEN t1.c97 ELSE t1.c97 END) NOT BETWEEN (x'') AND (((rt1.c2)<<(t1.c97))))) OVER (), AVG(TOTAL(((((((((rt0.c1)AND(t1.c97)))AND(NULL)))AND(rt1.c0)))AND(rt1.c1)))), ((CAST('' AS NUMERIC)) NOT BETWEEN ((rt1.c2 IN ())) AND (CASE rt0.c2  WHEN rt1.c0 THEN rt1.c2 END)) FROM rt1, t1 WHERE (((((x'08f3191b') NOT NULL))<<(((NULL) NOT BETWEEN (x'11ec') AND (NULL))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))&((t1.c97 IN ()))), (((rt1.c1)) NOT BETWEEN (((rt0.c0 IN (rt1.c2, rt0.c1)))) AND ((TRIM(rt1.c2, rt1.c0))))  NULLS LAST;SELECT DISTINCT t1.c97 FROM t1; -- 0ms;
SELECT CAST(t1.c97 AS REAL) FROM rt0 WHERE (CASE (('')|(-2.083415382E9))  WHEN ((-1622568234) NOT NULL) THEN ((1466095213) IS TRUE) WHEN ((-1.478801981E9)|(NULL)) THEN ((x'3716') BETWEEN (x'') AND (-1.12185364E8)) WHEN ('z)GdSXupr' IN ('aNtM14{')) THEN ((-1870012438) NOT BETWEEN (x'') AND ('P9~!휷c⁆+땔')) END);SELECT DISTINCT rt0.c0 FROM rt1;SELECT CASE GROUP_CONCAT(rt1.c2)  WHEN (+ (rt1.c0)) THEN CASE rt1.c2  WHEN x'f3345fa1' THEN rt1.c0 ELSE t1.c97 END WHEN ((rt1.c1)IS NOT(rt0.c2)) THEN GROUP_CONCAT(rt0.c2) WHEN AVG(NULL) THEN (((rt0.c0))>=((t1.c97))) ELSE ((rt1.c0) IS FALSE) END FROM t1, rt0, rt1 WHERE ((((x'f61d' IN (2064029137))) NOT BETWEEN (0.8245949360422249 COLLATE RTRIM) AND (CASE x''  WHEN 0.27879115015398803 THEN 0.29575207560004635 END))); -- 1ms;
SELECT ALL CAST(((rt0.c0)>>(rt1.c2)) AS NUMERIC), t1.c97, ((((rt1.c0)GLOB('1')))%(((rt1.c0) IS FALSE))) FROM rt0, t1 WHERE ((~ ((- ('0.05411719724205588')))));SELECT DISTINCT AVG(LOWER(rt1.c1)) OVER () FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((((((((NULLIF(t1.c97, rt0.c0))OR(CASE WHEN rt0.c2 THEN rt1.c2 WHEN NULL THEN 0xffffffffe1334a9b WHEN rt0.c0 THEN 0.17513231056581302 END)))AND((((rt1.c2))>=((rt1.c1))))))OR(0.732890350085398)))AND(((rt1.c0) NOT NULL))) FROM t1 WHERE (((((NULL COLLATE NOCASE)AND(((0x20fa8814) IS TRUE))))OR((('') BETWEEN (x'') AND (0.6929753931791263))))) GROUP BY ((((rt1.c0)=(rt0.c1)))!=((+ (rt0.c2)))), ((CASE WHEN rt1.c0 THEN rt0.c1 END) IS TRUE), (((t1.c97 IN ()))GLOB((((rt1.c1))<=((rt0.c2))))) LIMIT -1474430776 OFFSET -276639659;SELECT ALL CAST(rt0.c1 COLLATE NOCASE AS NUMERIC) FROM rt0, t1; -- 0ms;
SELECT ALL CUME_DIST() OVER (), (((NOT (0.8561247338689741))) ISNULL), DENSE_RANK() OVER () FROM t1, rt1, rt0 WHERE (((CAST('0.5060358835594115' AS INTEGER))+(((0.6531657460298469)|(0.9862300298495982))))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT((((rt1.c1))>=((rt1.c1)))) OVER () FROM t1, rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1) IS FALSE) IN ()) FROM rt1 WHERE ((((x'587b' IN (0.8072693622998344))) NOT BETWEEN (TRIM(DISTINCT NULL, NULL)) AND (0.09756026291804243))); -- 0ms;
SELECT ((CASE rt1.c2  WHEN t1.c97 THEN rt1.c1 ELSE rt0.c1 END)*(CAST(t1.c97 AS BLOB))) FROM rt0, t1 CROSS JOIN rt1 ON (+ ((((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((t1.c97))))) WHERE (CAST('1143429075' AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, t1, rt1 WHERE ((((+ (x'')))>((('1604354093') ISNULL)))); -- 0ms;
SELECT ALL ('BCf' IN (((rt0.c2)*(x'')), ((rt1.c0)=(rt1.c2)))) FROM rt0, rt1 WHERE (((((((((CASE '1825984800'  WHEN NULL THEN x'' WHEN 0x4248bcdc THEN 0.6897701547520263 WHEN 1528813874 THEN NULL ELSE x'15b7dab7' END)OR(((NULL)|('')))))OR((('-1376340115')=('ొxY\r#}(')))))AND((('')<(x'')))))OR(((0.6820895186566467)>=(x''))))); -- 0ms;
SELECT ALL SUM((rt1.c0 IN (rt1.c1))) OVER () FROM t1, rt0, rt1; -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c1)) AS TEXT) FROM rt1, t1 WHERE (((((0.02715721732591969) IS TRUE))GLOB(x'' COLLATE RTRIM)));SELECT DISTINCT ((rt1.c1)IS NOT((rt1.c0 IN ()))), (~ (6.55630446E8)) COLLATE BINARY, GROUP_CONCAT(((((((((rt0.c1)OR(rt1.c2)))AND(rt0.c0)))OR(x'')))AND(rt0.c0))) FROM rt0 WHERE (((-59264418 COLLATE NOCASE) NOTNULL));SELECT DISTINCT (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((((rt1.c0) ISNULL)))) FROM t1 WHERE ((~ ((NULL IN ()))));SELECT ALL SUM((('634480276')==(rt0.c0))) OVER ( ORDER BY CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c1 AS REAL) WHEN ((((rt1.c1)OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0)IS(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 ELSE rt0.c0 END THEN ((rt0.c0)IS NOT(NULL)) WHEN ((rt0.c2)IS NOT(rt1.c1)) THEN ((rt1.c1) ISNULL) WHEN (+ ('0.6213169937651881')) THEN ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END, ((((((((((((ABS(rt0.c2))AND(((((rt0.c1)OR(rt0.c1)))OR(rt1.c2)))))AND(NULL)))OR(COALESCE(rt0.c1, rt0.c2))))OR('')))AND(rt1.c2 COLLATE RTRIM)))AND(CAST(rt1.c0 AS BLOB))) DESC) FROM rt1, t1 GROUP BY (((rt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((SQLITE_VERSION()))) HAVING x'';SELECT ALL MAX((((('')AND(rt0.c1)))AND(rt1.c1))) COLLATE NOCASE FROM rt0, t1, rt1; -- 0ms;
SELECT ROW_NUMBER() OVER (), rt0.c1, COUNT(*) OVER () FROM rt0, rt1 WHERE (CASE WHEN DATETIME(0.13969071904674757, 0.9783427668745511, x'', x'c3f0', x'', x'', 'k') THEN TRIM(DISTINCT x'0d6c', '-1383197229') END); -- 0ms;
SELECT DISTINCT (rt1.c2 COLLATE BINARY IN (CASE WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c2 END)) FROM t1, rt1 WHERE (((((((((((((IFNULL('1861802593', -1680655523))OR(CAST(0.45111083064015867 AS TEXT))))OR((('-2027126307') ISNULL))))AND(CASE '141263135'  WHEN 0.6932276199669462 THEN '0.3535181037305599' END)))OR((- ('駛L')))))AND(CAST(NULL AS INTEGER))))AND((0.4234219645717191 IN ()))));SELECT (('639297282')/(rt0.c0)) COLLATE NOCASE FROM t1, rt0, rt1 WHERE (((((-2.075824908E9) IS TRUE))==((~ ('X\r'))))); -- 0ms;
SELECT DISTINCT ((CASE t1.c97  WHEN '' THEN rt1.c1 ELSE rt1.c0 END) BETWEEN (((rt0.c1)/(rt1.c1))) AND (CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c2 WHEN '_M' THEN rt1.c0 END)) FROM rt1 WHERE ((+ ((('1946528824')IS NOT('now #3')))));SELECT DISTINCT COALESCE(DISTINCT ((rt1.c2)%(rt1.c0)), (rt0.c1 IN ())) FROM rt0 WHERE ((~ (LTRIM(NULL))));SELECT DISTINCT (((((NOT (rt1.c0)))AND((NOT (rt1.c1)))))OR(0.8446399355034532)) FROM rt1, rt0, t1; -- 0ms;
SELECT (((((rt0.c0) NOT BETWEEN (t1.c97) AND (rt1.c0)), CAST(t1.c97 AS INTEGER), CASE t1.c97  WHEN rt1.c0 THEN rt1.c0 WHEN t1.c97 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 END))<=((t1.c97, ((rt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)), (~ (t1.c97))))), CAST(CASE WHEN t1.c97 THEN t1.c97 ELSE t1.c97 END AS TEXT), x'' FROM rt1, t1 WHERE (NULL) LIMIT -1643970783 OFFSET -1074347512;SELECT DISTINCT NTILE((+ (CAST(t1.c97 AS TEXT)))) OVER () FROM rt1, rt0, t1; -- 0ms;
SELECT ((CAST(rt1.c0 AS INTEGER))|('iS1/S}Aw5')) FROM t1, rt1, rt0 WHERE (x'' COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((rt1.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((CAST(t1.c97 AS TEXT)))) FROM rt0, rt1, t1; -- 0ms;
SELECT t1.c97 FROM rt1, rt0, t1 WHERE ((~ (x'f70f')) COLLATE NOCASE); -- 0ms;
SELECT ALL (+ (MIN(rt0.c0))), (((((t1.c97))=((rt0.c1)))) NOT BETWEEN (((rt1.c2)<(rt1.c1))) AND (CAST(rt0.c1 AS NUMERIC))), (((rt1.c2)) BETWEEN ((-3.96096438E8)) AND ((rt1.c0))) COLLATE BINARY FROM rt1, rt0 LEFT OUTER JOIN t1 ON CASE WHEN ((rt1.c0) NOT BETWEEN (t1.c97) AND (t1.c97)) THEN ((((rt0.c2)AND(rt1.c0)))OR(rt0.c0)) ELSE LIKE(x'63f4', rt0.c2) END WHERE (CASE WHEN CAST(x'' AS REAL) THEN ((0.34043242777726546) NOT BETWEEN (0Xfffffffffefcad30) AND ('-1588729742')) WHEN ((('>F'))!=(('1697273055'))) THEN (NOT (-6.40883003E8)) WHEN (('\nn{cB')IS(NULL)) THEN CAST(0.797141656050672 AS NUMERIC) WHEN ((((x'')AND(x'')))AND(0.15108122095467702)) THEN ((((NULL)AND(0.018352678872499806)))OR(x'')) WHEN ((0.47458382720982506)IS(1342907364)) THEN (('1677897408') BETWEEN (NULL) AND ('')) END); -- 0ms;
SELECT (- ('C4.8CMg')) FROM rt0, rt1, t1 WHERE (((((752266236)>>(NULL)))<<(((NULL)+('0.8656385709776596'))))); -- 0ms;
SELECT DISTINCT AVG(x'') OVER ( ORDER BY (((rt1.c1)) NOT BETWEEN (((rt0.c2 IN (t1.c97, t1.c97)))) AND (((rt0.c1 IN (0.7372085177523885))))) DESC  NULLS LAST) FROM rt1 WHERE (((NULL) IS FALSE) COLLATE RTRIM);SELECT (GROUP_CONCAT(rt1.c0) IN ((rt1.c2 IN ()), CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c0 END)) FROM rt0;SELECT ALL NULL FROM rt1, t1 ORDER BY (((rt0.c1, rt1.c2, rt1.c1)) BETWEEN ((CASE rt0.c1  WHEN t1.c97 THEN rt1.c0 WHEN rt1.c1 THEN 0x6d620003 WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c2 END, (+ (rt1.c1)), ((((0.7888038582300958)AND(rt0.c0)))AND(t1.c97)))) AND (((rt1.c0 IN ()), (rt1.c0 IN (rt1.c2, rt0.c1)), (- (rt1.c2))))) ASC, (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt1.c2)))) ISNULL) DESC  NULLS FIRST;SELECT ALL AVG((x'' IN (rt1.c1))) OVER () FROM rt0, t1;SELECT ALL NTILE((NOT (CASE '578915897'  WHEN t1.c97 THEN rt1.c2 WHEN rt0.c1 THEN t1.c97 WHEN 0X2714206e THEN rt1.c1 END))) OVER () FROM rt0, t1, rt1 WHERE ((+ ((x'' IN (-9.26303693E8, x''))))) ORDER BY CASE WHEN (+ (rt1.c0)) THEN x'' END ASC  NULLS FIRST LIMIT 1791575646; -- 0ms;
SELECT ALL rt1.c2 FROM rt1, t1, rt0 ORDER BY CAST(rt0.c2 AS TEXT)  NULLS FIRST; -- 0ms;
SELECT ALL TYPEOF(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2))), (((rt0.c0 IN ())) BETWEEN ((- (rt0.c0))) AND (rt1.c1)), CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS INTEGER) FROM rt1 ORDER BY rt1.c0 ASC, CASE WHEN rt1.c2 COLLATE NOCASE THEN ((0.9936716271680449) NOT NULL) WHEN rt1.c2 THEN (((rt0.c0))<>((rt1.c1))) WHEN ROUND(rt0.c1, rt0.c0) THEN IFNULL(DISTINCT rt0.c2, rt0.c0) ELSE (((t1.c97, rt0.c2, rt1.c2)) NOT BETWEEN ((0x2b52bf1, rt1.c2, -1.262215098E9)) AND ((rt0.c2, rt1.c2, rt1.c1))) END  NULLS FIRST;SELECT '507633354', ((((t1.c97) BETWEEN (rt0.c0) AND ('7iBe橜zT3'))) BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt0.c0)), (+ (LAST_INSERT_ROWID())) FROM rt0, rt1, t1; -- 1ms;
SELECT AVG(rt0.c0) OVER (), CASE CAST(rt1.c0 AS BLOB)  WHEN (((rt0.c1, 0x276d30a1, rt1.c2))>((rt1.c0, rt1.c1, rt0.c1))) THEN SQLITE_VERSION() END, ((rt0.c0 COLLATE BINARY)||(MIN(-170634726))) FROM t1, rt1, rt0 WHERE (0.8490820437767566 COLLATE NOCASE); -- 0ms;
SELECT ALL (((t1.c97 IN ()))&(rt0.c1)) FROM rt1 WHERE (((((CAST('' AS NUMERIC))AND(0.04510155748434275 COLLATE RTRIM)))OR(CASE 0x2f558b0a  WHEN '1352157278' THEN NULL END)));SELECT MIN(((rt1.c2)>>(rt1.c0))) FROM rt1, t1 LIMIT 1080298184; -- 0ms;
SELECT DISTINCT ((t1.c97 COLLATE RTRIM)&(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt1 FULL OUTER JOIN rt0 ON (~ ((rt1.c1 IN (rt0.c1)))) LEFT OUTER JOIN t1 ON ((((rt0.c2)|(rt0.c1)))>>('Hr')) WHERE ((((x'', 0.609632763385212, '-27255332')) BETWEEN ((((0.3535181037305599) IS FALSE), CASE '495627421'  WHEN 0.5239991048699472 THEN NULL WHEN NULL THEN 0xffffffffee4916ab WHEN NULL THEN 0.3151420644649817 ELSE '*R9tW(	B' END, CAST(0x530c87dc AS BLOB))) AND ((x'', (((NULL))<>((x''))), '0')))) LIMIT 254391950 OFFSET 1503556232; -- 1ms;
SELECT DISTINCT (((((t1.c97, '', rt0.c0)) NOT BETWEEN ((rt0.c2, t1.c97, rt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c2))))AND((((1616981627))>=((rt1.c2))))) FROM rt1, rt0, t1 ORDER BY ((((TYPEOF(rt1.c1))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt1.c1)))OR(rt0.c1)))OR(t1.c97)))))OR(CASE WHEN rt0.c0 THEN t1.c97 ELSE rt0.c0 END))  NULLS FIRST, CASE WHEN ((rt0.c2)||(0.3785610156118643)) THEN CAST(rt0.c1 AS BLOB) END DESC; -- 0ms;
SELECT ALL rt0.c2 FROM t1, rt1;SELECT ALL LTRIM(rt1.c0, rt1.c1) COLLATE BINARY, MIN(rt0.c0), MAX((~ (rt1.c1)) COLLATE BINARY) FROM t1, rt1;SELECT LIKELY((- (rt0.c0))) FROM t1, rt0, rt1 WHERE (((((((x'158d')OR(0xffffffff8819a7d6)))AND(NULL)))=((+ (0.1065837043180683))))); -- 0ms;
SELECT ALL ((rt1.c2 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT rt1.c2)) AND (rt1.c0)) FROM rt1; -- 0ms;
SELECT DISTINCT (((IFNULL(DISTINCT rt1.c1, rt1.c1)))<=((rt0.c0 COLLATE RTRIM))) FROM rt0 ORDER BY (((NULL COLLATE NOCASE, CAST(rt1.c0 AS TEXT), ((((rt0.c0)AND(rt0.c1)))OR(NULL))))<((0.9951955482689051, ((rt0.c1)LIKE(rt1.c2)), CAST(rt1.c1 AS INTEGER)))) ASC  NULLS LAST;SELECT DISTINCT LIKE(((rt1.c1)<<(rt1.c1)), (((t1.c97)) BETWEEN ((rt1.c1)) AND ((rt1.c0))), '1'), '1503556232', -1.588729742E9 FROM rt0, rt1, t1 WHERE (((((((((NULL)OR(x'aeed')))OR('0.06541039248103508')))OR(((0.3799161045145214)<<(0.9548795854470966)))))OR(((NULL)>=(NULL))))); -- 0ms;
SELECT SUM(((rt1.c2) ISNULL)) OVER ( ROWS (~ ((+ (t1.c97)))) PRECEDING EXCLUDE GROUP) FROM rt1, t1 ORDER BY (((rt1.c2)>=(rt1.c2)) IN ()) DESC; -- 0ms;
SELECT ALL (((((+ (rt0.c1)))OR(((((((((rt0.c2)AND(t1.c97)))AND(NULL)))OR(0.8096171936906618)))AND(rt0.c0)))))AND(NULL)) FROM t1, rt1 WHERE (('-46244240' COLLATE RTRIM IN ()));SELECT ((rt0.c1 COLLATE NOCASE)IS((rt1.c0 IN ()))) FROM rt0 WHERE (ABS(((x'8f35') IS TRUE))); -- 1ms;
SELECT DISTINCT CAST(SQLITE_VERSION() AS TEXT), (rt0.c1 IN ()), (NOT (3.79186585E8)) FROM rt1; -- 0ms;
SELECT DISTINCT (SUM(rt0.c1) IN ()) FROM t1, rt1, rt0 WHERE ((('-781642092' IN (NULL)) IN ())); -- 0ms;
SELECT RTRIM(CAST(t1.c97 AS INTEGER)) FROM rt0 WHERE ((((json_array_length(x'6c4d', 1311611829)))<>((('-1476339068' IN ())))));SELECT ALL COUNT(TOTAL(MIN(t1.c97))), CASE '1190727242'  WHEN ((rt1.c0)+(rt0.c1)) THEN CASE WHEN rt0.c1 THEN '45427697' ELSE rt1.c1 END END, ((((rt1.c2)AND(SQLITE_VERSION())))AND(((rt0.c2)*(rt1.c2)))) FROM rt0;SELECT ALL PERCENT_RANK() OVER (), COUNT((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c97)))), CUME_DIST() OVER () FROM rt1 WHERE ((CASE WHEN 0.39384462036928003 THEN '-891290801' END IN (((('-600825744')) BETWEEN ((x'2a60')) AND (('Af')))))) ORDER BY (((((t1.c97))>=((t1.c97))))|(LOWER(DISTINCT t1.c97))) ASC  NULLS LAST, CASE CASE rt1.c2  WHEN rt0.c0 THEN t1.c97 END  WHEN CASE WHEN rt1.c0 THEN rt1.c0 END THEN ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END DESC;SELECT ((((0.9234471329994539) BETWEEN (rt1.c1) AND ('l*'))) IS FALSE), (((((rt1.c0) NOTNULL)))<((((((rt0.c1)OR(0.6361776563964054)))AND(rt1.c2))))), NULL FROM rt0, t1, rt1 WHERE (0.8703875191620402); -- 0ms;
SELECT ((+ (rt1.c1)) IN ()) FROM t1 WHERE ((NOT (((((0xffffffff92eb9f14)AND('')))OR(0.7349156794262504))))); -- 0ms;
SELECT DISTINCT '' FROM rt0, rt1, t1 WHERE (((((x'87e32f6c')IS(0.7080646536150341))) NOTNULL)); -- 0ms;
SELECT ((LIKELIHOOD(rt0.c1, 0.9559366615762763)) NOTNULL) FROM t1, rt1, rt0 WHERE (((((COALESCE(x'', x'fa9d'))AND((('0UC0d<6') NOTNULL))))AND(json_insert(0.05991400842481931, x'2fd3', x'')))) ORDER BY ((rt0.c0)<=(((rt1.c2) NOT NULL))); -- 0ms;
SELECT ((((((((((rt1.c0)OR(rt0.c1)))OR(0x6de59faf)))AND(rt0.c0)))AND(rt1.c1)))OR(CAST(rt1.c0 AS INTEGER))) FROM t1, rt1 WHERE ((((- (NULL)))<=((('896583274') NOT BETWEEN ('528186818') AND (0.7691238425971518)))));SELECT DISTINCT NULL FROM t1, rt1, rt0; -- 0ms;
SELECT AVG((~ (rt0.c0))) OVER () FROM t1, rt0, rt1 WHERE (CASE 0.8848752838881545 COLLATE NOCASE  WHEN 2.29894118E8 THEN ((((((((0.9201316839832598)OR(0.26778040221041544)))AND(0X46f90e4a)))OR(0.898785509567803)))OR(9.90916536E8)) END) LIMIT -544865433 OFFSET -1884457006; -- 0ms;
SELECT ALL RANK() OVER (), NULL, CAST(t1.c97 AS REAL) COLLATE BINARY FROM rt0 NOT INDEXED, rt1, t1 LIMIT -1476339068; -- 2ms;
SELECT (CASE WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN t1.c97 ELSE rt0.c2 END IN ()) FROM t1 WHERE (((((0Xffffffffb75f2d27)AND(x''))) NOTNULL)) ORDER BY CASE x''  WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c0 END COLLATE BINARY ASC, ((('5n'))<>((CAST(0.9132701464230756 AS BLOB)))), ((CASE rt0.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END) BETWEEN ((+ (rt1.c1))) AND (rt1.c1))  NULLS FIRST;SELECT ((CAST(rt0.c0 AS INTEGER))<=((+ (rt0.c1)))), CASE WHEN CASE WHEN rt0.c1 THEN t1.c97 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN NULL THEN NULL WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END THEN (- (t1.c97)) END, NULL FROM rt1, rt0 WHERE ((((~ (0.6213169937651881))) BETWEEN (CAST(x'' AS NUMERIC)) AND (HEX('x'))));SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY (- (CAST(rt1.c2 AS INTEGER))), (~ ((((rt1.c1))>=((rt0.c1)))))) FROM rt0 INNER JOIN rt1 ON -597925510 INNER JOIN t1 ON (NULL IN ()) WHERE (((x'') IS FALSE)); -- 1ms;
SELECT ((((((((((((IFNULL(DISTINCT rt0.c0, rt0.c1))AND(((rt0.c1)*(rt1.c2)))))OR(LIKELIHOOD(rt1.c2, 0.062472192345562894))))AND((((x''))>=((rt1.c1))))))AND((rt0.c1 IN ()))))OR((((t1.c97, rt1.c0, rt1.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((t1.c97, rt1.c2, rt1.c1))))))OR(((0Xffffffff9c7fe688)=(rt0.c1)))) FROM t1 LIMIT 229894118;SELECT CAST((+ (t1.c97)) AS NUMERIC) FROM t1, rt1 WHERE (CAST('-302788315' AS INTEGER) COLLATE RTRIM) ORDER BY (- (rt0.c2 COLLATE RTRIM)) DESC, LIKE(rt0.c1, rt0.c0) COLLATE RTRIM;SELECT DISTINCT ((((rt0.c0)LIKE(rt1.c2)))>>(CAST(rt0.c0 AS BLOB))) FROM rt0, t1 WHERE ((((x'')) NOT BETWEEN ((HEX(DISTINCT 0.9383252118735316))) AND ((0.944715076572728 COLLATE BINARY))));SELECT DISTINCT rt0.c0 FROM rt1;SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) NOTNULL) FROM rt1;SELECT (COUNT(t1.c97) IN ()), ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (t1.c97))) ISNULL), rt1.c0 FROM rt1 WHERE ((CASE '-1371717476'  WHEN '-970174574' THEN x'' ELSE 0xffffffffc4ed5d24 END IN ()));SELECT DISTINCT SUM(TYPEOF(DISTINCT t1.c97)) FROM rt0, rt1, t1 ORDER BY ((json_patch(rt0.c0, rt0.c1)) NOT NULL); -- 0ms;
SELECT ((rt1.c1 IN ()) IN (CAST(t1.c97 AS INTEGER))) FROM t1, rt0 WHERE ((((+ ('iM}Nc')))==(((0.9953784556052842) IS FALSE)))) LIMIT 1939340551 OFFSET 1112063196; -- 0ms;
SELECT DISTINCT (MIN(rt1.c0) IN (CAST(NULL AS INTEGER), (rt0.c0 IN ()))) FROM rt1, rt0; -- 0ms;
SELECT ((~ (rt1.c1)) IN ()) FROM t1, rt0 NOT INDEXED; -- 0ms;
SELECT ALL COUNT(((rt0.c2)*(rt0.c0))) FROM t1, rt0, rt1 INTERSECT SELECT DISTINCT CASE '0.12564728765597233'  WHEN ((((rt0.c0)OR(rt1.c2)))AND(rt1.c2)) THEN x'' COLLATE RTRIM END FROM t1, rt1, rt0; -- 0ms;
SELECT ALL ((TOTAL(rt0.c1)) NOT NULL) FROM rt0, rt1; -- 0ms;
SELECT ((rt0.c0) BETWEEN (((rt1.c2) BETWEEN (rt0.c2) AND (rt1.c0))) AND (0.1514179113057531)) FROM rt1, rt0 WHERE ((~ ('-1318449565')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))<<(LIKELIHOOD(rt0.c0, 0.639045203318107))), ((((rt1.c2) IS TRUE))/(CAST(rt1.c1 AS NUMERIC))), COUNT(rt1.c2) FROM rt0 WHERE ((CAST('-926303693' AS REAL) IN (CASE WHEN 0.19369743199136347 THEN 0.7915581408657194 WHEN 0xffffffffcebb69e5 THEN '-1050911184' WHEN NULL THEN x'9d1e' ELSE NULL END)));SELECT rt0.c0 FROM rt0 WHERE ((((x'' IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT ((rt1.c2)*(((rt0.c2) ISNULL))) FROM rt0 WHERE ((((x'', 0X3b102fb8, x'')) NOT BETWEEN ((x'35e2', -1.870012438E9, '-600825744')) AND ((NULL, '6脜js', NULL))) COLLATE BINARY);SELECT (((rt0.c2) IS TRUE) IN ()), COUNT(((rt1.c0) IS TRUE)), NTH_VALUE((NOT (LIKELY(rt0.c0))), (((rt0.c1 IN (rt0.c1, rt0.c1)))<(rt0.c1))) OVER () FROM rt0, t1 WHERE (((CAST(x'dda7dcb4' AS BLOB))AND((((0.7320535594316832)) NOT BETWEEN ((NULL)) AND ((x'')))))) ORDER BY '' ASC, x'' COLLATE RTRIM DESC  NULLS LAST, CASE (x'' IN (rt1.c2))  WHEN rt0.c2 THEN ((rt0.c2) ISNULL) ELSE rt0.c2 END  NULLS FIRST;SELECT DISTINCT t1.c97, GROUP_CONCAT((rt0.c2 IN ())) OVER (), 0Xffffffffbefe1e07 FROM rt0, rt1 WHERE ((((((''))>=((NULL))))&(DATE(0.4225636873513614, NULL, 0.2163761954291843))));SELECT DISTINCT CAST(CAST(rt0.c1 AS BLOB) AS REAL), rt0.c1 COLLATE BINARY COLLATE BINARY COLLATE BINARY, CAST(NULL COLLATE BINARY AS NUMERIC) FROM rt1, rt0, t1 WHERE (((((0.49176176931912075)OR((NOT (0.9859281770798529)))))OR(((NULL)LIKE(x'd360'))))); -- 0ms;
SELECT DISTINCT LIKE(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt1.c0)), CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c1 ELSE NULL END), NTILE(t1.c97) OVER ( ORDER BY (rt0.c2 IN (((rt0.c2) IS FALSE), (- (rt1.c0)))) ASC  NULLS FIRST), CASE CASE rt1.c0  WHEN x'08cb' THEN rt0.c0 ELSE rt1.c1 END  WHEN (x'' IN (rt0.c1)) THEN ((rt0.c2)IS NOT(rt0.c0)) END FROM t1 ORDER BY CAST(rt1.c0 AS REAL), ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (NULL) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c97 THEN rt1.c2 WHEN rt0.c1 THEN t1.c97 ELSE '-1538379626' END));SELECT (((NOT (rt0.c0)))<(((rt1.c1)*(rt0.c2)))), (((rt0.c1)-(rt0.c1)) IN ((((t1.c97))=((rt0.c0))), CAST(rt1.c2 AS BLOB))), COUNT((rt1.c1 IN ())) FROM rt1, t1;SELECT ALL (+ (UNICODE(-348476732))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT (~ (CAST(rt1.c0 AS BLOB))) FROM rt0, rt1 WHERE ((((('206986158')AND(CAST(252754557 AS NUMERIC))))OR(((NULL) BETWEEN (1.577108585E9) AND (-9223372036854775808))))); -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS REAL) COLLATE NOCASE FROM t1, rt0, rt1 GROUP BY rt0.c1, t1.c97, ((CAST(rt0.c1 AS INTEGER))*(CASE WHEN NULL THEN rt1.c1 ELSE rt1.c2 END)); -- 0ms;
SELECT DISTINCT t1.c97 FROM rt1, rt0, t1 WHERE (CASE (('899661432')=('-1649382055'))  WHEN (- ('-256278883')) THEN SQLITE_COMPILEOPTION_USED(x'') END); -- 0ms;
SELECT ALL '' FROM rt1, t1 GROUP BY (((t1.c97)) BETWEEN ((((rt1.c2)IS(rt1.c0)))) AND ((((rt0.c0) ISNULL)))) HAVING CHANGES();SELECT DISTINCT (((((rt1.c1) IS FALSE), ((rt0.c1)>(rt0.c0)), rt0.c1 COLLATE BINARY))>=((SQLITE_SOURCE_ID(), ((t1.c97) ISNULL), COUNT(rt1.c1)))), ((CAST(rt1.c0 AS REAL)) IS FALSE), CASE CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c97 END  WHEN (((rt0.c1))==((x''))) THEN CASE WHEN t1.c97 THEN rt0.c0 ELSE rt1.c2 END WHEN ((((rt1.c2)AND(rt1.c2)))OR(rt0.c1)) THEN COUNT(*) WHEN '1621899057' THEN 0.6511024364141784 END FROM t1, rt0 WHERE (('Infinityk' COLLATE NOCASE IN ())) ORDER BY CASE rt0.c1  WHEN (((x'516d')) BETWEEN (('')) AND ((rt1.c2))) THEN rt0.c1 COLLATE RTRIM ELSE (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c2))) END DESC;SELECT ALL (((((((rt0.c2))!=((rt0.c0))))OR(json_quote(rt0.c0))))OR(NULL)) FROM t1, rt0 WHERE (((('')) BETWEEN ((CASE 0.3966074406049378  WHEN NULL THEN NULL WHEN '}*Gv' THEN '' WHEN '415657154' THEN x'' ELSE '1348804232' END)) AND ((((x'') BETWEEN ('0.7767771427696153') AND (x'')))))); -- 0ms;
SELECT ALL (+ ((((rt1.c0))!=((rt0.c1))))) FROM t1;SELECT ALL (~ (rt0.c1 COLLATE RTRIM)), 0.37060554389415157, (- (CAST(rt1.c1 AS INTEGER))) FROM rt0 WHERE (((((0.11747482283669097)AND(-1.467379908E9)))OR(0X66624b11)) COLLATE NOCASE COLLATE BINARY);SELECT COUNT((((rt0.c2, rt0.c2, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c1, t1.c97)) AND ((rt1.c0, rt1.c2, rt0.c1)))) FROM t1, rt0;SELECT DISTINCT NULL, (+ (x'')), rt0.c1 FROM rt0, rt1, t1 WHERE (((0.9557175233985381)>(((NULL) BETWEEN ('r|i') AND ('663720350'))))); -- 0ms;
SELECT ALL rt0.c1 FROM rt0, t1, rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c1)OR(rt0.c0)))OR(rt0.c0)) IN ()) FROM t1, rt1, rt0; -- 0ms;
SELECT SUM((((NULL))<((x'')))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND ((((rt1.c2, t1.c97, t1.c97))=((rt1.c1, t1.c97, rt1.c2))) IN ()) FOLLOWING EXCLUDE TIES), (((0.8169406403580328, t1.c97, rt0.c1)) NOT BETWEEN ((((((t1.c97)AND(t1.c97)))AND(rt1.c0)), ((t1.c97) BETWEEN (rt0.c0) AND (t1.c97)), (rt1.c1 IN (rt0.c2, rt1.c1)))) AND ((COUNT(*), rt1.c1, ((rt0.c0)/(rt0.c2))))), ((((((((((((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(((rt0.c1)GLOB(rt0.c2)))))OR(COUNT(*))))OR(IFNULL(rt0.c2, rt1.c2))))AND(COALESCE(DISTINCT rt1.c0, t1.c97, rt1.c2, '0.02371754429734174'))) FROM rt1 WHERE ((((TRIM(DISTINCT '634480276', x''), (NULL IN ()), (((0.6280908274812191, NULL, -1338736107))!=((205942104, x'', NULL))), CASE WHEN 0.628282717020417 THEN NULL ELSE x'' END, (+ (1419682571))))>(((-1878268771 IN ()), (((((((('C\r')AND(0.3587380440508452)))AND(1391233750)))OR('1178045051')))OR(x'')), ((NULL)=(x'')), CASE WHEN x'1d23' THEN x'' END, CAST(0.5376703355806893 AS INTEGER)))));SELECT DISTINCT 0.3938234336420334 FROM rt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS REAL), (~ (((rt0.c1)>(rt1.c2)))), ((CAST(rt1.c2 AS INTEGER))!=((~ (rt1.c0)))) FROM rt1 WHERE ((((((((0.8267896926855214)OR(x'')))AND(0x69ad05ee)), ((((0.4677708913171075)OR(x'bfb3')))OR(NULL)), 'Pu' COLLATE BINARY))<((((0.7858185569805345)GLOB(0.5269877145622873)), ((0.31603226360095116) BETWEEN (0xffffffffdc5d73d0) AND (NULL)), ((0.7936382665682475) NOT NULL)))));SELECT DISTINCT (((CAST(t1.c97 AS BLOB)))>=((((t1.c97) BETWEEN (rt1.c0) AND (rt0.c2))))) FROM t1 WHERE (((CASE WHEN 0Xf794ccb THEN x'' WHEN 583301963 THEN 8.8671873E7 WHEN x'' THEN '0.9234993737061453' ELSE 0x0 END)>=('1432135708' COLLATE BINARY)));SELECT ALL CAST(((rt1.c2)IS NOT(0.12825295935584435)) AS NUMERIC), ((CAST(rt1.c1 AS TEXT))GLOB(CAST(rt1.c1 AS BLOB))), UNLIKELY(DISTINCT (~ (rt0.c1))) FROM rt0, t1, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c0))<=(((((rt1.c1))<((rt0.c0)))))) FROM rt1;SELECT DISTINCT (((rt1.c1) ISNULL) IN (json_valid(rt0.c1), CASE rt0.c2  WHEN rt0.c1 THEN t1.c97 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 ELSE t1.c97 END)), rt0.c1 COLLATE BINARY, HEX(DISTINCT COUNT(0.6705484135004022)) FROM rt1, rt0, t1; -- 0ms;
SELECT -1.371717476E9 COLLATE BINARY, (+ (((((((((rt1.c1)AND(rt0.c2)))AND(rt1.c1)))AND(t1.c97)))AND(t1.c97)))), (NOT (rt1.c2)) COLLATE BINARY FROM rt0 WHERE ((+ (CAST('[oV|cꤿY' AS INTEGER))));SELECT ALL ((((t1.c97)||(rt1.c0)))%((+ (rt1.c1)))) FROM t1;SELECT DISTINCT LIKELIHOOD(TIME(rt1.c1, rt1.c1, rt0.c0), 0.6956185224225488) FROM rt1, rt0 WHERE (ABS(DISTINCT ((NULL)<>('-132901908')))) LIMIT -1262215098; -- 0ms;
SELECT t1.c97 FROM rt1 WHERE (COALESCE(CAST('-1318449565' AS INTEGER), LIKELY('1613212652'), ((x'')<(0.6548225859447485)), 0.12391350002189294));SELECT GROUP_CONCAT(((rt1.c2)IS('1722522858'))) FROM rt0, rt1 WHERE (x'' COLLATE BINARY) UNION SELECT DISTINCT CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt1.c1 ELSE rt0.c0 END AS NUMERIC) FROM rt0, rt1, t1 WHERE ((((((((((((((NOT (0.1753518706377868)))AND(0.5696066493137816)))AND(((((0Xffffffffbf3402cc)AND(3.84264336E8)))OR(NULL)))))AND(x'0bc7' COLLATE NOCASE)))AND((-1752364144 IN ()))))OR(((((0.0755980397413274)AND(NULL)))OR(NULL)))))OR(LIKELIHOOD(x'', 0.6296789742190733)))); -- 0ms;
SELECT ALL LEAD(CASE WHEN (rt0.c1 IN (rt0.c0)) THEN (~ (rt0.c0)) WHEN json_extract(rt0.c1, rt0.c1) THEN (rt0.c0 IN (rt0.c2, rt0.c2)) WHEN SQLITE_COMPILEOPTION_GET(0.8271349615128197) THEN ((rt0.c0)==(rt0.c1)) WHEN ((rt0.c2) NOT NULL) THEN TRIM(rt0.c1) WHEN NULLIF(DISTINCT rt0.c1, rt0.c1) THEN JULIANDAY(rt0.c0, rt0.c1, rt0.c0) END, ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN 0x2c579e8b THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c2 THEN -831005211 END)), '-442328167') OVER (), ((((((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))))OR((rt0.c0 IN ()))), ((~ (rt0.c0)) IN (((rt0.c0) NOT NULL))) FROM rt0 WHERE ((((('Y2f{ӍH౲[') NOT NULL)) BETWEEN (('*SK' IN ())) AND (((NULL)<=('-241937697')))));SELECT ALL GROUP_CONCAT(((rt0.c0) BETWEEN (2.29894118E8) AND (t1.c97))) COLLATE RTRIM, ((0.77543830426904)*(rt1.c0)), ((((rt1.c0) ISNULL))&(((t1.c97)=(rt1.c0)))) FROM rt0 WHERE (((((0.4718023524143561) NOT NULL)) BETWEEN (('%T5.jZt(' IN ())) AND (((NULL)IS('\zm.)')))));SELECT ALL 0.7842604419197481, COUNT((t1.c97 IN ())), ((((rt1.c0)>>(0.07546917804753195)))+(((rt1.c0) IS FALSE))) FROM rt0 WHERE (((((((((((((((225760162)AND(x'')))OR(0xfffffffff299235f)))OR(0.4211854029583044)))OR(x'')))OR(NULL)))AND('832869046')))|((((((((('')AND(x'')))AND('7COU')))AND(x'')))AND('-394910765')))));SELECT ((CAST(rt1.c0 AS INTEGER)) NOT NULL) FROM rt1, t1 GROUP BY ((1.503556232E9) ISNULL), TYPEOF(LENGTH(rt1.c2)), (((((((rt1.c1))<=(('0.9327458989629549'))))AND(((((((((((((rt0.c1)AND(rt0.c2)))AND(0.29526976899639945)))OR(rt0.c0)))AND(rt1.c0)))AND(rt0.c0)))AND(rt0.c2)))))AND(rt1.c1 COLLATE BINARY)) HAVING ((TRIM(t1.c97))IS(CAST(rt0.c2 AS BLOB)));SELECT DISTINCT ((((rt1.c1) BETWEEN (rt0.c0) AND (0.11458141645973652)))IS NOT(HEX(DISTINCT t1.c97))) FROM rt1 WHERE (CAST((('1.')-(NULL)) AS NUMERIC)) GROUP BY (((- (rt0.c2))) IS TRUE) HAVING ((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ());SELECT ALL ((rt1.c0)/(rt0.c0)) COLLATE RTRIM FROM rt0;SELECT DISTINCT ((((t1.c97) IS TRUE)) IS FALSE) FROM rt0, t1; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) IS FALSE) AS REAL) FROM t1, rt1, rt0 GROUP BY ((rt1.c0 COLLATE BINARY)=(((((rt0.c0)AND(rt1.c2)))AND(rt1.c0)))) HAVING ((((((rt0.c0)IS NOT(rt0.c1)))OR(t1.c97 COLLATE RTRIM)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)))); -- 0ms;
SELECT DISTINCT (- (rt0.c1)), CAST(((NULL)>>(rt1.c1)) AS TEXT), (((((rt1.c1 IN (0.19105903741288832)))AND(CAST(rt0.c1 AS TEXT))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt1.c0)))) FROM rt1, rt0, t1 NOT INDEXED WHERE ((((~ (0Xffffffffb4c42046)))>>((+ ('-1354940895'))))); -- 1ms;
SELECT DISTINCT (- ((t1.c97 IN ()))), ((((((t1.c97) ISNULL))AND('98470611')))AND(-6.15254949E8)), CASE WHEN t1.c97 THEN ((rt0.c0)==(rt1.c2)) END, CAST(rt1.c2 COLLATE BINARY AS TEXT), CAST(TRIM(rt0.c0) AS TEXT) FROM t1, rt0, rt1 GROUP BY ((CAST(rt1.c1 AS NUMERIC))<<(CAST(rt0.c2 AS BLOB))) HAVING (+ ((((rt1.c1, t1.c97, t1.c97)) NOT BETWEEN ((rt1.c1, rt0.c0, 0.8723032164687005)) AND ((rt1.c2, '', rt1.c0))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)<(rt0.c2))) ISNULL) FROM rt0, t1, rt1 WHERE (CASE ((((NULL)AND('qf')))AND(0.1478021871644014))  WHEN x'' THEN (('')!=(NULL)) END) GROUP BY (+ (CAST(rt0.c1 AS TEXT))); -- 0ms;
SELECT ALL ((((t1.c97)-(rt0.c2))) ISNULL), (TRIM(DISTINCT rt1.c0) IN ((((t1.c97)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt0.c0)))), CASE ((rt1.c2) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt1.c0 COLLATE RTRIM THEN rt0.c0 COLLATE BINARY ELSE (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((NULL))) END FROM rt0;SELECT DISTINCT CASE WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN t1.c97 THEN t1.c97 WHEN rt1.c0 THEN rt1.c2 END THEN ((rt1.c1)-(rt1.c1)) END, '0.37442035818463104', (NOT (((rt0.c2)>(rt0.c2)))) FROM rt0, t1, rt1 WHERE ((x'' IN ())); -- 0ms;
SELECT DISTINCT MIN(((rt0.c1)*(rt0.c1))) FROM t1, rt1 WHERE (IFNULL(((((((((0.874165013801742)OR(759767431)))OR('0.12564728765597233')))AND(1.613212652E9)))AND('\n*')), CASE WHEN '-1148476133' THEN '252754557' END));SELECT DISTINCT (MIN(rt1.c0, rt1.c1) IN ()) FROM rt1, t1 WHERE (((('V>facW') IS TRUE) IN ())); -- 0ms;
SELECT ALL (~ (((rt0.c1) NOT NULL))), ((LIKELY(t1.c97)) BETWEEN (LIKELY(DISTINCT rt1.c1)) AND (((rt1.c1) ISNULL))), UPPER(DISTINCT ((((rt0.c2)AND(rt0.c0)))OR(t1.c97))) FROM rt1;SELECT DISTINCT ((((rt0.c0)GLOB(rt0.c0)))OR(t1.c97 COLLATE RTRIM)), NULL, ('LY' IN ()), CAST(rt0.c2 AS TEXT), (((((((((NOT (t1.c97)))OR(LOWER(DISTINCT 0.19936285271349796))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (t1.c97)))))OR((((rt1.c1, rt1.c0, rt0.c0)) BETWEEN ((rt1.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt1.c2, rt1.c2))))))AND(json_type(rt0.c2))) FROM t1;SELECT DISTINCT SUM(((rt0.c0)*(0.604368131071186))) FROM t1, rt0 WHERE (((x'' COLLATE RTRIM) BETWEEN ((NOT (x''))) AND (((0X5435fecb)%(0.4512715796690613))))); -- 0ms;
SELECT DISTINCT ((MIN(rt1.c0))+(((rt0.c2) BETWEEN (t1.c97) AND (rt1.c2)))) FROM rt0 WHERE (((((((NULL)) NOT BETWEEN ((NULL)) AND ((x''))), (+ ('4黤%8V')), ((x'') ISNULL)))>=(((0.22533721546201602 IN ()), (x'' IN (0.4770631150714866)), (~ ('384264336')))))) GROUP BY ((((((rt0.c0)OR(t1.c97)))OR(rt0.c1))) ISNULL);SELECT SUM((t1.c97 IN (rt0.c1, ''))), CASE CASE rt0.c1  WHEN rt0.c1 THEN '796194784' WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c1 END  WHEN x'' THEN x'' END, MIN('-276639659') FROM t1, rt1;SELECT ((((MIN(rt0.c0))OR(rt1.c1 COLLATE NOCASE)))AND(((((rt1.c2)AND(rt0.c2)))OR(rt0.c1)))) FROM t1, rt0, rt1; -- 0ms;
SELECT ALL ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)))AND(((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))) FROM t1, rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS INTEGER), 'Q_', ((((((((((((rt0.c2)AND(rt1.c2)))OR(rt0.c2)))AND(t1.c97)))OR(rt1.c0)))AND((rt0.c2 IN ()))))AND(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)) FROM rt0, t1 WHERE ((((((x''))>=((x''))))=(CASE WHEN '-614292460' THEN x'' ELSE '0.725937133646626' END))); -- 0ms;
SELECT (rt0.c0 IN (((rt0.c0)>(rt0.c2)))), GROUP_CONCAT(((rt0.c0)<(rt0.c2))) OVER (), (- (((rt0.c0)|(rt1.c0)))) FROM t1, rt0, rt1; -- 1ms;
SELECT ALL ((MIN('0.9234471329994539'))<<(CAST(rt1.c0 AS BLOB))) FROM t1, rt0 GROUP BY (((- (rt0.c1))) BETWEEN (rt0.c0 COLLATE RTRIM) AND ('RAl*N>H^')), CAST(TIME(rt1.c1, rt0.c0, rt0.c0) AS BLOB), CAST(ABS(DISTINCT rt0.c2) AS BLOB);SELECT DISTINCT 0.25385950468516716, ((((NULL)AND(((rt1.c2)OR(rt1.c1)))))OR(CAST(rt0.c1 AS BLOB))), (CAST(rt1.c1 AS INTEGER) IN ()) FROM t1;SELECT DISTINCT CAST((((x''))!=((rt0.c0))) AS NUMERIC) FROM rt1 WHERE (0xffffffffe87623d3);SELECT DISTINCT ((CASE WHEN t1.c97 THEN rt1.c0 ELSE t1.c97 END) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c1 WHEN t1.c97 THEN rt0.c2 END)), ((t1.c97) NOT NULL), '275840543' FROM rt0;SELECT LIKELIHOOD('' COLLATE NOCASE, 0.63963354367977), ((CASE rt0.c0  WHEN rt1.c0 THEN t1.c97 ELSE rt0.c0 END) BETWEEN ((~ (rt1.c1))) AND (rt0.c1 COLLATE BINARY)), (+ (CAST(rt1.c0 AS BLOB))) FROM rt0, rt1, t1; -- 0ms;
SELECT ((t1.c97)>(rt1.c1)) COLLATE NOCASE, (CASE WHEN rt1.c0 THEN rt0.c2 END IN ()), (((rt1.c0 IN ()))LIKE(ROUND(rt1.c1, rt1.c1))) FROM rt1, rt0 LIMIT 1824271416 OFFSET 367262825;SELECT ((NULL COLLATE RTRIM)!=((((rt1.c1)) NOT BETWEEN ((x'')) AND ((rt1.c1))))), DENSE_RANK() OVER ( ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL)), MIN(json_quote(rt0.c0)) FROM rt1;SELECT DISTINCT TOTAL(((NULL) BETWEEN (rt1.c2) AND (rt1.c0))) FROM rt1 WHERE (CASE (('r~㨉P~-')<>(x'ab87'))  WHEN ((x'18f58922') NOT BETWEEN (0.3535181037305599) AND ('-499552398')) THEN ((0.2875596750479188) IS FALSE) END); -- 0ms;
SELECT DISTINCT ((((((((((t1.c97)AND(x'')))OR(t1.c97)))AND(rt0.c1)))AND(rt0.c1)))<<(((((((((rt1.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt1.c0)))OR(rt0.c0)))), (+ (((((NULL)AND(t1.c97)))OR(t1.c97)))), ((+ (rt0.c2)) IN ()), ((NULL) NOTNULL), (((rt0.c2)) NOT BETWEEN ((((t1.c97)&(rt1.c1)))) AND ((DATE(rt1.c1, rt1.c1, rt1.c0)))) FROM rt0 WHERE (((CASE 'c4'  WHEN '775984654' THEN 0X6d5c0cb0 WHEN x'' THEN NULL WHEN '?恒' THEN x'' END)LIKE(CASE x'dd357509'  WHEN 0.048087554938584076 THEN 0.77543830426904 END)));SELECT DISTINCT NULLIF(((rt1.c2)GLOB(rt0.c2)), MAX(rt0.c2)) FROM t1, rt0 WHERE ((((NOT (x'')))/((+ (0.23160085371250516)))));SELECT DISTINCT rt1.c1 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c0 WHEN t1.c97 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN t1.c97 THEN t1.c97 ELSE rt0.c2 END)) FROM t1, rt0 WHERE (CAST(CASE '1875270748'  WHEN x'' THEN x'fd98' ELSE 0.8856396885209892 END AS TEXT)) GROUP BY '(pe{s|!c}* ' COLLATE BINARY;SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((NULL))))>(rt1.c2 COLLATE BINARY)) FROM rt1 WHERE (((((((-408668317)AND(0X108fed0e)))AND(-902508445)))OR((('')GLOB(x'')))));SELECT TYPEOF(((t1.c97) BETWEEN (rt1.c1) AND (t1.c97))) FROM rt0, t1, rt1; -- 0ms;
SELECT DISTINCT (((t1.c97)) NOT BETWEEN ((((rt0.c2) BETWEEN (x'') AND ('*H^fL')))) AND ((rt0.c1))) FROM rt1, rt0, t1 WHERE (((CASE WHEN '##&TB02^?' THEN NULL WHEN '379186585' THEN NULL WHEN '-979295566' THEN x'' END)|(CASE WHEN x'' THEN x'' WHEN 0.7167659300945435 THEN NULL WHEN '' THEN 1.834749104E9 ELSE x'' END))); -- 0ms;
SELECT ALL CAST(t1.c97 AS REAL) FROM rt1, t1 WHERE (((x'')<=(((('aರ\')) NOT BETWEEN ((NULL)) AND ((0x7735c7ab)))))); -- 0ms;
SELECT rt1.c1 FROM rt1, t1; -- 0ms;
SELECT (((rt0.c2 IN ())) NOT NULL) FROM t1, rt0, rt1; -- 0ms;
SELECT DISTINCT (+ (rt1.c2 COLLATE NOCASE)) FROM rt0, t1, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(LIKE(rt1.c1, 'qF', '?')) FILTER(WHERE ((('786112491')) BETWEEN ((CASE WHEN rt1.c2 THEN x'' WHEN t1.c97 THEN rt0.c1 WHEN t1.c97 THEN rt0.c1 END)) AND (((((rt0.c0))<((rt0.c0))))))) OVER ( ORDER BY ((((((rt1.c1)>>(rt0.c2)))AND(CAST(rt1.c1 AS REAL))))OR(NULL))  NULLS FIRST RANGE BETWEEN  UNBOUNDED PRECEDING AND ((((t1.c97)<=(t1.c97))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt1.c2 END) AND (CASE WHEN rt1.c2 THEN '1621899057' ELSE rt1.c2 END)) PRECEDING) FROM rt0, t1;SELECT DISTINCT (~ (CAST(rt0.c0 AS INTEGER))) FROM rt1 WHERE (((CAST(0.43867921364044504 AS REAL)) ISNULL)) UNION SELECT x'' FROM rt0, t1, rt1 WHERE (((NULL) NOT BETWEEN (x'7bf2') AND (x'')) COLLATE NOCASE);SELECT DISTINCT (((((rt1.c0, '475366216', rt0.c2))==((rt1.c2, rt0.c1, t1.c97)))) NOT BETWEEN (((t1.c97) NOTNULL)) AND (((rt0.c0) ISNULL))) FROM t1, rt1, rt0 UNION SELECT DISTINCT NULL FROM t1 WHERE (((CAST(0.2345893161537208 AS REAL)) ISNULL)) ORDER BY ((CAST(rt0.c0 AS REAL))*(rt1.c1));SELECT ALL ((0.482082639863475) ISNULL) COLLATE NOCASE FROM rt1 WHERE (((json(x'')) BETWEEN ((NULL IN (x'', 1047460559))) AND (((NULL) NOT BETWEEN (0.3967098027603284) AND (1.772946926E9)))));SELECT DISTINCT (- (MIN(rt1.c0))), (t1.c97 COLLATE NOCASE IN ()), (((((((((('c{Hx(i4볜')OR(rt0.c0)))AND(x'b0a5b90c5038')))OR(rt0.c2)))OR(t1.c97))) ISNULL) FROM rt0, t1 WHERE (((NULLIF('1202410245', x'406a'))%(1348804232))) GROUP BY (rt1.c2 IN ()) COLLATE RTRIM;SELECT ALL rt0.c2 FROM t1, rt0 WHERE (ABS('|I')); -- 0ms;
SELECT ((((rt0.c2) NOT NULL))>((rt1.c1 IN (rt1.c1)))) FROM rt1, rt0, t1 WHERE (((x'5d44') NOT NULL)); -- 0ms;
SELECT (~ (((rt1.c1)LIKE(t1.c97)))) FROM rt1;SELECT ((rt1.c1 COLLATE RTRIM)*(CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c0 END)) FROM t1, rt0 WHERE (((((0.009059006751272913)<=('oY')))<<(((0.008141291601450162) ISNULL))));SELECT DISTINCT LAG((('-387885087')GLOB(CASE WHEN '0.5667670401515281' THEN t1.c97 WHEN rt0.c1 THEN t1.c97 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '13]jL械藁' END)), ((((rt0.c1)>>(rt0.c2))) IS TRUE), x'') OVER () FROM t1, rt0 WHERE ((~ (ABS('-1996784803')))) GROUP BY CAST(rt1.c2 COLLATE RTRIM AS TEXT), (((((t1.c97)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT BETWEEN (((((((((rt0.c1)OR(x'')))AND(rt0.c1)))OR(rt1.c0)))AND(rt0.c2))) AND (((rt0.c0)/(rt0.c0)))), (((((NOT (rt0.c1)))OR(CAST(0.9260318647602376 AS NUMERIC))))OR((+ (t1.c97)))) HAVING rt0.c0;SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt1.c1 END)<=(AVG(rt0.c1))) FROM t1, rt0;SELECT ALL ((((rt0.c0) IS TRUE))IS((NOT (rt0.c0)))) FROM t1;SELECT DISTINCT (('381783507') NOT BETWEEN (MIN(t1.c97)) AND (((t1.c97)/(0.6170221140602106)))), (((rt0.c0)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) AND ((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c2 END))), NULL, ((CASE rt0.c2  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END) BETWEEN ((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c0)))) AND (rt0.c2)), ((((rt1.c0) NOTNULL)) NOT BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(rt1.c0))) AND (TOTAL(t1.c97))) FROM rt1, rt0, t1 WHERE (((((x'') NOT NULL))GLOB(x'63df'))) ORDER BY CASE WHEN rt1.c2 THEN t1.c97 ELSE rt0.c1 END COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT ((((((((((rt0.c2)%(rt0.c1)))AND(rt1.c2)))OR(rt0.c0)))OR((rt0.c1 IN (rt1.c2)))))OR((~ (0xffffffff8c22e150)))) FROM t1;SELECT DISTINCT MAX(NULL) FROM rt0 WHERE (CASE WHEN '~\nHB羧L%츃' COLLATE RTRIM THEN 0Xffffffff8f700084 COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)>>(rt0.c2)))OR((((rt0.c1, rt1.c0, rt1.c2)) BETWEEN ((rt1.c2, rt1.c0, rt0.c1)) AND ((rt1.c0, rt0.c2, rt0.c1))))))AND(MIN(x'', rt0.c2, rt1.c1, rt1.c0))) FROM t1 WHERE ((('&>,sH z')<(x'')) COLLATE RTRIM);SELECT LAG(((((rt0.c1)AND(json(rt0.c1))))OR(TRIM(NULL, rt0.c1))), CASE ((rt0.c1)>=(rt0.c0))  WHEN ((rt0.c1)GLOB(0.9191288725437333)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (~ (rt0.c2)) THEN CAST(rt0.c1 AS NUMERIC) WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN rt0.c0 END, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))/(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))))) OVER ( ORDER BY (((NOT (rt0.c1)))*(rt1.c0)) DESC  NULLS FIRST RANGE  CURRENT ROW EXCLUDE GROUP) FROM rt0;SELECT DISTINCT LEAD((((t1.c97, t1.c97, rt0.c0)) BETWEEN ((((t1.c97)==(rt0.c0)), ((0.771438272982857) BETWEEN ('507633354') AND (rt0.c1)), ((rt0.c2)%(t1.c97)))) AND (((((rt0.c0))<=((rt0.c1))), ((rt0.c2)!=(rt0.c0)), ((rt0.c1)/(rt0.c1))))), rt0.c0, ((rt0.c2)<=(t1.c97)) COLLATE BINARY) OVER (), NTH_VALUE(CAST(t1.c97 COLLATE RTRIM AS TEXT), ((1772946926)/(CASE WHEN rt0.c0 THEN t1.c97 WHEN rt0.c0 THEN rt0.c1 WHEN t1.c97 THEN t1.c97 ELSE '0.39384462036928003' END))) OVER (), NTILE(((((rt0.c2))<((rt0.c1))) IN (x''))) OVER ( ORDER BY x'63ba' DESC) FROM t1, rt0; -- 0ms;
SELECT ALL (((- (x'e1e2'))) NOTNULL) FROM rt0, t1 WHERE (((((((0x7565d216)AND(1618706778)))OR(0.31749004581299733)))<<(0.9469161196200145))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))&(x'')) FROM rt1, rt0 WHERE ((NULL IN (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN NULL COLLATE RTRIM THEN ('-808503300' IN ()) END, TYPEOF(rt0.c1) COLLATE BINARY, '9y' COLLATE RTRIM FROM rt1, t1 WHERE (((((NULL) IS FALSE))<((('-1477687799')>=('-1610202028')))));SELECT DISTINCT ((((((((((rt0.c2) ISNULL))AND(TOTAL(rt1.c1))))AND(((rt1.c1)<>(0x55399105)))))OR(((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c1)))))OR(((rt0.c1) ISNULL))) FROM rt0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((json_extract(t1.c97, t1.c97)))=((((rt1.c1) NOT NULL)))) FROM t1, rt0 WHERE (CASE WHEN CAST(1766723640 AS TEXT) THEN ((('Z0', 0x86b811f, -1.996784803E9))<((x'', '912184750', x'6d682806'))) END) ORDER BY ((((rt1.c1)||(rt0.c0)))||(CASE t1.c97  WHEN rt0.c2 THEN rt0.c0 END)) ASC;SELECT ALL TOTAL('g') FROM t1, rt0, rt1 WHERE (((CAST(x'' AS REAL))*((('7~\naTz6E')>>(x''))))); -- 0ms;
SELECT COUNT((rt0.c0 IN ())) OVER () FROM t1, rt1 ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE t1.c97 END)<<('2084001551'))  NULLS FIRST; -- 0ms;
SELECT ((((UPPER(DISTINCT rt1.c2))AND(((x'8d91') ISNULL))))AND((rt0.c1 IN (rt0.c2, rt1.c1)))) FROM rt0, t1;SELECT ALL (NOT (((rt0.c2) IS TRUE))) FROM rt0, t1 WHERE (((('1613212652') IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT rt0.c1, CASE WHEN ((rt0.c0)GLOB(rt1.c0)) THEN -1327485721 END, ((LENGTH(rt0.c0)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c2)), ((((json_extract(rt0.c2, rt1.c0, 1285693128, t1.c97))OR(GROUP_CONCAT(rt0.c0))))OR(x'')), ((((((rt1.c2)GLOB(rt1.c1)))OR(CAST(t1.c97 AS TEXT))))AND(-1132855897)) FROM rt0 NOT INDEXED ORDER BY (((rt0.c2 IN ()))IS NOT((rt0.c2 IN ()))) DESC  NULLS LAST;SELECT ((((rt0.c0)%(rt0.c1))) BETWEEN ('e|') AND (((t1.c97)||(rt1.c2)))), (((~ (''))) ISNULL), (((((rt1.c2, rt1.c2, rt1.c2))>=((rt1.c2, t1.c97, t1.c97))))||(((rt0.c1)==(rt0.c0)))), FIRST_VALUE((- (t1.c97 COLLATE BINARY))) OVER (), ((((NULL))!=((t1.c97))) IN (rt0.c2 COLLATE RTRIM)) FROM rt1, t1, rt0 WHERE ('-1588729742'); -- 0ms;
SELECT DISTINCT (((- (rt0.c2)))+((- (rt0.c0)))), PERCENT_RANK() OVER ( PARTITION BY CASE WHEN MAX(t1.c97, rt1.c1, rt0.c2, t1.c97) THEN CAST(rt1.c0 AS NUMERIC) WHEN (((0.8205411287911928)) NOT BETWEEN ((t1.c97)) AND ((rt0.c0))) THEN UPPER(DISTINCT rt0.c2) WHEN ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END, (((t1.c97)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))) COLLATE BINARY COLLATE NOCASE), ((('b7T')) NOT BETWEEN ((LOWER('1772946926'))) AND ((rt1.c1))) FROM rt1, t1, rt0; -- 0ms;
SELECT LOWER(CASE rt0.c0  WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c0 END) FROM rt1, t1 WHERE (0.8613327580221537);SELECT (((x'1e03'))>=((((rt0.c2)|(rt0.c2))))), (((((((rt0.c2, rt0.c2, rt1.c1, rt0.c1, rt1.c0, rt0.c0, rt0.c2)) BETWEEN ((rt1.c2, rt1.c0, rt1.c0, rt0.c2, t1.c97, rt0.c1, rt1.c0)) AND ((0.40026152670538584, rt0.c0, rt1.c2, rt0.c1, 0.7114859879068892, rt1.c2, rt1.c1))))OR((rt1.c0 IN ()))))OR(((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)))), AVG(((rt0.c1) ISNULL)) OVER ( ORDER BY rt0.c1  NULLS FIRST, (((rt0.c0, rt1.c2, rt0.c2)) BETWEEN (((('aX.]Yad''')IS NOT(t1.c97)), (((0.3647162090091076))=((t1.c97))), CAST(t1.c97 AS BLOB))) AND ((CAST(rt0.c0 AS NUMERIC), ((t1.c97) IS FALSE), ((((t1.c97)AND(t1.c97)))AND(rt1.c0))))) ASC, json_valid(rt0.c2) COLLATE NOCASE DESC, rt0.c2  NULLS LAST) FROM rt1, rt0, t1 WHERE (LOWER(CAST(0xffffffffc109eddd AS NUMERIC))); -- 0ms;
SELECT ALL NULL, ((CAST(rt1.c0 AS TEXT))/(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))), CASE WHEN rt0.c1 THEN ((((t1.c97)OR(rt1.c2)))AND(rt1.c1)) END FROM t1 WHERE (0.0011166306150480754);SELECT ((CASE WHEN rt0.c2 THEN 0.8408974535770763 END) NOT BETWEEN (TOTAL(rt1.c1)) AND (((rt0.c2) ISNULL))) FROM rt0;SELECT 0X34f3543a, ((((rt0.c1) ISNULL)) NOT BETWEEN (0.8526731568640112 COLLATE BINARY) AND (rt0.c2)), (((rt1.c0)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND (((rt1.c1 IN (rt0.c1))))) FROM rt1, rt0, t1 WHERE ((- (CAST(x'' AS BLOB)))); -- 1ms;
SELECT CAST('' AS TEXT) FROM rt0, rt1; -- 0ms;
SELECT CASE TOTAL_CHANGES()  WHEN (rt0.c2 IN ()) THEN ((rt1.c1) NOT NULL) ELSE CASE WHEN rt1.c0 THEN rt0.c1 END END, ((((rt0.c0)LIKE(rt1.c1))) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt1.c1))) AND (SUM(rt1.c0))), x'c458' COLLATE NOCASE FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c2 THEN rt0.c2 ELSE 655630446 END COLLATE BINARY FROM t1, rt1 GROUP BY (((rt0.c0, rt1.c1, rt1.c0)) NOT BETWEEN ((((t1.c97) NOT BETWEEN (rt0.c1) AND (t1.c97)), ((((rt0.c2)OR(rt1.c1)))OR(rt0.c1)), ((rt0.c0)==(rt1.c1)))) AND ((rt1.c2, ((NULL)IS(t1.c97)), (('FALSE')|(rt0.c0))))) HAVING (((rt1.c0 IN ()))|((('') IS FALSE)));SELECT AVG(rtreenode(t1.c97, rt0.c0)) OVER (), (((((rt0.c1))<=((rt0.c2)))) ISNULL), ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN ((((t1.c97, rt0.c2, rt1.c1)) BETWEEN ((rt0.c2, t1.c97, 9.46278682E8)) AND ((rt1.c2, rt0.c0, rt0.c2)))) AND ((- (rt1.c0)))) FROM rt0, rt1 ORDER BY UPPER(DISTINCT (+ (rt0.c2)));SELECT DISTINCT rt1.c0, (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c0))) COLLATE NOCASE, LAG((- (((t1.c97)LIKE(t1.c97)))), ((t1.c97) IS TRUE) COLLATE RTRIM, (+ (((0.7751484903952996)<<(t1.c97))))) OVER () FROM t1 WHERE ((~ (CAST(x'' AS NUMERIC))));SELECT DISTINCT rt1.c1, (json_quote(rt1.c1) IN (CASE WHEN rt1.c2 THEN rt0.c0 END)), (~ (((rt0.c1) IS TRUE))) FROM rt0, t1;SELECT ALL ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY, UPPER(((rt0.c2)>(rt0.c0))), (((rt1.c0)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 END)) AND ((MAX(rt0.c0)))) FROM rt1, rt0, t1; -- 0ms;
SELECT ALL (((((rt1.c1) NOT NULL)))<>((((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c97))))), RANK() OVER ( PARTITION BY ((rt0.c2) BETWEEN (HEX(rt0.c1)) AND (NULL COLLATE BINARY)), NULL), TIME(((rt0.c0) ISNULL), (rt1.c0 IN (rt1.c0)), ((rt1.c2)!=(rt1.c2)), ((rt0.c0)%(rt0.c1)), (((rt1.c0))>((t1.c97)))) FROM rt1, rt0, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c0)LIKE(rt1.c2)))+((0.9147456369896666 IN (rt0.c2)))) FROM rt1 ORDER BY CASE json_remove(rt0.c0, rt1.c0)  WHEN (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) THEN rt1.c1 COLLATE BINARY WHEN CASE WHEN rt0.c1 THEN rt1.c1 WHEN t1.c97 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 END THEN CAST(NULL AS TEXT) WHEN CAST(NULL AS TEXT) THEN CAST(t1.c97 AS BLOB) WHEN CASE WHEN rt0.c1 THEN rt1.c1 END THEN ((x'') NOT NULL) WHEN (rt0.c1 IN ()) THEN rt1.c0 END ASC LIMIT 1312255144;SELECT (((NOT (rt0.c1))) NOTNULL), (- (CAST(rt1.c2 AS TEXT))), ((rt0.c1)*(rt0.c2)) COLLATE NOCASE FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((TIME(rt0.c1, rt1.c2, rt0.c2)) IS TRUE) FROM rt0, rt1 WHERE ((~ (NULL))); -- 1ms;
SELECT DISTINCT (((((rt0.c0)&(rt1.c2))))!=((rt1.c1 COLLATE BINARY))) FROM rt0, t1 WHERE ((((CASE 0xffffffffdc54ed4d  WHEN x'' THEN '	OACZᙈ' END))<((TRIM(DISTINCT 'FALSE')))));SELECT DISTINCT ((((rt1.c1)<>(rt0.c0))) BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR('-2079456558')))AND(rt1.c0)))AND(rt1.c1))) AND (((rt0.c1) IS TRUE))) FROM rt1, rt0, t1 WHERE ((+ (0.9578114376792516 COLLATE BINARY))) GROUP BY NULL HAVING ((LIKELIHOOD(rt0.c1, 0.7567147856926552)) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END) AND (0.12195798077870068)); -- 0ms;
SELECT LAST_VALUE(rt0.c2) OVER () FROM rt0 ORDER BY t1.c97 DESC;SELECT DISTINCT (((((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt1.c0))))+(((t1.c97) BETWEEN (rt0.c1) AND (t1.c97)))) FROM t1, rt0, rt1 WHERE (CAST((((('V')OR(NULL)))OR(NULL)) AS TEXT)); -- 0ms;
SELECT ALL ((((rt1.c2) IS FALSE)) NOT NULL) FROM t1, rt1 WHERE (2.59607755E8); -- 0ms;
SELECT DISTINCT LTRIM(((rt0.c2)&(rt1.c0)), (rt1.c0 IN ())) FROM t1, rt0;SELECT x'' FROM rt1, t1, rt0 WHERE ((('381783507' COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT DISTINCT (rt0.c0 COLLATE NOCASE IN ()), (+ (((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0)))), JULIANDAY((((rt1.c0)) NOT BETWEEN ((t1.c97)) AND ((rt0.c0))), CHANGES(), ((rt0.c0) NOT NULL), ((t1.c97)>(rt0.c0)), CAST(rt1.c1 AS BLOB)) FROM rt1, t1, rt0; -- 0ms;
SELECT DISTINCT (~ (TOTAL(rt1.c2))) FROM t1 ORDER BY json_array(CAST(rt0.c0 AS INTEGER), ((rt0.c0)||(rt0.c2))), (((rt1.c2 COLLATE RTRIM, (rt0.c2 IN ()), ((rt0.c1) ISNULL)))>=(((rt0.c1 IN (rt0.c2, rt1.c1)), ((t1.c97) ISNULL), (- (rt0.c2)))))  NULLS FIRST;