-- Time: 2024/06/07 10:52:48
-- Database: database8
-- Database version: 3.40.0
-- seed value: 4140944108
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=-1696829225 WHERE IFNULL(((vt0.c0)<<(vt0.c0)), x''); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-1696829225'), ('-158650823'), ('1306614182'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='%꣫liScHp'; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('-83449621'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (1742485951); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'9b5a'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('g'); -- 0ms;
ANALYZE vt0; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('G'), (0.7803073880586789), ('-158650823'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
DELETE FROM vt0 WHERE CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) AS TEXT); -- 0ms;
PRAGMA threads = -2068891257256051848; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 490373605); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.3265368633288761), (x''), (-83449621); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34748'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), ('-158650823'), ('-158650823'); -- 0ms;
COMMIT; -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1306614182);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, prefix = 165); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'e273'; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 1ms;
PRAGMA main.stats; -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1934827169); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'5593'); -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), (0x766ffc04), (0.6099006547450178); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0xffffffffc1b6afee; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL), ('v㮪'), (0X2f339b8a), (-1044992018), (' ?(!烗'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE vt1; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt1 SET c0=NULL, c0='-1152030349' WHERE CAST(ABS('d!Y''{y') AS REAL); -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1306614182 -130462187 sz=1710141192'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.6075136764223056); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('N.{'); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
REINDEX  rt0; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (0Xfffffffff8394e15, x'', '-130462187', NULL, '0.6099006547450178'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c1) VALUES (0X379aa5e0, 0X2f339b8a, x'5700'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', 0.6099006547450178, NULL, x'', '1742485951'); -- 0ms;
UPDATE rt0 SET c2=NULL WHERE ((((rt0.c4)*(rt0.c0))) NOT BETWEEN (NULLIF(rt0.c1, rt0.c4)) AND ((rt0.c3 IN ()))); -- 0ms;
REINDEX  vt1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((rt0.c1))) FROM rt0; -- 0ms;
SELECT ((((rt0.c2)AND(((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(json_object(rt0.c1, rt0.c0))) FROM rt0 WHERE (((((x'57c7')) BETWEEN (('1742485951')) AND (('-2055013543'))) IN ()));SELECT ALL COUNT(*), ((vt1.c0)-((((rt0.c2))>((rt0.c2))))), MIN(1501993677) FROM vt1, rt0; -- 0ms;
SELECT ALL SUM(vt1.c0) OVER (), ((((rt0.c2 COLLATE BINARY)OR((NULL IN ()))))AND(((((((((NULL)AND(vt1.c0)))AND('316296907')))OR(vt1.c0)))OR(vt1.c0)))), (+ (CAST(NULL AS TEXT))) FROM rt0;SELECT DISTINCT 1475788424 FROM vt1; -- 0ms;
SELECT CAST(vt1.c0 AS TEXT) COLLATE NOCASE FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN '1090780244' THEN ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ('w雨r3' IN (rt0.c1)) END, CAST((rt0.c2 IN ()) AS BLOB), ((CAST(vt1.c0 AS INTEGER)) IS FALSE) FROM vt1, rt0 WHERE (TRIM(DISTINCT json_quote(0xffffffffc02496e8))); -- 0ms;
SELECT ALL ((((rt0.c3)<(rt0.c4)))&(rt0.c2)) FROM rt0 WHERE (CAST(ABS(NULL) AS BLOB)) ORDER BY (~ (CAST(rt0.c4 AS BLOB)))  NULLS LAST; -- 0ms;
SELECT ALL ((((vt1.c0 IN ()), ((rt0.c1)IS NOT(rt0.c1)), ((rt0.c0)||(vt1.c0))))>=((x'', vt1.c0 COLLATE NOCASE, (((rt0.c1))<=((rt0.c2)))))) FROM rt0 LIMIT 1475788424;SELECT ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))-((- (rt0.c2)))), CAST((rt0.c3 IN ()) AS NUMERIC), CASE ((vt1.c0)<<(rt0.c2))  WHEN (- (rt0.c4)) THEN (- (rt0.c0)) WHEN TRIM(DISTINCT rt0.c4, 0.028700098776097915) THEN AVG(rt0.c2) WHEN ((rt0.c0)OR(rt0.c4)) THEN ((rt0.c3) NOT NULL) ELSE rt0.c3 COLLATE NOCASE END FROM rt0;SELECT ALL TOTAL((((rt0.c2, NULL, rt0.c4, vt1.c0, rt0.c3)) BETWEEN ((rt0.c4, x'03b5', rt0.c1, vt1.c0, rt0.c3)) AND ((rt0.c4, rt0.c1, rt0.c4, rt0.c1, rt0.c2)))) FILTER(WHERE (NOT (((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt1.c0))))) OVER () FROM rt0, vt1 WHERE ((((((0.0422271143364219, '%꣫liScHp', NULL)) NOT BETWEEN ((0.0422271143364219, x'', NULL)) AND (('FﱔZ', 1.742485951E9, NULL)))) NOT BETWEEN ((NOT ('j4꼈lU\r*&'))) AND (0Xffffffff8582fb59))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c3)), SUM(rt0.c1), rt0.c2 FROM rt0, vt1; -- 0ms;
SELECT (+ (((((vt1.c0)OR(vt1.c0)))AND(rt0.c2)))) FROM vt1 WHERE ((NOT (CASE WHEN '_P' THEN 0.6090773419442813 END))) GROUP BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND ('0.6090773419442813'))) AND (((x'') NOT BETWEEN (vt1.c0) AND (rt0.c2)))), LIKELY(DISTINCT '-1735688183'), (((rt0.c4)) BETWEEN ((((rt0.c0)==('')))) AND ((UNLIKELY(DISTINCT rt0.c1))));SELECT ALL DENSE_RANK() OVER () FROM rt0 WHERE (((INSTR(NULL, 0.029683724342457696)) NOT NULL)) GROUP BY CASE TRIM(rt0.c2)  WHEN ((rt0.c0) BETWEEN ('925477175') AND (rt0.c2)) THEN ((rt0.c2)IS NOT(vt1.c0)) WHEN ((rt0.c2)<<(rt0.c1)) THEN ((rt0.c1)%(rt0.c4)) WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c2 AS INTEGER) ELSE vt1.c0 COLLATE RTRIM END, (- (((rt0.c3)IS(x'')))), ((NULL) IS FALSE) HAVING ((TOTAL(rt0.c3))<<(((((((((rt0.c3)OR(NULL)))OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c2)))) ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) NOT BETWEEN (((~ (rt0.c0)), ((rt0.c2) ISNULL), ((rt0.c2) NOT NULL))) AND (((('7Bㆁ')<>(vt1.c0)), CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END, ((rt0.c2)>=(0.23590909538493932))))) ASC  NULLS LAST;SELECT ALL (+ (rt0.c0)) FROM vt1 WHERE ((((x'' IN ()))<<(CASE x''  WHEN '0' THEN '_?' END)));SELECT json_object(CAST(rt0.c2 AS NUMERIC), MAX(rt0.c0)) FROM rt0, vt1;SELECT ALL ((SUM(rt0.c0))IS((rt0.c0 IN (rt0.c1)))) FROM vt1;SELECT DISTINCT NULL, CASE (((rt0.c4))<((vt1.c0)))  WHEN ((vt1.c0)!=(rt0.c1)) THEN ((rt0.c2)GLOB(rt0.c2)) WHEN ((rt0.c0) IS FALSE) THEN ((vt1.c0)-(rt0.c2)) WHEN x'94d3' THEN ((0.9354528976192923)GLOB(rt0.c4)) ELSE (rt0.c4 IN ()) END, CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER) FROM rt0 WHERE (NULL COLLATE BINARY COLLATE NOCASE);SELECT DISTINCT ('' IN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))), ((COUNT(*)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c4)=(rt0.c1)))), AVG(TOTAL(json_array(rt0.c2, rt0.c0))) FROM rt0, vt1 GROUP BY (0Xffffffffbdabba9f IN ());SELECT DISTINCT ((0.9354528976192923)>(((rt0.c0)AND(rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c0) AND ('k雨')) COLLATE RTRIM FROM vt1, rt0; -- 1ms;
SELECT DISTINCT (((((((((vt1.c0 IN ()))OR(((rt0.c4)OR(0.029683724342457696)))))OR(((rt0.c1)OR(rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND((rt0.c0 IN ()))) FROM rt0, vt1 WHERE (0.9104001822768137 COLLATE BINARY); -- 0ms;
SELECT DISTINCT (+ (rt0.c4 COLLATE BINARY)), TOTAL(IFNULL(DISTINCT rt0.c0, rt0.c0)) COLLATE BINARY, LIKE(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END, ((((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)), 'L') FROM rt0 LIMIT 1742485951 OFFSET 1739009696; -- 0ms;
SELECT DISTINCT (((rt0.c4, 0.3265368633288761, rt0.c0)) NOT BETWEEN ((MAX(rt0.c2), (~ (rt0.c3)), ((((((((((((rt0.c2)AND(rt0.c4)))OR(vt1.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(vt1.c0)))) AND ((NULL, CAST(vt1.c0 AS TEXT), ((rt0.c3)/(rt0.c0))))), CASE CAST(rt0.c2 AS INTEGER)  WHEN MAX(rt0.c1) THEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (- (rt0.c3)) THEN (((rt0.c2))<=((vt1.c0))) WHEN ((vt1.c0)>=(vt1.c0)) THEN 1834451985 END, 0.3285658111648393 FROM vt1 WHERE (CAST(((-1.58650823E8) NOT BETWEEN (1710141192) AND (-1152030349)) AS BLOB));SELECT ALL MIN(((rt0.c3) ISNULL)) FROM rt0 GROUP BY ((x'89e31978')/(((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))), ((((x'') BETWEEN ('-268479036') AND (rt0.c2)))IS((NOT (rt0.c4)))), ((((rt0.c1) IS TRUE)) BETWEEN ('925477175') AND (((rt0.c4)!=(vt1.c0))));SELECT ((rt0.c4)<=(vt1.c0)) COLLATE RTRIM COLLATE RTRIM FROM rt0 GROUP BY ((((rt0.c2)<=(rt0.c3))) NOTNULL) HAVING ((('932881888', vt1.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c3 COLLATE BINARY, AVG(rt0.c1))) AND ((json_type(rt0.c0), ((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c4)))AND(vt1.c0)), x''))) LIMIT 1475788424;SELECT ALL FIRST_VALUE(CAST(0.2537329138919795 AS TEXT)) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((LOWER(rt0.c1)) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c3))) OVER (), rt0.c4, LIKELIHOOD(DISTINCT LAST_INSERT_ROWID(), 0.7811887329328199) FROM rt0;SELECT DISTINCT LAST_VALUE(rt0.c3) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT SUM((- (rt0.c1))) OVER () FROM vt1, rt0 WHERE ((((0.571981177838105 IN ()))<>(((((((((x'')OR(NULL)))AND('-1826572525')))AND(x'')))AND(0.7580627526405124))))) ORDER BY ((((((NULL)>>(rt0.c0)))AND((((rt0.c0, '0p', rt0.c1))<((rt0.c4, rt0.c3, rt0.c3))))))AND(rt0.c2)) DESC LIMIT 370934269 OFFSET 1501993677; -- 0ms;
SELECT CAST(UPPER(DISTINCT rt0.c1) AS REAL) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((~ (rt0.c1)) IN ()) FROM vt1, rt0 WHERE ((((CAST('1900479625' AS REAL), CAST('' AS INTEGER), (NOT ('-1071343896'))))>=((0.29530638393763564, (+ ('াo\[O|')), ((0.059470188622822606)-(3.70934269E8)))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(CASE ((rt0.c3)AND(0.9354528976192923))  WHEN ((rt0.c3)AND(rt0.c1)) THEN rt0.c0 COLLATE BINARY WHEN (+ (rt0.c4)) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN rt0.c4 THEN vt1.c0 END) OVER () FROM rt0, vt1 LIMIT 1489695800; -- 0ms;
SELECT ALL ((COUNT(*))>(TOTAL(x''))) FROM rt0, vt1 WHERE (((((1.4896958E9)<>('-309260169'))) NOT NULL)); -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((rt0.c2)>(rt0.c4)) THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END WHEN ((rt0.c0) NOT NULL) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN (vt1.c0 IN (vt1.c0)) THEN ((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)) ELSE 1.742485951E9 END, (((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((((rt0.c1)*(rt0.c4)), rt0.c0, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, ((rt0.c2)+(rt0.c0)), ((NULL)IS NOT(rt0.c4))))), (((rt0.c0)) NOT BETWEEN (((- (rt0.c1)))) AND ((((rt0.c0)<<(vt1.c0))))) FROM vt1 WHERE (((('-2055013543', -1.735688183E9, '')) NOT BETWEEN (((('-1112819041')>>(NULL)), (('') BETWEEN (NULL) AND (0.7929237521571766)), ((((((((NULL)AND('BW䵁''/NA')))OR('-1826572525')))OR(0.8736435640840428)))AND(-1058870227)))) AND ((x'', (x'9c8e' IN ()), ((x'')<<(1032420638)))))) LIMIT 1987050500 OFFSET 149544844;SELECT DISTINCT COUNT(CAST(rt0.c2 AS REAL)) OVER (), vt1.c0, rt0.c2 FROM rt0;SELECT (((('')AND(MIN(rt0.c0))))AND((('1040337316') NOT NULL))), ((((- (rt0.c3))))<=(((+ (rt0.c1))))), (((rt0.c1) ISNULL) IN (1.4896958E9)), ((((vt1.c0 IN ())))=((rt0.c2))), (+ (((((((((((((rt0.c1)OR(0.9784533793186477)))AND(rt0.c0)))OR(rt0.c3)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c0)))) FROM vt1;SELECT DISTINCT ((((rt0.c1)*(rt0.c4))) IS FALSE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((NULL)<<(((3.70934269E8)==(rt0.c2)))), ROW_NUMBER() OVER (), SUM((((rt0.c3))>((x'95c2')))) FILTER(WHERE ((((((((NULL)AND(rt0.c4)))OR((vt1.c0 IN ()))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(CASE WHEN '925874341' THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c4 END))) OVER () FROM rt0 WHERE (((((0.2209948063844548)IS NOT(0.7596447441133333)))AND(((1.4896958E9) IS TRUE))));SELECT CAST(vt1.c0 AS TEXT) COLLATE RTRIM FROM vt1 WHERE ('-450424605'); -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOTNULL) FROM vt1, rt0 WHERE (((x'' COLLATE RTRIM)<<((((('oൢ*l')OR(x'0ea8')))AND(NULL))))); -- 0ms;
SELECT ALL (((rt0.c0))=((rt0.c0))) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL CAST(((vt1.c0)&(vt1.c0)) AS NUMERIC) FROM vt1, rt0 WHERE (IFNULL(((0.9042143399520849)>(NULL)), (+ (1978158988)))); -- 0ms;
SELECT DISTINCT ((TRIM(rt0.c3)) ISNULL) FROM vt1 WHERE ((((-2.68479036E8)) BETWEEN ((CAST(x'' AS REAL))) AND ((TYPEOF(x'')))));SELECT (('v\r鲽亂팾	IFH')/(('Y' IN ()))), CAST(rt0.c3 COLLATE BINARY AS INTEGER), rt0.c0, ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (CASE WHEN 0.9279688001002968 THEN rt0.c1 ELSE rt0.c3 END) AND ((((rt0.c3))<=((rt0.c2))))), ((rt0.c3)IS((NOT (rt0.c3)))) FROM rt0;SELECT DISTINCT (((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((((rt0.c0) IS FALSE)))), (((((rt0.c4, rt0.c1, rt0.c3)) BETWEEN ((vt1.c0, rt0.c4, rt0.c2)) AND (('kLOQ^䃉y<', rt0.c3, rt0.c3)))) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND ((((rt0.c3))>=((rt0.c0))))), CAST('' AS BLOB), ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c3))) BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))), x'0373' COLLATE NOCASE FROM vt1;SELECT DISTINCT (((('-371935196')AND(rt0.c2))) NOT BETWEEN (vt1.c0) AND (CASE WHEN x'8273' THEN rt0.c1 ELSE vt1.c0 END)) FROM vt1 LIMIT -1613615661;SELECT DISTINCT (((IFNULL(rt0.c2, 0.6937732966445161)))<=(((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) FROM rt0 WHERE ((- (TYPEOF('931654519')))); -- 0ms;
SELECT CASE (rt0.c1 IN (rt0.c4, rt0.c3))  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE x'da91' END, '932881888', (((((rt0.c3, rt0.c1, vt1.c0))>((rt0.c2, rt0.c0, rt0.c3))))+(((rt0.c2) IS TRUE))) FROM vt1 WHERE (0.133484786228924 COLLATE NOCASE) GROUP BY NULL, ((((((((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c3 END)AND(rt0.c3 COLLATE RTRIM)))OR(((rt0.c4)||(rt0.c3)))))OR(rt0.c1)))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN -847262222 END)), LOWER(DISTINCT CAST(rt0.c4 AS NUMERIC)) HAVING ((rt0.c3) BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)AND(rt0.c2))));SELECT (((- (rt0.c3)))/(TYPEOF(DISTINCT rt0.c2))) FROM vt1 WHERE ((((- ('')))OR(((0.592139330245939) NOT BETWEEN (0x3e0249a4) AND (x'')))));SELECT (((vt1.c0)) BETWEEN ((((((((((((((rt0.c4)OR(0.9519334581469542)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) AND (('-1152030349'))), rt0.c3, CASE (NOT (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((vt1.c0, rt0.c2, vt1.c0)) AND ((rt0.c1, rt0.c2, rt0.c1))) THEN ((rt0.c4)-(vt1.c0)) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c3) IS FALSE) END FROM rt0 WHERE (((((UPPER(0.9357787325804572))OR(x'5c51' COLLATE RTRIM)))AND(TRIM(DISTINCT NULL, 'TAvl)M䃉8'))));SELECT ((rt0.c0)LIKE(rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END COLLATE NOCASE, ((((json_patch(rt0.c1, rt0.c2))OR(vt1.c0 COLLATE RTRIM)))AND(CASE WHEN rt0.c4 THEN rt0.c3 ELSE '288968001' END)) FROM rt0 WHERE (((1.9870505E9 COLLATE RTRIM)-(-1.152030349E9)));SELECT DISTINCT GROUP_CONCAT(LIKELY(rt0.c3)), ((COALESCE(rt0.c0, x'')) NOT BETWEEN (MAX(rt0.c0)) AND (((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c0)))), CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) AS REAL) FROM rt0 ORDER BY '-1540052016' DESC  NULLS LAST; -- 0ms;
SELECT '-1735688183', -371935196, (((vt1.c0))<((NULL))), (((rt0.c4) NOT BETWEEN (0xffffffff9377da53) AND (vt1.c0)) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN 0.709625116127187 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)), NULL FROM vt1, rt0 WHERE (((((((((x'' COLLATE BINARY)AND(CAST(x'' AS INTEGER))))OR(8150240 COLLATE RTRIM)))OR((('7bㆁ')<(-1589134652)))))OR('' COLLATE NOCASE))) LIMIT 494364646 OFFSET -311175000; -- 0ms;
SELECT ALL ((rt0.c3) NOT BETWEEN (((((rt0.c3)OR(rt0.c4)))AND(rt0.c3))) AND (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))) FROM rt0, vt1 WHERE ((((x'', x'78cc', NULL)) NOT BETWEEN (('N 3LNC', 'r랒', '316296907')) AND ((0.8634624537794379, 0.17140392156686501, NULL))) COLLATE NOCASE); -- 0ms;
SELECT ALL ((rt0.c1) NOT BETWEEN (316296907) AND (rt0.c1)) COLLATE NOCASE FROM rt0 WHERE (((('/\rj/eFx' IN ()))*((((0.757899063599501))<=((0xffffffffa86a683a)))))) ORDER BY (~ (rt0.c3 COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT CAST(TOTAL(rt0.c0) AS BLOB), ((((0xacb0395 IN ())))>=((((rt0.c2)/(rt0.c2))))), ((SUM(rt0.c3))<<(NULL)) FROM vt1;SELECT CAST(vt1.c0 COLLATE RTRIM AS REAL) FROM vt1, rt0 WHERE ((((((((((('7Bㆁ')AND(0xffffffffa0683b62)))AND(0.292889597060192)))AND(-407399292)))AND('')))<=(((x'')>=('-545215657'))))) GROUP BY CAST(((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)) AS REAL); -- 1ms;
SELECT ALL (+ (rt0.c4)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0))) IS FALSE) FROM rt0, vt1 LIMIT -1251324286; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS TEXT)) BETWEEN (LOWER(vt1.c0)) AND (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)), SUM(vt1.c0) OVER (), (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))<<(((rt0.c1) NOT NULL))) FROM rt0 WHERE (((NOT (NULL)) IN ((('Q*謕#') BETWEEN (x'') AND ('')), '-4023107', (- (365362423))))) LIMIT -1086292745 OFFSET 1397656343070630464;SELECT (NOT (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END)) FROM rt0 WHERE (((((x'92dd')<<(0.09027685508994876)))-((('') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)&(rt0.c3)))AND((rt0.c4 IN ()))))OR((rt0.c3 IN ()))))AND(TRIM(DISTINCT rt0.c4))))AND(((vt1.c0) ISNULL))) FROM rt0 WHERE (((NULLIF(DISTINCT 0Xffffffff9377da53, x''))=(-1735688183)));SELECT DISTINCT ((((((vt1.c0) ISNULL))OR(AVG(rt0.c1))))OR(((rt0.c0) NOTNULL))) FROM vt1, rt0; -- 0ms;
SELECT ALL ((((((((0X4e0dc488 COLLATE RTRIM)OR(((vt1.c0)IS NOT(vt1.c0)))))AND(rt0.c0)))AND(((rt0.c1) ISNULL))))OR(AVG(rt0.c3))), COUNT(*) OVER (), CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END COLLATE RTRIM, ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END)<=((rt0.c1 IN ()))), 'U~' FROM vt1 WHERE ((((((0.3238889691337845))<>((NULL)))) NOT BETWEEN ((('1472501885') IS TRUE)) AND (('' IN ()))));SELECT DISTINCT (((((rt0.c4)||(rt0.c3))))>=((CASE WHEN rt0.c0 THEN '0.292889597060192' ELSE rt0.c2 END))) FROM rt0 WHERE (0.6064581833400734) GROUP BY (((((((((- (rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(rt0.c1 COLLATE NOCASE)))AND(((vt1.c0)==(vt1.c0)))))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)), UPPER(DISTINCT UNICODE(rt0.c3)), (((rt0.c3)) NOT BETWEEN (((vt1.c0 IN ()))) AND (((rt0.c3 IN ())))) ORDER BY ((((rt0.c0)-(rt0.c0))) NOTNULL)  NULLS LAST;SELECT ((CAST(NULL AS NUMERIC))<=(((rt0.c0)*(rt0.c4)))), ((((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c1)))AND(0.4490273742464591)))OR('-393440046'))) BETWEEN (((rt0.c2) NOTNULL)) AND (TRIM(rt0.c3, rt0.c4))), ((rt0.c4) NOT NULL) COLLATE NOCASE FROM rt0, vt1 WHERE (highlight((((0.9784533793186477, NULL, NULL))>=((0.1984940826742635, NULL, 0.6064581833400734))), 0.0054621323216808015 COLLATE NOCASE, ((x'')LIKE(x'3560')), (+ ('370934269'))));SELECT DISTINCT ((((rt0.c1)|(rt0.c3))) BETWEEN ((((rt0.c1, vt1.c0, rt0.c4)) BETWEEN ((rt0.c0, '-1613615661', rt0.c4)) AND ((vt1.c0, rt0.c3, vt1.c0)))) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) FROM rt0 WHERE (((((((((((x'')AND(0.34361144514531083)))AND(NULL)))OR(NULL)))OR(x''))) NOT BETWEEN (((NULL) IS TRUE)) AND (((NULL) IS TRUE))));SELECT DISTINCT CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE, rt0.c1, CUME_DIST() OVER ( RANGE BETWEEN  CURRENT ROW AND UPPER((+ (rt0.c3))) FOLLOWING) FROM vt1 WHERE ((((x'1c8f', 0.05579098222429646, x'', NULL, '-1696829225')) BETWEEN ((NULL COLLATE BINARY, ((NULL) NOT NULL), CASE WHEN 0.2600877291891641 THEN '0.6064581833400734' ELSE NULL END, ((NULL)&(NULL)), 0.14370346756123242)) AND (((NULL IN ()), '', 365362423 COLLATE BINARY, ((NULL)=(1799820014)), ((1.032420638E9) IS TRUE)))));SELECT DISTINCT (((NULLIF(DISTINCT rt0.c0, rt0.c2), COUNT(*), (NOT (rt0.c1))))=((((((-1289618521)AND(vt1.c0)))OR(rt0.c4)), GROUP_CONCAT(rt0.c0), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((x'')))))) FROM rt0, vt1 WHERE (((UPPER(NULL)) NOT BETWEEN ('') AND (CAST('' AS REAL)))); -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c0, rt0.c0, 0.7710749738754673, rt0.c0, vt1.c0, rt0.c0, rt0.c0))<>((rt0.c2, rt0.c2, rt0.c0, rt0.c4, rt0.c3, rt0.c3, rt0.c4)))) OVER () FROM rt0;SELECT DISTINCT json_valid(vt1.c0 COLLATE RTRIM), COUNT((vt1.c0 IN ())) OVER (), (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c3)OR(rt0.c1))) AND ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, vt1.c0, '')) AND ((rt0.c3, rt0.c0, vt1.c0))))) FROM rt0, vt1 WHERE (((NULL COLLATE RTRIM) IS FALSE)); -- 0ms;
SELECT DISTINCT ((CASE NULL  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END) BETWEEN (((rt0.c1) IS TRUE)) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)), rt0.c1, AVG(((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT '' FROM vt1; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))LIKE(rt0.c1 COLLATE RTRIM)) FROM vt1 GROUP BY ((+ (rt0.c1)) IN ());SELECT DISTINCT CAST(vt1.c0 AS BLOB) COLLATE RTRIM FROM rt0 WHERE ((((NULL IN ('3DeN')))>=((((1249806723)) NOT BETWEEN ((NULL)) AND (('2Z9')))))) ORDER BY ((((NULL)>>(rt0.c1)))>=(CASE WHEN rt0.c3 THEN rt0.c2 END))  NULLS FIRST, ((((rt0.c1) ISNULL)) ISNULL) ASC, ((((rt0.c3)OR('LS}ﭙ5TA[')))OR((rt0.c3 IN (rt0.c4, rt0.c3))));SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT LOWER(DISTINCT json_insert(rt0.c4, rt0.c1, rt0.c3)) FROM rt0, vt1 GROUP BY rt0.c1 HAVING rt0.c0; -- 0ms;
SELECT TOTAL(((((rt0.c2)AND(x'a332')))OR(rt0.c2))) OVER (), (((((((((rt0.c0 IN ()))OR(CAST(vt1.c0 AS INTEGER))))AND(((rt0.c3)||(rt0.c0)))))AND(SUM(rt0.c2))))AND((rt0.c3 IN ()))), (- (ABS(DISTINCT rt0.c4))) FROM vt1 WHERE (((('2141520013')|('0.7580627526405124')) IN (((('QN	''D\rk(\r')) NOT BETWEEN ((NULL)) AND ((x''))))));SELECT ALL ((0.9688601342614528)OR(((rt0.c1) NOTNULL))) FROM rt0 WHERE (((((0Xffffffffd3ecae41)LIKE(0.6626328092556218))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((vt1.c0)<<(rt0.c2))) BETWEEN (rt0.c3) AND (TOTAL(rt0.c1))) FROM rt0;SELECT DISTINCT CASE WHEN 0.4951388109800108 THEN ((rt0.c1)|(rt0.c3)) WHEN (rt0.c2 IN ()) THEN (NOT (rt0.c3)) WHEN (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) THEN TOTAL(rt0.c4) ELSE SUM(rt0.c1) END FROM vt1, rt0 WHERE (((((((((((0x74bfef78) NOT BETWEEN (x'') AND (0.9919137386338374)))AND(((0.24990001992749444)>>(x'2bed')))))OR('-1162631150' COLLATE NOCASE)))AND(x'')))OR((('h(颣]') ISNULL)))); -- 0ms;
SELECT ALL CAST((NOT (rt0.c0)) AS TEXT) FROM rt0 WHERE ((((x'37541c36' COLLATE NOCASE))>((((x'')IS(NULL)))))); -- 0ms;
SELECT ALL CAST(rt0.c4 AS BLOB) COLLATE RTRIM COLLATE BINARY FROM rt0, vt1; -- 0ms;
SELECT ALL LIKE(((rt0.c1)==(rt0.c1)), CASE WHEN -1.696829225E9 THEN rt0.c1 ELSE rt0.c0 END, 'o') FROM vt1;SELECT ALL (((NOT (rt0.c1)))IS NOT((rt0.c1 IN ()))), CAST(rt0.c0 AS NUMERIC), SUM((~ (rt0.c0))) COLLATE RTRIM, ((CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END)-(TOTAL(vt1.c0))), ((((((((((rt0.c2) NOTNULL))OR(((0Xffffffffed981f0f) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))))AND((vt1.c0 IN ()))))AND(rt0.c2 COLLATE BINARY)) FROM rt0 WHERE (((x'')|('N 3LNC')) COLLATE RTRIM) GROUP BY (rt0.c2 COLLATE BINARY IN ()) ORDER BY NULL DESC  NULLS FIRST LIMIT -1900966710 OFFSET -268479036;SELECT DISTINCT TOTAL_CHANGES() FROM vt1 WHERE (((DATETIME(x'', NULL, 'H'))<<('FALSE' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (~ (CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END)) FROM vt1, rt0 WHERE ((((NOT (0xffffffff8eb18cca))) NOT NULL)); -- 0ms;
SELECT DISTINCT rt0.c4 FROM vt1 WHERE ((NULL COLLATE RTRIM IN ()));SELECT DISTINCT ((NULLIF(rt0.c1, rt0.c0)) BETWEEN (((rt0.c0)<<(rt0.c2))) AND (((((rt0.c4)AND(vt1.c0)))OR(rt0.c0)))) FROM rt0 WHERE (((((CAST('U.]v.w ' AS BLOB))OR(((('991059924', 'yLH2>㠭Z}x', ''))>=((0.5885683938656244, 0.27267197068212645, NULL))))))AND((('9 *r2L6J5')-(NULL)))));SELECT (~ (rt0.c4)) FROM rt0, vt1 WHERE ((((+ ('0.34361144514531083')))GLOB((1049088310 IN (0X1d7767e6))))); -- 0ms;
SELECT DISTINCT NULL, rt0.c0, IFNULL((+ (rt0.c1)), ((rt0.c0)|(rt0.c0))) FROM rt0 WHERE ('介^l!%\r^4') ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS BLOB), LIKELIHOOD(DISTINCT ((vt1.c0)/(rt0.c3)), 0.1267513322359246);SELECT DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM FROM rt0, vt1 WHERE (((NULL)<('9t>柦p]')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)>>((rt0.c0 IN ()))), CAST(vt1.c0 COLLATE BINARY AS BLOB), ((MIN(vt1.c0, rt0.c3))+(CASE WHEN rt0.c0 THEN rt0.c4 END)) FROM rt0, vt1; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(rt0.c3 AS REAL)) FROM vt1;SELECT DISTINCT (vt1.c0 IN ()) COLLATE BINARY FROM vt1, rt0 WHERE (((CAST(NULL AS REAL))|(CASE '-130462187'  WHEN NULL THEN 0.7209051706334823 END))); -- 0ms;
SELECT DISTINCT MIN(IFNULL(DISTINCT rt0.c1, rt0.c3)), rt0.c0, (((rt0.c2, rt0.c2, vt1.c0)) BETWEEN ((((vt1.c0)<<(rt0.c4)), ((NULL) IS FALSE), '0.9519334581469542')) AND (((((rt0.c0))>((rt0.c0))), ((rt0.c2)||(rt0.c4)), CAST(rt0.c4 AS BLOB)))) FROM vt1, rt0 WHERE ((((1.834451985E9 IN (NULL))) ISNULL)); -- 0ms;
SELECT rt0.c1, CAST(load_extension(rt0.c2) AS NUMERIC), (~ ((NOT (rt0.c0)))) FROM rt0 LIMIT -1998489147; -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)>=((((rt0.c4, rt0.c3, rt0.c1)) BETWEEN ((rt0.c4, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))))) FROM vt1;SELECT DISTINCT ((MAX(rt0.c1))OR(rt0.c3 COLLATE RTRIM)), COUNT(SQLITE_VERSION()), SUM(((vt1.c0) IS FALSE)) OVER (), rt0.c2, ((rt0.c3 COLLATE NOCASE) NOT NULL) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((rt0.c2 COLLATE RTRIM)>=(rt0.c2)), 1.06588093E9 COLLATE BINARY) OVER ( RANGE  UNBOUNDED PRECEDING), ((rt0.c0 IN (vt1.c0, rt0.c1)) IN (((rt0.c3)AND(rt0.c3)), ((0.9981045017674679)-(vt1.c0)))), ((rt0.c3)<(rt0.c2)) COLLATE NOCASE FROM rt0, vt1 WHERE ((NOT ((- (x''))))) ORDER BY ((RTRIM(rt0.c3)) ISNULL); -- 1ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((TRIM(DISTINCT rt0.c3, rt0.c4))) AND (((((rt0.c4))<>((x'')))))), ((((((((rt0.c0 COLLATE BINARY)AND(((((rt0.c0)OR(rt0.c4)))AND(rt0.c3)))))AND(((rt0.c0)||(vt1.c0)))))AND((NOT (rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))), ((vt1.c0)!=(((rt0.c1)>=(rt0.c1)))), CAST((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) AS NUMERIC), ((((rt0.c1)|(vt1.c0))) NOT NULL) FROM rt0, vt1 WHERE (((NULLIF(DISTINCT NULL, '1577546616')) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(rt0.c4)  WHEN rt0.c1 COLLATE BINARY THEN rt0.c0 WHEN CAST(vt1.c0 AS REAL) THEN (((vt1.c0))!=((rt0.c4))) WHEN (rt0.c0 IN (rt0.c0, rt0.c2, rt0.c1)) THEN COUNT(*) END FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)<=(rt0.c2)))>=(rt0.c0)), (((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(vt1.c0)) IN ()), DATETIME(x'', ((((rt0.c4)AND(rt0.c4)))OR(rt0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END, ((rt0.c0)-(rt0.c4)), (((rt0.c3))<>((rt0.c2)))) FROM rt0 WHERE (((((((NULL, 0.5504488678869189, 0.24990001992749444))<=((x'eca13e21', '0.3238889691337845', 0.4323411056523283)))))<=((((((0.6064581833400734)OR(x'')))OR('{7')))))) GROUP BY ((rt0.c2 COLLATE RTRIM) NOTNULL);SELECT ALL CAST(((rt0.c4)*(rt0.c1)) AS TEXT), vt1.c0, ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (((0Xffffffffbc64cb31) BETWEEN (rt0.c1) AND (rt0.c1))) AND (LENGTH(rt0.c4))) FROM vt1, rt0 WHERE (INSTR(((NULL)/(NULL)), (('991059924')AND(0.2209948063844548)))); -- 0ms;
SELECT ALL ((((rt0.c2 IN ())))>((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))))) FROM rt0, vt1; -- 0ms;
SELECT (((rt0.c3))<((((vt1.c0)/(vt1.c0))))) FROM rt0, vt1; -- 0ms;
SELECT ALL CAST(rt0.c0 COLLATE BINARY AS NUMERIC) FROM vt1;SELECT (((((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))%(((((rt0.c3)AND(rt0.c2)))AND('-1771880392')))), CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS NUMERIC), CASE highlight(vt1.c0, rt0.c1, rt0.c3, vt1.c0)  WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (vt1.c0 IN ()) WHEN 0.728969841257053 THEN ((rt0.c2)IS(vt1.c0)) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN CASE WHEN '-307825617' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN '0.7710749738754673' ELSE rt0.c0 END ELSE json_array_length(vt1.c0) END, TOTAL((NOT (rt0.c4))) OVER (), TOTAL((- (vt1.c0))) FROM vt1 WHERE (x'') LIMIT -1469421510 OFFSET 15250821;SELECT DISTINCT MIN(GROUP_CONCAT(0.2830769907568873)) FROM vt1, rt0;SELECT DISTINCT rt0.c1, (TOTAL(rt0.c0) IN ()), IFNULL((~ (vt1.c0)), (rt0.c2 IN ())) FROM vt1, rt0; -- 0ms;
SELECT ALL (((NOT (NULL)))>(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0, vt1 WHERE (((((('-1251324286', '尫鮊n7Ix3耉H', '', 'H', 0.1207312387398557)) BETWEEN (('311811741', x'', '1123776958', 0xffffffffa147bac4, NULL)) AND ((NULL, x'5e349573', 0.35503352585051673, NULL, 0.49818899056695)))) NOT NULL)) LIMIT 1202378437; -- 0ms;
SELECT (+ ((rt0.c3 IN ()))) FROM vt1 WHERE (((((((((CASE WHEN '-1544947694' THEN 0Xffffffffa0683b62 END)OR(CASE WHEN x'' THEN x'' ELSE '1306614182' END)))OR(((x'')IS(NULL)))))OR(CASE 0.019441789459783143  WHEN 1.5250821E7 THEN '1040337316' END)))OR(CAST(0X1d1eedc8 AS NUMERIC)))); -- 0ms;
SELECT ALL ((((rt0.c1)/(vt1.c0)))<(((vt1.c0) NOTNULL))) FROM vt1;SELECT ALL ((CASE rt0.c3  WHEN vt1.c0 THEN rt0.c2 END)<>(CAST(vt1.c0 AS REAL))) FROM vt1 WHERE (((((((((CASE x''  WHEN NULL THEN 0X5b06d2f5 ELSE '-1325649420' END)AND(('' IN ()))))OR(CAST('-72008396' AS TEXT))))AND(CASE WHEN x'' THEN '0.29530638393763564' END)))OR((x'599f' IN ())))) GROUP BY ((0.45777987212633897)=(((vt1.c0)||(NULL)))), CASE rt0.c4 COLLATE BINARY  WHEN CAST(vt1.c0 AS TEXT) THEN (+ (rt0.c0)) ELSE ((vt1.c0)=(rt0.c0)) END, ((CAST(vt1.c0 AS REAL)) BETWEEN (((x'')<<(rt0.c2))) AND ((- (rt0.c2))));SELECT (((CAST(vt1.c0 AS NUMERIC)))!=((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)))AND(0.7355317936778777)))AND(rt0.c1))))), RANK() OVER (), ((rt0.c4 COLLATE RTRIM) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c4)*(rt0.c4)))) FROM vt1;SELECT DISTINCT (((vt1.c0)%(rt0.c3)) IN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)))), (~ (((rt0.c4) NOTNULL))), CASE (('-1441411055') NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((rt0.c0)*(rt0.c1)) THEN ((vt1.c0)GLOB(rt0.c1)) END, (((rt0.c0) IS FALSE) IN ()), CASE TOTAL(rt0.c2)  WHEN ((rt0.c0) IS TRUE) THEN rt0.c4 COLLATE NOCASE WHEN ((rt0.c3)<<(rt0.c3)) THEN ((rt0.c2)|(vt1.c0)) WHEN (~ (rt0.c1)) THEN (- (rt0.c2)) WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN (rt0.c3 IN (vt1.c0)) WHEN (-1771880392 IN ()) THEN rt0.c2 COLLATE NOCASE END FROM rt0 WHERE ((((('-1') NOT BETWEEN (x'') AND (NULL)))-(NULL)));SELECT DISTINCT (((rt0.c0, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c3))) COLLATE RTRIM FROM rt0, vt1; -- 0ms;
SELECT ((GROUP_CONCAT(vt1.c0)) BETWEEN (rt0.c3) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) FROM vt1 WHERE (((((((x'1e90') ISNULL))OR(CASE NULL  WHEN 0X5b06d2f5 THEN NULL END)))OR((('R|lu&')LIKE('')))));SELECT ALL (((NOT (rt0.c3)))=(rt0.c3)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT MAX(0X61a84d81 COLLATE RTRIM) FROM rt0; -- 0ms;
SELECT ALL 0Xffffffffffffffff FROM vt1 GROUP BY (+ ('I,Pa')) HAVING CAST(((rt0.c3) NOTNULL) AS INTEGER);SELECT ((((((((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c4)))AND(NULL)))AND(((rt0.c3) ISNULL))))OR(CAST(vt1.c0 AS TEXT))))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) FROM vt1 WHERE (NULL);SELECT (CAST(rt0.c2 AS BLOB) IN ()) FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((-1.112819041E9)OR(((x'') BETWEEN ('0.059470188622822606') AND (0.6604193148419273)))))AND(NULL)))OR((('-1441411055') ISNULL))))OR(('	Jo.' IN ()))))AND((((NULL))<((NULL))))))AND(('494364646' IN ())))); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))!=(CASE -1.771880392E9  WHEN rt0.c3 THEN rt0.c3 WHEN x'' THEN x'0e9c' WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c4 END))) OVER (), CASE ((0.6824917733586775) NOTNULL)  WHEN (- (9.14852629E8)) THEN (- (rt0.c0)) WHEN LENGTH(rt0.c0) THEN (rt0.c0 IN (rt0.c2)) WHEN x'' THEN CAST(rt0.c2 AS REAL) ELSE (rt0.c3 IN ()) END, COUNT((NOT (rt0.c0))) OVER ( PARTITION BY UPPER(DISTINCT x'e6dd'), ((((0X5d817151)*(rt0.c0)))!=(((vt1.c0) NOT NULL))) ORDER BY (NOT ((rt0.c4 IN ())))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT AVG((rt0.c4 IN ())) OVER () FROM vt1 WHERE (((CAST(x'6e1b' AS REAL))IS NOT(CASE WHEN 0.9688601342614528 THEN NULL WHEN 0.8937534721210284 THEN 0X1295de9d WHEN 2118521084 THEN NULL END))); -- 0ms;
SELECT '{+,WZy' COLLATE RTRIM FROM vt1, rt0; -- 1ms;
SELECT DISTINCT (((rt0.c1)<=(vt1.c0)) IN (rt0.c0)) FROM rt0, vt1 WHERE (((NULL)>=(-1753228508)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((-514079064, ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((rt0.c4)!=(rt0.c2))))<((((rt0.c2)GLOB('ꀹ 4&')), ((rt0.c4)<('?3eこ^&''')), ((rt0.c1)LIKE(rt0.c0))))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((((((((vt1.c0 COLLATE BINARY)AND(((((((((0.48811788979597326)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c2)))AND(vt1.c0)))))OR(SUM(rt0.c3))))OR(CAST(rt0.c3 AS TEXT))))OR(((rt0.c2)IS(rt0.c3)))), ((-1.251324286E9)GLOB(((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))), ((TRIM(vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c4 END)) FROM rt0, vt1; -- 0ms;
SELECT ALL (- (-4.50424605E8)) COLLATE RTRIM, (((((rt0.c2))<=((vt1.c0))))>>(CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 END)), vt1.c0 FROM vt1, rt0 WHERE (((CAST(-856044584 AS NUMERIC)) BETWEEN ((('341973599') NOTNULL)) AND (x'93dd' COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((x'')<(rt0.c4))) IS FALSE) FROM vt1 WHERE (x'');SELECT DISTINCT MIN(((vt1.c0) IS TRUE)) FROM rt0, vt1 WHERE ((((('0.5504488678869189' IN (9223372036854775807, x''))))<=((((NULL)>(NULL)))))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN (((rt0.c4))>=(('7L^U	''{S'))) WHEN CAST(NULL AS NUMERIC) THEN load_extension(rt0.c2, rt0.c2) WHEN ((rt0.c3)|(rt0.c4)) THEN ((vt1.c0)LIKE(rt0.c1)) END FROM rt0;SELECT ALL (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))))LIKE(UPPER(rt0.c2))) FROM rt0, vt1 WHERE (CASE 0.7372976000191632  WHEN CAST('-309260169' AS BLOB) THEN x'' COLLATE BINARY ELSE (('KLOQ^䃉Y<') NOT BETWEEN (NULL) AND (NULL)) END); -- 0ms;
SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE), highlight((((rt0.c0))<(('0.45777987212633897'))), ((0.47947474589904915) ISNULL), COUNT(rt0.c2), (rt0.c1 IN ())), vt1.c0 FROM rt0;SELECT DISTINCT ((((rt0.c4, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, 0.6129621269471638)) AND ((vt1.c0, vt1.c0, rt0.c4))) IN ()) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)OR(rt0.c4)))OR(0.05579098222429646)))OR(rt0.c0)))OR(''))) BETWEEN (1.834451985E9) AND (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0 WHERE (((CAST('-1044992018' AS INTEGER))>>(((0.7710749738754673) NOT NULL)))); -- 0ms;
SELECT ((((0.3285658111648393) IS FALSE))LIKE(((vt1.c0) NOTNULL))), (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))))>=((CAST(rt0.c1 AS TEXT)))), CASE CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END  WHEN RTRIM(rt0.c1) THEN json_type(rt0.c3) END FROM rt0, vt1 WHERE (CASE WHEN ((x'')+(x'')) THEN (('1059610748')LIKE('')) ELSE x'48e3' END); -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((((((((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)))AND(0.5038336466237594)))OR(rt0.c4))))) FROM rt0;SELECT DISTINCT ((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)) COLLATE RTRIM FROM rt0 WHERE (((CASE NULL  WHEN '-632792497' THEN '1202834722' ELSE NULL END)||(x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END IN ()) FROM rt0, vt1 WHERE (((x'')>=(IFNULL(DISTINCT x'', '-1325649420')))); -- 0ms;
SELECT CASE 1638419841  WHEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)) THEN -83449621 ELSE ((vt1.c0)<=(rt0.c4)) END, ((COUNT(*)) BETWEEN ((rt0.c1 IN ())) AND ('1987050500')), x'fd05' FROM vt1, rt0; -- 1ms;
SELECT DISTINCT 752302926 FROM rt0, vt1; -- 0ms;
SELECT ALL SQLITE_VERSION(), ((((rt0.c4) ISNULL)) NOT NULL), (- ((rt0.c2 IN ()))) FROM vt1, rt0; -- 0ms;
SELECT ((rt0.c4 COLLATE NOCASE)|((~ (vt1.c0)))) FROM rt0 GROUP BY ((rt0.c0 COLLATE NOCASE) IS TRUE) HAVING (((NOT (vt1.c0))) BETWEEN ((rt0.c1 IN (vt1.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END));SELECT ((((((0X766ffc04)OR(rt0.c2)))OR(rt0.c2)))|(((rt0.c2) NOTNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c1))GLOB((((('1385615433')OR(rt0.c1)))OR(rt0.c0)))) FROM rt0 WHERE (((('䪿qdT3' IN ()))>>(ABS(DISTINCT '1590523582')))); -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN x'76ac' ELSE rt0.c2 END)) AND ((((x'')>>(rt0.c4))))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c3))) IS FALSE), LIKELIHOOD((~ (vt1.c0)), 0.47279695463574034), CASE ((x'070a2760') NOTNULL)  WHEN (vt1.c0 IN (rt0.c1)) THEN ((rt0.c3) IS TRUE) ELSE GROUP_CONCAT(rt0.c4) END FROM vt1, rt0 WHERE (CAST(((x'')IS(x'3dca')) AS BLOB)); -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS REAL)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (MIN(rt0.c1))) FROM rt0, vt1 WHERE ((~ (((0.6824917733586775)||(0.3139043798790746))))); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT '-496937895', CAST(rt0.c4 AS INTEGER)) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT (CAST(rt0.c4 AS INTEGER) IN (x'', CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c3))>=((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)LIKE(rt0.c0)) IN (((0xffffffffe88c94d2)<=(rt0.c2)))), (~ (((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((rt0.c2 IN (rt0.c2, rt0.c0)) IN (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) FROM vt1, rt0 WHERE (CAST(x'' AS TEXT)) GROUP BY ((((((rt0.c2)>(rt0.c4)))OR((((rt0.c2))>((rt0.c2))))))OR((((x'9c42e00d'))>((rt0.c3))))); -- 0ms;
SELECT CAST(HEX(vt1.c0) AS BLOB), 0.8672125555678404, ((SUM(rt0.c1)) BETWEEN (((rt0.c4)LIKE(rt0.c0))) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c1)))) FROM vt1, rt0 WHERE ((((NULL)) NOT BETWEEN (((((0.9918787306654991)) NOT BETWEEN ((NULL)) AND (('288968001'))))) AND ((((x'') NOT BETWEEN ('-2032451084') AND (x'')))))); -- 1ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY)%(((rt0.c3) NOTNULL))), ((((rt0.c4) NOT NULL))<<(((rt0.c0) ISNULL))), (((((rt0.c0))>=((rt0.c2)))) NOT NULL) FROM vt1 WHERE (CASE WHEN (- ('v*跹%Q')) THEN ROUND(x'af4f', 0.9818790068587762) ELSE ((x'')/(0.728969841257053)) END);SELECT ALL MAX(((rt0.c1) IS TRUE)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT '' FROM rt0 WHERE (CAST(((0.9075866681786007)GLOB(NULL)) AS REAL)) GROUP BY (- (rt0.c1 COLLATE BINARY)); -- 0ms;
SELECT ALL ((rt0.c2)||(((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((- (rt0.c4))) NOT BETWEEN ((('369390283')%(rt0.c2))) AND (((((((((((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))AND(vt1.c0)))) FROM vt1;SELECT NULL FROM vt1, rt0; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c3 ELSE vt1.c0 END)>=((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))) FROM vt1;SELECT DISTINCT (((rt0.c1)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) AND ((CAST(rt0.c1 AS NUMERIC)))) FROM rt0, vt1 GROUP BY (json_object(rt0.c3, '184780261') IN ()), (((~ (rt0.c0))) NOT BETWEEN (rt0.c4) AND ((rt0.c0 IN (rt0.c2, rt0.c3)))), ((x'') BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c0)%(rt0.c1)))); -- 0ms;
SELECT ((vt1.c0) ISNULL), PERCENT_RANK() OVER (), CASE WHEN ((vt1.c0)==(rt0.c2)) THEN rt0.c1 WHEN ((rt0.c1)<=(rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN (((x'')) NOT BETWEEN (('1095445071')) AND ((rt0.c3))) END, CAST(LIKELIHOOD(DISTINCT rt0.c2, 0.8181653345807699) AS REAL), rt0.c4 FROM vt1, rt0 WHERE (((((((((NULL)OR('][_)u')))AND(0.5125705689205328)))OR(CASE 0.5089364253216434  WHEN x'6278' THEN 0.4111165392324454 END)))OR(IFNULL(DISTINCT -774594571, NULL)))) ORDER BY ((((((((((rt0.c0)*(vt1.c0)))AND(CAST(rt0.c2 AS TEXT))))OR(json_object(rt0.c4, vt1.c0))))AND(LOWER(rt0.c1))))AND(json_valid(rt0.c2))) DESC; -- 0ms;
SELECT DISTINCT ((rt0.c4) ISNULL), CASE WHEN CAST(1628443851 AS NUMERIC) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) WHEN rt0.c2 COLLATE NOCASE THEN highlight(rt0.c3, rt0.c1, rt0.c4, rt0.c0) WHEN ((rt0.c1) IS TRUE) THEN 0.5761399067354018 END, ((((rt0.c1))>=((rt0.c0))) IN (rt0.c4, AVG(rt0.c1))) FROM rt0 WHERE (((CAST('-1047248082' AS INTEGER))LIKE(0.2830769907568873 COLLATE NOCASE)));SELECT (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))), TOTAL(CASE 1799820014  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c0 END) OVER (), NULLIF(((rt0.c2)*(x'')), rt0.c3 COLLATE RTRIM) FROM rt0 ORDER BY CAST((((rt0.c1, rt0.c1, rt0.c0))==((rt0.c3, vt1.c0, vt1.c0))) AS TEXT)  NULLS FIRST;SELECT DISTINCT (((((rt0.c1) NOTNULL)))==(((1.472501885E9 IN ())))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))IS NOT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))), ((CAST(rt0.c4 AS TEXT)) NOT NULL), (('365362423') NOT NULL) FROM rt0 ORDER BY ((((NULL)=(vt1.c0)))+(CASE rt0.c3  WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE vt1.c0 END)) ASC;SELECT ALL CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 END COLLATE BINARY FROM rt0, vt1 WHERE (LIKELY(CASE WHEN 0.9514700760025296 THEN '0.49818899056695' ELSE 'rO' END)); -- 0ms;
SELECT DISTINCT ((MAX(rt0.c4)) NOTNULL) FROM vt1 ORDER BY (((((NOT (rt0.c2)))OR(rt0.c4)))AND(((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)))) LIMIT -116856875 OFFSET 2078768330;SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))GLOB(((rt0.c4)||(rt0.c1)))) FROM vt1, rt0; -- 0ms;
SELECT ALL (((0.6694164518715682 COLLATE NOCASE, COUNT(rt0.c1), vt1.c0))<>((rt0.c0, ((rt0.c0) ISNULL), ((rt0.c2)/(rt0.c4))))), (- (x'ce21315c')), ((((((((((rt0.c4)/(rt0.c1)))AND(rt0.c3 COLLATE BINARY)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((rt0.c4) NOTNULL))))AND(x'52b77b85')) FROM rt0;SELECT '' FROM rt0, vt1 WHERE ((('펯q&K' COLLATE NOCASE)IS(NULL))) GROUP BY CAST((((rt0.c1))=((rt0.c0))) AS INTEGER), IFNULL(DISTINCT rt0.c4, 0.6004939437120056) COLLATE BINARY, 0.3139043798790746; -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS TRUE))>>(((rt0.c3)>(rt0.c1)))) FROM rt0 WHERE ((- (1065880930 COLLATE NOCASE))); -- 0ms;
SELECT ((NULLIF(vt1.c0, vt1.c0)) IS TRUE) FROM rt0 WHERE (LENGTH(((NULL) NOT NULL)));SELECT (((((rt0.c3)OR(NULL)))AND(rt0.c1)) IN (MIN(rt0.c3))) FROM vt1 INNER JOIN rt0 ON (((((rt0.c2, vt1.c0, 0.9010320087019421))>=((rt0.c1, rt0.c1, vt1.c0))))%(rt0.c4 COLLATE BINARY)); -- 0ms;
SELECT ((rt0.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)-(rt0.c0))) AND ((+ (rt0.c1)))), ((AVG(vt1.c0))<=((rt0.c1 IN (rt0.c3)))), (((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c3)) IN ()) FROM vt1, rt0; -- 0ms;
SELECT (NOT (0Xffffffff8faad7b3)) FROM vt1, rt0; -- 0ms;
SELECT (((rt0.c4)) BETWEEN (('6wj%O')) AND ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()) COLLATE BINARY, ((((((((CAST(rt0.c3 AS TEXT))AND((((rt0.c2))!=((vt1.c0))))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))OR(rt0.c0 COLLATE NOCASE)))OR((rt0.c2 IN (vt1.c0, rt0.c1)))), (+ (x'9069')) FROM rt0, vt1 WHERE ((+ (('' IN ())))) LIMIT 807405824 OFFSET -2067535065; -- 0ms;
SELECT ALL CAST(((rt0.c4)+(rt0.c2)) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((('')AND(rt0.c4)))AND(x'64bf')))AND(CAST(rt0.c0 AS TEXT))))OR((((vt1.c0))<=((rt0.c1))))) FROM rt0, vt1 WHERE (((((0.9111987644156109) IS TRUE)) NOT NULL)) ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT ((COALESCE(DISTINCT rt0.c4, vt1.c0, '?P4(B853', rt0.c2))&('1249806723')) FROM rt0, vt1 WHERE (((- ('-1152030349')) IN ())); -- 0ms;
SELECT DISTINCT SUM(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) OVER (), ((CAST(rt0.c1 AS TEXT)) ISNULL), COUNT((+ (rt0.c1))) FILTER(WHERE CASE ((rt0.c4)AND(rt0.c0))  WHEN LIKELY(DISTINCT rt0.c4) THEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))AND('1202378437')) WHEN ((rt0.c4)OR(NULL)) THEN CAST(vt1.c0 AS TEXT) WHEN (rt0.c4 IN ()) THEN ((rt0.c4)/(vt1.c0)) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)) WHEN ((((((((0.1433300470666844)AND(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c2)) THEN ((((((((rt0.c3)AND(NULL)))OR(rt0.c3)))AND(rt0.c2)))AND(vt1.c0)) END) OVER () FROM rt0, vt1 WHERE ((((NULL) ISNULL) IN ())); -- 0ms;
SELECT SUM(CAST(rt0.c2 AS REAL)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt1 NOT INDEXED WHERE ((((((((((x'a418' IN ()))AND(((NULL) NOT NULL))))AND((('-1323300064') NOT BETWEEN (0.8634624537794379) AND (NULL)))))OR(NULL)))AND(CASE x'9b40'  WHEN x'' THEN 'O쒈{B0yS' WHEN 'w雨r3' THEN '1040337316' WHEN NULL THEN NULL ELSE 0.11935395111839608 END)));SELECT RANK() OVER () FROM vt1, rt0 WHERE (((NULL)=(0.7918775343814317)) COLLATE BINARY) LIMIT 500999080 OFFSET -1814995925; -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))/(rt0.c4)), (((rt0.c4 IN ()))IS NOT((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))), GROUP_CONCAT(NULL) OVER () FROM vt1;SELECT ((((rt0.c2)>(rt0.c1)))<(CAST(rt0.c4 AS NUMERIC))) FROM rt0 WHERE (CAST(CASE WHEN '1309525128' THEN '' END AS INTEGER)) ORDER BY ((rt0.c4) NOT BETWEEN ((- (rt0.c1))) AND ((rt0.c3 IN (rt0.c1)))) DESC, LAST_INSERT_ROWID(); -- 0ms;
SELECT ALL ((TRIM(DISTINCT rt0.c2, rt0.c2))<((rt0.c2 IN ()))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), AVG((- (NULL))), FIRST_VALUE(((rt0.c1 COLLATE RTRIM) ISNULL)) OVER () FROM rt0 WHERE (((~ ('fsX紞랒A4Ԧ/')) IN ())) LIMIT 488566216 OFFSET -1771880392; -- 0ms;
SELECT ALL x'085d' FROM rt0 WHERE ((((('u' IN ()), x'', 0x2d7f0fb1 COLLATE BINARY))<(((- (x'')), (('5*')>=(0Xffffffffffffffff)), CASE WHEN NULL THEN NULL ELSE '' END)))); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM)=(0.9376154495749751 COLLATE NOCASE)) FROM vt1, rt0 WHERE ((- (((0.7700471563107345)LIKE(0.38028116112337884))))) ORDER BY CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)) THEN rt0.c2 WHEN (rt0.c4 IN ()) THEN (rt0.c0 IN ()) WHEN ((rt0.c0) NOT NULL) THEN (x'1241' IN ()) END, CASE 0.07336174620314762  WHEN (rt0.c2 IN ()) THEN (~ (x'')) END; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c4)<<(rt0.c3))) FROM vt1, rt0 WHERE (CAST(('' IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT CASE (+ (rt0.c4))  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((rt0.c2)IS NOT(rt0.c4)) END, TRIM(COUNT(rt0.c3), ((rt0.c1) ISNULL)), CAST((+ (rt0.c1)) AS REAL) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (- (CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END)) FROM vt1, rt0 WHERE (((((0Xffffffffe9d4b824)>=(x'')))OR(ROUND('-1900966710', 1095779283)))); -- 0ms;
SELECT (((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((((rt0.c2)<(rt0.c4)), ((rt0.c1)AND(rt0.c4)), ((rt0.c3)%(rt0.c2)))) AND ((((rt0.c0)>>(rt0.c0)), ((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)), ((vt1.c0)IS NOT(rt0.c4))))) FROM vt1, rt0 WHERE (((((((0.25677883480878383) BETWEEN (NULL) AND ('-1152030349')))AND(CASE NULL  WHEN 0.7177160496007974 THEN 'pu8 B.#Vh' END)))OR(CAST(x'' AS BLOB)))); -- 0ms;
SELECT ALL AVG(LIKELY(DISTINCT rt0.c4)) OVER () FROM vt1, rt0; -- 0ms;
SELECT ALL (((vt1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) IN (UPPER(DISTINCT rt0.c3))), LAG(CASE WHEN (((rt0.c0))<=((rt0.c3))) THEN (((NULL))<=((rt0.c1))) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))) END, (((rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c4)) BETWEEN ((((rt0.c4)!=(rt0.c4)), CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END, NULL, ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2)), PRINTF(rt0.c2))) AND ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END, ((rt0.c2) IS FALSE), (('ZtBV2u2啚5')IS NOT('')), ((x'') BETWEEN (rt0.c4) AND (rt0.c4)), (~ (rt0.c2))))), (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((json_array_length(rt0.c3, rt0.c0))))) OVER ( ORDER BY ((((CAST(rt0.c0 AS REAL))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(x''))  NULLS FIRST, CASE WHEN (((rt0.c2, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c3, NULL, vt1.c0))) THEN ((rt0.c2)||(rt0.c1)) ELSE rt0.c0 COLLATE NOCASE END), CASE WHEN ((rt0.c4)=(rt0.c3)) THEN ((-832588104) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END FROM rt0 GROUP BY CASE CASE rt0.c3  WHEN 0.2741117801653402 THEN rt0.c3 END  WHEN rt0.c4 THEN (NOT (rt0.c2)) END HAVING ((((rt0.c0) NOT NULL)) NOT NULL);SELECT SUM((((rt0.c3, rt0.c0, vt1.c0, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0, rt0.c4, rt0.c2)) AND ((vt1.c0, rt0.c0, rt0.c4, 0X38a59203, rt0.c1)))) OVER (), 0.9257161952743818, ((((1501993677)*(rt0.c0))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (MIN(rt0.c4))) FROM vt1, rt0 LIMIT -782267788 OFFSET 1638419841; -- 1ms;
SELECT LAG((((vt1.c0))<=(((- (vt1.c0))))), (((('^')<<(vt1.c0))) NOT NULL), (- (((-968861719) NOT NULL)))) OVER (), (((rt0.c2 IN ()))<(CAST('-1178611369' AS REAL))), DENSE_RANK() OVER () FROM vt1; -- 0ms;
SELECT TOTAL(((vt1.c0)IS(vt1.c0))) FROM vt1, rt0 WHERE ((- ('1209647387' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (NOT (((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c0)))AND(rt0.c4)))AND(vt1.c0)))) FROM rt0 WHERE ((NOT (-1.16263115E9 COLLATE NOCASE))) ORDER BY (+ (rt0.c1 COLLATE BINARY));SELECT DISTINCT (rt0.c0 COLLATE NOCASE IN ()) FROM vt1, rt0; -- 0ms;
SELECT (NOT (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0, vt1; -- 0ms;
SELECT CAST(GROUP_CONCAT(0.25822652011146474) AS REAL), (((rt0.c1 IN (rt0.c2))) IS FALSE), (NOT (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0 ORDER BY (((- (rt0.c0))) NOTNULL) ASC; -- 0ms;
SELECT DISTINCT (~ (((rt0.c2) IS TRUE))) FROM vt1, rt0 WHERE ((((((((((((((((0.25822652011146474)AND(0.009350039755341877)))AND(x'')))AND(x'1f28')))AND(NULL)))OR(x'')))OR(NULL))))<=(((+ (x'')))))); -- 0ms;
SELECT DISTINCT TOTAL((rt0.c0 IN (rt0.c0)) COLLATE NOCASE) OVER (), (('181076885' COLLATE NOCASE) BETWEEN ((((rt0.c4))<=((rt0.c0)))) AND (((((rt0.c2)AND(rt0.c4)))AND(vt1.c0)))), SUM((rt0.c2 IN (rt0.c4))) OVER () FROM vt1 ORDER BY rt0.c2 DESC  NULLS LAST;SELECT CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB), (((((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)), COUNT(*), CAST(rt0.c2 AS NUMERIC), (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), rt0.c1))<=((((rt0.c1)+(rt0.c0)), CASE vt1.c0  WHEN rt0.c4 THEN -2.110678877E9 END, CAST(rt0.c1 AS INTEGER), TYPEOF(vt1.c0), (((rt0.c0, rt0.c0, vt1.c0))<((rt0.c1, vt1.c0, rt0.c3)))))), CASE WHEN CAST(vt1.c0 AS INTEGER) THEN NULL END FROM rt0 WHERE (-2075934253);SELECT DISTINCT ((UPPER(DISTINCT rt0.c1)) IS FALSE) FROM rt0 WHERE (((((0x764a9357)OR(x'')))OR(0Xffffffffc982b2f7)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((vt1.c0))) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)) WHEN rt0.c2 THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0) ISNULL) THEN ((rt0.c0)<<(rt0.c3)) ELSE (vt1.c0 IN (rt0.c4, rt0.c0)) END FROM vt1, rt0 WHERE ((((0X5950de12)) NOT BETWEEN (((('0.9042143399520849') IS TRUE))) AND ((((((((((x'')AND('0!8sN')))AND(1527173877)))AND(0.22843299776315107)))AND('YqB\-zozd')))))); -- 0ms;
SELECT DISTINCT (((~ (rt0.c2)))<=((rt0.c4 IN ()))) FROM rt0 LIMIT 931654519 OFFSET 1415065286; -- 0ms;
SELECT ALL (((vt1.c0 IN (vt1.c0)))||(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))) FROM rt0;SELECT DISTINCT ((TIME(vt1.c0, rt0.c2, x''))IS NOT((~ (rt0.c0)))) FROM rt0 GROUP BY ((rt0.c3) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE RTRIM HAVING ((rt0.c1) BETWEEN (((((rt0.c0)AND(vt1.c0)))OR(''))) AND (((rt0.c3) BETWEEN ('1501993677') AND (vt1.c0))));SELECT ALL (- (COUNT(rt0.c1))), (('258510609') BETWEEN (((-1.820861869E9) BETWEEN (rt0.c4) AND (rt0.c2))) AND (((x'ca4a') IS FALSE))), (((rt0.c4)|('-582276220')) IN ()) FROM vt1, rt0 GROUP BY JULIANDAY(IFNULL(DISTINCT rt0.c0, rt0.c1), UNLIKELY(DISTINCT rt0.c1), (((rt0.c4, rt0.c0, rt0.c0))>=((x'', rt0.c0, rt0.c1)))), (- (rt0.c3 COLLATE RTRIM)), CASE WHEN ((rt0.c1) IS FALSE) THEN CAST(rt0.c3 AS INTEGER) ELSE rt0.c4 END, NULL, CASE WHEN rt0.c3 COLLATE RTRIM THEN (('1638419841')LIKE(rt0.c4)) ELSE UNLIKELY(DISTINCT rt0.c3) END; -- 0ms;
SELECT vt1.c0, ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c3))) NOT BETWEEN (PRINTF(rt0.c0)) AND (TOTAL(rt0.c0))), CASE ((rt0.c2) IS FALSE)  WHEN (rt0.c4 IN ()) THEN (NOT (rt0.c0)) ELSE SUM(rt0.c3) END FROM rt0, vt1 GROUP BY ((((rt0.c4)<>(rt0.c1)))<('')); -- 0ms;
SELECT ALL SUM(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT rt0.c4 COLLATE NOCASE FROM vt1 ORDER BY (- ((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((0x13657909f6cbe240)))))  NULLS LAST;SELECT json(((((rt0.c2)OR(rt0.c3)))AND(rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((NULLIF(DISTINCT x'', rt0.c4))) AND ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c0))))) FROM rt0;SELECT DISTINCT ((((rt0.c0)*(rt0.c4)))!=((((vt1.c0)) BETWEEN ((rt0.c1)) AND (('1204376886'))))) FROM rt0 GROUP BY CASE (('')=(NULL))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN ((rt0.c4)IS(rt0.c4)) END HAVING ((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END)AND((vt1.c0 IN ()))))OR((rt0.c2 IN ())));SELECT DISTINCT (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN ()), ((('')) BETWEEN ((TOTAL(0.49818899056695))) AND ((CASE WHEN rt0.c4 THEN rt0.c2 END))), ((((rt0.c0) NOTNULL)) ISNULL) FROM vt1 WHERE (((((-561433215) ISNULL))LIKE(((((((((x'4a05')AND(0.45697343129642276)))OR(0.9218034392453)))AND(NULL)))OR(0.6443506290374228)))));SELECT LAST_VALUE(((COALESCE(rt0.c0, '', rt0.c3, rt0.c4))&(rt0.c0 COLLATE BINARY))) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((vt1.c0)-(rt0.c2)) COLLATE BINARY, '1854461483', (((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0)) AND ((vt1.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0)))) BETWEEN (((rt0.c4)IS(rt0.c4))) AND (rt0.c4)) FROM rt0 WHERE (((('')) BETWEEN (('0.9257161952743818')) AND ((CASE 0xffffffffc513ed1e  WHEN NULL THEN x'' END))));SELECT DISTINCT (((rt0.c4 IN (rt0.c0))) IS FALSE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT RANK() OVER (), NTH_VALUE(((((rt0.c1)GLOB(rt0.c3)))IS(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END)), ((- (vt1.c0)) IN (SQLITE_VERSION()))) OVER (), LAST_INSERT_ROWID() FROM vt1, rt0 WHERE (((ABS('-1540052016'))GLOB(CAST('-1172854819' AS INTEGER)))); -- 0ms;
SELECT ALL x'' FROM vt1 WHERE ((((-72008396)<('\y')) IN ())); -- 0ms;
SELECT ALL ((((rt0.c0)AND(NULL))) IS FALSE), x'e284' COLLATE NOCASE, (CAST('288968001' AS NUMERIC) IN (COALESCE(rt0.c4, rt0.c4), rt0.c2 COLLATE NOCASE)) FROM vt1;SELECT DISTINCT NULLIF(((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)), ((rt0.c2)<(rt0.c2))) FROM rt0 WHERE (((0X646aa3bb)-('1799820014')) COLLATE BINARY) GROUP BY ((((rt0.c2)LIKE(rt0.c3)))|((((vt1.c0, rt0.c2, vt1.c0))>((rt0.c4, rt0.c4, rt0.c1))))), ((((rt0.c0)||(vt1.c0))) NOT BETWEEN (((rt0.c3)<=(rt0.c3))) AND ((- (rt0.c4)))), LIKELY(((((rt0.c2)OR(vt1.c0)))OR(rt0.c4)));SELECT ALL NTH_VALUE(((((rt0.c0 COLLATE BINARY)AND(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN x'' THEN rt0.c4 ELSE 'We_|.fO' END)))OR((- (vt1.c0)))), ((CAST(vt1.c0 AS INTEGER)) IS FALSE)) OVER ( ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN (1.900479625E9 IN ()) THEN ((rt0.c2)*(rt0.c4)) WHEN ((0.24990001992749444) BETWEEN (rt0.c2) AND (rt0.c3)) THEN LIKELIHOOD(rt0.c1, 0.8072621113060683) WHEN (rt0.c3 IN ()) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((rt0.c1)>(rt0.c2)) END ASC  NULLS LAST, (((('') IS FALSE))==(rt0.c4))) FROM vt1, rt0 ORDER BY rt0.c0 ASC  NULLS LAST; -- 0ms;
SELECT ALL rt0.c2, rt0.c1 COLLATE NOCASE, LIKE(rt0.c4, LIKELIHOOD(vt1.c0, 0.3365032682660698), '5'), CASE WHEN (- (rt0.c1)) THEN (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN rt0.c1 THEN CAST(rt0.c0 AS BLOB) WHEN NULL THEN (rt0.c1 IN (rt0.c4, rt0.c1)) WHEN (((rt0.c0, 0.5434858428370143, vt1.c0))!=((rt0.c2, rt0.c0, rt0.c2))) THEN (((rt0.c3, rt0.c4, rt0.c2)) BETWEEN ((rt0.c1, vt1.c0, rt0.c1)) AND ((rt0.c4, rt0.c3, rt0.c1))) WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (vt1.c0)) THEN CAST(rt0.c3 AS BLOB) ELSE SUM(rt0.c1) END, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))&((NOT (NULL)))) FROM rt0 LIMIT 2093337173;SELECT ALL '', vt1.c0, NULL FROM rt0 WHERE (0.8527882555098929);SELECT DISTINCT ((CASE WHEN x'' THEN rt0.c2 ELSE vt1.c0 END) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))), (((vt1.c0, vt1.c0, rt0.c0)) BETWEEN ((TRIM(rt0.c2, rt0.c2), CAST(rt0.c4 AS BLOB), rt0.c3 COLLATE BINARY)) AND ((((vt1.c0)/(vt1.c0)), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c2)), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt1.c0)))))), ((rt0.c1) IS FALSE) COLLATE BINARY FROM vt1 WHERE ((((NOT (x'e2ec'))) ISNULL));SELECT DISTINCT TRIM(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)), rt0.c3 COLLATE NOCASE) FROM rt0 WHERE (((x'8138') IS TRUE)); -- 0ms;
SELECT DISTINCT UNLIKELY(CAST(x'' AS REAL)) FROM rt0 ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4))  WHEN rt0.c3 THEN rt0.c1 COLLATE BINARY END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM((((rt0.c4, vt1.c0, rt0.c0)) NOT BETWEEN ((x'', rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c0)))), ((((((rt0.c4)) NOT BETWEEN (('g')) AND ((rt0.c0))), CAST(rt0.c3 AS REAL), (rt0.c0 IN ())))<(((rt0.c3 IN ()), rt0.c4 COLLATE NOCASE, ((vt1.c0)<=(vt1.c0))))), FIRST_VALUE((rt0.c3 IN (((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)), (~ (rt0.c1))))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING) FROM rt0 WHERE (((((-1.735688183E9)AND(NULL)))OR(0.3908766643858027))) ORDER BY ((((vt1.c0)<=(rt0.c0)))LIKE(((rt0.c1)>('uI'))));SELECT ALL (~ (NULL)) FROM rt0 WHERE (CASE WHEN ((NULL)>(0.26678480591606024)) THEN CASE NULL  WHEN 0.709427520893259 THEN x'' ELSE 'U>0' END END) LIMIT -228580614; -- 0ms;
SELECT CASE IFNULL(DISTINCT rt0.c1, rt0.c2)  WHEN LOWER(NULL) THEN ((rt0.c2)=(vt1.c0)) WHEN CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c2 END THEN (((vt1.c0))>((rt0.c4))) WHEN rt0.c1 THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) END, SUM('0.7700471563107345') OVER (), ((LIKELIHOOD(DISTINCT rt0.c0, 0.15342354207055764))*(((rt0.c4)LIKE(rt0.c3)))) FROM vt1, rt0 WHERE ((((NULL)) BETWEEN (((('181076885')!=(x'')))) AND (((NOT ('316296907')))))); -- 0ms;
SELECT ALL TOTAL(((rt0.c0) NOT NULL)) OVER () FROM vt1 WHERE (((UNLIKELY(0.7338112742024059)) NOT BETWEEN (('-B^ZRxUCv' IN ())) AND ((((0.5343602452961973))==((0.48811788979597326))))));SELECT DISTINCT CAST(0Xffffffffa0683b62 AS INTEGER) FROM vt1; -- 0ms;
SELECT ALL ((COUNT(*))==(rt0.c2)), COUNT(*) FILTER(WHERE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END COLLATE NOCASE) OVER ( ORDER BY (NOT (IFNULL(DISTINCT vt1.c0, rt0.c1))), rt0.c3), (((HEX(rt0.c4)))>((((rt0.c4) BETWEEN (rt0.c3) AND (''))))), ((((rt0.c4)OR((((rt0.c4))<>((rt0.c2))))))OR(((rt0.c4)AND(rt0.c0)))), (rt0.c4 IN ()) COLLATE RTRIM FROM vt1;SELECT DISTINCT ((((rt0.c2)AND(CAST(rt0.c2 AS NUMERIC))))AND(CAST(vt1.c0 AS REAL))), ((COUNT(rt0.c4))&(COALESCE(DISTINCT x'221a', x'', vt1.c0, rt0.c0))), ((('719746949', GROUP_CONCAT(rt0.c2), (rt0.c4 IN ())))<=((x'', ((vt1.c0) IS TRUE), ((rt0.c4) NOT BETWEEN ('') AND (vt1.c0))))) FROM rt0;SELECT ((CAST(rt0.c3 AS INTEGER))>>(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END)), ((((NOT (rt0.c4))))=((((((((((rt0.c2)AND(x'd71c')))OR(rt0.c4)))AND(vt1.c0)))AND(vt1.c0))))), ((((((((((((((vt1.c0)%(rt0.c4)))AND(((((((((vt1.c0)OR(rt0.c3)))OR(0X44b409be)))OR(rt0.c4)))AND(rt0.c2)))))AND(((vt1.c0) IS FALSE))))OR(((rt0.c3) NOTNULL))))AND((((vt1.c0))=((rt0.c4))))))AND(TIME(rt0.c3, rt0.c1, rt0.c3, rt0.c0, rt0.c3))))AND(rt0.c2)) FROM rt0, vt1 WHERE (((((0X50e6533)<('')))IS NOT((('') IS TRUE)))); -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c4 AS BLOB)  WHEN (('0.5504488678869189')OR(rt0.c4)) THEN CASE rt0.c3  WHEN vt1.c0 THEN '	uQ3' END WHEN vt1.c0 THEN (~ (vt1.c0)) WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) THEN rt0.c4 END FROM vt1;SELECT ALL ((MIN('0.6694164518715682')) BETWEEN (CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END) AND (((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((NULL IN ()))GLOB(vt1.c0)) FROM rt0 GROUP BY ((NOT (rt0.c1)) IN (CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 END));SELECT DISTINCT ((((rt0.c4) NOT NULL))>>(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) FROM rt0, vt1 WHERE ((((((((((((0X672b1ca6)) NOT BETWEEN ((x'd5a6')) AND ((''))))OR((((('181076885')AND('18')))AND('^8')))))OR((0.9834786031353089 IN (1983250003)))))OR(ABS(DISTINCT '-1425316112'))))OR((+ (x''))))); -- 0ms;
SELECT DISTINCT CAST(vt1.c0 AS REAL) COLLATE BINARY FROM rt0 WHERE (((((0Xffffffffdf5941d5)=(x'65e4'))) IS TRUE)) GROUP BY ((vt1.c0)<=(json(rt0.c2))) HAVING ((rt0.c2)GLOB(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))));SELECT (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) IS FALSE) FROM vt1 WHERE (((0.2830769907568873)>=('i#mb棱')) COLLATE RTRIM);SELECT DISTINCT (+ ((rt0.c3 IN ()))), ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c2)LIKE(0.5761399067354018))) AND ('耉z?2O~ ' COLLATE RTRIM)), CASE IFNULL(rt0.c3, rt0.c2)  WHEN 133705031 THEN COUNT(*) WHEN (- (rt0.c0)) THEN CAST(0x2bfd6ab3 AS INTEGER) WHEN ((rt0.c3) IS FALSE) THEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) END, CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT), ((rt0.c4) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c2)))AND(0.1713185997254607)))OR(rt0.c2)))AND(rt0.c0))) AND (((rt0.c3)<(rt0.c3)))) FROM vt1, rt0 WHERE ((((- (0.9926849666206341))) ISNULL)) ORDER BY (((rt0.c4)) BETWEEN ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN x'' THEN '-1289618521' ELSE rt0.c0 END)) AND (((((NULL, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c0, rt0.c4)))))) ASC, ((0Xffffffffd3ecae41) BETWEEN ((((vt1.c0))>((rt0.c2)))) AND (rt0.c0 COLLATE RTRIM)) ASC; -- 0ms;
SELECT DISTINCT rt0.c4 FROM vt1 NOT INDEXED WHERE ((CAST('149544844' AS TEXT) IN ()));SELECT ALL COUNT(*) OVER () FROM vt1 WHERE (((((('-309260169', 0xffffffffeabd75b5, 0.31910505973350833)) NOT BETWEEN (('蠜fmD{*4F*', '-1289618521', '-439479961')) AND (('-46527066', '', NULL))))/((((((((('')AND('-1452542569')))AND(x'faad')))OR(NULL)))AND('3vgዮ6!몟'))))); -- 0ms;
SELECT DISTINCT ((rt0.c1)IS NOT(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)))) FROM rt0;SELECT ALL (+ (CAST(rt0.c2 AS REAL))) FROM rt0 WHERE (((0x61a84d81 COLLATE BINARY)/(0.23562603328876042 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ('1620309297'); -- 0ms;
SELECT (((((rt0.c4)/(rt0.c4))))<=((0Xffffffff93d15c2b))) FROM vt1, rt0 WHERE ((- (0.24351156809014296 COLLATE NOCASE))); -- 0ms;
SELECT TOTAL(((0.41860428999336186)/(rt0.c1))) OVER ( ORDER BY (((0.5489008092149176, rt0.c3, (rt0.c4 IN ())))>((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END, rt0.c4, rt0.c0)))), (((- (rt0.c0)))>=(((rt0.c1) NOTNULL))), CAST(LOWER(DISTINCT rt0.c1) AS REAL) FROM vt1, rt0 WHERE (CAST(NULL AS INTEGER)) LIMIT -1289618521 OFFSET -816707555; -- 0ms;
SELECT rt0.c4, (~ ((NOT (rt0.c0)))), (NOT (((rt0.c1)>(rt0.c4)))) FROM vt1, rt0 WHERE (((CAST('2037043443' AS REAL))IS NOT(((x'386e') IS FALSE)))); -- 0ms;
SELECT SUM(json_object(vt1.c0, rt0.c0, NULL, rt0.c1)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((((~ ('0.292889597060192')))>((((x''))<>(('')))))); -- 0ms;
SELECT MIN(rt0.c3), ((COUNT(rt0.c0))||(((('-1071343896')) BETWEEN ((rt0.c3)) AND ((rt0.c2))))), ((((((((rt0.c3)AND(-415057120)))OR(NULL)))OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM FROM rt0 WHERE (0.6849429327042689) GROUP BY LOWER(DISTINCT ((rt0.c1) IS FALSE)) HAVING rt0.c0; -- 0ms;
SELECT ALL (NOT ((((vt1.c0))>=((rt0.c1))))), rt0.c4, NULLIF(DISTINCT (rt0.c1 IN (rt0.c0)), CAST(vt1.c0 AS REAL)) FROM vt1, rt0 GROUP BY CAST(CASE WHEN rt0.c3 THEN rt0.c3 END AS NUMERIC); -- 0ms;
SELECT ((rt0.c0)+(rt0.c2 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt1, rt0; -- 0ms;
SELECT ALL ((((rt0.c4)<=(vt1.c0))) IS FALSE), ((((((((((((((rt0.c3)|(rt0.c2)))OR(((vt1.c0) IS TRUE))))AND(UNLIKELY(DISTINCT rt0.c3))))OR(rt0.c4 COLLATE NOCASE)))AND(((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))))OR(rt0.c2 COLLATE RTRIM)))OR((~ (rt0.c0)))), rt0.c4, TOTAL(((rt0.c3)IS NOT(rt0.c2))), (((((((rt0.c3, rt0.c3, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c2)) AND ((rt0.c4, rt0.c0, rt0.c1))))AND((rt0.c2 IN ()))))OR(vt1.c0 COLLATE BINARY)) FROM vt1 WHERE ((+ (0.5640702320869305 COLLATE RTRIM))) GROUP BY rt0.c4 HAVING CAST((((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))) AS NUMERIC);SELECT DISTINCT (IFNULL(vt1.c0, rt0.c2) IN ()), '2014490063', ((((rt0.c2)/(vt1.c0))) NOT BETWEEN (((vt1.c0)||(rt0.c1))) AND (vt1.c0 COLLATE NOCASE)) FROM rt0 WHERE (CASE WHEN CASE WHEN NULL THEN 0Xffffffffe3e98f6a ELSE 0.4143416491519092 END THEN ((((((((0.4932631152313307)AND(NULL)))AND(0.9636285786298225)))OR('ݏ^u')))OR(x'')) WHEN (~ (0xd3549ba)) THEN (0.158147052148627 IN (0.3517036836352102, '][_)u')) WHEN ((0.7700471563107345)/(x'')) THEN CAST('' AS REAL) ELSE ((NULL) IS TRUE) END);SELECT DISTINCT LEAD(rt0.c4, CASE (- (vt1.c0))  WHEN (- (vt1.c0)) THEN CAST(rt0.c1 AS REAL) ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END, CASE WHEN ('-1071480754' IN (rt0.c4, rt0.c3)) THEN CAST(rt0.c4 AS NUMERIC) END) OVER () FROM rt0, vt1 WHERE ((((((x'')) NOT BETWEEN ((2.88968001E8)) AND ((0.11084652965810593)))) NOT BETWEEN ((((x'1b22'))>((x'')))) AND (((-7.39463615E8) IS TRUE)))) GROUP BY (+ ((- (NULL)))); -- 1ms;
SELECT ((((+ (rt0.c0))))>=((((-1798416268) BETWEEN (rt0.c1) AND (0.24998281541146783))))) FROM vt1 WHERE ((((((NULL)OR(-1471568452)))AND('-1771880392')) IN ()));SELECT (NULL IN (CASE WHEN 0.4434619672417386 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 END)) FROM vt1 WHERE ((((((('-877712819') ISNULL))AND(NULL COLLATE BINARY)))OR(1.090780244E9)));SELECT DISTINCT '-1152030349' FROM vt1, rt0 WHERE (NULL); -- 0ms;
SELECT ALL AVG(CAST(rt0.c1 AS BLOB)) OVER () FROM rt0; -- 0ms;
SELECT ((((rt0.c4 COLLATE NOCASE)OR('')))OR(((rt0.c4)>=(rt0.c2)))), COUNT(*), rt0.c1 FROM vt1, rt0 WHERE ((NOT (((0x416bc6bc) NOT BETWEEN ('110289507') AND (''))))); -- 0ms;
SELECT DISTINCT ROUND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)), AVG(rt0.c2)) FROM vt1, rt0 WHERE (((((('0.0054621323216808015')) NOT BETWEEN ((-1.112819041E9)) AND ((-1.251324286E9)))) IS FALSE)); -- 0ms;
SELECT ALL (((0Xffffffffd652d48c, rt0.c3, rt0.c0, rt0.c3, 1147391698)) BETWEEN ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), COUNT(rt0.c2), CAST(rt0.c4 AS TEXT), HEX(rt0.c3))) AND ((RTRIM(rt0.c0), ((NULL)OR(0.22134844744830595)), COUNT(*), ((rt0.c1)LIKE(vt1.c0)), ((rt0.c3) BETWEEN (rt0.c4) AND (-1.112819041E9))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)))IS NOT(rt0.c4 COLLATE NOCASE)) FROM vt1, rt0; -- 0ms;
SELECT ALL vt1.c0 FROM rt0, vt1; -- 0ms;
SELECT ((((rt0.c1)LIKE(rt0.c3)))>(CASE WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END)) FROM vt1;SELECT (+ (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS NOT(rt0.c4)))AND(((rt0.c3) NOT NULL))) FROM rt0, vt1 WHERE (((((NULL))=(('-1735688183'))) IN ())); -- 0ms;
SELECT DISTINCT MIN(((rt0.c4) NOTNULL) COLLATE NOCASE), (rt0.c1 IN ()) COLLATE BINARY, MAX((vt1.c0 IN ()), rt0.c3) FROM rt0 WHERE ((0.08246749827813105 COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c2 IN ()) THEN CAST(vt1.c0 AS BLOB) END, (- (x'ed6b')), COUNT(*) OVER () FROM vt1, rt0 WHERE ((CAST('lꭗ' AS BLOB) IN ())) GROUP BY (CAST(rt0.c4 AS BLOB) IN (TYPEOF(DISTINCT rt0.c0), ((rt0.c1) IS FALSE))), (((rt0.c2) BETWEEN (rt0.c3) AND (vt1.c0)) IN ()), CASE WHEN CASE rt0.c1  WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c2 END THEN CASE rt0.c4  WHEN rt0.c0 THEN '0.25822652011146474' WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END ELSE ('1746765521' IN ()) END; -- 0ms;
SELECT DISTINCT CAST((0.9703149373596303 IN ()) AS NUMERIC) FROM rt0, vt1 WHERE ((((('')|(0Xffffffffbdabba9f)))>>((((('1249806723')OR(x'a5fa')))AND(x'90a4'))))); -- 0ms;
SELECT DISTINCT CAST(COUNT(rt0.c1) AS INTEGER) FROM rt0 WHERE (ABS(CASE WHEN 0.5689834741329082 THEN 0.1207312387398557 WHEN NULL THEN 'S' WHEN '{\VTAr\謕U' THEN NULL END)) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND ('-1696829225')) THEN rt0.c1 COLLATE NOCASE ELSE (('1893366029')<<(rt0.c1)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))) COLLATE NOCASE FROM vt1, rt0 WHERE (highlight(((NULL)=(NULL)), (('QN	''D\rk(\r') IS TRUE), ((0x67172ca7)|('-1826572525')), (((('VP')AND(NULL)))OR(NULL))));SELECT NULL FROM rt0, vt1; -- 0ms;
SELECT DISTINCT NTILE(((CASE WHEN rt0.c2 THEN rt0.c1 END)==(CASE WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END))) OVER (), (((rt0.c4)) NOT BETWEEN ((CASE rt0.c4  WHEN rt0.c4 THEN vt1.c0 WHEN 1910819765 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END)) AND (((- (rt0.c1))))), ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END)OR(vt1.c0)))AND(CASE WHEN rt0.c2 THEN 0Xffffffffb984a349 ELSE rt0.c3 END)), -1409667685, CASE (((rt0.c4))>=((rt0.c0)))  WHEN (((rt0.c4))<>((rt0.c0))) THEN '\()' ELSE COUNT(rt0.c4) END FROM rt0 WHERE ((((x'')) NOT BETWEEN ((CAST(0.5683433520724892 AS REAL))) AND ((CHAR(NULL)))));SELECT ALL FIRST_VALUE(NULL) OVER ( PARTITION BY 0.6064581833400734, CAST(rt0.c4 AS TEXT)) FROM vt1 WHERE (((((CASE NULL  WHEN x'9e56' THEN 'v㮪' END)AND(NULL)))OR(CAST(x'0f55' AS INTEGER)))) LIMIT 1066515337 OFFSET 740997010;SELECT ALL COUNT((('-1425891614')-(rt0.c4))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))!=(((rt0.c4) NOT BETWEEN (x'03fa') AND (rt0.c4)))) FOLLOWING EXCLUDE CURRENT ROW) FROM vt1;SELECT ((rt0.c2 COLLATE RTRIM) IS FALSE) FROM vt1 WHERE ((((x'0b18')IS NOT(0.9075866681786007)) IN ()));SELECT DISTINCT (((0.7710749738754673))>((rt0.c1))) COLLATE NOCASE, ((UPPER(DISTINCT rt0.c1))IS(((vt1.c0)OR(rt0.c1)))), ((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)) COLLATE RTRIM, ((CAST(rt0.c4 AS INTEGER))%('ua')), CAST(((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)) AS REAL) FROM rt0;SELECT CASE ((0.3086722208700652) NOTNULL)  WHEN LENGTH(rt0.c3) THEN (rt0.c0 IN (rt0.c1, NULL)) END FROM vt1;SELECT DISTINCT ((((((((AVG(rt0.c1))AND(CASE WHEN vt1.c0 THEN rt0.c3 END)))AND(0X5e077378)))AND(((rt0.c1) BETWEEN (925874341) AND (rt0.c0)))))AND(CAST(rt0.c3 AS NUMERIC))) FROM vt1, rt0 WHERE (0.5094130589396112); -- 0ms;
SELECT DISTINCT (((((rt0.c3))<((rt0.c1))))/(((rt0.c4) IS TRUE))) FROM vt1, rt0 ORDER BY (((((((((+ ('N.{')))OR(CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 END)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (0xffffffffaac5b5af)))))AND((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))))AND(rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST; -- 0ms;
SELECT MAX(rt0.c3) FROM vt1 WHERE (CASE WHEN ((((x'')OR('1306614182')))AND(NULL)) THEN ((((((((NULL)OR(0.380044296180289)))AND(x'')))OR('-510498626')))OR(x'')) WHEN TRIM(x'', 0.10086759992583394) THEN (('8y')&(0.16700244927772734)) WHEN ((x'') NOT BETWEEN ('T+薾N''	') AND (0.6081353524206805)) THEN ((x'') IS TRUE) ELSE ((1841526085)<<(-1292784904)) END);SELECT ((((rt0.c4))>((vt1.c0))) IN ((('') ISNULL), COALESCE(DISTINCT rt0.c0, rt0.c3))) FROM vt1, rt0 WHERE (((((((((0.40467036536372014)OR((- (0Xffffffffb9c128b5)))))OR('{7')))AND(((-3.11175E8) NOTNULL))))AND(0x1 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (rt0.c3 IN (TOTAL(rt0.c3), ((rt0.c2)IS NOT(rt0.c2)))) FROM rt0 GROUP BY ((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(rt0.c0 COLLATE RTRIM)))OR(((rt0.c1)>=('-1044992018')))))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))AND(((rt0.c2) NOT NULL))) HAVING ((((CAST(rt0.c1 AS NUMERIC))OR(CASE WHEN rt0.c4 THEN rt0.c0 END)))OR(LIKELY(DISTINCT rt0.c2))) ORDER BY ((rt0.c3)LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), ((rt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST, ((((rt0.c3) NOT NULL)) NOT BETWEEN ((~ (vt1.c0))) AND (CAST(rt0.c0 AS REAL)));SELECT ALL ((0.17275738891473114)<=(((((vt1.c0)AND(rt0.c4)))OR(rt0.c4)))) FROM vt1 WHERE ((((0X1295de9d)&(0.36818539573389397)) IN ()));SELECT DISTINCT ABS(rt0.c0 COLLATE RTRIM) FROM vt1, rt0 WHERE ('嗄ㆁ'); -- 0ms;
SELECT ALL (+ (MIN(rt0.c1))), ((((vt1.c0 COLLATE NOCASE)AND(((rt0.c3)|(rt0.c2)))))AND((((rt0.c3, 1.900479625E9, rt0.c0))>=((rt0.c0, rt0.c0, rt0.c3))))), ((CASE rt0.c2  WHEN '' THEN rt0.c0 END)%(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0 NOT INDEXED, vt1 WHERE (((CAST(0.9355934133980626 AS REAL)) NOT BETWEEN (CASE WHEN '288968001' THEN x'3919' ELSE NULL END) AND (LIKELY(DISTINCT 0.2755763925078245)))) ORDER BY (~ (rt0.c1)) DESC  NULLS LAST, (((((((vt1.c0)AND(rt0.c3)))AND(rt0.c2))))<((((rt0.c4) IS FALSE)))) DESC  NULLS FIRST; -- 0ms;
SELECT AVG((((0.2209948063844548))>=((715678628)))) OVER ( ORDER BY ((load_extension(vt1.c0))<(x'c91a')) DESC  NULLS LAST), ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 END)<=(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)), (SUM(rt0.c0) IN ()) FROM vt1;SELECT DISTINCT (((rt0.c1, rt0.c3, rt0.c1, 0.222013140120203, vt1.c0)) NOT BETWEEN ((((NULL)*(vt1.c0)), (- (rt0.c3)), ((rt0.c4) IS TRUE), rt0.c0 COLLATE NOCASE, ((rt0.c3)%(rt0.c4)))) AND (((rt0.c1 IN ()), SUM(0.11072792649809349), ((rt0.c1) BETWEEN (NULL) AND (x'6578')), ((rt0.c3) NOT NULL), ((-130462187)IS(rt0.c0))))) FROM rt0 WHERE (LOWER(((0.4386410263740692)+(NULL))));SELECT DISTINCT MIN(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))) FROM vt1, rt0 GROUP BY ((LIKELY(rt0.c1)) NOT BETWEEN (x'') AND (((((rt0.c1)AND(rt0.c2)))OR(vt1.c0)))), rt0.c2, x'', CAST(x'75eb' AS BLOB), ((((CAST(rt0.c1 AS INTEGER))OR((((vt1.c0))>=((rt0.c3))))))OR(rt0.c2)) HAVING IFNULL((- (vt1.c0)), ((rt0.c3)*(rt0.c2))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END) FROM rt0, vt1 WHERE (((NULLIF(x'', '1306614182')) BETWEEN (('I' IN (NULL))) AND (((0.39600757961271194)AND(0.021164014021771704))))); -- 0ms;
SELECT ALL LIKELY(((rt0.c3) NOT NULL)) FROM vt1, rt0 WHERE ((((x'')) BETWEEN ((0.3731553563134016)) AND ((NULL))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM vt1, rt0 WHERE (((((x'') IS FALSE))<((- (x''))))); -- 0ms;
SELECT ALL NULL FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((0.03658967781989142)=(rt0.c2)))) FROM rt0, vt1; -- 0ms;
SELECT (NOT ((((''))>((rt0.c0))))) FROM vt1, rt0 WHERE ((x'' COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT (- (CASE rt0.c3  WHEN '?zWR/ﵺ' THEN rt0.c2 END)), ROW_NUMBER() OVER (), ((((rt0.c2)LIKE('')))*(TOTAL(vt1.c0))) FROM rt0, vt1 WHERE ((COALESCE(x'950c', '鿤xK	a', '-842200974', '1489695800') IN (((x'')IS('-1735688183'))))); -- 0ms;
SELECT MAX(((vt1.c0) NOT BETWEEN (rt0.c4) AND (vt1.c0))) FROM vt1, rt0 WHERE (((0.4619185030657924) NOT BETWEEN ((+ (NULL))) AND (ABS(DISTINCT '-2055013543')))) ORDER BY ((rt0.c1) NOT NULL) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOTNULL))&(vt1.c0)) FROM rt0 GROUP BY (~ (CASE rt0.c2  WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c4 END)), CAST(vt1.c0 AS REAL), ((-4023107.0) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)));SELECT DISTINCT CASE WHEN COUNT(*) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) WHEN ((0.9348893851691334)>(rt0.c0)) THEN MIN(rt0.c4) WHEN (- (rt0.c0)) THEN ((rt0.c3) IS FALSE) END FROM rt0, vt1 WHERE ((((((- (1049088310)))OR((('GqbA/''')/(NULL)))))AND(0.7177160496007974 COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT NTH_VALUE(rt0.c3, ((rt0.c4 IN ()) IN ())) OVER (), RANK() OVER (), ((((((rt0.c0)OR(rt0.c1)))AND(((x'')>>(vt1.c0)))))OR(((rt0.c4)==(x'')))) FROM rt0;SELECT DISTINCT (((rt0.c0)) BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))) AND ((CAST(rt0.c4 AS BLOB)))) FROM vt1 WHERE (((0.8937534721210284 COLLATE NOCASE)-((0.49923280205680787 IN ()))));SELECT DISTINCT (+ (LTRIM(rt0.c1, rt0.c0))) FROM vt1, rt0 ORDER BY (((((rt0.c4)OR(rt0.c2)))OR(rt0.c1)) IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT 0xfffffffff68b2e39, ((rt0.c4) NOT NULL)), DENSE_RANK() OVER (), json_type(((((rt0.c2)AND('ꀹ 4&')))OR(vt1.c0))) FROM rt0, vt1 WHERE ((((~ (NULL)))>((('-739463615')OR('kLOQ^䃉y<'))))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)OR(rt0.c3)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c4))) NOT BETWEEN (TIME(rt0.c0, rt0.c2, rt0.c3)) AND (((vt1.c0) ISNULL))), CASE WHEN NULL THEN (~ (rt0.c1)) END, CASE ((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))  WHEN CASE WHEN rt0.c1 THEN '0.7596447441133333' END THEN CASE rt0.c1  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c3 END ELSE rt0.c0 END FROM rt0, vt1 WHERE (((CAST('' AS TEXT))|(((0.3675607354350755)GLOB('ﷀ C(>fTm '))))); -- 0ms;
SELECT ALL LEAD(CASE WHEN (~ (rt0.c3)) THEN LOWER(DISTINCT vt1.c0) ELSE (rt0.c1 IN ()) END, rt0.c1, vt1.c0) OVER (), (((((x'')<<(rt0.c2)), ((((vt1.c0)AND(rt0.c2)))OR(vt1.c0)), ((rt0.c1)AND(x'')), rt0.c2 COLLATE NOCASE, SUM(x'')))>=((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END, CAST(rt0.c1 AS NUMERIC), rt0.c2, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((0xffffffffa10dc378))), ((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c2))))), (~ (COUNT(*))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (- (rt0.c4)) FROM rt0, vt1 WHERE ((('-83449621' IN (x'3e7e', x'')) IN ())) LIMIT -732377674; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID(), (((((((((+ (rt0.c4)))AND(TRIM(DISTINCT rt0.c2))))OR(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((((rt0.c1)AND(rt0.c4)))AND(rt0.c4)))))AND(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(1640220021)))), ((vt1.c0 COLLATE RTRIM) ISNULL) FROM rt0;SELECT DISTINCT (CAST(rt0.c4 AS REAL) IN ()), (((rt0.c0 IN (x''))) NOTNULL), rt0.c1 COLLATE RTRIM FROM vt1;SELECT ALL '介^l!%\r^4' FROM rt0, vt1 WHERE ('1065880930'); -- 0ms;
SELECT DISTINCT x'6f51' FROM vt1 WHERE ((NOT (CAST('-158650823' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT vt1.c0, (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) IN ()), CAST(((vt1.c0)&(rt0.c3)) AS INTEGER) FROM vt1, rt0; -- 0ms;
SELECT ALL ((LIKELIHOOD(DISTINCT rt0.c2, 0.6909484331337993)) BETWEEN ((NOT (rt0.c3))) AND (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END)) FROM rt0, vt1; -- 0ms;
SELECT ALL (NOT (UNICODE(rt0.c0))), (((((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c3))))==((rt0.c3 COLLATE RTRIM))), CASE WHEN (((rt0.c0, vt1.c0, rt0.c2, rt0.c3, vt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c0)) AND ((NULL, rt0.c0, rt0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c4)AND(rt0.c0)) ELSE (rt0.c0 IN (rt0.c4)) END FROM vt1 WHERE ((((x'8853') ISNULL) IN (NULL COLLATE RTRIM)));SELECT DISTINCT CASE WHEN ((rt0.c4) IS TRUE) THEN vt1.c0 ELSE ((rt0.c0)<=(rt0.c2)) END FROM rt0 WHERE (1.3976563430706304E18);SELECT CAST(((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)) AS TEXT), MIN(0X47a0acf0), TOTAL(((rt0.c2)<(rt0.c4))) FROM vt1;SELECT ALL ((((rt0.c4)||(rt0.c4)))<(COUNT(*))) FROM rt0 WHERE (CAST(((NULL)!=('-1232143939')) AS REAL)) ORDER BY '-1924122334'  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((x''))))) AND (((rt0.c4 IN ())))) FROM vt1, rt0; -- 0ms;
SELECT CUME_DIST() OVER () FROM vt1, rt0 LIMIT -1752612663; -- 1ms;
SELECT DISTINCT ((('?%', vt1.c0, vt1.c0))<=((vt1.c0, 0.34433446634678244, rt0.c3))) COLLATE RTRIM, rt0.c0, LAG(((rt0.c2) IS TRUE), CAST((((rt0.c3))=((rt0.c1))) AS NUMERIC), QUOTE(0.3902956878522378)) OVER () FROM rt0 WHERE (0.69223020046566);SELECT DISTINCT (CASE WHEN rt0.c1 THEN rt0.c3 END IN (CAST('&{}+u<wdb' AS REAL))) FROM rt0, vt1 WHERE (ABS(DISTINCT (((0X372fb8a5))<(('316296907'))))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (((((vt1.c0)OR(rt0.c2)))AND(rt0.c1))) AND (AVG(x''))) FROM rt0 LIMIT -1752612663 OFFSET -83449621;SELECT DISTINCT (NOT (COUNT(rt0.c2))) FROM vt1, rt0 WHERE (((((((x'9afc') IS FALSE))OR((((0.549489562915672, NULL, '-1055865963')) BETWEEN ((0xffffffffd0f9f625, 0.4624226812936635, x'')) AND ((x'', NULL, NULL))))))OR((('1795364599')>>(0.2830769907568873))))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((vt1.c0) NOT NULL))) AND ((x'66949bd3' COLLATE BINARY))) FROM vt1, rt0 WHERE (((((CAST('S!i' AS NUMERIC))AND(CAST(0.0635883320876165 AS INTEGER))))OR(TRIM('p')))) LIMIT 1725825000; -- 0ms;
SELECT ALL (((((rt0.c0) NOT NULL), rt0.c2 COLLATE NOCASE, ((rt0.c4)AND(rt0.c2))))==((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))OR(vt1.c0)))AND(vt1.c0)), CAST(rt0.c3 AS REAL), rt0.c1 COLLATE BINARY))) FROM vt1 WHERE ('1e500') GROUP BY CASE (((vt1.c0))<>((rt0.c1)))  WHEN (vt1.c0 IN ()) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)) ELSE (((x''))>((vt1.c0))) END, (- (((rt0.c3) NOT NULL))), (~ (((x'af7fdf54') BETWEEN (rt0.c2) AND (rt0.c1)))) HAVING AVG(1.29517651E9);SELECT TOTAL(x'4457'), ((((rt0.c0) NOT NULL)) NOT BETWEEN (((rt0.c1) IS FALSE)) AND ((('') IS TRUE))), (rt0.c2 IN ()) FROM vt1, rt0 WHERE (((x'fc11')-(((x'')GLOB('0p'))))) ORDER BY (+ (rt0.c1)) ASC  NULLS FIRST, COALESCE(DISTINCT (((rt0.c2))>((rt0.c0))), rt0.c3 COLLATE NOCASE)  NULLS FIRST, rt0.c3 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT ((((rt0.c2)GLOB(rt0.c4))) NOT BETWEEN (x'') AND (CAST(rt0.c3 AS BLOB))) FROM vt1 WHERE (((((NULL)=(NULL))) NOT BETWEEN ((('0.757899063599501') NOT BETWEEN ('') AND (x''))) AND (((((0.7700264084070948)AND(0Xffffffff93b84f47)))AND(x'')))));SELECT DISTINCT IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c4 IN ())) FROM rt0 ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c1 END  WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c0)IS NOT(rt0.c3)) END ASC LIMIT 209278405;SELECT ALL (TOTAL(vt1.c0) IN (((rt0.c1)&(rt0.c3)))) FROM vt1, rt0 WHERE (LIKELY(DISTINCT (('BW䵁''/NA') ISNULL))); -- 0ms;
SELECT CASE ((rt0.c0)||(rt0.c4))  WHEN ('791911306' IN ()) THEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))) END, json_valid(TOTAL(rt0.c4)), (+ (CAST(rt0.c2 AS TEXT))) FROM rt0 WHERE (NULL COLLATE RTRIM COLLATE RTRIM);SELECT DISTINCT json_object(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c0 IN (vt1.c0))) FROM rt0;SELECT DISTINCT '0.6099006547450178', TRIM(NULL, ((rt0.c1)<>(vt1.c0))), (((rt0.c0)) NOT BETWEEN ((CASE WHEN '' THEN rt0.c4 END)) AND ((vt1.c0 COLLATE BINARY))) FROM vt1, rt0 GROUP BY ((CAST(rt0.c4 AS TEXT))<<('-307825617' COLLATE NOCASE)), TYPEOF(DISTINCT (~ (rt0.c2))), ((((rt0.c2) ISNULL)) NOTNULL) HAVING ((NOT (rt0.c1)) IN ()); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1) ISNULL)), FIRST_VALUE(((ABS(DISTINCT rt0.c3))<(vt1.c0))) OVER (), LAST_VALUE((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((-1735688183, (((((((('-717248899')OR(rt0.c2)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c0)), ((((rt0.c4)AND(NULL)))OR(0.5038336466237594)))) AND ((((rt0.c2)>(rt0.c0)), NULL, ((rt0.c1)LIKE(NULL)))))) OVER () FROM rt0 NOT INDEXED, vt1; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((((((rt0.c3)AND(rt0.c4)))OR(rt0.c2))))) FROM rt0 WHERE ((((x'' IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('')-(rt0.c1))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING) FROM rt0, vt1 WHERE (UPPER(((x'cdb0')<>('')))) GROUP BY rt0.c0, (((rt0.c4, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c4, CAST(rt0.c0 AS TEXT), rt0.c0 COLLATE BINARY)) AND ((((rt0.c3)*(rt0.c3)), rt0.c3, TYPEOF(DISTINCT rt0.c0)))), CASE WHEN NULL THEN rt0.c0 END COLLATE RTRIM HAVING (((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((x'', rt0.c2, NULL)) AND ((vt1.c0, rt0.c3, rt0.c1)))) NOT BETWEEN ((rt0.c1 IN ())) AND (GROUP_CONCAT(-2.110678877E9))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0)LIKE(rt0.c4)) THEN ((rt0.c4)&(rt0.c1)) WHEN (+ (rt0.c0)) THEN rt0.c3 COLLATE RTRIM WHEN ((vt1.c0)OR(rt0.c2)) THEN (((('2z9')OR(rt0.c0)))OR(0.23470854569687893)) WHEN NULLIF(vt1.c0, x'76b5034d') THEN ((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (rt0.c4 IN ()) THEN (((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN TOTAL(rt0.c2) THEN (((rt0.c2, rt0.c0, rt0.c1, rt0.c1, vt1.c0))!=((rt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c2))) WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN ((NULL)==(rt0.c0)) ELSE NULL END FROM rt0 WHERE ((~ (((NULL) BETWEEN (x'') AND (NULL))))) LIMIT 585476322;SELECT NULL FROM rt0, vt1 LIMIT 1262633261 OFFSET -1309721686; -- 0ms;
SELECT ALL NULL COLLATE BINARY, (NULLIF(DISTINCT rt0.c4, rt0.c0) IN ()), (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((JULIANDAY(vt1.c0, rt0.c0, vt1.c0, rt0.c1, 'h3x*T2ov', rt0.c2, rt0.c1)))) FROM rt0, vt1 WHERE (CASE WHEN (+ (0.31447336965847006)) THEN CASE WHEN x'' THEN -5.45215657E8 ELSE 0.20079069982151176 END END) LIMIT -1093858102 OFFSET 2143707550; -- 0ms;
SELECT GROUP_CONCAT(((((rt0.c4)AND(rt0.c4)))AND(rt0.c0))) FROM rt0, vt1; -- 0ms;
SELECT LAG(rt0.c3 COLLATE BINARY COLLATE BINARY, (((((rt0.c1 IN ()))AND(NULL)))OR((rt0.c3 IN ()))), ((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)) COLLATE NOCASE) OVER () FROM rt0, vt1 WHERE ((((NOT (0xffffffffc8489081))) BETWEEN ('-371935196') AND (((((x'c512103f')AND('-1469421510')))OR(0.4490273742464591))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c2 END)>>('?N')) FROM vt1, rt0 WHERE ((((('494364646') BETWEEN (-801517491) AND (NULL)))LIKE(((x'') BETWEEN (NULL) AND (0xffffffffe1cc324e))))); -- 0ms;
SELECT ALL ((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0))) IS FALSE), (NOT (((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))), ((((((((((vt1.c0)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))) BETWEEN ('U.]v.w ' COLLATE RTRIM) AND (rt0.c4 COLLATE BINARY)) FROM rt0 WHERE ((('S!i')>(NULL))) LIMIT -142547436;SELECT DISTINCT CAST((((vt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS NUMERIC) FROM rt0 WHERE (((CAST('-83449621' AS BLOB))IS((0.728969841257053 IN (NULL)))));SELECT ((x'')||((~ (rt0.c1)))), (AVG(vt1.c0) IN ()), (((vt1.c0)) BETWEEN ((load_extension(vt1.c0, rt0.c4))) AND ((UPPER(DISTINCT rt0.c2)))) FROM vt1 WHERE (((((((x'') NOT NULL))OR(((-1.112819041E9) IS FALSE))))AND(UNLIKELY(NULL))));SELECT ALL ((((0.6067253216010401)AND(rt0.c0 COLLATE BINARY)))OR(CAST(rt0.c3 AS NUMERIC))), CAST(((rt0.c2) IS FALSE) AS REAL), rt0.c4 FROM rt0 WHERE (((((1.978158988E9)|(NULL)))>=(((NULL)<<('-1251324286'))))); -- 0ms;
SELECT ABS(rt0.c2) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((rt0.c2, vt1.c0, vt1.c0)) NOT BETWEEN (((('|O[-PHs')LIKE(rt0.c3)), ((rt0.c2) NOTNULL), CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)) AND ((AVG(rt0.c4), ((((rt0.c0)OR(rt0.c3)))AND(rt0.c4)), ((rt0.c0) NOT BETWEEN ('919582514') AND (rt0.c0))))) FROM rt0, vt1 WHERE ((((((NULL) IS FALSE)))=(('|9栆8嵪R')))) ORDER BY (x'0a19' IN ()) COLLATE BINARY; -- 0ms;
SELECT ((((((vt1.c0) NOT BETWEEN (rt0.c4) AND (vt1.c0)))AND(TOTAL(vt1.c0))))AND('')) FROM rt0;SELECT 0x37e711a6, ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (NULL))) IS TRUE), LIKELY(((vt1.c0) NOTNULL)) FROM rt0, vt1; -- 0ms;
SELECT ((((vt1.c0)GLOB(vt1.c0)))==((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))), ((((rt0.c0)AND(0.43905328614094885))) NOT BETWEEN ((rt0.c4 IN ())) AND (UPPER(vt1.c0))), SUM(CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c3 END) COLLATE NOCASE, NULL, (CAST(rt0.c2 AS REAL) IN ()) FROM vt1, rt0 GROUP BY (CAST(rt0.c4 AS INTEGER) IN ()); -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4)>=(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT x'7e35' FROM rt0 WHERE ((((0.563568761283336)/(x'')) IN ())); -- 0ms;
SELECT DISTINCT (CAST(rt0.c0 AS NUMERIC) IN ()), (- (((rt0.c0) IS TRUE))), ((((SUM(vt1.c0))AND((~ (rt0.c4)))))OR((((rt0.c3))==((rt0.c0))))), ((('914852629', rt0.c2, vt1.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM, ((rt0.c1) BETWEEN (rt0.c4) AND ('0.5038336466237594')), CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN 0.5965653227956141 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) AND (((rt0.c1 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END))), (((((- (rt0.c2)))AND(MIN(vt1.c0))))AND(rt0.c4)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((((rt0.c3)%(rt0.c0)))AND(MIN(rt0.c3))))OR(rt0.c1)) FROM rt0, vt1 LIMIT 1935267627 OFFSET -1894354212; -- 0ms;
SELECT ((((((((NULL)OR((- (rt0.c1)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c4)))))AND(((vt1.c0)OR(rt0.c3)))))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.3179738269808754))) FROM vt1 WHERE (COALESCE('1090780244', '1501993677' COLLATE BINARY, (((''))<=((NULL))), (('1295176510')IS(x'')), ((x'')%(x'')), CAST('1032420638' AS REAL)));SELECT DISTINCT ((((COUNT(*))AND((((rt0.c2))==((NULL))))))AND(CAST(rt0.c3 AS INTEGER))) FROM vt1, rt0 WHERE (''); -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c3 AS NUMERIC))AND(((rt0.c1) NOTNULL))))AND((('mZ')GLOB(rt0.c1)))), TRIM('1136006871'), ((rt0.c2) IS TRUE) COLLATE RTRIM FROM rt0, vt1 WHERE (CAST(NULL COLLATE NOCASE AS REAL)); -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN (((((rt0.c4))<((rt0.c0))))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) FROM vt1 WHERE (((NULL COLLATE RTRIM) NOTNULL));SELECT DISTINCT CAST(rt0.c1 AS NUMERIC), CAST(rt0.c0 AS REAL), ((COUNT(rt0.c3)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CASE rt0.c4  WHEN x'' THEN rt0.c4 WHEN vt1.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c0 END)) FROM vt1 WHERE (CAST(0.16394221179646784 AS BLOB) COLLATE BINARY);SELECT DISTINCT (((+ (rt0.c3)))<>(GROUP_CONCAT(rt0.c1))), (((('-1455797378')OR(rt0.c3))) NOT BETWEEN (COUNT(*)) AND (CASE WHEN rt0.c4 THEN rt0.c2 END)), CAST(ABS(DISTINCT rt0.c0) AS NUMERIC) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((x'')IS(rt0.c1)) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c4)), '1489695800', '1577546616'))<=((CAST(vt1.c0 AS NUMERIC), (((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))), ((x'') NOT NULL)))) FROM vt1, rt0 WHERE (((((((((((((((0.21140524875959898)OR(0.14743940067655403)))OR(((x'')IS NOT(0X4e0dc488)))))OR((0.647619459001268 IN (0.7789189615544879)))))OR((((('1032420638')OR(' R')))OR(NULL)))))OR(((('?3u')) BETWEEN ((NULL)) AND ((NULL))))))AND(((x'') NOT BETWEEN ('-1999439136') AND (0.5142082358208738)))))AND(((((x'c303f2ab')OR(x'fe80')))AND(7.91911306E8))))) EXCEPT SELECT DISTINCT ((((vt1.c0) IS FALSE))/(CAST(rt0.c3 AS BLOB))) FROM rt0, vt1 WHERE (((((((((SQLITE_COMPILEOPTION_GET(0xffffffff96634038))AND('p' COLLATE NOCASE)))OR(HEX(x''))))OR((('-1198202737') ISNULL))))OR(((((1140007639)OR(x'1a06')))OR(NULL))))) GROUP BY (- ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))); -- 0ms;
SELECT ALL CAST(NULL AS TEXT), CAST(json_remove(rt0.c4, vt1.c0) AS NUMERIC), vt1.c0 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c3 THEN rt0.c3 ELSE vt1.c0 END IN ()) FROM vt1 GROUP BY IFNULL(DISTINCT ((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)), ((((((((vt1.c0)OR(rt0.c0)))OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c0))) HAVING (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) IN ());SELECT (((0xffffffffa671110f IN (rt0.c1)))||((((vt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))), ((((((((((((rt0.c0)OR(rt0.c3)))AND(x'e0de')))OR(rt0.c2)))OR(rt0.c0)))OR(((vt1.c0)>=(rt0.c1)))))AND(CAST(rt0.c1 AS INTEGER))), rt0.c2 COLLATE BINARY FROM rt0 WHERE ((('')<(0.009024376705027648)) COLLATE NOCASE);SELECT DISTINCT (~ (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))) FROM vt1 WHERE ('-393440046');SELECT DISTINCT CAST(rt0.c2 COLLATE NOCASE AS BLOB), ((((rt0.c4))<((rt0.c1))) IN ()), '8150240' FROM vt1, rt0; -- 0ms;
SELECT ((((rt0.c2)|(rt0.c0)))==(CAST('{qN,隭>j' AS NUMERIC))) FROM rt0, vt1 ORDER BY (((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) IN ()); -- 0ms;
SELECT DISTINCT (((NULL) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ()) FROM rt0 WHERE ((((((('0.9919137386338374')OR(NULL)))OR(NULL)))<=(((-1226429324) BETWEEN (NULL) AND (0.7301299929749182))))); -- 1ms;
SELECT DISTINCT TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0))), CASE ((rt0.c2)OR(rt0.c2))  WHEN SUM(rt0.c1) THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) END, CASE WHEN ((((rt0.c1)AND(rt0.c4)))AND('G')) THEN vt1.c0 WHEN ((((rt0.c1)AND(vt1.c0)))OR(rt0.c4)) THEN ABS(vt1.c0) WHEN ((vt1.c0)/('1532862250')) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) END FROM vt1;SELECT ALL ((('-1112819041'))>=(('0.0054621323216808015' COLLATE RTRIM))) FROM vt1 WHERE (((((('^w忌უl2zB,') BETWEEN (NULL) AND (0.66620827345468))))==((CASE WHEN 9.25477175E8 THEN NULL END)))); -- 0ms;
SELECT ((CAST(rt0.c2 AS INTEGER))>=((rt0.c1 IN ()))) FROM vt1;SELECT DISTINCT ((((rt0.c0)OR('')))AND(ABS(DISTINCT vt1.c0))) FROM rt0, vt1 ORDER BY (+ ((((((((((((('Pk]T')AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c4)OR(vt1.c0)))AND(rt0.c2)) COLLATE BINARY) FROM vt1;SELECT (((rt0.c4 IN ())) NOT NULL) FROM rt0, vt1 WHERE ((((NULL IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM rt0 WHERE ((((('') IS TRUE)) BETWEEN (CASE 0.37894093566629306  WHEN 0x232f15fa THEN '|ZBk1fh' ELSE x'' END) AND (CASE WHEN x'' THEN x'' END))); -- 0ms;
SELECT ((((((((rt0.c0)AND(((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))))AND(NULL COLLATE BINARY)))AND(((rt0.c3)<>(rt0.c0)))), (((((rt0.c2))<((rt0.c3)))) IS TRUE), ((((vt1.c0 IN (rt0.c4)), AVG('1040337316'), rt0.c2))>((CAST(0.9376154495749751 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c2 END, (vt1.c0 IN ())))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT x'' FROM vt1, rt0 WHERE (((NULL IN ()) IN (0.13162478637676667 COLLATE RTRIM, TRIM('^#QD2', NULL)))); -- 0ms;
SELECT ALL LIKELIHOOD(((rt0.c0) NOTNULL), 0.4839149225623225) FROM vt1 WHERE ((((('1489695800') NOTNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (NULL COLLATE NOCASE)));SELECT DISTINCT ((rt0.c0) IS FALSE) COLLATE RTRIM, CAST(((rt0.c2)%(rt0.c0)) AS BLOB), COUNT(*) OVER ( ORDER BY ((CAST(rt0.c3 AS TEXT))==(json_patch(rt0.c2, rt0.c0))) DESC) FROM vt1, rt0; -- 0ms;
SELECT ALL rt0.c0, (((vt1.c0)) NOT BETWEEN (((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c3))))) AND ((((rt0.c0)GLOB(rt0.c1))))), rt0.c0 FROM vt1 WHERE ((((((((('0.9104001822768137')AND(((x'86c1')+('1308031103')))))AND(NULL)))OR((~ (0x694b6f79)))))AND(0.6004939437120056)));SELECT ALL ((CAST(rt0.c0 AS TEXT)) BETWEEN (((((vt1.c0)AND(rt0.c3)))AND(rt0.c2))) AND (vt1.c0)) FROM rt0;SELECT DISTINCT CAST(CAST(rt0.c2 AS REAL) AS TEXT), ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((((rt0.c4)OR(vt1.c0)))AND(rt0.c1))) AND (((x'ee20')<<(rt0.c3)))), CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END COLLATE BINARY FROM vt1;SELECT DISTINCT NTILE(((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) OVER ( PARTITION BY (((('')OR(((rt0.c0) IS FALSE))))OR(CASE WHEN rt0.c3 THEN vt1.c0 ELSE NULL END)), ((rt0.c2)<>(rt0.c1 COLLATE BINARY))), ((((rt0.c0) ISNULL))%(((vt1.c0) NOTNULL))), LIKELY(MIN(rt0.c1)) FROM vt1 ORDER BY ROUND((rt0.c0 IN ()), CAST(rt0.c1 AS NUMERIC)) ASC  NULLS LAST, ((CASE WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)+(CASE WHEN rt0.c2 THEN NULL END)) DESC, (('[''Ch6C<G隧') NOT NULL) DESC;SELECT DISTINCT CASE ((rt0.c2)=(rt0.c4))  WHEN ((vt1.c0) NOTNULL) THEN (((rt0.c4))<((rt0.c1))) END FROM vt1 GROUP BY (vt1.c0 IN ()), (((((-1318873027))<=((rt0.c0)))) NOT BETWEEN ((((rt0.c2, rt0.c2, rt0.c0))!=((rt0.c3, rt0.c1, rt0.c2)))) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END)), ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN (((((rt0.c1)OR(0.2328356898933054)))AND(rt0.c3))) AND (((rt0.c1) BETWEEN ('') AND (vt1.c0))));SELECT DISTINCT (NOT ((rt0.c1 IN (rt0.c3)))), x'', ((HEX(DISTINCT rt0.c2)) IS TRUE) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c2)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) AND (((vt1.c0)<>(vt1.c0)))) FROM vt1 WHERE (((((NULL))!=((0X3d897d1e))) IN ())) GROUP BY (+ (((vt1.c0) ISNULL)));SELECT rt0.c2, rt0.c4, COUNT(*) FROM rt0 WHERE ((((- (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c4))>((rt0.c4))))) FROM vt1, rt0; -- 0ms;
SELECT ALL ((((((((((((rt0.c0)AND(MIN(vt1.c0))))OR(rt0.c2)))AND(NULL)))OR(CAST(vt1.c0 AS BLOB))))AND(((rt0.c1)IS(rt0.c3)))))AND(((rt0.c1) IS TRUE))), CAST(ABS(0.5324372117736682) AS TEXT), ((CASE WHEN rt0.c2 THEN rt0.c4 END)<<(GROUP_CONCAT(rt0.c0))) FROM rt0, vt1 WHERE (((('.*᪣,䨨m')) BETWEEN ((0.398825834897676 COLLATE RTRIM)) AND ((x'')))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c4 THEN vt1.c0 END COLLATE NOCASE FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((TYPEOF(vt1.c0)) BETWEEN (((rt0.c0)=(rt0.c1))) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.9413142502084998 END)) FROM rt0, vt1; -- 0ms;
SELECT (((((vt1.c0)AND(vt1.c0)))AND(rt0.c0)) IN (((rt0.c2)>=(vt1.c0)))), (CASE WHEN rt0.c1 THEN '0.25822652011146474' ELSE rt0.c4 END IN ()), MAX(vt1.c0 COLLATE NOCASE, rt0.c2 COLLATE RTRIM) FROM rt0, vt1 WHERE (CASE WHEN '-1e500' COLLATE RTRIM THEN ((0.5990084631650672)-('513126986')) END); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (CASE WHEN x'' THEN rt0.c4 END) AND ((rt0.c1 IN ()))) FROM vt1, rt0 WHERE (((x'1a59')GLOB((((x'', 0.10155961227057031, x''))=((0.46726566774708855, 'D>膨[1\r', x'')))))) ORDER BY (CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 END IN ()) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)IS(rt0.c1)))AND(TRIM(rt0.c0))))AND(CAST(rt0.c3 AS TEXT))), (((((((((vt1.c0 IN ()))OR((+ (rt0.c3)))))OR((- (rt0.c3)))))AND(rt0.c1 COLLATE NOCASE)))AND((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))), COUNT((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((x'', rt0.c2, rt0.c2)))) FROM vt1 WHERE (((((((NULL)OR(x'')))AND(0.6578773581714823)))+(TIME(0x4a068864, 0Xf37e835, NULL))));SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((0.7192790906537435) NOT BETWEEN (-1.752612663E9) AND ('#bu(o_x)u')) IN ())); -- 0ms;
SELECT ((((x'')==(rt0.c4))) NOT BETWEEN (vt1.c0) AND ((('b叆Q)')||(rt0.c0)))) FROM rt0, vt1 WHERE ((CASE NULL  WHEN 0.4629303316193947 THEN 0.27267197068212645 WHEN '{\VTAr\謕U' THEN 0x58fb5f16 WHEN x'714d' THEN 0.49818899056695 END IN ())) ORDER BY (- (CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END))  NULLS FIRST, rt0.c3 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT TOTAL((rt0.c0 IN ())) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY) ISNULL) FROM vt1, rt0; -- 0ms;
SELECT ALL (((((((((((((((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c2))))OR(((rt0.c1) IS FALSE))))AND((+ (rt0.c0)))))OR(NULL)))AND(((rt0.c2)/(rt0.c4)))))AND((NOT (rt0.c4)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN x'1c55' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1, rt0 WHERE (((((1.7976931348623157E308)>=(''))) NOT BETWEEN (((x'') NOT BETWEEN ('흠H') AND ('-1819011080'))) AND ('-1900966710' COLLATE BINARY))); -- 0ms;
SELECT ALL (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)) IN ((rt0.c4 IN ()))) FROM rt0 WHERE (((CAST(x'07d3' AS BLOB))>=(CAST('311811741' AS NUMERIC))));SELECT DISTINCT x'a732', ((rt0.c4)>('1032420638')), vt1.c0 FROM vt1 NATURAL JOIN rt0; -- 1ms;
SELECT DISTINCT TOTAL(TRIM(DISTINCT vt1.c0)) OVER ( ORDER BY NULL), (((((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))OR(rt0.c2)))AND(((vt1.c0)%(rt0.c4)))), ((((rt0.c4)OR(vt1.c0))) BETWEEN ((((rt0.c0, rt0.c1, NULL))>((x'b55fb08c', rt0.c4, rt0.c3)))) AND (((rt0.c1)%(vt1.c0)))), (((~ (rt0.c0))) IS FALSE), ((rt0.c4)LIKE(CAST(rt0.c0 AS NUMERIC))), (((rt0.c4 IN ())) IS TRUE), rt0.c4 FROM vt1;SELECT (((MAX(rt0.c3)))>=((CAST(rt0.c4 AS REAL)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE RTRIM, (((vt1.c0))=((rt0.c4))) COLLATE NOCASE, (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()), ((rt0.c0) NOTNULL), ((CASE rt0.c1  WHEN rt0.c2 THEN 0X63d5f018 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL) FROM rt0, vt1 ORDER BY (((vt1.c0))>(('8150240'))) COLLATE NOCASE; -- 0ms;
SELECT ALL ((SUM(rt0.c3)) IS TRUE) FROM rt0 NOT INDEXED WHERE ((((('2141520013', '370934269', x'dd80'))<(('p#[h8K8', 0.5125705689205328, '0.7700471563107345'))) IN ())); -- 0ms;
SELECT DISTINCT MAX(((((((((x'd9f9')AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c1))), ((rt0.c4)>=(((vt1.c0)<=(vt1.c0)))), ABS(DISTINCT CASE rt0.c3  WHEN rt0.c2 THEN NULL WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) FROM rt0, vt1 LIMIT 667458576; -- 0ms;
SELECT COALESCE((((288968001)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))), rt0.c4, rt0.c2, ((vt1.c0) NOTNULL), ((vt1.c0) NOT NULL), CAST(rt0.c0 AS INTEGER)), rt0.c4 COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(((rt0.c0)/(1501993677))) FROM rt0, vt1; -- 0ms;
SELECT ((((((((((((((rt0.c2) ISNULL))AND((~ (rt0.c1)))))OR(((rt0.c3)GLOB(rt0.c0)))))AND(((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(vt1.c0)))AND(rt0.c2)))))OR(((rt0.c1)<>(rt0.c1)))))AND(((rt0.c3)<=(vt1.c0)))))AND(((((rt0.c4)OR(vt1.c0)))AND(vt1.c0)))), CASE WHEN ((rt0.c2)+(rt0.c2)) THEN 1221018234 ELSE ((rt0.c2)IS(rt0.c3)) END, FIRST_VALUE(((x'') ISNULL)) OVER (), ((0.4214393914933372) IS FALSE) COLLATE NOCASE, GROUP_CONCAT(NULL) FROM vt1;SELECT ALL COUNT(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4))) FROM rt0, vt1; -- 0ms;
SELECT ((0.3512935344228211)OR(((rt0.c3) IS TRUE))), ((((((((rt0.c2 COLLATE NOCASE)OR(rt0.c1 COLLATE RTRIM)))OR((vt1.c0 IN ()))))AND(((rt0.c4)!=(0.3842968092790855)))))AND(rt0.c3)), SUM(rt0.c4) OVER () FROM vt1 GROUP BY ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0)))|(((x'2873ce61')=(rt0.c4)))) HAVING CAST(rt0.c4 COLLATE RTRIM AS INTEGER);SELECT ((CASE rt0.c4  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c4 END)>=((~ (rt0.c1)))) FROM rt0, vt1 WHERE (IFNULL(((NULL) BETWEEN ('҉䳧zjg') AND ('')), CASE 0.23732245607110025  WHEN '-1198202737' THEN 'u' ELSE x'' END)) GROUP BY ((((((rt0.c1)AND(1.152649662E9)))AND(rt0.c1))) ISNULL), ((((vt1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((vt1.c0, rt0.c3, rt0.c4))) IN ()), CASE rt0.c1  WHEN ((0.7784969603807845)<=(rt0.c0)) THEN (- (rt0.c0)) ELSE CASE vt1.c0  WHEN rt0.c3 THEN rt0.c4 END END; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS INTEGER)) IS FALSE), ((+ (rt0.c4)) IN (CASE WHEN rt0.c4 THEN 0.39848251519877953 ELSE rt0.c2 END, ((((vt1.c0)AND(rt0.c0)))AND(rt0.c3)))), rt0.c1 FROM vt1 LIMIT 1824473467 OFFSET -177326448;SELECT ALL CAST(((rt0.c4) IS FALSE) AS INTEGER) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1) IS FALSE)) OVER ( PARTITION BY CASE (((rt0.c0, rt0.c3, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c0)))  WHEN (('-606582601') NOT NULL) THEN rt0.c0 END, ('' IN ())) FROM rt0, vt1 LIMIT -1209027802 OFFSET -1580094677; -- 0ms;
SELECT ALL (((rt0.c0)) BETWEEN ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))) AND ((GROUP_CONCAT(vt1.c0)))), DENSE_RANK() OVER (), MIN(AVG((+ (0.408403371183815)))) FROM vt1, rt0;SELECT ALL ((0.4490273742464591) NOT BETWEEN (((((rt0.c2)AND(rt0.c4)))AND(rt0.c1))) AND (rt0.c4)) FROM vt1, rt0 WHERE (((-1.613615661E9)||(NULL)) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT MIN(vt1.c0) FROM rt0 GROUP BY LIKELIHOOD(DISTINCT rt0.c4, 0.9521858728263071) COLLATE BINARY COLLATE BINARY, CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC), CASE (((rt0.c4))>=((rt0.c2)))  WHEN (rt0.c2 IN ()) THEN ((vt1.c0)IS NOT(rt0.c4)) END HAVING (((rt0.c1)) BETWEEN ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)) AND ((x'')));SELECT DISTINCT '-2134233915' FROM vt1, rt0 WHERE (UNLIKELY(DISTINCT ((9.25874341E8)>>(0X1295de9d)))) LIMIT 1097612499 OFFSET 1090780244; -- 0ms;
SELECT DISTINCT rt0.c3 FROM vt1 WHERE (0xffffffffe52710e3 COLLATE BINARY);SELECT DISTINCT CAST(vt1.c0 AS TEXT) COLLATE RTRIM FROM rt0;SELECT DISTINCT COUNT(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM), LIKELIHOOD(((vt1.c0) NOTNULL), 0.47031144844889217), ((CAST(vt1.c0 AS REAL)) NOTNULL) FROM vt1 WHERE (CASE WHEN ((0.3313079906282489)+(0.38014235995695433)) THEN CASE x''  WHEN '1537053047' THEN x'' ELSE x'' END END);SELECT DISTINCT TYPEOF(((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))) FROM rt0 WHERE ((- (((NULL)OR(NULL))))); -- 0ms;
SELECT ALL UPPER(((rt0.c0)GLOB(rt0.c0))) FROM vt1, rt0 GROUP BY ((LOWER(rt0.c2))OR((((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))); -- 0ms;
SELECT RANK() OVER () FROM vt1, rt0 NOT INDEXED WHERE (((1978158988)OR((((('1152649662')OR(NULL)))AND('0.009350039755341877'))))); -- 0ms;
SELECT ALL TOTAL(CAST(rt0.c4 AS NUMERIC)) FROM vt1, rt0 WHERE ('247790027') LIMIT 1003007076; -- 0ms;
SELECT ALL (((rt0.c4)) BETWEEN ((COALESCE(DISTINCT rt0.c2, rt0.c1, vt1.c0, vt1.c0))) AND ((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1))))), MIN(((rt0.c4)>(rt0.c3))), DENSE_RANK() OVER () FROM vt1 ORDER BY (((((((rt0.c4, vt1.c0, NULL, rt0.c4, rt0.c3))>((rt0.c3, rt0.c1, 0.2790615379179766, vt1.c0, rt0.c4))))OR((((rt0.c1, '0.3238889691337845', rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c3, rt0.c1))))))AND(((((rt0.c4)AND(x'')))OR(rt0.c1))))  NULLS FIRST;SELECT CAST(rt0.c1 AS REAL) FROM rt0 WHERE ((CASE WHEN NULL THEN 0.9799658546030223 ELSE '1397656343070630464' END IN ())); -- 0ms;
SELECT (+ ((NOT (rt0.c1)))), (COUNT(rt0.c0) IN ()), ((((rt0.c0)<=(rt0.c4))) NOT BETWEEN ((0.9814096228152759 IN (rt0.c4))) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0; -- 1ms;
SELECT ALL (TRIM(DISTINCT rt0.c3) IN ()) FROM rt0, vt1 ORDER BY ((- (rt0.c0)) IN ((((rt0.c3, rt0.c3, rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c4, rt0.c0, rt0.c0, rt0.c1)) AND ((0.27965569341119834, rt0.c2, rt0.c0, rt0.c2, rt0.c4))), (~ (rt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (rt0.c4)) COLLATE RTRIM FROM vt1, rt0 WHERE (((CASE '-1540052016'  WHEN x'3d5a' THEN NULL END)LIKE(((0.4470916823459432) IS TRUE)))) ORDER BY vt1.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c4 AS TEXT)) OVER () FROM rt0, vt1 WHERE (0.5532202023902126); -- 0ms;
SELECT CASE ((rt0.c0) ISNULL)  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c2, rt0.c4, rt0.c2)) BETWEEN ((0xffffffffea3b51dd, rt0.c3, rt0.c1)) AND ((rt0.c4, rt0.c1, rt0.c4))) ELSE AVG(rt0.c4) END FROM rt0, vt1 LIMIT -1872588344 OFFSET 986591053; -- 0ms;
SELECT COUNT(*), (('-1141644412' COLLATE RTRIM) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE WHEN rt0.c4 THEN vt1.c0 END)), ((((((rt0.c3)=(rt0.c0)))AND(rt0.c1)))OR(json_insert(rt0.c4, vt1.c0, rt0.c2))) FROM vt1;SELECT (NOT (((NULL) BETWEEN (rt0.c1) AND (vt1.c0)))) FROM rt0 GROUP BY ((CAST(rt0.c0 AS REAL))<>((rt0.c3 IN ()))) HAVING CASE WHEN COUNT(*) THEN GROUP_CONCAT(vt1.c0) WHEN CAST(rt0.c2 AS TEXT) THEN rt0.c3 COLLATE RTRIM WHEN ((rt0.c4) NOT NULL) THEN rt0.c2 COLLATE RTRIM END;SELECT ALL IFNULL((rt0.c1 IN (rt0.c4)), ((rt0.c4) ISNULL)), GROUP_CONCAT(TIME(rt0.c3, rt0.c3, rt0.c3)), CAST(((((x'c4a8')OR(vt1.c0)))OR(rt0.c4)) AS NUMERIC) FROM rt0, vt1; -- 0ms;
SELECT (((rt0.c2, vt1.c0, rt0.c2)) NOT BETWEEN ((((rt0.c3)=(rt0.c2)), NULLIF(rt0.c4, rt0.c3), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))) AND ((((rt0.c4) BETWEEN (rt0.c0) AND ('-1696829225')), (((rt0.c1, rt0.c3, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, rt0.c4)) AND ((rt0.c0, rt0.c1, rt0.c4))), (((0X190588e8))<((rt0.c0)))))) FROM rt0, vt1 WHERE (json_array_length(x'', '8睵q#|') COLLATE RTRIM);SELECT rtreenode(((rt0.c3)-('181674626')), NULL), CHANGES(), (((- (vt1.c0)))GLOB(((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))) FROM vt1 WHERE ((((((NULL))<=((x'')))) NOT BETWEEN ((('ݏ^u') BETWEEN (x'e925') AND ('765585215'))) AND (x'')));SELECT ((TYPEOF(DISTINCT rt0.c3)) NOTNULL) FROM vt1, rt0 WHERE ((((('') ISNULL))GLOB(IFNULL(DISTINCT 0.3994072593236174, NULL)))) UNION ALL SELECT DISTINCT (+ (TRIM(rt0.c2, rt0.c1))) FROM rt0 WHERE ((((('' COLLATE NOCASE)AND((('8') NOT BETWEEN ('{\VTAr\謕U') AND ('FﱔZ')))))AND((- (0.17570535208660765))))); -- 1ms;
SELECT ALL (((NOT (rt0.c4)))%(LIKELY(rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL rt0.c4 FROM vt1 WHERE ((~ (((NULL)<>(NULL))))) GROUP BY (((+ (vt1.c0)))%(CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN vt1.c0 THEN 0.8664747914965653 ELSE rt0.c1 END));SELECT CAST((((rt0.c4))<((rt0.c3))) AS REAL), rt0.c2, COUNT(*) OVER () FROM vt1, rt0 WHERE (NULLIF(DISTINCT (- ('-1071343896')), (x'' IN ()))); -- 0ms;
SELECT (((((((((((rt0.c3, vt1.c0, rt0.c4))!=((rt0.c2, rt0.c3, rt0.c0))))OR('1990476342')))AND(((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))))OR(x'')))AND(CAST('-1376424471' AS NUMERIC))) FROM rt0, vt1 WHERE (RTRIM(x'' COLLATE RTRIM)); -- 0ms;
SELECT ALL GROUP_CONCAT(((((vt1.c0)AND(rt0.c3)))AND(rt0.c2))), ((((rt0.c0)&(rt0.c2)))<=((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))), (((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c1))) FROM rt0, vt1 GROUP BY (((((((rt0.c1, rt0.c4, rt0.c3))>=((rt0.c3, rt0.c4, rt0.c4))))AND(((vt1.c0) IS FALSE))))OR((rt0.c0 IN ()))); -- 1ms;
SELECT ALL (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4 COLLATE BINARY, ABS(rt0.c2), NULL)) AND (((~ (rt0.c0)), rt0.c3 COLLATE RTRIM, (NOT (rt0.c3))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c4)))||(x'')) FROM vt1, rt0 WHERE (((((((((((((-901608408)OR(NULL)))OR(x'')))OR(NULL)))AND(NULL)))OR(CASE NULL  WHEN 0xffffffff8eb18cca THEN 0X6d578411 END)))OR('[?<osS'))); -- 0ms;
SELECT NTILE((((~ (rt0.c0))) ISNULL)) OVER () FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c3, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c2, rt0.c3))))<=((rt0.c4 IN (vt1.c0)))), CASE CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN 0.4585682254606628 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END  WHEN ((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)) THEN ((((((((rt0.c3)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c1)) END, AVG(NULL), ((rt0.c0 COLLATE NOCASE) BETWEEN (0.9561026170704658) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4)))), (- ((vt1.c0 IN ()))) FROM vt1, rt0 NOT INDEXED; -- 0ms;
SELECT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (NULL COLLATE RTRIM)) FROM vt1, rt0 WHERE (((((NULL)||(0.259514464529795)))|((NOT (x'55c3'))))); -- 0ms;
SELECT ALL ((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c2)) COLLATE BINARY, (('KYLJL')!=(((rt0.c3) NOTNULL))), NULL FROM vt1 WHERE (((NULL)+(1978158988)) COLLATE BINARY);SELECT DISTINCT ABS(((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c4))) FROM vt1, rt0; -- 0ms;
SELECT (((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<((PRINTF(rt0.c3)))) FROM vt1 ORDER BY rt0.c2 ASC;SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(CAST(vt1.c0 AS REAL)) OVER (), (((rt0.c4)GLOB(rt0.c4)) IN (((rt0.c4) ISNULL), vt1.c0 COLLATE RTRIM)), ((COUNT(vt1.c0))==((+ (vt1.c0)))) FROM rt0 ORDER BY '' DESC  NULLS FIRST;SELECT ALL (((rt0.c2)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)) AND (((~ (rt0.c4))))), ((((((((MIN(rt0.c4))AND(((rt0.c3)AND(rt0.c1)))))AND(((rt0.c4) BETWEEN (rt0.c3) AND (vt1.c0)))))AND(((rt0.c3) NOTNULL))))OR((((rt0.c2))!=((rt0.c1))))), (((SUM(rt0.c4)))<>((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) FROM vt1 WHERE (SUBSTR(((370934269) BETWEEN (0.3318624946849369) AND (x'')), ((-1168397864)<(NULL))));SELECT ALL NTILE(((((vt1.c0 IN ()), CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))>=(((NULL IN (vt1.c0)), vt1.c0, (~ (vt1.c0)))))) OVER () FROM vt1 WHERE ((~ ((('R\r,6aVr')%(NULL))))); -- 3ms;
SELECT ((CASE WHEN '991059924' THEN rt0.c2 END)LIKE(0.5205397974539915)) FROM rt0, vt1 WHERE ((NOT (UPPER(DISTINCT 0.6626328092556218)))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt1 ORDER BY CASE (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c3 END ASC  NULLS LAST;SELECT DISTINCT '-847262222' FROM rt0; -- 2ms;
SELECT DISTINCT x'' FROM rt0, vt1 WHERE ((+ (0.782957072515229)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))) IS TRUE) FROM rt0 WHERE (CASE (('')<=(75608407))  WHEN CASE WHEN '1397656343070630464' THEN 1655648641 ELSE '1904363834' END THEN (NOT ('-1936607927')) WHEN 0.12418858403731281 THEN '-1477906651' COLLATE BINARY WHEN DATETIME(NULL, NULL, 'now') THEN ((NULL)*('')) END); -- 0ms;
SELECT CASE WHEN (((rt0.c1, rt0.c3, rt0.c2))<>((rt0.c0, rt0.c1, rt0.c3))) THEN 0.9541387193451851 WHEN (- (rt0.c4)) THEN (rt0.c4 IN (rt0.c2, rt0.c4)) WHEN (((rt0.c3, rt0.c1, rt0.c2))<=((vt1.c0, rt0.c0, rt0.c4))) THEN NULL ELSE ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)) END, ((AVG(rt0.c0)) BETWEEN (SUM(rt0.c4)) AND ((~ (rt0.c1)))), CAST((~ (rt0.c0)) AS REAL), NTILE(((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0) NOTNULL))))OR((vt1.c0 IN ())))) OVER (), ((((((rt0.c1)AND(vt1.c0)))AND(0.5447228970833055)))*(((('0.4111165392324454', vt1.c0, rt0.c3))!=((0.5675659538655946, rt0.c1, rt0.c1))))) FROM vt1;SELECT ALL MAX(((rt0.c4) IS FALSE)), LEAD(CASE WHEN ((rt0.c0) NOTNULL) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c3)*(rt0.c2)) THEN ((vt1.c0) NOTNULL) WHEN TYPEOF(rt0.c0) THEN (~ (rt0.c2)) END, rt0.c1, 'n_^?Sh') OVER (), GROUP_CONCAT(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END) FILTER(WHERE (((rt0.c0 IN (vt1.c0))) NOT NULL)) OVER ( PARTITION BY (~ (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY ORDER BY ((ROUND(rt0.c1, x''))>=((+ (rt0.c3)))) ASC, rt0.c4 ASC  NULLS LAST) FROM rt0, vt1 WHERE (UNICODE((('铒u') IS FALSE))); -- 0ms;
SELECT ALL JULIANDAY(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END, (((rt0.c3))!=((rt0.c0))), NULL), TRIM(SUM(rt0.c4)), LIKELIHOOD(CAST(rt0.c3 AS NUMERIC), 0.5710114153953272) FROM rt0, vt1 WHERE (((((0Xffffffff95b8690f)>(x'2f7c'))) IS TRUE)); -- 0ms;
SELECT ((HEX(vt1.c0)) NOT NULL) FROM vt1 WHERE (CAST(-1.613615661E9 AS BLOB) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT MAX(TOTAL(((rt0.c2) NOT NULL))) FROM vt1, rt0;SELECT ((((133776933) NOT BETWEEN (rt0.c3) AND (rt0.c4)))OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt1.c0)))), CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE, 0.44544666191976023 FROM vt1 WHERE (CASE NULL  WHEN 0.2970367427341234 THEN '-1248366952' END COLLATE BINARY);SELECT DISTINCT TYPEOF(((rt0.c1)|(rt0.c3))) FROM rt0, vt1 LIMIT 1720723868 OFFSET -548033673; -- 0ms;
SELECT ALL (((('-枣\y,') ISNULL))>(((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)))), (NULL IN ()), LAG(0.6521511604607173, CASE CAST(rt0.c0 AS REAL)  WHEN NULL THEN rt0.c3 COLLATE RTRIM END, TRIM(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)))) OVER () FROM vt1, rt0; -- 0ms;
SELECT vt1.c0, MAX(((rt0.c2)&(vt1.c0))), TOTAL(IFNULL(DISTINCT rt0.c4, rt0.c0)) OVER (), TRIM(CAST(rt0.c3 AS REAL)), rt0.c4 FROM rt0;SELECT ((rt0.c3) ISNULL) FROM vt1 WHERE ((NOT (((0X6bcc58f8) NOT BETWEEN (0x2449de86) AND (0.868003737388833)))));SELECT ALL (((rt0.c0)) NOT BETWEEN ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 END)) AND ((((rt0.c3) NOT NULL)))), ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (((rt0.c1)IS(0xffffffffad822da5)))), json(rt0.c0) FROM vt1 WHERE ((((+ (0.5926096775010358))) NOT BETWEEN (x'0347') AND (CASE ''  WHEN 488566216 THEN 377782454 ELSE '' END))) GROUP BY ((((rt0.c4)/(rt0.c0)))<<(CAST(vt1.c0 AS TEXT))) HAVING ((vt1.c0)*(((vt1.c0) NOT NULL)));SELECT DISTINCT CASE (('-1198202737')%(x''))  WHEN ((rt0.c4)/(rt0.c4)) THEN CAST(rt0.c3 AS BLOB) ELSE AVG(rt0.c1) END FROM vt1, rt0 ORDER BY CAST((rt0.c1 IN (rt0.c1)) AS BLOB) DESC, (0.6233478353272442 IN ()); -- 0ms;
SELECT CASE WHEN (((rt0.c3))<((vt1.c0))) THEN TYPEOF(DISTINCT rt0.c3) ELSE (rt0.c4 IN (rt0.c0)) END FROM rt0;SELECT DISTINCT COUNT(*), CAST((rt0.c4 IN ()) AS REAL), (IFNULL(DISTINCT rt0.c4, rt0.c1) IN ()) FROM rt0 NOT INDEXED, vt1 WHERE (json_valid((('')/(NULL)))) ORDER BY (NOT (rt0.c4)) COLLATE BINARY, (((((rt0.c2)<>(rt0.c3)), ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c1)), (~ (rt0.c4))))==(((- (rt0.c1)), (((rt0.c0, vt1.c0, 0.19190463690868476)) BETWEEN ((rt0.c3, vt1.c0, rt0.c1)) AND ((rt0.c4, rt0.c3, rt0.c1))), (rt0.c0 IN ())))); -- 2ms;
SELECT TYPEOF(((vt1.c0)*(rt0.c2))), IFNULL(DISTINCT rt0.c0, rt0.c2) COLLATE NOCASE, (IFNULL(rt0.c4, rt0.c2) IN ()) FROM vt1 WHERE ((((0.7821405980299965)) NOT BETWEEN ((0.9919137386338374 COLLATE BINARY)) AND (((((NULL))<(('2141520013')))))));SELECT '', GROUP_CONCAT(CAST(rt0.c0 AS TEXT)) OVER (), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)))AND(523661892)))OR(((vt1.c0) NOT BETWEEN ('') AND (rt0.c4)))) FROM vt1 ORDER BY ((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c2))) NOT NULL);SELECT DISTINCT '' FROM rt0, vt1 WHERE ((((((('991059924')AND(0.5909463163052942)))AND(NULL))) IS FALSE)); -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY)LIKE(-1.30462187E8)) FROM vt1 WHERE (ROUND(DATETIME(x'', 0.4490273742464591, 0.8386449594541701), 0.4594806711675503 COLLATE BINARY));SELECT DISTINCT vt1.c0 FROM rt0;SELECT MIN(x'') FROM rt0, vt1 WHERE ('-1058870227'); -- 1ms;
SELECT DISTINCT NULLIF(DISTINCT rt0.c4, CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN x'0460' THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 ELSE '' END), GROUP_CONCAT(((rt0.c3) NOT NULL)) OVER (), ((((rt0.c1 IN ())))==((((rt0.c0) IS FALSE)))) FROM rt0, vt1 WHERE (((((-1.251324286E9)) NOT BETWEEN (('149544844')) AND ((NULL))) IN ())); -- 0ms;
SELECT CASE WHEN x'' THEN ((((((((vt1.c0)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))OR(NULL)) END, (NOT (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3)))), rt0.c2 FROM vt1, rt0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT ALL (~ ((NOT (rt0.c1)))) FROM rt0; -- 0ms;
