-- Time: 2024/06/07 15:32:27
-- Database: database50
-- Database version: 3.40.0
-- seed value: 3218393350
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.2882211274346447; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.6936878157181255), (x'ec42'), (0.2882211274346447); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(-1843239430); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2108319559); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1753135604); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(0x9788125) WHERE (UNLIKELY(vt0.c0) IN ()); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA mmap_size = -7576209203914453507; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('^E>U쎂'), (0x3e401fe1), (x''); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=('542360450'); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='^E>U쎂' WHERE '-2118121169'; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (NULL), ('y⯾{- l'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('542360450'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.secure_delete = false; -- 0ms;
PRAGMA main.application_id = 1966070520825563416; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1843239430), ('쎂컦}'), (0.9157656953280378); -- 0ms;
PRAGMA temp.mmap_size = 6530943999472121199; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2105975179); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cache_spill; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37331'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)==(0.2882211274346447)) AS REAL); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.5308833725036003); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR FAIL vt0 SET c0=x''; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'90cc'), (-1.488311298E9), (x''), (NULL), (NULL); -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''), (0x6478e552), (((0.17104393900294412)IS NOT(((((x'b046')OR(-357021594)))OR('0.17104393900294412'))))); -- 0ms;
PRAGMA main.cell_size_check = false; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT DISTINCT ((((vt0.c0)|(vt0.c0))) IS FALSE), (((vt0.c0 COLLATE RTRIM))>((CAST(vt0.c0 AS BLOB)))), ((vt0.c0)IS(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((- (CAST(NULL AS TEXT)))); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('1648553773'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (5.4236045E8), (0.46209342441310663), (0.7037183741423187); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), (''), (-1.124872474E9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.35507675067995514); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1678390266,14');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
PRAGMA stats; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 298150183); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1); -- 1ms;
DROP VIEW v0; -- 0ms;
UPDATE OR REPLACE vt1 SET (c1)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('794367438', ''); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT AVG(((vt1.c0)*(vt0.c0))) FROM vt0 WHERE ((((((0.20822578741296427))<((NULL)))) NOT NULL));SELECT ALL ((((vt1.c1 IN ())))>((TRIM(vt1.c1)))) FROM vt1, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt1.c0) AND (x'6b6c')))<=(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))); -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(((vt1.c1)<<(vt1.c1))) FROM vt1, vt0; -- 0ms;
SELECT ((CAST(vt1.c1 AS INTEGER)) BETWEEN (((vt1.c1)<(vt1.c1))) AND (vt0.c0)) FROM vt0, vt1 WHERE (((((((x'')OR(NULL)))AND(x''))) BETWEEN ((('-9045158')|(x''))) AND ((-3243524 IN ())))); -- 1ms;
SELECT DISTINCT (NOT (((vt1.c0) IS FALSE))), vt1.c1, 0x7ba01a50 FROM vt0, vt1; -- 0ms;
SELECT ALL CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END COLLATE BINARY FROM vt1;SELECT ALL CASE INSTR(vt1.c0, vt1.c1)  WHEN (((7.94367438E8))>((vt0.c0))) THEN CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END WHEN ((vt1.c0)AND(vt0.c0)) THEN ((vt1.c1)==(vt1.c1)) WHEN ((((0.13284621090114712)OR(x'')))AND(vt0.c0)) THEN vt1.c1 WHEN COUNT(*) THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)) WHEN json_quote(vt1.c1) THEN ((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)) END FROM vt0, vt1 WHERE (((((((0.4223397443069077)AND(NULL)))AND('265198931')))/((((x'0722c411')) NOT BETWEEN ((0X238a7c4e)) AND ((x'')))))); -- 0ms;
SELECT ALL ((CAST('1691984572' AS REAL))AND((vt0.c0 IN ()))) FROM vt1 INNER JOIN vt0 ON CAST(CASE WHEN NULL THEN vt1.c1 WHEN vt0.c0 THEN '794367438' WHEN vt1.c0 THEN vt1.c0 END AS BLOB) GROUP BY (('\rQ{TH*') NOT BETWEEN ((x'' IN (vt1.c0))) AND ((NOT (vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)IS(vt0.c0))) NOT NULL), (((((((((vt1.c0 IN ()))OR(((vt0.c0)>(vt0.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c1)||(vt1.c1)))))OR(((vt1.c0)=(vt1.c0)))), ((vt1.c1)<<(vt0.c0)) COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((((NULL) NOTNULL))) AND (((vt1.c1 IN ())))) FROM vt0 WHERE (CAST(LOWER(x'9b53') AS BLOB));SELECT DISTINCT (((vt1.c1))<=(('927968584'))) FROM vt0, vt1 WHERE (((((NULL)|('\nx\r馃P')))>((NOT (x''))))); -- 1ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((LIKELIHOOD(DISTINCT vt1.c0, 0.9754341501974745))) AND ((0X18e7333f))) FROM vt0 WHERE (CASE (('-9045158')GLOB(NULL))  WHEN ((NULL) IS TRUE) THEN (((NULL)) BETWEEN ((0.5216591300188586)) AND (('0.35507675067995514'))) ELSE (((('-652568189')AND('')))OR(1.044389857E9)) END);SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(GROUP_CONCAT(vt1.c0))))AND(((vt0.c0) NOTNULL))) FROM vt1 WHERE (('B7' IN ()) COLLATE RTRIM);SELECT DISTINCT load_extension(COALESCE(DISTINCT vt1.c0, vt1.c1)), CASE ((vt1.c1) IS FALSE)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)) ELSE (((x'', vt1.c1, vt1.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) END, (~ ((vt1.c1 IN ()))) FROM vt1 WHERE (LOWER('417805119' COLLATE RTRIM)) GROUP BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) AND ((1725424073))) HAVING SUM(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)));SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((0xffffffff8bba3e99, '1044389857', x'')) NOT BETWEEN ((((('DB', '', 'Bz'))=(('#x\rh1', 0.8632393016792943, 0Xfffffffff6567562))), (((NULL, 0.9074165578977551, x'')) BETWEEN ((0.9397630014626658, '\k', x'')) AND ((x'0b20', NULL, 0.09162823420091337))), ((NULL) IS FALSE))) AND (((~ ('0.2882211274346447')), (((x'5ee6'))<((''))), ((0.447636818865323)IS NOT(-737083869)))))); -- 0ms;
SELECT DISTINCT ((vt1.c1) IS TRUE) FROM vt1 WHERE ((((((('596278350')AND(x'')))AND(x''))) NOT BETWEEN (((x'0464') IS FALSE)) AND (CASE 's'  WHEN '' THEN 0Xfffffffff300b4b4 WHEN NULL THEN NULL WHEN NULL THEN 0.8765273769559281 WHEN 5.9627835E8 THEN '!' WHEN '1837601802' THEN '' ELSE -7.37083869E8 END))); -- 0ms;
SELECT DISTINCT (- (SQLITE_VERSION())) FROM vt1; -- 0ms;
SELECT ALL (vt1.c0 IN (CHANGES())), ((~ (vt1.c0)) IN ()), ((TRIM(vt1.c1)) NOT BETWEEN (vt1.c1) AND (vt1.c1 COLLATE NOCASE)) FROM vt1 WHERE ((((NULL)GLOB(0.19575053238621098)) IN ())); -- 0ms;
SELECT DISTINCT (((- (vt1.c1)))%(((((((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))) FROM vt0;SELECT ALL ((((vt1.c1 IN (vt1.c0))))<=(((- (vt1.c1))))) FROM vt1; -- 0ms;
SELECT ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))==(((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))), COUNT(CAST(0x9788125 AS INTEGER)), CASE CAST(5.9627835E8 AS INTEGER)  WHEN ((vt1.c0)&(vt1.c1)) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((AVG(vt1.c1))LIKE(((vt1.c0)-(vt0.c0)))) FROM vt1, vt0 WHERE (((((NULL) BETWEEN ('\Ht_') AND ('-1488311298'))) BETWEEN ((((NULL))<=(('')))) AND (LIKELY(DISTINCT 2086399572)))); -- 0ms;
SELECT ALL LTRIM((vt0.c0 IN ()), (vt1.c0 IN ())) FROM vt1 LIMIT -2058914820; -- 0ms;
SELECT DISTINCT TOTAL((vt1.c0 IN (vt1.c0))) OVER () FROM vt0 WHERE (CAST(NULL AS BLOB));SELECT CASE (vt1.c0 IN ())  WHEN ((vt0.c0) IS FALSE) THEN CAST(0.13284621090114712 AS TEXT) END FROM vt1 WHERE ((('993864118') NOT BETWEEN (((-79013632) NOT BETWEEN ('893484309') AND (x''))) AND (CASE WHEN 5.4236045E8 THEN '	' WHEN NULL THEN 0.6936878157181255 WHEN 0.9566210326362503 THEN NULL END))) ORDER BY CAST((~ (vt1.c1)) AS NUMERIC) ASC  NULLS LAST;SELECT ALL LIKELIHOOD(DISTINCT json_array_length(vt1.c1), 0.01216236182029029) FROM vt1, vt0 WHERE (((('K')) BETWEEN ((((x'a344') ISNULL))) AND ((CAST(4.17805119E8 AS TEXT))))); -- 0ms;
SELECT DISTINCT ((((vt1.c1)/(vt0.c0))) IS TRUE) FROM vt1, vt0 ORDER BY (NOT (((vt0.c0)||(vt0.c0)))); -- 0ms;
SELECT DISTINCT '' FROM vt0 GROUP BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)>>(((vt1.c1)IS(vt1.c1))));SELECT DISTINCT CAST((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS NUMERIC) FROM vt1, vt0 WHERE (CAST(((417805119)%(NULL)) AS TEXT)) ORDER BY CASE vt1.c1  WHEN ((vt1.c1) NOT NULL) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) END; -- 0ms;
SELECT ALL CASE CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END  WHEN (((vt1.c0, vt1.c1, vt1.c1))>((vt1.c1, vt0.c0, vt1.c1))) THEN ((vt0.c0)+(vt1.c0)) ELSE ((vt0.c0) IS TRUE) END FROM vt1 WHERE ((- (CASE x''  WHEN '\Ht_' THEN NULL END)));SELECT DISTINCT vt1.c1 FROM vt1; -- 0ms;
SELECT DISTINCT ((((((((((vt1.c0)IS NOT(vt1.c1)))OR(((vt1.c0)<<(vt0.c0)))))OR(((vt1.c1) IS TRUE))))OR(TRIM(vt1.c1))))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))) FROM vt1;SELECT ALL COUNT((NOT (vt1.c0))) OVER (), '-2118121169', ('1685644626' IN ()) FROM vt0, vt1; -- 0ms;
SELECT (((vt1.c1)) NOT BETWEEN (((((vt0.c0))<=((vt1.c1))))) AND ((vt1.c0 COLLATE BINARY))) FROM vt0;SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (CAST(NULL AS REAL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT x'ef2e' FROM vt1, vt0; -- 0ms;
SELECT (((COALESCE(vt1.c0, vt1.c1)))>=((vt1.c1 COLLATE BINARY))) FROM vt0 WHERE (((((CAST(x'6699' AS BLOB))AND(UNLIKELY(-9045158.0))))OR(0.5216591300188586)));SELECT DISTINCT (((((vt1.c0))>=((vt0.c0)))) IS TRUE) FROM vt1, vt0 WHERE ((((((1379659703, NULL, 1684546975))>=((NULL, 0.2568272630614522, '-737083869'))))OR((((('B4CH\n|')OR(NULL)))OR(x''))))) ORDER BY ((0.5347986693356083)<=(PRINTF(vt1.c1, NULL, vt1.c0, vt1.c1, vt1.c0))); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 LIMIT 2074090064 OFFSET 1662967848; -- 0ms;
SELECT DISTINCT ((vt1.c0)/(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))) FROM vt1 WHERE (UNLIKELY(DISTINCT -1747225996)); -- 0ms;
SELECT DISTINCT ((DATETIME(vt1.c0, vt1.c1, vt1.c1))>>(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 LIMIT 1412982953 OFFSET -218057548; -- 0ms;
SELECT DISTINCT NULL, ((((((((((vt1.c0) IS FALSE))AND(AVG(0.6213799859256561))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))AND(((vt0.c0)<<(NULL)))))AND(json_insert(vt0.c0, vt0.c0, vt0.c0))), ((COUNT(*)) NOT BETWEEN (x'') AND (LIKELIHOOD(vt0.c0, 0.43215716686293326))) FROM vt1, vt0 WHERE ('䡦<K-'); -- 1ms;
SELECT (CAST(vt1.c0 AS INTEGER) IN ()) FROM vt1, vt0; -- 0ms;
SELECT ALL CAST(x'' AS INTEGER), COUNT((~ (vt1.c1))), CAST(COUNT(*) AS NUMERIC) FROM vt0, vt1; -- 0ms;
SELECT ((vt1.c0)IS NOT(COUNT(vt1.c1))) FROM vt1, vt0; -- 0ms;
SELECT ALL (((- (vt1.c1)))OR((+ (vt1.c1)))), x'', AVG(-1336906784) OVER () FROM vt0 WHERE ((((((('1691984572')OR(NULL)))OR(NULL)))LIKE(((0.9637402084239248) IS FALSE))));SELECT ALL CAST(CAST(vt1.c0 AS REAL) AS NUMERIC) FROM vt0, vt1 LIMIT -644623391; -- 0ms;
SELECT ALL CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC), ((vt1.c1)IS(CAST(vt1.c1 AS NUMERIC))), RANK() OVER (), vt1.c0, ABS(DISTINCT HEX(vt1.c0)) FROM vt1;SELECT ALL (((vt0.c0)|(NULL)) IN ()), x'', CASE ((('0.5308833725036003')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))  WHEN (- (vt0.c0)) THEN CAST(vt1.c0 AS BLOB) END FROM vt0;SELECT DISTINCT ((((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))AND(CAST(vt0.c0 AS TEXT))), ((GROUP_CONCAT(vt1.c0)) IS FALSE), vt1.c1 FROM vt0 GROUP BY (((((((((vt1.c1)AND(x'')))AND(x'')))OR(vt1.c1)))OR(vt1.c0)) IN ()), CAST(CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END AS INTEGER), (((vt0.c0 IN ()))*(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN x'a5a5' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) HAVING HEX(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END);SELECT ALL CASE ((vt0.c0) BETWEEN (x'') AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 END THEN ROUND(NULL, vt1.c1) END FROM vt1;SELECT DISTINCT vt1.c1, (((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((x'') IS FALSE)))), CAST((((vt1.c0, vt0.c0, vt0.c0, vt1.c0, '-1843239430'))!=((vt1.c1, vt0.c0, vt0.c0, vt1.c0, vt0.c0))) AS INTEGER) FROM vt0, vt1 WHERE (json_type(('2002280404' IN ()))); -- 0ms;
SELECT ALL ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END)+(vt1.c0 COLLATE BINARY)) FROM vt1;SELECT ALL ((((vt1.c0)|(vt1.c1))) NOT NULL) FROM vt0;SELECT ((((((vt1.c1)OR(NULL)))AND(0.4178148997361727)))%(((vt1.c0)!=(vt1.c0)))), 'l紕<', CASE vt1.c1 COLLATE RTRIM  WHEN vt1.c0 COLLATE NOCASE THEN SUM(vt0.c0) END, CASE ((vt0.c0)%(vt1.c1))  WHEN ((vt0.c0)AND(0.2568272630614522)) THEN (('')>(0.9566210326362503)) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND ('-3243524')) END, vt1.c1 FROM vt0, vt1 ORDER BY vt1.c1  NULLS LAST, ((((vt0.c0) ISNULL))GLOB((~ (vt1.c0)))) DESC; -- 0ms;
SELECT ALL (+ (CAST(vt1.c0 AS INTEGER))) FROM vt1, vt0 GROUP BY (((((NOT (vt1.c1)))OR(CASE vt1.c1  WHEN vt1.c1 THEN x'' END)))OR(((vt0.c0)IS(vt1.c0)))); -- 0ms;
SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN vt1.c0 END) AND (TRIM(64506180, vt0.c0))) FROM vt1, vt0 ORDER BY 0.9911574694227443 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt1.c0)OR(json_remove(vt1.c0, vt1.c0))))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0 LIMIT -1560686734;SELECT (+ (CAST(vt1.c1 AS TEXT))) FROM vt1; -- 0ms;
SELECT ALL ((((vt1.c0)LIKE(vt1.c1)))>>((~ (vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)-(vt0.c0 COLLATE RTRIM)) FROM vt0, vt1 LIMIT 804150556; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0))>=(((vt1.c0)<(vt0.c0)))), (~ (MIN(vt1.c0))), (((MAX(vt0.c0)))!=((TRIM(DISTINCT vt1.c1, vt1.c0)))) FROM vt0 GROUP BY CASE vt0.c0 COLLATE NOCASE  WHEN vt1.c0 THEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN (- (vt0.c0)) THEN (+ (vt1.c1)) WHEN vt1.c0 COLLATE RTRIM THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END END HAVING vt1.c1 COLLATE BINARY;SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END AS REAL), vt1.c1, ((((vt0.c0) ISNULL)) IS FALSE) FROM vt0 WHERE ((((((~ (0.030032321296194153)))AND(CASE WHEN 'r^^B뒩4*[N' THEN -1631678771 WHEN x'' THEN '0.9074165578977551' WHEN NULL THEN x'' ELSE '1685644626' END)))OR(((('c*'))==((993864118))))));SELECT DISTINCT LOWER(DISTINCT CAST(vt0.c0 AS BLOB)), CAST((((vt1.c1))==((vt0.c0))) AS NUMERIC), ((((vt0.c0 COLLATE BINARY)AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c1)!=(x'')))) FROM vt1 LIMIT 1385651992;SELECT ALL (vt0.c0 COLLATE NOCASE IN ()) FROM vt0, vt1; -- 0ms;
SELECT (CAST(vt1.c1 AS REAL) IN ()) FROM vt0; -- 0ms;
SELECT ALL CAST(vt1.c0 AS NUMERIC) COLLATE BINARY, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS REAL), ((vt0.c0 COLLATE BINARY)>(vt0.c0)) FROM vt0, vt1; -- 0ms;
SELECT '9ꧧFQ蘏U' FROM vt1; -- 0ms;
SELECT ALL ((SUM(vt1.c0))-(UPPER(vt0.c0))), (((vt1.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE, MIN(vt1.c0))) AND ((CAST(vt0.c0 AS NUMERIC), ((vt1.c1)<<(vt1.c1)), GROUP_CONCAT(vt1.c1)))), vt0.c0 FROM vt0, vt1 WHERE ((- ((((0.9922152955687384))<=(('<*')))))); -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT vt1.c1))&(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)))) FROM vt1, vt0; -- 0ms;
SELECT LIKELY(DISTINCT x'') FROM vt1; -- 0ms;
SELECT DISTINCT SUM(((vt1.c0) NOTNULL)) OVER () FROM vt0 WHERE (CAST(NULL COLLATE RTRIM AS TEXT));SELECT ALL (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((NOT (vt0.c0))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER), vt0.c0, ((TRIM(DISTINCT vt1.c1)) NOT BETWEEN (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1))) AND (((vt0.c0)/(vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt1.c1))<=((vt0.c0)))) FROM vt0, vt1 WHERE ((((NOT (NULL))) BETWEEN ((((0.39032761985325515)) NOT BETWEEN ((0Xffffffffa0193e0b)) AND (('xo')))) AND (CAST(x'' AS REAL)))) GROUP BY NULL HAVING COUNT(*); -- 1ms;
SELECT ((((vt1.c0)AND((~ (vt1.c1)))))AND(((vt1.c1)-(vt1.c1)))) FROM vt0;SELECT ((CASE vt1.c1  WHEN x'' THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 END)=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN UNLIKELY(vt1.c0) THEN (- (vt1.c1)) WHEN ((vt1.c1)<=(NULL)) THEN vt1.c1 WHEN 0.3888185387518135 THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND ('0.5347986693356083')) ELSE ((((0x529f0ae)OR(vt1.c0)))AND(vt0.c0)) END FROM vt0, vt1 ORDER BY (((((x''))=((vt1.c0))))IS NOT((~ (vt1.c1)))) ASC, (+ (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( RANGE CAST(NULL AS NUMERIC) PRECEDING) FROM vt0, vt1 LIMIT 1531700554;SELECT DISTINCT (+ (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) FROM vt1 WHERE (((CASE WHEN NULL THEN '-1631678771' WHEN '' THEN x'c602' WHEN '1331115643' THEN 'Ik' END) NOT BETWEEN (((0.8323622612314666) NOT BETWEEN ('2086399572') AND ('-2058914820'))) AND ((('-737083869')<>('G%6u	A*䅺')))));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1; -- 0ms;
SELECT ALL COUNT(*) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((COUNT(vt1.c1), CAST(vt1.c1 AS NUMERIC), (vt1.c0 IN (vt1.c1))))<=((load_extension(vt1.c0), ((vt1.c0)IS NOT(vt1.c1)), RTRIM(vt0.c0)))), (((((vt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c1, vt1.c1, vt1.c0)) AND ((vt0.c0, vt1.c0, 419629242))))&(((vt1.c0) NOTNULL))), ((TYPEOF(DISTINCT vt0.c0))!=((vt1.c1 IN ()))) FROM vt0 WHERE (((CAST('0.39032761985325515' AS BLOB)) NOT BETWEEN (x'') AND (((x'') NOT BETWEEN (x'') AND (NULL))))) LIMIT 1837601802;SELECT ALL vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT ALL NTILE(((-6.52568189E8 COLLATE NOCASE)=(((('371301030')) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))) OVER ( RANGE ((0.8323622612314666 COLLATE NOCASE) NOTNULL) PRECEDING) FROM vt1, vt0;SELECT '-1437181001' FROM vt0, vt1 WHERE ((('-218057548') NOT BETWEEN (HEX(DISTINCT NULL)) AND ((('-162106014')|(x'36e9'))))); -- 0ms;
SELECT DISTINCT (((~ (vt1.c0))) IS TRUE), x'd46d', COUNT(*) OVER (), vt0.c0 COLLATE NOCASE, 0.6213799859256561 FROM vt1, vt0 ORDER BY (+ (((vt0.c0) NOTNULL))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)) AS REAL), FIRST_VALUE(CASE CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) THEN ((vt1.c0)<=(vt1.c0)) END) OVER (), ((CAST(vt1.c0 AS INTEGER))<((((vt0.c0))<=((vt1.c0))))) FROM vt1;SELECT DISTINCT CASE LOWER(DISTINCT vt0.c0)  WHEN (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, '1156328394', vt0.c0))) THEN vt0.c0 ELSE (- (vt1.c1)) END FROM vt1, vt0 WHERE (CAST('Vj' AS REAL)); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c1 AS INTEGER))/((- (vt0.c0)))) FROM vt0 WHERE (CASE CAST(x'' AS REAL)  WHEN (('B4CH\n|') IS TRUE) THEN ((0xfffffffff9d76fda) NOT BETWEEN ('1496975981') AND (NULL)) WHEN ((NULL)%(x'c04b7b18fa5a')) THEN ((('', '-1488311298', 0xfffffffffb4a5900))<=((0.21647402248914838, '-1286193080', 0X51b94cc5))) WHEN ((0Xfffffffffc2bd3e8) IS TRUE) THEN ('-36383698' IN ()) WHEN ((x'0374') BETWEEN (1570029386) AND ('uub')) THEN (~ (x'')) WHEN ((NULL)<('-1336906784')) THEN ('564401665' IN ()) ELSE CAST(x'3e95' AS BLOB) END) LIMIT -218057548 OFFSET -75157425;SELECT ALL vt0.c0 FROM vt0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))>(CASE WHEN vt0.c0 THEN vt1.c0 END)) DESC LIMIT -1239654576; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt1.c0)) IS FALSE) FROM vt0;SELECT ((HEX(vt1.c1))%(((NULL)<=(vt1.c0)))), (~ ((((vt0.c0))>((vt1.c1))))), ((0.9286333751282053)<((vt1.c0 IN ()))) FROM vt1 WHERE ((NULL IN ()) COLLATE BINARY);SELECT DISTINCT ((((vt0.c0)OR(CAST(vt1.c1 AS TEXT))))AND((vt1.c1 IN (vt1.c0, vt1.c0)))) FROM vt1, vt0 WHERE ((- ('\n4' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c0)AND(-591372318)))OR(vt0.c0)) COLLATE NOCASE) FROM vt1 WHERE (((((x'') NOT BETWEEN (0.708277089248871) AND (0x64afe66a))) IS FALSE)) ORDER BY vt1.c1 DESC  NULLS FIRST;SELECT GROUP_CONCAT((((vt1.c1, vt1.c1, 0X775ba3f4)) BETWEEN ((vt1.c1, x'', vt1.c0)) AND ((vt0.c0, vt1.c1, vt1.c1)))) FROM vt0, vt1 WHERE (CASE WHEN (- (x'')) THEN (('-760455745')>>(x'5edd6c23')) WHEN ((1835973873) IS FALSE) THEN ((((542360450)OR(417805119)))OR(0x62e3f5bd)) WHEN CASE WHEN 0.9855772382327102 THEN 0x6468259f WHEN 0X4e0fc098 THEN 0xffffffffa1037a8e WHEN '1717846394' THEN '4m%y|a' END THEN 51467340 COLLATE RTRIM ELSE CAST('0.6936878157181255' AS INTEGER) END); -- 0ms;
SELECT GROUP_CONCAT((~ (vt0.c0))) OVER () FROM vt1, vt0 WHERE (CASE ((0.48240151833063905)>(''))  WHEN NULL COLLATE BINARY THEN CAST(0.9566210326362503 AS NUMERIC) END) LIMIT -801077426; -- 0ms;
SELECT ALL (((+ (vt1.c0))) BETWEEN ((~ ('-75157425'))) AND (((((vt0.c0)AND(vt1.c1)))AND(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c1)), CAST(vt1.c1 AS NUMERIC), ((vt1.c1)<=(vt0.c0))))>((TOTAL(vt1.c1), ((vt1.c0)!=(vt0.c0)), ((((((((vt1.c1)AND(x'')))AND(vt1.c0)))OR(vt1.c1)))OR(vt0.c0))))), ((((vt1.c1)OR(0.16530247386549635)))OR(vt0.c0)) COLLATE NOCASE, NULL FROM vt0 WHERE ((((+ (NULL))) NOTNULL));SELECT ALL COUNT(((vt1.c1) ISNULL)) FROM vt1, vt0 WHERE ((((x'', '398919783', '', '#}', '564401665'))<=((0.7306860854318028, NULL, '祶_囚?(K', 'c*', 0xffffffff8dddeb8f))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT 0.8437409961914629 FROM vt1 WHERE (CAST(NULL COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT DISTINCT (((vt1.c1, vt0.c0, CASE WHEN vt0.c0 THEN x'e581' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END))<>(((vt1.c0 IN (NULL, vt1.c1)), ((((((((vt0.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) FROM vt1, vt0; -- 0ms;
SELECT ALL (CAST(vt1.c1 AS BLOB) IN ()), ((vt1.c0 IN ()) IN ()), CASE (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))  WHEN ((vt1.c1)AND(vt1.c0)) THEN vt1.c0 WHEN vt0.c0 THEN CAST(vt1.c1 AS BLOB) WHEN vt1.c1 THEN ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END FROM vt0;SELECT DISTINCT NULL FROM vt1 ORDER BY CASE ((vt1.c1) IS FALSE)  WHEN (((vt1.c0))>=((vt1.c0))) THEN '' END  NULLS FIRST; -- 0ms;
SELECT ALL ((vt1.c0)%(vt1.c1)) COLLATE NOCASE FROM vt1, vt0 WHERE (((((x'')-(NULL)))GLOB(((x'5683')LIKE(x''))))) GROUP BY (('')/(((vt1.c1)<(vt0.c0)))), ((((0.7037183741423187) BETWEEN (x'') AND (vt1.c1))) NOT NULL), '0.48240151833063905' HAVING (('') ISNULL); -- 0ms;
SELECT NULL FROM vt0 ORDER BY (x'' IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt1.c0)IS(vt0.c0)))>('\n%}')) FROM vt0, vt1 WHERE ('2074090064'); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((1044389857)%(vt1.c0)), vt1.c1 COLLATE RTRIM) FROM vt0 WHERE (((((CAST('-398386690' AS INTEGER))AND((('') BETWEEN (NULL) AND (0.48240151833063905)))))OR((NOT (0X46b74fcf))))) ORDER BY ((((0.5022179435444672)<(vt1.c1)))AND(((vt1.c1)%(vt0.c0)))) ASC;SELECT ((vt1.c0 COLLATE NOCASE) IS TRUE) FROM vt1, vt0 WHERE (DATE(((x'') NOT NULL), ((0X5d94bf4a) BETWEEN (x'59c3d218') AND (0.08745546434084273)), (0.12597387514941427 IN ()))) ORDER BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT ALL CAST(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END AS INTEGER) FROM vt1, vt0; -- 1ms;
SELECT ALL ((('0.17104393900294412'))>=((((vt0.c0)>=(vt0.c0))))) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt1 WHERE (((CASE WHEN NULL THEN '-1731605912' ELSE 'ce' END) BETWEEN (x'' COLLATE NOCASE) AND ((((NULL))>((x'87e5'))))));SELECT ALL ((vt0.c0)||(CAST(vt0.c0 AS REAL))) FROM vt0, vt1 WHERE ((~ (CAST(0.5966702747686804 AS REAL)))); -- 0ms;
SELECT DISTINCT CASE MAX(vt1.c0)  WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) THEN ((((x'')OR(vt0.c0)))AND('c*')) WHEN (vt1.c1 IN ()) THEN AVG(vt1.c0) WHEN vt1.c0 THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)) END FROM vt1 WHERE ((('')<(NULL)) COLLATE RTRIM COLLATE RTRIM);SELECT (NOT ((((('')OR(vt1.c0)))AND(vt1.c1)))) FROM vt0, vt1; -- 0ms;
SELECT ALL (((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END))>=((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c0))))) FROM vt0, vt1 WHERE ((((((NULL))<((0.9981426497119426))))=(('-1830458730' IN ())))) LIMIT -1124872474 OFFSET 2074090064; -- 0ms;
SELECT DISTINCT vt1.c1, '([])', ROW_NUMBER() OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((('2002494452' IN ())) NOT NULL) FROM vt1 ORDER BY (~ (((vt0.c0)<<(vt1.c1)))) DESC;SELECT DISTINCT CAST(((vt1.c1)>(vt1.c1)) AS NUMERIC), MAX(((0X444ea15b) NOT NULL)), (((((vt0.c0) IS FALSE)))<=((((((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0)))OR(0.34336116717691056)))OR(vt1.c0))))) FROM vt1 ORDER BY ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR((vt0.c0 IN ()))))OR(((vt1.c1)IS(vt0.c0)))) DESC;SELECT '' FROM vt1, vt0 LIMIT 772166457; -- 0ms;
SELECT DISTINCT TRIM(((vt1.c1)>=(vt0.c0))), (- ((~ (vt0.c0)))), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (SUM(vt1.c1))) FROM vt1, vt0; -- 0ms;
SELECT ((((NULL)AND(vt1.c1)))AND(vt1.c1)) COLLATE RTRIM FROM vt1, vt0 NOT INDEXED LIMIT -1758842335; -- 0ms;
SELECT DISTINCT (CAST(vt1.c1 AS BLOB) IN ()), CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS BLOB), CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) FROM vt0 LIMIT 1156328394;SELECT ALL (((vt0.c0, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, IFNULL(DISTINCT vt1.c0, vt0.c0), ((((vt0.c0)OR(vt1.c0)))OR(vt1.c1)))) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c1 END, vt1.c1 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))) FROM vt0, vt1 WHERE ((((((((((('-1966290897')OR(x'9277')))AND(0.15845001332546615)))OR(NULL)))OR(NULL)))/(((((((((((((-1.914836081E9)OR(-1.914836081E9)))AND(-1393994767)))AND('993864118')))OR(-1950728551)))OR('-64236568')))AND('	j'))))) ORDER BY ((((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))<=((+ (vt0.c0))))  NULLS FIRST LIMIT 1146003803; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN CAST(vt1.c1 AS REAL) WHEN ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c1)))AND(x'')) THEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c1)) WHEN LIKELY(DISTINCT 0.8264172107155938) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN x'' END ELSE ((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))AND('-1830458730')))AND(vt0.c0)) END FROM vt0, vt1 WHERE ((((((1685644626)) NOT BETWEEN (('')) AND ((NULL)))) NOT BETWEEN (((0.2537590068285077) BETWEEN (NULL) AND (x''))) AND (CASE NULL  WHEN -7.37083869E8 THEN -532687658 ELSE NULL END))) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)) ELSE ((vt0.c0)IS(x'')) END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((0x3b3d29b6 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 END, ((vt1.c0)>=(vt1.c1))))>=((vt1.c1, (vt1.c0 IN ()), ((vt0.c0)|(vt1.c1))))) FROM vt1, vt0 NOT INDEXED; -- 0ms;
SELECT HEX((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))), SUM(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) OVER (), ((((((((((vt1.c1) IS TRUE))AND(((vt0.c0)GLOB(vt0.c0)))))OR((vt1.c1 IN ()))))AND(LOWER(vt0.c0))))OR(((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)))) FROM vt0 WHERE (((((x'')<<(1.371098309E9)))-(((-7.37083869E8) NOT BETWEEN (0xfffffffff57aa8ff) AND (x'')))));SELECT '', ((((vt1.c0)==(vt1.c1)))*('-1559887843')), CASE WHEN IFNULL(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) ELSE ('	' IN (vt0.c0)) END FROM vt0, vt1 WHERE (CAST(NULL COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT TOTAL(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END), (+ ((- (vt1.c1)))), (((((vt0.c0)AND(NULL))))=(('-420972170'))) FROM vt0;SELECT DISTINCT (~ (((vt1.c1)-('890538068')))) FROM vt1, vt0 WHERE ((((+ ('q⯾*4'))) NOT BETWEEN (((NULL) ISNULL)) AND (((-1914836081) IS FALSE)))); -- 0ms;
SELECT DISTINCT CASE MIN(vt1.c0)  WHEN QUOTE(vt0.c0) THEN (((vt1.c1))>=((vt0.c0))) ELSE ('2107290614' IN ()) END FROM vt0 GROUP BY CASE TYPEOF(DISTINCT vt1.c0)  WHEN vt1.c0 THEN ((vt1.c0)IS NOT(vt1.c0)) END;SELECT CAST((- (vt1.c0)) AS BLOB) FROM vt1, vt0 LIMIT 256298000 OFFSET -281216825; -- 1ms;
SELECT DISTINCT (((vt1.c1)) NOT BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND (((((vt1.c1, -3243524.0, x'')) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) FROM vt0;SELECT ((((MIN(vt0.c0))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)) FROM vt0, vt1 WHERE ((- (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) FROM vt1 WHERE (CASE WHEN CASE WHEN '0.7037183741423187' THEN NULL WHEN '0.9157656953280378' THEN '1130785279' WHEN 0.21275827148257453 THEN '' WHEN x'' THEN NULL WHEN 4.19629242E8 THEN 115759958 END THEN CAST(0X18626181 AS TEXT) ELSE (NOT (0X516c0952)) END); -- 0ms;
SELECT ALL (- ((vt0.c0 IN (vt0.c0)))), ((vt0.c0)OR(vt1.c1)) COLLATE NOCASE, FIRST_VALUE(((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((+ (vt0.c0)))))AND(vt0.c0))) OVER ( ORDER BY ((((MAX(vt1.c1, vt1.c1))OR(CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((((vt1.c0))>((vt1.c0))))) DESC  NULLS FIRST) FROM vt0 GROUP BY LIKELY(vt1.c1 COLLATE NOCASE) HAVING (((+ (vt0.c0)))<<(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE x'' END));SELECT ALL x'', ROW_NUMBER() OVER ( ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)  NULLS FIRST ROWS BETWEEN  CURRENT ROW AND vt1.c0 PRECEDING EXCLUDE TIES), 'Vj' FROM vt0, vt1 ORDER BY ((CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 END) NOT NULL)  NULLS LAST, CASE WHEN ((vt1.c0)>=(vt1.c1)) THEN (vt0.c0 IN ()) ELSE (((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END DESC  NULLS FIRST;SELECT vt0.c0, (((vt1.c0 IN ()))&(LIKELIHOOD(vt0.c0, 0.6336922704167524))), CASE WHEN ((((vt1.c0)AND(NULL)))AND(vt0.c0)) THEN (((vt0.c0))==(('1790434259'))) WHEN ((vt1.c1) IS FALSE) THEN (+ (vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN NULL ELSE ((vt1.c1)*(vt1.c1)) END FROM vt0, vt1 ORDER BY (NOT (((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))); -- 0ms;
SELECT ALL COUNT((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) COLLATE BINARY) OVER (), (NOT ((('-2079182802')AND(vt0.c0)))), MAX((vt1.c1 IN (vt1.c0))) FROM vt0 WHERE ((((('-1704636504') IS FALSE)) NOTNULL)) LIMIT -716536451;SELECT DISTINCT MAX(((((vt1.c0)AND(vt0.c0)))OR(vt1.c1))), ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))/(UPPER(DISTINCT vt0.c0))), MIN(((((vt1.c0)AND(vt0.c0)))OR(vt1.c0))) FROM vt0 WHERE ((((- ('542360450')))%(CAST(0x57243d AS REAL)))) ORDER BY (LIKELIHOOD(DISTINCT vt1.c0, 0.22522412957379678) IN ())  NULLS FIRST;SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))<>(COUNT(*))), CASE WHEN (vt1.c1 IN (vt1.c0)) THEN ((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)) WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN (('1044389857')OR(vt1.c1)) WHEN ((vt1.c1)>(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN 0.4078692084059772 THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) END, rtreenode(vt0.c0, vt1.c1) COLLATE BINARY FROM vt0 WHERE ((('') NOT BETWEEN (x'') AND (0.09444174337221412)) COLLATE NOCASE);SELECT DISTINCT SUM(CAST(vt1.c1 AS BLOB)) FROM vt0;SELECT ((((0.9727919233940435) NOT NULL)) IS FALSE), ((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((- (vt1.c0)))), CASE (((vt0.c0, vt1.c0, x''))>((vt0.c0, vt0.c0, vt1.c1)))  WHEN 0.3836926358453694 THEN CAST(vt1.c0 AS NUMERIC) ELSE vt0.c0 END FROM vt1;SELECT ((((vt1.c0)LIKE(vt1.c0))) NOT NULL) FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(vt1.c1 COLLATE BINARY, CAST(vt1.c1 AS REAL)); -- 1ms;
SELECT DISTINCT (- (vt0.c0 COLLATE NOCASE)), ((CAST(vt1.c1 AS NUMERIC))<(((vt1.c0)||(vt1.c1)))), (load_extension(vt0.c0) IN ()) FROM vt1, vt0 NOT INDEXED WHERE (((64506180) NOT NULL)); -- 0ms;
SELECT DISTINCT x'' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((NULL COLLATE RTRIM)/((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((0.6773526673740394))))), (((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c1, vt1.c1)))) BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c1))) AND (((vt1.c0)&(vt1.c0)))), GROUP_CONCAT((vt1.c0 IN ())) OVER () FROM vt1;SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((NULL)|(NULL)))-(CASE WHEN '0' THEN '253817791' ELSE 'TRUE' END))); -- 0ms;
SELECT ALL ((GLOB(vt1.c1, vt1.c0))|(((vt0.c0)||(vt1.c1)))), vt1.c1, (+ (vt1.c1)) COLLATE BINARY FROM vt1, vt0; -- 0ms;
SELECT ((x'e217' IN ()) IN ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))), (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))), vt1.c0, LEAD(((((vt0.c0)OR(vt0.c0)))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 END)), '-1539510610', ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) OVER () FROM vt0 WHERE (highlight(((x'') ISNULL), (((NULL, NULL, 0x374fad48, x'e887', '-835937173')) BETWEEN ((-580008041, '-297323037', '', '-64236568', 0Xffffffff9ebe8ecd)) AND ((NULL, '927968584', '-1700285651', 1799684873, '~D0\rkP>'))), CASE WHEN 0.9286333751282053 THEN NULL END, x'4afe'));SELECT ALL ((TYPEOF(vt1.c1))-(LIKELY(vt1.c0))), vt0.c0, (((INSTR(vt1.c1, vt1.c1)))>=((((vt1.c1) NOT BETWEEN ('1282957465') AND (vt1.c0))))), ((SUM(vt0.c0))<=(COUNT(vt1.c1))), GROUP_CONCAT(DATE(vt1.c0, vt0.c0, vt1.c0)) OVER ( ORDER BY ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c1)))OR(vt1.c1))) IS FALSE) ASC  NULLS LAST, (((('')/(vt0.c0))) IS FALSE)  NULLS LAST) FROM vt0 WHERE ((('179436497') NOT BETWEEN ('Nw.') AND ('0.13284621090114712')) COLLATE NOCASE) GROUP BY '-302047085' HAVING ((('-1560686734', (('{9') NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((vt1.c1)%(x''))))>=(('2086399572', ((x'd636') NOT BETWEEN (vt1.c0) AND (0.8430521056567795)), AVG(vt1.c0)))) ORDER BY ((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE NOCASE;SELECT ALL ROW_NUMBER() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 END)<=(vt1.c1)) FROM vt0;SELECT ((CAST(vt0.c0 AS TEXT))>>(((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))), (((vt1.c0 COLLATE BINARY))>=((CAST(vt0.c0 AS REAL)))), json_array_length(NULLIF(DISTINCT vt1.c1, vt1.c0), ((((vt1.c0)AND(vt0.c0)))AND(NULL))) FROM vt0 LIMIT -1174814618;SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1 WHERE (((((CAST(x'' AS NUMERIC))OR(0.024748829994070465)))OR((((('')OR('')))AND(NULL))))) LIMIT -1053418447 OFFSET 1177935569; -- 0ms;
SELECT ((vt1.c1)!=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1 WHERE (((CAST(NULL AS INTEGER)) NOT BETWEEN (((NULL) ISNULL)) AND (((NULL) NOT NULL)))) ORDER BY IFNULL(DISTINCT vt1.c1, (- (vt1.c1))) DESC  NULLS LAST, (((vt1.c0))<=((vt1.c1))) COLLATE NOCASE ASC; -- 0ms;
SELECT ALL vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT ALL ((COUNT(*)) NOTNULL) FROM vt1; -- 0ms;
SELECT ALL ((((COUNT('CE'))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN 'y#' THEN vt1.c0 END)))AND((vt1.c1 IN (vt0.c0, vt1.c0)))) FROM vt0, vt1 WHERE (CAST(((((0Xffffffffe03fd4d6)OR(x'')))AND('ᗎ3h9')) AS TEXT)) LIMIT 1702718026; -- 0ms;
SELECT ((((vt1.c1) IS TRUE))/(((vt1.c1) NOT NULL))) FROM vt0, vt1 WHERE (((CASE x''  WHEN NULL THEN '1Z6紕_aR' ELSE 0.7373624060625997 END)<(CASE NULL  WHEN '' THEN x'' END))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)>(vt0.c0)) THEN (((vt0.c0, NULL, vt1.c1))<=((vt1.c0, vt1.c0, vt0.c0))) END FROM vt0, vt1 LIMIT 992128317 OFFSET 1717846394; -- 0ms;
SELECT ALL ((((vt0.c0))>((vt0.c0))) IN ()) FROM vt0, vt1; -- 0ms;
SELECT ALL LAG(((vt1.c0)IS(vt0.c0)) COLLATE NOCASE, vt1.c0, (- (((vt1.c0)IS NOT(vt0.c0))))) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((((vt0.c0)<=(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)%(vt0.c0))))) OVER () FROM vt0; -- 1ms;
SELECT ALL (CASE WHEN vt1.c1 THEN vt1.c0 END IN ()) FROM vt1 WHERE (((((x'') ISNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (UPPER(x'3008')))) GROUP BY vt1.c1 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE HAVING ((((vt1.c0) IS TRUE)) IS TRUE); -- 0ms;
SELECT DISTINCT COUNT(CAST(vt1.c0 AS BLOB)) FROM vt1 WHERE (((((x'4b83')GLOB(0.4117718018124189))) NOT NULL)); -- 0ms;
SELECT DISTINCT (((((vt1.c0)*(vt1.c1)), MAX(NULL), (vt0.c0 IN ())))<((vt1.c0, ((vt1.c1)GLOB(vt1.c1)), '1R'))) FROM vt1 ORDER BY CAST(0x0 AS TEXT), CAST(vt1.c1 AS BLOB) COLLATE RTRIM  NULLS LAST LIMIT 407046136 OFFSET -229131566; -- 0ms;
SELECT ((NULL) BETWEEN (vt0.c0) AND ((((vt0.c0))<>((vt1.c1))))) FROM vt1, vt0 WHERE ((((-1.560686734E9)) BETWEEN (((((x'', 'qpHNei', x''))<((0.46209342441310663, 1.044389857E9, 0.7740684122827093))))) AND (((+ (x'')))))); -- 0ms;
SELECT ALL ((((vt1.c1)<=(-2096917853))) ISNULL), AVG(UNICODE(vt1.c1)), ((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)) COLLATE BINARY FROM vt1, vt0 WHERE (CAST(NULLIF(x'28de', x'') AS BLOB)); -- 0ms;
SELECT DISTINCT SUM(((((vt1.c0)AND(vt1.c1)))AND(vt0.c0))), 0x171dff4, (((-3.9838669E8)) NOT BETWEEN ((((vt1.c0)<(vt1.c0)))) AND ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END))) FROM vt1, vt0; -- 0ms;
SELECT ALL ((CASE 1.412982953E9  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE 'mKJk+Zu\n' END)<=(((vt0.c0)|(vt0.c0)))), ((((((vt0.c0)AND(vt1.c0)))AND(vt1.c1))) BETWEEN (((vt1.c1)<>(vt1.c1))) AND (((vt1.c0)+(vt1.c1)))), vt1.c1 FROM vt1, vt0 UNION ALL SELECT DISTINCT (+ ((NOT (x'')))), (AVG(vt0.c0) IN ()), (((((((((+ (vt1.c0)))OR(((((vt1.c0)AND('-306951518')))AND(vt1.c1)))))OR(COUNT(vt0.c0))))OR(((vt1.c0) NOT BETWEEN ('1583113937') AND (-1540433981)))))AND(((vt0.c0)-(vt1.c0)))) FROM vt1 WHERE ((- (NULL)));SELECT ALL (((vt1.c1 IN (vt1.c1, vt1.c1))) NOTNULL) FROM vt1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((load_extension(-647000814, 0.6771432941141088) IN ())) GROUP BY NULL, CAST(CASE WHEN vt1.c1 THEN vt1.c0 END AS NUMERIC), ((vt0.c0 COLLATE BINARY) NOTNULL) HAVING CASE vt1.c1  WHEN ((x'9ded') NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((vt1.c0)=(vt0.c0)) WHEN ((vt0.c0) BETWEEN (0.8411394328170217) AND (vt0.c0)) THEN TOTAL(vt1.c1) WHEN CAST(NULL AS REAL) THEN CASE WHEN vt1.c0 THEN vt1.c1 END END;SELECT DISTINCT HEX(COUNT(-1.145523031E9)), (((vt0.c0)) NOT BETWEEN ((0.08431480276478287)) AND ((vt1.c1))) COLLATE RTRIM, AVG((- (vt1.c1))) OVER () FROM vt1 WHERE ((+ (NULL COLLATE RTRIM))) GROUP BY vt1.c1;SELECT (((vt1.c1 IN (vt1.c1, vt1.c1)))AND(((vt0.c0)-(vt0.c0)))) FROM vt0 ORDER BY (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((NULL)))) NOT NULL);SELECT ((vt1.c1 COLLATE RTRIM) NOT BETWEEN ((~ (vt0.c0))) AND (((vt1.c1)||(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT ((MIN('1743265430')) IS FALSE), COALESCE(vt1.c1, 0.8159796415388754) COLLATE RTRIM, ((vt1.c1 COLLATE NOCASE)|((NOT (vt0.c0)))) FROM vt0 WHERE ((('115759958' COLLATE RTRIM) BETWEEN (CASE WHEN '' THEN x'' END) AND (LIKELIHOOD(x'', 0.04899498868239893)))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))AND(1684546975)) AS INTEGER) ASC  NULLS FIRST;SELECT DISTINCT ((((+ (vt0.c0))))>=(((((vt1.c1))=((vt1.c1)))))) FROM vt0, vt1 WHERE ('s4('); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT vt1.c0)) ISNULL) FROM vt1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1 GROUP BY (- (CASE WHEN vt0.c0 THEN vt1.c0 END)), ABS(DISTINCT ((vt1.c0) NOT NULL)), ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (vt1.c0 COLLATE NOCASE));SELECT DISTINCT LIKE(0X20ed6106, (vt1.c1 IN ()), 'r') FROM vt0; -- 0ms;
SELECT SUM(CAST(vt1.c0 AS REAL)) OVER () FROM vt1 WHERE (((((x''))>(('86634670'))) IN (((((NULL)AND('-1239654576')))AND(1245459739))))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY (((vt0.c0)) BETWEEN ((((vt1.c0) NOT NULL))) AND ((((('893591563', vt0.c0, vt1.c1))<>((vt0.c0, vt1.c0, vt1.c0))))))) FROM vt1, vt0 WHERE (((CASE WHEN '' THEN 'q⯾*4' END) ISNULL)); -- 0ms;
SELECT ALL NTH_VALUE(CAST(((vt0.c0)!=(vt1.c0)) AS REAL), CASE ((vt1.c0)AND(vt1.c1))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (7.98393871E8)) THEN ((vt1.c0)<=(vt1.c0)) ELSE ((vt0.c0)OR(vt0.c0)) END) OVER () FROM vt0, vt1; -- 0ms;
SELECT ALL ((((0.3986509205185288)==(vt0.c0)))OR(json_patch(vt1.c0, vt1.c0))) FROM vt0, vt1; -- 0ms;
SELECT ((((vt0.c0)||(vt1.c1)))<>(((((vt1.c0)AND(vt1.c0)))OR(0.29572180324988495)))) FROM vt0 ORDER BY (NOT (((vt1.c1)<<(vt0.c0))))  NULLS LAST;SELECT (~ ((vt1.c0 IN ()))) FROM vt0, vt1 WHERE (((((0.48240151833063905) NOT BETWEEN (x'') AND ('\nLPM[ᩐ7qI'))) ISNULL)) ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT ALL ((vt1.c1) NOTNULL) COLLATE NOCASE FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((+ (vt1.c1)), NULL, COUNT(vt0.c0)))<(((+ (vt0.c0)), ((vt1.c1) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))), CAST((((vt1.c1, vt1.c1, vt1.c0))<>((vt1.c1, vt1.c1, vt1.c1))) AS NUMERIC), vt1.c0 FROM vt0 WHERE (((NOT (-513649811)) IN ()));SELECT DISTINCT ((vt1.c1 COLLATE BINARY) BETWEEN (x'ab5b') AND (((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c0)))) FROM vt0 GROUP BY ((vt1.c1)<>(vt0.c0)) COLLATE RTRIM;SELECT DISTINCT '' FROM vt1 ORDER BY CAST(((vt1.c0)LIKE(vt1.c0)) AS BLOB) DESC  NULLS FIRST; -- 0ms;
SELECT (((((vt0.c0)IS NOT(vt1.c0)), CASE WHEN vt1.c1 THEN 0.12497187086827288 END, vt0.c0, GROUP_CONCAT(vt1.c1), vt1.c0 COLLATE BINARY))==((((vt1.c0)-(vt0.c0)), (vt1.c0 IN ()), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)), (NOT (vt1.c1)), (vt1.c1 IN ())))), ((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))AND(vt1.c0 COLLATE NOCASE)))OR((vt1.c0 IN (vt0.c0)))), ((((vt1.c1) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (LOWER(vt0.c0))) FROM vt1, vt0 WHERE ((((~ (-103321638))) IS FALSE)); -- 0ms;
SELECT DISTINCT UPPER(0Xffffffffc66bce04), LIKE(((((((((0.31389087333442167)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt0.c0)), vt1.c0 COLLATE RTRIM), (+ ((- (vt1.c0)))) FROM vt1;SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE (NULL); -- 0ms;
SELECT ALL ((CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) NOT NULL), (((((vt1.c0) NOT BETWEEN (vt0.c0) AND (x''))))==((SUM(vt1.c1)))), TOTAL(((vt0.c0) IS TRUE)) FROM vt1 WHERE (NULL);SELECT ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(vt1.c0 AS NUMERIC)) OVER ( PARTITION BY ((((((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))AND(NULL)))AND(vt0.c0)), (((((vt1.c1)) NOT BETWEEN ((0.40379421209807065)) AND ((vt1.c1))))|(CAST(vt0.c0 AS INTEGER))), ((((((((vt1.c1 COLLATE RTRIM)AND(NULL)))OR(vt0.c0)))AND(CAST(NULL AS TEXT))))OR(vt1.c0 COLLATE NOCASE)), ((vt0.c0 COLLATE RTRIM)*(CASE WHEN vt1.c0 THEN vt0.c0 END))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)>=(vt1.c0)))) FROM vt1 WHERE ((NOT ((((((((('\n4')OR(0Xffffffffcda8bea6)))OR(1681144506)))AND(NULL)))OR(x''))))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (LIKELY(DISTINCT (('-1950728551') NOT BETWEEN (NULL) AND (1.570029386E9)))) EXCEPT SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((((vt1.c0) NOTNULL)))) FROM vt0 NOT INDEXED;SELECT DISTINCT GROUP_CONCAT(((((vt1.c1)AND(vt1.c1)))AND(0.5347986693356083))) FROM vt0 WHERE ((((0.21017292920300623)||(0Xfffffffface953f1)) IN ()));SELECT DISTINCT (~ (vt1.c1)) FROM vt0, vt1; -- 1ms;
SELECT ALL (((vt1.c0 IN (vt0.c0)))*((((0Xffffffff80e45a6d)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))) FROM vt0, vt1 WHERE (CASE WHEN ((0.41126493620522886)|(1.15759958E8)) THEN ((NULL) NOT NULL) WHEN (('')>=(0.6718363848466218)) THEN UNLIKELY(DISTINCT 'V㓅') WHEN CASE WHEN '?e*N.7䌠' THEN 0.4625540569342409 END THEN 0xffffffffb48ae0a7 END) LIMIT 1469163692 OFFSET 95346656; -- 0ms;
SELECT ALL (NOT (COUNT(*))) FROM vt0 GROUP BY (((- (vt1.c0))) IS FALSE) HAVING UNICODE((((vt0.c0, vt1.c1, vt1.c1, vt1.c1, vt0.c0))=((vt1.c0, vt1.c0, vt1.c1, vt0.c0, 'Hj')))) LIMIT 1309655192;SELECT ((((vt1.c1)IS(vt0.c0)))%(((vt1.c0)OR(vt1.c0)))) FROM vt1, vt0 WHERE ((((0.9074165578977551 IN (0xffffffffefbc335b))) ISNULL)) GROUP BY CAST(INSTR(vt0.c0, vt0.c0) AS NUMERIC) ORDER BY ((((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))OR(vt0.c0 COLLATE BINARY)))OR('')) ASC; -- 0ms;
SELECT DISTINCT ABS(DISTINCT CAST(vt1.c1 AS INTEGER)), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))) IN ()), CAST(CAST(vt1.c0 AS NUMERIC) AS REAL) FROM vt0;SELECT ALL LIKELY(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))), CASE WHEN ((-2047507423)IS(0.10253354110349966)) THEN vt1.c1 ELSE '0.20822578741296427' END, ((vt1.c0 COLLATE RTRIM) IS FALSE) FROM vt1, vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) AND ((vt0.c0))) FROM vt0, vt1 LIMIT -1613513994; -- 0ms;
SELECT ((LIKELY(NULL))<(vt0.c0)) FROM vt1;SELECT ((vt1.c0 COLLATE NOCASE)<(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))), CAST(CAST(vt0.c0 AS REAL) AS INTEGER), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c1) ISNULL)) AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt0, vt1 WHERE ((((0.5699003429629401)) NOT BETWEEN ((((x'071d') IS TRUE))) AND (((('')%(0.25643563271814984)))))) LIMIT -420972170 OFFSET 1260399252; -- 0ms;
SELECT CASE WHEN CAST(vt1.c0 AS REAL) THEN (('101132354') NOT BETWEEN (vt1.c1) AND (x'1eeb')) WHEN DATETIME(vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c1) THEN NULL WHEN ((-1.437181001E9) IS FALSE) THEN ((vt0.c0)+(vt1.c0)) WHEN CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c1 COLLATE NOCASE THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)) END, MIN(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)), ((vt1.c0)=(vt1.c0))), ((((vt1.c0)/('~䁈'))) NOTNULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (~ (HEX(vt1.c0))) FROM vt0;SELECT DISTINCT '0.8430521056567795', NULL, (((((((((NOT (vt1.c1)))OR(((vt1.c0) ISNULL))))AND(ABS(vt1.c0))))AND((- (vt1.c0)))))OR((((0.5022179435444672)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt1 WHERE (x'');SELECT DISTINCT '0.6936878157181255', (+ (vt0.c0)), CAST(SUM(vt1.c1) AS REAL) FROM vt1 WHERE (((((0X3466431d) NOT NULL))AND((((((((('371301030')AND('-951487933')))AND(0.6168552854898267)))OR(x'dd42')))AND('-1865075000')))));SELECT ALL MAX(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0))) COLLATE NOCASE, vt1.c0, ((((CAST(vt1.c1 AS REAL))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((0.2805769082462357) BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt0;SELECT DISTINCT (LIKELIHOOD(vt0.c0, 0.9359189799064727) IN ()) FROM vt0 WHERE ((((((NOT (NULL)))AND(0X36e7c865 COLLATE BINARY)))OR('613220864'))) GROUP BY (((vt0.c0)-(vt1.c0)) IN (x'')) HAVING (~ (((vt1.c0)*(vt0.c0)))) ORDER BY ((vt1.c1)GLOB(vt1.c1)) COLLATE RTRIM;SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((((vt1.c1) ISNULL))) AND ((CAST(vt1.c0 AS NUMERIC)))) FROM vt0 LIMIT -1681117766;SELECT DISTINCT (((((((((((-1393994767)OR(vt1.c0)))OR(vt0.c0)))AND(x'8e0f')))AND(vt1.c0))))>((((vt1.c0)||(vt0.c0))))) FROM vt0, vt1 WHERE (NULL) LIMIT -9045158 OFFSET -36383698 EXCEPT SELECT DISTINCT LAG(((((vt1.c1)OR(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))))OR(((('>C%]')) BETWEEN ((vt1.c1)) AND ((-1124872474))))), ((((((((1438735442)OR(((vt1.c1) NOTNULL))))OR(((vt1.c0)>>(vt1.c0)))))AND(((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))))OR((- (vt1.c0)))), ((((vt1.c0)>=(vt1.c1)))GLOB('0.5699003429629401'))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt1 WHERE (RTRIM(NULL COLLATE BINARY));SELECT DISTINCT HEX(vt1.c1) FROM vt0, vt1 WHERE (CAST(CASE WHEN 'pC' THEN 0.3780772675629207 WHEN 0.4662763213435662 THEN '-162162290' WHEN 0.663140333729853 THEN x'5758' END AS TEXT)); -- 0ms;
SELECT DISTINCT ((vt0.c0)+(CAST(vt0.c0 AS NUMERIC))) FROM vt0 UNION ALL SELECT DISTINCT ((((vt1.c1) ISNULL)) NOT BETWEEN ((vt0.c0 IN ('-1758842335', x''))) AND (CAST(vt1.c0 AS TEXT))) FROM vt0, vt1 WHERE ((((((x'', '794367438', NULL))==(('', '-560569534', '')))) ISNULL)); -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0)*(vt1.c1))) OVER ( ORDER BY ((((vt1.c1)/(vt1.c1))) ISNULL) DESC) FROM vt1 WHERE (CASE IFNULL(DISTINCT 0.10253354110349966, NULL)  WHEN 0.03913546621252839 THEN ((((NULL)OR(x'')))OR('-585753526')) WHEN CAST('' AS TEXT) THEN (('-1950728551') BETWEEN ('') AND (NULL)) WHEN (('-1330737514') ISNULL) THEN ((0X540dca7d)!=(0.13284621090114712)) END); -- 1ms;
SELECT (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c0)))) NOT NULL), COUNT(*) COLLATE NOCASE, TOTAL(vt0.c0) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(HEX(vt1.c0)) OVER ( ROWS  CURRENT ROW) FROM vt1 INTERSECT SELECT ALL vt1.c1 FROM vt1; -- 0ms;
SELECT ALL ((((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))OR(((vt0.c0)>>(vt1.c0)))))AND(TOTAL('Vj'))))AND('564401665')))OR(COUNT(vt0.c0))), ((vt1.c1) NOT NULL), COUNT(*) OVER (), (((COUNT(*), CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END, ((vt1.c1)<<(vt1.c1))))>((vt1.c0 COLLATE RTRIM, CAST(vt0.c0 AS REAL), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))), ((vt1.c1 IN (vt0.c0, vt0.c0)) IN ()) FROM vt1, vt0 WHERE (((((x'') NOTNULL)) NOTNULL)); -- 0ms;
SELECT TOTAL((+ (vt1.c0))), ((vt1.c0 IN ()) IN ()), ((NULLIF(DISTINCT vt0.c0, vt1.c0))/(0.0989803970649431)) FROM vt0, vt1 WHERE (((UNLIKELY('U%\r')) NOT NULL)); -- 0ms;
SELECT CASE WHEN MAX(vt1.c0) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))) END FROM vt1 WHERE ((NOT (CASE WHEN x'01b7183d' THEN '' ELSE NULL END))); -- 0ms;
SELECT ((((((x'')/(vt0.c0)))AND((- (vt1.c1)))))AND(((vt1.c1)%(vt1.c1)))), (('7_7') IS TRUE) COLLATE NOCASE, AVG(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 END) OVER () FROM vt1 WHERE (((((NULL)<<(1.648553773E9)))&('Vj' COLLATE NOCASE)));SELECT DISTINCT (- (COUNT(*))), (~ (((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))), (((((- (vt1.c1)))AND(CAST(vt0.c0 AS BLOB))))AND(CAST(vt0.c0 AS NUMERIC))) FROM vt1, vt0 EXCEPT SELECT DISTINCT CASE WHEN vt1.c1 COLLATE BINARY THEN vt1.c1 ELSE (- (vt0.c0)) END, (((vt0.c0, ((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)), vt0.c0 COLLATE BINARY))=((vt0.c0, vt1.c1, MAX(vt0.c0)))), vt1.c1 FROM vt0, vt1 WHERE (158892325); -- 0ms;
SELECT DISTINCT NULL FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOTNULL), (NOT (CASE vt1.c1  WHEN vt1.c0 THEN '-59497549' WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)), SUM(x'') OVER ( GROUPS  UNBOUNDED PRECEDING) FROM vt0 WHERE ((((((((((('-92022109')AND(0.4223397443069077)))AND('')))AND(0.5406315460929806)))OR('-1161261563'))) ISNULL));SELECT vt0.c0 FROM vt1 WHERE (((CAST(x'' AS BLOB))==(('NW.' IN ()))));SELECT ALL LEAD((((- (vt0.c0))) IS TRUE), (((- (vt1.c1))) NOTNULL), CAST(((vt0.c0) ISNULL) AS BLOB)) OVER () FROM vt0, vt1 WHERE (((CASE WHEN '\n4' THEN '-146840231' END) NOT NULL)); -- 1ms;
SELECT NULLIF((~ (vt1.c1)), COALESCE(DISTINCT vt0.c0, vt1.c0)) FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT ALL json_extract(CASE WHEN vt1.c0 THEN vt1.c0 ELSE '-1437181001' END, (~ (vt1.c1))) FROM vt1, vt0 WHERE (((((((((TYPEOF(x''))OR(CASE WHEN '.[i(1' THEN 0X7f31b202 WHEN '*|' THEN x'' WHEN 233782062 THEN x'' END)))OR(7.98393871E8 COLLATE BINARY)))AND(LTRIM(x''))))OR((+ (0Xffffffffb3564048)))));SELECT DISTINCT (((((((((~ (vt1.c0)))OR((vt0.c0 IN ()))))AND(AVG(x'b9e3'))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))AND((vt0.c0 IN ()))) FROM vt1 WHERE ((- ((('')*('-1731605912'))))); -- 0ms;
SELECT DISTINCT ((vt1.c1 IN (x'')) IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS TEXT) AS REAL) FROM vt0;SELECT ALL NULL, (((vt1.c1)&(vt1.c1)) IN (vt1.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt1.c0 END)), DENSE_RANK() OVER () FROM vt0;SELECT ALL LIKE((NOT (vt1.c1)), vt0.c0, 'D') FROM vt1;SELECT ((CAST(vt0.c0 AS REAL)) NOT NULL) FROM vt0, vt1 WHERE (((((-1.76510721E8) ISNULL))>>(0.3018282755653402 COLLATE NOCASE))); -- 0ms;
SELECT LENGTH(CASE NULL  WHEN vt1.c1 THEN vt1.c1 END), (((+ (x''))) BETWEEN (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))) AND (((vt0.c0) ISNULL))), CAST('D*0TcGzg檛' AS NUMERIC), CAST(vt0.c0 AS BLOB), ((x'') ISNULL) FROM vt0, vt1; -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS NUMERIC))>((~ (vt1.c0)))) FROM vt1 WHERE ((((1.371098309E9 IN ()))AND(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) BETWEEN (PRINTF(vt1.c1)) AND ((vt1.c0 IN ()))), GROUP_CONCAT(ROUND(vt1.c1, vt1.c0)), ((((vt1.c0)%(1130785279))) NOT BETWEEN (((((vt1.c0)OR(vt1.c1)))OR(vt1.c1))) AND (AVG(vt1.c0))) FROM vt0, vt1; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt1.c0)=(vt1.c1)))) AND ((TRIM(vt1.c0)))) FROM vt1, vt0 WHERE (((((1.684546975E9) NOTNULL))>((0.9439355539976397 IN ())))); -- 0ms;
SELECT DISTINCT ((NOT (vt1.c1)) IN ()) FROM vt1 WHERE (CAST(((1.58892325E8) ISNULL) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((vt1.c0)GLOB((((vt1.c1))<((vt0.c0))))) FROM vt1 WHERE (((('PF.#}M', '-1668657442', '171425402')) NOT BETWEEN (((- (1e500)), (('-562583065') NOTNULL), CASE WHEN '-1816307246' THEN 'V' WHEN NULL THEN 0X5ce61381 WHEN NULL THEN x'' ELSE NULL END)) AND ((NULLIF(DISTINCT 0xffffffff8cf64b7b, '-262279898'), NULLIF(DISTINCT NULL, x'b012'), ((((NULL)OR('o')))AND('598052445'))))));SELECT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOTNULL) FROM vt1 GROUP BY (((vt0.c0, vt1.c1, vt1.c1)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), CASE vt1.c0  WHEN vt0.c0 THEN '' ELSE vt1.c1 END, ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) AND ((((vt1.c0)||(vt1.c1)), CAST(vt1.c1 AS REAL), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), (((NOT (vt1.c0))) NOTNULL), CAST((vt1.c0 IN ()) AS TEXT) HAVING (NOT (vt0.c0 COLLATE NOCASE)) LIMIT -432329688 OFFSET -711871195;SELECT DISTINCT ((((x'5570') BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (CASE WHEN vt1.c0 THEN vt0.c0 END)), ((((((vt1.c1)OR('-1534589530')))OR(CAST(vt0.c0 AS REAL))))OR(vt1.c0)), CAST((vt0.c0 IN (vt1.c0, vt1.c1, vt1.c1)) AS INTEGER) FROM vt1, vt0 ORDER BY (((((vt1.c0)/(vt1.c0))))>((NULL COLLATE BINARY))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((((NOT (NULL)))OR(((vt1.c1) IS FALSE))))AND(CAST(vt1.c1 AS INTEGER))))AND(vt0.c0 COLLATE NOCASE)))AND(vt1.c1 COLLATE NOCASE)) FROM vt0;SELECT DISTINCT CASE (('-1950728551') BETWEEN (vt1.c1) AND (1691984572))  WHEN vt1.c0 THEN vt0.c0 COLLATE BINARY ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END FROM vt1, vt0 WHERE (((0X7fffffffffffffff)<>(((0.6601308045557933)&(-1))))); -- 1ms;
SELECT ALL SQLITE_SOURCE_ID(), ((((vt1.c1)>=(vt1.c1)))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))), ((((((x'') IS FALSE))OR(PRINTF(vt1.c0))))OR(((vt1.c0) NOTNULL))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (~ (LIKELY(DISTINCT vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT JULIANDAY(vt0.c0, ((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c0)>(vt1.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((((((((vt1.c0)OR(vt1.c1)))OR(vt0.c0)))OR(vt1.c1)))OR(vt0.c0))), (NOT (vt1.c0)), (+ ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (vt1.c0 COLLATE BINARY IN ()), NTILE(((('1501193949')) NOT BETWEEN ((vt1.c0)) AND ((((vt1.c1) ISNULL))))) OVER () FROM vt0, vt1 WHERE (CASE ((0.6856575191430183) IS TRUE)  WHEN (('')AND(0.30203440876007537)) THEN ((x'') IS TRUE) END); -- 0ms;
SELECT (+ (vt0.c0 COLLATE RTRIM)), MIN((~ (vt1.c0))), MAX(SUM(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt1, vt0;SELECT (((((vt1.c1 IN ()))AND((vt1.c1 IN ()))))OR((NOT (vt0.c0)))) FROM vt1;SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((('255071215')) NOT BETWEEN ((NULL)) AND ((0.3018282755653402))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (vt1.c0)) THEN ((vt1.c1)>>(vt0.c0)) ELSE vt0.c0 END, ((((((((CAST(vt0.c0 AS NUMERIC))AND(vt1.c0 COLLATE RTRIM)))OR(UPPER(DISTINCT vt0.c0))))OR(((vt0.c0)=(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)), ((((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))<(((vt1.c0)AND(vt0.c0)))) FROM vt0 INNER JOIN vt1 ON (((NULL IN ()))|(((vt1.c1)!=(vt1.c1)))); -- 0ms;
SELECT DISTINCT '-652568189', (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c1 COLLATE RTRIM, ((vt0.c0)!=(vt0.c0)), ((vt1.c1)<(vt1.c1)))) AND (((~ (vt1.c0)), 0.20382613935908067, ((vt0.c0)*(vt0.c0))))), (((CAST(vt0.c0 AS NUMERIC), vt1.c0, TOTAL(vt1.c0), LIKELY(vt1.c1), (vt1.c1 IN ())))=((CAST(vt1.c0 AS NUMERIC), CAST(vt1.c0 AS REAL), ((vt1.c1)+(vt1.c0)), (NOT (vt1.c1)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))), (((((((((((vt0.c0))>=((vt1.c0))))AND(vt0.c0)))OR(((vt1.c1)GLOB(vt1.c1)))))AND(vt1.c1 COLLATE NOCASE)))OR((vt1.c0 IN ()))), CAST(((vt1.c0)LIKE(vt1.c0)) AS REAL) FROM vt0 WHERE (UPPER(((0.11009233785101624)GLOB(1.371098309E9))));SELECT DISTINCT (NOT (((0.46980420364257547) BETWEEN ('\n9') AND (vt1.c0)))), COUNT(*), NTILE((((vt1.c0)=(vt1.c0)) IN ())) OVER ( PARTITION BY ((((((((((vt0.c0) NOT NULL))OR((~ (vt1.c1)))))AND(HEX(vt1.c0))))AND(vt0.c0 COLLATE NOCASE)))AND((+ (vt1.c1)))), vt1.c1 RANGE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((((vt1.c0)+(vt1.c1))))) PRECEDING EXCLUDE NO OTHERS) FROM vt1;SELECT vt1.c0 FROM vt1 WHERE ((((((((((('\nlpm[ᩐ7qi')<=('jR[EZ')))AND(CAST('Su0QA' AS BLOB))))AND(CAST('-1830458730' AS TEXT))))AND((~ (x'')))))AND(((('ER5b6R', x'4790', 0.8731981368821997))<>(('1691984572', x'774a', 0X510d615)))))); -- 0ms;
SELECT ALL (((((~ (vt1.c0)))OR(CAST(vt1.c1 AS TEXT))))AND(CASE vt0.c0  WHEN 0Xffffffff9bba7752 THEN vt0.c0 END)), CASE WHEN ((vt0.c0) NOTNULL) THEN ((vt1.c1)>('')) ELSE (NOT (vt1.c0)) END, CASE WHEN ((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)&(vt0.c0)) END, (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((vt0.c0)*(vt0.c0))))), vt1.c1 FROM vt1;SELECT (((('-353855361')OR(vt1.c1))) NOTNULL) FROM vt0;SELECT CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END THEN (((vt1.c1))>((vt1.c1))) END FROM vt1; -- 0ms;
SELECT ((((vt1.c0)>(NULL)))-(((((((((x'')OR(vt1.c0)))AND('1146003803')))OR(vt1.c1)))OR(vt1.c0)))) FROM vt0 NOT INDEXED WHERE ((((0.2537590068285077)) BETWEEN (((~ (0Xffffffffcaf9ae64)))) AND ((((0.37920318384457463)=(-5.62583065E8))))));SELECT ((((((vt1.c0) NOTNULL))AND(HEX(vt1.c1))))OR(((vt1.c0) IS TRUE))) FROM vt0, vt1; -- 0ms;
SELECT CASE WHEN (~ (vt1.c0)) THEN (+ (vt1.c1)) END FROM vt1; -- 0ms;
SELECT DISTINCT ((vt1.c1)>>(vt1.c1)) COLLATE BINARY, x'', ((('-1e500')) NOT BETWEEN ((GROUP_CONCAT(vt1.c1))) AND (((((vt1.c0))==((vt1.c1)))))) FROM vt1; -- 0ms;
SELECT DISTINCT NULL, ((CAST(vt0.c0 AS NUMERIC))GLOB(((vt0.c0)/(vt1.c1)))), vt1.c0 FROM vt0 GROUP BY (((vt1.c1)=(1577923113)) IN ());SELECT ALL AVG(LOWER(x'6e76')) FILTER(WHERE ((GLOB(vt1.c0, vt1.c1))OR(((vt0.c0)>(vt0.c0))))) OVER () FROM vt0, vt1 LIMIT 2002494452 OFFSET 885991844; -- 1ms;
SELECT DISTINCT CAST(((vt1.c0)OR(vt1.c1)) AS NUMERIC) FROM vt0, vt1 WHERE (((((((NULL)OR(0Xffffffffc2e90a30)))AND(''))) ISNULL)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))), CAST((0.09444174337221412 IN ()) AS NUMERIC), AVG(x'' COLLATE BINARY) OVER (), (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()), '993864118' COLLATE NOCASE FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.c1 IN (vt0.c0, vt0.c0))) BETWEEN ((- ('-20500720'))) AND (UPPER(DISTINCT vt0.c0))) FROM vt1;SELECT DISTINCT AVG(TOTAL((NULL IN (vt1.c1)))) FROM vt1 WHERE (CAST(SUBSTR('1570029386', NULL) AS NUMERIC)) ORDER BY (((CAST(vt0.c0 AS REAL)))=((CAST(vt1.c0 AS BLOB)))) ASC;SELECT DISTINCT CAST(COUNT(*) AS BLOB) FROM vt0, vt1 WHERE ((((((('8X') ISNULL))OR((NULL IN ()))))AND(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((vt1.c0 IN (vt1.c1))) BETWEEN (((vt0.c0)<=(x''))) AND (-1.559887843E9 COLLATE NOCASE)) FROM vt1 WHERE (CAST(((-2.05891482E9)IS(NULL)) AS NUMERIC));SELECT ALL (NOT (vt1.c1)) FROM vt0;SELECT DISTINCT (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS TEXT))) AND (((((vt1.c0))>((x'')))))) FROM vt1; -- 1ms;
SELECT DISTINCT x'd955' FROM vt1; -- 0ms;
SELECT ALL (- ((+ (vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))%(((vt0.c0) ISNULL))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0)))OR(vt1.c1)) FROM vt1 WHERE (((CASE WHEN 1217414078 THEN '-1761055778' END)-((('	vt \n')||(0.7413074499123021)))));SELECT ALL (~ (((vt1.c1) ISNULL))) FROM vt1, vt0 GROUP BY (CAST(vt0.c0 AS INTEGER) IN (vt0.c0, vt1.c1 COLLATE BINARY)) HAVING CAST(vt0.c0 AS REAL); -- 0ms;
SELECT DISTINCT -709393124, ((TRIM(DISTINCT vt1.c0)) NOT NULL), ((((((((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)OR(QUOTE(vt1.c0))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))))AND(((vt1.c1) ISNULL))))AND(((vt0.c0)/(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 WHERE (CASE ((0X4f57367b)<<('?'))  WHEN (NOT ('襸\d')) THEN (('-1754484343') BETWEEN (0.7593278110968901) AND ('1271957080')) END) LIMIT -1830458730 OFFSET 645501391; -- 1ms;
SELECT TYPEOF(DISTINCT ((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0))), ((x'')/(CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 END)), (((vt1.c0)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN x'f71b' WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END)) AND ((CAST(vt1.c1 AS NUMERIC)))) FROM vt1 GROUP BY ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))AND(((vt0.c0)IS(vt1.c1)))))OR(vt1.c1)) HAVING vt1.c0;SELECT ALL GROUP_CONCAT(((NULL)IS NOT(vt1.c1))) FROM vt1 LIMIT 1156328394 OFFSET 1309655192; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC), ((json_remove(vt0.c0, vt1.c0))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt1.c1 WHEN NULL THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)), vt1.c1 FROM vt1, vt0 WHERE (GLOB(CASE '292517094'  WHEN '-1539510610' THEN '421423075' ELSE 0.05352025177923325 END, ((0.5972711170836921) IS TRUE))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))IS NOT((NOT (vt0.c0)))) FROM vt1, vt0 GROUP BY ROUND(CASE WHEN vt0.c0 THEN vt1.c1 WHEN '-511420341' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END, ((vt1.c0)<<(vt0.c0))) HAVING ((vt1.c1)%((vt1.c0 IN ()))); -- 0ms;
SELECT (((- (vt1.c1)))>(((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))), CAST(((vt1.c1)<=(vt0.c0)) AS REAL), CAST(GROUP_CONCAT(vt0.c0) AS NUMERIC) FROM vt0 GROUP BY CAST(vt1.c0 AS REAL) HAVING ((vt1.c0 COLLATE BINARY)||(((vt1.c1) IS FALSE)));SELECT ALL vt1.c0 COLLATE BINARY, CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt1.c1) NOTNULL) WHEN (vt1.c0 IN ()) THEN vt1.c0 COLLATE BINARY WHEN (vt1.c1 IN (vt0.c0)) THEN ((vt1.c0)IS NOT(vt1.c1)) ELSE COUNT(*) END, AVG(CAST(vt1.c1 AS TEXT)) FROM vt0, vt1 WHERE ((- (((x'')>('483760630'))))); -- 0ms;
SELECT ALL TOTAL((vt1.c0 IN (vt1.c0, vt0.c0)) COLLATE NOCASE) FROM vt0 GROUP BY (((+ (vt0.c0)))==((((vt1.c1))<((vt1.c1)))));SELECT RANK() OVER (), (((vt0.c0))>=((1.725424073E9))) COLLATE RTRIM, CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((vt0.c0)<=(vt1.c1))), ('' IN ()), ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)/((((vt1.c1))>=((vt0.c0))))), (NOT (((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))), (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c1)) IN (((vt0.c0) NOT BETWEEN (x'') AND (vt1.c1)))) FROM vt0 WHERE ((NOT (0.549634973562082)) COLLATE RTRIM);SELECT (vt1.c1 IN ()), 0.8271349948606943 COLLATE BINARY, ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) COLLATE NOCASE FROM vt0 GROUP BY vt1.c1, '-1597497890', CAST(((vt0.c0) NOTNULL) AS REAL) HAVING CAST(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END AS INTEGER);SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((MIN(vt1.c0))) AND (((~ (vt1.c0))))) FROM vt1, vt0 ORDER BY (+ ((+ (vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c1)))AND(0.41426256071815526))) FROM vt0 WHERE (CASE WHEN (((NULL, x'', NULL))>((x'4542', 0.03519539754597356, 'iI7'))) THEN (- ('0.7306860854318028')) WHEN x'' COLLATE NOCASE THEN TYPEOF(DISTINCT NULL) WHEN (((NULL))<=((0.5693348971573146))) THEN ((x'')|('ࢸL')) ELSE (- (0.681537104518909)) END);SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((CAST('' AS BLOB))|((NULL IN (NULL))))); -- 0ms;
SELECT CAST((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) AS INTEGER) FROM vt1;SELECT DISTINCT ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END) ISNULL), (((vt1.c0 IN (vt1.c1, 8.663467E7))) NOT BETWEEN (x'') AND (0.23227162376138222)), ((((vt1.c0)>>(x'')))GLOB((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))) FROM vt1 WHERE ((NOT (x'' COLLATE RTRIM)));SELECT DISTINCT (((((('Qt')&(vt0.c0)))OR(NULL)))AND(LIKELY(vt1.c1))) FROM vt0 WHERE (((CASE WHEN x'' THEN '999739977' END) NOT BETWEEN (CAST(0.1257085512505648 AS NUMERIC)) AND ('n/忢pG[i' COLLATE RTRIM))) LIMIT 64506180 OFFSET -648233617;SELECT ALL ((((SUM(vt1.c0))OR(MAX(vt1.c1))))AND(HEX(vt1.c0))) FROM vt1, vt0 WHERE (((('\' IN ()))/((('1412982953')GLOB('2086399572'))))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(vt1.c0 COLLATE BINARY, 0.5520214249882552) FROM vt0 WHERE ((((NULL, 0.7593232753791049, '414967518')) BETWEEN (((((('a')OR(x'')))AND(212842432)), '-1830458730', ((0xfffffffff300b4b4) NOTNULL))) AND ((CAST('1873023323' AS REAL), LOWER(DISTINCT x'482dbfb4'), CASE WHEN 0Xcb347b6 THEN '-1063851644' ELSE x'' END))));SELECT DISTINCT (((vt1.c1)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((CASE vt1.c1  WHEN vt0.c0 THEN '1087691115' END))), CAST(vt1.c1 AS TEXT), MAX((((vt1.c0, vt1.c1, vt1.c1))>((vt0.c0, 0.9091740359878918, vt0.c0)))) FROM vt0;SELECT DISTINCT CASE vt1.c0 COLLATE RTRIM  WHEN (x'' IN (vt1.c0)) THEN (((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0))) ELSE LTRIM(vt1.c0) END FROM vt1 WHERE (CAST((NULL IN ()) AS INTEGER));SELECT DISTINCT ((0.9506916061527457 COLLATE BINARY)IS NOT(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.c0 END)) FROM vt0, vt1 WHERE ((((1725424073)) NOT BETWEEN ((((((((((x'')AND('.(hq]')))AND('-357021594')))AND(x'')))AND(0X30555a87)))) AND ((((0.7674121416976191) IS FALSE))))); -- 0ms;
SELECT vt1.c0, TOTAL(((vt1.c1) ISNULL)), ((vt1.c1 COLLATE BINARY)AND(vt1.c1)) FROM vt0, vt1; -- 0ms;
SELECT NULLIF(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) IS TRUE)) FROM vt1, vt0 GROUP BY NULLIF(DISTINCT CAST(vt1.c1 AS INTEGER), CAST(vt1.c0 AS REAL)) LIMIT -2128270159 OFFSET -871030526; -- 0ms;
SELECT DISTINCT ((vt0.c0)|(((((0Xffffffffef3cf8c7)AND(vt1.c1)))OR(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE 'c/'  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE 798393871 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) WHEN ((vt1.c0)IS NOT(vt1.c0)) THEN ((vt1.c1)%(vt0.c0)) ELSE ((vt0.c0)<=(vt1.c1)) END FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (+ (((1763533413) BETWEEN (vt0.c0) AND (vt1.c1)))), (- (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE '' END)), json_patch(x'' COLLATE NOCASE, 0.4361674735369314) FROM vt0;SELECT ALL ((((vt0.c0)||(vt1.c0))) NOT NULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0, vt1.c0, 0.8167333908349386)) NOT BETWEEN ((vt1.c0, CAST(0.02720081860748247 AS TEXT), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)), 0xffffffff933a2457))), ((CAST(vt1.c0 AS INTEGER))<=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN x'f8d4' THEN vt1.c1 ELSE vt1.c0 END)), GROUP_CONCAT(((vt1.c1)<(vt0.c0))) OVER ( ORDER BY 0.46980420364257547  NULLS LAST) FROM vt1, vt0; -- 0ms;
SELECT (((vt1.c1)) NOT BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((''))) FROM vt0 LIMIT 274033778;SELECT vt1.c1 FROM vt1; -- 0ms;
SELECT ALL ((('0.2805769082462357' IN (vt1.c0)))OR((vt0.c0 IN ()))) FROM vt1; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (AVG('-519003087'))) FROM vt1 GROUP BY vt1.c1 HAVING (~ (rtreenode(vt1.c0, '328369885')));SELECT DISTINCT SUM(((vt1.c1)-(vt1.c0))), CAST(LENGTH(NULL) AS REAL), COUNT(*) FROM vt0, vt1 WHERE (((0.9922152955687384) IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT ALL '' FROM vt1, vt0 WHERE (HEX(NULL COLLATE RTRIM)) GROUP BY CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE BINARY COLLATE BINARY HAVING ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) BETWEEN ((NOT (0Xffffffff97db7274))) AND (SUM('o]㌿^'))); -- 0ms;
SELECT CASE WHEN vt0.c0 COLLATE RTRIM THEN vt1.c0 END, ((CAST(vt1.c0 AS INTEGER))>(vt0.c0 COLLATE NOCASE)), ((((vt0.c0)OR(vt1.c1))) NOT BETWEEN (vt1.c1) AND ((~ (vt1.c1)))) FROM vt0, vt1 WHERE (((('0.0')) NOT BETWEEN (((x'489761db' IN ()))) AND (((('%') IS TRUE))))) GROUP BY CASE WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0) BETWEEN (vt1.c0) AND ('-760455745')) WHEN 'wM' THEN (NULL IN (vt1.c0)) END HAVING ((vt1.c0 COLLATE RTRIM)IS NOT(vt0.c0 COLLATE NOCASE)) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ()) ASC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((0X66d7e1c9) IS FALSE))>=(GROUP_CONCAT(vt0.c0))), ((json_quote(vt1.c0)) NOT NULL), GROUP_CONCAT((vt1.c1 IN ())) OVER () FROM vt0, vt1 ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS LAST; -- 1ms;
SELECT (((((vt1.c1, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt0.c0, vt1.c0)))) NOT BETWEEN (((NULL)==(vt1.c1))) AND (vt0.c0)) FROM vt0 WHERE (CAST(((NULL)&(0xfffffffffdd4d42e)) AS REAL));SELECT ALL ((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1))) BETWEEN (((vt1.c1)&(x''))) AND (((vt1.c1)GLOB(vt1.c1)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (('0.8632393016792943')OR((vt1.c1 IN ()))), LIKELY(DISTINCT (vt1.c0 IN ())), (((((vt1.c1 IN ()))AND(((vt1.c1)=(vt0.c0)))))AND((NOT (vt1.c0)))) FROM vt1 WHERE (CASE WHEN ((NULL) BETWEEN (0X77585fd4) AND (0.5824005149873913)) THEN ((('-1e500'))<=((0.2095433114275277))) WHEN CASE 0.5573055128770845  WHEN '1691984572' THEN x'' WHEN 0.39693549983445553 THEN 0.8053912493533726 WHEN 0.7987394080330613 THEN -562816428 WHEN '-36383698' THEN x'' WHEN x'' THEN 0.08271004266981186 ELSE NULL END THEN (((NULL, '', '804150556')) BETWEEN ((0.11925456214180408, NULL, '')) AND (('ng', 0.45414356136198886, '-1488311298'))) WHEN ((((1143468962)AND('1648553773')))OR(1350602346)) THEN json_array('2u?\n㌿ௌR', 0.1884141003404256) WHEN '槿2' COLLATE RTRIM THEN (~ ('䳅].6b')) WHEN (('115759958') ISNULL) THEN SQLITE_COMPILEOPTION_GET('') END); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), ((((((vt1.c0)OR(vt1.c1)))OR(vt0.c0))) BETWEEN ((NOT (vt1.c0))) AND ((x'6e07' IN ()))), '' FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) OVER (), SUBSTR(((vt1.c0)==(vt1.c0)), GROUP_CONCAT(vt1.c1)), ((vt1.c0 IN (vt0.c0)) IN ()) FROM vt0 WHERE (((('*5' IN (NULL, '')))<>('GTF ' COLLATE BINARY)));SELECT DISTINCT (((vt0.c0))>((COUNT(*)))) FROM vt0, vt1 LIMIT -1697851022 OFFSET 1788843555; -- 0ms;
SELECT vt1.c1 FROM vt1, vt0 WHERE (((((((((('0.30203440876007537')AND('0.6213799859256561')))OR('Up뗋')))AND('')))OR(NULL)) IN ())) GROUP BY CASE WHEN SUBSTR(vt0.c0, vt0.c0) THEN ((vt1.c1)IS NOT(vt0.c0)) ELSE 1004674669 END; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt1.c1))) NOT BETWEEN (COUNT(*)) AND (((((vt1.c1)AND(vt0.c0)))OR(0.43627447995706237)))) FROM vt1;SELECT ALL SUM((- (vt0.c0))) OVER (), HEX(DISTINCT MAX(NULL)), CAST(((vt1.c1)==(vt1.c0)) AS BLOB) FROM vt0 WHERE (((((1121723334) BETWEEN (0.139100345081127) AND (0x772ecc7)))<((((0.7037183741423187, NULL, '309814823', '>C%]', 0.3888185387518135))>=((0.9638464287307318, 0.43763259701765367, 0.7029025424336652, 0xffffffff893c94e7, 'Upy0p')))))) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))) IN ()) ASC;SELECT ((COUNT(0.28929458473506564)) BETWEEN ((NOT (vt0.c0))) AND ((vt1.c1 IN ()))), (~ (CAST(vt1.c1 AS INTEGER))), ((LOWER('p015\r쏶3'))%(LIKELIHOOD(vt0.c0, 0.8530704501441241))) FROM vt1, vt0 WHERE ('?JRax㺶Hb') GROUP BY CASE (~ (vt0.c0))  WHEN vt0.c0 THEN vt1.c1 WHEN (+ (vt1.c1)) THEN ((vt0.c0)OR(vt1.c0)) WHEN vt0.c0 COLLATE BINARY THEN CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END END HAVING UNLIKELY((vt1.c0 IN ())); -- 0ms;
SELECT ((((vt0.c0)/(vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))), CAST((((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) AS NUMERIC), ((~ (vt1.c1)) IN (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))OR(vt0.c0)))) FROM vt0 WHERE ((((((((-644623391, NULL, NULL)) BETWEEN ((0Xffffffff81fc3193, 0.8034782606461192, NULL)) AND (('', '1929661750', NULL))))OR((NOT (x'')))))AND(((x'')OR(0.49914713824035917))))) GROUP BY 0.06993817461926266 HAVING ((((vt0.c0))<=((vt1.c1))) IN ());SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (x'bb12')))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((8.93484309E8)) BETWEEN ((vt1.c1)) AND ((x'07bc'))))) FROM vt1 WHERE (CHANGES());SELECT AVG(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE BINARY) OVER () FROM vt0, vt1; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c1)))) AND ((1937743650))), '祶_囚?(K', IFNULL(DISTINCT (((-1132169243, vt1.c1, vt1.c1))>((vt0.c0, vt0.c0, vt1.c0))), CAST(vt1.c0 AS BLOB)) FROM vt0 WHERE (CASE WHEN 0.3784126328147681 COLLATE BINARY THEN CAST('V' AS BLOB) ELSE '^9' END) ORDER BY (((vt1.c1, vt1.c1, vt0.c0))!=((vt1.c1, vt1.c0, vt1.c0))) COLLATE NOCASE ASC;SELECT NULL COLLATE RTRIM, ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt1.c1) IS FALSE))), (((((- ('')))AND(((vt1.c0) BETWEEN ('-1631678771') AND (vt0.c0)))))OR(vt1.c0)) FROM vt1, vt0 GROUP BY (((vt1.c1)) NOT BETWEEN ((((vt1.c1)-(vt0.c0)))) AND ((vt1.c0))); -- 0ms;
SELECT ALL (((vt1.c0, '7QC V', vt0.c0)) BETWEEN ((x'755e3409', ((NULL)=(vt1.c1)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0 COLLATE NOCASE, ((vt1.c0)AND(vt1.c0)), SQLITE_VERSION()))) FROM vt1 WHERE (CASE ((0.15637881270169296)AND(NULL))  WHEN CAST(NULL AS INTEGER) THEN CAST(0.6846508629877608 AS INTEGER) ELSE CASE x''  WHEN -6.4236568E7 THEN x'' WHEN '-420972170' THEN x'' WHEN '-2031982165' THEN x'' ELSE NULL END END) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOTNULL)  NULLS FIRST;SELECT DISTINCT 0.2292432275719336, (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END, NULL))>(((((vt0.c0))>((vt0.c0))), AVG(vt1.c0), (NOT (vt1.c1))))), (((+ (x'')))LIKE((vt1.c0 IN (vt1.c0)))) FROM vt0;SELECT ALL ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))OR(((vt1.c1)==('51467340')))))AND(TRIM(DISTINCT x''))))OR(CASE 680798965  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND('4')) FROM vt0 WHERE (TRIM(DISTINCT (x'' IN ()), ((x'') NOT NULL)));SELECT DISTINCT AVG(((vt1.c1) IS FALSE) COLLATE BINARY) OVER () FROM vt1 WHERE ((((((+ (0.17104393900294412)))AND(CASE WHEN 0.45427108680088946 THEN x'' END)))OR(('1570029386' IN (-1758842335))))) GROUP BY ((((vt1.c0)-(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((NOT (vt0.c0)))), CAST(((vt1.c0)==(vt1.c1)) AS NUMERIC), (vt1.c1 IN (CAST(vt0.c0 AS REAL))), ((((vt1.c0)%(vt1.c1)))<((- (vt1.c1)))), vt1.c1 HAVING (NOT (CAST(vt1.c0 AS NUMERIC))) ORDER BY CASE TRIM(vt1.c0)  WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)) THEN ((((vt1.c1)AND(vt0.c0)))OR(vt1.c0)) END;SELECT DISTINCT CAST(((vt1.c1) NOT NULL) AS BLOB), (((((((((('-462074860')AND(vt0.c0)))AND(vt1.c1)))OR(NULL)))AND(vt1.c1)))>(vt0.c0)), CAST((vt0.c0 IN ()) AS INTEGER) FROM vt1 WHERE (((CAST(NULL AS BLOB)) NOTNULL)) ORDER BY vt0.c0 LIMIT 614877591;SELECT DISTINCT LAG(IFNULL(CAST(vt0.c0 AS TEXT), ((((((((((((vt0.c0)AND(0.058702950657662734)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))), ((((x'') IS FALSE)) NOT BETWEEN ((NOT (vt0.c0))) AND ((+ (vt0.c0)))), (((0.6593713301704257, vt0.c0, vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((CASE WHEN 0.8264172107155938 THEN vt0.c0 END, CAST(vt0.c0 AS REAL), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN '-1368078253' ELSE vt0.c0 END, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('Upy0p', x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))) OVER ( ROWS BETWEEN (((+ (vt0.c0)))!=(((((((((vt0.c0)AND(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c1)))) PRECEDING AND ((CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.7539541181244109 END) IS FALSE) FOLLOWING EXCLUDE NO OTHERS) FROM vt0; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS NUMERIC)  WHEN json_remove(vt1.c0, vt0.c0, x'', vt1.c0) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END ELSE vt0.c0 END, CAST(((vt1.c1) IS FALSE) AS NUMERIC), (GROUP_CONCAT(vt1.c1) IN ()) FROM vt0 WHERE (((x'')%('-1678390266')) COLLATE RTRIM);SELECT CAST(vt0.c0 AS TEXT) FROM vt1 WHERE (CAST(((x'62d6') BETWEEN (1.496975981E9) AND ('1186418639')) AS INTEGER));SELECT DISTINCT (+ (((vt1.c0) IS TRUE))) FROM vt1, vt0 WHERE (CASE WHEN ((NULL)&('0.7740684122827093')) THEN ((NULL)-(1.835973873E9)) ELSE (~ (NULL)) END); -- 0ms;
SELECT ALL (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))<=((((((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))AND(NULL)))OR(vt0.c0))))) FROM vt0;SELECT DISTINCT (((vt0.c0 COLLATE BINARY))!=(((vt1.c0 IN ())))) FROM vt0, vt1 WHERE ((((('jd') IS FALSE))>=(CASE WHEN NULL THEN '\rQQ4_ᩐ' ELSE NULL END))); -- 1ms;
SELECT vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))IS NOT(((vt1.c0)IS(x''))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c1, vt1.c0, CASE LIKELIHOOD(vt1.c0, 0.4329291347196931)  WHEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)) THEN vt1.c0 ELSE (- (0.9566210326362503)) END FROM vt0, vt1 GROUP BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<=(((-941777137) NOT NULL))) HAVING vt0.c0; -- 0ms;
SELECT ((AVG(NULL))OR(CASE '596682816'  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END)) FROM vt0, vt1; -- 0ms;
SELECT (vt1.c1 IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (NOT (((7.94367438E8) NOT BETWEEN (vt0.c0) AND (vt1.c1)))), ((vt1.c0)-(vt1.c0)) COLLATE RTRIM COLLATE RTRIM, vt1.c0, (CASE WHEN -9045158 THEN vt1.c0 ELSE vt0.c0 END IN ()), rtreenode(vt1.c0 COLLATE RTRIM, (NOT (-1276480108))) FROM vt1 WHERE (((((x'')<('-661998169')))|((NOT (x''))))) LIMIT 1618332032;SELECT vt1.c1 FROM vt1, vt0 WHERE (CASE WHEN (('-2118121169') IS TRUE) THEN CAST(1837601802 AS TEXT) ELSE 'BJ' END); -- 0ms;
SELECT DISTINCT (('JXyn]') NOTNULL) COLLATE RTRIM, ((vt1.c0)>>(vt1.c1 COLLATE RTRIM)), NTH_VALUE((((vt1.c1 IN ())) IS TRUE), (((0.7997002393976306))>=(((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))))) OVER () FROM vt1 LIMIT 1385651992;SELECT DISTINCT TYPEOF(CAST(vt1.c0 AS INTEGER)) FROM vt1; -- 0ms;
SELECT (((vt1.c1, vt1.c1, vt0.c0)) BETWEEN (((((vt1.c0, vt0.c0, vt1.c0))>((vt0.c0, vt1.c1, vt1.c1))), (NOT (vt1.c1)), vt1.c1)) AND ((0Xffffffffe82a1afe, ((vt1.c0) NOTNULL), (((vt1.c1))<((vt0.c0)))))) FROM vt1;SELECT DISTINCT (~ (((vt1.c0)<<(vt1.c1)))), NULLIF(DISTINCT vt1.c1, vt0.c0) COLLATE BINARY, ((vt1.c0 COLLATE NOCASE)>=(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))) FROM vt1 LIMIT -2008868609;SELECT DISTINCT GROUP_CONCAT(((((((((0.4476867542588825)OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c1))) OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE)|(vt1.c0 COLLATE RTRIM)) FROM vt0, vt1 WHERE ((NOT (((0.6771432941141088)AND(-1.731605912E9))))) LIMIT -1928075733 OFFSET 1717846394; -- 1ms;
SELECT DISTINCT ((MIN(vt0.c0, vt1.c1, 0.7792470448421838, vt1.c1)) NOT NULL) FROM vt0 ORDER BY ((vt1.c0)IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))));SELECT ALL vt1.c1, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS NUMERIC), SUM(((vt1.c0)IS NOT(vt1.c1))) OVER () FROM vt1 WHERE ((CAST(0.42501644832707763 AS NUMERIC) IN ()));SELECT DISTINCT CAST((vt1.c0 IN ()) AS BLOB) FROM vt0 WHERE (CASE ((0.21419888413270038) NOT BETWEEN (NULL) AND (''))  WHEN LIKELY(DISTINCT '1725424073') THEN RTRIM('~㘌V3j^E') WHEN (NOT ('-1758842335')) THEN ((x'd3f1') BETWEEN (1496975981) AND (NULL)) WHEN (('')GLOB(')6')) THEN CAST(NULL AS BLOB) WHEN (('	j')>(0.21059449704153033)) THEN ((('1426575928', 0.2568272630614522, x'f7fc3b28')) NOT BETWEEN ((NULL, 0.11009233785101624, NULL)) AND (('gP>w|BI', NULL, 0.8016580415747645))) WHEN CAST('2u?\n㌿ௌr' AS REAL) THEN (('	vt \n')==(0.4342462324493871)) ELSE ((3.98919783E8)<=(NULL)) END) GROUP BY (((- (vt1.c0))) NOT NULL) HAVING CAST((((vt1.c0))=((vt1.c1))) AS INTEGER);SELECT DISTINCT ((((vt1.c1) NOT NULL))AND((((vt1.c1))>((vt1.c1))))) FROM vt0 WHERE (UNLIKELY(-9223372036854775808));SELECT DISTINCT ((TOTAL(vt1.c1)) BETWEEN ((NOT (vt0.c0))) AND ((((vt1.c0))<=((vt0.c0))))) FROM vt0, vt1 WHERE (LOWER(DISTINCT ((x'7a0c') NOT NULL))); -- 0ms;
SELECT DISTINCT ((UNICODE(vt1.c0)) BETWEEN ((vt1.c1 IN ())) AND (((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(-1341751099)))) FROM vt1;SELECT ALL ((((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))<<((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) FROM vt0 WHERE (((CASE WHEN 'QmGB' THEN 0x763eb701 WHEN NULL THEN 1.717846394E9 WHEN x'' THEN 0.2568272630614522 ELSE x'' END) BETWEEN (json_quote(NULL)) AND (TOTAL_CHANGES())));SELECT DISTINCT COUNT(*) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)+(vt0.c0)))IS((NOT (vt1.c0)))) FROM vt0 LIMIT -2072879262;SELECT ALL (((((((((((NULL, vt1.c1, vt0.c0))<((vt0.c0, x'', vt0.c0))))AND(vt1.c0 COLLATE NOCASE)))OR(CASE vt1.c1  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))OR(CAST(vt1.c0 AS INTEGER))))AND(CAST(vt0.c0 AS TEXT))), (CAST(vt1.c1 AS INTEGER) IN ()), vt1.c1 FROM vt1 GROUP BY json_extract(((vt1.c0)LIKE(vt1.c1)), (vt0.c0 IN ())) HAVING ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)AND(vt1.c1)))AND(vt0.c0)))))OR(GROUP_CONCAT(vt1.c0)));SELECT DISTINCT ((2.002280404E9) NOT BETWEEN ((vt1.c1 IN ())) AND (NULL COLLATE RTRIM)), CAST((((vt1.c1))<((vt1.c0))) AS REAL), TOTAL(CASE vt0.c0  WHEN vt1.c1 THEN NULL END) FROM vt1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((((+ (vt1.c0)))AND(((vt1.c1) IS FALSE))))AND(((vt0.c0)<(vt1.c1)))) FROM vt1, vt0 WHERE ((CAST(NULL AS NUMERIC) IN ())); -- 0ms;
SELECT ((('-6943285')AND(vt0.c0)) IN ()), COUNT(*) OVER ( PARTITION BY x'e3a1', CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 END AS INTEGER)), (((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c1, vt1.c1, vt1.c0)) AND ((vt0.c0, vt1.c1, vt1.c0))))%((vt1.c1 IN ()))) FROM vt0;SELECT DISTINCT (((vt0.c0)) BETWEEN ((x'6e75')) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))))) FROM vt1 LIMIT -1336906784 OFFSET 261006206;SELECT CUME_DIST() OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((LIKE(vt1.c0, vt1.c1, '찆')) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((((vt1.c1, vt0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c1, vt0.c0)) AND ((vt1.c1, vt1.c0, vt1.c0))))) FROM vt1, vt0 WHERE (CASE (((x'', x'', '343764083', 256298000, NULL)) BETWEEN ((NULL, '', x'22e2', '-595485545', '')) AND (('%%#0\n%', '1632791159', x'', '', x'')))  WHEN (x'b320' IN ()) THEN (NULL IN ()) END); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (-1239654576) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt0;SELECT ALL COUNT(((vt0.c0)+(vt1.c0))) OVER () FROM vt1 WHERE (((('FU' COLLATE RTRIM))>=((LOWER(DISTINCT x''))))) LIMIT -1437181001 OFFSET 1691984572;SELECT DISTINCT ((((vt1.c1 COLLATE NOCASE)AND(NULLIF(DISTINCT vt0.c0, vt0.c0))))OR((vt0.c0 IN ()))) FROM vt1 GROUP BY vt1.c0;SELECT DISTINCT (((((vt1.c1)OR(vt0.c0)))OR(vt1.c1)) IN (((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))) FROM vt1 WHERE ((((- ('t')))/((((NULL, 0.02869416230717603, NULL)) NOT BETWEEN ((0.19486493832264307, '0.5347986693356083', x'')) AND ((0.7897766750598043, '8X', '!s+Q'))))));SELECT DISTINCT (((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))))OR(vt1.c1)))AND((~ (vt0.c0)))) FROM vt1 WHERE ((((((('7QC V')OR(x'df05')))AND(x'84aa')))GLOB(((NULL) BETWEEN ('-1145523031') AND (NULL)))));SELECT DISTINCT (- (vt1.c0 COLLATE NOCASE)), COUNT(CASE WHEN 0x780e6141 THEN vt1.c0 ELSE vt0.c0 END), ((((json_quote(0.8323622612314666))AND(((vt1.c1) ISNULL))))OR(TOTAL_CHANGES())), ((((((vt0.c0) NOT NULL))AND(((vt0.c0)LIKE(vt1.c0)))))OR(0.363208684323564)), ((((((vt1.c0)OR(vt0.c0)))AND(vt1.c1)))>>(CHANGES())) FROM vt0;SELECT DISTINCT LAG(NULL, ((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1))) IS FALSE), (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))>=((((vt1.c1)>(vt1.c1)))))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT (- (((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))), (((NOT (vt0.c0)))AND(((vt1.c0) NOT NULL))), CAST(('955414023' IN ()) AS BLOB) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT NULL) FROM vt0, vt1 WHERE (((x'')>=(((0.38306473330549573)GLOB(0xffffffffe54e1786))))) LIMIT -1542872525; -- 0ms;
SELECT DISTINCT ((COUNT(vt1.c1))IS NOT(COUNT(*))), (((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((((vt0.c0)|(vt1.c0)), vt0.c0 COLLATE NOCASE, vt1.c1 COLLATE BINARY)) AND ((((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)), LOWER(DISTINCT vt0.c0), ((vt1.c0) BETWEEN (vt1.c1) AND (NULL))))), CAST((~ (vt1.c0)) AS TEXT) FROM vt1, vt0 WHERE (((INSTR('1412982953', NULL)) NOT BETWEEN ((('')>>('b'))) AND ((~ ('C'))))); -- 1ms;
SELECT DISTINCT ((((vt1.c1)>(vt1.c0))) NOTNULL) FROM vt0, vt1 GROUP BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) IS TRUE) ORDER BY 'F[揻' DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c1)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN 990308265 END, MAX(vt0.c0), TOTAL(vt1.c1), CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN '1637393414' ELSE vt0.c0 END, vt1.c1)) AND ((CAST(vt1.c1 AS NUMERIC), HEX(vt1.c0), (~ (vt0.c0)), COUNT(vt1.c0), COUNT(*)))) FROM vt1 WHERE ((- (CAST(0.1586498141871724 AS TEXT))));SELECT DISTINCT CASE WHEN NULLIF(vt1.c0, vt0.c0) THEN HEX(DISTINCT vt0.c0) ELSE ((((0.17559561510428745)AND(vt1.c1)))OR(vt1.c1)) END FROM vt0, vt1 ORDER BY (((((NULL)<<(vt1.c1)), (((vt1.c1))<((vt1.c1))), (vt0.c0 IN ())))>=((vt1.c1, (((vt0.c0, 1.309655192E9, NULL))<>((vt1.c1, vt1.c0, vt1.c1))), (((0X5ef5d0d4))<=((vt1.c1)))))); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE BINARY, (~ (vt1.c1)) COLLATE RTRIM, ((- (vt0.c0)) IN ()) FROM vt1 WHERE (-1341742895);SELECT DISTINCT CASE vt0.c0  WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt1.c0) ISNULL) FROM vt1, vt0 WHERE ((((('893484309')=(x'')))*((NOT (x''))))) ORDER BY ((vt1.c1 IN ()) IN (((vt1.c0)LIKE(vt0.c0)), (vt1.c1 IN ()))) LIMIT 1203495456; -- 1ms;
SELECT DISTINCT CASE LOWER(vt1.c0)  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END THEN UNLIKELY(vt1.c0) ELSE ((vt1.c0)*(vt1.c1)) END, GROUP_CONCAT(((0x1) NOT BETWEEN (vt1.c0) AND (vt0.c0))), ((CASE WHEN vt1.c1 THEN vt1.c0 END) ISNULL) FROM vt1, vt0 WHERE ((((-7.37083869E8 IN ())) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((((((((vt1.c0)AND(vt0.c0)))AND(219981429)))OR(((vt0.c0)/(vt1.c0)))))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((- (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS NUMERIC)))<=((((vt1.c1)&(vt0.c0))))), NULL, CAST(((NULL) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB) FROM vt1 ORDER BY ((CASE vt0.c0  WHEN -1678390266 THEN vt1.c1 WHEN x'' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END) IS FALSE) ASC  NULLS LAST, ((((((((((vt1.c1)IS NOT(vt0.c0)))AND(vt1.c1)))OR(NULLIF(vt1.c0, vt1.c0))))AND(LIKELIHOOD(DISTINCT vt1.c1, 0.8547430390472867))))OR('6'));SELECT ALL CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL) FROM vt1 WHERE ((~ ((- (''))))); -- 0ms;
SELECT ALL (vt1.c1 IN ()), LAST_VALUE((- (((vt0.c0)&(']l1tDL'))))) OVER ( ORDER BY vt0.c0, ((vt0.c0 COLLATE RTRIM)LIKE((vt0.c0 IN ())))  NULLS FIRST), CAST(((((vt0.c0)AND(vt1.c1)))AND(vt1.c0)) AS BLOB) FROM vt0 WHERE ((((((x'79d5', 1.648553773E9, '')) BETWEEN (('rG', '83591222', 'ʉ6 Mi')) AND (('', 1717846394, '-1363978534')))) NOTNULL));SELECT DISTINCT CAST(((vt1.c1) NOT NULL) AS BLOB), ((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))*((((vt0.c0, vt1.c0, vt0.c0))==((vt0.c0, vt1.c0, x'4953'))))), CAST(LIKE(vt0.c0, vt0.c0) AS NUMERIC) FROM vt1;SELECT ALL (x'' IN ()) FROM vt1, vt0 WHERE (CAST((('PF.#}M') ISNULL) AS TEXT)); -- 0ms;
SELECT DISTINCT (((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)) IN (vt1.c0)), (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))), CAST(((vt1.c0)||(vt1.c1)) AS INTEGER) FROM vt1;SELECT ((((vt1.c0)IS NOT(vt0.c0)))LIKE((vt1.c0 IN ()))) FROM vt0, vt1 WHERE ((+ ((('VBV.KgG1') NOTNULL)))); -- 0ms;
SELECT DISTINCT TRIM(CASE 0.29545520947905257  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0;SELECT DISTINCT (+ (TRIM(vt0.c0, vt1.c1))) FROM vt0 WHERE (((((x'')+('X')))IS NOT(''))) GROUP BY vt1.c0, vt0.c0 COLLATE BINARY COLLATE BINARY COLLATE RTRIM, ((((vt0.c0)OR(vt1.c1)))-(CAST(vt1.c1 AS NUMERIC))), (((vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))) AND (((- (vt1.c0))))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) IN ());SELECT LEAD(((((vt1.c1)OR(vt1.c1 COLLATE BINARY)))AND(((vt0.c0)IS NOT(vt1.c0)))), (((x'', vt1.c0, vt1.c1, x'dd18', vt1.c1)) BETWEEN ((CAST(vt1.c1 AS REAL), ((vt1.c0) IS TRUE), (NOT (NULL)), ((vt0.c0)<<(vt1.c1)), ((vt0.c0) NOTNULL))) AND ((vt1.c0, CASE vt0.c0  WHEN vt1.c1 THEN x'' END, ((vt1.c1) ISNULL), CAST(vt1.c1 AS BLOB), vt1.c1))), (((((vt1.c0, vt1.c1, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))<=(((vt1.c1)!=(vt0.c0))))) OVER () FROM vt0, vt1 WHERE (CAST(((NULL) NOT BETWEEN (0.3570840380512954) AND (0.7050693450755339)) AS INTEGER)); -- 0ms;
SELECT ALL ((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM FROM vt0 WHERE (((NULL) IS TRUE));SELECT DISTINCT (('-1608958453' COLLATE RTRIM)IS NOT(vt1.c0 COLLATE BINARY)) FROM vt0;SELECT DISTINCT ((CAST(x'8ed4' AS BLOB)) NOT BETWEEN (IFNULL(vt1.c0, vt1.c1)) AND ((vt1.c1 IN ()))) FROM vt0 WHERE (1.371098309E9);SELECT DISTINCT vt0.c0 FROM vt1;SELECT ((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))LIKE(vt0.c0)), (NOT (vt1.c1)), (((COUNT(vt1.c1), (vt1.c1 IN (vt0.c0)), ((((vt1.c1)AND(vt1.c0)))AND(vt0.c0))))<((CAST(vt0.c0 AS BLOB), ((vt1.c1)IS(vt1.c1)), vt1.c0))) FROM vt1 WHERE ((((('c/')IS(NULL))) BETWEEN (CAST(NULL AS NUMERIC)) AND ((((x''))<>((NULL))))));SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c0))))<=((NOT (vt1.c0)))), (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)), AVG(((vt0.c0)%(vt1.c1))) OVER () FROM vt1;SELECT x'' FROM vt1, vt0 WHERE ('228234057'); -- 0ms;
SELECT DISTINCT (((0X4e4a118a) BETWEEN (2025068294) AND (vt1.c1)) IN ()), ((((((((((vt1.c0) IS FALSE))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END)))AND(vt1.c0)))OR((((vt0.c0))<=((vt1.c1))))))OR(vt1.c1 COLLATE BINARY)), (((~ (vt1.c0)))||(NULL)), ((CAST(vt1.c0 AS NUMERIC))LIKE(vt0.c0)), CASE WHEN vt1.c1 THEN GROUP_CONCAT(vt1.c1) WHEN MIN(vt1.c0) THEN (NOT (vt1.c0)) WHEN vt1.c0 COLLATE BINARY THEN json_patch(vt0.c0, vt1.c0) WHEN CAST(vt1.c0 AS REAL) THEN GROUP_CONCAT(vt1.c1) WHEN ((vt1.c0)=(vt1.c0)) THEN vt1.c1 COLLATE RTRIM END FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((NULL) NOTNULL)));SELECT ALL vt1.c1 FROM vt1; -- 1ms;
SELECT DISTINCT 2.086399572E9 FROM vt0; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((((-304127732) NOT BETWEEN (0X3d84944) AND (x'1e84')) IN ())); -- 0ms;
SELECT DISTINCT (+ (AVG(vt1.c0))) FROM vt1 WHERE ((CAST('' AS REAL) IN ())); -- 0ms;
SELECT COUNT(*) FROM vt1; -- 0ms;
SELECT DISTINCT ((((((((((((NULL)AND(vt1.c1 COLLATE RTRIM)))AND(CASE WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)))AND(RTRIM(x'bdb8'))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (0.657017545420119)))))OR(-737083869)))OR((((vt0.c0))>((vt0.c0))))) FROM vt1, vt0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0, vt1 WHERE ((']0' IN ()) COLLATE NOCASE); -- 0ms;
SELECT (~ (CAST(2.086399572E9 AS NUMERIC))), COUNT(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) OVER (), AVG(vt1.c0) FROM vt1 NATURAL JOIN vt0 ORDER BY (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) IN ()) DESC; -- 0ms;
SELECT DISTINCT ((((5.9627835E8)==(vt1.c0))) BETWEEN ((vt1.c1 IN ())) AND (ROUND(vt1.c0, x'5d32'))), (((NOT (vt0.c0)))<>(((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), COUNT(*) OVER () FROM vt0, vt1 WHERE (((((NULL) ISNULL))GLOB(CASE ''  WHEN NULL THEN '' END))); -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))) FILTER(WHERE (((((vt0.c0) NOTNULL)))=((TRIM(DISTINCT vt1.c0, ''))))) OVER () FROM vt1 WHERE ((((((((((0.21017292920300623 IN ()))OR((((0.05680590076544334)) NOT BETWEEN ((0.19809532822361275)) AND ((NULL))))))OR(CAST(x'' AS TEXT))))OR((((x'', '0.6718363848466218', 0x52e2180f))!=((NULL, '~e', 2.074090064E9))))))AND((((((((('ﭚT')AND(NULL)))OR(NULL)))AND(0.1917664524554208)))AND(x''))))) ORDER BY CAST(CAST(1.15759958E8 AS INTEGER) AS INTEGER) ASC;SELECT DISTINCT ((LENGTH(vt1.c1)) NOT NULL) FROM vt0 WHERE ((+ ((((1.130785279E9, 0xffffffffa43ceeae, 0.10548297156688191)) BETWEEN ((0.801894737469653, 0xffffffff957943d3, 0xffffffff87b820fb)) AND ((0.25438471216030334, x'', 0.9975563958962628)))))) GROUP BY ((((((((((vt0.c0)OR(vt1.c1)))AND(((vt1.c0) ISNULL))))OR((((vt1.c0, vt1.c1, vt1.c1))<=((vt1.c1, vt1.c0, vt1.c1))))))OR(((vt1.c0)%(vt1.c0)))))AND(((0x392cb28f) IS FALSE)));SELECT DISTINCT (+ (vt1.c1)) COLLATE BINARY FROM vt0 WHERE (CAST((('417805119') NOT BETWEEN (0Xfffffffffa3d1ddb) AND (0.3780772675629207)) AS TEXT));SELECT DISTINCT AVG(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 END) OVER () FROM vt0, vt1 WHERE (CASE WHEN '牁f&AB' THEN '398919783' ELSE NULL END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((('') NOTNULL))OR(COUNT(vt1.c1))))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT AVG(vt0.c0) COLLATE NOCASE, CASE ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1))  WHEN CAST(vt1.c0 AS INTEGER) THEN 0.6631515390010787 END, (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (0.8120243794228981)))), NULL, (((CAST(vt1.c0 AS BLOB), LIKELIHOOD(vt1.c0, 0.746308749102343), MIN(vt0.c0)))<>(((+ (vt0.c0)), vt1.c0, (vt0.c0 IN (vt1.c0))))) FROM vt0 WHERE (((CAST('⭋c' AS NUMERIC))!=((((0x4aee167b, 0.8264172107155938, x''))!=((NULL, NULL, '\nlpm[ᩐ7qi'))))));SELECT 'l9' FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt1.c1)AND(NULL)))OR(vt0.c0)))AND(((vt1.c1)+(vt1.c1)))))OR(vt1.c0)) FROM vt1, vt0 WHERE ((- ((((NULL, '1689249386', NULL))>=(('?', 0.9554581974443314, NULL)))))) UNION ALL SELECT DISTINCT json_object(vt0.c0, ((vt0.c0)IS(NULL))) FROM vt1, vt0 WHERE (CAST((0.3186149866845315 IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(MIN(vt1.c0), 0.617820244748927) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE FROM vt1, vt0 WHERE ((NULL COLLATE BINARY IN (((('-1747225996', '', NULL))!=((0.5699003429629401, NULL, x''))), ((x'88f8') NOT NULL)))) GROUP BY vt1.c1 HAVING (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT COALESCE(vt1.c1, vt1.c0) COLLATE BINARY, (~ ((((vt0.c0))<((vt1.c1))))), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))) AND (((vt1.c1) NOT NULL))), NULL COLLATE BINARY, (((x'')+(vt1.c1)) IN ()) FROM vt0 WHERE (((CAST('1331115643' AS TEXT))*('/' COLLATE RTRIM)));SELECT DISTINCT CHAR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) FROM vt0 WHERE (CAST(((((NULL)OR(0.5860114177437247)))OR(x'')) AS TEXT)) LIMIT 825743949 OFFSET -2021054381;SELECT ALL ((GROUP_CONCAT('&X-SV'))<=(((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))), INSTR((NOT (vt0.c0)), ((vt1.c0)|(vt1.c1))), UNLIKELY(DISTINCT CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) FROM vt1 WHERE (CAST(NULL COLLATE RTRIM AS REAL)) GROUP BY ((((vt0.c0)>>(vt1.c1)))%(UNLIKELY(DISTINCT vt1.c1))) LIMIT -2118121169;SELECT DISTINCT '' FROM vt0; -- 0ms;
SELECT vt1.c1 FROM vt1 WHERE ((((((0.40304284062579654, '542360450', 564401665, x'', 'AP'))<((NULL, '0.0', '621218112', x'', NULL)))) IS FALSE)); -- 0ms;
SELECT ALL COUNT((vt1.c1 IN ())), ((vt1.c1) NOT BETWEEN (((vt1.c1)<(vt1.c0))) AND (((vt1.c1)LIKE(0.10774368338689833)))), vt0.c0 FROM vt1, vt0 UNION ALL SELECT ((LOWER(DISTINCT vt1.c1))>(LOWER(DISTINCT vt1.c1))), ((TYPEOF(DISTINCT vt1.c0)) NOT NULL), ((TOTAL(vt0.c0)) NOT BETWEEN ((NULL IN ())) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0, vt1 WHERE (COALESCE('1742441798', 'now') COLLATE NOCASE) LIMIT 2074090064; -- 0ms;
SELECT (1072334904 IN ()) COLLATE BINARY, (((LIKELIHOOD(vt0.c0, 0.03936850951838955)))>((vt1.c0))), NTH_VALUE(CAST(((-7.37083869E8) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (1.15759958E8)))))) OVER () FROM vt0;SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((((+ (0.2805769082462357))) NOT NULL)); -- 1ms;
SELECT DISTINCT ((vt0.c0)%(vt0.c0)) COLLATE NOCASE, ((((vt1.c0)OR(vt1.c1)))AND(NULL)) COLLATE BINARY, ((vt1.c1 COLLATE NOCASE)<>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) FROM vt0 GROUP BY CASE ((vt1.c1) ISNULL)  WHEN (((0.19327371512573432))>((vt1.c0))) THEN (+ (vt0.c0)) WHEN (((vt1.c1, 0.7864842475029612, vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c1))) THEN CAST(vt1.c1 AS REAL) WHEN json(vt1.c0) THEN ((vt1.c0)<=(vt1.c0)) END HAVING CASE ((vt1.c0)>>(vt1.c0))  WHEN ((vt0.c0)OR(vt1.c0)) THEN 0.9338625542852869 END ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))=(vt0.c0)) ASC;SELECT DISTINCT vt1.c1 FROM vt0 WHERE (((((('G%L' IN ()))AND((-2058914820 IN ()))))AND(((1309655192)<<(NULL)))));SELECT DISTINCT CASE WHEN ((vt0.c0)||(vt1.c0)) THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt1.c1 IN ()) END FROM vt1, vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (0x160dbf47)) END FROM vt0, vt1 ORDER BY vt1.c0 DESC; -- 0ms;
SELECT ALL 0.01568011760003707, CASE CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END  WHEN CASE WHEN vt0.c0 THEN 'ꊼ{' ELSE vt1.c1 END THEN ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 END END, (((vt1.c0))=((((((vt1.c1)OR('	')))AND(vt0.c0))))), CAST((~ (vt1.c1)) AS BLOB), ((((5.4236045E8)>>(vt1.c1))) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (CAST(vt1.c1 AS BLOB))) FROM vt0 WHERE ((((TRIM(NULL, NULL)))<=((x''))));SELECT '794367438' FROM vt1 WHERE (CASE WHEN CAST(NULL AS INTEGER) THEN (((((((('w7*')AND(1616761078)))OR(0.8765273769559281)))AND('IhEJa~T梩')))AND('0.3018282755653402')) ELSE ((1146003803)+('炛')) END) GROUP BY CAST((('1034808404')%(vt0.c0)) AS REAL);SELECT ((((vt0.c0) NOT NULL)) ISNULL), CASE WHEN ((vt1.c1) NOT NULL) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) WHEN ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)) THEN COUNT(vt0.c0) WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE vt1.c0 END, (('1014231416')>=(SUM(vt0.c0))) FROM vt0;SELECT ALL ((vt1.c0)>>(vt1.c0)) COLLATE NOCASE FROM vt0;SELECT DISTINCT 0x773d930b COLLATE BINARY FROM vt0, vt1; -- 0ms;
SELECT ALL CAST(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS REAL) FROM vt1, vt0; -- 0ms;
SELECT ALL COUNT((- (vt1.c0))) FROM vt1, vt0 WHERE ((('-196170948')&(NULL)) COLLATE BINARY) GROUP BY ((vt1.c0)GLOB(((x'') ISNULL))) LIMIT -1490027164; -- 0ms;
SELECT CAST((NOT (vt1.c0)) AS TEXT) FROM vt1, vt0; -- 0ms;
SELECT ALL (((((vt1.c1) ISNULL)))>((vt0.c0))) FROM vt0 WHERE (((0Xffffffffe3a11766) NOT NULL) COLLATE BINARY) ORDER BY ((((((((CASE vt1.c1  WHEN vt1.c0 THEN 'fh' END)OR(vt0.c0 COLLATE BINARY)))OR((NULL IN ()))))OR(((vt1.c1)OR('-687643348')))))AND(CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST;SELECT ALL LEAD(CASE WHEN (- (vt1.c0)) THEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1))) ELSE x'' END, (((((((vt1.c0, vt1.c0, vt0.c0, vt1.c1, vt0.c0))<((vt0.c0, vt1.c1, vt1.c1, vt0.c0, vt1.c1))))AND(((NULL) BETWEEN (NULL) AND (vt0.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c0)))), (((vt1.c0)) BETWEEN ((CAST(vt1.c1 AS TEXT))) AND (((vt0.c0 IN ()))))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt1, vt0 GROUP BY ((vt1.c0) BETWEEN ((~ (vt1.c1))) AND (vt1.c0 COLLATE RTRIM)) HAVING SUBSTR(((vt1.c0)>(vt1.c0)), ((vt0.c0) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((vt1.c0) IS TRUE))>(((vt1.c0) NOTNULL))), (UNICODE(vt1.c1) IN ()), (((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END, (vt1.c1 IN ()), UNLIKELY(vt1.c1)))==(((NOT (vt1.c0)), ((((vt1.c1)OR(vt1.c1)))AND('-36383698')), (~ (vt1.c0))))) FROM vt0 ORDER BY UNLIKELY(DISTINCT ((vt1.c1)*(vt1.c1))) DESC  NULLS FIRST, CASE NULL  WHEN ((vt0.c0)||(vt1.c0)) THEN ((vt1.c0) IS TRUE) END ASC  NULLS FIRST, (~ (vt0.c0 COLLATE RTRIM))  NULLS LAST;SELECT '', COUNT(*), (vt1.c0 IN ()) COLLATE BINARY FROM vt1, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))%(rtreenode(vt1.c1, vt1.c1))) LIMIT 633284602 OFFSET -665104505; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(4.19629242E8 COLLATE NOCASE) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (NOT (vt1.c1)) COLLATE NOCASE, TOTAL(CASE vt1.c1  WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END) OVER (), vt0.c0 FROM vt1 ORDER BY ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (CASE WHEN vt0.c0 THEN NULL END) AND (-1387685645)), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))<=(vt0.c0 COLLATE RTRIM))  NULLS FIRST;SELECT DISTINCT (NOT (vt1.c0)) COLLATE NOCASE, (((('') BETWEEN (vt0.c0) AND (vt1.c1)))||(((vt1.c1) NOTNULL))), 0.4223397443069077 FROM vt1 GROUP BY ((NOT (vt1.c1)) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))))) HAVING CAST((vt0.c0 IN ()) AS BLOB);SELECT TOTAL(((vt0.c0) IS FALSE)) OVER () FROM vt1 LIMIT 2086399572;SELECT ((((0.8632393016792943)AND(((vt1.c0)LIKE(vt1.c1)))))AND((((vt0.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c0, vt1.c1)) AND ((vt0.c0, vt1.c1, vt0.c0))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT (~ (CAST(vt1.c0 AS BLOB))), TOTAL(((vt1.c0) ISNULL)), (((CASE vt0.c0  WHEN x'' THEN vt0.c0 END))=((CAST('' AS INTEGER)))), (~ (((vt1.c0)*(vt1.c0)))), json_array(CAST(vt1.c0 AS REAL), MIN(vt1.c1)) FROM vt0;SELECT DISTINCT (((((vt1.c1)||(vt1.c1))))!=((MIN(vt1.c1)))) FROM vt1 WHERE ((NOT (COALESCE(0.7615197779779723, x'')))); -- 0ms;
SELECT DISTINCT ((((vt1.c1))=((vt1.c0))) IN (((NULL) BETWEEN (vt0.c0) AND (x'')))) FROM vt1;SELECT DISTINCT TOTAL('7b' COLLATE NOCASE) OVER (), NTILE(CAST((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((0.8515864887037315, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c1))) AS TEXT)) OVER (), (~ ((vt0.c0 IN ()))) FROM vt1 WHERE (((((((0.40379421209807065) ISNULL))OR((((0xffffffffc2636089, 2045255816, 0.4761449913564386)) BETWEEN (('J\n굈', '-1950728551', '0.40379421209807065')) AND ((0.8756399060366101, NULL, NULL))))))OR(NULLIF(0.9621068064655356, 0.9807974267854591)))) ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END) IS FALSE) ASC  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c1 END)AND(((vt1.c1)>=(vt1.c1)))) DESC;SELECT DISTINCT CAST(CAST('/yY' AS TEXT) AS REAL), (CAST(vt0.c0 AS NUMERIC) IN (((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)))), NULL FROM vt0 GROUP BY (((+ (vt1.c0))) NOTNULL);SELECT DISTINCT (~ (CAST(vt0.c0 AS NUMERIC))), CASE WHEN vt1.c0 COLLATE NOCASE THEN (0.447636818865323 IN ()) END, ((vt1.c1 COLLATE NOCASE)/(((vt1.c0)IS NOT(vt1.c0)))), (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) COLLATE RTRIM COLLATE BINARY, '1659106749' FROM vt0 NATURAL JOIN vt1 WHERE (((UPPER(DISTINCT 740253590)) BETWEEN (((-1.363978534E9)*('1921803281'))) AND ((('y⯾{- l')>=('-728966576'))))); -- 0ms;
SELECT CUME_DIST() OVER (), ((((vt0.c0)>=(vt1.c0)))<(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))), (((vt1.c0)) BETWEEN ((CAST(vt1.c1 AS REAL))) AND ((vt1.c0))) FROM vt0, vt1 WHERE (CASE 0.2423295760010601  WHEN '158892325' THEN 0.8283076320582635 END COLLATE RTRIM COLLATE BINARY) ORDER BY (((NOT ('}v8pE')))IS NOT(vt0.c0)); -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(((x'')<=(vt1.c0)) AS TEXT)) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (vt1.c1 COLLATE BINARY IN (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN '' THEN vt1.c0 ELSE vt0.c0 END)) FROM vt0, vt1 WHERE ((((((((((('-1525831504')IS(NULL)))AND(CAST(-1080752622 AS NUMERIC))))OR(((x'')*(0.07995071795548492)))))OR(((((0.7249407775097669)AND(0X71218660)))AND('')))))AND((((x'89f3'))<=(('1725424073')))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN ('9qRr') AND (((vt0.c0) IS FALSE))) FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST; -- 0ms;
SELECT (((x'', vt0.c0, vt1.c0 COLLATE NOCASE))>=((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)), ((vt1.c1) NOTNULL), ((vt1.c0)/(vt1.c1))))) FROM vt0 WHERE ((((('mr	H')) NOT BETWEEN ((-314253155)) AND ((-912115222))) IN ()));SELECT DISTINCT NTH_VALUE(((((vt0.c0) ISNULL)) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS TEXT))), ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (1868314686))))) OVER () FROM vt0 ORDER BY vt0.c0 ASC;SELECT ((vt1.c0) NOT NULL) COLLATE RTRIM FROM vt0, vt1 WHERE (0.49119069703748575); -- 0ms;
SELECT DISTINCT ((((vt1.c1)|(vt0.c0)))>>(vt0.c0 COLLATE BINARY)) FROM vt1 WHERE (CASE WHEN (NOT (x'')) THEN ((NULL) NOT BETWEEN ('1309655192') AND (0.3888185387518135)) WHEN ((1527722317) BETWEEN (0.4078692084059772) AND ('-1843239430')) THEN 0X4c66c954 COLLATE NOCASE WHEN NULL THEN ((NULL)>(NULL)) END);SELECT DISTINCT ((((CAST(vt1.c1 AS NUMERIC))AND(CASE WHEN vt1.c0 THEN vt1.c1 END)))AND('')) FROM vt1; -- 0ms;
SELECT COUNT((vt1.c0 IN ())), (CAST(vt0.c0 AS TEXT) IN ()), (((NULL IN ())) BETWEEN ((- (vt1.c0))) AND (((vt1.c0)<>(vt1.c1)))) FROM vt1; -- 0ms;
SELECT NULL FROM vt1 WHERE ((((0x4fffa574 COLLATE RTRIM, HEX(DISTINCT NULL), (NULL IN ()), (- (0.3032366060285264)), ((-1286193080) NOTNULL)))<((CAST(NULL AS BLOB), ((0.4844452045476122) IS FALSE), ((((x'')OR('y*rzM')))AND('-316422316')), ((0xfffffffff300b4b4) ISNULL), ((0.8283860831351555)<=(x'')))))) LIMIT -833002039 OFFSET -1965485549; -- 0ms;
SELECT CAST(((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) AS NUMERIC) FROM vt0, vt1 WHERE (((x'')<<(712020949)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)OR(((vt1.c0) IS FALSE))))OR(MAX(vt1.c0))))OR(((vt1.c0) IS FALSE))))OR(vt1.c1 COLLATE RTRIM)))AND(CAST(vt1.c1 AS TEXT))))OR(vt0.c0)) FROM vt1, vt0 WHERE (CAST(CAST(265198931 AS BLOB) AS INTEGER)); -- 0ms;
SELECT DISTINCT (~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) FROM vt1 WHERE ((((((('115759958')*(NULL)))OR(((194495633) IS TRUE))))AND(((1288902856) ISNULL))));SELECT DISTINCT CAST(GROUP_CONCAT(vt0.c0) AS NUMERIC), CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS TEXT), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))), ((vt0.c0) BETWEEN ('TRUE') AND (vt0.c0)) COLLATE NOCASE, CAST(vt1.c0 COLLATE RTRIM AS REAL) FROM vt0, vt1; -- 0ms;
SELECT COUNT(((vt0.c0)*(vt1.c0)) COLLATE NOCASE) OVER () FROM vt1 WHERE (((((x'f488') IS FALSE))OR(((x'') BETWEEN (x'') AND ('-1556294648')))));SELECT DISTINCT ROW_NUMBER() OVER (), CAST(CAST(vt0.c0 AS REAL) AS TEXT), ((((((((x'28be4794' COLLATE RTRIM)AND(MAX(vt1.c0))))OR(((((((((vt1.c0)AND(vt0.c0)))OR(0.34495570836673006)))OR(vt1.c1)))AND(vt1.c0)))))OR(CAST(vt1.c1 AS INTEGER))))AND((- (vt1.c0)))) FROM vt1 WHERE (((((((((4.17805119E8)AND(NULL)))OR(x'7d9c95eb')))AND(((NULL)<>(x'4b69')))))AND(((((0x550d876b)AND(0.7565733710891259)))OR('-1158478671')))));SELECT (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)) IN ()) FROM vt1, vt0 WHERE ((((((((NULL)AND('h￿')))AND(NULL))))<>((((x'')IS(0.13284621090114712)))))); -- 0ms;
SELECT ALL ((((('-775280701') NOT BETWEEN (vt0.c0) AND (vt1.c1))))<=((((vt1.c0) NOTNULL)))), 0.25431858812716635, (CASE WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END IN ()) FROM vt0, vt1; -- 0ms;
SELECT ((COUNT(vt0.c0)) NOT BETWEEN ((+ (vt1.c1))) AND ((vt1.c1 IN ()))), (((((vt0.c0 IN (vt1.c0)))OR(CAST(NULL AS BLOB))))AND(((vt0.c0)>>(vt0.c0)))), ((((vt1.c1)AND(vt1.c1)))IS(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0 WHERE (CAST(x'' AS NUMERIC));SELECT DISTINCT ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY, CASE CAST('1558679225' AS TEXT)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN CAST(vt0.c0 AS BLOB) END, COALESCE(MIN(vt1.c1, vt1.c0), CASE WHEN vt1.c0 THEN vt1.c1 WHEN x'3a0f' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END) FROM vt1;SELECT (vt0.c0 IN (TRIM(DISTINCT vt0.c0))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((LOWER(DISTINCT vt1.c1)) NOTNULL) FROM vt1, vt0 WHERE (LOWER(DISTINCT ((0x858c884)IS('S')))) GROUP BY ((vt0.c0)-(((vt1.c0) IS TRUE))) HAVING (((((((vt1.c0)AND(vt1.c0)))OR(x''))))<((CAST(vt0.c0 AS TEXT)))); -- 0ms;
SELECT ALL ((vt0.c0)*(((vt1.c1)&(vt1.c0)))) FROM vt0 WHERE ((((1911031089)) BETWEEN ((IFNULL('U]', 0.39032761985325515))) AND ((CASE 0.33203940763132034  WHEN 0.8149617280703945 THEN '0.6168552854898267' ELSE x'94e0' END))));SELECT ((((vt1.c1)OR(vt1.c0)))-(((vt1.c0)&(vt0.c0)))), CAST(((vt1.c0) IS FALSE) AS REAL), ((vt0.c0)<((~ (vt1.c0)))) FROM vt0, vt1 WHERE (((((x'')>=(0.6848560102266755))) BETWEEN (((((0x1cfc8478)AND(NULL)))OR(0.08312872862088405))) AND (x''))); -- 0ms;
SELECT DISTINCT ((NULL)>>(vt1.c0)) COLLATE RTRIM FROM vt1, vt0 WHERE ((+ ((- (0.7551977859355066))))); -- 0ms;
SELECT ALL vt1.c1 FROM vt1 GROUP BY TRIM(DISTINCT ABS(vt1.c0), vt0.c0), vt1.c1, ((((vt0.c0) BETWEEN (0.3964809201616579) AND (vt1.c1)))*(HEX(vt0.c0))), (((vt1.c0 IN ()))IS(IFNULL(vt1.c1, vt1.c0))), CASE (((vt0.c0, vt1.c0, '-2091698946')) BETWEEN ((vt0.c0, vt1.c0, vt1.c1)) AND ((vt1.c1, vt1.c0, vt1.c0)))  WHEN MIN(vt1.c1, vt0.c0) THEN 1894861248 END;SELECT GROUP_CONCAT(CAST(0.6075819441475541 AS REAL)) FROM vt1, vt0; -- 0ms;
SELECT ALL ((LIKELIHOOD(vt1.c0, 0.9304107047576656))<=(((vt1.c0)%(vt0.c0)))) FROM vt0, vt1 WHERE (((((((863265227)AND(0.46209342441310663)))AND('-103566342'))) IS FALSE)); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) NOTNULL)  WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 END, (((vt1.c1 IN ())) NOT BETWEEN (((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ((- (vt1.c0)))), CASE ((0.1142608651604301)IS NOT(vt0.c0))  WHEN GROUP_CONCAT(vt1.c0) THEN CAST(NULL AS TEXT) ELSE TRIM(DISTINCT vt0.c0) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c0, rtreenode(((vt1.c0) NOT BETWEEN (vt1.c1) AND (0.5216591300188586)), ((((vt0.c0)AND(vt1.c1)))OR(vt1.c1))), x'' FROM vt1;SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN 0.10032901470762878 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END)%((NOT (vt0.c0)))) FROM vt0 CROSS JOIN vt1 ON ((CAST(vt1.c1 AS TEXT)) IS TRUE) WHERE ((((((0.4829163650759589))==(('')))) IS FALSE)) GROUP BY CASE (- (vt0.c0))  WHEN ((vt0.c0)+(vt0.c0)) THEN CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END END, ((((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c0)))<=((NOT (vt0.c0)))), (((vt1.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((load_extension(vt1.c0), (~ (vt1.c1)), ((vt1.c0)!=(vt1.c0)))) AND ((vt1.c0, ((vt0.c0) ISNULL), (~ (vt1.c1))))); -- 1ms;
SELECT CASE WHEN vt1.c1 COLLATE BINARY THEN 0.2436816784026854 WHEN '-281216825' COLLATE NOCASE THEN rtreenode(x'a61d', vt1.c1) WHEN 0X6d6ebcf1 THEN ((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)) ELSE vt0.c0 END, LAST_VALUE(CAST(((vt1.c0) ISNULL) AS INTEGER)) OVER (), CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 ELSE ((vt1.c1) NOT NULL) END, LEAD(((((vt0.c0) NOTNULL)) BETWEEN (((vt1.c1) BETWEEN (0.19081053259329417) AND (vt1.c1))) AND (vt1.c0)), (((+ ('252161455')))!=(vt1.c0 COLLATE NOCASE)), CAST(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN x'544b' WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN '1551202702' END AS REAL)) OVER (), ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c1)<=(vt1.c0))) AND (NULLIF(vt1.c0, vt0.c0))) FROM vt0, vt1 GROUP BY (((vt1.c1 IN (vt1.c1))) BETWEEN (vt1.c1) AND (((((vt1.c1)AND(vt0.c0)))AND(vt1.c0)))), STRFTIME((+ (vt1.c1)), (~ (vt0.c0)), x'', json_valid(vt1.c0), ((x'')>(vt0.c0))), CAST((((('772166457')AND(vt0.c0)))AND(vt1.c1)) AS REAL), LIKE(CAST(vt1.c0 AS INTEGER), 'Fjv5{8['), ((vt0.c0)|(((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))) HAVING (- (((((((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))OR(vt1.c0)))); -- 0ms;
SELECT ((((((vt1.c0)<(x'a97a05c5')))OR((((vt0.c0, vt0.c0, vt0.c0))>((-1812736334, vt0.c0, NULL))))))OR(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))) FROM vt0, vt1 ORDER BY ((vt1.c1 IN ()) IN ((vt1.c1 IN (vt0.c0, vt1.c0))))  NULLS LAST, (~ (vt0.c0 COLLATE RTRIM)) ASC, vt1.c0 COLLATE RTRIM; -- 1ms;
