-- Time: 2024/06/07 00:31:56
-- Database: database43
-- Database version: 3.40.0
-- seed value: 3804346643
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE t0 (c0 INT , c1 REAL , c2 BLOB ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1 UNINDEXED, c2, order=ASC); -- 5ms;
CREATE UNIQUE INDEX i84 ON t0((((('545903843')&(x''))) NOT NULL) COLLATE NOCASE ASC,((((((((c0 COLLATE NOCASE)OR(((c0)OR(c2)))))OR(((c0)<(c0)))))AND(((c1) IS TRUE))))OR((((c0))<>((0.9982794323866467))))) COLLATE NOCASE ASC,((((c1)AND((c2 IN (c0, x'')))))OR(CAST(c1 AS NUMERIC))) ASC); -- 10ms;
PRAGMA main.default_cache_size = -417282842; -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 AFTER DELETE ON t0 BEGIN SELECT RAISE(IGNORE);END; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('947126213', x'', NULL), (0.162668013141959, 0.07916351694935575, x''), ('~bu~1d\n1', '', NULL), ('-749503832', NULL, '-547524468'), (0.23110021505820155, NULL, x'ebaa'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=545903843,2');\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX  vt1; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA journal_size_limit = -5231900139263731260; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=9'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c85 BLOB; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=8'); -- 0ms;
DELETE FROM t0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c57; -- 1ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
CREATE INDEX IF NOT EXISTS i99 ON t0((((c57 IN ())) NOT NULL) COLLATE NOCASE DESC,(NOT ((((c57, c0, 0.861988760619292))=((c57, c2, c57))))) COLLATE BINARY,((((((((TRIM(DISTINCT c2, c85))AND(c57)))OR(c0)))AND((c2 IN ()))))OR((c0 IN ()))) COLLATE NOCASE DESC,((((c85)<=(c85)))|((c2 IN ()))) COLLATE NOCASE DESC); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1216870941);\n; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1145910275);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.wal_autocheckpoint = 7904823462575341846; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 1ms;
REINDEX; -- 6ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 909721216);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1371238210); -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
ANALYZE; -- 1ms;
END TRANSACTION; -- 0ms;
END; -- 0ms;
VACUUM; -- 17ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
END; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 747792746); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.auto_vacuum; -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=-1257241042,4');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
PRAGMA main.application_id = -8497970256078347462; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=15'); -- 0ms;
REINDEX  vt1; -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((COUNT(t0.c2))) AND ((((((x'')AND(t0.c1)))OR(t0.c0))))) FROM vt1, t0 WHERE ((((NULL) ISNULL) IN (('947126213' IN ())))); -- 0ms;
SELECT ALL COUNT(*) FROM vt1 WHERE (highlight(((x'')==('2''(')), (((0.32114547599645904))<>((x''))), ((NULL) BETWEEN (NULL) AND (0.5709748089768585)), ('%	' IN (NULL))));SELECT ((COUNT(*)) NOTNULL) FROM t0, vt1 WHERE ((('%	')<(0.7988669922562495)) COLLATE RTRIM); -- 0ms;
SELECT (- (((t0.c0) NOT BETWEEN (vt1.c2) AND (NULL)))), CAST(TOTAL(t0.c2) AS TEXT), ((((t0.c2 COLLATE RTRIM)OR(((vt1.c1)&('-417282842')))))OR(((t0.c1)>=(vt1.c0)))) FROM vt1;SELECT DISTINCT ((t0.c1)/(t0.c1)) COLLATE NOCASE FROM vt1 WHERE ((+ (((0.6430124092614857)IS(''))))) GROUP BY t0.c2;SELECT DISTINCT GROUP_CONCAT(((t0.c2) NOTNULL)) FROM vt1, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((t0.c0) NOT BETWEEN ((((t0.c0, vt1.c1, vt1.c2))=((vt1.c0, t0.c0, vt1.c1)))) AND (CAST(t0.c0 AS REAL))) FROM t0 WHERE ((((0.779676121750961)) NOT BETWEEN (((- ('')))) AND (((((x'a816', 'now,Y.u', x'bbe5')) BETWEEN ((-1.145910275E9, '/p%<', 0xffffffffdf5d708c)) AND ((x'', '0.5691625263607079', 0.027968370224501715)))))));SELECT (((((vt1.c2))<>((vt1.c0)))) BETWEEN (((t0.c0) ISNULL)) AND (((t0.c2) NOTNULL))) FROM vt1, t0 WHERE ((((x'')LIKE(0.4489144149347467)) IN ())); -- 0ms;
SELECT DISTINCT (((((vt1.c0)AND(t0.c1))))<>(((((('1652413766')AND(t0.c1)))AND(vt1.c1))))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((((((((((((vt1.c2)OR(vt1.c0)))AND(t0.c0)))AND(vt1.c1)))OR(vt1.c2)))AND(vt1.c0)))OR(0.4022385943692539))) NOT BETWEEN (vt1.c2 COLLATE RTRIM) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (vt1.c0)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT LIKELY(0.9982794323866467), CASE AVG(t0.c2)  WHEN ((vt1.c2)IS(x'')) THEN (t0.c1 IN ()) END, DENSE_RANK() OVER () FROM vt1, t0 WHERE (UPPER(((NULL)<(x'')))); -- 0ms;
SELECT ALL TOTAL(vt1.c1), TOTAL((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))) OVER (), (NULL IN (x'', t0.c2)) COLLATE RTRIM FROM t0;SELECT DISTINCT ((((((t0.c2)==(t0.c1)))AND(((vt1.c2) NOTNULL))))AND(((vt1.c1)<<(t0.c2)))) FROM vt1, t0 WHERE (((('0.0')) BETWEEN ((CAST(0X28a67128 AS TEXT))) AND ((((NULL) NOT BETWEEN (NULL) AND (x'')))))) ORDER BY ((((vt1.c1) IS FALSE)) NOT BETWEEN ((vt1.c2 IN ())) AND (NULL)) DESC LIMIT -1257241042; -- 1ms;
SELECT ALL CASE WHEN t0.c1 COLLATE NOCASE THEN (t0.c0 IN ()) ELSE (('909721216') BETWEEN (vt1.c1) AND (vt1.c0)) END FROM vt1, t0 WHERE (((CAST(6.81996584E8 AS BLOB))GLOB(0.9541844249741707 COLLATE RTRIM))) GROUP BY ((CAST(vt1.c0 AS REAL))LIKE(vt1.c1 COLLATE RTRIM)), ((CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END) ISNULL), ((((0.4471386158359414)OR(vt1.c0)))OR(0.3094515125596021)) COLLATE RTRIM, ((+ (t0.c2)) IN ()), CAST((NOT (t0.c0)) AS BLOB) HAVING ((TIME(t0.c0, vt1.c2, vt1.c2, t0.c2, 'h炌C	1Bo!?')) IS FALSE); -- 0ms;
SELECT ALL CASE (+ (vt1.c1))  WHEN ((t0.c1) BETWEEN (vt1.c0) AND (t0.c0)) THEN ((t0.c2)<(vt1.c1)) WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN LIKELY(DISTINCT vt1.c0) WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN ((vt1.c2)|(vt1.c1)) END FROM t0, vt1; -- 0ms;
SELECT DISTINCT TRIM(((vt1.c2)=(0.6653503856412143))), ((CASE t0.c0  WHEN t0.c2 THEN '' END)==((('1132519018')==(t0.c1)))), (((~ (vt1.c1))) IS TRUE) FROM vt1;SELECT DISTINCT ((t0.c1) IS FALSE) COLLATE NOCASE, TOTAL((((t0.c2))<((t0.c1)))) OVER (), CAST(t0.c0 AS INTEGER) FROM t0, vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT COUNT((NOT (vt1.c2))) OVER ( ORDER BY ((t0.c2)|(vt1.c2)) COLLATE BINARY ASC  NULLS FIRST GROUPS  UNBOUNDED PRECEDING), '-547524468', SUM(((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1))) OVER () FROM vt1, t0; -- 1ms;
SELECT DISTINCT '2146858990' FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(((vt1.c1) NOT NULL)) OVER ( PARTITION BY CASE WHEN x'7991' THEN vt1.c1 COLLATE NOCASE ELSE ((t0.c0) BETWEEN (t0.c1) AND (vt1.c0)) END, COALESCE(DISTINCT NULL, t0.c2 COLLATE RTRIM) GROUPS  UNBOUNDED PRECEDING), ((TRIM(vt1.c1)) NOT BETWEEN (((vt1.c1)>=(t0.c0))) AND (vt1.c1)), ((((vt1.c1) IS TRUE))IS NOT(((t0.c0) IS FALSE))) FROM t0, vt1 WHERE ((~ (((0.9982794323866467) NOT BETWEEN (x'') AND (NULL))))) GROUP BY (((((vt1.c2 IN ()))AND(t0.c1)))AND(CAST(t0.c2 AS BLOB))), rtreenode(((t0.c1) IS TRUE), (t0.c1 IN (t0.c2))), ((t0.c2) NOT NULL);SELECT ALL (~ (x'')) FROM vt1, t0; -- 0ms;
SELECT ALL ((NULL) NOTNULL) FROM vt1, t0 ORDER BY HEX(((((vt1.c2)OR(t0.c2)))AND(t0.c1))), (~ (((t0.c1)<<(t0.c1)))), (+ (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c2 END)); -- 0ms;
SELECT ALL COUNT((+ (t0.c0))) OVER (), (CAST(t0.c1 AS NUMERIC) IN ()), vt1.c1, '-653857871', (((t0.c0)) BETWEEN ((vt1.c2)) AND ((t0.c0))) COLLATE RTRIM FROM t0, vt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE WHEN CAST(vt1.c1 AS NUMERIC) THEN ((0.779676121750961)<=(vt1.c1)) ELSE TRIM(DISTINCT vt1.c0, vt1.c0) END, (((vt1.c1)>(vt1.c1)) IN ())) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM vt1;SELECT ALL (((t0.c0 IN ()))AND(((vt1.c0) IS TRUE))) FROM vt1; -- 0ms;
SELECT DISTINCT ((vt1.c2 IN ()) IN ()), CAST(((t0.c1)AND(t0.c2)) AS NUMERIC), COUNT(*) FROM t0, vt1 WHERE (HEX((NOT (x'')))) LIMIT 947126213 OFFSET -1145910275; -- 0ms;
SELECT (((t0.c1)) NOT BETWEEN ((((((vt1.c1)AND(t0.c2)))AND(t0.c0)))) AND ((((((0.05711751670949816)OR(t0.c2)))AND(t0.c0))))) FROM vt1;SELECT DISTINCT SUM(0.15023363176164972) FROM t0, vt1 WHERE (''); -- 0ms;
SELECT CAST(CASE WHEN t0.c0 THEN vt1.c1 END AS TEXT), (((t0.c1)>('M')) IN ()), NULL FROM vt1, t0 GROUP BY '/p%<' HAVING AVG((~ (t0.c1))); -- 0ms;
SELECT ((((t0.c2)||(x''))) NOT BETWEEN (SUM(vt1.c1)) AND (CASE WHEN t0.c0 THEN vt1.c0 WHEN x'6216' THEN t0.c1 WHEN x'' THEN t0.c0 END)) FROM t0, vt1 WHERE (0X36393e80); -- 0ms;
SELECT CASE vt1.c0  WHEN t0.c0 THEN NULL ELSE vt1.c1 END COLLATE BINARY FROM t0, vt1 WHERE ((((NULL, NULL, NULL)) BETWEEN ((((x'6996')/(NULL)), NULL, ((-2100967612)<(0Xfffffffffe3241a2)))) AND (((((-4.17282842E8, '-653857871', 0.879091913921765)) NOT BETWEEN ((0Xffffffffe9130463, '-417282842', x'')) AND (('809903224', NULL, 0xffffffffbbb2cbfd))), LIKELY(0.37445671004434145), CAST('937237308' AS BLOB))))); -- 1ms;
SELECT CAST(((vt1.c0)GLOB(vt1.c2)) AS NUMERIC) FROM t0, vt1 WHERE ((((((NULL)) NOT BETWEEN ((0.9982794323866467)) AND ((NULL))))+('-196450714' COLLATE BINARY))); -- 0ms;
SELECT ((vt1.c0)<>((('1905983187')==(vt1.c1)))), ((COALESCE(t0.c0, t0.c2)) NOT NULL), DENSE_RANK() OVER () FROM vt1 WHERE ((~ ((((0x7f51fd7c))<>((NULL))))));SELECT ((TYPEOF(t0.c0)) ISNULL) FROM t0, vt1 WHERE (((CASE '-1257241042'  WHEN -716443543 THEN x'd02e' ELSE x'c023' END)AND(CASE WHEN -1.145910275E9 THEN '1652413766' WHEN '0.37445671004434145' THEN 0xffffffffd54bf069 WHEN 'V핆{A\r' THEN '' WHEN x'' THEN x'b062' WHEN -2128107460 THEN 493621953 ELSE 0xfa8e60a END))); -- 0ms;
SELECT DISTINCT TYPEOF(MIN(vt1.c0)), SUM(COALESCE(t0.c1, vt1.c2)), CASE WHEN TRIM(t0.c1, t0.c2) THEN ((t0.c1)-(vt1.c1)) ELSE ((NULL)&(t0.c1)) END FROM vt1, t0; -- 1ms;
SELECT ((((NULL)IS(t0.c1)))IS NOT(TOTAL(t0.c1))), ((((vt1.c0) BETWEEN (t0.c1) AND (t0.c1)))IS NOT(((t0.c1)<(t0.c2)))), (+ (t0.c2 COLLATE BINARY)) FROM vt1, t0 WHERE (((((('' IN ()))AND(((x'') BETWEEN (0Xffffffff9e0ca2d0) AND ('-716443543')))))AND((((0Xffffffffdf9625d8, '-954430366', '-1763097844')) BETWEEN (('-551193012', 4.93621953E8, '2146858990')) AND ((NULL, NULL, NULL)))))); -- 0ms;
SELECT DISTINCT (~ (((((vt1.c0)OR(t0.c2)))AND(t0.c2)))), ((((t0.c1) ISNULL)) BETWEEN (((vt1.c0) BETWEEN (t0.c2) AND (t0.c1))) AND (ROUND(t0.c2, vt1.c2))), LTRIM((vt1.c2 IN ()), CAST(t0.c0 AS TEXT)), NULLIF(DISTINCT ((vt1.c2)<(t0.c1)), ABS(t0.c0)), ((t0.c2)<=(json_array_length(t0.c2, vt1.c0))) FROM vt1, t0 WHERE ((NULL COLLATE BINARY IN ())); -- 0ms;
SELECT (((t0.c1)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((((''))>=((t0.c0)))))) FROM t0, vt1; -- 7ms;
SELECT ALL 1368131857 FROM vt1 WHERE (((+ (x'')) IN ())); -- 0ms;
SELECT DISTINCT ((((vt1.c0)GLOB(t0.c2)))&((((t0.c1)) NOT BETWEEN ((vt1.c0)) AND ((x''))))) FROM t0, vt1 WHERE ((UPPER(0.13581776510733157) IN ((x'4bea' IN ())))); -- 0ms;
SELECT DISTINCT t0.c1 FROM t0, vt1; -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY (((((vt1.c1)OR(vt1.c0)))OR(t0.c2)) IN (t0.c0 COLLATE NOCASE))  NULLS FIRST), '', ((((vt1.c0)) NOT BETWEEN (('-417282842')) AND ((t0.c2))) IN (((vt1.c2)<<(t0.c0)))) FROM t0 WHERE ((((load_extension(x'', '0.879091913921765')))<=((('-653857871' IN (0.6221480735638564))))));SELECT ALL (NOT (vt1.c2 COLLATE BINARY)) FROM vt1; -- 0ms;
SELECT DISTINCT ((((t0.c0)%(vt1.c0)))*(((t0.c0) NOT NULL))), SUM(CASE t0.c1  WHEN t0.c1 THEN vt1.c0 END) OVER (), CAST(vt1.c1 COLLATE RTRIM AS REAL) FROM t0;SELECT DISTINCT (((t0.c2, t0.c0, vt1.c1, '-1411676337', t0.c0)) NOT BETWEEN ((((t0.c2)*(vt1.c2)), COUNT(*), ((((((((vt1.c1)OR(t0.c1)))AND(t0.c1)))OR(vt1.c2)))AND(vt1.c0)), ((0.9541844249741707)LIKE(vt1.c1)), CAST(vt1.c0 AS TEXT))) AND ((CAST(vt1.c0 AS REAL), AVG(t0.c0), ((vt1.c0)IS NOT(vt1.c0)), (t0.c1 IN (t0.c0)), CAST(0.9409693838262184 AS REAL)))), (((NOT (0.6574414698364193)))!=((NOT (vt1.c1)))), ((((vt1.c2)AND(vt1.c0)))IS((vt1.c2 IN ()))) FROM t0, vt1; -- 0ms;
SELECT TOTAL_CHANGES() FROM vt1, t0 WHERE (((((('')) BETWEEN ((x'')) AND ((-30260830)))) ISNULL)); -- 0ms;
SELECT ALL (+ (t0.c1)), (NOT (CAST(t0.c2 AS BLOB))), ((t0.c0)LIKE('-200738595')) COLLATE BINARY COLLATE RTRIM FROM vt1, t0; -- 0ms;
SELECT (TOTAL(t0.c1) IN ()), vt1.c2, (((((((vt1.c1))<=((vt1.c0))))AND(CASE vt1.c2  WHEN vt1.c0 THEN t0.c1 END)))AND(CAST(vt1.c0 AS TEXT))) FROM vt1, t0 WHERE (((((0.7463702480052146) BETWEEN ('420945460') AND (NULL))) NOTNULL)); -- 1ms;
SELECT TOTAL(t0.c1) FROM t0 WHERE ((((((0.7236255624330314, '-1861428871', NULL))>(('-1103449873', NULL, NULL)))) IS FALSE)); -- 0ms;
SELECT (~ (((t0.c2) IS FALSE))) FROM vt1, t0 INDEXED BY i84 GROUP BY CASE WHEN CAST(t0.c0 AS BLOB) THEN ((vt1.c1) NOT BETWEEN (t0.c1) AND (t0.c0)) ELSE 0.6574414698364193 COLLATE BINARY END HAVING (((- (vt1.c2)))OR(COUNT(t0.c1))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))<(NULLIF(vt1.c0, t0.c1))) FROM vt1;SELECT DISTINCT ((((json_insert(vt1.c2, vt1.c1, 0.26873554411142286, x'', vt1.c2))OR(t0.c1 COLLATE RTRIM)))AND(((vt1.c0)|(t0.c1)))), ((CASE t0.c2  WHEN x'4816' THEN vt1.c1 WHEN t0.c1 THEN vt1.c1 WHEN t0.c1 THEN vt1.c1 ELSE vt1.c1 END)+(((vt1.c2)IS(t0.c2)))), COUNT(*), CASE WHEN ((vt1.c0) IS FALSE) THEN (vt1.c0 IN ()) WHEN ((((((((t0.c2)AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN TRIM(DISTINCT vt1.c1) WHEN COUNT(*) THEN (+ (t0.c2)) END, ((t0.c2 IN ()) IN ()) FROM vt1 FULL OUTER JOIN t0 ON ROUND(((t0.c0) IS TRUE), (t0.c2 IN ())) WHERE ((((((((('-989434798' COLLATE RTRIM)AND(CAST(NULL AS INTEGER))))OR(((0X25586d35)>(x'eb63')))))AND(NULL COLLATE NOCASE)))AND((- (x'ee07'))))) LIMIT 1030165361 OFFSET 100424324; -- 0ms;
SELECT (((t0.c2)>>(t0.c0)) IN (((vt1.c1)GLOB(t0.c1)))), (((((vt1.c2)>(vt1.c0))))==(((- (t0.c0))))), ((COUNT(*)) NOT BETWEEN (CASE t0.c1  WHEN t0.c0 THEN vt1.c2 END) AND (((t0.c0)LIKE(vt1.c1)))) FROM t0;SELECT ALL (((AVG(vt1.c1)))>((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 END))) FROM vt1, t0 ORDER BY IFNULL(((vt1.c2) BETWEEN (t0.c1) AND (vt1.c0)), ((vt1.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN ((((t0.c1)AND('1030165361')))OR(t0.c0)) THEN ((((((((t0.c2)OR(t0.c1)))OR(t0.c0)))AND(vt1.c0)))AND(0.7088202384359578)) WHEN ((t0.c0)>>(t0.c0)) THEN t0.c1 WHEN (((vt1.c0))<=((vt1.c1))) THEN (t0.c0 IN (t0.c1, t0.c2, t0.c2)) END, ((x'') NOT NULL), CASE ((t0.c0)<<(t0.c1))  WHEN t0.c1 COLLATE RTRIM THEN t0.c1 COLLATE BINARY END FROM t0, vt1 WHERE (((((NULL)<(0.9955851641104679))) NOT BETWEEN ((((x'')) NOT BETWEEN ((x'd5b0')) AND ((x'0ede')))) AND (((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((((t0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))OR(vt1.c1)))AND(CAST(vt1.c2 AS REAL))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (((((t0.c0))>((vt1.c1))))LIKE((t0.c2 IN ()))), LOWER(vt1.c0 COLLATE NOCASE), (NOT ((+ (t0.c0)))) FROM vt1, t0 ORDER BY ((t0.c1)=(((vt1.c1) BETWEEN (x'') AND (vt1.c0)))) DESC  NULLS LAST, TRIM(DISTINCT ((t0.c0) NOT NULL), (+ (t0.c2)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE (((vt1.c2, vt1.c2, t0.c0)) NOT BETWEEN ((t0.c1, vt1.c2, t0.c1)) AND ((t0.c2, vt1.c0, t0.c0)))  WHEN ((t0.c1) NOTNULL) THEN (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) END, CASE WHEN (vt1.c2 IN ()) THEN ((((vt1.c2)OR(t0.c2)))OR(vt1.c1)) ELSE ((vt1.c2)|(t0.c0)) END, CASE WHEN (vt1.c0 IN ()) THEN t0.c0 END FROM vt1, t0; -- 0ms;
SELECT ALL NULL, x'', (NOT (TRIM(DISTINCT t0.c2))) FROM vt1 WHERE (json(CASE WHEN x'd47a' THEN -196450714 WHEN '-1505810359' THEN 'mb' WHEN NULL THEN NULL ELSE 0.6364564003172701 END));SELECT ((- (vt1.c0)) IN (vt1.c0 COLLATE BINARY)), ((CASE WHEN t0.c2 THEN vt1.c2 ELSE t0.c1 END)<=(((vt1.c0) BETWEEN (t0.c1) AND (t0.c2)))), (((((((((vt1.c1)OR(t0.c0)))OR(x'')))OR(t0.c1)))OR(t0.c0)) IN ()) FROM t0 WHERE (((((CAST(x'' AS BLOB))OR(((0.9955851641104679) IS FALSE))))OR(((0X5fc5a84) BETWEEN ('') AND (0.6161332691416955))))) GROUP BY ((NULL)+(((vt1.c0)AND(vt1.c2)))) HAVING CASE '-1411676337'  WHEN UNLIKELY(DISTINCT t0.c2) THEN ('' IN ()) WHEN (~ (t0.c0)) THEN ((((t0.c0)AND(-1103449873)))AND(vt1.c0)) WHEN CAST(vt1.c2 AS INTEGER) THEN ((t0.c2) BETWEEN (vt1.c2) AND (t0.c1)) ELSE ((vt1.c1)==(t0.c2)) END;SELECT DISTINCT vt1.c2 FROM t0 WHERE (CASE WHEN LIKELIHOOD('', 0.5494911293125048) THEN (NOT (NULL)) END);SELECT ALL CASE LOWER(t0.c0)  WHEN ((t0.c1) NOT NULL) THEN x'' END, ((0.4471386158359414)AND(NULL COLLATE RTRIM)), ((((UPPER(vt1.c0))AND(((((((((vt1.c2)AND(vt1.c2)))AND(t0.c2)))AND(vt1.c2)))AND(vt1.c0)))))OR(CAST(t0.c1 AS BLOB))) FROM vt1 WHERE (x'');SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT ALL (- ((~ (t0.c0)))) FROM vt1 LIMIT -2100967612 OFFSET -1100847922;SELECT DISTINCT UNLIKELY(((t0.c0) NOTNULL)) FROM vt1, t0; -- 0ms;
SELECT DISTINCT CASE t0.c2  WHEN (('_%') IS TRUE) THEN t0.c0 COLLATE NOCASE WHEN CAST(t0.c0 AS INTEGER) THEN ((vt1.c2)/(vt1.c1)) WHEN ((vt1.c0)*(t0.c1)) THEN '' ELSE LOWER(t0.c0) END, ((((((((vt1.c2 COLLATE RTRIM)AND(((((((((((((vt1.c0)OR(t0.c1)))OR(t0.c0)))OR(vt1.c2)))AND(t0.c1)))OR(vt1.c0)))OR(t0.c2)))))OR(((vt1.c2)&(vt1.c1)))))OR(((((t0.c2)AND(t0.c0)))OR(t0.c1)))))OR(CAST(t0.c2 AS INTEGER))), ((vt1.c0 COLLATE NOCASE)&(t0.c0)) FROM t0, vt1; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT ALL (((t0.c2)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((t0.c2)|(vt1.c0))))) FROM vt1, t0 GROUP BY (~ (((vt1.c1)<<(t0.c1)))), ((CASE vt1.c2  WHEN '-817014418' THEN 0.4114708452635497 ELSE vt1.c0 END) NOT NULL), ((((0.8025167387255475)OR('1368131857' COLLATE NOCASE)))OR((((('vp')AND(vt1.c0)))AND(t0.c1)))), (((((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) ISNULL), (NOT (((((vt1.c2)AND(t0.c0)))AND(t0.c1)))) HAVING ((((((t0.c2)AND(vt1.c0)))AND(t0.c1))) NOTNULL); -- 0ms;
SELECT ALL vt1.c1, (((t0.c2, vt1.c0, vt1.c0)) NOT BETWEEN ((((((t0.c1)AND(vt1.c0)))OR(t0.c0)), CAST(t0.c2 AS REAL), vt1.c0)) AND (((((vt1.c2, t0.c2, vt1.c1))<>((9.37237308E8, vt1.c0, vt1.c0))), CAST(t0.c0 AS TEXT), vt1.c2))), ((CASE WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0)/(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c1) AND (t0.c2)))) FROM t0, vt1; -- 1ms;
SELECT DISTINCT CAST(t0.c0 AS TEXT) COLLATE NOCASE FROM t0, vt1 WHERE (((((0.7018786911561502)>=(0xffffffff82c5c744)))|(0.7684722115786381 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END)<<(CAST(t0.c0 AS NUMERIC))) FROM vt1, t0 ORDER BY CASE WHEN (- (t0.c2)) THEN ((t0.c2)IS(vt1.c2)) WHEN CASE WHEN vt1.c0 THEN x'' ELSE t0.c1 END THEN COALESCE(DISTINCT vt1.c2, vt1.c2) WHEN ((t0.c0)<<(t0.c1)) THEN NULL ELSE ((t0.c2)<(vt1.c0)) END DESC; -- 0ms;
SELECT DISTINCT (~ (((vt1.c0)LIKE(t0.c0)))), ((CAST(t0.c0 AS TEXT)) NOT NULL), ((((vt1.c2)<<(vt1.c1))) NOT BETWEEN (TOTAL(vt1.c0)) AND (((((t0.c0)OR(vt1.c0)))AND(t0.c0)))) FROM t0, vt1; -- 0ms;
SELECT ALL (CASE WHEN vt1.c1 THEN vt1.c2 END IN (((('814110559'))<>((t0.c0))), CASE vt1.c2  WHEN t0.c0 THEN vt1.c2 WHEN vt1.c0 THEN t0.c2 WHEN vt1.c0 THEN t0.c0 ELSE vt1.c2 END)) FROM t0 WHERE ((CAST(0.41353643286868913 AS TEXT) IN ())) ORDER BY t0.c1 DESC  NULLS LAST;SELECT 0Xce5bd58 FROM vt1, t0; -- 0ms;
SELECT DISTINCT (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))==((NOT (vt1.c2)))) FROM vt1 WHERE (x'5347'); -- 0ms;
SELECT DISTINCT ((vt1.c2)+(vt1.c2)) COLLATE NOCASE COLLATE RTRIM, ((((262727178)|(vt1.c0)))-(((t0.c1) NOT BETWEEN (t0.c1) AND (vt1.c2)))), ((((~ (vt1.c2)), CASE t0.c1  WHEN t0.c2 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c1)|(']3.\na>zs'))))=((vt1.c1, ((vt1.c0)<(vt1.c0)), ((((t0.c2)OR('100424324')))AND(NULL))))) FROM t0, vt1 WHERE ((((('0.0') BETWEEN ('') AND (0.5869723901593139))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(((((((((((((vt1.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c1)))OR(0.03641146377217941)))OR(0.6221480735638564)))AND(t0.c0)) AS NUMERIC) FROM vt1, t0 WHERE (CAST(('-1861428871' IN ()) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN vt1.c2 WHEN x'e1f3' THEN t0.c0 WHEN t0.c1 THEN t0.c1 END COLLATE BINARY, ((((((t0.c0)AND(0x56ab124c)))OR(x'234e' COLLATE NOCASE)))OR(t0.c1)), ((TRIM(t0.c2, t0.c0)) NOT NULL) FROM t0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((vt1.c1)LIKE(CAST(t0.c1 AS INTEGER))); -- 0ms;
SELECT DISTINCT t0.c0, vt1.c1, CAST(CAST(t0.c1 AS BLOB) AS NUMERIC) FROM t0, vt1 WHERE (CASE WHEN json_array(NULL, 'y[H4c/') THEN '545903843' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT ((CASE t0.c2  WHEN vt1.c1 THEN t0.c0 WHEN vt1.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE vt1.c2 END) NOT BETWEEN ((+ (t0.c2))) AND (((vt1.c0)&(vt1.c1)))), vt1.c0, ((((((vt1.c0) IS FALSE))OR(CAST(t0.c2 AS TEXT))))OR(CAST(t0.c0 AS INTEGER))) FROM t0 WHERE (COALESCE(0.23587746233453466, x'', '-2100967612', NULL, 0.18616968687545665, 626552117) COLLATE NOCASE);SELECT NTILE(((((((((CAST(vt1.c2 AS BLOB))AND((- (vt1.c0)))))OR((((vt1.c2, vt1.c2, vt1.c1))<>((vt1.c1, vt1.c2, vt1.c2))))))AND((((vt1.c1, vt1.c0, vt1.c0))<((vt1.c1, vt1.c2, vt1.c2))))))AND(load_extension(vt1.c2)))) OVER (), AVG(((vt1.c0)>>(vt1.c2))) OVER ( ORDER BY (- (((t0.c1)GLOB(vt1.c2))))), (((((((vt1.c2, vt1.c1, t0.c2))<=((t0.c1, t0.c0, NULL))))AND((((vt1.c0, '-1781972915', t0.c2, t0.c2, vt1.c0)) NOT BETWEEN ((vt1.c2, t0.c2, vt1.c2, vt1.c1, t0.c1)) AND ((vt1.c2, vt1.c0, vt1.c0, 0.8122040838331882, t0.c1))))))AND((((t0.c1, NULL, vt1.c1))==((t0.c0, vt1.c2, vt1.c2))))) FROM vt1;SELECT ALL ((((((((((vt1.c2) BETWEEN ('{z)<5擎.') AND ('M1QI.}媄mE')))OR((~ (vt1.c2)))))OR(((vt1.c2)>(t0.c2)))))OR(((vt1.c2) NOT NULL))))OR(t0.c0 COLLATE BINARY)) FROM vt1 WHERE (((CAST(x'a50e2114' AS NUMERIC))<<(x''))) ORDER BY CASE WHEN (((vt1.c1))<(('-1216870941'))) THEN CAST(vt1.c1 AS NUMERIC) END;SELECT ((COUNT(t0.c1))>=((((t0.c2, t0.c1, t0.c1))=((493621953, t0.c0, vt1.c0))))) FROM vt1 LIMIT -2100967612;SELECT DISTINCT ((CASE vt1.c2  WHEN vt1.c1 THEN t0.c1 END)<(t0.c1)) FROM vt1, t0 WHERE ((+ (((('2146858990')) BETWEEN ((x'd644')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT (((((t0.c1) BETWEEN (vt1.c0) AND (t0.c1))))<=((LIKELIHOOD(DISTINCT t0.c2, 0.3315637335827266)))) FROM vt1, t0; -- 0ms;
SELECT ALL COUNT(*), vt1.c1, (AVG(t0.c1) IN ()) FROM vt1, t0 WHERE (((NULL)-(MIN(NULL, x'')))) GROUP BY CASE ((x'') NOT BETWEEN (vt1.c2) AND (vt1.c1))  WHEN ((vt1.c2)LIKE(vt1.c2)) THEN ((((t0.c1)AND(vt1.c1)))OR(t0.c0)) END, vt1.c2, ((((((((((vt1.c1)OR(t0.c0)))AND(CASE WHEN vt1.c0 THEN t0.c1 WHEN vt1.c1 THEN t0.c1 WHEN t0.c0 THEN vt1.c0 ELSE '' END)))AND(CAST(vt1.c0 AS TEXT))))AND((((t0.c1, vt1.c2, vt1.c1)) NOT BETWEEN ((vt1.c1, t0.c2, t0.c2)) AND ((t0.c1, vt1.c2, vt1.c1))))))AND(((((t0.c2)OR(x'1a12')))OR(vt1.c0)))) HAVING CAST(0.5058535225836782 AS REAL); -- 0ms;
SELECT CASE (((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0)))  WHEN (~ (vt1.c1)) THEN CAST(vt1.c0 AS TEXT) END FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c2) NOT NULL) IN (GROUP_CONCAT(t0.c1))) FROM vt1, t0 WHERE (CAST('-716443543' COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT ALL vt1.c0, GROUP_CONCAT((- (t0.c1))), (((vt1.c0) NOT BETWEEN (vt1.c1) AND (t0.c0)) IN ()) FROM vt1 WHERE (CASE (+ (0X15cf4ecf))  WHEN ((0.3703779748215894)/(NULL)) THEN ((((x'2048')OR(-817014418)))OR('xO')) END);SELECT ALL json_insert(CASE WHEN vt1.c1 THEN t0.c2 WHEN NULL THEN t0.c0 WHEN vt1.c2 THEN vt1.c2 ELSE NULL END, ((((t0.c1)OR(vt1.c0)))AND(vt1.c0)), ((vt1.c2)<(t0.c2))) FROM vt1, t0; -- 0ms;
SELECT ALL TOTAL(CAST(vt1.c2 AS TEXT)) OVER () FROM t0, vt1; -- 0ms;
SELECT NULL FROM vt1, t0; -- 0ms;
SELECT TOTAL_CHANGES(), ((((vt1.c0)>=(t0.c1)))!=((- (vt1.c0)))), CAST(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) AS REAL) FROM t0, vt1 WHERE (CASE WHEN ((NULL) NOT NULL) THEN (('207366842') NOT BETWEEN (-1582274985) AND (x'')) END); -- 0ms;
SELECT DISTINCT (('')IS('슰7htM,su')), (~ ((((t0.c2, t0.c2, vt1.c2))==((vt1.c1, vt1.c1, vt1.c2))))), ((((((((CASE vt1.c0  WHEN vt1.c2 THEN '1132519018' ELSE t0.c2 END)AND(MIN(t0.c0))))AND(((vt1.c0)GLOB(t0.c2)))))AND('216382808')))OR(((vt1.c0)=(vt1.c1)))) FROM t0;SELECT DISTINCT LAST_VALUE(CASE ((('1733232643')) BETWEEN ((vt1.c2)) AND ((vt1.c1)))  WHEN (vt1.c1 IN ()) THEN ((vt1.c2)IS(vt1.c1)) WHEN vt1.c0 COLLATE BINARY THEN json_array_length(vt1.c1, vt1.c0) WHEN ((vt1.c1) ISNULL) THEN (vt1.c2 IN ()) END) OVER () FROM vt1 WHERE (((((NULL COLLATE NOCASE)OR(((-1024027996) BETWEEN (NULL) AND (NULL)))))OR((((0.4101253413052368))==((x'')))))); -- 0ms;
SELECT DISTINCT ((((((((((((((((((((vt1.c2)OR(vt1.c2)))OR(vt1.c2)))OR(t0.c2)))OR(t0.c2)))AND(CAST(vt1.c2 AS INTEGER))))AND(TYPEOF(DISTINCT vt1.c2))))AND(((t0.c0) ISNULL))))AND(AVG(vt1.c0))))OR(CAST(vt1.c0 AS BLOB))))OR(TYPEOF(vt1.c1))), (+ (((NULL) NOTNULL))), (((vt1.c0, vt1.c0, vt1.c2)) BETWEEN ((((((((((((((t0.c0)AND(t0.c2)))AND(vt1.c1)))OR(t0.c2)))OR(t0.c0)))AND(t0.c2)))OR(vt1.c0)), ((t0.c1)%(vt1.c2)), SUM(t0.c0))) AND ((((((((((x'ea359789')OR(t0.c2)))OR('')))OR(t0.c0)))AND(x'')), ((t0.c1)%(vt1.c1)), (+ (vt1.c1))))) FROM t0, vt1 WHERE (((CAST(NULL AS REAL)) IS FALSE)); -- 0ms;
SELECT DISTINCT 0.4502446111869137 FROM t0 WHERE (NULL COLLATE RTRIM); -- 1ms;
SELECT MIN(((vt1.c2) ISNULL)) FROM vt1 WHERE ((CAST(-1297418373 AS INTEGER) IN ())) GROUP BY LIKELIHOOD(DISTINCT (vt1.c0 IN ()), 0.24494637971166722) HAVING (((t0.c2 IN ()))<=(((x'14e2')>(vt1.c2)))); -- 0ms;
SELECT (((SUM(t0.c1), (+ (vt1.c2)), ((((vt1.c2)AND(t0.c2)))AND(vt1.c1))))<>((CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 END, CAST(0.34773905518343495 AS REAL), ((((((((t0.c2)AND(t0.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(x'04ab'))))) FROM vt1, t0 WHERE (TIME((~ (0.37464491457131777)), ((-1.297418373E9)OR('-1145910275')), ((NULL)||(0.708702859809519)))); -- 0ms;
SELECT COUNT(*) FROM vt1; -- 0ms;
SELECT DISTINCT (((t0.c2)<=(t0.c1)) IN ()) FROM t0, vt1 WHERE (((((((0.774634573162729)AND(x'c92e')))OR(-1.96450714E8)))>>(COALESCE('1878528705', '1652413766', x'', 0.6042794003940011)))); -- 0ms;
SELECT ALL (((x''))<>((CAST(vt1.c0 AS INTEGER)))), TYPEOF(DISTINCT t0.c0), LIKE(((((((((t0.c0)OR(vt1.c2)))OR(t0.c0)))AND(NULL)))OR(vt1.c1)), -8.17014418E8) FROM vt1, t0; -- 0ms;
SELECT (~ (vt1.c2 COLLATE NOCASE)) FROM vt1 ORDER BY (+ ((vt1.c0 IN (t0.c2, vt1.c1))))  NULLS FIRST, ((((((vt1.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))OR(x'')))OR((- (vt1.c1))));SELECT CASE ((t0.c0)>>(t0.c0))  WHEN ((t0.c0)LIKE(vt1.c1)) THEN ((vt1.c2)>>(t0.c0)) WHEN '420945460' THEN CASE WHEN vt1.c1 THEN t0.c2 WHEN t0.c0 THEN '' WHEN t0.c2 THEN vt1.c2 END WHEN ((x'') IS FALSE) THEN ((t0.c1)=(t0.c0)) ELSE ((vt1.c0)LIKE(t0.c1)) END FROM t0 WHERE (((((-445378439 IN ())))>((CAST(0.7013234351396967 AS TEXT)))));SELECT DISTINCT ((1132519018)|((((vt1.c0))>((t0.c1))))) FROM vt1, t0 WHERE (x'') GROUP BY '' HAVING CAST(vt1.c1 COLLATE BINARY AS TEXT); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT CASE WHEN t0.c1 THEN t0.c2 ELSE NULL END), ((((((vt1.c1))=((t0.c2)))))<=((LOWER(t0.c0)))), CAST(t0.c0 AS TEXT) COLLATE NOCASE FROM t0 WHERE ('947126213');SELECT ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((((vt1.c1)OR(vt1.c0)))AND(vt1.c1))) AND ((- (t0.c2)))), SUM(((vt1.c2)>(t0.c2))) OVER ( ORDER BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1)))) NOT BETWEEN ((t0.c0 IN (t0.c1))) AND (t0.c0 COLLATE RTRIM)) DESC), (((((vt1.c0 IN ()))OR(CAST(vt1.c0 AS INTEGER))))OR((~ (NULL)))) FROM vt1 LIMIT -1821547030;SELECT DISTINCT (((((('{Z)<5擎.')AND(x'')))OR(t0.c2)))&((x'' IN ()))) FROM vt1 WHERE (CASE WHEN CAST(0Xffffffffe5225061 AS INTEGER) THEN ((-2100967612) NOTNULL) END);SELECT ((t0.c2)-(NULL COLLATE RTRIM)) FROM t0, vt1 WHERE (NULL); -- 0ms;
SELECT ALL (((((1836399233, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((t0.c1, t0.c1, t0.c2)))) BETWEEN (x'') AND (t0.c2)) FROM t0 WHERE (((((x'a4234684') ISNULL))>=((((x'', ']3.\na>zs', 0Xffffffff8127a83c))<>(('636781385', 0xffffffff936d65ea, '1499707638'))))));SELECT ALL ((TOTAL(t0.c2)) NOTNULL) FROM vt1 WHERE ((((('216382808')%('262727178'))) NOT BETWEEN (1262798038) AND ((('-1931131688') IS TRUE))));SELECT (- (((vt1.c1) BETWEEN (t0.c2) AND (vt1.c1)))), ((((t0.c0)>=(t0.c1)))*(((t0.c0)IS NOT(vt1.c1)))), (CAST(t0.c1 AS TEXT) IN ()) FROM t0 WHERE (IFNULL(x'', CASE WHEN x'' THEN 'kesj溏|Q	' END));SELECT DISTINCT ((vt1.c0 COLLATE BINARY)+(CAST(vt1.c1 AS TEXT))) FROM t0;SELECT ALL ((((CAST(vt1.c2 AS BLOB))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) IS TRUE))), ((vt1.c1)>=(((t0.c0)==('c_')))), vt1.c0 FROM vt1;SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c2))) NOT BETWEEN (((vt1.c2)LIKE(vt1.c2))) AND ('0.03641146377217941')), ((((t0.c1)==(vt1.c2))) IS TRUE), CAST(SQLITE_COMPILEOPTION_GET(t0.c2) AS INTEGER) FROM vt1 WHERE (((((LIKELIHOOD('-1538806613', 0.6727049434976508))AND('' COLLATE RTRIM)))OR(((x'') NOTNULL)))) ORDER BY vt1.c1 DESC, ((((vt1.c0)>=(vt1.c0)))*(vt1.c1))  NULLS LAST;SELECT CAST(vt1.c0 AS BLOB) FROM vt1 INDEXED BY i84;SELECT DISTINCT ((((vt1.c2)OR(t0.c2)))OR(vt1.c0)) COLLATE NOCASE FROM t0, vt1 WHERE (((((0.9947040481106684)AND(((0.4305269003568659) BETWEEN (x'') AND (0xffffffff936d65ea)))))OR(((x'4970')>(NULL))))); -- 0ms;
SELECT ALL (- (SQLITE_SOURCE_ID())) FROM t0, vt1 ORDER BY ((((vt1.c0)OR(t0.c0)))OR(0.44222122731323343)) COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, t0; -- 0ms;
SELECT DISTINCT TOTAL(LIKELY(vt1.c1)) OVER () FROM vt1 WHERE ((((((+ (0x69f1e17d)))OR(((x'c350') BETWEEN (x'') AND (x'')))))AND(0.5616175222572111 COLLATE NOCASE))) LIMIT -302261289 OFFSET 545903843; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN t0.c2 THEN vt1.c2 WHEN vt1.c1 THEN t0.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN t0.c0 WHEN vt1.c2 THEN t0.c0 WHEN vt1.c2 THEN vt1.c2 WHEN t0.c1 THEN vt1.c1 END THEN t0.c1 COLLATE RTRIM ELSE (((x'')) BETWEEN ((vt1.c1)) AND ((t0.c0))) END, CASE vt1.c2  WHEN (+ (vt1.c1)) THEN t0.c0 COLLATE BINARY WHEN 0.06924860501948638 THEN (((t0.c2))>((vt1.c1))) WHEN (+ (t0.c1)) THEN CAST('-1763097844' AS BLOB) END, vt1.c2 FROM t0, vt1 WHERE (((0xffffffffd3537aa8)LIKE(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (- (CASE WHEN vt1.c2 THEN vt1.c0 WHEN t0.c1 THEN vt1.c1 WHEN vt1.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN 1.878528705E9 THEN t0.c1 END)) FROM t0, vt1 WHERE (TYPEOF(DISTINCT TRIM(DISTINCT 0.049853431939016035))); -- 0ms;
SELECT (vt1.c2 COLLATE BINARY IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT CAST(((((vt1.c1)AND(t0.c1)))AND('923095222')) AS REAL) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((vt1.c2 IN (t0.c2)) IN ()) FROM vt1; -- 1ms;
SELECT DISTINCT (((+ (t0.c1)))<((((t0.c1, t0.c2, vt1.c2))<((t0.c1, vt1.c0, t0.c2))))) FROM t0;SELECT CAST(LIKE(vt1.c0, x'', '?') AS NUMERIC) FROM t0, vt1; -- 0ms;
SELECT DISTINCT SUM(((t0.c0)>(vt1.c2))) COLLATE BINARY FROM t0 WHERE (0Xffffffffbe3ab0ef);SELECT DISTINCT (~ ((('now,Y.u')>(vt1.c1)))) FROM vt1, t0 LIMIT -482734176; -- 0ms;
SELECT DISTINCT SUM((- (t0.c2))), LAST_VALUE(((((((t0.c1)OR(t0.c2)))AND(t0.c2))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c1))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END))) OVER ( ORDER BY 0.7724566107171478 DESC  NULLS LAST, (((vt1.c0 IN ())) NOT NULL) DESC), DENSE_RANK() OVER (), vt1.c2, ((t0.c2) BETWEEN (t0.c1) AND (vt1.c0)) COLLATE RTRIM, CAST(t0.c1 AS REAL) COLLATE NOCASE, load_extension(((t0.c1)<=(vt1.c0))) FROM t0 WHERE (CAST(((((0.06924860501948638)OR(x'')))OR(x'')) AS REAL)) LIMIT 493621953;SELECT DISTINCT (('lX4}b_?\r.') IS TRUE) FROM t0 ORDER BY (+ (CASE WHEN vt1.c2 THEN t0.c0 END));SELECT (+ (((vt1.c0) BETWEEN (t0.c1) AND (t0.c2)))), CASE WHEN SUBSTR(vt1.c0, t0.c2) THEN CASE vt1.c0  WHEN t0.c0 THEN t0.c1 END ELSE ((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)) END, (vt1.c0 IN (t0.c2)) COLLATE RTRIM FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((t0.c2 COLLATE NOCASE) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c2)||(vt1.c1)) AS NUMERIC) FROM t0, vt1 WHERE (((NULL) BETWEEN (1007392323) AND (x'e2b8')) COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT DISTINCT MAX(vt1.c1 COLLATE NOCASE) COLLATE NOCASE FROM t0, vt1 WHERE ((((x'4bd3', 0.6945431919729721, x'34e5', NULL, '639088383')) BETWEEN ((NULL, ((((x'')AND(x'')))AND(NULL)), (0.11718092242210432 IN ()), (((((((((((('')OR(0.7463702480052146)))OR(NULL)))AND(x'e0f2')))OR('-302261289')))OR(-200738595)))AND(0.5616175222572111)), IFNULL(DISTINCT NULL, NULL))) AND ((((0.6714733889286366) NOT NULL), ((((NULL)AND('-749503832')))OR(x'')), ((x'')AND(636781385)), (- (NULL)), (((x''))=((0.4114708452635497))))))); -- 0ms;
SELECT DISTINCT '+k' FROM vt1, t0; -- 0ms;
SELECT DISTINCT '' FROM vt1, t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0, vt1; -- 1ms;
SELECT SUM(((t0.c1) NOT BETWEEN (vt1.c1) AND (t0.c0)) COLLATE BINARY) OVER (), json(x''), ((t0.c2 COLLATE BINARY) IS FALSE), ((((CAST(0Xffffffff909bb20e AS TEXT))OR(MIN(t0.c2))))OR((~ (0xffffffffa808c87d)))), (((((vt1.c2)AND(t0.c2)))AND('511020138')) IN ()) FROM t0, vt1 GROUP BY (NOT ((t0.c1 IN ()))), CASE (((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c1)))  WHEN ((t0.c1) NOT NULL) THEN (- (vt1.c1)) WHEN ((t0.c2)%(t0.c1)) THEN ((vt1.c2)LIKE(vt1.c0)) WHEN (t0.c1 IN ()) THEN (t0.c0 IN ()) END, LIKELY(vt1.c1) COLLATE BINARY HAVING (~ (DATE(vt1.c2, vt1.c0, vt1.c1, t0.c0, vt1.c2))); -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE WHEN UNLIKELY(t0.c1) THEN ((t0.c2)-(vt1.c1)) END, ((((t0.c2)AND(t0.c2)))AND(vt1.c1)) COLLATE BINARY) OVER ( GROUPS BETWEEN ((CAST(x'' AS INTEGER)) NOT BETWEEN ((~ (t0.c2))) AND ((+ (vt1.c1)))) PRECEDING AND ((t0.c2 COLLATE BINARY)*(((vt1.c0)<=(t0.c2)))) PRECEDING), (~ ((2.16382808E8 IN ()))), (((vt1.c2)) BETWEEN ((((t0.c0)OR(vt1.c1)))) AND ((t0.c2 COLLATE BINARY))), TOTAL(((vt1.c0) ISNULL)), x'' FROM vt1, t0 LIMIT 1821815005 OFFSET 1499707638;SELECT DISTINCT (((~ (t0.c1))) NOT NULL) FROM t0, vt1 WHERE (CAST(((x'') BETWEEN (NULL) AND ('-543808040')) AS NUMERIC)) LIMIT 644983757; -- 0ms;
SELECT DISTINCT 0.35755792039706424 FROM t0; -- 0ms;
SELECT ALL (((((t0.c2) BETWEEN (t0.c1) AND (NULL)), vt1.c2 COLLATE RTRIM, ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))))>(((((vt1.c0))=((vt1.c0))), json_extract(vt1.c1, t0.c0), CAST(vt1.c2 AS BLOB)))) FROM t0 WHERE (TOTAL_CHANGES());SELECT (((((((((((vt1.c1))>=((t0.c1))))OR(CAST(t0.c1 AS BLOB))))AND(vt1.c2)))AND(vt1.c1 COLLATE NOCASE)))OR(0.6161332691416955)), ((CAST(vt1.c0 AS TEXT)) NOTNULL), (((t0.c1)) BETWEEN ((((t0.c2)AND(vt1.c2)))) AND ((((vt1.c2) NOT NULL)))) FROM vt1 INNER JOIN t0 ON CASE WHEN t0.c1 THEN ((vt1.c0) NOT NULL) ELSE ((vt1.c0) BETWEEN (t0.c1) AND (t0.c0)) END LIMIT -1269633120; -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) COLLATE BINARY FROM vt1 WHERE (((CAST(0.10335000317166332 AS NUMERIC))+(CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c1) BETWEEN (vt1.c2) AND (vt1.c1)))AND((((t0.c0))<=(('184379138'))))))AND(CASE WHEN t0.c1 THEN t0.c2 WHEN vt1.c2 THEN t0.c1 WHEN t0.c0 THEN vt1.c1 WHEN t0.c1 THEN vt1.c2 WHEN t0.c1 THEN t0.c1 END)))AND(((vt1.c1)AND(t0.c1)))))OR((((t0.c0, vt1.c2, vt1.c2))>=((vt1.c1, vt1.c0, vt1.c0))))) FROM vt1;SELECT DISTINCT CASE WHEN ((((((((vt1.c2)OR(t0.c1)))AND(t0.c0)))OR(vt1.c0)))AND(vt1.c0)) THEN (+ (vt1.c2)) WHEN TOTAL(t0.c1) THEN COUNT(t0.c0) WHEN 0xffffffffe3345fed THEN ((vt1.c0)IS(vt1.c2)) WHEN 0.8033511575072704 THEN NULL WHEN MIN(vt1.c1) THEN (vt1.c2 IN ()) ELSE ((vt1.c0) BETWEEN (t0.c1) AND (t0.c1)) END, ((((COUNT(*))AND(((((t0.c2)OR(t0.c2)))OR(t0.c2)))))AND(((t0.c1) ISNULL))), LAST_VALUE(CAST(CAST(t0.c2 AS INTEGER) AS TEXT)) OVER () FROM t0 WHERE (CAST(((-1.024027996E9)AND(x'')) AS REAL));SELECT DISTINCT ((CAST(0xffffffff82c5c744 AS INTEGER))<<(vt1.c1 COLLATE BINARY)) FROM vt1, t0 WHERE ((x'd3b8' IN ())); -- 0ms;
SELECT DISTINCT ((((- (vt1.c1)), ((vt1.c0)<<(vt1.c0)), t0.c1))<=((vt1.c2 COLLATE NOCASE, json_extract(t0.c0, vt1.c2, t0.c2, t0.c1), ((t0.c1) NOT NULL)))) FROM t0, vt1 WHERE (((((0.9982794323866467)%(x''))) IS TRUE)); -- 0ms;
SELECT (((t0.c1)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c2 ELSE 0.6466358414886384 END)) AND ((CAST(t0.c1 AS TEXT)))), (((x'', t0.c1, vt1.c2)) NOT BETWEEN ((CASE WHEN t0.c2 THEN vt1.c0 WHEN vt1.c0 THEN t0.c1 WHEN t0.c1 THEN vt1.c0 ELSE t0.c1 END, MAX(t0.c0), ((t0.c1) IS FALSE))) AND ((0.2570748493526872, LIKELIHOOD(DISTINCT t0.c2, 0.13108030212010024), CAST('1499707638' AS TEXT)))), 'mV' FROM t0, vt1 WHERE (TRIM(((NULL)%(x'c3f6')))); -- 0ms;
SELECT DISTINCT CAST(vt1.c1 AS REAL), t0.c2, CASE WHEN (((('-1763097844')OR(vt1.c2)))OR(NULL)) THEN t0.c1 COLLATE RTRIM ELSE NULL END FROM t0 INDEXED BY i84 WHERE (CAST(NULL COLLATE NOCASE AS BLOB));SELECT DISTINCT ((CAST(vt1.c2 AS BLOB)) IS TRUE) FROM t0, vt1 WHERE ((x'' COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT TOTAL(((((vt1.c0)AND(vt1.c2)))AND(vt1.c0))) FILTER(WHERE ((CASE WHEN vt1.c2 THEN t0.c1 WHEN vt1.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE vt1.c2 END)+(NULL))) OVER () FROM vt1 WHERE (((((((x'b373')OR(0xffffffff87549fbb)))AND(0.10573998206089108))) BETWEEN (TRIM(DISTINCT '', NULL)) AND (CAST(NULL AS REAL))));SELECT DISTINCT (((vt1.c2, t0.c1, t0.c1)) NOT BETWEEN ((((vt1.c2) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE t0.c1  WHEN vt1.c2 THEN t0.c2 END, (~ (t0.c2)))) AND ((MIN(vt1.c2), ((t0.c2)/(t0.c0)), (((vt1.c0, t0.c1, vt1.c0)) NOT BETWEEN ((t0.c2, t0.c2, vt1.c1)) AND ((t0.c0, t0.c0, vt1.c2)))))) FROM t0, vt1; -- 0ms;
SELECT ((vt1.c0) NOT BETWEEN (((((((((t0.c1)OR(t0.c0)))AND(t0.c0)))AND(vt1.c2)))AND(vt1.c1))) AND (t0.c0)) FROM vt1, t0 WHERE (LOWER((+ (',n''A')))) GROUP BY (x'' IN (t0.c1)) HAVING CAST((- (vt1.c0)) AS INTEGER); -- 0ms;
SELECT ALL t0.c1, COUNT(*), ((vt1.c2 IN (0Xffffffffa447acab)) IN ()) FROM vt1, t0 WHERE (CAST((~ (x'')) AS INTEGER)) LIMIT -1615187063 OFFSET -716443543; -- 0ms;
SELECT DISTINCT (((t0.c2)) BETWEEN (((+ (vt1.c0)))) AND ((((x'')=(vt1.c0))))), (((vt1.c2 IN ())) NOT BETWEEN (MIN(']	')) AND ((t0.c2 IN ()))), ((((0.834052975314521) BETWEEN (x'c02a') AND (t0.c1)))>=(((t0.c0)+(vt1.c1)))) FROM vt1;SELECT DISTINCT t0.c2, (((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((t0.c2)))) NOT BETWEEN (NULL) AND (vt1.c2 COLLATE NOCASE)), MAX((~ (vt1.c0))) COLLATE NOCASE FROM t0 WHERE (((((((((CAST(NULL AS BLOB))AND(((((-9.54430366E8)OR(x'')))OR(-1.505810359E9)))))AND((0.4720616905099677 IN ()))))AND(((((((((x'')AND('J]BYHL(W')))AND(x'')))OR(x'')))OR('?z80}')))))AND(((((x'a3ac')AND(NULL)))AND(NULL)))));SELECT DISTINCT ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) ISNULL) FROM t0, vt1 WHERE ((+ ((('1836399233') NOT NULL)))) LIMIT 2084352442 OFFSET -1782406232; -- 0ms;
SELECT ALL CASE WHEN ((t0.c2) NOT BETWEEN (0.6574414698364193) AND (t0.c0)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE (+ (t0.c0)) END FROM t0 WHERE ((+ (TYPEOF(x'')))); -- 0ms;
SELECT ((CASE WHEN vt1.c2 THEN t0.c2 END) BETWEEN (t0.c1 COLLATE RTRIM) AND (((0.9524452480240496)LIKE(t0.c2)))) FROM vt1, t0 WHERE (((x'' IN ('-1173539869', x'')) IN ())); -- 0ms;
SELECT DISTINCT CASE (- (t0.c2))  WHEN ((vt1.c2) NOT NULL) THEN (((vt1.c0))<=((vt1.c1))) ELSE (('') BETWEEN ('*)') AND ('-1713363138')) END, ((((((((((vt1.c0)OR(vt1.c2)))AND(vt1.c2)))OR(NULL)))OR(vt1.c2)))LIKE(((vt1.c1)IS NOT(t0.c1)))), TOTAL((+ (t0.c2))) FILTER(WHERE ((((((((((vt1.c2)OR(t0.c0)))OR(vt1.c0)))AND(t0.c0)))OR(t0.c0))) IS TRUE)) OVER () FROM vt1, t0 WHERE (SQLITE_COMPILEOPTION_GET(LIKELIHOOD(DISTINCT NULL, 0.7428279554899334))); -- 0ms;
SELECT DISTINCT ((x'' IN ()) IN ()) FROM vt1, t0 WHERE (CASE WHEN ((NULL)%(NULL)) THEN '937237308' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT vt1.c2, LIKELY(t0.c2)), ((((((((t0.c2)OR((('-1181732550') ISNULL))))AND(-2024497221)))AND(x'')))OR(CAST(vt1.c0 AS INTEGER))), (((((((('?Lx.r')AND('639088383')))OR((~ (t0.c1)))))AND(CAST(t0.c2 AS REAL))))AND((t0.c2 IN ()))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (- (CAST(t0.c0 AS NUMERIC))) FROM vt1, t0; -- 0ms;
SELECT CAST(TRIM(vt1.c2, vt1.c0) AS REAL) FROM vt1, t0 WHERE (((0.24036175696273265)<<(NULL)) COLLATE RTRIM); -- 0ms;
SELECT (((((t0.c1)*(vt1.c0)), CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt1.c1 ELSE vt1.c2 END, (t0.c0 IN ())))<((((vt1.c2) IS FALSE), TRIM(t0.c2), CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))) FROM t0 WHERE (0.07536541729427859) GROUP BY ((SQLITE_COMPILEOPTION_GET(t0.c1))>>((((t0.c0)) BETWEEN ((0xfffffffff408f8dd)) AND ((0x5fc5a84))))) HAVING ((CASE vt1.c1  WHEN vt1.c1 THEN t0.c2 ELSE t0.c0 END) NOT NULL);SELECT DISTINCT ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))OR((vt1.c2 IN (t0.c2)))))AND(NULL)), TYPEOF(DISTINCT x'' COLLATE RTRIM), RANK() OVER (), CAST(vt1.c2 COLLATE BINARY AS REAL), (+ ((t0.c0 IN ()))) FROM vt1, t0 GROUP BY t0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE LIMIT -551193012; -- 0ms;
SELECT CASE CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN x'6664' WHEN t0.c1 THEN vt1.c0 END  WHEN COALESCE(t0.c2, vt1.c2) THEN ((vt1.c2) IS FALSE) WHEN ((t0.c0)<>(vt1.c2)) THEN '0.4489144149347467' COLLATE NOCASE WHEN ((t0.c0) NOT BETWEEN (vt1.c2) AND (t0.c0)) THEN GROUP_CONCAT(t0.c0) END, ((((vt1.c2)|(t0.c2)))GLOB(((((t0.c2)AND(t0.c0)))AND(t0.c1)))), t0.c0 FROM vt1, t0 WHERE (((NULL)||(((0.7999519223798879)>>(0.06924860501948638))))); -- 1ms;
SELECT ALL (CAST(t0.c2 AS NUMERIC) IN (SUBSTR(t0.c0, '1286858314'))) FROM t0 WHERE (((CASE WHEN NULL THEN '?z80}' END) NOT BETWEEN ((('d')IS NOT(-1.145910275E9))) AND (CASE WHEN '1772583815' THEN '' WHEN NULL THEN 365907663 WHEN '-2009156627' THEN '' WHEN '~⫝I' THEN '' WHEN -1782406232 THEN '-1105789137' ELSE x'07b9' END))); -- 0ms;
SELECT DISTINCT (t0.c0 IN ()) FROM vt1 WHERE (((CASE WHEN '1277193871' THEN '0.6714733889286366' ELSE '-1257241042' END) IS FALSE)); -- 0ms;
SELECT DISTINCT AVG((((vt1.c2, vt1.c0, vt1.c2)) BETWEEN ((vt1.c1, vt1.c0, vt1.c2)) AND ((vt1.c2, vt1.c1, x'')))) OVER ( ROWS BETWEEN  CURRENT ROW AND (((CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c1 END))>=((t0.c0))) PRECEDING) FROM t0 WHERE ('') ORDER BY ((vt1.c0) NOTNULL)  NULLS LAST;SELECT DISTINCT (((vt1.c0) NOT BETWEEN (vt1.c2) AND (t0.c0)) IN ()) FROM vt1, t0 WHERE (((NULL) NOT NULL)) LIMIT -112848566 OFFSET 904978918; -- 0ms;
SELECT ALL COALESCE(0.824924215229443, CAST(t0.c1 AS TEXT), CAST(t0.c1 AS REAL), (+ (vt1.c2))) FROM vt1, t0 ORDER BY vt1.c1 DESC  NULLS LAST; -- 0ms;
SELECT SUBSTR(vt1.c2, (~ (x'c2de'))) FROM vt1, t0 WHERE ((NOT (((0.2884738977699819)IS NOT(x''))))) GROUP BY ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))=(((((((((t0.c1)OR(vt1.c1)))AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))) LIMIT 262727178; -- 0ms;
SELECT DISTINCT x'3025' FROM vt1; -- 0ms;
SELECT DISTINCT (~ (vt1.c0)) COLLATE NOCASE, CAST((t0.c1 IN ()) AS BLOB), CASE WHEN t0.c0 THEN CAST(t0.c1 AS TEXT) END FROM vt1;SELECT ALL CASE WHEN vt1.c2 COLLATE BINARY THEN (NOT (t0.c1)) WHEN TIME(vt1.c1, t0.c1, t0.c1, vt1.c0, vt1.c0) THEN ((vt1.c2)+(vt1.c2)) WHEN ((t0.c1)<<(vt1.c2)) THEN ((vt1.c1) NOT BETWEEN (t0.c1) AND (vt1.c1)) ELSE ((vt1.c2) NOT BETWEEN (t0.c2) AND (vt1.c0)) END FROM t0;SELECT DISTINCT ((vt1.c0 COLLATE RTRIM)-(t0.c1)) FROM t0 WHERE (((NULL IN ()) IN ()));SELECT DISTINCT CUME_DIST() OVER () FROM vt1 WHERE (((CASE x''  WHEN '+k' THEN '467476569' WHEN x'bb43' THEN NULL WHEN '1860790126' THEN '' END) ISNULL)) ORDER BY CAST(t0.c1 AS REAL) COLLATE BINARY;SELECT DISTINCT (~ ((((t0.c2))<>((vt1.c1))))) FROM t0 WHERE (((((((0.7617808241449006)/('-1868610696')))AND(CAST('	#' AS BLOB))))OR(((x'651a') NOT BETWEEN (x'73aa') AND ('0.6714733889286366')))));SELECT (((t0.c1)) BETWEEN ((CAST(vt1.c2 AS BLOB))) AND ((NULL))) FROM t0, vt1 WHERE (CASE WHEN (((0.5010338620050462, x'', '0.0'))>=(('636781385', NULL, NULL))) THEN (x'1dd3' IN ()) END); -- 0ms;
SELECT ((TOTAL_CHANGES())=((vt1.c2 IN ()))) FROM t0, vt1; -- 0ms;
SELECT (CASE WHEN t0.c0 THEN t0.c2 ELSE vt1.c0 END IN ()) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)|(vt1.c0)))+(CASE WHEN t0.c2 THEN vt1.c1 ELSE vt1.c0 END)) FROM vt1, t0; -- 0ms;
SELECT ALL t0.c2, t0.c0, (- (((((((((vt1.c2)OR(t0.c1)))OR(vt1.c0)))OR(vt1.c2)))OR(t0.c2)))) FROM vt1;SELECT DISTINCT ((((t0.c0)>>(t0.c0))) NOTNULL), ((((((((((((((t0.c1)OR(t0.c1)))AND(t0.c2)))OR(t0.c1)))AND(t0.c1)))AND(vt1.c1)))AND(t0.c2)))<<(((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c1)))), (CAST('-629142930' AS REAL) IN ()) FROM vt1, t0 GROUP BY NULLIF(CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c2 END, (('')IS(t0.c2))) HAVING (((- (t0.c0)))+((- (0X2854e19f)))); -- 0ms;
SELECT ((INSTR(vt1.c0, vt1.c1)) IS FALSE), 6.76651423E8, (((vt1.c0 IN ()))||(vt1.c2)), x'', '1132519018' FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c2 COLLATE BINARY)AND('' COLLATE NOCASE)) FROM t0;SELECT COUNT(*) FILTER(WHERE t0.c0) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW) FROM vt1 WHERE ((- (IFNULL(x'ca57', '493621953'))));SELECT ALL DENSE_RANK() OVER (), ((((t0.c1)&(vt1.c2)))/((t0.c2 IN ()))), (((((t0.c1)<>(vt1.c0))))==((((vt1.c0)>(vt1.c2))))) FROM t0, vt1 GROUP BY ((((NULL)||(t0.c1)))<=((((vt1.c1))<=((vt1.c1))))), CAST(((t0.c0)+(t0.c1)) AS REAL), CASE WHEN NULLIF(DISTINCT vt1.c2, t0.c1) THEN CAST('1331722619' AS BLOB) WHEN ((t0.c2)AND(1.553259261E9)) THEN ((vt1.c1)GLOB(vt1.c1)) WHEN ((t0.c1)<<(t0.c2)) THEN CAST(vt1.c2 AS NUMERIC) ELSE INSTR(t0.c0, 0.23214787359653222) END HAVING (+ (CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END)); -- 0ms;
SELECT ((vt1.c2)IS(vt1.c0)) COLLATE NOCASE FROM vt1 WHERE (((((((NULL)+(0.5010338620050462)))OR(((0.8154782240035172) ISNULL))))AND((+ (0.28182275483029584))))); -- 0ms;
SELECT ALL ((((vt1.c2) NOTNULL)) NOT NULL) FROM vt1, t0 GROUP BY UPPER((t0.c0 IN ())), ((((((t0.c0)==(t0.c2)))AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c1))))))OR(NULL)), TIME(((((vt1.c1)OR(vt1.c2)))OR(vt1.c1)), (((vt1.c1, t0.c0, t0.c2))<=((0.879091913921765, vt1.c1, t0.c1))), ((vt1.c1)>(vt1.c0))); -- 0ms;
SELECT ALL (((((t0.c1))==((vt1.c2)))) BETWEEN (((((t0.c2)AND(t0.c0)))OR(vt1.c1))) AND (((vt1.c0) NOT NULL))) FROM t0, vt1; -- 0ms;
SELECT CASE t0.c2 COLLATE RTRIM  WHEN ((t0.c1) BETWEEN (' 䌌g\C}䁍5H') AND (t0.c1)) THEN ((vt1.c0) BETWEEN (x'') AND (t0.c1)) WHEN t0.c2 THEN COALESCE(vt1.c1, vt1.c0) WHEN '62992202' THEN (((vt1.c0))<((vt1.c1))) ELSE (~ (vt1.c0)) END FROM t0;SELECT ((((vt1.c0)&(vt1.c0)))OR(UPPER(t0.c2))) FROM vt1 CROSS JOIN t0 ON (- (t0.c2 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CAST(NULL AS BLOB), (- (((vt1.c2) BETWEEN (vt1.c1) AND (vt1.c1)))), CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE vt1.c0 END COLLATE RTRIM FROM vt1 WHERE (((((((((NULL)AND('-184887054')))OR(NULL)))AND(CASE WHEN '' THEN 0.22197114868401224 ELSE NULL END)))OR(CASE WHEN '213070261' THEN NULL END)));SELECT ALL highlight(((t0.c0) NOT NULL), (((1511123388))!=((vt1.c1))), ((((vt1.c1)OR(vt1.c0)))OR(x'4952')), CAST(vt1.c2 AS REAL)), CASE t0.c0 COLLATE RTRIM  WHEN (~ (t0.c1)) THEN '-1643339056' ELSE t0.c2 END, ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt1, t0 WHERE (x'') LIMIT 1053686928 OFFSET 1777459581; -- 0ms;
SELECT ALL ((((((((vt1.c2)AND(((vt1.c1)>(vt1.c2)))))OR(SQLITE_COMPILEOPTION_USED('zsS}.5g}'))))OR(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))))OR(t0.c1)) FROM t0;SELECT DISTINCT ((vt1.c1)<=(t0.c1)) COLLATE RTRIM, LEAD(((CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN vt1.c1 WHEN t0.c1 THEN vt1.c0 END)>(((vt1.c1) IS FALSE))), CAST(((vt1.c2)LIKE(vt1.c0)) AS NUMERIC), load_extension(((vt1.c0)>=(t0.c1)))) OVER (), (((vt1.c0, t0.c1, t0.c1)) NOT BETWEEN ((vt1.c0, '0.28182275483029584', t0.c2 COLLATE BINARY)) AND (((((vt1.c1, vt1.c0, vt1.c2))=((vt1.c1, t0.c2, 0.5086297652497455))), (((t0.c1, vt1.c0, vt1.c2))<>((t0.c1, vt1.c1, vt1.c1))), ((t0.c2)-(vt1.c2))))) FROM vt1, t0 WHERE ((((x'')) NOT BETWEEN ((((0.610128436343991)<(NULL)))) AND ((((NULL)AND(NULL)))))); -- 0ms;
SELECT ALL CASE WHEN 0.23930140388320953 THEN ((((((((t0.c2)OR(t0.c1)))AND(t0.c2)))AND(vt1.c1)))OR(t0.c0)) ELSE ((vt1.c2) IS TRUE) END FROM t0;SELECT DISTINCT CASE WHEN ((((t0.c2)OR(vt1.c2)))AND('-547524468')) THEN t0.c1 COLLATE RTRIM END FROM t0, vt1; -- 0ms;
SELECT COUNT(*) OVER (), ((((t0.c0) IS TRUE)) IS FALSE), ((((((((((((((((((((t0.c2)OR(t0.c2)))AND(vt1.c2)))AND(NULL)))OR(t0.c1)))OR(CASE WHEN vt1.c0 THEN t0.c1 WHEN vt1.c0 THEN t0.c0 WHEN t0.c2 THEN vt1.c0 ELSE vt1.c1 END)))AND((t0.c2 IN (t0.c1, vt1.c1)))))AND(CASE t0.c2  WHEN '0.8033511575072704' THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END)))AND(CASE WHEN t0.c2 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c2 THEN vt1.c0 WHEN t0.c1 THEN vt1.c2 WHEN vt1.c1 THEN t0.c1 ELSE vt1.c0 END)))AND(((vt1.c0)!=(t0.c0)))))OR(CAST(vt1.c2 AS REAL))) FROM t0, vt1; -- 1ms;
SELECT (((vt1.c2)) NOT BETWEEN ((TRIM(DISTINCT vt1.c1, t0.c0))) AND ((((t0.c1) NOT BETWEEN (t0.c1) AND (x''))))), '', TOTAL(CASE vt1.c2  WHEN t0.c1 THEN vt1.c1 END) FROM t0;SELECT DISTINCT vt1.c0 FROM vt1 FULL OUTER JOIN t0 ON 0.03504791927149342; -- 0ms;
SELECT DISTINCT t0.c2 FROM vt1 WHERE (((((((((((NULL)OR(x'f95d')))AND(0X4251f271)))OR(x'')))OR(NULL)))AND((- (8.14110559E8)))));SELECT ALL ((((t0.c2)+(vt1.c0)))<(CAST(vt1.c0 AS BLOB))), NULL, (((((((((((vt1.c0, 0xffffffffafb15833, t0.c2)) NOT BETWEEN ((t0.c2, vt1.c2, t0.c1)) AND ((vt1.c2, vt1.c2, t0.c1))))AND(COALESCE(DISTINCT x'', ''))))OR(((t0.c2)IS NOT(vt1.c1)))))AND(((t0.c0)>=(t0.c2)))))AND((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))) FROM t0 WHERE ((((CASE WHEN '' THEN -1.475819395E9 ELSE 'qz}zTb굞z' END))<(((((NULL)) BETWEEN ((0.7224870320154496)) AND ((NULL))))))) GROUP BY (t0.c1 IN (((0.6506121498531944)IS NOT(vt1.c0)), (~ ('-1143025529'))));SELECT ALL ((MAX(t0.c0, t0.c2, t0.c2, t0.c1))<=(((NULL)<('1548497686')))) FROM t0 WHERE ((((NULL)) BETWEEN ((0.5060827503036284)) AND ((((0.26873554411142286)+(0.6938841059863303)))))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) THEN CASE WHEN t0.c1 THEN t0.c1 END END ASC  NULLS LAST, ((((t0.c2) BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (CAST(t0.c1 AS NUMERIC)) AND (NULL)) ASC; -- 0ms;
SELECT DISTINCT 'Y[H4C/' FROM vt1 WHERE (((((('i~')) BETWEEN (('-1785795610')) AND (('803421149')))) IS TRUE)); -- 0ms;
SELECT DISTINCT (+ ('SL2')) COLLATE NOCASE FROM t0 WHERE (DATE(((((NULL)OR(0xffffffffdc5ae9da)))AND(0xffffffffb30af623)), (('mV')<<(0.7674319231082011)), (0x5c7d0086 IN ()))); -- 0ms;
SELECT ALL (('676651423') IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT CAST(t0.c2 COLLATE NOCASE AS INTEGER), GROUP_CONCAT(CASE t0.c1  WHEN vt1.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN -544756828 THEN NULL END), (((t0.c1)IS NOT(t0.c0)) IN ()) FROM t0 LIMIT 936515081 OFFSET 1777459581;SELECT DISTINCT (((vt1.c0, vt1.c2, t0.c2)) NOT BETWEEN ((t0.c1 COLLATE BINARY, 0.960352693306538, ((t0.c0)>>(t0.c1)))) AND ((vt1.c1 COLLATE NOCASE, ((vt1.c2) BETWEEN (t0.c0) AND (vt1.c1)), t0.c2 COLLATE RTRIM))) FROM t0, vt1; -- 0ms;
SELECT ((((((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))OR(((vt1.c1)>>(vt1.c0)))))AND(((t0.c2)-(vt1.c1)))) FROM t0;SELECT DISTINCT ((CAST(t0.c2 AS TEXT))AND(CASE WHEN vt1.c1 THEN vt1.c2 WHEN 0.1478790284024989 THEN t0.c1 WHEN x'' THEN vt1.c0 ELSE NULL END)) FROM t0, vt1 WHERE ((((NULL COLLATE RTRIM))>(((('-716443543')%(x'0a2f')))))); -- 0ms;
SELECT ALL (+ (vt1.c0)) FROM vt1, t0; -- 0ms;
SELECT ALL x'0754' COLLATE RTRIM COLLATE RTRIM FROM t0 WHERE (((((NULL) ISNULL))IS NOT(JULIANDAY('547944139', x'', '1032752613')))); -- 0ms;
SELECT (((((vt1.c1 IN ()))OR(((vt1.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(CAST(t0.c2 AS INTEGER))) FROM vt1, t0 WHERE (CAST('0.7724566107171478' COLLATE BINARY AS TEXT)) LIMIT -1322056682 OFFSET -1011415025; -- 0ms;
SELECT DISTINCT '/n' FROM vt1 WHERE (TRIM(CASE WHEN NULL THEN 0.22197114868401224 END, x'2277' COLLATE NOCASE)); -- 0ms;
SELECT ALL vt1.c0, (+ ((vt1.c0 IN (t0.c2)))), ((vt1.c2 COLLATE NOCASE)=(CASE t0.c0  WHEN t0.c0 THEN 'c9\rE' ELSE vt1.c0 END)) FROM t0, vt1; -- 0ms;
SELECT SUM((NOT (t0.c0)) COLLATE BINARY) FROM vt1;SELECT DISTINCT (((vt1.c0, t0.c2, vt1.c2)) NOT BETWEEN ((((t0.c0)%(vt1.c0)), CAST(vt1.c0 AS NUMERIC), t0.c0)) AND (((((t0.c1))<=((1.777459581E9))), ((t0.c1)GLOB(0.04533000781822927)), (('n奮') NOT NULL)))), (NOT (CASE WHEN vt1.c2 THEN t0.c2 WHEN vt1.c2 THEN x'' WHEN vt1.c2 THEN t0.c2 END)), x'bde6', LIKELY(DISTINCT ((vt1.c1)&(t0.c2))), RANK() OVER ( PARTITION BY vt1.c2, ((((t0.c0)<<(vt1.c1))) NOT NULL)) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c1)) BETWEEN ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) AND ((CASE WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE t0.c2 END))), (((('')OR(MAX(vt1.c0))))OR(t0.c1 COLLATE BINARY)), ((((t0.c1)||(t0.c0))) IS TRUE) FROM vt1 WHERE (((1.277193871E9 COLLATE NOCASE)>(((x'') NOT BETWEEN (NULL) AND ('-1216870941'))))) GROUP BY CAST(((vt1.c2)||(t0.c1)) AS TEXT);SELECT (((t0.c1)) NOT BETWEEN ((CASE WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END)) AND ((((NULL) NOT BETWEEN (vt1.c1) AND (t0.c0))))) FROM t0;SELECT DISTINCT (((('') IS FALSE)) BETWEEN (vt1.c0) AND ((+ (t0.c2)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((0.8649736172645933)) BETWEEN (((t0.c1 IN ()))) AND (((+ (t0.c2))))), (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))) NOT BETWEEN (((t0.c0)LIKE(vt1.c1))) AND (t0.c0 COLLATE RTRIM)), LAST_VALUE((((CAST(vt1.c2 AS NUMERIC), ((vt1.c1)+(vt1.c0)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))==((((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)), CAST(vt1.c2 AS TEXT), ((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))) OVER () FROM vt1;SELECT DISTINCT LAST_VALUE(CASE WHEN ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)) THEN (~ (vt1.c0)) ELSE (vt1.c0 IN ()) END) OVER (), MIN(((vt1.c2)|(vt1.c0))), CAST(((vt1.c1) NOT NULL) AS TEXT) FROM vt1 WHERE (((NULL COLLATE BINARY)IS NOT(((0.0070265602656397474) BETWEEN (x'7b0d') AND ('511020138'))))) LIMIT -445378439 OFFSET -1724207645; -- 0ms;
SELECT t0.c1 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM FROM vt1, t0 WHERE ((((((x'55a8'))>(('')))) BETWEEN ('V]J''/E' COLLATE BINARY) AND (((('-551193012')) NOT BETWEEN ((x'')) AND ((0.5060827503036284)))))); -- 1ms;
SELECT DISTINCT CAST(x'' COLLATE NOCASE AS INTEGER) FROM t0, vt1; -- 0ms;
SELECT ALL FIRST_VALUE((((vt1.c1)) BETWEEN ((((vt1.c1) NOT NULL))) AND ((CASE WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN t0.c2 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.c2 END)))) OVER (), (vt1.c1 COLLATE BINARY IN ()), ((TOTAL_CHANGES()) BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE vt1.c1 END) AND (t0.c0)) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (((NOT (t0.c0)))IS(((t0.c2)||(x'')))) FROM t0 WHERE (x'1992') GROUP BY (~ (json_extract(vt1.c2, t0.c1)));SELECT DISTINCT ((((t0.c1)OR(vt1.c0))) IS TRUE) FROM t0 WHERE (CAST(((0.903505849342634)<>(0.605758223799179)) AS REAL));SELECT DISTINCT ((((MIN(t0.c0))AND('-1319233773')))AND(((vt1.c1)+(vt1.c0)))), ((((vt1.c0)%(vt1.c2))) NOT BETWEEN (((vt1.c2)-(t0.c2))) AND (MAX(vt1.c1))), CASE CAST(t0.c2 AS NUMERIC)  WHEN (vt1.c0 IN ()) THEN vt1.c1 COLLATE RTRIM END, JULIANDAY(t0.c1, t0.c0, t0.c2, t0.c2, vt1.c2, t0.c2, t0.c1) COLLATE RTRIM, COUNT((NOT (vt1.c0))) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE TIES) FROM vt1, t0 WHERE (CAST((((-483106835))<((x''))) AS TEXT)); -- 0ms;
SELECT ((vt1.c2 COLLATE RTRIM)<=(t0.c1 COLLATE BINARY)), t0.c1, AVG(CAST(t0.c2 AS TEXT)) FROM vt1, t0; -- 0ms;
SELECT (((vt1.c0)) BETWEEN ((0.5162920233795526)) AND ((CAST(t0.c1 AS INTEGER)))) FROM vt1, t0 WHERE ((((('턿.G') NOT BETWEEN (1246741336) AND (x'260c')))>>(((0.20543831813441982) IS FALSE)))); -- 1ms;
SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0)|(t0.c0)) COLLATE NOCASE, ((((vt1.c2)/(vt1.c2)))OR(HEX(DISTINCT 0.1964151692449756))), SUM((t0.c0 IN ())), ((LIKELY(DISTINCT vt1.c1))OR(vt1.c2)), (((- (vt1.c2)))/(((vt1.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) FROM vt1, t0 WHERE (HEX(DISTINCT (('-1713363138') IS TRUE))) GROUP BY (((vt1.c1)<=(vt1.c1)) IN ()), ((INSTR(t0.c2, t0.c0))IS(((t0.c0) IS TRUE))), IFNULL(((t0.c0)OR(',n17')), 0x4e27eb69); -- 1ms;
SELECT DISTINCT CAST(AVG(vt1.c2) AS NUMERIC) FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (vt1.c2) AND (t0.c2)))IS NOT((t0.c2 IN (t0.c2)))) DESC;SELECT ALL CASE WHEN ((t0.c0)IS(t0.c0)) THEN ((t0.c2)%(vt1.c1)) ELSE 0.3570478458273013 END, (~ (t0.c1)) COLLATE BINARY, (((((t0.c0) BETWEEN (vt1.c1) AND (t0.c1))))<=(((vt1.c1 IN (t0.c2))))) FROM t0 WHERE (CASE '-1710099384' COLLATE NOCASE  WHEN ((((-1.931131688E9)OR('-200738595')))AND(0.5926723116712547)) THEN (NOT (x'ce96')) WHEN CASE 0.8025167387255475  WHEN '-1821547030' THEN NULL END THEN ((x'')&(0.3176508192350306)) WHEN NULL COLLATE NOCASE THEN ((NULL)>>(NULL)) END);SELECT ALL (((NOT (t0.c2))) ISNULL), SUM(NULL), MAX(COALESCE(DISTINCT x'', t0.c1), (x'' IN ())) FROM vt1, t0 GROUP BY t0.c1; -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 COLLATE NOCASE AS TEXT) FROM vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0) NOT NULL)))>((x''))) FROM vt1, t0 GROUP BY ((((MAX(vt1.c0, x'', t0.c1, t0.c2))AND(((t0.c2) BETWEEN (vt1.c1) AND (vt1.c2)))))OR(vt1.c1 COLLATE NOCASE)) HAVING ((CASE t0.c2  WHEN vt1.c0 THEN t0.c2 END)GLOB(vt1.c2 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((((((vt1.c1)AND(vt1.c2)))AND(0.587530766013122))))) FROM vt1, t0; -- 0ms;
SELECT ALL ((t0.c2)==(CAST(t0.c0 AS INTEGER))) FROM t0 WHERE (((((((((('639088383')AND(0x72ce5925)))AND(NULL)))AND(NULL)))OR(NULL)) IN ())); -- 0ms;
SELECT DISTINCT AVG((+ (vt1.c0))) FROM vt1, t0; -- 0ms;
SELECT ALL ((((((vt1.c1) NOT NULL))OR(CASE WHEN t0.c0 THEN 0.15932878807619533 ELSE 0.4630996810355271 END)))OR(((((x'')OR(t0.c1)))OR(t0.c0)))), FIRST_VALUE(((((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))||(((vt1.c1)<=(vt1.c1))))) OVER (), (((((+ ('67D!mBO')))OR((~ (vt1.c1)))))AND(((((((((t0.c2)AND(t0.c0)))AND(vt1.c0)))OR(t0.c2)))OR(NULL)))) FROM vt1 WHERE (CASE WHEN LOWER(0.7133865304624614) THEN CAST(676651423 AS NUMERIC) END);SELECT DISTINCT vt1.c0 FROM t0, vt1 WHERE ((- (((0.23110021505820155)||(0.23443615588724598))))); -- 0ms;
SELECT DISTINCT ((vt1.c1)IS(vt1.c0)) COLLATE RTRIM FROM t0, vt1 GROUP BY (- (((t0.c0) NOT BETWEEN (vt1.c2) AND (vt1.c0)))), ((((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0)))OR(x'204f')), ((((vt1.c1)<=(vt1.c1))) BETWEEN (rtreenode(vt1.c1, t0.c2)) AND (((vt1.c0) IS FALSE))) HAVING ((((((((((vt1.c1) IS FALSE))OR(((vt1.c2) IS FALSE))))OR(((t0.c0)%(x'800f')))))AND(((vt1.c0) NOT BETWEEN (vt1.c2) AND (vt1.c2)))))AND((((t0.c2)) BETWEEN ((-826055966)) AND ((vt1.c1))))); -- 1ms;
SELECT DISTINCT ((((((((CASE vt1.c1  WHEN t0.c1 THEN t0.c0 ELSE vt1.c0 END)AND(((t0.c0) ISNULL))))OR((((vt1.c2, vt1.c0, vt1.c2)) NOT BETWEEN ((t0.c2, vt1.c0, t0.c2)) AND ((vt1.c1, vt1.c1, vt1.c1))))))AND(((vt1.c1)IS NOT(vt1.c0)))))AND(((t0.c2)<<(vt1.c1)))) FROM t0, vt1; -- 0ms;
SELECT ((CASE WHEN t0.c1 THEN NULL END) ISNULL), COUNT(CAST(t0.c2 AS BLOB)) OVER (), ((((((((vt1.c1 COLLATE NOCASE)OR(((vt1.c1) BETWEEN (t0.c1) AND (t0.c1)))))OR((+ (vt1.c0)))))OR(((-1e500) NOT NULL))))OR(x'')) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (+ (((((t0.c1)OR(t0.c1)))OR(t0.c2)))), UPPER(DISTINCT MIN(t0.c2)), (vt1.c1 IN ()) FROM vt1 WHERE (CAST(((x'') NOT BETWEEN (NULL) AND (NULL)) AS TEXT));SELECT ALL CASE (t0.c2 IN ())  WHEN vt1.c2 COLLATE BINARY THEN (t0.c0 IN ()) ELSE t0.c0 END FROM t0, vt1; -- 0ms;
SELECT ALL (((vt1.c0, t0.c0, vt1.c0)) BETWEEN (((NOT (vt1.c0)), ((t0.c0)||(vt1.c0)), ((vt1.c0)<<(t0.c1)))) AND ((t0.c0 COLLATE NOCASE, MAX(vt1.c1), ((1132519018) IS FALSE)))) FROM t0, vt1 WHERE (CAST((0.5823780037180868 IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c1 AS TEXT)) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c0) NOT NULL))) FROM t0, vt1 WHERE ((((- ('fz}aᬼ\r48G'))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, vt1.c0)) NOT BETWEEN ((NULL, MAX(vt1.c2), ((vt1.c1)+(t0.c2)))) AND ((((((vt1.c0)OR(t0.c0)))OR('')), t0.c1, ((vt1.c0)==(vt1.c1))))), (((t0.c2) NOT NULL) IN (vt1.c1 COLLATE BINARY, vt1.c2)), AVG(((t0.c1) NOT BETWEEN (vt1.c1) AND (vt1.c2))) FROM vt1, t0 WHERE ((NULL IN ()) COLLATE BINARY) LIMIT -1100847922 EXCEPT SELECT ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN ((((vt1.c0, vt1.c0, t0.c0)) NOT BETWEEN ((vt1.c1, vt1.c2, vt1.c1)) AND ((vt1.c2, vt1.c0, vt1.c1)))) AND (t0.c2 COLLATE RTRIM)), ((CAST(t0.c2 AS BLOB))<(((((vt1.c2)OR(t0.c1)))OR('529626259')))), RTRIM(t0.c1) FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c0)=(vt1.c1)))AND(((vt1.c2) IS TRUE))) WHERE ((((- (x'6de5'))) NOT NULL));SELECT DISTINCT '' FROM vt1 WHERE (((x'' COLLATE BINARY)*((('.ϿE')OR('947126213'))))) LIMIT -1297418373 OFFSET 620179877; -- 0ms;
SELECT DISTINCT (+ (((vt1.c2)OR(vt1.c0)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((((((((t0.c1)<(t0.c0)))AND(JULIANDAY(vt1.c1, vt1.c2, vt1.c1))))OR(UPPER(vt1.c0))))AND(((0Xffffffffca5daa1b) NOT NULL))))OR(CASE vt1.c0  WHEN vt1.c2 THEN t0.c0 ELSE vt1.c2 END)) FROM t0, vt1 ORDER BY ((((x'') NOT BETWEEN (vt1.c1) AND (t0.c0))) NOT BETWEEN (COALESCE(DISTINCT vt1.c2, t0.c1)) AND ((((t0.c0))=((t0.c1))))) DESC; -- 1ms;
SELECT DISTINCT (+ ((+ ('G쓵c')))) FROM t0 INNER JOIN vt1 ON x''; -- 0ms;
SELECT '^!忭%-', CAST((vt1.c1 IN ()) AS INTEGER), (t0.c0 IN (((t0.c1) BETWEEN (vt1.c0) AND (vt1.c2)), ((vt1.c0) ISNULL))) FROM t0, vt1 GROUP BY CASE (- (t0.c1))  WHEN ((t0.c1)<>(0.5989297657992209)) THEN x'' WHEN LIKELY(DISTINCT t0.c0) THEN (t0.c0 IN ()) WHEN TRIM(x'') THEN ((t0.c0) NOT NULL) ELSE 0.708702859809519 END; -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t0.c2)) COLLATE BINARY, ((NULL) NOTNULL), ((COUNT(*))<(t0.c2 COLLATE NOCASE)), ((((194683864) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (CASE t0.c1  WHEN t0.c2 THEN vt1.c1 ELSE vt1.c2 END) AND (x'cda2' COLLATE RTRIM)), AVG((t0.c0 IN (vt1.c0))) FROM t0 LIMIT 430864913;SELECT COUNT(*) OVER () FROM t0, vt1 LIMIT 511020138 OFFSET -1507718892; -- 0ms;
SELECT ((load_extension(t0.c1, vt1.c1)) IS FALSE), CASE ((t0.c2) IS FALSE)  WHEN CASE vt1.c2  WHEN t0.c0 THEN vt1.c2 END THEN (- (t0.c1)) END, COUNT(((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))), PERCENT_RANK() OVER (), (- (IFNULL(DISTINCT NULL, t0.c2))) FROM t0, vt1;SELECT DISTINCT CAST(CAST(vt1.c0 AS TEXT) AS REAL), PERCENT_RANK() OVER (), ((((((((((((CAST(t0.c2 AS INTEGER))OR(t0.c0)))OR((((vt1.c1, vt1.c1, NULL))<>((vt1.c2, vt1.c1, vt1.c2))))))AND(((((vt1.c0)AND(vt1.c2)))AND('X')))))AND(((t0.c1)*(vt1.c2)))))OR((t0.c2 IN ()))))AND((((t0.c2, vt1.c1, vt1.c1))>((t0.c1, vt1.c1, vt1.c1))))) FROM vt1, t0; -- 0ms;
SELECT ALL (((((t0.c1)>>(t0.c2)), ((((vt1.c0)OR(t0.c0)))OR(vt1.c1)), t0.c1))=((CASE WHEN t0.c0 THEN x'35d4' WHEN vt1.c0 THEN t0.c0 WHEN -1.103449873E9 THEN vt1.c2 END, ((vt1.c2) NOT BETWEEN (t0.c1) AND (vt1.c2)), ((((vt1.c2)AND(vt1.c2)))OR(vt1.c0))))), COUNT(CAST(NULL AS NUMERIC)) OVER (), TOTAL(((((x'')AND(vt1.c0)))AND(t0.c0))) OVER ( PARTITION BY CASE CASE WHEN vt1.c2 THEN vt1.c2 END  WHEN (- (t0.c1)) THEN ((t0.c1)-(t0.c0)) END, (((t0.c1))!=((((vt1.c0) BETWEEN (t0.c0) AND (t0.c1)))))) FROM t0, vt1; -- 0ms;
SELECT (((t0.c0 IN ()))LIKE(UPPER(DISTINCT vt1.c1))) FROM t0, vt1 INDEXED BY i84;SELECT DISTINCT '1772583815' FROM vt1 INDEXED BY i84;SELECT t0.c1 FROM vt1 ORDER BY CAST(vt1.c2 AS INTEGER) COLLATE BINARY DESC, (((((t0.c0))>((vt1.c0))))==(((t0.c0)%(vt1.c1))));SELECT DISTINCT (- (CASE t0.c2  WHEN -200738595 THEN vt1.c0 WHEN vt1.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 END)) FROM t0, vt1 GROUP BY IFNULL(vt1.c2 COLLATE BINARY, (vt1.c1 IN ())); -- 1ms;
SELECT DISTINCT (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2))))OR(CAST(t0.c0 AS INTEGER))))AND(COUNT(vt1.c1))))OR(LIKE(t0.c0, t0.c0))))OR((+ (vt1.c1)))), NULL COLLATE RTRIM, (((+ (t0.c2))) IS TRUE) FROM t0 WHERE ((+ ((- (NULL)))));SELECT DISTINCT ((((((vt1.c2)>>(vt1.c0)))AND(CASE WHEN vt1.c2 THEN vt1.c0 END)))OR(t0.c0 COLLATE RTRIM)) FROM t0 WHERE (((((x'') NOT BETWEEN ('1772583815') AND ('467476569'))) NOT BETWEEN ((- (0.16312157755057666))) AND (('-1195839385' IN ()))));SELECT DISTINCT ((((CASE t0.c1  WHEN t0.c0 THEN vt1.c2 END)OR(CASE WHEN vt1.c1 THEN t0.c0 END)))OR(vt1.c1 COLLATE BINARY)) FROM vt1;SELECT DISTINCT TYPEOF(AVG(vt1.c2)) FROM vt1; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((vt1.c1)<<(t0.c1))) FROM vt1;SELECT ((((vt1.c1)AND(CASE WHEN t0.c1 THEN vt1.c1 ELSE vt1.c0 END)))OR(SUBSTR(t0.c2, vt1.c1))), (415977348 IN ()), NULL FROM vt1 WHERE (((((COALESCE(DISTINCT 0.5857553275997682, -1.505810359E9))OR((('-450736031')||(x'')))))OR((~ (NULL)))));SELECT ALL vt1.c2 FROM t0, vt1 WHERE ((((('MV')||(x''))) NOTNULL)); -- 0ms;
SELECT SUM(((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) OVER ( ROWS ((((t0.c1)AND(vt1.c1)))-(CAST(vt1.c1 AS INTEGER))) PRECEDING) FROM vt1 GROUP BY (CASE WHEN 0.14545656527640727 THEN t0.c1 WHEN t0.c2 THEN vt1.c0 WHEN vt1.c2 THEN t0.c0 END IN ()) HAVING json_valid(vt1.c1 COLLATE NOCASE);SELECT ALL ((t0.c2 COLLATE NOCASE)IS(((vt1.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))), NULL, CASE CAST(NULL AS REAL)  WHEN (('')>>(t0.c0)) THEN CASE WHEN vt1.c2 THEN t0.c1 ELSE NULL END ELSE (((x'', t0.c2, NULL)) BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, 0.9409693838262184))) END FROM vt1, t0 WHERE (x'f249'); -- 0ms;
SELECT DISTINCT ((vt1.c2)IS NOT(vt1.c2)) COLLATE RTRIM FROM vt1, t0 WHERE (TYPEOF(DISTINCT '')); -- 0ms;
SELECT ((t0.c2) BETWEEN ((NULL IN ())) AND ((NOT (t0.c2)))) FROM t0; -- 1ms;
SELECT DISTINCT CAST(LIKELIHOOD(t0.c2, 0.7350830684224147) AS INTEGER) FROM t0, vt1 GROUP BY ((((t0.c0) ISNULL)) NOT BETWEEN (((vt1.c1) IS FALSE)) AND (vt1.c2 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT (((('931329208')/(vt1.c0)))<(((t0.c0) IS FALSE))) FROM t0, vt1 WHERE (((CAST(NULL AS BLOB))-(((0X76e0c964) NOT BETWEEN (0.02458541947480819) AND ('-417282842'))))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((x'', vt1.c1, t0.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, 0.02458785730073243))) COLLATE RTRIM FROM vt1, t0; -- 0ms;
SELECT DISTINCT (NOT (vt1.c2)) COLLATE RTRIM, ((((((vt1.c1) BETWEEN (t0.c1) AND (vt1.c0)))OR((('~U*]e/!{') IS TRUE))))OR(t0.c0)), t0.c0 FROM t0;SELECT DISTINCT CAST(((((((((((((vt1.c2)AND('')))AND(vt1.c0)))AND(t0.c1)))OR(vt1.c1)))OR(t0.c2)))AND(t0.c0)) AS TEXT) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM)==(((t0.c0) IS TRUE))) FROM t0; -- 0ms;
SELECT DISTINCT ((MAX(vt1.c0))>>(CAST(vt1.c0 AS INTEGER))) FROM t0, vt1 WHERE (CAST((~ ('')) AS TEXT)) LIMIT 927037788; -- 0ms;
SELECT MAX((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))), CASE WHEN (t0.c1 IN (vt1.c0)) THEN CAST(vt1.c1 AS INTEGER) WHEN CAST(vt1.c0 AS BLOB) THEN TYPEOF(t0.c1) WHEN (((vt1.c0))!=((t0.c1))) THEN 0.7946007883523778 END, ((CAST(vt1.c2 AS REAL)) IS FALSE) FROM t0, vt1 WHERE (((HEX(0.34277653813518305)) NOT BETWEEN ((((NULL, 0.5740209356422991, x'')) NOT BETWEEN ((0.8100729324748958, 0xce5bd58, 0.18416523940256146)) AND ((0x51a5ce43, NULL, x'')))) AND ((('-1656954011')%('0.9955851641104679'))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN (('-1411676337')||(t0.c1)) THEN (((vt1.c2))==((t0.c1))) WHEN MAX(vt1.c1) THEN ((0.6613989147428556)<(vt1.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN x'c1d43982' ELSE (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((vt1.c1))) END, (((+ (x'')))=(((((vt1.c2)OR(vt1.c0)))AND(t0.c1)))), ((((vt1.c0)-(t0.c2))) NOT BETWEEN (vt1.c0) AND (t0.c1 COLLATE BINARY)) FROM t0 GROUP BY ((((vt1.c0) ISNULL)) BETWEEN ((vt1.c2 IN ())) AND ((vt1.c0 IN ()))), CASE WHEN '1v晦C[{' THEN (((vt1.c1, vt1.c1, t0.c0, t0.c1, '1878528705'))>((vt1.c2, '', vt1.c2, t0.c0, t0.c0))) END, (((t0.c2)) BETWEEN ((MAX(x'', t0.c0))) AND ((((((((((t0.c1)AND(t0.c0)))AND(t0.c1)))OR(vt1.c1)))AND(t0.c2)))));SELECT DISTINCT CAST((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2))) AS TEXT), (((vt1.c1 IN ())) NOT NULL), vt1.c1 FROM vt1, t0; -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0) NOT NULL)) OVER ( RANGE (NOT (vt1.c2)) PRECEDING) FROM t0 WHERE (((((((((((0.7988669922562495)AND(NULL)))OR('1767175554')))OR(NULL)))AND('2028769665')))%(CAST('216382808' AS INTEGER))));SELECT ((vt1.c2) ISNULL) COLLATE NOCASE FROM t0, vt1 WHERE ('462320229') INTERSECT SELECT ((((t0.c0)>(vt1.c1)))<(((vt1.c1)OR(vt1.c0)))) FROM t0 WHERE ((('')>=('.ϿE')) COLLATE BINARY) ORDER BY ((((t0.c0)AND(t0.c0)))/((t0.c1 IN (vt1.c1))))  NULLS LAST, (((NOT (t0.c1))) NOT BETWEEN (TRIM(t0.c0)) AND (((vt1.c0) NOTNULL)))  NULLS FIRST, CAST(((NULL)==(vt1.c0)) AS NUMERIC);SELECT DISTINCT CASE ((((t0.c1)OR(vt1.c2)))OR(vt1.c2))  WHEN ((-624877001)>>(t0.c1)) THEN (((vt1.c0))<=((vt1.c1))) ELSE CAST('-547524468' AS NUMERIC) END, (t0.c0 IN ()), (vt1.c0 COLLATE RTRIM IN ()) FROM vt1 GROUP BY ((((vt1.c2) BETWEEN (t0.c0) AND (t0.c2)))&(((vt1.c1) ISNULL))), ((t0.c1) NOT BETWEEN (CASE t0.c2  WHEN '1217669364' THEN t0.c2 ELSE '-30260830' END) AND ('1I')), (((vt1.c1, t0.c1, t0.c1, t0.c2, t0.c1))<=((t0.c2, vt1.c0, x'', t0.c2, t0.c0))) COLLATE BINARY;SELECT DISTINCT t0.c0, t0.c1, (((+ (vt1.c0)))%(((t0.c2) NOT BETWEEN (0.3124713286177445) AND (NULL)))) FROM t0, vt1 WHERE (((CAST(0x54519689 AS NUMERIC))GLOB(CAST('1884055661' AS REAL)))); -- 0ms;
SELECT (LIKE(t0.c2, t0.c2, '4') IN ()), ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))) IS FALSE), (GROUP_CONCAT(t0.c0) IN ()), (+ (CASE WHEN vt1.c1 THEN t0.c2 END)), MIN((((vt1.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), NULL, (t0.c2 IN ()), CASE WHEN t0.c1 THEN t0.c0 END), SUM(((vt1.c0) BETWEEN (vt1.c2) AND (t0.c2))), COALESCE(DISTINCT NULL, CAST(t0.c2 AS NUMERIC)) FROM t0, vt1 WHERE ((+ (CASE 0.9701274436146089  WHEN '\&' THEN '''{' WHEN 0.09038260220564931 THEN '1878528705' WHEN '' THEN x'53c7d80e' ELSE x'a2ad' END))); -- 0ms;
SELECT t0.c2, vt1.c1, ((t0.c2) IS TRUE) FROM t0, vt1; -- 1ms;
SELECT ALL (((t0.c1 IN ())) IS TRUE) FROM vt1, t0 WHERE (LIKELIHOOD(NULLIF(DISTINCT x'', NULL), 0.18994037182323364)); -- 0ms;
SELECT CASE CASE WHEN t0.c1 THEN 545903843 END  WHEN CAST(vt1.c0 AS NUMERIC) THEN ((t0.c1)OR(t0.c1)) WHEN CAST(vt1.c2 AS TEXT) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c2)) WHEN (- (vt1.c0)) THEN ((t0.c1)=(0.8122040838331882)) ELSE (NOT (t0.c1)) END, ((CASE vt1.c0  WHEN vt1.c2 THEN t0.c2 WHEN vt1.c1 THEN t0.c2 WHEN vt1.c2 THEN t0.c1 ELSE t0.c2 END) IS FALSE), LEAD((vt1.c1 IN ()) COLLATE BINARY, vt1.c2, (+ (CAST(vt1.c0 AS NUMERIC)))) OVER () FROM vt1;SELECT ((((vt1.c0) NOT NULL))/(NULL)) FROM t0, vt1 LIMIT -1145910275; -- 0ms;
SELECT DISTINCT ((LENGTH(t0.c2)) NOT BETWEEN (((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0))) AND (HEX(DISTINCT t0.c1))), GROUP_CONCAT(((t0.c1)>=(vt1.c0)) COLLATE BINARY), LAG(((((((vt1.c2)OR(t0.c1)))OR(vt1.c0))) IS FALSE), (((((t0.c1)GLOB(t0.c2))))>=((((vt1.c1)%(vt1.c0))))), (((t0.c1 IN ())) NOT BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (((((x'')AND(t0.c2)))AND(t0.c2))))) OVER ( PARTITION BY (((vt1.c1 IN ())) BETWEEN (t0.c2 COLLATE RTRIM) AND (json_insert(vt1.c0, vt1.c1, vt1.c1))), (((((((vt1.c1)AND(t0.c0)))OR(vt1.c2))))!=((CASE vt1.c2  WHEN vt1.c1 THEN t0.c2 END)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT vt1.c2, (((((x'd5b1', vt1.c1, vt1.c1, t0.c0, 1.821815005E9))>=((t0.c0, '1262798038', vt1.c0, t0.c1, vt1.c0)))) NOT BETWEEN ('1821815005') AND (((vt1.c2) NOT BETWEEN (t0.c2) AND (vt1.c0)))), TOTAL('-112848566') OVER (), t0.c0, (vt1.c0 COLLATE BINARY IN ()) FROM vt1 WHERE ((- ((((x'9824')) NOT BETWEEN (('676651423')) AND ((-1.257241042E9))))));SELECT DISTINCT ((vt1.c0 COLLATE NOCASE) NOTNULL) FROM t0, vt1 WHERE (CASE (('I9j')OR('Gdg8 )u'))  WHEN rtreenode('291887931', NULL) THEN ABS(DISTINCT '-703952607') ELSE (~ ('?z80}')) END) ORDER BY (((vt1.c0) NOT NULL) IN (((t0.c0) NOT NULL))) DESC; -- 0ms;
SELECT ((((vt1.c0) NOTNULL))IS(((t0.c0)||(t0.c0)))) FROM vt1 WHERE (x'fd54');SELECT DISTINCT (((((vt1.c0) ISNULL)))=((((NULL)<<(vt1.c2))))) FROM t0, vt1 WHERE (((((0.7018451911554886) IS TRUE))<<(((0X74ac8ee4) BETWEEN (0.6796843875791254) AND (x'744dac33'))))) ORDER BY (~ (((((t0.c1)AND(vt1.c1)))OR(t0.c1)))); -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) COLLATE BINARY FROM vt1 WHERE (((CASE x''  WHEN x'' THEN x'' ELSE '' END) NOT BETWEEN (LOWER(809903224)) AND (CASE WHEN x'' THEN x'' WHEN 0.8514329437896007 THEN '' WHEN 0.4471386158359414 THEN '1664173573' END))); -- 0ms;
SELECT AVG(((vt1.c2) IS TRUE)) FROM t0, vt1; -- 0ms;
SELECT ALL (((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0)))) IS FALSE) FROM t0;SELECT ALL UNICODE(((((((((t0.c0)AND(vt1.c1)))OR(t0.c0)))AND(t0.c2)))AND(vt1.c0))) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)GLOB(vt1.c2)))OR((((t0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c1))))))OR(CAST(t0.c1 AS INTEGER))); -- 0ms;
SELECT DISTINCT ((((t0.c1)+(-2.12810746E9)))IS(GROUP_CONCAT(vt1.c2))), TOTAL((t0.c1 IN ())) OVER ( GROUPS  CURRENT ROW), ((t0.c0)+(COUNT(*))) FROM t0, vt1 ORDER BY (((t0.c2 COLLATE NOCASE))>((((((t0.c0)AND(t0.c2)))OR(vt1.c1))))) DESC  NULLS LAST; -- 0ms;
SELECT NULL FROM t0 WHERE ((((NOT (NULL)))AND((('儓K*3)^h')<>('-336129456'))))); -- 0ms;
SELECT CAST(t0.c2 COLLATE RTRIM AS NUMERIC), COUNT(((((((((NULL)AND(vt1.c2)))AND(vt1.c0)))OR(vt1.c2)))AND(t0.c1))), ((((t0.c0)*(t0.c0)))<(GROUP_CONCAT(vt1.c2))) FROM vt1, t0 WHERE (((CAST('-1269633120' AS NUMERIC))+(CASE x''  WHEN '' THEN 'Jɜ%-3-D,' END))); -- 0ms;
SELECT DISTINCT x'' FROM t0 LIMIT -1868610696 OFFSET -1788745916; -- 0ms;
SELECT CASE (t0.c0 IN ())  WHEN (t0.c0 IN ()) THEN t0.c2 WHEN '-.3⾇\m' THEN (+ (vt1.c2)) WHEN ((t0.c2) BETWEEN (vt1.c1) AND (t0.c1)) THEN json_quote(vt1.c1) ELSE NULL END, (NOT ((((NULL)) NOT BETWEEN ((NULL)) AND ((vt1.c2))))), ((((((vt1.c0))<=((t0.c1)))))<=((((t0.c2)&(t0.c0))))) FROM vt1, t0 WHERE ((+ (((0.8347680810708773)>=(x''))))); -- 0ms;
SELECT DISTINCT ((COUNT(NULL))*(CASE WHEN t0.c1 THEN t0.c0 END)) FROM t0 GROUP BY ((vt1.c2 COLLATE NOCASE) IS TRUE) HAVING ((CAST(vt1.c0 AS INTEGER)) BETWEEN (AVG(t0.c1)) AND (t0.c2));SELECT DISTINCT ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c1 WHEN x'7024' THEN vt1.c1 ELSE vt1.c0 END)-(CASE WHEN t0.c1 THEN vt1.c2 WHEN vt1.c2 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE t0.c0 END)) FROM t0;SELECT (((vt1.c2)) BETWEEN ((NULL)) AND ((((((vt1.c1)AND(vt1.c2)))AND(vt1.c0))))), (- (CAST(NULL AS REAL))), ((((vt1.c2)<=(t0.c1))) NOTNULL) FROM vt1, t0 WHERE (NULL) LIMIT -1310887004 OFFSET 214714522; -- 0ms;
SELECT (((((((((((((((((vt1.c2)AND(vt1.c1)))OR(NULL)))OR(t0.c1)))OR(t0.c2)))OR(t0.c1)))AND(vt1.c2)))AND(vt1.c1)))AND(t0.c0)) IN ()) FROM vt1; -- 0ms;
SELECT (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt1.c1))))AND(MAX(vt1.c1))))AND(((t0.c1) ISNULL))) FROM vt1, t0 WHERE (((('' IN ()))/(CASE ''  WHEN 0.5869723901593139 THEN x'' WHEN -4.17282842E8 THEN 'h' WHEN '\n,q	.' THEN -1591216131 ELSE 'lX4}b_?\r.' END))) LIMIT 1007392323; -- 0ms;
SELECT DISTINCT 0.8807234977388305 FROM t0 WHERE (((((-1938744629) NOT BETWEEN (x'') AND ('*)'))) NOTNULL)) GROUP BY IFNULL((vt1.c0 IN (vt1.c1)), (NOT (t0.c0))) HAVING ((((((t0.c0) NOT NULL))OR(((t0.c2)&(t0.c2)))))OR((vt1.c2 IN (vt1.c0))));SELECT LAG(((((((t0.c0)AND(t0.c1)))AND(t0.c1)))GLOB(((t0.c0) NOT NULL))), t0.c2, ((LAST_INSERT_ROWID())OR(((((t0.c0)OR(t0.c1)))OR(t0.c2))))) OVER () FROM t0 GROUP BY (((t0.c2 IN ()))-(((vt1.c0) NOTNULL))), ((((vt1.c0) NOT NULL))&(UNICODE(t0.c0))), COALESCE((~ (vt1.c0)), ((t0.c2) BETWEEN (0.60102609753634) AND (t0.c0)), 0.2456759061920446, t0.c2 COLLATE NOCASE, CASE vt1.c0  WHEN t0.c1 THEN vt1.c0 ELSE vt1.c1 END, ((vt1.c2) ISNULL)) HAVING ((((vt1.c2) NOT BETWEEN (t0.c1) AND (t0.c0))) NOT NULL);SELECT ALL COUNT(((((t0.c1)OR(vt1.c0)))OR(t0.c1))) OVER () FROM vt1 WHERE (CASE WHEN x'' THEN (x'' IN ()) END);SELECT DISTINCT ((((vt1.c0 IN ())))!=((((0.6283967694458926) IS FALSE)))) FROM t0 WHERE ((((('909721216') NOT NULL))>=(((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT (+ (((0Xfffffffffe3241a2)+(t0.c1)))) FROM vt1;SELECT DISTINCT CAST(((t0.c2)-(vt1.c0)) AS BLOB), COALESCE(GROUP_CONCAT(0.3094515125596021), CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN 0.26873554411142286 WHEN vt1.c2 THEN t0.c0 ELSE vt1.c0 END), CAST(CAST(t0.c0 AS REAL) AS BLOB) FROM t0, vt1; -- 0ms;
SELECT ALL (~ (((vt1.c1) IS TRUE))) FROM vt1, t0 WHERE ((~ (((NULL) NOT BETWEEN (x'') AND ('xO'))))); -- 0ms;
SELECT ALL AVG(((vt1.c1) IS TRUE)) OVER () FROM t0, vt1 WHERE (((((']*g?\-3('))<=((NULL))) IN ())); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c0))LIKE(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)) FROM vt1, t0 WHERE ((((- (0.862832837817932)))>=(('676651423' IN ())))); -- 0ms;
SELECT DISTINCT ((((t0.c1)AND(((vt1.c2)<<(vt1.c1)))))OR(TOTAL(vt1.c2))), ((((vt1.c0)==(vt1.c2)))*(((((vt1.c1)AND(vt1.c2)))OR(vt1.c1)))), CAST(((vt1.c2)%(vt1.c0)) AS REAL), x'', ((vt1.c1) BETWEEN (t0.c1) AND (t0.c2)) COLLATE RTRIM FROM t0 WHERE (((0.7724566107171478)*('')) COLLATE BINARY);SELECT ((CASE WHEN vt1.c2 THEN t0.c2 ELSE t0.c0 END)-((vt1.c1 IN ()))) FROM t0, vt1 WHERE ((('-23898548')|('0.7236255624330314')) COLLATE BINARY); -- 1ms;
SELECT DISTINCT CAST(vt1.c0 AS INTEGER) FROM vt1 WHERE ((('') NOT BETWEEN (CASE WHEN 0.4638470963499941 THEN x'' ELSE 'v䯵e%' END) AND (RTRIM(0.47867142723245426)))); -- 0ms;
SELECT DISTINCT (((t0.c1, vt1.c2, vt1.c2))>=((t0.c0, vt1.c0, vt1.c2))) COLLATE NOCASE FROM vt1, t0; -- 0ms;
SELECT '2042377895' FROM t0; -- 0ms;
SELECT ALL ((((t0.c1)AND('-1090667810')))&((((t0.c2, vt1.c0, vt1.c2))=((vt1.c2, vt1.c1, vt1.c1))))), (NOT ((NULL IN (vt1.c1, t0.c1)))), ((HEX(DISTINCT t0.c0))AND(vt1.c1 COLLATE RTRIM)) FROM vt1 WHERE (((((x'')IS('')))||(((-479244181) ISNULL)))) ORDER BY ((((']3.\na>zs')AND((('-1681364329') NOT BETWEEN (t0.c1) AND (t0.c0)))))OR((~ (t0.c1))))  NULLS LAST;SELECT ALL ((NOT (vt1.c0)) IN ()) FROM vt1; -- 0ms;
SELECT ALL ((((GROUP_CONCAT(vt1.c0))OR(((((vt1.c1)AND(t0.c0)))OR(t0.c2)))))OR((NOT (vt1.c2)))) FROM t0;SELECT ALL (((t0.c1))<=((vt1.c0))) COLLATE BINARY FROM t0 WHERE ((+ ((NULL IN (x'', x'32c5')))));SELECT DISTINCT 0.5322149402177127, CAST((NOT (0.3500866525524199)) AS REAL), (+ (vt1.c2)) FROM t0 INDEXED BY i84 LIMIT -272634848;SELECT DISTINCT ((0X5e4ea0a0) NOT BETWEEN ((+ (vt1.c2))) AND ((+ (t0.c2)))), (+ ((((-1.100847922E9, t0.c0, vt1.c0))>=((t0.c0, NULL, vt1.c0))))), (vt1.c0 IN ()) FROM vt1, t0 WHERE ((- (CASE WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT NULL FROM t0, vt1; -- 0ms;
SELECT ALL ((((t0.c0)/(t0.c2))) IS FALSE) FROM t0, vt1 WHERE ('2j'); -- 0ms;
SELECT DISTINCT ((((0.3832069439257513) NOT BETWEEN (vt1.c2) AND (vt1.c1)))<(NULL COLLATE RTRIM)) FROM vt1, t0 WHERE (((('-2085343305' IN ())) NOTNULL)) LIMIT 2146858990; -- 0ms;
SELECT (((COUNT(t0.c1)))<>((((t0.c1)IS(t0.c0))))) FROM t0, vt1 WHERE ((((((-1.505810359E9, x'', '')) BETWEEN ((x'', NULL, x'2641')) AND ((x'', NULL, 0.5691625263607079)))) NOTNULL)) GROUP BY 68890834;SELECT DISTINCT CASE WHEN TOTAL(t0.c2) THEN TRIM(t0.c2) END FROM vt1, t0; -- 0ms;
SELECT DISTINCT (('S7O⪺Q9AU') IS TRUE), RTRIM(((t0.c2) BETWEEN (vt1.c0) AND (vt1.c0))), (- ((((t0.c0, vt1.c1, t0.c0))!=((t0.c0, vt1.c1, t0.c2))))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT (- (t0.c0 COLLATE BINARY)) FROM vt1 WHERE (((('WOxg' IN ())) NOT BETWEEN ((x'' IN ())) AND (((9.47126213E8)<=('-190860845')))));SELECT DISTINCT ((((((((((t0.c2)>=(vt1.c0)))AND(COUNT(*))))OR(((vt1.c0) NOT BETWEEN (0.9636859848208212) AND (vt1.c1)))))OR(((((((((vt1.c1)OR(vt1.c2)))OR(t0.c1)))OR(vt1.c1)))AND(t0.c2)))))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c2)))) FROM t0, vt1 GROUP BY (((+ (vt1.c1))) IS FALSE) HAVING (((NOT (t0.c0))) IS FALSE); -- 0ms;
SELECT CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)) THEN TOTAL(t0.c2) END FROM vt1, t0 NOT INDEXED INTERSECT SELECT ALL CASE CASE '-989434798'  WHEN vt1.c1 THEN t0.c1 END  WHEN ((vt1.c2) NOT BETWEEN (t0.c0) AND (vt1.c2)) THEN GLOB(vt1.c2, vt1.c1) WHEN vt1.c1 COLLATE NOCASE THEN ((8.09903224E8) ISNULL) WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c1)) THEN CAST(t0.c2 AS REAL) ELSE CASE WHEN t0.c1 THEN vt1.c2 WHEN t0.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE t0.c1 END END FROM vt1, t0 WHERE ((((('-954430366')AND('')))OR(1323455916)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM(((vt1.c2)<<(t0.c0))) OVER () FROM vt1;SELECT ALL t0.c2 FROM t0; -- 0ms;
SELECT ALL (((((t0.c1)) BETWEEN ((t0.c0)) AND ((vt1.c1)))) ISNULL), ((((vt1.c0)=(t0.c2)))OR(((((t0.c0)OR(vt1.c0)))AND(t0.c2)))), ((((((t0.c0)<=(t0.c0)))AND(vt1.c0 COLLATE RTRIM)))AND((((t0.c1))<>((vt1.c0))))), ((((vt1.c2) BETWEEN (t0.c2) AND (t0.c2)))>(((vt1.c0) NOTNULL))), CASE WHEN (t0.c0 IN ()) THEN TIME(vt1.c2, vt1.c2, vt1.c0, vt1.c1, t0.c2) ELSE ((t0.c1) NOT NULL) END FROM vt1, t0 WHERE ((- (-1.7976931348623157E308)) COLLATE BINARY); -- 0ms;
SELECT ((((vt1.c0) NOT BETWEEN (t0.c0) AND (NULL)))!=(x'')) FROM vt1, t0 NOT INDEXED WHERE (((NULL)OR(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt1.c2) OVER (), (((('681996584')<<(t0.c1)))*(vt1.c2 COLLATE RTRIM)), ((GLOB(t0.c1, t0.c2))+((((((((('1132519018')AND(vt1.c0)))AND(NULL)))OR(vt1.c0)))AND(vt1.c0)))) FROM vt1, t0 ORDER BY ((vt1.c0 IN ()) IN ()) LIMIT 2063636578; -- 0ms;
SELECT DISTINCT json_quote((vt1.c2 IN ())) FROM vt1, t0; -- 0ms;
SELECT ALL CAST((((t0.c1))=((t0.c0))) AS BLOB), vt1.c2, t0.c2 FROM vt1;SELECT DISTINCT COUNT(*) FILTER(WHERE ((NULL) IS TRUE)) OVER () FROM t0, vt1; -- 1ms;
SELECT ALL x'3625' FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c2 IN ()), x'', CAST(t0.c0 AS TEXT)))<((t0.c1 COLLATE BINARY, (~ (vt1.c0)), CAST(t0.c0 AS TEXT)))), (((2084352442))==((((t0.c2) IS TRUE)))), CASE WHEN vt1.c2 COLLATE RTRIM THEN vt1.c0 ELSE ((vt1.c2) NOTNULL) END, ((vt1.c2)GLOB(((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))), CASE WHEN '?~B' COLLATE BINARY THEN ((vt1.c2)<(t0.c2)) END FROM vt1, t0 GROUP BY (- (HEX(t0.c0))), ((((((x'e3f2')AND(vt1.c0)))AND(t0.c1)))<(CAST(vt1.c2 AS BLOB))), vt1.c2; -- 0ms;
SELECT DISTINCT t0.c1, COUNT(vt1.c0) OVER ( GROUPS  CURRENT ROW), (((- (vt1.c1)))>=((((t0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))) FROM vt1, t0 WHERE (((CASE WHEN NULL THEN 0X25f48349 END)>(((((x'')OR(-145532651)))OR(''))))); -- 0ms;
SELECT DISTINCT ((((((((((vt1.c0)AND(vt1.c1)))AND(x'01de')))AND(NULL)))OR(vt1.c1))) IS FALSE) FROM vt1, t0 WHERE (((((x'3912') NOT NULL)) ISNULL)); -- 0ms;
SELECT DISTINCT ((((0.8115708544384078)>>(t0.c0))) BETWEEN (UNLIKELY(vt1.c2)) AND (((t0.c0) IS TRUE))), (((t0.c1)) NOT BETWEEN ((((t0.c1) IS FALSE))) AND ((((vt1.c2)OR(vt1.c1))))), ((((((vt1.c2)OR(t0.c1)))OR(vt1.c0)))<>(('1627584682' IN ()))) FROM vt1 WHERE ((('' COLLATE RTRIM) BETWEEN (0Xffffffffcfb56d85) AND (0.5869723901593139 COLLATE RTRIM))) GROUP BY ((((vt1.c1)>>(0.8852104146006472))) NOTNULL) HAVING (~ (((t0.c0)LIKE(t0.c0)))) LIMIT 249344199 OFFSET 345618014;SELECT DISTINCT (NOT (((vt1.c2) NOT BETWEEN (0.006404608719230764) AND (t0.c0)))) FROM t0 WHERE ((+ (TRIM(DISTINCT 0.32114547599645904, x'')))) LIMIT 1368131857;SELECT DISTINCT ((CAST(vt1.c1 AS BLOB))<=(MAX(vt1.c0))) FROM t0 WHERE (CASE WHEN (((0.17901503916111705))==((NULL))) THEN (~ (NULL)) ELSE highlight('', 0.37445671004434145, x'', '0.8649736172645933') END);SELECT DISTINCT CAST(vt1.c1 AS INTEGER) FROM vt1, t0 INDEXED BY i84; -- 0ms;
SELECT DISTINCT (((((t0.c1, t0.c1, t0.c0))<=((vt1.c0, t0.c1, t0.c1)))) NOT NULL) FROM t0, vt1 WHERE (((((0.3137465924158155) NOT BETWEEN ('4	e24|⣡') AND (NULL))) NOTNULL)) LIMIT 94365301; -- 1ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (vt1.c2) AND (t0.c2))) BETWEEN (vt1.c2 COLLATE BINARY) AND ((+ (t0.c2)))), ((((t0.c2)OR(t0.c0)))AND(t0.c0)) COLLATE BINARY, (- ((vt1.c0 IN ()))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT LAST_VALUE(vt1.c0) OVER (), (((vt1.c2)) BETWEEN (((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))) AND ((CAST(vt1.c1 AS TEXT)))), (((((((((((((vt1.c0)OR(vt1.c0)))AND(t0.c0)))OR(vt1.c2)))AND(t0.c1)))AND(t0.c0)))OR(vt1.c0)) IN ()) FROM vt1, t0 WHERE (((('904978918') BETWEEN (NULL) AND (0.7336648568872661)) IN ())); -- 0ms;
SELECT DISTINCT (((t0.c1))<=((vt1.c2))) COLLATE BINARY FROM t0;SELECT DISTINCT (((t0.c0)>(vt1.c2)) IN (((t0.c0) IS FALSE))) FROM t0 WHERE (((((0.24530247712324638)OR(CAST(x'c4c8' AS REAL))))OR(((NULL)IS NOT(0.8975406750957158)))));SELECT ALL AVG(((t0.c1)<=(vt1.c0))) OVER () FROM vt1 WHERE ((- ((('-1514713165')LIKE('m0')))));SELECT ALL LIKE((vt1.c1 IN ()), t0.c2) FROM t0; -- 0ms;
SELECT (((+ (vt1.c0))) NOT BETWEEN (((vt1.c2)*(t0.c2))) AND (x'')) FROM vt1 WHERE ('0.4720616905099677' COLLATE RTRIM);SELECT DISTINCT vt1.c1 FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((NULL))!=((t0.c0 COLLATE BINARY))) FROM t0, vt1 WHERE ('P_3ᩎzsⴡP\r') GROUP BY (((t0.c2 IN ()))>('-1173539869')), ((((((t0.c1)AND(t0.c0)))OR(t0.c1))) IS FALSE), vt1.c0; -- 0ms;
SELECT ALL (((((((((((((((t0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((0x6bee1a77) ISNULL))))OR('-1145910275' COLLATE NOCASE)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN ()))))OR(CAST(t0.c0 AS TEXT))))OR(t0.c2 COLLATE BINARY)), ((((vt1.c0)||(t0.c2))) IS FALSE), COUNT(CAST(t0.c2 AS NUMERIC)) OVER () FROM t0 ORDER BY (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((t0.c2)))) BETWEEN (((vt1.c2) IS TRUE)) AND ((((t0.c0))>((t0.c0)))));SELECT (- (((t0.c1)-(x'')))) FROM t0, vt1 WHERE (CASE UPPER(DISTINCT NULL)  WHEN ((x'ccde8d24')>>(NULL)) THEN '5m' COLLATE RTRIM END) GROUP BY ((CAST(t0.c1 AS BLOB))LIKE(CAST(t0.c0 AS INTEGER))) HAVING CAST((vt1.c2 IN (vt1.c1, vt1.c2)) AS REAL) ORDER BY vt1.c1  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL FROM vt1 ORDER BY 0.13581776510733157; -- 0ms;
SELECT ALL MAX(((((((((t0.c0)AND(t0.c1)))AND(vt1.c0)))OR(t0.c0)))OR(vt1.c1))) FROM t0 WHERE (((((x'')OR(2.62727178E8))) NOT BETWEEN (((((x'')AND('6')))AND('1975939056'))) AND (CAST(x'3442' AS BLOB)))) GROUP BY ((((vt1.c2)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))))OR(CASE vt1.c2  WHEN vt1.c2 THEN t0.c2 END)), (~ (((vt1.c0)&(vt1.c2)))), vt1.c1 HAVING CAST(((vt1.c1)!=(t0.c0)) AS TEXT);SELECT ((vt1.c1 IN ()) IN ()) FROM t0 WHERE (((((((((((0.7503960199849674)LIKE('-30260830')))OR(((1750898073)<=(x'')))))OR(((0.1595745740230764) IS TRUE))))AND((NOT (x'fba0')))))OR(((x'b405')<(0.8182287657555862))))) GROUP BY CASE WHEN CASE WHEN vt1.c2 THEN vt1.c2 WHEN t0.c1 THEN vt1.c0 WHEN t0.c2 THEN vt1.c0 END THEN ((((t0.c2)AND(vt1.c1)))OR(vt1.c1)) ELSE (((vt1.c1, t0.c0, vt1.c0))=((t0.c2, t0.c1, vt1.c0))) END, (- (((((vt1.c1)AND(vt1.c2)))AND(t0.c0)))), CASE (((t0.c2, vt1.c2, vt1.c2)) BETWEEN ((vt1.c2, vt1.c2, t0.c0)) AND ((vt1.c2, t0.c2, vt1.c1)))  WHEN ((t0.c0) IS FALSE) THEN vt1.c2 COLLATE BINARY ELSE LOWER(t0.c0) END HAVING (((vt1.c2) NOT BETWEEN (vt1.c0) AND (t0.c1)) IN (rtreenode(vt1.c1, t0.c2)));SELECT ((CASE WHEN vt1.c2 THEN t0.c1 ELSE t0.c2 END) BETWEEN (t0.c2) AND (NULL)) FROM vt1;SELECT ((((vt1.c2) NOT NULL)) BETWEEN (x'0892') AND (((t0.c0) BETWEEN (vt1.c1) AND (t0.c0)))) FROM vt1;SELECT DISTINCT 0Xffffffffec63f2d8 FROM t0; -- 0ms;
SELECT DISTINCT ((((UNLIKELY(vt1.c1))AND(((((vt1.c1)AND(t0.c0)))OR(vt1.c1)))))OR(((t0.c2)LIKE(vt1.c1)))) FROM vt1;SELECT (~ (CAST(vt1.c2 AS TEXT))) FROM t0, vt1 WHERE ((+ (0.04533000781822927 COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((t0.c1)>(t0.c1))) NOT BETWEEN (TOTAL(t0.c1)) AND (((((t0.c1)OR(vt1.c0)))OR(vt1.c1)))) FROM vt1, t0 WHERE ((CAST(NULL AS NUMERIC) IN ())); -- 0ms;
SELECT vt1.c1 FROM t0, vt1; -- 0ms;
SELECT ALL CAST((((vt1.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))) AS BLOB) FROM vt1 WHERE ((((((NULL)||('+⮼d'))))>((((x'') BETWEEN (NULL) AND (NULL))))));SELECT DISTINCT (- (((t0.c0) NOTNULL))) FROM vt1;SELECT COUNT(*) FROM vt1, t0; -- 0ms;
SELECT ((vt1.c0)LIKE(((0.34275528414339174) NOTNULL))), ((((((((((((vt1.c2)AND(vt1.c2)))AND(t0.c0)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c2)))AND(((vt1.c2)OR(0.9711255647898529)))), ((t0.c1)||(vt1.c0)) COLLATE BINARY FROM vt1, t0 WHERE ((COALESCE('1120916028', '-817014418') IN ())) ORDER BY t0.c0 COLLATE BINARY ASC; -- 0ms;
SELECT DISTINCT (~ ('zu')) FROM t0 LIMIT 809903224 OFFSET -989434798; -- 0ms;
SELECT t0.c1 FROM t0, vt1 WHERE ((((NOT (0.3500976218986964))) ISNULL)); -- 0ms;
SELECT ALL (+ (t0.c1)) COLLATE RTRIM, CAST((t0.c0 IN ()) AS REAL), ((((vt1.c0 COLLATE RTRIM)OR(((vt1.c2)>=(t0.c2)))))AND(COUNT(*))), json_type(CASE WHEN t0.c1 THEN vt1.c1 ELSE t0.c2 END), ((((t0.c2))<=((vt1.c1))) IN ()) FROM t0, vt1 LIMIT 18827722; -- 0ms;
SELECT (~ (t0.c0)) FROM vt1 WHERE (CAST(0.03248872222945298 AS TEXT)) GROUP BY ((((t0.c0)GLOB(vt1.c1)))==(((t0.c0)<<(vt1.c0))));SELECT ((vt1.c2 IN ()) IN (((((t0.c2)AND(vt1.c0)))AND(0Xffffffffe3345fed)), NULLIF(t0.c1, vt1.c2))) FROM t0, vt1 LIMIT -2087489281; -- 0ms;
SELECT DISTINCT ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) IS FALSE), -7.16443543E8, SUM(CAST(t0.c2 AS REAL)) OVER () FROM t0; -- 0ms;
SELECT vt1.c2, (TOTAL('1030165361') IN ()), (((+ (vt1.c1)))/(((t0.c0)%(vt1.c0)))) FROM vt1 WHERE (((((DATETIME(NULL, 0.8742861569105013, NULL))AND((('')+(0.9385623208563382)))))OR((-1.781972915E9 IN (x'9357ac9b')))));SELECT DISTINCT COALESCE(DISTINCT vt1.c2, ((t0.c0) ISNULL)) FROM vt1, t0 WHERE (CAST('' AS TEXT)); -- 0ms;
SELECT DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (vt1.c1)) COLLATE RTRIM FROM vt1 LIMIT 930766248;SELECT ALL vt1.c2, vt1.c1, SQLITE_COMPILEOPTION_GET(t0.c2) COLLATE RTRIM FROM t0 WHERE (((((0.9782042459661716)OR('Z'))) NOTNULL)) ORDER BY HEX(DISTINCT CAST(vt1.c0 AS TEXT));SELECT (((CASE WHEN vt1.c0 THEN t0.c2 ELSE t0.c1 END))<((((t0.c1) ISNULL)))) FROM vt1;SELECT ALL vt1.c2 FROM t0 WHERE (SUBSTR('..{uy<c2(', 0.4101253413052368) COLLATE NOCASE) LIMIT 1936254697;SELECT ALL TRIM('w4') FROM vt1 WHERE (((x'2e078365' COLLATE RTRIM)==('-1122491718'))); -- 0ms;
SELECT ALL ((t0.c0 COLLATE BINARY) ISNULL) FROM t0, vt1; -- 0ms;
SELECT DISTINCT AVG((t0.c1 IN ())) FROM vt1, t0; -- 1ms;
SELECT DISTINCT (NOT (vt1.c2 COLLATE BINARY)) FROM vt1 WHERE (LIKE((((x'2450', 0.4110831720673933, 1723036565))<((-560268057, NULL, 'sฃx	陃\t'))), x'', '1')); -- 0ms;
SELECT (x'' IN ((- (t0.c0)))), DENSE_RANK() OVER ( ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c2))))OR(vt1.c0)))OR((vt1.c2 IN ())))  NULLS LAST), JULIANDAY(((vt1.c1) BETWEEN (vt1.c2) AND (t0.c0)), t0.c0, vt1.c2, ((t0.c0) IS FALSE), ((t0.c2)==(vt1.c0))) FROM vt1, t0 WHERE ((+ (((((243459339)AND(NULL)))OR(-2024497221))))); -- 0ms;
SELECT ((((vt1.c0)LIKE(t0.c0))) NOTNULL) FROM vt1, t0 WHERE ((((x'd8a1') ISNULL) IN (((NULL)IS NOT('\&')), (~ (0.6776645436194817))))); -- 0ms;
SELECT ((0X4357a7c7)LIKE(LIKELIHOOD(vt1.c1, 0.6819580341221745))) FROM t0 WHERE (((('/v')) NOT BETWEEN (((((x'', 0.9632153171531946, x'')) BETWEEN ((-1588949242, NULL, NULL)) AND ((-1.931131688E9, x'', '8a 캵QL晗'))))) AND (((0.875719363996264 IN ('-48032542'))))));SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c2 ELSE 0.3703779748215894 END)OR(SUBSTR(t0.c0, vt1.c1))))OR((t0.c0 IN ()))) FROM vt1 WHERE ((((CASE WHEN NULL THEN 1888416953 WHEN NULL THEN '-445378439' WHEN '84951311' THEN 1262798038 WHEN NULL THEN '1548161043' WHEN '-749503832' THEN x'' END))=((((0.5206547640687585)*(x''))))));SELECT CAST((((t0.c1))>((t0.c1))) AS TEXT) FROM vt1 LIMIT -1868844530 OFFSET -504837782;SELECT DISTINCT json_quote((((t0.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT UNLIKELY((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((vt1.c0)))) FROM t0, vt1; -- 1ms;
SELECT ALL load_extension(((t0.c2) BETWEEN (t0.c2) AND (vt1.c0))), (((t0.c0)) NOT BETWEEN (('')) AND ((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))), (((~ (vt1.c1))) NOTNULL) FROM vt1, t0 INDEXED BY i84 WHERE ((((((x''))<((x'')))) NOT BETWEEN (json(NULL)) AND ((((NULL))>((x'9d1d')))))); -- 0ms;
SELECT ((((vt1.c0)) BETWEEN ((t0.c2)) AND ((t0.c2))) IN (vt1.c2 COLLATE BINARY)), (- (CAST(x'551e' AS REAL))), (((NOT (t0.c0))) NOT BETWEEN ((vt1.c1 IN ())) AND ((+ (vt1.c2)))) FROM t0;SELECT ALL '-1582274985' FROM vt1, t0 WHERE (((((('')) BETWEEN ((x'8ceb')) AND ((NULL))))LIKE(0.605758223799179))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), LAG(((ABS(t0.c1)) ISNULL), CAST(t0.c2 AS BLOB), '288959258') OVER (), ((t0.c1)>((NOT (vt1.c0)))), CAST('-267845338' AS INTEGER) COLLATE NOCASE, AVG(vt1.c1) OVER () FROM t0 GROUP BY CASE ((('-656891244', t0.c0, '')) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0)))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (0.8709370359194413)) THEN (((vt1.c1)) BETWEEN ((t0.c1)) AND ((vt1.c0))) WHEN (((vt1.c2))>((t0.c0))) THEN TRIM(DISTINCT 0X5fc5a84) WHEN vt1.c2 THEN CASE vt1.c1  WHEN t0.c0 THEN t0.c2 ELSE vt1.c1 END END LIMIT -883772902 OFFSET 1123260662;SELECT DISTINCT (- ((~ (t0.c1)))) FROM t0; -- 0ms;
SELECT DISTINCT LEAD(((((t0.c0)+(t0.c1))) BETWEEN (((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))OR(t0.c1)))OR(t0.c0))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c2 END)), ((CAST(t0.c1 AS REAL))*(t0.c2 COLLATE RTRIM)), (CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN 's䍸핆<o瓯' WHEN '~U*]e/!{' THEN t0.c1 END IN ())) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((((((0.04928243050431824)OR(vt1.c0)))OR(vt1.c0))))!=((MAX(vt1.c1)))), (((t0.c2) IS TRUE) IN ()), CAST(((((t0.c0)OR(0.46373180645320433)))AND(t0.c0)) AS TEXT) FROM vt1;SELECT DISTINCT CAST((t0.c2 IN (t0.c2)) AS INTEGER) FROM vt1 WHERE (CASE WHEN CASE NULL  WHEN x'' THEN x'' ELSE NULL END THEN (NOT (639088383)) WHEN ((0.4462664274709427) ISNULL) THEN (((('1007392323')AND(0.7892336032712354)))OR(0.9927712947397397)) WHEN CAST('1537009777' AS INTEGER) THEN (('-1582274985') NOT NULL) ELSE (('1878528705') BETWEEN (x'') AND (0.6903389628020475)) END);SELECT ALL ((((((((NULL)OR((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1))))))OR(t0.c0)))OR(COUNT(*))))AND(UNLIKELY(t0.c2))) FROM vt1, t0; -- 0ms;
SELECT ((((((((AVG(vt1.c1))AND(GROUP_CONCAT(t0.c1))))AND(((t0.c2)/(t0.c2)))))OR(CAST(t0.c0 AS TEXT))))OR(((((((((t0.c2)OR(t0.c1)))OR(vt1.c1)))AND(t0.c2)))OR(vt1.c2)))), ((1772583815)|(0.6064093684193297)), LEAD((((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) IN ()), ((LIKELIHOOD(DISTINCT t0.c1, 0.8690817823323036)) BETWEEN (((((NULL)AND(t0.c2)))AND(t0.c0))) AND (t0.c0)), CASE WHEN ((t0.c1) NOTNULL) THEN CAST(t0.c2 AS NUMERIC) ELSE '-2024497221' END) OVER () FROM t0;SELECT DISTINCT TOTAL(((vt1.c2)|(t0.c2))) FROM vt1 WHERE ((((0.6200223692791608)) NOT BETWEEN (((('385129404')<=(NULL)))) AND ((('' IN (x''))))));SELECT ALL GROUP_CONCAT(CAST(vt1.c2 AS NUMERIC)) OVER () FROM t0 GROUP BY (((vt1.c2, ((t0.c0)*(vt1.c2)), (NOT (vt1.c1))))<=((((vt1.c0) IS FALSE), 0.31414791433890643, vt1.c2)));SELECT COUNT(CAST(t0.c0 AS BLOB)) OVER (), (((0xffffffff8020c424 IN ()))+(((vt1.c0) NOTNULL))), 'N1' FROM vt1, t0 WHERE (((((0.6747488373891412) IS FALSE)) BETWEEN ((('-1223965167') NOTNULL)) AND ((('hㆁHMB奮')!=('214229920'))))); -- 0ms;
SELECT vt1.c0 FROM vt1, t0; -- 0ms;
SELECT ALL ABS(DISTINCT TYPEOF(vt1.c2)), GROUP_CONCAT(((NULL)IS(vt1.c1))), ((((((((((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))OR(((((0.18520721483779523)OR(t0.c1)))AND(vt1.c0)))))OR(SQLITE_COMPILEOPTION_USED(t0.c0))))OR((- (x'')))))OR(vt1.c1 COLLATE RTRIM)), MIN(t0.c0) COLLATE BINARY, (((((t0.c1)AND(t0.c1)))AND(t0.c1)) IN ()) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (NOT ((((vt1.c0))=((t0.c0))))), TOTAL(0.8394125704864396) OVER (), ((CASE WHEN t0.c1 THEN t0.c1 ELSE vt1.c1 END) BETWEEN ((((t0.c2))<=((vt1.c0)))) AND (NULL)) FROM vt1;SELECT NULLIF(DISTINCT CASE WHEN t0.c2 THEN vt1.c0 ELSE 0.006804230258830146 END, ((t0.c0) IS FALSE)) FROM vt1 WHERE (((((('(')OR(''))))>(((('') ISNULL)))));SELECT DISTINCT LTRIM((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0)))), ((((((t0.c1) BETWEEN (t0.c1) AND (t0.c0)))AND(((t0.c0)OR('-1435572303')))))AND(CASE WHEN t0.c2 THEN 0Xffffffffb2aaf77b WHEN vt1.c2 THEN vt1.c2 WHEN t0.c1 THEN t0.c1 END)), ((((vt1.c1)) BETWEEN ((t0.c0)) AND ((vt1.c1))) IN (JULIANDAY(vt1.c2, t0.c0, 0.9059200343277689), (((vt1.c2))>=(('{|'))))) FROM t0, vt1 UNION SELECT NULLIF((vt1.c1 IN ()), IFNULL(t0.c2, t0.c1)), ((vt1.c0 IN ()) IN ()), (((t0.c1)) NOT BETWEEN ((CAST(vt1.c2 AS REAL))) AND ((t0.c2))) FROM vt1;SELECT ALL AVG(0Xffffffffc3025f2b COLLATE BINARY) OVER () FROM vt1 WHERE ((- (CASE 0.9187873250881784  WHEN NULL THEN 0.9432096852499305 WHEN x'' THEN x'' WHEN x'' THEN -1411676337 WHEN 0.162668013141959 THEN NULL WHEN x'' THEN 0x3873ffc5 END))); -- 0ms;
SELECT DISTINCT (~ (CAST(t0.c2 AS BLOB))) FROM t0, vt1 WHERE (UPPER(CAST(NULL AS INTEGER))); -- 0ms;
SELECT (((vt1.c0 IN ()))|(((((((((NULL)AND('-926256487')))OR(vt1.c0)))OR(t0.c2)))OR(t0.c2)))), (((t0.c0)) BETWEEN ((((vt1.c1) BETWEEN (vt1.c0) AND (t0.c1)))) AND ((((t0.c1) IS TRUE)))), (~ (((((t0.c0)AND(t0.c0)))AND(t0.c0)))) FROM t0 WHERE (((((((((']3.\na>zs')AND(CAST(1262798038 AS BLOB))))OR((0.6705240989091269 IN ('1860790126')))))AND(((0.8733645342396718) BETWEEN (NULL) AND (0.5542647353171075)))))AND(UPPER(0.610128436343991))));SELECT ALL JULIANDAY(((vt1.c0)/('-817014418')), (NOT (vt1.c1)), (t0.c2 IN (vt1.c1, vt1.c2))) FROM t0, vt1 WHERE (CASE (('207366842') BETWEEN (NULL) AND (x''))  WHEN NULL THEN NULL WHEN (('nlvq0eGF')*(0x1da88394)) THEN ((-1.475819395E9) NOT NULL) WHEN (((-1644861735, 0x4380de6a, x'')) NOT BETWEEN ((0.5846729883425982, '|.', 0.7115774574145142)) AND (('vI', 1262798038, 0.1457549619291858))) THEN ((((((((((((x'')AND(NULL)))OR(0xffffffffc5066c52)))AND(0.20972830223279249)))OR(NULL)))OR(0.878563513792804)))AND('0.027968370224501715')) END); -- 0ms;
SELECT DISTINCT LAG(((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) ISNULL), ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.c2 THEN '8a 캵QL晗' ELSE vt1.c0 END) IS TRUE), IFNULL(DISTINCT (~ (vt1.c0)), ((vt1.c1) NOTNULL))) OVER ( PARTITION BY 0.06346731962939145, (((+ (vt1.c0)))IS(CASE t0.c2  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE vt1.c2 END))), vt1.c0, (~ (CAST(vt1.c1 AS BLOB))) FROM vt1 GROUP BY (~ (NULL)) HAVING (((NOT (NULL))) NOT BETWEEN ((((vt1.c1, t0.c0, t0.c2))<>((t0.c0, t0.c2, t0.c1)))) AND ((+ (vt1.c1))));SELECT DISTINCT ((((vt1.c1, 'TXtOp9룶a\r', vt1.c1)) NOT BETWEEN ((t0.c2, vt1.c1, t0.c1)) AND ((NULL, t0.c0, vt1.c2))) IN ()) FROM t0 GROUP BY ((((vt1.c2)IS NOT(t0.c2)))IS(t0.c1 COLLATE RTRIM)) HAVING ((COALESCE(DISTINCT vt1.c0, vt1.c2))>=(MAX(vt1.c0)));SELECT DISTINCT CAST(t0.c1 AS BLOB) FROM t0 WHERE ((((0.0070265602656397474 IN ())) BETWEEN (CAST('4' AS INTEGER)) AND (('!a' IN ())))) INTERSECT SELECT DISTINCT ((((((((-1.96450714E8)OR(CASE WHEN t0.c1 THEN vt1.c0 END)))AND(((NULL)LIKE(t0.c1)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (vt1.c1)))))OR(vt1.c2)) FROM t0 GROUP BY (((((vt1.c2))<((0X51a0d0a6))))&(((t0.c0)<(t0.c1))));SELECT (((+ (t0.c0)))GLOB(rtreenode(t0.c2, vt1.c2))) FROM t0, vt1; -- 0ms;
SELECT SUM(MAX(json(NULL))) FROM vt1, t0;SELECT DISTINCT ((((vt1.c0)|(vt1.c2)))&((t0.c2 IN ()))) FROM t0 GROUP BY vt1.c2;SELECT DISTINCT vt1.c2 COLLATE RTRIM FROM vt1 INDEXED BY i84 WHERE (LOWER(DISTINCT (((x'a22f', NULL, '?z80}')) NOT BETWEEN ((0X1e07d1cf, '', 0.4667433154092343)) AND (('R羒D	-_', NULL, x'')))));SELECT DISTINCT CAST((((vt1.c1)) NOT BETWEEN ((t0.c0)) AND ((0.04593466281645475))) AS NUMERIC) FROM t0 WHERE (((0.9773651933985006 COLLATE RTRIM) BETWEEN ((((((((((((('-1868844530')OR(0.3472492252559982)))OR(x'')))OR(x'')))OR('')))AND('q4v<')))AND(NULL))) AND (CASE WHEN '' THEN 1821815005 WHEN x'' THEN -2.12810746E9 WHEN 0.4371582271892237 THEN NULL ELSE 'I]R_' END))) GROUP BY (+ (CAST(t0.c2 AS REAL))) HAVING ((((((vt1.c0)IS(vt1.c0)))AND(((t0.c2) NOTNULL))))OR(0.6773770383280872 COLLATE RTRIM));SELECT DISTINCT RANK() OVER ( ORDER BY 0.47471940040379235 COLLATE RTRIM  NULLS FIRST GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE CURRENT ROW) FROM t0 WHERE (LIKE(CAST(x'' AS BLOB), ((('-754480606'))<=((x''))), 'p')); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 GROUP BY ((((vt1.c0) IS FALSE)) ISNULL), ((((((((vt1.c1)AND(vt1.c1)))AND(t0.c2)))OR(vt1.c1 COLLATE BINARY)))OR(x'')), ((((((vt1.c2)<<(t0.c0)))AND(CASE vt1.c0  WHEN '-1145910275' THEN t0.c1 END)))OR(((t0.c2)GLOB(t0.c1)))), (((- (t0.c1)))>=(vt1.c0 COLLATE BINARY)), (((((t0.c0) ISNULL), CASE vt1.c2  WHEN t0.c2 THEN t0.c0 END, ((t0.c2)=(vt1.c1))))<>((((((t0.c1)AND(t0.c1)))AND(t0.c1)), CAST(vt1.c1 AS REAL), ((t0.c2)%(t0.c2))))) HAVING CAST(((((vt1.c0)AND(t0.c2)))OR(t0.c0)) AS BLOB);SELECT DISTINCT 0.15237065393813054, (NULLIF(t0.c0, t0.c2) IN ()), AVG(CAST(t0.c0 AS TEXT)) OVER ( ORDER BY -1093840301 ASC  NULLS LAST) FROM vt1 GROUP BY CAST(((vt1.c0) IS FALSE) AS TEXT), (((t0.c1)) BETWEEN ((vt1.c2)) AND ((t0.c2))) COLLATE NOCASE, ((((t0.c0) IS TRUE)) NOTNULL);SELECT DISTINCT ((TOTAL(t0.c2))IS(GROUP_CONCAT(t0.c1))), ((vt1.c2)IS NOT(vt1.c1 COLLATE NOCASE)), (((t0.c1 IN (x'')))&((NOT (t0.c1)))) FROM vt1, t0; -- 0ms;
SELECT ((((vt1.c2)LIKE(t0.c0)))<=(((t0.c0) IS FALSE))), ROW_NUMBER() OVER ( ORDER BY CASE vt1.c2  WHEN (((vt1.c2))==((t0.c2))) THEN vt1.c2 ELSE (t0.c1 IN ()) END), (((+ (t0.c2))) NOT BETWEEN (vt1.c1) AND (((t0.c1) IS TRUE))) FROM vt1, t0 GROUP BY ((NULLIF(DISTINCT vt1.c2, t0.c0))%((((t0.c0, t0.c1, '644983757')) BETWEEN (('h炌C	1Bo!?', vt1.c0, vt1.c0)) AND ((t0.c0, vt1.c0, vt1.c2))))), ABS(((vt1.c2) IS FALSE)), (((vt1.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ((t0.c1 IN ()), ((t0.c0)%(t0.c1)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((+ (vt1.c2))), '0.8122040838331882', HEX(DISTINCT 0.8279231063346856) FROM vt1, t0; -- 0ms;
SELECT DISTINCT CAST(TYPEOF(DISTINCT t0.c2) AS REAL) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((CAST(vt1.c2 AS BLOB))OR(NULL)))OR(COUNT(vt1.c1))) FROM t0, vt1 WHERE (json_extract(((x'')||('-407808042')), CAST(NULL AS REAL), '', (~ (NULL)), ((NULL)>>(NULL)), ('-1100847922' IN ()), ((NULL)IS(-1.216870941E9)), CASE WHEN x'' THEN '1i' END));SELECT ALL ((t0.c2) IS FALSE) FROM t0 WHERE ((- (((('1262798038')) NOT BETWEEN ((NULL)) AND ((0x6d753a81)))))); -- 1ms;
SELECT DISTINCT DATE(CAST(t0.c2 AS NUMERIC), MIN(t0.c1), ((vt1.c0) NOT BETWEEN (t0.c1) AND (vt1.c2))) FROM t0 GROUP BY ((((t0.c0) BETWEEN (t0.c1) AND (vt1.c0))) IS TRUE);SELECT ((((t0.c0)|(vt1.c1)))=(((vt1.c2) IS TRUE))) FROM vt1, t0 GROUP BY LOWER(vt1.c0 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((t0.c1) IS TRUE))>(CAST(vt1.c0 AS INTEGER))), CAST(((x'')OR('1349959869')) AS INTEGER), (((- (vt1.c0))) NOT BETWEEN ((- (vt1.c1))) AND (CASE t0.c1  WHEN vt1.c2 THEN vt1.c2 END)) FROM vt1, t0; -- 0ms;
SELECT ALL (+ ((t0.c1 IN ()))) FROM t0 WHERE ((((9.37237308E8) ISNULL) IN (((((NULL)AND('G>kc\r')))OR(NULL))))) GROUP BY CAST(CAST(NULL AS REAL) AS NUMERIC), CAST(SUBSTR(vt1.c2, vt1.c1) AS TEXT), ((CAST(t0.c1 AS REAL))LIKE(json_object(t0.c0, vt1.c0))) HAVING ((((((t0.c2)GLOB(vt1.c0)))OR('7XY擎Z\n')))AND(((((NULL)OR(t0.c2)))OR(0.7889419975038603))));SELECT ALL ((((t0.c2)<(t0.c2)))LIKE(COUNT(t0.c1))) FROM t0; -- 0ms;
SELECT DISTINCT (((((+ (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR(vt1.c2)))))AND(t0.c0 COLLATE BINARY)) FROM t0;SELECT ALL ((GROUP_CONCAT(vt1.c1)) NOT BETWEEN (((t0.c1) NOT NULL)) AND (((t0.c1) NOT NULL))) FROM vt1, t0 LIMIT 207366842; -- 0ms;
SELECT DISTINCT json_remove(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)), vt1.c0, (((t0.c0))>=((t0.c1))), 'Q#M궝') FROM t0;SELECT DISTINCT COUNT(((vt1.c2) IS TRUE)) COLLATE NOCASE FROM vt1; -- 0ms;
SELECT ALL ((((x'')AND('턿.G')))GLOB(((vt1.c1) NOT NULL))) FROM vt1, t0; -- 0ms;
SELECT DISTINCT '浻RMLGRh\nB' FROM vt1 WHERE ((+ (x'4d4b6a4a'))); -- 0ms;
SELECT DISTINCT CAST(vt1.c1 AS TEXT) FROM t0, vt1 WHERE (('1768249988' IN ())) GROUP BY '1996201042' HAVING CASE MAX(0xffffffff84c08bf5)  WHEN (((vt1.c2)) BETWEEN ((vt1.c0)) AND ((0.5786760205601554))) THEN ((vt1.c0) NOTNULL) WHEN CASE WHEN t0.c2 THEN vt1.c2 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN vt1.c0 WHEN vt1.c2 THEN t0.c0 WHEN t0.c2 THEN vt1.c1 END THEN ((vt1.c2)<<(vt1.c1)) WHEN CASE vt1.c0  WHEN vt1.c0 THEN t0.c2 ELSE vt1.c0 END THEN ((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) END; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt1.c1)) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((t0.c0) IS TRUE))) FROM t0, vt1 WHERE (CAST((('639088383')/(x'09be19c1')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOTNULL))OR(((t0.c1) BETWEEN (vt1.c2) AND (t0.c1)))) FROM t0, vt1 WHERE (((SQLITE_COMPILEOPTION_USED(0.6506121498531944))||(((((((((x'56b2')AND('')))OR('-1782406232')))OR('')))OR('9223372036854775807'))))); -- 0ms;
SELECT ALL (((vt1.c0, vt1.c0, t0.c2)) NOT BETWEEN ((MIN(vt1.c1), ((t0.c1) NOT BETWEEN (t0.c2) AND (vt1.c1)), ((((t0.c1)AND(vt1.c1)))OR(vt1.c1)))) AND ((vt1.c1, vt1.c1 COLLATE RTRIM, ((vt1.c0)*(t0.c2))))) FROM t0 WHERE (CAST(((((x'')AND('0.708702859809519')))OR(0.9533468937388214)) AS REAL));SELECT DISTINCT (((((((((((0.8015339318606064)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c0))))OR(CASE WHEN vt1.c0 THEN NULL WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN vt1.c0 WHEN vt1.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE vt1.c0 END)))AND((~ (t0.c2)))))AND((t0.c2 IN ()))))OR(json_valid(0.17403558312349565))) FROM t0 WHERE (((445280867 COLLATE BINARY) ISNULL)); -- 0ms;
SELECT t0.c2 FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((((vt1.c2)AND(vt1.c2)))AND('c_')))<(((((((((vt1.c0)OR(t0.c1)))OR(t0.c2)))AND(t0.c2)))OR(0xffffffffea2649d2)))) FROM t0, vt1 GROUP BY vt1.c2, CASE WHEN ((vt1.c1)>=(t0.c2)) THEN CASE WHEN t0.c1 THEN vt1.c0 END ELSE ((0.18616968687545665)<=(vt1.c2)) END, x'', ((((((vt1.c2)OR(vt1.c1)))OR(t0.c0)))>(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c2)))), t0.c1 HAVING (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((NULL))))||(MIN(t0.c1))) ORDER BY (((((- (t0.c1)))OR(CAST(t0.c0 AS NUMERIC))))AND(t0.c0 COLLATE NOCASE)), CASE vt1.c0  WHEN t0.c2 THEN CAST(x'' AS NUMERIC) END; -- 0ms;
SELECT ALL ((NULL)>>('-1931131688' COLLATE NOCASE)) FROM t0 WHERE (CAST(UPPER(0.45428900963708796) AS BLOB)); -- 0ms;
SELECT (((t0.c1 IN ())) NOT BETWEEN (UNLIKELY(vt1.c2)) AND (vt1.c2 COLLATE RTRIM)) FROM vt1 WHERE ((('1553259261') IS FALSE) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((~ (0.11811320859021768))) NOT BETWEEN (((t0.c1)-(vt1.c2))) AND (CASE WHEN vt1.c2 THEN vt1.c2 END)) FROM vt1 ORDER BY ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c2)) COLLATE RTRIM DESC;SELECT DISTINCT t0.c0, MIN(AVG(t0.c2), TOTAL(t0.c0)), LOWER(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c2 THEN vt1.c0 END) FROM vt1;SELECT ALL ((((t0.c2)OR(t0.c0)))AND(vt1.c0)) COLLATE RTRIM, CUME_DIST() OVER (), (+ (TRIM(DISTINCT x''))) FROM t0;SELECT ALL (((NOT (vt1.c1)))IS(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)))OR(t0.c2)))AND(t0.c2)))), (((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) COLLATE BINARY, GROUP_CONCAT((t0.c2 IN ())) OVER ( PARTITION BY ROUND((((vt1.c0, t0.c1, vt1.c2))=((vt1.c2, t0.c1, vt1.c0))), vt1.c2), TRIM(DISTINCT vt1.c2) COLLATE RTRIM RANGE BETWEEN ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((~ (0xffffffff9c2df265))) AND ((((t0.c2, vt1.c2, t0.c2))<((vt1.c0, t0.c0, t0.c0))))) FOLLOWING AND CAST(vt1.c1 AS REAL) COLLATE RTRIM FOLLOWING) FROM t0, vt1 WHERE (((((((((((NULL) NOTNULL))AND(((('/N'))<((NULL))))))AND(CASE WHEN NULL THEN 0.815025354594807 WHEN x'' THEN NULL WHEN '0.4022385943692539' THEN x'084e' END)))OR(CASE NULL  WHEN NULL THEN 2.16382808E8 ELSE '636781385' END)))OR(CAST(NULL AS NUMERIC)))) ORDER BY ((vt1.c1 IN (t0.c1, t0.c2)) IN ());SELECT TYPEOF(DISTINCT CAST(vt1.c0 AS INTEGER)), CAST(t0.c2 AS INTEGER) COLLATE RTRIM, ((LTRIM(vt1.c1, vt1.c1)) NOTNULL) FROM vt1;SELECT DISTINCT (((t0.c0)) NOT BETWEEN (('-1269633120')) AND (((vt1.c0 IN ())))) FROM t0, vt1 GROUP BY CAST(((t0.c1)%(vt1.c0)) AS INTEGER); -- 1ms;
SELECT ALL COUNT(*) FILTER(WHERE vt1.c1) OVER (), MIN(CAST(t0.c0 AS TEXT)), (((vt1.c2)) BETWEEN ((((t0.c1) NOT BETWEEN (0X4e5c7a4) AND (vt1.c0)))) AND (((vt1.c1 IN (vt1.c0, t0.c1))))), ((t0.c2) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (SUM(vt1.c1))), ((t0.c0) ISNULL) COLLATE RTRIM FROM t0;SELECT ALL ((CAST('|h]2n' AS BLOB)) NOT NULL) FROM t0, vt1 GROUP BY CAST(vt1.c2 COLLATE BINARY AS INTEGER), (- (vt1.c1)), ((vt1.c0)LIKE(t0.c0)) COLLATE NOCASE ORDER BY CASE ((((t0.c1)OR(0.8600894273404481)))AND(vt1.c2))  WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN ((vt1.c2) IS FALSE) WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) WHEN ((2033482784) NOTNULL) THEN (- (t0.c1)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c2)) BETWEEN (((~ (t0.c1)), MIN(x''), ((vt1.c0) IS FALSE))) AND ((((vt1.c1) NOTNULL), MAX(vt1.c2), ((t0.c1)<=(t0.c0))))), COUNT(*) FILTER(WHERE x'394f') OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), ((((t0.c1)) BETWEEN ((t0.c0)) AND ((vt1.c2))) IN ()) FROM vt1, t0 WHERE (CAST((('PC7놺') NOTNULL) AS TEXT)) ORDER BY (((t0.c1)) BETWEEN ((((((((((((((vt1.c0)OR(t0.c0)))OR(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(t0.c2)))) AND ((((t0.c1)IS NOT(vt1.c0))))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL vt1.c0 FROM t0;SELECT ALL (NOT (((NULL)>=(vt1.c0)))), (t0.c2 IN ()) COLLATE BINARY, MAX((t0.c0 IN ())) FROM vt1; -- 0ms;
SELECT COUNT((((t0.c2, t0.c0, t0.c2, vt1.c1, t0.c1))==(('-1257241042', t0.c1, vt1.c2, t0.c2, vt1.c2)))) OVER ( ROWS BETWEEN  CURRENT ROW AND '' FOLLOWING) FROM t0, vt1 WHERE (CAST('-2042335722' AS NUMERIC)); -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE WHEN x'f3dd' THEN ((vt1.c2)||(0.4202210204690525)) ELSE 0.533643381543379 END, (NOT (vt1.c1)) COLLATE BINARY) OVER () FROM vt1 WHERE (((((((((CHANGES())OR(((('467476569', '-970516693', 0.7896763550566381))<((0.4305269003568659, '', '-1477422423'))))))AND(((('[0H!tJg'))<=((NULL))))))OR(((0.033195335829889205) BETWEEN (x'568a') AND (NULL)))))OR((('-1024027996')GLOB(NULL))))); -- 1ms;
SELECT (((CAST(vt1.c1 AS NUMERIC)))>((LOWER(DISTINCT t0.c1)))), (- ((+ ('v䯵e%')))), TRIM(DISTINCT MAX(t0.c0, t0.c1), t0.c1 COLLATE NOCASE) FROM vt1;SELECT ALL CAST(((t0.c0)AND(vt1.c2)) AS BLOB), vt1.c1, (((vt1.c1, t0.c0, t0.c2, vt1.c2, vt1.c1, '\neW냯Q컲', t0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, ((((vt1.c1)AND(t0.c1)))OR(t0.c0)), ((vt1.c2)<(t0.c0)), vt1.c2, AVG(t0.c1), ((t0.c2) NOT NULL), ((t0.c1)LIKE(t0.c1)))) AND ((t0.c2 COLLATE BINARY, CAST(vt1.c0 AS REAL), ((vt1.c1)IS(vt1.c1)), ((((((((t0.c2)AND(vt1.c1)))OR(vt1.c2)))OR(t0.c0)))AND(t0.c2)), ((vt1.c1)*(t0.c0)), vt1.c2, ((((t0.c0)AND(vt1.c2)))OR(0.13520792399960724))))) FROM t0, vt1; -- 0ms;
SELECT AVG(CASE vt1.c1  WHEN vt1.c2 THEN t0.c0 ELSE t0.c1 END) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c2 IN (t0.c0)))IS NOT(((t0.c1)<(t0.c2)))), (('') ISNULL), CAST(vt1.c2 AS BLOB) COLLATE BINARY FROM t0, vt1; -- 0ms;
SELECT ALL (((vt1.c1)) NOT BETWEEN ((((vt1.c2) NOTNULL))) AND ((((vt1.c2) IS FALSE)))), ((((vt1.c1)=(vt1.c2)))||(vt1.c2 COLLATE RTRIM)), SUM((t0.c2 IN ())) FROM t0 WHERE (((((0.6618205758041104) IS FALSE)) ISNULL)) GROUP BY load_extension(((t0.c0) ISNULL)), (TIME(vt1.c2, vt1.c1, vt1.c0) IN ()), ((t0.c2 IN ()) IN ());SELECT DISTINCT ROW_NUMBER() OVER (), CHANGES(), CAST(vt1.c0 AS INTEGER) FROM vt1, t0 WHERE ((((('qa^<') NOTNULL)) NOT NULL)) LIMIT 187840023 OFFSET -699876115; -- 0ms;
SELECT ALL ((('찫nꨝ_	c*')) NOT BETWEEN ((((t0.c2) NOT BETWEEN (vt1.c2) AND (t0.c2)))) AND ((((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))AND(vt1.c2)))OR(vt1.c2))))) FROM t0 WHERE ((((~ (NULL)))%(((0.861988760619292)<=('493621953')))));SELECT DISTINCT ((((vt1.c1) ISNULL)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN vt1.c2 END) AND (((((((((vt1.c0)AND(vt1.c2)))OR(t0.c1)))OR(t0.c1)))AND(vt1.c1)))), (((vt1.c1 IN (0.5874383086189005))) IS TRUE), NTILE((vt1.c0 COLLATE RTRIM IN ())) OVER () FROM vt1 WHERE (CAST((((NULL))>((x''))) AS BLOB)) GROUP BY (((vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN NULL THEN vt1.c0 END)) AND (((((t0.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0)))))), ((((vt1.c0)<=(t0.c1)))|(((vt1.c2)=(vt1.c0)))), CAST(UPPER(vt1.c0) AS TEXT);SELECT DISTINCT (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 ELSE t0.c2 END IN ()) FROM vt1 WHERE (-2132139803) GROUP BY LOWER((0.9524452480240496 IN (vt1.c2))) HAVING -196450714 LIMIT 1606527054; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0, vt1 WHERE ((((((((((('i~') NOT NULL))OR(((x'')-(x'8c7f')))))AND((+ (NULL)))))OR(CAST(x'' AS NUMERIC))))OR(x'' COLLATE BINARY))) LIMIT -483106835; -- 1ms;
SELECT (GROUP_CONCAT(t0.c2) IN ((vt1.c0 IN ()))) FROM t0, vt1 WHERE ((((420945460)+('')) IN (CASE WHEN x'' THEN x'265dd190' WHEN x'' THEN 'Y' WHEN x'1b7e' THEN NULL END))); -- 0ms;
SELECT json_remove(t0.c1 COLLATE NOCASE, UPPER(t0.c1)) FROM vt1 GROUP BY (CASE vt1.c2  WHEN t0.c1 THEN t0.c0 ELSE '-414298710' END IN ((- (t0.c0)), CASE WHEN t0.c1 THEN t0.c0 ELSE vt1.c2 END));SELECT ALL (((vt1.c1 IN ())) BETWEEN (t0.c0) AND (((t0.c2)+(t0.c2)))), LIKELIHOOD(DISTINCT (NOT (vt1.c0)), 0.5936350370444453), (- (t0.c2 COLLATE BINARY)) FROM vt1 GROUP BY CAST(vt1.c1 AS REAL) COLLATE BINARY HAVING ((((((vt1.c1)AND(t0.c0)))OR(vt1.c1))) IS TRUE);