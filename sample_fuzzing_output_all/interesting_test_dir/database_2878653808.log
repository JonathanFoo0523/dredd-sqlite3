-- Time: 2024/06/06 01:07:24
-- Database: database8
-- Database version: 3.40.0
-- seed value: 2878653808
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.5203279607573578; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 1ms;
UPDATE vt0 SET c0=x''; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=518928011,7');\n; -- 0ms;
PRAGMA temp.short_column_names = false; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE CHAR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1280089911,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
DELETE FROM vt0 WHERE x''; -- 0ms;
PRAGMA stats; -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
REINDEX NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.41406624429294747)OR('-445665862')))OR(x'0972c909')))OR(NULL)))AND(0.552116261385199)) IN ()); -- 0ms;
VACUUM; -- 1ms;
ANALYZE temp; -- 0ms;
UPDATE rt0 SET (c0, c2, c0)=('518928011', x'', 0.34838499737929884) WHERE CAST(ABS(DISTINCT rt0.c2) AS TEXT); -- 0ms;
COMMIT; -- 0ms;
ANALYZE main; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1190015581); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 0ms;
PRAGMA busy_timeout = 5214785210052128347; -- 0ms;
PRAGMA temp.stats; -- 0ms;
END; -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE (+ ((rt0.c1 IN ()))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7989451953294785; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35899'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-939298744,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1923188040,3');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53697'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34320'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63272'); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 893954552);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2, c0) VALUES ('m1n', '1456706972', NULL); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (1014137359), (0.564134903684273), (0.3854180055534778); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('1014137359') WHERE CASE (NOT (rt0.c0))  WHEN ((rt0.c1) ISNULL) THEN ((x'')*(rt0.c1)) END; -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=(-1316229994); -- 0ms;
CREATE VIRTUAL TABLE vt45 USING fts5(c0 UNINDEXED, detail=none); -- 0ms;
INSERT INTO vt45(vt45) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(x'') WHERE rt0.c0; -- 0ms;
ANALYZE vt45; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=-1.92318804E9 WHERE 0xffffffffb00fb1d0; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt45(vt45, rank) VALUES('automerge', 5); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt45(vt45) VALUES('rebuild'); -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0xffffffff8db551b2); -- 0ms;
UPDATE rt0 SET (c0)=(x'918f') WHERE 0.3211942741342241; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
DROP TABLE rt0; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
CREATE TEMP TABLE t0 (c0 TEXT ); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE INDEX i65 ON t0(CASE x'f3df'  WHEN (+ (c0)) THEN CAST(c0 AS REAL) ELSE TRIM(DISTINCT c0) END COLLATE BINARY); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('2t'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c77; -- 1ms;
UPDATE OR IGNORE t0 SET c77=0.9913316927982326, c77='', c77='*宰' WHERE (((t0.c77)) NOT BETWEEN ((((t0.c77)IS NOT(t0.c77)))) AND ((CAST(0X3548a9f8 AS BLOB)))); -- 0ms;
UPDATE t0 SET c77=-862941643 WHERE ((((((((((t0.c77)AND(t0.c77)))AND(t0.c77)))AND(t0.c77)))OR(t0.c77)))>=(NULL)); -- 1ms;
UPDATE OR IGNORE vt45 SET (c0)=(x''); -- 0ms;
PRAGMA journal_size_limit = 3896773373363829277; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt45', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1337342601 unordered noskipscan'); -- 1ms;
UPDATE t0 SET (c77, c77, c77)=(0.46383133039218316, 0.4573236666145446, x''); -- 0ms;
REINDEX RTRIM; -- 0ms;
ANALYZE; -- 1ms;
CREATE UNIQUE INDEX i7 ON t0((-0.0 IN ())); -- 0ms;
INSERT OR IGNORE INTO vt45(c0) VALUES (x'944a'); -- 0ms;
INSERT INTO vt45(vt45) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt45', 't0', '2 unordered noskipscan'); -- 0ms;
END; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c77 TO c1; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ALTER TABLE t1 ADD COLUMN c66 TEXT; -- 0ms;
UPDATE OR REPLACE t1 SET (c1)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 1ms;
INSERT INTO vt45(vt45, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c99 REAL; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt45 SET c0=1.013144496E9; -- 0ms;
UPDATE vt45 SET c0=-1.280089911E9; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (~ (TRIM(DISTINCT t1.c1))) FROM vt45, t1, vt0; -- 1ms;
SELECT t1.c1 FROM t1, vt45 WHERE (('-939298744' COLLATE RTRIM IN ())); -- 0ms;
SELECT ((((t1.c1)<>(vt45.c0))) NOTNULL) FROM vt45, t1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((t1.c1) BETWEEN (x'') AND (t1.c1)))OR(((t1.c1)OR(t1.c99)))))OR(((t1.c99)OR(t1.c99)))))AND(((t1.c66) IS FALSE))))AND(t1.c66 COLLATE RTRIM)) FROM vt45, vt0 WHERE (((NULL)IS('')) COLLATE BINARY) GROUP BY NULL, json_array_length(((vt0.c0)>(t1.c1))), ((((((-4.45665862E8)AND(t1.c1)))AND(((vt45.c0)IS(vt45.c0)))))OR((vt45.c0 IN ()))), (0.5242804186714165 IN ()), ((0xffffffffd539d9e8)%(t1.c99 COLLATE NOCASE));SELECT ((((vt45.c0) NOT NULL)) NOT NULL), NULL, NTILE(TRIM((t1.c1 IN ()))) OVER () FROM vt0, t1 WHERE ((~ (0xffffffffb00fb1d0)));SELECT DISTINCT CASE WHEN COUNT(*) THEN (((vt45.c0, t1.c66, vt45.c0))>((vt45.c0, t1.c99, t1.c66))) END, GROUP_CONCAT(((t1.c66)-(t1.c99))) COLLATE BINARY, LAG((((((vt45.c0, vt0.c0, vt45.c0))>=((vt0.c0, vt0.c0, vt45.c0))))LIKE(vt0.c0)), (((((vt0.c0)-(vt45.c0)), (NOT (vt0.c0)), vt0.c0))>(((NOT (vt0.c0)), vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY))), CAST(((((vt45.c0)AND(vt45.c0)))OR(vt45.c0)) AS REAL)) OVER () FROM vt45, vt0 WHERE (((591333973 COLLATE NOCASE)%((x'' IN ()))));SELECT ALL (- (((vt45.c0) IS TRUE))) FROM vt0, t1, vt45 WHERE (0.7679391892251545); -- 0ms;
SELECT FIRST_VALUE(CAST(vt0.c0 AS INTEGER) COLLATE BINARY) OVER ( ORDER BY (((('0.552116261385199' COLLATE NOCASE)OR(((('X)BXg'))==((NULL))))))AND((+ (t1.c66))))  NULLS LAST, ((LIKELY(DISTINCT t1.c99)) NOT BETWEEN ((t1.c1 IN ())) AND (((t1.c1) NOTNULL))), json(0.564134903684273) ASC  NULLS LAST) FROM vt45, vt0 WHERE ((0.2903371635111379 COLLATE BINARY IN ()));SELECT DISTINCT CASE WHEN CAST(t1.c1 AS BLOB) THEN (t1.c99 IN ()) END, NULL, (((COUNT(t1.c66), ((t1.c99) BETWEEN (t1.c99) AND (vt0.c0)), t1.c66 COLLATE RTRIM))!=((CASE vt0.c0  WHEN 'X)BXg' THEN '-939298744' WHEN t1.c1 THEN t1.c66 WHEN vt0.c0 THEN t1.c99 END, ((t1.c99) ISNULL), json_array_length(t1.c99, t1.c66)))) FROM t1, vt45 WHERE (((((NULL)IS NOT(x''))) NOTNULL)) LIMIT -935789010 OFFSET 759217994;SELECT ((((((((NULL)OR(((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c66)))))OR(MAX(vt0.c0))))AND('\탃o)')))AND(0xffffffffc51b99f2)), t1.c99, ROW_NUMBER() OVER () FROM vt0, vt45;SELECT DISTINCT t1.c1, UPPER((('\n੕Ix')||(x'ae03'))), -1280089911 FROM vt0, vt45, t1 WHERE (((LOWER(0.23045983275039938))LIKE((- (0Xffffffffe56fadba))))); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT CASE x'e366'  WHEN 1940464762 THEN t1.c99 ELSE t1.c66 END), 'X4N', ((((t1.c66, t1.c66, t1.c99, t1.c99, t1.c99, t1.c1, vt0.c0))<((t1.c66, t1.c1, vt0.c0, vt0.c0, t1.c99, vt45.c0, vt0.c0))) IN ((vt0.c0 IN ()))) FROM vt45 WHERE (((('-2010106928')) NOT BETWEEN (((NULL IN (NULL, x'')))) AND ((CASE 384817975  WHEN 0.4388734398655699 THEN '-939298744' ELSE NULL END)))) LIMIT 1811609163;SELECT DISTINCT TYPEOF((vt0.c0 IN ())) FROM vt0 WHERE (0.5227643669993326); -- 0ms;
SELECT NTH_VALUE((((((t1.c1))>((t1.c66)))) IS TRUE), (((t1.c66)GLOB(t1.c99)) IN ())) OVER () FROM t1, vt45 WHERE (((0.5936594401394781 COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT DISTINCT LEAD(vt45.c0, ((((t1.c99)*(t1.c1))) NOT BETWEEN ((NOT (t1.c66))) AND (NULL)), CASE WHEN (NOT (t1.c1)) THEN t1.c99 ELSE ((vt45.c0) IS FALSE) END) OVER () FROM vt45, t1, vt0 LIMIT -2019660038; -- 1ms;
SELECT DISTINCT ((-935789010) ISNULL), (((vt0.c0 COLLATE RTRIM))==((((t1.c1)/(vt0.c0))))), (NOT (((((t1.c99)AND(vt45.c0)))OR(vt45.c0)))) FROM t1, vt0, vt45; -- 0ms;
SELECT CAST('' AS TEXT) COLLATE NOCASE, (((((~ (vt45.c0)))AND((vt0.c0 IN ()))))OR(CASE t1.c66  WHEN vt0.c0 THEN t1.c66 END)), (((+ (t1.c1))) BETWEEN (t1.c66) AND ((((t1.c1))<=((vt45.c0))))) FROM vt45, t1;SELECT (((((+ (t1.c99)))AND(t1.c1)))AND(((vt0.c0) NOT BETWEEN (vt45.c0) AND (t1.c1)))) FROM t1, vt45;SELECT ALL ((((((vt45.c0)>(t1.c1)))AND(((vt45.c0) IS TRUE))))AND(NULL)), ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (CASE t1.c99  WHEN vt0.c0 THEN t1.c66 ELSE t1.c1 END) AND ((((t1.c99)) BETWEEN ((t1.c66)) AND ((t1.c99))))), (((((t1.c99) BETWEEN (t1.c1) AND (vt45.c0))))<((((vt0.c0) ISNULL)))) FROM vt0, t1, vt45; -- 0ms;
SELECT DISTINCT SUM((((t1.c99))=((vt0.c0)))) OVER () FROM vt0, t1 WHERE ((NULL IN ())); -- 0ms;
SELECT ALL json_object('-445665862', (- (vt45.c0))) FROM t1, vt0, vt45 WHERE ((CASE NULL  WHEN 0.35123302800918865 THEN 'RV' ELSE x'a46f' END IN ())); -- 0ms;
SELECT ALL (+ (((0xffffffffcf2d32ff) BETWEEN (t1.c99) AND (t1.c99)))) FROM t1, vt0, vt45 ORDER BY ((x'')<=(((t1.c99)<(vt0.c0)))), CASE -8.19121409E8 COLLATE BINARY  WHEN (+ (vt0.c0)) THEN 1523225176 ELSE (NOT (t1.c99)) END DESC; -- 0ms;
SELECT ((((t1.c1) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('Y''9G') AND (((t1.c1)<>(t1.c99)))), ((t1.c99 COLLATE NOCASE) NOTNULL), (NOT (((t1.c99)AND(t1.c1)))), FIRST_VALUE(((t1.c1) BETWEEN (((x'') IS TRUE)) AND (-1.316229994E9))) OVER (), TYPEOF(t1.c66) COLLATE RTRIM, DENSE_RANK() OVER ( ORDER BY ((NULL)*((((vt45.c0, t1.c66, t1.c99))>=((t1.c66, vt45.c0, vt45.c0))))) DESC), ((COALESCE(t1.c66, t1.c99, vt0.c0, '뿘3oz\E')) BETWEEN (((((vt0.c0)OR(vt45.c0)))AND(t1.c66))) AND ((+ (t1.c99)))) FROM vt0, t1 GROUP BY (((((t1.c66))!=((t1.c1))))OR(vt0.c0)) HAVING '1473842045';SELECT DISTINCT TOTAL((((t1.c66))<>((vt45.c0)))) FROM vt0 WHERE (((CAST(NULL AS INTEGER))-(('' IN ()))));SELECT DISTINCT (((vt45.c0 IN ())) NOT NULL), CASE WHEN ((vt0.c0) NOTNULL) THEN t1.c66 COLLATE NOCASE END, t1.c66 FROM vt45, vt0 GROUP BY t1.c66, ((t1.c99 COLLATE BINARY) NOT BETWEEN (CASE vt0.c0  WHEN t1.c1 THEN t1.c66 WHEN t1.c99 THEN vt0.c0 WHEN t1.c99 THEN t1.c1 ELSE t1.c66 END) AND (((t1.c66)||(NULL)))), ((UPPER(DISTINCT vt0.c0)) IS FALSE) HAVING ((SUM(t1.c66))LIKE(t1.c99));SELECT DISTINCT UPPER(DISTINCT LENGTH(vt45.c0)) FROM t1, vt45 WHERE (CASE (('ca앷\nq})')>=(x''))  WHEN ((NULL)IS(0Xffffffffd539d9e8)) THEN (((x'', x'', NULL, 0.23045983275039938, '-2010106928'))=(('U!	|', -1.91749691E9, '-1341148720', x'', '493183257'))) ELSE (x'' IN ('-1269986177', x'')) END) LIMIT -935789010 OFFSET -862941643; -- 0ms;
SELECT ALL CAST(((((t1.c1)OR(t1.c1)))OR(vt45.c0)) AS INTEGER) FROM t1, vt45 GROUP BY CAST(vt45.c0 AS TEXT) COLLATE RTRIM HAVING (CAST('d<qsY>z' AS NUMERIC) IN ()); -- 0ms;
SELECT t1.c1 FROM t1, vt45, vt0 WHERE (('-935789010' IN ()) COLLATE BINARY); -- 0ms;
SELECT ALL (+ (CASE 'd<qsY>z'  WHEN t1.c66 THEN t1.c1 END)) FROM vt0, vt45 LIMIT -445665862;SELECT ((((t1.c1) NOT NULL))>>(((vt45.c0)GLOB(t1.c99)))) FROM t1, vt0 WHERE ((((('', x'', '-2110870261', -1208303516, '893954552'))>((0.8835007490340517, 0.8532392704079786, 0.06234321016916289, x'', 1204227391))) IN ()));SELECT (GROUP_CONCAT(t1.c1) IN (JULIANDAY(NULL, vt45.c0, t1.c1, vt0.c0, x'739e'), CAST(vt45.c0 AS NUMERIC))) FROM vt45, vt0, t1 LIMIT -2010106928; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (vt45.c0) AND (t1.c66)) COLLATE BINARY FROM vt45, vt0, t1 ORDER BY CAST(((t1.c1)||(vt45.c0)) AS REAL) DESC  NULLS LAST, ((((vt0.c0) IS FALSE))*(CAST(vt45.c0 AS NUMERIC))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt45, t1, vt0; -- 0ms;
SELECT DISTINCT ((((((((t1.c1 COLLATE BINARY)AND(((vt45.c0) NOT NULL))))AND(t1.c1)))AND(CAST(t1.c66 AS BLOB))))AND(t1.c99)) FROM vt45, vt0;SELECT (((t1.c99, t1.c1, x'')) BETWEEN ((MIN(t1.c99), vt45.c0 COLLATE BINARY, COALESCE(DISTINCT 0.05347886056367268, t1.c66))) AND ((((NULL) BETWEEN (t1.c99) AND (vt45.c0)), t1.c99 COLLATE NOCASE, (~ (vt0.c0))))) FROM t1, vt45 NOT INDEXED WHERE (CAST(0x9c7502 AS REAL) COLLATE BINARY);SELECT DISTINCT CASE t1.c66  WHEN x'52d2' THEN t1.c1 END COLLATE RTRIM FROM vt0, t1; -- 1ms;
SELECT DISTINCT TYPEOF(DISTINCT CAST(t1.c66 AS BLOB)) FROM vt45, t1 ORDER BY LIKELIHOOD(CASE t1.c99  WHEN t1.c1 THEN NULL ELSE '-192056371' END, 0.16018504253806198)  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN highlight(t1.c99, vt45.c0, vt0.c0, vt0.c0) THEN (+ (vt45.c0)) END FROM vt0 WHERE ((((('-2019660038') NOTNULL))OR(((('-702337475'))==((NULL))))));SELECT DISTINCT CASE (NOT (vt0.c0))  WHEN '695018364' THEN SUM(t1.c1) END, ((((((((((((((t1.c66)|(t1.c66)))AND(CASE t1.c99  WHEN t1.c66 THEN t1.c1 END)))AND(((vt45.c0)>=('mM]# fL占')))))OR(((t1.c66) BETWEEN (vt45.c0) AND (t1.c66)))))OR((- (vt45.c0)))))OR(((t1.c1)<<(vt45.c0)))))OR(((vt0.c0)LIKE(vt0.c0)))), ((((((vt0.c0)||('-988046862')))OR((t1.c66 IN ()))))AND((NOT (vt0.c0)))) FROM t1, vt45, vt0 WHERE (0.8109758247669356) LIMIT 1953843060; -- 0ms;
SELECT DISTINCT json_patch(((t1.c1)IS(t1.c66)), ((((((((t1.c66)OR(t1.c1)))OR(t1.c1)))AND(vt45.c0)))AND(t1.c99))), MIN(highlight(t1.c1, vt0.c0, t1.c66, t1.c99)), CASE (((t1.c1))<((vt45.c0)))  WHEN ((t1.c1)/(0.05347886056367268)) THEN ((((((((t1.c66)OR(-1558921256)))OR(vt45.c0)))OR(t1.c1)))OR(t1.c66)) ELSE ((((vt0.c0)OR('-939298744')))AND(vt45.c0)) END FROM t1 WHERE ((((((x'')AND(0.9470068710220916))))<((TYPEOF(x''))))) LIMIT 1940464762;SELECT DISTINCT SUM(ROUND(t1.c99, t1.c66)) OVER () FROM vt45, vt0 WHERE ((((0.5203279607573578)) BETWEEN ((NULL)) AND (((('0.5203279607573578') NOT BETWEEN (x'') AND (NULL))))));SELECT ((t1.c66)+(CASE t1.c66  WHEN t1.c66 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt45, vt0, t1 WHERE ((((0x73a9247a)) NOT BETWEEN ((DATE('g叿', '', x'40e7'))) AND (((0.11935529902722852 IN ()))))); -- 0ms;
SELECT ALL CUME_DIST() OVER (), ((((((((t1.c1)OR(t1.c99)))OR(t1.c99)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, ((t1.c1 COLLATE BINARY)*((~ (vt45.c0)))) FROM vt0, t1 WHERE ((((x'')) NOT BETWEEN (((((x'078f94cb'))<=((x''))))) AND (((('-2108472136')LIKE(NULL))))));SELECT DISTINCT GROUP_CONCAT(('-702337475' IN ()) COLLATE RTRIM) FROM vt0, t1, vt45 WHERE ('1113950989'); -- 0ms;
SELECT DISTINCT ((((vt45.c0)GLOB(t1.c1)))*(((((((((vt0.c0)OR(t1.c1)))AND(t1.c99)))OR(t1.c1)))AND(t1.c99)))), 'M\nOxY', CASE (vt45.c0 IN ())  WHEN ((((t1.c66)OR(vt45.c0)))AND(t1.c1)) THEN ((t1.c99) NOT NULL) END FROM vt45 WHERE ((((x'' IN ()))-('' COLLATE BINARY)));SELECT (((((t1.c66)OR(t1.c99)))OR(t1.c1)) IN ()) FROM vt45, vt0, t1; -- 0ms;
SELECT DISTINCT ((vt45.c0 IN ()) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT CAST((+ (t1.c66)) AS REAL), (CAST(t1.c1 AS BLOB) IN (CAST(t1.c66 AS NUMERIC))), ((((((vt0.c0)>=(t1.c1)))OR(0.6348630115514309)))OR((((t1.c1, t1.c66, t1.c99, NULL, t1.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, t1.c66, t1.c99, t1.c1)) AND ((NULL, vt0.c0, NULL, t1.c1, t1.c66))))) FROM vt45, vt0, t1 WHERE ((- (('-394358764' IN ('778614970'))))); -- 0ms;
SELECT DISTINCT AVG((- (t1.c1))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((((vt45.c0)AND(t1.c1 COLLATE NOCASE)))OR((((t1.c66, vt45.c0, t1.c99))<=((vt45.c0, t1.c1, t1.c66))))))AND(highlight(vt45.c0, vt0.c0, t1.c66, t1.c99))))AND(NULL)))AND(LIKELY(DISTINCT t1.c99))))OR(t1.c1 COLLATE NOCASE)) FROM vt45, vt0, t1; -- 0ms;
SELECT DISTINCT ((ROUND(vt0.c0, t1.c66))&(((t1.c66)-(vt45.c0)))) FROM t1, vt0;SELECT ALL CAST(((t1.c1)LIKE(t1.c1)) AS INTEGER), CAST(((vt0.c0)>>(t1.c99)) AS INTEGER), ((((vt45.c0)>=(t1.c66)))>(CASE WHEN t1.c1 THEN t1.c66 ELSE t1.c66 END)), (((- (t1.c99)))>(AVG(t1.c1))), (~ ((- (t1.c66)))) FROM t1, vt45, vt0 LIMIT -1558921256 OFFSET 788014280; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((t1.c99)) AND ((((((vt45.c0)AND(t1.c1)))OR(t1.c1))))) FROM vt45, t1, vt0 WHERE (0xfffffffffa932e39); -- 0ms;
SELECT DISTINCT ((vt45.c0 COLLATE NOCASE)>>(((t1.c99) NOT NULL))) FROM vt0 WHERE (0.4573236666145446);SELECT DISTINCT ((vt45.c0)GLOB((vt0.c0 IN (t1.c1, 0.5242804186714165)))) FROM vt45, t1, vt0 WHERE ((((((NULL) BETWEEN (NULL) AND ('q|+'))))<((((((((((NULL)OR('')))OR(-394358764)))AND(x'')))AND('')))))); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT GROUP_CONCAT(vt0.c0)) FROM t1, vt45 ORDER BY (((((((((((((((vt0.c0)AND(vt0.c0)))AND(t1.c99)))OR(vt45.c0)))OR(NULL)))OR(t1.c1)))OR(t1.c66))))<=((vt45.c0))) ASC  NULLS LAST;SELECT DISTINCT (((COUNT(*), vt0.c0 COLLATE RTRIM, (~ (0.8449852192384735))))<(((t1.c66 IN ()), CAST(t1.c66 AS TEXT), CASE WHEN '591333973' THEN NULL END))), CAST(((vt0.c0) NOT BETWEEN (t1.c99) AND (vt0.c0)) AS NUMERIC), TRIM(DISTINCT CAST(NULL AS BLOB), t1.c1 COLLATE NOCASE) FROM t1 WHERE (((CASE WHEN 0.3675352218095378 THEN 'z>)놏' END)||(((NULL) IS TRUE))));SELECT (((((t1.c99)) BETWEEN ((vt0.c0)) AND ((t1.c1))))=(vt45.c0 COLLATE NOCASE)) FROM vt45, t1, vt0 LIMIT -1764768129; -- 0ms;
SELECT DISTINCT ((((MAX(t1.c66))OR(t1.c66)))AND(SUM(t1.c1))), CAST(TOTAL(t1.c99) AS BLOB), ((((t1.c1) NOT BETWEEN (t1.c1) AND ('mM]# fL占'))) BETWEEN (((vt0.c0)>=(vt45.c0))) AND (CAST(t1.c66 AS REAL))), GROUP_CONCAT(((t1.c66) NOT NULL)) OVER (), COUNT(((t1.c99) NOT BETWEEN (t1.c66) AND (t1.c66))) FROM vt0, t1 WHERE ('UyP}\Q玼i');SELECT UNICODE(''), x'', CAST(((vt0.c0)OR(t1.c1)) AS NUMERIC), ((t1.c1) BETWEEN (t1.c1) AND (0.7532672781997475)) COLLATE NOCASE, CASE ((t1.c66)>>(182784143))  WHEN t1.c1 THEN CASE WHEN t1.c66 THEN t1.c66 END ELSE ((vt45.c0) NOTNULL) END FROM t1, vt0, vt45; -- 0ms;
SELECT ALL CAST((('鰧[P0>\n') BETWEEN (t1.c99) AND (t1.c66)) AS NUMERIC) FROM vt0, t1 WHERE ((+ ('')) COLLATE NOCASE); -- 0ms;
SELECT UNLIKELY(DISTINCT ((t1.c66)=(x''))) FROM vt0, vt45, t1; -- 1ms;
SELECT ALL (((t1.c66 IN ()))LIKE(MAX(NULL))), ((((t1.c66)OR(t1.c1)))+((('-935789010') IS TRUE))), ((MAX(vt0.c0)) IS TRUE), LIKELIHOOD(((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c1)), 0.5289379010769122), ((vt45.c0 COLLATE BINARY) NOT BETWEEN ((((vt45.c0)) NOT BETWEEN ((t1.c99)) AND ((t1.c1)))) AND (((((t1.c1)OR(NULL)))AND(t1.c1)))), CASE WHEN t1.c66 THEN ((vt0.c0)<=(vt0.c0)) END, (((+ (t1.c1)))&((NOT (t1.c66)))) FROM vt45, vt0, t1 WHERE ((((NULL, NULL, 1119060050)) NOT BETWEEN ((((((x'')OR(0.7948845404677831)))OR(NULL)), (('-1443970033') NOTNULL), ('-668782334' IN ()))) AND (((('H') BETWEEN (x'') AND ('-h')), ((0.2903371635111379)LIKE(x'')), 0.47160635064592626)))); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()), (((t1.c66)) NOT BETWEEN ((((t1.c99) NOTNULL))) AND ((((vt45.c0)IS('()'))))), t1.c66 FROM vt45;SELECT DISTINCT ((((((((CASE ''  WHEN 0.646042602637607 THEN vt45.c0 END)AND(t1.c66)))OR((vt45.c0 IN ()))))AND(json_array_length(vt45.c0))))OR(((((vt45.c0)OR(vt0.c0)))AND(vt0.c0)))), vt0.c0, CASE WHEN ((t1.c99)GLOB(t1.c66)) THEN COUNT(vt0.c0) ELSE (vt0.c0 IN ()) END FROM t1, vt45 INDEXED BY i7, vt0;SELECT DISTINCT TOTAL(((t1.c66) NOT BETWEEN (vt0.c0) AND (t1.c99))) FROM t1, vt45, vt0; -- 0ms;
SELECT DISTINCT LEAD((+ ((((t1.c99))!=((t1.c99))))), (((((t1.c99))==((t1.c1)))) IS TRUE), ((NULL)*(t1.c1 COLLATE NOCASE))) OVER () FROM t1, vt0 WHERE (((0.9105947578314543 COLLATE RTRIM) IS TRUE)) GROUP BY CAST(((((((((((((((((vt0.c0)OR(0xffffffff99ecd848)))OR(t1.c66)))OR(x'')))AND(vt0.c0)))AND(t1.c66)))AND(vt45.c0)))OR(t1.c1)))OR(t1.c1)) AS BLOB), (CASE WHEN vt45.c0 THEN t1.c99 END IN ((((t1.c99)) NOT BETWEEN ((t1.c99)) AND ((vt45.c0))))), ((TYPEOF(DISTINCT t1.c66)) BETWEEN (CASE WHEN t1.c99 THEN vt0.c0 ELSE t1.c66 END) AND (t1.c1 COLLATE BINARY)) HAVING 0.5362399732901099;SELECT CAST(((t1.c66)LIKE(vt0.c0)) AS NUMERIC) FROM t1, vt45, vt0 WHERE (((((NULL) NOT BETWEEN (0.4806239313825047) AND (x'')))>(((0.24415035994282985)IS(0.38918174784383053))))) GROUP BY LENGTH((NOT (vt0.c0))) HAVING vt0.c0; -- 0ms;
SELECT ((((((((((((((((vt0.c0)OR(t1.c99)))OR(t1.c1)))OR('384817975')))AND(-1973479511)))AND(TRIM(vt45.c0))))AND(t1.c66 COLLATE BINARY)))OR(((((t1.c99)AND(vt0.c0)))OR(vt45.c0)))))OR(((t1.c99) BETWEEN (vt45.c0) AND (t1.c66)))), CAST(vt45.c0 AS TEXT), 0.7138988973770354, ((((vt45.c0) NOT BETWEEN (vt0.c0) AND (t1.c66))) BETWEEN ((vt45.c0 IN ())) AND (GROUP_CONCAT('1297655837'))), TOTAL((((vt45.c0)) BETWEEN ((t1.c99)) AND ((vt0.c0)))) FROM vt45, vt0 WHERE (((CASE WHEN 893954552 THEN NULL END)>=(CASE NULL  WHEN 0xffffffff883033d0 THEN 0Xffffffff879e6efa ELSE 0.9272082568826048 END)));SELECT ALL COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (t1.c66)) FROM vt0, vt45 LIMIT -1290607798 OFFSET -600140495 EXCEPT SELECT DISTINCT CASE WHEN MAX(t1.c66) THEN NULL ELSE vt0.c0 COLLATE BINARY END FROM t1, vt45, vt0;SELECT (- (vt0.c0 COLLATE RTRIM)) FROM t1, vt0, vt45 WHERE (((((('e愙2b燠'))<=((0.31980156031243623))))IS((0X2d4054f0 IN ())))) ORDER BY ((CASE WHEN t1.c1 THEN vt45.c0 WHEN t1.c66 THEN vt0.c0 WHEN t1.c99 THEN '' END)>=((~ (t1.c66)))) LIMIT 1804887857; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) BETWEEN (LIKELY(t1.c99)) AND (LOWER(t1.c66))) FROM vt45;SELECT DISTINCT ((((t1.c1) NOT NULL))/(t1.c99 COLLATE RTRIM)), x'', (((t1.c66)) BETWEEN ((vt45.c0)) AND ((ABS(DISTINCT vt45.c0)))) FROM t1;SELECT DISTINCT ((t1.c66)IS(((((((((vt45.c0)OR(t1.c1)))AND(vt45.c0)))OR(t1.c99)))OR(-1554561780)))) FROM vt0, t1;SELECT ALL (vt45.c0 COLLATE RTRIM IN (CAST(t1.c1 AS INTEGER), TRIM(vt45.c0))) FROM t1, vt0, vt45 WHERE (((CAST(NULL AS INTEGER)) ISNULL)); -- 0ms;
SELECT ALL CASE WHEN CAST(t1.c1 AS BLOB) THEN ((vt45.c0)=(t1.c1)) WHEN (t1.c66 IN ()) THEN ((t1.c66)&(t1.c99)) WHEN (((vt0.c0, t1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt45.c0, t1.c1)) AND ((vt0.c0, '1406218706', NULL))) THEN (((('')OR(t1.c66)))OR(t1.c66)) WHEN (~ (t1.c66)) THEN 0.45147190812925186 WHEN ((t1.c1) NOT NULL) THEN ((vt0.c0)|(t1.c1)) END FROM t1 WHERE (CASE NULL  WHEN '駲H' COLLATE RTRIM THEN (x'' IN ()) ELSE 1854044430 END) ORDER BY CAST(((t1.c99) BETWEEN (t1.c66) AND (t1.c1)) AS BLOB) ASC;SELECT DISTINCT (((t1.c99, vt0.c0, vt45.c0)) BETWEEN ((((vt45.c0)+(vt0.c0)), NULLIF(DISTINCT vt45.c0, vt45.c0), (t1.c66 IN ()))) AND ((((t1.c99) NOT BETWEEN (t1.c1) AND (vt45.c0)), CAST(t1.c1 AS TEXT), (vt0.c0 IN ())))) FROM vt45;SELECT ALL 0.9272082568826048 FROM vt0, vt45, t1 WHERE ((((((((NULL))<=((NULL))))OR(CASE WHEN NULL THEN x'' END)))OR(CAST('&' AS REAL)))) LIMIT 1580908104 OFFSET 759190768; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt45.c0)) THEN ((t1.c99) NOTNULL) WHEN LAST_INSERT_ROWID() THEN (t1.c66 IN ()) WHEN (((vt0.c0)) BETWEEN ((t1.c66)) AND ((t1.c66))) THEN t1.c66 ELSE ((t1.c1)<(vt45.c0)) END FROM vt0, t1, vt45 GROUP BY (CAST(t1.c1 AS BLOB) IN ()); -- 0ms;
SELECT DISTINCT t1.c1, ((x'de7c')GLOB(((t1.c66)=(vt0.c0)))), (t1.c1 IN ()) COLLATE BINARY FROM vt45 NOT INDEXED, t1 WHERE ((('1401145315') NOT NULL));SELECT NULL, CASE WHEN 'y_W' THEN x'' WHEN NULLIF(vt45.c0, vt0.c0) THEN ((t1.c66)*(x'')) WHEN (((vt45.c0))>=((t1.c66))) THEN ((t1.c66)IS(0.8532392704079786)) END, ((CASE WHEN t1.c66 THEN vt45.c0 END) ISNULL) FROM vt0, t1 WHERE (((((((((((((CASE 0x78bf0688  WHEN -1503850721 THEN NULL ELSE NULL END)OR(0.45147190812925186 COLLATE RTRIM)))AND((x'' IN ()))))AND(STRFTIME(0.726267963560971, '-2010106928', x'55d2', NULL, x'dea7'))))OR(((x'') NOT NULL))))OR(CASE WHEN NULL THEN NULL ELSE x'' END)))OR(CASE NULL  WHEN '1098424139' THEN 0.7091506113121316 WHEN 'd<q]I>z' THEN '-908951372' WHEN '' THEN 0X2fcc3c2d ELSE x'' END))) GROUP BY 0.8457864302736816, ((((((((((vt45.c0) BETWEEN (vt0.c0) AND (t1.c99)))AND(((t1.c1) ISNULL))))OR(CASE WHEN vt0.c0 THEN t1.c99 ELSE x'' END)))AND(CASE WHEN t1.c99 THEN t1.c99 END)))OR((vt0.c0 IN ()))), CASE ((vt45.c0)*(1900808349))  WHEN CAST(vt45.c0 AS REAL) THEN (t1.c99 IN ()) END HAVING NULL LIMIT 1056229381;SELECT DISTINCT MAX(LIKELY(t1.c66)) FROM vt0, t1, vt45 GROUP BY LOWER(DISTINCT ((('D<QSY>Z')) BETWEEN ((t1.c99)) AND ((vt0.c0)))) HAVING ((vt45.c0 COLLATE RTRIM)IS(((vt45.c0) IS FALSE))); -- 0ms;
SELECT ALL SUM(MAX(((t1.c66)*(t1.c66)))), ((t1.c1)GLOB(t1.c99)) COLLATE NOCASE, ((((t1.c66)&(t1.c1))) IS TRUE), ((COALESCE(DISTINCT t1.c66, t1.c99)) ISNULL), CASE ((((t1.c99)AND(t1.c99)))AND(t1.c1))  WHEN ((t1.c99) NOTNULL) THEN (((vt0.c0)) BETWEEN ((t1.c66)) AND ((vt0.c0))) END FROM vt0, vt45 NOT INDEXED, t1 WHERE (((('182784143')) BETWEEN ((((NULL)GLOB('Y''9G')))) AND ((CASE WHEN 0.9828576973575459 THEN 0.6605520898999656 WHEN -1.92318804E9 THEN 0.8335692405096462 WHEN 'Nc}￿' THEN NULL END))));SELECT CAST(((((t1.c1)OR(vt45.c0)))AND(t1.c66)) AS BLOB), (HEX(DISTINCT t1.c66) IN ()), (((NOT (t1.c99)))<>(0.38918174784383053 COLLATE BINARY)) FROM vt45, t1, vt0; -- 0ms;
SELECT DISTINCT SUM((t1.c1 IN ())) OVER () FROM vt0, vt45; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS TEXT) FROM vt0, t1 WHERE (((((0x216d5360)||(0.18657203192459415)))<=((((x''))<=(('뿘3OZ\E')))))); -- 0ms;
SELECT COUNT(CASE vt45.c0  WHEN t1.c1 THEN t1.c99 END) OVER (), (+ ((+ (x'')))), CASE ((((vt45.c0)OR(vt0.c0)))AND('d<qsY>z'))  WHEN vt0.c0 THEN ((((((((vt45.c0)OR(t1.c1)))OR(t1.c66)))AND(vt0.c0)))OR('愙bk')) END FROM t1;SELECT (~ (CASE vt0.c0  WHEN t1.c99 THEN t1.c1 END)) FROM t1;SELECT CASE TYPEOF(vt45.c0)  WHEN CASE x''  WHEN vt0.c0 THEN 0.7806952546026754 END THEN ((((vt45.c0)AND(t1.c99)))AND(t1.c1)) END FROM vt0, vt45 LIMIT 2025784968;SELECT TOTAL((((vt0.c0, vt0.c0, t1.c1)) NOT BETWEEN ((vt0.c0, t1.c66, t1.c99)) AND ((t1.c1, t1.c66, t1.c1)))) OVER (), ((((t1.c1) ISNULL)) NOT BETWEEN ('') AND (CAST(t1.c66 AS INTEGER))), ((((vt45.c0) NOT BETWEEN (t1.c99) AND (t1.c99)))AND(GROUP_CONCAT(t1.c1))) FROM vt0, t1 NOT INDEXED WHERE (((((1.11906005E9)==(NULL))) IS FALSE));SELECT ALL ((((((vt0.c0)>=(t1.c1)))AND(vt45.c0 COLLATE RTRIM)))OR(((t1.c99) BETWEEN (vt0.c0) AND (t1.c99)))) FROM t1;SELECT CASE ((NULL)>=(t1.c66))  WHEN CAST(t1.c99 AS REAL) THEN vt45.c0 COLLATE RTRIM END FROM t1, vt45, vt0 WHERE (((((('-1341148720')+('mM]# fL占'))))>((((('')) BETWEEN ((NULL)) AND ((0Xfffffffffc74dea1))))))); -- 1ms;
SELECT NULL FROM t1, vt0, vt45 WHERE ((~ ((- (''))))); -- 0ms;
SELECT DISTINCT (((t1.c66)) BETWEEN (((((t1.c1, t1.c66, vt45.c0)) NOT BETWEEN ((x'', vt0.c0, t1.c1)) AND ((t1.c99, t1.c1, vt0.c0))))) AND ((vt0.c0))) FROM vt45 WHERE ((NOT ((NULL IN ()))));SELECT DISTINCT (- (CAST(vt45.c0 AS TEXT))) FROM vt45, vt0 GROUP BY ((((((t1.c66, vt0.c0, '-727387379'))>=((t1.c99, vt0.c0, 'TRUE'))), json_object(t1.c66, t1.c66), (((vt45.c0))!=((vt0.c0)))))>=((CAST(t1.c99 AS INTEGER), ((((t1.c1)AND(t1.c99)))OR(vt45.c0)), (('1241782798') NOT BETWEEN (t1.c66) AND (t1.c1))))) HAVING CAST(highlight(vt45.c0, vt45.c0, t1.c99, t1.c1) AS NUMERIC);SELECT DISTINCT (((t1.c66 IN ())) NOT BETWEEN (COUNT(*)) AND (((vt0.c0) NOTNULL))) FROM vt45, vt0 WHERE (((CAST(NULL AS BLOB)) NOT BETWEEN (((NULL) NOTNULL)) AND (((NULL)<>(0x57d90b7d))))); -- 0ms;
SELECT DISTINCT (((SQLITE_SOURCE_ID()))<=((((vt45.c0) BETWEEN (vt0.c0) AND (t1.c99))))), (- (CAST(vt45.c0 AS NUMERIC))), CASE ((vt0.c0) ISNULL)  WHEN CAST(t1.c66 AS BLOB) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c0) NOT BETWEEN (t1.c66) AND (vt45.c0)) END FROM vt0 WHERE ((((~ ('0.3675352218095378')))>=(CASE WHEN NULL THEN -155860796 WHEN NULL THEN 0.5203375061810865 WHEN NULL THEN 'P>DZz!w' WHEN NULL THEN NULL WHEN NULL THEN -516792430 END)));SELECT 8.01913901E8 FROM vt45, vt0, t1 WHERE (((('1707030229', '937914848', NULL)) NOT BETWEEN (('-988046862' COLLATE NOCASE, ((0.024044646427374583) BETWEEN (0.9140729956480562) AND (1204227391)), '1490758338')) AND ((((x'')-(x'')), NULL, LOWER(0.5003356630613632))))); -- 0ms;
SELECT ((((vt45.c0) NOT BETWEEN (t1.c66) AND (t1.c66)))%((- (t1.c66)))) FROM vt0, vt45, t1 LIMIT 518928011; -- 0ms;
SELECT DISTINCT COUNT(((((t1.c66)OR(vt45.c0)))AND(t1.c1))) OVER () FROM vt45;SELECT ALL (NOT (CASE '-1692515060'  WHEN t1.c1 THEN t1.c99 ELSE t1.c1 END)) FROM vt0, vt45, t1 WHERE (((SQLITE_COMPILEOPTION_USED(1.113950989E9))IS((('m0')GLOB('T'))))); -- 0ms;
SELECT DISTINCT (~ (CASE t1.c66  WHEN x'' THEN t1.c99 WHEN '-908951372' THEN t1.c66 WHEN t1.c66 THEN t1.c66 END)) FROM t1; -- 0ms;
SELECT DISTINCT (~ ((~ (vt45.c0)))) FROM t1, vt0, vt45 WHERE ((((CAST(NULL AS NUMERIC)))>((((((0X4d58a81d)AND('')))AND(0.6386148094660198)))))) ORDER BY ((((((t1.c66)OR(t1.c99)))AND(t1.c99)))!=((- (t1.c1)))) LIMIT -1208303516 OFFSET -451172747; -- 0ms;
SELECT DISTINCT (((vt0.c0))=((t1.c1))) COLLATE NOCASE FROM vt45, t1;SELECT DISTINCT (((t1.c66 IN ()))=(MIN(t1.c66))), ((((UNLIKELY(vt45.c0))OR(((vt45.c0) NOT BETWEEN (t1.c1) AND (vt0.c0)))))AND(CAST(vt45.c0 AS NUMERIC))), (((vt45.c0, t1.c99, vt0.c0, t1.c66, t1.c66, t1.c66, t1.c99)) BETWEEN ((CAST(t1.c66 AS INTEGER), vt45.c0, ((t1.c99)>=(t1.c1)), ((vt45.c0)=(t1.c66)), ((t1.c99)&(x'')), ((((vt0.c0)OR(t1.c66)))OR(vt0.c0)), CAST('' AS TEXT))) AND ((MAX(vt0.c0), t1.c1, (((('')OR(t1.c1)))OR(t1.c66)), COUNT(*), (('1387815817') NOT BETWEEN (vt0.c0) AND (t1.c66)), ((t1.c1) NOT BETWEEN (0.7857845738737643) AND (t1.c1)), t1.c99))) FROM t1 WHERE (((CAST(NULL AS TEXT))OR(((((x'c469')AND('1493805638')))OR(0xffffffffbe2e0c31)))));SELECT NULL, ('7䚝}s!&O*d' IN (CAST(t1.c1 AS REAL))), ((vt45.c0) NOTNULL) COLLATE BINARY FROM t1 WHERE ((~ (CAST(x'' AS BLOB)))) GROUP BY INSTR(t1.c99, vt45.c0) COLLATE NOCASE, (+ ((t1.c1 IN (vt0.c0)))), '1490758338' HAVING CAST(((((vt45.c0)OR(t1.c1)))OR(vt0.c0)) AS BLOB);SELECT (('492409253') IS FALSE) FROM vt45, t1 WHERE (x'') LIMIT 2046181892; -- 0ms;
SELECT ALL t1.c99 FROM vt0;SELECT COUNT(*) OVER (), ((CAST(t1.c99 AS REAL)) ISNULL), ((((((t1.c1)OR(t1.c1)))OR(vt0.c0)))!=(((t1.c1) NOT BETWEEN (vt0.c0) AND (t1.c1)))) FROM vt0 GROUP BY CASE WHEN (t1.c1 IN ()) THEN CAST(vt45.c0 AS INTEGER) WHEN (t1.c99 IN ()) THEN ((t1.c99) NOTNULL) WHEN ((t1.c66)IS(vt45.c0)) THEN ((((((((t1.c99)AND(t1.c1)))OR(x'')))OR(vt0.c0)))AND(t1.c66)) ELSE ((((t1.c66)OR(vt0.c0)))AND(t1.c1)) END HAVING ((((CAST(t1.c1 AS REAL))OR(0.8029457903985348)))AND((- (vt45.c0))));SELECT (NOT (((((t1.c99)AND(NULL)))OR(vt0.c0)))) FROM t1, vt45, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOTNULL) IN (((vt45.c0)|(t1.c1)), ((vt0.c0)!=(vt45.c0)))), ((0.6780424828916699)%(((0xffffffffc29f3ef5)<=(t1.c99)))), (+ (load_extension(vt0.c0, t1.c1))), '1013144496', (NOT (((t1.c1) ISNULL))) FROM vt0, vt45 WHERE (MIN((((NULL))<((NULL))), ((('1707030229'))!=((NULL)))));SELECT DISTINCT ((NULL)<((('') IS FALSE))), ((t1.c99)|(t1.c1)) COLLATE RTRIM, ((((t1.c1) BETWEEN (t1.c66) AND (t1.c99)))>('f')), CAST(((t1.c99)|(vt0.c0)) AS BLOB), CASE LIKELIHOOD(DISTINCT t1.c99, 0.008971192793102212)  WHEN CAST(t1.c1 AS NUMERIC) THEN x'' WHEN (((vt0.c0))>((t1.c66))) THEN CASE t1.c99  WHEN vt45.c0 THEN t1.c66 WHEN t1.c99 THEN NULL WHEN t1.c1 THEN t1.c66 ELSE t1.c66 END WHEN CASE vt0.c0  WHEN t1.c1 THEN 'mM]# fL占' ELSE t1.c99 END THEN t1.c99 END FROM t1;SELECT ALL NULL FROM vt0, vt45, t1 GROUP BY (((NOT (t1.c66)))OR((((t1.c66))!=((vt0.c0))))) HAVING (((t1.c99 IN (x'')))+(AVG(vt45.c0))) ORDER BY (((((((('' COLLATE BINARY)OR(((t1.c66) NOT NULL))))AND(((vt45.c0)OR(NULL)))))OR(t1.c99 COLLATE RTRIM)))AND((t1.c1 IN ()))) ASC;SELECT DISTINCT t1.c1, ((((0.34838499737929884) BETWEEN (t1.c99) AND (t1.c99))) BETWEEN (CASE t1.c1  WHEN t1.c1 THEN '-2047061051' WHEN vt0.c0 THEN t1.c66 WHEN x'2d98' THEN t1.c1 ELSE vt0.c0 END) AND (((t1.c1)>(t1.c99)))), (((((((((t1.c1)AND(t1.c66)))AND(vt0.c0)))AND(t1.c1)))OR(t1.c99)) IN ()) FROM vt0, t1 WHERE (CASE ((('7䚝}s!&o*d', 0.37216754603692237, x'354f', -1.269986177E9, '1493805638'))<>((2.025784968E9, '''SW뼯&\rHK', '1023720950', 0.2639600485146586, 1181825687)))  WHEN (0xfffffffff2c804f0 IN ()) THEN NULL WHEN LTRIM(0.11935529902722852) THEN CAST('6챽	oZ啭,' AS NUMERIC) WHEN ('0.8835007490340517' IN (x'0ab9')) THEN '-751509557' COLLATE RTRIM END) LIMIT -1307145375; -- 1ms;
SELECT ALL NULLIF(DISTINCT ((vt0.c0) BETWEEN (t1.c1) AND (t1.c1)), (('-1113524183') BETWEEN (t1.c99) AND (vt45.c0))) FROM t1, vt0, vt45 WHERE ((CASE WHEN NULL THEN 0.40794288925135747 ELSE NULL END IN ())); -- 0ms;
SELECT ((vt45.c0 COLLATE NOCASE)!=(t1.c66 COLLATE RTRIM)) FROM t1, vt45; -- 0ms;
SELECT DISTINCT (((((t1.c1) NOT BETWEEN (t1.c99) AND (vt45.c0))))<((CASE WHEN '1707030229' THEN t1.c1 END))), NTH_VALUE(CASE t1.c99  WHEN ((t1.c66) NOT NULL) THEN (t1.c66 IN (0.7553836651334581)) END, (((((((384817975)OR(t1.c66)))AND(t1.c99)), ABS(t1.c1), (((t1.c66, t1.c99, t1.c99)) BETWEEN ((t1.c66, t1.c66, t1.c66)) AND ((t1.c99, 0Xffffffff955a9ca0, t1.c99)))))<((((t1.c66)|(t1.c99)), (((t1.c1)) BETWEEN ((t1.c99)) AND ((t1.c1))), ((t1.c66)IS NOT(t1.c66)))))) OVER (), ((((((((0X4c51604f)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt45.c0)))))OR(((((t1.c1)OR(t1.c1)))OR(vt45.c0)))))AND((vt0.c0 IN ()))))OR(GROUP_CONCAT(vt45.c0))) FROM t1 GROUP BY (((t1.c66 IN ()))IS NOT((t1.c66 IN (t1.c99))));SELECT ((t1.c66) BETWEEN ((vt45.c0 IN ())) AND (SUM(t1.c99))) FROM vt0 WHERE ((((((- (x'')))AND(((NULL)>>('472509690')))))AND((('')<<('AP'))))) ORDER BY ((((((vt45.c0)OR(t1.c99)))AND(t1.c99))) ISNULL) ASC  NULLS FIRST;SELECT ALL QUOTE(t1.c1 COLLATE BINARY) FROM vt45 WHERE (CASE (((1811609163))<=((0.6803322917120125)))  WHEN '-1895694538' COLLATE RTRIM THEN (((('T')OR(0.48699509811087716)))AND('*! Y<')) ELSE ((0.6758799554094757) IS FALSE) END);SELECT DISTINCT MIN(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt45.c0 END), TOTAL((0.6357153759869215 IN (vt45.c0))), ((CAST('Bꁌ' AS BLOB)) IS FALSE) FROM t1, vt45, vt0 LIMIT -2010106928 OFFSET -1246182578; -- 0ms;
SELECT TOTAL(((t1.c99) ISNULL)) OVER ( PARTITION BY NULL, t1.c66), ((CASE t1.c99  WHEN vt0.c0 THEN t1.c66 ELSE t1.c66 END) BETWEEN (((t1.c99) NOTNULL)) AND (NULL)), 0.9913316927982326 FROM vt45;SELECT ALL CASE WHEN CASE WHEN t1.c99 THEN vt45.c0 ELSE vt0.c0 END THEN t1.c99 END FROM vt0, vt45, t1 WHERE ((CASE '-2022329969'  WHEN '1900808349' THEN NULL WHEN 0Xffffffff9c894e4f THEN NULL WHEN 0.8797906775432223 THEN NULL ELSE '' END IN ())); -- 0ms;
SELECT ALL rtreenode(((vt0.c0) BETWEEN (t1.c99) AND (vt45.c0)), CASE t1.c99  WHEN vt45.c0 THEN t1.c99 ELSE x'0f1e' END), t1.c1, ABS((((t1.c99))<=((vt45.c0)))) FROM t1, vt45, vt0 INDEXED BY i65 WHERE (((('0.5362399732901099' IN ())) BETWEEN ((x'552b' IN ())) AND ((((('2108662279')AND(x'')))OR(0Xffffffffbeca1a4e)))));SELECT DISTINCT ('^ya2' IN ()), NULL, CAST(TOTAL('-妘f]+看4e騾') AS BLOB) FROM t1 WHERE (((((- (''))))<=(((~ (0.6803322917120125)))))) ORDER BY ((LIKELY(DISTINCT t1.c1)) BETWEEN (t1.c66) AND (((((t1.c99)AND(vt45.c0)))OR(t1.c1)))) LIMIT 184730596;SELECT DISTINCT (((((vt0.c0))=((t1.c66)))) BETWEEN (((t1.c66) BETWEEN (t1.c66) AND (t1.c99))) AND (((vt0.c0)OR(t1.c66)))) FROM vt45, t1 WHERE (((((0.6835962945533975 IN (NULL))))>((((x'c78f') NOTNULL))))) GROUP BY 0.3150066750963808;SELECT DISTINCT NULL FROM vt0, t1 WHERE ((('0.35123302800918865')<(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(((t1.c66) BETWEEN (t1.c1) AND (vt0.c0))) OVER ( ORDER BY ((((t1.c99)>>(vt0.c0))) IS FALSE)), SUM(((vt45.c0)AND(vt0.c0))), ((((t1.c66)>>(0x19119b44))) NOT NULL) FROM vt45 LIMIT -391382758 OFFSET -1973479511;SELECT DISTINCT (((((vt0.c0)OR(t1.c99)))AND(t1.c1)) IN (AVG(t1.c1))) FROM vt45;SELECT DISTINCT CAST(LOWER(DISTINCT vt45.c0) AS REAL) FROM vt45; -- 0ms;
SELECT TOTAL((((vt0.c0)) BETWEEN ((t1.c1)) AND ((vt0.c0)))), ((HEX(t1.c66))<(((vt45.c0) IS FALSE))), (((((t1.c99) NOT BETWEEN (t1.c66) AND (vt45.c0)), json_patch(vt0.c0, t1.c1), (x'515f6ae6' IN ())))<((((t1.c1) NOTNULL), IFNULL(t1.c99, vt0.c0), ((vt0.c0) ISNULL)))), ((0.36485932794869314) IS FALSE), CASE x''  WHEN (t1.c1 IN ()) THEN MAX(t1.c1) ELSE ((t1.c99)LIKE(vt0.c0)) END FROM vt0, t1, vt45; -- 0ms;
SELECT DISTINCT (((((vt45.c0, t1.c1, vt45.c0)) NOT BETWEEN ((x'', vt45.c0, t1.c1)) AND ((t1.c99, vt45.c0, t1.c1))))IS(((vt45.c0)>>(t1.c99)))) FROM vt45;SELECT DISTINCT (((t1.c66)) BETWEEN ((NULL)) AND ((((vt0.c0) IS TRUE)))), ((((vt45.c0) ISNULL)) NOT BETWEEN (((((((((t1.c99)AND(t1.c1)))AND(vt45.c0)))AND(vt0.c0)))AND(t1.c66))) AND (((0.726267963560971)>=(vt0.c0)))), CASE WHEN ((((0.7633591177692436)OR('1056229381')))AND(t1.c66)) THEN ((t1.c66)>>(vt45.c0)) ELSE CASE WHEN t1.c1 THEN vt0.c0 ELSE t1.c99 END END FROM vt0 WHERE ((((CAST(0.3047511906389996 AS BLOB)))==(('-1006350610')))) ORDER BY vt45.c0  NULLS LAST;SELECT ALL ((((((vt0.c0))>((t1.c1)))))>=((((vt45.c0)GLOB(vt45.c0))))), ((((t1.c1, vt0.c0, t1.c66, t1.c1, t1.c1))>((vt0.c0, '', vt0.c0, 0.25242889545883285, vt45.c0))) IN ()), ((vt0.c0)/(json_extract(vt0.c0, vt0.c0))) FROM vt0, vt45 WHERE (TYPEOF(DATETIME('()', 0.19539908303933495, -3.94358764E8)));SELECT ALL CAST(t1.c66 AS INTEGER) FROM vt45;SELECT DISTINCT (((NOT (t1.c1)))*(((t1.c66)<<(vt0.c0)))) FROM vt0, vt45, t1 GROUP BY ((((t1.c66) IS TRUE)) BETWEEN (CASE WHEN t1.c99 THEN vt0.c0 ELSE t1.c1 END) AND (CAST(t1.c66 AS INTEGER))); -- 0ms;
SELECT DISTINCT TOTAL((- (t1.c99))) OVER ( ORDER BY CASE WHEN vt45.c0 THEN vt0.c0 END COLLATE RTRIM ASC  NULLS FIRST) FROM t1, vt0 WHERE ((('-2108472136')<>(-1973479511)) COLLATE NOCASE);SELECT ((((vt45.c0) IS FALSE)) NOT NULL) FROM vt45, vt0 WHERE ((- (0.010490215983044893)) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (~ (((t1.c66) NOT NULL))) FROM t1 WHERE ((CAST(NULL AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT LTRIM(vt45.c0, vt0.c0) COLLATE BINARY FROM t1;SELECT ALL vt0.c0 FROM vt45, vt0, t1 WHERE (CASE CASE WHEN x'' THEN 1.473842045E9 WHEN '-1121596104' THEN 0.9453504599610041 WHEN x'' THEN NULL END  WHEN (((x''))>((NULL))) THEN '' ELSE (('(	')|('RM?')) END); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t1;SELECT ALL ((((MIN(vt0.c0))AND(((t1.c99)<('X|1]lT')))))OR(MIN(vt45.c0))) FROM vt0 WHERE (((0.9453504599610041) IS FALSE) COLLATE RTRIM);SELECT ALL (((t1.c1, t1.c1, t1.c99)) BETWEEN (('+GQ1', (((vt0.c0, t1.c66, t1.c66))<((vt0.c0, NULL, t1.c1))), (vt45.c0 IN ()))) AND ((((((t1.c66)OR(t1.c99)))AND(t1.c66)), ((t1.c99)>=(vt0.c0)), ((t1.c99) NOT BETWEEN (vt0.c0) AND (t1.c66))))), (((vt0.c0)) NOT BETWEEN ((LOWER(t1.c66))) AND ((''))), (((((((t1.c66)AND(t1.c66)))OR(t1.c66))))<((0.7532672781997475))) FROM vt45, vt0, t1 WHERE (((('1204227391')&(759190768)) IN ())); -- 0ms;
SELECT DISTINCT (NOT (CAST(vt45.c0 AS NUMERIC))) FROM vt0 NOT INDEXED;SELECT ALL ((CASE t1.c66  WHEN t1.c1 THEN '駲vht.2' ELSE vt0.c0 END)OR(CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM t1 WHERE (CASE x'a64a' COLLATE NOCASE  WHEN (((NULL))<((-9.3578901E8))) THEN x'' COLLATE NOCASE WHEN LIKELIHOOD(NULL, 0.08391191818328692) THEN (~ (NULL)) WHEN ((((0Xffffffff8f9e0db8)OR(0.8274643394995062)))AND(x'40d6')) THEN ((x'')LIKE(4.93183257E8)) END) GROUP BY ((((t1.c1) NOT BETWEEN (t1.c1) AND (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c66) AND (vt0.c0))) AND (((t1.c1)AND(vt0.c0)))) HAVING CAST((+ (t1.c66)) AS INTEGER) LIMIT -1759255822;SELECT ((((((vt45.c0) IS FALSE))AND(((t1.c99)<=(vt45.c0)))))AND(CAST(t1.c1 AS BLOB))), (((t1.c1)) BETWEEN (((vt0.c0 IN (vt45.c0)))) AND ((TRIM(DISTINCT vt0.c0)))), NULL, CUME_DIST() OVER ( GROUPS CASE ((((vt45.c0)OR(t1.c1)))OR(vt45.c0))  WHEN t1.c66 THEN CASE t1.c66  WHEN t1.c1 THEN t1.c66 ELSE vt45.c0 END ELSE CASE WHEN vt0.c0 THEN t1.c66 END END PRECEDING EXCLUDE GROUP), MAX(t1.c1 COLLATE NOCASE) COLLATE BINARY FROM vt45 WHERE (((((((x'')OR(x'')))AND(x'96fd')))-(((x'e20d') BETWEEN (NULL) AND (-6.68782334E8))))) GROUP BY CASE ''  WHEN NULL THEN '66945532' ELSE vt45.c0 END HAVING (((t1.c1 IN (t1.c66)))*(x'fe8a'));SELECT DISTINCT (~ (t1.c66 COLLATE BINARY)) FROM t1 GROUP BY ((((~ (vt0.c0))))>=((NULLIF(vt45.c0, t1.c1))));SELECT DISTINCT CAST(((vt0.c0) ISNULL) AS NUMERIC) FROM vt45, t1, vt0; -- 1ms;
SELECT DISTINCT SUM(t1.c99 COLLATE BINARY COLLATE NOCASE) OVER () FROM vt0, vt45, t1 WHERE (((((('ke' IN ('I9-F塜')))OR(CAST(x'' AS TEXT))))AND((((NULL, '0.9828576973575459', x''))<=(('-1066820885', NULL, 0.903582499364733)))))); -- 0ms;
SELECT DISTINCT (+ (MAX(vt45.c0))), (((+ ('-751509557'))) NOTNULL), (((NOT (x'')))AND(x'3b40')) FROM vt45 WHERE (753737830); -- 0ms;
SELECT DISTINCT ((((t1.c1)%(vt0.c0))) NOTNULL) FROM vt0 WHERE (0x3d04bdf6);SELECT (((~ (t1.c99))) IS FALSE) FROM t1, vt0 WHERE ((((0.9464451656222771)GLOB(NULL)) IN ())); -- 0ms;
SELECT ALL load_extension(((vt0.c0) IS TRUE), (((vt0.c0, vt0.c0, vt0.c0, t1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt45.c0, vt0.c0, t1.c66, vt0.c0)) AND ((t1.c1, vt0.c0, vt0.c0, vt45.c0, t1.c1)))) FROM vt45, t1, vt0 WHERE (((((NULL) BETWEEN ('1056229381') AND (0.48699509811087716))) BETWEEN (CAST('-394358764' AS INTEGER)) AND (0.6311947963154833 COLLATE RTRIM))); -- 0ms;
SELECT AVG(x'' COLLATE RTRIM) OVER ( RANGE (((t1.c1 IN ()))OR((((((((('')OR(t1.c99)))OR(vt0.c0)))OR(629413565)))OR(NULL)))) PRECEDING EXCLUDE GROUP) FROM vt0, t1 WHERE (((((CASE WHEN '-248814882' THEN x'' WHEN 0.4025298038322478 THEN 0.7756468706874252 WHEN x'' THEN '1098424139' END)AND((0x41789f4b IN ('0.3211942741342241')))))AND(((((x'9ddd')AND(0.3047511906389996)))OR(''))))) GROUP BY t1.c66;SELECT DISTINCT TOTAL(vt0.c0) OVER ( ORDER BY ((((-1.269986177E9)OR((((vt45.c0))>=((vt45.c0))))))OR(JULIANDAY(t1.c99, vt0.c0, vt45.c0))) DESC  NULLS FIRST, ((((((((((vt45.c0) BETWEEN (t1.c66) AND (NULL)))AND((t1.c99 IN ()))))AND(((vt45.c0)IS(vt0.c0)))))AND((- (t1.c99)))))OR(x'dc45')) DESC, ((CAST(t1.c66 AS NUMERIC)) NOT NULL)  NULLS FIRST) FROM vt0, vt45 WHERE (((load_extension(x'')) IS FALSE));SELECT DISTINCT AVG(((t1.c1)&(vt45.c0))), (+ (((vt0.c0)OR(t1.c66)))), vt45.c0 FROM vt0, vt45 WHERE ((((NULL IN ()))IS((((0x40a44b3c, -9.39298744E8, '鑁t{i-?'))>=((0xfffffffff35a24f8, 9.37914848E8, 'uyp}\q玼i'))))));SELECT ALL MAX(((t1.c1)>(vt0.c0))) FROM vt45 ORDER BY NULL DESC;SELECT DISTINCT ((x'')>=('\5){\n')) FROM vt0, t1, vt45; -- 0ms;
SELECT ((((t1.c1) BETWEEN ('1854044430') AND (vt0.c0))) NOT BETWEEN (((((vt45.c0)AND(t1.c66)))AND(t1.c99))) AND (vt0.c0 COLLATE NOCASE)) FROM t1;SELECT DISTINCT ((x'')%(CAST(vt45.c0 AS NUMERIC))) FROM t1, vt0 LEFT OUTER JOIN vt45 ON ((vt45.c0 COLLATE NOCASE) IS TRUE) LIMIT 384817975; -- 0ms;
SELECT ALL (((NOT (t1.c66)))AND(CASE t1.c1  WHEN t1.c66 THEN 0X3ecb16a2 ELSE t1.c1 END)) FROM t1 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT MIN(((vt0.c0) IS FALSE)), (((NULLIF(DISTINCT t1.c66, t1.c99)))!=((0.13602580231558592))), ((vt0.c0 COLLATE NOCASE)*(((t1.c99) BETWEEN (t1.c99) AND (vt0.c0)))) FROM vt45, vt0 GROUP BY (((((t1.c99)) BETWEEN ((t1.c66)) AND ((vt45.c0))))LIKE(((vt45.c0) NOTNULL))) ORDER BY HEX(((((t1.c99)OR(vt0.c0)))AND(t1.c99))) DESC;SELECT LAG(((CAST(vt45.c0 AS NUMERIC)) NOT BETWEEN (((vt45.c0) IS FALSE)) AND ((('759190768')IS NOT(vt0.c0)))), CASE (NULL IN (vt0.c0))  WHEN (((vt45.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt45.c0))) THEN vt45.c0 END, (((vt45.c0)>(vt0.c0)) IN ())) OVER ( ORDER BY CAST(CASE WHEN vt0.c0 THEN 0.7857845738737643 END AS INTEGER)  NULLS FIRST, (((((((((NOT (t1.c99)))AND(vt0.c0)))AND((('1297655837') NOT BETWEEN (vt0.c0) AND (t1.c66)))))AND(((vt45.c0)>>(vt0.c0)))))AND(vt0.c0)), ((UNICODE(t1.c66))<(vt45.c0 COLLATE BINARY))  NULLS LAST), ((TIME(t1.c1, t1.c99, vt45.c0)) NOTNULL), (((((((((t1.c99)AND(t1.c99)))AND(-1.503850721E9)))OR(vt45.c0)))AND(t1.c1)) IN ()) FROM vt45, vt0 WHERE ((((('-614201571') NOT NULL))*(CAST(0.5835291809230185 AS BLOB))));SELECT ((((AVG(vt0.c0))AND(-2.022329969E9)))OR(((vt45.c0)<>(vt0.c0)))) FROM vt45, vt0; -- 0ms;
SELECT DISTINCT ((t1.c99) NOT BETWEEN (t1.c66) AND (t1.c99)) COLLATE BINARY FROM t1, vt45 WHERE (((CASE NULL  WHEN '1387815817' THEN NULL END)LIKE(((5.18928011E8)<=(x''))))); -- 0ms;
SELECT NTILE(((CAST(vt45.c0 AS BLOB))GLOB((NOT (vt0.c0))))) OVER (), LTRIM(((vt0.c0)||('1387815817'))), ROUND(((vt0.c0)LIKE(vt45.c0)), ((t1.c1)|(vt45.c0))) FROM vt45, vt0 INDEXED BY i65;SELECT DISTINCT COUNT(*) OVER (), (((t1.c66)) NOT BETWEEN ((NULL)) AND ((((vt45.c0) BETWEEN (NULL) AND (t1.c1))))), ((((vt0.c0)IS NOT(vt45.c0))) BETWEEN (((t1.c99) IS TRUE)) AND (vt0.c0)) FROM t1, vt45 ORDER BY CAST(CASE vt0.c0  WHEN t1.c1 THEN t1.c1 END AS INTEGER) DESC LIMIT 1640651697 OFFSET -272947841;SELECT ALL COUNT((NOT (t1.c1))) OVER ( ORDER BY ((x'' COLLATE RTRIM) IS TRUE) ASC  NULLS LAST, (((CAST(t1.c1 AS NUMERIC)))>=((((t1.c99) IS TRUE)))) DESC  NULLS FIRST), NULLIF(t1.c1, ((x'')==(t1.c66))), UPPER(DISTINCT ((((t1.c1)OR(t1.c66)))OR(t1.c99))) FROM t1, vt45; -- 0ms;
SELECT (((((((((((NULL))<((t1.c99))))OR(t1.c1 COLLATE BINARY)))OR(CASE t1.c1  WHEN t1.c99 THEN t1.c1 WHEN t1.c66 THEN vt0.c0 WHEN NULL THEN t1.c66 ELSE '-516792430' END)))AND(CAST(t1.c99 AS NUMERIC))))OR(((t1.c66)LIKE(t1.c99)))) FROM vt45, vt0 WHERE ((~ ((+ (NULL)))));SELECT ALL CASE CASE WHEN vt45.c0 THEN vt45.c0 END  WHEN CAST(t1.c99 AS TEXT) THEN TRIM(DISTINCT t1.c99) END FROM vt0, vt45;SELECT ALL (((t1.c99, vt0.c0, vt0.c0)) NOT BETWEEN ((GLOB(vt45.c0, NULL), ((t1.c99)<(vt0.c0)), (~ (t1.c99)))) AND ((((t1.c1)||(vt0.c0)), (NOT (t1.c99)), json_valid(t1.c99)))) FROM vt45, vt0, t1 ORDER BY ((((t1.c1) BETWEEN (vt0.c0) AND (t1.c1)))AND((vt0.c0 IN ()))) ASC;SELECT ALL MIN(vt0.c0) FROM vt45, t1;SELECT ALL COUNT(*) OVER () FROM vt0, t1 WHERE ((~ ('MM]# FL占' COLLATE RTRIM))) INTERSECT SELECT ((LIKELIHOOD(vt0.c0, 0.4676857031149817)) NOTNULL) FROM vt0, t1, vt45 WHERE (((((('1401145315', 0Xffffffff99ecd848, 0xffffffffe51ba675)) NOT BETWEEN (('-1062181998', -93070233, NULL)) AND ((NULL, x'18fc', 0.8449852192384735))))GLOB(CASE 0.8532392704079786  WHEN '-773361052' THEN 'gW' WHEN x'' THEN NULL WHEN NULL THEN NULL ELSE '0.5835291809230185' END))) LIMIT -1326227505; -- 0ms;
SELECT (~ (((t1.c99)!=(0)))) FROM vt45 WHERE (((x'' COLLATE RTRIM) IS TRUE));SELECT DISTINCT (+ (0X55f0005d)) FROM vt45, t1 WHERE (((CASE WHEN '1934409519' THEN '1250128116' WHEN 'y9sUd1?郱' THEN 'p' WHEN 0.320827690817724 THEN x'' END) BETWEEN (LIKELIHOOD(-4.45665862E8, 0.22798613777075039)) AND ((('x{}+zw') NOTNULL)))); -- 0ms;
SELECT ALL LEAD((((('1728009581') NOTNULL))||(vt45.c0 COLLATE NOCASE)), DATETIME((t1.c1 IN ()), ((t1.c99)%(t1.c66)), t1.c1), (x'' IN ())) OVER (), (((~ (t1.c1))) NOT NULL), COUNT((~ (vt0.c0))) FROM t1, vt45;SELECT DISTINCT ('Xj' IN ()), ((((vt0.c0)<(vt0.c0)))<((((t1.c1))<((t1.c66))))), CAST(vt45.c0 COLLATE BINARY AS INTEGER) FROM vt45, t1, vt0 WHERE ((((((('')+(0.6835962945533975)))AND('1013144496' COLLATE RTRIM)))OR(((NULL)/('-221772560'))))); -- 0ms;
SELECT DISTINCT t1.c1, NULL, CASE (t1.c1 IN (vt0.c0, t1.c1))  WHEN t1.c1 THEN CAST(vt0.c0 AS REAL) END FROM vt45 WHERE (LIKE(((NULL)IS(0Xd6db30b)), ((x'') NOT BETWEEN (0.7633591177692436) AND ('377829209')), '	'));SELECT t1.c99 COLLATE RTRIM, ((t1.c99) NOTNULL), ((vt0.c0)LIKE(vt45.c0)) COLLATE NOCASE FROM vt0, t1 WHERE (CAST((('\G')==('759217994')) AS REAL)) LIMIT -942197351;SELECT COALESCE(DISTINCT ((t1.c99)<(t1.c1)), (- (t1.c66)), ((vt0.c0)LIKE(t1.c99)), t1.c1) FROM vt45 WHERE (CASE (((NULL, NULL, NULL)) NOT BETWEEN ((0.31526145783101345, NULL, NULL)) AND ((x'', NULL, NULL)))  WHEN ((0.320827690817724)AND(0.8457864302736816)) THEN CAST(NULL AS BLOB) WHEN ((((x'ad75')OR(NULL)))AND('-325272516')) THEN 0.3211942741342241 WHEN x'' COLLATE RTRIM THEN NULL ELSE ((NULL) IS FALSE) END);SELECT DISTINCT (((t1.c99, t1.c66, t1.c1)) BETWEEN ((((t1.c66) BETWEEN (t1.c66) AND (t1.c99)), ((t1.c99) NOT BETWEEN (t1.c66) AND (vt45.c0)), CASE t1.c66  WHEN t1.c99 THEN vt45.c0 ELSE vt45.c0 END)) AND ((TRIM(DISTINCT t1.c99, t1.c66), (vt0.c0 IN ()), ((t1.c99)GLOB(t1.c99))))) FROM t1, vt0 WHERE (((((x'')IS(NULL)))&(COALESCE(DISTINCT 0x6d4f371b, NULL))));SELECT ALL STRFTIME(((t1.c66)!=('g>')), ((((((((t1.c1)OR(vt45.c0)))AND(vt45.c0)))OR(vt0.c0)))AND(t1.c99)), (- (vt0.c0))), ((((((t1.c1) IS FALSE))AND(TRIM(NULL, vt45.c0))))AND(COUNT(vt0.c0))), TRIM(((t1.c99)||(t1.c66))), ((CASE WHEN t1.c99 THEN t1.c99 END) NOT BETWEEN (((((t1.c66)OR(t1.c99)))OR(0.5306748181919039))) AND (((t1.c99)<<(vt0.c0)))), CASE ((((((((vt45.c0)AND(t1.c99)))AND(t1.c1)))OR(t1.c66)))OR(t1.c66))  WHEN CHANGES() THEN x'cac6cabd' ELSE (((t1.c1))>((x'e99b'))) END FROM t1, vt0, vt45 WHERE (((((('ke', x'8345', '-1761423421'))>=(('', x'', 0.38918174784383053)))) IS FALSE)); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((vt45.c0, vt45.c0, vt45.c0))!=((vt45.c0, vt45.c0, vt45.c0))))OR(LTRIM(vt45.c0)))) OVER () FROM vt45 WHERE ((((ABS(x''), CAST('0.7857845738737643' AS REAL), (('469822627') BETWEEN (0.47546695282054285) AND (0.44309606081266373))))<=((x'5b19' COLLATE RTRIM, ((NULL)-(1.11906005E9)), ((((NULL)OR(NULL)))AND(-1372672061)))))); -- 0ms;
SELECT CASE vt0.c0 COLLATE RTRIM  WHEN ((vt45.c0)<=(t1.c99)) THEN ((vt45.c0)/(t1.c99)) END, vt45.c0, (((CAST(vt0.c0 AS REAL)))<((((((t1.c66)OR(t1.c1)))AND(t1.c1))))) FROM vt45 LIMIT -1535689942 OFFSET 543735577;SELECT (- (t1.c66 COLLATE RTRIM)) FROM t1, vt45, vt0 ORDER BY ((((((t1.c66)>>(t1.c66)))OR(((((((((t1.c1)OR(t1.c66)))OR(t1.c99)))AND(vt45.c0)))AND(t1.c1)))))AND(vt45.c0 COLLATE BINARY)), ((t1.c1) NOT NULL) DESC  NULLS LAST, vt45.c0 ASC; -- 0ms;
SELECT DISTINCT (((vt45.c0)) NOT BETWEEN (((- (t1.c99)))) AND (((NOT (vt0.c0))))) FROM t1, vt45, vt0 WHERE ((- (0Xffffffffc0b8c4d6 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (~ (CAST(vt0.c0 AS NUMERIC))) FROM vt45, t1;SELECT DISTINCT CAST((vt0.c0 IN ()) AS BLOB), CAST(((t1.c66) NOT BETWEEN (vt45.c0) AND (t1.c1)) AS NUMERIC), GROUP_CONCAT(x'e042') FROM t1, vt0, vt45 WHERE (CASE WHEN ((x'c2dc') BETWEEN (0.9248272673921866) AND ('\r>悏u'' 1')) THEN (~ (NULL)) END) GROUP BY ((vt45.c0)>((NULL IN ()))) HAVING (((t1.c1)) BETWEEN ((((t1.c99) NOT BETWEEN (t1.c1) AND (t1.c99)))) AND (('0.552116261385199'))); -- 0ms;
SELECT ALL ((((NOT (vt45.c0))))>=(((t1.c1 IN (vt45.c0))))) FROM vt0, vt45;SELECT DISTINCT json_array(((vt45.c0) BETWEEN (t1.c99) AND (t1.c99)), (t1.c99 IN ())), ((vt45.c0) BETWEEN (x'') AND (CASE 'A83pUEj('  WHEN t1.c1 THEN t1.c1 ELSE t1.c99 END)), vt45.c0, ((SUM(vt0.c0)) IS TRUE), CASE WHEN ((((vt0.c0)OR(t1.c1)))AND(t1.c1)) THEN ((t1.c1)<(vt45.c0)) WHEN CAST('182784143' AS TEXT) THEN CASE WHEN t1.c99 THEN vt0.c0 WHEN vt45.c0 THEN t1.c99 WHEN vt45.c0 THEN vt45.c0 ELSE t1.c1 END WHEN ((vt0.c0)>=(NULL)) THEN ((((t1.c1)OR(t1.c99)))OR(vt45.c0)) ELSE ((vt0.c0) BETWEEN (t1.c1) AND (vt45.c0)) END FROM vt45 ORDER BY vt45.c0 DESC  NULLS FIRST, ((((t1.c99)%(vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(t1.c1))) AND (CAST(t1.c99 AS TEXT))) ASC, vt0.c0 ASC  NULLS LAST;SELECT DISTINCT (((((vt45.c0)) BETWEEN ((vt45.c0)) AND ((vt45.c0)))) BETWEEN ((t1.c99 IN ())) AND (vt0.c0)) FROM t1;SELECT DISTINCT MAX(((t1.c1)IS NOT(t1.c99))), CAST(((t1.c1)OR(t1.c1)) AS NUMERIC), (TOTAL(vt45.c0) IN ()) FROM vt45, vt0;SELECT ((DATETIME(vt45.c0, t1.c99, vt0.c0, t1.c99, t1.c99))>(t1.c66 COLLATE RTRIM)) FROM t1 WHERE (((CAST(NULL AS REAL)) IS FALSE));SELECT DISTINCT (((t1.c99 IN ()))==(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t1.c1 WHEN vt0.c0 THEN NULL END)), DENSE_RANK() OVER (), t1.c66 FROM t1;SELECT ALL (SQLITE_VERSION() IN (vt0.c0, (((t1.c1, t1.c1, t1.c1))<=((t1.c1, vt0.c0, t1.c99))))) FROM vt0, t1 WHERE ((+ (((NULL)GLOB(0.03728123531704752))))) LIMIT -490824444 OFFSET -484517335; -- 0ms;
SELECT DISTINCT json((t1.c66 IN (vt45.c0))) FROM vt0;SELECT DISTINCT vt45.c0 FROM vt0, vt45 NOT INDEXED WHERE (CASE (0.6586017682617179 IN ())  WHEN ((('H', NULL, x'')) NOT BETWEEN ((x'', NULL, '')) AND (('+惜FRpv', 0.7175374095277705, 0.7963995671080117))) THEN (((NULL, NULL, x''))=((0X3c635bb0, 0.7322821364268338, 'pW'))) END) GROUP BY ((((((t1.c99)AND(t1.c99)))OR(t1.c66)))<>(json(t1.c66))), HEX(((vt0.c0)GLOB(t1.c66))), (((t1.c1 COLLATE NOCASE))==(((+ (vt45.c0))))), (((+ (t1.c99))) NOTNULL), 0Xfffffffff9a5c01b HAVING (0.5936972584839814 IN ());SELECT DISTINCT (((((((t1.c1))>((t1.c66))))AND(((t1.c99) IS TRUE))))AND(((t1.c99) IS TRUE))) FROM t1, vt0 WHERE ((((((x'6631') ISNULL)))<((((((((((0.4806239313825047)OR('-53200582')))OR(0.0933849838178551)))AND(x'')))OR(NULL)))))) GROUP BY ((((((((((vt45.c0)>=(vt0.c0)))AND(((t1.c99)<<(vt45.c0)))))AND(((t1.c66)IS NOT(vt45.c0)))))AND(CASE WHEN vt0.c0 THEN NULL ELSE t1.c99 END)))AND((NOT (t1.c99))));SELECT (((- (NULL))) NOT BETWEEN ((t1.c66 IN ())) AND (AVG(t1.c99))) FROM vt45, t1 WHERE ((NULL IN ())) LIMIT 1728009581; -- 0ms;
SELECT ALL ((((t1.c1)IS(t1.c1)))IS NOT((t1.c99 IN ()))), (((t1.c99)GLOB(vt45.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt45.c0)))), ((((((((AVG(vt0.c0))OR((NULL IN (x'49a6', t1.c99)))))OR(CAST(t1.c66 AS NUMERIC))))OR(vt0.c0)))OR(((t1.c99)>>(t1.c99)))) FROM vt0, vt45 WHERE (CASE WHEN ((('()'))>=((0.9828576973575459))) THEN 0.08138376785785872 COLLATE BINARY END) LIMIT -1558921256;SELECT CAST(json_remove(t1.c1, 1.7976931348623157E308, vt0.c0, NULL, t1.c66, vt0.c0) AS NUMERIC) FROM vt0, vt45, t1 WHERE (CASE 0x25ca0810  WHEN NULL THEN NULL WHEN 'G{2' THEN NULL WHEN x'53bc' THEN '{}' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((vt45.c0 COLLATE BINARY))>((((((t1.c99)AND(t1.c66)))AND(vt45.c0))))) FROM t1, vt45, vt0 WHERE ((8.01913901E8 IN ())); -- 0ms;
SELECT DISTINCT MIN(((((NULL)OR(vt0.c0)))AND(t1.c66))) FROM vt0, vt45, t1; -- 0ms;
SELECT DISTINCT ((((vt45.c0)OR('0.03728123531704752')))OR(((-6.00140495E8)%(t1.c1)))) FROM vt45, vt0, t1; -- 0ms;
SELECT DISTINCT vt45.c0 FROM vt0 WHERE ((+ (((0xffffffffd531e3d1)IS(0X7f945071)))));SELECT DISTINCT TOTAL(((((vt0.c0)AND(t1.c99)))OR(t1.c1))) FILTER(WHERE (((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c66, t1.c99, t1.c66)) AND ((vt0.c0, t1.c99, t1.c66))))IS(((((t1.c66)AND(t1.c1)))OR(t1.c66))))) OVER () FROM vt45, t1;SELECT ALL CASE WHEN (NOT ('1516786687')) THEN CASE 0.008529035720274303  WHEN t1.c1 THEN vt45.c0 ELSE vt0.c0 END ELSE ((t1.c66)>(t1.c1)) END, SQLITE_SOURCE_ID(), COUNT(*) FROM vt0 LIMIT -646055126;SELECT ALL CASE CAST(vt0.c0 AS BLOB)  WHEN ((t1.c1) ISNULL) THEN t1.c99 COLLATE NOCASE ELSE '\Y' END, (((vt0.c0))<=((t1.c66))) COLLATE RTRIM, TOTAL((vt45.c0 IN ())) OVER ( PARTITION BY CASE WHEN t1.c1 THEN (t1.c1 IN (vt0.c0, t1.c66)) END, ((t1.c1 COLLATE RTRIM) ISNULL)) FROM vt0, t1, vt45 WHERE (NULL); -- 0ms;
SELECT MAX(SUM(t1.c99 COLLATE RTRIM)), ((vt45.c0) NOT BETWEEN ('豄_') AND (vt0.c0)) COLLATE RTRIM, t1.c99 FROM t1 WHERE (CAST(((NULL) BETWEEN ('sĤ') AND (x'')) AS NUMERIC));SELECT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT LIKE(TOTAL(vt0.c0), (t1.c1 IN ())) FROM t1, vt0, vt45; -- 0ms;
SELECT ALL ((t1.c1) IS FALSE), -3.94358764E8, NULL, ((AVG(vt0.c0)) IS TRUE), ((((t1.c99)IS NOT(vt45.c0)))<((~ (vt0.c0)))) FROM vt45;SELECT ALL ((CASE t1.c66  WHEN vt45.c0 THEN t1.c1 END)<((((t1.c1)) BETWEEN ((t1.c99)) AND ((t1.c66))))) FROM t1, vt45 WHERE ('-1019877285'); -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)AND(t1.c66)))) FROM t1, vt45 WHERE (CASE WHEN (((((((('AMC')OR(x'')))OR('-1964677391')))AND(0.41596779791350014)))AND(x'')) THEN ((0X4a041a0e)%(x'')) ELSE (NULL IN ()) END);SELECT ((((t1.c66)OR(t1.c99)))%(((vt45.c0) NOT BETWEEN (t1.c1) AND (vt45.c0)))), CASE WHEN ((((((((vt0.c0)AND(t1.c66)))OR(vt0.c0)))AND(t1.c99)))OR(t1.c99)) THEN (t1.c1 IN ()) END, CAST(vt45.c0 AS TEXT) COLLATE RTRIM FROM vt45, vt0;SELECT DISTINCT AVG(((t1.c66) BETWEEN (t1.c99) AND (t1.c66))), t1.c66, COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt0, t1; -- 1ms;
SELECT (COUNT(t1.c1) IN ()) FROM t1, vt45 WHERE (CASE x'b1ae' COLLATE NOCASE  WHEN (((('7䚝}s!&o*d')OR('0.0')))OR(0.5961733569484238)) THEN (NULL IN (',')) END) GROUP BY (- (NULL)) COLLATE RTRIM; -- 0ms;
SELECT ALL CASE ((t1.c99) NOT BETWEEN (t1.c66) AND (t1.c66))  WHEN COUNT(*) THEN ((('454799309', vt45.c0, vt0.c0, 0X163cb4f1, t1.c99)) NOT BETWEEN ((t1.c1, t1.c1, t1.c66, NULL, vt45.c0)) AND ((vt45.c0, t1.c66, vt45.c0, 0.9453668629643986, t1.c66))) ELSE TRIM(DISTINCT 0X7231757b, t1.c1) END FROM t1, vt0 WHERE ((NOT ((x'' IN ()))));SELECT DISTINCT (((((0.3438280847804207))>((vt0.c0))))IS NOT(CHAR(vt0.c0))) FROM vt0 WHERE ((NOT ((((0.6836373572715841))<>((x'')))))); -- 0ms;
SELECT DISTINCT MIN(vt45.c0) FROM vt45, vt0; -- 0ms;
SELECT ALL ('' COLLATE RTRIM IN (((((((((vt45.c0)AND(t1.c99)))OR(t1.c1)))OR(vt45.c0)))OR(t1.c99)), (((vt45.c0)) BETWEEN ((t1.c99)) AND ((t1.c66))))) FROM vt45, vt0, t1; -- 0ms;
SELECT ALL COUNT(((t1.c99) IS FALSE)), t1.c66 COLLATE BINARY, (NOT (CASE WHEN vt0.c0 THEN t1.c99 WHEN vt0.c0 THEN vt45.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((vt45.c0)IS NOT(t1.c99)) IN (CASE WHEN t1.c66 THEN t1.c1 ELSE vt0.c0 END, (vt0.c0 IN ()))), COUNT((+ (t1.c66))), (vt45.c0 IN ()), (CAST(vt45.c0 AS TEXT) IN ()) FROM vt0;SELECT ((CAST(t1.c66 AS TEXT))!=(((t1.c66) NOT NULL))), CAST(((((((((t1.c99)AND(vt0.c0)))AND(vt45.c0)))OR(vt45.c0)))AND(t1.c99)) AS BLOB), COUNT(MAX(0.07979827638021653)) FROM vt0, vt45, t1 GROUP BY (~ (t1.c66 COLLATE BINARY)), ((((t1.c99)*('-1413862659'))) BETWEEN (((t1.c66)AND(t1.c66))) AND ((((vt45.c0))==((vt45.c0))))), ((x'31bec980' COLLATE BINARY)/((+ (vt0.c0)))) HAVING ((((CAST(t1.c1 AS BLOB))OR(TRIM(t1.c99))))OR(((t1.c99)AND(t1.c1))));SELECT ALL load_extension(((t1.c66) IS FALSE), ((t1.c99) BETWEEN (t1.c66) AND (vt0.c0))) FROM vt45, vt0;SELECT DISTINCT (- (vt45.c0)) COLLATE NOCASE FROM t1 WHERE (CAST(CASE NULL  WHEN 0.9855483999826744 THEN NULL END AS REAL));SELECT ((vt0.c0 COLLATE NOCASE) NOT NULL) FROM vt0, t1, vt45; -- 0ms;
SELECT LIKE(t1.c99, vt45.c0) COLLATE BINARY FROM vt0 WHERE (CASE (x'b390' IN ())  WHEN (((('\ ')AND(x'')))OR(NULL)) THEN GLOB('-819121409', x'6dff8ec7') END);SELECT DISTINCT TOTAL(((vt0.c0) ISNULL)) OVER () FROM t1 WHERE (((((((((((('')) BETWEEN ((NULL)) AND ((x'b577864e'))))OR((((0.02264118482572952, '808964469', '591333973', '-818388630', NULL, NULL, NULL))=((NULL, NULL, NULL, '1878714336', 0.32026069396578305, '', NULL))))))OR(((NULL) BETWEEN (NULL) AND (0.4788537291518531)))))AND('-2019660038' COLLATE NOCASE)))OR(LTRIM(0.59539587053651))));SELECT DISTINCT MIN('1961231151') FROM t1 WHERE (((('307890543' IN ())) NOT BETWEEN (LOWER(0.6247359510108889)) AND (STRFTIME('1401145315', 0.38918174784383053, 0.7091506113121316, 'ꏼR2C', x'')))) ORDER BY t1.c99 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN ' \b' THEN t1.c66 ELSE '' END COLLATE RTRIM, COUNT(*) OVER (), t1.c66 COLLATE RTRIM FROM vt0, t1, vt45 WHERE (((((HEX(DISTINCT '-192056371'))AND((((-1110978876)) BETWEEN ((0.4486839626301127)) AND (('182784143'))))))OR((x'ca20848d' IN ())))); -- 0ms;
SELECT ALL (((COUNT(t1.c99)))<(((vt45.c0 IN ())))) FROM vt0, vt45, t1 LIMIT 1098424139 OFFSET -404531193; -- 0ms;
SELECT DISTINCT t1.c99 FROM t1 NOT INDEXED, vt0 WHERE (((((0.6605520898999656)%(x''))) NOT BETWEEN (((0.6348630115514309)IS NOT(0.7482678425554724))) AND (((0X66ff556d)+(0xfffffffffc74dea1))))); -- 0ms;
SELECT ((CAST(t1.c66 AS REAL)) ISNULL) FROM vt45, vt0, t1 WHERE (0.3527168192943052); -- 0ms;
SELECT LAST_VALUE(((vt0.c0) NOT NULL) COLLATE BINARY COLLATE BINARY) OVER (), CAST(((t1.c99)GLOB(vt0.c0)) AS NUMERIC), CAST(((vt0.c0) IS FALSE) AS BLOB) FROM vt0;SELECT DISTINCT (~ (((t1.c1) NOT BETWEEN (vt45.c0) AND (vt45.c0)))) FROM t1, vt45 WHERE (''); -- 0ms;
SELECT DISTINCT (ABS(vt45.c0) IN ((t1.c66 IN ()), t1.c1 COLLATE RTRIM)), ((t1.c99 COLLATE NOCASE) IS FALSE), MIN(CAST(vt45.c0 AS REAL)) FROM vt45, vt0, t1; -- 0ms;
SELECT (vt45.c0 COLLATE BINARY IN ()), ((-7.27387379E8)IS NOT(x'')), ROW_NUMBER() OVER ( ORDER BY t1.c99, vt0.c0  NULLS LAST, ((((vt45.c0) NOT BETWEEN (5.60812896E8) AND ('')))>>(((((vt45.c0)OR(vt45.c0)))AND(t1.c99))))) FROM t1, vt0, vt45; -- 0ms;
SELECT ALL CASE WHEN MAX(t1.c66) THEN ((((vt0.c0)AND(t1.c1)))OR(t1.c99)) END, MAX(((t1.c1)&(-5.1679243E8))), SUM(CASE vt45.c0  WHEN t1.c66 THEN t1.c1 WHEN 'jF' THEN t1.c66 WHEN vt45.c0 THEN 0.9560105331774151 ELSE t1.c99 END) FROM vt0, vt45 LEFT OUTER JOIN t1 ON vt0.c0; -- 0ms;
SELECT ((((t1.c99)OR(t1.c66)))AND(t1.c1)) COLLATE BINARY, (+ (t1.c66)), (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END))!=((CAST(t1.c66 AS INTEGER)))), ((vt0.c0 COLLATE NOCASE)>(((vt45.c0)<=(x'')))), CAST(UPPER(DISTINCT vt0.c0) AS TEXT) FROM vt0, vt45 WHERE ((~ ((('') IS TRUE))));SELECT DISTINCT CAST(CAST(t1.c1 AS NUMERIC) AS TEXT) FROM vt45, vt0;SELECT DISTINCT ((((t1.c1)<<(t1.c66))) BETWEEN (CASE WHEN t1.c66 THEN vt0.c0 ELSE t1.c99 END) AND (x'')) FROM vt0, vt45 WHERE (((0.8449852192384735 COLLATE NOCASE) NOT BETWEEN (((x'9c18') NOT BETWEEN (x'') AND (0x4cefa8b5))) AND (((((-2147110618)AND(0.200460983173953)))OR(0.8108213606587933)))));SELECT DISTINCT ((((x'') NOT BETWEEN (vt45.c0) AND (vt45.c0)))IS NOT(((vt0.c0)<<(t1.c1)))) FROM t1;SELECT DISTINCT ((((t1.c1) BETWEEN (t1.c66) AND (t1.c99))) NOT NULL) FROM vt45, vt0, t1 ORDER BY 303745288;SELECT DISTINCT ((vt0.c0)>=((t1.c1 IN (0.0065831261720448175)))) FROM t1, vt45 WHERE (CASE -1.55860796E8  WHEN ((x'4c8f') NOT BETWEEN (NULL) AND (0.9250887514567009)) THEN ((((((((NULL)AND(1801785968)))OR('KazOSZ')))AND(0xffffffffbe91c5eb)))AND(x'')) WHEN ((('', 0Xffffffffb5269c86, x'', x'', x''))>=((x'', 0.8109758247669356, 0.6919366750806464, NULL, '*宰'))) THEN '1957481905' COLLATE BINARY WHEN (+ (NULL)) THEN ((((NULL)AND(NULL)))AND('㿏	+\#')) ELSE TYPEOF(x'') END);SELECT ((((t1.c66)=(vt45.c0))) NOT BETWEEN (STRFTIME(vt45.c0, vt45.c0, t1.c1)) AND (((vt45.c0)-(vt45.c0)))), LAG('', (((((t1.c66 IN ()))AND(CASE WHEN t1.c66 THEN t1.c99 ELSE vt45.c0 END)))OR((((t1.c66)) NOT BETWEEN ((vt45.c0)) AND ((t1.c1))))), RTRIM((((t1.c1)) NOT BETWEEN ((vt45.c0)) AND ((vt45.c0))))) OVER ( ORDER BY ((((((t1.c1)OR(t1.c66)))OR(vt0.c0)))<=(((t1.c99)!=(t1.c66))))), (NOT (((t1.c99) NOT BETWEEN (t1.c66) AND (vt0.c0)))) FROM t1, vt0, vt45; -- 0ms;
SELECT DISTINCT LENGTH((- ('s쭺<,+'))), 0.42846204162575907, (((t1.c66) BETWEEN (t1.c99) AND (vt0.c0)) IN (((vt0.c0)LIKE(t1.c66)), ((((((((vt45.c0)AND('0.11935529902722852')))OR(t1.c99)))AND(t1.c66)))AND(vt0.c0)))) FROM vt45 WHERE (CASE WHEN ((-2105081649) NOT BETWEEN (x'd8e0') AND (x'')) THEN ((0.332583594523827)<(x'97eb')) END) GROUP BY ((((t1.c1) NOTNULL)) BETWEEN (((((t1.c99)OR(t1.c66)))OR(x''))) AND (((vt45.c0) BETWEEN (vt45.c0) AND (vt45.c0)))), ((((vt0.c0)<(t1.c66))) IS FALSE), CAST(t1.c99 AS TEXT) COLLATE NOCASE, (((t1.c99 IN ())) NOT BETWEEN (CAST(t1.c1 AS NUMERIC)) AND (((vt0.c0) NOTNULL))), (+ (((((t1.c99)OR(t1.c1)))OR(vt0.c0)))) HAVING (((((t1.c1) NOT NULL)))==(((NOT (t1.c66)))));SELECT DISTINCT SQLITE_VERSION() FROM t1, vt45; -- 0ms;
SELECT ALL TOTAL((((vt0.c0))>=((t1.c1)))) FROM vt0, vt45, t1 LIMIT 821005949 OFFSET -523900909; -- 0ms;
SELECT ((t1.c66 COLLATE BINARY) ISNULL) FROM t1, vt0, vt45 WHERE (CASE (NOT (NULL))  WHEN CAST('' AS INTEGER) THEN (((0.564134903684273)) BETWEEN ((0.36469685167772947)) AND ((''))) ELSE '-1127569791' COLLATE NOCASE END) GROUP BY (((- (vt45.c0))) IS TRUE), ((UNLIKELY(t1.c66))>('q|+')), -1834973829 HAVING t1.c1;SELECT DISTINCT CASE WHEN (((t1.c66, vt0.c0, vt0.c0)) BETWEEN ((t1.c66, t1.c99, t1.c66)) AND ((vt0.c0, t1.c99, t1.c1))) THEN ((vt45.c0) NOT BETWEEN (t1.c66) AND (t1.c1)) WHEN MAX(vt0.c0) THEN (((t1.c99))<=((0xffffffffa357450c))) WHEN vt0.c0 THEN '-1692515060' END FROM vt45, t1, vt0 WHERE ('9m98s66K') GROUP BY ((((vt0.c0)) BETWEEN ((t1.c1)) AND ((vt45.c0))) IN ()); -- 0ms;
SELECT DISTINCT CASE WHEN vt45.c0 THEN t1.c66 WHEN t1.c66 THEN 0X10d315d7 WHEN t1.c1 THEN t1.c1 END COLLATE RTRIM FROM vt0, vt45 WHERE (((('')LIKE('9_')) IN (CAST(x'' AS BLOB))));SELECT ALL (((t1.c66 IN ())) NOT BETWEEN ((((t1.c99, t1.c66, t1.c1)) NOT BETWEEN ((vt45.c0, vt0.c0, t1.c99)) AND ((vt0.c0, vt0.c0, t1.c66)))) AND (UNICODE(''))) FROM vt0 WHERE (TYPEOF((+ (NULL)))) LIMIT 1811609163 OFFSET 695018364;SELECT ALL CASE ((t1.c1)-(t1.c1))  WHEN json_array_length(t1.c99, 1.85404443E9) THEN ('0.008529035720274303' IN ()) ELSE ((((t1.c1)AND(t1.c99)))OR(t1.c1)) END FROM vt0, t1 LIMIT -2092900399; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS REAL))OR((0.5776559316592753 IN (t1.c1)))))OR(CHANGES())) FROM vt45, t1 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt45.c0 END) NOTNULL) ASC  NULLS LAST, CAST(t1.c1 AS INTEGER) COLLATE BINARY;SELECT DISTINCT GROUP_CONCAT(CAST(t1.c99 AS REAL)) FROM vt0, vt45, t1; -- 0ms;
SELECT MIN(((0.7533179799810725)>>(t1.c99)), 792333961) FROM vt45;SELECT DISTINCT ((((((vt45.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL), (((vt0.c0) BETWEEN (t1.c99) AND (vt45.c0)) IN ()), t1.c99 FROM t1, vt0 WHERE (0.9116511538094999);SELECT ALL ((((((0.08138376785785872)<=(NULL)))AND(CAST(vt45.c0 AS INTEGER))))OR(((((((((((((vt0.c0)AND(t1.c1)))OR(vt45.c0)))OR(t1.c1)))AND(t1.c1)))OR(vt0.c0)))AND(vt0.c0)))) FROM t1, vt0, vt45; -- 0ms;
SELECT DISTINCT vt0.c0 FROM t1 WHERE (0xffffffff9b6b5e40);SELECT DISTINCT (~ (COUNT(*))) FROM vt45, vt0 WHERE ('|jpcy嶯b') GROUP BY CASE WHEN LENGTH(vt0.c0) THEN CAST(t1.c99 AS REAL) ELSE ((0.5003356630613632) ISNULL) END LIMIT -852604252;SELECT DISTINCT FIRST_VALUE((((t1.c99)) NOT BETWEEN ((((0X72362815) NOT BETWEEN (t1.c66) AND (vt0.c0)))) AND ((x'')))) OVER () FROM vt45, t1, vt0; -- 3ms;
SELECT DISTINCT LAST_VALUE(IFNULL((((t1.c66))<(('0.38918174784383053'))), ((t1.c99)<=(t1.c99)))) OVER ( PARTITION BY (('910784932')%(((vt0.c0)%(t1.c66)))), ((vt0.c0)|((NOT (0.8109758247669356))))), NULL, CASE (t1.c66 IN ())  WHEN (vt45.c0 IN ()) THEN GROUP_CONCAT(t1.c66) END FROM t1 INDEXED BY i65 WHERE ((((('Tr')LIKE('')))==((('759190768') BETWEEN ('-862941643') AND (x'')))));SELECT DISTINCT (((vt0.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((t1.c99)) AND ((vt45.c0))))) AND ((((t1.c1)<(t1.c99))))) FROM t1, vt0, vt45 GROUP BY ((((vt45.c0)OR(t1.c99)))<>(((t1.c99)/(vt45.c0)))) HAVING SUM(COUNT(*));SELECT DISTINCT ((((((t1.c99) ISNULL))AND(((vt45.c0)<(1002985583)))))AND(CASE '704592241'  WHEN t1.c1 THEN vt0.c0 ELSE '' END)) FROM vt45 WHERE (((('1199150819' IN (1986111553))) IS FALSE));SELECT DISTINCT (((((((((('u')<(vt0.c0)))OR(HEX(DISTINCT t1.c1))))AND(((t1.c1)GLOB(t1.c1)))))OR(t1.c1 COLLATE NOCASE)))OR(((((t1.c1)AND('-59449695')))AND(t1.c66)))), ((((((t1.c66)AND(NULL)))OR(t1.c1)))/(((vt0.c0)*(t1.c99)))), CASE (((vt0.c0)) NOT BETWEEN ((vt45.c0)) AND ((t1.c66)))  WHEN ((((vt45.c0)OR(t1.c66)))AND(vt45.c0)) THEN t1.c66 END FROM t1 WHERE (((CAST(x'' AS BLOB))%(0.841076313777714)));SELECT CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS BLOB) THEN (((t1.c1)) BETWEEN ((t1.c99)) AND ((vt45.c0))) ELSE CASE WHEN vt0.c0 THEN vt45.c0 ELSE t1.c66 END END FROM t1, vt0, vt45 WHERE (0.535069855825053); -- 0ms;
SELECT ALL '0.9272082568826048', t1.c99, MIN(MIN(UNLIKELY(DISTINCT t1.c99))) FROM vt45, vt0;SELECT DISTINCT FIRST_VALUE(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)) COLLATE RTRIM) OVER () FROM t1 LIMIT 1378372733; -- 0ms;
SELECT DISTINCT (((t1.c66 IN (t1.c1))) IS FALSE), ((t1.c99)|(vt0.c0)) COLLATE RTRIM, CAST(((vt0.c0) NOT BETWEEN (t1.c99) AND (t1.c66)) AS NUMERIC), (+ (((((vt45.c0)AND(x'')))OR(vt45.c0)))), TRIM(((t1.c1)-(t1.c1))) FROM vt45, t1, vt0 LIMIT 1571142563 OFFSET 1510400643; -- 1ms;
SELECT ((((vt0.c0)OR(t1.c1)))AND(t1.c1)) COLLATE RTRIM FROM vt45, vt0, t1; -- 0ms;
SELECT DISTINCT vt45.c0, ((LOWER(0.5503335182746918))AND(((((t1.c99)OR(t1.c1)))OR(vt0.c0)))), (CAST(vt0.c0 AS BLOB) IN ()) FROM vt0 WHERE ((((+ ('641516684')))+(CAST('0.4806239313825047' AS TEXT))));SELECT ALL t1.c99 FROM vt0, vt45, t1; -- 0ms;
SELECT DISTINCT COALESCE((((t1.c99)) NOT BETWEEN ((t1.c99)) AND ((t1.c66))), (+ (vt45.c0))) FROM t1, vt0, vt45 WHERE (1.811609163E9) ORDER BY ((0xfffffffff3d3b38e) NOT NULL) COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT CAST(((vt0.c0) BETWEEN (vt45.c0) AND ('')) AS BLOB) FROM t1, vt45;SELECT DISTINCT TOTAL(CASE WHEN vt0.c0 THEN vt45.c0 ELSE t1.c1 END) OVER () FROM vt45;SELECT ALL NTH_VALUE('o1n' COLLATE NOCASE, (- ((- (t1.c66))))) OVER () FROM t1 WHERE (TYPEOF(DISTINCT (-1410798016 IN ()))); -- 1ms;
SELECT DISTINCT t1.c66 FROM vt45, t1; -- 0ms;
SELECT DISTINCT ((AVG(t1.c99))<>(COALESCE(DISTINCT vt0.c0, t1.c1))) FROM vt45 WHERE (((CASE WHEN 'p,KU' THEN 0xffffffffbf6ba56a WHEN NULL THEN '' WHEN NULL THEN 0xfffffffff5a41421 END)AND(((NULL) BETWEEN (NULL) AND (0.7956700991426626)))));SELECT DISTINCT (((t1.c99 IN (vt45.c0, t1.c66))) IS FALSE) FROM vt45 LIMIT 1940464762;SELECT DISTINCT (((t1.c99)) NOT BETWEEN ((('m⌥' IN (0x16efdb37, vt45.c0)))) AND (((+ (t1.c1))))), ((vt45.c0) NOT BETWEEN (CAST(t1.c99 AS REAL)) AND (LIKELY(t1.c66))), ((((((((((t1.c99) NOT BETWEEN (t1.c66) AND (t1.c1)))AND(((vt0.c0) BETWEEN (t1.c66) AND (t1.c66)))))AND(json_array_length('1013144496'))))AND(t1.c1)))AND(((vt45.c0) NOTNULL))) FROM vt45 WHERE ((((((('-705397594')AND(0.3591093745182582)))OR(-1.104278479E9)))+(CASE NULL  WHEN 0x2ef824c8 THEN 0.5889411807339743 WHEN NULL THEN NULL WHEN 'wWឩM' THEN x'3490' WHEN 'V샃' THEN NULL WHEN 9.37914848E8 THEN NULL ELSE 0.7523176033116203 END)));SELECT DISTINCT (((vt0.c0) NOT BETWEEN (t1.c99) AND (t1.c1)) IN ()), ((((((((((((t1.c66)AND(vt0.c0)))AND(t1.c1)))OR(vt45.c0)))OR(t1.c1)))OR(COUNT(*))))AND(((((((((vt0.c0)AND(vt45.c0)))AND(NULL)))OR(vt0.c0)))OR(t1.c99)))), ((((((vt0.c0) BETWEEN (t1.c66) AND (t1.c99)))OR(((t1.c99) NOT BETWEEN (vt0.c0) AND (t1.c1)))))AND(t1.c99 COLLATE RTRIM)) FROM vt45, vt0;SELECT DISTINCT (- (CAST(t1.c1 AS INTEGER))) FROM vt45, vt0 WHERE ((+ (((0.7421826823541467) NOT BETWEEN (0Xffffffffe231396b) AND (0.31526145783101345)))));SELECT ALL (- (LIKELIHOOD(DISTINCT vt45.c0, 0.051019655589786383))), ((((CAST(t1.c66 AS REAL))AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)>>(t1.c66)))), ((((((((((t1.c1)OR(vt45.c0)))OR(t1.c99)))OR(t1.c1)))AND(0x1eee368b))) NOT NULL), ((0x1370f585)+(CASE vt0.c0  WHEN 0.7948845404677831 THEN vt0.c0 ELSE vt0.c0 END)), (((((((((+ (t1.c1)))AND(CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)))AND(vt45.c0 COLLATE BINARY)))AND(CAST(t1.c99 AS REAL))))OR((((t1.c99))!=((vt45.c0))))) FROM vt0, vt45, t1 ORDER BY '-717628952'  NULLS FIRST; -- 0ms;
SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt45.c0) AND (t1.c1)))OR(CASE WHEN x'e9bf' THEN t1.c66 ELSE t1.c99 END)))AND((vt0.c0 IN ()))), (+ ((t1.c66 IN ()))), '-939298744' FROM vt0, vt45, t1 WHERE (((((NULL)>=(0.21104836286927342)))-((((((((('-741372281')AND(x'd1c8')))AND(x'3896')))AND(5.18928011E8)))AND(0.001199173338240378))))); -- 0ms;
SELECT DISTINCT CASE WHEN ROUND(vt0.c0, vt45.c0) THEN (~ (vt45.c0)) END, ((CASE t1.c99  WHEN t1.c99 THEN t1.c66 ELSE vt45.c0 END)>=(vt45.c0 COLLATE NOCASE)), t1.c66 FROM vt0, t1, vt45; -- 0ms;
SELECT DISTINCT ((((vt45.c0) NOT BETWEEN (t1.c1) AND (vt45.c0))) NOT BETWEEN (((t1.c66)>=(vt0.c0))) AND (((t1.c99)<(t1.c66)))), ((CAST(t1.c1 AS REAL)) NOT BETWEEN (((0.8333922669293599) ISNULL)) AND (((t1.c66)||('591333973')))), ((CAST(vt0.c0 AS TEXT)) NOT NULL) FROM vt45, vt0 ORDER BY '-670304753' ASC;SELECT ALL ((((1673045)%(vt0.c0)))&(((t1.c1) BETWEEN (vt45.c0) AND (t1.c1)))) FROM vt45, t1, vt0; -- 1ms;
SELECT ALL ((((((((((t1.c99)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(t1.c1))) BETWEEN (UNLIKELY(DISTINCT t1.c1)) AND (CASE WHEN vt45.c0 THEN t1.c1 WHEN t1.c99 THEN vt45.c0 WHEN t1.c1 THEN t1.c99 END)), 0.44144110097935685, COUNT(vt45.c0) FROM vt0, t1;SELECT ((CAST(vt45.c0 AS BLOB)) IS TRUE) FROM t1, vt45 WHERE (LIKELIHOOD(DISTINCT (((NULL)) BETWEEN ((NULL)) AND ((0Xffffffffb049c577))), 0.14106850482917688)) LIMIT -1824448702 OFFSET -919316086; -- 0ms;
SELECT t1.c99 FROM vt0, t1, vt45; -- 0ms;
SELECT ALL COUNT(INSTR(vt0.c0, t1.c99) COLLATE RTRIM) OVER (), ((((vt0.c0) BETWEEN (t1.c99) AND (t1.c66))) NOT NULL), CASE ((t1.c99)GLOB(t1.c1))  WHEN ((((t1.c99)OR(t1.c66)))OR(vt45.c0)) THEN (+ (vt0.c0)) WHEN ((vt45.c0) IS TRUE) THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c0, t1.c1, vt45.c0))<=((t1.c66, vt45.c0, vt45.c0))) THEN ((t1.c1) IS TRUE) END FROM vt45, vt0, t1 GROUP BY CASE ((((t1.c99)AND(t1.c66)))OR(t1.c99))  WHEN CAST(t1.c66 AS INTEGER) THEN CAST(t1.c66 AS REAL) END; -- 2ms;
SELECT ALL CASE ((((t1.c66)OR(0.3623334419884622)))OR(vt0.c0))  WHEN (t1.c99 IN ()) THEN (vt45.c0 IN (vt45.c0)) ELSE ((t1.c1) NOT BETWEEN (vt0.c0) AND (t1.c1)) END, TOTAL(((((vt45.c0)AND(t1.c99)))OR(t1.c1))), TOTAL((((t1.c1))<>((t1.c66)))) FROM vt0 ORDER BY ((((t1.c1) NOT NULL)) NOT NULL), ((vt45.c0 IN (t1.c1)) IN ()), ((vt0.c0) NOT BETWEEN (((((NULL)OR(t1.c1)))OR(t1.c99))) AND (t1.c99));SELECT DISTINCT COALESCE(0X5aca9258, (NOT (t1.c1)), NULL, (t1.c66 IN (NULL, t1.c1))), TOTAL_CHANGES(), t1.c1, 0x420c11a0, ((vt45.c0)IS NOT(((t1.c66)<(t1.c66)))) FROM vt45, vt0, t1 LIMIT 788014280 OFFSET -819121409; -- 0ms;
SELECT (((t1.c66, t1.c99, t1.c1)) NOT BETWEEN ((t1.c66, t1.c99, x'')) AND ((NULL, CASE vt45.c0  WHEN t1.c66 THEN t1.c66 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c99 THEN vt0.c0 END, vt45.c0 COLLATE NOCASE))), ((((((((((t1.c66) BETWEEN (t1.c99) AND (t1.c1)))OR(vt45.c0)))AND(t1.c66)))OR((((t1.c99))<=((0.11742122024337387))))))AND((((t1.c1, vt45.c0, vt45.c0))<((vt0.c0, t1.c66, t1.c1))))), ((((x'')AND(((((((((vt0.c0)AND(t1.c1)))OR(vt45.c0)))AND('0.008529035720274303')))OR(t1.c99)))))AND(((((((((t1.c99)OR(t1.c99)))OR(t1.c99)))AND(t1.c99)))OR(vt45.c0)))) FROM vt0, vt45, t1; -- 0ms;
SELECT ((- (t1.c99)) IN ()) FROM t1, vt0, vt45 WHERE ((~ (HEX(NULL)))); -- 0ms;
SELECT ((((((((((((((((t1.c99)OR(t1.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(TOTAL(vt0.c0))))AND(((((vt45.c0)AND(t1.c99)))OR(t1.c1)))))OR(vt0.c0)))OR((NOT (vt0.c0)))) FROM t1, vt0 WHERE (LOWER((('')<=(x''))));SELECT ALL t1.c66 FROM t1, vt45, vt0; -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (CASE t1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c99 END) AND ((+ (t1.c66)))), ((CAST(t1.c66 AS TEXT)) NOT BETWEEN (vt45.c0) AND ((- (t1.c99)))), 1492915086, (((t1.c99)>(-1191776397)) IN ()), AVG((+ (t1.c66))) FILTER(WHERE ((((vt0.c0)AND(CASE vt45.c0  WHEN t1.c99 THEN t1.c99 ELSE vt45.c0 END)))AND(((t1.c1)IS(vt0.c0))))) OVER ( ROWS  CURRENT ROW) FROM t1, vt45 GROUP BY 0.40833284960322813 COLLATE RTRIM HAVING (((((vt0.c0))>=((t1.c99)))) NOTNULL);SELECT ((((((t1.c99)OR(t1.c99)))AND(vt0.c0))) IS TRUE), t1.c99, (((((t1.c1 IN ()))AND(t1.c99)))OR(vt45.c0 COLLATE NOCASE)), TOTAL(t1.c1) OVER (), ((('-993432173' IN ()))+(t1.c99)) FROM vt45, vt0, t1 LIMIT -286901831 OFFSET -1400574277; -- 0ms;
SELECT CASE WHEN (vt0.c0 IN ()) THEN (NULL IN (t1.c99)) END FROM vt45, t1 WHERE ((((+ (0Xffffffff8597bfbf))) IS TRUE)) UNION SELECT DISTINCT (((NOT (t1.c99)))+(CASE t1.c1  WHEN t1.c66 THEN vt0.c0 ELSE t1.c66 END)) FROM vt0;SELECT DISTINCT ((NULL)IS(t1.c1)) FROM t1 WHERE (NULL); -- 0ms;
SELECT ((((t1.c99))==((vt45.c0))) IN ()), COUNT(CASE WHEN t1.c99 THEN t1.c66 WHEN -1e500 THEN vt0.c0 WHEN vt0.c0 THEN t1.c1 ELSE vt45.c0 END COLLATE BINARY), (((((-178094123)OR(NULL)))AND(t1.c99)) IN ()) FROM t1, vt45;SELECT ALL vt45.c0 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY FROM vt45, vt0, t1 LIMIT -273070849; -- 0ms;
SELECT ALL TOTAL(((((vt45.c0)AND(t1.c66)))OR(t1.c99))) FROM vt45, t1 WHERE (((NOT (NULL)) IN (NULL, ((1.025357E7) IS FALSE)))); -- 0ms;
SELECT LAG(('#b' IN ()), t1.c66, rtreenode(CASE t1.c66  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((((t1.c66)AND(t1.c1)))OR(vt0.c0)))) OVER () FROM vt0, t1 WHERE (CAST(CAST('-727387379' AS BLOB) AS TEXT)) LIMIT 493183257; -- 0ms;
SELECT DISTINCT vt45.c0 FROM vt0, vt45, t1; -- 0ms;
SELECT ALL (IFNULL(vt45.c0, t1.c66) IN (vt45.c0 COLLATE RTRIM)) FROM t1, vt0, vt45; -- 1ms;
SELECT ALL CUME_DIST() OVER () FROM t1, vt0 ORDER BY ((((vt45.c0) IS FALSE))%(((t1.c66) BETWEEN (t1.c66) AND (vt45.c0)))) DESC, ((COALESCE(t1.c66, t1.c66))+(vt45.c0 COLLATE RTRIM))  NULLS FIRST, (COALESCE(t1.c99, vt45.c0) IN ())  NULLS LAST LIMIT 990509639;SELECT DISTINCT CAST(t1.c1 AS REAL) COLLATE NOCASE FROM vt0 WHERE (TYPEOF(DISTINCT COALESCE(DISTINCT NULL, '-1398655666')));SELECT ALL FIRST_VALUE((((((vt45.c0) IS TRUE)))>=((((t1.c99)>(vt45.c0)))))) OVER () FROM vt45, vt0, t1 WHERE (((CAST(0.7215377049008631 AS INTEGER))+(CASE WHEN x'' THEN NULL END))); -- 0ms;
SELECT DISTINCT MAX(((t1.c1) NOT BETWEEN (t1.c1) AND (vt0.c0))) FROM t1, vt45, vt0 WHERE ((((((((NULL, 0.08890549905822143, 'S', 2046181892, '')) NOT BETWEEN ((0.3110722006500424, NULL, x'3327', 0.19137699928914376, 1590081176)) AND ((0.28533697218203913, x'', 0.8237134255715707, 1342600124, x'7c8f'))))AND(((x'')|('u')))))OR(((NULL)<>(0.11632245352805426))))); -- 0ms;
SELECT DISTINCT AVG(CAST(t1.c1 AS REAL)) FROM vt0, vt45 WHERE (CAST(((((0x6bfaf64b)AND('0.3854180055534778')))AND('')) AS REAL));SELECT DISTINCT (NOT (CAST(vt45.c0 AS INTEGER))) FROM vt45; -- 0ms;
SELECT DISTINCT (+ (((t1.c1)LIKE(vt0.c0)))) FROM t1, vt0; -- 0ms;
SELECT CAST((((t1.c99))=((t1.c1))) AS REAL) FROM t1 ORDER BY '-1225144951'  NULLS FIRST, ('1901220696' IN ()); -- 0ms;
SELECT vt0.c0, ((((x'2ed2')>(vt0.c0)))|(((t1.c99)<=(vt45.c0)))), highlight(SUM(t1.c99), ((vt0.c0)%(t1.c1)), (0X47c70d3f IN (vt45.c0)), ((t1.c99)*(t1.c1))), (((UNLIKELY(t1.c66), (((t1.c99, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, x'25cd'))), (((x''))>=((t1.c66))), NULL, -1526759678))<=((vt0.c0 COLLATE BINARY, GLOB(vt0.c0, t1.c1), (- (t1.c1)), vt45.c0 COLLATE BINARY, ((t1.c66) BETWEEN (t1.c66) AND (t1.c99))))), ((CAST(vt45.c0 AS INTEGER))||(((t1.c66)<(NULL)))) FROM t1;SELECT DISTINCT GROUP_CONCAT(json_remove(t1.c1, vt45.c0, t1.c1, vt0.c0)), ((((t1.c99)AND(t1.c1)))AND(t1.c99)) COLLATE NOCASE, (((t1.c66)) NOT BETWEEN ((t1.c99)) AND ((t1.c66))), (((- (t1.c66)))>=(CASE t1.c1  WHEN t1.c66 THEN t1.c1 WHEN t1.c1 THEN t1.c66 WHEN vt45.c0 THEN t1.c99 ELSE t1.c99 END)), CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c66 END COLLATE NOCASE COLLATE NOCASE FROM vt0, vt45 WHERE ((~ (((('Sw)E9J~li', '', '-妘f]+看de騾', 0.1577154045726653, NULL)) BETWEEN (('958157152', '+A7', x'', NULL, '9vnv')) AND ((0.646042602637607, '', NULL, x'bac5', '')))))) ORDER BY (CASE vt0.c0  WHEN '-221772560' THEN t1.c99 WHEN t1.c99 THEN t1.c66 WHEN t1.c1 THEN 0x1d5991a5 END IN ((((t1.c99))>=((t1.c66))))) DESC  NULLS FIRST, ((CAST(t1.c99 AS BLOB)) NOT BETWEEN ('y.e') AND (t1.c1));SELECT DISTINCT t1.c99 FROM vt0, t1 WHERE ((CASE 825714445  WHEN '560812896' THEN NULL ELSE NULL END IN ())) GROUP BY ((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c99)))IS(((((vt45.c0)AND(t1.c99)))AND(t1.c99)))), ((((((((((t1.c1)AND(t1.c99)))OR(t1.c1)))AND(t1.c99)))OR(vt0.c0)))GLOB(((t1.c99)GLOB(0.099538074016423)))), (- (((vt45.c0)IS(vt45.c0)))) HAVING ((((((vt45.c0)AND(t1.c66)))OR(vt45.c0))) NOT NULL) LIMIT -2016295863 OFFSET -767700797;SELECT DISTINCT (- (CAST(t1.c99 AS REAL))), (((vt45.c0)!=('1707030229')) IN ()), GROUP_CONCAT((t1.c66 IN (vt0.c0))) COLLATE BINARY FROM vt0, t1 WHERE ((NOT (CASE ''  WHEN 0.11935529902722852 THEN NULL ELSE x'' END))) LIMIT 518928011; -- 0ms;
SELECT TOTAL((NOT (t1.c1))) FROM vt0, vt45 WHERE (CASE CASE 'sg~Ps 41'  WHEN x'' THEN 0.7958384470160644 ELSE 0.13774563519704974 END  WHEN (('')||(x'')) THEN (~ (NULL)) END) GROUP BY (t1.c66 COLLATE BINARY IN ((t1.c66 IN ())));SELECT ALL CASE WHEN ((t1.c66)<(vt45.c0)) THEN ((t1.c66) BETWEEN (t1.c99) AND (t1.c99)) END FROM vt45 ORDER BY CAST(NULL AS NUMERIC);SELECT DISTINCT (NOT (0xffffffffec810b92)) FROM vt0 WHERE (0.31526145783101345); -- 0ms;
SELECT DISTINCT ((((t1.c66)<(t1.c1)))>=((((x'ced3e0ef'))>((vt45.c0))))) FROM vt45 WHERE ((((NULL)) NOT BETWEEN (((('-1836799139')>=(NULL)))) AND ((CAST('' AS TEXT)))));SELECT DISTINCT (((t1.c1)) BETWEEN (((vt0.c0 IN (vt45.c0)))) AND ((((t1.c99) IS FALSE)))) FROM vt45, vt0, t1 WHERE (CASE WHEN (((1.900808349E9, 0.927044023062179, '-208596088')) BETWEEN ((0.5242804186714165, 0.7344120850878895, '1v3?')) AND ((0.7692842387847818, NULL, 'hꘙ'))) THEN CAST('1098424139' AS INTEGER) END); -- 0ms;
SELECT DISTINCT LEAD((vt0.c0 COLLATE RTRIM IN ((((vt45.c0)) BETWEEN (('-394358764')) AND ((vt45.c0))))), ((vt45.c0) NOT NULL), ((((vt45.c0) NOT NULL))IS((('-692335706')*(vt0.c0))))) OVER ( ROWS  CURRENT ROW), (((vt0.c0)) NOT BETWEEN ((((t1.c99) NOTNULL))) AND (((NOT (t1.c99))))), TYPEOF(DISTINCT ((((((((vt45.c0)AND(t1.c66)))OR(vt0.c0)))OR(t1.c66)))OR(vt0.c0))) FROM vt45, vt0 WHERE (((((('')<('-819121409')), '464341761' COLLATE BINARY, (('')!=(0.8335692405096462))))>(((('Q7bD0㮎')OR('-276629266')), ((((0Xffffffffaf115aec)AND('-1581934219')))OR('\Pr')), CAST('' AS REAL)))));SELECT DISTINCT CASE WHEN t1.c1 THEN (('0')>=(vt45.c0)) ELSE GLOB(t1.c1, t1.c66) END FROM vt0, vt45, t1 WHERE (CASE (('E#^f')+(NULL))  WHEN ((1.406218706E9) IS TRUE) THEN ((x'') NOT NULL) WHEN ((NULL) NOTNULL) THEN (NOT (x'')) WHEN (((x''))>((0.7175740654644117))) THEN ((-0.0) BETWEEN ('駋W') AND ('1377299486')) END) ORDER BY (t1.c66 IN ()) ASC; -- 0ms;
SELECT ALL (((vt0.c0))!=((x''))) COLLATE RTRIM FROM vt0 WHERE (((((NULL) ISNULL)) IS FALSE)) LIMIT -1421576469 OFFSET 2099809980; -- 0ms;
SELECT (t1.c1 IN ()) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((0.7742607199300549) NOT BETWEEN (x'b39e') AND (LOWER(DISTINCT vt45.c0))) FROM vt0, vt45, t1 WHERE (CASE WHEN 0.47160635064592626 THEN '	' END COLLATE NOCASE); -- 0ms;
SELECT ALL x'' FROM vt0 ORDER BY t1.c99 LIMIT -1290607798 OFFSET 1884806465;SELECT (((t1.c1 IN ()))<((((t1.c66))<((t1.c66))))) FROM t1, vt0 WHERE (CAST(((x'') BETWEEN (0xfffffffffa339c27) AND ('bꁌ')) AS TEXT)); -- 0ms;
SELECT ((CASE vt0.c0  WHEN t1.c66 THEN vt45.c0 ELSE vt0.c0 END)<=((+ (t1.c99)))) FROM t1, vt45;SELECT DISTINCT t1.c99 FROM t1, vt45 WHERE (((CAST('-1280089911' AS BLOB))|(((0.8549791035393299)|(-283772487))))); -- 0ms;
SELECT ALL (((('UL') NOTNULL))&(((vt45.c0)<>(vt45.c0)))) FROM t1, vt0 ORDER BY ((((((t1.c1, t1.c66, t1.c66, t1.c1, t1.c66))>=((t1.c66, vt0.c0, vt45.c0, vt0.c0, vt45.c0)))))=((((((t1.c66)AND(t1.c66)))AND(vt0.c0))))) DESC  NULLS FIRST;SELECT ((((t1.c1) IS TRUE)) NOT NULL), ((NULL) NOT BETWEEN (((t1.c1) IS TRUE)) AND (CAST(t1.c1 AS NUMERIC))), -1446738651, ((GROUP_CONCAT(t1.c66))*(x'')), t1.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE FROM vt0, vt45, t1; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT t1.c1), (+ (CAST(vt0.c0 AS REAL))), vt0.c0 FROM vt45, vt0;SELECT DISTINCT CUME_DIST() OVER () FROM vt0 GROUP BY ((((t1.c99) BETWEEN (x'') AND (vt0.c0))) NOT NULL), CAST(t1.c1 COLLATE NOCASE AS BLOB), CAST(NULL AS BLOB) HAVING (((((vt45.c0)AND(t1.c99)))OR(t1.c66)) IN (CASE t1.c1  WHEN t1.c1 THEN t1.c99 END)) ORDER BY x'' COLLATE BINARY COLLATE RTRIM ASC, CASE CAST(t1.c66 AS NUMERIC)  WHEN t1.c99 COLLATE BINARY THEN CASE WHEN vt45.c0 THEN -8.19121409E8 ELSE t1.c99 END ELSE ((((((((t1.c99)AND(t1.c99)))AND(t1.c99)))AND(t1.c66)))OR(t1.c99)) END ASC  NULLS LAST;SELECT ALL ((((t1.c99)<(vt45.c0)))IS(((t1.c1) ISNULL))) FROM t1, vt0 WHERE (((CASE WHEN 0.903582499364733 THEN NULL WHEN x'0705' THEN '' WHEN x'' THEN 0.29992999430611056 END) NOT BETWEEN (CAST(x'' AS REAL)) AND ((('-2047061051')!=('0.7138988973770354')))));SELECT ALL (((t1.c66)/(t1.c66)) IN ()), CASE WHEN HEX(t1.c99) THEN COALESCE('mm]# fl占', t1.c99) END, ((((vt0.c0)AND(((((t1.c99)OR(t1.c1)))OR(t1.c1)))))OR('oa')) FROM vt45 WHERE (((CAST(x'' AS TEXT)) IS FALSE));SELECT ALL ((CASE vt0.c0  WHEN t1.c66 THEN t1.c66 WHEN vt0.c0 THEN t1.c66 WHEN '-155860796' THEN vt0.c0 END)=(GROUP_CONCAT(t1.c66))), CASE t1.c99 COLLATE RTRIM  WHEN ((t1.c99)*(NULL)) THEN UNICODE(vt0.c0) ELSE vt0.c0 END, vt45.c0 FROM vt0, vt45, t1 WHERE (((NOT (x'')) IN (0X532ccc7d))) GROUP BY CASE WHEN (((NULL, t1.c99, t1.c99)) BETWEEN ((t1.c66, vt45.c0, vt45.c0)) AND ((vt0.c0, vt45.c0, t1.c66))) THEN ((((((((((((t1.c66)OR(x'5eaa')))OR('1660713414')))AND(t1.c1)))OR(t1.c1)))AND(NULL)))AND(vt0.c0)) ELSE t1.c1 COLLATE RTRIM END, (CAST(vt0.c0 AS REAL) IN ((((vt0.c0))=((vt45.c0))))), TRIM(((vt45.c0) BETWEEN (t1.c1) AND (x''))) HAVING (CASE WHEN vt0.c0 THEN x'' END IN ((~ (vt0.c0)), ((vt45.c0)*(vt45.c0)))); -- 0ms;
SELECT NULLIF(DISTINCT (((t1.c1)) NOT BETWEEN ((t1.c66)) AND ((t1.c66))), (((vt0.c0, vt45.c0, vt0.c0, vt45.c0, t1.c66))<((vt0.c0, t1.c66, vt0.c0, t1.c1, t1.c1)))), vt45.c0, (NOT ((t1.c66 IN ()))) FROM t1, vt0, vt45 WHERE (CAST(((0.10170298657340149)IS NOT(x'')) AS REAL)); -- 0ms;
SELECT DISTINCT (CASE WHEN t1.c1 THEN vt45.c0 WHEN t1.c66 THEN t1.c1 WHEN t1.c1 THEN t1.c99 ELSE t1.c66 END IN (((t1.c99)||(t1.c1)))) FROM vt45, t1 WHERE (((((((NULL)OR(0xffffffffb3b360c9)))OR(x'')))<=((((('0.06234321016916289')OR(x'')))AND('1204227391'))))) ORDER BY CASE ((t1.c1)>=(vt45.c0))  WHEN vt45.c0 COLLATE BINARY THEN t1.c66 ELSE NULL END DESC  NULLS LAST; -- 0ms;
SELECT SUM(CASE WHEN vt0.c0 THEN vt45.c0 END) OVER (), ((ABS(NULL))==(((vt0.c0)*(NULL)))), ((vt0.c0 IN ()) IN (vt0.c0 COLLATE RTRIM, (t1.c66 IN (vt0.c0, vt0.c0)))) FROM t1 WHERE (((((('-1118973844'))==(('-1899410695'))))IS(ROUND(1.804887857E9, NULL)))) GROUP BY ((CASE WHEN t1.c66 THEN vt0.c0 ELSE t1.c99 END)<(((0x734cbf2f)GLOB(t1.c66)))) HAVING ((t1.c1) NOT NULL) COLLATE BINARY;SELECT DISTINCT (~ (((vt45.c0) BETWEEN ('1181825687') AND (t1.c66)))) FROM t1, vt45; -- 0ms;
SELECT HEX(DISTINCT CAST(vt0.c0 AS BLOB)) FROM t1, vt0 WHERE (SQLITE_COMPILEOPTION_GET(((0.5936594401394781) IS TRUE))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), 1063681958, ((x'')||(TOTAL(vt45.c0))) FROM t1, vt45 GROUP BY (((((vt0.c0))>((t1.c1))))>(CASE WHEN t1.c66 THEN vt0.c0 WHEN t1.c66 THEN vt45.c0 WHEN t1.c99 THEN vt0.c0 END)) ORDER BY ((((((((t1.c1)OR(((t1.c99)AND(t1.c1)))))AND((((t1.c66, vt0.c0, vt45.c0)) NOT BETWEEN ((t1.c1, t1.c99, t1.c66)) AND ((t1.c1, vt0.c0, t1.c99))))))AND(NULL)))OR((NOT ('')))) ASC  NULLS LAST;SELECT DISTINCT AVG(((t1.c66)<('-940349856'))), ((CAST(t1.c99 AS INTEGER))-(LIKELIHOOD(t1.c66, 0.6318208312667382))), vt0.c0 FROM t1 LIMIT -8207501 OFFSET -204996599;SELECT ALL ((((t1.c1) NOT BETWEEN (NULL) AND (t1.c1))) NOT NULL) FROM t1, vt45, vt0 WHERE (((((((((((x'c110')&(NULL)))OR(((x'') IS TRUE))))AND(MIN('371343793', x''))))AND(-1668356254)))OR((+ (x''))))) LIMIT 1456706972; -- 0ms;
SELECT ALL (((vt45.c0))!=((t1.c1))) COLLATE NOCASE FROM vt45, t1 INDEXED BY i7, vt0 WHERE (CASE CASE x''  WHEN '-455587527' THEN -784873198 WHEN 0.8702266438467487 THEN '1728009581' WHEN NULL THEN 0X6aaaae09 END  WHEN ((((NULL)AND(NULL)))AND(NULL)) THEN 0.775840998805084 WHEN CAST(x'' AS BLOB) THEN ((NULL) BETWEEN ('-1129514918') AND ('0.36485932794869314')) WHEN CAST(0X7786a30c AS TEXT) THEN x'' COLLATE RTRIM END) GROUP BY (- (CASE WHEN vt45.c0 THEN t1.c99 ELSE t1.c66 END)); -- 1ms;
SELECT DISTINCT CAST((t1.c1 IN ()) AS TEXT) FROM vt45 GROUP BY (+ (((vt0.c0) NOT NULL))) HAVING ((((vt45.c0) BETWEEN (t1.c99) AND ('D_N9%om{Q')))OR(CAST(vt45.c0 AS NUMERIC)));SELECT CAST(((((t1.c66)OR(vt0.c0)))OR(t1.c1)) AS TEXT), CASE WHEN 0.7896795316612354 THEN (0.7509138107276049 IN (vt45.c0)) WHEN (((0.7416955392534494)) NOT BETWEEN ((t1.c99)) AND ((t1.c66))) THEN CASE WHEN vt45.c0 THEN vt0.c0 END WHEN (t1.c66 IN ()) THEN ((t1.c99)*(vt45.c0)) ELSE ((t1.c66) BETWEEN (vt0.c0) AND (t1.c99)) END, json_insert((t1.c66 IN (t1.c66, 536808120)), SUM(vt45.c0), '-855067556') FROM t1, vt0, vt45 WHERE (((((NULL)<>(x'77bf'))) NOT NULL)); -- 0ms;
SELECT DISTINCT TYPEOF(((vt45.c0) BETWEEN (vt45.c0) AND (t1.c1))) FROM vt0, vt45;SELECT ALL ((x'')LIKE(NULL)), (((((((((((((+ (t1.c99)))OR(SUM(vt45.c0))))OR((NOT ('-702337475')))))OR((- (vt0.c0)))))AND((t1.c1 IN ()))))AND(CASE WHEN vt45.c0 THEN 0x753c0d09 ELSE vt0.c0 END)))AND(COUNT(*))), CAST(vt45.c0 AS TEXT) FROM vt45, t1, vt0 WHERE (CAST(((((0.6605520898999656)AND(x'')))AND('-1692040126')) AS INTEGER)); -- 0ms;
SELECT (((vt45.c0)||(t1.c99)) IN ()) FROM vt45; -- 0ms;
SELECT t1.c99, vt0.c0, CASE WHEN vt45.c0 THEN t1.c1 ELSE t1.c66 END COLLATE BINARY COLLATE NOCASE FROM vt45, vt0, t1; -- 0ms;
SELECT ALL ((((vt0.c0)>>(t1.c66))) IS TRUE) FROM t1;SELECT ALL (- (((((NULL)OR('-1029751051')))OR(vt0.c0)))) FROM vt0, vt45, t1 LIMIT -1111080009; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1, vt0, vt45 WHERE (((('TRUE' IN ()))LIKE(('-818022835' IN ())))); -- 0ms;
SELECT DISTINCT ((('')<(x'')) IN ((((t1.c1, vt45.c0, t1.c99)) BETWEEN ((t1.c1, t1.c99, t1.c66)) AND ((vt0.c0, '-192056371', vt45.c0))))), AVG(((NULL)=(t1.c1))), CASE WHEN t1.c66 COLLATE BINARY THEN CAST(t1.c99 AS REAL) ELSE '-767700797' END FROM t1 GROUP BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (t1.c99) AND ((((vt45.c0))>((t1.c99))))), ((((t1.c99)/(t1.c1)))%(0.8457864302736816)), ((((vt45.c0) BETWEEN (t1.c66) AND (t1.c66)))LIKE(((vt0.c0) IS TRUE))), ((t1.c99 COLLATE RTRIM) BETWEEN (((vt0.c0)<(vt0.c0))) AND (((t1.c99) BETWEEN ('-1316229994') AND (151770977)))), (+ ((('-966730614')LIKE(t1.c1)))) HAVING ((CASE WHEN vt45.c0 THEN vt45.c0 ELSE t1.c66 END) IS FALSE) ORDER BY (((t1.c1 IN ()))<(vt45.c0 COLLATE RTRIM)) ASC  NULLS FIRST;SELECT DISTINCT t1.c66, CAST(CAST(vt0.c0 AS TEXT) AS REAL), CASE ((t1.c66) IS FALSE)  WHEN IFNULL(t1.c99, t1.c1) THEN AVG(t1.c1) ELSE ((t1.c66)=(t1.c99)) END FROM vt45, t1, vt0 WHERE ((((- (''))) IS FALSE)) LIMIT 622727395; -- 0ms;
SELECT ((MIN(vt45.c0)) NOT BETWEEN ((((vt0.c0))<((t1.c1)))) AND (((t1.c1)<=(vt0.c0)))) FROM vt45, vt0, t1; -- 0ms;
SELECT NULL FROM vt45, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt45, t1 WHERE (CAST(CAST(x'' AS NUMERIC) AS NUMERIC)); -- 0ms;
SELECT ((t1.c66)<(vt45.c0)) COLLATE BINARY, (+ (MAX(vt0.c0))), ((t1.c66 COLLATE NOCASE) NOTNULL) FROM vt45;SELECT ALL vt0.c0 FROM vt0 ORDER BY CAST(t1.c99 AS TEXT) DESC;SELECT DISTINCT ((((((t1.c99)OR(vt0.c0)))AND(t1.c1)))>=((t1.c1 IN ()))) FROM vt45;SELECT DISTINCT CAST(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c99)) AS NUMERIC) FROM vt0, t1, vt45; -- 0ms;
SELECT DISTINCT t1.c99 FROM vt0, vt45 WHERE ((((('')>(''))) IS TRUE)) LIMIT 1940464762 OFFSET 1519702032;SELECT ALL ((((vt0.c0) NOT NULL))IS NOT(t1.c66 COLLATE RTRIM)), (((NOT (t1.c66)))&('A2L*R#iy')), CASE vt45.c0  WHEN SQLITE_VERSION() THEN ((t1.c66)<<(t1.c66)) WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 WHEN ((t1.c99) NOT BETWEEN (t1.c1) AND (t1.c66)) THEN (t1.c1 IN (vt45.c0)) WHEN CASE t1.c66  WHEN t1.c66 THEN '' WHEN vt45.c0 THEN vt45.c0 WHEN t1.c66 THEN t1.c1 ELSE vt45.c0 END THEN ((vt0.c0)>=(t1.c66)) WHEN '-3200426' THEN (~ (t1.c99)) END FROM vt45, t1 WHERE ((((LIKELIHOOD(0.11958492319583003, 0.34271625332568234)))==((((x'') BETWEEN (0.0259759719514413) AND ('bd'))))));SELECT ALL (~ (t1.c66)) COLLATE NOCASE FROM t1; -- 0ms;
SELECT AVG('182784143') OVER () FROM vt45, t1, vt0; -- 0ms;
SELECT DISTINCT ((x'') NOTNULL) FROM vt0, t1, vt45 WHERE (CASE WHEN ((x'')!=('')) THEN ((-1.7976931348623157E308)%('')) END) GROUP BY (((t1.c66)-(NULL)) IN ()) HAVING ABS(t1.c66); -- 0ms;
SELECT MIN(t1.c1 COLLATE BINARY COLLATE RTRIM) FROM vt0 FULL OUTER JOIN t1 ON t1.c99 FULL OUTER JOIN vt45 ON ((((((vt45.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL) LIMIT -939298744 OFFSET 957969490; -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, t1 INDEXED BY i7, vt45 NOT INDEXED ORDER BY NULL  NULLS LAST; -- 0ms;
SELECT ALL ((CAST(vt45.c0 AS TEXT)) NOT BETWEEN ((NOT (t1.c1))) AND (((t1.c1)>>(vt0.c0)))) FROM vt0, vt45, t1 LIMIT -105540783 OFFSET -1061863606; -- 1ms;
SELECT ALL (((t1.c1 COLLATE BINARY, (- (vt0.c0)), (- (vt0.c0))))<=((NULL COLLATE RTRIM, UNLIKELY(x''), (((t1.c1, x'', t1.c99))<=((t1.c66, t1.c66, vt0.c0)))))) FROM vt45, vt0 WHERE (((((((NULL) NOT BETWEEN ('1181825687') AND (0.5880173181122177)))OR(CASE WHEN NULL THEN -219245674 WHEN 1512682613 THEN -4.51172747E8 WHEN 0.1928364849559383 THEN NULL END)))OR('')));SELECT DISTINCT ((((t1.c99) NOT BETWEEN (vt45.c0) AND (t1.c99)))GLOB(((vt45.c0)<>(vt0.c0)))), CAST(TYPEOF(DISTINCT t1.c99) AS BLOB), (- (t1.c99 COLLATE RTRIM)) FROM t1, vt0, vt45; -- 0ms;
SELECT ALL (((vt45.c0)) NOT BETWEEN ((load_extension(vt45.c0))) AND (('0.6821835602476329'))) FROM vt0, t1 WHERE (CAST(((x'') NOT BETWEEN (x'9b30') AND (1516786687)) AS TEXT));SELECT DISTINCT vt0.c0 FROM t1, vt45 WHERE (((('-926686602')) BETWEEN ((CAST(1422123893 AS TEXT))) AND (((- (1580908104))))));SELECT ((((t1.c1))<((t1.c1))) IN ()) FROM vt0, t1, vt45 ORDER BY (NOT (CAST(vt45.c0 AS NUMERIC))) LIMIT 1422123893 OFFSET -421903125; -- 0ms;
SELECT (+ (CASE t1.c99  WHEN vt0.c0 THEN t1.c99 WHEN t1.c99 THEN t1.c66 WHEN t1.c1 THEN vt45.c0 WHEN t1.c66 THEN x'' WHEN vt0.c0 THEN t1.c1 END)) FROM vt45 WHERE ((((NULL, x'', '-341922707')) NOT BETWEEN ((CAST('H0' AS INTEGER), ((0.4806239313825047) IS FALSE), ('/zKLzv' IN ()))) AND ((x'', (('-789501233') NOTNULL), (((NULL))<((-1208303516)))))));SELECT SUM((NOT (vt0.c0))) OVER () FROM t1;SELECT ALL COUNT(((vt45.c0) BETWEEN (vt0.c0) AND (t1.c1))) OVER () FROM vt45 WHERE (((((((((((x'')AND('0.3047511906389996')))AND('-1867700843')))OR(x'')))AND('-1540010085')))|(0.5835291809230185)));SELECT DISTINCT vt0.c0 FROM vt45, t1 ORDER BY CAST(t1.c1 COLLATE NOCASE AS INTEGER) DESC;SELECT ALL (((+ (vt0.c0))) NOT BETWEEN (TYPEOF(t1.c1)) AND ((- (t1.c66)))) FROM vt45, vt0, t1; -- 0ms;
SELECT ((vt45.c0)>>(((t1.c1)&(t1.c66)))) FROM vt45, vt0;SELECT DISTINCT TOTAL(((t1.c1)IS(t1.c66))) OVER (), NULL, ((((t1.c1) NOT NULL))==(vt0.c0)) FROM vt0, vt45;SELECT DISTINCT (((vt45.c0 COLLATE BINARY, COUNT(vt0.c0), TRIM(7.8801428E8, vt0.c0), ((vt45.c0) NOT BETWEEN (t1.c66) AND (0.6217839353858999)), (NOT (vt45.c0))))>((MAX(t1.c99), 0.6189801119086298, ((vt45.c0) IS FALSE), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt45.c0, t1.c99, t1.c1)) BETWEEN ((t1.c1, t1.c66, t1.c66)) AND ((vt45.c0, t1.c1, t1.c99)))))), CASE WHEN CAST(vt45.c0 AS TEXT) THEN ((((t1.c99)OR(t1.c1)))AND(t1.c66)) END, ((0.024044646427374583) NOT BETWEEN (((t1.c66) BETWEEN (t1.c66) AND (t1.c99))) AND (((t1.c66)<<(vt45.c0)))) FROM vt45, vt0 WHERE ('-43522803');SELECT t1.c99 FROM t1, vt45 GROUP BY ((CASE WHEN t1.c99 THEN vt0.c0 ELSE t1.c1 END) NOT BETWEEN (CASE WHEN t1.c66 THEN t1.c1 ELSE vt0.c0 END) AND (((((vt0.c0)AND(t1.c1)))AND(t1.c66)))) HAVING ((COUNT(t1.c66))IS NOT(766468497)) ORDER BY ((((((((((t1.c1)LIKE(t1.c66)))AND(UNICODE(vt0.c0))))OR(json_array_length(vt0.c0, vt45.c0))))OR(CAST(t1.c99 AS INTEGER))))AND(CAST(vt0.c0 AS NUMERIC)))  NULLS LAST;SELECT ((t1.c1) IS FALSE) FROM vt45, t1; -- 0ms;
SELECT ((((t1.c66) BETWEEN (t1.c99) AND (t1.c1)))OR(CAST(t1.c1 AS REAL))), (CAST(t1.c1 AS BLOB) IN ()), vt0.c0 FROM vt0, t1, vt45 GROUP BY (('!\rv' COLLATE BINARY)>>((NOT (t1.c99)))), -2.110870261E9, ((((vt0.c0) NOTNULL)) BETWEEN (LOWER(vt0.c0)) AND (CASE t1.c1  WHEN t1.c1 THEN vt0.c0 END)); -- 0ms;
SELECT DISTINCT ((((((((((-2017175082)GLOB(t1.c1)))AND(SUM(vt45.c0))))OR(((((vt45.c0)AND(vt45.c0)))OR(vt0.c0)))))AND(LIKELIHOOD(t1.c1, 0.5778994404803244))))AND(((vt0.c0)OR(t1.c1)))) FROM t1, vt45, vt0 GROUP BY ((((t1.c66)<(t1.c1))) NOT BETWEEN (((vt45.c0)|(vt0.c0))) AND ((((t1.c66, vt0.c0, t1.c99)) BETWEEN ((t1.c99, vt45.c0, t1.c66)) AND ((t1.c1, vt45.c0, vt0.c0))))) HAVING ((((t1.c99) BETWEEN (vt0.c0) AND (t1.c66)))&(((t1.c99) IS FALSE))); -- 0ms;
SELECT ALL x'80aa7d2e' FROM vt0, t1; -- 0ms;
SELECT DISTINCT (NOT (CAST(t1.c99 AS BLOB))) FROM vt0, vt45;SELECT DISTINCT x'1661' FROM t1, vt45, vt0 WHERE ((NOT (((NULL) NOT BETWEEN ('()') AND (NULL))))) UNION SELECT DISTINCT CAST(-1503850721 AS REAL) FROM vt45, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((t1.c99)==(vt45.c0)) IN ()) FROM t1, vt45, vt0; -- 0ms;
SELECT DISTINCT ((GLOB(vt45.c0, 0.7430263015390319))<<(((((t1.c99)AND(t1.c1)))OR(t1.c99)))) FROM vt0 WHERE (((((CASE 0.21904488161762914  WHEN x'33cf' THEN x'7786' END)OR(CAST(NULL AS NUMERIC))))AND(CASE x'ac08'  WHEN -1601077869 THEN NULL ELSE x'' END))) GROUP BY IFNULL(1.940464762E9, CAST(vt0.c0 AS NUMERIC));SELECT DISTINCT CASE WHEN ((t1.c99)+('-253180994')) THEN CASE WHEN vt45.c0 THEN t1.c66 WHEN vt0.c0 THEN 'xY' WHEN t1.c66 THEN t1.c99 WHEN t1.c66 THEN vt0.c0 WHEN t1.c99 THEN t1.c99 ELSE vt0.c0 END WHEN (t1.c1 IN ()) THEN ((((((((vt0.c0)AND(0.417576168003678)))AND('1422123893')))OR(t1.c1)))OR(t1.c66)) WHEN ((t1.c99) BETWEEN (vt0.c0) AND (vt45.c0)) THEN ((t1.c66) NOT BETWEEN (t1.c99) AND (NULL)) END, ((x'') NOT BETWEEN (((t1.c99)>>(t1.c66))) AND ((((t1.c1)) BETWEEN ((t1.c99)) AND ((vt45.c0))))), ((((ABS(DISTINCT t1.c66))AND(x'')))AND('/F-9*')) FROM vt0, t1 WHERE ((((('-751509557') BETWEEN ('1013144496') AND (NULL))) NOT BETWEEN ((((NULL))<((0.8408862070867561)))) AND (json_quote(x''))));SELECT COUNT(*), t1.c66, (((vt0.c0 IN ()))&(((vt0.c0)OR(vt0.c0)))) FROM vt45, t1;SELECT DISTINCT MIN(((t1.c66)+(vt0.c0))) FROM t1, vt45;SELECT DISTINCT COUNT(*) FROM t1, vt0 INDEXED BY i65, vt45 LIMIT -1052277119 OFFSET 1854044430;SELECT DISTINCT (((t1.c66, vt0.c0, t1.c1)) NOT BETWEEN ((json(t1.c1), (NOT (t1.c99)), ((t1.c66)<=(t1.c1)))) AND ((vt0.c0, ABS(t1.c1), (((t1.c66, t1.c66, t1.c1))=((vt0.c0, t1.c99, x'')))))) FROM vt45, t1;SELECT DISTINCT ((((vt0.c0) BETWEEN (t1.c66) AND (t1.c66))) NOT BETWEEN ((((vt0.c0))==((t1.c66)))) AND (((((vt45.c0)AND(t1.c66)))AND(t1.c66)))) FROM vt0, vt45 ORDER BY ((CAST(t1.c99 AS REAL))<(t1.c66)) ASC, ((((vt0.c0)<<(vt0.c0)))GLOB((t1.c66 IN (vt0.c0))))  NULLS LAST, ((((t1.c66)IS NOT(t1.c1))) BETWEEN (x'') AND ((NOT (t1.c99)))) ASC  NULLS FIRST;SELECT DISTINCT ((+ (vt0.c0)) IN ()) FROM vt45; -- 0ms;
SELECT DISTINCT ((((+ (t1.c1)), ((((t1.c99)OR(vt0.c0)))OR(vt0.c0)), (((t1.c1))>((vt45.c0))), ((((t1.c99)AND(t1.c1)))AND(vt45.c0)), vt0.c0))<((0Xffffffff87b91e0c, 182784143, ((vt0.c0)&(vt0.c0)), LIKELY(DISTINCT t1.c66), ((((t1.c66)OR(vt0.c0)))AND(t1.c99))))) FROM vt45 WHERE (((0.2427959238321421) NOT NULL));SELECT DISTINCT TOTAL((t1.c66 IN ())) FILTER(WHERE ((CAST(t1.c1 AS TEXT))GLOB(((vt0.c0) BETWEEN (t1.c1) AND (NULL))))) OVER (), (NOT (((vt0.c0)<=(vt45.c0)))), t1.c99 FROM vt0;SELECT DISTINCT COUNT(*) FROM t1, vt0, vt45; -- 0ms;
SELECT ((CAST(t1.c1 AS NUMERIC))>>(CASE WHEN vt45.c0 THEN t1.c1 END)) FROM vt0 LIMIT -702881272 OFFSET 1728009581;SELECT ALL ((CAST(t1.c66 AS NUMERIC)) IS TRUE), (((('-853768409')||(t1.c99)))<=((~ (vt0.c0)))), CASE ((0x4a041a0e)LIKE(0.7553836651334581))  WHEN (((vt45.c0, t1.c66, t1.c1)) BETWEEN ((vt45.c0, t1.c1, t1.c66)) AND ((vt45.c0, vt45.c0, t1.c99))) THEN ((x'a2bc')|(vt0.c0)) ELSE (t1.c1 IN ()) END FROM vt0, t1, vt45 LIMIT 1456936286; -- 0ms;
SELECT DISTINCT '-862941643' FROM vt45, t1, vt0 WHERE (0xffffffffa874b2b3); -- 0ms;
SELECT ALL (+ (CASE WHEN vt45.c0 THEN t1.c1 ELSE t1.c66 END)), ((CASE WHEN vt0.c0 THEN vt45.c0 ELSE vt0.c0 END)IS NOT(vt0.c0 COLLATE RTRIM)), x'' FROM t1, vt0;SELECT CASE ((t1.c99) BETWEEN (vt0.c0) AND (t1.c99))  WHEN ((vt0.c0)GLOB(t1.c66)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt45.c0)) ELSE 0.8269851589519895 END, (((t1.c66))>=((((vt0.c0)AND(t1.c99))))), PERCENT_RANK() OVER () FROM vt45, vt0, t1 WHERE (0.8335692405096462); -- 0ms;
SELECT DISTINCT ((json_valid(t1.c66)) IS TRUE), ((((t1.c1) NOT BETWEEN (vt0.c0) AND (t1.c66))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0)%(vt0.c0)))), (NOT (((t1.c99)%(t1.c66)))) FROM t1, vt0, vt45 WHERE (((((0.8070400372828904) NOT BETWEEN ('Td{}') AND (1.013144496E9))) BETWEEN (((0xffffffff992b241e)<=('0.024044646427374583'))) AND (CAST(x'a38d' AS TEXT)))); -- 0ms;
SELECT MAX(x'5c97') FROM t1, vt45, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c99 THEN COUNT(*) ELSE NULL END FROM t1; -- 0ms;
SELECT DISTINCT ((vt45.c0 COLLATE NOCASE) IS TRUE) FROM t1, vt0, vt45 WHERE (CASE 0.8783421496622319  WHEN NULL THEN x'2476' END COLLATE BINARY); -- 0ms;
SELECT ALL (NOT ((((vt45.c0)) BETWEEN ((t1.c1)) AND ((t1.c99))))) FROM t1 WHERE (((((x'11d5')IS(-1.558921256E9))) ISNULL));SELECT DISTINCT AVG(((vt45.c0)/(vt45.c0))) OVER () FROM vt45, t1, vt0 WHERE (CAST(((NULL) NOT BETWEEN (0.9058599773695781) AND (NULL)) AS TEXT)) LIMIT 1837829720; -- 0ms;
SELECT DISTINCT 0.9926700666657415 FROM vt45, t1, vt0 GROUP BY (~ (CAST(vt45.c0 AS TEXT))); -- 1ms;
SELECT ALL ('1766217795' IN ()) FROM t1, vt0; -- 0ms;
SELECT ALL x'' FROM vt0, vt45, t1; -- 0ms;
SELECT (((- (t1.c1))) BETWEEN (((t1.c66) NOT BETWEEN (t1.c99) AND (t1.c99))) AND (NULL)), ((((vt45.c0) NOT BETWEEN (t1.c66) AND (vt45.c0)))<>((((t1.c1, t1.c1, vt45.c0))>((vt45.c0, vt0.c0, t1.c1))))), x'3de7' FROM vt45, t1;SELECT ALL (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (t1.c99)))) FROM vt45, vt0 WHERE ((((0X46cb812c)) NOT BETWEEN (((NULL IN ()))) AND (((('2074604910')-(x''))))));SELECT ((CASE t1.c99  WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN t1.c99 END) NOT BETWEEN (MAX(vt45.c0)) AND ((((vt45.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c66))))), TRIM(t1.c66, ((t1.c66)-(vt45.c0))), (((CASE WHEN t1.c66 THEN t1.c99 END, ((t1.c66) IS FALSE), (NOT (-1578632577))))<>((((t1.c66) IS FALSE), ((t1.c99)*(vt0.c0)), vt0.c0 COLLATE BINARY))), t1.c1, CAST(LIKELY(DISTINCT t1.c1) AS NUMERIC) FROM t1;SELECT DISTINCT CASE WHEN ((t1.c1)|(t1.c99)) THEN t1.c1 COLLATE RTRIM END FROM t1, vt0 WHERE (((((863178291) BETWEEN ('-2108472136') AND (x'3fa4'))) NOTNULL)); -- 0ms;
SELECT DISTINCT '1406218706' FROM vt45 ORDER BY CASE ABS(t1.c1)  WHEN CASE t1.c99  WHEN 9.143500361430412E-4 THEN t1.c99 END THEN ((t1.c99) NOT NULL) ELSE (NOT (t1.c66)) END  NULLS LAST;SELECT DISTINCT COUNT(NULL) OVER ( ROWS  UNBOUNDED PRECEDING), HEX(DISTINCT (t1.c99 IN ())), 0.8232886565633355 FROM vt45, vt0, t1 LIMIT -1194427302; -- 0ms;
SELECT DISTINCT ((((((0X54bd6ace)OR(vt0.c0)))OR('2095668749'))) NOT BETWEEN (((t1.c99) ISNULL)) AND ((t1.c66 IN ()))) FROM vt45 LIMIT -1412494874;SELECT ALL CASE WHEN t1.c1 THEN t1.c99 WHEN t1.c66 THEN vt45.c0 WHEN t1.c1 THEN vt0.c0 END COLLATE RTRIM FROM vt45 WHERE ((((x'' IN ())) ISNULL));SELECT ALL ((((t1.c99) IS TRUE))<<(((vt45.c0) NOTNULL))) FROM vt0, t1, vt45; -- 0ms;
SELECT ALL CAST(t1.c99 AS TEXT) COLLATE RTRIM FROM vt45, vt0, t1 WHERE ((((((x'')>(333557413)), (((1129166415)) BETWEEN (('1177698394')) AND ((NULL))), (((1.7976931348623157E308)) BETWEEN ((x'')) AND ((0.7590732936731747)))))=(((('') BETWEEN (x'842d') AND ('')), ((NULL) NOT BETWEEN (NULL) AND (NULL)), (((NULL))<>(('0.34838499737929884'))))))); -- 0ms;
SELECT DISTINCT ((((t1.c66) NOTNULL)) IS TRUE), ((SUM(vt0.c0))OR(((t1.c1)IS(vt45.c0)))), (((((('-589475176')AND(t1.c1)))AND(t1.c66))) BETWEEN (MAX(t1.c99)) AND (CAST(t1.c66 AS INTEGER))) FROM t1 WHERE ((('駲H' COLLATE BINARY)<>((('gB)8 	0') IS TRUE))));SELECT DISTINCT CASE WHEN ((((t1.c66)OR(vt45.c0)))OR(vt0.c0)) THEN CASE t1.c99  WHEN t1.c66 THEN t1.c99 END WHEN (((vt0.c0)) BETWEEN (('-727387379')) AND ((vt45.c0))) THEN (((t1.c1))<>((0X7a4cff4e))) WHEN CASE WHEN t1.c99 THEN t1.c1 WHEN t1.c66 THEN t1.c99 WHEN vt0.c0 THEN vt45.c0 WHEN 0.6375291212598133 THEN t1.c1 WHEN t1.c1 THEN t1.c66 ELSE t1.c66 END THEN IFNULL(vt0.c0, vt0.c0) WHEN IFNULL(t1.c1, x'c670') THEN CASE t1.c1  WHEN vt0.c0 THEN vt45.c0 ELSE t1.c1 END WHEN ((t1.c66) ISNULL) THEN GROUP_CONCAT('n!.>') ELSE (x'' IN (t1.c1, 0Xffffffff92afd782)) END FROM vt45, t1, vt0 WHERE (((((((4.93183257E8)AND(NULL)))OR(NULL)))||(((((0.20582547257577577)OR('')))AND(x'fb6bfd90'))))) LIMIT 759190768 OFFSET 560812896; -- 0ms;
SELECT ALL AVG(((t1.c1)&(t1.c1))) OVER () FROM t1, vt45 WHERE ((CAST(0X27ca0769 AS TEXT) IN ())); -- 0ms;
SELECT ALL (((t1.c66)) BETWEEN ((((vt45.c0) BETWEEN (t1.c1) AND (vt0.c0)))) AND ((CASE t1.c1  WHEN t1.c66 THEN t1.c66 END))) FROM vt45 WHERE ((- (0.8797906775432223)) COLLATE BINARY);SELECT DISTINCT AVG(UNICODE(vt45.c0)) OVER ( ORDER BY (((((t1.c1) BETWEEN (t1.c99) AND (0.5982273611049034))))<>((t1.c66))) DESC) FROM t1, vt45; -- 0ms;
SELECT DISTINCT (NOT (t1.c1 COLLATE BINARY)), ((NULLIF(t1.c66, t1.c1)) NOT BETWEEN (CAST(t1.c99 AS REAL)) AND (t1.c1 COLLATE BINARY)), ((SUM(vt45.c0)) NOT BETWEEN ((t1.c99 IN ())) AND (t1.c1)) FROM t1 WHERE (((((CASE WHEN x'83e6' THEN NULL WHEN -5.9449695E7 THEN '<J肙Ph<j&F' WHEN NULL THEN x'' WHEN '-249144' THEN '922786935' WHEN x'' THEN x'' END)OR((((0.0202555212564014, '-1552629141', x'')) NOT BETWEEN ((NULL, 0.34941548128695754, x'')) AND ((0.4810710655890932, -1665440847, x''))))))AND((((0.1394131032839664))=((NULL))))));SELECT ALL (((((~ (t1.c99)))AND((((vt45.c0))<((t1.c99))))))AND(((((((((vt0.c0)AND(t1.c1)))OR(vt45.c0)))OR(t1.c99)))AND(NULL)))) FROM t1, vt45, vt0; -- 0ms;
SELECT ALL AVG(((t1.c99)%(t1.c66))) OVER (), (((((t1.c99) IS FALSE)))==(((vt45.c0 IN ())))), NTILE((((NULL)<(t1.c66)) IN ())) OVER ( PARTITION BY x'', (NOT (CAST(t1.c99 AS BLOB)))) FROM vt45, t1, vt0 WHERE (((((((0Xffffffffd334dfcb)|(x'')))AND(NULL COLLATE NOCASE)))AND((('-91017671')||(-9.1017671E7))))) ORDER BY ((0.6592965345647966)<>(x'')) ASC  NULLS LAST; -- 0ms;
SELECT ((t1.c1) IS TRUE) FROM t1, vt45, vt0; -- 6ms;
SELECT CAST((t1.c66 IN ()) AS REAL) FROM t1; -- 0ms;
SELECT ((t1.c66) IS TRUE) COLLATE NOCASE FROM vt0 WHERE (((CASE x''  WHEN 0.7380558413408699 THEN '0.6835962945533975' WHEN -926142932 THEN x'' WHEN NULL THEN 0.774970149485395 END) ISNULL)) ORDER BY ((((((t1.c66)*(vt45.c0)))OR(((((t1.c66)AND(vt0.c0)))AND(t1.c1)))))OR(((t1.c66) NOT NULL)))  NULLS FIRST;SELECT DISTINCT (((t1.c1, t1.c66, vt0.c0, '2~', NULL)) BETWEEN ((vt45.c0, MIN(t1.c66), (('1811378676') IS TRUE), t1.c66, (((vt45.c0, t1.c1, vt45.c0))==((vt45.c0, vt0.c0, t1.c1))))) AND (((- (t1.c66)), MIN(t1.c99), vt45.c0, '707545642', (t1.c1 IN ())))) FROM vt0 WHERE ((((HEX(DISTINCT x''), ((0x5909aa46)LIKE('y9sud1?郱')), '7\'))=((((x'') BETWEEN ('-588219678') AND ('Q7bD0㮎')), CAST('0.6605520898999656' AS INTEGER), 0.47160635064592626))));SELECT SUM(((t1.c1) BETWEEN (t1.c1) AND (vt45.c0))) OVER () FROM vt0 WHERE (((CAST(0.6386148094660198 AS INTEGER))-((NULL IN (NULL, '-185469917'))))) LIMIT 1157952169 OFFSET 992008602;SELECT ALL t1.c66, MIN((+ (t1.c1))), ((((((t1.c99)OR(0.9475820841835636)))AND(vt45.c0))) IS TRUE) FROM vt0 WHERE (HEX(DISTINCT ((((x'')OR('-1650076343')))AND(NULL))));SELECT ALL (COALESCE(DISTINCT t1.c99, vt0.c0) IN ()) FROM vt0, t1, vt45 ORDER BY ((((((((t1.c99)AND(vt45.c0)))OR(t1.c66)))AND(((t1.c99) ISNULL))))OR(t1.c1 COLLATE BINARY)) LIMIT 2049350935 OFFSET -1454046009; -- 0ms;
SELECT (((NOT (vt0.c0))) BETWEEN (vt45.c0) AND (((t1.c1) NOTNULL))) FROM vt0, vt45, t1; -- 0ms;
SELECT GROUP_CONCAT(((t1.c99) NOTNULL)) FROM t1, vt0 GROUP BY ((json_type(t1.c66))||((('-1029751051')IS(t1.c1)))), ((NULL) BETWEEN (t1.c1) AND ((-1051610049 IN (t1.c66, t1.c66)))), CASE t1.c1  WHEN ((vt0.c0)<=(vt45.c0)) THEN '-155860796' WHEN ((((vt45.c0)OR(t1.c99)))AND(vt0.c0)) THEN CAST(vt45.c0 AS BLOB) WHEN TYPEOF(DISTINCT vt0.c0) THEN ((('-1022928714')) NOT BETWEEN ((vt45.c0)) AND ((t1.c1))) END HAVING ((vt0.c0) NOT BETWEEN (t1.c99) AND (t1.c99)) COLLATE BINARY;SELECT t1.c1, t1.c99, ((((((((t1.c99 COLLATE BINARY)OR(CAST(t1.c99 AS BLOB))))AND(SUBSTR(x'63fc', t1.c66))))AND((vt0.c0 IN ()))))OR(t1.c99 COLLATE BINARY)) FROM vt45, vt0, t1 WHERE ((((('-490043364') BETWEEN (NULL) AND (NULL)))>(((NULL)IS NOT(x''))))) GROUP BY vt0.c0 HAVING '*~'; -- 0ms;
SELECT DISTINCT CASE WHEN ((((t1.c1)OR(vt45.c0)))AND(t1.c99)) THEN COALESCE(vt0.c0, t1.c1, t1.c1, t1.c1) ELSE COUNT(t1.c66) END FROM vt0, vt45, t1 WHERE ((NOT ('268508859')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((vt45.c0 COLLATE NOCASE)OR(((((((((t1.c99)AND(t1.c66)))AND(x'')))AND(t1.c1)))AND(vt0.c0)))))OR((((t1.c66)) BETWEEN ((t1.c1)) AND ((vt0.c0))))) FROM vt45, vt0 LIMIT 1603661951 OFFSET 902150668;SELECT ALL '-1692515060', ((((vt45.c0)AND(((t1.c66)=(0.04577380522961616)))))OR(((((((((t1.c66)AND(x'')))AND(t1.c1)))AND(t1.c1)))OR(vt0.c0)))), (((((t1.c1)OR(t1.c1)))AND(t1.c99)) IN ()), CAST(SUM(t1.c99) AS NUMERIC), NULL FROM vt45 WHERE ((CAST(x'' AS NUMERIC) IN (((((0.18783110088522537)AND(NULL)))OR(x'82455f08')))));SELECT ((t1.c1 IN ()) IN ()) FROM vt0 WHERE ((((0.7963995671080117 IN ())) NOT BETWEEN ((((0.29174024633355045)) NOT BETWEEN ((x'')) AND ((0.7227784097980076)))) AND ('?7' COLLATE BINARY))); -- 0ms;
SELECT ALL (((t1.c99, t1.c66, vt0.c0)) BETWEEN ((vt0.c0, ((((t1.c66)AND(t1.c1)))OR(vt0.c0)), CASE WHEN x'' THEN 0xffffffff901ba158 ELSE '778614970' END)) AND ((((vt45.c0)GLOB(x'')), (t1.c99 IN ()), AVG(t1.c99)))) FROM vt0, t1;SELECT CASE '0.08138376785785872' COLLATE RTRIM  WHEN ((vt0.c0)OR(vt45.c0)) THEN (- (vt0.c0)) END FROM vt45, t1, vt0 LIMIT 1498403778; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS REAL) FROM vt0 WHERE (TYPEOF(HEX(NULL))) ORDER BY (((t1.c99)) BETWEEN ((json_insert(vt45.c0, vt0.c0, t1.c99))) AND ((t1.c1)))  NULLS LAST;SELECT DISTINCT (AVG(vt0.c0) IN ()) FROM t1, vt45, vt0 NOT INDEXED WHERE ((((0.38628339831322467 IN ())) BETWEEN (((0x47c70d3f)||('182784143'))) AND ((('~\rNnv\rn(') NOTNULL)))) GROUP BY json_array_length(CASE t1.c99  WHEN vt0.c0 THEN t1.c66 ELSE t1.c66 END, vt45.c0 COLLATE RTRIM), (NOT (vt0.c0)) COLLATE RTRIM COLLATE NOCASE, (((t1.c99)) NOT BETWEEN ((1516786687)) AND ((((t1.c99)/(vt0.c0))))), CAST(((vt0.c0) NOT BETWEEN (t1.c1) AND ('')) AS INTEGER), ((((((t1.c66)<=(vt45.c0)))OR(((vt45.c0)GLOB(t1.c1)))))OR(TRIM(DISTINCT vt45.c0))) HAVING ((CAST(t1.c1 AS BLOB))GLOB(UPPER(vt45.c0))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c1 THEN t1.c99 ELSE t1.c1 END) BETWEEN (0.04780454175563453) AND ((((t1.c66, 0x1eee368b, t1.c1)) BETWEEN ((NULL, t1.c66, vt45.c0)) AND ((t1.c66, t1.c66, vt45.c0))))) FROM t1 WHERE ((~ ((('-1095591861')/('-445665862'))))) GROUP BY ((1080569924) IS FALSE), CAST(((vt45.c0)AND(NULL)) AS BLOB), (((1.401145315E9 IN ())) NOT BETWEEN (CASE WHEN vt45.c0 THEN NULL WHEN t1.c99 THEN vt45.c0 WHEN 1401145315 THEN vt0.c0 END) AND ((((t1.c99, vt45.c0, t1.c99, vt0.c0, x''))>((t1.c99, t1.c99, t1.c99, vt0.c0, vt0.c0))))) ORDER BY vt0.c0;SELECT DISTINCT (((((((t1.c99)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))))OR(-717628952)))OR(AVG(vt45.c0))), ((t1.c66)<<(t1.c99)) COLLATE RTRIM COLLATE BINARY, (~ (SUM(t1.c66))) FROM vt45;SELECT DISTINCT ((((((((CAST(vt45.c0 AS REAL))OR(SUM(vt0.c0))))AND(CASE t1.c66  WHEN t1.c99 THEN vt45.c0 ELSE 0.3488132102542312 END)))OR(IFNULL(t1.c1, t1.c1))))OR(t1.c1)), (('1387815817' COLLATE NOCASE)<(t1.c1 COLLATE RTRIM)), x'' FROM vt0, t1, vt45; -- 0ms;
SELECT ALL (t1.c99 IN ()) COLLATE NOCASE FROM vt45, vt0, t1 WHERE (((('p>dzz!w')<<(0.7572134478117147)) IN ())); -- 0ms;
SELECT (CAST(vt0.c0 AS BLOB) IN ()) FROM vt0, vt45, t1 WHERE ((((CAST(-9.3578901E8 AS INTEGER)))<=(((NULL IN ()))))); -- 0ms;
SELECT DISTINCT t1.c66, ((NULL)-(((((t1.c99)OR(t1.c99)))AND(t1.c1)))), (((((((vt45.c0)) NOT BETWEEN ((t1.c99)) AND ((t1.c99))))AND(t1.c1)))OR(t1.c1)) FROM t1, vt45 WHERE ((((NULL IN (x'7595')))IS((((((((('bꁌ')AND('')))AND(1.95384306E9)))AND(0xffffffffb7135138)))AND(''))))); -- 0ms;
SELECT DISTINCT CAST(CASE t1.c1  WHEN 'D98⍼rD' THEN t1.c99 ELSE t1.c1 END AS INTEGER) FROM t1, vt0, vt45 WHERE ((((((x'')-('1530844877'))))<>(((x'' IN (x'')))))) LIMIT -1029751051 OFFSET -366015947; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0, vt45 ORDER BY vt0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST((t1.c1 IN ()) AS REAL) FROM vt0, vt45, t1; -- 0ms;
SELECT DISTINCT (CAST(vt45.c0 AS REAL) IN ()) FROM t1 WHERE (((UNLIKELY(DISTINCT ''))IS(((-7.17628952E8) NOTNULL)))); -- 0ms;
SELECT CASE (t1.c1 IN ())  WHEN CAST(vt0.c0 AS BLOB) THEN (NOT (vt45.c0)) WHEN ((('', vt0.c0, vt0.c0)) NOT BETWEEN ((x'547e', t1.c66, t1.c99)) AND ((NULL, vt45.c0, t1.c1))) THEN ((((t1.c99)AND(t1.c66)))AND(t1.c99)) WHEN ((vt0.c0)GLOB(t1.c99)) THEN (((('1325390144')OR(vt0.c0)))OR(x'ce19')) ELSE ((((vt45.c0)AND(t1.c1)))AND(NULL)) END, LAG(CAST(((vt0.c0)!=(vt0.c0)) AS REAL), 0.5529078290739419, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)/(vt0.c0)), vt0.c0, TIME(vt0.c0, vt0.c0, vt0.c0))) AND (((('')>>(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (x'09fc') AND (vt0.c0)))))) OVER (), SUM(MIN(t1.c1)) FROM vt0 WHERE (((((((('-1107117941')) NOT BETWEEN (('-1554561780')) AND (('-1917496910'))))OR('-1078835730' COLLATE RTRIM)))AND(((0.45644922623401374)-('-394358764'))))) LIMIT -702337475;SELECT DISTINCT (((CAST(t1.c1 AS REAL)))<((COUNT(vt45.c0)))) FROM t1 ORDER BY CAST(CAST(vt45.c0 AS REAL) AS INTEGER)  NULLS FIRST, (((t1.c1) BETWEEN (vt45.c0) AND (t1.c66)) IN ()), ((((((((((((((vt0.c0)AND(t1.c99)))OR(t1.c66)))OR(t1.c66)))OR(t1.c1)))OR(t1.c99)))OR(t1.c66))) ISNULL) ASC  NULLS FIRST, CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM  NULLS LAST;SELECT DISTINCT ((((CAST(vt45.c0 AS BLOB))OR((((t1.c66, t1.c1, t1.c99)) NOT BETWEEN ((vt0.c0, t1.c66, t1.c99)) AND ((t1.c99, t1.c99, t1.c1))))))OR(((t1.c1) IS TRUE))), CASE ((vt0.c0)=(vt45.c0))  WHEN CASE t1.c99  WHEN t1.c99 THEN t1.c99 WHEN t1.c1 THEN t1.c99 WHEN t1.c66 THEN t1.c66 ELSE vt45.c0 END THEN CAST(vt45.c0 AS INTEGER) ELSE t1.c66 END, (- ((NOT (0.36485932794869314)))) FROM t1 LIMIT 1393127711 OFFSET -286518387;SELECT (((t1.c1, x'', t1.c66)) BETWEEN ((t1.c99, t1.c66, t1.c99)) AND ((t1.c66, vt45.c0, vt45.c0))) COLLATE RTRIM FROM vt45, t1, vt0 ORDER BY ((CAST(vt45.c0 AS REAL))OR(((((t1.c66)OR(t1.c99)))OR(t1.c1)))) ASC  NULLS FIRST, ((x'a294')AND((t1.c1 IN ()))) DESC, (((CASE t1.c66  WHEN t1.c1 THEN NULL ELSE vt45.c0 END))<((json_extract(t1.c99, t1.c1, t1.c1, t1.c1, 'Q', t1.c66)))) DESC  NULLS FIRST;SELECT ALL (((t1.c99)=(t1.c66)) IN ()) FROM vt45, t1 WHERE (((CAST(NULL AS INTEGER))<(((((((((0.3074822866724042)OR('1098424139')))AND(NULL)))OR(x'')))AND(x'108b'))))); -- 0ms;
SELECT DISTINCT ((x'')/(CASE t1.c66  WHEN t1.c1 THEN t1.c1 END)), ((((vt0.c0 COLLATE NOCASE)OR((0.4330905263646052 IN ()))))AND(((vt45.c0) BETWEEN (NULL) AND (t1.c1)))), 0.43499207787651606 FROM vt45, t1;SELECT DISTINCT -2.022329969E9 FROM vt0 GROUP BY TRIM('') LIMIT 1687728173 OFFSET 2090765992; -- 0ms;
SELECT CAST(((NULL) NOT BETWEEN (t1.c1) AND (x'')) AS TEXT), (('w!1xD*|^')==(vt45.c0)) COLLATE BINARY, (((~ (t1.c66))) IS TRUE) FROM vt45, vt0;SELECT DISTINCT (((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))OR((((t1.c99)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))), CAST(MIN(t1.c66) AS INTEGER), (((('%aVYBl') NOTNULL))>(t1.c1 COLLATE RTRIM)) FROM t1, vt0, vt45 WHERE (((((0.46383133039218316)AND(7.8801428E8)))+(((-1443970033) NOT BETWEEN (0.2779634823435847) AND (''))))); -- 0ms;
SELECT ALL NTILE(CAST(CAST(t1.c1 AS NUMERIC) AS TEXT)) OVER () FROM vt0, vt45, t1 WHERE (((CAST(0.7138988973770354 AS TEXT)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((t1.c1) NOT BETWEEN (t1.c99) AND (t1.c1))) BETWEEN (COUNT(t1.c1)) AND (t1.c1)) FROM vt0, vt45 WHERE ((((((0Xffffffffd1f99f5c))=((''))))-(((0xffffffff89c5920b)||('1239660097')))));SELECT ALL (CAST(vt45.c0 AS TEXT) IN ()) FROM vt45, vt0, t1 WHERE (CASE (+ (0.7697371200376794))  WHEN ((('s#-C'))=(('-746672140'))) THEN '995759554' COLLATE RTRIM WHEN IFNULL(DISTINCT NULL, NULL) THEN json_object(NULL, NULL) WHEN (x'' IN ()) THEN ((((((((-1257769231)AND(x'ced47007')))AND('-1643252880')))OR(0Xffffffffa9eec40f)))AND('-781766257')) ELSE (('') IS TRUE) END) ORDER BY ((((SUBSTR(t1.c99, t1.c1))AND(((NULL)/('-751509557')))))AND(((t1.c1)>=(t1.c66))))  NULLS LAST; -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY CASE '*宰'  WHEN ((t1.c66) NOT BETWEEN (vt45.c0) AND ('')) THEN ((0.4839455095812759) BETWEEN (t1.c1) AND (vt0.c0)) ELSE ((t1.c1)||(t1.c1)) END  NULLS FIRST, (((vt45.c0 IN (t1.c1)))LIKE(((t1.c1)OR(vt45.c0)))) ASC, (((t1.c1)GLOB(t1.c1)) IN ((x'' IN ())))), NULL, x'' FROM vt0, vt45, t1 WHERE ((('-42219384')IS(x'')) COLLATE RTRIM) LIMIT -935789010; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt45.c0 THEN vt0.c0 WHEN vt45.c0 THEN t1.c1 WHEN t1.c66 THEN NULL END)<(((((vt0.c0)OR(vt45.c0)))OR(vt45.c0)))) FROM vt0, t1 GROUP BY (~ (((0.34838499737929884) BETWEEN (t1.c99) AND (t1.c1)))), vt0.c0, t1.c1;SELECT NULL FROM vt45, t1, vt0 WHERE (((((0.9240650815718168)=(NULL)))>>(((((((((x'')OR(NULL)))OR('~C ')))AND('0.552116261385199')))OR(x'fb4b'))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), json_array_length(MAX(t1.c66), x''), (+ (((t1.c99) NOT BETWEEN (t1.c1) AND (t1.c66)))) FROM t1; -- 0ms;
SELECT ALL ((((((((((t1.c1)OR(vt45.c0)))AND(CASE vt45.c0  WHEN vt45.c0 THEN vt0.c0 ELSE t1.c66 END)))AND(GROUP_CONCAT(t1.c66))))AND((~ (vt45.c0)))))OR(((t1.c66) NOT BETWEEN (t1.c1) AND (t1.c99)))) FROM vt45, t1 WHERE ((('3') NOT NULL) COLLATE BINARY) LIMIT -720486964;SELECT DISTINCT GROUP_CONCAT((t1.c1 IN ())) FROM t1 INNER JOIN vt45 ON (((- (vt0.c0)))+('566653545')) LEFT OUTER JOIN vt0 ON (NOT (((t1.c99) NOT BETWEEN (t1.c66) AND (t1.c99)))) ORDER BY (((((- (t1.c1)))OR(CAST(vt45.c0 AS REAL))))AND(((vt45.c0) NOTNULL))) DESC  NULLS FIRST, vt45.c0 ASC  NULLS FIRST; -- 0ms;
SELECT (((- (t1.c1)))>>(MAX(t1.c99))), CAST((t1.c66 IN ()) AS REAL), ((((vt0.c0)>>(t1.c99))) IS TRUE), ((((vt45.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(t1.c1 AS REAL)) AND ((((t1.c99))>((vt45.c0))))), NULL FROM vt0 GROUP BY CASE CAST(t1.c66 AS NUMERIC)  WHEN CAST('0.903582499364733' AS TEXT) THEN 715263583 END HAVING t1.c1;SELECT DISTINCT TRIM(((t1.c1) BETWEEN (vt0.c0) AND (vt0.c0))) FROM t1, vt45, vt0 WHERE (((((- ('-2010106928')), (('1023720950') ISNULL), x''))=(((NULL IN (x'5a1b')), ((((x'')OR(0.46019543908298177)))AND('1406218706')), (('')GLOB(0xffffffff99ecd848)))))); -- 0ms;
SELECT ALL ((0.06589735607696623)OR(((t1.c99) NOT BETWEEN (0.40375598982335925) AND (t1.c1)))), (highlight(t1.c66, vt45.c0, vt0.c0, t1.c66) IN ()), ((((t1.c66)&(vt0.c0)))*((t1.c99 IN (vt45.c0)))), CASE WHEN t1.c99 COLLATE BINARY THEN json_extract(t1.c1, t1.c99) ELSE NULL END, CAST(CAST(t1.c66 AS BLOB) AS REAL) FROM vt0;SELECT ALL (CAST(vt0.c0 AS REAL) IN (GROUP_CONCAT(t1.c99))) FROM t1;SELECT DISTINCT ((t1.c99 COLLATE NOCASE)||(((vt0.c0) NOT BETWEEN (t1.c66) AND (t1.c1)))), ((vt0.c0) NOT NULL), ((CAST(vt45.c0 AS NUMERIC)) BETWEEN (NULL) AND ((NULL IN ()))) FROM vt45, t1;SELECT DISTINCT (((((((((t1.c99 IN (vt45.c0)))OR(t1.c66 COLLATE BINARY)))OR('FbRI탃(髱\r8')))OR(((vt0.c0)&(NULL)))))OR(CASE t1.c1  WHEN t1.c66 THEN vt0.c0 WHEN t1.c99 THEN t1.c66 WHEN 'erm-R?I~*' THEN t1.c99 ELSE t1.c66 END)) FROM vt0, t1, vt45; -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c0 IN (t1.c66)) THEN ((((t1.c99)OR(-394165122)))OR(vt0.c0)) ELSE (t1.c1 IN ()) END, ((vt45.c0 COLLATE BINARY)==(t1.c99 COLLATE BINARY)), ((((vt45.c0) NOTNULL)) NOT BETWEEN (LIKE(-642225512, t1.c1, '.')) AND ((((vt45.c0, vt0.c0, t1.c1)) BETWEEN ((t1.c99, vt45.c0, t1.c99)) AND ((t1.c66, t1.c99, t1.c1))))) FROM t1, vt0 WHERE (((CASE WHEN x'' THEN '778614970' END) NOT BETWEEN (CASE NULL  WHEN 0.9470068710220916 THEN x'' ELSE '916253629' END) AND (((NULL) IS FALSE)))) ORDER BY CAST(((t1.c1) IS FALSE) AS REAL) ASC;SELECT TRIM(0.2639600485146586, ((((t1.c66)OR(t1.c99)))AND(vt0.c0))) FROM vt0;SELECT DISTINCT CAST((+ (t1.c99)) AS REAL), json_insert(vt45.c0, ((((t1.c99)OR(t1.c1)))OR(t1.c99)), ((t1.c66)/(t1.c66))), COUNT(*), (CAST(NULL AS REAL) IN ()), CUME_DIST() OVER (), ((vt0.c0) BETWEEN (((t1.c1)+(t1.c66))) AND (((vt0.c0)LIKE('1906931385')))), ((((t1.c99)AND(t1.c66)))OR(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((NOT (0.6279459581108214 COLLATE NOCASE)));SELECT ALL (((- (vt0.c0))) IS FALSE), (((t1.c99)) NOT BETWEEN (((((t1.c99)) BETWEEN ((t1.c66)) AND ((t1.c1))))) AND ((SUM(vt0.c0)))), ((CASE vt0.c0  WHEN t1.c99 THEN t1.c66 ELSE vt45.c0 END) NOT BETWEEN ((((t1.c99, t1.c99, t1.c1))>=((vt0.c0, t1.c1, vt45.c0)))) AND (t1.c99)) FROM vt45, vt0 WHERE (((NULL) BETWEEN (x'b248') AND (8.01913901E8)) COLLATE RTRIM);SELECT DISTINCT (((-842411224))!=((((t1.c99) NOTNULL)))) FROM t1, vt45, vt0 WHERE (LIKELY(DISTINCT NULL)); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT CAST(t1.c99 AS NUMERIC)) FROM t1 LIMIT -156889362; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) BETWEEN (t1.c99) AND (t1.c66))), (((t1.c66, vt0.c0, t1.c99)) BETWEEN ((((t1.c99) ISNULL), ((t1.c1)<>(vt45.c0)), (~ (vt45.c0)))) AND ((CASE 0.19313231004566445  WHEN vt45.c0 THEN vt45.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN vt45.c0 WHEN t1.c99 THEN t1.c99 WHEN vt0.c0 THEN vt45.c0 ELSE t1.c99 END, (((t1.c99, t1.c66, t1.c66)) BETWEEN ((vt0.c0, t1.c1, vt45.c0)) AND ((vt0.c0, '-2019660038', t1.c66))), ((((((((t1.c66)OR(t1.c99)))AND(t1.c99)))OR(vt0.c0)))OR(t1.c99))))), CAST(MIN(t1.c66) AS TEXT) FROM vt45;SELECT DISTINCT CUME_DIST() OVER () FROM t1, vt0, vt45 WHERE (CASE WHEN (- ('-2110870261')) THEN '-1503850721' END); -- 0ms;
