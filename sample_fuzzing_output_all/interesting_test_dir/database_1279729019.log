-- Time: 2024/06/07 06:37:22
-- Database: database19
-- Database version: 3.40.0
-- seed value: 1279729019
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 5ms;
UPDATE rt0 SET (c1, c1)=(NULL, '-1351667475'); -- 0ms;
DELETE FROM rt0 WHERE CASE ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0))  WHEN CAST(NULL AS REAL) THEN (rt0.c2 IN ()) END; -- 0ms;
REINDEX  rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
COMMIT; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA main.application_id = 5102381581919149693; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 3ms;
UPDATE rt0 SET c1=x'', c1=0.8961456359327241, c2=0.8961456359327241; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.cache_size; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0X18b3d6a) WHERE ((TIME(rt0.c2, rt0.c0, rt0.c1)) NOTNULL); -- 0ms;
ANALYZE; -- 1ms;
ANALYZE temp; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
END; -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
ANALYZE; -- 1ms;
ANALYZE main; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.5608440754676407); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA mmap_size; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA stats; -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(0.5300688885772193); -- 1ms;
INSERT OR FAIL INTO rt0(c2) VALUES ('509551425'), ('LG,+,s!f'), (0.5287636420671007); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES (x'', '25902442'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES ('509551425', 't', 0Xfffffffff066b8ce); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
END; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=NULL WHERE ''; -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=(x'b6a5e53c', -1.351667475E9) WHERE TIME(((rt0.c1)>=(rt0.c1)), ((rt0.c0)%('0.5300688885772193')), ((((rt0.c0)OR(rt0.c0)))AND('7x''퓌'))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (x'', NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2, c2, c0)=(0.9448568403520392, NULL, x''); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.short_column_names = true; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(NULL, NULL, '7')) NOTNULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
END; -- 0ms;
VACUUM; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c2 END)>=(rt0.c2)) FROM rt0 WHERE (CASE (((((((((((('u⍁4굵')OR(x'')))AND('25902442')))OR('0.5608440754676407')))OR(x'f0cb5eee0904')))AND('')))OR(55127229))  WHEN CAST(0.6103857858638624 AS INTEGER) THEN (-1.351667475E9 IN (0.5608440754676407, NULL)) WHEN (5.09551425E8 IN ()) THEN CASE NULL  WHEN '25902442' THEN NULL END WHEN (('-1469992864')+(NULL)) THEN ((0.46615923590878483) NOT BETWEEN ('') AND (0.7601838568150574)) END) EXCEPT SELECT (((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)) IN (((rt0.c2) IS TRUE))) FROM rt0; -- 1ms;
SELECT DISTINCT LAST_VALUE((((rt0.c0)) BETWEEN (((NOT (rt0.c2)))) AND ((NULL)))) OVER ( ORDER BY LIKE(((rt0.c0) NOT BETWEEN (0.7297065196616203) AND (rt0.c0)), x'') DESC, rt0.c0 ASC  NULLS LAST) FROM rt0; -- 1ms;
SELECT DISTINCT CASE WHEN (rt0.c2 IN ()) THEN ABS(rt0.c0) WHEN ((rt0.c0)OR(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c1 THEN NULL END WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN 0.834494142066988 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN TOTAL(rt0.c2) ELSE ((rt0.c2)<(rt0.c0)) END FROM rt0 ORDER BY CAST(((((x'4c12')AND(rt0.c2)))OR(rt0.c2)) AS INTEGER); -- 0ms;
SELECT rt0.c1 FROM rt0 WHERE (((((0xffffffffa861b060) NOT BETWEEN (0.2509796199235377) AND ('_\n[\n\rqa^'))) NOTNULL)) ORDER BY ((((((((((((rt0.c2)AND(rt0.c0)))OR(x'')))AND(rt0.c1)))OR(NULL)))OR(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))))AND((rt0.c0 IN (rt0.c2)))) ASC, ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT CAST(CAST(rt0.c0 AS INTEGER) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c0)>(rt0.c0)))OR((rt0.c2 IN ()))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))))AND((((rt0.c2))==((rt0.c0))))))AND((~ (rt0.c2)))))OR(((rt0.c2)<(rt0.c2)))), COUNT(*) OVER (), -2.61703474E8 FROM rt0 WHERE ((CAST(NULL AS BLOB) IN ())); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))) OVER () FROM rt0; -- 7ms;
SELECT DISTINCT CAST(TYPEOF(DISTINCT rt0.c1) AS NUMERIC), ((rt0.c2 COLLATE NOCASE)>((rt0.c1 IN ()))), (((((NOT (rt0.c0)))OR(IFNULL(rt0.c0, rt0.c2))))OR(((rt0.c2)!=('')))) FROM rt0 WHERE (((((('-1469992864')) BETWEEN ((-4.19517067E8)) AND ((0.9456453094500706)))) NOT BETWEEN ((('-1910188852')<=(NULL))) AND (NULL))); -- 0ms;
SELECT ALL (((rt0.c0)/(rt0.c1)) IN ()) FROM rt0 WHERE (((0.11473330154473393)<<(0.6501904847864969)) COLLATE BINARY COLLATE RTRIM) ORDER BY (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))<=((CASE WHEN rt0.c0 THEN rt0.c2 END)))  NULLS FIRST LIMIT -261703474 OFFSET 1268217614; -- 1ms;
SELECT DISTINCT '-343661129' FROM rt0 LIMIT 39390543 OFFSET -343661129; -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c1)) AS NUMERIC) FROM rt0 NOT INDEXED WHERE ((((x'cebe')) BETWEEN ((CASE WHEN '-1910188852' THEN '55127229' WHEN '1268217614' THEN NULL WHEN 0Xffffffffa9c688b7 THEN '0.6501904847864969' END)) AND ((((x'')>('-2126264252')))))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN COUNT(*) WHEN 'z7' THEN rt0.c2 WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'e6e3' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END ELSE TOTAL(rt0.c2) END, -1984616410, ((((((((rt0.c1 COLLATE RTRIM)AND(CAST(0.06739703947660891 AS REAL))))OR(((rt0.c0)!=(rt0.c0)))))OR(rt0.c1)))AND(MAX(rt0.c2))) FROM rt0 WHERE (((('', 0.248601998107007, '*6f!P[|')) BETWEEN (((('*6f!P[|') NOTNULL), ((NULL) NOT BETWEEN ('') AND (x'')), (((('770649996')AND('-2126264252')))OR('')))) AND ((x'', x'', NULL COLLATE RTRIM)))) GROUP BY NULL; -- 0ms;
SELECT ALL NULLIF(MAX(rt0.c0), (rt0.c0 IN ())), ((rt0.c1 COLLATE BINARY)/(('' IN ()))), rt0.c1 FROM rt0 GROUP BY ((CAST('55127229' AS INTEGER)) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))); -- 0ms;
SELECT ((((rt0.c2)IS(rt0.c2)))=(GROUP_CONCAT(rt0.c1))), CAST((((rt0.c1, rt0.c1, rt0.c2))==((rt0.c0, rt0.c2, rt0.c2))) AS REAL), ((((rt0.c0)+(rt0.c2)))<<(((rt0.c2) ISNULL))) FROM rt0 WHERE ((((((NOT (NULL)))AND(CASE x''  WHEN '-1446606665' THEN NULL WHEN '-1984616410' THEN x'' WHEN '' THEN -1015617037 END)))OR(CASE WHEN x'' THEN NULL ELSE x'' END))); -- 0ms;
SELECT ALL ((((rt0.c1)<(rt0.c2))) NOT BETWEEN ((((rt0.c1))<=((rt0.c0)))) AND (0.4534376973403561)) FROM rt0 ORDER BY (((((rt0.c1) NOTNULL)))==(((((rt0.c2))==((rt0.c0))))))  NULLS LAST, CASE '-1910188852'  WHEN (rt0.c2 IN (rt0.c0)) THEN rt0.c0 COLLATE NOCASE ELSE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)) END  NULLS FIRST, ROUND(((rt0.c2) ISNULL), 0.9463185440749827); -- 0ms;
SELECT ALL CASE WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN 1579674162 ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN 0.26822958418221987 END END FROM rt0 WHERE (json_insert(LIKELY(DISTINCT 0.8129835798099379), ((x'') NOT BETWEEN (0Xffffffffeebb713b) AND ('-289705669')), (((((((('-115691999')OR(NULL)))AND('u⍁4굵')))AND(NULL)))OR('-261703474')))) LIMIT -538395227 OFFSET 2073512811;SELECT DISTINCT NTILE(CAST(((rt0.c1)&(x'')) AS REAL)) OVER () FROM rt0;SELECT DISTINCT ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))AND(rt0.c2)))AND((rt0.c0 IN ()))) FROM rt0 WHERE (((NULL)%(CAST(x'9657' AS REAL)))) GROUP BY ((((rt0.c1)AND(CASE WHEN rt0.c1 THEN -1149641834 ELSE rt0.c2 END)))AND((~ (rt0.c2)))); -- 0ms;
SELECT ((((rt0.c2) ISNULL))<=(UPPER(rt0.c1))) FROM rt0 WHERE (((TRIM(DISTINCT '845936518'))!=(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) BETWEEN (AVG(rt0.c0)) AND ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((x''))))) FROM rt0 GROUP BY ((((rt0.c0) ISNULL))LIKE((((rt0.c1))!=((rt0.c0))))), (+ (((x'6cc3') NOT BETWEEN (rt0.c0) AND (rt0.c2)))), ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))-((~ (rt0.c1)))); -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c2)AND(CAST(rt0.c2 AS BLOB))))AND(((rt0.c2)AND(rt0.c1)))))AND(LIKELY(rt0.c2))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((('1946358971')<(rt0.c2)))))OR((rt0.c1 IN ()))) FROM rt0 WHERE ((((('265254196')*(0.30204802061077696))) NOT BETWEEN (((-3.43661129E8) BETWEEN ('-1984616410') AND ('4J vp#_'))) AND ((((('Infinity')AND('')))OR(NULL))))) GROUP BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS TEXT); -- 0ms;
SELECT ((((rt0.c0 COLLATE RTRIM)OR(((rt0.c1)=(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0; -- 2ms;
SELECT ALL (NOT (MAX(rt0.c1))) FROM rt0 WHERE (((((((0X0)OR('su\}*I,s]')))OR(NULL))) BETWEEN (CASE WHEN 0.5287636420671007 THEN '39390543' ELSE '-1579438696' END) AND (0xffffffffbb79db96 COLLATE NOCASE))) ORDER BY rt0.c0 DESC, (((rt0.c2))<=((CAST(rt0.c1 AS INTEGER)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((x'5108' IN (rt0.c2))))=((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))))), (((((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c2))=((-1929224000, rt0.c2, rt0.c1, rt0.c2, rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (rt0.c1 COLLATE NOCASE)), NTILE(((0.5498630613352278) NOTNULL)) OVER () FROM rt0 LIMIT 639032247; -- 6ms;
SELECT DISTINCT SUM(MIN(TRIM(DISTINCT rt0.c1, rt0.c2))) FROM rt0 WHERE (CASE WHEN ((((x'cb93')OR(NULL)))AND(0X69f357a8)) THEN CAST(1316024344 AS REAL) ELSE 0.12738576585898587 COLLATE NOCASE END);SELECT ALL ((CAST(rt0.c1 AS REAL))!=(rt0.c1)), COALESCE(((rt0.c0) IS FALSE), ((rt0.c2)IS NOT(rt0.c2))), CAST(CAST(rt0.c1 AS BLOB) AS TEXT) FROM rt0; -- 0ms;
SELECT ALL (((((((rt0.c2)AND(rt0.c1)))OR(0Xffffffffbb06f496))))!=(((- (rt0.c0))))), (((rt0.c2 COLLATE BINARY, ((rt0.c2) NOTNULL), rt0.c0))<>((rt0.c1, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, (rt0.c2 IN ())))), NTILE(((IFNULL(rt0.c0, rt0.c0))+(CAST(rt0.c0 AS BLOB)))) OVER () FROM rt0; -- 0ms;
SELECT (~ ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FROM rt0 WHERE ((((('-916444891')<=(0.26127311408130627)))||(LIKELIHOOD(NULL, 0.17020879113873688)))); -- 0ms;
SELECT (((((~ (rt0.c2)))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))))AND(DATE(rt0.c2, rt0.c1, rt0.c2))), CAST(rt0.c0 COLLATE BINARY AS NUMERIC), ((rt0.c0 COLLATE RTRIM)!=((+ (rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL LAST_VALUE((((rt0.c1)>>(x'4580e62d')) IN ())) OVER () FROM rt0 WHERE (((((((0.410648857118337) BETWEEN ('-261703474') AND ('646782848')))OR(((((x'a644')OR('300160395')))OR('-1094724366')))))OR((('N[') NOT NULL)))); -- 1ms;
SELECT ((((rt0.c2)=(rt0.c1)))LIKE((rt0.c2 IN (rt0.c1)))) FROM rt0; -- 0ms;
SELECT ((((rt0.c2)AND(((rt0.c2) IS TRUE))))OR(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE BINARY IN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN x'3aba' THEN GROUP_CONCAT(rt0.c1) WHEN (- (rt0.c2)) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c0)GLOB(rt0.c2)) THEN 0Xffffffff9725048a WHEN ((rt0.c2)|(rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) WHEN MIN(-1759181686) THEN CAST(rt0.c2 AS NUMERIC) END FROM rt0 WHERE ((+ (((704709724)/('55127229'))))); -- 0ms;
SELECT (((rt0.c1)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))) AND ((MIN(rt0.c2)))) FROM rt0; -- 1ms;
SELECT ALL (- (CAST(rt0.c0 AS INTEGER))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE LIKE(rt0.c1, rt0.c1, '-')  WHEN CASE rt0.c2  WHEN rt0.c1 THEN '' END THEN ((rt0.c2)%('')) WHEN (((rt0.c0))>((rt0.c0))) THEN rt0.c1 COLLATE RTRIM WHEN rt0.c0 COLLATE RTRIM THEN NULL COLLATE BINARY ELSE MIN(0.07666088844311914) END FROM rt0; -- 0ms;
SELECT DISTINCT COUNT((rt0.c0 IN ('1268217614'))) FROM rt0; -- 0ms;
SELECT ALL CAST(rt0.c1 AS REAL) FROM rt0 WHERE (TRIM('{}''d') COLLATE NOCASE) ORDER BY ((((((3.9390543E7) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c0 END)))OR(CAST(rt0.c1 AS NUMERIC))), (~ (((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-461308398')))), ((((rt0.c0)OR(rt0.c2)))IS NOT(CAST(rt0.c1 AS TEXT))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((rt0.c1))<>((rt0.c0))))IS NOT(((rt0.c1)+(rt0.c0)))) FROM rt0 WHERE (0.006604181407105947) LIMIT -389576020 OFFSET -1381108637; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((((rt0.c0) IS TRUE))) AND (((((rt0.c0))>((rt0.c2)))))) FROM rt0 WHERE (((((0xffffffff894023d5)) NOT BETWEEN ((1331199072)) AND ((x'1974'))) IN (CAST('-405833355' AS REAL)))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((x'') ISNULL) FROM rt0 WHERE ((((0X4f587c60) NOT BETWEEN (x'') AND (-1992285227)) IN (((((0.4534376973403561)AND(x'')))AND(-554881084))))); -- 0ms;
SELECT 0.07666088844311914 FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))GLOB((rt0.c2 IN ()))) FROM rt0 WHERE ((((((0.5181246805414605)) NOT BETWEEN ((0.9283457022214542)) AND ((NULL))))/(((-1.579438696E9)||(0.5287636420671007))))) LIMIT -1062037904 OFFSET -2081137175; -- 0ms;
SELECT ALL (NOT (rt0.c2 COLLATE NOCASE)) FROM rt0 WHERE (((CAST(0xffffffffc09771ae AS REAL)) BETWEEN (CASE '2073512811'  WHEN NULL THEN NULL ELSE 0.8961456359327241 END) AND ((1323306181 IN ())))); -- 0ms;
SELECT DISTINCT (~ ('-1157172074')) FROM rt0 WHERE (HEX(DISTINCT ('1075018864' IN ()))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((NULL)*(0.7041631037327173)))>=(SQLITE_VERSION()))); -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN rt0.c1 END FROM rt0 GROUP BY rt0.c1 COLLATE RTRIM COLLATE RTRIM, (- (((rt0.c2)+(rt0.c1)))), CASE WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c2))==((rt0.c1))) WHEN (+ (rt0.c1)) THEN ((rt0.c2)>>(rt0.c2)) WHEN (~ (rt0.c2)) THEN (rt0.c0 IN ()) END; -- 0ms;
SELECT ALL ((((rt0.c0)>=(rt0.c0))) NOT NULL), CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING), MAX(((rt0.c0)<=(rt0.c1))) FROM rt0 WHERE (CAST(((x'')+('BmonthsF')) AS BLOB)); -- 0ms;
SELECT ALL COUNT(*) OVER (), ((0xffffffffc09771ae) BETWEEN (rt0.c0 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)), ((0xffffffffc9602925)+(rt0.c2)) FROM rt0 LIMIT -1654085130; -- 0ms;
SELECT DISTINCT (((((rt0.c1)!=(rt0.c2))))<((rt0.c0 COLLATE BINARY))), ABS(DISTINCT CASE WHEN 0Xffffffff988fa40d THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END), 0.5217206042367973 FROM rt0 WHERE (((TRIM(x'', x'')) NOTNULL)); -- 0ms;
SELECT ALL 0.02259448675169229 FROM rt0; -- 0ms;
SELECT LOWER((((rt0.c1))<((NULL)))) FROM rt0 GROUP BY (~ (NULL COLLATE BINARY)) HAVING ((COUNT(*)) IS FALSE); -- 0ms;
SELECT DISTINCT ((rt0.c2)/(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0 WHERE (((((-1.929224E9) BETWEEN (x'9175') AND ('-1351667475')))GLOB(((0.9456453094500706) NOTNULL)))); -- 0ms;
SELECT ALL (- (((NULL)IS(rt0.c2)))), ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>>(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))), (rt0.c2 IN (rt0.c0)) COLLATE BINARY COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL 0xffffffffbb06f496, (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((NULL, ((('N2༹N~?熮')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ABS(rt0.c2))) AND (((((rt0.c2))<((rt0.c0))), rt0.c0, rt0.c2 COLLATE NOCASE))), CASE ''  WHEN 0.7830082373381698 THEN CAST(rt0.c1 AS REAL) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) END FROM rt0 WHERE ((- (NULL)) COLLATE RTRIM) LIMIT -1910188852 OFFSET 1128332682; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE NOCASE AS REAL) FROM rt0; -- 1ms;
SELECT DISTINCT ((rt0.c1) ISNULL) COLLATE RTRIM FROM rt0 WHERE ((- (((NULL)>=(NULL))))); -- 0ms;
SELECT ALL load_extension((NOT (rt0.c1))) FROM rt0 WHERE (CAST((('1331199072')AND(0xf3f404)) AS TEXT)) LIMIT 1946358971;SELECT ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))>>(rt0.c0 COLLATE NOCASE)), STRFTIME((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('埑OVpT-'))), 'k6CM>m\nq퐍' COLLATE NOCASE, (((rt0.c0, rt0.c1, 1331199072)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1))), ((-4.61308398E8)/(rt0.c2)), (- (rt0.c2)), rt0.c2, ((rt0.c1)>(rt0.c0))), TRIM(((rt0.c1)>(rt0.c1)), (+ (rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE BINARY FROM rt0; -- 1ms;
SELECT DISTINCT AVG(((rt0.c2)||(NULL))) OVER (), UPPER(DISTINCT ((rt0.c0) BETWEEN (0x19bf272e) AND (rt0.c0))), (((LTRIM(rt0.c2)))<=(((NOT (rt0.c0))))) FROM rt0 WHERE (''); -- 0ms;
SELECT ALL (~ (rt0.c1)), FIRST_VALUE((((rt0.c1)) BETWEEN ((((rt0.c2)|(rt0.c1)))) AND ((((rt0.c1)=('[YZ')))))) OVER ( ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN (x'ceab') AND (NULL))  NULLS LAST, -2.126264252E9 COLLATE NOCASE DESC), ((((((rt0.c2)LIKE(rt0.c1)))OR((('-1157172074') BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))), ((rt0.c0 COLLATE RTRIM)LIKE(CASE NULL  WHEN 'AwaC' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=(CASE x''  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN x'3fb3' END)) FROM rt0; -- 1ms;
SELECT ALL CASE ((rt0.c0) NOTNULL)  WHEN ((rt0.c1)>(rt0.c0)) THEN TYPEOF(DISTINCT rt0.c2) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (rt0.c0 IN (rt0.c1)) WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END THEN TYPEOF(DISTINCT rt0.c2) END FROM rt0; -- 0ms;
SELECT CASE WHEN SUM(rt0.c0) THEN ((rt0.c1)-(rt0.c1)) END, ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN -2092669186 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)OR(CAST(rt0.c1 AS BLOB))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(NULL AS NUMERIC)) NOT NULL) FROM rt0; -- 1ms;
SELECT DISTINCT AVG(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) FROM rt0; -- 0ms;
SELECT ALL AVG((+ (rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))) FROM rt0 WHERE (((0.2509796199235377) BETWEEN (0.5608440754676407) AND (x'1ca7')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN (((rt0.c2 IN ()))) AND ((rt0.c1))) FROM rt0 WHERE (((CASE '-1735416819'  WHEN x'f689' THEN '1810861941' WHEN 'G-isE' THEN x'' WHEN NULL THEN 0.7685729991550411 END)==((('1106322716')<=(0.48150420463049437))))); -- 0ms;
SELECT ALL (((((+ (rt0.c0)))OR(((rt0.c1) IS FALSE))))OR(SQLITE_COMPILEOPTION_GET(rt0.c1))), ((((rt0.c1) IS FALSE))IS NOT((- (rt0.c2)))), (NOT (rt0.c2)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ((((rt0.c2) NOT NULL))<((NOT (rt0.c0)))), NULLIF(DISTINCT ((rt0.c2)GLOB(rt0.c2)), (~ (rt0.c0))), (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))) FROM rt0 WHERE ((NOT ((('1316024344') NOT BETWEEN (x'e9c0') AND (0.410648857118337))))); -- 0ms;
SELECT ALL (((rt0.c1))>=((rt0.c1))) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)) IN ()) FROM rt0 WHERE (((NULL) NOTNULL)); -- 0ms;
SELECT ((((rt0.c0 IN ())))<=(('509551425'))) FROM rt0 WHERE (((x'15d9' COLLATE RTRIM) NOTNULL)); -- 0ms;
SELECT ALL CAST(((rt0.c2) NOT BETWEEN ('	i') AND (rt0.c2)) AS BLOB), (((NULL)) BETWEEN ((rt0.c1)) AND (((NOT (rt0.c2))))), (((rt0.c1 IN ())) IS TRUE) FROM rt0 GROUP BY CAST(('-730011265' IN ()) AS BLOB), (((rt0.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND (('qy{!2r96	'))), CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END HAVING ((((rt0.c0)>>(rt0.c1))) NOT NULL); -- 0ms;
SELECT DISTINCT ((((rt0.c2)/(rt0.c2)))IS NOT((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM rt0 WHERE (CAST((('-1469992864') BETWEEN (0.3903883999665009) AND (x'a37b')) AS REAL)); -- 0ms;
SELECT DISTINCT LAST_VALUE((+ ((((rt0.c0)) NOT BETWEEN (('a{')) AND ((rt0.c1)))))) OVER () FROM rt0 NOT INDEXED; -- 0ms;
SELECT ((CASE WHEN rt0.c0 THEN rt0.c1 END)>((~ (rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c0)OR(rt0.c2))) FROM rt0 LIMIT 307621478; -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)) AS REAL), COUNT(*) OVER (), RANK() OVER () FROM rt0 GROUP BY UNLIKELY(rt0.c2) COLLATE BINARY; -- 0ms;
SELECT (DATETIME(rt0.c1, rt0.c1, rt0.c0) IN ()) FROM rt0 WHERE ((~ (((NULL) BETWEEN (0.46789585240681997) AND (x'4821'))))) GROUP BY (x'' IN ()) HAVING TOTAL((~ (rt0.c2))); -- 1ms;
SELECT SUM(CAST(rt0.c0 AS TEXT)) FROM rt0 WHERE (((((0.3001875220755468)>=('*\nuⲽ{'))) IS FALSE)); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1)|('su\}*I,s]'))) OVER () FROM rt0; -- 0ms;
SELECT AVG((~ (x'e825'))) OVER ( PARTITION BY (~ (rt0.c2 COLLATE RTRIM)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((((946233048) BETWEEN (rt0.c1) AND (rt0.c1)))))), x'2829', ((SQLITE_VERSION())<>(((rt0.c2)/(rt0.c0)))) FROM rt0 WHERE (((('')<>(NULL)) IN ())); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((CAST(x'' AS NUMERIC)))<((0x541da81)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c2 IN ())) FROM rt0 LIMIT 1185236116; -- 0ms;
SELECT ALL COUNT(((rt0.c0) NOT NULL)) FROM rt0 WHERE (((UPPER(NULL))IS NOT((~ ('0.48150420463049437'))))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ()))-((NULL IN (rt0.c1)))), NTILE(((((rt0.c0)-(rt0.c1))) BETWEEN (((rt0.c1)>=(rt0.c2))) AND ((NOT (rt0.c2))))) OVER (), rt0.c2 FROM rt0 WHERE (((0.6565878229045566 COLLATE BINARY) NOT BETWEEN (((((((((((((0.3775679731049284)OR('813149636')))OR(0.6103857858638624)))AND('&rY')))OR(NULL)))AND(x'a40c')))AND(0.17088062675239912))) AND (((0xffffffffa83ebf14) NOT BETWEEN (0.7773038485729056) AND (x''))))); -- 0ms;
SELECT COUNT(*) FILTER(WHERE CAST(((((x'6a62')OR(rt0.c0)))AND(NULL)) AS REAL)) OVER () FROM rt0; -- 0ms;
SELECT '', (NOT (rt0.c1)), ((SUBSTR(rt0.c2, rt0.c2))<=((rt0.c2 IN ()))) FROM rt0 GROUP BY CAST((rt0.c0 IN ()) AS TEXT), CASE WHEN CASE rt0.c0  WHEN 'rVC%Pj㵪豘✮' THEN NULL WHEN '-1446606665' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (('') BETWEEN (rt0.c0) AND (rt0.c1)) ELSE rt0.c0 COLLATE NOCASE END, (~ (((((((((((((rt0.c1)OR(rt0.c1)))AND(NULL)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))); -- 0ms;
SELECT DISTINCT ((NULL)&(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))) FROM rt0 WHERE ((367234136 IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT AVG(CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER)) BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) FROM rt0; -- 0ms;
SELECT DISTINCT QUOTE(AVG(0Xfcf7534)), rt0.c2, ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(NULL)))OR(rt0.c2))) IS TRUE), UPPER(((rt0.c1)-(rt0.c0))), COUNT(rt0.c0) OVER () FROM rt0 WHERE (TYPEOF((('-2081137175')>(-276470333)))); -- 0ms;
SELECT ALL (('7u') NOT BETWEEN (COUNT(rt0.c2)) AND (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))) FROM rt0 WHERE (((CASE WHEN NULL THEN '1075018864' END)*(((-1e500)&(x''))))); -- 0ms;
SELECT DISTINCT ((((MIN(rt0.c2))OR(rt0.c2)))AND(rt0.c1)) FROM rt0; -- 0ms;
SELECT ALL LAST_VALUE(((x'')>>(rt0.c0 COLLATE RTRIM))) OVER () FROM rt0 WHERE ('-1021974548'); -- 0ms;
SELECT DISTINCT ((((rt0.c1)%(rt0.c0))) IS TRUE) FROM rt0 WHERE (''); -- 0ms;
SELECT (((((rt0.c0 IN (rt0.c0)))AND(((rt0.c2) IS TRUE))))OR((rt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT CASE WHEN rt0.c1 THEN (rt0.c0 IN ()) ELSE '\rM ?ⲶRs⠦Z' END FROM rt0 GROUP BY ((((((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))|((NOT (rt0.c2)))), ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '.y' ELSE rt0.c2 END)+(rt0.c2 COLLATE NOCASE)), ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR(((rt0.c1)OR(rt0.c0)))))AND((x'' IN (rt0.c2, rt0.c2)))); -- 0ms;
SELECT DISTINCT RANK() OVER (), x'', ((~ (rt0.c1)) IN ()) FROM rt0 WHERE (((CAST(x'' AS NUMERIC)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((rt0.c1)+(((rt0.c2)>(2118177787)))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT LEAD(rt0.c1, ((((json_patch(rt0.c0, rt0.c0))OR(((rt0.c0) NOTNULL))))AND((NOT (rt0.c1)))), CASE (rt0.c1 IN ())  WHEN (((rt0.c1))<=((rt0.c1))) THEN ((rt0.c0)!=(rt0.c1)) ELSE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) END) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND (+ ((((rt0.c2, rt0.c0, rt0.c2))!=((rt0.c2, rt0.c0, rt0.c1))))) PRECEDING EXCLUDE NO OTHERS), rt0.c0, CAST((~ (rt0.c0)) AS TEXT) FROM rt0 WHERE (PRINTF(CAST('-405833355' AS NUMERIC))); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) OVER () FROM rt0 WHERE ((((((0.5359672797676169, '', NULL)) NOT BETWEEN ((x'', -1919849017, x'')) AND ((x'', NULL, NULL))))-((NULL IN ())))); -- 1ms;
SELECT DISTINCT ((load_extension(rt0.c2)) ISNULL) FROM rt0 WHERE (((LIKELIHOOD(x'7be0', 0.6982116048841881))<=((((('-1992285227')AND(x'3f621eda')))AND(NULL))))); -- 0ms;
SELECT 0.17230831276284964 FROM rt0 WHERE ((- (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL (- (((('-1288622613'))==((x''))))) FROM rt0 WHERE ((((x'') IS TRUE) IN ((~ ('367234136')), CAST('' AS INTEGER)))); -- 1ms;
SELECT ALL ((rt0.c2 COLLATE BINARY) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (GROUP_CONCAT(rt0.c2))) FROM rt0 WHERE ('' COLLATE BINARY) ORDER BY ((json_array_length(rt0.c2))&(TYPEOF(rt0.c2))) DESC; -- 0ms;
SELECT DISTINCT ((((rt0.c1)*(rt0.c2))) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(0.9211535806216894))) AND (x'')) FROM rt0 WHERE (((((NULL, '307621478', NULL)) BETWEEN (('iᖋw/ꌷ~Vk', 0.17230831276284964, x'6811')) AND ((0.9184789478807686, 0x15093d84, '1753229984'))) IN ())) LIMIT -590107300; -- 0ms;
SELECT ALL TOTAL((((rt0.c0))>((rt0.c2)))), CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS REAL), (((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)) IN ()), ((((rt0.c0)<>(rt0.c0)))IS('')), DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT (+ (NULL COLLATE BINARY)) FROM rt0 ORDER BY CAST((~ (rt0.c0)) AS BLOB) DESC  NULLS LAST LIMIT 385492025 OFFSET -115691999; -- 0ms;
SELECT FIRST_VALUE(((((rt0.c1)+(rt0.c0))) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c2))))) OVER () FROM rt0 WHERE ((((('') BETWEEN (x'') AND (NULL))) BETWEEN ((((((((('')AND('1579674162')))OR(0.26127311408130627)))OR(0Xffffffffd17cb1d2)))AND(0xffffffffbadd3547))) AND (CASE 0.3001875220755468  WHEN 8.13149636E8 THEN 0.7773038485729056 ELSE 0.41984630445260784 END))); -- 0ms;
SELECT DISTINCT (('-1919849017') BETWEEN (rt0.c0) AND (rt0.c2 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((x'')) AND ((((rt0.c0)>>(rt0.c2))))) FROM rt0 WHERE (((-138962663) NOT BETWEEN ((NOT (-1078021913))) AND ((('YFKKB!') BETWEEN ('0.248601998107007') AND (0x19bf272e))))) GROUP BY ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))&(rt0.c0 COLLATE RTRIM)) HAVING (MIN(rt0.c1) IN ()); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) BETWEEN (((rt0.c1)-(rt0.c1))) AND ((rt0.c2 IN ()))), CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) AS NUMERIC), LAG(((ABS(rt0.c0)) NOT BETWEEN (NULL) AND (((rt0.c2)=(rt0.c2)))), ((((rt0.c2)>>(rt0.c2)))=((+ (rt0.c2)))), CAST(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) AS REAL)) OVER ( ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND(CAST(rt0.c2 AS NUMERIC))))AND(rt0.c1)) DESC) FROM rt0 WHERE ((~ ((NOT (NULL))))); -- 0ms;
SELECT ALL COUNT(*) OVER ( PARTITION BY CASE WHEN 0.7071476412937068 THEN (- (rt0.c0)) END, (((rt0.c0 IN ()))!=(rt0.c1 COLLATE NOCASE)) RANGE  UNBOUNDED PRECEDING), (((TRIM(rt0.c2), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)), ((rt0.c1) ISNULL)))!=((rt0.c2 COLLATE NOCASE, rt0.c2, ((rt0.c0)>>(rt0.c0))))), CAST(((rt0.c2) IS TRUE) AS TEXT) FROM rt0 WHERE (IFNULL(DISTINCT ((x'') IS FALSE), ((NULL)>>('lK01oRgH')))) GROUP BY CAST(0xffffffffcee08387 AS NUMERIC) HAVING CAST(CASE WHEN rt0.c1 THEN rt0.c0 END AS BLOB); -- 0ms;
SELECT DISTINCT ((rt0.c0) IS TRUE) COLLATE RTRIM, LOWER((((rt0.c2))>((rt0.c1)))), UPPER(rt0.c1), MIN(GROUP_CONCAT((- (rt0.c0)))), rt0.c1 FROM rt0 WHERE ((((NULL IN (x'03a2')))<(NULL COLLATE BINARY)));SELECT DISTINCT CASE CAST(rt0.c1 AS BLOB)  WHEN COUNT(rt0.c2) THEN (~ (rt0.c1)) WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c0) ISNULL) WHEN (('Infinity') NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c2 ELSE CASE ''  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END END FROM rt0 ORDER BY '' ASC, ((((rt0.c1)/(rt0.c1))) NOT NULL)  NULLS FIRST; -- 0ms;
SELECT ALL ((MIN(rt0.c0)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 END) AND (rt0.c1)) FROM rt0 WHERE (((((HEX(DISTINCT 0.1842266852797112))OR(IFNULL(DISTINCT ' ', '-285464781'))))OR(DATETIME(0.3796487740914668, 'ozk?~*끠h⠦', '', -4.61308398E8, '-468380932')))) LIMIT -907565244 OFFSET -250863336; -- 0ms;
SELECT ALL TOTAL(x'' COLLATE BINARY) FROM rt0 WHERE (CASE WHEN (x'' IN ()) THEN CASE NULL  WHEN '-9969861' THEN '' WHEN 0.2970501397131077 THEN x'' WHEN x'' THEN 'yr0긡' ELSE 0.8116203597021524 END WHEN (-1.094724366E9 IN (374083085)) THEN ((('䞫jE]a2vz')) BETWEEN (('')) AND ((x''))) WHEN CAST(NULL AS BLOB) THEN ((x'') NOT BETWEEN (0.3812320058997478) AND (NULL)) ELSE NULL COLLATE BINARY END); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS BLOB))-(((rt0.c2)>=(0xffffffff8128c415)))), rt0.c1, (((rt0.c2)) BETWEEN (((((rt0.c0))>=((x'8042'))))) AND ((((rt0.c2)|(rt0.c1))))), rt0.c0, rt0.c1 FROM rt0 LIMIT 927121231 OFFSET 731443867; -- 0ms;
SELECT DISTINCT (+ (((rt0.c2)<=(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) ISNULL) FROM rt0 GROUP BY rt0.c0 HAVING (+ (((rt0.c0) BETWEEN ('-1748048365') AND ('0.006604181407105947')))); -- 0ms;
SELECT DISTINCT 0.474501991111973, ((((rt0.c0 COLLATE BINARY)OR(LOWER(rt0.c2))))AND(((rt0.c2) IS TRUE))), (((('1455969600') BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c2)/(rt0.c0)))) FROM rt0 WHERE (CAST(((x'a551') BETWEEN ('1731111913') AND ('')) AS TEXT)); -- 0ms;
SELECT RANK() OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 GROUP BY 0.2227043446610717, rt0.c1, (+ (rt0.c1)); -- 0ms;
SELECT ALL COUNT(*) OVER (), CAST((((rt0.c0))<=((rt0.c2))) AS TEXT), LEAD(((((rt0.c1)AND(rt0.c2))) NOTNULL), (((NOT (rt0.c2))) BETWEEN ((+ (x'4836'))) AND (((rt0.c1)|(x'')))), (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))>((((rt0.c0) IS FALSE))))) OVER ( ORDER BY ((0.5870566812493765)IS NOT(CAST(rt0.c0 AS INTEGER))) ASC) FROM rt0 WHERE ((+ (((0Xffffffff93b183c0)+('oU'))))); -- 1ms;
SELECT ALL ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>(((- (rt0.c2))))) FROM rt0 LIMIT 933664339; -- 0ms;
SELECT DISTINCT ((((rt0.c2)LIKE(rt0.c2)))AND(((rt0.c0)-(rt0.c0)))) FROM rt0 WHERE (NULL) GROUP BY ((((rt0.c0) IS TRUE))<((NOT (rt0.c0)))), (((rt0.c1 IN (rt0.c0, rt0.c1)))>=((- (rt0.c2)))), (rt0.c0 COLLATE BINARY IN ()) HAVING ((((rt0.c0)/(rt0.c1)))OR(((rt0.c2) NOT NULL))); -- 0ms;
SELECT ALL ((((0.1447409892831074)-(rt0.c1))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (CAST(rt0.c1 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL) FOLLOWING) FROM rt0; -- 0ms;
SELECT DISTINCT (TYPEOF(DISTINCT rt0.c2) IN ()), (((((rt0.c2 IN ()))AND(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))))OR(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))), INSTR(((rt0.c2) ISNULL), LIKE(rt0.c1, rt0.c1)) FROM rt0 WHERE ((NOT (x'')) COLLATE NOCASE); -- 1ms;
SELECT ALL (((((rt0.c1)>>(rt0.c2)), ((rt0.c1)IS(rt0.c2)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))<>(((- (x'')), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0)AND(rt0.c0))))) FROM rt0 WHERE ((('{}''d') BETWEEN (0.5277563211085071) AND (x'')) COLLATE BINARY); -- 0ms;
SELECT ALL ((rt0.c0 IN (rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT ((((((rt0.c0)%(rt0.c0)))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1) IS TRUE))) FROM rt0 WHERE (((NULL) IS TRUE)) GROUP BY ((rt0.c0 COLLATE RTRIM) ISNULL); -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((('m.j2') NOT NULL))AND(0.05589128291643408)))OR(((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))) OVER ( ORDER BY ((0x2464d029)GLOB(CASE WHEN rt0.c1 THEN rt0.c2 END)) ASC) FROM rt0 WHERE ((~ (((NULL) NOT BETWEEN (0.6639126346234273) AND ('-461308398'))))) GROUP BY ((((CAST(rt0.c2 AS BLOB))AND((+ (rt0.c0)))))OR(((rt0.c0)%(rt0.c2)))), (TYPEOF(rt0.c1) IN ()), ((LIKELIHOOD(DISTINCT rt0.c0, 0.33391018801851)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))), (NOT ((NOT (rt0.c1)))), (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c1, (~ (rt0.c0)), rt0.c1)) AND ((rt0.c0, rt0.c2 COLLATE RTRIM, CASE WHEN rt0.c2 THEN rt0.c2 END))) HAVING ((IFNULL(rt0.c0, 0.3753157325302926))<(CAST(rt0.c0 AS NUMERIC))); -- 1ms;
SELECT DISTINCT ((rt0.c1)>=(rt0.c1)) COLLATE NOCASE FROM rt0 WHERE (CAST('-1419370461' AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (0.9683815610536266)))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) FROM rt0 WHERE ((((('') NOT BETWEEN (840760861) AND (x'')))<((NULL IN ())))); -- 0ms;
SELECT DISTINCT 0.42170005435011104 FROM rt0 EXCEPT SELECT ((((rt0.c0) IS FALSE)) NOT BETWEEN (0.8116203597021524) AND ((+ (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE CAST('Wo' AS REAL)  WHEN (0.2124140644472423 IN ('HN')) THEN NULL COLLATE RTRIM WHEN CASE WHEN 0.15707924171002952 THEN x'4c77' WHEN x'7e73' THEN '0.1447409892831074' WHEN ']{楈' THEN '-870446353' WHEN '1967853758' THEN '' WHEN x'' THEN 0.3058464112684913 ELSE '-554881084' END THEN CAST(0.006604181407105947 AS INTEGER) WHEN (('-1469992864') ISNULL) THEN (('-1313885652')/('0.5498630613352278')) ELSE 0.8613080407233296 COLLATE RTRIM END); -- 1ms;
SELECT ALL CAST(((rt0.c2)|(rt0.c2)) AS INTEGER), (((rt0.c1)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((LIKELY(rt0.c2)))), GROUP_CONCAT((((rt0.c2, rt0.c1, rt0.c1))==((rt0.c1, rt0.c0, rt0.c2)))) FROM rt0 WHERE ((((((('-1159908025')AND(x'')))AND(300160395)))=(NULL COLLATE BINARY))); -- 0ms;
SELECT rt0.c1 FROM rt0 WHERE (((((((((CASE WHEN 0.7982543596514007 THEN 0.09398130062634602 END)OR(((((x'')AND(0X92ccfa4)))OR('()')))))OR(CAST('-695493721' AS REAL))))AND(((('-1424108531', '988391917', '1579674162'))<=((0X13190f39, x'', NULL))))))OR(NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE RTRIM)IS NOT(rt0.c2)), (((rt0.c1)) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c1)))) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))), (((((rt0.c2 IN (rt0.c2, rt0.c0)))AND((- (rt0.c2)))))AND((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))))) FROM rt0; -- 0ms;
SELECT ALL (- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(rt0.c1), ((GROUP_CONCAT(rt0.c2)) IS TRUE), ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))==((rt0.c0 IN ()))) FROM rt0 WHERE ((+ (((x'e8a6') ISNULL)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE) ASC  NULLS LAST, rt0.c1 ASC; -- 1ms;
SELECT DISTINCT ((((((((((x'5dd2')OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))IS(((rt0.c0) NOTNULL))), CASE (- (rt0.c0))  WHEN HEX(rt0.c2) THEN CAST(rt0.c1 AS INTEGER) WHEN ((rt0.c1)<(rt0.c2)) THEN rt0.c0 WHEN ((rt0.c2)<(rt0.c0)) THEN ((rt0.c0) NOTNULL) END, NTH_VALUE((((rt0.c1)<(rt0.c0)) IN ()), rt0.c1) OVER (), GROUP_CONCAT(((rt0.c2)!=(rt0.c1))) COLLATE BINARY, rt0.c0 FROM rt0 GROUP BY (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))) LIMIT -1841342511;SELECT CASE rt0.c2  WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) THEN rt0.c0 WHEN 'g쎀_' THEN GROUP_CONCAT(rt0.c0) WHEN (rt0.c2 IN ()) THEN ((((rt0.c2)AND(x'')))OR(rt0.c1)) END FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS INTEGER) FROM rt0 WHERE (((((NULL) IS TRUE)) NOT BETWEEN (((-1472282860)+(NULL))) AND (((NULL) BETWEEN (x'') AND ('15987716'))))); -- 0ms;
SELECT DISTINCT ((~ (rt0.c2)) IN ()), ((rt0.c1) IS TRUE) COLLATE NOCASE COLLATE BINARY, CAST(((rt0.c1) IS TRUE) AS NUMERIC), (~ (((((rt0.c2)OR(rt0.c2)))OR(0xfffffffff409f2a0)))), rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE((+ (((rt0.c0)LIKE(rt0.c2))))) OVER () FROM rt0 WHERE (((CAST('A5' AS BLOB)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) BETWEEN (ABS(rt0.c2)) AND (((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))) FROM rt0 LIMIT 46169747 OFFSET 1267584104; -- 0ms;
SELECT ((((rt0.c0)<=(rt0.c1)))|(((rt0.c1)IS(rt0.c1)))) FROM rt0; -- 0ms;
SELECT json_array_length((- (rt0.c2)), CAST(rt0.c2 AS BLOB)) FROM rt0;SELECT ((rt0.c2)OR(rt0.c2)) COLLATE BINARY, (+ (TRIM(rt0.c1, rt0.c1))), HEX(CASE WHEN rt0.c1 THEN rt0.c1 END) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2)>=(rt0.c2)), ((rt0.c2)IS('xp')), ((rt0.c1) IS FALSE)))<=((CAST(rt0.c1 AS NUMERIC), ((rt0.c0)||(rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c2 ELSE -46637467 END))) FROM rt0; -- 0ms;
SELECT DISTINCT ((NULLIF('cꐍ⪠[NLr	e', rt0.c0))<>((rt0.c0 IN (rt0.c2)))), CAST(TOTAL(rt0.c1) AS INTEGER), (rtreenode(rt0.c1, rt0.c1) IN ()) FROM rt0 WHERE (((0xffffffffa15616ab)<(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((0.10655999809267236, CAST(rt0.c1 AS INTEGER), rt0.c2)) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END, (NOT (rt0.c2)), ((rt0.c1)<(rt0.c1))))) FROM rt0 WHERE (TYPEOF(DISTINCT ((0X15e38c58)>('0.7071476412937068')))); -- 0ms;
SELECT DISTINCT CAST(0.8836411012288574 AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL (- (rt0.c1 COLLATE BINARY)) FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT '1512811338' COLLATE RTRIM FROM rt0 WHERE ((('-1380678595') ISNULL) COLLATE RTRIM COLLATE BINARY) GROUP BY (CASE WHEN rt0.c2 THEN rt0.c2 END IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)), DATETIME(rt0.c2, rt0.c2, rt0.c1))), (((((((((((((((rt0.c0, rt0.c0, x'', rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2, 0.7212274493092267, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0, rt0.c1, rt0.c1))))AND(CAST(rt0.c0 AS TEXT))))OR(((rt0.c1) ISNULL))))OR(((rt0.c2)+(rt0.c0)))))OR(rt0.c2)))OR(((rt0.c1)>=(rt0.c2)))))OR(((rt0.c1) NOT NULL))), (((((rt0.c1))>=((rt0.c1))))LIKE(rt0.c1 COLLATE RTRIM)), (((rt0.c0 IN ())) NOT BETWEEN (((rt0.c0)OR(rt0.c1))) AND (CAST(rt0.c0 AS INTEGER))), ((rt0.c0) ISNULL) COLLATE BINARY COLLATE BINARY HAVING CAST(rt0.c2 AS INTEGER) COLLATE BINARY; -- 0ms;
SELECT (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END IN ()) FROM rt0 WHERE ((((x'')) NOT BETWEEN ((NULL)) AND (('177809744'))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c2)IS(rt0.c2)) IN ()), CAST(((rt0.c0) NOTNULL) AS NUMERIC), (((+ (rt0.c2)))IS(0x62b60682)) FROM rt0; -- 0ms;
SELECT DISTINCT ((0.3068620258718975) NOT BETWEEN (((rt0.c0)<(rt0.c2))) AND (TOTAL(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY) IS FALSE), DENSE_RANK() OVER (), UNLIKELY((~ (rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT LIKELY(((((((((rt0.c0)AND(0.12738576585898587)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))) FROM rt0; -- 0ms;
SELECT LAST_VALUE((((rt0.c2)) NOT BETWEEN ((((rt0.c0)|(rt0.c1)))) AND ((rt0.c0 COLLATE BINARY)))) OVER () FROM rt0 WHERE ((0.15573244409076747 IN ()) COLLATE BINARY); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c0) NOT BETWEEN (3.9390543E7) AND (rt0.c2))) OVER () FROM rt0; -- 0ms;
SELECT (rt0.c0 COLLATE NOCASE IN ()) FROM rt0 WHERE (CAST('8e)Jfꤟ_z' AS REAL)); -- 0ms;
SELECT ((PRINTF(rt0.c2))IS(((rt0.c2)GLOB(rt0.c2)))) FROM rt0 WHERE (((((((0X7209fe8c)OR(x'f92b')))OR(-1.98461641E9)))!=(((x'')==(0X4ca8029f))))); -- 0ms;
SELECT ((rt0.c1) ISNULL) FROM rt0 WHERE (((CASE WHEN x'' THEN -730178074 WHEN NULL THEN -619268372 WHEN NULL THEN -1.149641834E9 ELSE x'' END) BETWEEN (CASE WHEN x'32cb' THEN 0.5052183292706468 WHEN NULL THEN -5.54881084E8 WHEN 1201444805 THEN 0.12814902803777317 END) AND ((((((((('?ᴼcTj俍?nj')AND(x'')))AND('O\MMQ')))AND(NULL)))AND('-1015617037'))))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)/((((rt0.c0))==((rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (CAST('-1446606665' AS TEXT))) FROM rt0; -- 1ms;
SELECT (NOT (MIN(rt0.c0))), COUNT(*) OVER (), DENSE_RANK() OVER () FROM rt0 WHERE (((CAST('1981467038' AS REAL)) NOT BETWEEN (LIKELY(NULL)) AND ((((((((('-1565163672')OR(-1296627227)))AND(NULL)))AND('-730011265')))OR(0.5870566812493765))))); -- 0ms;
SELECT DISTINCT ((LOWER(rt0.c0)) NOTNULL) FROM rt0 WHERE (NULL); -- 0ms;
SELECT CASE WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE BINARY ELSE (+ (rt0.c2)) END FROM rt0 WHERE (((((x'') BETWEEN (NULL) AND (NULL))) NOT BETWEEN (((('-1791209409'))<=(('681095157')))) AND (((((((((0.9456453094500706)AND(0Xffffffffcb7a543a)))OR('')))OR('ykrT祵vN{')))OR(NULL))))) LIMIT 602147834 OFFSET -816928033; -- 2ms;
SELECT DISTINCT CAST(((rt0.c1)>(rt0.c1)) AS NUMERIC), ((((rt0.c2) NOTNULL))&(((0.3630079830278411) BETWEEN (x'') AND (rt0.c0)))), CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN 0.23169739580457716 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((('')) NOT BETWEEN ((0.6939325216796611)) AND (('-405833355'))))AND('yc5,{dy')))AND(((0x5c7998ed)<(x''))))); -- 0ms;
SELECT ALL rt0.c1, (((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c0)))) BETWEEN (x'') AND (COUNT(rt0.c1))), ((rt0.c2) NOT NULL) FROM rt0 WHERE (json_remove((((0.9456453094500706))>(('162223711'))), (+ (0.8836411012288574)), (NOT (-2140361214)), (((0.049628601491700564, x'', x'74eb4bfa'))>((NULL, NULL, x'')))));SELECT ALL LTRIM(rt0.c0 COLLATE BINARY) FROM rt0 GROUP BY (NULL IN ()), ((CAST(rt0.c2 AS NUMERIC)) IS TRUE), ((RTRIM(rt0.c2)) NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)))); -- 1ms;
SELECT DISTINCT (((((rt0.c0)+(rt0.c1))))>=((0.945548441619684))) FROM rt0; -- 0ms;
SELECT ALL (((- (rt0.c1))) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c2 AS REAL) AS BLOB) FROM rt0 WHERE ((((('-1841342511') NOT NULL)) NOT BETWEEN (CAST('-533348854' AS REAL)) AND ((((((((('-138962663')OR('')))OR('䞫je]a2vz')))OR(NULL)))OR(x''))))) LIMIT -898970338 OFFSET 1505915741; -- 0ms;
SELECT ((TRIM(rt0.c1, rt0.c0)) IS TRUE) FROM rt0 WHERE ((((NOT (NULL)))>((((0.7954743832111876))=(('-1399768654')))))) LIMIT -824147065; -- 0ms;
SELECT CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOTNULL) WHEN COUNT(rt0.c2) THEN x'' WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c1)>(rt0.c1)) END FROM rt0; -- 0ms;
SELECT DISTINCT json_quote(rt0.c2) COLLATE RTRIM FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) COLLATE BINARY DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c0)%(rt0.c2)))>>(NULL)) FROM rt0 WHERE (((0.945548441619684) NOT BETWEEN (0.9261717010871798) AND (x'')) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST((- (rt0.c2)) AS NUMERIC) FROM rt0 WHERE ((((CASE 'fD'  WHEN NULL THEN x'e495' ELSE NULL END))<((((NULL) NOT BETWEEN ('CD楈') AND ('1019446344')))))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c1)<>(rt0.c0)))), NULL, TOTAL(MIN(rt0.c0, rt0.c1)) OVER (), ((ABS(rt0.c1)) NOTNULL), GROUP_CONCAT(AVG(NULL)) FROM rt0 LIMIT 1857607958 OFFSET -868245226;SELECT ALL ((((rt0.c0) ISNULL)) BETWEEN (COALESCE(DISTINCT rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c0, rt0.c1)) AND (((rt0.c0) NOT BETWEEN (0.44591725542578564) AND (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT x'8583' FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((rt0.c2) ISNULL))) FROM rt0 WHERE (CAST(CASE WHEN -1.47228286E9 THEN '-730011265' WHEN 0X672eabe9 THEN x'' WHEN 0.5974504487735844 THEN '!' ELSE NULL END AS BLOB)); -- 0ms;
SELECT ALL CAST((+ (rt0.c2)) AS REAL), (((UPPER(rt0.c1), ((0.8764432022184767)==(rt0.c2)), TRIM(rt0.c0)))<=((((rt0.c2)AND(rt0.c0)), CAST(rt0.c0 AS TEXT), ((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))))), (- (rt0.c1 COLLATE BINARY)), rt0.c2, ((rt0.c0 COLLATE NOCASE)<<(rt0.c0 COLLATE BINARY)) FROM rt0 WHERE (0Xfffffffff10c2118 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUM(rt0.c1) FILTER(WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (CAST(rt0.c0 AS BLOB)))) OVER () FROM rt0 WHERE (CAST(((NULL) BETWEEN (0.7225741113424136) AND (NULL)) AS NUMERIC)); -- 0ms;
SELECT ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))||(CAST(rt0.c1 AS REAL))), (+ (GROUP_CONCAT(rt0.c1))), (((rt0.c2, x'', rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), CASE WHEN '' THEN rt0.c1 ELSE rt0.c2 END, rt0.c1 COLLATE BINARY, ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)), CAST(rt0.c1 AS BLOB))) AND ((((0.682324092656814) IS TRUE), (rt0.c1 IN (x'4a5a')), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), ((((rt0.c0)AND(NULL)))AND(rt0.c1)), SUM(rt0.c2)))) FROM rt0 GROUP BY (((UPPER(DISTINCT rt0.c2)))>((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) HAVING (('1185236116')+(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
SELECT ALL (((NOT (rt0.c2))) IS TRUE), ((LIKELY(DISTINCT rt0.c1)) ISNULL), CASE WHEN ((rt0.c0)>(rt0.c1)) THEN NULLIF(DISTINCT NULL, rt0.c2) WHEN ((0Xffffffffef394930)||(rt0.c2)) THEN (NOT (rt0.c1)) WHEN ((rt0.c0) NOT NULL) THEN (((rt0.c1))>=((rt0.c1))) ELSE (((rt0.c2, rt0.c2, x'aea4')) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))) END, CAST(CAST('-1028951494' AS TEXT) AS REAL), (((rt0.c1 IN ()))GLOB(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) FROM rt0 WHERE ((((((NULL))>(('752467140')))) BETWEEN ((- (NULL))) AND (CASE 0.6839059869705938  WHEN NULL THEN 1316024344 ELSE 0.7196903438261255 END))); -- 1ms;
SELECT DISTINCT (((rt0.c2 IN ()))%(rt0.c1 COLLATE RTRIM)) FROM rt0 LIMIT 731443867 OFFSET 1420203782; -- 0ms;
SELECT DISTINCT (+ (rt0.c1 COLLATE RTRIM)) FROM rt0 WHERE (CASE ((0.018590744093850087)>=(0.8064528651126189))  WHEN load_extension(NULL, x'') THEN (NOT (NULL)) ELSE ((1203046617) BETWEEN ('1106322716') AND (-1841342511)) END);SELECT CAST(COUNT(rt0.c0) AS BLOB), (~ (((rt0.c2)&(NULL)))), 0.07565703642591926 FROM rt0 WHERE (((((x'')&(x'2f21')))>>(((((((((0.7479425331088062)AND(0.48311657606340563)))OR(0.7196903438261255)))OR(0.8728236504529964)))OR(NULL))))); -- 0ms;
SELECT DISTINCT ((((0.09075073186262383)<(rt0.c0))) BETWEEN (COUNT(rt0.c2)) AND (x'')) FROM rt0 WHERE (CAST((0.024298625552324205 IN ()) AS INTEGER)); -- 0ms;
SELECT ALL MAX(((rt0.c1) NOT NULL)) FROM rt0 WHERE (UNLIKELY((NULL IN ('.y', '')))); -- 0ms;
SELECT ALL rt0.c0, (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) IN ()), rt0.c1 FROM rt0 WHERE (CAST((('') BETWEEN (0.4281454828119311) AND (0.8793627877704)) AS TEXT)) GROUP BY ((rt0.c1 COLLATE NOCASE) ISNULL); -- 1ms;
SELECT ALL UNLIKELY(rt0.c0) FROM rt0 WHERE (((((0.6239340894681318) NOT BETWEEN ('0.7071476412937068') AND (x'')))>(x'c64a'))); -- 0ms;
SELECT DISTINCT AVG(COUNT(rt0.c0) COLLATE RTRIM) FROM rt0;SELECT DISTINCT (rt0.c0 COLLATE NOCASE IN ()), LAST_VALUE(((((((((((NULL)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))<=(COALESCE(rt0.c1, rt0.c0)))) OVER (), SUM('18230454') FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN (('-285464781')<>(NULL)) WHEN json_insert(0.7126336316712691, '忖.', NULL) THEN (NOT (-1735416819)) WHEN (((0Xffffffffb0c46599)) BETWEEN ((x'')) AND (('944436093'))) THEN ((NULL)<>(NULL)) ELSE (('-327765940') NOT BETWEEN ('') AND (0.5181246805414605)) END);SELECT ((IFNULL(DISTINCT rt0.c0, rt0.c2)) IS TRUE), ((((rt0.c1))>((rt0.c2))) IN ()), (((+ (rt0.c1)))IS(CAST(0x453a0fb8 AS BLOB))), (((- (rt0.c1))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c1 AS BLOB))), (rt0.c2 IN ()) FROM rt0 WHERE (((((((((((x'2ae9') ISNULL))AND((NOT (0x3dab6ca0)))))OR(0x4340fd8a)))OR(x'')))AND(((((0xffffffffdcdce65d)AND(-2.76470333E8)))OR(NULL))))) LIMIT 431957806; -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND ((((rt0.c0) ISNULL)))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ ((((rt0.c0))<=((rt0.c0))))) FROM rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c2 END IN (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)), rt0.c1)) ASC; -- 0ms;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((0.017047528664421274)OR(0.3796487740914668)))AND(0.8321139227094524)))AND(0Xffffffffd6e4ec7c)))OR(NULL)))>>(((('', NULL, '0'))=((0Xffffffff97cee613, NULL, '')))))) GROUP BY ((((((((((rt0.c2)<<(0.4833042011459654)))AND((- (rt0.c2)))))AND(NULL)))AND(((rt0.c0)!=(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM)) HAVING '-1673293270'; -- 0ms;
SELECT ALL TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c2, rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c1) BETWEEN (rt0.c1) AND ('*_'))) COLLATE RTRIM FROM rt0 WHERE (CASE ((((((((x'86b5')AND(0.48150420463049437)))AND('349935149')))AND(-1654085130)))AND(932279862))  WHEN ((x'')LIKE(x'')) THEN (NOT (0X7b5ca7eb)) END); -- 0ms;
SELECT DISTINCT ((((rt0.c0)) BETWEEN (('e\')) AND ((rt0.c2))) IN ()) FROM rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('1853555979')))))OR(UPPER(DISTINCT rt0.c1))) ASC  NULLS FIRST; -- 0ms;
SELECT (- ((+ (rt0.c2)))) FROM rt0 WHERE (((NULLIF(NULL, '-0.0'))*((NULL IN (-1579438696))))); -- 0ms;
SELECT ALL 0.15163416646617522 FROM rt0; -- 0ms;
SELECT ALL CAST(-1288622613 AS REAL), LTRIM(rt0.c2 COLLATE BINARY, ((rt0.c2)+(rt0.c0))), (+ (((rt0.c2)|(rt0.c2)))) FROM rt0 WHERE (COALESCE(DISTINCT (- ('z\rg颱Ixy F')), (~ (')}꧶{N')))) ORDER BY ''  NULLS LAST, ((load_extension(rt0.c2, rt0.c0))GLOB(((rt0.c2) BETWEEN ('-1351667475') AND (rt0.c2))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((ABS(rt0.c0))AND(((rt0.c0) IS FALSE))))OR(rt0.c1)))AND(MAX(rt0.c1))))OR(((rt0.c2) IS TRUE))) FROM rt0; -- 0ms;
SELECT ((NULL)GLOB(CAST(rt0.c1 AS TEXT))) FROM rt0 WHERE (((0.6350519054883651)<=(x'')) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ((((((((((rt0.c0)AND(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((NOT (rt0.c1)))) FROM rt0 WHERE ((CAST(0.1699106158175573 AS TEXT) IN ())); -- 0ms;
SELECT (- ((~ (rt0.c2)))) FROM rt0 ORDER BY (((rt0.c0 IN ()))GLOB(CAST(rt0.c0 AS NUMERIC))), ((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-538395227'))) NOTNULL) ASC; -- 0ms;
SELECT DISTINCT AVG(x'1732aead53bf') FROM rt0 LIMIT -1381108637 OFFSET -285464781; -- 0ms;
SELECT DISTINCT (((((rt0.c0))>=((rt0.c2))))%((rt0.c1 IN (rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL SUM(((rt0.c2) IS FALSE)) COLLATE RTRIM FROM rt0 WHERE (((COALESCE('-2092669186', 0.35830916094165477))+((((('FALSE')AND(x'')))OR(0.015816092204582022))))); -- 0ms;
SELECT DISTINCT rt0.c0, (+ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))), MIN(rt0.c0 COLLATE BINARY) COLLATE BINARY FROM rt0 ORDER BY ((highlight(rt0.c1, rt0.c2, rt0.c0, rt0.c2)) BETWEEN (NULL) AND (rt0.c2 COLLATE NOCASE)) DESC, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)-(rt0.c0)) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c2)) NOTNULL) FROM rt0 LIMIT -1006425143 OFFSET 758432758; -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c2 COLLATE BINARY)AND(rt0.c2 COLLATE BINARY)))AND(x'')))OR(((rt0.c2) BETWEEN ('gy') AND (rt0.c2)))))OR((((rt0.c0, rt0.c2, rt0.c1))>((rt0.c0, rt0.c0, rt0.c2))))))OR(rt0.c2 COLLATE BINARY)))AND(((rt0.c1)=(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL ((-1.38962663E8) NOT NULL) FROM rt0 LIMIT 1758597927 OFFSET -2128034795; -- 0ms;
SELECT AVG(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOTNULL) FROM rt0; -- 0ms;
SELECT (rt0.c2 IN ()) COLLATE NOCASE, (NOT (rt0.c1 COLLATE NOCASE)), COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL ((0.188268027870928) NOTNULL) FROM rt0; -- 0ms;
SELECT CASE ((rt0.c0)<=(rt0.c1))  WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN 0.8431068828155776 END WHEN (rt0.c1 IN ()) THEN ('' IN ()) WHEN NULL THEN (((rt0.c1, '', rt0.c0))=((rt0.c2, rt0.c2, rt0.c1))) ELSE rt0.c0 END FROM rt0 WHERE ((CAST(0Xffffffffdd5ef83f AS TEXT) IN ())); -- 1ms;
SELECT COUNT(*), '}Lg', RANK() OVER ( GROUPS x'' PRECEDING EXCLUDE NO OTHERS) FROM rt0 WHERE ((TRIM(DISTINCT x'd65d') IN ())) GROUP BY x''; -- 0ms;
SELECT FIRST_VALUE(TOTAL_CHANGES()) OVER () FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c1))==((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c0))))|((NOT (rt0.c2)))), json_patch(rt0.c2 COLLATE BINARY, CAST(rt0.c0 AS REAL)), rt0.c1 FROM rt0 WHERE (CHANGES()); -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))) AND ((((('')AND(rt0.c0)))OR(rt0.c2)))), LAG((((0.956079293699162, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) COLLATE RTRIM COLLATE RTRIM, (NOT ((rt0.c1 IN (rt0.c1, rt0.c2)))), (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))) OVER ( ORDER BY (('-1446606665')-(CASE WHEN rt0.c1 THEN '' ELSE rt0.c1 END)) DESC), ((((~ (rt0.c2))))<>((((rt0.c2)<<(rt0.c0))))), CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c2)<=(rt0.c1)) END, (((((rt0.c1))==((0.368205035436328)))) IS FALSE) FROM rt0 GROUP BY NULL; -- 0ms;
SELECT (NOT (CAST(rt0.c0 AS REAL))) FROM rt0; -- 0ms;
SELECT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY FROM rt0 WHERE (0.872777681415008); -- 0ms;
SELECT ALL (rt0.c2 IN ()) COLLATE RTRIM FROM rt0 LIMIT 432337273; -- 0ms;
SELECT CASE (((rt0.c2)) BETWEEN ((rt0.c2)) AND (('ㅡ0')))  WHEN NULLIF(rt0.c0, rt0.c0) THEN ((rt0.c2)<<(rt0.c0)) END, (((NULL) IS TRUE) IN ()), ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))<((CAST(rt0.c2 AS REAL)))) FROM rt0 WHERE (((('')) NOT BETWEEN ((((NULL) NOT BETWEEN (2079250618) AND (0.6304388780330412)))) AND (((~ (NULL)))))) ORDER BY ((((((((((rt0.c0)==(rt0.c2)))AND(rt0.c1 COLLATE RTRIM)))AND(((rt0.c0)|(rt0.c1)))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((rt0.c2) NOTNULL)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c0))<=((((rt0.c2, rt0.c1, rt0.c1))>((rt0.c2, rt0.c0, rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1))) OVER ( ORDER BY ((LIKELIHOOD(rt0.c1, 0.18818916771116945)) BETWEEN ((NOT (rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) DESC, 0.9448568403520392 COLLATE RTRIM  NULLS LAST) FROM rt0 GROUP BY ((((rt0.c1)<<(rt0.c1)))>>(rt0.c1 COLLATE NOCASE)) HAVING (((rt0.c2)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(LAST_INSERT_ROWID())) FROM rt0; -- 0ms;
SELECT (GROUP_CONCAT(rt0.c1) IN ()) FROM rt0 LIMIT -824147065; -- 0ms;
SELECT ALL ((((rt0.c1)GLOB(rt0.c0))) NOTNULL), ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))%(SQLITE_COMPILEOPTION_USED(rt0.c2))), CASE rt0.c1 COLLATE NOCASE  WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) THEN 0.1447409892831074 END FROM rt0; -- 0ms;
SELECT rt0.c0 FROM rt0 WHERE (json_extract(((1e500)==(0.28586292223075804)), 0.43553348538862224 COLLATE NOCASE));SELECT DISTINCT UPPER(DISTINCT ((rt0.c1) NOT NULL)), ((((rt0.c2)!=(0.09790176852078869)))>(rt0.c1)), x'' FROM rt0 WHERE (((((x'') NOT BETWEEN (x'07c0') AND ('.tR'))) NOT NULL)); -- 0ms;
SELECT ALL (NOT ('X8')) FROM rt0 WHERE ((0.9341621743077726 COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE))||(TRIM(DISTINCT rt0.c0))), (((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, '*D>W3{Z(᷑')) AND ((rt0.c2, rt0.c1, rt0.c2))), MIN(rt0.c1)))>((json_remove(rt0.c2, rt0.c0, rt0.c0, rt0.c2), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c1))), (('-1023240' COLLATE NOCASE)/(NULLIF(DISTINCT rt0.c2, rt0.c0))) FROM rt0;SELECT DISTINCT (((GLOB(rt0.c2, rt0.c1), (((rt0.c2))<=((rt0.c2))), COUNT(*)))>((COUNT(rt0.c1), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), rt0.c2 COLLATE BINARY))), CAST((- (rt0.c2)) AS TEXT), (((rt0.c1) BETWEEN (rt0.c2) AND (0.10489574166155802)) IN ()) FROM rt0; -- 0ms;
SELECT ALL MAX(((rt0.c1) IS TRUE)) FROM rt0 WHERE (CAST('-1723844211' AS NUMERIC)); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT ALL NULLIF(DISTINCT CASE WHEN x'' THEN rt0.c0 END, TOTAL(rt0.c0)) FROM rt0 WHERE (CASE WHEN NULL THEN (NOT (NULL)) ELSE ((0.36208974191664156) NOTNULL) END); -- 0ms;
SELECT ALL ((((rt0.c2) IS TRUE))<=(CAST(rt0.c2 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (279011163) ORDER BY (((((((((((rt0.c0)AND('0.1447409892831074')))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0))))<=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))); -- 0ms;
SELECT DISTINCT (((+ (0.5924358464850771))) IS FALSE), ((((rt0.c2)OR(LIKELY(DISTINCT rt0.c2))))OR(((rt0.c2)IS(rt0.c0)))), RTRIM(rt0.c1 COLLATE NOCASE) FROM rt0 WHERE (-1922510585 COLLATE RTRIM); -- 0ms;
SELECT 0.5130959487983332 FROM rt0 WHERE (((NULL COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT ALL ((((rt0.c1) NOTNULL))&(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c2 END) NOT NULL), ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS FALSE), LEAD((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) IN (((rt0.c1)LIKE(rt0.c1)), rt0.c2)), IFNULL(rt0.c2, rt0.c0 COLLATE NOCASE), (+ (((rt0.c0)>(rt0.c1))))) OVER () FROM rt0 WHERE (((NULL) NOT BETWEEN (((0X6342627d)<>(0.9349595241046459))) AND (CAST('-824147065' AS BLOB)))) ORDER BY CASE LIKELY(rt0.c1)  WHEN ((rt0.c2) NOT NULL) THEN (((('惀?')AND(rt0.c1)))OR(rt0.c0)) END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (((rt0.c2)-(0X16861575)))) FROM rt0 WHERE (((((('')) BETWEEN ((0.6756879642985552)) AND (('.y')))) ISNULL)); -- 0ms;
SELECT '' FROM rt0 WHERE (((NULL COLLATE BINARY) NOT BETWEEN (CAST(-1.759181686E9 AS INTEGER)) AND ((((x'2019')) NOT BETWEEN ((0Xfffffffff4a99907)) AND (('FALSE')))))); -- 0ms;
SELECT rt0.c0 FROM rt0 LIMIT 831880917; -- 1ms;
SELECT CASE ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))  WHEN TOTAL(rt0.c1) THEN rt0.c0 COLLATE BINARY ELSE 0xffffffffc4151de7 END FROM rt0; -- 0ms;
SELECT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY, ((NULLIF(rt0.c0, rt0.c0))<(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), ((CAST(rt0.c1 AS REAL))IS NOT((rt0.c0 IN (rt0.c0)))) FROM rt0 WHERE ((((('t') BETWEEN (NULL) AND ('1331199072')))+(((0xffffffff8257a20a) NOTNULL)))) GROUP BY rt0.c1, (((((NULL) NOT NULL)))>=((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))), ((0.7317908034956235)%(LIKELY(DISTINCT rt0.c1))); -- 0ms;
SELECT GROUP_CONCAT(CAST(rt0.c2 AS BLOB) COLLATE NOCASE) OVER () FROM rt0 WHERE (((((x'')) NOT BETWEEN ((0Xffffffff97cee613)) AND (('0.5300688885772193'))) IN (CASE x'869d'  WHEN 2.118177787E9 THEN NULL END))); -- 0ms;
SELECT DISTINCT x'cee8' FROM rt0 WHERE (((LIKELIHOOD(DISTINCT x'0230', 0.25755064166375086))!=(LIKELY(DISTINCT x'')))); -- 0ms;
SELECT DISTINCT '-1021974548' FROM rt0; -- 0ms;
SELECT ALL LIKELY(DISTINCT ((rt0.c0) BETWEEN (NULL) AND (rt0.c1))) FROM rt0 WHERE (((CASE WHEN '' THEN 0.1634599173454232 ELSE x'40f03362' END) NOT BETWEEN (json_object(NULL, '-1910188852', 0.5811132592905663, '')) AND (CAST(NULL AS BLOB))));SELECT DISTINCT rt0.c2 COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT 0.5870566812493765, ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2)) COLLATE RTRIM, (~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 LIMIT 1128332682 OFFSET -138962663; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), '-1094724366', ((((CASE rt0.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)AND(rt0.c1 COLLATE RTRIM)))AND(CAST(rt0.c0 AS NUMERIC))) FROM rt0 WHERE ((((('V''\#cnow%UnK') NOT BETWEEN (NULL) AND (x'4d21'))) NOT NULL)); -- 0ms;
SELECT ALL (((((rt0.c0)OR('-1094724366')))AND(rt0.c0)) IN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN x'1c6f' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0; -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c0)) NOT NULL), ((((CAST(rt0.c1 AS INTEGER))AND((+ (rt0.c0)))))AND((NOT (rt0.c2)))), LAG((((((((rt0.c2))<((rt0.c1))))OR(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(CASE rt0.c0  WHEN '1810861941' THEN rt0.c1 END)), ((((rt0.c0) NOT NULL)) ISNULL), ((((rt0.c1)>(rt0.c1))) NOTNULL)) OVER () FROM rt0 NOT INDEXED WHERE (CASE WHEN (x'' IN ()) THEN 0.6238166796881156 COLLATE RTRIM WHEN ((0Xffffffff833f47ab) NOTNULL) THEN (('') NOT NULL) WHEN CASE WHEN '' THEN '-643508129' END THEN (((0.6826611856458418)) BETWEEN ((0.8423196579669792)) AND ((x'25e7'))) ELSE ((x'') ISNULL) END) GROUP BY ((COALESCE(rt0.c2, rt0.c0, rt0.c2, rt0.c0))==((rt0.c0 IN (rt0.c2, rt0.c1)))); -- 0ms;
SELECT ALL (- (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)), (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()), MAX(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0 WHERE (((CAST(0.5209207353741704 AS TEXT))OR(CAST('1782603647' AS TEXT)))) LIMIT -920954702 OFFSET 925094483; -- 0ms;
SELECT CAST(MIN(rt0.c0) AS BLOB), rt0.c2, ((rt0.c0 COLLATE RTRIM) NOTNULL) FROM rt0 GROUP BY ((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, -3.43661129E8, rt0.c2)) AND ((rt0.c1, rt0.c2, x'a3e4'))))) HAVING ((((((((((x'')AND(rt0.c1)))OR(0Xffffffff894023d5)))AND(rt0.c2)))AND(rt0.c1)))%(CAST(rt0.c0 AS TEXT))) LIMIT 1181618622 OFFSET 1975628725; -- 1ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) NOTNULL) FROM rt0; -- 0ms;
SELECT (NOT ((~ (rt0.c0)))) FROM rt0 WHERE ((NOT ((('-549502465') BETWEEN (8.45936518E8) AND ('ќo'))))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) NOTNULL), rt0.c0, ((((((rt0.c2))=((rt0.c0))), GROUP_CONCAT(rt0.c0), ((rt0.c1)OR(rt0.c2))))<=((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), ((rt0.c2)<(rt0.c2))))) FROM rt0; -- 0ms;
SELECT ALL (((((((rt0.c1))==((rt0.c0))))OR(rt0.c0 COLLATE BINARY)))AND(rt0.c0)), ((((rt0.c0)GLOB(rt0.c2)))&(rt0.c2)), NTILE(CAST(CAST(rt0.c0 AS TEXT) AS BLOB)) OVER ( ORDER BY (((+ (rt0.c2))) IS FALSE) ASC) FROM rt0 GROUP BY 565126967 HAVING ((CAST(rt0.c0 AS REAL)) NOT NULL);SELECT ALL ((((rt0.c0)<(rt0.c1)))>>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0 GROUP BY ((((((((CASE WHEN rt0.c1 THEN '845936518' END)AND(IFNULL(DISTINCT rt0.c0, rt0.c0))))OR(((rt0.c1)AND(0.9860550597910521)))))OR((((rt0.c2, '646601555', rt0.c0))==((rt0.c0, rt0.c2, rt0.c0))))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) HAVING NULL LIMIT 1582680329; -- 0ms;
SELECT CAST(CASE '-1539977603'  WHEN rt0.c1 THEN rt0.c0 END AS TEXT), ((((rt0.c0)AND(rt0.c1)))>=(rt0.c2)), MIN(((((((((x'c10d')OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((COUNT(rt0.c0))AND(CAST(rt0.c2 AS REAL))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))) FROM rt0 WHERE (CAST(((0xffffffffcee08387)>=(x'')) AS NUMERIC)); -- 0ms;
SELECT (((+ (rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c1))) AND ((rt0.c0 IN (rt0.c2)))) FROM rt0 WHERE ((((('-369674349')|(NULL)))>(((0.34140191092222827)&(0.0))))); -- 0ms;
SELECT ALL 'U⍁4굵', ((((rt0.c0)=(rt0.c2)))IS(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))), ((((((rt0.c2)|(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))AND(((rt0.c1)<=(rt0.c1)))) FROM rt0 WHERE ((((0.28423104576183544)) NOT BETWEEN ((((0.06858382065589663)%(x'')))) AND ((json_array_length(0.6765999293008735, NULL))))); -- 0ms;
SELECT DISTINCT (((STRFTIME(rt0.c0, rt0.c2, rt0.c1), TOTAL(rt0.c1), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)), AVG(rt0.c2), (('1316024344') NOT BETWEEN (rt0.c0) AND (NULL))))!=((TOTAL(rt0.c1), ((rt0.c0)>=(rt0.c1)), rt0.c2 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), ((rt0.c1)==(rt0.c1))))), ((CAST(rt0.c2 AS INTEGER)) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (TOTAL(rt0.c1))), ((rt0.c0) IS FALSE) COLLATE NOCASE, ((((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))GLOB((((rt0.c2, rt0.c0, rt0.c2))>((rt0.c2, rt0.c2, rt0.c2))))), ((((0Xfffffffffa825772)AND((((rt0.c1))>=((rt0.c1))))))OR(TRIM(DISTINCT rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR((rt0.c2 IN ()))))OR((~ (0.6939325216796611)))) FROM rt0 WHERE (ABS(DISTINCT ('2082058546' IN ()))) ORDER BY (((rt0.c0)) NOT BETWEEN ((json_array(rt0.c0, rt0.c1))) AND ((LIKE(rt0.c1, rt0.c1))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((NULL))<((((rt0.c2)IS(rt0.c0))))) FROM rt0 WHERE ('(w'); -- 0ms;
SELECT DISTINCT NULL FROM rt0 LIMIT 494412767; -- 0ms;
SELECT DISTINCT CAST(load_extension(rt0.c0) AS REAL) FROM rt0 WHERE ((((NULL IN ()))<(LIKE(x'a106', NULL)))); -- 0ms;
SELECT ((((((((CAST('ЌO' AS INTEGER))AND(((rt0.c2) IS FALSE))))OR(rt0.c0)))AND(((((((((rt0.c2)OR(rt0.c1)))AND('1075018864')))OR('-1415977857')))OR(rt0.c2)))))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))) FROM rt0; -- 1ms;
SELECT DISTINCT (NOT ((+ (rt0.c2)))) FROM rt0 WHERE ((((- ('2068000353')))>>((NULL IN ())))); -- 0ms;
SELECT DISTINCT '()', NULL, QUOTE('0.2227043446610717') FROM rt0 WHERE ((- ((((x'')) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT ALL AVG(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) FROM rt0 WHERE (((((((((x'')AND('0.1842266852797112')))OR(x'')))OR((((374083085, 0.11935518818539015, -9.16444891E8))!=((x'1c55', '^', x''))))))OR(((0.42512405515029006) IS FALSE)))); -- 0ms;
SELECT ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(NULLIF(DISTINCT rt0.c1, rt0.c2))))AND(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2))) AND (CAST(rt0.c2 AS BLOB))), AVG(CAST(rt0.c0 AS REAL)) FILTER(WHERE ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND(LOWER(rt0.c2)))) OVER (), (~ (rt0.c2 COLLATE BINARY)) FROM rt0 WHERE (0.3812320058997478) ORDER BY ((((((((rt0.c0)AND('te6P' COLLATE NOCASE)))OR(LIKELY(rt0.c0))))AND((((rt0.c2))<((rt0.c0))))))OR(rt0.c0)) DESC; -- 0ms;
SELECT ALL (((((((((((((rt0.c1)OR('352927108')))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) IN (TRIM(rt0.c1, rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((0X4c492131 IN ('-780357166', '0.7196903438261255'))) BETWEEN ((((0.9110978010558448)) NOT BETWEEN ((NULL)) AND (('')))) AND ((('0.024298625552324205')>(NULL))))) GROUP BY ((rt0.c1)|(rt0.c1)) COLLATE NOCASE, (+ (0x614a4c42)), (((~ (rt0.c1)))<=(NULL)) HAVING ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))/(((rt0.c2)&(rt0.c0))));SELECT ALL ((GROUP_CONCAT(rt0.c0)) ISNULL) FROM rt0 WHERE (((('-2128034795'))<>((''))) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE '-982433162' COLLATE BINARY  WHEN CAST('' AS BLOB) THEN x'' END); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS TEXT)) IS TRUE) FROM rt0; -- 0ms;
SELECT (((rt0.c2)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((rt0.c0)-(rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c2 COLLATE BINARY COLLATE BINARY) OVER () FROM rt0; -- 0ms;
SELECT TOTAL(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) FROM rt0 GROUP BY ((((ABS(rt0.c0))OR(NULL)))OR(((0.41259158683804587) IS TRUE))) HAVING 0.5999178173565926; -- 0ms;
SELECT DISTINCT (((rt0.c2)+(rt0.c1)) IN (CAST(0.8978705639060026 AS NUMERIC))) FROM rt0 LIMIT 44194677 OFFSET -1578778818; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c2)OR(rt0.c2))) FROM rt0 LIMIT -235345543; -- 0ms;
SELECT (((rt0.c0 IN ()))%(SUM(rt0.c0))), (((((0xffffffffc376e9f3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))IS NOT((NOT (rt0.c1)))), CAST((rt0.c0 IN (rt0.c2)) AS REAL) FROM rt0 WHERE ((NOT ((('1331199072')/(0X390a9dfe))))) ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c1 ELSE rt0.c0 END; -- 0ms;
SELECT '-778776415' FROM rt0 WHERE ((((((x'')LIKE(NULL))))<=((CAST(NULL AS TEXT))))) LIMIT 509551425; -- 0ms;
SELECT DISTINCT MIN((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) FROM rt0 WHERE ((((NOT (NULL)))-((0x4b97770e IN ())))); -- 0ms;
SELECT ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))>=(((rt0.c2)GLOB(rt0.c0)))), ((rt0.c0)||(rt0.c1)) COLLATE NOCASE, GROUP_CONCAT(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) OVER ( PARTITION BY (NOT (CAST(rt0.c1 AS TEXT))), CAST(rt0.c1 AS REAL) ORDER BY ((('N2༹N~?熮'))>((rt0.c2 COLLATE NOCASE))), CAST(((x'') BETWEEN (rt0.c1) AND (rt0.c1)) AS REAL) DESC  NULLS FIRST) FROM rt0 WHERE (CAST((NOT (0.5949131241598817)) AS REAL)); -- 1ms;
SELECT DISTINCT CAST(CASE WHEN '646782848' THEN rt0.c1 ELSE rt0.c0 END AS BLOB) FROM rt0 WHERE ((((0.03001479286463682 IN ())) BETWEEN ('D]Wc') AND (UNLIKELY(DISTINCT '-1157172074')))); -- 0ms;
SELECT DISTINCT NTILE(((((rt0.c1)IS NOT(rt0.c0))) NOT NULL)) OVER () FROM rt0 WHERE ((('c<ZfX 2Jd') IS FALSE)) ORDER BY ((rt0.c2 COLLATE BINARY)<(LIKELIHOOD(DISTINCT rt0.c0, 0.5455778731571473))) DESC; -- 0ms;
SELECT ((x'') NOT BETWEEN (NULL) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM rt0 WHERE (IFNULL(DISTINCT (('1087756829') NOT NULL), ((NULL) ISNULL))); -- 0ms;
SELECT CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS BLOB) FROM rt0 WHERE ((((((('*\nuⲽ{')!=(0.6371067164838665)))AND((x'' IN ()))))AND('-1929224000' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT json_array_length(CAST(rt0.c0 AS TEXT), COUNT(*)), NTILE((((rt0.c0)LIKE(rt0.c1)) IN ())) OVER (), COUNT(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) OVER () FROM rt0 WHERE ((((((x'', x'', ')}꧶{N'))=(('1731111913', x'', x''))))IS NOT(0.09075073186262383 COLLATE RTRIM)));SELECT DISTINCT '~~' FROM rt0; -- 0ms;
SELECT DISTINCT NTILE((((((rt0.c0)==(rt0.c1))))<((IFNULL(NULL, rt0.c1))))) OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 WHERE ((((NULL, x'', '0.8961456359327241')) BETWEEN ((-7.98039636E8 COLLATE BINARY, (((((((('-704375413')OR('-1157172074')))AND(0Xffffffff835f6153)))OR('')))AND(-648327364)), ((('-696494379', x'', NULL, '1567354347', 0x2fa4dbc2))!=((1.753229984E9, NULL, 0.16163497310925712, '', NULL))))) AND ((((x'd276') BETWEEN ('-389576020') AND ('')), (('0.26822958418221987')IS('770649996')), CAST(NULL AS TEXT))))); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c0) AS REAL), CAST((NOT (rt0.c1)) AS NUMERIC), rt0.c0, ((x'') NOT BETWEEN (AVG(rt0.c0)) AND (((rt0.c2) IS FALSE))), rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0)))LIKE(((rt0.c0)-(rt0.c2)))) FROM rt0 WHERE ((~ ((((''))<=(('0')))))) GROUP BY ((((rt0.c1) IS FALSE)) NOT NULL) HAVING ((((~ (rt0.c2))))<=((((((rt0.c0)OR(' y')))OR(rt0.c0))))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) IS FALSE), HEX(DISTINCT rt0.c1) COLLATE BINARY, ((CAST(rt0.c2 AS INTEGER)) NOTNULL) FROM rt0 WHERE (CAST('-1062037904' COLLATE BINARY AS INTEGER)); -- 0ms;
SELECT DISTINCT (rt0.c2 IN (((rt0.c0)%(rt0.c2)), x'')) FROM rt0; -- 0ms;
SELECT LTRIM(((rt0.c2) NOT BETWEEN (rt0.c0) AND ('-468380932'))) FROM rt0 WHERE (((((NOT (x'')), x'', TYPEOF(DISTINCT '-963139206'), ((NULL) BETWEEN ('927121231') AND ('')), '0.46615923590878483'))<=((CASE NULL  WHEN NULL THEN -7.30011265E8 ELSE NULL END, ((('-1735416819')) NOT BETWEEN ((1.8230454E7)) AND ((NULL))), (NOT (x'')), '0.7954743832111876', ((((((((NULL)AND(-1.288622613E9)))AND('{(')))OR('fBᥥ%ܴh')))AND(x'')))))); -- 0ms;
SELECT COALESCE((rt0.c0 IN (rt0.c0)), (+ (rt0.c0))), (NULL IN ()), GROUP_CONCAT((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), CASE rt0.c0  WHEN rt0.c2 THEN 'e1e_sKa' END, rt0.c0 COLLATE BINARY)) AND (((~ (rt0.c0)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) FROM rt0 WHERE (((((ABS(NULL))OR(((NULL) IS FALSE))))AND(((0.4377077395315946)%('648328776'))))); -- 1ms;
SELECT ALL SUM((rt0.c0 IN ())), LEAD('/ᥕ', (rt0.c0 IN ()) COLLATE RTRIM COLLATE RTRIM, x'') OVER (), 0.2227043446610717 FROM rt0 WHERE (CAST(((x'3bf1') NOT BETWEEN (x'') AND ('')) AS TEXT)) LIMIT -1021974548 OFFSET 1039742201; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c0))IS NOT(((rt0.c2)IS(rt0.c2)))), (((rt0.c1)) BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(NULL)))) AND ((((rt0.c2)%(rt0.c0))))), CUME_DIST() OVER () FROM rt0 WHERE ((((x'', NULL, '-276470333')) BETWEEN ((NULL COLLATE BINARY, ((x'13bd')|(0.7453270630773022)), ((x'9ba6') ISNULL))) AND ((((2115334560) NOT BETWEEN (x'8745fafd') AND (NULL)), TRIM(DISTINCT NULL, x''), CASE WHEN -1419580649 THEN NULL END)))); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE '' END)AND(MAX(rt0.c1))))AND(((('', rt0.c2, rt0.c2))>=((rt0.c0, rt0.c1, rt0.c0))))) FROM rt0 ORDER BY (((x'')>=(rt0.c2)) IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM rt0 WHERE (LIKELY(CASE NULL  WHEN x'' THEN NULL ELSE '-926722961' END)) LIMIT -242846975 OFFSET -1014591020; -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 1ms;
SELECT DISTINCT CASE (rt0.c1 IN (rt0.c0))  WHEN '770649996' THEN ((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(NULL)))AND(rt0.c1)))OR(rt0.c2)) END, CASE TOTAL(rt0.c2)  WHEN '-657887907' THEN ((rt0.c1)>>(rt0.c2)) ELSE ((rt0.c2)>=('')) END, (rt0.c0 IN ()) COLLATE BINARY FROM rt0 LIMIT -1351667475 OFFSET -470785831; -- 0ms;
SELECT SUM(((rt0.c0)==(rt0.c0)) COLLATE BINARY) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (AVG(rt0.c0))) FROM rt0 WHERE (0.057978986290475376) ORDER BY SQLITE_COMPILEOPTION_USED((- (x'77fb'))); -- 0ms;
SELECT DISTINCT '' FROM rt0 WHERE ((((NULL, '265254196', 0.6218889427991015)) NOT BETWEEN ((NULL, ('cZIP' IN ()), x'8a6e' COLLATE BINARY)) AND ((CASE x''  WHEN NULL THEN x'' WHEN 0Xfffffffff21a8fad THEN NULL WHEN 1885323966 THEN x'0a34' ELSE x'' END, json_array_length(0x164c0e0d), load_extension(x''))))) GROUP BY (((rt0.c2, rt0.c1, 0.3775679731049284, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c1))=((rt0.c1))), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)), x'', (('*d>w3{z(᷑') NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c2)<=(rt0.c2)))) AND (((rt0.c0 IN (rt0.c1)), LENGTH(rt0.c0), CAST(rt0.c2 AS NUMERIC), (((rt0.c0, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, x''))), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) HAVING ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE, CASE (rt0.c1 IN ())  WHEN 0.5289551123762123 THEN ((rt0.c2)GLOB(rt0.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END END, -1.929224E9 FROM rt0; -- 0ms;
SELECT DISTINCT (~ (((rt0.c0)||(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE (~ (rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c0) NOT NULL) ELSE CASE rt0.c0  WHEN rt0.c1 THEN 'Ns' WHEN rt0.c1 THEN rt0.c0 WHEN 1284197775 THEN rt0.c2 ELSE rt0.c1 END END FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((('-730011265') BETWEEN (0.9040025472889178) AND (NULL))))>=((((((NULL)AND(0Xfffffffff78f30c2)))AND(-269972494)))))); -- 0ms;
SELECT ABS(((rt0.c2)/(rt0.c2))), (- (((rt0.c2)LIKE(rt0.c2)))), (- (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))) FROM rt0 LIMIT -81206822; -- 0ms;
SELECT x'', ((CAST(rt0.c0 AS NUMERIC))==(rt0.c0 COLLATE NOCASE)), SUM(LAST_INSERT_ROWID()) OVER () FROM rt0 WHERE ((((-1.7976931348623157E308 COLLATE NOCASE))<=((CASE x''  WHEN 0.5601618494633883 THEN x'' WHEN '-1910188852' THEN 'fy\n)n' WHEN 651749260 THEN x'' ELSE 0.5185936426241301 END)))); -- 0ms;
SELECT DISTINCT SUM((- (rt0.c0))), ROW_NUMBER() OVER (), (((rt0.c2)) BETWEEN ((2.5902442E7 COLLATE RTRIM)) AND ((TYPEOF(rt0.c0)))) FROM rt0 WHERE ((NOT ((('0.46615923590878483')||(x''))))) ORDER BY NULL DESC; -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CASE WHEN rt0.c0 THEN rt0.c1 END)), ((((rt0.c1)<=(rt0.c2)))OR(CAST(rt0.c2 AS INTEGER))), COUNT(*) FROM rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS REAL)  NULLS FIRST, (LOWER(DISTINCT NULL) IN ()) DESC, ((json_extract(rt0.c1, rt0.c0))|(((rt0.c1)IS(rt0.c1)))) DESC; -- 0ms;
SELECT DISTINCT NULLIF(x'' COLLATE NOCASE, ((((rt0.c2)OR(0.05535687476426032)))AND(rt0.c1))), rt0.c1, (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c1 AS INTEGER), COALESCE(DISTINCT rt0.c1, rt0.c2)))>=((x'ff693e0e', (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0))))) FROM rt0 GROUP BY rt0.c1 LIMIT -1668677250; -- 0ms;
SELECT DISTINCT MAX((((rt0.c0))=((rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT (((((rt0.c1 IN (rt0.c1, rt0.c0)))AND((- (rt0.c2)))))AND(NULL)) FROM rt0 WHERE (((CASE x''  WHEN x'' THEN 0.6053998846099058 ELSE 0.10226363063561505 END)LIKE((('-1722995510')-(x''))))); -- 1ms;
SELECT DISTINCT MIN(((rt0.c1)|(rt0.c2))) FROM rt0; -- 0ms;
SELECT ALL CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC) FROM rt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (NULL))) NOT BETWEEN (((0.9106241375933087)IS NOT('Y-7369551793751219055:398 1525212174523980844T1241T1163T460:6796556611916864977:832-ᒻ'))) AND (((x'86c2') NOT BETWEEN (0Xffffffff833f47ab) AND (NULL))))); -- 0ms;
SELECT ALL HEX(rt0.c1), CAST(CAST(rt0.c2 AS REAL) AS INTEGER), 0.7834711767970076 FROM rt0 WHERE (((CASE WHEN NULL THEN 0.6606060135075773 WHEN 165054736 THEN ']' WHEN x'd6e4' THEN -2.092669186E9 ELSE '636659575' END)<((NOT (0X41f1251c))))); -- 0ms;
SELECT ALL CAST(((rt0.c2)>>(rt0.c1)) AS TEXT) FROM rt0 WHERE (((((CASE x''  WHEN x'' THEN -1015617037 WHEN NULL THEN x'' WHEN x'' THEN NULL END)OR(x'')))OR(CAST(x'' AS TEXT)))); -- 0ms;
SELECT ALL NULL FROM rt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c2)-(rt0.c0))) FROM rt0 LIMIT -384012488; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))) AND (((- (rt0.c1))))) FROM rt0 WHERE (((CAST('0.7773038485729056' AS NUMERIC)) BETWEEN ((('')IS NOT(x'c814'))) AND (((0xffffffffeb2dba66)AND('Aede'))))); -- 1ms;
SELECT DISTINCT ((((((rt0.c0) BETWEEN (x'') AND (x'')))AND(COUNT(*))))AND(((rt0.c0)&(rt0.c2)))), COUNT(CAST(rt0.c0 AS TEXT)), CAST((rt0.c2 IN (rt0.c2)) AS BLOB) FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c0)=(rt0.c0)))OR(((((((((rt0.c0)AND(rt0.c2)))AND(NULL)))AND(rt0.c1)))AND(rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)))OR(((rt0.c1)AND(rt0.c1)))))OR(((((((((rt0.c2)OR(rt0.c2)))OR(0.7685729991550411)))AND(rt0.c2)))OR('')))) FROM rt0 WHERE ('796938532'); -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT BETWEEN (json_array_length(rt0.c0, rt0.c2)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 ORDER BY (((- (rt0.c0))) NOT BETWEEN (rt0.c1) AND (((rt0.c1)IS NOT('?X\rﱿEl[jC')))), COALESCE(DISTINCT ((rt0.c2)||(rt0.c2)), CAST(rt0.c0 AS BLOB)) DESC;SELECT DISTINCT ((NOT (rt0.c2)) IN ()), ((x'') BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY, COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (rt0.c2 IN ()) THEN (NOT (rt0.c1)) WHEN ((rt0.c1)LIKE(rt0.c2)) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN (- (rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE rt0.c0 COLLATE RTRIM END FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))), ((((rt0.c1) NOT NULL)) BETWEEN (((rt0.c2)>(rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)), CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS NUMERIC) FROM rt0 WHERE (((((NULL)||('1866455090')))|(('' IN (0x3a8457a6))))) ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST; -- 1ms;
SELECT ALL (((NOT (rt0.c0)))&(((((x'')AND(rt0.c0)))OR(rt0.c0)))) FROM rt0 GROUP BY CAST(((rt0.c2)>>(rt0.c0)) AS NUMERIC), (~ (rt0.c1 COLLATE NOCASE)), CAST(NULLIF(rt0.c1, rt0.c1) AS INTEGER) HAVING rt0.c2 LIMIT 1579674162; -- 0ms;
SELECT MIN(AVG(rt0.c0), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)=(rt0.c2)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) FROM rt0 GROUP BY TRIM(CAST(rt0.c2 AS NUMERIC)) HAVING CAST(((rt0.c1)<<(rt0.c2)) AS NUMERIC); -- 0ms;
SELECT DISTINCT (+ ((rt0.c0 IN ()))) FROM rt0 WHERE ((~ ((((('9223372036854775807')AND(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT (((((0.5741225327446419)&(rt0.c2))))>=((CASE rt0.c0  WHEN '1372124214' THEN '-1015617037' ELSE rt0.c2 END))), FIRST_VALUE(((((rt0.c2)LIKE(rt0.c2))) IS FALSE)) OVER (), CASE WHEN x'02d39e05' COLLATE RTRIM THEN SUM(rt0.c2) WHEN ((rt0.c0)>(rt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)||(rt0.c2)) END FROM rt0; -- 0ms;
SELECT DISTINCT (('2f') NOT BETWEEN (((rt0.c1) NOTNULL)) AND (SUBSTR(rt0.c1, rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2) IS FALSE)))>((MIN(rt0.c1)))), (((rt0.c2 IN (rt0.c1))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((NOT (rt0.c1)))), CASE ((rt0.c0)IS NOT(rt0.c0))  WHEN ((x'')IS NOT(rt0.c2)) THEN ((rt0.c1)<<(rt0.c2)) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND (('-1654085130'))) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN (('E桀') IS FALSE) THEN ((rt0.c2) NOT NULL) WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN NULL WHEN ((rt0.c2) NOT BETWEEN (2060901190) AND (rt0.c1)) THEN (((rt0.c1, rt0.c2, rt0.c0))<=((rt0.c0, rt0.c2, rt0.c1))) WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN rt0.c2 ELSE ((rt0.c0)==(rt0.c2)) END FROM rt0 GROUP BY ((CAST(rt0.c0 AS TEXT))|(((rt0.c0)=(rt0.c0)))) HAVING ((ABS('')) NOTNULL); -- 0ms;
SELECT ALL ((CHAR(rt0.c2))<=(CAST(rt0.c0 AS NUMERIC))), ')|F%-gAOU', ((UNLIKELY(rt0.c2))>>(((rt0.c2)<(rt0.c1)))) FROM rt0; -- 0ms;
SELECT (((rt0.c0 IN ()))>>(GROUP_CONCAT(rt0.c0))), AVG(CAST(rt0.c1 AS BLOB)), ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c1) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN '-1424108531' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) AND (COUNT(*))) FROM rt0 WHERE (CAST((x'' IN ('-1381108637', x'')) AS REAL)) ORDER BY ((((rt0.c2)!=(rt0.c1)))&((rt0.c2 IN ()))), CASE rt0.c2 COLLATE RTRIM  WHEN rt0.c0 THEN CAST(rt0.c2 AS TEXT) ELSE 0.29702475692714847 END  NULLS LAST, ((((0.885693329972686) NOT BETWEEN (rt0.c1) AND (rt0.c0)))*(CAST(rt0.c0 AS NUMERIC))); -- 0ms;
SELECT ((('-250863336'))<=((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (~ (rt0.c1)) THEN (~ (rt0.c2)) ELSE MIN(rt0.c0) END, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY COLLATE BINARY, 0.45482983101446606 FROM rt0 WHERE ((((NOT (0.6501904847864969))) BETWEEN (((x'')IS(0.3812320058997478))) AND ((((NULL)) NOT BETWEEN (('ItpZCH')) AND ((x'')))))); -- 0ms;
SELECT (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END IN ()), SQLITE_VERSION(), ((((((((rt0.c1)AND(rt0.c1)))OR(x'3b23')))AND('')))AND(MIN(rt0.c1))) FROM rt0 WHERE (((+ ('129533939')) IN ((((NULL, '415640105', NULL, '-1518380667', -3.43661129E8)) NOT BETWEEN ((0xffffffffadd8985e, '~Yxk4', '', 0.06671449341242475, '-1059234130')) AND ((-5.54881084E8, NULL, '1810861941', -7.04375413E8, x'')))))); -- 0ms;
SELECT DISTINCT CASE WHEN CHAR(rt0.c1) THEN ('' IN ()) ELSE ((rt0.c1) NOTNULL) END FROM rt0 ORDER BY rt0.c1 DESC, (((((rt0.c0)/(rt0.c1))))>(((+ (rt0.c2)))))  NULLS LAST; -- 1ms;
SELECT NTH_VALUE((((((rt0.c0)*(rt0.c1))))>((CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END))), (NOT (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) OVER (), rt0.c0 COLLATE NOCASE, ((rt0.c0 COLLATE BINARY) IS FALSE) FROM rt0;SELECT ALL LAST_VALUE((((rt0.c2) NOTNULL) IN (rt0.c0 COLLATE BINARY, NULL))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS), CAST(((rt0.c2) BETWEEN (rt0.c0) AND ('595895700')) AS REAL), rt0.c1 FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, '-583442913', rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))) COLLATE BINARY FROM rt0 WHERE ((((~ (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT (- ((- (0.15998567267797692)))) FROM rt0; -- 1ms;
SELECT IFNULL(CASE rt0.c0  WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN NULL THEN rt0.c2 END, (((rt0.c1, rt0.c2, '')) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0)))), LEAD(x'', ((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(((rt0.c1)&(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(((NULL)<=('-1579438696')))))OR((('1548580366')LIKE(rt0.c1)))), (((((rt0.c2))<((rt0.c0))))<((rt0.c2 IN (rt0.c0, rt0.c1))))) OVER (), NTH_VALUE((((((rt0.c1))>((x'2a8a')))) IS FALSE), CAST(rt0.c2 AS TEXT) COLLATE NOCASE) OVER () FROM rt0 WHERE (((((('+B7CJzp')AND(0.3555735970100191)))AND(x'')) IN ((('') IS TRUE))));SELECT (((((((((NOT (rt0.c0)))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))))OR(('' IN (rt0.c2)))))AND((~ (rt0.c0)))))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0 WHERE (((((x'') BETWEEN (177955760) AND (1e500))) BETWEEN (((('927121231')) NOT BETWEEN ((NULL)) AND ((' ')))) AND ('[d{Sx-m ' COLLATE BINARY))); -- 0ms;
SELECT ALL ((rt0.c2 COLLATE NOCASE) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c0) ISNULL)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (NULL)) FROM rt0 WHERE (CAST((((('0.9283457022214542')OR(NULL)))OR(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT FIRST_VALUE((- (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) OVER () FROM rt0; -- 3ms;
SELECT DISTINCT LOWER(DISTINCT ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) FROM rt0 GROUP BY SQLITE_COMPILEOPTION_GET(CAST(rt0.c0 AS TEXT)), ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>=((rt0.c2 IN (rt0.c1)))), CASE WHEN ((rt0.c1)=(rt0.c1)) THEN ((('320409401'))=((rt0.c0))) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) END; -- 0ms;
SELECT ((((+ (rt0.c2))))>((((rt0.c2)GLOB(rt0.c1))))) FROM rt0 WHERE (((((((((((((CAST(x'' AS TEXT))OR((('%x')IS(0.682324092656814)))))OR(((NULL)|(8.13149636E8)))))OR(((0xffffffffbb7f0bb7) NOTNULL))))AND(((NULL) NOT BETWEEN (x'') AND (NULL)))))OR(CAST('' AS BLOB))))AND(((0.6434097238260356) NOT BETWEEN (x'') AND (0xa78b248))))); -- 0ms;
SELECT DISTINCT LIKELY(((NULL) NOT BETWEEN (rt0.c1) AND (x'eba2'))), ((((((rt0.c2)-(NULL)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)))OR(x'3fc0')), AVG(((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2))) FROM rt0; -- 1ms;
SELECT (((0.7495556553329895)<>(rt0.c1)) IN ()) FROM rt0 WHERE ((((('k6cm>m\nq퐍') BETWEEN (x'') AND (x'')))<(CASE WHEN x'd21472bc' THEN '' END))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)<=(rt0.c0))) NOT NULL) FROM rt0 WHERE (CAST(DATE(NULL, x'', 0.28845689892993787) AS INTEGER)) GROUP BY 0.4856862810522842; -- 0ms;
SELECT COALESCE(((rt0.c0) BETWEEN ('') AND (rt0.c1)), COUNT(*)), ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))>>((+ (rt0.c1)))), CASE WHEN rt0.c2 THEN AVG(rt0.c2) WHEN ((rt0.c0)<<(rt0.c2)) THEN CAST(0.32836312960893177 AS NUMERIC) WHEN rt0.c1 THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END END FROM rt0; -- 0ms;
SELECT '', 0xffffffff8282a5df, ((((((rt0.c0)>=(rt0.c0)))OR(MIN(rt0.c0))))AND(TOTAL(x''))) FROM rt0 WHERE (((LIKELY(DISTINCT 1412906259))>(ABS('1323306181')))) ORDER BY ((((rt0.c0) ISNULL)) NOT NULL) DESC  NULLS FIRST; -- 0ms;
SELECT ALL LAG(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) COLLATE NOCASE, ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (rt0.c2 COLLATE NOCASE)), (((((((rt0.c1, rt0.c1, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2))))AND(rt0.c0 COLLATE RTRIM)))AND(SQLITE_COMPILEOPTION_USED(rt0.c0)))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1)OR(COUNT(rt0.c0))), ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)%(rt0.c1 COLLATE RTRIM)), ROW_NUMBER() OVER () FROM rt0 WHERE ((((((('Pq*ਫ਼B84') ISNULL))OR(NULL COLLATE BINARY)))AND((((x'411b')) BETWEEN ((0X68802aa0)) AND ((NULL)))))); -- 0ms;
SELECT ALL COUNT(((rt0.c1)>(x'')) COLLATE NOCASE) FILTER(WHERE rt0.c2) OVER () FROM rt0; -- 0ms;
SELECT ((CAST(rt0.c0 AS REAL)) NOT NULL) FROM rt0; -- 0ms;
SELECT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((0X14bfc675, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))) COLLATE BINARY, (((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1))))), MIN((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) FROM rt0; -- 0ms;
SELECT CAST(rt0.c2 COLLATE RTRIM AS TEXT) FROM rt0 WHERE (((((0Xffffffffca98df16)) NOT BETWEEN ((' Y')) AND ((x''))) IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c2) IS TRUE) COLLATE NOCASE, ((NULL) NOT BETWEEN (NULL) AND (rt0.c1)) COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL TOTAL(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN '-2116580335' WHEN rt0.c0 THEN rt0.c2 END) OVER () FROM rt0; -- 0ms;
SELECT COUNT(COALESCE(rt0.c2, rt0.c2)), 0.572977536726229, ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))<>((rt0.c1))) FROM rt0 WHERE ('APG*[g'); -- 0ms;
SELECT CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY, ((rt0.c2)>=(rt0.c0)) COLLATE BINARY, ((((rt0.c2)<<(NULL)))>=(rt0.c2 COLLATE BINARY)) FROM rt0 WHERE (((((579872426) NOT NULL)) BETWEEN ('' COLLATE NOCASE) AND (((('8%猩hVaロB')) BETWEEN ((NULL)) AND ((0.948776321896709)))))); -- 0ms;
SELECT ((CASE WHEN rt0.c1 THEN rt0.c2 END)IS(('-148572383' IN ()))) FROM rt0 WHERE (TYPEOF(((0.4293529104188403) ISNULL))) ORDER BY ((LIKELY(rt0.c1)) BETWEEN (rt0.c1 COLLATE BINARY) AND (CASE WHEN rt0.c2 THEN rt0.c0 END)) DESC  NULLS LAST; -- 0ms;
SELECT (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c1)>=(rt0.c1)))), CUME_DIST() OVER ( PARTITION BY ((((((((((((((((rt0.c1)AND(x'')))AND(rt0.c1)))OR(NULL)))AND(rt0.c1)))OR(((0.9418404833410383)<>(rt0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(((rt0.c0)AND(rt0.c2)))))OR(CAST(rt0.c1 AS BLOB))), 0.7338121005910401), TOTAL(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) OVER () FROM rt0; -- 0ms;
SELECT ALL CASE WHEN COUNT(*) THEN x'953c' END, CAST(AVG(rt0.c2) AS REAL), (((((rt0.c2 IN ()))OR((NULL IN ()))))OR((rt0.c1 IN (rt0.c0)))) FROM rt0 WHERE (((((((x'0096') BETWEEN (NULL) AND (-1411189700)))AND((('zN|Z䌻/w8䑣') ISNULL))))OR(0.010273414211303011))); -- 0ms;
SELECT ALL CAST(((NULL) NOT BETWEEN (rt0.c1) AND (0.4600429144350031)) AS TEXT) FROM rt0 LIMIT 325274366; -- 0ms;
SELECT DISTINCT (CAST(rt0.c1 AS INTEGER) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(0.7738401149997994 AS TEXT) FROM rt0 WHERE ((x'42c4' IN ())); -- 0ms;
SELECT AVG((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, NULL)) AND ((rt0.c1, rt0.c2, rt0.c0)))) OVER () FROM rt0 WHERE ((((('.c')) NOT BETWEEN ((NULL)) AND ((''))) IN ())); -- 1ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(CAST(0x1e41bbf9 AS TEXT) AS TEXT)); -- 0ms;
SELECT ALL ((9.46233048E8) BETWEEN ((rt0.c1 IN ())) AND (UNLIKELY(DISTINCT rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((x'')||('Ns')))OR((((NULL)) NOT BETWEEN (('')) AND ((6.39032247E8))))))AND((((('f8(5<TMdf')AND(0.13079196281660088)))OR(x'7a23'))))) ORDER BY HEX(rt0.c0) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c0 END) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (- (CASE WHEN x'9599' THEN rt0.c0 END)) FROM rt0 WHERE ((((NOT ('')))>('639032247' COLLATE NOCASE))) ORDER BY UNLIKELY(CASE WHEN rt0.c0 THEN rt0.c0 ELSE 0.7039333118967583 END)  NULLS FIRST, (((rt0.c2)GLOB(rt0.c2)) IN (('' IN (rt0.c2)), CAST(rt0.c2 AS REAL)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((((((('1484728251')OR('1911384187')))OR(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))))OR(((rt0.c2) ISNULL))))AND((rt0.c1 IN ()))))OR(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))))AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))) FROM rt0 WHERE (UPPER(DISTINCT (NOT ('-1579438696')))); -- 0ms;
SELECT '' FROM rt0 ORDER BY ((((((((((((((((((rt0.c0)|(rt0.c2)))AND(((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))))OR((((rt0.c0))<((rt0.c0))))))AND(rt0.c2 COLLATE RTRIM)))OR((rt0.c2 IN ()))))OR(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(CASE WHEN x'6d5b' THEN rt0.c2 END)))OR(NULL)))AND(LENGTH('-904990312'))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c0) NOTNULL) IN ()), COUNT(((rt0.c0)IS NOT(rt0.c1)) COLLATE RTRIM) OVER ( ROWS  CURRENT ROW), ((rt0.c2)IS NOT(rt0.c1)) COLLATE BINARY, (((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) IN ()), ((rt0.c0 COLLATE NOCASE)/(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL rt0.c0 COLLATE RTRIM, (((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))) COLLATE BINARY, SUM(((rt0.c0) IS TRUE)) OVER () FROM rt0 ORDER BY ((CAST(rt0.c1 AS REAL)) ISNULL), ABS(((rt0.c1)>(rt0.c1))) DESC  NULLS LAST; -- 0ms;
SELECT (~ ('g}>yjK')) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)))+((NOT (rt0.c2)))), (((- ('88201857')))/(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))), rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT ((load_extension(rt0.c1, rt0.c0))-((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt0 WHERE ((((- (NULL)))==((('1231864507') ISNULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)|(rt0.c1)))>(rtreenode(rt0.c1, rt0.c0))) FROM rt0 WHERE (((((((((LIKE('448069445', NULL))OR(((x'bb01')*(NULL)))))OR(((NULL)%('ญa]*td办V!')))))AND(CAST('' AS BLOB))))AND(CAST('U0ᛪf7tp''' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT AVG(AVG(((rt0.c1) NOTNULL))) FROM rt0 WHERE ('A[');SELECT CASE ((((((((rt0.c0)OR(0.9267213124929254)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))  WHEN CAST(NULL AS TEXT) THEN json_patch(rt0.c2, rt0.c2) END FROM rt0 WHERE ((+ (CASE 0xffffffffa979f3eb  WHEN x'' THEN '307621478' ELSE '' END))); -- 1ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0) NOT NULL) IN (((rt0.c2)IS(rt0.c1)))), (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (-4.05833355E8))))<>((COUNT(*)))), ((CASE rt0.c1  WHEN 0.2981545289496619 THEN rt0.c1 END) BETWEEN ((rt0.c2 IN ())) AND (((rt0.c1) IS TRUE))) FROM rt0 WHERE (CASE WHEN ((x'')<>(-9.16444891E8)) THEN CAST(0.7954726224315833 AS BLOB) WHEN (('-261703474') NOTNULL) THEN ((NULL)|(0.8727904407940841)) WHEN 0.9131886242494905 COLLATE NOCASE THEN x'' ELSE CASE WHEN '-554881084' THEN '' WHEN -2020672076 THEN 0.09035827993510104 WHEN '-1063816786' THEN '-575505241' ELSE x'' END END); -- 0ms;
SELECT ALL (~ (rt0.c0)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN (AVG(rt0.c2))) FROM rt0 WHERE (CASE WHEN (((x'f36da583', NULL, 3.20409401E8)) BETWEEN ((x'f6db', '-1465587342', NULL)) AND ((NULL, ' y', '-115691999'))) THEN CASE '1128332682'  WHEN NULL THEN 'm.j2' ELSE -130086369 END ELSE json_array(x'794a', x'7a06') END) GROUP BY UPPER(DISTINCT CAST(rt0.c0 AS INTEGER)) HAVING (NOT (rt0.c2));SELECT DISTINCT ((((rt0.c0)||(rt0.c1)))!=(rt0.c2)), ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (SUM(rt0.c1))), FIRST_VALUE(x'') OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((rt0.c1) IS FALSE) THEN STRFTIME(rt0.c2, rt0.c2, rt0.c1) END FROM rt0 WHERE ((((+ (NULL)))&(((x'')>=('265254196'))))) ORDER BY CASE ((((((((rt0.c2)OR(NULL)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c2)*(rt0.c0)) ELSE x'' END; -- 0ms;
SELECT ALL (NOT (COUNT(*))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0) ISNULL)) FROM rt0; -- 0ms;
SELECT DISTINCT ((load_extension(rt0.c0))-((+ (x'')))), ((((rt0.c1)>(rt0.c0))) IS FALSE), ((((((((0.7262783922019462)OR(rt0.c2)))AND(rt0.c1)))OR(((rt0.c1)>=(rt0.c0)))))AND(rt0.c2)) FROM rt0 WHERE (('1434142108' COLLATE BINARY IN ())) GROUP BY rt0.c0 COLLATE RTRIM, CAST(((rt0.c1)*(rt0.c1)) AS INTEGER), (((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c0)))) ISNULL) ORDER BY ((((rt0.c2)/(rt0.c2)))<=(((rt0.c2)!=(0.8557027640402198)))) DESC; -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) ISNULL) FROM rt0 WHERE ((((~ ('')))GLOB(LTRIM(0.3812320058997478)))); -- 0ms;
SELECT ((COUNT(*))%(CASE WHEN rt0.c0 THEN rt0.c2 END)) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((COUNT(rt0.c0))) AND ((((((rt0.c1)OR(rt0.c2)))OR(-1.063816786E9))))) FROM rt0 WHERE (((((3.85492025E8) IS FALSE))*(CAST('-1288622613' AS REAL)))); -- 1ms;
SELECT ALL x'4824' FROM rt0 WHERE (DATETIME(((NULL)-(NULL)), TYPEOF(NULL), NULL COLLATE RTRIM, (~ (NULL)), ((('0.682324092656814')) NOT BETWEEN ((0xffffffffc93368b5)) AND (('-393372528'))))); -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) NOT NULL) FROM rt0 WHERE ((((0.5794892195236455) ISNULL) IN ())) LIMIT -1735416819 OFFSET -2126264252; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT 550823373, ((rt0.c1) NOTNULL), rt0.c2 COLLATE RTRIM, ((rt0.c2) NOTNULL), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL))) FROM rt0; -- 0ms;
SELECT CASE COALESCE(rt0.c1, rt0.c1)  WHEN (NOT (rt0.c2)) THEN 6.46782848E8 WHEN (rt0.c1 IN ()) THEN AVG(rt0.c1) WHEN rt0.c1 COLLATE RTRIM THEN ((x'')|(rt0.c0)) ELSE ((rt0.c2) ISNULL) END, LAST_VALUE(rt0.c0 COLLATE NOCASE) OVER (), ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((rt0.c0) IS TRUE)) AND (CAST(x'' AS INTEGER))) FROM rt0 WHERE (((((NOT ('1406781821'))))<((CAST('0.42170005435011104' AS BLOB))))) ORDER BY ((((x'') BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)  NULLS FIRST LIMIT -1381108637; -- 0ms;
SELECT DISTINCT rt0.c1, (NOT (TOTAL(rt0.c0))), ((rt0.c1)IS(rt0.c1 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) COLLATE BINARY FROM rt0 WHERE ((((((0.9376093524270512)) NOT BETWEEN ((x'')) AND (('1rwLNe[^'))))<=(((x'4753')IS NOT(NULL))))); -- 1ms;
SELECT DISTINCT MAX(x''), UNLIKELY(DISTINCT SUM(rt0.c0)), ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)|(((rt0.c0) IS FALSE))) FROM rt0 WHERE (CAST((('') NOTNULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT CAST(CASE WHEN rt0.c2 THEN '-448125652' WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END AS TEXT), (((-1898702422)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND ((rt0.c2))), CAST(TRIM(rt0.c2, rt0.c1) AS INTEGER) FROM rt0 WHERE (((((x'0f7e') IS TRUE))||(((('', NULL, '\')) BETWEEN ((NULL, -2092096722, '-433544989')) AND ((0.8209920568438669, 'Nl', 0x884500a)))))); -- 0ms;
SELECT DISTINCT COUNT(rt0.c1), 7.04709724E8, AVG((rt0.c2 IN ())), rt0.c0, '-1690131657' FROM rt0 GROUP BY ((CAST(rt0.c1 AS INTEGER)) IS TRUE); -- 0ms;
SELECT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN ((((rt0.c0))<=((rt0.c1)))) AND (CAST(rt0.c0 AS REAL))), (~ (CAST(rt0.c0 AS NUMERIC))), CASE WHEN (((rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((NULL, rt0.c0, rt0.c0, rt0.c0, 'BG{pQY.6')) AND ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c1))) THEN ((rt0.c0) IS FALSE) WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN UNLIKELY(rt0.c1) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((NULL)OR(rt0.c1)))OR(rt0.c1)) END FROM rt0 WHERE (((0X1044ac4e COLLATE BINARY)|(0.44470857123309926 COLLATE NOCASE))) LIMIT -1690131657 OFFSET -639913606; -- 0ms;
SELECT ALL (((rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((CAST(rt0.c2 AS BLOB)))) FROM rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT LEAD((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END IN ()), CAST((NOT (rt0.c1)) AS INTEGER), (((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((rt0.c1 IN ()))))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.8684662930759639 WHEN rt0.c2 THEN rt0.c2 END))) OVER () FROM rt0 WHERE ((NOT (('~C' IN ())))); -- 0ms;
SELECT DISTINCT UNLIKELY((NOT (rt0.c2))), ((((((((((((rt0.c0)AND(rt0.c1)))AND(x'')))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))AND(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0)<=(rt0.c2)))))AND((rt0.c2 IN ()))), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND ((rt0.c2 IN ()))) FROM rt0 LIMIT 794313375; -- 0ms;
SELECT DISTINCT (((rt0.c0))<((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))))) FROM rt0 WHERE (CAST((0.0876516426117051 IN (x'')) AS REAL)); -- 0ms;
SELECT CAST(COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c0) AS NUMERIC), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE, ((- (rt0.c2)) IN ()) FROM rt0 WHERE ((('355491230' IN ()) IN (((NULL)|(x''))))); -- 0ms;
SELECT DISTINCT (((((- (rt0.c2)))AND((- (rt0.c0)))))AND(((0Xfffffffff67f1a85) BETWEEN (NULL) AND (rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1)+(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((((((((NULL)OR(rt0.c2)))OR(rt0.c2)))OR(x'')))OR(rt0.c2)))>>((rt0.c0 IN (rt0.c2)))), (((rt0.c1 IN ()))<<((+ (rt0.c1)))), CASE WHEN TYPEOF(DISTINCT rt0.c0) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c1) ISNULL) THEN LIKELY(rt0.c0) WHEN (- (rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN '' WHEN 0Xffffffffd930d061 THEN rt0.c0 END END) FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2)%(rt0.c2)) COLLATE RTRIM, (((((((((rt0.c0 IN ()))AND(json_array_length(rt0.c0, rt0.c0))))OR((- (rt0.c1)))))AND(QUOTE(x''))))OR((NOT (rt0.c0)))), rt0.c0 FROM rt0 WHERE ((((NULL IN ('1331199072')))>>((('7?l+Y\z') ISNULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN (rt0.c2)))<(NULL)) FROM rt0 WHERE ((((('-343661129') BETWEEN (x'3e2b0af3') AND (NULL)))OR((((0Xffffffffff01d110))!=(('')))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0)%(rt0.c0)) COLLATE NOCASE) FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c2)))=(COUNT(*))) FROM rt0 WHERE ((((-2.093004885E9 IN ())) NOT NULL)); -- 1ms;
SELECT CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE RTRIM, TOTAL_CHANGES(), (((rt0.c1 IN (rt0.c1))) NOTNULL) FROM rt0 WHERE (x'') ORDER BY (((- (rt0.c1))) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN (- (rt0.c0)) THEN ((rt0.c1)<=(rt0.c2)) END FROM rt0 WHERE (((json_insert(0.09634868933767804, x'', NULL)) NOTNULL));SELECT CAST(((rt0.c0) IS FALSE) AS TEXT) FROM rt0 WHERE (((((0Xffffffff9e42ad0b)IS NOT('-1546763669')))%(x'' COLLATE BINARY))); -- 0ms;
SELECT (((((0X4c5234f6) NOT NULL), (- (rt0.c1)), ((rt0.c2)&(rt0.c0))))>=(((rt0.c1 IN ()), CAST(rt0.c2 AS INTEGER), CAST(rt0.c0 AS NUMERIC)))) FROM rt0 WHERE ((((NULL)>(0x41f1251c)) IN ())); -- 0ms;
SELECT ALL COUNT(*) OVER (), ((~ (rt0.c0)) IN (((rt0.c0) NOT NULL))), (NOT (CAST(rt0.c2 AS TEXT))) FROM rt0 LIMIT -295447162; -- 0ms;
SELECT ALL ((COUNT(NULL))>>(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)) COLLATE BINARY, load_extension((NOT (rt0.c0))) FROM rt0 WHERE (CASE ((0.41984630445260784) IS FALSE)  WHEN x'' COLLATE BINARY THEN 0.5974504487735844 COLLATE RTRIM END);SELECT ((DATE(rt0.c0, rt0.c0, rt0.c0, rt0.c2, ''))/((rt0.c0 IN (rt0.c2, rt0.c2)))) FROM rt0 ORDER BY (~ (((rt0.c0)<<(rt0.c0)))) LIMIT 862872720 OFFSET -1469992864; -- 0ms;
SELECT DISTINCT ABS((~ (rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT UPPER(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))) FROM rt0 WHERE ((~ (((NULL) IS FALSE)))); -- 0ms;
SELECT CAST(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))OR('-1469992864')))OR(rt0.c0)) AS TEXT) FROM rt0 WHERE (((((((((((0Xffffffffe655a140)AND(x'')))OR(0x1f54f6b9)))AND('q')))OR(0.043188927229710905))) BETWEEN ((('g6Zf')>>(NULL))) AND (CAST(1627202288 AS BLOB)))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL), LAST_VALUE(rt0.c2) OVER (), SUM(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END) OVER () FROM rt0 GROUP BY ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS TRUE)) IS FALSE), CAST(rt0.c1 COLLATE BINARY AS BLOB), ((((rt0.c0) IS FALSE))GLOB(rt0.c2 COLLATE RTRIM)), x'8409', CAST((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB) FROM rt0 NOT INDEXED WHERE (TYPEOF(((0X14779f6f) IS FALSE))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 1ms;
SELECT DISTINCT ((((((((rt0.c1)AND(rt0.c0)))AND(x'24dc')))OR(rt0.c0)))AND(NULLIF(rt0.c0, rt0.c2))), (~ ((~ (rt0.c1)))), GROUP_CONCAT(rt0.c1) OVER (), CASE MIN(rt0.c1)  WHEN 0.17066230609092947 THEN NULL WHEN LIKELIHOOD(DISTINCT NULL, 0.4634081004941887) THEN (x'' IN ()) WHEN LOWER('-482017510') THEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) ELSE (- (rt0.c0)) END, ROW_NUMBER() OVER (), (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(COUNT(*))))OR((((rt0.c1, rt0.c1, 0.5333993705881254, rt0.c1, '-285464781', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2, rt0.c2, rt0.c0, rt0.c2, rt0.c0))))), SUM(rt0.c0) OVER ( ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) AS NUMERIC)  NULLS LAST, ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))<=(((rt0.c2 IN (rt0.c1)))))  NULLS LAST) FROM rt0; -- 0ms;
SELECT (((rt0.c0)) BETWEEN (((+ (rt0.c2)))) AND (((((rt0.c1))<=((rt0.c1)))))) FROM rt0 WHERE (((rtreenode(x'', '1323306181')) IS FALSE)); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT ALL CAST((((rt0.c0))<>((rt0.c2))) AS BLOB), (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT NULL), TOTAL((NOT (rt0.c1))) OVER ( ORDER BY CAST(((rt0.c2)OR(rt0.c2)) AS TEXT)  NULLS FIRST) FROM rt0 WHERE ((((('')!=(0xffffffff98b1d99f)))GLOB(((NULL) IS FALSE)))); -- 1ms;
SELECT DISTINCT ((rt0.c1)>(rt0.c1)) COLLATE BINARY FROM rt0 WHERE (CAST((NOT (x'1243')) AS BLOB)); -- 0ms;
SELECT ALL ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT NULL) FROM rt0; -- 0ms;
SELECT COUNT(CASE WHEN rt0.c0 THEN '62]Od>' ELSE rt0.c1 END) FROM rt0 WHERE ((((~ (x'80c0'))) BETWEEN (CASE WHEN 0.4647470478677721 THEN '-2127304719' WHEN NULL THEN '' WHEN NULL THEN x'' ELSE '-276470333' END) AND (x'' COLLATE BINARY))); -- 0ms;
SELECT ('0.9456453094500706' COLLATE RTRIM IN (((rt0.c0) NOTNULL))) FROM rt0 WHERE ((((('') BETWEEN ('-1572240641') AND (x'')))+((((('-1472282860')AND('1445513662')))AND(NULL))))); -- 0ms;
SELECT ALL ((MAX(rt0.c0, rt0.c0, rt0.c2, rt0.c0))+(((rt0.c1) NOT NULL))) FROM rt0 GROUP BY rt0.c1 LIMIT -461308398; -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))), (+ (ABS(DISTINCT rt0.c2))), rt0.c0, ((MIN(rt0.c2))OR((~ (rt0.c2)))), rt0.c1, '845936518', AVG(((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) OVER () FROM rt0 ORDER BY (rt0.c0 IN ()) COLLATE NOCASE DESC  NULLS LAST, ((TRIM(x'')) BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) AND ((((rt0.c2))>=((rt0.c2))))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c2)|(rt0.c0))) IS TRUE) FROM rt0 ORDER BY ((((((((rt0.c2)OR(x'fcd1')))AND(((rt0.c0)*(rt0.c1)))))OR(((0xffffffff95155d62)>>(rt0.c0)))))AND(((rt0.c1)/(rt0.c2)))) ASC, LOWER(((rt0.c0)-(rt0.c0))) DESC; -- 0ms;
SELECT DISTINCT ((((rt0.c0)AND(rt0.c2)))&((rt0.c2 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST((((NULL)) NOT BETWEEN ((0Xffffffffd556373d)) AND (('-1579438696'))) AS INTEGER)); -- 0ms;
SELECT ALL (+ ((~ (rt0.c0)))) FROM rt0 GROUP BY CAST(((rt0.c2)<(rt0.c0)) AS REAL) ORDER BY (NOT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)) ASC; -- 0ms;
SELECT DISTINCT HEX(((rt0.c2)GLOB(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))IS((rt0.c0 IN (rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL CAST(CASE rt0.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c1 END AS REAL) FROM rt0; -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(x'' AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c0) AS REAL) FROM rt0 WHERE (((CASE WHEN 1789704401 THEN x'' END)%((')O' IN (0xfcf7534))))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c2)&(rt0.c0))) FROM rt0 GROUP BY ((rt0.c2 COLLATE NOCASE)|(UNLIKELY(rt0.c1))) HAVING (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN x'70aa' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END IN ()) ORDER BY ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (HEX(rt0.c0))) ASC; -- 0ms;
SELECT (((((rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c2))==((rt0.c1, rt0.c0, rt0.c2, x'', rt0.c1)))) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (0.769552096026782 COLLATE NOCASE)) FROM rt0 ORDER BY (((rt0.c1 IN ()))<<(((rt0.c2)>(rt0.c2))))  NULLS LAST, (+ (SQLITE_COMPILEOPTION_USED(rt0.c0))) ASC  NULLS FIRST, ((-107502250)>>(((rt0.c2) NOTNULL)))  NULLS FIRST; -- 0ms;
SELECT rt0.c1, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM, (~ (((rt0.c0)%(rt0.c2)))) FROM rt0 ORDER BY (((((rt0.c1)OR(x'29ee')))OR(rt0.c1)) IN ()); -- 0ms;
SELECT ALL -3.43661129E8, (((rt0.c1, rt0.c0, -8.24147065E8)) BETWEEN ((((((rt0.c0)OR(x'')))AND(rt0.c0)), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), rt0.c2)) AND ((LENGTH(rt0.c2), SUM(x''), ((('0.7479425331088062'))>=((rt0.c1)))))), MIN(832327428 COLLATE RTRIM) FROM rt0 GROUP BY ((rt0.c1) NOT NULL) HAVING CAST(rt0.c2 AS NUMERIC); -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt0.c0)) THEN GLOB(rt0.c2, rt0.c2) ELSE CAST(0.28797125415467917 AS NUMERIC) END FROM rt0; -- 0ms;
SELECT ALL '-1579438696' FROM rt0 GROUP BY (((((rt0.c2)AND(rt0.c0)))AND('d')) IN ((rt0.c2 IN ()))); -- 0ms;
SELECT DISTINCT CAST((-1216589241 IN ()) AS REAL) FROM rt0 WHERE (((((0.17230831276284964)IS NOT('963281588')))/(((NULL)*(0.5002078590549867))))); -- 0ms;
