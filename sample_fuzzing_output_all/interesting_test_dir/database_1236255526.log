-- Time: 2024/06/07 10:14:19
-- Database: database26
-- Database version: 3.40.0
-- seed value: 1236255526
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 1ms;
PRAGMA secure_delete = FAST; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '12865'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.5621626082028205) WHERE ((LIKE(vt0.c0, vt0.c1)) ISNULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5621626082028205); -- 1ms;
PRAGMA incremental_vacuum(1001873333); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c1)=('1001873333', 0X3bb75fb5); -- 0ms;
UPDATE OR FAIL vt0 SET c1='' WHERE vt0.c1; -- 0ms;
UPDATE vt0 SET c1=''; -- 8ms;
PRAGMA wal_autocheckpoint; -- 0ms;
END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 103732535); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c1, c1)=('-569588128', x'') WHERE vt0.c0; -- 0ms;
UPDATE OR FAIL vt0 SET (c1)=(''); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (' ~0B'); -- 0ms;
END; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=x'', c2=0.15293989728053892, c1=x'' WHERE ((rt0.c0) IS FALSE) COLLATE NOCASE; -- 0ms;
ANALYZE main; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.5621626082028205) WHERE vt0.c1; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 2ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-569588128,5');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1001873333,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1001873333);\n; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=0.7997395882106046, c1=NULL; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1001873333,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 767636261); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34226'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0x3bb75fb5, -2137373560), (0.7997395882106046, 0X61e562c2), (1001873333, 0.5621626082028205); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1, c2) VALUES (x'8471', 0.47995404472112546, x''); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (1996613067); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (x'', x'b09e'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14725'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL WHERE ((TRIM(DISTINCT vt0.c0))==(vt0.c0)); -- 0ms;
DELETE FROM vt0 WHERE vt0.c1; -- 0ms;
UPDATE vt0 SET (c0)=(0.3567075785584204) WHERE CAST(x'' AS REAL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM; -- 1ms;
UPDATE rt0 SET (c2)=('') WHERE CASE WHEN (('')<=(rt0.c0)) THEN LOWER(rt0.c1) END; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=('', '') WHERE CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES (' 5be*拨᱂Nc', NULL, '1642422978'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (-2137373560); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL); -- 0ms;
UPDATE vt0 SET (c1, c1)=(0.3893288981605052, '+|') WHERE vt0.c1; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(NULL, '') WHERE ((((vt0.c1) NOTNULL)) BETWEEN (vt0.c0) AND ('^[\E')); -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM; -- 3ms;
UPDATE OR IGNORE rt0 SET c1=0.6945693089534203 WHERE (x'dbd3' IN (NULL)); -- 0ms;
UPDATE vt0 SET c0=0.5123043758785127 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c1=0.8706119423768603, c1=NULL WHERE 0.6945693089534203; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.8831552477890475, 0.8340016864584201); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE (((CAST(vt0.c0 AS BLOB)))<=((((NULL)&(vt0.c0))))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, 1.642422978E9), ('', 'SpCa뎧//ix'), (NULL, ''); -- 0ms;
UPDATE vt0 SET c0=''; -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*), vt0.c1, (((((((rt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))AND((((rt0.c1))==((vt0.c0))))))AND(CASE vt0.c1  WHEN rt0.c1 THEN rt0.c1 END)) FROM rt0 GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))>((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) HAVING ((CAST(vt0.c0 AS BLOB)) NOTNULL);SELECT ALL (NOT (rt0.c2)) COLLATE NOCASE FROM rt0, vt0 WHERE (0Xffffffff891c73da) ORDER BY vt0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE (((((NULL) ISNULL)) IS FALSE)) LIMIT 237116482; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)OR(CAST(rt0.c2 AS TEXT))))OR('SBO᱂kw	')))OR((rt0.c0 IN (vt0.c0)))))AND(NULL)) FROM rt0, vt0 WHERE (((-119814618 COLLATE NOCASE)*(0.9825857257263336 COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT ((((vt0.c1)IS NOT(rt0.c2))) BETWEEN (HEX(DISTINCT vt0.c0)) AND (SQLITE_COMPILEOPTION_GET(vt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT TOTAL(((rt0.c1)<>(vt0.c1))), '1642422978', ((((x'55f9')AND(vt0.c1 COLLATE NOCASE)))AND((((((((('i\')OR(rt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) FROM rt0 WHERE (((((0.8293588385650746) IS FALSE))&(((('1642422978', 0.8315055138145525, 'N-}+b', '7#()', -569588128))=((x'', '2128118721', -2.28564248E8, '', -5.69588128E8))))));SELECT DISTINCT LIKELIHOOD(DISTINCT json_type(rt0.c2), 0.5619445106159408) FROM vt0, rt0; -- 0ms;
SELECT (((NOT ('rpdO')))AND((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))))), (4.30762376E8 IN ()), CASE ((vt0.c0)>=(vt0.c0))  WHEN (rt0.c0 IN (NULL, vt0.c0)) THEN rt0.c2 END, ((((rt0.c2) NOTNULL))LIKE(vt0.c1)), ((rt0.c2) BETWEEN (vt0.c0) AND ('-1574451551')) COLLATE RTRIM FROM vt0, rt0 WHERE (x'fb76') LIMIT 838755366; -- 0ms;
SELECT ALL x'' COLLATE RTRIM FROM rt0, vt0 WHERE ((('-1821833691')||(CASE NULL  WHEN x'' THEN 0Xfffffffff26062e8 WHEN 0.9648571290442772 THEN 1925344061 WHEN 'x*1o' THEN 2.37116482E8 END))); -- 0ms;
SELECT ALL ((((vt0.c1)AND('430762376')))AND(vt0.c1)) COLLATE NOCASE, ((((((rt0.c1)AND(vt0.c1)))OR(rt0.c0)))+(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))), ((json_remove(0X1a802ea3, rt0.c1)) NOTNULL) FROM vt0;SELECT DISTINCT CUME_DIST() OVER () FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c0)) BETWEEN ((CAST(-1.994624038E9 AS INTEGER))) AND ((((((vt0.c0)OR(vt0.c1)))OR(rt0.c1))))), ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c0)+(vt0.c1))) AND ((((rt0.c1))=((vt0.c1))))), CAST((rt0.c2 IN (vt0.c1)) AS NUMERIC) FROM rt0;SELECT DISTINCT (((vt0.c1, rt0.c2, vt0.c0)) NOT BETWEEN ((((rt0.c1)AND(vt0.c0)), rt0.c0 COLLATE RTRIM, CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 END)) AND ((CAST(rt0.c1 AS TEXT), (rt0.c0 IN ()), vt0.c0))) FROM vt0, rt0 LIMIT 394547136 OFFSET 394547136; -- 0ms;
SELECT ALL (((+ (vt0.c1)))GLOB(x'')) FROM rt0, vt0 WHERE (json((+ (NULL)))) GROUP BY ('' IN ()) COLLATE NOCASE ORDER BY CASE ((vt0.c1)*(vt0.c1))  WHEN ((rt0.c2) IS TRUE) THEN CAST(rt0.c1 AS REAL) END ASC  NULLS FIRST, CASE CAST(NULL AS INTEGER)  WHEN ABS(DISTINCT rt0.c0) THEN CASE vt0.c0  WHEN rt0.c1 THEN NULL END ELSE (NOT (rt0.c0)) END ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN ((RTRIM(vt0.c1))) AND ((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))))  NULLS LAST; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c2) NOT BETWEEN (vt0.c0) AND (x''))), CASE (((vt0.c0, vt0.c1, vt0.c1))>((rt0.c1, rt0.c1, rt0.c0)))  WHEN ((x'910dc617')>=('1592773339')) THEN (~ (rt0.c1)) END, (((~ (rt0.c2))) ISNULL) FROM rt0;SELECT DISTINCT COUNT((~ (rt0.c0))) OVER () FROM rt0 GROUP BY (((vt0.c1 IN ())) ISNULL) HAVING x'57c5' ORDER BY rt0.c1 DESC  NULLS FIRST, CASE WHEN COALESCE(rt0.c0, rt0.c1) THEN ((rt0.c1) NOTNULL) END; -- 0ms;
SELECT DISTINCT (((((rt0.c2)OR(rt0.c0)))OR(vt0.c1)) IN ()) FROM rt0, vt0 WHERE ((UPPER('') IN ())); -- 0ms;
SELECT ALL CAST(((rt0.c2)||(vt0.c0)) AS NUMERIC) FROM rt0, vt0 GROUP BY ((((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))<(((((vt0.c0))>((rt0.c0)))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1) NOT NULL))OR(GROUP_CONCAT(vt0.c1))))OR((NOT (x'')))) FROM rt0, vt0 WHERE ((((('' COLLATE NOCASE)OR(CAST(0.7048473121314227 AS BLOB))))OR(CASE NULL  WHEN -119814618 THEN 0.27879612916632845 WHEN 'D{[R' THEN 0.5621626082028205 WHEN 0.4328544109902286 THEN 0.19250804876726757 ELSE 0.36324480192924113 END))) GROUP BY load_extension(((vt0.c0)LIKE(rt0.c2)), ((((vt0.c0)AND('K拨L_')))OR(1692578782)));SELECT DISTINCT 0.6541700792343739, ((((((rt0.c0)AND(vt0.c0)))AND(rt0.c0)))*((vt0.c1 IN (vt0.c1, rt0.c1)))), ((('s?')) BETWEEN (((vt0.c1 IN (rt0.c1)))) AND ((NULL))) FROM rt0 WHERE ((~ ((NOT (x'0a28')))));SELECT LAG((((NOT (rt0.c0))) IS TRUE), ((((((vt0.c0) NOTNULL))OR(json_remove(vt0.c0, vt0.c0))))AND(((vt0.c1)<(x'')))), ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c0) ISNULL)) AND (vt0.c0 COLLATE RTRIM))) OVER () FROM rt0, vt0 WHERE ((((~ (NULL)))!=((1.001873333E9 IN ())))); -- 0ms;
SELECT ALL ((((((((((((((rt0.c1)OR(vt0.c1)))AND(rt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c2)))!=(rt0.c0)) FROM vt0 WHERE ((1e500 IN ()) COLLATE NOCASE) LIMIT -370225458;SELECT '0.8706119423768603' FROM rt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0 NOT INDEXED, rt0; -- 0ms;
SELECT ALL CASE WHEN rt0.c1 THEN (('1996613067') NOT BETWEEN (x'') AND (rt0.c1)) END, 0.9540504979673529, GROUP_CONCAT(MAX((vt0.c0 IN ()))) FROM vt0, rt0;SELECT ALL GROUP_CONCAT((NULL IN (vt0.c1))) OVER () FROM rt0, vt0 WHERE ((((0.43874015931558685) BETWEEN ('Xt') AND (x'')) IN ())); -- 0ms;
SELECT ALL CAST(rt0.c0 AS REAL) FROM rt0, vt0 WHERE (CAST((NULL IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((MAX(rt0.c1))*(((vt0.c0) NOTNULL))) FROM vt0 WHERE (('1736865154' IN (x'67c7')) COLLATE RTRIM);SELECT ALL (~ (((0.26269823604120446) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS INTEGER), ((((((rt0.c2)AND(vt0.c1)))OR(rt0.c1))) IS TRUE), (NOT (((((rt0.c1)OR(vt0.c1)))OR(rt0.c1)))) FROM rt0 WHERE (((-2137373560)<=(x''))) GROUP BY (((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c1)) IN ());SELECT (((vt0.c0)) BETWEEN (((- (vt0.c1)))) AND (((((vt0.c0))!=((vt0.c1)))))) FROM rt0, vt0 GROUP BY (((- (rt0.c1))) NOT BETWEEN (rt0.c2) AND (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) LIMIT 1; -- 0ms;
SELECT DISTINCT ((vt0.c0)>(COUNT(NULL))) FROM rt0, vt0 WHERE ((CAST(0.43874015931558685 AS TEXT) IN ())) GROUP BY ((((vt0.c0)<(rt0.c0)))>=(((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2 IN ())))<(('0.9825857257263336'))) FROM rt0 GROUP BY ((CAST(vt0.c0 AS TEXT)) NOT NULL);SELECT DISTINCT '%xvHiUD+' FROM rt0; -- 0ms;
SELECT rt0.c2, ((0.6191265719055563) BETWEEN (LIKELIHOOD(rt0.c2, 0.17888465748187588)) AND (CAST(vt0.c0 AS TEXT))), GROUP_CONCAT(x'5ea6') COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))OR(0.8355012258625091)))OR(rt0.c0)))+(((((0xfffffffffe19f341)OR(rt0.c2)))AND(vt0.c0)))), '%>r', ((((rt0.c1)==(rt0.c0)))+(((vt0.c1)AND(rt0.c1)))) FROM rt0, vt0 GROUP BY ((0.7371042839368537)GLOB(CAST(vt0.c0 AS REAL))), ((MIN(vt0.c0, rt0.c1)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (((vt0.c0)IS(rt0.c1)))), 641058598, SUBSTR(((rt0.c2)=(rt0.c2)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))), (- ((((vt0.c0))!=((rt0.c0))))) HAVING ((ROUND(rt0.c0, '0.6945693089534203'))<=(((((rt0.c2)OR(rt0.c0)))AND(vt0.c1))));SELECT DISTINCT (+ (UNICODE(rt0.c0))) FROM rt0, vt0 WHERE (CAST(((NULL)>>('-370225458')) AS TEXT)) GROUP BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))); -- 0ms;
SELECT ALL SUBSTR('~\n', rt0.c2) FROM rt0 WHERE (MAX(COALESCE(0.19250804876726757, NULL), CAST(1692578782 AS REAL))) GROUP BY ((vt0.c1 COLLATE NOCASE)<=((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) HAVING (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN (AVG(vt0.c0)));SELECT DISTINCT vt0.c1 FROM rt0 WHERE (CASE 0.06293505941248057 COLLATE BINARY  WHEN 2117178356 COLLATE BINARY THEN LAST_INSERT_ROWID() END) GROUP BY (((rt0.c0) NOT NULL) IN (((rt0.c2) IS TRUE))) HAVING (- (UPPER(vt0.c1)));SELECT DISTINCT COUNT(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END) OVER (), CAST(vt0.c1 COLLATE NOCASE AS TEXT), (('E￿gO珚\n') NOT BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND ((+ (rt0.c2)))) FROM rt0, vt0 ORDER BY rt0.c2 DESC LIMIT -49205500 OFFSET -677239056; -- 1ms;
SELECT ALL CAST((((rt0.c2))<>((vt0.c0))) AS REAL), '-283947119', ((json_array(rt0.c2, rt0.c1)) IS TRUE), ((((vt0.c0) IS FALSE))>(MAX(3.94547136E8))), CAST(rt0.c0 AS NUMERIC) FROM vt0;SELECT DISTINCT (MAX(rt0.c2) IN (rt0.c2, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('~\n'))))) FROM rt0 ORDER BY CAST(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END AS NUMERIC) DESC  NULLS FIRST;SELECT ALL ((NULL) IS TRUE), CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END, CASE WHEN rt0.c0 COLLATE BINARY THEN (- (vt0.c1)) ELSE '_' END FROM rt0;SELECT DISTINCT (NOT (vt0.c0)) FROM vt0, rt0 WHERE ((((((NULL)OR(NULL)))AND('1642422978')) IN ())); -- 0ms;
SELECT DISTINCT ((CASE WHEN 0xfffffffff25be30b THEN rt0.c1 END)IS NOT(((rt0.c0)%(vt0.c0)))), ((((((((((vt0.c1)IS NOT(vt0.c0)))OR(rt0.c2 COLLATE RTRIM)))AND(((vt0.c0) NOT NULL))))AND(((rt0.c0)/(vt0.c1)))))OR(vt0.c1)), CAST(SQLITE_COMPILEOPTION_GET(rt0.c0) AS NUMERIC) FROM rt0 ORDER BY (+ ((~ (rt0.c2))));SELECT DISTINCT ((rt0.c1)AND((rt0.c0 IN ()))), CAST(MAX(vt0.c1) AS NUMERIC), x'' FROM rt0, vt0 GROUP BY rt0.c0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)))OR(NULL)))AND(vt0.c1)) THEN ((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)) END FROM rt0, vt0 WHERE (json_array_length((0.4220902459614797 IN ()), (+ ('-228859125'))));SELECT DISTINCT ((((rt0.c1)AND(vt0.c1)))OR(rt0.c1)) COLLATE RTRIM, ((vt0.c0) NOT BETWEEN (rt0.c2) AND (x'')) COLLATE BINARY COLLATE NOCASE, CASE WHEN ((vt0.c0)+(rt0.c1)) THEN (vt0.c1 IN ()) WHEN COUNT(*) THEN '' WHEN (NOT (rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) END FROM rt0 LEFT OUTER JOIN vt0 ON CAST((vt0.c0 IN ()) AS REAL) WHERE ((((((x'')AND(0.352614199565055)))AND('')) IN ((('0.9825857257263336') NOTNULL)))) LIMIT 1094296055 OFFSET -1574451551; -- 1ms;
SELECT DISTINCT (((0X53057e92, rt0.c0, vt0.c1)) NOT BETWEEN (((((rt0.c0))<((rt0.c1))), (((x''))>((rt0.c1))), (vt0.c0 IN (rt0.c1, vt0.c0)))) AND ((CAST(vt0.c0 AS INTEGER), ((rt0.c1) BETWEEN (rt0.c1) AND (0Xffffffffd886292f)), NULLIF(rt0.c2, vt0.c0)))) FROM rt0, vt0 WHERE (((((((((((0.0026520258458041512)<=(NULL)))AND((('2128118721') BETWEEN (-5.44480241E8) AND ('1832488739')))))AND(((('0.19250804876726757'))>=(('%>'))))))OR(NULL COLLATE NOCASE)))OR('-റ'))) GROUP BY CAST((rt0.c0 IN ()) AS REAL) HAVING CAST((~ (vt0.c0)) AS INTEGER); -- 0ms;
SELECT ALL ((0.20152611440938795)|(vt0.c1)) COLLATE RTRIM COLLATE RTRIM, NULL, CASE UNLIKELY(DISTINCT rt0.c0)  WHEN MAX(vt0.c0) THEN (~ (vt0.c0)) ELSE CAST(rt0.c2 AS TEXT) END, ((AVG(rt0.c1))<(COUNT(vt0.c0))), (rt0.c1 IN (0.5929814364647336, vt0.c1)) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN MAX(vt0.c1) THEN (vt0.c1 IN ()) END FROM rt0;SELECT ALL AVG(CAST(rt0.c0 AS BLOB)) OVER (), CAST(CAST(rt0.c2 AS INTEGER) AS REAL), ('' IN ()), (((((((((('V')AND(rt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) NOT BETWEEN (NULL) AND ('0.0026520258458041512')), (~ (rt0.c2)) FROM rt0;SELECT (((rt0.c1 IN ())) NOTNULL) FROM vt0, rt0 WHERE ((((((('xS⟸')/('  ')))AND(x'' COLLATE RTRIM)))OR((((((((('-1392982126')OR(x'498e')))OR(NULL)))AND(NULL)))AND('rpdO'))))); -- 0ms;
SELECT DISTINCT (((rt0.c0) IS FALSE) IN ()), '-397888761', (((- (rt0.c0))) IS TRUE) FROM vt0 WHERE ((((((('')>(NULL)))AND((((('')OR(NULL)))AND(0xffffffffc1b0cca5)))))AND(((0.73288874743648)|(NULL))))) ORDER BY ((LTRIM(NULL, rt0.c1))-(vt0.c1 COLLATE NOCASE)) DESC;SELECT ALL (CASE WHEN rt0.c1 THEN 1214515589 END IN ((((rt0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0))>((rt0.c0, vt0.c1, vt0.c1, rt0.c0, 0Xffffffffef134f91))), (vt0.c1 IN ()))) FROM vt0, rt0 LIMIT -119814618; -- 0ms;
SELECT ALL TOTAL(vt0.c1) FILTER(WHERE (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((((rt0.c0))!=((rt0.c2))))))) OVER () FROM rt0 WHERE ((CAST(0.8831552477890475 AS NUMERIC) IN (CAST(x'194a' AS NUMERIC), (0.45501897459222596 IN ()))));SELECT DISTINCT ((((rt0.c2)+(vt0.c0))) NOTNULL) FROM rt0, vt0; -- 0ms;
SELECT ALL TRIM(DISTINCT ((((((((vt0.c1)OR(rt0.c1)))OR('1445414160')))AND(vt0.c1)))OR(NULL))) FROM rt0 WHERE ((x'' IN ()));SELECT (((rt0.c0 IN ())) IS TRUE) FROM vt0 WHERE (((NULL COLLATE RTRIM) BETWEEN ((1392869010 IN (NULL))) AND (((0.73288874743648)OR(NULL))))); -- 0ms;
SELECT DISTINCT CHAR(NULL) FROM vt0 WHERE ((0xffffffffacf8c792 IN ())); -- 0ms;
SELECT DISTINCT (('')>=(vt0.c0 COLLATE RTRIM)) FROM rt0, vt0; -- 1ms;
SELECT ALL MAX(((((vt0.c1)AND(-351313110)))OR(rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (((((((((((0.3893288981605052)AND(0.3567075785584204)))AND('aeUT~bI}\n')))OR(0.5460457648949697)))AND(NULL))) NOT BETWEEN (((x'')>>(NULL))) AND (('0.19250804876726757' IN ())))) GROUP BY (('-119814618')OR(NULL)), (((((NOT (rt0.c0)))AND(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))))OR(((((rt0.c2)AND(vt0.c1)))AND(rt0.c0)))), ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))OR(x'03e05e87')))OR((~ (rt0.c1)))) HAVING '';SELECT DISTINCT (rt0.c1 IN ()) FROM rt0, vt0 GROUP BY (+ (LIKELIHOOD(rt0.c1, 0.001936829049811628))), (+ (rt0.c0)) COLLATE RTRIM, QUOTE(((vt0.c1)==(vt0.c0))) HAVING MAX((((vt0.c0))>=((vt0.c1)))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)||(vt0.c0))) NOT NULL) FROM rt0, vt0 GROUP BY (CAST('+YWR8' AS REAL) IN ()) HAVING vt0.c0; -- 0ms;
SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) AND (CAST(vt0.c1 AS BLOB))), SUM((+ (rt0.c2))) OVER ( ORDER BY (((vt0.c1)) BETWEEN ((NULL)) AND ((rt0.c1))) COLLATE BINARY ASC  NULLS FIRST), NTILE(((LIKELIHOOD(rt0.c0, 0.9129089624509691))<(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) OVER () FROM rt0, vt0 WHERE (CASE (((NULL))<>((NULL)))  WHEN ((x'')GLOB(x'')) THEN (- (4.30762376E8)) ELSE (~ (0.3334411259462283)) END) LIMIT 237116482 OFFSET -2057963867; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((NOT (rt0.c2)))) AND ((((vt0.c1)>>(vt0.c0))))) FROM rt0;SELECT ALL CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN 0x7ed883c1 ELSE vt0.c1 END END, rt0.c1, CAST(((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2)) AS BLOB) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))+((~ (vt0.c0)))) FROM rt0, vt0 WHERE ((((+ ('')))&(x'6ee1'))); -- 0ms;
SELECT (CASE WHEN vt0.c0 THEN rt0.c1 END IN ()), 0.5653364806687837, CAST(((vt0.c1) NOTNULL) AS NUMERIC), CAST(rt0.c0 AS TEXT) COLLATE NOCASE, ABS(CAST(vt0.c0 AS BLOB)) FROM rt0, vt0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c0) NOT NULL)))), (NULL IN ()), ((rt0.c0 COLLATE RTRIM)<(TIME(rt0.c0, vt0.c1, NULL))) FROM rt0, vt0 WHERE (CAST((((x'')) BETWEEN ((x'58f3')) AND ((0.619432464355365))) AS INTEGER)) ORDER BY (((SQLITE_COMPILEOPTION_GET(rt0.c1)))>((((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS LAST, CASE WHEN ((rt0.c2)&(-351313110)) THEN ((vt0.c0)!=(rt0.c1)) WHEN vt0.c0 THEN ((rt0.c2)<>(vt0.c0)) WHEN ((0.5876928271137178)/(0.04442247799395227)) THEN 0.8200067138689457 END ASC  NULLS FIRST, ((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1))) NOTNULL) LIMIT -1498914713; -- 0ms;
SELECT ALL ((((((((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)))AND(NULL)))AND(rt0.c0))) BETWEEN (((vt0.c0)+(vt0.c0))) AND (rt0.c1)), ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (vt0.c0) AND ((((vt0.c0))>(('<⟸'))))), (((- (vt0.c1))) IS FALSE) FROM rt0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN rt0.c0 END IN ()); -- 0ms;
SELECT ALL UPPER(DISTINCT CAST(vt0.c0 AS REAL)) FROM vt0, rt0 WHERE (CAST(((-3.70225458E8) IS FALSE) AS REAL)); -- 0ms;
SELECT DISTINCT ((DATETIME(vt0.c0, rt0.c0, rt0.c2)) ISNULL), ((vt0.c1) BETWEEN (((rt0.c1)/(vt0.c0))) AND ((vt0.c0 IN ()))), (CHAR(vt0.c0) IN ()) FROM rt0, vt0 LIMIT 886969382; -- 0ms;
SELECT ALL CASE AVG(rt0.c0)  WHEN CAST(vt0.c1 AS REAL) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE '99374866' END, CAST(((rt0.c1)>>(rt0.c2)) AS NUMERIC), ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)|(rt0.c1)) FROM vt0;SELECT LAST_VALUE((((rt0.c1, rt0.c2, x'3c57')) BETWEEN ((((rt0.c0)>>(NULL)), 0.31937444687629857 COLLATE BINARY, ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c1 END, vt0.c1 COLLATE RTRIM, LIKELY(DISTINCT rt0.c1))))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND (NOT (vt0.c0)) COLLATE NOCASE FOLLOWING EXCLUDE GROUP) FROM vt0, rt0 WHERE (((((((-1608841892)+(x'')))OR(((0.9823800752925618)IS(0.8116733710883496)))))OR(((x'')OR('0.619432464355365'))))) GROUP BY ((((NOT (rt0.c2))))<=(((rt0.c1 IN ())))) HAVING ((((vt0.c0)%(rt0.c2)))<>(((rt0.c1)GLOB(-2087134883)))); -- 0ms;
SELECT DISTINCT NTH_VALUE(4.44608163E8 COLLATE NOCASE, CASE WHEN ((vt0.c0)<=(rt0.c2)) THEN DATETIME(vt0.c0, rt0.c2, vt0.c0) WHEN (~ (rt0.c0)) THEN ((vt0.c1) NOT NULL) WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END THEN (+ (rt0.c2)) ELSE NULL END) OVER () FROM vt0, rt0;SELECT DISTINCT LAG(DATETIME((rt0.c0 IN ()), ((rt0.c2) IS TRUE), (+ (rt0.c0))), ((((rt0.c1)/(rt0.c1)))AND(((rt0.c2)>>(rt0.c2)))), CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END AS REAL)) OVER (), (((SUM(rt0.c0), ((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c1)), ((rt0.c0) IS FALSE)))=((((rt0.c0) NOTNULL), COUNT(*), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((NULL)))))), (+ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)) FROM rt0 WHERE (((0Xffffffffd8f728a9 COLLATE BINARY)IS NOT((((((((('P^YoQ3%೥')AND(x'2f15')))OR(x'b7e1deb8')))OR(NULL)))OR(x'')))));SELECT DISTINCT ((((CAST(rt0.c2 AS TEXT))AND(CAST(vt0.c1 AS BLOB))))OR(((rt0.c2)%(rt0.c1)))), NULL, ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))!=(vt0.c0)) FROM rt0 WHERE (((((x'')) BETWEEN ((0.46214692814761404)) AND ((x''))) IN ()));SELECT ALL ((((((vt0.c1) ISNULL))OR(vt0.c1)))AND(((rt0.c2)*(vt0.c1)))), ((UNLIKELY(rt0.c0)) NOT BETWEEN ((NOT (vt0.c1))) AND (rt0.c2)), ((((rt0.c1) NOT NULL))IS NOT(vt0.c1)) FROM vt0;SELECT ((((rt0.c2)/(vt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((+ (rt0.c0)))) FROM rt0, vt0 WHERE ((((+ (285790660))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((x''))<((rt0.c2))) IN (TYPEOF(rt0.c2))) FROM rt0 WHERE (rtreenode(NULL COLLATE BINARY, CASE WHEN '' THEN '-1210046472' END)) GROUP BY vt0.c0 LIMIT 1123725878;SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END) NOT BETWEEN (CAST('E+' AS REAL)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c0 AS REAL)) FROM vt0 ORDER BY ((~ (rt0.c2)) IN (CAST(-1.7976931348623157E308 AS TEXT))) DESC  NULLS LAST;SELECT DISTINCT x'2201' FROM vt0, rt0 WHERE (CASE ((((NULL)OR(-1574451551)))AND('237116482'))  WHEN 0.9796110227215019 THEN ((((0.004859830086370698)AND('_雃~Q')))OR(NULL)) END); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT MAX('0.43874015931558685'), ((rt0.c2)-(rt0.c0))), (+ ((vt0.c0 IN (rt0.c1)))), ((((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)))AND(NULL)) FROM rt0 WHERE (((((x'')AND((NULL IN ()))))OR((NULL IN ())))) GROUP BY rt0.c0, (NOT (((vt0.c0)>>(vt0.c1)))), vt0.c0;SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))) AND (((x'') NOT BETWEEN (rt0.c0) AND (vt0.c1)))) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 WHERE ((((x'', 0.028268996531383928, NULL, 0.9823800752925618, '')) NOT BETWEEN ((json_remove('-1608841892', 'L'), ((NULL) IS TRUE), ((NULL)>('-93134195')), ((NULL) BETWEEN (0.321600127243056) AND (NULL)), (('D*')<=(0.3893288981605052)))) AND (((('')/(NULL)), CASE WHEN 2.117178356E9 THEN 0.19250804876726757 ELSE NULL END, LAST_INSERT_ROWID(), (('3\')IS('')), (('Sg') NOTNULL)))));SELECT ALL IFNULL(((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), (NULL IN (vt0.c1))), ((((vt0.c1) ISNULL))*(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)), NULL COLLATE RTRIM FROM rt0 WHERE ((((((x'')GLOB(NULL))))<>(((-0.0 IN (0.7311997410474386, '蜉', 0.44465349876462334))))));SELECT DISTINCT (((((vt0.c1))!=((rt0.c0)))) NOT BETWEEN (((vt0.c0)||(vt0.c1))) AND (MAX(vt0.c0))), ((((MAX(vt0.c1))OR(((vt0.c1)IS(NULL)))))AND(vt0.c1 COLLATE BINARY)), UNLIKELY(DISTINCT (rt0.c1 IN ())) FROM rt0, vt0 WHERE ((((('0.31937444687629857')>=('0.27879612916632845')))IS NOT((('')>>('zZ3la'))))); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c1 END)AND((rt0.c0 IN ()))))AND(((vt0.c1)IS(vt0.c0)))) FROM vt0, rt0 ORDER BY ((((rt0.c0) NOTNULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c1 END) AND ((rt0.c2 IN ()))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((json_array(NULL, rt0.c0))<=(CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0.44731158281433536 END)), UNICODE(((rt0.c2)=(vt0.c0))), ((((x'')=(vt0.c0)))*((NOT (0Xffffffff9cfe6a15)))) FROM vt0 WHERE (((CASE WHEN '0.73288874743648' THEN '-1304696027' END) NOT BETWEEN (load_extension(NULL, '1048011072')) AND ('-1191922777' COLLATE NOCASE)));SELECT DISTINCT (((vt0.c1 IN (rt0.c1))) BETWEEN (vt0.c1) AND (CAST(rt0.c1 AS INTEGER))) FROM rt0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN (0.352614199565055 IN ()) ELSE (((NULL)) NOT BETWEEN (('-1792689248')) AND ((x'eb01'))) END);SELECT ALL (((((((((rt0.c2)OR(vt0.c1)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)) IN ()), IFNULL(((x'')OR(rt0.c0)), (rt0.c2 IN ())), MAX(-2.057963867E9, vt0.c1) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT (~ ('UbYm)W')), (~ (((rt0.c0)<(vt0.c0)))), ((CAST(rt0.c2 AS REAL))LIKE(MIN(rt0.c1, rt0.c1))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) NOT NULL) THEN CAST(vt0.c1 AS TEXT) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)) END FROM rt0, vt0 WHERE (0.7997395882106046); -- 0ms;
SELECT NULL FROM vt0 INNER JOIN rt0 ON (((205407457 IN ())) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END) AND ((vt0.c1 IN ()))) LIMIT -454496009; -- 0ms;
SELECT ALL CAST(CAST(rt0.c1 AS TEXT) AS INTEGER), COUNT(CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 END COLLATE BINARY) OVER (), (NOT (CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)), ((((rt0.c0)>=(vt0.c1)))-(((vt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)))), SUM(CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END COLLATE NOCASE) FROM rt0, vt0 WHERE ((((('+|')>('-228564248')))IS NOT(x''))); -- 0ms;
SELECT COUNT((vt0.c0 IN ())) OVER ( GROUPS ((((vt0.c1)>=(rt0.c0)))==((~ (vt0.c1)))) PRECEDING EXCLUDE GROUP) FROM vt0 WHERE (NULLIF('Sg', NULL) COLLATE NOCASE); -- 0ms;
SELECT CUME_DIST() OVER (), ((rt0.c0)>(((vt0.c1)==(rt0.c2)))), (((((rt0.c1))<=((vt0.c0))))GLOB(UNLIKELY(rt0.c2))) FROM vt0 WHERE ((NOT (((((((((0.6967028454640978)OR(NULL)))AND(0.1783383524994031)))OR(x'044f346c')))OR(1214515589)))));SELECT ALL (((((rt0.c0))>=((rt0.c1)))) IS TRUE) FROM vt0, rt0 WHERE (((CASE '856477334'  WHEN 'jY[^},]Z' THEN '1392869010' ELSE '-475491615' END) NOT NULL)); -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT (((vt0.c1)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((CAST(rt0.c1 AS BLOB)))), MAX(((((vt0.c0)OR(vt0.c1)))AND(rt0.c1))), CAST((((rt0.c2, vt0.c0, rt0.c2))>((vt0.c0, rt0.c2, rt0.c2))) AS INTEGER) FROM vt0 WHERE ((~ (CASE '-2363934726404519230 105-4684158910224173944:-86358657420638526 '  WHEN 0.8365088351210425 THEN '' ELSE -1498914713 END)));SELECT DISTINCT ((((vt0.c1)IS NOT(rt0.c0))) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (GROUP_CONCAT(rt0.c2))) FROM vt0 WHERE (((((NULL) IS FALSE))GLOB(CAST(NULL AS INTEGER))));SELECT ALL ((((((((0.18382561896824412)AND(((rt0.c2)+(vt0.c1)))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c1)))AND(((vt0.c1)>>(vt0.c1)))) FROM vt0, rt0 WHERE ((((((((((('-1661048299')AND('j]')))OR(x'')))OR('131717861')))OR('1569874612'))) NOT NULL)); -- 1ms;
SELECT DISTINCT MAX(((rt0.c1) BETWEEN (rt0.c0) AND (NULL))) FROM vt0, rt0; -- 0ms;
SELECT CASE WHEN ((vt0.c0)<<(rt0.c1)) THEN (((x''))<=((vt0.c0))) ELSE vt0.c1 COLLATE BINARY END FROM rt0 WHERE (CAST((+ (NULL)) AS INTEGER));SELECT DISTINCT COUNT(*) OVER ( ORDER BY (((((((((((((((rt0.c0))<=((vt0.c0))))AND(((rt0.c1)OR(vt0.c0)))))OR(((rt0.c1) IS TRUE))))OR(((vt0.c0) ISNULL))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))AND(((((vt0.c0)OR(rt0.c1)))OR(rt0.c0)))) DESC), ((json_patch(rt0.c1, rt0.c2)) BETWEEN (-4.54496009E8) AND (rt0.c2)), (+ (CAST(rt0.c2 AS NUMERIC))) FROM vt0 ORDER BY '-466371651' DESC  NULLS FIRST, CAST((((vt0.c0))<>((vt0.c1))) AS REAL), ((((((((((rt0.c1)>=(rt0.c0)))AND(CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(rt0.c1 COLLATE BINARY)))AND(((0X56274510)&(rt0.c1)))))OR((((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c0))))) DESC;SELECT DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM, (((x''))<=(((NOT ('i\'))))), COUNT(*), TOTAL(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) OVER ( ORDER BY json_quote(((rt0.c0)>=(rt0.c1))) ROWS  CURRENT ROW), COUNT(((rt0.c0) IS FALSE)) FROM vt0 WHERE ((((((('1392869010') NOT BETWEEN (-1.994624038E9) AND (NULL)))OR(((((NULL)OR('~3\r')))AND('0.15293989728053892')))))OR((('D{[R') BETWEEN (0.46215395867191855) AND (0.9554389988314589)))));SELECT DISTINCT json_extract(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), x'') FROM vt0 WHERE (((NULL)*(CASE WHEN '1736865154' THEN 1164589938 WHEN '-949820796' THEN '1592773339' WHEN x'' THEN NULL END))) ORDER BY IFNULL(TRIM(vt0.c1), ((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c1)))  NULLS FIRST;SELECT ALL (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((x'e381', rt0.c1, vt0.c1)) AND ((vt0.c0, rt0.c2, rt0.c2))) COLLATE RTRIM FROM vt0 WHERE ('');SELECT ALL vt0.c1 FROM rt0;SELECT ALL (((json_remove(rt0.c0, vt0.c0), CAST(vt0.c0 AS BLOB), load_extension(rt0.c1, rt0.c2)))<=((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)), CAST(rt0.c2 AS BLOB), NULL))), ((AVG(vt0.c1)) NOT BETWEEN (1.7976931348623157E308) AND ('')), ((8.86969382E8)>>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) FROM vt0, rt0 WHERE ((((0.350542433150138)) NOT BETWEEN ((((((x'9292')OR(x'2510')))AND(NULL)))) AND ((NULL)))); -- 0ms;
SELECT (((('') ISNULL)) NOT BETWEEN (MIN(vt0.c0)) AND (((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM vt0;SELECT DISTINCT ((((((((((((((rt0.c0) ISNULL))OR(AVG(rt0.c0))))OR(LENGTH(rt0.c1))))OR(CAST(rt0.c1 AS INTEGER))))AND(NULL)))AND(((vt0.c0)>=(vt0.c0)))))AND(HEX(DISTINCT rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c1)))OR(x'')) IN (CAST(x'' AS TEXT))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)>>(NULL)) THEN LENGTH(rt0.c2) ELSE (- (rt0.c2)) END FROM rt0 ORDER BY CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) AS TEXT) DESC; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1)/(vt0.c0))) OVER ( ORDER BY CAST((NOT (rt0.c0)) AS TEXT), ((((ABS(''))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)))AND(((x'4fda') NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS FIRST) FROM vt0 LIMIT 938428409;SELECT ALL DENSE_RANK() OVER (), rt0.c1, LAST_VALUE((((rt0.c0))<((vt0.c1 COLLATE NOCASE)))) OVER ( ROWS (((vt0.c1) IS TRUE) IN ()) PRECEDING) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)*(rt0.c1))) ISNULL) FROM vt0, rt0 WHERE ((((0.18845210934560797)) BETWEEN ((((NULL)<>(0.17809699741694907)))) AND ((CASE WHEN x'f667' THEN x'2bfd' WHEN 'ZY剙!' THEN x'97a6' WHEN '770941026' THEN '-1669138585' ELSE NULL END)))) GROUP BY ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND('886969382')))<((vt0.c1 IN ()))), (((vt0.c1 IN (rt0.c1))) NOTNULL), ((((((((rt0.c1)AND(((vt0.c0)<=(rt0.c1)))))AND(NULLIF(rt0.c1, vt0.c1))))AND(((vt0.c1)IS NOT(vt0.c0)))))AND((NOT (vt0.c0)))) HAVING ((CAST(rt0.c0 AS BLOB))OR(vt0.c1)); -- 0ms;
SELECT DISTINCT SUM(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END) OVER () FROM vt0, rt0; -- 0ms;
SELECT CAST((~ (rt0.c0)) AS NUMERIC) FROM rt0, vt0 WHERE (((NULL COLLATE NOCASE) BETWEEN (((('㩣M', 0.5262411745283985, x''))=((NULL, '-175267193', NULL)))) AND (json_extract('394547136', 'zw㗳.b')))) ORDER BY ((((((rt0.c1)AND(NULL)))OR(vt0.c1))) IS TRUE) ASC, NULL  NULLS LAST; -- 0ms;
SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((CAST(NULL AS TEXT) IN ())); -- 0ms;
SELECT DISTINCT (((((- (vt0.c0)))AND((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))))AND(((rt0.c1)LIKE(rt0.c1)))), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ((('-475491615') BETWEEN (rt0.c2) AND (rt0.c2))) AND (MIN(rt0.c2))), TYPEOF(GROUP_CONCAT(rt0.c1)), (CAST('' AS INTEGER) IN ()), (((((rt0.c2 IN ()))AND((~ (rt0.c0)))))OR(0.007200771033739062)) FROM vt0;SELECT DISTINCT CAST((- (rt0.c2)) AS INTEGER) FROM vt0, rt0 WHERE (((((NULL) NOT BETWEEN ('%a6\r') AND (x'')))>>(CASE NULL  WHEN '1445414160' THEN '?輣g<' END))) GROUP BY HEX(DISTINCT ((rt0.c0)>=(vt0.c1))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE (('Xqo')<=(x''))  WHEN 493343290 COLLATE BINARY THEN (0.4567848766756242 IN ()) END); -- 0ms;
SELECT DISTINCT ((rt0.c1 IN (rt0.c1, rt0.c0)) IN ()), CASE WHEN ((vt0.c1) IS TRUE) THEN 'ZY剙!' WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN CASE WHEN -1584775832 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END WHEN COUNT(*) THEN (+ (vt0.c0)) WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN CAST(vt0.c1 AS BLOB) WHEN ((vt0.c0)<<(rt0.c0)) THEN TYPEOF(vt0.c1) ELSE (- (vt0.c0)) END, ((((QUOTE(vt0.c0))AND(((vt0.c0)+(vt0.c1)))))OR(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 END)) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT 0X57e65259 FROM rt0 ORDER BY '+YWR8'  NULLS LAST, ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOTNULL)  NULLS FIRST, CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))  WHEN ((vt0.c0)LIKE(NULL)) THEN (((rt0.c1, vt0.c1, rt0.c2)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((vt0.c1, vt0.c1, rt0.c0))) END  NULLS FIRST;SELECT (((rt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((MAX(rt0.c2)))), (((rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((NULL) BETWEEN (rt0.c1) AND (rt0.c0))))), COUNT(NULL COLLATE BINARY), vt0.c1, (((SUM(rt0.c1)))<((rt0.c1 COLLATE RTRIM))) FROM vt0, rt0 GROUP BY (('') IS TRUE) HAVING ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((rt0.c0 IN ())) AND ((vt0.c1 IN (vt0.c0)))) LIMIT 1909279631 OFFSET 537183132; -- 0ms;
SELECT ALL (CAST(rt0.c0 AS TEXT) IN ()) FROM vt0, rt0 WHERE (((((json_extract(0Xffffffffb8f4b3a7, '\뮽JR'))AND(CASE NULL  WHEN 1232486246 THEN NULL WHEN NULL THEN '0.9648571290442772' WHEN -1.19814618E8 THEN '' END)))AND(UPPER(0.11053041367391059))));SELECT DISTINCT json_remove(TOTAL(rt0.c1), (~ (vt0.c1)), ((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)), -654890839), x'', CAST((vt0.c0 IN (rt0.c2)) AS TEXT) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))OR(vt0.c1))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((((rt0.c2)AND(rt0.c1)))AND(0X1b51d296)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c1 END)OR(CAST(rt0.c1 AS BLOB))))AND(rt0.c2 COLLATE NOCASE)) FROM rt0, vt0 WHERE (NULL) LIMIT -896188739 OFFSET 1518134926; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT rt0.c1)) IS FALSE), COUNT(*) FILTER(WHERE ((ABS(DISTINCT rt0.c0))>=(NULLIF(DISTINCT '  ', vt0.c1)))) OVER (), ((CAST(rt0.c2 AS REAL))=('dt')) FROM vt0, rt0 WHERE (TIME(((x'') BETWEEN (NULL) AND (NULL)), CASE WHEN 0.5299515855593571 THEN 1257940934 WHEN 0xfffffffff354b6ce THEN '-930766771' WHEN NULL THEN 0.585261977170726 END, CAST('v[q/*/8' AS TEXT))) LIMIT -786443208 OFFSET 1214515589; -- 0ms;
SELECT ALL NULLIF(DISTINCT (~ (rt0.c2)), TIME(vt0.c0, vt0.c0, vt0.c1, rt0.c0, vt0.c1)) FROM vt0;SELECT (('-930766771')<<(CAST(rt0.c2 AS TEXT))) FROM vt0, rt0 WHERE (((((((('r	'))<=(('-228859125'))))AND('1264601354' COLLATE BINARY)))OR((('+︔\n')>=(NULL))))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( ORDER BY ((rt0.c1) BETWEEN (0.5612303860809298) AND (rt0.c0)) COLLATE RTRIM  NULLS FIRST) FROM vt0 WHERE ((((((x'')AND(0.2952124176987726)))OR(NULL)) IN ()));SELECT DISTINCT ((((((((((((MIN(rt0.c1))OR(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END)))OR(TOTAL(vt0.c0))))OR(((rt0.c2)OR(vt0.c1)))))AND(((rt0.c0)IS(rt0.c2)))))AND(((vt0.c1)!=(vt0.c1)))))OR((rt0.c1 IN ()))) FROM rt0, vt0 WHERE ((((('430762376')<>(0.5437323255097444)))%((~ (NULL))))); -- 0ms;
SELECT DISTINCT LEAD(NULL, x'', json_array_length((NOT (vt0.c1)))) OVER ( ORDER BY CASE WHEN ((vt0.c1)+(rt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)) ELSE ((rt0.c0)>>(rt0.c2)) END) FROM vt0 WHERE (CAST(CASE '-544480241'  WHEN x'fd85' THEN '770941026' WHEN NULL THEN 1722084910 WHEN NULL THEN x'' END AS NUMERIC)) LIMIT -677239056;SELECT ALL ((((((vt0.c0)OR(vt0.c1)))AND(NULL)))OR(((NULL)GLOB(vt0.c0)))) FROM vt0 WHERE (((('')) BETWEEN ((CASE WHEN '1689816430' THEN '1048298177' WHEN x'' THEN NULL WHEN NULL THEN 'O9now樕' END)) AND ((CASE WHEN NULL THEN x'c52f' ELSE 'A赮s/(	Y' END)))); -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c1)) BETWEEN ((x'')) AND ((rt0.c1))))), CASE WHEN CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN x'18c5d259' WHEN rt0.c1 THEN '0.5262411745283985' END THEN ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c1)) ELSE (((rt0.c2))<(('aBtcjz8eL'))) END, (+ (((vt0.c0)-(NULL)))) FROM vt0 LIMIT -1238257501 OFFSET 285212180;SELECT DISTINCT GROUP_CONCAT(0.8879909512054227) FROM vt0 WHERE (((CAST('-216980136' AS INTEGER)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (((vt0.c1)IS NOT(rt0.c0))) AND (CAST(rt0.c1 AS NUMERIC))), AVG((rt0.c1 IN ())) OVER (), CASE x'655d'  WHEN COUNT(vt0.c1) THEN x'1438' END FROM vt0 WHERE (((((('')) BETWEEN ((-1584775832)) AND (('781492751')))) NOTNULL));SELECT DISTINCT COUNT((((rt0.c0))<((vt0.c1)))) FROM vt0 ORDER BY LIKELY(((vt0.c1)<>(rt0.c0))) ASC, (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))*(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;SELECT DISTINCT ((((vt0.c1)>(vt0.c1)))=(((vt0.c1)GLOB(vt0.c1)))) FROM vt0 WHERE ((((((('-356084062')AND(0.23252455079440149)))AND(NULL))) BETWEEN (UPPER(NULL)) AND (CASE NULL  WHEN 'xs⟸' THEN x'' END))) LIMIT -970715570 OFFSET -454496009; -- 0ms;
SELECT CASE CAST(0.4742989247120474 AS REAL)  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((vt0.c1)GLOB(rt0.c1)) WHEN vt0.c0 THEN rt0.c0 COLLATE BINARY WHEN (vt0.c1 IN (vt0.c1)) THEN UNLIKELY(rt0.c2) END, (((CAST(rt0.c1 AS TEXT), json_quote(rt0.c1), (((0.5081687392789518, rt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((vt0.c1, rt0.c1, vt0.c0)))))<=((((((((((rt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)), rt0.c1, (NOT (vt0.c1))))), CAST(((rt0.c0)GLOB(NULL)) AS TEXT) FROM vt0;SELECT DISTINCT (((((vt0.c0 IN ()))AND((~ (rt0.c0)))))AND(((x'2fa3') IS FALSE))) FROM rt0 WHERE (((CASE WHEN '' THEN '-983364642' END)>(TOTAL_CHANGES()))); -- 1ms;
SELECT (((((vt0.c1) NOT NULL)))>(((rt0.c2 IN (rt0.c0))))) FROM rt0, vt0 LIMIT -31853759; -- 0ms;
SELECT COUNT(*) OVER () FROM rt0 WHERE (((('C')<=(NULL)) IN ())) GROUP BY CAST((NOT (rt0.c2)) AS INTEGER) LIMIT -1610944001; -- 0ms;
SELECT DISTINCT (((((rt0.c0))<=((vt0.c0))))/(((rt0.c1) ISNULL))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) IN ()), GROUP_CONCAT(((vt0.c1)||(rt0.c2))) FROM rt0 WHERE ((('-93134195')||((- (1029019430)))));SELECT DISTINCT ((MIN(rt0.c1))==((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT '[]', COUNT(*), ((((vt0.c0) IS TRUE))+((rt0.c0 IN ()))) FROM rt0 WHERE ((((347218238)) BETWEEN (((NULL IN ()))) AND (((((((((('1689816430')AND('-310664466')))OR(0.9189196754619007)))AND(NULL)))AND(324787697)))))) LIMIT 1001873333 OFFSET -1189983683;SELECT ALL ((SUM(vt0.c0))%(((((vt0.c1)OR(vt0.c1)))AND(rt0.c0)))), (- ((vt0.c0 IN ()))), (- (GROUP_CONCAT(vt0.c1))) FROM rt0, vt0 GROUP BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 END AS NUMERIC), ((((0.4715380585603358)*(rt0.c2))) BETWEEN ((((rt0.c1))<((rt0.c1)))) AND ((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))))), ((rt0.c1)GLOB(NULL)) HAVING ((SUM(rt0.c0)) NOT BETWEEN (((x'') IS TRUE)) AND (rt0.c2 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (((('aBtcjz8eL')AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))))OR(((((vt0.c1)AND(rt0.c2)))OR(vt0.c1)))) FROM vt0 WHERE (((((NULL, 0.18520609128416565, 'an')) NOT BETWEEN ((NULL, NULL, '1048011072')) AND ((0.7997395882106046, '-475491615', NULL))) IN ()));SELECT DISTINCT ((((rt0.c1)>(0.5570056112787753)))>(DATE(rt0.c2, vt0.c1, rt0.c2, vt0.c1, rt0.c0))), ((vt0.c0)==(rt0.c1)) COLLATE RTRIM, ((GROUP_CONCAT(rt0.c1))AND((NULL IN ()))) FROM vt0;SELECT ALL ((vt0.c1 COLLATE NOCASE) BETWEEN (((vt0.c0)&(rt0.c1))) AND (((((rt0.c0)AND(rt0.c1)))AND(x'')))) FROM vt0 WHERE (((CASE WHEN NULL THEN 0.5891361899573494 ELSE '385280796' END)>(CASE WHEN -473584777 THEN 0.8256291161870931 ELSE '4Q1OB*f?1' END))) LIMIT 714095203 OFFSET -1022694941;SELECT DISTINCT NTILE((- (((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1))))) OVER ( GROUPS BETWEEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY PRECEDING AND ((0.9219329405699214) BETWEEN (8.86969382E8) AND (CAST(rt0.c1 AS INTEGER))) FOLLOWING) FROM rt0 WHERE (CAST(((NULL)>>(x'')) AS REAL)); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS NUMERIC)), json_array_length(1.164589938E9, ('0.9825857257263336' IN ())), TOTAL_CHANGES() FROM rt0;SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((((((((rt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))), (+ ((((x''))>((vt0.c1))))), (((((rt0.c1)*('938428409'))))!=((((vt0.c0)*(0.4142155259690896))))) FROM rt0, vt0 WHERE (CAST((((NULL)) BETWEEN ((0.7054911689074552)) AND (('-1943144484'))) AS BLOB)); -- 1ms;
SELECT ALL ((((0.44480171957047765)OR((((rt0.c0, vt0.c1, vt0.c0))<>((rt0.c2, vt0.c0, rt0.c1))))))AND((~ (rt0.c2)))) FROM vt0 WHERE ('l7옦&+I');SELECT DISTINCT AVG((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT vt0.c0 FROM rt0, vt0 WHERE ((((NOT (0.03215496195064671))) NOT BETWEEN ((x'' IN (NULL, x''))) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((vt0.c1 IN ()) IN ()), CAST(rt0.c1 AS INTEGER), (((rt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, ((rt0.c2) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 END)) AND ((((x'82d1e481')IS(vt0.c0)), (NOT (vt0.c0)), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2))))) FROM rt0 WHERE (((((NULL)&(-3.5131311E8)))<<(CAST('31' AS BLOB)))) GROUP BY ((IFNULL(vt0.c0, vt0.c0)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1))) AND (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))) HAVING (((CAST(vt0.c1 AS TEXT)))<>((CAST(vt0.c1 AS REAL))));SELECT SUM(((rt0.c0)AND(vt0.c1))) OVER (), (((rt0.c0, vt0.c1, x'', vt0.c1, rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL), vt0.c0 COLLATE RTRIM, SQLITE_VERSION(), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((((rt0.c1)AND(rt0.c1)))OR('-1392982126')))) AND ((rt0.c0, ((((rt0.c1)OR(vt0.c1)))AND(vt0.c1)), ((vt0.c1)&(rt0.c0)), x'd393', IFNULL(DISTINCT vt0.c0, rt0.c1)))), (((COALESCE(DISTINCT x'2afa', x'')))>=((((1996613067)IS(vt0.c1))))) FROM rt0 WHERE (CAST((('781492751') IS TRUE) AS TEXT));SELECT ALL (((((((((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR((rt0.c1 IN (rt0.c2)))))AND('')))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END)))OR(((((((((vt0.c1)OR(x'')))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))) FROM vt0, rt0 WHERE ((- ((((0.721742053799815))>((1.7976931348623157E308)))))) LIMIT -1600536671; -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOTNULL))<(CAST(rt0.c1 AS BLOB))) FROM vt0;SELECT ALL ((COUNT(vt0.c1)) IS TRUE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS BLOB) IN (((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c1)))) FROM vt0 WHERE ((((+ ('nz')))>=(x'')));SELECT ALL TOTAL(CAST(rt0.c0 AS TEXT)) FROM rt0 WHERE (((0xffffffffa8e95a82 IN ('-454496009')) IN (CAST('dG' AS NUMERIC), CASE '587701234'  WHEN -9.7071557E8 THEN 0.0026520258458041512 ELSE NULL END))); -- 0ms;
SELECT rt0.c0 FROM vt0;SELECT (NOT ('68? D3-(')) FROM vt0 WHERE (((NULL)OR('-983364642')) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT CAST(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 END AS INTEGER) FROM rt0, vt0 WHERE (((((NULL)||(0.26590550996551765))) NOT BETWEEN (5.37183132E8) AND (((9223372036854775807) IS FALSE)))) LIMIT -1900698689 OFFSET 1923248779; -- 0ms;
SELECT ALL NULL, AVG(x'') OVER (), '-930766771' FROM vt0, rt0 GROUP BY ((((('-786443208' IN ()))OR((rt0.c1 IN ()))))AND(rt0.c1 COLLATE RTRIM)) HAVING ((((((((((rt0.c2) IS TRUE))OR(((rt0.c1)>(rt0.c1)))))OR(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c2)*(rt0.c0)))))OR(vt0.c1)); -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c0) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOTNULL))<(TOTAL(vt0.c1))) FROM rt0;SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c1 END)<>(((rt0.c2) NOTNULL))) FROM rt0, vt0 WHERE (CASE WHEN COALESCE(NULL, 0.7027923750684976) THEN -544480241 END) LIMIT 1642422978 OFFSET 1919182167; -- 1ms;
SELECT ALL ((rt0.c2) IS TRUE) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL ((0.03215496195064671) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND ((NOT ('368771808')))) FROM vt0 ORDER BY LIKELY(((vt0.c1)<=(rt0.c2))) ASC  NULLS FIRST;SELECT CAST(((rt0.c0) ISNULL) AS TEXT), ((((CASE WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN 0.5382265246016977 ELSE rt0.c1 END)AND((vt0.c1 IN ()))))AND((~ (rt0.c2)))), CASE (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, vt0.c0, -690370526)))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c1 END FROM vt0 WHERE (CASE CASE NULL  WHEN 1.048298177E9 THEN '1257940934' WHEN '-1612181168' THEN 'ꈏ>z[{g.' WHEN x'' THEN '9\r{௞^瑟R' WHEN NULL THEN x'4ee5' WHEN 394547136 THEN NULL ELSE x'' END  WHEN NULL THEN (('}G')|('-1821833691')) ELSE ((x'1547')>=('-1792689248')) END) LIMIT -1466308411 OFFSET 676555288;SELECT DISTINCT (~ (rt0.c1)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0 ORDER BY ((NULLIF(rt0.c2, vt0.c0)) ISNULL) LIMIT -50293063 OFFSET 1488241572;SELECT ALL AVG(((rt0.c1)==(rt0.c1))) OVER (), (((('rFg+2F1') IS TRUE))<=(0.4142155259690896 COLLATE BINARY)), (((- (rt0.c0)))LIKE(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c1 END)), CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)) AS REAL), (- (CASE WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c1 END)) FROM vt0, rt0 WHERE ((((x'')) NOT BETWEEN ((((('-739950646'))!=((0.43944557491245384))))) AND (((NOT (NULL)))))) ORDER BY (+ (((((rt0.c0)OR(vt0.c0)))AND(rt0.c2)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (TIME(rt0.c2, rt0.c0, rt0.c0) IN ()), ((((vt0.c1)AND(rt0.c2))) NOTNULL), (((vt0.c0) IS TRUE) IN ()) FROM rt0 WHERE ((x'' IN ('')) COLLATE RTRIM) ORDER BY ((((('0.8355012258625091')AND(rt0.c0)))OR(rt0.c2)) IN (((vt0.c1) NOT NULL)));SELECT (((~ (rt0.c1)))%(vt0.c0)) FROM vt0 WHERE (ABS(((((((((-1.7976931348623157E308)OR(0Xffffffff8398d95d)))OR(x'')))OR('⍎䷖6')))AND('1003131841'))));SELECT (((+ (rt0.c2))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))) AND (rt0.c0 COLLATE RTRIM)), AVG('-654890839'), ((((vt0.c1) ISNULL)) ISNULL) FROM rt0;SELECT DISTINCT ((rt0.c1)||(vt0.c1)) COLLATE RTRIM, LAST_VALUE(((UPPER(DISTINCT rt0.c0))<=((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) OVER (), COUNT(((vt0.c0) IS TRUE)) OVER () FROM rt0;SELECT (((rt0.c0, rt0.c2, x''))>((0.8278357108555995, vt0.c0, rt0.c1))) COLLATE BINARY FROM vt0 LIMIT 503961139;SELECT DISTINCT SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE RTRIM) FROM rt0; -- 0ms;
SELECT (((vt0.c0 IN ()))&((((vt0.c0))<=((vt0.c0))))) FROM vt0 WHERE ((QUOTE('412016955') IN ())); -- 0ms;
SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))OR(json_array_length(rt0.c1))))OR(rt0.c2 COLLATE NOCASE)) FROM rt0, vt0; -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((((vt0.c1) IS TRUE))) AND ((((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(rt0.c1))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT UNLIKELY((9.9374866E7 IN ())) FROM vt0 GROUP BY ((CAST(vt0.c0 AS BLOB)) IS FALSE) HAVING x''; -- 0ms;
SELECT ALL (~ (vt0.c0 COLLATE RTRIM)) FROM rt0, vt0 GROUP BY json_patch((((rt0.c0, rt0.c1, rt0.c0))>((rt0.c1, rt0.c0, vt0.c0))), LTRIM(vt0.c0)) HAVING (((rt0.c0) NOTNULL) IN ());SELECT DISTINCT (+ (((vt0.c1)AND(vt0.c1)))) FROM rt0;SELECT DISTINCT ((((AVG(rt0.c2))AND(0.20152611440938795)))AND((rt0.c2 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 LIMIT 366946883; -- 0ms;
SELECT ALL rt0.c1, ((((vt0.c0) BETWEEN ('%S') AND (NULL)))/((rt0.c1 IN (x'')))), (- (rt0.c0)) COLLATE BINARY FROM rt0;SELECT DISTINCT ('1892952500' IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1)>>(vt0.c1))) FROM rt0 WHERE ((((('X*1O') BETWEEN (NULL) AND (0Xffffffffe848b307))) IS FALSE));SELECT ((COUNT(vt0.c1)) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))) AND (MAX(rt0.c0))) FROM vt0, rt0 WHERE (((NULL COLLATE NOCASE) BETWEEN (((x'') ISNULL)) AND (CAST('1474712153' AS TEXT)))); -- 0ms;
SELECT DISTINCT MAX(COALESCE(DISTINCT rt0.c1, rt0.c2)) FROM rt0 WHERE (0X1818f250) GROUP BY x''; -- 1ms;
SELECT (((((+ (rt0.c2)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(NULL)) FROM rt0, vt0 WHERE (ABS(('	' IN ()))); -- 0ms;
SELECT DISTINCT (((((- (vt0.c1)))OR(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c1)>(vt0.c0)))) FROM rt0 GROUP BY CAST(LOWER(rt0.c1) AS NUMERIC), ((rt0.c0)AND(rt0.c2)) COLLATE RTRIM, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (CAST(rt0.c2 AS BLOB)));SELECT DISTINCT CASE WHEN rt0.c1 COLLATE RTRIM THEN ((0.6040880791771944) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END FROM vt0;SELECT DISTINCT (vt0.c0 IN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))), CASE WHEN (NOT (rt0.c1)) THEN MIN(rt0.c2) ELSE HEX(DISTINCT vt0.c0) END, COUNT(*) OVER ( ORDER BY CAST(CAST(rt0.c1 AS REAL) AS REAL)  NULLS FIRST) FROM rt0, vt0 WHERE (CAST((NOT ('1029019430')) AS NUMERIC)); -- 0ms;
SELECT (vt0.c0 IN ()) FROM vt0 NOT INDEXED, rt0 WHERE (((CAST(NULL AS BLOB)) BETWEEN ((((((((((((('-റ')AND(NULL)))AND('89449822')))OR(x'')))OR(NULL)))AND(NULL)))AND(0.5652446057988942))) AND ((('') NOT BETWEEN (x'0cb4') AND (x''))))); -- 1ms;
SELECT ALL (((((rt0.c1)>=(vt0.c0))))>((((((vt0.c1)AND(vt0.c0)))OR(rt0.c1))))) FROM rt0 NOT INDEXED WHERE (CAST((((-722411202)) NOT BETWEEN ((0.8565164525258775)) AND (('0.8200067138689457'))) AS REAL));SELECT DISTINCT SUM((~ (vt0.c1))), '!IVhtev', (NOT (((rt0.c1)-(rt0.c0)))) FROM rt0 GROUP BY CAST((- (rt0.c0)) AS NUMERIC) HAVING ((((((vt0.c1) IS FALSE))AND((+ (rt0.c1)))))AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))));SELECT ALL (CAST(rt0.c1 AS TEXT) IN ()), (NOT ((((rt0.c2, rt0.c1, rt0.c2))>((x'a257', NULL, vt0.c1))))), (((((vt0.c1, rt0.c1, vt0.c0, rt0.c0, rt0.c1))!=((rt0.c2, vt0.c1, rt0.c0, vt0.c0, vt0.c1))))>>((vt0.c1 IN (vt0.c1)))) FROM rt0 ORDER BY x'9470' ASC;SELECT DISTINCT (vt0.c1 COLLATE RTRIM IN ()), CASE (((rt0.c1)) BETWEEN ((NULL)) AND ((vt0.c0)))  WHEN UPPER(rt0.c0) THEN rt0.c1 ELSE ((rt0.c0) BETWEEN ('0.44480171957047765') AND (vt0.c1)) END, ((((((vt0.c1) ISNULL))AND(CAST(rt0.c2 AS TEXT))))OR(((-1994624038)OR(vt0.c0)))) FROM vt0 WHERE (((((('-175267193'))=((0Xffffffffa6a86067)))) BETWEEN (CASE x'8d41'  WHEN x'6663' THEN x'e0f1' END) AND (CAST(x'' AS BLOB))));SELECT ALL ((x'')GLOB(rt0.c2)) COLLATE BINARY, ((((vt0.c1) IS TRUE))<((((rt0.c2))>((rt0.c0))))), ((((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))AND(vt0.c0)))AND('1909279631')))AND(rt0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((0.4566290923737618)))) AND (((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))) FROM rt0, vt0 WHERE (((((((x'')<=(0xffffffffad7fe56a)))AND((+ ('98')))))OR(CASE WHEN NULL THEN '-212551986' ELSE NULL END))) LIMIT -1723178201 OFFSET 1788982886; -- 0ms;
SELECT ALL ((LIKELIHOOD('-1669138585', 0.6630420294462664))<(rt0.c1)), (- (CAST(vt0.c0 AS INTEGER))), (- ((NOT (vt0.c0)))) FROM rt0 WHERE (((x'') NOT NULL));SELECT DISTINCT rt0.c2 FROM rt0 ORDER BY LTRIM(((rt0.c1) ISNULL)); -- 0ms;
SELECT TRIM(DISTINCT (rt0.c2 IN ()), (rt0.c1 IN (vt0.c0, vt0.c1))) FROM vt0, rt0 LIMIT -880949786 OFFSET -872997532; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 ORDER BY ((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) IS TRUE))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))  NULLS LAST LIMIT 1832488739;SELECT ALL CAST(CAST(30739685 AS INTEGER) AS INTEGER) FROM rt0 NOT INDEXED; -- 0ms;
SELECT NTILE(vt0.c0) OVER (), ((('-93134195' IN (rt0.c1)))>=('')), CASE ((x'c5be')>=(rt0.c0))  WHEN (((vt0.c1))=((vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END, CAST(((rt0.c2)AND(rt0.c0)) AS INTEGER), 0.07696471094618051 FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT CAST(NULL AS INTEGER))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0) FROM rt0 WHERE ((((x'8d2c')) NOT BETWEEN ((CASE WHEN 0.721742053799815 THEN NULL END)) AND ((((x'dfbb')!=(0.03215496195064671))))));SELECT DISTINCT rt0.c1, LENGTH(MAX(vt0.c0, 0xffffffffc1e90d31)), ((((rt0.c1)GLOB(vt0.c1)))=(x'')) FROM rt0, vt0 WHERE (((((((((((0.23651037686994691)AND('-228859125')))AND('135777578')))AND(x'')))AND(''))) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(0.3408733803219465 AS INTEGER), (((rt0.c2)) BETWEEN ((TRIM(DISTINCT rt0.c2))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))), ((TOTAL('1916092208'))=((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM vt0;SELECT CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1)!=(vt0.c0)) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) END, 0Xe221c42, TIME(CAST(rt0.c1 AS TEXT), ((rt0.c1) ISNULL), (+ (rt0.c0))) FROM rt0, vt0 WHERE (((x'' COLLATE RTRIM)/(((((-1083070260)AND(x'a460')))OR(0.6737727441145517))))) ORDER BY TRIM(DISTINCT ((rt0.c0)%(vt0.c1)), ((((((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c1))); -- 0ms;
SELECT ALL ((((x'2127') NOT BETWEEN (vt0.c0) AND (rt0.c1))) ISNULL) FROM vt0, rt0 WHERE (DATETIME(CAST(0.2649093513860562 AS NUMERIC), (((x'39a8')) NOT BETWEEN ((NULL)) AND ((NULL))), (((('O9N')OR(1.048298177E9)))AND(x'')))); -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c0 AS BLOB))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0, rt0 WHERE ((NOT (x''))); -- 0ms;
SELECT ((UNICODE(rt0.c0)) ISNULL) FROM rt0, vt0 WHERE (((('-511994173')) NOT BETWEEN (((-5.69588128E8 IN ()))) AND (((((('0.1783383524994031')AND(NULL)))OR(x'')))))); -- 1ms;
SELECT DISTINCT ((CAST(rt0.c2 AS BLOB))+(((rt0.c0)<>(rt0.c1)))), CASE WHEN '-564616019' THEN LIKELIHOOD(0.12889849945727283, 0.26264850669353657) WHEN (vt0.c1 IN ()) THEN ((rt0.c1)>>(rt0.c1)) WHEN MIN(rt0.c1) THEN ((vt0.c0)=(rt0.c2)) END, ((LIKELIHOOD(vt0.c1, 0.7900289458533206))>(((rt0.c2)*(vt0.c0)))) FROM vt0;SELECT DISTINCT (+ (SQLITE_SOURCE_ID())) FROM rt0, vt0 WHERE ((((NULL IN ())) ISNULL)) LIMIT 1358419864; -- 0ms;
SELECT ALL COUNT(*) OVER (), NULL, NULL FROM vt0, rt0 WHERE (((CASE WHEN x'7639' THEN x'a972' WHEN NULL THEN NULL WHEN '99374866' THEN x'eb03' END)<<(LTRIM(x'0d98', 'now')))); -- 0ms;
SELECT DISTINCT (- (LIKELY(vt0.c1))) FROM vt0, rt0 WHERE (x'5ecadb992fa4') LIMIT 1957664271 OFFSET 285212180; -- 0ms;
SELECT DISTINCT (('o48pwQ') BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1))) AND (CASE vt0.c0  WHEN vt0.c1 THEN rt0.c0 END)) FROM vt0;SELECT DISTINCT x'' FROM rt0, vt0 WHERE ((SQLITE_COMPILEOPTION_USED('') IN ())) GROUP BY (((vt0.c0)) BETWEEN (((((rt0.c2))>((rt0.c0))))) AND (((((vt0.c1))>((rt0.c2)))))) HAVING (~ (rt0.c2)); -- 0ms;
SELECT ((((x'')AND(CAST(vt0.c1 AS INTEGER))))AND(((vt0.c0)LIKE(vt0.c0)))), (((0.20152611440938795)) BETWEEN (((+ (rt0.c0)))) AND ((GROUP_CONCAT(vt0.c1)))), CASE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END  WHEN json_patch(rt0.c0, rt0.c1) THEN ((rt0.c1)|(rt0.c2)) WHEN TRIM(DISTINCT rt0.c1) THEN ((vt0.c0)|(rt0.c0)) WHEN COUNT(rt0.c2) THEN MIN(vt0.c1) ELSE (0.27152967809880524 IN (rt0.c2)) END FROM rt0;SELECT DISTINCT ((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) IN ()) FROM vt0, rt0 WHERE (((CAST('-2065188270' AS INTEGER))+((((NULL)) NOT BETWEEN ((0.5206709707200217)) AND ((-1.661048299E9)))))) GROUP BY ((((rt0.c0)IS NOT(vt0.c0))) NOT NULL), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2))) COLLATE NOCASE, (NOT (rt0.c2 COLLATE NOCASE)) HAVING ((((0.5306934809242292) IS FALSE)) NOT NULL) ORDER BY ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))&(((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)))); -- 0ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0))) BETWEEN (HEX(vt0.c1)) AND (rt0.c2)) FROM vt0, rt0 WHERE (CAST(((x'46d4') IS TRUE) AS NUMERIC)) GROUP BY 0.7656761553390992 HAVING CAST((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('867180817'))) AS INTEGER); -- 1ms;
SELECT DISTINCT rt0.c1 COLLATE NOCASE FROM rt0 ORDER BY 0.5182449222051422  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((MAX(vt0.c0))OR((rt0.c1 IN (rt0.c1)))))OR(TOTAL(vt0.c1))))OR(vt0.c1)))OR(NULL)), ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END)>(((rt0.c0) IS FALSE))), NTH_VALUE((((rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c2)))) AND (((- (rt0.c0))))), (NULL IN ())) OVER () FROM rt0 WHERE (json_insert(x'', '-35157466', NULL) COLLATE BINARY);SELECT DISTINCT GROUP_CONCAT('G9N/') OVER (), CAST(('-2057963867' IN ()) AS REAL), AVG(((vt0.c1) NOTNULL)) COLLATE NOCASE, TOTAL(((rt0.c0) IS FALSE)) OVER ( ORDER BY STRFTIME(vt0.c1, rt0.c2, rt0.c0) COLLATE NOCASE DESC, ((json_array(rt0.c0, rt0.c2)) NOT BETWEEN (('G*{b.g4霦' IN ())) AND ((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0)))))  NULLS FIRST), MIN(((rt0.c2) IS FALSE)) FROM rt0, vt0 WHERE (UNLIKELY(DISTINCT (- (x'')))); -- 0ms;
SELECT ALL CASE WHEN rt0.c2 THEN ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)) WHEN (rt0.c2 IN (vt0.c0)) THEN ((((((((rt0.c0)AND(0xffffffffa7043554)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)) WHEN ((rt0.c1)LIKE(vt0.c1)) THEN rt0.c2 COLLATE BINARY END, ((((rt0.c1)OR(x'')))OR(CAST(vt0.c0 AS REAL))), CUME_DIST() OVER () FROM vt0, rt0 WHERE ((~ (HEX('堡NxzDM')))); -- 16ms;
SELECT DISTINCT (CAST(rt0.c2 AS NUMERIC) IN ((('1532025899') NOTNULL), ((rt0.c2)<<(vt0.c0)))), NULL, (CASE WHEN rt0.c2 THEN vt0.c1 END IN (((rt0.c1) NOT NULL))) FROM rt0, vt0 WHERE (((((0.9646914539042258)<>('1742231347'))) NOT BETWEEN (((('131717861', NULL, '')) NOT BETWEEN ((-228859125, '1771885708', 'D)q2')) AND (('', 1.72208491E9, 'P%<5uo')))) AND ((+ ('2117178356'))))); -- 0ms;
SELECT DISTINCT 0.0970493005453773, ((x'355b') IS TRUE), (((((((((((rt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))))>=((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))))) FROM rt0 WHERE (CASE WHEN (((((((((((('{	K䶃}5+')AND(0.5299515855593571)))AND('blB⛵?x/A9')))AND(-2108436468)))OR(NULL)))AND(7.14095203E8)))OR(0.39613525652631554)) THEN (((((((('-654890839')AND(NULL)))OR(537183132)))AND(x'7660')))AND('1474712153')) ELSE (('1285074212')>=('-896188739')) END) LIMIT 2075388327 OFFSET -599912205;SELECT UPPER((vt0.c0 IN ())) FROM vt0, rt0 WHERE (UNLIKELY(((NULL) ISNULL))); -- 0ms;
SELECT (rt0.c1 COLLATE RTRIM IN ()) FROM rt0, vt0 WHERE (CASE ((0x48640985)GLOB(-1.669138585E9))  WHEN 1796356906 COLLATE RTRIM THEN 0.2939967108319874 COLLATE NOCASE END) LIMIT -859525639 OFFSET -356084062; -- 0ms;
SELECT NTH_VALUE((((((rt0.c2)OR('7 ')))OR(rt0.c0)) IN ()), NULL) OVER () FROM rt0 WHERE (CASE ((0.9278883086688215)<(0Xffffffffb0a260fb))  WHEN ((NULL)IS NOT(0x1d07a104)) THEN 0.3734814609134417 ELSE ((-2.087134883E9)|(NULL)) END) GROUP BY ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c1 COLLATE BINARY) AND (rt0.c0 COLLATE BINARY)), 'Y_㗳G', (((vt0.c1)) NOT BETWEEN (((~ (rt0.c1)))) AND ((vt0.c0 COLLATE RTRIM)));SELECT ALL ((AVG(-3.68757261E8))<=(SUM(rt0.c2))) FROM rt0, vt0 WHERE (NULLIF(1.736865154E9, '-504248241') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT UPPER(((rt0.c2)<=(rt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT vt0.c1, ((((rt0.c2) NOTNULL)) NOTNULL), rt0.c1 FROM vt0 ORDER BY (((+ (vt0.c0))) IS TRUE) DESC LIMIT 1029019430;SELECT DISTINCT (~ (((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT CASE WHEN ((('>_')) BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN ((vt0.c1) ISNULL) END, (rt0.c1 IN ()), CASE WHEN CAST(vt0.c1 AS INTEGER) THEN ((vt0.c0)%(vt0.c0)) END FROM rt0 WHERE ((((NULL, x'', 'd*hVmDNP', -1917850186, 0.6462792110479186)) BETWEEN (((0.021990004534439334 IN ()), NULLIF('-1927801852', 'ys}uuEXH!'), '' COLLATE RTRIM, (0.9540504979673529 IN (0.28814979277071573)), ((0.11976308948536807) IS TRUE))) AND (((+ (x'')), (('{}') IS FALSE), ((NULL) NOT BETWEEN (0x71cd4b8f) AND ('679171583')), ((((((((0.16367354891049835)AND(x'')))AND(0xffffffffc1b0cca5)))AND('-815405934')))AND(x'1336')), ((x'952f')/(''))))));SELECT ALL ((CAST(rt0.c2 AS BLOB))%(json_extract(x'4145', rt0.c2))), (((('135904903')=(vt0.c1)))*((+ (rt0.c2)))), rt0.c0 FROM vt0 WHERE (((MAX(NULL, 0.9053399644681015, '㩣M', x'e4f5'))&((('blB⛵?x/A9')<=(NULL)))));SELECT DISTINCT (((vt0.c0, rt0.c0, vt0.c1))>=((rt0.c1, vt0.c0, rt0.c1))) COLLATE RTRIM FROM vt0, rt0 WHERE (TRIM(((NULL)GLOB('967362957')))) ORDER BY rt0.c2; -- 0ms;
SELECT DISTINCT CASE WHEN (- (x'33e3')) THEN rt0.c2 COLLATE NOCASE ELSE ((0.6683443415578875) IS TRUE) END FROM rt0, vt0 WHERE (((((0X68354d3d)=(NULL)))/(ROUND('-1788328952', x'')))); -- 0ms;
SELECT DISTINCT (((((rt0.c1)AND(NULL)))OR(vt0.c0)) IN ()), COUNT(rt0.c1), rt0.c1 FROM rt0, vt0; -- 0ms;
SELECT (((rt0.c1) NOT NULL) IN ()) FROM rt0 WHERE ((((0.16971792488971482, x'', 0.0985377166584247)) BETWEEN ((((0Xffffffff9c7ba7c4)*(NULL)), CASE WHEN NULL THEN -1002905872 END, CAST(0.9451006962608021 AS TEXT))) AND ((((((0.5349132976210282)AND(NULL)))AND(x'')), ((x'faf4')&(x'')), ((0x25b4f0f4)*('-1139340909')))))); -- 0ms;
SELECT DISTINCT -1687385634 FROM rt0 WHERE (((((((((((0x6fa9159f)OR(NULL)))AND(1.518134926E9)))OR(0x0)))OR('[㽦'))) BETWEEN (0.04442247799395227 COLLATE RTRIM) AND (NULL COLLATE NOCASE))) ORDER BY ((CAST(vt0.c1 AS TEXT)) BETWEEN (((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))) AND ((rt0.c1 IN ())));SELECT DISTINCT rt0.c2, (((((((vt0.c0))==((vt0.c1))))AND(((vt0.c0) ISNULL))))OR(COUNT(*))), CASE ((((((((rt0.c2)OR(vt0.c1)))OR(NULL)))OR(vt0.c1)))AND(x''))  WHEN ((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END FROM vt0, rt0 WHERE (CASE WHEN (NULL IN ()) THEN ((NULL)GLOB(x'')) WHEN (+ (202766083)) THEN (((1.68981643E9))>(('-49205500'))) WHEN (('1445414160')LIKE(0.8637338520268213)) THEN x'' END); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0, rt0 WHERE (((((NULL) NOT NULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT (((rt0.c1))==((rt0.c0)))), ((((vt0.c1)OR(CAST(rt0.c2 AS TEXT))))OR((+ (rt0.c0)))), CASE ((0.44154741795974695) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN x'9468' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE rt0.c2 END FROM vt0, rt0 WHERE (((LIKELIHOOD('', 0.37626009432478624)) NOT NULL)) GROUP BY CAST((+ (rt0.c0)) AS REAL) ORDER BY CASE CAST(rt0.c1 AS NUMERIC)  WHEN vt0.c1 COLLATE BINARY THEN rt0.c2 ELSE vt0.c1 COLLATE NOCASE END DESC; -- 0ms;
SELECT CASE CAST(rt0.c1 AS BLOB)  WHEN rt0.c1 COLLATE BINARY THEN GROUP_CONCAT(rt0.c1) ELSE (rt0.c1 IN ()) END FROM vt0 WHERE (CASE WHEN 0Xfffffffffa72e28d THEN ((0.9825921289857481)==(x'')) WHEN (('b8,') BETWEEN (NULL) AND (x'')) THEN json_type(0.19732279453473645) WHEN CAST(0.48657453980747667 AS REAL) THEN CASE WHEN NULL THEN 0.23321681828060026 ELSE '394547136' END ELSE ((0.5185621632647102)*(NULL)) END) LIMIT 644650328 OFFSET 838755366;SELECT ((CASE WHEN rt0.c2 THEN vt0.c0 END)IS((((('Lm')OR(rt0.c0)))AND(rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) AS NUMERIC), ((NULL) NOT NULL), GROUP_CONCAT(((vt0.c1) NOTNULL)) OVER () FROM vt0 LIMIT 1764143058 OFFSET -28050128;SELECT ALL SUM(((vt0.c1)*(vt0.c0))), (((rt0.c0) NOTNULL) IN ()), SQLITE_VERSION() FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((CASE 0.3567075785584204  WHEN 0.23252455079440149 THEN -790429889 END) BETWEEN (((rt0.c2)IS NOT(vt0.c0))) AND (((rt0.c2)=(vt0.c0)))) FROM rt0 WHERE (((((('1442562697') NOT BETWEEN (NULL) AND ('-653410528'))))>=((NULL COLLATE NOCASE))));SELECT DISTINCT TOTAL((- (vt0.c1))) FROM vt0, rt0 WHERE (IFNULL(DISTINCT CASE WHEN NULL THEN NULL END, ((((0.7739733795348228)AND(NULL)))AND(0.20491810792247867)))) GROUP BY CASE (NOT (rt0.c0))  WHEN ((vt0.c1)>>(rt0.c2)) THEN ((vt0.c1)>(vt0.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (rt0.c0 IN (vt0.c0)) WHEN vt0.c1 THEN 'nz' END, (rt0.c2 IN (0.13596042365462646)), (((vt0.c1)) BETWEEN ((((0.037033651573109116) BETWEEN (rt0.c1) AND (vt0.c1)))) AND ((CASE WHEN NULL THEN -1973274452 END))) HAVING ((((((rt0.c2) ISNULL))OR(rt0.c2)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))); -- 0ms;
SELECT ALL COUNT(*) FROM rt0, vt0 ORDER BY ((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(((vt0.c1) IS FALSE))))AND(((rt0.c2)>=(rt0.c1)))) ASC  NULLS LAST, ((((vt0.c0)+(x'309d')))LIKE(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST, ((vt0.c1) NOT NULL) COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT ALL (((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))<=(((rt0.c2)IS NOT(vt0.c1)))), ((rt0.c0 IN ()) IN ()), (- (((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))) FROM rt0;SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))|(NULL COLLATE BINARY)) FROM rt0, vt0 WHERE (0xffffffffd11fd438); -- 1ms;
SELECT (AVG(rt0.c2) IN ((~ (rt0.c2)))) FROM rt0, vt0 WHERE (RTRIM(CAST('-1159101206' AS BLOB))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT ALL SUM(((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT ALL '7 ', ((((((((COUNT(vt0.c1))AND(((x'aedb91bb')IS(vt0.c1)))))OR(CAST(rt0.c0 AS INTEGER))))OR(((vt0.c0)<<(rt0.c1)))))OR(UPPER(DISTINCT rt0.c0))), '-246174343' FROM vt0, rt0 LIMIT 1314585583; -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (x'2ba0') AND (rt0.c0)))IS NOT(rt0.c1)) FROM rt0, vt0 WHERE ((((((NULL)) BETWEEN ((x'')) AND ((1.44541416E9)))) ISNULL)); -- 0ms;
SELECT ALL CASE (rt0.c1 IN ())  WHEN MIN(rt0.c1) THEN CAST(vt0.c1 AS NUMERIC) ELSE vt0.c1 END, (COUNT(vt0.c1) IN ()), SUM(((rt0.c1)>(rt0.c2))) OVER () FROM vt0 WHERE (HEX(x'' COLLATE RTRIM));SELECT DISTINCT SUM((rt0.c1 IN ())) OVER ( PARTITION BY (~ (LIKELY(DISTINCT vt0.c0))), ABS('-1760011294') ORDER BY (((vt0.c1 IN (rt0.c2))) NOT NULL) DESC) FROM vt0 NOT INDEXED, rt0; -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND (((+ (rt0.c2))))), '', (((rt0.c1)/(NULL)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>=((IFNULL(vt0.c0, rt0.c2)))) FROM vt0, rt0 LIMIT -1875973861; -- 0ms;
SELECT CAST((('Zu!pB툺DT(') NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT) FROM vt0 WHERE ('o&');SELECT ((SUM(rt0.c0))<(((rt0.c1) ISNULL))), LOWER(((rt0.c0) NOT NULL)), CASE (- (vt0.c0))  WHEN (((vt0.c0, rt0.c1, rt0.c0))>=((rt0.c1, rt0.c0, rt0.c0))) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) ISNULL) END FROM vt0, rt0 WHERE (CASE ((('')) NOT BETWEEN ((0.32868645371255734)) AND (('XQO')))  WHEN 0.8135368170227643 COLLATE BINARY THEN ((NULL) NOT NULL) END); -- 0ms;
SELECT CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)) ELSE '830399145' END, ((vt0.c0) NOTNULL) COLLATE NOCASE, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)|(vt0.c1)))) FROM rt0, vt0; -- 1ms;
SELECT ALL (((rt0.c0 IN ())) NOT BETWEEN (0.9974501075812429) AND ((((vt0.c1))=((rt0.c2))))), CAST(((((((((vt0.c0)OR(vt0.c1)))OR(-2087134883)))OR(rt0.c1)))AND(vt0.c0)) AS NUMERIC), GROUP_CONCAT(((rt0.c1)<<(rt0.c0))) FROM rt0, vt0 WHERE ((((0.5460457648949697) NOT NULL) IN ())) LIMIT -1191922777; -- 0ms;
SELECT 0.11467999668522988 FROM rt0 WHERE (-5.11994173E8); -- 0ms;
SELECT CAST((- (rt0.c1)) AS BLOB), NULL, TOTAL(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2))) OVER () FROM rt0, vt0 ORDER BY (((rt0.c2 IN ()))=(((vt0.c1) IS FALSE))) DESC, json_array(SQLITE_SOURCE_ID(), (((rt0.c1))<((rt0.c2))), (- (rt0.c1)), ((((((((NULL)AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(rt0.c2)), ((rt0.c1)<<(vt0.c1)), rt0.c0)  NULLS FIRST, rt0.c2; -- 0ms;
SELECT rt0.c0 FROM rt0, vt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (NULL))) BETWEEN (NULL COLLATE NOCASE) AND (((-1430222972) NOT BETWEEN (x'') AND (''))))) LIMIT 755409936; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN vt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE x'a552' END)OR(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))AND('1718091812')))OR(NULLIF(DISTINCT vt0.c0, vt0.c0))) FROM vt0 WHERE ((+ (CASE 0.32503197404828765  WHEN 0.8812784690620112 THEN NULL END)));SELECT CAST(GLOB(rt0.c0, vt0.c1) AS INTEGER) FROM vt0 WHERE (CAST(json('hg檪Ql[_r''') AS NUMERIC));SELECT ALL (((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((((((vt0.c1)AND(rt0.c2)))OR(vt0.c1)), rt0.c1 COLLATE BINARY, vt0.c0 COLLATE NOCASE)) AND ((vt0.c0, ((((vt0.c1)AND(rt0.c0)))AND(0xffffffffc5630bde)), (NULL IN ())))) FROM vt0, rt0 WHERE (((((((((x'80e5d219701b')OR('')))AND(-611445172)))AND(((0.9189196754619007) NOT NULL))))AND(CAST(0.352614199565055 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c2) NOTNULL))))AND(CAST(rt0.c2 AS BLOB)))) OVER (), (~ (rt0.c1)), (((rt0.c0)-(rt0.c0)) IN (MIN(vt0.c1))) FROM rt0 WHERE (CAST(-701687719 AS INTEGER) COLLATE RTRIM);SELECT ALL CASE CAST(rt0.c1 AS NUMERIC)  WHEN vt0.c1 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE CASE rt0.c0  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END END, rt0.c1, CAST(((vt0.c1)>(vt0.c0)) AS INTEGER) FROM vt0 WHERE (TRIM(DISTINCT x''));SELECT DISTINCT ((((vt0.c0)%(rt0.c1))) ISNULL), (NULL IN ((rt0.c1 IN ()))), ((rt0.c1) BETWEEN (json_insert(rt0.c2, '', rt0.c1)) AND (((472102909) IS TRUE))) FROM vt0, rt0 WHERE (((((((NULL)OR(0.41300860617781565)))OR(NULL)))>(((-841659500) NOTNULL)))) LIMIT -1206418244 OFFSET 141872433; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, vt0 LIMIT 1597963379; -- 1ms;
SELECT DISTINCT ((rt0.c2) IS TRUE), CASE WHEN TOTAL(NULL) THEN (NOT (vt0.c0)) END, DENSE_RANK() OVER (), (- (((vt0.c0)IS NOT(rt0.c2)))), (((NULL)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) COLLATE NOCASE COLLATE RTRIM FROM vt0 ORDER BY (((+ (rt0.c1))) BETWEEN (((rt0.c2)<<('-454496009'))) AND (rt0.c2 COLLATE NOCASE))  NULLS FIRST;SELECT DISTINCT TYPEOF(DISTINCT (((vt0.c1))>=((rt0.c0)))), MIN(CASE vt0.c1  WHEN 0.09343830406537801 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 0.43325304633159345 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END), ((-2.12551986E8)>>(((rt0.c1)||(vt0.c0)))) FROM rt0 WHERE (CAST(TYPEOF(DISTINCT 0x6b2cb6a7) AS REAL));SELECT ALL (((rt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, vt0.c0, (rt0.c0 IN ()))) AND ((MAX(vt0.c0), ((rt0.c0)IS NOT(vt0.c0)), (~ (rt0.c1))))) FROM vt0 GROUP BY (((0x452e7d59)) NOT BETWEEN (((rt0.c1 IN (rt0.c1)))) AND (((((x'20ec')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));SELECT ALL ((((((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(vt0.c0)) COLLATE BINARY COLLATE RTRIM FROM rt0, vt0 GROUP BY (((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), '-1340859248', CASE WHEN vt0.c0 THEN rt0.c0 END))>((((rt0.c1) BETWEEN (rt0.c0) AND (x'')), (((vt0.c1))==((vt0.c0))), (rt0.c2 IN ())))) HAVING 0.9348140979776041; -- 0ms;
SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))))<((((rt0.c2) ISNULL)))), ((rt0.c0)<>(CAST(rt0.c2 AS NUMERIC))), ((((vt0.c0) ISNULL)) BETWEEN (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c1 END) AND (((rt0.c2) NOTNULL))) FROM rt0, vt0 WHERE (CASE (('1705984193') ISNULL)  WHEN (0.23651037686994691 IN ()) THEN NULL END); -- 0ms;
SELECT ALL ((((rt0.c1)<=(rt0.c2)))GLOB(((rt0.c1) IS TRUE))) FROM vt0, rt0 WHERE ((((NULL)) BETWEEN (((NOT (x'')))) AND ((((NULL)+(x'9cf1')))))) GROUP BY CAST(MAX(rt0.c0, x'', rt0.c0, 0.8340016864584201, rt0.c1, rt0.c1) AS INTEGER) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0x715f40fa THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c0 END)>(((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c0)))) DESC  NULLS FIRST, ((vt0.c1) NOT NULL); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)<=(vt0.c0)) AS NUMERIC), (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN vt0.c0 END)) AND ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))), COUNT(((vt0.c0)&(rt0.c1))) OVER () FROM vt0;SELECT DISTINCT CASE (NOT (vt0.c0))  WHEN CAST(vt0.c1 AS INTEGER) THEN CAST(vt0.c1 AS TEXT) WHEN (+ (rt0.c1)) THEN ((rt0.c2)!=(rt0.c1)) WHEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN ((vt0.c1) IS FALSE) ELSE ABS(DISTINCT rt0.c1) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0))>>(rt0.c2)), (((rt0.c0)) NOT BETWEEN (('0.7311997410474386')) AND ((CAST(rt0.c0 AS INTEGER)))), ((((((rt0.c1) BETWEEN (rt0.c1) AND ('1020505658')))AND((((rt0.c2))<=((vt0.c0))))))OR((+ (vt0.c1)))) FROM rt0 WHERE (((CASE WHEN '1966552196' THEN NULL END)+(((0.4364941284417665) ISNULL))));SELECT (+ (rt0.c1)) FROM rt0, vt0 WHERE (CASE (NOT (x''))  WHEN STRFTIME(x'', '-511994173', 0.8084679261035801, x'', x'') THEN -9.7071557E8 END); -- 0ms;
SELECT rt0.c0 FROM vt0, rt0; -- 0ms;
SELECT CASE CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END  WHEN (((x'', rt0.c1, vt0.c0))<=((-249716449, vt0.c0, rt0.c0))) THEN x'' END, ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0))) AND ((vt0.c1 IN ()))), CAST((((rt0.c0))<((vt0.c0))) AS BLOB), NTILE(CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS BLOB)) OVER (), ((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)))OR((((vt0.c0))>((vt0.c0))))))AND(LENGTH(vt0.c0))) FROM vt0 WHERE ((((((NULL)GLOB('+|')), CAST(x'' AS REAL), ((((((((-711808420)OR(NULL)))AND('_d')))OR(-2.057963867E9)))AND('-2137373560'))))<>((CASE WHEN NULL THEN '' END, (('65499633') BETWEEN ('1569874612') AND (x'')), ('yxt' IN ())))));SELECT GROUP_CONCAT(rt0.c0) FROM vt0, rt0; -- 0ms;
SELECT (((((vt0.c1)OR(rt0.c2)))OR(rt0.c0)) IN ()) FROM rt0, vt0 WHERE (CAST(LIKELIHOOD('', 0.4050549567314674) AS TEXT)) GROUP BY (- (rt0.c0 COLLATE BINARY)) HAVING (vt0.c1 IN ()) COLLATE BINARY; -- 0ms;
SELECT ((UNLIKELY(DISTINCT rt0.c1))/(((rt0.c0)<=(rt0.c1)))), CAST(rt0.c0 AS TEXT), (((vt0.c1, CASE WHEN rt0.c0 THEN '1736301434' ELSE vt0.c0 END, vt0.c0))<=((CHANGES(), x'', (((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, NULL, vt0.c0)))))) FROM rt0 WHERE (((NULL COLLATE NOCASE)<=((x'db55' IN ()))));SELECT ALL CAST((~ (vt0.c0)) AS REAL) FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0)AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (CASE '-1225738160' COLLATE BINARY  WHEN CASE ''  WHEN NULL THEN x'ae92' ELSE '' END THEN ((((((((0xfffffffffceecf88)OR(0.06364604182626699)))AND(NULL)))AND(0xffffffff8ccfcf87)))AND(0x1a802ea3)) END); -- 0ms;
SELECT UPPER('b*') COLLATE RTRIM, (NOT (CASE rt0.c2  WHEN rt0.c2 THEN NULL END)), ((((CASE vt0.c0  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c2 END)AND(MIN(vt0.c0))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT IFNULL(COUNT(*), CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END), (rt0.c1 IN ()) COLLATE NOCASE, ((vt0.c0)>(rt0.c0)) COLLATE NOCASE FROM rt0 LIMIT 480329597 OFFSET -2111211555;SELECT ALL CAST((~ (rt0.c0)) AS REAL) FROM vt0;SELECT DISTINCT ((((((x'4e61')OR(rt0.c1)))OR('1048011072')))*(rt0.c1 COLLATE BINARY)), ROW_NUMBER() OVER (), COUNT(0.5104300198052009) OVER () FROM vt0 WHERE ((((NULL)) BETWEEN (((NULL IN ()))) AND ((CASE WHEN NULL THEN 2123811649 ELSE NULL END))));SELECT DISTINCT rt0.c1, (((vt0.c1 COLLATE RTRIM))<=(((rt0.c0 IN ())))), (NOT (NULLIF(rt0.c1, vt0.c1))) FROM vt0 WHERE (((((((((((0Xffffffffa18a3d68) NOT BETWEEN (0.8293588385650746) AND (NULL)))OR((((((((('-511994173')AND(0.6483715714527692)))OR(x'')))AND('-1250805546')))OR(x'')))))OR(COALESCE('-662296273', 0.7606435827717757))))AND(((1264601354) IS FALSE))))OR(((('<2\nUi<%m', NULL, 'G9N/'))<((-1496966294, x'85c2', '-541636472'))))));SELECT DISTINCT load_extension((vt0.c0 IN ()), vt0.c1) FROM rt0, vt0;SELECT DISTINCT COUNT(*) OVER () FROM rt0; -- 1ms;
SELECT (rt0.c2 IN ()) FROM vt0, rt0 WHERE (((((x'4160')+(1123725878))) BETWEEN (((-4.75491615E8)GLOB(NULL))) AND (json_patch('侑C', NULL)))); -- 0ms;
SELECT ALL CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 END, TOTAL(((vt0.c1)<(vt0.c0))), ((((NULL)OR(((rt0.c0)<>(vt0.c0)))))OR(TOTAL(vt0.c0))) FROM vt0 CROSS JOIN rt0 ON (((((rt0.c1))==((rt0.c2)))) BETWEEN (1753189103) AND (((rt0.c0) NOT NULL))) WHERE (((DATE('ed', -1359786479, '', 0.45102849453215654, '641058598')) BETWEEN ('120434762' COLLATE NOCASE) AND ((7.81492751E8 IN (x'4bd3'))))) GROUP BY ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))<<(rt0.c1 COLLATE RTRIM)), ((((CASE rt0.c0  WHEN vt0.c0 THEN NULL END)AND((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))OR('^')), (((NOT (vt0.c1))) IS TRUE); -- 0ms;
SELECT ALL ((MIN(rt0.c1)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((rt0.c0 IN (rt0.c0, '')))), (((vt0.c0 IN ())) NOT NULL), (('') BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE, (((rt0.c1)) BETWEEN ((vt0.c1 COLLATE RTRIM)) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))), (((vt0.c0)IS(rt0.c1)) IN ()) FROM rt0, vt0 NOT INDEXED WHERE (CAST(((-1981999305) BETWEEN (NULL) AND (NULL)) AS BLOB)); -- 1ms;
SELECT DISTINCT (NOT (0.9270600377913696)) FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), 294474180, CASE ((rt0.c1)IS(-4.75491615E8))  WHEN CAST(vt0.c0 AS TEXT) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))) WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END THEN CAST(vt0.c0 AS NUMERIC) WHEN ((rt0.c0) IS FALSE) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 END ELSE ((vt0.c0)<>(rt0.c1)) END FROM vt0;SELECT ((0.8302318146802713) IS TRUE), CAST(vt0.c1 COLLATE RTRIM AS INTEGER), rt0.c1 FROM rt0, vt0 WHERE ((((((x'') ISNULL)))>((CAST('0.0026520258458041512' AS BLOB))))); -- 0ms;
SELECT DISTINCT COUNT((rt0.c2 IN (rt0.c2))) OVER () FROM vt0, rt0 WHERE (((((NULL)>('1700398124')))<<((NOT (x'a1334e32'))))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END  WHEN (((vt0.c1, rt0.c0, rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, vt0.c1)) AND ((rt0.c2, '>q', rt0.c1, rt0.c2, vt0.c1))) THEN ((((((((rt0.c2)OR(vt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)) WHEN ((0.24149504621426732) ISNULL) THEN ((rt0.c1)GLOB(rt0.c2)) WHEN rt0.c1 COLLATE NOCASE THEN NULL END ASC  NULLS FIRST, (((+ (rt0.c2))) NOT BETWEEN (1.68981643E9) AND (vt0.c1)) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((vt0.c1)IS NOT((((rt0.c0))>=((rt0.c1))))) FROM vt0, rt0; -- 0ms;
SELECT ((DATETIME(rt0.c0, rt0.c1, rt0.c0)) NOT NULL) FROM rt0 WHERE (CAST((NULL IN ()) AS NUMERIC)) LIMIT 1029019430 OFFSET -172096476; -- 1ms;
SELECT COUNT(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) COLLATE RTRIM FROM rt0 GROUP BY (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END, CAST(vt0.c1 AS BLOB))) AND ((((vt0.c1)-(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((vt0.c1)/(vt0.c1))))), ((((~ (rt0.c0))))==((((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c0))))), ((rt0.c1 COLLATE RTRIM) IS FALSE) HAVING CASE WHEN rt0.c2 THEN (((rt0.c0))=((rt0.c1))) END;SELECT ALL CASE WHEN 0.8600150205105832 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN x'' ELSE vt0.c0 END COLLATE NOCASE, LAST_INSERT_ROWID(), 0x3bb75fb5 FROM vt0, rt0 WHERE (x'8db4') GROUP BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT); -- 0ms;
SELECT DISTINCT SUM(CASE WHEN rt0.c2 THEN rt0.c1 END) FROM rt0, vt0 WHERE (0.06293505941248057); -- 0ms;
SELECT DISTINCT UNLIKELY(((vt0.c0) ISNULL)), LIKE(vt0.c0, vt0.c1, '5') COLLATE BINARY, GROUP_CONCAT((vt0.c1 IN (vt0.c1, rt0.c2))), COUNT(*) OVER (), (- (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c0)))) FROM vt0, rt0 WHERE ((0X5b7c1377 IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((LIKELY(DISTINCT vt0.c0)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (x'4df367d9')) FROM vt0;SELECT DISTINCT '''YX_?j', ((CASE WHEN rt0.c0 THEN vt0.c1 END) IS TRUE), ((ABS(DISTINCT vt0.c0))IS NOT(CAST(rt0.c1 AS NUMERIC))) FROM rt0;SELECT rt0.c1 FROM vt0, rt0 WHERE (((CASE WHEN x'' THEN '-1661048299' WHEN 0Xffffffffaab9ae1d THEN '1573466253' WHEN NULL THEN NULL ELSE '1592773339' END)IS(((x'a874') IS FALSE)))); -- 0ms;
SELECT ALL SUM(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c2 END) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP) FROM vt0 WHERE (CASE TYPEOF(DISTINCT -1.041691343E9)  WHEN CASE WHEN 0Xffffffffc5630bde THEN '' ELSE '-786443208' END THEN CASE WHEN '1993909743' THEN '' WHEN '1751905721' THEN 0.8442100060380046 WHEN '' THEN 'NN\VaG' END WHEN ((NULL) NOT BETWEEN (x'') AND ('0.3334411259462283')) THEN 1.264601354E9 COLLATE BINARY WHEN CAST(NULL AS TEXT) THEN CAST('*\n8V)' AS INTEGER) ELSE ((x'0eb9') BETWEEN (0xffffffffdafcc3cd) AND (NULL)) END);SELECT DISTINCT RTRIM(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END), (((vt0.c1)) NOT BETWEEN ((LOWER(vt0.c1))) AND ((CASE NULL  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))), ((CASE rt0.c2  WHEN vt0.c0 THEN vt0.c1 END)AND(vt0.c0 COLLATE BINARY)), TRIM(DISTINCT (vt0.c0 IN ()), rt0.c2), rt0.c2 FROM vt0 WHERE (CASE (x'' IN (0.262573737544891))  WHEN 2.117178356E9 THEN CASE WHEN x'' THEN 0.5802891859783115 WHEN x'0484' THEN '1654592727' WHEN 0.7541840967510657 THEN x'' END ELSE 0.4567848766756242 COLLATE NOCASE END);SELECT GROUP_CONCAT(((((0Xffffffffc6240e4e)OR(rt0.c2)))AND(vt0.c0))) OVER () FROM vt0 WHERE (CASE (x'99d4' IN ())  WHEN (('-1210046472') BETWEEN ('-609320407') AND (1257940934)) THEN (+ (0.3607736498036186)) ELSE ((NULL) NOTNULL) END);SELECT DISTINCT (((- (rt0.c0)))*((NOT (rt0.c1)))) FROM rt0 WHERE ((((NULL) IS FALSE) IN ())) ORDER BY ((rt0.c2 IN (rt0.c2)) IN (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 ELSE '-454496009' END, (((vt0.c0))<((rt0.c2)))));SELECT DISTINCT ((rt0.c1 COLLATE NOCASE)-(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c0 END)) FROM rt0 WHERE (COALESCE(((0Xfffffffff07b1d6b) ISNULL), (((('%1')AND(0Xffffffffc1b0cca5)))OR(0.36868765884734356))));SELECT ALL (NOT (CASE rt0.c2  WHEN 2.8521218E8 THEN vt0.c1 WHEN rt0.c2 THEN x'6bcc' WHEN vt0.c0 THEN rt0.c1 END)) FROM rt0;SELECT DISTINCT CAST(CAST(rt0.c1 AS REAL) AS NUMERIC) FROM vt0;SELECT ALL LEAD(load_extension(vt0.c1, vt0.c1) COLLATE BINARY, ((((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1))=((x'', vt0.c1, vt0.c1, vt0.c1, vt0.c0))) IN ()), ABS(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) OVER ( PARTITION BY CASE ((rt0.c2)==(vt0.c1))  WHEN ((rt0.c1) NOT BETWEEN ('r,8M') AND (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)) ELSE ((vt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END, ((((((vt0.c1)AND(vt0.c0)))AND(rt0.c2)))|(((rt0.c2) NOT BETWEEN (NULL) AND (vt0.c0))))) FROM vt0 WHERE ((((NULL, x'e66c', 0.47043274830694526)) BETWEEN ((((((x'')AND(0.41728713251315763)))AND(0.10043725209887877)), CAST('' AS REAL), CASE WHEN NULL THEN x'' ELSE NULL END)) AND (('-466371651', CAST(x'' AS REAL), ('\n#99⒇7[?' IN ())))));SELECT ALL COUNT(*) FROM vt0, rt0; -- 0ms;
SELECT ALL ((((GROUP_CONCAT(rt0.c0))OR((((rt0.c1, rt0.c0, vt0.c1))<=((rt0.c1, rt0.c0, rt0.c2))))))AND(((vt0.c0)|(vt0.c0)))), (((((rt0.c2) BETWEEN (vt0.c1) AND ('3\'))))!=((((rt0.c1)IS(vt0.c0))))), (INSTR(vt0.c0, rt0.c1) IN (-502039175)), TOTAL(ABS(DISTINCT rt0.c0)) OVER (), ((SUM(vt0.c1))>>(CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)) FROM vt0, rt0 WHERE ('-1608841892') LIMIT -189383909; -- 0ms;
SELECT DISTINCT ((((((((rt0.c1 COLLATE NOCASE)OR((((vt0.c1, rt0.c2, vt0.c0))<((vt0.c0, rt0.c2, rt0.c2))))))AND((+ (vt0.c0)))))OR(vt0.c1 COLLATE NOCASE)))OR(((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))), (- (CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE vt0.c0 END)), CUME_DIST() OVER () FROM rt0, vt0 GROUP BY CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM HAVING (((+ (rt0.c0)))-(rt0.c2)); -- 1ms;
SELECT ALL (((+ (vt0.c1)))OR(((vt0.c1) NOTNULL))), (((0X7cd2cb70 IN ())) IS FALSE), (-4.75491615E8 IN (rt0.c1)), CAST(rt0.c0 AS REAL), 0xffffffffef881f18 FROM rt0 WHERE ((CAST(x'eb45' AS REAL) IN ()));SELECT ALL COUNT(((((rt0.c0)OR(vt0.c1)))AND(vt0.c1))), GROUP_CONCAT(CASE vt0.c0  WHEN rt0.c0 THEN 0.16455720890272973 END), ((((rt0.c0)OR(vt0.c0)))OR(vt0.c1)) COLLATE RTRIM, COUNT(*), SUM(((rt0.c0) ISNULL)) OVER () FROM rt0, vt0 WHERE (((- (0.4742989247120474)) IN ())); -- 0ms;
SELECT ((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))>=(((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c2)))), (NOT (((vt0.c1)<=(rt0.c2)))), (((rt0.c0 IN ()))>((vt0.c0 IN ()))) FROM vt0, rt0 WHERE (((((0.6560787883731395)<('hg檪ql[_r'''))) ISNULL)); -- 0ms;
SELECT DISTINCT (vt0.c1 IN ()) COLLATE BINARY FROM rt0 WHERE (CASE WHEN '1569874612' COLLATE BINARY THEN ((NULL)GLOB(x'3b5b')) ELSE ((((x'')AND('-1616425205')))AND('-228859125')) END); -- 0ms;
SELECT ALL (NOT (0.4142155259690896)) FROM vt0, rt0 ORDER BY CASE (vt0.c0 IN ('e!w]Tm##E', vt0.c0))  WHEN (((vt0.c1, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((rt0.c1, rt0.c0, vt0.c0))) THEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN 'N' WHEN rt0.c2 THEN x'' END ELSE (((rt0.c2))<((rt0.c0))) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT rtreenode(rt0.c1, (('582437189') BETWEEN (rt0.c1) AND (rt0.c1))), UNLIKELY(0xffffffffc90db72f), HEX((NULL IN ())) FROM vt0;SELECT DISTINCT ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))<>(rt0.c2)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (x'') AND (vt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT ((rt0.c0)IS(rt0.c1)) COLLATE BINARY FROM rt0, vt0 LIMIT 2076176856; -- 0ms;
SELECT TRIM((0.2847732691294872 IN ()), ((rt0.c1)<<(rt0.c1))) FROM rt0, vt0 WHERE (((LIKELY(0Xffffffffdf8be40f)) NOT NULL)); -- 0ms;
SELECT DISTINCT (~ ((((rt0.c0)) BETWEEN ((0.5979336723589657)) AND ((rt0.c0))))) FROM vt0, rt0 WHERE (((((((NULL)OR(x'')))AND(NULL)))<=(CASE NULL  WHEN 'qk頻/mC霦uu' THEN 0.7675816488068408 WHEN '{}' THEN 0.8879909512054227 WHEN '1164589938' THEN x'6615' WHEN x'' THEN NULL WHEN 0.5538770553011516 THEN NULL WHEN NULL THEN '' WHEN NULL THEN 'fxU(KU''䟹E' ELSE '-351313110' END))); -- 0ms;
SELECT ((NULL)IS NOT(LIKELY(NULL))) FROM rt0, vt0 WHERE (COALESCE(DISTINCT NULL, ((0xffffffffb631b0a3) IS FALSE))); -- 0ms;
SELECT DISTINCT STRFTIME(CAST(vt0.c0 AS TEXT), LTRIM(vt0.c1, rt0.c1), ((rt0.c0)>>(vt0.c1))) FROM vt0, rt0 WHERE (CAST(CAST(NULL AS TEXT) AS REAL)) GROUP BY ((rt0.c1 COLLATE RTRIM)>=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))), (+ (ABS(rt0.c0))), x'' HAVING (((((rt0.c0) ISNULL)))!=((CAST(vt0.c1 AS BLOB)))) LIMIT -1610944001 OFFSET -130678824; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY (((rt0.c1) IS FALSE) IN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))  NULLS LAST) FROM vt0, rt0 ORDER BY (((~ (rt0.c0)))>=(vt0.c0 COLLATE BINARY)); -- 0ms;
SELECT CAST(((((((((vt0.c1)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c1)) AS TEXT) FROM rt0;SELECT ALL (((vt0.c1 IN (vt0.c0))) NOTNULL) FROM vt0, rt0 WHERE (((COALESCE(DISTINCT NULL, 770941026)) BETWEEN (CAST(0.43156385724943525 AS BLOB)) AND ((('-1191922777')AND('346321778'))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)IS NOT(rt0.c1)) AS NUMERIC), NULLIF(DISTINCT ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c2)), (((vt0.c0))>((rt0.c0)))), (- (TOTAL(rt0.c1))) FROM vt0, rt0 WHERE (((((((NULL)OR(NULL)))OR(NULL)))/((('v엱')OR(949880201))))); -- 0ms;
SELECT AVG(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) OVER () FROM rt0, vt0 WHERE ((((0.9823800752925618)) NOT BETWEEN ((((NULL)*(NULL)))) AND (((((('641058598')OR(0.5914131638557799)))AND(0.8879909512054227)))))) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS LAST; -- 1ms;
SELECT ALL CASE WHEN '' THEN ((rt0.c2)OR(0.5821450584678789)) WHEN ((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c1)) THEN SUM(rt0.c2) ELSE ((vt0.c1) NOTNULL) END FROM rt0, vt0 WHERE (((('0.8879909512054227')) NOT BETWEEN ((((((x'')OR('v14x.>[')))OR(']E')))) AND ((0.5460457648949697)))); -- 0ms;
SELECT ALL highlight(rt0.c2, rt0.c1, rt0.c2, vt0.c0) COLLATE NOCASE, CAST(((rt0.c1)*(vt0.c0)) AS BLOB), (((NOT (rt0.c0)))IS NOT((rt0.c2 IN ()))) FROM rt0, vt0;SELECT DISTINCT UPPER(((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) FROM rt0, vt0 WHERE (TRIM(DISTINCT (0.9668839466673922 IN ()), 'c&gJ?K' COLLATE NOCASE)); -- 0ms;
SELECT (((((rt0.c2, vt0.c1, rt0.c1))==((rt0.c1, NULL, vt0.c1)))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (CAST(rt0.c2 AS INTEGER))) FROM vt0;SELECT DISTINCT TOTAL(((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) FROM rt0, vt0 WHERE (((IFNULL('-1199247768', '1518134926')) BETWEEN ((('')-(x'7be1'))) AND ((0.5040528990657994 IN (NULL))))) ORDER BY (((vt0.c1 IN (rt0.c1, '-709009622'))) NOT BETWEEN (((rt0.c1)OR(rt0.c1))) AND ('1832488739')) ASC, (((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt0.c1)), ((rt0.c1)IS NOT(rt0.c2)), CAST(rt0.c0 AS NUMERIC))) AND ((((vt0.c1)AND(rt0.c2)), ((vt0.c0)>(vt0.c0)), (vt0.c0 IN ())))) ASC; -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL))) BETWEEN (((rt0.c1)AND(-1210046472))) AND (((((vt0.c1)OR(vt0.c0)))OR(rt0.c1)))), ((((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END)OR((((vt0.c1, vt0.c1, vt0.c1, rt0.c2, rt0.c0))=((vt0.c1, rt0.c0, vt0.c1, rt0.c2, rt0.c1))))))AND((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))), rt0.c1 FROM rt0, vt0 WHERE (CASE (('') IS TRUE)  WHEN (('-1332884959')GLOB(x'')) THEN ((NULL) IS TRUE) ELSE load_extension(0.2846681497131821) END); -- 0ms;
SELECT DISTINCT (((json(rt0.c0)))>=((rt0.c2 COLLATE NOCASE))), SQLITE_COMPILEOPTION_USED(vt0.c0) COLLATE NOCASE, CASE WHEN ((rt0.c0) ISNULL) THEN LIKE(rt0.c0, rt0.c0) ELSE (vt0.c1 IN ()) END FROM rt0;SELECT ALL (((((((rt0.c2, rt0.c1, vt0.c0))=((vt0.c1, vt0.c1, rt0.c0))))AND(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 WHEN NULL THEN rt0.c1 WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)))OR(((((vt0.c0)AND(vt0.c1)))AND(0.9691735903410181)))) FROM rt0 WHERE (LTRIM((('o&') NOT BETWEEN (NULL) AND (x'')))) GROUP BY ((CASE WHEN vt0.c0 THEN rt0.c2 END)OR(((((((((vt0.c1)AND(vt0.c0)))AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c1)))) HAVING AVG(json_array_length(vt0.c0));SELECT ALL SUM(CASE vt0.c1  WHEN NULL THEN rt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 END) OVER () FROM vt0 WHERE (((('M6V', 0.9554389988314589, 1115065131)) BETWEEN ((((1722084910)IS(x'70447a7c')), ((-4.92055E7)<(x'')), CASE WHEN NULL THEN 'MD\옦' END)) AND ((((((x'')AND('k拨l_')))AND(1123725878)), (('') BETWEEN (NULL) AND (-228564248)), ('D뫀' IN ()))))) ORDER BY x'' ASC, (+ ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC  NULLS FIRST;SELECT ALL ((((((((rt0.c0)OR(vt0.c1)))AND(x'')))AND(rt0.c2)))AND(((vt0.c0)IS NOT(rt0.c0)))) FROM rt0, vt0 ORDER BY (((((vt0.c0)>=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 END, rt0.c1))<=((((rt0.c1)>(vt0.c1)), ((rt0.c2)*(vt0.c1)), rt0.c2 COLLATE RTRIM))) ASC  NULLS FIRST, CASE WHEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) THEN (0.2816116044850475 IN ()) WHEN vt0.c0 THEN rt0.c2 COLLATE RTRIM WHEN ((vt0.c1) IS FALSE) THEN rt0.c0 END DESC; -- 0ms;
SELECT ALL '249986593', rt0.c1, (+ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0, vt0 WHERE ((NOT (CAST(99374866 AS INTEGER)))); -- 0ms;
SELECT ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c0)>(rt0.c0)))))AND((((0.7111969481466209, rt0.c0, rt0.c0, rt0.c2, rt0.c0))<=((vt0.c1, vt0.c0, rt0.c1, vt0.c0, rt0.c0))))) FROM vt0 WHERE (json_valid(((x'')AND('0.028268996531383928'))));SELECT (((((((((((((~ (rt0.c0)))OR(((rt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))AND((+ (NULL)))))AND(MAX(rt0.c0))))OR(CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c1 END)))AND(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c0)OR(vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (x'b8a4'); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c0)))OR(vt0.c0)))>=(((vt0.c0) IS FALSE))) FROM rt0, vt0 WHERE ((((0.5058972664069509)) NOT BETWEEN ((((('1204823725', '\''>o拨', NULL)) BETWEEN ((NULL, NULL, '')) AND ((0.004859830086370698, '', -6.77239056E8))))) AND ((((((0.7614714650221936)AND(0.352614199565055)))AND('-989558186')))))) GROUP BY ((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c1)))AND(((vt0.c0) IS FALSE))))AND(((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))); -- 1ms;
SELECT ALL ((((((((((((CAST(vt0.c0 AS BLOB))OR(NULL)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0)<>(rt0.c0)))))OR((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(((vt0.c0)<(NULL)))))AND((+ (rt0.c2)))), CAST(NULLIF(0xffffffffbc2aba78, 0.8340016864584201) AS BLOB), ((((vt0.c0)AND(rt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND ((~ (vt0.c1)))) FROM vt0, rt0 WHERE (((('')IS('-1498914713')) IN ())); -- 0ms;
SELECT DISTINCT NTH_VALUE(rt0.c2, CAST(((rt0.c0)IS(rt0.c2)) AS INTEGER)) OVER () FROM rt0 WHERE ((CAST(NULL AS NUMERIC) IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c2) BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 END)), CASE WHEN CASE WHEN rt0.c0 THEN vt0.c1 END THEN (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))) END, CAST(rt0.c1 AS TEXT) FROM rt0, vt0; -- 0ms;
SELECT AVG((((rt0.c1))<((rt0.c0)))), TRIM(rt0.c2), ((((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c1)))<<(COUNT(*))) FROM rt0 WHERE (((((0Xffffffffa18a3d68)OR(0.8524656669734296)))OR('')) COLLATE NOCASE);SELECT DISTINCT ((((((vt0.c0)AND(vt0.c1)))AND(rt0.c1)))/(((rt0.c0)!=(rt0.c2)))) FROM rt0 WHERE (((CASE WHEN 625322157 THEN x'' ELSE -1 END) NOT BETWEEN (CASE NULL  WHEN '|h9. ^w' THEN '-1994624038' END) AND ((('')GLOB('-1465123699')))));SELECT rt0.c1 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(x'' COLLATE BINARY AS INTEGER) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT RANK() OVER (), ((- (vt0.c0)) IN (MAX(rt0.c2))), ((((((((((rt0.c2)AND(0.4573440536117185)))AND(rt0.c0)))OR(rt0.c0)))AND(vt0.c0))) ISNULL) FROM rt0 WHERE (CASE (NULL IN ())  WHEN ((('1474712153')) NOT BETWEEN ((NULL)) AND (('ZW㗳.B'))) THEN ((NULL) BETWEEN ('') AND ('1454817491')) END);SELECT DISTINCT ((((((rt0.c1) IS TRUE))OR((x'' IN ()))))AND(GROUP_CONCAT(rt0.c0))) FROM vt0;SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN TRIM(rt0.c1) ELSE MAX(rt0.c1) END FROM rt0 WHERE (((((~ (NULL))))<(((NULL IN ()))))); -- 0ms;
SELECT '#' FROM vt0, rt0 WHERE ((~ ((((0X1b51d296))>=(('1094442908')))))) LIMIT -357658359 OFFSET -1215915366; -- 0ms;
SELECT ALL -1030345961, (NOT ((+ (rt0.c1)))), CAST(((rt0.c2) BETWEEN (rt0.c1) AND (0.5412109232894736)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL (CASE rt0.c1  WHEN vt0.c1 THEN -1610944001 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c1 END IN ()), ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0))) NOTNULL), x'' FROM vt0 WHERE (CASE (+ (x''))  WHEN CASE WHEN NULL THEN x'' END THEN CASE WHEN x'' THEN 0.317479049430601 ELSE 0xffffffffe2a61299 END WHEN CAST(0Xffffffffc6ea3272 AS REAL) THEN ((NULL)*('0.3893288981605052')) WHEN (((NULL, 3.94547136E8, ''))!=(('-1094935828', '', ' ~0B'))) THEN CAST('946097947' AS REAL) END);SELECT DISTINCT ((((vt0.c1) NOTNULL))IS(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c1)) IN ()) FROM rt0, vt0 GROUP BY ((((- (vt0.c1)), ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)), (+ (NULL))))<((((rt0.c2)<=(rt0.c1)), ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((vt0.c0)=(rt0.c1))))) HAVING CAST(COALESCE(rt0.c2, NULL) AS INTEGER); -- 0ms;
SELECT DISTINCT (- (((vt0.c0)GLOB(rt0.c2)))), CAST(((((vt0.c1)OR(rt0.c0)))OR(rt0.c1)) AS NUMERIC), ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)GLOB(CAST(rt0.c1 AS REAL))) FROM rt0, vt0 WHERE (0.44288979330969624) GROUP BY ((rt0.c0)<=(((rt0.c0)&(vt0.c0)))), ((CAST(rt0.c1 AS REAL)) NOT NULL), ''; -- 1ms;
SELECT ALL IFNULL(DISTINCT LIKELIHOOD(vt0.c1, 0.9844878063350239), rt0.c1), CAST((rt0.c0 IN ()) AS INTEGER), ((((rt0.c2)-(rt0.c0)))LIKE(0.7604313207162876)) FROM rt0;SELECT DISTINCT ((rt0.c0 IN (rt0.c2)) IN (AVG(rt0.c2))), (- (((rt0.c1) IS FALSE))), (NOT ((- (vt0.c0)))) FROM rt0, vt0 WHERE ((((x'564d')) NOT BETWEEN (((x'' IN (0x6b26a2aa)))) AND ((((x'3fc0f573') NOT NULL))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2)OR(vt0.c0)))AND(vt0.c0))) IS FALSE) FROM vt0 WHERE ((~ (0.4567848766756242)) COLLATE RTRIM) ORDER BY (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST;SELECT ALL ((((rt0.c1) IS TRUE))|((((rt0.c0))<((vt0.c1))))), '103112429', LAST_VALUE(TRIM(DISTINCT (((NULL))<>((vt0.c1))))) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1, rt0.c1, rt0.c0))=((rt0.c0, rt0.c1, rt0.c0))) IN ()), CASE NULL  WHEN NULL COLLATE RTRIM THEN (((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))) END, (~ ((vt0.c1 IN ()))) FROM vt0 GROUP BY rt0.c2 COLLATE RTRIM COLLATE BINARY COLLATE NOCASE, (((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((x'aad82b3b'))), ((HEX(vt0.c1)) NOTNULL) HAVING ((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))>(COUNT(vt0.c0)));SELECT ALL ((rt0.c0 IN (rt0.c1)) IN ()) FROM vt0, rt0 WHERE (((CASE WHEN x'' THEN 0.3109128569074062 ELSE NULL END) NOT BETWEEN ((- (x''))) AND (((x'')AND('r	'))))); -- 0ms;
SELECT ALL CAST(CAST(rt0.c2 AS BLOB) AS TEXT) FROM vt0 WHERE (json((('-1191922777') IS FALSE)));SELECT ALL (((((vt0.c0) IS FALSE), rt0.c0 COLLATE BINARY, CAST(NULL AS NUMERIC), CASE rt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END, COUNT(rt0.c1)))<=(((~ (vt0.c0)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c1, ((rt0.c2)==(rt0.c1)), ((((((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(0.5041216225484104)))AND(vt0.c0))))) FROM vt0 WHERE (CAST((('')&(NULL)) AS NUMERIC));SELECT DISTINCT (((~ (vt0.c1))) NOTNULL) FROM vt0, rt0 LIMIT 965654520; -- 0ms;
SELECT DISTINCT LEAD(((CAST(vt0.c0 AS TEXT))<(((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), CASE WHEN ((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)) THEN '&]\n' END, CAST(((rt0.c2)=(rt0.c2)) AS INTEGER)) OVER () FROM rt0, vt0 WHERE ((json_patch(x'', '') IN ())); -- 0ms;
SELECT ALL ((((((((((rt0.c0) NOTNULL))OR(CAST(rt0.c2 AS INTEGER))))OR((~ (rt0.c2)))))OR('0.31937444687629857')))OR(SUM(rt0.c1))), vt0.c0, ((((((((AVG(vt0.c0))OR(NULL)))OR(((rt0.c2)GLOB(vt0.c1)))))OR(((rt0.c1)*(rt0.c1)))))OR(rt0.c0)), CAST((~ (vt0.c0)) AS REAL), ((((rt0.c0)IS NOT(rt0.c2))) ISNULL) FROM vt0, rt0; -- 1ms;
SELECT ALL 0Xffffffff94155372, CAST(CASE WHEN vt0.c0 THEN NULL END AS TEXT), ROW_NUMBER() OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)|(((rt0.c1)/(vt0.c1)))) FROM vt0 WHERE ((((+ (x''))) IS TRUE));SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE) FROM vt0, rt0 WHERE (CASE ((0.4328544109902286)OR(x''))  WHEN ((((((((0.36279674228364467)OR(x'')))OR(x'')))OR(0.3485910056571738)))OR(x'')) THEN TYPEOF(DISTINCT '1800659927') WHEN CAST(x'' AS NUMERIC) THEN CAST(NULL AS BLOB) WHEN ((((x'63e3')AND(x'')))AND(x'')) THEN UPPER(DISTINCT 'UbYm)W') ELSE LIKELY('Rq넦P_') END); -- 0ms;
SELECT (+ (json_object(rt0.c0, vt0.c0))) FROM vt0, rt0;SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(rt0.c1))) NOT NULL) FROM rt0, vt0 WHERE ((((0.008677781185690292) ISNULL) IN ())); -- 0ms;
SELECT DISTINCT CASE (((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN CASE WHEN vt0.c1 THEN x'' ELSE rt0.c1 END THEN NULL END FROM rt0;SELECT DISTINCT ((((rt0.c0) IS FALSE)) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0)==(rt0.c0)))), ((((((rt0.c1) IS TRUE))OR(vt0.c0 COLLATE BINARY)))AND((((rt0.c0))>=((rt0.c0))))), rt0.c1, ((((((rt0.c1) NOTNULL))AND((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(CASE WHEN rt0.c2 THEN vt0.c1 END)), (((vt0.c0)!=(vt0.c0)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT (((((rt0.c1 IN ()))OR(TOTAL(rt0.c2))))OR((((vt0.c0))<>((rt0.c2))))) FROM rt0, vt0 WHERE ((('' COLLATE NOCASE) NOTNULL)) ORDER BY ((CAST(vt0.c0 AS INTEGER))|('-1045377883')) DESC  NULLS LAST, CASE WHEN vt0.c1 COLLATE RTRIM THEN COALESCE(DISTINCT rt0.c0, vt0.c0, rt0.c2, rt0.c2) ELSE ((vt0.c1) NOT NULL) END; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0 GROUP BY (NOT (((vt0.c0)>>(rt0.c2))));SELECT DISTINCT vt0.c1 FROM vt0, rt0 GROUP BY (((rt0.c2 IN (rt0.c0, vt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND ((- (vt0.c0)))), (('0.6191265719055563') IS TRUE), (((~ (rt0.c1)))||(x'')) HAVING (((vt0.c1)%(rt0.c1)) IN ()); -- 0ms;
SELECT '', x'a8f9', (('-360287128') NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0 WHERE ((UNLIKELY(NULL) IN ()));SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC))<<(x'')) FROM vt0 WHERE (('R<,~/zT' IN ()) COLLATE RTRIM);SELECT DISTINCT ((((rt0.c0)*('')))%(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))) FROM rt0, vt0 LIMIT -743195130 OFFSET 1094296055; -- 0ms;
SELECT NULL FROM rt0, vt0 WHERE ((((((((((((-1.210046472E9)AND(NULL)))OR(0.8656120772539095)))OR(0Xffffffff86b038f2)))AND(NULL)), (NOT (NULL)), CAST(-2.087134883E9 AS TEXT)))>(((0.46181725378831495 IN ()), 0.2540723709834093, CASE '#x#+╘!q'  WHEN 0X2b8fafd4 THEN -7.86443208E8 END)))) LIMIT 1591496320 OFFSET 770941026; -- 0ms;
SELECT ALL (((vt0.c1)) BETWEEN ((TRIM(rt0.c2))) AND ((0.31096647039836933))), (- (rt0.c0)), ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))<=((((vt0.c0, rt0.c0, 0x7c631cd4)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c1, rt0.c0))))) FROM vt0 GROUP BY ((((rt0.c0 IN (rt0.c0, '1474712153'))))<((x'')));SELECT ((((((vt0.c1)AND(vt0.c1)))OR(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE x'4b5f' END)))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c1 COLLATE BINARY)OR(((rt0.c2)>>(rt0.c2)))))OR((+ (rt0.c2)))))AND(COUNT(*))))OR(TYPEOF(rt0.c2))) FROM rt0, vt0 WHERE (LOWER(json_array_length(-552805691, -2.13737356E9)));SELECT DISTINCT (vt0.c1 IN ()) COLLATE RTRIM FROM rt0 WHERE ((((NULL)>('-1669138585')) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.180144839013741))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (SUM(vt0.c0))) FROM vt0, rt0 WHERE (4.58347158E8) GROUP BY CAST(1.592773339E9 COLLATE BINARY AS BLOB), ((((vt0.c1)*(vt0.c0))) NOT BETWEEN ((- (vt0.c1))) AND (CASE x''  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 'g' THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END)), 'K ' HAVING (((rt0.c0)) BETWEEN ((((rt0.c2) IS TRUE))) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1))))); -- 0ms;
SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))<=(0.8278357108555995)) FROM rt0, vt0; -- 0ms;
SELECT ALL COUNT(*) OVER (), CASE WHEN ((rt0.c1)<<(rt0.c0)) THEN ((vt0.c0)<>(rt0.c1)) WHEN NULL THEN x'' WHEN ((vt0.c1) NOTNULL) THEN ((-5.11994173E8) IS TRUE) END, ((((rt0.c0)>=(rt0.c0))) NOTNULL) FROM vt0;SELECT DISTINCT ((((((((((((vt0.c1)AND(x'')))AND(rt0.c2)))OR(GROUP_CONCAT(rt0.c0))))OR(rt0.c1)))AND((NOT (rt0.c0)))))OR(((rt0.c2) IS FALSE))), ((MAX('.C'))|((- (rt0.c2)))), MAX(((((rt0.c1)AND(rt0.c2)))OR(vt0.c0))), CASE WHEN json_type(rt0.c0) THEN ((vt0.c0)>=(rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN (+ (0.41210615545222806)) WHEN ((vt0.c0)<(rt0.c1)) THEN x'a3af' END, MAX((rt0.c2 IN ('	'))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c1 IN (rt0.c2, vt0.c0)) AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE '1198735750'  WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c1 END) FROM rt0 WHERE ('1573769183' COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM) ORDER BY rt0.c0  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ASC  NULLS LAST, vt0.c0 DESC;SELECT ALL (((+ (vt0.c0)))|((- (rt0.c2)))) FROM rt0;SELECT ALL MAX((+ (rt0.c2))), ((((0.007200771033739062 IN (vt0.c1))))>((((rt0.c1)<>(rt0.c2))))), (('^]U,Ᶎ') ISNULL) FROM rt0;SELECT DISTINCT TOTAL((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) FROM vt0 WHERE (((5.37183132E8 COLLATE BINARY) IS FALSE));SELECT DISTINCT ((((~ (rt0.c1))))>((((rt0.c2) ISNULL)))) FROM rt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST;SELECT ((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c1)))), CAST(CAST(rt0.c2 AS TEXT) AS REAL), ((CASE rt0.c2  WHEN 0.7048473121314227 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)>=(((vt0.c0) IS FALSE))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT SUM((((vt0.c0)) NOT BETWEEN ((0.669514373368353)) AND ((vt0.c0)))) FROM rt0 WHERE ((((('t_)!' COLLATE NOCASE)OR((((x'51c1')) NOT BETWEEN ((x'')) AND ((0xffffffff901f2096))))))AND((0.883352060374768 IN ()))));SELECT 0.36320885580349405 FROM vt0, rt0 WHERE (x'') GROUP BY (+ ((rt0.c1 IN (rt0.c0)))) ORDER BY CAST(((vt0.c0) NOTNULL) AS INTEGER); -- 0ms;
SELECT ALL ((((((vt0.c1)OR(vt0.c0)))AND(NULL)))>(((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(rt0.c0)))) FROM vt0 LIMIT 526966639;SELECT (NOT (CAST(rt0.c0 AS TEXT))) FROM rt0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL LEAD(vt0.c0, ((CAST(vt0.c0 AS REAL))<((vt0.c0 IN ()))), 1.518134926E9) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT (((rt0.c0 IN ('-351313110'))) NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS BLOB))||(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))) FROM rt0;SELECT DISTINCT (((vt0.c1)*(rt0.c0)) IN ()) FROM rt0, vt0 ORDER BY TYPEOF(DISTINCT '#T')  NULLS FIRST, ((((vt0.c1 IN (vt0.c0)), rt0.c1, CAST(vt0.c0 AS REAL), ((rt0.c2)*(vt0.c0)), (+ (vt0.c1))))>=((rt0.c0, (~ (rt0.c1)), CAST(vt0.c0 AS INTEGER), CAST('550357109' AS BLOB), ((rt0.c0)-(vt0.c1))))), CAST(vt0.c0 COLLATE RTRIM AS TEXT); -- 0ms;
SELECT DISTINCT (MIN(rt0.c0) IN ()) FROM vt0 WHERE (((UNLIKELY('')) NOT BETWEEN (0.2721165170511759) AND (CASE 9.9374866E7  WHEN 0X2a903a63 THEN '9H''LX' END))) GROUP BY IFNULL(DISTINCT 0.0585471488671373, ((vt0.c0)=(vt0.c1))), ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (NULL) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))), CASE LENGTH(vt0.c1)  WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 END THEN NULL COLLATE RTRIM WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)<=(rt0.c2)) WHEN UNLIKELY(vt0.c0) THEN vt0.c1 ELSE CAST(rt0.c1 AS INTEGER) END, ((json_array_length(vt0.c1, rt0.c1)) ISNULL), ((((vt0.c1)/(rt0.c0)))<=(((((rt0.c2)AND(rt0.c1)))OR(vt0.c1)))) HAVING CASE WHEN SUM(vt0.c0) THEN rt0.c1 END;SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c1) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT vt0.c1 FROM rt0 WHERE (((CAST('-411400439' AS REAL))<(CAST(NULL AS INTEGER))));SELECT DISTINCT ((((rt0.c1))<((rt0.c0))) IN (((rt0.c2)>>(rt0.c2)), CAST(rt0.c2 AS TEXT))), HEX(TRIM(DISTINCT vt0.c0, rt0.c2)), ((vt0.c1 COLLATE NOCASE) NOT NULL) FROM vt0, rt0 WHERE ((((('eb!A') NOT BETWEEN (x'') AND (x'911af874'))) NOT BETWEEN (CASE 0x3d559726  WHEN '-1138771740' THEN '-1804301142' WHEN '-847348241' THEN x'' WHEN 0.3893288981605052 THEN '皎>' END) AND (((0.37495071496202104)*(x'331d'))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)<(rt0.c0)))OR(((vt0.c1) NOT BETWEEN ('^O9xc/p') AND (rt0.c0)))))AND(CAST(vt0.c1 AS REAL))), '', (~ (rt0.c1)) FROM rt0, vt0 WHERE (((((0.7472554068934021) NOT NULL)) NOT BETWEEN ((NOT (NULL))) AND (((0.04442247799395227) NOT NULL)))); -- 0ms;
SELECT MIN(0xffffffff8679e7ba) FROM vt0; -- 0ms;
SELECT DISTINCT rt0.c2, GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))), LAST_VALUE(SQLITE_SOURCE_ID()) OVER () FROM vt0, rt0 NOT INDEXED WHERE (((CASE '1736865154'  WHEN '-1392982126' THEN 0.762267032645432 WHEN NULL THEN 0.7036346058979004 WHEN NULL THEN 'Sr' WHEN 0.8355012258625091 THEN NULL WHEN '-1304696027' THEN '1925344061' ELSE x'' END) ISNULL)) GROUP BY (~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))), GLOB('172277721', (NOT (rt0.c0))), ((((vt0.c1) BETWEEN ('1996613067') AND (rt0.c1))) ISNULL) HAVING (NOT ((((vt0.c0)) BETWEEN ((0.5300253970417317)) AND ((rt0.c0))))) ORDER BY (((rt0.c1)) BETWEEN (('')) AND ((0.30566346873478556))) ASC  NULLS FIRST LIMIT 2129842443; -- 1ms;
SELECT DISTINCT (((~ (rt0.c1)))>=(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)), json_array(HEX(DISTINCT rt0.c1), (((rt0.c2))<>((vt0.c0)))), ((((((vt0.c1)OR(rt0.c0)))OR(NULL))) NOT NULL) FROM rt0;SELECT (((~ (vt0.c1))) ISNULL), CAST(AVG(rt0.c0) AS INTEGER), IFNULL(CAST(rt0.c2 AS BLOB), CASE rt0.c2  WHEN 0.038660781718432013 THEN rt0.c2 ELSE NULL END) FROM rt0, vt0 WHERE ((~ (GLOB('6\', '1214515589')))) LIMIT -79298174 OFFSET 1499973168; -- 0ms;
SELECT DISTINCT 'cZ霦x>' FROM rt0 ORDER BY LIKELY(DISTINCT CAST(rt0.c0 AS INTEGER)); -- 0ms;
SELECT (((~ (vt0.c1))) BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(vt0.c1))) AND ((((rt0.c2, 394547136, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c1))))), CAST(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END AS REAL), ((((vt0.c1) IS TRUE))&((~ (vt0.c0)))) FROM rt0 LIMIT -1610944001;SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT 'N9\r/7', rt0.c1, (((MAX(3.0739685E7)))>((rt0.c0 COLLATE BINARY))), LAST_INSERT_ROWID(), CAST(COALESCE(vt0.c1, vt0.c1) AS TEXT) FROM rt0;SELECT CAST(((vt0.c1)OR(rt0.c1)) AS BLOB) FROM vt0 WHERE ((CASE -5.69588128E8  WHEN NULL THEN 0X1a802ea3 ELSE NULL END IN (((x'')IS NOT('1722084910')), (('') NOTNULL))));SELECT DISTINCT ABS(DISTINCT IFNULL(rt0.c1, rt0.c2)) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0, NULL, rt0.c2)) NOT BETWEEN ((((vt0.c1) ISNULL), ((vt0.c0) NOT NULL), ((vt0.c0) IS TRUE))) AND ((COUNT(rt0.c1), (((vt0.c1)) BETWEEN ((1692578782)) AND ((NULL))), vt0.c0 COLLATE NOCASE))) FROM vt0;SELECT ((318146965)+(json_valid('^[\E'))) FROM vt0, rt0 GROUP BY CASE WHEN ((rt0.c1)IS(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN x'8aae' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 END ELSE TRIM(DISTINCT rt0.c1, rt0.c0) END HAVING CASE WHEN (rt0.c0 IN ()) THEN ((rt0.c2)<<(rt0.c1)) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (+ (vt0.c0)) WHEN TRIM(rt0.c2, vt0.c0) THEN (~ (vt0.c0)) END; -- 0ms;
SELECT ALL ((((vt0.c0)>(rt0.c2))) ISNULL) FROM vt0 WHERE (((((x'')<<(0.9785363169348293)))*(CAST(0.8897648458027122 AS NUMERIC))));SELECT DISTINCT ((((((((highlight(rt0.c2, vt0.c1, rt0.c2, vt0.c0))AND(TOTAL(vt0.c1))))OR(((((vt0.c1)AND(vt0.c1)))OR(rt0.c0)))))AND(CASE 430762376  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))OR(vt0.c0 COLLATE NOCASE)) FROM rt0, vt0;SELECT AVG(((rt0.c0) IS FALSE)) OVER ( ORDER BY ((x'') NOT NULL) ASC  NULLS FIRST) FROM vt0;SELECT DISTINCT ((((vt0.c1)IS(rt0.c2))) NOTNULL) FROM vt0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (((NULL)<(-1498914713))) AND ((- (x'')))));SELECT DISTINCT ((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))) NOT NULL), (((((vt0.c1))>=((rt0.c1))))IS NOT(COUNT(rt0.c1))), ((TOTAL(rt0.c1))AND((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FROM vt0;SELECT ALL rt0.c2 FROM vt0 WHERE (('1828844160' COLLATE BINARY IN ()));SELECT ALL TRIM(CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c1 END, TOTAL(vt0.c0)) FROM rt0, vt0 WHERE (CASE WHEN (NOT ('')) THEN CASE NULL  WHEN x'' THEN 'VpwH!y]d' END WHEN ((0.49123001829044965) BETWEEN ('230571138') AND ('-1004981183')) THEN (('-356084062') BETWEEN (x'07e8') AND (x'df22')) WHEN ((NULL)||('nS19G')) THEN (((0.10798363112603271, NULL, x'd462'))<>((x'', 0.8340016864584201, 0X599c11fa))) WHEN (x'' IN ()) THEN x'' COLLATE BINARY WHEN CASE x'bb4c'  WHEN -9223372036854775808 THEN x'27b5' ELSE 0.9497841141161605 END THEN ((NULL)IS NOT(0.8786618779404479)) ELSE ((0.15696919008824273) BETWEEN (NULL) AND (3.94547136E8)) END); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)AND(rt0.c2)), CAST(vt0.c0 AS BLOB)))==((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), ((rt0.c0)AND(rt0.c2)), LIKELIHOOD(rt0.c0, 0.6838604877788493)))) FROM rt0, vt0; -- 0ms;
SELECT ALL AVG(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END), ((((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))AND(((vt0.c0)|(rt0.c0)))))OR(((vt0.c0)==(rt0.c0)))), ((((vt0.c1))>=((vt0.c1))) IN (CAST(rt0.c0 AS NUMERIC))) FROM rt0 WHERE (((((((x''))<=((x'')))))>=((CAST(NULL AS INTEGER)))));SELECT DISTINCT json_object(AVG(rt0.c2), vt0.c0, ((0.48930449443054946)OR(NULL)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))) FROM vt0 WHERE (((((x'')<>(0.3868932551443742))) NOT BETWEEN (((-678094267) BETWEEN (0.3475208218384195) AND (0X476c2237))) AND (CASE WHEN 'w	' THEN '1123725878' END)));SELECT ALL ((((rt0.c2)>=(rt0.c2)))&(rt0.c0 COLLATE RTRIM)), NULLIF(rt0.c0, NULLIF(vt0.c0, rt0.c1)), CAST(rt0.c1 AS INTEGER) FROM rt0 LIMIT 886969382;SELECT CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS REAL), ((((vt0.c0)<=(rt0.c2))) BETWEEN (CAST(x'c417' AS NUMERIC)) AND (((rt0.c2)>>(rt0.c1)))), COUNT(*) OVER () FROM rt0;SELECT CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) AS INTEGER) FROM rt0, vt0 WHERE ((((0.5192357043736943, '458347158', 0.44185835313443655)) NOT BETWEEN ((((NULL)GLOB(0.5876928271137178)), (((((((('1264601354')AND(0.6066244172169998)))AND(x'1761')))OR('zw㗳.b')))OR(NULL)), ((x'')&(x'')))) AND (((NULL IN (NULL)), CAST('-582045628' AS INTEGER), ((NULL) NOT BETWEEN ('-1584775832') AND ('z6Z#s,hM')))))); -- 0ms;
SELECT rt0.c2 FROM rt0, vt0 INTERSECT SELECT DISTINCT (((rt0.c0 IN ()))AND(((rt0.c0)||(rt0.c2)))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT (NOT (CAST(rt0.c1 AS NUMERIC))), ((((((((((((((rt0.c2)||(rt0.c1)))OR((NOT (0.4567848766756242)))))OR(GROUP_CONCAT(rt0.c0))))AND((rt0.c0 IN (vt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND((((rt0.c1, rt0.c1, vt0.c0))<>((0Xffffffffffffffff, vt0.c0, vt0.c0))))))AND(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)), AVG((vt0.c0 IN (rt0.c0))) OVER () FROM vt0 ORDER BY ((vt0.c0 IN ()) IN (NULL)) ASC, (+ (((vt0.c1)AND(rt0.c1)))) DESC;SELECT (((CAST(vt0.c1 AS NUMERIC)))<=(((((rt0.c0))>=((vt0.c1)))))), LIKELY(SUM(rt0.c1)), LIKELIHOOD(DISTINCT CASE vt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE 0.5910412579426808 END, 0.008369048714938265) FROM vt0, rt0 WHERE (TRIM(DISTINCT '1048011072', (x'1883' IN ()))); -- 0ms;
SELECT CASE WHEN ((rt0.c1)&(rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN json_object(rt0.c2, x'', 0.1841330900710224, rt0.c2) WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c0)IS(rt0.c1)) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER)) ISNULL), DENSE_RANK() OVER ( ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))>>(NULLIF(DISTINCT rt0.c2, vt0.c0)))), CASE WHEN CASE WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN CAST(rt0.c0 AS BLOB) WHEN rt0.c2 THEN SUM(vt0.c1) WHEN rt0.c0 THEN x'' WHEN COUNT(rt0.c0) THEN (- (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN (rt0.c2 IN ()) END FROM vt0, rt0 LIMIT -33080322; -- 0ms;
SELECT DISTINCT (((rt0.c0))<((rt0.c2))) COLLATE BINARY FROM rt0 WHERE (((x'')+(((x'') NOT BETWEEN (NULL) AND (''))))); -- 0ms;
SELECT CASE WHEN CAST(vt0.c1 AS BLOB) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)) WHEN (NOT (vt0.c0)) THEN MAX(vt0.c0) WHEN ((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)) THEN ((vt0.c0)<>(vt0.c1)) WHEN (((rt0.c0))<(('-1942372797'))) THEN CASE rt0.c0  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE rt0.c1 END WHEN CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c1 END THEN CAST(rt0.c0 AS TEXT) END FROM vt0, rt0 WHERE (((((x'') NOT NULL))|(((((8.86969382E8)OR(NULL)))AND('-970715570'))))); -- 0ms;
SELECT ((((((((((rt0.c0) BETWEEN (rt0.c2) AND (x'')))AND('-228859125')))AND(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c1 END)))AND(0.18231646373543042)))AND((NOT (vt0.c0)))) FROM rt0;SELECT DISTINCT (((((((((((vt0.c0)AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c0)))OR(1722084910))))>((((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c1))))), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((NULL)||(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 END)), ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((rt0.c1 IN (vt0.c0, rt0.c2))) AND (((vt0.c1)<>(vt0.c1)))) FROM vt0 WHERE (CAST('-283947119' AS INTEGER));SELECT CAST((rt0.c0 IN (vt0.c1)) AS NUMERIC) FROM vt0 WHERE (((((('') BETWEEN ('879455507') AND (NULL)), ((((((((-506087558)OR('')))AND(NULL)))AND(x'')))AND('')), CAST('811480883' AS BLOB)))>=((SUBSTR(NULL, 0.7108320741000749), (((''))<((x'd1d6'))), (NOT ('131717861')))))) ORDER BY CASE ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN '' ELSE ((vt0.c0)/(vt0.c1)) END ASC LIMIT 612932967;SELECT ALL NULL, '30739685', ((vt0.c1) NOT BETWEEN ((('LVr	T[ M') NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (((vt0.c0)%(rt0.c0)))) FROM rt0 WHERE ((((((('1214515589') NOT BETWEEN (NULL) AND ('-517288058')))OR(x'')))OR(((0.6835859681040354)/(NULL))))) GROUP BY ((((x'') IS FALSE)) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c1) IS TRUE)));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c0)))) AND (((~ (rt0.c2))))) FROM vt0, rt0 WHERE ((((((('M')OR('T')))OR(x'')))<<(CASE WHEN x'' THEN '957594064' WHEN 0.03672571492170962 THEN NULL WHEN '' THEN 0x643655c ELSE 'nz' END))) GROUP BY ((json_array(vt0.c1, rt0.c2)) IS TRUE) HAVING (- (((vt0.c1)=(rt0.c0)))); -- 0ms;
SELECT ((CAST(rt0.c0 AS INTEGER)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c0 AS REAL))) FROM rt0, vt0 WHERE (((((((NULL) BETWEEN (641058598) AND (NULL)))AND(((((0.4433321053609178)OR('-1006984717')))OR(1.474712153E9)))))OR((-2087134883 IN ())))); -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(vt0.c1)  WHEN CAST(vt0.c0 AS BLOB) THEN CAST(vt0.c0 AS BLOB) ELSE (vt0.c0 IN ()) END FROM vt0 WHERE ((((('-654890839') NOTNULL))*(CASE WHEN '661848618' THEN NULL WHEN '' THEN x'' WHEN x'ead3' THEN 0.1725493561942809 WHEN '1420173274' THEN 0.8200351874362519 WHEN NULL THEN x'' END))); -- 0ms;
SELECT ALL (~ (CAST(rt0.c2 AS INTEGER))), (((('')OR(rt0.c0)))AND(0.6798552785665392)) COLLATE NOCASE, rt0.c2 FROM rt0, vt0 WHERE (((CASE 0.23252455079440149  WHEN x'' THEN NULL END)&(((x'')&('-*_K.'))))); -- 0ms;
SELECT ((((COALESCE(rt0.c2, rt0.c1))AND(LOWER(NULL))))AND(GROUP_CONCAT(rt0.c0))), FIRST_VALUE(((((((((((rt0.c0)&(0.8879909512054227)))OR(((((((((0.19671567057119954)AND(rt0.c0)))AND(rt0.c1)))OR(0.9841893566616751)))OR(vt0.c1)))))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c1 IN ()))))OR(((rt0.c0) IS FALSE)))) OVER (), MAX(((rt0.c0) ISNULL)) FROM rt0, vt0 WHERE ((((((((x'')OR(NULL)))OR(0.761723755327352))))<((CAST('-677239056' AS REAL))))) ORDER BY TRIM(DISTINCT ((vt0.c1)OR(vt0.c1))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT SUM(((((((((0.23372568602250066)OR(vt0.c0)))AND(rt0.c0)))OR(0Xffffffffc1e90d31)))OR(rt0.c2))) FROM rt0;SELECT DISTINCT 'TRUE' FROM vt0, rt0 WHERE (CASE WHEN (~ ('-119814618')) THEN DATE(NULL, '394547136', -668704771) ELSE LIKE(NULL, '-റ', 'Z') END); -- 0ms;
SELECT DISTINCT x'' FROM rt0, vt0 WHERE ((((0.46336664538743033, x'', x'83be05ff')) BETWEEN (((((0.4312218162449333, '-1359029832', '82615033'))<(('NPf', 0.9554389988314589, '1123725878'))), (('1445414160')/(x'')), '	[' COLLATE NOCASE)) AND (((((NULL)) BETWEEN ((x'')) AND ((''))), CAST('-171425467' AS INTEGER), (('0.004859830086370698') NOT NULL))))) ORDER BY ((NOT (NULL)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT NTILE((((((((((((((+ (vt0.c1)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c1)))AND(rt0.c1)))OR(vt0.c0)))))AND(NULL)))AND(rt0.c0)))OR(((((vt0.c1)OR(rt0.c1)))AND(rt0.c2)))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c1))))))OR(((vt0.c1) IS TRUE)))) OVER () FROM vt0, rt0 WHERE ((~ ((NULL IN (0.07696471094618051))))); -- 0ms;
SELECT ((((rt0.c0)<=(0.2549885166173661)))>>(COUNT(rt0.c1))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM, (NOT (rt0.c1 COLLATE BINARY)) FROM rt0, vt0 LIMIT 30739685 OFFSET -901998789; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 ORDER BY vt0.c1;SELECT vt0.c1 FROM rt0 WHERE (ABS(NULL) COLLATE RTRIM);SELECT ((INSTR(rt0.c0, rt0.c2)) IS TRUE), COUNT(*) OVER (), NULL FROM vt0 ORDER BY CASE ((rt0.c2) BETWEEN (NULL) AND (rt0.c1))  WHEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((vt0.c0) ISNULL) ELSE (((vt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c2, -1.574451551E9))) END  NULLS FIRST;SELECT DISTINCT ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((((x'9d07f800')OR(vt0.c0)))AND(rt0.c2))) AND (((rt0.c0)=(rt0.c1)))) FROM rt0;SELECT ALL COUNT(((rt0.c2)>>(NULL))) FROM rt0 WHERE ((- (((x'') IS TRUE)))); -- 0ms;
SELECT DISTINCT rt0.c1, (NOT (rt0.c2)), LEAD(((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND((rt0.c0 IN (rt0.c2, rt0.c0)))))AND(rt0.c1)))OR((NOT (rt0.c1)))))AND((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c1, 1.72208491E9, rt0.c0))))), rt0.c2, ((rt0.c0 COLLATE RTRIM)OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1))))) OVER () FROM rt0 WHERE ((((CAST(x'' AS TEXT)))<((0.40380868617495635 COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE NOCASE AS NUMERIC) FROM vt0, rt0 WHERE (((NULLIF('  ', 0.9554389988314589))%(CASE 0.5841440780465343  WHEN x'' THEN 0.23651037686994691 ELSE NULL END))) LIMIT -511994173 OFFSET -786443208; -- 0ms;
SELECT DISTINCT (((0.7774720446435729) NOT BETWEEN (vt0.c1) AND (rt0.c2)) IN ()) FROM vt0, rt0 GROUP BY (((rt0.c1)AND(x'be51faca')) IN (((((((((NULL)AND(rt0.c2)))OR(vt0.c1)))OR(rt0.c2)))AND(rt0.c2)))) HAVING ((x'') NOT NULL) ORDER BY ((((((vt0.c1)%(vt0.c1)))OR((~ (rt0.c1)))))AND(((rt0.c0) NOTNULL))); -- 0ms;
SELECT DISTINCT ((rt0.c1)<=(vt0.c0)) FROM vt0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((CASE WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c1 END))!=((((((rt0.c2)AND(vt0.c1)))OR(vt0.c1))))), ((CASE WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (((((vt0.c1)AND(rt0.c0)))AND(rt0.c2))) AND (1214515589 COLLATE BINARY)), ((('1098966714'))<>((((NULL)<(rt0.c0))))), CASE ((vt0.c1)>(rt0.c1))  WHEN '85035448' THEN LOWER(x'') END, LEAD(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE RTRIM, CASE rt0.c2 COLLATE NOCASE  WHEN (+ (rt0.c0)) THEN ((vt0.c1) BETWEEN ('x7c>\nP▦P}') AND (rt0.c0)) WHEN ((vt0.c1)==(rt0.c0)) THEN 0.6967028454640978 WHEN vt0.c1 THEN CASE vt0.c1  WHEN vt0.c1 THEN 0.8603329110277722 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 END ELSE ((rt0.c1) IS TRUE) END, NULL) OVER () FROM vt0, rt0 WHERE (((((((x''))=((0.10730318859269616))), 0.7472484315262791 COLLATE BINARY, x'86de' COLLATE RTRIM))<=(((- (x'9162')), COALESCE(NULL, NULL), (('N,>')AND(0x6af22ce6)))))); -- 0ms;
