-- Time: 2024/06/06 01:07:25
-- Database: database51
-- Database version: 3.40.0
-- seed value: 2878653851
PRAGMA cache_size = 50000; -- 19ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 TEXT  CHECK ( (NOT (((c0)<=(c0)))))); -- 17ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('', ''); -- 0ms;
PRAGMA journal_size_limit = -730479436160413510; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR IGNORE t0 SET c0='' WHERE (t0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(x'', x'bdfa') WHERE (~ ((t0.c0 IN ()))); -- 0ms;
UPDATE t0 SET c0='', c0='771882751'; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR FAIL t0 SET c0=x'', c0='423665096' WHERE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('', '_XZ['); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET c0=NULL, c0=x''; -- 0ms;
UPDATE t0 SET (c0)=(0xffffffff868e180e) WHERE TRIM(((t0.c0)/(t0.c0)), t0.c0); -- 0ms;
ANALYZE temp; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
UPDATE t0 SET (c0)=(NULL); -- 3ms;
PRAGMA default_cache_size; -- 0ms;
UPDATE t0 SET (c0)=(0.8633165142041832) WHERE (((t0.c0)) BETWEEN ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) AND (((+ (t0.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=0.6385130583044267, c0=x''; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(NULL); -- 0ms;
ALTER TABLE t0 ADD COLUMN c54 BLOB; -- 1ms;
UPDATE OR ROLLBACK t0 SET c0='-392046009' WHERE ((CAST(t0.c0 AS TEXT))>((((t0.c0))<((t0.c0))))); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c54=0Xfffffffff3b04efe, c54=' sv,fz', c0=NULL; -- 1ms;
UPDATE OR IGNORE t0 SET c54=x'' WHERE ((((t0.c54)>(t0.c54)))IS(t0.c54)); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c54 TO c5; -- 1ms;
UPDATE OR ROLLBACK t0 SET c5=-1206052015, c5=x'' WHERE t0.c0 COLLATE BINARY; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='QbH	!rE' WHERE rt0.c3; -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (x''); -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c5, c5)=('-2037508082', 0xffffffffccdbaccf, 0.6385130583044267); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=-202718415 WHERE (((((rt0.c1))!=((rt0.c2))))IS((((NULL, rt0.c1, rt0.c0))<=((0.8193517567722061, rt0.c1, rt0.c3))))); -- 0ms;
INSERT OR IGNORE INTO t1(c5) VALUES ('423665096'), (NULL), (x''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 1ms;
PRAGMA default_cache_size; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET c5=0.4952078408450371, c0=-284740687, c0=NULL WHERE ((((((t0.c5)AND(t0.c0)))AND(t0.c0))) NOTNULL); -- 0ms;
UPDATE OR IGNORE t0 SET c0='3102461'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-202718415'); -- 0ms;
DELETE FROM t0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('⾋I'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c31; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c5)=(0.0); -- 0ms;
ALTER TABLE t1 ADD COLUMN c65 INT; -- 1ms;
UPDATE t1 SET (c31)=(0.6231656115296917); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=(1.133241553E9); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(''); -- 0ms;
ALTER TABLE t1 ADD COLUMN c78 INT; -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c31 TO c0; -- 2ms;
ALTER TABLE t1 RENAME COLUMN c65 TO c80; -- 0ms;
UPDATE OR REPLACE rt0 SET (c3, c4, c0)=('', '0.6231656115296917', '707965552') WHERE (~ (((rt0.c0)*(rt0.c1)))); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((((rt0.c0 IN ()), ((t1.c78)AND(rt0.c3)), '560269243'))==((((rt0.c1)<=(rt0.c4)), SUM(rt0.c1), (rt0.c0 IN (rt0.c4, t1.c80))))) FROM rt0, t1 WHERE (((((((((((((0X2a32b270)AND('-1870372724')))OR(0.07724854149110272)))AND(HEX(x'd708'))))AND((NULL IN ()))))OR((~ (-148148440)))))OR((((('')AND(NULL)))OR(0.7175143676839272))))); -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL t1.c0 FROM rt0, t1 NOT INDEXED, v0 LIMIT 771882751; -- 0ms;
SELECT ALL ((((((((((t1.c80)AND(t1.c5)))AND(t1.c5)))AND(1361705055)))OR(t1.c78)))IS(((rt0.c3) NOT BETWEEN (0.9811781288403686) AND (t1.c78)))) FROM rt0, t1, v0; -- 1ms;
SELECT DISTINCT COUNT(*), ((rt0.c2)<<(COUNT(*))), NULL FROM rt0 LEFT OUTER JOIN t1 ON ((((json_quote(t1.c0))AND(((((t1.c78)OR(rt0.c0)))OR(rt0.c2)))))OR((t1.c78 IN ()))) ORDER BY ((rt0.c0) NOT BETWEEN (((rt0.c2) NOT BETWEEN ('7') AND (rt0.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c0 END)) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((t1.c80 COLLATE NOCASE)OR(((rt0.c4)OR(t1.c80)))))AND(MAX(rt0.c1))) FROM rt0;SELECT DISTINCT LAG((((((rt0.c3, t1.c0, t1.c5)) BETWEEN ((x'', rt0.c3, rt0.c1)) AND ((t1.c80, t1.c78, t1.c78)))) NOT BETWEEN (((t1.c5)<>(t1.c0))) AND (CAST(t1.c80 AS NUMERIC))), (((NOT (v0.c0))) NOT BETWEEN (NULLIF('7', rt0.c1)) AND (x'795a')), CASE WHEN (((rt0.c4))>((rt0.c1))) THEN CAST(t1.c5 AS NUMERIC) END) OVER () FROM v0, t1, rt0 LIMIT -1183026105 OFFSET 707965552; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)OR(v0.c0)))OR(rt0.c3))) NOT BETWEEN ((v0.c0 IN ())) AND (rt0.c4)) FROM t1;SELECT (- (x'c31b')) FROM v0 WHERE (0.6231656115296917 COLLATE NOCASE); -- 0ms;
SELECT UNICODE(t1.c0) FROM t1; -- 0ms;
SELECT ALL ((rt0.c4) IS TRUE) COLLATE BINARY FROM t1, v0, rt0 GROUP BY LIKE(t1.c78, ((t1.c78)||(t1.c78)), '~'); -- 0ms;
SELECT DISTINCT (NOT (t1.c5 COLLATE BINARY)) FROM v0 WHERE ((+ (((0.6231656115296917)GLOB(NULL)))));SELECT CASE WHEN ((t1.c80)<(NULL)) THEN t1.c78 COLLATE BINARY END, NULL COLLATE RTRIM, ((((((t1.c78)*(rt0.c4)))OR(((t1.c80) ISNULL))))AND(GROUP_CONCAT(t1.c80))) FROM v0, t1, rt0 WHERE ((((((NULL IN (NULL, NULL)))OR(('1298559479' IN ()))))AND((NULL IN ())))) LIMIT -583457895; -- 0ms;
SELECT DISTINCT (((((((((rt0.c3 IN (t1.c78, t1.c80)))AND(AVG(t1.c5))))OR((~ (rt0.c1)))))AND(rt0.c0)))OR((rt0.c4 IN (t1.c5)))), CAST((NOT (t1.c0)) AS INTEGER), CASE WHEN CASE WHEN t1.c5 THEN t1.c5 WHEN rt0.c0 THEN t1.c5 WHEN rt0.c1 THEN t1.c5 END THEN CASE t1.c0  WHEN t1.c0 THEN t1.c78 ELSE rt0.c4 END WHEN 0.8695256471131368 THEN t1.c5 WHEN ((rt0.c0)IS(t1.c0)) THEN (NOT ('1028798271')) WHEN ((('-392754991'))>((rt0.c0))) THEN LIKE(NULL, t1.c0, '0') WHEN ((t1.c78) NOT NULL) THEN ((t1.c78) NOT NULL) ELSE TOTAL(rt0.c3) END FROM v0, rt0, t1 WHERE ((+ (((0.6818439293737679) NOT BETWEEN (0.839175138580727) AND (0.9870033531551132))))); -- 0ms;
SELECT ALL CAST(((t1.c80) NOT BETWEEN ('-1085753011') AND (t1.c0)) AS INTEGER), CASE ((t1.c78) NOT BETWEEN (x'4956') AND (t1.c0))  WHEN '1' THEN ((rt0.c3)GLOB(rt0.c0)) END, ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN t1.c78 WHEN t1.c5 THEN v0.c0 ELSE t1.c0 END)GLOB(((rt0.c3)<(t1.c80)))) FROM t1;SELECT DISTINCT (((((((((('0.4952078408450371') BETWEEN (rt0.c4) AND (t1.c80)))OR(rt0.c3 COLLATE BINARY)))AND(CAST(rt0.c3 AS TEXT))))AND(((t1.c78)<=(t1.c78)))))AND((((t1.c5)) NOT BETWEEN ((rt0.c4)) AND ((t1.c0))))) FROM v0 WHERE (CAST(((0.24540979643122263)||(-1.4814844E8)) AS NUMERIC)) GROUP BY rt0.c0;SELECT ((CASE v0.c0  WHEN t1.c78 THEN NULL END)||(0X2a32b270)) FROM t1, v0 CROSS JOIN rt0 ON (- (((rt0.c4) BETWEEN (rt0.c4) AND (t1.c5)))); -- 1ms;
SELECT ((((rt0.c1) NOT NULL))<>((NOT (t1.c80)))) FROM t1, v0 WHERE (CASE ((0.8479775469678188)>>(''))  WHEN ('' IN ()) THEN ((((((((x'')OR(665176494)))OR(0.8633165142041832)))AND(0.9870033531551132)))OR(NULL)) END) GROUP BY ((((rt0.c0) BETWEEN (rt0.c1) AND (t1.c80))) IS FALSE);SELECT rt0.c4 FROM rt0 WHERE (((((x'a5e4')GLOB(' sv,fz')))<<(((x'') NOT BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT CASE rt0.c3  WHEN t1.c0 THEN v0.c0 END COLLATE RTRIM FROM rt0;SELECT DISTINCT CASE WHEN (((rt0.c1, t1.c80, ''))<=((v0.c0, rt0.c2, t1.c78))) THEN ((rt0.c2)<(t1.c0)) WHEN ((rt0.c2)GLOB(rt0.c3)) THEN ((v0.c0) IS FALSE) WHEN rt0.c3 THEN rt0.c3 ELSE x'' END FROM t1, rt0 WHERE (NULL);SELECT ((SUM(t1.c5))IS NOT(0.4952078408450371)) FROM t1, v0, rt0 ORDER BY (((t1.c0, rt0.c1, rt0.c1)) BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((t1.c80))), CASE WHEN '-1870372724' THEN x'' END, ((('⾋I', v0.c0, t1.c5)) NOT BETWEEN ((t1.c0, t1.c80, x'')) AND ((t1.c0, rt0.c1, t1.c78))))) AND ((COALESCE(DISTINCT rt0.c2, rt0.c1), ((rt0.c3)AND(t1.c78)), ((((t1.c0)OR(t1.c0)))AND(t1.c80))))) ASC, (~ (((rt0.c1)>=(t1.c80)))) ASC; -- 0ms;
SELECT DISTINCT (NOT (CASE v0.c0  WHEN rt0.c2 THEN t1.c78 ELSE t1.c5 END)), (((- (rt0.c4)))|(((t1.c5) NOT NULL))), (((('-9223372036854775808') ISNULL))IS(((rt0.c4)&(rt0.c0)))) FROM rt0, t1, v0 WHERE (((((((((((NULL) BETWEEN (0.6818439293737679) AND (NULL)))AND(((x'') IS TRUE))))AND((((NULL, x'3946', NULL))=((NULL, '771882751', '0.8633165142041832'))))))AND(CHAR(x''))))OR((('0.6231656115296917')%(x''))))); -- 0ms;
SELECT ALL 5.60269243E8 FROM v0, t1; -- 0ms;
SELECT (((CASE WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN t1.c80 THEN t1.c5 ELSE rt0.c3 END))==(((NOT (t1.c78))))), ((CAST(v0.c0 AS TEXT)) IS TRUE), '423665096' COLLATE RTRIM FROM rt0, v0;SELECT ALL LOWER(DISTINCT (((rt0.c3, v0.c0, rt0.c1)) BETWEEN ((t1.c78, t1.c80, rt0.c4)) AND ((t1.c80, t1.c5, rt0.c0)))) FROM rt0;SELECT ALL LEAD((rt0.c4 IN ()), ((rt0.c2)=(v0.c0)) COLLATE RTRIM, ((((((rt0.c2) BETWEEN (rt0.c4) AND (v0.c0)))AND(UPPER(DISTINCT rt0.c2))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))) OVER () FROM v0, rt0 WHERE (NULL COLLATE NOCASE) LIMIT -1736789894; -- 0ms;
SELECT ALL ABS(DISTINCT (('') NOT BETWEEN (t1.c78) AND (rt0.c4))), ((((CASE WHEN rt0.c4 THEN rt0.c3 ELSE t1.c78 END)AND((t1.c0 IN ()))))OR(CASE rt0.c1  WHEN rt0.c3 THEN 0.9793148607913282 END)), (((((rt0.c0, t1.c0, t1.c80)) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c4)) AND ((v0.c0, rt0.c4, 'Jk')))) IS TRUE), ((v0.c0) NOT BETWEEN (t1.c78) AND (t1.c0)) COLLATE RTRIM, ((((((rt0.c2)|(t1.c5)))OR(CAST(t1.c78 AS REAL))))AND(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 WHEN t1.c78 THEN rt0.c4 WHEN t1.c5 THEN t1.c78 ELSE rt0.c3 END)) FROM t1, v0, rt0 WHERE (CASE CASE '1755471099'  WHEN -1.736789894E9 THEN -719982474 WHEN '-719982474' THEN NULL WHEN 1.7976931348623157E308 THEN '82184105' END  WHEN ((((x'e668')OR('82184105')))AND(NULL)) THEN ((((NULL)AND(0.07154924344923153)))AND(0x1a1da128)) END) LIMIT -1085753011 OFFSET -2128983286; -- 0ms;
SELECT ALL FIRST_VALUE((CAST(v0.c0 AS INTEGER) IN (v0.c0 COLLATE RTRIM))) OVER () FROM rt0, v0 WHERE (((((((((((NULL)OR(x'6e1d')))OR(x'')))OR(x'')))AND('-145360890'))) NOT BETWEEN (CASE '-1870372724'  WHEN 0.5495934758476854 THEN 'Fw|⫼L%' END) AND (CAST(-3.92754991E8 AS INTEGER)))); -- 0ms;
SELECT DISTINCT CASE rt0.c0 COLLATE BINARY  WHEN (v0.c0 IN ()) THEN (~ ('7')) ELSE ((rt0.c4) BETWEEN (rt0.c0) AND (t1.c78)) END FROM rt0, v0;SELECT DISTINCT (((t1.c5)<>(rt0.c3)) IN ()) FROM rt0, v0, t1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT t1.c80, 0.9639055826165843)) IS FALSE) FROM v0, rt0 WHERE (CASE 'AD\r끺''' COLLATE BINARY  WHEN ((((x'')AND(0.8633165142041832)))OR(NULL)) THEN (+ (0x7a218081)) WHEN 0xffffffff8673f731 THEN CAST(-1183026105 AS INTEGER) WHEN (((('48퍡zFUSO')OR(0.49219012927969996)))OR(NULL)) THEN (('1197697334')GLOB('Fw|⫼L%')) ELSE 0.3274372868740746 COLLATE RTRIM END);SELECT DISTINCT x'', (((v0.c0)) NOT BETWEEN ((LIKELY(DISTINCT v0.c0))) AND (((((t1.c78))!=((rt0.c4)))))), IFNULL(((t1.c80) BETWEEN (rt0.c2) AND (rt0.c3)), ((t1.c80)&(t1.c80))) FROM v0, t1, rt0; -- 1ms;
SELECT ALL RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM v0; -- 0ms;
SELECT DISTINCT ((((t1.c80) IS FALSE))>>(NULLIF(DISTINCT t1.c5, rt0.c1))) FROM rt0;SELECT ALL (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c1)))))AND(((t1.c5)==(t1.c80)))), json_array_length(v0.c0, t1.c5) COLLATE BINARY, ((AVG(t1.c80)) BETWEEN (((rt0.c0)!=(t1.c78))) AND (((rt0.c1)GLOB(rt0.c0)))) FROM t1, rt0;SELECT ALL GROUP_CONCAT('-U') OVER () FROM rt0 WHERE ((((((+ (0xffffffffec1f51bc)))OR(NULL COLLATE BINARY)))OR(((x'') IS FALSE)))); -- 0ms;
SELECT DISTINCT (~ (AVG(t1.c80))) FROM t1 LIMIT 382146243 OFFSET -181402577; -- 0ms;
SELECT TRIM(DISTINCT ((v0.c0) ISNULL)) FROM v0 ORDER BY ((NULL) ISNULL)  NULLS LAST, (~ ((t1.c5 IN (t1.c0)))) ASC;SELECT DISTINCT (+ (CASE WHEN rt0.c4 THEN rt0.c3 END)) FROM t1, rt0, v0 WHERE (TYPEOF(DISTINCT LIKELY(''))); -- 0ms;
SELECT ((NULL) NOT NULL) FROM t1, rt0; -- 0ms;
SELECT ALL (((rt0.c0 IN (t1.c78, rt0.c0))) NOTNULL) FROM rt0 WHERE (((((((x'f902')>>(0x3eb27e8)))OR(COALESCE(x'', NULL))))OR(NULL COLLATE BINARY)));SELECT ALL ((CASE rt0.c4  WHEN t1.c80 THEN t1.c80 END)<(MAX(rt0.c0))), CUME_DIST() OVER (), rt0.c1 FROM t1 ORDER BY ((((((rt0.c2) NOTNULL))OR((((v0.c0)) NOT BETWEEN ((rt0.c4)) AND ((t1.c78))))))AND(((rt0.c1) IS TRUE)))  NULLS LAST;SELECT MIN((NOT (rt0.c0))) FROM t1 NOT INDEXED, v0;SELECT (+ (TRIM(rt0.c3))) FROM rt0, v0, t1 WHERE ((('') BETWEEN (((NULL)%(-1620684265))) AND ((('?''J.')IS(''))))) GROUP BY (x'' IN ()) HAVING CAST(MIN(rt0.c2, v0.c0) AS BLOB); -- 0ms;
SELECT DISTINCT CAST(((t1.c80) NOT NULL) AS BLOB) FROM rt0 WHERE ((NOT ((+ ('-158813755'))))) GROUP BY NULLIF(DISTINCT CAST(rt0.c2 AS TEXT), x'fd00');SELECT DISTINCT ((((((((((rt0.c0) IS TRUE))OR((rt0.c3 IN ()))))AND(rt0.c1 COLLATE NOCASE)))AND(t1.c80 COLLATE BINARY)))OR((v0.c0 IN ()))) FROM v0, t1, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2))<=((v0.c0)))) NOT NULL) FROM rt0;SELECT (((rt0.c2)IS(rt0.c4)) IN ()), COUNT((((t1.c0))<=((rt0.c2))) COLLATE BINARY), ((v0.c0)&(TOTAL(t1.c78))), ((t1.c80 COLLATE BINARY) IS TRUE), NTH_VALUE((~ (t1.c78)) COLLATE BINARY, ((((rt0.c1) BETWEEN (t1.c80) AND (t1.c80))) IS TRUE)) OVER () FROM rt0, t1, v0;SELECT (+ (((((t1.c0)AND(rt0.c0)))OR(rt0.c0)))), CAST(CASE WHEN rt0.c4 THEN rt0.c2 END AS INTEGER), (NOT ((+ (rt0.c0)))) FROM rt0;SELECT DISTINCT ((v0.c0 COLLATE BINARY)OR(((rt0.c2) IS FALSE))), rt0.c3, v0.c0 FROM v0, t1, rt0; -- 1ms;
SELECT ALL LAST_VALUE(((((rt0.c3)IS(rt0.c1))) ISNULL)) OVER (), NULL, CASE (rt0.c1 IN ())  WHEN TRIM(v0.c0, '') THEN COUNT(t1.c0) END, (('qbh	!re') BETWEEN (((t1.c78)IS NOT(t1.c80))) AND (COUNT(*))), ((((LIKELIHOOD(t1.c78, 0.42417256493634314))OR(CASE WHEN t1.c78 THEN rt0.c1 WHEN t1.c5 THEN 0.05798609244185682 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN t1.c80 WHEN rt0.c0 THEN -1.206052015E9 ELSE rt0.c4 END)))AND(rt0.c2 COLLATE NOCASE)) FROM rt0;SELECT DISTINCT CAST(((((((((rt0.c3)OR('')))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)) AS REAL) FROM rt0, t1, v0; -- 0ms;
SELECT ALL 0Xffffffffd1a2f521 FROM v0, rt0; -- 0ms;
SELECT ((((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))OR(t1.c80)))OR(v0.c0)))IS NOT((NOT (v0.c0)))) FROM rt0, v0 WHERE (CASE WHEN (((((((('7')OR(0.8633165142041832)))OR(x'7f6d')))OR(-1.206052015E9)))AND('1197697334')) THEN ((NULL)<<(NULL)) ELSE ('-206549250' IN ()) END);SELECT DISTINCT rt0.c4, '1109658314', rt0.c4 FROM v0, rt0; -- 0ms;
SELECT DISTINCT NULL, NTILE(v0.c0) OVER (), ((rt0.c4) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (t1.c0))) AND (((NULL)>>(rt0.c1)))) FROM t1, rt0, v0 WHERE (CASE ((((((((x'')OR(0.7343940651549059)))AND(NULL)))AND(x'')))OR(x''))  WHEN CAST(NULL AS INTEGER) THEN ((0xffffffffeac9a4fc) BETWEEN (0.36520379438057304) AND (NULL)) END) GROUP BY t1.c78 HAVING ((((t1.c5) BETWEEN (t1.c5) AND ('2049015937'))) NOT BETWEEN (TRIM(DISTINCT rt0.c4)) AND (AVG(rt0.c0))) ORDER BY ((((((t1.c5) BETWEEN (t1.c80) AND (rt0.c1)))AND((NOT (rt0.c3)))))AND((((t1.c5))>((v0.c0))))); -- 0ms;
SELECT highlight(((('-392754991')) BETWEEN ((t1.c78)) AND ((t1.c0))), ((t1.c80) ISNULL), ((((t1.c0)AND(rt0.c4)))OR('')), SUM(t1.c5)), ((ABS(rt0.c3))OR(rt0.c0 COLLATE RTRIM)), COUNT(((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS), ((((rt0.c3)-(0.041822977843769094))) IS FALSE), CAST(((t1.c0) NOT NULL) AS INTEGER) FROM rt0;SELECT DISTINCT LIKELY(t1.c78 COLLATE RTRIM), CASE WHEN (rt0.c1 IN (rt0.c1, t1.c78)) THEN CASE t1.c80  WHEN rt0.c3 THEN t1.c78 ELSE rt0.c4 END END, (NULL IN ('0.6231656115296917')) COLLATE NOCASE COLLATE RTRIM, CAST(CASE t1.c0  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c4 END AS BLOB), COUNT(CASE rt0.c2  WHEN rt0.c3 THEN '' END) OVER () FROM v0 LIMIT -158813755;SELECT ALL ((((((rt0.c2)AND(rt0.c3)))AND(t1.c78))) NOT BETWEEN ((rt0.c3 IN ())) AND ('\%_z0')) FROM t1, rt0, v0 WHERE ((+ (CAST(0.7586820041689742 AS INTEGER)))); -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c3) ISNULL)), ((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 END)OR((- (rt0.c1)))))OR(((((((((((((t1.c78)OR(rt0.c3)))AND(rt0.c2)))AND(t1.c80)))OR(x'')))OR(rt0.c2)))OR(rt0.c0)))), (t1.c5 IN (t1.c0)) FROM v0, rt0, t1 WHERE (CASE WHEN NULL COLLATE BINARY THEN ((x'') IS FALSE) END); -- 0ms;
SELECT DISTINCT ((UNLIKELY(t1.c0))<>('0.49219012927969996')) FROM v0, rt0, t1 WHERE (x'573e'); -- 1ms;
SELECT CUME_DIST() OVER ( ORDER BY rt0.c1) FROM rt0, v0, t1 WHERE (CAST(json_array_length('CvJ?^G|', '878914604') AS TEXT)) GROUP BY ((t1.c78) NOT BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE NOCASE HAVING (TRIM(DISTINCT t1.c78, rt0.c3) IN ()) ORDER BY ((NULL)IS(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST;SELECT t1.c0, PERCENT_RANK() OVER (), SUM((t1.c80 IN ())) OVER () FROM t1, rt0; -- 0ms;
SELECT DISTINCT rt0.c0, AVG(TOTAL(((rt0.c1)&(t1.c78)))), CAST(rt0.c4 COLLATE RTRIM AS NUMERIC) FROM v0 WHERE (IFNULL(DISTINCT (((('0.7586820041689742')AND('')))AND(x'')), (((0.3274372868740746, '147561146', NULL)) BETWEEN ((0X4d6671f7, '', '-2039220431')) AND (('1975095944', 0x4e607a9, 0.8578607249465886))))) ORDER BY (((t1.c78)) NOT BETWEEN ((((rt0.c3) IS FALSE))) AND ((t1.c78)));SELECT DISTINCT TRIM(DISTINCT CASE t1.c0  WHEN rt0.c3 THEN v0.c0 ELSE t1.c5 END), v0.c0 COLLATE BINARY, (((t1.c5)) NOT BETWEEN (((0xffffffffec1f51bc IN ()))) AND ((MAX(rt0.c0)))) FROM t1 WHERE ((((('82184105')>>('1530091419')))/(((NULL) BETWEEN (NULL) AND ('2037519103'))))) LIMIT -163160260;SELECT ALL CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) AS TEXT) FROM t1, rt0, v0; -- 0ms;
SELECT ALL ((t1.c78 COLLATE NOCASE) IS FALSE) FROM t1, v0 ORDER BY (((NULL))!=(((t1.c5 IN ()))))  NULLS FIRST, ((((((x'89bf')%(rt0.c4)))AND(rt0.c3 COLLATE RTRIM)))AND((- ('-2128983286'))));SELECT (((t1.c80, t1.c0, NULL)) NOT BETWEEN ((((NULL)>(t1.c0)), CAST(rt0.c1 AS REAL), (- (rt0.c2)))) AND ((((0.7704988386494185) IS FALSE), ((rt0.c3)LIKE(rt0.c4)), MAX(rt0.c0)))), SUM(((rt0.c2)+(v0.c0))) OVER ( ORDER BY ((UPPER(rt0.c0)) BETWEEN ((~ (rt0.c4))) AND (x'ace87394'))  NULLS LAST, CAST(rt0.c2 COLLATE RTRIM AS REAL)  NULLS FIRST), rt0.c0 FROM rt0, t1;SELECT DISTINCT (('0.041822977843769094')-(CAST(t1.c5 AS REAL))) FROM t1, v0, rt0 WHERE ((+ ('1306676027' COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c4)<=(v0.c0)) THEN CAST(rt0.c0 AS INTEGER) WHEN CAST(rt0.c3 AS BLOB) THEN NULLIF(rt0.c1, t1.c0) WHEN t1.c5 COLLATE NOCASE THEN (~ (rt0.c3)) END FROM v0, rt0;SELECT (((((v0.c0)>(rt0.c2))))>((((rt0.c4)<>(t1.c0))))) FROM rt0, t1 WHERE ((+ (((x'')=('?7')))));SELECT SUM((NULL IN ()) COLLATE NOCASE) OVER () FROM v0, t1 WHERE (CAST((x'' IN ()) AS REAL)) GROUP BY CASE WHEN (NOT (v0.c0)) THEN ((t1.c5) NOTNULL) END HAVING (NOT ((v0.c0 IN ()))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t1, v0, rt0 WHERE (((CAST(x'' AS TEXT)) NOTNULL)) ORDER BY (~ (((t1.c0) ISNULL))); -- 0ms;
SELECT DISTINCT (~ ((NOT (rt0.c0)))) FROM t1, v0;SELECT DISTINCT CASE CASE WHEN t1.c78 THEN rt0.c4 WHEN t1.c0 THEN t1.c80 WHEN t1.c5 THEN t1.c78 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c80 THEN t1.c78 END  WHEN CASE rt0.c0  WHEN t1.c5 THEN t1.c5 WHEN rt0.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c3 ELSE t1.c80 END THEN (((t1.c5))==((t1.c5))) WHEN CAST(t1.c0 AS REAL) THEN LAST_INSERT_ROWID() WHEN ((rt0.c2) IS TRUE) THEN (((t1.c0, t1.c0, rt0.c2)) NOT BETWEEN ((v0.c0, rt0.c3, rt0.c1)) AND ((t1.c80, '-2039220431', rt0.c1))) ELSE rt0.c3 COLLATE BINARY END FROM rt0 WHERE (TRIM(((NULL) ISNULL), ((x'116f') NOT NULL)));SELECT GROUP_CONCAT(-624243086) FROM v0, rt0, t1 WHERE (((((((((((NULL)AND(-1.085753011E9)))AND(x'')))AND('CvJ?^G|')))AND(NULL))) IS FALSE)); -- 1ms;
SELECT ((((t1.c78)>=(rt0.c4)))+(((((((((t1.c78)OR(rt0.c1)))AND(rt0.c1)))AND(t1.c80)))OR(rt0.c4)))) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT CASE MIN(t1.c80)  WHEN ((v0.c0)||(1975095944)) THEN x'' END FROM v0, t1, rt0; -- 0ms;
SELECT ALL TOTAL((- (t1.c5))) OVER () FROM rt0, v0, t1 GROUP BY (((+ (t1.c5))) BETWEEN ((t1.c5 IN ())) AND ((t1.c5 IN ()))); -- 0ms;
SELECT (((('-1288135403')AND(CASE t1.c5  WHEN v0.c0 THEN t1.c5 END)))OR(rt0.c0)) FROM v0 WHERE (CAST(((((((((-7.19982474E8)AND(0.0033942979117633776)))AND('Fw|⫼L%')))AND(x'fbcbcd9d')))OR('.u')) AS BLOB));SELECT (+ ((((rt0.c4, t1.c5, t1.c5)) BETWEEN ((rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c4, t1.c80, t1.c78))))) FROM v0, rt0, t1 WHERE ((~ (x'' COLLATE RTRIM))) ORDER BY NULLIF(((t1.c5)>=(v0.c0)), CAST(rt0.c2 AS TEXT))  NULLS LAST; -- 1ms;
SELECT (- (CAST(t1.c80 AS REAL))) FROM rt0 FULL OUTER JOIN t1 ON (((NULL)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE BINARY FULL OUTER JOIN v0 ON ((0.23055283140474403)>=(((rt0.c4)-(rt0.c0)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT NULL)) BETWEEN ((t1.c80 IN ())) AND ((rt0.c1 IN (0X2a32b270, v0.c0)))), NULL, (((((t1.c78))>((t1.c78))))<<(((rt0.c2)AND(t1.c0)))) FROM v0, t1 ORDER BY ((((t1.c80) NOT NULL)) NOT BETWEEN (t1.c78 COLLATE BINARY) AND (((((((((t1.c80)OR(t1.c0)))OR(t1.c0)))OR(rt0.c4)))OR(t1.c5)))) ASC  NULLS FIRST;SELECT ALL rt0.c0 FROM rt0 NOT INDEXED, v0 ORDER BY ((((((t1.c0) IS TRUE))OR(((t1.c78)<<(NULL)))))AND(NULL)) ASC, ((((t1.c78) NOT BETWEEN (t1.c78) AND (-2.0654925E8))) NOT BETWEEN (0.6167260771110331 COLLATE NOCASE) AND (((((((((rt0.c4)OR(rt0.c3)))OR(t1.c5)))OR(t1.c5)))OR(rt0.c2))));SELECT ALL COUNT(*), ((CAST(rt0.c0 AS TEXT))/(rt0.c2)), TOTAL(CAST(t1.c5 AS BLOB)), (+ (((t1.c5)<>(t1.c0)))), LOWER(DISTINCT (((t1.c0, rt0.c4, t1.c5))>=((rt0.c0, v0.c0, t1.c0)))), rt0.c1 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM, ((((~ (rt0.c3)), CAST(rt0.c3 AS INTEGER), CAST('-21165684' AS INTEGER)))==(((((rt0.c1))>((rt0.c4))), ((rt0.c0)==(rt0.c4)), '-2056704117'))) FROM t1, rt0 WHERE (((((((((CAST(-61224449 AS BLOB))OR(CAST('78221073' AS INTEGER))))AND((NOT (920914271)))))OR(CASE WHEN NULL THEN '-90378214' WHEN NULL THEN 5.60269243E8 WHEN 0.33621467347323963 THEN 1298559479 END)))AND(load_extension('\')))) ORDER BY ((((t1.c5)AND(x'a7a6')))OR(t1.c80)) ASC  NULLS LAST, ((((rt0.c3)!=(t1.c78))) BETWEEN (rt0.c1) AND (((t1.c0)||(rt0.c2))));SELECT ((+ ('229948599')) IN ()) FROM v0 WHERE (((highlight('-181402577', NULL, x'', 3102461.0))!=((NOT (1.232782533E9))))) ORDER BY (((((rt0.c4) BETWEEN (rt0.c0) AND (t1.c0))))>=((((t1.c78) NOT BETWEEN (t1.c0) AND (v0.c0)))))  NULLS FIRST, NULL ASC;SELECT DISTINCT NULL, HEX(DISTINCT MAX(rt0.c2)), (~ (CASE t1.c0  WHEN '-1244668362' THEN '1336131218' END)) FROM rt0, t1; -- 0ms;
SELECT ALL CASE (- (rt0.c0))  WHEN t1.c80 THEN MAX(t1.c78) ELSE ((t1.c78)-(t1.c80)) END FROM rt0;SELECT ALL ((((((((((((t1.c80)OR(t1.c5)))OR(v0.c0)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c78)))OR(rt0.c2)) COLLATE NOCASE FROM t1, v0, rt0 WHERE ((((((-999609859) BETWEEN (0.5573678151789124) AND (0.6827221971523436))))>=(((('x21') NOT NULL))))); -- 0ms;
SELECT DISTINCT SUM(NULL), GROUP_CONCAT(COUNT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), ABS(DISTINCT LIKELIHOOD(DISTINCT rt0.c0, 0.9596947311417577)) FROM v0, rt0 ORDER BY (~ ((((rt0.c0, rt0.c1, rt0.c1))<=((rt0.c3, rt0.c0, rt0.c4))))) ASC  NULLS FIRST;SELECT ALL ((JULIANDAY(rt0.c4, rt0.c1, t1.c0))+(((t1.c0)||(rt0.c0)))), TRIM(DISTINCT rt0.c4) COLLATE RTRIM, (((rt0.c3)) NOT BETWEEN ((((t1.c78)|(rt0.c0)))) AND ((((rt0.c1)>>(rt0.c3))))) FROM v0 ORDER BY CAST(rt0.c4 AS TEXT) COLLATE RTRIM DESC  NULLS FIRST, (((t1.c80 IN (rt0.c2)))>>(rt0.c3 COLLATE RTRIM)) DESC  NULLS LAST;SELECT ((((((((((t1.c80) BETWEEN (NULL) AND (t1.c5)))OR(rt0.c0)))OR(CAST(v0.c0 AS BLOB))))AND(SUM(rt0.c0))))OR(((rt0.c2)>>(t1.c5)))) FROM t1 INNER JOIN rt0 ON ((((rt0.c4) BETWEEN (t1.c0) AND (NULL)))AND((t1.c78 IN ()))) RIGHT OUTER JOIN v0 ON ((NOT (rt0.c0)) IN ()); -- 0ms;
SELECT ALL TYPEOF(SQLITE_SOURCE_ID()) FROM v0, rt0; -- 1ms;
SELECT ALL ((((t1.c5) NOT BETWEEN (t1.c0) AND (rt0.c3))) IS FALSE) FROM v0, t1, rt0 WHERE ('0.9793148607913282'); -- 0ms;
SELECT (((t1.c0) NOTNULL) IN ()), CAST(((t1.c5)%(t1.c78)) AS NUMERIC), (~ (((NULL) NOTNULL))) FROM v0, t1, rt0 WHERE (((((NULL) BETWEEN (0.09890074632594414) AND ('쥱nv[넰]'))) BETWEEN (LIKELIHOOD(DISTINCT 0.20047450197086547, 0.8210880690003128)) AND ((+ (0.6827221971523436))))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), TOTAL(((rt0.c4) IS TRUE)) OVER ( GROUPS  UNBOUNDED PRECEDING), SUM(((rt0.c0)<<(rt0.c0)) COLLATE NOCASE) FROM v0, rt0, t1 LIMIT -1672072185 OFFSET -1839372868; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM v0 WHERE (((((((((((x'9587')AND(NULL)))AND(0.9130221888083698)))AND(1.975095944E9)))AND(3.00329135E8)))%(x'e064' COLLATE RTRIM))); -- 0ms;
SELECT CAST(AVG(rt0.c3) AS NUMERIC), NTILE(CAST(((rt0.c0) NOTNULL) AS NUMERIC)) OVER (), (((t1.c5 IN (t1.c80))) NOTNULL) FROM rt0;SELECT ((SUM(rt0.c1))<>(UPPER(rt0.c1))), COUNT(*) OVER (), (- (((t1.c78)GLOB(rt0.c2)))) FROM v0, rt0, t1 WHERE ((NOT ((((35645961))>=((0.4430231115963862)))))); -- 1ms;
SELECT ALL (('S	' COLLATE BINARY)!=(CASE t1.c5  WHEN NULL THEN t1.c80 ELSE rt0.c1 END)) FROM v0, rt0, t1 WHERE (((((((((('' IN ()))AND('' COLLATE NOCASE)))AND(CAST(-2037508082 AS NUMERIC))))AND(x'')))OR(((0xfffffffffebd098c)LIKE('V峻prK1'))))) LIMIT -2114863484 INTERSECT SELECT DISTINCT COUNT(*) FROM t1, rt0 ORDER BY CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE DESC;SELECT json_patch(COUNT(-167936831), ((rt0.c1)+(t1.c80))) FROM rt0, t1, v0; -- 0ms;
SELECT DISTINCT 1109658314 FROM rt0, t1, v0 WHERE ((0x15588815 IN (x'')) COLLATE NOCASE) GROUP BY ((((t1.c0)<<(rt0.c4))) IS FALSE), (((~ (rt0.c1))) ISNULL), ((((((((rt0.c4)OR(t1.c80 COLLATE NOCASE)))AND(NULL)))AND((((x''))>((rt0.c1))))))OR((+ (rt0.c2)))) HAVING (((CAST(rt0.c2 AS TEXT)))>((NULLIF(rt0.c2, rt0.c0)))) ORDER BY '' ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((COUNT('S虔'), ((((rt0.c1)AND(rt0.c4)))AND(rt0.c3)), COUNT('-947543696')))>((((x'')+(t1.c78)), ((rt0.c4)|(rt0.c2)), ((x'e4b2')==(v0.c0))))), (((- (t1.c5))) ISNULL), (~ ((((v0.c0)) BETWEEN ((rt0.c0)) AND (('h5\n\'))))) FROM rt0;SELECT DISTINCT GROUP_CONCAT(((((t1.c78)OR(rt0.c3)))AND(rt0.c3))) COLLATE NOCASE FROM rt0, v0;SELECT ALL SUM(CAST(t1.c78 AS BLOB)) OVER (), ((rt0.c2) BETWEEN (t1.c78) AND (rt0.c3)) COLLATE RTRIM, ((((((((t1.c80)OR((t1.c80 IN (rt0.c0)))))OR((((rt0.c0, rt0.c0, rt0.c4))==((v0.c0, '*^', rt0.c2))))))OR(((rt0.c1) IS TRUE))))OR(((t1.c80) NOT NULL))) FROM t1, v0, rt0 WHERE ((((((844836267)+(''))))>(('u' COLLATE RTRIM)))) GROUP BY CAST(t1.c78 AS REAL), CAST(CASE t1.c5  WHEN rt0.c0 THEN rt0.c2 END AS BLOB), rt0.c2 COLLATE NOCASE; -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY ((((CASE x''  WHEN NULL THEN t1.c0 ELSE rt0.c3 END)OR(CAST(v0.c0 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST GROUPS BETWEEN 1e500 COLLATE RTRIM FOLLOWING AND ((JULIANDAY(rt0.c1, rt0.c3, rt0.c3))>(CAST(rt0.c3 AS BLOB))) FOLLOWING), (((0.1667971427178343) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN ()), rt0.c1 COLLATE BINARY FROM rt0, v0, t1 WHERE (CAST(((0.49846965980938795) NOT NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) NOTNULL) AS TEXT) FROM v0 LIMIT -828124622;SELECT DISTINCT TOTAL(v0.c0), ((NULL) NOT BETWEEN ('-1206052015') AND (CASE WHEN t1.c78 THEN t1.c0 ELSE t1.c78 END)), COUNT(*) FROM rt0, v0, t1 WHERE (((((-1264317037) NOT BETWEEN ('FfY	') AND (NULL)))!=(((x'fcb3')IS(2034547946))))); -- 0ms;
SELECT ALL x'' FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN t1.c5 END) NOT BETWEEN (((t1.c80)AND(t1.c78))) AND ((x'786f' IN ())))  NULLS FIRST;SELECT DISTINCT (+ (((t1.c0)>>(t1.c80)))) FROM v0, t1, rt0 WHERE ((((((((((~ (NULL)))AND('<cH')))AND('1577792302')))AND((((('78221073')OR(x'4608')))AND(0.8699968109939737)))))AND((('dhgfyHGH~') ISNULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2)<(rt0.c2))) ISNULL), COUNT(*), LIKE(t1.c80 COLLATE NOCASE, COALESCE(rt0.c3, t1.c80)) FROM rt0, t1, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE x''  WHEN v0.c0 THEN rt0.c2 WHEN t1.c80 THEN rt0.c4 WHEN rt0.c0 THEN NULL END) OVER () FROM v0 WHERE ((('-896387352')GLOB((((('')AND(0.28264679396913484)))OR(x'8029a577')))));SELECT DISTINCT (((((rt0.c0)OR(t1.c5)))OR(t1.c5)) IN ()) FROM rt0 WHERE (QUOTE((('!/')+(0.0658398599911697)))); -- 0ms;
SELECT (((+ (x''))) NOT BETWEEN (((rt0.c0)OR(t1.c78))) AND (((('')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FROM t1, rt0 WHERE (CASE (('')AND(1478409936))  WHEN ((NULL)LIKE(NULL)) THEN CAST(0X1ac55336 AS REAL) ELSE NULL COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c3  WHEN rt0.c3 THEN t1.c78 END)AND(JULIANDAY(rt0.c4, t1.c80, t1.c78, rt0.c1, rt0.c0))))OR(((rt0.c4) ISNULL))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT (((0.4515996468382265 IN (t1.c78)))<=((- (t1.c78)))), COUNT(*) COLLATE RTRIM, MIN(x'') FROM v0, t1, rt0 WHERE ((+ ((((0.934380019658477)) NOT BETWEEN (('2⢽ÒS8_	')) AND ((0.7343940651549059)))))); -- 1ms;
SELECT DISTINCT CASE WHEN (((rt0.c3))!=((t1.c0))) THEN (('2126243055') NOT BETWEEN (t1.c80) AND (0.8584045391103657)) END, (((t1.c0)>>(rt0.c3)) IN ()), CAST(((t1.c78) BETWEEN (t1.c78) AND (0X4692f70f)) AS INTEGER) FROM rt0 WHERE (CASE WHEN ((('1321792127'))>=((-2.037508082E9))) THEN NULL WHEN ((('W')) BETWEEN (('i㢟D콿X%f葛')) AND ((''))) THEN NULL WHEN 0.26749180867584943 THEN (~ ('1273939726')) END);SELECT DISTINCT (((x'24ba')) BETWEEN ((NULL)) AND (((((rt0.c4, NULL, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c4, rt0.c4)) AND ((rt0.c1, t1.c80, rt0.c2)))))), ((v0.c0 IN ()) IN ((NOT (rt0.c3)))), ((((((rt0.c3) BETWEEN (rt0.c3) AND (t1.c0)))AND(CASE WHEN t1.c80 THEN rt0.c4 END)))OR(((t1.c80)LIKE(x'')))) FROM rt0;SELECT ALL ((((rt0.c2) BETWEEN (rt0.c3) AND (t1.c80))) IS TRUE) FROM t1;SELECT ALL (((1394111690)) NOT BETWEEN ((((v0.c0) IS TRUE))) AND ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))))), ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((0.9960301119004009) NOT NULL))), AVG((((rt0.c4)) NOT BETWEEN ((t1.c5)) AND ((v0.c0)))) OVER () FROM v0, t1, rt0; -- 3ms;
SELECT DISTINCT (('J%1q') IS FALSE), LEAD(((v0.c0 COLLATE NOCASE)<>((+ (v0.c0)))), (+ (v0.c0)) COLLATE NOCASE, CASE WHEN ((0.23206689947757764)&(v0.c0)) THEN ((v0.c0)+(v0.c0)) WHEN 0.7145156534868858 THEN NULL WHEN ((NULL)<>(v0.c0)) THEN CAST(v0.c0 AS REAL) END) OVER (), (CAST(rt0.c2 AS REAL) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT (rt0.c2 IN ('0.49846965980938795')) FROM t1, v0, rt0; -- 0ms;
SELECT (((GLOB(rt0.c1, t1.c78), (((rt0.c3)) BETWEEN ((t1.c0)) AND ((t1.c78))), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))>=((t1.c5 COLLATE RTRIM, ((rt0.c2) BETWEEN (0.809960499025816) AND (t1.c78)), MAX(v0.c0)))), (((rt0.c3, json_quote(rt0.c0), ((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))>=((MAX(t1.c80), COUNT(*), CASE WHEN t1.c78 THEN rt0.c2 ELSE t1.c5 END))), rt0.c0 FROM t1;SELECT ALL CASE ((rt0.c1) IS TRUE)  WHEN '-724962857' THEN NULL COLLATE RTRIM END FROM v0, rt0, t1; -- 0ms;
SELECT ALL t1.c80 FROM v0, t1, rt0; -- 0ms;
SELECT ALL ((((t1.c78)<(rt0.c1))) ISNULL) FROM t1, v0, rt0 WHERE ((((('') IS TRUE))+(LAST_INSERT_ROWID()))); -- 0ms;
SELECT DISTINCT rt0.c2 COLLATE BINARY FROM t1, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)>>(rt0.c4)) AS REAL) FROM v0, rt0 WHERE (CASE WHEN ((868706048) BETWEEN ('-416211518') AND (0Xb31c1f)) THEN ((((0.33621467347323963)AND(NULL)))AND('16391255')) ELSE '0.49846965980938795' END); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c0 THEN 0.5413316796020924 ELSE rt0.c2 END) BETWEEN ('jnLN(*7') AND (((v0.c0)<=(t1.c80)))) FROM t1, v0, rt0; -- 0ms;
SELECT ALL LEAD((((rt0.c4, rt0.c4, rt0.c4)) BETWEEN (((+ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 END, CASE WHEN rt0.c4 THEN rt0.c1 END)) AND ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3, rt0.c3 COLLATE BINARY))), (+ (rt0.c2)) COLLATE RTRIM, rt0.c1) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS NUMERIC) AS BLOB) FROM v0 ORDER BY ((((((t1.c80) BETWEEN (rt0.c3) AND (0.4059884145344518)))AND(((NULL)<<(t1.c0)))))OR(LIKE(NULL, t1.c0, '0'))) ASC;SELECT ALL 0.9381838670573579 FROM rt0, t1, v0; -- 0ms;
SELECT ALL CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) THEN 868706048 END FROM t1, v0 WHERE (CAST(CAST(711726661 AS NUMERIC) AS NUMERIC));SELECT COUNT(CASE rt0.c2  WHEN t1.c78 THEN t1.c78 WHEN t1.c0 THEN t1.c0 WHEN t1.c5 THEN t1.c0 WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c3 END) FROM v0 WHERE (((TRIM(x'')) ISNULL));SELECT DISTINCT ((((rt0.c1 COLLATE BINARY)AND(t1.c80)))OR(CAST(rt0.c1 AS TEXT))) FROM t1, v0, rt0 WHERE (CASE WHEN (x'' IN (NULL, 0.23206689947757764)) THEN (((x'', NULL, 1.577792302E9)) BETWEEN ((NULL, '_xz[', '862542044')) AND ((NULL, '1028798271', ''))) ELSE (-3.3349178E8 IN ()) END) GROUP BY (((((rt0.c0 IN ()))AND(t1.c80)))OR((t1.c80 IN (v0.c0)))); -- 0ms;
SELECT DISTINCT CAST(((v0.c0) NOT BETWEEN (t1.c0) AND (0.9130221888083698)) AS INTEGER) FROM t1, rt0;SELECT DISTINCT (t1.c0 COLLATE NOCASE IN (CAST(t1.c80 AS REAL), t1.c5 COLLATE BINARY)) FROM t1; -- 0ms;
SELECT DISTINCT MAX(((rt0.c2) IS TRUE)), CAST(t1.c78 AS BLOB), RANK() OVER () FROM v0, t1;SELECT COUNT(*) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM v0; -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c80)) COLLATE BINARY, ((t1.c0 COLLATE BINARY)<>((rt0.c1 IN ()))), GROUP_CONCAT(((t1.c78)%(rt0.c3))) FILTER(WHERE ((CASE WHEN t1.c80 THEN t1.c5 ELSE v0.c0 END) BETWEEN (((((t1.c80)OR(t1.c80)))AND(rt0.c0))) AND ((rt0.c3 IN ())))) OVER () FROM v0;SELECT ((- (t1.c80)) IN ()), (((t1.c78, rt0.c1, rt0.c0)) BETWEEN ((CAST(x'' AS TEXT), (NOT (rt0.c3)), (NOT (t1.c0)))) AND ((UNLIKELY(rt0.c1), MIN('878914604'), ((rt0.c1)==(rt0.c0))))), (((rt0.c2 IN ()))=((rt0.c4 IN ()))), ((((v0.c0)IS NOT(rt0.c4))) NOTNULL), ((CAST(t1.c0 AS REAL)) NOT BETWEEN (((t1.c80)-(t1.c0))) AND ((rt0.c4 IN ()))) FROM v0, t1 WHERE ((((((')T') NOT BETWEEN (0.5495934758476854) AND (1.7976931348623157E308))))==((TRIM(DISTINCT 0.9844604986724972, 878914604)))));SELECT DISTINCT IFNULL(DISTINCT (+ (t1.c78)), ((((((((t1.c78)AND(rt0.c0)))AND(t1.c0)))OR(rt0.c1)))AND(t1.c5))) FROM rt0, v0, t1; -- 0ms;
SELECT DISTINCT TOTAL(CAST(NULL AS TEXT)) FROM t1 CROSS JOIN rt0 ON t1.c0 COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 END) IS FALSE) WHERE (((((((('-1800646848')) BETWEEN ((7.8221073E7)) AND (('-25363161'))))OR(CASE ''  WHEN 0.6869536206252032 THEN 0.8193517567722061 ELSE '' END)))OR((+ ('-1827888859'))))); -- 0ms;
SELECT ALL rt0.c0 FROM v0 WHERE (((CASE WHEN 'xP넰' THEN 0Xffffffff9eb9946c END) ISNULL));SELECT DISTINCT ((((((-7.19982474E8)AND(0.985328289724183)))AND(rt0.c2)))IS NOT(((((((((rt0.c3)AND(rt0.c4)))AND(t1.c5)))OR(v0.c0)))OR(t1.c0)))), ((((((rt0.c2)AND(t1.c80)))OR(rt0.c3))) IS FALSE), NULL FROM rt0 WHERE (CASE ((-2128983286) BETWEEN ('423665096') AND (NULL))  WHEN ((x'') NOT BETWEEN (x'') AND (0.9793148607913282)) THEN CASE WHEN x'' THEN 0.1382563404464947 ELSE 0.7083414740379151 END WHEN (((x'')) NOT BETWEEN (('_XZ[')) AND (('*bYf'))) THEN CASE WHEN '0.934380019658477' THEN x'' END WHEN (- (x'')) THEN (- ('-284740687')) ELSE (0X532851bb IN ('')) END);SELECT DISTINCT (+ (2.049015937E9)) FROM t1, v0, rt0 WHERE (((((x'')%(0.6566614473855599)))-(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((+ (t1.c5)))&(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), (((rt0.c4 IN ()))&(CAST(t1.c5 AS INTEGER))), (+ ((~ (t1.c0)))), t1.c78, (~ (t1.c5)) COLLATE RTRIM FROM v0;SELECT ALL ((t1.c5)<(v0.c0)) COLLATE NOCASE FROM t1, v0, rt0 WHERE (((((0.21510259004646082) NOT BETWEEN (0.4952078408450371) AND (0.4831687893133674))) BETWEEN (((x'') IS TRUE)) AND (CAST('-500369163' AS INTEGER)))) ORDER BY ((x'fae4') ISNULL) COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT AVG((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c3, t1.c78)))) OVER () FROM rt0, t1; -- 0ms;
SELECT DISTINCT 'F쥱GW,ary', 0.23889821877578243, GROUP_CONCAT((+ (rt0.c1))) FROM t1 WHERE ((((IFNULL(DISTINCT 0.1483276235296601, x''), ((NULL) ISNULL), ((0.3105133839182611) BETWEEN (0.985328289724183) AND ('1298559479'))))<((0.4831687893133674, NULL COLLATE NOCASE, (- (0X52aecc71))))));SELECT ALL ((((((((((t1.c0) BETWEEN (rt0.c2) AND (t1.c5)))OR(0X7ebbe4ef)))OR((rt0.c2 IN ()))))AND(x'')))OR(((((t1.c5)AND(rt0.c1)))AND(t1.c78)))) FROM t1 WHERE ((((+ (666097478)))-((~ (1.321792127E9)))));SELECT DISTINCT ((CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE t1.c5 END)/(rt0.c4)), ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((- (0Xfffffffff842fed8)))), CASE WHEN ((t1.c80)-(t1.c80)) THEN ((rt0.c1) NOTNULL) END FROM rt0, t1, v0; -- 0ms;
SELECT IFNULL(CASE rt0.c3  WHEN rt0.c4 THEN t1.c80 ELSE rt0.c1 END, t1.c78 COLLATE BINARY) FROM v0, rt0;SELECT LEAD(((rt0.c3)-(((rt0.c3)GLOB(rt0.c1)))), x'', CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c1)!=(rt0.c2)) THEN rt0.c1 END) OVER () FROM t1, rt0; -- 0ms;
SELECT DISTINCT TOTAL((t1.c5 IN ())) FILTER(WHERE ((((t1.c80) IS FALSE))IS NOT(rt0.c1 COLLATE RTRIM))) OVER () FROM rt0, t1, v0; -- 0ms;
SELECT ALL (+ (t1.c5)) FROM rt0, t1 LIMIT -99596880 OFFSET 1687366199; -- 0ms;
SELECT DISTINCT ((((rt0.c4)-(rt0.c2)))>>((((rt0.c0))>((rt0.c2))))), CAST(((t1.c78)AND(rt0.c2)) AS REAL), '-392754991' FROM t1, v0, rt0; -- 0ms;
SELECT ALL CAST(CAST(t1.c78 AS REAL) AS NUMERIC) FROM rt0, t1, v0 WHERE ((((('1577792302') BETWEEN (x'') AND ('1050949769')))GLOB(('' IN (0xfffffffff46b6704, 0.9758444088770085))))); -- 1ms;
SELECT DISTINCT CASE (- (rt0.c0))  WHEN 553334713 THEN ((rt0.c0) BETWEEN (t1.c78) AND (rt0.c3)) WHEN COUNT(rt0.c2) THEN (((t1.c78)) NOT BETWEEN ((t1.c78)) AND ((t1.c0))) WHEN v0.c0 COLLATE BINARY THEN ((rt0.c3) IS TRUE) END FROM t1;SELECT ALL ((t1.c80) IS FALSE) COLLATE RTRIM, (((rt0.c1)) BETWEEN ((t1.c78)) AND ((t1.c0))) COLLATE BINARY, (((rt0.c2)) NOT BETWEEN (((((NULL, t1.c80, rt0.c3))<=((x'', rt0.c1, t1.c80))))) AND (((((rt0.c2, x'', t1.c0)) NOT BETWEEN ((rt0.c1, x'', rt0.c0)) AND ((t1.c0, t1.c5, t1.c0)))))) FROM v0, rt0 WHERE (x'4d25' COLLATE RTRIM);SELECT DISTINCT NTH_VALUE((((((~ (rt0.c2)))AND(0.7145156534868858)))AND(t1.c80)), (NOT ((((t1.c78)) NOT BETWEEN ((rt0.c4)) AND ((t1.c5)))))) OVER () FROM t1, v0, rt0 GROUP BY ((t1.c78 COLLATE BINARY) NOT BETWEEN ((rt0.c0 IN (rt0.c4, 0xffffffff936de222))) AND (((((((((rt0.c4)AND(rt0.c0)))OR('1273939726')))OR('-1520175047')))OR(rt0.c4)))), json_extract(t1.c80, '\nq(紹v'), CASE (((('ffy	')AND(t1.c80)))AND(rt0.c4))  WHEN v0.c0 COLLATE RTRIM THEN rt0.c4 COLLATE RTRIM ELSE (rt0.c3 IN ()) END; -- 0ms;
SELECT CASE WHEN ((t1.c5) IS FALSE) THEN CASE t1.c5  WHEN '1298559479' THEN t1.c80 ELSE rt0.c2 END END FROM v0, t1 WHERE (((CASE WHEN x'' THEN '' END) BETWEEN (((x'')<>('\'))) AND (((('', 'fCdW', 0.8544514667768696))==(('', '', '-2039220431'))))));SELECT ALL (((((((((((((- (t1.c0)))OR((((t1.c80)) BETWEEN ((v0.c0)) AND ((t1.c80))))))AND(((((rt0.c4)OR(rt0.c0)))OR(t1.c80)))))AND(t1.c80)))AND(CAST(rt0.c2 AS TEXT))))AND(((t1.c78) NOTNULL))))AND('-889346926')) FROM rt0 RIGHT OUTER JOIN v0 ON t1.c5 COLLATE NOCASE ORDER BY ((((rt0.c3) BETWEEN ('1064170091') AND (t1.c5)))OR((rt0.c3 IN ()))) ASC  NULLS LAST;SELECT ALL ((((CASE WHEN v0.c0 THEN 0.34448486120047994 END)OR(rtreenode(rt0.c1, ']YN'))))AND(((((((((rt0.c4)AND(rt0.c1)))OR(t1.c0)))AND(rt0.c3)))AND(t1.c0)))), 1.184036623E9, CASE WHEN 0.3622982943723142 THEN ((rt0.c0) NOT BETWEEN (t1.c5) AND (rt0.c1)) ELSE ((rt0.c0)LIKE(t1.c5)) END FROM rt0 WHERE ((((0.11902734825479533 IN ('', 1133241553))) IS TRUE));SELECT DISTINCT ((t1.c78)>=(CAST(rt0.c1 AS TEXT))) FROM t1 WHERE (CAST((NULL IN ()) AS BLOB));SELECT DISTINCT -2.056704117E9 FROM v0 WHERE (((((((x'')OR(0.6394259609946059)))AND('')))>>(CASE WHEN x'' THEN 0.8479775469678188 WHEN '560269243' THEN 0Xdf08f8e WHEN -1574693141 THEN '12071375' ELSE '-1558526804' END))); -- 0ms;
SELECT DISTINCT GLOB((((t1.c0))<((rt0.c2))), CASE WHEN t1.c78 THEN t1.c80 WHEN rt0.c1 THEN t1.c5 WHEN rt0.c2 THEN rt0.c3 ELSE v0.c0 END) FROM rt0, t1 WHERE (MIN(0.1356816082459733, 0.5283500866031572) COLLATE NOCASE) ORDER BY (((((rt0.c0 IN (rt0.c0)))OR(t1.c80)))OR(((((t1.c78)AND(t1.c80)))OR(rt0.c4))));SELECT DISTINCT COUNT(((((rt0.c1)AND(rt0.c2)))OR(v0.c0)) COLLATE RTRIM) OVER ( RANGE (NOT ((- (rt0.c0)))) PRECEDING EXCLUDE TIES) FROM v0, t1, rt0 NOT INDEXED WHERE ((((((0.23206689947757764)AND(0.03676946095120792)))AND(0.7648995596264295)) IN ()));SELECT DISTINCT ((((((((((t1.c5) NOT BETWEEN (t1.c78) AND (rt0.c0)))OR(((t1.c78) ISNULL))))OR(CASE WHEN t1.c80 THEN rt0.c3 END)))OR((((t1.c0, rt0.c3, t1.c0))<=((rt0.c0, rt0.c3, rt0.c2))))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))), (NOT (CASE t1.c78  WHEN rt0.c3 THEN t1.c5 WHEN t1.c78 THEN rt0.c4 WHEN v0.c0 THEN rt0.c1 END)), (+ (SQLITE_COMPILEOPTION_GET(t1.c0))) FROM rt0, t1;SELECT DISTINCT CAST(CAST(0.04297030358766263 AS BLOB) AS REAL) FROM t1 FULL OUTER JOIN rt0 ON (~ (((v0.c0) IS FALSE))) CROSS JOIN v0 ON (0Xffffffffe22cf8f5 IN ()) GROUP BY TYPEOF(DISTINCT CASE WHEN t1.c80 THEN 0.7175143676839272 END) HAVING ((t1.c80) IS TRUE) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT ((((((rt0.c1) BETWEEN (rt0.c3) AND (t1.c80)))AND(CAST(rt0.c3 AS INTEGER))))OR((rt0.c1 IN (rt0.c4)))), 0Xffffffffb8405025, LIKE((+ (v0.c0)), COUNT(t1.c80), '0'), TYPEOF((t1.c80 IN (rt0.c4, rt0.c1))), ((t1.c78 COLLATE RTRIM)>('-1411186478' COLLATE RTRIM)) FROM rt0, t1, v0 WHERE ((+ (((((x'')OR(0.057924295179600405)))OR(''))))); -- 1ms;
SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c2 END)AND((NOT (t1.c5)))) FROM v0, t1 WHERE (CASE CASE WHEN NULL THEN 0.20873701403076117 ELSE 878914604 END  WHEN '_⎙藈#Ti' COLLATE BINARY THEN (~ ('')) WHEN CAST(NULL AS TEXT) THEN (- ('o_wLSV')) WHEN x'e669' COLLATE RTRIM THEN ((NULL)||('.mXB瘝vy')) ELSE ((x'') NOT BETWEEN (NULL) AND (0.27772783366611586)) END);SELECT DISTINCT CASE ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))AND(t1.c78)))AND(rt0.c1))  WHEN MAX(rt0.c2) THEN CASE rt0.c2  WHEN rt0.c3 THEN t1.c78 WHEN t1.c78 THEN t1.c78 WHEN v0.c0 THEN t1.c80 ELSE t1.c78 END END, TOTAL(t1.c0), ((rt0.c4) NOT BETWEEN (NULL) AND (rt0.c3)), (v0.c0 IN ()) COLLATE BINARY, json_extract((rt0.c2 IN (t1.c80, rt0.c2)), CAST(rt0.c2 AS BLOB), rt0.c2, TYPEOF(DISTINCT rt0.c4), ((t1.c5) BETWEEN (t1.c80) AND (v0.c0)), MAX(rt0.c2)), ((((t1.c0 IN (rt0.c4, rt0.c0)), ((t1.c0) BETWEEN (rt0.c0) AND (v0.c0)), t1.c5))<>((((rt0.c0) NOT BETWEEN (x'7e62') AND (rt0.c3)), ((((0.05798609244185682)OR(t1.c0)))AND(v0.c0)), (rt0.c4 IN ())))), ((v0.c0) IS FALSE) COLLATE NOCASE FROM rt0 WHERE (((((((((((((0.14028469200901272)AND(x'')))OR(x'')))AND('-2109154368')))OR((('811071588') IS FALSE))))OR((x'' IN (0.6378151224490525)))))AND(((x'') ISNULL)))) LIMIT -429094643;SELECT DISTINCT ((rt0.c2) BETWEEN (t1.c0) AND (rt0.c3)) COLLATE BINARY, ((((((rt0.c4)GLOB(t1.c80)))AND(((rt0.c4) BETWEEN (x'') AND (v0.c0)))))OR(((t1.c80)*(t1.c0)))), (((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)) IN ()) FROM v0, rt0, t1; -- 0ms;
SELECT COUNT(((x'') NOTNULL)) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c78) IS FALSE)) ISNULL) FROM rt0, v0, t1 WHERE (((((x'') IS TRUE)) BETWEEN ((0.9960160554967415 IN ())) AND (('820482588' IN ())))); -- 0ms;
SELECT ALL ((((v0.c0) IS TRUE)) BETWEEN ((((rt0.c1))>=((t1.c0)))) AND (((((rt0.c1)OR(t1.c5)))OR(t1.c5)))) FROM t1, v0 WHERE ((~ (((0.4316664583044372) BETWEEN ('') AND ('J-+m륍U\nE')))));SELECT DISTINCT rt0.c3 FROM rt0, v0, t1; -- 0ms;
SELECT ALL ((x'cffb')/(t1.c5 COLLATE RTRIM)), '', (((rt0.c2))<((t1.c5))) COLLATE RTRIM, (rt0.c2 IN (t1.c5)) COLLATE RTRIM, ((((t1.c80)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) IN ()) FROM t1 NOT INDEXED WHERE (CASE ((x'')IS(0.852529262257922))  WHEN CASE WHEN '-181402577' THEN '-392046009' WHEN x'' THEN -1736789894 WHEN x'' THEN NULL WHEN 0Xffffffffa14ecf7f THEN 0x4d0746cf WHEN 0Xfffffffff27308a2 THEN x'' ELSE '_㌬dW>볩bfM' END THEN (+ (x'325f')) ELSE (NOT (x'73db')) END);SELECT DISTINCT (~ ((+ (x'')))), CAST((((t1.c0, v0.c0, rt0.c3))>=((rt0.c1, NULL, rt0.c1))) AS TEXT), CASE WHEN ((((v0.c0)OR(t1.c78)))AND(t1.c5)) THEN (x'' IN ()) ELSE (NOT (rt0.c4)) END FROM v0, t1, rt0 WHERE (((((((NULL)&('1184036623')))OR((('-1055143567')%('-1498356417')))))OR((('584638502') NOT NULL)))); -- 0ms;
SELECT ALL ((NOT (t1.c0)) IN ()) FROM rt0; -- 0ms;
SELECT ((t1.c0 COLLATE BINARY) ISNULL) FROM v0;SELECT DISTINCT t1.c5 COLLATE RTRIM, ((t1.c0 COLLATE NOCASE) NOT NULL), ((CASE WHEN rt0.c2 THEN t1.c80 END) BETWEEN (t1.c80) AND (LIKELY(DISTINCT rt0.c1))) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((rt0.c4)&(rt0.c1))) FROM v0, t1 WHERE (((((0Xffffffff87f2d949)*('-1055143567')))||(PRINTF(x'fbed601e'))));SELECT ALL ((((- (v0.c0)), CASE t1.c78  WHEN t1.c78 THEN v0.c0 END, ((t1.c0)GLOB(rt0.c1))))!=((SUM(t1.c5), ((t1.c80)IS NOT(rt0.c4)), COUNT(*)))), (-502090831 IN ()), ((('Mz5rsﲐ9g' IN ()))||(CAST(t1.c5 AS NUMERIC))) FROM t1, v0 WHERE (NULL);SELECT GROUP_CONCAT(((((NULL)AND(t1.c78)))AND(rt0.c4))) FROM rt0, t1, v0 WHERE ((+ (TRIM(NULL)))) GROUP BY LOWER((((t1.c5))<=((v0.c0)))); -- 0ms;
SELECT (((('x', rt0.c0, t1.c5))<((rt0.c1, rt0.c2, rt0.c3))) IN ()) FROM t1 ORDER BY ((((t1.c78)GLOB(rt0.c1))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((((rt0.c1)AND(rt0.c4)))AND(rt0.c4))))  NULLS LAST, ((((((((((v0.c0)OR(rt0.c3)))AND(rt0.c2)))AND(x'913b')))AND(rt0.c3))) IS TRUE)  NULLS LAST;SELECT DISTINCT 0.21510259004646082 FROM v0 ORDER BY rt0.c2 COLLATE RTRIM  NULLS FIRST, ((((((((((((rt0.c4)AND(t1.c0)))OR(rt0.c4)))OR(COALESCE(DISTINCT rt0.c1, '0.9960160554967415'))))AND((((t1.c5, rt0.c2, v0.c0)) NOT BETWEEN ((t1.c80, t1.c0, rt0.c2)) AND ((rt0.c0, t1.c5, t1.c5))))))AND(t1.c5)))OR(rt0.c3 COLLATE RTRIM));SELECT ALL CAST(((rt0.c0) IS FALSE) AS TEXT), CASE ((rt0.c2) NOT BETWEEN (t1.c5) AND (rt0.c1))  WHEN NULL COLLATE RTRIM THEN (((t1.c80, rt0.c1, t1.c78))<=((rt0.c0, NULL, t1.c80))) WHEN ((t1.c5)GLOB(rt0.c0)) THEN CAST(t1.c78 AS INTEGER) WHEN t1.c0 COLLATE BINARY THEN (((rt0.c0)) BETWEEN ((v0.c0)) AND ((t1.c78))) END, t1.c80, rt0.c1, LAST_VALUE('-1832629590') OVER () FROM t1, v0, rt0 WHERE ((+ ((((0.4653996409113288, '-1249435330', 0.3713345742311589)) BETWEEN (('FfY	', x'', NULL)) AND ((0.985328289724183, x'', x'')))))); -- 0ms;
SELECT DISTINCT NULL, ROW_NUMBER() OVER (), '' FROM t1, v0; -- 0ms;
SELECT DISTINCT COUNT(rt0.c1), (((((NOT (t1.c78)))AND(CAST(t1.c0 AS NUMERIC))))OR(x'69dd')), (((v0.c0)) NOT BETWEEN ((MIN(t1.c78))) AND ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END))), (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c80))) COLLATE RTRIM, ((((((rt0.c1)OR(rt0.c2)))OR(t1.c0))) IS FALSE) FROM v0, rt0 WHERE (((((-1505099390)>>(0.7175143676839272)))>=((((('2(OkMk\')OR(-2.02718415E8)))AND(NULL)))));SELECT DISTINCT rt0.c0 FROM t1, v0 WHERE (TRIM(DISTINCT CAST(0.2597050571784981 AS TEXT)));SELECT ALL COUNT(*), LEAD((t1.c80 IN ()), '1468045931', (TRIM(DISTINCT t1.c80) IN ())) OVER ( ORDER BY v0.c0  NULLS FIRST, TYPEOF((((rt0.c1, rt0.c1, t1.c5))>((t1.c0, rt0.c0, v0.c0)))) ASC), ((MAX(rt0.c1))||((('-1085753011') BETWEEN (t1.c78) AND (t1.c80)))), '8', GROUP_CONCAT(((((rt0.c0)AND(rt0.c4)))AND(rt0.c0))) OVER ( PARTITION BY ((PRINTF(rt0.c2, rt0.c0, '1'))IS NOT(CASE WHEN rt0.c0 THEN v0.c0 END)), ((rt0.c3) ISNULL) COLLATE NOCASE) FROM t1;SELECT DISTINCT ((CASE t1.c5  WHEN NULL THEN rt0.c2 END) ISNULL) FROM t1 GROUP BY ((((((((t1.c78)OR(t1.c78)))AND(rt0.c0)))AND(((t1.c80)GLOB(t1.c78)))))AND(CASE rt0.c2  WHEN rt0.c4 THEN t1.c5 ELSE rt0.c2 END)), ((((t1.c5)GLOB(v0.c0)))-((((t1.c78)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))), UPPER(DISTINCT ((((x'')OR(t1.c0)))OR(t1.c80))) HAVING 0.11907796784937197 ORDER BY ((((t1.c78)IS(rt0.c1)))>>((((0.6394259609946059))>((NULL)))))  NULLS LAST;SELECT CASE ((((v0.c0)OR(rt0.c3)))OR(t1.c5))  WHEN t1.c80 THEN CASE WHEN t1.c5 THEN '_pT' ELSE v0.c0 END ELSE (rt0.c4 IN ()) END FROM t1 WHERE ((- (RTRIM('0.20873701403076117')))) ORDER BY '0.23055283140474403'  NULLS FIRST;SELECT DISTINCT 0x6784ab8d FROM t1, rt0, v0 WHERE ('1688602346') GROUP BY ((0Xfffffffffa9cf01a) NOT BETWEEN (((rt0.c1) BETWEEN (t1.c5) AND (rt0.c0))) AND ((NOT (rt0.c1)))); -- 0ms;
SELECT DISTINCT json_extract(t1.c78 COLLATE RTRIM, ((t1.c78) NOT BETWEEN (rt0.c1) AND (rt0.c1))) FROM v0, rt0, t1; -- 1ms;
SELECT ALL CASE WHEN ((((t1.c5)AND(t1.c78)))OR('-U')) THEN ((((rt0.c1)AND(x'9373')))OR(rt0.c1)) END FROM v0, t1, rt0 WHERE ((~ (CASE NULL  WHEN 0.6688822612553563 THEN '-1016063693' WHEN 0.25928050617111886 THEN -1.67936831E8 WHEN -167936831 THEN '108906961' END))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c3) IS FALSE))) FROM rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(SQLITE_SOURCE_ID(), x'') OVER (), x'', ((((MIN(t1.c80))AND(IFNULL(DISTINCT t1.c78, rt0.c2))))OR(t1.c78 COLLATE BINARY)) FROM v0, t1, rt0 WHERE (((NULL)>>('')) COLLATE NOCASE);SELECT ((rt0.c0 COLLATE BINARY) ISNULL) FROM t1, rt0 WHERE (((+ (NULL)) IN ((('f쥱gw,ary')|(NULL))))) GROUP BY CASE WHEN (rt0.c0 IN ()) THEN ((((((((((((rt0.c2)AND(t1.c0)))OR(rt0.c0)))OR(0Xb31c1f)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)) ELSE (((('Vv|D')OR(t1.c0)))OR(t1.c5)) END; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT COUNT(rt0.c4)) FROM v0, rt0 WHERE ((((((((((((0.7889651631549655, x'', NULL)) NOT BETWEEN ((NULL, '-1055143567', 0.22929830590544564)) AND (('u', NULL, 0.4430231115963862))))OR((((('1828846663')AND(x'66d2')))AND(0.21510259004646082)))))AND(((((NULL)OR('-158813755')))AND(x'')))))OR(NULL COLLATE NOCASE)))OR((((NULL, NULL, ''))>=((x'3472', 0Xffffffffb4c3a510, '28h%N')))))); -- 0ms;
SELECT ALL ((((rt0.c1) NOTNULL))||('P4I漨e' COLLATE BINARY)) FROM rt0, v0, t1 WHERE ((((((0.80665747811583, NULL, ''))!=((-0.0, 1306676027, 0X7c7b3d0b)))) IS FALSE)); -- 1ms;
SELECT ((t1.c78 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (COUNT(*))) FROM rt0, v0, t1 WHERE (CASE NULL  WHEN NULL THEN 0.468499766180541 WHEN ',SZ	' THEN NULL WHEN NULL THEN x'' END COLLATE NOCASE); -- 0ms;
SELECT (((+ (v0.c0)))<(NULL)), ((CAST(t1.c78 AS TEXT))>=(CASE rt0.c2  WHEN t1.c0 THEN t1.c5 END)), CAST(((v0.c0) IS FALSE) AS BLOB), ((((CASE rt0.c0  WHEN t1.c78 THEN rt0.c4 ELSE rt0.c4 END)AND((rt0.c1 IN (t1.c0)))))OR(t1.c78 COLLATE NOCASE)), (((t1.c80)+(0x5364de60)) IN ()) FROM t1, rt0;SELECT ALL (CASE t1.c5  WHEN t1.c80 THEN t1.c0 END IN ()), ((((((rt0.c3)) BETWEEN ((t1.c5)) AND ((rt0.c1)))))!=((CASE WHEN rt0.c3 THEN v0.c0 END))), (((((x'') NOT NULL), ((rt0.c1)<<(t1.c0)), (v0.c0 IN ())))<((LIKELIHOOD(rt0.c3, 0.7595834700415968), SUM(rt0.c2), rt0.c2))) FROM t1;SELECT ALL ((CASE t1.c0  WHEN t1.c78 THEN t1.c78 WHEN t1.c78 THEN v0.c0 WHEN rt0.c4 THEN v0.c0 END)<<(((((rt0.c2)OR(t1.c78)))AND(t1.c78)))) FROM v0 WHERE (((NULL)IS NOT(x'')) COLLATE NOCASE);SELECT DISTINCT '%MU\n[' FROM v0, rt0 WHERE (x'1666' COLLATE BINARY); -- 0ms;
SELECT ALL ((rt0.c0)IS(CASE rt0.c1  WHEN NULL THEN rt0.c2 END)), TRIM(DISTINCT SUBSTR(v0.c0, 'C酏'), CAST(v0.c0 AS INTEGER)), MIN(((rt0.c0) ISNULL)), (~ (0.014318798061190297)), CASE WHEN t1.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c3 WHEN t1.c80 THEN t1.c80 ELSE rt0.c2 END COLLATE RTRIM FROM v0, t1;SELECT ((((v0.c0) IS FALSE))==(((t1.c0) IS TRUE))), NTILE((CAST(rt0.c2 AS NUMERIC) IN ())) OVER (), rt0.c1, ((rt0.c4)+((+ (t1.c78)))), (('nꌭ\r黴Cq<') IS TRUE) FROM rt0, t1, v0; -- 1ms;
SELECT ((CAST(rt0.c4 AS TEXT)) BETWEEN (((t1.c80)LIKE(rt0.c3))) AND (LTRIM(rt0.c1))) FROM rt0, t1, v0 WHERE (((((('*^'))>((0X5f84833d)))) BETWEEN ((('D0')/(0xffffffffca4026cb))) AND (CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL 0.5420319510208113 FROM t1, rt0, v0 GROUP BY CAST(((x'')-(rt0.c2)) AS BLOB) HAVING CAST(((t1.c80)+(t1.c80)) AS REAL); -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c0)OR(t1.c0)))AND(rt0.c2)))OR(t1.c78)))AND(t1.c0)) AS NUMERIC) FROM t1 WHERE (((((x'8954') ISNULL))<(((((-8.28124622E8)AND(x'')))OR('-724962857')))));SELECT ALL COUNT(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN t1.c0 WHEN t1.c0 THEN rt0.c4 END) OVER () FROM v0;SELECT (((((rt0.c1, rt0.c4, t1.c5))>=((NULL, rt0.c2, 0x75b99288)))) NOTNULL) FROM v0, t1 GROUP BY (- (((rt0.c2)IS(t1.c0))));SELECT DISTINCT CASE WHEN ((rt0.c1)%(rt0.c4)) THEN (+ (t1.c80)) WHEN ((rt0.c1)-(rt0.c2)) THEN ((rt0.c4)*(t1.c78)) WHEN (- (rt0.c4)) THEN ((0.23889821877578243)<(rt0.c0)) WHEN ABS(DISTINCT t1.c80) THEN ((t1.c0) IS FALSE) WHEN ((rt0.c4)IS NOT(rt0.c2)) THEN ((t1.c78) NOTNULL) END FROM rt0 NOT INDEXED, v0, t1; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((t1.c0) BETWEEN (rt0.c2) AND (t1.c5))) FROM v0 INTERSECT SELECT PRINTF(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c0))) FROM v0, t1 WHERE ((((0xffffffffc6014f7e)) NOT BETWEEN ((CASE -458254488  WHEN NULL THEN x'' ELSE x'' END)) AND ((HEX(DISTINCT 0.5628983027806252)))));SELECT ((CAST(t1.c78 AS INTEGER))>(CAST(t1.c0 AS BLOB))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c0)<(rt0.c1))  WHEN rt0.c2 COLLATE NOCASE THEN (t1.c78 IN ()) ELSE CASE t1.c80  WHEN rt0.c4 THEN rt0.c0 END END FROM v0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (('251562806' IN ()))));SELECT DISTINCT CUME_DIST() OVER (), CASE WHEN '' THEN TYPEOF(DISTINCT rt0.c4) END, 2078737914 FROM rt0 WHERE (0.8926854234011187) GROUP BY (((rt0.c3)) BETWEEN ((CAST(rt0.c4 AS REAL))) AND ((TRIM(DISTINCT t1.c80, x''))));SELECT DISTINCT ((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c4)))OR(v0.c0))) BETWEEN (COUNT(*)) AND ((t1.c78 IN ()))) FROM t1, rt0 LIMIT -1872214182 OFFSET 2076039121;SELECT (((NOT (rt0.c3)))=(IFNULL(DISTINCT v0.c0, rt0.c0))) FROM rt0 LIMIT 1889390862;SELECT ALL ((((IFNULL(v0.c0, rt0.c4))AND(((rt0.c2) IS TRUE))))OR(((rt0.c2) IS FALSE))) FROM v0, rt0; -- 0ms;
SELECT ((t1.c80)<<(t1.c80)) COLLATE NOCASE, rt0.c4, ((rt0.c4 COLLATE BINARY)!=(((NULL)|(t1.c78)))) FROM rt0, v0, t1 WHERE (((((((x'da2f')==('%W')))AND((- (x'')))))OR(((x'')<('旡य़x)ÈC,O9'))))); -- 0ms;
SELECT DISTINCT (((((v0.c0))>((rt0.c1))))>(t1.c0 COLLATE NOCASE)), rt0.c4, ((((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (HEX(t1.c78)) AND (((rt0.c4) ISNULL))) FROM v0, t1 WHERE ((((((((((((x'682c', '-395134704', 0.4731381198723621)) NOT BETWEEN (('꫆X|+', '13250974', NULL)) AND ((NULL, '쾥3W', '-1503516171'))))OR(0x775b6824)))AND((x'426e' IN ()))))AND(NULL COLLATE RTRIM)))OR((((0.37174135111527895)) NOT BETWEEN ((0.3496382112765586)) AND ((NULL))))));SELECT DISTINCT ((CASE WHEN t1.c0 THEN NULL ELSE rt0.c3 END)==(x'85d8')) FROM v0, t1, rt0 WHERE ((~ (x''))) LIMIT 529398209; -- 0ms;
SELECT DISTINCT ((t1.c78 COLLATE RTRIM) IS TRUE), ((CASE t1.c5  WHEN rt0.c4 THEN rt0.c0 END) BETWEEN (x'') AND ((NOT (rt0.c2)))), rt0.c4 FROM t1, rt0, v0 WHERE ((NOT (NULL))); -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS NUMERIC))GLOB(((rt0.c4) NOTNULL))) FROM v0;SELECT ((CAST(rt0.c4 AS INTEGER))||((((rt0.c2)) BETWEEN ((t1.c0)) AND ((t1.c78))))) FROM v0;SELECT ALL ((((((t1.c5)AND(rt0.c0)))OR(v0.c0))) IS TRUE), 0.23206689947757764, ((((rt0.c2)%(rt0.c2)))||(((rt0.c1)>>(v0.c0)))), rt0.c1, (NOT ('-145360890')) FROM rt0, t1, v0 WHERE ('F?'); -- 0ms;
SELECT CAST((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))) AS BLOB) FROM rt0 NOT INDEXED, t1, v0 ORDER BY (((rt0.c1)) BETWEEN ((((t1.c0) ISNULL))) AND ((CASE t1.c0  WHEN rt0.c0 THEN t1.c78 END))); -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN ('637450387' COLLATE NOCASE) AND (MAX(t1.c0))), ((COUNT(rt0.c1))|(((NULL)<=(t1.c80)))), NTH_VALUE(TYPEOF((((t1.c78))>=((rt0.c0)))), rt0.c3) OVER () FROM t1, rt0, v0 WHERE (((0.48464172964124086 COLLATE RTRIM) BETWEEN (((((x'')OR(NULL)))AND(x'2e79'))) AND ((+ (0.531574071202119)))));SELECT UPPER(DISTINCT ((rt0.c0)||(rt0.c2))), COUNT(CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END) OVER ( GROUPS BETWEEN (t1.c5 IN ()) COLLATE BINARY PRECEDING AND  CURRENT ROW), ((((CAST(rt0.c0 AS TEXT))OR(rt0.c0)))AND(((rt0.c3)/(t1.c5)))) FROM v0;SELECT ALL json(((t1.c80)IS(NULL))), NTILE(LENGTH(v0.c0) COLLATE BINARY) OVER (), x'' FROM v0, t1, rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c4 END) BETWEEN (TOTAL(t1.c80)) AND ((- (t1.c78)))) FROM rt0, t1, v0 WHERE (((((NULL) NOTNULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((NULL) ISNULL))GLOB((('*B')>>(rt0.c1)))) FROM rt0, t1, v0; -- 0ms;
SELECT ALL ((((((t1.c0) ISNULL))OR(CASE WHEN t1.c78 THEN rt0.c0 END)))AND(((rt0.c1)<(rt0.c4)))), t1.c5, NULL FROM t1, v0 ORDER BY (+ ((- (v0.c0)))) ASC, CAST(CAST(t1.c80 AS BLOB) AS BLOB)  NULLS FIRST LIMIT 65742824 OFFSET -1526945644;SELECT DISTINCT SUM((((t1.c0, t1.c5, rt0.c1))<>((rt0.c0, t1.c80, t1.c0)))), v0.c0, ABS(DISTINCT ((t1.c5)=(t1.c80))) FROM v0, rt0, t1 ORDER BY ((((t1.c78)>=(t1.c80)))*((rt0.c4 IN ()))); -- 0ms;
SELECT DISTINCT UPPER(((rt0.c3) ISNULL)) FROM t1 WHERE ((((- ('-906151054'))) IS TRUE));SELECT CASE WHEN ((rt0.c0)IS(0X7b7bd9d5)) THEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) ELSE rt0.c2 END FROM rt0, t1, v0; -- 0ms;
SELECT DISTINCT ((-416211518)<=(rt0.c3 COLLATE RTRIM)) FROM t1, v0;SELECT DISTINCT COUNT(*) FROM v0, rt0, t1 WHERE (((((((0.13301323696341016)AND(NULL)))OR(x''))) ISNULL)); -- 0ms;
SELECT ALL ((((((rt0.c1) BETWEEN (t1.c0) AND (rt0.c1)))OR(TOTAL(NULL))))AND(t1.c5)) FROM v0, rt0;SELECT DISTINCT t1.c0 FROM rt0;SELECT DISTINCT ((COUNT(*))<>(((((rt0.c0)OR(v0.c0)))OR(t1.c80)))), COUNT(*) OVER (), ((MIN(x'1379'))>(CASE rt0.c4  WHEN t1.c5 THEN t1.c80 WHEN t1.c80 THEN rt0.c2 WHEN v0.c0 THEN rt0.c4 ELSE rt0.c0 END)) FROM rt0, t1 WHERE (json(0.6827221971523436 COLLATE NOCASE));SELECT ALL (~ (((rt0.c0)AND(t1.c78)))) FROM v0, rt0, t1 WHERE (((((-679840167) NOTNULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY ((x'') NOT BETWEEN (t1.c80 COLLATE NOCASE) AND ((NOT (rt0.c2))))  NULLS LAST) FROM t1, v0, rt0 WHERE ((+ ((+ ('Y1V%'))))); -- 0ms;
SELECT DISTINCT rt0.c4 FROM v0, t1;SELECT DISTINCT ((((((((rt0.c0)AND(rt0.c3)))OR(t1.c5)))AND(t1.c80)))OR(v0.c0)) COLLATE BINARY FROM t1, v0 ORDER BY (((((+ (NULL)))AND(TRIM(v0.c0))))AND((((rt0.c1, rt0.c4, rt0.c4, x'', rt0.c3)) BETWEEN ((t1.c78, rt0.c4, t1.c0, t1.c5, t1.c5)) AND ((rt0.c2, t1.c78, rt0.c4, v0.c0, t1.c80))))) ASC  NULLS FIRST;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(SUM(t1.c0))), (~ (((rt0.c2) BETWEEN (rt0.c1) AND (t1.c78)))), ((((~ (t1.c80))))>((rt0.c3 COLLATE NOCASE))) FROM rt0 NOT INDEXED, v0 WHERE (((((((((('-392754991' IN ()))AND((('0.6827221971523436') IS TRUE))))AND(x'')))OR(NULL)))OR((~ (0x23206b03)))));SELECT ALL ((((t1.c5)IS(NULL))) NOTNULL) FROM t1 WHERE ((((((((((((((NOT (x'')))AND((('878914604') NOT NULL))))OR((NOT (0xfffffffff6465f3c)))))AND((NOT ('࠻eAW>-')))))OR(CAST(0.09265831135651437 AS TEXT))))AND(((x'460c2172')IS NOT(NULL)))))AND((- (-624243086))))); -- 0ms;
SELECT ALL t1.c78, CASE (((rt0.c0))==((rt0.c2)))  WHEN GROUP_CONCAT(t1.c5) THEN '-284740687' WHEN (t1.c5 IN (rt0.c0)) THEN ((t1.c78) ISNULL) WHEN AVG(rt0.c1) THEN rt0.c4 WHEN ((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c2)) THEN CASE WHEN rt0.c4 THEN v0.c0 WHEN t1.c80 THEN t1.c78 WHEN t1.c80 THEN t1.c0 WHEN rt0.c4 THEN t1.c5 WHEN rt0.c0 THEN t1.c80 ELSE t1.c0 END WHEN COUNT(t1.c5) THEN rt0.c4 COLLATE BINARY ELSE COUNT(t1.c5) END, t1.c0 FROM v0, rt0, t1 LIMIT 868706048; -- 0ms;
SELECT (rt0.c0 IN ()) FROM v0 WHERE (((('' IN (0.829862231025882, x'10d5'))) NOT BETWEEN (CAST(0X749c6ab AS NUMERIC)) AND (CAST(NULL AS REAL)))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE t1.c0 END) ISNULL) FROM rt0 WHERE (((((x'') BETWEEN (0.9665614361676687) AND (0.543810965006803))) IS FALSE));SELECT (((((((((rt0.c4 IN ()))OR((NULL IN ()))))AND((t1.c0 IN (rt0.c4)))))OR(((t1.c78) NOTNULL))))AND((t1.c0 IN (0.3088106348234926)))) FROM t1 WHERE (((LOWER(1784427757)) BETWEEN (((0Xffffffff9c436b65) IS TRUE)) AND ('423665096' COLLATE NOCASE))) GROUP BY CASE (t1.c5 IN ())  WHEN ((rt0.c4)AND(rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) WHEN (((v0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c1))) THEN ((((((((t1.c78)OR(rt0.c2)))OR(t1.c80)))AND(rt0.c3)))OR(rt0.c1)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c4)) THEN ((t1.c78) NOT BETWEEN (rt0.c2) AND (t1.c80)) ELSE x'' COLLATE BINARY END HAVING (((v0.c0, 0.3569227504137805, rt0.c4)) BETWEEN ((CAST(rt0.c4 AS BLOB), rt0.c4, MAX(v0.c0))) AND ((((rt0.c3) IS TRUE), CAST(rt0.c2 AS TEXT), t1.c80)));SELECT DISTINCT ((((((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(t1.c78)))AND(rt0.c3)))AND(((rt0.c0)&(x'')))))AND(((t1.c0)<=(rt0.c0)))))AND((rt0.c2 IN ()))))OR(((t1.c78)+(t1.c5)))), CAST(rt0.c3 AS TEXT) COLLATE RTRIM, (CASE WHEN '1866710825' THEN rt0.c4 END IN ()) FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT ((HEX(t1.c78))>=(TOTAL(t1.c80))), '-726227022', (((t1.c78)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((((t1.c0)/(rt0.c2))))), (((CASE WHEN v0.c0 THEN t1.c78 END, ((rt0.c0)!=(rt0.c3)), ((((v0.c0)OR(rt0.c2)))AND(v0.c0))))>=(((((rt0.c2))<((t1.c5))), ((t1.c0) BETWEEN (v0.c0) AND (rt0.c0)), ((t1.c78)AND(rt0.c4))))), ((MAX(rt0.c4)) ISNULL) FROM rt0;SELECT ALL AVG(((((4.38149416E8)AND(rt0.c2)))OR(rt0.c4)) COLLATE RTRIM) OVER () FROM rt0, t1, v0 WHERE (CAST(0.42328485203183974 COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT SUM((((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c2)))), ((((t1.c5) NOTNULL)) NOT NULL), (- (t1.c0)) FROM rt0, v0, t1 WHERE ((CAST(-1874426115 AS BLOB) IN ())) ORDER BY (t1.c78 IN (rt0.c2, rt0.c0)) COLLATE RTRIM, ((((((((rt0.c0)AND(rt0.c4)))OR(t1.c78)))OR((+ ('\%qz0')))))AND(((((rt0.c4)OR(t1.c5)))AND(x'5012')))) DESC  NULLS LAST, CAST(((t1.c0)&(x'')) AS NUMERIC) ASC; -- 0ms;
SELECT DISTINCT CASE WHEN ((((NULL)AND(rt0.c1)))OR(rt0.c0)) THEN t1.c78 COLLATE RTRIM WHEN ((((v0.c0)OR(rt0.c2)))AND(rt0.c1)) THEN INSTR(rt0.c4, rt0.c3) WHEN ((t1.c5) NOT BETWEEN (t1.c5) AND (rt0.c0)) THEN x'6d55' ELSE 9.20914271E8 END FROM rt0;SELECT ALL TOTAL((~ (t1.c0))), ((t1.c78) NOT BETWEEN ((NOT (t1.c80))) AND (((rt0.c4) IS FALSE))), rt0.c2 FROM t1 WHERE (((CASE WHEN x'0772829fcc83' THEN 0.8578607249465886 END)LIKE(((0.5692808075072818)GLOB('')))));SELECT DISTINCT CAST(((rt0.c3)<<(rt0.c1)) AS INTEGER) FROM v0, t1, rt0 LIMIT 1466145109; -- 0ms;
SELECT DISTINCT (((((((('690691122')AND(CASE WHEN NULL THEN t1.c0 END)))AND(HEX(DISTINCT rt0.c1))))AND(((t1.c0) IS FALSE))))OR(CASE WHEN t1.c78 THEN t1.c78 ELSE 543592350 END)), LTRIM(CASE t1.c5  WHEN rt0.c0 THEN t1.c80 ELSE t1.c5 END, COUNT(*)), NTH_VALUE((+ (((t1.c5) NOT BETWEEN ('%d') AND (t1.c5)))), ((rt0.c4 COLLATE NOCASE) ISNULL)) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM t1, rt0; -- 0ms;
SELECT ALL MIN((rt0.c0 IN ())) FROM v0, t1, rt0 WHERE (((((((x'2999')AND(0.9844604986724972)))OR((((0.21508952261934355)) NOT BETWEEN ((0.11293974588723377)) AND ((0.8586217024741876))))))AND((('') BETWEEN (-15363320) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)>>('Qd(JB7於N')))LIKE((rt0.c2 IN ()))) FROM rt0, v0, t1 GROUP BY (NOT (((0.07465774651063461)AND(rt0.c1)))), x'', (NOT ((~ (t1.c5)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c80) IS TRUE) THEN rt0.c3 ELSE rt0.c0 COLLATE RTRIM END FROM t1, v0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN ((0X1859fe91) IS TRUE) END);SELECT DISTINCT RANK() OVER () FROM v0, rt0 LIMIT 147561146; -- 1ms;
SELECT ((CAST(rt0.c3 AS NUMERIC))IS(CASE '-1616742446'  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 ELSE v0.c0 END)) FROM rt0, v0, t1 WHERE (-1.411186478E9); -- 0ms;
SELECT ALL (~ (((t1.c80)/(rt0.c4)))) FROM t1 WHERE (CAST(CASE WHEN '698615471' THEN x'' WHEN x'4df4' THEN 0.8479775469678188 WHEN '11738143' THEN 1.092954301E9 END AS TEXT)) UNION ALL SELECT DISTINCT RANK() OVER () FROM v0, rt0, t1 WHERE (CHANGES()) GROUP BY t1.c5, ((json_quote(v0.c0)) BETWEEN (((v0.c0) BETWEEN (rt0.c3) AND (t1.c5))) AND (((v0.c0)IS NOT(t1.c5)))), (((((((('')OR((+ (t1.c78)))))AND(((t1.c78)=(t1.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c0 END)))AND(((rt0.c4) BETWEEN (rt0.c0) AND (0.1753512800623509))));SELECT DISTINCT SUM((NOT (rt0.c1))) FROM v0, rt0, t1; -- 0ms;
SELECT DISTINCT (((((t1.c5))<((rt0.c1)))) IS FALSE) FROM t1;SELECT ((TOTAL(rt0.c2))IS((((t1.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))) FROM rt0, v0 WHERE (((((x'') BETWEEN ('-1859176289') AND (0.4737236106593212)))GLOB((((1.7976931348623157E308, '643715240', 'I5', '366170489', x''))==(('438149416', x'', 0Xffffffffef0733b1, 1336131218, NULL)))))) LIMIT -1393723734 OFFSET -416211518;SELECT ((UNLIKELY(t1.c80)) BETWEEN (0.20814955496318277) AND (CASE 3.5645961E7  WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END)) FROM t1 WHERE (CAST(highlight(x'', '', x'f7e0', NULL) AS TEXT));SELECT ((((CASE WHEN t1.c5 THEN rt0.c3 WHEN 300329135 THEN rt0.c0 WHEN rt0.c0 THEN t1.c78 ELSE t1.c80 END)AND(t1.c80)))OR(((v0.c0) IS TRUE))) FROM rt0, v0, t1 WHERE ((+ (((NULL) NOT BETWEEN ('-1583823738') AND ('1232782533'))))); -- 0ms;
SELECT ALL (((((((t1.c80))>=((rt0.c4))))AND(json_quote(rt0.c2))))OR(((v0.c0)|(t1.c5)))) FROM rt0 LIMIT -999609859;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((t1.c80) IS TRUE))) AND ((rt0.c3 COLLATE RTRIM))) FROM rt0, v0 WHERE (((CHAR(x'')) IS TRUE));SELECT ALL ((((v0.c0) IS FALSE)) NOT NULL) FROM v0 INNER JOIN t1 ON CASE ((t1.c78)IS(t1.c5))  WHEN NULL THEN (+ (t1.c0)) ELSE (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) END RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1) ISNULL) AS INTEGER) WHERE ((((~ (''))) IS TRUE));SELECT TOTAL(((((((((rt0.c2)AND(t1.c5)))OR(t1.c78)))OR(rt0.c0)))AND(t1.c78))) FROM t1, rt0 WHERE (((((((0.08161591309914362, NULL, NULL))<=(('1336131218', NULL, 0.5929861647367898)))))<(((((((((((((('-999609859')OR(-2.114863484E9)))OR(x'')))AND('-2008745390')))OR('0.37174135111527895')))OR('8V')))OR(x'')))))) ORDER BY ((GLOB(rt0.c0, rt0.c4)) IS FALSE) ASC; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) OVER (), MIN(MAX(rt0.c2, t1.c5)), COUNT(rt0.c4) FROM t1, rt0, v0 WHERE (LTRIM(((x'') NOT NULL))); -- 1ms;
SELECT ALL x'', 'I', CASE WHEN COUNT(rt0.c2) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)) END FROM t1 WHERE ('1605761397') UNION SELECT DISTINCT MAX(((rt0.c0)+(rt0.c4))), CASE WHEN rt0.c3 COLLATE NOCASE THEN MAX(t1.c5) WHEN CAST(rt0.c3 AS TEXT) THEN NULL WHEN ((((v0.c0)AND(rt0.c1)))OR(rt0.c1)) THEN COUNT(*) END, LOWER(DISTINCT ((rt0.c0) BETWEEN (t1.c80) AND (rt0.c2))) FROM rt0, t1 WHERE (CASE WHEN 0X82b03eb COLLATE NOCASE THEN ((x'8e4f2f0a') NOT NULL) WHEN 0.017127613324875335 COLLATE BINARY THEN 0.3883377806523731 WHEN (~ (x'')) THEN ((0xffffffffb4ffd361)|(NULL)) END) LIMIT 961334136;SELECT (((v0.c0)) BETWEEN ((CAST(t1.c80 AS REAL))) AND (('bnPHb^T>'))) FROM rt0, v0;SELECT DISTINCT ((GROUP_CONCAT(rt0.c2))!=(COUNT(rt0.c3))) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT (- (JULIANDAY(t1.c5, rt0.c2, t1.c80))) FROM rt0 LIMIT -1463905165;SELECT DISTINCT CASE WHEN ((t1.c80) IS FALSE) THEN CAST('qF' AS BLOB) WHEN ((((t1.c5)AND(t1.c80)))AND(rt0.c1)) THEN rt0.c4 WHEN v0.c0 COLLATE NOCASE THEN ((t1.c0)==(NULL)) WHEN ((rt0.c3)GLOB(t1.c80)) THEN rt0.c1 WHEN rt0.c0 COLLATE NOCASE THEN (((rt0.c1, rt0.c0, rt0.c3))<((t1.c78, rt0.c4, rt0.c4))) END FROM t1 WHERE (UNLIKELY(DISTINCT ((((0x8cb9aba)AND(x'')))AND('-1288135403'))));SELECT ALL t1.c5 FROM rt0, t1, v0 WHERE (0.9125009392370247); -- 0ms;
SELECT ((((t1.c5)>>(t1.c0)))/(((t1.c5) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) FROM v0, rt0, t1 WHERE (((((((((((x'')OR('-999609859')))AND('')))OR('-114288694')))AND(1.028798271E9))) BETWEEN ((((0.7525850663317383, x'', '')) BETWEEN ((x'', -1625640557, x'')) AND (('256526061', -1.055143567E9, NULL)))) AND ((- (NULL))))) ORDER BY LIKELIHOOD(DISTINCT (((rt0.c3))<=((rt0.c0))), 0.7267847118378328); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (('')) AND (((((rt0.c0)) BETWEEN ((t1.c78)) AND ((rt0.c0)))))), x'3e40', (- ((NOT (v0.c0)))) FROM rt0, t1, v0 GROUP BY ((((((v0.c0)AND(rt0.c4)))AND(rt0.c1)))&(((rt0.c1)IS NOT(rt0.c3)))) HAVING ((((((rt0.c4)/(rt0.c3)))OR(HEX(t1.c0))))OR(((((t1.c5)AND(t1.c0)))OR(v0.c0)))) ORDER BY (+ (((x'')&(rt0.c0)))), NULL LIMIT -2037859574; -- 0ms;
SELECT DISTINCT MAX(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) FROM t1, rt0, v0 WHERE (SQLITE_COMPILEOPTION_USED((((('-2037508082')OR(x'b126ecfa')))AND('197512237')))) GROUP BY (((((((((t1.c5)AND(rt0.c0)))AND(rt0.c1)))OR(t1.c5)))AND(rt0.c1)) IN ((((rt0.c2)) BETWEEN ((t1.c5)) AND ((t1.c78))))) ORDER BY TRIM(DISTINCT ((t1.c80) BETWEEN (6.5742824E7) AND (rt0.c3))); -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt0.c4 AS NUMERIC)) FROM v0 WHERE ((((((0.7343940651549059) ISNULL)))!=(((((NULL)) BETWEEN ((0.7036108717772191)) AND ((x'c25b77ce'))))))) GROUP BY (((((v0.c0))==((rt0.c0))))&('391502965')) HAVING CASE ((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN (~ (rt0.c0)) THEN (- (rt0.c0)) ELSE (((rt0.c1)) BETWEEN ((t1.c5)) AND ((NULL))) END;SELECT DISTINCT SQLITE_COMPILEOPTION_USED((x'b1ec' IN ())) FROM t1, rt0; -- 0ms;
SELECT DISTINCT (((((t1.c80))>=((t1.c80))))||(HEX(v0.c0))), ((((((rt0.c2)|(t1.c0)))OR(((v0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)))))OR((((t1.c0, t1.c0, v0.c0))==((t1.c0, rt0.c0, rt0.c0))))), CASE WHEN (((t1.c80)) BETWEEN ((t1.c0)) AND ((rt0.c3))) THEN '0.7175143676839272' ELSE MAX(rt0.c4, v0.c0) END FROM t1, v0, rt0 WHERE ((((('1141420336') NOT BETWEEN (NULL) AND (x'')))<(((x'')|(NULL))))) LIMIT 78221073 OFFSET -1794309494; -- 1ms;
SELECT DISTINCT -2.056704117E9 FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT LOWER(((rt0.c4)*(rt0.c3))) FROM t1, v0, rt0 WHERE (NULL) LIMIT 1901984141 OFFSET 961723748; -- 0ms;
SELECT ALL (((t1.c5)) BETWEEN ((QUOTE(t1.c78))) AND ((COUNT(rt0.c4)))) FROM rt0, t1, v0; -- 0ms;
SELECT (- ((NOT (rt0.c1)))) FROM v0, t1 WHERE ((((((x'', x'', 0.6827899222231093))<=((0x497ac4c5, NULL, '-167936831'))))||(CASE x''  WHEN '-858018609' THEN '1913406219' ELSE 0x3a4f913d END)));SELECT 0.25928050617111886 FROM v0, t1 WHERE (((((x'' IN (0xffffffffa1f4e20d, x''))))<=((('110962847' IN (0X1a1da128)))))); -- 0ms;
SELECT DISTINCT ((MIN(t1.c0))+(GROUP_CONCAT(t1.c80))) FROM t1, v0, rt0; -- 3ms;
SELECT ALL (((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c3)))) IS FALSE) FROM v0 WHERE (CASE ABS(DISTINCT '')  WHEN (('*') ISNULL) THEN (((NULL))<((0xffffffff83f245e3))) END) EXCEPT SELECT LOWER(DISTINCT rt0.c0 COLLATE RTRIM) FROM t1, v0, rt0 WHERE (((0.14926850180040174 COLLATE RTRIM)LIKE((('1109658314')>=('0.49219012927969996')))));SELECT DISTINCT CAST(t1.c80 COLLATE BINARY AS BLOB) FROM t1, rt0 WHERE (((((('-725454938', NULL, 0.45042110028733595, 0.03351902034581822, 0.9960160554967415, x'', 0.07724854149110272)) NOT BETWEEN (('147561146', -268445942, NULL, 0.005525756017383254, 0.4176359068708966, NULL, 0.45424585194027234)) AND ((NULL, x'', -2128983286, 0.3514618307163794, NULL, NULL, x'')))) NOT BETWEEN ((((('w')OR(NULL)))AND('eIQ'))) AND ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY NULL DESC  NULLS LAST), (+ (CASE v0.c0  WHEN rt0.c1 THEN rt0.c3 END)), (((t1.c80 IN ()))GLOB(CAST(t1.c5 AS TEXT))) FROM rt0, v0 WHERE (COALESCE(DISTINCT ((8.2184105E7)!=(0.3306762598743668)), CASE '1463503919'  WHEN 0.17392370436430227 THEN 0.6385130583044267 END, 'Ft1' COLLATE BINARY, ((x'') BETWEEN (707965552) AND (NULL))));SELECT DISTINCT COUNT(*) FILTER(WHERE ((CASE t1.c78  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)>>(((rt0.c3) ISNULL)))) OVER () FROM v0, t1, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1, v0; -- 0ms;
SELECT ALL (- (((rt0.c3) IS FALSE))) FROM v0, rt0, t1; -- 3ms;
SELECT DISTINCT AVG(CAST(v0.c0 AS BLOB)), ((((t1.c78)>=(rt0.c2)))<(CASE WHEN v0.c0 THEN t1.c78 WHEN v0.c0 THEN x'7666' WHEN rt0.c3 THEN rt0.c3 END)), TOTAL(CASE rt0.c4  WHEN v0.c0 THEN x'' WHEN NULL THEN -724962857 WHEN t1.c80 THEN t1.c78 ELSE v0.c0 END) OVER () FROM rt0, t1 WHERE (((((((((CAST('0.24540979643122263' AS INTEGER))AND(((NULL)>=(x'4fcc')))))AND(x'' COLLATE NOCASE)))OR((((('-1264317037')OR('/')))OR(0x3d52373f)))))AND(((x'b21e')<>(x'')))));SELECT ALL x'' FROM t1, v0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM v0; -- 0ms;
SELECT DISTINCT t1.c0 FROM rt0, v0 GROUP BY ((t1.c80)<(rt0.c4)) COLLATE BINARY;SELECT DISTINCT rt0.c3, CASE WHEN x'' THEN t1.c5 COLLATE RTRIM WHEN '洇z' THEN '205259853' WHEN t1.c5 THEN json(rt0.c3) ELSE ((t1.c80)OR(t1.c0)) END, ((SUM(t1.c78))<<(((((((((t1.c5)AND(rt0.c4)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c4)))) FROM v0 WHERE (CAST(('' IN ()) AS INTEGER)) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)>=(((rt0.c4) IS FALSE))) ASC, ((json_extract(t1.c5, x'7ccb')) ISNULL) DESC  NULLS FIRST;SELECT DISTINCT (('') NOT NULL) FROM rt0, v0, t1; -- 0ms;
SELECT (((t1.c80) ISNULL) IN ()) FROM rt0, t1; -- 0ms;
SELECT t1.c0 FROM rt0, t1 WHERE (NULL); -- 0ms;
SELECT ((rt0.c4)/(x'3d5d')) COLLATE BINARY FROM t1, rt0, v0 LIMIT -565629230; -- 0ms;
SELECT DISTINCT ((((v0.c0)OR((rt0.c1 IN (rt0.c2)))))OR(((rt0.c4) BETWEEN (1028798271) AND (rt0.c4)))), CAST(v0.c0 COLLATE NOCASE AS INTEGER), ((((rt0.c4)/(t1.c0)))*(((t1.c80) NOT BETWEEN (v0.c0) AND (rt0.c2)))) FROM rt0;SELECT ALL ((CAST(t1.c0 AS NUMERIC)) BETWEEN ((v0.c0 IN (rt0.c3))) AND ((rt0.c3 IN ()))) FROM rt0, v0, t1 WHERE (((((x'')AND(CAST('' AS NUMERIC))))AND(((x'c617')|(x''))))); -- 0ms;
SELECT DISTINCT -148148440, (((CASE t1.c78  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN t1.c80 WHEN t1.c78 THEN v0.c0 WHEN rt0.c4 THEN 0.8469284360625031 ELSE v0.c0 END))==((((rt0.c4)*(t1.c0))))), ((CAST(t1.c78 AS TEXT))<<((((t1.c80)) NOT BETWEEN ((t1.c5)) AND ((v0.c0))))) FROM v0, rt0, t1 WHERE (((0.49146934879468474)IS NOT(' 5Tn[G')) COLLATE NOCASE) LIMIT -927209668 OFFSET -1314955823; -- 0ms;
SELECT DISTINCT ((HEX(t1.c80))!=(t1.c78)), AVG((rt0.c1 IN (rt0.c0, rt0.c1))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), ((GROUP_CONCAT(rt0.c1)) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (rt0.c1 COLLATE NOCASE)), ((((rt0.c1)/(t1.c80))) NOT BETWEEN (json_array_length(rt0.c0)) AND ((rt0.c2 IN (rt0.c1, rt0.c2)))), CAST(SUM(t1.c0) AS BLOB) FROM rt0, v0, t1; -- 0ms;
SELECT DISTINCT CAST((- (t1.c0)) AS INTEGER), ABS(''), '-719982474' FROM t1; -- 0ms;
SELECT ALL ((((t1.c78)OR(t1.c80)))||(rt0.c3)) FROM rt0, v0 WHERE (CASE (('') NOT BETWEEN ('Kv()') AND (NULL))  WHEN ((NULL)>>(0.18007876433289427)) THEN (0.4709202601409932 IN ()) ELSE ((NULL)<=(x'5d08')) END);SELECT (((((rt0.c1)AND(rt0.c2)))AND(t1.c0)) IN ()) FROM v0, t1; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM v0 WHERE (((UPPER('')) IS TRUE)) GROUP BY ((((''))<=((v0.c0))) IN ('1659821887')) HAVING (('-90378214') NOT NULL) ORDER BY TYPEOF(v0.c0 COLLATE NOCASE), CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((t1.c80))) THEN rt0.c4 END DESC, '0.6818439293737679' DESC;SELECT DISTINCT CASE LOWER(t1.c78)  WHEN ((t1.c0)LIKE(rt0.c2)) THEN ((t1.c0) BETWEEN ('<CH') AND (rt0.c4)) END FROM t1, v0, rt0 WHERE ((('n)') NOT BETWEEN (-495899726) AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (+ (rt0.c3)) FROM v0 WHERE (((((NULL) BETWEEN (9223372036854775807) AND (NULL)))IS NOT(((0.0620898269402157) ISNULL)))) GROUP BY CASE WHEN v0.c0 THEN rt0.c1 END COLLATE BINARY HAVING t1.c5;SELECT DISTINCT ((rt0.c2 IN ()) IN ()) FROM rt0, v0, t1; -- 0ms;
SELECT t1.c80 FROM rt0, v0;SELECT ALL IFNULL(DISTINCT rt0.c1, ((((t1.c0)OR(NULL)))AND(0xffffffffe3344305))), ((((CHANGES())OR(((((t1.c78)AND(v0.c0)))OR(rt0.c2)))))AND((rt0.c4 IN ()))), NULLIF((- (rt0.c1)), ']&z最Y') FROM t1, v0, rt0 WHERE ((((('238424802') NOT BETWEEN (0.22411033663351598) AND ('1956166342'))) IS FALSE)) GROUP BY ((rt0.c4) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((t1.c78))>((rt0.c0))))); -- 0ms;
SELECT ALL ((rt0.c2)>=(((t1.c80) IS FALSE))), DATE(MIN(t1.c5), CASE t1.c78  WHEN 0.9457577466960917 THEN t1.c80 WHEN rt0.c2 THEN rt0.c1 WHEN t1.c80 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c2 IN ())), ((((((((CASE WHEN t1.c78 THEN t1.c78 WHEN t1.c80 THEN rt0.c3 WHEN v0.c0 THEN rt0.c4 END)OR((~ (0.995499687723759)))))OR(SQLITE_SOURCE_ID())))OR((~ (t1.c5)))))AND(v0.c0 COLLATE RTRIM)) FROM v0, rt0 WHERE ((CASE '-1617812365'  WHEN '-61224449' THEN -9.99609859E8 WHEN x'afec' THEN x'93dc' WHEN 0.45898318482509404 THEN 'u' END IN ()));SELECT ((CAST(t1.c0 AS INTEGER)) ISNULL), ((NULL)<<(t1.c5)) COLLATE NOCASE, CAST(((((v0.c0)OR(rt0.c1)))AND(rt0.c0)) AS INTEGER) FROM v0, rt0 WHERE ((((x'8286' IN ())) NOT BETWEEN (COALESCE(NULL, 0.9400722646485731, 0.6259345827530318, '-90378214')) AND (((((0.4950969534431392)AND(0.5548517042037178)))OR(0.9263711929795235)))));SELECT DISTINCT (((rt0.c2) NOTNULL) IN ()), LOWER(rt0.c2) COLLATE RTRIM, (((t1.c0)GLOB(t1.c78)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (- (t1.c80)) COLLATE RTRIM FROM rt0 WHERE (((('678607909' COLLATE BINARY))<>(((((NULL)) NOT BETWEEN ((x'e4ee')) AND (('1361705055')))))));SELECT ALL rt0.c2 FROM t1, rt0 WHERE ((+ (((x'758e7244')>(x''))))) LIMIT -21165684; -- 0ms;
SELECT DISTINCT (((rt0.c0))>=((((rt0.c3)<=(rt0.c2))))) FROM rt0, t1, v0 WHERE ((('1141420336')/(0.8590412389332956)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((v0.c0 IN ())) IS FALSE) FROM v0 WHERE (LTRIM(CAST(4.38149416E8 AS INTEGER), '0.8479775469678188' COLLATE BINARY)) GROUP BY STRFTIME(((rt0.c0)|(rt0.c2)), CAST(rt0.c1 AS BLOB), t1.c80);SELECT ALL ((((((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND(COUNT(*))))AND(rt0.c2)))AND(rt0.c3)))AND(AVG(rt0.c4))))AND(((NULL) NOT BETWEEN (t1.c0) AND (rt0.c1)))))AND((rt0.c1 IN ()))) FROM rt0, t1, v0; -- 0ms;
SELECT ALL CAST(rt0.c2 AS INTEGER) FROM v0, rt0 WHERE ((((((('2037519103')OR(NULL)))AND(0xffffffffac20cec7))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((v0.c0)OR(t1.c0)))AND(t1.c5))) BETWEEN (((rt0.c0) IS TRUE)) AND (((t1.c5) IS TRUE))), GROUP_CONCAT(GROUP_CONCAT(CASE t1.c5  WHEN t1.c80 THEN v0.c0 WHEN t1.c5 THEN rt0.c0 WHEN t1.c5 THEN NULL ELSE rt0.c2 END)), LAG((((0.985122792396098, t1.c80, t1.c5 COLLATE RTRIM))==(((+ (t1.c0)), ((t1.c78) BETWEEN (t1.c0) AND ('-2078252626')), ((t1.c80)-(t1.c80))))), CASE WHEN ((t1.c80) NOT BETWEEN (v0.c0) AND (t1.c80)) THEN ((t1.c80) NOT BETWEEN (t1.c5) AND (t1.c80)) WHEN ((((t1.c80)OR(t1.c80)))AND(t1.c80)) THEN SQLITE_COMPILEOPTION_GET(t1.c0) WHEN CASE WHEN t1.c78 THEN t1.c5 END THEN CASE WHEN t1.c80 THEN t1.c78 ELSE t1.c0 END END, ((((SQLITE_VERSION())OR(((t1.c78) NOT BETWEEN (t1.c78) AND (v0.c0)))))AND(CAST(t1.c78 AS TEXT)))) OVER () FROM v0, t1;SELECT ((((rt0.c3) IS FALSE)) NOTNULL), AVG((((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) OVER (), ((MAX(v0.c0))||(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))), COUNT(*), CASE WHEN ((rt0.c2) NOT NULL) THEN ABS(rt0.c4) WHEN ((t1.c5) BETWEEN (rt0.c3) AND (t1.c5)) THEN ((t1.c78) BETWEEN (-1672072185) AND (t1.c0)) WHEN ((rt0.c4)IS NOT(t1.c78)) THEN NULL WHEN (- (rt0.c4)) THEN ((((t1.c78)AND(v0.c0)))AND(rt0.c2)) WHEN CAST(v0.c0 AS BLOB) THEN AVG(t1.c0) ELSE ((t1.c80) BETWEEN (rt0.c1) AND ('QⰬ')) END FROM t1, v0, rt0; -- 0ms;
SELECT ALL (((rt0.c0)<(rt0.c0)) IN ()) FROM v0, t1, rt0 WHERE ((CASE '\nq(紹v'  WHEN 0.4100456602547655 THEN '-1331947867' WHEN 0.04016838436177772 THEN 'S	' WHEN '' THEN 0.8797409192170319 ELSE 0.05798609244185682 END IN ())); -- 0ms;
SELECT DISTINCT TIME(((v0.c0)>(rt0.c2)), CASE t1.c5  WHEN v0.c0 THEN rt0.c1 END, ((rt0.c4) ISNULL)) FROM v0, rt0 ORDER BY CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END COLLATE NOCASE DESC  NULLS FIRST LIMIT 1530091419;SELECT DISTINCT ((((rt0.c1)OR((((t1.c5))<((rt0.c0))))))OR(t1.c0)), ((((t1.c78 IN ()), (('-1870372724')<=(rt0.c4)), '1336131218', ((rt0.c1) BETWEEN (t1.c5) AND (rt0.c2)), (t1.c80 IN ())))>=((MIN(rt0.c4), ((v0.c0) NOT BETWEEN (rt0.c1) AND (t1.c80)), ((rt0.c2) NOT NULL), rt0.c4 COLLATE RTRIM, CASE WHEN rt0.c0 THEN t1.c80 ELSE rt0.c3 END))), CAST(x'7435' AS REAL) FROM rt0, t1 WHERE (((0xffffffffca9236e8 IN ()) IN ()));SELECT ALL (NOT ((- (rt0.c4)))), 0.37174135111527895, (((rt0.c3)) NOT BETWEEN ((t1.c0)) AND (((+ (rt0.c1))))) FROM rt0, t1, v0; -- 0ms;
SELECT COUNT(*) FROM t1; -- 0ms;
SELECT (NOT (((t1.c80) BETWEEN (t1.c5) AND ('')))) FROM rt0, t1; -- 0ms;
SELECT IFNULL(((t1.c5)&(NULL)), ((v0.c0)<=('H '))), ((x'') BETWEEN (((v0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0))) AND ((v0.c0 IN ()))), ((SUM(t1.c80)) ISNULL) FROM rt0, v0 ORDER BY (((rt0.c3 IN (rt0.c0, rt0.c1))) IS FALSE) ASC;SELECT DISTINCT LAST_VALUE(x'161e') OVER () FROM v0 WHERE ((IFNULL(NULL, 1684578693) IN (((NULL) NOT BETWEEN (0.9811781288403686) AND (-3.92754991E8))))); -- 0ms;
SELECT DISTINCT (+ (x'')), COUNT(*) OVER ( ORDER BY ((((rt0.c1)!=(''))) IS TRUE) ASC, CAST(v0.c0 AS INTEGER) COLLATE RTRIM DESC  NULLS FIRST), CAST(((t1.c80)+(t1.c80)) AS BLOB) FROM t1, rt0, v0 WHERE (CAST(CASE WHEN NULL THEN 1.47561146E8 WHEN '-782153335' THEN 0.7726114945699016 WHEN 'P3' THEN '' END AS BLOB)); -- 0ms;
SELECT TRIM(DISTINCT ((((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c3)))AND(t1.c5)))AND(rt0.c1)))AND(0.5119171570687737)), ((t1.c80)IS NOT(rt0.c3))) FROM v0;SELECT MIN(((rt0.c1)IS NOT(rt0.c2))) FROM rt0, v0; -- 0ms;
SELECT DISTINCT '1133241553' FROM rt0, t1 LIMIT 1501858179 OFFSET -845809746; -- 0ms;
SELECT DISTINCT ((((v0.c0)&(t1.c5)))<=(((t1.c0)LIKE(-2114863484)))) FROM t1, v0, rt0 LIMIT 1133241553 OFFSET 633237493; -- 0ms;
SELECT ((((((t1.c78)AND(t1.c5)))AND(x'f47f')))OR(((((t1.c5)OR(v0.c0)))OR('-1264317037')))), ((CAST(rt0.c2 AS TEXT))GLOB(UNLIKELY(v0.c0))), (((((rt0.c2))!=((t1.c5)))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((((rt0.c3))<=((rt0.c3))))) FROM v0, rt0 WHERE (((((x'') NOT BETWEEN (NULL) AND (NULL))) NOTNULL));SELECT DISTINCT ((CAST(t1.c78 AS REAL)) BETWEEN (CASE t1.c78  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END) AND (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))), (((UNLIKELY(t1.c5)))!=((((t1.c80)!=(t1.c5))))), v0.c0 COLLATE RTRIM FROM t1 WHERE (NULLIF(DISTINCT (('!/')|(x'')), (((('1198136542')AND(8.68706048E8)))AND(x''))));SELECT DISTINCT AVG(CAST(rt0.c3 AS REAL)) FILTER(WHERE CASE ((rt0.c3)%(NULL))  WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c2)<>(t1.c78)) WHEN ((t1.c78)IS NOT(t1.c78)) THEN ((((((((x'')OR(rt0.c0)))AND(rt0.c2)))AND(t1.c5)))OR(rt0.c2)) WHEN ((rt0.c3) ISNULL) THEN ((rt0.c2)GLOB(rt0.c2)) ELSE (rt0.c1 IN ()) END) OVER (), CASE WHEN ((((rt0.c2)OR(rt0.c0)))AND(t1.c5)) THEN ((((rt0.c4)OR(NULL)))OR(0.4566781903702777)) WHEN (+ ('-1768368869')) THEN ((rt0.c2) IS TRUE) WHEN COUNT(*) THEN rt0.c4 COLLATE BINARY ELSE t1.c78 END, ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)))IS((((t1.c5))<((rt0.c3))))) FROM rt0, v0, t1; -- 0ms;
SELECT MIN(0x21fea09), COUNT(((0.35128563450175365) NOT BETWEEN (x'') AND (t1.c5))) OVER (), ((((((rt0.c2)OR(rt0.c1)))OR(t1.c78))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c4 COLLATE BINARY)), (~ ((0X37c1e90e IN ()))), NULL COLLATE NOCASE FROM rt0, v0, t1; -- 0ms;
SELECT ALL CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT) FROM t1, v0;SELECT DISTINCT 0xffffffffdfc9d7c8 COLLATE NOCASE, CASE t1.c0  WHEN ((t1.c78)<>(rt0.c3)) THEN (((t1.c5))<((rt0.c0))) WHEN ((v0.c0) IS FALSE) THEN ((rt0.c4) NOT NULL) WHEN ((rt0.c4)LIKE(rt0.c3)) THEN CASE WHEN '' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN t1.c80 THEN '' END END, 0.19394254951942513 FROM t1 WHERE (CAST(x'' COLLATE RTRIM AS REAL)) LIMIT 707965552;SELECT ALL CASE WHEN ((rt0.c2)||(rt0.c3)) THEN ((rt0.c3) NOTNULL) ELSE COUNT(v0.c0) END, LEAD(UNICODE(((v0.c0)<(v0.c0))), (+ (((v0.c0)&(v0.c0)))), ((NULL) ISNULL)) OVER (), ((((COUNT(rt0.c0))OR(((rt0.c3) BETWEEN (t1.c80) AND (rt0.c2)))))AND((('I5')>(rt0.c1)))) FROM v0 WHERE (CASE TOTAL_CHANGES()  WHEN (+ (NULL)) THEN CASE '-868831757'  WHEN x'' THEN '-598768044' ELSE '1508423301' END END);SELECT DISTINCT (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0))))!=((((t1.c0)IS NOT(rt0.c2))))) FROM v0 WHERE ((((NULL, x'', 0Xffffffffdacace72)) NOT BETWEEN ((CASE '7>셱~o'  WHEN '1249251970' THEN NULL ELSE NULL END, MAX('	⾋h8.g', x''), (+ (x'')))) AND (((4.4913951E8 IN ()), (('iN') NOT BETWEEN ('2062293424') AND (0.15564990547989832)), ((NULL) ISNULL)))));SELECT ALL x'47d5', (~ ((t1.c0 IN ()))), CASE ((t1.c5)LIKE(rt0.c2))  WHEN (0.5664025926707982 IN (rt0.c2, t1.c5)) THEN ((t1.c5)=(t1.c5)) ELSE ((rt0.c3) BETWEEN (0.6285743470451826) AND (v0.c0)) END FROM v0, rt0;SELECT ((((t1.c5)OR(rt0.c0 COLLATE NOCASE)))OR(TRIM(rt0.c0))) FROM rt0 WHERE (CAST(COALESCE(NULL, x'a274') AS BLOB)) GROUP BY CASE CASE WHEN t1.c0 THEN 0.4034091888795416 WHEN rt0.c3 THEN 'dhgfyHGH~' WHEN t1.c5 THEN rt0.c2 END  WHEN ((rt0.c2) IS TRUE) THEN v0.c0 COLLATE NOCASE ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((1592261504))) END ORDER BY (('sf') ISNULL) ASC  NULLS FIRST, (+ (((rt0.c2) NOTNULL))) DESC  NULLS FIRST;SELECT CASE WHEN (t1.c78 IN ()) THEN ((t1.c80)>(rt0.c3)) ELSE CAST(rt0.c1 AS BLOB) END FROM v0;SELECT ALL ((MIN(rt0.c3)) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (CAST(t1.c80 AS TEXT))), ((~ (rt0.c3)) IN ()), GROUP_CONCAT(CAST(rt0.c4 AS TEXT) COLLATE NOCASE) OVER () FROM t1, rt0 WHERE (MIN(((0Xfffffffff72b6f28) NOT BETWEEN (1141420336) AND (NULL)), 0.9822247288245746 COLLATE RTRIM));SELECT DISTINCT ((t1.c5)<=(((t1.c80)&(t1.c78)))), (((((rt0.c4))<=((rt0.c2))))<(COUNT(0.809960499025816))), NTH_VALUE(x'', CAST(LIKE(rt0.c0, rt0.c2) AS INTEGER)) OVER () FROM rt0 WHERE (x'1e9d');SELECT DISTINCT x'' FROM t1 WHERE (((x'')+(0.17475403786107468 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))IS NOT('1232782533')) FROM t1, rt0 WHERE (((0xffffffff852aac8f)*(((x'')OR(NULL))))); -- 0ms;
SELECT ((((rt0.c1) BETWEEN (t1.c80) AND (t1.c0))) NOT NULL) FROM rt0, v0, t1 WHERE (((((((((((((NULL)OR(('878914604' IN ()))))OR(((((NULL)OR(x'')))OR(1.133241553E9)))))AND(LENGTH(0.8633165142041832))))AND((('')>>('\no')))))AND(ABS(x''))))OR(((x'')<>(0.6492484554631055))))) ORDER BY rt0.c3 COLLATE BINARY  NULLS LAST, ((((rt0.c4) ISNULL)) NOTNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((x'84ca' IN (v0.c0)))IS NOT(LAST_INSERT_ROWID())) FROM rt0 WHERE ((NOT ((((('-840330080')OR('0.49846965980938795')))OR(0.4978608351881384)))));SELECT DISTINCT ((((v0.c0) NOT NULL))&((~ (t1.c5)))) FROM t1 WHERE ((((1.030521947E9 IN ())) NOTNULL));SELECT ALL json_array_length(t1.c78 COLLATE BINARY) FROM v0, t1; -- 0ms;
SELECT (~ (((rt0.c1)LIKE(rt0.c4)))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT ((((v0.c0) BETWEEN (t1.c80) AND (t1.c80))) IS TRUE), CAST(((t1.c80) BETWEEN (t1.c78) AND (t1.c5)) AS BLOB), ((v0.c0 COLLATE NOCASE) NOTNULL) FROM rt0;SELECT DISTINCT CASE WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c5))) THEN (((0.36714175924863324)) BETWEEN ((t1.c0)) AND ((rt0.c1))) END FROM t1, v0, rt0 WHERE (((TRIM('D/', NULL))>((('-807727054') BETWEEN ('-2056704117') AND ('Pb'))))); -- 0ms;
SELECT ((((((rt0.c2)OR(t1.c5)))OR(0xffffffff8029e409)))!=(rt0.c4 COLLATE RTRIM)) FROM t1, rt0 LIMIT 929523408 OFFSET -9223372036854775808; -- 0ms;
SELECT DISTINCT (+ ((((t1.c0, rt0.c0, x'')) BETWEEN ((v0.c0, rt0.c0, rt0.c1)) AND ((v0.c0, t1.c5, rt0.c1))))), ((t1.c78) IS TRUE), (- (MAX(rt0.c2))) FROM rt0, t1, v0 WHERE (((((((((((0.7851792145680007)>>(x'')))OR((NULL IN ()))))AND(x'e51d' COLLATE RTRIM)))OR(((0.5821754995630506) NOT NULL))))OR((('v콿?O''4') NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT (t1.c78 IN ()) COLLATE NOCASE, CAST(((t1.c5) ISNULL) AS INTEGER), UPPER(x'320c') FROM v0 ORDER BY (((((rt0.c1)AND(rt0.c0))))=((0.29699492031964736)))  NULLS FIRST;SELECT ALL CAST((((t1.c5, t1.c80, x'4971'))<=((t1.c0, rt0.c2, v0.c0))) AS INTEGER) FROM rt0, v0;SELECT DISTINCT CAST(((rt0.c3) NOTNULL) AS NUMERIC) FROM rt0, t1 WHERE ((CASE WHEN NULL THEN NULL END IN ())); -- 0ms;
SELECT ALL (((((((((0.20144039588045215 IN ()))OR(CAST(rt0.c4 AS INTEGER))))OR((rt0.c0 IN (v0.c0, rt0.c0)))))AND((((rt0.c4))<((t1.c80))))))AND(((t1.c0) NOT BETWEEN (rt0.c3) AND (t1.c80)))), ((rt0.c3 COLLATE BINARY)>>(rt0.c3)), ((HEX(DISTINCT rt0.c4)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))) AND (rt0.c4 COLLATE BINARY)) FROM t1, rt0, v0 WHERE (CAST((((NULL))<((0.39585128034974204))) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS NOT(rt0.c1))) BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (NULL COLLATE RTRIM)) FROM t1;SELECT DISTINCT t1.c5 FROM rt0, t1, v0 LIMIT 358123541 OFFSET 771882751; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY ((NULLIF(DISTINCT t1.c80, t1.c78))IS(rt0.c1))  NULLS LAST) FROM rt0, v0, t1 WHERE ((((('r{8PJc}\r,So')AND('950474846')))OR('')) COLLATE RTRIM) ORDER BY (((((t1.c80)) BETWEEN ((t1.c78)) AND ((t1.c78))))*(((rt0.c3)IS(t1.c80)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (+ ((t1.c78 IN (rt0.c3)))) FROM rt0, v0;SELECT DISTINCT rt0.c4 FROM v0 ORDER BY ((((((((rt0.c4)OR(rt0.c1)))OR(t1.c5)))AND(((NULL)<<(rt0.c3)))))OR(((x'91d9') NOT BETWEEN (t1.c0) AND (rt0.c0)))) ASC;SELECT DISTINCT MIN(t1.c5) COLLATE BINARY FROM v0 NATURAL JOIN t1 WHERE (((((0.6135679056558171)-('0.0')))IS NOT((((NULL))<=(('-1481676031')))))); -- 0ms;
SELECT ALL ((((((t1.c5)AND(t1.c78)))OR(1935553144)))LIKE((((t1.c80))=((rt0.c3))))) FROM rt0 LIMIT -777849567 OFFSET -1258302623;SELECT ALL (((t1.c0 IN ())) NOTNULL) FROM t1, v0, rt0 GROUP BY rt0.c4; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c3))) ISNULL) FROM t1;SELECT DISTINCT CAST(((-7.77849567E8) BETWEEN (rt0.c1) AND (t1.c78)) AS INTEGER) FROM t1;SELECT DISTINCT NTILE(rt0.c3) OVER (), (x'' IN ()), DENSE_RANK() OVER ( PARTITION BY CASE (t1.c80 IN ())  WHEN SQLITE_COMPILEOPTION_USED(t1.c5) THEN ((t1.c0)&(0.07550805024121321)) ELSE '' END, ((((rt0.c4) NOTNULL)) IS FALSE) RANGE ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c4)))GLOB(t1.c0)) PRECEDING EXCLUDE NO OTHERS), ((rt0.c4)<(t1.c80)) COLLATE BINARY, LAG(((((((((((t1.c5)AND(rt0.c2)))OR(t1.c0)))AND(rt0.c3)))OR(t1.c5)))IS NOT(((rt0.c0) NOT BETWEEN ('-1839372868') AND (rt0.c3)))), ((((((rt0.c4)&(rt0.c2)))OR(((rt0.c2) BETWEEN (t1.c5) AND (t1.c78)))))OR(((v0.c0) IS FALSE))), (((LENGTH('Nꌭ\r黴CQ<')))!=((CAST(0x7fafc48e AS REAL))))) OVER () FROM v0, rt0, t1;SELECT DISTINCT ABS(COUNT(*)), ((((rt0.c4))<((t1.c5))) IN ()), ((t1.c5)LIKE(CAST(t1.c0 AS BLOB))) FROM t1; -- 0ms;
SELECT DISTINCT v0.c0, (((t1.c78)) NOT BETWEEN ((CAST(v0.c0 AS BLOB))) AND (((((rt0.c3, t1.c80, t1.c0))>((rt0.c3, t1.c0, rt0.c0)))))), CAST(LIKELY(DISTINCT v0.c0) AS NUMERIC) FROM v0, t1, rt0; -- 0ms;
SELECT (+ (CASE t1.c78  WHEN t1.c78 THEN t1.c78 ELSE rt0.c3 END)) FROM t1, rt0, v0 WHERE (CAST(1.184036623E9 AS INTEGER)); -- 0ms;
SELECT DISTINCT QUOTE((((t1.c80)) BETWEEN ((rt0.c2)) AND (('_XZ[')))) FROM t1, rt0, v0; -- 0ms;
SELECT CAST(MAX(rt0.c3) AS REAL) FROM t1, rt0 WHERE ('-284740687'); -- 0ms;
SELECT DISTINCT AVG(((t1.c0)*(t1.c0))) OVER (), SUM(x'ccdcbcc0') COLLATE NOCASE, TOTAL(((t1.c80) NOT BETWEEN (t1.c78) AND (t1.c80))) OVER ( ORDER BY rt0.c0) FROM v0;SELECT DISTINCT x'', ((rt0.c0 IN (t1.c78)) IN ()), ((((COUNT(*))AND(((((t1.c5)OR(rt0.c1)))AND(rt0.c4)))))AND(((((rt0.c4)OR(rt0.c1)))AND(rt0.c4)))) FROM v0 WHERE (CAST(((x'') IS FALSE) AS NUMERIC));SELECT t1.c80 FROM rt0, t1 WHERE ((((+ (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT x'5a17' FROM v0 GROUP BY (~ (t1.c78)) HAVING CAST(0x1 AS REAL);SELECT DISTINCT CASE WHEN ((rt0.c3)-(t1.c80)) THEN CASE WHEN rt0.c1 THEN v0.c0 END WHEN CASE rt0.c3  WHEN t1.c78 THEN rt0.c2 END THEN ((((t1.c0)AND(t1.c0)))OR(rt0.c4)) WHEN ((((rt0.c1)AND(0.9969591711889685)))OR(rt0.c4)) THEN ((rt0.c3) ISNULL) WHEN t1.c78 COLLATE NOCASE THEN ((rt0.c4) BETWEEN (t1.c78) AND (t1.c0)) WHEN (t1.c80 IN (rt0.c3)) THEN MIN(t1.c78) END, LIKELIHOOD(DISTINCT rt0.c3, 0.9165477906557736), ((rt0.c2) NOT NULL) FROM t1 WHERE ((((x'')) NOT BETWEEN (((((('')OR('|hZ&AJ')))AND('688125427')))) AND ((((NULL)-(x''))))));SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))) AND ((rt0.c2 COLLATE BINARY))), ((((t1.c78) BETWEEN (rt0.c2) AND (rt0.c3)))%(COUNT(*))), ((((rt0.c0) ISNULL)) NOT NULL) FROM t1, v0 WHERE (((LTRIM(x''))<<((('229948599')*('y㺽	C錶'))))) LIMIT -181402577;SELECT DISTINCT v0.c0 FROM rt0, v0, t1; -- 1ms;
SELECT DISTINCT (AVG(rt0.c0) IN (((rt0.c2) ISNULL))) FROM v0, t1, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(COUNT(*)) FROM v0, rt0;SELECT ALL (((v0.c0) IS TRUE) IN ()) FROM v0, t1, rt0; -- 0ms;
SELECT ALL LAST_VALUE(((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c1)>>(rt0.c3))) AND ('-500369163'))) OVER (), COUNT(*) OVER (), CAST(((((rt0.c4)AND(v0.c0)))OR(rt0.c1)) AS REAL) FROM t1, rt0;SELECT ALL (NOT (COUNT(*))) FROM rt0; -- 0ms;
SELECT DISTINCT MIN(t1.c0), CASE ((rt0.c4)LIKE(rt0.c0))  WHEN rt0.c0 COLLATE RTRIM THEN CASE WHEN 0xffffffffdacace72 THEN t1.c5 WHEN v0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c1 END ELSE CAST(rt0.c4 AS BLOB) END, v0.c0 FROM rt0, v0, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (t1.c80))) ISNULL) FROM rt0, t1, v0 WHERE (((((('1321792127')) BETWEEN ((x'')) AND (('䬻\rg澃i>k﻿u'))))IS(CASE WHEN 0.7945287227498912 THEN x'' END))) LIMIT -570595163; -- 0ms;
SELECT ((rt0.c3)>>(INSTR(rt0.c2, t1.c78))) FROM t1, v0;SELECT ALL ((-1169447871)&(rt0.c0 COLLATE NOCASE)), '', MIN(v0.c0) FROM t1, rt0 WHERE ((~ ('#NRg\8q	w' COLLATE RTRIM))) ORDER BY ((x'')||(rt0.c2)), (((t1.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((t1.c78 IN (rt0.c3, t1.c0))))) ASC, (((rt0.c3)) NOT BETWEEN ((((((NULL)OR(rt0.c3)))AND(rt0.c0)))) AND ((((t1.c0)/(t1.c0)))))  NULLS FIRST;SELECT ((((x'')AND(CAST(rt0.c4 AS REAL))))AND((((t1.c0, NULL, t1.c5)) BETWEEN ((rt0.c4, rt0.c4, v0.c0)) AND ((t1.c5, rt0.c4, rt0.c0))))) FROM rt0;SELECT CASE WHEN t1.c5 COLLATE NOCASE THEN ((t1.c78) BETWEEN (rt0.c0) AND (rt0.c4)) ELSE ((t1.c78) ISNULL) END FROM t1;SELECT DISTINCT t1.c0 FROM t1, rt0 WHERE ((('0.9793148607913282' COLLATE RTRIM)IS NOT(((NULL)>(0.2682148914794631))))); -- 0ms;
SELECT DISTINCT ((0.6137541130830627) NOTNULL) FROM v0, t1 WHERE (((NULL)|((('')>>(0.7821532494970218))))); -- 0ms;
SELECT CASE t1.c80 COLLATE NOCASE  WHEN json_extract(rt0.c3, t1.c0, t1.c0, t1.c78, rt0.c4, rt0.c4) THEN json_array_length(t1.c78) WHEN CASE rt0.c3  WHEN t1.c78 THEN rt0.c3 END THEN 0.5098165997965146 WHEN ((rt0.c3)<<(t1.c5)) THEN ((t1.c5)-(rt0.c4)) END FROM t1, v0 GROUP BY NULLIF(x'', (((t1.c5, rt0.c1, rt0.c2)) NOT BETWEEN ((t1.c5, t1.c78, rt0.c3)) AND ((rt0.c1, rt0.c3, v0.c0))));SELECT ALL ((AVG(')%!7O~meS'))<=('|෫3C')), (((t1.c80)) NOT BETWEEN ((LIKELIHOOD(t1.c80, 0.8288400924447397))) AND ((rt0.c4 COLLATE BINARY))), NULLIF(DISTINCT GROUP_CONCAT(rt0.c3), (((rt0.c3))>=((t1.c78)))) FROM v0, rt0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c80)<>(rt0.c4)))||(t1.c5 COLLATE NOCASE)), ((((0X344b65f6)OR((- (0xffffffffb55c18bc)))))AND(v0.c0)), MIN(((rt0.c3)<<(rt0.c4)), (NOT (t1.c0)), AVG(2137036387), (rt0.c3 IN (''))) FROM v0, rt0, t1; -- 1ms;
SELECT x'' FROM v0, t1, rt0 LIMIT 1479540467 OFFSET -1336379206; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT rt0.c0, rt0.c1)) NOT BETWEEN (((t1.c0) BETWEEN (rt0.c0) AND (t1.c0))) AND ((NOT (rt0.c4)))), ((CAST(rt0.c1 AS REAL)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END)), CASE ((rt0.c1)+(t1.c80))  WHEN ((rt0.c0)>(v0.c0)) THEN (((rt0.c1))<((rt0.c4))) ELSE x'' END, (~ (x'' COLLATE NOCASE)), '0.04297030358766263' FROM rt0;SELECT ((((1825589021)OR('')))AND(((rt0.c1) NOT NULL))), 0.3713345742311589 COLLATE BINARY, NULL FROM t1 WHERE (TYPEOF(DISTINCT ((7.71882751E8) BETWEEN ('-314134873') AND (0.4850688051259522))));SELECT ALL (rt0.c0 COLLATE RTRIM IN ()) FROM v0, rt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN t1.c5 THEN t1.c80 END)OR(((t1.c80)<<(t1.c0)))))OR(t1.c78)), (t1.c0 IN (t1.c0)) COLLATE RTRIM, (((((rt0.c2))!=((t1.c5)))) NOT BETWEEN ((((t1.c5, rt0.c2, t1.c78))<=((t1.c78, t1.c78, '?PM''W*\')))) AND (((((t1.c80)OR(rt0.c4)))OR(v0.c0)))) FROM t1, rt0;SELECT DISTINCT (- ((t1.c0 IN ()))) FROM v0; -- 0ms;
SELECT DISTINCT (((~ (rt0.c3)))GLOB(((((t1.c80)OR(0.35768580033882436)))AND(t1.c80)))) FROM rt0, v0 WHERE ((('-1951995632') BETWEEN (((NULL) NOTNULL)) AND ((((0.4246657243490414, 0.26201492313511554, x''))=(('926724630', 'F7_CsK>', 'H)B'))))));SELECT DISTINCT LIKELY(CAST(t1.c78 AS INTEGER)) FROM t1, v0, rt0; -- 1ms;
SELECT (COUNT(rt0.c2) IN ()) FROM v0, t1; -- 0ms;
SELECT t1.c0, TRIM(DISTINCT HEX(DISTINCT t1.c5), CASE rt0.c0  WHEN v0.c0 THEN rt0.c3 ELSE rt0.c4 END), (((((v0.c0)AND('~')))AND(v0.c0)) IN (CASE WHEN rt0.c3 THEN t1.c78 ELSE rt0.c0 END)) FROM t1, v0;SELECT ALL t1.c0 FROM t1 WHERE ((((0.8755995163113653)) NOT BETWEEN ((CASE WHEN '-1820330937' THEN '423665096' END)) AND ((x'' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT -1099260236, x'', ((CASE x''  WHEN rt0.c3 THEN rt0.c1 WHEN t1.c80 THEN v0.c0 WHEN NULL THEN t1.c0 END) BETWEEN (ABS(rt0.c4)) AND (AVG(rt0.c2))) FROM v0 WHERE (((LENGTH(0X7c7bfcef))!=(NULL COLLATE BINARY)));SELECT ALL (~ (((rt0.c0)IS(v0.c0)))), rt0.c2, (((t1.c78, v0.c0, rt0.c0))>=((rt0.c0, t1.c0, t1.c0))) COLLATE NOCASE FROM v0 WHERE ((NOT (-1119230964 COLLATE NOCASE)));SELECT ALL MIN(((rt0.c2) BETWEEN (t1.c78) AND (v0.c0))) FROM v0 WHERE (((IFNULL('1067012561', NULL)) BETWEEN (((0.35323123310627613) NOT NULL)) AND (CASE '-1859176289'  WHEN x'' THEN 0.7083837158371719 ELSE '-896387352' END)));SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((rt0.c3) NOT NULL)))) FROM rt0, v0, t1; -- 0ms;
SELECT CASE WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c80))) THEN rt0.c0 COLLATE RTRIM WHEN ((v0.c0)LIKE(rt0.c3)) THEN t1.c0 COLLATE NOCASE WHEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((NULL))) THEN CAST(t1.c80 AS TEXT) ELSE LIKE(t1.c80, v0.c0) END FROM t1, v0, rt0 WHERE ((CAST(NULL AS BLOB) IN (((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ((('') ISNULL), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))) FROM t1, rt0, v0 WHERE (((((CAST('-0.0' AS BLOB))AND((('1816771472') BETWEEN ('I5') AND (1.197697334E9)))))AND((NOT ('-1943225136'))))); -- 1ms;
SELECT DISTINCT 0.5929292687929745 COLLATE BINARY, ((CASE WHEN rt0.c2 THEN rt0.c2 END)OR(((0.27061788858123503) IS FALSE))), CAST(((rt0.c0)|(rt0.c4)) AS NUMERIC) FROM v0 WHERE (((HEX('G|I㲈s3+'))<=(((x'') IS TRUE))));SELECT ALL ((((COUNT(*))AND((rt0.c1 IN ()))))AND(CASE t1.c78  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c5 END)) FROM v0, rt0, t1 ORDER BY CAST(((rt0.c3)||(rt0.c1)) AS BLOB) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(rt0.c4 AS NUMERIC) COLLATE RTRIM, ((rt0.c4 COLLATE RTRIM)>=(((NULL) IS TRUE))), CASE WHEN (~ (v0.c0)) THEN (t1.c0 IN (rt0.c4, t1.c0)) ELSE (- (t1.c5)) END FROM t1 WHERE (((CAST(0.8957472292880664 AS REAL))IS(((0x422d83c4)>(0.6187352251641344)))));SELECT DISTINCT (t1.c0 COLLATE RTRIM IN ()) FROM rt0, v0 GROUP BY '587033983', (~ (CAST(rt0.c3 AS INTEGER))), ((t1.c0 COLLATE NOCASE)<(((t1.c5)/(t1.c78))));SELECT DISTINCT CASE WHEN COUNT(*) THEN MAX(rt0.c0) ELSE t1.c0 END, 0.5649599587606321, (NOT (((rt0.c4)||(rt0.c3)))) FROM rt0, v0, t1 WHERE ((((((x'dd2c'))!=((x'')))) BETWEEN ((NOT ('Ft1'))) AND ((((0.31259895981067365)) BETWEEN ((x'')) AND ((x'f2f0')))))); -- 0ms;
SELECT DISTINCT (((rt0.c2))<=((NULL))) FROM v0, rt0 WHERE (((((x'') NOT BETWEEN (0.9607320769752024) AND (NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((t1.c80 COLLATE BINARY) NOT BETWEEN (IFNULL(DISTINCT 0Xffffffffca9236e8, t1.c80)) AND (CAST(t1.c0 AS NUMERIC))), (t1.c5 COLLATE NOCASE IN ()), ((((rt0.c3)IS(x'014c')))||((((t1.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))), ((((rt0.c4)<=(rt0.c4)))+(t1.c78)), ((rt0.c3)==(t1.c80)) COLLATE RTRIM FROM v0, rt0 WHERE (((CAST(x'8b24' AS NUMERIC))&(((((x'd21f')OR(0.8262100889975975)))OR(NULL)))));SELECT ((((NULL)<(t1.c0))) NOT BETWEEN (((rt0.c0)<(rt0.c3))) AND (((((v0.c0)AND(t1.c5)))OR(rt0.c3)))) FROM v0;SELECT DISTINCT (+ (((rt0.c0) BETWEEN (t1.c78) AND (rt0.c2)))), ((((0.43757344579239776)AND(((t1.c5)<=(t1.c78)))))AND(((rt0.c1)IS(rt0.c0)))), ((t1.c80) IS TRUE) FROM rt0, t1, v0 WHERE (((((0Xffffffff94271e99) BETWEEN (x'32b746fe') AND ('PPYd'))) IS FALSE)); -- 0ms;
SELECT (((rt0.c2) BETWEEN (1856622030) AND (v0.c0)) IN (t1.c0)) FROM rt0, t1 ORDER BY UPPER(((t1.c80) NOT NULL)) DESC  NULLS LAST;SELECT GROUP_CONCAT((0.8544514667768696 IN ())) OVER (), LIKELIHOOD(((rt0.c3) BETWEEN (t1.c5) AND (t1.c80)), 0.4273458724924212), json_remove(((t1.c78)>(rt0.c0)), CASE WHEN t1.c80 THEN v0.c0 END) FROM v0 ORDER BY ((((rt0.c2) IS FALSE))*(((t1.c78)!=('0.014318798061190297'))))  NULLS LAST, -1e500 ASC  NULLS FIRST, (((NULL)) BETWEEN ((CASE t1.c0  WHEN rt0.c2 THEN t1.c5 END)) AND ((json_array_length(rt0.c2)))) ASC;SELECT CAST((rt0.c4 IN ()) AS TEXT) FROM v0 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT NTILE(((v0.c0)AND(((v0.c0)==(v0.c0))))) OVER () FROM v0 WHERE (((((((((CAST(0.3120662992491732 AS TEXT))OR(((-580469162) NOT BETWEEN (NULL) AND ('')))))OR(((((0.5240497817566003)AND(1232782533)))AND(x'')))))AND((((x'87a4')) BETWEEN ((0.4731381198723621)) AND (('-723561616'))))))OR('qF'))); -- 0ms;
SELECT DISTINCT CAST(((v0.c0)IS NOT(t1.c5)) AS NUMERIC) FROM rt0, v0, t1 ORDER BY (((v0.c0))<((0.2962768642280966))) COLLATE BINARY ASC; -- 1ms;
SELECT ALL IFNULL(v0.c0 COLLATE RTRIM, -1.288135403E9) FROM v0, t1, rt0 WHERE ((('' COLLATE BINARY) IS TRUE)); -- 0ms;
SELECT TOTAL(((rt0.c2) NOT NULL)), COUNT(*) OVER ( ORDER BY (((rt0.c3 IN (t1.c78))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c4) NOT NULL))) ASC), ((((((t1.c5)AND(rt0.c3)))OR(t1.c80)))||((~ (t1.c78)))) FROM rt0, t1 WHERE ((+ ((NOT ('TRUE'))))); -- 0ms;
SELECT DISTINCT (((rt0.c3, t1.c80, rt0.c1)) BETWEEN ((0.24540979643122263, (- (rt0.c4)), t1.c78 COLLATE BINARY)) AND (('_Yk', t1.c5, ((t1.c0) NOT BETWEEN (t1.c78) AND (t1.c80))))) FROM v0, t1 GROUP BY (((~ (t1.c0))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ('1979487835'));SELECT ((-4.16211518E8)IS(((rt0.c1)LIKE(x'ad1e')))) FROM rt0, t1, v0; -- 1ms;
SELECT GROUP_CONCAT(((((rt0.c3)OR(t1.c78)))AND(t1.c0))) FROM rt0 LIMIT -14177924;SELECT (CASE t1.c78  WHEN v0.c0 THEN rt0.c1 ELSE x'' END IN ()) FROM rt0, v0, t1 WHERE ((('1-500000' COLLATE RTRIM) IS TRUE)) GROUP BY LIKELIHOOD(DISTINCT ((']')%(v0.c0)), 0.8761706831161373), (CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN t1.c0 THEN v0.c0 END IN ()), CAST((t1.c80 IN (t1.c5)) AS INTEGER); -- 0ms;
SELECT DISTINCT ((NULL) NOTNULL) FROM rt0 NOT INDEXED, v0, t1 WHERE (CAST(LIKELIHOOD(NULL, 0.38681788638227277) AS NUMERIC)); -- 4ms;
SELECT ALL (- (TOTAL('(&'))), ((rt0.c4) ISNULL) COLLATE BINARY, (((((~ (t1.c78)))AND(((rt0.c1)>=(t1.c78)))))AND(((rt0.c2)LIKE(t1.c80)))) FROM v0, t1 WHERE ((~ (x'')) COLLATE NOCASE);SELECT DISTINCT (((CASE v0.c0  WHEN '1975095944' THEN rt0.c3 ELSE rt0.c1 END, NULL, (((rt0.c3, rt0.c4, t1.c80, t1.c78, '')) NOT BETWEEN ((rt0.c2, t1.c78, rt0.c1, rt0.c0, rt0.c2)) AND (('619805618', t1.c78, rt0.c1, t1.c0, rt0.c2))), ((rt0.c0)AND(rt0.c0)), NULL))<((rt0.c0 COLLATE BINARY, CASE WHEN t1.c78 THEN rt0.c4 END, TOTAL(rt0.c1), (NOT (rt0.c1)), (NOT (t1.c5))))), ((CASE WHEN rt0.c1 THEN rt0.c2 END)+(v0.c0)), ('0.6688822612553563' IN ()) FROM t1, v0;SELECT DISTINCT ((((((((((((rt0.c2)OR(t1.c0)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)) COLLATE RTRIM FROM t1, rt0, v0 GROUP BY '812409299', CAST(((((v0.c0)AND(x'')))OR(rt0.c2)) AS BLOB), ((CAST(t1.c5 AS TEXT)) NOT BETWEEN (((t1.c80)|(rt0.c1))) AND (((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) HAVING (((((~ (t1.c80)))AND(STRFTIME(rt0.c4, rt0.c1, t1.c5))))OR(((((t1.c80)OR(rt0.c0)))AND(rt0.c1)))) LIMIT -1062768937; -- 0ms;
SELECT (t1.c0 IN ()) FROM t1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), COUNT(*) OVER (), NULL FROM v0 WHERE (((((((NULL)AND(NULL)))OR(''))) NOT NULL)); -- 0ms;
SELECT ALL ((((t1.c0)AND(v0.c0)))AND(((v0.c0) NOTNULL))) FROM t1 WHERE ('') LIMIT 1184036623 OFFSET 1069186607;SELECT DISTINCT (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t1.c5))))<<(NULL)) FROM v0 WHERE ((((x'08ec')AND('94483231')) IN ()));SELECT ALL ((((TOTAL(t1.c80))AND(LIKE(t1.c78, v0.c0, 'x'))))AND(((rt0.c4) BETWEEN (v0.c0) AND (t1.c0)))) FROM v0, t1, rt0 WHERE ('665176494'); -- 1ms;
SELECT DISTINCT (((((t1.c0)+(rt0.c4)), (~ (rt0.c3)), QUOTE(t1.c80)))=((((((v0.c0)OR(rt0.c3)))AND(0.13438091715302125)), ((((((((v0.c0)OR(t1.c0)))AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c2)), ((t1.c80) IS TRUE)))), UPPER(COUNT(rt0.c1)), (- (CASE WHEN x'' THEN rt0.c1 WHEN t1.c0 THEN 'aKIz8a' WHEN t1.c80 THEN t1.c5 ELSE t1.c78 END)) FROM rt0, t1 WHERE ((((NULL, ((NULL)>>(0.9260193203970482)), (0.1382563404464947 IN ('7''', '492781430'))))>(((0X76efa287 IN ()), CAST(-1.183026105E9 AS BLOB), (((x'ab59'))!=((NULL)))))));SELECT ALL ((rt0.c2 COLLATE RTRIM)|(CASE WHEN t1.c5 THEN rt0.c2 WHEN rt0.c3 THEN '229948599' WHEN t1.c5 THEN rt0.c4 ELSE rt0.c1 END)) FROM rt0 LIMIT -897684219 OFFSET 564458081;SELECT LIKELY(rt0.c3) COLLATE NOCASE FROM v0;SELECT ((TOTAL(rt0.c0))GLOB(((((((((-2.1165684E7)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) FROM t1 WHERE (((CASE WHEN x'128f' THEN x'af4d' WHEN 706923302 THEN NULL WHEN NULL THEN NULL ELSE 0.4316664583044372 END) NOT BETWEEN ((x'808f' IN (NULL))) AND (RTRIM('449139510'))));SELECT NTILE(CASE CAST(rt0.c0 AS NUMERIC)  WHEN IFNULL(rt0.c3, rt0.c4) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) END) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0;SELECT DISTINCT '-90378214' FROM rt0, t1 WHERE (((((0.649560827612058)+('	Q')))GLOB((- (x'af9afae1'))))) ORDER BY ((NULL) NOT NULL) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c1 FROM t1;SELECT ALL rt0.c3, ((((((t1.c5)OR(rt0.c4)))AND(NULL))) NOT NULL), ((t1.c5)<=(LIKELIHOOD(t1.c0, 0.5429115542232813))) FROM v0;SELECT DISTINCT rt0.c1 FROM v0, rt0; -- 0ms;
SELECT DISTINCT (((((x'958b')>>('65742824'))))<=((''))), ((t1.c0) ISNULL) COLLATE BINARY, ((t1.c80)/((((t1.c5))<((NULL))))) FROM v0, t1, rt0 WHERE ((('' IN ()) IN (CASE NULL  WHEN 0.2353619464630552 THEN '' WHEN 'uo)]*' THEN x'7ecf' WHEN '-104870659' THEN x'' END))); -- 0ms;
SELECT DISTINCT SUM(((t1.c5) IS FALSE)) FROM rt0, t1, v0 WHERE (CAST(NULL AS NUMERIC)) GROUP BY (+ (t1.c80 COLLATE RTRIM)) HAVING t1.c78; -- 0ms;
SELECT ALL (((((((((~ (x'')))OR(rt0.c3)))AND(t1.c78 COLLATE NOCASE)))OR((((rt0.c1, t1.c0, x'')) BETWEEN ((rt0.c3, t1.c0, NULL)) AND ((t1.c78, v0.c0, rt0.c0))))))AND((rt0.c4 IN (t1.c80)))) FROM t1, rt0 WHERE ((+ ((((x'a2ea'))>(('#^U*[b'))))));SELECT CAST(v0.c0 AS INTEGER) FROM t1, v0 WHERE (x''); -- 0ms;
SELECT DISTINCT AVG(rt0.c3) FROM v0, t1;SELECT DISTINCT ((IFNULL(v0.c0, NULL))>(TOTAL(v0.c0))) FROM t1, v0, rt0; -- 1ms;
SELECT ALL -1839372868 FROM t1, v0 WHERE ('1028798271'); -- 0ms;
SELECT DISTINCT MAX(MIN(t1.c80)) COLLATE NOCASE, SUM(x'') OVER (), (+ (v0.c0)) FROM v0, rt0 WHERE (((((3.00329135E8) NOT BETWEEN (NULL) AND (0x29bc834)))<=(((x'b7245dfc') NOT BETWEEN (x'ec73') AND (372661716)))));SELECT DISTINCT (((((((v0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c0))))OR(((rt0.c0)GLOB(t1.c0)))))AND(((t1.c5)OR(v0.c0)))), COUNT(*), rt0.c1, ((t1.c78) IS FALSE), ((CASE rt0.c0  WHEN 0.3738854852243262 THEN t1.c5 WHEN t1.c5 THEN rt0.c2 WHEN t1.c78 THEN NULL END)>=(((((((((t1.c5)OR('11738143')))AND(v0.c0)))AND(t1.c5)))OR(rt0.c1)))) FROM v0;SELECT DISTINCT (((((v0.c0)) NOT BETWEEN ((t1.c78)) AND ((rt0.c1))))/(((((v0.c0)OR(rt0.c0)))OR(t1.c5)))) FROM rt0 WHERE ((('771882751') IS TRUE)) GROUP BY ((t1.c5) IS FALSE) HAVING (((((rt0.c3) BETWEEN (rt0.c0) AND (t1.c5)), (t1.c5 IN (x'')), (((rt0.c4, rt0.c3, t1.c80))>((t1.c78, rt0.c2, t1.c0)))))<=(((- (v0.c0)), (('') ISNULL), '1197697334'))) ORDER BY UNLIKELY(((t1.c78)!=(t1.c80))) ASC  NULLS FIRST;SELECT DISTINCT CAST(MIN(rt0.c4) AS BLOB) FROM v0 WHERE (((((NULL)LIKE(x'')))-((((0.08198447789749641)) BETWEEN (('vv|d')) AND ((NULL))))));SELECT (NOT (((rt0.c0) IS FALSE))), CAST(((rt0.c3)=(v0.c0)) AS TEXT), ((((((t1.c5)OR(rt0.c3)))OR(t1.c0)))||(CAST(v0.c0 AS TEXT))) FROM t1 WHERE (CAST(((('-1922110124', '1306676027', 0.5446567592898921)) NOT BETWEEN ((6.65176494E8, 0.8163443456152758, '')) AND (('', '0.8544514667768696', x'181f'))) AS INTEGER));SELECT ((((rt0.c3)/(t1.c80))) NOT BETWEEN (((t1.c78)*(rt0.c3))) AND (COUNT(t1.c5))) FROM t1, v0 WHERE ((((((((((((NULL)) BETWEEN ((NULL)) AND (('286948243'))))OR((('d!')&(x'd08e')))))OR((('665176494')<=(-5.98768044E8)))))AND(((((x'')OR(-7.19982474E8)))OR(0.8126260111026063)))))OR((- (NULL)))));SELECT ((rt0.c0)IS NOT(rt0.c2)) COLLATE BINARY FROM t1, rt0 LIMIT 1577792302; -- 0ms;
SELECT ALL (NOT ((NOT (t1.c78)))) FROM t1, v0; -- 0ms;
SELECT ALL ((((rt0.c2)==(v0.c0)))||((rt0.c4 IN (rt0.c2, t1.c80)))) FROM v0 WHERE (((((NULL)>>(x'be79'))) NOT BETWEEN ((NULL IN (0x28ddc236))) AND ((('s珅')<=(x'bf46')))));SELECT DISTINCT rt0.c3 FROM v0 WHERE (CAST(CAST('-1244441979' AS BLOB) AS TEXT)) ORDER BY UNLIKELY(((t1.c0)&(NULL))) ASC;SELECT DISTINCT ((rt0.c4)LIKE((+ (t1.c78)))) FROM t1, rt0; -- 0ms;
SELECT json_patch(((((t1.c78)AND(t1.c0)))OR(v0.c0)), CASE WHEN rt0.c4 THEN rt0.c1 END) FROM rt0;SELECT ALL COUNT((t1.c80 IN ())) OVER () FROM t1; -- 0ms;
SELECT DISTINCT x'' FROM v0, t1, rt0 WHERE ((NOT (((x'1776') BETWEEN ('s3') AND (x'676e'))))) GROUP BY HEX(rt0.c2), (((~ (rt0.c0))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))) AND (rt0.c1)), ((((((((((v0.c0) BETWEEN (t1.c78) AND (rt0.c2)))OR((((t1.c80))<=((rt0.c3))))))AND((- (t1.c0)))))OR((rt0.c4 IN ()))))AND(UNLIKELY(DISTINCT rt0.c3))) HAVING ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN t1.c5 THEN t1.c78 WHEN t1.c80 THEN t1.c78 END) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt0.c3)); -- 1ms;
SELECT DISTINCT rt0.c3 FROM v0, rt0, t1 WHERE (CAST(((3.00329135E8) NOT BETWEEN (NULL) AND (x'1dc4')) AS BLOB)) GROUP BY ((t1.c78 IN ()) IN ()) HAVING COUNT(highlight(t1.c80, t1.c78, rt0.c3, NULL)); -- 0ms;
SELECT DISTINCT '2034547946', CAST(rt0.c3 AS REAL) COLLATE BINARY, ((((((rt0.c3)&(v0.c0)))OR((((rt0.c3)) NOT BETWEEN ((t1.c80)) AND ((v0.c0))))))AND(CASE WHEN t1.c80 THEN t1.c80 END)) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT CAST((0.4526059972589668 IN ()) AS BLOB), t1.c80, COUNT(*) OVER () FROM v0;SELECT ALL ((((rt0.c2) ISNULL)) NOT BETWEEN (NULLIF(0xffffffffdd424c92, t1.c80)) AND (((rt0.c1)<>(rt0.c2)))) FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT (~ (x'')) FROM v0 WHERE ((- ((('1755471099') BETWEEN ('824764103') AND (0.45852518433342804))))); -- 0ms;
SELECT DISTINCT ((((t1.c0) IS TRUE))%(((t1.c80)IS(t1.c5)))) FROM v0, t1 LIMIT 1266403156 OFFSET -1857073228; -- 0ms;
SELECT ((((rt0.c1) IS FALSE)) IS TRUE) FROM rt0, v0 WHERE (((((NULL) BETWEEN ('-1265825626') AND (0.9129095437065308))) NOT BETWEEN (((('1877967885', 0.01050590216414593, x'959c')) NOT BETWEEN ((0.976962825538037, '', '625552700')) AND ((NULL, '', NULL)))) AND (((x'')<=(NULL))))) ORDER BY LIKE(CAST(t1.c5 AS REAL), (rt0.c4 IN ()), '7') DESC, CASE NULL  WHEN (((rt0.c2))<=((t1.c0))) THEN (((7.71882751E8))!=((rt0.c0))) END;SELECT DISTINCT load_extension(((((((((((((t1.c80)AND(t1.c0)))AND(t1.c80)))OR(t1.c78)))OR(v0.c0)))OR(rt0.c2)))OR(t1.c80))), TOTAL('-513185176') OVER (), ((CASE rt0.c0  WHEN t1.c5 THEN rt0.c2 ELSE t1.c0 END)<=(CASE WHEN t1.c5 THEN rt0.c3 WHEN v0.c0 THEN t1.c80 WHEN rt0.c3 THEN rt0.c2 ELSE t1.c80 END)), ((CASE WHEN rt0.c2 THEN v0.c0 WHEN '0.9960160554967415' THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c4 END) BETWEEN (CAST(t1.c5 AS BLOB)) AND (CASE WHEN rt0.c1 THEN rt0.c0 END)), CAST(((rt0.c4)!=(t1.c78)) AS INTEGER) FROM rt0, v0, t1 WHERE ((((('-\') ISNULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT (((((((rt0.c4))<((t1.c5))))OR(CASE v0.c0  WHEN t1.c78 THEN rt0.c3 ELSE v0.c0 END)))OR(rt0.c2)), ((((t1.c5) ISNULL)) BETWEEN (MIN(v0.c0)) AND (((((((((((((t1.c78)OR(rt0.c0)))OR(rt0.c3)))AND(t1.c80)))AND(rt0.c0)))OR(t1.c0)))OR(t1.c0)))), ((((((rt0.c3)OR(t1.c5)))OR(t1.c0))) NOT BETWEEN (CASE NULL  WHEN t1.c5 THEN v0.c0 WHEN rt0.c1 THEN t1.c78 WHEN t1.c0 THEN t1.c78 ELSE 0.1093761249133487 END) AND (((NULL) BETWEEN (0.13991340479672199) AND (t1.c78)))), ((0.4653996409113288)OR(SUM(t1.c5))), CASE WHEN ((t1.c80)-(rt0.c0)) THEN CASE rt0.c2  WHEN '-583457895' THEN rt0.c3 ELSE t1.c5 END END FROM v0, t1 WHERE (CAST(CASE WHEN '801200331' THEN NULL ELSE x'' END AS NUMERIC)) GROUP BY ((rt0.c1)==(CAST(v0.c0 AS BLOB))) HAVING (((+ (0Xffffffffcd34382e))) NOT BETWEEN ((((t1.c80, rt0.c0, t1.c0)) BETWEEN ((v0.c0, NULL, t1.c80)) AND ((t1.c5, t1.c80, rt0.c3)))) AND (CASE WHEN rt0.c1 THEN t1.c78 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN t1.c78 ELSE rt0.c2 END)) ORDER BY CASE MAX(rt0.c2, t1.c5, t1.c78, t1.c78)  WHEN 2.034547946E9 THEN ((rt0.c4)<(x'')) WHEN (rt0.c0 IN ()) THEN ((rt0.c3)>(rt0.c4)) WHEN json('-61224449') THEN CASE t1.c0  WHEN rt0.c3 THEN t1.c80 ELSE v0.c0 END END  NULLS FIRST, (NOT (((rt0.c2) IS TRUE))) ASC, ((((t1.c5)OR(t1.c80)))AND(t1.c78)) COLLATE RTRIM DESC  NULLS FIRST;