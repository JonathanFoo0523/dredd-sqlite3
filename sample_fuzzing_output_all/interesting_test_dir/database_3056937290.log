-- Time: 2024/06/07 06:30:31
-- Database: database90
-- Database version: 3.40.0
-- seed value: 3056937290
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 TEXT ); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c0, c2) VALUES (0xffffffffd9e661e9, '-856627956', NULL, 0x5993f1c5), ('533159156', 0.5391524199414236, '0.5391524199414236', '-856627956'), (x'', NULL, 0x1d596c6e, NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c3, c2, c1) VALUES (0.3607990871605672, x'', 4.92399726E8), (0.14537784493765338, 0.3607990871605672, NULL), (NULL, NULL, 'X,'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (x'', 'X,'), ('492399726', x''), (5.33159156E8, 'L}?w1^G~'); -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c2)=(x'2d3d') WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))|(TYPEOF(rt0.c3))); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (NULL, 0Xffffffff86859374); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c4) VALUES (0.9381793649388805, ''), (NULL, 0.955551032040006), (NULL, 0.14537784493765338); -- 1ms;
SELECT rtreecheck('rt0'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3) VALUES (0.9133607948234944, 0.17358198454955642, x''); -- 3ms;
UPDATE OR IGNORE rt0 SET c3=NULL; -- 0ms;
UPDATE OR FAIL rt0 SET c0=0.6670886886393665, c0=0.1321875388987166 WHERE ((((rt0.c2)<>(rt0.c2)))>=(rt0.c0 COLLATE RTRIM)); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET (c4)=(-1877564536) WHERE (((((((rt1.c0)OR(rt1.c0)))AND('''\rZ<&R∁\n')), CASE rt1.c4  WHEN rt1.c4 THEN -8.56627956E8 WHEN rt1.c2 THEN x'50ee' WHEN rt1.c3 THEN rt1.c2 END, ((rt1.c0)>(rt1.c1))))<=((((rt1.c1)GLOB(rt1.c1)), rt1.c4, rt1.c0 COLLATE RTRIM))); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR FAIL INTO rt1(c4, c3, c0, c1) VALUES (x'', 'y蠢+F?nr\n', '800399873', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES ('1999010712', NULL, '0.3607990871605672'); -- 0ms;
INSERT OR FAIL INTO rt1(c4, c3, c1, c0, c2) VALUES (0xffffffffa005b77a, '-639213079', -1034820306, NULL, x'fc47'); -- 0ms;
INSERT OR ABORT INTO rt1(c4, c2) VALUES ('-1610238086', -1.034820306E9); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c4, c3, c2) VALUES (0X1c7f6f7b, 0.3496538616281989, '-1853781762', NULL), ('-856627956', NULL, NULL, NULL), (NULL, (((x'')) BETWEEN ((CAST(NULL AS INTEGER))) AND ((CAST('0.955551032040006' AS TEXT)))), 0.90694283941993, x''); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('-1353875047', NULL, '', NULL, NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c1)=(0.47780427451036434) WHERE (NOT (rt1.c4)) COLLATE RTRIM; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.9164380784152841, '-639213079', '-1654319216', -1590618838); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (0.3294307141002204); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=('') WHERE DATETIME(LIKELY(rt1.c2), CASE WHEN rt1.c4 THEN rt1.c3 END, rt1.c4, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c4)), ((rt1.c2) NOTNULL), rt1.c3 COLLATE RTRIM, ((rt1.c4)<=(x'fb0455ed'))); -- 0ms;
UPDATE OR ABORT rt0 SET c0=1061569072; -- 1ms;
UPDATE OR ABORT rt1 SET (c3, c3)=(' A', x'') WHERE rt1.c1; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c4=0xffffffffaee3e6ea, c1=x'a7ce'; -- 0ms;
UPDATE rt1 SET c3=x'b206' WHERE CASE LOWER(rt1.c2)  WHEN (NOT (rt1.c4)) THEN (((rt1.c0))<>((rt1.c4))) END; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0)=('-344125556'); -- 0ms;
UPDATE rt1 SET (c2)=(0.8190862481082275); -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (x''); -- 1ms;
UPDATE rt1 SET c1=x'' WHERE NULLIF(DISTINCT ((rt1.c3)+(rt1.c0)), CASE rt1.c3  WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, order=DESC); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (-1431303311, x''); -- 4ms;
UPDATE vt0 SET c1=0.7542185982764836 WHERE (((vt0.c0)) BETWEEN ((((vt0.c0)-(vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC)))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.8445451797332004) WHERE ((((((((vt0.c0 COLLATE BINARY)AND(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))))AND((vt0.c0 IN ()))))AND(((vt0.c1) ISNULL))))AND(((vt0.c0) NOT NULL))); -- 0ms;
UPDATE OR IGNORE rt1 SET c4=NULL; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 349831748); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 828242380); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(x'', 0.9886172377625934); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES ('', 0.03237322806328613); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', 4.92399726E8); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (-1769700855); -- 0ms;
REINDEX  rt0; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1, c4) VALUES ('x,', NULL, 0.8515646006577361, NULL); -- 0ms;
ANALYZE rt1; -- 0ms;
UPDATE rt0 SET c1=NULL; -- 0ms;
UPDATE OR REPLACE vt0 SET c1=0.878499376728451 WHERE LTRIM(((((vt0.c1)AND(0x77267b98)))AND(vt0.c0))); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c1)=(-6.39213079E8, '0.3607990871605672') WHERE CASE (('0.3496538616281989')>=(x''))  WHEN ((rt1.c0)*(rt1.c0)) THEN ((rt1.c1) IS FALSE) END; -- 0ms;
UPDATE OR ABORT vt0 SET c1=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt1 SET (c1, c4)=('', 0.3607990871605672); -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET c3='oBe0g' WHERE CASE rt0.c1  WHEN 0X19628822 THEN x'' WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM; -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55689'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1294220882); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1457583317); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('Afan^!'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt1 SET c3=0.7299220550693291 WHERE ((((rt1.c1)|(rt1.c2)))<<(((rt1.c4)>=(rt1.c3)))); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1, c3) VALUES (0.9754742660756118, x'f5f9', '2f(A7tx⏟w', ''), (x'9861', '0.8445451797332004', '-1877564536', 0.09056629803426752), (UPPER(((x'2a6d7bf2') ISNULL)), 0x43e59d2, '-639213079', x'd6b3'); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('-639213079'); -- 0ms;
ANALYZE rt1; -- 0ms;
UPDATE OR REPLACE rt0 SET (c0)=(x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL), (NULL), (NULL), (''), ('1314396250'), ('0.3607990871605672'), (-1.610238086E9), ('6賾꺶W￿p\r'), ('2f(A7tx⏟w'); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt1, vt0;SELECT DISTINCT (((((rt0.c0))<=((rt0.c0)))) NOTNULL) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT 0X1c69c835 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT NULL, ((((((rt0.c3)OR(rt1.c3)))OR(rt1.c4)))GLOB(TIME(x'', vt0.c0, rt0.c2, rt1.c4, rt0.c2))), ((((NULL IN ())))<=((((rt0.c0)>=(rt0.c1))))) FROM vt0, rt1, rt0 WHERE (x'c38c'); -- 0ms;
SELECT ALL ((CAST('1000192412' AS TEXT)) NOTNULL) FROM rt1, vt0, rt0 WHERE (((ABS(DISTINCT ''))%(((NULL)*(NULL))))) GROUP BY rt0.c3, (((~ (rt0.c1)))%(CASE NULL  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c4 END)), ((CASE rt1.c3  WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c1 END) ISNULL); -- 0ms;
SELECT (~ (CASE rt1.c0  WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c4 ELSE rt0.c2 END)) FROM rt0;SELECT DISTINCT ((rt0.c1 COLLATE NOCASE) NOTNULL) FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL ((rt0.c3)-(x'181b24f4')), NULL, (((((rt1.c2)+(rt1.c0)), CAST(1.000192412E9 AS INTEGER), ((rt1.c3)<=(rt1.c0))))<>(((rt1.c0 IN ()), TYPEOF(DISTINCT rt0.c3), NULL))) FROM vt0, rt1 GROUP BY ((((((((((rt0.c1) IS TRUE))OR(((vt0.c0)<(rt0.c0)))))AND(rt1.c3)))OR(x'')))AND('478113659'));SELECT DISTINCT TRIM((NOT (rt0.c3))) FROM rt0, vt0, rt1 WHERE (((((x'')=(1601176851)))*(NULL COLLATE BINARY))); -- 2ms;
SELECT CASE WHEN CAST(rt1.c0 AS TEXT) THEN TOTAL_CHANGES() WHEN ((rt0.c0) BETWEEN (rt1.c0) AND (rt1.c4)) THEN (rt1.c4 IN ()) WHEN (((rt0.c0))>((rt0.c3))) THEN (rt0.c0 IN ()) ELSE ((rt1.c0)<(rt0.c0)) END FROM rt1, rt0 WHERE (UPPER(DISTINCT CAST(NULL AS TEXT))) ORDER BY (- (0.9225454768276975)) DESC; -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c3 AS BLOB)) OVER ( ORDER BY (- (rt1.c2)) COLLATE BINARY, (((rt0.c1)) BETWEEN ((CAST(x'9b35' AS NUMERIC))) AND (((~ (rt0.c2)))))  NULLS LAST) FROM vt0 WHERE (((((((((CASE x''  WHEN x'' THEN x'4c6e' WHEN x'70cb' THEN -984235489 WHEN 0.8238610829114352 THEN NULL ELSE '-60014953' END)OR(((x'1734') NOT BETWEEN ('-857337596') AND (-305094638)))))OR(CAST(' #r/' AS INTEGER))))OR(0x1c7f6f7b COLLATE RTRIM)))AND((- ('\n_t[*gdD'))))) GROUP BY CASE WHEN CASE vt0.c1  WHEN '533159156' THEN rt0.c2 END THEN ((rt0.c0)+(0.7773801533560818)) END HAVING SUM(((((((((rt1.c1)OR(rt1.c0)))OR(NULL)))AND(rt1.c0)))OR(rt0.c2)));SELECT DISTINCT ((rt1.c1) NOTNULL) COLLATE NOCASE, ((((rt0.c3)>>(rt0.c0))) NOT BETWEEN (MAX(rt0.c0)) AND (((((((((x'')OR(rt0.c2)))AND(rt0.c0)))OR(rt1.c2)))AND(rt1.c0)))), ((((rt1.c0)*(rt1.c1))) NOT NULL) FROM rt1, vt0, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c1 END)>(x'')); -- 1ms;
SELECT DISTINCT (((rt0.c0)IS NOT(rt0.c2)) IN ()) FROM rt1, vt0 WHERE ((((NULL) BETWEEN ('1502867909') AND (-1.431303311E9)) IN ())); -- 0ms;
SELECT ((CASE WHEN 0Xffffffffee882b7d THEN vt0.c0 END)*(((rt1.c2)<>(rt0.c0)))) FROM rt1 ORDER BY ((((rt0.c0)<=(rt1.c2)))<=(NULL)) DESC  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT(((rt0.c0) NOTNULL)) OVER ( ORDER BY CASE highlight(rt0.c3, rt0.c1, rt0.c2, rt0.c2)  WHEN (~ (vt0.c1)) THEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt1.c3)) ELSE ((vt0.c1)IS(rt1.c4)) END), (((rt0.c0))<=((vt0.c0))) COLLATE NOCASE, (((CASE WHEN rt1.c1 THEN vt0.c1 ELSE rt0.c0 END, COUNT(*), (((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))>((TOTAL(rt1.c0), ((rt0.c3) NOT NULL), (NOT (rt1.c2))))) FROM vt0 WHERE ((((x'', NULL, 321077352)) BETWEEN (((('P+') NOT BETWEEN (x'') AND (',P')), ((((NULL)OR(0X3001df55)))AND(x'ce04')), ((((x'')AND(x'')))OR(x'c2dc3f92')))) AND ((0.08530043317227753, 492399726, ('' IN ()))))) GROUP BY ((rt0.c0)<(rt0.c0 COLLATE BINARY));SELECT NULL FROM vt0, rt1 WHERE (CASE ((('1601176851', '-857337596', 0.3018577179499603)) BETWEEN (('1036950625', 0.3210172333732637, NULL)) AND ((-1.700483402E9, 0.32177878074858046, NULL)))  WHEN (((0Xffffffff9a067685))>=((954911307))) THEN ((NULL)||(0xffffffffa821b407)) WHEN (0.29868065146929246 IN ()) THEN 0.9973353108128281 COLLATE NOCASE WHEN ((x'') NOT BETWEEN (x'') AND ('iC8')) THEN ((NULL)<>('Qat(*u(')) ELSE (NOT (0.3949701697241885)) END); -- 0ms;
SELECT DISTINCT ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c3)))GLOB(((((rt0.c3)OR(rt1.c1)))OR('79710767')))) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3)) BETWEEN ((NULL)) AND (((~ (rt1.c3))))) FROM vt0, rt1 WHERE ((+ (CASE WHEN '(*pn<b,Wf' THEN '-750903558' ELSE '' END))); -- 1ms;
SELECT DISTINCT (((((rt0.c3 IN ()))AND(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))AND(vt0.c1)))OR(rt0.c0)))))OR(((rt1.c0) IS FALSE))) FROM vt0, rt1 WHERE (((((x'') NOT BETWEEN ('-984235489') AND ('0.14537784493765338')))AND((('')=(x''))))); -- 0ms;
SELECT DISTINCT (((((((((rt1.c3 IN ()))AND(rt1.c0 COLLATE BINARY)))AND(((rt0.c2)<<(vt0.c0)))))OR(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))AND((rt0.c3 IN ()))) FROM rt0, rt1, vt0 GROUP BY rt0.c2, json_array_length(vt0.c1) COLLATE RTRIM, (((NOT (rt1.c0))) NOT NULL); -- 0ms;
SELECT ALL (((CAST(rt0.c0 AS REAL)))==(((- (rt0.c1))))) FROM vt0 WHERE ((~ (0xffffffffc4b63c37 COLLATE BINARY)));SELECT DISTINCT ((SUM(rt0.c0)) IS FALSE), x'', CAST(((rt0.c2)IS NOT(rt0.c1)) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt1.c3) NOT BETWEEN (NULL) AND (rt0.c2)) FROM rt1, vt0;SELECT GROUP_CONCAT(ABS(rt1.c2)) OVER ( ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c1)) AS INTEGER)) FROM vt0, rt0 ORDER BY DATE(rt1.c4, (vt0.c0 IN ()), rt1.c3 COLLATE BINARY)  NULLS FIRST LIMIT -1610238086;SELECT ALL (((((((rt0.c1)OR(rt0.c3)))OR(vt0.c1)), ((rt1.c3) IS FALSE), ((rt1.c4) NOT BETWEEN (vt0.c1) AND (vt0.c1))))=(((~ (vt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt1.c0)), ((rt1.c3)+(vt0.c0))))), TRIM(DISTINCT (rt0.c3 IN ()), MAX(rt1.c4)), CASE ((((rt1.c2)OR(rt1.c1)))OR(rt0.c0))  WHEN (rt1.c1 IN ()) THEN CASE rt1.c1  WHEN 0.4675494529697718 THEN rt0.c2 WHEN vt0.c1 THEN '0.8515646006577361' WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c0 END END FROM rt0, vt0 WHERE (json_valid(((NULL) ISNULL))) GROUP BY CASE WHEN rt0.c3 THEN rt1.c4 ELSE rt0.c3 END COLLATE NOCASE;SELECT ALL (~ (LOWER(rt1.c2))) FROM rt1, rt0 WHERE (((((((((CAST(7.119509E7 AS REAL))AND('' COLLATE RTRIM)))AND((('-344125556') IS TRUE))))AND(((('', x'', 0.42717672653700645))<=((NULL, 0.28439826142004443, 7.9710767E7))))))OR((('-623198121')>(0.1824532496311927))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)IS(rt1.c2))) IS TRUE) FROM vt0 WHERE ((((((0X3f3a932e)) NOT BETWEEN ((0.15515583215305806)) AND ((0.8238610829114352)))) BETWEEN ((~ (NULL))) AND ((('R{.')&(0.8740664960495111)))));SELECT ALL ((4.78113659E8)!=(AVG(rt1.c0))) FROM rt1 WHERE (json_array_length(((('', NULL, x''))>=((x'', 'vX6a썕S', x''))), ((NULL) IS TRUE)));SELECT ALL UPPER(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c1 AS TEXT))OR(CASE 'Qat(*u('  WHEN vt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 END)))OR(vt0.c0 COLLATE BINARY)) FROM rt0;SELECT ALL LOWER(((((rt0.c2)AND(rt0.c3)))OR(rt1.c3))) FROM rt1;SELECT vt0.c1 FROM rt0, vt0 LIMIT -1918815086; -- 0ms;
SELECT DISTINCT ((MIN(rt0.c1)) NOTNULL) FROM vt0 WHERE ((((-902578567))<=(((((('H8\nc')AND(0.08303058673468622)))AND(x''))))));SELECT ((((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c0))) NOTNULL) FROM rt0, rt1 WHERE ((- (NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT COUNT((((vt0.c1, rt1.c3, rt1.c1))>=((rt1.c0, rt1.c1, rt1.c1)))) OVER ( ORDER BY CASE rt0.c0  WHEN rt1.c1 THEN '0.3018577179499603' END COLLATE NOCASE  NULLS FIRST) FROM rt0, vt0 WHERE (CAST((('')>>(NULL)) AS BLOB));SELECT vt0.c0 FROM rt0 WHERE ((((((NULL))>((x'')))) NOT NULL)) GROUP BY ((((rt0.c2)AND(vt0.c1)))-(rt1.c0 COLLATE BINARY)) ORDER BY CAST(((rt0.c0)>(rt0.c0)) AS REAL) ASC, rt0.c3 ASC  NULLS LAST;SELECT (((~ (rt1.c4)))*((vt0.c0 IN ()))) FROM vt0;SELECT DISTINCT (((+ (rt0.c3))) NOT NULL), (((rt1.c1))==((rt1.c4))) COLLATE BINARY, AVG(((rt1.c2)<(rt1.c2))) OVER () FROM rt1 WHERE (((((((x'')*(x'')))AND(CASE WHEN 7.9710767E7 THEN '￿>yU>t)' ELSE x'' END)))OR((x'' IN ()))));SELECT ALL ((MAX(rt0.c3)) NOT BETWEEN ((rt1.c1 IN (rt1.c4, rt0.c3))) AND (((vt0.c0) IS FALSE))) FROM rt1, rt0 WHERE (((UPPER(0.3482862557954267))>=(('-1944928824' IN ('>>CWEr')))));SELECT DISTINCT UNLIKELY(vt0.c1) COLLATE BINARY FROM vt0, rt1, rt0 WHERE ((((((('127197658')OR(119601868)))OR(''))) NOT BETWEEN ((x'd6cda7f8' IN ())) AND (CASE WHEN '\n}*Oi.s' THEN -1.654319216E9 WHEN '492399726' THEN '1000192412' WHEN 'qP#' THEN x'' END))); -- 0ms;
SELECT rt1.c1 COLLATE BINARY FROM vt0, rt1 WHERE (CASE ((NULL)<<(NULL))  WHEN x'' THEN json_array(x'', x'', x'', 0.15157031469228877) ELSE ((1628543710) NOT BETWEEN (x'') AND (0.3092358635201339)) END); -- 0ms;
SELECT DISTINCT CASE CASE WHEN rt1.c2 THEN NULL WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END  WHEN CASE WHEN rt1.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (rt0.c3 IN ()) END FROM rt1, rt0, vt0; -- 0ms;
SELECT ((((rt0.c2)!=(vt0.c1)))IS NOT(CASE WHEN rt1.c3 THEN rt1.c1 ELSE vt0.c0 END)) FROM rt1, vt0 WHERE ((((('O', NULL, NULL)) NOT BETWEEN ((NULL, NULL, '-634101945')) AND ((NULL, 0.25616160286144096, x''))) IN (LIKELIHOOD(DISTINCT NULL, 0.964029413518057)))) LIMIT -1068298995 OFFSET -856627956;SELECT ALL 0xffffffffd9e661e9, (((((NULL)OR(vt0.c0)))OR(rt1.c1)) IN (rt0.c3 COLLATE RTRIM)), CAST(((rt1.c1) ISNULL) AS TEXT) FROM vt0, rt1, rt0 WHERE (LENGTH(((NULL) NOT NULL))); -- 0ms;
SELECT (((vt0.c1)<<(rt1.c4)) IN ()), COUNT(CASE WHEN rt1.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c2 THEN -1090586309 ELSE vt0.c1 END COLLATE NOCASE) OVER (), rt1.c0 FROM rt0, vt0 GROUP BY (- (((x'')&(rt0.c2)))) HAVING (~ (((vt0.c1)<<(rt1.c3))));SELECT ((((((((rt1.c1 COLLATE BINARY)OR(rt1.c2)))AND(((rt1.c2) NOT NULL))))AND(((vt0.c0) NOT NULL))))AND(rt1.c4 COLLATE RTRIM)) FROM rt1, rt0, vt0; -- 0ms;
SELECT NULL FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT NULL, NTILE(((((rt1.c3) IS TRUE)) BETWEEN ((~ (rt1.c3))) AND (((NULL)<<(rt1.c4))))) OVER ( ORDER BY ((((rt0.c0) NOT NULL)) NOTNULL) ASC  NULLS LAST), ((CASE rt1.c1  WHEN rt1.c4 THEN rt1.c3 END)GLOB((rt1.c3 IN ()))) FROM rt1 WHERE ((- (((NULL) BETWEEN (x'') AND (NULL)))));SELECT DISTINCT (~ (CAST(rt0.c0 AS REAL))) FROM rt1, vt0, rt0 WHERE (0Xffffffff9a067685) LIMIT 97239895 OFFSET -1428111991; -- 1ms;
SELECT DISTINCT rt1.c2 FROM vt0, rt0;SELECT '954911307', ((rt1.c4) BETWEEN (vt0.c1) AND (rt1.c1)) COLLATE BINARY, ((UPPER(DISTINCT rt0.c3)) NOT BETWEEN ((('533159156')&(rt1.c1))) AND ((rt1.c1 IN ()))), ((CASE WHEN rt1.c0 THEN vt0.c1 END) IS FALSE), (rt1.c2 COLLATE NOCASE IN ()) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c2))) NOT NULL), PERCENT_RANK() OVER (), ((MAX(rt1.c2)) IS TRUE) FROM rt1;SELECT DISTINCT ((((rt0.c3) NOT NULL)) NOT BETWEEN ((rt0.c0 IN ())) AND (SUM(rt0.c1))) FROM vt0, rt0; -- 0ms;
SELECT LIKELIHOOD(((((rt0.c0)AND(rt0.c0)))AND(rt1.c2)), 0.4325137455426723), CAST(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt1.c4 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c2 END AS BLOB), ((((x'') IS TRUE))=((((rt1.c4, rt1.c4, rt1.c3)) BETWEEN ((rt0.c3, rt1.c4, rt1.c0)) AND ((rt1.c4, rt1.c2, rt0.c2))))) FROM vt0;SELECT UPPER(((((rt1.c4)AND(rt0.c2)))OR(rt0.c0))) FROM rt0, rt1 WHERE (LOWER(DISTINCT 9.7239895E7 COLLATE BINARY)); -- 0ms;
SELECT (((rt1.c3, rt0.c0, rt1.c4)) NOT BETWEEN ((LIKE(rt0.c3, rt0.c0, ','), (+ (rt0.c0)), (rt0.c3 IN ()))) AND ((rt1.c0 COLLATE BINARY, '33999207' COLLATE BINARY, vt0.c1))) FROM rt1 WHERE (((CAST(0.9381793649388805 AS REAL)) IS TRUE)) LIMIT 433871321 OFFSET -2038066316;SELECT DISTINCT ((((rt1.c4)/(rt1.c4)))IS(NULLIF(vt0.c1, vt0.c0))) FROM rt1;SELECT DISTINCT SUM((~ (rt1.c1))) FROM rt0, vt0, rt1 WHERE (((((x'')) NOT BETWEEN (('ZW')) AND ((NULL))) IN (json_extract(NULL, 0.8591082396787372), ((((((((x'')AND(NULL)))OR(x'a3bc')))OR(0x1a5047e6)))OR(0.9461604781439408))))); -- 0ms;
SELECT ALL ((((rt0.c2) BETWEEN (rt1.c3) AND (rt0.c1)))IS NOT(CASE rt1.c0  WHEN rt1.c0 THEN rt0.c1 ELSE vt0.c0 END)), ((rt1.c3 COLLATE BINARY) BETWEEN ((((rt0.c0))>=((vt0.c0)))) AND (rt0.c1 COLLATE NOCASE)), ((((rt0.c3) NOT BETWEEN (rt1.c3) AND (vt0.c1)))%((- (vt0.c1)))) FROM rt1, rt0, vt0 GROUP BY ((CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END)-(((rt0.c3)<=(vt0.c0)))); -- 1ms;
SELECT DISTINCT CAST(NULL AS REAL) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((((CASE vt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c3 END)OR(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt0.c1)))))AND(((rt1.c3) NOTNULL))) FROM vt0, rt1, rt0 WHERE (CASE WHEN ((x'') NOT NULL) THEN ((0.3949701697241885)*(0.23102339155948093)) ELSE ((((((((((((0.9973353108128281)OR('-885142682')))AND('')))OR(0.9140126906747147)))OR(7.9710767E7)))OR(x'd1f4')))OR('-684590782')) END); -- 0ms;
SELECT ALL CASE ((rt0.c1) NOT BETWEEN (0.8032046738602301) AND (rt0.c3))  WHEN ((rt0.c0) ISNULL) THEN ((vt0.c0) NOT BETWEEN (0.4910767437162872) AND (rt0.c3)) ELSE vt0.c1 COLLATE NOCASE END FROM vt0, rt0; -- 0ms;
SELECT ALL (+ (CASE rt1.c4  WHEN rt0.c1 THEN rt1.c4 END)), ((((rt0.c0 COLLATE BINARY)AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))AND(HEX(DISTINCT rt1.c2))), ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END)OR(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt0.c3)))))OR(rt1.c0)) FROM rt0;SELECT DISTINCT ((((rt1.c3)+(rt0.c2))) BETWEEN (rt0.c2) AND (((rt0.c0)<=('-1590618838')))) FROM rt1 WHERE (((CAST('-129227998' AS NUMERIC)) IS FALSE));SELECT (5.33159156E8 IN ((((rt0.c2))<=((rt1.c1))))) FROM vt0, rt1, rt0 WHERE (CASE WHEN '-857337596' COLLATE NOCASE THEN CASE 0.2634833993096135  WHEN x'' THEN 0.45365202302331153 WHEN NULL THEN 0xffffffffedd0a012 WHEN '-1628533868' THEN x'ee7e' ELSE '1061569072' END END); -- 0ms;
SELECT DISTINCT ((CASE rt1.c1  WHEN 0.4193386882956409 THEN rt1.c4 ELSE rt0.c1 END) ISNULL) FROM rt1;SELECT (NOT (0.4182908297062917)) FROM rt0 LIMIT 476694581; -- 0ms;
SELECT CAST(CAST(rt1.c3 AS TEXT) AS INTEGER) FROM vt0, rt1, rt0 WHERE (CAST((NOT (0.3607990871605672)) AS BLOB)); -- 0ms;
SELECT ALL ('311025986' IN ()), ((((4.76694581E8) ISNULL)) NOT NULL), 'e*' FROM vt0, rt0 WHERE (((((((((((NULL)AND(x'')))OR(0.6372267405079036)))AND('rA')))AND(NULL))) IS TRUE)); -- 0ms;
SELECT (CAST(NULL AS REAL) IN ()) FROM rt0, rt1; -- 0ms;
SELECT ALL CASE (vt0.c0 IN ())  WHEN ((((rt1.c1)AND(rt0.c2)))AND(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c4 ELSE x'' END THEN ((rt1.c2)LIKE(rt1.c0)) WHEN MIN(rt0.c0) THEN ((((rt1.c3)AND(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c3)) END, ((((rt1.c2)>=(rt1.c4)))<(LOWER(DISTINCT rt0.c0))), vt0.c1 FROM vt0, rt1, rt0; -- 1ms;
SELECT DISTINCT COUNT(vt0.c1) OVER () FROM vt0 WHERE (((((((x'')AND(0.35871667404165364)))OR(0.04453027266846199)))%((NOT (x'8cdc8f79'))))); -- 0ms;
SELECT ((((rt0.c3, rt1.c4, rt1.c0)) BETWEEN ((rt1.c0, rt1.c3, vt0.c1)) AND ((rt0.c2, rt1.c1, rt0.c1))) IN (rt1.c1 COLLATE BINARY, HEX(rt1.c4))) FROM rt1 GROUP BY ((CAST(rt0.c0 AS BLOB))=(((((((((rt1.c3)OR(rt0.c3)))OR(0X4ec37281)))AND(rt1.c0)))OR(rt0.c2)))) HAVING (NOT (((rt1.c0)||(rt1.c2)))) LIMIT -885142682 OFFSET -1769700855;SELECT (('-2073289408' COLLATE BINARY)-((((rt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c3))))), CASE WHEN TYPEOF(DISTINCT rt1.c1) THEN CASE WHEN rt1.c3 THEN rt1.c1 ELSE '' END ELSE ((rt1.c0) NOTNULL) END, ((((vt0.c0)AND(vt0.c1)))OR(rt1.c1)) COLLATE NOCASE FROM vt0, rt0 WHERE ((~ (((0Xffffffffa44b730f) BETWEEN (0.31909314352460394) AND (0Xfffffffff8d729a3)))));SELECT ALL ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (0.7030441192368424) AND (((rt0.c3)<(rt1.c1)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt1.c2))<=((rt1.c1)))) ISNULL) FROM vt0 WHERE (LIKELY(DISTINCT UNICODE('-1428111991')));SELECT ((((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))) BETWEEN ((- (rt0.c1))) AND (((rt1.c2) NOTNULL))), (((x'd26b' IN (rt1.c1)))OR(0.4841623037815842)), (NOT (rt1.c0 COLLATE RTRIM)) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(rt1.c1 COLLATE RTRIM AS INTEGER) FROM rt1 WHERE ((+ (CAST('476694581' AS BLOB)))) GROUP BY (((vt0.c0))>=((NULL))) COLLATE RTRIM, CAST((((rt1.c3))<((rt1.c2))) AS TEXT), CAST(((rt0.c1)<(rt1.c3)) AS REAL) HAVING (- (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3))));SELECT CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN rt1.c4 THEN rt0.c2 ELSE rt1.c1 END COLLATE BINARY FROM rt0, vt0 WHERE (CAST((0.13231686819977373 IN (NULL, NULL)) AS NUMERIC));SELECT ALL (~ (NULL)), (((((+ (rt1.c2)))AND((+ (rt0.c3)))))AND(AVG(rt1.c0))), NTILE(((((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2)))!=(CAST(rt1.c2 AS REAL)))) OVER () FROM rt1, rt0, vt0 WHERE ((CASE NULL  WHEN '-817655008' THEN NULL END IN ()));SELECT ((('^6﬋(ok_/]')) NOT BETWEEN ((rt1.c2 COLLATE BINARY)) AND ((UPPER(rt1.c0)))) FROM rt0 WHERE (CAST((((NULL)) BETWEEN ((NULL)) AND ((NULL))) AS NUMERIC));SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS BLOB)) FROM rt1, rt0 WHERE ((((((0xffffffffca06c6ad, -1.29227998E8, 0.3571784000604682, -1034820306, 0.5088595513752144))<>(('e*', '', -5.78094325E8, '-572538642', '-817655008')))) BETWEEN (((NULL) BETWEEN (0.015762623917813134) AND (0.7923332417573473))) AND (LOWER(0.2634833993096135))));SELECT ((((((rt1.c3)AND(rt1.c4)))OR(rt1.c2)))AND((rt0.c0 IN (rt1.c3, rt1.c0, rt0.c3)))) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL COUNT(*), ((CASE rt0.c0  WHEN rt1.c3 THEN rt1.c1 END) NOT BETWEEN ((rt1.c1 IN ())) AND (rt1.c1)), ((CASE WHEN 0Xffffffff86859374 THEN rt1.c4 ELSE rt0.c2 END)*(((NULL)<(rt1.c4)))), -7165543, vt0.c1 FROM rt1, rt0, vt0 WHERE ((((((((NULL)) NOT BETWEEN (('tࠝ+^')) AND ((0.47780427451036434))))OR((x'' IN ()))))OR(((x'') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)IS NOT(rt0.c3))) NOT BETWEEN (((rt0.c3)IS(315685241))) AND (rt0.c2)), 1.000192412E9, (((((((rt1.c2))<((rt0.c0))))OR(((rt0.c2)<<(rt1.c0)))))AND(PRINTF(vt0.c0, rt1.c1, vt0.c0, '-1853781762', rt1.c2, 0.9368210572464588, rt1.c2))) FROM vt0 WHERE (CASE 0xffffffffe846b544  WHEN -699573068 THEN '-1802822118' END COLLATE RTRIM);SELECT DISTINCT ((CAST(rt1.c2 AS BLOB)) NOT NULL) FROM rt1, rt0; -- 0ms;
SELECT CAST(CASE WHEN rt1.c4 THEN rt0.c2 ELSE vt0.c0 END AS BLOB) FROM rt1 ORDER BY ((((vt0.c0) BETWEEN (rt0.c3) AND (rt1.c3))) NOT BETWEEN (TRIM(DISTINCT vt0.c1, rt1.c3)) AND (((rt0.c0)IS NOT(rt0.c0)))) DESC  NULLS FIRST, ((rt1.c4) NOTNULL)  NULLS LAST;SELECT ALL COUNT(*), (NULL COLLATE BINARY IN ()), rt0.c3 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c2)AND(NULL))) NOT BETWEEN ('765614361') AND (((rt0.c3)||(vt0.c1)))), ((rt0.c3)OR((~ (rt1.c2)))), CASE WHEN ((rt1.c1) IS TRUE) THEN x'' ELSE ((rt1.c2)&(vt0.c1)) END FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<<(x'')), CAST(rt1.c4 COLLATE NOCASE AS INTEGER), ((((rt0.c0)>(rt0.c1)))|(MAX(rt0.c2))) FROM rt0 WHERE (('YH4i%' IN (('1036950625' IN (NULL)))));SELECT CASE WHEN ((vt0.c0) NOTNULL) THEN SQLITE_VERSION() WHEN SUM(rt1.c1) THEN ((vt0.c0)+(NULL)) WHEN x'' THEN '0.29868065146929246' WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c3)<(rt0.c1)) WHEN IFNULL(rt1.c2, '-984235489') THEN (rt0.c3 IN ()) END FROM vt0 WHERE (((((x'1316')%('0.1824532496311927')))>=(((321077352) IS FALSE))));SELECT DISTINCT (((vt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c4))) COLLATE NOCASE, (((((vt0.c0, rt0.c3, rt1.c0))<((NULL, rt1.c0, rt1.c2))))==(rt1.c3 COLLATE RTRIM)), ((((vt0.c1) NOTNULL))>>('-905525587')) FROM vt0 WHERE ('' COLLATE NOCASE) GROUP BY ((CASE rt0.c3  WHEN rt1.c3 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c4 END) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((~ (1.19601868E8)))), ((((rt1.c2)<=(0.8190862481082275))) BETWEEN (((rt0.c2) NOT NULL)) AND (CASE rt1.c0  WHEN rt0.c2 THEN vt0.c0 END)), ((rt1.c4 IN ()) IN ());SELECT ALL (((((rt0.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))GLOB(((rt0.c1)%(rt1.c4)))), ((0.8108609365155801 COLLATE RTRIM) IS TRUE), SUM(vt0.c1) OVER () FROM rt1 WHERE (((CAST(x'' AS INTEGER)) NOT NULL)) ORDER BY ((CAST(vt0.c1 AS BLOB)) BETWEEN (((rt0.c3) NOT NULL)) AND ((((rt1.c1, rt0.c3, rt1.c4))=((rt1.c3, vt0.c0, rt0.c0))))) ASC;SELECT DISTINCT TYPEOF(CASE rt0.c3  WHEN rt1.c4 THEN rt0.c3 ELSE rt0.c0 END), rt1.c3, ((((rt0.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) IN ()) FROM rt1 WHERE (TYPEOF(((0.021477875511318967) BETWEEN (x'') AND (NULL))));SELECT ALL json_type(((rt0.c3)IS(rt0.c2))), CAST(((vt0.c0) NOT NULL) AS TEXT), (((rt0.c1, rt1.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c3 END, (('118826481')!=(rt1.c4)), NULL)) AND (((rt0.c3 IN (vt0.c0)), TRIM(DISTINCT rt0.c3), (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c4)))))) FROM rt0, rt1, vt0 GROUP BY '' HAVING ((((4.33871321E8) BETWEEN (rt1.c3) AND (rt1.c4)))+(GROUP_CONCAT(0.35871667404165364))) LIMIT 989782512 OFFSET 1321431681; -- 1ms;
SELECT DISTINCT 0.6046688380373542 FROM rt0, vt0, rt1; -- 0ms;
SELECT CAST((((NULL, rt0.c3, rt1.c2))>((rt1.c0, rt1.c1, rt0.c2))) AS REAL), ((((rt1.c4) NOTNULL)) NOT BETWEEN ((('-%<+FQ+U') NOT BETWEEN (rt0.c1) AND (rt1.c0))) AND (CAST(rt1.c1 AS TEXT))), ((rt1.c2) NOT BETWEEN (((rt0.c2)GLOB(rt0.c2))) AND (((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)))) FROM vt0;SELECT DISTINCT CASE WHEN MIN(rt1.c1) THEN ((rt0.c2)<=(rt0.c3)) WHEN (rt1.c0 IN ()) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt1.c4)) WHEN (+ (rt0.c2)) THEN vt0.c1 COLLATE RTRIM ELSE ((rt1.c0) NOTNULL) END FROM rt1, rt0 CROSS JOIN vt0 ON (((vt0.c1, rt1.c3, rt1.c1)) BETWEEN ((((((rt1.c3)AND(rt0.c1)))OR(rt0.c2)), ((vt0.c1)LIKE(vt0.c1)), (rt1.c2 IN ()))) AND ((((vt0.c1) ISNULL), ((((((((-2.93065859E8)OR(rt1.c4)))AND(rt1.c0)))OR(vt0.c1)))OR(vt0.c1)), ((((rt1.c3)AND(rt1.c0)))OR(rt0.c3))))) WHERE (COALESCE(('-902578567' IN ()), x'')); -- 0ms;
SELECT ALL ROUND((rt0.c2 IN ()), ((((0Xffffffffa8a7da75)AND('-1277304122')))OR(rt1.c2))) FROM rt1, vt0 WHERE ((((x'' IN (0xffffffffd716c278, x'')))*((((NULL)) BETWEEN ((x'')) AND (('-1360795926')))))) LIMIT -813973257; -- 0ms;
SELECT ALL x'eb0e' FROM rt1 WHERE (((CASE -6.39213079E8  WHEN -1304834356 THEN NULL WHEN NULL THEN x'' WHEN NULL THEN NULL ELSE NULL END) BETWEEN (CASE '356580216'  WHEN x'' THEN '' END) AND ((('s\') NOTNULL)))); -- 0ms;
SELECT DISTINCT rt1.c2, CAST(((rt0.c3)<<(vt0.c1)) AS NUMERIC), NULL FROM vt0, rt0, rt1; -- 0ms;
SELECT '-1034820306', SUM(rt1.c4) OVER (), NULL FROM rt0, rt1 WHERE (0x3f464230); -- 0ms;
SELECT ALL ((((vt0.c1)IS NOT(rt1.c3))) BETWEEN (CAST('' AS REAL)) AND (((((rt1.c0)OR(vt0.c1)))OR(rt1.c3)))), (('-1133851374') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((0Xffffffffd731f942 IN ()))), (((COUNT(*)))>=(((vt0.c1 IN ())))) FROM rt1, vt0, rt0 WHERE (((((NULL) NOT BETWEEN ('765614361') AND (x''))) NOTNULL)); -- 1ms;
SELECT (~ ((NOT (rt1.c0)))) FROM rt0, rt1 WHERE (CASE WHEN ('71195090' IN ('478113659')) THEN (0.9626808571495047 IN ()) END); -- 0ms;
SELECT (~ ((rt1.c3 IN ()))) FROM rt1, rt0, vt0 GROUP BY ((TYPEOF(rt1.c4)) ISNULL), ((-606571864) BETWEEN (((rt0.c2) BETWEEN (rt1.c3) AND (vt0.c0))) AND (rt0.c2)), ((((CASE NULL  WHEN NULL THEN rt1.c1 WHEN rt1.c3 THEN '.{' WHEN rt1.c3 THEN rt1.c0 END)OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0)); -- 0ms;
SELECT (((rt0.c3, rt1.c1, rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS INTEGER), ((rt1.c4) IS FALSE), ((rt0.c0)IS(rt1.c0)))) AND ((rt0.c1 COLLATE BINARY, ((vt0.c0)/(rt0.c3)), CAST(x'' AS TEXT)))), LAG(CASE rt1.c1 COLLATE RTRIM  WHEN ((((rt1.c2)OR(rt0.c0)))OR(rt0.c1)) THEN (- (rt1.c1)) END, rt1.c4, (((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) OVER (), ((vt0.c0 COLLATE RTRIM) NOT NULL), ((4.25887778E8)<((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt0.c2))))), ((rt1.c1) BETWEEN (((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)))AND(0x19628822)))OR(rt0.c3))) AND (rt0.c3)) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT ((('F')==(vt0.c1)) IN ()), (- (json(rt0.c3))), TRIM(DISTINCT rt1.c0 COLLATE NOCASE) FROM rt0 WHERE (LAST_INSERT_ROWID());SELECT DISTINCT CASE WHEN vt0.c0 THEN rt1.c1 ELSE rt1.c2 END COLLATE NOCASE, ((((((((((((((((((vt0.c0) IS FALSE))OR(((rt1.c4)AND(rt0.c2)))))OR(((0.9140126906747147)IS(rt1.c3)))))OR(((vt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)))))OR(((rt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(LOWER(rt1.c0))))AND(rt1.c0 COLLATE BINARY)))AND(((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c2)))))AND(((rt0.c3)*(rt0.c3)))), TOTAL((NOT (rt1.c3))) FROM rt0, rt1 WHERE (CAST((('-756452739')IS(x'')) AS NUMERIC));SELECT ALL rt0.c0, CASE WHEN (~ (rt0.c0)) THEN MAX(rt1.c2) WHEN rt1.c2 THEN TOTAL(rt1.c2) WHEN DATE(rt0.c3, vt0.c0, rt0.c0) THEN (rt0.c0 IN ()) END, TOTAL(CAST(rt1.c4 AS NUMERIC)), x'' COLLATE BINARY, CASE WHEN ((((rt1.c3)OR(rt0.c1)))OR(rt1.c2)) THEN x'' END FROM rt1, rt0;SELECT ((vt0.c1 COLLATE NOCASE)||(((rt0.c2) NOT NULL))) FROM rt0;SELECT ALL (((+ (vt0.c0)))&((rt1.c3 IN ()))) FROM rt0, vt0, rt1 WHERE (CASE (- (NULL))  WHEN (x'' IN ()) THEN COALESCE(x'', '414972574') ELSE (x'' IN ()) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN vt0.c1 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c2 END) OVER () FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT '7	hQh', (- (rt1.c1 COLLATE BINARY)), ((((((rt0.c1)>>(rt1.c0)))AND(((rt1.c0)<<(rt1.c3)))))AND(MAX(0.7895019922368927))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS BLOB) COLLATE BINARY FROM rt1, rt0; -- 0ms;
SELECT DISTINCT TOTAL(0.642870375963105) OVER () FROM rt1, rt0, vt0 WHERE (((((0xffffffffe51f1fcd) NOT NULL))GLOB(x'' COLLATE NOCASE))) GROUP BY rt1.c4 COLLATE RTRIM ORDER BY (((rt0.c1) IS TRUE) IN ()) DESC  NULLS LAST, CASE ((rt1.c3)IS(rt0.c3))  WHEN ((((vt0.c1)AND(rt0.c3)))AND(rt1.c3)) THEN ABS(vt0.c1) ELSE (rt0.c0 IN ()) END  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt1.c3))>((rt0.c2))) COLLATE NOCASE FROM vt0, rt0;SELECT DISTINCT (((((NULL, rt1.c0, rt1.c1))<((vt0.c0, vt0.c0, 'l nl,t\'))))+(AVG(rt0.c2))) FROM rt0 WHERE ((NOT (CASE 0.10439520275863379  WHEN x'd3fc' THEN ',\3/鱡HHo' END)));SELECT AVG(CASE rt0.c2  WHEN x'' THEN rt1.c2 ELSE rt1.c4 END) FROM rt0, rt1 WHERE (((CASE x''  WHEN NULL THEN '1078794882' WHEN '-344125556' THEN 0.9964249405746123 WHEN '1022804680' THEN NULL END)=((x'2a851d56' IN ())))); -- 0ms;
SELECT ALL ((((((rt0.c3)OR(rt0.c1)))AND(' ~潻῍n>M'))) BETWEEN (((rt1.c1) NOTNULL)) AND ((((rt1.c4))>=((vt0.c1))))), x'' COLLATE BINARY, rt1.c3 COLLATE NOCASE FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (((rt1.c0)LIKE(NULL)) IN ()) FROM rt0 WHERE ('kb') LIMIT -1090586309 OFFSET -578094325; -- 0ms;
SELECT DISTINCT COUNT(SQLITE_SOURCE_ID() COLLATE NOCASE) FROM rt0, vt0 WHERE (((((((NULL)AND(x'eabe5c08')))AND(0.08303058673468622))) NOTNULL)); -- 3ms;
SELECT ALL IFNULL(rt0.c1, ((rt1.c1)+(rt1.c3))), (((rt0.c2, rt1.c2, vt0.c1)) NOT BETWEEN ((CAST('-984235489' AS TEXT), (((rt1.c2))<=((rt1.c1))), (+ (0.3567688263409866)))) AND ((rt1.c2 COLLATE NOCASE, (((rt0.c3)) NOT BETWEEN ((0.39272447907507857)) AND ((rt1.c4))), CAST(vt0.c1 AS REAL)))), (- (rt1.c4)), CAST(CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c4 END AS REAL), (((rt1.c1)) NOT BETWEEN ((((((((((rt1.c1)OR(x'')))OR(rt0.c3)))OR(rt0.c0)))OR(rt1.c4)))) AND ((rt1.c0))) FROM rt0, rt1 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)AND(rt1.c0))  WHEN (rt0.c1 IN ()) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (NULL)) END WHERE ((NOT (((x'')<('2101462506'))))); -- 0ms;
SELECT DISTINCT (NOT (((rt1.c4) NOT BETWEEN (NULL) AND (rt0.c0)))) FROM vt0, rt0 WHERE ((+ (((((NULL)OR('269145680')))OR(x'')))));SELECT DISTINCT SUM(((vt0.c1) BETWEEN (rt1.c2) AND (rt0.c3))) FILTER(WHERE ((x'501b')LIKE(rt0.c3)) COLLATE RTRIM) OVER () FROM vt0, rt1 WHERE ((((0xffffffff84533c28))==((NULL))) COLLATE BINARY);SELECT DISTINCT ((rt1.c2 COLLATE BINARY)||(CASE rt0.c3  WHEN rt0.c2 THEN 0Xffffffffa2edeec0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c1 END)) FROM vt0 WHERE (((CASE 'M0'  WHEN x'' THEN '1060803374' ELSE NULL END)%(((0.7763978349763452) BETWEEN (NULL) AND (0.1254210553774865))))) LIMIT 1061569072 OFFSET 1061976371;SELECT ALL TOTAL(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c3))) FROM rt0 WHERE (((((((((((((((1.62854371E9)LIKE(NULL)))OR((((NULL, '', NULL))==((-1469378208, x'b1ba', x''))))))OR(SUBSTR(x'', '鮷zb\rPF^\n'))))OR((+ (NULL)))))OR(CASE 'DI㔡6_Ep<'  WHEN '-1610238086' THEN x'' ELSE 0.3607990871605672 END)))AND(((('Na')) NOT BETWEEN ((NULL)) AND ((NULL))))))AND(',P' COLLATE NOCASE)));SELECT DISTINCT CAST((((rt0.c2, vt0.c0, rt0.c3))==((rt0.c1, rt0.c3, 0.8882857609985906))) AS INTEGER), LIKELY(DISTINCT (((('-453011889')AND(vt0.c0)))AND(rt0.c2))), (CASE rt0.c2  WHEN rt1.c4 THEN rt0.c1 END IN ()) FROM rt0, rt1, vt0 WHERE (((x'')-(-650041967)) COLLATE RTRIM) LIMIT -790454045; -- 0ms;
SELECT ALL ((0.8498494420384577 COLLATE BINARY)<(('1707041488' IN ()))) FROM vt0, rt1 WHERE ((((NULL))>((0.8498494420384577))) COLLATE BINARY); -- 0ms;
SELECT (DATE(NULL, rt0.c0, x'99bd', rt0.c2, rt0.c3) IN ()) FROM rt0, rt1, vt0; -- 0ms;
SELECT ((rt0.c3 IN ()) IN (NULL)) FROM rt0, rt1 WHERE ((- (x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN 0xffffffff8f80081d THEN rt0.c2 END AS TEXT), (((0.9175659206133434 IN (rt0.c1)))||(((((rt1.c2)OR(rt0.c2)))AND(rt0.c3)))), ((rt1.c3) ISNULL) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL (- (((rt1.c1)||(rt0.c2)))) FROM vt0 WHERE (NULL);SELECT ALL ((((rt1.c1)=(rt0.c3))) NOT BETWEEN ((((rt1.c3, rt0.c0, rt0.c2)) BETWEEN ((rt1.c0, rt1.c0, rt1.c4)) AND ((rt1.c0, rt1.c1, vt0.c1)))) AND (MIN(rt1.c1))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT((((rt1.c2)) NOT BETWEEN ((rt0.c2)) AND ((x'8323')))) OVER (), IFNULL(MAX(rt0.c3, NULL, rt0.c3, rt1.c1), load_extension(vt0.c0)), ((vt0.c0) NOT BETWEEN (((rt1.c0)>(rt0.c3))) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c1)))) FROM rt1, vt0, rt0 LIMIT 783625196;SELECT DISTINCT (((CAST(NULL AS INTEGER)))<>(((((x'')) BETWEEN ((rt1.c4)) AND ((rt0.c1)))))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c3)))OR((rt1.c3 IN ()))))AND(((((rt1.c3)AND(rt1.c0)))OR(rt1.c1)))) FROM vt0, rt1 WHERE (CAST(((((NULL)OR(x'')))AND(x'235e')) AS REAL)) ORDER BY (((rt1.c4, x'', rt1.c2)) BETWEEN ((((rt0.c1)>(rt1.c1)), CAST(rt1.c2 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (0.48800909315545893) AND (rt1.c3)), vt0.c0 COLLATE BINARY, (((rt1.c2, rt0.c2, rt1.c3))>=((vt0.c1, rt1.c3, rt1.c1)))))) DESC  NULLS FIRST;SELECT DISTINCT ((LIKELY(rt1.c2)) ISNULL), ((((rt1.c3) BETWEEN ('0.23102339155948093') AND (rt1.c4)))/(((rt1.c3) IS TRUE))), ((COUNT(*)) IS TRUE) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)=(-813973257)) AS REAL) FROM vt0, rt0 LIMIT -629228282 OFFSET 266169380; -- 0ms;
SELECT DISTINCT IFNULL(LENGTH(vt0.c0), (vt0.c0 IN (rt0.c0))) FROM vt0 WHERE (CAST(((('kXh2Eb᪳r'))>((NULL))) AS BLOB));SELECT DISTINCT ((((((vt0.c0)>=(rt1.c0)))OR(((rt1.c4) IS TRUE))))OR((rt0.c0 IN (rt1.c3)))), ((((((((((((((x'') NOT BETWEEN (vt0.c1) AND (rt1.c2)))OR(NULL)))OR((vt0.c0 IN ()))))AND((~ (rt0.c3)))))OR(((rt1.c3) IS FALSE))))OR(((((0.3959383425693037)OR(rt1.c0)))AND(rt0.c0)))))AND('')), STRFTIME(((rt0.c1)OR(rt1.c2)), (rt1.c2 IN ()), ((rt1.c4) NOT BETWEEN (0.4841623037815842) AND (rt1.c0))) FROM rt0, vt0, rt1 WHERE (CAST(NULL COLLATE BINARY AS TEXT)); -- 1ms;
SELECT rt1.c4 FROM rt1 WHERE ((+ (CASE 0X59c9d2fe  WHEN x'' THEN 0.7316105223040202 END))); -- 0ms;
SELECT ((((rt0.c0)*(rt1.c1))) BETWEEN (((((rt0.c3)OR(rt1.c3)))OR(rt0.c2))) AND (((rt1.c1)=(rt1.c2)))) FROM rt1, vt0, rt0 WHERE (CASE WHEN CAST(0.5505237214960528 AS REAL) THEN (- (x'')) ELSE ((NULL)*('T+X18E(')) END); -- 0ms;
SELECT ((LOWER(rt1.c3)) NOT BETWEEN (((rt1.c1)||(rt1.c1))) AND (NULL COLLATE NOCASE)) FROM vt0 WHERE (NULL) GROUP BY IFNULL((('-817655008') ISNULL), ((rt1.c3) NOT NULL)), NULL, (((((((((((rt0.c3)AND(vt0.c1)))AND(rt1.c0)))AND(rt0.c2)))OR(vt0.c1))))<((CHANGES())));SELECT DISTINCT ((((rt0.c3)<>(rt0.c3)))>>(((rt0.c1)=(rt0.c0)))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT '' FROM vt0, rt1 WHERE (((((NULL) NOT BETWEEN ('0.3567688263409866') AND (x''))) BETWEEN (((((((((0.015534773067177321)AND('7-')))AND(x'')))OR(x'')))OR(NULL))) AND ('127197658'))); -- 2ms;
SELECT ALL COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0 NOT INDEXED, rt1, vt0 WHERE (((('L}?w1^G~' IN ())) NOTNULL)); -- 1ms;
SELECT ((((vt0.c1)AND((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))))OR(rt0.c3 COLLATE NOCASE)) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT SUBSTR(rt1.c0, rt1.c3) COLLATE BINARY, IFNULL(DISTINCT CAST(rt1.c0 AS REAL), ((rt0.c2)<=(rt0.c2))), vt0.c1 FROM rt0, rt1, vt0 WHERE (((- (0xffffffffc7517190)) IN (((NULL) ISNULL), (~ (NULL))))); -- 0ms;
SELECT ALL CAST(((-8.56627956E8) NOT NULL) AS TEXT) FROM rt0 WHERE ((((+ (x''))) NOT BETWEEN (0.03550609105913416) AND ((x'6dd9' IN ())))); -- 0ms;
SELECT DISTINCT RANK() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND (((+ (rt0.c0))) NOTNULL) FOLLOWING EXCLUDE TIES) FROM rt0, rt1 GROUP BY ((vt0.c1)%(rt0.c1)) COLLATE BINARY HAVING ((IFNULL(vt0.c1, rt0.c1))>=((NOT (rt1.c2))));SELECT DISTINCT vt0.c1 FROM rt1, vt0 WHERE ('1502867909'); -- 0ms;
SELECT ((rt0.c1)GLOB('-1465394571')) COLLATE NOCASE, (+ (478113659)), (((rt1.c1 IN ())) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(rt1.c2) FROM rt0, vt0, rt1 WHERE ((((x'0b17', x'3a20', 1451225736)) NOT BETWEEN ((((-1398305485)&(0X65b604f4)), LIKELIHOOD(NULL, 0.5007656145329956), x'351d' COLLATE NOCASE)) AND ((((0.18814424141944763) ISNULL), ((((((((0.6871163650184671)OR(-344125556)))OR(x'')))AND(0.15585852294132863)))OR('-1996558042')), (('{')IS(NULL)))))) ORDER BY ((rt0.c1)-(rt1.c4)) COLLATE RTRIM  NULLS LAST LIMIT -1068298995; -- 0ms;
SELECT ALL ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1) BETWEEN (rt1.c0) AND (vt0.c1))) AND ((((vt0.c1, rt0.c1, rt1.c1))<((rt0.c1, rt0.c1, rt1.c0))))) FROM vt0, rt0, rt1 LIMIT 1168770258; -- 0ms;
SELECT DISTINCT CASE CAST(rt1.c2 AS INTEGER)  WHEN (((rt0.c1, rt0.c0, rt0.c0))<>((vt0.c1, rt1.c0, '-1277304122'))) THEN ((rt0.c0)OR(rt1.c2)) ELSE ((x'') NOT NULL) END FROM rt1, vt0, rt0; -- 1ms;
SELECT DISTINCT ((((((((((((((rt1.c0)OR(rt0.c3)))OR(rt1.c4)))OR('-885142682')))OR(rt0.c0)))AND(rt0.c1)))AND(rt1.c3)))==((((rt1.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c0))<=((rt1.c4, vt0.c1, vt0.c0, rt1.c0, rt0.c1))))) FROM rt0, vt0;SELECT ALL CASE (((('-881670592')AND(rt1.c1)))AND(rt1.c0))  WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((x'fc3c')AND('￿>yU>t)')))AND(rt1.c4)))OR(rt0.c1)))AND(rt1.c2)) ELSE ((vt0.c1)<(rt1.c0)) END FROM rt1, vt0, rt0; -- 0ms;
SELECT AVG('텵/') OVER () FROM vt0; -- 0ms;
SELECT x'', (((((rt0.c3)AND('-2041833346')))OR(rt0.c2)) IN (((((((((rt1.c3)AND(rt0.c0)))OR(rt0.c0)))AND(rt1.c1)))OR(rt1.c1)))), (((((rt1.c1))<((rt0.c0)))) NOTNULL) FROM rt1, vt0 WHERE ((x'' IN ()));SELECT DISTINCT (((((rt1.c0) BETWEEN (rt1.c0) AND (vt0.c0))))<=((((rt1.c1)IS(rt1.c3))))) FROM rt1, rt0 WHERE (IFNULL(((NULL)-(0.06949129375410112)), (((0.8811654620751698))<>(('FPQ')))));SELECT CAST(((vt0.c0)OR(x'')) AS NUMERIC) FROM vt0, rt0 GROUP BY json(rt1.c0), ((((((rt1.c2) BETWEEN (rt1.c4) AND (rt0.c2)))OR(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))))AND(CAST(rt0.c1 AS TEXT))), (NOT (rt0.c0 COLLATE NOCASE)), (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))/((rt0.c0 IN (rt0.c3)))), x'';SELECT ALL vt0.c1, COUNT(((((rt1.c3)OR(NULL)))OR(rt0.c3)) COLLATE RTRIM), rt1.c0 FROM rt1 WHERE (CASE WHEN ((-1034658728)LIKE(0Xffffffff9b4e399e)) THEN 0.5644914465821128 COLLATE NOCASE WHEN ((((NULL)OR(-6.39213079E8)))AND(NULL)) THEN (NOT (-699573068)) WHEN (('-7165543')==(NULL)) THEN ((0.8593023775677378) IS TRUE) END);SELECT ALL (((((((((NOT (rt0.c1)))AND(((rt1.c1)%(rt1.c1)))))OR((rt0.c2 IN ()))))AND(((rt1.c2) NOTNULL))))AND(SUM(vt0.c0))), x'ad046c5c', (((rt0.c2)) BETWEEN ((((rt0.c1)|(rt0.c1)))) AND ((rt1.c3))) FROM rt1, rt0 GROUP BY (((vt0.c0, rt1.c2, rt0.c1)) NOT BETWEEN ((vt0.c0, ((vt0.c0)|(rt1.c2)), rt1.c2 COLLATE NOCASE)) AND ((rt1.c2, (~ (rt1.c2)), NULL))) HAVING MIN(UNLIKELY(rt0.c1));SELECT '(' FROM vt0, rt0, rt1 WHERE (CASE WHEN ((0x248e4c75)||('441468902')) THEN (+ (NULL)) WHEN (~ (x'197e')) THEN (x'99f2' IN (-2059246769, NULL)) WHEN (x'' IN (0.8549658698681963, x'')) THEN NULL COLLATE BINARY END) GROUP BY (((((((rt1.c1)AND(rt1.c4)))AND(rt1.c0))))!=((((rt0.c2) IS TRUE)))) HAVING CASE ((rt1.c2)%(rt0.c1))  WHEN (- (rt1.c4)) THEN CASE WHEN rt1.c2 THEN rt1.c3 END END LIMIT -813973257; -- 0ms;
SELECT ALL CASE ((((((((rt1.c4)OR(vt0.c1)))OR(rt0.c0)))OR(vt0.c1)))OR(vt0.c0))  WHEN CASE WHEN rt0.c3 THEN vt0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c2)) END FROM rt1;SELECT DISTINCT ((((((((((((AVG(rt1.c1))AND(rt1.c3)))OR(TOTAL(vt0.c0))))AND((rt0.c3 IN (rt0.c0)))))OR(CASE WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (NULL)))))OR(((rt0.c2)==(x'56d6')))) FROM vt0 WHERE (CAST(((NULL) BETWEEN (NULL) AND (NULL)) AS TEXT));SELECT ALL (((((rt0.c0) IS FALSE)))==((((rt0.c1)==(rt0.c1))))) FROM rt0; -- 0ms;
SELECT ALL (((rt1.c0)) NOT BETWEEN ((((0.289232178099723) IS FALSE))) AND ((MIN(rt0.c2)))), MIN((rt1.c1 IN (rt1.c1, vt0.c0))), AVG(((((rt0.c3)OR(vt0.c0)))OR(rt0.c0))) OVER () FROM rt0 LEFT OUTER JOIN vt0 ON rt1.c0 COLLATE NOCASE RIGHT OUTER JOIN rt1 ON CASE ((vt0.c1)&(rt1.c2))  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt1.c4 WHEN rt1.c2 THEN vt0.c0 END WHEN vt0.c1 THEN ((vt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)) WHEN ((((vt0.c0)AND(rt0.c1)))OR(-1034820306)) THEN ((((((((vt0.c0)AND(rt0.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c4)) END WHERE ((- (((0.28904838286443424)GLOB(-1.700483402E9)))));SELECT CAST((((rt0.c3))>=((rt1.c0))) AS TEXT), ((((rt1.c0) IS TRUE)) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c1)>>(rt1.c2)))), (((((((rt1.c3)OR(rt1.c1)))OR(rt0.c1))))<(((rt1.c1 IN ())))) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2)) BETWEEN ((CAST(rt0.c1 AS TEXT))) AND ((((rt1.c2) NOTNULL)))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT (+ (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c3)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ((((rt1.c2) ISNULL))>(((rt1.c2) BETWEEN (vt0.c0) AND (rt0.c1)))), ((0.9068975451207038 COLLATE BINARY) ISNULL), CASE COALESCE(rt0.c1, vt0.c1)  WHEN (- (-1.353875047E9)) THEN vt0.c0 COLLATE RTRIM WHEN LIKELY(DISTINCT rt1.c4) THEN ((rt1.c3)OR(rt0.c2)) WHEN CASE WHEN rt0.c0 THEN rt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c3 THEN rt1.c3 END THEN ((rt0.c2)&(rt1.c1)) WHEN TRIM(vt0.c1, ',kl뷈~') THEN ((vt0.c0)<>(vt0.c0)) WHEN rt0.c0 THEN rt1.c4 END FROM rt0, vt0, rt1 NOT INDEXED WHERE ((((((NULL)>(NULL))))>((((x'd99abefa') IS FALSE))))); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE 0.2777882711214298 END)%(rt0.c0)), MAX((~ (rt1.c2))), ((rt1.c1) NOT NULL), ((((((rt1.c0)>(rt1.c1)))AND(0.3541725687411851)))AND((rt0.c2 IN (rt1.c2)))), (((rt0.c0, rt0.c2, rt0.c3)) BETWEEN (((+ (rt0.c0)), ((rt1.c4) IS FALSE), (((rt0.c1, rt0.c3, 620812081))<=((rt0.c2, rt1.c2, rt0.c1))))) AND ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)), ((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)), CASE rt0.c3  WHEN rt0.c0 THEN vt0.c1 END))) FROM vt0;SELECT DISTINCT rt1.c2 FROM rt0 NOT INDEXED WHERE (CASE WHEN CAST(0.5675355282974618 AS INTEGER) THEN (x'' IN ()) ELSE ((NULL)>(0xffffffffe847317c)) END);SELECT DISTINCT (((((((rt0.c3, rt0.c2, rt1.c2, rt0.c2, rt1.c1))<>((rt0.c0, vt0.c0, rt0.c3, rt1.c2, NULL))))AND(CASE rt1.c3  WHEN rt1.c1 THEN '4\n' WHEN '-1068298995' THEN 0.16916076487900555 WHEN vt0.c0 THEN 0.28217687923961465 ELSE rt1.c3 END)))AND(rt0.c2 COLLATE NOCASE)) FROM rt0, rt1;SELECT DISTINCT CASE WHEN rt1.c2 THEN ((rt1.c4) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (0x2ddc8dfa) AND (rt0.c1)) THEN GROUP_CONCAT(rt1.c2) WHEN (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) THEN (+ (vt0.c1)) END, (~ (COUNT(rt1.c0))), CASE ((rt1.c2)=(rt1.c1))  WHEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt0.c3)) THEN CAST(NULL AS NUMERIC) WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)) THEN x'' WHEN CASE WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c1 END THEN ((rt0.c0)<>(rt0.c1)) ELSE ((vt0.c1)IS NOT(rt0.c0)) END FROM vt0, rt1;SELECT ALL ((((((rt0.c0)AND(NULL)))OR(rt1.c3))) NOT BETWEEN (MAX(vt0.c1)) AND ((rt0.c1 IN ()))) FROM rt0;SELECT ALL ((((rt1.c3)%(rt0.c1)))&(((rt1.c2) NOTNULL))) FROM vt0, rt0 WHERE (((IFNULL('-699573068', ''))>>(CAST(NULL AS TEXT))));SELECT DISTINCT CASE WHEN '1321431681' THEN CASE WHEN rt0.c1 THEN rt1.c3 ELSE rt0.c0 END END FROM rt1;SELECT DISTINCT ((((vt0.c1) NOT NULL))>>(((((((((rt0.c2)AND(rt1.c3)))AND('')))AND(rt1.c1)))OR(rt0.c2)))) FROM rt0, rt1, vt0; -- 5ms;
SELECT ALL IFNULL(rt0.c1 COLLATE NOCASE, TYPEOF(rt0.c1)) FROM vt0, rt1 WHERE ((('-1621826382') NOT BETWEEN ((('Y,഍%v8Hi') IS FALSE)) AND (((NULL)+('-276787525')))));SELECT DISTINCT (((((rt0.c0)AND(rt0.c0)))OR(rt1.c1)) IN ()), MIN(((rt0.c0)=('%+'))), (- (0Xfffffffffc494d33)) FROM vt0, rt0 LIMIT -1505685010; -- 0ms;
SELECT DISTINCT CASE (((rt0.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2)))  WHEN ((0xffffffff9cebe49f) BETWEEN (rt1.c1) AND (x'')) THEN (rt0.c1 IN ()) WHEN vt0.c1 THEN -519074252 WHEN ((((rt1.c3)OR(rt1.c4)))AND(rt1.c1)) THEN rt0.c0 COLLATE NOCASE END FROM rt0, vt0, rt1 GROUP BY CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) NOT NULL) AS INTEGER), ((COUNT(vt0.c1))AND(CASE WHEN rt0.c1 THEN '-1474186233' ELSE 0X25790d86 END)), (((+ (rt0.c1)))OR(CAST(rt1.c4 AS INTEGER))) FROM rt1 WHERE (((('42' IN ('4O')))GLOB(UPPER(0.15524024040428086))));SELECT DISTINCT AVG((rt0.c0 IN (x'dda8', rt0.c3))) OVER (), ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE rt1.c1  WHEN '-591033366' THEN rt1.c4 END)), (rt1.c1 COLLATE RTRIM IN ()) FROM rt0, vt0, rt1 WHERE (((((((((0X4e58185a)OR(0.161025272134541)))OR(' ][ }')))OR((+ (NULL)))))AND(CASE WHEN NULL THEN 0.25616160286144096 ELSE x'' END))); -- 0ms;
SELECT DISTINCT (((rt1.c3)>(rt0.c2)) IN ((((rt1.c0))>((rt1.c1))))) FROM rt1 WHERE (((CASE '1948662363'  WHEN 0.10602898680441186 THEN '-1471768117' WHEN x'' THEN '' WHEN '' THEN '' END) IS TRUE)) GROUP BY CASE rt1.c1  WHEN '' THEN rt1.c2 ELSE vt0.c1 END COLLATE NOCASE;SELECT DISTINCT CAST((~ ('1321431681')) AS NUMERIC), (- (CAST(vt0.c0 AS TEXT))), (vt0.c1 IN (rt1.c1, rt0.c3)) COLLATE RTRIM FROM vt0, rt0, rt1 ORDER BY json_valid((vt0.c0 IN ())), LIKELIHOOD((rt0.c0 IN ()), 0.2920176618672653) DESC; -- 0ms;
SELECT DISTINCT ((COUNT(rt1.c4)) IS FALSE) FROM vt0;SELECT DISTINCT COUNT(((rt0.c2) BETWEEN (rt0.c3) AND (NULL))), TYPEOF(rt0.c2), CASE vt0.c0  WHEN rt1.c4 THEN rt0.c2 WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (rt1.c2)) THEN ((rt1.c4) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN MIN(rt0.c0, rt0.c1) THEN CAST(rt1.c3 AS REAL) ELSE (((rt0.c2, rt1.c3, rt1.c4))==((x'', '6~tt_狔N㺗y', vt0.c0))) END, ((((rt1.c1) ISNULL)) IS TRUE), CASE ((rt1.c3)<>(rt0.c3))  WHEN CAST(rt1.c2 AS REAL) THEN UPPER(DISTINCT rt1.c0) WHEN (NOT (rt1.c0)) THEN ((rt0.c2)GLOB(0.13231686819977373)) WHEN ((rt1.c1)>(vt0.c1)) THEN (((rt0.c1, rt1.c3, vt0.c1, rt1.c1, NULL)) NOT BETWEEN ((rt1.c4, rt1.c0, x'', x'', rt1.c3)) AND ((rt1.c4, rt1.c2, rt0.c3, rt0.c1, 'Q*WU?U>'))) END FROM rt0, rt1 GROUP BY ((CAST(rt0.c2 AS TEXT)) IS TRUE), '', ((((((rt1.c3)AND(rt0.c3)))OR(rt0.c0)))>=((rt0.c1 IN ())));SELECT ALL (+ ('-1887434723')) FROM vt0, rt0 WHERE (CAST('1022804680' AS REAL) COLLATE RTRIM) GROUP BY NULL HAVING rtreenode(CAST(rt1.c0 AS BLOB), (+ (vt0.c0)));SELECT DISTINCT ((CASE rt0.c3  WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN '' WHEN rt0.c3 THEN rt1.c0 END)<(CAST(rt1.c3 AS TEXT))) FROM rt1;SELECT ALL ((rt1.c1) NOTNULL) COLLATE RTRIM, TOTAL(0X2283fbdf) OVER ( RANGE  UNBOUNDED PRECEDING), (NOT (rt0.c1 COLLATE NOCASE)), MAX(((rt0.c1)<(rt1.c0)) COLLATE RTRIM), COUNT(*) FROM vt0 WHERE ((- (UNLIKELY(DISTINCT x''))));SELECT CAST(((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)) AS BLOB) FROM rt0;SELECT DISTINCT CASE (((rt1.c3))<=(('-170265705')))  WHEN CASE WHEN rt1.c3 THEN rt0.c1 WHEN '-344125556' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END THEN (vt0.c0 IN (rt1.c4)) END FROM rt1, vt0, rt0 WHERE ((((1223416782)) NOT BETWEEN ((((0.9426933174299846)*(NULL)))) AND (((('qypo,Hk_')>=(x'')))))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt1, rt0, vt0 WHERE ((+ (('-1090586309' IN ())))) LIMIT 1330870221 OFFSET 1616061711; -- 0ms;
SELECT ((((rt1.c3)>>(NULL)))%(((rt1.c2)<<(0X7c5e550f)))) FROM vt0, rt1, rt0 WHERE ((('{') IS TRUE) COLLATE BINARY) LIMIT -1944928824 OFFSET 977617104; -- 0ms;
SELECT rt0.c1, CAST(CASE WHEN rt1.c1 THEN rt1.c3 END AS BLOB), ((TRIM(''))OR((~ (rt0.c3)))) FROM vt0 WHERE (CASE WHEN ((x'') ISNULL) THEN (((NULL))>((NULL))) END);SELECT ALL MAX(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0))), ((((rt0.c1) IS FALSE))!=(vt0.c1)), x'' FROM vt0 WHERE ((NOT (CASE 0.3475479884324477  WHEN '-547954320' THEN '1471400625' ELSE 0.611272019154126 END)));SELECT DISTINCT (('-410697039') NOTNULL) FROM rt1, rt0; -- 0ms;
SELECT ALL (~ ('64261374')), CAST(rt0.c3 AS NUMERIC), rt0.c3 FROM vt0, rt1, rt0 WHERE ((((('zw') ISNULL))|(LIKELY('\nO8&')))) GROUP BY CASE ((rt1.c2) IS TRUE)  WHEN TRIM(vt0.c0) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) ELSE ((rt1.c3)AND(rt1.c4)) END HAVING ((rt1.c0) NOT NULL) COLLATE BINARY LIMIT 988061650; -- 0ms;
SELECT ALL CASE CASE rt1.c4  WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c3 END  WHEN DATETIME(rt1.c2, rt0.c1, rt1.c0) THEN ((((rt1.c0)AND(rt0.c3)))AND(rt1.c2)) END FROM rt0, rt1 LIMIT -129227998 OFFSET 887612950; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c4 AS BLOB)) IS TRUE), CAST(((vt0.c0)<(rt1.c2)) AS REAL), (NOT (((((((((rt1.c0)OR(rt1.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))) FROM rt0, rt1, vt0 LIMIT -1512688680; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c3) ISNULL))) FROM rt1, rt0 ORDER BY ((ABS(x'237b'))==(COALESCE(DISTINCT rt0.c3, '0.7542185982764836'))) DESC  NULLS FIRST, ((((-541814257)OR(((rt0.c2) IS FALSE))))AND(COALESCE(rt1.c2, rt0.c1, rt1.c0, rt1.c1))) DESC  NULLS FIRST, ((rt1.c2 COLLATE BINARY) BETWEEN (((rt1.c2)%(rt0.c0))) AND (((rt0.c0)%(rt1.c4)))); -- 1ms;
SELECT (+ (((rt0.c3)IS(vt0.c1)))) FROM vt0, rt0, rt1 WHERE (TYPEOF('') COLLATE NOCASE) LIMIT -542694433 OFFSET -980666485; -- 0ms;
SELECT DISTINCT SUM((rt1.c3 IN (rt0.c1))) OVER () FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (- ((((0.7601254635101709))<=((rt1.c0))))) FROM rt1, vt0; -- 0ms;
SELECT DISTINCT 0.3959383425693037 FROM vt0, rt1, rt0 WHERE ((~ (x''))); -- 0ms;
SELECT DISTINCT x'3eb6' FROM rt0, vt0, rt1 WHERE (((((x'') IS FALSE)) BETWEEN (LIKE('-1610238086', '0.9164380784152841', 'Ⓗ')) AND (((('~YyZ,c9<W')) BETWEEN ((NULL)) AND ((x'6fcf')))))); -- 0ms;
SELECT ALL (((rt1.c2) ISNULL) IN ()), SUBSTR(((rt0.c2)<<(vt0.c0)), ((rt0.c3) IS TRUE)), (((((vt0.c0)*(rt1.c2))))>=(((((rt0.c3))>=((rt0.c0)))))), GROUP_CONCAT(((rt1.c3)<<(rt1.c4))) OVER (), (((rt1.c1) IS FALSE) IN ()) FROM rt1, rt0;SELECT ALL CAST(((vt0.c0) NOT BETWEEN (rt1.c4) AND (rt1.c4)) AS BLOB), (((vt0.c0)) NOT BETWEEN ((((rt1.c2)%(rt1.c4)))) AND ((rt1.c2))), (rt1.c3 COLLATE NOCASE IN ((- (x'e83f7eae')), CAST('-941933902' AS NUMERIC))) FROM vt0, rt0;SELECT DISTINCT ((+ (rt1.c4)) IN ()) FROM rt0, vt0, rt1 WHERE (((((((((((((((x'') NOT BETWEEN (0.770574392202304) AND (x'')))OR(CASE x''  WHEN NULL THEN 0X79610e3b WHEN x'' THEN '1128774011' WHEN 'F ' THEN 0.44144674006362306 ELSE -1924385974 END)))AND(((-8.57337596E8) IS TRUE))))AND(((NULL) ISNULL))))OR((NULL IN ()))))AND(('G*p' IN ()))))OR(CAST(-211545026 AS TEXT)))); -- 0ms;
SELECT DISTINCT ((vt0.c1) ISNULL) FROM vt0 NOT INDEXED, rt1; -- 1ms;
SELECT ((((vt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)))<>(vt0.c0)) FROM rt1, vt0, rt0 WHERE (((0.3059856633910619 COLLATE NOCASE)GLOB(0Xfffffffffe09ce9d))) LIMIT -2073289408 OFFSET -117587622; -- 0ms;
SELECT ALL ((SUM(rt0.c3)) BETWEEN ((+ (rt0.c2))) AND (((vt0.c0)>>(x'')))) FROM vt0, rt1 WHERE (((((0.5675345398627043)=(0X5337fa70)))LIKE((('1128774011') BETWEEN ('') AND (0.029978326045209114)))));SELECT ALL CASE AVG(rt0.c1)  WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c1))) THEN ((rt1.c1) NOT NULL) WHEN vt0.c1 COLLATE NOCASE THEN ((rt0.c3)>(rt1.c1)) WHEN (~ (NULL)) THEN ((rt1.c3) NOT BETWEEN (0.660303782425362) AND (rt1.c0)) ELSE x'' END FROM vt0, rt1, rt0 ORDER BY -6.84590782E8; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0, vt0, rt1 GROUP BY CASE WHEN rt1.c0 THEN vt0.c1 ELSE ((vt0.c1)>>(vt0.c1)) END; -- 0ms;
SELECT DISTINCT UNLIKELY(rt0.c3), ((((((((((((COALESCE(rt1.c2, 0Xffffffffc0530d0d))AND(((-398019260) NOT BETWEEN (rt1.c0) AND (NULL)))))AND((rt1.c4 IN (rt1.c3)))))AND(((rt0.c0) IS TRUE))))OR((NOT (vt0.c1)))))OR(((rt1.c2) NOTNULL))))OR(vt0.c0 COLLATE NOCASE)), COUNT(*) FROM vt0;SELECT DISTINCT ((((0.8586980537701568)<<(rt0.c0)))!=(((vt0.c1)%(rt1.c3)))) FROM rt0 CROSS JOIN vt0 ON '';SELECT DISTINCT 0x4e58185a, ((NULL) IS TRUE), (((rt1.c3)) BETWEEN ((((rt0.c2)IS(rt0.c3)))) AND (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))))) FROM rt1, rt0;SELECT ((((HEX(rt1.c2))AND(CASE rt1.c3  WHEN rt1.c1 THEN rt0.c1 END)))OR(((NULL)&(rt0.c1)))), GROUP_CONCAT(((((-1428111991)AND(NULL)))OR(rt0.c3))) COLLATE BINARY, AVG(((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c3))) FROM rt0 WHERE (((CASE WHEN -1.769700855E9 THEN 0.7918010865677432 END) NOT BETWEEN (((NULL)<=(''))) AND (CAST(x'68e7' AS TEXT)))) GROUP BY rt0.c1, ((rt0.c1) NOTNULL), rt1.c3 HAVING ((1630150376)&('-1431303311'));SELECT ALL (((((rt1.c4) IS TRUE), TOTAL(rt0.c0), COUNT(rt0.c2)))>=((((rt0.c0)<(rt1.c1)), '-120116829', (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c1)))))), ((((((rt0.c2)AND('1061569072')))OR(rt1.c4)))==(((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c2)))), ((~ (rt0.c0)) IN ()) FROM vt0, rt0;SELECT DISTINCT COALESCE(((rt0.c3)/(rt1.c3)), (+ (rt1.c0))) FROM vt0, rt0;SELECT ((HEX(DISTINCT rt0.c1))+(COUNT(*))) FROM vt0;SELECT DISTINCT ((rt1.c0)!=(rt0.c3)) COLLATE RTRIM FROM vt0 ORDER BY json(CASE rt0.c0  WHEN vt0.c1 THEN rt0.c2 END)  NULLS FIRST;SELECT DISTINCT ((rt0.c3)&(LIKELY(vt0.c0))) FROM rt0;SELECT DISTINCT SUM(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt1, rt0, vt0 GROUP BY 0x1b25f32, ((rt1.c0) ISNULL) COLLATE BINARY, ((LOWER(rt0.c2)) IS TRUE), (+ (CAST(rt1.c3 AS REAL))), ((((((((((((rt1.c0)AND('gX}atC?{')))AND(rt1.c1)))AND(rt1.c1)))AND(rt0.c2)))OR(((rt1.c2)*(vt0.c1)))))AND(rt0.c2 COLLATE RTRIM)) HAVING TRIM(DISTINCT TOTAL(rt0.c3), (+ (rt0.c1)));SELECT DISTINCT (((rt1.c4 IN ())) NOT BETWEEN ((+ (rt0.c2))) AND ((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM rt0, vt0 WHERE (((0.3018577179499603) IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT ALL ((- (rt1.c2)) IN (((rt0.c2)IS(rt0.c0)))) FROM vt0;SELECT DISTINCT (((CAST(')?IO]0' AS TEXT)))==((((NULL)AND(rt1.c1))))) FROM rt1 LEFT OUTER JOIN vt0 ON (+ (((rt0.c0)==(rt1.c1)))) INNER JOIN rt0 ON 0.9850013662463317;SELECT DISTINCT CAST(x'' AS INTEGER) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()) COLLATE RTRIM, (((rt1.c0, rt0.c1, -1511981161))<>((vt0.c0, rt0.c1, rt1.c0))) COLLATE NOCASE, (((vt0.c1 IN ()))OR(((rt0.c1) NOTNULL))) FROM rt0;SELECT CAST(0.4854964367291279 AS REAL) FROM vt0, rt1 WHERE (((((((-1.918815086E9)AND(NULL)))OR(0X37b34015)))<<('-7165543' COLLATE RTRIM))) ORDER BY ((x'c099')<(rt1.c3)) COLLATE BINARY ASC, CAST(vt0.c0 AS REAL) COLLATE BINARY COLLATE NOCASE; -- 0ms;
SELECT ALL ((((0.5268409623567664) NOTNULL)) NOTNULL) FROM rt0 WHERE (NULL); -- 1ms;
SELECT DISTINCT '-1304834356', ((((((vt0.c0)AND(vt0.c1)))AND(rt0.c1))) IS FALSE), COUNT(*) FROM rt1, vt0, rt0; -- 0ms;
SELECT (((((((((((rt1.c0)OR(rt0.c2)))AND(rt1.c2)))OR(rt1.c3)))OR(rt1.c0))))>((rt1.c3))) FROM rt0;SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))) NOTNULL) FROM vt0 WHERE (((((+ (NULL)), HEX(NULL), (0.6253447730113922 IN ())))<(((('33999207') IS FALSE), ((('(', '', NULL)) BETWEEN ((x'', 127197658, x'ba73')) AND ((NULL, x'', '1078794882'))), ABS(0.878499376728451)))));SELECT DISTINCT ((((rt1.c4)<>(rt0.c1))) NOTNULL), COUNT(MAX(((vt0.c0) NOT BETWEEN ('''th49S)E') AND (rt0.c3)))), (((NULL, vt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt1.c2, rt0.c2, rt0.c0))) COLLATE BINARY, (~ ((vt0.c0 IN ()))), (NOT (HEX(rt1.c1))) FROM rt1, rt0, vt0 WHERE ((((0.25190502575130236 IN ())) NOT BETWEEN (CASE 0.90694283941993  WHEN NULL THEN 2101462506 END) AND ((('989782512')>(x'')))));SELECT ALL ((((((((((rt0.c2)OR(rt1.c4)))AND(vt0.c1)))OR(vt0.c0)))AND(rt0.c3))) NOT BETWEEN (vt0.c0) AND (rt1.c4)) FROM rt1;SELECT DISTINCT ((((((((((NULL)AND(rt1.c4)))AND(rt0.c2)))AND(rt0.c3)))OR(vt0.c1))) BETWEEN (((vt0.c1)/(rt0.c3))) AND ((((rt0.c0)) NOT BETWEEN ((rt1.c4)) AND ((vt0.c1))))) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT CAST(NULL AS NUMERIC), (NOT (CAST(rt1.c4 AS NUMERIC))), CAST(rt1.c0 AS BLOB) FROM rt0;SELECT DISTINCT ABS(rt1.c0) FROM rt1 WHERE (LTRIM((+ (0.9516365324767072)), ((0.18151147391856182) ISNULL))); -- 0ms;
SELECT ALL CAST((((vt0.c0))!=((rt1.c1))) AS NUMERIC) FROM rt1 WHERE (CASE WHEN '' COLLATE BINARY THEN ((0.18814424141944763) BETWEEN (0X108a4157) AND (0.8591082396787372)) WHEN ((-1853781762)>(0x4c056365)) THEN ((0Xffffffffb239cecc) BETWEEN (NULL) AND (-7165543.0)) WHEN CASE '-857337596'  WHEN x'' THEN 0X618c8726 ELSE '6~tt_狔N㺗y' END THEN ((((0.634425570152901)OR('805429077')))OR('0.7299220550693291')) END);SELECT DISTINCT rt1.c3, json_insert(((rt1.c3) IS FALSE), ((vt0.c0)AND(vt0.c1)), vt0.c0, '0*hKJi', LOWER(rt1.c3)), 'GSU', (((rt0.c1)) NOT BETWEEN ((SUM(rt0.c1))) AND (((((vt0.c1))<=((vt0.c0)))))), NULL FROM rt1;SELECT ALL TYPEOF(DISTINCT (~ (vt0.c0))) FROM rt0, vt0, rt1 WHERE (CASE WHEN (('-2073289408') NOT BETWEEN (NULL) AND (0.07676401735009353)) THEN CAST(NULL AS TEXT) WHEN (('W')>=('\rS')) THEN ((((NULL)OR(1.061569072E9)))OR('1538706713')) WHEN ((0.4930303232634715)>>(NULL)) THEN (((-1609077121, x'482b', NULL))<((NULL, 0.23102339155948093, 1.19601868E8))) END) GROUP BY (CASE 0.8443823580004239  WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c2 END IN (rt0.c1)) HAVING (((rt0.c1)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND ((AVG('147973602')))); -- 1ms;
SELECT DISTINCT ((TYPEOF(DISTINCT rt0.c3))AND(LIKELY(DISTINCT rt0.c0))) FROM rt1;SELECT DISTINCT 4.76694581E8, (~ ((((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))), ((((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c1))) IS TRUE) FROM rt1 UNION SELECT ALL ((vt0.c0 IN ()) IN (NULL)), GROUP_CONCAT(AVG(rt1.c4)), CAST(((((vt0.c1)OR(rt0.c0)))OR(rt1.c2)) AS REAL) FROM vt0, rt0 ORDER BY ((((rt0.c1 COLLATE BINARY)OR(CAST(rt1.c4 AS REAL))))OR('~')) DESC;SELECT DISTINCT (rt1.c1 IN ()) FROM rt1, rt0 LIMIT 1767951387; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c3 THEN rt1.c4 END) NOT BETWEEN (((((rt1.c1)AND(rt0.c3)))AND(rt1.c0))) AND (MIN(vt0.c1))) FROM vt0, rt0 ORDER BY CAST(0.7620237814119445 AS NUMERIC) DESC  NULLS FIRST, (((((rt1.c1, vt0.c0, vt0.c1)) NOT BETWEEN (('0.7542185982764836', rt1.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, rt1.c3)))) IS FALSE) DESC;SELECT ((((((vt0.c1)+(rt0.c2)))OR(rt1.c3 COLLATE RTRIM)))OR(((rt0.c1) BETWEEN (vt0.c1) AND (rt1.c1)))) FROM vt0, rt1;SELECT ((((((((((((CASE rt0.c2  WHEN rt1.c3 THEN rt1.c2 ELSE vt0.c1 END)OR(((vt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c1)))))OR(rt1.c0)))OR(rt0.c0 COLLATE BINARY)))AND(GROUP_CONCAT(rt1.c0))))AND(rt1.c0 COLLATE NOCASE)))AND(SUM(rt1.c3))) FROM rt0, rt1 WHERE (CASE -680054401  WHEN CASE NULL  WHEN x'' THEN NULL END THEN ((((((((0.7895019922368927)AND('-305094638')))OR('1e500')))AND(0.4607896100094865)))AND('1321431681')) END) EXCEPT SELECT ALL (~ (((0.3506750753912624)<=(rt1.c2)))) FROM vt0 NOT INDEXED, rt1;SELECT ALL ((((vt0.c1) BETWEEN (rt0.c0) AND (0.9839360470056439)))>=(CASE rt1.c3  WHEN rt1.c4 THEN rt0.c2 ELSE vt0.c0 END)) FROM rt1 WHERE (LIKELIHOOD(((x'cb2a')>('?3Q\>L?p|')), 0.14300873735156838));SELECT ((((rt1.c1) NOT NULL)) ISNULL) FROM rt0, vt0 WHERE ((+ (-442992984 COLLATE RTRIM))) LIMIT 1683644925;SELECT DISTINCT TRIM(DISTINCT (NOT (rt1.c2))), CAST(rt1.c3 COLLATE NOCASE AS INTEGER), CASE WHEN (((rt1.c4)) BETWEEN ((rt0.c3)) AND ((0.19091469642588788))) THEN (- (rt0.c0)) END, ((vt0.c1) NOT NULL) COLLATE BINARY COLLATE RTRIM, ((((rt1.c1)IS(rt1.c4)))GLOB(((rt0.c2)-(rt1.c2)))) FROM vt0, rt1, rt0 WHERE (((((NULL) BETWEEN ('') AND ('-2134883883'))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ()))!=(rt0.c2)) FROM rt0 EXCEPT SELECT ((0.03499956283644712) BETWEEN (SUM(rt0.c1)) AND (MIN(rt0.c0))) FROM rt0 NATURAL JOIN vt0 WHERE (((('FALSE')) BETWEEN ((((NULL)<(0.3367898119637026)))) AND (((('-305094638')OR(0.3078161307929801)))))) GROUP BY CASE WHEN CAST(rt0.c1 AS TEXT) THEN 0x2486556 WHEN (rt0.c0 IN ()) THEN ((rt1.c0)OR(rt1.c4)) WHEN ((rt1.c3)AND(rt1.c4)) THEN CAST(vt0.c0 AS INTEGER) END, ((vt0.c0 COLLATE BINARY) ISNULL), vt0.c1 HAVING CAST(vt0.c1 AS REAL);SELECT DISTINCT COUNT(*) COLLATE RTRIM, (+ (0Xffffffffddfc9354 COLLATE NOCASE)), ((((((rt0.c2)AND(rt1.c2)))AND(rt0.c3)))>(((rt1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), MAX(CASE rt0.c1  WHEN vt0.c1 THEN vt0.c0 END), (((((NULL))<>((rt1.c1))))LIKE(((((rt0.c2)AND(rt0.c1)))AND(vt0.c1)))) FROM rt1, vt0 WHERE (LENGTH(((NULL)>=('s靯'))));SELECT DISTINCT ((CASE rt1.c4  WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END) BETWEEN (rt0.c0) AND ('-239496471' COLLATE NOCASE)) FROM rt0 NOT INDEXED, vt0;SELECT DISTINCT ((((rt0.c1)>>(x'')))<<(TYPEOF(DISTINCT '983366693'))) FROM rt1, rt0, vt0 ORDER BY ((rt0.c0) NOT BETWEEN ('-398019260') AND (rt0.c2)) COLLATE NOCASE DESC, TRIM((rt0.c0 IN ()), (((vt0.c0))<((rt1.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((NULL) ISNULL) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (((((((((((((- (rt0.c0)))AND(NULL)))OR(IFNULL(DISTINCT rt0.c3, vt0.c1))))AND(((((rt1.c2)AND(rt1.c4)))AND(rt0.c1)))))OR(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)))OR((~ (vt0.c1)))))AND(CASE rt1.c0  WHEN vt0.c0 THEN rt1.c4 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c4 END)) FROM rt0, vt0 WHERE ((- ((+ (NULL)))));SELECT ALL RANK() OVER () FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)&(rt0.c1)))AND((~ (rt1.c1)))))OR(((rt0.c0) IS FALSE))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)))))AND(((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0, rt1 WHERE (x'8325');SELECT DISTINCT (NULL IN ()), rt1.c1, ((rt0.c1 COLLATE NOCASE) NOTNULL) FROM rt0, rt1, vt0 LIMIT 1797383598; -- 0ms;
SELECT DISTINCT ((rt1.c1)&(SUM(rt1.c0))), GLOB(x'', ((rt0.c2)%(NULL))), CAST((((rt0.c2, vt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, rt1.c3, rt0.c0)) AND ((rt0.c0, rt1.c0, rt0.c2))) AS NUMERIC) FROM rt1, rt0, vt0; -- 1ms;
SELECT PERCENT_RANK() OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt1, rt0 WHERE ((((((('-1853781762') IS TRUE))AND((+ (0.7773801533560818)))))AND(((((x'')OR(0.8822040744886338)))OR('492399726'))))); -- 0ms;
SELECT (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c1))) AND (((vt0.c1) NOT NULL))) FROM rt1, vt0 WHERE ((('1112979230' COLLATE BINARY) NOT BETWEEN (((x'a7cce445dfe8')<=(x''))) AND (((((0.4870991286357519)OR('')))OR(NULL))))) ORDER BY (((((rt1.c2 IN ()))OR(x'')))AND(((((x'')OR(vt0.c1)))AND(rt0.c3)))) DESC  NULLS LAST LIMIT -80639730 OFFSET 1350497937;SELECT (TRIM(DISTINCT x'49ee702a', rt0.c3) IN ()), 1.999010712E9, UNLIKELY((~ (rt0.c0))) FROM vt0;SELECT DISTINCT (~ (((((rt1.c2)AND(rt0.c2)))OR(vt0.c0)))) FROM vt0 ORDER BY (((('3')<(rt0.c2)))GLOB(vt0.c1 COLLATE NOCASE));SELECT DISTINCT ((((rt0.c1)||(rt0.c2))) IS TRUE) FROM rt1, vt0, rt0 WHERE (((x'b1a1') BETWEEN ('-1802822118') AND (0.878499376728451)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((rt0.c0 IN (rt1.c3))))<=((((rt1.c1) BETWEEN (vt0.c1) AND (rt0.c0))))) FROM vt0, rt0 GROUP BY ((((0.7470897961136543)OR(((((((((x'')OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt1.c1)))))OR(((rt1.c4) NOT BETWEEN (rt1.c1) AND (vt0.c1)))) HAVING ((((LIKELY(rt1.c1))AND(((rt1.c1)GLOB(rt0.c1)))))OR(((((rt1.c1)OR(rt1.c2)))OR(vt0.c1))));SELECT ALL MAX((NOT (rt1.c0)) COLLATE BINARY) FROM vt0, rt1 ORDER BY ((((rt0.c3)>>(vt0.c1)))>(((rt0.c0)%(rt1.c2))));SELECT ALL (((((rt0.c0, rt0.c3, rt1.c0, rt0.c3, rt0.c2))<((rt1.c4, rt0.c0, rt1.c2, 0.49181583574591237, rt0.c3))))GLOB(((rt0.c3)>(NULL)))) FROM rt0 WHERE ('JlQx2%FHÜ' COLLATE RTRIM);SELECT DISTINCT (((((rt1.c1)<(rt1.c1))))=((CASE vt0.c0  WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c4 END))) FROM rt1, rt0, vt0 WHERE (UNLIKELY(((('-1395669319', NULL, x'5261', 'x쯛☃ꀒro<>', 0x10f370ff))<((0.3200581013492779, 0xfffffffff9f4a1ce, NULL, x'', '2|,-z-%Zm'))))) ORDER BY ((SQLITE_SOURCE_ID())&((((rt0.c2))==((rt0.c0))))); -- 0ms;
SELECT DISTINCT (((COUNT(*)))<>((0xffffffffe9a8e9c1 COLLATE BINARY))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT 356580216 FROM rt0, vt0 NOT INDEXED, rt1 WHERE (((((0.17218224701606688)<>(0.8507327242188565))) NOT BETWEEN ((((((((('')OR(NULL)))OR('315685241')))OR('-857337596')))AND(NULL))) AND (CAST(0.021477875511318967 AS BLOB)))); -- 1ms;
SELECT ALL ((((rt0.c3)AND(rt1.c3))) NOT BETWEEN ((rt1.c1 IN ())) AND (vt0.c0)), ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE rt1.c4  WHEN rt0.c0 THEN rt0.c2 ELSE '204448724' END) AND (LOWER(rt0.c1))), ((((rt0.c0 IN ())))>((rt1.c4))) FROM vt0, rt0 WHERE (((0X4235baaf)||(0.2685076139586837)) COLLATE RTRIM);SELECT DISTINCT (~ ((((rt1.c3))<((rt1.c1))))) FROM rt1, rt0, vt0; -- 0ms;
SELECT (((((vt0.c1))<>((rt1.c3))))>>(rt0.c1 COLLATE RTRIM)) FROM rt0, vt0;SELECT ALL (NOT ('')) FROM rt1, vt0, rt0 WHERE (CAST(((('650132159'))>((''))) AS TEXT)) LIMIT 1061569072; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOTNULL)) IS FALSE), CUME_DIST() OVER (), (((((((((((('-700801760')AND(rt1.c2)))AND(rt1.c4)))OR(COUNT(*))))OR(((rt1.c2)>=(rt1.c3)))))OR(vt0.c1)))AND(SUM(rt1.c0))) FROM rt0 WHERE ((NOT (CASE NULL  WHEN 0.4924246887346575 THEN x'' END))) LIMIT 1128774011 OFFSET 1833140134;SELECT DISTINCT LOWER((rt0.c1 IN ())), CASE ((rt0.c0)>>(rt1.c2))  WHEN (((rt1.c1))<>((rt0.c2))) THEN (((rt1.c1, rt1.c4, rt1.c2)) BETWEEN ((rt1.c3, rt1.c0, rt0.c0)) AND ((rt0.c1, rt0.c2, rt1.c2))) WHEN ((((rt0.c0)OR(rt1.c4)))OR(vt0.c0)) THEN (((rt1.c1))<((rt1.c4))) WHEN CAST(vt0.c0 AS TEXT) THEN ((rt0.c0) IS FALSE) ELSE CASE rt0.c1  WHEN rt1.c4 THEN rt1.c4 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN rt1.c1 END END, CAST(vt0.c0 AS NUMERIC) COLLATE BINARY FROM rt0 NOT INDEXED, vt0, rt1 WHERE (((((((x'')AND('')))OR(NULL)))==((NULL IN (x'', 0.9468646615077353))))); -- 0ms;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (ROUND((('0.5505237214960528') BETWEEN (NULL) AND ('A/hःE鳦 yc')), ((((x'')OR('-756452739')))AND(499750875)))); -- 0ms;
SELECT DISTINCT ((((CASE rt1.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c4 THEN rt1.c2 ELSE vt0.c0 END)OR(x'')))AND(((((((((rt1.c1)AND(vt0.c0)))OR(rt0.c3)))AND(rt1.c4)))AND(rt1.c4)))) FROM vt0 CROSS JOIN rt0 ON CASE (~ (vt0.c0))  WHEN CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END THEN CASE WHEN rt1.c3 THEN rt0.c2 END END WHERE (0x49504288);SELECT ALL ((((rt0.c3)GLOB(vt0.c0))) IS FALSE) FROM vt0, rt0, rt1 WHERE ((((1646859095))<>((0xffffffffc194a155))) COLLATE NOCASE) GROUP BY (((vt0.c1)) BETWEEN ((CASE rt1.c2  WHEN rt1.c3 THEN -1.090586309E9 END)) AND ((((rt1.c1)<(rt1.c3))))), (0xffffffffb4527771 IN ()), load_extension((rt0.c2 IN ()), '');SELECT DISTINCT NULLIF((- (NULL)), (((vt0.c0))>=((rt1.c0)))), ((x'') ISNULL), GROUP_CONCAT(CAST(rt0.c2 AS REAL)) OVER ( ORDER BY rt1.c3), ((((rt0.c3)*(rt0.c1)))<<(TOTAL(rt1.c4))), (+ (TRIM(DISTINCT rt0.c2))) FROM rt1, rt0 LIMIT -305094638 OFFSET 650791015;SELECT ALL AVG(((NULL)-('-677163557'))), ((((rt0.c3) NOTNULL)) NOTNULL), (((((rt0.c0) BETWEEN (rt1.c1) AND (rt1.c4)), CAST(rt0.c3 AS REAL), x''))<((((rt0.c2) ISNULL), rt1.c0 COLLATE BINARY, ((rt1.c3) NOT NULL)))) FROM rt0;SELECT ALL (((rt1.c2 IN (rt0.c3, rt1.c4)))IS NOT((rt1.c1 IN ()))), (((rt1.c3 IN ()))OR(rt1.c2 COLLATE NOCASE)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM FROM rt1, rt0, vt0 WHERE ((NOT (CASE 0.6501206903567218  WHEN 'a/hःe鳦 yc' THEN 0Xfffffffff8f824b7 ELSE '-1851891713' END))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0, vt0, rt1 LIMIT -870326511; -- 0ms;
SELECT DISTINCT ((0.07107554596215204) NOT NULL) COLLATE BINARY FROM vt0, rt0 WHERE (LIKELIHOOD((- (x'2474')), 0.26852204831088644)) GROUP BY CAST(rt0.c2 AS BLOB) COLLATE RTRIM HAVING rt0.c3; -- 0ms;
SELECT DISTINCT CASE (((rt1.c1, rt0.c2, rt1.c2))=((rt0.c2, rt0.c3, rt1.c2)))  WHEN ((rt0.c0)AND(rt1.c0)) THEN ((((rt0.c3)AND(vt0.c1)))OR(rt1.c2)) END FROM rt0, rt1, vt0 WHERE (LOWER('6賾꺶W￿p\r' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((+ (rt1.c0)) IN ()) FROM rt0, vt0 WHERE (CAST((((('x{')AND(0.6972093100176074)))OR(x'')) AS INTEGER)) LIMIT 1628543710; -- 0ms;
SELECT ALL COALESCE((rt0.c3 IN ()), x'') FROM vt0 WHERE (((((('')LIKE('')), ((NULL) BETWEEN (-4.50945075E8) AND (x'')), ((x'be83') BETWEEN (0.5961082715874094) AND (-120116829))))<>(((('qypo,hk_') IS TRUE), ((NULL)+('')), (((('')OR(0.8409956219807388)))OR(x'0f4a')))))); -- 0ms;
SELECT 0.9375823557810719 FROM vt0, rt1, rt0 WHERE (json_insert(NULL, (('')||(x'')), ((0.4841623037815842) IS TRUE), UNLIKELY(''), (0.932510518222356 IN ()))) LIMIT -1944928824; -- 0ms;
SELECT ((('1999010712', rt0.c0, '-578094325')) NOT BETWEEN (((+ (x'bb1d')), ((rt1.c3) NOT NULL), ((rt0.c3) IS TRUE))) AND ((CAST(rt1.c2 AS BLOB), (- (vt0.c1)), ((rt1.c4)>>(rt1.c4))))) FROM rt0, vt0;SELECT ALL ((((rt1.c0) NOTNULL)) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((rt0.c0 IN ()))) FROM rt0 LIMIT -750903558 OFFSET -1140439337;SELECT ((((((((((((rt1.c3)AND(rt1.c0)))OR(rt0.c3)))OR(rt1.c1)))OR(vt0.c1)))AND((~ (rt1.c2)))))OR((rt1.c2 IN ()))) FROM rt1;SELECT ALL ((((rt0.c2)AND(((0.7213357945854258) IS TRUE))))AND((- (rt0.c3)))) FROM rt1 WHERE (((((((((((((x'')OR(x'88e7')))OR(0xffffffffd965f09b)))AND('⌢')))OR(NULL)))OR(LIKELIHOOD(DISTINCT '-35001269', 0.6046917748175834))))AND(((((0.8475738741028714)AND('\nO8&')))OR('M0')))));SELECT DISTINCT ((COUNT(*))>=(AVG(vt0.c0))), SUM(0.45815860922629437) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW), ((((vt0.c1) BETWEEN (rt1.c1) AND (rt1.c0)))AND(CAST(rt0.c2 AS REAL))) FROM rt0;SELECT DISTINCT (((((((((((rt0.c2, rt0.c2, vt0.c0, rt1.c4, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c0, rt1.c3, '989782512'))))OR(AVG(vt0.c0))))OR(CAST(rt0.c0 AS TEXT))))OR((rt0.c1 IN ()))))OR(SQLITE_COMPILEOPTION_USED(rt0.c0))) FROM rt1, rt0, vt0 WHERE (x''); -- 0ms;
SELECT ALL CAST(TOTAL(rt1.c0) AS INTEGER), CAST((- (rt0.c3)) AS REAL), LAG(((CASE vt0.c0  WHEN rt1.c0 THEN rt1.c2 END)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c4)))), (+ (((rt1.c2) IS TRUE))), (NULL IN ())) OVER ( PARTITION BY ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c0)))*(((rt0.c3)>>(vt0.c1)))), x'') FROM vt0, rt1 WHERE ((CASE WHEN 0.7593720509338135 THEN 0.7709967448344593 WHEN 0Xffffffff9016a388 THEN x'e568' WHEN '-140654001' THEN x'7a84' END IN (NULL COLLATE NOCASE)));SELECT DISTINCT CAST(rt1.c2 AS BLOB) COLLATE NOCASE FROM rt1, rt0, vt0 WHERE ((TRIM(DISTINCT 0Xffffffff81898138) IN ((x'' IN ())))); -- 0ms;
SELECT (- ((- (rt1.c4)))) FROM vt0, rt1, rt0 WHERE (((((('s\')AND(x'')))AND('-1476598103')) IN (NULLIF(321077352, -931959294)))); -- 0ms;
SELECT DISTINCT MAX((~ (rt1.c3))) FROM vt0, rt0 ORDER BY ((rt0.c3)GLOB((rt1.c1 IN (rt1.c0))))  NULLS LAST, (((((rt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT BETWEEN ((NOT (rt0.c1))) AND (LIKELIHOOD(rt0.c2, 0.2631369973934099))) DESC;SELECT ALL (NULL IN ()) FROM rt1, rt0 WHERE ((((((x''))=((NULL)))) BETWEEN (SQLITE_SOURCE_ID()) AND (((x'') NOT BETWEEN (NULL) AND (0.33561461977756246))))) LIMIT -367541308; -- 0ms;
SELECT vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE CASE '71195090'  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c4 END  WHEN NULL THEN rt0.c2 COLLATE BINARY END FROM rt0, rt1 WHERE (CASE WHEN 'OH#v' THEN NULL WHEN 1.02280468E9 THEN '1502867909' WHEN x'edbc' THEN 0Xffffffff9d651790 ELSE x'1920' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt1.c4)) BETWEEN (((rt1.c2 IN (vt0.c1)))) AND (((~ (rt1.c1))))) FROM vt0;SELECT DISTINCT ((x'') ISNULL) FROM rt1, rt0 WHERE ((('-233868949' COLLATE NOCASE) NOT BETWEEN (((((x'')AND(x'11e4')))AND('-572276132'))) AND (CAST(NULL AS BLOB)))) ORDER BY ((x'') NOT BETWEEN (ROUND(rt0.c0, 0.7782863629836958)) AND (((rt0.c1) ISNULL))) ASC; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((((rt1.c3)AND(rt1.c1)))OR(rt1.c1))) COLLATE NOCASE, (ROUND(rt0.c1, vt0.c0) IN (CASE WHEN rt0.c3 THEN rt1.c0 ELSE vt0.c1 END, ((vt0.c0)%(rt0.c0)))), rt1.c0 FROM rt0, rt1, vt0 WHERE (0.3522347580418913) LIMIT -1179590043; -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt0.c0))LIKE(((rt0.c3) BETWEEN (rt0.c3) AND (0xffffffffb67bf2c2)))) FROM rt1, vt0 WHERE (CAST(CAST(x'' AS TEXT) AS REAL));SELECT DISTINCT CAST(rt1.c4 AS INTEGER) COLLATE BINARY FROM rt1; -- 0ms;
SELECT ALL (((((rt1.c4, rt1.c1, rt0.c0))>((rt0.c2, rt1.c0, vt0.c0)))) NOT BETWEEN ((rt1.c0 IN ())) AND (((rt1.c3)LIKE(rt1.c1)))) FROM rt1, vt0;SELECT ALL ((NULL)GLOB(((NULL)=(rt0.c3)))), COUNT(*), COUNT(CASE WHEN rt1.c0 THEN '-111405540' WHEN rt0.c3 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c4 ELSE rt0.c3 END) OVER () FROM rt0, vt0;SELECT ALL (((rt1.c0 IN (rt0.c0)))||(((rt0.c1)||(rt1.c1)))) FROM rt1 WHERE (((((('857303784', 'P', NULL))>((x'', NULL, '9I7E'))))AND((NULL IN (591587225))))) ORDER BY (((rt1.c1)IS(rt0.c0)) IN ());SELECT DISTINCT rt1.c0 FROM vt0, rt0 WHERE (((CAST(0.8811654620751698 AS TEXT)) ISNULL));SELECT DISTINCT ((((vt0.c1)>=(x''))) BETWEEN (((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c2))) AND ((rt1.c0 IN ()))) FROM rt0 WHERE (((CAST(x'04d2e4a6' AS BLOB))<(((0x2abfcff3)<>(x'0b33')))));SELECT DISTINCT MAX((((rt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1)))), (((((0.23102339155948093))>=((rt1.c3))))<(((((rt1.c3)OR(rt1.c3)))AND(rt0.c3)))), (((rt0.c3 IN ())) NOTNULL) FROM rt1, rt0, vt0 WHERE (((((']3')AND(((((0.1340218949580364)OR('2084660444')))AND(0xffffffffdddfc0ee)))))AND(((0.6959618658048016)<>(NULL))))); -- 0ms;
SELECT DISTINCT (((rt1.c4 IN (rt1.c3))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (HEX(rt0.c2))) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (((~ (rt1.c3)))) AND (((rt1.c1 IN (x''))))) FROM rt1;SELECT ALL 1057240086 FROM vt0, rt0, rt1 WHERE (((ROUND(9.89782512E8, 0.8108609365155801))IS NOT((((NULL))<((NULL)))))) GROUP BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((vt0.c1)&(rt1.c0))) AND (CASE WHEN vt0.c0 THEN rt1.c0 END)), '6}\nnD''', (((rt1.c1))!=(('-687174753'))) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(rt1.c2)))AND(rt0.c2)))&(vt0.c0 COLLATE BINARY)) FROM rt1, vt0, rt0 WHERE ((('J') BETWEEN (1.128774011E9) AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((rt1.c0)AND(0.2483557448837953)))OR(rt1.c3)) FROM rt0, rt1; -- 0ms;
SELECT CASE WHEN ((rt1.c3)|(rt1.c2)) THEN rt0.c1 END, (('646469876')>>(0.47197537142936086)), x'e073' FROM rt0, vt0 WHERE (CAST(x'' AS NUMERIC));SELECT COALESCE(rt1.c2 COLLATE NOCASE, (rt1.c0 IN ())), CASE WHEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt1.c2)) THEN (rt1.c1 IN ()) ELSE ((rt0.c0) IS TRUE) END, ((((((((rt0.c2)OR(rt1.c2 COLLATE RTRIM)))AND(rt0.c1)))OR(((((rt1.c2)AND(rt1.c4)))AND(rt0.c2)))))AND(json_patch(rt1.c2, rt1.c3))) FROM rt1 WHERE (((NULL) NOT NULL) COLLATE RTRIM);SELECT DISTINCT CAST(CAST(vt0.c1 AS TEXT) AS BLOB) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(json_type(((vt0.c1) ISNULL))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), (((rt0.c3)) BETWEEN (((- (rt1.c1)))) AND ((COUNT(rt0.c1)))), rt1.c4, (((- (rt0.c1)))*(CASE WHEN rt1.c3 THEN 0.21770857045384517 END)), ((TOTAL(vt0.c0)) NOTNULL) FROM vt0, rt1 WHERE ((((('-984235489') ISNULL)) BETWEEN ((NOT (0.8792502671615622))) AND (TRIM(NULL))));SELECT DISTINCT MIN((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE NOCASE) FROM rt1, rt0, vt0 WHERE ((((((NOT (x'')))OR((((((((('')OR(x'77f6')))AND(0.1604614740713336)))AND(2101462506)))AND('썗5r''')))))AND((((('')AND('311025986')))OR(x'0f23'))))); -- 0ms;
SELECT NTH_VALUE(rt0.c3, UNLIKELY(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt1.c0)))) OVER (), ((((-450945075) BETWEEN (rt1.c1) AND (x'')))IS NOT(((vt0.c1)&(rt1.c1)))), (((((rt0.c2 IN ()))AND((vt0.c1 IN ()))))AND(CASE rt0.c1  WHEN rt1.c3 THEN vt0.c0 END)) FROM rt0, rt1 WHERE ((((((('2bz#1')AND(0Xffffffff872dc7b2)))OR('N'))) NOT BETWEEN ((+ (x'1e82'))) AND ((x'' IN (0.5790161520105579, 0Xffffffffca06c6ad))))) LIMIT -2106419947 OFFSET 453481109;SELECT ALL ((vt0.c0 IN (rt1.c2, vt0.c0)) IN (((vt0.c1) NOTNULL))), ((((rt0.c2)>=(rt1.c3))) BETWEEN (((rt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((vt0.c1)||(rt0.c2)))), ((rt1.c1) BETWEEN ((rt0.c3 IN ())) AND (((rt1.c3)<<(rt0.c1)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)<=(vt0.c0)))AND(((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(((vt0.c0)<>(rt1.c3)))) FROM vt0;SELECT ((((CASE WHEN rt0.c3 THEN rt0.c2 END)OR(((((vt0.c0)AND(vt0.c1)))AND('-2073289408')))))OR(((rt1.c2) BETWEEN (rt1.c2) AND (NULL)))) FROM rt0, vt0, rt1 WHERE (CAST((NOT ('')) AS INTEGER)) LIMIT -2039381751 OFFSET -983874752; -- 0ms;
SELECT ALL CASE WHEN CASE rt0.c1  WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c3 END THEN ((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, (- (CASE vt0.c1  WHEN rt0.c2 THEN rt1.c2 END)), (~ (rt0.c3)) COLLATE NOCASE FROM rt1 WHERE (((json_object(0.2225810442071603, 0.8745711283460315)) NOT NULL)) GROUP BY CAST(((x'')|(rt1.c0)) AS INTEGER);SELECT DISTINCT CASE (rt1.c4 IN (rt1.c0))  WHEN '-2089894495' THEN (~ (rt1.c3)) END FROM rt1, rt0, vt0 LIMIT 81956723; -- 0ms;
SELECT ALL (((rt0.c1, rt1.c3, rt1.c1)) BETWEEN (((rt1.c2 IN ()), MIN(rt0.c3), ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) AND ((((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)), NULL, (rt0.c3 IN ())))) FROM rt0, vt0, rt1 WHERE (((CAST(x'' AS TEXT)) ISNULL)) LIMIT 1631908616 OFFSET -1101553647; -- 0ms;
SELECT DISTINCT ((((rt1.c1 IN (rt1.c2))))<>((((vt0.c1)+(rt0.c0))))) FROM vt0, rt1 WHERE ((((('')<<('pt4%[2(m'))) NOT BETWEEN ((- (-1936369128))) AND ((+ (3.15685241E8))))) ORDER BY NULL  NULLS FIRST;SELECT DISTINCT (~ ((- (rt0.c3)))) FROM rt1, vt0, rt0 WHERE ((((x'') NOTNULL) IN ())) LIMIT 1078794882; -- 0ms;
SELECT ALL (('*\') NOT BETWEEN (ROUND(rt1.c1, rt0.c0)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))), vt0.c1 COLLATE RTRIM, ((TOTAL(0.41894544653755894)) IS FALSE), SUM((((rt1.c3))<((rt1.c3)))) OVER (), (((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((((vt0.c1) BETWEEN (rt1.c0) AND (rt0.c3)), (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt1.c3))), CAST(rt0.c0 AS REAL))) AND ((rt0.c0 COLLATE NOCASE, ((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c1)), CASE rt1.c4  WHEN rt1.c3 THEN vt0.c1 END))) FROM rt0, rt1, vt0 WHERE ((COALESCE('-159842017', 0.3869830036427405) IN ())); -- 1ms;
SELECT DISTINCT (rt1.c3 IN ()) FROM rt0, rt1, vt0 WHERE (((x'')*((+ (NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt1.c4)) BETWEEN ((rt1.c1)) AND ((vt0.c0))) THEN LOWER(DISTINCT x'5be0') END FROM rt0 WHERE (((((NULL) IS TRUE)) NOT NULL));SELECT DISTINCT CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END THEN TRIM(rt1.c3) WHEN (((rt0.c1))=((rt1.c2))) THEN (- (rt1.c1)) WHEN rt1.c4 COLLATE RTRIM THEN (rt1.c0 IN (x'')) END FROM rt0, vt0, rt1 WHERE ((+ (((NULL)<>('0.7542185982764836'))))) ORDER BY DATETIME(rt1.c1, ((rt0.c1)||(rt0.c0)), (((rt1.c2, rt1.c4, NULL, rt0.c1, rt0.c0))>=((rt1.c3, rt1.c0, rt0.c1, rt0.c2, rt0.c3)))) DESC  NULLS LAST, TRIM((rt1.c2 IN ()), (- (rt1.c1))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((MAX(rt0.c0)))=((rt0.c1))) FROM vt0;SELECT ALL CASE rt1.c3  WHEN x'' THEN CASE WHEN rt0.c3 THEN rt1.c0 END END FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON ((vt0.c1)||(rt0.c1)) COLLATE RTRIM LIMIT -18915963; -- 0ms;
SELECT (((rt0.c1)IS NOT(NULL)) IN ()) FROM vt0; -- 0ms;
SELECT COUNT(*) OVER () FROM rt0, vt0, rt1; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT -634101945, (((rt1.c4) IS TRUE) IN ()), ((vt0.c0 COLLATE RTRIM)=(((rt0.c1)=(rt0.c0)))) FROM vt0 WHERE (((((0xffffffffc66c70b4) ISNULL))>=(((((x'331f')OR(0xffffffffe627d7b6)))AND('Et?')))));SELECT ((((GROUP_CONCAT(rt1.c2))OR(TOTAL(x''))))AND(SQLITE_COMPILEOPTION_USED(rt1.c4))) FROM vt0, rt1, rt0 WHERE (((('-1090586309') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1, vt0, rt0; -- 1ms;
SELECT DISTINCT (x'' IN (rt1.c2 COLLATE RTRIM, (((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))), TOTAL(CASE WHEN rt1.c4 THEN rt1.c4 ELSE rt0.c2 END) OVER (), CAST(8.05429077E8 AS INTEGER) FROM rt0, rt1 WHERE ((CASE WHEN x'' THEN '1663777894' ELSE x'' END IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS TRUE)) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND (((rt0.c1)<>(rt1.c0)))) FROM vt0 ORDER BY (((rt1.c4) IS FALSE) IN ((rt1.c1 IN ()))), '33999207' COLLATE NOCASE  NULLS FIRST;SELECT DISTINCT (((((rt0.c3))!=((rt0.c1)))) NOT BETWEEN (((rt1.c3)=(rt0.c1))) AND (((((rt0.c2)AND(vt0.c1)))AND(rt1.c2)))) FROM rt1 ORDER BY (((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))>>((NOT (vt0.c1))));SELECT NULL FROM rt0 WHERE ('W{)'); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c0))!=((rt0.c3 IN (rt0.c3)))) FROM rt1 WHERE (CAST(((((x'')OR(NULL)))OR(0x742cc010)) AS REAL));SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((NULL) IS FALSE))!=((((('-120116829')AND(x'')))OR(NULL))))); -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS TEXT) FROM vt0 WHERE (((CASE ''  WHEN NULL THEN NULL WHEN NULL THEN '' WHEN x'' THEN NULL ELSE x'9eaa' END)AND(''))); -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c2 END)) FROM rt0, rt1, vt0; -- 0ms;
SELECT CASE ((rt0.c3) IS TRUE)  WHEN ((rt0.c0)+(rt0.c0)) THEN rt0.c2 WHEN CASE WHEN rt1.c4 THEN rt0.c0 END THEN ((rt0.c1)*(rt0.c0)) WHEN (((vt0.c0, rt1.c4, rt0.c1)) NOT BETWEEN ((rt0.c1, 0Xffffffffdd8afb0b, rt1.c0)) AND ((rt1.c3, rt1.c4, '綁\n'))) THEN vt0.c1 COLLATE NOCASE END FROM rt0 LEFT OUTER JOIN vt0 ON (((((rt0.c2))!=((vt0.c1)))) BETWEEN (rt1.c0) AND (((rt1.c1)==(rt0.c2)))) INNER JOIN rt1 ON (((((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c0))))OR(((rt0.c0) NOTNULL))))OR(((rt1.c0)>=('>>CWEr')))) WHERE (((CASE WHEN NULL THEN NULL END)<<((- (NULL))))) LIMIT 1471459750;SELECT ALL json_patch((((rt0.c0, 'P+', vt0.c1)) NOT BETWEEN ((rt1.c1, rt0.c3, '1636343118')) AND ((rt1.c3, vt0.c1, rt1.c4))), MAX(rt1.c1)) FROM rt0, vt0 WHERE (((CASE '-578094325'  WHEN '' THEN NULL END) NOT BETWEEN ((('') NOT BETWEEN (0.5451565823322908) AND (0.11107880894520905))) AND ('0.015762623917813134' COLLATE RTRIM)));SELECT IFNULL(DISTINCT CAST(rt1.c2 AS TEXT), CASE WHEN rt1.c4 THEN x'' WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c1 THEN rt0.c0 END), (((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))/(LIKELIHOOD(rt1.c2, 0.1000286441411612))), ((MAX(rt0.c3)) IS TRUE) FROM rt1, vt0, rt0 INTERSECT SELECT ALL ((rt1.c2) IS FALSE) COLLATE RTRIM, TOTAL(CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN rt0.c1 WHEN x'' THEN rt1.c0 ELSE rt1.c0 END), rt0.c3 FROM vt0, rt0, rt1; -- 1ms;
SELECT DISTINCT CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS INTEGER), ((((((rt0.c0)AND(rt1.c4)))AND(rt1.c0)))<<(((((rt1.c2)OR(rt1.c2)))OR(rt1.c4)))), (~ ((((vt0.c1))>=((x''))))), ((((rt0.c1)IS NOT(rt1.c2)))<>(TOTAL(rt1.c3))), (rt1.c1 IN ((- (rt1.c4)))) FROM rt1;SELECT ALL SUM(((((rt0.c0)AND(-2026907488)))AND(rt1.c1))), CASE rt1.c2  WHEN CAST(rt0.c2 AS REAL) THEN TRIM(rt0.c0) END, rt1.c2 FROM vt0 WHERE ('') GROUP BY (((((rt0.c0, NULL, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c4, rt1.c4)) AND ((rt0.c2, NULL, rt0.c1))))&(0.7135049917563903)) HAVING TOTAL(CAST(vt0.c0 AS BLOB));SELECT DISTINCT ((((rt1.c2)AND(rt0.c1)))AND('	8')) COLLATE RTRIM FROM rt0, rt1, vt0 WHERE (TYPEOF(DISTINCT (+ (0.13231686819977373)))); -- 0ms;
SELECT json_extract((((rt1.c3)) BETWEEN ((vt0.c1)) AND ((rt1.c4))), x'', rt1.c4 COLLATE RTRIM, ((rt1.c0)AND(rt1.c2))) FROM rt0, rt1;SELECT DISTINCT CAST((((rt1.c2, rt0.c2, vt0.c0)) NOT BETWEEN ((0.1715199382537681, '-293065859', rt0.c0)) AND ((rt0.c2, rt1.c4, rt1.c3))) AS BLOB), ((CASE rt1.c4  WHEN rt1.c4 THEN rt1.c3 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c0 END) NOT BETWEEN ((- (rt0.c1))) AND ((vt0.c0 IN (rt1.c4, rt0.c2)))), COUNT(CAST(rt0.c0 AS TEXT)) FROM rt0, vt0, rt1; -- 0ms;
SELECT ((((vt0.c1) IS TRUE))LIKE(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)))) FROM rt1, vt0 WHERE ((+ (NULL))); -- 0ms;
SELECT DISTINCT (+ (((0.6871163650184671) NOTNULL))), CAST(rt0.c2 AS TEXT), NULL FROM rt1, rt0; -- 1ms;
SELECT x'b901' FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT SUM(CASE vt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 ELSE rt0.c0 END) OVER () FROM vt0, rt0, rt1 GROUP BY ((x'99ee')&(((rt1.c0)&(rt1.c3)))) LIMIT -813973257 OFFSET -1602216073; -- 0ms;
SELECT DISTINCT ((vt0.c0)+(rt0.c1)) COLLATE RTRIM, (((0.7030441192368424))>=((rt0.c2 COLLATE RTRIM))), LOWER(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 ELSE vt0.c1 END) FROM vt0, rt0 ORDER BY rt0.c2  NULLS LAST LIMIT -557383505;SELECT DISTINCT (- (CAST(x'' AS TEXT))) FROM vt0, rt1, rt0; -- 1ms;
SELECT DISTINCT rt1.c1, AVG(HEX(rt0.c3)), ((vt0.c1 COLLATE BINARY)!=(((rt1.c0)IS NOT(rt1.c1)))) FROM rt0, vt0 ORDER BY (NOT (((vt0.c1)+(rt0.c3)))) DESC;SELECT DISTINCT ((((CAST(rt0.c2 AS NUMERIC))AND(((rt1.c1)-(0.23102339155948093)))))AND(((rt0.c2) IS TRUE))), CAST(((rt0.c3)+(rt0.c0)) AS REAL), AVG(rt0.c3) FROM rt1 WHERE ((((0.08968192926456942 COLLATE NOCASE))>=((CAST('-1474186233' AS TEXT)))));SELECT DISTINCT ((rt0.c2 COLLATE BINARY) IS FALSE) FROM vt0 WHERE (((((NULL) NOT BETWEEN ('-857337596') AND (0X4756929a))) ISNULL));SELECT ((((rt0.c3)OR(rt0.c2)))AND(x'3fb91f5b')) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c0 THEN ((rt1.c4)<(0.2845219059543782)) END, SUM(((((((((rt0.c1)OR(rt1.c1)))AND(rt1.c1)))OR(NULL)))AND(vt0.c1))), SUM(((('')) NOT BETWEEN ((rt0.c0)) AND ((vt0.c1)))) OVER () FROM rt0 WHERE ((NOT ((((NULL)) BETWEEN ((0.3100793406086585)) AND (('-1012481195'))))));SELECT AVG(((rt1.c3)/(rt1.c2))) COLLATE RTRIM, (- (((((((((rt1.c2)AND(vt0.c0)))AND(rt1.c2)))OR(vt0.c1)))OR(rt1.c1)))), COALESCE(((((rt0.c0)OR(rt1.c2)))OR(rt1.c2)), GROUP_CONCAT(rt0.c3)) FROM rt1;SELECT DISTINCT x'' FROM vt0, rt0, rt1 WHERE ((((0.8774099519477113)) NOT BETWEEN ((((0.4626412482794494)||(x'cfec')))) AND ((json_array_length(NULL, ''))))) GROUP BY ((((rt0.c2)<=(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt1.c4) IS FALSE))), CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c3)*(rt0.c3)) THEN vt0.c1 END, CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC); -- 0ms;
SELECT (~ (((rt0.c0)||(rt1.c2)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT '+?^4[<H' FROM rt0 NOT INDEXED WHERE (0.3570965715718645); -- 0ms;
SELECT rt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM, vt0.c0, AVG(x'') FILTER(WHERE CASE UPPER(rt1.c1)  WHEN rt0.c2 COLLATE RTRIM THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c1) NOT BETWEEN (rt1.c4) AND (rt1.c1)) END) OVER () FROM rt0;SELECT rt0.c0 FROM vt0, rt1, rt0 NOT INDEXED WHERE (-344125556) GROUP BY TRIM(((rt0.c3)IS NOT(rt1.c0))), vt0.c1, (((((rt1.c0 IN ()))AND(((rt1.c2)*(vt0.c0)))))OR((('[.TtCxs') NOT NULL))) LIMIT -243489783; -- 1ms;
SELECT DISTINCT (((('|	i')==(rt0.c1))) NOT NULL) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT rt0.c0, NULL, CASE ((rt0.c0)<(vt0.c0))  WHEN CASE rt1.c4  WHEN vt0.c1 THEN vt0.c1 END THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE CASE WHEN rt1.c4 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 END END FROM rt0;SELECT ALL CASE WHEN ((rt0.c3)<(rt1.c2)) THEN LOWER(rt0.c2) END FROM rt0, vt0 WHERE (((((0.5238927032690539)AND(0.13144584349860944)))OR('64261374')) COLLATE NOCASE);SELECT rt0.c1 FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c2))<=((rt0.c0))) THEN ((x'') IS TRUE) WHEN CAST(rt0.c1 AS INTEGER) THEN 0.6099822080767333 WHEN ((rt1.c1)>>(rt1.c2)) THEN TYPEOF(DISTINCT rt1.c3) ELSE (- (rt0.c0)) END FROM rt1, rt0; -- 0ms;
SELECT 0.570727063516482 FROM rt1, rt0 LIMIT -817655008; -- 0ms;
SELECT rt0.c2 FROM rt1 WHERE (CASE WHEN CASE NULL  WHEN NULL THEN 0x16e61ffb END THEN ((1971860777) BETWEEN (x'') AND (0Xa105f9a)) END);SELECT DISTINCT ((((((((((((TYPEOF(rt1.c2))OR(CAST(rt1.c1 AS REAL))))AND((- (rt1.c4)))))OR(((rt1.c4) ISNULL))))OR(CAST(rt1.c0 AS BLOB))))OR((vt0.c0 IN ()))))OR((((NULL)) BETWEEN ((rt0.c1)) AND ((rt1.c4))))) FROM rt0, vt0 WHERE (((((('-686374280')*('b')), ((x'f190')+(0.6629698672441634)), ('3{ฌqs' IN ()), LIKELIHOOD('#L', 0.0972602912392293), ((x'')<<('356580216'))))>((NULLIF(DISTINCT 0.9663366094055399, 0.36478930473928195), CAST(0.4236329627693154 AS BLOB), ((((x'')AND('0.3210172333732637')))OR(-1304834356)), '', (~ ('')))))) LIMIT -1384220022;SELECT (NOT (((rt0.c3) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) FROM rt0, vt0 WHERE ((('0.642870375963105') IS FALSE)) GROUP BY (((rt0.c0)) BETWEEN (((rt0.c3 IN (NULL)))) AND ((((((((((rt0.c3)OR(rt1.c2)))AND(rt0.c2)))OR(rt1.c4)))AND(rt0.c0))))), CASE CASE rt1.c0  WHEN rt1.c3 THEN vt0.c0 END  WHEN ((rt0.c2) NOT NULL) THEN ((rt1.c4) IS TRUE) END, ((((rt0.c3 COLLATE RTRIM)OR((rt0.c1 IN (vt0.c1)))))OR((- (rt0.c3))));SELECT DISTINCT (((((vt0.c0))<=((rt1.c4))))||(COUNT(rt1.c3))) FROM rt0, rt1 WHERE ((((x'')) NOT BETWEEN ((((('W*', x'', x'58b3')) BETWEEN ((x'', '2101462506', x'598a')) AND (('0.015762623917813134', '2Vz%s', x''))))) AND ((CAST('iMYsj|1(y' AS INTEGER)))));SELECT DISTINCT ((((MAX(rt0.c1))AND('\rY')))AND(CASE WHEN 0xffffffffc3a6c355 THEN rt0.c0 END)) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL LIKE(rt0.c1, ((rt1.c0) IS FALSE), '#') FROM rt0, vt0;SELECT (rt1.c3 COLLATE RTRIM IN (CASE rt1.c2  WHEN rt1.c4 THEN rt0.c2 WHEN rt1.c3 THEN 0.9679706889496639 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c3 WHEN rt1.c4 THEN vt0.c1 WHEN rt0.c3 THEN rt1.c1 ELSE rt1.c3 END)), (((((((((NOT (rt1.c4)))OR(((rt1.c2)&(rt0.c1)))))OR(0.9624207112629998)))OR(CAST(NULL AS REAL))))OR(((((((((rt0.c0)OR(rt1.c4)))AND(rt0.c3)))AND(vt0.c1)))OR(rt0.c0)))), CASE CASE vt0.c1  WHEN vt0.c1 THEN rt1.c2 END  WHEN (((rt0.c1))!=((rt1.c3))) THEN ((rt1.c4)+(rt1.c4)) END FROM rt1, vt0 WHERE ((((((('2101462506')OR(x'd6a4')))OR(0.3018577179499603)))>=(0x12008f9 COLLATE BINARY)));SELECT DISTINCT ((('1290378163', vt0.c1, rt1.c2, rt1.c2, rt1.c4)) NOT BETWEEN ((((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c3)), '0.289232178099723', ((((rt0.c0)AND(vt0.c1)))AND(rt1.c1)), CAST(vt0.c1 AS INTEGER), ((rt1.c1) NOTNULL))) AND ((((rt1.c0)<=(rt0.c1)), CAST(rt0.c2 AS INTEGER), -1802822118, CAST(rt1.c4 AS REAL), (rt0.c1 IN ())))) FROM vt0, rt0 LIMIT -1261485705 OFFSET -1304834356;SELECT ALL CAST(((((((((rt0.c1)OR(rt1.c2)))AND(rt1.c3)))OR(rt0.c0)))AND(rt0.c2)) AS BLOB), (('-464062574') NOT NULL), COUNT(((rt1.c4)GLOB(rt1.c3))) FROM rt0, vt0 WHERE (((((0X2b164e77) NOTNULL)) NOT BETWEEN (((((441468902)OR(0.5482009769068661)))OR(-1877564536))) AND ((('-1') NOT BETWEEN (0.2673045915903669) AND ('-33719620')))));SELECT ALL ((((((((((rt0.c0) IS FALSE))OR((((rt0.c0))<>((rt0.c2))))))OR(NULL)))OR((((vt0.c1))<((rt1.c0))))))AND(CASE rt0.c2  WHEN rt1.c0 THEN rt1.c3 WHEN vt0.c0 THEN x'' WHEN rt1.c4 THEN rt1.c1 END)), rt1.c3, ((TOTAL(rt1.c4)) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CASE rt0.c1  WHEN rt0.c1 THEN 0.13648244111710017 END)) FROM rt1, vt0 NATURAL JOIN rt0 WHERE ((-1012481195 COLLATE BINARY IN ())); -- 0ms;
SELECT (((+ (rt0.c1)))OR(rt0.c0 COLLATE RTRIM)) FROM rt0, rt1, vt0 WHERE (((((0.07885802771589634) IS FALSE))<(((0x2351064e) NOTNULL)))); -- 0ms;
SELECT rt1.c1 FROM rt1, rt0, vt0; -- 0ms;
SELECT (((x'4b28', ((rt0.c2)>>(rt0.c0)), rt0.c3 COLLATE RTRIM))>((((rt1.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)), MAX('441468902'), json_array(rt1.c1, rt1.c1)))), CUME_DIST() OVER (), (AVG(vt0.c1) IN ()) FROM rt1, vt0, rt0 WHERE (CASE (('') BETWEEN (x'6cc9') AND ('-305094638'))  WHEN '892940187' COLLATE BINARY THEN ((NULL)OR(NULL)) ELSE ((x'') IS FALSE) END); -- 1ms;
SELECT DISTINCT (((CASE vt0.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN '' WHEN '213023640' THEN rt1.c0 END))>=(((vt0.c1 IN (NULL))))), ((rt1.c0 COLLATE RTRIM) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((rt1.c2))>((rt1.c4))))), (((rt0.c0 IN ())) BETWEEN (((vt0.c0)GLOB(rt1.c2))) AND ((((rt0.c2))<((rt1.c0))))) FROM rt0, rt1, vt0 WHERE (((0x7f3c3914)+(0.6772299724098991)) COLLATE NOCASE); -- 0ms;
SELECT ALL '' FROM rt1, rt0, vt0 WHERE (((x'') ISNULL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt1.c3 FROM vt0, rt1, rt0; -- 0ms;
SELECT rt0.c0 COLLATE BINARY FROM rt1;SELECT ALL rt1.c0 FROM rt1, rt0 WHERE (((('L!oW')) BETWEEN (((('0.9225454768276975') NOT BETWEEN (NULL) AND ('m2~Q,s')))) AND ((((x'') NOT BETWEEN (0xffffffffdad47545) AND ('QYPO,HK_')))))); -- 0ms;
SELECT CASE UPPER(DISTINCT rt0.c3)  WHEN CAST(vt0.c1 AS NUMERIC) THEN (+ (rt1.c1)) WHEN LOWER(rt1.c2) THEN ((rt1.c1) IS FALSE) WHEN ((rt1.c2)<<(rt1.c1)) THEN (- (rt0.c3)) END FROM rt1, vt0;SELECT DISTINCT (((((rt1.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))) BETWEEN (((rt1.c3)>(rt1.c2))) AND (MIN(x'6f13'))) FROM vt0, rt0;SELECT DISTINCT ((((rt1.c0) IS TRUE)) NOT NULL), (((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ()), (((rt1.c2 IN ())) BETWEEN (((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt0.c0))) AND ((+ (rt0.c0)))) FROM rt1, vt0 WHERE (NULL);SELECT DISTINCT ((rt1.c3 COLLATE RTRIM)=(rt0.c3 COLLATE BINARY)) FROM vt0, rt1, rt0; -- 0ms;
SELECT ((rt1.c3) NOT NULL) FROM vt0, rt0, rt1 ORDER BY (((rt1.c3) ISNULL) IN ()), ((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c4 END) IS FALSE), rt0.c3; -- 1ms;
SELECT ALL NULLIF(((((rt0.c1)OR(rt0.c3)))OR(rt1.c2)), ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(rt1.c0))) FROM rt0, vt0 WHERE (CASE UPPER(DISTINCT '1284549074')  WHEN (((((((('n[ZL')AND('-813973257')))OR(x'6735')))AND(x'')))AND(0X4c36e58d)) THEN CAST(0.06043515379620312 AS BLOB) ELSE ((0.5170246602989476)-(x'')) END);SELECT ALL CASE '127197658'  WHEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)) THEN x'' WHEN CAST(rt0.c1 AS TEXT) THEN CAST(rt0.c2 AS REAL) WHEN vt0.c1 THEN (vt0.c0 IN ()) ELSE (rt1.c2 IN (rt1.c1)) END, vt0.c0, ((MAX(rt0.c1)) IS FALSE) FROM vt0, rt0, rt1 WHERE (CAST(-606571864 AS INTEGER) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (- (DATE(rt1.c0, rt1.c2, 'atW0!eEYK'))), GROUP_CONCAT(LOWER(rt0.c0) COLLATE RTRIM), (((rt0.c2 IN ()))<<(vt0.c1)) FROM rt1, rt0;SELECT DISTINCT ABS(DISTINCT ((rt0.c1) ISNULL)) FROM rt0, rt1 WHERE (MIN((- ('*hqE82')), ((NULL) BETWEEN (-1315023928) AND (x'd28e')), CAST('' AS TEXT), (('!꟱') BETWEEN ('-344125556') AND (0.5424748885918564)), (((x'9ff3'))=((-520370174))), '')); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c1 AS TEXT)) IS TRUE) FROM rt1; -- 0ms;
SELECT DISTINCT (+ (TYPEOF(rt0.c2))), vt0.c1, ABS(DISTINCT ((rt0.c2)<=(rt0.c1))) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) IS TRUE) AS TEXT) FROM rt1;SELECT DISTINCT ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c1)) COLLATE NOCASE FROM rt0, vt0 WHERE (((+ (0.8238610829114352)) IN ())) ORDER BY (((NULL, rt0.c3, rt1.c0)) NOT BETWEEN ((json_object(rt1.c1, rt1.c2), '1694638399', ((rt0.c2)<<(rt1.c1)))) AND ((CASE WHEN 0.19544050622627074 THEN rt0.c3 END, ((rt1.c1)/(rt1.c4)), ((rt0.c2)<<(vt0.c1))))) DESC, rt1.c2  NULLS LAST;SELECT DISTINCT rt0.c2, (((((rt0.c1))<((rt0.c2))))GLOB(((rt0.c1) IS FALSE))), LAG(x'', (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt1.c1))) COLLATE BINARY, rt0.c2) OVER (), (('5E?')LIKE(CASE rt0.c3  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN rt1.c2 WHEN vt0.c1 THEN rt0.c1 WHEN rt1.c1 THEN vt0.c0 ELSE rt1.c1 END)), SUM(LIKELIHOOD(rt1.c1, 0.850989558402333)) FROM rt0, vt0, rt1 WHERE (CASE ((180338617) IS TRUE)  WHEN (('+f')&(x'7b8cb9bf')) THEN ('' IN (0.46931563069862636)) WHEN (('-120116829')LIKE('416618820')) THEN ((-3.9801926E8) BETWEEN (NULL) AND (NULL)) WHEN CASE WHEN x'' THEN 0xffffffffc69eb632 END THEN ((('-69703011', x'', '1022804680'))>=(('Np', 0.968081937767559, x'fdb7'))) ELSE ((((NULL)AND(0.3650571753109588)))AND('>䂂x0k,*')) END); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(LOWER(rt1.c0)), COUNT((vt0.c0 IN ())), CAST(rt0.c1 AS INTEGER) COLLATE BINARY FROM rt0, rt1 WHERE (((((0.29548595157960766) BETWEEN (NULL) AND (''))) NOTNULL)) ORDER BY ABS(ABS(rt0.c2)), rt1.c4 DESC, (- (LOWER(rt1.c0)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((LOWER(DISTINCT rt1.c0)))>((CASE 269523678  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c4 END))) FROM rt0 WHERE (NULL);SELECT ALL x'' FROM vt0, rt0, rt1 WHERE (CAST(0.9982041827873699 AS REAL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS NUMERIC) FROM vt0 WHERE (COALESCE(DATETIME(x'ab3e', 0.9951098855864183, ''), ((((-639213079)OR(1373144367)))OR(x'')))); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOTNULL) IN ()) FROM vt0, rt1, rt0 WHERE (((((- (x''))))>=((((x'') IS FALSE))))); -- 0ms;
SELECT TOTAL(((rt1.c3)LIKE(rt1.c0))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), ((TOTAL(rt1.c3))+(((vt0.c0) NOT NULL))), COUNT(rt0.c1) OVER () FROM vt0, rt1 ORDER BY ((((rt1.c3) IS FALSE))AND((((rt1.c4))>((rt1.c0))))) ASC  NULLS LAST, json_insert('916804700', rt0.c1, rt0.c3) COLLATE BINARY DESC  NULLS LAST;SELECT DISTINCT AVG((- (rt1.c3))), ((((+ (vt0.c0)), rt0.c3 COLLATE NOCASE, (+ (rt1.c1))))=((AVG(rt1.c3), MIN(rt0.c1, 0xffffffff985fe2da), ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))))), 0.9754742660756118 FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT -1431303311 COLLATE RTRIM FROM vt0, rt1, rt0; -- 0ms;
SELECT ((((rt0.c0, vt0.c1, rt1.c2))>=((rt0.c0, vt0.c0, rt1.c4))) IN ()), GROUP_CONCAT(((vt0.c0)OR(rt1.c1))) OVER (), (((rt1.c0)) BETWEEN ((CASE vt0.c1  WHEN rt1.c3 THEN rt0.c3 END)) AND (((((rt0.c3))<=((rt0.c1)))))) FROM rt1;SELECT (((((vt0.c1) NOT NULL), SQLITE_COMPILEOPTION_USED(vt0.c0), rt0.c2))<>(((rt1.c2 IN ()), ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c4)), CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c3 END))), (((rt0.c0, rt1.c1, rt0.c1, vt0.c0, vt0.c1)) BETWEEN ((CASE WHEN rt1.c4 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END, ((((vt0.c0)AND(vt0.c0)))AND(rt1.c1)), ((vt0.c0) NOTNULL), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt1.c2)), (NOT (rt1.c3)))) AND ((((((rt1.c2)AND(rt1.c0)))OR(vt0.c1)), ((x'') BETWEEN (rt1.c4) AND ('466002793')), '7\n崦/', ((((((((((((9223372036854775807)AND(rt1.c0)))OR(rt0.c0)))OR(rt1.c2)))AND(rt0.c0)))OR(vt0.c1)))OR(rt0.c1)), rt0.c1))), CAST(NULL AS INTEGER) FROM rt0;SELECT ALL NTILE(((((rt0.c0 IN ())))==((((vt0.c1)<>(rt0.c3)))))) OVER ( RANGE 'zGh\nXk' PRECEDING EXCLUDE NO OTHERS), 0.9299035792810204, CASE ((rt1.c3) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN (rt0.c3 IN ()) THEN ((rt1.c3)OR(rt1.c2)) END FROM vt0, rt0;SELECT DISTINCT CAST(((rt0.c3) NOT BETWEEN (vt0.c0) AND (0.8288865632814312)) AS BLOB) FROM rt1, vt0;SELECT rt1.c2 FROM rt1 WHERE (((0.48180055929194276 COLLATE NOCASE)OR(((('6~TT_狔N㺗Y')) BETWEEN ((NULL)) AND (('636045092')))))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c1)||(rt0.c1))) OVER () FROM rt1, vt0, rt0 WHERE (((0.2777882711214298) IS TRUE)); -- 0ms;
SELECT DISTINCT x'' FROM vt0, rt1 WHERE (((CAST(954911307 AS REAL))<<(((0.2757949254187674)>=(NULL))))); -- 0ms;
SELECT DISTINCT (((x'')IS(rt0.c1)) IN ()) FROM rt1, rt0 WHERE (CAST(((x'6834') BETWEEN (x'') AND ('1546125536')) AS TEXT)); -- 0ms;
SELECT DISTINCT rt1.c4 COLLATE BINARY FROM rt1; -- 0ms;
SELECT '1679255257' FROM rt1, rt0 WHERE ((((((((x'', -909429523, 1520961849)) NOT BETWEEN ((NULL, x'', 0X670bb260)) AND ((0X3f464230, 0.002410251629985649, '-1557148160'))))OR(x'0d9e' COLLATE BINARY)))OR(CASE x''  WHEN NULL THEN NULL WHEN x'' THEN '~,Zf' WHEN -1.068298995E9 THEN NULL ELSE '-756452739' END))); -- 0ms;
SELECT CASE WHEN ((0.5519589655551645)>(rt0.c0)) THEN rt0.c2 ELSE (vt0.c1 IN ()) END FROM rt1 WHERE (UPPER(DISTINCT ABS(DISTINCT '455883613')));SELECT DISTINCT LEAD(((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))%(((rt0.c1)IS(NULL)))), CASE (+ (vt0.c1))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE vt0.c0 END THEN ((rt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN rt0.c3 THEN CAST(rt0.c2 AS INTEGER) WHEN CAST(rt0.c3 AS REAL) THEN (((vt0.c0))<=((rt0.c2))) END, CAST((NOT (vt0.c1)) AS INTEGER)) OVER () FROM vt0, rt0 WHERE (((TRIM(DISTINCT x'')) BETWEEN ((x'' IN ())) AND ((NOT (x''))))); -- 1ms;
SELECT DISTINCT rt0.c3 FROM vt0 NOT INDEXED, rt0; -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt1.c3 THEN rt0.c2 ELSE vt0.c1 END THEN (- (rt1.c0)) ELSE SQLITE_SOURCE_ID() END FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(rt1.c4 COLLATE BINARY, 0.35839124446840664) FROM rt0, vt0;SELECT DISTINCT rt1.c3, ((AVG(rt0.c0))-(IFNULL(vt0.c1, rt1.c4))), SUM(((NULL) NOT BETWEEN (rt1.c3) AND (rt1.c3))) OVER ( PARTITION BY CASE (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2)))  WHEN (((rt1.c2))!=(('-252404005'))) THEN LIKELIHOOD(vt0.c1, 0.9138182181288185) END, ('{<' IN (rt1.c1))) FROM vt0;SELECT DISTINCT CASE x''  WHEN ((rt1.c4)>=(rt0.c3)) THEN ((NULL) NOT BETWEEN (rt0.c3) AND (rt0.c2)) END, ((((rt1.c1)AND(NULL)))OR(vt0.c0)) COLLATE RTRIM, GROUP_CONCAT(((rt0.c0)GLOB(rt0.c3))) FROM rt1 WHERE (CASE CASE WHEN '2039287746' THEN NULL END  WHEN (('1315768192')>>(0.04453027266846199)) THEN ((NULL) NOT BETWEEN (0.7249772225968293) AND ('1516291370')) END);SELECT DISTINCT (((((((((- (vt0.c0)))OR(((rt1.c0) BETWEEN (rt1.c3) AND (vt0.c0)))))OR(TOTAL(rt1.c0))))OR((vt0.c1 IN ()))))OR(((rt0.c1)IS(x'7343')))) FROM rt1, rt0;SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND (((~ (rt1.c4))))), NULL, ('774060570' IN ()) FROM rt0 WHERE (CAST(((((((((x'241f')AND(x'')))AND('+77]P')))AND(NULL)))AND(x'bd84')) AS INTEGER));SELECT ALL MIN((((rt0.c3, rt0.c3, NULL, rt1.c1, rt1.c0))>((rt1.c2, rt1.c4, rt1.c4, rt1.c4, rt1.c3)))), x'd9f3', IFNULL(((rt1.c1)<>(rt1.c3)), ((rt1.c1) BETWEEN (rt0.c3) AND (rt0.c1))) FROM rt0, vt0;SELECT ALL ('774022478' IN ()) FROM rt1 WHERE (CASE CASE x''  WHEN '[.ttcxs' THEN NULL END  WHEN (x'' IN ()) THEN (NOT (x'')) ELSE CASE x'4fb2'  WHEN NULL THEN 0.3210172333732637 ELSE 'mZe{v뺈j夙w' END END); -- 0ms;
SELECT DISTINCT ((((TOTAL_CHANGES())AND(COUNT(rt1.c0))))AND(((((rt0.c1)AND(rt1.c1)))OR(0Xfffffffffabf167a)))) FROM rt1, rt0 WHERE (CAST(((('-1012481195'))!=(('0.8882857609985906'))) AS INTEGER)) GROUP BY 0.7642081628664552; -- 0ms;
SELECT ALL CAST(x'b1c8' AS NUMERIC) FROM vt0 WHERE (((((('\n_t[*gdd')) BETWEEN ((0.9987612161789631)) AND (('*U'))))/(LIKELIHOOD(NULL, 0.3854694583568036)))); -- 1ms;
SELECT ALL HEX((rt0.c2 IN ())) FROM rt0 WHERE (((rtreenode('', 0xffffffff824b6a7e))-(((x'')-(NULL))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE WHEN ((rt0.c1) NOT BETWEEN ('-857337596') AND (vt0.c1)) THEN ((x'b8f8')%(rt1.c4)) ELSE 818001327 END) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS), CAST((NOT (rt1.c0)) AS INTEGER), DENSE_RANK() OVER () FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((rt1.c3)OR(rt1.c1)))OR(rt0.c3)))OR(rt1.c4)))OR(rt0.c2)) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN (((~ (vt0.c1)))) AND ((NULL))) WHERE ((((CAST(NULL AS REAL)))==((((((x'')AND(-803816474)))OR(x'')))))) LIMIT 1910298192; -- 0ms;
SELECT CASE CAST(rt0.c0 AS NUMERIC)  WHEN (- (rt0.c2)) THEN ((rt0.c2) NOT NULL) WHEN json(rt1.c1) THEN ((vt0.c0)/(vt0.c0)) WHEN json_array(vt0.c1, vt0.c1, rt1.c3, rt1.c1) THEN CAST(vt0.c0 AS INTEGER) ELSE ((rt1.c3) IS FALSE) END FROM rt0, vt0 WHERE (CASE (-6.23198121E8 IN ())  WHEN ((NULL) NOT BETWEEN ('c]') AND (-767068731)) THEN (('Ru>')OR(x'')) END);SELECT (((((rt1.c3))<((rt0.c3)))) IS FALSE) FROM rt0, vt0, rt1 WHERE ((('218413137' COLLATE RTRIM) NOT BETWEEN (CAST(0.48410639457238 AS TEXT)) AND (('n%0&' IN ())))); -- 0ms;
SELECT DISTINCT 0.7791005041662898 FROM rt0, vt0, rt1; -- 0ms;
SELECT rt1.c0 FROM rt0, rt1; -- 0ms;
SELECT ALL CASE WHEN (((rt0.c2))!=((vt0.c0))) THEN ((rt1.c2) NOT NULL) WHEN ((((rt1.c1)OR(rt0.c1)))AND(rt0.c2)) THEN MIN(rt1.c4) WHEN (((rt1.c2)) BETWEEN ((rt1.c4)) AND ((vt0.c1))) THEN 0.8802975131745212 END FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((rt1.c2)IS(rt1.c1)))OR(0.9367472556137164)))AND(NULL)), COUNT(*) OVER (), PERCENT_RANK() OVER ( ORDER BY x''  NULLS FIRST ROWS (+ (vt0.c1)) COLLATE BINARY PRECEDING EXCLUDE TIES) FROM vt0 WHERE (((CAST(0x77aad16d AS BLOB)) BETWEEN (((((2057708451)AND('6*,')))AND(124059504))) AND ((((('6賾꺶W￿p\r')AND(0Xffffffffdaa8dbbc)))AND('')))));SELECT ((((((0.5651235010479208)AND(vt0.c0)))AND(vt0.c0))) BETWEEN (COALESCE(DISTINCT rt0.c1, rt0.c1)) AND (((0.20514562610044473)&(rt1.c2)))), rt1.c0, ROW_NUMBER() OVER () FROM rt1, vt0 WHERE ((CAST(NULL AS NUMERIC) IN ()));SELECT DISTINCT '' FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL ((((((((((rt1.c4)AND(rt0.c3)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND ('')), (((((rt0.c1) NOT NULL), ((rt0.c0)=(rt1.c2)), rt1.c2))>=((COUNT(rt0.c0), ((rt0.c1) IS TRUE), rt0.c1 COLLATE NOCASE))), (((((((rt1.c2))<((rt1.c0))))AND(rt1.c0)))OR(((((rt0.c2)AND(rt1.c0)))OR(rt0.c1)))) FROM rt0, rt1, vt0; -- 0ms;
SELECT ((((rt1.c3) IS TRUE))<>(rt0.c2)) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT x'af4a' FROM rt0 NOT INDEXED, rt1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (+ (MIN(vt0.c0))) FROM rt0;SELECT ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) FROM rt0, rt1;SELECT ALL ((((rt1.c4) BETWEEN (0.8498494420384577) AND (rt0.c2)))/((- (rt1.c1)))) FROM rt1;SELECT ((TRIM(DISTINCT rt1.c2))-(((((rt1.c2)OR(rt1.c0)))OR(0.4661755201013794)))), (((rt0.c3)) BETWEEN ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))) AND (((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt0.c0)))))), (NOT (rt1.c4)) COLLATE BINARY COLLATE BINARY FROM vt0 INNER JOIN rt0 ON CAST(CAST(rt1.c3 AS INTEGER) AS TEXT) WHERE (((CAST(0.14983076280952323 AS REAL)) NOT BETWEEN (json_object(NULL, NULL)) AND (CAST(x'' AS INTEGER))));SELECT ALL ((((((((CAST(rt1.c4 AS NUMERIC))OR(rt0.c2)))OR(((((rt1.c1)AND(rt1.c1)))AND(rt1.c3)))))AND((rt0.c3 IN ()))))OR(((rt1.c4) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)<>(rt1.c3)) IN ()), CASE ((vt0.c1) BETWEEN (rt1.c3) AND (vt0.c0))  WHEN (rt0.c1 IN ()) THEN ((rt0.c0) ISNULL) ELSE ((rt1.c0)<=(rt1.c1)) END, ((- (rt1.c1)) IN ()) FROM vt0;SELECT ((x'')/(vt0.c0)) FROM rt1, rt0, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CAST(((rt1.c4)<=(vt0.c1)) AS BLOB) FROM rt1 WHERE ((+ (CAST(NULL AS BLOB))));SELECT DISTINCT (((((vt0.c1, rt1.c3, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c4)) AND ((rt0.c1, rt1.c2, vt0.c0))))<=((((rt1.c2))!=((rt1.c1))))) FROM rt0 INNER JOIN rt1 ON (((NOT (rt1.c1))) BETWEEN (TRIM(DISTINCT rt1.c2, rt0.c2)) AND (((vt0.c1) NOTNULL))) GROUP BY UPPER((((rt0.c3)) BETWEEN ((x'')) AND ((rt1.c0))));SELECT DISTINCT ((NOT (rt1.c2)) IN ()) FROM rt1; -- 0ms;
SELECT ALL ((COUNT(vt0.c0)) BETWEEN (NULL) AND (((rt0.c0)>>(rt0.c3)))), ((rt1.c1 COLLATE NOCASE)<<(((((rt0.c1)AND(rt1.c4)))AND(rt1.c3)))), CASE (((rt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((NULL, NULL, rt0.c3)) AND ((rt1.c0, rt0.c2, rt0.c3)))  WHEN ((rt1.c0)IS(rt1.c0)) THEN (NOT (rt1.c0)) WHEN CASE WHEN rt1.c1 THEN rt1.c3 END THEN (rt1.c4 IN ()) WHEN ((0.7166466867265987)||(vt0.c0)) THEN rt1.c0 END FROM rt0, vt0, rt1; -- 1ms;
SELECT DISTINCT ((((((rt1.c0)+(rt0.c2)))AND(rt1.c3)))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c0 END)) FROM vt0, rt1 WHERE (1941886775) GROUP BY (((rt1.c3, rt1.c4, rt1.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, (rt0.c2 IN ()), NULL)) AND (((+ (0.9351556509840934)), ((((rt1.c3)AND(rt0.c1)))OR(rt0.c1)), CASE rt1.c3  WHEN vt0.c1 THEN rt1.c4 END))) HAVING GROUP_CONCAT(SQLITE_VERSION());SELECT DISTINCT ((((((((CAST(rt0.c0 AS NUMERIC))AND((- (rt0.c1)))))AND(((0X6c52fb8a)=(rt1.c4)))))OR(rt0.c0 COLLATE NOCASE)))AND(rt1.c3 COLLATE RTRIM)) FROM rt0, rt1; -- 0ms;
SELECT (((NOT (NULL))) NOT BETWEEN (CASE x''  WHEN 'k' THEN rt0.c2 END) AND (CAST(NULL AS BLOB))) FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT CAST('h<L' AS REAL))) LIMIT -492599325 OFFSET -1877564536;SELECT SUM(HEX(rt0.c0)) OVER (), ((CASE rt1.c0  WHEN rt0.c2 THEN vt0.c1 ELSE rt1.c0 END)>=(((vt0.c1)*(rt0.c0)))), ((((((((((vt0.c0)LIKE(rt1.c3)))OR(CAST(rt0.c3 AS BLOB))))OR((((rt1.c0))<((0.9451412495570881))))))AND(((rt0.c2) ISNULL))))OR(((rt1.c1)IS(rt0.c2)))) FROM rt0, vt0, rt1;SELECT ALL (((rt0.c2)) BETWEEN ((SUM(x''))) AND ((rt1.c2 COLLATE BINARY))), ((((rt1.c2) NOT NULL)) NOT BETWEEN ((((rt1.c0))>((rt0.c0)))) AND (((rt1.c4)>(rt1.c1)))), (((((rt1.c2) IS FALSE)))=((((((rt1.c2)AND(rt1.c3)))AND(vt0.c0))))) FROM rt0, vt0, rt1; -- 1ms;
SELECT ((COUNT(*))-(CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END)) FROM vt0 WHERE ((NOT (((x'4ae7')-(NULL)))));SELECT ALL NTH_VALUE(rt0.c2, ((~ (rt1.c3)) IN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt1.c1)), ((0.9476460918548467) IS TRUE), LOWER(rt1.c4)))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM rt0, rt1 WHERE (((((x'5b1f') NOT BETWEEN (x'') AND ('-541440828')))*(CASE 0x3358ad5f  WHEN 0.27566379935345353 THEN x'3f87' ELSE 0x40754c7a END)));SELECT ALL ((((((((((rt0.c2)OR(rt1.c2)))AND(rt1.c2)))AND(rt0.c3)))AND(rt1.c1))) NOTNULL), DENSE_RANK() OVER (), ((((((((((((((((vt0.c1)AND(rt1.c3)))AND(vt0.c1)))OR(rt0.c0)))OR('634759996')))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c4)) COLLATE RTRIM FROM rt0, vt0, rt1 WHERE (CASE NULL COLLATE BINARY  WHEN CAST('-1654094426' AS INTEGER) THEN CAST(0.6062802275273653 AS NUMERIC) END); -- 0ms;
SELECT NULL FROM rt1, vt0, rt0 WHERE ((((NULL)) BETWEEN ((((x'22de') NOT BETWEEN (x'') AND (NULL)))) AND (((NULL IN ()))))) LIMIT 1095948632 OFFSET 561845189; -- 0ms;
SELECT ALL ((CASE NULL  WHEN rt0.c0 THEN rt0.c2 ELSE 620274400 END)&(((rt1.c2)GLOB(rt1.c4)))) FROM rt1, vt0;SELECT rt1.c2 FROM vt0, rt0, rt1; -- 0ms;
SELECT LTRIM(vt0.c1) FROM vt0, rt0, rt1 WHERE (x'6cfb5df2'); -- 0ms;
SELECT ((((3.21077352E8) BETWEEN (rt1.c2) AND (rt1.c0)))<>(rt0.c2)), NTILE(((((rt0.c2) ISNULL))|(((rt0.c3)<>(rt0.c0))))) OVER (), SUM(rt1.c1) OVER () FROM rt0;SELECT DISTINCT CAST(((((vt0.c1)AND(rt0.c0)))AND(rt1.c2)) AS REAL) FROM rt1, rt0, vt0 WHERE (((-857337596)>=(CASE WHEN NULL THEN NULL ELSE '-166964904' END))); -- 0ms;
SELECT DISTINCT 0x5f62e720, LEAD(CASE CAST(vt0.c0 AS BLOB)  WHEN vt0.c0 THEN ((vt0.c0)<<(vt0.c0)) ELSE ((vt0.c1)/(vt0.c0)) END, CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE (vt0.c0 IN (vt0.c0)) END, (((+ (vt0.c0)))GLOB(((((NULL)OR(vt0.c0)))OR(vt0.c1))))) OVER (), SUM(DATETIME(rt1.c1, '-684590782', rt1.c0)) OVER () FROM vt0 ORDER BY (((((((rt0.c3)AND(rt0.c0)))OR(vt0.c1))))>=(((vt0.c0 IN ())))) DESC  NULLS LAST, rt1.c2 ASC;SELECT DISTINCT CASE WHEN vt0.c1 THEN rt1.c4 ELSE rt0.c1 END COLLATE BINARY FROM vt0, rt1 WHERE ((('-1465394571') NOTNULL) COLLATE RTRIM);SELECT ALL AVG((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))) OVER () FROM vt0, rt1, rt0 WHERE (0.5730961524846072); -- 0ms;
SELECT AVG(((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c3))) OVER () FROM vt0 WHERE (LIKELIHOOD(DISTINCT json_extract(-1130781475, '1136485067', 0.5440185323795093, x'b8b0'), 0.6013857696102752));SELECT DISTINCT CASE WHEN CASE rt1.c0  WHEN vt0.c0 THEN rt0.c1 WHEN '569013850' THEN rt0.c1 WHEN rt0.c2 THEN rt1.c4 END THEN CAST(rt1.c3 AS REAL) ELSE ((rt1.c1) IS TRUE) END FROM rt1, rt0 FULL OUTER JOIN vt0 ON ((LOWER(rt1.c0))GLOB(HEX(rt0.c1))); -- 0ms;
SELECT ALL ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c4 END)*((~ (rt1.c0)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT load_extension(COUNT(vt0.c1)), (((x'941d', (NOT (rt0.c3)), ((rt1.c2) NOTNULL)))>((((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ((((rt1.c1)AND(0.31909314352460394)))OR(rt1.c4)), CASE rt1.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN NULL END))), CASE ((rt0.c3) IS FALSE)  WHEN ((((((((rt0.c2)AND(vt0.c1)))AND(rt1.c1)))OR(rt1.c4)))AND(vt0.c0)) THEN CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END END FROM vt0, rt1;SELECT ALL 0.9959930608457286 FROM rt0, rt1, vt0 ORDER BY (((((((x''))=((rt0.c0))))OR(((rt0.c2)|(rt0.c0)))))OR(rt0.c1 COLLATE RTRIM))  NULLS FIRST; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt1, rt0 WHERE (((((NULLIF(-1.710852475E9, 0.7830947048345255))OR(1.27197658E8 COLLATE BINARY)))OR((x'' IN (x''))))); -- 1ms;
SELECT ALL CAST((vt0.c0 IN ()) AS REAL) FROM rt1; -- 0ms;
SELECT ALL ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)||(json_quote('-9223372036854775808'))) FROM rt1, rt0; -- 0ms;
