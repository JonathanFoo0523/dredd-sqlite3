-- Time: 2024/06/07 17:56:48
-- Database: database88
-- Database version: 3.40.0
-- seed value: 2319203588
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE TEMP TABLE t0 (c0 INTEGER NOT NULL ON CONFLICT ABORT UNIQUE ); -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
PRAGMA cache_size; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('G7', -624588535, 'Si', '', ''); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
UPDATE rt0 SET (c0, c2)=(NULL, 0.3644803150297692) WHERE CAST((rt0.c0 IN ()) AS REAL); -- 0ms;
REINDEX RTRIM; -- 0ms;
VACUUM main; -- 0ms;
UPDATE rt0 SET (c3)=('-753978972') WHERE (((- (rt0.c1))) ISNULL); -- 1ms;
ANALYZE; -- 1ms;
PRAGMA integrity_check; -- 0ms;
UPDATE rt0 SET c4=x'', c3=x'' WHERE ((CAST(rt0.c3 AS TEXT)) IS FALSE); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET c0='' WHERE CAST((((t0.c0))<>((t0.c0))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i68 ON t0(c0 ASC) WHERE CASE WHEN (c0 IN ()) THEN ((c0)<<(c0)) ELSE ((c0)<<(c0)) END; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'', c1=x'' WHERE ((rt0.c0) NOT BETWEEN (NULL) AND (((rt0.c1)%(rt0.c4)))); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('-2127897027'); -- 0ms;
UPDATE t0 SET c0=NULL WHERE (((t0.c0))>((t0.c0))) COLLATE RTRIM; -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('#Xr褉iH'), (0.2116963219682153), (0.8788580342040214); -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', x'', '-1844870240', 0.6890174830056798, 1685703753); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=NULL WHERE '-624588535'; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1685703753 -1007172079 sz=-1007172079 unordered noskipscan'); -- 0ms;
UPDATE rt0 SET (c0, c0, c4)=('1475512873', 0.3644803150297692, x'') WHERE rt0.c4; -- 0ms;
UPDATE rt0 SET c3='w	' WHERE CAST(rt0.c4 AS BLOB); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(x'', '-753978972', x'891d'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (1475512873, x'96f8', NULL, x'', ''), (-1007172079, 0x68bab348, NULL, NULL, ''), (0.6890174830056798, x'53d3', 0.20188437770056467, -6.24588535E8, NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c1, c4, c0, c2) VALUES ('9223372036854775807', '1685703753', 0.7022048734477732, NULL, 0.39271364419820565), ('m', x'', 0.8533963662001135, '4s', x'6736'), (NULL, 0x6479cc49, 0X68bab348, NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'', x''); -- 0ms;
UPDATE OR FAIL t0 SET c0='_B륳9횲3' WHERE (NOT (x'')); -- 0ms;
UPDATE OR REPLACE rt0 SET (c4, c2, c3)=(x'', NULL, NULL); -- 0ms;
PRAGMA main.legacy_file_format = true; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ALTER TABLE t0 ADD COLUMN c15 TEXT; -- 0ms;
PRAGMA integrity_check; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
PRAGMA stats; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1120706486 noskipscan'); -- 0ms;
PRAGMA mmap_size = -7471270249104858259; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.8533963662001135) WHERE TYPEOF(rt0.c2); -- 0ms;
CREATE INDEX IF NOT EXISTS i5 ON t0(CAST(CASE c0  WHEN c0 THEN c15 WHEN c15 THEN c0 WHEN c0 THEN NULL ELSE c0 END AS TEXT) COLLATE RTRIM ASC,c0 DESC) WHERE CASE WHEN c0 THEN x'' COLLATE RTRIM ELSE (((c15)) NOT BETWEEN ((c15)) AND ((c15))) END; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4) VALUES (1085713598); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('g7', ((((0x57f28a29) IS FALSE)) BETWEEN (CASE NULL  WHEN '' THEN '-1978677258' WHEN '4S' THEN x'' WHEN 1475512873 THEN 1.7976931348623157E308 ELSE x'' END) AND (CASE WHEN x'b554b1ef' THEN -1566260970 ELSE NULL END))); -- 0ms;
CREATE UNIQUE INDEX i9 ON t0(((1324825952) BETWEEN (c15 COLLATE RTRIM) AND (c0 COLLATE RTRIM)),c0 COLLATE RTRIM COLLATE NOCASE ASC); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0, c15) VALUES (-1566260970, NULL), (x'', 0.09609884286698478), (x'14a5', NULL); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
ANALYZE i5; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3='-753978972', c0=' &#', c3=NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (2125005455) AND (x'd238'))) NOT BETWEEN (((x'67373ffc') IS FALSE)) AND (CAST('-' AS INTEGER))); -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE t0; -- 1ms;
INSERT OR ABORT INTO rt0(c2) VALUES (''), (x''), (NULL); -- 4ms;
UPDATE OR REPLACE rt0 SET c0='G訩ao.nY' WHERE CAST(((((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c0)) AS NUMERIC); -- 0ms;
UPDATE t0 SET c15=x''; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('-2127897027') WHERE CAST((t0.c15 IN (x'')) AS BLOB); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
ANALYZE i5; -- 0ms;
UPDATE t0 SET (c15)=(x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(x'', x'') WHERE 0.5667824877348815; -- 0ms;
ALTER TABLE t0 ADD COLUMN c17 REAL; -- 0ms;
UPDATE OR IGNORE t0 SET c17=1.324825952E9, c0=x'', c17=NULL WHERE (('4tocJ4<➶>')LIKE(CASE t0.c15  WHEN t0.c17 THEN t0.c0 WHEN t0.c15 THEN t0.c17 WHEN 0X221d4690 THEN t0.c15 ELSE t0.c17 END)); -- 7ms;
SELECT rtreecheck('rt0'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((+ (t0.c17)))+(((((rt0.c1)OR(t0.c17)))OR(t0.c17)))) FROM rt0 WHERE ((((((('0.5667824877348815')||(x'd3b8')))OR((+ (x'')))))OR(((NULL) ISNULL))));SELECT ALL GROUP_CONCAT(((NULL)|(t0.c17)) COLLATE RTRIM) FILTER(WHERE CASE WHEN CAST(t0.c15 AS REAL) THEN (NOT (rt0.c3)) WHEN (+ (rt0.c1)) THEN ((t0.c15) BETWEEN (rt0.c0) AND (rt0.c4)) WHEN ((rt0.c4) ISNULL) THEN TRIM(t0.c15, rt0.c4) ELSE NULL END) OVER () FROM t0 WHERE (((((((x'')&(-1.120706486E9)))OR((('')LIKE(0X563af6d1)))))OR('1446704849')));SELECT DISTINCT (((('0.20188437770056467')AND(rt0.c3)))OR(rt0.c4)) COLLATE BINARY FROM rt0 WHERE ((((('-1586700170')||(x'')))*((((((((('161532439')OR('{}')))OR(NULL)))AND('-883129660')))AND(1.61532439E8))))); -- 0ms;
SELECT (((t0.c0, rt0.c0, rt0.c2)) BETWEEN ((AVG(rt0.c4), 0.3224709344490412, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c15))))) AND ((NULL, MAX(t0.c0, rt0.c0, '-1258071926', rt0.c1), COUNT(*)))), COUNT(CAST(rt0.c1 AS INTEGER)) OVER (), (+ (rt0.c0 COLLATE NOCASE)) FROM rt0, t0; -- 0ms;
SELECT ALL rt0.c0, LOWER(t0.c0 COLLATE RTRIM), (((((rt0.c3)OR(rt0.c2)))AND(t0.c0)) IN ()), LIKELIHOOD(DISTINCT CAST(t0.c17 AS BLOB), 0.6569489286558943), (((t0.c15) NOT NULL) IN (rt0.c0 COLLATE RTRIM)) FROM rt0, t0 WHERE ((NOT ((('2125005455')||(x''))))); -- 0ms;
SELECT DISTINCT ((((LIKE(rt0.c1, rt0.c3))OR(((t0.c17)+(rt0.c0)))))OR((rt0.c0 IN ()))), ((((((((((rt0.c4)OR(rt0.c0)))OR(0.6890174830056798)))AND(t0.c0)))AND(rt0.c4))) BETWEEN (MIN(rt0.c3)) AND (GROUP_CONCAT(t0.c15))), CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c1) NOT NULL) THEN CASE rt0.c2  WHEN rt0.c4 THEN t0.c15 ELSE t0.c0 END ELSE (t0.c0 IN ()) END FROM t0, rt0 WHERE (((((0Xffffffffc6630c07 COLLATE NOCASE)OR(ABS(x'5afa52a3'))))AND(((0xffffffffe092a7ec) ISNULL)))); -- 0ms;
SELECT ALL (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) BETWEEN (MAX(rt0.c1)) AND (AVG(rt0.c1))) FROM t0, rt0 GROUP BY CASE (rt0.c3 IN ())  WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c4 AS BLOB) ELSE (t0.c15 IN (rt0.c0)) END HAVING (((rt0.c1)%(t0.c15)) IN ()); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c4) NOT BETWEEN (rt0.c1) AND (0.6610294245279389))) OVER ( PARTITION BY (((rt0.c4 IN ()))GLOB(((((((((t0.c15)AND(rt0.c4)))AND(rt0.c3)))OR(t0.c15)))OR(rt0.c0)))), CAST(((t0.c17)<(t0.c15)) AS NUMERIC)), CASE WHEN (((t0.c15, rt0.c0, t0.c17))<=((rt0.c4, t0.c15, t0.c17))) THEN rt0.c1 COLLATE NOCASE ELSE 0.4773913402575781 END, LAST_VALUE(((rt0.c2) NOT NULL)) OVER ( ORDER BY rt0.c2 DESC), ((((rt0.c1)AND(rt0.c3)))==(MAX(t0.c17))), CASE (((rt0.c4))!=((rt0.c3)))  WHEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c0)) THEN ((rt0.c1)||(NULL)) WHEN t0.c17 COLLATE BINARY THEN ((rt0.c2)<<(rt0.c2)) WHEN (+ (t0.c17)) THEN (+ (t0.c15)) ELSE ((((rt0.c0)AND(t0.c0)))OR(rt0.c4)) END, (- ((rt0.c2 IN (t0.c0)))), ((((rt0.c3) BETWEEN (t0.c15) AND (rt0.c4))) NOT BETWEEN (((rt0.c0)IS(rt0.c3))) AND (((rt0.c4) IS FALSE))) FROM rt0 WHERE ((((NOT (0.5925798449646553))) IS TRUE)) LIMIT -950278760 OFFSET 1359945611;SELECT DISTINCT (((((t0.c0 IN ()))OR(((NULL)||(rt0.c0)))))AND(((t0.c0) ISNULL))), rt0.c0, ((rt0.c1) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ((((rt0.c4))>=((t0.c17))))) FROM t0 WHERE ((((0.3029508331795342)<(x'')) IN ((('1685703753') IS TRUE))));SELECT DISTINCT (t0.c0 COLLATE NOCASE IN ()) FROM rt0 WHERE ((NOT (x''))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS REAL)) NOT BETWEEN ((((rt0.c0))>((t0.c0)))) AND (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2)))), COUNT(*) OVER (), NULL FROM rt0, t0 GROUP BY (((rt0.c3) IS FALSE) IN ()) HAVING ((((t0.c17)) BETWEEN ((rt0.c1)) AND ((x''))) IN (ABS(t0.c0))); -- 1ms;
SELECT DISTINCT rt0.c4, CAST(((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0)) AS TEXT), (((((rt0.c1)<=(rt0.c0)), ((rt0.c2) ISNULL), rt0.c2))!=((((((t0.c17)AND(t0.c17)))AND(rt0.c0)), ((rt0.c2) NOTNULL), rt0.c0))) FROM t0, rt0 WHERE ((((('C\r') BETWEEN (0.18053367337723425) AND ('-1007172079')))IS NOT(CAST(0xffffffff806c0fe9 AS NUMERIC)))); -- 0ms;
SELECT ALL ((((((t0.c17) NOT BETWEEN (rt0.c4) AND (t0.c15)))OR((((rt0.c3, t0.c15, rt0.c2)) NOT BETWEEN ((t0.c17, rt0.c2, t0.c17)) AND ((rt0.c3, t0.c15, t0.c15))))))AND(((0X416d59cc) BETWEEN ('883980249') AND (rt0.c0)))) FROM t0, rt0; -- 0ms;
SELECT ALL (- (((t0.c15)==(t0.c15)))) FROM t0; -- 0ms;
SELECT UPPER(CASE t0.c15  WHEN rt0.c0 THEN rt0.c4 ELSE t0.c17 END) FROM rt0, t0 ORDER BY ((CAST(t0.c17 AS INTEGER)) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c0) BETWEEN (t0.c17) AND (rt0.c2)))) DESC  NULLS LAST, (((rt0.c2) NOTNULL) IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt0.c0, t0.c0, t0.c15)) NOT BETWEEN ((rt0.c0, MAX(rt0.c2), '-1844870240')) AND ((t0.c17 COLLATE BINARY, ((t0.c15) BETWEEN (t0.c17) AND (t0.c15)), (((rt0.c0))<=((rt0.c1)))))), '1e500', ((((t0.c0) IS FALSE))>(CASE WHEN t0.c0 THEN rt0.c0 WHEN NULL THEN t0.c15 WHEN t0.c0 THEN rt0.c1 ELSE t0.c0 END)) FROM rt0, t0 WHERE (((((x'') BETWEEN (0.17852372599762645) AND (NULL))) BETWEEN (((0x2790295f)&(x'b6f1'))) AND (CASE ''  WHEN x'' THEN x'' WHEN x'546d' THEN 'H' WHEN '65885616' THEN 0.23349784996621215 END))); -- 0ms;
SELECT CASE WHEN CASE rt0.c3  WHEN rt0.c3 THEN x'' ELSE t0.c17 END THEN rt0.c3 ELSE ((t0.c17) NOTNULL) END, rt0.c1, (((rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((((((rt0.c3)OR(rt0.c1)))OR(t0.c0))))) FROM t0;SELECT ALL COUNT(CASE t0.c17  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END), load_extension((~ (rt0.c4)), rt0.c4), 0.6826155434043767 FROM rt0 WHERE (((('ds')) NOT BETWEEN ((((((0.8487074552655437)AND(x'c0a3')))AND(NULL)))) AND ((((0.6222937296897227) BETWEEN ('') AND (NULL))))));SELECT DISTINCT (((~ (t0.c15)))<=(((((0.35660852355229333)AND(t0.c0)))OR(x'f800')))) FROM t0 WHERE (((LOWER(DISTINCT 0.43308613523559325))>=('' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE BINARY)||((NOT (t0.c0)))), COUNT(rt0.c2), NULL FROM t0 WHERE (((((((((((((HEX('995822437'))AND('')))OR(((x'') ISNULL))))AND((- (0x6e970583)))))AND(x'')))AND((- (-493078892)))))OR(CAST(0.2287318423399307 AS TEXT))));SELECT ALL (((CAST(rt0.c0 AS REAL)))<=((MIN(t0.c17)))) FROM rt0, t0; -- 0ms;
SELECT (((((((('-1978677258')OR((~ (rt0.c1)))))OR(((t0.c0) NOT NULL))))AND(rt0.c4 COLLATE NOCASE)))OR(rt0.c4)), ((((((((((rt0.c1)OR(t0.c15)))OR(rt0.c4)))AND(t0.c15)))AND(rt0.c3)))GLOB(((t0.c0)%(rt0.c1)))), (NOT ((- (t0.c17)))) FROM rt0, t0 WHERE (CAST(0.348663132943983 COLLATE BINARY AS TEXT)); -- 0ms;
SELECT ALL (((((t0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))) IS FALSE), (t0.c0 COLLATE BINARY IN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))), ((((t0.c17 COLLATE BINARY)OR(rt0.c0)))AND(IFNULL(t0.c17, 'm'))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT 0.17852372599762645, MIN(((rt0.c1)<(rt0.c0))), CAST(2.125005455E9 AS NUMERIC) COLLATE NOCASE FROM t0, rt0 WHERE ((((CAST('-1323243284' AS TEXT)))<=(((NOT (0.39271364419820565)))))); -- 0ms;
SELECT DISTINCT MAX((t0.c0 IN ())) FROM rt0, t0 LIMIT 701639535; -- 0ms;
SELECT DISTINCT rt0.c2, t0.c15 COLLATE NOCASE, ((rt0.c1 COLLATE RTRIM) BETWEEN (((((t0.c0)OR('-1258071926')))OR(t0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM t0, rt0 WHERE ((((x'')<=('1446704849')) IN ())) LIMIT 1685703753 OFFSET 1359945611; -- 0ms;
SELECT DISTINCT rt0.c1, ((((t0.c17, rt0.c2, NULL))<=((t0.c17, t0.c15, t0.c15))) IN ()), (~ ((((t0.c17))<((0.7921620422537761))))) FROM t0 WHERE (((((((NULL)OR(NULL)))AND('-70809487'))) NOT BETWEEN (CASE WHEN -1.258071926E9 THEN x'' END) AND ((0.6572290214196311 IN (0X5ea10c44)))));SELECT (((((rt0.c3, rt0.c3, rt0.c0))>((rt0.c4, rt0.c3, rt0.c0)))) ISNULL), CAST(NULL AS REAL) COLLATE RTRIM, (((((t0.c17, rt0.c0, t0.c15))>((rt0.c4, rt0.c4, rt0.c3))))<(json_array_length(0.0013721387334909574))) FROM t0 LIMIT -832763085 OFFSET 1324825952;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((((rt0.c0)==(t0.c15)))>=(((rt0.c4)-(rt0.c0)))) ASC  NULLS LAST) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ()))&((((rt0.c4)) BETWEEN (('-1212517263')) AND ((rt0.c0))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)OR(t0.c17 COLLATE RTRIM)))OR(((rt0.c0)AND(rt0.c1)))), ((((((((((((rt0.c2 COLLATE NOCASE)OR(COUNT(*))))OR(MIN(rt0.c3))))AND((- (rt0.c3)))))AND(CASE WHEN rt0.c2 THEN rt0.c4 END)))OR(((t0.c0)IS NOT(rt0.c4)))))AND(((rt0.c0)==(rt0.c3)))), (t0.c17 IN ()) FROM rt0;SELECT DISTINCT ((((t0.c15)GLOB('m'))) IS TRUE) FROM rt0 WHERE (CASE NULL COLLATE NOCASE  WHEN x'' THEN ((NULL) NOT NULL) WHEN TRIM(0x531014f0, NULL) THEN ((-493078892) ISNULL) WHEN ((((((((((((0.9875244532551938)AND(NULL)))AND(0.7595747749376974)))AND(NULL)))AND('sN\n5')))OR(1186384475)))OR('')) THEN x'' COLLATE NOCASE END) ORDER BY 'lSs'  NULLS FIRST LIMIT -1844870240 OFFSET -753978972;SELECT ALL SUM(CAST(rt0.c2 AS TEXT)) FROM t0 WHERE (0X3dc76dac);SELECT DISTINCT (NULL IN ()) FROM t0 WHERE ((((x'')) BETWEEN ((((NULL)<=(x'')))) AND (((((1.186384475E9))!=(('0.6826155434043767'))))))); -- 1ms;
SELECT ALL ((rt0.c4)>((rt0.c1 IN ()))) FROM t0;SELECT DISTINCT CAST('''/!^X7P' COLLATE RTRIM AS BLOB) FROM rt0 WHERE ((IFNULL(DISTINCT NULL, -6.24588535E8) IN ())); -- 0ms;
SELECT ALL ((((rt0.c3)*(rt0.c3))) NOTNULL) FROM t0;SELECT DISTINCT (- ((t0.c15 IN (rt0.c0)))) FROM rt0, t0 WHERE (x'') ORDER BY (NOT (LOWER(t0.c0)))  NULLS LAST; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( PARTITION BY (((((t0.c15)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))LIKE((- (rt0.c0)))), (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4))))!=((CASE WHEN t0.c17 THEN rt0.c2 END))) ORDER BY ((rt0.c2)LIKE(((rt0.c2)-(rt0.c1))))  NULLS LAST, ((((t0.c0)<=(t0.c0)))<<(NULL COLLATE BINARY)) DESC, (((t0.c15) IS FALSE) IN ()) DESC  NULLS FIRST) FROM t0;SELECT DISTINCT (CASE t0.c17  WHEN t0.c15 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN t0.c17 ELSE t0.c17 END IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE NULLIF(0.1846945679476989 COLLATE BINARY, '\r5F겾i')) OVER () FROM t0, rt0 GROUP BY CHAR(t0.c0, rt0.c4, (~ (rt0.c2))), ((t0.c0 COLLATE BINARY) NOT BETWEEN (((t0.c0) BETWEEN (rt0.c0) AND (t0.c17))) AND (0.5138052398107451)), 0X17e150ca, rt0.c3 COLLATE NOCASE, CAST(rt0.c4 AS BLOB) COLLATE BINARY HAVING ((((((t0.c17)!=(rt0.c1)))AND(GROUP_CONCAT(rt0.c4))))AND(((((t0.c17)AND(t0.c0)))AND(rt0.c2))));SELECT TRIM(DISTINCT ((((t0.c0)OR(rt0.c4)))OR(t0.c17))) FROM rt0, t0 WHERE ((((('-335019573')AND(1446704849)))AND(NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL CASE WHEN (rt0.c1 IN ()) THEN ((t0.c17) IS TRUE) END, rt0.c2, GROUP_CONCAT(((x'') NOT BETWEEN (t0.c15) AND (t0.c17))) FROM rt0, t0 WHERE (((((x'' IN (x'1373'))))<=(((((x'433a'))!=(('-720548939'))))))) ORDER BY ((t0.c15 COLLATE BINARY) IS TRUE), (((rt0.c0 IN (t0.c17))) IS FALSE) DESC, ((((((((((((t0.c17)AND(rt0.c3)))AND(t0.c15)))AND(rt0.c2)))OR(t0.c0)))OR(((rt0.c1) BETWEEN (t0.c17) AND (rt0.c0)))))OR((- (rt0.c1))))  NULLS FIRST; -- 1ms;
SELECT DISTINCT -1.120706486E9 FROM rt0, t0; -- 0ms;
SELECT DISTINCT MIN(IFNULL(DISTINCT rt0.c4, rt0.c2)) FROM t0, rt0 WHERE (CASE HEX(DISTINCT '*},r')  WHEN highlight(-360195559, x'', '''ﭒmyP', x'') THEN ((x'')GLOB(-1.84487024E9)) ELSE CASE WHEN 663759199 THEN NULL END END);SELECT ALL ((t0.c0) BETWEEN (json_array_length(rt0.c4)) AND (CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0 WHERE (((x'' COLLATE RTRIM)+(0x1c0ff0af)));SELECT DISTINCT (((t0.c15)) NOT BETWEEN (((((rt0.c2))!=((rt0.c4))))) AND ((((rt0.c0) NOT NULL)))) FROM rt0;SELECT DISTINCT ((((((t0.c15)>(t0.c15)))AND(CAST(rt0.c2 AS BLOB))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE 0.8371542163356147 END)) FROM rt0, t0 WHERE (((CASE NULL  WHEN x'' THEN '883980249' WHEN 'js' THEN '' WHEN NULL THEN x'3a8b688d' ELSE '-122567154' END) IS TRUE)); -- 0ms;
SELECT DISTINCT (((rt0.c1)|(t0.c17)) IN ((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))) FROM t0;SELECT DISTINCT MIN(((rt0.c2)<=(rt0.c2))) FROM t0 WHERE (CASE ('' IN ())  WHEN ((0.0)<=('-1108263628')) THEN ('9T7' IN (x'')) WHEN ((0.49516089578050015) NOT NULL) THEN ((NULL) NOT BETWEEN (x'') AND (0.8619646383663128)) WHEN ((x'fd67') NOT NULL) THEN x'56e6' ELSE ((('1359945611')) NOT BETWEEN (('<|U)')) AND ((NULL))) END);SELECT DISTINCT SQLITE_COMPILEOPTION_GET((t0.c17 IN ())) FROM rt0; -- 0ms;
SELECT ALL AVG(((rt0.c2)IS NOT(t0.c17))) OVER ( ORDER BY CAST((rt0.c2 IN ()) AS TEXT) ASC), COUNT(*) OVER (), SUM((~ (NULL))) OVER () FROM rt0 LEFT OUTER JOIN t0 ON ((NULL)GLOB((- (rt0.c1)))) WHERE ((NULL COLLATE NOCASE IN ((+ (x''))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c15) ISNULL) THEN COUNT(rt0.c4) WHEN ((rt0.c2) NOTNULL) THEN t0.c15 WHEN (t0.c17 IN (t0.c17)) THEN CASE rt0.c1  WHEN t0.c15 THEN rt0.c3 END END, CAST((NOT (rt0.c1)) AS TEXT), (((rt0.c4, rt0.c4, t0.c0)) NOT BETWEEN ((((rt0.c3)!=(rt0.c4)), ((t0.c0) BETWEEN (0.22617107927988778) AND (rt0.c2)), ((t0.c17)||(x'')))) AND ((SQLITE_VERSION(), CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END, MAX('1627590804')))) FROM rt0, t0; -- 0ms;
SELECT (((t0.c0)>=(rt0.c4)) IN ()), ((((rt0.c3)IS NOT(rt0.c1))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND (rt0.c1)), '161532439' FROM t0 GROUP BY t0.c17 HAVING t0.c15;SELECT DISTINCT (0xfffffffff7007744 IN ()), NULL, ((NULL) BETWEEN (((((rt0.c1)OR(t0.c17)))OR(rt0.c0))) AND ((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) FROM rt0, t0 WHERE (((((((((LIKELIHOOD(DISTINCT x'4066', 0.7811800617166155))OR((((0.2287318423399307)) NOT BETWEEN (('540662235')) AND ((NULL))))))OR(CAST(x'' AS REAL))))OR(LIKELIHOOD(DISTINCT '-147229786', 0.9945885368073561))))OR(((0.2691227069478608) NOT BETWEEN (x'') AND ('0.35660852355229333'))))); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((t0.c0) NOTNULL)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c4 THEN t0.c17 END)/(((rt0.c2) IS FALSE))) FROM rt0;SELECT ((t0.c17 COLLATE NOCASE) BETWEEN (((rt0.c4)%(t0.c17))) AND (UNLIKELY(rt0.c4))), 0Xfb884db, ((AVG(rt0.c3))OR(((rt0.c3)LIKE(t0.c15)))) FROM t0, rt0 WHERE ((CASE WHEN NULL THEN NULL WHEN NULL THEN x'' WHEN x'' THEN 0.3157934606985653 END IN (CASE NULL  WHEN NULL THEN NULL END, CASE WHEN x'b4f6' THEN -7.53978972E8 ELSE x'' END))); -- 0ms;
SELECT DISTINCT ((t0.c15)AND(rt0.c4)) COLLATE NOCASE FROM t0, rt0 WHERE (CASE WHEN json_array(NULL, 'k') THEN CASE -834131387  WHEN -1.47229786E8 THEN x'' ELSE NULL END END) ORDER BY ((((t0.c0 IN ())))!=((NULL COLLATE BINARY)))  NULLS FIRST, ((rt0.c0)<=(rt0.c3)) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT NULL FROM rt0, t0; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c0  WHEN t0.c17 THEN rt0.c3 END  WHEN ((rt0.c3)-(rt0.c3)) THEN NULL ELSE NULL END FROM t0, rt0; -- 0ms;
SELECT DISTINCT rt0.c4, (((CAST(t0.c0 AS REAL)))>=((rt0.c1))), json_valid(((x'') IS FALSE)) FROM rt0, t0 WHERE (((((1876884306)>(''))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c4)<(rt0.c4)))<<(CASE rt0.c2  WHEN t0.c0 THEN t0.c15 ELSE t0.c0 END)) FROM t0 ORDER BY ((COALESCE(DISTINCT t0.c17, rt0.c0, t0.c0, rt0.c3, t0.c17, rt0.c3, rt0.c0, rt0.c4)) NOTNULL) DESC, ((((rt0.c0)OR(t0.c15))) BETWEEN (CAST(rt0.c3 AS BLOB)) AND (((t0.c15) BETWEEN (-2.140401687E9) AND (t0.c17)))) ASC  NULLS FIRST, ((((((((((rt0.c4) ISNULL))OR(rt0.c0 COLLATE BINARY)))AND(CAST(rt0.c1 AS REAL))))OR((t0.c0 IN ()))))AND((rt0.c3 IN ()))) DESC  NULLS LAST;SELECT ALL (((((rt0.c1, rt0.c1, NULL)) NOT BETWEEN ((NULL, rt0.c1, t0.c17)) AND ((t0.c15, rt0.c4, rt0.c0)))) NOTNULL) FROM t0, rt0; -- 0ms;
SELECT ((rt0.c4 COLLATE RTRIM)+(MIN(t0.c17))) FROM rt0 WHERE (((('')) NOT BETWEEN ((CAST(0.2116963219682153 AS INTEGER))) AND ((CAST('' AS NUMERIC))))) ORDER BY t0.c15 ASC  NULLS FIRST;SELECT DISTINCT NULL, ((((((((((t0.c0)AND(t0.c15)))OR(rt0.c3)))AND(rt0.c4)))AND(t0.c0))) ISNULL), ((((rt0.c2)==(rt0.c0))) IS FALSE) FROM t0, rt0 WHERE (NULL); -- 0ms;
SELECT ALL ABS(((rt0.c1)/(x''))) FROM t0, rt0 WHERE (CAST('&kG' COLLATE BINARY AS INTEGER)); -- 0ms;
SELECT DISTINCT TRIM(CASE t0.c15  WHEN rt0.c4 THEN t0.c15 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c15 ELSE x'00b6' END), ((((t0.c0)<=(rt0.c0))) NOT BETWEEN ((~ (rt0.c1))) AND (COUNT(*))), SUM(x'') OVER () FROM rt0;SELECT ALL '-832763085' FROM rt0, t0 WHERE ((((((((((('-598470219')OR('Lv')))OR('')))OR(0.26621787985285594)))OR('-335019573'))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS TEXT) FROM t0 GROUP BY ((rt0.c2)IS NOT(x'')) COLLATE NOCASE, ((((rt0.c1) NOT BETWEEN (t0.c15) AND (rt0.c2))) IS FALSE), rt0.c4;SELECT DISTINCT ((CAST(0.1751950471540823 AS TEXT)) NOT BETWEEN (((NULL)+(rt0.c2))) AND ((((rt0.c0)) BETWEEN ((t0.c15)) AND ((rt0.c3))))) FROM t0, rt0 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT (+ ((((t0.c0, rt0.c3, rt0.c3))<=((t0.c17, rt0.c4, rt0.c4))))) FROM t0, rt0; -- 0ms;
SELECT ALL SUM(CASE WHEN t0.c15 THEN 0.5925798449646553 END), ((rt0.c3 COLLATE NOCASE)<(0xffffffffffffffff)), (- (t0.c17)) COLLATE RTRIM, ((CAST(t0.c17 AS INTEGER))AND((((t0.c15))<((t0.c15))))), CASE WHEN ABS(DISTINCT rt0.c1) THEN ((rt0.c0)<<(0.6610294245279389)) ELSE (NOT (rt0.c1)) END FROM t0;SELECT (((rt0.c0) BETWEEN (t0.c15) AND (-1669646228)) IN ()), (((rt0.c2)) BETWEEN (((~ (t0.c0)))) AND ((CASE t0.c17  WHEN t0.c0 THEN NULL END))), (((t0.c17) IS TRUE) IN ((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))) FROM rt0 WHERE (((('-1196283478')) BETWEEN ((((0.22617107927988778)OR(NULL)))) AND ((CASE WHEN 0.36074499177393204 THEN '-1649946381' END))));SELECT PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((AVG('-147229786'))AND(-1074623748)))OR(((rt0.c0) IS TRUE))) FROM t0, rt0 WHERE ((((NULL) NOT BETWEEN (NULL) AND ('')) IN ())); -- 1ms;
SELECT LEAD((((rt0.c4)>>(rt0.c4)) IN ()), (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c4 COLLATE RTRIM, ((((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))))>((((rt0.c3)IS NOT(rt0.c1)), rt0.c2, ((rt0.c0) BETWEEN (x'') AND (rt0.c0))))), LOWER((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) OVER ( ORDER BY (((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c17)) IN (x''))  NULLS FIRST, 0.570715458403526) FROM rt0 EXCEPT SELECT ((NOT (rt0.c0)) IN (TRIM(NULL, t0.c15))) FROM t0 NOT INDEXED WHERE (CASE CASE WHEN '2j븷sS<S' THEN 'Pj५ૠ' WHEN x'' THEN '-1108263628' WHEN 0.4345154469996507 THEN x'3565' ELSE NULL END  WHEN ((((((((0.22537059391630054)OR(x'')))OR(NULL)))AND(NULL)))OR('0D*')) THEN NULL END);SELECT DISTINCT (('䆆*4Xl') NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((t0.c17)>>(rt0.c3)))) FROM t0;SELECT DISTINCT ((((((((((rt0.c3)AND(rt0.c1)))OR(t0.c0)))OR(rt0.c2)))AND(rt0.c0)))!=(((rt0.c4) BETWEEN (t0.c0) AND (t0.c0)))) FROM rt0, t0 WHERE ((((('&p᠄IvᒈUz*') IS TRUE)) NOT BETWEEN (x'' COLLATE NOCASE) AND (((NULL) IS FALSE)))); -- 0ms;
SELECT CASE WHEN rt0.c3 COLLATE NOCASE THEN rt0.c4 COLLATE BINARY WHEN rt0.c1 THEN rt0.c4 COLLATE RTRIM WHEN 0.41186470823302435 COLLATE BINARY THEN ((((rt0.c2)AND(t0.c15)))AND(t0.c17)) ELSE (rt0.c4 IN ()) END FROM rt0, t0 WHERE (((((x'')GLOB('a<ౄ4#p6<'))) NOT NULL)) ORDER BY rt0.c0; -- 0ms;
SELECT LAST_VALUE(((((CASE WHEN t0.c17 THEN t0.c17 END)AND(json_array(t0.c0, t0.c0, t0.c17, t0.c17))))AND(((t0.c15) NOT BETWEEN (t0.c0) AND (x''))))) OVER ( ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) ASC, (+ ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC  NULLS LAST), CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), (((rt0.c0)) NOT BETWEEN (((t0.c15 IN ()))) AND (((+ (t0.c15))))) FROM t0 WHERE (x'') LIMIT -122567154;SELECT ((SUM(t0.c0))>(((t0.c15) IS FALSE))), CASE WHEN (rt0.c2 IN (rt0.c1)) THEN ((((t0.c0)OR(rt0.c2)))OR(rt0.c1)) END, rt0.c2 FROM rt0 WHERE (CAST(1757066056 AS BLOB));SELECT ALL ((CASE WHEN x'' THEN rt0.c3 ELSE t0.c15 END) BETWEEN (json_quote(t0.c0)) AND (TIME(x'', rt0.c2, t0.c0, t0.c0, t0.c17))), rt0.c1, (((((((((((((('㚔蓝')AND(t0.c15)))OR(t0.c0)))AND(t0.c0)))AND(t0.c17)))AND(t0.c17)))AND(rt0.c4)))>>((((rt0.c2))>((rt0.c2))))) FROM t0 WHERE (CAST(((1001427062) IS TRUE) AS INTEGER));SELECT ALL (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) FROM rt0 WHERE (((((((NULL)IS(x'')))OR((('-1488289502')<>(NULL)))))OR(((((((((0.8264853882975998)OR(0.7816414552569827)))OR('')))OR(NULL)))AND(230165520))))); -- 0ms;
SELECT DISTINCT ABS(rt0.c3 COLLATE NOCASE) FROM rt0 INDEXED BY i9 WHERE ((CASE NULL  WHEN '1097685452' THEN '540662235' WHEN '-985911019' THEN 'aV' WHEN -188724882 THEN '768597407' ELSE 0xffffffffce5d0b33 END IN ())) GROUP BY ((((((((((((rt0.c3)AND(-1245607650)))OR('-179218970')))OR(t0.c17)))OR(rt0.c2)))OR(((((t0.c17)AND(rt0.c3)))OR(t0.c15)))))AND(((((rt0.c0)OR(rt0.c1)))AND(rt0.c4)))) HAVING (NOT ((~ (rt0.c2))));SELECT DISTINCT CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT 0x19023274 FROM t0, rt0 WHERE ((((((0.23424659139331416)) NOT BETWEEN (('-')) AND ((0x1254a8f9)))) BETWEEN (CAST('' AS TEXT)) AND ((('-883129660')>>(0.8082132533916796))))); -- 0ms;
SELECT ALL ((rt0.c2)&(rt0.c0)) COLLATE NOCASE FROM rt0 WHERE (LOWER(((('995822437')) BETWEEN ((NULL)) AND ((''))))); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)<<(-9223372036854775808)) FROM t0;SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((+ (0.8082132533916796 COLLATE NOCASE))) LIMIT 1096015371 OFFSET -1996663080; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.4649111358903987)))+(((rt0.c1)%(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(((rt0.c0)*(t0.c17))) FROM rt0 WHERE ((((NOT (0Xfffffffff2978a27)))|(CASE WHEN 'kN' THEN '' WHEN NULL THEN NULL WHEN NULL THEN '' END)));SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) AS BLOB) FROM rt0 WHERE (CAST(CAST(NULL AS NUMERIC) AS TEXT));SELECT DISTINCT (((rt0.c0, t0.c0, rt0.c3)) NOT BETWEEN ((((t0.c15) NOT NULL), ((rt0.c3)GLOB(rt0.c3)), (((t0.c0))==((rt0.c1))))) AND ((x'' COLLATE BINARY, CAST(rt0.c1 AS REAL), CAST(t0.c17 AS BLOB)))), (- (t0.c15 COLLATE NOCASE)), 'mJ1' FROM rt0 GROUP BY (((~ (t0.c17))) IS TRUE) HAVING (((((rt0.c3)) BETWEEN ((NULL)) AND ((rt0.c3))))>>(((t0.c15)!=(t0.c0)))) ORDER BY ((SQLITE_VERSION())IS(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))));SELECT rt0.c1 FROM rt0 WHERE ((((('lv') NOT NULL))<=((+ (x'620e'))))); -- 0ms;
SELECT DISTINCT TOTAL(rt0.c4) OVER (), SUM(LIKELY(rt0.c2)) FILTER(WHERE rt0.c2) OVER (), ((((rt0.c2)|(rt0.c1))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (t0.c15 COLLATE RTRIM)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c3)IS(rt0.c3)) IN (COUNT(*))), rt0.c3, RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL ((((t0.c0) NOTNULL))>=(((rt0.c1) NOTNULL))) FROM rt0 WHERE (NULL);SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))/(((x'')&(t0.c0)))) FROM rt0 NOT INDEXED WHERE (((((0xffffffffa2a4c116)%('')))<=((((x'')) NOT BETWEEN (('c.q5+<d\')) AND ((NULL))))));SELECT (NOT (((t0.c17) NOT NULL))) FROM rt0;SELECT ALL TOTAL(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c15))) FILTER(WHERE (((rt0.c3)) BETWEEN ((((rt0.c3) BETWEEN (NULL) AND (t0.c15)))) AND ((((rt0.c3) NOTNULL))))) OVER (), '1085713598', ((rt0.c4)>=(t0.c0)) COLLATE NOCASE, ((((rt0.c4) ISNULL)) ISNULL), COUNT(0xffffffff9dc56b60 COLLATE RTRIM) OVER () FROM t0;SELECT DISTINCT (((((((NULL)AND(t0.c0)))OR(rt0.c3)), MIN(rt0.c0), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))>=((MIN(t0.c17), (rt0.c0 IN ()), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM t0, rt0 LIMIT 1492934500 OFFSET 1431977351; -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0 WHERE (((0.7404770578174416 COLLATE RTRIM)IS((0xffffffffec0801cb IN ('<|u)'))))); -- 0ms;
SELECT DISTINCT RANK() OVER (), ((COUNT(rt0.c4))>=(((t0.c17) NOT NULL))), SUM(((rt0.c4) NOT BETWEEN (rt0.c3) AND (t0.c17))) FROM rt0 ORDER BY ((TYPEOF(DISTINCT t0.c17)) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN '' WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 ELSE t0.c15 END) AND (HEX(DISTINCT t0.c15)))  NULLS FIRST;SELECT DISTINCT LAST_VALUE(((((((rt0.c4)|(rt0.c3)))OR(HEX(DISTINCT rt0.c3))))AND((rt0.c1 IN ())))) OVER ( GROUPS (- ('WYV0~,]t')) PRECEDING), MAX('807471467'), CASE WHEN rt0.c2 THEN rt0.c2 WHEN -10893412 THEN t0.c0 WHEN rt0.c3 THEN t0.c15 END COLLATE RTRIM FROM rt0;SELECT (((rt0.c4)<(rt0.c4)) IN ()), '', (~ ((rt0.c1 IN (t0.c17, t0.c17)))) FROM rt0;SELECT DISTINCT t0.c17 FROM t0 WHERE (((((((((((('-1371480620')) BETWEEN ((49167914)) AND ((x''))))OR(((NULL) BETWEEN (0.7660602032399164) AND (NULL)))))AND((NULL IN ('-753978972')))))OR(0.42270478970754555 COLLATE RTRIM)))OR(((((NULL)AND(x'f793')))AND(0X6a748b38))))); -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS REAL))GLOB(((rt0.c1) NOT NULL))) FROM rt0 GROUP BY (((CAST(rt0.c2 AS TEXT)))>=((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))))); -- 0ms;
SELECT NULL FROM rt0, t0 WHERE (((((json_valid(NULL))AND(((((0.912504914965451)OR(0.26621787985285594)))AND(0.37057080751704297)))))AND(json_extract(NULL, 0.0407993659026612)))); -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE ((('?}WEErIࣩL') IS FALSE)); -- 0ms;
SELECT '1876884306', (rt0.c4 COLLATE NOCASE IN ()), (((rt0.c3 IN ())) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c15 END)) FROM t0 LIMIT -1602827344 OFFSET -289031686;SELECT DISTINCT ((((((((((((((rt0.c0)OR(NULL)))OR(t0.c0)))OR(t0.c15)))AND(0.5925798449646553)))AND(rt0.c3)))OR(rt0.c4))) IS TRUE), ((((((((((((('[')OR(rt0.c1)))OR(t0.c17)))AND(rt0.c2)))OR(rt0.c0)))AND(t0.c17)))AND(rt0.c4)) IN ()), CASE rt0.c4 COLLATE BINARY  WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)) THEN IFNULL(DISTINCT rt0.c4, rt0.c0) ELSE ((x'') NOT BETWEEN (rt0.c3) AND ('1085713598')) END, (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(((((rt0.c0)OR(t0.c0)))AND(t0.c0)))), ((t0.c17)AND(rt0.c4)) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT ALL CASE AVG(rt0.c0)  WHEN NULL THEN '-1030447129' ELSE (NOT (rt0.c1)) END FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c3  WHEN t0.c17 THEN rt0.c0 ELSE rt0.c3 END) IS TRUE), ((t0.c17)<=((((t0.c15))<((t0.c0))))), rt0.c0 FROM t0 WHERE ((~ (((('')) NOT BETWEEN ((60067485)) AND ((x''))))));SELECT ALL ((rt0.c2) BETWEEN (rt0.c0) AND (t0.c15)) COLLATE NOCASE FROM rt0, t0 WHERE (((((0.20188437770056467)=('Q>O')))/(SUBSTR(0xffffffffeec5b9fa, 'gQbb\r/h4')))); -- 0ms;
SELECT ALL t0.c17 FROM rt0 WHERE (CAST(((x'8681')||('-699636058')) AS NUMERIC));SELECT DISTINCT -485304531 FROM rt0, t0 WHERE ((((((NULL)AND(-1788083811)))AND(NULL)) IN ((+ ('-3eZ'))))); -- 1ms;
SELECT DISTINCT NULL, CASE WHEN ((rt0.c3)&(rt0.c1)) THEN CAST(rt0.c4 AS REAL) ELSE CAST(t0.c0 AS NUMERIC) END, ((((rt0.c1)>>(t0.c0))) IS TRUE) FROM rt0, t0; -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED(CASE ''  WHEN t0.c0 THEN rt0.c0 END), CASE x''  WHEN rt0.c0 THEN t0.c0 ELSE t0.c17 END COLLATE BINARY, TOTAL((t0.c17 IN ())) FROM rt0, t0 WHERE ((('1411916138')OR(x''))); -- 0ms;
SELECT ALL TOTAL(((rt0.c3) IS TRUE)), -8.32763085E8, ((((((rt0.c3) IS FALSE))AND(rt0.c2 COLLATE BINARY)))OR((((rt0.c1))<=((t0.c0))))) FROM rt0 WHERE (((((0.2732483552176921)-(-1.856782793E9))) BETWEEN (((-1874442554) ISNULL)) AND (0.7851482126587221 COLLATE NOCASE))) GROUP BY t0.c17;SELECT DISTINCT ((((((rt0.c2)AND(t0.c0)))AND(t0.c17))) NOT BETWEEN (ABS(rt0.c3)) AND (((rt0.c2) ISNULL))), TRIM(((rt0.c4) NOTNULL)), UPPER(rt0.c3) COLLATE RTRIM FROM t0 WHERE (((((0Xf8f88f)) BETWEEN ((0Xffffffffd2ea5a7a)) AND ((''))) IN (((NULL) NOT BETWEEN (x'bf33') AND ('-156118903')))));SELECT DISTINCT ((((rt0.c2) IS FALSE))>=((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c17))))) FROM t0, rt0; -- 0ms;
SELECT ((((1842712883)AND(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(rt0.c4)) FROM rt0, t0 WHERE ((((((((NULL)OR('R￿꣹JVa')))OR(655113733))))>(((('') ISNULL))))); -- 0ms;
SELECT (((rt0.c2)) NOT BETWEEN ((t0.c17)) AND ((t0.c15))) COLLATE BINARY, ((((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c17)))IS(((rt0.c0)||(rt0.c1)))), ((COUNT(*)) NOT NULL) FROM rt0;SELECT ALL ((COUNT(t0.c15)) BETWEEN (((t0.c0) BETWEEN (rt0.c2) AND (t0.c17))) AND ((rt0.c3 IN ()))), GROUP_CONCAT(((('1431977351')) BETWEEN ((rt0.c1)) AND ((rt0.c1)))), ((((((rt0.c1)OR(t0.c0)))AND(rt0.c4))) NOT NULL) FROM rt0, t0 ORDER BY ((((((t0.c0) IS FALSE))AND(((((((((rt0.c0)AND(t0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))))OR(UPPER(rt0.c2)))  NULLS FIRST, '-1030447129'  NULLS LAST; -- 1ms;
SELECT DISTINCT ((CAST(t0.c17 AS INTEGER)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (x'')) FROM t0 WHERE ((((NULL)GLOB(0.44981680336774355)) IN ()));SELECT ALL CASE ((rt0.c0)>=(NULL))  WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN rt0.c4 WHEN rt0.c4 THEN t0.c17 WHEN t0.c17 THEN rt0.c4 ELSE rt0.c0 END WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c1)==(rt0.c2)) END FROM rt0, t0 WHERE (CAST(ABS(0.3157425409966699) AS NUMERIC)); -- 0ms;
SELECT ALL CAST(t0.c15 COLLATE RTRIM AS REAL) FROM t0 CROSS JOIN rt0 ON ((t0.c15)>=(NULL)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((((((((((t0.c15)AND(rt0.c2)))AND(rt0.c3)))AND(CASE WHEN t0.c15 THEN rt0.c1 ELSE rt0.c2 END)))OR(rt0.c2)))OR(0.9057467996858884)))AND(HEX(DISTINCT t0.c0))) FROM t0, rt0 WHERE ((((('1627590804')!=('2067540569')))=((x'bfc3' IN (x''))))); -- 0ms;
SELECT ALL COUNT(*) OVER ( ORDER BY ((((((t0.c17)AND(rt0.c2)))OR(rt0.c4)))LIKE((- (t0.c17)))) ASC) FROM t0, rt0 WHERE (((6.5885616E7 COLLATE BINARY) NOT BETWEEN (NULL) AND (CASE WHEN x'' THEN '0.6222937296897227' END))); -- 0ms;
SELECT DISTINCT AVG(((((rt0.c4)AND(rt0.c2)))AND(t0.c0))) FROM rt0 WHERE (CASE ((2.53396189E8)<<(NULL))  WHEN (NOT (NULL)) THEN CASE ''  WHEN NULL THEN 0xffffffff9153be37 WHEN '' THEN 1.431977351E9 WHEN 0.9009203460830046 THEN '' WHEN -1.24560765E9 THEN 0.2133820575976093 WHEN NULL THEN x'' ELSE 'L*Kzn*' END END);SELECT GROUP_CONCAT(((rt0.c3)/(t0.c0)) COLLATE RTRIM) FROM rt0;SELECT DISTINCT TRIM((((t0.c17))<((t0.c15)))), CAST(CASE WHEN rt0.c3 THEN rt0.c0 ELSE t0.c0 END AS REAL), ABS(CAST(t0.c0 AS TEXT)) FROM t0 ORDER BY (- (((((((((t0.c15)OR(rt0.c4)))AND(rt0.c3)))OR(t0.c0)))OR(t0.c15)))) DESC, (((rt0.c0)) BETWEEN (((t0.c17 IN (rt0.c0, rt0.c1)))) AND (((+ (rt0.c2))))) DESC;SELECT DISTINCT LAG((((((rt0.c0 IN (rt0.c1)))AND(load_extension(t0.c17, t0.c15))))OR(t0.c17 COLLATE BINARY)), (((+ (rt0.c1)))=(((rt0.c1) ISNULL))), NULL) OVER () FROM t0, rt0 GROUP BY (- (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END));SELECT ALL (+ (((rt0.c1) NOTNULL))) FROM t0;SELECT ((CAST('' AS REAL)) ISNULL), (((t0.c0, rt0.c0, rt0.c4)) BETWEEN ((((x'') NOT NULL), MIN(rt0.c0), '')) AND ((TRIM(t0.c0, t0.c17), (((t0.c0, rt0.c2, rt0.c0))>((rt0.c0, rt0.c0, t0.c0))), ((rt0.c0)!=(rt0.c4))))), AVG((~ (t0.c0))) OVER ( PARTITION BY CAST(rt0.c0 COLLATE RTRIM AS TEXT), ((((t0.c17)*(rt0.c0)))<=(((((((((rt0.c3)OR(t0.c17)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c1))))) FROM rt0 WHERE (((NULLIF(DISTINCT 0Xfffffffff55155e6, x'')) NOT BETWEEN ((((NULL)) BETWEEN ((0Xffffffffa492852d)) AND ((NULL)))) AND ((((((((('0.2116963219682153')OR('')))AND('230165520')))AND('1543156065')))OR(0.2691227069478608)))));SELECT DISTINCT json_valid(((t0.c0)GLOB(rt0.c3))) FROM t0, rt0 WHERE (UPPER((~ (1.001427062E9)))) GROUP BY load_extension(x'', UNLIKELY(rt0.c0)), ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN t0.c17 WHEN rt0.c1 THEN rt0.c4 END)<>('-335019573')), CASE WHEN ((t0.c17) BETWEEN (rt0.c4) AND (0.026058283190714904)) THEN ((((t0.c15)OR(rt0.c0)))AND(rt0.c4)) ELSE (NOT (t0.c15)) END HAVING CASE WHEN x'1684' THEN t0.c17 COLLATE NOCASE WHEN ((((((((rt0.c4)AND(t0.c0)))OR(t0.c0)))OR(rt0.c3)))OR(t0.c15)) THEN rt0.c1 COLLATE RTRIM WHEN (- (rt0.c0)) THEN TOTAL(t0.c17) WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c17)) THEN ((t0.c15) IS FALSE) WHEN SUM(rt0.c0) THEN COALESCE(t0.c17, t0.c15, t0.c15, rt0.c2) END;SELECT DISTINCT COUNT(*) OVER () FROM t0, rt0; -- 0ms;
SELECT ALL LEAD(NULL, CASE WHEN SQLITE_SOURCE_ID() THEN ((('-1598875342'))<>((t0.c0))) END, (((t0.c17 IN ())) IS FALSE)) OVER () FROM t0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) ISNULL) FROM rt0 WHERE (CAST((0.6528946779384189 IN (0.08295885609761255)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM)!=(t0.c17)), ((((t0.c0) ISNULL))*(((0.06942561979467654) BETWEEN (rt0.c2) AND (t0.c17)))), ((((((((((((t0.c15)OR(rt0.c3)))AND(NULL)))AND(t0.c0)))OR(t0.c0)))OR(CAST(rt0.c2 AS INTEGER))))OR(IFNULL(t0.c15, t0.c0))) FROM t0;SELECT ALL ((((rt0.c1)OR(t0.c17)))/((~ (rt0.c0)))) FROM rt0 LIMIT 640933144 OFFSET 1510652688;SELECT ((((rt0.c2)OR(t0.c0)))OR(rt0.c0)) COLLATE RTRIM FROM t0, rt0; -- 0ms;
SELECT ((SQLITE_COMPILEOPTION_GET(t0.c0))IS(((rt0.c4)>=(rt0.c2)))) FROM rt0, t0 ORDER BY ((rt0.c3 COLLATE NOCASE)IS NOT(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))), SQLITE_SOURCE_ID() DESC; -- 0ms;
SELECT t0.c15, CAST(((rt0.c0)|(rt0.c1)) AS TEXT), TOTAL('-699636058') OVER () FROM t0, rt0 WHERE (json_valid(((x'') NOT BETWEEN (-1547413296) AND (0X58fc5f64)))) GROUP BY (CASE WHEN NULL THEN t0.c0 ELSE NULL END IN ()), CASE WHEN 0Xffffffffe535915f THEN 'e)㸀02' WHEN (((t0.c17, rt0.c1, NULL))<((rt0.c3, rt0.c2, t0.c15))) THEN CASE t0.c15  WHEN t0.c0 THEN t0.c0 ELSE t0.c17 END WHEN ABS('T~') THEN (((rt0.c4, rt0.c2, rt0.c3)) BETWEEN ((t0.c17, t0.c15, rt0.c3)) AND ((t0.c15, rt0.c3, t0.c0))) END, ABS(DISTINCT ((t0.c17) NOT NULL)) HAVING CASE ((rt0.c4)<>(t0.c17))  WHEN (rt0.c4 IN (t0.c0)) THEN CASE t0.c0  WHEN '' THEN rt0.c1 END WHEN ((t0.c15) NOT BETWEEN (t0.c0) AND (rt0.c0)) THEN CASE WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END WHEN ((rt0.c1) NOTNULL) THEN rt0.c1 COLLATE NOCASE END; -- 1ms;
SELECT DISTINCT (((('䆆*4xl') BETWEEN (rt0.c3) AND (rt0.c4)))%(((((((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))AND(t0.c15)))AND(rt0.c1)))OR(rt0.c4)))AND(0.018324329390050353)))) FROM rt0, t0 WHERE ((((('1685703753') ISNULL)) BETWEEN (CASE WHEN 0.6225532087701008 THEN 'F{ⅫR5' END) AND ((('')&('1'))))); -- 0ms;
SELECT DISTINCT (((((t0.c15) IS TRUE)))>(((((rt0.c4))<=((t0.c17)))))) FROM rt0, t0 WHERE (((((('')AND('995822437')))OR(0.22623819350527308)) IN ())) ORDER BY NULL DESC, ((((CAST(rt0.c0 AS INTEGER))AND((rt0.c2 IN ()))))OR(((((1060180123)OR(rt0.c3)))AND(0.11408854872447738)))); -- 0ms;
SELECT (((rt0.c1)) NOT BETWEEN ((CASE WHEN t0.c17 THEN t0.c0 WHEN rt0.c4 THEN t0.c17 WHEN NULL THEN rt0.c3 ELSE rt0.c4 END)) AND ((((((rt0.c3)OR(t0.c15)))OR(t0.c17))))), rt0.c3, '1324825952' FROM t0 WHERE (((x'ad61' COLLATE RTRIM)||(0.17852372599762645)));SELECT DISTINCT MAX(TYPEOF(rt0.c4)) FROM rt0, t0 WHERE ((((((x'')) BETWEEN (('')) AND ((0.2617114281825451))))IS(x'' COLLATE NOCASE))) LIMIT -224949721; -- 0ms;
SELECT COUNT(*) FILTER(WHERE ((((((t0.c15)&(t0.c17)))AND(((t0.c0)=(t0.c0)))))OR((t0.c0 IN ())))) OVER (), NTH_VALUE((((0.25352112999099774 IN ())) IS FALSE), (~ (rt0.c1))) OVER (), CASE WHEN ((((rt0.c3)OR(rt0.c3)))AND(t0.c17)) THEN json_array_length(rt0.c1) ELSE ((0X4c045656)>>(t0.c15)) END, GROUP_CONCAT(((rt0.c0)%(rt0.c3))) COLLATE RTRIM, RANK() OVER () FROM rt0, t0;SELECT CAST(x'' AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((((t0.c0 COLLATE NOCASE)AND(CAST('1690519927' AS BLOB))))OR((rt0.c2 IN ()))) FROM t0 WHERE (IFNULL(((0Xfffffffff8b1c60e)IS NOT(0Xfffffffff7007744)), CAST(' ' AS BLOB))) ORDER BY ((((((((CAST(rt0.c0 AS BLOB))AND(CASE WHEN rt0.c3 THEN NULL ELSE t0.c0 END)))OR((((rt0.c4, rt0.c1, t0.c17)) BETWEEN ((rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c1, t0.c17, t0.c17))))))AND(((t0.c17) NOT BETWEEN (t0.c0) AND (rt0.c3)))))OR((~ (t0.c17))));SELECT DISTINCT (((rt0.c3) BETWEEN (t0.c15) AND (t0.c15)) IN ()) FROM t0, rt0 WHERE ((((((((((('-122567154') NOT NULL))AND((('-9223372036854775808')*(x'dcbc')))))AND(((x'ab13') IS TRUE))))AND(NULL)))AND(((0.8487074552655437) NOTNULL)))) LIMIT -1007172079; -- 0ms;
SELECT DISTINCT (- (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) FROM t0, rt0 WHERE (((CAST('-1350480554' AS BLOB))<<(CAST(0Xfffffffff7dbacc9 AS TEXT)))) LIMIT 1529956270 OFFSET -289031686; -- 0ms;
SELECT DISTINCT (((((((((((t0.c17)AND(rt0.c2)))AND(t0.c0)))AND(rt0.c3)))OR(t0.c15))))<=(((rt0.c1 IN (rt0.c2))))) FROM rt0, t0 WHERE (CASE ((x'')>=(0.9104057128823547))  WHEN (0.4380089156338256 IN (0.6713397343759453)) THEN COALESCE(DISTINCT x'a145', 0.8944046420714884, NULL, NULL) ELSE IFNULL('N', NULL) END); -- 0ms;
SELECT ALL JULIANDAY(rt0.c3 COLLATE NOCASE, ((rt0.c1)&(t0.c15)), ((rt0.c2) ISNULL)), GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))), ((((((rt0.c0)IS NOT(rt0.c3)))OR(((((((((t0.c15)OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c0)))OR(t0.c0)))))OR((~ (0.7352170024058321)))) FROM t0 INDEXED BY i68, rt0 WHERE ((+ (CASE WHEN 0.16353963224017964 THEN NULL END)));SELECT LAST_VALUE(rt0.c2) OVER () FROM rt0 WHERE (CASE WHEN 0.8718996206772512 THEN '-247074260' END COLLATE BINARY COLLATE BINARY) LIMIT -1648006304; -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY CASE ''  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)<(NULL)) END, CAST(rt0.c1 AS NUMERIC)) FROM t0 WHERE ((((x'' IN ())) NOT BETWEEN ((((x''))>=((0Xffffffffff0ef8d1)))) AND (NULL COLLATE BINARY)));SELECT DISTINCT TOTAL((((t0.c17))>=((t0.c17)))) FROM rt0, t0; -- 1ms;
SELECT NULL FROM rt0, t0; -- 0ms;
SELECT ALL (((((rt0.c0 IN ()))OR(((t0.c15)%(rt0.c2)))))AND(CAST(t0.c17 AS TEXT))) FROM rt0, t0 ORDER BY 0.13987168700478092 DESC; -- 0ms;
SELECT DISTINCT (((('768597407')OR(((t0.c17) BETWEEN (t0.c17) AND (rt0.c1)))))AND(LIKELY(DISTINCT rt0.c3))) FROM rt0 ORDER BY (CASE WHEN t0.c0 THEN 'bo' ELSE t0.c0 END IN ()) ASC  NULLS LAST, ((((CASE WHEN rt0.c4 THEN t0.c0 ELSE t0.c0 END)AND((((t0.c17)) BETWEEN ((rt0.c4)) AND ((rt0.c1))))))AND(((rt0.c0)IS NOT(t0.c15)))) DESC;SELECT LAST_INSERT_ROWID() FROM t0, rt0; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT (rt0.c4 IN (rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(STRFTIME(rt0.c0, rt0.c4, t0.c0) AS NUMERIC) FROM t0, rt0; -- 0ms;
SELECT ALL CASE WHEN (((NULL, rt0.c0, rt0.c0)) NOT BETWEEN ((t0.c17, rt0.c1, t0.c0)) AND ((rt0.c4, rt0.c1, rt0.c4))) THEN ((rt0.c4) NOT NULL) WHEN CASE rt0.c0  WHEN rt0.c1 THEN t0.c15 END THEN (rt0.c2 IN ()) WHEN (((rt0.c4)) BETWEEN ((rt0.c1)) AND (('0.3029508331795342'))) THEN ((rt0.c1) NOT NULL) END, 8.83980249E8, CAST(CASE WHEN rt0.c4 THEN rt0.c1 END AS REAL) FROM rt0 WHERE (((((((((0.41317207545793977)OR(-1324490920)))OR('0.9875244532551938')))AND(((('_B륳9횲3', x'0e85', x''))>((NULL, 0.5120040763318239, x''))))))OR(((0.06942561979467654)IS(0.5327086820374491)))));SELECT ALL ((GROUP_CONCAT(rt0.c3)) ISNULL), (+ (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN t0.c15 WHEN t0.c17 THEN '-598851163' END)), ((((((((((t0.c17)-(rt0.c4)))OR(((((rt0.c3)AND(t0.c15)))AND(rt0.c2)))))OR(CASE WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN t0.c0 ELSE rt0.c0 END)))OR(((rt0.c0)OR(rt0.c3)))))AND(json_quote('P('))) FROM rt0 WHERE ((- (((((',(%[ 7u~')AND('419574388')))AND(x'b19f')))));SELECT DISTINCT TOTAL(((rt0.c1) NOTNULL)) OVER (), (NOT (rt0.c3)), ((json_array_length(rt0.c3, t0.c17)) IS TRUE) FROM rt0 WHERE ((((- (x'')))-((('0.1751950471540823')<=('1085713598')))));SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN t0.c15 THEN t0.c15 ELSE t0.c15 END)IS(rt0.c3)), 'u	((aM㤾', CAST(t0.c15 AS INTEGER) FROM rt0 WHERE ((((((((')'))<((x''))))AND(((((((((x'')OR('fr囨w')))OR(x'')))AND(x'')))OR(0xffffffff9c7b386c)))))OR(CASE '1244581490'  WHEN 0.9420672704387121 THEN '419574388' ELSE 0.4649111358903987 END)));SELECT (((((rt0.c4, rt0.c4, '6勩kD')) BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((-126111248, rt0.c3, x'7f83'))))/(t0.c15)) FROM t0 WHERE (LIKELY(DISTINCT ((x'3f10bbff') BETWEEN (x'f184') AND ('*+~xeJ'))));SELECT ALL (((t0.c0)) BETWEEN (('')) AND ((((t0.c15)IS NOT(rt0.c1))))) FROM t0, rt0 WHERE (((DATE(NULL, 663759199, -281211605)) BETWEEN ((+ (NULL))) AND (0.15789234209431768))); -- 0ms;
SELECT DISTINCT ((((COUNT(*))AND('0.18053367337723425')))AND(MAX(t0.c15))) FROM rt0, t0 ORDER BY ((((rt0.c2) IS FALSE)) NOTNULL)  NULLS FIRST, (~ (((rt0.c3)<=(rt0.c2)))) DESC  NULLS FIRST, ((CAST(rt0.c3 AS REAL))+(CAST(rt0.c4 AS NUMERIC))) ASC, CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT x'', (t0.c17 IN (rt0.c2, rt0.c0)) COLLATE NOCASE, ((CASE WHEN t0.c15 THEN rt0.c2 END) NOT NULL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE ((((rt0.c0)OR(rt0.c3)))OR(t0.c15))  WHEN MIN(rt0.c3) THEN (- (rt0.c0)) END FROM t0, rt0 GROUP BY ((rt0.c1) BETWEEN (t0.c17) AND (rt0.c0)) COLLATE BINARY; -- 1ms;
SELECT DISTINCT CASE rt0.c2  WHEN rt0.c0 THEN t0.c17 ELSE rt0.c3 END COLLATE NOCASE FROM t0 WHERE (((-9.66587385E8) NOT NULL)) LIMIT 883980249;SELECT AVG(((rt0.c3)*(rt0.c1))) FROM rt0, t0 WHERE (((CASE 0.6826155434043767  WHEN '' THEN '701639535' ELSE '-70809487' END) NOTNULL)); -- 0ms;
SELECT ALL LEAD(((((rt0.c2)OR(rt0.c1)))==(((t0.c0)AND(rt0.c0)))), LOWER(((t0.c15) IS TRUE)), CASE (((t0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))  WHEN ((rt0.c2)|(rt0.c4)) THEN (((rt0.c0, NULL, 0.5809070958596431)) NOT BETWEEN ((t0.c15, rt0.c1, t0.c17)) AND ((t0.c17, rt0.c4, rt0.c0))) END) OVER () FROM t0, rt0 WHERE ((((x'')) BETWEEN (((((x'', 0.2133820575976093, 'q 濬A>^U⯽k', x'', '1186384475'))=(('ke//.', 0.37057080751704297, 1001427062, 0.4158036868809184, x''))))) AND (((((-950278760))<((NULL))))))); -- 0ms;
SELECT DISTINCT CAST(((t0.c15)<<(rt0.c4)) AS REAL), (((t0.c0 IN ()))>>((rt0.c1 IN ()))), CAST((rt0.c0 IN (rt0.c0)) AS INTEGER) FROM t0 WHERE (((((((((x'8c89')AND(x'')))OR(x'')))AND(((1115825745)*(NULL)))))AND(((((-624588535)OR(x'')))AND(0.3950286922179562))))) GROUP BY ((((((((json_array_length(t0.c15, rt0.c4))OR(JULIANDAY(rt0.c2, t0.c17, rt0.c0))))OR((~ (rt0.c1)))))AND(((t0.c17)||(rt0.c3)))))OR(CASE WHEN x'' THEN rt0.c4 END)) HAVING ((rt0.c4) NOT BETWEEN (rt0.c4) AND (t0.c17)) COLLATE RTRIM;SELECT DISTINCT CAST(-8.8312966E8 AS BLOB) FROM rt0, t0 WHERE ((~ ('2CGI,')) COLLATE BINARY) GROUP BY (- (((((rt0.c0)OR(rt0.c2)))AND(t0.c0)))) HAVING (((rt0.c4)) BETWEEN ((TOTAL_CHANGES())) AND ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE '䆆*4Xl' END))); -- 0ms;
SELECT SUM(((rt0.c3) IS FALSE)) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0 WHERE ((((((((((((((('') NOTNULL))OR(0X0 COLLATE NOCASE)))OR(((NULL) IS FALSE))))AND(((x'') ISNULL))))OR(((0Xffffffffedf0c894)LIKE(NULL)))))OR(((x'0413') NOTNULL))))OR(CASE WHEN NULL THEN '' ELSE NULL END))) GROUP BY (((rt0.c0)) BETWEEN ((0.7811811728843376)) AND ((t0.c0))) COLLATE BINARY HAVING (((((((((((('836153335')OR(((((((((t0.c17)AND(rt0.c3)))AND(t0.c0)))AND(t0.c0)))AND(rt0.c1)))))OR(((t0.c0)AND(rt0.c0)))))OR((((0X2e915bbf, t0.c0, t0.c15)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c3)) AND (('䆆*4xl', t0.c0, t0.c17))))))OR(((0X116bed15)+(rt0.c4)))))OR(((t0.c0) IS TRUE))))OR(((t0.c15)<(rt0.c1))));SELECT DISTINCT (((- (rt0.c4))) NOT BETWEEN ((x'21d8bd65' IN ())) AND (t0.c15 COLLATE RTRIM)), json_array_length(((NULL) BETWEEN (rt0.c3) AND (rt0.c3))), SUM((rt0.c1 IN ())) OVER () FROM rt0 GROUP BY (((((t0.c15)OR(rt0.c4)))OR(x'7bd9')) IN (rt0.c2));SELECT DISTINCT ((rt0.c1)IS(CASE WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END)) FROM t0 INDEXED BY i5, rt0 WHERE ((('807471467')<(((NULL)IS NOT(x'670d')))));SELECT DISTINCT MIN(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) FROM rt0 LIMIT -985911019 OFFSET -485304531; -- 0ms;
SELECT ALL CAST(((rt0.c2)AND(rt0.c4)) AS NUMERIC) FROM rt0 WHERE (NULL) LIMIT 883980249; -- 0ms;
SELECT DISTINCT (+ (((t0.c15) BETWEEN (rt0.c0) AND (t0.c17)))) FROM t0 WHERE ((LIKELIHOOD(x'8097', 0.07562121504353969) IN ()));SELECT ((SUM(rt0.c0)) IS FALSE) FROM t0;SELECT ((CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c1 END)<(TYPEOF(DISTINCT rt0.c0))) FROM rt0;SELECT DISTINCT COUNT(*) FROM rt0, t0 LIMIT 230165520 OFFSET 1315787643; -- 0ms;
SELECT COUNT(*) OVER ( PARTITION BY ((((t0.c17) NOT BETWEEN (rt0.c4) AND (t0.c0)))>(IFNULL(t0.c15, rt0.c2))), (+ (CASE WHEN t0.c15 THEN rt0.c3 ELSE rt0.c0 END)) ORDER BY (~ ((+ (rt0.c4))))) FROM rt0 WHERE (((0.6678320272257705)>>((('-1996663080') IS TRUE))));SELECT NULL FROM rt0; -- 0ms;
SELECT DISTINCT LEAD(((((t0.c17) IS FALSE))>(((t0.c17)GLOB('')))), json_array_length(0.44806622642996197, CASE t0.c0  WHEN t0.c17 THEN t0.c0 ELSE t0.c0 END), TYPEOF(t0.c15)) OVER ( ORDER BY CAST(t0.c17 AS REAL)  NULLS FIRST, x''  NULLS LAST) FROM t0 WHERE ((- (CASE 0.7461138248510386  WHEN 'fr囨w' THEN 0.45171012428434854 ELSE '1' END)));SELECT DISTINCT (((rt0.c4)LIKE(t0.c0)) IN ()) FROM t0, rt0 ORDER BY LIKELIHOOD(((0.2872838256437542)OR('1417141603')), 0.4032983575072866) DESC  NULLS FIRST, ((((((t0.c0)AND(rt0.c2)))OR(rt0.c4))) NOT BETWEEN (x'') AND (CASE WHEN rt0.c3 THEN t0.c17 END))  NULLS FIRST, (((rt0.c3) IS TRUE) IN ())  NULLS FIRST; -- 0ms;
SELECT TYPEOF(t0.c17) FROM rt0 WHERE (CASE ((NULL)IS NOT(486687110))  WHEN CAST(x'c5a8' AS REAL) THEN ((NULL) NOTNULL) END) LIMIT -1120706486 OFFSET -10893412;SELECT DISTINCT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c17) BETWEEN (rt0.c3) AND (t0.c15)) COLLATE BINARY FROM rt0, t0; -- 0ms;
SELECT ALL CAST(((t0.c17)<(rt0.c2)) AS INTEGER), (+ (((t0.c15)OR(rt0.c0)))), (((NOT (0.829696792595909))) NOT BETWEEN (rt0.c2) AND (t0.c0)), (((('-360195559')OR(t0.c0)))>(UNLIKELY(rt0.c4))), (((((((rt0.c2)AND(rt0.c2)))OR(t0.c17))))<=((MAX(rt0.c0)))) FROM rt0 WHERE (TRIM(UNLIKELY(DISTINCT NULL))) GROUP BY ((((rt0.c0)+(rt0.c0)))>=(((rt0.c2) IS TRUE)));SELECT '1097685452', MAX(((t0.c15) NOT BETWEEN (rt0.c4) AND (rt0.c3))), (((- (t0.c0))) NOT BETWEEN ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3)))) AND (GROUP_CONCAT(rt0.c2))) FROM t0 WHERE (LIKELIHOOD(DISTINCT (+ (x'')), 0.6644099342549532));SELECT DISTINCT '' FROM t0 WHERE ((CAST('' AS TEXT) IN (((x'')+(-1504990957))))) LIMIT 1117203895 OFFSET 1895114415; -- 0ms;
SELECT DISTINCT CASE ((rt0.c4) NOT BETWEEN (rt0.c1) AND (t0.c17))  WHEN (((((((('1969968584')OR(t0.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c2)) THEN CASE rt0.c2  WHEN rt0.c4 THEN t0.c15 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c15 ELSE NULL END WHEN CAST(rt0.c2 AS INTEGER) THEN 0.20690775697770225 COLLATE NOCASE WHEN SQLITE_COMPILEOPTION_GET(rt0.c4) THEN (t0.c15 IN ()) WHEN MAX(rt0.c2) THEN ((t0.c17) ISNULL) WHEN ((t0.c17)%(t0.c0)) THEN x'' ELSE (((rt0.c0, rt0.c3, t0.c17, rt0.c2, rt0.c0))<((rt0.c2, rt0.c2, rt0.c3, rt0.c2, rt0.c4))) END FROM t0, rt0 WHERE (LIKELIHOOD(DISTINCT ((('')) NOT BETWEEN ((x'')) AND (('q6wJ/\r-}G'))), 0.12717700598768955)); -- 0ms;
SELECT (((((rt0.c3, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c4, t0.c17, '1786022712')) AND ((rt0.c3, rt0.c3, t0.c0))))<>(((rt0.c3)-(0xffffffff9e3976bf)))) FROM rt0, t0; -- 0ms;
SELECT ALL ((t0.c15 COLLATE BINARY)>=(((((((((((((t0.c0)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(t0.c17)))), rt0.c3, rt0.c2 FROM t0 WHERE (CASE x'' COLLATE NOCASE  WHEN ((((NULL)AND('v#')))AND(NULL)) THEN -1.648006304E9 COLLATE NOCASE END) GROUP BY IFNULL(((t0.c17)<=(t0.c17)), rt0.c3 COLLATE NOCASE);SELECT DISTINCT ABS(((rt0.c1)!=(rt0.c3))), t0.c15, (~ ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) FROM t0 WHERE ((1.627590804E9 IN ()) COLLATE RTRIM);SELECT DISTINCT LIKE(t0.c0, (x'' IN (NULL)), '1') FROM rt0 WHERE (((((((((x'' COLLATE BINARY)OR(((4.8668711E8) BETWEEN (0.49982860773415694) AND (0xffffffffa16ce076)))))OR((('')>>(0.6978550310532993)))))OR((((0.13763554904710273, 'N', -123585545))<=(('', 'l/uE?uV9', ''))))))OR(((-1.0893412E7)IS(x'')))));SELECT ALL (+ (((((t0.c17)OR(rt0.c3)))OR(rt0.c0)))) FROM rt0, t0 WHERE ((((((6.0067485E7 IN (-1, '')))AND(((NULL) IS TRUE))))OR((NOT ('>{|U륳ZY06'))))); -- 0ms;
SELECT DISTINCT (t0.c15 COLLATE RTRIM IN ((((NULL))<=((rt0.c1))))) FROM t0, rt0; -- 0ms;
SELECT ALL ((rt0.c4)AND(((rt0.c3) NOT BETWEEN (t0.c15) AND (rt0.c1)))), CASE WHEN t0.c15 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY, (((+ (rt0.c4)))>((NOT (rt0.c4)))) FROM rt0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT LAST_VALUE((((rt0.c1, t0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c15 AS NUMERIC), (((t0.c0, rt0.c4, rt0.c0))<((rt0.c1, rt0.c2, t0.c17))), ((0.13111632952264063) IS TRUE))) AND ((((t0.c0) IS FALSE), ((((((((t0.c17)OR(t0.c0)))AND(rt0.c2)))AND(0.6890174830056798)))OR('G]r*f/2')), ((((rt0.c3)OR(t0.c15)))AND(rt0.c3)))))) OVER ( ORDER BY (NOT (NULL)) ASC) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (~ ((((t0.c17)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FROM rt0, t0; -- 0ms;
SELECT ALL ROUND(((t0.c15) BETWEEN (rt0.c3) AND (rt0.c4)), CAST(rt0.c2 AS INTEGER)) FROM rt0 WHERE (NULL);SELECT DISTINCT MIN(((((rt0.c3)OR('Ru0>')))AND(rt0.c4)), NULLIF(rt0.c4, rt0.c0)), ((SQLITE_SOURCE_ID())=(((rt0.c3) NOT NULL))), (((((NOT (t0.c17)))AND(rt0.c4)))AND(TRIM(DISTINCT t0.c0, 'J*|vCr'))), UNLIKELY(DISTINCT GLOB(rt0.c4, rt0.c2)), (((rt0.c1, t0.c0, rt0.c4)) BETWEEN (((NOT (rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END, ((t0.c15) IS FALSE))) AND ((rt0.c1 COLLATE BINARY, (rt0.c0 IN ()), ((rt0.c4) IS FALSE)))) FROM rt0;SELECT ALL CAST(((t0.c0) BETWEEN (t0.c15) AND (rt0.c2)) AS BLOB), ROW_NUMBER() OVER (), RANK() OVER ( ORDER BY (((- (rt0.c0)))GLOB(rt0.c3))  NULLS LAST) FROM t0, rt0 WHERE ((((x'')) NOT BETWEEN (((((-1643071889)) NOT BETWEEN ((NULL)) AND ((x''))))) AND ((((NULL) NOT BETWEEN (0.7630780893621251) AND (x'')))))); -- 1ms;
SELECT DISTINCT ((((((((UPPER(DISTINCT t0.c0))AND(LOWER(rt0.c3))))AND((- (t0.c15)))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (NULL)))))AND(NULL)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((~ (t0.c15)) IN ()) FROM t0, rt0; -- 0ms;
SELECT CAST(rt0.c3 AS NUMERIC) FROM t0, rt0 GROUP BY (((t0.c15)) NOT BETWEEN ((json_object(t0.c15, t0.c15))) AND ((0.5776125286130476))), MAX(((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '1319194421'), ((CAST(rt0.c1 AS BLOB))|(NULL));SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC))<(CAST(rt0.c4 AS NUMERIC))), CASE WHEN (- (t0.c15)) THEN LIKELIHOOD(rt0.c4, 0.4290035266911312) END, rt0.c3 FROM rt0;SELECT DISTINCT ((CASE t0.c17  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)|(((rt0.c3) NOT NULL))) FROM rt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(NULL AS BLOB))); -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c0, rt0.c2, t0.c15)) NOT BETWEEN ((t0.c17, rt0.c2, t0.c17)) AND ((rt0.c1, t0.c0, rt0.c4)))) FROM rt0, t0; -- 0ms;
SELECT ALL CAST(json_insert(rt0.c3, rt0.c2, t0.c0) AS BLOB) FROM t0, rt0 WHERE (UPPER(DISTINCT CASE WHEN '0.7352170024058321' THEN 0.7360046752392222 ELSE NULL END)) LIMIT 540662235 OFFSET -1135103702;SELECT ALL rt0.c4 FROM rt0 WHERE ((((('*jP\TK' COLLATE NOCASE)OR(SQLITE_SOURCE_ID())))OR((- (0.5989662647996472))))); -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c15) AND (t0.c17)))AND(((t0.c17)IS NOT(x'')))) FROM rt0 LIMIT -2051766550 OFFSET -1245607650;SELECT ((rt0.c4)||('1126841004')) FROM rt0, t0 WHERE ((0.46412928251967356 IN ('0.2287318423399307')) COLLATE NOCASE); -- 0ms;
SELECT rt0.c0, ((IFNULL(rt0.c0, rt0.c4)) BETWEEN ((~ (t0.c0))) AND (((rt0.c0)!=(t0.c15)))), TOTAL(CAST(t0.c0 AS TEXT)) OVER () FROM t0, rt0 WHERE (((CASE WHEN NULL THEN 'unixepochN)' ELSE x'3596' END)==(((0.8633676978354816)=('342294077'))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT ALL ((CAST(0.14452570201262016 AS NUMERIC)) NOTNULL), ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((t0.c15) IS FALSE))), CASE rt0.c0 COLLATE BINARY  WHEN (((rt0.c3)) BETWEEN ((t0.c15)) AND ((rt0.c2))) THEN (rt0.c4 IN ()) END, LEAD(((rt0.c0 COLLATE RTRIM)<(t0.c17 COLLATE RTRIM)), ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 ELSE 0.13149565962376464 END) IS FALSE), CASE WHEN ((rt0.c4) ISNULL) THEN NULLIF(DISTINCT rt0.c0, t0.c15) END) OVER (), SQLITE_SOURCE_ID() FROM t0 NOT INDEXED, rt0 WHERE (((CASE WHEN '1478376323' THEN x'' WHEN 0xffffffffd3775a3d THEN '883980249' WHEN x'' THEN '>,' END)>(CASE WHEN x'' THEN x'' END))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (t0.c15) AND (rt0.c3)) AS BLOB) FROM t0, rt0 WHERE (((((x'' COLLATE NOCASE)OR(json_array(NULL, '-1212517263', x'', x''))))AND(CAST('523794534' AS BLOB)))) LIMIT 530061567;SELECT DISTINCT ((((((((((t0.c17) IS TRUE))OR(MAX(t0.c0))))AND(t0.c0 COLLATE BINARY)))OR(rt0.c1)))OR(CAST(NULL AS NUMERIC))), NTILE(((((t0.c15 IN ()), ((((t0.c15)AND(t0.c0)))OR('0.23349784996621215')), ((t0.c15)+(t0.c0))))>(((NOT (t0.c15)), ((t0.c15)>=(t0.c17)), ((t0.c0) IS FALSE))))) OVER (), ((((rt0.c4) IS TRUE)) NOT BETWEEN (x'') AND (0Xffffffff806c0fe9)) FROM t0;SELECT ((((((((((t0.c17)AND(rt0.c0)))OR((t0.c17 IN ()))))AND(((t0.c15) NOT BETWEEN (t0.c15) AND (rt0.c0)))))AND(CASE WHEN x'' THEN t0.c17 WHEN t0.c0 THEN 0xffffffffb0c108e9 WHEN t0.c0 THEN rt0.c3 END)))AND((rt0.c1 IN ()))), ((((0x22fb8237) IS TRUE)) BETWEEN (((((t0.c15)OR(rt0.c2)))AND(rt0.c2))) AND (((rt0.c3)<(rt0.c1)))), (+ (((0Xffffffffc258c2c5)<(t0.c0)))) FROM t0, rt0 WHERE (TRIM(DISTINCT ((0.92510560056543)/(NULL)))); -- 0ms;
SELECT ((((((0.1756921490669897) NOT NULL))AND(((rt0.c4)<<(t0.c0)))))AND(((rt0.c3) IS FALSE))) FROM rt0;SELECT rt0.c4, (+ ((+ (t0.c15)))), (~ (SUM(0.026058283190714904))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((- (rt0.c4)))||(NULL)) FROM t0, rt0 WHERE ((((('-485304531')GLOB(x'')))>=(((NULL)%(''))))); -- 0ms;
SELECT DISTINCT (x'' COLLATE BINARY IN (t0.c0 COLLATE BINARY)) FROM t0 WHERE ((- ((((NULL)) BETWEEN (('-699636058')) AND (('BapEr')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)<>(t0.c17)))IS((NULL IN ()))), DENSE_RANK() OVER (), '1587612740' FROM t0, rt0 WHERE (((CASE '粊L'  WHEN '*\Ue' THEN 0xfffffffffc9f1801 ELSE NULL END)%(MAX(x'081f', 0.9402646982841327)))) ORDER BY ((((((t0.c15)OR(t0.c0)))AND(rt0.c0))) IS FALSE)  NULLS FIRST, ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT '701639535' FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c4, NULL, t0.c15)) NOT BETWEEN ((rt0.c4, t0.c0, rt0.c3)) AND ((rt0.c0, t0.c17, rt0.c1)))) NOT NULL), HEX((NOT (rt0.c0))), RANK() OVER () FROM rt0, t0 WHERE (CAST(((0x3ca6ea92) NOTNULL) AS BLOB)); -- 0ms;
SELECT (NOT (t0.c15 COLLATE RTRIM)) FROM rt0;SELECT ALL ((((- (t0.c17))))>=((rt0.c1 COLLATE RTRIM))), LAG(CAST(NULLIF(DISTINCT t0.c15, t0.c17) AS INTEGER), (- (SUBSTR(t0.c17, t0.c15))), '-753978972') OVER ( ORDER BY CAST(t0.c17 AS BLOB) COLLATE NOCASE ASC ROWS CHAR((rt0.c4 IN ())) PRECEDING EXCLUDE GROUP), rt0.c4 FROM rt0, t0 LIMIT 1019836692 OFFSET -1553292028; -- 1ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT ALL ((((((t0.c0)AND(t0.c0)))OR(t0.c17))) BETWEEN ((rt0.c0 IN ())) AND (0.09603348190886896)) FROM rt0 WHERE ((((((('-1996663080')%(1463761387)))AND((NOT ('-271166452')))))OR(CASE WHEN 0.33273196631858226 THEN '1676652368' WHEN '-1649946381' THEN '1' WHEN NULL THEN x'3a086806' END)));SELECT (((((t0.c0)AND(t0.c0)))AND(t0.c17)) IN (MIN(rt0.c0))), (('' COLLATE RTRIM) ISNULL), 0.8719324481241306 FROM t0 WHERE (((0.7502049477666635)||(-699636058)) COLLATE BINARY);SELECT DISTINCT ((CASE WHEN rt0.c2 THEN t0.c15 END)IS NOT(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))), NULL, x'08f6c625' COLLATE RTRIM COLLATE BINARY FROM t0, rt0 WHERE ((NOT ((((('')OR(0.23349784996621215)))OR(0.5327086820374491))))); -- 0ms;
SELECT DISTINCT ((((t0.c17)IS(rt0.c0))) NOTNULL), COUNT(CAST(t0.c17 AS REAL)) OVER ( ROWS BETWEEN x'' FOLLOWING AND (NULL IN ((+ (rt0.c4)))) PRECEDING), (((((((((rt0.c1)AND('촮{Ua[]')))AND(rt0.c0)))OR(t0.c15)))OR(rt0.c4)) IN ()) FROM t0, rt0;SELECT (rt0.c4 IN ()) COLLATE BINARY, TOTAL(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))), 0.02058949014238798 FROM rt0 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c4) BETWEEN (NULL) AND (rt0.c3)) AS TEXT), (((((t0.c17)%(t0.c17)), (((t0.c17)) BETWEEN ((rt0.c2)) AND ((t0.c0))), (~ (rt0.c0))))>((((rt0.c2) NOT BETWEEN (t0.c15) AND (t0.c17)), (- (rt0.c2)), CASE rt0.c0  WHEN t0.c15 THEN t0.c0 END))), rt0.c4 FROM rt0 GROUP BY ((((((((((rt0.c1)<=(rt0.c3)))AND(((((rt0.c1)OR(rt0.c1)))OR(-1.323243284E9)))))AND(((t0.c15) NOT BETWEEN (t0.c0) AND (rt0.c1)))))OR(((t0.c17)>>(rt0.c0)))))AND(((rt0.c3)AND(rt0.c3))));SELECT DISTINCT (((0xffffffffa076cbb0)) NOT BETWEEN ((json_patch(t0.c17, t0.c15))) AND ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0))))) FROM t0, rt0; -- 1ms;
SELECT ((t0.c15) ISNULL) COLLATE BINARY FROM t0, rt0 WHERE ((((0.28672506527291297)) NOT BETWEEN ((CAST(0.17570683018079203 AS TEXT))) AND (((((((((('1393562864')AND(NULL)))AND(NULL)))OR(x'')))AND(x'')))))); -- 0ms;
SELECT DISTINCT ((json(t0.c17))+(((((((((rt0.c0)OR(rt0.c4)))AND(t0.c15)))AND(t0.c15)))AND(t0.c17)))) FROM rt0;SELECT (((((rt0.c4)IS(rt0.c3)), rt0.c1, ((rt0.c3)<=(rt0.c4)), CAST(rt0.c0 AS TEXT), (NOT (x''))))==(((t0.c15 IN (t0.c15)), ((t0.c0) NOT BETWEEN (t0.c0) AND (0.9239157606128022)), rt0.c0 COLLATE RTRIM, CASE WHEN t0.c17 THEN t0.c0 WHEN rt0.c0 THEN t0.c17 WHEN t0.c15 THEN rt0.c4 ELSE rt0.c1 END, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM rt0, t0 ORDER BY ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOT NULL) ASC; -- 0ms;
SELECT (((((x''))<=((x''))))<=(((0.6435599489394997) IS FALSE))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(IFNULL(rt0.c3, rt0.c3) AS REAL) FROM rt0, t0 LIMIT 857888478 OFFSET -471013684; -- 0ms;
SELECT DISTINCT ((((CASE t0.c15  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)AND(((rt0.c2)IS NOT(rt0.c1)))))AND((rt0.c4 IN ()))), rt0.c2, (((json_array_length(rt0.c3, rt0.c0)))>((t0.c0))) FROM rt0 WHERE (((0.3122598641975164)IS(NULL)) COLLATE RTRIM) GROUP BY (~ (TYPEOF(DISTINCT 'Ay')));SELECT ALL ((t0.c17)LIKE(t0.c0)) COLLATE NOCASE FROM rt0;SELECT DISTINCT CAST(LIKELIHOOD(rt0.c1, 0.47134234275037534) AS NUMERIC), ((((rt0.c0)<>(NULL))) BETWEEN (CASE rt0.c1  WHEN t0.c17 THEN 0.36074499177393204 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c4)))), ((((CASE WHEN t0.c17 THEN t0.c15 ELSE rt0.c4 END)OR(t0.c17 COLLATE NOCASE)))OR(CAST(t0.c0 AS INTEGER))) FROM rt0, t0 WHERE (((0.7205276438995512) BETWEEN (x'') AND (x'e6ad')) COLLATE BINARY); -- 1ms;
SELECT (- (((((rt0.c1)OR('1036479916')))OR(t0.c17)))) FROM t0;SELECT ALL NULL FROM rt0, t0; -- 0ms;
SELECT FIRST_VALUE(((NOT (rt0.c3)) IN ())) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c4, rt0.c4, rt0.c2))>((rt0.c0, rt0.c3, '473888584'))))IS(CAST(rt0.c0 AS BLOB))) FROM t0, rt0 INDEXED BY i5;SELECT ALL TOTAL((rt0.c1 IN ()) COLLATE RTRIM) OVER ( ORDER BY ((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c4))) IN ())) FROM t0 WHERE (0.5034839805947813); -- 0ms;
SELECT DISTINCT ((((rt0.c3)LIKE(rt0.c3)))%((- (rt0.c0)))) FROM rt0 NOT INDEXED WHERE (SQLITE_VERSION()); -- 0ms;
SELECT ALL t0.c0 FROM rt0 WHERE (CASE WHEN ('-903299212' IN ()) THEN (((0X2306051c, x'02a1', NULL, '0.2691227069478608', '-2112574904'))<=((0.21836954476126558, '', NULL, '1096015371', '1933085206'))) END) ORDER BY CAST((- (rt0.c0)) AS TEXT) DESC;SELECT DISTINCT ((rt0.c0 COLLATE BINARY)>>(t0.c0 COLLATE BINARY)), ((+ (rt0.c3)) IN (((rt0.c2)>=(rt0.c0)))), COUNT(CASE WHEN t0.c0 THEN rt0.c1 END) OVER () FROM rt0;SELECT rt0.c2, (((((+ (rt0.c0)))AND(((rt0.c2) NOTNULL))))AND(MAX('鶏]\]ݤꋦr+|'))), LEAD((((rt0.c1) IS FALSE) IN ()), CASE rt0.c4 COLLATE BINARY  WHEN NULL THEN t0.c15 COLLATE NOCASE WHEN '1359945611' THEN ((((((((NULL)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)) WHEN (rt0.c2 IN ()) THEN CASE rt0.c1  WHEN rt0.c1 THEN '1334810671' ELSE t0.c17 END END, (((TRIM(rt0.c0, 0.11408854872447738)))>((((t0.c0)GLOB(rt0.c0)))))) OVER ( PARTITION BY (((- ('?睏e㠵')))|(CAST(t0.c0 AS BLOB))), (((t0.c17) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) FROM rt0, t0; -- 0ms;
SELECT ALL ((HEX(DISTINCT t0.c15)) IS TRUE) FROM t0, rt0 WHERE (((CASE -1572952590  WHEN 0.8619646383663128 THEN -1.22567154E8 END)*(((x'14e6') IS FALSE)))); -- 0ms;
SELECT DISTINCT 1.689520864E9 FROM rt0, t0; -- 0ms;
SELECT ALL MIN(NULL) COLLATE RTRIM, CASE WHEN CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c17 END THEN (t0.c0 IN ()) ELSE CAST(t0.c0 AS TEXT) END, ((((x'') ISNULL))>(rt0.c0 COLLATE BINARY)) FROM rt0 WHERE ((((0.7641720903939521)) NOT BETWEEN (((~ (x'811c')))) AND (((NOT (''))))));SELECT rt0.c3 FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c1 AS INTEGER)  WHEN TRIM(DISTINCT rt0.c4, t0.c17) THEN ((t0.c15)LIKE(t0.c17)) END FROM rt0, t0 WHERE ((CAST(x'a5b5' AS BLOB) IN (((NULL) NOT BETWEEN (x'') AND (NULL))))) GROUP BY x'', ((CAST(rt0.c3 AS REAL)) NOTNULL), (((((((rt0.c3)OR(t0.c0)))OR(t0.c15))))<((CASE rt0.c1  WHEN '-1e500' THEN rt0.c1 ELSE rt0.c1 END))) HAVING (((((('1587612740') IS FALSE))OR(((rt0.c4)&(rt0.c2)))))OR(((((rt0.c4)AND(t0.c0)))OR(rt0.c1)))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) NOTNULL) FROM rt0 WHERE ((((x'' IN ())) NOT BETWEEN ((('')LIKE(NULL))) AND ((NULL IN (-1e500, '-DFK1*B*ꍸ'))))) ORDER BY t0.c17 ASC;SELECT ALL ((-1371480620)*(SUM(rt0.c2))) FROM t0, rt0 LIMIT 49167914 OFFSET -1061807118; -- 0ms;
SELECT t0.c17 FROM rt0 WHERE (-188724882) INTERSECT SELECT DISTINCT ((~ (NULL)) IN (MAX(rt0.c0))) FROM t0;SELECT DISTINCT TOTAL((rt0.c1 IN (rt0.c0, rt0.c3))) FROM t0 LIMIT 701639535;SELECT DISTINCT ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1))) IS TRUE) FROM rt0 LIMIT 161532439; -- 0ms;
SELECT DISTINCT rt0.c1, CASE WHEN ((((((((rt0.c4)OR(0Xffffffffea87da19)))AND(t0.c0)))OR(rt0.c3)))OR(t0.c0)) THEN ((rt0.c2) NOTNULL) END, CAST((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) AS INTEGER), SUM(((rt0.c1) NOT NULL)), ((rt0.c0) IS FALSE) COLLATE BINARY FROM rt0 LIMIT 1081937123;SELECT SUM(((rt0.c4)<<(t0.c0))) OVER () FROM t0, rt0 WHERE ((((('')>(NULL)))-((('0.5925798449646553') NOT NULL)))); -- 0ms;
SELECT DISTINCT (~ ((t0.c17 IN (rt0.c0)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((x'') IS FALSE), CASE WHEN ((t0.c0) NOT BETWEEN (t0.c17) AND (rt0.c1)) THEN AVG(t0.c0) END, LEAD((((- (rt0.c4)))GLOB('')), ((((t0.c17) IS FALSE))=(((((t0.c15)AND(t0.c17)))AND(t0.c17)))), CAST(NULLIF('1446704849', t0.c0) AS NUMERIC)) OVER () FROM rt0, t0 WHERE ('1377950586'); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c3 THEN t0.c17 END)) AND ((((rt0.c3) NOTNULL)))), (((NULL)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c3)))OR(t0.c0)))) AND ((SQLITE_COMPILEOPTION_GET(0.08064243386058445)))), rt0.c0 FROM t0 INDEXED BY i9 WHERE (CASE WHEN (~ (-1.488289502E9)) THEN (((('-1914484190')AND(NULL)))AND(1.753344525E9)) ELSE CAST(NULL AS TEXT) END) GROUP BY (~ ((t0.c17 IN ())));SELECT DISTINCT 6.63759199E8 FROM t0, rt0; -- 0ms;
SELECT ((t0.c15) NOT BETWEEN (CASE '05'  WHEN t0.c15 THEN rt0.c4 ELSE x'' END) AND (MAX(t0.c17))) FROM t0, rt0 WHERE (((((x'') IS TRUE)) ISNULL)); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c15)>=(rt0.c4))), ((((((rt0.c3) NOTNULL))OR(GROUP_CONCAT(rt0.c4))))AND(t0.c17 COLLATE RTRIM)), NTILE((((rt0.c1)&(rt0.c2)) IN ())) OVER () FROM t0, rt0 WHERE (((NULL IN ()) IN (((0Xffffffff91d405b3) NOTNULL), (-1.0893412E7 IN ()))));SELECT DISTINCT CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC) FROM rt0, t0; -- 0ms;
SELECT ALL ((((((rt0.c1)AND(t0.c15)))OR(rt0.c0)))>=(COUNT(t0.c17))) FROM rt0 WHERE (0.41673472203856166);SELECT (((GLOB(rt0.c3, x'')))<=((((((-1.108263628E9)OR(t0.c15)))OR(t0.c15))))), ((CASE rt0.c3  WHEN rt0.c1 THEN t0.c15 ELSE t0.c17 END)>>(((t0.c0) NOTNULL))), CAST((NOT (0.831882774581629)) AS BLOB) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((((rt0.c1) NOTNULL))) AND ((GROUP_CONCAT(rt0.c3)))) FROM t0, rt0 WHERE (((((x'')OR(307538169)))AND(NULL)) COLLATE NOCASE); -- 0ms;
SELECT ALL ((rt0.c1)==(t0.c15)) FROM t0;SELECT DISTINCT (('' COLLATE RTRIM) NOTNULL), ((rt0.c3) BETWEEN (rt0.c3) AND (0.857475326443003)) COLLATE NOCASE, ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END)>>(0.6817213216827698 COLLATE BINARY)) FROM rt0, t0 WHERE ('0.9057467996858884'); -- 1ms;
SELECT ALL COUNT(*) FROM t0; -- 0ms;
SELECT CASE WHEN CASE WHEN t0.c15 THEN t0.c15 ELSE rt0.c0 END THEN LOWER(DISTINCT rt0.c1) ELSE ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END FROM rt0 NOT INDEXED, t0 LIMIT -1337214513; -- 0ms;
SELECT DISTINCT NTILE((((t0.c15) NOT BETWEEN (t0.c0) AND (t0.c15)) IN ())) OVER () FROM t0 WHERE ((CAST(x'' AS REAL) IN ((+ (-1.47229786E8))))); -- 0ms;
SELECT DISTINCT t0.c15, (~ (((rt0.c3) BETWEEN (rt0.c0) AND (x'fa14')))), (((t0.c17)) NOT BETWEEN ((((rt0.c0) BETWEEN (0.44981680336774355) AND (t0.c0)))) AND (((((rt0.c2))>((rt0.c1)))))) FROM rt0, t0 WHERE (((((((NULL)AND(x'427c')))OR(NULL)))-((NULL IN (x'12a4'))))); -- 0ms;
SELECT 0.9054452995591094, CAST((((rt0.c4))<=((rt0.c3))) AS INTEGER), ((((rt0.c3) IS TRUE)) NOT BETWEEN (NULLIF(DISTINCT rt0.c1, t0.c17)) AND (CASE WHEN t0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN 0.5708701869924431 THEN rt0.c1 END)) FROM rt0, t0 WHERE (x'' COLLATE RTRIM); -- 0ms;
SELECT (((rt0.c4 IN (x''))) NOT NULL) FROM t0, rt0 WHERE ((((NULL)<<('l/uE?uV9')) IN (CASE WHEN x'' THEN '-1196283478' ELSE NULL END))); -- 0ms;
SELECT ALL (((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c15)) IN ()), NULL, SQLITE_SOURCE_ID() FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((+ (t0.c15))) NOT BETWEEN (((rt0.c4) IS TRUE)) AND (((t0.c15) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) FROM rt0;SELECT DISTINCT MIN(((rt0.c3)AND(t0.c0))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT 0.029114092720887608 FROM rt0, t0 WHERE ((json_insert(x'', NULL, -1603840018) IN ())); -- 0ms;
SELECT (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))+((((rt0.c3))>((rt0.c3))))), ((rt0.c3 COLLATE BINARY) IS TRUE), CASE CAST(t0.c15 AS NUMERIC)  WHEN ((((t0.c0)OR(t0.c0)))AND(0.6531237587222805)) THEN '393215228' ELSE GROUP_CONCAT(t0.c15) END FROM t0 WHERE (((0.06638433844930003 IN ()) IN ()));SELECT DISTINCT COUNT(((((rt0.c3)OR(rt0.c3)))OR(t0.c17))) FROM rt0 WHERE (COALESCE(DISTINCT CASE WHEN NULL THEN 0X755a98f END, (('-1566260970')|(NULL))));SELECT ALL ((x'')AND(CAST(rt0.c2 AS INTEGER))) FROM rt0 WHERE (CAST(NULL AS INTEGER) COLLATE RTRIM) ORDER BY (((9223372036854775807)) NOT BETWEEN ((((rt0.c3)LIKE(t0.c0)))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 END))) ASC, CASE WHEN rt0.c4 COLLATE NOCASE THEN (+ (t0.c15)) WHEN ((((((((((((rt0.c3)OR(t0.c15)))AND(rt0.c3)))OR(t0.c17)))OR(rt0.c1)))OR(rt0.c4)))AND(-1e500)) THEN ((t0.c17)IS NOT(t0.c0)) WHEN CASE t0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c17 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 ELSE t0.c0 END THEN NULL ELSE ((((t0.c17)OR(t0.c17)))AND(rt0.c2)) END DESC  NULLS FIRST;SELECT DISTINCT ((((((t0.c0))>((rt0.c1)))))<=((((rt0.c2) NOT NULL)))) FROM t0 ORDER BY LOWER(DISTINCT ((rt0.c2)>>(rt0.c4))), rt0.c2;SELECT (+ (((((t0.c17)OR(t0.c17)))OR(x'b187')))) FROM rt0 WHERE ((- (((((NULL)AND(x'c0ed')))OR('c(')))));SELECT ALL ((((((((IFNULL(DISTINCT NULL, rt0.c2))OR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((~ (x'')))))AND(CASE t0.c17  WHEN rt0.c0 THEN 0.6400843359006531 ELSE t0.c0 END)))OR(NULL)) FROM t0 WHERE ((((0.7131547879452983, '-598470219', x'ec1e')) NOT BETWEEN ((((('PIhC'))<((NULL))), (('Ho')<('1459356116')), ((0Xffffffff806c0fe9)*(x'')))) AND ((((NULL)>>(0Xffffffffc9d54312)), ((0Xfffffffffc1caaa1)LIKE(0.44329062941399744)), '1324825952')))) GROUP BY ROUND(RTRIM(t0.c15), (~ (rt0.c4))), rt0.c4, ((CAST(NULL AS REAL))<=(((rt0.c2) ISNULL))) HAVING CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (t0.c15)) THEN ((rt0.c4) IS TRUE) ELSE ((t0.c15)-(rt0.c4)) END;SELECT ALL (((rt0.c1) NOTNULL) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((- (rt0.c1)))%(((t0.c17)-(t0.c17)))) FROM rt0, t0 WHERE (((CASE x'9440'  WHEN x'af8d' THEN x'8b65' ELSE NULL END)%((- (NULL))))); -- 0ms;
SELECT ((rt0.c0) IS FALSE), (((rt0.c1)*(rt0.c4)) IN (((rt0.c1)-(rt0.c4)))), ((((LIKELIHOOD(t0.c17, 0.8629394198369115))AND(CASE WHEN rt0.c1 THEN -1245607650 ELSE NULL END)))AND((((t0.c15))!=((rt0.c3))))) FROM t0, rt0; -- 0ms;
SELECT ALL x'' FROM rt0, t0 WHERE ((((('1096015371')) BETWEEN ((1431977351)) AND ((x''))) IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c2)IS(rt0.c1))) NOT BETWEEN (((rt0.c3)||(rt0.c1))) AND (UPPER(rt0.c3))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ROUND(0Xffffffff9dc56b60, IFNULL(rt0.c2, rt0.c1)) FROM t0;SELECT ALL (NOT (t0.c15)) COLLATE NOCASE FROM t0 WHERE ((((NULL, '470624262', x'', '|R', x'')) NOT BETWEEN ((((-7.0809487E7)/('')), (NOT ('-1669646228')), ((0Xfffffffff4c0496e) IS TRUE), TRIM(x'8983773f', x''), ((NULL)LIKE('815874829')))) AND ((CASE WHEN NULL THEN '651791739' END, ('-706939985' IN ()), (('4j')<>(NULL)), '1096015371' COLLATE BINARY, (~ (NULL)))))); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE rt0.c0) OVER () FROM rt0 WHERE ((CAST(NULL AS INTEGER) IN (((x'9e12')-(0.00827721136433357)), 0.809350262624107))); -- 0ms;
SELECT DISTINCT (((((~ (rt0.c0)))AND(((t0.c17)OR(t0.c15)))))AND((- (rt0.c2)))) FROM t0 WHERE ((((('AT5믣2')LIKE(x''))) NOT BETWEEN (-1449738818 COLLATE BINARY) AND (ABS(''))));SELECT ((((0.2861048080019569) ISNULL))<>(rt0.c3 COLLATE BINARY)) FROM t0, rt0 WHERE ((((~ (x'2b5f'))) BETWEEN (((x'')>=(x''))) AND (((NULL)==(-696622856))))) GROUP BY (+ (rt0.c0 COLLATE BINARY)), (+ (rt0.c1)), (- (((rt0.c0) BETWEEN (t0.c0) AND (t0.c0)))); -- 0ms;
SELECT ALL NULL FROM rt0, t0; -- 1ms;
SELECT DISTINCT CASE WHEN ((t0.c17)*(t0.c15)) THEN ((rt0.c0) NOTNULL) END FROM rt0;SELECT ALL RANK() OVER () FROM t0, rt0 WHERE ((((((0xffffffffff59c79c) NOTNULL)))>=((TYPEOF(DISTINCT x''))))) ORDER BY rt0.c4; -- 0ms;
SELECT ALL ((((((t0.c15) NOT BETWEEN (t0.c17) AND (rt0.c1)))OR(((t0.c0) NOTNULL))))AND(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0, t0 WHERE (((0xffffffffb7b6e7e4) BETWEEN ((((-7.0809487E7)) NOT BETWEEN ((x'')) AND (('PT4ꁥy')))) AND (json_array_length(0Xffffffffcfdc3e26, 'XD~6L8')))); -- 0ms;
SELECT DISTINCT (((((((((((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c1, x'', rt0.c3)) AND ((t0.c0, t0.c0, x'fa86'))))AND(t0.c17)))AND(((t0.c0)/(rt0.c4)))))OR((rt0.c4 IN ()))))AND(((rt0.c2)==(rt0.c2)))) FROM t0, rt0 WHERE (x'') INTERSECT SELECT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END IN ()) FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)+(t0.c15))) ISNULL) WHERE (CASE (('706340582') NOTNULL)  WHEN (((('1720101934')AND(x'')))AND(0.6675587146006804)) THEN x'' COLLATE RTRIM ELSE ((x'1574')<('1874787252')) END); -- 0ms;
SELECT ALL t0.c15 FROM rt0, t0 WHERE (((((156864882) NOT NULL))>>(json_array(NULL, 0Xffffffffbdf13d34)))) ORDER BY rt0.c2, (((t0.c17, rt0.c3, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT), LIKELIHOOD(rt0.c0, 0.5761597482319519), (t0.c15 IN ()))) AND ((CAST(t0.c17 AS TEXT), rt0.c0, ((NULL) BETWEEN (rt0.c4) AND (t0.c15))))) DESC; -- 0ms;
SELECT ALL (('?C')>(((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))) FROM t0;SELECT DISTINCT CASE rt0.c2  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END ELSE (+ (t0.c17)) END FROM t0 WHERE (((('1036479916')) BETWEEN (((+ (0.37420246697626214)))) AND ((NULL))));SELECT DISTINCT CAST('1771456688' COLLATE RTRIM AS BLOB), ((rt0.c3 IN (t0.c0)) IN ()), UNLIKELY(((t0.c0)>>(rt0.c0))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0)<=(rt0.c0)) IN (((rt0.c4) NOTNULL), rt0.c3)), MIN(CAST(rt0.c3 AS NUMERIC)), LOWER((- (t0.c0))), ((((((((((t0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(t0.c0)))AND(rt0.c1)))<<(((((((((rt0.c1)OR(t0.c17)))AND(rt0.c2)))AND(NULL)))OR(t0.c0)))), COUNT(*) OVER () FROM t0 WHERE (LIKELY((('沑(')LIKE(-1.196283478E9))));SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c3 END)OR((rt0.c0 IN (rt0.c2)))))OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (t0.c17)))), (((+ (t0.c0)))>(COUNT(*))), CASE t0.c15  WHEN rt0.c4 THEN rt0.c0 WHEN t0.c17 THEN t0.c17 WHEN '1081665715' THEN t0.c17 END COLLATE NOCASE, AVG(CAST(t0.c17 AS INTEGER)), (((t0.c0 IN ())) BETWEEN ((((t0.c15))>((rt0.c2)))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)))) FROM rt0, t0 WHERE (((0.5789929445191782 COLLATE BINARY) NOT BETWEEN (((('-469682036'))>(('1817012872')))) AND (((('')) NOT BETWEEN ((NULL)) AND ((-1.22567154E8)))))); -- 0ms;
SELECT ALL ((((((rt0.c4)OR(0X45b48423)))AND('+l'))) ISNULL) FROM rt0, t0 WHERE (((-1673988994)GLOB(0x68bab348)) COLLATE NOCASE); -- 0ms;
SELECT (rt0.c0 IN ()) COLLATE BINARY, (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))>=(('263750875'))), ((MAX(t0.c0, t0.c17)) NOT BETWEEN (rt0.c1) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN '' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END)) FROM rt0 WHERE (((((x'')|(NULL))) NOT BETWEEN ((- (x''))) AND ((+ (x''))))) GROUP BY ((((rt0.c4) NOT BETWEEN ('1685703753') AND (NULL))) NOT BETWEEN (((((rt0.c1)AND(NULL)))OR(0.9841550448989077))) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3))));SELECT DISTINCT x'' FROM rt0 WHERE ((+ (((x'3f98') IS FALSE)))); -- 0ms;
SELECT ALL ((CAST('궗0a_>' AS REAL))||((- (rt0.c2)))) FROM rt0 WHERE ((- (TOTAL_CHANGES()))); -- 0ms;
SELECT DISTINCT (NOT (t0.c0 COLLATE RTRIM)) FROM t0, rt0 WHERE (json_extract((((NULL)) BETWEEN ((0xffffffff88fd56d8)) AND ((''))), ((NULL)&('1760850587')))); -- 1ms;
SELECT (- ((+ (-1423787794)))), LAST_VALUE(CAST((NOT (rt0.c2)) AS INTEGER)) OVER (), (t0.c15 IN ((((x'', rt0.c2, rt0.c4))<((t0.c0, t0.c15, rt0.c3))))) FROM rt0 WHERE (CAST(CAST(0.757450755134969 AS TEXT) AS TEXT));SELECT DISTINCT t0.c15 FROM rt0 ORDER BY (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2)) IN ()) DESC  NULLS FIRST;SELECT ALL (((- (rt0.c4)))!=(t0.c15 COLLATE RTRIM)) FROM rt0, t0 GROUP BY t0.c15, '419574388', -1992271521 HAVING ((CASE WHEN rt0.c1 THEN t0.c15 END)%((rt0.c2 IN ())));SELECT MAX(((rt0.c2)<=(rt0.c0))) FROM rt0, t0 ORDER BY rt0.c3, ((((rt0.c4)*(0X412f3fe6)))+((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, t0.c0, rt0.c1)) AND ((t0.c0, rt0.c1, rt0.c2))))) DESC  NULLS LAST, ((((json_remove(rt0.c2, rt0.c3))OR((t0.c17 IN ()))))AND('1020838245')) ASC  NULLS LAST; -- 0ms;
SELECT CAST(CAST(rt0.c1 AS TEXT) AS TEXT) FROM rt0 ORDER BY (((rt0.c2, rt0.c3, t0.c0)) BETWEEN ((((rt0.c1)LIKE(t0.c15)), (((NULL)) BETWEEN ((NULL)) AND ((rt0.c0))), CASE WHEN t0.c15 THEN rt0.c0 WHEN t0.c17 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 END)) AND ((NULL, ((rt0.c4) NOTNULL), 0X5eabd313)))  NULLS LAST;SELECT CASE ((t0.c0) ISNULL)  WHEN CAST(t0.c17 AS NUMERIC) THEN ((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)) ELSE ((t0.c15)+(t0.c15)) END FROM t0 NATURAL JOIN rt0 WHERE (((((((0.9001595960940326)AND(0.41448926995774515)))AND(0Xab3389c)))OR(((0.40410741177686527)==(0.9700142791601336))))); -- 0ms;
SELECT DISTINCT (((t0.c15)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((t0.c0)+(t0.c17))))), ((((CAST(rt0.c4 AS TEXT))OR((- (t0.c17)))))OR(((((t0.c17)OR(rt0.c3)))AND(t0.c15)))), rt0.c4 FROM rt0 GROUP BY CASE WHEN CASE WHEN rt0.c2 THEN t0.c15 WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c0 ELSE rt0.c0 END THEN ((t0.c17) IS FALSE) WHEN ((t0.c0) NOTNULL) THEN ((rt0.c0) IS TRUE) WHEN (+ (t0.c0)) THEN t0.c15 END;SELECT DISTINCT ((((((rt0.c1)AND(rt0.c3)))AND(rt0.c3))) IS TRUE) FROM t0 ORDER BY CAST(((t0.c0)IS(rt0.c0)) AS BLOB)  NULLS LAST, t0.c0 DESC  NULLS FIRST LIMIT 253396189;SELECT DISTINCT t0.c0 FROM t0, rt0; -- 1ms;
SELECT ((((rt0.c0)+(rt0.c4)))==(((t0.c15)>(rt0.c3)))) FROM rt0 WHERE ((((x'8e9c', '', -1.856782793E9)) NOT BETWEEN ((CAST(x'' AS NUMERIC), (~ (x'e7e9')), (+ ('-1669646228')))) AND ((LOWER(x''), (('C!')OR('0.7921620422537761')), ((((6.0067485E7)AND('')))OR(''))))));SELECT DISTINCT json_quote('84287812' COLLATE BINARY), (rt0.c2 IN ()), ((((t0.c15) NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL), (((((- (rt0.c3)))AND(((t0.c0) ISNULL))))OR(((rt0.c1)<<(t0.c0)))), rt0.c3 FROM t0 WHERE (CASE WHEN ((((((((((((0.052420912194027114)OR('E(U옎')))OR(-770319724)))OR(0.8657397764762705)))OR(0Xffffffff844b21d9)))AND('0.5667824877348815')))OR('494009334')) THEN (+ ('pVXWz-e')) ELSE (((x'c4f44075')) BETWEEN (('1359945611')) AND (('AD&GA'))) END);SELECT ((rt0.c1) IS TRUE), (((x'')) NOT BETWEEN ((MIN(t0.c15))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((t0.c17)))))), ((((((((t0.c17)AND(0.23616193764949955)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c0)) COLLATE RTRIM FROM t0;SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT ALL TOTAL(NULL) FROM rt0 WHERE ((~ (CAST(NULL AS INTEGER)))) ORDER BY CASE ((t0.c17)*(rt0.c2))  WHEN ((t0.c15)IS(t0.c0)) THEN ((rt0.c4)AND(t0.c0)) WHEN ((t0.c17) NOT NULL) THEN CAST(t0.c17 AS TEXT) WHEN CAST(t0.c0 AS INTEGER) THEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END ASC, IFNULL((t0.c0 IN ()), CAST(t0.c0 AS TEXT)), CASE (((rt0.c1))>=((rt0.c3)))  WHEN TRIM(rt0.c1) THEN (((t0.c15, t0.c17, x''))<>((rt0.c0, rt0.c3, 0.5908004128358305))) END  NULLS LAST LIMIT 1720679703 OFFSET -1690730038;SELECT ALL (((rt0.c3)>>(rt0.c4)) IN ()), rt0.c4, GROUP_CONCAT((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((t0.c15)))) OVER () FROM rt0;SELECT ((((rt0.c3) NOTNULL)) BETWEEN (rt0.c4 COLLATE NOCASE) AND ((- (rt0.c3)))) FROM t0, rt0 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE RTRIM DESC; -- 0ms;
SELECT CASE t0.c17 COLLATE RTRIM  WHEN TOTAL(rt0.c2) THEN CAST(rt0.c2 AS TEXT) END, (t0.c0 IN (((rt0.c0)>=(t0.c17)))), ((((t0.c15)>(t0.c15)))=((~ (rt0.c2)))) FROM rt0;SELECT (NOT (COUNT(rt0.c2))) FROM t0;SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))|(CAST(t0.c17 AS REAL))), 1036479916, ((t0.c17 COLLATE NOCASE)OR(json_valid(0.11408854872447738))) FROM t0;SELECT ALL HEX(COALESCE(rt0.c0, t0.c17)) FROM t0, rt0; -- 0ms;
SELECT FIRST_VALUE((((NULL COLLATE NOCASE))>=((((rt0.c3)=(rt0.c4)))))) OVER () FROM rt0 WHERE ((((+ (0.3511097352346618))) NOTNULL)); -- 0ms;
SELECT ((((rt0.c3) BETWEEN (t0.c17) AND (t0.c0)))<>(((rt0.c4)&(rt0.c3)))) FROM t0, rt0 LIMIT -376983867 OFFSET -1724861588; -- 0ms;
SELECT DISTINCT ((((UPPER(rt0.c0))AND(((t0.c0) NOTNULL))))AND('b-')) FROM rt0, t0 WHERE (('263750875' IN (((('뙨L{IX\r', '', '1446704849', 'k鑵', '647924803'))<>((x'', 1556451397, x'', NULL, '-1793316938'))), CAST('' AS NUMERIC)))) INTERSECT SELECT DISTINCT CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT) FROM t0 NATURAL JOIN rt0 WHERE (((CAST(0 AS BLOB)) ISNULL)); -- 0ms;
SELECT ALL ((CASE rt0.c3  WHEN rt0.c4 THEN 7.68597407E8 WHEN t0.c15 THEN x'' WHEN rt0.c0 THEN t0.c0 END) NOT NULL), (~ ((NOT (0.7635685298241769)))), (((t0.c17, 0.9610538659579091, rt0.c0))>((rt0.c1, rt0.c3, NULL))) COLLATE BINARY FROM rt0;SELECT DISTINCT ((x'') BETWEEN (CASE t0.c0  WHEN t0.c15 THEN rt0.c2 ELSE x'4804' END) AND (NULL)), (~ (TOTAL(rt0.c0))), CASE (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c3)))  WHEN ((((t0.c17)OR(rt0.c0)))OR(NULL)) THEN (((rt0.c2, NULL, rt0.c3)) NOT BETWEEN ((t0.c15, t0.c15, 0.9851556465120793)) AND ((rt0.c3, t0.c15, rt0.c0))) ELSE CAST(rt0.c0 AS INTEGER) END FROM t0, rt0 WHERE (((('7iFQq2D)' IN ()))AND(0X6d36cf69 COLLATE RTRIM))); -- 0ms;
SELECT rt0.c4 FROM rt0, t0; -- 0ms;
SELECT ALL t0.c15, (~ ((t0.c0 IN ()))), CASE ((rt0.c4) IS TRUE)  WHEN UNLIKELY(DISTINCT t0.c15) THEN ((rt0.c3) IS FALSE) WHEN ((0.7486945611903545) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN rt0.c2 WHEN ((rt0.c0) NOT NULL) THEN t0.c15 END FROM rt0, t0 WHERE (0.4431189703312606); -- 0ms;
SELECT DISTINCT (rt0.c4 IN ((((t0.c15, t0.c0, rt0.c3, rt0.c2, 0.4621567914128507)) BETWEEN ((t0.c0, rt0.c3, t0.c0, t0.c15, rt0.c0)) AND ((t0.c0, rt0.c1, rt0.c3, rt0.c1, rt0.c1))))), ((rt0.c2)=((((0.3079491554308218, t0.c15, rt0.c1))==((rt0.c0, t0.c17, rt0.c0))))), ((CASE t0.c17  WHEN rt0.c0 THEN t0.c0 END) IS FALSE) FROM rt0 WHERE (NULL);SELECT DISTINCT rt0.c1 FROM rt0, t0 GROUP BY (((0.21381442391033567))>=((rt0.c0 COLLATE RTRIM))) HAVING CASE ((t0.c17) ISNULL)  WHEN ((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN COUNT(*) WHEN rt0.c1 COLLATE BINARY THEN ((t0.c0) ISNULL) WHEN t0.c17 THEN ((((t0.c15)OR(t0.c0)))OR(rt0.c2)) ELSE (((t0.c0))==((rt0.c0))) END; -- 0ms;
SELECT ALL ABS(t0.c0) COLLATE NOCASE, CASE WHEN ((t0.c17) NOT BETWEEN (t0.c17) AND (rt0.c1)) THEN ((rt0.c1)%(t0.c17)) WHEN CAST(t0.c0 AS INTEGER) THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt0.c4) NOTNULL) THEN CAST(t0.c15 AS REAL) ELSE 0.462267772517712 END, PERCENT_RANK() OVER () FROM t0;SELECT DISTINCT (0.27168221130932957 IN (rt0.c0 COLLATE RTRIM, rt0.c3 COLLATE RTRIM)), CAST(TRIM(DISTINCT t0.c15, rt0.c2) AS NUMERIC), LOWER((((('995822437')AND(rt0.c4)))OR(rt0.c1))) FROM rt0, t0 LIMIT -2127897027; -- 0ms;
SELECT (CAST(rt0.c3 AS NUMERIC) IN ()), CAST(((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) AS NUMERIC), ((((((rt0.c2)OR(rt0.c2)))AND('-713477074')))%(((((rt0.c1)OR(0.7816414552569827)))AND(rt0.c0)))) FROM rt0, t0 WHERE ((((((0.23349784996621215))=((x''))))IS((- ('-183366236'))))); -- 0ms;
SELECT ((rt0.c3) NOTNULL) FROM rt0, t0 WHERE (json_array_length(((NULL) IS TRUE))) ORDER BY LIKELIHOOD((+ (x'541f')), 0.7820880569883525), rt0.c3, (- ((((rt0.c3)) BETWEEN ((0.6806944450220075)) AND ((x''))))) DESC  NULLS FIRST; -- 1ms;
SELECT ((CASE WHEN rt0.c4 THEN t0.c0 END)/(MIN(rt0.c2))), ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS FALSE), load_extension(x'2fc8') FROM rt0 WHERE (ABS(DISTINCT '-1958217132'));SELECT (NOT (((t0.c15)>=(0.25621773245054147)))), (((- (rt0.c4))) NOT BETWEEN (CAST(t0.c15 AS TEXT)) AND (((((rt0.c4)OR(rt0.c2)))AND(t0.c17)))), (((0.473638794198166, t0.c17, rt0.c3)) NOT BETWEEN ((((((((((((((rt0.c1)OR(rt0.c3)))OR(NULL)))AND('UN')))AND(rt0.c4)))AND(rt0.c3)))AND(t0.c15)), (NOT (t0.c15)), t0.c17 COLLATE RTRIM)) AND ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (t0.c15 IN (t0.c0)), HEX(t0.c15)))) FROM rt0 WHERE ((((('-1488289502') NOT BETWEEN (x'') AND (-2.127897027E9))) NOT BETWEEN ((0.2788494523494759 IN ())) AND (PRINTF(0.37463491202514654))));SELECT MIN(t0.c17), ((((((rt0.c4)AND(rt0.c2)))AND(t0.c0)))<<(((rt0.c0)OR(t0.c0)))), (NOT (CASE t0.c0  WHEN t0.c15 THEN t0.c15 WHEN rt0.c3 THEN t0.c15 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) FROM t0, rt0; -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY) NOT NULL), (((rt0.c0) NOT BETWEEN (t0.c15) AND (t0.c17)) IN ()), CASE WHEN ((rt0.c4)-(t0.c0)) THEN ((rt0.c1)>('1876884306')) WHEN rt0.c4 THEN ((((rt0.c1)AND(rt0.c4)))AND(t0.c17)) WHEN ((t0.c15)-(t0.c17)) THEN (('UHn')IS(x'')) END FROM t0, rt0; -- 0ms;
SELECT t0.c0, ((((t0.c15)IS NOT(t0.c15))) BETWEEN (LTRIM(rt0.c2, t0.c0)) AND ((t0.c15 IN (rt0.c2)))), NTH_VALUE((- ((- (rt0.c1)))), (CAST(rt0.c4 AS NUMERIC) IN (CAST(rt0.c4 AS TEXT)))) OVER (), ((rt0.c2)IS(CAST(rt0.c3 AS BLOB))), (rt0.c0 IN ((rt0.c0 IN ()))) FROM rt0 WHERE (((((x'') BETWEEN (0.6938437759809185) AND (-1788632671)))+(CAST(NULL AS NUMERIC))));SELECT (rt0.c0 IN (rt0.c4, t0.c15)) COLLATE BINARY FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((CASE t0.c17  WHEN rt0.c1 THEN rt0.c3 END) IS TRUE) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) ISNULL)  WHEN (0.6979623301546753 IN ()) THEN rt0.c3 WHEN CAST(t0.c0 AS REAL) THEN (- (0.49516089578050015)) WHEN MAX(rt0.c3) THEN ((((rt0.c1)OR(t0.c0)))AND(x'')) WHEN (rt0.c3 IN ('*', 0xffffffffa048febb)) THEN AVG(t0.c0) WHEN (rt0.c1 IN ()) THEN x'f879075d' ELSE (~ (rt0.c2)) END, CASE DATETIME(rt0.c1, rt0.c1, t0.c15)  WHEN TOTAL(NULL) THEN ((rt0.c1) ISNULL) WHEN 'gZ' THEN ((rt0.c0)GLOB(rt0.c4)) WHEN ((rt0.c2) NOTNULL) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (t0.c17)) ELSE rt0.c3 END, x'a17e' FROM t0, rt0 WHERE ((((-1986201686, 65885616, x'')) NOT BETWEEN ((CASE WHEN x'' THEN '' ELSE NULL END, ROUND(4.9167914E7, NULL), ((NULL) NOTNULL))) AND ((((('-1647221271')) NOT BETWEEN (('05')) AND ((NULL))), (NULL IN (NULL)), 1496594412 COLLATE RTRIM)))) GROUP BY ((((rt0.c3) IS TRUE)) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt0.c3)>=(rt0.c4)))), (((- (t0.c15))) IS FALSE), ((CASE t0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END) NOT BETWEEN (IFNULL(DISTINCT t0.c0, t0.c15)) AND (CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END)) LIMIT -9223372036854775808 OFFSET -1884739941; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ((((rt0.c3))<((rt0.c4))))) FROM rt0, t0 WHERE (CASE (((('1075458937')AND(0.5761721679913591)))AND(NULL))  WHEN ('-224949721' IN ()) THEN 0.03839361508625383 END); -- 0ms;
SELECT DISTINCT ((((rt0.c4 IN (t0.c0))))>((t0.c17 COLLATE BINARY))), rt0.c2, rtreenode(((rt0.c2)<<(rt0.c1)), ((rt0.c2) NOT NULL)), SUM(NULL) OVER (), ((((rt0.c3)%(rt0.c0)))<(AVG(rt0.c2))) FROM t0 NATURAL JOIN rt0 WHERE (((('-399640655' IN ()))>((NULL IN ())))); -- 0ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((((((rt0.c4)AND(rt0.c4)))OR(rt0.c4))))) FROM t0 WHERE ((~ (((x'')GLOB('ाLpڈ*'))))) ORDER BY (((((t0.c17)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))>>(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('u'))))  NULLS LAST, ((COALESCE(DISTINCT rt0.c2, '')) IS FALSE)  NULLS FIRST;SELECT DISTINCT ((((((((NULL)OR(0.4690371727470374)))OR(((rt0.c1)&(rt0.c0)))))OR(((rt0.c3)<=(NULL)))))AND(((rt0.c2)AND(rt0.c2)))) FROM rt0 NOT INDEXED; -- 0ms;
SELECT TOTAL(((t0.c17)<>(rt0.c0))) FROM rt0 WHERE (((((x'6068')&(x'')))>=(((((NULL)OR(x'c754')))OR(x'b1b2'))))) GROUP BY ((CAST(t0.c17 AS TEXT)) BETWEEN (((((((((rt0.c3)OR(t0.c17)))OR(t0.c0)))OR('-485304531')))AND(t0.c17))) AND (LIKELIHOOD(rt0.c2, 0.6187004533963468))) HAVING CASE ']>zq5\nqX'  WHEN ((rt0.c0)+(rt0.c0)) THEN (('-1830166743')>=(rt0.c2)) ELSE (t0.c17 IN (rt0.c3)) END;SELECT DISTINCT (((rt0.c0)<>(rt0.c0)) IN ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM t0 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c3)/(rt0.c2)) THEN TRIM(DISTINCT t0.c15, rt0.c1) END FROM rt0, t0 WHERE (((CAST('' AS INTEGER)) NOT NULL)) EXCEPT SELECT ALL CAST(((((((((rt0.c2)OR(rt0.c0)))OR(t0.c0)))OR(t0.c15)))AND(rt0.c1)) AS BLOB) FROM rt0, t0 WHERE (((((('161532439'))<=((0.13704452735167538))))!=(((0.884775147984395) NOT BETWEEN ('GH\n㸪r') AND (0.41182720685387664))))) ORDER BY (((((rt0.c3, '', x''))!=((rt0.c0, x'', rt0.c2))))>>((rt0.c3 IN ())))  NULLS FIRST, (((((t0.c17)) NOT BETWEEN ((rt0.c2)) AND ((t0.c15))))||(((((t0.c15)OR(t0.c15)))AND(rt0.c2)))) DESC;SELECT ALL NULL, GROUP_CONCAT(((t0.c15)<>(t0.c17))) FILTER(WHERE ((((((t0.c15)AND(rt0.c3)))AND(rt0.c2)))LIKE(TRIM(rt0.c3)))) OVER (), ((((rt0.c0) NOT BETWEEN (t0.c15) AND (t0.c0)))*(((rt0.c2)<>(rt0.c0)))) FROM rt0 WHERE (((((((NULL)OR(1745304860)))OR(x''))) NOTNULL)) ORDER BY ((((t0.c17) ISNULL))<=(((t0.c0) BETWEEN (t0.c15) AND (x'ba99')))) DESC;SELECT DISTINCT ((0.20690775697770225)GLOB(((rt0.c0) NOT BETWEEN ('-1978677258') AND (t0.c15)))) FROM t0 LIMIT 1536070273 OFFSET -70809487;SELECT ALL rt0.c3 FROM t0 WHERE ((((('-10893412') BETWEEN ('-1669646228') AND ('~x&2\r7\]'))) NOT BETWEEN (CASE -1.79979917E8  WHEN 0.11279828973823625 THEN x'' ELSE NULL END) AND (((x'e117') NOT BETWEEN (NULL) AND (-754691751)))));SELECT ALL ('-1856782793' IN (t0.c17)) COLLATE NOCASE FROM rt0;SELECT DISTINCT LIKELIHOOD(rt0.c3, 0.7688755126952059), FIRST_VALUE(x'') OVER (), CASE WHEN x'' THEN COUNT(rt0.c4) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((t0.c0)IS(rt0.c2)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((rt0.c2) NOTNULL) ELSE ((t0.c17)&(t0.c0)) END FROM rt0;SELECT DISTINCT CAST(t0.c0 COLLATE NOCASE AS BLOB) FROM rt0, t0 WHERE (((((NULL)*(0.33032989416241354))) NOT BETWEEN (x'f2ff') AND ((0Xffffffffc6630c07 IN ())))); -- 0ms;
SELECT ALL UPPER(((rt0.c4)==(rt0.c0))) FROM t0 WHERE (LIKELIHOOD(DATE('-1329526551', NULL, NULL), 0.22641071259347045)) ORDER BY ((NOT (t0.c15)) IN ((+ (rt0.c1))))  NULLS FIRST;SELECT CAST(rt0.c1 AS REAL) COLLATE BINARY FROM t0 WHERE (((('JgC썮]P')) NOT BETWEEN ((('1431977351' IN ()))) AND (((x'' IN ('-289031686')))))) LIMIT 1828403089;SELECT ALL 'Ho' FROM rt0, t0; -- 0ms;
SELECT ALL CASE ((t0.c17) BETWEEN (rt0.c3) AND ('O*5>PoZV'))  WHEN ((NULL)=(rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN ((rt0.c3)<=(t0.c0)) THEN SUM(rt0.c1) WHEN ((t0.c17) IS TRUE) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c3)<(rt0.c0)) THEN ((((NULL)AND(x'')))OR(rt0.c3)) WHEN ((rt0.c4)|(t0.c15)) THEN x'' ELSE (t0.c17 IN (rt0.c1)) END, rt0.c4, ((+ (rt0.c0)) IN ()) FROM rt0;SELECT ALL AVG(((t0.c15)IS NOT(rt0.c2))) OVER () FROM t0;SELECT ALL (((((rt0.c1, rt0.c1, rt0.c3)) NOT BETWEEN ((t0.c17, rt0.c4, rt0.c1)) AND ((rt0.c4, t0.c17, rt0.c4))))IS NOT(UNLIKELY(DISTINCT rt0.c0))) FROM t0 NATURAL JOIN rt0 GROUP BY CASE WHEN rt0.c1 THEN ((((rt0.c1)AND(rt0.c0)))AND(t0.c15)) ELSE t0.c15 END ORDER BY ((((t0.c0)LIKE(rt0.c1))) NOT BETWEEN (((rt0.c1)>(rt0.c4))) AND (CASE WHEN t0.c0 THEN rt0.c2 ELSE rt0.c4 END))  NULLS FIRST, ((+ (rt0.c2)) IN ()) DESC  NULLS LAST, CASE WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c1)IS(rt0.c0)) WHEN (NOT (rt0.c3)) THEN (rt0.c2 IN ()) WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (t0.c17)) THEN (NOT (rt0.c1)) ELSE (((t0.c17))<=(('1824719397'))) END DESC; -- 9ms;
SELECT DISTINCT rt0.c1 FROM t0 WHERE (CAST(((7.68597407E8) BETWEEN ('-1323243284') AND (NULL)) AS INTEGER)) ORDER BY ((((((rt0.c2)OR(t0.c15)))OR(rt0.c4)))<(((t0.c17) NOT NULL)))  NULLS LAST, LIKE((((t0.c15, rt0.c4, x'')) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c4)) AND ((t0.c0, rt0.c1, rt0.c4))), (rt0.c2 IN (rt0.c2, rt0.c0)), '0');SELECT 0.6492908885326744, COUNT(t0.c0 COLLATE RTRIM) OVER (), (NOT ((- (rt0.c4)))), CASE WHEN rt0.c3 THEN (rt0.c0 IN ()) WHEN '' THEN -1.99666308E9 WHEN CAST(t0.c17 AS TEXT) THEN ((rt0.c0)||(rt0.c2)) ELSE (t0.c0 IN (t0.c17)) END, ((((((t0.c15) NOTNULL))OR(((t0.c17)%(rt0.c1)))))AND(((rt0.c0)<=('0.7816414552569827')))) FROM t0;SELECT ((((rt0.c3) BETWEEN (rt0.c3) AND (t0.c17))) NOT NULL) FROM t0;SELECT CUME_DIST() OVER (), CAST(((NULL) BETWEEN (t0.c17) AND (-1.88724882E8)) AS REAL), MAX(CASE WHEN rt0.c4 THEN rt0.c3 END) FROM rt0, t0; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c1)IS(t0.c17)) THEN ((rt0.c0)<<(rt0.c2)) ELSE rt0.c4 END FROM rt0 WHERE (((((2038770330) IS TRUE)) IS TRUE));SELECT DISTINCT NTH_VALUE(rt0.c2, (((rt0.c2)) BETWEEN ((((t0.c0)OR(rt0.c0)))) AND ((((((((((((((rt0.c3)OR(t0.c17)))OR(rt0.c2)))AND('')))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))))) OVER () FROM rt0, t0 GROUP BY ((IFNULL(rt0.c4, rt0.c1))%(TYPEOF(DISTINCT '-598470219'))) LIMIT -699279480;SELECT DISTINCT (((((- (rt0.c0)))AND(((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))OR(t0.c17)))OR(rt0.c2)))))AND(((rt0.c2)LIKE(rt0.c3)))) FROM t0 GROUP BY (((rt0.c1)<(rt0.c2)) IN (((((t0.c0)OR(rt0.c0)))OR(t0.c0)))) HAVING x'';SELECT DISTINCT ((((t0.c15)+(rt0.c1))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (CASE WHEN rt0.c4 THEN rt0.c4 END)) FROM rt0, t0 WHERE (CASE WHEN (~ (x'dc6b')) THEN (('Mb')=('1887550155')) ELSE ((((((((NULL)OR(0.3339608246398823)))AND(x'')))OR(0.9703552661733162)))AND(0x3dc76dac)) END); -- 0ms;
SELECT ((((rt0.c1)<>(rt0.c4)))/(((t0.c15)-(rt0.c1)))), TYPEOF(DISTINCT rt0.c2 COLLATE RTRIM), t0.c15 FROM t0 LIMIT -1250687343 OFFSET -318983034;SELECT ABS(((t0.c17) IS FALSE)), COUNT(JULIANDAY(t0.c0, t0.c15, rt0.c3)) FILTER(WHERE t0.c17) OVER (), ((CASE WHEN rt0.c0 THEN rt0.c4 ELSE t0.c0 END)GLOB(TOTAL(rt0.c4))) FROM rt0, t0 WHERE ((NULL IN (LIKE(x'', 0.5638700790526702), ((x'')/(x'6b76')), ((NULL)OR(0.21108078910567973))))); -- 0ms;
SELECT AVG(CAST(t0.c0 AS REAL)) FROM rt0 WHERE (UNLIKELY(DISTINCT (0.1777930122084983 IN ())));SELECT DISTINCT (((CASE rt0.c1  WHEN t0.c15 THEN rt0.c3 ELSE rt0.c4 END))<((((((t0.c0)AND(rt0.c3)))AND(0.8910544413404512))))) FROM t0 WHERE ((((NULL)<(x'b10f')) IN ())) LIMIT -834131387 OFFSET -1046555496;SELECT DISTINCT (((rt0.c2, rt0.c0, t0.c15)) NOT BETWEEN ((t0.c17, rt0.c4, t0.c0)) AND ((rt0.c2, rt0.c4, rt0.c3))) COLLATE NOCASE, t0.c15, CAST(COUNT(*) AS BLOB) FROM rt0;SELECT ((((rt0.c0)%(rt0.c0)))OR(rt0.c2 COLLATE RTRIM)) FROM t0, rt0 WHERE ((- (CASE NULL  WHEN NULL THEN '-671630020' ELSE 161532439 END))) GROUP BY (((+ (rt0.c2)))%((NOT (t0.c15)))); -- 1ms;
SELECT (((((t0.c17) ISNULL), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c4)), QUOTE(t0.c0)))<((((t0.c17) NOT NULL), rt0.c2, UNLIKELY(t0.c15)))) FROM t0;SELECT ALL (((((((((+ (rt0.c3)))AND(UPPER(DISTINCT rt0.c2))))AND(GROUP_CONCAT(t0.c0))))OR(((t0.c15) NOT NULL))))AND(rt0.c3 COLLATE BINARY)), DENSE_RANK() OVER ( RANGE 1536753980 COLLATE RTRIM PRECEDING EXCLUDE TIES), (((+ (rt0.c3)))=((t0.c17 IN ()))) FROM rt0 WHERE (x'c087');SELECT CASE ((rt0.c1)*(rt0.c3))  WHEN (~ (rt0.c2)) THEN (((rt0.c3, rt0.c1, rt0.c3))=((t0.c0, rt0.c2, rt0.c4))) WHEN (('') NOT NULL) THEN (t0.c17 IN ()) WHEN CAST(rt0.c0 AS BLOB) THEN 1.4929345E9 ELSE ((((((((t0.c15)OR(rt0.c1)))AND(t0.c0)))OR('](')))OR(t0.c0)) END, (0.5579886247952253 COLLATE BINARY IN ((rt0.c0 IN ()), ((NULL) BETWEEN (NULL) AND (rt0.c4)))), UNLIKELY(DISTINCT ((t0.c17)+(rt0.c2))) FROM rt0 GROUP BY LIKELIHOOD(((((((((0.09267729509826905)AND(t0.c0)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)), 0.4233570438154014);SELECT DISTINCT CASE CASE 0.5771531794104505  WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END  WHEN ((((t0.c0)AND(rt0.c1)))OR(rt0.c4)) THEN '995822437' WHEN NULL THEN CAST(t0.c0 AS BLOB) WHEN (+ (rt0.c1)) THEN ROUND(t0.c15, rt0.c1) WHEN ((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)) THEN (((t0.c17))<((rt0.c4))) WHEN (NOT (rt0.c4)) THEN ((rt0.c4)&(x'02dd')) END FROM rt0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CAST(rt0.c4 AS TEXT) COLLATE RTRIM FROM t0 WHERE (((((('1855391107', 0.8063386049225862, '1129676306'))==((NULL, x'', x'')))) NOTNULL));SELECT ALL (((rt0.c2, rt0.c4, t0.c0, rt0.c1, t0.c17, t0.c0, rt0.c1))>((t0.c15, rt0.c1, rt0.c0, rt0.c1, t0.c17, rt0.c4, rt0.c2))) COLLATE BINARY FROM t0 INDEXED BY i68;SELECT COUNT((~ (rt0.c2))) FROM rt0, t0 WHERE ((((((x'9f19' IN ()))OR(((NULL)/(0.18757147582628286)))))OR(((0.18335991981000122) NOT BETWEEN ('-1739924231') AND ('-172375619'))))) ORDER BY ((rt0.c2) BETWEEN (t0.c0) AND (t0.c15)) COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT DISTINCT '0.8788580342040214' COLLATE BINARY COLLATE RTRIM FROM t0, rt0; -- 0ms;
SELECT -1648006304, (((t0.c15)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((MAX(t0.c15)))), ((((rt0.c3)<=(rt0.c1))) BETWEEN (COUNT(rt0.c2)) AND ((((rt0.c1))==((NULL))))) FROM t0;SELECT DISTINCT ((((t0.c17)AND(rt0.c0)))AND(rt0.c0)) COLLATE NOCASE, CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN t0.c15 THEN rt0.c4 ELSE t0.c0 END COLLATE NOCASE, ((CAST(t0.c0 AS TEXT)) IS TRUE) FROM t0, rt0; -- 1ms;
SELECT DISTINCT LAG((- (((t0.c15) ISNULL))), (((((NULL)IS(t0.c17)), ((NULL)|(t0.c0)), ((t0.c15)IS NOT(t0.c0))))!=(((((t0.c17)) BETWEEN ((t0.c17)) AND ((t0.c0))), t0.c17 COLLATE RTRIM, '2125005455'))), x'') OVER ( GROUPS BETWEEN (((ABS(DISTINCT NULL)))=((t0.c0))) FOLLOWING AND ((((t0.c15)<(rt0.c1))) IS FALSE) FOLLOWING), (((((((((t0.c17)AND(t0.c17)))AND(t0.c15)))OR(rt0.c0)))AND(rt0.c1)) IN ()), NULL FROM t0 WHERE (CAST((+ (x'')) AS INTEGER)); -- 0ms;
SELECT DISTINCT SUM(((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c2)))OR(t0.c17))) OVER ( ORDER BY TRIM(DISTINCT UNLIKELY(t0.c17), rt0.c0), (- ((((rt0.c2)) NOT BETWEEN ((t0.c15)) AND ((rt0.c1)))))  NULLS FIRST, ((((- (NULL))))<(('-598470219'))) DESC  NULLS FIRST), ((rt0.c3) ISNULL) COLLATE RTRIM, (((rt0.c0)||(t0.c15)) IN ((~ (rt0.c4)))) FROM t0;SELECT ALL LOWER(DISTINCT ((rt0.c2) NOT BETWEEN (NULL) AND (0.026058283190714904))) FROM t0, rt0 WHERE (((((NULL)AND(0x576f09b3))) BETWEEN ((('-1292061685')<(678696007))) AND ((- (0X20c307b4))))); -- 0ms;
SELECT ALL CASE ((rt0.c2) ISNULL)  WHEN CAST(-1229289537 AS REAL) THEN ((t0.c15)%(t0.c17)) ELSE (rt0.c3 IN (rt0.c0)) END, MAX(CASE WHEN rt0.c4 THEN x'8c61' ELSE t0.c17 END), AVG(((rt0.c2) BETWEEN (t0.c15) AND (rt0.c2))) FILTER(WHERE (((((rt0.c4 IN ()))AND(CAST(t0.c15 AS TEXT))))AND(t0.c15))) OVER () FROM rt0;SELECT DISTINCT (LENGTH(rt0.c4) IN ()), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))|((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x''))))), COUNT(AVG(CAST(rt0.c3 AS TEXT))), (~ (((rt0.c4) NOT BETWEEN ('wd') AND (rt0.c2)))), (NOT (rt0.c1 COLLATE RTRIM)) FROM t0, rt0;SELECT DISTINCT (((rt0.c0)) BETWEEN ((((((rt0.c4)AND(rt0.c3)))OR(t0.c17)))) AND ((((rt0.c0) IS TRUE)))), '', LEAD((((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((((t0.c17)>>(t0.c15)), ((rt0.c4) NOTNULL), (+ (t0.c0)))) AND (((- (t0.c17)), (~ (rt0.c4)), CASE WHEN rt0.c3 THEN x'' ELSE t0.c15 END))), ((((rt0.c4)LIKE(rt0.c4)))&(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 END)), ((((((rt0.c3)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))))>((CAST(rt0.c4 AS BLOB))))) OVER ( ORDER BY (t0.c17 IN ()) ASC) FROM rt0 FULL OUTER JOIN t0 ON (((+ (rt0.c0))) BETWEEN ((((t0.c0))<((t0.c15)))) AND (0.37346171395727734)); -- 0ms;
SELECT DISTINCT ((((rt0.c2)) NOT BETWEEN ((t0.c17)) AND ((rt0.c2))) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0;SELECT ((t0.c17 COLLATE RTRIM) BETWEEN (NULL) AND ((- (rt0.c3)))) FROM t0;SELECT GROUP_CONCAT(('-1030825279' IN ())) OVER (), ((NULL)=(CAST(rt0.c2 AS NUMERIC))), CASE (rt0.c3 IN ())  WHEN (rt0.c2 IN ()) THEN ((t0.c15)IS(t0.c15)) ELSE '-1196283478' END FROM rt0;SELECT CAST((+ (rt0.c2)) AS REAL) FROM rt0, t0 WHERE ((('\n&!R#iX') NOT NULL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN rt0.c1 THEN rt0.c2 WHEN '-1942942116' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN 0.9430407189613231 THEN rt0.c4 ELSE t0.c15 END) FROM rt0;SELECT DISTINCT CASE ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((t0.c17))) THEN rt0.c4 ELSE ((rt0.c4) BETWEEN ('1686373196') AND (rt0.c1)) END FROM t0;SELECT DISTINCT ((((rt0.c2) ISNULL))GLOB(MAX(rt0.c1))) FROM t0 WHERE (1.324825952E9) GROUP BY IFNULL(DISTINCT ((rt0.c1)AND(NULL)), ((t0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))) HAVING ((((rt0.c4) NOT NULL))-(((('-560785404', rt0.c4, rt0.c0))<=((t0.c15, rt0.c1, 'zႪTi')))));SELECT ALL COUNT(((t0.c15) NOTNULL)), MIN((((t0.c17, rt0.c2, rt0.c2))<((rt0.c0, t0.c15, t0.c15)))), (UPPER(DISTINCT rt0.c4) IN ()), ((CASE t0.c17  WHEN NULL THEN rt0.c1 ELSE rt0.c3 END) ISNULL), (('>[' COLLATE RTRIM) IS TRUE) FROM rt0, t0 ORDER BY rt0.c4; -- 0ms;
SELECT DISTINCT NULLIF(NULL COLLATE BINARY, GROUP_CONCAT(rt0.c1)), ((((0.3577611112459216) BETWEEN (rt0.c3) AND (rt0.c0)))||(CAST(x'' AS REAL))), (- (0.7651065106338075)) COLLATE NOCASE FROM t0, rt0 WHERE (((((0.26149261580374106)>=(x'f570')))<<(((8.07471467E8)<('ci\n5焯Z|K'))))); -- 0ms;
SELECT rt0.c3 FROM t0 WHERE ((+ ((('0.2872838256437542')AND(0.8619646383663128)))));SELECT DISTINCT ((((t0.c17)-(rt0.c4)))IS((((('')AND(rt0.c2)))AND(t0.c0)))), COUNT(rt0.c2), rt0.c0, CASE WHEN load_extension('1705685405', rt0.c4) THEN CAST(rt0.c0 AS TEXT) END, CAST((((rt0.c2, rt0.c4, rt0.c1))>((t0.c17, rt0.c4, rt0.c1))) AS INTEGER) FROM rt0 WHERE ((((0xffffffffa78bbe6f IN (x''))) NOT BETWEEN (((0.767700902986495) BETWEEN (x'') AND (0.2116963219682153))) AND (CASE WHEN 0.49516089578050015 THEN 0.6678320272257705 END)));SELECT AVG(rt0.c4) OVER ( GROUPS TIME((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0))), 0Xffffffffae9a356c, ((t0.c15)=(rt0.c2))) PRECEDING) FROM t0;SELECT TRIM(((rt0.c1)GLOB(t0.c17))), -1.120706486E9, ((((rt0.c4)<=(rt0.c4)))-(NULL)) FROM rt0 NATURAL JOIN t0 WHERE (((('-1889459799')) NOT BETWEEN (((+ (0X555a3d87)))) AND ((0.6673305861672401)))); -- 0ms;
SELECT ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 END) NOT BETWEEN ((((('d\')AND(rt0.c4)))AND(rt0.c2))) AND (COUNT(0.30942678407666735))) FROM rt0, t0 WHERE ((((((1152671374)) BETWEEN (('Gh')) AND ((4.73888584E8)))) IS FALSE)); -- 0ms;
SELECT ALL TYPEOF(((t0.c17) ISNULL)), CAST(rt0.c2 COLLATE RTRIM AS INTEGER), CASE ((rt0.c1)<(t0.c0))  WHEN ((rt0.c1)>=(t0.c17)) THEN ((rt0.c1)>>(t0.c0)) END, rt0.c4, CAST(t0.c15 AS REAL) FROM rt0, t0 WHERE (CAST(1.001427062E9 AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT ALL MIN((NOT (rt0.c3))) FROM t0 WHERE (CASE CASE -681115896  WHEN '' THEN '-151714414' END  WHEN ((-1383908530)>(NULL)) THEN (~ (NULL)) WHEN (x'' IN ()) THEN ((0.6867934375383944) BETWEEN (0.691343564077702) AND ('')) WHEN (~ (x'')) THEN ((NULL)-(1817794610)) ELSE ((NULL) NOT BETWEEN (2.3016552E8) AND (x'')) END) ORDER BY CAST(CASE t0.c17  WHEN rt0.c3 THEN 0.1420644655506622 END AS BLOB) ASC;SELECT LAST_VALUE(NULLIF(0Xffffffffe312d72d, ((((t0.c15)OR(rt0.c2)))AND(rt0.c2)))) OVER () FROM t0, rt0 WHERE ((((('807471467')) BETWEEN (('0.0407993659026612')) AND ((x'0fd2'))) IN ('1855391107' COLLATE RTRIM))); -- 0ms;
SELECT (((x'', rt0.c3, t0.c15)) BETWEEN (((+ (rt0.c0)), (((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), CAST(t0.c0 AS NUMERIC))) AND ((rt0.c2 COLLATE NOCASE, NULL, CASE WHEN t0.c17 THEN rt0.c2 WHEN t0.c15 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c1 END))), (((t0.c17)) BETWEEN ((((rt0.c1) IS FALSE))) AND ((rt0.c3))), ((rt0.c4) NOT BETWEEN (t0.c15) AND (rt0.c3)) COLLATE BINARY, NTILE(((((rt0.c1 COLLATE BINARY)AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((rt0.c0 IN ())))) OVER (), CUME_DIST() OVER () FROM t0, rt0 WHERE (((((NULL)/(5.40662235E8))) ISNULL)) ORDER BY ((CASE WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN t0.c15 ELSE t0.c15 END) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt0.c1)||(t0.c15))));SELECT ALL ((CASE WHEN 0.463013702149373 THEN t0.c17 ELSE t0.c17 END) ISNULL) FROM rt0, t0 ORDER BY ((NULL)LIKE(((NULL)=(rt0.c0)))) ASC; -- 0ms;
SELECT CAST(NULL AS INTEGER), CAST(rt0.c1 COLLATE RTRIM AS TEXT), x'2595fa1a' FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE 'X)' END THEN 0.44981680336774355 COLLATE BINARY WHEN (- (t0.c0)) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN (+ (NULL)) THEN CAST(t0.c17 AS BLOB) END, ((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)) COLLATE BINARY, GROUP_CONCAT((t0.c17 IN (t0.c17))) OVER () FROM rt0 WHERE ((+ (TYPEOF('419574388'))));SELECT DISTINCT CASE ((rt0.c0) NOT NULL)  WHEN ((t0.c17)%(rt0.c0)) THEN (rt0.c1 IN ()) WHEN x'' THEN ((((t0.c17)AND(t0.c15)))AND(rt0.c3)) WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c2) IS FALSE) ELSE IFNULL(t0.c0, rt0.c4) END FROM t0, rt0 ORDER BY CASE ((((((((rt0.c0)OR(rt0.c2)))OR(t0.c15)))AND(rt0.c0)))AND(rt0.c3))  WHEN '춼eS8WIZUJ' THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS BLOB))AND(CASE WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0, t0 WHERE (x'') GROUP BY CASE (((t0.c17))>=((189581918)))  WHEN rt0.c4 THEN 0.7395544973661309 END, ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 END)!=(((rt0.c3) NOT BETWEEN (t0.c17) AND (t0.c15)))), (('Xi') NOTNULL) HAVING CAST(((rt0.c2)<=(rt0.c3)) AS BLOB); -- 0ms;
SELECT ALL CAST(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN t0.c0 THEN t0.c17 END THEN LENGTH(rt0.c2) END FROM rt0 WHERE (CAST(((-160058482) NOT BETWEEN (0.33966611363257815) AND ('2125005455')) AS BLOB));SELECT DISTINCT (((rt0.c3, t0.c15, t0.c0))<>((rt0.c1, rt0.c2, t0.c15))) COLLATE BINARY, ((CASE t0.c17  WHEN rt0.c0 THEN t0.c15 ELSE rt0.c4 END) NOTNULL), ((((rt0.c1)IS(t0.c15))) NOT BETWEEN (((NULL)IS NOT(rt0.c2))) AND ((+ (t0.c17)))) FROM rt0 WHERE (CAST((((NULL)) BETWEEN (('(* )')) AND ((NULL))) AS TEXT));SELECT DISTINCT (+ (-147229786 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT ((t0.c0)GLOB(((((rt0.c2)AND(t0.c0)))AND(rt0.c1)))) FROM t0;SELECT DISTINCT (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((t0.c17))))<(CAST(rt0.c3 AS REAL))), t0.c17, (((SUM(t0.c15)))>(((((t0.c15, rt0.c1, t0.c15)) NOT BETWEEN ((t0.c15, t0.c17, rt0.c0)) AND ((rt0.c1, t0.c0, rt0.c0)))))) FROM t0, rt0 WHERE ((((('Ld<\rph')|(NULL))) NOTNULL)) GROUP BY x'8d034beb', ('-1904465005' IN ()), ((((((rt0.c4)-(rt0.c2)))OR(((rt0.c4)LIKE(0.7509265089342916)))))OR(CASE rt0.c4  WHEN rt0.c4 THEN t0.c15 ELSE rt0.c0 END)); -- 0ms;
SELECT ((((rt0.c2)OR(t0.c17)))OR(rt0.c4)) COLLATE BINARY FROM rt0;SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((((((('9T7')AND(0.6173019984987975)))OR(0.37449785367878785)))OR(x'e859')))AND(x'315e')))OR(TRIM(NULL))))OR(((0.44140157294353943)*('D('))))); -- 0ms;
SELECT (NOT ((((rt0.c2, rt0.c4, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c4))))), (NOT (rt0.c0)), ((((rt0.c2)<(rt0.c2))) BETWEEN ((~ (rt0.c2))) AND (t0.c15)) FROM t0, rt0 LIMIT -1983063835; -- 0ms;
SELECT '-1120706486' FROM t0; -- 0ms;
SELECT ALL ((t0.c0) NOTNULL) COLLATE NOCASE FROM t0, rt0 WHERE (((+ (NULL)) IN ((('-1566260970') NOT NULL), ((((NULL)AND(x'')))OR(NULL))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST(rt0.c0 AS INTEGER)) OVER (), CAST('-179218970' AS REAL) COLLATE RTRIM, ((((((t0.c17)OR(t0.c17)))OR(t0.c15)))IS NOT(((rt0.c4) NOT NULL))) FROM rt0 WHERE (CAST(CAST(NULL AS REAL) AS NUMERIC)) LIMIT -1047446157 OFFSET -1152913396;SELECT LIKELY(t0.c15 COLLATE RTRIM) FROM t0, rt0 WHERE (((((- (NULL)), CASE WHEN '1275346296' THEN 0.3157425409966699 END, CAST(NULL AS INTEGER)))>(('1674874615', ('' IN ()), ((0.826705849504353) IS FALSE))))); -- 0ms;
SELECT DISTINCT (('-985911019') IS FALSE), t0.c15, ((((rt0.c0)OR(rt0.c1)))AND(t0.c0)) COLLATE NOCASE, ((MIN(rt0.c4)) IS TRUE), ((rt0.c3)IS NOT(((rt0.c2) NOT NULL))), CAST(CASE WHEN rt0.c0 THEN t0.c17 ELSE rt0.c2 END AS REAL), ROW_NUMBER() OVER () FROM t0, rt0 WHERE (((('j~' IN ()))LIKE(((NULL) NOT BETWEEN (0.18053367337723425) AND ('v#'))))); -- 0ms;
SELECT ALL (((t0.c0 IN ())) ISNULL) FROM t0 INNER JOIN rt0 ON ((CASE WHEN rt0.c0 THEN t0.c17 END)<<(CAST(rt0.c3 AS INTEGER))) WHERE (CAST(CAST(x'' AS TEXT) AS NUMERIC)); -- 1ms;
SELECT ALL ((((rt0.c1) ISNULL))<>(rt0.c3 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT ALL CAST((t0.c0 IN (t0.c0)) AS NUMERIC) FROM t0, rt0 WHERE (CAST(QUOTE('B惏P g}%1-') AS TEXT)) GROUP BY (rt0.c1 COLLATE NOCASE IN (t0.c15 COLLATE NOCASE)), (CASE 0.2287318423399307  WHEN t0.c0 THEN t0.c17 END IN ()), rt0.c4 HAVING ((((('v6玦*'))==((NULL)))) ISNULL); -- 0ms;
SELECT ((((rt0.c3)==(rt0.c2))) BETWEEN (((((((((rt0.c0)AND(t0.c17)))AND(rt0.c4)))OR(t0.c15)))AND(t0.c17))) AND (CASE WHEN t0.c0 THEN t0.c15 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE t0.c0 END)), CAST(MIN(t0.c0) AS BLOB), ((((((t0.c15)=(rt0.c2)))AND((rt0.c3 IN (t0.c17)))))OR(TRIM(t0.c0, rt0.c2))) FROM rt0 ORDER BY SQLITE_VERSION() DESC  NULLS FIRST;SELECT DISTINCT (+ ((t0.c15 IN ()))) FROM t0; -- 0ms;
SELECT ALL (((t0.c15, rt0.c1, t0.c17, t0.c15, '~3')) NOT BETWEEN (('', rt0.c1, t0.c0, t0.c0, t0.c0)) AND ((rt0.c1, t0.c17, t0.c0, t0.c0, rt0.c2))) COLLATE RTRIM FROM t0 LIMIT -527259668;SELECT DISTINCT t0.c0 COLLATE NOCASE FROM t0 WHERE (x''); -- 0ms;
SELECT (((+ (rt0.c2)))LIKE(((t0.c0) NOT BETWEEN (t0.c17) AND (rt0.c0)))) FROM t0, rt0 GROUP BY ((((t0.c0))<((t0.c0))) IN ()) HAVING CASE WHEN (((rt0.c1, rt0.c3, rt0.c2))>=((t0.c15, t0.c0, rt0.c4))) THEN LENGTH(0X490a4f69) END LIMIT -1067944581 OFFSET 648898085; -- 0ms;
SELECT ALL (CASE WHEN rt0.c1 THEN t0.c15 END IN ()), ((((((t0.c15)<=(t0.c0)))OR((rt0.c2 IN ()))))OR(((((t0.c15)AND(rt0.c3)))OR(rt0.c0)))), (((t0.c15) BETWEEN (rt0.c0) AND (t0.c17)) IN (TYPEOF(DISTINCT t0.c15), rt0.c0)) FROM rt0 ORDER BY ')|' ASC;SELECT (((((+ (t0.c15)))OR((((rt0.c3))<=((t0.c0))))))AND(rt0.c3 COLLATE RTRIM)) FROM rt0, t0 ORDER BY ((CASE WHEN rt0.c1 THEN -441841766 WHEN rt0.c4 THEN rt0.c2 WHEN t0.c0 THEN t0.c17 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c3 THEN '0.20690775697770225' END)>(((rt0.c2) NOT BETWEEN (0.8418255860921386) AND (rt0.c1)))); -- 0ms;
SELECT DISTINCT (((rt0.c1))<(('572343952'))) FROM t0, rt0 WHERE (((((((((((0Xffffffffe9ae0a0a)OR(0.6497730144207882)))AND('-127328197')))AND('827919798')))AND('-1649946381')))<<((('') BETWEEN (0X7865fec8) AND (',(%[ 7u~'))))); -- 1ms;
SELECT 3561822 FROM rt0, t0; -- 0ms;
SELECT DISTINCT COUNT(LIKE(rt0.c3, t0.c17, '-')) OVER (), MAX(CAST(NULL AS TEXT)), LIKELY(((t0.c17)>=(rt0.c1))) FROM rt0 INDEXED BY i9, t0;SELECT DISTINCT CAST((- (t0.c0)) AS BLOB) FROM rt0, t0 WHERE ((~ (CAST(0.0 AS NUMERIC)))) ORDER BY LOWER(CAST(rt0.c2 AS BLOB)); -- 0ms;
SELECT DISTINCT ((((rt0.c1) ISNULL))AND(t0.c15 COLLATE BINARY)) FROM t0, rt0 WHERE (PRINTF(((0X7ea9028f) NOT BETWEEN ('-1580075733') AND ('X_[O')), (- ('張m')), CASE 0Xffffffffc064ba1f  WHEN 'kiOcE' THEN '' WHEN 0.21935476230382334 THEN 0.08933079246711884 WHEN NULL THEN 2125005455 END)); -- 0ms;
SELECT ALL ((rt0.c2) ISNULL), rt0.c1, ((NULL)||((((x'', rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c2, t0.c17, rt0.c3)) AND ((rt0.c3, 'CGH', '-950278760'))))) FROM rt0, t0 WHERE (('CIxstart of yearie+' IN ())); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, t0; -- 0ms;
SELECT CASE WHEN CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN (- (rt0.c1)) WHEN t0.c15 THEN rt0.c0 WHEN ((((((((x'')OR('521174239')))OR(rt0.c1)))AND(rt0.c4)))AND(t0.c17)) THEN ((((rt0.c1)AND(t0.c15)))AND(t0.c15)) ELSE (rt0.c4 IN ()) END FROM t0 WHERE ((NOT ((((0.67652182848095))<>(('1587612740'))))));SELECT DISTINCT 0X2039d9db FROM rt0, t0 WHERE (((((x'') BETWEEN (NULL) AND (0.007067478240014524)))%((('-149429792')+(NULL))))); -- 0ms;
SELECT CASE WHEN ((t0.c17)%(t0.c0)) THEN ((rt0.c1) NOT BETWEEN (x'') AND (0.4807091993532343)) WHEN ((0.7288299727469246)IS NOT(rt0.c0)) THEN CASE rt0.c0  WHEN 1669798007 THEN rt0.c1 ELSE t0.c0 END WHEN ((t0.c17) NOTNULL) THEN LAST_INSERT_ROWID() WHEN ((((rt0.c0)AND(rt0.c0)))OR(t0.c0)) THEN (+ (rt0.c2)) WHEN ((rt0.c0) IS FALSE) THEN NULLIF(DISTINCT t0.c0, rt0.c0) END FROM t0;SELECT ((((((((CASE rt0.c4  WHEN rt0.c0 THEN t0.c15 WHEN x'' THEN rt0.c0 WHEN t0.c17 THEN rt0.c3 ELSE rt0.c0 END)OR(((rt0.c2) BETWEEN (t0.c0) AND (0.5743680512703555)))))AND(MIN(rt0.c2))))AND((t0.c15 IN ()))))AND(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT ((~ (rt0.c4)))) FROM t0;SELECT ALL ((((rt0.c0)IS NOT(t0.c15))) NOT BETWEEN (rt0.c2) AND (((rt0.c2) ISNULL))) FROM t0;SELECT ((((((((((t0.c15)!=(t0.c15)))OR(CAST(rt0.c2 AS BLOB))))OR(rt0.c0)))OR((((t0.c15))>((rt0.c0))))))OR((rt0.c4 IN ()))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((~ (NULL))) IS TRUE), (((((rt0.c1, rt0.c0, rt0.c0))>=((t0.c0, rt0.c3, rt0.c1)))) BETWEEN (0.8425392278703333) AND (((rt0.c0) BETWEEN (t0.c0) AND (t0.c15)))), NULL FROM rt0 WHERE (((((x'') NOTNULL)) NOT BETWEEN (NULL COLLATE NOCASE) AND ((((0X5c65fc6b, '-2140401687', '')) BETWEEN ((0.34297124554039515, x'4b2c0e11', '\nf')) AND ((0Xffffffff8d030d19, '683835644', '-1108263628'))))));SELECT DISTINCT ((CAST(t0.c0 AS INTEGER)) ISNULL) FROM t0, rt0 INDEXED BY i68 WHERE (((((x'6270')!=(0.8996977425357071))) BETWEEN (((0.14622848302505786)IS NOT('''F2'))) AND ((((('.o')OR(0.7816414552569827)))AND('fq/w*[VQ')))));SELECT CAST((((rt0.c4))<=((t0.c0))) AS NUMERIC) FROM t0 GROUP BY (HEX(rt0.c0) IN ()) HAVING '-720548939';SELECT ALL (((rt0.c2)) BETWEEN ((CASE t0.c15  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)) AND ((rt0.c1))) FROM t0, rt0 WHERE (('mG煒' COLLATE BINARY IN ())) LIMIT -198318488 OFFSET 634501835; -- 0ms;
SELECT DISTINCT ((MIN(rt0.c4))>(rt0.c2)) FROM rt0 WHERE ((0.3370971670117119 IN ()) COLLATE RTRIM) ORDER BY CAST((rt0.c0 IN ()) AS BLOB)  NULLS FIRST; -- 0ms;
SELECT ALL LAST_VALUE(CAST(IFNULL(DISTINCT t0.c0, t0.c0) AS TEXT)) OVER () FROM t0 WHERE (((NULL) NOTNULL) COLLATE BINARY); -- 0ms;
SELECT ALL 'uD\n' FROM rt0, t0 WHERE (((((0xffffffff88fd56d8 COLLATE BINARY)OR(0.5138052398107451)))AND(((('xpZ	꣹')) BETWEEN ((NULL)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT NTILE((((((('419574388')-(rt0.c3)))AND(NULL)))AND((- (rt0.c0))))) OVER ( ORDER BY CAST(rt0.c4 AS NUMERIC)  NULLS LAST) FROM rt0;SELECT DISTINCT (((rt0.c4))<=((((NULL)/(rt0.c4))))) FROM t0, rt0; -- 1ms;
SELECT ALL ((((0.5641325339495116)OR(CAST(rt0.c1 AS TEXT))))OR(rt0.c0)) FROM rt0 GROUP BY ((((((rt0.c3)AND(t0.c15)))OR(rt0.c3))) NOT BETWEEN (((t0.c0)GLOB(rt0.c1))) AND (CASE rt0.c1  WHEN t0.c17 THEN rt0.c3 ELSE rt0.c2 END)) ORDER BY CAST(((rt0.c4)!=(t0.c15)) AS REAL), ((t0.c17)<(t0.c15)) COLLATE BINARY ASC;SELECT ALL NULL, ((((x'')>=(t0.c0))) NOTNULL), (- (COUNT(rt0.c0))) FROM rt0, t0 WHERE ((((~ (-462105204)))-(((('Mr?/#')) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT ((((rt0.c1)IS(t0.c0))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CAST(rt0.c1 AS INTEGER))) FROM rt0 WHERE ((((('-1566260970')||(0.6981917963547949))) IS TRUE)) ORDER BY t0.c15;SELECT DISTINCT ((t0.c0)<(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))) FROM t0, rt0 WHERE (((json_array(NULL, '-1074623748', 0.5392356938111142, NULL)) BETWEEN (0.6822933213055891) AND ((0Xdb80c10 IN ())))) ORDER BY (- ((rt0.c3 IN (rt0.c0, rt0.c2)))) DESC, (((rt0.c0) BETWEEN ('-950278760') AND (rt0.c1)) IN (LOWER(rt0.c2))) DESC  NULLS LAST, (((rt0.c0)) BETWEEN (((((rt0.c4, t0.c17, rt0.c1))<=((rt0.c0, t0.c17, t0.c0))))) AND ((CASE t0.c17  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN t0.c15 WHEN rt0.c3 THEN t0.c15 END))); -- 0ms;
SELECT AVG((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c2)))) OVER () FROM t0;SELECT DISTINCT SQLITE_VERSION() FROM t0, rt0 WHERE (CAST(x'' AS INTEGER) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (- (((rt0.c4) ISNULL))), (TOTAL(rt0.c0) IN (0.9333996986237749)), MIN(((rt0.c1)>(rt0.c2))), RANK() OVER (), CAST((t0.c15 IN ()) AS TEXT) FROM t0;SELECT ((((rt0.c3))<((t0.c0))) IN (2.3016552E8, -147229786 COLLATE BINARY)) FROM t0 WHERE (((((CASE '{SrBWPHq'  WHEN x'340f' THEN x'091d' WHEN '\radhK' THEN 'i\rm_' WHEN '-624588535' THEN -7.53978972E8 ELSE 0.34819523602593894 END)AND(-598470219 COLLATE NOCASE)))AND((('263750875')AND(NULL)))));SELECT DISTINCT ((CAST(rt0.c3 AS REAL)) NOT BETWEEN (UPPER(t0.c0)) AND (((((((((rt0.c0)OR(x'')))AND(rt0.c4)))AND(rt0.c4)))AND(t0.c17)))), HEX((((NULL)) NOT BETWEEN ((t0.c17)) AND ((rt0.c2)))), ((((t0.c17) IS TRUE))&(MIN(rt0.c2))), (((rt0.c0 IN (rt0.c1, rt0.c0))) IS FALSE), rt0.c1 FROM t0 WHERE (CAST(CASE NULL  WHEN x'c3d2' THEN 1117326035 END AS INTEGER));SELECT ALL rt0.c0 FROM t0;SELECT rt0.c0, (((((t0.c0))<((rt0.c1))))/(-4.93078892E8)), ((((t0.c15) IS TRUE)) NOT BETWEEN (((rt0.c0)-(rt0.c0))) AND (((((t0.c17)AND(rt0.c0)))OR(t0.c0)))) FROM rt0, t0; -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c17) AND (NULL))) IS TRUE) FROM t0, rt0; -- 0ms;
SELECT (((((rt0.c0) IS TRUE)))>=((((((rt0.c4)OR(rt0.c0)))OR(rt0.c4))))) FROM rt0 WHERE ((~ ((+ ('Z㬒(M7>'))))) GROUP BY rt0.c3 HAVING t0.c15 LIMIT 1905104752 OFFSET 486687110;