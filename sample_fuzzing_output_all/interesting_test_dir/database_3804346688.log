-- Time: 2024/06/07 00:31:57
-- Database: database88
-- Database version: 3.40.0
-- seed value: 3804346688
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 763); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'4297'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('-1701086009', x'') WHERE vt0.c0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE vt0 SET c0=x'' WHERE ''; -- 0ms;
END; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0, c0)=(0.17263284252796107, 0Xffffffff9a9b7cc7); -- 0ms;
PRAGMA temp.busy_timeout = 3313152221132995558; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.5249085673733451, 0.17263284252796107, '1302084142') WHERE (((NOT (vt0.c0))) BETWEEN (CAST(NULL AS NUMERIC)) AND (((vt0.c0)=(vt0.c0)))); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=x'' WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) IN ()); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT (((- (vt0.c0)))GLOB(ABS(vt0.c0))), (NOT (json_type(vt0.c0))), SUM(CAST(vt0.c0 AS TEXT)) OVER () FROM vt0 WHERE (CASE QUOTE('813241047')  WHEN x'' COLLATE RTRIM THEN (~ ('Y*P⚿_/Y')) END); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.994808430181931); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF DELETE ON v0 FOR EACH ROW  WHEN NULL BEGIN UPDATE OR ABORT vt0 SET c0=NULL, c0=x'';END; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL), (0.5249085673733451), (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.5249085673733451); -- 7ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL) WHERE x'7757'; -- 0ms;
VACUUM; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1234380479'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM vt0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(x'1317'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'974b'), (x'c871'), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(8.13241047E8) WHERE ((((vt0.c0) NOTNULL))>>(((((((((NULL)AND(vt0.c0)))OR('-1487649175')))AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7661598943692784; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.24020369679261144, 0.6664266317281539) WHERE LOWER((vt0.c0 IN ())); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
UPDATE vt0 SET (c0)=('-1839363100'); -- 1ms;
ANALYZE vt0; -- 0ms;
UPDATE vt0 SET (c0)=('2113676075'); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'db64'); -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=1506089456 WHERE (~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(0.29972973794817037)))OR(vt0.c0)))); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)<>(vt0.c0)) THEN SUM(vt0.c0) ELSE vt0.c0 END, ((COUNT(*))>(vt0.c0)), ((((((((((((vt0.c0)AND('-1487649175')))OR(vt0.c0)))AND('813241047')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE COLLATE BINARY FROM vt0 GROUP BY (vt0.c0 COLLATE BINARY IN (((2031012377)<(vt0.c0)), vt0.c0 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (0.5249085673733451 IN ()), ((((vt0.c0)>=(NULL))) BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)AND(vt0.c0)))AND('ifwi')))OR(vt0.c0)))OR(vt0.c0)))), MAX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ('#}#Ml'); -- 0ms;
SELECT ALL CUME_DIST() OVER (), ((((((((vt0.c0 COLLATE RTRIM)AND(8.13241047E8)))AND(x'' COLLATE RTRIM)))AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)/(vt0.c0)))>=(vt0.c0)), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS REAL))))AND(CAST(vt0.c0 AS BLOB))) FROM vt0 GROUP BY ((((NULLIF(vt0.c0, vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0X46ad5c76)); -- 0ms;
SELECT ALL ((TYPEOF(vt0.c0)) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ('2067057301')) FROM vt0 WHERE ((((0.9054543248675702 IN ()))==('1266039290' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT AVG(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0; -- 0ms;
SELECT ((((vt0.c0 COLLATE BINARY)AND(((vt0.c0)>(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT ALL TRIM(DISTINCT vt0.c0) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((((('1266039290'))>=((vt0.c0)))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ((vt0.c0 IN ()))) FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT)  NULLS FIRST, ((vt0.c0 COLLATE RTRIM) BETWEEN (CASE WHEN vt0.c0 THEN 0.9306418809353473 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST; -- 2ms;
SELECT DISTINCT CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c0)<=(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END, PERCENT_RANK() OVER (), ((vt0.c0) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN CAST(vt0.c0 AS REAL) ELSE (((x'c82b')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 WHERE (((((~ (x'cc36'))))=((0.019409369765465367)))); -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE NOCASE, ((vt0.c0)OR(vt0.c0)), CAST(vt0.c0 AS TEXT)))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), COUNT(vt0.c0), (NOT (vt0.c0))))) FROM vt0; -- 0ms;
SELECT (+ ('-1526230188')), AVG(NULL) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP), ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))))AND(((vt0.c0)||(vt0.c0)))))AND(((x'')=('-999782160')))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN ())), ((((((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS BLOB))))OR(vt0.c0 COLLATE BINARY)))OR((- (vt0.c0)))))AND(vt0.c0)), CAST(vt0.c0 AS TEXT), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE), (((vt0.c0)) NOT BETWEEN (((((vt0.c0))=((2067057301))))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 WHERE (((((x'') NOT BETWEEN (-1701086009) AND (NULL)))<>((('581-324 1788T1319T790T1240-674T432:-4804882823617823210 ') IS TRUE)))) LIMIT -1542915762; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS BLOB)  WHEN (((vt0.c0))<=((vt0.c0))) THEN ((vt0.c0)&(vt0.c0)) END FROM vt0 WHERE (load_extension(CASE WHEN NULL THEN 0.9471248730500416 ELSE x'' END));SELECT ALL SUM(((vt0.c0)OR(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.4375008178308273)) AS BLOB) FROM vt0 NOT INDEXED; -- 0ms;
SELECT MIN(CAST(vt0.c0 AS BLOB)) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 LIMIT 2113676075 OFFSET 49536758; -- 0ms;
SELECT ALL ((AVG(vt0.c0)) BETWEEN ('k섖ZjhKjX') AND (SUM(vt0.c0))) FROM vt0 GROUP BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) HAVING (((CAST(vt0.c0 AS REAL)))!=((((vt0.c0) BETWEEN (vt0.c0) AND (-320172294))))) ORDER BY (((x''))<>((((vt0.c0)||(x'')))))  NULLS FIRST LIMIT -666247386; -- 0ms;
SELECT TRIM(DISTINCT ((vt0.c0)==(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (('0.5249085673733451')) AND ((((vt0.c0)GLOB(vt0.c0))))) FROM vt0 WHERE (TYPEOF('') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LIKELY(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) FROM vt0; -- 0ms;
SELECT NTH_VALUE((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL), ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (0x5fb1ad96)))))OR((+ (vt0.c0))))) OVER ( ROWS 0.5249085673733451 PRECEDING EXCLUDE TIES) FROM vt0 GROUP BY ((((vt0.c0))>((vt0.c0))) IN ()), ((((((vt0.c0)/(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), vt0.c0 COLLATE BINARY, CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS BLOB) END, '1605479830';SELECT ALL CASE CAST(vt0.c0 AS INTEGER)  WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 END FROM vt0 WHERE ((- (load_extension('''Qlo^뉌6p9'))));SELECT ALL COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)AND(vt0.c0))))>((vt0.c0 COLLATE RTRIM))), NULL, (NOT (((vt0.c0)>(vt0.c0)))) FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1905913260' ELSE vt0.c0 END)-(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((SUM(vt0.c0)) IS FALSE) FROM vt0 WHERE (((CASE '!#'  WHEN NULL THEN NULL ELSE 0.007666658494353662 END) BETWEEN (NULL) AND (NULLIF(DISTINCT '1185766518', x'')))); -- 0ms;
SELECT DISTINCT COALESCE((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, 0.20517888701462128, vt0.c0))), ((vt0.c0) NOT NULL)) FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (SUM(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (~ (MAX(vt0.c0))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)-(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), CAST(MIN(vt0.c0) AS NUMERIC) FROM vt0 WHERE (((((- (NULL)), ('-1652027322' IN (1059988117)), (NULL IN ())))==(((('')-(-1551719712)), ((0.6912695787159276) ISNULL), MAX(NULL, NULL))))); -- 1ms;
SELECT (~ (SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT (((0.7106135715579943 IN ()))-(HEX('Y*P⚿_/Y'))) FROM vt0; -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT json_patch(((-821382445)>(vt0.c0)), vt0.c0) FROM vt0 WHERE (CASE ((x'')AND(0X7af5c7a5))  WHEN ((']장~') IS FALSE) THEN (x'' IN ()) ELSE ((x'') NOT BETWEEN (x'48d0') AND ('-1565643330')) END); -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE), ((json_array_length(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND ('%Jy4')))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS TEXT)) BETWEEN (x'') AND (((vt0.c0) NOTNULL))), COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt0; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT 0.16125582499747226 FROM vt0 WHERE (highlight(((x'') BETWEEN (0.7358831103217573) AND (890138415)), ('q5\T\n%L_' IN ()), (('2062927781')-(0.3243125918402169)), (NOT (0.22040558317214343))));SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((((((((((x'')OR(x'76d2')))AND(0xffffffff8f50fb23)))OR(-495222571)))OR(0.40081650975565997)))*(x'' COLLATE RTRIM))) LIMIT -144193958 OFFSET -495222571; -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), CAST((((0.6179468501956937, vt0.c0, '0.4375008178308273'))<=((vt0.c0, vt0.c0, vt0.c0))) AS BLOB), SUM('') OVER ( ROWS  UNBOUNDED PRECEDING), ROW_NUMBER() OVER ( PARTITION BY ((((vt0.c0)|(vt0.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))), vt0.c0, (~ (((vt0.c0)|(vt0.c0)))), ((-1.56564333E9)<=(((vt0.c0)>=(vt0.c0)))) GROUPS  CURRENT ROW), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0) NOTNULL))) FROM vt0 WHERE (x'') ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST, ((((vt0.c0 COLLATE BINARY)AND(vt0.c0 COLLATE BINARY)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(NULL) IN ()) FROM vt0; -- 0ms;
SELECT CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN '' WHEN (x'' IN ()) THEN COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN AVG(vt0.c0) THEN ((vt0.c0)<=(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN SUM(vt0.c0) THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) ELSE (- (vt0.c0)) END, NTH_VALUE(((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))AND('-1243303348')))OR(vt0.c0)))OR(vt0.c0)))))OR(x'')), ((CAST(vt0.c0 AS BLOB))/(vt0.c0 COLLATE BINARY))) OVER (), (- (NULL)) COLLATE NOCASE, COUNT((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE) OVER (), (((vt0.c0 IN ())) NOTNULL), IFNULL(LIKELY(vt0.c0), GLOB(vt0.c0, 0.3243125918402169)), ((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (((UPPER(-1.652027322E9))%((~ (x'06b8')))));SELECT ALL ((((vt0.c0)>=(vt0.c0))) IS TRUE), ROW_NUMBER() OVER (), (- (GROUP_CONCAT(vt0.c0))) FROM vt0 LIMIT -387614295; -- 0ms;
SELECT ALL TRIM(((vt0.c0)-(vt0.c0))) FROM vt0 GROUP BY (~ (((vt0.c0)LIKE(vt0.c0)))), (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '0.7106135715579943')) AND ((vt0.c0, vt0.c0, '')))) NOT NULL), CAST((NOT (vt0.c0)) AS BLOB) HAVING ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ('#}#Ml')); -- 1ms;
SELECT ALL MIN(((vt0.c0) IS FALSE)), DENSE_RANK() OVER (), (CASE WHEN vt0.c0 THEN vt0.c0 END IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT HEX(SUM(NULL)) FROM vt0 WHERE (-144193958) GROUP BY CAST(((vt0.c0) NOT NULL) AS REAL), (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<>((vt0.c0 COLLATE NOCASE))), CASE LIKELIHOOD(DISTINCT vt0.c0, 0.4178369754826007)  WHEN -1.44193958E8 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN (NOT (vt0.c0)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN NULL END THEN -1.890518237E9 ELSE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (('07', vt0.c0, vt0.c0, vt0.c0, 1121050136))) END; -- 0ms;
SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((((vt0.c0))>=((NULL))))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (load_extension(CASE WHEN NULL THEN '-950646877' ELSE NULL END));SELECT ALL ((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0) ISNULL))), ((((vt0.c0) ISNULL)) IS TRUE), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((((NULL)OR(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (((((((x'')&(0xaa06997)))OR(((((((((((((NULL)OR(x'')))AND(x'')))OR(1.185766518E9)))OR('1121050136')))AND('')))OR(-188880732)))))OR(x'' COLLATE NOCASE))) GROUP BY CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0))>(('n0', vt0.c0, vt0.c0))) ELSE vt0.c0 COLLATE NOCASE END HAVING ((((((((((0.3243125918402169)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(x'a347'))) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((((1674332356, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) ORDER BY (((((0.27483111000001903) NOT NULL), (vt0.c0 IN ()), (NOT (vt0.c0))))>=(((vt0.c0 IN ()), vt0.c0, vt0.c0 COLLATE BINARY))) DESC, ((NULL)IS((- (vt0.c0)))); -- 0ms;
SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (x'e396')))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(((vt0.c0)>=(vt0.c0)))), MAX(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), NTILE(((CAST(vt0.c0 AS INTEGER))>>(SQLITE_COMPILEOPTION_USED(vt0.c0)))) OVER () FROM vt0 WHERE ((NOT (CAST(0.26106402372261484 AS INTEGER)))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM  NULLS LAST, LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS FIRST, ((CASE vt0.c0  WHEN '	}' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)  NULLS LAST; -- 0ms;
SELECT ALL ((((((((((vt0.c0)IS NOT(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(GROUP_CONCAT(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC; -- 0ms;
SELECT ALL vt0.c0, vt0.c0 COLLATE NOCASE, json_remove(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '{f}' WHEN x'' THEN vt0.c0 END) FROM vt0 LIMIT -1565643330;SELECT DISTINCT COALESCE(TOTAL(vt0.c0), CAST('\78x3b⻉K' AS TEXT)) FROM vt0; -- 0ms;
SELECT ALL SUM(TRIM(vt0.c0, vt0.c0)) FROM vt0 WHERE (0.9725682308700654); -- 0ms;
SELECT CAST(vt0.c0 AS TEXT) FROM vt0 WHERE ((((NULL)<=(x'')) IN ((('5Oft}#)Mo')<=(x''))))); -- 0ms;
SELECT DISTINCT UPPER(vt0.c0 COLLATE NOCASE), vt0.c0, (~ (((vt0.c0)OR(vt0.c0)))) FROM vt0 ORDER BY json_type(0.14253367813656048) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT GLOB(vt0.c0, x''), MAX(vt0.c0)), vt0.c0, CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT (((IFNULL(vt0.c0, vt0.c0), SUM(vt0.c0), ((vt0.c0)<(vt0.c0))))!=((vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)=(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(x'') FROM vt0 WHERE (CAST(0.7070582199273293 AS REAL)); -- 0ms;
SELECT DISTINCT TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), ((vt0.c0 COLLATE NOCASE)<>(vt0.c0 COLLATE RTRIM)), LAG((vt0.c0 COLLATE RTRIM IN ()), '-188880732', LOWER(vt0.c0)) OVER ( ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((0.20517888701462128, vt0.c0, vt0.c0)))) NOTNULL) DESC  NULLS FIRST) FROM vt0 WHERE ((((('᳝0,T1愉T+')OR(NULL)))OR(((((NULL)OR(x'b029')))AND(NULL))))); -- 1ms;
SELECT DISTINCT (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), (+ (((vt0.c0) NOT NULL))), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT (+ (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((NOT (((95237008)&(x'1ad6'))))); -- 0ms;
SELECT DISTINCT json_array_length(((vt0.c0)GLOB(x''))), CAST(CASE vt0.c0  WHEN -1526230188 THEN vt0.c0 END AS INTEGER), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)>=(x'')) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((0Xffffffff974af2a0)IS(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN COUNT(vt0.c0) THEN ((0.22040558317214343)>=(vt0.c0)) ELSE json_type(vt0.c0) END FROM vt0 WHERE ('.q') GROUP BY (((vt0.c0 IN ()))GLOB(TYPEOF(vt0.c0))), ((0.1755273440199847)%(x'b511')) COLLATE RTRIM, TYPEOF(((vt0.c0)>(vt0.c0))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) IS FALSE) FROM vt0 LIMIT 2067057301; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS REAL) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)IS NOT(CAST(vt0.c0 AS INTEGER))), TOTAL(vt0.c0), ((CASE 'UH'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)*(NULLIF(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 2ms;
SELECT ALL ((((CAST(vt0.c0 AS TEXT))OR(x'')))AND((+ (vt0.c0)))) FROM vt0 LIMIT 1408628708; -- 0ms;
SELECT DISTINCT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0 WHERE ((+ ('-1910471544')) COLLATE BINARY); -- 1ms;
SELECT ALL (~ (vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x''))) FROM vt0 WHERE ((((0x1 COLLATE NOCASE))=(((- (NULL)))))) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE, 0.994808430181931 COLLATE BINARY, ((((vt0.c0 IN ())))>((CAST(vt0.c0 AS TEXT))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 WHERE ((((((((x'1c10', NULL, -188880732))=((NULL, NULL, '-919591721'))))OR((0.18662015252596886 IN ()))))AND(((x'') NOTNULL)))) GROUP BY '-1411496492'; -- 0ms;
SELECT x'' FROM vt0; -- 0ms;
SELECT ALL ((0.48555804792739865)|(vt0.c0 COLLATE NOCASE)) FROM vt0 LIMIT -1839363100 OFFSET 2077625959; -- 0ms;
SELECT LIKELY((~ (vt0.c0))), (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN x'' ELSE 1185766518 END)) AND (((vt0.c0 IN ())))), COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((0.8945694587474219)OR(((vt0.c0)&(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))), vt0.c0 COLLATE RTRIM, (((vt0.c0 IN ()))<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x7690fec9 THEN vt0.c0 ELSE vt0.c0 END)), CASE WHEN (vt0.c0 IN ()) THEN (('0.16125582499747226') NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))==((MAX(vt0.c0)))) FROM vt0 GROUP BY ((vt0.c0) NOTNULL) COLLATE NOCASE HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<>(0xd7a39f)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) IS TRUE), CASE ((vt0.c0)>>(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) IS FALSE) ELSE (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-1890518237', vt0.c0, vt0.c0, NULL))) END, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) FROM vt0 WHERE (((((x'' COLLATE RTRIM)OR((+ ('-1839363100')))))AND(0.12248800606791421))); -- 0ms;
SELECT ((CAST(vt0.c0 AS BLOB))<=(vt0.c0 COLLATE BINARY)), json_array((~ (vt0.c0)), vt0.c0 COLLATE NOCASE), (((- (vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL) FROM vt0 WHERE ((((((NULL))!=((0xffffffff8da40802)))) BETWEEN (((((0.8742379755224984)OR(NULL)))OR(''))) AND ((('')*(NULL))))); -- 1ms;
SELECT DISTINCT ((1266306177)&((((vt0.c0))>((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (json_array_length(vt0.c0, vt0.c0))), PERCENT_RANK() OVER (), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'f194')))) FROM vt0 WHERE ((((((x'', 'Cs', -436143244)) NOT BETWEEN ((NULL, 0.7070582199273293, x'')) AND ((NULL, 'qm\n/b1g){', '{k')))) NOT NULL)); -- 0ms;
SELECT DISTINCT LAG((~ (json_quote(vt0.c0))), vt0.c0 COLLATE BINARY, ((vt0.c0) ISNULL)) OVER () FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ((- ('-188880732')))) FROM vt0 WHERE (((((0.19207087431528913)) BETWEEN ((1.185766518E9)) AND ((x''))) IN ((((((((('')AND('-436143244')))OR(x'')))OR(x'')))OR('-491340057'))))); -- 0ms;
SELECT DISTINCT CAST(ABS(vt0.c0) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT((vt0.c0 IN (vt0.c0))) OVER () FROM vt0 GROUP BY ((((vt0.c0) NOTNULL))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(json_patch(0X2062db1c, vt0.c0) AS INTEGER), NULL, (~ (GLOB(vt0.c0, vt0.c0))), (+ ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0))))) HAVING CASE (((vt0.c0))<((vt0.c0)))  WHEN CAST(vt0.c0 AS TEXT) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END; -- 0ms;
SELECT ALL (('Si')<=(CAST(vt0.c0 AS INTEGER))) FROM vt0 GROUP BY CASE WHEN 0.8931757508055914 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0X63cc48c4, vt0.c0, vt0.c0))) WHEN NULL THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 COLLATE RTRIM END HAVING json_type(TOTAL(vt0.c0)); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(x'')))OR(MAX(vt0.c0))) FROM vt0 WHERE (((((-1.526230188E9) NOTNULL))IS NOT('-1565643330'))) ORDER BY (((vt0.c0)) BETWEEN ((((((-1881078825)OR('1121050136')))OR(vt0.c0)))) AND ((((vt0.c0)-(vt0.c0))))) ASC; -- 0ms;
SELECT DISTINCT (('XO') BETWEEN (-1549586743) AND (vt0.c0)) FROM vt0 WHERE ((((((0.011199909606954161, x'', 0.8759434323786969)) NOT BETWEEN ((465615380, x'', '-1205275808')) AND ((0.19207087431528913, 8.90138415E8, x''))))>((NOT (230635105))))) GROUP BY ((((vt0.c0)|(vt0.c0)))<<(((vt0.c0)||(vt0.c0)))) HAVING NULL; -- 0ms;
SELECT ((0.9790782886229714) IS TRUE) FROM vt0 WHERE ((+ ((((x'', NULL, 'Da)ᕚ')) BETWEEN ((NULL, 1.78284951E8, x'')) AND (('1594713784', x'bd6a', '-1342161991')))))) ORDER BY (((vt0.c0) IS TRUE) IN ())  NULLS FIRST LIMIT -1953143373; -- 0ms;
SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))=((CAST(vt0.c0 AS TEXT)))) FROM vt0 WHERE ((+ (x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 1ms;
SELECT DISTINCT CAST(((((((((vt0.c0)OR(vt0.c0)))AND('6?')))AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (UNLIKELY(((NULL)-(x'')))) LIMIT -1263998561; -- 0ms;
SELECT ALL 0x31edff36, ((vt0.c0 COLLATE RTRIM) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (COUNT(*))), LOWER(DISTINCT x'26b7') FROM vt0 GROUP BY (((((NOT (vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT NULL), ((((((vt0.c0) IS FALSE))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(UNLIKELY(DISTINCT vt0.c0))) HAVING CAST(TRIM(DISTINCT vt0.c0, vt0.c0) AS NUMERIC); -- 0ms;
SELECT 0xaf2b194, ((((vt0.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-999782160' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))), vt0.c0 FROM vt0 WHERE ((((x'ed2c')) NOT BETWEEN (((((NULL)) BETWEEN ((NULL)) AND ((0x42d1de18))))) AND ((CAST(NULL AS NUMERIC))))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT NULL) AS NUMERIC), COUNT(*) OVER (), ((TOTAL(vt0.c0)) ISNULL) FROM vt0 WHERE (((('w]￿')) BETWEEN (('H')) AND ((CAST(x'' AS NUMERIC))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)||(vt0.c0)))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.397204460735447))))*((- (vt0.c0)))) FROM vt0 GROUP BY 0.01207893808946836 HAVING ((CASE vt0.c0  WHEN 0Xfffffffff767c65a THEN vt0.c0 END)AND(((vt0.c0)|(vt0.c0)))) LIMIT 1578020137 OFFSET 1674332356; -- 0ms;
SELECT vt0.c0 FROM vt0 EXCEPT SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE ((((((NULL)*('0.01207893808946836'))))<=((((((((((0.14150484354964066)OR(x'')))OR(NULL)))OR(x'')))AND(NULL)))))) GROUP BY (- (((vt0.c0) IS FALSE))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, MIN(vt0.c0))) FROM vt0 WHERE (CASE WHEN ((0.397204460735447)GLOB(0.330646629289607)) THEN COALESCE(DISTINCT '1266306177', NULL) ELSE (~ (NULL)) END) ORDER BY ((((((NULL)!=(x'8b6a')))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((((vt0.c0))>((vt0.c0))), vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.7540269398530777 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.9729093219312209 THEN vt0.c0 ELSE vt0.c0 END))>=((CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ('0.8759434323786969' IN ())))) FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)))) AND (((~ (vt0.c0)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((((- (vt0.c0)))OR((NOT (vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(GROUP_CONCAT(vt0.c0))))OR(((vt0.c0)<>(vt0.c0)))) FROM vt0 WHERE ((((0.40081650975565997)) NOT BETWEEN ((((-1.652027322E9)>=(0.982169092218793)))) AND (((- (0.5125963666718428)))))); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)+(vt0.c0)) COLLATE RTRIM) OVER () FROM vt0 WHERE (0.9225394276136293) GROUP BY ((vt0.c0)AND(vt0.c0)) COLLATE BINARY; -- 0ms;
SELECT (((('P{')AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)), vt0.c0, ((vt0.c0) NOTNULL) COLLATE BINARY FROM vt0 WHERE ((CAST('2071933195' AS NUMERIC) IN (CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)LIKE(vt0.c0)))), (((vt0.c0)) BETWEEN ((((x'') IS TRUE))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 WHERE (CASE ((((0.12248800606791421)OR(0.6930344378299258)))AND(NULL))  WHEN (((('1506089456')OR('懞5_n')))OR('-1205275808')) THEN (((x'eb28'))>((NULL))) WHEN ('-320172294' IN ()) THEN ((NULL)IS NOT('1737001489')) WHEN (NULL IN ()) THEN (((((((('2\')AND(-1437558585)))OR(NULL)))AND(9.5237008E7)))OR(NULL)) ELSE (('-1587770301') NOT BETWEEN ('-144193958') AND ('1674332356')) END); -- 0ms;
SELECT DISTINCT LAST_VALUE(CASE WHEN ((('[q')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((vt0.c0) IS FALSE) END) OVER (), vt0.c0, (~ ((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((json_patch(vt0.c0, vt0.c0))%(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), (((((vt0.c0))!=((vt0.c0)))) IS FALSE), NULL, CAST((~ (vt0.c0)) AS NUMERIC), RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB), (((((- (vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(vt0.c0)) FROM vt0 WHERE (((((x'') IS FALSE))OR(((('6胃'))<(('-820168014')))))); -- 1ms;
SELECT ALL (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (COALESCE(DISTINCT ((((0.030213264415593244)AND(x'')))OR(x'')), (- (0.6695591938702822)))); -- 0ms;
SELECT (x'3ba2' COLLATE RTRIM IN ()) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ((((((((CAST(vt0.c0 AS NUMERIC))OR(((vt0.c0) IS TRUE))))AND(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ()))))OR((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) IS FALSE))%(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (CASE WHEN (('-390713536')-(-486212904)) THEN ((1989213897) IS FALSE) END); -- 0ms;
SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))AND((vt0.c0 IN ()))))AND(CAST('' AS TEXT))), CAST(((vt0.c0)>('183677332')) AS INTEGER), TRIM(vt0.c0, ABS(vt0.c0)) FROM vt0 WHERE ((- ('1674332356' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT vt0.c0, (- ((((vt0.c0))>=((vt0.c0))))), '-796460865' FROM vt0 ORDER BY LOWER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ASC; -- 0ms;
SELECT FIRST_VALUE(CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) END) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) IS FALSE))AND(((((((((((((vt0.c0)OR(0X1a5952f4)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR(vt0.c0 COLLATE NOCASE)))OR(x'')), SUM(((vt0.c0) NOTNULL)), CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN x'7de81c17' WHEN ((vt0.c0)/(vt0.c0)) THEN ((((vt0.c0)AND('696155663')))OR(vt0.c0)) WHEN (((vt0.c0))<=((x'68130303'))) THEN x'' COLLATE RTRIM WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) ELSE (((vt0.c0))<=((vt0.c0))) END FROM vt0 WHERE (((0.8594239949464068 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt0.c0 IN ())))<=((x'' COLLATE BINARY))) ASC LIMIT -1328362730 OFFSET -1429608042; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (0.01704122552293119 COLLATE BINARY) AND (((((((((0.8344083072732706)OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((CAST('593669457' AS INTEGER)) ISNULL) FROM vt0 WHERE (((((((x'')OR('')))OR(NULL))) NOT BETWEEN (((0.25753279323366185) IS TRUE)) AND ((('g)') BETWEEN (NULL) AND (1608979261))))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)%(x'')) AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL NTH_VALUE((((vt0.c0, x'', vt0.c0)) BETWEEN (('' COLLATE RTRIM, ((vt0.c0) IS FALSE), vt0.c0)) AND ((((vt0.c0) IS FALSE), ((vt0.c0)%(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), x'e6e1') OVER () FROM vt0 WHERE (((((NULL) BETWEEN (-4.36143244E8) AND ('|gKkP-jQ'))) BETWEEN (CAST(NULL AS REAL)) AND ((((0.8931757508055914, 0.44729975700173397, 0x773fed26)) BETWEEN ((NULL, x'', '1569187194')) AND ((x'', '*/+l|C', 0.18638148433614876)))))); -- 0ms;
SELECT ALL (('')<>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 GROUP BY 1895971939;SELECT DISTINCT (((- (vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(vt0.c0)))>=(COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT CASE WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN vt0.c0 END FROM vt0; -- 0ms;
SELECT DISTINCT UNLIKELY(0.5251604884329992), CAST(((vt0.c0) IS TRUE) AS BLOB), FIRST_VALUE(((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%('1506089456'))) OVER ( ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)=((- (vt0.c0))))  NULLS FIRST) FROM vt0 WHERE ((((NULL IN ()))%(((x'd37fa9ff')AND(x''))))); -- 0ms;
SELECT DISTINCT (- (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM vt0 WHERE (CASE (- (0X7c0a1125))  WHEN CAST(NULL AS NUMERIC) THEN CAST(2.113676075E9 AS INTEGER) END) ORDER BY ((((vt0.c0)<<(vt0.c0))) NOTNULL)  NULLS LAST; -- 0ms;
SELECT ((((vt0.c0 IN ())))>=((1439662170))) FROM vt0 WHERE ((((x'' IN ()))<((('c5S')<(0x7690fec9))))); -- 0ms;
SELECT ALL CAST(((vt0.c0)||(vt0.c0)) AS BLOB) FROM vt0 WHERE ((- (((-1.8393631E9)<(0.18662015252596886))))) ORDER BY (~ (((vt0.c0)<=(0x5ad3390)))) DESC, ((CAST(vt0.c0 AS BLOB))<<((~ (vt0.c0))))  NULLS FIRST; -- 1ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY, (+ ((vt0.c0 IN (vt0.c0, x'')))), LAST_VALUE(((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) OVER () FROM vt0; -- 0ms;
SELECT (- ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT LAG(CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE ((NULL) NOTNULL) END, ((LOWER(vt0.c0))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) OVER () FROM vt0 LIMIT -746175237; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL))>(vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, 0.9126052987529061))=((vt0.c0, vt0.c0, vt0.c0))))>(SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT '', CASE TOTAL(vt0.c0)  WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN GROUP_CONCAT(vt0.c0) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ()) ELSE TOTAL(vt0.c0) END, ((((NULL)&(vt0.c0)))<(CAST(vt0.c0 AS REAL))), (+ (x'7bb8')), (((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (LIKELY(DISTINCT ((x'') BETWEEN (NULL) AND (0.25910799653940586)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.0642646933242631 END) NOT BETWEEN (vt0.c0) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE '833264234'  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (~ (vt0.c0)) END FROM vt0 WHERE (((((((((((((0.5251604884329992)AND(930828845)))AND(0.24159352034145087)))OR(x'')))AND('2031012377')))AND(((0.330646629289607)&(x'')))))OR(-1.701086009E9 COLLATE RTRIM))) ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN 0xffffffff9080aaff WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END), ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (x'5bc3') AND (vt0.c0))  NULLS FIRST; -- 0ms;
SELECT 1.989213897E9, CAST(((vt0.c0)*(vt0.c0)) AS REAL), UNLIKELY(((((((((x'')AND(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0))) FROM vt0 WHERE (((((0.32920454470485616) BETWEEN (NULL) AND (NULL))) IS FALSE)) LIMIT -112040446; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (MAX(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 LIMIT -718934735 OFFSET -1231863128; -- 0ms;
SELECT COUNT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER () FROM vt0 WHERE (((((NULL) NOT NULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT (~ (MIN(vt0.c0))) FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))IS NOT((((vt0.c0))<((vt0.c0))))) ASC, ((((x'')AND((vt0.c0 IN ()))))AND(rtreenode(vt0.c0, NULL))) DESC, (((CAST(vt0.c0 AS REAL)))=((((NULL) ISNULL))));SELECT DISTINCT CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT 0.8489297452985328, CASE WHEN 0.12017591213713585 THEN (((vt0.c0))==((vt0.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(0.7153047622344046)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 LIMIT -1863233995 OFFSET -1849950619; -- 0ms;
SELECT DISTINCT 0x307912d7 FROM vt0 GROUP BY (vt0.c0 IN ()), '-1551719712', (((- (vt0.c0))) IS TRUE) HAVING ((((((2146476616) ISNULL))OR(((('-390713536')) NOT BETWEEN ((NULL)) AND ((0.9404819059121519))))))OR((NOT (vt0.c0)))); -- 0ms;
SELECT DISTINCT (- ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(NULL))) NOT BETWEEN (COUNT(*)) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), AVG(DATETIME(vt0.c0, 0.9008269246691619, vt0.c0)), PERCENT_RANK() OVER () FROM vt0 GROUP BY ((((((((vt0.c0)OR(((vt0.c0)>=(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR('')))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING CAST(((vt0.c0)IS(vt0.c0)) AS BLOB); -- 1ms;
SELECT COUNT(*), vt0.c0, ((((vt0.c0) ISNULL)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN x'' END) AND (((vt0.c0)<=(vt0.c0)))) FROM vt0 WHERE (CASE ((NULL)||(0X1007a9dd))  WHEN (NULL IN ()) THEN (((0.8408970879455251))>((x'335e'))) ELSE CAST('1674332356' AS NUMERIC) END); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(NULL)))AND(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL)))) FROM vt0 WHERE (((NULL)<((~ ('2143058805'))))) ORDER BY CAST(((vt0.c0)LIKE(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), TOTAL_CHANGES(), vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)%('')), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('178284951')))OR('')), (+ (vt0.c0)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(((x'')IS NOT('0.7106135715579943'))) FILTER(WHERE ((((NULL)>=(vt0.c0)))<=(((vt0.c0) IS TRUE)))) OVER ( ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC) DESC  NULLS FIRST, x''), (((((~ (vt0.c0)))AND((('')/(vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(TRIM(DISTINCT NULL, '9<(l'))) FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (0.01207893808946836) AND (((vt0.c0)IS NOT(vt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)<<(vt0.c0)) AS NUMERIC) FROM vt0 WHERE (((((((((CASE '2066301585'  WHEN NULL THEN NULL END)AND((('-1910471544') NOTNULL))))OR((NULL IN ('i()dO')))))OR((+ (NULL)))))AND(x''))); -- 0ms;
SELECT ALL json_array_length((vt0.c0 IN ())), vt0.c0, (((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((NULL)%(vt0.c0)) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT (- ('11e500000e500000')) FROM vt0; -- 1ms;
SELECT (~ ((((('6⚿u|}⊕')OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN '' WHEN '-964537148' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC; -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c0))*(0.7153047622344046)), ((json_quote(vt0.c0))=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))) FROM vt0 ORDER BY ((vt0.c0)!=(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST; -- 0ms;
SELECT (('0.12017591213713585') BETWEEN ((- (vt0.c0))) AND (NULL)), MIN((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 0.4797457048350775)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0Xffffffff9047b38f, vt0.c0, vt0.c0)))), ABS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((((((((NULL)OR(x'490b')))OR(x'')))OR((('-1842913015') BETWEEN ('-351340886') AND ('')))))OR(((0.6572420081043796)LIKE(0.1684731262817244))))); -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))OR((~ (vt0.c0)))) FROM vt0 WHERE (COALESCE(CASE 1313415404  WHEN NULL THEN NULL WHEN '402409476' THEN '' WHEN 0.397204460735447 THEN -1526230188 WHEN 0.1323844251984061 THEN 'ᐵ5v&驪' WHEN '173081639' THEN '' END, UPPER(-1193878031))) ORDER BY (('') BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (TOTAL_CHANGES())); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>=(vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((LOWER(vt0.c0))) AND ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((~ (vt0.c0)))), 0.29898828785984466 FROM vt0; -- 0ms;
SELECT DISTINCT LAG((((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), (- (((vt0.c0)IS NOT(vt0.c0)))), (((((~ (vt0.c0)))AND((((vt0.c0))!=((vt0.c0))))))OR(x'863c'))) OVER (), ((((vt0.c0)+(vt0.c0)))>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (-1.526230188E9)))), ((vt0.c0)<<(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CASE WHEN ((x'') ISNULL) THEN x'' END); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS TEXT) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)<=(CAST(vt0.c0 AS REAL))) FROM vt0 WHERE (UNLIKELY((~ ('-666247386')))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))<=(CAST(vt0.c0 AS REAL))) FROM vt0 WHERE ((((- ('1608979261')))<>(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS REAL) FROM vt0 WHERE (((CASE x''  WHEN '-1565643330' THEN '-495222571' ELSE NULL END)+((0.444479268796086 IN (1288262129, 'QYl\rワlS+~'))))); -- 1ms;
SELECT ALL CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) END FROM vt0 WHERE ((+ ((('-1088506197') NOT BETWEEN (0X5d87e57a) AND (x''))))); -- 0ms;
SELECT ALL ((((((((SQLITE_VERSION())AND(MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND(AVG(vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT '982577715' FROM vt0 WHERE (UPPER(((x'') NOT BETWEEN (0.8642398786372248) AND (x'')))); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 END FROM vt0; -- 0ms;
SELECT (~ (1.266306177E9)), TOTAL(CAST(vt0.c0 AS INTEGER) COLLATE BINARY) OVER (), (((vt0.c0 IN ()))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE vt0.c0  WHEN x'e9bb' THEN vt0.c0 ELSE vt0.c0 END) IS FALSE), (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))==(((vt0.c0 IN (vt0.c0))))) FROM vt0 WHERE (((('	', (~ ('?(')), TYPEOF(x'')))<=(((('564193657')-('07')), (('07')>(-950646877)), (('-1701086009')==('?Gbe?րq')))))); -- 0ms;
SELECT DISTINCT ((~ (vt0.c0)) IN ()) FROM vt0 LIMIT -1559547875 OFFSET -620778520; -- 0ms;
SELECT DISTINCT (('1r') NOTNULL) FROM vt0 WHERE ((((NULL)) BETWEEN ((('qm\n/b1g){' IN ()))) AND ((IFNULL(0.09027646275779977, '-540701063'))))) ORDER BY ((((vt0.c0)AND(0.4261577641967341)))OR(vt0.c0)) COLLATE NOCASE  NULLS LAST, (- (CAST(vt0.c0 AS INTEGER))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS REAL)) FROM vt0 WHERE (((CASE 0x1dc9853f  WHEN 'jDy\rz' THEN '' WHEN 0.982169092218793 THEN -357858034 WHEN NULL THEN NULL END)||(-1.44193958E8))) GROUP BY (((vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((IFNULL(vt0.c0, vt0.c0)))); -- 0ms;
SELECT ALL CAST(CAST(vt0.c0 AS BLOB) AS BLOB) FROM vt0 NOT INDEXED WHERE (1.569187194E9); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 WHERE (LOWER(DISTINCT NULL)); -- 1ms;
SELECT DISTINCT SUM(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 WHERE ((('993642349') NOT NULL) COLLATE RTRIM); -- 0ms;
SELECT ALL 595615773 FROM vt0 WHERE (((((-796460865) BETWEEN (0.787210797524294) AND (0.3747172532983165)))IS((((('')OR('696155663')))AND('833264234'))))); -- 0ms;
SELECT DISTINCT ((0.01207893808946836)-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((NULL)IS NOT(NULL)) COLLATE NOCASE); -- 0ms;
SELECT SUM(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN 'now' THEN vt0.c0 END) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)||(vt0.c0)) FROM vt0 WHERE (((((NULL)>=('1267537242'))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('')))LIKE(((vt0.c0)LIKE(vt0.c0)))), (+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (+ (vt0.c0)) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT TYPEOF((NOT (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((- (vt0.c0)))+(NULL COLLATE RTRIM)) FROM vt0 WHERE (((((x'') NOT NULL)) NOT BETWEEN ((((((((('')OR('-188880732')))AND(0.20517888701462128)))AND('Fv')))AND(x''))) AND ((NULL IN ())))); -- 0ms;
SELECT ALL CASE vt0.c0  WHEN 1.506089456E9 THEN vt0.c0 WHEN vt0.c0 THEN 0.8138081843371708 WHEN vt0.c0 THEN vt0.c0 WHEN 'pA' THEN vt0.c0 WHEN x'' THEN vt0.c0 END COLLATE NOCASE FROM vt0 WHERE (MIN('0.18662015252596886', '07') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT json_object(vt0.c0, vt0.c0) COLLATE RTRIM FROM vt0 LIMIT -1299794952;SELECT DISTINCT CASE (((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0)))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0, '-787811539', vt0.c0))>=((vt0.c0, 0.7361130593220145, vt0.c0))) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY ELSE (-486212904 IN ()) END, vt0.c0, CASE WHEN UPPER(vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE CASE WHEN vt0.c0 THEN '-1016859636' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0 WHERE (((((('C%kZ')) BETWEEN ((x'')) AND ((x'')))) IS TRUE)); -- 1ms;
SELECT COUNT(*), TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), vt0.c0 FROM vt0 WHERE (LIKE(((('-1851231746', x'e497', 1302084142))<>((-1231863128, '879935766', 0xfffffffff767c65a))), ((x'')||(0.06523088697854273)))); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((~ (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE NOCASE)), ((vt0.c0 IN ()) IN ()), ROW_NUMBER() OVER (), (- (AVG(vt0.c0))) FROM vt0 WHERE (CASE CHANGES()  WHEN (('417891494') ISNULL) THEN 0X5862c49c ELSE (((('-1263998561')AND(0.18638148433614876)))OR(0.24970854964098066)) END) GROUP BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC) HAVING COUNT(((vt0.c0)>>(vt0.c0))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'e347')))OR(SUM(vt0.c0))), TOTAL((((vt0.c0))<((vt0.c0)))), SUM(UPPER(DISTINCT '')) FROM vt0 LIMIT -1467482660; -- 0ms;
SELECT DISTINCT vt0.c0, (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.4480191983812756 ELSE vt0.c0 END IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(0.7145648309546933)))), AVG(vt0.c0) FROM vt0 WHERE (CAST(COALESCE('2067057301', x'8a5d') AS INTEGER)); -- 0ms;
SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE), CASE WHEN CAST(vt0.c0 AS REAL) THEN ((x'')>>(vt0.c0)) END, vt0.c0, (((vt0.c0)==(vt0.c0)) IN (SUM(vt0.c0), (((vt0.c0))>=((vt0.c0))))), '1605479830' FROM vt0 WHERE ((((2000678182) BETWEEN (0.8736549412650064) AND (NULL)) IN ())); -- 0ms;
SELECT ALL NULLIF(vt0.c0, vt0.c0) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT PRINTF(((((0.22156874665501647)OR(vt0.c0)))OR(vt0.c0))) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT MIN(((((vt0.c0)OR(0.8978367620235908)))AND(vt0.c0))), (~ (vt0.c0 COLLATE NOCASE)), COUNT(*), NULL, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE) FROM vt0 WHERE (CASE (('n0')<<('zX'))  WHEN ((((0.030213264415593244)AND('1112002427')))OR(0.9422315901251016)) THEN (NOT (0.7230956363824208)) ELSE CASE '0.8642398786372248'  WHEN NULL THEN '죳!*oYvV' WHEN 0.35678102588852745 THEN x'' WHEN '-2040953602' THEN '1989213897' END END) LIMIT -1342161991; -- 0ms;
SELECT DISTINCT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((('1940584025')<>(vt0.c0)))) FROM vt0 WHERE (((((NULL)>>(x'4185')))LIKE((1506089456 IN ())))) GROUP BY ((((((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)==(vt0.c0)))))OR(vt0.c0)), ((((UPPER(vt0.c0))OR((~ (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))), ((((vt0.c0) IS FALSE)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))), ((NULL) IS TRUE), (~ (((vt0.c0)<(vt0.c0)))); -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE)>>(GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE (CAST(CASE WHEN x'' THEN '149840082' END AS REAL)); -- 0ms;
SELECT TOTAL(((vt0.c0)!=(vt0.c0))) FROM vt0 WHERE (LOWER((((0xffffffffb828f360)) BETWEEN ((0.7540269398530777)) AND ((x'd9ad'))))); -- 0ms;
SELECT DISTINCT (~ (SUM(vt0.c0))) FROM vt0 WHERE (((((0.6604004360211515)>(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)==(vt0.c0)))) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((('1506089456'))<(('106688523'))))) GROUP BY (((vt0.c0 IN ()))||(((vt0.c0)!=(vt0.c0)))) ORDER BY ((CASE WHEN '' THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((((vt0.c0))=((vt0.c0))))) ASC; -- 0ms;
SELECT ALL (((x'2a9f', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE FROM vt0 WHERE (ABS(0.4797457048350775 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS REAL)), vt0.c0, PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT NTILE(0.4063389006986009) OVER () FROM vt0 WHERE (0.3426029329023257);SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY FROM vt0; -- 1ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(x'')), vt0.c0, (NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN ((('07')>=(0.8736549412650064))) AND ((0x48e5c4cc IN ())))); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY COLLATE RTRIM FROM vt0 ORDER BY UPPER(DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))  NULLS FIRST, vt0.c0 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((vt0.c0)<=(vt0.c0)) IN ()), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE), ((((vt0.c0)AND(vt0.c0))) BETWEEN (((x'81ab') IS TRUE)) AND (((vt0.c0) NOTNULL))) FROM vt0 WHERE (((CASE x''  WHEN 0X19ae678e THEN 0.3340203937152749 END) NOT NULL)); -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) FROM vt0 WHERE (CAST(((x'') NOT NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((((((((1564738186 IN ()))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)&(vt0.c0)))))OR(vt0.c0)))AND(CASE vt0.c0  WHEN NULL THEN vt0.c0 END)), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0))), (((vt0.c0)) BETWEEN (('')) AND (((- (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT 0X71023c63 FROM vt0 WHERE (HEX(DISTINCT x'')); -- 0ms;
SELECT DISTINCT MAX((((((((('401413199')AND(1.059988117E9)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN UPPER(vt0.c0) THEN vt0.c0 WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS REAL) WHEN GROUP_CONCAT(0.33742201625737045) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN NULL THEN (vt0.c0 IN (vt0.c0)) WHEN (((57663197, vt0.c0, vt0.c0))=((x'dd2f', vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)&(vt0.c0)) END FROM vt0 WHERE ((((0.4615137964263698))<=(('NG')))); -- 0ms;
SELECT ALL (((NOT (x'f8330f0a')))>(((NULL) NOT BETWEEN (vt0.c0) AND ('1266039290')))), COUNT(CAST(vt0.c0 AS TEXT)) FILTER(WHERE CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) OVER ( ORDER BY TRIM(((vt0.c0) BETWEEN (vt0.c0) AND ('')))), ((((vt0.c0) NOTNULL)) NOT NULL) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL CASE MAX(vt0.c0)  WHEN ((vt0.c0) ISNULL) THEN vt0.c0 COLLATE RTRIM END FROM vt0 WHERE (((((CASE WHEN NULL THEN NULL END)OR(((0.44641491137822453) ISNULL))))OR(DATE(-1652027322, NULL, 'Brx+)Hj)', '', '8䙩,cn')))) GROUP BY ((((vt0.c0) IS FALSE)) NOTNULL) HAVING (~ (CAST(0.976968085457699 AS INTEGER))) ORDER BY (((((vt0.c0))>=((vt0.c0)))) ISNULL); -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS INTEGER) IN (CAST(vt0.c0 AS REAL))), vt0.c0, (CASE vt0.c0  WHEN vt0.c0 THEN '0.4261577641967341' END IN ()) FROM vt0 WHERE (((((NULL)OR(-2.51559741E8)))OR(0.40508704515781224)) COLLATE RTRIM) GROUP BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', (((vt0.c0))==((vt0.c0))), 0.967609340339922)) AND (((vt0.c0 IN ()), vt0.c0 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY, 0xffffffff86bbcc71 HAVING CAST((((0.7078565426136245))>=((vt0.c0))) AS REAL); -- 0ms;
SELECT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((((0.27483111000001903) NOT BETWEEN ('NG') AND ('178284951')))+(0.12936378563918138))) ORDER BY (((((((((((vt0.c0, 0x4eb38347, 0.6912695787159276)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0Xffffffffe9cf1a39))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) ISNULL))))OR((- (vt0.c0)))))OR(((vt0.c0)AND(vt0.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT JULIANDAY(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE, TRIM(((593669457) IS TRUE), ((vt0.c0)IS(vt0.c0))), TOTAL(((vt0.c0) IS TRUE)) FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(CAST(vt0.c0 AS INTEGER)) FROM vt0; -- 0ms;
SELECT CAST(CAST(vt0.c0 AS INTEGER) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL (+ (COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((((x'a4c6')OR(vt0.c0)))OR(NULL)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (((0.32046102874595805)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((vt0.c0 COLLATE RTRIM))), (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=(((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))), (((('')AND((+ (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (CAST('61166505' COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT ALL (((- (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((x'')-(vt0.c0)))) FROM vt0 GROUP BY (~ ((+ (vt0.c0)))); -- 0ms;
SELECT DISTINCT NTH_VALUE(CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB), vt0.c0) OVER (), (~ ((vt0.c0 IN (vt0.c0)))), COUNT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 ORDER BY (NOT (UPPER(DISTINCT vt0.c0))) DESC, '' ASC  NULLS FIRST; -- 0ms;
SELECT ALL UPPER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), MAX(COUNT(*)), vt0.c0 COLLATE NOCASE FROM vt0;SELECT DISTINCT (('') NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (vt0.c0 COLLATE BINARY)) FROM vt0 ORDER BY ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>=(vt0.c0)))))AND(x'')))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))OR('-1910471544')) ASC, (~ (vt0.c0 COLLATE RTRIM)), (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(x'6e9a')))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))); -- 0ms;
SELECT (vt0.c0 IN ()) COLLATE NOCASE FROM vt0 WHERE (((((((0.48763078833494244) NOT NULL))OR(0.6971293071654456)))OR(CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.6481758228755382) FROM vt0; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)IS(vt0.c0)), ((vt0.c0)*(vt0.c0)), 1.83677332E8)) AND ((LOWER(vt0.c0), '680992881', ((vt0.c0)<<(vt0.c0))))) FROM vt0 WHERE (CASE ((NULL)%('1389982619'))  WHEN (('-1')IS NOT(NULL)) THEN ((NULL)%(NULL)) ELSE NULL END); -- 0ms;
SELECT ALL TIME(((vt0.c0)IS NOT(vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)), COUNT(*)) FROM vt0 WHERE ((((('8W'))>=((0.7422397707131165))) IN ())); -- 0ms;
SELECT ALL TYPEOF((((vt0.c0))>=((vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(CAST(vt0.c0 AS TEXT)) FROM vt0 NOT INDEXED WHERE (((x'ccca' COLLATE NOCASE)*('1594713784' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((vt0.c0)GLOB(vt0.c0)) IN (0.9305906922150862)) FROM vt0 WHERE (((((x'')==(NULL))) BETWEEN (((0.9414260439145375) NOT BETWEEN ('178284951') AND (-2006986564))) AND (((0.6552317939675609) BETWEEN ('-746175237') AND (0.8504162841059499))))); -- 1ms;
SELECT (0X1006e5eb IN (vt0.c0, vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((('957643462') IS TRUE) IN ())); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (vt0.c0) AND (COUNT(*))), MAX((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-1587770301', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))), ((('-1119310174')) NOT BETWEEN ((((vt0.c0)=(vt0.c0)))) AND ((TOTAL(vt0.c0)))) FROM vt0 WHERE (NULL COLLATE RTRIM); -- 0ms;
SELECT LOWER(vt0.c0), COUNT(x'8006') OVER (), TOTAL(vt0.c0) FROM vt0 WHERE (CAST(((x'') IS TRUE) AS REAL)) LIMIT 899274153 OFFSET -2059358287; -- 0ms;
SELECT DISTINCT ((0.6535035451480603)>=(load_extension(vt0.c0, vt0.c0))), (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((('-1082427521'))<((vt0.c0)))) NOTNULL) FROM vt0;SELECT 0.9112215475404106, ((5.93669457E8) ISNULL), (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), UNLIKELY(vt0.c0), (- (vt0.c0)), CAST(vt0.c0 AS REAL), UPPER(DISTINCT vt0.c0)))<>(((vt0.c0 IN ()), CAST(vt0.c0 AS TEXT), ((vt0.c0)LIKE(vt0.c0)), (((vt0.c0))=((vt0.c0))), ((vt0.c0) IS FALSE)))) FROM vt0 WHERE (((CASE WHEN 'pA' THEN 0x5f9fb62c WHEN 0xffffffffe21821eb THEN '0.29972973794817037' WHEN NULL THEN '' ELSE x'' END) BETWEEN ((1.7976931348623157E308 IN ('I'))) AND ((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.5287220677309279, vt0.c0, vt0.c0)) AND ((0.5475440119196986, vt0.c0, vt0.c0))), CAST(-1101908471 AS NUMERIC), (- (vt0.c0))))=((vt0.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (((('930828845')|(0.6743406848482814)) IN ())); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT 'NsY]\nO]', COUNT(*)) FROM vt0 WHERE (((((x'') IS FALSE)) NOT BETWEEN (((x'') ISNULL)) AND (((NULL)LIKE('930828845'))))) GROUP BY ((CASE vt0.c0  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)>>(((vt0.c0) IS TRUE))) HAVING CASE ((vt0.c0) BETWEEN ('-1526230188') AND (vt0.c0))  WHEN ((vt0.c0)|(vt0.c0)) THEN MIN(vt0.c0) ELSE x'' END LIMIT 1723779041; -- 0ms;
SELECT DISTINCT ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((UPPER(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0)), ((vt0.c0)GLOB(NULL COLLATE NOCASE)) FROM vt0 LIMIT 2031956254 OFFSET -1342161991; -- 1ms;
SELECT ALL (((vt0.c0 IN ())) ISNULL), ((vt0.c0)+(LIKELIHOOD(vt0.c0, 0.06821376319667594))), COUNT(*) FROM vt0; -- 0ms;
SELECT CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE UNLIKELY(vt0.c0) END FROM vt0 WHERE (((UPPER(NULL)) BETWEEN (((x'f8b3')<=('1296505396'))) AND (CASE '(렢?*Mt'  WHEN '-1249107274' THEN x'89a6' END))); -- 0ms;
SELECT DISTINCT (((- (vt0.c0)))AND(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))>=(GROUP_CONCAT(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((((0xae59bf6)LIKE(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (LOWER(DISTINCT vt0.c0))), (((NOT (vt0.c0))) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (TYPEOF(1323790831))), TRIM(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FROM vt0; -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(json_patch(vt0.c0, vt0.c0)), CAST(CAST(vt0.c0 AS TEXT) AS INTEGER), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (x'')) FROM vt0 WHERE (UNLIKELY(DISTINCT x'' COLLATE RTRIM)) LIMIT 2031012377 OFFSET 1905913260; -- 0ms;
SELECT ALL ((((((((((vt0.c0)||(')A')))AND(((vt0.c0)<(vt0.c0)))))AND(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(LIKE(vt0.c0, vt0.c0))) FROM vt0 WHERE (((CAST(0.4390227544824489 AS REAL))IS NOT(NULL))); -- 0ms;
SELECT ALL (((((vt0.c0))>=((vt0.c0)))) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((((x''))>((x''))))) AND ((vt0.c0 COLLATE RTRIM))), TOTAL(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END), (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0))), NTH_VALUE(0X78ace996, vt0.c0) OVER (), COALESCE(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)AND(vt0.c0))) FROM vt0 WHERE ((- (x''))) LIMIT -1693894235 OFFSET -1839363100;SELECT ALL CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0)<=(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (((vt0.c0))<((vt0.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE ((~ (CAST(0.939355203777938 AS NUMERIC)))); -- 0ms;
SELECT ALL CASE WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN (- (vt0.c0)) WHEN CASE vt0.c0  WHEN -1118408073 THEN vt0.c0 END THEN SQLITE_VERSION() WHEN (vt0.c0 IN ()) THEN AVG(vt0.c0) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(x'b309')) END FROM vt0 LIMIT -432317421; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT CASE WHEN (+ (vt0.c0)) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) END, ROUND(TOTAL(vt0.c0), vt0.c0), ((((((((((((((vt0.c0)&(vt0.c0)))OR(-3.87614295E8)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))AND(CHAR(0.5476095128676709))))AND((((vt0.c0))==((vt0.c0))))))OR(GROUP_CONCAT(vt0.c0))))OR(vt0.c0)) FROM vt0 WHERE ((+ (((0.5742096606016379)!=('2077625959'))))); -- 0ms;
SELECT ALL LIKELY(DISTINCT (vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT ALL CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE FROM vt0 ORDER BY TRIM(((x'')%(vt0.c0))) DESC, UNLIKELY(DISTINCT (((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT UNLIKELY((- (vt0.c0))) FROM vt0 GROUP BY ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE, ((((vt0.c0)>(vt0.c0))) BETWEEN (ABS(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NOT (((vt0.c0)==(vt0.c0)))) HAVING MAX((((vt0.c0))>=((vt0.c0)))); -- 0ms;
SELECT DISTINCT (+ ((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL HEX(DISTINCT x'') FROM vt0 WHERE (((x'0885') NOT NULL) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (('-390713536'))) FROM vt0 GROUP BY ((vt0.c0)+(vt0.c0)), ((((((((CAST(vt0.c0 AS INTEGER))OR(CASE WHEN NULL THEN vt0.c0 END)))AND((((-1.551719712E9, 'Y', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt0.c0)))), (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.3193014931037287))))OR((+ (vt0.c0)))); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)) AND ((((vt0.c0) NOTNULL)))), NULL, 0.22156874665501647 FROM vt0 LIMIT 853027185 OFFSET 607648192; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)) OVER ( ORDER BY NULLIF(vt0.c0 COLLATE BINARY, ((vt0.c0)|(vt0.c0)))  NULLS LAST) FROM vt0 WHERE (((GLOB(x'', 0.45921246396271365)) NOT BETWEEN ((-331453239 IN ())) AND ((((('N8 ')AND(x'')))OR(0Xffffffff984d0df3))))) GROUP BY (~ (UNICODE(vt0.c0))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c0))) ISNULL), (- (vt0.c0)) COLLATE BINARY, CAST(vt0.c0 AS INTEGER), CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS INTEGER), ((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0) IS FALSE)) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (((((x'd8f9') BETWEEN (x'f080') AND ('-1842913015'))) BETWEEN ((0.21491848962760862 IN (0.8697971100808748))) AND (((0.8736549412650064)||(NULL))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0))&(vt0.c0)), SUM(CAST(vt0.c0 AS BLOB)), COUNT(*) OVER ( ROWS BETWEEN  CURRENT ROW AND ((DATETIME(vt0.c0, vt0.c0, vt0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)>=(vt0.c0)))) FOLLOWING) FROM vt0 WHERE (CASE WHEN ((0.5220279985748169)||(x'9c34')) THEN ((NULL) IS TRUE) WHEN ((2042319217) NOT BETWEEN ('X}鯕a') AND ('~q')) THEN CASE WHEN '1196276808' THEN x'0449' ELSE 0.9498827109935783 END WHEN CAST(0.3809021633887286 AS NUMERIC) THEN '696155663' COLLATE RTRIM ELSE CASE 0.49376388407791494  WHEN '837680950' THEN NULL END END);SELECT TYPEOF(((vt0.c0)*(vt0.c0))) FROM vt0 WHERE ((((NOT (x''))) BETWEEN (CAST(NULL AS NUMERIC)) AND (((((((((x'')OR('H')))AND(x'')))OR(0Xffffffffc75647a3)))AND(1.60547983E9))))); -- 0ms;
SELECT ((((((((vt0.c0 COLLATE RTRIM)OR(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((vt0.c0)AND(0.18923930165940184)))AND('>){zOJ')))))AND(MAX('Bgc'))) FROM vt0 WHERE ((((((0.7791826571066538))=((0.4116110272158632)))) NOT BETWEEN (NULL) AND ((NULL IN ())))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(1.267537242E9, 0.0907908344828956)))); -- 0ms;
SELECT (SQLITE_VERSION() IN ()), (- ((vt0.c0 IN ()))), (((((('')>('-1684828930')))AND(COUNT(vt0.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CASE WHEN '-1429608042' THEN '0.24020369679261144' ELSE ((x'')>('0.35678102588852745')) END); -- 0ms;
SELECT ((((LTRIM(vt0.c0, NULL))OR((- (vt0.c0)))))OR((((vt0.c0))>=((-7.18934735E8))))) FROM vt0 ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1756418464' WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST; -- 1ms;
SELECT ALL MIN(CAST(0.24159352034145087 AS TEXT)), ((((((vt0.c0) ISNULL))OR((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0) NOT NULL))), ((LIKELIHOOD(1.26603929E9, 0.3774355502950266)) IS TRUE) FROM vt0; -- 0ms;
SELECT (((vt0.c0))>=((CASE WHEN vt0.c0 THEN NULL WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), NULL COLLATE BINARY, ((MAX(vt0.c0))AND(CAST(vt0.c0 AS BLOB))), vt0.c0, LAG(load_extension((~ (vt0.c0)), ((vt0.c0) NOTNULL)), json_type(TRIM(DISTINCT vt0.c0)), ((CAST(vt0.c0 AS INTEGER))GLOB((vt0.c0 IN ())))) OVER () FROM vt0 GROUP BY CAST(vt0.c0 COLLATE RTRIM AS REAL), CAST((((vt0.c0, vt0.c0, '?胕')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS TEXT), TRIM(DISTINCT ((vt0.c0)IS(0.7145648309546933))) HAVING ((((CAST(vt0.c0 AS TEXT))AND(CAST(NULL AS NUMERIC))))AND(SUM(vt0.c0))); -- 0ms;
SELECT DISTINCT SQLITE_VERSION(), x'', (- (((vt0.c0)-(vt0.c0)))), ((1712222431) NOT NULL) COLLATE BINARY, CAST(vt0.c0 AS REAL) FROM vt0 GROUP BY (((((vt0.c0))<((vt0.c0)))) NOTNULL); -- 0ms;
SELECT DISTINCT (+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'6a37' END)) FROM vt0 WHERE ((~ (CASE '-1551719712'  WHEN '-999782160' THEN x'' WHEN 0.9404819059121519 THEN 'eu' WHEN 1.408628708E9 THEN '9%Ha|HI' ELSE '' END))); -- 0ms;
SELECT DISTINCT AVG(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.2655283597630739 IN ()) IN ())); -- 0ms;
SELECT DISTINCT LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.951339956232538) FROM vt0; -- 0ms;
SELECT CASE ((vt0.c0)/(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN COUNT(vt0.c0) END, UNLIKELY(CAST(0.2282487458625173 AS NUMERIC)), CAST(x'b27f' AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((((-1.652027322E9)LIKE('1644536030'))) BETWEEN (((((x'')AND(2.031012377E9)))OR('%'))) AND (CASE '0.8945694587474219'  WHEN NULL THEN x'' WHEN '2031012377' THEN '149560541' WHEN 0.7147732829250154 THEN -1.429608042E9 ELSE 0.45382092594898815 END))); -- 1ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS BLOB) THEN (((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 WHERE (json_extract(((x'dc22') ISNULL), HEX(DISTINCT '-1173590364'), (736735750 IN ()), (~ (x'')))) LIMIT 716857639;SELECT DISTINCT vt0.c0, vt0.c0, (+ ('1594713784')) FROM vt0 WHERE (((((+ (0.0923273843015463)), (- ('5G')), (((((((('-1100970925')AND(0.1313019012124863)))AND(496724586)))OR(0.976968085457699)))OR(x''))))<>(((((NULL))<(('-1804117658'))), CAST(0X2ba9838 AS REAL), LIKELIHOOD(x'c74b', 0.21568218263356387))))); -- 0ms;
SELECT ALL ((SUM(vt0.c0))-(((vt0.c0) ISNULL))) FROM vt0 WHERE (COALESCE(DISTINCT '><', ((0.21281502901451) NOT BETWEEN (x'') AND (NULL)), (('ꪏ2''?E.\r') NOT BETWEEN ('{(elq39{') AND (0X1dd5afd4)), NULL COLLATE NOCASE)); -- 0ms;
SELECT ((((vt0.c0)|(vt0.c0)))LIKE(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (((((((((x'')AND(0Xffffffffe85a61de)))OR(((NULL) BETWEEN (0.4797457048350775) AND (NULL)))))AND(NULL)))OR(208194208 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 GROUP BY (((+ (x'')))GLOB(UNLIKELY(vt0.c0))) HAVING ((vt0.c0)>>(vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT ALL (+ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), TOTAL((((vt0.c0))>=((vt0.c0)))) OVER (), CAST(GROUP_CONCAT(vt0.c0) AS INTEGER) FROM vt0; -- 0ms;
SELECT ALL ((LIKELY(vt0.c0)) NOT NULL), ((vt0.c0)<<(CAST(vt0.c0 AS BLOB))), CASE CAST('1059988117' AS REAL)  WHEN vt0.c0 THEN x'' ELSE CAST(vt0.c0 AS REAL) END FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0)>=(vt0.c0)) AS REAL), UNLIKELY(DISTINCT ((vt0.c0)-(vt0.c0))), LEAD((((NOT (vt0.c0)))-(vt0.c0)), ((vt0.c0)>=(vt0.c0)) COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) OVER () FROM vt0 WHERE ((((('0.4480191983812756') IS FALSE))/(CAST(0.8476058665182281 AS INTEGER)))) GROUP BY -1932093330, (vt0.c0 COLLATE RTRIM IN (CASE WHEN -1245613194 THEN vt0.c0 END, (((vt0.c0))=((vt0.c0))))), ((x'398d')AND(((vt0.c0) ISNULL))) LIMIT 673360718;SELECT ((((vt0.c0)&(vt0.c0)))AND(((vt0.c0) ISNULL))) FROM vt0 WHERE (((((((NULL)<(x'0021')))OR('749821127')))OR(''))) GROUP BY (+ (LIKELY(x''))), CAST(vt0.c0 COLLATE BINARY AS BLOB), ((CASE vt0.c0  WHEN 0.417380190846676 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL), x'', (((vt0.c0))<=((vt0.c0))) COLLATE BINARY; -- 1ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))>>((vt0.c0 IN ()))) FROM vt0 ORDER BY (((((vt0.c0) NOT NULL)))<((CAST(vt0.c0 AS INTEGER)))) DESC  NULLS FIRST; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)==(x'')))) AND ((COUNT(*)))) FROM vt0 WHERE (CAST((('-73009827') NOT BETWEEN (1213839947) AND (x'')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0)) BETWEEN (((vt0.c0)&(vt0.c0))) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) FROM vt0 GROUP BY NULL HAVING ((((vt0.c0)&(vt0.c0)))/((- (vt0.c0)))); -- 0ms;
SELECT DISTINCT ((('vuX%Mf뉌)')LIKE(vt0.c0)) IN ()), (+ (0.25753279323366185)), (NOT (CASE ''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 LIMIT 183677332; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(vt0.c0)) NOT NULL), CAST('[q' AS TEXT), (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 GROUP BY (+ (LIKELY(vt0.c0))), vt0.c0, (+ (((vt0.c0) IS TRUE))), (((((vt0.c0, vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0)))) IS TRUE), RTRIM((NOT (vt0.c0))) HAVING ((((vt0.c0) NOT NULL)) IS TRUE); -- 0ms;
SELECT DISTINCT vt0.c0, ABS(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))), CHAR(CAST(vt0.c0 AS REAL)) FROM vt0 WHERE (((((NULL) NOT BETWEEN ('') AND ('-1858864641'))) BETWEEN ((((('-718934735')OR('R8603536632296259097:826-1550T5385508715784795699 8+.<')))OR(0.44668545090243694))) AND ((- ('(䞣骩i쫝e/'))))); -- 0ms;
SELECT ALL CAST((+ (vt0.c0)) AS REAL) FROM vt0 WHERE (CAST('' AS INTEGER) COLLATE RTRIM) ORDER BY (- (vt0.c0)) COLLATE BINARY, ((((((((((vt0.c0)&(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)||(vt0.c0)))))OR(json_type(vt0.c0))))OR(vt0.c0)) ASC; -- 0ms;
SELECT DISTINCT '爷.XAp+k' FROM vt0 WHERE (((((879935766)LIKE(NULL)))>(((0.7435462037602382) BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT 'b&K' COLLATE NOCASE FROM vt0 WHERE (CASE (x'3ca9cc20' IN (NULL))  WHEN x'' THEN CAST('ꁐ<G\nmH?dB' AS BLOB) ELSE (('41759581') NOT BETWEEN ('-2103272357') AND (x'')) END); -- 0ms;
SELECT DISTINCT ('' IN (((vt0.c0)>=(vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT COUNT(((vt0.c0)<>(95237008))) OVER () FROM vt0 WHERE (CAST(json_patch(0.19859913768108195, 0.2008739553555431) AS BLOB)); -- 0ms;
SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((NULL)>=(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)|(vt0.c0)) AS BLOB), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(0.6847265015034829)))AND(vt0.c0))) NOTNULL), (- (((vt0.c0)!=(vt0.c0)))) FROM vt0 WHERE (UPPER(((((1341391752)OR('890138415')))OR(-3.90713536E8)))) GROUP BY vt0.c0 COLLATE NOCASE COLLATE BINARY; -- 0ms;
SELECT DATE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.6537470413065354, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((~ (((-921902153)LIKE('ꫨ捜'))))); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) IS FALSE)) OVER () FROM vt0; -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM vt0; -- 0ms;
SELECT DISTINCT (((((~ (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (1.569187194E9)))))OR('1605479830')) FROM vt0 WHERE ((((((('2140717658', NULL, x'9b10'))==((0.7230956363824208, -661844014, '1114959795')))))<(((1506089456 IN ()))))); -- 0ms;
SELECT DISTINCT CASE WHEN TOTAL(vt0.c0) THEN 0.7082309824668688 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN (0xffffffffa449dc66 IN ()) THEN 0.8704064305997995 END, (CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END IN ()), ((((((vt0.c0)-(vt0.c0)))OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((((((((((NULL)AND(NULL)))AND(0xc0c6eb6)))OR(NULL)))OR(NULL)) IN ())); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((((((('?X')IS NOT('1989213897')))AND(CASE WHEN '6A' THEN x'1271' ELSE 0.179671872345736 END)))OR('Zs>dYkS斳'))); -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0))%(NULL)) FROM vt0 WHERE (CAST((~ (x'e5dd')) AS BLOB)); -- 0ms;
SELECT ALL ((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)+(vt0.c0)))))OR((NOT (vt0.c0)))) FROM vt0 WHERE (((((0.3424198221316015)>=(0.26106402372261484))) NOTNULL)); -- 1ms;
SELECT ALL ((((vt0.c0) NOT NULL)) IS FALSE) FROM vt0 WHERE ((NULL COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT vt0.c0 COLLATE RTRIM) FROM vt0 WHERE (((((('') NOTNULL)))=(((+ (NULL)))))) LIMIT -1429608042 OFFSET -1701086009; -- 0ms;
SELECT ALL (~ ((vt0.c0 IN ()))) FROM vt0 LIMIT 1408628708; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((('-1587770301')) NOT BETWEEN ((NULL)) AND ((x''))) COLLATE RTRIM); -- 0ms;
SELECT ALL CASE WHEN (~ (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CAST('1098755906' AS NUMERIC) END, (- ((vt0.c0 IN (vt0.c0, vt0.c0)))), ((((vt0.c0) ISNULL))>(AVG(vt0.c0))) FROM vt0 WHERE (((((0.6912695787159276)<>(NULL)))OR((((x'')) BETWEEN ((0.7406207657865819)) AND (('0.18638148433614876')))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), vt0.c0, (NOT (CAST(vt0.c0 AS BLOB))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)-(vt0.c0))) FROM vt0 ORDER BY INSTR((((vt0.c0))<((vt0.c0))), vt0.c0 COLLATE NOCASE) ASC, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT ALL ((((vt0.c0)-(vt0.c0))) NOT BETWEEN (vt0.c0) AND (((NULL) IS TRUE))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN '-763433904' ELSE vt0.c0 END) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN ()))), ((((vt0.c0) NOTNULL)) ISNULL), vt0.c0 FROM vt0 WHERE ((((((0.9225394276136293, 0.3324286405943061, 0.16826617320938264)) BETWEEN ((2.031012377E9, ']k', '1941800867')) AND ((NULL, NULL, -1.32836273E9))))GLOB(((-1744972228)+(x''))))); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM)+(CAST(vt0.c0 AS NUMERIC))) FROM vt0 ORDER BY (((vt0.c0)GLOB(vt0.c0)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0)LIKE(vt0.c0)), (vt0.c0 COLLATE NOCASE IN (((vt0.c0)|(vt0.c0)), (NOT (vt0.c0)))), (vt0.c0 IN ()) COLLATE BINARY, CAST(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) AS INTEGER), (((vt0.c0 IN ()))GLOB((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))||(CAST(vt0.c0 AS NUMERIC))) FROM vt0 GROUP BY (~ (((vt0.c0)OR(vt0.c0)))) HAVING ((vt0.c0 COLLATE BINARY)>=(((vt0.c0)GLOB(vt0.c0)))) LIMIT -1963587549 OFFSET -1384236650; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT '\犁Fd' FROM vt0; -- 0ms;
SELECT ALL NULL, (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))), ((CAST(vt0.c0 AS BLOB))&(((vt0.c0)IS(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE RTRIM) AND (AVG(vt0.c0))) FROM vt0 WHERE ((1108209776 IN ()) COLLATE NOCASE); -- 0ms;
SELECT (((vt0.c0 IN (vt0.c0)))<(CASE 0X63cc48c4  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (((x'')GLOB(0.30556978753345576)) COLLATE BINARY); -- 0ms;
SELECT ALL CAST((vt0.c0 IN ()) AS REAL), ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()), (((NOT (vt0.c0)))|(NULL)), GROUP_CONCAT(TRIM(DISTINCT vt0.c0)) OVER (), '0.8742379755224984' FROM vt0 WHERE ((((((1989213897 IN ()))OR(UNLIKELY(DISTINCT '1567435985'))))OR((('') BETWEEN (NULL) AND ('0.0'))))); -- 0ms;
SELECT CAST(CAST(vt0.c0 AS INTEGER) AS BLOB), (vt0.c0 COLLATE NOCASE IN (((vt0.c0)<(vt0.c0)), CAST(vt0.c0 AS BLOB))), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '镛GV? YnYB' ELSE vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END FROM vt0 WHERE (0.5125963666718428); -- 0ms;
SELECT DISTINCT '-759150002', ((vt0.c0) BETWEEN (1386581881 COLLATE RTRIM) AND (vt0.c0 COLLATE NOCASE)), CAST(vt0.c0 AS TEXT) FROM vt0 WHERE ((((NOT (0.3587950657473955)))*((+ ('zUZkj59}j'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)&(vt0.c0)))) AND ((COUNT(*)))), (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) IN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((((((vt0.c0)IS NOT(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('')))))AND((((vt0.c0))>((vt0.c0))))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0)&(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((NULL, ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))), vt0.c0 FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0)GLOB(vt0.c0)) IN ()), (((vt0.c0) BETWEEN (vt0.c0) AND (0.444479268796086)) IN ()), NTH_VALUE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY, CAST((vt0.c0 IN ()) AS BLOB)) OVER () FROM vt0;SELECT DISTINCT (~ (NULL)) FROM vt0 ORDER BY (((vt0.c0, 0x21057413, vt0.c0)) BETWEEN (((- (vt0.c0)), ((vt0.c0) NOTNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0), ((vt0.c0)<>(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) DESC; -- 0ms;
SELECT ALL (((vt0.c0 IN ())) BETWEEN (TOTAL(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 LIMIT -1870615809; -- 0ms;
SELECT DISTINCT (('-1870615809') BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((0Xffffffffe8797b10) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT JULIANDAY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN ('-919591721') AND (vt0.c0)), TOTAL(vt0.c0), ((vt0.c0)<=('0.48555804792739865')), LENGTH(vt0.c0)), PERCENT_RANK() OVER (), COUNT(*) OVER ( ROWS (((((((((- (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (0.12248800606791421)))))AND(((vt0.c0)/(vt0.c0)))))OR((NOT (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) PRECEDING EXCLUDE GROUP) FROM vt0;SELECT DISTINCT (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND('懞5_n')))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT CAST(RTRIM(vt0.c0) AS BLOB), LAG(((vt0.c0) ISNULL), (((((((((('O 8pib')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))>>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((vt0.c0)OR(vt0.c0)) COLLATE RTRIM) OVER (), CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 1ms;
SELECT (((vt0.c0)>>(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT SQLITE_VERSION() FROM vt0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN (((((((('+MX')AND(x'')))AND(0.9720385010259417)))AND(0.5492752951843878)))AND('0.976968085457699')) WHEN ((x'')%('-1956348574')) THEN CASE NULL  WHEN 0Xffffffff9f73c8da THEN x'' WHEN NULL THEN NULL WHEN '-732760682' THEN x'' WHEN '61224448' THEN 1654202736 WHEN x'' THEN '' ELSE 0.18662015252596886 END WHEN LOWER(NULL) THEN TYPEOF(x'') ELSE (+ ('1989213897')) END); -- 0ms;
SELECT DISTINCT LAST_VALUE((((vt0.c0)||(0x1984862c)) IN ())) OVER () FROM vt0 WHERE (SUBSTR(((x'89a38582') BETWEEN ('1205241516') AND (NULL)), ((0.14253367813656048)IS(-220236807)))); -- 0ms;
SELECT (~ (COUNT(*))) FROM vt0 WHERE (((((((x'') IS FALSE))OR((- (x'')))))OR((((NULL, 0.5178094231780294, '-420089986'))!=(('', 1.83677332E8, x'')))))); -- 0ms;
SELECT ((x'')<>(NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT (((- (vt0.c0)))<>(UPPER(vt0.c0))) FROM vt0 WHERE ((((((-1.842913015E9))>=(('-1549586743')))) NOT BETWEEN (((0.8138974975298998) IS TRUE)) AND ((NOT ('-668804985'))))); -- 0ms;
SELECT DISTINCT ((0X78588be5 IN ()) IN ()), ROW_NUMBER() OVER (), SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(MIN('1571277816') AS BLOB) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 GROUP BY CAST((((vt0.c0))==((vt0.c0))) AS NUMERIC), '㙔>⊕*Ov9K%', json_patch(((0X5a2308a4)<<(vt0.c0)), (vt0.c0 IN ())) HAVING json_array_length(vt0.c0 COLLATE BINARY) ORDER BY (((((vt0.c0))!=((vt0.c0))))*((vt0.c0 IN ()))), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)); -- 1ms;
SELECT AVG((~ (vt0.c0))) OVER ( ROWS  CURRENT ROW) FROM vt0 WHERE ((('\ry')>=('4Iv&\GEv')) COLLATE RTRIM) GROUP BY NULL HAVING ((((vt0.c0) IS TRUE))LIKE(vt0.c0)); -- 0ms;
SELECT DISTINCT (- (TRIM(vt0.c0))) FROM vt0 WHERE (((((((((((1.83677332E8)AND('0.32920454470485616')))AND(x'')))OR('NOW')))OR('-1918629886'))) NOT BETWEEN (((x'') BETWEEN (x'76a2') AND (NULL))) AND (((NULL)+('930828845'))))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (- (((vt0.c0)IS(vt0.c0)))), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))>=((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (('''hVw-_M', vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) DESC; -- 0ms;
SELECT DISTINCT ((0.959942081920342) BETWEEN ((~ (vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (-824037451) LIMIT -251559741; -- 0ms;
SELECT ALL (((~ (vt0.c0)))>(vt0.c0)) FROM vt0 WHERE (CASE COALESCE(DISTINCT '-1207422943', '-1429608042')  WHEN ((x'') NOT BETWEEN (NULL) AND (-188880732)) THEN -3.9672989E8 END) LIMIT -1833365347; -- 0ms;
SELECT ((DATETIME(vt0.c0, vt0.c0, x'', vt0.c0, vt0.c0))<(((vt0.c0)+(vt0.c0)))), COUNT(x'' COLLATE NOCASE) OVER (), (((vt0.c0)/(vt0.c0)) IN ()) FROM vt0 WHERE (((((-9.50646877E8) NOTNULL))<<((((x'bb43'))>((x'8b77')))))); -- 0ms;
SELECT DISTINCT ((vt0.c0)GLOB(((vt0.c0)<>(vt0.c0)))) FROM vt0 LIMIT 17291531; -- 0ms;
SELECT ALL MAX(CAST(vt0.c0 AS BLOB)) FROM vt0 WHERE ((((x'')) BETWEEN (('v3Y5sTj' COLLATE RTRIM)) AND ((CASE WHEN 505356483 THEN 0.3340203937152749 WHEN '' THEN NULL WHEN 0x20697d6f THEN 869369086 END)))) GROUP BY CAST(((vt0.c0)<<(vt0.c0)) AS TEXT) HAVING vt0.c0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT CAST(vt0.c0 AS BLOB)) FROM vt0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN (((x'e817'))>((NULL))) WHEN (('833048608') NOT BETWEEN (0X52e0808b) AND ('')) THEN (0.22040558317214343 IN ()) WHEN ((('2081034533', '-427281947', '1905913260'))!=((x'', '2071933195', 0.3003422045966768))) THEN CASE WHEN '\rw,' THEN x'' WHEN x'bf2fcb13' THEN NULL WHEN NULL THEN 'QYl\rワlS+~' ELSE NULL END ELSE (- (0X3da24143)) END); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT NULL) IN ()) FROM vt0 LIMIT 188294579 OFFSET 1008231668; -- 1ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.5336689868377419) NOT BETWEEN (0.5421185332389592) AND (vt0.c0)) ELSE ((vt0.c0) NOT NULL) END FROM vt0 LIMIT 2080743814 OFFSET -668804985; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS INTEGER))+(((vt0.c0) NOT NULL))) FROM vt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT (CAST(vt0.c0 AS REAL) IN (CASE WHEN vt0.c0 THEN vt0.c0 END)), x'', ((AVG(vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT (((((vt0.c0))>((vt0.c0))))LIKE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ('2113676075'); -- 0ms;
SELECT ((vt0.c0 IN ()) IN ((((vt0.c0, vt0.c0, NULL, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (CAST(((NULL) NOT BETWEEN ('') AND ('1095642260')) AS TEXT)); -- 0ms;
SELECT (- (CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE ((('-1221436252' COLLATE NOCASE) BETWEEN (((0.2644261752926029) NOT BETWEEN (x'7d3a') AND (431754501))) AND ((('817652838') BETWEEN ('465615380') AND (x'c73cc5d7'))))) LIMIT 1996677391; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)GLOB(vt0.c0)) AS BLOB) FROM vt0 WHERE ((((1187925163)) BETWEEN (((- (x'f63ccf82')))) AND ((CASE WHEN 0xffffffffd525ed31 THEN '-387441558' ELSE x'' END)))); -- 0ms;
SELECT IFNULL(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN (((0.3243125918402169, 'co!!+,\n', -257994357)) NOT BETWEEN (('0.030213264415593244', NULL, 'eu')) AND ((0.019409369765465367, '<bFv{\r', '1118366280'))) ELSE ((x'3aa4')|(x'')) END) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)|(vt0.c0)), (((((- (vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(CAST(vt0.c0 AS REAL))) ASC  NULLS FIRST, 'iM' ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM((NULL IN ())) FILTER(WHERE CAST(((vt0.c0) NOT NULL) AS NUMERIC)) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), (((vt0.c0, (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN '1608979261' END))>=((1788090543, ((vt0.c0)AND(vt0.c0)), (~ (vt0.c0))))), vt0.c0 FROM vt0 ORDER BY 0x5ebf1303  NULLS LAST;SELECT DISTINCT CUME_DIST() OVER (), AVG(TRIM(vt0.c0)) OVER (), ((NULL) NOTNULL) COLLATE NOCASE, (((vt0.c0 IN ()))<<(((vt0.c0)<<(x'')))), ((vt0.c0 COLLATE RTRIM)LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((CASE WHEN NULL THEN NULL END) ISNULL)); -- 1ms;
SELECT ALL (~ (TIME(vt0.c0, vt0.c0, vt0.c0))) FROM vt0 WHERE (IFNULL(DISTINCT 0.2062477565753733 COLLATE RTRIM, (('696155663') NOT BETWEEN (x'd8ce') AND (x'1d2d014d')))) GROUP BY ((((TYPEOF(DISTINCT vt0.c0))AND((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((NOT (vt0.c0)))), CAST(NULL AS REAL), (((((vt0.c0) IS TRUE), (((vt0.c0))<((vt0.c0))), CAST(vt0.c0 AS NUMERIC)))>((((vt0.c0) ISNULL), CAST(vt0.c0 AS REAL), ((vt0.c0)<('x\nx|訮q'))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 WHERE ((((((0xffffffffd822d887)LIKE(NULL)), ((x'')AND(NULL)), ((0.9231072887891951) NOT BETWEEN (x'') AND ('199753358'))))<=(((((x'')) BETWEEN ((x'')) AND ((0x5ad3390))), (((4.6561538E8)) BETWEEN ((x'')) AND ((-1.44193958E8))), TYPEOF(x''))))) GROUP BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) WHEN CASE WHEN 0.27483111000001903 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c0 AS NUMERIC) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE (~ (vt0.c0)) END HAVING SUM(vt0.c0); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c0)))||(LOWER(vt0.c0))) FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0))) NOT BETWEEN (x'') AND (((vt0.c0)/(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))*(CASE '.D'  WHEN vt0.c0 THEN 0.43228141122347574 ELSE vt0.c0 END)), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL), (((MAX(vt0.c0)))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT MIN(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM), AVG((+ (vt0.c0))) FILTER(WHERE CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT)) OVER (), COUNT(((vt0.c0)<<(vt0.c0))) OVER () FROM vt0 WHERE ((((NULL)) BETWEEN ((SQLITE_COMPILEOPTION_GET(NULL))) AND ((x'2e01c6c9' COLLATE RTRIM)))); -- 1ms;
SELECT ALL TOTAL(vt0.c0 COLLATE NOCASE), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))), CAST(json_object(vt0.c0, vt0.c0) AS TEXT) FROM vt0;SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (CASE '837680950'  WHEN NULL THEN x'' ELSE x'' END))) LIMIT 888165481; -- 0ms;
SELECT DISTINCT LAG(((((vt0.c0)OR(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(0.7957374074796895)), (((((((vt0.c0))!=((vt0.c0))))AND((- (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))), UPPER(DISTINCT vt0.c0 COLLATE RTRIM)) OVER ( ORDER BY ((((vt0.c0)==(vt0.c0))) NOT BETWEEN (((vt0.c0)==(vt0.c0))) AND ((0x31dc9e2d IN ())))  NULLS LAST), ROW_NUMBER() OVER (), ((vt0.c0)<<(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)>=(0.5157685339364172)) AS TEXT) FROM vt0 WHERE ((((((1651657483)AND(2104714006)))OR('\rw,')) IN ())); -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY vt0.c0, 0.8608461335090093 ASC  NULLS FIRST), (((((vt0.c0))>((vt0.c0))))>(0.8857002951862756)), (((NULL IN (vt0.c0, vt0.c0)))!=(-1939143224)), COUNT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), ((((((((((vt0.c0)OR('458019740')))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOTNULL) FROM vt0 WHERE (((('-73355264' IN ()))||(((729272636) BETWEEN (-3.90713536E8) AND (0x37a2d5ea))))); -- 0ms;
SELECT ((((vt0.c0)<=(vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) FROM vt0 WHERE (((('0.0', 0.6761312151971406, x'', 'O 8pib', 'qLv앫')) NOT BETWEEN ((((NULL)LIKE(NULL)), ((((x'')OR('1578020137')))OR(0xd7a39f)), ((NULL)>=('jDy\rz')), ((x'7c63')>>('')), CASE WHEN '-914502874' THEN NULL END)) AND (((((((((('&gKg')AND('-1918629886')))OR(-4.86212904E8)))OR(363263067)))AND(2146476616)), ((0.33742201625737045) IS TRUE), 0.019409369765465367, (x'6b38e0f7' IN (NULL)), STRFTIME('4]', x'a30a0cc4', '-165727822', x'2f43', NULL))))); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0) NOTNULL)) OVER () FROM vt0 WHERE (((('Ox', 0.9228153102653354, 0.6967010811915634)) BETWEEN ((CASE x''  WHEN NULL THEN 'Qdh' END, ('183677332' IN ()), ((x'')<=(0.7153047622344046)))) AND ((x'5b3a04ce', LOWER('Y'), ('-1429608042' IN ()))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0, '0.01207893808946836')))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((NULL COLLATE BINARY IN ())) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))); -- 0ms;
SELECT CAST(vt0.c0 AS BLOB) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(TRIM(vt0.c0, vt0.c0)) OVER () FROM vt0 WHERE ((('0.6664266317281539')IS NOT(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((((((0.7146770778564403)GLOB(vt0.c0)))AND(SUM(vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((((((((((x'')OR(4.9536758E7)))OR(x'd4acd0d3')))OR(1259524367)))OR('-1342161991')))%(x''))) LIMIT 2071933195; -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)OR(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(0.9796650872267189)))OR(vt0.c0)))))AND(LIKELY(vt0.c0))))AND(vt0.c0 COLLATE RTRIM)))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt0.c0 AS REAL))), AVG(vt0.c0), (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((0.12708803514956246)/(vt0.c0)) AS TEXT), 'lX?', COUNT(*) OVER () FROM vt0 LIMIT 1408628708; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT (((vt0.c0)IS(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN 1.121050136E9 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE((((vt0.c0))>((vt0.c0))))) FROM vt0 WHERE (CASE WHEN ((NULL)<>(273539447)) THEN ((('-1028931355', '1737001489', x''))<>((-3.90713536E8, 'N}!GLYcI', 0.10931419818850485))) ELSE ((NULL) IS TRUE) END) ORDER BY ((((vt0.c0)OR(vt0.c0))) IS FALSE) DESC; -- 1ms;
SELECT CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN vt0.c0 ELSE ((((vt0.c0)OR(vt0.c0)))AND(NULL)) END FROM vt0 WHERE ((('\r<4t')&(x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((vt0.c0)<((+ (vt0.c0)))) FROM vt0 WHERE (CASE WHEN ((((((((x'e7bc')AND(0.9496469468135401)))AND(x'')))OR(x'')))OR(NULL)) THEN CAST(0xffffffffcf93e62d AS INTEGER) END); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE), CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS BLOB), ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ()))), ((MIN(vt0.c0))|(MAX(vt0.c0))), (CASE WHEN vt0.c0 THEN '' END IN ()) FROM vt0 WHERE (((CAST('' AS BLOB)) NOT BETWEEN (((((x'')AND(x'')))OR(')~	gnH'))) AND (('-1205275808' IN ())))) GROUP BY UNLIKELY(DISTINCT ((vt0.c0) NOTNULL)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT COUNT((- (vt0.c0))) OVER () FROM vt0 GROUP BY (((((vt0.c0)IS(0.8933230959762356))))<((vt0.c0 COLLATE RTRIM))) HAVING vt0.c0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), (((((NULL)AND(vt0.c0)))OR(vt0.c0)) IN ()), ((CAST(vt0.c0 AS BLOB)) ISNULL) FROM vt0 GROUP BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0, x'')), vt0.c0 COLLATE NOCASE)) AND (((+ (vt0.c0)), vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) HAVING SUM((vt0.c0 IN (vt0.c0, vt0.c0))); -- 0ms;
SELECT ALL (NOT (vt0.c0)) FROM vt0 WHERE (CASE x'0d2f'  WHEN UPPER(NULL) THEN (('-497138988') NOTNULL) ELSE 0.7032974597593844 COLLATE RTRIM END); -- 0ms;
SELECT ((GROUP_CONCAT(vt0.c0)) BETWEEN (LOWER(DISTINCT x'7f20')) AND (((((((((((((vt0.c0)AND(vt0.c0)))AND(0.6261519223967223)))AND(vt0.c0)))AND(vt0.c0)))OR(0.3431275784294633)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL 0.5355598754113378 FROM vt0; -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((NULL)) BETWEEN ((x'0f48')) AND ((vt0.c0))) END FROM vt0 WHERE (CASE 0X18096a4  WHEN x'' THEN 0.9057663693192382 END COLLATE BINARY); -- 0ms;
SELECT ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (x'')), CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN vt0.c0 COLLATE BINARY THEN NULL WHEN ((vt0.c0) IS FALSE) THEN CHANGES() WHEN (((vt0.c0))<>((vt0.c0))) THEN ((((vt0.c0)OR(x'0998104b39f1')))AND(vt0.c0)) ELSE (+ (vt0.c0)) END, ((vt0.c0 COLLATE BINARY)<<((+ (vt0.c0)))) FROM vt0 WHERE (((('	')) BETWEEN (((0.6150205790205532 IN ()))) AND ((ABS(-320172294))))); -- 0ms;
SELECT LEAD((NOT (((((((((vt0.c0)OR(vt0.c0)))AND('')))AND(vt0.c0)))AND(vt0.c0)))), ((((((vt0.c0)AND(vt0.c0)))AND('230635105')))<<((vt0.c0 IN ()))), CASE WHEN (((((((('245940429')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN x'' ELSE ((0.6572420081043796)&(vt0.c0)) END) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)||(vt0.c0)), (~ (((vt0.c0)=(vt0.c0)))), RANK() OVER ( ORDER BY vt0.c0 DESC) FROM vt0 LIMIT -251559741; -- 0ms;
SELECT DISTINCT HEX(((vt0.c0)<=(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)<=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((TYPEOF(DISTINCT 0.801615560618102)) BETWEEN (((NULL) BETWEEN ('-1437558585') AND (0.6618008993310116))) AND ((0.8759434323786969 IN ())))) ORDER BY CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0) NOT NULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0)=(vt0.c0)) END, (((((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)>(vt0.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT (+ (vt0.c0)) COLLATE RTRIM, (((- (vt0.c0)))|(((vt0.c0) NOT NULL))), ((((vt0.c0)%(-1089923551))) BETWEEN (vt0.c0) AND ((+ ('95237008')))) FROM vt0 WHERE ((((0.6695591938702822)>=(NULL)) IN (LAST_INSERT_ROWID()))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))AND(x'')) AS INTEGER) ASC LIMIT 178284951; -- 0ms;
SELECT ALL CASE WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c0 AS BLOB) END FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), COUNT((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0X2f39c813)) AND ((vt0.c0, vt0.c0, vt0.c0)))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), 0xffffffff964833c9 FROM vt0 WHERE ('a''/杲'); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((ROUND(0xffffffffa0b7d631, -1552107354))OR((NOT (NULL)))))OR(((((0Xfffffffff390e6cc)AND(6.96155663E8)))AND(x'c4fb'))))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0 GROUP BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY COLLATE NOCASE; -- 1ms;
SELECT ALL UPPER(vt0.c0) COLLATE NOCASE, (+ (vt0.c0)), CASE ((vt0.c0)<(0x46ad5c76))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOTNULL) WHEN vt0.c0 THEN JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) WHEN vt0.c0 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ((((vt0.c0))=((vt0.c0))))) FROM vt0 LIMIT 1608045191 OFFSET 1936363424; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS INTEGER))), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((AVG(vt0.c0)))), CAST((vt0.c0 IN ()) AS REAL), INSTR(((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS TEXT)), (((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((NOT (vt0.c0)))), SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER (), AVG((vt0.c0 IN (vt0.c0))) OVER () FROM vt0 WHERE (((((CHAR('-1352011330'))OR(((1639581806)<>('h''QS}+J')))))OR(((0.19632956492332776)>(x''))))); -- 0ms;
SELECT CAST((vt0.c0 IN (vt0.c0)) AS REAL) FROM vt0 WHERE ((- ((((('溬昅den6')AND(0.9126052987529061)))OR('-1499144998'))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS LAST), x'2c59', ((vt0.c0 IN ()) IN ()) FROM vt0 ORDER BY (((vt0.c0)>=(vt0.c0)) IN (CASE WHEN vt0.c0 THEN '괩0NaN 0' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, x'99ca')) DESC; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c0)) NOT BETWEEN ((0.764091614803999)) AND ((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) END, (+ (CASE vt0.c0  WHEN vt0.c0 THEN 0.4981830756988398 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((vt0.c0 COLLATE NOCASE))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) OVER () FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0 NOT INDEXED; -- 0ms;
SELECT ALL CHANGES() FROM vt0; -- 0ms;
SELECT ALL (SUM(vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT ALL LENGTH(CAST(vt0.c0 AS NUMERIC)), CASE ((vt0.c0)+(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1727360620')) THEN (((vt0.c0, '7	qN', vt0.c0, '4,}&*Z0}', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0)<<(vt0.c0)) END, CASE WHEN vt0.c0 THEN AVG(vt0.c0) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) WHEN (- (vt0.c0)) THEN vt0.c0 ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 LIMIT -1194640296; -- 1ms;
SELECT ALL COUNT(((NULL)<(vt0.c0))) FROM vt0; -- 0ms;
SELECT AVG(CASE WHEN vt0.c0 THEN vt0.c0 END) FROM vt0; -- 0ms;
SELECT DISTINCT (((((~ (vt0.c0)))AND('-533110904')))AND(NULL)) FROM vt0; -- 0ms;
SELECT ALL CUME_DIST() OVER (), ((((((vt0.c0)>(vt0.c0)))AND(((NULL)*(vt0.c0)))))OR(COUNT(vt0.c0))), (~ (vt0.c0)) FROM vt0; -- 0ms;
SELECT (vt0.c0 IN ()) FROM vt0 WHERE ((((0.7301793967348968))<((''))) COLLATE BINARY) EXCEPT SELECT NTILE(CASE ((('-561999525')) NOT BETWEEN ((0.9736110451413532)) AND ((vt0.c0)))  WHEN NULL THEN vt0.c0 ELSE ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) END) OVER () FROM vt0 WHERE ((((0.9121565659653339)) NOT BETWEEN ((((NULL) NOT NULL))) AND ((0.6758196095979224)))); -- 0ms;
SELECT ALL ((((LOWER(DISTINCT vt0.c0))OR(((vt0.c0)%(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0 WHERE (((((-177334679)>>(286524790)))GLOB('v' COLLATE NOCASE))) LIMIT 1532194149 OFFSET -1196058042; -- 0ms;
SELECT DISTINCT -427454296 FROM vt0 WHERE (json_remove(((x'') NOT BETWEEN (0.4522028134376478) AND (0.3478691065684245)), ((((((((((((NULL)AND(NULL)))AND(-1.437558585E9)))AND('Go')))AND(NULL)))AND(NULL)))OR('yh')))) GROUP BY CASE WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)GLOB(vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((x'137b8c9e') NOT NULL) ELSE 'CN' END;SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE BINARY, ((DATETIME(-6.66247386E8, vt0.c0, vt0.c0))+(json_array_length(vt0.c0, vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)<((vt0.c0 IN ()))), (('' IN (vt0.c0)) IN ()), (NOT ((+ (vt0.c0)))) FROM vt0 WHERE (((((((((CASE WHEN 2.146476616E9 THEN 0.14310606578408336 ELSE '^	3r}l}' END)AND(CAST('2071933195' AS INTEGER))))AND((- ('522641376')))))AND((NOT (0.1709031642174258)))))AND(((('丵d'))>((NULL)))))); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)IS NOT(vt0.c0))) OVER ( PARTITION BY ((((vt0.c0) NOTNULL))IS((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), TYPEOF(0.4306356575435649)), (GLOB(vt0.c0, vt0.c0) IN ()), GROUP_CONCAT(vt0.c0) OVER () FROM vt0 WHERE (((((0.6029781983184265)+(NULL))) BETWEEN ((((0Xdbf3661))<>((x'')))) AND (((4.42061556E8) NOT BETWEEN (0.16969677887562784) AND (x''))))); -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((((x'') IS FALSE))OR((((NULL))>((0.10910234125293417))))))OR(((-753144570)>=('1439662170')))))AND(CAST(NULL AS BLOB))))AND(((('')) BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) IN ()), (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CAST(vt0.c0 AS INTEGER)))), CASE (vt0.c0 IN (0.22074790824833945))  WHEN TRIM(DISTINCT vt0.c0) THEN ((vt0.c0)||(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END FROM vt0 NOT INDEXED WHERE (((0.14253367813656048)LIKE(CAST(0.9404819059121519 AS NUMERIC)))) ORDER BY (~ (((vt0.c0)IS NOT(vt0.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT TOTAL(CAST(vt0.c0 AS BLOB)) OVER ( ROWS  UNBOUNDED PRECEDING), NTH_VALUE(((((+ (vt0.c0)), COALESCE('-225434098', vt0.c0), vt0.c0 COLLATE BINARY))<=((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'55f3' THEN vt0.c0 END, ((vt0.c0)>(vt0.c0)), LOWER(DISTINCT vt0.c0)))), 0.007812051703406597) OVER (), x'' FROM vt0;SELECT ALL (((vt0.c0)>>(vt0.c0)) IN ()), NTH_VALUE(((json_valid(vt0.c0))&(CAST(vt0.c0 AS REAL))), ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((NULL) IS TRUE)) AND (((((x'23c9')AND(vt0.c0)))OR(vt0.c0))))) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), CAST(((vt0.c0)OR(0.05235857203340055)) AS REAL), ((vt0.c0)&(vt0.c0)) COLLATE BINARY, (((vt0.c0 IN (vt0.c0))) IS FALSE) FROM vt0 WHERE (CASE WHEN NULL THEN 0.22600106775508066 END COLLATE NOCASE); -- 0ms;
SELECT ALL SUM(NULL) OVER () FROM vt0 WHERE ((- (((((NULL)OR(x'')))OR(0.8909747404952078))))); -- 0ms;
SELECT '' COLLATE NOCASE FROM vt0 WHERE (((CASE -1342161991  WHEN '1099415375' THEN 0.6465014383974029 END) ISNULL)); -- 0ms;
SELECT ALL (('1302084142')>=(CAST(vt0.c0 AS INTEGER))), ((CASE WHEN vt0.c0 THEN vt0.c0 END)==(CAST(vt0.c0 AS BLOB))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), (((((vt0.c0))!=((vt0.c0))))LIKE('1578020137')), LAG(((NOT ('')) IN ()), NULL, LIKELY((('-1542915762') IS TRUE))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(vt0.c0)) AND ('433394713')) FROM vt0; -- 0ms;
SELECT ALL ((((SQLITE_COMPILEOPTION_GET(vt0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 WHERE (((((761134748)==(0.974330563874895))) NOT NULL)); -- 1ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) ISNULL), GROUP_CONCAT((NOT (vt0.c0)) COLLATE RTRIM), TYPEOF(vt0.c0) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 LIMIT -1115096952 OFFSET -696246323; -- 0ms;
SELECT AVG('炿1i*ᎄﶛE]ﯘ') OVER (), GROUP_CONCAT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER (), ((AVG(vt0.c0)) BETWEEN (((0.5919090793349117)!=(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (CAST(((NULL)LIKE(NULL)) AS TEXT)); -- 0ms;
SELECT (NOT (LIKELIHOOD(DISTINCT vt0.c0, 0.07942281954920061))) FROM vt0 WHERE (((('-1881078825' IN ()))>=(CAST(0.9179155768670907 AS INTEGER)))); -- 0ms;
SELECT ALL CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN COUNT(*) THEN (- (vt0.c0)) WHEN ((x'01b3') NOT NULL) THEN vt0.c0 ELSE ((vt0.c0)<<(vt0.c0)) END FROM vt0 WHERE (((((NULL)LIKE('-396729890'))) ISNULL)) EXCEPT SELECT ALL ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (x'')) FROM vt0 WHERE ((NOT ((+ (''))))); -- 0ms;
SELECT ALL (((x''))<(((NOT (vt0.c0))))) FROM vt0 WHERE (CAST((('2000678182')|(x'c48c')) AS TEXT)) LIMIT -1526230188 OFFSET 2031012377; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) FROM vt0 GROUP BY CAST((((x'ce8c', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN ((vt0.c0)IS NOT(vt0.c0)) ELSE vt0.c0 END, (((vt0.c0 IN (vt0.c0, vt0.c0)))IS(MAX(vt0.c0))), 1605479830 FROM vt0 WHERE ((((((x'', x'', '378068981')) NOT BETWEEN (('-1849950619', 0.40508704515781224, 0.9578129825714611)) AND ((NULL, 'VI]K1s镾', x''))))&('\犁Fd'))) ORDER BY (- (ABS(DISTINCT vt0.c0))) ASC; -- 0ms;
SELECT FIRST_VALUE('') OVER () FROM vt0 WHERE (CASE WHEN CAST(NULL AS INTEGER) THEN ((x'4e3c')IS(NULL)) ELSE ((NULL) NOTNULL) END) ORDER BY (((((~ (vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, '972021100')) AND ((vt0.c0, x'', vt0.c0))))))AND(vt0.c0)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT HEX(DISTINCT vt0.c0) FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*((NOT (0.5802995376095981)))) DESC  NULLS LAST; -- 0ms;
SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((TOTAL(vt0.c0)))), (('zUl+장	o-' COLLATE BINARY)>>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS REAL) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (0.041199655491004905)) END FROM vt0 WHERE ((((0.4480191983812756)) BETWEEN (((NOT (0.32000143947933635)))) AND ((CASE WHEN 0x168a557f THEN x'b979' ELSE -1.701086009E9 END)))) ORDER BY CAST((NOT (vt0.c0)) AS INTEGER); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c0)))+((+ ('cCR')))) FROM vt0 WHERE ((((~ (NULL))) NOT BETWEEN ((+ (x''))) AND (LOWER('a')))); -- 0ms;
SELECT ALL 0.28000628741487876 FROM vt0; -- 0ms;
SELECT DISTINCT (NULLIF(vt0.c0, vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0 IN ()))GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (NOT (NULL)), vt0.c0, (((0.7145648309546933 IN ()))%(NULL)), x'e3b9' FROM vt0 WHERE (CAST(x'6dd0' AS NUMERIC)); -- 0ms;
SELECT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) NOT NULL))LIKE(CAST(vt0.c0 AS TEXT))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)|(vt0.c0)))AND((- (vt0.c0)))), ((((vt0.c0 COLLATE NOCASE)OR(vt0.c0)))AND(ABS(vt0.c0))), ((((vt0.c0) ISNULL))<<(SUM(vt0.c0))) FROM vt0 WHERE (((('-718934735') NOT NULL) IN ())); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((((('310235879') NOTNULL)) BETWEEN (((0xffffffffff298231) IS TRUE)) AND ((('-919591721')>=('-486212904'))))) GROUP BY CASE WHEN NULL THEN RTRIM(x'') WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN ()) WHEN ((vt0.c0)<(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (x'')) END, -1.88880732E8, (((vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))<((((vt0.c0)>=(vt0.c0)), CASE '-1314202157'  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS INTEGER))AND(highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR('胕L')))OR(((vt0.c0)*(vt0.c0)))) ASC  NULLS FIRST, ((vt0.c0)=(((vt0.c0) IS FALSE))) DESC  NULLS FIRST, (((((- (vt0.c0)))OR(UPPER(DISTINCT vt0.c0))))OR(vt0.c0)) ASC  NULLS LAST;SELECT ((((vt0.c0)|(vt0.c0)))+((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT TOTAL(GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((((0.5381178712551256 IN ('-['))) BETWEEN (CAST(0.33480990885158746 AS NUMERIC)) AND ((((879935766, x'', 0.06811567403769292))==(('0.22156874665501647', '149560541', 0.10679336704867104))))));SELECT DISTINCT ((MAX(vt0.c0)) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (COUNT(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((DATETIME(vt0.c0, vt0.c0, vt0.c0))=(((vt0.c0)<>(vt0.c0)))) FROM vt0 WHERE (TIME('' COLLATE RTRIM, (('-668804985') BETWEEN (0.3860604422469903) AND (x'241f')), ((((x'')AND(0.5965768252388132)))AND(x'')))); -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))IS(SUM(vt0.c0))), LAST_VALUE(((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((vt0.c0))<((x'4b6678fa')))))) OVER (), CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOTNULL) WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-666247386' ELSE vt0.c0 END WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END FROM vt0 WHERE (((((((NULL)|(x'')))OR(((x'')||(0.07557390290590449)))))OR(('-1328362730' IN ())))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((~ (vt0.c0)))) AND ((((vt0.c0) IS FALSE)))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) ISNULL))) FROM vt0 WHERE ((((NULL)) BETWEEN ((CASE WHEN 0.15175478881788296 THEN '7R' END)) AND (((0.39589101061637966 IN ()))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(NULL) OVER (), CASE WHEN MIN(vt0.c0) THEN ((vt0.c0)>>(vt0.c0)) ELSE (vt0.c0 IN ()) END, (CAST(vt0.c0 AS NUMERIC) IN ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (IFNULL(DISTINCT (x'' IN ()), ((0.24970854964098066) NOT BETWEEN (x'29e3') AND (0.04377815737694313)))); -- 0ms;
SELECT ALL (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ()) FROM vt0 NOT INDEXED WHERE (TYPEOF(((((0x718ef6d8)AND('-962646709')))OR(0.17263284252796107)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(x'7ee8')))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((TOTAL(vt0.c0)) IS FALSE), ((((vt0.c0 COLLATE NOCASE)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((((vt0.c0)) BETWEEN ((x'e66c')) AND ((vt0.c0))))) FROM vt0 WHERE (CASE WHEN HEX(NULL) THEN (('')>=(x'5884665d')) WHEN (('-793812525')<<(0.33009349614775374)) THEN CASE x'd6e6a509'  WHEN 0.3314042987323078 THEN NULL ELSE NULL END WHEN x'' THEN (('U')=('Uc<urUszI')) END) GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT MIN((((vt0.c0, NULL, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))), CAST(((('', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL) FROM vt0 WHERE (RTRIM(((0.6664266317281539)||(0Xffffffff9a9b7cc7)))); -- 0ms;
SELECT NTH_VALUE((NOT (CASE vt0.c0  WHEN 'vz_R' THEN vt0.c0 END)), ((((((vt0.c0) NOT NULL))OR(vt0.c0)))OR(((vt0.c0)&(vt0.c0))))) OVER () FROM vt0 WHERE (((('1266306177')&(0.7930092424734563)) IN ())); -- 0ms;
SELECT DISTINCT ((CAST('-1870615809' AS INTEGER)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0)>=(vt0.c0)))), CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS REAL) THEN UPPER(vt0.c0) END, ((CAST(1059988117 AS TEXT))>(CAST(vt0.c0 AS REAL))) FROM vt0 WHERE (x'8c39'); -- 0ms;
SELECT DISTINCT CAST(CASE vt0.c0  WHEN '-1953143373' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS INTEGER), CAST(TRIM(vt0.c0) AS REAL), ((((vt0.c0)!=(vt0.c0))) BETWEEN (x'') AND (((vt0.c0)GLOB(vt0.c0)))) FROM vt0 WHERE ((((((('-1e500')GLOB('i()do')))AND(json_remove('-1526230188', 0.5511641547885744, '{ ', 0.016865521287275698))))AND(CASE -1642708011  WHEN x'e07e' THEN x'' ELSE 2000678182 END))); -- 1ms;
SELECT DISTINCT ((NULL) IS TRUE) FROM vt0 WHERE (((((((-396729890) BETWEEN (0.7361130593220145) AND (x'84fe')))AND(NULL COLLATE BINARY)))OR(CAST('1302084142' AS REAL)))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0 WHERE ((NOT ((((('')OR(0.0642646933242631)))OR('+i'))))) GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND (LIKELY(DISTINCT vt0.c0))), ((LTRIM(vt0.c0))/((vt0.c0 IN ()))), vt0.c0; -- 0ms;
SELECT ALL CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN (vt0.c0 IN ()) THEN vt0.c0 ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (MAX('0.24159352034145087'))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)AND(0x790eca19)))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN CAST(vt0.c0 AS TEXT) THEN COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END, COALESCE(DISTINCT ((vt0.c0)IS(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL))AND(((vt0.c0)||('}N5I&!')))) FROM vt0 WHERE (((((x'')AND(x''))) IS TRUE)); -- 0ms;
