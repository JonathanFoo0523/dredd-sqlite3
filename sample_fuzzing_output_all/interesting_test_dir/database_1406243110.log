-- Time: 2024/06/07 07:28:43
-- Database: database10
-- Database version: 3.40.0
-- seed value: 1406243110
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 16ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.default_cache_size = -129933734; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('}N', 0.08086775439097127); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
END; -- 4ms;
END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1360452029 unordered noskipscan'); -- 1ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x''))<>((NULL)))  WHEN (~ ('545375148')) THEN ((NULL) BETWEEN ('-1360452029') AND ('-129933734')) END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (5.45375148E8, '}N', 0.2799340970108737), (NULL, 0.3706766369819129, 0.6883204146578645), ('nj)*', '1638811386', x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (-1833255657, x'5613'); -- 0ms;
PRAGMA mmap_size; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.busy_timeout = 0; -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 1ms;
END; -- 1ms;
PRAGMA foreign_keys = false; -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=-0.0, c1=0xfffffffff8415e5a WHERE 'U()-2!	'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (0.17842111866584964, x'', NULL); -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 6ms;
PRAGMA main.journal_mode = MEMORY; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.6234211697091362; -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA temp.journal_mode = WAL; -- 0ms;
PRAGMA main.optimize; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2121535848);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA main.stats; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1706362023); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN 0.507159648461465 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE 0.3706766369819129 END AS NUMERIC) FROM rt0;SELECT DISTINCT (CASE rt0.c1  WHEN 0.08086775439097127 THEN rt0.c2 END IN ()) FROM vt0 WHERE ((((('U()-2!	')OR((('132196434')>(132196434)))))OR((0.4427904282949936 IN ('nj)*'))))); -- 0ms;
SELECT (((rt0.c1)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN NULL WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)) AND (((~ (vt0.c0))))) FROM vt0, rt0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))  WHEN CASE rt0.c2  WHEN 1880160940 THEN NULL END THEN ((0.8738982055682705)|(vt0.c0)) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END END, json_valid(((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0))), ((NULL) IS TRUE) FROM vt0 WHERE (((NOT (2130447034)) IN ()));SELECT DISTINCT ((((rt0.c1)>>(rt0.c1))) NOT NULL) FROM rt0 WHERE ((NOT (''))) ORDER BY (rt0.c2 IN (rt0.c0, rt0.c2)) COLLATE BINARY ASC  NULLS FIRST, (((- (rt0.c1)))>(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS FIRST, CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c0)<<(vt0.c0)) END ASC  NULLS LAST;SELECT ALL ((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))OR(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))))OR(((rt0.c1) BETWEEN (x'') AND ('lk/NNyp\K')))))OR(0.6666337674106002)))AND((rt0.c2 IN ()))), MIN(((rt0.c0) ISNULL)), ((rt0.c0)/(CAST(rt0.c2 AS INTEGER))) FROM vt0;SELECT ALL ((AVG(rt0.c0))=((NOT (rt0.c0)))), '(*B*%k#鋷j', LOWER(CAST(vt0.c0 AS BLOB)) FROM vt0, rt0; -- 0ms;
SELECT ALL UNICODE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END), TOTAL(SQLITE_COMPILEOPTION_GET(NULL)) OVER (), ((vt0.c0 COLLATE RTRIM)OR((~ (vt0.c0)))) FROM vt0, rt0 WHERE (((('1880160940')) BETWEEN ((json_quote('0.6666337674106002'))) AND ((CASE WHEN '' THEN 0.39104365655162954 ELSE 0.546536806091769 END)))); -- 0ms;
SELECT HEX(DISTINCT GROUP_CONCAT(vt0.c0)), (((((rt0.c2)<=(rt0.c0))))>((((rt0.c0)-(rt0.c2))))), ((((((0Xffba1)OR(rt0.c2)))OR(rt0.c0)))&((vt0.c0 IN ()))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT load_extension((((rt0.c1))>=((vt0.c0))), ((NULL) NOTNULL)) FROM rt0, vt0 GROUP BY rt0.c2; -- 0ms;
SELECT DISTINCT ((((rt0.c1)AND(rt0.c0 COLLATE RTRIM)))AND(((vt0.c0) BETWEEN ('-1e500') AND (rt0.c1)))) FROM rt0, vt0 WHERE (CAST(((x'a754')AND(x'')) AS NUMERIC)) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))) BETWEEN (x'8631275c') AND (((rt0.c2)<<(rt0.c2))))  NULLS LAST, CASE WHEN (~ (rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()), (((rt0.c1, rt0.c1, vt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), '-1958679019', ((vt0.c0) IS FALSE))) AND ((CAST(vt0.c0 AS TEXT), CASE '(*b*%k#鋷j'  WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END, '0.6234211697091362'))), ((CAST(vt0.c0 AS TEXT))+(((rt0.c2) IS TRUE))) FROM rt0 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY) ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 END COLLATE NOCASE ASC  NULLS FIRST;SELECT ALL ((((rt0.c2)IS('-1666542857'))) ISNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0))>=((vt0.c0))), (~ (vt0.c0)), 2001203766))<=(((- (rt0.c2)), NULL, (- (vt0.c0))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '2041559700' THEN rt0.c2 END, ((x'5238')GLOB(vt0.c0)), CAST(rt0.c1 AS BLOB)))>((NULL, AVG(rt0.c0), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) FROM vt0, rt0; -- 0ms;
SELECT (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR('%d')) IN ()), (+ (CAST(rt0.c2 AS NUMERIC))), 0.4571926589230757 FROM vt0, rt0 WHERE (((((2121535848)OR('-1666542857' COLLATE NOCASE)))OR(((x'105f') IS TRUE)))) LIMIT 2077958924; -- 0ms;
SELECT (((rt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), 0.32197662871820454)) AND ((CAST(rt0.c0 AS INTEGER), ((rt0.c2)<('lk/NNyp\K')), rt0.c2 COLLATE RTRIM))), (((rt0.c1 IN ()))-(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), (((rt0.c2 IN ()))||(((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)))) FROM vt0, rt0 GROUP BY ((CAST(rt0.c0 AS REAL))=(NULL)), CAST((((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c1))) AS BLOB), ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))) NOTNULL) HAVING x'' ORDER BY UPPER(((rt0.c0)<(rt0.c1)))  NULLS LAST, ((CAST('NJ)*' AS NUMERIC)) IS FALSE) ASC, (- (CAST(rt0.c2 AS NUMERIC))) DESC; -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE RTRIM IN ()) FROM rt0, vt0 WHERE ((((CASE WHEN '2130447034' THEN '' WHEN x'' THEN 0.41500807146630925 WHEN x'2cd9c978' THEN NULL ELSE 0.6883204146578645 END, IFNULL(NULL, 'vJEp'), ((((x'2ef1')OR(NULL)))OR('0.08086775439097127'))))<=((((x'') IS TRUE), CASE WHEN '2041559700' THEN x'b344' ELSE 2041559700 END, ((((NULL)AND(NULL)))OR(0.8904780041821851)))))); -- 1ms;
SELECT DISTINCT x'7509' FROM rt0, vt0; -- 0ms;
SELECT ALL ((rt0.c2)*(vt0.c0 COLLATE BINARY)), (- ('䛺+jBf읐^땭')), CASE (+ (rt0.c2))  WHEN ((rt0.c0)>=(rt0.c0)) THEN GROUP_CONCAT(rt0.c2) ELSE rt0.c2 COLLATE NOCASE END FROM vt0, rt0; -- 1ms;
SELECT ALL ((((0.8506099728050805)%(rt0.c0))) NOT BETWEEN ((((vt0.c0, x'', rt0.c0))<((rt0.c2, rt0.c2, rt0.c2)))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) FROM rt0, vt0 WHERE ((((~ (NULL)))-((((('kHnr|om&-')OR(-1317335965)))OR(-1666542857))))); -- 0ms;
SELECT DISTINCT 0x7e12852, ((((((rt0.c0)<(vt0.c0)))AND(x'')))OR(((rt0.c1)%(vt0.c0)))), ((((rt0.c1) NOTNULL))>=(rt0.c1 COLLATE BINARY)), CAST(CAST(vt0.c0 AS INTEGER) AS TEXT), CAST(((rt0.c0)-(rt0.c0)) AS INTEGER) FROM vt0 WHERE ((~ (CASE WHEN '-286528337' THEN '-1741473655' END))) LIMIT 132196434 OFFSET -286528337;SELECT COUNT(((rt0.c1)<=(rt0.c2))) OVER (), ((rt0.c1 COLLATE RTRIM) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN '-1995838533' WHEN vt0.c0 THEN vt0.c0 END) AND (CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)), ((CAST(vt0.c0 AS REAL))OR(CAST(rt0.c1 AS TEXT))) FROM vt0, rt0 GROUP BY ((((((((((((rt0.c0 COLLATE NOCASE)OR(CAST(vt0.c0 AS INTEGER))))AND(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR(0.8104290100409417)))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (rt0.c0)))))AND(SQLITE_COMPILEOPTION_GET(rt0.c0))), (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, vt0.c0))<((vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c0))) COLLATE NOCASE, CASE rt0.c2  WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN CAST(vt0.c0 AS BLOB) END HAVING CASE 'Rrk*m'  WHEN (((vt0.c0, rt0.c1, rt0.c0))<((rt0.c1, rt0.c2, '&ౣ'))) THEN ((NULL)IS(rt0.c1)) END; -- 0ms;
SELECT CASE WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN (rt0.c1 IN ()) END, ((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE, vt0.c0 FROM vt0, rt0 WHERE (((((NULL)LIKE(x'b730')))GLOB(CAST('' AS REAL)))); -- 0ms;
SELECT DISTINCT MAX((((((((('W.')OR(vt0.c0)))AND(rt0.c1)))AND(0X3b68d940)))AND(rt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT ABS(DISTINCT ((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0))), CAST(CAST(rt0.c0 AS BLOB) AS INTEGER), COUNT((('132196434')+(rt0.c1))), CASE ABS(DISTINCT vt0.c0)  WHEN ((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(1515116080)))OR(vt0.c0)) THEN (x'' IN ()) END, GROUP_CONCAT(SUM(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FROM vt0;SELECT DISTINCT ((CAST(rt0.c2 AS REAL))>=(rt0.c1 COLLATE RTRIM)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((0.6558137323921431)GLOB(((rt0.c0)>>(NULL)))) FROM vt0 WHERE (CAST(((((((((NULL)OR('')))AND(NULL)))OR(1.88016094E9)))AND(NULL)) AS NUMERIC));SELECT (((((((((rt0.c1 IN (rt0.c0)))OR((- (rt0.c1)))))AND(((rt0.c0)>=(vt0.c0)))))AND(CASE 'Rrk*m'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR((NOT (rt0.c1)))) FROM rt0;SELECT ALL ((AVG(0Xffffffffaee92643)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))) AND ((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c2))!=((rt0.c1, rt0.c1, x'', vt0.c0, rt0.c1))))) FROM rt0, vt0 WHERE (CAST(((('\n{Hxhlw\8'))<=(('x䌡'))) AS INTEGER)); -- 1ms;
SELECT -1.29933734E8 COLLATE NOCASE FROM rt0 ORDER BY ((((rt0.c0 COLLATE NOCASE)OR(((((rt0.c2)OR(rt0.c0)))OR('0.32197662871820454')))))OR(((rt0.c1)<(vt0.c0)))) DESC;SELECT ALL MIN(((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)), NULL COLLATE RTRIM), ((((((((MIN(rt0.c1))AND((rt0.c2 IN (x'')))))OR(('-1741473655' IN (rt0.c0, vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))OR(((x'') ISNULL))), LIKELIHOOD(((rt0.c2)GLOB(vt0.c0)), 0.979331415389704) FROM rt0 WHERE (CASE WHEN ((NULL) BETWEEN ('263898960') AND (x'')) THEN ((x'')!=(x'60f5')) END);SELECT ALL MIN(LOWER(vt0.c0)) FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN x'' WHEN ((((((((x'')AND(0.17842111866584964)))OR('-855132819')))OR('B-n/%jT/')))OR(0xffffffffa374cc5c)) THEN (('-703308525') NOT BETWEEN ('旊tY0') AND (0.6234211697091362)) WHEN (NULL IN (0.8668548430321988)) THEN ((0.6234211697091362)*(0.711868524782135)) ELSE 0.892215678981102 COLLATE NOCASE END);SELECT ALL TOTAL('-1833255657') FROM vt0 NATURAL JOIN rt0 GROUP BY (NOT (rt0.c1)) COLLATE BINARY HAVING rt0.c0; -- 1ms;
SELECT DISTINCT ((rt0.c0)=(((rt0.c1)<(rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL MAX(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) FROM vt0, rt0 GROUP BY json_insert(vt0.c0 COLLATE NOCASE, NULL, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END), ((((((((((rt0.c0)<=(rt0.c0)))AND(((rt0.c2)|(rt0.c1)))))AND(((rt0.c2) IS FALSE))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))), CAST((((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0))) AS BLOB) HAVING (('0.2799340970108737')LIKE(vt0.c0)); -- 0ms;
SELECT DISTINCT MAX(((rt0.c0)!=(vt0.c0))), SUM(0x7efc0aba), CUME_DIST() OVER ( PARTITION BY ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt0.c0)))OR((((rt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, '', rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c1, NULL, rt0.c0, rt0.c1))))))OR((~ (rt0.c2)))), (+ (rt0.c2))) FROM vt0 WHERE (((('G' IN ())) BETWEEN (((NULL)>=('鞘.'))) AND (0.35762156406391765)));SELECT ALL ((((rt0.c1)-(vt0.c0))) BETWEEN (HEX(vt0.c0)) AND (TOTAL(rt0.c1))) FROM rt0 WHERE (CAST(LOWER(DISTINCT 0.609378344457086) AS INTEGER));SELECT ALL rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST((x'' IN ()) AS NUMERIC) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CASE 0xffffffff9fb75baf  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (TOTAL(vt0.c0)) AND (((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), rt0.c1, ((rt0.c0 COLLATE RTRIM)>=('{鈿W}pl')) FROM rt0;SELECT DISTINCT NULLIF(rt0.c2, (~ (rt0.c2))) FROM rt0, vt0; -- 1ms;
SELECT ALL TYPEOF(CAST(rt0.c1 AS REAL)) FROM rt0 LIMIT -962419804; -- 0ms;
SELECT ALL CAST(((rt0.c0)*(rt0.c2)) AS REAL), ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END)=(LIKE(vt0.c0, rt0.c1, 'l'))), (((NOT (NULL))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (0xffffffff9d97406b)) FROM vt0 WHERE (CAST((((0.8064845199052454))<((0.2294916940339946))) AS REAL));SELECT (((0.7596591574463843))<>((RTRIM(rt0.c0)))) FROM rt0; -- 1ms;
SELECT DISTINCT ((rt0.c1)>>((+ (rt0.c2)))) FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((NULL, rt0.c1, 'QV')) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, vt0.c0))))OR((vt0.c0 IN ()))))OR(((((((((rt0.c1)AND(x'')))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT PRINTF(rt0.c2) COLLATE NOCASE FROM vt0 WHERE (((((NULL) BETWEEN (0.17842111866584964) AND (-7.03308525E8)))/((((x'33a45738')) NOT BETWEEN ((-2086997292)) AND (('0.8104290100409417'))))));SELECT DISTINCT LIKELY(DISTINCT ((((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1))) FROM vt0;SELECT DISTINCT TRIM(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)), vt0.c0 COLLATE BINARY) FROM vt0 WHERE ((((((NULL, 0.6883204146578645, x''))<((x'', -1.615373393E9, '0.8668548430321988'))))AND(((0.5683663003263276)!=(x'')))));SELECT DISTINCT ((AVG(rt0.c1)) ISNULL), TIME(((rt0.c0)>>(vt0.c0)), ((vt0.c0)>=(rt0.c1)), LOWER(DISTINCT rt0.c1)), ((((vt0.c0) ISNULL))-(CAST(rt0.c0 AS BLOB))) FROM vt0, rt0 WHERE ((CAST('x瀟{3' AS TEXT) IN ())); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB) FROM rt0, vt0 WHERE ((((NULL IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT (((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END, rt0.c0, COUNT(*)))>=((CAST(rt0.c1 AS TEXT), ((rt0.c2) NOTNULL), ((rt0.c0)*(rt0.c1))))) FROM rt0, vt0; -- 0ms;
SELECT ALL (((((vt0.c0 IN ()))AND(TYPEOF(vt0.c0))))AND(CASE rt0.c2  WHEN x'' THEN rt0.c1 ELSE rt0.c2 END)) FROM vt0, rt0 WHERE (((NULL) BETWEEN (NULL) AND (0Xfffffffff687d89d)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))>=((((rt0.c0))>((rt0.c1))))) FROM rt0, vt0 GROUP BY (((vt0.c0)) NOT BETWEEN (('s-')) AND ((CASE WHEN vt0.c0 THEN rt0.c0 END))) HAVING (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))OR(UNLIKELY(DISTINCT rt0.c2))))AND(CAST(0.19806483806645103 AS BLOB))); -- 1ms;
SELECT DISTINCT ((((rt0.c0 COLLATE RTRIM)OR(CASE WHEN rt0.c1 THEN 'x䌡' WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 END)))OR((+ (rt0.c2)))) FROM vt0, rt0 WHERE ((((((x'461fdbdc' IN ()))OR(242288752 COLLATE RTRIM)))AND(('714796190' IN ())))); -- 0ms;
SELECT ALL COALESCE('p3E4?', (NOT (rt0.c0))), AVG(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END) OVER (), rt0.c0 FROM vt0, rt0 WHERE (CASE 0.5378343459439654 COLLATE RTRIM  WHEN ((x'') IS FALSE) THEN CASE WHEN -350186945 THEN 0.7428745343200133 ELSE x'' END END); -- 0ms;
SELECT ALL ((((GROUP_CONCAT(vt0.c0))AND(((rt0.c2)+(rt0.c1)))))OR(rt0.c2)) FROM rt0 INTERSECT SELECT DISTINCT (AVG(rt0.c1) IN ()) FROM rt0, vt0 WHERE (((('UN**[' IN ())) NOTNULL));SELECT ALL (+ (rt0.c0)) FROM rt0 WHERE ((((((0.8996589475065341) NOTNULL)))!=((((x'') IS TRUE))))); -- 0ms;
SELECT ALL ((x'' COLLATE NOCASE) NOT NULL) FROM rt0, vt0 WHERE ((NULLIF(x'd673', x'') IN ())); -- 0ms;
SELECT DISTINCT '' FROM vt0, rt0 WHERE (((('*')) BETWEEN (((((('9K몔U{쉪')AND(x'')))AND('~(')))) AND (((((('1946127284')AND(0X61ae46fa)))AND(0.8987681380684576)))))) GROUP BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c1)) WHEN 0x2e900f0a THEN ((((rt0.c2)AND(rt0.c0)))AND('')) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN x'' END END HAVING (((((('') BETWEEN (rt0.c2) AND (rt0.c1)))OR(vt0.c0)))AND((- (rt0.c2)))); -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c2)|(rt0.c1))))) FROM rt0 NOT INDEXED;SELECT DISTINCT (((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1))))<((CAST(rt0.c0 AS REAL)))), CASE WHEN vt0.c0 COLLATE NOCASE THEN TOTAL(rt0.c0) ELSE rt0.c2 COLLATE RTRIM END, ((((vt0.c0) ISNULL)) BETWEEN (((rt0.c0)>>(9.68091418E8))) AND (LOWER(rt0.c2))), (((rt0.c0 IN (rt0.c1))) NOTNULL), ((LIKELY(DISTINCT rt0.c1))>>((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) FROM vt0 WHERE (((((x'')<=(x''))) BETWEEN ((+ (1.000686369E9))) AND ((((0.7697391166600844, NULL, x'0d9b')) BETWEEN ((NULL, x'', NULL)) AND (('gqs{G', '', x''))))));SELECT DISTINCT ((((rt0.c0 IN ())))<>((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) FROM rt0;SELECT ALL MIN((NOT (vt0.c0))) COLLATE RTRIM FROM vt0, rt0 ORDER BY (+ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS FIRST LIMIT 1000686369; -- 0ms;
SELECT ALL (((rt0.c2, vt0.c0, rt0.c2)) BETWEEN (((- (vt0.c0)), ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)), (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((NULL, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))))) AND ((COUNT(rt0.c2), ((' M')*(rt0.c0)), ((rt0.c1)<<(x''))))) FROM vt0, rt0 WHERE (((x'') ISNULL)); -- 0ms;
SELECT DISTINCT 0.49797531619262614 FROM vt0, rt0; -- 0ms;
SELECT ((((rt0.c1)GLOB(rt0.c0)))LIKE(0Xffffffffd4fa0bfc)), ((CAST(vt0.c0 AS INTEGER))OR((+ (rt0.c0)))), ((((x'') IS FALSE))&(((rt0.c0)<(rt0.c1)))), (((((((rt0.c0))<((rt0.c0))))AND((((vt0.c0, vt0.c0, rt0.c0))<>((vt0.c0, vt0.c0, rt0.c0))))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))), CAST((NOT (rt0.c2)) AS REAL) FROM vt0, rt0 WHERE ('-253364018'); -- 0ms;
SELECT (((rt0.c2)) NOT BETWEEN (((vt0.c0 IN (rt0.c0, vt0.c0)))) AND ((rt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT json_extract(((((((((0.7637724686448245)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)), ((rt0.c2) IS FALSE)) FROM vt0;SELECT ALL ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND ('2077958924')), x'', (~ ((~ (rt0.c0)))) FROM rt0;SELECT FIRST_VALUE(CASE IFNULL(DISTINCT rt0.c0, rt0.c0)  WHEN 0.2962410964044946 THEN CAST(rt0.c2 AS TEXT) END) OVER ( ORDER BY rt0.c1 ASC  NULLS FIRST, (((((('1280271309') NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(CASE vt0.c0  WHEN rt0.c1 THEN x'd201' WHEN rt0.c1 THEN rt0.c0 WHEN '1515116080' THEN rt0.c2 END)))AND(((0.4054636631691815)<=(rt0.c0)))) ASC) FROM rt0 GROUP BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN ((((vt0.c0, rt0.c0, rt0.c0))<((rt0.c2, 0.4236132189918692, rt0.c2)))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE x'86d6' END)) HAVING 9.96727104E8;SELECT DISTINCT (((((rt0.c0)!=(rt0.c1))))!=((rt0.c2 COLLATE NOCASE))) FROM rt0, vt0; -- 0ms;
SELECT GROUP_CONCAT(CAST(vt0.c0 AS BLOB)) FROM rt0, vt0 WHERE ((((((((((0.4054636631691815)AND('263898960')))OR('&.e')))AND(NULL)))AND(NULL)) IN (CASE -1.741473655E9  WHEN 0.46957479738756625 THEN '' END))); -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('809622313')) IN ()) FROM vt0 ORDER BY (~ (rt0.c1)) COLLATE NOCASE;SELECT COALESCE(DISTINCT ((('')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), rt0.c0 COLLATE NOCASE) FROM rt0 ORDER BY CAST(((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(x'')) AS INTEGER) LIMIT -2107509513 OFFSET 2121535848; -- 0ms;
SELECT DISTINCT (('{')|(MIN(vt0.c0))), AVG(GROUP_CONCAT((NOT (vt0.c0)))), ((((((vt0.c0) NOTNULL))OR('' COLLATE RTRIM)))AND(ABS('{yv'))) FROM vt0, rt0;SELECT DISTINCT ((rt0.c1 COLLATE BINARY)>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) FROM vt0, rt0 WHERE (((((((-606587267)||(NULL)))AND(((NULL)<(0.08165501870642033)))))OR(0.35762156406391765 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c1))) AND (((rt0.c0)/(rt0.c0)))) FROM rt0, vt0 WHERE ('<vZOs'); -- 1ms;
SELECT DISTINCT ((('''p') BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) FROM rt0, vt0; -- 1ms;
SELECT ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((rt0.c1 IN (rt0.c0, rt0.c0))) AND (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((CASE x'79ac'  WHEN 0.41500807146630925 THEN 0.5571054540024392 WHEN 0.9638908098707843 THEN 0X6c57acc8 WHEN NULL THEN 0.9802695426274441 ELSE x'ffd8' END) NOTNULL));SELECT ALL (((('-286528337') IS TRUE)) NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT (~ ((rt0.c0 IN ()))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, rt0 WHERE (json_type((((('-1774923127')OR(-1.552626596E9)))AND(0X5829f8cd)))) ORDER BY ((CASE rt0.c1  WHEN vt0.c0 THEN x'92f9' END)IS NOT(((rt0.c1)/(vt0.c0)))) ASC, (((rt0.c2 IN ())) NOT NULL) DESC; -- 0ms;
SELECT DISTINCT 0.15983240729179138, (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0)<<(rt0.c0)), HEX(rt0.c1)))<((((rt0.c2) NOT BETWEEN (0.4571926589230757) AND (x'')), ((vt0.c0)+(NULL)), ((((rt0.c0)OR(vt0.c0)))OR(rt0.c0))))), (((0.2294916940339946 COLLATE RTRIM, COUNT(*), ((((rt0.c2)OR(vt0.c0)))AND(vt0.c0))))>=((((NULL)-(vt0.c0)), ((((((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)), '1747998444'))) FROM vt0, rt0; -- 1ms;
SELECT ALL UPPER((((vt0.c0))>=((NULL)))) FROM vt0, rt0; -- 0ms;
SELECT ((rt0.c2 COLLATE BINARY) NOT NULL) FROM rt0, vt0 WHERE ((((((x'') BETWEEN (NULL) AND (x'6a44'))))>(((('545375148')IS NOT('-1962614322')))))); -- 0ms;
SELECT DISTINCT ((rt0.c0) IS TRUE) FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN '-703308525' ELSE '-109732728' END)IS(x''))) LIMIT -693858468 OFFSET 1225579367; -- 0ms;
SELECT rt0.c2 FROM vt0 WHERE (((((-9.40052971E8) BETWEEN (0.9712777104739149) AND (NULL)))>(CAST('-72043223' AS REAL)))) LIMIT 968091418 OFFSET -253364018;SELECT DISTINCT GROUP_CONCAT(((vt0.c0) ISNULL)) OVER (), ((x'')<(GROUP_CONCAT(vt0.c0))), ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))OR((((vt0.c0))<=((rt0.c1))))) FROM rt0 WHERE ((((((((((0xffffffff9caa92f7 IN (x'', NULL)))OR(((((((((x'4670')AND(0.036932247359488524)))AND(NULL)))OR('1719883757')))AND(0.507159648461465)))))AND(IFNULL('', NULL))))OR(((NULL) IS FALSE))))AND(((('MRR', '-C', '-796540310', 1008806280, NULL)) NOT BETWEEN ((0.7986356608023812, 'JvOfy', x'', '', NULL)) AND ((-1086756364, 0.8201853659544177, 0.9280921929943486, NULL, 0.711614606484976))))));SELECT LIKELY(DISTINCT ((((((((rt0.c0)AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(vt0.c0))) FROM vt0 INTERSECT SELECT DISTINCT rt0.c2 FROM rt0, vt0 WHERE ((~ (((-611088530)<>('2041559700')))));SELECT DISTINCT '1225579367', (((rt0.c0 IN (rt0.c0))) NOTNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY FROM vt0 ORDER BY HEX(DISTINCT CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0.37146527712392186 END)  NULLS LAST;SELECT DISTINCT (((vt0.c0)) BETWEEN ((SQLITE_COMPILEOPTION_USED(vt0.c0))) AND ((NULL))) FROM rt0 WHERE (((CASE WHEN 0.08516663671728641 THEN x'' END)IS(NULL)));SELECT ALL ((((rt0.c0)-(rt0.c1)))%(((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR('2U')))AND(rt0.c2)))) FROM rt0 WHERE ((((('0.4236132189918692')>>('')))*((((((((('밮d0oBrkNW')OR(NULL)))OR(0.0)))AND(0Xb7b1ee)))AND('9<'))))) GROUP BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END IN (vt0.c0 COLLATE RTRIM)), (((((rt0.c2) IS FALSE)))<=((''))), ((((rt0.c1 IN ())))=(((vt0.c0 IN (rt0.c1, rt0.c0))))) HAVING (- (NULLIF(vt0.c0, vt0.c0)));SELECT ((((vt0.c0)|(rt0.c1))) IS FALSE), ((rt0.c1) IS TRUE), (((((((((+ ('1674112857')))OR(rt0.c2)))AND(((0.7697391166600844)+(rt0.c0)))))OR('0.41500807146630925' COLLATE NOCASE)))AND(((rt0.c0)<=(rt0.c1)))) FROM rt0;SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(vt0.c0)))AND(x''))) NOT BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE WHEN rt0.c2 THEN '-1618311847' WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)<<(rt0.c2)))AND(((rt0.c0)&('885783947')))))OR(MIN(0.2799340970108737))) FROM vt0 WHERE ((NOT ((NOT (0.6896803968649462)))));SELECT (((0.2022414653522342, AVG(vt0.c0), vt0.c0))>((((vt0.c0)<(vt0.c0)), GROUP_CONCAT(rt0.c1), vt0.c0 COLLATE RTRIM))), ((((((((((rt0.c2) ISNULL))OR(((vt0.c0) NOTNULL))))AND(GROUP_CONCAT(NULL))))AND((vt0.c0 IN (vt0.c0)))))AND(CAST(0.5408953283897102 AS BLOB))), (((('')OR(MIN(rt0.c0))))AND(1e500)), CUME_DIST() OVER (), (((rt0.c1)IS NOT(rt0.c0)) IN ()) FROM vt0, rt0 WHERE (((((((0Xffffffffa374cc5c)OR('-855132819')))OR(-340392905)))/((((x''))<((0.9784403417282692)))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER))>=(ABS(DISTINCT -1180258944))) FROM vt0 WHERE (((((((2.6389896E8) NOTNULL))OR(x'')))OR(((('S*5*xG韐L/')) BETWEEN ((-1201399135)) AND ((x'')))))) GROUP BY ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))/(2.130447034E9));SELECT DISTINCT rt0.c1, (((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)) IN ()), 0.25837695970169894 FROM vt0 WHERE ((NOT ((('2077958924') NOT NULL))));SELECT ALL (((rt0.c1)) BETWEEN ((((((NULL)AND(rt0.c1)))OR('旊tY0')))) AND (((- (vt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (('1047457')) AND ((HEX(vt0.c0)))) FROM vt0, rt0 WHERE (((((((((NULL)OR(x'')))AND('0.6234211697091362')))OR(0.39104365655162954)))AND('h?')) COLLATE BINARY); -- 1ms;
SELECT ALL (~ (((rt0.c2)<=(rt0.c0)))) FROM vt0 WHERE ((~ (IFNULL(DISTINCT -1.651031957E9, 0.3474972394718001))));SELECT ALL NULL FROM vt0, rt0; -- 0ms;
SELECT ((TOTAL(rt0.c1))/(CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)) FROM vt0, rt0 WHERE ((('1236343744')/('|}a(')) COLLATE RTRIM); -- 0ms;
SELECT ALL LIKELY(DISTINCT ((((rt0.c2)AND(rt0.c2)))AND(vt0.c0))), ((TYPEOF(vt0.c0))%(((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))), SUM(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(vt0.c0))) FROM vt0 WHERE (((((CASE WHEN '-917592960' THEN x'' ELSE NULL END)AND(HEX(DISTINCT -2033830005))))AND('-1904307301')));SELECT ALL COUNT(UPPER(DISTINCT rt0.c2)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN -1056738971 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) FROM vt0, rt0 WHERE (((-1.666542857E9) NOT BETWEEN (0xffffffffdbd8367d) AND (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((NULL) ISNULL)) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c0 COLLATE BINARY)) FROM vt0, rt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((NOT (rt0.c0))) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))) ASC, (NOT (rt0.c2)); -- 0ms;
SELECT (- (rt0.c2)) COLLATE BINARY FROM rt0 LIMIT -1457626501; -- 0ms;
SELECT ALL (((rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c0)<=(rt0.c2))))) FROM vt0 WHERE ((NULL IN (1.00880628E9)) COLLATE BINARY);SELECT DISTINCT (+ ((rt0.c2 IN ()))) FROM rt0, vt0 WHERE (((((x'') NOTNULL)) IS TRUE)) ORDER BY ((CAST(rt0.c0 AS REAL)) BETWEEN (NULL COLLATE BINARY) AND (((0xffffffffefb86c6a)<=(rt0.c0))))  NULLS FIRST; -- 1ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL 'B553j咽<mS' FROM vt0 LIMIT -1580120304; -- 0ms;
SELECT ALL AVG((((vt0.c0, rt0.c1, rt0.c1))<((rt0.c2, vt0.c0, rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT NULL, (NOT (NULL COLLATE BINARY)), ((('kQH/?[?q')) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND ((rt0.c1 COLLATE RTRIM))) FROM rt0 WHERE (load_extension(2121535848)) LIMIT -1615373393 OFFSET 1132575790;SELECT DISTINCT (((vt0.c0 IN ()))<(((vt0.c0) IS FALSE))) FROM rt0;SELECT DISTINCT CASE ((vt0.c0)==(vt0.c0))  WHEN (rt0.c2 IN ()) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (NULL)) END FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c2 COLLATE RTRIM, LAST_VALUE((('') IS FALSE)) OVER ( GROUPS  CURRENT ROW), CASE WHEN ((vt0.c0)%(vt0.c0)) THEN rt0.c0 WHEN (+ (rt0.c0)) THEN (NOT (vt0.c0)) WHEN (- (rt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN '	擔w.' THEN rt0.c1 END END FROM vt0 WHERE (MIN((('xl GAp')||(NULL)), (('-855132819')>>(x'')), (- (x'')), 0.1538782822360858));SELECT DISTINCT (+ (TOTAL(rt0.c2))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))) NOT NULL) FROM rt0, vt0 LIMIT -1235562940; -- 1ms;
SELECT DISTINCT (((rt0.c2) IS TRUE) IN ()) FROM vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((AVG(vt0.c0))) AND ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))))) FROM rt0;SELECT ALL CASE rtreenode(rt0.c2, rt0.c1)  WHEN (x'672c' IN ()) THEN NULL END, DENSE_RANK() OVER ( ROWS  CURRENT ROW EXCLUDE TIES), CASE WHEN ((x'')*(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) ELSE COALESCE(DISTINCT rt0.c0, rt0.c0) END FROM vt0;SELECT CASE WHEN ((0X14aaad83)>=(NULL)) THEN (vt0.c0 IN ()) END, ((CAST(rt0.c1 AS INTEGER))%(((rt0.c1)LIKE(vt0.c0)))), (CAST(rt0.c2 AS INTEGER) IN (((rt0.c2)AND(rt0.c2)))), COUNT(SUM(rt0.c0 COLLATE RTRIM)), (((rt0.c1 IN ())) NOT BETWEEN (TOTAL(vt0.c0)) AND (((vt0.c0) IS FALSE))) FROM rt0;SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>=(((rt0.c2)/(rt0.c1)))) FROM rt0, vt0 WHERE (((((185181282)=(0.8570331153867107))) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (((('-1552626596'))<=(('-1629149313')))))); -- 1ms;
SELECT DISTINCT ((((MAX(rt0.c1))OR((((1534949942, rt0.c2, rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c0, rt0.c1, rt0.c1))))))OR(vt0.c0 COLLATE NOCASE)) FROM rt0, vt0 WHERE (((CASE WHEN '897558994' THEN NULL ELSE '346729859' END)GLOB((NOT (-1.618311847E9))))); -- 0ms;
SELECT DISTINCT (- (CAST(vt0.c0 AS INTEGER))) FROM vt0, rt0; -- 0ms;
SELECT ALL UNLIKELY(DISTINCT CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) FROM vt0, rt0 WHERE ((('-1833255657' COLLATE RTRIM)>=(STRFTIME(x'', NULL, 0Xffffffffcb69c5b8)))); -- 0ms;
SELECT rt0.c0, ((((rt0.c2)IS(vt0.c0))) IS FALSE), (- (((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))) FROM rt0 WHERE (((((0xffffffff8b04e1ce) NOT BETWEEN ('s쬨yV') AND (x''))) BETWEEN ('1060410688') AND (((NULL) ISNULL)))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)), rt0.c1 ASC;SELECT ALL rt0.c1 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT LAG(CASE WHEN rt0.c0 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) ELSE -416027774 END, NULL, ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ((+ (rt0.c1))) AND (rt0.c2 COLLATE RTRIM))) OVER () FROM rt0 WHERE ((NOT (NULL))) GROUP BY (((rt0.c1 COLLATE NOCASE, rt0.c0, CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) LIMIT 1601357228 OFFSET 283084140; -- 0ms;
SELECT TRIM(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END, CASE WHEN '*GM*R5R-' THEN rt0.c0 END) FROM rt0 LIMIT 601750752 OFFSET -608782701;SELECT COUNT(*), GROUP_CONCAT(COUNT(*)) COLLATE RTRIM, (((IFNULL(DISTINCT rt0.c1, rt0.c0)))>=((rt0.c0))), COUNT(*) FILTER(WHERE ((CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)OR((+ (rt0.c2))))) OVER (), CAST(UPPER('0.7697391166600844') AS INTEGER) FROM vt0 WHERE (((('-606587267' COLLATE BINARY))>=((((1277671262) NOTNULL)))));SELECT DISTINCT (((((rt0.c1)LIKE(vt0.c0))))==(((+ (rt0.c1))))) FROM vt0 LIMIT -721810436;SELECT ALL COUNT(((((((((rt0.c0)OR(rt0.c1)))OR(NULL)))AND(rt0.c0)))OR(vt0.c0))), ('-962419804' IN (AVG(rt0.c2), (~ (rt0.c0)))), GROUP_CONCAT((((rt0.c2))<=((rt0.c2)))) FROM vt0, rt0 WHERE (((('1781679376')) BETWEEN ((0.8570331153867107 COLLATE NOCASE)) AND ((((x'') NOT BETWEEN (NULL) AND (1674112857)))))); -- 0ms;
SELECT DISTINCT json_array_length((rt0.c0 IN ()), LAST_INSERT_ROWID()), LEAD((((((vt0.c0))>((vt0.c0)))) NOT NULL), ((((((vt0.c0))>((vt0.c0)))))<(('-1745478060'))), ((((vt0.c0)||(NULL)))!=((NOT (vt0.c0))))) OVER (), (NOT ((rt0.c1 IN ()))) FROM vt0 WHERE (((NULL)%(NULL)) COLLATE RTRIM) LIMIT -1118913883 OFFSET -1535241760; -- 0ms;
SELECT ((vt0.c0)LIKE(rt0.c2)) COLLATE BINARY FROM vt0;SELECT DISTINCT AVG((2.130447034E9 IN ())) OVER (), CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS INTEGER), COUNT((('-2047027598') IS FALSE)) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))) NOT NULL), (((rt0.c0)AND(rt0.c2)) IN (CASE WHEN rt0.c1 THEN rt0.c1 END)), json_array_length(((vt0.c0)GLOB(rt0.c1))) FROM rt0, vt0 GROUP BY (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) IN (CASE rt0.c2  WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN -5.98642657E8 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE '2001203766' END, 0.34893770591979545)) HAVING ((CAST(rt0.c1 AS BLOB))IS NOT(CASE WHEN rt0.c0 THEN rt0.c0 ELSE 0.46957479738756625 END)) ORDER BY CAST(CAST(rt0.c0 AS NUMERIC) AS INTEGER) LIMIT -1825525248 OFFSET -837535278; -- 0ms;
SELECT ALL ((CASE NULL  WHEN rt0.c0 THEN vt0.c0 END) NOTNULL), CAST(CAST(rt0.c0 AS TEXT) AS REAL), 0.3147653438222039 FROM vt0 UNION SELECT DISTINCT ((COUNT(rt0.c0)) BETWEEN (vt0.c0) AND (rt0.c2 COLLATE BINARY)), rt0.c2, ((CAST(rt0.c0 AS BLOB))IS NOT((((rt0.c1))==((NULL))))) FROM vt0, rt0 WHERE ((((((((((x'a05b' IN ()))AND('95719941')))AND((('185181282')*('')))))AND(CAST('714796190' AS INTEGER))))OR(((x'') NOT NULL)))) GROUP BY CAST(2130447034 AS TEXT) HAVING (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))*(json_extract(vt0.c0, rt0.c0)));SELECT (((vt0.c0))<>((rt0.c0))) COLLATE RTRIM, ((((rt0.c0)*(rt0.c1))) ISNULL), (((rt0.c0) ISNULL) IN ()) FROM vt0;SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN ((('1000686369')>>(rt0.c0))) AND (ABS(vt0.c0))) FROM rt0, vt0 WHERE ((NOT ((('-1201910395') IS TRUE)))); -- 0ms;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY CAST(((rt0.c2)<<(vt0.c0)) AS NUMERIC), ('-1936590063' IN (rt0.c1 COLLATE RTRIM)), rt0.c1 HAVING CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))  WHEN x'5064' THEN COUNT(*) END; -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN 'ls旊㈪D' THEN vt0.c0 END IN ()), (((- (vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (rt0.c0 COLLATE NOCASE)), (rt0.c1 COLLATE RTRIM IN ()) FROM rt0 NATURAL JOIN vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (COUNT(vt0.c0)) AND (CAST(rt0.c0 AS TEXT))) FROM rt0 WHERE (LOWER(DISTINCT ((((((((2145934346)AND('-1535582623')))AND(0.9616553931133782)))AND(NULL)))OR(NULL))));SELECT MIN(UPPER(rt0.c1)) FROM rt0 ORDER BY ((((rt0.c2)>(rt0.c0))) NOTNULL) DESC, ((((((rt0.c0)=(rt0.c2)))AND(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST, (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST LIMIT 1854644241; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0 WHERE (LOWER(((NULL)IS NOT(0.9616553931133782)))) GROUP BY CAST(((rt0.c0)LIKE(rt0.c1)) AS TEXT);SELECT DISTINCT (((((((('')AND(AVG(rt0.c1))))AND((NOT (rt0.c1)))))AND(rt0.c2)))AND(rt0.c2)), (- (UNLIKELY(rt0.c2))), ((((CAST(vt0.c0 AS BLOB))OR((- (vt0.c0)))))AND(CASE 'hL'  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)) FROM rt0;SELECT DISTINCT GROUP_CONCAT((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) FILTER(WHERE CAST(((((0.9102929096614368)AND(0.32035878965208575)))AND(vt0.c0)) AS TEXT)) OVER () FROM rt0 WHERE (NULL);SELECT DISTINCT ((((vt0.c0) IS TRUE))>(((vt0.c0)OR(NULL)))) FROM rt0, vt0 LIMIT -839614061 OFFSET -764794983; -- 0ms;
SELECT ALL ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))) IS TRUE), (+ (LIKE(rt0.c0, rt0.c1, '-'))), ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) IN ()) FROM vt0;SELECT ALL ((((rt0.c1)<=(rt0.c2))) BETWEEN (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1))) AND (((rt0.c2)&(vt0.c0)))) FROM vt0, rt0 WHERE ((((CASE WHEN 1412158810 THEN -1552626596 WHEN 1.534949942E9 THEN 0.3908459806173631 WHEN '-1552626596' THEN NULL END, ((((((((NULL)AND(NULL)))AND(1280271309)))AND(0.2962410964044946)))OR('1492583999')), (((NULL)) BETWEEN (('-1497280577')) AND ((569249001)))))>=((((0.8738982055682705)<=(NULL)), '' COLLATE RTRIM, ((((((((x'')AND('1102766695')))AND(NULL)))AND(x'')))AND(x'2f4b')))))) ORDER BY ((((CASE WHEN rt0.c0 THEN rt0.c0 END)AND((rt0.c0 IN ()))))OR(COALESCE(DISTINCT rt0.c1, rt0.c2)))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2)))) AND ((vt0.c0 IN (vt0.c0)))), SUM(((vt0.c0)<(rt0.c1))), (+ (((rt0.c2)||(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ALL (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))<(((((rt0.c2, rt0.c1, rt0.c0))>=((rt0.c1, vt0.c0, rt0.c2)))))) FROM vt0 WHERE (((STRFTIME(x'', 'i#[봗0ꬿRmF', NULL))/(((((((((NULL)OR(0.8162453826111873)))AND(x'')))AND(529474771)))AND(x'8f6c')))));SELECT (~ ((- (vt0.c0)))) FROM rt0 WHERE ((('+cf')||('781192970')) COLLATE BINARY) ORDER BY CASE WHEN '0.39104365655162954' THEN json_quote('1236343744') END ASC  NULLS FIRST;SELECT (((((('%') BETWEEN (rt0.c0) AND (rt0.c1)))AND((rt0.c1 IN (rt0.c0)))))OR(CAST(rt0.c2 AS BLOB))) FROM vt0, rt0 WHERE (((((NULL)>>(NULL)))&(((((-1598266645)OR(0.923889268931716)))AND(NULL))))); -- 0ms;
SELECT ALL TRIM(DISTINCT vt0.c0) FROM vt0; -- 0ms;
SELECT DISTINCT rt0.c2, rt0.c1, GROUP_CONCAT((~ (rt0.c1))), json_array_length(((rt0.c2)=(rt0.c0)), (rt0.c2 IN ())), LOWER(CAST('-796540310' AS NUMERIC)) FROM vt0, rt0 WHERE ((((((((((('G')OR('')))AND('-1457626501')))OR(x'')))OR('1880160940')))<=(((0.9785438502364173)>>(1.2038638E7))))); -- 0ms;
SELECT ALL UPPER(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) FROM rt0 WHERE (HEX((((('815954012')OR(0.37146527712392186)))AND(0.9371061481977292))));SELECT DISTINCT TOTAL((NULL IN ())) OVER () FROM vt0 WHERE ((((-5.98642657E8)) NOT BETWEEN (((((('0.711868524782135')OR(x'')))OR('433-617592891315270426T2997250520947733271:743:-3039250281038901148-7934359050693118826--7469089257839297841:1695--867609925512054502 K8')))) AND ((((x'')IS NOT(NULL)))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c1))) AND ('{yv'))  NULLS FIRST, CAST(CAST(vt0.c0 AS REAL) AS REAL) ASC;SELECT 0.6263247671591836 FROM rt0, vt0; -- 1ms;
SELECT ALL ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c1) ISNULL))) FROM vt0;SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))>>(CASE WHEN x'f084' THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0, vt0; -- 0ms;
SELECT ALL (SUM(rt0.c2) IN (((rt0.c0)LIKE(rt0.c2)))), x'', CAST(rt0.c1 AS INTEGER) FROM vt0, rt0 WHERE (TRIM(DISTINCT (NOT (NULL)))); -- 0ms;
SELECT ((-2.086997292E9)&(NULL)) COLLATE BINARY FROM rt0 WHERE (((('宯3㆗<0') NOT NULL) IN (((0.4571926589230757) NOT BETWEEN ('Z	zK緊') AND ('582567133')), NULLIF(NULL, '297758907')))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)!=(rt0.c0)))<<(rt0.c0)), NULLIF(rt0.c0, ((vt0.c0) BETWEEN (1747998444) AND (vt0.c0))), MAX(CAST(rt0.c0 AS REAL)) FROM rt0 WHERE (LIKELIHOOD(LIKELY(DISTINCT ''), 0.9686994556169993)) GROUP BY (+ (rt0.c1)) COLLATE BINARY, CAST(((rt0.c2)<=(vt0.c0)) AS BLOB), rt0.c1;SELECT (vt0.c0 IN ()), SUM(CAST(rt0.c2 AS INTEGER)) OVER (), ((~ (rt0.c0)) IN ()) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT COUNT(*) FROM rt0 ORDER BY (((NULL IN (rt0.c1)))GLOB(rt0.c0 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN (rt0.c2, vt0.c0))) BETWEEN (NULL) AND (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE x'e0b6' END)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))AND((((rt0.c2))>((rt0.c2))))) FROM vt0 GROUP BY (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))IS(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) HAVING '';SELECT vt0.c0 COLLATE BINARY, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) COLLATE BINARY, 0X3245c1ea FROM rt0 WHERE (((((((0X14aaad83, NULL, 0X3041db29))>((NULL, 0.4571926589230757, '115395269')))))>((((0x1c7c9ac3)>=('-855132819'))))));SELECT DISTINCT ((MAX(rt0.c1)) ISNULL), (((rt0.c1 IN ('%.X')))==((rt0.c1 IN (rt0.c0)))), CAST(CAST(rt0.c0 AS REAL) AS BLOB) FROM vt0;SELECT DISTINCT (CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN ()) FROM rt0; -- 0ms;
SELECT ALL ((MIN(rt0.c0))|((NOT (rt0.c0)))) FROM rt0 WHERE (((x'')+('V)Qs8n' COLLATE NOCASE))); -- 1ms;
SELECT ALL CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT) FROM vt0 WHERE ((json_extract(-1.180258944E9, x'') IN ((((('p<')OR('-1594158478')))OR(NULL)))));SELECT ALL COUNT(*) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)>>(rt0.c0)) AS BLOB) FROM vt0, rt0 WHERE (((('-855132819'))>=(('DlE'))) COLLATE BINARY) GROUP BY ((((((((((rt0.c0) IS FALSE))AND(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE 'jQ' END)))OR(HEX(rt0.c1))))AND((('-606587267')||(rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)) ORDER BY (((- (vt0.c0)))/(((x'') BETWEEN (rt0.c2) AND (vt0.c0)))); -- 0ms;
SELECT ((CAST(rt0.c0 AS BLOB))*((vt0.c0 IN (rt0.c0)))) FROM vt0, rt0 ORDER BY (((- (rt0.c2)))!=(((rt0.c0)+(vt0.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT NULL)) BETWEEN ((- (rt0.c0))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))), ((UPPER(vt0.c0))IS(MAX(rt0.c2))), (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS TRUE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((~ (x'')))>(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT (((rt0.c2 IN ()))||(((rt0.c2) ISNULL))) FROM vt0 WHERE ((((((((('J 2')AND(-1651031957)))AND(-2.86528337E8)))AND(((0xffffffffe733eb82)-('-1963162654')))))OR(((0.6666337674106002)>(x'')))));SELECT DISTINCT ((((((((((x'')OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0))) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c0 AS BLOB))) FROM vt0, rt0; -- 0ms;
SELECT '', CASE WHEN ((rt0.c2)AND(vt0.c0)) THEN CAST(rt0.c1 AS BLOB) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c2) NOTNULL) WHEN (rt0.c2 IN ()) THEN ((vt0.c0)/(rt0.c1)) ELSE (vt0.c0 IN ()) END, GROUP_CONCAT(((rt0.c2) ISNULL)) OVER () FROM vt0 ORDER BY (- (((vt0.c0) NOT NULL)))  NULLS LAST;SELECT ALL rt0.c2 FROM vt0 WHERE ((NOT (CASE -1666542857  WHEN 'Iwvj[W' THEN x'2941804d' END))) LIMIT 242288752;SELECT DISTINCT (((((((('-666049836')OR(((rt0.c0) IS FALSE))))OR(rt0.c1)))AND(rt0.c0)))AND((rt0.c0 IN ()))), ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(CAST(rt0.c1 AS INTEGER))), SUM(rt0.c0 COLLATE NOCASE COLLATE NOCASE) OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL (CASE rt0.c2  WHEN rt0.c2 THEN 'd' ELSE vt0.c0 END IN ()) FROM rt0, vt0 WHERE ((((('2106190447')OR(NULL)))OR(NULL)) COLLATE BINARY); -- 1ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT (((((rt0.c2)) BETWEEN ((0.8806848795432107)) AND ((rt0.c2))))>=(((rt0.c1)LIKE(vt0.c0)))) FROM vt0, rt0 WHERE (CASE WHEN ((-7.03308525E8) BETWEEN (0.3230501263963045) AND (0.6740034250529645)) THEN 0Xffffffffc283cc6a COLLATE NOCASE ELSE ((0.24144104963233903)&(809622313)) END) GROUP BY CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END COLLATE RTRIM, ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))>>(rt0.c1)), ((((((((NULL)OR((+ (vt0.c0)))))OR(CAST(0.1541512948381626 AS NUMERIC))))AND(((rt0.c0) NOT NULL))))OR('kJ')) HAVING CAST((((1384507855)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) AS TEXT); -- 0ms;
SELECT ((((((rt0.c1)AND('0.08516663671728641')))OR(rt0.c2)))>=(((((((((((((vt0.c0)AND(rt0.c0)))OR(0X4eaff52e)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))) FROM rt0, vt0 WHERE ((((+ ('')))<=(((-1012247363) BETWEEN (0.32792754163554116) AND (0.2385268352614247))))); -- 0ms;
SELECT (((rt0.c0 IN ())) NOT BETWEEN ((rt0.c0 IN ())) AND (((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))), CAST((NOT (rt0.c1)) AS INTEGER), rt0.c1 FROM rt0;SELECT ALL ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY, NTH_VALUE((~ (rt0.c0 COLLATE RTRIM)), (((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c2, rt0.c2, rt0.c2))))<=(((x'')+(rt0.c2))))) OVER (), FIRST_VALUE(GLOB(CAST(rt0.c1 AS NUMERIC), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) OVER () FROM rt0;SELECT ((rt0.c2)*(rt0.c1)) COLLATE NOCASE FROM vt0;SELECT DISTINCT (((((((((- (rt0.c1)))OR((((rt0.c1)) NOT BETWEEN (('')) AND ((rt0.c2))))))OR(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))))AND(0.47404116794196083)) FROM vt0, rt0 WHERE ((((((((((((0.4084815271251049)) NOT BETWEEN ((x'0b9b')) AND ((NULL))))OR(x'')))AND(((((((((0.9712777104739149)OR(x'5705')))AND('-1655825566')))OR(x'f82f')))OR(']0?1칄3N')))))OR(CASE WHEN NULL THEN x'' ELSE x'' END)))AND((('n|')<>(x''))))) ORDER BY ((((rt0.c2)-(x''))) NOT NULL) ASC; -- 0ms;
SELECT DISTINCT ((((rt0.c2)<=(vt0.c0)))IS NOT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0)) NOT BETWEEN (('Fq9JB&')) AND ((vt0.c0)))) BETWEEN (rt0.c0) AND ((((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c0))))) FROM vt0, rt0 LIMIT -1086756364; -- 0ms;
SELECT DISTINCT ((((rt0.c0) ISNULL)) NOT NULL), HEX((NOT (rt0.c0))), (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) IN ()), ((-389380429 COLLATE NOCASE) IS FALSE), CAST(((NULL)%(vt0.c0)) AS INTEGER) FROM vt0, rt0; -- 1ms;
SELECT ALL (((MAX(rt0.c2), CAST(vt0.c0 AS NUMERIC), vt0.c0, ((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)), -2.73126294E8))!=((((vt0.c0) ISNULL), (NOT (rt0.c1)), ((rt0.c0)GLOB(rt0.c0)), COALESCE(DISTINCT rt0.c1, rt0.c1), ''))), CAST(((vt0.c0)<<(rt0.c1)) AS TEXT), ((vt0.c0) NOT NULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COALESCE(rt0.c1, TOTAL(rt0.c0)) FROM vt0;SELECT ALL CAST(rt0.c2 AS BLOB) FROM rt0 WHERE (((('-1659871444', -1.09732728E8, 1.7976931348623157E308, NULL, 0.585190448242616)) BETWEEN ((CASE WHEN NULL THEN 0.019835925531147436 END, CAST(NULL AS TEXT), ((((x'')AND('-0.0')))AND(0.06320116016217914)), (('') IS TRUE), (((0.6960309044402672)) BETWEEN ((NULL)) AND (('-72043223'))))) AND ((((NULL) NOT NULL), NULL COLLATE RTRIM, LIKE(1.51511608E9, '1530867038', 'b'), (('') NOT BETWEEN (NULL) AND (0x3f349540)), load_extension(NULL, ''))))); -- 0ms;
SELECT DISTINCT NULL, ((CAST(vt0.c0 AS TEXT)) IS TRUE), CASE WHEN '' THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) WHEN CHANGES() THEN COUNT(*) WHEN (((x'38c2')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN ((rt0.c2)/(rt0.c1)) WHEN NULLIF(rt0.c0, rt0.c1) THEN UNLIKELY(DISTINCT rt0.c1) WHEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) THEN (+ (rt0.c2)) END, CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY, CASE ((vt0.c0)-(vt0.c0))  WHEN (NULL IN (vt0.c0)) THEN 0.26212315787538865 ELSE ((vt0.c0)&(vt0.c0)) END FROM rt0, vt0 WHERE (((0.11005658804202956 COLLATE RTRIM)==((-432945956 IN ())))); -- 1ms;
SELECT ALL ((COUNT(*)) NOTNULL), (((((rt0.c0)<(rt0.c0))))<>(((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))), PERCENT_RANK() OVER () FROM vt0;SELECT DISTINCT (rt0.c1 IN ()) FROM rt0, vt0 WHERE (CAST((x'630b' IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, vt0 WHERE (CAST(TRIM(DISTINCT 0.07339800841653299) AS BLOB)); -- 2ms;
SELECT DISTINCT (~ (rt0.c0)) FROM rt0, vt0 WHERE (((0Xffffffffc94ea480 COLLATE RTRIM) NOT BETWEEN (((x'') BETWEEN (0.33926072142449537) AND (''))) AND ((('0.8987681380684576') NOT BETWEEN ('TBjl!#zB&') AND (NULL))))); -- 0ms;
SELECT rt0.c1, LAST_VALUE((((NOT (rt0.c2))) NOTNULL)) OVER (), ((((rt0.c2, rt0.c0, vt0.c0))>((vt0.c0, vt0.c0, rt0.c1))) IN ()), (((- (rt0.c2))) IS TRUE), rt0.c1 FROM rt0; -- 0ms;
SELECT ((((rt0.c0)||(rt0.c2))) ISNULL), ((((vt0.c0)+(rt0.c2))) NOT BETWEEN (((rt0.c2)*(rt0.c2))) AND (CAST(rt0.c2 AS NUMERIC))), rt0.c0 FROM rt0;SELECT (+ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT DATETIME((rt0.c1 IN (rt0.c1)), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)), ((rt0.c0)GLOB(rt0.c0))) FROM vt0;SELECT DISTINCT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))!=(((NOT (rt0.c0))))) FROM rt0, vt0 LIMIT -1402363794 OFFSET -1267591195; -- 0ms;
SELECT DISTINCT x'7d44', (((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND (((+ (rt0.c2))))), RANK() OVER () FROM vt0, rt0 WHERE (0xffffffffcd07b56d) GROUP BY CAST((rt0.c2 IN ()) AS NUMERIC), x'9ca27bfd', (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)) IN (((rt0.c2)LIKE(rt0.c0)))); -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c0))>=((rt0.c0)))), (((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c2)-(rt0.c0)), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))) AND ((MIN(vt0.c0), rt0.c2, rt0.c2 COLLATE NOCASE))), rt0.c1 FROM rt0 WHERE ((+ (CASE NULL  WHEN 0.5755210229498922 THEN NULL END))) GROUP BY ((((((((((((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END)AND((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(x'')))OR(((vt0.c0)LIKE('(_*p')))))AND((((rt0.c1))>((NULL))))))OR(CHANGES())))AND((- (rt0.c1)))))AND(rt0.c0 COLLATE RTRIM)))OR(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN 0.6943696529458031 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) HAVING CAST(rt0.c0 COLLATE RTRIM AS INTEGER) ORDER BY UPPER(((vt0.c0)<<(rt0.c2)));SELECT ((((((((CAST(rt0.c2 AS NUMERIC))AND((rt0.c1 IN ()))))OR(rt0.c0)))AND(((0.0)IS(1.2038638E7)))))AND((+ (rt0.c0)))) FROM rt0, vt0 GROUP BY (rt0.c1 IN ()); -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS(rt0.c1)))<=(((vt0.c0) ISNULL))), ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END) IS FALSE), CAST(CAST(rt0.c1 AS INTEGER) AS REAL) FROM rt0 ORDER BY CAST((((rt0.c2, rt0.c2, rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0, NULL, rt0.c0))) AS BLOB)  NULLS LAST, -6.93858468E8 COLLATE RTRIM  NULLS LAST;SELECT DISTINCT ((PRINTF(vt0.c0, rt0.c0, rt0.c0))=(MAX('-520814820'))) FROM rt0, vt0 WHERE (((-1.317335965E9 COLLATE RTRIM) BETWEEN (((NULL) BETWEEN (x'5448') AND ('X덎['))) AND (1.00880628E9))); -- 1ms;
SELECT DISTINCT ((rt0.c1)IS NOT(0.3003370634443624)) COLLATE RTRIM COLLATE RTRIM FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ('-1552626596', rt0.c2)) COLLATE NOCASE FROM vt0, rt0 WHERE ((((('-1397508253') IS TRUE)) NOT BETWEEN ((- (x''))) AND (CAST(x'' AS NUMERIC)))) LIMIT -2011881286; -- 0ms;
SELECT DISTINCT (((rt0.c1)&(rt0.c1)) IN ()) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0 WHERE (((((NULL) BETWEEN (NULL) AND ('874244740'))) NOT NULL)) LIMIT -1974529291 OFFSET 461482977; -- 0ms;
SELECT ALL LIKELY(DISTINCT 0xffffffffe8a3c7a4 COLLATE BINARY) FROM vt0, rt0; -- 0ms;
SELECT MIN(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN '' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END), CASE WHEN ((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)) THEN ((((0.36625866536200824)OR(vt0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c0 AS TEXT) THEN (~ (vt0.c0)) WHEN (rt0.c2 IN ()) THEN NULL WHEN (((0.14370287841716967)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END WHEN (~ (rt0.c2)) THEN MIN(rt0.c0) END, TOTAL(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN 0.6153355621954057 WHEN rt0.c0 THEN vt0.c0 END) COLLATE NOCASE FROM vt0;SELECT (((vt0.c0)) BETWEEN (((rt0.c1 IN (vt0.c0)))) AND (((((rt0.c2, 490248381, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, vt0.c0)))))) FROM vt0, rt0 WHERE (((((0.9262033585984439) NOTNULL))>(SQLITE_COMPILEOPTION_USED(x'')))); -- 0ms;
SELECT LOWER(LIKELIHOOD(vt0.c0, 0.3692795492910603)), CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END COLLATE NOCASE, (((x'' IN ())) NOT NULL), COALESCE(DISTINCT ((rt0.c1) NOTNULL), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN 0.9662065822456514 THEN vt0.c0 ELSE '0.25837695970169894' END), CASE (rt0.c2 IN ())  WHEN ((rt0.c2)*(vt0.c0)) THEN (- (vt0.c0)) END FROM rt0;SELECT ALL ((LOWER(DISTINCT vt0.c0)) BETWEEN (rt0.c1) AND ((((rt0.c0))==((vt0.c0))))) FROM rt0, vt0 WHERE ((((('')OR('^cg')))AND(x'6011')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) IS TRUE) THEN (rt0.c0 IN (rt0.c2)) END, x'', (('1591894496') NOT BETWEEN (x'') AND (((vt0.c0) ISNULL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 END)<>(ABS(rt0.c0))) FROM vt0 WHERE (CAST(CASE 0.3230501263963045  WHEN NULL THEN 0X63c8ef59 END AS INTEGER));SELECT DISTINCT ((CASE -1.774923127E9  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END) ISNULL), ((CAST(vt0.c0 AS BLOB)) NOT NULL), AVG((rt0.c0 IN ())), rt0.c1, rt0.c2 FROM vt0, rt0 LIMIT 601750752 OFFSET -44977707; -- 0ms;
SELECT COALESCE(((rt0.c1)<(rt0.c0)), (rt0.c1 IN ())) FROM vt0, rt0; -- 0ms;
SELECT UNLIKELY(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) FROM vt0, rt0 WHERE ((((0.6041101203891623) IS TRUE) IN ())) LIMIT 1132575790; -- 1ms;
SELECT DISTINCT (((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((0.4479533757746106, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c0))))+((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))), LEAD((((('-')AND(((vt0.c0)&(vt0.c0)))))OR((vt0.c0 IN ()))), ((((((vt0.c0)|(vt0.c0)))AND(0.44275417055266286)))AND(((vt0.c0)AND(vt0.c0)))), CAST(-66359694 AS NUMERIC)) OVER (), (((rt0.c2) NOT NULL) IN ((NOT (rt0.c0)), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) FROM vt0 WHERE ((NOT ((('')|(0.957892042896256)))));SELECT DISTINCT (((((('-1056738971')AND(vt0.c0)))OR(rt0.c1)))>=(NULL)) FROM vt0 WHERE (((((TYPEOF(NULL))OR(CASE 8.97558994E8  WHEN 0.03098900437102725 THEN '-723989073' END)))AND(NULLIF(DISTINCT NULL, 1.2038638E7))));SELECT CASE ((rt0.c1)GLOB(rt0.c0))  WHEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN '968091418' ELSE CAST(vt0.c0 AS BLOB) END FROM rt0, vt0 WHERE ((IFNULL(0X357fa9d2, NULL) IN ())) GROUP BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)-(0.585190448242616)))) AND ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) HAVING ((vt0.c0) NOTNULL); -- 0ms;
SELECT ALL CASE WHEN UPPER(vt0.c0) THEN LIKE(rt0.c1, '1748372103') ELSE UNLIKELY(DISTINCT rt0.c2) END FROM rt0;SELECT DISTINCT CAST(NULL AS REAL) FROM rt0 WHERE (CAST(NULL AS NUMERIC) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((vt0.c0)>(CAST(rt0.c1 AS REAL))) FROM vt0;SELECT ((CASE vt0.c0  WHEN rt0.c1 THEN NULL WHEN '-598642657' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 END)-(((vt0.c0) NOTNULL))) FROM rt0, vt0 WHERE (CASE -1.615373393E9  WHEN '-1539091918' THEN '1880160940' END COLLATE NOCASE); -- 0ms;
SELECT ALL x'' FROM vt0 WHERE ((+ (CASE WHEN -1235884398 THEN 0.15953033153745044 ELSE 'Y' END))) LIMIT -439669211; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((((~ (NULL)))%((~ (x''))))); -- 0ms;
SELECT CASE ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))AND(x'0976')))OR(rt0.c2))  WHEN ((rt0.c0) NOTNULL) THEN (~ (vt0.c0)) END FROM vt0 WHERE (((((('1564703431', 0.728111090529034, '_X湨G0ꢔ!'))>=(('-1e500', '', 693271136))))OR(((NULL)+(0Xffffffffbf79f3ad)))));SELECT DISTINCT ((LOWER(rt0.c1))/((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), LAST_VALUE(((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE 0.32035878965208575 END)%(CAST(rt0.c0 AS TEXT)))) OVER (), (((NOT (rt0.c0)))LIKE(CAST('-721810436' AS INTEGER))) FROM rt0 WHERE ((NOT (CASE '242288752'  WHEN 1638811386 THEN x'' ELSE NULL END)));SELECT rt0.c0 FROM rt0, vt0 WHERE ((~ (0.036932247359488524)) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS REAL)  WHEN ((rt0.c1)<>(vt0.c0)) THEN (((rt0.c2))<=((rt0.c2))) ELSE (rt0.c0 IN ()) END, (((((((rt0.c2)AND(']?')))OR(rt0.c0))))<((vt0.c0 COLLATE BINARY))), (((vt0.c0 COLLATE RTRIM))<>((vt0.c0 COLLATE NOCASE))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NTILE(CAST((rt0.c0 IN ()) AS NUMERIC)) OVER (), (- (0.8216889522704691)) COLLATE BINARY, ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))<((rt0.c2 COLLATE RTRIM))) FROM vt0, rt0; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY (((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)) IN (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 END)) ASC  NULLS FIRST, ((rt0.c1)&(rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, (((((- (rt0.c1)))AND((+ ('')))))OR((((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS LAST) FROM rt0 WHERE (((((((((((-1.056738971E9)AND(NULL)))OR(NULL)))AND(952126453)))OR(0.0)))-(CAST('謞d' AS INTEGER))));SELECT (((vt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c2) NOTNULL), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((vt0.c0)AND(rt0.c1)))OR(0.8209983040952636)))AND(vt0.c0)))OR(rt0.c0)), (- (rt0.c2)), '0.7428745343200133')) AND ((((rt0.c1)OR(vt0.c0)), ((rt0.c2) BETWEEN (vt0.c0) AND (0.7571804858227603)), ((1.236343744E9) BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), (rt0.c2 IN (rt0.c1))))) FROM rt0 WHERE (CASE WHEN x'' THEN 0x67d005d6 ELSE NULL END COLLATE BINARY);SELECT (((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND('0.3474972394718001')))AND(rt0.c0))))=((CASE 0.2244936263601477  WHEN vt0.c0 THEN '1719883757' END))) FROM rt0;SELECT ALL (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN ()) FROM vt0, rt0 WHERE (((CASE WHEN '+P' THEN 'H' WHEN x'' THEN x'' WHEN x'd1a4' THEN '-1137098214' ELSE 0.670562490344362 END)IS NOT(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT CASE rt0.c0 COLLATE NOCASE  WHEN rt0.c1 THEN '2077958924' WHEN ((0.8660565646259694) BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((('', vt0.c0, rt0.c2)) BETWEEN ((x'2c87', rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c1))) WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN (((rt0.c2, vt0.c0, 0X4fbda5e0))>=((rt0.c0, rt0.c0, rt0.c2))) ELSE NULL END, NULL, (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)), ((rt0.c2)LIKE(rt0.c2))))<(((- (vt0.c0)), (0.46957479738756625 IN (rt0.c0)), (((rt0.c1))=((rt0.c0)))))) FROM vt0;SELECT ALL ((x'') NOT BETWEEN (QUOTE(vt0.c0)) AND (LTRIM(rt0.c0, rt0.c0))), rt0.c0, (~ (COUNT(*))) FROM vt0 INNER JOIN rt0 ON (((NULL)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN rt0.c2 END)) AND (((vt0.c0 IN ())))) GROUP BY (((rt0.c2)) BETWEEN (((vt0.c0 IN ()))) AND (((+ (rt0.c0))))) HAVING ((NULL)|(rt0.c1 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT ((((rt0.c2)GLOB(rt0.c0)))-(UNICODE('gk'))) FROM vt0 WHERE (((((NULL) NOT BETWEEN (0X5eb2d0d1) AND (NULL))) NOTNULL));SELECT DISTINCT ((((AVG(vt0.c0))OR(((vt0.c0) BETWEEN (x'') AND (rt0.c1)))))OR(((((rt0.c0)OR(NULL)))OR(rt0.c2)))) FROM vt0, rt0 GROUP BY (((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ()), (((((~ (rt0.c0)))AND(((NULL) IS TRUE))))AND((rt0.c1 IN ()))), CASE ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN ((rt0.c0)+(vt0.c0)) THEN ((rt0.c2) NOTNULL) ELSE (((rt0.c1, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))) END HAVING (((x'' IN (rt0.c1)))<(((((rt0.c1)OR(vt0.c0)))OR(rt0.c1))));SELECT DISTINCT ((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c0, rt0.c1, rt0.c1))) IN ()), GROUP_CONCAT(CAST(vt0.c0 AS TEXT)), ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))>>(CAST(rt0.c0 AS BLOB))), ((rt0.c2 IN ()) IN ()), (~ ((rt0.c0 IN (rt0.c1)))) FROM vt0, rt0 WHERE (((((((0.6218949113023462)AND(NULL)))OR('2033477737'))) NOT NULL)); -- 0ms;
SELECT ALL (NULL IN ()) FROM rt0 WHERE (CAST(((NULL) ISNULL) AS TEXT)); -- 0ms;
SELECT LIKELY(DISTINCT (+ (rt0.c2))), (((((rt0.c1)GLOB(rt0.c0)), (((vt0.c0, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, 0.7419736464176631, rt0.c0, rt0.c2)) AND ((vt0.c0, vt0.c0, '', rt0.c0, rt0.c2))), CAST(rt0.c1 AS INTEGER), TRIM(DISTINCT rt0.c2), SUM(rt0.c0)))<>((((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)), (NOT (x'')), ((0.019835925531147436) BETWEEN (rt0.c0) AND (vt0.c0)), (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER)))), ((((rt0.c2 COLLATE RTRIM)AND(LIKELIHOOD(DISTINCT rt0.c1, 0.4264511819428414))))AND((NOT (-664121919)))) FROM rt0, vt0; -- 0ms;
SELECT CASE (((rt0.c0))>((rt0.c2)))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((vt0.c0)>=(rt0.c2)) END FROM rt0 LIMIT 165961757;SELECT DISTINCT ((rt0.c2)>>(rt0.c1)) COLLATE BINARY FROM vt0, rt0 WHERE (((CASE WHEN '''P' THEN '781192970' ELSE '밮D0OBRKNW' END)>>(((x'd44d')<=(x''))))) EXCEPT SELECT DISTINCT (((((- (rt0.c0)))AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR((vt0.c0 IN ()))) FROM vt0;SELECT (- (CAST(vt0.c0 AS REAL))), COUNT(*) FILTER(WHERE CASE ((vt0.c0)>=(rt0.c2))  WHEN 0.7281739189538374 THEN (((vt0.c0))==((vt0.c0))) WHEN (((('')AND(rt0.c1)))AND(vt0.c0)) THEN (NOT (rt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((vt0.c0) ISNULL) END) OVER (), (((((rt0.c2))<((vt0.c0)))) IS TRUE) FROM rt0, vt0 WHERE (((('[-<i)')>=(1384507855)) IN ('e2'))); -- 1ms;
SELECT rt0.c2 COLLATE RTRIM, (((((vt0.c0) NOT NULL)))>=(((- (vt0.c0))))), LIKELIHOOD((+ (vt0.c0)), 0.3053501826812023) FROM vt0, rt0 WHERE (((((0.2405737477650255)IS(x'bd51')))<>('0.8996589475065341' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT COUNT((- (vt0.c0))), json_valid(((0xfffffffff0a464b2) NOT BETWEEN (rt0.c2) AND (rt0.c0))), CASE x''  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END THEN LIKELY(DISTINCT rt0.c1) END FROM rt0 WHERE ((('2109077438')<=(((NULL) BETWEEN (-2086997292) AND (NULL)))));SELECT MIN(((rt0.c0) IS TRUE)) FROM rt0 GROUP BY 0.33926072142449537; -- 0ms;
SELECT ALL GROUP_CONCAT(NULLIF(DISTINCT vt0.c0, rt0.c0)), CASE IFNULL(rt0.c2, vt0.c0)  WHEN (NOT (rt0.c0)) THEN ((((rt0.c0)OR(rt0.c2)))OR(vt0.c0)) ELSE (((vt0.c0, vt0.c0, rt0.c2))<>((rt0.c1, rt0.c2, rt0.c2))) END, (rt0.c1 COLLATE BINARY IN (vt0.c0)) FROM vt0, rt0 WHERE (((x'' COLLATE NOCASE)%(((('2036845352', '', -1580120304))!=((0.3325662847626242, '', NULL)))))); -- 0ms;
SELECT DISTINCT (((((NOT (rt0.c1)))AND(((rt0.c2) BETWEEN (NULL) AND (x'ab39')))))AND((((x'4269'))>=((rt0.c0))))) FROM rt0; -- 1ms;
SELECT ALL 'CF', ABS(vt0.c0 COLLATE RTRIM), (((vt0.c0 IN ())) BETWEEN (((rt0.c0) NOT NULL)) AND ((((vt0.c0))<=((rt0.c0))))) FROM vt0 WHERE ((+ (x'5678')));SELECT DISTINCT rt0.c1 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0, vt0 ORDER BY (- (((rt0.c2)GLOB(rt0.c1)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((',騀\njxKd4' IN ()), SUM(rt0.c1), COUNT(*), CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, MAX(rt0.c2)))==((rt0.c0, CHANGES(), ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)), ((('-2033830005')) BETWEEN ((vt0.c0)) AND ((rt0.c0))), (NOT (NULL))))), CASE WHEN rt0.c2 THEN (+ (rt0.c2)) END, NULL FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0, vt0 WHERE ((((('-350186945')GLOB(0.25837695970169894)))|((+ (x'2c99'))))) ORDER BY ((((rt0.c2)AND(CASE WHEN rt0.c2 THEN vt0.c0 END)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))); -- 0ms;
SELECT ((((rt0.c0) IS TRUE)) BETWEEN (rt0.c2 COLLATE RTRIM) AND ('')) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE((- (rt0.c1 COLLATE RTRIM))) OVER (), (- ('')), ((((rt0.c0 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))AND(vt0.c0)) FROM rt0 WHERE (CAST(((x'') NOT BETWEEN ('0.08165501870642033') AND (NULL)) AS NUMERIC));SELECT COUNT('-606587267') OVER ( ORDER BY ((((rt0.c2)AND(vt0.c0)))!=(CAST(rt0.c0 AS INTEGER))) ASC) FROM rt0;SELECT ALL (((CASE rt0.c2  WHEN vt0.c0 THEN x'' END, rt0.c0, ((((rt0.c2)OR(x'')))OR(vt0.c0))))>=((vt0.c0 COLLATE BINARY, CAST(rt0.c1 AS REAL), '-2141315620'))) FROM rt0 WHERE (CASE (NULL IN ())  WHEN CAST(NULL AS REAL) THEN CASE NULL  WHEN '-1550806387' THEN NULL END WHEN ('' IN (0.2044358588886458)) THEN ((0.7180758774059794) BETWEEN (NULL) AND ('-693858468')) WHEN ((x'')*(0xffffffff92c3eab6)) THEN (('-358456108') NOT NULL) END) GROUP BY CAST((NOT (rt0.c1)) AS REAL), (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE, ((((vt0.c0)AND(rt0.c1)))OR(vt0.c0)), ((0xffffffff87382620)GLOB(rt0.c0)))) AND ((vt0.c0, ((vt0.c0) BETWEEN (rt0.c0) AND (-3.50186945E8)), ABS(DISTINCT rt0.c2)))), (((rt0.c1) IS FALSE) IN ());SELECT DISTINCT ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (ABS(rt0.c1)) AND (((rt0.c1)<=(rt0.c2)))) FROM rt0, vt0; -- 1ms;
SELECT ALL ((((((((IFNULL(DISTINCT rt0.c0, rt0.c0))AND((((rt0.c2))>=((vt0.c0))))))AND((NOT (rt0.c2)))))AND(((vt0.c0) NOT NULL))))AND(CASE WHEN rt0.c2 THEN vt0.c0 END)), ((NOT (rt0.c2)) IN ()), ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END) ISNULL) FROM rt0 WHERE (CAST((('-610113464')-('-1618088688')) AS TEXT)) LIMIT -9223372036854775808;SELECT CAST(rt0.c1 AS NUMERIC) FROM vt0, rt0 LIMIT -831032111 OFFSET 1141783270; -- 0ms;
SELECT RANK() OVER () FROM rt0, vt0 WHERE (CAST(NULL AS TEXT)) GROUP BY rt0.c2; -- 0ms;
SELECT ((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))<(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))OR(NULL)))) FROM rt0, vt0 GROUP BY (+ (((rt0.c1) IS FALSE))), (rt0.c1 IN (((rt0.c0) NOT NULL))), rt0.c1 HAVING (((((((((- (rt0.c1)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))))AND((('132196434') NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(AVG(NULL))); -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, rt0.c2))==((rt0.c1, vt0.c0, rt0.c2))))) AND ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) FROM vt0;SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((((((x'' IN ()))AND(json_array_length('T[E\r'))))OR(TRIM(0.2455612551758367)))) GROUP BY rt0.c1, '0.36625866536200824', ((TOTAL_CHANGES())*(NULL)) HAVING rt0.c1 ORDER BY (((((rt0.c2, rt0.c2, vt0.c0))<=((vt0.c0, vt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c0)&(vt0.c0))) AND ((~ (rt0.c0)))) ASC  NULLS LAST, ((((rt0.c2)<>('-847812327')))>=(rt0.c0))  NULLS FIRST, (((((rt0.c2))<((vt0.c0))))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))  NULLS LAST; -- 0ms;
SELECT DENSE_RANK() OVER ( GROUPS BETWEEN  CURRENT ROW AND rt0.c0 PRECEDING) FROM rt0, vt0 WHERE (CAST(((2.42288752E8)>=(x'e2f5')) AS BLOB));SELECT DISTINCT TOTAL(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (- ((((NULL, rt0.c0, vt0.c0))<>((rt0.c1, rt0.c0, rt0.c1))))), CUME_DIST() OVER (), CASE WHEN (~ (vt0.c0)) THEN (('714796190')+(vt0.c0)) ELSE (((('-1666542857')AND(rt0.c2)))AND(rt0.c0)) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0) BETWEEN (x'') AND (rt0.c0)) IN ()), SUM((rt0.c1 IN (rt0.c1))) OVER (), (- ('Pp')) FROM rt0, vt0; -- 0ms;
SELECT ALL (((('оJ') BETWEEN (vt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c2)>(0x5dfe4251))) AND (CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0, rt0 WHERE (LOWER(CAST('-' AS REAL))); -- 1ms;
SELECT DISTINCT MIN(LOWER(rt0.c1)) FROM vt0 WHERE ('-1580120304');SELECT ALL CASE WHEN SUM(rt0.c0) THEN LTRIM(vt0.c0, rt0.c2) END FROM rt0 WHERE (((((((-1.58869347E8)<(0.7714081113422229)))OR((('') NOT BETWEEN (NULL) AND (x'0c17')))))AND(json_array_length(-606587267, 'F?'))));SELECT DISTINCT ((- (rt0.c0)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))>>(vt0.c0 COLLATE NOCASE)) FROM vt0 LIMIT -228091071;SELECT 0.8764900159620895 FROM rt0 LIMIT 1060410688; -- 0ms;
SELECT ALL MIN('' COLLATE RTRIM) FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c1)<>(rt0.c2))) FROM vt0 WHERE (CASE WHEN ((NULL)<=(x'')) THEN ((x'bb5d') BETWEEN ('/i') AND ('643227377')) ELSE CAST(NULL AS REAL) END);SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c2 END)/(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM vt0 GROUP BY rt0.c2;SELECT ALL ((rt0.c2) NOT NULL) FROM vt0;SELECT ALL 'Hq04#', ((NULL IN ()) IN ()), MIN((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))), rt0.c2, ((rt0.c2)%(rt0.c0)) COLLATE RTRIM FROM rt0, vt0 WHERE ((((0x7f039bbd))<=((CASE WHEN x'' THEN '1642449727' WHEN '' THEN 0.7626138282865775 WHEN 0.4050775289697508 THEN '0.17842111866584964' END)))) GROUP BY '' COLLATE NOCASE, '1063973129', CASE WHEN ((vt0.c0) IS TRUE) THEN rt0.c2 ELSE ((rt0.c0) NOTNULL) END HAVING (((- (vt0.c0))) NOT BETWEEN ((((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (('764939814', rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, vt0.c0)))) AND (INSTR(rt0.c1, rt0.c0))); -- 0ms;
SELECT ((((((rt0.c1)<(rt0.c1)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM vt0, rt0 WHERE (((('2001203766' IN ()))==(0X7b51f0dd))) ORDER BY ((CAST(-1457626501 AS INTEGER)) NOT NULL) DESC; -- 0ms;
SELECT ALL CAST((vt0.c0 IN (rt0.c0)) AS REAL) FROM vt0;SELECT ALL ((((rt0.c1)AND(rt0.c0 COLLATE RTRIM)))OR((rt0.c2 IN (rt0.c0, vt0.c0)))) FROM rt0;SELECT DISTINCT ROUND(((rt0.c1)/(rt0.c0)), ((x'') IS FALSE)) FROM rt0 WHERE (CASE WHEN (((('0.32792754163554116')AND('-498075517')))AND('')) THEN 0.03312754339189872 END); -- 0ms;
SELECT ALL (+ (SUBSTR(0.9458870810006269, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0, rt0.c0, vt0.c0)) BETWEEN ((TYPEOF(vt0.c0), ((vt0.c0)LIKE(rt0.c2)), ((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))) AND ((((rt0.c1)<=(rt0.c1)), CASE 697791705  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END, NULL COLLATE RTRIM))) FROM rt0;SELECT ALL (((((((((- (rt0.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(((((vt0.c0)OR(vt0.c0)))OR(0.32510690768434003)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))AND(vt0.c0 COLLATE NOCASE)) FROM rt0, vt0 WHERE ((+ (((0.9476579390153186)>>(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1) IS FALSE)), ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN '0.25837695970169894' ELSE rt0.c1 END)<('LXY')), (((rt0.c1 IN ())) IS TRUE), (vt0.c0 COLLATE BINARY IN ()), CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END THEN COUNT(*) ELSE rt0.c0 COLLATE BINARY END FROM vt0 WHERE (((('') BETWEEN (2.036845352E9) AND ('1830239733')) IN ()));SELECT DISTINCT CAST(rt0.c2 AS REAL) COLLATE BINARY, (('') NOT BETWEEN (1.51511608E9) AND (((rt0.c0) NOTNULL))), (('Y')+((((('5c')OR(rt0.c1)))AND(rt0.c1)))) FROM rt0, vt0 WHERE ((((~ (x''))) ISNULL)); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) AND (rt0.c0 COLLATE BINARY)) FROM vt0, rt0; -- 0ms;
SELECT ALL (NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 WHERE (CASE WHEN 0.8512885924824423 THEN CASE 0.615198821797667  WHEN '-129933734' THEN NULL WHEN 'g䀵' THEN x'' WHEN x'' THEN NULL ELSE x'' END WHEN (('') NOT BETWEEN (x'fe87') AND (0.923889268931716)) THEN CAST('\n' AS NUMERIC) WHEN (('Z33dCypiu') BETWEEN (0xfffffffff1e26b36) AND (x'aeac')) THEN ((((x'972f')AND(NULL)))AND('-1774872624')) END); -- 0ms;
SELECT ((rtreenode(vt0.c0, vt0.c0))|(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FROM rt0;SELECT AVG((- (vt0.c0))) FROM vt0, rt0 WHERE (((((x'2348') NOTNULL))|(CAST(NULL AS TEXT)))); -- 0ms;
SELECT (+ (TRIM(DISTINCT rt0.c0, rt0.c1))) FROM rt0, vt0 WHERE (((((((x'6490')AND('-803145435')))OR('')))|(CAST(NULL AS TEXT)))); -- 0ms;
SELECT (((((vt0.c0, rt0.c0, '1060410688')) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c1, vt0.c0, '鞘.'))))OR(x'')), x'', NULL FROM vt0, rt0 ORDER BY (((NOT (rt0.c0))) NOT BETWEEN (((rt0.c2)!=(vt0.c0))) AND (((rt0.c1) NOTNULL))) DESC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (NULL))))) DESC; -- 0ms;
SELECT DISTINCT COUNT((- (rt0.c1))) FROM rt0 WHERE (0xb7b1ee); -- 0ms;
SELECT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)>(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), 0.6410644973386881, ((((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)))<=(((rt0.c2)<(rt0.c2)))), ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))) NOT NULL), TOTAL(((rt0.c0)OR(rt0.c1))) COLLATE NOCASE FROM rt0 WHERE (((0x7f0d40f3) IS FALSE) COLLATE BINARY);SELECT ALL CAST(((rt0.c1)%(rt0.c2)) AS BLOB) FROM vt0 WHERE (json_type(((0.647196483631892)%('172395943'))));SELECT rt0.c0 FROM vt0, rt0 WHERE ((NOT ((('1781679376') IS TRUE)))) ORDER BY (('')LIKE(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST, CAST((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS BLOB) DESC  NULLS LAST; -- 0ms;
SELECT ((x'') ISNULL), ((CAST(vt0.c0 AS TEXT)) ISNULL), (((- (vt0.c0)))!=(GROUP_CONCAT(rt0.c2))) FROM rt0 GROUP BY (((rt0.c0)>(rt0.c2)) IN ());SELECT DISTINCT rt0.c0, CASE ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) END, NULL FROM vt0 ORDER BY LOWER(json_remove(rt0.c0, rt0.c2, rt0.c0, rt0.c0))  NULLS FIRST;SELECT DISTINCT RANK() OVER (), (NOT (rt0.c1)), CAST(((x'cc13') NOT NULL) AS TEXT) FROM rt0 WHERE (((((0.06738800057349015)LIKE(NULL))) NOTNULL)); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((rt0.c1 IN ())))), ((CASE ''  WHEN '%.X' THEN rt0.c2 END) NOT NULL), ((AVG(rt0.c1))<=((((rt0.c1, rt0.c1, rt0.c2))>=((rt0.c2, rt0.c1, rt0.c1))))) FROM rt0, vt0 WHERE ((NOT ((((NULL))>(('2130447034')))))); -- 0ms;
SELECT (rt0.c1 COLLATE BINARY IN ()), rt0.c2, (((((rt0.c0)%(rt0.c0)), rt0.c0 COLLATE BINARY, rt0.c0 COLLATE NOCASE))<=((rt0.c1, NULL, (((rt0.c1))>=((rt0.c0)))))) FROM vt0 WHERE ((NOT (((x'')|('366913287')))));SELECT DISTINCT (rt0.c1 IN (vt0.c0)) COLLATE BINARY, rt0.c1, INSTR(rt0.c2, ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND('')))OR(rt0.c2))) FROM rt0, vt0; -- 0ms;
SELECT CASE NULL  WHEN rt0.c2 THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) NOT NULL) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((rt0.c1)>(rt0.c2)) THEN AVG(rt0.c1) ELSE CAST(rt0.c1 AS BLOB) END FROM rt0, vt0 WHERE ((((CAST('172482586' AS NUMERIC), (- (NULL)), json_array_length(NULL)))>=((((x'') NOT BETWEEN (NULL) AND (x'')), ((((((((0Xffffffffb52bca03)AND(NULL)))AND(x'')))AND(0.5571054540024392)))AND(0.9476158877278286)), ((((NULL)AND('1225579367')))OR('0.8506099728050805')))))); -- 0ms;
SELECT ALL CAST(SUM(rt0.c1) AS TEXT), MAX(((rt0.c2)<<(rt0.c1))), CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC) FROM rt0 WHERE (((((0.14396040624612239) IS TRUE)) NOTNULL));SELECT DISTINCT ((((rt0.c0) NOT NULL))%('h')) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY FROM vt0, rt0 WHERE (((((-1.615373393E9) NOT BETWEEN ('') AND (0.07303986590050948)))<<((('-1534426507')>=('痤I'))))); -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (((((rt0.c2)AND(vt0.c0)))AND(0.16731295533428203)))), CASE WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN ((rt0.c2) NOTNULL) THEN ((('-693858468', rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((0.3238876619429879, rt0.c1, rt0.c2))) WHEN GROUP_CONCAT(vt0.c0) THEN (('-239954346') IS TRUE) END, (LIKELIHOOD(DISTINCT vt0.c0, 0.16829881790508305) IN ()) FROM rt0 WHERE (((CASE WHEN '755219633' THEN '897558994' END)>>(((x'') BETWEEN ('Z{') AND ('-1555390194')))));SELECT DISTINCT TOTAL((+ (vt0.c0))) FROM vt0 WHERE ((((((NULL)OR(0Xffffffff92babd17)))OR(0Xfffffffff687d89d)) IN ((('714796190')OR(0.9213779732885019))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(0.06536908543203435) OVER () FROM vt0 GROUP BY ((((rt0.c1) IS FALSE))LIKE(rt0.c1 COLLATE BINARY));SELECT DISTINCT ((((((vt0.c0)<(rt0.c1)))AND(CAST(rt0.c0 AS INTEGER))))AND((~ (rt0.c0)))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (GROUP_CONCAT(vt0.c0))), ((((LIKELIHOOD(DISTINCT rt0.c0, 0.014744479656944365))AND(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))))OR(((0x7747f236)<<(rt0.c1)))) FROM vt0;SELECT DISTINCT NTH_VALUE(((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((('%_0\|G') BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(NULL AS REAL))), ((((vt0.c0 IN (vt0.c0)), vt0.c0, ((vt0.c0) NOT NULL)))!=(((NOT (vt0.c0)), (+ (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (1084822342)))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN ((rt0.c0) IS TRUE) THEN (- (rt0.c1)) WHEN '1132575790' THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CAST(rt0.c2 AS TEXT) THEN vt0.c0 WHEN (+ (rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN rt0.c2 COLLATE BINARY THEN NULL COLLATE NOCASE ELSE ((vt0.c0)OR(rt0.c1)) END, ((rt0.c0)&(((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))), MAX(rt0.c2) FROM vt0, rt0 WHERE ((((- (x'')))IS NOT(LIKE('i#[봗0ꬿRmF', '-1142080958')))); -- 1ms;
SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((~ (rt0.c0))) AND (rt0.c2 COLLATE BINARY)) FROM rt0, vt0; -- 0ms;
SELECT ALL (((rt0.c0 IN ()))>=(NULL)) FROM vt0, rt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET('1191506685') THEN CAST(x'724d' AS BLOB) END); -- 0ms;
SELECT DISTINCT rt0.c0, ((((rt0.c2) NOT NULL))/((rt0.c2 IN ()))), (~ (((rt0.c0)&(rt0.c0)))) FROM rt0, vt0 WHERE (((0X29c281dd)%('')) COLLATE RTRIM); -- 0ms;
SELECT ALL TRIM(CAST(vt0.c0 AS INTEGER)) FROM vt0; -- 0ms;
SELECT ALL -2037203631 COLLATE NOCASE FROM rt0, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (+ (MAX(x''))) FROM rt0, vt0; -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND ((GROUP_CONCAT(rt0.c1)))) FROM rt0, vt0 WHERE (CASE WHEN LIKELY(DISTINCT NULL) THEN 0.019447755140954204 WHEN ('>Vxo' IN ()) THEN -204298399 COLLATE RTRIM WHEN CAST(NULL AS NUMERIC) THEN (0.5716810321584607 IN ()) END) GROUP BY CAST(vt0.c0 COLLATE BINARY AS INTEGER), ((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c2))) IS FALSE), vt0.c0 COLLATE RTRIM; -- 1ms;
SELECT DISTINCT CASE WHEN x'' THEN rt0.c1 WHEN (((rt0.c2))<=((rt0.c0))) THEN ((vt0.c0)*(rt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c2 COLLATE RTRIM END FROM rt0;SELECT DISTINCT x'' FROM vt0 WHERE (json_array(((((x'')AND('1551291309')))AND(x'')), NULL COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c1) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT ALL ((x'') NOT BETWEEN ((~ (rt0.c0))) AND (((x'') IS TRUE))) FROM vt0 WHERE (CAST((+ ('-1745478060')) AS TEXT));SELECT DISTINCT (((('ls旊㈪D') NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c2)) FROM vt0;SELECT DISTINCT ((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((~ ('544911942')))) FROM rt0 WHERE (NULL);SELECT (- (rt0.c2)) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt0, rt0 WHERE ((((- ('185181282')))%((- ('BbPd'))))); -- 0ms;
SELECT ALL ((((0Xffffffffa2c8dd33)OR('-416027774')))OR(((rt0.c1)LIKE(rt0.c0)))) FROM rt0, vt0 LIMIT 2036845352; -- 0ms;
SELECT DISTINCT 'a&L~87\n嗁', ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) ISNULL), (((((rt0.c2, vt0.c0, x'', 610047740, vt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c1))))AND(UPPER(rt0.c1))) FROM rt0;SELECT DISTINCT (((rt0.c0)) BETWEEN ((((rt0.c2) IS TRUE))) AND ((AVG(rt0.c0)))) FROM rt0, vt0 WHERE (CAST(x'' AS NUMERIC) COLLATE RTRIM); -- 0ms;
SELECT ALL (NOT (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE ((((NOT ('p*8tu槴c'))) ISNULL)); -- 1ms;
SELECT CAST(((rt0.c2)||(rt0.c0)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT (x'8fa1' IN (MAX(NULL))), TOTAL(UPPER(rt0.c0)), CASE WHEN (rt0.c0 IN ()) THEN rt0.c2 COLLATE RTRIM END FROM vt0;SELECT ALL COUNT(*) OVER () FROM rt0, vt0 WHERE ((((0.5290971480967158 IN ())) NOT BETWEEN (((((1876596632)AND(0.5767559090401798)))OR(x''))) AND ((- (NULL))))); -- 0ms;
SELECT json_extract(PRINTF(rt0.c0), ((rt0.c1)IS(-729775671))), 0.9035302952650964, rt0.c2, ((((rt0.c2)OR(rt0.c2))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))), RANK() OVER () FROM rt0, vt0 WHERE ((((((('1277671262'))=(('1946127284')))))<>((((NULL) NOT BETWEEN (NULL) AND (x'')))))); -- 3ms;
SELECT DISTINCT ((((rt0.c0)==(rt0.c1)))|(((rt0.c0)&(rt0.c0)))) FROM vt0;SELECT (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))>=((vt0.c0))) FROM vt0 WHERE (CAST(-1.180258944E9 COLLATE RTRIM AS REAL));SELECT ALL CAST(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) AS TEXT) FROM vt0;SELECT ((((+ ('2041559700'))))==((NULLIF(rt0.c2, rt0.c1)))) FROM vt0, rt0 WHERE ((((-253364018)/(1.2038638E7)) IN ())); -- 0ms;
SELECT ALL IFNULL(DISTINCT TYPEOF(rt0.c0), vt0.c0) FROM rt0, vt0 WHERE (((((NULL) NOTNULL)) IS FALSE)) GROUP BY ((((((((rt0.c2)AND(vt0.c0)))AND(NULL)))AND(vt0.c0 COLLATE NOCASE)))AND(((rt0.c0)&(rt0.c0)))), HEX(DISTINCT ((rt0.c0)GLOB(vt0.c0))), (~ (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) HAVING ((- ('')) IN ()); -- 0ms;
SELECT ((((((((((rt0.c1)/(NULL)))AND((~ (vt0.c0)))))AND(CAST(rt0.c0 AS NUMERIC))))OR(((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)))))OR(((rt0.c1)<=(vt0.c0)))) FROM vt0;SELECT DISTINCT (((((rt0.c1, rt0.c2, rt0.c1))<((vt0.c0, vt0.c0, rt0.c0))))+(vt0.c0 COLLATE NOCASE)), ((((rt0.c2)>=(rt0.c0)))IS((rt0.c0 IN (rt0.c1)))), AVG(('' IN ())) OVER () FROM rt0, vt0 ORDER BY ((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))%((('0.892215678981102') IS TRUE))); -- 0ms;
SELECT CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER), CAST(vt0.c0 AS TEXT), COUNT(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) OVER ( RANGE (NOT (LIKELIHOOD(DISTINCT rt0.c0, 0.6905741438049399))) PRECEDING) FROM rt0 WHERE ((+ (((x'') NOT BETWEEN (0.8624356650816491) AND (NULL)))));SELECT ALL (((((((((rt0.c2 IN ()))AND(CAST(rt0.c0 AS TEXT))))OR(((rt0.c2)/(rt0.c0)))))AND(((1404232763) NOT NULL))))AND(((rt0.c0) ISNULL))) FROM rt0, vt0 WHERE (((('537099639') BETWEEN (x'') AND (0.2385268352614247)) IN ())) ORDER BY ((((rt0.c0)>(rt0.c1)))/(((rt0.c2)%(rt0.c0)))); -- 1ms;
SELECT (((((rt0.c2))!=((vt0.c0))))LIKE((~ (rt0.c1)))), (~ ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c2)) AND ((rt0.c2, vt0.c0, vt0.c0))))), CAST(((rt0.c2)+(rt0.c0)) AS TEXT) FROM rt0 WHERE (CAST(((1.32196434E8)-(0x7ba68a76)) AS NUMERIC)) LIMIT 895130981;SELECT ALL LEAD(CASE ((rt0.c0)>=(rt0.c0))  WHEN (~ (rt0.c0)) THEN '' ELSE x'' END, ((((0Xffffffffa91e627b)>(-1.457626501E9))) IS FALSE), CASE rt0.c2 COLLATE RTRIM  WHEN (rt0.c1 IN ()) THEN rt0.c0 END) OVER ( ORDER BY ((((~ (rt0.c1))))=(((((rt0.c0, rt0.c2, rt0.c0))<>((rt0.c1, rt0.c1, rt0.c0)))))) DESC  NULLS LAST) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1)>>(rt0.c1)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL LIKE(rt0.c1, AVG(vt0.c0)), ((((vt0.c0) IS TRUE))IS((NOT (vt0.c0)))), TOTAL(rt0.c1) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT load_extension(ABS(DISTINCT rt0.c2), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))), SUM(((rt0.c2)IS NOT(rt0.c1)) COLLATE BINARY), ((((rt0.c1)%(rt0.c1))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) FROM rt0 WHERE ((((((NOT (-6.08782701E8)))OR(((-1.09732728E8) NOT BETWEEN (-720732000) AND (0.29722002676433446)))))OR(COALESCE(DISTINCT '', ''))));SELECT DISTINCT IFNULL(DISTINCT (+ (vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT 0xffffffffb333e9ed FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((rt0.c1))), rt0.c2, CAST((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) AS BLOB) FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY) ISNULL) ASC  NULLS LAST, ((((rt0.c2)AND(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN NULL WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)))OR(rt0.c1)) ASC  NULLS LAST LIMIT -392773756;SELECT ALL ((~ (vt0.c0)) IN (AVG(rt0.c1), ((vt0.c0) NOT NULL), ((rt0.c2)+(vt0.c0)))), TRIM(DISTINCT ((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))), NTILE((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))), (vt0.c0 IN ()), HEX(rt0.c0))) AND ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), ((((rt0.c0)OR(rt0.c2)))AND(NULL)), vt0.c0 COLLATE NOCASE)))) OVER (), CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY, (NOT ((- (rt0.c2)))) FROM rt0, vt0 WHERE (((((x'5b3b')AND('{鈿W}pl')))GLOB((NOT (0.24822447771064526))))) GROUP BY (rt0.c1 IN ()) COLLATE BINARY; -- 0ms;
SELECT DISTINCT '!9' FROM vt0, rt0; -- 3ms;
SELECT DISTINCT (((~ (rt0.c0))) ISNULL), DENSE_RANK() OVER ( PARTITION BY ((((rt0.c2) IS TRUE))/((vt0.c0 IN (0X2fe99246)))), CASE WHEN ((rt0.c0) IS FALSE) THEN (rt0.c0 IN ()) ELSE CAST(rt0.c0 AS BLOB) END, rt0.c0, ((vt0.c0 COLLATE NOCASE)GLOB(((((vt0.c0)AND(rt0.c1)))AND(rt0.c1))))), (((rt0.c1 COLLATE NOCASE))<((x''))) FROM vt0 WHERE (((((((NULL)%(NULL)))OR('빒,' COLLATE BINARY)))AND(((((NULL)OR(0.7977892740247916)))AND('-757324956')))));SELECT GROUP_CONCAT(vt0.c0) OVER ( ORDER BY (NOT ((((vt0.c0, vt0.c0, vt0.c0))>=((rt0.c1, rt0.c1, vt0.c0))))) DESC) FROM vt0 WHERE ((((((('1871970842')>=('1280271309')))OR(CAST(0Xffffffffe7842fe5 AS REAL))))AND((~ (x'53cb')))));SELECT ALL (NOT ((vt0.c0 IN (rt0.c2)))), CASE WHEN CASE WHEN '' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN ((rt0.c1) NOTNULL) END, rt0.c0 FROM rt0 WHERE (TYPEOF(DISTINCT (NOT (NULL))));SELECT CAST(((rt0.c1) NOT NULL) AS BLOB) FROM rt0 WHERE ((~ ((((0.4571926589230757)) BETWEEN ((1.000686369E9)) AND (('175537785')))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0; -- 0ms;
SELECT ((((NULL)%(rt0.c0)))!=(((rt0.c0) NOTNULL))) FROM rt0, vt0; -- 0ms;
SELECT ((((vt0.c0)>(0.6041101203891623))) NOT BETWEEN (0.6614777143396908) AND (((rt0.c1)>(rt0.c1)))) FROM vt0;SELECT DISTINCT (ABS(rt0.c1) IN ()) FROM vt0, rt0 WHERE (((x'd31e') ISNULL) COLLATE BINARY); -- 1ms;
SELECT (vt0.c0 IN ()) FROM rt0 WHERE ((((('913622068')OR(0X5ee55ac7)))OR('/S봗ﮡ')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((0.4154582162545233) BETWEEN (COUNT(rt0.c2)) AND (CASE x''  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)), CASE COUNT(*)  WHEN rt0.c0 THEN 0.1764262049056995 ELSE CAST(rt0.c1 AS NUMERIC) END, CAST(rt0.c2 AS TEXT) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(LTRIM(rt0.c1, vt0.c0) AS NUMERIC) FROM vt0 WHERE (NULL);SELECT DISTINCT ((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))) NOTNULL) FROM rt0, vt0 WHERE (((((((((((x'') NOT NULL))AND(CAST('0.32035878965208575' AS NUMERIC))))AND(CASE 0x2ea1b0e7  WHEN x'' THEN '-0.0' WHEN NULL THEN x'' WHEN NULL THEN x'' END)))AND(('꽵hB]v궃r' IN ()))))AND(((((NULL)AND('2036845352')))OR('-2086997292'))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOTNULL))OR((((rt0.c0))>((0.8005698965485308))))))AND((((rt0.c0, '1646200455', vt0.c0))<>((rt0.c2, x'', rt0.c0))))) FROM vt0, rt0 WHERE ((((((('0.5378343459439654', NULL, 'l')) NOT BETWEEN ((x'ef6b', '.\r<', '0.6883204146578645')) AND ((NULL, x'500a', x'')))))<((CASE '2121535848'  WHEN '' THEN 0.6666337674106002 END)))); -- 0ms;
SELECT ALL ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS INTEGER))), CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))  WHEN CAST(rt0.c0 AS TEXT) THEN vt0.c0 COLLATE BINARY ELSE rt0.c2 END, CASE WHEN (((vt0.c0, rt0.c1, rt0.c1))!=((rt0.c2, rt0.c1, vt0.c0))) THEN (NOT (vt0.c0)) ELSE CASE rt0.c1  WHEN 0x772fb0de THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END END FROM rt0 NOT INDEXED GROUP BY (rt0.c1 COLLATE RTRIM IN ()) HAVING (((rt0.c2 COLLATE BINARY))<((CASE WHEN rt0.c0 THEN rt0.c1 END)));SELECT (((rt0.c1)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((((rt0.c1)GLOB(vt0.c0))))) FROM rt0 GROUP BY LOWER(CASE WHEN rt0.c0 THEN vt0.c0 END);SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))<=(vt0.c0 COLLATE NOCASE)) FROM rt0 WHERE ((+ ((- (1277671262)))));SELECT DISTINCT (((((vt0.c0)+('601750752'))))<((MAX(vt0.c0, vt0.c0)))) FROM rt0 WHERE (((x'') BETWEEN (x'') AND ('')) COLLATE RTRIM);SELECT DISTINCT ((x'')||(NULL)) FROM vt0, rt0 WHERE (((CASE -875583260  WHEN x'' THEN x'' END)LIKE(0.5367004608769266))) LIMIT 739992137; -- 0ms;
SELECT DISTINCT LEAD(CASE SQLITE_COMPILEOPTION_USED(rt0.c1)  WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN 2.001203766E9 WHEN (((rt0.c2))=((rt0.c0))) THEN ((vt0.c0)&('-1618311847')) ELSE ((((-1.962614322E9)OR(rt0.c2)))AND(rt0.c1)) END, ((((rt0.c2)|(rt0.c2)))OR(((vt0.c0)<<(rt0.c2)))), CAST(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 END AS INTEGER)) OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR(0X328d9e90)))%(((rt0.c0)*(rt0.c0)))), (-1337097171 IN (rt0.c2, TOTAL(vt0.c0))), (((((((((((((+ (rt0.c0)))OR(UNICODE(rt0.c1))))OR((((vt0.c0, vt0.c0, rt0.c0))<>((rt0.c2, rt0.c1, rt0.c1))))))AND('<z')))OR(((vt0.c0) IS FALSE))))OR(((rt0.c1)OR(rt0.c2)))))AND(rt0.c1)) FROM vt0, rt0 WHERE (((((((((((((0X745137de)AND('M#揍6n')))OR(0.1541512948381626)))OR('0.4236132189918692')))AND(x'')))OR(((x'')-('_\r')))))OR(((0.7091789587876397) ISNULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL CAST(vt0.c0 AS BLOB) FROM rt0;SELECT ALL ((((vt0.c0 COLLATE BINARY)OR((NOT (NULL)))))AND(LIKELY(rt0.c0))) FROM rt0;SELECT ((((CAST(-234071913 AS NUMERIC))OR(((rt0.c0) NOT BETWEEN (vt0.c0) AND ('TRUE')))))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))) FROM vt0 LIMIT 878605561 OFFSET 283084140;SELECT DENSE_RANK() OVER (), FIRST_VALUE(LIKELY(DISTINCT (vt0.c0 IN ()))) OVER (), rt0.c0 FROM vt0 WHERE (((((x'f270') IS FALSE)) BETWEEN (json_patch('x瀟{3', 0.4274593306124638)) AND (((x'e96d') BETWEEN (x'') AND (x'1741648b')))));SELECT DISTINCT 0.25451524618477206 FROM rt0; -- 0ms;
SELECT (- (rt0.c2)) FROM vt0 GROUP BY UNLIKELY(DISTINCT (rt0.c2 IN (vt0.c0))), (rt0.c2 IN (rt0.c1, rt0.c1)) COLLATE BINARY, ((NOT (rt0.c0)) IN ());SELECT DISTINCT CASE (('꠺w[?x(')||(NULL))  WHEN ((rt0.c1)>=(rt0.c2)) THEN rt0.c0 COLLATE BINARY WHEN (~ (rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END THEN CAST(rt0.c1 AS TEXT) ELSE CAST(rt0.c2 AS REAL) END, COUNT(*) OVER (), (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ((~ (rt0.c0)))) FROM rt0, vt0 LIMIT 1399794036; -- 0ms;
SELECT DISTINCT vt0.c0, CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL), CASE rt0.c2 COLLATE RTRIM  WHEN LTRIM(rt0.c2, rt0.c2) THEN (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) END FROM rt0, vt0 WHERE (CAST(CAST(x'' AS BLOB) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((0.6999690609542418)) AND (((~ (rt0.c0))))) FROM rt0, vt0 WHERE ((((((0.45849836350008033)OR('2076650381')))OR(760919300)) IN ((((('59000732')OR(' n귄dO*')))AND(NULL)), '809351755'))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()), ((((rt0.c0)&(rt0.c0)))<(x'')), COALESCE(DISTINCT CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END, ((vt0.c0)||(rt0.c0))), LTRIM(json_valid(rt0.c2)), CASE ((x'')+(rt0.c2))  WHEN (('now') BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN MIN(rt0.c2) THEN rt0.c1 COLLATE RTRIM WHEN ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)) THEN (NULL IN ()) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN (rt0.c1 IN (rt0.c1)) WHEN NULL THEN ((rt0.c2)||(rt0.c1)) ELSE -1077776539 END FROM vt0;SELECT DISTINCT (NOT (MAX(rt0.c0))), ((((((((((vt0.c0)+(rt0.c1)))OR(vt0.c0 COLLATE NOCASE)))OR((((rt0.c1))<((rt0.c0))))))OR((rt0.c1 IN ()))))AND((x'' IN ()))), NULL, COUNT(*) OVER (), x'' FROM vt0;SELECT DISTINCT ((((rt0.c0)|(rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 ELSE 0.5571054540024392 END) AND (COUNT(*))), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE, ((((GROUP_CONCAT(rt0.c0))OR((rt0.c1 IN (vt0.c0)))))AND(LIKELIHOOD(DISTINCT vt0.c0, 0.20024087645748745))) FROM vt0 WHERE (NULL) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM, rt0.c1  NULLS FIRST;SELECT DISTINCT SQLITE_COMPILEOPTION_GET(CAST(rt0.c1 AS NUMERIC)) FROM rt0, vt0 GROUP BY ((CAST(rt0.c1 AS TEXT)) NOTNULL); -- 0ms;
SELECT ALL (~ ((((rt0.c1))=((vt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0, rt0.c1, vt0.c0))>=((rt0.c2, rt0.c2, rt0.c1))) AS REAL) FROM vt0 WHERE (((((NULL)OR(((((x'')OR('E땭Ty6	r')))OR(0X3d7bf32d)))))OR(CAST(0.6493922291146857 AS INTEGER))));SELECT DISTINCT GROUP_CONCAT(((0X420d9604) BETWEEN (rt0.c0) AND (rt0.c2))) OVER () FROM vt0 WHERE (CASE CASE '!!lP''!'  WHEN x'' THEN 0.47611942713270217 END  WHEN CAST('-1651031957' AS REAL) THEN ((NULL) NOT NULL) END);SELECT DISTINCT (((((rt0.c1)<>(rt0.c2)), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))), TOTAL(rt0.c1)))==((json_patch(NULL, vt0.c0), ((rt0.c0)+('')), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))))) FROM vt0 WHERE (((LIKELY('-1774923127')) NOT BETWEEN (((x'') BETWEEN (NULL) AND (0.2651739002226007))) AND (CASE '-1615373393'  WHEN 0.49205075491660877 THEN x'4a0e' ELSE 0xffffffff86c6378b END))) GROUP BY ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) IS TRUE);SELECT (((((- (rt0.c1)))OR((NOT (rt0.c0)))))AND((+ (vt0.c0)))) FROM rt0, vt0 WHERE ((~ ((('') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT (rt0.c0 IN ()) COLLATE NOCASE, LEAD(MAX(((rt0.c1) NOT NULL), (rt0.c0 IN (rt0.c2))), ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))*(CAST(rt0.c1 AS REAL))), ((CAST(rt0.c2 AS REAL)) BETWEEN (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND('-1360452029'))) AND (CASE WHEN rt0.c1 THEN rt0.c0 END))) OVER (), rt0.c1 COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c2, (((- (rt0.c0))) NOTNULL), ((NULL)AND(0.41884443730394105)) COLLATE BINARY FROM rt0 WHERE (((((NULL)) BETWEEN ((-1341844953)) AND ((NULL))) IN ())); -- 0ms;
SELECT ALL ((((rt0.c1)OR(TOTAL(rt0.c2))))OR(((((rt0.c2)AND(0.39661402297247916)))AND(rt0.c2)))) FROM vt0, rt0 GROUP BY (((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)) IN ()), 0.37146527712392186, ((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN ('ev') AND (((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c1 AS REAL)), AVG(CASE WHEN 's-' THEN rt0.c2 END) OVER (), ((((rt0.c1 IN ())))!=(((NOT (rt0.c0))))) FROM vt0, rt0; -- 0ms;
SELECT ALL (- ((rt0.c2 IN ()))) FROM vt0 WHERE (((((x'')|('-1435380147'))) NOT BETWEEN (CASE x'37b7'  WHEN '1781679376' THEN NULL ELSE x'e724' END) AND (((NULL)<(NULL))))); -- 1ms;
SELECT DISTINCT CASE (((rt0.c2))==((0.9712777104739149)))  WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 END ELSE CAST(vt0.c0 AS INTEGER) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM rt0, vt0 WHERE ((((('-1666542857') BETWEEN (0Xffffffffb8ce4ad8) AND (0.8086732295849988))) NOT BETWEEN ((((NULL))<((NULL)))) AND (CASE WHEN NULL THEN '0.6883204146578645' WHEN 0.19806483806645103 THEN 'g跆L擔' WHEN 'PT' THEN '?a0_C{Tfk' ELSE 0Xffba1 END))); -- 0ms;
SELECT DISTINCT NULL FROM rt0, vt0 WHERE ((((x'1c7f' IN ())) NOT BETWEEN (((x'')OR(0.06744084790347071))) AND (LIKELY(DISTINCT 0.6885490199541775)))); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)-(rt0.c1))) COLLATE RTRIM FROM rt0, vt0 WHERE (((('lQ')) NOT BETWEEN ((-1.774923127E9)) AND (('-1005695580'))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CHAR(rt0.c0, rt0.c0, rt0.c2) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)), ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), 'U5', rt0.c2 COLLATE NOCASE, ((rt0.c2)>>(rt0.c2))))!=(((vt0.c0 IN ()), rt0.c0, NULL, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN 0.8605965615823924 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END, (((rt0.c1, NULL, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c0)))))), TOTAL((NOT (rt0.c2))), (((~ (rt0.c0)))GLOB(AVG(vt0.c0))) FROM rt0 WHERE (((x'')IS NOT('Hc')) COLLATE RTRIM) LIMIT -1457626501;SELECT DISTINCT (((~ (vt0.c0))) NOT NULL) FROM rt0 NOT INDEXED;SELECT ((highlight(rt0.c1, rt0.c1, rt0.c0, vt0.c0))==(rt0.c2)), ((CAST(vt0.c0 AS TEXT)) IS TRUE), ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-1629149313'))) IN ()) FROM vt0 WHERE (((IFNULL(DISTINCT 1.479145677E9, x'')) NOTNULL)) EXCEPT SELECT ALL DENSE_RANK() OVER (), CASE WHEN ((((((((rt0.c2)OR('-687281762')))OR(vt0.c0)))AND(rt0.c0)))AND(NULL)) THEN CAST(rt0.c0 AS BLOB) ELSE (('')LIKE(vt0.c0)) END, AVG(((0.6964098130625855)=(rt0.c2))) FROM rt0, vt0 GROUP BY ((('')) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))) AND (((('-2085149204')<>(rt0.c1))))) HAVING ((((rt0.c1)/(rt0.c2)))|('T[E\r'));SELECT DISTINCT (NOT (((rt0.c1)*(vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((0.20843505184390299, rt0.c1, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((x'', ((rt0.c0)-(rt0.c1)), (((vt0.c0, rt0.c1, NULL)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, vt0.c0, NULL))), ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)), ((x'') NOT BETWEEN (rt0.c2) AND (vt0.c0)))) AND ((((rt0.c1)<=(vt0.c0)), LOWER(DISTINCT rt0.c1), ((rt0.c2)OR(rt0.c1)), CAST(rt0.c2 AS INTEGER), ((rt0.c2) IS FALSE)))), AVG(rt0.c0) OVER (), ((AVG(0.44770251636480607)) ISNULL) FROM vt0;SELECT DISTINCT (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM, CAST(vt0.c0 AS BLOB), ((vt0.c0)!=(vt0.c0)))) AND (('-605829464', CAST(vt0.c0 AS NUMERIC), (('-340392905') IS FALSE)))), ((x'')%(((((rt0.c0)AND(rt0.c0)))AND(vt0.c0)))), rt0.c0 FROM rt0, vt0 GROUP BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN rt0.c2 COLLATE RTRIM ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END END HAVING ((((~ (NULL))))<=((LIKE(rt0.c2, rt0.c1, '-')))) LIMIT -1180258944; -- 0ms;
SELECT ALL CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN 'd#⃒' ELSE rt0.c2 END COLLATE BINARY FROM vt0 WHERE (((0.38877427656849994 COLLATE BINARY)<=(((((-606587267)OR('rt')))OR('R䔐6ha')))));SELECT DISTINCT (((rt0.c1)>('V㳎[c.')) IN ()) FROM rt0 WHERE (((((((NULL)<=(x'')))AND((+ (1515116080)))))AND((('1,N뤵HZ')IS NOT(''))))); -- 0ms;
SELECT ALL CAST(((vt0.c0) NOT NULL) AS BLOB) FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((vt0.c0 COLLATE BINARY)=(vt0.c0)) ORDER BY ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END) IS TRUE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c1))<((vt0.c0))) THEN rt0.c0 END FROM vt0, rt0 WHERE (CAST((((((((((((('149726115')AND(x'f3f4')))OR(0.7608900906331921)))OR(NULL)))AND(0x2e900f0a)))OR(996727104)))AND('')) AS REAL)); -- 0ms;
SELECT ALL (+ (rt0.c2)) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TOTAL((- (vt0.c0))) OVER () FROM rt0, vt0 WHERE (ABS(((((0Xffffffffeeebecaf)AND(0xffffffff916e99d6)))OR(0x682077c8)))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (0.16310087372483395)) FROM rt0 LIMIT -787865908 OFFSET 2121535848;SELECT LAST_VALUE(CAST((+ (rt0.c1)) AS REAL)) OVER (), NULLIF(CAST(rt0.c0 AS TEXT), (((vt0.c0))<>((vt0.c0)))), (((- (rt0.c0)))OR(rt0.c2 COLLATE BINARY)) FROM rt0, vt0 LIMIT 500358023; -- 0ms;
SELECT ALL NULL FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((((((~ (vt0.c0)))OR(rt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS INTEGER))))OR((- (rt0.c0)))))OR(MIN(rt0.c2))))AND(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))) FROM rt0 WHERE (CASE WHEN x'724797f9' THEN (('C_0rs')>>('')) ELSE ((x'')GLOB('5I')) END);SELECT DISTINCT rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE NOCASE, (((('Zz')&(0.5054640834156804)))LIKE(load_extension(vt0.c0, rt0.c1))), CASE WHEN '' THEN AVG(vt0.c0) WHEN ((rt0.c2)&(rt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt0.c0 AS NUMERIC) THEN -1666542857 END, ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR((+ (vt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END)) FROM vt0, rt0 WHERE (x'');SELECT (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN '545375148' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)), ((((rt0.c2) IS TRUE))==(LOWER(DISTINCT rt0.c1))), CASE ((((((((vt0.c0)OR(vt0.c0)))OR(0.7816869170063251)))AND(rt0.c0)))AND(rt0.c2))  WHEN rt0.c2 THEN (~ (rt0.c1)) ELSE CAST(rt0.c0 AS INTEGER) END FROM rt0 WHERE (CAST((((x''))<=((0.32174453536624514))) AS TEXT));SELECT NULL FROM vt0 WHERE (((((((((((NULL)OR(x'')))OR(0.6153355621954057)))OR(x'')))OR(x'48afcc45')))*(((((((((0.8294042273142765)OR(0.23148550932186351)))OR(x'')))AND('0.8506099728050805')))OR(-1421388792))))) LIMIT 1643192161 OFFSET 1480633379 EXCEPT SELECT DISTINCT LAST_VALUE(ABS(vt0.c0) COLLATE BINARY) OVER ( RANGE CASE WHEN '煥()Z6D&dN 6' THEN 0xffffffffba358a58 END COLLATE BINARY COLLATE NOCASE PRECEDING EXCLUDE NO OTHERS) FROM vt0;SELECT (AVG(rt0.c2) IN (SUM(rt0.c2))) FROM rt0, vt0; -- 0ms;
SELECT (((((vt0.c0))>=((vt0.c0)))) BETWEEN (((vt0.c0)<(rt0.c0))) AND (rt0.c1 COLLATE RTRIM)) FROM rt0 WHERE ((CASE WHEN 0.8996682731420917 THEN x'2e2c' END IN ()));SELECT MIN(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END) FROM vt0, rt0 ORDER BY CAST((rt0.c1 IN (rt0.c0, rt0.c0)) AS BLOB) DESC, (((rt0.c1 IN ())) IS FALSE)  NULLS LAST; -- 0ms;
SELECT TOTAL(CAST(rt0.c1 AS TEXT)) FILTER(WHERE ((((((((((((((((rt0.c2)OR('')))OR(rt0.c1)))OR(((rt0.c1) NOTNULL))))AND(rt0.c2 COLLATE NOCASE)))OR(((vt0.c0) NOT NULL))))OR(CAST(vt0.c0 AS TEXT))))AND((('-1990374347')/(rt0.c1)))))AND((((x''))==((vt0.c0)))))) OVER () FROM rt0 WHERE (SQLITE_VERSION());SELECT TOTAL(UNLIKELY(DISTINCT rt0.c2)) OVER (), 'MRR', (+ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM vt0 WHERE ('vJEp');SELECT ALL ((CASE WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END)>>(((rt0.c2) NOTNULL))), CAST((rt0.c0 IN ()) AS INTEGER), CAST((vt0.c0 IN ()) AS REAL) FROM vt0 WHERE (((((0Xffffffffbf3969f4)<(0.4847099141903336)))%(((x'f717')>=(0x4b751c2d))))) ORDER BY (((vt0.c0))<((rt0.c0 COLLATE NOCASE)))  NULLS LAST, CASE (+ (rt0.c0))  WHEN json_quote(rt0.c2) THEN ((rt0.c0)/(rt0.c2)) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((vt0.c0)-(rt0.c1)) THEN ((rt0.c0)<(rt0.c1)) ELSE vt0.c0 COLLATE BINARY END DESC;SELECT DISTINCT GROUP_CONCAT('781192970') OVER ( PARTITION BY (((rt0.c2 IN ())) BETWEEN (CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END) AND (((rt0.c1)/(x'')))), rt0.c0 COLLATE BINARY) FROM rt0, vt0 WHERE ('rf') LIMIT 1935959917; -- 0ms;
SELECT DISTINCT ((1.060410688E9) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND ((rt0.c1 IN ()))) FROM rt0, vt0 WHERE ('1527832283'); -- 0ms;
SELECT DISTINCT rt0.c0, (((vt0.c0)-(rt0.c0)) IN ()), ((vt0.c0) ISNULL) COLLATE RTRIM FROM vt0 WHERE (((((0Xffffffffb8641aa1)/(0Xffffffffb88d8af3))) BETWEEN (((NULL) NOT NULL)) AND ((0.7867101111893529 IN ()))));SELECT DISTINCT SUM((- (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ALL ((rt0.c0)<=(x'281d')) FROM vt0 NOT INDEXED, rt0 WHERE ((((NULL, x'8f47', -9.1759296E8)) BETWEEN ((((0xffffffffc1037165)<(NULL)), ((x'321e') IS FALSE), NULLIF(0.9784036335830342, '539560764'))) AND ((NULL COLLATE NOCASE, 0.48518448565949535, CAST(0.9802695426274441 AS REAL))))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0 WHERE ((x'' IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL (('')&(rt0.c2)) FROM vt0, rt0 WHERE ((((((('1996562666') NOT BETWEEN ('6	%<U!㽐') AND (0.08014186830272718)))AND(((('-158869347', x'67e8', 0.25219826441802495)) BETWEEN (('-1673876995', -1.741473655E9, -796540310)) AND ((NULL, NULL, 0xffffffffc7f7ee15))))))AND(((0Xe710870) BETWEEN (323012819) AND ('1776662855'))))) ORDER BY TRIM((((rt0.c2))>((rt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT NULL, CUME_DIST() OVER (), CASE CAST(rt0.c2 AS NUMERIC)  WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN GROUP_CONCAT(rt0.c1) WHEN 'gk' THEN CASE WHEN rt0.c1 THEN NULL END WHEN (- (rt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END FROM vt0;SELECT (((rt0.c0) NOTNULL) IN ()), (((rt0.c1 IN ()))+((+ (vt0.c0)))), (NULL IN ()) FROM rt0 WHERE (((LIKELIHOOD(DISTINCT x'f2b0', 0.0842337807384137))*(((NULL)<<('2041559700')))));SELECT ALL AVG(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) OVER (), ((x'')AND(COUNT(x''))), json(CASE WHEN vt0.c0 THEN vt0.c0 END) FROM rt0;SELECT DISTINCT x'', (((((rt0.c1) NOT BETWEEN (0.8856991761350103) AND (vt0.c0)), (((rt0.c0, 0.18419198256296132, vt0.c0)) BETWEEN ((rt0.c1, rt0.c0, x'')) AND ((vt0.c0, rt0.c0, rt0.c1))), CASE WHEN rt0.c0 THEN rt0.c1 END))>=((((rt0.c1)>=(rt0.c2)), ((((vt0.c0)OR(rt0.c2)))AND(x'bb831adc')), (rt0.c1 IN (rt0.c2, rt0.c2))))), GROUP_CONCAT(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))) FROM rt0, vt0 WHERE (((x'') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT (((((rt0.c1))=((rt0.c2)))) BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'3330' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END) AND ((NOT (rt0.c0)))) FROM vt0;SELECT DISTINCT ((MIN(rt0.c0)) IS TRUE) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)|(CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (UPPER((x'' IN (NULL))));SELECT DISTINCT COUNT(CAST(NULL AS REAL)) OVER () FROM vt0, rt0 WHERE (0.9371061481977292); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)OR(vt0.c0)))AND(rt0.c1))) NOTNULL), rt0.c1, (((((rt0.c1) IS TRUE)))!=((MIN(']i(')))) FROM vt0;SELECT CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB) FROM rt0; -- 1ms;
SELECT DISTINCT COUNT(((rt0.c0) NOT NULL)) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0, vt0 WHERE (((((((((CAST('BX' AS INTEGER))OR(CASE x''  WHEN x'' THEN 0.4487920092637149 WHEN 0Xfffffffff9759c88 THEN '?}''s(얬*雦' WHEN x'6669' THEN x'd285' END)))OR(NULL COLLATE NOCASE)))AND((('') NOT BETWEEN (0.8378597881292641) AND (NULL)))))AND(CASE WHEN 0.12706543147572402 THEN '521624312' WHEN x'67ab' THEN x'' WHEN x'' THEN 0.3481112564211023 END))); -- 0ms;
SELECT DISTINCT ((((NULL)IS NOT(rt0.c1))) NOTNULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((((rt0.c1)OR(vt0.c0)))AND(0.43145580668503436)) END, GROUP_CONCAT(LIKELY(vt0.c0)) OVER (), CAST((((vt0.c0)) NOT BETWEEN ((-830682332)) AND ((rt0.c2))) AS NUMERIC), ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN -1.618311847E9 WHEN rt0.c2 THEN rt0.c0 END)<(((vt0.c0)&(rt0.c2)))), ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR(CAST(rt0.c2 AS BLOB))))OR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT '宯3㆗<0' FROM vt0, rt0 WHERE ((('714796190')LIKE((0.6899371758497843 IN (0.4181963026611031))))) GROUP BY (((rt0.c2) NOT NULL) IN ()) HAVING ((rt0.c0)<=(rt0.c2)) COLLATE NOCASE COLLATE RTRIM; -- 1ms;
SELECT DISTINCT CAST(rt0.c2 AS NUMERIC), CAST(((rt0.c2)-(rt0.c2)) AS NUMERIC), 0.7335609743280338, AVG((- (vt0.c0))), ((((rt0.c1)IS NOT(vt0.c0))) BETWEEN (((rt0.c1)||(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'')))) FROM vt0 WHERE (((CASE 'h\nw'  WHEN x'' THEN '9K몔U{쉪' END)<=(json_array_length(NULL))));SELECT DISTINCT CASE WHEN 0Xffffffff8909ebbb THEN ((0.26206225982714215) NOT NULL) ELSE ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END, (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN (((rt0.c2 IN ()), ((rt0.c0) IS TRUE), CAST(rt0.c1 AS TEXT))) AND (((((vt0.c0, rt0.c1, rt0.c1))<=((rt0.c0, rt0.c1, rt0.c2))), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), rt0.c0 COLLATE RTRIM))), CAST(rt0.c0 COLLATE BINARY AS NUMERIC) FROM rt0;SELECT DISTINCT CASE WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c2)<<(rt0.c1)) WHEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) WHEN (rt0.c2 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) END FROM rt0, vt0 WHERE (((('-940052971')) BETWEEN ((0.641884509819897 COLLATE NOCASE)) AND ((CASE WHEN 1.277671262E9 THEN '' WHEN 'H.1|' THEN 0.6002059218291782 WHEN '' THEN 'Pf +씑h' ELSE -2.73126294E8 END)))) ORDER BY CAST(((rt0.c2) IS TRUE) AS NUMERIC) DESC  NULLS LAST, (rt0.c0 IN (rt0.c2)) COLLATE BINARY, NULL ASC  NULLS FIRST; -- 0ms;
SELECT ((CAST(vt0.c0 AS TEXT))IS(((vt0.c0)>=(rt0.c2)))) FROM vt0, rt0 WHERE (MIN((0.07473536623242771 IN ()), CASE WHEN x'cc5d' THEN '-1666542857' END)); -- 0ms;
SELECT DISTINCT CAST((((rt0.c0))<=((rt0.c1))) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), rt0.c0, ((CAST(rt0.c0 AS REAL)) NOTNULL) FROM rt0, vt0 LIMIT 548370797 OFFSET -358456108; -- 0ms;
SELECT DISTINCT x'', rt0.c1, (+ (((rt0.c1)LIKE(rt0.c2)))), TRIM(DISTINCT ((rt0.c1)IS NOT(vt0.c0)), ((((1307686950)AND(rt0.c2)))OR(rt0.c0))), ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END) BETWEEN (((((7.1479619E8)OR(rt0.c2)))OR(vt0.c0))) AND (rt0.c2)) FROM rt0, vt0 WHERE ((((NULL IN ()))<<(((0.2342964362981802) BETWEEN (NULL) AND (1.236343744E9))))); -- 0ms;
SELECT (((NOT (rt0.c0)))AND(((rt0.c2)OR(rt0.c2)))) FROM vt0;SELECT ALL rt0.c1 FROM rt0, vt0 ORDER BY CASE (((rt0.c0, vt0.c0, rt0.c0))<>((rt0.c1, '[u', vt0.c0)))  WHEN vt0.c0 THEN (((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2))) WHEN vt0.c0 THEN CAST(rt0.c1 AS INTEGER) WHEN rt0.c2 THEN CASE rt0.c0  WHEN rt0.c1 THEN '-1513259968' END ELSE (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))) END; -- 0ms;
SELECT ((COUNT(*))IS(vt0.c0)) FROM rt0 WHERE ((CAST(x'' AS BLOB) IN ()));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 GROUP BY ((vt0.c0) NOTNULL) COLLATE RTRIM COLLATE NOCASE HAVING ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)<=(((rt0.c0) IS TRUE)));SELECT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END IN ()) FROM rt0, vt0; -- 1ms;
SELECT (~ (rt0.c1 COLLATE RTRIM)), (NOT (((rt0.c1)OR(rt0.c1)))), COUNT(0.22697581032923808) OVER () FROM rt0, vt0 WHERE (CASE x'5f87'  WHEN x'' THEN -2079492230 END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT SUM((rt0.c0 IN ()) COLLATE BINARY) OVER () FROM rt0 GROUP BY (((((rt0.c1 IN (rt0.c2, vt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) LIMIT -1666542857 OFFSET 781192970;SELECT ((((rt0.c0) NOT NULL))OR(TOTAL(rt0.c0))), ((json_valid(vt0.c0))|(CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)), CASE WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)) WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) THEN CAST(NULL AS BLOB) WHEN CAST(vt0.c0 AS TEXT) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) ELSE MIN(rt0.c1) END FROM rt0, vt0 LIMIT -639236448; -- 0ms;
SELECT RANK() OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*), ((((rt0.c2)||(rt0.c1))) ISNULL), CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((rt0.c2)||(rt0.c1)) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) END FROM vt0 WHERE ((((NULL, '', NULL)) BETWEEN (('1711338710', ((0.769392270823059) NOT NULL), ((((x'c5e8fdf0')OR(0x95aedd5)))OR(1019212607)))) AND (((+ ('-1040359342')), x'ab04f4f8' COLLATE RTRIM, (NULL IN ())))));SELECT ALL ((MAX(rt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND ((- (rt0.c2)))) FROM rt0, vt0 ORDER BY rt0.c2; -- 2ms;
SELECT ALL CAST(((rt0.c1) NOT NULL) AS NUMERIC) FROM vt0 ORDER BY CASE WHEN CAST(rt0.c2 AS REAL) THEN UPPER(DISTINCT vt0.c0) ELSE ((rt0.c2)<(vt0.c0)) END  NULLS FIRST;SELECT DISTINCT rt0.c2 FROM rt0 ORDER BY vt0.c0 ASC;SELECT (((rt0.c0)<=(rt0.c0)) IN (MIN(rt0.c1))) FROM vt0 WHERE ((((''))>((x''))) COLLATE BINARY);SELECT CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt0 WHERE (((NULL) IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT ((((rt0.c1)IS NOT(rt0.c0))) NOT BETWEEN (rt0.c0) AND (NULL)) FROM rt0; -- 0ms;
SELECT DISTINCT NULLIF((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), CASE 0.7829378039536852  WHEN x'' THEN rt0.c0 ELSE vt0.c0 END) FROM rt0, vt0 ORDER BY ((NULL) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM  NULLS LAST, (+ (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT CAST(((((rt0.c2)OR(rt0.c0)))OR(NULL)) AS NUMERIC) FROM rt0, vt0 WHERE (((json_valid(x''))!=(CAST(0X357fa9d2 AS INTEGER)))); -- 0ms;
SELECT NULLIF(rt0.c1, vt0.c0) COLLATE BINARY FROM rt0;SELECT ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL) FROM vt0;SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0 LIMIT 51490279 OFFSET 202791449; -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c1, rt0.c1))=((rt0.c1, rt0.c2, vt0.c0))) COLLATE BINARY FROM rt0, vt0 WHERE (NULL COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((rt0.c1) ISNULL))AND('-917592960')))OR(QUOTE(rt0.c1))) FROM rt0, vt0 WHERE (((-253364018) NOT BETWEEN (NULL) AND (CASE 0.3402611005582581  WHEN 980050642 THEN x'' END))); -- 1ms;
SELECT DISTINCT NTH_VALUE(((CASE WHEN rt0.c2 THEN vt0.c0 ELSE NULL END)%(((rt0.c2) IS FALSE))), CAST(((rt0.c0)|(rt0.c2)) AS NUMERIC)) OVER (), '-1956324422', TRIM(DISTINCT LENGTH(vt0.c0)) FROM rt0, vt0 GROUP BY LTRIM(CAST(rt0.c2 AS BLOB)) HAVING AVG(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN ((rt0.c1 IN (rt0.c0))) AND (CASE WHEN rt0.c2 THEN rt0.c2 END)) ASC  NULLS FIRST; -- 0ms;
SELECT ((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))|(rt0.c0)), CASE ((rt0.c0) NOT NULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE '!- 9 {eS' END THEN TRIM(DISTINCT rt0.c2) ELSE CAST(rt0.c2 AS BLOB) END, ((((vt0.c0)-(rt0.c0)))%((('FALSE')&(vt0.c0)))) FROM rt0;SELECT ALL ((((((NULL)IS(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END)))OR(((rt0.c2)+(vt0.c0)))) FROM rt0, vt0 WHERE (((((('-1317335965')>=('1164686529')), (('mgDh')!=(x'982d')), (NOT (0.6153355621954057))))>=((((NULL) NOT BETWEEN (x'8ded') AND ('days')), ((((x'6d5e')AND(NULL)))OR(-702521520)), (('5Eq2d')<(x'6d2c')))))) ORDER BY ((((rt0.c2) IS TRUE)) NOTNULL)  NULLS LAST; -- 1ms;
