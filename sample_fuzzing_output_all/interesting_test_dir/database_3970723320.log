-- Time: 2024/06/07 09:16:14
-- Database: database20
-- Database version: 3.40.0
-- seed value: 3970723320
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c1, c2) VALUES (NULL, 0X57688afd, x'c54c037b', NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c3) VALUES (0.997314101796805); -- 0ms;
INSERT OR FAIL INTO rt0(c4, c1) VALUES (x'', x'cf78'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('9灂'); -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM main; -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0, c3) VALUES (NULL, 1.466469117E9, 0.6045757864674398); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (0.6577362864420969, x'', -596299442, x'', '-9mp-\n5ᘚ)'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (0.01880770456618408, x'3c63', x'a2c7', 0xfffffffff2b57042, '-1185989380'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0, c1) VALUES ('r', '7bJh4%)', '-9mpC\n53)', '23i'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (NULL), (x'efb95311'), (''); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA cache_spill; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
REINDEX; -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0, c2) VALUES (x'65d7', (((((0.20558891631366816)) BETWEEN ((-174912537)) AND (('HpYQb')))) NOT BETWEEN (902484823 COLLATE BINARY) AND (((0.1812995532228362) NOT BETWEEN ('-479200911') AND ('-9mp-\n5ᘚ)')))), '744965471', '㜾U3+G0Kt'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3) VALUES ('-222990270', x''); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 16ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (NULL, 0.9046510004345502, 0.7925522363759725, '-596299442', '1466469117'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c4) VALUES (0.5085747109844772, NULL), ('-623135549', 'Vp'), (0.10097464757818797, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3) VALUES (x'9dc7', '0.7925522363759725', x''); -- 0ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.shrink_memory; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_size; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), (~ (rt0.c0)), CAST(MAX(rt0.c0) AS BLOB) FROM rt0 WHERE (CAST(SQLITE_COMPILEOPTION_GET('') AS INTEGER)); -- 0ms;
SELECT DISTINCT (CAST(x'cf86' AS TEXT) IN ()), (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()), ((((rt0.c4)OR(rt0.c1)))OR(rt0.c3)) COLLATE BINARY, ((((rt0.c3) ISNULL)) NOT BETWEEN (((rt0.c2)<>(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c4 END)), CASE WHEN ((rt0.c3) ISNULL) THEN ((rt0.c3)=(rt0.c2)) ELSE ((((NULL)AND(rt0.c1)))AND(rt0.c2)) END FROM rt0 WHERE ((((((-2.2299027E8, 'FALSE', NULL, x'ee2e', '-1637520554'))<(('', NULL, x'', x'', '-665840102'))))||((((NULL))=(('-596299442')))))); -- 1ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c4, ((((ABS(rt0.c1))AND(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c4)<=(rt0.c1)))), json_valid(((rt0.c1)||(rt0.c4))) FROM rt0; -- 0ms;
SELECT ALL (- ('>-#}%')) FROM rt0 WHERE ((NOT (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((((((CAST(rt0.c2 AS INTEGER))OR(rt0.c4)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(AVG(rt0.c3))))OR(((((rt0.c4)OR(rt0.c3)))OR(rt0.c0)))), AVG((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c4, 'vp', rt0.c0)))) OVER (), (((rt0.c2 IN ())) NOT BETWEEN (MAX(rt0.c0)) AND (rt0.c2 COLLATE BINARY)) FROM rt0 WHERE (((((((0.16766370786622597)OR(NULL)))OR(x'')))AND(CAST(0xffffffffd2f741ef AS TEXT)))) GROUP BY NULL HAVING CASE WHEN rt0.c1 THEN ((rt0.c1)|(rt0.c3)) ELSE x'' END; -- 1ms;
SELECT DISTINCT '-623135549', '481458247', -2.2299027E8 FROM rt0 WHERE ('-1799644725') ORDER BY ((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) AND (((')lr\ni ')>(rt0.c2)))); -- 0ms;
SELECT ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (((rt0.c2)>>(rt0.c3))) AND (((rt0.c4)<>(rt0.c4)))) FROM rt0 WHERE ((((('-941075052')>(0.7925522363759725)))<=(CASE ''  WHEN '-665840102' THEN 0xffffffffcf762bf3 END))); -- 0ms;
SELECT ALL ((rt0.c1 IN ()) IN ()) FROM rt0 ORDER BY 0.20558891631366816 DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((rt0.c1)) AND (((rt0.c4 IN ())))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (LTRIM(rt0.c2) IN ('h+')) FROM rt0 WHERE (((((((NULL)AND(203688022)))AND(x'')))=(x'7b75' COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT ((x'24726ed8') ISNULL) FROM rt0 WHERE ('-1982691221') ORDER BY ((rtreenode(rt0.c4, rt0.c4)) BETWEEN (rt0.c2) AND (NULL))  NULLS LAST, '-1648252733'; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT ALL ('' IN ()) FROM rt0 WHERE ((((- (0.6045757864674398))) NOT BETWEEN (CASE WHEN '-1648252733' THEN '1106813943' END) AND (CAST(-8.16892098E8 AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c3, x'', rt0.c4, rt0.c3)) NOT BETWEEN ((AVG(rt0.c0), CAST(rt0.c4 AS BLOB), CAST(rt0.c0 AS NUMERIC), ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c4)%(rt0.c1)))) AND ((rt0.c2, rt0.c2 COLLATE RTRIM, ((rt0.c2)AND(rt0.c2)), ((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)), (rt0.c2 IN ())))), -1614591649, json_object(HEX(rt0.c4), ((rt0.c1)IS(rt0.c1))) FROM rt0; -- 0ms;
SELECT TOTAL(NULL), AVG(AVG(((rt0.c2)<(rt0.c1)))), TOTAL((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE BINARY) FROM rt0 WHERE (((((('\rG2rL/yA-' IN ()))AND(((9.02484823E8) ISNULL))))AND((x'' IN ()))));SELECT DISTINCT ((((rt0.c2)IS NOT(rt0.c1))) IS FALSE) FROM rt0 GROUP BY 0X788eca49;SELECT ((rt0.c4) IS TRUE), ((rt0.c3) NOT NULL), (((NOT (rt0.c0))) ISNULL) FROM rt0; -- 0ms;
SELECT ALL CASE rt0.c4 COLLATE NOCASE  WHEN (((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((rt0.c4, rt0.c4, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c4))) THEN rt0.c2 COLLATE NOCASE WHEN ((rt0.c0)|(rt0.c1)) THEN (- (rt0.c0)) WHEN ((rt0.c4) ISNULL) THEN ((x'') NOT BETWEEN (rt0.c4) AND (rt0.c4)) WHEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c2)) THEN (rt0.c0 IN (rt0.c0)) WHEN CHANGES() THEN NULL END FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (CAST(rt0.c2 AS NUMERIC))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT PERCENT_RANK() OVER (), x'', ((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE NOCASE) IS TRUE), (((rt0.c0)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1))))), ((rt0.c0 IN (NULL, rt0.c3)) IN ()) FROM rt0 WHERE (NULL) ORDER BY CASE ((rt0.c4)>=(NULL))  WHEN x'08e5c620' THEN ((rt0.c1)<=(rt0.c0)) ELSE (+ (rt0.c4)) END DESC  NULLS FIRST; -- 0ms;
SELECT ((rt0.c3 COLLATE BINARY) NOT BETWEEN (((((rt0.c4)OR(rt0.c0)))OR(rt0.c0))) AND (((rt0.c3)IS(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((('-222990270') NOT BETWEEN (rt0.c1) AND ('0.7925522363759725'))) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL RANK() OVER () FROM rt0 WHERE ((- ((~ ('6X3'))))) ORDER BY ((((0Xffffffffcf4f373e)AND((- (rt0.c2)))))AND(((rt0.c3)>>(rt0.c2)))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT '19524983', LAG(((((((rt0.c2) NOT NULL))OR(rt0.c0)))AND(((rt0.c3) BETWEEN ('-1115432013') AND (rt0.c2)))), ((CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN 0.5910769535522795 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END)IS(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)))), (((((rt0.c2))<((rt0.c1)))) BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END) AND ((NOT (rt0.c2))))) OVER (), MIN(ABS(DISTINCT rt0.c1)) FROM rt0 WHERE ((NOT ((('TRUE')&('937430410'))))); -- 0ms;
SELECT (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((NULL, rt0.c0 COLLATE RTRIM, CAST(rt0.c3 AS INTEGER))) AND ((LIKELY(DISTINCT rt0.c3), GROUP_CONCAT(rt0.c4), (rt0.c4 IN ())))) FROM rt0; -- 0ms;
SELECT ALL CAST(((rt0.c0) NOTNULL) AS NUMERIC), CASE WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) THEN 0.4035529839679347 ELSE json_patch(rt0.c4, 0.8130567238489153) END, LAST_VALUE(rt0.c2) OVER ( PARTITION BY ((json_type(rt0.c1)) NOT BETWEEN ((NOT (rt0.c2))) AND ((NOT (rt0.c0)))), COALESCE(((0.4159565304264795) NOT NULL), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))), HEX(((rt0.c0)IS NOT(rt0.c2))), rt0.c1) FROM rt0; -- 0ms;
SELECT ALL (((AVG(rt0.c4)))>((((rt0.c2)<(rt0.c4))))), rt0.c1, ((((((((rt0.c1 COLLATE NOCASE)OR(((rt0.c3)%(rt0.c3)))))AND(rt0.c0 COLLATE BINARY)))OR(((NULL) ISNULL))))OR(MIN(rt0.c1))) FROM rt0 GROUP BY (NOT (((rt0.c2) IS FALSE))), rt0.c4, rt0.c2 HAVING (((rt0.c3 IN ()))>>(CASE 0.20558891631366816  WHEN rt0.c2 THEN '-623135549' END)); -- 0ms;
SELECT (((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN ((((rt0.c2))<>((NULL)))) AND (TOTAL(rt0.c1))) FROM rt0 WHERE (((('W!+' IN (x''))) IS TRUE)); -- 1ms;
SELECT DISTINCT (((((rt0.c1, rt0.c1, rt0.c3))=((rt0.c2, rt0.c0, rt0.c0)))) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (COUNT(rt0.c0))) FROM rt0 WHERE (((CASE 0.4390506133079486  WHEN x'caeba13f' THEN NULL ELSE x'' END)LIKE((+ (0.5910769535522795))))); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE WHEN (('-596299442')IS(0.029128400137869215)) THEN ((NULL)&(0.4550625084477482)) WHEN CASE 'ꅆv		''xL?'  WHEN x'c9ed' THEN NULL ELSE '\V' END THEN (((NULL, 'J}', NULL, 0.4390506133079486, x''))>((x'', '', NULL, NULL, ')Ol?r&'))) WHEN ((('-486459765'))<((x''))) THEN CAST(NULL AS NUMERIC) END); -- 0ms;
SELECT ALL rt0.c2, ((('9灂' IN (rt0.c0, rt0.c4))) NOT BETWEEN (rt0.c0) AND (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 END)), (((((rt0.c1)&(rt0.c4)), (rt0.c1 IN ()), (- (rt0.c2))))!=((MAX(rt0.c1), CAST(rt0.c3 AS TEXT), CAST(rt0.c3 AS BLOB)))) FROM rt0 WHERE ((((((0.431403797209461))<=(('Xr'))))*((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c3) IS TRUE) AS INTEGER) FROM rt0 WHERE ((((('-1892573390') ISNULL))!=(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT (((-70347713) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ()), ((((((((((rt0.c3)<(rt0.c1)))OR(((((rt0.c3)AND(rt0.c2)))AND(NULL)))))OR(rt0.c3)))AND(x'')))OR(((rt0.c0)IS(rt0.c4)))), rt0.c4 FROM rt0 UNION SELECT QUOTE(json(1.106813943E9)), ((json_valid(rt0.c1))>>(MAX(rt0.c3))), rt0.c1 FROM rt0; -- 0ms;
SELECT ALL TOTAL(CAST(rt0.c3 AS NUMERIC)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)), ((rt0.c3)<(x''))) FROM rt0 WHERE (((((x'')OR((x'' IN ()))))AND(CAST('' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (NOT ((~ (rt0.c3)))) FROM rt0 WHERE ((((((0Xffffffff9adc3e14 IN ('203688022')))AND((0.1694262805735065 IN ()))))AND((0.11690876922372773 IN ())))); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END) AND (rt0.c1 COLLATE BINARY)), CAST((~ (rt0.c3)) AS TEXT), (- ((((x'', rt0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c1))))) FROM rt0 LIMIT 554724937 OFFSET -1523143280; -- 0ms;
SELECT ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END)GLOB(((rt0.c3)IS NOT(rt0.c3)))), CAST(((0.8407451586052302) NOT NULL) AS NUMERIC), CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB) FROM rt0; -- 0ms;
SELECT ALL ((0.7243331199929178) NOT NULL) FROM rt0 ORDER BY ((((CAST('0.10097464757818797' AS TEXT))OR(rt0.c2)))OR(CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END))  NULLS LAST, ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))<>(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4))))  NULLS FIRST; -- 0ms;
SELECT ((((CASE WHEN 0xffffffffbd83dbb3 THEN rt0.c3 END)OR((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0 WHERE (((((NULL)<<(0.1694262805735065)))>=((- ('-831807162'))))); -- 0ms;
SELECT ALL (((('R.}k' COLLATE NOCASE)OR(((rt0.c0) NOT NULL))))AND(((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)))) FROM rt0 WHERE ((LENGTH(0.01880770456618408) IN (((((x'')AND(-1.74912537E8)))AND(NULL)), (~ (0.5548809032219271))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 WHERE (((CASE WHEN '0.7925522363759725' THEN NULL END) BETWEEN (COALESCE(x'3bb1', 0x5c2e0f67)) AND (CAST('-1982691221' AS TEXT)))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT ALL ((('1550079366'))>=((rt0.c0 COLLATE BINARY))) FROM rt0 ORDER BY CASE CASE rt0.c3  WHEN '-1115432013' THEN rt0.c2 ELSE rt0.c2 END  WHEN CAST(rt0.c2 AS TEXT) THEN (((rt0.c1, rt0.c1, rt0.c4))==((rt0.c0, rt0.c3, rt0.c4))) ELSE rt0.c3 END DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (- (rt0.c0 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT LENGTH(((((rt0.c4)OR(rt0.c1)))OR(rt0.c0))), rt0.c1, LIKELY(TOTAL(rt0.c4)) FROM rt0 WHERE (((LIKELY(DISTINCT '-1115432013')) NOT BETWEEN (x'' COLLATE BINARY) AND ((+ (NULL))))) GROUP BY (((rt0.c0) NOTNULL) IN (((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))); -- 0ms;
SELECT DISTINCT COALESCE(CAST(rt0.c0 AS BLOB), CAST(rt0.c1 AS BLOB), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)), rt0.c3 COLLATE RTRIM) FROM rt0 WHERE (CASE (('-1637520554') NOT BETWEEN (x'') AND (NULL))  WHEN ((((-1.69684222E9)AND('I?tz>II')))OR(NULL)) THEN (+ (0.6577362864420969)) WHEN (+ ('Uf\')) THEN (('L\n''UiwWའ') NOT BETWEEN (NULL) AND (x'')) WHEN ((x'') NOTNULL) THEN (((NULL)) BETWEEN ((0Xffffffffcb099611)) AND (('0.1812995532228362'))) END) GROUP BY (((((rt0.c1)>>(rt0.c0))))>=((TYPEOF(DISTINCT rt0.c3)))), TYPEOF((NOT (rt0.c3))), CAST(CAST(rt0.c1 AS REAL) AS TEXT) HAVING CAST(((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)))OR(0.9897536529453772)))AND(rt0.c3)) AS INTEGER); -- 0ms;
SELECT ALL UNLIKELY(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c1 THEN '' ELSE rt0.c1 END) FROM rt0 WHERE (((((((((-2002103226)AND(x'')))OR(886884361)))OR((NULL IN ()))))OR(CASE x'afef'  WHEN 0.7625651315435238 THEN '1466469117' ELSE 0.5840123100353932 END))); -- 0ms;
SELECT ALL LAST_VALUE((((rt0.c4 COLLATE RTRIM, ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)), ((rt0.c2)*(rt0.c0))))<((((rt0.c2) BETWEEN (rt0.c0) AND (NULL)), ((rt0.c0)*(rt0.c4)), CAST(rt0.c3 AS BLOB))))) OVER (), (- (rt0.c1 COLLATE RTRIM)), ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((x'')AND(rt0.c2)))AND(-566982018)))), AVG(((rt0.c2)&(rt0.c4))) OVER (), rt0.c1 FROM rt0 LIMIT 815763434 OFFSET 1546522471; -- 0ms;
SELECT (rt0.c3 IN (NULL)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL ((DATETIME(rt0.c0, rt0.c4, rt0.c0)) NOTNULL), CAST((((rt0.c0, rt0.c4, rt0.c1))<((rt0.c4, rt0.c0, '67'))) AS TEXT), x'75da' FROM rt0 WHERE ((((((((('')OR(NULL)))OR(x'')))AND('w)')))OR(NULL)) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((CAST(rt0.c3 AS INTEGER))IS(json_remove(rt0.c2, rt0.c3))), (((((rt0.c4)||(''))))=((COALESCE(DISTINCT rt0.c0, rt0.c4)))), ((((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN ((x'5281', rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c0)))))<((rt0.c4))), TOTAL((+ (rt0.c1))) OVER ( RANGE (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)) IN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) PRECEDING), UNLIKELY((rt0.c0 IN ())) FROM rt0;SELECT DISTINCT MIN(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))) FROM rt0 WHERE (((CAST(NULL AS INTEGER)) ISNULL)); -- 0ms;
SELECT DISTINCT CAST((((rt0.c3, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c4))) AS BLOB), (((CASE rt0.c0  WHEN rt0.c1 THEN -8.16892098E8 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END, (((rt0.c2, rt0.c2, rt0.c0))>((rt0.c2, rt0.c4, x''))), 0xffffffffbd91b8dd))<=((((rt0.c4) NOT BETWEEN (0.42425275115419137) AND (rt0.c4)), CASE WHEN rt0.c0 THEN 0x309f8fea ELSE rt0.c2 END, ((rt0.c2)/(rt0.c2))))), (((NOT (rt0.c2))) BETWEEN ((NOT (rt0.c0))) AND (rt0.c0)) FROM rt0; -- 1ms;
SELECT DISTINCT CASE WHEN ((((rt0.c2)AND(rt0.c4)))AND(rt0.c3)) THEN ((((-1616060545)AND(rt0.c2)))AND(NULL)) ELSE ((rt0.c2)IS NOT(rt0.c3)) END, ((((rt0.c3)>(rt0.c1))) IS TRUE), CAST(((((rt0.c1)AND('0.5548809032219271')))AND(rt0.c2)) AS TEXT) FROM rt0 WHERE ((CASE WHEN x'' THEN '' END IN ())) ORDER BY ((((NULL)OR(COALESCE(rt0.c2, rt0.c3))))OR(((rt0.c4)<=(rt0.c4)))) DESC  NULLS FIRST, (((((rt0.c4)<<(rt0.c3)), ((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)), ((rt0.c3)|(rt0.c1))))==((CASE WHEN rt0.c4 THEN rt0.c1 END, (('\\nuBRGs') BETWEEN (rt0.c2) AND (rt0.c0)), (rt0.c2 IN ())))) ASC, (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)) IN ((- (rt0.c3)), rt0.c2)) ASC  NULLS LAST; -- 0ms;
SELECT HEX(DISTINCT QUOTE(rt0.c3)) FROM rt0 WHERE ((((((((((0.09537732740869731 IN (NULL)))AND((- (x'')))))AND(HEX(NULL))))OR(CASE x'3c38'  WHEN -4.79200911E8 THEN NULL ELSE 0.07580122228450281 END)))AND((0.388470337827734 IN ('1742071419'))))); -- 0ms;
SELECT DISTINCT rt0.c1, TRIM(rt0.c1 COLLATE RTRIM), ((MAX(0.21260247430266077))>=(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) FROM rt0 WHERE ('^-'); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c3))!=(rt0.c2)) FROM rt0 GROUP BY ((rt0.c3) BETWEEN (CASE rt0.c3  WHEN rt0.c0 THEN '1989695794' END) AND ((+ (rt0.c0)))); -- 0ms;
SELECT ALL CAST(GROUP_CONCAT(rt0.c1) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0) OVER () FROM rt0 WHERE (TYPEOF(DISTINCT ((0xffffffff8388e2fa)<('')))); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c4)+(rt0.c0))) FILTER(WHERE (SUBSTR(rt0.c4, rt0.c4) IN ())) OVER (), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE BINARY, (((((rt0.c0, '-566982018', rt0.c0))>((rt0.c1, rt0.c1, rt0.c4)))) BETWEEN (x'4af9' COLLATE NOCASE) AND ((NOT (rt0.c3)))), (((((((((rt0.c3 IN ()))AND(((rt0.c1)/(rt0.c2)))))OR(((rt0.c0)=(rt0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c4)))))OR(LIKELY(rt0.c2))), (~ (CAST(rt0.c1 AS INTEGER))) FROM rt0 GROUP BY ((CAST(rt0.c0 AS NUMERIC))<<(CASE rt0.c3  WHEN 0.704550473702298 THEN rt0.c0 ELSE rt0.c4 END)); -- 0ms;
SELECT DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM FROM rt0 NOT INDEXED WHERE (((CAST(x'' AS INTEGER))GLOB(CAST(NULL AS INTEGER)))) LIMIT 612105320; -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((- (NULL))) NOT BETWEEN (((x'') ISNULL)) AND (NULL COLLATE NOCASE))) LIMIT 1989695794; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT NULL))<<(TYPEOF('-1616060545'))) FROM rt0 WHERE ((((x'')) BETWEEN ((((((NULL)OR('-671423216')))AND(NULL)))) AND (((0.2374876178490024 IN ()))))) GROUP BY ((((((rt0.c2)>=(rt0.c4)))OR(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))))OR(NULL)), ((rt0.c1 COLLATE RTRIM) BETWEEN ((rt0.c2 IN (rt0.c4))) AND ('')), (('cm') BETWEEN ((((rt0.c0))=((rt0.c1)))) AND (((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)))) HAVING ((CAST(rt0.c2 AS NUMERIC))>(((('')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))); -- 1ms;
SELECT ((((rt0.c1)<(rt0.c0))) IS TRUE), (((((((((rt0.c3 IN ()))OR(0.6045757864674398)))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END)))OR(((rt0.c1)<<(0.8871135194390332)))))AND(((rt0.c2) BETWEEN (rt0.c3) AND ('')))), CASE ((rt0.c4)IS(rt0.c2))  WHEN TOTAL(rt0.c4) THEN '-222990270' ELSE 58293465 END FROM rt0 GROUP BY (((rt0.c4)) NOT BETWEEN (((+ (rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))), ((CAST(rt0.c4 AS TEXT))=(((rt0.c4) IS TRUE))), rt0.c3 COLLATE NOCASE ORDER BY rt0.c0, (+ ((0Xfffffffff5930be7 IN ())))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c1))) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN 1.466469117E9 THEN rt0.c1 END) AND (((rt0.c3) NOT NULL))), LAST_VALUE((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ((rt0.c2 IN ()), ((((rt0.c0)OR(rt0.c4)))OR(rt0.c0))))) OVER (), (((NOT (rt0.c3)))OR(rt0.c3)) FROM rt0 WHERE (((((((((((((((-1.18598938E9) NOTNULL))AND((NOT (0x235403a1)))))AND((NULL IN ('hOd-')))))OR('-138259458')))AND((('1790927382')/(NULL)))))AND(CASE WHEN NULL THEN NULL WHEN 'hpyqb' THEN 612105320 WHEN '-375737789' THEN x'' END)))OR(((x'') NOT BETWEEN (0xfffffffffdc6031b) AND ('uO㜾'))))); -- 1ms;
SELECT ALL (SUM(rt0.c0) IN ()) FROM rt0 WHERE ((((((((((('kk,')AND(0.07849713692156712)))AND(x'eb6a')))OR(x'')))OR(-793825176)))&(((('R4d<.(,')) BETWEEN ((x'')) AND ((0.5921390707209554)))))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) IN ()), (((rt0.c1 IN ()))>(TYPEOF(DISTINCT rt0.c2))), ((((((((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))OR((rt0.c0 IN (rt0.c4)))))AND(0x6a902c8)) FROM rt0 WHERE ((((- (x'')))*(LTRIM(x'')))); -- 0ms;
SELECT DISTINCT LEAD(rt0.c1, rt0.c3, (UNLIKELY(rt0.c3) IN (CAST(rt0.c3 AS TEXT), ((rt0.c3)<<(rt0.c3))))) OVER () FROM rt0 WHERE ((((((('111739592')OR('RLgi()')))OR(x''))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((((TRIM(rt0.c1))AND(((rt0.c2)<=(rt0.c0)))))AND(MAX(rt0.c4))))OR((- (rt0.c1)))))OR(((rt0.c2) NOTNULL))) FROM rt0 WHERE (((CAST(x'' AS REAL)) IS TRUE)) LIMIT 1466469117 OFFSET 1821924039; -- 0ms;
SELECT ALL (~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0 WHERE (((CAST(x'' AS INTEGER)) IS TRUE)) GROUP BY 203688022;SELECT DISTINCT CASE ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))  WHEN (('1466469117')LIKE(rt0.c2)) THEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)) ELSE ((rt0.c4)<<(rt0.c0)) END FROM rt0 WHERE (((((('-350473399'))<(('')))) NOT BETWEEN (((((0.5914291968897513)OR(NULL)))OR(NULL))) AND ((+ (x''))))); -- 0ms;
SELECT DISTINCT ((((((((x'895f')OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((rt0.c0) IS FALSE))))OR(((rt0.c1)>=(rt0.c0)))), TYPEOF(rt0.c4), json_valid(((rt0.c4) IS TRUE)), ((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2)) AND (AVG(rt0.c1))), ((((rt0.c4 COLLATE RTRIM)AND(rt0.c1)))AND((rt0.c2 IN ()))) FROM rt0 WHERE (((((0.04418401676850281)AND((((NULL)) BETWEEN ((x'')) AND ((-1.52314328E9))))))OR(CAST(x'574b' AS INTEGER)))) LIMIT -217110817 OFFSET 958992361; -- 0ms;
SELECT ALL (((((rt0.c0 IN (rt0.c2, rt0.c0)))OR(((0.8560948325903015)<=(rt0.c1)))))OR(NULLIF(DISTINCT rt0.c4, rt0.c2))) FROM rt0 WHERE (((CAST(0.49545494935830603 AS NUMERIC)) NOT BETWEEN ((('FALSE')>=(0.057965923705594724))) AND (CASE WHEN 0X48217675 THEN 0.704550473702298 WHEN 0.21260247430266077 THEN 0X5b9f441c WHEN x'' THEN '\u' ELSE 0Xffffffffde348a7e END))); -- 0ms;
SELECT DISTINCT ((rt0.c0)LIKE(rt0.c2)) COLLATE BINARY COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0 GROUP BY ((rt0.c3) IS TRUE) ORDER BY (((+ (rt0.c1)))IS(((0.8407451586052302)-(rt0.c4)))) ASC; -- 0ms;
SELECT DISTINCT LIKELIHOOD(rt0.c2, 0.4757415667642596) COLLATE NOCASE COLLATE NOCASE, rt0.c3, DENSE_RANK() OVER () FROM rt0 WHERE (CAST(json_array_length(0.9327534364614561, '-814339085') AS BLOB));SELECT DISTINCT ((((((((SUM(rt0.c3))AND(LIKE(rt0.c3, rt0.c1))))AND(NULL)))OR(TYPEOF(DISTINCT rt0.c1))))OR(((rt0.c3)IS(rt0.c4)))) FROM rt0 WHERE (((((((0.7876131773202685)AND(NULL)))OR('Y|鐿ndQg/'))) IS TRUE)); -- 0ms;
SELECT COUNT(*) FILTER(WHERE ((((rt0.c1)*(rt0.c2))) NOT BETWEEN ((rt0.c4 IN ())) AND (CAST(rt0.c1 AS TEXT)))) OVER ( GROUPS CAST(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c1)) AS NUMERIC) PRECEDING) FROM rt0 WHERE (CAST(CAST('-2119710708' AS BLOB) AS NUMERIC));SELECT (~ ((((rt0.c0)) BETWEEN ((rt0.c2)) AND (('-217110817'))))) FROM rt0 WHERE ((((((((((('') IS FALSE))OR(CAST(NULL AS REAL))))AND(((0x26a9d727)>>(x'5776')))))AND('1960983880')))AND(((0.3777276255729676)|(x''))))); -- 0ms;
SELECT DISTINCT (((rt0.c0) IS FALSE) IN (rt0.c0 COLLATE RTRIM, HEX(rt0.c4))) FROM rt0 WHERE (CASE (('')&(-1.89257339E9))  WHEN CASE WHEN '0.5914291968897513' THEN 8.86884361E8 ELSE 'Yx' END THEN x'989e' COLLATE NOCASE WHEN ((NULL) NOT NULL) THEN ((((((((-8.16892098E8)OR('6X3')))OR(0.4550625084477482)))AND(x'')))AND('0.5085747109844772')) WHEN 1.210152565E9 COLLATE RTRIM THEN (2.03688022E8 IN ()) WHEN ((8.15763434E8)/(0.06936920182361117)) THEN (~ (0.04418401676850281)) WHEN ((((NULL)OR(0.4390506133079486)))OR(0.3411676354017946)) THEN ((NULL)*(x'')) ELSE ((NULL)IS('S%	%')) END) GROUP BY (((+ (rt0.c4))) BETWEEN (rt0.c3 COLLATE NOCASE) AND ((+ (rt0.c1)))) HAVING ((((((x''))<>((rt0.c2)))))==((rt0.c3))); -- 0ms;
SELECT DISTINCT '554724937' FROM rt0 WHERE (NULL); -- 1ms;
SELECT DISTINCT rt0.c1, (((rt0.c1)<(rt0.c1)) IN ()), (((COUNT(rt0.c2), COUNT(*), rt0.c2))>((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END, (rt0.c1 IN ()), ((rt0.c0) IS TRUE)))) FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, x'', rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c3)))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((- (rt0.c0)))), LAST_VALUE('zd6R/	6/h') OVER (), TOTAL(CAST(rt0.c4 AS INTEGER)) FROM rt0 WHERE (CASE WHEN (+ ('P.up8c 50')) THEN ((NULL) NOT NULL) END); -- 0ms;
SELECT (NOT (SUM(0.9290872784786266))) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c4)&('6辰')) IN ((- (x'')), ((rt0.c4)=(rt0.c4)))), (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c4))))<((MIN(rt0.c2)))), CAST(rt0.c2 AS TEXT) FROM rt0 WHERE ((((((('.OH')OR(-816892098)))OR('-623135549'))) NOT BETWEEN (('~\ru!꧿纡(硇O' IN ())) AND (((NULL)-(NULL))))) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN CAST(rt0.c2 AS BLOB) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST; -- 1ms;
SELECT DISTINCT ((0.296068189753081)LIKE((rt0.c2 IN ()))) FROM rt0; -- 0ms;
SELECT (((~ (rt0.c3)))AND(((rt0.c3)>=(rt0.c1)))) FROM rt0 WHERE (((((x'')=(NULL))) IS FALSE)) ORDER BY (x'' COLLATE BINARY IN ()), LTRIM((- (rt0.c0)), rt0.c0 COLLATE RTRIM); -- 0ms;
SELECT ALL ((CASE rt0.c1  WHEN 0.9072741445310583 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END) NOT BETWEEN ((rt0.c4 IN (rt0.c0))) AND (((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0 LIMIT 106136690 OFFSET -855147419; -- 0ms;
SELECT (((rt0.c3))<>((rt0.c1))) COLLATE NOCASE FROM rt0 WHERE ((NOT ((('bG]')LIKE(x'b2d378e5'))))) GROUP BY ((CAST(rt0.c1 AS NUMERIC)) BETWEEN (((rt0.c2)>=(rt0.c1))) AND ((('-70347713')==(rt0.c1)))); -- 0ms;
SELECT ALL SUM(DATE(rt0.c2, '-81755296', rt0.c2, rt0.c4, rt0.c3)) FROM rt0; -- 1ms;
SELECT DISTINCT (((rt0.c1 IN ()))!=((rt0.c3 IN (rt0.c0)))), (((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))))>=((AVG(rt0.c4)))), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN ((NOT (rt0.c4))) AND ((rt0.c0 IN ()))) FROM rt0 WHERE ((((('' COLLATE RTRIM)AND(((x'')GLOB('')))))AND(((((NULL)AND(x'')))AND(x''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)IS NOT(rt0.c3)))%(rt0.c2)) FROM rt0 WHERE (json_insert(LIKELY(DISTINCT x'94c2'), ((0X2358cd72)*(0.7492983012458373)), (0.893598161536842 IN (NULL, NULL))));SELECT ALL (+ (rt0.c3)) FROM rt0 LIMIT -133472174; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4))), (((rt0.c1)*(rt0.c0)) IN (((rt0.c2)IS NOT(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), 0.663094767757205 FROM rt0; -- 0ms;
SELECT DISTINCT (((x'' COLLATE NOCASE, ((rt0.c4)IS NOT(rt0.c0)), rt0.c2 COLLATE NOCASE))>((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), CASE WHEN rt0.c3 THEN rt0.c2 END, '8u'))) FROM rt0; -- 1ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS TEXT), ((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN (rt0.c2) AND (LAST_INSERT_ROWID())), ((((rt0.c1)>=(rt0.c2))) ISNULL), CASE (rt0.c3 IN ())  WHEN (rt0.c0 IN ()) THEN 0.4412268743754072 ELSE ((rt0.c4) ISNULL) END, (NOT (((rt0.c4)>=(rt0.c1)))) FROM rt0 WHERE (CAST(NULL COLLATE NOCASE AS BLOB)) GROUP BY rt0.c1, 0x5e8e5c89, ((((rt0.c0)+(rt0.c0)))!=(rt0.c2)), 0.08554982158155922, CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)) AS REAL) HAVING (((NOT (rt0.c0))) ISNULL);SELECT ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c4)))OR(((rt0.c4)=(rt0.c0)))))AND(((rt0.c1)==(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)GLOB(rt0.c1)))|(((((rt0.c3)OR(rt0.c3)))OR(rt0.c0)))) FROM rt0 WHERE ((('Whr*\yr') BETWEEN (((((((((NULL)AND(-308347355)))OR(NULL)))AND('1117250452')))OR('?'))) AND ((NULL IN ('0.5085747109844772'))))); -- 0ms;
SELECT DISTINCT ((rt0.c0) NOTNULL), NULL, ((((CAST(rt0.c0 AS BLOB))AND((rt0.c3 IN (rt0.c2, rt0.c0)))))AND((((rt0.c0))>=((rt0.c1))))) FROM rt0 WHERE ((((((-70347713 IN ()))OR(CAST('-875678774' AS REAL))))OR(CASE ''  WHEN -2.088180998E9 THEN '' END))) GROUP BY CAST('-671423216' AS BLOB) ORDER BY LOWER(DISTINCT ((rt0.c3)AND(rt0.c4))); -- 1ms;
SELECT ALL (NOT (0.5222628838096901 COLLATE NOCASE)), COUNT(*) FILTER(WHERE 0.661182813547643) OVER (), CAST(COUNT(*) AS NUMERIC), rt0.c4, (((rt0.c0)/(rt0.c4)) IN (rt0.c2, ((rt0.c2)LIKE(rt0.c3)))) FROM rt0; -- 0ms;
SELECT ALL TRIM(rt0.c3 COLLATE RTRIM), json_array_length(CAST(rt0.c2 AS REAL), CAST(rt0.c3 AS NUMERIC)), CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END THEN (('-375737789')LIKE(rt0.c2)) END, RANK() OVER (), rt0.c0 FROM rt0;SELECT DISTINCT MAX(CAST(rt0.c0 AS INTEGER)) FROM rt0 WHERE ((LIKELY(DISTINCT NULL) IN ())); -- 0ms;
SELECT CASE WHEN ((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)) THEN (- (NULL)) ELSE rt0.c1 END FROM rt0; -- 0ms;
SELECT ALL COUNT(CAST(rt0.c4 AS INTEGER)) FROM rt0 WHERE ((((x'' COLLATE BINARY, ((((0.251317709086752)OR(NULL)))OR('|G\n')), CAST(NULL AS BLOB), CAST(x'' AS BLOB), CAST(x'' AS NUMERIC)))>((DATETIME('-138259458', 0.7925522363759725, x'fc8c', x'af71', NULL), ((('-1982691221')) NOT BETWEEN ((NULL)) AND ((NULL))), LIKELY(0.9524452597505029), ((x'') BETWEEN (NULL) AND (0xffffffff81840430)), CAST('' AS INTEGER))))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c1 COLLATE NOCASE)), (((rt0.c4 IN ()))>=(CAST(rt0.c3 AS TEXT))), COUNT(rt0.c1) FROM rt0 GROUP BY (((((rt0.c3)AND(-1114523427)))AND(rt0.c0)) IN (CASE WHEN rt0.c2 THEN rt0.c3 END)); -- 0ms;
SELECT DISTINCT ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)))))AND(((rt0.c1) NOT NULL))), NULL, LAG(141660741, ((rt0.c2 COLLATE NOCASE)<=(rt0.c1 COLLATE NOCASE)), ((((rt0.c3)!=(rt0.c4))) ISNULL)) OVER () FROM rt0 WHERE ((- (CAST('*,' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)|(rt0.c3))) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END THEN CASE rt0.c1  WHEN 0.6598938083887328 THEN rt0.c2 ELSE NULL END WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c3)<<(rt0.c2)) WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2) IS FALSE) END FROM rt0 WHERE ((((('') NOTNULL)) NOTNULL)); -- 0ms;
SELECT CASE WHEN (~ (rt0.c3)) THEN x'4171' END, CASE rt0.c1  WHEN ((rt0.c0)LIKE(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c4)) BETWEEN (('zd6R/	6/h', rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c0))) END, ((((rt0.c4)>>(rt0.c1))) NOT BETWEEN (rt0.c1) AND (((rt0.c3) NOTNULL))) FROM rt0 WHERE (((((('~\ru!꧿纡(硇O')) NOT BETWEEN (('꧳om!	q3''\r')) AND ((NULL)))) NOT BETWEEN ((((x''))>((1695760022)))) AND ((+ (x''))))); -- 0ms;
SELECT ALL ((rt0.c3) NOT BETWEEN (highlight('0.388470337827734', rt0.c3, rt0.c3, rt0.c2)) AND (DATETIME(rt0.c3, rt0.c3, rt0.c3, rt0.c0, rt0.c0))), (((NULL IN ()))!=((~ (rt0.c0)))), (- (MAX(648664871))) FROM rt0 WHERE (((((111739592)OR(x'b805')))<=(0.2810860128741317 COLLATE NOCASE))) ORDER BY ((((rt0.c1) NOTNULL))/(((rt0.c1)AND(rt0.c3)))) ASC, rt0.c1 DESC  NULLS FIRST, LOWER(LIKELY(rt0.c3)) DESC;SELECT ('-1153954132' IN ()), CAST(((((((((rt0.c2)OR('0*')))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c2)) AS REAL), COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN rt0.c0 THEN rt0.c0 END)), rt0.c1, COUNT(*) FROM rt0 WHERE ((('') NOT BETWEEN ('-1153954132') AND (NULL)) COLLATE NOCASE COLLATE BINARY) ORDER BY (((rt0.c4) NOT BETWEEN (rt0.c4) AND (x'')) IN ()) DESC; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET((- (rt0.c1))) FROM rt0 WHERE (TYPEOF(CASE '8u'  WHEN '0.4412268743754072' THEN '' ELSE 'RLGI()' END)); -- 0ms;
SELECT ALL (NOT (rt0.c4)) COLLATE RTRIM, NULL, json(TIME(rt0.c4, rt0.c3, rt0.c2)) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(((0X74e23d48)/(rt0.c2))) FROM rt0 WHERE (((NULL COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT ABS((NOT (rt0.c4))) FROM rt0 WHERE (0.4498004936598896); -- 0ms;
SELECT DISTINCT (NOT (0Xfffffffff80b6052)) FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(CAST(rt0.c3 AS NUMERIC)) FROM rt0 WHERE (((0.8871135194390332 IN ()) IN ())); -- 0ms;
SELECT ALL GROUP_CONCAT((rt0.c0 IN (rt0.c3))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0, 0.9610227478536001 COLLATE RTRIM, (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE RTRIM, MAX(((rt0.c1)GLOB(rt0.c4))), CAST(-1799644725 AS TEXT), CASE (rt0.c4 IN (rt0.c4))  WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c2)||(rt0.c0)) ELSE ((((((((rt0.c3)OR(0x129ed77)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) END, (((+ (rt0.c4))) NOT NULL) FROM rt0 WHERE (((CAST(NULL AS TEXT)) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c3) AS INTEGER), ((rt0.c3 COLLATE NOCASE)>=((((NULL, rt0.c0, rt0.c1, rt0.c3, rt0.c0))=((rt0.c3, rt0.c3, rt0.c1, rt0.c0, rt0.c1))))), ((TYPEOF(NULL)) NOT BETWEEN (((NULL)AND(rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0 WHERE (((x'') BETWEEN (0Xffffffffa1f6c933) AND (0.5079614046692846)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ABS(NULL) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT ((-1263851230 IN ()))) FROM rt0 WHERE (NULL) GROUP BY '592708513' ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN ((('-585340035')/(rt0.c0))) AND (COALESCE(rt0.c3, rt0.c2))) ASC, (- (((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))) DESC  NULLS LAST LIMIT -570136287; -- 0ms;
SELECT ALL (((((('1'))<((889381925)))))<>(((((rt0.c3))!=((rt0.c4)))))), (~ ((+ (rt0.c2)))), (((NOT (rt0.c4))) BETWEEN (((rt0.c1)|(rt0.c3))) AND ((rt0.c3 IN (rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c3, rt0.c4, rt0.c1, rt0.c4, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4, x'', rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c0, rt0.c3, rt0.c2))))AND(TOTAL(rt0.c4))))AND(((rt0.c1) ISNULL))) FROM rt0; -- 0ms;
SELECT DISTINCT AVG(rt0.c3) OVER (), TYPEOF(rt0.c2 COLLATE RTRIM), ((CAST(rt0.c1 AS BLOB))<=(((rt0.c2)<<(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE BINARY, (((rt0.c2)) BETWEEN (((rt0.c2 IN ()))) AND ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))), ((LIKE(rt0.c4, rt0.c1))>>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 WHERE ((('-1639122266')*(CASE WHEN 0.6922630291433446 THEN -138259458 END))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 ORDER BY CASE (NOT (rt0.c4))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END ELSE (rt0.c4 IN ()) END; -- 1ms;
SELECT DISTINCT NTILE((+ ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) OVER (), COUNT(*), CASE WHEN (((rt0.c4))>((rt0.c3))) THEN rt0.c3 END FROM rt0;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) COLLATE NOCASE COLLATE BINARY FROM rt0 WHERE (0xffffffff9a8cfde7) LIMIT -1680650056; -- 0ms;
SELECT DISTINCT ((rt0.c3)>>(((rt0.c0)>(rt0.c1)))) FROM rt0 WHERE (CASE 1.96098388E9 COLLATE NOCASE  WHEN (NULL IN ()) THEN x'' COLLATE NOCASE END) LIMIT -1211620388; -- 0ms;
SELECT ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)OR(((rt0.c4)&(rt0.c1)))))OR(CASE WHEN rt0.c3 THEN NULL ELSE rt0.c3 END)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (NOT (rt0.c1)) THEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)) END FROM rt0; -- 0ms;
SELECT ALL 5.92708513E8, (~ (((rt0.c3) NOTNULL))), MIN(load_extension(rt0.c2, rt0.c1)) FROM rt0 WHERE ((((((x''))>=((NULL)))) NOTNULL)); -- 1ms;
SELECT DISTINCT rt0.c0 FROM rt0 GROUP BY (((rt0.c2 IN ()))/(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END)); -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN '1210152565' THEN rt0.c1 END) NOT BETWEEN (rt0.c3) AND ((- (rt0.c1)))) FROM rt0 WHERE (CASE '593022322'  WHEN x'' THEN NULL ELSE 'oV' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM((((rt0.c1, rt0.c4, 0xffffffffcf4f373e)) BETWEEN ((rt0.c1, rt0.c1, rt0.c4)) AND ((rt0.c1, rt0.c3, rt0.c2)))) OVER (), ((RTRIM(rt0.c0)) NOT NULL), '\n궐cYNE>q7' FROM rt0 WHERE ((- (x'bf69')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((COUNT(*))|(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)))) FROM rt0 NOT INDEXED WHERE (((((0.9027025931940379)&(-275125918))) NOT BETWEEN (((0.4658423021263298)>>(NULL))) AND (((x'4710')IS(''))))); -- 0ms;
SELECT (- ((0.3200512067029282 IN ()))) FROM rt0 WHERE ((- ('f#D竌W'))); -- 0ms;
SELECT DISTINCT ((rt0.c4) NOT BETWEEN (((rt0.c2)<<(rt0.c0))) AND (((rt0.c2) IS TRUE))), (((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1))))==((COALESCE(DISTINCT rt0.c2, rt0.c2, rt0.c2, rt0.c0)))), ((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (NULL) AND (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 WHERE ((((~ (x''))) BETWEEN ((x'' IN ('s0', 0.8524958326837035))) AND (((((NULL)OR('Y}')))OR(0.4741169670033941))))); -- 0ms;
SELECT CAST(CAST(rt0.c3 AS BLOB) AS REAL), ((rt0.c3)==(rt0.c2)) COLLATE BINARY, rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))AND(CHANGES())))OR(rt0.c1 COLLATE BINARY)))OR((rt0.c4 IN (rt0.c4)))))OR(CAST(rt0.c1 AS REAL))), CASE ((rt0.c2) ISNULL)  WHEN ((NULL)||(rt0.c3)) THEN rt0.c4 COLLATE BINARY ELSE CASE NULL  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END END, ((COUNT(rt0.c3))<<(CAST(rt0.c0 AS NUMERIC))) FROM rt0 WHERE (((0xffffffff89d2886b COLLATE NOCASE)||(CAST(x'6398' AS BLOB)))); -- 0ms;
SELECT CAST(CASE rt0.c4  WHEN NULL THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN 0xffffffffa5cfc4bf ELSE rt0.c1 END AS NUMERIC) FROM rt0 WHERE (((('', ((((0.9524452597505029)OR(x'')))AND(x'')), ('-484950109' IN (0.26598556235398196, -888564207))))>=((((x'')<(-941075052)), (('-308347355')>=('cm')), (('-1211620388') BETWEEN ('-225666591') AND (NULL)))))); -- 0ms;
SELECT AVG(((rt0.c0) NOT NULL)) OVER (), '889381925', GROUP_CONCAT(CAST(rt0.c3 AS NUMERIC)) FROM rt0 WHERE ((((1.96098388E9)) NOT BETWEEN ((CASE WHEN NULL THEN 0.1857398476366311 ELSE 'v>7H' END)) AND ((CAST(NULL AS TEXT))))); -- 0ms;
SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (-2.75125918E8))) AND (((rt0.c0)<<(rt0.c3)))), (((rt0.c2 IN (rt0.c0)))&(((rt0.c2) IS FALSE))), ((rt0.c1 COLLATE NOCASE) NOT NULL), UPPER(DISTINCT CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END), DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)|(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)), (((rt0.c1 IN (rt0.c2))) IS TRUE), DENSE_RANK() OVER ( PARTITION BY (((rt0.c2 COLLATE NOCASE, CAST(rt0.c3 AS TEXT), rt0.c4))==((((rt0.c2)==(rt0.c1)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c4) ISNULL)))), json_array(rt0.c0, rt0.c1, rt0.c2, rt0.c0) COLLATE BINARY) FROM rt0; -- 0ms;
SELECT AVG((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (('FALSE')))) FILTER(WHERE (NOT (((rt0.c4) NOTNULL)))) OVER () FROM rt0 WHERE (((CASE x'0481'  WHEN '' THEN 0.2374876178490024 WHEN '0.2810860128741317' THEN -528357481 WHEN '' THEN -1171342767 ELSE '' END) NOT BETWEEN (CASE 'Z9鉭>諽uQAt'  WHEN ']E댍7Q' THEN '或' ELSE x'' END) AND ((('k8U邟S8QGG') NOTNULL)))); -- 0ms;
SELECT ALL CASE MAX(rt0.c0)  WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c1) ISNULL) WHEN ((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)) THEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)) WHEN QUOTE(rt0.c2) THEN (((rt0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c4))) END FROM rt0 WHERE (((((((((((x'4e7e')AND(x'')))AND(-858024518)))AND(0xffffffffb3e7a9ff)))AND(x''))) NOT NULL)); -- 0ms;
SELECT (((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((CASE rt0.c2  WHEN x'c635' THEN rt0.c4 ELSE x'' END, ABS(rt0.c2), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c1, rt0.c1, ((((x'')OR(rt0.c0)))OR(rt0.c2))))), ((rt0.c1 COLLATE RTRIM)%(((rt0.c1)==(rt0.c1)))), AVG(((rt0.c3) IS TRUE)) OVER () FROM rt0 WHERE ((IFNULL(NULL, NULL) IN ())) ORDER BY ((((((rt0.c1)OR(NULL)))AND(rt0.c2)))+(NULL)) DESC; -- 0ms;
SELECT DISTINCT (~ ((+ (rt0.c3)))) FROM rt0 WHERE ((('-1770492919' COLLATE NOCASE)<=(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((((rt0.c1)*(rt0.c2))))) FROM rt0 WHERE (CAST('1960983880' AS TEXT) COLLATE BINARY); -- 0ms;
SELECT MAX((~ (rt0.c4))) FROM rt0 WHERE ((((((x'')AND(0.36992945274490263)))AND('346374134')) IN ())); -- 0ms;
SELECT DISTINCT (((- (rt0.c3))) BETWEEN (x'') AND ((NOT (rt0.c0)))) FROM rt0 ORDER BY ABS((+ (rt0.c2))) LIMIT 1546522471 OFFSET -1300292366; -- 0ms;
SELECT DISTINCT (~ (rt0.c0)), TYPEOF(DISTINCT (rt0.c1 IN ())), ((0x464cd08d)<=(((rt0.c0)!=(rt0.c1)))), '-1019159477' COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) COLLATE NOCASE FROM rt0 WHERE ((0.6236150325428599 IN ()) COLLATE BINARY); -- 1ms;
SELECT ALL ((rt0.c4) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT LAG((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE RTRIM, '-570136287' COLLATE BINARY, (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0 WHERE (CAST(CAST(NULL AS BLOB) AS BLOB)); -- 0ms;
SELECT ALL ((((rt0.c4)LIKE(rt0.c2))) BETWEEN (((rt0.c2)AND(rt0.c4))) AND (IFNULL(DISTINCT rt0.c2, rt0.c3))), (((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c3, rt0.c0))))!=(((rt0.c0)AND(rt0.c1)))), CASE rt0.c0  WHEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END THEN COUNT(x'') WHEN ((rt0.c2)-(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (rt0.c4 IN ()) ELSE ((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)) END, GROUP_CONCAT(AVG(rt0.c2) COLLATE RTRIM), ((rt0.c0 IN (rt0.c4, rt0.c0)) IN (GROUP_CONCAT(rt0.c2))) FROM rt0 WHERE (ROUND((((NULL))==(('-875678774'))), ((((NULL)OR(0.39807972588801366)))OR('-1680650056')))) ORDER BY (((rt0.c3)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 ELSE NULL END)) AND ((CAST(rt0.c0 AS BLOB))))  NULLS FIRST, QUOTE((~ (0.663094767757205)))  NULLS FIRST, (((- (rt0.c1)))*(rt0.c1 COLLATE BINARY))  NULLS FIRST;SELECT ALL FIRST_VALUE(rt0.c0) OVER ( ORDER BY CAST(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)) AS REAL)) FROM rt0 GROUP BY IFNULL(DISTINCT CAST(rt0.c2 AS BLOB), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (NULL))); -- 1ms;
SELECT ((((-1303841700)|(rt0.c3))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (NULL))) AND ('gT')) FROM rt0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN (~ ('-1508229610')) ELSE (((NULL))<>(('-1002345491'))) END) ORDER BY ((((((rt0.c0)*('')))OR((((rt0.c3))<=((rt0.c0))))))AND(rt0.c3 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST((((rt0.c2, rt0.c0, rt0.c0))<=((rt0.c4, rt0.c0, rt0.c1))) AS TEXT)) OVER (), CASE WHEN CAST(rt0.c1 AS TEXT) THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 END WHEN rt0.c3 THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)) WHEN AVG(0Xffffffff9a8cfde7) THEN ((rt0.c1) NOTNULL) END, TRIM(DISTINCT ((rt0.c1) NOT NULL), ((rt0.c4) IS TRUE)) FROM rt0 WHERE ((((0.13044152518242658)=(-275125918)) IN (x'' COLLATE NOCASE, CAST(-2082432264 AS REAL)))); -- 0ms;
SELECT ((NULLIF(DISTINCT rt0.c3, rt0.c0))LIKE(((rt0.c1) NOT NULL))), CAST(rt0.c4 COLLATE NOCASE AS REAL), (((- (rt0.c3))) ISNULL) FROM rt0 WHERE ((~ (((((x'0057')OR(0.9103685469664697)))OR(',⶜%c{'))))); -- 0ms;
SELECT ALL CAST(((((((((rt0.c2)OR('')))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c4)) AS REAL) FROM rt0 LIMIT 1644642168; -- 0ms;
SELECT ALL ((LTRIM(rt0.c2, rt0.c0))!=(rt0.c1)) FROM rt0 WHERE (((((NULL) ISNULL)) ISNULL)); -- 0ms;
SELECT ALL GROUP_CONCAT((+ (rt0.c1))) OVER ( ORDER BY NULL  NULLS LAST), ((((((rt0.c0)|(rt0.c0)))AND((((rt0.c3, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c0)) AND ((NULL, rt0.c1, rt0.c2))))))OR(AVG(rt0.c4))), ((MAX(NULL)) IS TRUE) FROM rt0 WHERE (((((((' >ຬ')OR(x'd7e6')))OR(NULL))) NOT BETWEEN (((x'')*(NULL))) AND (NULL))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (NULL) AND (rt0.c4)))<<(COUNT(rt0.c1))), ((+ (0xffffffffe6a24dee)) IN ()), TOTAL(TOTAL(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))) FROM rt0 ORDER BY CAST((- (rt0.c3)) AS INTEGER);SELECT ((((rt0.c0)OR(rt0.c4)))OR(rt0.c2)) COLLATE RTRIM, TOTAL(((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))) OVER (), COUNT((+ (rt0.c1))) OVER ( ORDER BY ((rt0.c2 COLLATE BINARY)&(rt0.c3 COLLATE RTRIM)) ASC  NULLS LAST, NULL, 1.41660741E8  NULLS FIRST GROUPS ((rt0.c1 COLLATE BINARY) NOT NULL) PRECEDING EXCLUDE TIES) FROM rt0 WHERE ((LTRIM('KT', '(eIw7c\') IN ())) LIMIT -1752913583 OFFSET -990976031; -- 0ms;
SELECT ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(json_extract(rt0.c0, rt0.c0))))OR((rt0.c0 IN (rt0.c2, rt0.c4)))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(COUNT(rt0.c2))) FROM rt0 WHERE ((((NULL IN ()))IS(((0Xffffffffd802befc) NOT BETWEEN ('1546522471') AND ('904810837'))))); -- 0ms;
SELECT (((rt0.c4 IN ())) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (TOTAL(rt0.c4))), ((((((((((rt0.c4)IS NOT(rt0.c0)))OR(x'')))OR(CASE WHEN NULL THEN rt0.c4 ELSE rt0.c2 END)))OR(x'')))OR(x'')), ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2) NOTNULL))))AND(rt0.c4 COLLATE BINARY)) FROM rt0 WHERE ((((('o0G') IS FALSE)) ISNULL)); -- 0ms;
SELECT DISTINCT (((rt0.c1 COLLATE RTRIM))<((AVG(rt0.c1)))) FROM rt0 GROUP BY ((((rt0.c0)||(rt0.c3)))AND(CASE WHEN 0.2194996779146523 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN -40999787 ELSE rt0.c4 END)); -- 0ms;
SELECT LIKELY(DISTINCT ((0.11846684574291755) IS TRUE)) FROM rt0 GROUP BY ((((((((CASE WHEN '-995455834' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN x'' END)AND(rt0.c2)))OR(TRIM(DISTINCT rt0.c3, rt0.c1))))OR(((((rt0.c2)OR(NULL)))AND(rt0.c4)))))AND(rt0.c2)), x'', (- (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('x')))) HAVING CAST(rt0.c1 AS BLOB); -- 1ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c0 IN ())), ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1))) NOT NULL), (rt0.c1 IN ()) COLLATE BINARY COLLATE RTRIM FROM rt0 WHERE (((((0.23548470498678464)-(NULL))) IS TRUE)); -- 0ms;
SELECT ALL TOTAL(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END) OVER (), ((((rt0.c4)OR((rt0.c0 IN ()))))AND(IFNULL(rt0.c0, rt0.c4))), (((rt0.c0, rt0.c2, rt0.c1)) BETWEEN (((rt0.c2 IN ()), rt0.c4, COUNT(*))) AND ((rt0.c2 COLLATE NOCASE, (((rt0.c1))>(('aZ'))), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) FROM rt0 WHERE ((((0.8415479371036774 IN ())) NOT BETWEEN (CASE WHEN 'yA2' THEN NULL WHEN x'' THEN 0.388470337827734 WHEN '1586388105' THEN 0.13044152518242658 WHEN NULL THEN '0n	ᘚ[UU(' WHEN -1.171342767E9 THEN NULL ELSE '-346124429' END) AND (((NULL) NOT BETWEEN ('-1263851230') AND (1835601342))))); -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)) COLLATE RTRIM COLLATE BINARY FROM rt0; -- 0ms;
SELECT 'V''' FROM rt0 GROUP BY rt0.c0; -- 0ms;
SELECT ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)|((((0.16843458441896664))=((rt0.c0))))), (((+ (rt0.c2)))!=(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))), (((rt0.c1)) BETWEEN (((~ (rt0.c1)))) AND ((((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)))AND(x'')))AND(x''))))) FROM rt0 WHERE (((((x'') IS TRUE)) BETWEEN (CASE NULL  WHEN '937430410' THEN x'' END) AND (((((x'')AND(0.5831008770054822)))AND(NULL))))); -- 0ms;
SELECT (rt0.c4 IN (rt0.c2, rt0.c3)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT COUNT(*), (NOT (CAST(rt0.c0 AS BLOB))), GROUP_CONCAT((rt0.c1 IN ())) FROM rt0 WHERE (0xffffffff9ad23185); -- 0ms;
SELECT CASE (rt0.c3 IN ())  WHEN CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END THEN ((rt0.c3)=(rt0.c0)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END FROM rt0 LIMIT -133472174; -- 0ms;
SELECT ALL CAST(rt0.c0 AS INTEGER) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL CASE WHEN MIN(rt0.c1) THEN ((rt0.c4) IS TRUE) END, (((- (rt0.c0))) BETWEEN (((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3))) AND (rt0.c2 COLLATE RTRIM)), (- (((rt0.c2)>(rt0.c1)))), ((rt0.c1 IN (rt0.c3)) IN ()), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))*((NOT (rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((((-673442799)<<(rt0.c3)), ('-1799644725' IN ()), (((rt0.c3))>=((rt0.c2))))) AND (((~ (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END, (rt0.c2 IN ())))) FROM rt0 WHERE ('5m'); -- 1ms;
SELECT (((rt0.c1, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, rt0.c4, rt0.c2)) AND ((rt0.c1, rt0.c4, rt0.c4))) COLLATE RTRIM FROM rt0 LIMIT -1667262750; -- 0ms;
SELECT DISTINCT (((((rt0.c4)<>(rt0.c1))))!=((SUM(rt0.c3)))) FROM rt0 WHERE (CAST((('-426118363') IS FALSE) AS BLOB)) GROUP BY ((((((((rt0.c4)OR(CASE WHEN rt0.c2 THEN '576129556' END)))OR(rt0.c0)))AND(((rt0.c3) ISNULL))))AND(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT AVG('Xr') FROM rt0 WHERE (((CAST(NULL AS TEXT))!=(((((((((-3.08347355E8)OR(x'3da8')))OR(x'')))OR('-2066713630')))OR('䜧9'))))); -- 0ms;
SELECT ALL LAST_VALUE((((rt0.c1, rt0.c2, rt0.c4, rt0.c1, rt0.c2)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END, rt0.c2 COLLATE BINARY, SQLITE_COMPILEOPTION_USED(rt0.c0), (- (rt0.c1)), NULL)) AND ((((rt0.c0) BETWEEN (-6.65840102E8) AND (rt0.c0)), CAST(rt0.c4 AS INTEGER), ((rt0.c2) NOT NULL), ((rt0.c3) NOTNULL), rt0.c0)))) OVER () FROM rt0; -- 0ms;
SELECT ALL 0.2201118076299029, (- (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END)), CASE WHEN rt0.c4 THEN rt0.c2 END COLLATE BINARY FROM rt0; -- 1ms;
SELECT ALL (~ (NULL)) FROM rt0; -- 0ms;
SELECT CAST(TIME(rt0.c0, rt0.c1, rt0.c0) AS REAL) FROM rt0 WHERE (CASE WHEN ('Z9鉭>諽uQAt' IN ()) THEN CASE WHEN NULL THEN 0X6e3b1852 ELSE NULL END END) LIMIT 1530840619 OFFSET -528883498; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE (((('Iy' IN ('-1200512856')))<<(((((NULL)OR(NULL)))OR('!댧fS'))))); -- 0ms;
SELECT DISTINCT ((0.6412445713566298)LIKE((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) FROM rt0 WHERE (((((((((((((x'')OR(0.41483135246639524)))OR('')))OR('')))AND(NULL)))OR(x'75af')))OR(0.9004883058185156)) COLLATE BINARY); -- 0ms;
SELECT x'6c31', TOTAL((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) OVER (), ((CASE WHEN rt0.c1 THEN rt0.c4 END)+((rt0.c4 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (0Xffffffffb2c5c202); -- 1ms;
SELECT ALL ('' IN ()) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c4, ((NULL)+(rt0.c2)), ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2))))>=((CASE WHEN 184089334 THEN rt0.c3 ELSE rt0.c3 END, (rt0.c2 IN ()), 0xffffffffa986f5e3 COLLATE NOCASE))), rt0.c0, UNICODE(((rt0.c0)%(rt0.c1))) FROM rt0; -- 0ms;
SELECT (((rt0.c2 IN ()))%(((rt0.c1)|(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT MIN((rt0.c4 IN ())) FROM rt0 GROUP BY LOWER(((rt0.c0) NOT BETWEEN ('u%g쎉m') AND (rt0.c1))) HAVING ((SUM(rt0.c1))|(rt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT (((rt0.c3)) BETWEEN ((((rt0.c0)AND(rt0.c3)))) AND (((rt0.c3 IN ())))), COUNT(((rt0.c4)%(''))), MIN(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c3))) FROM rt0 WHERE ((- (CHANGES()))); -- 0ms;
SELECT rt0.c3, CASE WHEN CASE WHEN rt0.c4 THEN x'' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN rt0.c4 COLLATE NOCASE END, (((rt0.c2 IN (rt0.c3))) IS FALSE) FROM rt0 WHERE (json_patch(((((-8.88564207E8)AND(0.5993833134106282)))AND(x'')), (NOT (-771486800)))); -- 0ms;
SELECT ALL COUNT(((rt0.c4)IS NOT(rt0.c4))) OVER ( PARTITION BY CAST((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) AS TEXT), ((CASE rt0.c3  WHEN '1106813943' THEN rt0.c1 END)>>(((rt0.c3)<('0.431403797209461')))), ((('y<	8', UPPER(rt0.c2), (rt0.c3 IN ())))<((((((rt0.c4)AND(rt0.c0)))OR(rt0.c4)), CAST(rt0.c1 AS INTEGER), ((rt0.c1)<<(rt0.c0))))), 0.07580122228450281 COLLATE RTRIM ORDER BY ((rt0.c2 COLLATE RTRIM)<<(NULL)) DESC  NULLS LAST, rt0.c4  NULLS FIRST, (~ (rt0.c0))) FROM rt0 WHERE (CAST(CASE WHEN 0.2067934549785697 THEN '-217110817' WHEN NULL THEN '-1698253637' WHEN '' THEN 'f<UY9' ELSE NULL END AS NUMERIC)); -- 1ms;
SELECT (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))<<(COUNT(*))), (((rt0.c3 IN (x'', rt0.c1)))IS((('0.3190865352876139')/('')))), (((((+ (rt0.c3)))AND(((rt0.c2) IS FALSE))))OR(294603932)) FROM rt0; -- 0ms;
SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END)AND(-479200911)))AND(((rt0.c2)+('1117250452')))) FROM rt0; -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN ((- (rt0.c4))) AND (0.5910769535522795)) FROM rt0 WHERE (0x37de7a3); -- 0ms;
SELECT DISTINCT ((((CHAR(x'a89b'))AND(CAST(rt0.c4 AS TEXT))))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN '-2125357486' THEN x'' ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT x'eea4' FROM rt0; -- 0ms;
SELECT DISTINCT 1742071419 FROM rt0 WHERE ((((0.23841233406125284) BETWEEN (0xffffffffe6ae66b0) AND (0.07762878525383987)) IN ())); -- 1ms;
SELECT NTH_VALUE(((CAST(rt0.c0 AS BLOB))AND(NULL)), ((((NULL)AND('r')))OR(ABS(rt0.c0)))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(COUNT(*)), rt0.c3, ROW_NUMBER() OVER () FROM rt0;SELECT ((((((rt0.c0)/(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)))OR(UPPER(rt0.c2))) FROM rt0 WHERE (CASE NULLIF(DISTINCT -1577662157, 0.023745581336243493)  WHEN ((x'') BETWEEN (NULL) AND (0X5cfa8343)) THEN ((((((((((((x'')AND(NULL)))AND(NULL)))AND(-941075052)))AND('XM釃e랖O,')))OR('u%d쎉m')))OR(0.06936920182361117)) END); -- 0ms;
SELECT ALL (NOT (COUNT(*))) FROM rt0; -- 0ms;
SELECT ALL CAST(CAST('s1' AS NUMERIC) AS INTEGER) FROM rt0 WHERE (((CASE '-1056591302'  WHEN NULL THEN -7.93825176E8 END) ISNULL)); -- 1ms;
SELECT (((- (rt0.c1))) NOT BETWEEN (rt0.c0) AND ((((x''))<=((rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)AND(rt0.c3)))*((((rt0.c3))==((rt0.c1))))) FROM rt0; -- 0ms;
SELECT rt0.c1 FROM rt0 WHERE (ABS(((-1592601981)AND(0.8485596091429303)))) GROUP BY (((('660830367')>=(rt0.c1)))IS NOT(((rt0.c1) ISNULL))); -- 0ms;
SELECT ALL (((rt0.c0, rt0.c4, rt0.c3)) NOT BETWEEN ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 END, CAST(0.2851729309309209 AS TEXT))) AND ((((rt0.c1)+(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), SUM(rt0.c4)))), ((((NULL)IS(rt0.c3)))<('R.}k' COLLATE RTRIM)), x'' FROM rt0 WHERE ((~ (LIKE(NULL, NULL)))); -- 0ms;
SELECT (~ (((rt0.c4)<=(rt0.c2)))) FROM rt0 WHERE ((- ((('')||('1546522471'))))); -- 0ms;
SELECT DISTINCT ((((NULL) NOT BETWEEN (rt0.c3) AND (rt0.c4))) NOT BETWEEN (MIN(rt0.c4)) AND (((rt0.c2) IS FALSE))), (((((rt0.c1, rt0.c1, '178224848'))<((rt0.c0, rt0.c3, rt0.c3)))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END) AND (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))OR('')))OR(rt0.c0)))), ((((rt0.c0) BETWEEN (rt0.c0) AND (x'7289')))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))) FROM rt0 WHERE (CASE WHEN (('0.6598938083887328')IS NOT(x'1513')) THEN ((0.41483135246639524) IS TRUE) ELSE NULL COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT (NOT ((NOT (rt0.c2)))), ((TOTAL(rt0.c0)) NOT NULL), (((rt0.c3) NOT NULL) IN ()) FROM rt0 WHERE (((NOT ('-888564207')) IN ())) EXCEPT SELECT DISTINCT (((UNLIKELY(DISTINCT rt0.c1)))==((rt0.c1 COLLATE RTRIM))), (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS REAL), ((x'')%(rt0.c2))))!=((rt0.c1, (((rt0.c4))==((rt0.c4))), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END))), (((- (rt0.c1))) BETWEEN ((- (rt0.c1))) AND (rt0.c3 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT ((- (rt0.c0)))), CASE rt0.c1 COLLATE NOCASE  WHEN CAST(rt0.c1 AS TEXT) THEN (~ (rt0.c3)) ELSE (rt0.c2 IN ()) END, ((((NOT (rt0.c3)), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c0)-(rt0.c3))))<=((CAST(rt0.c4 AS NUMERIC), ((rt0.c2) IS FALSE), ((rt0.c2)IS(rt0.c4))))) FROM rt0 GROUP BY x'', CAST((rt0.c0 IN ()) AS BLOB), x'146d' HAVING ((LIKELIHOOD(0Xffffffffbf798c10, 0.41286736050974937)) BETWEEN ((((rt0.c1))<=((rt0.c3)))) AND (((((((((-1.7976931348623157E308)OR('-136714820')))OR(0X1619fda7)))AND(rt0.c1)))OR(rt0.c4)))) LIMIT 1719700475; -- 1ms;
SELECT (+ (((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))), ((((CAST(rt0.c1 AS INTEGER))AND(json_valid(rt0.c1))))AND(rt0.c4)), json_array_length(MAX(rt0.c2), ((rt0.c1)/(NULL))), ((((rt0.c4) IS TRUE))IS(((rt0.c1)-(rt0.c1)))), '0.5085747109844772' FROM rt0 WHERE ((CAST(x'c18f' AS NUMERIC) IN ((('')IS(0.02141985269114033)), (x'0e78' IN ('0.11846684574291755'))))); -- 0ms;
SELECT CAST(CASE WHEN rt0.c0 THEN 0.7002999920171435 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(((rt0.c1)>=(rt0.c4))) FROM rt0 WHERE (((('_{')AND(0.4339650097489104)) IN ((((NULL, 0.13044152518242658, '-1698807147'))<=((NULL, 0.3407507043282274, NULL)))))) ORDER BY LOWER(DISTINCT (((rt0.c0))<((rt0.c3)))), ((rt0.c0 COLLATE RTRIM) BETWEEN (111406501) AND (((rt0.c4) NOTNULL)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))OR(0.9759719278024508)))AND(rt0.c1)))||(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT (~ (UPPER(DISTINCT rt0.c2))) FROM rt0 WHERE ((((((((x'4ef1', '-833886994', ''))<>(('*', NULL, '653233703'))))OR(((0xffffffff89d2886b)&(x'b338')))))AND(((((((((NULL)OR('812025659')))AND(NULL)))OR(0.07849713692156712)))AND(x''))))); -- 1ms;
SELECT ((CAST(rt0.c2 AS TEXT))LIKE((- (rt0.c4)))), 0xffffffff81cdb30d, (CASE WHEN rt0.c1 THEN 'Kh' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN 0.9524452597505029 ELSE rt0.c0 END IN (CASE WHEN rt0.c4 THEN rt0.c0 END, CAST(rt0.c3 AS REAL))) FROM rt0; -- 0ms;
SELECT CAST(CAST(x'c508' AS TEXT) AS NUMERIC) FROM rt0 WHERE (TRIM(DISTINCT (- (1879641427)), ((('K2(6K#I	◖', 0.046588569015980186, NULL)) NOT BETWEEN (('(l뉃퍼co%i', -909780820, 0Xfffffffff80b6052)) AND (('-1211620388', x'', 0.056131592182602885))))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) ISNULL) FROM rt0 WHERE ((((UPPER(NULL)))<=((CAST(-490953002 AS REAL))))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)>('-814339085')))>>((NOT (rt0.c1)))) FROM rt0 WHERE (((((0.6444903271740597) IS FALSE)) IS TRUE)) ORDER BY (+ (TYPEOF(DISTINCT rt0.c0))) DESC  NULLS LAST; -- 0ms;
SELECT AVG(rt0.c0) FROM rt0; -- 0ms;
SELECT DISTINCT UPPER(rt0.c1), SUM(0X129ed77) OVER (), ((rt0.c1) ISNULL), CAST((NOT (rt0.c4)) AS INTEGER), ((((rt0.c0)IS NOT(rt0.c4))) NOTNULL) FROM rt0 WHERE (rtreenode(NULL COLLATE RTRIM, NULL COLLATE BINARY)); -- 0ms;
SELECT (- ((rt0.c4 IN (rt0.c3)))) FROM rt0 WHERE (((('q2IהּL2L W'))>((0.18076939243376122))) COLLATE RTRIM); -- 0ms;
SELECT ((((((rt0.c3) IS TRUE))OR(LIKE(rt0.c3, rt0.c1, 'm'))))OR(NULL)) FROM rt0 WHERE (((('')) NOT BETWEEN ((CAST(']~K' AS REAL))) AND ((((x'') NOT BETWEEN (x'4b45') AND (x'')))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END AS INTEGER) FROM rt0 WHERE (((((('')) NOT BETWEEN ((x'')) AND (('-1739972131')))) BETWEEN (((((x'')AND('')))AND('-1648252733'))) AND (CAST(NULL AS BLOB)))) GROUP BY ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2)))>=(CASE rt0.c2  WHEN 0.2821654679795851 THEN rt0.c3 ELSE rt0.c1 END)) HAVING ((rt0.c3)-(((rt0.c0)LIKE(rt0.c2)))) LIMIT 58293465 OFFSET -13016758; -- 0ms;
SELECT ALL (((rt0.c4)/(rt0.c4)) IN ()) FROM rt0; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT CAST(rt0.c0 AS BLOB), 0.28979878508195567) FROM rt0 WHERE ((((('648664871') NOT BETWEEN ('720045470') AND (NULL))) ISNULL)) LIMIT 886187487 OFFSET -957057856; -- 0ms;
SELECT ALL (AVG(rt0.c2) IN ()) FROM rt0 WHERE (CASE '0.6598938083887328'  WHEN x'' COLLATE NOCASE THEN ((((NULL)OR(0.19382215562649763)))AND(0.7492983012458373)) ELSE (- (-1958660223)) END) GROUP BY ((rt0.c1 IN (rt0.c3)) IN ()) HAVING ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE); -- 0ms;
SELECT DISTINCT x'bd1e' FROM rt0; -- 0ms;
SELECT ((TRIM(rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) AND (CAST(rt0.c1 AS BLOB))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1) IS FALSE) IN ((+ (rt0.c4)), ((rt0.c0)IS NOT(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3))<>((0.8168648025387429))) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN (('駡Ajr')) AND ((GROUP_CONCAT(rt0.c4)))) FROM rt0 WHERE (((((CAST('+%' AS NUMERIC))AND('1574052944' COLLATE NOCASE)))AND(((x'')&(0.445980482994665))))); -- 0ms;
SELECT ALL (((((rt0.c1, rt0.c3, rt0.c4))<((rt0.c1, rt0.c4, rt0.c2)))) NOTNULL), ((CAST(rt0.c2 AS INTEGER)) IS FALSE), NTH_VALUE((rt0.c2 COLLATE RTRIM IN ()), ((((rt0.c1)LIKE(rt0.c1))) NOTNULL)) OVER () FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(0.8571314611798837))IS NOT(COALESCE('-812851501', '', 0.1677871519406775, NULL)))); -- 0ms;
SELECT DISTINCT rt0.c1, SUM(rt0.c2 COLLATE NOCASE COLLATE RTRIM), '593022322', CAST(UNLIKELY(rt0.c2) AS INTEGER), NULL FROM rt0 ORDER BY ((0.08554982158155922) NOTNULL) COLLATE BINARY ASC; -- 0ms;
SELECT DISTINCT ((((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))) IN (((rt0.c0)|(rt0.c4)), AVG(rt0.c4))) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c4) NOT NULL) END FROM rt0 WHERE ((~ ((((NULL))>((x'')))))); -- 0ms;
SELECT ((TOTAL(NULL)) NOT BETWEEN (((((((((rt0.c4)OR(rt0.c1)))OR(x'b99c')))AND(rt0.c2)))OR(rt0.c1))) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(rt0.c0) FROM rt0 GROUP BY CASE WHEN CAST(rt0.c4 AS INTEGER) THEN (~ (rt0.c2)) END, CAST(((rt0.c2) NOT NULL) AS BLOB), UNICODE(rt0.c0 COLLATE RTRIM); -- 0ms;
SELECT ALL COUNT(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))), CASE (- (0xffffffffc90eeed4))  WHEN 0Xfffffffffdffcdb5 THEN (+ (rt0.c0)) END, (((rt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) AND ((rt0.c2 COLLATE NOCASE))) FROM rt0; -- 0ms;
SELECT rt0.c4 FROM rt0 WHERE (CAST((- ('?')) AS INTEGER)) ORDER BY ((((((rt0.c1)>=(rt0.c1)))OR(((rt0.c3) IS FALSE))))OR(((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))) DESC  NULLS FIRST; -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM)/(JULIANDAY(rt0.c2, rt0.c0, rt0.c1))), CUME_DIST() OVER (), rt0.c0, ((((rt0.c2)GLOB(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS TEXT)) AND (CASE WHEN rt0.c1 THEN 0.9651658468626808 END)), CAST(rt0.c4 COLLATE RTRIM AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT (((((~ (rt0.c0)))AND(((rt0.c4)&(rt0.c4)))))AND(CASE WHEN rt0.c4 THEN rt0.c1 END)), CASE WHEN rt0.c2 THEN ((rt0.c4)AND(rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN -5.28357481E8 THEN x'' WHEN rt0.c1 THEN rt0.c2 END END, ((((((rt0.c1)OR(rt0.c1)))OR(-1972496623)))-(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), CASE TOTAL(rt0.c4)  WHEN rt0.c2 THEN ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)) END, TRIM(SQLITE_COMPILEOPTION_GET(rt0.c1)) FROM rt0 WHERE (CASE CHAR('1194045301')  WHEN ((x'')>(0.960976155266677)) THEN NULL WHEN (0.5305055442421576 IN ()) THEN (('-350473399')AND('')) WHEN (('-566982018')*('-1702191698')) THEN ((x'')/(0.7492958766739299)) END) LIMIT -880017419; -- 0ms;
SELECT (((rt0.c4 COLLATE NOCASE, GROUP_CONCAT(rt0.c0), ((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))))=((TOTAL(rt0.c0), (rt0.c1 IN ()), ((('741590615')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))))) FROM rt0 WHERE ((('쵲]') IS TRUE) COLLATE BINARY); -- 0ms;
SELECT ALL (((rt0.c1)<>(rt0.c0)) IN ()), (((((rt0.c3, rt0.c0, NULL))<((rt0.c2, rt0.c1, '889381925')))) NOT NULL), ((((rt0.c2) IS FALSE))&((((rt0.c1))>=(('19524983'))))), CASE WHEN GROUP_CONCAT(rt0.c4) THEN ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c0)) END, ((rt0.c0 COLLATE RTRIM)<=(((rt0.c4)LIKE(rt0.c4)))) FROM rt0; -- 1ms;
SELECT ALL x'' FROM rt0 WHERE ((((0.02880964955317189 IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT (NOT (COUNT(*))) FROM rt0 WHERE (((((x'b493')%(-1211620388)))%((('334943511')<=(''))))); -- 0ms;
SELECT DISTINCT (- (((rt0.c1)<>(0.07849713692156712)))) FROM rt0 WHERE ('Q8>6V') LIMIT 674706322; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c3 THEN ((rt0.c2)OR('-618339617')) ELSE ((((rt0.c2)AND(rt0.c1)))OR('-479200911')) END, TRIM(CAST(rt0.c3 AS REAL)), (((((((rt0.c0))<((rt0.c3))))AND(rt0.c1 COLLATE NOCASE)))OR(CASE 0.9524452597505029  WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0 WHERE (((CAST(x'' AS TEXT))&((((('222150867')AND('')))AND(x''))))); -- 0ms;
SELECT ALL CAST((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS NUMERIC), (~ (((rt0.c3)>=(rt0.c3)))), ((PRINTF(rt0.c3)) NOT BETWEEN (rt0.c0) AND (rt0.c0)) FROM rt0; -- 0ms;
SELECT NULL COLLATE NOCASE FROM rt0 GROUP BY '()'; -- 1ms;
SELECT DISTINCT CAST(rt0.c3 COLLATE BINARY AS BLOB), rt0.c3, rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT (~ (CAST(NULL AS INTEGER))), ((((rt0.c2)<>(rt0.c4)))>(x'')), COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ((((rt0.c2) NOTNULL))>>(((rt0.c2)+(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c3)) BETWEEN ((((rt0.c4, rt0.c1, rt0.c4))<=((rt0.c1, rt0.c3, rt0.c3)))) AND (CASE WHEN rt0.c2 THEN rt0.c4 END)) FROM rt0 WHERE ((((('b\')<<(NULL)))/((NOT ('-1655850577'))))); -- 0ms;
SELECT ALL CHANGES() FROM rt0; -- 0ms;
SELECT ALL CAST(CASE rt0.c2  WHEN rt0.c4 THEN NULL END AS NUMERIC), DENSE_RANK() OVER ( ORDER BY ((NULL)IS(rt0.c3 COLLATE RTRIM))), 2082429602, RANK() OVER (), (((NOT (rt0.c2))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4) IS FALSE) FROM rt0; -- 1ms;
SELECT x'' FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c4)OR(rt0.c2)))AND(NULL)))AND(rt0.c4)))OR(rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (NULL)) FROM rt0 WHERE ((((0.2895215664673656)) BETWEEN (((('')LIKE(NULL)))) AND ((x'' COLLATE NOCASE)))); -- 0ms;
SELECT ALL (((rt0.c2)AND(19524983)) IN (((rt0.c0)<=(rt0.c2)), CAST(rt0.c1 AS TEXT))) FROM rt0 WHERE ((('0.057965923705594724') BETWEEN (CAST(NULL AS INTEGER)) AND (NULL))); -- 0ms;
SELECT (((((rt0.c4))>((rt0.c2)))) NOT NULL), ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))||(rt0.c2 COLLATE NOCASE)), ((((rt0.c4) NOTNULL))GLOB((rt0.c0 IN ()))) FROM rt0 LIMIT 617269574 OFFSET -28874134; -- 0ms;
SELECT ALL 0x35cad357, COUNT(*), NULL FROM rt0 WHERE (((CAST(0.9731940043766665 AS BLOB)) NOT BETWEEN (((NULL)OR(NULL))) AND (((0X63e658f)IS('0.16843458441896664'))))) GROUP BY ((((((rt0.c1)OR(rt0.c1)))OR(0.9975466566194424)))LIKE((('#-5') BETWEEN (rt0.c0) AND ('1960983880')))) HAVING (- (((rt0.c1) NOTNULL))); -- 1ms;
SELECT DISTINCT (((MAX(rt0.c3), COUNT(rt0.c1), GROUP_CONCAT(rt0.c1)))<=((NULLIF(DISTINCT 0xffffffff8a353c20, rt0.c1), SUM(rt0.c4), ((rt0.c4)>(rt0.c2))))) FROM rt0 WHERE (CAST((+ (-1.114523427E9)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT rt0.c4 COLLATE NOCASE FROM rt0 WHERE (CAST((0.6045757864674398 IN (-37354725)) AS REAL)); -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE RTRIM)OR((NOT (rt0.c4)))) FROM rt0 EXCEPT SELECT AVG(highlight(rt0.c1, rt0.c4, rt0.c0, rt0.c2) COLLATE NOCASE) OVER () FROM rt0 NOT INDEXED;SELECT ALL ((((+ (rt0.c0)), (NOT (rt0.c1)), x''))>=(((+ (rt0.c1)), (((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))), rt0.c1 COLLATE RTRIM))), rt0.c2, COUNT(*) FROM rt0 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT ALL CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((rt0.c4)IS NOT(rt0.c4)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (NULL)) ELSE ((rt0.c1)>>(rt0.c0)) END FROM rt0; -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((x'', 0x23512c6d, x'')) NOT BETWEEN ((('4' IN ('Y}', '')), (x'' IN (0.56297767407775)), (+ (-2122054608)))) AND ((CAST(NULL AS REAL), x'', RTRIM('-375737789'))))); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM rt0 WHERE ((-1.276663297E9 COLLATE NOCASE IN ())); -- 0ms;
SELECT (~ (CAST(rt0.c2 AS REAL))) FROM rt0 WHERE (((NULL)|(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (~ (rt0.c4)), json_patch(CAST(0.14118164214304074 AS INTEGER), ((((rt0.c4)OR(rt0.c1)))OR(rt0.c0))), (((((~ (rt0.c4)))AND('-1606129767')))AND((rt0.c4 IN ()))) FROM rt0 WHERE (((0xffffffffc09325a7) NOT BETWEEN (x'') AND ('J}')) COLLATE NOCASE); -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM)>=(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0 WHERE (CASE WHEN CAST(0.8778500701651261 AS REAL) THEN ((('|', '1844381145', NULL, '', 0.5872411705647514))<=((NULL, x'', NULL, NULL, '1547181532'))) ELSE (~ (-1702035993)) END) LIMIT -1295347125 OFFSET 2022623817; -- 1ms;
SELECT (CAST(rt0.c1 AS TEXT) IN ()) FROM rt0; -- 0ms;
SELECT rt0.c3 FROM rt0; -- 0ms;
SELECT ALL ((((((((x'' COLLATE BINARY)AND(TYPEOF(rt0.c2))))AND(COUNT(*))))AND(((rt0.c2) BETWEEN ('H넑') AND (rt0.c3)))))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))) FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c0)>=(rt0.c0)))AND(((rt0.c1)OR(rt0.c1)))))OR((rt0.c2 IN ()))))OR(0.07340505481443083)))AND(((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)))) FROM rt0 GROUP BY (((rt0.c2)) NOT BETWEEN ((LOWER(DISTINCT rt0.c0))) AND ((rt0.c4))), CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END AS NUMERIC), CAST(((rt0.c2)>=(rt0.c3)) AS INTEGER) HAVING ((-1639122266) NOT NULL); -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN ((COUNT(rt0.c4))) AND ((((rt0.c4) IS FALSE)))), (((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))<=(('/b6'))), (((NOT (rt0.c0)))+(CAST(rt0.c4 AS INTEGER))) FROM rt0 WHERE ((- (((((x'')OR(0.351616693187363)))AND(NULL))))); -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))-(CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT 0.3067249602656228 FROM rt0 WHERE ((((NOT (5.54724937E8))) NOT BETWEEN (CASE 0x32dda9f3  WHEN '1383416334' THEN x'' ELSE NULL END) AND ((((NULL))>=((0.9103685469664697)))))) ORDER BY ((1.11739592E8) NOT NULL)  NULLS FIRST LIMIT 1896583063 OFFSET 546537607; -- 0ms;
SELECT DISTINCT CAST((('jFIUy]') NOT NULL) AS INTEGER) FROM rt0 WHERE (CASE ''  WHEN x'91e5' THEN '1537164316' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c2)/(rt0.c4)))AND(NULL)) FROM rt0 WHERE (CASE ((((-133472174)OR('-2009769957')))AND(x''))  WHEN ((('n갞ꮶ.(ꩆw疪'))<=((x''))) THEN NULL COLLATE RTRIM ELSE (NOT ('432502149')) END); -- 0ms;
SELECT DISTINCT ((((rt0.c2)%(0.3158395256201846)))>(UPPER(0Xffffffffd850161a))), '-1648252733', (GROUP_CONCAT(rt0.c3) IN ()) FROM rt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND ('0.2194996779146523')))+(CASE '`'  WHEN NULL THEN x'' END))); -- 0ms;
SELECT DISTINCT (((((rt0.c2))>=((rt0.c3)))) NOTNULL) FROM rt0 WHERE ((0.704550473702298 COLLATE BINARY IN ())); -- 1ms;
SELECT ALL IFNULL(CASE WHEN rt0.c0 THEN rt0.c2 END, rt0.c4) FROM rt0 WHERE (((((x'') NOT BETWEEN (x'') AND (0.5921390707209554))) IS FALSE)) ORDER BY (~ (rt0.c2)) COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT ALL json_extract(((rt0.c0)>(rt0.c2)), rt0.c3 COLLATE RTRIM), TOTAL_CHANGES(), rt0.c1 FROM rt0;SELECT ((AVG(rt0.c1))GLOB(rt0.c4 COLLATE NOCASE)) FROM rt0 GROUP BY ((rt0.c4)>(((rt0.c1)>(rt0.c1)))), (((((rt0.c4)AND(rt0.c2)))AND(NULL)) IN ()), (((rt0.c2 IN ()))<<(rt0.c3 COLLATE BINARY)) HAVING ((((((rt0.c2)|(rt0.c3)))OR((rt0.c3 IN ()))))OR(((rt0.c3)||(rt0.c4)))) LIMIT 1231008342 OFFSET -1925826751; -- 0ms;
SELECT CASE WHEN SUM(rt0.c3) THEN rt0.c1 ELSE GROUP_CONCAT(rt0.c3) END FROM rt0; -- 0ms;
SELECT ALL ((rt0.c4) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END) AND (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) FROM rt0 WHERE ((((('58293465')|(x'')))<<(((((((((0Xffffffffde046921)OR('T0G')))OR('')))OR('902484823')))OR(x''))))); -- 1ms;
SELECT ALL ((((((((TRIM(DISTINCT rt0.c0))AND(((rt0.c0)AND('')))))AND(((0.3712568328451581) IS FALSE))))OR(((rt0.c2)-(rt0.c0)))))OR(((rt0.c4) IS FALSE))), CASE json_remove(rt0.c3, rt0.c2)  WHEN ((rt0.c0) NOTNULL) THEN rt0.c3 COLLATE BINARY END, ((rt0.c4)&(0.8499606146333333)) COLLATE NOCASE, LAST_VALUE(((((((((CAST(rt0.c0 AS TEXT))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END)))AND(rt0.c1 COLLATE NOCASE)))OR(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 ELSE '' END)))OR(TRIM(DISTINCT rt0.c2)))) OVER (), ((rt0.c3) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 WHERE ((((~ (NULL))) NOT NULL)); -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (x'52f7') AND (rt0.c1)))|(UNLIKELY(DISTINCT rt0.c1))) FROM rt0 WHERE (((((('-677004460')) NOT BETWEEN ((x'')) AND ((NULL))))*((((0.8954740251964992)) NOT BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT ((rt0.c0)<(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt0 WHERE (CASE ('' IN ())  WHEN CASE WHEN x'' THEN -339557330 END THEN ((0.3411676354017946)IS NOT(NULL)) WHEN ((NULL) IS TRUE) THEN 'o(' WHEN CASE WHEN 0.4973197440983079 THEN -656193670 WHEN 'hOd-' THEN x'3d83' WHEN 0.3582734436314998 THEN '帚6' END THEN CASE WHEN -2088180998 THEN NULL WHEN x'' THEN 0xffffffffdc75314e WHEN '0.4658423021263298' THEN '-1185989380' END ELSE '' END); -- 0ms;
SELECT DISTINCT (((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((NULL)))) ISNULL), LAST_VALUE(CASE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (((rt0.c2, rt0.c3, rt0.c3, rt0.c2, rt0.c3, rt0.c0, rt0.c0))>=((rt0.c2, -2088180998, rt0.c3, rt0.c1, '', rt0.c3, rt0.c4))) THEN rt0.c4 END) OVER (), ((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))&(((rt0.c1)AND(rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN 'Jm%' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c0 END)+(rt0.c1)) FROM rt0; -- 0ms;
SELECT TOTAL(rt0.c1) OVER (), (NOT (rt0.c0)) COLLATE NOCASE, (((((rt0.c2 IN ()))OR(((rt0.c3) ISNULL))))OR(NULL)), ((rt0.c1 COLLATE RTRIM)<=(CAST(rt0.c2 AS NUMERIC))), (+ (((rt0.c1) IS FALSE))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3)OR('0.057965923705594724')))OR(x'')))AND(rt0.c1)))AND(rt0.c1)))%((rt0.c3 IN ('\V')))) FROM rt0 WHERE ((('284356166' COLLATE BINARY) NOT BETWEEN (CASE 1.550079366E9  WHEN x'' THEN 0.39750775929662596 ELSE 0.8843200459910341 END) AND (((x'')&(NULL))))); -- 0ms;
SELECT DISTINCT (((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0))))!=((((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))AND('-486459765')))AND(rt0.c1))))), ((COUNT(*))<(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))), '-855147419' FROM rt0; -- 1ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM rt0 WHERE (((((('J') BETWEEN (x'') AND ('w궐cp')), ((((0.5977994287961841)OR(0.8317071054086514)))AND(NULL)), -1115432013 COLLATE RTRIM))>(((~ (x'')), ((NULL) NOT BETWEEN (0.5548809032219271) AND ('Ke/dx')), (NOT ('')))))) LIMIT 1821924039; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), rt0.c4, ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)+(((rt0.c4)GLOB(rt0.c0)))) FROM rt0 ORDER BY CAST('2000538112' COLLATE RTRIM AS REAL)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt0.c2)>>(CASE rt0.c2  WHEN '' THEN rt0.c2 END)), (((~ (rt0.c0)))|(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))), ((((((((x'' COLLATE RTRIM)AND(rt0.c3 COLLATE NOCASE)))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c3)<=(rt0.c3)))))AND(((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))) FROM rt0 WHERE ((0X7b57f743 IN ())) LIMIT -665840102 OFFSET -1025575900; -- 0ms;
SELECT DISTINCT ((((NULL) BETWEEN (rt0.c1) AND (rt0.c0)))=(((rt0.c0)*(rt0.c0)))), (- ((rt0.c3 IN ()))), (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)) AND ((((rt0.c0)<<(rt0.c1))))), CAST(rt0.c4 COLLATE RTRIM AS REAL), CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN NULL END FROM rt0 WHERE (CAST(json_array_length(0.259034146217881) AS NUMERIC)) GROUP BY rt0.c0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c2 AS INTEGER)) OVER (), ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c3))) ISNULL), (- (((0.047205189417926174)>=(rt0.c2)))) FROM rt0 ORDER BY json_extract(((rt0.c1)GLOB(rt0.c3)), (rt0.c0 IN (rt0.c0))) DESC  NULLS FIRST;SELECT DISTINCT ((((rt0.c1)*(rt0.c1))) BETWEEN (((rt0.c3)LIKE(rt0.c1))) AND (-7.93825176E8)), ((((((rt0.c4)&(rt0.c4)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), ABS(DISTINCT CAST('-587945524' AS NUMERIC)) FROM rt0 WHERE (',rjgp.'); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT LEAD(CAST((((rt0.c1))>=((rt0.c1))) AS BLOB), (+ (rt0.c4)), (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))>=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))))) OVER () FROM rt0 WHERE ((((('l\n''uiwwའ')<>(0.7067351577598483)))<(x'7549' COLLATE BINARY))); -- 0ms;
SELECT ALL CAST((~ (rt0.c3)) AS NUMERIC), ((x'') NOTNULL), rt0.c3 FROM rt0 WHERE (((CAST(x'23b9' AS BLOB)) NOTNULL)); -- 0ms;
SELECT COUNT(NULLIF(rt0.c1, rt0.c2)) FROM rt0; -- 1ms;
SELECT DISTINCT SUM((rt0.c2 IN ())) OVER (), TOTAL((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))), (rt0.c2 COLLATE NOCASE IN ()) FROM rt0; -- 0ms;
SELECT (((PRINTF(rt0.c0)))>((((rt0.c0)IS(rt0.c4))))) FROM rt0 ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3)<=(rt0.c3)))) AND ((((rt0.c2)*(rt0.c0))))); -- 0ms;
SELECT ALL RTRIM(CAST(rt0.c4 AS INTEGER)), rt0.c1, (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt0.c0) NOTNULL)))), NULL, CASE (- (rt0.c3))  WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 END THEN 0.534629900038106 END FROM rt0 WHERE (((x'' IN (NULL, x'c5c9707d')) IN ())); -- 0ms;
SELECT DISTINCT ((NULL)&(rt0.c1)) COLLATE BINARY, rt0.c4, 0.6849757413287471 FROM rt0; -- 0ms;
SELECT load_extension((rt0.c3 IN ())), ((DATETIME(rt0.c1, rt0.c1, rt0.c4)) NOT NULL), CASE WHEN 'r' THEN (('ywI') NOT BETWEEN (rt0.c1) AND (rt0.c2)) END FROM rt0 WHERE (CASE ((0.6387077220342561)IS NOT(0.6610325583707808))  WHEN (+ ('MvGƯi㾠F,')) THEN (('MB')IS NOT('hU')) WHEN (('') IS TRUE) THEN ('-1892573390' IN ()) WHEN ((NULL)GLOB('1737266008')) THEN ((NULL) BETWEEN (-1639122266) AND (0xffffffff83b73427)) END); -- 0ms;
SELECT DISTINCT (+ (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c0)))), ((((((((rt0.c0 COLLATE NOCASE)OR(COUNT(rt0.c3))))AND((rt0.c0 IN (rt0.c2, rt0.c1)))))OR(TRIM(DISTINCT rt0.c4, rt0.c3))))OR(CAST('0.2201118076299029' AS TEXT))), (((rt0.c0, rt0.c0, x'')) NOT BETWEEN ((rt0.c4 COLLATE NOCASE, ((rt0.c0) IS TRUE), ((rt0.c4)|(rt0.c4)))) AND (((rt0.c2 IN ()), (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((x''))), ((rt0.c2) NOTNULL)))) FROM rt0 WHERE (((('\rU[]_c6P', 0.026706798107665963, 0.8508548507820306)) BETWEEN ((NULL, CASE WHEN 1577824147 THEN x'' ELSE 0.6292261050097843 END, COALESCE(DISTINCT 0x214ffd3f, 0.4550625084477482))) AND ((((x'')LIKE(NULL)), CAST(NULL AS INTEGER), (~ (NULL)))))); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c4))) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c0)<>(rt0.c4)))) FROM rt0 LIMIT 878923; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), (((((rt0.c4 IN (rt0.c4)))OR(((((rt0.c0)AND(rt0.c2)))OR(NULL)))))OR(((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))AND(x'')))AND(rt0.c2)))), rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*), ((rt0.c2 COLLATE RTRIM)OR(((((((((((((rt0.c3)AND('? TiK&n')))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))), 0.5385088853417688, CASE WHEN ((rt0.c3) ISNULL) THEN IFNULL(rt0.c2, 0.8603584027278393) ELSE rt0.c3 END, CHANGES() FROM rt0; -- 0ms;
SELECT TOTAL(((NULL)-(rt0.c2))) FROM rt0 LIMIT -1520797301; -- 0ms;
SELECT DISTINCT ('549661246' IN ()) FROM rt0; -- 0ms;
SELECT (CAST(rt0.c0 AS NUMERIC) IN ()), CAST((rt0.c2 IN ()) AS INTEGER), TOTAL((+ (rt0.c3))) FROM rt0 WHERE ('470511503'); -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c2) IS FALSE))))OR((((x'', rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c1)) AND ((rt0.c4, '0.5914291968897513', rt0.c3))))), (CAST(rt0.c4 AS REAL) IN ()), ((x'')<<(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0 LIMIT 1171916384 OFFSET -2130468362; -- 1ms;
SELECT ALL ((((-1297973599)AND(AVG(rt0.c3))))OR(rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE (((('-539504176')LIKE(x'b168')) IN ())) GROUP BY (((((rt0.c4))>=((rt0.c0))))||((rt0.c4 IN ()))) HAVING (((rt0.c0)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)) AND (((- (rt0.c2))))) ORDER BY rt0.c1 DESC; -- 0ms;
SELECT DISTINCT ((((rt0.c4)OR(rt0.c2)))<>(CASE rt0.c1  WHEN rt0.c2 THEN '1106813943' ELSE rt0.c1 END)), CASE WHEN ((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c4)))AND(0xffffffffe56d4379)))AND(rt0.c3)) THEN (rt0.c3 IN ()) WHEN ((rt0.c2)%(rt0.c2)) THEN rt0.c3 WHEN ((rt0.c2)+(rt0.c4)) THEN ((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)) WHEN '{W' THEN CAST(NULL AS NUMERIC) WHEN SQLITE_SOURCE_ID() THEN highlight(rt0.c0, rt0.c3, rt0.c0, rt0.c4) ELSE (((rt0.c3))<>((rt0.c2))) END, ((rt0.c4) ISNULL), ((((rt0.c3)*(NULL)))+(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END)), (((NOT (x'165c'))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND ('1466469117')) FROM rt0 WHERE ((((((('0.893598161536842')OR(NULL)))OR('612105320'))) NOT BETWEEN (CASE '&4)2~'  WHEN NULL THEN '-1211620388' WHEN NULL THEN x'' WHEN '' THEN '0.0' ELSE 0.5077802251852719 END) AND (((x'5e26ae3c5dbc') BETWEEN (0.7981799403070292) AND ('1990940571')))));SELECT DISTINCT AVG(rt0.c0 COLLATE RTRIM) OVER () FROM rt0 WHERE (((x'' COLLATE BINARY)!=(CASE NULL  WHEN x'' THEN '' WHEN 5.92708513E8 THEN NULL WHEN NULL THEN 0.42717271707052973 WHEN '0.26598556235398196' THEN -1750372860 WHEN 0Xffffffffc7e85594 THEN 1547739814 ELSE NULL END))); -- 0ms;
SELECT ALL '-1185989380', ((((rt0.c4) ISNULL)) BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4))) AND (CAST(rt0.c0 AS REAL))), (~ (CAST('-585340035' AS TEXT))) FROM rt0 GROUP BY ((((((((rt0.c1)OR(rt0.c3)))OR(x'')))AND(((rt0.c3)|(rt0.c3)))))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)); -- 0ms;
SELECT ALL (NOT (GROUP_CONCAT(rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT ((UPPER(rt0.c3))IS(CAST(rt0.c0 AS INTEGER))) FROM rt0 WHERE (CAST(CAST('䋀+或' AS BLOB) AS INTEGER)) ORDER BY ((((rt0.c3) NOT NULL)) IS TRUE) DESC, (+ ((0.44278200001106316 IN ()))) DESC  NULLS FIRST, CAST(rt0.c0 COLLATE RTRIM AS TEXT) DESC; -- 0ms;
SELECT COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c0 COLLATE NOCASE IN (MIN(rt0.c1))), ((((((rt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(((rt0.c0)=(rt0.c2)))), GROUP_CONCAT(rt0.c4) FROM rt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT rt0.c3, CASE WHEN rt0.c4 THEN rt0.c3 END) FROM rt0 WHERE (CASE ''  WHEN NULL THEN 'H\72''㚀~' WHEN x'' THEN x'' WHEN 0.5517888657973575 THEN NULL ELSE x'f2cc' END COLLATE BINARY); -- 0ms;
SELECT DISTINCT MIN(((rt0.c0) IS FALSE)) FROM rt0 ORDER BY LIKELY(((NULL) NOT NULL))  NULLS FIRST; -- 0ms;
SELECT ALL ((~ (rt0.c0)) IN ()), x'' COLLATE RTRIM, CASE ((rt0.c1)LIKE(rt0.c0))  WHEN (rt0.c3 IN ()) THEN (rt0.c4 IN ()) ELSE NULL COLLATE NOCASE END FROM rt0 WHERE (CAST(x'' COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT ALL ((((0.3705067494432511) BETWEEN (0X85c5cde) AND (rt0.c1)))|(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0 WHERE ((+ (((0.6577362864420969)AND('642|Qe'))))); -- 0ms;
SELECT ALL ((CAST(rt0.c1 AS BLOB))IS NOT('oo稑3P')) FROM rt0 WHERE (((((NULL) IS TRUE)) NOT BETWEEN (((0.6236150325428599) IS FALSE)) AND ((-381094279 IN (NULL))))); -- 0ms;
SELECT ALL ((rt0.c1) NOT NULL) FROM rt0 WHERE ((((+ (NULL)))<<((-1892573390 IN ())))); -- 0ms;
SELECT DISTINCT UPPER((NOT (rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)GLOB(rt0.c4)))|(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0 WHERE ((((1339241233 IN ()))GLOB(rtreenode(x'', '-671423216')))) LIMIT 144653858 OFFSET -1153954132; -- 1ms;
SELECT ((CAST(NULL AS NUMERIC)) BETWEEN (rt0.c4) AND ((('0.6922630291433446') IS TRUE))) FROM rt0; -- 0ms;
SELECT ALL CASE ((((rt0.c4)AND(rt0.c2)))AND('Vp'))  WHEN rt0.c4 COLLATE NOCASE THEN (('2062580199') NOT BETWEEN (rt0.c1) AND (rt0.c0)) END FROM rt0 WHERE ((('1550079366' COLLATE NOCASE)IS((0.2165253141866358 IN ())))); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE NOCASE)IS NOT(rt0.c2)), COUNT(*), ((rt0.c2)GLOB(rt0.c4)) COLLATE RTRIM, CAST(CASE rt0.c1  WHEN rt0.c1 THEN 0.9215724656584138 END AS TEXT), rt0.c2 FROM rt0; -- 0ms;
SELECT (((((rt0.c2)||(rt0.c0)), ((rt0.c0)=(rt0.c4)), (rt0.c3 IN (rt0.c2, rt0.c2))))==((rt0.c2, ((rt0.c0)<(rt0.c0)), CAST(rt0.c1 AS INTEGER)))) FROM rt0 WHERE (53192779); -- 0ms;
SELECT (((((rt0.c3)>=(rt0.c4))))<=((NULL))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4, 0Xffffffffa8c97b69, rt0.c4, rt0.c0, '592708513')) NOT BETWEEN ((NULL, ((rt0.c0)LIKE(rt0.c1)), rt0.c2 COLLATE NOCASE, SUM(rt0.c2), rt0.c0)) AND (((- (rt0.c4)), '0n	ᘚ[UU(', CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END, AVG(rt0.c4), LIKELIHOOD(DISTINCT rt0.c4, 0.11052952943083771)))) FROM rt0; -- 1ms;
SELECT (((rt0.c3, rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c4)>=(rt0.c0)), (((rt0.c3))>=((rt0.c0))), UPPER(rt0.c0))) AND ((CASE 0.609923630479733  WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)|(rt0.c1)), LTRIM(980938234, rt0.c1)))) FROM rt0 WHERE (CASE WHEN ((NULL)<('(l뉃퍼co%i')) THEN ((NULL)==(NULL)) ELSE ((0.13450121529123749)=(x'')) END); -- 0ms;
SELECT DISTINCT json_remove((((rt0.c4, NULL, rt0.c4))!=((rt0.c2, rt0.c2, rt0.c0))), CAST(rt0.c4 AS BLOB), ((rt0.c3)IS NOT(rt0.c4)), QUOTE(rt0.c2)) FROM rt0 WHERE ((((((('2131004038') NOT BETWEEN (x'5b6a') AND (NULL)))AND(x'2cc0' COLLATE NOCASE)))OR(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT SUM(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0)) COLLATE RTRIM) OVER () FROM rt0 ORDER BY ((((rt0.c1) IS FALSE))GLOB(CAST(rt0.c4 AS REAL))) ASC; -- 0ms;
SELECT ALL (+ (x'8f699284')) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL)) NOT BETWEEN (rt0.c2) AND ((NOT (rt0.c2)))) FROM rt0; -- 0ms;
SELECT TOTAL(rt0.c2 COLLATE RTRIM) OVER () FROM rt0 WHERE (x'' COLLATE NOCASE) GROUP BY ((((rt0.c4)AND(rt0.c2))) IS FALSE); -- 0ms;
SELECT LAST_VALUE(NULL COLLATE NOCASE) OVER () FROM rt0 WHERE ((((('-1342219666') NOT BETWEEN (NULL) AND (x''))) BETWEEN ('' COLLATE BINARY) AND (((NULL) NOTNULL)))) GROUP BY (+ (((((((((NULL)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c0)) NOT BETWEEN ('X^dZ') AND (CAST(rt0.c2 AS NUMERIC))), rt0.c4, CAST((((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) AS NUMERIC) FROM rt0; -- 0ms;
SELECT TOTAL_CHANGES() FROM rt0; -- 0ms;
SELECT MAX(json_array(rt0.c0, rt0.c4, rt0.c1, rt0.c2)) FROM rt0 WHERE (TRIM(DISTINCT ((NULL)+(x'')))); -- 1ms;
SELECT DISTINCT ((((COUNT(rt0.c4))AND(((rt0.c3) IS TRUE))))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))) FROM rt0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt0.c2, LIKELIHOOD(DISTINCT MAX(rt0.c1), 0.8729084268473803), PERCENT_RANK() OVER () FROM rt0 WHERE ((((((((((- (-1.620635808E9)))AND(((0.7866585458220484) IS FALSE))))OR(CASE WHEN '+~|Ep*KE\' THEN '-1696842220' WHEN '0.1694262805735065' THEN '2022623817' WHEN NULL THEN x'7fd7ae9d' END)))AND(((x'') BETWEEN ('쵲x') AND (-1.171342767E9)))))OR(CASE 1938440545  WHEN 0.9909765008225514 THEN NULL ELSE x'' END))) GROUP BY (+ (SQLITE_COMPILEOPTION_GET(rt0.c4))) HAVING ((rt0.c3 IN ()) IN ()); -- 0ms;
SELECT DISTINCT ((rt0.c4) NOTNULL) FROM rt0; -- 0ms;
SELECT TOTAL((rt0.c1 IN (rt0.c4))) OVER (), LIKELIHOOD(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)), 0.352299262185751), (- (((((rt0.c1)AND(rt0.c4)))AND(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL (NOT (rt0.c4)) COLLATE NOCASE FROM rt0 WHERE (TRIM(DISTINCT '') COLLATE BINARY) LIMIT -814339085; -- 1ms;
SELECT DISTINCT ((((rt0.c2)+(rt0.c4)))LIKE((rt0.c1 IN ()))) FROM rt0 WHERE (((CASE WHEN NULL THEN x'' ELSE 0X5e8e5c89 END) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((rt0.c4)-(rt0.c0)), ROUND(rt0.c4, 889817503), CAST(rt0.c1 AS BLOB)))<=((0.7603996117731052, (rt0.c1 IN ()), COALESCE(DISTINCT rt0.c3, rt0.c1)))), CASE WHEN rt0.c0 COLLATE NOCASE THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END END, ((((rt0.c1)||(rt0.c2)))<=(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)))), (~ (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)), CAST(rt0.c2 COLLATE RTRIM AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4)AND(NULL)))/(0Xffffffffb31bacbc)) FROM rt0; -- 0ms;
SELECT CASE WHEN UNLIKELY(rt0.c3) THEN (('r') NOT BETWEEN (rt0.c0) AND (rt0.c4)) END FROM rt0 WHERE ((((NULL)) BETWEEN (((NOT (NULL)))) AND ((CASE WHEN -1.74912537E8 THEN 0.14674807185228833 END)))); -- 0ms;
SELECT ALL ((((rt0.c4)>=(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (CAST(rt0.c2 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) AS TEXT), (((rt0.c2)GLOB(rt0.c4)) IN ()), ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, rt0.c0, NULL)) AND ((rt0.c1, rt0.c4, rt0.c2))) IN ()) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)) IN ()) FROM rt0; -- 0ms;
SELECT SUM(((rt0.c1)AND(0.9983974827004088))), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN '1504584552' THEN rt0.c1 ELSE rt0.c4 END COLLATE RTRIM, (rt0.c4 IN (rt0.c2)) COLLATE BINARY FROM rt0 WHERE (((CAST(0Xffffffffbd60b3b8 AS INTEGER))&((('dJg1M0D')OR(0.0055970403755100095))))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT NULL), ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)GLOB(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))), AVG(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((x'4d6b')AND(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) IN ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((0Xffffffffda90e536)>=(rt0.c1)))) FROM rt0 WHERE (((((0Xffffffff81840430)LIKE(NULL))) NOT BETWEEN (('ඊ' IN ())) AND (CAST('1115717105' AS REAL)))); -- 0ms;
SELECT DISTINCT LAST_VALUE(rt0.c1) OVER (), NULL, MAX(TOTAL(((rt0.c0)&(rt0.c1)))) FROM rt0 WHERE ((((~ ('0.7625651315435238')))||(((0.12995031621481323)<=(NULL))))) UNION ALL SELECT DISTINCT AVG(CAST(rt0.c3 AS NUMERIC)) OVER (), (((+ (NULL))) NOT NULL), ((((MIN(rt0.c1))AND(((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c1)<(rt0.c1)))) FROM rt0;SELECT ALL NTH_VALUE(ABS(DISTINCT json_array_length(rt0.c4, rt0.c4)), ((((rt0.c0) ISNULL)) IS FALSE)) OVER (), ((MAX('-118745324'))&(((('', rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c0))))), ((NULL IN ()) IN ()) FROM rt0 GROUP BY (((rt0.c0 IN ()))LIKE(((rt0.c3)IS NOT(rt0.c0)))), (((json_array(rt0.c2, rt0.c3)))=(((((rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, rt0.c4, rt0.c1)) AND ((rt0.c4, rt0.c3, rt0.c2)))))), ((NULL) NOT BETWEEN ((rt0.c3 IN ())) AND ('581685186')), (((rt0.c2)<=(rt0.c0)) IN ()), NULL;SELECT DISTINCT (((NOT (rt0.c0))) BETWEEN (((rt0.c0)%(rt0.c1))) AND ((NOT (rt0.c1)))), (((MAX(rt0.c2), TOTAL(0xffffffff9e656b56), CAST(0xfffffffff04226e9 AS INTEGER)))==((INSTR(rt0.c2, rt0.c1), UNLIKELY(rt0.c0), (rt0.c2 IN ())))), (NOT ((~ (2022623817)))), FIRST_VALUE(((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))) BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0)<=(rt0.c2))))) OVER (), (- ((+ (rt0.c0)))) FROM rt0 WHERE (ABS(((0.3775465960130696) NOT BETWEEN (0.6329516548201602) AND ('0.9897536529453772')))); -- 0ms;
SELECT ALL (+ (SUBSTR(rt0.c3, rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((((((rt0.c2)OR(rt0.c4)))AND(-222669729)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c0)) IN (((rt0.c4) NOT BETWEEN (rt0.c1) AND ('-479200911')))), (+ (load_extension(-3.75737789E8))), ((CAST(rt0.c1 AS INTEGER)) ISNULL) FROM rt0 GROUP BY (- (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))));SELECT ALL (((rt0.c3, rt0.c4, rt0.c2)) BETWEEN (((NOT (rt0.c4)), (((rt0.c2))>((rt0.c1))), ((rt0.c1)&(rt0.c1)))) AND ((UNLIKELY(DISTINCT rt0.c4), 0.5768444850359666, rt0.c3))), CASE rt0.c4  WHEN (- (rt0.c3)) THEN CAST(rt0.c0 AS INTEGER) END, ((((rt0.c2)<=(rt0.c3)))<<(((NULL)<=(rt0.c3)))) FROM rt0 WHERE (ABS((('C')=('7IXcxX')))); -- 0ms;
SELECT ALL (((CAST(rt0.c3 AS NUMERIC)))<((AVG(rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL x'', ((CAST(0.19189183853868252 AS BLOB)) NOTNULL), NULL COLLATE BINARY FROM rt0 WHERE (CAST(CASE '-1513110337'  WHEN NULL THEN x'' ELSE NULL END AS INTEGER)) GROUP BY CAST((rt0.c4 IN ()) AS TEXT) HAVING ((((((rt0.c1)AND(rt0.c1)))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))AND(((rt0.c0)-(rt0.c3)))); -- 0ms;
SELECT DISTINCT MIN(LIKELIHOOD(0.6020584567811726, 0.16346984081188776)) FROM rt0 WHERE (((((0xffffffffc5e58fb8) ISNULL)) NOT BETWEEN ((((((((('d&')OR(0xfffffffff30f26df)))OR('-YL7Cq3tx')))AND(x'')))AND(0.4763331298624319))) AND ((((x'')) BETWEEN ((x'05f0')) AND (('eTx丮\\{')))))) GROUP BY TRIM(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE NULL END), (((((rt0.c4, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c4, rt0.c4)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND ('411170068'))) AND (((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))), (NOT ((NOT (rt0.c3)))) HAVING (rt0.c1 IN ()) COLLATE BINARY ORDER BY (NULL IN (((x'')=(rt0.c1)))); -- 0ms;
SELECT DISTINCT ((0X4fceee44)<(CASE WHEN rt0.c1 THEN rt0.c2 END)) FROM rt0; -- 0ms;
SELECT ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4))) ISNULL) FROM rt0 WHERE (((((NULL) IS FALSE))-((((1941890430, 0.20496877418630866, ''))<((NULL, NULL, 0.4932374125038973)))))) GROUP BY CASE WHEN (~ (rt0.c4)) THEN rt0.c2 COLLATE RTRIM END; -- 0ms;
SELECT ALL (- ((rt0.c4 IN ()))) FROM rt0 ORDER BY CAST((NOT (rt0.c2)) AS INTEGER) DESC; -- 0ms;
SELECT ((((rt0.c2)AND(rt0.c1)))AND(UNLIKELY(0.061345910643974766))) FROM rt0 WHERE (((((CASE WHEN NULL THEN '1097955336' ELSE '-1620635808' END)AND((((('-833605817')AND(0.13367769497357795)))AND(x'ae51')))))AND(('937430410' IN (')뭬'))))) GROUP BY CASE rt0.c2  WHEN ('鼲K9Ca먚' IN (rt0.c2)) THEN ((x'') ISNULL) WHEN ABS(rt0.c0) THEN ((((rt0.c0)AND(rt0.c4)))OR('-1115432013')) WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN UNLIKELY(rt0.c1) END, (((((rt0.c2)||(rt0.c3)), (((rt0.c0, rt0.c3, rt0.c1))<((rt0.c1, rt0.c1, rt0.c2))), ((321498911) NOTNULL)))>((rt0.c0, ((rt0.c2)==(rt0.c3)), rt0.c2 COLLATE RTRIM))), (((((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))))OR(CASE WHEN rt0.c1 THEN rt0.c0 END)), (+ (((rt0.c0)*(rt0.c3)))), (- ((rt0.c1 IN (rt0.c4)))) HAVING COUNT(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4))); -- 0ms;
SELECT DISTINCT ABS(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) FROM rt0 WHERE ((((- (NULL)))IS(((0xffffffff8ce01439)=(x''))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((rt0.c4) IS TRUE)) IS TRUE)) OVER (), COUNT(*), rt0.c2 FROM rt0 WHERE (CASE NULL  WHEN 1794529630 THEN NULL END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT 0.8423881491253591 FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))) OVER ( ORDER BY ((rt0.c3) ISNULL) COLLATE NOCASE, ((((rt0.c2)AND(0.4741169670033941)))AND(rt0.c2)) COLLATE RTRIM ASC  NULLS LAST, CASE WHEN ((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))AND(0.9184148697734325)))OR(rt0.c4)) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) ELSE ((rt0.c2) NOT NULL) END ASC  NULLS FIRST) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)) AS REAL) FROM rt0 WHERE (((((((((((0.5910769535522795)>(0.07762878525383987)))OR((0.13480104575445884 IN ()))))AND(TRIM('*q3x{t?r3', NULL))))AND('-1115432013')))OR((NOT (592708513))))); -- 0ms;
SELECT DISTINCT x'7fed', (((rt0.c1)) BETWEEN ((((rt0.c0) ISNULL))) AND ((0.9622847738774123))), CASE (~ (rt0.c3))  WHEN CAST(0.7625651315435238 AS REAL) THEN rt0.c4 END FROM rt0 LIMIT -1808653256 OFFSET 409576310; -- 0ms;
SELECT CASE CAST(rt0.c1 AS NUMERIC)  WHEN (- (rt0.c4)) THEN (rt0.c3 IN (rt0.c0)) ELSE ((rt0.c3)-(rt0.c1)) END FROM rt0 WHERE (LTRIM((+ (x'')), CAST(NULL AS INTEGER))); -- 0ms;
SELECT ALL TRIM(rt0.c4 COLLATE RTRIM, ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4))) FROM rt0; -- 0ms;
SELECT ALL ((~ (rt0.c4)) IN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 END)) FROM rt0; -- 0ms;
SELECT CASE WHEN QUOTE(rt0.c0) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN (+ (rt0.c1)) THEN ((((rt0.c4)AND(rt0.c3)))AND(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN 0.4339650097489104 WHEN x'' THEN rt0.c3 WHEN '404783122' THEN rt0.c1 ELSE rt0.c3 END THEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) WHEN (~ (0.7243331199929178)) THEN rt0.c3 COLLATE BINARY WHEN 0.8119758203706573 THEN rt0.c1 COLLATE NOCASE ELSE rt0.c4 END FROM rt0 WHERE (x'' COLLATE NOCASE); -- 0ms;
SELECT SUM(((rt0.c3)LIKE(x'')) COLLATE RTRIM) OVER (), ((rt0.c1)GLOB(((rt0.c3)<<(rt0.c1)))), RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL (rt0.c0 IN ()) COLLATE NOCASE FROM rt0 WHERE (RTRIM(('</E,)LLb*' IN ()))) LIMIT -1041445778 OFFSET -28612907; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)))AND(rt0.c3)) FROM rt0; -- 0ms;
SELECT ((((rt0.c4 COLLATE RTRIM)OR(((((rt0.c2)AND('0.9072741445310583')))OR(rt0.c0)))))OR(GROUP_CONCAT(rt0.c1))), (+ (((rt0.c0)-(rt0.c0)))), ((rt0.c3 COLLATE NOCASE) NOT BETWEEN (((rt0.c1)<=(rt0.c2))) AND (((rt0.c0)IS NOT(rt0.c1)))) FROM rt0 WHERE ((((x'985a') IS FALSE) IN (((((NULL)OR(0.6624554368705831)))AND(0.3509859553590252))))); -- 0ms;
SELECT DISTINCT ((((rt0.c4) BETWEEN ('') AND (rt0.c3)))IS NOT(((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))) FROM rt0 WHERE (0x26b19d); -- 0ms;
SELECT ALL TOTAL(((rt0.c0) ISNULL)), (~ (rt0.c0 COLLATE RTRIM)), ((((rt0.c0 COLLATE BINARY)OR(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c3 END)))OR(((rt0.c4) NOT NULL))) FROM rt0 ORDER BY (((rt0.c3 IN ()))||(rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, (((rt0.c0)*(rt0.c4)) IN (IFNULL(DISTINCT rt0.c4, rt0.c4))) ASC  NULLS FIRST; -- 0ms;
SELECT ((((rt0.c2)>(rt0.c1))) IS FALSE), ((((rt0.c4)AND(rt0.c4)))AND(x'')) COLLATE NOCASE, ((rt0.c4)/(((rt0.c3) IS FALSE))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c2 AS BLOB)  WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)) THEN (~ (rt0.c1)) ELSE SUM(rt0.c2) END FROM rt0 WHERE ((- (((0.10515016605497252) BETWEEN ('1673728216') AND (0.7242434168985573))))); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY)>=(HEX('-81755296'))) FROM rt0 ORDER BY ((((rt0.c1)GLOB(rt0.c4)))IS NOT(((((rt0.c0)AND(rt0.c4)))AND(rt0.c4)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (~ ((NULL IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c4)LIKE(rt0.c2)))AND(NULLIF(rt0.c1, rt0.c4))))AND((rt0.c3 IN ()))))AND((+ ('2144544027')))))OR(AVG(rt0.c1))) FROM rt0 WHERE (x'c453'); -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(rt0.c1 AS BLOB)) FROM rt0 WHERE ((0.4658423021263298 COLLATE RTRIM IN (((x'') NOT NULL)))); -- 0ms;
SELECT TOTAL(((rt0.c1)OR(rt0.c3))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT ((NULL) IS FALSE), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))) FROM rt0; -- 0ms;
SELECT ((((rt0.c3)*(rt0.c1)))+(CAST(rt0.c0 AS NUMERIC))), COALESCE(DISTINCT ((rt0.c3)<(NULL)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)), (rt0.c4 IN (rt0.c1, NULL)), NULLIF(DISTINCT rt0.c4, rt0.c4), rt0.c0, x'f730'), LAST_VALUE(((((x'2f98' IN (rt0.c0))))<=((',po{c㪝~\rW')))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), rt0.c1, ((((rt0.c3) NOTNULL)) NOT NULL) FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (((rt0.c2)<<(rt0.c4))) AND (((0.5849039786427273) IS TRUE))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) AND (rt0.c0)), CASE WHEN rt0.c3 THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END THEN ABS(rt0.c4) WHEN (rt0.c0 IN ()) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)), rt0.c3 COLLATE NOCASE, ((rt0.c3) NOT BETWEEN (rt0.c1) AND (x'8fec')))) AND ((CAST(rt0.c2 AS TEXT), MAX(rt0.c2), ((rt0.c3)>(rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT '0.16843458441896664', ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c4) IS TRUE))), ((rt0.c1)<(rt0.c2)) COLLATE NOCASE FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL (((x'1ce0', rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE, (+ (rt0.c2)), (((rt0.c3, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c1)) AND ((rt0.c4, rt0.c0, rt0.c3))))) AND (('1790927382', ((rt0.c4)<(x'')), (NOT ('-2002103226'))))) FROM rt0; -- 0ms;
SELECT ALL LIKELY(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))), ((((((0.7058946271975647)GLOB(rt0.c3)))OR(MIN(rt0.c2, rt0.c1))))OR(LTRIM(rt0.c4, rt0.c0))), (NULL IN ()) FROM rt0; -- 0ms;
SELECT CASE (rt0.c0 IN ())  WHEN ((((rt0.c3)OR('-566982018')))OR(rt0.c2)) THEN ((0Xffffffffa50ad3c5)OR(rt0.c2)) END FROM rt0 ORDER BY (~ (rt0.c3)) DESC, ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END)>(rt0.c2)) ASC, CAST(rt0.c1 AS REAL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT LIKE(rt0.c1, ((rt0.c2)<<('HH*7'))) FROM rt0 ORDER BY CASE WHEN (rt0.c4 IN (rt0.c4, rt0.c1)) THEN ((NULL)&(rt0.c3)) END  NULLS FIRST, SQLITE_COMPILEOPTION_GET(((rt0.c3)==(rt0.c3))) ASC  NULLS LAST, (-2.122054608E9 IN ((+ (rt0.c1)))) ASC  NULLS LAST LIMIT 1700817625 OFFSET -294667657; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c4) AND (rt0.c4 COLLATE NOCASE)), ((((rt0.c3)&(rt0.c0)))-(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c4)))), CAST(CAST(rt0.c1 AS TEXT) AS REAL) FROM rt0; -- 0ms;
SELECT ((CAST(rt0.c3 AS REAL))|('yO.gSb')), CAST(((rt0.c4) ISNULL) AS INTEGER), CAST(((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c2)))OR('1414391649'))))=((LIKELIHOOD(NULL, 0.5439025094362911)))) FROM rt0; -- 0ms;
SELECT ((((QUOTE(rt0.c1))OR(CAST('2009633389' AS BLOB))))AND(rt0.c0 COLLATE BINARY)), GROUP_CONCAT(x''), (((((rt0.c1)AND(rt0.c1))))<=((x''))) FROM rt0; -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (((0.6484732021301665)+('-814339085')) COLLATE BINARY) ORDER BY LIKELIHOOD(DISTINCT ((rt0.c1)<=(rt0.c1)), 0.4498783824651057) ASC, 0X1c477634 DESC;SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT ((((rt0.c1)&(rt0.c0)))<(CASE WHEN rt0.c2 THEN rt0.c2 END)), (- (((((((((rt0.c3)AND(rt0.c0)))AND(x'a642')))OR(rt0.c2)))OR(rt0.c0)))), NULLIF(CAST(rt0.c3 AS TEXT), (rt0.c2 IN (rt0.c2))) FROM rt0 WHERE ((NOT (0.38362855451562716 COLLATE BINARY))) ORDER BY ((((((((5.92708513E8)OR(0.16843458441896664)))AND(NULL)))OR(CAST(rt0.c4 AS BLOB))))OR(NULL)), (~ (json(rt0.c0))) ASC, CAST(((rt0.c4) NOTNULL) AS TEXT)  NULLS LAST LIMIT -566982018; -- 0ms;
SELECT DISTINCT MAX(TOTAL(((rt0.c2) IS FALSE))) FROM rt0 ORDER BY CAST(((rt0.c4) BETWEEN (x'') AND (rt0.c1)) AS NUMERIC) DESC  NULLS LAST;SELECT DISTINCT ((rt0.c0 IN ()) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))IS((x'' IN ()))) FROM rt0 WHERE (CASE (- ('434299347'))  WHEN (x'f03b' IN (NULL)) THEN 0.8400732405685709 END); -- 0ms;
SELECT RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL rt0.c3 FROM rt0 WHERE ((((-1466986039, 'rlgi()', 0.9614146696053711)) NOT BETWEEN ((LIKE('58293465', 0.9624562251599206, 'a'), UNLIKELY(DISTINCT '竈6mE(蕼KaI'), ('-1996875135' IN ()))) AND ((CAST('-2119710708' AS TEXT), ((x'911a')GLOB(NULL)), ((x'59e4') NOT BETWEEN ('0.9027025931940379') AND (-528357481)))))); -- 0ms;
SELECT ALL rt0.c3 FROM rt0; -- 0ms;
SELECT ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))OR((rt0.c2 IN (x'', rt0.c0)))), x'', CAST('-21557029' AS TEXT) FROM rt0 WHERE (((((x'' COLLATE NOCASE)OR((+ (7.44965471E8)))))OR(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST('|' AS INTEGER) FROM rt0 GROUP BY ((NULL)/(((rt0.c1)-(rt0.c4)))) LIMIT -37354725 OFFSET 600436430; -- 0ms;
SELECT ((LOWER(rt0.c4))IS(CAST(rt0.c4 AS REAL))) FROM rt0 WHERE (0.657293706406966); -- 0ms;
SELECT DISTINCT ((((((rt0.c2) NOTNULL))AND(CAST(rt0.c1 AS REAL))))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END)) FROM rt0; -- 0ms;
SELECT ALL SUM(((rt0.c1)IS(rt0.c2))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(x'1746')))AND(rt0.c0)) COLLATE BINARY COLLATE NOCASE FROM rt0 WHERE ((((((('-0.0')AND(x'3c5b')))AND(CAST(x'' AS BLOB))))AND('745123375'))); -- 0ms;
SELECT DISTINCT ((MAX(rt0.c0))LIKE(((NULL) NOT NULL))) FROM rt0 WHERE (((x'' COLLATE NOCASE)%(((0.4412268743754072) BETWEEN (0.3849907950244439) AND (x''))))); -- 0ms;
SELECT DISTINCT ((rt0.c1)!=((+ (rt0.c0)))), rt0.c3, CASE WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 END FROM rt0 LIMIT -1153954132 OFFSET -800815970; -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY rt0.c0 DESC  NULLS FIRST) FROM rt0; -- 0ms;
SELECT CASE WHEN (rt0.c0 IN ()) THEN LIKELIHOOD(-2.002103226E9, 0.5110668066285825) END FROM rt0 LIMIT -1696842220; -- 0ms;
SELECT DISTINCT (rt0.c1 COLLATE RTRIM IN (((rt0.c4)IS NOT(rt0.c0)))) FROM rt0 WHERE (((CASE 'Rg''Ve'  WHEN NULL THEN x'747c' END)%(TRIM(DISTINCT NULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)<>(rt0.c2)))GLOB(x'')) FROM rt0; -- 1ms;
SELECT ALL ((((rt0.c0)LIKE(rt0.c0))) BETWEEN (((((rt0.c2)OR(rt0.c0)))AND('-1892573390'))) AND (((rt0.c4)-(rt0.c4)))) FROM rt0 WHERE (((((('-1895527872')) NOT BETWEEN ((-1.74912537E8)) AND ((NULL))))|((((NULL, '-2118772985', 0.02141985269114033))<=((0.8149596608225356, 'Wi', 1.790927382E9)))))) GROUP BY ((((((rt0.c2)/(x'')))AND(0Xffffffffd75a2a64)))AND(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END)), ((NULL COLLATE BINARY)|(((rt0.c1) NOTNULL))), (((CASE rt0.c1  WHEN rt0.c2 THEN 0Xffffffffa1f6c933 ELSE rt0.c1 END))>=((((((((((rt0.c4)AND('')))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c4))))) HAVING (~ (CAST(NULL AS TEXT))); -- 0ms;
SELECT ALL ((rt0.c1 IN ()) IN ()), ((+ (rt0.c1)) IN ()), CAST(rt0.c1 COLLATE BINARY AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOTNULL)) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT (('-816892098')OR(0.7208220319065639)) FROM rt0 WHERE ((((NULL IN (0.050227150647445096))) NOT BETWEEN (UNLIKELY('-588016457')) AND (x'2cb0'))); -- 0ms;
SELECT ALL '', RANK() OVER (), COUNT(((('1910479061')) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) OVER (), x'', rt0.c0 COLLATE BINARY FROM rt0; -- 0ms;
SELECT ((((CAST(rt0.c2 AS BLOB))OR(((rt0.c0)>>(rt0.c0)))))OR(((rt0.c3)*(rt0.c2)))), CASE WHEN (((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c3))) THEN (NOT (rt0.c1)) WHEN (((rt0.c4))!=((rt0.c0))) THEN ((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)) WHEN rt0.c4 COLLATE NOCASE THEN (((rt0.c4, rt0.c0, rt0.c4))<=((rt0.c3, rt0.c3, rt0.c1))) END, UNLIKELY(rt0.c4), rt0.c4, SQLITE_VERSION() FROM rt0; -- 0ms;
SELECT ALL (~ (rt0.c0 COLLATE BINARY)), ((UPPER(DISTINCT rt0.c0)) BETWEEN (((rt0.c4)<=(rt0.c0))) AND (UPPER(NULL))), (rt0.c1 IN ()) COLLATE RTRIM COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT LENGTH(((rt0.c4)LIKE(rt0.c4))) FROM rt0 ORDER BY ((CASE rt0.c2  WHEN 6.48664871E8 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END) IS FALSE)  NULLS LAST; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE WHEN (- (rt0.c0)) THEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2)) WHEN rt0.c1 THEN (rt0.c1 IN ()) WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c0)/(NULL)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) OVER (), (((((rt0.c1, rt0.c4, rt0.c1))<=((rt0.c0, 0.817350388527445, rt0.c2)))) NOTNULL), (((rt0.c0 IN ()))-(CAST(NULL AS REAL))) FROM rt0; -- 1ms;
SELECT ALL ROW_NUMBER() OVER (), ((((0.5711809356159703))>((rt0.c2))) IN (((0X48f0c4e)<<(rt0.c3)))), 0.9004883058185156 FROM rt0 WHERE (((((((((CAST('2144186819' AS INTEGER))OR(((((0.8054743270098641)OR(x'')))AND(NULL)))))OR((~ (NULL)))))OR(CASE WHEN NULL THEN x'8ae20dfe' WHEN 0.4911567265577399 THEN 0Xffffffffa79d1f75 WHEN NULL THEN '?8' WHEN 0X5583a552 THEN 0.972095157966643 WHEN NULL THEN x'' ELSE x'' END)))OR((('Q*')||(x'b4ad'))))); -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE ((x'') NOTNULL)  WHEN (('-793825176') ISNULL) THEN ((((((((1.106813943E9)OR('')))OR(0.6773041875962285)))AND(NULL)))AND(0.18042449734756205)) WHEN CASE WHEN 0.9027025931940379 THEN 'f/' END THEN CAST('CZ' AS NUMERIC) WHEN (((NULL, x'7ea8525a', x'b7b4fcda'))>=((0.5581320349283487, '1439895953', 1.41660741E8))) THEN LAST_INSERT_ROWID() END); -- 0ms;
SELECT DISTINCT COUNT((+ (rt0.c4))) OVER (), ((('De' IN ())) IS FALSE), (((((rt0.c3)==(rt0.c4))))<((SUM(rt0.c4)))) FROM rt0 WHERE (((CAST(0Xffffffffe76bccb1 AS NUMERIC)) NOTNULL)) ORDER BY MAX(((NULL)>>(rt0.c0)), CAST(rt0.c1 AS BLOB))  NULLS LAST; -- 1ms;
SELECT DISTINCT (((rt0.c1 COLLATE NOCASE))=((((rt0.c4) ISNULL)))), ((((((rt0.c0)AND(rt0.c4)))AND(CAST(rt0.c1 AS TEXT))))OR(rt0.c2 COLLATE NOCASE)), CAST((('656133986') NOT NULL) AS BLOB) FROM rt0; -- 0ms;
SELECT ((NOT (rt0.c1)) IN (rt0.c2)) FROM rt0 GROUP BY (+ (((rt0.c0) BETWEEN (rt0.c4) AND (x'b641fdd4')))) HAVING (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS BLOB))) AND (('G+'))); -- 0ms;
SELECT (((((rt0.c4 IN ()))OR(LAST_INSERT_ROWID())))AND((((rt0.c4, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c2, rt0.c4))))) FROM rt0 WHERE (UNLIKELY(DISTINCT ((((x'')OR(0.9012364099557914)))AND(0X67d5e67b)))); -- 0ms;
SELECT ALL (rt0.c1 IN (((rt0.c2)GLOB(rt0.c1)))), ((CAST(rt0.c4 AS REAL)) NOT BETWEEN (CASE '592708513'  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END) AND ((rt0.c4 IN ()))), CHAR((((rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt0.c2))<((rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4))), x'', rt0.c0 COLLATE NOCASE), ((((CASE WHEN '-1266143639' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)OR(((rt0.c3)||(rt0.c3)))))OR(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END)), (((((rt0.c0) NOT NULL)))>=((rt0.c4))), ((((rt0.c4) NOT NULL)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c1 COLLATE NOCASE)), (rt0.c1 IN ()) COLLATE RTRIM FROM rt0 WHERE ((0.9027025931940379 COLLATE BINARY IN ())); -- 1ms;
SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT TRIM(CASE 'Ze'  WHEN rt0.c0 THEN rt0.c4 END, rt0.c2 COLLATE NOCASE) FROM rt0 WHERE ((('M9' COLLATE NOCASE)-('267522196' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (~ (x'')) FROM rt0 LIMIT -1567039325; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (rt0.c0) AND (rt0.c0 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)>(rt0.c4))  WHEN ((rt0.c0)%(rt0.c1)) THEN rt0.c0 WHEN ((rt0.c0)/(rt0.c4)) THEN (+ (rt0.c2)) WHEN ('颏z' IN (rt0.c1)) THEN ((NULL)>>(rt0.c0)) ELSE (rt0.c0 IN ()) END FROM rt0 GROUP BY CAST((x'' IN ()) AS NUMERIC) HAVING (- ((- (rt0.c0)))); -- 0ms;
SELECT DISTINCT ((AVG(rt0.c1)) IS TRUE) FROM rt0 GROUP BY (((+ (rt0.c2))) IS FALSE), rt0.c0, json_remove(rt0.c4 COLLATE NOCASE, rt0.c1) ORDER BY (((rt0.c3)) NOT BETWEEN ((((rt0.c3)IS NOT(rt0.c1)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ASC, (NOT ((rt0.c0 IN ())))  NULLS FIRST, ((((rt0.c1)IS(rt0.c2)))%(((x'')%(rt0.c3)))) ASC;SELECT ((rt0.c2)<=((((rt0.c0))<((rt0.c2))))), ((rt0.c2)>(LIKE(rt0.c1, rt0.c3, '0'))), (((x''))>((UPPER('5i0n}R')))) FROM rt0 WHERE ((+ (((((0.5103422198701574)AND(x'01af')))AND(NULL))))); -- 0ms;
SELECT ALL CAST((((rt0.c1, -2.117225715E9, rt0.c3))>((rt0.c2, NULL, '㍉W^TZ嫇UL*'))) AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL ((((((((CAST('-144647288' AS REAL))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))AND(COUNT(*))))AND(((rt0.c1) IS FALSE))))OR(CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN '-671423216' THEN '1' ELSE rt0.c3 END)), NTILE(((((rt0.c3)>=(rt0.c2)))<<(TRIM(rt0.c0)))) OVER (), ((COALESCE(rt0.c2, rt0.c0)) BETWEEN (rt0.c3) AND ((rt0.c2 IN ()))) FROM rt0 WHERE (NULL);SELECT DISTINCT CASE WHEN ((0Xfffffffff68db3c6) NOTNULL) THEN TYPEOF(rt0.c1) ELSE ((rt0.c4)&(rt0.c3)) END FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c4)!=(rt0.c1))) NOTNULL) FROM rt0 WHERE (rtreenode(NULL, NULL) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT ALL ((((((((MAX(0.5525466086237535))AND(CAST(rt0.c3 AS INTEGER))))OR(((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN -375737789 WHEN rt0.c1 THEN NULL ELSE rt0.c4 END)) FROM rt0 WHERE ((((('fD&aCX\n鸽')-('-297030029')))|(CASE '473932987'  WHEN 'M' THEN 1989695794 WHEN NULL THEN '0.07580122228450281' WHEN 0.9152729516198662 THEN NULL END))); -- 0ms;
SELECT DISTINCT CHAR(CAST(rt0.c0 AS REAL)) FROM rt0 WHERE (UPPER(((((((((0.10560028440138614)AND('c#')))OR(0Xfffffffff30f26df)))AND(NULL)))OR(-0.0)))); -- 0ms;
SELECT ((NULL)*((((rt0.c3))<((rt0.c3))))) FROM rt0; -- 0ms;
SELECT ((TRIM(rt0.c4, rt0.c2))<=((+ (rt0.c4)))), ((((((rt0.c0)%(rt0.c0)))AND(((rt0.c0) NOT NULL))))OR(((468822587) NOT BETWEEN (rt0.c3) AND (rt0.c0)))), COUNT(((rt0.c0) ISNULL)) FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN NULL COLLATE RTRIM THEN ((((((((NULL)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)) WHEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) WHEN UNLIKELY(DISTINCT rt0.c2) THEN rt0.c4 ELSE rt0.c0 END FROM rt0 GROUP BY ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)))OR(((rt0.c3) IS FALSE))) HAVING (CASE 0.39807972588801366  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN '-222178196' THEN rt0.c0 WHEN rt0.c3 THEN 0.20428588091069566 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c4 ELSE rt0.c1 END IN ()); -- 0ms;
SELECT ALL TYPEOF((0.9872217645814876 IN ())) FROM rt0; -- 0ms;
SELECT ALL CASE ((rt0.c1)>>(rt0.c3))  WHEN 1.546522471E9 THEN (rt0.c1 IN ()) END FROM rt0 WHERE (((((x'984c')/('-2048432382'))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN (((((rt0.c4, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c3, rt0.c3, rt0.c2))), CAST(rt0.c1 AS BLOB), rt0.c1)) AND (((NOT ('-133472174')), ((rt0.c1)<=(rt0.c1)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) FROM rt0 WHERE (IFNULL((- (0X2fb23fd1)), ((0.05622408469769724)>>(0.20984710971134612)))); -- 0ms;
SELECT CASE rt0.c2  WHEN (NOT (rt0.c3)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c0)+(rt0.c0)) THEN (((rt0.c0))>((rt0.c2))) WHEN CASE WHEN rt0.c0 THEN 0.2851729309309209 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END THEN HEX(rt0.c1) ELSE CAST(rt0.c3 AS NUMERIC) END FROM rt0 WHERE (CAST((((NULL)) NOT BETWEEN ((x'')) AND (('uO㜾'))) AS INTEGER)) LIMIT 912854891 OFFSET 1117250452; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0)))&((- (rt0.c4)))) FROM rt0; -- 0ms;
SELECT ALL (((((((rt0.c1))>((rt0.c4))))OR(((-391866730) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))AND('kk,')), ((((((0.07580122228450281) BETWEEN (rt0.c0) AND (rt0.c4)))AND(((rt0.c4)<(rt0.c4)))))AND((- (NULL)))), TYPEOF(((0xffffffff93abc7ec) IS TRUE)) FROM rt0 GROUP BY ((((rt0.c0)=(rt0.c0))) NOT NULL), ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) IN ()), ((((((0xffffffff9c780fe5)OR(rt0.c0)))OR('1586388105')))IS NOT((NOT (rt0.c4)))) HAVING (((((((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(NULL)))AND(rt0.c4)) IN ()) ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN x'9223' WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END) ISNULL) DESC; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)<<(rt0.c2)))OR(COUNT(rt0.c3))))AND(CASE WHEN rt0.c4 THEN rt0.c0 END)))AND((NOT (rt0.c3)))))AND(((rt0.c2)+(x'')))) FROM rt0 WHERE ((+ (((('802784085', '-793825176', NULL, x'', x'0a0d'))<(('''7x o[?', -37114914, x'', '1742071419', 0.4159565304264795)))))) GROUP BY ((((((((((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))OR((0.13453094615405237 IN ()))))OR((rt0.c3 IN (rt0.c0, rt0.c1)))))OR(rt0.c2)))OR(((rt0.c4) IS FALSE))), HEX(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN 1.9524983E7 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END), CASE WHEN (((rt0.c2))!=((rt0.c0))) THEN (NOT (rt0.c3)) ELSE ((rt0.c1) IS FALSE) END; -- 0ms;
SELECT ALL ((((((rt0.c1)&(rt0.c0)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(x'')) FROM rt0; -- 0ms;
SELECT NTH_VALUE(CASE WHEN (+ ('0.07849713692156712')) THEN (rt0.c2 IN ()) END, (((((((((-1637520554)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c2)) IN ((- (x'')), (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) OVER () FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND ((ABS(DISTINCT x'978a')))) FROM rt0 WHERE (((CAST(653355269 AS NUMERIC))<(((('495638857', -1010811377, 0xffffffffb0a89cb8))>(('886884361', x'', x'02f4')))))); -- 0ms;
SELECT CAST(((rt0.c1)IS(rt0.c3)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (x''))) AND (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))AND(0Xffffffff88aa5446)))AND(rt0.c1)))) FROM rt0; -- 1ms;
