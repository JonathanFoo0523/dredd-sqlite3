-- Time: 2024/06/07 20:05:37
-- Database: database69
-- Database version: 3.40.0
-- seed value: 2710806169
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
PRAGMA busy_timeout = 0; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56960'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0, c0)=(NULL, 0.8684500561581924, 0.8684500561581924) WHERE (NOT (NULL)); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0='-1221049715', c0=x''; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(0.8727313232555766); -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 862071755);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '25061'); -- 1ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2137641890); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0='1780408616' WHERE vt0.c0; -- 0ms;
UPDATE vt0 SET (c0, c0)=(x'', '862071755') WHERE (CAST(vt0.c0 AS BLOB) IN ()); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE vt0 SET c0=-137284008; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(1744738171) WHERE TRIM(DISTINCT vt0.c0) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'4025' WHERE vt0.c0 COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15379'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1725'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-137284008'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0X145abd79) WHERE (- ((- (vt0.c0)))); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0x7525078f, c0=x''; -- 1ms;
UPDATE OR REPLACE rt0 SET (c1)=(NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1666794273); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1584870670); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=(-137284008); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.09261848642392789, ''); -- 1ms;
UPDATE vt0 SET (c0, c0)=(-1021645088, x'') WHERE 0.431577455072779; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-219594614 WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))||((((vt0.c0)) NOT BETWEEN ((0X7fffffffffffffff)) AND ((vt0.c0))))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 792976487);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1492815865); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 792976487);\n; -- 0ms;
DELETE FROM vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, 9.622232993626856E-4) WHERE vt0.c0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('1965361039'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1037630482); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 714466669); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='', c0=951368719; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60093'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0.8861418863188194); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=(NULL, x'7663'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=1965361039 WHERE ((CAST(vt0.c0 AS BLOB))&(((vt0.c0)-(vt0.c0)))); -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR REPLACE vt0 SET c0='_ﮜdHx!t[s', c0=''; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('뵹*O'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT '뵹*O' FROM vt0 WHERE (CAST(('1657556800' IN (x'2d75', '-1775633262')) AS BLOB)); -- 0ms;
SELECT COUNT(((vt0.c0) NOTNULL)), CAST(CAST(vt0.c0 AS REAL) AS TEXT), ((~ (vt0.c0)) IN ()) FROM vt0 WHERE (LOWER(((NULL) NOT BETWEEN (0x38b4bc0f) AND ('')))); -- 0ms;
SELECT ALL ((((vt0.c0)<>(vt0.c0)))>(ABS(vt0.c0))), SQLITE_COMPILEOPTION_GET(vt0.c0) COLLATE RTRIM, COALESCE(LAST_INSERT_ROWID(), vt0.c0 COLLATE BINARY), ((NOT (vt0.c0)) IN ()), AVG(((vt0.c0) IS FALSE)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)|(vt0.c0)) COLLATE BINARY, ((vt0.c0) NOTNULL), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE 'sq*h'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<(((vt0.c0) NOT BETWEEN ('253977675') AND (vt0.c0)))), (SUM(vt0.c0) IN (((x'') BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM vt0 WHERE (((NULL)IS NOT('-137284008')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT AVG(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) FILTER(WHERE CAST(CAST(NULL AS NUMERIC) AS BLOB)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS NUMERIC), CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7856503027011138 WHEN vt0.c0 THEN vt0.c0 END AS REAL), ((MAX(vt0.c0))OR(x'' COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL (~ ((((vt0.c0))>=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS BLOB) FROM vt0 WHERE (((((0Xffffffffc31aeee0) NOTNULL))LIKE(x''))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '', vt0.c0))) ELSE ((((-785548022)AND(vt0.c0)))OR(vt0.c0)) END  NULLS FIRST, (((((vt0.c0)IS NOT(vt0.c0)), HEX(DISTINCT vt0.c0), ((((vt0.c0)AND('{o')))OR(vt0.c0))))==((vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)&(vt0.c0))) OVER (), ((((((((UPPER(vt0.c0))AND(((0.7856503027011138) IS TRUE))))OR(MAX(vt0.c0))))OR(AVG(vt0.c0))))AND(((vt0.c0)|(vt0.c0)))), (((vt0.c0 IN ())) NOTNULL) FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))-(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC; -- 0ms;
SELECT ALL CASE WHEN (- (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(0.07473091992220093)) WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 3.41491065E8))) WHEN (('-1079440097')/(vt0.c0)) THEN CAST(0Xffffffffc7a72157 AS REAL) ELSE CASE WHEN vt0.c0 THEN '' END END, CASE WHEN ((vt0.c0)/(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (('') IS FALSE) THEN ABS(vt0.c0) WHEN NULL THEN ((vt0.c0) ISNULL) ELSE ((((vt0.c0)AND(vt0.c0)))AND(x'')) END, (((vt0.c0 COLLATE BINARY))<>((((vt0.c0)<(vt0.c0))))) FROM vt0; -- 0ms;
SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)IS(NULL)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), SUM(vt0.c0), (~ (NULL))))>(((- (vt0.c0)), vt0.c0 COLLATE BINARY, (~ (vt0.c0)), (((vt0.c0, x'', vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))))), ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (CASE x'f1e1'  WHEN vt0.c0 THEN vt0.c0 END) AND ((vt0.c0 IN ()))), LAG(vt0.c0, (((+ (vt0.c0)))||(((0.07473091992220093)-(vt0.c0)))), ((CAST(vt0.c0 AS BLOB)) NOTNULL)) OVER () FROM vt0; -- 0ms;
SELECT vt0.c0, ((((vt0.c0) ISNULL))AND(((vt0.c0) NOTNULL))), (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((((vt0.c0) IS TRUE)))), CASE WHEN vt0.c0 THEN ((('1', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) ELSE ((vt0.c0)||(vt0.c0)) END, (((vt0.c0))>=((vt0.c0))) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) FROM vt0 WHERE (((((x'65cb')IS(x'016a')))*((('') BETWEEN ('\k4v&c#^') AND (134301197))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL), ((951368719) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, TOTAL(UNICODE(vt0.c0)) OVER () FROM vt0; -- 1ms;
SELECT ALL ((COUNT(x''))LIKE(MAX(0.8861418863188194))), GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)) OVER ( GROUPS  CURRENT ROW), LEAD(CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC), PRINTF(((vt0.c0)GLOB(vt0.c0))), ((CAST(vt0.c0 AS NUMERIC))IS NOT(((vt0.c0) IS TRUE)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)AND(vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT CHAR((NOT (vt0.c0))) FROM vt0 WHERE (((((((0x145abd79)OR(0X29bc6620)))OR(NULL)))<=((((0X7525078f)) BETWEEN ((x'')) AND (('-137284008')))))); -- 0ms;
SELECT DISTINCT 0.42577558770852064, (((- (vt0.c0)))=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL), ((vt0.c0) IS FALSE), ((vt0.c0)IS NOT(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)-(vt0.c0)))) AND ((((vt0.c0)<>(vt0.c0)), (+ (vt0.c0)), IFNULL(vt0.c0, vt0.c0), vt0.c0 COLLATE BINARY, LIKELY(vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT ((vt0.c0) NOTNULL) COLLATE NOCASE FROM vt0 WHERE ((((NOT ('878933757')))LIKE(((x'') NOT BETWEEN ('-1021645088') AND (x''))))) ORDER BY (((vt0.c0)) BETWEEN (('-1221049715')) AND ((x'5368')))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((RTRIM(vt0.c0), CAST(vt0.c0 AS NUMERIC), vt0.c0))>=((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0, ((vt0.c0)<(vt0.c0))))), ((AVG(vt0.c0)) BETWEEN (0.3372340864385698) AND (vt0.c0)), CAST(((vt0.c0) NOTNULL) AS BLOB) FROM vt0; -- 0ms;
SELECT vt0.c0, COUNT(*) OVER (), ((((vt0.c0) NOT NULL))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT LENGTH(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 WHERE (((((0.304518264535924))<(('-1260585592'))) IN ())) ORDER BY CASE ((vt0.c0)*(vt0.c0))  WHEN UNICODE(vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN COALESCE(0.3086044552498459, vt0.c0, vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT NULL) THEN 878933757 WHEN x'c8e2' COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)|(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-1673532711' END WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN -1.775633262E9 ELSE ((x'') NOT NULL) END, ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)/(vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT NULL) FROM vt0 WHERE ((('134301197') NOT NULL)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT (- ((((0.8091880540766742))!=((vt0.c0))))), (('862071755')=(UNLIKELY(vt0.c0))), ((load_extension(0.16145654651621044, vt0.c0)) ISNULL), 1e500 COLLATE NOCASE, SQLITE_VERSION() COLLATE BINARY FROM vt0 WHERE (x''); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (LOWER(vt0.c0) IN (vt0.c0, (((vt0.c0))<((vt0.c0))))) FROM vt0 WHERE ((((0.5985395273115615)) BETWEEN ((((x'') BETWEEN (0.37590036893143397) AND ('-1921965794')))) AND (('0.3086044552498459')))) ORDER BY ((HEX(vt0.c0)) BETWEEN (((vt0.c0) NOT NULL)) AND (((0.4019314336877259) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((- (vt0.c0)))|(x'5040')), ((((vt0.c0) NOTNULL)) NOT BETWEEN ((0.45405551657734833 IN (vt0.c0))) AND ((((vt0.c0, x'63a6', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), ((((((((RTRIM(vt0.c0))OR((vt0.c0 IN (vt0.c0)))))AND(((NULL) NOT NULL))))AND(((vt0.c0)OR(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT 0.6105353399329133, 0.3159504753154876)) BETWEEN (('-1921965794' IN ())) AND (('\rKn' IN ('#Sp#g'))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (TYPEOF(0xffffffff92d341f2)))); -- 0ms;
SELECT ALL COUNT(*) OVER (), (NOT (vt0.c0)) COLLATE NOCASE, CASE (((vt0.c0, x'c9b1', vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))  WHEN UPPER(DISTINCT vt0.c0) THEN 'rS[A' ELSE (+ (vt0.c0)) END FROM vt0 LIMIT -649923809 OFFSET 671071170; -- 0ms;
SELECT vt0.c0, (- ((vt0.c0 IN ()))), LAG(((UPPER(DISTINCT vt0.c0)) BETWEEN (x'19a6') AND (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('MI1BnLQv')))OR(vt0.c0)))OR(vt0.c0)))), CASE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0))<((vt0.c0))) WHEN ((vt0.c0)>(vt0.c0)) THEN (~ (0.5606965701140062)) WHEN CAST(vt0.c0 AS BLOB) THEN (~ (vt0.c0)) END, NULL) OVER () FROM vt0 WHERE ((((((477942573, '꟨bdWO', '-1235546908')) BETWEEN ((x'', 1566163900, NULL)) AND (('1', NULL, x''))))*((NULL IN ())))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS TEXT) IN ()), CASE CAST(vt0.c0 AS BLOB)  WHEN (+ (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) END, COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM vt0 WHERE ((((((('-1294098630')IS(NULL)))OR(TRIM(DISTINCT '1621072958', 0.8648869917261331))))OR(((('-2122587304')) NOT BETWEEN ((NULL)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT ((vt0.c0)&(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((NOT ((((''))!=((NULL)))))); -- 0ms;
SELECT COUNT(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) FROM vt0 GROUP BY LOWER(DISTINCT vt0.c0 COLLATE BINARY) HAVING NULLIF(((vt0.c0) IS FALSE), ((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))); -- 0ms;
SELECT DISTINCT SUBSTR(vt0.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))<((NULL, '862071755', vt0.c0)))), (((('19048424')AND(MAX(vt0.c0))))AND(CASE vt0.c0  WHEN '-2103367837' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((TOTAL(vt0.c0)) IS TRUE), (((vt0.c0))<((vt0.c0))) COLLATE NOCASE, 0.37590036893143397 FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))<>((vt0.c0))), CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)|(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (('-255768360') NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN GROUP_CONCAT(0.619996757574901) THEN (NOT (vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, (((vt0.c0)<>(vt0.c0)) IN ()), CAST(vt0.c0 COLLATE RTRIM AS BLOB), AVG(((vt0.c0) NOT NULL)) FROM vt0 NOT INDEXED GROUP BY ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) ISNULL), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS NUMERIC))))AND(0.9348609103296732)), (NOT ('c')) HAVING (((x'', ((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))OR(vt0.c0)), (('-1921965794')/(vt0.c0))))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c0))) LIMIT -1909942158; -- 0ms;
SELECT DISTINCT (((('') IS TRUE))/(x'0fe1')) FROM vt0 WHERE ((((+ ('19048424'))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>=(vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS NOT(vt0.c0)))/(vt0.c0)) FROM vt0 WHERE ((((('_ﮜDHX!T[S') BETWEEN (x'') AND (x'')))GLOB('792976487' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((vt0.c0) NOT NULL), ((((((((((((0.10858307605921758)AND('-1673532711')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE ((((((((((((((('#4H6[ήkx')IS NOT('-1260585592')))OR(CAST('7ട骬ﮜ' AS TEXT))))OR(CASE WHEN 420973342 THEN 0.8925034334604246 ELSE '1279897706' END)))AND((('822450860')IS NOT(NULL)))))AND(CASE 'S'  WHEN 0.37590036893143397 THEN x'' ELSE '-1673532711' END)))OR(1780408616 COLLATE BINARY)))AND(((0.3086044552498459)AND(NULL))))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((COUNT(vt0.c0))) AND ((vt0.c0))), vt0.c0, vt0.c0 FROM vt0 WHERE (COALESCE((0xffffffffb03ceabf IN (x'2344')), ((('}Kd'))<=(('-649135204'))), ((0.8944766877680216)|(0.3086044552498459)), (~ (-1775633262)))) LIMIT -662272559 OFFSET 341491065; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0)<(vt0.c0))), SUM(CAST(vt0.c0 AS REAL)) COLLATE NOCASE, vt0.c0 FROM vt0 WHERE (((('', x'', NULL)) NOT BETWEEN (((NOT (x'')), CAST(NULL AS NUMERIC), 0.301446294889097 COLLATE NOCASE)) AND (((~ ('')), 0.301446294889097, ((NULL)IS(0.9314302992007409)))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) IS FALSE) FROM vt0 WHERE ((((1966602522)) BETWEEN ((json_quote('1279897706'))) AND ((((0.0422070583372115)%(x'')))))) ORDER BY ((((((vt0.c0) NOT NULL))AND(vt0.c0)))OR('1[1,<M7')) LIMIT -785548022; -- 0ms;
SELECT DISTINCT ((UPPER(0.8542167416830077))<>(vt0.c0)) FROM vt0; -- 0ms;
SELECT (vt0.c0 IN (vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)&(vt0.c0)) COLLATE BINARY) FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0)=(vt0.c0))))); -- 0ms;
SELECT LIKELY(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((((((((((('1966602522') ISNULL))AND((NOT ('134301197')))))AND(((0.674258155522901) BETWEEN (0.6216064247813674) AND (NULL)))))OR(('1566163900' IN (NULL, 0X30e73dd3, NULL, -1.37284008E8)))))AND((((0.6105353399329133)) BETWEEN ((NULL)) AND (('\k4v&c#^')))))); -- 3ms;
SELECT DISTINCT ((((((vt0.c0)==(vt0.c0)))AND(((vt0.c0)AND(vt0.c0)))))AND((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE ((- (0.2951682426785952)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN (-1673532711)))) FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), 0xfffffffff19d1855, CAST(vt0.c0 AS INTEGER) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT CAST(LOWER(DISTINCT vt0.c0) AS REAL), ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (NULLIF(DISTINCT vt0.c0, vt0.c0))), ((vt0.c0)&(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((((NULL))<>((0Xffffffffc30fc219)))) NOT BETWEEN ((+ ('1103383031'))) AND (x''))); -- 0ms;
SELECT DISTINCT (LIKELIHOOD(vt0.c0, 0.10657426640357015) IN ('(RO_#]b', ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 1ms;
SELECT (- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((((((('-1221049715')OR(x'555256d1')))AND(NULL)))LIKE(CASE NULL  WHEN NULL THEN NULL WHEN 0.431577455072779 THEN 0.7837760072145762 WHEN NULL THEN x'' END))) LIMIT 1807187514; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((vt0.c0)>>(((vt0.c0) ISNULL)))) OVER () FROM vt0 WHERE ('Y/沀UIJ[['); -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0)|(vt0.c0))) FILTER(WHERE (((+ (0xffffffffd2a92ba8))) NOT BETWEEN ((('1298704806')>=(vt0.c0))) AND (((vt0.c0)==(vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS REAL) FROM vt0 WHERE (CAST(((x'52ea')*(NULL)) AS TEXT)); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(vt0.c0)) FROM vt0; -- 0ms;
SELECT RANK() OVER () FROM vt0; -- 1ms;
SELECT NULL FROM vt0 ORDER BY (CHANGES() IN ())  NULLS LAST, ((load_extension(vt0.c0, vt0.c0)) NOT NULL)  NULLS LAST;SELECT ALL TRIM(DISTINCT GROUP_CONCAT(vt0.c0), LIKELY(DISTINCT x'6dae')), SUM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), ((((((vt0.c0)>(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))AND(AVG(vt0.c0))) FROM vt0 WHERE (((CAST(NULL AS REAL)) BETWEEN (((0.3898233734051816) IS TRUE)) AND ((('-1831648782')>>(NULL))))) LIMIT 1234235052 OFFSET -1235546908; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS NUMERIC) AS REAL) FROM vt0; -- 0ms;
SELECT DENSE_RANK() OVER (), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (vt0.c0) AND (0.29001989450877974)) FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)+(vt0.c0))) NOT BETWEEN (SUBSTR(vt0.c0, vt0.c0)) AND (((vt0.c0)<(vt0.c0)))) FROM vt0 WHERE (9.622232993626856E-4) ORDER BY vt0.c0 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(SUM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((CAST(NULL AS TEXT))AND(((vt0.c0)IS NOT(vt0.c0)))))OR((('7ട骬ﮜ')<=(vt0.c0)))))AND(LIKE(vt0.c0, vt0.c0))))OR(vt0.c0 COLLATE BINARY)), NULL FROM vt0 ORDER BY ((((vt0.c0 IN ())))!=((vt0.c0 COLLATE NOCASE))) ASC, CAST(TYPEOF(DISTINCT vt0.c0) AS NUMERIC) ASC  NULLS LAST, (((- (vt0.c0))) NOT BETWEEN (((vt0.c0)+(vt0.c0))) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST LIMIT -835109386 OFFSET -786538035;SELECT DISTINCT (((vt0.c0 COLLATE NOCASE))<>((vt0.c0))), ROW_NUMBER() OVER (), CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)<<(vt0.c0)) ELSE ((vt0.c0) NOTNULL) END, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0)))OR(TOTAL(vt0.c0))))OR(x'')))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), vt0.c0, CASE ((vt0.c0) NOTNULL)  WHEN ((x'')<=(vt0.c0)) THEN MIN(vt0.c0) WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN '-1909942158' THEN '' WHEN ((vt0.c0)|('1780408616')) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN ('/&v骬') AND (vt0.c0)) THEN GROUP_CONCAT(vt0.c0) END, ((((((vt0.c0)OR(0.09261848642392789)))AND(vt0.c0)))>=((vt0.c0 IN (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(HEX(DISTINCT vt0.c0)), ((((vt0.c0) NOTNULL))%(vt0.c0)), GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER (), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))|('9.622232993626856E-4')), ((((((((vt0.c0)OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR((~ (vt0.c0)))))AND(CAST(vt0.c0 AS TEXT))))AND((vt0.c0 IN ()))) FROM vt0 GROUP BY NULLIF(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'7e06' END, (((vt0.c0))<>((vt0.c0)))); -- 1ms;
SELECT DISTINCT COUNT(vt0.c0) OVER () FROM vt0 WHERE (((0.8542167416830077) NOT BETWEEN (0.7503024504886692 COLLATE NOCASE) AND ((('') NOT BETWEEN (-2.19594614E8) AND (x'3e2c88c6'))))); -- 0ms;
SELECT DISTINCT rtreenode(COUNT(NULL), TOTAL(vt0.c0)) FROM vt0 WHERE (((((((((CAST(x'' AS REAL))AND(((0xffffffff817be358) NOT BETWEEN (0.5379241399970992) AND (NULL)))))OR(0xffffffff98319421 COLLATE NOCASE)))OR(((NULL) IS FALSE))))OR((+ (NULL))))) GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0 COLLATE NOCASE)))AND(TOTAL(vt0.c0))) FROM vt0 WHERE (x'b4cf') GROUP BY vt0.c0, (- (NULL COLLATE NOCASE)), (- (vt0.c0 COLLATE BINARY)) HAVING ((vt0.c0 COLLATE RTRIM)AND((NOT (vt0.c0)))); -- 0ms;
SELECT CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.5621293836995669)) WHEN ((vt0.c0)<('c')) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0)>>(vt0.c0)) END, AVG(CASE WHEN vt0.c0 THEN vt0.c0 END), CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) FROM vt0 WHERE (CAST(((0.001476129709288898) IS FALSE) AS TEXT)); -- 0ms;
SELECT CAST(((vt0.c0) NOTNULL) AS NUMERIC), json_valid('c%Ey'), 0Xffffffffb452858d FROM vt0; -- 0ms;
SELECT DISTINCT LTRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), vt0.c0 FROM vt0 WHERE ((- (CAST(0x30e73dd3 AS BLOB)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)<(vt0.c0)) THEN (NOT (vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0; -- 0ms;
SELECT ALL ((rtreenode(vt0.c0, vt0.c0))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), CAST((vt0.c0 IN (vt0.c0)) AS BLOB), ((CAST(vt0.c0 AS TEXT))LIKE(AVG(x''))) FROM vt0 WHERE (((('-1294098630', -8.5825413E8, 1469010098)) NOT BETWEEN (((((x'4a65')) BETWEEN ((3.41491065E8)) AND ((1.5661639E9))), CAST(x'' AS REAL), ((NULL)<=(x'')))) AND ((TRIM(0X346376fd), ('3ᓎ]lZ7-' IN ()), ((NULL) NOTNULL))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=((('H]~Q')>(vt0.c0)))) DESC; -- 0ms;
SELECT MAX((~ (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)>>((('') ISNULL))) FROM vt0 LIMIT -1260585592; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) AND ((vt0.c0))) FROM vt0 WHERE (((((NULL) NOT NULL))&(((x'') BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0) IS FALSE)) OVER (), ((vt0.c0 IN ()) IN ()), CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC) FROM vt0 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (((-1338185025) BETWEEN ('4a&2>+') AND (NULL))) AND (CAST(0.47030019175896765 AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT (((('820461011')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ((((x''))<=((vt0.c0))))), (~ (((vt0.c0) BETWEEN (vt0.c0) AND (0.8341478965768618)))), (NOT (NULL)) FROM vt0; -- 0ms;
SELECT (((~ (vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5101286278291801 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)) FROM vt0 ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN ()) LIMIT -1781689841 OFFSET 134301197; -- 1ms;
SELECT DISTINCT vt0.c0, TYPEOF(x'225a'), RANK() OVER () FROM vt0 GROUP BY (~ ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE RTRIM  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c0 IN ()) END FROM vt0; -- 0ms;
SELECT ALL CAST(NULL COLLATE RTRIM AS INTEGER) FROM vt0 WHERE (((('-1910399309') ISNULL) IN (CASE WHEN 0.0868131541215994 THEN 1.780408616E9 END))); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))  NULLS FIRST; -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE BINARY AS TEXT) FROM vt0 WHERE ((((x'') NOT BETWEEN (NULL) AND ('134301197')) IN ())); -- 0ms;
SELECT NTILE(CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)&(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 COLLATE NOCASE END) OVER (), TRIM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), CAST(((vt0.c0) NOTNULL) AS NUMERIC) FROM vt0 WHERE ((((((NULL)>('1206743041')), CASE 0.048707182685344796  WHEN 'rt' THEN NULL END, CASE WHEN x'' THEN 0.6216064247813674 END))=((SQLITE_SOURCE_ID(), (((NULL, 0.677201178109448, '-662272559')) NOT BETWEEN ((x'', NULL, 0.34488976700575114)) AND ((0.6277170880715834, x'c5e7', 'I\r''mdn''}'))), (('')LIKE(0.17767292227593745)))))); -- 0ms;
SELECT DISTINCT ((MAX(vt0.c0)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (HEX(vt0.c0))), (((vt0.c0 IN (vt0.c0, vt0.c0))) IS TRUE), (+ (('Y~' IN ()))), LOWER(DISTINCT '2147177629') COLLATE BINARY, (+ (CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (((((~ ('佀N'))))<(((('') BETWEEN (0.10538500562001007) AND ('-1775633262')))))); -- 0ms;
SELECT ALL (NULLIF(DISTINCT vt0.c0, vt0.c0) IN ()) FROM vt0 LIMIT -669196950; -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE RTRIM AS NUMERIC), MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (-1.831648782E9))), ((((((vt0.c0)<(vt0.c0)))AND(vt0.c0 COLLATE RTRIM)))OR((~ (vt0.c0)))) FROM vt0 LIMIT 1566163900; -- 0ms;
SELECT DISTINCT (COUNT(vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((((((((x'f587989e')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY, DENSE_RANK() OVER (), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(0.29001989450877974)) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN TOTAL('-124746320') THEN (vt0.c0 IN ()) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((CAST(vt0.c0 AS REAL))|(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) OVER (), '', ((0.47800437131716333)+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0) IS FALSE) COLLATE BINARY, (vt0.c0 IN (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (CAST(0xffffffff9b922f9f AS TEXT)) UNION SELECT CAST(CAST(vt0.c0 AS TEXT) AS REAL), MAX((vt0.c0 IN ())), SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), CAST('56016669' AS REAL) COLLATE NOCASE, IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, UPPER(vt0.c0)) FROM vt0 GROUP BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS TRUE) END, ((((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))GLOB(((0.7676090721818297)<<(vt0.c0)))), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS(((vt0.c0) IS TRUE))), ((((vt0.c0)AND(vt0.c0))) BETWEEN (0.5052621249690286) AND (((vt0.c0)<=(vt0.c0)))), ((vt0.c0) NOTNULL); -- 0ms;
SELECT ALL COUNT(((((((((x'5d35040f')AND(vt0.c0)))OR('H\1\rdNO')))OR(vt0.c0)))AND(vt0.c0))) FROM vt0 WHERE (x''); -- 0ms;
SELECT LAG((((NOT (vt0.c0)))&(((vt0.c0)&(vt0.c0)))), CAST(-1.338185025E9 AS INTEGER), (((- (vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) OVER ( ROWS (((((vt0.c0, vt0.c0, vt0.c0, x'b1c8', 1633424958)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL) PRECEDING), vt0.c0, ((((((((CAST(vt0.c0 AS REAL))OR(((vt0.c0) ISNULL))))OR(((vt0.c0) IS TRUE))))OR(((vt0.c0)*(vt0.c0)))))AND('')) FROM vt0; -- 0ms;
SELECT DISTINCT x'a0db' FROM vt0; -- 0ms;
SELECT MIN(COUNT(*)), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), TRIM(CAST(vt0.c0 AS TEXT)) FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c0))) BETWEEN (vt0.c0) AND ((vt0.c0 IN (vt0.c0))))  NULLS LAST, ((((vt0.c0)=(vt0.c0))) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST;SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT NTILE(((vt0.c0)||(vt0.c0)) COLLATE NOCASE) OVER () FROM vt0 GROUP BY ((((((((((((((vt0.c0) ISNULL))AND((+ (vt0.c0)))))OR(((vt0.c0)<<(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0))<((vt0.c0))))))OR(x'')))OR(CAST(vt0.c0 AS NUMERIC))), CAST(vt0.c0 AS NUMERIC), ((CAST(vt0.c0 AS BLOB))IS(vt0.c0 COLLATE NOCASE)) HAVING (((~ (0.96887293150352)))+(((vt0.c0) ISNULL))) LIMIT -387581510;SELECT DISTINCT LTRIM('') FROM vt0 WHERE ((((((((2147177629)OR('383316199')))OR(NULL))))>((0.40479973183886564)))); -- 0ms;
SELECT ALL (json_extract(vt0.c0, vt0.c0) IN ()) FROM vt0 LIMIT -1858295604; -- 0ms;
SELECT ALL TYPEOF(DISTINCT GROUP_CONCAT(0.9270616532512674)) FROM vt0; -- 1ms;
SELECT CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE, (((vt0.c0 IN (vt0.c0))) IS FALSE), vt0.c0 FROM vt0 WHERE (((((((('1493245014')) NOT BETWEEN (('56016669')) AND ((NULL))))AND((('-1355565800') NOT BETWEEN (NULL) AND (0.7897366518923692)))))AND(((1624831973)>=(-516754877))))) LIMIT 253977675 OFFSET -1785775924; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS INTEGER) FROM vt0 WHERE ((~ ('1807187514' COLLATE NOCASE))); -- 0ms;
SELECT ALL (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), COUNT(*), CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN '_ﮜDHX!T[S' ELSE AVG(vt0.c0) END FROM vt0 GROUP BY IFNULL(DISTINCT '^', vt0.c0) HAVING json_insert(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE;SELECT DISTINCT ((((vt0.c0)%(vt0.c0))) NOT BETWEEN ((- (vt0.c0))) AND (AVG(vt0.c0))), CAST(((((vt0.c0)AND('H]~Q')))AND(vt0.c0)) AS TEXT), CAST(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT) FROM vt0 WHERE (((CAST('2044764702' AS TEXT)) IS FALSE)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)|(vt0.c0))) FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))>(vt0.c0)) DESC  NULLS FIRST; -- 0ms;
SELECT (((((vt0.c0)<>(vt0.c0))))!=((((x'') IS FALSE)))) FROM vt0 WHERE ((((0.301446294889097, ((0.8308643782022392) ISNULL), -1294098630, x'cec9', LOWER(0.6216064247813674)))==(('436697528' COLLATE BINARY, x'', 0.5808070821813085 COLLATE BINARY, (('2147177629')*(x'')), (((('')AND(0Xffffffffb452858d)))AND('C')))))); -- 0ms;
SELECT DISTINCT ((((((2137869781)*(vt0.c0)))OR(NULL)))AND(NULLIF(vt0.c0, vt0.c0))) FROM vt0; -- 3ms;
SELECT DISTINCT COUNT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('')))) FROM vt0 WHERE (((x'f220' COLLATE NOCASE) ISNULL)); -- 0ms;
SELECT DISTINCT CASE (+ (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END FROM vt0 WHERE (CAST(((NULL) NOT BETWEEN ('-428353786') AND (0.001476129709288898)) AS REAL)) LIMIT 331066519 OFFSET 26071060; -- 0ms;
SELECT (~ (vt0.c0)) FROM vt0 WHERE ((((x'7096')) BETWEEN (((NULL IN ()))) AND (((('1[1,<M7') NOTNULL))))); -- 0ms;
SELECT ALL ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))AND((+ (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ()))))AND(((('1814809236', vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 GROUP BY ((((vt0.c0) IS TRUE)) NOT BETWEEN (json_quote(vt0.c0)) AND ((('>G籱,m') IS TRUE))) HAVING ((vt0.c0 COLLATE BINARY) ISNULL); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(MIN(vt0.c0))) FROM vt0 WHERE (((((0.6780838768749656) IS TRUE)) ISNULL)); -- 0ms;
SELECT ((((vt0.c0)%(vt0.c0)))>=(vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT NULL, NTH_VALUE(((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))OR(HEX(vt0.c0))), CAST(vt0.c0 AS BLOB)) OVER (), NULL, (((NOT (vt0.c0)))+(CAST('-1803660040' AS NUMERIC))), SUM(x'') OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW) FROM vt0 GROUP BY ((vt0.c0) NOT BETWEEN ((~ (vt0.c0))) AND ('1850502366'));SELECT DISTINCT GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((((((((x'370a' COLLATE RTRIM)OR(((0.2421321278590126)IS NOT(-1022377447)))))AND(((-1.079440097E9)<('1657556800')))))AND((((('K[')AND(1.807187514E9)))AND('Q~ꮲ*n')))))OR(((NULL)||(-760292156))))); -- 0ms;
SELECT DISTINCT AVG(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER (), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('')))LIKE(((vt0.c0)GLOB(vt0.c0)))), ((~ (vt0.c0)) IN ()) FROM vt0 ORDER BY ((((vt0.c0 IN ())))=((vt0.c0))) DESC  NULLS LAST; -- 1ms;
SELECT (((vt0.c0) IS TRUE) IN ()) FROM vt0 WHERE (((1780106842)OR(0X4990eeac)) COLLATE RTRIM) GROUP BY (((((((vt0.c0))=((vt0.c0))))AND((NOT (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)), CASE 0.6705102340669513  WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN x'037abd3c' ELSE '-495125424' END, vt0.c0, ((((vt0.c0)AND(vt0.c0)))IS NOT((~ (vt0.c0)))), LAST_INSERT_ROWID() HAVING (NOT (CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE (((json_remove(0X4dc09acc, 0.8799945334589483)) NOT BETWEEN (CAST('-1e500' AS REAL)) AND (((0.4703826951929926) NOT BETWEEN (x'93a8') AND (x'de7b')))));SELECT ((((SUM(vt0.c0))AND(((vt0.c0)>>(vt0.c0)))))AND((+ (vt0.c0)))), vt0.c0, vt0.c0 FROM vt0 WHERE (CASE (~ (0.8829788351553461))  WHEN (('1046167682')>>('C')) THEN (((0.3466947309140449)) NOT BETWEEN ((NULL)) AND ((NULL))) END); -- 0ms;
SELECT ALL HEX(DISTINCT vt0.c0 COLLATE BINARY) FROM vt0; -- 0ms;
SELECT SUM(vt0.c0 COLLATE NOCASE) OVER ( PARTITION BY LIKELIHOOD(DISTINCT ((vt0.c0)%(vt0.c0)), 0.7821870573061073), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 WHERE (((((x'')*(NULL)))<(((((((((((((NULL)AND(0.8059185058005364)))OR(x'')))OR('-636760389')))AND(NULL)))AND(NULL)))AND(0Xfffffffffbded21d))))); -- 0ms;
SELECT AVG(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER () FROM vt0 WHERE (((((1.633424958E9)==('')))<((0Xffffffff810f2d08 IN ('?N⅗bU2I?', '1279897706'))))); -- 0ms;
SELECT DISTINCT ((MIN(vt0.c0))-(((vt0.c0)*(vt0.c0)))) FROM vt0 WHERE ((((NULL, NULL, NULL))>((0.021878474839689077, NULL, x'1ae2'))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)IS(vt0.c0)) AS REAL) FROM vt0 WHERE ((((NOT (x'')))>>(CASE WHEN '%_' THEN 1.662876785E9 END))) ORDER BY CAST(vt0.c0 AS TEXT)  NULLS FIRST, ((vt0.c0) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (LIKE(vt0.c0, vt0.c0))), 0.6780838768749656 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((((((('! ')AND(0.359540829915143)))OR(((vt0.c0)IS NOT(vt0.c0)))))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))AND(json_array_length(vt0.c0))) FROM vt0 WHERE (CAST((('') ISNULL) AS INTEGER)) LIMIT 1279897706; -- 0ms;
SELECT DISTINCT CASE WHEN (('822450860')IS NOT(vt0.c0)) THEN ((vt0.c0) IS TRUE) END FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)!=(vt0.c0)) IN ()) FROM vt0 WHERE (((LENGTH('hh>TA')) NOTNULL)); -- 0ms;
SELECT ALL CASE CAST(vt0.c0 AS BLOB)  WHEN vt0.c0 COLLATE BINARY THEN (NOT (vt0.c0)) ELSE AVG(vt0.c0) END FROM vt0; -- 0ms;
SELECT ALL TRIM(NULL, '') FROM vt0; -- 0ms;
SELECT DISTINCT UPPER(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((NULL COLLATE BINARY)>=(('-1294098630' IN ())))); -- 0ms;
SELECT (~ (vt0.c0 COLLATE NOCASE)), SUM(CAST(0.47800437131716333 AS INTEGER)), (((((vt0.c0)<<(vt0.c0)), ((vt0.c0)IS(vt0.c0)), ((vt0.c0) ISNULL)))==((((vt0.c0)+(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), 0.6938872499414858))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC) FROM vt0 WHERE ((((0X2c003e82)<<(0xfffffffff89085b0)) IN ())); -- 0ms;
SELECT DISTINCT CAST((- (x'')) AS INTEGER) FROM vt0 WHERE ((((('1279897706') NOT BETWEEN (NULL) AND (x''))) IS FALSE)); -- 0ms;
SELECT 0Xffffffffccf7d3c6 FROM vt0 WHERE ((((('') IS TRUE)) BETWEEN ((('WcMq2n')IS('lንpDTᘾ'))) AND (((('0.674258155522901', '276103560', 0.5606965701140062))>((0X70c1b68c, 'sq*h', NULL)))))); -- 0ms;
SELECT DISTINCT MIN(COUNT(((vt0.c0) ISNULL))), LIKELIHOOD(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), 0.22047440812536134), x'' FROM vt0 WHERE (CASE WHEN ((0.5288537317988365)/(NULL)) THEN CASE WHEN -1534809732 THEN x'376b' END WHEN (((((((('')OR(x'')))OR(x'')))OR('^')))AND(0.619996757574901)) THEN ((((((((0.6565824923221196)OR(NULL)))OR(0.048707182685344796)))AND(NULL)))AND(0.27695314482440425)) WHEN (+ ('*-!bvgUw')) THEN (((('mo3h')OR(0.2345362024239448)))AND(0.5071334668892383)) END);SELECT ALL ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))-(CAST(vt0.c0 AS INTEGER))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0)==(vt0.c0)) AS INTEGER) FROM vt0 WHERE (((((((x'')OR('')))AND(NULL)))>>(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT SUBSTR(vt0.c0, vt0.c0) COLLATE NOCASE FROM vt0 WHERE ((+ (x'58a1')) COLLATE BINARY); -- 0ms;
SELECT ALL (((((vt0.c0)IS NOT(vt0.c0))))<=(((- (vt0.c0))))) FROM vt0 LIMIT -858254130 OFFSET 258199400; -- 0ms;
SELECT ALL ((((vt0.c0)>>(vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c0)OR(vt0.c0)) AS REAL) FROM vt0 WHERE (TRIM(DISTINCT ((NULL) IS TRUE))) ORDER BY LOWER(vt0.c0 COLLATE NOCASE) DESC; -- 0ms;
SELECT ALL (- (CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE ((((692164260))>=(((('0.6105353399329133')+(NULL)))))); -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS REAL) IN ()), ((((vt0.c0 IN ()), CAST(vt0.c0 AS BLOB), ((vt0.c0) IS TRUE)))!=(((vt0.c0 IN (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))>=((vt0.c0)))))), SUM(((vt0.c0) IS FALSE)) FROM vt0 WHERE (CAST((NULL IN ()) AS NUMERIC)); -- 0ms;
SELECT ALL NULLIF(vt0.c0, vt0.c0) COLLATE NOCASE COLLATE RTRIM FROM vt0 WHERE ((-590199061 IN ()) COLLATE RTRIM); -- 0ms;
SELECT ((((((vt0.c0) ISNULL))OR(vt0.c0)))AND((((vt0.c0))<=((vt0.c0))))) FROM vt0 WHERE ((((- (x''))) NOT BETWEEN (((NULL)!=(NULL))) AND (NULLIF('97', x'dbb9')))); -- 0ms;
SELECT DISTINCT COUNT(vt0.c0 COLLATE BINARY) OVER ( ROWS  UNBOUNDED PRECEDING), vt0.c0, NULL, CHAR((vt0.c0 IN (vt0.c0))), (+ (((vt0.c0) BETWEEN ('341491065') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT NULL)) FILTER(WHERE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) OVER ( ORDER BY (CAST('' AS BLOB) IN ()) DESC  NULLS LAST), (- (x'')), CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)>(vt0.c0)) THEN AVG(vt0.c0) ELSE vt0.c0 END, vt0.c0, ((((('262542255')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL '' FROM vt0 WHERE ((((-100495660, 0.23184121086729814, '331066519')) BETWEEN ((((0.8384489190788755)=(0.13267465975988335)), (((']9?oIgp5+')) BETWEEN ((0X6c2bca94)) AND (('-516754877'))), (NULL IN (0.997611157251665, NULL)))) AND ((LENGTH(0xffffffffdb8dabb2), CAST(0.254999653007861 AS REAL), 0.3214379985856427 COLLATE BINARY)))) LIMIT 1826172571 OFFSET -311348590; -- 0ms;
SELECT DISTINCT ((((vt0.c0))<>((vt0.c0))) IN ()) FROM vt0 WHERE (((((6.7888241E7)IS NOT(0.8553284655715487)))>=(('407860465' IN ())))); -- 1ms;
SELECT (((vt0.c0 IN ()))==(CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT ALL (NOT (((((vt0.c0)OR(NULL)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)-(vt0.c0)) AS INTEGER), vt0.c0, ((vt0.c0) BETWEEN (LIKELY(DISTINCT vt0.c0)) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((((((((((~ (x'')))OR(CAST(0.13267465975988335 AS INTEGER))))OR(json_patch(x'ab24', 'I'))))AND((((0X45d04be, -8.5825413E8, 1.662876785E9, NULL, -8.35109386E8)) BETWEEN ((x'', '1584045789', 0.25180433005373315, NULL, x'')) AND (('y~', -7.60665176E8, NULL, 'D⣣', '-1056437908'))))))AND(1.780106842E9 COLLATE NOCASE))) GROUP BY (((vt0.c0, CAST(vt0.c0 AS NUMERIC), vt0.c0))<((((vt0.c0)+(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN ())))); -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL NTILE(((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM) OVER ( GROUPS  CURRENT ROW) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.837639106228995 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC; -- 0ms;
SELECT DISTINCT (('1967157177') NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (AVG(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE 0.47800437131716333  WHEN x'e7dd' THEN x'' ELSE '827825284' END)AND(('56016669' IN ()))))AND(((x'da02') NOTNULL)))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))GLOB((((0.16984257926977808)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 1ms;
SELECT DISTINCT NULLIF((vt0.c0 IN ()), CAST('0.5606965701140062' AS INTEGER)) FROM vt0; -- 0ms;
SELECT CASE WHEN (((vt0.c0))==((vt0.c0))) THEN ((((((((0.9053424518776826)AND(vt0.c0)))AND(0.8678231930771122)))AND(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)||(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((NULL COLLATE BINARY)IS NOT(CAST(0.5865516420391013 AS INTEGER))) FROM vt0 WHERE (((CAST(x'' AS INTEGER)) ISNULL)); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT SUM((0xffffffff9d4198ff IN (vt0.c0))) OVER ( PARTITION BY CAST(vt0.c0 COLLATE RTRIM AS NUMERIC), ((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c0)<>(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))), (((vt0.c0 IN ())) NOTNULL), (('NEqิ') IS TRUE) FROM vt0 WHERE (('f映' IN ())); -- 0ms;
SELECT ALL DATETIME(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), (vt0.c0 IN ()), (NOT (vt0.c0)), (vt0.c0 IN ()), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN 'ꦦ' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, 0.8139565827863692, LOWER(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE ((((NULL)-(x'f1c6')) IN ())); -- 0ms;
SELECT DISTINCT ((0.7369034767307466 IN ()) IN ()), CAST(SUM(vt0.c0) AS REAL), TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((CAST('-856173626' AS BLOB)) IS FALSE)) ORDER BY ((((0.5528047511812608)GLOB(vt0.c0)))IS NOT((vt0.c0 IN (vt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL NTILE((vt0.c0 IN ()) COLLATE RTRIM) OVER () FROM vt0;SELECT DISTINCT UPPER(x''), CASE WHEN '' THEN ((vt0.c0)+(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END, (((((NULL, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))) IS TRUE) FROM vt0 WHERE (x'') EXCEPT SELECT COUNT(((vt0.c0) ISNULL)) OVER (), ((((vt0.c0)-(vt0.c0)))>=((vt0.c0 IN (vt0.c0)))), (((vt0.c0))<((((((0.1340786787925533)AND(vt0.c0)))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL (NOT (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE ((((((591980717, NULL, NULL)) NOT BETWEEN ((x'', '0.7369034767307466', 862071755)) AND (('-1005490970', '', 0.1670769701483581)))) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST((- (vt0.c0)) AS BLOB), json_type(0xffffffffd12d7d0a), x'', (((NOT (vt0.c0))) ISNULL), CAST(vt0.c0 COLLATE BINARY AS INTEGER) FROM vt0 UNION ALL SELECT DISTINCT (((vt0.c0))<>((LTRIM(vt0.c0)))), ((vt0.c0 COLLATE NOCASE) NOT NULL), (('') IS FALSE), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), NULL COLLATE NOCASE FROM vt0 GROUP BY UNLIKELY(vt0.c0) COLLATE BINARY HAVING (+ (((((((((vt0.c0)AND(vt0.c0)))OR('녷LA	')))OR(vt0.c0)))AND(vt0.c0)))); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0))) IS FALSE), CAST(GROUP_CONCAT(vt0.c0) AS REAL), COUNT(*) FROM vt0 WHERE ((((NULL)) BETWEEN ((CASE WHEN 0.38968084697490146 THEN NULL ELSE 0xffffffff9b922f9f END)) AND ((CAST(0.5878161188426059 AS REAL))))) GROUP BY (0.47320872874755526 IN ()); -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(json_object(-255768360, vt0.c0))))OR(((vt0.c0) ISNULL))))AND(vt0.c0)) FROM vt0;SELECT DISTINCT ((((x'') IS TRUE))==(((vt0.c0)!=(vt0.c0)))) FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) DESC; -- 0ms;
SELECT DISTINCT AVG((+ (vt0.c0))) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT 'b%?', CASE WHEN ABS(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)%(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 END, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((x'69d2') NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (UPPER(vt0.c0))) FROM vt0 WHERE (((((CAST('1566163900' AS NUMERIC))AND((((((((('1592991684')AND(x'')))AND(0.9186482949207694)))AND(0x40be471)))AND(0.5726834235768249)))))OR((+ (x''))))); -- 0ms;
SELECT LEAD(CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END, (((('')<=(vt0.c0))) BETWEEN (((vt0.c0)<>(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)), ((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) IS FALSE))))OR(((vt0.c0) NOT NULL)))) OVER () FROM vt0; -- 0ms;
SELECT MIN(COUNT(*)) FROM vt0;SELECT DISTINCT COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER ( ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST, CAST('0.9314302992007409' AS TEXT) DESC) FROM vt0 WHERE (CAST(((0xffffffffa2a39765)>=('')) AS BLOB)) GROUP BY ((RTRIM(x'387c')) ISNULL); -- 0ms;
SELECT DISTINCT (- (CAST(vt0.c0 AS REAL))) FROM vt0; -- 0ms;
SELECT ALL LOWER(DISTINCT ((vt0.c0)==(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY ((vt0.c0)&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((vt0.c0)<=(vt0.c0))) IS FALSE) ORDER BY 0.7578115725247787) FROM vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN vt0.c0 THEN (+ (vt0.c0)) END DESC  NULLS FIRST; -- 0ms;
SELECT ALL CASE json(vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN COUNT(*) ELSE (vt0.c0 IN ()) END, ((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))==(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 GROUP BY COALESCE(DISTINCT CAST(vt0.c0 AS INTEGER), ((vt0.c0)<=(vt0.c0)), TYPEOF(DISTINCT vt0.c0), (vt0.c0 IN ())), CASE WHEN ((vt0.c0)||(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)/(vt0.c0)) THEN (NOT (vt0.c0)) END, (('-1355565800') ISNULL) HAVING CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM COLLATE NOCASE; -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) BETWEEN ((- (vt0.c0))) AND (vt0.c0)), ((((0.660626410250214)<>(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)), CAST(((vt0.c0) NOT NULL) AS NUMERIC) FROM vt0 WHERE (((((CAST(NULL AS INTEGER))AND(NULL COLLATE RTRIM)))AND(NULL COLLATE RTRIM))); -- 0ms;
SELECT CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c0)GLOB('')) THEN ((((x'')AND(vt0.c0)))OR(NULL)) WHEN CAST(vt0.c0 AS INTEGER) THEN (((vt0.c0))>((NULL))) END, NULL, (- (TOTAL(vt0.c0))) FROM vt0 ORDER BY ((vt0.c0)<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
SELECT (- (((vt0.c0)IS(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((('480414804')OR((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(MAX(vt0.c0, vt0.c0))) FROM vt0 WHERE (((((((0.3801853980913704)IS(NULL)))OR(((('-1775633262')) NOT BETWEEN ((-1.2474632E8)) AND ((0.5687435577864856))))))OR('862071755' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY ((((- (vt0.c0)), MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0), vt0.c0 COLLATE NOCASE))>=((((vt0.c0) NOTNULL), CAST(vt0.c0 AS TEXT), (~ (vt0.c0))))); -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((((vt0.c0)OR('')))AND(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (('0.3898233734051816' IN ())); -- 1ms;
SELECT DISTINCT (((CAST(vt0.c0 AS BLOB)))<=((((vt0.c0)<(-1741581279))))) FROM vt0 WHERE ((((((((NULL))>((1.965361039E9))))OR((((('')OR('-1046225437')))OR(x'')))))OR((x'' IN ('-2038491501'))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) END FROM vt0; -- 0ms;
SELECT ALL (~ (vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0X7f5bba2e THEN x'' WHEN vt0.c0 THEN vt0.c0 END AS TEXT) FROM vt0; -- 0ms;
SELECT (load_extension(vt0.c0, '') IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0;SELECT DISTINCT (((vt0.c0 IN ()))|(((0.06877783340640176) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) IS FALSE), LIKELY((~ (vt0.c0))) FROM vt0 WHERE (CAST(CASE WHEN 0.1734835494603365 THEN x'' WHEN NULL THEN x'' WHEN 623428186 THEN '9D' END AS REAL)); -- 0ms;
SELECT DISTINCT (((('1735644123')/(vt0.c0))) NOT BETWEEN (COUNT(*)) AND (x'')), CAST(COUNT(*) AS INTEGER), ((x'')=(TRIM(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (COUNT(vt0.c0))), COUNT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER (), CAST((- (vt0.c0)) AS INTEGER), ((vt0.c0) BETWEEN (vt0.c0) AND (((('0.38968084697490146'))=((vt0.c0))))), COUNT(*) FROM vt0 WHERE (CAST(((x'')<<(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN (~ (vt0.c0)) THEN CAST(x'c70b' AS REAL) WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0)IS(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)&(vt0.c0)) END FROM vt0 WHERE (((((x'') NOT BETWEEN (NULL) AND (''))) BETWEEN (SQLITE_VERSION()) AND ((('{}')%(x''))))); -- 0ms;
SELECT ALL (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), vt0.c0, SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (''))) OVER () FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL SUM((vt0.c0 IN ())), CAST((((vt0.c0))>((vt0.c0))) AS NUMERIC), (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((CAST(vt0.c0 AS NUMERIC)))) FROM vt0 WHERE (json_valid(SQLITE_VERSION())); -- 0ms;
SELECT ALL (LOWER(DISTINCT vt0.c0) IN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOTNULL))), ((((((((vt0.c0 COLLATE RTRIM)AND('977442924')))OR(((x'') BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)+(0.2778007832199283)))))AND(CAST(vt0.c0 AS REAL))), CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN (1.103383031E9 IN ()) ELSE (vt0.c0 IN (vt0.c0)) END FROM vt0; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE (CAST('O&Gsl_^' COLLATE RTRIM AS INTEGER)) GROUP BY (CAST(vt0.c0 AS INTEGER) IN (1.9048424E7, vt0.c0 COLLATE BINARY)) HAVING RTRIM(vt0.c0 COLLATE RTRIM) LIMIT -1732918749 OFFSET 1780106842; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT vt0.c0), CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)) AS NUMERIC), ((((NULL)<=(vt0.c0))) NOT NULL) FROM vt0 WHERE ((((CASE WHEN 0Xffffffff9629fc92 THEN '-1e500' ELSE 0.14976465693227903 END))<=((CASE WHEN x'458b' THEN x'' WHEN 0Xffffffff8e02d1cb THEN 0.2662492343344057 WHEN 0.0011483694365322927 THEN x'' END)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END FROM vt0 NOT INDEXED WHERE ('-1821758167'); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((LOWER(x'e5de') IN ())); -- 0ms;
SELECT DISTINCT MIN(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) FROM vt0 WHERE ((((- (NULL)))LIKE(x'd845' COLLATE RTRIM))) LIMIT -1511664138 OFFSET -620669615; -- 1ms;
SELECT DISTINCT CAST(((vt0.c0)<(vt0.c0)) AS BLOB), (NOT ('-424059516')) COLLATE BINARY, ((((0xffffffffc78b3229)>=(vt0.c0)))<=(CAST(-1.269660275E9 AS REAL))), DENSE_RANK() OVER (), CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT '1064541240' FROM vt0; -- 0ms;
SELECT (((((+ (vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE ((CASE x''  WHEN '\r\r' THEN 'rt' ELSE 0.6822727722608071 END IN ())) UNION ALL SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)<((vt0.c0 IN ()))) FROM vt0 WHERE ((((((((((('802746268') NOTNULL))AND(x'')))AND(((x'') NOT BETWEEN (NULL) AND (0.43250051058989647)))))AND(((x'32f17bb7') BETWEEN (0xffffffffb452858d) AND (NULL)))))AND((NULL IN (-835109386))))); -- 0ms;
SELECT (LIKELY(vt0.c0) IN ()) FROM vt0 LIMIT 792976487; -- 0ms;
SELECT ALL GROUP_CONCAT(IFNULL(vt0.c0, vt0.c0)), ((AVG(0.6289801466598384)) NOT BETWEEN (vt0.c0) AND (((vt0.c0) IS FALSE))), GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)), ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL), (((vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) AND ((NULL COLLATE RTRIM))) FROM vt0 WHERE (((((x'') BETWEEN ('0.96887293150352') AND (0.7702251136670738))) NOT BETWEEN (((0.10035847124174202)-(x'7ecb'))) AND ((0xfffffffffe31432a IN ())))); -- 0ms;
SELECT ALL ((ABS(vt0.c0))OR((NOT (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ALL CASE CASE WHEN 0Xffffffffc54fc37e THEN vt0.c0 END  WHEN x'' THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END, x'', (((((vt0.c0))!=((vt0.c0))))AND((- (vt0.c0)))) FROM vt0; -- 1ms;
SELECT ALL (((NOT (vt0.c0)))!=(MAX(vt0.c0))) FROM vt0 WHERE (CAST(CAST(1.234235052E9 AS REAL) AS REAL)); -- 0ms;
SELECT ALL TRIM(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((x'ab20', vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) FROM vt0 WHERE ((CAST('' AS TEXT) IN ())); -- 0ms;
SELECT (~ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(1234235052)))OR(vt0.c0)))) FROM vt0 WHERE ((((NULL COLLATE RTRIM, (((0.25900767037314465))!=(('AZuWA'))), 0.38045392353868357))<((0.1827836965169296 COLLATE RTRIM, TRIM(NULL, x''), (~ (NULL)))))) ORDER BY NULL  NULLS LAST; -- 0ms;
SELECT ALL vt0.c0, (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))>((vt0.c0 COLLATE RTRIM))), '1302203478' FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(JULIANDAY(vt0.c0, vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) OVER () FROM vt0 LIMIT 607179456 OFFSET -1672541721; -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (- (((vt0.c0)>>(vt0.c0)))) FROM vt0 INTERSECT SELECT UNLIKELY(vt0.c0) COLLATE NOCASE FROM vt0 WHERE (((((0.8384489190788755)LIKE(0.44430814270607255)))<=(NULL))) GROUP BY ((vt0.c0) NOT NULL) COLLATE BINARY; -- 0ms;
SELECT ALL ((MAX(vt0.c0))||((vt0.c0 IN ()))) FROM vt0 WHERE ('-303302694') ORDER BY '-1537317106' DESC  NULLS LAST, ((((((((((0.8692994458075866)OR(vt0.c0)))OR(x'bfe227c8')))AND(vt0.c0)))OR(x''))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)||(vt0.c0)))); -- 0ms;
SELECT ((vt0.c0)LIKE((('')AND(vt0.c0)))), (- ((vt0.c0 IN ()))), CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (- (vt0.c0)) END FROM vt0; -- 0ms;
SELECT CAST(CASE x'c6decb77'  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS NUMERIC), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), TOTAL(((vt0.c0)IS NOT(vt0.c0))) FROM vt0 WHERE (((((x'')>=(0.5861968910506791)))OR(CASE '1222490840'  WHEN 0.4101178963652632 THEN '475966558' ELSE 1662876785 END))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS BLOB) AS BLOB) FROM vt0 WHERE ('') ORDER BY (((NOT (vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL '0.8684500561581924' FROM vt0; -- 0ms;
SELECT ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((('862867253' COLLATE BINARY) BETWEEN (((('/t\rW'))>((x'')))) AND (CAST('' AS NUMERIC)))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (UNICODE(((((0.7515162403059309)AND(NULL)))AND(x'')))); -- 0ms;
SELECT ALL NULL FROM vt0 ORDER BY ((vt0.c0)LIKE('#ꈞ')) COLLATE BINARY  NULLS LAST, (((vt0.c0)) NOT BETWEEN (((((vt0.c0))<>((vt0.c0))))) AND (((vt0.c0 IN ())))); -- 0ms;
SELECT DISTINCT '-9223372036854775808', -1.2474632E8, CAST(((vt0.c0) NOT BETWEEN (x'') AND (-1.37284008E8)) AS NUMERIC) FROM vt0 WHERE ((((((((((('FR')AND(0.8583565034607632)))AND(x'447b4af9')))AND(NULL)))AND(NULL)))<(((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT COUNT(0.8684500561581924) COLLATE BINARY FROM vt0 WHERE ((((0.13236698461371532) ISNULL) IN (((x'0a93') ISNULL)))); -- 0ms;
SELECT ALL MIN(AVG(CAST(x'' AS TEXT))) FROM vt0 WHERE ((((('898445780')*('e8')))!=(CAST('67888241' AS NUMERIC))));SELECT DISTINCT ((((((((vt0.c0 COLLATE RTRIM)OR((- (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(GROUP_CONCAT(vt0.c0))))OR(vt0.c0)) FROM vt0 WHERE ((((((('^m2ꇦJ^L')AND(-1.775633262E9)))OR(''))) NOT BETWEEN (('' IN ())) AND (CHANGES()))); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) IS TRUE)) FROM vt0 WHERE (((((x'56cd')AND(-1741334953)))OR('Ul')) COLLATE NOCASE) GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)/(vt0.c0))) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) FROM vt0 WHERE ((- ('160056128')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END FROM vt0; -- 0ms;
SELECT ALL (- (vt0.c0 COLLATE RTRIM)), ((vt0.c0)>=(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))), ((TYPEOF(vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL COUNT((('%df\rD\\rk') BETWEEN (NULL) AND (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT COUNT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(CAST(vt0.c0 AS NUMERIC))))AND(TOTAL(vt0.c0))), CUME_DIST() OVER ( GROUPS BETWEEN ((((vt0.c0)<(vt0.c0)))<=((vt0.c0 IN (vt0.c0, vt0.c0)))) FOLLOWING AND vt0.c0 FOLLOWING), ((((((((TRIM(DISTINCT vt0.c0))AND(((vt0.c0)|(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))OR(((vt0.c0)>=(NULL)))) FROM vt0; -- 0ms;
SELECT (((((((('-428353786')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY FROM vt0; -- 1ms;
SELECT (((((- (vt0.c0)))OR((((vt0.c0))<((vt0.c0))))))OR((((0.4790371342876637))=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((STRFTIME(vt0.c0, vt0.c0, x'')) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND ('')) FROM vt0 WHERE ((((NULL)) BETWEEN (((('1744738171')<=(x'6033')))) AND (('4A&2>+' COLLATE RTRIM)))) LIMIT 1961120630; -- 0ms;
SELECT (- ('?')) FROM vt0 LIMIT -1276108614; -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((NOT (NULL))) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (json_valid(vt0.c0) IN ()), '700212768', ((vt0.c0 COLLATE RTRIM)/((vt0.c0 IN ()))), ROW_NUMBER() OVER (), json_valid(vt0.c0 COLLATE NOCASE) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0 COLLATE RTRIM)AND(vt0.c0)))AND(MAX(vt0.c0))), NULL, 0.04580599461087298 FROM vt0 WHERE ((+ ((((((((('s')OR('')))AND(NULL)))AND(x'')))OR(NULL))))); -- 0ms;
SELECT (NOT ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(0.8355425428476422)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN -751791863 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE AVG(vt0.c0) END, (vt0.c0 IN (vt0.c0)) COLLATE NOCASE, CAST((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) AS INTEGER) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)-(vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((((0.7676090721818297, -124746320, 0.14893556187649548)) BETWEEN ((((0.5081122045277631)IS('')), ((x'')%(x'')), ('yj/(*u<Rh' IN (0.7625226145823605, '^㖜9*p懍D+d')))) AND ((CASE ''  WHEN 'oD' THEN 0.5284169040151467 END, (x'' IN ()), (~ ('	w')))))); -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)IS NOT(vt0.c0))) FROM vt0 ORDER BY ((vt0.c0)LIKE((((vt0.c0))>((vt0.c0))))); -- 0ms;
SELECT DISTINCT TOTAL(((x'') NOT NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE LTRIM(vt0.c0, vt0.c0)  WHEN MAX(vt0.c0) THEN ((vt0.c0)<(NULL)) END FROM vt0 WHERE (LIKELY(DISTINCT ((x'')<=(x'')))); -- 0ms;
SELECT DISTINCT (((((vt0.c0)) BETWEEN ((1046167682)) AND ((vt0.c0)))) ISNULL) FROM vt0 WHERE (((NULL COLLATE RTRIM)LIKE((NOT ('1046167682'))))) GROUP BY (((vt0.c0) NOT NULL) IN ()), ((x'')&(UPPER(vt0.c0))), (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN (((vt0.c0) ISNULL))) LIMIT -1844033410; -- 0ms;
SELECT (- ((((vt0.c0))>((vt0.c0))))) FROM vt0 WHERE ((~ (CAST(1683020197 AS TEXT)))) LIMIT -1065466126; -- 0ms;
SELECT DISTINCT MIN(CAST(vt0.c0 AS INTEGER)) FROM vt0 WHERE (((CASE '-627403191'  WHEN NULL THEN 0.9391205448887522 END) NOT BETWEEN ('' COLLATE BINARY) AND (((0.8992134579614972)+(NULL))))); -- 0ms;
SELECT ALL (((((((((0.17996299716282615)OR(vt0.c0)))AND(vt0.c0)))OR(0.11465315032070122)))OR(vt0.c0)) IN ((('6Q') BETWEEN (vt0.c0) AND (vt0.c0)))), (((vt0.c0 COLLATE NOCASE))<(((((vt0.c0)) NOT BETWEEN ((0X401ff6e1)) AND ((vt0.c0)))))), CASE ((vt0.c0) ISNULL)  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE COUNT(vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT AVG(MAX(((vt0.c0)<=(NULL)))), CAST((('-967441922')-(vt0.c0)) AS TEXT), SUM(((x'c0d9')%(vt0.c0))) FROM vt0 NOT INDEXED ORDER BY vt0.c0 ASC;SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('' COLLATE BINARY)OR(('0.5379241399970992' IN (NULL)))))AND(CASE WHEN NULL THEN 0.39876865468626965 END))); -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(vt0.c0) THEN vt0.c0 END FROM vt0 WHERE (((CAST(-6.36760389E8 AS BLOB))>=((~ (NULL))))); -- 0ms;
SELECT ROUND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS TEXT)) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)-(vt0.c0)) IN (((vt0.c0)OR(vt0.c0)))), CASE WHEN MAX(vt0.c0, vt0.c0, x'', vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-1294098630' THEN vt0.c0 WHEN -1.7976931348623157E308 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN -1145781636 THEN vt0.c0 END THEN '' COLLATE NOCASE WHEN ((vt0.c0)|(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE CASE vt0.c0  WHEN vt0.c0 THEN NULL END END, (+ (vt0.c0 COLLATE RTRIM)), (((1.966602522E9 IN (vt0.c0))) BETWEEN (HEX(vt0.c0)) AND (vt0.c0 COLLATE BINARY)), NULL FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) BETWEEN (0.22959685123475204) AND (vt0.c0))  WHEN (((vt0.c0, vt0.c0, x'fe236afe'))>((vt0.c0, vt0.c0, vt0.c0))) THEN GROUP_CONCAT(vt0.c0) WHEN (('')<>(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN MIN(vt0.c0) THEN vt0.c0 COLLATE RTRIM END FROM vt0 GROUP BY (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
SELECT CASE CAST(vt0.c0 AS TEXT)  WHEN COUNT(*) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'8c80' THEN CAST(vt0.c0 AS REAL) WHEN (((vt0.c0, NULL, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0x73e01554, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))OR(x'')) END, ((((vt0.c0)<<(vt0.c0)))%(((((((((0X5665984c)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))), (+ ((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT TOTAL(CAST(vt0.c0 AS REAL)) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL x'' FROM vt0 WHERE ((((((('1590302826')OR('-786538035')))AND(' \n5陉*'))) NOT BETWEEN (CASE '1995862590'  WHEN '/映' THEN x'' WHEN 0.14772130372612013 THEN x'' WHEN x'' THEN '-1910399309' END) AND (CAST(0xffffffff947e54f8 AS NUMERIC)))) GROUP BY CAST((- (vt0.c0)) AS NUMERIC); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (((((-6.11472462E8) NOT BETWEEN (NULL) AND ('241624780'))) IS TRUE)); -- 0ms;
SELECT ((((vt0.c0)IS(vt0.c0)))>(CAST(vt0.c0 AS INTEGER))), ((TOTAL(vt0.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)+(vt0.c0)))), GROUP_CONCAT((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) OVER (), CAST(vt0.c0 AS INTEGER), TYPEOF(((vt0.c0)=(vt0.c0))) FROM vt0 WHERE (((-1.684918369E9 COLLATE RTRIM) BETWEEN ((((1367828799)) NOT BETWEEN ((x'')) AND (('ka')))) AND (((NULL)|(0.035830191746870854))))); -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((+ (vt0.c0)))) AND ((((vt0.c0)|(vt0.c0))))), vt0.c0, GROUP_CONCAT(0.03456152852813321) OVER () FROM vt0 WHERE (('-2122587304' IN (UNLIKELY(DISTINCT 0X78ba1808)))) ORDER BY vt0.c0 DESC; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (((ABS(DISTINCT '-1910399309')) ISNULL)) GROUP BY vt0.c0 HAVING ((vt0.c0)<<(((vt0.c0) ISNULL))); -- 0ms;
SELECT DISTINCT SUM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), (~ (COUNT(vt0.c0))), CASE ((vt0.c0)*(vt0.c0))  WHEN NULLIF(vt0.c0, vt0.c0) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN MAX(NULL, vt0.c0) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN x'' END FROM vt0 WHERE ((((((('878933757')OR('')))AND(0.14419525588373328))) NOT BETWEEN (((((0.15133099352085333)OR(x'')))OR(0.45405551657734833))) AND (CAST(x'' AS TEXT)))) LIMIT -1831648782 OFFSET 1850502366; -- 0ms;
SELECT DISTINCT ((((((((((((((vt0.c0)OR(vt0.c0)))OR(693408693)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) ISNULL) FROM vt0 WHERE ((NOT (('1624831973' IN ())))); -- 0ms;
SELECT CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) FROM vt0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), CASE 0x13bbac97  WHEN 9.51368719E8 THEN ((vt0.c0)<=(vt0.c0)) END, ((((vt0.c0)>>(vt0.c0)))&(((NULL)<(vt0.c0)))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(1089798216)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOTNULL), COUNT(LOWER(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))) FROM vt0; -- 0ms;
SELECT ALL CAST(vt0.c0 AS NUMERIC) COLLATE BINARY FROM vt0 WHERE ((((('4''O45	') NOT BETWEEN (NULL) AND (x'')))||(((NULL)+(x'a4ca'))))); -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS INTEGER), NULLIF(CAST(vt0.c0 AS NUMERIC), JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)), NULL FROM vt0; -- 0ms;
SELECT AVG((+ (vt0.c0))) FILTER(WHERE ((0.39784179879998516) IS FALSE)) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND DATETIME((((vt0.c0))>((vt0.c0))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0) PRECEDING EXCLUDE GROUP) FROM vt0 WHERE (LTRIM(IFNULL(DISTINCT 0.41880952704270835, 0.7438498816971031)));SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>(((vt0.c0)>>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0))==((NULL))) COLLATE RTRIM, ((x'93f7')||(vt0.c0)), CAST(vt0.c0 AS TEXT) FROM vt0; -- 1ms;
SELECT (((((vt0.c0))==((vt0.c0))))IS(vt0.c0)) FROM vt0 LIMIT -649135204 OFFSET 822450860; -- 0ms;
SELECT CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN ((NULL) IS TRUE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) ISNULL) FROM vt0 WHERE (((((NULL IN (-1361684030, NULL))))<=((((((((((-6.62272559E8)AND(-856173626)))AND(NULL)))OR(0.8678231930771122)))AND(0.4019314336877259)))))); -- 0ms;
SELECT DISTINCT ((LAST_INSERT_ROWID())*(((vt0.c0)>(vt0.c0)))), ((CASE WHEN vt0.c0 THEN 0.8553284655715487 END)IS NOT(CAST(vt0.c0 AS REAL))), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT SUM(TYPEOF(DISTINCT vt0.c0)), LEAD((((vt0.c0 IN ())) IS FALSE), CASE ((vt0.c0)||(vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)|(vt0.c0)) END, ((x'') IS TRUE)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), ((MIN(vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN LOWER(vt0.c0) THEN SUM(vt0.c0) END, CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)+(vt0.c0)) COLLATE NOCASE, SUM((+ (vt0.c0))) OVER (), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))OR(0.07473091992220093)))OR(vt0.c0)))AND(vt0.c0))))) FROM vt0 WHERE (((0.8022491240882379) BETWEEN ('-1909942158' COLLATE NOCASE) AND (((x'14c5')!=('532928206'))))); -- 0ms;
SELECT DISTINCT ((((NULL)AND(((vt0.c0) ISNULL))))OR(vt0.c0)) FROM vt0 WHERE (((((x'')<>(NULL)))*(((0X2c003e82) BETWEEN ('') AND ('#Sp#g'))))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN '	|\r' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 NOT INDEXED GROUP BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((((((0x77fc494a))>(('D'))))<<(((('1346050353', NULL, '-1927531673')) NOT BETWEEN (('z?gB', 0.0984302650869856, 0.1857797657154523)) AND ((-1294098630, 'y}雟&UpO\r?', x'')))))); -- 0ms;
SELECT MAX(((((NULL)OR(vt0.c0)))OR(vt0.c0))) FROM vt0 GROUP BY ((vt0.c0 IN ()) IN ()) ORDER BY vt0.c0 ASC  NULLS FIRST, CASE vt0.c0  WHEN vt0.c0 COLLATE RTRIM THEN (+ (vt0.c0)) ELSE (vt0.c0 IN ()) END  NULLS FIRST, (((vt0.c0 IN ()))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));SELECT DISTINCT 0X3bc75e99 FROM vt0 WHERE ((((('ﲒE')LIKE('-577793974'))) IS FALSE)); -- 0ms;
SELECT DISTINCT COUNT((vt0.c0 IN ())) OVER ( ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  NULLS LAST), SUM(vt0.c0), '1046167682', IFNULL(DISTINCT vt0.c0, -605880613), CASE CAST(0.7255756026616513 AS REAL)  WHEN NULLIF(vt0.c0, x'') THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (vt0.c0 IN ()) END FROM vt0 WHERE ((((((NULL IN ()))OR(CASE WHEN -6.62272559E8 THEN NULL ELSE x'5bf8' END)))OR(0.5505103478779874 COLLATE BINARY))); -- 0ms;
SELECT ALL (LIKELY(vt0.c0) IN (NULL, MIN(vt0.c0))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) NOTNULL)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT (NOT (691273953)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) ISNULL) FROM vt0; -- 0ms;
SELECT ALL COUNT((vt0.c0 IN ())) OVER () FROM vt0 WHERE (((((('-466896316'))<=((NULL)))) ISNULL)); -- 1ms;
SELECT DISTINCT vt0.c0, '', (((x'c639'))>((UNICODE(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((x'7350')) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) OVER (), AVG(((vt0.c0)+(vt0.c0)) COLLATE RTRIM), CASE WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (vt0.c0 IN ()) END, CASE ((vt0.c0) IS FALSE)  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END, NULL FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((NULL) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(NULL))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT ALL IFNULL(DISTINCT (NOT (vt0.c0)), vt0.c0) FROM vt0; -- 0ms;
SELECT ALL NULL FROM vt0 WHERE (((0.38549449491443666 COLLATE BINARY)>((~ (0.3675433678790112))))); -- 0ms;
SELECT CASE ((vt0.c0)<<(vt0.c0))  WHEN (NOT (vt0.c0)) THEN TRIM(vt0.c0, vt0.c0) END, (((vt0.c0, vt0.c0, -1.29409863E9)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY, (((vt0.c0)<<(vt0.c0)) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (((((x'')&(NULL))) NOT BETWEEN (((NULL) BETWEEN (0.8772511335727027) AND (0.8861418863188194))) AND (((x'b449') BETWEEN (0.154411249925392) AND ('-69283299'))))); -- 0ms;
SELECT json_array_length((vt0.c0 IN (vt0.c0))) FROM vt0 GROUP BY (((vt0.c0 COLLATE NOCASE, (((vt0.c0)) BETWEEN ((x'305b')) AND ((vt0.c0))), ((vt0.c0)%(vt0.c0))))>=((((NULL)AND(vt0.c0)), ((vt0.c0)>(vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), ((x'')=(((vt0.c0) ISNULL))), ((((((vt0.c0)=(vt0.c0)))AND(((vt0.c0)%(vt0.c0)))))OR(INSTR(vt0.c0, vt0.c0))) HAVING (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY vt0.c0 ASC  NULLS LAST; -- 1ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS BLOB))) AND (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOTNULL), UNICODE(vt0.c0)))), ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (0) AND (CAST(vt0.c0 AS NUMERIC))), (((x'9005')) NOT BETWEEN ((MIN(vt0.c0))) AND ((vt0.c0))) FROM vt0 WHERE ((('B￿k\!o2')<<(966992006)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT vt0.c0, (LTRIM(vt0.c0, vt0.c0) IN ()), ((((NULL)OR(NULLIF(vt0.c0, vt0.c0))))AND(SUM(vt0.c0))) FROM vt0 WHERE (DATE(0.1482759191674734, '^', '1662876785') COLLATE NOCASE); -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY vt0.c0 COLLATE BINARY, 41229300, (+ (vt0.c0 COLLATE RTRIM))), json_extract((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, 0.36677285474122867))), (~ (vt0.c0))), ((TOTAL(vt0.c0))|(((vt0.c0)LIKE(vt0.c0)))) FROM vt0 UNION ALL SELECT (((('1202059011') NOTNULL)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN ()))), ((0.8684570783627488)*(((vt0.c0)%(vt0.c0)))), (((- (vt0.c0))) ISNULL) FROM vt0 WHERE (((CASE '-945348265'  WHEN 0.3882405462561299 THEN '-387581510' WHEN '944462321' THEN NULL WHEN '-942481247' THEN '0.2951682426785952' END)IS(((0.7869248882066792) NOT BETWEEN (NULL) AND (NULL))))) GROUP BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END)-(vt0.c0)), ((((vt0.c0) NOT NULL)) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS BLOB))<<(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL);SELECT DISTINCT (((((vt0.c0) IS TRUE), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), HEX(vt0.c0)))>((vt0.c0 COLLATE BINARY, TRIM(DISTINCT vt0.c0), 0.6434059343507719))) FROM vt0 LIMIT 1780106842 OFFSET -1519250942; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), TOTAL((+ (vt0.c0))), (((((((((((vt0.c0))=((vt0.c0))))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(((((((((((((x'')OR(x'')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(COUNT(vt0.c0))) FROM vt0 WHERE ((((NULL, x'990287fd', x'')) NOT BETWEEN ((-760665176 COLLATE BINARY, (('1279897706') BETWEEN (0xffffffffe83b5141) AND ('1103383031')), ((0.33503476777603236)-('1621072958')))) AND ((((NULL) NOTNULL), CAST(0.3439788880025143 AS BLOB), ((x'')|('aiᙋjB8(&ʴ')))))); -- 0ms;
SELECT COUNT(*) FILTER(WHERE (- (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) NOT NULL))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, LEAD((((+ (vt0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), CASE ((vt0.c0)+(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))<=((1.298704806E9, vt0.c0, vt0.c0))) THEN (((vt0.c0))>=((vt0.c0))) END, ((vt0.c0)&(vt0.c0)) COLLATE RTRIM) OVER (), COUNT(*) OVER () FROM vt0 WHERE ((((('c?''aﯧ(-<')AND('Q{,팭vNa'))) NOT BETWEEN (((((((((x'')OR(0Xffffffffa0276a69)))OR(0.5247186262736122)))OR('0.431577455072779')))AND(NULL))) AND (((0.7883281815604823) IS FALSE)))); -- 0ms;
SELECT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))>=((SUM(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)LIKE(vt0.c0)) AS INTEGER), SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))), CAST((NOT (vt0.c0)) AS TEXT) FROM vt0 WHERE (x''); -- 0ms;
SELECT SUM(CAST(vt0.c0 AS NUMERIC)) OVER () FROM vt0 WHERE ((((((((((NULL)OR(0x145abd79)))AND('1219967004')))AND(-4.28353786E8)))AND(x'')) IN (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))AND(TRIM(DISTINCT vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (((x'04f1') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), vt0.c0 FROM vt0; -- 0ms;
SELECT CASE 0.7049154457660369  WHEN ((vt0.c0)<>(vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END FROM vt0 GROUP BY (((vt0.c0) ISNULL) IN (CAST(vt0.c0 AS BLOB))) HAVING CAST(((x'')==(vt0.c0)) AS NUMERIC); -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0)&(vt0.c0))) OVER (), (((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (vt0.c0)))), (NULL IN ()), (- (CAST(1657556800 AS NUMERIC))), ((((((vt0.c0, x'82ef02d0', vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0)))))<((COUNT(*)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)+(vt0.c0))))==((((vt0.c0) IS TRUE)))), 'C-', CAST(vt0.c0 AS TEXT) COLLATE RTRIM FROM vt0 WHERE ((CAST(0x30e73dd3 AS NUMERIC) IN ())); -- 0ms;
SELECT DISTINCT (((('-1077346428' COLLATE BINARY)OR(vt0.c0 COLLATE RTRIM)))AND((vt0.c0 IN ()))), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(vt0.c0)), ((vt0.c0) IS TRUE), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN ('Mj') AND (vt0.c0)), ((vt0.c0)||(vt0.c0)), vt0.c0))), ((TRIM(vt0.c0))*(CAST(0.544289065949802 AS TEXT))) FROM vt0 GROUP BY ((vt0.c0) NOTNULL) COLLATE RTRIM, ((((vt0.c0)<=(vt0.c0)))OR((NULL IN ()))), vt0.c0 HAVING (- ((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT ((DATETIME(vt0.c0, vt0.c0, vt0.c0))>(((vt0.c0)<(vt0.c0)))), CASE vt0.c0 COLLATE BINARY  WHEN GROUP_CONCAT(vt0.c0) THEN (NOT (vt0.c0)) WHEN TYPEOF(DISTINCT vt0.c0) THEN '-428353786' COLLATE RTRIM WHEN vt0.c0 THEN (- (vt0.c0)) END, (vt0.c0 IN ()) FROM vt0 WHERE (((((0.010418486944132166) BETWEEN ('^㖜9*p懍d+d') AND ('-2013523423')))LIKE(''))) GROUP BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)LIKE(COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))) HAVING LOWER((~ (vt0.c0))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))IS NOT((~ (vt0.c0)))), MAX((vt0.c0 IN ())), (((NOT (0.16984257926977808)))||(ABS(vt0.c0))) FROM vt0 ORDER BY (((NOT (vt0.c0))) ISNULL) ASC  NULLS FIRST; -- 0ms;
SELECT (((vt0.c0))<((vt0.c0))) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT CASE WHEN (vt0.c0 IN ()) THEN ABS(DISTINCT vt0.c0) END FROM vt0; -- 0ms;
SELECT CAST(((x'') BETWEEN (0.4937114796970309) AND (vt0.c0)) AS INTEGER), (((NOT (vt0.c0)))%((vt0.c0 IN ()))), CASE SUM(vt0.c0)  WHEN (vt0.c0 IN ()) THEN TRIM(vt0.c0) WHEN 0.8384489190788755 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN 0X6e6b5829 THEN (((vt0.c0))>=((NULL))) ELSE LTRIM('-194302405', vt0.c0) END, ((('-669196950'))!=((vt0.c0))) COLLATE RTRIM, vt0.c0 FROM vt0; -- 0ms;
SELECT ALL vt0.c0, ((((NULL) IS TRUE)) NOT NULL), 0.6277170880715834 FROM vt0; -- 0ms;
SELECT CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS TEXT), CAST(LIKELY(vt0.c0) AS BLOB), GROUP_CONCAT(vt0.c0) COLLATE NOCASE FROM vt0 WHERE ((((NULL)) BETWEEN ((((0.5898591600791516) IS FALSE))) AND ((('1145165521' IN ()))))); -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE), (CAST(vt0.c0 AS BLOB) IN ((+ (vt0.c0)))), AVG(((vt0.c0)LIKE(-1.909942158E9))) OVER ( GROUPS BETWEEN CAST(vt0.c0 AS NUMERIC) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM vt0;SELECT DISTINCT ((((((vt0.c0) IS TRUE))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((((((('1121207543' COLLATE BINARY)AND((('462685630') IS TRUE))))AND(((('1850502366'))!=(('-1338185025'))))))OR(CAST(x'' AS INTEGER))))OR(-1.921965794E9 COLLATE RTRIM))); -- 0ms;
SELECT ((((x'9e28')AND(CAST(vt0.c0 AS INTEGER))))AND(vt0.c0)) FROM vt0 GROUP BY CAST(((vt0.c0)!=(vt0.c0)) AS INTEGER); -- 0ms;
SELECT (CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE (((TRIM(DISTINCT x'', NULL)) IS TRUE)) LIMIT 862071755 OFFSET -662272559; -- 0ms;
SELECT DISTINCT (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (('1493245014' IN ())) LIMIT -1803540074; -- 0ms;
SELECT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0 WHERE ((((((((('0.6780838768749656')OR(NULL)))AND(0.17757152048383018)))AND(((0.3585884340008221)*(66410438)))))AND('1551053300' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))), AVG(((vt0.c0)IS(vt0.c0))), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM, CASE WHEN '968304287' THEN CAST(vt0.c0 AS NUMERIC) ELSE GROUP_CONCAT(vt0.c0) END, AVG(CAST(vt0.c0 AS REAL)) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0 WHERE (((((NULLIF(DISTINCT 0.42577558770852064, x''))OR(((0.18758130493173886)<=('-87289195')))))AND('?SJx3+e'))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 1ms;
SELECT DISTINCT AVG((vt0.c0 IN ())) OVER () FROM vt0 WHERE ((((((NULL)) BETWEEN ((0x801460d)) AND ((0x4d68a9a6)))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((TYPEOF(DISTINCT vt0.c0)) IS FALSE) FROM vt0 WHERE (CASE ((0.9199488257436192) BETWEEN ('e7') AND (x'36e52564'))  WHEN ((((((((((((NULL)OR(0X2c003e82)))AND(NULL)))OR(x'3db7')))AND('-902191088')))OR(NULL)))OR(0.3214379985856427)) THEN CASE 39635089  WHEN 0.8384489190788755 THEN 0.4492160646401323 END WHEN (('') ISNULL) THEN CASE -1079440097  WHEN '-858254130' THEN ']Qᴑ)m' ELSE x'c1ded3dc' END WHEN ('^0c猞D' IN ()) THEN 0Xffffffffc30fc219 END); -- 0ms;
SELECT DISTINCT (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULLIF(DISTINCT 0.02925941756666095, NULL)) BETWEEN ((-760292156 IN (0.254999653007861))) AND (('W4>' IN (-1717736320))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(-2.103367837E9)))OR(vt0.c0)))) AND (((vt0.c0 IN ('852007593'))))), ((((vt0.c0) IS TRUE)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (TOTAL(vt0.c0))), ((TYPEOF(DISTINCT NULL)) ISNULL) FROM vt0 WHERE (((CASE NULL  WHEN '331066519' THEN 436697528 END)OR((('W᳴') NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)OR((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS TEXT))))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(CASE vt0.c0  WHEN '-317069352' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((((((((('Bsu\nHa{J')OR(x'')))OR(NULL)))OR((('1770254406')<(NULL)))))OR(CASE WHEN '1345676581' THEN 1.850502366E9 WHEN x'' THEN '' WHEN 0.9542530103692002 THEN x'' END))); -- 0ms;
SELECT DISTINCT LAG((((vt0.c0)IS NOT(vt0.c0)) IN (vt0.c0, (vt0.c0 IN (vt0.c0)))), ((UPPER(DISTINCT vt0.c0))+((~ (x'')))), ((CAST(vt0.c0 AS BLOB)) BETWEEN (SQLITE_COMPILEOPTION_USED(vt0.c0)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER ( ORDER BY CHAR(rtreenode(x'', vt0.c0)) DESC), ((vt0.c0) IS FALSE), ((((CASE WHEN x'cc2de5d9' THEN vt0.c0 END)AND(COUNT(*))))OR(((vt0.c0)+(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), (((vt0.c0)) BETWEEN ((GROUP_CONCAT(vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), (+ (GROUP_CONCAT(vt0.c0))), CAST((NOT (vt0.c0)) AS INTEGER), (NOT (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((('-760665176')) NOT BETWEEN ((('7/\rAꯔ5^' IN ()))) AND (((((x'', 0.3738454145240553, '녷LA	'))>=((x'', 1.7976931348623157E308, 0.6911924656367736))))))); -- 0ms;
SELECT ALL ((((((((((((vt0.c0)OR(TRIM(vt0.c0))))AND(vt0.c0 COLLATE BINARY)))OR((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR((- (vt0.c0)))) FROM vt0 WHERE (x'2156') LIMIT -1741581279; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)>>('0.8684500561581924'))) AND (((vt0.c0) NOT NULL))) FROM vt0 WHERE (0.2951682426785952); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS REAL)) ISNULL) FROM vt0 WHERE ((NOT (x'd325')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt0.c0)%(vt0.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt0.c0) IS TRUE))) FROM vt0 LIMIT -371675551; -- 0ms;
SELECT ALL 0.6966508036561734, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE, (CAST(vt0.c0 AS REAL) IN ()) FROM vt0 WHERE ((+ (((((x'')OR(x'')))AND(NULL))))); -- 0ms;
SELECT DISTINCT SUM((- (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(vt0.c0)) IS TRUE) FROM vt0; -- 1ms;
SELECT ALL TOTAL(HEX(DISTINCT vt0.c0)) COLLATE NOCASE, CAST(((NULL)>>(vt0.c0)) AS TEXT), NTH_VALUE((- (vt0.c0)) COLLATE BINARY, vt0.c0) OVER (), SUM(((vt0.c0)+(vt0.c0))), UNLIKELY(DISTINCT ((vt0.c0) IS FALSE)) FROM vt0 WHERE (((((788300610) BETWEEN (0.34648286821666496) AND (8.62071755E8))) NOT NULL)) LIMIT -786538035 OFFSET -1869264803;SELECT ALL (NOT (vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (CAST(CAST(NULL AS NUMERIC) AS REAL)); -- 0ms;
SELECT DISTINCT (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), TRIM(0.3086044552498459), (CAST(vt0.c0 AS NUMERIC) IN ((vt0.c0 IN ()))) FROM vt0 WHERE (HEX(CASE WHEN NULL THEN NULL END)) ORDER BY LOWER(CAST(vt0.c0 AS INTEGER))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(x'b9dc'))) AND (0.6703309929632262)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((-2086959841)) AND ((0.6825621634451117))))>(((vt0.c0) BETWEEN (x'') AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'376f5cc5') NOTNULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))AND(((vt0.c0)<(vt0.c0)))) FROM vt0 WHERE (((NULL)AND(x'')) COLLATE BINARY); -- 0ms;
SELECT ALL CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) FROM vt0 WHERE (((((0.2889311121060998)AND(0.2951682426785952))) ISNULL)); -- 0ms;
SELECT ALL ((+ (vt0.c0)) IN ()) FROM vt0 GROUP BY vt0.c0; -- 1ms;
SELECT DISTINCT vt0.c0, CAST(((vt0.c0)>=(vt0.c0)) AS INTEGER), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (NULL) GROUP BY ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (vt0.c0 COLLATE BINARY)), (((vt0.c0 IN (vt0.c0)))-(((vt0.c0)IS(vt0.c0)))), vt0.c0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((((x'728f'))<((''))))AND((('\rKn') BETWEEN (x'') AND (x'df0c')))))AND((('w8RN')<=('qxﮥ᯷Z\*z'))))) GROUP BY (('1705348479') IS TRUE); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (COALESCE(DISTINCT ((((NULL)OR('WcMq2n')))OR(NULL)), NULL COLLATE BINARY)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0)))*('')), vt0.c0, AVG(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL) FROM vt0; -- 0ms;
SELECT vt0.c0, x'e631', (CASE WHEN vt0.c0 THEN vt0.c0 END IN (LIKELIHOOD(vt0.c0, 0.5429718542123645))) FROM vt0 ORDER BY (((~ (vt0.c0)))>=(((vt0.c0) NOTNULL))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT TOTAL(rtreenode(vt0.c0, vt0.c0)), x'01f6', ((((vt0.c0) IS TRUE)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (1206639532)) FROM vt0 WHERE (CASE ((x'984e')>(NULL))  WHEN 'mo3h' COLLATE BINARY THEN ((0xffffffffd2a90f92)<=('0.5101286278291801')) END); -- 0ms;
SELECT ALL LAST_VALUE(((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) OVER (), ((((vt0.c0)&(vt0.c0)))&((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', vt0.c0, vt0.c0, '1662876785', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, '1566163900', vt0.c0, vt0.c0, vt0.c0))))), COUNT(*) OVER () FROM vt0 WHERE (((((NULL) BETWEEN (0xffffffff947e54f8) AND (x''))) BETWEEN ((- (''))) AND (((0.630658070525541)IS NOT(0X2d5bb2a0))))); -- 0ms;
SELECT (('')IS NOT(((vt0.c0)<=(vt0.c0)))) FROM vt0 ORDER BY ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST, vt0.c0; -- 0ms;
SELECT CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN GROUP_CONCAT(vt0.c0) END FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.36714529837002297 WHEN vt0.c0 THEN vt0.c0 WHEN 'ﲒe' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.18952124408485027 END)IS(((vt0.c0)/(vt0.c0)))); -- 0ms;
SELECT CASE WHEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS BLOB) ELSE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((0Xffffffffc17a66d8, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END, (TOTAL(vt0.c0) IN ()), COUNT(*) FROM vt0 WHERE (((CASE '7%ᬚ瀁'  WHEN NULL THEN 'D()' END)GLOB(CAST('Ap9w?~w(' AS INTEGER)))) LIMIT -69283299 OFFSET 840151682; -- 0ms;
SELECT (((((vt0.c0))<=((vt0.c0))))LIKE(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((0.37334143948762344)OR('-2129711864')) COLLATE RTRIM) LIMIT -978987587 OFFSET 1691269451; -- 0ms;
SELECT DISTINCT ((((- (vt0.c0))))!=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 WHERE (x''); -- 0ms;
SELECT ALL vt0.c0, ((((vt0.c0) NOT NULL))<=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)), PERCENT_RANK() OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW), COUNT(*), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) FROM vt0 WHERE (CHANGES()); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0) FILTER(WHERE (((('1946821540')OR((+ (vt0.c0)))))OR(((((((((NULL)AND(0Xffffffff817be358)))AND(vt0.c0)))OR(0x2ac191f2)))AND(vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)GLOB((vt0.c0 IN ()))) FROM vt0 WHERE (CAST(((0.06366462085534497)-('Ox1')) AS NUMERIC)) GROUP BY ((((vt0.c0) IS TRUE))==(((vt0.c0)*(vt0.c0)))), (((((vt0.c0, '-1022377447', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE), '' HAVING ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))&(((((((((vt0.c0)OR(vt0.c0)))OR(0Xffffffffccc3603b)))OR(vt0.c0)))AND(vt0.c0)))); -- 1ms;
SELECT LAG(highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) COLLATE BINARY COLLATE BINARY, json_array_length(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((((((((vt0.c0)OR(-0.0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)OR(vt0.c0))))) OVER () FROM vt0 WHERE (((((x'') NOT BETWEEN ('') AND ('>Udpf'))) NOT BETWEEN ((('')>=(NULL))) AND (CASE 1979305200  WHEN 'ehx' THEN 0.7166263438352058 ELSE '312409102' END))); -- 0ms;
SELECT (((((vt0.c0))>=((vt0.c0)))) ISNULL) FROM vt0 WHERE (((((x'f294')<<(0.359540829915143)))<<((x'26b5' IN (x''))))); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0)=(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN ((vt0.c0) ISNULL) THEN SUM(x'') ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END FROM vt0 WHERE ((((x'')) NOT BETWEEN (((((0.6411349616489055)) BETWEEN ((x'')) AND ((''))))) AND ((LIKE('v*[\nGr', NULL))))) GROUP BY (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (((('716839523'))==(((('NaN') IS TRUE))))); -- 0ms;
SELECT ALL GROUP_CONCAT((vt0.c0 IN ())) OVER ( RANGE ((((x'4079')AND(json_remove(-8.56173626E8, vt0.c0))))OR((((vt0.c0, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c0))))) PRECEDING) FROM vt0 WHERE ((CASE WHEN '-516754877' THEN x'' ELSE '0.16984257926977808' END IN ()));SELECT DISTINCT LIKELIHOOD((NOT (vt0.c0)), 0.5471515379838239), ((((((vt0.c0)AND(1657556800)))AND(vt0.c0))) NOTNULL), ((((vt0.c0)LIKE(vt0.c0)))/(CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (((((0Xffffffffb5d71f9e)>>(-1900092415)))>(((((((((NULL)OR(x'')))OR(x'')))AND(NULL)))AND(x''))))) ORDER BY CAST(LOWER(vt0.c0) AS REAL) DESC, ((((vt0.c0)|(vt0.c0)))&((vt0.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0)+(vt0.c0)))), TOTAL(rtreenode(vt0.c0, vt0.c0)), CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'1d01'))  WHEN 0X79e0a21e THEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) WHEN (((vt0.c0))<((vt0.c0))) THEN AVG(vt0.c0) WHEN NULL THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE ABS(vt0.c0) END FROM vt0 WHERE (NULLIF(DISTINCT (((NULL, -853708810, -6.9283299E7)) BETWEEN ((0.717853851147697, 'uJUxN)oQ', 2044764702)) AND ((NULL, NULL, '^m'))), ((477942573)<=(x'')))); -- 1ms;
SELECT (((vt0.c0 IN ()))>>((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((NULLIF(vt0.c0, vt0.c0))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((((x'') IS TRUE))/(((x'')IS('-2103367837'))))); -- 0ms;
SELECT DISTINCT ((((0.286243576062144)AND(ABS(vt0.c0))))OR(vt0.c0)), ((NULL)OR(vt0.c0)) COLLATE NOCASE, ABS(((0.011168645635364571) NOTNULL)) FROM vt0 GROUP BY NULL HAVING ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(TRIM(DISTINCT vt0.c0))); -- 0ms;
SELECT ALL (0Xffffffff999d6c80 IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (1799201306))) AND ((((x''))>((vt0.c0))))) FROM vt0 WHERE (((CASE NULL  WHEN '''F' THEN NULL END) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(vt0.c0)))>=((vt0.c0 IN ()))) FROM vt0 WHERE ('-1269660275'); -- 4ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((NULL)) AND (((vt0.c0 IN ())))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((TIME(vt0.c0, vt0.c0, vt0.c0), 4.77942573E8, HEX(vt0.c0))) AND ((vt0.c0 COLLATE BINARY, ((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c0))))) FROM vt0; -- 0ms;
SELECT (((~ (NULL))) NOT BETWEEN (x'') AND ((NOT (vt0.c0)))) FROM vt0 GROUP BY json_insert((('nZ>G')*(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, '-1021645088'))), ((vt0.c0)OR(vt0.c0)), 'zw' COLLATE RTRIM, vt0.c0 COLLATE BINARY);SELECT ALL ((((vt0.c0) IS TRUE))-((((vt0.c0))==((vt0.c0))))), (((vt0.c0)&(vt0.c0)) IN ()), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<=(-2061942783)) FROM vt0; -- 0ms;
SELECT TIME(TOTAL(vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER)) FROM vt0; -- 0ms;
SELECT ALL ((LOWER(vt0.c0)) BETWEEN (((vt0.c0)>('0ᨉD<I'))) AND (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (CASE x'4fab'  WHEN ((('-1831648782'))>=((x'e902'))) THEN (('')/(x'')) END) LIMIT 1807187514 OFFSET 1715208796; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE BINARY AS NUMERIC) FROM vt0 WHERE (CASE WHEN ((((0.1340786787925533)AND(NULL)))OR(NULL)) THEN CAST(NULL AS NUMERIC) END); -- 0ms;
SELECT ALL (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-356045782' END)), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN ('GKMJCcil') AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY)), CAST(COUNT(*) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN HEX(vt0.c0) THEN COUNT(vt0.c0) WHEN TYPEOF(DISTINCT vt0.c0) THEN ((vt0.c0)&(vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((((((1483513591)OR('331066519')))AND(x'')))AND(x'')))AND(681827957)) THEN ((((((((x'')AND('0.0')))AND(NULL)))AND(NULL)))AND('700212768')) ELSE ((0.32855499813753763) BETWEEN ('檑>盽2') AND (-1968886049)) END) LIMIT 890229588; -- 0ms;
SELECT CAST(vt0.c0 AS NUMERIC) FROM vt0 WHERE (((CAST(x'' AS REAL))LIKE((NOT (0.8915976201114365))))); -- 0ms;
SELECT x'37af' FROM vt0; -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT vt0.c0))+(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), (vt0.c0 IN ((vt0.c0 IN ()))), ((CASE WHEN NULL THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(NULL)))AND(vt0.c0))) AND ((((vt0.c0))==((vt0.c0))))) FROM vt0 WHERE ((((0.2736063971141286 IN ()))AND(NULL))); -- 1ms;
SELECT DISTINCT ((((vt0.c0)IS(vt0.c0)))IS NOT(CAST(vt0.c0 AS NUMERIC))) FROM vt0 GROUP BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN IFNULL(DISTINCT vt0.c0, vt0.c0) WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) END; -- 0ms;
SELECT ALL (((('FALSE') NOT BETWEEN (vt0.c0) AND ('8-t hgv')))>=((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) IS FALSE)) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT LAG(((vt0.c0)*(CAST(vt0.c0 AS NUMERIC))), ((vt0.c0 COLLATE BINARY)GLOB((vt0.c0 IN (vt0.c0)))), (((vt0.c0 IN (vt0.c0, vt0.c0)))*(((vt0.c0)<<(vt0.c0))))) OVER ( ROWS ((((vt0.c0)OR(((((x'')OR(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))) PRECEDING EXCLUDE GROUP) FROM vt0 WHERE (CASE (NULL IN (0.3368033618757431, 'L'))  WHEN LIKELIHOOD(1190439929, 0.40310265354235264) THEN (((0.2824916560904336, '383316199', '-1355565800'))<=((x'', NULL, NULL))) ELSE CASE WHEN NULL THEN 0.9511431703519001 END END); -- 0ms;
SELECT ALL ((((TRIM(DISTINCT vt0.c0, vt0.c0))OR(vt0.c0 COLLATE NOCASE)))AND((NOT (vt0.c0)))) FROM vt0 WHERE (183258486); -- 0ms;
SELECT DISTINCT LAG(CAST((vt0.c0 IN ()) AS NUMERIC), (SUBSTR(vt0.c0, vt0.c0) IN (vt0.c0 COLLATE RTRIM)), ((((((((((((vt0.c0 COLLATE RTRIM)OR(((((vt0.c0)OR(vt0.c0)))AND(-8.56173626E8)))))AND(CAST(vt0.c0 AS REAL))))OR((vt0.c0 IN ()))))AND(LAST_INSERT_ROWID())))OR((+ (vt0.c0)))))AND((- (vt0.c0))))) OVER (), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)%(TOTAL(vt0.c0))), (((vt0.c0))>((vt0.c0))) COLLATE RTRIM FROM vt0 WHERE (UNLIKELY((+ (NULL)))); -- 0ms;
SELECT DISTINCT x'' COLLATE BINARY COLLATE NOCASE FROM vt0 LIMIT -1262979951; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))LIKE(vt0.c0)) FROM vt0 ORDER BY NULLIF(DISTINCT '-331930476', ((vt0.c0)<>(vt0.c0))) ASC; -- 0ms;
SELECT DISTINCT COUNT(*), CAST((((vt0.c0))<=((vt0.c0))) AS REAL), ((NULL COLLATE BINARY)>=((((vt0.c0))>=((vt0.c0))))) FROM vt0 GROUP BY ((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)IS(x'c378')))))AND(vt0.c0)) HAVING ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))<>((+ (vt0.c0)))); -- 0ms;
SELECT DISTINCT CASE 0.7153921034626547 COLLATE NOCASE  WHEN vt0.c0 COLLATE BINARY THEN CHANGES() ELSE (- (vt0.c0)) END FROM vt0 LIMIT 780256436; -- 0ms;
SELECT ALL (((CAST(vt0.c0 AS NUMERIC)))!=(('B￿k\!o2' COLLATE BINARY))), ((AVG(vt0.c0)) ISNULL), ((((((((AVG(NULL))AND((vt0.c0 IN (0.23663502124607327)))))OR(vt0.c0)))AND(CAST(0xffffffff814dbc86 AS INTEGER))))OR(((vt0.c0)==(vt0.c0)))) FROM vt0 WHERE (CASE WHEN 0X15b198df COLLATE NOCASE THEN CAST(NULL AS REAL) ELSE LIKE(x'3897f3c8', NULL, 'j') END); -- 0ms;
SELECT DISTINCT AVG(ABS(DISTINCT vt0.c0)) FROM vt0; -- 0ms;
SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '1850502366' WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)OR(vt0.c0))))>((((vt0.c0)|(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((vt0.c0)<=(vt0.c0))))), ((((vt0.c0))>=((vt0.c0))) IN ()), CAST((((vt0.c0))=((vt0.c0))) AS REAL), COUNT(*) OVER (), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((~ ((+ (3.31066519E8))))); -- 2ms;
SELECT DISTINCT ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((1621072958)))) AND ((('2044764702')%(vt0.c0)))), ((((vt0.c0)/(vt0.c0))) ISNULL), ((((vt0.c0) IS TRUE))LIKE(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((+ (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT x'' FROM vt0; -- 0ms;
SELECT ((CAST(0X7f89a7f6 AS BLOB))<=(CAST(NULL AS TEXT))), ((SUM(vt0.c0))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), vt0.c0 FROM vt0 WHERE (((((TRIM(DISTINCT 0.359540829915143))OR((('盝Lt3')>(NULL)))))OR((- (0.7107859347127404))))) GROUP BY vt0.c0 HAVING CASE WHEN ((vt0.c0)>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN (('-387581510')-(vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (1.780106842E9)) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)AND(vt0.c0)) END ORDER BY ((vt0.c0 COLLATE RTRIM)|(COALESCE(DISTINCT vt0.c0, vt0.c0))) ASC; -- 0ms;
SELECT CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))>=(((vt0.c0)AND(vt0.c0)))), COALESCE((((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), ((vt0.c0) IS FALSE), ((((NOT ('700212768'))))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<=(((vt0.c0)GLOB(vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c0 IN (vt0.c0, vt0.c0)) THEN SUM(vt0.c0) ELSE vt0.c0 END, (((CAST(vt0.c0 AS INTEGER)))>((LIKELIHOOD(x'', 0.9453271687180486)))), x'' FROM vt0 WHERE ((((0.41102215297447453, 0.47508698766946933, x'761f')) BETWEEN ((2137869781, (((((((('-1060206811')OR(x'')))OR(x'')))AND('7%ᬚ瀁')))AND('-835109386')), '1336473410')) AND ((0Xffffffffcb8b63a6, x'd468' COLLATE BINARY, ((NULL)==(NULL)))))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END) FROM vt0; -- 1ms;
SELECT ALL UNLIKELY(DISTINCT (vt0.c0 IN ())) FROM vt0 GROUP BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE ((vt0.c0) NOT NULL) END; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND (((NOT (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 WHERE ((+ (0xffffffffe02b12a4 COLLATE BINARY))); -- 0ms;
SELECT ALL CASE (vt0.c0 IN ())  WHEN x'' THEN ((vt0.c0)IS(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END, CAST('-896684817' COLLATE NOCASE AS INTEGER), ((((vt0.c0 IN (x'8bd2', vt0.c0)), vt0.c0, (- (vt0.c0))))>=((x'' COLLATE BINARY, TOTAL(vt0.c0), ((vt0.c0)GLOB(vt0.c0))))) FROM vt0; -- 0ms;
SELECT SUM((~ (vt0.c0))) FROM vt0 WHERE (UNLIKELY((((0.5985395273115615))>=((0))))); -- 0ms;
SELECT DISTINCT NULLIF(((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ())) FROM vt0 WHERE (((NULL COLLATE BINARY)OR((('e7') NOT BETWEEN (0.23517828662049645) AND (x''))))); -- 0ms;
SELECT ALL (((('?')OR(NULL)))AND(((vt0.c0)<(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (NULL)) FROM vt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT ALL CASE COUNT(vt0.c0)  WHEN CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END THEN (~ (vt0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(vt0.c0 AS INTEGER) WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN x'' ELSE CAST(vt0.c0 AS NUMERIC) END FROM vt0; -- 0ms;
SELECT (((TOTAL('>p'), ((vt0.c0)<(vt0.c0)), NULL COLLATE BINARY))!=(((~ (x'')), vt0.c0, vt0.c0 COLLATE BINARY))) FROM vt0 WHERE (((('-335949599', x'', NULL)) NOT BETWEEN (((+ (0.966939343055839)), CAST(0.7790330633746183 AS NUMERIC), ((0.13267465975988335)||(0.28713587737099033)))) AND ((((((x'')OR(x'9a5a450b')))OR('-1803660040')), ((NULL) IS TRUE), (((-83170989))>((0.8925034334604246))))))); -- 1ms;
SELECT DISTINCT ((COUNT(vt0.c0))/(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((0.8542167416830077 COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT ((NULL COLLATE RTRIM) IS FALSE) FROM vt0 ORDER BY vt0.c0; -- 0ms;
SELECT GLOB(((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (NULL))), '-1519636495', (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), MIN(vt0.c0))) FROM vt0; -- 0ms;
SELECT ((((x'')AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0))<>((vt0.c0))))), NTILE(((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(INSTR(vt0.c0, 0x3a59ad0c))))AND(vt0.c0 COLLATE RTRIM))) OVER ( PARTITION BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((((((x'd8b3')AND(0xffffffffb23f1dda)))OR(UNLIKELY(vt0.c0))))AND(vt0.c0)))AND(((NULL) IS FALSE)))), ((COUNT(vt0.c0)) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (COALESCE((((((((((((('1173808552')OR('㰒x')))OR(NULL)))AND(0.6597201397723046)))AND('FALSE')))AND(x'')))OR(x'')), (+ (1215330002))));SELECT DISTINCT (((vt0.c0)+(vt0.c0)) IN ()) FROM vt0 ORDER BY x''  NULLS LAST; -- 0ms;
SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))IS NOT((+ (vt0.c0)))) FROM vt0 LIMIT -1393805528; -- 0ms;
SELECT DISTINCT 0.0017826007746475359 COLLATE BINARY FROM vt0 WHERE (((('	eD2E') NOT NULL) IN ((+ (0.08733659727106857))))); -- 0ms;
SELECT (((TOTAL(vt0.c0), ((0X47e69f1) NOT NULL), NULLIF(vt0.c0, vt0.c0)))<(((vt0.c0 IN (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0)|(vt0.c0))))), (((vt0.c0 IN (vt0.c0)))+(((vt0.c0)>>(x'69db7317')))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'0a96' THEN NULL ELSE vt0.c0 END)>=((vt0.c0 IN (vt0.c0)))) FROM vt0; -- 0ms;
SELECT NULL FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))>(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CAST(vt0.c0 AS BLOB))))) OVER (), ',r' COLLATE BINARY, LEAD(CASE WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (- (x'8d06980e')) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((NULL)LIKE((vt0.c0 IN (vt0.c0)))), (((+ (vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN ('\r') AND (vt0.c0))) AND (NULL))) OVER () FROM vt0; -- 0ms;
SELECT '0.40479973183886564' FROM vt0; -- 0ms;
SELECT ((COUNT(vt0.c0))<((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT LAG((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((NULL)<<(vt0.c0)))), (NOT (2.147177629E9)), ((vt0.c0 IN ()) IN ())) OVER () FROM vt0 ORDER BY ((((vt0.c0) IS TRUE)) IS FALSE)  NULLS LAST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST; -- 0ms;
SELECT ALL HEX(LOWER(vt0.c0)) FROM vt0 WHERE (((x'2173' COLLATE BINARY)||((~ (NULL))))) ORDER BY vt0.c0; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '843047632')) AND ((vt0.c0, vt0.c0, vt0.c0))))OR(1550498354)))OR(((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(0.7769589640617209)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CAST(((((0.13063428268646538)OR('460806738')))AND(7.92976487E8)) AS BLOB)); -- 0ms;
SELECT DISTINCT vt0.c0, json_array_length((vt0.c0 IN ()), CHAR(vt0.c0)), (((((vt0.c0))<((vt0.c0))))LIKE(vt0.c0)), -1791286187, IFNULL(((vt0.c0) NOTNULL), NULL) FROM vt0 WHERE ((((((0.7462778110425797) NOTNULL)))<=((((-1.921965794E9) NOT BETWEEN (NULL) AND (0.9132950316526436)))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) IS FALSE))OR((+ (vt0.c0)))))AND(SUM(vt0.c0))) FROM vt0 WHERE ((LIKELY(NULL) IN ('#SEAJ', ('|M' IN ())))); -- 1ms;
SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)|(vt0.c0)) END FROM vt0 GROUP BY (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)<=(vt0.c0))))) LIMIT 1279897706; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((((((x'c5c3')%(NULL)))OR(((((-7.85548022E8)OR(0.254999653007861)))AND('now7 P#m,	')))))AND((((NULL))<=((0.5517053167964678)))))); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c0)-(vt0.c0)))) FROM vt0 WHERE ((((((NULL)) NOT BETWEEN (('0.0')) AND ((x'76abaf8d')))) NOTNULL)) GROUP BY CAST((vt0.c0 IN ()) AS NUMERIC); -- 0ms;
SELECT ALL COUNT(*) OVER (), (((((-1408184716))>=((vt0.c0))))|(x'')), COUNT((('-1287498690')-(vt0.c0))) FROM vt0 WHERE ((('v#T8E') NOT BETWEEN ((x'' IN ())) AND ((0.8091880540766742 IN (0xffffffffb0d1e0fc))))); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN x'3f1f' THEN x'c062' WHEN x'9ccd' THEN 0.594278251482453 WHEN -8.5825413E8 THEN '4gꂂ(o?C' ELSE NULL END)OR(1.624831973E9 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT vt0.c0)) NOT BETWEEN ((((vt0.c0))==((vt0.c0)))) AND (AVG(vt0.c0))), SQLITE_COMPILEOPTION_USED(vt0.c0), (- ((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(LIKELIHOOD(DISTINCT vt0.c0, 0.7771237877128073)) OVER (), (+ (vt0.c0 COLLATE BINARY)), ((((((0.3999413258564838)OR(vt0.c0)))AND(vt0.c0))) NOTNULL) FROM vt0; -- 1ms;
SELECT DISTINCT 'j湩O3asi', SQLITE_SOURCE_ID(), ((((vt0.c0)OR(vt0.c0)))+(vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY COLLATE BINARY FROM vt0 ORDER BY (IFNULL(DISTINCT '-1079440097', vt0.c0) IN ((vt0.c0 IN ()))) ASC, ((vt0.c0 IN ()) IN ()) LIMIT -1148733333; -- 0ms;
SELECT LOWER((((vt0.c0))<=((vt0.c0)))) FROM vt0 WHERE (((0.5878161188426059)<>(-1885758299)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(((vt0.c0) IS TRUE))) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL), x'') OVER (), CAST('1413566720' AS TEXT), (((vt0.c0 IN (vt0.c0, vt0.c0)))LIKE(((vt0.c0) IS TRUE))) FROM vt0 WHERE ((((('1972018460') NOT NULL))+(NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((+ (vt0.c0)) IN ()) FROM vt0 WHERE (CAST(((NULL) NOT BETWEEN (x'') AND (x'')) AS BLOB)); -- 0ms;
SELECT DISTINCT (+ ((~ (vt0.c0)))), CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN json_patch(vt0.c0, vt0.c0) THEN TOTAL(vt0.c0) WHEN CASE vt0.c0  WHEN 0.254999653007861 THEN vt0.c0 END THEN CASE WHEN x'e253' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END END, ((vt0.c0) BETWEEN (vt0.c0) AND (0X4990eeac)) FROM vt0 WHERE (-1.684918369E9 COLLATE RTRIM) LIMIT -611472462;SELECT DISTINCT CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END, COUNT(*), ((NULL) ISNULL) FROM vt0; -- 0ms;
SELECT vt0.c0, MAX(x'' COLLATE BINARY) COLLATE BINARY, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(vt0.c0 AS BLOB))) FROM vt0; -- 1ms;
SELECT DISTINCT ((LIKELY(vt0.c0)) BETWEEN ((- (vt0.c0))) AND (MAX(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((NOT (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)|((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE (CAST('' AS NUMERIC)); -- 0ms;
SELECT (((~ (vt0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(x'0e2d'))) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE ((((+ (NULL))) IS FALSE)); -- 0ms;
