-- Time: 2024/06/07 15:13:45
-- Database: database91
-- Database version: 3.40.0
-- seed value: 417883491
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
ANALYZE vt0; -- 1ms;
ANALYZE vt0; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
CREATE TEMP TABLE t0 (c0 TEXT , c1 REAL , c2 TEXT ); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0X7fffffffffffffff); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''); -- 0ms;
CREATE UNIQUE INDEX i23 ON t0(((((c2) BETWEEN (c2) AND (c2))) IS FALSE) ASC,(NOT (((c1)<=(c2)))) DESC,(((((c2, c2, c2)) NOT BETWEEN ((c0, c0, c1)) AND ((c0, c1, c0)))) IS TRUE) COLLATE RTRIM DESC) WHERE (((((c0) NOT NULL)))<=((((c1) NOTNULL)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('cv'), (x''); -- 0ms;
ANALYZE i23; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1, c2) VALUES (0.9272650550551539, x'', '0.9272650550551539'), (0.9272650550551539, '-1193474477', -1.193474477E9), ('-26013573', x'b262', x''); -- 0ms;
CREATE INDEX i46 ON t0(CAST(((((c0)AND('-478503984')))OR(c2)) AS TEXT) COLLATE BINARY DESC,CAST((c2 IN (-2.6013573E7)) AS INTEGER) ASC,((((c0)==(c2)))==(CAST(c1 AS REAL))) COLLATE BINARY DESC) WHERE ((NULLIF(DISTINCT c2, c1)) BETWEEN (c2 COLLATE BINARY) AND (((c1) IS TRUE))); -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(-26013573, 0.7832073949837143, -1006414661) WHERE ((((vt0.c0) NOTNULL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
CREATE INDEX IF NOT EXISTS i97 ON t0(((c2 COLLATE NOCASE)||(((c0) NOT NULL))) DESC,c1,((((((c2)IS(c1)))OR(c0 COLLATE RTRIM)))AND(NULL)) COLLATE RTRIM ASC) WHERE (~ (-1.193474477E9)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (NULL), (-1006414661); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1365913214); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'6b1c24cf'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c39; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 INT ); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (0.06614757505893509), (-26013573), (0.8575325336776988), (''); -- 0ms;
PRAGMA temp.threads; -- 0ms;
DROP INDEX IF EXISTS "i97"; -- 0ms;
PRAGMA short_column_names; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA locking_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c2) VALUES ('P''', '?', x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0(c5, c1, c3, c0, c2) VALUES (0xffffffff98004aad, '', '', x'', ((('-819898880'))>(('zz'))) COLLATE RTRIM), ('52[I2', NULL, x'', x'', -593789413), ('ANSY', NULL, x'f962280a3009', x'', x'cdc3'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34699'); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES ('}oc!#', '2129208859'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (2.129208859E9, -2.097943288E9, NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-2.6013573E7); -- 1ms;
PRAGMA temp.cache_spill = -3859068784085040819; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xffffffffb8dd0653); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-1650755151,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1006414661);\n; -- 1ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('-1744811347'); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-488197703,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (''); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=0.9646474403615625, c0=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-606818378,7');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1840507823); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19872'); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1870011123); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('})?Cl	u骃'); -- 1ms;
CREATE VIEW v0(c0) AS SELECT ALL CASE WHEN (~ (vt0.c0)) THEN (+ (vt0.c0)) END FROM vt0; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF DELETE ON v0 WHEN ('u{_fpx%i' IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS BLOB))) BEGIN DELETE FROM vt0 WHERE CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT);UPDATE OR FAIL vt0 SET (c0)=(NULL) WHERE ABS(vt0.c0);END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.423614994373965), (0.9424281494612615), (NULL); -- 0ms;
UPDATE OR FAIL vt0 SET c0=x''; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.24799833606717547); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-819898880 unordered noskipscan'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'af05'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (- (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)), LAG((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((~ (vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))), LIKELIHOOD(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8575325336776988)), 0.33536042162251456), json_type(((vt0.c0)>(vt0.c0)))) OVER (), ((CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)+(CAST(vt0.c0 AS NUMERIC))) FROM vt0;SELECT CASE ((vt0.c0)|(vt0.c0))  WHEN ((v0.c0)||(v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END ELSE ((v0.c0)>>(vt0.c0)) END, CASE v0.c0  WHEN ((vt0.c0)-('m')) THEN TRIM(DISTINCT v0.c0) ELSE (- (NULL)) END, IFNULL(DISTINCT NULL, vt0.c0) FROM v0 NOT INDEXED WHERE (CAST((+ (x'')) AS REAL));SELECT (vt0.c0 IN ()) COLLATE BINARY FROM vt0, v0; -- 0ms;
SELECT ALL v0.c0 FROM vt0, v0; -- 0ms;
SELECT CASE CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN CAST(v0.c0 AS NUMERIC) THEN CAST(v0.c0 AS BLOB) ELSE ((v0.c0) BETWEEN (NULL) AND (x'')) END FROM v0 WHERE (((LIKELIHOOD(DISTINCT 'N0~>K6d', 0.3967833726897426)) BETWEEN (((NULL)LIKE(NULL))) AND (CAST(-5.93789413E8 AS REAL))));SELECT PRINTF(CAST(vt0.c0 AS NUMERIC), vt0.c0, JULIANDAY(v0.c0, vt0.c0, '295176084', vt0.c0, v0.c0), GROUP_CONCAT(vt0.c0), ((v0.c0) IS FALSE)), GROUP_CONCAT(SUM(vt0.c0)) COLLATE NOCASE, (~ (MIN(v0.c0))) FROM v0, vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (x'') AND (0.6559447515204907)) THEN CASE WHEN 2129208859 THEN '-527066493' WHEN 'w6\Oh' THEN '0' WHEN '+' THEN 0.305569294100116 ELSE x'' END WHEN ((x'fd75') BETWEEN (-4.78503984E8) AND (NULL)) THEN 0.423614994373965 WHEN ((((((((NULL)OR(0.1267419839274796)))OR(NULL)))OR('')))AND(NULL)) THEN (('2129208859')GLOB(0.38107931983920795)) WHEN ((((((((0.8402338469691492)AND('0.06614757505893509')))OR('-488197703')))OR('')))OR('+')) THEN CAST('qE' AS NUMERIC) WHEN ((NULL) IS TRUE) THEN x'' COLLATE RTRIM ELSE (((('2129208859')AND(0.7316074901938765)))OR(NULL)) END);SELECT ALL (x'0fbc2a75' IN (((x'b127')<<(v0.c0)), GROUP_CONCAT(vt0.c0))) FROM v0 GROUP BY (((v0.c0)) NOT BETWEEN ((x'')) AND ((CAST(v0.c0 AS TEXT)))) HAVING '' COLLATE NOCASE;SELECT DISTINCT (((((vt0.c0)|(vt0.c0))))>(((v0.c0 IN ())))), IFNULL(CAST(vt0.c0 AS TEXT), CAST(v0.c0 AS REAL)), vt0.c0 FROM vt0 WHERE ((- ('')) COLLATE NOCASE);SELECT AVG(CAST(vt0.c0 AS TEXT)) FROM v0 WHERE (CASE (('1067510235') BETWEEN ('537326830') AND (x'57b4'))  WHEN CASE WHEN '?}_9JKOBa' THEN NULL ELSE x'9088' END THEN CASE WHEN 117636345 THEN 0.47261622922617175 WHEN 'p''' THEN '' WHEN '+' THEN '' ELSE NULL END END) ORDER BY CASE WHEN ((vt0.c0)&(v0.c0)) THEN 'Y*4zT{' ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) END  NULLS LAST, (((('-606818378')*(v0.c0))) ISNULL);SELECT DISTINCT 0.7832073949837143, TRIM(0.423614994373965, ((v0.c0) NOT NULL)), (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))*(AVG(vt0.c0))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)/(v0.c0))) FROM v0, vt0 WHERE (IFNULL(0Xffffffff82f3ed08 COLLATE BINARY, SQLITE_COMPILEOPTION_USED(0Xffffffff9445996c))); -- 0ms;
SELECT ALL v0.c0 FROM vt0 WHERE (((CASE WHEN '' THEN -819898880 WHEN x'd0ea' THEN NULL WHEN '	v%' THEN -1695096253 END) IS TRUE));SELECT ALL x'' FROM v0 WHERE (0.8989736208406235); -- 0ms;
SELECT ALL GROUP_CONCAT(((((v0.c0)OR(vt0.c0)))OR(vt0.c0))) FROM v0;SELECT (+ (CAST(v0.c0 AS REAL))) FROM v0 WHERE (CAST(CAST('2\n' AS REAL) AS REAL)); -- 0ms;
SELECT DISTINCT LAG(HEX(DISTINCT v0.c0 COLLATE RTRIM), ((v0.c0)OR(v0.c0)) COLLATE RTRIM, ((((v0.c0)>>(v0.c0))) NOTNULL)) OVER () FROM v0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 1ms;
SELECT ALL ((((((((0.77675263919704)OR((v0.c0 IN ()))))AND(((v0.c0)-(vt0.c0)))))AND((NOT (vt0.c0)))))OR(AVG(v0.c0))) FROM vt0 WHERE ((((('#)f') NOTNULL)) NOT NULL));SELECT ALL '-1695096253' FROM v0, vt0 LIMIT 465112858; -- 0ms;
SELECT DISTINCT LENGTH(AVG(vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))GLOB(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE 1537586249 END)) FROM vt0, v0 WHERE ((('-1466710421') BETWEEN (NULL) AND ('')) COLLATE RTRIM COLLATE RTRIM) ORDER BY (((CAST('*E' AS NUMERIC)))<((((0xfffffffff563ae20)>>(vt0.c0))))) ASC  NULLS LAST; -- 0ms;
SELECT (SQLITE_COMPILEOPTION_USED(vt0.c0) IN ()) FROM v0, vt0 WHERE ((((((NULL))==(('1.jr')))) NOT NULL)); -- 0ms;
SELECT NTH_VALUE(((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) ISNULL)) OVER () FROM vt0, v0 WHERE (NULL) LIMIT 1560438863; -- 0ms;
SELECT NTILE(((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>(TRIM(DISTINCT 1.537586249E9, vt0.c0)))) OVER () FROM vt0 WHERE ((((('')OR(TYPEOF(NULL))))AND(TRIM(NULL, '-478503984')))); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(vt0.c0, 0.7280230401023635))*(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))), vt0.c0, (((vt0.c0) IS FALSE) IN ()) FROM vt0, v0 GROUP BY vt0.c0; -- 0ms;
SELECT DISTINCT (+ ((((v0.c0, vt0.c0, NULL)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))) FROM vt0 WHERE (TRIM((('zz') IS TRUE))) GROUP BY TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))), (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END IN ()), TYPEOF((+ (v0.c0))) ORDER BY ((NOT (vt0.c0)) IN ()) LIMIT 514972628;SELECT DISTINCT CASE AVG(v0.c0)  WHEN MAX(v0.c0) THEN (('') IS FALSE) WHEN ('-788143977' IN ()) THEN CAST(vt0.c0 AS INTEGER) WHEN (v0.c0 IN (0.037647566364832574)) THEN (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))) ELSE NULL END FROM v0 WHERE (((((((((((-375405951)OR(0.7832073949837143)))OR(0.9914146995688176)))OR(NULL)))AND(0.054803149336512424)))==(CAST(NULL AS NUMERIC)))) LIMIT -1650755151;SELECT DISTINCT v0.c0, COUNT(*), ((((v0.c0)|(v0.c0)))OR(CASE WHEN vt0.c0 THEN x'' ELSE v0.c0 END)) FROM v0 GROUP BY ((((CAST(v0.c0 AS NUMERIC))AND(CAST(v0.c0 AS INTEGER))))AND(((vt0.c0)<(v0.c0)))) LIMIT -1804781770;SELECT ((((((((0Xffffffffe0959a83)AND(v0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY FROM vt0;SELECT DISTINCT PERCENT_RANK() OVER (), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), ((1463608497)|((v0.c0 IN ()))) FROM v0;SELECT DISTINCT (NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM vt0, v0 GROUP BY CAST('(Y+JB1e' AS REAL) HAVING (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ORDER BY (((v0.c0, v0.c0, vt0.c0))<((v0.c0, x'', v0.c0))) COLLATE NOCASE DESC  NULLS LAST, ((((v0.c0 IN (v0.c0))))>(((vt0.c0 IN ())))); -- 0ms;
SELECT ALL v0.c0, (((v0.c0)) BETWEEN ((NULL)) AND ((v0.c0 COLLATE NOCASE))), v0.c0, ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)) COLLATE BINARY, ((vt0.c0 COLLATE BINARY)&(vt0.c0)) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB(v0.c0))) ISNULL) FROM vt0, v0 WHERE ((~ (((x'') NOT BETWEEN ('1560438863') AND ('cd'))))); -- 0ms;
SELECT DISTINCT ((v0.c0) IS FALSE) COLLATE RTRIM FROM v0; -- 0ms;
SELECT ALL ((((MIN(v0.c0))OR((((vt0.c0, v0.c0, 0.580057031460656)) BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, v0.c0))))))AND(NULL)) FROM v0, vt0; -- 0ms;
SELECT DISTINCT (((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), HEX(v0.c0)))<((((vt0.c0) ISNULL), ((v0.c0) NOTNULL), ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0, v0 LIMIT 2129208859 OFFSET 1078320197; -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)&(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END FROM v0, vt0; -- 0ms;
SELECT ALL ((v0.c0)OR(v0.c0)) COLLATE NOCASE, (- (((vt0.c0)IS NOT(v0.c0)))), v0.c0, CAST(v0.c0 COLLATE RTRIM AS BLOB), CASE -1.006414661E9  WHEN ((vt0.c0)*(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE -1e500 END FROM v0;SELECT ALL GROUP_CONCAT((~ (vt0.c0))), (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((SUM(x'')))), ((((- (vt0.c0))))=((((((vt0.c0)AND(v0.c0)))OR(v0.c0))))) FROM vt0, v0 WHERE ((('-1804781770') IS FALSE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT vt0.c0, v0.c0, ((((v0.c0) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(NULL AS INTEGER))) FROM v0, vt0; -- 1ms;
SELECT ALL CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((x'') BETWEEN (v0.c0) AND (vt0.c0)) ELSE ((vt0.c0) IS TRUE) END FROM v0, vt0; -- 0ms;
SELECT DISTINCT CASE ((v0.c0)+(v0.c0))  WHEN json_insert(vt0.c0, v0.c0, v0.c0) THEN ((vt0.c0)%(vt0.c0)) ELSE CAST(vt0.c0 AS BLOB) END, (NOT ((+ (v0.c0)))), (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) IN (x'')) FROM v0;SELECT CASE (v0.c0 IN ())  WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN CAST(-4.78503984E8 AS BLOB) END FROM vt0, v0; -- 0ms;
SELECT (- (TOTAL(v0.c0))), x'', CAST(((((((((x'')AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS BLOB) FROM v0 WHERE (((HEX(DISTINCT NULL)) NOT BETWEEN ((NOT ('1078320197'))) AND (((x'')<<('E~')))));SELECT ALL CASE WHEN ((vt0.c0)/(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN ((v0.c0)/(v0.c0)) THEN 'jK' ELSE json_type(v0.c0) END, (v0.c0 IN ()) COLLATE BINARY, CASE ((vt0.c0) IS TRUE)  WHEN ((v0.c0) NOTNULL) THEN CHAR(v0.c0, v0.c0, v0.c0) WHEN ((vt0.c0)OR(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN '' THEN ((vt0.c0)/(vt0.c0)) ELSE ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END FROM v0, vt0 WHERE ((- ((((117636345, 0.14026541559943162, 0.7075733778500887, '-26013573', '-488197703')) BETWEEN ((x'', x'', '465112858', 0.7754528271720927, x'')) AND (('817463005', 0.9646474403615625, '', NULL, NULL)))))) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END, 0.0445287375635709) DESC; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((-7.88143977E8) NOTNULL), AVG(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) OVER (), CAST((vt0.c0 IN (v0.c0)) AS TEXT), CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL) FROM vt0, v0 WHERE (((((TRIM(x''))OR(CASE WHEN '?' THEN NULL WHEN '0.9241370101440876' THEN 0.1740490938783571 WHEN 0.7695858671396804 THEN x'' END)))OR(((((((((0.7852842412502651)OR(NULL)))OR(1649950381)))AND(NULL)))OR('s]JB'))))) LIMIT 1067510235 OFFSET 514972628; -- 1ms;
SELECT (((vt0.c0 IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN LIKELIHOOD(v0.c0, 0.14229507792818963) THEN CASE NULL  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' ELSE v0.c0 END ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) END, ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))>=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) FROM v0;SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE BINARY FROM vt0 WHERE (0.5201343013203373);SELECT DISTINCT (- ((- (v0.c0)))) FROM vt0 WHERE (((CASE WHEN 0.12957659430757662 THEN NULL END)IS((((('')OR(NULL)))AND(NULL)))));SELECT DISTINCT v0.c0, ((((LIKELIHOOD(v0.c0, 0.0019018721019778972))AND(UPPER(vt0.c0))))AND(((vt0.c0) NOTNULL))), ((((v0.c0)/(v0.c0)))<>(0.0032624165598809096)) FROM vt0 LIMIT 502095070 OFFSET -1804781770;SELECT CAST(highlight(vt0.c0, v0.c0, v0.c0, NULL) AS NUMERIC) FROM v0;SELECT ALL UNLIKELY(CASE v0.c0  WHEN 0.04438365665111066 THEN vt0.c0 ELSE v0.c0 END), CASE v0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (v0.c0)) THEN (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END, (((((vt0.c0) IS TRUE)))>=((NULL COLLATE BINARY))) FROM vt0, v0 WHERE (CAST((('A\rD㰿') NOTNULL) AS TEXT)) ORDER BY NULL  NULLS FIRST; -- 1ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS NUMERIC)), ((v0.c0 COLLATE RTRIM) NOTNULL), CAST(((vt0.c0)/(vt0.c0)) AS TEXT) FROM vt0;SELECT ALL CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN ((0.19570408716169985)&(v0.c0)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN '0.054803149336512424' THEN (((v0.c0, vt0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) WHEN GROUP_CONCAT(v0.c0) THEN (~ (vt0.c0)) ELSE ((x'') ISNULL) END FROM vt0 CROSS JOIN v0 ON (((((v0.c0) ISNULL)))=((vt0.c0 COLLATE RTRIM))) WHERE ((((((((NULL))>((NULL))))AND(((((NULL)OR(817463005)))OR(1e500)))))OR(((',u6륕Q') NOT BETWEEN (NULL) AND ('1560438863'))))); -- 0ms;
SELECT DISTINCT (v0.c0 COLLATE NOCASE IN ((((vt0.c0))>((vt0.c0))), ((']}|볰(<PE')%(v0.c0)))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((v0.c0) BETWEEN (vt0.c0) AND (0.4494266349189586)))>=(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT NULL))|(vt0.c0 COLLATE RTRIM)) FROM vt0, v0; -- 0ms;
SELECT AVG((vt0.c0 IN ())) OVER (), TRIM(SUM(v0.c0), ((((v0.c0)AND(vt0.c0)))OR(v0.c0))), ((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.07785286942542169 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)==(vt0.c0))) AND (((v0.c0)<(x'')))) FROM vt0, v0 WHERE (((0.1310641143047636)IS NOT(((-1.650755151E9)%(''))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND ((CAST(v0.c0 AS REAL)))), AVG(((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) OVER (), LIKELY(DISTINCT ((v0.c0) NOTNULL)), CAST(x'' AS REAL), (NOT (((vt0.c0)IS('754483596')))) FROM vt0 WHERE ((+ ((x'' IN ())))) GROUP BY CASE WHEN CAST(-488197703 AS REAL) THEN (((vt0.c0))>((v0.c0))) ELSE CAST(NULL AS TEXT) END, vt0.c0, CASE WHEN (('502095070')&(v0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE CAST(v0.c0 AS REAL) END;SELECT COALESCE((((vt0.c0))>((vt0.c0))), vt0.c0 COLLATE BINARY, ((vt0.c0)IS NOT(vt0.c0)), ((vt0.c0)||(0.9616215105998607)), ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)), ((vt0.c0) NOTNULL)), CAST(COUNT(vt0.c0) AS REAL), (((MAX(v0.c0), ((v0.c0)<=(vt0.c0)), 0.584087186805575))<((LOWER(DISTINCT vt0.c0), COUNT(v0.c0), ((v0.c0)*(vt0.c0))))) FROM vt0 WHERE (CASE WHEN ('-1676966187' IN (0.07978045303466941, NULL)) THEN UNLIKELY(DISTINCT NULL) WHEN ((('JM52')) BETWEEN ((NULL)) AND ((NULL))) THEN 'ansy' WHEN ((((0.24541768620594762)AND(0.728073676993206)))AND('-331229739')) THEN NULL END);SELECT ALL CASE ((vt0.c0)|(vt0.c0))  WHEN ((x'6873')OR(v0.c0)) THEN COUNT(*) WHEN ((v0.c0) NOT NULL) THEN (v0.c0 IN (vt0.c0, vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) THEN ((v0.c0) IS TRUE) END, (- (LTRIM(vt0.c0))), (v0.c0 COLLATE BINARY IN (v0.c0)) FROM vt0, v0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM v0 WHERE (CAST(NULL COLLATE RTRIM AS REAL)) LIMIT -901246075 OFFSET 502095070; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT NULL) AS REAL), COUNT(*) OVER (), (- (((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) FROM v0, vt0 WHERE ((('-1466710421' COLLATE BINARY) IS TRUE)); -- 1ms;
SELECT 0.7695858671396804 FROM vt0 WHERE ((((((x'b281', x'', x'', 'Q ', NULL)) BETWEEN ((-1318897262, NULL, '-901246075', x'794a', NULL)) AND ((NULL, 1929591902, NULL, 'l(', NULL))))|(((((0.7456951479003594)AND(NULL)))OR(x''))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(v0.c0)))AND(((vt0.c0)>=(v0.c0)))) FROM v0 WHERE (((((CASE NULL  WHEN 0.9400216745498808 THEN 0.15445771703753608 WHEN 0.6324289620265082 THEN 0Xffffffff9f41affe WHEN -819898880 THEN NULL WHEN x'' THEN '-527066493' WHEN -1561151199 THEN '-+z8' END)OR(x'')))OR(((x'')GLOB(x'ab8c')))));SELECT TOTAL(((vt0.c0) ISNULL)) FROM vt0 WHERE (CAST(((0xffffffff946d3736)>=('1463608497')) AS NUMERIC)); -- 0ms;
SELECT (((((- (vt0.c0)))AND(((v0.c0) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((0.16537358567200644)) NOT BETWEEN ((((NULL)IS NOT(NULL)))) AND ((NULL COLLATE BINARY))));SELECT ALL ((((0.20517307823189568 IN (v0.c0)), ((v0.c0)OR(v0.c0)), (((vt0.c0))<((vt0.c0)))))<=((((((v0.c0)OR(vt0.c0)))AND(v0.c0)), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), vt0.c0))), v0.c0, GROUP_CONCAT(((v0.c0) NOT NULL)) OVER () FROM vt0 WHERE (CASE WHEN NULL THEN '-488197703' WHEN 0.48555219983148945 THEN 0.006958076367650445 WHEN 1.649950381E9 THEN '-1466710421' END COLLATE RTRIM);SELECT DISTINCT CAST(((v0.c0)||(vt0.c0)) AS BLOB) FROM vt0;SELECT ALL ((CAST(vt0.c0 AS INTEGER))-(((0.7202281377344458) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM v0, vt0 WHERE (((((('ANSY')>=(''))))=((((((x'b9c7')AND(NULL)))OR(-606818378)))))); -- 0ms;
SELECT json_valid((+ (v0.c0))) FROM v0 GROUP BY SQLITE_SOURCE_ID(), 'Y&I' COLLATE NOCASE, (((v0.c0 IN ()))|(((NULL)=(v0.c0)))) ORDER BY '~葉'  NULLS LAST; -- 0ms;
SELECT ALL CAST(vt0.c0 AS NUMERIC) FROM vt0, v0; -- 1ms;
SELECT DISTINCT ((TOTAL(vt0.c0))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM v0, vt0 WHERE (CAST(NULL AS REAL) COLLATE NOCASE COLLATE NOCASE) GROUP BY ((((vt0.c0)||(v0.c0))) BETWEEN ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, NULL, vt0.c0)))) AND (CAST(v0.c0 AS TEXT))) HAVING '\nf2ob.2/' ORDER BY v0.c0 DESC; -- 0ms;
SELECT DISTINCT CASE (NOT (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN (((((((('2074237867')AND(v0.c0)))AND(x'')))OR(v0.c0)))OR(vt0.c0)) ELSE ABS(vt0.c0) END, ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)<<(0.8628111142736282)), CAST((NOT (v0.c0)) AS INTEGER) FROM v0;SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))<<((vt0.c0 IN ()))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))), x'', (NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0)))), ((json_array_length('-1143695906'))LIKE(((vt0.c0)IS(vt0.c0)))), CASE WHEN (v0.c0 IN ()) THEN json_insert(v0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0) ELSE ((vt0.c0) NOT NULL) END FROM v0, vt0 WHERE ((((NULL)) NOT BETWEEN ((CAST(NULL AS NUMERIC))) AND ((('' IN ('/&')))))); -- 0ms;
SELECT ((((json_object(vt0.c0, 0.6299985807074903, v0.c0, v0.c0))AND(((v0.c0)IS NOT(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM v0, vt0;SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC))<('V*ii')) FROM v0;SELECT DISTINCT v0.c0 COLLATE NOCASE FROM vt0;SELECT ALL COUNT(0Xffffffffbbeb8b92) FILTER(WHERE ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)&(vt0.c0))))) OVER ( PARTITION BY (('QB迌q')|((v0.c0 IN (NULL)))), TRIM(DISTINCT (((v0.c0))<((vt0.c0))))), (((0.2834783868572427)) BETWEEN ((((v0.c0)IS NOT(vt0.c0)))) AND (((((v0.c0, v0.c0, vt0.c0))==((vt0.c0, v0.c0, v0.c0)))))), ((((v0.c0 COLLATE BINARY)OR((v0.c0 IN ()))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)))) FROM v0, vt0 WHERE ((NOT (((NULL) NOT BETWEEN ('2-鯐') AND (0.29901994047072866))))) GROUP BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c0)&(vt0.c0)) ELSE (((v0.c0))>((NULL))) END, NULL, ((((((vt0.c0) IS TRUE))AND(CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN v0.c0 END)) HAVING x'7e5f'; -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (0.9646474403615625) AND (0xffffffff86669ae1)) FROM vt0, v0 WHERE (((NULL)>=((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((v0.c0)LIKE(vt0.c0)) COLLATE RTRIM, ((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN 0.7707087806863296 THEN '0.7075733778500887' WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(((vt0.c0)-(vt0.c0)))), ((((v0.c0 COLLATE BINARY)OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))))AND(v0.c0 COLLATE NOCASE)), LIKELIHOOD(((0Xffffffffa844f52b)OR(x'd8b8')), 0.997510048701082), ABS(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) FROM vt0 WHERE (((((((0.22305795568413989)AND(0.8354263909136289)))OR(NULL))) NOT NULL));SELECT (+ (UPPER(v0.c0))), (- (TRIM(DISTINCT vt0.c0, vt0.c0))), x'' FROM vt0;SELECT DISTINCT COUNT(*) FROM v0 WHERE (CAST(1779361411 AS TEXT)); -- 0ms;
SELECT ((GROUP_CONCAT(vt0.c0))GLOB(AVG(v0.c0))) FROM vt0, v0 WHERE ((((((0.4193987988680107) NOT BETWEEN (x'4b94') AND ('-424141636'))))<=((NULL COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)IS NOT(vt0.c0)) AS TEXT) FROM vt0, v0 GROUP BY (CAST(vt0.c0 AS INTEGER) IN ((v0.c0 IN ()))); -- 0ms;
SELECT ((0X21782bb9)==((((x'1224'))=((v0.c0))))), LAG((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), (((vt0.c0))>=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), HEX(CAST(x'' AS TEXT))) OVER ( ROWS BETWEEN LIKELY(v0.c0) COLLATE NOCASE FOLLOWING AND (('0.8575325336776988') NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((NOT (vt0.c0)))) PRECEDING EXCLUDE CURRENT ROW), ((LIKELIHOOD(v0.c0, 0.7450958574187613)) NOT BETWEEN (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((+ (vt0.c0)))) FROM vt0 WHERE (NULL);SELECT ALL CASE (+ (x''))  WHEN NULL THEN (- (vt0.c0)) END FROM v0;SELECT ALL ((((v0.c0)%(vt0.c0))) NOT NULL), SUM(((vt0.c0)AND(v0.c0))) OVER (), (((v0.c0 IN ()))IS(CAST(vt0.c0 AS NUMERIC))) FROM v0 WHERE (((CASE NULL  WHEN '1' THEN '-979286586' END)%(((x'')-('117636345')))));SELECT ALL (- (((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) FROM v0;SELECT ALL ((vt0.c0)&((v0.c0 IN (v0.c0)))) FROM vt0 WHERE (CAST(((('-469943227'))>=((NULL))) AS TEXT));SELECT DISTINCT (NOT (vt0.c0 COLLATE BINARY)) FROM vt0, v0; -- 1ms;
SELECT DISTINCT COUNT(*) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM v0, vt0 WHERE (((((x'3891') NOT BETWEEN (NULL) AND (0xffffffffc0dc4381)))LIKE('0.24799833606717547' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)||(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) NOT NULL))) FROM v0;SELECT DISTINCT HEX(DISTINCT PRINTF(v0.c0)), ((0.9646474403615625)>=(json_array_length(v0.c0))), vt0.c0 FROM vt0 WHERE (NULL);SELECT ALL ((((((v0.c0)GLOB(vt0.c0)))AND(x'')))OR(-1865062200)) FROM vt0;SELECT (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))IS((vt0.c0 IN ()))) FROM vt0, v0 GROUP BY (((((- (v0.c0)))AND(x'')))AND(((((vt0.c0)OR(v0.c0)))AND('1.JR')))), CAST((vt0.c0 IN ()) AS BLOB), ((vt0.c0)<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING v0.c0; -- 0ms;
SELECT DISTINCT CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN COUNT(v0.c0) THEN CAST(vt0.c0 AS TEXT) WHEN v0.c0 THEN vt0.c0 WHEN TOTAL(v0.c0) THEN v0.c0 WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c0 AS NUMERIC) WHEN CAST(vt0.c0 AS TEXT) THEN (((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0))) END FROM vt0 WHERE ((((x'')IS(-1780019980)) IN (((x'')GLOB(0.19927591721146998)))));SELECT ALL (((v0.c0 IN (v0.c0, v0.c0)))+(vt0.c0 COLLATE BINARY)), ((x'')LIKE(GROUP_CONCAT(v0.c0))), (MIN(v0.c0) IN ()) FROM v0;SELECT COUNT((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) FROM vt0;SELECT DISTINCT SUM(TRIM(vt0.c0, v0.c0)) OVER ( PARTITION BY (NOT ((vt0.c0 IN (vt0.c0)))), (((+ (v0.c0)))|(((vt0.c0)>=(vt0.c0))))) FROM vt0, v0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (0.3339086674366012) AND (NULL)) THEN ((x'')AND(NULL)) WHEN ((NULL) NOT NULL) THEN 0.05167150127499298 COLLATE RTRIM WHEN CASE x'9d89b4bb'  WHEN '-1008730585' THEN 0.2834783868572427 END THEN '' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT ((((0.07978045303466941)IS NOT(v0.c0))) BETWEEN (0.9914190617011125) AND (((v0.c0) NOTNULL))), (((vt0.c0)) BETWEEN (((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0))))) AND ((TYPEOF(v0.c0)))), CASE 0.4924258383696112  WHEN ((v0.c0)-(v0.c0)) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0)*(vt0.c0)) THEN ((v0.c0)<=(v0.c0)) WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END FROM v0, vt0 WHERE ('0.22305795568413989') GROUP BY CASE ((v0.c0)>>(vt0.c0))  WHEN LIKELY(DISTINCT vt0.c0) THEN vt0.c0 ELSE 0.30919158051020235 END, ((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))/(((((((((v0.c0)AND(0xffffffffa463d481)))AND(v0.c0)))AND(-1.008730585E9)))AND(v0.c0)))), v0.c0, (((vt0.c0, CASE x'31c6'  WHEN v0.c0 THEN 0.07366504829827114 ELSE vt0.c0 END, (vt0.c0 IN ()), MIN(v0.c0, vt0.c0), NULL))=(((~ ('y')), ((v0.c0)==(vt0.c0)), ((v0.c0) IS FALSE), 637350374, LIKELY(DISTINCT vt0.c0)))), ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (LIKELY(DISTINCT vt0.c0)) AND (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)) ORDER BY (((v0.c0) ISNULL) IN ()) ASC; -- 1ms;
SELECT ALL ((((((((CAST(vt0.c0 AS REAL))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(CAST(v0.c0 AS INTEGER))))AND(COUNT(*))))AND(((vt0.c0)IS NOT(v0.c0)))) FROM vt0, v0 GROUP BY v0.c0 HAVING NULL; -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE BINARY)>=(MAX(v0.c0))) FROM v0 WHERE (((('-1006414661')) NOT BETWEEN (('821771327' COLLATE NOCASE)) AND (((-1318897262 IN ()))))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) FROM v0, vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT ((((((-1804781770))<=((v0.c0)))))<=((''))) FROM v0 WHERE (((('-478503984' IN (x'02e83df4'))) NOT BETWEEN (((((((((NULL)OR('-788143977')))AND(x'')))OR(0x3bd10dbd)))AND(NULL))) AND (HEX(DISTINCT 0.8906653402453657)))); -- 0ms;
SELECT DISTINCT (NOT (LIKELY(v0.c0))) FROM vt0 WHERE ((((NOT ('-469943227'))) ISNULL));SELECT DISTINCT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND (x'' COLLATE RTRIM)) FROM vt0 GROUP BY ((((((vt0.c0)OR(v0.c0)))OR(v0.c0))) BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((((vt0.c0)AND(v0.c0)))AND(v0.c0)))) ORDER BY (v0.c0 COLLATE BINARY IN ((vt0.c0 IN (vt0.c0, vt0.c0))))  NULLS LAST;SELECT DISTINCT ((((v0.c0)LIKE(vt0.c0))) NOT BETWEEN (COUNT(-2.097943288E9)) AND (NULLIF(v0.c0, v0.c0))) FROM vt0 WHERE ((- ((((0.46986419097596244)) NOT BETWEEN (('-555375848')) AND (('/8	'))))));SELECT v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY ((((NULL) ISNULL)) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0 COLLATE BINARY)), (((((vt0.c0))>((v0.c0))))==(((v0.c0) ISNULL))), ((CAST(vt0.c0 AS NUMERIC))AND(CASE WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) HAVING ((v0.c0)<(v0.c0)) COLLATE NOCASE; -- 0ms;
SELECT AVG(((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) OVER ( ORDER BY CASE (- (vt0.c0))  WHEN ((0xffffffff946d3736) IS TRUE) THEN ((x'') NOT BETWEEN (v0.c0) AND (v0.c0)) END DESC  NULLS FIRST), ((vt0.c0)IS(v0.c0)) COLLATE BINARY, CASE ((((v0.c0)OR(v0.c0)))AND(vt0.c0))  WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END THEN MIN(vt0.c0) ELSE COUNT(*) END FROM v0 GROUP BY ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE, ((((((v0.c0) IS FALSE))OR(((vt0.c0) NOTNULL))))OR(((((vt0.c0)OR(vt0.c0)))AND(NULL)))), CAST(v0.c0 AS BLOB) COLLATE RTRIM, ((((NULL)OR(v0.c0))) NOT BETWEEN (((v0.c0)<<(v0.c0))) AND ((((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))), v0.c0 ORDER BY NULL ASC;SELECT DISTINCT SUM(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) COLLATE RTRIM FROM v0, vt0; -- 1ms;
SELECT DISTINCT ((((((((vt0.c0)AND(((v0.c0) IS FALSE))))OR(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) FROM v0, vt0; -- 0ms;
SELECT TOTAL(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER () FROM v0 WHERE (CAST(((-950390865)-(x'1871c2cb')) AS TEXT));SELECT DISTINCT (NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)), (((v0.c0)>=(v0.c0)) IN (DATE(v0.c0, vt0.c0, v0.c0), x'')), ((((GROUP_CONCAT(v0.c0))OR(CAST(vt0.c0 AS BLOB))))OR(x'')), ((v0.c0 COLLATE BINARY) ISNULL), ((v0.c0 COLLATE RTRIM)>=((vt0.c0 IN ()))) FROM v0, vt0 WHERE (((0.26980977500147474 COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT ALL ((v0.c0) IS FALSE) COLLATE NOCASE FROM v0, vt0 WHERE ((((('^_')+('Fn[Z☳')))GLOB((((0Xffffffff9f41affe, '327458233', '')) NOT BETWEEN ((x'', NULL, '-576090164')) AND ((x'', '545141975', '1762179413')))))); -- 0ms;
SELECT ALL (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, 0Xffffffffdc9b7e1b)) AND ((v0.c0, '~m', vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((('-1143695906')OR(((vt0.c0) NOTNULL))))AND(NULL)) FROM v0 GROUP BY v0.c0 LIMIT -1676966187 OFFSET -950390865;SELECT ((((v0.c0) ISNULL))GLOB((((-1026327866)) BETWEEN ((v0.c0)) AND ((vt0.c0))))), (((((((vt0.c0)AND(v0.c0)))AND(vt0.c0))))=((v0.c0 COLLATE NOCASE))), SUM(((v0.c0)|(vt0.c0))) OVER ( ORDER BY (((((vt0.c0))>((v0.c0)))) NOTNULL) ASC  NULLS LAST) FROM v0, vt0; -- 1ms;
SELECT CASE (+ (vt0.c0))  WHEN ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)) THEN v0.c0 ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END FROM vt0, v0 WHERE (CASE ((NULL) NOT NULL)  WHEN ((x'') NOTNULL) THEN NULL COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT ((json_insert(v0.c0, vt0.c0, vt0.c0)) NOT NULL) FROM v0 WHERE (((0.42978573675322185) NOT BETWEEN (CASE 0.9309768841870939  WHEN '' THEN 'px⠿7fuD蛫4' END) AND (((2.129208859E9)*('7310204')))));SELECT ((((((vt0.c0)&(vt0.c0)))AND(((NULL) IS TRUE))))AND(COUNT(vt0.c0))) FROM vt0, v0 NOT INDEXED WHERE ((('-1462350925' COLLATE RTRIM)=(((0.4193987988680107) NOT BETWEEN (-1026327866) AND (0.020492384558378873))))) GROUP BY ((vt0.c0 IN ()) IN (x'')) LIMIT 1526772580; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, v0; -- 1ms;
SELECT ALL MAX(v0.c0), ((v0.c0)%(vt0.c0)) COLLATE NOCASE, AVG((v0.c0 IN ())) OVER () FROM v0 WHERE (CASE 0.0028653189554662672  WHEN CASE WHEN '-1438742853' THEN '讏|l讒-0)' END THEN x'' END);SELECT ALL (~ (((vt0.c0) NOTNULL))), v0.c0, (((- ('-2003149892'))) IS TRUE), CASE WHEN GROUP_CONCAT(-1055813592) THEN ((vt0.c0) IS FALSE) END, (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(0.3339086674366012)))OR(v0.c0)) IN (((v0.c0) NOTNULL))) FROM v0;SELECT (((vt0.c0)) NOT BETWEEN ((((v0.c0)>>(vt0.c0)))) AND ((AVG(0.19914043864699194)))) FROM vt0 GROUP BY CAST(((vt0.c0)-(v0.c0)) AS NUMERIC), ((((v0.c0) IS FALSE))=(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)), (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) BETWEEN (((vt0.c0) NOT NULL)) AND (CAST(vt0.c0 AS INTEGER))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (json_type(v0.c0)) AND (((((v0.c0)AND(vt0.c0)))AND(v0.c0)))), ((((vt0.c0)AND(v0.c0))) IS TRUE)  NULLS LAST;SELECT DISTINCT COUNT((- (v0.c0))) FROM v0, vt0 GROUP BY v0.c0 HAVING 0x6ff58b8f; -- 0ms;
SELECT ((((v0.c0)%(v0.c0)))LIKE(COUNT(*))) FROM v0; -- 0ms;
SELECT (CAST(v0.c0 AS BLOB) IN ()), (('-1650755151')>=(((0.7774347167119456)<(v0.c0)))), (((vt0.c0 IN ())) BETWEEN (x'') AND (((v0.c0) ISNULL))) FROM v0, vt0 WHERE (((((CAST('-1870183846' AS NUMERIC))OR(x'8c68')))AND((('514972628') NOT BETWEEN (x'f096') AND ('nⱆB8'))))); -- 0ms;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((((('nGY&*Tc*z')<=(NULL)))AND(((NULL) BETWEEN (x'') AND (NULL))))); -- 1ms;
SELECT ALL ((((~ (v0.c0)), (vt0.c0 IN ()), ((vt0.c0)>=(vt0.c0))))==((CAST(v0.c0 AS TEXT), CAST(v0.c0 AS NUMERIC), vt0.c0 COLLATE RTRIM))) FROM v0 WHERE ((NOT ('0.584087186805575'))) GROUP BY ((vt0.c0) IS FALSE) COLLATE RTRIM;SELECT ALL CAST((+ (vt0.c0)) AS INTEGER), ((CAST(v0.c0 AS REAL))GLOB((+ ('')))), (NOT (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) FROM vt0 WHERE (NULL);SELECT DISTINCT ((CASE WHEN '17236723' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) IS FALSE) FROM v0, vt0 WHERE ((~ ((NOT ('1720314813'))))) ORDER BY (((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)), 1873557400)) AND ((LIKE(v0.c0, v0.c0, '-'), NULL, ((vt0.c0) BETWEEN (vt0.c0) AND (x''))))), v0.c0 COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST, 0.43559761118892104 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)>=((NOT (vt0.c0)))), ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) FROM v0;SELECT ALL ((+ (vt0.c0)) IN ()) FROM v0, vt0 WHERE (CAST(((((x'')OR(NULL)))AND('''d')) AS REAL)); -- 0ms;
SELECT DISTINCT ((v0.c0) NOTNULL) FROM vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN ('-1143695906') AND (((NULL) BETWEEN (vt0.c0) AND (v0.c0)))) DESC;SELECT '#)f' FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, v0 WHERE (CAST('1492475014' COLLATE BINARY AS INTEGER)); -- 0ms;
SELECT DISTINCT ((x'')>=(((NULL)>=(x'')))), (vt0.c0 IN ()), TOTAL(SQLITE_COMPILEOPTION_GET(v0.c0)) OVER () FROM v0, vt0 WHERE (CAST(ABS(DISTINCT x'') AS NUMERIC)) GROUP BY ((vt0.c0)IS(vt0.c0)) COLLATE NOCASE, IFNULL((('Y*4zT{') NOTNULL), (((vt0.c0))>=((vt0.c0)))), (((vt0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((((vt0.c0)OR(v0.c0)))OR(v0.c0))))); -- 0ms;
SELECT ALL ((((0Xffffffffdc9b7e1b)AND(((vt0.c0)>>(vt0.c0)))))AND(COUNT(*))), CASE WHEN (((vt0.c0, v0.c0, vt0.c0))=((vt0.c0, 0.4494266349189586, v0.c0))) THEN (((((((('2129208859')OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)LIKE(vt0.c0)) WHEN json_valid('') THEN 'TRUE' WHEN ((v0.c0) IS TRUE) THEN CAST(vt0.c0 AS INTEGER) WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN TRIM(vt0.c0, vt0.c0) ELSE CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END END, (((vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN '-886154561' THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE x'' END)) AND ((CAST(v0.c0 AS TEXT)))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT UPPER(TOTAL(x'')) FROM vt0 NOT INDEXED WHERE ((~ ((((('1067510235')OR(-1870183846)))AND(0.0887769694220033))))); -- 0ms;
SELECT ALL (((v0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((vt0.c0)+(vt0.c0))))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (LAST_INSERT_ROWID() IN ()), ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (TOTAL(vt0.c0)) AND ((v0.c0 IN ()))), ((v0.c0) NOTNULL) COLLATE BINARY FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) IS FALSE))AND(((((vt0.c0)AND(v0.c0)))AND(v0.c0)))))AND(MAX(-693271754))) FROM v0 WHERE (CASE ((0.13291977915244113) NOT NULL)  WHEN CAST(x'405c' AS TEXT) THEN (((x'', NULL, x'c0b0')) BETWEEN (('-1008730585', 0.6868691902480843, 0.8754071275748389)) AND ((x'6202', NULL, NULL))) ELSE CASE 0xffffffff84f47701  WHEN 0.9241370101440876 THEN '' END END);SELECT ALL (- (vt0.c0)) COLLATE RTRIM, (('7ENpI' IN ()) IN ()), CASE ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0))  WHEN ((vt0.c0)||(2.074237867E9)) THEN TRIM(DISTINCT vt0.c0) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN SUM(v0.c0) WHEN v0.c0 THEN (v0.c0 IN (v0.c0, vt0.c0)) END FROM vt0 WHERE ('1649950381');SELECT DISTINCT vt0.c0 COLLATE BINARY, (NOT (COUNT(*))), ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (COUNT(v0.c0))) FROM v0, vt0 WHERE (((((((((((0.8700488066665628) NOT NULL))OR(((0.9616215105998607) BETWEEN (0.7190929422454807) AND (0.7774991293011011)))))OR(((NULL)>>(0.6750124850804285)))))AND(LOWER(0x6acf423e))))OR(1762179413 COLLATE BINARY))); -- 0ms;
SELECT ALL 0.5057325745721017 FROM v0, vt0 WHERE (((((((NULL)==(NULL)))AND(ABS(1.606035519E9))))AND((~ (0.6032268739191459))))); -- 1ms;
SELECT DISTINCT NULLIF(DISTINCT (- (vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END) FROM v0, vt0 WHERE ((+ ((('') NOT BETWEEN ('-26013573') AND (''))))); -- 0ms;
SELECT COUNT(*) FILTER(WHERE CAST((('-317359723') IS TRUE) AS INTEGER)) OVER () FROM vt0, v0 WHERE (((CASE WHEN '-1070780186' THEN x'' ELSE NULL END) BETWEEN (('(1e5000002xT' IN ())) AND (''))); -- 0ms;
SELECT DISTINCT SUM(-1536961407 COLLATE NOCASE) OVER (), ((vt0.c0) BETWEEN ((vt0.c0 IN ())) AND (v0.c0)), 0.1917909641940736 FROM v0 GROUP BY (vt0.c0 COLLATE BINARY IN ()), vt0.c0, ((((vt0.c0)AND(vt0.c0))) IS TRUE), (~ (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))), v0.c0 HAVING (vt0.c0 COLLATE NOCASE IN ());SELECT (((NOT (vt0.c0))) BETWEEN ('') AND (('-1984092621' IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((v0.c0)==(v0.c0)))>>((((v0.c0))<=((vt0.c0))))) FROM v0;SELECT DISTINCT ((((((((v0.c0)AND((vt0.c0 IN ()))))OR(UPPER(DISTINCT vt0.c0))))AND((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((~ (vt0.c0)))) FROM vt0;SELECT DISTINCT RANK() OVER () FROM v0 ORDER BY NULL DESC  NULLS FIRST LIMIT 354207042; -- 0ms;
SELECT DISTINCT SUBSTR(0.020492384558378873, x''), (((((v0.c0, v0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))))+((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, v0.c0))))), ((((v0.c0)AND(CASE 'm'  WHEN '595661557' THEN v0.c0 ELSE v0.c0 END)))AND((vt0.c0 IN ()))) FROM vt0, v0 WHERE ((((((x'')) BETWEEN ((0.44780326005449966)) AND ((1834744560))))/(((0.8906653402453657)LIKE(x''))))) LIMIT 1463608497; -- 1ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END, v0.c0, CAST(v0.c0 AS REAL)))>((CAST(vt0.c0 AS REAL), ((((NULL)AND(v0.c0)))OR(v0.c0)), MIN(0X4325bb99)))) FROM vt0, v0 WHERE (CAST((((1.92644843E8))<((0.03487462935812091))) AS BLOB)); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0, v0.c0, vt0.c0))=((NULL, vt0.c0, v0.c0))) AS NUMERIC) FROM vt0 ORDER BY CAST(0.5170922965617355 COLLATE RTRIM AS NUMERIC)  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))GLOB(((v0.c0)-(vt0.c0)))) DESC  NULLS LAST;SELECT (((COUNT(*)))>((((v0.c0)/(0.50262322403334))))) FROM v0 WHERE (((((x'') NOT NULL))AND(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN LIKELY(DISTINCT vt0.c0) END FROM vt0, v0 WHERE ((((('1929591902')>('OWKX\nW'))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN v0.c0 END)AND(((v0.c0)>=(vt0.c0)))) FROM vt0 WHERE (CAST(-331229739 COLLATE NOCASE AS REAL));SELECT ALL ('-414522914' IN ()) FROM vt0 WHERE (((x'42db') IS FALSE) COLLATE RTRIM) ORDER BY '' DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((v0.c0)) BETWEEN ((CAST(v0.c0 AS TEXT))) AND ((CAST(vt0.c0 AS TEXT)))) FROM v0 GROUP BY vt0.c0 HAVING (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ());SELECT DISTINCT (((((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))))!=((vt0.c0 IN ()))), (((((vt0.c0)OR('1614233136')))AND(v0.c0)) IN ()), ((((((vt0.c0)<=(v0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))))AND((((v0.c0))>((v0.c0))))), (((vt0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((vt0.c0)*(vt0.c0)), ((vt0.c0)OR(vt0.c0)))) AND (('117636345', v0.c0, (+ (v0.c0))))), (((v0.c0 IN ())) NOTNULL) FROM v0, vt0; -- 0ms;
SELECT ALL ((x'') NOT NULL) COLLATE BINARY FROM v0, vt0; -- 0ms;
SELECT DISTINCT UPPER(((v0.c0)<=(vt0.c0))), ((((v0.c0)IS NOT(vt0.c0)))/(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)), ((v0.c0 COLLATE RTRIM)|(((v0.c0)/(vt0.c0)))), ((vt0.c0) NOT NULL), '1463608497' FROM vt0, v0; -- 0ms;
SELECT ALL v0.c0, (- (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))), COUNT(((vt0.c0) NOTNULL)) FROM vt0;SELECT ALL ((TOTAL(vt0.c0))IS NOT(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM v0, vt0; -- 0ms;
SELECT ((('72 '))==(((((vt0.c0))>(('297308372')))))) FROM v0, vt0 WHERE ((('' COLLATE NOCASE) NOT NULL)); -- 0ms;
SELECT DISTINCT '102923799', COALESCE(DISTINCT x'', ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (v0.c0 IN ()), ((v0.c0)AND(vt0.c0))), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY FROM vt0;SELECT DISTINCT AVG((- (x'2eff'))) FROM vt0 WHERE (((((('', 'Rc!C圏.jv', x'd1ca')) BETWEEN ((0.7917978369748238, x'', 0.9981704043218479)) AND ((x'', '1762179413', x'')))) IS FALSE)); -- 0ms;
SELECT (vt0.c0 IN ()) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL CAST((((x'cf2f')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS TEXT) FROM vt0 WHERE (((((TYPEOF('-593789413'))OR(((x'') IS TRUE))))OR(CAST(x'' AS REAL)))); -- 0ms;
SELECT ALL v0.c0, CUME_DIST() OVER (), CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB) FROM v0, vt0; -- 0ms;
SELECT json_remove(v0.c0, vt0.c0) COLLATE RTRIM COLLATE NOCASE, COUNT(CAST(v0.c0 AS REAL)), LAG((((v0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((x'a73d' COLLATE RTRIM))), (CAST(x'' AS TEXT) IN ()), CAST(((v0.c0)OR(v0.c0)) AS BLOB)) OVER () FROM v0, vt0 WHERE (((-2.097943288E9 COLLATE NOCASE)||((0.908286675475075 IN ())))) GROUP BY (((v0.c0)) BETWEEN ((x'')) AND ((vt0.c0))) COLLATE BINARY HAVING (((vt0.c0)) BETWEEN ((((NULL)+(v0.c0)))) AND ((((v0.c0) IS TRUE)))); -- 0ms;
SELECT ALL (NOT (x'')) FROM vt0, v0; -- 0ms;
SELECT ALL GROUP_CONCAT('74390087'), json_extract(0.6573569228247326, ((v0.c0) IS TRUE)), (((+ (vt0.c0)))GLOB((vt0.c0 IN (NULL)))) FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((x'f369af28')<=(vt0.c0)) THEN json_quote(v0.c0) ELSE x'' END;SELECT DISTINCT (- ((~ (v0.c0)))), (((v0.c0)) BETWEEN ((SUM(v0.c0))) AND ((v0.c0 COLLATE RTRIM))), CASE COUNT(*)  WHEN ((0.018258265611782676)GLOB(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE ((vt0.c0)/(vt0.c0)) END FROM vt0, v0; -- 0ms;
SELECT DISTINCT LAG(((((CAST(v0.c0 AS BLOB))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)IS NOT(v0.c0)))), (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN ()), (v0.c0 COLLATE RTRIM IN ())) OVER () FROM v0; -- 0ms;
SELECT DISTINCT TOTAL((vt0.c0 IN ())) OVER () FROM v0, vt0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((LIKELIHOOD(vt0.c0, 0.8245587050081796)))) FROM vt0 WHERE ((((('-1059306623')+(0.9316143794914558))) NOT BETWEEN ((((NULL)) BETWEEN ((x'')) AND (('734910724')))) AND (((((NULL)OR('0.6750124850804285')))OR(NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((v0.c0)/(vt0.c0)) THEN ((x'')&(vt0.c0)) END, MIN((v0.c0 IN (v0.c0, v0.c0))), v0.c0 FROM vt0 WHERE (COALESCE(DISTINCT (((''))<((0.7141624635549597))), (((NULL))>((NULL)))));SELECT ALL ((v0.c0 IN (vt0.c0, vt0.c0)) IN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0, v0 WHERE (((((((((CASE WHEN 0Xffffffff9445996c THEN x'da84' ELSE 'l(' END)AND('wH' COLLATE RTRIM)))AND((('26419145')>=('')))))OR(json_valid(x''))))OR((((x'6bcd1be0', x'', '/6	DHL4'))>=(('0.1310641143047636', NULL, -1.454376594E9)))))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS REAL)) OVER () FROM vt0, v0 WHERE (('-1318897262' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (ROUND(CASE WHEN '592453902' THEN 0.3678361446567777 WHEN 0.5057325745721017 THEN x'2dad' WHEN 'C(' THEN NULL END, MIN('', '-1658905321'))) GROUP BY (+ (vt0.c0)) COLLATE BINARY HAVING (((((0.2205896865525484) NOT BETWEEN (v0.c0) AND (vt0.c0))))<=((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))); -- 0ms;
SELECT DISTINCT SUM(((v0.c0) IS TRUE)) OVER () FROM v0, vt0 WHERE (CASE ((((x'')OR(0Xffffffff9087425a)))OR(0.5204323409064838))  WHEN ((((0.5105027222816791)OR(0.044406854068899104)))OR(NULL)) THEN CAST(-1459586694 AS REAL) WHEN (('') IS FALSE) THEN (((('821771327')OR(NULL)))OR(NULL)) WHEN '-1170399620' COLLATE NOCASE THEN (NULL IN ()) ELSE ((NULL)LIKE('')) END) LIMIT -840104984 OFFSET -1438742853; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((v0.c0)) AND (((- (vt0.c0))))) FROM vt0;SELECT ALL (('7310204') NOT BETWEEN ((NOT (v0.c0))) AND (AVG(v0.c0))) FROM v0, vt0 GROUP BY ((((v0.c0) IS FALSE)) NOT BETWEEN (x'') AND ((((vt0.c0)) BETWEEN ((v0.c0)) AND (('514972628'))))) HAVING CASE WHEN ((((x'c542')AND(v0.c0)))AND(v0.c0)) THEN COALESCE(DISTINCT v0.c0, vt0.c0) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END; -- 1ms;
SELECT DISTINCT LOWER(DISTINCT CAST(vt0.c0 AS REAL)) FROM v0, vt0; -- 0ms;
SELECT DISTINCT CAST(v0.c0 AS BLOB) COLLATE NOCASE, CASE ((((v0.c0)AND(v0.c0)))AND(v0.c0))  WHEN (v0.c0 IN (vt0.c0)) THEN (- (vt0.c0)) END, (x'' IN ()), v0.c0, ((((v0.c0)|(vt0.c0))) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (NULL) AND (v0.c0)))) FROM v0 WHERE (CASE ((((((((NULL)OR(0.933820549911815)))OR('qE')))OR(0.2378369271214873)))OR('Cu'))  WHEN ((x'')>('-1193474477')) THEN (('-469943227')||('-112224102')) END) LIMIT -839347688;SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM v0 WHERE ((NOT (NULL COLLATE RTRIM)));SELECT ALL CAST(((vt0.c0)>=(v0.c0)) AS REAL) FROM vt0;SELECT LAST_VALUE('-373442736') OVER () FROM vt0 WHERE ((((('-569779748') NOT BETWEEN (NULL) AND (0.5438137091583981)))<=(TYPEOF(NULL)))); -- 0ms;
SELECT v0.c0 FROM vt0 ORDER BY (((((vt0.c0)>=(v0.c0))))>(((~ (v0.c0))))) ASC  NULLS FIRST, v0.c0 DESC  NULLS FIRST;SELECT DISTINCT ((COUNT(*)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) FROM vt0, v0; -- 0ms;
SELECT DISTINCT AVG(v0.c0) OVER ( ORDER BY (NOT (((vt0.c0)&(v0.c0))))  NULLS FIRST, ((v0.c0) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0))) AND (ABS(v0.c0))) DESC, (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)AND(v0.c0)))AND(v0.c0)), json_array_length(v0.c0), ((v0.c0)>>(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, (+ (v0.c0)), (NOT (vt0.c0)))))), ((vt0.c0 COLLATE RTRIM)>(((NULL) BETWEEN (v0.c0) AND (vt0.c0)))), ((((v0.c0)>(vt0.c0)))!=(((vt0.c0)>(vt0.c0)))) FROM vt0 WHERE ((((((((((NULL IN (NULL)))OR(CASE WHEN x'' THEN x'' WHEN 0.5474090339283423 THEN '1171525383' WHEN x'' THEN '0.5170922965617355' ELSE NULL END)))OR(1565984320 COLLATE BINARY)))OR(((0.9075779278333385)/(NULL)))))OR(CASE 0.523551316359136  WHEN '-1143695906' THEN 'L,,' END)));SELECT ALL (((vt0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) FROM vt0;SELECT DISTINCT LEAD(CAST(((v0.c0) NOT NULL) AS NUMERIC), ((((0.1310641143047636)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN NULL WHEN v0.c0 THEN v0.c0 ELSE x'' END)), v0.c0) OVER () FROM v0 WHERE (((0.10191037439551964) NOT BETWEEN (NULL) AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (+ (0.6975734284252789)) COLLATE RTRIM FROM v0, vt0 WHERE (((x'')<(IFNULL(NULL, x'')))); -- 2ms;
SELECT DISTINCT ((((((((0.4792898178458176)OR(v0.c0)))OR('0.24541768620594762')))OR(v0.c0)))AND(vt0.c0)) COLLATE NOCASE FROM v0 WHERE (((CASE '0.006958076367650445'  WHEN 0.5636610367425605 THEN x'4b71' WHEN x'' THEN x'' WHEN '0.7695858671396804' THEN '297308372' END) NOT NULL));SELECT DISTINCT vt0.c0 FROM v0;SELECT DISTINCT (((- (v0.c0))) NOTNULL) FROM vt0;SELECT (((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (((((0.41990194199701103)) BETWEEN ((NULL)) AND ((v0.c0)))))) FROM v0, vt0 WHERE ((((x'3753') NOT NULL) IN (CASE WHEN '1606035519' THEN '1138335643' END, ((x'') IS TRUE), ((x'')||(0.1789690039798374))))) LIMIT -1366449453 OFFSET 1020877655; -- 0ms;
SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((~ (v0.c0))) AND (COALESCE(5.45141975E8, vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0))), ((vt0.c0)IS(((1720314813) IS TRUE))), CASE HEX(DISTINCT v0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN (((vt0.c0))<((v0.c0))) END FROM vt0, v0 WHERE (((((CAST('1720314813' AS REAL))OR((- (x'')))))OR((('-1471875797')%(x''))))); -- 0ms;
SELECT ALL ((((vt0.c0) NOTNULL))AND(((v0.c0)||(vt0.c0)))) FROM vt0 WHERE (((COALESCE(0.12957659430757662, 0.14022642459034595, x'', '䅶	>岆Q*p', x'', '\npQ|c(N'))IS((((('0.0')AND(0xffffffffe0959a83)))AND('')))));SELECT DISTINCT (((- (vt0.c0))) BETWEEN (CAST(-1.193474477E9 AS TEXT)) AND (NULL)) FROM vt0 WHERE ((((~ (NULL))) BETWEEN (CAST(NULL AS REAL)) AND (QUOTE(2.129208859E9)))) LIMIT -1713959215; -- 0ms;
SELECT DISTINCT SUM(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0 GROUP BY (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))AND((+ (v0.c0)))))AND(((vt0.c0)>>(vt0.c0)))) HAVING CASE WHEN (- (vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0) IS TRUE) END;SELECT ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOTNULL) FROM vt0, v0 WHERE ((((NULL) BETWEEN (0X62c14ea2) AND (0.7187577818991129)) IN ())); -- 0ms;
SELECT ALL (((v0.c0)+(vt0.c0)) IN ()), ((CAST(v0.c0 AS INTEGER)) IS TRUE), INSTR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN '754483596' THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((v0.c0)/('-317359723'))) FROM v0, vt0 LIMIT 203496312 OFFSET -1839048253; -- 0ms;
SELECT DISTINCT CASE ((v0.c0)|(v0.c0))  WHEN CAST('1327713902' AS REAL) THEN (~ (vt0.c0)) ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) END FROM v0, vt0; -- 0ms;
SELECT (COUNT(vt0.c0) IN ()), IFNULL(DISTINCT v0.c0, v0.c0 COLLATE RTRIM), ((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)) COLLATE BINARY FROM v0, vt0; -- 1ms;
SELECT DISTINCT 0x2ebf2232 FROM vt0, v0 WHERE ((((537326830 IN ())) BETWEEN (((-1996690122)<(1456465068))) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((v0.c0 IN ()) COLLATE BINARY) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ((0.19927591721146998)!=(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)), LIKELY(DISTINCT CAST(vt0.c0 AS NUMERIC)), ABS(vt0.c0) COLLATE RTRIM FROM v0;SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(']}|볰(<PE'))) AND (v0.c0 COLLATE NOCASE)), 0.6807990114404552, 0xffffffff8e7683df FROM vt0, v0 WHERE (((((NULL) BETWEEN (-4.88197703E8) AND (x''))) IS TRUE)); -- 2ms;
SELECT DISTINCT vt0.c0, (+ (((0Xffffffffd105e097)%(vt0.c0)))), '' FROM vt0 WHERE ((((((0.40247037344209213, '^s', NULL))<((0.7202281377344458, x'', x''))))IS(x''))) LIMIT -2040096031; -- 1ms;
SELECT DISTINCT CAST(((vt0.c0)||(vt0.c0)) AS NUMERIC) FROM vt0 GROUP BY (NOT ('1486741751')) HAVING ((((((vt0.c0)OR(NULL)))AND(vt0.c0)))>(NULL)); -- 0ms;
SELECT DISTINCT v0.c0, (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS NUMERIC), ((vt0.c0) NOT NULL)))<>((((vt0.c0)==(x'')), SUM(0.4832182783692517), (((v0.c0, vt0.c0, '1990629492')) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))))), ((COUNT(v0.c0))>(((v0.c0) NOT NULL))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (v0.c0 IN ()) FROM vt0 LIMIT -998689906 OFFSET 1560438863; -- 0ms;
SELECT DISTINCT CAST(((-1006414661) NOTNULL) AS NUMERIC) FROM vt0, v0 ORDER BY IFNULL(TIME(v0.c0, vt0.c0, v0.c0), CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ASC; -- 0ms;
SELECT DISTINCT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))))*(vt0.c0 COLLATE RTRIM)) FROM vt0 NOT INDEXED, v0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) IS TRUE))+(CASE 1772356403  WHEN vt0.c0 THEN v0.c0 END)) FROM v0, vt0 WHERE (((((ABS(x''))OR(((NULL) NOT NULL))))OR(((((0x5b00b364)OR(NULL)))OR(NULL))))) GROUP BY (((vt0.c0 IN ()))!=(((NULL)<(vt0.c0)))) HAVING ((CAST(v0.c0 AS NUMERIC)) ISNULL) ORDER BY v0.c0  NULLS LAST; -- 1ms;
SELECT DISTINCT ((MAX(vt0.c0)) NOT BETWEEN (vt0.c0) AND (((((v0.c0)OR(-329977173)))AND(vt0.c0)))), (((('214903980')OR(COUNT(vt0.c0))))AND(v0.c0 COLLATE NOCASE)), COUNT(*) OVER () FROM v0 WHERE (UPPER((~ (0.6227248799694004)))) LIMIT 654453892 OFFSET 835791652;SELECT DISTINCT ROW_NUMBER() OVER (), DENSE_RANK() OVER (), (((v0.c0)) NOT BETWEEN ((TOTAL(vt0.c0))) AND ((SUBSTR(v0.c0, vt0.c0)))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT SUM(((v0.c0) NOT NULL)) FILTER(WHERE (UPPER(vt0.c0) IN ())) OVER () FROM vt0 WHERE (((((((((((x'6299')AND(NULL)))AND('-918455595')))AND(0X17dd7beb)))AND(NULL)))>=(((((NULL)AND(1129840573)))OR('1152579934')))));SELECT DISTINCT ((((0.9941245711595907)OR(CASE WHEN vt0.c0 THEN x'' END)))AND(v0.c0 COLLATE RTRIM)) FROM vt0, v0 WHERE (((((('-1705707695')<(-3.75405951E8)), (((NULL))=((0X6e8f41bf))), (((('~FqM\')OR('-1008730585')))OR(0.16913877835940316))))<((((NULL)<=(0.7406029691097092)), -211024787 COLLATE NOCASE, ((x'7091') BETWEEN (NULL) AND (0.9400216745498808)))))); -- 0ms;
SELECT ((TOTAL(vt0.c0)) ISNULL) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0))==((vt0.c0, v0.c0, v0.c0, vt0.c0, v0.c0))) IN (CAST(v0.c0 AS TEXT))), TRIM(vt0.c0 COLLATE NOCASE, 0.1310641143047636), ((vt0.c0 IN ()) IN ((- (v0.c0)), UNLIKELY(NULL))) FROM v0;SELECT (- ('2O')) FROM v0, vt0 ORDER BY ((x'')<<(((v0.c0)/(vt0.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT (((vt0.c0) NOTNULL) IN ()) FROM vt0, v0 WHERE ((((x'')) BETWEEN ((CAST(x'' AS NUMERIC))) AND (((+ ('')))))) ORDER BY (- (((v0.c0)>>(vt0.c0))))  NULLS LAST, 0Xffffffffde68b338 ASC; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE NOCASE FROM v0, vt0 WHERE (((((((x'')LIKE('y{4')))OR(((NULL) BETWEEN (0.09931183638273045) AND (NULL)))))OR((('-1023613626') ISNULL)))); -- 3ms;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (json_quote(NULL) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT LIKELY(TYPEOF(DISTINCT v0.c0)) FROM v0 WHERE (0X1146e6d1); -- 0ms;
SELECT ALL ((~ (vt0.c0)) IN ()) FROM vt0, v0 WHERE ((- (((0.7706929467495457) IS TRUE)))); -- 0ms;
SELECT DISTINCT (('lqljR^ࣘ')+(NULL)) FROM v0; -- 0ms;
SELECT DISTINCT (v0.c0 IN ()) COLLATE RTRIM FROM v0, vt0 WHERE (((((0.6807318168532673))!=((x'6b21'))) IN ())); -- 0ms;
SELECT DISTINCT (- ('#)F')) FROM v0; -- 0ms;
SELECT ((((v0.c0) IS TRUE))||(TRIM(DISTINCT v0.c0, vt0.c0))) FROM vt0, v0 LIMIT 1386091925 OFFSET -318666136; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c0))<(CAST(vt0.c0 AS REAL))) FROM vt0 GROUP BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)IS NOT(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) HAVING ((((vt0.c0)+(v0.c0))) IS TRUE);SELECT DISTINCT TOTAL(NULL) FROM v0 WHERE (((TRIM(0Xffffffffcf35b00a))/(((((x'fa45')OR(NULL)))AND(x'6b7f'))))) ORDER BY ((COALESCE(DISTINCT vt0.c0, vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (LIKELY(DISTINCT x'')) AND (ABS(vt0.c0))) DESC  NULLS LAST, CAST(((v0.c0) IS FALSE) AS BLOB);SELECT ALL GROUP_CONCAT(((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(vt0.c0))) FROM v0, vt0 WHERE ((((UPPER(NULL)))<>((CASE WHEN NULL THEN '' END)))) GROUP BY (vt0.c0 IN ()), (+ ((vt0.c0 IN ()))), (((v0.c0 IN (vt0.c0, vt0.c0)))>>(((v0.c0)/(vt0.c0)))); -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(x'' AS NUMERIC)) AND (CAST(v0.c0 AS NUMERIC))) FROM v0 WHERE ((((NULL IN ()))>(CAST('㫽|' AS TEXT))));SELECT DISTINCT ((((v0.c0) ISNULL))>=(((v0.c0)*(v0.c0)))) FROM v0, vt0 WHERE (((0.7746008305982621) ISNULL) COLLATE NOCASE) LIMIT 637350374; -- 0ms;
SELECT DISTINCT (0.02458857176592999 IN ()) FROM v0, vt0 GROUP BY (NOT (vt0.c0)) COLLATE RTRIM HAVING ((TRIM('CeGL')) NOT NULL); -- 0ms;
SELECT DISTINCT json_valid(0.9797315093805409) COLLATE RTRIM FROM vt0, v0 WHERE ((((((x'') IS TRUE)))>(((('595661557') BETWEEN (0x25f74ff5) AND (0.16288606149493357)))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<>(vt0.c0))) BETWEEN (x'') AND ((+ (v0.c0)))), CAST(((v0.c0)AND(v0.c0)) AS NUMERIC), COUNT(*) OVER () FROM v0 GROUP BY ((v0.c0)/(vt0.c0)) COLLATE RTRIM, x'', ((HEX(DISTINCT v0.c0)) BETWEEN (NULLIF(vt0.c0, vt0.c0)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) HAVING x'8ae6';SELECT CAST((NOT (v0.c0)) AS INTEGER) FROM vt0;SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)), (+ (v0.c0)), v0.c0 COLLATE NOCASE)) AND ((((NULL)||(v0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END, ((v0.c0)OR(v0.c0))))) FROM vt0 GROUP BY ((CASE WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN (((vt0.c0)<<(v0.c0))) AND (vt0.c0));SELECT ALL CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0) IS FALSE) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((((((v0.c0)OR(vt0.c0)))OR('309109026')))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) THEN ((v0.c0) BETWEEN (0.5261606817987329) AND (v0.c0)) WHEN ((vt0.c0)IS NOT(v0.c0)) THEN (((v0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0))<>((vt0.c0, '1400287147', v0.c0, v0.c0, vt0.c0))) WHEN ((vt0.c0)|('-375405951')) THEN (('3X''5.]c')<<(vt0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN (v0.c0 IN (vt0.c0)) WHEN (x'' IN ('%V')) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN (vt0.c0 IN (v0.c0, v0.c0)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) ELSE v0.c0 COLLATE BINARY END, (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN '-1002575045' END)), GLOB(((((v0.c0)OR('[')))AND('0.0032624165598809096')), CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) FROM vt0, v0; -- 1ms;
SELECT DISTINCT x'039d' FROM v0; -- 0ms;
SELECT DISTINCT ((((v0.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (((v0.c0)IS(v0.c0)))), ((((((v0.c0) IS TRUE))OR(((v0.c0)<>(vt0.c0)))))AND(((vt0.c0)=(v0.c0)))), CAST(((vt0.c0) BETWEEN (vt0.c0) AND ('^tGHb?4kK')) AS NUMERIC) FROM v0, vt0 GROUP BY (((- (v0.c0)))||(v0.c0 COLLATE RTRIM)), (((((vt0.c0) IS FALSE)))>=((vt0.c0 COLLATE RTRIM))), CASE CAST(vt0.c0 AS TEXT)  WHEN ((v0.c0)>=(vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END HAVING x'' LIMIT -1462350925 OFFSET -2054460688; -- 0ms;
SELECT DISTINCT 0.1214800907859096 FROM v0, vt0; -- 0ms;
SELECT (- (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) FROM vt0;SELECT DISTINCT '4b3CG0|G' FROM v0; -- 0ms;
SELECT DISTINCT (((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM v0 WHERE (CASE WHEN (('-1650755151')-(x'')) THEN ((((((((((((0.6914968849620143)OR(0.9691798559977169)))OR(0.02029261357648038)))OR(NULL)))AND(x'ffad')))OR(0.6868691902480843)))OR('d(7j	0E')) WHEN 0x306f38f6 COLLATE NOCASE THEN (('>K')-('-1026327866')) WHEN CAST(NULL AS BLOB) THEN NULL END);SELECT ALL ((((vt0.c0)<(vt0.c0))) NOT NULL) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS NOT((v0.c0 IN ()))) FROM v0;SELECT DISTINCT (((v0.c0, -6.06818378E8, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((v0.c0, vt0.c0, v0.c0))) COLLATE RTRIM FROM v0 WHERE (CASE (((0xffffffffca481385)) BETWEEN (('-18360835')) AND ((0.6368254873652086)))  WHEN ((NULL)||(0.23864213454409722)) THEN 0xffffffff92adff06 COLLATE RTRIM ELSE LOWER(0.47007744008048236) END) ORDER BY (+ (NULLIF(vt0.c0, vt0.c0))) DESC  NULLS LAST, (((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))))), vt0.c0;SELECT DISTINCT CUME_DIST() OVER ( RANGE CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC) PRECEDING), ((((vt0.c0)>>(v0.c0))) IS TRUE), RANK() OVER () FROM vt0 ORDER BY (- ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))  NULLS FIRST, (((vt0.c0 IN ())) IS FALSE) ASC  NULLS FIRST, CAST(v0.c0 COLLATE RTRIM AS BLOB) DESC  NULLS FIRST;SELECT ALL (((~ (vt0.c0)))GLOB(((v0.c0) NOT NULL))) FROM vt0 WHERE (LIKELIHOOD(((NULL) NOTNULL), 0.29391684064750956));SELECT DISTINCT vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((COUNT(v0.c0), json(v0.c0), vt0.c0 COLLATE NOCASE)) AND ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)), ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)), ((((v0.c0)OR(v0.c0)))AND(vt0.c0))))), ((MIN(v0.c0)) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c0, 0.26182009797798067)) AND ((v0.c0 IN ()))) FROM v0 WHERE ((((((('595661557')AND(x'')))OR('611852323'))) IS TRUE));SELECT DISTINCT ((((v0.c0)|(v0.c0))) NOT NULL), LIKELY(DISTINCT ((vt0.c0) IS FALSE)), (((((vt0.c0) ISNULL)))<((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) FROM v0;SELECT DISTINCT CAST(vt0.c0 AS REAL) FROM vt0, v0 WHERE ((((('')GLOB(x''))) IS FALSE)) LIMIT 744000749; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM v0, vt0 GROUP BY ((((((((((((v0.c0 COLLATE NOCASE)OR((~ (vt0.c0)))))AND('1e500')))AND(((vt0.c0)<<(vt0.c0)))))AND(load_extension(NULL, vt0.c0))))AND(((vt0.c0)-(1560438863)))))AND(((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))), (CAST(vt0.c0 AS REAL) IN (x'71a3', (((v0.c0))<>((v0.c0))))), ((((vt0.c0)OR(vt0.c0)))OR(NULL)) COLLATE RTRIM;SELECT DISTINCT ABS(((v0.c0) NOTNULL)) FROM vt0, v0 GROUP BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN IFNULL(v0.c0, vt0.c0) THEN NULL END, ((((CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)AND(v0.c0 COLLATE BINARY)))OR(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 GROUP BY vt0.c0; -- 0ms;
SELECT (((NOT (v0.c0)))-((vt0.c0 IN ()))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (v0.c0 IN (v0.c0)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) ELSE ((vt0.c0) ISNULL) END, ((CAST(v0.c0 AS NUMERIC))-(vt0.c0 COLLATE NOCASE)), ((LIKELIHOOD(DISTINCT v0.c0, 0.9200747883441034)) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (TRIM(DISTINCT v0.c0))), (((vt0.c0)>('~FqM\')) IN ()), ROW_NUMBER() OVER () FROM vt0, v0 GROUP BY (((v0.c0))<((v0.c0))) COLLATE RTRIM COLLATE RTRIM, 0.009869215721438951, 7310204.0 HAVING CAST((v0.c0 IN ()) AS INTEGER); -- 0ms;
SELECT DISTINCT 0.29635785227109634 FROM v0 WHERE (LIKELY(((1537586249)LIKE('581539913')))) GROUP BY ((vt0.c0 COLLATE NOCASE) IS FALSE), UNLIKELY(DISTINCT v0.c0), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))=(((vt0.c0) ISNULL))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)), (+ (v0.c0)) HAVING (((vt0.c0)%(v0.c0)) IN ()) ORDER BY CASE ((v0.c0)|(vt0.c0))  WHEN (~ (x'126d')) THEN ((v0.c0) IS FALSE) ELSE ((('1169869693')) BETWEEN ((vt0.c0)) AND ((v0.c0))) END DESC  NULLS FIRST;SELECT DISTINCT (v0.c0 IN ((((('-438807399')OR(vt0.c0)))OR(vt0.c0)))) FROM v0, vt0 WHERE (((('-1008730585')) NOT BETWEEN ((('' IN (NULL)))) AND (((((1.762179413E9, 'DVG?', 0X4c3268d4)) NOT BETWEEN ((x'1ecf', '0.48555219983148945', x'')) AND (('', 0.9914190617011125, NULL))))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT NULL) COLLATE BINARY FROM v0 WHERE (((((((((x'')AND(x'')))OR('')))OR(((x'bf0c') NOT BETWEEN ('') AND (0.3950398004763076)))))AND(('-414522914' IN ()))));SELECT ((v0.c0 COLLATE RTRIM)<<(CAST(v0.c0 AS NUMERIC))) FROM vt0, v0 ORDER BY ((0.18165758650405184 COLLATE RTRIM)*(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((0x1dc5f1f8) ISNULL) FROM vt0 WHERE (((0x60373e30)<(x'c91e')) COLLATE NOCASE); -- 3ms;
SELECT ALL RANK() OVER ( ORDER BY ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN ()))) ASC, (- (0.8791383010534205))) FROM v0 WHERE (((('-1804781770', x'', x'f3c3af06', NULL, -718440936)) BETWEEN (((x'' IN (x'1d05')), (('')IS(NULL)), 0x43dd41ab, (('-1070780186') BETWEEN (NULL) AND (NULL)), CASE WHEN x'' THEN '1779361411' WHEN '0.6868691902480843' THEN '' WHEN NULL THEN '' END)) AND (((('1867726946')AND(x'')), 0xfffffffff14cdfbe, json_object(-818871926, ''), (('') ISNULL), ((((x'0195')OR(NULL)))AND(0.5893855285518298))))));SELECT DISTINCT LOWER(TYPEOF(DISTINCT vt0.c0)) FROM vt0; -- 0ms;
SELECT SUM(((vt0.c0)-(vt0.c0))) FROM vt0, v0 WHERE (((('r{X.N3\3	' IN ())) NOT BETWEEN (((0.43675954791651017)%(x''))) AND ((((-2.064353535E9, 1663201055, '1701571001')) NOT BETWEEN (('', NULL, 0.7316074901938765)) AND ((NULL, '', 0.7122865041892465)))))); -- 0ms;
SELECT ((v0.c0)>=(v0.c0)) COLLATE RTRIM, ((v0.c0 COLLATE BINARY)<(CAST(vt0.c0 AS NUMERIC))), LAG((vt0.c0 COLLATE RTRIM IN ()), ('' IN ()), (((x'', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)<>(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), TRIM(vt0.c0))) AND ((((vt0.c0)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL))))) OVER ( RANGE  UNBOUNDED PRECEDING), CAST('1067510235' AS NUMERIC), ((COUNT(*)) BETWEEN (1537586249) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (NULLIF(DISTINCT IFNULL(DISTINCT -2024815538, '1617981044'), (((NULL)) BETWEEN ((NULL)) AND ((327458233))))) GROUP BY (((NOT (v0.c0)))>=(CAST(vt0.c0 AS INTEGER))) HAVING (((((((((((((vt0.c0 IN ()))OR((- (v0.c0)))))AND(v0.c0 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c0)))))AND(COUNT(vt0.c0))))OR(1.17636345E8)))OR(CAST(v0.c0 AS TEXT)));SELECT '0.9316143794914558' FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((v0.c0 IN (v0.c0))))<((0.12957659430757662))), (((v0.c0 COLLATE RTRIM))<((CAST(vt0.c0 AS REAL)))), ((((((vt0.c0) IS TRUE))OR(vt0.c0)))AND(CAST(vt0.c0 AS REAL))) FROM v0 WHERE (((CAST(1.8735574E9 AS REAL))<(((NULL)GLOB(0.30919158051020235))))) ORDER BY CAST(vt0.c0 AS BLOB) ASC, ((((((((((((v0.c0 COLLATE RTRIM)AND(v0.c0 COLLATE NOCASE)))OR(((v0.c0)*(v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0) BETWEEN (x'') AND (v0.c0))))  NULLS LAST;SELECT LAST_INSERT_ROWID() FROM v0, vt0 WHERE ((((((- (0.3286172854224697)))OR(((NULL)AND(0.8073468318883034)))))OR((x'' IN ())))); -- 0ms;
SELECT v0.c0 FROM vt0;SELECT DISTINCT CASE WHEN (('-1985229016') IS TRUE) THEN ((v0.c0)-(v0.c0)) ELSE CASE WHEN vt0.c0 THEN v0.c0 END END FROM v0 GROUP BY ((((vt0.c0) IS FALSE)) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((('Z)๫PYb䈾p')>>(v0.c0)))) HAVING vt0.c0;SELECT DISTINCT IFNULL(DISTINCT CASE WHEN v0.c0 THEN vt0.c0 END, (v0.c0 IN (NULL, 0.7975173637379994, v0.c0))), HEX(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 END), FIRST_VALUE(vt0.c0) OVER ( ORDER BY vt0.c0) FROM vt0 GROUP BY ((((v0.c0)<=(v0.c0))) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END) AND (((((v0.c0)OR(v0.c0)))AND(vt0.c0)))) HAVING LIKE(((vt0.c0) NOTNULL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END);SELECT ALL NTILE((((v0.c0)) BETWEEN ((MAX(vt0.c0, v0.c0, vt0.c0, '-1695096253'))) AND (((~ (vt0.c0)))))) OVER () FROM v0, vt0;SELECT ALL (((vt0.c0 IN ()))<(v0.c0 COLLATE BINARY)) FROM vt0, v0 WHERE (CAST(NULL AS REAL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE (vt0.c0 IN (vt0.c0))  WHEN ((vt0.c0)+(vt0.c0)) THEN CASE WHEN NULL THEN vt0.c0 END ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END, ((((('#?' IN ()))AND(COALESCE(DISTINCT NULL, v0.c0))))AND(AVG(vt0.c0))), SUM(CAST(v0.c0 AS INTEGER)) OVER () FROM vt0 WHERE (((((((NULL)IS('-1695096253')))OR(CASE WHEN '0.9316143794914558' THEN NULL WHEN '1649950381' THEN NULL WHEN NULL THEN '1.jr' WHEN 0.9996487154320917 THEN 0.5033198250266712 WHEN 0.3173506821140264 THEN x'' END)))OR((((((((('-1804781770')AND('z\GB刍(')))OR(NULL)))AND(0.44780326005449966)))OR(0.5198670527519704)))));SELECT CAST(TOTAL(0.0400330450060149) AS NUMERIC) FROM v0 WHERE (((((0.2594324367439088) BETWEEN (1.649950381E9) AND (x'')))<<(((((0.5808989790062904)AND(0.21189006813526579)))OR(x'10b5'))))); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)>>(v0.c0))) COLLATE RTRIM, SUM(vt0.c0), ((v0.c0)IS NOT(vt0.c0)) COLLATE BINARY FROM vt0, v0; -- 1ms;
SELECT ALL (((((((('R]')OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((vt0.c0) IS TRUE))))OR(v0.c0)))OR(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))), ((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN ((- (v0.c0))) AND (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))), ((((x'') BETWEEN (vt0.c0) AND (v0.c0)))/(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) FROM v0 WHERE (((LOWER(DISTINCT x'b639')) IS TRUE));SELECT DISTINCT vt0.c0 FROM v0;SELECT DISTINCT CAST(x'32d1' AS BLOB) FROM vt0, v0 WHERE (((CASE WHEN x'12bd' THEN '⁸ %cr\寂k)' WHEN NULL THEN NULL WHEN x'90c2' THEN 0Xffffffffa844f52b ELSE x'4a3c' END) NOT NULL)); -- 1ms;
SELECT TYPEOF('B#*P57'), v0.c0, (NOT (v0.c0 COLLATE NOCASE)) FROM vt0;SELECT ALL ((((vt0.c0) IS FALSE)) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ((NOT (v0.c0)))), CASE ((v0.c0)+(v0.c0))  WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)=(v0.c0)) ELSE ((v0.c0)*(vt0.c0)) END, ((NULL COLLATE RTRIM)OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM v0, vt0 WHERE (((('7,-K {/L' IN ()))=(((((NULL)OR(x'')))OR(NULL))))); -- 0ms;
SELECT DISTINCT ((json_array_length(vt0.c0))==(MAX(vt0.c0))) FROM v0, vt0 WHERE ((((x'559a')) BETWEEN ((CAST('1650792310' AS REAL))) AND ((NULL)))) ORDER BY (((vt0.c0))<=((-1.059306623E9)))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))+(((v0.c0)<('n''R3*now\_sV')))), ((((v0.c0)GLOB(vt0.c0)))/(LAST_INSERT_ROWID())), CAST(v0.c0 AS TEXT) COLLATE RTRIM COLLATE BINARY, ((MAX(0.7917978369748238)) IS TRUE), ((CAST('74434471' AS BLOB)) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (vt0.c0)) FROM vt0;SELECT CAST(vt0.c0 COLLATE BINARY AS REAL), v0.c0, ((((((v0.c0) IS TRUE))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(v0.c0)) FROM vt0, v0 NOT INDEXED ORDER BY ((v0.c0)>(CASE vt0.c0  WHEN vt0.c0 THEN x'5a1b782c' ELSE v0.c0 END))  NULLS FIRST, (('0.037647566364832574') NOT BETWEEN (((vt0.c0) NOT BETWEEN (x'ce9d') AND (vt0.c0))) AND ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)>=(v0.c0))  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((((((v0.c0 COLLATE BINARY)AND(LOWER(vt0.c0))))OR((vt0.c0 IN ()))))OR((((((((('1048650369')AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))OR(MIN(vt0.c0))), v0.c0, AVG(((((vt0.c0)AND(v0.c0)))OR(v0.c0))) OVER () FROM v0, vt0 WHERE ((((('0.9316143794914558')||(x'1c1bc4f9')))<<(('?' IN ())))); -- 0ms;
SELECT ALL (((v0.c0, v0.c0, 0.7933371174316808)) NOT BETWEEN ((v0.c0, ((v0.c0)||(vt0.c0)), vt0.c0 COLLATE NOCASE)) AND ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CAST(0Xffffffffd46c4165 AS BLOB), 0.8328327940929294))), TRIM(DISTINCT MIN(v0.c0)), (((NOT (vt0.c0)))IS NOT(CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CAST(((vt0.c0)/(vt0.c0)) AS REAL), vt0.c0 FROM v0;SELECT COUNT(*) OVER ( ORDER BY ((((v0.c0)>=(x'27bc')))>>(x'')) ASC  NULLS FIRST) FROM v0 WHERE (((((x'') NOT BETWEEN ('W[''鶹Jb0]') AND (NULL)))+(5.0209507E8))) LIMIT -1019629657; -- 0ms;
SELECT ALL COUNT(NULL) COLLATE BINARY, ((vt0.c0 COLLATE NOCASE) NOT NULL), (((vt0.c0)) BETWEEN ((((v0.c0)/(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) FROM v0, vt0 WHERE (((((0.2077775141093584)||(x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)%(0.6759530619621239))) NOTNULL) FROM vt0, v0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))) AND ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))))), ((((v0.c0)AND(v0.c0)))AND(vt0.c0)) COLLATE BINARY, CASE WHEN COUNT(vt0.c0) THEN ((v0.c0) NOTNULL) WHEN CAST(0.9476592801441527 AS INTEGER) THEN ((v0.c0)!=(v0.c0)) WHEN COUNT(*) THEN ((vt0.c0)||(v0.c0)) ELSE vt0.c0 COLLATE BINARY END FROM v0 GROUP BY (((- (vt0.c0)))%(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) HAVING ((CASE WHEN 0.20675317627590573 THEN vt0.c0 WHEN vt0.c0 THEN ' HjC2%gD' WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOTNULL) LIMIT 514972628 OFFSET -788143977;SELECT DISTINCT (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))AND((vt0.c0 IN ()))))AND(0.7754638503933808)) FROM v0 NOT INDEXED, vt0; -- 1ms;
SELECT DISTINCT ((v0.c0)OR(v0.c0)) COLLATE BINARY FROM v0 WHERE (((('''\r_N砪5[v髡')<(NULL)) IN ())) GROUP BY vt0.c0, (~ (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))), '1289610086' COLLATE RTRIM HAVING (((~ (v0.c0))) IS FALSE);SELECT DISTINCT v0.c0 FROM vt0 WHERE (((((0.9424281494612615)=(977558767))) NOT BETWEEN (('Fb' IN ())) AND (CASE WHEN 1638720731 THEN -763620899 WHEN 0.9252004871917792 THEN 117636345 WHEN 0.7245693833767501 THEN '0.9981704043218479' END))) ORDER BY CASE v0.c0  WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) END DESC;SELECT DISTINCT CASE 0.8578426677212815  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END FROM vt0, v0; -- 0ms;
SELECT ALL 'Fb', (CHAR(-375405951) IN ()), CAST(((v0.c0)<>(vt0.c0)) AS INTEGER) FROM vt0, v0 WHERE ((((((((x''))<>(('-1870183846'))))AND(((x'')<<(x'')))))AND(CAST(x'' AS BLOB)))) GROUP BY SQLITE_SOURCE_ID(), v0.c0, ((v0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0)/(vt0.c0))) AND (((v0.c0)|(x'')))) HAVING CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN ((NULL) ISNULL) THEN (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))) WHEN LAST_INSERT_ROWID() THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN MIN(vt0.c0) THEN ((vt0.c0)|(vt0.c0)) END; -- 0ms;
SELECT ALL ((NULL)>>(((v0.c0) NOTNULL))) FROM v0 WHERE (((CAST(0.9008747204133704 AS INTEGER)) BETWEEN (x'' COLLATE RTRIM) AND ((+ (x'ba6c0e47'))))) GROUP BY ((vt0.c0)/(v0.c0)) COLLATE BINARY, ((v0.c0 COLLATE BINARY)>(((vt0.c0)>=(v0.c0)))), UNLIKELY(DISTINCT CASE WHEN x'' THEN 0.1461808666721841 ELSE NULL END) HAVING (((vt0.c0, v0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0))) COLLATE RTRIM LIMIT 1873557400;SELECT (NOT (LOWER(vt0.c0))), NTILE((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) OVER (), ',u6륕q', ((v0.c0 IN ()) IN ()), vt0.c0 FROM v0;SELECT DISTINCT CASE UNLIKELY(DISTINCT vt0.c0)  WHEN v0.c0 COLLATE BINARY THEN (vt0.c0 IN (vt0.c0, v0.c0)) ELSE (((vt0.c0, vt0.c0, v0.c0, v0.c0, '()')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0, vt0.c0, vt0.c0))) END, ((((((vt0.c0)) NOT BETWEEN (('-1807543939')) AND ((v0.c0)))))>((CASE v0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END))), ((((TOTAL(x''))OR(((v0.c0)!=(v0.c0)))))OR((vt0.c0 IN (v0.c0)))) FROM vt0 WHERE (((x'a202') NOT NULL));SELECT 0.5256323258875603, ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (NULL) AND ((+ (vt0.c0)))), x'' FROM v0, vt0; -- 0ms;
SELECT DISTINCT v0.c0 FROM vt0 WHERE (QUOTE(INSTR(NULL, '''DQ(\U~}K')));SELECT ALL CAST(((vt0.c0) ISNULL) AS TEXT) FROM vt0 WHERE (CASE x'1676' COLLATE RTRIM  WHEN (NULL IN ()) THEN ((0x58f55c86)OR('-335645872')) END); -- 0ms;
SELECT (NOT (v0.c0 COLLATE NOCASE)), CASE ((vt0.c0)>=(v0.c0))  WHEN (('q''UUjO/h')GLOB(vt0.c0)) THEN (NOT (v0.c0)) END, (NOT (1779361411)) COLLATE NOCASE FROM v0, vt0 GROUP BY (((((((((v0.c0 IN ()))AND(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0))>((v0.c0))))))AND((~ (v0.c0)))))OR(v0.c0 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT (((v0.c0)IS NOT(v0.c0)) IN ()) FROM v0, vt0; -- 0ms;
SELECT ((((CAST(-3.31229739E8 AS REAL))OR(((((v0.c0)OR(v0.c0)))OR(vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0, v0 WHERE (((((NULL, NULL, '''d')) BETWEEN ((-1232966793, x'', '-1146029469')) AND ((x'', '-819898880', 0.0028653189554662672))) IN (CAST('-1664188407' AS REAL)))); -- 0ms;
SELECT COALESCE(DISTINCT (- (vt0.c0)), v0.c0) FROM v0 WHERE (((((((((LOWER(DISTINCT NULL))OR((((''))==(('[iydh	T'))))))AND(GLOB(0.15909282768470878, -488197703))))AND((((0.7563782720859451, NULL, NULL)) NOT BETWEEN ((NULL, '1090845114', 2003526212)) AND ((x'a75a', '-1865062200', ''))))))AND((NOT (NULL))))) LIMIT -414522914 OFFSET -1021094365;SELECT DISTINCT (CAST(v0.c0 AS NUMERIC) IN ()), (((v0.c0 IN ())) NOT NULL), CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM FROM v0 WHERE ((((x'' IN (NULL))) NOT NULL));SELECT SUM(vt0.c0) FROM vt0, v0; -- 0ms;
SELECT ((COUNT(vt0.c0)) NOT NULL) FROM v0 WHERE (((CAST(x'd6aa' AS NUMERIC)) BETWEEN (x'') AND (CASE WHEN NULL THEN x'' END))) GROUP BY ((((v0.c0) NOT NULL)) BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) LIMIT 2129208859 OFFSET -1870183846;SELECT CAST((+ (v0.c0)) AS REAL) FROM v0, vt0 WHERE ((~ ('1929591902')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((vt0.c0))<((v0.c0))) IN (0x4fd88289)), vt0.c0, (- (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0, v0; -- 0ms;
SELECT DISTINCT TIME(((v0.c0)<<(vt0.c0)), (- (vt0.c0)), (((((((('-1779014543')OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0))), CASE (vt0.c0 IN ())  WHEN TYPEOF(v0.c0) THEN x'' WHEN AVG(vt0.c0) THEN json_patch(-1026327866, vt0.c0) WHEN ((v0.c0)LIKE(vt0.c0)) THEN (+ (vt0.c0)) END, COUNT((vt0.c0 IN ())) OVER () FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(v0.c0))) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM v0 GROUP BY ((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))-(0.8997993050158872)), ((x'') NOTNULL), (- (((v0.c0)&(vt0.c0))));SELECT ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))|(v0.c0 COLLATE BINARY)) FROM v0, vt0 WHERE ((((((((((((x'', x'', -9223372036854775808)) BETWEEN ((x'', '-138491926', -1.471875797E9)) AND ((0.30338749728863845, 1.560438863E9, 'o14e捆>D'))))AND(((NULL) NOT BETWEEN (NULL) AND ('0.4193987988680107')))))OR(UPPER('102923799'))))AND(0.8681094221992971)))OR(((((0.2823961502110195)AND(0.1267419839274796)))OR('-178016736'))))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) OVER (), (- (MIN(5.14972628E8, vt0.c0))), 0.6235612665079834, CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT), ((((((vt0.c0)>=(v0.c0)))AND(CAST(v0.c0 AS TEXT))))OR((v0.c0 IN (vt0.c0)))) FROM vt0, v0 WHERE (CAST((('0.43559761118892104') IS FALSE) AS TEXT)); -- 0ms;
SELECT DISTINCT MIN('sX^+', (- (vt0.c0))) FROM v0;SELECT DISTINCT QUOTE(AVG(vt0.c0)), CASE ((v0.c0) IS FALSE)  WHEN (((v0.c0)) NOT BETWEEN ((x'e224')) AND ((v0.c0))) THEN TOTAL(vt0.c0) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN GROUP_CONCAT(v0.c0) WHEN COUNT(NULL) THEN v0.c0 COLLATE BINARY ELSE x'' END, ((SUM(x'')) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((vt0.c0)<<(v0.c0)))) FROM v0, vt0 WHERE ((((x'513a', '1972513862', x'')) NOT BETWEEN (((~ ('QB迌q')), ((NULL)=(-1665262564)), CAST('-1466710421' AS NUMERIC))) AND (('' COLLATE RTRIM, (((x'')) BETWEEN (('-1732693826')) AND ((NULL))), x'' COLLATE BINARY)))); -- 1ms;
SELECT DISTINCT CASE WHEN 0.4630156371908609 THEN v0.c0 COLLATE RTRIM END FROM vt0 WHERE ((((+ (0.6775615371617246))) NOT NULL));SELECT DISTINCT v0.c0 COLLATE NOCASE FROM v0 WHERE (((((0xffffffff8cbb3627)-(NULL))) NOT BETWEEN (x'') AND (((((0.9272650550551539)OR(x'')))AND(0.7703856753734513))))); -- 0ms;
SELECT DISTINCT CASE WHEN LOWER(vt0.c0) THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN MIN('-1676966187') THEN COUNT(x'') WHEN TRIM(DISTINCT vt0.c0) THEN ((v0.c0)|(v0.c0)) ELSE x'' END FROM vt0, v0; -- 0ms;
SELECT ALL MIN(vt0.c0) FROM v0;SELECT DISTINCT LIKELIHOOD(DISTINCT vt0.c0 COLLATE BINARY, 0.9811715467663971) FROM vt0 WHERE ((((((0.35083760496642025) ISNULL)))<(((((NULL, 0.3080354975031442, 'ansy', x'9e00', NULL))=((NULL, x'5063', '1601837021', x'5ff4', 'ggg'')'))))))); -- 0ms;
SELECT (((x'', vt0.c0, v0.c0)) NOT BETWEEN (((v0.c0 IN ()), (((vt0.c0))<((v0.c0))), CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)) AND ((v0.c0 COLLATE RTRIM, 'emgm', (('') IS TRUE)))) FROM vt0, v0 GROUP BY CAST(TYPEOF(vt0.c0) AS NUMERIC); -- 0ms;
SELECT GROUP_CONCAT(HEX(DISTINCT vt0.c0)) FROM v0, vt0 INTERSECT SELECT ALL v0.c0 FROM v0; -- 0ms;
SELECT ((v0.c0) NOTNULL), x'', (vt0.c0 IN ()) FROM v0, vt0 ORDER BY ((((((((((((((vt0.c0)>>(vt0.c0)))AND(((v0.c0) IS FALSE))))AND(((((vt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS REAL))))OR(((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))))OR(CAST(v0.c0 AS TEXT))))AND((~ (v0.c0))))  NULLS LAST; -- 1ms;
SELECT ((vt0.c0)|(v0.c0)) COLLATE NOCASE, CAST(LIKELY(v0.c0) AS REAL), ((rtreenode('1e500', vt0.c0)) BETWEEN (((v0.c0) ISNULL)) AND (CAST(v0.c0 AS BLOB))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)!=(v0.c0))), (((vt0.c0, v0.c0, vt0.c0, v0.c0, vt0.c0)) BETWEEN (((- (v0.c0)), ((vt0.c0) IS TRUE), (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((NULL, v0.c0, v0.c0, v0.c0, vt0.c0))), COUNT(*), v0.c0)) AND ((LIKELY(v0.c0), AVG(v0.c0), ((v0.c0) BETWEEN (vt0.c0) AND ('1526772580')), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, ((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0))))), (((v0.c0, vt0.c0, v0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))), vt0.c0, (~ (v0.c0)))) AND ((GROUP_CONCAT(vt0.c0), (NOT (v0.c0)), COUNT(*)))) FROM v0, vt0 NOT INDEXED; -- 0ms;
SELECT ALL ((((vt0.c0)AND(v0.c0))) IS FALSE), CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS INTEGER), CASE WHEN (NOT (v0.c0)) THEN v0.c0 END FROM v0 WHERE (CAST(CASE x''  WHEN NULL THEN NULL END AS BLOB));SELECT DISTINCT (((v0.c0)) BETWEEN (((('-693271754') NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS BLOB)))), COUNT(CAST(vt0.c0 AS BLOB) COLLATE NOCASE) OVER (), ((((vt0.c0) IS TRUE))-(COUNT(v0.c0))) FROM vt0 WHERE ((((((-1.676966187E9)=('-375405951')), ((((x'661d')OR(x'')))AND(6.37350374E8)), ((x'bb0d') NOT BETWEEN (NULL) AND (0.8020099019144326))))>((NULL COLLATE BINARY, CAST('I\nL' AS NUMERIC), ((((((((x'')OR(x'9536')))OR(NULL)))AND('-546691675')))AND('-593789413')))))) GROUP BY CASE v0.c0  WHEN -1105416154 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE RTRIM LIMIT 754483596;SELECT DISTINCT (((vt0.c0)) BETWEEN (('-1006414661')) AND (((NOT (v0.c0))))) FROM vt0 WHERE ((((CAST(NULL AS BLOB)))<=((((NULL) NOTNULL)))));SELECT (~ (((vt0.c0)>(v0.c0)))) FROM v0;SELECT ALL LAG(((x'') NOT NULL), CASE vt0.c0  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (vt0.c0 IN ()) ELSE v0.c0 COLLATE RTRIM END, vt0.c0) OVER () FROM vt0, v0 WHERE (((((('-2112520797'))!=((0.7935541938677604))))IS NOT(HEX(NULL)))) LIMIT 779596123; -- 0ms;
SELECT x'021b', ((((((v0.c0)<<(v0.c0)))OR(((v0.c0)&(vt0.c0)))))OR((((vt0.c0))=((x'0060'))))), CAST(NULL AS BLOB) FROM v0 WHERE (((((((x'759b4326')OR('M')))OR(((((((((x'')AND('-25186592')))OR(NULL)))OR(x'')))AND('0c)6-If')))))AND(0.006958076367650445 COLLATE BINARY)));SELECT DISTINCT ((((vt0.c0) NOTNULL))-(CAST(v0.c0 AS BLOB))), CASE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))) THEN LIKELIHOOD(vt0.c0, 0.2932110642824787) ELSE vt0.c0 END, (~ ('713069631')) FROM vt0, v0 WHERE (CAST((('1829613513')OR(-1.318897262E9)) AS REAL)); -- 0ms;
SELECT DISTINCT MIN(NULL) FROM vt0 WHERE (((((((0x1c12f7cb)OR(0Xffffffff89d074c5)))AND(0.7684592325939885))) ISNULL)) GROUP BY ((CAST(v0.c0 AS TEXT)) ISNULL), ((((((v0.c0))<((vt0.c0))), TRIM(v0.c0, vt0.c0), ((v0.c0)=(vt0.c0))))!=((((v0.c0) IS FALSE), ((vt0.c0)>(v0.c0)), ((v0.c0)>(vt0.c0))))), ((((vt0.c0)>>(v0.c0))) NOT NULL) ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))  NULLS FIRST, ('' IN ());SELECT CUME_DIST() OVER () FROM vt0 INTERSECT SELECT ALL ((vt0.c0)OR(0X4572d47b)) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED('-582122139')) NOT BETWEEN (CASE 0.24233147596531202  WHEN NULL THEN x'1a52' ELSE x'' END) AND ((+ ('947451706'))))); -- 0ms;
SELECT ((RTRIM(v0.c0))%(((((vt0.c0)OR('-1561151199')))OR(vt0.c0)))) FROM vt0;SELECT CASE ((NULL) BETWEEN (vt0.c0) AND (0xffffffffaf8b31a8))  WHEN ((v0.c0)GLOB(v0.c0)) THEN COUNT(v0.c0) ELSE (vt0.c0 IN ()) END, CASE ((((((((v0.c0)AND(v0.c0)))AND(NULL)))AND(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN v0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM WHEN (- (v0.c0)) THEN LOWER(DISTINCT v0.c0) ELSE '-1700286862' COLLATE NOCASE END, v0.c0 FROM v0 NOT INDEXED, vt0; -- 0ms;
SELECT UPPER(((vt0.c0)IS NOT(v0.c0))) FROM vt0;SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE NOCASE)&((vt0.c0 IN ()))), MIN(((vt0.c0)>>(vt0.c0))), (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((x'', v0.c0, vt0.c0))))<=(SUM(v0.c0))) FROM vt0;SELECT DISTINCT (('[讳3' IN ()) IN ()) FROM vt0, v0 WHERE (CAST(CAST(x'' AS INTEGER) AS BLOB)); -- 1ms;
SELECT DISTINCT TOTAL((+ (v0.c0))) OVER () FROM vt0, v0 WHERE (((0.2924245457603587 IN ()) IN ())) LIMIT -424141636; -- 0ms;
SELECT DISTINCT ((((v0.c0)<<(v0.c0))) NOT BETWEEN (((0.2834783868572427)%(v0.c0))) AND (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM v0, vt0 WHERE (CASE WHEN ((NULL)+(0.023004417022414736)) THEN ((NULL) NOT BETWEEN (NULL) AND ('4')) ELSE CASE WHEN 0.5235009996366646 THEN '54662872' WHEN 1560438863 THEN -2112592276 WHEN '|X2\th' THEN 0.9842583792592793 ELSE NULL END END); -- 0ms;
SELECT CAST(NULL AS TEXT) FROM v0 WHERE (((LIKE(NULL, x'')) BETWEEN ((((0X11e92a28, -1.008730585E9, '1285161048')) BETWEEN ((NULL, '1779361411', '-414522914')) AND ((1029610476, 0.0032624165598809096, NULL)))) AND ((((((((('-37364679')AND(x'')))OR(-3.75405951E8)))AND(x'')))OR('a萄\.'))))) GROUP BY ((((vt0.c0)|(vt0.c0))) NOT NULL), ((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE BINARY, ((((v0.c0)!=(v0.c0)))/(v0.c0 COLLATE NOCASE)), (~ ((((vt0.c0))<=((vt0.c0))))), x'' HAVING ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND ((v0.c0 IN ())));SELECT ALL ((((((((NULL)AND((vt0.c0 IN ()))))AND(vt0.c0)))OR(v0.c0 COLLATE BINARY)))OR(vt0.c0)), ((SUM(v0.c0)) NOT BETWEEN (('354207042' IN ())) AND (((vt0.c0)%(v0.c0)))), AVG(LAST_INSERT_ROWID()) FROM v0, vt0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC, (((vt0.c0)LIKE(vt0.c0)) IN ())  NULLS LAST LIMIT -1574148297 OFFSET -1601359311; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM FROM v0, vt0 WHERE ((((- (0.296356350959872)))/(((NULL)>=(NULL))))); -- 0ms;
SELECT ALL CASE WHEN COALESCE(vt0.c0, v0.c0) THEN 0.14026541559943162 END FROM vt0 GROUP BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))  WHEN '1894529972' THEN CAST(NULL AS TEXT) ELSE ((vt0.c0) ISNULL) END, (((((vt0.c0)AND(vt0.c0)), ((vt0.c0)>=(vt0.c0)), ((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0))))<((((vt0.c0)LIKE(vt0.c0)), ((vt0.c0)&(v0.c0)), ((vt0.c0)<=(0X30b97edd))))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))-(UNLIKELY(vt0.c0)));SELECT ALL UNLIKELY((v0.c0 IN (vt0.c0, NULL))) FROM vt0 ORDER BY CAST((~ (v0.c0)) AS REAL) ASC;SELECT ALL (((vt0.c0)) BETWEEN ((((v0.c0) IS TRUE))) AND ((vt0.c0))) FROM v0, vt0 WHERE ((((((0.9306110588455119)) NOT BETWEEN (('0.07785286942542169')) AND ((0.3339086674366012)))) BETWEEN (TRIM(NULL)) AND (((x'')IS(x''))))) GROUP BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()), ((CAST(vt0.c0 AS INTEGER)) NOTNULL), ((((CAST(vt0.c0 AS NUMERIC))OR(rtreenode(vt0.c0, vt0.c0))))AND((v0.c0 IN (x'e839', v0.c0)))), ((v0.c0 COLLATE RTRIM) IS FALSE), ((((((v0.c0)|(v0.c0)))AND((vt0.c0 IN ()))))AND(CASE WHEN vt0.c0 THEN '-1150677222' ELSE vt0.c0 END)) HAVING (- (vt0.c0));SELECT DISTINCT (- ((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) FROM v0 WHERE (CASE CAST(NULL AS BLOB)  WHEN ((NULL) BETWEEN (0.7526476872400703) AND ('c	f逾b7j8')) THEN ((x'')+(0xffffffffc40354bb)) END);SELECT ALL NULL, ((vt0.c0) NOT BETWEEN (((x'') IS FALSE)) AND ((v0.c0 IN ()))), GROUP_CONCAT(v0.c0) OVER () FROM v0, vt0 WHERE ((~ ((('786793829') IS TRUE)))) GROUP BY ''; -- 0ms;
SELECT DISTINCT CAST(((v0.c0) NOT NULL) AS REAL) FROM vt0;SELECT ALL ((((((((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND('')))OR(((vt0.c0)|(vt0.c0)))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.3341658534393138))))OR(DATE(vt0.c0, vt0.c0, v0.c0))))OR(CAST(v0.c0 AS BLOB))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) FROM v0;SELECT ALL CASE WHEN 0.6573569228247326 COLLATE RTRIM THEN COALESCE(vt0.c0, vt0.c0) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOTNULL) WHEN (v0.c0 IN (NULL, vt0.c0)) THEN ABS(DISTINCT 0.6574687048179199) END, vt0.c0, CASE ((vt0.c0) ISNULL)  WHEN v0.c0 COLLATE RTRIM THEN ((vt0.c0)GLOB(vt0.c0)) END FROM vt0;SELECT vt0.c0, COUNT(*), ((((vt0.c0))!=((v0.c0))) IN ()) FROM v0, vt0 WHERE ((((('434468539') BETWEEN ('utc') AND (NULL)))IS NOT(x''))); -- 0ms;
SELECT ALL (((NOT (vt0.c0)))/(((vt0.c0)-(v0.c0)))) FROM v0, vt0 GROUP BY CASE WHEN ((v0.c0)/(vt0.c0)) THEN TOTAL_CHANGES() ELSE (+ (v0.c0)) END; -- 0ms;
SELECT ALL json_quote((((vt0.c0))>((v0.c0)))), ((vt0.c0 COLLATE BINARY)!=(CAST(vt0.c0 AS BLOB))), (((('-331229739')%(x'5d21ea58')))<<(CAST(NULL AS TEXT))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))AND((vt0.c0 IN (vt0.c0)))))AND(CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)) FROM vt0, v0 NOT INDEXED; -- 0ms;
SELECT DISTINCT MIN(((v0.c0) NOT NULL)) FROM vt0, v0 WHERE (((SQLITE_VERSION())<=((('|0') ISNULL)))); -- 1ms;
SELECT ALL vt0.c0, ((CAST(vt0.c0 AS REAL)) ISNULL), GROUP_CONCAT('') FROM vt0, v0 WHERE ((((((((('7\nvV2')OR(x'6cc8')))AND(x'')))AND(((NULL)IS(0.423614994373965)))))OR(((NULL)OR('-593789413'))))); -- 0ms;
SELECT DISTINCT ((vt0.c0)<>('')) COLLATE NOCASE FROM vt0, v0; -- 0ms;
SELECT DISTINCT '1.jr' FROM v0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL ((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) BETWEEN (TOTAL(vt0.c0)) AND ((- (1025220512)))) FROM v0, vt0 ORDER BY (((v0.c0) NOT NULL) IN ()); -- 1ms;
SELECT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(v0.c0))) AND (((v0.c0)<=(v0.c0)))) FROM v0 GROUP BY CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('-858225111')))  WHEN ((((((((vt0.c0)AND(vt0.c0)))OR(1742382019)))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) END, ((((((vt0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN ((((v0.c0))<>((vt0.c0)))) AND (CAST(v0.c0 AS REAL))), IFNULL(NULLIF(DISTINCT vt0.c0, v0.c0), v0.c0);SELECT DISTINCT x'6033' FROM vt0 WHERE (CASE NULL COLLATE BINARY  WHEN 'p~SꟑA' THEN (((2.95176084E8))>=((x''))) END) ORDER BY 0.5702561007296135 ASC  NULLS LAST; -- 0ms;
SELECT ALL ((MIN(vt0.c0))<(CAST(vt0.c0 AS NUMERIC))) FROM v0;SELECT DISTINCT ((TRIM(vt0.c0)) IS TRUE) FROM v0;SELECT ALL ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))=(((vt0.c0)>=(vt0.c0)))), COUNT(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) OVER (), CASE ((vt0.c0)AND(vt0.c0))  WHEN 0x17a04fca THEN (('+wᬒ0Pgv*S')>>(v0.c0)) END FROM v0, vt0 WHERE ((((((((('0.42978573675322185')AND(x'3526')))AND(0Xffffffff810681b1 COLLATE BINARY)))AND(((x'dcfa') BETWEEN (2.129208859E9) AND (NULL)))))OR(((('0.9914190617011125'))>((0.21411644674841024)))))); -- 1ms;
SELECT DISTINCT ((CAST(v0.c0 AS TEXT))LIKE(((vt0.c0) NOT NULL))), (COUNT(vt0.c0) IN ()), v0.c0 FROM v0, vt0 WHERE ((((0xffffffff84f47701, NULL, '1834744560')) NOT BETWEEN (((0.969946932625558 IN (0.7067114330688724)), '-1695096253' COLLATE RTRIM, (~ (x'7075')))) AND ((json_remove('/蚓XYZG.O', 0xb7b86eb), (((0X29c6810d)) BETWEEN (('')) AND (('-1111902571'))), ((((x'93ab')OR(0.36994286485572936)))OR(x'')))))); -- 0ms;
SELECT (((NOT (vt0.c0))) ISNULL) FROM vt0, v0 WHERE ((CASE WHEN 0xffffffffab09817c THEN 0.3251933764395577 END IN ())) ORDER BY (((vt0.c0 IN (v0.c0)))%(v0.c0)), ((NULL) IS FALSE) DESC; -- 0ms;
SELECT ALL ((((vt0.c0 IN (NULL))))!=((((((((((vt0.c0)AND(-1.78016736E8)))AND(vt0.c0)))OR(v0.c0)))AND(v0.c0))))), COUNT(*) OVER (), NULL FROM v0, vt0 WHERE (((((((x'')+('{s욊o')))OR((('7310204')LIKE('1526772580')))))AND(0.15503913514011713 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((((v0.c0)OR(vt0.c0)))AND(NULL)))-('4b3CG0|G')) FROM vt0, v0 WHERE (COALESCE(DISTINCT 0.26798830239737836 COLLATE RTRIM, (+ (NULL)))) ORDER BY CAST(vt0.c0 AS REAL) COLLATE BINARY DESC  NULLS LAST LIMIT 1365719360; -- 0ms;
SELECT DISTINCT (vt0.c0 IN (CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE RTRIM)), ((((LOWER(v0.c0))AND((- (v0.c0)))))OR(((((v0.c0)AND(vt0.c0)))AND(v0.c0)))), UPPER(COUNT(*)), ((((vt0.c0)-(vt0.c0)))>>(TRIM(DISTINCT vt0.c0, vt0.c0))), COALESCE(((NULL)|(v0.c0)), ((0X4045dc45)IS NOT(v0.c0))) FROM vt0 WHERE (((x'' COLLATE BINARY)<>(((((NULL)AND(x'')))AND(NULL)))));SELECT DISTINCT (NOT (LIKELIHOOD(vt0.c0, 0.09363058975195382))), CASE WHEN ((((v0.c0)OR(vt0.c0)))AND(v0.c0)) THEN v0.c0 END, (((vt0.c0))==((v0.c0 COLLATE RTRIM))) FROM vt0, v0 WHERE (CASE '202508902'  WHEN 0.6868691902480843 THEN x'21a4' ELSE NULL END COLLATE RTRIM) GROUP BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS FALSE), (NOT (((v0.c0)<<(vt0.c0)))), NULL HAVING CAST(((((vt0.c0)AND(v0.c0)))OR(NULL)) AS REAL); -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM v0 WHERE (((((1647147725) NOTNULL)) NOT BETWEEN ((NULL IN ())) AND (NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE WHEN ((v0.c0)>(vt0.c0)) THEN CASE x''  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END END FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0;SELECT ((COUNT(vt0.c0)) NOT BETWEEN (((v0.c0) NOT NULL)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM vt0, v0 WHERE ((((+ (NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT vt0.c0, NULL, SQLITE_COMPILEOPTION_USED(CASE v0.c0  WHEN vt0.c0 THEN '/T*<%U	P' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) FROM vt0 WHERE (((((0xffffffff9445996c)AND(''' fTh''8>')))OR(NULL)) COLLATE NOCASE);SELECT DISTINCT CAST((NOT (vt0.c0)) AS BLOB), ((((COALESCE(vt0.c0, vt0.c0))OR(((v0.c0)<(vt0.c0)))))OR(((vt0.c0)!=(v0.c0)))), ((((vt0.c0)>(v0.c0))) IS TRUE) FROM v0;SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))==(((vt0.c0)>(vt0.c0)))) FROM v0, vt0 WHERE (CASE WHEN (((NULL, 0.5878971607907552, 0.9849942349436137))>(('(', 'd>%}-ot4K', ''))) THEN x'' END); -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))GLOB(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))), CASE CAST(vt0.c0 AS REAL)  WHEN ((v0.c0) ISNULL) THEN 595661557 ELSE CAST(vt0.c0 AS NUMERIC) END, CAST(COUNT(v0.c0) AS BLOB) FROM v0, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOTNULL)) IS TRUE) FROM vt0, v0 WHERE (((((NULL) NOT BETWEEN (x'') AND ('-730945159')))<((((('凤p_gv⣉X8\r')AND(x'd1fd')))OR(-2.6013573E7))))) LIMIT -332954344 OFFSET 1000165238; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), v0.c0, CUME_DIST() OVER ( ORDER BY (((- (vt0.c0)))|((+ (v0.c0))))) FROM vt0;SELECT DISTINCT (+ (((v0.c0)+(v0.c0)))) FROM v0, vt0; -- 1ms;
SELECT ALL ((v0.c0 COLLATE BINARY)>>((('')>(v0.c0)))) FROM vt0 LIMIT -1193474477 OFFSET -1466710421;SELECT ALL vt0.c0 FROM v0 WHERE (CASE WHEN (((0X36671e26))<=((x'844b'))) THEN ((NULL) NOT NULL) END);SELECT DISTINCT v0.c0 FROM vt0, v0; -- 0ms;
SELECT CASE WHEN CAST(vt0.c0 AS TEXT) THEN (- (v0.c0)) END, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE RTRIM)), CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END AS REAL) FROM vt0 WHERE (0.4400385812968963) GROUP BY (~ (v0.c0));SELECT ALL ((0.6573569228247326) IS TRUE) FROM v0, vt0; -- 0ms;
SELECT (NOT (((-1405269475) ISNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT CHANGES() FROM v0 WHERE ((((('693929827')|(x'd1f3'))) IS TRUE)) ORDER BY ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((v0.c0)||(v0.c0)))) ASC;SELECT DISTINCT (((v0.c0)) BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((CAST(v0.c0 AS TEXT)))) FROM v0, vt0; -- 0ms;
SELECT ALL (json(vt0.c0) IN ()) FROM vt0, v0 WHERE ((((0.5351708436245658)) NOT BETWEEN ((CASE x''  WHEN 0.04438365665111066 THEN NULL ELSE '' END)) AND ((0Xffffffff95e70cf4 COLLATE BINARY)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0; -- 0ms;
SELECT ALL LAG(v0.c0, ((((vt0.c0)>=(v0.c0))) NOT NULL), ((((0.45354993276443045) ISNULL))<(((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('CW'))))) OVER () FROM vt0, v0; -- 1ms;
SELECT DISTINCT x'' FROM vt0, v0 WHERE (CAST(((((0.728073676993206)OR(NULL)))OR(0.9846384897926063)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN '-1454376594' ELSE v0.c0 END)) AND ((ABS(DISTINCT 'ahM>X')))) FROM vt0, v0 WHERE (((((((0.42708906950268755))<=((NULL)))))<((((0.7230085156826076) NOT BETWEEN (0X6243ba3d) AND (x'')))))); -- 1ms;
SELECT DISTINCT (((vt0.c0) IS TRUE) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), ((v0.c0)<(vt0.c0)) COLLATE RTRIM, (- ((+ (vt0.c0)))) FROM v0, vt0 WHERE ((- (((('1779361411')) NOT BETWEEN ((0.584087186805575)) AND ((0.29231512381123903)))))) ORDER BY ((((vt0.c0)<>(vt0.c0)))<=(vt0.c0 COLLATE BINARY))  NULLS FIRST, (((v0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) DESC, ((vt0.c0)-(2052420293)) ASC; -- 0ms;
SELECT DISTINCT (((v0.c0)GLOB(v0.c0)) IN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM vt0, v0; -- 0ms;
SELECT (AVG(vt0.c0) IN (v0.c0 COLLATE BINARY)), TOTAL(0.5666389350695896), (((vt0.c0, v0.c0, v0.c0, vt0.c0, v0.c0, 0Xffffffffdaef048b, v0.c0)) NOT BETWEEN ((((((v0.c0)AND(v0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, v0.c0 COLLATE BINARY, v0.c0, json_type(vt0.c0), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)), CAST(vt0.c0 AS REAL))) AND ((vt0.c0 COLLATE NOCASE, ((v0.c0) ISNULL), ((vt0.c0)+(vt0.c0)), 0.4391409217994279, LIKELIHOOD(DISTINCT v0.c0, 0.5630565846715339), SUM(v0.c0), ((((v0.c0)OR(v0.c0)))AND(vt0.c0))))) FROM vt0 LIMIT 514972628 OFFSET 297308372;SELECT DISTINCT '-1926465976' FROM v0, vt0 EXCEPT SELECT ALL (v0.c0 IN (v0.c0)) FROM vt0;SELECT LOWER(DISTINCT vt0.c0) FROM vt0, v0; -- 0ms;
SELECT DISTINCT NTILE(((((v0.c0) IS FALSE))+(-1807378068))) OVER () FROM vt0, v0;SELECT ((((v0.c0)&(v0.c0)))OR(((v0.c0)IS NOT(v0.c0)))) FROM v0 LIMIT 1404392252 OFFSET -332902858; -- 0ms;
SELECT ALL SUM(vt0.c0), (((vt0.c0)>(v0.c0)) IN ()), ((0.8928680636019708) IS FALSE) FROM v0 WHERE ((~ ((NOT (NULL))))) ORDER BY ((((vt0.c0) IS TRUE))!=(0.3904371985273709))  NULLS FIRST;SELECT ALL GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)) FROM vt0, v0 WHERE ((CASE WHEN 0.7593697135930084 THEN x'cd87' END IN ((NULL IN ())))) GROUP BY ((v0.c0) NOT NULL), v0.c0, (((((v0.c0) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)), ((v0.c0)>(vt0.c0))))<=((NULL, NULL, ''))), (((json_quote(v0.c0)))>(((vt0.c0 IN (v0.c0, v0.c0))))), (((v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE RTRIM))) HAVING ((((((NULL)-(v0.c0)))AND('1067510235')))OR(0.40591478430343864)); -- 0ms;
SELECT DISTINCT ((((((((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)) COLLATE NOCASE, ((((v0.c0)GLOB(vt0.c0)))<<('2ZQ7')), ((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM FROM v0, vt0; -- 1ms;
SELECT DISTINCT ((((-1559785976) BETWEEN (v0.c0) AND (vt0.c0)))+(((vt0.c0) IS TRUE))) FROM vt0 WHERE (IFNULL((('uSSrKn]') NOTNULL), (('') BETWEEN (0.7646435114087564) AND ('-1676966187')))) GROUP BY ABS(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))), (((NULL, vt0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) COLLATE BINARY COLLATE BINARY, HEX(DISTINCT CASE vt0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) HAVING '2b' ORDER BY (((~ (vt0.c0)))|(((v0.c0) NOT NULL)))  NULLS LAST;SELECT ALL (((v0.c0)=(v0.c0)) IN ()) FROM vt0, v0; -- 0ms;
SELECT CAST((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) AS BLOB), FIRST_VALUE(TRIM((((vt0.c0, vt0.c0, NULL))==((vt0.c0, vt0.c0, vt0.c0))))) OVER (), NTILE(TRIM(DISTINCT vt0.c0, CAST(vt0.c0 AS BLOB))) OVER ( ORDER BY ((LOWER(v0.c0)) BETWEEN (((((v0.c0)AND(vt0.c0)))OR('0.43559761118892104'))) AND (((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))) ASC, vt0.c0 ASC  NULLS FIRST) FROM vt0 WHERE ((x'' IN ())) ORDER BY CAST(v0.c0 AS REAL) ASC, (((v0.c0)||(v0.c0)) IN ()) ASC  NULLS LAST, CAST(NULL COLLATE NOCASE AS BLOB)  NULLS LAST;SELECT DISTINCT (('-982664640')<<(LIKELIHOOD(v0.c0, 0.4254485879283155))) FROM v0, vt0 WHERE (json_valid(((x'') NOT BETWEEN (NULL) AND ('821771327')))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, -693271754, '')) AND ((v0.c0, v0.c0, v0.c0)))) AND (((-2097943288)!=(v0.c0)))) FROM vt0, v0 WHERE ((('' COLLATE NOCASE) NOT BETWEEN (UPPER(DISTINCT 0.6133189809280779)) AND ((~ (NULL))))); -- 0ms;
SELECT DISTINCT ((v0.c0) IS TRUE) FROM v0; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) FROM vt0 GROUP BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (COALESCE(DISTINCT vt0.c0, v0.c0, vt0.c0, vt0.c0)) AND (((vt0.c0) NOT NULL))) HAVING vt0.c0;SELECT DISTINCT ((((((v0.c0)>=(v0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND('-109244663')) FROM v0, vt0 WHERE ((((~ (0.2688127490526594)))&(((((0x30913bef)AND('\nf2ob.2/')))AND(NULL))))); -- 0ms;
SELECT ALL ((CASE WHEN v0.c0 THEN x'' END) NOT BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END) AND (0.9279223245653748)), GROUP_CONCAT((vt0.c0 IN (v0.c0, vt0.c0))) OVER (), (((((v0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL, v0.c0, v0.c0)))) IS TRUE), SUM((vt0.c0 IN ())), ((((((vt0.c0)>>(vt0.c0)))OR(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND(((NULL) NOT NULL))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE NOCASE COLLATE BINARY FROM v0;SELECT DISTINCT ((v0.c0)||(v0.c0)) COLLATE NOCASE COLLATE NOCASE FROM v0 WHERE (((((('1537586249', x'', 0.026526303107703653))>=(('|rLu', 0.8211764817158881, '<0')))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((- (v0.c0)))+(((v0.c0)GLOB(v0.c0)))) FROM v0 WHERE (((x'')LIKE(x'42aa466e')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT '', 0X44817268, ((CAST(v0.c0 AS NUMERIC)) IS FALSE) FROM v0, vt0 WHERE ((((((((((x'' IN ()))AND(NULL COLLATE NOCASE)))AND(0xffffffffd6ad8336)))OR((('') NOT BETWEEN ('ZAOSjb') AND (0.622515095955503)))))AND(TYPEOF(DISTINCT 0.2275027284222867)))); -- 0ms;
SELECT DISTINCT LIKE(json_array_length(v0.c0, vt0.c0), -1318897262, 'H') FROM v0, vt0;SELECT DISTINCT ((((v0.c0) ISNULL))>=(((v0.c0) NOT NULL))) FROM v0 WHERE (((0x2a660203) IS FALSE)); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((v0.c0) NOTNULL))) AND ((v0.c0 COLLATE BINARY))) FROM v0;SELECT ALL CAST((((v0.c0))>(('-424141636'))) AS REAL) FROM vt0 WHERE (CASE WHEN ((((NULL)AND(0x6acf423e)))OR(0Xffffffff9445996c)) THEN CASE '354207042'  WHEN '/&' THEN NULL END WHEN (- (NULL)) THEN ((('z\GB刍('))<((0.9932786771651873))) WHEN ((x'') BETWEEN ('#{[*') AND (NULL)) THEN ((NULL)/(x'')) END) ORDER BY ((((v0.c0)OR(vt0.c0)))>=(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST;SELECT ALL ((0.8078873098488814) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0, v0 WHERE ('545141975') ORDER BY (((NULL))>=(((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ASC; -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN ((NOT (v0.c0))) AND (x'')) FROM vt0 WHERE ((((TYPEOF(DISTINCT x'cb5c')))<(((((''))<((NULL))))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)|(v0.c0 COLLATE RTRIM)) ASC;SELECT DISTINCT LOWER(SUM(v0.c0)) FROM vt0 WHERE (((((NULL) NOT BETWEEN (x'') AND ('BoO'))) NOT BETWEEN ((('1614233136')-(NULL))) AND ((('ٓ')*(NULL)))));SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, v0; -- 1ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) FROM v0;SELECT GROUP_CONCAT(v0.c0) FROM v0 GROUP BY RTRIM(((vt0.c0)<>(v0.c0))) HAVING CASE ABS(vt0.c0)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) IS TRUE) ELSE (v0.c0 IN ()) END;SELECT DISTINCT (((vt0.c0)-(v0.c0)) IN ()) FROM v0, vt0; -- 0ms;
SELECT ALL ((UNICODE(vt0.c0))-((v0.c0 IN (v0.c0, vt0.c0)))), ABS(DISTINCT CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN '-375405951' ELSE vt0.c0 END), x'39f7', '', ((((((vt0.c0)>>(vt0.c0)))AND(((vt0.c0)GLOB(v0.c0)))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) FROM vt0, v0 WHERE (((json_remove(NULL, NULL)) IS FALSE)); -- 1ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) FROM v0 WHERE (CAST(((x'') ISNULL) AS BLOB));SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((('[S')OR(((0xffffffff8b5f994b) IS FALSE))))AND(((0x5fba283f)LIKE(NULL))))); -- 0ms;
SELECT ALL CASE vt0.c0  WHEN x'' THEN x'' WHEN GROUP_CONCAT(v0.c0) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((vt0.c0) BETWEEN (v0.c0) AND ('A^')) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) END, ((CAST(v0.c0 AS REAL)) IS FALSE), TOTAL((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) FROM v0, vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND ('S[')) AS TEXT)  NULLS FIRST; -- 1ms;
SELECT DISTINCT (vt0.c0 IN (v0.c0)) COLLATE RTRIM FROM v0 GROUP BY (NOT (((vt0.c0) ISNULL)));SELECT ALL (((0.6543065704898832 IN (vt0.c0)))IS NOT((((v0.c0, v0.c0, v0.c0)) BETWEEN ((0.8572796583185428, '-1217314297', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), RTRIM(v0.c0 COLLATE RTRIM), (- (((0x7608446b)+(v0.c0)))) FROM vt0, v0 LIMIT 429326630; -- 0ms;
SELECT ALL CAST((NOT (vt0.c0)) AS TEXT), (NOT (((v0.c0)<('')))), (+ (((vt0.c0)*(v0.c0)))), ((MIN(v0.c0)) BETWEEN (((v0.c0) ISNULL)) AND (CAST(vt0.c0 AS NUMERIC))), (NOT (((vt0.c0) IS TRUE))) FROM v0;SELECT ALL ((((((((vt0.c0)AND(0.5287102631859116)))AND(vt0.c0)))AND(x'')))AND(NULL)), ((((vt0.c0)-(vt0.c0)))<=(((vt0.c0)>(vt0.c0)))), (('L#0') BETWEEN (MAX(0Xffffffffeb002063)) AND (MAX(v0.c0))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE BINARY COLLATE NOCASE FROM vt0, v0 WHERE ((((((x'')>>(0.7315701118820382))))==((x'')))); -- 0ms;
SELECT ALL ((((v0.c0 COLLATE RTRIM)AND(vt0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))), NULL, ((((v0.c0)=(v0.c0))) IS TRUE) FROM vt0, v0 WHERE (((((((NULL)AND(x'bafc08c5')))AND(0x44a6eb78)))<=(CASE NULL  WHEN 0Xffffffffe35b1822 THEN 0.0050428674599999335 ELSE x'' END))); -- 0ms;
SELECT DISTINCT vt0.c0, CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END AS REAL), CAST(((vt0.c0) IS FALSE) AS BLOB) FROM v0 LIMIT -644018110 OFFSET 354207042;SELECT ALL vt0.c0, LEAD(CAST(vt0.c0 AS TEXT) COLLATE RTRIM, ((vt0.c0)!=(vt0.c0)) COLLATE NOCASE, (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) OVER ( RANGE  CURRENT ROW), ((LTRIM(v0.c0, vt0.c0)) IS TRUE) FROM vt0 WHERE (((0.4488437666733912 COLLATE RTRIM)>>('0.9616215105998607' COLLATE BINARY)));SELECT DISTINCT (((CASE WHEN '-109844278' THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN '-1' WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0)<>(v0.c0)), (vt0.c0 IN ()), v0.c0, ((((((((-375405951)OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(0.8402036130640621))))<=((v0.c0, ((v0.c0) NOT NULL), vt0.c0, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))), CAST(vt0.c0 AS INTEGER)))) FROM v0, vt0 WHERE (CASE WHEN '-1752909851' THEN CAST(NULL AS TEXT) ELSE (('')GLOB(x'')) END) GROUP BY CAST((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS NUMERIC) HAVING CAST(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END AS NUMERIC); -- 0ms;
SELECT ALL (((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN 0.19927591721146998 ELSE vt0.c0 END, (v0.c0 IN (vt0.c0)), (((v0.c0, vt0.c0, vt0.c0))>=((NULL, v0.c0, vt0.c0))))) AND (((v0.c0 IN (v0.c0, v0.c0)), CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, 0.8882230779920838 COLLATE NOCASE))), ((((vt0.c0)+(v0.c0))) NOT NULL), (((MAX('1720314813'), CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0 COLLATE NOCASE))>=((((((0xffffffff86669ae1)AND(vt0.c0)))AND(v0.c0)), (((v0.c0))==((vt0.c0))), v0.c0))) FROM vt0;SELECT CAST(((vt0.c0)|(v0.c0)) AS REAL) FROM v0;SELECT DISTINCT RANK() OVER () FROM v0, vt0 WHERE ((+ (((NULL) BETWEEN ('287501628') AND ('0.8700488066665628'))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((v0.c0)IS(NULL))) IS FALSE)) OVER ( ORDER BY (((NOT (v0.c0))) NOT BETWEEN (v0.c0) AND (x'9121'))  NULLS LAST) FROM v0 WHERE ((NOT (''))); -- 1ms;
SELECT DISTINCT json_array(v0.c0, ((vt0.c0)LIKE(v0.c0))) FROM v0, vt0 WHERE (((((((NULL)OR(0.6724359070475344)))OR('-375405951'))) NOT BETWEEN (json_insert('bk', x'2097', 0.6018090512907603)) AND (((-424141636)|(-1709737320)))));SELECT DISTINCT NTILE((((((((v0.c0))>=((v0.c0))))OR(((v0.c0) NOTNULL))))AND(CAST(v0.c0 AS REAL)))) OVER () FROM v0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((v0.c0)>=(v0.c0)) COLLATE RTRIM FROM v0 WHERE (CAST(NULL AS BLOB)); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) AS BLOB), COUNT(*), (((NOT (x''))) BETWEEN (vt0.c0) AND (CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN vt0.c0 ELSE v0.c0 END)) FROM v0, vt0 WHERE (((((((1.92644843E8)OR('')))OR(NULL))) NOTNULL)); -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0 WHERE ((((CASE '0.5201343013203373'  WHEN '0.584087186805575' THEN x'248f' ELSE x'' END))==((IFNULL('-1454376594', -1781771828))))); -- 0ms;
SELECT DISTINCT CASE WHEN HEX(v0.c0) THEN LIKELY(vt0.c0) ELSE (((vt0.c0))>=((vt0.c0))) END FROM v0, vt0 WHERE (CASE (('OQ')LIKE(x''))  WHEN 'iAHIZZ' COLLATE RTRIM THEN (('-1034690270')>>(x'')) ELSE TRIM(DISTINCT NULL, 0.6868691902480843) END); -- 0ms;
SELECT ((((vt0.c0)|('-1911843176'))) ISNULL), CAST((- (v0.c0)) AS INTEGER), NULLIF(DISTINCT ((NULL) IS TRUE), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM v0 LIMIT -352317977;SELECT ALL vt0.c0 FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((v0.c0 IN ())) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)) FROM vt0, v0; -- 0ms;
SELECT (((('gY')AND(vt0.c0)))/((((v0.c0))=((vt0.c0))))) FROM vt0 WHERE (((NULL IN ()) IN ()));SELECT (((v0.c0 IN ())) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)))) FROM v0, vt0 WHERE (CASE json_remove(-641865163, NULL, -1946770510, 0.45820060089064474)  WHEN '-1492225705' THEN CAST(0.08436666739373344 AS TEXT) WHEN CAST(x'' AS BLOB) THEN TRIM(NULL) WHEN ((NULL)>=(NULL)) THEN (((('-1865062200')AND(0.8235143296866225)))AND(x'6d55')) END); -- 0ms;
SELECT TRIM(DISTINCT ((958108876)*(v0.c0)), SUM(vt0.c0)), GROUP_CONCAT(TRIM(vt0.c0, v0.c0)), CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) FROM vt0 WHERE ((CASE '-755614395'  WHEN 0.12568546401261615 THEN 0.5057325745721017 WHEN -1008730585 THEN 'j' WHEN -2117159561 THEN x'c757' END IN ()));SELECT (((((vt0.c0)IS(v0.c0))))>(((v0.c0 IN ())))) FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((UPPER(vt0.c0))) AND ((CASE WHEN v0.c0 THEN v0.c0 END))), (~ ((NOT (x'86c6')))) DESC  NULLS FIRST;SELECT DISTINCT (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE) FROM vt0;SELECT vt0.c0, (- (CAST(vt0.c0 AS NUMERIC))), '74390087' FROM v0 WHERE ('8Qc~\r(둽');SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))))>=(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)))) FROM v0 WHERE ((CAST('' AS TEXT) IN (((0.03147639975794514) IS TRUE))));SELECT DISTINCT ((((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))<=(AVG('y8wU'))) FROM vt0, v0 WHERE ((((('-1644738528')-('-811860711'))) NOTNULL)); -- 0ms;
SELECT ALL (((NOT (vt0.c0)))+(((vt0.c0)GLOB(vt0.c0)))) FROM vt0 GROUP BY v0.c0;SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS INTEGER)) OVER () FROM v0 WHERE (((((0X2cf8818c)|('')))||(x''))) LIMIT -1695096253;SELECT ALL FIRST_VALUE((vt0.c0 IN ())) OVER () FROM vt0 WHERE ((((- (-1055813592))) NOT BETWEEN (((x'20db') IS TRUE)) AND (((('-26013573', x'', '-595475752'))>=((NULL, 1.720314813E9, x'')))))); -- 0ms;
SELECT ALL COUNT(CASE WHEN vt0.c0 THEN v0.c0 END) OVER ( ROWS  UNBOUNDED PRECEDING) FROM v0 GROUP BY v0.c0 LIMIT -1143695906 OFFSET 295176084;SELECT DISTINCT LIKELIHOOD(DISTINCT (- (v0.c0)), 0.6034090101631299) FROM v0 WHERE ((- (''))); -- 0ms;
SELECT ALL TYPEOF((('') BETWEEN (NULL) AND (v0.c0))) FROM vt0, v0; -- 0ms;
SELECT ALL ((LIKELY(DISTINCT vt0.c0)) BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))) FROM v0, vt0; -- 0ms;
SELECT ((((vt0.c0)OR('-1387506982')))AND(v0.c0)) COLLATE RTRIM FROM v0, vt0 WHERE ((((((((NULL))<>((NULL))))OR((~ (x'857f')))))OR((- ('1406861165'))))); -- 0ms;
SELECT ALL '' FROM v0, vt0 WHERE (CAST(((NULL)*('x')) AS BLOB)); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE BINARY FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND ('')))AND(CASE WHEN '-104083629' THEN NULL ELSE '0.24799833606717547' END))); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((x'')&(vt0.c0)))), ((COUNT(v0.c0)) NOT BETWEEN (((v0.c0)*(v0.c0))) AND ((NOT (v0.c0)))), 1312629395, ((((vt0.c0) NOT BETWEEN (v0.c0) AND (0.9914146995688176)))&(CAST(NULL AS BLOB))), (+ ((((v0.c0, v0.c0, v0.c0))>=((vt0.c0, v0.c0, v0.c0))))) FROM v0;SELECT MAX(((vt0.c0)<(vt0.c0))) FROM v0 WHERE (UPPER(DISTINCT x'5175'));SELECT ALL (NOT ((- (vt0.c0)))) FROM v0 WHERE (CASE (('-555375848')AND('-1536961407'))  WHEN ((-9.79286586E8)LIKE(x'')) THEN json_extract('n', x'a0e2') ELSE 0.41184177123459487 END);SELECT ALL GLOB(UPPER(DISTINCT v0.c0), v0.c0), NULLIF(DISTINCT v0.c0, NULL), ((((vt0.c0)LIKE(v0.c0)))%(((0.7443758460877449) NOT BETWEEN (vt0.c0) AND (v0.c0)))) FROM v0 WHERE (((0.09934144216868168) NOT BETWEEN ((((0.6324289620265082))<>((x'da4a')))) AND ((x'c2b6' IN ())))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN 0.22305795568413989 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END THEN CASE WHEN x'8682' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL ELSE v0.c0 END WHEN 0X5618887c THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN (- (vt0.c0)) THEN CASE WHEN vt0.c0 THEN '' ELSE v0.c0 END WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN 0.0032624165598809096 WHEN ABS(DISTINCT '637350374') THEN vt0.c0 ELSE TRIM(DISTINCT v0.c0, x'4eaf') END DESC;SELECT DISTINCT CAST((vt0.c0 IN (vt0.c0)) AS NUMERIC) FROM vt0, v0 WHERE ((- ((((('-1745237934')OR(NULL)))OR(0x1240f3e2))))); -- 0ms;
SELECT CAST(CASE WHEN v0.c0 THEN v0.c0 END AS INTEGER), x'', (- (((v0.c0) ISNULL))) FROM vt0 WHERE (CASE WHEN x'' COLLATE BINARY THEN 0Xffffffff946d3736 WHEN LIKELIHOOD(x'272e', 0.8787942502477849) THEN (('-788143977') IS FALSE) WHEN x'' THEN ((0.5415395038106311) NOTNULL) ELSE ((x'') NOT BETWEEN ('545141975') AND (NULL)) END) ORDER BY ((json_patch(v0.c0, v0.c0)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND ('Sٓ')) DESC;SELECT CAST((((((((('nⱆB8')OR(v0.c0)))AND(0.325699740071998)))OR(vt0.c0)))AND(v0.c0)) AS BLOB) FROM v0 WHERE ((- (CASE 0.012566932109336681  WHEN NULL THEN 0.010630287524208581 END)));SELECT DISTINCT SQLITE_VERSION(), (((NULL, v0.c0, vt0.c0)) BETWEEN ((((vt0.c0)IS NOT(v0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)), CAST(v0.c0 AS REAL))) AND ((x'', (((vt0.c0))<>((v0.c0))), (NOT (v0.c0))))), GROUP_CONCAT(((((((((vt0.c0)AND(v0.c0)))AND(NULL)))AND(v0.c0)))OR(vt0.c0))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT 0.9122275257628321 FROM v0 WHERE (((((x'')AND('1664906999'))) IS FALSE)) GROUP BY ((v0.c0) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (CAST(v0.c0 AS REAL))), CASE WHEN v0.c0 COLLATE NOCASE THEN '' WHEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((vt0.c0)GLOB(v0.c0)) THEN UPPER(DISTINCT vt0.c0) END, NULL ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (INSTR(v0.c0, vt0.c0))) DESC  NULLS FIRST;SELECT MIN(v0.c0) FROM v0, vt0 GROUP BY (+ ((- (v0.c0)))) HAVING UPPER(x''); -- 0ms;
