-- Time: 2024/06/07 09:13:15
-- Database: database17
-- Database version: 3.40.0
-- seed value: 1948211717
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (0.5066632642203728), (0.7200426271918319), (NULL), (x''); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.3309802301461181), (NULL), (x'554c'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.3309802301461181) WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ('462986431') AND (((vt0.c0)>(vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'0c7a' WHERE ((vt0.c0) ISNULL); -- 0ms;
END; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''''); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.193041311238349), (4.62986431E8), (',d'); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-748012383'); -- 0ms;
PRAGMA main.threads = 2782360066453801949; -- 1ms;
PRAGMA temp.stats; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.14841620925688692); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -821067904);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29649'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40063'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1236697219,7');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum = NONE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7909597790497848 WHERE 0x432277e8; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER UNIQUE ); -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE vt0.c0; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i35 ON t0(((((c0)!=(c0)))<<(CASE WHEN c0 THEN c0 END))); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), ('1236697219'), ('561567425'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c96; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36563'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (' \nnM'), (0.24269268404867983); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE INDEX IF NOT EXISTS i18 ON t1((x'' IN ())); -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=(NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c96 TO c40; -- 1ms;
UPDATE OR ABORT t1 SET (c40, c40)=(1.236697219E9, NULL) WHERE (((((t1.c40, t1.c40, t1.c40)) BETWEEN ((t1.c40, t1.c40, t1.c40)) AND ((t1.c40, t1.c40, t1.c40)))) NOTNULL); -- 0ms;
REINDEX  vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5494685362577089) WHERE CAST((- (vt0.c0)) AS INTEGER); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
REINDEX  vt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42802'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 213530884); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE CAST(CAST(vt0.c0 AS INTEGER) AS BLOB); -- 3ms;
CREATE VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))>=((NULL, vt0.c0, vt0.c0))))OR(x'1199')))AND(json_array_length(vt0.c0, vt0.c0))), DENSE_RANK() OVER ( RANGE  CURRENT ROW), AVG(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) OVER () FROM vt0; -- 1ms;
PRAGMA mmap_size = -4967830951632575340; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (0.19380614203904845), (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(0.45135128815880843, 1649122889, x''); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0X2178d6c1); -- 0ms;
PRAGMA main.automatic_index = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1341831428); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 840879741);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (1649122889), ('1709516939'), ('864:1393 388:'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -748012383);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA defer_foreign_keys; -- 0ms;
PRAGMA wal_autocheckpoint = 4725839997836088100; -- 0ms;
UPDATE vt0 SET c0=-821067904; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.8460501339782647), (NULL), (''); -- 1ms;
PRAGMA busy_timeout = 0; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6490'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF UPDATE OF c2 ON v0 FOR EACH ROW  WHEN (NOT ((v0.c0 IN ()))) BEGIN UPDATE vt0 SET (c0, c0)=(NULL, NULL);END; -- 0ms;
PRAGMA cache_spill; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c0)) COLLATE NOCASE FROM vt0 WHERE (CAST((((('1126332392')OR(0.5273095592245906)))OR(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE TYPEOF(DISTINCT vt0.c0)  WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c0)IS(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END FROM vt0 WHERE ((('F|')!=((((NULL)) BETWEEN ((0xffffffffb1a412c2)) AND (('-1273451776')))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST, CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) WHEN (NOT ('')) THEN ((vt0.c0)*(vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM ELSE (~ (vt0.c0)) END ASC  NULLS FIRST LIMIT 462986431 OFFSET -1314647358; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE CASE (~ (vt0.c0))  WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) OVER () FROM vt0 GROUP BY vt0.c0 HAVING ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE ORDER BY (((~ (vt0.c0)))=(((vt0.c0)||(vt0.c0)))) ASC, ((('-478104012', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)&(vt0.c0)), vt0.c0, CAST(vt0.c0 AS TEXT))) AND (('xYvDUmZL', (((vt0.c0))<((vt0.c0))), ((vt0.c0)<=(vt0.c0))))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT GLOB(SUM(vt0.c0), CAST(vt0.c0 AS NUMERIC)) FROM vt0; -- 0ms;
SELECT ((COUNT(vt0.c0)) ISNULL) FROM vt0 WHERE ((~ (1126332392)) COLLATE BINARY); -- 0ms;
SELECT ALL json(SUM(vt0.c0)) FROM vt0; -- 1ms;
SELECT DISTINCT 0X7c4feb37, ((((GROUP_CONCAT(vt0.c0))OR(((vt0.c0) NOT BETWEEN (0.8306596242354012) AND (vt0.c0)))))AND(((vt0.c0)%(vt0.c0)))), ((((((((MIN(vt0.c0))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0) ISNULL))))AND(vt0.c0)))OR(AVG(vt0.c0))) FROM vt0 WHERE (TYPEOF(DISTINCT (((0X25e21b1)) BETWEEN (('5g徚365|O')) AND ((x''))))) LIMIT 2085612343 OFFSET 39723441; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE BINARY, CAST(((vt0.c0)LIKE(vt0.c0)) AS NUMERIC), MAX(vt0.c0) FROM vt0 WHERE ((((0X2178d6c1)*(NULL)) IN ())); -- 0ms;
SELECT LEAD(((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))!=(0.619322916887771)), (((((~ (vt0.c0)))AND(((vt0.c0)IS(x'')))))AND(vt0.c0 COLLATE NOCASE)), vt0.c0) OVER () FROM vt0; -- 1ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (TOTAL(vt0.c0)) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)LIKE(NULL)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR((~ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)==(vt0.c0))) NOTNULL), COUNT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER (), ((((vt0.c0)/(vt0.c0))) ISNULL) FROM vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0))>(('39723441', vt0.c0, vt0.c0))) THEN (((vt0.c0))>=((vt0.c0))) END ASC  NULLS FIRST, (((((vt0.c0)) BETWEEN ((1649122889)) AND ((vt0.c0))))<(QUOTE(vt0.c0))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((vt0.c0)<(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((('\r')) BETWEEN (((((-94901388)) NOT BETWEEN ((NULL)) AND ((NULL))))) AND ((CAST(NULL AS TEXT))))) INTERSECT SELECT ALL ((((((((((vt0.c0)OR(vt0.c0)))AND('\r')))OR(vt0.c0)))OR(vt0.c0))) ISNULL) FROM vt0 ORDER BY ((((NOT (vt0.c0)), json_valid(vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '1236697219' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<((((vt0.c0)<>(vt0.c0)), (vt0.c0 IN ()), (vt0.c0 IN ())))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0)+(vt0.c0)), (NOT (NULL)), (vt0.c0 IN ()))))  NULLS FIRST;SELECT ((((vt0.c0) IS FALSE)) BETWEEN (((((((((NULL)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL))) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) BETWEEN (0.43229125172273186) AND (vt0.c0)))) FROM vt0 WHERE (NULL) ORDER BY (NOT (((vt0.c0)=(vt0.c0)))); -- 0ms;
SELECT DISTINCT x'' FROM vt0; -- 0ms;
SELECT 0.4784206033854639, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CAST((NOT (vt0.c0)) AS NUMERIC) FROM vt0 GROUP BY ((((vt0.c0))>((vt0.c0))) IN (((vt0.c0)LIKE(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), TOTAL_CHANGES(), (((('-1160933450')AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY COLLATE RTRIM ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c0)IS(vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM, 0.7909597790497848 COLLATE NOCASE, ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(MIN(vt0.c0))))OR((~ (vt0.c0)))))OR(MAX(vt0.c0))) FROM vt0; -- 1ms;
SELECT ALL (((vt0.c0, NULL, vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS REAL), ((vt0.c0)%(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)/(vt0.c0)), (((vt0.c0))<=((vt0.c0)))))) FROM vt0 WHERE ((+ (((0.9881415101642226) ISNULL)))) GROUP BY CAST(vt0.c0 COLLATE RTRIM AS BLOB); -- 0ms;
SELECT DISTINCT (((MIN(vt0.c0), vt0.c0, ((vt0.c0) IS FALSE)))=((AVG(vt0.c0), vt0.c0, ((((0.8331587116428787)OR(0.5768654957328582)))AND(vt0.c0))))) FROM vt0 WHERE ((- (DATE('1227797103', 0.08966862808551668, '598683952')))); -- 0ms;
SELECT ((((((vt0.c0))<=((vt0.c0)))))<>(((vt0.c0 IN ())))) FROM vt0 WHERE ((((~ ('1649122889')))/((NULL IN ())))); -- 0ms;
SELECT ((vt0.c0)-(vt0.c0 COLLATE NOCASE)), (~ (TOTAL(1027849059))), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE FROM vt0 GROUP BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) HAVING GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 WHERE (0.4358145384877239) ORDER BY ((((((((CAST(vt0.c0 AS REAL))OR(((vt0.c0)||(vt0.c0)))))AND(((vt0.c0) ISNULL))))OR(((vt0.c0)||(vt0.c0)))))AND(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL ((NULL)>(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((0.547377198215276 COLLATE NOCASE)IS(((0.7200426271918319)IS NOT(''))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((LIKELIHOOD(vt0.c0, 0.9167153402482752))) AND ((((vt0.c0) NOT NULL)))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((GROUP_CONCAT(NULL))) AND ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '39723441' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))), ((((vt0.c0)IS(vt0.c0))) NOTNULL), vt0.c0 COLLATE NOCASE FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))-((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC; -- 0ms;
SELECT DISTINCT ((((json_array_length(vt0.c0))OR('0.8306596242354012' COLLATE BINARY)))AND(((vt0.c0)<>(vt0.c0)))), ((AVG(vt0.c0)) BETWEEN (((vt0.c0)>>(NULL))) AND (((vt0.c0) NOT NULL))), x'' COLLATE BINARY FROM vt0; -- 0ms;
SELECT ALL ((('462986431' IN (x''))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (0.6635450216950463)) FROM vt0; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0))) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (vt0.c0)), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)IS NOT(vt0.c0)))), CASE WHEN NULL THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 WHERE (((CASE 'XZ'  WHEN NULL THEN 0.3272683367658117 END)||('1027849059'))) GROUP BY CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN ((vt0.c0) NOT NULL) END HAVING vt0.c0; -- 0ms;
SELECT DISTINCT CAST(MIN(vt0.c0) AS INTEGER) FROM vt0 WHERE ((- (NULL)) COLLATE RTRIM); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((('')OR(vt0.c0)))AND(vt0.c0)), MAX(vt0.c0))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(x'')))OR(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x'')))))), (vt0.c0 IN (vt0.c0)) COLLATE NOCASE, (AVG(vt0.c0) IN ()) FROM vt0 WHERE (((((CASE 0.1947151458433639  WHEN '1709516939' THEN NULL END)AND(CASE NULL  WHEN 0.9259196216625905 THEN 1487268456 END)))AND((((((((('\r')OR(0.3142474432580934)))AND(-8.21067904E8)))AND(x'')))OR(1418351751))))) LIMIT -218206897; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL))==(vt0.c0)) FROM vt0 WHERE (((((NULL) BETWEEN (NULL) AND (0x22e5e13c))) NOT BETWEEN (LIKELIHOOD(DISTINCT 0x5f42d61e, 0.5088645630114537)) AND ((((NULL))>((NULL)))))); -- 0ms;
SELECT CASE -9.4901388E7  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((vt0.c0) NOTNULL) END FROM vt0 WHERE (json_remove((((NULL, NULL, x''))<((0.21100057310678522, x'8937', '0.193041311238349'))), CAST('鲿\n' AS BLOB))) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS REAL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), CAST(CAST(vt0.c0 AS TEXT) AS INTEGER), ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0)))IS(((vt0.c0)GLOB(vt0.c0)))), NULL, (((((+ ('-1160933450')))AND(json(vt0.c0))))OR((NOT (vt0.c0)))) FROM vt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (NULL COLLATE RTRIM))) LIMIT -265109946; -- 0ms;
SELECT DISTINCT ((TRIM(vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN SQLITE_VERSION() END FROM vt0 WHERE (((('', '0.5066632642203728', 'UM(Ur')) NOT BETWEEN (((('-1496299570')AND('')), (('') IS TRUE), ((x'') NOT BETWEEN (0Xffffffffbc229412) AND ('')))) AND (((NOT ('')), ((0.5339362521278846) IS FALSE), CAST(-513487897 AS BLOB))))); -- 0ms;
SELECT ALL NULL FROM vt0 WHERE ('1724912127'); -- 0ms;
SELECT ALL (((vt0.c0 IN (vt0.c0, vt0.c0))) NOTNULL) FROM vt0 WHERE (IFNULL((((x'', x'', NULL)) BETWEEN ((NULL, x'', x'')) AND ((549396856, '1143729373', x'1a28'))), (- ('2100320719')))); -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) FROM vt0 WHERE (0x3abbf81b) GROUP BY CAST(HEX(vt0.c0) AS NUMERIC); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((CASE vt0.c0  WHEN 0.9298232639499381 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN -1158887982 THEN vt0.c0 END))) FROM vt0 GROUP BY ((((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)||(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CASE WHEN 0.28186765842133743 THEN UPPER(DISTINCT vt0.c0) ELSE ((vt0.c0) ISNULL) END, ((((vt0.c0)>=(vt0.c0)))*(((((0.8542667380521047)AND(vt0.c0)))OR(vt0.c0)))) HAVING (((vt0.c0)==(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)); -- 1ms;
SELECT DISTINCT CASE (- (vt0.c0))  WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS INTEGER) ELSE CAST(0.340009703733986 AS REAL) END FROM vt0 WHERE (((0.7608355323986031)=(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE ''  WHEN NULL THEN x'' END FROM vt0 WHERE (CASE ((0.03871872252026598) BETWEEN ('') AND ('n譞d0#d]-2'))  WHEN '0.5339362521278846' THEN CAST('-589122014' AS NUMERIC) WHEN 725174819 THEN (((0.9916171146430127, 0.45135128815880843, 'r?')) BETWEEN (('1602713941', NULL, '')) AND (('725174819', 0Xffffffffce9564f0, x'0f1c'))) WHEN NULL COLLATE NOCASE THEN 3.9723441E7 END) LIMIT -1387543910; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), 0.6055911642542503, '1' FROM vt0 WHERE ((((((((((+ ('')))AND((- (x'48bbe318')))))AND(CASE WHEN NULL THEN 0xffffffffbd4e6c9c ELSE NULL END)))AND(0.8165250464774388 COLLATE NOCASE)))AND(CASE WHEN NULL THEN 0.8428201810666917 ELSE NULL END))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((vt0.c0)+(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)>>(vt0.c0))) NOT BETWEEN (SUM(vt0.c0)) AND (COUNT(vt0.c0))), CAST((vt0.c0 IN (vt0.c0)) AS TEXT), CAST(NULL AS INTEGER) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT MAX(json_array_length(vt0.c0, vt0.c0)) FROM vt0 WHERE (((0Xffffffffd75a11b3) IS TRUE)) GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)+(116677726));SELECT DISTINCT LAST_INSERT_ROWID(), vt0.c0, 0.5944739314731116 FROM vt0 LIMIT 1581144560; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS BLOB))+(((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT ALL LIKELIHOOD((((vt0.c0))<>((vt0.c0))), 0.2670572699377439), ((((AVG(vt0.c0))AND(DATE(vt0.c0, vt0.c0, vt0.c0))))OR((vt0.c0 IN (vt0.c0)))), CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN MIN(vt0.c0) THEN (vt0.c0 IN ()) END FROM vt0 WHERE (CASE '0.5494685362577089'  WHEN x'e3b8' THEN '0.21100057310678522' END COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)OR(vt0.c0)))OR('1126332392')))OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0))<=((vt0.c0))))) FROM vt0 WHERE ('1487268456'); -- 1ms;
SELECT vt0.c0 COLLATE BINARY, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)||(vt0.c0)))), (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, MIN(vt0.c0), CAST(vt0.c0 AS TEXT))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, NULL))) FROM vt0 WHERE (((3.9723441E7 COLLATE NOCASE)>=(('./M{F' IN ('0.7608355323986031'))))) ORDER BY vt0.c0 ASC, ((x'1822') IS TRUE) ASC; -- 0ms;
SELECT ((MAX(vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)>=(1236697219)))) FROM vt0 WHERE (((((((NULL)OR(NULL)))OR(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)>>(vt0.c0)) COLLATE BINARY) OVER (), COALESCE(MIN(vt0.c0), ((vt0.c0)<(vt0.c0)), MAX(vt0.c0), ((vt0.c0)IS(vt0.c0))), 0.3341199018953034 FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)GLOB(vt0.c0))) OVER (), COUNT(*), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((+ (vt0.c0)))) FROM vt0 LIMIT 53601753; -- 0ms;
SELECT ALL NTILE(((((x'')*(vt0.c0))) IS FALSE)) OVER (), LEAD(vt0.c0, (((~ (vt0.c0)))/(((vt0.c0)OR(vt0.c0)))), ((((vt0.c0)<=(vt0.c0)))>=(CAST(vt0.c0 AS BLOB)))) OVER (), (((0.7200426271918319)||(vt0.c0)) IN ()), ((((((('0.8428201810666917')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(MIN(vt0.c0))), '~s' FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))LIKE(0.5665539070777722 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0))>=((vt0.c0))) ELSE TYPEOF(NULL) END FROM vt0 GROUP BY vt0.c0 COLLATE NOCASE HAVING ('' IN ()); -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID(), (((NOT (0xffffffffe076f23c)))=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), SUM(((vt0.c0) IS TRUE)) FILTER(WHERE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((RTRIM('-727129031'), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))) AND ((CAST(vt0.c0 AS BLOB), CASE WHEN vt0.c0 THEN vt0.c0 ELSE '' END, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))) OVER () FROM vt0 WHERE (CASE ((0X7ea2e36e)OR(''))  WHEN x'53b5' COLLATE NOCASE THEN ('5]T|*4k4' IN (x'', -735272117)) ELSE (+ (0.934717050140012)) END); -- 0ms;
SELECT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0 WHERE (0.28186765842133743); -- 0ms;
SELECT DISTINCT ((CASE WHEN x'6864' THEN vt0.c0 END) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt0.c0)), ((((((('*|<+妦D^!')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)||(vt0.c0)))))OR(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((vt0.c0) IS TRUE) COLLATE RTRIM, (NOT (vt0.c0)), TRIM(TYPEOF(DISTINCT vt0.c0)) FROM vt0 WHERE ((((((('-94901388')OR(x'')))OR(NULL)))||('2100320719'))) GROUP BY NULL, (((((('b', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 355494772)))))<((((vt0.c0) IS FALSE)))), (- ('985397275')), ((vt0.c0)<<(vt0.c0)) COLLATE BINARY, (NOT ((vt0.c0 IN ()))); -- 0ms;
SELECT CASE WHEN ((vt0.c0)/('553113710')) THEN ((vt0.c0)|(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, (((- (vt0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (vt0.c0 IN ()) FROM vt0 WHERE ((- (('-513487897' IN ())))); -- 0ms;
SELECT LOWER('-218206897' COLLATE NOCASE) FROM vt0 LIMIT -2017254907 OFFSET -589122014; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) AND ((COUNT(*)))) FROM vt0 ORDER BY LIKELIHOOD((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), 0.044491269120750854) ASC; -- 0ms;
SELECT DISTINCT SUM(CASE 0.6940059315604505  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.43229125172273186 END), (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((((vt0.c0)OR(0.5109861556044296)))AND(vt0.c0))) NOT NULL) FROM vt0 WHERE (MIN(rtreenode('~', ''), (NULL IN ()))); -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0))>=((vt0.c0))))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((vt0.c0)||(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL LAG(vt0.c0, ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)AND(json_quote(vt0.c0))))OR(((vt0.c0)>=(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(SQLITE_VERSION())))OR(((vt0.c0)IS(vt0.c0)))), LIKELIHOOD(CAST(vt0.c0 AS INTEGER), 0.9150432252232724)) OVER () FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0)/(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((((NULL))=((NULL))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT vt0.c0, (((((((((NOT (vt0.c0)))OR(((((vt0.c0)OR(x'ba673e6f')))OR(vt0.c0)))))OR(((vt0.c0)AND(vt0.c0)))))OR(CAST(vt0.c0 AS BLOB))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)), '-1986828880' FROM vt0 WHERE (CASE WHEN (((('-2017254907')AND(346583153)))OR('0.21100057310678522')) THEN (((NULL)) NOT BETWEEN ((0.9407547124654071)) AND ((''))) WHEN (('-2017254907') BETWEEN (0.824259655230957) AND (x'')) THEN -1.38754391E9 WHEN (NOT ('*|<+妦D^!')) THEN CASE 0.875972059488873  WHEN 'b' THEN 0.2164986453637867 ELSE '346583153' END END); -- 0ms;
SELECT DISTINCT ((((UNLIKELY(vt0.c0))AND((vt0.c0 IN ()))))AND(((vt0.c0) ISNULL))) FROM vt0 WHERE (((((0.934717050140012)%(NULL)))|((-457621103 IN ())))); -- 0ms;
SELECT ALL ((vt0.c0 IN (x'', vt0.c0)) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST((((('')OR(0.6704827133405086)))OR(NULL)) AS TEXT)) LIMIT -11051316; -- 0ms;
SELECT '1709516939' FROM vt0 WHERE ((((('582141946') NOT BETWEEN ('1435457961') AND (''))) BETWEEN (((NULL) IS FALSE)) AND (((x'7ed8') BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT DISTINCT ((((~ (vt0.c0))))==((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) FROM vt0 LIMIT 427821697 OFFSET -563824794; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)>(vt0.c0))) OVER (), ((((x'')-(vt0.c0)))>=(NULL)), (NOT (MAX(vt0.c0))), (((((vt0.c0))>((NULL)))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (x'')), ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0 COLLATE NOCASE)OR(QUOTE(vt0.c0))))OR((vt0.c0 IN (vt0.c0)))))OR(json(vt0.c0))))AND(NULL)) FROM vt0 WHERE (json_array_length((((0.17164620848701717))<(('⅍G	r	~sVO'))), ((((0.2525205642811865)AND(NULL)))OR(0.04183438230632541))));SELECT DISTINCT (((vt0.c0)LIKE(vt0.c0)) IN ()) FROM vt0 WHERE (((((NULL IN ('-19272016')), CASE NULL  WHEN 'F|' THEN '39723441' END, 0.7937838194817615, ((NULL) IS FALSE), LAST_INSERT_ROWID()))<((CAST('' AS NUMERIC), ('-1162507426' IN ()), (('1771502827')LIKE(x'')), ((NULL) IS FALSE), ((NULL)>=(NULL)))))); -- 0ms;
SELECT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL) FROM vt0 GROUP BY vt0.c0, ((vt0.c0) NOT NULL), DATE((('')IS NOT(vt0.c0)), ((vt0.c0)%(vt0.c0)), (NOT (vt0.c0))) HAVING 'VG'; -- 0ms;
SELECT ALL ((((0.8156073698619102)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 355494772))))) FROM vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((x'b62a')AND(NULL)))OR(x'')))OR(x'896f')))OR(NULL)))%(((((0.1377967094363468)AND(0.2217726314493701)))OR('~'))))); -- 0ms;
SELECT DISTINCT CAST(json(0.3309802301461181) AS NUMERIC), vt0.c0, ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) FROM vt0; -- 0ms;
SELECT CASE (vt0.c0 IN (vt0.c0))  WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE (- (vt0.c0)) END FROM vt0; -- 0ms;
SELECT CAST(GROUP_CONCAT(vt0.c0) AS REAL), (~ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), 4.27821697E8 FROM vt0 WHERE ((((x'', 0.7621522450910158, 0X35e64309)) BETWEEN ((('-640707059' IN ()), 'D￮+G嗈QD(C' COLLATE RTRIM, QUOTE(NULL))) AND ((((NULL)/(0.8781813049491439)), ((x'')AND(0.5619623964038039)), (((('-1162507426')AND(NULL)))OR('O~d	Sb')))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)<=(((vt0.c0)LIKE(vt0.c0)))) FROM vt0 WHERE (((('-1328668339')) BETWEEN ((x'' COLLATE NOCASE)) AND (('cj')))); -- 0ms;
SELECT DISTINCT x'11bc3888', (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((vt0.c0 IN ()), TOTAL(0x70a9a9c2), (-2.00272229E9 IN (vt0.c0, vt0.c0)))) AND ((vt0.c0, 0.9640863346555238, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))), NTILE((((vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((((vt0.c0)||(vt0.c0)))))) OVER () FROM vt0;SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE ((~ ('-1613576986')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)|(vt0.c0)) THEN x'' END, (((vt0.c0)/(vt0.c0)) IN ()), SUM(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER () FROM vt0 WHERE ((((((('dK3') IS TRUE))OR((~ (x'1f14')))))AND(''))) GROUP BY (0.8257457604932922 IN ()), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(0.6592381954042855)), (- ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))); -- 0ms;
SELECT CAST(NULL AS TEXT), (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), MIN(vt0.c0), (~ (vt0.c0))))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) BETWEEN ('1330975927') AND (vt0.c0)), (+ (vt0.c0))))), ROW_NUMBER() OVER () FROM vt0 WHERE (((((NULL) IS FALSE))>(LIKELIHOOD(x'', 0.14880008684208268)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((TRIM(vt0.c0, vt0.c0))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) FROM vt0 WHERE (((((((NULL)AND('''')))AND(x'7944'))) ISNULL)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC))IS NOT((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))), ((vt0.c0)+(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((CAST(vt0.c0 AS BLOB))/(((vt0.c0)<>(vt0.c0)))), ((CAST(vt0.c0 AS BLOB))|(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))), ((((((vt0.c0)>(vt0.c0)))AND((('427821697')<<(vt0.c0)))))AND((- (vt0.c0)))) FROM vt0 WHERE ((((0.8931682790529369) NOT NULL) IN ())); -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((('904282889') ISNULL) IN ())); -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt0 WHERE (((((((x'') NOT BETWEEN (NULL) AND (0.5139628637534104)))AND((('598683952')<(',^')))))AND(CASE WHEN 'gl' THEN 0.5986505297240308 WHEN x'' THEN x'' WHEN NULL THEN 0.5339362521278846 END))) GROUP BY (- (((((vt0.c0)AND(0.5066632642203728)))AND(vt0.c0)))), IFNULL((~ (vt0.c0)), vt0.c0), (~ (((vt0.c0)/(vt0.c0)))), vt0.c0, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))/(CASE WHEN NULL THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT ALL ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))))OR(((x'') IS FALSE))))AND((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL ((HEX(DISTINCT vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT AVG(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) NOT NULL) FROM vt0 EXCEPT SELECT ALL '-1079210012' FROM vt0; -- 0ms;
SELECT ALL (+ (CAST(vt0.c0 AS REAL))) FROM vt0 WHERE (CASE LIKELY(DISTINCT NULL)  WHEN (('943118336') BETWEEN (NULL) AND (x'')) THEN ((0.44714862300043356) NOT BETWEEN (x'c78f') AND ('1487268456')) END) ORDER BY 0.38275847740322744 DESC; -- 0ms;
SELECT json_array((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0) IS FALSE), (((('l.z')AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0))>=((vt0.c0)))) FROM vt0 WHERE ((('pw#') NOT BETWEEN (((NULL) IS FALSE)) AND ((x'' IN ('0.6940059315604505', x'693b3b6e'))))); -- 0ms;
SELECT ALL ((((vt0.c0)>>(vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) NOTNULL) FROM vt0 WHERE ((CASE WHEN -667723270 THEN '' END IN ())); -- 0ms;
SELECT SUBSTR('611619769', MAX(vt0.c0)), CAST('I1' AS INTEGER), (~ ((vt0.c0 IN ()))) FROM vt0 LIMIT -924945322; -- 1ms;
SELECT json_extract(NULL, MIN(vt0.c0)), CAST(vt0.c0 AS BLOB), (((((vt0.c0))<>((vt0.c0))))-((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))))) FROM vt0 GROUP BY CAST((((vt0.c0))>=((vt0.c0))) AS TEXT) HAVING ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) ORDER BY vt0.c0; -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM FROM vt0 WHERE (((((((((CASE 'jp'  WHEN x'6dd74e37' THEN 0x18b52464 ELSE x'' END)OR((((NULL)) NOT BETWEEN ((1388153972)) AND ((0.07760781810589479))))))OR(((0.521391528868584)OR(x'')))))OR((5.61567425E8 IN ()))))OR(('0.6055911642542503' IN ())))); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM) BETWEEN (vt0.c0 COLLATE RTRIM) AND ((- (vt0.c0)))), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE), 0.7854633718403408 FROM vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (json_array_length(vt0.c0))) FROM vt0 WHERE (((((x'') BETWEEN ('1760861460') AND (NULL))) BETWEEN (-934902704) AND (CASE WHEN 0.8684713510949068 THEN '(7zl' END))) ORDER BY vt0.c0 ASC  NULLS FIRST, (((vt0.c0))=((((vt0.c0)LIKE(vt0.c0)))))  NULLS LAST; -- 0ms;
SELECT (((((vt0.c0))<((vt0.c0))))GLOB(((vt0.c0) IS FALSE))) FROM vt0; -- 1ms;
SELECT DISTINCT AVG('904282889') OVER () FROM vt0 WHERE (x'f3ee'); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 LIMIT -279753592; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) NOTNULL)) FROM vt0 WHERE (((NULL COLLATE NOCASE) BETWEEN (('116677726' IN (0.30251716092208847))) AND ((x'' IN ())))); -- 0ms;
SELECT (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt0; -- 0ms;
SELECT ALL TOTAL(COUNT(*)) FROM vt0 WHERE (CASE WHEN ((0.3142474432580934) BETWEEN (0.8694430836132885) AND (NULL)) THEN ((NULL) IS TRUE) END);SELECT ALL COUNT((((0.8931682790529369)) NOT BETWEEN ((vt0.c0)) AND ((0.14480159737670417)))) OVER () FROM vt0 ORDER BY ((((vt0.c0)||(vt0.c0)))&((vt0.c0 IN ()))); -- 1ms;
SELECT ALL (~ ((((vt0.c0))>((vt0.c0))))) FROM vt0 ORDER BY vt0.c0, vt0.c0 DESC  NULLS LAST; -- 0ms;
SELECT ALL ((IFNULL(vt0.c0, '219609144'))GLOB(MIN(vt0.c0))), CAST(((vt0.c0)/(vt0.c0)) AS INTEGER), ((((UPPER(vt0.c0))OR(vt0.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 WHERE (((((x'fe5c') NOT BETWEEN (0.39725941715736246) AND (NULL))) BETWEEN (((0.012418510577012376)<(x'668d'))) AND ((((x''))<(('')))))); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), UPPER(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((json_type(vt0.c0), SUM(vt0.c0), '39R~n'))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)<<(vt0.c0))  WHEN ((vt0.c0)==(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) END FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0))>=((vt0.c0))) COLLATE RTRIM, ((TRIM('1435457961'))*((- (vt0.c0)))), (+ (CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (((NULL) IS TRUE)) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) DESC  NULLS FIRST; -- 1ms;
SELECT ALL INSTR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(5.61567425E8)), ((vt0.c0)LIKE(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((vt0.c0, vt0.c0, '39R~n'))>((vt0.c0, vt0.c0, vt0.c0))))OR(json_array_length(x'5169'))))AND((- (vt0.c0)))) FROM vt0 LIMIT -1405154226 OFFSET 548976692;SELECT vt0.c0 COLLATE NOCASE, (GLOB(vt0.c0, vt0.c0) IN ()), (((vt0.c0 IN ()))>=(CAST(vt0.c0 AS TEXT))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((vt0.c0)%(vt0.c0))) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1e500 THEN vt0.c0 ELSE vt0.c0 END)), DATETIME(vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM, 'dW''dr7G') FROM vt0 WHERE (-1.405154226E9); -- 0ms;
SELECT DISTINCT (('90068497')<>(((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0) ISNULL) IN (rtreenode(vt0.c0, vt0.c0))) FROM vt0; -- 1ms;
SELECT DISTINCT ((((((((((vt0.c0)>=(vt0.c0)))AND(((vt0.c0)/(x'')))))AND((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)=(vt0.c0)))))OR(MIN(vt0.c0))) FROM vt0 WHERE (0.11695349192036031) GROUP BY COALESCE((((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))), ((vt0.c0)OR(vt0.c0))) HAVING (NOT (CAST(vt0.c0 AS INTEGER))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS TEXT)) COLLATE RTRIM, x'3460', ((((RTRIM(vt0.c0))OR((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))), vt0.c0, CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC) FROM vt0; -- 0ms;
SELECT FIRST_VALUE(((((vt0.c0)GLOB(vt0.c0))) IS FALSE)) OVER (), TOTAL(LTRIM(vt0.c0)), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (NOT ((~ (vt0.c0)))) FROM vt0 WHERE (HEX((NULL IN (0Xffffffffedacffce, NULL)))) ORDER BY (('OW')IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) ASC; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))%((('dK3')-(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS TEXT) THEN (vt0.c0 IN ()) END, ((COUNT(vt0.c0)) ISNULL), (~ ((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0 WHERE (CASE CASE WHEN x'' THEN '' WHEN '-1328668339' THEN x'12c85b41f631' WHEN 'dK3' THEN 0.10827623330260705 ELSE '-1466258797' END  WHEN 0.43401538726997846 THEN ((x'')>=('-628764538')) END); -- 0ms;
SELECT ALL CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) FROM vt0 LIMIT 712019274; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)<(vt0.c0))) FROM vt0 LIMIT 2085612343 OFFSET -719544143; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c0)))-(vt0.c0 COLLATE RTRIM)) FROM vt0 NOT INDEXED WHERE (CAST((((0.7200426271918319))<>(('427821697'))) AS NUMERIC)) GROUP BY CASE (vt0.c0 IN ())  WHEN vt0.c0 THEN (vt0.c0 IN ()) END; -- 1ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 END)/(CASE WHEN vt0.c0 THEN vt0.c0 END)), ((((vt0.c0) ISNULL))!=(((vt0.c0)||(vt0.c0)))), CASE json_quote(vt0.c0)  WHEN x'' THEN (NOT (vt0.c0)) END FROM vt0 GROUP BY ((((vt0.c0) NOT NULL)) IS FALSE) HAVING ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((1.890167234E9)GLOB('iT')))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 GROUP BY (((IFNULL(vt0.c0, vt0.c0), CAST(-617044382 AS NUMERIC), vt0.c0))>=((((vt0.c0)GLOB(vt0.c0)), vt0.c0, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) HAVING ((CASE WHEN vt0.c0 THEN vt0.c0 END)>(((vt0.c0)>(vt0.c0)))); -- 0ms;
SELECT ((CASE WHEN vt0.c0 THEN -2.017254907E9 END)==(((vt0.c0) NOT NULL))) FROM vt0 WHERE (x'cf7fecce'); -- 0ms;
SELECT ALL (- (((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT (((((0xffffffffd432a415)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(UPPER(DISTINCT vt0.c0))) FROM vt0 WHERE (('' IN (NULL, 390044641)) COLLATE NOCASE); -- 0ms;
SELECT ALL vt0.c0 COLLATE NOCASE COLLATE BINARY, ((vt0.c0)IS(((vt0.c0)==(vt0.c0)))), SUM(((vt0.c0) ISNULL)) FROM vt0 WHERE (((CAST('1176760099' AS BLOB)) NOT BETWEEN ((x'' IN ())) AND ((- ('355494772'))))); -- 0ms;
SELECT (~ (vt0.c0 COLLATE RTRIM)), (((SUM(vt0.c0), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ())))<=((vt0.c0, (+ (vt0.c0)), ((0.5508141908998955) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), (((((vt0.c0))>=((vt0.c0))))<(CAST(0.9916171146430127 AS REAL))) FROM vt0 NOT INDEXED ORDER BY ((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))) IN (0.11859620511316593)); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((x'db5b'))=(('AhkT瑖'))))IS NOT((-748482617 IN ())))) GROUP BY ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT ALL CASE ((vt0.c0)>(vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) NOT NULL) ELSE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END FROM vt0 WHERE (((((((((TRIM('611619769'))OR(CASE -589122014  WHEN NULL THEN '-89091136' END)))OR(((((((((NULL)AND('1892078012')))AND(1717675716)))AND(0x624b9e49)))AND(x'ca2194ab')))))OR('1890572910' COLLATE NOCASE)))AND(((NULL)*('./m{f'))))) ORDER BY (('1760861460') ISNULL), vt0.c0 DESC  NULLS LAST, (- (vt0.c0)) COLLATE RTRIM  NULLS FIRST; -- 1ms;
SELECT ALL ((MIN(vt0.c0, vt0.c0))AND(((vt0.c0)OR(vt0.c0)))) FROM vt0 WHERE (((-9.4901388E7)|(''))); -- 0ms;
SELECT ALL CAST(((vt0.c0)<<(vt0.c0)) AS BLOB) FROM vt0 WHERE ((((x'')*(0.10827623330260705)) IN ())); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL), ABS(vt0.c0) COLLATE RTRIM, ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (0.29787627766152125) AND (((vt0.c0)||(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))<<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((vt0.c0)>(((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)))AND(vt0.c0)))AND(vt0.c0)))), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) FROM vt0 WHERE (((((x'')) NOT BETWEEN (('s')) AND (('?'))) IN ())) GROUP BY TRIM(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END); -- 0ms;
SELECT ALL '샗aG', ((CAST(vt0.c0 AS REAL)) IS TRUE), (((vt0.c0)<(vt0.c0)) IN ()), COALESCE(DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE BINARY), ((((vt0.c0)>(x'e725'))) IS TRUE) FROM vt0 WHERE (((((x'')IS NOT('-1311570710')))LIKE((((NULL)) NOT BETWEEN (('219609144')) AND ((x'')))))); -- 1ms;
SELECT ALL (+ ((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((0.6281063551578677 IN (vt0.c0, vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS REAL), CASE WHEN vt0.c0 COLLATE RTRIM THEN SQLITE_COMPILEOPTION_USED(vt0.c0) ELSE vt0.c0 END, ((CASE WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CAST(('-640707059' IN (NULL, '-1956210059')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<<(x'8caa'))) BETWEEN (((vt0.c0)!=(0.05183394252416196))) AND (UPPER(vt0.c0))) FROM vt0 WHERE (((((NULL) IS TRUE)) NOT NULL)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ()))!=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (('904282889' IN ()) COLLATE RTRIM) LIMIT -513487897; -- 0ms;
SELECT DISTINCT COUNT((- (vt0.c0))) OVER (), CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN SQLITE_SOURCE_ID() END, (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))) FROM vt0 WHERE (((LIKELIHOOD(DISTINCT 0.8720085126777513, 0.7964893747103536)) BETWEEN ('%' COLLATE RTRIM) AND (x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT '', (((~ (vt0.c0))) NOT NULL), CASE MIN(vt0.c0)  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, -7.19544143E8, vt0.c0))) THEN ((vt0.c0)*(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) END FROM vt0 WHERE (((((0.6704827133405086 COLLATE BINARY)OR(((((1048351542)AND(0.15763750967458212)))OR(0.42053134387831603)))))AND(json_object(0.33472515630392397, NULL)))) GROUP BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0));SELECT ALL (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((IFNULL(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)IS(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))), (((vt0.c0 COLLATE BINARY))>((((((vt0.c0)OR(vt0.c0)))AND(x''))))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)<<(vt0.c0))) FROM vt0 WHERE (((((x'') BETWEEN (0xffffffffedacffce) AND ('2124604270'))) BETWEEN (((x'')GLOB(0.10004199003144898))) AND (((x'2d06')<<(2.085612343E9))))); -- 0ms;
SELECT ((vt0.c0)OR(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (LIKELY(vt0.c0)) AND (vt0.c0)) FROM vt0 WHERE (CASE ((x'be50')|(NULL))  WHEN ((0.12050722155449789)IS(NULL)) THEN (((('-89091136')OR(0.868794070519376)))AND(0.6849443197779553)) END); -- 1ms;
SELECT ALL (~ (vt0.c0)) COLLATE NOCASE COLLATE BINARY, RANK() OVER ( ORDER BY (((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c0) NOTNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.4506342955446334 THEN vt0.c0 END, LIKELY(-1166527881), vt0.c0)) AND ((vt0.c0, NULL COLLATE RTRIM, 0.8390826202707067, ((vt0.c0) IS FALSE), NULL)))), TOTAL(LOWER(DISTINCT vt0.c0)), vt0.c0, COUNT((vt0.c0 IN (vt0.c0))) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM vt0 WHERE (CAST(('-11051316' IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)IS NOT(vt0.c0)))%(CAST(vt0.c0 AS INTEGER))), CASE CAST(NULL AS NUMERIC)  WHEN ((-1708955362)|(-1.079210012E9)) THEN (- (vt0.c0)) END, CAST(((NULL)<=(vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(0.6582879502201173) FROM vt0 WHERE (((((0.4369428825884958) BETWEEN (NULL) AND (-1.314647358E9)))<<((NOT (NULL))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)+(vt0.c0)))OR(((vt0.c0) IS FALSE))))AND(x'' COLLATE NOCASE)), CASE WHEN (vt0.c0 IN (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0)<(vt0.c0)) THEN GROUP_CONCAT(vt0.c0) WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN CAST(vt0.c0 AS NUMERIC) ELSE AVG(vt0.c0) END, CASE (+ (vt0.c0))  WHEN (+ (vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END, CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0))<((vt0.c0))) END, GROUP_CONCAT(vt0.c0) COLLATE RTRIM FROM vt0 WHERE (LOWER((0.4108572612722279 IN (x'a894f616')))); -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))>=(vt0.c0)), (NOT ((vt0.c0 IN ()))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL), ((((((((((vt0.c0)<(vt0.c0)))AND(CASE vt0.c0  WHEN '0.8542667380521047' THEN '-748012383' ELSE vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)=(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)), NULLIF(NULL, CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE (GLOB(((-7.48012383E8)|(8.40879741E8)), (NOT (0.5066632642203728)))); -- 0ms;
SELECT DISTINCT (((0.24269268404867983))>=((CAST(vt0.c0 AS BLOB)))), NULL, PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT ROW_NUMBER() OVER (), vt0.c0, (((('355494772')>>(vt0.c0))) NOT NULL) FROM vt0 WHERE ((~ (('0.44714862300043356' IN ('	X3AP	Y7h'))))); -- 0ms;
SELECT (NOT (((vt0.c0) NOT NULL))) FROM vt0 WHERE (CASE WHEN x'' THEN (~ (0.9860849497358701)) WHEN ((NULL)IS NOT(0.5665539070777722)) THEN UNICODE('-1523521452') WHEN ((x'')IS(477390890)) THEN CAST(NULL AS REAL) ELSE (- (x'c774')) END) GROUP BY ((((~ (vt0.c0))))<(((vt0.c0 IN ())))); -- 0ms;
SELECT LOWER((vt0.c0 IN (vt0.c0, vt0.c0))) FROM vt0 WHERE (((((x'5efe')AND(0.35163386688102194))) NOTNULL)); -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE ((+ (((((0.3763550845923218)OR(0xffffffffb2c0e518)))AND(0.8156073698619102))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) ISNULL))OR((vt0.c0 IN ()))))AND((~ (vt0.c0)))) FROM vt0 WHERE (CASE WHEN ((2.4545428E8) NOT BETWEEN (-957314807) AND ('S3WS\r!U')) THEN CASE 585490748  WHEN '678072224' THEN '3''d_K8Sf' ELSE 0.03123713706306208 END END); -- 0ms;
SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c0))<>((vt0.c0))))))OR(((vt0.c0) BETWEEN (0xffffffffa89aaa93) AND ('}8b/-W_')))), UNLIKELY((vt0.c0 IN (vt0.c0))), NULL FROM vt0 GROUP BY 0.1344456554188348; -- 0ms;
SELECT SQLITE_SOURCE_ID() FROM vt0 WHERE (TRIM((('-681963085') NOT BETWEEN ('-1731580581') AND (x'787f')))) GROUP BY vt0.c0, vt0.c0, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(vt0.c0)) HAVING (vt0.c0 COLLATE RTRIM IN ()); -- 0ms;
SELECT MAX(((vt0.c0)GLOB(vt0.c0))), AVG((NOT (vt0.c0))), MAX((+ (vt0.c0))) FROM vt0 WHERE (((((((((NULL)OR('-1013708452')))OR(0.5169647414475903)))AND(NULL)))OR(0.738473928933279)) COLLATE RTRIM) LIMIT -276598562; -- 0ms;
SELECT DISTINCT (((((((vt0.c0))>=((vt0.c0))))OR(load_extension(vt0.c0))))OR(((vt0.c0) ISNULL))), ROW_NUMBER() OVER (), GROUP_CONCAT(((vt0.c0)GLOB(vt0.c0))) FROM vt0 WHERE ((((x'68ba', NULL, 0.5900160492613978)) NOT BETWEEN (((- (x'')), '-348792573', CAST('''pZꢾgI' AS NUMERIC))) AND ((((4.27821697E8) ISNULL), x'b9d9' COLLATE RTRIM, (((0.7230584970093497))>(('*i')))))));SELECT DISTINCT NULL FROM vt0 WHERE (((((0xffffffffa023e5a6)||(x'')))+(LIKELIHOOD(DISTINCT 0.7087355859342939, 0.27072203985102006)))); -- 0ms;
SELECT ALL CASE WHEN LOWER(DISTINCT '-513487897') THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END FROM vt0; -- 0ms;
SELECT ALL IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE FROM vt0; -- 1ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM vt0 WHERE (CAST('549396856' AS REAL)) LIMIT 323267724 OFFSET 1705676291; -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))) IS FALSE), TOTAL(UNLIKELY('-2017254907') COLLATE BINARY), (+ ('1602713941')), MAX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), COUNT(*) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c0)|(vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST; -- 0ms;
SELECT ALL ((((vt0.c0) IS TRUE))OR(((vt0.c0) ISNULL))) FROM vt0 WHERE (x'') GROUP BY 8.40879741E8 HAVING 'NGRk妩.'; -- 0ms;
SELECT CAST(NULLIF(vt0.c0, vt0.c0) AS INTEGER) FROM vt0 WHERE ((CAST(0xffffffffb1a412c2 AS NUMERIC) IN ())); -- 0ms;
SELECT AVG(CAST(vt0.c0 AS TEXT)) OVER (), COALESCE(((('1840026927'))>((vt0.c0))), (vt0.c0 IN ())), (((~ (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (CASE WHEN NULL THEN (x'53c5' IN ()) END); -- 1ms;
SELECT CAST(vt0.c0 COLLATE NOCASE AS TEXT) FROM vt0 WHERE ((+ ((x'' IN ())))) GROUP BY ((-9.4901388E7) NOT NULL), (NOT (((vt0.c0) IS FALSE))), ((((vt0.c0)-(vt0.c0)))GLOB(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING (~ (vt0.c0)); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (~ (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (LIKELY(DISTINCT vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT '9{' FROM vt0 WHERE (CASE 0Xffffffffdada94fa COLLATE NOCASE  WHEN ((x'd3ec7216') NOT BETWEEN ('-1928472434') AND ('')) THEN ((((((((NULL)OR('')))OR(NULL)))AND(x'')))OR(-9223372036854775808)) WHEN (((NULL, x'', '0.8931682790529369', x'2441', x'634c')) NOT BETWEEN ((x'', NULL, NULL, 0.39832384761482664, 0x5f2e97ab)) AND ((0.025094832173117143, x'', 0.2525205642811865, -1254912024, 1677470124))) THEN NULL COLLATE NOCASE WHEN (- (NULL)) THEN ((NULL) NOTNULL) ELSE NULL COLLATE RTRIM END); -- 0ms;
SELECT ALL TYPEOF(((vt0.c0)&(0.04264356174154105))) FROM vt0 WHERE (GLOB(((NULL) IS FALSE), ((x'')<>('-1079210012')))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) THEN TRIM(vt0.c0) WHEN ABS(vt0.c0) THEN ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) WHEN 0.777094652005716 THEN MAX(vt0.c0) ELSE (vt0.c0 IN ()) END FROM vt0 WHERE (json_object(CAST(x'' AS REAL), CASE '7/Q暟'  WHEN 'O' THEN '' END, x'' COLLATE RTRIM, (((('-872416665')OR(0X331e5d9)))AND(0.9798382395628026))));SELECT DISTINCT ((((((((CAST(vt0.c0 AS INTEGER))OR(TOTAL(vt0.c0))))AND(((vt0.c0)||(vt0.c0)))))OR(((x'29d8a7aa')IS NOT('0.0')))))AND(((vt0.c0)*(vt0.c0)))), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0) ISNULL))), CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END, ((0.544663837799102) NOT BETWEEN (COUNT(*)) AND ((x'' IN ()))), GROUP_CONCAT('1388153972') OVER () FROM vt0 WHERE (LAST_INSERT_ROWID()); -- 0ms;
SELECT ALL CAST(COALESCE(0.10334258799179197, vt0.c0) AS TEXT) FROM vt0 WHERE (rtreenode(('-1595432549' IN (x'9ae15428687e')), 0.9241028577278452)); -- 1ms;
SELECT DISTINCT PERCENT_RANK() OVER (), ((((((vt0.c0))<=((vt0.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (((vt0.c0, vt0.c0, x'', vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))>((CAST(vt0.c0 AS NUMERIC), x'1bf1', LAST_INSERT_ROWID()))), COUNT(*) OVER () FROM vt0 WHERE (((((('0.868794070519376')<('\r\'))))==((GLOB('tm>d', '184194261'))))) ORDER BY ABS(((vt0.c0) NOTNULL)); -- 8ms;
SELECT DISTINCT json_valid(((vt0.c0) ISNULL)) FROM vt0 WHERE (CASE WHEN -1.273451776E9 COLLATE BINARY THEN '346583153' COLLATE RTRIM ELSE ((0.19380614203904845)<<(x'')) END); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)==(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0)!=(((vt0.c0)-(vt0.c0)))), CAST(vt0.c0 AS BLOB) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((0.8796461852936921)) AND (((((vt0.c0)) BETWEEN (('6y')) AND ((vt0.c0)))))) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) OVER () FROM vt0 ORDER BY NULLIF(((0.020005826602334187)GLOB(NULL)), (vt0.c0 IN (x''))) DESC; -- 0ms;
SELECT ALL CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 'o<E)U' END THEN ((vt0.c0)>>(vt0.c0)) WHEN IFNULL(vt0.c0, 0xffffffffcf0f7f80) THEN ((((NULL)OR(vt0.c0)))AND(vt0.c0)) WHEN ((vt0.c0)GLOB('-1127038805')) THEN CAST(vt0.c0 AS BLOB) END FROM vt0 WHERE ((((x'')) BETWEEN ((((('0.8460501339782647'))<=((NULL))))) AND ((CASE NULL  WHEN 'vXKwL' THEN 'Ng' ELSE 0.9835678127606702 END)))); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (CAST((('wp.5A') ISNULL) AS REAL)) GROUP BY (0.8796168474725823 IN ()); -- 0ms;
SELECT ALL LAST_INSERT_ROWID(), ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY, (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(NULL)), AVG(vt0.c0)))=((((vt0.c0)=(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), DATE(vt0.c0, vt0.c0, vt0.c0, 'nh幋Yos5', vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)GLOB(x'449e'))) FILTER(WHERE vt0.c0) OVER (), CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) WHEN (vt0.c0 IN ()) THEN CAST(vt0.c0 AS NUMERIC) WHEN TRIM(vt0.c0, vt0.c0) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, x''))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 THEN (((vt0.c0))==((vt0.c0))) END, (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) FROM vt0 GROUP BY ((((((((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS BLOB))))AND((vt0.c0 IN ()))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0) NOTNULL))); -- 0ms;
SELECT DISTINCT ((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((~ (vt0.c0)))))AND((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)) FROM vt0 LIMIT 1260724842 OFFSET -1911048307; -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.8805510484195779)))) FROM vt0 GROUP BY (~ (((vt0.c0)=(vt0.c0)))), (vt0.c0 IN ()), (((- (vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)<(vt0.c0)))) HAVING NULL; -- 0ms;
SELECT DISTINCT -2088521153, (((((vt0.c0) BETWEEN (x'fd33') AND (vt0.c0)), ((vt0.c0)LIKE(vt0.c0)), ((((vt0.c0)OR(x'')))OR(vt0.c0))))!=((vt0.c0, CAST(vt0.c0 AS TEXT), HEX(vt0.c0)))), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((- (vt0.c0)))<(IFNULL(vt0.c0, vt0.c0))), '', MIN(0.8694430836132885) FROM vt0; -- 0ms;
SELECT (((((vt0.c0) NOT NULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM))<((vt0.c0, vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))), 'jrQ', COUNT(*) OVER () FROM vt0 WHERE ((((((NULL IN (840879741)))AND((NOT (NULL)))))AND(('1642905673' IN ())))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))-(((vt0.c0)>=(vt0.c0)))) FROM vt0 WHERE (CAST(0.015204826600442978 AS INTEGER)) LIMIT -291335786 OFFSET -579009800; -- 0ms;
SELECT ALL ((((vt0.c0) NOT NULL)) IS FALSE) FROM vt0 WHERE ((((x'')>>('90068497')) IN (((NULL) NOTNULL)))) ORDER BY COALESCE(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) DESC, HEX(DISTINCT vt0.c0) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT DISTINCT NULL, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, DATETIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0) FROM vt0 ORDER BY CASE ((vt0.c0)||(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN load_extension(vt0.c0, vt0.c0) END  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt0.c0 IN ())))<((LAST_INSERT_ROWID()))) FROM vt0 WHERE ((('N*8T')|(1.709516939E9)) COLLATE BINARY); -- 0ms;
SELECT ALL ((vt0.c0)<(((vt0.c0)-(vt0.c0)))) FROM vt0 LIMIT 840879741; -- 0ms;
SELECT ALL GROUP_CONCAT(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('0.03871872252026598'))) FILTER(WHERE CASE ((vt0.c0)>=(vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN UPPER(DISTINCT vt0.c0) ELSE CAST(vt0.c0 AS REAL) END) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)/(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) ELSE (((vt0.c0))==((vt0.c0))) END FROM vt0 WHERE ((((-2.00272229E9 COLLATE RTRIM, ((((((((x'f9d9')OR(0.6782230957617754)))AND(NULL)))AND(x'bdec')))OR(0x35e64309)), (((x'')) BETWEEN ((NULL)) AND ((0.5066632642203728)))))==(((0.2609081115623092 IN (NULL)), ((1143729373)%(NULL)), (NOT (0.562024886197924)))))) GROUP BY CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) END; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*), ((vt0.c0 COLLATE RTRIM) NOT NULL), LENGTH(CAST(vt0.c0 AS INTEGER)) FROM vt0 WHERE (HEX((+ (-513455797)))); -- 0ms;
SELECT DISTINCT ((((CAST(NULL AS NUMERIC))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'a984')))), ((((vt0.c0) IS FALSE))/(MIN(vt0.c0))), ((((((((UNLIKELY(DISTINCT 0xffffffffafb8662a))OR((~ ('qF}o e')))))AND(0.4838285044301629)))OR(vt0.c0)))AND((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT (((((x''))>=((vt0.c0)))) NOT NULL) FROM vt0 WHERE (((((NULL) IS FALSE)) BETWEEN (CAST(x'' AS NUMERIC)) AND (((((((((-1.328668339E9)OR(0.6637596263902864)))OR(-1731638327)))OR(0.8189039219706147)))OR(NULL))))); -- 0ms;
SELECT DISTINCT ABS(((vt0.c0)%(vt0.c0))) FROM vt0 WHERE ((((((((((((((x'' IN ()))AND(CASE WHEN NULL THEN '' ELSE NULL END)))AND((('0.1377967094363468') IS TRUE))))AND(CASE WHEN NULL THEN '8' ELSE x'9e77' END)))AND(((x'')>=('151392688')))))OR((((x'')) BETWEEN ((0.8690169478083694)) AND ((0.6592381954042855))))))AND((((('~')AND(NULL)))OR('忨'))))); -- 1ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM vt0 WHERE (((((((1237672905)*(x'')))OR(CASE WHEN x'' THEN '''' ELSE '414524516' END)))AND((((NULL))<(('-1341674834')))))); -- 0ms;
SELECT (((0.7003091838709851) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0 WHERE ((((('561567425' COLLATE NOCASE)OR(((NULL)IS(x'')))))AND(x'' COLLATE RTRIM))); -- 0ms;
SELECT ALL x'', x'6a24', ((vt0.c0) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((~ (x'')))) FROM vt0 WHERE (CAST(TIME(1853222323, x'', x'b947', x'0d38', x'') AS BLOB)) LIMIT 2090471220 OFFSET -798611263; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)AND('1211173506'))) OVER () FROM vt0 WHERE (('' COLLATE RTRIM IN ())) LIMIT -1526017033; -- 0ms;
SELECT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE (''); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((GROUP_CONCAT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT '582141946' FROM vt0 WHERE (((CASE WHEN NULL THEN NULL WHEN NULL THEN 0X15e0b2cb WHEN 's' THEN 0Xffffffffd173ed0a ELSE '-1273451776' END) NOT BETWEEN ((x'' IN ())) AND ((('-834546664') NOT BETWEEN ('|a') AND (0.6957871926145781))))) GROUP BY (((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))<>((NULL))); -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 ORDER BY (vt0.c0 IN ()) ASC; -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE NOCASE))>((((vt0.c0)||(vt0.c0))))) FROM vt0 GROUP BY ((vt0.c0) NOT NULL) HAVING COUNT((NOT (vt0.c0))) LIMIT 2050444027; -- 0ms;
SELECT 0.28186765842133743, ((1.388153972E9)AND(((vt0.c0) NOT NULL))), vt0.c0 FROM vt0 WHERE (((CASE -5.89122014E8  WHEN -205522233 THEN NULL ELSE '9223372036854775807' END) NOT BETWEEN ((- (x'83993450'))) AND (((NULL)%('0.35163386688102194'))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) FROM vt0 WHERE ((('')IS NOT(0.33206316023926796)) COLLATE RTRIM); -- 0ms;
SELECT ALL CASE WHEN NULL THEN (vt0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN CAST(vt0.c0 AS INTEGER) WHEN ABS(DISTINCT vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR('')) END FROM vt0 WHERE ((((0.7844532511917818)+(0.4397304633633482)) IN ())); -- 0ms;
SELECT ALL (NOT ((- (vt0.c0)))), (- (vt0.c0)), ((((((vt0.c0)-(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))AND(UPPER(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((vt0.c0) IS TRUE)), (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.5989096706091732, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN '-1682119787' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((vt0.c0)*(('%' IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)AND(vt0.c0))) OVER (), (- (548976692)), TOTAL(((vt0.c0)LIKE(vt0.c0))) FROM vt0 WHERE (json_remove((('0.4506342955446334') ISNULL), ((x'')==('')), ((((0.11667050802876477)AND(0x1fa1895e)))AND(x'93a4')), ('5蟋' IN ())));SELECT DISTINCT HEX(((((((((vt0.c0)AND(vt0.c0)))AND(0.7608355323986031)))OR(vt0.c0)))OR(vt0.c0))), CAST(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(NULL)))AND(vt0.c0)) AS NUMERIC), CASE x''  WHEN vt0.c0 THEN NULLIF(DISTINCT vt0.c0, vt0.c0) END FROM vt0 WHERE ('0.9640863346555238'); -- 1ms;
SELECT ALL ((((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))))>((COUNT(vt0.c0)))) FROM vt0 WHERE ('-242531252' COLLATE NOCASE); -- 0ms;
SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'8ff8' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))), CAST((+ (vt0.c0)) AS NUMERIC), LIKELY(DISTINCT CAST(0.14841620925688692 AS BLOB)) FROM vt0; -- 4ms;
SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(0xffffffffafee366a COLLATE RTRIM)))AND(CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE (((((0.5619623964038039)*(x'4ad3')))<(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CAST(MAX(vt0.c0) AS NUMERIC) FROM vt0 LIMIT -997711844 OFFSET 1724912127; -- 0ms;
SELECT ALL (+ ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 0.7004443623551816, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((((((x'')>>(NULL)), 0Xffffffffbaecc5d2, CASE '-1939460470'  WHEN x'' THEN '767524847' ELSE '-295356693' END))<=(((0.4671920745282613 IN ()), NULL, (543580079 IN ()))))) ORDER BY 0.6704827133405086 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT vt0.c0 COLLATE NOCASE, 0.371635050079287), x'', SUM(((((-2002722290)OR(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0 WHERE (((((x'') NOT BETWEEN (NULL) AND (NULL))) NOT BETWEEN (((NULL) IS FALSE)) AND (((-6.17044382E8) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((vt0.c0)||(((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))) FROM vt0 WHERE ((NULL IN ())); -- 0ms;
SELECT MIN((((vt0.c0))<((vt0.c0)))), CASE WHEN ((vt0.c0) ISNULL) THEN (('1742561900')<<(vt0.c0)) END, CASE json_insert('-24873083', vt0.c0, 0.69166988986573)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END FROM vt0;SELECT vt0.c0 FROM vt0 WHERE (((CAST('T' AS BLOB))<>(((NULL) IS TRUE)))) LIMIT -2114271336 OFFSET 1978633134; -- 0ms;
SELECT ALL ((((vt0.c0)>=(vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT ((load_extension(vt0.c0, vt0.c0))>=(((vt0.c0)|(vt0.c0)))), (((vt0.c0)) BETWEEN ((((vt0.c0) NOTNULL))) AND ((vt0.c0))), GROUP_CONCAT(((vt0.c0) ISNULL)) FROM vt0 ORDER BY (((((((vt0.c0)AND('C\nP呕')))AND(vt0.c0)), ((((((((vt0.c0)OR(x'')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) IS TRUE)))<=(((~ (vt0.c0)), (('^\ni0<r')>=(vt0.c0)), vt0.c0 COLLATE BINARY)))  NULLS FIRST;SELECT ALL CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB) FROM vt0 WHERE (((('202456204', '328675294', 0.41873442773791547)) NOT BETWEEN (((('1890167234')GLOB('4k')), ((((x'')AND(x'')))OR('uy^')), LOWER(DISTINCT x''))) AND ((CASE NULL  WHEN 'x0/' THEN '' END, (((0.7954326533653558))>=((NULL))), (- (0.15763750967458212)))))); -- 0ms;
SELECT DISTINCT vt0.c0, CAST(vt0.c0 AS BLOB), (NOT (((vt0.c0)AND(x'8f35b7f2')))) FROM vt0 WHERE (((x'')%('bn')) COLLATE BINARY); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((-1016260158))=((x'')))) IS TRUE)) GROUP BY (NOT ((~ (vt0.c0)))), ((((vt0.c0)>=(vt0.c0)))|(x'')), ((vt0.c0) NOT NULL) ORDER BY (NOT (((vt0.c0)&(vt0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE BINARY AS INTEGER), SUM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'1300'))) OVER (), (vt0.c0 IN (vt0.c0)) COLLATE RTRIM COLLATE RTRIM FROM vt0 WHERE ((- ((((NULL, NULL, 0.27359424132709254)) BETWEEN ((-265109946, '0.547377198215276', 0.8428201810666917)) AND ((-2025160088, '', '-628764538')))))); -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((- (vt0.c0)), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN '0.8257457604932922' THEN vt0.c0 END, ((vt0.c0)<=(vt0.c0)))) AND (((('0.7200426271918319')||(vt0.c0)), vt0.c0 COLLATE NOCASE, ((vt0.c0)GLOB(vt0.c0)), CAST(vt0.c0 AS BLOB), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 GROUP BY CAST(((vt0.c0)GLOB(vt0.c0)) AS BLOB), ((((vt0.c0)<=(vt0.c0)))||(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0)IS(0.7937838194817615)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((CAST(vt0.c0 AS TEXT))AND(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0, 0.08281206879495939, vt0.c0)) NOT BETWEEN ((0.40245148005748654, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC) FROM vt0 WHERE (((CASE '텉*'  WHEN NULL THEN -1158887982 ELSE NULL END) IS FALSE)) ORDER BY ((((((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0)&(vt0.c0)))))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((((0.6349771256324943)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN ((vt0.c0 IN ())) AND (((0.08116548114289124)IS(vt0.c0)))), (((vt0.c0) NOT NULL) IN (GROUP_CONCAT(vt0.c0))), (((- (vt0.c0)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ('160688785' COLLATE BINARY); -- 0ms;
SELECT (((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((-1613576986)) BETWEEN (((('1709516939') BETWEEN ('-29752004') AND ('-628764538')))) AND ((((NULL) IS FALSE))))) LIMIT -232519003 OFFSET 1114788560; -- 0ms;
SELECT NULL COLLATE NOCASE, ((((((((((vt0.c0)/(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0)))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0) IS TRUE))), (~ ((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0))>((((NULL)|(vt0.c0))))) FROM vt0 WHERE (CASE '948520585'  WHEN NULL THEN '427821697' WHEN 0.9860849497358701 THEN 'J\n-' WHEN -1.1051316E7 THEN 1041292075 ELSE '' END COLLATE BINARY) ORDER BY (((vt0.c0 IN ())) NOT NULL) LIMIT 622547235; -- 0ms;
SELECT LIKE(CAST(vt0.c0 AS INTEGER), ((vt0.c0)/(vt0.c0))), CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN TRIM(DISTINCT vt0.c0) END, (((vt0.c0)) BETWEEN ((NULL)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0; -- 0ms;
SELECT DISTINCT ((-7.27129031E8) NOT BETWEEN ((((0Xfffffffff51bd2c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'0523')))AND(vt0.c0)))) FROM vt0 WHERE (CASE ((x'') IS FALSE)  WHEN CASE '-218206897'  WHEN NULL THEN -218206897 WHEN '-681963085' THEN '\/#3''' WHEN x'78e9' THEN '-839482279' ELSE 0.15763750967458212 END THEN CAST('k' AS NUMERIC) ELSE ((NULL) NOT NULL) END); -- 0ms;
SELECT DATETIME('', MIN(vt0.c0), TOTAL(vt0.c0), TOTAL(vt0.c0), ((((vt0.c0)OR(vt0.c0)))AND(0.012984164390809183))) FROM vt0; -- 0ms;
SELECT (+ (((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((0.6311352558058435)AND(IFNULL(vt0.c0, '779057417'))))AND(vt0.c0 COLLATE NOCASE)), ((TRIM(DISTINCT vt0.c0, vt0.c0)) ISNULL), -7.48482617E8 FROM vt0; -- 1ms;
SELECT AVG((~ (vt0.c0)) COLLATE RTRIM), (NOT (NULL)), (((((vt0.c0)>>(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), -1806617655))<((((('-563824794')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CAST(vt0.c0 AS TEXT)))) FROM vt0 WHERE (('ah' IN ())) LIMIT -116621149; -- 0ms;
SELECT ALL AVG(json_array_length(vt0.c0)) FROM vt0 WHERE ((+ ((((-640707059))<>(('-478104012'))))));SELECT ALL TOTAL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))), vt0.c0, ((vt0.c0 COLLATE RTRIM) ISNULL) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0))) FROM vt0; -- 0ms;
SELECT '-628764538', GROUP_CONCAT((vt0.c0 IN ())) OVER (), CASE NULL  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (-1443461312)) THEN COUNT(vt0.c0) WHEN ((vt0.c0) ISNULL) THEN vt0.c0 COLLATE BINARY WHEN (((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY END, (((((x'')OR(vt0.c0)))AND(vt0.c0)) IN ()), vt0.c0 COLLATE RTRIM FROM vt0; -- 1ms;
SELECT DISTINCT UNLIKELY((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ ('-1052412218')) FROM vt0 WHERE (HEX(DISTINCT ((((NULL)OR('')))AND(0.22944606116527833)))); -- 0ms;
SELECT ((IFNULL(vt0.c0, vt0.c0)) NOTNULL), CAST(((vt0.c0) NOT NULL) AS NUMERIC), NULL FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(x''))GLOB(((NULL) NOTNULL)))) ORDER BY (('8v>\r')<>(NULL)); -- 0ms;
SELECT DISTINCT 0.6281397872616039 FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)%(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '2080611525' END)) FROM vt0; -- 0ms;
SELECT LAG(x'edf9', (- (((vt0.c0) ISNULL))), (((('-1118933860') BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) OVER ( PARTITION BY 0Xffffffffe091329b, (~ (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))), HEX(CAST(vt0.c0 AS INTEGER)), ((CAST(vt0.c0 AS INTEGER))IS NOT(21943019)) FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST, '~E'  NULLS LAST; -- 1ms;
SELECT DISTINCT CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC) FROM vt0 WHERE (((('')<=(0xffffffff83658712)) IN ((0.48406006146021285 IN (NULL))))); -- 0ms;
SELECT x'', UPPER(((vt0.c0) IS FALSE)), ((('0.6940059315604505' IN ())) IS FALSE) FROM vt0 WHERE (CASE WHEN '241533900' THEN NULL WHEN x'' THEN NULL WHEN x'' THEN '582040800' ELSE 0Xffffffffe076f23c END COLLATE RTRIM); -- 0ms;
SELECT (((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('-265109946', vt0.c0, vt0.c0, vt0.c0, NULL)) AND ((NULL, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (((vt0.c0)) NOT BETWEEN ((AVG(vt0.c0))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), CAST((- (vt0.c0)) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(vt0.c0))) BETWEEN (DATETIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)), GROUP_CONCAT((- (vt0.c0))) OVER (), (PRINTF(vt0.c0) IN ()) FROM vt0 GROUP BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))); -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE) BETWEEN (CASE vt0.c0  WHEN 0x2447614a THEN vt0.c0 ELSE vt0.c0 END) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT ALL ((((((((NULL)OR(COUNT(*))))OR(-5.13487897E8)))OR(vt0.c0)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT 'Lr' FROM vt0; -- 0ms;
SELECT ALL COUNT(*) FILTER(WHERE (+ (((vt0.c0)<<(1921607891))))) OVER (), ((((vt0.c0) ISNULL)) NOTNULL), (((vt0.c0)) NOT BETWEEN ((MIN(0.10904776208371325, vt0.c0))) AND ((((vt0.c0)OR(x'87c3'))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT((vt0.c0 IN ())) OVER () FROM vt0 WHERE (CAST(LIKELIHOOD(0.5443695742322239, 0.39154723188366825) AS INTEGER)); -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE CASE ((vt0.c0)>(vt0.c0))  WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>(vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) OVER () FROM vt0 WHERE ('1129693842'); -- 0ms;
SELECT ALL AVG((+ (vt0.c0))) OVER () FROM vt0 GROUP BY CAST(vt0.c0 AS INTEGER); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0)*(vt0.c0))) OVER (), ((CASE WHEN vt0.c0 THEN '90068497' ELSE vt0.c0 END) NOTNULL), ((((vt0.c0)OR(vt0.c0)))/(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (CASE (0.6533439100567227 IN ())  WHEN (- ('0.6055911642542503')) THEN (0.313002539256684 IN (x'', NULL)) WHEN -22333754 COLLATE NOCASE THEN (NOT ('1487268456')) WHEN CAST(x'4109' AS TEXT) THEN (((0.1706454023987416))<>(('152953827'))) ELSE ((x'') BETWEEN (0.8931682790529369) AND (0.35309470437096957)) END); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (NULL))))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((vt0.c0) IS TRUE))) AND ((CAST(vt0.c0 AS BLOB)))) FROM vt0 WHERE ((((0x14a87071 IN ())) NOT BETWEEN (CAST('~0㆙vOW' AS REAL)) AND (SQLITE_COMPILEOPTION_GET(2100320719)))); -- 0ms;
SELECT ALL (((ABS(vt0.c0)))=((NULLIF(vt0.c0, vt0.c0)))), (+ ((vt0.c0 IN ()))), (((((- (vt0.c0)))AND((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0) ISNULL))) FROM vt0 ORDER BY ((SQLITE_COMPILEOPTION_USED(vt0.c0)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) DESC; -- 1ms;
SELECT ALL ((vt0.c0) IS FALSE) COLLATE BINARY FROM vt0 WHERE (((((+ (NULL))))>((json_object(NULL, 0.13507780739194908, 0.6552271072053095, NULL))))) GROUP BY NULL, TRIM((vt0.c0 IN (vt0.c0))), COALESCE(vt0.c0 COLLATE NOCASE, LIKELIHOOD(DISTINCT vt0.c0, 0.7629407760112369));SELECT CASE WHEN ((vt0.c0)!=('')) THEN CASE x''  WHEN vt0.c0 THEN vt0.c0 END WHEN (NOT (vt0.c0)) THEN ((vt0.c0) ISNULL) WHEN ((vt0.c0) ISNULL) THEN vt0.c0 END, (((+ (vt0.c0))) NOT BETWEEN (LOWER(vt0.c0)) AND (((vt0.c0) NOTNULL))), (((+ (vt0.c0))) ISNULL) FROM vt0 GROUP BY CASE (((vt0.c0, vt0.c0, -1e500)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0)))  WHEN MIN(NULL, vt0.c0) THEN ((x'') NOT NULL) WHEN LTRIM(vt0.c0, 0.0) THEN (((vt0.c0, vt0.c0, -1)) NOT BETWEEN ((x'c820', 1.59821571E9, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)GLOB(vt0.c0)) END HAVING ((((vt0.c0)OR(vt0.c0))) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CASE vt0.c0  WHEN 1259276711 THEN x'' ELSE vt0.c0 END)); -- 0ms;
SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))/((NOT (vt0.c0)))) FROM vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (((vt0.c0 IN ()))&(vt0.c0)) ASC; -- 0ms;
SELECT DISTINCT COUNT((~ (vt0.c0))), (- ((vt0.c0 IN ()))), CAST(((vt0.c0)+(vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT -1570984127 FROM vt0 WHERE (INSTR(INSTR(NULL, '-1387543910'), (- (0.868794070519376)))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL (~ (((NULL) NOTNULL))) FROM vt0 WHERE (CASE (((('-513487897')AND(NULL)))OR(''))  WHEN NULL THEN 0.42771153618561464 COLLATE BINARY END); -- 0ms;
SELECT DISTINCT (((((vt0.c0))>=((vt0.c0)))) NOT NULL), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)<(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB)))) FROM vt0 WHERE ((~ (('*i' IN ())))) GROUP BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) HAVING CAST((vt0.c0 IN ()) AS BLOB); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT ((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT NULL) FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 COLLATE NOCASE WHEN ((0.37053850836804203)>(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN ((vt0.c0) ISNULL) THEN (- (vt0.c0)) ELSE ((vt0.c0)*(vt0.c0)) END  NULLS LAST; -- 0ms;
SELECT ALL ((((MAX(vt0.c0))OR((+ (vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), NULL, COUNT((~ (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((0.7226109814365735))), CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN json_type(vt0.c0) THEN CAST(vt0.c0 AS TEXT) ELSE 1370043771 END, ((((vt0.c0) IS TRUE))>>((vt0.c0 IN ()))) FROM vt0 ORDER BY (vt0.c0 IN ()) ASC  NULLS LAST, vt0.c0 ASC  NULLS FIRST, (((vt0.c0)) BETWEEN ((0.7043540484955747)) AND ((LIKELIHOOD(vt0.c0, 0.7378882349512422))));SELECT TOTAL(CAST(vt0.c0 AS REAL)) OVER ( ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) END DESC) FROM vt0 WHERE (CASE WHEN (((('3H')OR(0Xffffffffa89aaa93)))OR(0.33958023295447426)) THEN ((NULL)||('1T+SQ5)')) ELSE CASE -1.162507426E9  WHEN x'' THEN 0.3977176062843587 ELSE 0.4583075350830327 END END) ORDER BY vt0.c0 ASC; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS BLOB)  WHEN ((((vt0.c0)AND(0Xffffffffb514f79d)))AND('')) THEN ((x'')&(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) ISNULL), SUM('>+') OVER (), ((vt0.c0) ISNULL) FROM vt0; -- 0ms;
SELECT CUME_DIST() OVER (), (((vt0.c0 IN (vt0.c0, NULL))) IS FALSE), AVG(CASE vt0.c0  WHEN 0.2380995552055143 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) OVER () FROM vt0 GROUP BY (+ (((vt0.c0) NOT NULL))) HAVING vt0.c0; -- 0ms;
SELECT ALL JULIANDAY((NOT (vt0.c0)), SQLITE_SOURCE_ID(), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN (('*bqhᇾ')) AND ((NULL))) THEN CASE NULL  WHEN 0X247493b9 THEN NULL WHEN '0.7608355323986031' THEN 0.23077727118296398 WHEN NULL THEN NULL END END); -- 0ms;
SELECT DISTINCT LAG(0.39979447958966297, (0.521391528868584 IN ()), (((vt0.c0 COLLATE NOCASE))>(((NOT (vt0.c0)))))) OVER (), vt0.c0, ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)AND(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((NULLIF(DISTINCT 0.579827715494625, NULL) IN (((0.12082454588468228) NOT BETWEEN ('Nᇿ<^t\rwx[') AND (0.6010676382996724)), ((0X1)>(NULL))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND (((0.8871860277044288 IN ())))) FROM vt0 WHERE ((((('1602713941')) BETWEEN (('-89091136')) AND ((NULL))) IN ())); -- 1ms;
SELECT DISTINCT '1780585355' FROM vt0 WHERE (CASE (NULL IN ())  WHEN CAST('嘑tinZh%*' AS INTEGER) THEN x'7f63' END); -- 0ms;
SELECT DISTINCT ((((((((MIN(vt0.c0))OR(((vt0.c0)>=(vt0.c0)))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(COUNT(*))))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((x'')<(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((0.33353257691870264) NOT BETWEEN ((- (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (((((((((CAST('-1613576986' AS REAL))OR((0.3272683367658117 IN ()))))OR((((NULL))<=(('OT'))))))OR(((x'')AND(NULL)))))AND(COALESCE(DISTINCT 0xffffffffbac3df79, 0.4871581217072244)))); -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt0 ORDER BY ((((((vt0.c0)<(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))OR((NOT (vt0.c0)))) DESC, CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT AVG(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) OVER ( GROUPS (((vt0.c0) IS TRUE) IN ()) PRECEDING), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE), CAST(((vt0.c0)<(0.4108572612722279)) AS INTEGER) FROM vt0 ORDER BY HEX(DISTINCT (vt0.c0 IN (vt0.c0))) DESC; -- 1ms;
SELECT DISTINCT '/¦' FROM vt0 WHERE ((- (((x'') BETWEEN ('-1465562508') AND ('.+7'))))); -- 0ms;
SELECT CASE WHEN CAST(NULL AS REAL) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN MAX(vt0.c0) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN MIN(vt0.c0) THEN LOWER(DISTINCT vt0.c0) ELSE CASE WHEN vt0.c0 THEN vt0.c0 WHEN '-1322811199' THEN vt0.c0 WHEN 0x77c4d8f0 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0 INTERSECT SELECT DISTINCT (vt0.c0 COLLATE BINARY IN ()) FROM vt0; -- 0ms;
SELECT ALL x'' COLLATE BINARY, COUNT(*) FILTER(WHERE ((((((((((vt0.c0)IS(vt0.c0)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0) NOT NULL))))AND(vt0.c0)))AND((((0.3622399318368579, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0)))))) OVER (), CASE HEX(vt0.c0)  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN '1890167234' THEN MAX(vt0.c0) WHEN (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) THEN '' END FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 1ms;
SELECT '582141946' FROM vt0 WHERE ((((('1890167234' COLLATE RTRIM)OR(((4.14524516E8) BETWEEN (x'') AND ('-1765363711')))))OR(((-4.78104012E8)!=('0.2525205642811865'))))) GROUP BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, ((((vt0.c0)>>(vt0.c0)))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), NULLIF(DISTINCT vt0.c0 COLLATE BINARY, '~0㆙vOW'); -- 0ms;
SELECT '-1078768387', TOTAL(((vt0.c0)<<(vt0.c0))) OVER (), ((((vt0.c0)+(vt0.c0))) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE BINARY FROM vt0 WHERE (CASE NULL  WHEN (~ ('')) THEN ((('\')) NOT BETWEEN ((0.43401538726997846)) AND ((0.8086246297174423))) ELSE (('1598215710') NOT NULL) END); -- 0ms;
SELECT ALL UNLIKELY(CAST(vt0.c0 AS NUMERIC)) FROM vt0 WHERE (((((((((((0.20459519002359672)<>('xO[QdF')))OR((+ (NULL)))))OR(((1576249080) BETWEEN (NULL) AND (x'')))))OR(NULL COLLATE NOCASE)))AND((((NULL))<=(('-1118933860')))))); -- 0ms;
SELECT ((NULLIF(vt0.c0, vt0.c0)) NOT NULL) FROM vt0 WHERE (CAST(((x'2a79') NOT BETWEEN (0x548a5487) AND (NULL)) AS NUMERIC)); -- 0ms;
SELECT ALL (((+ (vt0.c0)))-((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), ((((((vt0.c0) ISNULL))OR((+ (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL CAST('GzQ2辶23' AS INTEGER) FROM vt0 WHERE (((((CAST(x'298e' AS REAL))OR(((((((((NULL)AND('Bv僓뱠Q\q')))OR(x'')))AND('|f')))AND(NULL)))))OR(CAST(x'' AS TEXT)))); -- 0ms;
SELECT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))LIKE(x'08eb')) FROM vt0 WHERE (CASE CASE WHEN '390044641' THEN 0xffffffffa4cfa6c1 WHEN '-307429426' THEN 'cH鴔1' WHEN NULL THEN NULL ELSE NULL END  WHEN ((((x'')AND(0.3294536439804765)))AND(NULL)) THEN ((((NULL)OR(0.1377967094363468)))AND(0.16856418016786123)) ELSE '-1079210012' END); -- 0ms;
SELECT DISTINCT (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (((0xffffffff85e454ac)AND(1.724912127E9)) COLLATE RTRIM); -- 1ms;
SELECT ALL ((((vt0.c0) IS FALSE))AND(MIN(vt0.c0))), CAST((~ (vt0.c0)) AS INTEGER), (+ ((vt0.c0 IN ()))) FROM vt0 GROUP BY (+ (vt0.c0)); -- 0ms;
SELECT DISTINCT -562820866, CASE WHEN (- (vt0.c0)) THEN 0.3858350866298713 ELSE COUNT(vt0.c0) END, ((((((((json_array(vt0.c0, vt0.c0))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(((vt0.c0)*(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)LIKE(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(vt0.c0 COLLATE RTRIM) FROM vt0 WHERE ((((0X3fff919d IN ('Q㋯ￎv1', '-2126957052'))) IS FALSE)); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)IS(vt0.c0))), vt0.c0, NULL FROM vt0 WHERE (((((936557420)) NOT BETWEEN ((1320730102)) AND (('d+Y'))) IN ())); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)||(vt0.c0)) AS BLOB), NTILE('-1127717660') OVER (), ((((vt0.c0)AND(vt0.c0))) IS TRUE) FROM vt0;SELECT DISTINCT ((((vt0.c0)LIKE(vt0.c0)))&(CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT ((vt0.c0) BETWEEN (x'866f') AND (vt0.c0)), CAST(CAST(vt0.c0 AS REAL) AS REAL), ((CASE '0.824259655230957'  WHEN vt0.c0 THEN vt0.c0 END)&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((((NULL))<>((NULL)))) BETWEEN (NULL COLLATE RTRIM) AND (((0.38527041948426144)AND(NULL))))) GROUP BY 0.559596016838179 HAVING (((('0.10827623330260705')IS(vt0.c0)))IS((- (vt0.c0)))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0 WHERE (((ABS('0.6635450216950463')) NOT NULL)); -- 0ms;
SELECT DISTINCT NULLIF(vt0.c0 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((0.8694257369134009)OR(CASE -221801134  WHEN 0.7797169249902709 THEN x'd285' WHEN 0.12731595179795296 THEN '-735272117' WHEN '' THEN -1.328668339E9 END))); -- 0ms;
SELECT DISTINCT ((json_quote(-996221930))GLOB(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((((0.9282185105738199 IN (0xfffffffffe7b9df3))) BETWEEN (((x'')*(NULL))) AND (json_insert(x'', 0.05453573851764926, '-2017254907')))) ORDER BY ((((vt0.c0) BETWEEN (x'b04f') AND (vt0.c0)))<=((- (vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) FROM vt0 GROUP BY (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()), TOTAL(((vt0.c0)<(vt0.c0))), CAST((vt0.c0 IN (vt0.c0)) AS TEXT), (((vt0.c0) ISNULL) IN ()), ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN (vt0.c0))), CAST(((0.4094488248485858) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER), COUNT(*) FILTER(WHERE (((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))+(((NULL)*(vt0.c0))))) OVER ( PARTITION BY ((vt0.c0 IN ()) IN (((vt0.c0)<=(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))))) FROM vt0 WHERE (CAST(((x'4432')|(0.5665539070777722)) AS BLOB)) LIMIT -1466258797 OFFSET -1380076364; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), vt0.c0, LEAD((NOT (vt0.c0)) COLLATE BINARY, ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (COALESCE(DISTINCT vt0.c0, vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM COLLATE NOCASE) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-((- (vt0.c0)))) FROM vt0 GROUP BY (((vt0.c0 IN ())) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((0Xffffffffee9e5212, vt0.c0, vt0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING (NOT ((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((NULL)OR((((vt0.c0))>((vt0.c0))))))OR(vt0.c0)) FROM vt0 WHERE ((((NULL IN (x'2f94', x'5d6d'))) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (((((vt0.c0)OR(NULL)))AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) OVER () FROM vt0 WHERE (CAST(((('-277795375', NULL, '-478104012')) BETWEEN ((0.4784206033854639, NULL, x'668b')) AND ((NULL, NULL, ''))) AS TEXT)); -- 0ms;
SELECT DISTINCT NTH_VALUE((((- (vt0.c0))) ISNULL), (+ (vt0.c0))) OVER () FROM vt0 WHERE ((((((((0.40756916380029107))>=((x''))))AND(CASE WHEN '-1405154226' THEN '341612483' END)))AND(((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT '(/3VZ\r' FROM vt0; -- 0ms;
SELECT ((((((vt0.c0)+(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))) FROM vt0 WHERE (CAST(((0xffffffffaa86f3c1)>=(0.29009341610709494)) AS REAL)); -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT json_array_length(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS INTEGER)), AVG(((vt0.c0)|(vt0.c0))), SUM(((vt0.c0)/(vt0.c0)) COLLATE NOCASE) OVER ( ORDER BY (((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY COLLATE RTRIM  NULLS FIRST) FROM vt0 WHERE (CAST(((NULL) NOT NULL) AS INTEGER)); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM vt0; -- 0ms;
SELECT ALL (+ (((vt0.c0) IS TRUE))) FROM vt0; -- 0ms;
SELECT ALL (+ ((vt0.c0 IN (vt0.c0)))), ((((vt0.c0 COLLATE NOCASE)OR((~ (vt0.c0)))))OR((~ (vt0.c0)))), COUNT(*) FROM vt0 WHERE (((((0X2a708d4a) ISNULL)) NOT BETWEEN ('0.07760781810589479') AND (((x'25b8') NOT NULL)))); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c0 AS TEXT) END FROM vt0 WHERE (((((((((NULL)OR('')))AND(x'61f8')))OR((('-911582810')<>(x'')))))AND(CASE WHEN 0.1320317904733751 THEN '0.934717050140012' END))); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))) AS TEXT) FROM vt0 WHERE ((((-1537166355) ISNULL) IN ())) ORDER BY (((vt0.c0 IN ())) IS TRUE) LIMIT -1608936026; -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (x'') AND (vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((((((((((NULL)-('-1314647358')))AND((((x'')) NOT BETWEEN (('~U\r+p5z{l')) AND (('-911582810'))))))AND((- (0.5265461853097525)))))AND((((1986451604)) NOT BETWEEN ((0.7101319726185094)) AND ((x''))))))OR(((0.634614460745888)-(x'4ca4'))))); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) IS TRUE)) OVER (), -5.89122014E8 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt0 GROUP BY (((COALESCE(vt0.c0, vt0.c0)))<>((((vt0.c0) NOT NULL)))) HAVING (- (((vt0.c0)IS NOT(vt0.c0)))) ORDER BY vt0.c0  NULLS FIRST LIMIT -501907843; -- 1ms;
SELECT DISTINCT (+ (0xfffffffffab093c0)), 9.85397275E8, ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) FROM vt0 WHERE ((((219609144)) NOT BETWEEN ((((((((((0.06524044918743177)OR(x'')))AND(0.43401538726997846)))AND(x'')))OR(NULL)))) AND (((NOT (0.9429307420781886)))))); -- 0ms;
SELECT (TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) IN ()) FROM vt0 LIMIT -877540917; -- 0ms;
SELECT (((vt0.c0)LIKE(vt0.c0)) IN ()) FROM vt0 WHERE (CASE ((NULL) NOT BETWEEN ('') AND (0.5944739314731116))  WHEN ((-2049837795) NOT BETWEEN (x'') AND (NULL)) THEN (((x'db48')) BETWEEN ((2110192148)) AND ((0.7748443139695648))) WHEN (- (' \nnM')) THEN ABS(x'') WHEN ((-829070096)/(0.9219112543826394)) THEN x'' ELSE ((0.5379277934776632)!=('')) END); -- 0ms;
SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(ABS(DISTINCT vt0.c0))))OR(((vt0.c0)-(vt0.c0)))), (~ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), ((CAST(vt0.c0 AS TEXT))<>((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0 WHERE ((LIKELIHOOD(0.5705408090288141, 0.04537284763011873) IN (x'cc63' COLLATE BINARY))) GROUP BY ((((vt0.c0) NOTNULL)) NOTNULL), (((vt0.c0)*(vt0.c0)) IN ()), ((((vt0.c0)AND(0Xffffffff93d1942b)))AND(x'7a8c')); -- 0ms;
SELECT ALL ((((vt0.c0)=(vt0.c0)))/((- (vt0.c0)))), ((COUNT('-1590985145'))=(((vt0.c0) IS TRUE))), (((((((((- (x'3b36605b3153')))OR(ABS(vt0.c0))))OR((~ (vt0.c0)))))OR(LIKE(vt0.c0, vt0.c0))))OR(((vt0.c0)<=(vt0.c0)))) FROM vt0 WHERE ((((('0.9407547124654071')>=(x''))) ISNULL)); -- 0ms;
SELECT ((vt0.c0)|(vt0.c0)) COLLATE BINARY FROM vt0 WHERE ('\]bf' COLLATE RTRIM) GROUP BY (((vt0.c0) IS TRUE) IN ()), ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)-(vt0.c0)))), vt0.c0; -- 0ms;
SELECT DISTINCT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('.N_%g*0', vt0.c0, vt0.c0))) IN ()) FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0)))||(TRIM(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST; -- 0ms;
SELECT (~ (((vt0.c0) IS TRUE))), ((vt0.c0 COLLATE BINARY)==((- (vt0.c0)))), ((COUNT(x'')) BETWEEN (CASE 0X5129cbcc  WHEN vt0.c0 THEN vt0.c0 END) AND (MAX(vt0.c0))) FROM vt0 WHERE ((((((('C_Ip')OR('藨8')))OR(''))) IS FALSE)); -- 0ms;
SELECT DISTINCT STRFTIME((((vt0.c0))>=((vt0.c0))), MAX(vt0.c0), SQLITE_COMPILEOPTION_USED(vt0.c0)) FROM vt0 WHERE (CAST((~ (NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((((vt0.c0))>=((vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0)>>(vt0.c0))), (((vt0.c0 IN ())) IS TRUE), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))%((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((- (vt0.c0)) IN ()) FROM vt0; -- 4ms;
SELECT DISTINCT CHANGES() FROM vt0 WHERE ((((('b馁mm1咇嵎/')LIKE(840879741)))-(CASE NULL  WHEN 0x78318e90 THEN '' ELSE '1430183638' END))); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((COUNT(*))+((vt0.c0 IN ()))), CAST(((x'')>=(vt0.c0)) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)AND(NULL)))AND(vt0.c0)))AND((vt0.c0 IN (vt0.c0)))))OR(0.7439065187944549)) FROM vt0 WHERE ((((NULL COLLATE RTRIM))!=((CASE WHEN '픚<' THEN NULL END)))); -- 1ms;
SELECT ((vt0.c0) BETWEEN ((NOT (vt0.c0))) AND (UPPER(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)/(vt0.c0)))*((- (vt0.c0)))) FROM vt0 WHERE (0.24269268404867983); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)>(vt0.c0)) THEN (vt0.c0 IN ()) END FROM vt0; -- 0ms;
SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)<<((((0.7634707827532006))!=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT (((vt0.c0 IN ())) IS FALSE), vt0.c0, ((vt0.c0)GLOB(vt0.c0)) COLLATE BINARY FROM vt0 GROUP BY ((((vt0.c0)<>(vt0.c0)))AND(vt0.c0)), ((IFNULL(DISTINCT vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 IN ())) AND (NULL)), vt0.c0 HAVING ((',6')*(vt0.c0)); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0 WHERE ((((('328931747') IS TRUE))|(NULL))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<<(0Xffffffffa238ab9a)))>=(((vt0.c0)<(vt0.c0)))) FROM vt0; -- 1ms;
SELECT ALL (((vt0.c0 IN ()))>>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (CAST(((('-1118933860', x'', '7<')) BETWEEN ((NULL, 0.34428290944868756, '')) AND ((0.19754280905537458, 0.8409100967206944, 0.16591756141031733))) AS NUMERIC)); -- 0ms;
SELECT ALL -8.29070096E8 COLLATE BINARY, vt0.c0, LIKELIHOOD(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.5726874665455403) FROM vt0 UNION SELECT DISTINCT CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, vt0.c0))) THEN (((vt0.c0, 0xfffffffffa0be2d2, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.43229125172273186, vt0.c0))) END, (((((((((~ (vt0.c0)))AND(((vt0.c0) NOTNULL))))OR(HEX(vt0.c0))))OR((NOT (vt0.c0)))))OR(((vt0.c0)-(vt0.c0)))), ((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (load_extension(vt0.c0, vt0.c0))) FROM vt0;SELECT DISTINCT ((GROUP_CONCAT(vt0.c0)) IS FALSE) FROM vt0 GROUP BY x''; -- 0ms;
SELECT (((((vt0.c0))<=((vt0.c0)))) BETWEEN ('1598215710') AND (((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT (NOT (((vt0.c0)LIKE(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT NULL)) OVER (), ((((vt0.c0)>(6.11619769E8)))&(((vt0.c0)IS(vt0.c0)))), (((vt0.c0) IS TRUE) IN ()), CASE WHEN vt0.c0 THEN x'' COLLATE BINARY ELSE ((NULL)<=(vt0.c0)) END, GROUP_CONCAT(((vt0.c0)<<(vt0.c0)) COLLATE BINARY) FROM vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS REAL) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((+ (vt0.c0))) IS TRUE), ((SUM(vt0.c0)) IS TRUE), GROUP_CONCAT(((((1.388153972E9)AND(x'')))OR(vt0.c0))) OVER () FROM vt0 WHERE (0.4943311002600844); -- 0ms;
SELECT ALL IFNULL(((vt0.c0) NOT NULL), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt0 WHERE (((('1388153972' IN ())) BETWEEN ('l|' COLLATE RTRIM) AND (TRIM(0x386274e5)))); -- 0ms;
SELECT DISTINCT UNLIKELY(vt0.c0 COLLATE RTRIM) FROM vt0 WHERE (CAST(((NULL) NOT BETWEEN ('') AND ('1975007912')) AS TEXT)); -- 0ms;
SELECT DISTINCT NULL, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), AVG(((x'')IS NOT(vt0.c0))) FILTER(WHERE vt0.c0) OVER () FROM vt0 WHERE ((- (((((0.721310534464431)AND(NULL)))OR(0X70f38fa0))))); -- 1ms;
SELECT DISTINCT (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((x'c167') NOT BETWEEN (CASE WHEN 0.1776023458028958 THEN 0.4358145384877239 ELSE NULL END) AND (((NULL)LIKE(0xffffffffac2fa29c))))) GROUP BY x'', (- ((('<Pv(65')+(vt0.c0)))), ((CAST(vt0.c0 AS INTEGER))LIKE((vt0.c0 IN ()))) HAVING MAX(vt0.c0); -- 1ms;
SELECT -81754360 COLLATE BINARY FROM vt0 ORDER BY load_extension(HEX(DISTINCT vt0.c0)) ASC  NULLS LAST;SELECT DISTINCT LOWER(CASE WHEN vt0.c0 THEN vt0.c0 END), ((((vt0.c0) ISNULL)) NOT BETWEEN (x'82b3') AND (GROUP_CONCAT(vt0.c0))), ((vt0.c0 COLLATE RTRIM) BETWEEN (COUNT(vt0.c0)) AND (vt0.c0 COLLATE RTRIM)) FROM vt0 ORDER BY ((('385558071')) NOT BETWEEN ((((((((((((((vt0.c0)OR(x'3636')))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND (((vt0.c0 IN ())))), CAST(((vt0.c0)||(vt0.c0)) AS REAL); -- 0ms;
SELECT DISTINCT ((0x1edaeeef) IS TRUE), (((((vt0.c0))<=((vt0.c0)))) NOT BETWEEN ((('-871899364') NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0)), vt0.c0 COLLATE NOCASE COLLATE NOCASE, (~ (CASE WHEN vt0.c0 THEN vt0.c0 END)), 0xffffffffd3b718e7 FROM vt0 WHERE ((NOT ((((-109010807))>(('')))))); -- 1ms;
SELECT ((x'')+(TYPEOF(vt0.c0))), LAG(((SQLITE_SOURCE_ID()) NOT BETWEEN ((vt0.c0 IN ('0.8460501339782647'))) AND (vt0.c0)), ((LIKELY(vt0.c0))AND(vt0.c0)), CAST(((vt0.c0) IS FALSE) AS TEXT)) OVER (), COALESCE((- (vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) FROM vt0 GROUP BY (((~ (vt0.c0)))IS((vt0.c0 IN ()))), CAST((NOT (vt0.c0)) AS BLOB), NULL; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(SUM(vt0.c0)) FROM vt0 WHERE (IFNULL((~ ('')), ((0.8257457604932922)LIKE('AmH'))));SELECT ((vt0.c0 COLLATE BINARY)-(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (CASE 'X\nmKx'  WHEN 0.878421855849472 THEN '1892078012' WHEN 0.7835396771297236 THEN 0.5543867341261135 WHEN '' THEN '2068287729' END COLLATE RTRIM) ORDER BY vt0.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE BINARY, ((((vt0.c0 IN ()), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(x'')))OR(vt0.c0)), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))>((LIKELIHOOD(-1.38754391E9, 0.7901085300941398), (((vt0.c0))<=((vt0.c0))), ((vt0.c0) IS FALSE)))), SQLITE_COMPILEOPTION_USED(vt0.c0 COLLATE BINARY) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 ORDER BY (((vt0.c0)+(vt0.c0)) IN ())  NULLS FIRST, CAST(((vt0.c0)GLOB(NULL)) AS NUMERIC)  NULLS FIRST; -- 0ms;
SELECT DISTINCT LEAD((~ (0x5986b204)) COLLATE NOCASE, LOWER((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, 0.0957560126753747, vt0.c0)) AND ((vt0.c0, '985397275', vt0.c0, vt0.c0, x'')))), (((+ (vt0.c0)))<(((((vt0.c0)OR(vt0.c0)))OR(''))))) OVER () FROM vt0 ORDER BY (0.6745940916458242 IN ()) DESC; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (SUM(vt0.c0)) AND ((((vt0.c0))!=((vt0.c0))))) FROM vt0 WHERE (UPPER(CASE WHEN NULL THEN '-307429426' ELSE 0.6101315212700525 END)); -- 0ms;
SELECT ALL (NOT (((vt0.c0)GLOB(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.7242793850966806 END)) FROM vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))%(TYPEOF(vt0.c0))) FROM vt0; -- 0ms;
SELECT (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt0; -- 0ms;
SELECT ALL ((((COUNT(*))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.5031274435975217)))) FROM vt0 GROUP BY UNLIKELY(vt0.c0) COLLATE RTRIM HAVING (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))<=((vt0.c0 COLLATE BINARY))); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (MAX(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)AND(vt0.c0)) END, ((((((vt0.c0)%(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (((vt0.c0) NOT NULL) IN ()), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<>(CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE ((((NOT ('1944491830'))) BETWEEN (((0.517681450772143)||('j,2o姰'))) AND (((7.12019274E8)&('7^'))))) ORDER BY (((- (vt0.c0)))<<(CAST(vt0.c0 AS TEXT))); -- 0ms;
SELECT (DATE('0.5109861556044296', vt0.c0, vt0.c0) IN (((vt0.c0)<=(vt0.c0)), (~ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 COLLATE NOCASE AS BLOB) FROM vt0 WHERE (((('' IN ('-1986828880', NULL)))<=(CAST('u*(' AS REAL)))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((- (NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL (((((('眾T')OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) IS FALSE))) FROM vt0; -- 1ms;
SELECT ALL ((GROUP_CONCAT(vt0.c0)) NOTNULL) FROM vt0; -- 0ms;
SELECT ALL TOTAL(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((vt0.c0 IN (vt0.c0)) IN ()) FROM vt0; -- 4ms;
SELECT DISTINCT ((((vt0.c0)!=(vt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((((((((((((NULL)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 GROUP BY (((~ (vt0.c0))) ISNULL) HAVING '904282889'; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(((0X5169eab8)LIKE('2013433443')))))OR(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE ((((0.03555594391425654)=(0.37359703054424753)) IN ())) LIMIT -1142820280 OFFSET -200064431; -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((('')+(x''))))); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)|(((((vt0.c0)OR(vt0.c0)))OR(x'')))) FROM vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), 'U', (+ (vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOTNULL) IN ()) FROM vt0 WHERE ((((0.9084794923945478, NULL, '-529075652')) NOT BETWEEN ((((x'')<=('712019274')), ('-1466258797' IN ()), (- (NULL)))) AND ((((0.9881415101642226) IS FALSE), NULL COLLATE NOCASE, CAST(x'' AS INTEGER))))) LIMIT 25355168 OFFSET 1692390713; -- 1ms;
SELECT DISTINCT ((CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) FROM vt0 LIMIT -513487897; -- 0ms;
SELECT DISTINCT MAX(CAST(vt0.c0 AS TEXT)) FROM vt0; -- 0ms;
SELECT DISTINCT ('' IN ((~ (vt0.c0)))), ((vt0.c0)-(vt0.c0)) COLLATE RTRIM, ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (UPPER(vt0.c0)) AND (((vt0.c0) IS TRUE))) FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN 0xffffffffd4a8e439 THEN 0.7494545393952262 END THEN ((0Xfffffffff33ef153)+(x'ba18')) ELSE (('aL')==(NULL)) END); -- 0ms;
SELECT DISTINCT ((vt0.c0)!=(-5.63824794E8)) COLLATE NOCASE, CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL), (((vt0.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt0.c0))<=((NULL, vt0.c0, vt0.c0))))) AND ((CAST(vt0.c0 AS NUMERIC)))), ((CASE WHEN NULL THEN vt0.c0 END) ISNULL), x'ed31' FROM vt0; -- 0ms;
SELECT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))>((~ (vt0.c0)))), ROW_NUMBER() OVER (), LAG(vt0.c0, ('5W' IN ()), vt0.c0) OVER (), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ('219609144') AND (((vt0.c0)<=(0.8150000221043149)))), ((((vt0.c0)IS NOT(vt0.c0))) ISNULL), ((TOTAL(vt0.c0)) NOT NULL), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (LIKE(vt0.c0, vt0.c0))) FROM vt0; -- 1ms;
SELECT CASE (vt0.c0 IN ())  WHEN CAST(vt0.c0 AS BLOB) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, CASE '-1160933450'  WHEN (((vt0.c0))<>(('4DrVW꞊↳l'))) THEN TRIM(vt0.c0, vt0.c0) END, ((CAST(vt0.c0 AS NUMERIC)) IS FALSE), (((~ (vt0.c0)))<<(((x'')<(vt0.c0)))), (((((((((vt0.c0 IN (vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((x'10a8') NOT BETWEEN ('505150989') AND ('1649122889')))AND(((0.9658404617282697)AND(0.3068918093919295)))))OR(((((-1005810165)OR(0x4a0cbabd)))OR(x'2fef'))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (((x'') BETWEEN (NULL) AND (0.7621522450910158))))) LIMIT 712019274 OFFSET -1079210012; -- 0ms;
SELECT DISTINCT LENGTH(DATE(vt0.c0, vt0.c0, vt0.c0)) FROM vt0; -- 0ms;
SELECT ((((((vt0.c0) IS TRUE))OR(GROUP_CONCAT(vt0.c0))))OR(NULL)), RANK() OVER (), ((vt0.c0)>((((vt0.c0))>((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)LIKE(vt0.c0)) AS TEXT), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ((((((((('')OR(vt0.c0)))AND(x'')))OR(vt0.c0)))AND(NULL))) AND (((vt0.c0)>(vt0.c0)))), CASE WHEN CAST(vt0.c0 AS TEXT) THEN (vt0.c0 IN (vt0.c0)) WHEN ((vt0.c0)%(vt0.c0)) THEN rtreenode(vt0.c0, 0.6869028955496418) WHEN ((0.815934521266773)>>(vt0.c0)) THEN CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffff8626b97d THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 WHERE ((- ('1705664410')) COLLATE BINARY); -- 1ms;
SELECT DISTINCT ((((vt0.c0)+(vt0.c0)))+(vt0.c0)) FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0))))=(vt0.c0)) DESC  NULLS FIRST, ((CAST('' AS BLOB))<=(((vt0.c0)>=(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS INTEGER) FROM vt0 WHERE (((('90068497', 0.5825569451872712, '346583153')) NOT BETWEEN ((x'', ((NULL) NOTNULL), ('0.8720085126777513' IN (0.019657758284310822)))) AND ((CAST(0.5955608711170113 AS NUMERIC), ((NULL) BETWEEN (x'fdbc') AND (x'')), ('2' IN ()))))) LIMIT -1314647358; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0) IS TRUE))), ((CAST(vt0.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE BINARY)), COUNT(((vt0.c0)|(vt0.c0))) FROM vt0 LIMIT 219609144; -- 0ms;
SELECT CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE '0.08966862808551668'  WHEN vt0.c0 THEN vt0.c0 END WHEN ((((x'104b')OR(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) END FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (vt0.c0) AND (((vt0.c0) NOTNULL))) FROM vt0 WHERE (((x'' IN (x'')) IN (LAST_INSERT_ROWID()))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))IS NOT(SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((''))<((NULL))) FROM vt0 WHERE (QUOTE(x'' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)AND(vt0.c0))) FROM vt0 WHERE (CAST((('319097732') NOT BETWEEN (x'') AND (x'')) AS INTEGER)) GROUP BY ((vt0.c0 COLLATE BINARY)/(vt0.c0 COLLATE RTRIM)), ((vt0.c0 COLLATE BINARY) BETWEEN (STRFTIME(vt0.c0, vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), TYPEOF((vt0.c0 IN ())) HAVING (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((vt0.c0 COLLATE RTRIM))); -- 0ms;
SELECT ALL AVG(vt0.c0) OVER ( ROWS (vt0.c0 IN ()) COLLATE BINARY PRECEDING), vt0.c0, (~ ((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0 WHERE ((((('268284697') NOT BETWEEN (x'b489') AND (1e500)))==('U^eX'))); -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)*((~ (vt0.c0)))), (((((vt0.c0)) NOT BETWEEN (('129936457')) AND ((vt0.c0)))) NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ('THm')), AVG((vt0.c0 IN ())), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, LEAD(((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 1450376984 END)<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))), CASE WHEN (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((1581105669, 0.013907459390329557, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.632164210753468, vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END ELSE (((vt0.c0))>=((vt0.c0))) END, (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL)) OVER () FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT CASE MAX(vt0.c0)  WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN (NOT (vt0.c0)) THEN NULL END FROM vt0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0 GROUP BY vt0.c0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB)))), ((((((vt0.c0)AND(NULL)))OR(vt0.c0)))>(IFNULL(vt0.c0, vt0.c0))), NTH_VALUE(((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)*(NULL))) AND (vt0.c0)), ((CAST(0.6445872914775697 AS INTEGER))IS(MAX(vt0.c0, vt0.c0)))) OVER (), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))) BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (((vt0.c0) NOTNULL))), ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(NULL)))OR(CAST(vt0.c0 AS REAL))))OR((+ (0.9490816381120323)))) FROM vt0;SELECT DISTINCT (((vt0.c0 IN ()))AND(TRIM(vt0.c0))) FROM vt0 WHERE (((((0.6166217288201169)AND(0.5175465336810322)))OR('-1118933860')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (TRIM(vt0.c0, vt0.c0) IN ()) FROM vt0 WHERE ((NULL COLLATE BINARY IN ())); -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)), 0.8694430836132885, ((vt0.c0) NOT BETWEEN (-1131044989) AND (vt0.c0)))) AND (((((vt0.c0))<>((vt0.c0))), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(x'' AS NUMERIC)))) FROM vt0 WHERE (CASE ((0.717207779998648) NOT NULL)  WHEN '362623355' COLLATE RTRIM THEN 1487268456 END); -- 0ms;
SELECT ((((((vt0.c0)AND(0.43401538726997846)))AND(vt0.c0)))|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), FIRST_VALUE(((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR((((vt0.c0))>=((vt0.c0))))))AND(((vt0.c0)OR('zl鎹''^Q魷fz'))))) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW), ((vt0.c0)/(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((((x'0ea7') BETWEEN (0.875972059488873) AND (NULL)))<=((('#JfQP7/')IS(0.4108572612722279))))) GROUP BY ((vt0.c0)<=((vt0.c0 IN ()))), (~ (vt0.c0)), CASE WHEN json_remove(vt0.c0, vt0.c0) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0)AND(vt0.c0)) END; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS TEXT))) FROM vt0 GROUP BY (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, 0.08441192169290535, NULL))))<(((vt0.c0) BETWEEN ('0.5273095592245906') AND (vt0.c0)))) HAVING MIN((('{') BETWEEN (vt0.c0) AND (vt0.c0))); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0)IS NOT(vt0.c0))))) FROM vt0 WHERE (CASE WHEN ((('548976692')) NOT BETWEEN (('CUQWiX/ᚋ')) AND (('-1554578538'))) THEN CASE NULL  WHEN '1430618300' THEN 0xffffffffdce2b622 WHEN NULL THEN 'MXao?.7' WHEN 0.10827623330260705 THEN '0.9916171146430127' END WHEN CAST(0.9679628221533035 AS TEXT) THEN 'R∅42w' COLLATE RTRIM WHEN (+ (0.193041311238349)) THEN (((NULL)) BETWEEN ((x'')) AND ((x''))) ELSE (((NULL)) NOT BETWEEN (('1330975927')) AND ((0.25954991409446726))) END); -- 0ms;
SELECT DISTINCT ((0.07813586533975203) BETWEEN (GROUP_CONCAT(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN '1150685831' WHEN vt0.c0 THEN 0X52bd8c74 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 GROUP BY NULL HAVING ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ()))); -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))LIKE((vt0.c0 IN ()))) FROM vt0 WHERE ((((((0.7811276299294379 IN (NULL)))AND(((0Xffffffffc8de7456)<>(x'')))))OR('188176031'))) GROUP BY CAST((vt0.c0 IN ()) AS BLOB), ((vt0.c0)<=(HEX(vt0.c0))), ((vt0.c0)>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT ALL ((((vt0.c0)-(vt0.c0))) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (ABS(vt0.c0))) FROM vt0 WHERE (CAST(CASE WHEN 1437192617 THEN x'' END AS TEXT)); -- 0ms;
SELECT TIME(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '611619769' END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS REAL), (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)))), (((((vt0.c0) NOT NULL), (- (vt0.c0)), SUM(vt0.c0)))==((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)<=(NULL)), vt0.c0))), (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), (- (vt0.c0)), UNLIKELY(NULL)))>=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), CASE WHEN '553113710' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))), GROUP_CONCAT((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) OVER (), CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, 610372793)) AND ((x'', vt0.c0, vt0.c0))) END FROM vt0 GROUP BY ((vt0.c0 IN ()) IN ()), (vt0.c0 IN ()), (((CAST(x'58d3' AS NUMERIC)))>=((CAST('' AS INTEGER)))), CASE WHEN vt0.c0 THEN -1.158887982E9 END, CAST(vt0.c0 COLLATE BINARY AS NUMERIC); -- 0ms;
SELECT ALL CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL), ROW_NUMBER() OVER (), (((('1892078012')<=(vt0.c0))) NOT NULL) FROM vt0 WHERE ((((((((((((x''))<((NULL))))OR(((x'0ba7') IS FALSE))))AND(((NULL)*('<鐭s')))))AND(611619769)))AND(CASE ']\n'  WHEN NULL THEN NULL WHEN 0.9373471212476471 THEN NULL WHEN x'' THEN 0.2004667875948477 ELSE 0.7447121950174327 END))); -- 0ms;
SELECT DISTINCT (NOT ('(7zl')) FROM vt0; -- 0ms;
SELECT ALL x'2570' FROM vt0 WHERE (CASE WHEN (~ (x'')) THEN LIKELIHOOD(DISTINCT 0.5855748846161296, 0.8232979480957978) ELSE x'45f1' END); -- 0ms;
SELECT NULLIF(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL)) FROM vt0 WHERE (((CASE WHEN x'' THEN 'Z\nOMm7u' WHEN x'' THEN '-821067904' WHEN NULL THEN 0.5619623964038039 WHEN 1.771502827E9 THEN -1703125373 WHEN -144302447 THEN x'' ELSE '1724912127' END)|(CAST(5.98683952E8 AS INTEGER)))) ORDER BY ((((vt0.c0)==(vt0.c0))) IS FALSE); -- 1ms;
SELECT DISTINCT ((((vt0.c0)>>(vt0.c0)))/((+ (vt0.c0)))) FROM vt0 ORDER BY vt0.c0 ASC, CAST(x'' COLLATE NOCASE AS TEXT); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((('-1250497800')) BETWEEN ((-1003323625)) AND ((x''))) COLLATE BINARY); -- 0ms;
SELECT ALL RANK() OVER () FROM vt0 WHERE (((CAST(NULL AS NUMERIC)) IS FALSE)) ORDER BY CAST(vt0.c0 AS INTEGER) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((('-640707059')OR('1027849059')))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))), DATE(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ()), ((-1.11893386E9)LIKE(vt0.c0))), COUNT(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) OVER () FROM vt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN ('') AND (((('OE')) NOT BETWEEN ((x'')) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) ISNULL)))) FROM vt0 WHERE (((0.5975123446254882) NOT BETWEEN ('0.45135128815880843') AND ('l.z')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (NOT (CASE 'nh幋Yos5'  WHEN vt0.c0 THEN 0x1392b6cc END)) FROM vt0 WHERE ((NOT (COALESCE(NULL, 1388153972)))); -- 0ms;
SELECT ((((vt0.c0)/(vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 GROUP BY LOWER(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'N*8T' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) HAVING ((('254573686', vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'85ce')), '585490748', (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS BLOB), CAST(vt0.c0 AS NUMERIC)))); -- 0ms;
SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(x'' COLLATE BINARY)))AND(vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN 'XR61uA' THEN ((vt0.c0) ISNULL) ELSE (~ (vt0.c0)) END FROM vt0; -- 0ms;
SELECT ALL -1.138584558E9 FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((((('s3ws\r!u'))<>(('598683952'))))) AND (((('90068497')GLOB(x'')))))); -- 0ms;
SELECT CASE WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE NULL END FROM vt0 GROUP BY ((0.020721260667958652) BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE COLLATE BINARY ORDER BY '즽\n'  NULLS LAST; -- 0ms;
SELECT CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC), CASE WHEN SQLITE_VERSION() THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END, ((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((- (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('rU{y&(zQe', vt0.c0, vt0.c0))))>>(((vt0.c0) NOT NULL))), CASE SQLITE_SOURCE_ID()  WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0))<((vt0.c0))) END, NULL, SUM(SQLITE_COMPILEOPTION_USED(vt0.c0)), 0xffffffff88a0e20e FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE NOCASE FROM vt0 WHERE (CAST(NULL AS NUMERIC)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(AVG((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0;SELECT DISTINCT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, 0.9742198011912986, (((CAST(vt0.c0 AS INTEGER)))<((AVG(vt0.c0)))) FROM vt0 WHERE ((((((x'')) BETWEEN ((5.61567425E8)) AND ((0.5173657051017775)))) NOT NULL)); -- 0ms;
SELECT CAST(((vt0.c0)/(vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT NULL FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c0)))) NOT BETWEEN ('-782097035') AND (((vt0.c0) NOT NULL))) FROM vt0 WHERE (((((('-1784080031'))=((0X20b8b834)))) NOT BETWEEN ((((0.18204411442171198, NULL, 0xffffffffdf1ffa1d)) NOT BETWEEN (('0.934717050140012', '219432541', 0.1310907777897421)) AND (('-398668274', '582141946', NULL)))) AND ((NOT (x''))))); -- 0ms;
SELECT DISTINCT SQLITE_VERSION(), ((((HEX(DISTINCT vt0.c0))AND((((vt0.c0))>((vt0.c0))))))OR((((vt0.c0))=((vt0.c0))))), (((((((((((vt0.c0, x'3d26', vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((x'')+(vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((~ (x'')))))OR(((vt0.c0)/(vt0.c0)))) FROM vt0 WHERE (((((((((((x'')<(x'0789')))AND(CAST(x'017e' AS TEXT))))AND(x'')))OR(((0.7283224718327804)+(x'')))))OR(TRIM('-1745715575')))); -- 0ms;
SELECT (- (vt0.c0)) FROM vt0 WHERE (((((0.7200553967510702)LIKE(0.2675924229061646))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) NOT NULL), CASE WHEN ('' IN (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CASE WHEN 0.24403649593612697 THEN vt0.c0 ELSE vt0.c0 END END, '398092558' FROM vt0 WHERE (LENGTH(x'')); -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), ((vt0.c0)AND(ABS(vt0.c0))), TOTAL(CASE vt0.c0  WHEN 0.4265246892158293 THEN vt0.c0 ELSE vt0.c0 END) OVER () FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((((x'')<(0X45e825f1)))) AND ((((x'')IS(1.70566441E9)))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)/(vt0.c0)))OR('1418351751')))OR(GROUP_CONCAT(vt0.c0))))AND((vt0.c0 IN ()))))OR(((vt0.c0)<<(vt0.c0)))) FROM vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ()) DESC; -- 0ms;
SELECT DISTINCT (((((- (vt0.c0)))OR(NULL)))OR(CASE WHEN '-1212953787' THEN vt0.c0 END)) FROM vt0; -- 0ms;
