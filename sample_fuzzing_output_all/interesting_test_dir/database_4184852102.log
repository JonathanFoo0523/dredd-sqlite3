-- Time: 2024/06/07 21:51:54
-- Database: database2
-- Database version: 3.40.0
-- seed value: 4184852102
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 2ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE t0 (c0 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, , prefix = 557); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=15'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c89; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1534677561,15');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''); -- 0ms;
DROP TABLE vt1; -- 1ms;
INSERT OR ABORT INTO t0(c89) VALUES (x''), (''), (NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
CREATE INDEX IF NOT EXISTS i1 ON t0((CASE c89  WHEN c89 THEN c89 ELSE c89 END IN ()) COLLATE RTRIM ASC); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt0 SET c1=NULL, c3='-T*q' WHERE ((CASE WHEN rt0.c4 THEN rt0.c0 END) NOT NULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA short_column_names; -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER ); -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT t0 SET (c89)=(x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c3) VALUES ('-t*q', 0.01642256307275536, ''); -- 5ms;
REINDEX i1; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (1.534677561E9); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (''); -- 0ms;
UPDATE t0 SET c89='|uME+pc緐', c89=0.515029256525088, c89=NULL WHERE TRIM(DISTINCT t0.c89 COLLATE BINARY); -- 0ms;
CREATE UNIQUE INDEX i8 ON t1(x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ANALYZE; -- 0ms;
VACUUM; -- 1ms;
REINDEX NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
CREATE INDEX IF NOT EXISTS i35 ON t0(((((c89) BETWEEN (c89) AND (c89)))-(CAST(c89 AS INTEGER)))) WHERE ((((c89)<<(c89)))/(((c89) ISNULL))); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c4, c0, c2) VALUES (NULL, 0X2d77ad21, x'', NULL); -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i1', '0 1419624276 sz=1534677561 unordered noskipscan'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c89, c89, c89)=('1049681981', 0.5891034612782736, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c3, c3)=(x'', x'7556', '1534677561'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA automatic_index; -- 0ms;
COMMIT; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c89 TO c81; -- 1ms;
UPDATE OR IGNORE t1 SET c0=-2012810888; -- 0ms;
UPDATE OR IGNORE t1 SET c0=0xffffffff99c62071 WHERE CASE WHEN (((NULL))>=((t1.c0))) THEN COALESCE(t1.c0, t1.c0) WHEN ((t1.c0) NOTNULL) THEN ((t1.c0) NOTNULL) WHEN ((t1.c0) IS TRUE) THEN ((t1.c0)/(t1.c0)) END; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i75 ON t0(TRIM(c81) COLLATE RTRIM) WHERE (+ (IFNULL(DISTINCT '', c81))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1271234495 unordered'); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))), (('-1525817852') IS TRUE), CASE t0.c81  WHEN rt0.c3 THEN rt0.c1 END))<=((x'9b18', ((t0.c81)<(rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))))), '1e500', t1.c0, LAST_VALUE((('548175047') NOT NULL)) OVER (), ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((+ (rt0.c4))) AND (((t0.c81) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0;SELECT ALL json_type(CAST(rt0.c3 AS REAL)) FROM t0, t1, rt0 WHERE (((((((NULL))<=((x''))), ((NULL)&(0xfffffffff255a400)), ((0X4bc57fbf) NOT BETWEEN (NULL) AND (0X32ac4b39))))<=(((('1271234495') BETWEEN (-2062978137) AND (x'1771')), (((('')OR(NULL)))AND(0X549dbf54)), CAST('刹<' AS REAL))))); -- 1ms;
SELECT DISTINCT CASE (t1.c0 IN ())  WHEN ((rt0.c0)>=(rt0.c3)) THEN ((rt0.c2)<(rt0.c3)) WHEN t1.c0 COLLATE NOCASE THEN ((t0.c81) ISNULL) WHEN ((rt0.c4) NOTNULL) THEN NULL ELSE '' END FROM rt0;SELECT ((rt0.c4)AND(NULLIF(t0.c81, rt0.c2))), FIRST_VALUE((((((rt0.c2))>((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c1 COLLATE NOCASE))) OVER (), CAST(HEX(rt0.c0) AS BLOB) FROM rt0 WHERE ((((('762817825')|(NULL)))<=(0.8086736111343344 COLLATE BINARY)));SELECT DISTINCT ((((((rt0.c2))>=((rt0.c1)))))>(('赅U' COLLATE NOCASE))) FROM rt0, t0 GROUP BY (((rt0.c4 IN (rt0.c1, rt0.c3)))||((t0.c81 IN ()))), ((((((NULL)AND('1419624276')))AND(rt0.c2))) ISNULL), CASE WHEN CASE WHEN t0.c81 THEN rt0.c3 END THEN (t0.c81 IN (NULL, t1.c0)) WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)) THEN (+ (rt0.c0)) WHEN ((((t1.c0)AND(rt0.c4)))AND(rt0.c1)) THEN UNLIKELY(rt0.c2) WHEN ((rt0.c4)=(rt0.c4)) THEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN t0.c81 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 ELSE rt0.c4 END WHEN CASE WHEN rt0.c4 THEN t0.c81 ELSE rt0.c3 END THEN CASE rt0.c2  WHEN t1.c0 THEN 0.3214857211026144 WHEN x'1f0e' THEN t0.c81 WHEN rt0.c2 THEN t0.c81 ELSE rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (rt0.c4) AND (0.46472528415323633)) END, ((CAST(t0.c81 AS INTEGER))<>(t0.c81 COLLATE NOCASE)), (+ (((rt0.c3)>>(rt0.c0)))) HAVING AVG(((rt0.c1)*(t0.c81))) LIMIT 762817825 OFFSET -1568260454;SELECT ALL MIN(((((rt0.c4)AND('1449164240')))AND(rt0.c3)), (((NULL))>((rt0.c3)))), ((((rt0.c4) IS TRUE)) IS FALSE), CAST(((rt0.c0)<<(NULL)) AS REAL) FROM t1, rt0, t0 WHERE ((((NOT (0.8086736111343344)))/((('-1568260454') NOTNULL)))); -- 0ms;
SELECT DISTINCT (+ (rt0.c4)) COLLATE BINARY FROM rt0 WHERE (760902423); -- 0ms;
SELECT rt0.c2 FROM t1, t0 WHERE (((2013455580 COLLATE NOCASE)>=((((x'')) BETWEEN ((x'')) AND ((737894646))))));SELECT ALL CAST(((t1.c0)IS(rt0.c0)) AS TEXT) FROM t1, t0;SELECT (((COUNT(*), t1.c0, (('hꌧ8')<=(rt0.c3))))==((CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 ELSE '1449164240' END, ((((rt0.c2)AND(t0.c81)))OR(t0.c81)), ((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))))) FROM rt0, t0, t1 WHERE (((((((0X72405152)) BETWEEN ((762817825)) AND ((0.6298922258930241))), (- ('Z,wk')), (- (1859960303))))==(((('4Y')||('S[')), (((NULL)) NOT BETWEEN (('')) AND ((x''))), x'' COLLATE NOCASE)))) LIMIT 1449164240; -- 0ms;
SELECT DISTINCT (((((((((t0.c81 IN ()))AND(CAST(t0.c81 AS REAL))))AND((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((t0.c81))))))OR(t0.c81 COLLATE NOCASE)))AND((- (NULL)))), (((CASE WHEN t1.c0 THEN t0.c81 END, ((NULL) BETWEEN (rt0.c2) AND (rt0.c4)), CASE WHEN t1.c0 THEN NULL ELSE t1.c0 END))>=(((((rt0.c2))==((rt0.c4))), (~ (rt0.c0)), CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 WHEN 0.5891034612782736 THEN rt0.c1 WHEN rt0.c0 THEN t0.c81 ELSE rt0.c2 END))), COUNT(*) OVER () FROM rt0 LIMIT 542307182 OFFSET 732096894;SELECT DISTINCT (((- (rt0.c1)))*(CASE rt0.c1  WHEN rt0.c1 THEN NULL END)) FROM t0, rt0, t1 WHERE ((('1397806749')<<((NOT ('0.3214857211026144'))))) GROUP BY (rt0.c1 IN ()) HAVING CASE LIKE(0.7113401968480012, 'jm', '刹')  WHEN ((rt0.c2)<<(x'')) THEN ((t0.c81) IS FALSE) ELSE t1.c0 END; -- 0ms;
SELECT DISTINCT rt0.c2 FROM t1 WHERE (((((((((CAST(0x2d5a7317 AS INTEGER))AND('″ ')))AND((NOT (0.0714169997667311)))))AND(CASE ''  WHEN x'' THEN 0.6699128446016521 END)))OR('1902469743' COLLATE NOCASE)));SELECT ALL LEAD((~ (CASE rt0.c0  WHEN t1.c0 THEN rt0.c2 END)), CAST(((rt0.c4)|(t1.c0)) AS INTEGER), CASE (rt0.c3 IN ())  WHEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN NULL ELSE ((rt0.c1) IS TRUE) END) OVER () FROM rt0, t1 WHERE (((((('1229577055')/(x''))))>(((NOT ('-196575947')))))) ORDER BY (NOT (((rt0.c1)IS NOT(t0.c81))))  NULLS FIRST, ((rt0.c4 COLLATE NOCASE)<>(CAST(rt0.c3 AS REAL))) ASC  NULLS FIRST;SELECT ALL (((((((((((t1.c0)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))))=((((rt0.c2) NOT NULL)))) FROM t0, rt0, t1; -- 0ms;
SELECT COUNT(((((rt0.c0)AND(x'')))OR(''))) FILTER(WHERE ((rt0.c2 COLLATE NOCASE)-(SUBSTR(t0.c81, t0.c81)))) OVER () FROM rt0, t1;SELECT DISTINCT GROUP_CONCAT(((rt0.c4) BETWEEN (0.04216491159817315) AND (t0.c81))) FROM t0 WHERE ((((((((((0.3517828630189762)AND(NULL)))AND(-801141435)))AND(0.9787635335862618)))AND(NULL)) IN ()));SELECT DISTINCT t0.c81 FROM rt0, t1, t0 WHERE (0.17321970398382813 COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c1 FROM t1 WHERE (((x'')!=(((('', 'OX', x''))==((x'', NULL, '-2062978137')))))) LIMIT 1544491471;SELECT ALL NULL FROM t1, t0, rt0; -- 0ms;
SELECT '-1715068815', (((- ('762817825')))+(CASE WHEN rt0.c1 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE t1.c0 END)), (('0.0714169997667311') NOT BETWEEN (((rt0.c2)&(rt0.c1))) AND (((((rt0.c2)OR(NULL)))OR(t0.c81)))) FROM t1, t0 WHERE (((CAST(0.2540827879023687 AS TEXT))&((('')>=(0x600a836c))))) LIMIT 1333896326;SELECT ALL (((~ (rt0.c3))) NOT NULL), rt0.c0, json_valid(((rt0.c3) IS TRUE)) FROM t0, rt0, t1 WHERE (CASE CASE WHEN NULL THEN 0.6675539789863832 WHEN x'b24e' THEN NULL WHEN '' THEN '' WHEN 0.2332297657878757 THEN 0.6703858620518546 WHEN x'' THEN 'Oo*5緐仔' END  WHEN ((1649151490)IS NOT(x'')) THEN ((0.2332297657878757)+(x'')) ELSE (((x'ab7b')) NOT BETWEEN ((NULL)) AND ((0x7143f96d))) END); -- 1ms;
SELECT DISTINCT (((rt0.c4, rt0.c2, 0.8132825604876405))==((rt0.c2, rt0.c4, rt0.c3))) COLLATE BINARY FROM t1, t0, rt0 WHERE ((- (CAST(0.17321970398382813 AS INTEGER)))) ORDER BY (((t1.c0)) NOT BETWEEN ((((rt0.c2) ISNULL))) AND ((rt0.c4 COLLATE NOCASE))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((rt0.c3)) NOT BETWEEN ((((((x'')AND(rt0.c1)))OR(rt0.c4)))) AND ((t0.c81 COLLATE NOCASE))) FROM rt0, t0, t1 WHERE (CASE WHEN STRFTIME('*&MF', x'', x'') THEN (('1449164240')>=('')) ELSE ((x'') NOT BETWEEN (0x4e725265) AND ('{1(L^0Aw\r')) END) ORDER BY ((((t1.c0) BETWEEN (rt0.c1) AND (t1.c0))) NOT BETWEEN ((+ (rt0.c2))) AND ((((rt0.c3, t0.c81, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c4, rt0.c4, rt0.c1)))))  NULLS FIRST, ((((rt0.c4)OR(((((((((t1.c0)OR(rt0.c2)))OR(t1.c0)))AND('1872445528')))OR(t0.c81)))))AND((~ (rt0.c0)))) DESC; -- 0ms;
SELECT ALL CAST(rt0.c0 AS BLOB), ((GROUP_CONCAT(rt0.c4))GLOB(1.544491471E9)), NULL FROM t0, rt0 WHERE (((((0X2d4affb4) BETWEEN ('') AND (x'')))<((NULL IN ())))); -- 0ms;
SELECT (((((~ (x'')))AND((rt0.c1 IN (rt0.c3, t0.c81)))))OR((((rt0.c4)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3))))) FROM rt0, t0 WHERE ((+ (-895694818 COLLATE NOCASE)));SELECT ALL (x'1fd7' IN ()) FROM rt0 WHERE (((((('542307182')AND(0.6298922258930241)))AND('1)')) IN ())); -- 0ms;
SELECT ((((rt0.c1)&(rt0.c2))) ISNULL) FROM rt0, t0, t1 WHERE ((NOT (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT rt0.c0, CAST((('476292688')AND(t0.c81)) AS TEXT), TRIM((NOT (NULL))) FROM rt0, t1, t0 WHERE (((0.054924509431823254)IS NOT(-1.715068815E9))); -- 0ms;
SELECT DISTINCT ((LIKE(t0.c81, rt0.c1)) ISNULL), (((rt0.c0, 0.9787635335862618, rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((NULL, ((((rt0.c0)AND('-2012810888')))AND(rt0.c3)), ((rt0.c3)IS(t1.c0)), CASE WHEN rt0.c0 THEN rt0.c4 ELSE NULL END, '1229577055' COLLATE NOCASE)) AND ((CAST(t1.c0 AS NUMERIC), CAST(rt0.c2 AS REAL), ((rt0.c0)=(rt0.c3)), (~ (rt0.c3)), ((((((((t1.c0)AND(rt0.c1)))OR(0.9649416691824982)))OR(rt0.c2)))AND(t0.c81))))), (NOT (t0.c81 COLLATE BINARY)), ((((x'')OR(((rt0.c3)+(rt0.c1)))))AND(((t0.c81)IS(rt0.c0)))), NTH_VALUE(CASE WHEN (+ (rt0.c2)) THEN CASE NULL  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN t1.c0 THEN 0x2a659f13 END END, LOWER(DISTINCT (0.772567449349596 IN (rt0.c0, t0.c81)))) OVER () FROM t0, rt0, t1 LIMIT -1415590495 OFFSET -1442682660;SELECT LAST_VALUE((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))>(t1.c0))) OVER () FROM t1; -- 0ms;
SELECT ALL ((0.6699128446016521 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) IS TRUE)) AND ((('PZ<ቝC') IS TRUE))) FROM rt0, t0 WHERE ((+ (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((t0.c81)<(rt0.c0)) IN ()) FROM t0 WHERE ((((('-1669546688') NOT NULL)) BETWEEN ((NOT ('-1568260454'))) AND (CASE WHEN '' THEN NULL END))); -- 0ms;
SELECT ALL TRIM(highlight(rt0.c0, rt0.c0, rt0.c2, rt0.c1), ((t0.c81) IS TRUE)) FROM t0, t1, rt0;SELECT DATETIME(COUNT(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)), CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c1 END) FROM t0;SELECT ALL ((rt0.c1) NOT NULL) FROM rt0 ORDER BY ((~ (rt0.c2)) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c1 FROM t1 GROUP BY ((((rt0.c4) IS FALSE)) BETWEEN (((rt0.c4) IS FALSE)) AND ((NOT (0.9170202692071034)))) ORDER BY CASE WHEN ((rt0.c4)>=(rt0.c2)) THEN -986549017 WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c4 COLLATE NOCASE WHEN (('-599342775') NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN '1891479271' COLLATE BINARY ELSE rt0.c3 COLLATE NOCASE END DESC;SELECT ALL (((MIN(t0.c81)))!=((rt0.c2 COLLATE NOCASE))) FROM t1, t0;SELECT ALL ((((((((((t1.c0)AND(t1.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(t0.c81)))||(CASE WHEN rt0.c4 THEN rt0.c0 WHEN NULL THEN 0.7868760238639265 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END)) FROM t1, rt0, t0; -- 0ms;
SELECT (NOT (rt0.c3)), rt0.c2, ((((json_array(rt0.c3, rt0.c1))AND((t1.c0 IN (rt0.c4)))))OR((((t1.c0))>=((rt0.c2))))) FROM t0 WHERE (CASE 0.46472528415323633 COLLATE NOCASE  WHEN (- (NULL)) THEN ((x'')<(NULL)) WHEN ('秆' IN (0xffffffffd03f8d45)) THEN (+ (NULL)) WHEN (+ (x'')) THEN (('2KT-ln)') NOT BETWEEN (-229268480) AND ('')) ELSE '0S' COLLATE RTRIM END);SELECT TOTAL((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN (('1231508653', t1.c0, t0.c81)) AND ((rt0.c3, rt0.c1, rt0.c4)))) COLLATE BINARY, ((((((((SUM(t0.c81))AND(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c2)=(-129408937)))))OR(CASE 0.08761691535802918  WHEN rt0.c2 THEN rt0.c4 WHEN t1.c0 THEN rt0.c2 WHEN t0.c81 THEN t1.c0 ELSE '1859960303' END)))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c81))))), ((((GROUP_CONCAT(t1.c0))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (x'')))))OR(GROUP_CONCAT(rt0.c4))) FROM t0, rt0 WHERE ((((0.9899008338234784)AND(0.6039672155410131)) IN ()));SELECT DISTINCT MIN(((rt0.c3) NOT BETWEEN (t1.c0) AND (t0.c81))), ((((AVG(-249208035))AND(((((rt0.c1)OR(4.76292688E8)))AND(t1.c0)))))AND((rt0.c0 IN ()))), rt0.c1 FROM t1, rt0;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((UNLIKELY(x''))) AND ((((rt0.c2)>=(t1.c0))))) FROM t0, rt0 WHERE (CAST(CASE WHEN x'' THEN x'7c70' ELSE NULL END AS NUMERIC));SELECT DISTINCT ((((rt0.c2) BETWEEN (t0.c81) AND (t1.c0)))GLOB(((NULL)<<(rt0.c2)))) FROM rt0, t1 ORDER BY (((rt0.c0)) BETWEEN ((((t0.c81)-(NULL)))) AND ((CAST(rt0.c0 AS BLOB))))  NULLS FIRST, ((((((rt0.c1)<=(t0.c81)))AND((~ (rt0.c0)))))AND(((t0.c81) ISNULL))) DESC;SELECT DISTINCT ((((((rt0.c2)OR(rt0.c4)))AND(t1.c0)))|(CASE t0.c81  WHEN rt0.c2 THEN t0.c81 END)) FROM t1, t0, rt0 WHERE ((- (((1245842545) BETWEEN (NULL) AND ('272489872'))))); -- 0ms;
SELECT DISTINCT AVG(CASE WHEN t1.c0 THEN t0.c81 ELSE 1.419624276E9 END) FROM t0, t1 ORDER BY (((NULL IN ())) IS FALSE); -- 0ms;
SELECT DISTINCT -944428262, (((t0.c81, rt0.c2, rt0.c2)) BETWEEN ((t0.c81, rt0.c1 COLLATE RTRIM, ((rt0.c3)&(rt0.c1)))) AND ((((NULL)AND(rt0.c1)), rt0.c1, CAST(rt0.c4 AS BLOB)))), (((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((((rt0.c4) NOT BETWEEN (t1.c0) AND (rt0.c2))))) FROM t1 ORDER BY CAST(CASE rt0.c1  WHEN t1.c0 THEN t0.c81 ELSE t0.c81 END AS REAL);SELECT ALL COUNT(*) OVER (), COUNT(UNLIKELY(rt0.c4)) OVER (), HEX(CASE WHEN rt0.c4 THEN t0.c81 ELSE rt0.c0 END) FROM rt0 WHERE (0X4c09a1bf);SELECT ((('!vḦcK1-', rt0.c1, rt0.c1)) NOT BETWEEN (((((rt0.c1))!=((rt0.c3))), ((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)), ((t1.c0) NOT BETWEEN (rt0.c4) AND (0x5cd8a327)))) AND ((((t1.c0)AND(t1.c0)), CASE WHEN rt0.c2 THEN rt0.c4 END, '-1715068815'))) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0)<>((rt0.c0 IN ()))) FROM rt0 CROSS JOIN t1 ON '-342659395'; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c4)|(rt0.c1)) THEN CASE WHEN rt0.c4 THEN t0.c81 END WHEN 1.44916424E9 THEN ((rt0.c1)IS NOT(t1.c0)) WHEN ((t1.c0) NOT NULL) THEN ((rt0.c4)>(t0.c81)) END FROM t0, rt0, t1; -- 0ms;
SELECT (((((rt0.c1 IN ()))OR(rt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)))) FROM t0 WHERE (LIKELY(((((NULL)AND('1212991088')))AND(0.9983958981245138))));SELECT DISTINCT ((rt0.c0)||(((('272489872', rt0.c2, rt0.c4))<=((rt0.c3, '0.04216491159817315', rt0.c4))))) FROM rt0, t1, t0 WHERE (((((((((((0.12075627950338552)OR('^ v!f!렁(>')))AND(NULL)))OR(0.4311545807382323)))AND(NULL)))+(((0.13304646775056672) NOTNULL)))); -- 0ms;
SELECT DISTINCT AVG(CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END) FROM t0 ORDER BY TRIM((((t0.c81)) BETWEEN ((t1.c0)) AND ((t0.c81)))) ASC;SELECT DISTINCT (~ (NULL)) FROM t1, rt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL (('*&MF')&(CASE WHEN rt0.c0 THEN rt0.c3 ELSE t0.c81 END)), (~ (rt0.c1)), (NOT (((t1.c0)%(rt0.c3)))), ((CAST(t0.c81 AS TEXT))==(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))), ((((rt0.c3)<<(x'b602'))) ISNULL) FROM t0;SELECT DISTINCT (((rt0.c4)) BETWEEN (((rt0.c2 IN ()))) AND ((((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) FROM t1, t0, rt0; -- 0ms;
SELECT ((- (rt0.c3)) IN (CASE WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END)), COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING), ((t1.c0)>=(NULL)) FROM rt0 WHERE (((((((((CASE NULL  WHEN x'aa84e192' THEN x'' ELSE '-760663042' END)OR(COALESCE(DISTINCT NULL, '759889844'))))OR((0.8170031412941818 IN (NULL)))))AND(CAST('-1041460675' AS REAL))))AND(CASE WHEN 0.13304646775056672 THEN 2010483322 WHEN NULL THEN 1.902469743E9 WHEN -1275536829 THEN x'' ELSE 0X10d0cf67 END)));SELECT ALL MAX(((rt0.c3) NOT NULL)), ABS(AVG(rt0.c1)), SUM(((((0X54e254ca)OR(rt0.c1)))AND(t1.c0))) FROM t0, t1 WHERE (((((0.9899008338234784) NOT NULL)) BETWEEN (((0.9787635335862618)<>(x'1146'))) AND (((((0.6782437865570071)AND('3<籙')))OR('oo*5緐仔')))));SELECT ((t0.c81)AND(NULL)) COLLATE RTRIM FROM t1, t0 WHERE (((('౱')) BETWEEN ((CAST(x'' AS TEXT))) AND ((((']-')|('	>)')))))); -- 0ms;
SELECT ALL (((rt0.c1)) BETWEEN ((rt0.c4 COLLATE BINARY)) AND ((CAST(rt0.c3 AS INTEGER)))) FROM t1 WHERE ((NOT (((((NULL)OR(x'')))OR(x'')))));SELECT AVG(((rt0.c0) NOT NULL)) FROM t0 WHERE (0.6434218295924616);SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((((((t0.c81)OR(rt0.c4)))OR(rt0.c3)))) AND (((~ (rt0.c0))))) FROM rt0, t0, t1; -- 0ms;
SELECT ALL ((CASE WHEN t0.c81 THEN NULL ELSE rt0.c3 END)>>(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) FROM rt0, t1 WHERE ((+ (x'' COLLATE RTRIM))) GROUP BY TRIM((rt0.c1 IN ())) HAVING SUM(CASE WHEN rt0.c2 THEN t0.c81 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END);SELECT DISTINCT GROUP_CONCAT((((t1.c0, rt0.c3, NULL))!=((rt0.c1, t1.c0, rt0.c2)))) OVER () FROM rt0, t1, t0 GROUP BY ((((rt0.c1 IN (rt0.c1))))=((IFNULL(DISTINCT rt0.c3, rt0.c0)))) ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c2))<((rt0.c0))))) AND ((((rt0.c3)&('y厱')))))  NULLS FIRST LIMIT 388033936 OFFSET 1926452511; -- 0ms;
SELECT DISTINCT (((((rt0.c3)) BETWEEN (('-1288670581')) AND ((rt0.c0))))&(((t0.c81)>>(rt0.c0)))), ((((CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE t0.c81 END)OR((- (rt0.c3)))))OR(((rt0.c0)IS NOT(rt0.c3)))), x'' FROM t0, t1 WHERE ((NULL COLLATE NOCASE IN ()));SELECT DISTINCT LOWER(DISTINCT TOTAL(t0.c81)) FROM rt0 WHERE (((0.4147676772966076 COLLATE BINARY) NOT BETWEEN ((NULL IN ())) AND (json_patch('531069382', 'xlaX!E'))));SELECT ALL 3.90510593E8 FROM t0 WHERE ((((((('-895694818')IS NOT(0Xffffffffa0e60824)))OR((((('V%!')OR(0.589532074131478)))AND(1.926452511E9)))))OR(CAST(-1835930616 AS REAL)))); -- 0ms;
SELECT DISTINCT CAST((NOT (0.8468232794117807)) AS INTEGER) FROM t1, t0; -- 0ms;
SELECT ALL NULL FROM t0, rt0, t1 WHERE (((((0Xffffffffc53274e7)+(x''))) NOT BETWEEN ((((''))>=((0.3441839297415491)))) AND (((((((((0.5904401346701905)AND(NULL)))OR(x'')))OR(0xffffffffddf904c8)))AND('秆'))))); -- 3ms;
SELECT ALL ((((CAST(rt0.c4 AS TEXT))AND(1.333896326E9)))OR(CAST(rt0.c4 AS INTEGER))) FROM t1, rt0; -- 0ms;
SELECT rt0.c3, (((((t0.c81)!=(rt0.c0))))>=(((NOT (rt0.c0))))), AVG(((t1.c0) NOT NULL)) FROM t0 NOT INDEXED WHERE (((((((((((NULL)GLOB(x'')))AND((NULL IN ()))))AND((('耴b') NOT BETWEEN (x'a61c') AND (0.3214857211026144)))))AND((('1900280173') NOTNULL))))OR(CAST(0.8132825604876405 AS INTEGER))));SELECT ((t1.c0 COLLATE BINARY) IS TRUE) FROM rt0, t1, t0 WHERE ((((- (0.4011785448737202)))>=(SQLITE_COMPILEOPTION_GET('-888170283')))); -- 0ms;
SELECT DISTINCT ((((t1.c0) IS FALSE)) BETWEEN (LOWER(DISTINCT t1.c0)) AND (json_array(rt0.c4, rt0.c4, t1.c0, rt0.c4))), TYPEOF(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c4))), rt0.c0, SUM((t0.c81 IN ())) OVER (), (NULL IN ((((t0.c81, t1.c0, rt0.c0, 0.12075627950338552, NULL)) NOT BETWEEN ((t1.c0, rt0.c1, rt0.c1, t1.c0, rt0.c1)) AND ((rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c2))), CAST(rt0.c1 AS INTEGER))), ((((t0.c81) ISNULL)) NOT BETWEEN (rt0.c2) AND (TOTAL(rt0.c4))), ((TOTAL(rt0.c1))!=(((t0.c81) IS FALSE))) FROM t1, rt0, t0; -- 0ms;
SELECT ALL CASE ((rt0.c1)||(t1.c0))  WHEN CAST(t1.c0 AS INTEGER) THEN ((((t0.c81)OR(rt0.c3)))AND(rt0.c0)) WHEN ((t0.c81)IS NOT(rt0.c3)) THEN ((rt0.c0)OR(rt0.c0)) WHEN ABS(rt0.c4) THEN json(rt0.c1) END FROM t0;SELECT DISTINCT CASE WHEN ((t0.c81)IS(rt0.c4)) THEN ((rt0.c4) NOT BETWEEN (x'3349') AND (rt0.c1)) WHEN ((((t0.c81)AND(rt0.c0)))OR(rt0.c4)) THEN CASE t1.c0  WHEN t1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN t1.c0 THEN rt0.c1 END WHEN ((NULL) IS FALSE) THEN NULL END FROM rt0, t1, t0; -- 1ms;
SELECT ((((rt0.c4)||(rt0.c1)))>(NULL)), ((((((t1.c0)AND(-1.275536829E9)))OR(t1.c0))) NOT BETWEEN (((t1.c0)>>(rt0.c3))) AND (SUM(t1.c0))), ((((rt0.c2)<=(NULL))) BETWEEN (((t1.c0) IS FALSE)) AND (((((((((((((rt0.c3)AND(rt0.c3)))OR(t1.c0)))OR(x'')))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c3)))) FROM t1, t0, rt0 WHERE ((((('-543533916')AND('1231508653')))OR(NULL)) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1, t0, rt0 WHERE (CASE (+ ('赅U'))  WHEN CASE 4.76292688E8  WHEN NULL THEN 0.5331706286057357 WHEN x'' THEN 0.873667615833111 WHEN NULL THEN 0.9114195647921395 ELSE NULL END THEN NULL WHEN ((('g80(%', NULL, 1769201756)) BETWEEN ((NULL, '-233972074', 'Q')) AND ((0.9724246439201154, '', NULL))) THEN DATE(x'a243', x'e460', NULL) WHEN CAST('' AS BLOB) THEN CASE WHEN '-407289387' THEN '1534677561' WHEN NULL THEN '-910611174' WHEN '531069382' THEN x'' END ELSE (('詓t<') BETWEEN (x'a464') AND (-1669546688)) END) LIMIT -2139706337; -- 0ms;
SELECT ALL (((NOT (rt0.c0))) IS TRUE), AVG(((((rt0.c1)AND(t0.c81)))AND(rt0.c2))) OVER (), CASE WHEN (rt0.c1 IN ()) THEN (rt0.c3 IN (t0.c81)) END FROM t1, t0, rt0 WHERE (TIME(1049681981, 0.630233420763633, 0.9114195647921395, 0x1746b801, '') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT 0.48163997981229056 FROM rt0, t1 WHERE (((((CASE WHEN '0.630233420763633' THEN 1.916817746E9 WHEN 390510593 THEN '-1665199414' WHEN x'' THEN NULL END)OR((((('-1517538806')AND('NaN')))AND(NULL)))))AND(((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c2)))) BETWEEN (((rt0.c1)IS(rt0.c0))) AND (HEX(rt0.c1))) FROM t0, t1;SELECT DISTINCT GROUP_CONCAT('9''' COLLATE BINARY) OVER ( ORDER BY rt0.c3, (((t1.c0 IN (rt0.c1, t1.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (TRIM(t1.c0)))) FROM t1, rt0 WHERE (CASE CASE WHEN 0.9980028754516435 THEN 0xbd9835 END  WHEN (('1098487283') NOT BETWEEN (x'd5d5') AND (x'bccb')) THEN (0Xd7a95b4 IN ()) END); -- 0ms;
SELECT DISTINCT (((((((t0.c81)OR(rt0.c2)))AND(t0.c81)), ((rt0.c4) NOTNULL), UPPER(rt0.c0), ((rt0.c3)<(rt0.c3)), rt0.c2 COLLATE BINARY))>((((('[f'))<=((rt0.c2))), (rt0.c4 IN ()), ((rt0.c2)OR(t1.c0)), ('2076711541' IN ()), rt0.c4 COLLATE RTRIM))) FROM t1, rt0, t0 WHERE (((((x'')!=(NULL))) BETWEEN ((+ (NULL))) AND (TRIM(DISTINCT '0.08761691535802918')))) LIMIT 1449164240; -- 0ms;
SELECT ALL NULL, SUBSTR(QUOTE(0.45418374676077067), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c2))), ((NULL) NOTNULL) FROM t0 ORDER BY CASE LIKELY(DISTINCT t0.c81)  WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 END THEN ((rt0.c2)-(rt0.c1)) WHEN ((rt0.c1)>('1245842545')) THEN 0.5417806674156848 WHEN ((t0.c81) BETWEEN (rt0.c1) AND (t0.c81)) THEN ((((t1.c0)AND(rt0.c4)))OR(rt0.c0)) ELSE (rt0.c0 IN ()) END  NULLS FIRST;SELECT ALL (NOT (((t1.c0)>=(rt0.c4)))), ((((CHANGES())AND(CASE WHEN t0.c81 THEN t1.c0 WHEN x'bf5e' THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c3 END)))OR((rt0.c2 IN ()))), ((CASE WHEN rt0.c1 THEN -164662528 END)!=(((rt0.c2) NOTNULL))), rt0.c3, MAX(CASE WHEN rt0.c3 THEN 0.4011785448737202 END) FROM rt0, t0, t1 WHERE ((+ (CASE WHEN x'' THEN x'' ELSE NULL END))); -- 1ms;
SELECT DISTINCT (~ ((- (-2.012810888E9)))), COUNT(LOWER(t1.c0)), ((INSTR(rt0.c2, t1.c0)) NOT BETWEEN (((((t0.c81)OR(rt0.c0)))AND(rt0.c3))) AND (0.264554607665738 COLLATE NOCASE)) FROM t0, t1;SELECT DISTINCT ((('', rt0.c2, '44107338')) BETWEEN (('0.3517828630189762', rt0.c3, rt0.c4)) AND ((rt0.c1, ((('!VḦCK1-', rt0.c3, rt0.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c0, t0.c81))), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2))))) FROM rt0, t0, t1 WHERE ((CAST(NULL AS BLOB) IN ())); -- 0ms;
SELECT ((((rt0.c4)!=(rt0.c1)))<(SUM(rt0.c1))) FROM t0, rt0 WHERE ((((((('-1175520245')>('f+jP')))AND(CASE WHEN x'' THEN 0.3517828630189762 WHEN 0.40140789073041994 THEN 0.6434218295924616 WHEN '-196575947' THEN x'' WHEN '-1499136543' THEN NULL WHEN NULL THEN 0.0439807906145383 ELSE NULL END)))OR(((('1229577055'))!=((NULL)))))) INTERSECT SELECT DISTINCT LAG(NULL, 1.872445528E9, (((((((((((rt0.c4)) NOT BETWEEN (('0.17321970398382813')) AND ((rt0.c2))))OR(((rt0.c4)%(rt0.c1)))))AND(t1.c0)))AND(((x'') NOT BETWEEN (t1.c0) AND ('0.7868760238639265')))))OR(((rt0.c1) NOTNULL)))) OVER () FROM rt0 CROSS JOIN t1 ON t1.c0 LIMIT 760902423; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, t0; -- 0ms;
SELECT TYPEOF(CAST(rt0.c4 AS REAL)), COUNT(SUBSTR(rt0.c0, t1.c0)), rt0.c4, SUM(CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) OVER (), (((rt0.c1 IN ()))<(CAST(t1.c0 AS BLOB))) FROM t1, rt0 INDEXED BY i1, t0;SELECT DISTINCT TOTAL((((rt0.c4)) BETWEEN (('0.0714169997667311')) AND ((rt0.c3)))), TOTAL(rt0.c0 COLLATE NOCASE COLLATE BINARY) OVER (), TIME(((t1.c0) BETWEEN (t1.c0) AND (rt0.c2)), ((rt0.c1) NOT NULL), t0.c81) FROM t1, t0, rt0 WHERE (x'818b'); -- 0ms;
SELECT DISTINCT ((CASE WHEN '0.12075627950338552' THEN 'F6(/2O躯' WHEN rt0.c1 THEN 0.036341155141192516 WHEN rt0.c4 THEN t1.c0 END) BETWEEN ((((('694293085')OR(rt0.c4)))AND('634627923'))) AND (CASE t1.c0  WHEN t0.c81 THEN rt0.c4 ELSE rt0.c1 END)) FROM rt0 INTERSECT SELECT ALL (((((rt0.c4 IN (rt0.c2, t0.c81)))AND('-306228734')))OR(IFNULL(DISTINCT -150672011, t1.c0))) FROM t0;SELECT DISTINCT ((((rt0.c3 COLLATE BINARY)OR('')))AND(((rt0.c2) NOTNULL))) FROM rt0; -- 1ms;
SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT ((COUNT(*)) BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(t0.c81))) AND (((t1.c0)&(rt0.c2)))) FROM t1, t0;SELECT ALL AVG(((0x5b68d19e) NOT NULL)) OVER () FROM t0, rt0, t1 WHERE ((NOT ((('y厱') NOT BETWEEN (x'c86f') AND (x''))))); -- 0ms;
SELECT DISTINCT (~ (CASE WHEN rt0.c0 THEN rt0.c3 END)) FROM t0, t1, rt0; -- 0ms;
SELECT ALL t1.c0, CASE (~ (t0.c81))  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c3)) THEN NULL END, 2.12645431E9 FROM t0 WHERE (((CAST('&+Rcnm끸K+' AS BLOB))&(CAST('-51491116' AS INTEGER)))) GROUP BY (NOT (t0.c81)), ((((rt0.c2) IS TRUE))||(((rt0.c3)/(rt0.c2)))), ((((t1.c0) BETWEEN (t1.c0) AND (rt0.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), ((json_object(rt0.c3, rt0.c2)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((t1.c0) ISNULL))), (((+ (rt0.c3))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 WHEN 5.31069382E8 THEN t1.c0 ELSE rt0.c3 END));SELECT DISTINCT ((CASE WHEN t0.c81 THEN t0.c81 ELSE t0.c81 END)&(((('q|3')) NOT BETWEEN ((x'')) AND ((rt0.c3))))), CASE json_valid(rt0.c3)  WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)) THEN '-1261249486' ELSE ((t1.c0)>(rt0.c4)) END, ((AVG(rt0.c3)) NOT BETWEEN ((~ (rt0.c4))) AND (-449861801 COLLATE RTRIM)) FROM rt0 WHERE ((((0Xffffffffc2135c5d)) NOT BETWEEN ((((x'fbe6')||(0.7850275495841539)))) AND (((((0.3517828630189762)) NOT BETWEEN ((0.7020745568917387)) AND (('GsWVFt''V')))))));SELECT DISTINCT ((rt0.c1 IN ()) IN ()), ((t0.c81 IN (t0.c81)) IN ()), SUM(CASE rt0.c1  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c2 END) FROM rt0, t1 WHERE (((('1389855648')|('753375429')) IN ())); -- 1ms;
SELECT DISTINCT CUME_DIST() OVER (), 1.275699647E9, (- (SUM(t1.c0))) FROM t1, rt0 INDEXED BY i35 WHERE (CAST(((((((((NULL)AND('4Y')))AND('-1517538806')))OR(0.6851577912173902)))OR(NULL)) AS TEXT)) LIMIT 753503799 OFFSET -1041460675;SELECT t1.c0 FROM t0, rt0, t1 WHERE (CAST(x'ba76' AS REAL) COLLATE NOCASE) LIMIT 1890377252 OFFSET 1520497510; -- 0ms;
SELECT DISTINCT (+ (t0.c81)) FROM rt0 LEFT OUTER JOIN t0 ON LENGTH(rt0.c3) CROSS JOIN t1 ON (((rt0.c0) ISNULL) IN ()) GROUP BY '-471434624' HAVING (CASE rt0.c0  WHEN t0.c81 THEN rt0.c0 ELSE rt0.c2 END IN (((rt0.c4)-(rt0.c3)))); -- 0ms;
SELECT ALL (NOT (CAST(t0.c81 AS BLOB))), NULL, COUNT(*) OVER () FROM rt0 ORDER BY NULL DESC  NULLS FIRST;SELECT DISTINCT CASE NULLIF(DISTINCT rt0.c0, rt0.c1)  WHEN x'' COLLATE NOCASE THEN NULL ELSE (NOT (rt0.c1)) END FROM t0, rt0 WHERE (CASE ((x'')+(0.8051280559826822))  WHEN (((('-1571170786')OR('1271234495')))OR(x'')) THEN CASE NULL  WHEN 0x2ba2e97e THEN x'' END WHEN 0.6782437865570071 COLLATE NOCASE THEN ((('', '8x}Y]X''E', NULL))<=((0.5118952745843177, NULL, 0.41448406831379614))) WHEN CASE WHEN NULL THEN '텏-' END THEN LOWER(NULL) ELSE 0.40018757708292774 COLLATE RTRIM END) GROUP BY ((CAST(rt0.c2 AS TEXT)) NOTNULL) HAVING rt0.c3; -- 6ms;
SELECT AVG(x'') OVER () FROM rt0, t0 WHERE ((('↡D')AND(0.18635684093461458)) COLLATE RTRIM); -- 0ms;
SELECT ((((((((((rt0.c3) BETWEEN (t1.c0) AND (rt0.c1)))AND(LOWER(DISTINCT rt0.c1))))OR((~ (rt0.c3)))))AND(COUNT(*))))OR((((rt0.c0, t1.c0, rt0.c3))<>((t1.c0, x'70e2', rt0.c4))))) FROM t1 NOT INDEXED, rt0, t0; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c4  WHEN t1.c0 THEN t1.c0 END  WHEN ((NULL)IS(rt0.c0)) THEN GROUP_CONCAT(rt0.c4) WHEN ((t1.c0)<=(rt0.c1)) THEN (rt0.c2 IN ()) WHEN (NOT (rt0.c1)) THEN GROUP_CONCAT('-801141435') END FROM rt0;SELECT DISTINCT CASE WHEN ((rt0.c3) BETWEEN (t0.c81) AND (rt0.c0)) THEN (t1.c0 IN (rt0.c1)) ELSE ((((t0.c81)AND(t1.c0)))OR(rt0.c2)) END, (((rt0.c4, rt0.c0, NULL)) BETWEEN ((t1.c0 COLLATE RTRIM, NULL COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((rt0.c4) IS FALSE), ((t1.c0) ISNULL), ((rt0.c0)>=(rt0.c4))))), ((((((((rt0.c2 COLLATE BINARY)AND(CASE WHEN rt0.c4 THEN rt0.c4 END)))OR(CASE t0.c81  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)))OR((+ ('310887259')))))OR(t0.c81)), NTH_VALUE((NOT ((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))), x'fd32') OVER (), 0x3eff1255 FROM t1, rt0, t0;SELECT ALL ((CAST(rt0.c3 AS TEXT)) BETWEEN (COUNT(*)) AND (CAST(rt0.c2 AS NUMERIC))), (((rt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))OR(t0.c81)))) AND (((t0.c81 IN ())))), FIRST_VALUE(CASE t0.c81  WHEN rt0.c0 THEN rt0.c4 END COLLATE RTRIM) OVER (), SUM((rt0.c2 IN ())) OVER (), t0.c81 FROM rt0, t1, t0 LIMIT 2100701211 OFFSET 1725132461; -- 1ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3)))<=(LIKE(t1.c0, t0.c81, '0'))) FROM t0, t1 WHERE ((((((0.6434218295924616))<=(('0.6434218295924616')))) BETWEEN (((0x38c82e7f) BETWEEN (x'') AND (0.12075627950338552))) AND (CASE 0.9090387568513804  WHEN 0.2337594179386564 THEN 0.9729424693492263 END)));SELECT DISTINCT PERCENT_RANK() OVER ( ROWS (((- (rt0.c2))) NOT BETWEEN (((rt0.c3) ISNULL)) AND (rt0.c1 COLLATE BINARY)) PRECEDING EXCLUDE TIES) FROM t0, rt0 WHERE (0Xffffffffea1497d1); -- 0ms;
SELECT DISTINCT ((((rt0.c0)IS(rt0.c3)))IS NOT(((((((((t0.c81)AND(t0.c81)))AND(rt0.c3)))OR(rt0.c1)))AND(0.9170202692071034)))) FROM t1, rt0, t0 WHERE (((((-1678085972) BETWEEN ('ᘝ?i?^qR') AND ('-982100161'))) IS FALSE)); -- 1ms;
SELECT rt0.c0 FROM t0, rt0, t1; -- 0ms;
SELECT ALL (((- (rt0.c1)))-(((rt0.c2) ISNULL))) FROM t1, t0, rt0 WHERE (((CASE WHEN '595141720' THEN 'My' WHEN x'' THEN '&' WHEN NULL THEN -1813990517 ELSE 0Xfffffffffd4c77e9 END) NOT BETWEEN (CASE NULL  WHEN 't<' THEN -9.86549017E8 WHEN NULL THEN '' WHEN NULL THEN '1902469743' END) AND ((('1316115045') NOT BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT DISTINCT rt0.c0, CASE (((t0.c81, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c3, t1.c0)) AND ((rt0.c2, t0.c81, rt0.c4)))  WHEN ((t0.c81)*(t0.c81)) THEN ((0.23986861296884088)<<(rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END, ((COUNT(*)) IS FALSE), 762817825, (((rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c0))) AND ((rt0.c4))) FROM rt0, t1, t0 WHERE (((CHAR(NULL)) ISNULL)); -- 1ms;
SELECT ALL ((rt0.c0) NOT NULL) COLLATE BINARY, NULL, rt0.c2 FROM t1 LIMIT -944428262 OFFSET -1875918226;SELECT ((((NULL)OR(UPPER(DISTINCT rt0.c2))))OR((t0.c81 IN (rt0.c1)))), rt0.c1, ((((rt0.c2) NOT NULL)) IS FALSE) FROM t0 NOT INDEXED WHERE (CASE 'g'  WHEN x'' THEN 1e500 WHEN '2013455580' THEN NULL WHEN 0.8939804251249538 THEN 0.4289159839545499 ELSE NULL END COLLATE BINARY);SELECT DISTINCT ((CAST(t1.c0 AS TEXT))<=((rt0.c2 IN ()))), ((((rt0.c3) NOTNULL)) ISNULL), CASE ((NULL)OR(rt0.c0))  WHEN t1.c0 COLLATE BINARY THEN UPPER(rt0.c4) WHEN ((t1.c0) BETWEEN (NULL) AND (t1.c0)) THEN ((rt0.c2) NOTNULL) WHEN ((rt0.c4)<>(rt0.c2)) THEN CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END END FROM t0, t1;SELECT (((rt0.c4 IN ())) IS FALSE), x'', (((((rt0.c0))>=((rt0.c2)))) IS TRUE) FROM rt0, t1; -- 0ms;
SELECT DISTINCT MIN(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0))) FROM rt0, t0 WHERE ((((('Y_OT1h')/(1911201192)))|(CASE 3.88033936E8  WHEN '-1175520245' THEN NULL WHEN NULL THEN '978521193' WHEN -8.88170283E8 THEN 0.39597910028748506 ELSE 0.5017536576098142 END))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c1) IS FALSE))) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)|(rt0.c1)) AS NUMERIC), ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))||(((rt0.c4)-(rt0.c3)))), ((((rt0.c3)<=(t0.c81)))=(CAST('1900280173' AS INTEGER))) FROM rt0, t0 WHERE (CAST((x'' IN ()) AS INTEGER)); -- 0ms;
SELECT COUNT(TRIM(rt0.c3, t0.c81)) OVER (), LENGTH(((rt0.c4)/(t0.c81))), ((LENGTH(rt0.c4))+((((rt0.c2, rt0.c2, rt0.c4)) BETWEEN ((rt0.c1, rt0.c2, t1.c0)) AND ((NULL, rt0.c0, rt0.c0))))), (((((((rt0.c1)AND('476292688')))OR(rt0.c1)), (rt0.c0 IN (rt0.c4)), ABS(rt0.c2)))>(((+ (t1.c0)), ((rt0.c3)<(x'')), rt0.c4 COLLATE RTRIM))), ((((((rt0.c1)LIKE(rt0.c0)))AND((~ (0xffffffffd99f7af1)))))AND((+ (t0.c81)))) FROM t0, rt0;SELECT DISTINCT CAST(t1.c0 AS TEXT) FROM t1, t0, rt0 WHERE ((~ (CAST(0.559587443527508 AS TEXT)))); -- 0ms;
SELECT DISTINCT t0.c81, CASE ((rt0.c3)-(rt0.c1))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 ELSE 0.9787635335862618 END THEN rt0.c1 ELSE CAST(t0.c81 AS BLOB) END, (~ (t0.c81)) COLLATE NOCASE FROM rt0 INDEXED BY i35 ORDER BY (((rt0.c0)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((x''))))) AND ((((rt0.c4)<<(rt0.c1))))) DESC;SELECT DISTINCT (- (rt0.c0)) COLLATE RTRIM, COUNT(*), load_extension(CAST(rt0.c3 AS TEXT)) FROM rt0, t0, t1;SELECT DISTINCT (((+ (t1.c0))) NOT BETWEEN (t0.c81 COLLATE BINARY) AND (((0.9881349407913522) NOT NULL))) FROM rt0 WHERE (TRIM(((NULL) IS TRUE))) ORDER BY 0.09047009405434303 ASC, ((rt0.c1 COLLATE BINARY) IS FALSE)  NULLS FIRST, (- (t0.c81)) ASC;SELECT ALL CAST(((rt0.c3)%(rt0.c1)) AS TEXT) FROM t1 WHERE (CASE ((('rkd?v6')) NOT BETWEEN ((x'')) AND ((NULL)))  WHEN (0.6930137128430418 IN ('1533596062', '272489872')) THEN ((NULL) NOT NULL) END) LIMIT -449861801;SELECT DISTINCT (((((rt0.c1 IN ()))OR(CASE t0.c81  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)))OR(rt0.c3)) FROM rt0 WHERE (((CAST(NULL AS TEXT))*((~ (''))))) GROUP BY CASE WHEN (((rt0.c2))>=((rt0.c0))) THEN ((rt0.c2)LIKE(0.3325503880980587)) WHEN 0.40018757708292774 THEN rt0.c3 WHEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN (t1.c0 IN ('')) ELSE ((rt0.c4) NOTNULL) END, (((t0.c81)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END)) AND ((rt0.c3))), ((t1.c0 COLLATE NOCASE)%(((rt0.c2)|(rt0.c1))));SELECT ALL (~ (LOWER(rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT rtreenode(LIKELIHOOD(rt0.c2, 0.98332320535977), rt0.c1) FROM t0 GROUP BY UPPER(DISTINCT CAST(rt0.c0 AS INTEGER)) HAVING ((((- (rt0.c3))))>=(((~ (rt0.c4)))));SELECT DISTINCT (CASE '388033936'  WHEN rt0.c2 THEN rt0.c2 WHEN t1.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c3 WHEN t1.c0 THEN rt0.c3 WHEN rt0.c1 THEN '-1041460675' ELSE rt0.c1 END IN ()), ((TOTAL(rt0.c4))LIKE('-888170283')), FIRST_VALUE(('!+' IN ())) OVER () FROM rt0, t0 WHERE (((((('{}')) NOT BETWEEN ((NULL)) AND ((0.23469321683501487)))) NOT BETWEEN ((('cZ') IS FALSE)) AND (((((0.7567083206066475)OR('-1953799436')))OR(x'0b08'))))); -- 0ms;
SELECT AVG(((rt0.c2)IS NOT(rt0.c1))) FROM t1, rt0, t0 WHERE (CASE 0.5017536576098142  WHEN 0.5881781558579359 THEN ('-1430063351' IN ()) WHEN ((NULL) BETWEEN (NULL) AND (x'f211')) THEN (((('')OR(NULL)))OR('2090544774')) WHEN (~ (0.8051280559826822)) THEN (('140907110')IS NOT(0.950344227155613)) END); -- 0ms;
SELECT ((((((((CAST(rt0.c2 AS NUMERIC))AND(((rt0.c3)*(rt0.c2)))))OR(x'15d8')))OR(((rt0.c3)-(t0.c81)))))AND((~ (rt0.c1)))), (x'7e1b' IN (t1.c0 COLLATE NOCASE)), CASE WHEN ((rt0.c4)<<('1916817746')) THEN t1.c0 COLLATE NOCASE ELSE CAST(rt0.c0 AS INTEGER) END FROM t1 WHERE (CASE WHEN CASE '⳨l2\oꙐᖵD笆'  WHEN 0.9936329019869687 THEN '-1288670581' WHEN x'c15c' THEN 0.8126676650504269 WHEN NULL THEN x'' WHEN 209854723 THEN 0Xfffffffff6ff4eee WHEN '617907426' THEN x'' END THEN NULLIF(DISTINCT x'7247', NULL) WHEN CAST(1.245842545E9 AS TEXT) THEN ((0.8939804251249538)-(0.30723949157914476)) WHEN (((1316115045)) BETWEEN ((0X72d3551f)) AND ((NULL))) THEN CASE '1488216142'  WHEN 0.21626413664472788 THEN '1212991088' WHEN '-1665199414' THEN NULL WHEN 0.7130449235975599 THEN '0.3441839297415491' WHEN NULL THEN '' WHEN 0.12075627950338552 THEN '' ELSE 0.5062649596623103 END END);SELECT DISTINCT FIRST_VALUE(((((rt0.c4)IS NOT(x''))) BETWEEN ((('-2139706337') NOT BETWEEN (rt0.c3) AND (rt0.c2))) AND (CASE WHEN t0.c81 THEN t0.c81 ELSE rt0.c4 END))) OVER (), ((rt0.c4)/(rt0.c0)) COLLATE RTRIM, ((0.3075957549244457) NOTNULL) FROM t1, t0, rt0 WHERE (((0Xffffffffb0f72363 COLLATE BINARY) NOTNULL)) ORDER BY ((x'') BETWEEN ('{a 	i\n') AND (CASE rt0.c0  WHEN t0.c81 THEN rt0.c1 END))  NULLS FIRST LIMIT -233972074; -- 1ms;
SELECT ALL COUNT(((rt0.c2)&(rt0.c4))) OVER () FROM t0 WHERE (((0Xffffffffb3f8da43 COLLATE NOCASE)IS(0Xd7a95b4 COLLATE BINARY))) ORDER BY (((rt0.c2 IN ())) ISNULL)  NULLS LAST LIMIT 861339184;SELECT DISTINCT CUME_DIST() OVER (), TOTAL(((((((((t0.c81)OR(rt0.c1)))AND(t1.c0)))AND(t0.c81)))AND(rt0.c2))) FILTER(WHERE x'c3b36a42') OVER (), (+ (CAST(t0.c81 AS TEXT))) FROM rt0, t0, t1 WHERE ((' G唟*)r' IN ())); -- 0ms;
SELECT ALL CASE WHEN CASE rt0.c3  WHEN rt0.c2 THEN t1.c0 ELSE t0.c81 END THEN (rt0.c0 IN (rt0.c4)) WHEN ((NULL)OR(rt0.c3)) THEN (('')IS NOT(t0.c81)) WHEN (rt0.c0 IN (t1.c0)) THEN ((rt0.c4)<<(rt0.c4)) ELSE (- (rt0.c0)) END FROM rt0 WHERE (((((+ ('-944428262'))))>((TRIM(DISTINCT NULL)))));SELECT DISTINCT DATE(t0.c81, t0.c81, rt0.c2) COLLATE BINARY FROM rt0;SELECT DISTINCT (+ (HEX(rt0.c3))), CASE WHEN (((rt0.c4))<((rt0.c1))) THEN ((rt0.c1) NOT NULL) END, MIN((t1.c0 IN ())) FROM t0, t1;SELECT DISTINCT ((CASE WHEN 0.12448554596021666 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN t1.c0 END) BETWEEN (((rt0.c4)%(rt0.c1))) AND (NULLIF(DISTINCT rt0.c2, rt0.c0))) FROM t1, t0, rt0 WHERE (((~ (NULL)) IN ())); -- 0ms;
SELECT ((((((((((t1.c0)AND(rt0.c4)))AND(rt0.c4)))OR(t1.c0)))AND(t0.c81)))+(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))) FROM t1 LEFT OUTER JOIN rt0 ON ((x'') IS TRUE) WHERE (CASE WHEN (('-2014032788')GLOB(NULL)) THEN ((0xffffffffa4b5c837)=(x'')) ELSE ((0.19254273017712498) NOT BETWEEN (0X20e18ee4) AND (x'')) END);SELECT ((((COALESCE(DISTINCT rt0.c2, rt0.c0))OR(((rt0.c0)-(rt0.c3)))))OR((rt0.c0 IN (NULL)))) FROM t0, t1 WHERE (UNLIKELY('226137524') COLLATE BINARY);SELECT DISTINCT (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) IN ()), rt0.c3, (((rt0.c1, t0.c81, '|uME+pc緐')) BETWEEN ((rt0.c1, ((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)))AND(t0.c81)))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)), UNLIKELY(rt0.c1))) AND ((((rt0.c1)<<(rt0.c1)), ((((((((rt0.c3)OR(x'')))OR(rt0.c3)))AND(rt0.c4)))AND(t1.c0)), ((rt0.c2)|(t0.c81))))), (((('-574635479')IS NOT(t1.c0)))<((('GsWVFt''V') IS TRUE))), rt0.c1 FROM t0, rt0 NOT INDEXED;SELECT DISTINCT ((GROUP_CONCAT(581403886))IS(1458590455)) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((rt0.c4))) FROM t1;SELECT CASE ((((x'145a042f')OR(-979163482)))AND(t1.c0))  WHEN (rt0.c0 IN ()) THEN ((rt0.c1)&(t1.c0)) END FROM rt0 GROUP BY json_remove(((rt0.c3)<=(rt0.c3)), ((t0.c81)GLOB('-693041951')));SELECT DISTINCT (((((((rt0.c2)OR(t0.c81)))AND(rt0.c1))))<(((((rt0.c3, t1.c0, rt0.c4))<=((t0.c81, rt0.c3, rt0.c4)))))) FROM t0, rt0;SELECT (NOT (NULL)) FROM t1 NOT INDEXED, rt0; -- 0ms;
SELECT ((TYPEOF(rt0.c0))GLOB(TOTAL_CHANGES())) FROM t1, rt0, t0 WHERE (CASE ((x'') BETWEEN (0.3821495822945239) AND (x'030a'))  WHEN '\r嗘nd[b⬚' COLLATE NOCASE THEN ((0.2327730385715615)<(NULL)) WHEN ((x'3203')%(x'')) THEN (((NULL))>=((x'963e'))) WHEN (('') NOTNULL) THEN (('507824664')/(0.33284458627148694)) ELSE (~ (NULL)) END); -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE)) NOTNULL), ABS((('-599342775') BETWEEN (x'8435') AND (t0.c81))), (+ (((rt0.c2)||(rt0.c2)))) FROM t0, rt0, t1 NOT INDEXED WHERE (x''); -- 0ms;
SELECT DISTINCT (- (((t1.c0) ISNULL))) FROM t1, rt0 INDEXED BY i35, t0 WHERE ((NOT (CAST(7.37894646E8 AS INTEGER))));SELECT ALL ((((((t0.c81)AND(t1.c0)))AND(rt0.c0))) NOT BETWEEN ((~ (rt0.c2))) AND ((+ (t0.c81)))) FROM t1, rt0 INDEXED BY i75, t0 WHERE (CAST((('717192281')AND(x'37aa')) AS REAL));SELECT ((((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c3)*(t0.c81)))))OR(CAST(rt0.c0 AS BLOB))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c81))))))AND(NULL)) FROM rt0, t0, t1 ORDER BY ((rt0.c4)||(t1.c0)) COLLATE NOCASE DESC  NULLS FIRST; -- 0ms;
SELECT FIRST_VALUE(CASE ((((rt0.c2)OR(t0.c81)))AND(rt0.c1))  WHEN rt0.c0 THEN ((rt0.c2) ISNULL) WHEN ((rt0.c1) ISNULL) THEN CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c1 END) OVER () FROM rt0, t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((('rx#H5,&R,')) BETWEEN ((rt0.c1)) AND ((t1.c0)))) NOT BETWEEN (((rt0.c4)*(rt0.c3))) AND (TIME(rt0.c4, '(7WmTe', rt0.c3, t0.c81, x''))) FROM rt0 WHERE (json_object((0Xffffffffd60b382c IN ('0.9649416691824982')), ((x'20b9') BETWEEN (0.8272834381603013) AND (0X4321d3d)), NULL COLLATE NOCASE, ((0.0058412162745237195)%(-1568260454))));SELECT DISTINCT ((CASE rt0.c4  WHEN t0.c81 THEN t1.c0 END) NOT NULL) FROM t1, t0, rt0; -- 0ms;
SELECT (((t1.c0 IN ())) NOTNULL), ((CAST(rt0.c1 AS TEXT))IS('-1314425551')), ABS(((rt0.c4) BETWEEN (rt0.c0) AND (t1.c0))) FROM t0, rt0;SELECT DISTINCT CAST(((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)))OR(t0.c81)) AS INTEGER) FROM t0;SELECT ((rt0.c0)*(rt0.c0 COLLATE RTRIM)) FROM t1, t0, rt0; -- 0ms;
SELECT CASE WHEN ((rt0.c2)%(t1.c0)) THEN (rt0.c4 IN (t0.c81)) WHEN (NULL IN ()) THEN rt0.c1 COLLATE RTRIM WHEN ((((((((rt0.c2)AND(t0.c81)))OR(rt0.c3)))OR(rt0.c1)))OR(t1.c0)) THEN (rt0.c2 IN (rt0.c3)) END FROM t1, t0 WHERE (((((NULL)/(x'')))||((~ (x'b10c')))));SELECT DISTINCT AVG(rt0.c4) OVER ( ORDER BY rt0.c1 COLLATE NOCASE  NULLS LAST, ((((rt0.c2)|(t1.c0))) BETWEEN ((((rt0.c2))=((rt0.c1)))) AND ((rt0.c1 IN ()))) DESC ROWS  UNBOUNDED PRECEDING), FIRST_VALUE(CASE (t0.c81 IN (t0.c81))  WHEN json_remove(t0.c81, t0.c81, x'', t0.c81) THEN UNLIKELY(t0.c81) END) OVER (), ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 END) ISNULL) FROM t0 GROUP BY CASE ((rt0.c4)>=(rt0.c4))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4)IS NOT(rt0.c0)) END HAVING COUNT(*);SELECT DISTINCT CASE WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)) THEN (rt0.c3 IN ()) ELSE (((t0.c81, t1.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c4)) AND ((t1.c0, rt0.c3, rt0.c4))) END, ((((rt0.c4)>=(t0.c81)))<<((rt0.c0 IN (rt0.c4)))), ((CAST(rt0.c2 AS REAL)) NOT NULL), rtreenode(CASE WHEN rt0.c1 THEN t0.c81 WHEN t0.c81 THEN NULL WHEN -479601333 THEN rt0.c1 ELSE rt0.c1 END, highlight(rt0.c0, t0.c81, rt0.c1, rt0.c1)), ((NULL) ISNULL) FROM rt0;SELECT CASE WHEN (NOT (t1.c0)) THEN CAST(rt0.c1 AS REAL) ELSE COUNT(t0.c81) END FROM rt0;SELECT DISTINCT ((CAST(-2010607708 AS INTEGER))IS NOT((NOT (t0.c81)))), ((CAST(rt0.c4 AS NUMERIC)) NOTNULL), (- ((rt0.c3 IN (rt0.c2)))) FROM t0 WHERE ((- (NULL)) COLLATE BINARY) LIMIT -124280865;SELECT ALL ((((t0.c81)!=(rt0.c3)))-((((rt0.c0))<((rt0.c0))))) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT COUNT(UNICODE(rt0.c2)) OVER () FROM t0, t1, rt0 WHERE (CAST((((x''))>=((x'63e9'))) AS BLOB)); -- 0ms;
SELECT DISTINCT CASE ((((rt0.c2)AND(NULL)))AND(t1.c0))  WHEN CASE rt0.c2  WHEN rt0.c3 THEN t1.c0 END THEN '-1439006692' ELSE MIN(t0.c81) END FROM t0;SELECT DISTINCT CHAR(t1.c0) FROM t0, t1 WHERE ('{}'); -- 1ms;
SELECT IFNULL(DISTINCT (rt0.c2 IN ()), rt0.c0 COLLATE NOCASE), ((((t0.c81) NOT NULL))LIKE((((t0.c81))<>((rt0.c1))))), NTILE((((((- (rt0.c3)))AND(((t0.c81) IS TRUE))))OR((rt0.c4 IN (rt0.c4))))) OVER () FROM t0, t1, rt0 WHERE (('棩k-' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL (((((((t1.c0, t0.c81, 0.3212190523263386))>((rt0.c0, '\rz', '-2012810888'))))AND(SUM(rt0.c4))))OR((((t0.c81)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))) FROM t0 WHERE ((- (((((0.04216491159817315)AND(1936643811)))AND(0.8015364607720309))))) UNION ALL SELECT ALL t1.c0 FROM rt0, t1, t0;SELECT ((((rt0.c4)OR(((rt0.c1)*(rt0.c1)))))AND((~ (rt0.c3)))), ((((((rt0.c3) ISNULL))AND(((((rt0.c4)AND(t0.c81)))OR(rt0.c4)))))AND(CAST(rt0.c1 AS REAL))), rt0.c0 FROM rt0, t1, t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (t0.c81) AND (rt0.c1)))IS(CASE rt0.c4  WHEN t1.c0 THEN rt0.c3 ELSE rt0.c0 END)) FROM t1;SELECT DISTINCT CASE CASE WHEN rt0.c3 THEN rt0.c0 END  WHEN (0.2062816703857262 IN ()) THEN CAST(rt0.c3 AS BLOB) END FROM rt0; -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (MIN(t0.c81))) FROM rt0 WHERE (COALESCE(DISTINCT CASE NULL  WHEN NULL THEN '0S' WHEN NULL THEN -1772430177 WHEN NULL THEN -1932213959 ELSE x'' END, (((x'', x'c4e81f4c', ''))>((NULL, NULL, 0.3075957549244457)))));SELECT ((((rt0.c3)>=(rt0.c1))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c3) AND (t1.c0))) AND (((rt0.c3) NOT BETWEEN (t1.c0) AND (rt0.c1)))) FROM rt0, t1 WHERE (((((((((4.36973688E8)AND('0.7868760238639265')))AND(x'66bb')))OR((('\n') BETWEEN (x'') AND (0X420ea5c9)))))OR((((NULL, 0.8517831444307506, 1434975387, x'cfc1', NULL))!=(('*I횝G]', x'c7e7', x'', '', '542307182')))))); -- 0ms;
SELECT ALL DATETIME(ROUND(t0.c81, '-342659395'), (- (t0.c81)), ((x'') NOTNULL)), NULL, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c81)))) NOT BETWEEN (((rt0.c4)*(rt0.c4))) AND (CAST(t1.c0 AS INTEGER))) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT NULL)) ISNULL), ((CAST(rt0.c0 AS TEXT))<>(rt0.c3 COLLATE BINARY)), ((rt0.c2)%(((rt0.c3)=(t1.c0)))) FROM rt0, t1 LIMIT 563113733; -- 0ms;
SELECT DISTINCT -1e500 COLLATE NOCASE FROM rt0, t0, t1 LIMIT 1423281752 OFFSET 1212991088; -- 0ms;
SELECT ALL HEX(rt0.c2 COLLATE NOCASE) FROM t1 WHERE (CASE WHEN (('') IS FALSE) THEN ((x'')>=(1916817746)) END) GROUP BY LOWER(t0.c81) COLLATE BINARY COLLATE NOCASE HAVING (COUNT(*) IN ((t0.c81 IN ()), x'e213')) ORDER BY t0.c81 DESC;SELECT DISTINCT ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))>((((rt0.c3))>((rt0.c0))))), ((((((((((rt0.c0) IS TRUE))AND(((rt0.c4)|(rt0.c1)))))OR(((1146097338)-(rt0.c4)))))AND(((rt0.c3)>>(t1.c0)))))OR(((rt0.c0)%(t1.c0)))), rt0.c4 FROM rt0, t0;SELECT DISTINCT SUM(((t1.c0)*(rt0.c0))) OVER (), CASE t0.c81  WHEN ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c2)) THEN (~ (rt0.c2)) WHEN LIKELIHOOD(rt0.c2, 0.8781085409608824) THEN (rt0.c2 IN ()) WHEN load_extension(NULL) THEN (rt0.c2 IN ()) END, 0.9899008338234784 FROM t1, t0, rt0 WHERE (('' IN (0.9787635335862618)) COLLATE BINARY) GROUP BY (((rt0.c1 IN (rt0.c1))) BETWEEN (CAST(t0.c81 AS REAL)) AND (((t0.c81)|(rt0.c0)))), CAST(CASE WHEN '1454943262' THEN rt0.c1 END AS NUMERIC), ((QUOTE(rt0.c4)) NOT NULL); -- 0ms;
SELECT DISTINCT (~ (CASE WHEN rt0.c4 THEN rt0.c0 ELSE t1.c0 END)), t1.c0, ((((((((MIN(rt0.c0))OR(t1.c0 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END)))AND(((((rt0.c0)AND(t1.c0)))AND(rt0.c2)))))OR(COUNT(*))), (+ ('-1394205703')), (NOT (((rt0.c3) IS TRUE))) FROM t1, rt0, t0 WHERE (CASE WHEN (((0Xffffffff9cbf12ca)) NOT BETWEEN (('yc{9v|f6')) AND ((x'906a'))) THEN ((x'')GLOB(0x2b13a69c)) WHEN (~ (5.48175047E8)) THEN (('-801141435') NOT BETWEEN ('0.5904401346701905') AND (2.12645431E9)) WHEN 0x14fb948 COLLATE BINARY THEN ((x'79dc')|('z?2v')) ELSE (('%E')IS NOT(NULL)) END) ORDER BY CAST(rt0.c1 AS INTEGER) DESC; -- 0ms;
SELECT DISTINCT ((((x'')AND(((((t0.c81)AND(rt0.c2)))AND(rt0.c2)))))AND(CAST(t0.c81 AS TEXT))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((rt0.c4)OR(((rt0.c0) ISNULL))) FROM rt0, t0 WHERE (LOWER(DISTINCT (- ('1789315968')))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c81)IS(rt0.c0)) THEN ((t1.c0) NOT NULL) END FROM t0, t1, rt0 WHERE ((((((('g') IS TRUE))OR((x'' IN ('-105805205', x'')))))AND((x'eb11' IN ())))); -- 0ms;
SELECT ALL (((NULL, rt0.c1, t0.c81)) NOT BETWEEN ((((rt0.c1) NOT NULL), rt0.c1, IFNULL(DISTINCT t0.c81, NULL))) AND ((((((((((((((rt0.c3)OR(1.2425269E7)))OR(rt0.c0)))AND(t0.c81)))OR(rt0.c2)))AND(t0.c81)))AND(rt0.c0)), ((rt0.c3) IS FALSE), ((t1.c0) IS FALSE)))) FROM t0 WHERE (((((-229268480 IN ())))>=(((((x'')) NOT BETWEEN ((NULL)) AND ((-944428262)))))));SELECT DISTINCT TRIM(DISTINCT (- (rt0.c2)), ((t1.c0)>(t1.c0))), GROUP_CONCAT(((t1.c0)=(rt0.c3))), (((((rt0.c0))>=((rt0.c3))))||(((((NULL)OR(1533596062)))AND(rt0.c4)))) FROM t0, t1 WHERE (CASE WHEN ((0x4945c90d) NOT NULL) THEN (NULL IN (NULL, '')) ELSE (((('142021396')OR('-1275536829')))OR('-1e500')) END) ORDER BY ((((((0.6335864001965844)AND(t0.c81)))AND(t1.c0)))=(((rt0.c2) IS TRUE)))  NULLS LAST LIMIT -588793825 OFFSET -139608018;SELECT DISTINCT (((rt0.c1)) NOT BETWEEN ((t1.c0)) AND (((NOT (rt0.c0))))) FROM t1, rt0, t0 WHERE (((0.05338223661992447 COLLATE NOCASE)LIKE(RTRIM(1.271234495E9)))) GROUP BY (NOT ((((rt0.c0, t1.c0, rt0.c3))!=((rt0.c0, rt0.c3, rt0.c1))))), (((((rt0.c4)>>(t1.c0)), ((t1.c0)>=(rt0.c3)), (NOT (t1.c0))))!=(((((rt0.c3)) BETWEEN ((t1.c0)) AND ((rt0.c3))), rt0.c4 COLLATE BINARY, rt0.c3))), ((((LTRIM(rt0.c0))OR(CASE WHEN t0.c81 THEN rt0.c4 ELSE t0.c81 END)))AND((- (rt0.c3)))); -- 0ms;
SELECT ALL ((((((((rt0.c1 COLLATE NOCASE)OR(((((((((rt0.c0)OR(rt0.c0)))AND(2.72489872E8)))OR(rt0.c1)))AND(t0.c81)))))AND((('-248926963')AND(t0.c81)))))OR((((rt0.c1, rt0.c2, rt0.c4))==((rt0.c0, rt0.c3, rt0.c1))))))OR((- (rt0.c1)))) FROM t0, rt0, t1 WHERE (((((((0xffffffffe6ab1ec9)OR(0X6ec4f919)))AND(0.9004598579280461 COLLATE RTRIM)))OR(((NULL) BETWEEN (0X7c752033) AND (NULL))))) ORDER BY ((TYPEOF(t1.c0)) NOT BETWEEN (CASE WHEN 0.8627017258930844 THEN x'' END) AND (((((((((rt0.c1)AND(t1.c0)))OR(rt0.c0)))OR(t0.c81)))AND(rt0.c3)))); -- 0ms;
SELECT DISTINCT (((((t0.c81)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))LIKE(rt0.c1 COLLATE BINARY)), AVG(CAST(rt0.c0 AS REAL)) OVER (), CAST(t1.c0 AS REAL) COLLATE NOCASE, (((((((((((((t0.c81 IN (rt0.c0)))AND((((rt0.c3))>((rt0.c3))))))OR(((rt0.c2) NOT BETWEEN (t0.c81) AND (t1.c0)))))AND((+ (t0.c81)))))AND(rt0.c1 COLLATE RTRIM)))AND(TOTAL(t1.c0))))AND(((rt0.c3)<=(rt0.c0)))), (((((t1.c0)IS(rt0.c4)), ((((t1.c0)OR(rt0.c4)))AND(rt0.c1)), ((rt0.c2) NOTNULL)))>((CAST(rt0.c4 AS INTEGER), ((t0.c81) IS TRUE), (rt0.c3 IN ())))) FROM rt0, t1, t0; -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c3) NOT NULL) THEN (~ (t0.c81)) ELSE t0.c81 COLLATE BINARY END, (((rt0.c4 IN ()))-(((rt0.c1) NOT NULL))), CASE IFNULL(t1.c0, rt0.c1)  WHEN COUNT(t0.c81) THEN (t1.c0 IN (t1.c0)) END, (((~ (rt0.c3))) IS FALSE), ((((((((COUNT(rt0.c2))AND(rt0.c1 COLLATE RTRIM)))AND(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END)))OR(CASE rt0.c2  WHEN t0.c81 THEN rt0.c2 ELSE rt0.c2 END)))AND(UNLIKELY(DISTINCT rt0.c0))) FROM rt0, t0;SELECT t1.c0 FROM t1, t0; -- 0ms;
SELECT HEX(DISTINCT NULL) FROM t0, rt0 WHERE ((('wue1/''')||('1859960303' COLLATE RTRIM))) GROUP BY SQLITE_COMPILEOPTION_GET(((t0.c81)<=(rt0.c2))); -- 0ms;
SELECT ALL CASE COUNT(0.9095899964808292)  WHEN CAST(rt0.c1 AS TEXT) THEN TRIM(t1.c0) ELSE ((rt0.c1) NOTNULL) END, UPPER(DISTINCT load_extension(t1.c0, x'')), ((((rt0.c3)<<(rt0.c0)))IS(((rt0.c3) NOTNULL))) FROM rt0, t1, t0 WHERE (LENGTH(((x'')/(NULL))));SELECT ((rt0.c3) NOTNULL) COLLATE RTRIM FROM t0, rt0 INDEXED BY i35;SELECT DISTINCT '2091552943' FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c4)>=(rt0.c4))  WHEN (t1.c0 IN ()) THEN ((((((((rt0.c1)AND(rt0.c3)))OR(t1.c0)))OR(rt0.c1)))AND(rt0.c4)) ELSE COUNT(*) END, CASE t1.c0 COLLATE NOCASE  WHEN -1650144239 THEN rt0.c2 COLLATE RTRIM ELSE rt0.c4 END, (((rt0.c3, x'8f29', t1.c0, rt0.c2, rt0.c3)) BETWEEN ((((rt0.c2) IS FALSE), ((((t0.c81)AND(t1.c0)))AND(rt0.c0)), ((rt0.c0) IS TRUE), ((((rt0.c1)AND(t1.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE))) AND ((MIN(rt0.c2), ((rt0.c4)-(NULL)), t0.c81, CAST(rt0.c0 AS NUMERIC), rt0.c0))) FROM t0 WHERE ((((- ('1021720198'))) NOT BETWEEN (CASE WHEN '*now+' THEN '>' END) AND (((NULL) NOT BETWEEN (x'') AND ('-229268480')))));SELECT ALL 1.557701415E9 FROM t0, rt0, t1 WHERE (CAST(((0.6422914325384937) NOT BETWEEN (NULL) AND (NULL)) AS TEXT)); -- 0ms;
SELECT RANK() OVER ( ORDER BY ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 WHEN t1.c0 THEN t0.c81 WHEN NULL THEN rt0.c2 ELSE NULL END) NOT BETWEEN (UNLIKELY(t1.c0)) AND (t1.c0)) ASC, (~ (CAST(rt0.c3 AS BLOB))) ASC  NULLS FIRST), TOTAL((rt0.c3 IN ())), ((t0.c81) NOT BETWEEN (0.6160394013623142) AND (rt0.c1)) COLLATE NOCASE FROM t1, t0, rt0 WHERE (CAST(x'' AS REAL) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c1, t0.c81)) NOT BETWEEN ((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0)), t1.c0, ((rt0.c4)%(rt0.c3)))) AND (((((t0.c81)) BETWEEN ((t0.c81)) AND ((rt0.c0))), ((rt0.c1)-(rt0.c0)), TYPEOF(rt0.c4)))) FROM rt0, t1, t0 WHERE (CASE (x'' IN ())  WHEN ((((((((0.28023003235660515)OR('')))AND('-2130498392')))AND('-570882872')))AND(0.7554806222772144)) THEN CAST('-150672011' AS INTEGER) END); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(0xffffffff8ab88a1f)))OR(t0.c81))) NOT NULL) FROM t0, t1 NOT INDEXED, rt0 ORDER BY ((0.01930106208589366)*(((t1.c0)>(rt0.c1)))) ASC, ((CAST(rt0.c0 AS NUMERIC)) NOTNULL)  NULLS FIRST, '7\Y87껧'  NULLS FIRST; -- 0ms;
SELECT DISTINCT LEAD(((rt0.c0 IN ()) IN ()), ((rt0.c4)GLOB((rt0.c3 IN ()))), ((((rt0.c4)OR(rt0.c3)))/(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))OR(-957185247)))AND(rt0.c2))))) OVER () FROM rt0 ORDER BY ((((rt0.c3)>(rt0.c1))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c81)))) AND (((rt0.c3)%(rt0.c1)))) ASC, CASE WHEN (rt0.c1 IN ()) THEN ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c1)) ELSE CASE rt0.c3  WHEN t0.c81 THEN rt0.c2 ELSE rt0.c0 END END DESC  NULLS FIRST, ((UPPER(DISTINCT t0.c81)) BETWEEN (x'') AND (IFNULL(rt0.c1, t0.c81)));SELECT DISTINCT t1.c0 FROM t1, rt0 LIMIT 2126454310; -- 0ms;
SELECT DISTINCT COUNT(t0.c81) OVER (), ((((CAST(rt0.c0 AS TEXT))OR(0x54e254ca)))OR(MAX(t1.c0))), SUM(((((t1.c0)OR(rt0.c2)))AND(rt0.c1))) FROM t1, rt0, t0 NOT INDEXED WHERE ((- ((((((((('-1825351139')AND(0.7426802111725417)))AND(x'ee87')))OR(x'')))OR(NULL))))); -- 0ms;
SELECT FIRST_VALUE(t1.c0) OVER () FROM t1 WHERE (((((CASE WHEN '糇m>G/' THEN NULL ELSE 0.058956759277497106 END)AND('' COLLATE RTRIM)))OR((- (x''))))) ORDER BY (NOT (((rt0.c1) NOTNULL))) DESC;SELECT DISTINCT ((((rt0.c0, rt0.c4, t0.c81))<((rt0.c2, rt0.c3, rt0.c3))) IN ()) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT (t0.c81 IN ()) FROM rt0 WHERE (((GLOB(0.9700675425495519, x'')) NOT NULL)); -- 0ms;
SELECT DISTINCT SUM(((rt0.c3)||('2022145645'))) FILTER(WHERE t1.c0) OVER () FROM rt0, t1 WHERE (((CAST(NULL AS BLOB))-(CASE WHEN x'' THEN 0.30654500418961417 WHEN '' THEN '' WHEN 'SEq1,' THEN 0X11e79a7 ELSE 0.8517831444307506 END))); -- 0ms;
SELECT ALL LAG(x'', CASE (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN rt0.c0 THEN (NOT (rt0.c1)) END, ((~ (0.0027572179596736524)) IN ())) OVER ( ORDER BY CASE WHEN UPPER(rt0.c2) THEN rt0.c4 END DESC, CAST(CASE t0.c81  WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN t0.c81 ELSE rt0.c4 END AS NUMERIC) DESC), TOTAL_CHANGES(), LAG(((((rt0.c3 IN ()), rt0.c3 COLLATE RTRIM, rt0.c0))>=((CAST(rt0.c3 AS BLOB), x'', ((rt0.c2) ISNULL)))), COALESCE(DISTINCT ((rt0.c2)!=('1496557878')), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))), rt0.c4 COLLATE RTRIM) OVER () FROM rt0, t1, t0 GROUP BY (((((((((((('M挝')OR(((rt0.c2)=(rt0.c4)))))AND(((rt0.c4) NOT NULL))))OR(CASE rt0.c3  WHEN t0.c81 THEN rt0.c2 ELSE rt0.c0 END)))OR(t1.c0)))OR(CAST(t1.c0 AS REAL))))OR(CAST(t0.c81 AS NUMERIC))); -- 0ms;
SELECT DISTINCT rt0.c2 FROM t0 WHERE (0.3212190523263386);SELECT (((+ (rt0.c0))) BETWEEN (rt0.c0) AND (rt0.c1 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC))>>(((rt0.c1) NOT BETWEEN (0.8086736111343344) AND (rt0.c3)))), UPPER(DISTINCT CASE WHEN rt0.c4 THEN rt0.c1 ELSE t0.c81 END), ((NOT (rt0.c3)) IN ()) FROM rt0, t1, t0 WHERE ((((('1526113653') NOT BETWEEN ('702198471') AND (NULL)))LIKE(x'' COLLATE NOCASE))); -- 1ms;
SELECT AVG(1.424118986E9) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((t0.c81)<>(CASE WHEN rt0.c4 THEN rt0.c4 ELSE t0.c81 END)) FROM rt0, t1;SELECT ALL t0.c81 FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT ((CASE '1872445528'  WHEN t1.c0 THEN t1.c0 ELSE t0.c81 END)GLOB(NULL)) FROM t0, t1, rt0 GROUP BY LIKELY(rt0.c3) LIMIT 423234940 OFFSET -1186638631; -- 0ms;
SELECT ALL (- (((t1.c0)AND(rt0.c4)))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3 COLLATE BINARY)AND(((rt0.c0) IS TRUE))))AND('855943885')), ((((t0.c81) NOT NULL))IS NOT('-306228734')), ((CASE WHEN t0.c81 THEN rt0.c1 END) NOT BETWEEN (((((rt0.c2)AND(rt0.c4)))OR(t0.c81))) AND (UPPER(rt0.c2))) FROM rt0 LIMIT 190348874;SELECT DISTINCT NULL FROM t0, t1, rt0 WHERE ((- ((((-4.07289387E8)) BETWEEN ((x'')) AND (('2065065372')))))); -- 0ms;
SELECT DISTINCT (+ (((((rt0.c3)AND(rt0.c0)))OR(x'')))) FROM rt0, t0 WHERE (CAST((('-1125854257')>=(-249208035)) AS NUMERIC)); -- 0ms;
SELECT ALL (((+ (rt0.c0))) IS TRUE) FROM t1, t0;SELECT DISTINCT CASE (((rt0.c2, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c1, '-157518688')))  WHEN rt0.c1 COLLATE NOCASE THEN MIN(rt0.c1) ELSE CAST(rt0.c4 AS REAL) END FROM rt0, t0 NATURAL JOIN t1 WHERE (((((x'5329') BETWEEN (0.2900737335290241) AND ('0.515029256525088'))) IS TRUE)); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT COUNT(t1.c0)) FROM rt0 WHERE ((((0.6725324619855965)) NOT BETWEEN ((((('', NULL, NULL)) BETWEEN ((x'', '_EWSL~#\l', 0.3821495822945239)) AND (('m挝', 'Bv]', x''))))) AND ((-999000584))));SELECT ALL FIRST_VALUE(LIKELIHOOD(rt0.c0, 0.5958969517748802) COLLATE RTRIM) OVER ( ROWS t0.c81 PRECEDING EXCLUDE TIES) FROM rt0, t1, t0 WHERE ((((((-719530729) NOTNULL)))<=((TRIM(0.3202218476564811)))));SELECT DISTINCT CASE WHEN ((rt0.c0)%(rt0.c3)) THEN 0.41448406831379614 END, (json_patch(t1.c0, rt0.c3) IN ()), LAG(rt0.c0, (NOT (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN -1.568260454E9 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)), (((TRIM(rt0.c4)))>=((((0.589532074131478) BETWEEN (rt0.c4) AND (rt0.c2)))))) OVER ( PARTITION BY CASE WHEN '-1923750338' COLLATE NOCASE THEN (((rt0.c2))=((rt0.c1))) WHEN ((x'') BETWEEN (rt0.c4) AND (x'491c')) THEN t0.c81 COLLATE RTRIM WHEN (- (rt0.c3)) THEN (t1.c0 IN ()) ELSE NULL END, CAST(rt0.c1 AS REAL) ROWS  UNBOUNDED PRECEDING), (((rt0.c4, rt0.c1, t0.c81)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((t0.c81, rt0.c0, t0.c81))) COLLATE NOCASE COLLATE BINARY, ((MAX(rt0.c4)) NOT BETWEEN (rt0.c1) AND (((((t0.c81)OR(t0.c81)))AND(t1.c0)))) FROM rt0 WHERE (((NULL)|(NULL)) COLLATE BINARY);SELECT DISTINCT ((((CASE rt0.c4  WHEN t1.c0 THEN rt0.c3 ELSE rt0.c4 END)OR((((t1.c0, rt0.c1, t0.c81))>=((0.7278347097621864, rt0.c3, rt0.c0))))))OR(CAST(rt0.c3 AS REAL))), ((((rt0.c3) BETWEEN (rt0.c1) AND (t0.c81)))<(rt0.c2 COLLATE NOCASE)), 0.42930798381056723 COLLATE RTRIM, TRIM(DISTINCT ((((((((((((rt0.c1)AND(rt0.c4)))OR(t1.c0)))OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4))), ((MIN(t1.c0)) BETWEEN ((+ (rt0.c1))) AND (CAST(rt0.c1 AS INTEGER))) FROM t0 WHERE (ABS(DISTINCT CAST('-129408937' AS INTEGER))) GROUP BY (((((t1.c0)AND(0.8891115422633952)))AND(rt0.c0)) IN ()) HAVING TRIM(rt0.c4, rt0.c3) COLLATE RTRIM;SELECT DISTINCT t0.c81 FROM t0, rt0, t1 WHERE (NULL) ORDER BY (json_type(rt0.c1) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((t1.c0 IN ()) IN ()) FROM rt0, t0 WHERE (CAST((- (0.3599074187705372)) AS TEXT)); -- 0ms;
SELECT DISTINCT (((rt0.c4) IS FALSE) IN ()) FROM t1 WHERE (TRIM(DISTINCT 0xfffffffffdccca70, 0Xffffffffb9eefc0b) COLLATE BINARY) ORDER BY ((rt0.c0) IS TRUE) ASC, (NOT (((t1.c0) BETWEEN (rt0.c4) AND (t0.c81)))) DESC;SELECT ALL ((((x'')OR(rt0.c3)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (x'')))) FROM t1;SELECT DISTINCT (((((t1.c0))>=((rt0.c4)))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))AND(t0.c81)))) FROM t0, rt0, t1 WHERE ((- (((NULL)>(x''))))); -- 0ms;
SELECT DISTINCT CAST((((t1.c0)) NOT BETWEEN ((t0.c81)) AND ((t0.c81))) AS BLOB) FROM t1, rt0, t0 WHERE (((json_insert(0.21684994110466316, '0.23986861296884088', '-1715068815'))>(((((x'')AND(NULL)))OR(0.8456496204531233)))));SELECT ALL (CHANGES() IN ()) FROM t1, t0 WHERE ((NOT (0x7802e4dc))); -- 0ms;
SELECT ALL (- ((- (t1.c0)))), CASE WHEN '-1041460675' THEN ((t0.c81) IS TRUE) ELSE 7.11302931E8 END, 0.3724208872299849 FROM t1 WHERE (((RTRIM(NULL)) BETWEEN (CASE NULL  WHEN NULL THEN x'' ELSE 'R詓' END) AND ((('12425269')|(NULL)))));SELECT (((rt0.c1 IN ()))!=(t0.c81)), CAST(CASE WHEN rt0.c1 THEN t0.c81 WHEN rt0.c4 THEN t0.c81 WHEN t0.c81 THEN rt0.c1 END AS REAL), (((((NOT (rt0.c1)))AND((((t0.c81))>((rt0.c4))))))AND((((t0.c81)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1))))) FROM t1 WHERE (CASE ((((((((NULL)OR(0.5720545644302977)))OR(NULL)))OR(0.6460087568521614)))OR(x''))  WHEN CAST(-5750167 AS TEXT) THEN (- (0.594074537618919)) END);SELECT ALL CASE WHEN ((rt0.c0) BETWEEN ('p㟘)[le') AND (rt0.c1)) THEN ((t1.c0)/(rt0.c4)) ELSE rt0.c1 END, LIKE(((rt0.c2)GLOB(rt0.c4)), (+ (t1.c0))), ((x'' COLLATE NOCASE)&(((((1.891479271E9)OR(rt0.c3)))OR(rt0.c0)))) FROM t0;SELECT DISTINCT CAST(CAST(t1.c0 AS NUMERIC) AS TEXT) FROM t0 WHERE (CAST(((0.30240506473270123) ISNULL) AS INTEGER)) INTERSECT SELECT CASE WHEN rt0.c3 COLLATE BINARY THEN ((t0.c81) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN (~ (t0.c81)) THEN COUNT(*) WHEN ((rt0.c0)OR(rt0.c1)) THEN (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, t1.c0)) AND ((rt0.c3, rt0.c0, t0.c81))) END FROM t1 LIMIT -2082254703;SELECT DISTINCT '猀LuL', LIKELIHOOD(DISTINCT 0.7003989036182138, 0.9795806618693471), ((t1.c0 COLLATE RTRIM)IS(AVG(rt0.c3))) FROM t0, t1;SELECT ALL MIN(COUNT(t1.c0 COLLATE NOCASE)), (~ ((rt0.c4 IN ()))), (- ((((rt0.c3))>=((rt0.c4))))) FROM t1, rt0, t0;SELECT ALL COUNT(((rt0.c2)>>(rt0.c3))) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c3) NOT NULL))AND((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))))))OR('-150672011')) FROM t1, t0, rt0 WHERE (CAST((('-1442354180')/(NULL)) AS REAL)) ORDER BY ((((rt0.c3)>=(rt0.c2))) BETWEEN (CAST(rt0.c0 AS BLOB)) AND ((+ (0.5011835934896497)))), ((((rt0.c2) IS TRUE))|(((rt0.c0) IS TRUE)))  NULLS FIRST; -- 0ms;
SELECT ((('') BETWEEN (t0.c81) AND (-1.517538806E9)) IN ()) FROM rt0 WHERE (CAST((('-1442682660')-(x'')) AS BLOB)) GROUP BY ((CASE WHEN 988719052 THEN 0.9848523951834786 WHEN t1.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 END) ISNULL) HAVING ((((((((t0.c81)OR(t0.c81)))OR(SQLITE_SOURCE_ID())))OR(rt0.c2 COLLATE RTRIM)))OR(COUNT(*)));SELECT DISTINCT LIKELY(DISTINCT ((t0.c81) NOT BETWEEN (0.5635784805031504) AND (rt0.c3))), ((((((((((t0.c81)%(rt0.c4)))OR('-407142511')))OR(LOWER(DISTINCT rt0.c2))))AND(UNLIKELY(rt0.c3))))OR(rt0.c4)), (- ((+ (rt0.c1)))) FROM t0, rt0, t1 GROUP BY (((rt0.c4 IN (rt0.c1)))|(CAST(rt0.c0 AS TEXT))), ((((t1.c0)<<(rt0.c2))) BETWEEN (((((rt0.c0)OR(t1.c0)))OR(rt0.c0))) AND (rt0.c1)), CASE WHEN CAST(t1.c0 AS NUMERIC) THEN (- (t1.c0)) END HAVING (((rt0.c0 IN (rt0.c0)))GLOB((((t0.c81)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) ISNULL) AS TEXT), SUM((((rt0.c0))>=((rt0.c1)))), ((CASE WHEN rt0.c4 THEN x'' END) ISNULL) FROM t1 WHERE (-1795669054);SELECT ALL LEAD((- (((rt0.c3) NOT NULL))), ((rt0.c3)GLOB(rt0.c0)) COLLATE NOCASE, (((rt0.c0 IN ()))&(((rt0.c2)<=(rt0.c2))))) OVER ( ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (CASE t0.c81  WHEN rt0.c0 THEN rt0.c0 ELSE t1.c0 END) AND (-2079670226)), (((rt0.c3, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c2)AND(rt0.c3)))AND('^ V!F!렁(>')))AND(rt0.c4)))AND(t0.c81)))AND(rt0.c2)))AND(rt0.c1)), ((rt0.c1)<=(rt0.c0)), ((((rt0.c2)OR(t1.c0)))OR(rt0.c1)))) AND ((HEX(DISTINCT t0.c81), ((((x'c9c6')OR(rt0.c3)))OR(rt0.c4)), CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END)))) FROM rt0;SELECT DISTINCT (((rt0.c2) ISNULL) IN ()), rt0.c2, ((TRIM(rt0.c2, rt0.c1)) BETWEEN (((((((((0.8397600543052054)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c2))) AND (CAST(rt0.c0 AS REAL))), (((((~ (rt0.c4)))OR(rt0.c1)))OR((((t1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))), ((rt0.c2 IN ()) IN ()) FROM t0, rt0 WHERE (((((0X72dce936 COLLATE NOCASE)OR((((((((('#F#AX難徉1246T6974368246206084968--2621010590618760121 7414122722160745551 -1689603593136451977--1950506201420818470T9105729896962884503:6264294140170031976 **')AND('Q')))AND(NULL)))OR('')))OR('850152249')))))AND((~ (-5.1491116E7)))));SELECT ALL RANK() OVER ( PARTITION BY ((((NULLIF(rt0.c4, rt0.c3))OR(LIKELIHOOD(2.12645431E9, 0.4748585080443354))))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))), ((rt0.c4 COLLATE RTRIM) NOTNULL)), NULL, MAX(rt0.c4, (rt0.c1 IN (rt0.c2, 'NY'))) FROM t0, rt0; -- 1ms;
SELECT ALL (((rt0.c3)) NOT BETWEEN ((TOTAL(rt0.c0))) AND ((RTRIM(t0.c81)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN NULL END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (UPPER(DISTINCT t1.c0))) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT t0.c81 COLLATE BINARY FROM t0, rt0 WHERE (((((0.7594364550224516) NOT BETWEEN (0.9728363896917908) AND (x''))) BETWEEN (UNLIKELY(x'')) AND (highlight(1.533596062E9, 0xffffffff850492ce, '', -687465277)))); -- 0ms;
SELECT DISTINCT ((((t1.c0) IS FALSE)) NOT BETWEEN (((((((((((((t0.c81)OR(t0.c81)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND('xV798Tf7J')))AND(rt0.c1))) AND (CAST(rt0.c3 AS NUMERIC))), rt0.c3, TOTAL(((((rt0.c2)AND(rt0.c3)))AND(t0.c81))) FROM rt0 WHERE ((((((NULL)AND('1245842545')))AND('1900280173')) IN ()));SELECT DISTINCT LAG(LIKELIHOOD(TYPEOF(DISTINCT '465766967'), 0.47863958568886467), (((((rt0.c0))>((rt0.c3))))&(((t0.c81)<>(rt0.c1)))), CAST(INSTR(rt0.c1, rt0.c2) AS BLOB)) OVER (), ((t1.c0) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY COLLATE NOCASE, DENSE_RANK() OVER () FROM t0, rt0, t1 WHERE ((((((((1.231508653E9)) BETWEEN (('')) AND ((''))))AND((- (x'')))))OR(x'2a13' COLLATE BINARY))); -- 0ms;
SELECT CASE (((rt0.c2))<>((t0.c81)))  WHEN CAST(rt0.c4 AS REAL) THEN ((rt0.c4)<<(t1.c0)) ELSE ((rt0.c1) NOTNULL) END, ((CASE WHEN NULL THEN rt0.c1 WHEN t1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c3 END) BETWEEN (t1.c0 COLLATE RTRIM) AND (CAST(rt0.c2 AS INTEGER))), json(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c81))) FROM rt0 LIMIT -312032453 OFFSET 539346300;SELECT DISTINCT AVG(CAST(t0.c81 AS TEXT)) FROM rt0, t0, t1; -- 0ms;
SELECT ALL ((t1.c0)<>(x'')) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((((rt0.c4) NOTNULL))) AND ((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN t1.c0 THEN rt0.c2 END))), (~ (((rt0.c1) NOT NULL))), CAST(((rt0.c3) NOT NULL) AS TEXT) FROM rt0, t1, t0 WHERE (((((-752035127)AND(NULL))) BETWEEN ((0.5535098221429502 IN ())) AND ((('秆')||(NULL))))); -- 0ms;
SELECT DISTINCT TOTAL(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN t1.c0 THEN x'' WHEN t1.c0 THEN rt0.c2 WHEN NULL THEN 0.05474197639533751 WHEN rt0.c3 THEN rt0.c0 ELSE t0.c81 END), 1884288695, RANK() OVER (), ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)))OR(t0.c81)))AND(rt0.c1)) COLLATE NOCASE, ((((((rt0.c2)-(t1.c0)))AND(rt0.c4)))AND(((rt0.c4) NOT BETWEEN (rt0.c0) AND (t1.c0)))) FROM t1, t0 GROUP BY (((((NOT (rt0.c2)))OR(rt0.c4)))AND(((rt0.c2)!=(t1.c0)))) HAVING COUNT(*);SELECT DISTINCT COUNT(*) OVER (), ((((t1.c0)<=(rt0.c3)))IS NOT(((rt0.c3)||(t0.c81)))), (((((~ (t1.c0)))AND((t1.c0 IN ()))))OR(CAST(t0.c81 AS INTEGER))), CASE WHEN ((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)) THEN rt0.c2 END, '-1823287346' FROM rt0, t1, t0 WHERE ((((((0Xffffffff9eb02c34))!=((NULL)))) NOT NULL)) ORDER BY (NOT ((+ (rt0.c1))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (x'')) FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c1 THEN t1.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END AS TEXT), (((NULL IN ()))IS(((rt0.c4) NOT BETWEEN (rt0.c3) AND (NULL)))), (-1261249486 IN (rt0.c0, '-51491116')) FROM t1, rt0; -- 0ms;
SELECT DISTINCT '1098487283' COLLATE NOCASE, SUM(CASE rt0.c3  WHEN t1.c0 THEN rt0.c0 ELSE rt0.c4 END) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND ((json_remove(rt0.c1, rt0.c1, rt0.c3, rt0.c2))IS((t0.c81 IN ()))) PRECEDING), (((rt0.c0, t1.c0, t1.c0)) BETWEEN ((((x'') NOTNULL), ((t0.c81)*(rt0.c3)), COUNT(t1.c0))) AND (((+ (t0.c81)), (t1.c0 IN ()), t1.c0 COLLATE BINARY))), (+ (0Xffffffffed857f80)), GROUP_CONCAT(((rt0.c3)GLOB(0.9031934883406264))) FROM t0, t1, rt0 WHERE (((((x'') BETWEEN (NULL) AND (x'')))IS(((NULL) NOT BETWEEN ('') AND ('-345422775')))));SELECT ALL ((((t0.c81)OR(rt0.c4 COLLATE NOCASE)))OR(((rt0.c1)>(rt0.c3)))) FROM t0, t1, rt0 WHERE (CAST(((0.831700125695)<=('1769201756')) AS INTEGER)) LIMIT -1458190164 OFFSET -1783531961; -- 0ms;
SELECT ((((UPPER(0.27477737628954335))OR(((t1.c0) IS FALSE))))OR(rt0.c3)), CASE (+ (rt0.c0))  WHEN (~ (0xffffffffd71d271b)) THEN ((rt0.c1) IS TRUE) WHEN (rt0.c4 IN ()) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c81)) WHEN CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END THEN COUNT(rt0.c1) ELSE LENGTH(rt0.c3) END, (((((rt0.c0) IS TRUE)))<=((((((rt0.c3)OR(rt0.c2)))OR(t0.c81))))) FROM rt0, t0, t1 WHERE (CAST(NULL COLLATE BINARY AS BLOB)); -- 0ms;
SELECT DISTINCT ((CAST(NULL AS NUMERIC))>((((NULL)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))), SUM((+ (t1.c0))) OVER (), MAX(((((rt0.c2)OR(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM) FROM rt0;SELECT ((((t1.c0)*(NULL))) BETWEEN (((rt0.c0) IS FALSE)) AND (NULL)) FROM t1 WHERE ((('273023968') IS TRUE));SELECT ((((t0.c81 COLLATE NOCASE)OR(rt0.c0)))OR((((rt0.c0)) BETWEEN (('1271234495')) AND ((rt0.c3))))) FROM t1, t0, rt0; -- 0ms;
SELECT rt0.c4, ((RTRIM(t0.c81))||(rt0.c4 COLLATE RTRIM)), CASE rt0.c2  WHEN t0.c81 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM FROM t0, t1, rt0 WHERE ((+ (NULL)) COLLATE BINARY) GROUP BY (((((t1.c0)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0)))) NOT NULL); -- 0ms;
SELECT (UPPER(rt0.c2) IN ()) FROM t0, rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t1, t0, rt0 WHERE (((((((('-1240235980')OR('352905392')))OR(NULL))))>((x'9bf4' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT COALESCE(((((rt0.c3)AND(rt0.c4)))OR(0.5891034612782736)), (+ (t1.c0))) FROM t0, rt0, t1 GROUP BY ((rt0.c4 COLLATE BINARY)==(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))); -- 0ms;
SELECT ((TYPEOF(DISTINCT rt0.c1)) IS TRUE), MIN((+ (rt0.c2))), CASE WHEN ((t1.c0) IS FALSE) THEN (((t0.c81, rt0.c3, rt0.c4))>=((x'', rt0.c2, '?yUQL\r0W2'))) END FROM rt0;SELECT DISTINCT INSTR((rt0.c4 IN ()), CASE WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END) FROM t1 WHERE ((((((0.9090387568513804))>((0.53403700456838)))) NOT BETWEEN (CAST('\r}' AS NUMERIC)) AND ((('-*C7R')!=(0.06269348229043803))))) ORDER BY ((((rt0.c3)AND(CAST(t0.c81 AS TEXT))))OR(((t1.c0)>(t1.c0)))) ASC;SELECT DISTINCT LIKELIHOOD(rt0.c4, 0.6528870656897051) FROM rt0, t1, t0 WHERE ((((0.1360787819283913 IN ())) ISNULL)); -- 0ms;
SELECT ALL (((((+ (rt0.c3)))OR((+ (rt0.c0)))))OR(0.5034711897017332)) FROM rt0 GROUP BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) AS NUMERIC) HAVING COUNT(*); -- 0ms;
SELECT DISTINCT HEX(LIKELIHOOD(DISTINCT t1.c0, 0.9697452414758037)) FROM rt0;SELECT ALL COUNT(('' IN ())), RANK() OVER (), (((('K	ꦷP3>')OR(LOWER('xlaX!E'))))OR(((rt0.c1)>>(rt0.c1)))) FROM rt0, t0, t1 WHERE ((((((x'' IN ()))AND(CAST(NULL AS TEXT))))OR((- ('1534677561'))))) LIMIT -883911062; -- 0ms;
SELECT (((rt0.c1)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND (((((t1.c0)) NOT BETWEEN ((t0.c81)) AND ((rt0.c3)))))), ((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))AND(CASE t1.c0  WHEN rt0.c2 THEN rt0.c0 WHEN t0.c81 THEN x'' WHEN t1.c0 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN t0.c81 THEN rt0.c3 ELSE rt0.c1 END)))AND(t0.c81 COLLATE NOCASE)), t0.c81 FROM rt0, t0;SELECT DISTINCT (((t1.c0) ISNULL) IN ()) FROM t0, t1, rt0 WHERE (((('氞⿛kDVij<') BETWEEN ('41670721') AND (0.6699128446016521)) IN ())); -- 1ms;
SELECT DISTINCT ((((NULL)GLOB(rt0.c1))) NOT BETWEEN ((rt0.c3 IN (1184294525))) AND (((t0.c81) BETWEEN (rt0.c0) AND (rt0.c4)))) FROM t1, t0, rt0 WHERE ((((((NULL IN (NULL)))AND(x'a003')))AND(CASE x'922d'  WHEN '-1442682660' THEN x'29d9' END))); -- 0ms;
SELECT ALL ((((rt0.c1)>(rt0.c1))) NOT BETWEEN ('E[') AND ((rt0.c0 IN ()))) FROM t0;SELECT DISTINCT AVG(CASE WHEN rt0.c0 THEN t0.c81 WHEN rt0.c2 THEN t0.c81 WHEN rt0.c0 THEN t1.c0 ELSE t1.c0 END) OVER () FROM rt0, t0;SELECT ((MIN(rt0.c2)) BETWEEN (1.419624276E9) AND (((((((((t0.c81)AND(t0.c81)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))) FROM t1, t0;SELECT DISTINCT (rt0.c3 COLLATE RTRIM IN (CASE t0.c81  WHEN rt0.c3 THEN t0.c81 ELSE -1.665199414E9 END, (((rt0.c4, rt0.c2, rt0.c0))!=((rt0.c4, t0.c81, rt0.c0))))) FROM t1;SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)) IN ()), DENSE_RANK() OVER (), t0.c81 FROM t0 INDEXED BY i1, rt0, t1 LIMIT 623786811; -- 0ms;
SELECT DISTINCT ((CAST(t0.c81 AS REAL))&(((((rt0.c4)OR(t0.c81)))OR(t1.c0)))) FROM rt0 INDEXED BY i1, t0, t1 WHERE ((((((NULL)IS(NULL)), (('-1276655153')&(x'')), ((((0.352699247550154)AND(x'fdebe52b')))OR(0.07771614523247472))))==((CAST('2059046575' AS NUMERIC), ((((0.01642256307275536)OR('634627923')))AND(x'')), '694293085' COLLATE NOCASE))));SELECT DISTINCT TOTAL(t0.c81 COLLATE NOCASE COLLATE NOCASE), (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((((t0.c81) BETWEEN (rt0.c1) AND (NULL))))), ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((((0.059156124208066596, rt0.c2, t0.c81))<>((rt0.c0, rt0.c2, rt0.c1))))) FROM rt0, t1 WHERE (((CASE 0.9794879335775002  WHEN x'' THEN NULL END) NOTNULL));SELECT DISTINCT CASE rt0.c2  WHEN COUNT(*) THEN SUM(t1.c0) END, (((((((((t1.c0)OR(t0.c81)))OR(rt0.c1)))OR(0Xffffffffcb381eec)))OR(t0.c81)) IN ((NOT (t1.c0)))), (+ (t0.c81 COLLATE RTRIM)) FROM t1 WHERE (((CASE WHEN x'' THEN x'e018' WHEN 1926452511 THEN '936349691' WHEN '' THEN -1e500 ELSE '䁘W' END)-('-986549017')));SELECT ALL (((INSTR(rt0.c2, '0.5331706286057357'), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))), '0.40018757708292774'))<((x'', ((t0.c81)+(rt0.c2)), t0.c81 COLLATE RTRIM))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0, t1, rt0 WHERE (((((((((x'5a0f')AND('tmar')))AND(0X1a0bb078)))AND('y_냺h5')))AND('XU')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT t1.c0 COLLATE BINARY COLLATE BINARY, CAST(((rt0.c0)GLOB('')) AS TEXT), CAST((((rt0.c1)) BETWEEN ((0.5598537021357529)) AND ((t0.c81))) AS REAL) FROM t0, rt0, t1; -- 0ms;
SELECT ALL 0.5760566083828709, (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)), ((NULL) BETWEEN (rt0.c2) AND (rt0.c0)), load_extension(rt0.c3)))<=((((((rt0.c0)OR(t1.c0)))AND(rt0.c4)), rt0.c1, (rt0.c3 IN ())))), NULL FROM t1;SELECT DISTINCT ((MIN('2112916939'))<=(((((t1.c0)AND(rt0.c0)))OR(rt0.c3)))) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT CAST(INSTR('-1572040309', rt0.c4) AS BLOB), '', (((((((t1.c0)OR(rt0.c4)))OR(0.3753991417359902))))<((((rt0.c3)<=(t1.c0))))), (CASE rt0.c4  WHEN '6#J2' THEN t0.c81 END IN ()), rt0.c1 FROM rt0, t0, t1 WHERE (((SQLITE_COMPILEOPTION_GET(0.9760056074333995))GLOB((((0.3545892219582639))<((x'')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)LIKE(rt0.c1)))+(CAST(t1.c0 AS BLOB))) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT ((CASE 0xffffffff8703fc0e  WHEN t1.c0 THEN rt0.c0 END) BETWEEN (rt0.c3) AND (rt0.c3 COLLATE RTRIM)) FROM t0, rt0;SELECT ALL (((rt0.c2) ISNULL) IN ()), rt0.c1, rt0.c1 FROM t1, rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, t0, t1; -- 1ms;
SELECT (((t1.c0) IS TRUE) IN ()) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((((+ (rt0.c4)))AND(((((((((((((t1.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(t1.c0)))OR(t1.c0)))OR(t0.c81)))))OR((((x'673e', rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((x'', rt0.c1, rt0.c3))))) FROM t1, rt0, t0 ORDER BY ((((((rt0.c4)<<(rt0.c1)))OR(((t1.c0)&(rt0.c2)))))AND(t1.c0)); -- 0ms;
SELECT DISTINCT PRINTF((NOT (rt0.c0))) FROM t1 LEFT OUTER JOIN rt0 ON x'' CROSS JOIN t0 ON CAST(((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS REAL); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((x'')!=(t1.c0)) END, CAST(rt0.c0 AS INTEGER), ((CAST(rt0.c3 AS NUMERIC))OR(COUNT(*))) FROM t0, t1, rt0 WHERE ((((json_valid(0.40018757708292774)))>=((NULL COLLATE BINARY)))) ORDER BY (~ (0.5759218849745947)), (((rt0.c4)) BETWEEN ((((rt0.c1)+(-11243278)))) AND ((COALESCE(rt0.c4, rt0.c3, '0.9170202692071034', rt0.c1)))); -- 1ms;
SELECT CAST(NULL AS NUMERIC) FROM rt0, t0 WHERE ((((((((((('449606889')IS NOT(x'')))AND(((NULL) NOT BETWEEN (0.3149992415224142) AND ('y?k')))))OR(CAST(x'' AS REAL))))OR((((('tIKxQ')OR(NULL)))OR(0.3752118966472977)))))AND(0Xffffffffe257290d))) ORDER BY (((t0.c81)) NOT BETWEEN ((CAST(t0.c81 AS BLOB))) AND ((CAST(rt0.c2 AS INTEGER)))); -- 0ms;
SELECT DISTINCT COUNT(*), ((((rt0.c4) IS TRUE))*(((((rt0.c3)OR(rt0.c2)))AND(54284538)))), SUM((rt0.c3 IN (0.8514371153166126, -192214038))) OVER () FROM t1, t0, rt0 WHERE (((NOT ('-342659395')) IN ())) ORDER BY ((x'') IS TRUE); -- 0ms;
SELECT ((((rt0.c3)>>(rt0.c0)))IS NOT(((t1.c0)+(rt0.c2)))) FROM t1 WHERE (((NULL)>>((~ (0X1f6b36e0)))));SELECT DISTINCT NTH_VALUE(((((t0.c81) NOT BETWEEN (t0.c81) AND (t0.c81)))!=(t0.c81)), ((UPPER(DISTINCT t0.c81)) NOT BETWEEN (((t0.c81) ISNULL)) AND (((((((((x'')AND(t0.c81)))OR(t0.c81)))OR(t0.c81)))OR(t0.c81))))) OVER () FROM t0 ORDER BY ((rt0.c0) NOT NULL) COLLATE BINARY COLLATE NOCASE DESC;SELECT (+ (((('-164662528'))!=((rt0.c2))))) FROM rt0 INNER JOIN t1 ON ((TRIM(rt0.c3)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c4 END) AND ((((rt0.c2, rt0.c4, rt0.c2))>((t0.c81, rt0.c1, rt0.c2))))) WHERE (((SQLITE_COMPILEOPTION_GET(NULL)) NOT BETWEEN ((NULL IN (x'b0fe0c73'))) AND (CASE NULL  WHEN 'g80(%' THEN 0.14978363505324976 END)));SELECT ((rt0.c2 COLLATE BINARY) BETWEEN (rt0.c0) AND (((rt0.c4) IS TRUE))), (t1.c0 IN ()) COLLATE RTRIM, CAST(NULL AS BLOB) FROM t0, rt0, t1 LIMIT 1663282196 OFFSET -249208035; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1 WHERE (((('r泣r	n' IN (0xffffffffefd36bb6, 0X240d3d74))) IS FALSE)); -- 0ms;
SELECT LAG((((t0.c81) ISNULL) IN ()), (~ (COALESCE(DISTINCT rt0.c2, rt0.c1, rt0.c1, 0X95d425f))), ((((CAST(t1.c0 AS TEXT))AND((NOT (rt0.c0)))))OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (t1.c0))))) OVER (), rt0.c1, t1.c0 FROM t1, rt0, t0 WHERE ((- (((x'463d') NOT BETWEEN (NULL) AND ('732096894'))))) ORDER BY ((('1994682342'))=(((~ (rt0.c0))))) DESC; -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN rt0.c1 THEN rt0.c0 END) OVER () FROM t0 WHERE ((LOWER(NULL) IN ()));SELECT ABS(DISTINCT 'hze_.<ჲ)') FROM t0, rt0; -- 0ms;
SELECT CASE ((((((((rt0.c4)OR(t1.c0)))AND(rt0.c1)))AND(t1.c0)))OR(t1.c0))  WHEN (rt0.c4 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3)) ELSE ((rt0.c2) BETWEEN (NULL) AND (t0.c81)) END, ((rt0.c3) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CASE rt0.c0  WHEN rt0.c2 THEN t0.c81 WHEN x'' THEN t0.c81 WHEN rt0.c4 THEN t1.c0 END)), CAST(rt0.c2 AS INTEGER) COLLATE BINARY FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT t0.c81 FROM t0, t1 WHERE (0.19395548571342314); -- 0ms;
SELECT x'', ROW_NUMBER() OVER (), ((((((t0.c81))<((rt0.c0)))))<=((((((rt0.c2)AND(NULL)))OR('phmO'))))) FROM t0 WHERE ((((((x'', '407350991', ''))>((-2012810888, -330006765, NULL)))) BETWEEN ('1774036833') AND ((('') NOT NULL))));SELECT ALL (((t0.c81, rt0.c2, rt0.c4)) BETWEEN ((((NULL) ISNULL), 0.7027559116423996, ((((t0.c81)OR(rt0.c3)))AND(t0.c81)))) AND ((CAST(rt0.c4 AS INTEGER), CAST(rt0.c1 AS REAL), (~ (t0.c81))))) FROM t1, rt0, t0; -- 0ms;
SELECT ALL (NOT (UNLIKELY(t1.c0))) FROM t1, rt0; -- 0ms;
SELECT ALL (((rt0.c2 IN ()))*(0.3214857211026144)) FROM rt0, t0, t1; -- 0ms;
SELECT ALL ((- ('-229268480')) IN (rt0.c4 COLLATE NOCASE, CAST(x'' AS NUMERIC))) FROM t0, t1;SELECT DISTINCT (t0.c81 IN ()) FROM rt0, t1, t0 ORDER BY HEX(DISTINCT (- (t1.c0)))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS FALSE)) NOTNULL), NTILE(((((t1.c0) NOT NULL))|(CAST(t1.c0 AS INTEGER)))) OVER (), COUNT(*) FROM t0, t1 ORDER BY CASE x''  WHEN ((rt0.c0) NOT NULL) THEN (('1902469743')>=('0.40018757708292774')) ELSE (t1.c0 IN ()) END, (- ((rt0.c2 IN ())))  NULLS FIRST, ((t0.c81)==(rt0.c1)) COLLATE BINARY DESC  NULLS FIRST;SELECT GROUP_CONCAT(rt0.c0) OVER () FROM rt0 WHERE (((((('p?7') IS FALSE), ('[]' IN ()), NULL COLLATE NOCASE))<(((((((((('ag''7QC,')OR(NULL)))AND(x'')))AND('d\')))OR(x'')), 548175047, ((0.3075957549244457)AND(NULL)))))); -- 0ms;
SELECT ALL ((((((((((((t1.c0)AND(rt0.c4)))AND('607924712')))AND(UPPER(rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END)))OR(((((((((rt0.c4)AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))))AND(-7.60663042E8)), CASE WHEN ((t1.c0) IS TRUE) THEN (- (rt0.c0)) ELSE CAST(rt0.c1 AS NUMERIC) END, (NOT ('vST')) FROM rt0, t1 WHERE (CAST((((0.15224292149491037)) NOT BETWEEN ((0.2624343340475065)) AND (('1419624276'))) AS BLOB)) GROUP BY ((((t1.c0)IS(t0.c81)))|((((rt0.c2))>=((t0.c81)))));SELECT DISTINCT NTILE(rt0.c2) OVER () FROM rt0, t0 WHERE (((CAST('狳,' AS NUMERIC)) NOT BETWEEN (CASE WHEN '' THEN 0Xffffffffa6a4fde1 ELSE '1275699647' END) AND (((((x'')OR(x'')))OR('2013455580')))));SELECT DISTINCT CASE (((rt0.c3, rt0.c4, rt0.c4))<((rt0.c4, rt0.c0, rt0.c1)))  WHEN ((t0.c81)<>(rt0.c3)) THEN ((rt0.c0)&(rt0.c3)) ELSE ((((((((rt0.c0)AND(t1.c0)))OR(rt0.c4)))AND(rt0.c2)))AND(rt0.c2)) END FROM t1, rt0 GROUP BY (((((rt0.c3 IN ()))AND(((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)))))OR(((t0.c81) BETWEEN (rt0.c3) AND ('V1cWP'))));SELECT DISTINCT (~ (CAST(t1.c0 AS NUMERIC))), COUNT(*), ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ((- (t1.c0))) AND (((t1.c0) IS TRUE))) FROM t1, rt0, t0 GROUP BY (0.22489901530427248 IN ()); -- 0ms;
SELECT TOTAL(NULL) OVER (), CAST(LIKE(rt0.c1, rt0.c0) AS INTEGER), ((json_quote(t1.c0))+(MIN(rt0.c3))), rt0.c2, CAST((rt0.c2 IN ()) AS INTEGER) FROM rt0, t0;SELECT DISTINCT ((CAST(t1.c0 AS NUMERIC)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN t1.c0 THEN rt0.c4 ELSE t1.c0 END) AND (COUNT('-297399236'))), CASE WHEN t1.c0 THEN rt0.c3 ELSE '1212991088' END COLLATE BINARY, ((COALESCE(rt0.c0, rt0.c4)) NOTNULL) FROM t0, t1;SELECT DISTINCT (((rt0.c4 IN (t1.c0, t0.c81))) IS TRUE), CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE t1.c0 END WHEN ((rt0.c0) BETWEEN (t1.c0) AND (rt0.c3)) THEN CAST(rt0.c3 AS TEXT) WHEN ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(t0.c81)) THEN 'v,㣺6' END, LIKELIHOOD(rt0.c1 COLLATE NOCASE, 0.4933072024324133) FROM t0, rt0, t1 WHERE (CAST(((NULL)GLOB(x'')) AS BLOB)) ORDER BY (((rt0.c1))<=((t1.c0))) COLLATE BINARY ASC, ((((((((((rt0.c2) NOT BETWEEN (rt0.c4) AND (NULL)))AND(((rt0.c4)<=(rt0.c3)))))OR(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c3)&(rt0.c0)))))OR((t0.c81 IN ()))) ASC, ((IFNULL(rt0.c1, t1.c0))<<(((t1.c0)>>(rt0.c2)))); -- 0ms;
SELECT ((((((((((rt0.c3)*(rt0.c4)))AND(((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(HEX(NULL))))OR((((t0.c81)) NOT BETWEEN (('k>')) AND ((rt0.c0))))))AND(rt0.c2)) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE RTRIM)+(rt0.c2 COLLATE RTRIM)), (((- (rt0.c1))) ISNULL), (+ (((rt0.c0) IS TRUE))) FROM t1 WHERE (((((x'') NOTNULL)) NOT BETWEEN (((x'3b43')GLOB(NULL))) AND ((('588342375') IS FALSE))));SELECT DISTINCT (((+ (t0.c81)))*(((rt0.c1)&(rt0.c4)))), ((rt0.c3)<=(rt0.c3)) COLLATE NOCASE, (((t0.c81 IN ())) NOT BETWEEN (x'fab2') AND (((t1.c0) ISNULL))) FROM rt0, t0;SELECT ((((t1.c0) NOTNULL))<<(t0.c81 COLLATE BINARY)) FROM rt0 WHERE (LIKELY(((NULL)<<(NULL))));SELECT DISTINCT ((((rt0.c1)OR(((rt0.c2) IS FALSE))))OR(t1.c0)) FROM t0, t1 ORDER BY TRIM((- (t0.c81)), ((rt0.c2)>(rt0.c4))) DESC  NULLS LAST;SELECT DISTINCT CASE CASE WHEN t0.c81 THEN t1.c0 END  WHEN (~ (t1.c0)) THEN ((rt0.c1)LIKE(rt0.c0)) WHEN CASE WHEN t1.c0 THEN t0.c81 END THEN CASE WHEN t0.c81 THEN t1.c0 ELSE rt0.c2 END WHEN (((rt0.c3)) BETWEEN (('')) AND ((rt0.c2))) THEN ((((((((t1.c0)AND(rt0.c0)))OR('uI')))AND(rt0.c3)))AND(rt0.c2)) WHEN ((rt0.c3) IS FALSE) THEN ((rt0.c4) NOTNULL) WHEN MAX(rt0.c3) THEN (~ (rt0.c1)) ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) END FROM rt0, t1;SELECT DISTINCT t1.c0, COUNT(x''), ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))AND(CAST(t1.c0 AS BLOB))))OR(((rt0.c4) BETWEEN (rt0.c1) AND (t0.c81)))) FROM rt0 WHERE (CAST(((((((((0x6edcbdef)AND('0.8132825604876405')))AND('M5')))AND(x'')))AND(NULL)) AS INTEGER));SELECT DISTINCT rt0.c0 FROM t0, t1 LIMIT 1827359941;SELECT (((((t1.c0) ISNULL)))<=((TOTAL(rt0.c1)))) FROM t0, rt0, t1 WHERE (((x'')>(((0.7567083206066475)>>(x''))))); -- 0ms;
SELECT (((- (rt0.c4))) ISNULL), (((((x'97f1', rt0.c1, t0.c81)) BETWEEN ((t1.c0, rt0.c4, rt0.c0)) AND ((t1.c0, rt0.c1, x'')))) ISNULL), (((rt0.c2 IN ())) NOTNULL), (COUNT(*) IN ()), GROUP_CONCAT(((t0.c81)>(rt0.c1))) FROM rt0, t1 WHERE (CASE WHEN json_array('-1496881977', '(r', '', x'', NULL, '614685971') THEN 645297372 END) LIMIT 1414771668 OFFSET 1046212650;SELECT (MAX(t0.c81, rt0.c2) IN ((-1.597666733E9 IN ()))) FROM t0;SELECT ALL (- (x'6605')), CASE WHEN CASE rt0.c4  WHEN rt0.c1 THEN x'12f5' WHEN rt0.c1 THEN 'L.T\r' WHEN rt0.c3 THEN rt0.c1 END THEN t1.c0 WHEN ('' IN (rt0.c0)) THEN ((('2R', rt0.c4, 0.46472528415323633))>=((t1.c0, x'', rt0.c4))) WHEN (~ (t1.c0)) THEN ((((((((rt0.c3)OR(rt0.c1)))OR(NULL)))OR(rt0.c0)))AND(x'b6f7')) END, CAST(HEX(t1.c0) AS REAL) FROM t0 LIMIT -1872554357;SELECT ((rt0.c4 COLLATE NOCASE)+(json_array(749252114, t1.c0, rt0.c2, 0.6545807634271109))) FROM t1 WHERE (((((((((0xfffffffffcee4ed4)AND(NULL)))AND('1271234495')))OR(((((x'ac3e')AND('834315520')))OR(x'')))))AND(x'45ef')));SELECT ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)AND(((t1.c0) BETWEEN (t0.c81) AND (x'c947')))))AND(((rt0.c1) BETWEEN (rt0.c4) AND (t1.c0)))) FROM t0;SELECT DISTINCT LAG((((TOTAL_CHANGES()))>((((rt0.c4)>=(rt0.c0))))), (((((x'21d8', rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c2, rt0.c1))))-(CAST(0.9062444357555717 AS NUMERIC))), (((~ (x'')))GLOB(rt0.c3))) OVER (), (((((x'0c25', '759889844', rt0.c2))=((rt0.c3, rt0.c4, rt0.c4))))!=(((t1.c0)/(rt0.c4)))), (+ (rt0.c4)) COLLATE BINARY FROM t1, rt0 WHERE (x'cb44'); -- 0ms;
SELECT (((t1.c0, t1.c0, rt0.c4)) BETWEEN (((((t1.c0, t1.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, t0.c81, rt0.c3)) AND ((t1.c0, rt0.c2, rt0.c4))), ((rt0.c3) IS TRUE), rt0.c4)) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 END, COUNT(*), ((t0.c81) IS TRUE)))), ((((rt0.c3)AND((((rt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c0))))))AND((((rt0.c0, rt0.c2, rt0.c1))<((t0.c81, rt0.c4, rt0.c3))))), ((rt0.c0 COLLATE NOCASE)||('A!RS')) FROM t1, rt0, t0 GROUP BY t1.c0 HAVING (((rt0.c2) NOTNULL) IN ()); -- 1ms;
SELECT DISTINCT ((LOWER(DISTINCT t0.c81))-((((rt0.c3)) BETWEEN ((t0.c81)) AND ((rt0.c2))))) FROM rt0, t1 WHERE ((((0.3139959922074951 IN ()))LIKE((('-355870286') NOTNULL)))) ORDER BY ((((rt0.c0)OR(rt0.c3)))OR(rt0.c2)) COLLATE NOCASE, ((CAST(rt0.c0 AS NUMERIC))+(CHAR(rt0.c1))) DESC  NULLS LAST, (INSTR(t1.c0, t1.c0) IN ()) ASC  NULLS FIRST LIMIT -745995886 OFFSET -1839109969;SELECT DISTINCT (((CASE rt0.c2  WHEN rt0.c3 THEN 0.44314743437235826 WHEN rt0.c3 THEN t1.c0 WHEN t0.c81 THEN t0.c81 ELSE rt0.c2 END))!=((t0.c81))), 0.4578135391591004 COLLATE RTRIM, COUNT(*) FROM t1, rt0, t0 ORDER BY CAST(rt0.c1 AS REAL) COLLATE BINARY, ((CAST(t0.c81 AS REAL)) NOTNULL)  NULLS LAST; -- 0ms;
SELECT RANK() OVER () FROM t1, t0, rt0 ORDER BY CASE WHEN CAST('d}nd!u[' AS REAL) THEN ((((((((rt0.c0)AND(rt0.c0)))AND(',L')))OR(rt0.c1)))AND(rt0.c2)) END ASC; -- 0ms;
SELECT ALL CAST(CAST(rt0.c3 AS TEXT) AS TEXT) FROM t0, t1 WHERE ((((x''))<=((LTRIM('B&')))));SELECT ((((rt0.c1)<>(rt0.c2))) NOT BETWEEN ((- (t1.c0))) AND (TOTAL(rt0.c1))) FROM rt0 WHERE (((((((NULL)OR(0.23469321683501487)))OR('')))IS NOT('^' COLLATE NOCASE)));SELECT DISTINCT x'' FROM t0, rt0 WHERE (((((((((-1.288670581E9 COLLATE BINARY)AND(CAST('?P~Wr郈\' AS INTEGER))))AND(x'')))AND((('-760663042') IS FALSE))))OR((((0.2765220187735892))==(('144509436')))))) GROUP BY (((((rt0.c0 IN (rt0.c0, t0.c81)))OR((((t0.c81)) BETWEEN ((t1.c0)) AND ((t0.c81))))))OR(x'' COLLATE RTRIM)) HAVING ((((CAST(rt0.c2 AS REAL))OR(CASE t1.c0  WHEN t1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END)))OR(x''));SELECT DISTINCT CASE (- (rt0.c1))  WHEN ((rt0.c1)>(rt0.c2)) THEN CAST(rt0.c4 AS BLOB) END, ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END) IS TRUE), ((((((rt0.c3)AND(rt0.c2)))AND(t1.c0)))<=(rt0.c0)) FROM rt0, t0, t1; -- 0ms;
SELECT ((((x'') NOT BETWEEN (t0.c81) AND (rt0.c0))) NOT BETWEEN (rt0.c4) AND (rt0.c2)), CAST(t1.c0 AS NUMERIC) COLLATE RTRIM, (((((((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(rt0.c0)))AND(rt0.c1)))OR(((((t1.c0)AND(rt0.c1)))AND(rt0.c0)))))OR(t0.c81)) FROM rt0, t0 INDEXED BY i8, t1 GROUP BY (((((rt0.c4))>=((rt0.c0))))-(rt0.c0));SELECT DISTINCT ((t0.c81)OR(((rt0.c0)>>(rt0.c4)))) FROM rt0, t1, t0 WHERE (UNLIKELY(DISTINCT 0.2909181929700192 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT (((rt0.c1))==((rt0.c1))) COLLATE NOCASE, LAG((((t1.c0)) NOT BETWEEN ((((t0.c81)||(rt0.c4)))) AND ((((rt0.c1)>=(rt0.c0))))), ABS(DISTINCT CAST(rt0.c0 AS INTEGER)), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((((('￿ק''43', 0.589532074131478, rt0.c2, '1532713443', t0.c81))<((rt0.c3, rt0.c3, rt0.c0, rt0.c3, rt0.c2))))))) OVER ( RANGE ((((((((rt0.c2 COLLATE RTRIM)AND(((t0.c81) NOT NULL))))AND(-8.88170283E8)))AND(rt0.c1)))AND(STRFTIME(rt0.c2, t0.c81, rt0.c4))) PRECEDING), ((rt0.c4) IS TRUE) FROM t0, t1, rt0 WHERE ((((0.21132732597099624 IN ()))||(CASE 'xE{'  WHEN NULL THEN NULL ELSE NULL END)));SELECT json_extract(LOWER(rt0.c1), ((rt0.c2)IS(rt0.c2))) FROM rt0;SELECT DISTINCT AVG((+ (rt0.c0))) OVER (), ((rt0.c1 COLLATE RTRIM) ISNULL), (((((0x7779a135)AND(t1.c0)))OR(rt0.c4)) IN ()) FROM t1 INDEXED BY i35, t0;SELECT DISTINCT (((rt0.c2)>('런Gn88O>k')) IN ()) FROM t1, rt0 WHERE (CAST(CASE NULL  WHEN 0.4373641053573688 THEN 0.7049938654510904 WHEN NULL THEN x'' WHEN '' THEN 0.814792611017267 ELSE '' END AS TEXT)); -- 0ms;
SELECT DISTINCT (NOT ((rt0.c4 IN (rt0.c4)))) FROM t1 WHERE (((CASE -1173915585  WHEN '' THEN 0x5b68d19e ELSE x'b6f7' END)>>((NULL IN ()))));SELECT ALL ((((rt0.c4)<(rt0.c1))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) FROM rt0, t0 WHERE (((((0.20320689375168877)>('tmar'))) NOTNULL)) GROUP BY ((rt0.c2 COLLATE NOCASE)<((t1.c0 IN (t0.c81))));SELECT DISTINCT ((rt0.c1)-((- (rt0.c0)))) FROM t1;SELECT DISTINCT (NOT (t0.c81)) FROM t0 ORDER BY rt0.c1 ASC, ((((t1.c0) NOT BETWEEN (rt0.c1) AND (t1.c0)))|(((rt0.c1)|(rt0.c2)))) ASC;SELECT DISTINCT ((((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)))AND(((rt0.c1)IS(t0.c81)))))AND(((((t1.c0)OR(rt0.c0)))AND(t1.c0)))) FROM t0, t1, rt0 WHERE (((((('')) NOT BETWEEN (('-150672011')) AND ((0x37d24865)))) ISNULL)) LIMIT -1789737231 OFFSET -1442682660; -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((((rt0.c3) BETWEEN (t1.c0) AND (rt0.c1)))) AND (((((rt0.c1)) NOT BETWEEN (('] 秆Y')) AND ((rt0.c3)))))), SUM((t1.c0 IN ())) OVER (), (((rt0.c3 IN ())) IS FALSE) FROM t1, t0, rt0 WHERE ('#첐a'); -- 0ms;
SELECT ALL ((((t0.c81)>(rt0.c1))) BETWEEN ((t1.c0 IN ())) AND (CASE WHEN 0.7850275495841539 THEN t0.c81 END)) FROM t0;SELECT DISTINCT (((rt0.c0) NOT NULL) IN ()), t1.c0, -2013430086 FROM rt0;SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE t0.c81 END) IS FALSE), CASE (((rt0.c2))<=(('I폌iIiD')))  WHEN ((rt0.c3)-(t1.c0)) THEN COUNT(*) ELSE (((rt0.c1))>=((rt0.c4))) END, ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN x'f67a' THEN t1.c0 WHEN rt0.c4 THEN rt0.c0 END) IS TRUE) FROM t1 WHERE (((CASE WHEN x'5850' THEN -2092518731 WHEN 0.5424679141102868 THEN 'h, RA)w' WHEN 0.9500356480621219 THEN x'27ad' ELSE NULL END) IS TRUE)) ORDER BY ((rt0.c4)|((NOT (t1.c0))));SELECT ALL (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END IN ()) FROM t1 WHERE (NULL) LIMIT -910611174 OFFSET 469197771; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1) BETWEEN (t0.c81) AND (rt0.c4))), x'', (- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) FROM t0, rt0, t1; -- 0ms;
SELECT (((((rt0.c0)AND(rt0.c0)))AND(t1.c0)) IN (((rt0.c2)OR(rt0.c1)), rt0.c4 COLLATE RTRIM)) FROM t0 ORDER BY LIKELY(DISTINCT ((rt0.c1)>>(rt0.c4)))  NULLS FIRST;SELECT (((rt0.c3)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c2)AND(rt0.c3)))AND(0.2994358331670872))))) FROM t0, rt0, t1 WHERE ((((0.9881349407913522, NULL, '-249208035', x'', 0.6409095662712674)) BETWEEN ((CASE '9(9'  WHEN 0.3791327918929076 THEN '-0.0' ELSE '-801141435' END, 0.5906710473786372, ((x'b33d') NOT BETWEEN ('my') AND (0x75046ac2)), ((0.5489356811940775) NOT NULL), (('1533596062') ISNULL))) AND (((- (x'')), ((x'27d8') BETWEEN (x'51ad3697') AND ('388033936')), CAST(NULL AS NUMERIC), (((NULL)) BETWEEN (('^_')) AND ((NULL))), (((0.8054194593651617))<((0.27371097544661704))))))); -- 0ms;
SELECT DISTINCT CASE WHEN t1.c0 COLLATE BINARY THEN CASE rt0.c1  WHEN 'wB2''' THEN rt0.c4 ELSE rt0.c4 END ELSE (((t1.c0))>((rt0.c2))) END, ((((rt0.c3 COLLATE RTRIM)OR(TOTAL(rt0.c3))))OR(rt0.c0 COLLATE RTRIM)), 0.5593136044522903, UPPER(DISTINCT ((rt0.c1) ISNULL)), (- (((rt0.c0)>>(rt0.c4)))), ((((rt0.c0) NOT BETWEEN (t0.c81) AND (t1.c0)))%(GROUP_CONCAT('1391451767'))), CASE WHEN rt0.c4 THEN rt0.c4 END COLLATE BINARY FROM t0;SELECT DISTINCT TOTAL(t1.c0), ((-9.10611174E8) IS FALSE), ((((((rt0.c2)OR(t0.c81)))AND(-1288670581))) IS FALSE) FROM t0, rt0 WHERE (((((NULL)AND('ykf''{')))>=(((((1424118986)AND('-258818925')))AND(x'')))));SELECT DISTINCT t1.c0 FROM rt0;SELECT (((((rt0.c2))>((t1.c0))))&(CAST(rt0.c1 AS INTEGER))), ((((t1.c0) NOT BETWEEN ('') AND (t1.c0)))/(((((t0.c81)AND(t1.c0)))AND(t1.c0)))), CASE rt0.c4  WHEN t1.c0 THEN rt0.c3 END COLLATE BINARY FROM t1 WHERE (((('-1669546688'))=((0.5367343724163307))) COLLATE BINARY) LIMIT 1891479271;SELECT ALL CAST((NOT (x'')) AS BLOB) FROM t0, t1, rt0 WHERE (CAST(IFNULL(DISTINCT 1371113320, '') AS NUMERIC)); -- 1ms;
SELECT DISTINCT rt0.c2, ((rt0.c4) BETWEEN (t1.c0) AND ('')) COLLATE RTRIM, CAST(((x'')*(rt0.c3)) AS BLOB) FROM rt0 WHERE (((((((0x5f3e5895)AND(NULL)))AND(x'')))AND('')));SELECT DISTINCT ((((t0.c81) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL), ((((rt0.c1) IS FALSE)) BETWEEN ('498303861' COLLATE NOCASE) AND (rt0.c4 COLLATE BINARY)), (DATE(rt0.c0, rt0.c2, rt0.c4) IN (CAST(rt0.c4 AS TEXT))) FROM t0, rt0 WHERE (JULIANDAY(((0.7697976232624577)LIKE(NULL)), ((0.1965208650951814) BETWEEN (0.043494220913105175) AND (NULL)), ((('0.5891034612782736'))<>((NULL))))); -- 0ms;
SELECT DISTINCT CAST(((((rt0.c2)AND(rt0.c1)))AND(x'')) AS TEXT) FROM t1, rt0 WHERE (CASE WHEN (((']~')) BETWEEN (('')) AND (('\nt	2'))) THEN '''o\n]q' COLLATE NOCASE WHEN TYPEOF(DISTINCT 0.2537975851244879) THEN '-306228734' WHEN x'' THEN ((((((((((((0.9724246439201154)AND(0.7596936353839924)))AND('8jUO22~Wো')))AND(x'ba4a')))OR(0.6733844846761504)))OR(2.010483322E9)))AND(0.6874679597110862)) END); -- 0ms;
SELECT DISTINCT (~ (CASE t1.c0  WHEN rt0.c3 THEN t0.c81 END)), (+ (((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))), ((((t1.c0) NOTNULL)) ISNULL) FROM t1, t0, rt0; -- 1ms;
SELECT DISTINCT TRIM(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))) FROM t0 WHERE (((CASE WHEN NULL THEN 0X5b795239 ELSE NULL END)&(((NULL)>>(x'')))));SELECT (- (rt0.c4)) COLLATE NOCASE, (NOT ((t1.c0 IN (t0.c81)))), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c1) ISNULL)))) FROM t0 WHERE ((((('1098487283') BETWEEN ('1365787881') AND (NULL))) NOT BETWEEN (NULL) AND (0.24351019531576623)));SELECT ALL (~ (rt0.c1)) FROM t0, t1, rt0 GROUP BY ((((- (rt0.c1)), rt0.c4 COLLATE NOCASE, ((((rt0.c3)OR(rt0.c0)))OR(x''))))>((((t1.c0)/(rt0.c2)), (((rt0.c0))<=((rt0.c1))), (~ (rt0.c0))))) HAVING (QUOTE(rt0.c0) IN (((rt0.c0)||(t1.c0)))); -- 0ms;
SELECT ALL (((((t1.c0))>((rt0.c0))))<(((rt0.c2) IS FALSE))) FROM t1, t0 ORDER BY (+ ((rt0.c3 IN ()))) DESC;SELECT ALL ((((rt0.c2)==(rt0.c2))) NOT BETWEEN (((t1.c0)|(rt0.c0))) AND ((~ (t0.c81)))) FROM rt0;SELECT ALL (LIKELY(t0.c81) IN ()), t1.c0, ((NULLIF(DISTINCT rt0.c2, t1.c0))OR(COUNT(*))) FROM t1;SELECT ALL (t1.c0 IN ((rt0.c4 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))) FROM t1, t0;SELECT DISTINCT (rt0.c1 IN (CAST(rt0.c3 AS REAL))) FROM t1, t0 WHERE ('Q|3');SELECT DISTINCT (((0.9881349407913522, t1.c0, t0.c81)) NOT BETWEEN ((((((t0.c81)OR(rt0.c0)))OR(t1.c0)), (((rt0.c3))=((rt0.c0))), t0.c81 COLLATE RTRIM)) AND ((((((rt0.c4)AND(t0.c81)))AND(rt0.c3)), ((rt0.c4)+(rt0.c4)), t0.c81 COLLATE RTRIM))), (CASE WHEN rt0.c3 THEN -895694818 END IN ()), '#%4IF' FROM t0 NOT INDEXED, t1;SELECT ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN t0.c81 WHEN rt0.c2 THEN rt0.c3 ELSE t1.c0 END) AND (MAX(rt0.c3))) FROM t0, rt0;SELECT ALL CAST(((rt0.c3) IS FALSE) AS REAL) FROM t0;SELECT DISTINCT (((rt0.c3)IS(t0.c81)) IN ()) FROM rt0, t0, t1 WHERE (((((0.3944305451124406) NOT BETWEEN (NULL) AND ('l')))IS NOT(NULL))); -- 0ms;
SELECT DISTINCT (((((((((NOT (t0.c81)))OR(((rt0.c0) IS FALSE))))OR(rt0.c4)))AND(((rt0.c3) ISNULL))))OR(((t1.c0)GLOB(rt0.c1)))), (((((rt0.c3) NOT BETWEEN (t0.c81) AND (rt0.c1))))>=((((rt0.c0)==(rt0.c0))))), (((rt0.c4)) BETWEEN ((CASE t1.c0  WHEN '-961972332' THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)) AND ((((t0.c81) NOT BETWEEN (rt0.c2) AND (t0.c81))))), (((x'd0d85454' IN (rt0.c4))) NOT BETWEEN (((t0.c81)+(t1.c0))) AND (rt0.c0)), (rt0.c2 COLLATE RTRIM IN ()) FROM t0 WHERE (((1098487283 IN (0.1183641616704797)) IN ()));SELECT MIN((t0.c81 IN (t0.c81))), COUNT(CAST(t0.c81 AS BLOB) COLLATE NOCASE) OVER (), 125041789 FROM t0, t1; -- 0ms;
SELECT DISTINCT AVG(IFNULL(DISTINCT t0.c81, rt0.c4)) FROM rt0, t1, t0 WHERE ((~ ((-1442682660 IN (-164662528, '-1568260454'))))); -- 0ms;
SELECT ((((COUNT(*))AND(((rt0.c3)+(x'')))))AND('-1288670581')) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT ((((t1.c0) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE), AVG(((-0.0)IS(t0.c81))), (~ (rt0.c4)) COLLATE RTRIM, RANK() OVER (), (x'' IN (CASE rt0.c4  WHEN rt0.c3 THEN '' WHEN t0.c81 THEN rt0.c2 WHEN t1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN t1.c0 THEN rt0.c3 WHEN t0.c81 THEN rt0.c0 END, ((rt0.c4) IS TRUE))) FROM t1, t0;SELECT DISTINCT (((((rt0.c1, t0.c81, t1.c0, t0.c81, rt0.c2))>((rt0.c3, NULL, t1.c0, rt0.c3, rt0.c0))))IS NOT(((t0.c81)>=(rt0.c3)))) FROM t0 ORDER BY (((CASE rt0.c0  WHEN t0.c81 THEN '-349377699' ELSE rt0.c3 END, ((rt0.c2)<(rt0.c3)), COALESCE(DISTINCT rt0.c1, 'vwNzZ', x'', rt0.c2)))<(((rt0.c3 IN ()), (- (rt0.c0)), (- (rt0.c3)))))  NULLS FIRST;SELECT DISTINCT LIKE(rt0.c4 COLLATE BINARY, (rt0.c4 IN ()), '0') FROM rt0, t1, t0 LIMIT -2012810888; -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN (((rt0.c4)-(t1.c0))) AND ((NOT (t1.c0)))) FROM t1, t0, rt0 WHERE (NULL) LIMIT -356111406; -- 0ms;
SELECT t1.c0 FROM t1; -- 0ms;
SELECT DISTINCT ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c81)))AND(t1.c0)))AND(rt0.c0)))AND(((t0.c81)|(rt0.c2)))))OR(((rt0.c2) NOT NULL))))AND(CAST(rt0.c3 AS REAL))))AND((t0.c81 IN ()))) FROM t0, rt0 WHERE ((((~ (0.686330431131529))) IS TRUE)); -- 0ms;
SELECT (((((((rt0.c2)OR(x'30e6')))OR(rt0.c0)), (((rt0.c3))<>((t0.c81))), COUNT(x'')))<=(((((x'c34e', rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c4, t1.c0, rt0.c3)) AND ((rt0.c1, rt0.c1, rt0.c0))), x'', 830080202))), COUNT(JULIANDAY(rt0.c3, '', rt0.c3)) OVER ( PARTITION BY CASE rt0.c0  WHEN (t0.c81 IN (rt0.c4, t1.c0)) THEN ((rt0.c0)OR(rt0.c1)) END, CASE ((rt0.c4)OR(rt0.c2))  WHEN (~ (rt0.c2)) THEN NULL WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (t1.c0)) THEN CAST(rt0.c2 AS TEXT) WHEN ((((rt0.c4)AND(rt0.c2)))AND(NULL)) THEN ((t1.c0)>>('1509551448')) END RANGE BETWEEN CAST(((t0.c81) NOT BETWEEN (rt0.c3) AND (NULL)) AS INTEGER) FOLLOWING AND (((((((((+ (rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))OR(rt0.c3)))OR(STRFTIME(t0.c81, t0.c81, t1.c0))))OR(0.7853087520735264)) FOLLOWING EXCLUDE CURRENT ROW), ((SUBSTR(0.3449239545050895, rt0.c2))AND(MAX(rt0.c0))) FROM rt0, t0;SELECT ALL CAST((+ (rt0.c2)) AS BLOB) FROM rt0, t1 GROUP BY CAST((~ (rt0.c4)) AS TEXT), (NOT (rt0.c0)) COLLATE NOCASE, ((CAST(0xffffffffb4a8dd60 AS INTEGER))&(t1.c0)) HAVING ((('-T*q')) NOT BETWEEN ((rt0.c3 COLLATE NOCASE)) AND (((((rt0.c1))>=((rt0.c4)))))) ORDER BY ((t0.c81) BETWEEN (rt0.c0) AND (t0.c81)) COLLATE RTRIM;SELECT PERCENT_RANK() OVER () FROM t0 WHERE (((((((0.12075627950338552)OR(x'')))OR(-1.595537372E9))) NOT BETWEEN (((0.7567083206066475)&(x''))) AND (CASE '>Hd'  WHEN 0.19779195795959847 THEN NULL END))) LIMIT -1321672647; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0, rt0, t1; -- 0ms;
SELECT ALL ((CAST(rt0.c1 AS NUMERIC)) IS TRUE), ((ROUND(rt0.c3, 0.10359611784626332))-(((((rt0.c2)AND(rt0.c4)))AND(rt0.c2)))), (((((x'af1f')AND(rt0.c0)))AND(rt0.c3)) IN ((rt0.c3 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1, (((((rt0.c2))==((rt0.c0)))) NOT BETWEEN (t0.c81) AND (x'')), (- (LIKELIHOOD(rt0.c4, 0.019377542952062066))), ((0.4311545807382323) NOT NULL), ((((((((((rt0.c3)AND(-1.669546688E9)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c4))) NOT NULL) FROM rt0, t1 WHERE ((((0X72d3551f IN ('1049681981'))) NOT BETWEEN (((-1.29408937E8) IS FALSE)) AND (''))) LIMIT -920990969;SELECT DISTINCT TRIM(DISTINCT (- (rt0.c0)), LAST_INSERT_ROWID()) FROM t1, t0 WHERE (((((((((1.61130174E9)AND(NULL)))AND('-1175520245')))AND(((-1.261249486E9)%(x'')))))OR(((('>[EEO')) BETWEEN ((634627923)) AND (('548175047'))))));SELECT ALL IFNULL(DISTINCT x'', ((rt0.c3)OR(t0.c81))) FROM rt0, t0; -- 0ms;
SELECT ALL (+ (LIKELY(DISTINCT rt0.c0))), rt0.c2, (((~ (rt0.c4)))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)) FROM t1 INDEXED BY i75, t0 WHERE ((NOT (('Rj9' IN ()))));SELECT ALL TRIM(t0.c81, (- (rt0.c4))) FROM t0, rt0, t1 WHERE (CAST(((0X380abb5f) NOT BETWEEN ('-1720690238') AND ('-1525817852')) AS INTEGER)); -- 0ms;
SELECT DISTINCT '1098487283' FROM rt0, t1 WHERE ((NOT ((('Ữ)')GLOB(0.3697585344942481))))); -- 1ms;
SELECT DISTINCT CASE ((rt0.c2)&(rt0.c1))  WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c4)) THEN (((('635330387')OR(rt0.c4)))OR(rt0.c0)) ELSE ((rt0.c4) BETWEEN (rt0.c2) AND (t0.c81)) END FROM t0, rt0, t1 WHERE (((- (1477798084)) IN ())); -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c3 AS NUMERIC)) FROM t0 WHERE ((~ ('()' COLLATE BINARY)));SELECT ALL MIN('R瀹') FROM t0, rt0; -- 0ms;
SELECT ALL CAST('-670905156' AS REAL) FROM t1, rt0, t0; -- 0ms;
SELECT DISTINCT ((((((((((t1.c0)AND(rt0.c4)))OR(t1.c0)))OR(rt0.c0)))OR(t0.c81)))IS(t0.c81)) FROM rt0, t0, t1 ORDER BY ((((1.7976931348623157E308) IS TRUE)) ISNULL) DESC  NULLS LAST; -- 0ms;
SELECT ALL CAST(t1.c0 AS NUMERIC) COLLATE RTRIM, COUNT(((rt0.c2)+(t0.c81))) OVER ( ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN t1.c0 END)IS(((t1.c0)<=(t0.c81))))), json_array_length(ABS(DISTINCT t1.c0)) FROM t0, rt0 WHERE ((((NOT (0.13548447151197063))) NOT BETWEEN ((('272489872')||('-1261249486'))) AND (((0x5b68d19e)|(x'')))));SELECT rt0.c3 FROM t0, rt0 WHERE (CASE (- (NULL))  WHEN TRIM(NULL) THEN (-1359407836 IN ()) END); -- 0ms;
SELECT DISTINCT rt0.c4 FROM t0, rt0 WHERE (CAST(NULL AS INTEGER)) GROUP BY (('-1275536829') ISNULL), CAST(rt0.c2 AS REAL) COLLATE RTRIM COLLATE BINARY, ((542307182) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (((rt0.c4)>>(t0.c81)))); -- 1ms;
SELECT DISTINCT ((((rt0.c0)IS(rt0.c0)))/(LIKELY(rt0.c1))) FROM rt0 UNION SELECT DISTINCT GROUP_CONCAT(((rt0.c2)LIKE(rt0.c1))) FROM t1, t0 ORDER BY 7.59889844E8  NULLS LAST;SELECT ALL (-1811119485 IN (rt0.c4 COLLATE BINARY)), (((rt0.c0))=((t0.c81))) COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0)IS NOT(rt0.c2)) ELSE NULL END FROM rt0, t1, t0 WHERE (((((x'') NOT BETWEEN (NULL) AND ('x_6X9_sr')))+((('253552954') IS FALSE)))); -- 0ms;
SELECT DISTINCT CASE (rt0.c1 IN ())  WHEN ((((t1.c0)AND(rt0.c2)))OR(rt0.c1)) THEN (- (rt0.c0)) ELSE ((rt0.c3)>=(rt0.c1)) END FROM t0, t1 WHERE ((((x'')) BETWEEN ((CASE WHEN '' THEN NULL ELSE NULL END)) AND (((((0.40018757708292774, x'0ea7', 783793336))>((0xac3c29a, 1960270253, '')))))));SELECT ALL (((((((((((('')OR(((((rt0.c4)OR(rt0.c2)))AND('''b')))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END)))OR(UNLIKELY(x''))))AND(((((((((NULL)OR(x'')))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))))AND(rt0.c1)) FROM t0;SELECT ALL (NOT (rt0.c2)) COLLATE NOCASE, (~ (rt0.c2)) COLLATE BINARY, ((((t1.c0)OR(SUM(rt0.c4))))AND(MIN(rt0.c4))) FROM t1, rt0; -- 0ms;
SELECT GROUP_CONCAT(CAST(rt0.c3 AS INTEGER)), CAST(((t1.c0) BETWEEN (t0.c81) AND (rt0.c3)) AS NUMERIC), CAST(t0.c81 AS INTEGER) FROM rt0, t1, t0 WHERE (((CASE '-543533916'  WHEN x'' THEN x'' WHEN NULL THEN x'c095' WHEN 0.10399417063859118 THEN 0.2005149175650235 ELSE NULL END) NOT NULL)) GROUP BY (((((~ ('y鶠G-yyML0')))AND((- (rt0.c4)))))AND(CASE WHEN rt0.c1 THEN 0.7629062539494404 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN t1.c0 ELSE rt0.c3 END)), (((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) IN (SQLITE_VERSION())), (+ (((((((((t1.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))), (+ (t0.c81)), ((- (t0.c81)) IN (TRIM(DISTINCT rt0.c1), rt0.c3)); -- 0ms;
SELECT DISTINCT TOTAL(CAST(rt0.c1 AS REAL)) OVER (), '1533596062', ((AVG(rt0.c4)) NOT NULL) FROM t1, t0, rt0 WHERE ((- (((x'') BETWEEN (0.24117663679847134) AND (''))))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(0xffffffffbd3d7cb9 COLLATE RTRIM, 0.668490128308514) FROM t0, t1 WHERE (((CASE WHEN x'450b' THEN 0.3713582415766046 WHEN -164662528 THEN '1w{.' WHEN NULL THEN NULL ELSE '531069382' END) IS TRUE)); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, t1, t0; -- 0ms;
SELECT ALL (+ (NULL COLLATE BINARY)) FROM rt0, t1, t0; -- 0ms;
SELECT (((rt0.c0 IN (rt0.c2)))%(((rt0.c2)GLOB(t1.c0)))), CAST(rt0.c3 COLLATE BINARY AS NUMERIC), (((((rt0.c4, t0.c81, t1.c0)) NOT BETWEEN ((t1.c0, t0.c81, rt0.c3)) AND ((t1.c0, t0.c81, rt0.c0))))==(((t0.c81) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM t1, rt0 INDEXED BY i8 WHERE (CASE WHEN ((('-670617734')) NOT BETWEEN ((NULL)) AND ((x''))) THEN (NULL IN (5.42307182E8)) END) LIMIT 737894646;SELECT DISTINCT (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((-1442682660 COLLATE NOCASE, (((rt0.c3)) BETWEEN ((t1.c0)) AND ((347501756))), (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c81))))) AND ((((0.7341649609488149)IS(t1.c0)), t1.c0, t1.c0 COLLATE NOCASE))) FROM rt0 WHERE (((IFNULL(x'', x''))IS((NOT ('-1955316077')))));SELECT DISTINCT ((0.1528835913320551) NOTNULL) FROM t1, t0, rt0 GROUP BY CAST(LIKELY(rt0.c0) AS TEXT); -- 1ms;
SELECT DISTINCT ((((t0.c81) IS TRUE))<<(((rt0.c0)<>(rt0.c0)))), ((t1.c0 IN (t1.c0)) IN ()), AVG(NULL COLLATE RTRIM) OVER ( PARTITION BY (NOT (((((rt0.c4)AND(rt0.c4)))AND(rt0.c2)))), ((((((rt0.c4, t0.c81, rt0.c2))>((x'9727efe1', rt0.c4, x''))), (- (rt0.c2)), (((rt0.c0))<>((rt0.c2)))))>=((((rt0.c2) NOT NULL), x'd655', CASE WHEN rt0.c2 THEN rt0.c3 END)))) FROM t1, t0, rt0 WHERE (CASE CAST(NULL AS TEXT)  WHEN CASE NULL  WHEN 'A9X' THEN 'Q' ELSE x'' END THEN CASE 0.3040960894685225  WHEN NULL THEN x'e899' ELSE 0.14055906933846918 END END); -- 1ms;
SELECT ALL COUNT(*) OVER (), rt0.c2, CASE WHEN CAST(rt0.c2 AS REAL) THEN t0.c81 COLLATE BINARY END FROM t0, t1, rt0 WHERE (((('0.6298922258930241')) BETWEEN (((((0.33457175576477716, '', '1102458880'))<(('F', 0x1663349f, x''))))) AND ((((0.04565609507755031) IS TRUE))))); -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM rt0, t1, t0 WHERE ((('-1597666733' COLLATE BINARY)&((('1999172868') IS TRUE)))); -- 0ms;
SELECT ((+ (NULL)) IN (((rt0.c0)<(t1.c0)))) FROM rt0 ORDER BY rt0.c1 DESC, TRIM(DISTINCT (rt0.c4 IN (rt0.c3, rt0.c2)), NULL);SELECT (((rt0.c4, rt0.c0, -977500087)) NOT BETWEEN (((rt0.c1 IN ()), json_valid(rt0.c2), CAST(rt0.c2 AS INTEGER))) AND ((x'22559fc7', ((rt0.c0)<(rt0.c0)), NULL))), LIKELY(COUNT(t1.c0)), COUNT(*) FROM t1, rt0; -- 0ms;
SELECT (NOT (MAX(t0.c81))) FROM rt0;SELECT GROUP_CONCAT((rt0.c2 IN ())) OVER (), ((CAST(t0.c81 AS INTEGER))+(TYPEOF(DISTINCT rt0.c1))), rt0.c0 FROM t0, t1;SELECT ALL CAST((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((t1.c0))) AS BLOB) FROM t1;SELECT DISTINCT CAST(CASE t0.c81  WHEN rt0.c4 THEN t1.c0 ELSE rt0.c1 END AS REAL) FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM t1;SELECT (~ (((((((((rt0.c0)AND(t0.c81)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))) FROM t1;SELECT ALL (- ((~ (rt0.c2)))) FROM t0 WHERE ((+ (((x'')=(NULL))))) GROUP BY ((((t0.c81)OR(rt0.c2)))AND(rt0.c2)) COLLATE RTRIM, (((NULL) ISNULL) IN ()), x'';SELECT DISTINCT (NOT (((((rt0.c2)OR(rt0.c3)))AND(rt0.c4)))), ((('' IN ()))>=((rt0.c0 IN ()))), ((CAST(rt0.c3 AS NUMERIC)) NOT NULL) FROM rt0, t1, t0 WHERE (CASE WHEN (- (0.8170031412941818)) THEN (('34^')AND('')) END); -- 0ms;
SELECT DISTINCT ((json_type(rt0.c4)) BETWEEN (json_array(rt0.c0, t0.c81, rt0.c0, t1.c0, rt0.c3, x'', t0.c81, t1.c0)) AND (NULL)) FROM t0, rt0;SELECT DISTINCT ((((t0.c81) IS TRUE))IS NOT(((rt0.c4)AND(rt0.c2)))) FROM rt0, t0 WHERE (CASE ((((0.7899353572598933)AND(0x6118f6a4)))AND('-904028690'))  WHEN LIKELIHOOD(DISTINCT '', 0.7982023799496278) THEN x'd34b' END); -- 0ms;
SELECT DISTINCT NULLIF(CASE WHEN rt0.c2 THEN x'd2fe' END, t1.c0 COLLATE RTRIM), SUM(((rt0.c3) BETWEEN (rt0.c4) AND (t0.c81))), RANK() OVER () FROM t0, rt0 WHERE (((((('2059046575') NOTNULL)))<=(('Tt*cPf\r\-')))) GROUP BY CAST((+ (t1.c0)) AS REAL);SELECT DISTINCT NTH_VALUE(NULL, ((((((t0.c81)AND(t0.c81)))AND(t1.c0))) NOT BETWEEN ((x'' IN ())) AND (CASE WHEN t0.c81 THEN 5.48175047E8 ELSE t0.c81 END))) OVER ( ROWS BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN NULL WHEN t0.c81 THEN rt0.c1 END)=((rt0.c4 IN (rt0.c0)))) PRECEDING AND CAST((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((0.6703858620518546))) AS REAL) PRECEDING), CAST(rt0.c1 COLLATE BINARY AS INTEGER), ((t0.c81)>('634627923')) COLLATE NOCASE FROM t1, t0 LIMIT -944757038 OFFSET -1275536829;SELECT (((((((((rt0.c0 IN ()))OR(GROUP_CONCAT(rt0.c3))))OR(rt0.c2 COLLATE BINARY)))OR(((rt0.c3)<(t1.c0)))))OR((t1.c0 IN ()))), rt0.c3, (rt0.c0 COLLATE NOCASE IN ()) FROM t0;SELECT ((((rt0.c2)%(rt0.c1)))*(((rt0.c4)/(t1.c0)))) FROM t0;SELECT DISTINCT LEAD(((((rt0.c1)>(rt0.c4))) NOTNULL), ((((ABS(rt0.c3))OR(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c4)))AND(t1.c0)))))OR(((rt0.c3) IS TRUE))), (t1.c0 COLLATE NOCASE IN ())) OVER () FROM rt0, t0, t1 WHERE (((((0.9126489170311267) NOTNULL))|(0x2d5a7317))); -- 0ms;
SELECT ALL CAST((((x''))<=((rt0.c3))) AS TEXT), AVG(((rt0.c3)-(rt0.c1))) OVER (), CAST(CAST(rt0.c0 AS TEXT) AS TEXT) FROM t0 WHERE (1449164240);SELECT ALL ((rt0.c1) BETWEEN (t0.c81) AND (rt0.c2)) COLLATE NOCASE FROM t1, t0, rt0; -- 0ms;
SELECT ALL (('X')IS(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))) FROM t1, t0 WHERE (CAST(((NULL) NOT BETWEEN (x'52e7') AND ('')) AS BLOB));SELECT DISTINCT ((rt0.c4 COLLATE RTRIM) IS TRUE), AVG((+ (rt0.c0))), CAST(rt0.c2 COLLATE NOCASE AS INTEGER) FROM t0, rt0, t1 WHERE (((((((((((x'4c27')OR(x'')))OR(x'')))AND(NULL)))AND('1414620275'))) NOT BETWEEN ((+ (x'cfa0'))) AND (((x'49ed')GLOB('\n\'))))); -- 0ms;
SELECT DISTINCT t1.c0, ((((t1.c0) IS TRUE)) IS TRUE), (HEX(rt0.c4) IN (((rt0.c2)*(rt0.c4)), ((((rt0.c4)OR(rt0.c2)))OR(t1.c0)))) FROM t1, t0, rt0 WHERE (((0.659372557843976 IN ()) IN ())) GROUP BY CAST(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)) AS NUMERIC); -- 0ms;
SELECT ((((t0.c81)OR(t0.c81)))>>(0.5264046968848345)) FROM t0, rt0, t1 WHERE (((CASE x''  WHEN x'a7e7' THEN NULL WHEN x'' THEN NULL WHEN x'' THEN x'dbb0' END)>((('') NOT BETWEEN (x'e1f7') AND (0.7086318573648778))))); -- 0ms;
SELECT ALL ((((t0.c81)OR(((rt0.c4)<=(t0.c81)))))AND(CASE rt0.c1  WHEN t0.c81 THEN rt0.c4 END)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)&(rt0.c1))) IS FALSE) FROM rt0, t0, t1 WHERE (((((0.76324300806179)IS(NULL))) BETWEEN ((0.6276807154631465 IN ())) AND (json_patch(-1865693123, x''))));SELECT DISTINCT CAST(CAST(rt0.c4 AS TEXT) AS NUMERIC) FROM t1, t0, rt0 INDEXED BY i75 WHERE (CAST(('g' IN ()) AS TEXT)) ORDER BY ((rt0.c0 COLLATE BINARY)>>(((rt0.c1) IS TRUE)));SELECT ALL CAST(((rt0.c3) ISNULL) AS REAL) FROM t0 GROUP BY ((((rt0.c1)GLOB(rt0.c2))) BETWEEN (((((x'ffce')OR(rt0.c2)))OR(t1.c0))) AND (('' IN ()))), (((~ (rt0.c2))) IS FALSE), ((CAST(rt0.c4 AS NUMERIC))!=((t0.c81 IN ())));SELECT DISTINCT FIRST_VALUE(t1.c0) OVER (), CAST((t1.c0 IN ()) AS REAL), t1.c0 FROM t0, t1 WHERE (((((((((((x'')AND('')))AND(0xffffffff8b53f0c2)))OR(x'')))AND('hll')))%(-1260337300 COLLATE RTRIM))); -- 0ms;
SELECT 0.5237708548664536, AVG(((NULL) BETWEEN (rt0.c4) AND (t0.c81))), CAST(0.11152196760319277 AS INTEGER) FROM t1 WHERE ((NOT (CASE -2.33972074E8  WHEN 0x6ec5f6a7 THEN 0.7277267413069789 END)));SELECT ALL CASE WHEN AVG(t1.c0) THEN (rt0.c3 IN ()) END FROM t0, t1, rt0 NOT INDEXED; -- 0ms;
SELECT CASE WHEN CAST(rt0.c2 AS REAL) THEN -1499136543 END, ((0.8086736111343344)==(((rt0.c0) NOT NULL))), json_quote(t0.c81) FROM rt0 ORDER BY (((rt0.c2 IN ()))/(rt0.c1))  NULLS LAST, ((((rt0.c1))>((rt0.c4))) IN ()) DESC  NULLS LAST, (NOT (((rt0.c3) ISNULL))) ASC;SELECT ALL (((rt0.c1 IN ())) ISNULL) FROM t0, t1 WHERE ((((0.8086736111343344 IN ())) NOT NULL)); -- 0ms;
SELECT (CAST(rt0.c4 AS NUMERIC) IN ()) FROM t0 WHERE (CASE WHEN ((0.8559177423764973)AND(x'27c1')) THEN ((0.6773833362456526) NOT BETWEEN (7.17192281E8) AND (0.6434218295924616)) WHEN ((1368157167)AND(0.2016558731513668)) THEN CAST(x'971f' AS NUMERIC) WHEN CAST('.t' AS TEXT) THEN NULL END) GROUP BY ((((0Xffffffffbffe015f) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c0)OR(0.12871178647914328)))OR(rt0.c2))) AND (((t1.c0)*(rt0.c4)))) HAVING TOTAL(CAST(t0.c81 AS BLOB));SELECT DISTINCT ((((rt0.c4)LIKE(t1.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c0 IN (t1.c0)))) FROM t0 WHERE ((NULLIF(0.7025827431919266, 347730895) IN ('' COLLATE RTRIM, CAST('0.9983958981245138' AS REAL), 0.3240577332290999 COLLATE RTRIM)));SELECT DISTINCT (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)) AND ((load_extension(rt0.c2)))), CAST(TRIM(DISTINCT rt0.c1, rt0.c3) AS NUMERIC), (((t0.c81)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) COLLATE NOCASE COLLATE NOCASE FROM t0;SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c1 END)!=(ABS(DISTINCT rt0.c0))) FROM t0, rt0, t1 WHERE (((((CAST('2113736669' AS BLOB))AND(CASE x''  WHEN x'' THEN 'v<' END)))AND(((x'227f')LIKE(NULL))))); -- 0ms;
SELECT DISTINCT t1.c0, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))) IS TRUE), COUNT(*) FROM t0, rt0, t1 INDEXED BY i75 WHERE (((NULL COLLATE NOCASE) NOT NULL));SELECT ((((((rt0.c1)AND(t0.c81)))AND(t0.c81)))|(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN t0.c81 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN t1.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)), (((((rt0.c1))<>((t0.c81))))+(NULLIF(rt0.c3, t0.c81))), rt0.c1 FROM t0, t1, rt0 WHERE ((((- (NULL))) NOT BETWEEN (((((((((NULL)OR('*w3')))OR(1.231508653E9)))AND(x'')))OR('P|M\n_WGY}'))) AND (('-1343860154' IN ('1212991088'))))); -- 0ms;
SELECT DISTINCT ((((t0.c81) NOT BETWEEN (t0.c81) AND (rt0.c2)))=(rt0.c4)) FROM t1, rt0, t0 WHERE ((('S4[\ruOL]S') ISNULL)) ORDER BY ((((rt0.c0)OR(((0.2327730385715615)/(rt0.c3)))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t1.c0)AND((rt0.c2 IN ()))))OR((+ (t1.c0)))) FROM t1, rt0, t0; -- 0ms;
SELECT ((((((((rt0.c0)AND(t1.c0)))OR(t0.c81)))AND(CASE t0.c81  WHEN NULL THEN rt0.c4 END)))OR(rt0.c1 COLLATE NOCASE)) FROM t1, rt0;SELECT DISTINCT (((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, t1.c0)) AND ((rt0.c4, t1.c0, rt0.c0))))LIKE(t0.c81 COLLATE RTRIM)) FROM t0, rt0, t1; -- 0ms;
SELECT (((t1.c0 IN ()))/(((rt0.c1) NOT BETWEEN (t1.c0) AND (t0.c81)))) FROM t1 NATURAL JOIN rt0 WHERE ((((((']w㺚?F^R%D')OR('0.6335864001965844')))OR('1930389042')) IN ()));SELECT DISTINCT ((t1.c0 COLLATE BINARY)>>(CASE WHEN rt0.c2 THEN NULL WHEN rt0.c1 THEN 0.23979681254805907 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c81 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)), ((((rt0.c2) NOTNULL)) ISNULL), rt0.c3 FROM rt0, t1 WHERE ((((((('-1385403578') NOT BETWEEN (x'') AND (0.8086736111343344)))OR(-294345715)))AND(((NULL) NOT BETWEEN (NULL) AND ('')))));SELECT ALL (((((t1.c0 IN (rt0.c4)))AND(SUM(rt0.c4))))AND(NULL)) FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT (+ ((('2059046575') ISNULL))) FROM rt0, t1 LIMIT -801141435; -- 0ms;
SELECT ALL (- (((rt0.c1)>>(t1.c0)))) FROM t1, rt0 INDEXED BY i1 WHERE (LTRIM(((((((((NULL)OR('N|''')))OR(NULL)))AND(0.17047080231256917)))AND(NULL))));SELECT DISTINCT SUM(((rt0.c3) BETWEEN (rt0.c0) AND (t0.c81))) OVER () FROM t1, rt0;SELECT DISTINCT (((rt0.c1)||('-1597666733')) IN ()) FROM rt0 CROSS JOIN t1 ON LAST_INSERT_ROWID() WHERE ((NOT (CASE x'c656'  WHEN x'' THEN 'K	ꦷP3>' END))); -- 0ms;
SELECT DISTINCT (((CAST(rt0.c3 AS BLOB), t0.c81, CASE WHEN rt0.c2 THEN NULL END))<((rt0.c4 COLLATE NOCASE, t0.c81, GLOB(rt0.c1, rt0.c2)))) FROM rt0, t0, t1 ORDER BY (((t1.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (t0.c81) AND (rt0.c0)))) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END)))  NULLS LAST, ((((((((((rt0.c0)*(rt0.c2)))AND(json_array_length(x'', rt0.c3))))OR(LIKELIHOOD(rt0.c0, 0.09395258070274559))))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))AND(((rt0.c1)IS(rt0.c4))));SELECT ((0.33267966012214445)|(LOWER(rt0.c3))) FROM rt0 WHERE (CASE ((x'') NOT BETWEEN ('FgBﾴ{(vp	') AND (NULL))  WHEN CASE '\d'  WHEN 0X7165626f THEN 0.4390065559045043 ELSE 0.010205894071472321 END THEN '' COLLATE BINARY WHEN ((x'8255')==('1154680313')) THEN CAST(1095843235 AS INTEGER) WHEN 732096894 COLLATE NOCASE THEN CASE WHEN x'' THEN '&3wehCNV' ELSE x'' END ELSE (('387782258')<<(x'')) END); -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c0) IN ()) FROM t0 WHERE (CASE -1.64662528E8  WHEN CAST(457271396 AS INTEGER) THEN ((x'')||('-129408937')) ELSE ((0.3957231440696136) NOT BETWEEN ('476292688') AND (x'')) END) GROUP BY CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c3)>>(rt0.c0)) ELSE CAST(rt0.c1 AS REAL) END;SELECT DISTINCT GROUP_CONCAT(((rt0.c1)LIKE(rt0.c2))) FILTER(WHERE (((t1.c0)-(rt0.c3)) IN ())) OVER ( ORDER BY (((((((((((((rt0.c3)OR(t1.c0)))AND(t1.c0)))OR(rt0.c0)))AND(t1.c0)))OR(t1.c0)))OR(x'')) IN ()), (((((+ (rt0.c3)))OR(CAST(t0.c81 AS REAL))))OR(CAST(rt0.c0 AS NUMERIC)))), ((((rt0.c3)-(rt0.c0)))=('')), ((((((((((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))OR((((t0.c81, rt0.c4, rt0.c3, rt0.c3, t1.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c4, rt0.c2, t0.c81)) AND ((rt0.c1, rt0.c3, rt0.c1, rt0.c1, rt0.c2))))))AND((~ (rt0.c1)))))AND(CASE WHEN t1.c0 THEN 0X4af0493d ELSE rt0.c0 END)))OR((((rt0.c0, t0.c81, rt0.c1)) NOT BETWEEN ((t1.c0, rt0.c2, x'')) AND ((rt0.c0, rt0.c2, rt0.c1))))) FROM rt0;SELECT DISTINCT GROUP_CONCAT(rt0.c0) OVER () FROM rt0, t0, t1 WHERE (((NOT (0X1e87053a)) IN ())) GROUP BY ((((CAST(x'' AS TEXT))OR(((rt0.c0) NOT BETWEEN (x'66ed') AND (rt0.c0)))))OR(((rt0.c4) ISNULL))); -- 1ms;
SELECT ALL ((CAST(rt0.c1 AS REAL)) IS FALSE) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT TOTAL((((('')OR(rt0.c2)))OR(t0.c81))) FROM t0, rt0, t1; -- 0ms;
SELECT ALL STRFTIME(TIME(' bMZ', '-2104728648', ''), (((rt0.c1))>=(('S쓹+^'))), ((((t0.c81)OR(rt0.c4)))OR(rt0.c1))) FROM t0 WHERE (CAST(((x'')LIKE('1966241650')) AS INTEGER));SELECT ((t1.c0) IS TRUE) COLLATE BINARY, ((((t1.c0) BETWEEN (rt0.c1) AND (rt0.c3)))||(LOWER(DISTINCT rt0.c2))), rt0.c4 FROM rt0, t1, t0 WHERE (((CASE WHEN 0X1e57ecd6 THEN 0.04749557009436334 WHEN '-553539023' THEN 'khْr}Rxw' WHEN '' THEN x'' END)GLOB(0.1252904613358402))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)*(rt0.c0)))>>(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 END)) FROM t0 WHERE ((((- (NULL)))GLOB(((NULL)<<(NULL)))));SELECT DISTINCT ((((rt0.c4) IS TRUE))<=(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN t1.c0 THEN rt0.c4 WHEN '-196575947' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN t0.c81 WHEN t0.c81 THEN rt0.c3 ELSE rt0.c2 END)) FROM rt0, t0;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)!=((+ (rt0.c0)))) FROM t1 WHERE (0.7742945964972765);