-- Time: 2024/06/07 09:34:31
-- Database: database93
-- Database version: 3.40.0
-- seed value: 777867393
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INT , +c4 BLOB ); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c4) VALUES (NULL, NULL); -- 0ms;
ANALYZE main; -- 8ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES (NULL, 0.25834983633022623); -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4) VALUES (x''); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('-2074723648', -2.074723648E9); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c0, c3, c1, c2) VALUES (x'2b7d1dfe', x'', '261991329', '', -2074723648); -- 0ms;
DELETE FROM rt0; -- 9ms;
INSERT OR REPLACE INTO rt0(c3) VALUES (0.7516661104248831); -- 12ms;
PRAGMA ignore_check_constraints; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x'ee32'); -- 13ms;
END; -- 1ms;
UPDATE OR REPLACE rt0 SET c1=x'', c4=NULL, c3=NULL WHERE ((((rt0.c3)-(rt0.c0))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c3))) AND (((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)))); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
VACUUM; -- 13ms;
INSERT OR ABORT INTO t0 VALUES ('-2074723648'), (NULL), (x''), ('ﬆﬆࠊl'), ('-2074723648'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='', c0=0.7516661104248831; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA incremental_vacuum(1076380783); -- 2ms;
CREATE UNIQUE INDEX i21 ON t0(NULL ASC); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (x''); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 BEGIN DELETE FROM t0;END; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (265878278, NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0xfd8fb06); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2, c4) VALUES (x'57c8', NULL, NULL, '1076380783'), ('k!YWH', -240069213, NULL, '&RvVfv'), ('EC', 0.25834983633022623, 0.6419703078656558, '481086212'); -- 1ms;
UPDATE rt0 SET (c4)=(x'd83a4902') WHERE (((rt0.c3 IN ()))IS NOT(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)); -- 1ms;
UPDATE OR IGNORE t0 SET c0='0.25834983633022623' WHERE (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))*(CASE t0.c0  WHEN t0.c0 THEN 0.36475067666553107 END)); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.04861159808318405, c4=0.7516661104248831; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.8001257682748032); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('B'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c78; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE (rt0.c2 IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('2083585644', -2.40069213E8, NULL, NULL, x''); -- 0ms;
CREATE INDEX IF NOT EXISTS i16 ON t0((c78 IN (c78, c78)) COLLATE RTRIM ASC) WHERE (c78 IN ((((c78))<=((c78))), CASE x''  WHEN '0.0' THEN c78 END)); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 1ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-90076015 unordered noskipscan'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET c78='0.36475067666553107' WHERE (+ ('620151550')); -- 0ms;
ROLLBACK TRANSACTION; -- 8ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
ALTER TABLE t0 ADD COLUMN c92 REAL; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'6f99', NULL); -- 0ms;
UPDATE t0 SET c0='' WHERE (((CAST(t0.c0 AS NUMERIC)))!=((((t0.c92)<=(t0.c0))))); -- 0ms;
REINDEX; -- 0ms;
DROP INDEX "i21"; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
CREATE INDEX IF NOT EXISTS i82 ON t0(c0,(((c92)) NOT BETWEEN ((c0)) AND ((c92))) COLLATE BINARY COLLATE NOCASE DESC); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (NULL, NULL); -- 0ms;
REINDEX  rt0; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 2ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c92, c0)=(x'', x'11c88c68', 2.61991329E8) WHERE ABS(((((t0.c0)OR(t0.c92)))AND(t0.c92))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'dd80' IN (NULL)) THEN COALESCE(DISTINCT '620151550', '-240069213') END; -- 0ms;
UPDATE OR IGNORE t0 SET c0='ﬆﬆࠊl'; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c4, c0, c3, c1) VALUES ('0.04861159808318405', NULL, NULL, NULL, 0.4345314473875109); -- 0ms;
INSERT OR ROLLBACK INTO t0(c92) VALUES (2.65878278E8); -- 0ms;
UPDATE OR IGNORE t0 SET (c92, c92)=('皅C~HG싾2\nu', 0.704182717961294) WHERE (((0.8150694893753927, t0.c92, t0.c0)) BETWEEN (((t0.c0 IN ()), ((t0.c0) BETWEEN (t0.c0) AND (t0.c92)), (t0.c0 IN ()))) AND (((t0.c0 IN (t0.c0)), ((t0.c92)LIKE(t0.c92)), ((t0.c92) NOT BETWEEN (t0.c0) AND (0.2918204176294301))))); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c3, c0, c4, c2) VALUES (x'', NULL, 'f0!T靔賒N', NULL); -- 5ms;
INSERT OR ABORT INTO t0 VALUES ('1166970725', '344887149'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE t0; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR REPLACE t0 SET (c92, c92)=('-382241147', 'Ci') WHERE 'zMF'; -- 0ms;
END; -- 0ms;
INSERT OR ABORT INTO t0(c0, c92) VALUES ('', 0xfffffffffaa18c91); -- 2ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, 0.7402808466213425); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.4315205503073628); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c2, c4, c0) VALUES (NULL, NULL, 0.1229320313731026, '0.7516661104248831'), (NULL, 'tsd%f', '-758883688', NULL), (NULL, 'qPWUJLl7', 0.1847894365697451, NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c92) VALUES ('2083585644'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c92 TO c94; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c94) VALUES (0.2984019048444301, ''); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((((((((((((NULL)OR(x'53d3')))OR(t0.c94)))AND(rt0.c2)))OR(NULL)))AND(rt0.c3)))OR(rt0.c0)) IN ()) FROM t0 WHERE (0.04781254134635826); -- 0ms;
SELECT ALL -1967311108 FROM rt0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c0 AS BLOB) THEN rt0.c0 ELSE CAST(t0.c0 AS NUMERIC) END FROM rt0;SELECT ALL CAST(CAST(t0.c0 AS NUMERIC) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT (- (((rt0.c1)IS(rt0.c2)))) FROM rt0; -- 0ms;
SELECT ALL rt0.c3 COLLATE RTRIM FROM t0 WHERE ((('_' COLLATE BINARY)+((+ (0.21016600812591668)))));SELECT ALL ((((rt0.c4)||(t0.c94))) IS FALSE) FROM t0;SELECT ALL (((rt0.c1 IN (rt0.c4)))/((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))) FROM rt0 WHERE ((((-1573604888)) BETWEEN (((('-90076015') IS FALSE))) AND ((((x'')|(x'72c9')))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(rt0.c3)))>>(CASE WHEN 0Xffffffffe77873fb THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END)) FROM t0 RIGHT OUTER JOIN rt0 ON t0.c0 GROUP BY (+ (rt0.c3 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((((NOT (rt0.c2))))==(((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))))) FROM rt0 WHERE (CAST(CAST(0.2521499746745621 AS BLOB) AS INTEGER)); -- 0ms;
SELECT ((rt0.c0) BETWEEN (((t0.c0)>>(t0.c0))) AND (LOWER(DISTINCT rt0.c0))), 0.5232071263390548, AVG((- (rt0.c4))) OVER ( PARTITION BY (((rt0.c4)==(rt0.c3)) IN ()), (NOT ((('-411536389') IS FALSE)))) FROM rt0, t0; -- 0ms;
SELECT ALL ((rt0.c2)<(rt0.c3)) COLLATE NOCASE FROM rt0, t0 LIMIT -1261361029 OFFSET 880954199; -- 0ms;
SELECT DISTINCT -1455208403 FROM rt0, t0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM t0, rt0 LIMIT 1089354306; -- 0ms;
SELECT ((rt0.c1 COLLATE NOCASE)OR(rt0.c2 COLLATE BINARY)) FROM t0 ORDER BY (((rt0.c4 IN ())) NOT NULL) ASC, (~ ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))));SELECT DISTINCT (+ ((t0.c94 IN ()))) FROM t0; -- 0ms;
SELECT MAX(CAST(rt0.c1 AS NUMERIC)) FROM t0, rt0; -- 1ms;
SELECT ALL CAST((((rt0.c0))!=((t0.c0))) AS BLOB) FROM t0, rt0 WHERE (CASE WHEN IFNULL(DISTINCT 0.7539936881956192, '308516692') THEN ((NULL)<<(NULL)) ELSE ((0xffffffff9cc91eab) BETWEEN ('-382241147') AND (x'bf8c')) END); -- 0ms;
SELECT ((rt0.c2)||(t0.c94)) COLLATE BINARY COLLATE BINARY FROM rt0, t0 WHERE (((((+ (''))))<=((CAST('1076380783' AS TEXT))))); -- 0ms;
SELECT ALL ((((((t0.c0)>>(rt0.c1)))OR((t0.c94 IN ()))))OR(UPPER(rt0.c1))) FROM t0;SELECT DISTINCT ((((516267902)LIKE(rt0.c3)))IS NOT((rt0.c3 IN ()))) FROM rt0, t0 WHERE (((((NULL)>(NULL))) ISNULL)); -- 4ms;
SELECT DISTINCT -446025036 FROM rt0, t0; -- 0ms;
SELECT ALL ((((t0.c0) IS TRUE))IS(x'7837')) FROM t0, rt0; -- 0ms;
SELECT ALL ((rt0.c4 COLLATE BINARY)GLOB(x'c0ba')) FROM rt0, t0 WHERE (CAST(((x'19cf') BETWEEN (NULL) AND ('')) AS TEXT)); -- 0ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL ((((t0.c0) NOT NULL))GLOB(CASE x'c084'  WHEN t0.c0 THEN rt0.c4 ELSE rt0.c0 END)) FROM t0, rt0 ORDER BY ((t0.c0 COLLATE RTRIM) BETWEEN ((~ (rt0.c0))) AND (((rt0.c0) NOT NULL))); -- 0ms;
SELECT ALL (((t0.c94)) BETWEEN ((0.428837936559771 COLLATE BINARY)) AND (((((t0.c94, rt0.c3, t0.c94))<((t0.c0, rt0.c4, -833398159)))))) FROM rt0, t0; -- 0ms;
SELECT LAG(((CAST('-382241147' AS REAL))>=(((((((((t0.c0)AND(t0.c94)))OR(t0.c0)))AND(t0.c94)))AND(t0.c0)))), CAST(CHANGES() AS NUMERIC), ((t0.c0) BETWEEN (t0.c94) AND (t0.c94)) COLLATE RTRIM COLLATE RTRIM) OVER () FROM t0; -- 0ms;
SELECT TRIM(DISTINCT rt0.c0 COLLATE RTRIM), (((rt0.c2)) BETWEEN ((((t0.c0)>=(t0.c0)))) AND ((rt0.c2))), ((AVG(rt0.c3)) NOTNULL) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (NOT (GROUP_CONCAT(rt0.c3))) FROM rt0, t0; -- 0ms;
SELECT ALL (NOT (CAST(rt0.c0 AS INTEGER))) FROM t0, rt0 WHERE (((('-767289552')) BETWEEN ((((0.1229320313731026)>>(x'')))) AND ((((x'') BETWEEN (NULL) AND (0.8150694893753927)))))); -- 0ms;
SELECT DISTINCT (((((rt0.c3, rt0.c3, rt0.c2))>((rt0.c1, rt0.c4, t0.c0))))%(t0.c94)), CUME_DIST() OVER (), CASE WHEN ((rt0.c3)<<(t0.c94)) THEN ((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)) ELSE TRIM(t0.c94) END FROM t0, rt0 WHERE (CAST(((NULL)LIKE('0.7539936881956192')) AS INTEGER)); -- 0ms;
SELECT ALL CAST(((t0.c0) NOT NULL) AS BLOB) FROM t0, rt0 GROUP BY ((((rt0.c4)&(0.06364589258998987))) NOT BETWEEN (((rt0.c3)IS(t0.c94))) AND (('1166970725' IN (rt0.c1)))), rt0.c0, NULL; -- 0ms;
SELECT ALL CASE ''  WHEN rt0.c1 THEN (~ (rt0.c4)) WHEN (rt0.c2 IN ()) THEN CAST(t0.c94 AS BLOB) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) THEN UPPER(DISTINCT rt0.c1) END FROM t0, rt0 NOT INDEXED; -- 0ms;
SELECT ALL SUM(CAST(rt0.c0 AS NUMERIC)) OVER ( ORDER BY ((((- (rt0.c4))))<=((LIKELY(DISTINCT rt0.c0)))), (((('-1573604888')-(rt0.c3))) NOT NULL)  NULLS FIRST), LTRIM(x''), CASE ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))  WHEN rt0.c1 COLLATE NOCASE THEN json_array_length(rt0.c3) END FROM rt0 WHERE (ABS(DISTINCT ((x'4b0c33f8')>('-2074723648'))));SELECT ALL TRIM(DISTINCT GROUP_CONCAT(t0.c94), (t0.c0 IN ())), CAST(t0.c0 AS INTEGER), NULL FROM t0 WHERE ((((((((((((0.013391135662666143, 'au1])H', '0.013391135662666143')) NOT BETWEEN ((0.7653764083056772, x'', '516267902')) AND ((NULL, 0.7775439125083693, 0.21016600812591668))))AND(((x'')+(x'')))))OR((0.06364589258998987 IN ()))))AND('-767289552')))AND((NOT (0X6d0ef803))))); -- 0ms;
SELECT ((((t0.c94, t0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, t0.c94, rt0.c1)) AND ((NULL, t0.c0, rt0.c2))) IN ()) FROM t0; -- 0ms;
SELECT rt0.c0 FROM t0, rt0 WHERE ((~ (0.19651156534449654 COLLATE NOCASE))); -- 0ms;
SELECT ALL AVG(CASE WHEN t0.c0 THEN t0.c94 WHEN rt0.c3 THEN t0.c94 WHEN '2,*' THEN rt0.c2 END) FROM t0;SELECT DISTINCT (json_valid(rt0.c4) IN ()), ((((((((((((CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END)OR(SUM(rt0.c3))))AND(CAST(rt0.c4 AS TEXT))))AND((((t0.c0)) NOT BETWEEN (('\t>EdEFB.')) AND ((rt0.c3))))))AND(rt0.c3 COLLATE NOCASE)))AND((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND((~ (rt0.c4)))), 0.34330100732581226 FROM t0, rt0 WHERE ((-1.27454207E9 COLLATE NOCASE IN (((0.5746712603634685) IS TRUE)))); -- 0ms;
SELECT DISTINCT NULL, RANK() OVER (), ((((rt0.c1) IS FALSE))OR(CAST(rt0.c0 AS REAL))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT AVG(CASE WHEN rt0.c4 THEN rt0.c1 END COLLATE NOCASE), CUME_DIST() OVER (), rt0.c0 FROM t0;SELECT DISTINCT CAST(UNLIKELY(DISTINCT rt0.c3) AS INTEGER), DATETIME(CAST(rt0.c2 AS INTEGER), json_patch(t0.c94, NULL), (((1232632502))==((t0.c0)))), CASE rt0.c3  WHEN '0.2984019048444301' THEN CAST(t0.c94 AS REAL) END FROM rt0 INDEXED BY i82 WHERE (DATETIME('1089354306', 0.4829018019744029, ((x'')!=(x'd6129b67')), (-582808941 IN ()), (x'5d4b' IN ())));SELECT DISTINCT ((((((((CAST(rt0.c3 AS TEXT))AND(CASE t0.c94  WHEN '-497056889' THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c94 THEN rt0.c4 ELSE rt0.c1 END)))OR((NOT (t0.c0)))))OR((((rt0.c2, rt0.c1, t0.c94)) BETWEEN (('-767289552', t0.c0, rt0.c3)) AND ((t0.c94, rt0.c1, '261991329'))))))AND(((rt0.c4)AND(rt0.c2)))) FROM t0, rt0; -- 0ms;
SELECT ALL CASE WHEN json_valid(t0.c0) THEN t0.c0 WHEN ((((((((rt0.c4)AND(rt0.c3)))OR(NULL)))AND(t0.c94)))AND(NULL)) THEN ((t0.c0) ISNULL) WHEN '0.36475067666553107' THEN ((rt0.c3) NOT NULL) ELSE (((rt0.c0, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, t0.c94, rt0.c4)) AND ((rt0.c2, rt0.c4, rt0.c2))) END FROM t0, rt0 WHERE (((NULL COLLATE BINARY) IS TRUE)); -- 1ms;
SELECT (~ (rt0.c4 COLLATE NOCASE)), ((((((t0.c94, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c4, t0.c0))), rt0.c4, (((rt0.c0))<((rt0.c1)))))>=(((rt0.c4 IN (rt0.c0)), rt0.c0, rt0.c2 COLLATE BINARY))), (rt0.c1 IN (0xffffffffe77873fb)) COLLATE BINARY FROM rt0, t0 ORDER BY (~ ((((t0.c94))>((0.31801533099011026))))) DESC  NULLS LAST, CAST(CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN t0.c94 WHEN x'6d2a' THEN rt0.c4 END AS NUMERIC) ASC  NULLS LAST, ((((1153218585)AND('398584345' COLLATE NOCASE)))AND(((t0.c0)%(rt0.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL ((rt0.c3 COLLATE RTRIM)<<((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))) FROM rt0 ORDER BY (NOT (((rt0.c3)GLOB(rt0.c0))))  NULLS FIRST LIMIT -1261361029 OFFSET 58056685; -- 0ms;
SELECT json_remove(AVG(rt0.c3), ((rt0.c2) NOT BETWEEN (NULL) AND (t0.c0))) FROM rt0;SELECT RANK() OVER (), (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN t0.c94 THEN t0.c0 ELSE rt0.c0 END)) AND (((((0.2177766387871417)) BETWEEN ((rt0.c1)) AND ((t0.c94)))))), TOTAL(((t0.c0)>=(t0.c0))) OVER ( PARTITION BY (((NOT (rt0.c2)))<>(((t0.c0)>>(rt0.c3)))), (- (CAST(rt0.c1 AS TEXT)))) FROM t0, rt0; -- 1ms;
SELECT ALL 1.089354306E9, CASE ((rt0.c4)*('880954199'))  WHEN ((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)) THEN (rt0.c0 IN (t0.c0)) ELSE COUNT(rt0.c4) END, (t0.c94 COLLATE RTRIM IN ()) FROM rt0, t0; -- 0ms;
SELECT DISTINCT rt0.c3, CUME_DIST() OVER (), rt0.c0 COLLATE BINARY FROM t0, rt0 GROUP BY (((NOT (t0.c94)))>(((rt0.c3)LIKE(t0.c0)))); -- 0ms;
SELECT ALL UPPER(rt0.c4 COLLATE RTRIM) FROM t0, rt0 WHERE ((+ (((NULL)LIKE('au1])H'))))) ORDER BY CASE WHEN ((((t0.c0)AND(rt0.c4)))AND(t0.c0)) THEN ((rt0.c3)+(rt0.c1)) WHEN ((t0.c0) NOT BETWEEN (t0.c94) AND (rt0.c4)) THEN (('q*') NOTNULL) WHEN rt0.c4 COLLATE RTRIM THEN (('') IS TRUE) WHEN (- (0.693830902900201)) THEN ((rt0.c4) IS TRUE) WHEN rt0.c3 THEN CASE WHEN t0.c0 THEN rt0.c4 END ELSE (rt0.c3 IN (rt0.c0)) END ASC, ((rt0.c2) IS FALSE) COLLATE NOCASE DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c4 IN (t0.c0, rt0.c3))))==((((((rt0.c2)OR(rt0.c2)))AND(rt0.c3))))), CASE WHEN highlight(rt0.c0, rt0.c4, rt0.c2, rt0.c0) THEN ((rt0.c3) BETWEEN (x'') AND (rt0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c94 WHEN t0.c0 THEN rt0.c3 END WHEN 0.14049378093905796 THEN (NOT (rt0.c0)) ELSE (((NULL))>=((rt0.c3))) END, rt0.c0, SUM((+ (rt0.c3)) COLLATE NOCASE), ((((rt0.c1) IS FALSE))<((((rt0.c4, t0.c0, rt0.c0))<((t0.c94, rt0.c1, 0Xffffffff91e25f9f))))) FROM t0, rt0 WHERE (((('')) BETWEEN (((((NULL)) NOT BETWEEN ((0Xffffffff9cc91eab)) AND ((NULL))))) AND ((((0.21084842525686076) BETWEEN ('C轥[Z>7') AND (0.7219909882055524))))));SELECT DISTINCT LEAD(CAST(((x'')LIKE(rt0.c0)) AS TEXT), (rt0.c2 IN ()), CAST(((((rt0.c3)OR(rt0.c1)))AND(t0.c0)) AS TEXT)) OVER () FROM t0, rt0 WHERE (CAST(CAST(0xffffffffdd430a93 AS BLOB) AS BLOB)); -- 1ms;
SELECT ALL (((((((((rt0.c1 IN ()))AND(HEX(t0.c94))))OR(GROUP_CONCAT(rt0.c1))))AND(CAST(rt0.c3 AS INTEGER))))AND(((rt0.c4)>(rt0.c4)))), MIN((rt0.c3 IN (NULL))), GROUP_CONCAT((rt0.c2 IN (rt0.c0))) FROM rt0 WHERE (CASE WHEN (- ('315365523')) THEN ((((0.568011819105568)AND(x'')))AND(308516692)) ELSE CASE '-582808941'  WHEN '308516692' THEN -9.0076015E7 WHEN '' THEN '-1760599945' WHEN x'' THEN '-1261361029' ELSE NULL END END); -- 0ms;
SELECT DISTINCT DATETIME(((rt0.c1) ISNULL), rt0.c1, ((rt0.c1)AND(t0.c94))) FROM t0, rt0 WHERE ((~ (((((((((0.517481181240153)AND('w)')))AND(0.38361121744633775)))AND('')))AND(x'0a31'))))); -- 0ms;
SELECT DISTINCT ((SUM(rt0.c4)) NOT NULL) FROM t0 WHERE ((LIKELY(NULL) IN ())) GROUP BY ((CAST(rt0.c4 AS REAL))||(((((((((rt0.c1)OR(t0.c0)))OR(rt0.c0)))AND(t0.c0)))AND(NULL))));SELECT DISTINCT t0.c0 FROM t0, rt0; -- 0ms;
SELECT TRIM(DISTINCT rt0.c4) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT ((((((t0.c94)OR(rt0.c4)))AND(rt0.c1)))%(LOWER(t0.c0))) FROM rt0, t0 WHERE (-602797483); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN t0.c94 WHEN t0.c94 THEN t0.c94 ELSE rt0.c4 END)==(t0.c94 COLLATE RTRIM)) FROM t0 WHERE (((((((x'')AND(NULL)))AND(0.6419703078656558)))LIKE(((0X35a038b)<<(x'')))));SELECT DISTINCT CASE 0.757050166981462  WHEN '-0.0' THEN LIKE(rt0.c2, rt0.c0, '3') WHEN ((t0.c94) BETWEEN (t0.c0) AND (rt0.c1)) THEN rt0.c4 WHEN (((t0.c94, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c4, rt0.c3))) THEN rt0.c0 COLLATE NOCASE END FROM rt0, t0 WHERE (''); -- 0ms;
SELECT rtreenode(((-1989953092)OR(t0.c94)), CAST(rt0.c3 AS NUMERIC)), FIRST_VALUE(CAST(((t0.c0)IS NOT(t0.c0)) AS INTEGER)) OVER (), CAST(((rt0.c0) NOT NULL) AS INTEGER) FROM t0;SELECT DISTINCT (t0.c0 COLLATE BINARY IN ()), (((((((((('')<(rt0.c4)))AND(CAST(t0.c0 AS TEXT))))AND(rt0.c4)))AND(json_array_length(rt0.c0, t0.c94))))AND(((rt0.c1)<<(rt0.c2)))), (NOT (rt0.c1 COLLATE NOCASE)) FROM t0, rt0 WHERE ((((~ (0X5530e4d5)))AND((((0.643300921160867))<>((NULL)))))); -- 0ms;
SELECT ALL COUNT('f窶u_^9'), rt0.c2, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (GROUP_CONCAT(rt0.c3)) AND ((((t0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((t0.c94, rt0.c1, t0.c94)) AND ((t0.c0, rt0.c0, t0.c94))))) FROM t0 WHERE ((((0.9737716628144277))<((HEX(DISTINCT NULL)))));SELECT ALL LEAD(HEX(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))), (NULL IN ((- (rt0.c3)), (rt0.c3 IN ()))), ((((((rt0.c0)AND(NULL)))AND(rt0.c3))) NOTNULL)) OVER () FROM rt0 WHERE (((((((((('s7')AND(x'eb05')))OR('p')))AND(0X50e5e7ca)))OR(0.428837936559771)) IN (((((((((((((0.004591405401938697)AND(8.80954199E8)))AND(x'ec8a')))AND(x'74c3')))AND(0.7460885517226488)))OR('1232632502')))AND(x''))))); -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c4)OR(rt0.c0)))OR(t0.c0)))OR(t0.c94)))AND('ߥT鸣\n'))  WHEN ((rt0.c1) BETWEEN ('-602797483') AND (rt0.c1)) THEN GROUP_CONCAT(rt0.c4) WHEN (rt0.c1 IN ()) THEN LIKELY(DISTINCT rt0.c0) WHEN CAST(t0.c94 AS BLOB) THEN CASE WHEN rt0.c2 THEN rt0.c4 END END, (- (rt0.c4)) COLLATE RTRIM, ((('2014713989'))==((rt0.c0 COLLATE RTRIM))) FROM t0 NOT INDEXED;SELECT DISTINCT (((t0.c0 IN ()))<=(CASE WHEN rt0.c3 THEN 1e500 WHEN rt0.c2 THEN rt0.c2 WHEN '' THEN t0.c94 END)) FROM rt0, t0 WHERE (CAST(((NULL) NOT BETWEEN (NULL) AND ('-1205320572')) AS INTEGER)) GROUP BY ((((rt0.c0) BETWEEN (rt0.c3) AND (t0.c94)))IS NOT(((t0.c94) NOT NULL))) HAVING (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) IN ()) ORDER BY ((((rt0.c2)>(rt0.c4))) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE RTRIM)) ASC; -- 0ms;
SELECT DISTINCT (~ (t0.c94)) FROM rt0, t0 GROUP BY CASE CASE WHEN NULL THEN rt0.c0 END  WHEN 0.611579907412926 COLLATE NOCASE THEN (rt0.c3 IN ()) ELSE (- (t0.c94)) END, ((((TRIM(x'', t0.c0))AND((t0.c0 IN ()))))AND(((rt0.c4)/(rt0.c3)))), (((rt0.c2)>=(t0.c0)) IN (((rt0.c0)%(t0.c94)), ((rt0.c1)|(rt0.c4)))), rt0.c1, ((((((((((((((((((rt0.c4)/(rt0.c1)))OR(rt0.c3)))OR(((rt0.c4)OR(t0.c0)))))AND(((((t0.c0)AND(t0.c94)))OR(rt0.c2)))))OR((- (NULL)))))AND(((rt0.c0)!=(rt0.c4)))))AND(CAST(rt0.c2 AS REAL))))AND(rt0.c2 COLLATE NOCASE)))OR((x'' IN ())));SELECT ALL (((t0.c94 IN (t0.c0))) NOT NULL) FROM rt0 WHERE ((- ('' COLLATE BINARY)));SELECT DISTINCT ((t0.c94)<<(rt0.c4)) COLLATE RTRIM, CASE CAST(rt0.c1 AS TEXT)  WHEN CAST(t0.c94 AS INTEGER) THEN (((rt0.c0, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, t0.c94)) AND ((t0.c94, rt0.c4, rt0.c0))) END, ((-1.847435361E9 COLLATE RTRIM)GLOB(CASE WHEN rt0.c4 THEN rt0.c4 WHEN t0.c94 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c94 END)) FROM rt0;SELECT DISTINCT CAST(((rt0.c2)IS NOT(rt0.c1)) AS NUMERIC), CAST(rt0.c2 AS NUMERIC) COLLATE BINARY, ((((rt0.c1) ISNULL)) BETWEEN (((t0.c0)>>(t0.c94))) AND (((((t0.c94)OR(t0.c0)))AND(rt0.c2)))) FROM t0 WHERE (CASE '-1400950720'  WHEN x'3efa' THEN NULL ELSE 0.510382625622615 END COLLATE NOCASE);SELECT DISTINCT CUME_DIST() OVER (), TOTAL((NOT (rt0.c2))), ((MAX(rt0.c3)) BETWEEN (CAST(t0.c94 AS TEXT)) AND ((((rt0.c2, -704241608, rt0.c1))>=((rt0.c1, rt0.c0, rt0.c1))))) FROM rt0;SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)IS((+ (rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c4))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))) AND ((+ (t0.c94)))) FROM t0 WHERE ((((((((NULL))<((''))))AND(-411536389)))OR(CAST('1833086384' AS INTEGER)))) LIMIT 646632537;SELECT (((rt0.c2))!=((rt0.c3))) COLLATE NOCASE FROM t0 WHERE ((((+ (1166970725)))||(((0.46360839319268177)>=(NULL)))));SELECT CASE WHEN t0.c94 COLLATE NOCASE THEN TRIM(t0.c0, rt0.c0) END, CASE rt0.c1 COLLATE NOCASE  WHEN (t0.c0 IN (rt0.c3)) THEN (((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c4))) ELSE (~ (rt0.c0)) END, ((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c0)))<(((t0.c94) NOT NULL))) FROM rt0 WHERE (NULLIF(((NULL)>=('')), highlight(x'', x'93fe', x'', '')));SELECT ALL CASE WHEN rt0.c4 THEN rt0.c1 END COLLATE BINARY FROM rt0, t0 WHERE (((NULL)GLOB(((x'')<<(x'd9f4'))))); -- 0ms;
SELECT ALL ((((((((((((((((rt0.c2)OR(x'')))OR(rt0.c3)))OR(((((rt0.c2)OR(rt0.c3)))OR(t0.c0)))))OR(((rt0.c1)<(t0.c94)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND(LIKE(rt0.c2, rt0.c4, 'F'))))OR(CASE t0.c94  WHEN rt0.c2 THEN t0.c94 ELSE rt0.c0 END)))OR(((x'') IS FALSE))) FROM rt0, t0 ORDER BY (((CASE WHEN t0.c94 THEN t0.c0 END))>=((((((rt0.c1)OR(x'5ffd')))OR(-1.455208403E9))))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT MIN(((t0.c94)||(rt0.c4))) FROM rt0, t0; -- 0ms;
SELECT ALL rt0.c4 COLLATE RTRIM COLLATE RTRIM FROM t0 LIMIT -1018095733;SELECT GROUP_CONCAT((rt0.c2 IN (rt0.c3))) OVER () FROM t0 GROUP BY ((CASE WHEN t0.c0 THEN rt0.c0 END) IS FALSE) HAVING CASE ((((rt0.c1)AND(NULL)))AND(rt0.c4))  WHEN (~ (t0.c94)) THEN ((rt0.c1) IS TRUE) END;SELECT AVG(CAST(rt0.c0 AS INTEGER)) COLLATE BINARY FROM rt0, t0 GROUP BY ((0.5764004628228478) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END) AND ((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((t0.c94, rt0.c2, rt0.c3)) AND ((rt0.c4, t0.c0, rt0.c0))))) HAVING (NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))) ORDER BY ((CAST(1467159718 AS REAL)) BETWEEN (x'8279bdec' COLLATE NOCASE) AND ((rt0.c4 IN ()))) ASC; -- 0ms;
SELECT DISTINCT (((((rt0.c3) NOTNULL)))!=((((rt0.c2)%(t0.c0))))) FROM rt0;SELECT ALL CAST(MIN(rt0.c2) AS INTEGER) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED((((0.06364589258998987, NULL, 0.2145299669154248)) BETWEEN ((0.6556474790240003, NULL, '1313733055')) AND (('', x'', 0.25834983633022623))))); -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c1 AS REAL)) OVER (), TOTAL(((rt0.c3) BETWEEN (t0.c94) AND (rt0.c4))) OVER (), json_array(COUNT(*), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) FROM rt0 LIMIT -1989953092 OFFSET -846541255;SELECT t0.c0 FROM rt0, t0 GROUP BY (((rt0.c1 IN (rt0.c1))) IS FALSE); -- 0ms;
SELECT DISTINCT ((((CASE rt0.c0  WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN t0.c94 WHEN rt0.c2 THEN rt0.c2 END)OR(rt0.c1 COLLATE BINARY)))OR(CAST(rt0.c1 AS INTEGER))), DENSE_RANK() OVER (), (((rt0.c3, t0.c0, -119520488)) BETWEEN ((CAST(NULL AS BLOB), CAST(t0.c0 AS TEXT), (rt0.c2 IN ()))) AND ((t0.c0 COLLATE BINARY, (((rt0.c0))!=((t0.c94))), ((NULL) BETWEEN (rt0.c1) AND (t0.c0))))) FROM rt0, t0; -- 0ms;
SELECT ALL SUM(t0.c0) OVER (), CAST((('')&(rt0.c3)) AS BLOB), CHANGES() FROM t0 WHERE (((('' IN ()))>((- (NULL)))));SELECT DISTINCT ((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))))OR(((rt0.c0)<=(rt0.c3)))), NTILE((((t0.c0 IN (rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c4) AND (x'cbb2'))) AND ((((('')OR(t0.c94)))AND(rt0.c0))))) OVER (), (((((rt0.c4) BETWEEN (rt0.c2) AND (NULL))))>=(((t0.c94 IN ())))) FROM rt0, t0 WHERE ((((((NULL IN ()))AND(1e500 COLLATE BINARY)))AND(((('75kJS5Wﬆ')) BETWEEN ((0.29742227540365207)) AND ((x'')))))); -- 0ms;
SELECT rt0.c1 FROM rt0, t0 WHERE (((((0.34330100732581226))<=((1379105513))) IN (NULL, ((x'eb89') NOT BETWEEN (NULL) AND (x'395b'))))); -- 0ms;
SELECT ALL CASE WHEN MAX(rt0.c3) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c0) NOT BETWEEN (t0.c94) AND (rt0.c4)) THEN CAST(t0.c94 AS TEXT) WHEN NULL THEN (rt0.c2 IN ()) WHEN ((rt0.c0)|(rt0.c4)) THEN ((rt0.c2)|(t0.c0)) WHEN (rt0.c2 IN (rt0.c0)) THEN ((rt0.c2) IS FALSE) WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) THEN CAST(rt0.c1 AS BLOB) WHEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 ELSE t0.c94 END THEN ((t0.c0) IS FALSE) END, CAST(((rt0.c1)IS(t0.c94)) AS REAL), rt0.c3 FROM t0 INDEXED BY i82 WHERE ((CAST(x'' AS BLOB) IN ()));SELECT CASE (rt0.c1 IN (t0.c0))  WHEN TYPEOF(NULL) THEN LOWER(DISTINCT rt0.c1) END FROM rt0 WHERE ((((((x'6b8b'))<((-4.11536389E8)))) IS TRUE));SELECT DISTINCT (+ (SUM(t0.c94))) FROM t0 LIMIT 86249687 OFFSET -1666642300; -- 0ms;
SELECT ALL (((NOT (rt0.c2)))>>(((t0.c94) NOT NULL))) FROM rt0, t0; -- 0ms;
SELECT CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE FROM rt0 GROUP BY CAST(((rt0.c2) NOTNULL) AS BLOB) HAVING ((COUNT(rt0.c0)) IS TRUE) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c2)AND(rt0.c2)))) AND ((CASE WHEN 0.25624943748156237 THEN rt0.c2 ELSE rt0.c1 END))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 ORDER BY ((((x'f5d6') BETWEEN (t0.c0) AND (rt0.c0))) IS TRUE)  NULLS FIRST;SELECT LAST_VALUE((NOT ((rt0.c3 IN ())))) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((+ (t0.c94)))=((((rt0.c0, t0.c0, rt0.c3)) BETWEEN ((t0.c0, t0.c94, t0.c0)) AND (('皅C~HG싾2\nu', t0.c94, t0.c94))))), ((rt0.c0)*(rt0.c1)) COLLATE NOCASE, (((x'', (rt0.c4 IN (rt0.c1)), CAST(rt0.c1 AS BLOB)))>((rt0.c3 COLLATE NOCASE, t0.c94 COLLATE RTRIM, ((t0.c0) IS TRUE)))) FROM rt0 LEFT OUTER JOIN t0 ON rt0.c2 WHERE (CAST('2143770126' AS INTEGER)); -- 0ms;
SELECT DISTINCT t0.c0, CAST(((rt0.c4)OR(t0.c0)) AS REAL), ROW_NUMBER() OVER () FROM rt0, t0 WHERE (x'be97') ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN (((((((((rt0.c3)AND(rt0.c4)))AND(0.04781254134635826)))OR(rt0.c0)))OR(t0.c94))) AND (CAST(rt0.c1 AS REAL))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt0 INNER JOIN t0 ON ((((t0.c0)<(rt0.c3))) NOT NULL) WHERE ((((0.8568125870926045, '-759501357', 0.9169318029377788)) BETWEEN (((- (0.9667549870243718)), ((0.5232071263390548)<<('-1274542070')), ((NULL) BETWEEN ('''OlA') AND (NULL)))) AND (((~ ('620151550')), ((((8.80954199E8)AND(NULL)))OR(x'193d')), (NULL IN ()))))) GROUP BY rt0.c1 HAVING (((rt0.c2 COLLATE RTRIM, (((rt0.c2))<=((rt0.c1))), ((((rt0.c1)OR(rt0.c0)))AND(t0.c0))))<>((CASE WHEN t0.c94 THEN NULL WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c94 END, rt0.c0, t0.c94 COLLATE NOCASE))); -- 1ms;
SELECT DISTINCT json_extract(((rt0.c2)||(rt0.c1)), ((rt0.c1) ISNULL)), ((CASE WHEN t0.c0 THEN rt0.c4 WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END)AND('-1487595682')), (((rt0.c2 IN (rt0.c2, t0.c0)))OR((((t0.c94, rt0.c3, rt0.c1)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('2069924174', rt0.c4, rt0.c4))))), ((((rt0.c3)<(rt0.c4)))LIKE(((t0.c94)>=(0.5237354006989187)))), CAST(rt0.c3 COLLATE BINARY AS REAL) FROM rt0 WHERE (CASE 0Xfffffffff665afd9  WHEN 0xffffffffd2441730 THEN '*W්%' ELSE -1.760599945E9 END COLLATE NOCASE COLLATE NOCASE) LIMIT 708725990;SELECT DISTINCT (CAST(rt0.c3 AS BLOB) IN ()), ((rt0.c2) NOT BETWEEN (((rt0.c3) NOT NULL)) AND ((NOT (t0.c94)))), CAST((rt0.c2 IN (t0.c0)) AS NUMERIC), ((((t0.c94) NOT NULL))*(COALESCE(t0.c0, rt0.c2, rt0.c2, rt0.c0))), ((t0.c94) IS FALSE) COLLATE NOCASE FROM rt0;SELECT DISTINCT ((((rt0.c1 COLLATE NOCASE)OR((NOT (rt0.c1)))))AND('-795164174')) FROM rt0, t0 WHERE ((((((('1451021575')AND(1838122385)))AND('')))<=(((NULL)||('fK2s'))))); -- 0ms;
SELECT LAG(((((rt0.c1) NOT BETWEEN ('-90076015') AND (rt0.c3))) IS TRUE), ((((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))>>(rt0.c1)), MAX(rt0.c0, ((rt0.c4)%(rt0.c0)))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c3 AS REAL))OR(((((rt0.c1)OR('-759501357')))OR(t0.c94)))))AND(('' IN ()))) FROM t0 WHERE (CASE ((('K%s', '-704241608', '-286811418')) NOT BETWEEN (('-833398159', x'', '798422406')) AND ((x'0e29', -6.02797483E8, '782392532')))  WHEN CAST('_t)<XL]l' AS INTEGER) THEN (('-2074723648') NOT BETWEEN ('') AND (x'')) END) LIMIT -1463093783; -- 0ms;
SELECT DISTINCT ABS(LENGTH(rt0.c3)) FROM rt0 INDEXED BY i82, t0 ORDER BY (((rt0.c4, t0.c0, x'', rt0.c2, rt0.c1)) BETWEEN ((CASE WHEN 0.33808776628601345 THEN rt0.c2 WHEN x'' THEN rt0.c0 WHEN x'' THEN rt0.c0 END, x'', rt0.c1, t0.c0, (~ (rt0.c3)))) AND ((((rt0.c3)<<(rt0.c3)), (t0.c0 IN ()), rt0.c3 COLLATE BINARY, (((rt0.c4, rt0.c4, 0.15616201557277065))<((rt0.c0, rt0.c0, rt0.c4))), NULL)))  NULLS LAST, (((((t0.c0)) NOT BETWEEN ((t0.c94)) AND ((t0.c0))))IS NOT(((t0.c94) BETWEEN (rt0.c4) AND (0x2ea25cd4)))) DESC  NULLS FIRST, 0.657110613073694;SELECT DISTINCT SUM((+ ('2098455803')) COLLATE RTRIM) OVER () FROM t0, rt0 WHERE (0.21084842525686076); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, t0 WHERE (CAST((((NULL, 'Gi', 0.21438809794368396))>=((x'', -1.61108007E8, 0xffffffffb94be318))) AS BLOB)); -- 0ms;
SELECT DISTINCT MIN(((((((((rt0.c4)OR(rt0.c2)))OR(t0.c94)))OR(rt0.c0)))AND(t0.c94))) COLLATE RTRIM, (NOT ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))), (((((((rt0.c4)AND(NULL)))OR(rt0.c3))))<(((t0.c94 IN ())))) FROM rt0 WHERE (((((((((((((CASE 0.45562543333373284  WHEN 1444024863 THEN 0.6326268436582149 ELSE 0.08768923465298395 END)AND(0.7539936881956192)))OR((NOT ('837732219')))))AND((('719726404')<=(0.04781254134635826)))))OR(json_insert(x'bf42', '620151550', NULL, NULL, NULL))))AND(CASE '-1042531374'  WHEN 0.8774944029912773 THEN '-602797483' WHEN '' THEN 0.09699875229669308 WHEN x'7e82' THEN NULL END)))AND(((x'0885')||(0.5002561299472852)))));SELECT DISTINCT LEAD(((((((rt0.c2)AND(rt0.c0)))AND(rt0.c3))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((NOT (0X63e399b4)))), (+ (((rt0.c0)!=(rt0.c4)))), ((CAST(rt0.c3 AS NUMERIC))<>(((((rt0.c4)AND(rt0.c4)))AND('0.510382625622615'))))) OVER () FROM rt0, t0 WHERE ((~ ((('-1493154704') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((CASE '1147635539'  WHEN x'' THEN rt0.c2 WHEN x'' THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)-(CASE WHEN rt0.c3 THEN 2092154642 END)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((~ (t0.c0)))GLOB(((((((((t0.c0)AND(t0.c0)))OR(rt0.c1)))AND(rt0.c4)))AND(')''靔KN')))) FROM t0, rt0; -- 0ms;
SELECT ALL CASE CAST('Gi' AS TEXT)  WHEN ROUND(rt0.c3, rt0.c1) THEN CAST(rt0.c4 AS REAL) END FROM t0, rt0 WHERE (((((x'')%(x''))) ISNULL)); -- 0ms;
SELECT TOTAL(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END) FROM t0;SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c1 AS INTEGER)), GROUP_CONCAT(CASE WHEN rt0.c1 THEN t0.c0 END), (((((((((((('v䑰')OR(t0.c94)))OR(x'')))AND(rt0.c2 COLLATE BINARY)))OR(NULL)))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)))))AND('481086212')), ((-1666642300)LIKE(((((rt0.c4)OR(rt0.c3)))AND(rt0.c3)))), CASE WHEN MIN(rt0.c0, rt0.c2) THEN (rt0.c2 IN ()) WHEN ((rt0.c4)-(rt0.c0)) THEN MIN(rt0.c1) WHEN ((((rt0.c1)AND(rt0.c4)))OR(0.21016600812591668)) THEN ((((rt0.c2)AND(t0.c0)))OR(rt0.c2)) ELSE (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) END FROM rt0;SELECT ALL TYPEOF(rt0.c1 COLLATE NOCASE) FROM t0;SELECT DISTINCT ((((rt0.c0) NOTNULL)) BETWEEN ((+ (rt0.c3))) AND (((((t0.c94)AND(rt0.c0)))AND(rt0.c1)))), rt0.c4, PERCENT_RANK() OVER () FROM t0, rt0 WHERE (CAST((((-1.27454207E9, 0.6162034119189806, '')) NOT BETWEEN (('', '-2074723648', -137549652)) AND (('-1886398030', '', NULL))) AS TEXT)); -- 0ms;
SELECT DISTINCT (((x'' COLLATE RTRIM))==((((t0.c0) NOT NULL)))) FROM t0, rt0 WHERE (((((x'')<>('-744043207')))!=(((-1879465317) NOTNULL)))) GROUP BY (((t0.c0)) NOT BETWEEN ((((t0.c94)&(rt0.c3)))) AND ((IFNULL(rt0.c1, t0.c94)))) HAVING (CAST(rt0.c4 AS REAL) IN ()); -- 0ms;
SELECT DISTINCT json_quote(SUM(t0.c94)) FROM t0 LIMIT 593419565 OFFSET -1886398030; -- 0ms;
SELECT DISTINCT (((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) IN ()) FROM t0, rt0; -- 0ms;
SELECT (((((((t0.c0))=((t0.c94))))AND(((rt0.c4)!=(rt0.c1)))))AND(GROUP_CONCAT(t0.c94))), COUNT(((((((((t0.c94)AND(rt0.c4)))AND(rt0.c2)))AND(rt0.c4)))AND('2cz'))) OVER (), (NOT (rt0.c0 COLLATE BINARY)) FROM t0;SELECT DISTINCT PERCENT_RANK() OVER (), ((((((((TYPEOF(rt0.c1))OR(TRIM(DISTINCT rt0.c1))))OR((t0.c94 IN ()))))OR((rt0.c4 IN (t0.c94)))))AND(((rt0.c1) BETWEEN (t0.c94) AND (rt0.c2)))), GROUP_CONCAT((- (rt0.c3))) OVER () FROM rt0, t0 GROUP BY ((((x'') NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE), ((((((((((t0.c94)AND(t0.c0)))AND(0.4142508544044289)))OR(rt0.c4)))OR(rt0.c2)))%((rt0.c4 IN ()))), CAST(((t0.c94) NOT NULL) AS BLOB); -- 1ms;
SELECT DISTINCT CAST(t0.c94 AS REAL) FROM rt0, t0; -- 0ms;
SELECT DISTINCT AVG((rt0.c3 IN (rt0.c0))) OVER () FROM rt0, t0 WHERE ((('2116256694')<=(SQLITE_VERSION()))); -- 0ms;
SELECT DISTINCT rtreenode('-446025036', ((t0.c0)<>(rt0.c3))) FROM rt0;SELECT DISTINCT ((rt0.c0)&(rt0.c2)) COLLATE BINARY FROM t0 WHERE (NULL COLLATE BINARY);SELECT DISTINCT (((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c94)) IN ()) FROM rt0 LEFT OUTER JOIN t0 ON ((((((rt0.c2)<(t0.c94)))AND(((t0.c94)-(t0.c94)))))OR(x'')); -- 0ms;
SELECT (((t0.c0)) BETWEEN (('0.31801533099011026')) AND ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0))))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0))) NOT NULL), CASE SUM(rt0.c2)  WHEN ABS(rt0.c2) THEN ((t0.c0) IS FALSE) WHEN rt0.c4 COLLATE NOCASE THEN ((t0.c0)!=(t0.c94)) WHEN AVG('Z(}!_,1놛') THEN SUM(0.665515390932909) END, ((CAST(rt0.c2 AS TEXT))>>((((rt0.c1))<>((0.1781402105242995))))) FROM t0, rt0 ORDER BY (((('1379105513') NOT NULL)) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (NULL)), (((('-770940926')<<(t0.c0))) IS TRUE) DESC; -- 0ms;
SELECT GROUP_CONCAT((((t0.c0))<((t0.c0)))) OVER () FROM t0 WHERE (IFNULL(DISTINCT NULL, CASE WHEN -1.879465317E9 THEN NULL END)); -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN t0.c0 ELSE t0.c0 END COLLATE BINARY, CHAR(x'', (rt0.c4 IN ()), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))), TYPEOF(DISTINCT CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END), (+ ((((NULL, NULL, t0.c94))<((t0.c94, rt0.c3, rt0.c2))))), ((HEX(rt0.c3))-((~ (t0.c94)))) FROM t0, rt0 WHERE (''); -- 0ms;
SELECT DISTINCT rt0.c0 COLLATE NOCASE COLLATE RTRIM, (CAST(rt0.c2 AS NUMERIC) IN ()), CASE ((t0.c94)<(rt0.c1))  WHEN ((rt0.c4) BETWEEN (rt0.c0) AND (NULL)) THEN '-1847435361' COLLATE RTRIM WHEN (rt0.c3 IN ()) THEN NULL WHEN (t0.c0 IN ()) THEN ((t0.c94) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END FROM rt0, t0 WHERE ((((x'') BETWEEN (2098455803) AND (0.19124505913159284)) IN ())); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY (((NOT (rt0.c3)))LIKE(CASE WHEN t0.c94 THEN rt0.c3 END)) ASC, (NULL IN ())  NULLS LAST, ((((((t0.c0)GLOB(rt0.c4)))AND(rt0.c3 COLLATE RTRIM)))OR(((t0.c94) NOTNULL))) ASC  NULLS LAST) FROM rt0, t0 ORDER BY ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c0)))))>=((8.6249687E7))) DESC, CAST(((rt0.c4)<=(-1216692871)) AS REAL) DESC  NULLS LAST, 0.38361121744633775 ASC  NULLS FIRST; -- 0ms;
SELECT CASE WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c4)IS(rt0.c2)) ELSE x'' END FROM t0 WHERE (((x'')<>(((x'') IS FALSE))));SELECT DISTINCT (- (((rt0.c4) NOT BETWEEN (t0.c0) AND (rt0.c4)))), (((rt0.c2 IN ()))<<(CAST(-1848179317 AS INTEGER))), (rt0.c4 IN ()) COLLATE NOCASE FROM t0, rt0 WHERE (((1976618491 COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((rt0.c4 COLLATE BINARY)OR(CAST(rt0.c4 AS INTEGER))))AND(rt0.c3 COLLATE RTRIM)), MIN(((x'')>(rt0.c3))), (+ (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) FROM t0, rt0; -- 0ms;
SELECT t0.c94 FROM rt0, t0 WHERE (((CASE 0.7182508699232762  WHEN NULL THEN 'w)' ELSE '1833086384' END)>=((('-411536389')==(x''))))); -- 0ms;
SELECT DISTINCT (~ (CASE rt0.c0  WHEN t0.c94 THEN 0.14049378093905796 END)), CASE WHEN COUNT(rt0.c4) THEN (NOT (t0.c94)) WHEN ((rt0.c0) NOT BETWEEN (t0.c94) AND (rt0.c1)) THEN (- ('')) WHEN GROUP_CONCAT(NULL) THEN (+ (rt0.c4)) END, (~ (rt0.c3)) COLLATE NOCASE FROM rt0, t0 ORDER BY ((((((((((rt0.c2)<(rt0.c3)))AND(((((((((rt0.c4)OR(t0.c0)))AND(t0.c0)))OR(rt0.c4)))AND(rt0.c0)))))OR(rt0.c1)))AND(((t0.c0)>(rt0.c4)))))AND(((((((((rt0.c2)OR(t0.c0)))OR(rt0.c2)))OR(x'')))AND(rt0.c1))))  NULLS FIRST; -- 0ms;
SELECT rt0.c0 FROM t0 INDEXED BY i82, rt0 WHERE (CAST((('0.0')IS NOT(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2) ISNULL))AND(((t0.c94) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(rt0.c1)))OR(CAST(rt0.c1 AS REAL))))OR((((t0.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c3)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3, t0.c94, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1, 0.30399942181460715, rt0.c1))))), ((((t0.c94) NOT NULL)) ISNULL), ABS(((rt0.c0) IS FALSE)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((NULL) BETWEEN ('O1') AND ('/D>')))<<(((0.5490600176206942)LIKE(NULL))))); -- 0ms;
SELECT COUNT(rt0.c4 COLLATE RTRIM COLLATE NOCASE) FROM t0, rt0 WHERE (((NULL COLLATE BINARY)*((('')*('-1903027289'))))); -- 0ms;
SELECT TOTAL(((rt0.c4)<=(rt0.c0))) OVER () FROM t0 WHERE ((((x'0061eb88')<<(NULL)) IN ()));SELECT DISTINCT ((((rt0.c4) NOT NULL)) IS TRUE) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (~ (((t0.c0)>(t0.c0)))) FROM t0 WHERE (rtreenode(((NULL) IS TRUE), (+ (0.17999323363956388)))) ORDER BY t0.c0 DESC; -- 0ms;
SELECT DISTINCT SUM(((rt0.c4) BETWEEN (0Xffffffffa19a8cd2) AND (rt0.c4))) FROM rt0, t0; -- 0ms;
SELECT ((rt0.c0)&(NULL)) FROM rt0 WHERE ((((('f9vFi2v飢መ') IS FALSE)) NOT BETWEEN ((((1966191089, 0Xffffffffbac5952a, 0.8077419202435314)) BETWEEN ((x'', -1161456342, 0.3923886704628613)) AND (('', x'', -1583706926)))) AND (('' IN (NULL, 0X49f4ac03))))) ORDER BY (((t0.c0 IN ()))>=(((t0.c0)OR(rt0.c0)))) ASC  NULLS FIRST, rt0.c1;SELECT ((((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))<(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c94)))), (((((~ (rt0.c0)))AND(((574857350)/(t0.c94)))))OR(TOTAL(rt0.c1))), DENSE_RANK() OVER () FROM rt0, t0 WHERE (((0.38310974306501966)>=(0.8001257682748032)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(MIN(0.34078188639296114) AS BLOB), DATETIME(AVG(rt0.c3), ((rt0.c3)GLOB(rt0.c4)), ((rt0.c2)+(t0.c94))), GROUP_CONCAT(DATETIME(rt0.c4, rt0.c0, rt0.c3)) OVER (), GROUP_CONCAT(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN t0.c94 WHEN t0.c94 THEN rt0.c1 END) OVER (), COUNT(((rt0.c2)/(t0.c0))) COLLATE NOCASE, CASE WHEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) THEN 0.8013901760418722 WHEN ((t0.c94) BETWEEN (x'') AND (t0.c94)) THEN MIN(t0.c0) WHEN ((rt0.c4)IS NOT('')) THEN ((rt0.c2)<(rt0.c4)) END, ((SUM(rt0.c2)) NOT NULL) FROM rt0, t0 WHERE (0.6257051053876155 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt0.c1 FROM t0, rt0; -- 0ms;
SELECT ALL ((((((0.010710727521048291)OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)), ((((((((((t0.c0)OR(rt0.c1)))AND(t0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(((t0.c94) NOT BETWEEN (rt0.c1) AND (rt0.c3)))), CASE ((((((((t0.c0)OR(rt0.c2)))AND(t0.c0)))OR(rt0.c4)))AND(t0.c0))  WHEN (((rt0.c3, rt0.c4, t0.c0)) BETWEEN ((rt0.c4, rt0.c3, '-1848179317')) AND ((rt0.c2, t0.c0, rt0.c0))) THEN SUM(rt0.c2) ELSE CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END END, (((((rt0.c1) NOTNULL)))<((rt0.c0 COLLATE NOCASE))), COUNT(((t0.c94)LIKE(rt0.c3))) OVER () FROM t0 WHERE (CAST(ABS(NULL) AS INTEGER)) ORDER BY ((((rt0.c4) BETWEEN (NULL) AND (t0.c94)))==(((((rt0.c3)OR(rt0.c3)))AND(t0.c94)))) DESC  NULLS LAST;SELECT ((rt0.c3 IN ()) IN ()) FROM rt0 WHERE ((((((((((((0.5496909753225526)AND(NULL)))AND('-1664541013')))AND('nE7Br')))OR(x''))))=(((('3}') NOT BETWEEN (983324652) AND (x'')))))); -- 0ms;
SELECT ALL ((TOTAL_CHANGES())IS(((NULL) BETWEEN (t0.c94) AND (rt0.c4)))) FROM t0 CROSS JOIN rt0 ON 'JR7]샶9vjK' WHERE ((+ (((0.4574122030498996)|(NULL))))); -- 0ms;
SELECT COUNT(((rt0.c4)!=(rt0.c3))), ((((GLOB(rt0.c4, rt0.c4))AND(rt0.c0 COLLATE NOCASE)))OR(CAST(rt0.c0 AS REAL))), ((TRIM(t0.c0))>>(((((rt0.c2)OR(rt0.c4)))AND(rt0.c1)))), ROW_NUMBER() OVER ( ROWS  CURRENT ROW EXCLUDE GROUP), -1583706926 FROM rt0, t0 ORDER BY CASE WHEN '-704241608' THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (rt0.c1 IN (rt0.c3)) END  NULLS LAST LIMIT -98265261 OFFSET -1907767608; -- 0ms;
SELECT CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN CAST(rt0.c1 AS REAL) ELSE ((rt0.c1)OR(rt0.c2)) END, CASE WHEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)) THEN (((t0.c94)) NOT BETWEEN ((t0.c0)) AND ((rt0.c4))) ELSE ((((rt0.c1)AND(NULL)))OR(rt0.c4)) END, CASE COUNT(*)  WHEN CASE t0.c0  WHEN rt0.c1 THEN t0.c94 ELSE rt0.c2 END THEN rt0.c4 ELSE CAST(rt0.c2 AS BLOB) END FROM rt0 WHERE (((((((0.7964399152470204) NOT BETWEEN (x'') AND (NULL)))AND(NULL)))OR(ABS(0.7334504512906925))));SELECT ((-7.04241608E8 COLLATE BINARY) NOT BETWEEN (((rt0.c4)<<(rt0.c2))) AND (rt0.c3)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c2 COLLATE BINARY  WHEN ((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c4)))OR(t0.c0)))AND(rt0.c1)) THEN t0.c0 END, COALESCE(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), rt0.c4, UNLIKELY(rt0.c0), ((((1147635539)OR(rt0.c1)))AND(rt0.c3))), LEAD(((((rt0.c0)%(rt0.c1)))<<(RTRIM(rt0.c1))), -1704423628, CASE WHEN DATETIME(rt0.c3, rt0.c2, x'') THEN CAST(0X7d13e4fb AS TEXT) WHEN ((rt0.c2) IS FALSE) THEN rt0.c4 COLLATE NOCASE WHEN NULL THEN UNLIKELY(DISTINCT rt0.c4) WHEN CAST(rt0.c2 AS INTEGER) THEN rt0.c2 WHEN ((rt0.c2) NOTNULL) THEN (((rt0.c2, rt0.c0, rt0.c0))<((rt0.c2, rt0.c1, rt0.c1))) END) OVER () FROM rt0;SELECT DISTINCT ((((((((((((TRIM(DISTINCT t0.c94, t0.c94))OR((+ (rt0.c2)))))AND(((rt0.c0)>>(t0.c0)))))AND(((rt0.c3)/(rt0.c1)))))AND((NOT (rt0.c0)))))OR(((rt0.c0) IS TRUE))))AND(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) FROM t0, rt0 WHERE (((('0.36475067666553107')) NOT BETWEEN ((CASE WHEN x'' THEN 0xffffffffcc9066dc ELSE x'6ac2' END)) AND (((((NULL, NULL, NULL))>=(('SwM&⧍X''H綻', ']', ''))))))); -- 1ms;
SELECT DISTINCT ((rt0.c2)>>(t0.c94)) COLLATE NOCASE, (((x'' IN (rt0.c3)))>=(MAX(rt0.c2))), 0.9160163609040654 COLLATE NOCASE FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((((t0.c0)*(t0.c0)))OR(AVG(rt0.c2))))OR(TYPEOF(rt0.c1))) FROM t0, rt0 WHERE ((((((NULL)OR('')))AND(x'')) IN ())) LIMIT -1770471141 OFFSET -1542479052; -- 0ms;
SELECT DISTINCT MIN(((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c1)))OR('(_Bp')))OR(rt0.c1))) FROM rt0 WHERE (CASE CAST('\ybT' AS REAL)  WHEN CAST(NULL AS TEXT) THEN (((NULL, 'SK', 0.6484364208919655)) NOT BETWEEN ((x'', NULL, 0.6463952797699759)) AND ((0.757050166981462, NULL, 0.18146732841261537))) END) ORDER BY (((((t0.c0)OR(rt0.c2)))AND(t0.c0)) IN ((t0.c0 IN ()))) DESC, CASE rt0.c2  WHEN (rt0.c0 IN ()) THEN (- (rt0.c2)) WHEN ((((t0.c0)OR(rt0.c4)))OR(rt0.c3)) THEN (((t0.c0))>=((rt0.c1))) WHEN ((((rt0.c2)AND(rt0.c3)))AND(rt0.c1)) THEN (- (rt0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'')) THEN (NOT (rt0.c3)) WHEN t0.c0 COLLATE NOCASE THEN x'' ELSE CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '' WHEN t0.c0 THEN rt0.c0 END END ASC  NULLS FIRST, NULLIF(rt0.c0 COLLATE RTRIM, LIKELIHOOD(DISTINCT rt0.c2, 0.9780029007719635))  NULLS FIRST;SELECT rt0.c4, NULLIF(rt0.c1, t0.c0) COLLATE NOCASE, ((NULL) NOT BETWEEN (CASE 0.7144000227738919  WHEN t0.c94 THEN rt0.c0 ELSE '248268111' END) AND ((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c94))))) FROM rt0, t0 WHERE (ABS(DISTINCT CAST(NULL AS BLOB))) GROUP BY (((rt0.c4)) NOT BETWEEN (((+ (rt0.c0)))) AND ((((((((((rt0.c1)OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c4))))), (- (CAST('' AS INTEGER))), x'5656' HAVING CASE WHEN rt0.c4 THEN (0X458e8f65 IN (620151550)) END; -- 0ms;
SELECT DISTINCT CAST((((rt0.c2))==((rt0.c4))) AS TEXT) FROM t0;SELECT CASE WHEN (- (rt0.c0)) THEN (rt0.c3 IN (t0.c0)) WHEN GROUP_CONCAT(rt0.c3) THEN GROUP_CONCAT(rt0.c3) WHEN ((t0.c0) IS FALSE) THEN CASE WHEN t0.c94 THEN rt0.c0 ELSE rt0.c2 END ELSE rt0.c1 END FROM t0, rt0 WHERE (CASE WHEN 0.3721289515330991 COLLATE RTRIM THEN ((((NULL)OR(0.7530399905152826)))AND(-1201726687)) WHEN ((NULL) NOTNULL) THEN (('0.30399942181460715')=('ﬆﬆࠊl')) WHEN ((0.31801533099011026)>(x'e219')) THEN QUOTE('9˘Y>') ELSE CAST(NULL AS NUMERIC) END); -- 0ms;
SELECT ALL CAST(t0.c94 AS REAL) COLLATE BINARY, QUOTE(COUNT(rt0.c2)), ((((((rt0.c2)AND(0.45562543333373284)))AND(rt0.c2)))=(((rt0.c4)>>(rt0.c3)))) FROM t0;SELECT CASE WHEN t0.c0 COLLATE BINARY THEN CAST(rt0.c0 AS TEXT) ELSE CASE WHEN t0.c94 THEN 0X7d9a8165 ELSE rt0.c0 END END FROM t0 WHERE ((('779952065')&('k!YWH')) COLLATE RTRIM);SELECT COUNT(*) FROM rt0, t0 WHERE ((0.2994374876192386 IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((+ ((('837732219')GLOB(''))))); -- 0ms;
SELECT ALL ((((rt0.c1 IN ())))==((((rt0.c4) BETWEEN (rt0.c1) AND (t0.c94))))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS FALSE)) NOT BETWEEN (COUNT(rt0.c0)) AND (((t0.c94)=(t0.c94)))) FROM rt0;SELECT ALL ((MAX(rt0.c3)) IS TRUE) FROM t0, rt0; -- 0ms;
SELECT ALL ((NULL) IS FALSE), (+ ((rt0.c0 IN ()))), ((CAST(t0.c0 AS NUMERIC))IS NOT(CAST(rt0.c0 AS REAL))) FROM t0;SELECT DISTINCT CASE x''  WHEN rt0.c2 THEN '974797886' WHEN t0.c94 THEN rt0.c1 WHEN rt0.c4 THEN t0.c94 ELSE rt0.c3 END COLLATE BINARY COLLATE NOCASE FROM t0 WHERE ((((NOT (NULL))) BETWEEN ((((1542492064))!=(('0.2994374876192386')))) AND ((((0.23298154570189045, 0x21c45713, '-863325797'))<>((x'3b2a', '1889631110', x''))))));SELECT DISTINCT (((rt0.c0, rt0.c0, rt0.c4))<((t0.c0, rt0.c4, t0.c0))) COLLATE NOCASE FROM t0 WHERE (((('', CHAR(NULL), (('') NOT NULL)))>=(((((x'c337')) NOT BETWEEN ((0.6703799308277179)) AND ((x''))), CASE WHEN NULL THEN '-1760708365' END, ((')''靔KN')IS(NULL))))));SELECT DISTINCT ((rt0.c1 COLLATE BINARY)IS(((((t0.c94)OR(rt0.c3)))OR(NULL)))), MIN(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c3))), CAST(((((rt0.c3)AND(t0.c0)))OR(rt0.c0)) AS INTEGER) FROM rt0;SELECT DISTINCT CAST(UNLIKELY(rt0.c3) AS TEXT) FROM rt0, t0 WHERE (((('265878278')) BETWEEN (((((NULL))<>((6.15583178E8))))) AND (((- ('')))))); -- 0ms;
SELECT ALL (((rt0.c3)) BETWEEN ((((x'607c')+(rt0.c3)))) AND ((COALESCE(DISTINCT rt0.c2, rt0.c4, rt0.c4, t0.c94, rt0.c0, rt0.c0)))) FROM t0;SELECT GROUP_CONCAT(((((rt0.c3)OR(rt0.c1)))AND(rt0.c0))), (((t0.c0, rt0.c4, rt0.c1)) BETWEEN ((((rt0.c0) IS FALSE), MIN(rt0.c2), rt0.c4 COLLATE NOCASE)) AND ((((t0.c0)<<(rt0.c4)), (rt0.c3 IN ()), (~ (rt0.c2))))), ((((((rt0.c0) NOT BETWEEN (t0.c94) AND (t0.c94)))AND(((t0.c94)&(rt0.c4)))))OR('1232632502')) FROM rt0;SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(t0.c0))) AND (CAST(rt0.c0 AS TEXT))), COUNT((NOT (t0.c0))), ((((COALESCE(rt0.c1, rt0.c1))OR(CASE WHEN rt0.c3 THEN t0.c94 ELSE rt0.c1 END)))AND(CAST(rt0.c2 AS REAL))) FROM rt0, t0 WHERE (((('0.06364589258998987') IS FALSE) IN ())) GROUP BY (((((((((rt0.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c3)))OR(rt0.c4)) IN ((t0.c0 IN ()))) HAVING CAST((t0.c0 IN (rt0.c3)) AS TEXT); -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY CAST(((((((((rt0.c0)AND(t0.c0)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c1)) AS NUMERIC) DESC) FROM rt0 WHERE ((~ (((NULL) IS TRUE))));SELECT DISTINCT (((rt0.c2 IN ())) IS FALSE) FROM rt0, t0 WHERE (('-90076015' IN (CASE '3i'  WHEN 0.5447985430554898 THEN 0x7d13e4fb WHEN x'' THEN 0.757050166981462 WHEN x'' THEN x'b32c' END))); -- 0ms;
SELECT ALL rt0.c3, (((((NOT (t0.c94)))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (x'')))))AND(((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))), ((t0.c94 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c1, t0.c0, rt0.c1))!=((t0.c0, rt0.c2, t0.c94))))) FROM t0 WHERE ((0.7964399152470204 COLLATE RTRIM IN ()));SELECT DISTINCT CASE CAST('{w峔돀' AS INTEGER)  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (NULL)) THEN CASE rt0.c0  WHEN t0.c94 THEN t0.c0 END ELSE ((rt0.c1)IS(rt0.c4)) END FROM rt0, t0 ORDER BY (((~ (rt0.c2))) IS TRUE)  NULLS FIRST, ((((((((((((rt0.c0)AND(t0.c94)))OR(rt0.c1)))AND(CASE rt0.c2  WHEN NULL THEN t0.c94 END)))AND(CASE WHEN t0.c0 THEN t0.c94 ELSE rt0.c3 END)))OR((+ (t0.c0)))))AND(CAST(NULL AS REAL))) DESC; -- 0ms;
SELECT ((((t0.c94)AND(((rt0.c1) BETWEEN (x'') AND (rt0.c0)))))OR(((t0.c0) BETWEEN (NULL) AND (rt0.c3)))) FROM t0 WHERE ((((NULL)) BETWEEN (((NOT (NULL)))) AND ((51066762 COLLATE RTRIM))));SELECT ALL LAG((((rt0.c0)) BETWEEN ((rt0.c1)) AND (((((rt0.c0))<((rt0.c1)))))), ((NULL) IS FALSE), (((((rt0.c2, rt0.c1, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c3)))) NOTNULL)) OVER (), UPPER(DISTINCT LOWER(DISTINCT t0.c94)), NULL FROM rt0 LIMIT 647346242 OFFSET 2014713989;SELECT ((CAST(t0.c94 AS INTEGER)) NOT BETWEEN (SUM(t0.c94)) AND ((rt0.c0 IN (t0.c94)))), x'', rt0.c2 FROM rt0, t0 WHERE (CAST(((x'')LIKE(0xffffffffbb559747)) AS INTEGER)); -- 0ms;
SELECT DISTINCT rt0.c0, '', ((SQLITE_SOURCE_ID())*((~ (rt0.c4)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((t0.c0) ISNULL) IN ()) FROM t0, rt0; -- 0ms;
SELECT COUNT(((t0.c0) NOT NULL)) OVER ( ROWS  UNBOUNDED PRECEDING) FROM t0, rt0; -- 0ms;
SELECT ALL (- (rt0.c1)) FROM rt0, t0 INDEXED BY i82; -- 0ms;
SELECT ALL (((rt0.c2 IN ()))OR(((((rt0.c4)OR(rt0.c0)))OR(rt0.c2)))), SQLITE_SOURCE_ID(), ((CASE WHEN rt0.c1 THEN 0.6252088226476438 ELSE rt0.c4 END)IS(((((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)))AND(t0.c94)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))) FROM rt0 INDEXED BY i82, t0 WHERE ((((x'')) BETWEEN ((CASE WHEN 0.8499382995039603 THEN x'' ELSE x'' END)) AND ((LOWER(x'')))));SELECT DISTINCT t0.c94 FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM) NOT BETWEEN ((('453815680') IS TRUE)) AND (MIN(rt0.c3))) FROM rt0 ORDER BY ((CASE WHEN -90778383 THEN '' WHEN rt0.c0 THEN rt0.c4 WHEN t0.c94 THEN rt0.c2 END)/(CAST(t0.c0 AS BLOB)));SELECT DISTINCT (~ (UNICODE(0Xffffffffcd8ace39))), (((x'')<(t0.c94)) IN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))), NULL, CAST(((t0.c94) NOTNULL) AS TEXT), COUNT(*) OVER () FROM rt0;SELECT DISTINCT ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)!=(0x4366b9e3)) FROM t0 WHERE (CAST(-1.573604888E9 COLLATE RTRIM AS BLOB));SELECT COUNT(*) OVER ( ORDER BY json_insert((t0.c94 IN ()), rt0.c1 COLLATE NOCASE, ((rt0.c0)||(rt0.c2)), ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c2, (((NULL))<((rt0.c3))), (t0.c94 IN ()))  NULLS FIRST, (TRIM(DISTINCT t0.c94) IN (rt0.c4, '643231829'))), CAST((NOT (rt0.c2)) AS NUMERIC), (((rt0.c0 IN ())) NOT NULL) FROM t0 WHERE (((CAST('c轥[z>7' AS INTEGER))<>(CAST('1388767848' AS NUMERIC))));SELECT ALL (+ (TOTAL(t0.c0))), ((t0.c0 COLLATE RTRIM)|((('-1886398030') ISNULL))), (rt0.c2 IN (CAST(rt0.c3 AS TEXT))) FROM rt0, t0 WHERE (((((x'd606')GLOB(NULL))) BETWEEN (((0.7182508699232762)OR(0.6714903591332056))) AND (NULL))); -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c0 AS NUMERIC)  WHEN GROUP_CONCAT(rt0.c2) THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END FROM rt0;SELECT ALL GROUP_CONCAT(((((rt0.c4)AND(rt0.c1)))OR(rt0.c3))) OVER () FROM t0 WHERE (NULLIF(DISTINCT CASE WHEN 0xffffffffac1fbab1 THEN 0.6645961121776254 ELSE NULL END, ((('+')) BETWEEN ((-840484873)) AND ((0.3708944459740884)))));SELECT DISTINCT (~ (((rt0.c2)GLOB(t0.c94)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT t0.c0, CAST(rt0.c1 COLLATE RTRIM AS TEXT), ((((0x4b262406 COLLATE RTRIM)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)))AND(CAST(rt0.c1 AS NUMERIC))) FROM t0, rt0; -- 0ms;
SELECT rt0.c4 FROM t0, rt0 WHERE (((((SQLITE_COMPILEOPTION_USED(''))OR('309820234' COLLATE BINARY)))AND(LIKELY(DISTINCT NULL)))); -- 0ms;
SELECT DISTINCT ((((0.47395582207957976)<(rt0.c0)))<=(t0.c94)) FROM t0, rt0 NOT INDEXED WHERE ((('Ou*叝' IN ()) IN ())); -- 0ms;
SELECT DISTINCT (((((rt0.c3 IN (t0.c94, rt0.c2)))AND(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))))OR((+ (rt0.c3)))) FROM t0;SELECT DISTINCT ((t0.c94) NOTNULL) FROM t0; -- 0ms;
SELECT ALL rt0.c3 FROM rt0 WHERE ((UNLIKELY(DISTINCT NULL) IN ())) LIMIT 1019268057 OFFSET 1882963562; -- 0ms;
SELECT ALL rt0.c0 FROM t0, rt0 WHERE ((((x'd9aa' IN ('0.30399942181460715')))<<(((445790626)=(''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)<<(rt0.c0)))-(rt0.c2 COLLATE RTRIM)) FROM t0, rt0; -- 0ms;
SELECT TOTAL((((rt0.c1))<>((t0.c0)))) OVER ( ORDER BY (((NOT (rt0.c3))) IS FALSE) DESC  NULLS LAST) FROM rt0 ORDER BY ((((t0.c94)OR(t0.c0)))OR((+ (rt0.c3))))  NULLS LAST, CAST(rt0.c3 AS BLOB) COLLATE BINARY DESC  NULLS LAST;SELECT DISTINCT ((PRINTF(t0.c94, rt0.c1, rt0.c3))<=(((t0.c0)<=(rt0.c2)))) FROM rt0, t0 WHERE ((((NULL) ISNULL) IN (((1.153218585E9) ISNULL), ((x'')||('D*g)+თQ8B'))))); -- 1ms;
SELECT DISTINCT MAX(1429267669 COLLATE BINARY) FROM rt0, t0 WHERE (((((']') IS FALSE))<((((0.8445856588838412, '782392532', x''))==(('-1967311108', 0.17499328931858749, NULL)))))); -- 0ms;
SELECT ALL (((NULL, rt0.c2, rt0.c0)) NOT BETWEEN (((~ (t0.c94)), ((rt0.c4)<(rt0.c1)), rt0.c3 COLLATE NOCASE)) AND ((((rt0.c3)&(t0.c94)), rt0.c1, rt0.c3))) FROM t0 WHERE (CASE 'RbEB0ￗ|u('  WHEN NULL THEN NULL WHEN '1648709841' THEN 0.33808776628601345 WHEN '' THEN NULL END COLLATE BINARY COLLATE BINARY);SELECT ALL (((t0.c0)>>(rt0.c0)) IN ()) FROM rt0 LIMIT 2060670868 OFFSET 926772619; -- 0ms;
SELECT ((((rt0.c2 COLLATE BINARY)AND(LOWER(t0.c0))))OR(UNLIKELY(DISTINCT t0.c0))), ((t0.c94) NOT NULL), rt0.c1 FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((NOT (0Xffffffffcec30f66)))GLOB(CAST(t0.c94 AS TEXT))), (~ (rt0.c3)) COLLATE BINARY, PERCENT_RANK() OVER () FROM rt0, t0 WHERE ((((('') BETWEEN ('389007304') AND (0.6801972269831257)))<(((x'')|(''''))))); -- 0ms;
SELECT DISTINCT (((((((rt0.c2, t0.c0, rt0.c3))>((t0.c94, t0.c0, rt0.c3))))AND(((rt0.c2)OR(rt0.c3)))))OR((rt0.c2 IN ()))) FROM t0, rt0; -- 0ms;
SELECT ((CAST(rt0.c4 AS NUMERIC))IS NOT(((((rt0.c0)OR(t0.c0)))OR(rt0.c0)))) FROM t0, rt0 WHERE ((NOT ((('315365523') IS FALSE)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL))) ISNULL), x'', SUM(((((t0.c0)OR(t0.c94)))OR(rt0.c0))), (ABS(DISTINCT t0.c94) IN ()) FROM rt0, t0 WHERE ((((~ (NULL)))>=((~ (1232632502))))); -- 0ms;
SELECT DISTINCT rt0.c1, MIN(((rt0.c3)%(t0.c0))), rt0.c2 FROM rt0 WHERE ((+ ('-1267501215' COLLATE BINARY)));SELECT 'mI_悿얮U}' FROM t0 WHERE ((CAST('ep' AS TEXT) IN ())); -- 0ms;
SELECT CAST(CASE 0.8013901760418722  WHEN rt0.c3 THEN rt0.c4 END AS NUMERIC) FROM t0, rt0 WHERE (''); -- 1ms;
SELECT DISTINCT rt0.c4 FROM rt0, t0; -- 0ms;
SELECT ALL (('1703789647') NOTNULL) FROM t0, rt0 WHERE (((((((x'') BETWEEN ('615583178') AND (0.5496909753225526)))OR(CASE '~+z珻06S'  WHEN x'e69f' THEN -2.40069213E8 ELSE NULL END)))AND((('-2014016890') NOT BETWEEN (0.19651156534449654) AND (0.6343113665412549))))); -- 0ms;
SELECT (+ (((rt0.c1) ISNULL))), ((((((t0.c94)OR(t0.c94)))AND('-1455208403'))) BETWEEN (((rt0.c4) NOT NULL)) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))), (((('-1886398030')AND(rt0.c4 COLLATE NOCASE)))OR(((t0.c0)<(rt0.c2)))) FROM t0, rt0 WHERE ((((CAST(540659521 AS BLOB), ('' IN ()), ((((0x4361b75f)AND(NULL)))OR('?R')), CASE WHEN '1976618491' THEN -493053840 WHEN 1740676898 THEN x'b72f' WHEN 0.30399942181460715 THEN '837732219' END, ((NULL)<<(x''))))<(((((x'', '-428006238', NULL)) BETWEEN ((0.7179962625854747, x'c184', 0.12123343610091142)) AND (('{LIo9_4', '58056685', NULL))), (('-1274542070')*(0.18146732841261537)), (- ('32468655')), (('') NOT BETWEEN ('') AND (NULL)), ((x'')|(x'')))))); -- 0ms;
SELECT ALL ((((rt0.c4)>(rt0.c0)))>>(((t0.c94) BETWEEN (rt0.c1) AND (rt0.c4)))), (((t0.c94) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()), ((CAST(rt0.c4 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND ((t0.c0 IN (t0.c0)))) FROM rt0, t0; -- 0ms;
SELECT ((((((rt0.c1) IS TRUE))AND((+ ('w&}U')))))OR(rt0.c4 COLLATE BINARY)) FROM rt0 NOT INDEXED, t0 WHERE (((NULL)OR('')) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT ALL CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE WHEN t0.c0 THEN t0.c94 ELSE t0.c94 END END, (((rt0.c2)<=(rt0.c3)) IN (0.9746477746651881, rt0.c4)), (((x'')/('2143359512')) IN (((rt0.c0) BETWEEN (t0.c94) AND (rt0.c1)), rt0.c4)) FROM rt0 WHERE (((((((6.2015155E8)==('344887149')))OR((NOT ('.Zq~')))))OR(CASE ''  WHEN 'Kr2o}>' THEN NULL ELSE x'' END))) LIMIT -1294660363;SELECT CAST(((rt0.c3) IS TRUE) AS INTEGER) FROM t0 WHERE (highlight(((((0.9502946846397881)OR(NULL)))AND(0.505633413711201)), (('\t>EdEFB.') ISNULL), ((('0.25834983633022623', NULL, x'')) BETWEEN (('1153218585', x'', '1675860404')) AND (('782392532', NULL, '-833398159'))), ('-286811418' IN (0.6803877329090121)))) LIMIT -1847847818 OFFSET -1949493022;SELECT DISTINCT LEAD(TRIM(CASE WHEN rt0.c2 THEN '1379105513' END), ((((NULL)>>(t0.c94))) NOT NULL), (NOT ((t0.c0 IN ())))) OVER () FROM rt0, t0 WHERE (((CASE -7.44043207E8  WHEN '-1018095733' THEN 2009618254 END)+(CAST(x'49f1' AS TEXT)))); -- 0ms;
SELECT DISTINCT (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END))<>(((rt0.c4 IN (rt0.c1))))) FROM t0 WHERE ((- ((~ (273011318))))) LIMIT -1463093783;SELECT DISTINCT (- ((((t0.c0)) NOT BETWEEN ((t0.c94)) AND ((x''))))), rt0.c4, (((- (rt0.c0))) IS TRUE) FROM rt0, t0 WHERE (((((x'8c2b')%(NULL)))>>(((NULL)<<(0.36906242738686357))))); -- 0ms;
SELECT DISTINCT IFNULL(COUNT(*), (('798422406') ISNULL)) FROM rt0, t0 WHERE (((CASE WHEN NULL THEN 'jP&c' END) IS FALSE)) LIMIT -265774811; -- 0ms;
SELECT DISTINCT COUNT(AVG(x'')) FROM rt0;SELECT DISTINCT TOTAL(rt0.c4) FROM t0 WHERE ((((((((((((NULL, x'', 0.7755045068509338))<=((0.7676007028935171, 0.517481181240153, 'FK2S'))))OR((((x'')) NOT BETWEEN ((x'')) AND ((0.22236131049823438))))))AND(CAST('3+' AS REAL))))AND((('Q텣i\OsI_') NOT NULL))))OR(CAST(NULL AS REAL))));SELECT DISTINCT ((((rt0.c2)<<(rt0.c3)))OR((((rt0.c3, rt0.c2, rt0.c4)) NOT BETWEEN ((0x763a4747, t0.c0, t0.c0)) AND ((t0.c94, rt0.c2, t0.c0))))) FROM rt0 ORDER BY SUBSTR(rt0.c1, '-582808941') COLLATE NOCASE DESC  NULLS LAST, CAST(LIKELY(t0.c94) AS BLOB)  NULLS LAST;SELECT DISTINCT t0.c0 COLLATE BINARY, (((((rt0.c2) BETWEEN (t0.c94) AND (x'593c'))))==((((rt0.c4)<=(rt0.c2))))), (rt0.c4 COLLATE NOCASE IN ((rt0.c0 IN ()))) FROM rt0 WHERE (0.25834983633022623) LIMIT -758883688;SELECT NULL FROM rt0, t0 WHERE (((x'915c') IS FALSE) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c94 THEN rt0.c2 WHEN t0.c94 THEN '' WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c3 END)AND(CASE 0Xffffffffb9f97b2c  WHEN 'c}&' THEN rt0.c2 END)))OR('{r')) FROM t0 WHERE (((((-684219375, NULL, x'245e')) NOT BETWEEN ((NULL, '1467159718', NULL)) AND ((NULL, NULL, 'j*7'))) IN ()));SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (((((rt0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c1))<=((t0.c94, rt0.c3, rt0.c4, rt0.c2, rt0.c0))))) AND ((((rt0.c3)*(rt0.c1))))) FROM t0, rt0 WHERE (HEX(CASE WHEN 'bl0b2v[vF' THEN 0.7929986782146996 ELSE 0.05201697013345763 END)) GROUP BY CAST(CASE rt0.c2  WHEN NULL THEN t0.c0 END AS REAL) HAVING ((((((((((((((t0.c0)AND(t0.c0)))OR(rt0.c4)))AND(CASE WHEN x'' THEN rt0.c4 END)))AND(CAST(rt0.c3 AS BLOB))))OR(CAST(x'' AS INTEGER))))AND(((((t0.c0)OR(rt0.c4)))AND(x'a04f')))))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE 0.8883559710293178 END)); -- 0ms;
SELECT DISTINCT ((((1.7976931348623157E308)OR(rt0.c2)))OR(t0.c0)) COLLATE RTRIM FROM rt0;SELECT ALL MAX(((rt0.c3)>>(rt0.c3)) COLLATE NOCASE), CASE (rt0.c0 IN (rt0.c1, t0.c94, t0.c0))  WHEN AVG(rt0.c4) THEN t0.c94 WHEN (((rt0.c4))>=((rt0.c4))) THEN ((t0.c94)||(rt0.c3)) WHEN (NOT (t0.c0)) THEN CASE WHEN rt0.c4 THEN t0.c94 ELSE rt0.c1 END WHEN UPPER(DISTINCT '0.568011819105568') THEN ((t0.c94)&(rt0.c3)) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c1)%(rt0.c4)) ELSE (((t0.c0)) NOT BETWEEN (('lsW.VZ')) AND ((rt0.c1))) END, ((((CAST(t0.c0 AS REAL))AND(((t0.c94)OR(rt0.c4)))))OR(((NULL) ISNULL))) FROM rt0 WHERE (CAST(CASE WHEN '-1967311108' THEN '0.29742227540365207' ELSE -1018095733 END AS NUMERIC)) GROUP BY (((+ (rt0.c1)))IS(t0.c0)) HAVING 0.640874831339944;SELECT LIKE(t0.c0, t0.c94) COLLATE NOCASE FROM rt0 WHERE (load_extension(json('820509516'), TYPEOF(DISTINCT '782392532')));SELECT ((((t0.c94)|(t0.c94))) IS TRUE) FROM t0 WHERE (((0.17558573836728197) BETWEEN (((x'9b0d') ISNULL)) AND (CAST('k7Mjaz' AS TEXT)))) GROUP BY (~ (((((((((((((rt0.c3)AND(t0.c0)))OR(t0.c0)))OR(rt0.c3)))OR(0x6414ccc4)))OR(rt0.c3)))OR(rt0.c4)))) HAVING TOTAL(t0.c94);SELECT DISTINCT (((((rt0.c2))=((t0.c94))))>(((rt0.c3)>=(rt0.c3)))), ((rt0.c4) NOT NULL), COUNT(((rt0.c4)GLOB(rt0.c1))), RANK() OVER (), ((((x'a942') NOTNULL))IS(((rt0.c4) IS FALSE))) FROM t0;SELECT DISTINCT ((CASE 0.9892137647691915  WHEN t0.c0 THEN rt0.c2 END) NOT NULL), rt0.c0, (((rt0.c2 IN (rt0.c0)))>>(((rt0.c0)>>(rt0.c4)))), ((((((rt0.c0) BETWEEN (t0.c94) AND (rt0.c2)))AND(((((0Xffffffffb9fb8d64)OR(t0.c94)))OR(rt0.c1)))))AND(((t0.c0)*(rt0.c1)))), (((rt0.c3 IN (0.9733128682634007, t0.c94))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c1)<=('-1592774085')))) FROM rt0 WHERE (((((((((((((-1.583706926E9)AND('L﷭툊I{~#	M')))OR(NULL)))OR('1966191089')))OR(0.30817742057318)))OR((0.7964399152470204 IN ()))))OR(((0.510382625622615)>>(x'cddf')))));SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((t0.c94)) AND ((rt0.c4))) COLLATE BINARY, (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))))>((((t0.c94)LIKE(rt0.c2))))), (rt0.c4 COLLATE BINARY IN ()) FROM t0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ABS(rt0.c1 COLLATE RTRIM), CAST(t0.c94 COLLATE BINARY AS NUMERIC), LEAD(CASE (t0.c0 IN ())  WHEN (t0.c0 IN ()) THEN (((t0.c0))<(('e*?Bgm'))) WHEN ((NULL) BETWEEN (t0.c94) AND (t0.c94)) THEN NULLIF(t0.c0, t0.c94) WHEN ((t0.c0) NOT BETWEEN (t0.c94) AND (t0.c0)) THEN ((t0.c0)%(t0.c0)) END, IFNULL(DISTINCT t0.c0 COLLATE NOCASE, (- (t0.c0))), (t0.c94 IN (0.8140187515323467, (t0.c0 IN ())))) OVER () FROM t0;SELECT DISTINCT RANK() OVER () FROM t0 ORDER BY CAST(rt0.c0 AS TEXT) DESC  NULLS FIRST;SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((t0.c0) BETWEEN ('em%r') AND (rt0.c3)))) AND ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2))))) FROM rt0, t0 LIMIT -137549652 OFFSET 708725990; -- 0ms;
SELECT TOTAL(CAST(rt0.c4 AS REAL)) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT x'' FROM rt0, t0 GROUP BY json_valid((rt0.c2 IN ())) HAVING 0.4817366092175924; -- 0ms;
SELECT (((rt0.c3)) NOT BETWEEN ((CASE WHEN t0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN t0.c94 THEN rt0.c4 ELSE t0.c0 END)) AND ((NULL))) FROM rt0;SELECT ALL (((NOT (rt0.c1))) IS TRUE) FROM t0;SELECT DISTINCT (('-1149483228')+(-1393005064)), NULL, CAST(UNICODE(rt0.c3) AS BLOB) FROM rt0 WHERE ((((((('k!ywh')AND(x'')))AND(0.054777856391027946))) NOT BETWEEN ((('') ISNULL)) AND (((((NULL)OR(x'b846')))AND(NULL))))) GROUP BY (~ (((t0.c94) NOT BETWEEN (rt0.c3) AND (rt0.c0))));SELECT DISTINCT (- (MAX(t0.c94))), CAST(CAST(t0.c94 AS BLOB) AS NUMERIC), CAST(rt0.c4 AS BLOB) FROM rt0, t0; -- 0ms;
SELECT ALL TOTAL(((t0.c94)AND(t0.c94))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0, t0 GROUP BY CASE WHEN rt0.c3 THEN (((t0.c0, rt0.c2, 0xffffffff9e5229a5))>((rt0.c1, rt0.c4, rt0.c0))) ELSE UNLIKELY(NULL) END, t0.c94, (((((rt0.c0)==('')), ((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c3)), PRINTF(t0.c0)))<=((((((((((rt0.c4)OR(rt0.c1)))OR(t0.c0)))OR(t0.c94)))OR(rt0.c3)), t0.c94 COLLATE RTRIM, '5'))) HAVING TOTAL(((((((((rt0.c1)AND(rt0.c3)))OR(t0.c0)))AND(t0.c0)))AND(x''))); -- 1ms;
SELECT CAST((- ('1816739983')) AS REAL) FROM rt0, t0 WHERE (((0.046690710800260105 COLLATE BINARY) NOT NULL)) LIMIT -1794512035; -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c0) AND (x''))) ISNULL), ((((NULL) NOT NULL)) IS TRUE), ((((rt0.c2)AND(((t0.c94)<(rt0.c1)))))AND(COUNT(rt0.c4))), CAST(((rt0.c2)%(rt0.c4)) AS REAL), COUNT(CAST(rt0.c2 AS BLOB)) OVER () FROM t0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN x'' THEN t0.c94 END)>=(CASE rt0.c3  WHEN t0.c94 THEN rt0.c0 END)) FROM t0 WHERE ((((- ('%MVha9')))<<(UPPER(NULL))));SELECT DISTINCT SUM(MAX(t0.c0)) FROM t0, rt0 NOT INDEXED WHERE (((((NULL) IS TRUE))&(CASE x''  WHEN 0.019731918009910587 THEN x'' WHEN 0.6252088226476438 THEN 0.09505750128418722 WHEN 'kUZ)1' THEN NULL END)));SELECT DISTINCT (((((x'', t0.c0, t0.c94))>((x'', x'', x'35cc')))) NOTNULL) FROM rt0 WHERE ((((NULL)) NOT BETWEEN ((((((0.6178363063672178)OR(0.562042301096842)))AND(0x6ecf0fd)))) AND ((-1372086471))));SELECT ALL NTILE((((t0.c94 IN (t0.c94, t0.c0))) NOT BETWEEN (PRINTF(t0.c0)) AND ((((1.147635539E9, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c94, t0.c0)) AND ((t0.c0, t0.c0, t0.c94)))))) OVER () FROM t0 WHERE ((~ ((((x'')) BETWEEN ((633556009)) AND ((x'')))))); -- 0ms;
SELECT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN '1966191089' THEN rt0.c2 WHEN rt0.c4 THEN t0.c0 ELSE t0.c94 END)GLOB(rt0.c4 COLLATE NOCASE)) FROM rt0 WHERE (0.3288771973950645);SELECT DISTINCT LAST_VALUE(((LIKELIHOOD(t0.c0, 0.9240855611975883)) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c94) BETWEEN (t0.c0) AND (0.46503046221220323))))) OVER (), (((rt0.c1)) BETWEEN (((- (rt0.c0)))) AND ((((((((((t0.c0)OR(rt0.c3)))OR(t0.c94)))OR(t0.c0)))OR(rt0.c2))))), load_extension(TOTAL(t0.c94)) FROM t0 ORDER BY ((((t0.c94)==(0Xffffffffa03cb489)))LIKE(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))) ASC  NULLS FIRST, ((rt0.c2) NOT NULL) COLLATE NOCASE ASC;SELECT (((- (rt0.c2)))GLOB(((rt0.c0)-(t0.c0)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (NOT (COALESCE(t0.c0, t0.c0, rt0.c3, t0.c94, rt0.c4, rt0.c4))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN (((('0.1229320313731026')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))) AND ((rt0.c3 IN (rt0.c0))))) OVER () FROM rt0 WHERE ((('620151550')*(x'')) COLLATE RTRIM); -- 1ms;
SELECT CASE (rt0.c3 IN (rt0.c0))  WHEN CASE x''  WHEN rt0.c1 THEN t0.c94 ELSE rt0.c0 END THEN AVG(rt0.c0) END FROM t0, rt0 WHERE (CASE CAST(0.23349565984129517 AS TEXT)  WHEN CASE x''  WHEN '-1186209000' THEN 0xffffffffaa812f92 WHEN NULL THEN NULL WHEN NULL THEN x'' END THEN ('' IN ('598278071')) END); -- 0ms;
SELECT DISTINCT 0.5830812519231356 FROM rt0, t0 LIMIT -681134093; -- 0ms;
SELECT ALL NTILE(CAST(((((rt0.c3)OR(rt0.c0)))OR(t0.c94)) AS BLOB)) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((x''))) AS INTEGER) FROM rt0, t0 WHERE (((json_array('579156494', 1.444024863E9, 327423792, NULL))IS NOT(((0X3f07388b) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))GLOB(((rt0.c2) IS FALSE))) FROM rt0 WHERE (((((((x'') ISNULL))AND((((6.2015155E8, NULL, NULL))>((0.08993574562929574, '', NULL))))))OR(''))); -- 0ms;
SELECT (- (((rt0.c0)||(rt0.c3)))), (+ (CASE WHEN t0.c94 THEN rt0.c4 ELSE -781692188 END)), (((((rt0.c3, rt0.c2, t0.c0))>((rt0.c3, rt0.c3, t0.c0)))) IS TRUE) FROM rt0 WHERE (((((0.6727139041469536) NOT BETWEEN ('-1666642300') AND (NULL)))>=(UNICODE(0.975027474862071)))) LIMIT 1114184029 OFFSET 818176981;SELECT ALL (x'7f41' COLLATE BINARY IN (LENGTH(rt0.c2))) FROM t0, rt0; -- 0ms;
SELECT ALL -1905599931, CAST((NOT (rt0.c3)) AS NUMERIC), rt0.c3 FROM rt0 ORDER BY (- (((rt0.c1)*(-1978908653)))); -- 0ms;
SELECT (rt0.c2 IN (t0.c0)) COLLATE BINARY FROM rt0 GROUP BY (((-719745264) BETWEEN (rt0.c1) AND (rt0.c4)) IN ()), ABS(rt0.c1), (((((rt0.c4)AND(rt0.c2)))AND(rt0.c2)) IN ()), ((((((((((t0.c94)AND(rt0.c2)))OR(t0.c0)))OR(t0.c94)))AND(rt0.c3)))<<(rt0.c4)), ((((rt0.c4)>(rt0.c4)))OR((rt0.c2 IN ())));SELECT ALL SQLITE_COMPILEOPTION_USED(((((t0.c94)AND(rt0.c3)))AND(rt0.c3))) FROM t0, rt0 ORDER BY ((rt0.c4) IS TRUE) DESC; -- 0ms;
SELECT ALL COUNT(((rt0.c3)LIKE(t0.c94))) OVER ( PARTITION BY 5.93419565E8, ((t0.c0 COLLATE NOCASE)||(((t0.c0) BETWEEN (t0.c94) AND (0.31059182087900306))))) FROM rt0, t0; -- 0ms;
SELECT ((COUNT(rt0.c3)) BETWEEN (t0.c0) AND (CAST(rt0.c0 AS NUMERIC))), (~ (((rt0.c3)-(rt0.c4)))), ((TOTAL('544044547')) IS TRUE) FROM rt0, t0 WHERE (((ABS(DISTINCT 0.6759168357201201))+(CAST('356557547' AS BLOB)))); -- 0ms;
SELECT DISTINCT ((((((((TYPEOF(DISTINCT rt0.c1))AND(rt0.c0)))AND(SUM(rt0.c0))))OR((t0.c0 IN (rt0.c4, rt0.c0)))))OR(rt0.c4 COLLATE BINARY)) FROM t0, rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))OR(t0.c0)))AND(t0.c0)))OR(rt0.c2)))<<(CASE t0.c94  WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c0 THEN t0.c0 ELSE rt0.c4 END)) DESC, '-1455208403'  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG(TOTAL((t0.c0 IN (rt0.c3)))), (NOT (((((((((((((rt0.c1)AND(rt0.c0)))AND('NY?㉍gf0P+')))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))), ((rt0.c1)!=(UNLIKELY(t0.c0))) FROM t0 WHERE (((('|rk&X&툴7t')) NOT BETWEEN ((CASE x'e71a984f'  WHEN x'' THEN -6.02797483E8 WHEN '' THEN '^|k+' WHEN '1881649807' THEN '䦵' ELSE ']x*w' END)) AND (('#0' COLLATE RTRIM))));SELECT t0.c94 FROM rt0, t0; -- 0ms;
SELECT ALL AVG(((rt0.c1)|(t0.c94))) FROM t0;SELECT ALL (CASE WHEN rt0.c1 THEN t0.c94 END IN (((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))) FROM t0, rt0; -- 0ms;
SELECT ALL (((rt0.c1)<(rt0.c0)) IN ()) FROM t0, rt0 WHERE ((((NULL COLLATE BINARY, ((NULL) BETWEEN ('-1264691804') AND ('-1706492715')), ((0.4851703512754436)<=(''))))<=((0.7700958762561656, CAST(x'' AS NUMERIC), (+ (NULL)))))); -- 0ms;
SELECT TYPEOF(rt0.c1), CAST(((((rt0.c4)OR(rt0.c0)))OR(t0.c94)) AS TEXT), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE) FROM rt0 INTERSECT SELECT DISTINCT GROUP_CONCAT((NOT (NULL))) OVER (), NTILE((NOT (((rt0.c2)>>('V{Z6Y,Q*9'))))) OVER (), json_patch((NOT (rt0.c3)), ((((rt0.c0)AND(rt0.c3)))AND(t0.c0))) FROM t0, rt0;SELECT SUM(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END), json_quote(GROUP_CONCAT(rt0.c2)), x'a36e' FROM t0;SELECT DISTINCT TOTAL(MAX(t0.c94, rt0.c0)) FROM t0;SELECT ABS(DISTINCT (rt0.c2 IN (rt0.c0))), CASE WHEN CASE t0.c94  WHEN rt0.c2 THEN x'87f22767' WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c0 WHEN 'OU*叝' THEN t0.c94 WHEN rt0.c2 THEN rt0.c1 END THEN ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))OR(t0.c94)) WHEN (+ (rt0.c4)) THEN SUM(rt0.c4) WHEN 0.8737426932804105 THEN (NOT (t0.c0)) ELSE (((rt0.c1, 0.6217636745608026, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, t0.c94)) AND ((rt0.c0, rt0.c4, rt0.c3))) END, 1166970725 FROM t0 WHERE (((0.643300921160867)%((('-1776417879') BETWEEN ('0.2994374876192386') AND (x'')))));SELECT DISTINCT t0.c94, (NOT (rt0.c3 COLLATE RTRIM)), TOTAL(((((t0.c94)OR('9˘Y>')))OR(rt0.c3))) OVER () FROM t0, rt0; -- 0ms;
SELECT CAST(x'' AS INTEGER) FROM rt0, t0; -- 0ms;
SELECT ((rt0.c2)/(rt0.c2 COLLATE NOCASE)) FROM rt0, t0 WHERE ((('2083585644') NOT BETWEEN ((-1406263138 IN (x''))) AND (IFNULL('iK}4䌳P*!', 0xffffffff8963b9bc)))); -- 1ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 END)LIKE(CASE WHEN rt0.c1 THEN t0.c94 WHEN rt0.c1 THEN rt0.c4 WHEN t0.c94 THEN t0.c0 END)) FROM t0;SELECT DISTINCT IFNULL(DISTINCT ((rt0.c3)IS NOT(rt0.c0)), (rt0.c0 IN ())), x'7a40', (((TRIM(DISTINCT t0.c0)))>=((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 ELSE t0.c94 END))) FROM t0;SELECT DISTINCT ((((((t0.c0)AND(t0.c0)))OR(0.6289193951135472))) NOTNULL), 'mqf⸘OC', (- (x'7c70')) COLLATE BINARY, (NOT (rt0.c2)), '1444024863' FROM rt0 WHERE (0.5532655904069492);SELECT (((t0.c0)IS NOT(rt0.c0)) IN ('nኌ' COLLATE NOCASE, rt0.c1)) FROM t0, rt0 WHERE (((((0.6877034670701158) NOT NULL))>(((NULL)>>(0.9219702814266507))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c94)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(t0.c0)))<<(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM t0;SELECT rt0.c3 COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT DISTINCT (+ ((((0.30518746107819517, t0.c0, t0.c0))>((rt0.c3, rt0.c2, rt0.c0))))) FROM rt0, t0 LIMIT -1057902400 OFFSET 1533813722; -- 0ms;
SELECT DISTINCT ((rt0.c1)IS(t0.c94)) COLLATE BINARY COLLATE RTRIM, (CAST(rt0.c4 AS TEXT) IN ()), (CASE WHEN rt0.c4 THEN rt0.c0 ELSE t0.c0 END IN ()) FROM t0 WHERE (CAST((((7.82392532E8))>((x''))) AS INTEGER)) GROUP BY x'', CAST(rt0.c4 AS BLOB) COLLATE RTRIM, (- (((('')) NOT BETWEEN ((x'')) AND ((rt0.c4))))) LIMIT 1976618491 OFFSET 1232632502;SELECT DISTINCT CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((t0.c0)=(rt0.c3)) END FROM t0, rt0; -- 0ms;
SELECT ALL ((MAX(t0.c94))>=('')) FROM t0, rt0 WHERE ((((NULL)) BETWEEN ((UNLIKELY(DISTINCT '75kJS5Wﬆ'))) AND ((((('⵼T!簫LL')) NOT BETWEEN ((0Xffffffff9ca90e84)) AND (('997365986'))))))) ORDER BY (- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c4)))) DESC LIMIT -1991572190 OFFSET 9223372036854775807; -- 0ms;
SELECT DISTINCT json_type(((rt0.c3)AND(t0.c0))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT SUM(((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) FROM t0, rt0 WHERE ((((NOT (NULL)))|(IFNULL(0.9384419374195104, '-433925991')))); -- 0ms;
SELECT DISTINCT (((((NULL, t0.c0, 0.8526335920752509)) BETWEEN ((rt0.c1, rt0.c0, rt0.c4)) AND ((rt0.c4, t0.c94, rt0.c3))))+(t0.c0)) FROM rt0, t0 LIMIT 2098455803 OFFSET -1097162777; -- 0ms;
SELECT DISTINCT ((((rt0.c1)>(rt0.c1))) NOT NULL) FROM t0;SELECT DISTINCT t0.c0, CASE (rt0.c2 IN ())  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN ((rt0.c3)IS NOT(rt0.c2)) END, AVG(((0.5637173645017757)>=(t0.c0))) OVER () FROM rt0;SELECT DISTINCT ((((((rt0.c0)OR(rt0.c4)))OR(t0.c94))) NOT NULL) FROM rt0, t0 WHERE (((((((((((((('Q')OR(x'')))AND('2136825995')))OR(0x6d77ca27)))AND(0.9412470822477343)))AND(0.9848310253557034)))OR(0.7559061658891324)) IN ())); -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) NOTNULL)  WHEN (((rt0.c2))>=((rt0.c1))) THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((t0.c94) NOT NULL) THEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)) WHEN LOWER(rt0.c1) THEN t0.c94 COLLATE BINARY ELSE ((rt0.c4)>=(rt0.c4)) END, ((((((rt0.c0)<<(t0.c94)))OR((NOT (rt0.c0)))))AND(((t0.c0)GLOB(rt0.c0)))), ((NULL)IS NOT(CAST(rt0.c0 AS INTEGER))) FROM rt0, t0 WHERE (((CASE WHEN NULL THEN NULL WHEN '997365986' THEN '' WHEN -1.903027289E9 THEN 0.5658124624649962 END) NOT NULL)); -- 0ms;
SELECT ALL (((LOWER(DISTINCT rt0.c1)))<((SUM(rt0.c0)))), (((((NULL IN ()))OR(((2.083585644E9)IS NOT(rt0.c2)))))AND((rt0.c4 IN ()))), LAST_VALUE(((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))) ISNULL)) OVER () FROM rt0, t0; -- 0ms;
SELECT (((rt0.c4)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c4) NOT NULL)))), t0.c0, TOTAL(HEX(DISTINCT t0.c94)) FROM t0, rt0 GROUP BY ((json_patch(rt0.c4, t0.c0))GLOB(t0.c0)) HAVING ((UNLIKELY(DISTINCT rt0.c4))+(rt0.c3 COLLATE RTRIM));SELECT DISTINCT SUM(0Xfffffffff1026ad8) COLLATE NOCASE, ((((((rt0.c3)OR(t0.c0)))OR(rt0.c4)))|((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))), (((rt0.c0)) NOT BETWEEN ((TOTAL(rt0.c2))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN 9.97365986E8 ELSE rt0.c1 END))) FROM t0, rt0 WHERE (((((('-1043506855', 0, 0.5552454876851913)) NOT BETWEEN ((NULL, x'4296', 0Xffffffffec8b66b5)) AND ((NULL, 0.5134714625252934, x'')))) IS FALSE)); -- 0ms;
SELECT (- (MAX(rt0.c2))), (((rt0.c4)) NOT BETWEEN ((SUM(rt0.c4))) AND ((json_valid(rt0.c0)))), 0x179fe744 FROM t0, rt0 WHERE (TRIM(DISTINCT (x'' IN (NULL, NULL)), ((x'598878f8')%(0.5883626692494823)))) LIMIT 674622840 OFFSET 170773227; -- 0ms;
SELECT DISTINCT -4.31645149E8 FROM rt0, t0 WHERE (((((0.341224282244748) BETWEEN (0.24295065188605347) AND ('-516888933'))) BETWEEN (((((((((((((NULL)AND(0.32194148666975186)))OR(NULL)))OR(x'')))AND('Rl\rh')))OR(0.477020129385232)))OR('0.8568125870926045'))) AND ((('0.2177766387871417')>>(-1.37549652E8))))) GROUP BY (((t0.c0)) NOT BETWEEN (((rt0.c4 IN ()))) AND ((((rt0.c1)IS NOT(t0.c0))))); -- 1ms;
SELECT DISTINCT ((((t0.c0)IS(t0.c0)))*(((rt0.c1)OR(rt0.c0)))) FROM rt0 WHERE ((((CASE ''  WHEN '1303810536' THEN 4.81086212E8 END))>(((+ (NULL))))));SELECT ALL ((COUNT(rt0.c3)) NOT BETWEEN (((t0.c0) NOTNULL)) AND (CASE rt0.c4  WHEN rt0.c3 THEN t0.c0 ELSE '1315963245' END)) FROM rt0, t0 WHERE (CASE WHEN (('') ISNULL) THEN ((0.26666457672738786) IS TRUE) ELSE (0.26634045831066666 IN ()) END) ORDER BY COALESCE((((rt0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((t0.c0, t0.c0, rt0.c0)) AND ((rt0.c1, '-271374413', '+'))), ((t0.c0) ISNULL), CAST(rt0.c3 AS INTEGER), rt0.c1 COLLATE RTRIM, ((rt0.c1) BETWEEN ('-1193421301') AND (rt0.c1)), CAST(rt0.c3 AS NUMERIC)); -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0, rt0; -- 0ms;
SELECT ALL CAST(((t0.c0)>>(t0.c0)) AS NUMERIC), ((+ (t0.c94)) IN (((rt0.c2)IS(x'')))), MIN(rt0.c1), ((x'')IS((('-602797483') BETWEEN (rt0.c1) AND (rt0.c0)))), CASE WHEN (((t0.c94)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN COUNT(*) END FROM t0 WHERE ((((((((((+ (0.9472561507170189)))AND((NULL IN ()))))AND(CASE WHEN 0.7525000794986563 THEN x'' ELSE x'' END)))OR(((1884504089)>(NULL)))))OR(((NULL) BETWEEN (-937687762) AND ('1?F/G')))));SELECT DISTINCT SUM((rt0.c3 IN ())) OVER () FROM t0 WHERE ((((559536011)) NOT BETWEEN ((((0.26946536390085774) BETWEEN (0.025400437460923908) AND (x'')))) AND ((((NULL)<<(x'')))))); -- 0ms;
SELECT DISTINCT CASE WHEN 0x7319a688 THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END, -1.848179317E9, CAST((t0.c0 IN ()) AS REAL) FROM rt0, t0 NOT INDEXED; -- 0ms;
SELECT ALL LOWER(DISTINCT NULL) COLLATE BINARY, (((rt0.c0)) NOT BETWEEN ((((x'') BETWEEN (t0.c0) AND (t0.c0)))) AND ((((rt0.c3)>(rt0.c4))))), (+ ((rt0.c0 IN ()))) FROM rt0;SELECT ((x'') IS FALSE), COUNT(*), (((((+ ('0.643300921160867')))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)))))OR((rt0.c4 IN ()))) FROM rt0;SELECT DISTINCT GROUP_CONCAT(t0.c94 COLLATE BINARY) COLLATE BINARY, ((MIN(rt0.c4))&(0.7215556653386167)), (((- (rt0.c4)))<=(CASE WHEN t0.c0 THEN rt0.c2 ELSE t0.c0 END)) FROM t0, rt0 WHERE ((((('-1289397939')>>(-7.70940926E8))) BETWEEN ((((('')OR(-7.95164174E8)))AND(NULL))) AND (((NULL)>=(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (CAST((0.7942933580073431 IN ()) AS INTEGER)); -- 0ms;
SELECT MIN((t0.c94 IN ())) COLLATE NOCASE, CASE MIN(NULL)  WHEN t0.c0 COLLATE NOCASE THEN ((rt0.c4)>=(rt0.c0)) WHEN (x'' IN ()) THEN t0.c0 COLLATE BINARY WHEN ((t0.c0)-(rt0.c0)) THEN CASE rt0.c4  WHEN '' THEN rt0.c2 ELSE rt0.c4 END END, LAST_VALUE(x'') OVER () FROM rt0 WHERE (((((('-736618484') NOT BETWEEN ('TRUE') AND (0.8705943589102891))))=((((((0.6714903591332056)OR(0x4ca5cdf8)))OR(NULL))))));SELECT ALL NULL FROM t0 WHERE ((- (0.40284868609697455)) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT NULL, (- (CAST(rt0.c0 AS NUMERIC))), (NOT (CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN 0.21016600812591668 WHEN -1148457955 THEN rt0.c3 END)) FROM t0 GROUP BY ((CASE WHEN t0.c94 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN '' ELSE t0.c94 END)>=(((rt0.c4) NOT BETWEEN (t0.c0) AND (''))));SELECT ALL (((rt0.c2)) BETWEEN ((((rt0.c3) ISNULL))) AND (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4)))))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE '-446025036'  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END COLLATE BINARY, ((((t0.c94)-(rt0.c1))) NOT BETWEEN (((((NULL)OR(rt0.c4)))OR(rt0.c1))) AND (IFNULL(DISTINCT t0.c0, rt0.c0))), t0.c94 FROM t0 WHERE (((CAST(0X52337ae9 AS REAL))>>(CASE 'H'  WHEN 4.81086212E8 THEN 0.42665326089377065 END))) ORDER BY t0.c0  NULLS FIRST;SELECT DISTINCT (PRINTF('-759501357') IN (CAST(rt0.c2 AS INTEGER))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (t0.c0 IN (((rt0.c1) IS TRUE))) FROM rt0 WHERE (CAST(((x'') NOTNULL) AS BLOB)) LIMIT 1357244362 EXCEPT SELECT t0.c94 FROM t0 WHERE ((((NULL)) NOT BETWEEN ((x'')) AND (('n	'))) COLLATE BINARY);SELECT 1.147635539E9 FROM rt0 WHERE (CAST((- (0.7876838147948252)) AS REAL)); -- 0ms;
SELECT (rt0.c0 IN ((rt0.c1 IN ()))) FROM rt0 GROUP BY ((rt0.c4) BETWEEN (rt0.c1) AND (t0.c94)) COLLATE BINARY ORDER BY CASE ((rt0.c2)<<(rt0.c0))  WHEN rt0.c3 COLLATE NOCASE THEN rt0.c1 COLLATE RTRIM END ASC;SELECT DISTINCT CAST(CASE WHEN rt0.c3 THEN rt0.c1 END AS BLOB) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)AND((rt0.c3 IN ()))))OR(((rt0.c0)||(rt0.c1)))), LIKELIHOOD(DISTINCT -1989953092, 0.6377936123550807), ((CAST(t0.c94 AS BLOB))*(t0.c94 COLLATE NOCASE)) FROM rt0 GROUP BY ((rt0.c2) NOT NULL);SELECT DISTINCT SQLITE_VERSION(), FIRST_VALUE((((('448718658')||(t0.c0)))<<(((t0.c94)LIKE(t0.c94))))) OVER (), (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT '', ((CAST(rt0.c3 AS NUMERIC)) BETWEEN (CAST(rt0.c4 AS NUMERIC)) AND (((t0.c94)>>(rt0.c2)))), COUNT((((rt0.c4))=((0.8684933582773298)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT LIKE(((t0.c94)GLOB(t0.c0)), ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) FROM rt0 LIMIT 561664421 OFFSET 620151550;SELECT DISTINCT (((rt0.c4)+(0.5971073830707615)) IN (CASE WHEN rt0.c4 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END)) FROM rt0 WHERE (((LTRIM(NULL))+(UPPER(DISTINCT x''))));SELECT CAST((((t0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) AS REAL), SUM(rt0.c1) OVER (), ((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND (('8id	f'))) IN ()), ((((((((0.1847894365697451)AND(rt0.c1)))AND(rt0.c3)))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))))AND((~ (t0.c94)))), json_array_length(((0.004591405401938697)<=(rt0.c2)), TYPEOF(rt0.c3)) FROM t0, rt0;SELECT '163641012' FROM rt0, t0 WHERE (((CASE WHEN NULL THEN 0x3033b420 END) NOTNULL)); -- 0ms;
SELECT CASE rt0.c4 COLLATE BINARY  WHEN ((rt0.c2)!=(t0.c0)) THEN ((rt0.c3)<<(rt0.c4)) WHEN (+ (rt0.c2)) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN TOTAL(t0.c94) WHEN TYPEOF(DISTINCT rt0.c0) THEN 379238592 WHEN (t0.c94 IN (rt0.c1)) THEN ((t0.c94) ISNULL) END, (((((((((x'')AND(rt0.c1)))AND(t0.c0)))OR(rt0.c3)))AND(t0.c94)) IN ()), ((((((((AVG(rt0.c0))OR(((rt0.c2) BETWEEN (t0.c94) AND (x'')))))AND((((rt0.c4)) NOT BETWEEN ((t0.c94)) AND ((t0.c94))))))AND(((0.7530399905152826)/(rt0.c3)))))AND((((t0.c94)) BETWEEN ((t0.c94)) AND ((x''))))) FROM rt0;SELECT DISTINCT ((-1521603527)IS((+ (rt0.c4)))), NULL, (((((rt0.c4)<(t0.c94))))<>((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0))))), CASE WHEN rt0.c1 THEN rt0.c3 END COLLATE NOCASE, ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c3))) AND (x'' COLLATE NOCASE)) FROM t0, rt0 WHERE (rtreenode(('~!T\rfa' IN (0x7fc7560e)), (~ (NULL)))) GROUP BY NULL COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((rt0.c3)%(rt0.c3))) IS TRUE), CUME_DIST() OVER (), ((ABS(rt0.c4))+(COALESCE(rt0.c2, t0.c94))) FROM rt0 FULL OUTER JOIN t0 ON t0.c0 WHERE ((ABS(NULL) IN (((x'ca85')>>('\r5̏H?x'))))); -- 0ms;
SELECT DISTINCT ((((((0.0921351974857697)OR(rt0.c0)))AND(rt0.c4))) IS TRUE) FROM t0;SELECT ALL t0.c94 FROM t0 WHERE ((0.9282341354143974 IN ())) LIMIT 1429267669; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOTNULL))GLOB(x'56cf')), NULL, CUME_DIST() OVER (), 'V{Z6Y,Q*9', AVG(((rt0.c0) NOT BETWEEN (-4.40924187E8) AND (rt0.c3))) FROM t0, rt0 WHERE (LIKELY(x'')); -- 0ms;
SELECT ALL (t0.c94 COLLATE RTRIM IN ()) FROM rt0 WHERE (CAST(CASE WHEN x'f49f1301' THEN 0.8001257682748032 WHEN -512217172 THEN 0.12847513973210156 WHEN 0.07805967056905216 THEN 'R὞-z' END AS REAL)); -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c4) AND (t0.c94)))IS(((rt0.c2)=(rt0.c0)))) FROM rt0, t0 INDEXED BY i82 WHERE (((0.7219909882055524)>>(NULL)) COLLATE BINARY) GROUP BY CAST(((((rt0.c1)AND(t0.c94)))OR(rt0.c1)) AS NUMERIC), (((((rt0.c3) ISNULL)))>=((((rt0.c0) NOT BETWEEN (rt0.c1) AND (-4.97056889E8))))), CASE ((rt0.c2)+(rt0.c2))  WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN t0.c94 THEN t0.c94 ELSE rt0.c0 END WHEN NULL THEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c4)) WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c3)>(rt0.c1)) END HAVING ((CAST(t0.c0 AS BLOB)) ISNULL); -- 0ms;
SELECT (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)) IN ()) FROM t0, rt0 WHERE (((TRIM('', 0.6427469614007785)) BETWEEN (((x'')IS(0.4142508544044289))) AND (CAST(NULL AS NUMERIC)))) GROUP BY rt0.c1 HAVING CASE ((rt0.c1) NOTNULL)  WHEN CAST(t0.c94 AS TEXT) THEN (t0.c0 IN ()) ELSE rt0.c4 COLLATE NOCASE END; -- 0ms;
SELECT DISTINCT rt0.c0, ((rt0.c2)&(COUNT(rt0.c0))), AVG(TRIM(DISTINCT rt0.c1, rt0.c2)) FILTER(WHERE ((CAST(t0.c0 AS BLOB))==((t0.c94 IN ())))) OVER () FROM rt0;SELECT DISTINCT ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN 0.5071901420696332 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c94 THEN rt0.c3 END) NOT NULL) FROM rt0 LIMIT 581638209;SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c3 AS REAL)) OVER ( GROUPS BETWEEN ((((CASE WHEN rt0.c4 THEN rt0.c2 END)AND(t0.c0 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (t0.c94) AND (t0.c94)))) FOLLOWING AND rt0.c2 FOLLOWING) FROM t0;SELECT CAST(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN 'ke' THEN rt0.c2 ELSE t0.c94 END AS TEXT) FROM t0, rt0 LIMIT -1050967475; -- 0ms;
SELECT DISTINCT ((t0.c94 IN (rt0.c3, rt0.c1)) IN ()), ((((rt0.c0, rt0.c3, rt0.c0))==((t0.c0, t0.c0, t0.c94))) IN ()), rt0.c4, '-1570376679', ((((t0.c94)<<(NULL))) BETWEEN (CASE t0.c94  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c3 WHEN '437125173' THEN t0.c94 ELSE rt0.c0 END) AND (((rt0.c4) NOTNULL))) FROM rt0 NATURAL JOIN t0; -- 0ms;
SELECT ALL ((((((((CASE '0.7530399905152826'  WHEN t0.c0 THEN rt0.c2 END)AND(((rt0.c0)|(rt0.c3)))))OR(HEX(-1.967311108E9))))OR((((t0.c94)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))))))AND(t0.c0)), (NOT (((rt0.c1)OR('.8d%P	')))), ((json_array(rt0.c0, rt0.c2)) NOT NULL) FROM t0 WHERE (((CAST('1076380783' AS NUMERIC)) NOT BETWEEN ((- (NULL))) AND (((-4.40924187E8) IS FALSE))));SELECT DISTINCT ((((rt0.c0)>=(rt0.c2)))>>(((((rt0.c3)OR(rt0.c3)))OR(t0.c0)))) FROM t0;SELECT rt0.c1, (((t0.c94)<>(rt0.c1)) IN ()), ((x'')*(((rt0.c1)!=(rt0.c4)))), ((((((((((((rt0.c1)OR(x'')))OR(t0.c94)))AND(x'')))OR(rt0.c2)))OR((((rt0.c0))<((t0.c0))))))OR(json_insert(rt0.c3, rt0.c4, rt0.c1))), UPPER(DISTINCT ((rt0.c1) ISNULL)) FROM rt0, t0 WHERE (CAST(NULL COLLATE BINARY AS TEXT)) ORDER BY t0.c0 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0, rt0 GROUP BY '8}', (((t0.c94)) BETWEEN ((((t0.c94) ISNULL))) AND (((((t0.c94)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))), CAST(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)) AS INTEGER) HAVING LIKELIHOOD(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE x'9ebc89e7' END, 0.04362476880654009) ORDER BY ((LAST_INSERT_ROWID())OR(SQLITE_COMPILEOPTION_GET(t0.c94))) DESC, CASE ((rt0.c4)/(NULL))  WHEN 0.07488389921427352 COLLATE RTRIM THEN CASE t0.c94  WHEN t0.c94 THEN rt0.c3 ELSE t0.c0 END END  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))&(AVG(rt0.c3))), CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c2)AND(t0.c0)))AND(t0.c94)) WHEN ((((rt0.c1)AND(t0.c0)))OR(t0.c0)) THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS TEXT) END, TYPEOF(0X17f134eb), (~ (((t0.c94)OR(t0.c0)))), ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) BETWEEN (((rt0.c0) NOTNULL)) AND ((- (rt0.c0)))) FROM t0;SELECT ALL ((((TRIM(DISTINCT rt0.c1, rt0.c2))AND(((((t0.c94)AND(rt0.c4)))OR(rt0.c3)))))AND(rt0.c0 COLLATE RTRIM)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(x'' AS NUMERIC) FROM rt0 WHERE ((((((((x'a1289fb6')OR('b䵺')))AND(0.699157193294346))))>((CAST(x'dddc' AS TEXT))))); -- 0ms;
SELECT (((t0.c0 IN (rt0.c2)))||(rt0.c2)), rt0.c1, SUM((((rt0.c2, rt0.c0, rt0.c3, rt0.c3, t0.c94)) NOT BETWEEN ((rt0.c4, t0.c94, rt0.c2, t0.c94, rt0.c3)) AND ((rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c3)))) FROM t0 WHERE (CAST(((0.036998764344042256) BETWEEN (0.18503683964506445) AND ('wyCC')) AS NUMERIC)) ORDER BY (((rt0.c3)) BETWEEN ((CASE rt0.c4  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c1 END)) AND (((((rt0.c3, rt0.c3, t0.c0)) BETWEEN ((t0.c94, t0.c94, rt0.c1)) AND ((rt0.c1, t0.c0, rt0.c3))))));SELECT DISTINCT CAST(CAST(rt0.c4 AS INTEGER) AS NUMERIC) FROM t0 WHERE ((((((0.8774944029912773))<=((0.5876812291492781))))>((((NULL)) BETWEEN ((-966747644)) AND ((0.09699875229669308))))));SELECT ALL CASE WHEN -1308175948 THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (t0.c94 IN ()) THEN rt0.c3 WHEN UPPER(rt0.c2) THEN (rt0.c0 IN ()) ELSE (((rt0.c4))<=((t0.c94))) END FROM t0 WHERE (CAST('nq' COLLATE BINARY AS INTEGER));SELECT DISTINCT (((t0.c0 IN ()))-(((t0.c94) IS FALSE))) FROM rt0, t0 WHERE (((TRIM('-411536389')) NOT BETWEEN ('-945198351') AND (((((NULL)OR(NULL)))AND('fLl	gI'))))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0) NOT NULL)) FROM rt0 WHERE (((CASE NULL  WHEN NULL THEN -1811540698 END) BETWEEN ('' COLLATE RTRIM) AND ((('-91447829')<(''))))) GROUP BY (((rt0.c1, rt0.c2, t0.c0)) NOT BETWEEN ((IFNULL(rt0.c4, t0.c94), ((((t0.c0)AND(rt0.c2)))OR(t0.c94)), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 END)) AND ((((rt0.c4)%(rt0.c2)), (~ (t0.c94)), (t0.c94 IN ())))), ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(rt0.c1)))AND(((rt0.c0) NOT NULL))), '-770940926' HAVING (- (((t0.c94) NOT BETWEEN (t0.c0) AND (rt0.c3)))) ORDER BY (((((((rt0.c3)AND(t0.c94)))AND(t0.c0))))<((CASE WHEN rt0.c4 THEN t0.c0 ELSE t0.c0 END)))  NULLS FIRST;SELECT ((CAST('NC0W{Q+' AS TEXT)) NOTNULL) FROM t0; -- 0ms;
SELECT ALL (COUNT(rt0.c4) IN ()) FROM rt0, t0; -- 0ms;
SELECT (CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN NULL ELSE rt0.c3 END IN (rt0.c0)) FROM rt0 WHERE (((((-2.40069213E8)%('')))<=((- (0Xf9daba1)))));SELECT ALL (((rt0.c4)) NOT BETWEEN ((NULL)) AND ((COUNT(*)))) FROM t0 WHERE (((NULL IN ()) IN ()));SELECT ALL (NOT (rt0.c4)) COLLATE NOCASE, ((t0.c0) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c0 AS TEXT))), RANK() OVER () FROM rt0 WHERE (LTRIM(CASE WHEN 1.232632502E9 THEN -1.27454207E9 WHEN x'' THEN x'' WHEN x'' THEN x'' ELSE '' END, LIKELY(NULL)));SELECT ALL ((((CAST(rt0.c3 AS INTEGER))AND(INSTR(NULL, t0.c94))))AND((- (915987119)))), (- (CAST(rt0.c3 AS NUMERIC))), ((((CAST(rt0.c1 AS NUMERIC))AND(((NULL) IS FALSE))))OR(((rt0.c1)-(t0.c0)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3)<=(t0.c94)) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (t0.c94) AND ('274983661'))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (NULL)) FROM t0 WHERE (((((x'')-(x'6e6c'))) BETWEEN (((0.757050166981462)==(x''))) AND (CASE WHEN 7.19726404E8 THEN x'82c7' WHEN NULL THEN 626693886 WHEN '結.' THEN 'eo' ELSE 0.8796175732492285 END)));SELECT DISTINCT AVG(NULL), ((rt0.c1) NOT NULL), (((((((((rt0.c0)AND(rt0.c2)))AND(t0.c0)))AND(rt0.c0)))AND(rt0.c4)) IN ()) FROM t0 WHERE (CAST(((NULL)IS NOT(-795164174)) AS BLOB));SELECT DISTINCT ((((NULL)AND(CAST(rt0.c4 AS BLOB))))OR((('tn')<=(rt0.c0)))) FROM rt0, t0 WHERE (CAST((+ (x'')) AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)>(rt0.c0)) AS INTEGER), CAST(CAST(0.7334504512906925 AS REAL) AS REAL), CAST((rt0.c2 IN ()) AS NUMERIC) FROM rt0 WHERE ((((~ ('-894904454'))) ISNULL)); -- 0ms;
SELECT ALL ((((CASE WHEN t0.c94 THEN rt0.c1 END)AND(((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))))AND(GROUP_CONCAT(rt0.c4))), CUME_DIST() OVER (), ((((t0.c94) NOT BETWEEN (t0.c94) AND (t0.c0)))/(ABS(DISTINCT rt0.c0))) FROM t0, rt0 LIMIT 972693238 OFFSET -1487595682; -- 0ms;
SELECT ALL CASE WHEN ((((((((rt0.c1)OR(t0.c94)))OR(3.98584345E8)))AND(rt0.c4)))OR(rt0.c3)) THEN x'' ELSE NULL END, ((((((rt0.c4)AND(NULL)))AND(t0.c0))) BETWEEN (IFNULL(rt0.c2, rt0.c2)) AND (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))), (((t0.c0)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((((t0.c0, rt0.c2, rt0.c4))==((rt0.c3, rt0.c2, t0.c0)))))) FROM t0 WHERE (IFNULL((- (x'')), ((0.6798877176294424) NOT BETWEEN ('') AND ('qQ'))));SELECT DISTINCT ((GROUP_CONCAT(rt0.c3)) NOT BETWEEN ((0.4345314473875109 IN ())) AND ((rt0.c3 IN ()))) FROM t0, rt0 WHERE (('-863325797' IN (NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE (CASE NULL  WHEN NULL THEN '-1879465317' ELSE 0xffffffffebb71f62 END COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT ALL ((COUNT(*))IS((rt0.c0 IN (rt0.c4, rt0.c0)))), ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c1 THEN '366311077' WHEN 0.8318690504359572 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 ELSE x'3b7d5f25' END)), (((rt0.c1 IN (rt0.c1)))LIKE(CASE WHEN rt0.c2 THEN rt0.c3 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c4 THEN x'd630' ELSE rt0.c3 END)) FROM rt0 WHERE (CAST(CHANGES() AS NUMERIC)) LIMIT -1463093783 OFFSET -2076187493;SELECT ((CAST(rt0.c1 AS NUMERIC))*(CASE WHEN rt0.c1 THEN rt0.c1 END)), ((((((((rt0.c1 COLLATE NOCASE)OR((((t0.c94))==((t0.c0))))))AND(rt0.c0 COLLATE BINARY)))AND(((((t0.c94)AND(rt0.c3)))AND(rt0.c4)))))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)), '' FROM t0 WHERE (((IFNULL(763078345, '<ylQG( ')) IS FALSE));SELECT ALL rt0.c3, (NOT (MIN(rt0.c4))), ((((+ (rt0.c2)), ((t0.c94) IS TRUE), CAST(rt0.c0 AS NUMERIC)))<=((((rt0.c2) NOT NULL), rt0.c4 COLLATE BINARY, ''))) FROM rt0;SELECT ALL ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)/(UPPER(rt0.c1))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((~ (rt0.c2))) IS FALSE), 0.716188128578456, TOTAL(((((rt0.c3)AND(t0.c0)))AND(rt0.c2))) OVER () FROM t0;SELECT ((rt0.c4 COLLATE NOCASE) NOT NULL) FROM rt0 WHERE (((('646632537')) NOT BETWEEN (('1076380783')) AND ((((x'')IS NOT(0.34032462566763255)))))); -- 0ms;
SELECT DISTINCT LEAD(CASE WHEN NULL COLLATE BINARY THEN (('-704241608')IS(rt0.c4)) WHEN (NOT (rt0.c0)) THEN (rt0.c4 IN ()) WHEN (0xffffffff9a15d7e4 IN ()) THEN ((rt0.c2)LIKE(rt0.c3)) END, CAST(((rt0.c0)<=('1609115139')) AS NUMERIC), CAST(((rt0.c1)|(rt0.c3)) AS INTEGER)) OVER (), '1379105513', MAX(rtreenode(rt0.c4, t0.c0)) FROM rt0;SELECT ((0X6b4c49b2) ISNULL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM t0, rt0; -- 0ms;
SELECT ALL (((((rt0.c0, rt0.c3, rt0.c4)) BETWEEN ((rt0.c3, t0.c0, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c4)))) NOT NULL) FROM rt0, t0; -- 1ms;
SELECT DISTINCT ((((rt0.c0)IS(0.508607433244126))) NOTNULL), ((((((((((((rt0.c4 COLLATE NOCASE)AND(t0.c0 COLLATE RTRIM)))OR((~ (rt0.c2)))))AND(0.6714903591332056)))AND((+ (rt0.c4)))))AND((rt0.c2 IN ()))))AND(((t0.c0)-(t0.c94)))), t0.c94 FROM t0, rt0 WHERE (((x'')<=('-2050009649')) COLLATE NOCASE); -- 0ms;
SELECT ALL (- (((((rt0.c0)OR(NULL)))OR(rt0.c4)))) FROM rt0, t0 WHERE (((CASE '-891952147'  WHEN 0.06864173508036242 THEN NULL END)<<(NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c1)<<(t0.c0))) AND (((rt0.c2) NOTNULL))), ((CASE WHEN rt0.c3 THEN rt0.c3 END) NOTNULL), 0.2574332280685606 FROM rt0 WHERE ((((((''))>=((x'')))) BETWEEN (((0.9167706204498315)AND(0.06364589258998987))) AND (((0Xffffffffa943482d)<=(x'')))));SELECT DISTINCT ((rt0.c4)LIKE(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END)), (NOT (((t0.c94) NOTNULL))), rt0.c4 FROM rt0, t0; -- 0ms;
SELECT ALL LEAD(((((CAST('JM' AS INTEGER))OR(((t0.c0)GLOB(NULL)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))), ((((CAST('0.7539936881956192' AS INTEGER))OR(x'')))AND(((t0.c94)>>(t0.c0)))), (- ((((t0.c94)) BETWEEN ((t0.c94)) AND ((t0.c94)))))) OVER () FROM t0 WHERE (STRFTIME((+ (0.45449451630335347)), (('-767289552')LIKE(x'47d5')), 0.12529775564084233 COLLATE NOCASE)); -- 0ms;
SELECT ALL ((((rt0.c0) BETWEEN (NULL) AND (rt0.c0)))IS((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((x'563b'))))), ((((((((rt0.c0)OR(x'')))AND(rt0.c4)))OR(((rt0.c1)AND(t0.c94)))))AND('0.15616201557277065')), ABS(CAST(rt0.c0 AS REAL)) FROM t0;SELECT ((IFNULL(DISTINCT '-785633057', rt0.c3))<>(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) FROM rt0, t0; -- 0ms;
SELECT ALL ((((((((((((t0.c94)OR(t0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))AND(((rt0.c0)/(rt0.c3)))))AND(CASE rt0.c3  WHEN rt0.c3 THEN 0.7222667271568467 ELSE rt0.c3 END)) FROM t0;SELECT DISTINCT LAG(((((((rt0.c1) NOTNULL))AND(((rt0.c3)<(rt0.c3)))))OR(CAST(rt0.c3 AS NUMERIC))), LOWER(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND (('-1573604888')))), (((rt0.c3 IN ())) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND ((+ (NULL))))) OVER ( ORDER BY CASE WHEN 0.7701437311121766 THEN CAST(rt0.c4 AS REAL) END DESC  NULLS LAST), ((CASE WHEN t0.c0 THEN rt0.c0 END)LIKE(((rt0.c3)%(rt0.c2)))), ((((rt0.c3) IS TRUE))OR((((t0.c0, t0.c0, rt0.c3))>=((rt0.c3, rt0.c0, rt0.c4))))) FROM rt0 GROUP BY rt0.c0 COLLATE RTRIM LIMIT 1357244362;SELECT rt0.c3, x'45ff', CASE WHEN ((rt0.c3)/(t0.c0)) THEN (~ (rt0.c2)) ELSE (((rt0.c4))<>((rt0.c3))) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((MIN(rt0.c1)))<=((LIKELIHOOD(rt0.c0, 0.24397703090994338)))) FROM t0, rt0 ORDER BY CASE x''  WHEN t0.c94 THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN NULL THEN t0.c94 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN t0.c94 END COLLATE NOCASE FROM t0, rt0 WHERE ((NULL COLLATE RTRIM IN ())); -- 1ms;
SELECT ((((NOT (rt0.c3))))<=((CAST(t0.c94 AS INTEGER)))) FROM t0 WHERE (ABS('*eWl-')) GROUP BY CAST(((rt0.c0) BETWEEN (t0.c0) AND (NULL)) AS TEXT) HAVING x'';SELECT DISTINCT FIRST_VALUE(((((rt0.c1)GLOB(rt0.c4))) BETWEEN ((+ (NULL))) AND (((rt0.c2)OR(rt0.c4))))) OVER (), (MAX(rt0.c2) IN ()), CASE WHEN HEX(DISTINCT rt0.c2) THEN (t0.c94 IN (rt0.c1)) ELSE ((t0.c94)!=(rt0.c2)) END FROM rt0, t0 WHERE (CASE CAST(0.964681713002226 AS NUMERIC)  WHEN json_extract('TD{YM4', x'3d43') THEN ((0.38747572238298755) IS FALSE) ELSE (('880954199') NOTNULL) END) GROUP BY rt0.c1;SELECT NTH_VALUE(CASE WHEN ((((((((t0.c0)OR(rt0.c4)))OR(NULL)))AND(rt0.c3)))AND(rt0.c0)) THEN t0.c94 COLLATE RTRIM WHEN CASE rt0.c4  WHEN t0.c94 THEN t0.c94 WHEN rt0.c3 THEN t0.c94 WHEN rt0.c0 THEN rt0.c2 END THEN ((t0.c0) ISNULL) WHEN CASE WHEN t0.c94 THEN t0.c0 ELSE t0.c0 END THEN (rt0.c1 IN ()) WHEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE t0.c94 END THEN ((((t0.c94)AND(rt0.c0)))AND(rt0.c3)) WHEN ((((((((t0.c94)AND(rt0.c4)))AND(t0.c0)))AND(rt0.c2)))AND(rt0.c4)) THEN ((rt0.c2)!=(rt0.c0)) END, ((CAST(rt0.c0 AS BLOB)) NOT NULL)) OVER () FROM rt0, t0; -- 0ms;
SELECT DISTINCT CASE rt0.c0  WHEN (NOT ('B')) THEN (((rt0.c4))>((rt0.c1))) WHEN rt0.c3 COLLATE RTRIM THEN ('-1018095733' IN ()) WHEN (rt0.c4 IN ()) THEN CAST(t0.c94 AS INTEGER) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((((((58056685 COLLATE RTRIM)OR((((t0.c0, t0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, t0.c94, rt0.c1))))))AND(t0.c94)))OR(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c4)))AND(t0.c0)))OR(rt0.c3)))))OR(((t0.c0)+(rt0.c4)))) FROM rt0;SELECT ((AVG(rt0.c0)) NOT NULL) FROM t0 WHERE (COALESCE(DISTINCT 8.6249687E7 COLLATE BINARY, (((0x7fcfedb7)) BETWEEN ((NULL)) AND (('1076380783'))))) GROUP BY ((((rt0.c0) BETWEEN (t0.c94) AND (rt0.c3))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c0 IN ()))) HAVING ((AVG(0.04861159808318405)) NOT BETWEEN (((rt0.c2) ISNULL)) AND (LIKELY(DISTINCT rt0.c1)));SELECT DISTINCT ((t0.c0) NOT BETWEEN (((t0.c94)LIKE(rt0.c3))) AND (CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 END)) FROM rt0 WHERE (((((x'')IS(265878278)))GLOB(((NULL) NOTNULL)))) LIMIT 1232632502 OFFSET 837049405;SELECT ALL CASE WHEN (((rt0.c0))<>((t0.c94))) THEN t0.c0 WHEN ((rt0.c0)LIKE(t0.c0)) THEN t0.c94 COLLATE BINARY WHEN TOTAL_CHANGES() THEN MAX(rt0.c2) ELSE SUBSTR(NULL, rt0.c4) END FROM t0, rt0 WHERE (((NOT ('싾m?-K')) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN (((t0.c94 IN (rt0.c1)))) AND ((((0.5312906461786294) BETWEEN (rt0.c1) AND (rt0.c3))))) FROM rt0 ORDER BY (((((rt0.c4, rt0.c3, t0.c94)) BETWEEN ((t0.c0, rt0.c1, rt0.c4)) AND ((rt0.c1, rt0.c0, rt0.c0)))) IS FALSE) DESC LIMIT 1;SELECT SQLITE_SOURCE_ID() FROM t0; -- 0ms;
SELECT x'ce3e', (CAST(rt0.c3 AS TEXT) IN ()), UPPER(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))) FROM rt0 WHERE ((((- (''))) NOTNULL)) GROUP BY CASE ((t0.c0) IS FALSE)  WHEN (((-883941958))!=((rt0.c2))) THEN ((rt0.c1) IS FALSE) END, 0.9342010975289817, ((DATE(NULL, rt0.c2, t0.c94)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (((rt0.c4) ISNULL))) ORDER BY (- (((rt0.c2)GLOB(x'')))) DESC LIMIT -770940926 OFFSET -69746951;SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE ('{M'); -- 0ms;
SELECT ALL x'6fd4', (t0.c94 COLLATE BINARY IN (JULIANDAY(rt0.c1, t0.c0, t0.c0))), (((rt0.c4)) NOT BETWEEN ((((rt0.c4) BETWEEN (t0.c0) AND (rt0.c1)))) AND ((CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c3 END))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS INTEGER) FROM t0; -- 0ms;
SELECT (((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)) IN ()) FROM t0 WHERE ((((((((((NOT (x'')))AND('m8<? %')))OR(((x'2b0f')GLOB(0.5234893210094945)))))OR(('-1664541013' IN ()))))AND(((NULL)IS(0.2521499746745621))))); -- 0ms;
SELECT CASE WHEN CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN 0.03930685447817228 WHEN rt0.c0 THEN rt0.c1 END THEN rt0.c2 COLLATE RTRIM END FROM t0, rt0; -- 0ms;
SELECT ALL ((((((rt0.c3) NOTNULL))AND(CAST(t0.c94 AS TEXT))))OR((rt0.c1 IN ()))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(CASE t0.c94  WHEN rt0.c1 THEN t0.c94 END AS TEXT), (t0.c0 IN (CAST(t0.c0 AS TEXT))), ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (t0.c0)))/(t0.c94 COLLATE NOCASE)), (((~ (rt0.c3))) NOT BETWEEN (AVG(rt0.c3)) AND ((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0))))), ((rt0.c3 COLLATE BINARY) IS TRUE) FROM t0, rt0 WHERE ((NOT ((((''))!=(('202962338')))))) ORDER BY UNLIKELY(DISTINCT rt0.c1) COLLATE NOCASE DESC, ((((((t0.c0)<=(rt0.c3)))OR(TRIM(DISTINCT rt0.c2, x'8b92'))))AND(rt0.c0)); -- 0ms;
SELECT DISTINCT CASE CASE WHEN 0X72b18400 THEN rt0.c2 ELSE t0.c94 END  WHEN ((rt0.c0) IS TRUE) THEN (((t0.c0))>((rt0.c2))) END FROM rt0, t0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT ALL (((t0.c94)) NOT BETWEEN ((rt0.c1)) AND ((t0.c94))) COLLATE NOCASE FROM rt0, t0 WHERE ((((~ ('')))=((('T.\t1')-(x''))))); -- 0ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE NOCASE FROM t0, rt0 ORDER BY CAST(t0.c94 AS TEXT) COLLATE BINARY DESC; -- 0ms;
SELECT (((rt0.c1)) BETWEEN (('-1627792044')) AND ((((rt0.c3)-(t0.c94))))) FROM rt0, t0; -- 0ms;
SELECT MAX(CASE WHEN t0.c0 THEN t0.c94 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c94 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END) FROM rt0;SELECT DISTINCT (+ ((NOT (rt0.c2)))) FROM t0, rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(rt0.c4 COLLATE NOCASE) OVER () FROM rt0 WHERE ((((((~ (NULL)))AND(((x'')%(0X44bcb819)))))AND((('344887149') ISNULL)))); -- 0ms;
SELECT ALL (+ (0.6848421792597795)) FROM t0, rt0 WHERE ((x'' IN (((0.7460885517226488)<<('2014713989'))))) GROUP BY ((NULLIF(DISTINCT rt0.c0, ''))==(((rt0.c4)%(rt0.c3)))); -- 0ms;
SELECT ALL ((((rt0.c4)-(t0.c0)))<=(CASE WHEN '-22279695' THEN rt0.c0 ELSE rt0.c0 END)) FROM rt0 LEFT OUTER JOIN t0 ON (((((t0.c0 IN ()))OR((0.5238388915125077 IN (t0.c94)))))AND(CASE ''  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)); -- 0ms;
SELECT x'', CAST(NULL AS INTEGER), LIKELY(DISTINCT ((t0.c94)||(t0.c94))) FROM t0; -- 0ms;
SELECT DISTINCT (NULL COLLATE NOCASE IN ()), TOTAL((NULL IN ()) COLLATE NOCASE), (((rt0.c1)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) FROM t0 WHERE (((('0.19124505913159284')) NOT BETWEEN (('''㖕WehXrsL')) AND ((NULL))) COLLATE NOCASE);SELECT CAST(CASE rt0.c0  WHEN t0.c94 THEN rt0.c3 ELSE rt0.c1 END AS NUMERIC), (((rt0.c4, t0.c94, rt0.c4, rt0.c3, rt0.c3, t0.c94, rt0.c0)) BETWEEN (('O๞N', ((t0.c94) ISNULL), CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN 0.45197080550793545 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END, (rt0.c1 IN ()), '0.643300921160867', x'', ((t0.c0)&(rt0.c0)))) AND ((((((((((rt0.c4)AND(t0.c0)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c1)), NULL, ((rt0.c0)IS NOT(rt0.c4)), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 END, CAST(rt0.c4 AS INTEGER), (+ (rt0.c3)), (rt0.c0 IN ())))), CASE ((x'2996')<<(t0.c94))  WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c4 AS REAL) WHEN (rt0.c1 IN (rt0.c3)) THEN ((rt0.c0)|(rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST(rt0.c3 AS TEXT) ELSE CAST(rt0.c0 AS NUMERIC) END FROM t0, rt0 WHERE ((~ (((NULL) BETWEEN (0Xffffffffab111b45) AND (-3.82241147E8))))); -- 0ms;
SELECT x'' FROM rt0, t0 WHERE (((((((((((0.8876511354687464)AND('')))AND('a')))AND(NULL)))AND(NULL))) NOT BETWEEN (((((((((((((1784158133)AND('H6d*')))AND(x'')))AND(NULL)))AND(880954199)))AND(NULL)))AND('0.19124505913159284'))) AND (((0.7833566317335104) NOT NULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c2 COLLATE BINARY))=((x''))) FROM rt0 WHERE ((~ (CHAR('615583178', '-513437088', NULL, NULL, 0.24731449290440755, x'', 0.1568221656279668)))) LIMIT 1596402648 OFFSET 1838122385; -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c3, t0.c94, rt0.c1, -240802781)) NOT BETWEEN ((((t0.c0) BETWEEN (rt0.c4) AND (t0.c0)), PRINTF(t0.c0), ((rt0.c2)<=(0.7840480696605026)), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c94))), CAST(t0.c0 AS TEXT))) AND ((0.33725232071692157 COLLATE BINARY, UNLIKELY(DISTINCT t0.c94), (- (rt0.c3)), (+ ('-1675060262')), x''))) FROM t0 WHERE (((((((0xffffffffbe97e0e8)OR(0.16254697258199446)))AND(0.6428826693175633))) NOT NULL)) GROUP BY t0.c0 HAVING x'';SELECT x'' FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT t0.c94, '1153218585', (NOT (((t0.c0)OR(t0.c94)))) FROM t0; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(rt0.c4)))AND(0.8042256486661558)))OR(rt0.c2)))AND(rt0.c2))) AND (((t0.c0)>=(t0.c0)))) FROM rt0, t0 WHERE ((((((('-1321505889'))<>((3.15365523E8))), ((((NULL)AND('-1879465317')))AND(0.30399942181460715)), 0.08207862754883266))>=(('', '-90076015' COLLATE RTRIM, (('N%ZVD3')LIKE('798953806')))))); -- 0ms;
SELECT DISTINCT ((((t0.c0)/(rt0.c4)))OR(HEX(t0.c0))) FROM t0, rt0; -- 0ms;
SELECT (~ ((((rt0.c3))==((rt0.c4))))) FROM rt0, t0 WHERE (((((((-1469912298)AND(x'')))OR(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c94)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN rt0.c4 END) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM t0, rt0 WHERE ((+ (((((NULL)OR(x'')))OR(''))))) ORDER BY ((UNLIKELY(DISTINCT t0.c94)) BETWEEN (((rt0.c2) NOTNULL)) AND (((((rt0.c4)AND(rt0.c3)))OR(rt0.c1)))) ASC  NULLS LAST; -- 0ms;
SELECT ALL NULL, CASE ((((t0.c0)OR(rt0.c3)))AND(t0.c94))  WHEN NULL COLLATE NOCASE THEN CAST(rt0.c0 AS INTEGER) END, ((SUM(rt0.c3)) NOT NULL) FROM rt0 WHERE (CAST(CAST('1936217283' AS REAL) AS TEXT));SELECT ((MAX(rt0.c1)) NOT BETWEEN ((rt0.c2 IN (rt0.c0))) AND (2144772545)), ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN t0.c94 THEN rt0.c2 END) BETWEEN ((rt0.c1 IN (rt0.c1))) AND (t0.c94)), (CASE WHEN NULL THEN rt0.c1 ELSE rt0.c3 END IN ()) FROM rt0;SELECT ALL CUME_DIST() OVER () FROM t0, rt0 WHERE ((((x'' IN ())) BETWEEN (json_type('-247450387')) AND (NULL))); -- 0ms;
SELECT ALL COALESCE(DISTINCT ((t0.c94)<>(rt0.c2)), ((rt0.c4) ISNULL)) FROM rt0;SELECT DISTINCT (((((0.5131903262193153 IN ()))AND(((rt0.c3) BETWEEN (rt0.c4) AND (t0.c94)))))AND(rt0.c1 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT ((TOTAL(t0.c0)) NOT BETWEEN (rt0.c2) AND (CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN t0.c0 THEN rt0.c4 WHEN '954418760' THEN t0.c94 END)) FROM rt0;SELECT ALL ((((SUM(9223372036854775807))OR(CASE rt0.c0  WHEN NULL THEN rt0.c1 ELSE rt0.c2 END)))AND(((t0.c0)||(rt0.c4)))), SUM(((rt0.c2)||(rt0.c3))), GROUP_CONCAT(((((rt0.c2)AND(t0.c94)))OR(rt0.c3))) FROM rt0, t0 WHERE (((((x'')>>(x'')))LIKE(0.9289361626080217))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)>=(rt0.c0)))IS(((t0.c94) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) FROM t0;SELECT DISTINCT CAST(((t0.c0) BETWEEN ('j*7') AND (rt0.c1)) AS TEXT) FROM rt0, t0 WHERE (((('' IN ())) NOT BETWEEN (((NULL)|(0.23298154570189045))) AND (((('0.5490600176206942')) NOT BETWEEN ((-1274542070)) AND (('')))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN NULL THEN NULL ELSE x'cdf8' END) BETWEEN (0.2808896856339237 COLLATE NOCASE) AND (CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL (((rt0.c3)) BETWEEN (('-1205976482')) AND (((- (t0.c94))))), (~ ((NOT (rt0.c0)))), ((CASE 0.5795816597834105  WHEN NULL THEN t0.c94 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 ELSE 708725990 END) NOT BETWEEN (0.05216412016626171) AND (CASE t0.c0  WHEN rt0.c1 THEN 'H3O/' WHEN NULL THEN rt0.c3 WHEN t0.c94 THEN rt0.c0 END)) FROM t0 WHERE (((NULL) IS FALSE) COLLATE RTRIM);SELECT (+ ((('\GTw')-(rt0.c0)))) FROM rt0 LIMIT -1664541013 OFFSET 1076380783; -- 0ms;
SELECT DISTINCT ABS(((t0.c0)/(rt0.c3))) FROM rt0 WHERE (CAST(((((NULL)AND(NULL)))AND('')) AS TEXT)) GROUP BY (- (((t0.c94) IS FALSE))), rt0.c0, ((((rt0.c2)=('ឋ姠e')))AND(((t0.c94) ISNULL))), (((~ (t0.c94)))IS NOT(rt0.c1)), ((rt0.c1 COLLATE BINARY)>>(CASE WHEN t0.c94 THEN rt0.c3 ELSE t0.c94 END)) HAVING ((((t0.c0)AND(t0.c94)))*(rt0.c4 COLLATE NOCASE));SELECT DISTINCT (((t0.c0)) BETWEEN (((((t0.c0)) NOT BETWEEN (('#%p+B履<I')) AND ((t0.c94))))) AND ((LOWER('646632537')))) FROM t0 WHERE (0x770ef9f7 COLLATE NOCASE); -- 0ms;
SELECT ((MAX(x''))GLOB(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0)))) FROM t0 WHERE (CASE WHEN (~ (0.6468611104442099)) THEN ((x'')-(0xfd8fb06)) WHEN 0x5dcc6766 COLLATE BINARY THEN RTRIM(NULL) WHEN ((x'')<(0.9689723449203297)) THEN ((NULL) IS TRUE) ELSE (- (x'')) END);SELECT ALL ((COALESCE(DISTINCT rt0.c1, rt0.c3, rt0.c3, rt0.c3, rt0.c4, rt0.c4)) BETWEEN (((rt0.c3) IS TRUE)) AND (t0.c94)) FROM rt0;SELECT COUNT(*) OVER ( ORDER BY (((rt0.c1))>=((CAST(rt0.c0 AS NUMERIC)))) DESC  NULLS LAST, UNLIKELY((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, rt0.c0, NULL)) AND ((rt0.c4, t0.c94, ''))))) FROM rt0;SELECT DISTINCT CASE WHEN t0.c94 COLLATE NOCASE THEN (rt0.c3 IN ()) END, (((x'') BETWEEN (rt0.c1) AND (x'')) IN ()), x'' FROM rt0, t0 WHERE ((NOT (CAST(0x2ae62744 AS BLOB)))); -- 0ms;
SELECT ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT DISTINCT x'3026' FROM rt0 WHERE (((x'') ISNULL) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT COUNT('2098455803') OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (0.4861164498888958); -- 0ms;
SELECT DISTINCT COUNT(rt0.c1), TOTAL(x'') OVER (), (AVG(t0.c0) IN ()) FROM rt0 LIMIT -2031845482; -- 0ms;
SELECT ALL ((((rt0.c2)-(rt0.c3))) NOT NULL) FROM t0, rt0 WHERE (CASE CASE 0.25541634986974615  WHEN x'e959' THEN x'' WHEN NULL THEN NULL WHEN x'e91e92be' THEN NULL ELSE 0.5870671412208281 END  WHEN 0.3863204822857641 THEN (((((((('F햁')AND(0.8077419202435314)))OR(x'')))OR(0.8847242987028628)))OR(0.3721289515330991)) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c3) FILTER(WHERE JULIANDAY((t0.c0 IN ()), ((rt0.c3)+(rt0.c0)), CASE t0.c94  WHEN 575170227 THEN t0.c94 END, (~ (t0.c94)), (+ (rt0.c2)))) OVER () FROM rt0, t0; -- 0ms;
SELECT (((SUBSTR(rt0.c4, t0.c94)))>=((NULLIF(rt0.c3, rt0.c4)))) FROM rt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((((x'')AND(0.6419703078656558)))OR(-863208242))) AND (CAST(x'8cf2' AS INTEGER))));SELECT DISTINCT ((((rt0.c0)<>(rt0.c2))) NOT BETWEEN (((((t0.c94)AND(rt0.c1)))AND(t0.c94))) AND (CAST(t0.c94 AS NUMERIC))), ROW_NUMBER() OVER (), (- (CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END)) FROM t0, rt0 WHERE (LOWER(((0.33271210031218523)*('iw~6')))) LIMIT 127125462; -- 0ms;
SELECT TOTAL(((t0.c0)>(rt0.c4))) COLLATE BINARY, ((((rt0.c1)/(rt0.c3)))*(((t0.c0)&(rt0.c1)))), ((t0.c94)|(rt0.c1 COLLATE NOCASE)) FROM t0, rt0; -- 0ms;
SELECT ALL ((MIN(rt0.c3)) ISNULL) FROM t0, rt0 WHERE (CAST(0x2695c18b AS TEXT)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE t0.c94 END) BETWEEN (rtreenode(rt0.c0, t0.c94)) AND (((rt0.c4) ISNULL))) FROM rt0 WHERE ((((((((((('980527501')OR('58056685')))OR(-1216692871)))AND('-757967491')))OR(9.97365986E8)))IS(((x'cc7e')||('zm')))));SELECT DISTINCT ((((t0.c94) BETWEEN (rt0.c0) AND (rt0.c2)))>(rt0.c3)) FROM rt0, t0; -- 0ms;
SELECT 'f숸' FROM t0, rt0; -- 0ms;
SELECT ALL RANK() OVER () FROM rt0 NOT INDEXED, t0; -- 0ms;
SELECT ALL (((((rt0.c0)OR(t0.c0)))AND(t0.c94)) IN ()) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT '/D>' FROM rt0, t0 WHERE ((((('') BETWEEN (NULL) AND (x'')))GLOB(CAST('-2074723648' AS INTEGER)))) LIMIT 620151550; -- 1ms;
SELECT DISTINCT (CASE WHEN t0.c0 THEN t0.c94 END IN ()) FROM t0; -- 0ms;
SELECT (CAST(0.7001481685603553 AS NUMERIC) IN ()) FROM rt0, t0 WHERE (((((2083585644)/(0.4578615963764562))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_USED(t0.c0)) ISNULL), json_array((((rt0.c0, rt0.c0, rt0.c2, t0.c94, rt0.c2)) NOT BETWEEN ((t0.c94, rt0.c0, rt0.c1, rt0.c4, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c3, NULL, '-1830244904'))), ((((rt0.c0)AND(rt0.c4)))AND(t0.c94)), ((((((((rt0.c0)OR(t0.c94)))AND(t0.c0)))OR(x'')))AND(NULL)), ((rt0.c3)<(t0.c94))), ((LIKELIHOOD(DISTINCT rt0.c0, 0.45809117367847174)) NOT BETWEEN (json_extract(rt0.c0, t0.c0)) AND (TYPEOF(rt0.c2))) FROM rt0;SELECT '' FROM rt0 WHERE (CASE 0.15390704548063638 COLLATE BINARY  WHEN (('516267902') ISNULL) THEN ((NULL) NOT BETWEEN (0.410518140201074) AND (NULL)) WHEN (((x'', x'', x''))<((NULL, 'FALSE', NULL))) THEN IFNULL(DISTINCT -833398159, 782392532) WHEN ((x'') ISNULL) THEN CAST(x'' AS TEXT) END); -- 0ms;
SELECT DISTINCT ((LIKELY(t0.c0))LIKE(((rt0.c2)/(t0.c94)))) FROM t0, rt0 WHERE ((((((0.24076063953669424, '', NULL))=((x'', -566346443, x''))))>>(((((((((0.6242936499008149)AND(0.03270154038374129)))OR(NULL)))AND(x'')))AND(x''))))); -- 0ms;
SELECT ALL CAST(((rt0.c4)<<(rt0.c3)) AS BLOB) FROM t0 INDEXED BY i82 WHERE (('HEeq>d2x' IN ('{}n-v撬+_K')) COLLATE RTRIM);SELECT DISTINCT (rt0.c3 COLLATE RTRIM IN ()), (((((((rt0.c4)) BETWEEN ((t0.c94)) AND ((rt0.c2))))OR(LOWER(rt0.c3))))AND(((t0.c94)>(rt0.c0)))), ((MAX(t0.c94))&(LIKELY(DISTINCT rt0.c1))) FROM rt0;SELECT DISTINCT (NOT (UNLIKELY(DISTINCT t0.c0))) FROM rt0 INDEXED BY i82, t0 WHERE (((((CAST(NULL AS INTEGER))OR(CASE WHEN 0.8567831117799262 THEN '2064179362' WHEN 'YI' THEN x'' WHEN '492702029' THEN x'' ELSE NULL END)))AND(CASE WHEN 0.517481181240153 THEN 0x7b60894e ELSE -375503475 END)));SELECT DISTINCT '646632537', 'x\r', (+ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END)) FROM t0;SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((rt0.c3)<=(rt0.c0)))) AND ((ROUND(t0.c94, t0.c0)))), ((0.23200404221567172) IS TRUE), (NOT (((rt0.c1)LIKE(rt0.c0)))) FROM t0;SELECT CAST(CASE t0.c94  WHEN rt0.c1 THEN rt0.c3 ELSE t0.c0 END AS REAL) FROM rt0, t0; -- 0ms;
SELECT ALL (CAST(rt0.c0 AS REAL) IN ((rt0.c1 IN ()), MAX(-1922058459, rt0.c0, rt0.c2, x''))) FROM t0;SELECT ALL TOTAL(load_extension(rt0.c3)) OVER () FROM t0, rt0 WHERE ((('903912744' IN ()) IN ())) ORDER BY ((((((t0.c94) NOT BETWEEN (rt0.c2) AND (t0.c94)))OR(rt0.c2)))OR(((rt0.c2) NOT NULL))) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((rt0.c3 COLLATE NOCASE) NOT NULL) FROM rt0, t0 WHERE ((((('rྒ')==(0.9832367391808227))) ISNULL)); -- 0ms;
SELECT ALL json_type(((rt0.c3) IS TRUE)) FROM rt0; -- 1ms;
SELECT DISTINCT t0.c94 FROM t0, rt0 WHERE ((((NULL)) NOT BETWEEN (((('836404469') NOT BETWEEN (NULL) AND (0.49834724679809383)))) AND ((NULL COLLATE NOCASE)))) LIMIT 1587641625; -- 0ms;
SELECT DISTINCT LAG((('eu7psoc') BETWEEN (((t0.c0) NOT NULL)) AND ((- (t0.c0)))), ((t0.c0)|(t0.c94)) COLLATE BINARY, rt0.c3) OVER () FROM rt0, t0 WHERE ((+ ('.a&Z?M6'))) ORDER BY (- ((((t0.c94))<(('514219768'))))) ASC; -- 0ms;
SELECT ALL (((((rt0.c4)/(rt0.c4))))<=(((t0.c0 IN (t0.c0, rt0.c3))))) FROM rt0 WHERE (HEX(DISTINCT (('WP㬤謎')/(NULL))));SELECT DISTINCT CASE rt0.c3 COLLATE NOCASE  WHEN UPPER(rt0.c3) THEN ((('G|'))<>((rt0.c0))) WHEN ((rt0.c3) NOT BETWEEN (t0.c94) AND (rt0.c3)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 END WHEN rt0.c2 COLLATE BINARY THEN t0.c94 COLLATE RTRIM ELSE COALESCE(DISTINCT '620151550', rt0.c0) END FROM rt0 WHERE (TYPEOF(DISTINCT x'c378')) ORDER BY (((((t0.c94))!=((t0.c94))))||(CAST(rt0.c0 AS TEXT))) ASC;