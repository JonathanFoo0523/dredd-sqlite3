-- Time: 2024/06/07 21:45:48
-- Database: database22
-- Database version: 3.40.0
-- seed value: 1281928422
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INTEGER ); -- 0ms;
UPDATE t0 SET c0='ewf' WHERE (+ ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))); -- 0ms;
UPDATE OR IGNORE t0 SET c0='^%', c0='1156322156', c0=-682834964; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 REAL ); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (0x6d34d3a9), ('1011314448'), (x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.15631077680065353, 0.5446312478735993, 0xfffffffff0a36093, x'47024a95'); -- 0ms;
INSERT OR FAIL INTO rt0(c3, c2, c1) VALUES (x'1b37', NULL, NULL); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
CREATE INDEX IF NOT EXISTS i88 ON t1(x''); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.6064814452046602), ('876809536'), (0.05356687425550166), ('EH36QH'), (1811379643); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR REPLACE t1 SET (c0)=(NULL) WHERE CASE WHEN ((t1.c0)/(t1.c0)) THEN ((((t1.c0)OR(t1.c0)))OR(t1.c0)) WHEN (t1.c0 IN ()) THEN ((((t1.c0)OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 COLLATE RTRIM THEN (t1.c0 IN ()) END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DROP INDEX "i88"; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c3) VALUES (x'', -257728365, x''); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ABORT t1 SET (c0)=(x'e956'); -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c30 REAL; -- 0ms;
UPDATE t1 SET c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET (c2)=(0.5446312478735993); -- 0ms;
COMMIT; -- 0ms;
UPDATE rt0 SET c1=x'4826'; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.3590462481770631; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR FAIL t1 SET c0=0.3590462481770631, c0=0.24910382727875247 WHERE (+ (((t1.c0)|(t1.c0)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.09218799880460637); -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
COMMIT; -- 1ms;
UPDATE OR IGNORE t1 SET (c0, c0)=('Mj', x'') WHERE CAST(((((t1.c0)OR(t1.c0)))OR(t1.c0)) AS BLOB); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i48 ON t1(518934715 COLLATE RTRIM DESC); -- 0ms;
CREATE INDEX IF NOT EXISTS i90 ON t1((~ (CAST(c0 AS TEXT))) COLLATE NOCASE ASC); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c3) VALUES ('\r', 0.06917257573323177, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t1 SET (c0)=('0.06917257573323177'); -- 0ms;
UPDATE OR ABORT t1 SET c0=0.3925161082488495 WHERE ((((t1.c0)OR(t1.c0)))AND(t1.c0)) COLLATE RTRIM; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(' R') WHERE CAST(((rt0.c2)AND(rt0.c1)) AS NUMERIC); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET (c3, c0)=(x'', x'902f') WHERE ((0.14821422051385047)OR(CAST(rt0.c0 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0.721003347204158); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES ('q\0\n?H+'); -- 0ms;
UPDATE rt0 SET (c1)=(0X43b3780d); -- 0ms;
UPDATE OR REPLACE rt0 SET c1=' }*4jC' WHERE SQLITE_COMPILEOPTION_USED(0.8269251455902252) COLLATE RTRIM; -- 0ms;
UPDATE OR ABORT t1 SET c0=x''; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(x'') WHERE ('2镑czkoz' IN ()); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c40; -- 1ms;
UPDATE rt0 SET (c0)=('876809536') WHERE ((rt0.c3 COLLATE NOCASE)|(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('1811379643'), ('1135835149'), (NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO t1(c40) VALUES (NULL), ('-0.0'), (0.6653064309467868); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
REINDEX RTRIM; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE t0 SET c40=0Xfffffffffec7eb85; -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 1ms;
UPDATE OR REPLACE rt0 SET c1=765197328 WHERE ((((rt0.c2)||(NULL)))==('876809536')); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
CREATE INDEX IF NOT EXISTS i32 ON t0(CASE WHEN (((c40, c40, c40))>((c40, c40, c40))) THEN TRIM(DISTINCT c40) WHEN ((c40)>=(c40)) THEN ((c40)&(0.06917257573323177)) WHEN ((c40) NOT BETWEEN (c40) AND (c40)) THEN (c40 IN ()) END COLLATE NOCASE DESC); -- 0ms;
UPDATE OR REPLACE rt0 SET c1='%GxeXt揕', c1='0.24910382727875247'; -- 0ms;
UPDATE OR FAIL t0 SET (c40)=(0.09218799880460637); -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, prefix = 40); -- 3ms;
VACUUM main; -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('-822115844', x''); -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='518934715', c1=x''; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2105089874);\n; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE ((CHAR(rt0.c3)) BETWEEN (((((rt0.c2)AND(rt0.c2)))OR(NULL))) AND (((rt0.c1) ISNULL))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i41 ON t0(CAST(c40 COLLATE BINARY AS REAL) COLLATE NOCASE ASC) WHERE ((c40 IN (c40)) IN (c40 COLLATE NOCASE)); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.15980880330169267; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.6064814452046602, c0=NULL, c0=x'' WHERE ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR((((vt0.c0))>=((vt0.c0))))))AND(vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
ANALYZE i32; -- 0ms;
VACUUM main; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((((vt0.c0, rt0.c2, rt0.c3))==((rt0.c0, rt0.c2, vt0.c0))))LIKE(t0.c40 COLLATE NOCASE)) FROM t0, vt0, rt0 WHERE (((CAST(x'' AS NUMERIC))||(((((x'')AND(x'')))OR(-949252231))))); -- 0ms;
SELECT DISTINCT CASE IFNULL(DISTINCT rt0.c2, rt0.c1)  WHEN (((((((('()m')OR(t0.c40)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN UPPER(rt0.c3) ELSE CAST('' AS REAL) END FROM t0, vt0;SELECT DISTINCT ((rt0.c0)AND(rt0.c1)) COLLATE RTRIM FROM vt0, rt0, t0 WHERE (((((x'') ISNULL))>>(((((x'')AND(NULL)))AND(0.4227722014832218))))); -- 0ms;
SELECT (((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c2, NULL)))) NOT BETWEEN (((vt0.c0)|(t0.c40))) AND (((rt0.c1)AND(rt0.c0)))), (((rt0.c3 IN (rt0.c0)))-(((t0.c40) ISNULL))), 1043610083 FROM rt0 WHERE (CASE (+ (NULL))  WHEN (((NULL, x'', x''))<=((x'', x'', ''))) THEN ((x'')+(x'bcbdd5b75c74')) ELSE CAST(' }*4JC' AS TEXT) END);SELECT ALL ((LTRIM(-822115844)) BETWEEN (((vt0.c0)<(rt0.c1))) AND (COUNT(rt0.c2))), 0Xfffffffffe40c35e, ((((rt0.c3)OR((NOT (rt0.c2)))))OR(1769678834)) FROM vt0, t0 WHERE (((((CAST(-1126926221 AS NUMERIC))OR(CAST(x'' AS REAL))))AND(((((NULL)OR(NULL)))AND(NULL)))));SELECT LEAD((((((rt0.c2 IN ()))OR(0Xffffffff9abf63d5)))AND(((x'')&(t0.c40)))), (- (0.06690680289072382)), UNLIKELY(DISTINCT rt0.c0)) OVER () FROM t0, rt0, vt0 WHERE (CAST(((((NULL)AND(NULL)))OR('{]{9N%፬')) AS TEXT)); -- 1ms;
SELECT ALL (((((vt0.c0)%(rt0.c3))))<>((CAST(rt0.c2 AS NUMERIC)))) FROM rt0 NOT INDEXED, t0, vt0 WHERE (((('-949252231')<<(NULL)) IN ())) GROUP BY (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) IN ((rt0.c1 IN ()))), CAST(((rt0.c3) BETWEEN (rt0.c1) AND (0.5305767785093289)) AS REAL), (((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE), vt0.c0, CAST((vt0.c0 IN ()) AS TEXT) HAVING ((~ (rt0.c3)) IN (CAST(rt0.c3 AS TEXT))); -- 0ms;
SELECT '[]' FROM t0, rt0 WHERE (CAST(((((-8.22115844E8)AND(x'')))OR('-1353198752')) AS BLOB)); -- 0ms;
SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((NOT (rt0.c1))) AND (MIN(rt0.c0))), (('649111167')GLOB(MAX(rt0.c0))), ((rt0.c2)<<(t0.c40 COLLATE NOCASE)) FROM rt0 INDEXED BY i32, t0, vt0 WHERE (highlight(((0.49864562130868817)>(x'3212')), ((x'babe') NOTNULL), CAST('' AS REAL), (- (NULL))));SELECT ALL ((((((((rt0.c1)OR(vt0.c0)))AND('-1126926221')))OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY FROM t0;SELECT DISTINCT (((+ (rt0.c0))) BETWEEN ((rt0.c3 IN ())) AND (rt0.c2)), rt0.c3, CAST(CAST(rt0.c0 AS BLOB) AS TEXT) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((CASE '0.15980880330169267'  WHEN vt0.c0 THEN vt0.c0 END)IS(((((((((((((((((t0.c40)OR(rt0.c3)))AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(t0.c40)))) FROM vt0 WHERE ((CAST(0.0958562203840968 AS INTEGER) IN (((-257728365) NOT BETWEEN (NULL) AND ('-1947174714')), CASE 0.28997574767900147  WHEN 'e臼跉o\r' THEN '518934715' WHEN '0.3590462481770631' THEN ' }*4jC' WHEN x'' THEN 'E#CFeI\' ELSE 0x43b3780d END)));SELECT DISTINCT (~ ((rt0.c0 IN ()))) FROM vt0, t0; -- 0ms;
SELECT ((MIN(vt0.c0))==(rt0.c0 COLLATE NOCASE)), TRIM(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))), ((((rt0.c2) NOT NULL))<=(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END)) FROM vt0, rt0, t0 WHERE (((((((((CASE x'04c2'  WHEN '2020662621' THEN 0.490505417216353 ELSE x'' END)OR((('sK') NOT NULL))))OR(((-6.82834964E8)+(x'')))))OR('-1182241482' COLLATE BINARY)))OR(((x'')>=(x''))))) ORDER BY ((TRIM(DISTINCT vt0.c0, rt0.c1)) NOT BETWEEN (t0.c40) AND (TYPEOF(rt0.c2))) ASC  NULLS LAST, CAST(rt0.c0 AS INTEGER) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((UPPER(rt0.c0))%(((t0.c40)<<(rt0.c2)))), GROUP_CONCAT(((1429583398) BETWEEN (t0.c40) AND (NULL))), (((rt0.c2)) NOT BETWEEN ((CASE rt0.c2  WHEN 0.15459803186255794 THEN rt0.c3 ELSE rt0.c3 END)) AND ((NULLIF(t0.c40, rt0.c1)))) FROM vt0;SELECT ALL ((((((t0.c40) IS FALSE))AND(((rt0.c2) NOT NULL))))AND((rt0.c3 IN (rt0.c1, rt0.c1, t0.c40)))) FROM vt0, t0 WHERE (CAST(CAST(NULL AS INTEGER) AS INTEGER));SELECT ALL ((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c3 END) NOT NULL) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT (- (((rt0.c0)IS NOT(rt0.c0)))), (((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) IN (t0.c40 COLLATE RTRIM)), COUNT(CASE t0.c40  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) OVER () FROM rt0;SELECT DISTINCT ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c40))) NOTNULL) FROM t0, vt0, rt0; -- 0ms;
SELECT ((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)))AND(t0.c40)))OR(rt0.c1)))+((- (vt0.c0)))), (((rt0.c3, rt0.c0, rt0.c1)) BETWEEN (('635660264', ((rt0.c1) NOT BETWEEN (rt0.c1) AND (x'')), (- (rt0.c3)))) AND ((((NULL)<<(vt0.c0)), ((rt0.c3)==(rt0.c2)), SUM(vt0.c0)))), (- (CASE WHEN t0.c40 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN t0.c40 END)) FROM vt0, rt0 NOT INDEXED, t0 WHERE ((((TYPEOF('1148405801')))=((((815625038)>=('')))))) LIMIT -70623030 OFFSET 1156322156; -- 0ms;
SELECT DISTINCT ((0.7317761470661636) ISNULL) FROM vt0, t0, rt0 WHERE (UNLIKELY(DISTINCT '-1780624686') COLLATE BINARY) LIMIT 1; -- 1ms;
SELECT DISTINCT CASE ((t0.c40) IS FALSE)  WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN (NOT (t0.c40)) END FROM rt0;SELECT DISTINCT (GROUP_CONCAT(rt0.c0) IN (((t0.c40)IS NOT(rt0.c2)))) FROM vt0, t0;SELECT ALL (((vt0.c0) BETWEEN (rt0.c3) AND (t0.c40)) IN ()), TOTAL((((rt0.c1, vt0.c0, t0.c40))==((rt0.c2, rt0.c3, rt0.c2)))) OVER ( ORDER BY (+ (((rt0.c2) NOT NULL))) ASC  NULLS FIRST ROWS  CURRENT ROW EXCLUDE CURRENT ROW), TRIM(rt0.c3) FROM rt0, vt0, t0 LIMIT -500208143 OFFSET 1011314448; -- 0ms;
SELECT DISTINCT AVG(211483162), (((NULL)<<(vt0.c0)) IN ()), GROUP_CONCAT(CAST(t0.c40 AS TEXT)) FROM vt0, t0 WHERE (((((7.65197328E8)<>(NULL)))=(((NULL) BETWEEN ('211483162') AND ('-rU'))))); -- 0ms;
SELECT vt0.c0, t0.c40, ((t0.c40 COLLATE NOCASE) IS FALSE), (t0.c40 COLLATE RTRIM IN ()), (((((('^B')||(rt0.c1)))OR(((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))))OR(x'')), CASE ((rt0.c2)==(0.28997574767900147))  WHEN '' THEN LIKE(rt0.c2, rt0.c0, '0') ELSE ((rt0.c1)OR(rt0.c1)) END, (((rt0.c3, NULL, rt0.c2)) NOT BETWEEN (('-1358575745', CAST(0.24910382727875247 AS BLOB), (((rt0.c1, rt0.c3, NULL)) NOT BETWEEN ((rt0.c2, vt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c2))))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c40 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END, (vt0.c0 IN (rt0.c2, t0.c40)), ((rt0.c2) BETWEEN (rt0.c0) AND (x''))))) FROM t0;SELECT DISTINCT vt0.c0 FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ()))+(((rt0.c2) IS FALSE))) FROM vt0;SELECT ALL vt0.c0, ((rt0.c2) NOT BETWEEN (CASE WHEN vt0.c0 THEN x'' ELSE rt0.c1 END) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)))), CASE WHEN LIKE(rt0.c0, rt0.c2, '[') THEN ((t0.c40) BETWEEN (rt0.c3) AND (x'')) END FROM rt0, vt0;SELECT DISTINCT ((((rt0.c3)AND(vt0.c0)))>(((rt0.c1) NOTNULL))), rt0.c1, COUNT(*) OVER () FROM rt0, vt0; -- 1ms;
SELECT (((t0.c40 IN ())) BETWEEN (CAST('1148405801' AS BLOB)) AND (CAST(t0.c40 AS TEXT))) FROM vt0, t0 WHERE (((((CAST('zn>凩೎Uh' AS BLOB))OR(x'' COLLATE BINARY)))AND((((x''))>=(('o.')))))); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS REAL)  WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY WHEN AVG(rt0.c3) THEN vt0.c0 WHEN ((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END, ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM, json_insert(((x'')LIKE(vt0.c0)), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c3) AND (t0.c40))) FROM vt0, rt0, t0; -- 0ms;
SELECT LTRIM(rt0.c0 COLLATE BINARY, (+ (t0.c40))) FROM vt0, t0;SELECT DISTINCT ((COUNT('1429583398')) BETWEEN (((((((((((((t0.c40)AND(vt0.c0)))AND(x'')))AND(rt0.c1)))AND(t0.c40)))AND(rt0.c0)))OR(vt0.c0))) AND ((((rt0.c1, rt0.c3, vt0.c0, rt0.c3, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c3))))), rt0.c0, ((CASE ''  WHEN rt0.c2 THEN NULL END) NOT BETWEEN ((rt0.c0 IN ())) AND (((((t0.c40)AND(t0.c40)))OR(rt0.c2)))) FROM rt0, t0;SELECT DISTINCT '-1841236741' FROM t0 GROUP BY CAST(CAST(vt0.c0 AS BLOB) AS INTEGER);SELECT DISTINCT CAST(rt0.c0 COLLATE NOCASE AS REAL) FROM rt0, t0, vt0; -- 0ms;
SELECT ALL CASE ((((vt0.c0)AND(t0.c40)))OR('1769678834'))  WHEN 0Xffffffffe1a1d2b7 THEN CAST(rt0.c0 AS TEXT) ELSE t0.c40 END, rt0.c0, (NOT (MAX(rt0.c3))) FROM vt0, t0;SELECT ALL ((~ (rt0.c3)) IN ()), t0.c40, ((+ (t0.c40)) IN ()) FROM vt0, t0 ORDER BY CASE ((rt0.c0)>=(rt0.c0))  WHEN 'fx}bh䤹A\u' THEN (((vt0.c0))<=((rt0.c2))) WHEN (NOT (rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN CAST(rt0.c2 AS REAL) THEN ((NULL) IS FALSE) END ASC  NULLS LAST;SELECT ((('' IN (rt0.c3, rt0.c1)))<>(x'')) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()) COLLATE NOCASE, ((CAST(vt0.c0 AS TEXT)) NOT NULL), (((rt0.c2)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))) AND ((((rt0.c2) IS TRUE)))) FROM t0, rt0, vt0 WHERE (((((0.9967889673965582)IS NOT(x'')))OR(((NULL) NOT BETWEEN (x'16a9') AND (0X603344b7))))); -- 0ms;
SELECT RANK() OVER () FROM rt0 INDEXED BY i41 WHERE ((((((((((0.9201787939108154 IN ()))AND((NULL IN ()))))OR(CAST(NULL AS BLOB))))OR(((((((((NULL)OR(211483162)))OR(NULL)))AND(x'')))OR(x'')))))AND(((NULL) IS FALSE))));SELECT ALL x'0778' FROM vt0, t0; -- 0ms;
SELECT (+ ((~ (rt0.c3)))) FROM vt0 ORDER BY (((- (0.04090034286505828)))!=(rt0.c2 COLLATE BINARY))  NULLS FIRST, ((vt0.c0) NOT BETWEEN (((-1.841236741E9) NOT BETWEEN (rt0.c3) AND (t0.c40))) AND ('-1353198752')) ASC, ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (x'9fd9') AND (CAST(rt0.c1 AS NUMERIC))) ASC;SELECT t0.c40 FROM t0; -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT vt0.c0))==(NULL)) FROM vt0, t0 WHERE (((CASE NULL  WHEN x'' THEN '*N&' END) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)), SQLITE_SOURCE_ID(), ((rt0.c1)>(rt0.c2)), (- (t0.c40)), ''))=((vt0.c0 COLLATE BINARY, (~ (NULL)), (NOT (rt0.c2)), (- (vt0.c0)), ((rt0.c0)IS NOT(t0.c40))))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT ((t0.c40)+(x'8fd7')), (((((- ('218246929')))AND(rt0.c0 COLLATE BINARY)))AND(((('0.3925161082488495', rt0.c3, rt0.c2))<((rt0.c0, rt0.c1, vt0.c0))))), GLOB(rt0.c0, ((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))) FROM vt0 NOT INDEXED, rt0 GROUP BY CAST(CASE WHEN t0.c40 THEN rt0.c2 ELSE rt0.c2 END AS NUMERIC) ORDER BY 0X1eee50bb ASC  NULLS LAST;SELECT DISTINCT ((t0.c40)*((rt0.c1 IN ()))), CAST(((rt0.c1) NOTNULL) AS REAL), (((rt0.c3 IN ()))*(t0.c40 COLLATE NOCASE)) FROM t0 EXCEPT SELECT ALL CASE WHEN (rt0.c1 IN (rt0.c0, 0.5981378748563487)) THEN (vt0.c0 IN ()) END, ((CASE WHEN vt0.c0 THEN 0.5905243679767485 END) IS FALSE), CAST((NOT (vt0.c0)) AS INTEGER) FROM rt0, vt0;SELECT DISTINCT ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) COLLATE RTRIM COLLATE NOCASE, rt0.c1 COLLATE NOCASE, ((((rt0.c3, rt0.c1, 4.20974025E8))>=((rt0.c3, rt0.c0, rt0.c2))) IN ()) FROM vt0, t0, rt0 WHERE (CAST((('') NOTNULL) AS REAL)); -- 0ms;
SELECT ALL TOTAL(((rt0.c2)-(vt0.c0))) FROM t0, vt0 WHERE (((('-509488457', 'h\d<', 'HE-')) BETWEEN (('sQ', x'', x'64ed2a94')) AND (('519107692', NULL, 'nHhP{fRү<'))) COLLATE BINARY);SELECT DISTINCT (((vt0.c0 IN ()))+(((rt0.c0) IS FALSE))) FROM t0, rt0, vt0 WHERE ((-964222959 IN (0.015933173567813763)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((x'aceb'))) FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) IS TRUE), CAST(((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)) AS INTEGER) DESC;SELECT LIKE(((((rt0.c3)AND(t0.c40)))OR('磆WX8')), (~ (rt0.c0)), '思'), (+ (rt0.c3 COLLATE RTRIM)), ((rt0.c1) ISNULL) FROM rt0 WHERE (CAST((('-1982395186')GLOB(x'')) AS INTEGER)) INTERSECT SELECT ALL ((MAX(rt0.c1)) BETWEEN (rt0.c1 COLLATE NOCASE) AND ((rt0.c0 IN ()))), (NOT (vt0.c0)) COLLATE NOCASE, (('1954358235')*((rt0.c3 IN (vt0.c0)))) FROM vt0 WHERE (CASE ((NULL)<<('1043610083'))  WHEN (~ (x'01f647a2')) THEN CAST(0X55f176e8 AS INTEGER) WHEN ((x'')||('2020662621')) THEN (((('')AND('')))OR(0.7317761470661636)) WHEN ('1911732864' IN (NULL, '0.28997574767900147')) THEN (0.04216279411420398 IN ()) WHEN ((NULL) NOT NULL) THEN '' COLLATE BINARY WHEN ('-317117617' IN ()) THEN 0xffffffffc6ab0f81 END) GROUP BY ((((((vt0.c0)GLOB(t0.c40)))AND(x'2961b175')))OR(((t0.c40)LIKE(rt0.c2)))), ((((COALESCE(DISTINCT vt0.c0, NULL))AND(vt0.c0 COLLATE RTRIM)))AND((NOT (rt0.c2)))), CAST(UPPER(DISTINCT rt0.c2) AS TEXT) HAVING t0.c40;SELECT DISTINCT NTILE(LIKELY(DISTINCT t0.c40) COLLATE NOCASE) OVER () FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN ((t0.c40) NOT BETWEEN (rt0.c1) AND (t0.c40)) END FROM t0, rt0 ORDER BY (((NOT (rt0.c3)))<=(rt0.c3 COLLATE RTRIM)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC)) IS TRUE), (+ (((((rt0.c2)OR(vt0.c0)))OR(t0.c40)))), vt0.c0 FROM t0 NATURAL JOIN vt0;SELECT DISTINCT ((((((rt0.c0)>(rt0.c2)))AND(((((rt0.c2)AND(t0.c40)))AND(t0.c40)))))AND(((t0.c40) BETWEEN (rt0.c1) AND (vt0.c0)))) FROM rt0, t0 WHERE ((('' COLLATE RTRIM) IS TRUE));SELECT ((((t0.c40) BETWEEN (t0.c40) AND ('211483162'))) ISNULL) FROM t0, vt0, rt0 WHERE (((CAST(NULL AS BLOB)) BETWEEN ('1627614439' COLLATE RTRIM) AND (((NULL) IS FALSE)))) GROUP BY ((((t0.c40) NOT BETWEEN (rt0.c3) AND (NULL))) IS FALSE), (NOT (CAST(rt0.c1 AS BLOB))), ((CAST(vt0.c0 AS NUMERIC))<<(((t0.c40) IS TRUE))) HAVING t0.c40; -- 0ms;
SELECT MAX(((vt0.c0) NOT NULL), CAST(rt0.c2 AS NUMERIC)), (((((rt0.c0))<>((rt0.c1)))) IS TRUE), ((+ (vt0.c0)) IN ()) FROM t0;SELECT TYPEOF(DISTINCT COALESCE(DISTINCT rt0.c0, rt0.c0)), ((SQLITE_COMPILEOPTION_USED(t0.c40))OR(CAST(rt0.c1 AS TEXT))), x'3e71' FROM vt0, t0;SELECT ALL CASE ((vt0.c0)<=(vt0.c0))  WHEN ((rt0.c0) NOT BETWEEN (t0.c40) AND (rt0.c1)) THEN ((rt0.c1)==(rt0.c3)) END FROM rt0, t0, vt0 WHERE (json_array(CASE x''  WHEN 0xffffffffc6ab0f81 THEN 0x55f176e8 WHEN 0.5431406010007939 THEN NULL WHEN 0x6a629c2 THEN 0.7307897241822728 END, (('1911732864') BETWEEN ('1206336061') AND ('<''IplT')))); -- 0ms;
SELECT ALL COUNT(*) FILTER(WHERE ((t0.c40 COLLATE BINARY)<(t0.c40))) OVER (), ((((rt0.c3)&(vt0.c0)))GLOB(((rt0.c1)-(rt0.c2)))), (((((((rt0.c1)OR(NULL)))OR(t0.c40)), CAST(rt0.c3 AS REAL), (((vt0.c0, rt0.c2, vt0.c0))==((rt0.c0, rt0.c3, rt0.c0))), ((rt0.c1) BETWEEN (t0.c40) AND (rt0.c0)), CASE rt0.c2  WHEN rt0.c2 THEN 957185033 END, LIKELY(DISTINCT rt0.c0), ((((((((rt0.c1)AND(rt0.c1)))OR(NULL)))OR(t0.c40)))AND(rt0.c3))))<>((((vt0.c0)<(rt0.c2)), NULL COLLATE RTRIM, t0.c40 COLLATE RTRIM, 0.06690680289072382, ROUND(rt0.c3, rt0.c3), AVG(rt0.c3), ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c40))))) FROM vt0 WHERE (((x'' COLLATE BINARY)%(CASE WHEN NULL THEN -1293562082 WHEN 0.20459708468822202 THEN '' WHEN x'' THEN 'yv5''r⃆T' END)));SELECT ALL json_quote(rt0.c0) COLLATE BINARY FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((MAX(rt0.c1))) AND (((- (vt0.c0))))), CUME_DIST() OVER (), COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (((NULL)GLOB('0.721003347204158'))))); -- 0ms;
SELECT DISTINCT COUNT(CAST(t0.c40 AS NUMERIC)) FILTER(WHERE ((((((vt0.c0)AND(rt0.c0)))OR(t0.c40))) ISNULL)) OVER () FROM vt0, t0, rt0; -- 0ms;
SELECT ALL ((rt0.c0)||(rt0.c2)) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT (- (((vt0.c0) ISNULL))) FROM vt0, rt0, t0; -- 0ms;
SELECT TYPEOF((((t0.c40))<=((vt0.c0)))), (TRIM(rt0.c0, t0.c40) IN ()), (0.5144904084266388 IN ()) COLLATE BINARY COLLATE BINARY FROM vt0, t0 GROUP BY CASE WHEN '1207921634' THEN CASE rt0.c0  WHEN rt0.c3 THEN t0.c40 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN x'' ELSE ((rt0.c3)IS NOT(0Xffffffff87b94e3f)) END HAVING COUNT(*);SELECT ALL 0x7c4b4ed5, HEX(DISTINCT (((rt0.c1, t0.c40, t0.c40))<>(('', rt0.c3, rt0.c2)))), (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), vt0.c0, ((-509488457) ISNULL), CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE t0.c40 END, (x'' IN ()), rt0.c1 COLLATE NOCASE, ((t0.c40)IS NOT(vt0.c0))))>((CASE t0.c40  WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END, (((vt0.c0, rt0.c1, rt0.c3))<>((vt0.c0, rt0.c1, NULL))), COALESCE(rt0.c3, vt0.c0), NULL, ((rt0.c3)>(rt0.c3)), ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)), LIKE(t0.c40, vt0.c0)))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)|(t0.c40))  WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c2)IS NOT(rt0.c1)) ELSE (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END FROM t0, rt0, vt0; -- 0ms;
SELECT (NOT (CASE WHEN rt0.c2 THEN t0.c40 ELSE rt0.c1 END)) FROM rt0, vt0 WHERE (((((x'')LIKE(420974025)))%(NULL COLLATE RTRIM))) LIMIT 765197328;SELECT DISTINCT CASE ((vt0.c0) NOT BETWEEN (rt0.c2) AND (''))  WHEN (NOT (rt0.c2)) THEN CAST(t0.c40 AS NUMERIC) ELSE CAST(rt0.c2 AS TEXT) END, (((((((((- (rt0.c3)))AND(((rt0.c2)|(rt0.c1)))))AND(json_array_length(vt0.c0))))AND(MIN(rt0.c3))))OR(((rt0.c1)%(rt0.c2)))), 0Xffffffffc6ab0f81 FROM t0, vt0, rt0 WHERE (((((((x'') NOTNULL))OR(((x'') NOTNULL))))OR((0X8048f0 IN ())))); -- 0ms;
SELECT CAST((((x''))<>((vt0.c0))) AS NUMERIC), NULL COLLATE BINARY COLLATE BINARY, COUNT(*) OVER ( ORDER BY (((t0.c40)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) AND ((0.3319960205409612))) ASC  NULLS LAST) FROM rt0 WHERE ((((NOT (x''))) NOTNULL));SELECT TOTAL((((rt0.c0))!=((rt0.c0)))), CASE WHEN rt0.c3 THEN (+ (x'')) WHEN (rt0.c2 IN ()) THEN ((vt0.c0)>>(rt0.c3)) WHEN vt0.c0 COLLATE BINARY THEN MAX(rt0.c3) ELSE CASE WHEN rt0.c1 THEN rt0.c0 WHEN t0.c40 THEN rt0.c3 WHEN t0.c40 THEN 0.8352751559723848 END END, ((((((rt0.c2)OR('*rRJaQ?\rU')))OR(t0.c40))) BETWEEN (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c3))) AND (CAST(rt0.c3 AS REAL))), COUNT(((((((((rt0.c3)OR(rt0.c3)))OR(t0.c40)))OR(rt0.c0)))AND(vt0.c0))), t0.c40 FROM t0;SELECT DISTINCT ((((t0.c40)&(vt0.c0)))<>(CAST(x'46ad' AS TEXT))) FROM rt0, vt0 GROUP BY ((((((((vt0.c0)OR(rt0.c0)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c2)) COLLATE NOCASE HAVING (((rt0.c1)) NOT BETWEEN ((((rt0.c3) IS TRUE))) AND ((json_array_length(vt0.c0, rt0.c2))));SELECT ALL (((LIKELY(DISTINCT vt0.c0)))>((((NULL)GLOB(rt0.c1))))) FROM vt0;SELECT ALL CAST(((rt0.c0) ISNULL) AS TEXT) FROM rt0 WHERE (CAST(x'f65c' AS INTEGER) COLLATE RTRIM) LIMIT 1207921634; -- 0ms;
SELECT DISTINCT (((t0.c40)) BETWEEN ((vt0.c0)) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (t0.c40))))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))IS(((rt0.c2) NOT NULL))), rt0.c1 FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT MIN((- (0X60de05ec))) FROM t0 WHERE ((((('0.6064814452046602')|(NULL))) BETWEEN ((('F\n|i[|') BETWEEN ('649111167') AND (-949252231))) AND (CASE x''  WHEN 0.601458006004167 THEN '-1294196538' WHEN NULL THEN 'R>E' WHEN '1851285533' THEN NULL END))); -- 0ms;
SELECT (~ (TYPEOF(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)<=(rt0.c3)))&(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)) FROM t0, vt0, rt0 LIMIT -2033122095 OFFSET 892673332; -- 0ms;
SELECT DISTINCT ((x'72ee07a1' COLLATE RTRIM)!=(((((t0.c40)AND(t0.c40)))AND(t0.c40)))) FROM rt0, t0, vt0 WHERE (((highlight(x'', 0.5384566727674218, 0xffffffff8880a629, 0.6517766353290898)) NOT NULL)); -- 0ms;
SELECT ALL rt0.c3 FROM vt0, t0, rt0 ORDER BY (((rt0.c2 IN (rt0.c1))) NOT BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (x''))) AND (((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))) ASC; -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (0.5182138519019276); -- 0ms;
SELECT DISTINCT NTILE(CAST((((t0.c40)) BETWEEN ((t0.c40)) AND ((t0.c40))) AS NUMERIC)) OVER () FROM t0 WHERE ((((NULL)&(0.287466292029126)) IN ())) GROUP BY (((((rt0.c1 IN ()))OR(UNLIKELY(0.4404703055879019))))AND(CHANGES())); -- 0ms;
SELECT DISTINCT (- (((rt0.c1)-(x'')))) FROM t0 WHERE (((((NULL) NOT BETWEEN (x'') AND ('^%')))GLOB(LENGTH('|JH5vIoC'))));SELECT ALL ((((NULL)OR(((rt0.c2) IS FALSE))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) FROM vt0;SELECT DISTINCT SQLITE_COMPILEOPTION_USED(COUNT(*)), (((NOT (rt0.c2))) ISNULL), (- (TOTAL(vt0.c0))) FROM t0, rt0;SELECT DISTINCT ((NULL)-((rt0.c2 IN (rt0.c1)))) FROM vt0 WHERE (((x'')GLOB('dF')));SELECT DISTINCT x'' FROM t0, rt0, vt0 LIMIT 1874932177; -- 1ms;
SELECT ALL (((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))-((- (t0.c40)))) FROM vt0, rt0 WHERE (CAST(('-2144518477' IN ('lcT-')) AS BLOB));SELECT DISTINCT CASE WHEN (((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c1))) THEN ((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)) END FROM rt0, t0; -- 0ms;
SELECT DISTINCT (+ (rt0.c1 COLLATE RTRIM)) FROM rt0 WHERE (((((0.09218799880460637) ISNULL)) NOT BETWEEN (ABS(0.3191406141296723)) AND (json_type('')))); -- 0ms;
SELECT ALL rt0.c3 FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((((x'')>(t0.c40))) IS TRUE) FROM rt0 WHERE (CAST(CASE WHEN 'Infinity缈2w+箊f' THEN '0.04090034286505828' END AS NUMERIC)) ORDER BY ((TYPEOF(rt0.c1)) NOT BETWEEN ((+ (rt0.c2))) AND (((((rt0.c0)AND(rt0.c0)))AND(NULL))));SELECT ALL UNICODE(((rt0.c2) IS FALSE)), JULIANDAY(CASE WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0)), TYPEOF(rt0.c3), t0.c40, vt0.c0, rt0.c1 COLLATE BINARY, CAST(rt0.c3 AS NUMERIC)), CAST(((t0.c40)|(vt0.c0)) AS TEXT) FROM t0, vt0 WHERE (((((SQLITE_COMPILEOPTION_USED(x''))AND(TRIM('', x'1b4e29fe'))))OR(CAST(0.8352751559723848 AS BLOB))));SELECT ALL COUNT(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN 0.06524979411109932 THEN rt0.c2 WHEN rt0.c0 THEN 0Xffffffffbc2b7d2f END) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), CASE (((vt0.c0))<>((t0.c40)))  WHEN COUNT(*) THEN ((vt0.c0)OR(t0.c40)) WHEN (((rt0.c1, rt0.c2, '-405134641'))==(('P댫&7', rt0.c3, rt0.c2))) THEN (rt0.c2 IN ()) WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END, ((((t0.c40) NOTNULL))/(((rt0.c1)<<(rt0.c0)))) FROM vt0, t0, rt0 WHERE (((0.5905243679767485) BETWEEN (0.5373808818846103) AND ('')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c2)|(x'')) IN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)))) FROM rt0, t0, vt0 WHERE (((((('-811945305', NULL, '-2017898945')) BETWEEN ((0.835136049772278, 1940145139, '-1841236741')) AND ((x'', NULL, x'119f'))))OR(((((0X55f176e8)OR(-70623030)))OR(''))))) GROUP BY ((x'' COLLATE BINARY)GLOB(LIKELY(vt0.c0))), (((rt0.c1 IN (rt0.c0))) NOT BETWEEN (((t0.c40) IS TRUE)) AND (((rt0.c2) ISNULL))), (((vt0.c0)) BETWEEN ((rt0.c0)) AND (((- (t0.c40))))); -- 0ms;
SELECT DISTINCT ((rt0.c0)>(((rt0.c0)<<(rt0.c1)))) FROM vt0, t0, rt0 ORDER BY (((~ (rt0.c2))) NOT NULL) DESC; -- 0ms;
SELECT SUM(json_quote(rt0.c3)), (+ (rt0.c1)), (((rt0.c3)) NOT BETWEEN ((IFNULL(rt0.c3, rt0.c2))) AND ((GROUP_CONCAT(rt0.c3)))), ((0.9285175609256351)=(CAST(rt0.c3 AS NUMERIC))), (((((rt0.c3)LIKE('4'))))<>((rt0.c3))) FROM t0, vt0 WHERE ((((((((447855025, '741214339', 0Xffffffffaf05c77f, '', x'7f75'))>=((NULL, '420974025', 0.2695356717074273, '-822115844', '1769678834'))))AND(((('[.璽0ﻗHp㶡X', NULL, ''))<>(('	CxQ', x'a3c1', 0x3b5881ff))))))AND(CASE WHEN '1429583398' THEN 'n?' WHEN '1863830959' THEN '0.5373808818846103' WHEN NULL THEN '-1280396501' ELSE x'' END)));SELECT ALL (((rt0.c2)) BETWEEN ((((((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))) AND ((NULL COLLATE NOCASE))) FROM rt0, t0 WHERE (CASE WHEN (~ ('')) THEN NULL COLLATE NOCASE WHEN ((((0.9924525125805059)OR(NULL)))OR(0xfffffffff64ae7b5)) THEN LOWER(0.28997574767900147) WHEN CASE WHEN 0.19557075024660098 THEN '?d' WHEN 'C<?箊Gh/' THEN 0.7307897241822728 WHEN x'' THEN NULL ELSE '' END THEN ((NULL)%(0.24304125962392553)) ELSE (((x'930a')) BETWEEN ((x'')) AND ((x'4ec334f4bc53'))) END) ORDER BY TRIM(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END, t0.c40)  NULLS LAST, (((((t0.c40 IN ()))AND(((t0.c40)>(rt0.c1)))))OR('\r' COLLATE RTRIM)) DESC  NULLS FIRST, CAST(((vt0.c0)-(t0.c40)) AS INTEGER)  NULLS LAST LIMIT -1091987873 OFFSET 2057717240;SELECT DISTINCT LTRIM(LTRIM(vt0.c0)) FROM vt0; -- 3ms;
SELECT ALL CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER) FROM vt0 WHERE ((- ((((('%6<')OR(0.8275911059251069)))OR('e臼跉o\r')))));SELECT DISTINCT (((((((((rt0.c1)OR(rt0.c0)))AND(x'')))OR(193856988)))OR(vt0.c0)) IN (((((rt0.c2)OR(t0.c40)))OR(rt0.c3)))), ((((vt0.c0)<=(rt0.c2))) BETWEEN (((t0.c40)>(rt0.c1))) AND (GROUP_CONCAT(rt0.c0))), rt0.c2 FROM rt0, t0 NOT INDEXED WHERE (((0.25555008139462054 COLLATE NOCASE)>=(((((0.33587637399173864)OR(0.5144904084266388)))OR(0.06690680289072382)))));SELECT CAST(t0.c40 AS NUMERIC) FROM t0 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT AVG(rt0.c1)) FROM vt0;SELECT CAST(((t0.c40) IS FALSE) AS BLOB) FROM rt0;SELECT DISTINCT CASE '-252064685' COLLATE BINARY  WHEN ((rt0.c1)-(rt0.c3)) THEN CAST(x'76ec' AS REAL) END FROM t0, rt0 WHERE (((IFNULL(NULL, '1943049727'))/(NULL))); -- 0ms;
SELECT ALL AVG(CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END) OVER ( GROUPS 2031890861 PRECEDING EXCLUDE NO OTHERS), TYPEOF(DISTINCT CAST(rt0.c2 AS TEXT)), ((rt0.c2)/(vt0.c0)) COLLATE BINARY FROM vt0, t0 WHERE (CASE CAST('0.28997574767900147' AS INTEGER)  WHEN ((NULL)<(x'')) THEN CAST('-498992558' AS TEXT) ELSE ((x'') IS TRUE) END) GROUP BY (((rt0.c1) ISNULL) IN ()), (((rt0.c2 IN ())) BETWEEN (0X2579622a) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))), ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(0.05536912882365963))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) HAVING ((((((((LIKELIHOOD(vt0.c0, 0.13314480761427672))OR('hED6\n')))OR(x'')))AND(rt0.c0)))OR((((t0.c40, t0.c40, rt0.c2))<>((rt0.c1, vt0.c0, t0.c40)))));SELECT GROUP_CONCAT(((rt0.c1)>=(vt0.c0))) FROM rt0, t0, vt0 WHERE (((((NULL)%(NULL))) NOT BETWEEN (CAST('' AS NUMERIC)) AND (NULL))); -- 0ms;
SELECT DISTINCT (~ (MAX(rt0.c0))), ((((vt0.c0)||(rt0.c0))) NOTNULL), ((((rt0.c3) NOT BETWEEN (t0.c40) AND (rt0.c2))) BETWEEN (((rt0.c2)<<(t0.c40))) AND ((t0.c40 IN ()))) FROM vt0, rt0, t0 WHERE (((LIKELY(NULL))>=(((781260630) ISNULL)))); -- 0ms;
SELECT ALL (((t0.c40) IS TRUE) IN ()) FROM t0, rt0, vt0 WHERE ((NULL COLLATE RTRIM IN ((((x'3cc5'))=((0.3925161082488495)))))); -- 0ms;
SELECT vt0.c0 FROM rt0;SELECT ALL rt0.c3 FROM t0 NOT INDEXED WHERE ((LTRIM(x'') IN ()));SELECT ALL ((CAST(t0.c40 AS NUMERIC)) NOT BETWEEN (((vt0.c0)>=(rt0.c0))) AND (((rt0.c1) IS TRUE))) FROM vt0, t0, rt0 WHERE ((CASE 0.28997574767900147  WHEN 0.1904099699105306 THEN x'db2e' WHEN 0.09218799880460637 THEN '-1091987873' WHEN NULL THEN x'' ELSE NULL END IN ())) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ('-815597631') AND (((((rt0.c1)AND(rt0.c3)))OR(t0.c40)))); -- 0ms;
SELECT DISTINCT ((x'')IS NOT((NOT (rt0.c3)))), CAST(rt0.c1 AS INTEGER) COLLATE RTRIM, (((((rt0.c3, rt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c2, t0.c40, vt0.c0)))) IS FALSE) FROM rt0, vt0 WHERE ((~ (0.19557075024660098)));SELECT ALL LEAD((~ ((vt0.c0 IN (rt0.c0)))), (((NULL)) NOT BETWEEN ((((rt0.c2)|(rt0.c0)))) AND ((((t0.c40) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), ((((rt0.c0))<((1981728503))) IN (rt0.c2))) OVER (), CASE (+ (rt0.c0))  WHEN TRIM(DISTINCT rt0.c2) THEN TYPEOF(t0.c40) END, ((CAST(t0.c40 AS NUMERIC))+(CASE t0.c40  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) FROM rt0, vt0, t0 LIMIT -1841236741; -- 0ms;
SELECT CASE WHEN t0.c40 THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) WHEN (((-1962514348)) BETWEEN ((t0.c40)) AND ((rt0.c0))) THEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)) WHEN ((rt0.c3)=(t0.c40)) THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)) END FROM rt0 NOT INDEXED, t0 WHERE ((((+ (''))) BETWEEN ((x'b270' IN ('', '-1589996334'))) AND (('Eu桔Zo+Y*/' IN ())))) GROUP BY LIKELY((~ (vt0.c0))) HAVING ((TOTAL(rt0.c1)) IS FALSE);SELECT ALL IFNULL(((t0.c40) IS TRUE), ((((vt0.c0)OR(t0.c40)))OR(rt0.c3))) FROM t0 WHERE (((x'') NOT BETWEEN (NULL) AND (0.5144904084266388)) COLLATE NOCASE) LIMIT -1250456730;SELECT rt0.c0 FROM rt0, vt0, t0 LIMIT -2105089874; -- 0ms;
SELECT (+ (((rt0.c1)%(rt0.c3)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((JULIANDAY(rt0.c3, t0.c40, rt0.c2, rt0.c3, t0.c40))) AND ((0.4007359972940405))), PERCENT_RANK() OVER (), x'' FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) FROM t0 WHERE ((((('')<<(NULL))) IS TRUE));SELECT ALL TOTAL(((rt0.c0)<>(rt0.c2))) FILTER(WHERE CASE ((x'')>=(rt0.c3))  WHEN (rt0.c0 IN ()) THEN (((rt0.c0, '\3f', vt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c1, t0.c40))) ELSE CAST(rt0.c1 AS TEXT) END) OVER () FROM rt0, t0 WHERE ((((0.0021501703333052236)) BETWEEN ((TRIM(DISTINCT x''))) AND (((- ('-1138000593')))))) GROUP BY '471089014' HAVING (((((((((((rt0.c0, rt0.c0, rt0.c0))>=((rt0.c3, rt0.c2, rt0.c0))))OR(json_quote(rt0.c2))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(ROUND(rt0.c3, 41225848))))AND(((rt0.c3)IS NOT(rt0.c2))));SELECT DISTINCT NULL FROM rt0 WHERE (((x'' COLLATE BINARY)-(0.4570185001397019))) LIMIT 430745502; -- 0ms;
SELECT DISTINCT (((rt0.c0)IS NOT(-289518924)) IN ((((rt0.c2))==((rt0.c2))))), (((t0.c40, rt0.c0, vt0.c0))>((vt0.c0, rt0.c2, rt0.c1))) COLLATE BINARY, json_extract(x'', (((('-111378680')AND(t0.c40)))AND(t0.c40))) FROM t0, rt0 ORDER BY (((- (t0.c40)))>=(rt0.c1 COLLATE BINARY))  NULLS FIRST;SELECT DISTINCT TOTAL(CAST(t0.c40 AS REAL)) OVER () FROM rt0, t0, vt0 WHERE (((((0.7051108616278163) BETWEEN (x'') AND (x''))) BETWEEN (CAST('1605477415' AS REAL)) AND (((('', 0xffffffffd562b128, NULL))!=(('-405134641', '\	af\', 0.8985489373782386)))))); -- 0ms;
SELECT CAST(CASE rt0.c2  WHEN t0.c40 THEN '' ELSE vt0.c0 END AS NUMERIC) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c1, '0.0021501703333052236')) NOT BETWEEN (((NOT (rt0.c3)), ((vt0.c0) BETWEEN (0.48151637281183246) AND (rt0.c2)), '-822115844')) AND ((x'', rt0.c2, UNICODE(x'')))) FROM vt0, rt0; -- 0ms;
SELECT CASE WHEN 0x1ab1b9b1 THEN (rt0.c3 IN ()) END FROM rt0 WHERE (((((-458303514)OR(0.10314386899328576)))AND('hED6\n')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (TOTAL(vt0.c0))) FROM vt0 WHERE (CASE CASE WHEN x'' THEN '' END  WHEN ((x'') NOTNULL) THEN (((('-718068334')AND(0X7aa645f8)))AND('-1922375607')) ELSE CASE WHEN x'' THEN '1625579140' ELSE x'' END END);SELECT DISTINCT 0.7575959581777996 FROM vt0, t0, rt0 WHERE (((('v\fRz*	')<<(NULL)) IN ((((x'')) NOT BETWEEN ((x'')) AND (('-267611068')))))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ()))IS NOT((vt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT AVG(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END) OVER (), ((((((((((rt0.c2)OR(x'')))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c2))) IS FALSE), ((rt0.c3 IN ()) IN ()) FROM vt0;SELECT ALL (((rt0.c0 IN ()))>>(((t0.c40) BETWEEN (t0.c40) AND (t0.c40)))) FROM t0, vt0 WHERE ((~ (CASE WHEN 1.811379643E9 THEN x'' WHEN '~' THEN 'TRUE' WHEN '' THEN NULL END))); -- 0ms;
SELECT DISTINCT RTRIM(COUNT(rt0.c2)), '1206336061', ((TYPEOF(DISTINCT t0.c40))>=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET('1954358235'))-((((x'')) BETWEEN ((x'')) AND ((0xffffffff9118599b))))));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CAST(rt0.c2 AS TEXT)))) FROM rt0 WHERE (((CAST(0.8932486500500945 AS INTEGER)) NOT BETWEEN (0.38985299545063123 COLLATE RTRIM) AND (ABS(x''))));SELECT DISTINCT (- (rt0.c3)) FROM t0, vt0 WHERE (CASE WHEN NULL THEN 'sC8kLOj#' ELSE 0.45336711714568767 END COLLATE BINARY);SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS INTEGER), (((((rt0.c1)) BETWEEN ((t0.c40)) AND ((rt0.c3))))>(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))), CAST(NULL AS TEXT), NTH_VALUE((((rt0.c0)<=(rt0.c3)) IN ()), QUOTE(((((((((rt0.c0)OR(rt0.c0)))AND(0.8345333954812804)))OR(rt0.c2)))OR(rt0.c3)))) OVER (), load_extension(t0.c40 COLLATE NOCASE, '㽶S') FROM t0, vt0, rt0 LIMIT -466403776; -- 1ms;
SELECT json_type(CAST(rt0.c2 AS TEXT)), LIKELIHOOD(DISTINCT -1.1137868E8, 0.07477978052774503) COLLATE RTRIM, ((CAST(t0.c40 AS NUMERIC)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))) AND (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)) FROM vt0 WHERE (((((((((((((NULL COLLATE BINARY)AND(CASE WHEN 0xffffffffa01cd7f4 THEN '-964352129' END)))AND((x'' IN ()))))OR(CAST('2085310165' AS NUMERIC))))OR((('92909704') NOTNULL))))AND(CASE '''9'  WHEN 0x1eee50bb THEN 'H8Aﺅ2㙕' ELSE '-1294196538' END)))AND(CAST(NULL AS BLOB)))) ORDER BY NULL;SELECT ALL NTH_VALUE((rt0.c1 IN ()) COLLATE RTRIM, (((rt0.c0 IN (rt0.c2)))||(((((NULL)AND(rt0.c1)))AND(0x25fb3f73))))) OVER () FROM vt0, rt0, t0 WHERE (((((((0Xffffffffc637b411) IS TRUE))OR(CASE '\rBTX_ J'  WHEN 0.5509127938952126 THEN '-rU' ELSE 0.1961053668294186 END)))OR(((((((((x'')OR('再9')))AND('1036102457')))OR(NULL)))OR(0.24304125962392553))))); -- 0ms;
SELECT ALL CAST(COUNT(*) AS REAL), LOWER(DISTINCT ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))OR(vt0.c0))), ((rt0.c0 COLLATE NOCASE) ISNULL), ((((((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(((((((((rt0.c3)AND(t0.c40)))AND(t0.c40)))AND(rt0.c1)))AND(rt0.c2)))))OR(((vt0.c0)%(t0.c40)))))OR(vt0.c0 COLLATE RTRIM)))OR(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))), (+ ('-1698733099')) FROM t0, rt0 WHERE (((((NULL) IS TRUE)) IS TRUE));SELECT DISTINCT (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))<((((t0.c40) ISNULL)))) FROM t0, vt0;SELECT ALL MIN((~ (rt0.c1))) COLLATE BINARY, DATETIME(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END, ((vt0.c0)|(rt0.c3)), rt0.c0, ((rt0.c0) BETWEEN (t0.c40) AND (rt0.c0)), ((rt0.c0) NOT NULL)), CUME_DIST() OVER () FROM vt0, rt0 WHERE (((((x'')LIKE(x'')))<(((0.1904099699105306) NOTNULL))));SELECT ALL CAST(((((((((rt0.c3)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c3)))AND(rt0.c2)) AS TEXT) FROM t0, vt0, rt0 WHERE (((TRIM(DISTINCT x''))>=(((1686127420) BETWEEN (0.22200789796734066) AND (x'76b5'))))); -- 0ms;
SELECT DISTINCT CASE WHEN AVG(x'') THEN COUNT(vt0.c0) END, ABS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END), rt0.c2 FROM rt0, t0 WHERE (((0.024485314396691438)<<((~ (0.3925161082488495))))) LIMIT -327183330;SELECT DISTINCT ((((((((((((0.601458006004167)OR(TOTAL(vt0.c0))))OR((((t0.c40))=((rt0.c0))))))OR(vt0.c0 COLLATE NOCASE)))AND(0.7800473398987516)))AND(((rt0.c3) NOT NULL))))AND((('''箊V') BETWEEN (rt0.c0) AND (t0.c40)))), rt0.c0, LAG(((CAST(rt0.c3 AS BLOB))LIKE(((rt0.c3) NOT NULL))), ((rt0.c2 COLLATE BINARY)==(((rt0.c1)IS(rt0.c0)))), CASE WHEN ((rt0.c3) IS FALSE) THEN json_extract(rt0.c1, rt0.c0) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE 0.015933173567813763 END END) OVER (), MAX(CAST(rt0.c0 AS INTEGER)), DENSE_RANK() OVER () FROM vt0, rt0;SELECT ALL TRIM((NOT (rt0.c2)), (vt0.c0 IN (vt0.c0))) FROM vt0, t0, rt0; -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND (vt0.c0 COLLATE NOCASE)) FROM t0 LIMIT -1227872189;SELECT CASE (((-1.25045673E9)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))  WHEN x'' THEN TOTAL(rt0.c1) ELSE (((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c3))) END FROM t0;SELECT ALL ((rt0.c3) NOT NULL) COLLATE BINARY FROM t0 WHERE ((0xffffffffa4cf9f44 IN ()));SELECT DISTINCT (((rt0.c3 IN (rt0.c1))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(x'1653' AS INTEGER)) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL (CASE rt0.c0  WHEN x'3b29' THEN rt0.c2 END IN ()) FROM vt0, rt0, t0 WHERE (LOWER((('>^\?r4Dg') NOTNULL))); -- 0ms;
SELECT ALL (((CASE WHEN rt0.c2 THEN vt0.c0 END))>((GROUP_CONCAT(t0.c40)))), CAST(((((((((((((rt0.c1)AND(rt0.c1)))OR(t0.c40)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)) AS REAL), (((rt0.c2 IN ()))==(((vt0.c0)OR(rt0.c0)))) FROM rt0, vt0, t0; -- 0ms;
SELECT ALL CAST(rt0.c2 COLLATE BINARY AS NUMERIC) FROM t0, vt0, rt0 WHERE (TYPEOF(DISTINCT ((NULL)%('1156322156')))) LIMIT 487127770; -- 0ms;
SELECT NULL FROM rt0, t0, vt0 WHERE (((HEX(DISTINCT '-768698703'))>('|eIPX⤍8o*' COLLATE NOCASE))); -- 0ms;
SELECT ALL (~ (((t0.c40) ISNULL))) FROM t0; -- 0ms;
SELECT ALL ((((NULL)/(rt0.c0)))+(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))) FROM t0, rt0 WHERE ((((UPPER(0.22200789796734066)))>(((- (-1395124880)))))); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c3))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c0, 0.6607269452508181)) AND (NULL)), 'T2jh', ((((t0.c40) IS FALSE))<<(DATE(rt0.c3, vt0.c0, t0.c40))) FROM t0, rt0;SELECT ALL '-1280396501' FROM vt0, t0, rt0; -- 0ms;
SELECT (((rt0.c3, 0.22687171839210463, ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))))<=((rt0.c3 COLLATE BINARY, (+ (rt0.c3)), HEX(DISTINCT rt0.c3)))), (('')>>(t0.c40)) COLLATE BINARY, ((CASE vt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL) FROM rt0 WHERE (((((x'')OR(-1473831330)))AND(NULL)) COLLATE BINARY);SELECT DISTINCT TOTAL((rt0.c2 IN ())), CASE WHEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) THEN COUNT(x'') WHEN ((rt0.c0)/(rt0.c3)) THEN ((((vt0.c0)OR(rt0.c1)))OR(vt0.c0)) WHEN ((649111167)<>(1942070082)) THEN -1417640120 ELSE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END, GROUP_CONCAT((~ (rt0.c2))) OVER () FROM rt0 WHERE ((((CAST('1940145139' AS TEXT)))<=((('sb' IN ()))))) GROUP BY rt0.c0;SELECT DISTINCT COUNT(COUNT(*)) FROM rt0;SELECT DISTINCT rt0.c0 FROM rt0; -- 1ms;
SELECT ((((vt0.c0) BETWEEN (rt0.c1) AND (0.5216605999094831)))>>((((rt0.c0))<=(('It'))))) FROM rt0 WHERE ((((0.44824995592739236, 0xffffffffe8ec8bb9, NULL)) BETWEEN (((((NULL)) BETWEEN ((NULL)) AND ((NULL))), (('1822117393')/(NULL)), ((NULL) NOT BETWEEN (0.23887558340798543) AND ('')))) AND (((('-1962514348')<<(x'9c8f')), CAST(0xffffffffe1a1d2b7 AS BLOB), ((x'9997') IS TRUE)))));SELECT ((((rt0.c1 IN ()), CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END, rt0.c2))<=((((rt0.c0)>=(t0.c40)), CASE WHEN t0.c40 THEN '1207921634' WHEN rt0.c1 THEN t0.c40 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN vt0.c0 END, ((((rt0.c3)OR(t0.c40)))AND(rt0.c1))))), TRIM(ABS(rt0.c2)), ((COUNT(*))>=(rt0.c1)) FROM t0 RIGHT OUTER JOIN vt0 ON (((0xffffffffc76b8f79, (((t0.c40)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), (~ (rt0.c0)), x'307a', (rt0.c1 IN (rt0.c1))))==((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)), LAST_INSERT_ROWID(), IFNULL(rt0.c0, t0.c40), LAST_INSERT_ROWID(), (('h') BETWEEN (vt0.c0) AND (t0.c40))))) WHERE ((((x'', 0X17fcaa6d, '0.5384566727674218', x'581c71c5', '0.9967889673965582')) NOT BETWEEN (('-296852380', x'6e62', NULL, 1060320385, '-1759055590')) AND ((NULL, 9223372036854775807, NULL, 0.09118488717211903, NULL))) COLLATE NOCASE);SELECT ((((load_extension(t0.c40))OR(((t0.c40)<=(rt0.c2)))))AND((- (rt0.c3)))) FROM rt0, t0 WHERE (((NOT (1.940145139E9)) IN ())); -- 1ms;
SELECT ALL ((((((((t0.c40)AND(t0.c40)))AND(rt0.c2)))OR(t0.c40)))OR(rt0.c0)) COLLATE RTRIM FROM t0, vt0 ORDER BY ((((rt0.c2)<=(t0.c40)))/((((rt0.c1))!=((t0.c40)))));SELECT DISTINCT NTH_VALUE(((rt0.c1 COLLATE BINARY) BETWEEN (NULL) AND (CASE WHEN rt0.c3 THEN rt0.c1 END)), ((NULL) IS FALSE)) OVER () FROM rt0, vt0 WHERE (CASE 0.25984038999265857 COLLATE BINARY  WHEN ('628711978' IN ()) THEN ((('', x'', NULL)) BETWEEN ((-1589996334, '1769678834', x'1aa9')) AND ((0.2566230865466037, NULL, '盨Z'))) END); -- 0ms;
SELECT DISTINCT (((((~ (t0.c40)))AND((rt0.c0 IN (rt0.c3)))))OR(CASE WHEN t0.c40 THEN rt0.c2 ELSE t0.c40 END)) FROM rt0, t0, vt0 GROUP BY (rt0.c2 IN ()), (((rt0.c3, rt0.c2, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS REAL), (rt0.c3 IN (rt0.c3, vt0.c0)), ((vt0.c0) IS FALSE))) AND ((rt0.c1, ((((rt0.c2)OR(x'')))AND(rt0.c2)), 0.4945529207989686))), (((CAST(t0.c40 AS TEXT)))>((CASE WHEN rt0.c2 THEN x'' END))); -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY ((t0.c40) NOT NULL)) FROM rt0 WHERE (((NULL)%(('-1475783273' IN (0.7437828364887059))))) LIMIT 1398312589;SELECT ALL PERCENT_RANK() OVER (), ((x'') BETWEEN (x'') AND (vt0.c0)) COLLATE BINARY, x'' FROM vt0, t0, rt0 WHERE ((~ (((1929836560) NOT BETWEEN ('\3f') AND (x''))))) ORDER BY (CAST(rt0.c3 AS TEXT) IN ()) ASC; -- 0ms;
SELECT TOTAL((~ (rt0.c3))) FILTER(WHERE rt0.c2) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt0;SELECT ALL x'', SQLITE_VERSION(), UNLIKELY(((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))OR(0.9285175609256351)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c3))) FROM vt0, rt0, t0; -- 0ms;
SELECT ((((0.2686290158744645)AND(((t0.c40) NOT BETWEEN (t0.c40) AND (rt0.c0)))))AND((rt0.c3 IN ()))), (NOT (((rt0.c0)>=(rt0.c0)))), ((((CASE WHEN t0.c40 THEN t0.c40 END)AND(x'')))AND(((NULL)==(rt0.c2)))) FROM vt0, rt0;SELECT DISTINCT ((((- (t0.c40))))<=((CAST(x'' AS INTEGER)))) FROM vt0, rt0 NOT INDEXED, t0; -- 0ms;
SELECT ALL UNLIKELY(t0.c40), rt0.c0, ((NULL)LIKE(MAX(t0.c40))) FROM vt0, t0, rt0 WHERE (((TRIM(0.44233347196550343)) NOTNULL)) ORDER BY vt0.c0 ASC; -- 0ms;
SELECT DISTINCT ((MIN(t0.c40))GLOB(((((t0.c40)OR(rt0.c3)))AND(rt0.c2)))), CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END THEN vt0.c0 COLLATE RTRIM END, t0.c40 FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT (((t0.c40)) NOT BETWEEN ((MAX(rt0.c1))) AND (((- (rt0.c3))))) FROM t0 ORDER BY ((((rt0.c1) BETWEEN (t0.c40) AND (rt0.c0))) IS TRUE)  NULLS LAST, NULL;SELECT ALL GROUP_CONCAT('19551056'), ((((((((CAST(t0.c40 AS TEXT))OR(((((vt0.c0)AND(x'')))AND(x'bb1e')))))OR(rt0.c1 COLLATE NOCASE)))AND((((0X4ef0203f)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(rt0.c1)), (((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) IN ()) FROM vt0, t0 WHERE ((('-924687143' COLLATE RTRIM) BETWEEN (((x'') IS TRUE)) AND ('_QQ'))) ORDER BY ((((rt0.c0)!=(rt0.c1)))/(CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;SELECT DISTINCT CUME_DIST() OVER (), rt0.c1, ((((LIKE(rt0.c3, t0.c40))OR(((rt0.c1)AND('518934715')))))OR(CAST(x'' AS BLOB))) FROM vt0 WHERE (CAST(((NULL)LIKE(NULL)) AS NUMERIC));SELECT DISTINCT ((TOTAL(t0.c40))GLOB(((rt0.c3)=(t0.c40)))) FROM rt0, vt0, t0 ORDER BY 'O+k[l)' DESC; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)OR(0.08615872383799505)))OR(rt0.c3)))AND(((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0, t0, vt0 WHERE ((((CAST('23547314' AS TEXT), '%gxext揕', ((x'')<(-964222959))))<(((((0.4627603369901754))<(('317212770'))), ((NULL)>=(-6.82834964E8)), CAST(-2022946784 AS TEXT))))) GROUP BY (((((x'', rt0.c1, x'')) BETWEEN ((rt0.c2, 0.5503413462495473, rt0.c3)) AND ((rt0.c1, t0.c40, vt0.c0)))) BETWEEN ((t0.c40 IN (rt0.c2))) AND (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN t0.c40 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) HAVING CAST(AVG(NULL) AS INTEGER); -- 0ms;
SELECT ALL (((((((((vt0.c0)AND(vt0.c0)))AND('wӑaZ')))AND(rt0.c1)))AND(1954358235)) IN ()), rt0.c2, ((rt0.c1) IS FALSE), (((((rt0.c3) IS TRUE)))!=((((((x'')OR(x'')))OR(NULL))))), ((('9ුz.O,[', COALESCE(rt0.c3, vt0.c0), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (0Xffffffff8880a629))))>=((((((((((t0.c40)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR(t0.c40)), ((t0.c40) BETWEEN (rt0.c3) AND (vt0.c0)), ((rt0.c1)=(rt0.c3))))) FROM rt0, vt0 LIMIT 1940145139 OFFSET 1954358235;SELECT DISTINCT rt0.c1 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c3, vt0.c0, vt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c1))) COLLATE RTRIM FROM t0, vt0, rt0 WHERE (CASE WHEN ((x'')LIKE(NULL)) THEN ((x'8e89') NOT NULL) ELSE ((('0.835136049772278'))>((NULL))) END); -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((((NULL) BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((((((t0.c40)OR(rt0.c3)))AND(rt0.c2))))) FROM rt0 LIMIT 1890612413;SELECT SQLITE_VERSION(), ((((rt0.c0) NOT NULL))!=(((rt0.c0) IS TRUE))), (NOT (COUNT(rt0.c2))) FROM rt0, t0, vt0; -- 0ms;
SELECT ALL t0.c40, (((((rt0.c1)OR(x'')))AND(t0.c40)) IN ()), ((0.9274088473878654) ISNULL) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CAST(CASE vt0.c0  WHEN t0.c40 THEN rt0.c0 ELSE vt0.c0 END AS NUMERIC) FROM vt0, t0;SELECT DISTINCT (NOT (TRIM(DISTINCT rt0.c3))) FROM rt0 GROUP BY (((rt0.c1))>(((((rt0.c0))>(('-822115844')))))) HAVING '-964222959'; -- 1ms;
SELECT DISTINCT ('1156322156' IN ()), (((((t0.c40))>((rt0.c0))))LIKE(rt0.c3 COLLATE RTRIM)), rt0.c2, (+ ((+ (t0.c40)))), ((((((((rt0.c0)OR(t0.c40)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)) COLLATE RTRIM COLLATE BINARY FROM rt0 WHERE (((0.7437828364887059)<('E3')) COLLATE NOCASE);SELECT DISTINCT ((rt0.c1) IS FALSE), ((CASE vt0.c0  WHEN vt0.c0 THEN '' END) BETWEEN ((((NULL)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) AND (MIN(rt0.c3))), rt0.c1 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CASE t0.c40  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END) IS TRUE) FROM t0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c3) NOT BETWEEN (t0.c40) AND (rt0.c1)) COLLATE RTRIM, (~ (0.15683490897213614 COLLATE BINARY)), ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE t0.c40 END) BETWEEN (((rt0.c3)|(NULL))) AND (NULL)) FROM vt0;SELECT ROW_NUMBER() OVER () FROM t0, vt0 WHERE (((CASE WHEN x'' THEN 0Xffffffff9b2b146e WHEN '&c' THEN x'' WHEN 'C㇑mz' THEN '&n' ELSE 0xfffffffff608c5f5 END)LIKE(((NULL) NOT BETWEEN ('635660264') AND ('1367651874'))))); -- 0ms;
SELECT ALL ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END) NOTNULL) FROM t0;SELECT DISTINCT ((CAST(rt0.c0 AS REAL))%((- (rt0.c3)))) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT (+ (vt0.c0))) FROM rt0 WHERE (((((('-447580344', 0.15850620714550034, NULL)) BETWEEN (('0.5216605999094831', 0.5446312478735993, x'')) AND (('-1979453489', NULL, 597833659))))GLOB((('\rt') ISNULL))));SELECT DISTINCT (((rt0.c1)) BETWEEN ((x'f60d')) AND ((((rt0.c3) BETWEEN (t0.c40) AND (vt0.c0))))) FROM rt0, t0 WHERE ((CASE WHEN NULL THEN -1307736734 END IN ()));SELECT ALL (+ (SQLITE_SOURCE_ID())), ((CAST(t0.c40 AS INTEGER))>>(((rt0.c2) ISNULL))), ((QUOTE(vt0.c0)) NOT BETWEEN ((((t0.c40)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND ((((t0.c40)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))) FROM vt0 WHERE (((((('811185815')) BETWEEN ((0.6196539584939418)) AND ((0.7165854357028848)))) NOT BETWEEN (0.9510054579470669 COLLATE RTRIM) AND (((((0.6157642591558149)OR('1057444329')))AND(0.9264954547034814))))) GROUP BY ((((('-22334292'))<=(('思v'))))GLOB(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING (~ (CASE WHEN vt0.c0 THEN rt0.c0 END));SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((((((x'')IS('4\lXc')), TRIM(DISTINCT '', 0.7809650053876984), '-1709892367' COLLATE RTRIM))==((((NULL)IS NOT(x'')), ((0xffffffff9240f4fb)+(NULL)), x'48db')))); -- 1ms;
SELECT DISTINCT (((((vt0.c0))==((rt0.c1)))) NOT NULL), CAST(TYPEOF(DISTINCT rt0.c0) AS BLOB), ((((((((((rt0.c0)>(vt0.c0)))AND(TOTAL(rt0.c3))))AND(((rt0.c2)IS NOT(rt0.c0)))))OR(NULLIF(rt0.c3, rt0.c2))))OR(t0.c40 COLLATE NOCASE)) FROM t0;SELECT ((0.8758545457194546)|(CAST(rt0.c3 AS NUMERIC))), (rt0.c1 IN ()), (((((rt0.c0)) BETWEEN ((t0.c40)) AND ((rt0.c3))))||(((((rt0.c2)OR(-602094355)))OR(rt0.c2)))) FROM rt0;SELECT ALL ((((rt0.c2 COLLATE NOCASE)OR(SUM(rt0.c3))))OR(NULL)) FROM vt0, rt0 LIMIT 1456015731; -- 0ms;
SELECT DISTINCT ((((((rt0.c1))=((t0.c40)))))<((CASE '-RU'  WHEN rt0.c0 THEN vt0.c0 ELSE t0.c40 END))), RANK() OVER (), CASE CAST(rt0.c2 AS REAL)  WHEN TIME(rt0.c0, rt0.c1, rt0.c1, rt0.c3, vt0.c0) THEN (- (rt0.c1)) END FROM t0, vt0, rt0 WHERE (CASE WHEN ((x'')OR(x'')) THEN ((0.44182891679669056) NOT NULL) WHEN (('0.44182891679669056')!=('㊔ ')) THEN (NOT ('ch*镑d')) WHEN CASE 1.851285533E9  WHEN 0.7764607316255224 THEN '-1833707000' ELSE NULL END THEN (('-1091987873')|(NULL)) END); -- 0ms;
SELECT DISTINCT (- (((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(t0.c40)))AND(rt0.c3)))), CAST(CASE rt0.c3  WHEN 0.490505417216353 THEN rt0.c0 END AS INTEGER), ((((rt0.c1) ISNULL))<=(((vt0.c0)AND(rt0.c1)))), COUNT(t0.c40 COLLATE NOCASE) OVER (), (((((rt0.c2, rt0.c3, rt0.c2, rt0.c0, 'a撚|?P%>'))<=((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c3))))%(((rt0.c1)<<(t0.c40)))) FROM rt0;SELECT DISTINCT ((+ (rt0.c1)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (((rt0.c2))<=((vt0.c0)))  WHEN CAST(rt0.c0 AS BLOB) THEN '3)lh ' END FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ((((t0.c40)|(vt0.c0)))<(MAX(rt0.c1))) FROM t0, vt0, rt0 WHERE (CASE WHEN ((((((((x'44f3')AND('0.4007359972940405')))OR(x'')))AND('')))AND(0.19112928246154426)) THEN (~ (NULL)) ELSE (- (NULL)) END); -- 0ms;
SELECT DISTINCT ((MIN(t0.c40)) BETWEEN (((rt0.c3) IS FALSE)) AND (CAST(t0.c40 AS TEXT))) FROM t0;SELECT DISTINCT ((((rt0.c0)AND(CASE WHEN rt0.c2 THEN rt0.c3 END)))AND(vt0.c0)), GROUP_CONCAT(((((t0.c40)OR(rt0.c3)))AND(rt0.c3))) OVER (), (AVG(rt0.c2) IN ((rt0.c3 IN (rt0.c1, NULL)))) FROM t0 WHERE (CAST(NULL COLLATE NOCASE AS REAL));SELECT DISTINCT NULL, TIME(((rt0.c0)AND(rt0.c3)), rt0.c2, CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END), (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) IN (CASE rt0.c3  WHEN 1238548077 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN 0x6e58601d THEN NULL WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t0.c40 ELSE rt0.c0 END)) FROM rt0, t0 INNER JOIN vt0 ON CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END COLLATE BINARY WHERE (((((NULL)/(x'')))||('2085310165'))); -- 0ms;
SELECT ((CAST(t0.c40 AS REAL))AND(rt0.c2)) FROM rt0;SELECT ALL (((vt0.c0 IN (rt0.c0))) NOT BETWEEN (rtreenode(rt0.c2, rt0.c0)) AND (CASE WHEN t0.c40 THEN vt0.c0 END)) FROM vt0 WHERE (CAST(((0x73d095ff) NOTNULL) AS NUMERIC)) ORDER BY (- (((rt0.c1)%(t0.c40)))) ASC  NULLS FIRST, CAST((rt0.c2 IN (vt0.c0)) AS BLOB) DESC;SELECT ALL ((((x'') NOTNULL))IS((rt0.c1 IN ()))) FROM vt0, rt0, t0; -- 0ms;
SELECT ALL (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN t0.c40 END IN ()) FROM t0 WHERE (json_type(((x'') BETWEEN (x'') AND (x'74fc8036')))) GROUP BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((t0.c40) BETWEEN (t0.c40) AND (rt0.c2)) THEN (- (rt0.c2)) END HAVING ((rt0.c0)%(vt0.c0)) COLLATE NOCASE LIMIT 910159267;SELECT DISTINCT ((((rt0.c2) NOTNULL))LIKE(rt0.c0)) FROM vt0 WHERE (CAST((0x6a558b9d IN ()) AS INTEGER));SELECT DISTINCT COUNT(CASE rt0.c3  WHEN t0.c40 THEN t0.c40 END) OVER () FROM t0, vt0;SELECT DISTINCT UNICODE(rt0.c3) COLLATE RTRIM FROM vt0;SELECT ALL ((rt0.c0) NOT NULL) COLLATE NOCASE COLLATE RTRIM FROM t0 WHERE (CASE WHEN NULL THEN (('') IS TRUE) ELSE ((-2.033122095E9) NOT BETWEEN (NULL) AND ('+1')) END);SELECT DISTINCT (((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((LTRIM(t0.c40, rt0.c3), ((rt0.c1) ISNULL), (NOT (vt0.c0)))) AND ((((rt0.c2)IS NOT(rt0.c2)), rt0.c2, CASE rt0.c3  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) FROM vt0, rt0 WHERE (((('0.0958562203840968' IN ()))%(0.8932486500500945))) LIMIT 423635002;SELECT DISTINCT NULLIF(DISTINCT SUM(t0.c40), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) FROM rt0, vt0 WHERE ((~ (NULL COLLATE BINARY)));SELECT DENSE_RANK() OVER () FROM t0 WHERE (((((((x'')OR(x'')))OR(x'')))|((((x'45f0'))<>((NULL)))))); -- 0ms;
SELECT ALL (((vt0.c0))!=((rt0.c2))) COLLATE RTRIM, ((~ (t0.c40)) IN ()), ((rt0.c3 IN ()) IN (CAST(rt0.c1 AS INTEGER))) FROM rt0, t0;SELECT CAST(((rt0.c0) ISNULL) AS NUMERIC), CASE vt0.c0  WHEN NULL THEN COUNT(*) ELSE vt0.c0 COLLATE NOCASE END, LAST_VALUE(((((((vt0.c0)LIKE(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0)>(vt0.c0))))) OVER () FROM vt0;SELECT ALL TYPEOF(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) FROM rt0, t0, vt0 ORDER BY ((rt0.c2)>>(rt0.c1 COLLATE BINARY))  NULLS FIRST, CASE WHEN CASE WHEN t0.c40 THEN rt0.c1 ELSE rt0.c1 END THEN t0.c40 WHEN rt0.c0 COLLATE BINARY THEN CASE WHEN t0.c40 THEN rt0.c0 END WHEN load_extension(rt0.c0, rt0.c0) THEN (NOT (rt0.c3)) END DESC  NULLS LAST; -- 0ms;
SELECT ALL SUM(((rt0.c1)|(rt0.c1))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM vt0 WHERE ((((((((x'')AND(x'a097')))OR(1.769678834E9))))>(((x'574e28c5' IN (0.08970238860041513, ''))))));SELECT (rt0.c2 IN ()) COLLATE BINARY, CAST(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB), CASE ((((((((((((vt0.c0)AND('ULyKRt洶/w')))OR(0.5362388199153101)))OR(t0.c40)))AND(rt0.c3)))AND(t0.c40)))AND(vt0.c0))  WHEN ((rt0.c2)*(rt0.c1)) THEN CASE WHEN rt0.c1 THEN t0.c40 ELSE rt0.c1 END END FROM t0, vt0, rt0 LIMIT -1780624686 OFFSET -1294196538; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN x'' THEN rt0.c3 ELSE rt0.c0 END) OVER () FROM rt0 WHERE (HEX(DISTINCT ((((((((0xffffffff840933dc)AND(0.20360659122547164)))OR('1685545712')))AND(0.6297934526818303)))AND(x'')))) GROUP BY t0.c40 HAVING TRIM(DISTINCT CAST(rt0.c2 AS NUMERIC), GROUP_CONCAT(rt0.c3));SELECT ALL MIN(((rt0.c0) BETWEEN (rt0.c3) AND (t0.c40))) FROM rt0 LEFT OUTER JOIN t0 ON (((((vt0.c0))>((rt0.c2)))) NOT BETWEEN (vt0.c0) AND ((- (rt0.c0)))) INNER JOIN vt0 ON (NOT (((rt0.c2) ISNULL))) WHERE (((('' IN (NULL, 'C>'))) ISNULL));SELECT TRIM(DISTINCT ((0.6517766353290898)AND(vt0.c0)), ((t0.c40) IS FALSE)) FROM vt0, rt0;SELECT (((vt0.c0))<((rt0.c2))) COLLATE RTRIM FROM t0 WHERE (((x'' COLLATE BINARY)&(((((x'')OR('0.33587637399173864')))AND('1>')))));SELECT DISTINCT ((LOWER(rt0.c3)) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((rt0.c2)|(rt0.c1)))), ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END)OR(TYPEOF(DISTINCT rt0.c3))))AND(SUM(rt0.c1))), TRIM(NULL, ((((vt0.c0)OR(rt0.c1)))OR(t0.c40))) FROM vt0 WHERE (CAST(QUOTE(x'') AS INTEGER));SELECT DISTINCT NULL, CAST(((((rt0.c2)OR(rt0.c2)))AND('DZ')) AS TEXT), CASE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN NULL THEN (rt0.c0 IN ()) END FROM vt0 WHERE ((((((('y8')OR('n8D儔k')))OR(x'')))<('9a Q!')));SELECT DISTINCT ((765197328 COLLATE BINARY) NOTNULL) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT (~ ((~ (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3))) ISNULL) FROM vt0;SELECT 'Vz%8j' FROM vt0, t0 GROUP BY (((CASE vt0.c0  WHEN rt0.c1 THEN x'' ELSE rt0.c0 END, ((rt0.c1)%(rt0.c3)), ((rt0.c3)%(rt0.c3))))!=((UNLIKELY(rt0.c1), (NOT (rt0.c1)), ((rt0.c1)AND(t0.c40)))));SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c3)) NOT NULL), ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((t0.c40)AND(rt0.c2))) AND (HEX(t0.c40))), ((((((((vt0.c0)AND(x'678e' COLLATE NOCASE)))AND(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN '0.9201787939108154' THEN rt0.c3 END)))OR(DATETIME(rt0.c2, t0.c40, rt0.c2))))OR(MAX(rt0.c2, rt0.c1))) FROM rt0, vt0, t0 WHERE (((((9223372036854775807)LIKE(x'64a4'))) NOT BETWEEN (x'') AND ((((0.08041015473782565, NULL, x'')) BETWEEN (('yF6yK', '-111378680', NULL)) AND ((NULL, '729098045', 0.4404703055879019)))))) GROUP BY (((((t0.c40))>((rt0.c1)))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(t0.c40)))AND(rt0.c0)))AND(rt0.c1))) AND (((((rt0.c0)AND(rt0.c2)))OR(vt0.c0)))), ((ABS(rt0.c3)) NOTNULL), ((t0.c40 COLLATE RTRIM)/(rt0.c0 COLLATE BINARY)) HAVING (((((rt0.c3)AND(x'')), (((x'0f61', vt0.c0, rt0.c0, t0.c40, vt0.c0))!=(('', rt0.c3, rt0.c0, rt0.c1, rt0.c3))), ((t0.c40)GLOB(rt0.c2))))>=(((('')>=(rt0.c1)), (t0.c40 IN (rt0.c2)), (((t0.c40, rt0.c3, rt0.c0)) BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c0, t0.c40, rt0.c0)))))) ORDER BY rt0.c0  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END IN ())  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0) NOT NULL) ELSE ((t0.c40)IS(t0.c40)) END FROM vt0 WHERE (CAST((('1281802588') IS FALSE) AS BLOB));SELECT DISTINCT COUNT(*) OVER (), ((0.1582313457317177) IS TRUE), x'' FROM vt0, t0; -- 0ms;
SELECT DISTINCT LTRIM(((rt0.c2) BETWEEN (t0.c40) AND (t0.c40))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0, vt0; -- 0ms;
SELECT ((COALESCE(DISTINCT vt0.c0, t0.c40, rt0.c0, t0.c40)) BETWEEN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c1))) AND ((((('')OR(rt0.c3)))OR(t0.c40)))) FROM rt0, t0;SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)<>(((rt0.c0)<>(rt0.c3)))) FROM vt0;SELECT ALL (~ (rt0.c1)) FROM rt0 WHERE (((((CAST('' AS NUMERIC))AND((('1726277997')|('?~fP[&]')))))AND(NULL))); -- 0ms;
SELECT ALL ((((rt0.c2)>=(vt0.c0))) NOTNULL), CUME_DIST() OVER (), rt0.c3, CASE 0.9639580356904413  WHEN vt0.c0 COLLATE BINARY THEN (- (rt0.c2)) END, ((rt0.c2 COLLATE BINARY)<((rt0.c1 IN (t0.c40)))) FROM rt0, t0 WHERE ((((((0.9311294620125947)) NOT BETWEEN ((x'f13e')) AND ((x''))))>=(HEX(DISTINCT x''))));SELECT DISTINCT ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))GLOB((~ (rt0.c3)))) FROM t0, vt0;SELECT DISTINCT (+ (-1113685117)), ((GLOB(t0.c40, vt0.c0))>(TYPEOF(rt0.c1))), ((((rt0.c1)&(rt0.c2)))+((NOT (rt0.c0)))), MAX(vt0.c0), rt0.c3 FROM t0, rt0, vt0 WHERE (CASE WHEN (('Hu#i0')>>(0.39355032373634546)) THEN (NOT ('876809536')) WHEN ((x'')<<(0.5201760734939352)) THEN 0Xfffffffffa18b318 COLLATE NOCASE WHEN ((((0X5535b626)OR(NULL)))OR(NULL)) THEN CAST(x'' AS TEXT) END); -- 0ms;
SELECT DISTINCT MAX(CAST(rt0.c2 AS REAL)), LAG(((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))<=(((rt0.c3)>(rt0.c2)))), ((- (rt0.c1)) IN ()), NULL) OVER ( RANGE LOWER(LIKELIHOOD(rt0.c3, 0.4403367887575135)) PRECEDING EXCLUDE TIES), MIN(((((rt0.c2)AND(rt0.c3)))AND(rt0.c1))) FROM vt0, rt0 ORDER BY ((rt0.c0 COLLATE BINARY)OR(rt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((rt0.c0)LIKE(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)))AND(((t0.c40) IS TRUE))) DESC;SELECT -340697906 COLLATE NOCASE FROM t0, rt0 WHERE ((((((NULL))<(('-1284800305')))) BETWEEN ((NULL IN ())) AND ((((NULL))>=((x'')))))); -- 0ms;
SELECT (((vt0.c0, t0.c40, rt0.c2))==((t0.c40, rt0.c3, rt0.c3))) COLLATE BINARY, json_insert(((((rt0.c1)AND('-1962514348')))AND(rt0.c0)), x'', ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))), (MIN(vt0.c0) IN ()) FROM vt0, t0 WHERE (((((('')<(NULL))))!=((CASE 0.5924690152823044  WHEN 2.020662621E9 THEN 0.5304368995297731 END)))) ORDER BY ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (0.02183403921668381) AND ('0.8345333954812804' COLLATE BINARY));SELECT DISTINCT CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY FROM rt0, t0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))>=(CAST(-3.17117617E8 AS TEXT))), (((((rt0.c0) NOT BETWEEN (rt0.c3) AND (t0.c40))))<=((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END))), (('O4')OR((((rt0.c2))<=((NULL))))), CAST(ABS(NULL) AS REAL), (((rt0.c1)OR(rt0.c0)) IN ()) FROM rt0, vt0, t0; -- 0ms;
SELECT rt0.c0, SUM(((rt0.c1)!=(rt0.c3))) OVER (), (((rt0.c3)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) AND ((CAST(t0.c40 AS INTEGER)))) FROM rt0 WHERE (NULL);SELECT '1190729147', CASE WHEN t0.c40 COLLATE RTRIM THEN (~ (rt0.c0)) WHEN CAST(x'4f5a' AS NUMERIC) THEN GROUP_CONCAT(rt0.c2) WHEN ((rt0.c0)<=(t0.c40)) THEN (rt0.c0 IN (x'')) ELSE ((rt0.c3) IS TRUE) END, ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)))<<((((vt0.c0, t0.c40, rt0.c1))<=((rt0.c1, vt0.c0, t0.c40))))) FROM rt0, t0, vt0; -- 0ms;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((NULL IN ()))>=(NULL))); -- 1ms;
SELECT DISTINCT (('rktJ~h') NOT BETWEEN (((((rt0.c3)OR(vt0.c0)))OR(rt0.c1))) AND (CAST(rt0.c0 AS TEXT))) FROM rt0, t0;SELECT ALL (((rt0.c2)) BETWEEN ((CASE rt0.c2  WHEN t0.c40 THEN rt0.c3 END)) AND (((+ (vt0.c0))))), (NOT (SUM(rt0.c2))), CAST(((rt0.c3)>>(vt0.c0)) AS TEXT) FROM t0, vt0, rt0; -- 0ms;
SELECT ALL CAST(((rt0.c0) IS TRUE) AS INTEGER), TOTAL(MAX(CASE rt0.c3  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN NULL WHEN NULL THEN t0.c40 ELSE rt0.c2 END)), ((((vt0.c0))>((rt0.c2))) IN ()) FROM rt0, t0 WHERE (-1639637126);SELECT ((((((t0.c40)<(rt0.c3)))AND((((0.5905243679767485, rt0.c2, vt0.c0))>=((rt0.c0, rt0.c2, t0.c40))))))AND((- (rt0.c1)))) FROM t0 LIMIT 2020662621;SELECT DISTINCT (((rt0.c1 IN ()))GLOB(CAST(rt0.c0 AS INTEGER))) FROM t0, rt0, vt0 WHERE (((((x'eae4') NOTNULL))&(CASE WHEN NULL THEN '-1208004242' WHEN -1001731397 THEN x'bc3c95be' WHEN 0.5905243679767485 THEN x'' ELSE 0.707200190004539 END))); -- 0ms;
SELECT DISTINCT ((QUOTE(vt0.c0))+(((rt0.c1)*(vt0.c0)))) FROM vt0, t0, rt0; -- 0ms;
SELECT ALL COUNT(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) FROM t0 LIMIT -916869667;SELECT DISTINCT LIKELY(rt0.c0 COLLATE NOCASE), ((((rt0.c1 COLLATE BINARY)OR(((rt0.c2)=(rt0.c1)))))AND(((rt0.c3)|(t0.c40)))), CAST((((rt0.c3))<>((rt0.c1))) AS TEXT) FROM vt0 GROUP BY (((rt0.c1 IN ())) IS TRUE), (('s~' COLLATE NOCASE) IS TRUE), ((CAST(rt0.c2 AS BLOB))GLOB(vt0.c0));SELECT DISTINCT (((vt0.c0, t0.c40, NULL)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB), ((rt0.c2) ISNULL), ((t0.c40)IS NOT(rt0.c3)))) AND ((((((t0.c40)AND(vt0.c0)))AND(rt0.c0)), ((t0.c40)<>(rt0.c1)), (+ (vt0.c0))))), (((rt0.c1)OR(NULL)) IN ()), AVG(COUNT((((vt0.c0))>((rt0.c3))))) FROM t0, rt0, vt0;SELECT DISTINCT ((COUNT(*))&((vt0.c0 IN ()))), ((((rt0.c3) ISNULL)) IS TRUE), NTH_VALUE(((rt0.c3)<<(rt0.c0)) COLLATE BINARY, ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))/(CAST(rt0.c1 AS NUMERIC)))) OVER () FROM vt0, t0, rt0 WHERE (((((TIME('<''iplt', 0.5333689748023225, NULL))AND(((('', NULL, NULL))<((x'6d1c', 'm', NULL))))))OR(COALESCE('7', x'')))) ORDER BY (((rt0.c1 IN ()))LIKE(((((((((((((rt0.c2)OR(rt0.c3)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c2)))AND(t0.c40)))OR(rt0.c3)))) DESC;SELECT DISTINCT vt0.c0 FROM vt0, t0, rt0 WHERE ((((NOT (x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((('')IS(rt0.c0)))>>(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c0 END)), (('-1126926221') IS TRUE), ((rt0.c0)>(rt0.c1 COLLATE NOCASE)), (((((vt0.c0))<=(('U!TK')))) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c3)), 0.32281580238242347 FROM vt0;SELECT DISTINCT CASE WHEN COUNT(rt0.c3) THEN rt0.c2 COLLATE BINARY ELSE '+6䊵' END, ((((((rt0.c2)>(rt0.c2)))OR((NOT (vt0.c0)))))AND((NULL IN ()))), ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))IS NOT(((rt0.c1)<=(rt0.c0)))) FROM t0, vt0 WHERE ((- ((((0x15afc86e))>=((x''))))));SELECT DISTINCT CAST(TRIM(vt0.c0, rt0.c1) AS TEXT), MAX(((rt0.c1)<(rt0.c1))), ((rt0.c0)-(x'edac')) FROM t0, vt0, rt0 WHERE ((((~ (NULL))) BETWEEN (0.8053940302515666 COLLATE BINARY) AND (LIKELIHOOD(DISTINCT 0xffffffff87a93672, 0.7607066574368955)))) UNION ALL SELECT DISTINCT TOTAL(((((rt0.c2)OR(rt0.c0)))OR(vt0.c0))) OVER (), (+ (LTRIM(rt0.c1, rt0.c0))), (~ ((~ (rt0.c3)))) FROM vt0, rt0, t0; -- 0ms;
SELECT (- (vt0.c0)) COLLATE BINARY FROM vt0, t0 WHERE (((CAST('1135835149' AS NUMERIC))&(((1011314448)AND(''))))) LIMIT -1138000593 OFFSET 1110672789; -- 0ms;
SELECT ALL ((((rt0.c3) BETWEEN (x'') AND (t0.c40)))=(((vt0.c0)&(rt0.c0)))) FROM t0 WHERE (((((((NULL) IS FALSE))OR((('')LIKE(0.6478320916634971)))))OR('513744814' COLLATE NOCASE)));SELECT ALL (((vt0.c0 IN ()))<>((rt0.c1 IN ()))) FROM rt0 WHERE ((((x'ee8b') BETWEEN (0.49864562130868817) AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT (~ (NULL)), ((((((rt0.c3)OR(x'')))OR(vt0.c0))) IS FALSE), CASE WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c1 COLLATE NOCASE WHEN UPPER(vt0.c0) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)) WHEN (((t0.c40)) BETWEEN ((rt0.c1)) AND ((t0.c40))) THEN ((vt0.c0)GLOB(x'')) ELSE rt0.c3 COLLATE BINARY END FROM t0, vt0 GROUP BY rt0.c3;SELECT ALL (rt0.c2 IN (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM rt0, vt0, t0 WHERE ((((((((0.06265451206941652))>=((x''))))AND(((NULL)|('0.3590462481770631')))))OR((((NULL))>=((0.8771136326368656)))))); -- 1ms;
SELECT DISTINCT (CAST(rt0.c3 AS NUMERIC) IN (TRIM(DISTINCT NULL, 0X44ec136c))), CAST(((vt0.c0)AND(t0.c40)) AS REAL), (NOT (GROUP_CONCAT(vt0.c0))), (- ('1204564427')), ((((vt0.c0)<=(rt0.c0)))>>((((rt0.c2, rt0.c1, t0.c40, rt0.c3, -1435481747))>=((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3))))) FROM rt0, t0 WHERE ((+ (((0.1968800139211424) ISNULL))));SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((~ (t0.c40)))))OR((rt0.c1 IN ()))) FROM vt0, rt0;SELECT ALL ((t0.c40) BETWEEN (SUBSTR(rt0.c3, rt0.c0)) AND (CASE t0.c40  WHEN rt0.c2 THEN rt0.c2 WHEN t0.c40 THEN t0.c40 WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)), (((t0.c40, vt0.c0, rt0.c1)) NOT BETWEEN (((NOT (t0.c40)), (('649111167')-(rt0.c3)), (NOT (vt0.c0)))) AND ((((rt0.c3)|(rt0.c2)), ((t0.c40) BETWEEN (vt0.c0) AND (rt0.c2)), CHANGES()))), GROUP_CONCAT((- (rt0.c1))) COLLATE NOCASE FROM t0 GROUP BY (((HEX(DISTINCT rt0.c0)))<=((CAST(rt0.c3 AS TEXT))));SELECT ALL 1.911732864E9 FROM t0 WHERE (((IFNULL(DISTINCT x'512a', 1.207921634E9)) BETWEEN (((0.7652478617326387) NOT BETWEEN (x'') AND (NULL))) AND (((NULL) BETWEEN (0Xfb1345a) AND (-2081494970))))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c2)AND(rt0.c3)))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c40 THEN rt0.c2 WHEN rt0.c3 THEN 0Xffffffffee18bb30 ELSE rt0.c3 END)))AND((- (vt0.c0)))))OR(((rt0.c0) IS FALSE))) FROM rt0;SELECT rt0.c1 FROM rt0, vt0 WHERE (LIKELY(DISTINCT ((x'888d')<=('1072817778')))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0 WHERE ((((TRIM(DISTINCT x'', 0.9603388994625478)))<>(((0xffffffffb0297fab IN ()))))) LIMIT -1950692928; -- 0ms;
SELECT rt0.c3, SQLITE_VERSION(), SUM(((rt0.c1)IS NOT(rt0.c1))) OVER (), (- (rt0.c1 COLLATE RTRIM)), json_object((+ (NULL)), NULL) FROM vt0, rt0, t0 WHERE ((NOT (IFNULL('0.7764607316255224', '-333191750')))); -- 0ms;
SELECT DISTINCT ((-1250456730) ISNULL) FROM t0 WHERE (((((x'')GLOB(NULL))) NOT BETWEEN (x'') AND ((('c>')<('0.9924525125805059'))))); -- 0ms;
SELECT ALL (NOT (((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))), (((vt0.c0)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((load_extension(t0.c40)))), (((rt0.c1)) BETWEEN ((((rt0.c3)|(rt0.c1)))) AND ((((rt0.c2) NOT NULL)))), (NOT (((rt0.c0)+(t0.c40)))), (((NULL)) BETWEEN (((+ (vt0.c0)))) AND ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN t0.c40 THEN t0.c40 ELSE rt0.c2 END))) FROM rt0;SELECT DISTINCT COUNT(0.0970636430042372) OVER () FROM vt0, t0 WHERE (CASE WHEN CASE '1207921634'  WHEN NULL THEN 0.9070326874992799 END THEN (((x''))=(('345244977'))) END); -- 0ms;
SELECT ALL (- (CAST('-2065554463' AS TEXT))) FROM t0 WHERE ((((((('0.7809650053876984') ISNULL))OR(((NULL)LIKE(x'')))))OR(((0xffffffffc6e1a326) NOT BETWEEN (NULL) AND (''))))) LIMIT -2059133736 OFFSET 1395259697; -- 0ms;
SELECT DISTINCT (t0.c40 IN ()) COLLATE RTRIM, CASE WHEN CAST(NULL AS TEXT) THEN rt0.c2 END, CASE CASE WHEN vt0.c0 THEN rt0.c1 END  WHEN t0.c40 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN t0.c40 ELSE t0.c40 END ELSE (((('')AND(rt0.c2)))AND('DQ11)&䣰')) END, LIKELY(((rt0.c1) NOTNULL)), 0.8098286861395897 FROM vt0, rt0 LIMIT -498992558;SELECT ALL x'' FROM t0, vt0 WHERE (((CASE WHEN x'e707' THEN -1841236741 END) NOT BETWEEN (((x'') BETWEEN (NULL) AND (0xffffffffaf66d579))) AND (CASE 0.6044947149123407  WHEN x'cd34' THEN NULL END))); -- 0ms;
SELECT PERCENT_RANK() OVER ( ORDER BY ((((((rt0.c3) IS TRUE))OR((rt0.c0 IN ()))))AND(rt0.c2 COLLATE NOCASE))  NULLS LAST), ((((rt0.c0)IS(rt0.c0)))%(((rt0.c1)||(rt0.c0)))), COALESCE(DISTINCT CASE WHEN t0.c40 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END, ((vt0.c0)OR(rt0.c0))) FROM vt0, t0, rt0 WHERE (((((+ (0.6653064309467868))))>((0.5614645656027384)))); -- 1ms;
SELECT (+ (((t0.c40) NOTNULL))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT 0.4627603369901754 FROM t0, vt0 NOT INDEXED, rt0 UNION SELECT ALL (((- (rt0.c0))) NOT BETWEEN (((t0.c40)>=(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c1) AND ('906910785')))) FROM t0, vt0 WHERE (CAST(UNLIKELY('0.5373808818846103') AS REAL));SELECT DISTINCT TOTAL((vt0.c0 IN ())) OVER (), CAST(rt0.c2 AS NUMERIC), ((MAX(vt0.c0))*((vt0.c0 IN ()))), ((CASE WHEN vt0.c0 THEN rt0.c3 ELSE t0.c40 END)||(rt0.c1 COLLATE BINARY)), COUNT((((t0.c40))<((rt0.c1)))) OVER ( GROUPS ((((rt0.c2)LIKE(rt0.c1))) NOT BETWEEN ((((rt0.c3, vt0.c0, rt0.c3)) BETWEEN ((vt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c0, t0.c40, rt0.c2)))) AND (((rt0.c0)-(0x5ee4d2c7)))) PRECEDING) FROM vt0, t0, rt0;SELECT (NOT (((vt0.c0)!=('-1090292577')))), (MIN(rt0.c3) IN ()), GROUP_CONCAT(NULL) OVER () FROM t0 WHERE (((((((x'') NOT NULL))AND(CAST(x'' AS INTEGER))))AND(((('1644073661'))<=(('c4'))))));SELECT CAST(rt0.c1 AS INTEGER) COLLATE RTRIM FROM t0, rt0, vt0 WHERE ((((+ ('')))/(((((((((NULL)AND(x'')))OR('-1947174714')))OR(x'')))AND(NULL))))); -- 0ms;
SELECT ALL CASE (rt0.c3 IN ())  WHEN ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) END FROM vt0, rt0 UNION ALL SELECT DISTINCT rt0.c3 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT MAX((rt0.c3 IN ())) COLLATE NOCASE, ((x'480b') IS FALSE), ROW_NUMBER() OVER ( ORDER BY NULL COLLATE BINARY  NULLS FIRST, json_type('1043610083') RANGE ((rt0.c3)GLOB((+ (vt0.c0)))) PRECEDING EXCLUDE GROUP) FROM rt0, t0 LIMIT 649111167 OFFSET 1;SELECT ALL vt0.c0, (COALESCE(DISTINCT rt0.c3, 1954358235) IN (NULLIF(DISTINCT rt0.c2, vt0.c0))), (+ (rt0.c1 COLLATE BINARY)) FROM rt0, t0, vt0 ORDER BY CAST((rt0.c3 IN (rt0.c2)) AS TEXT)  NULLS FIRST, CASE WHEN rt0.c2 THEN rt0.c3 ELSE t0.c40 END COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) NOT BETWEEN (CAST(t0.c40 AS BLOB)) AND (SUM(rt0.c1))) FROM vt0;SELECT DISTINCT AVG(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3))) FROM t0;SELECT DISTINCT COUNT(*) FROM rt0, t0, vt0 LIMIT -336877554; -- 0ms;
SELECT ALL CAST(t0.c40 COLLATE BINARY AS NUMERIC), MIN(NULLIF(t0.c40, rt0.c1)), CAST(COUNT(rt0.c0) AS TEXT) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT TRIM((+ (rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))), 0x35351d34, t0.c40 FROM t0, vt0 NOT INDEXED, rt0 WHERE (((x'') ISNULL)); -- 0ms;
SELECT CAST(CAST(rt0.c1 AS BLOB) AS BLOB), vt0.c0, (((vt0.c0))<=((((((rt0.c1)AND(vt0.c0)))AND(rt0.c0))))), ((((((t0.c40)OR(rt0.c0)))AND(rt0.c0))) NOT BETWEEN ((((vt0.c0))<>((vt0.c0)))) AND (vt0.c0 COLLATE NOCASE)), (load_extension(vt0.c0) IN ()) FROM t0, rt0, vt0; -- 0ms;
SELECT CAST(((t0.c40) ISNULL) AS REAL) FROM rt0 WHERE (CASE '#l쿱u'  WHEN CASE WHEN '-257723653' THEN '^꧒' ELSE x'' END THEN (('1552250739') IS TRUE) ELSE CASE '-111378680'  WHEN '1011314448' THEN '' WHEN 0.9285175609256351 THEN NULL WHEN NULL THEN 1.627614439E9 END END);SELECT DISTINCT CASE NULL  WHEN CASE WHEN t0.c40 THEN rt0.c3 END THEN t0.c40 END FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT HEX(DISTINCT AVG(rt0.c3)) FROM t0, vt0, rt0 WHERE ((((((((((('-1250456730')AND(-951808476)))AND('-1698733099')))OR('x_<wPYﺀ')))OR('ea'))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((('1811379643')) BETWEEN ((rt0.c2)) AND ((rt0.c3))))LIKE(((vt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT ((((vt0.c0))>((vt0.c0))) IN ()), ((((((((((rt0.c3) IS FALSE))AND((((rt0.c3, vt0.c0, t0.c40))<((t0.c40, x'', t0.c40))))))AND(CAST(rt0.c3 AS BLOB))))OR(((rt0.c1) NOTNULL))))OR(((t0.c40) IS TRUE))), CASE t0.c40  WHEN t0.c40 THEN vt0.c0 ELSE t0.c40 END COLLATE BINARY COLLATE NOCASE FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)+(rt0.c2)) IN (CHANGES(), CASE rt0.c1  WHEN t0.c40 THEN rt0.c1 END)) FROM rt0, t0 WHERE (0.015756661278871764 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT rt0.c3, SUM(CASE WHEN rt0.c3 THEN t0.c40 ELSE rt0.c3 END), ((((((rt0.c2)OR(t0.c40)))OR(vt0.c0))) BETWEEN (((-1206200607)>(rt0.c0))) AND (((t0.c40) BETWEEN (t0.c40) AND (rt0.c3)))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0, vt0; -- 0ms;
SELECT DISTINCT MAX(TOTAL((('-12964429')||(rt0.c0)))) FROM t0, vt0, rt0;SELECT DISTINCT ((t0.c40)<<(rt0.c3)) COLLATE NOCASE FROM rt0;SELECT DISTINCT rt0.c1, ((json_patch(rt0.c3, t0.c40)) NOT NULL), AVG((~ (vt0.c0))) FROM rt0, t0 WHERE (CAST((('')+('+kI&Y\H')) AS TEXT));SELECT DISTINCT ((rt0.c0) NOT NULL) FROM t0, vt0;SELECT ALL TOTAL(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))) FROM rt0 INDEXED BY i32, vt0, t0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN ((NULL)) AND ((0.18056945143395065))) THEN ('v\fRz*	' IN ()) ELSE ((NULL)!=(-8.11945305E8)) END);SELECT ALL ((((rt0.c3)-(vt0.c0)))IS NOT(((rt0.c1)||(t0.c40)))) FROM rt0, vt0 WHERE ((('-1982395186') NOT BETWEEN (((x'') NOTNULL)) AND (CAST('1202919205' AS INTEGER)))) ORDER BY (+ ((~ (vt0.c0))))  NULLS FIRST;SELECT ALL LAST_VALUE(((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))%(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c3))))) OVER (), ((((t0.c40) ISNULL))*(MAX(''))), (((+ (rt0.c2)))AND((((rt0.c2))<=((x'714b'))))) FROM rt0;SELECT DISTINCT (((- (t0.c40)))&(((((vt0.c0)AND(rt0.c3)))AND(vt0.c0)))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c1)AND(rt0.c3)))AND(x''))) OVER ( GROUPS BETWEEN (((rt0.c1)) NOT BETWEEN (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) FOLLOWING AND NULL FOLLOWING) FROM rt0, vt0, t0 LIMIT -374572293 OFFSET -529391852; -- 0ms;
SELECT (((rt0.c3 COLLATE RTRIM))<((rt0.c3 COLLATE BINARY))) FROM t0, vt0 WHERE (((NULL) NOT BETWEEN ('') AND (CAST(x'' AS TEXT))));SELECT DISTINCT CAST(HEX(DISTINCT t0.c40) AS REAL) FROM t0, vt0, rt0 WHERE (((((((x'') NOT BETWEEN ('') AND (NULL)))AND(ABS(''))))AND((('447855025')/(0.01479855004019659))))); -- 0ms;
SELECT CAST(CAST(x'' AS NUMERIC) AS TEXT) FROM vt0 WHERE (CASE ((((((((x'')AND(NULL)))AND(NULL)))AND(1e500)))AND(x''))  WHEN ((((((((-1.947174714E9)OR(0X73a443f3)))AND(NULL)))AND('-337696841')))AND(0Xfffffffffd5ef091)) THEN CAST(95841886 AS REAL) WHEN ((297527351) NOT BETWEEN (NULL) AND (x'')) THEN (((1135835149)) BETWEEN ((NULL)) AND ((x'258f'))) WHEN ((NULL)*(0.6950472498138953)) THEN ((((NULL)AND(x'')))OR(x'e7f2')) ELSE (((0.6039911130136012))==(('471089014'))) END); -- 0ms;
SELECT DISTINCT LOWER(rt0.c1) COLLATE NOCASE FROM t0, rt0, vt0 ORDER BY CASE WHEN ((NULL) BETWEEN (t0.c40) AND (vt0.c0)) THEN rt0.c3 ELSE (NOT (t0.c40)) END  NULLS LAST, CASE WHEN rt0.c0 COLLATE NOCASE THEN (NOT (rt0.c3)) ELSE (NOT (t0.c40)) END; -- 0ms;
SELECT ((TRIM(DISTINCT t0.c40))/((~ (rt0.c0)))), ((LOWER(rt0.c0))<<(MAX(rt0.c2))), CASE WHEN LIKELIHOOD(rt0.c3, 0.3073956832286011) THEN (rt0.c0 IN ()) END FROM rt0, vt0 EXCEPT SELECT ALL x'', ((((rt0.c3 IN (rt0.c1))))>((((vt0.c0)IS NOT(rt0.c1))))), (((((vt0.c0, rt0.c3, rt0.c0))>=((x'', rt0.c3, rt0.c2))))=(LENGTH(t0.c40))) FROM t0, rt0 WHERE (CAST(0xffffffffc0cd693d AS REAL) COLLATE RTRIM) LIMIT -345532090;SELECT DISTINCT json_array(t0.c40 COLLATE BINARY, CASE WHEN rt0.c3 THEN t0.c40 END) FROM vt0 WHERE (json_array(CASE WHEN 1.011314448E9 THEN '◬o\u8' ELSE NULL END, 0.576811421459463 COLLATE BINARY));SELECT (((UNLIKELY(rt0.c2)))<=((UNLIKELY(vt0.c0)))) FROM rt0 NOT INDEXED WHERE (((('1072817778' IN ('wz|*WW'))) BETWEEN (CASE 0.38985299545063123  WHEN 0.70597734095923 THEN x'92d9' END) AND (((0.870122225731283) IS FALSE))));SELECT ALL COUNT(*) OVER () FROM vt0, rt0 WHERE ((~ ((((x'14b55dce', 0.4016906779424356, x'')) BETWEEN (('', x'141e', 0.7230533220698074)) AND ((0.315170360457102, NULL, '193856988')))))) GROUP BY CASE WHEN ((rt0.c0)IS(rt0.c1)) THEN NULL ELSE (((rt0.c0))!=((x'8540'))) END; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c2)))LIKE(MAX(rt0.c0))) FROM vt0, rt0; -- 0ms;
SELECT ALL MIN(NULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c3)>>(rt0.c1))  WHEN (((rt0.c3))<((vt0.c0))) THEN ((t0.c40)/(vt0.c0)) ELSE rt0.c0 END FROM rt0 WHERE (CASE WHEN ((NULL) BETWEEN (NULL) AND (x'')) THEN ((0.5384566727674218)<>(NULL)) END);SELECT (- ((((rt0.c1))<=((rt0.c0))))) FROM vt0, rt0, t0 WHERE (((('193856988'))<((0x40a15d6c)))); -- 0ms;
SELECT ALL vt0.c0 FROM t0;SELECT DISTINCT (((~ (t0.c40))) BETWEEN (0.25984038999265857) AND (NULL)) FROM vt0, rt0 WHERE ((((0.16298872100776396, 0.1416631134703319, '1943049727')) NOT BETWEEN ((CAST(0.22960367595903652 AS REAL), (('-405134641')+(x'')), ((0Xffffffffe4dc2d06)IS NOT(0.949157217248821)))) AND ((CAST('-20452475' AS NUMERIC), (((0.6446456092901818)) NOT BETWEEN ((NULL)) AND ((0.15962714817964263))), 0x692f6c87 COLLATE RTRIM))));SELECT DISTINCT ((((t0.c40) NOT NULL))*(t0.c40 COLLATE NOCASE)), GROUP_CONCAT(CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c40 END), rt0.c2 FROM rt0, t0 WHERE ((((((((((+ (x'97c0')))AND(('-1659043349' IN ()))))OR(((NULL) IS TRUE))))AND(CASE NULL  WHEN 0.09705663662842778 THEN NULL END)))AND(((0.45336711714568767)IS(x''))))) ORDER BY ((((rt0.c3)<('1344814497'))) NOT NULL) ASC  NULLS LAST;SELECT DISTINCT SUM(SQLITE_COMPILEOPTION_USED(t0.c40)) OVER ( ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, CASE WHEN NULLIF(vt0.c0, rt0.c1) THEN rt0.c0 COLLATE RTRIM WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)) THEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND (('rbRf'))) WHEN ((((rt0.c0)OR(NULL)))OR(vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c40)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 END THEN rt0.c2 COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))) THEN (rt0.c0 IN ()) END  NULLS FIRST), (((((t0.c40)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))%(UNLIKELY(t0.c40))), (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE BINARY FROM vt0;SELECT DISTINCT 0.40991161395216613 FROM vt0 WHERE (((UPPER(x''))LIKE(ABS('')))); -- 0ms;
SELECT RANK() OVER () FROM t0, rt0, vt0; -- 0ms;
SELECT ((((((t0.c40)AND(vt0.c0)))OR(rt0.c3)))*(((rt0.c2)>=(rt0.c1)))), CAST((((NULL, vt0.c0, rt0.c0))==((rt0.c0, x'dddf', vt0.c0))) AS BLOB), GROUP_CONCAT(((rt0.c2)-(rt0.c1)) COLLATE RTRIM) OVER () FROM vt0 WHERE (TRIM(NULL));SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))%(((rt0.c2)IS(vt0.c0)))) FROM rt0 WHERE (CAST((~ ('wӑaz')) AS TEXT));SELECT DISTINCT ((((((t0.c40)OR(rt0.c2)))AND(rt0.c3)))<<('193856988')), (CAST(rt0.c1 AS BLOB) IN (((rt0.c2) NOT BETWEEN (t0.c40) AND (rt0.c2)))), ((rt0.c0) NOTNULL) FROM t0 GROUP BY LAST_INSERT_ROWID();SELECT DISTINCT (~ (((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)))) FROM rt0, vt0 WHERE (((((x'b4c9') NOTNULL))/((2.085310165E9 IN ())))); -- 0ms;
SELECT AVG(((rt0.c3) BETWEEN ('') AND (rt0.c2))) FILTER(WHERE ((0.7730843166865587) NOT BETWEEN (((rt0.c0)>=(t0.c40))) AND (rt0.c0))) OVER () FROM rt0 WHERE ((NOT (CAST('' AS INTEGER))));SELECT DISTINCT MIN(GROUP_CONCAT(vt0.c0)) COLLATE BINARY FROM t0, rt0 WHERE ('-1491240974');SELECT ALL COUNT(*) FROM vt0 INDEXED BY i41, t0, rt0 WHERE (CAST(((1890612413)IS('-688037272')) AS REAL)) GROUP BY x'' COLLATE BINARY HAVING x'3c0f';SELECT (+ (TOTAL(rt0.c2))), (((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND ((('G')IS(rt0.c0)))), ROUND(CASE WHEN rt0.c3 THEN x'' END, ((t0.c40)AND(rt0.c0))) FROM vt0 WHERE ((((((('s_ ajgA')AND(0.6785506854843443)))AND('zfxV凩웷k蒵')))&(CASE 0.7236817636863928  WHEN x'' THEN 0.8288020432407616 ELSE x'' END)));SELECT DISTINCT load_extension(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((t0.c40) NOT BETWEEN (rt0.c3) AND (rt0.c1))) FROM rt0;SELECT DISTINCT ((LOWER(DISTINCT t0.c40)) IS FALSE), CAST(((t0.c40) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS BLOB), ((((rt0.c0) ISNULL))<>(CAST(x'c6ea' AS REAL))) FROM t0, vt0 INNER JOIN rt0 ON CAST(CAST(rt0.c1 AS INTEGER) AS REAL) WHERE (1.940145139E9); -- 1ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 END THEN TRIM(rt0.c3) END FROM rt0, t0, vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT COUNT(CASE rt0.c0  WHEN rt0.c3 THEN NULL WHEN t0.c40 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END) OVER ( GROUPS ((CAST(rt0.c3 AS BLOB)) BETWEEN (x'') AND (((rt0.c0) IS FALSE))) PRECEDING EXCLUDE GROUP), (NULL IN (((((vt0.c0)OR(t0.c40)))OR(x'')))), ((((((((rt0.c2)OR(vt0.c0)))OR(t0.c40)))OR(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE COLLATE NOCASE FROM t0, rt0;SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0, t0, vt0; -- 0ms;
SELECT (NOT ((- (rt0.c1)))) FROM t0, vt0 INNER JOIN rt0 ON (((0.6243147151122348, ((vt0.c0)LIKE(vt0.c0)), ((rt0.c3) BETWEEN (rt0.c2) AND (NULL))))>=((((rt0.c1)||(rt0.c2)), ((rt0.c0) IS FALSE), ((t0.c40) IS FALSE)))); -- 0ms;
SELECT (((t0.c40)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c40 ELSE vt0.c0 END)) AND (((rt0.c0 IN (rt0.c3))))) FROM rt0, vt0 UNION SELECT DISTINCT COUNT(CAST(rt0.c3 AS NUMERIC)) OVER ( ORDER BY ((TRIM(rt0.c0)) BETWEEN (((vt0.c0)||(rt0.c3))) AND (((rt0.c3) IS TRUE))) DESC  NULLS LAST) FROM t0, vt0;SELECT ((rt0.c1)AND(rt0.c2)) COLLATE BINARY FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN t0.c40 WHEN rt0.c3 THEN 0.29194305514588426 END)>=(AVG(rt0.c2))) FROM vt0;SELECT DISTINCT (((rt0.c1)||(t0.c40)) IN ()), (vt0.c0 COLLATE NOCASE IN ()), (('')GLOB(-795407655)) FROM vt0, t0 WHERE (((((NULL) NOT BETWEEN ('-156296754') AND (NULL)))<((('2JNwfl8') NOT BETWEEN (x'') AND ('356279926'))))) GROUP BY (((((rt0.c2)=(0.7701523722439914)), ((vt0.c0) BETWEEN (80639436) AND (rt0.c2)), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE -1032905204 END, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c1 COLLATE RTRIM))<=((((rt0.c1) IS TRUE), CASE WHEN rt0.c3 THEN rt0.c3 END, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))), -2.9310114E7, CAST(rt0.c2 AS TEXT)))) LIMIT -1698733099 OFFSET 75610328;SELECT DISTINCT ((((((((((((rt0.c2)AND(rt0.c0)))OR(0.9274088473878654)))OR(rt0.c3 COLLATE RTRIM)))OR(LIKELIHOOD(t0.c40, 0.9301877956210293))))OR(((rt0.c1)<=(rt0.c3)))))AND(rt0.c2)), (((((((rt0.c0)OR(t0.c40)))AND(vt0.c0))))>=(((('_*O	7C6[') NOT NULL)))), ((vt0.c0) BETWEEN (1613972663) AND ('0.7317761470661636')) FROM vt0, t0, rt0; -- 0ms;
SELECT ALL rt0.c1 FROM t0;SELECT DISTINCT ((rt0.c2) NOTNULL) COLLATE RTRIM COLLATE NOCASE, (((rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((~ (rt0.c0))))), NULL FROM rt0, t0, vt0; -- 0ms;
SELECT ALL (((((((((0Xffffffffbc43ef48)AND(t0.c40)))OR(rt0.c3)))AND(rt0.c2)))OR(vt0.c0)) IN ()) FROM rt0, vt0 GROUP BY (((vt0.c0 IN ())) BETWEEN ((rt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM)), SQLITE_VERSION(), (((((rt0.c3, rt0.c3, 0.8535043391803094)) NOT BETWEEN ((rt0.c2, rt0.c0, t0.c40)) AND ((0.6457292483218254, t0.c40, t0.c40)))) IS TRUE) HAVING COUNT(RTRIM(NULL));SELECT DISTINCT (+ (NULL)), 0.6555844767068185, ((((vt0.c0)=(0.999313742699075)))*(((((rt0.c1)OR(0x30928da4)))OR(rt0.c1)))) FROM t0 WHERE (CASE '-961867903'  WHEN ((NULL)<>(-7.21617193E8)) THEN ((NULL) IS FALSE) WHEN 0.5430099578733786 THEN (((4.47855025E8)) NOT BETWEEN ((x'')) AND ((0.9613012078102433))) WHEN CASE NULL  WHEN '-1e500' THEN NULL ELSE x'' END THEN (('sc8kloj#')OR(NULL)) ELSE NULL COLLATE RTRIM END);SELECT ALL (LIKELY(NULL) IN ()) FROM vt0, t0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (0.2093059518389393 IN ()) END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (x'5f76')), (((~ (vt0.c0))) NOT BETWEEN ((('8407280') ISNULL)) AND (((rt0.c0)IS(rt0.c0)))), AVG(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0))) OVER () FROM vt0, t0 WHERE (((((x'49b8') NOT BETWEEN (NULL) AND ('1156322156'))) NOTNULL)) GROUP BY CAST((rt0.c3 IN ()) AS REAL), ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END) BETWEEN ((vt0.c0 IN (rt0.c1))) AND (((t0.c40)IS('-1982395186')))), (((((NOT (rt0.c1)))AND(((((rt0.c0)OR(t0.c40)))OR(x'a646')))))OR(rt0.c2)) HAVING (+ (vt0.c0)) COLLATE BINARY;SELECT DISTINCT x'' FROM rt0 WHERE (CAST(CAST('0.48151637281183246' AS REAL) AS INTEGER)); -- 0ms;
SELECT x'd87b' FROM rt0 WHERE ((+ (((x'') BETWEEN ('0.8932486500500945') AND ('*.5\ၐ'))))); -- 0ms;
SELECT DISTINCT IFNULL(NULL, MIN(rt0.c1)), ((((vt0.c0))>((rt0.c2))) IN (rt0.c1 COLLATE NOCASE, SQLITE_COMPILEOPTION_USED(rt0.c1))), ((((rt0.c3)>>(rt0.c2)))|(((rt0.c1) ISNULL))) FROM vt0, rt0 GROUP BY LIKELY(DISTINCT '0.5446312478735993' COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NTH_VALUE(CAST(((((t0.c40)OR(vt0.c0)))OR(rt0.c1)) AS INTEGER), ((t0.c40) BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN t0.c40 WHEN vt0.c0 THEN rt0.c3 WHEN NULL THEN vt0.c0 WHEN rt0.c0 THEN -1129564778 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c40 WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c3 END))) OVER ( PARTITION BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN (((t0.c40)&(vt0.c0))) AND (((NULL)<(rt0.c2)))), CAST('-1982395186' AS NUMERIC)) FROM t0, rt0, vt0 LIMIT 1072817778; -- 1ms;
SELECT (((('0.06524979411109932' COLLATE NOCASE)AND(((vt0.c0) NOT BETWEEN (0.11218996802312886) AND (t0.c40)))))AND(CAST(rt0.c3 AS BLOB))), COUNT(rt0.c2) OVER ( ORDER BY ((NULL)>(rt0.c2 COLLATE BINARY)) DESC, (('') BETWEEN (((t0.c40)=(rt0.c3))) AND (((rt0.c1)>(rt0.c0)))) DESC, CHAR((('cL7G0<')&(rt0.c2)))  NULLS FIRST), COALESCE((rt0.c1 IN (vt0.c0)), ((NULL)|(rt0.c2))) FROM vt0 WHERE (((CASE WHEN NULL THEN 0.7044177084569387 WHEN '9^!L' THEN '1148832828' WHEN '0.4627603369901754' THEN NULL END)%(((((193856988)AND(x'')))AND(0x791c31ad))))) ORDER BY CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.20088783970410284) AS REAL) DESC;SELECT ((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE('218246929', ((((vt0.c0)AND(((rt0.c2) BETWEEN ('!L') AND (rt0.c1)))))AND((NOT (x''))))) OVER () FROM rt0, t0, vt0; -- 0ms;
SELECT ALL DATE(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), UNLIKELY(DISTINCT t0.c40), ((rt0.c0)>>(vt0.c0))), FIRST_VALUE(((((((((((((NULL)OR(((((x'')AND(rt0.c0)))AND(rt0.c0)))))OR(((rt0.c2) NOTNULL))))OR(((rt0.c2)*(rt0.c2)))))OR(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)))OR(((((((((NULL)AND(0Xfffffffff76fcec9)))OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM))) OVER (), ((MAX(rt0.c2)) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (TRIM(rt0.c1, rt0.c0))) FROM vt0, rt0;SELECT ALL ((t0.c40 COLLATE BINARY)AND(rt0.c1 COLLATE RTRIM)) FROM vt0 WHERE (((-7.21617193E8) ISNULL) COLLATE BINARY);SELECT ALL (((((((('')AND(CAST(rt0.c2 AS NUMERIC))))OR(rt0.c1)))OR((((rt0.c2, -1.091987873E9, rt0.c2))==((rt0.c0, rt0.c0, rt0.c3))))))AND((+ (t0.c40)))) FROM rt0 WHERE (((((((x'')AND('')))AND(0.3925161082488495))) NOT NULL));SELECT ALL ((((TYPEOF(vt0.c0))OR(CAST(vt0.c0 AS REAL))))OR((((rt0.c3))<>((rt0.c0))))) FROM vt0, t0;SELECT (((rt0.c2)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE)) AND ((CASE vt0.c0  WHEN rt0.c1 THEN x'44a8' END))), ((((rt0.c0)GLOB(rt0.c3)))*(((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))), LTRIM(rt0.c3, ((t0.c40)*(0.527660101830273))) FROM vt0;SELECT DISTINCT AVG((NOT (vt0.c0))) FROM rt0;SELECT ALL (((rt0.c1)) NOT BETWEEN (((((rt0.c3, rt0.c1, t0.c40, t0.c40, t0.c40)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1, rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c0, t0.c40, rt0.c0, rt0.c1))))) AND ((((0X16fd1e4e) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) FROM t0, rt0 WHERE (NULL COLLATE NOCASE);SELECT MIN(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END) FROM rt0, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT (CAST(rt0.c1 AS TEXT) IN ()) FROM t0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY); -- 0ms;
SELECT ALL COALESCE(DISTINCT CAST(rt0.c2 AS REAL), CAST(rt0.c0 AS INTEGER), x'', (NOT (rt0.c0))) FROM vt0 CROSS JOIN t0 ON (((vt0.c0 IN ())) IS TRUE) WHERE (((((x'')||(NULL)))>=(((x'8d12')!=('?55.')))));SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0)))) NOT BETWEEN ((((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((rt0.c2, rt0.c1, t0.c40)) AND ((rt0.c0, vt0.c0, vt0.c0)))) AND (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END)), (rt0.c0 COLLATE NOCASE IN ()), MAX(((t0.c40) BETWEEN (rt0.c2) AND (rt0.c2))) FROM t0, rt0;SELECT x'' FROM rt0 WHERE (((NULL COLLATE RTRIM)OR(((x'45a3')!=(0xffffffff9abf63d5))))); -- 0ms;
SELECT load_extension(rt0.c2 COLLATE RTRIM) FROM t0;SELECT ALL SUM((((((((('0.7051108616278163')OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(t0.c40))) OVER () FROM vt0, rt0, t0 WHERE (CASE WHEN IFNULL(DISTINCT NULL, '980448380') THEN (~ (x'')) WHEN (('-1358575745') NOT BETWEEN (0.2643378751705938) AND ('1863830959')) THEN x'' WHEN ((NULL) NOT BETWEEN (x'') AND (x'')) THEN ((0.928366455317861) IS TRUE) ELSE ((-1.841236741E9)!=(1291301765)) END) LIMIT -968417645 OFFSET 372167148; -- 0ms;
SELECT ALL (((((vt0.c0)*(rt0.c1))))>((CAST(vt0.c0 AS BLOB)))) FROM rt0, t0, vt0; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, t0, rt0 WHERE ((- (((x'') NOT NULL)))) GROUP BY CASE x'47b8'  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c2 COLLATE RTRIM WHEN json_object(vt0.c0, rt0.c1) THEN json(rt0.c3) WHEN (rt0.c1 IN ()) THEN ((rt0.c1)IS NOT(rt0.c1)) ELSE '' END HAVING ((((NULL)AND((- (rt0.c1)))))AND(NULL COLLATE BINARY)); -- 0ms;
SELECT ALL ((((('T7V4V')OR(vt0.c0)))OR(vt0.c0)) IN ()), rt0.c0, AVG((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))) OVER ( ORDER BY rt0.c2 DESC RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE GROUP) FROM vt0, t0, rt0 WHERE (CAST((((((((('1874932177')OR(x'')))AND(x'')))AND(0.4743322236844528)))OR('-1138000593')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((rt0.c0) BETWEEN (UPPER(rt0.c2)) AND (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))), (((((0.5100689171141943))==((rt0.c0))))>(GROUP_CONCAT('0.9264954547034814'))), ((((((((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 END)AND((((vt0.c0, rt0.c3, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, t0.c40)) AND ((rt0.c1, vt0.c0, vt0.c0))))))OR(((t0.c40) NOTNULL))))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(TOTAL(rt0.c0))) FROM vt0, rt0, t0; -- 0ms;
SELECT (((~ (vt0.c0)))<=(((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c3)))AND(vt0.c0)))OR(rt0.c2)))), ((((rt0.c2)<(rt0.c0))) NOTNULL), LENGTH(((rt0.c1)<<(rt0.c0))) FROM rt0;SELECT DISTINCT ((((rt0.c1)-(rt0.c1))) IS TRUE) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT SQLITE_VERSION() FROM t0, rt0; -- 1ms;
SELECT DISTINCT LOWER(DISTINCT ((rt0.c1) NOT NULL)) FROM rt0, vt0 WHERE (((((x'')<>(NULL)))>(((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0;SELECT ALL CAST(CAST(rt0.c0 AS BLOB) AS TEXT) FROM rt0 WHERE ((('0')%((('1791034412')||(0.6400595100592619))))) LIMIT -1982395186 OFFSET 835353150; -- 0ms;
SELECT DISTINCT NULL FROM vt0, t0 WHERE (CASE WHEN 0.3587144859257252 THEN NULL END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((rt0.c0) ISNULL) FROM rt0, t0; -- 0ms;
SELECT ALL rt0.c3 FROM vt0, t0 FULL OUTER JOIN rt0 ON CAST(((vt0.c0) NOT NULL) AS REAL) LIMIT -903626413; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL CASE x''  WHEN t0.c40 COLLATE BINARY THEN ((t0.c40)|(t0.c40)) ELSE (- (0.9808118392066276)) END FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT json_insert(MIN(vt0.c0), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR('y	''/,餝i疻')), ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(t0.c40)), MAX(rt0.c1), ((rt0.c1)||(rt0.c2))) FROM vt0, rt0;SELECT DISTINCT (((vt0.c0 IN ()))<=(((((x'')AND(rt0.c3)))OR(rt0.c3)))) FROM t0, vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) IS FALSE)) FROM vt0, rt0, t0 WHERE (((CASE WHEN -2.033122095E9 THEN 0.287998702176826 END) BETWEEN (0.6905092265410036) AND ('0.48151637281183246'))); -- 0ms;
SELECT ALL ((- (t0.c40)) IN ((+ (rt0.c0)))) FROM t0, rt0, vt0 WHERE (((((NULL)|(''))) BETWEEN (x'' COLLATE BINARY) AND ((x'ae7b089d' IN (0x3d8ff680))))) LIMIT -1773101291 OFFSET 705393692; -- 0ms;
SELECT (IFNULL(vt0.c0, rt0.c3) IN (CAST(rt0.c1 AS REAL), CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0 LIMIT 129856557 OFFSET 973074310;SELECT DISTINCT HEX(vt0.c0 COLLATE RTRIM) FROM rt0, vt0, t0; -- 1ms;
SELECT DISTINCT ((((rt0.c3))<>(('-945975742'))) IN ()) FROM vt0, t0 WHERE ((((+ (NULL)))%(((NULL)LIKE(0Xffffffff80b80bbc))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0 LIMIT 1 OFFSET 181763693; -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))) FROM t0 WHERE (((NULL) NOT BETWEEN ((((('(hﱅFF9')AND(NULL)))OR(0.816159626403677))) AND (CASE 0.7563351306775544  WHEN 'wi' THEN '765197328' END)));SELECT DISTINCT ((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR(x''))) BETWEEN ((+ (0.04216279411420398))) AND (rt0.c3 COLLATE NOCASE)) FROM vt0, rt0, t0 WHERE ((((0.3527788571531446 COLLATE RTRIM, (- (0.6780318505491559)), (('◲0K<ApX') NOT BETWEEN (0.31325999598530474) AND (x'85ad'))))<((x'17098572', 0.7165854357028848 COLLATE BINARY, ((0.707468508368219) IS FALSE))))) GROUP BY (((- (rt0.c3)))OR(CAST(rt0.c1 AS TEXT))) HAVING ((((0.40477314500289785) BETWEEN (rt0.c1) AND (rt0.c1)))&((vt0.c0 IN (NULL, vt0.c0)))); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c2 AS REAL) AS TEXT) FROM vt0, rt0, t0 WHERE ((NOT (((NULL)-(-1902496751))))); -- 0ms;
SELECT (((rt0.c0 COLLATE NOCASE, ((NULL) NOT BETWEEN (vt0.c0) AND (0.9176494627305442)), ((rt0.c3) NOT NULL)))=(((((rt0.c2))<((rt0.c0))), (('')GLOB(rt0.c3)), (rt0.c0 IN (rt0.c1))))), ((t0.c40 COLLATE BINARY)<((~ (rt0.c3)))), (+ (0.22746197906455845)), ((((rt0.c0 IN ())))<=((((rt0.c3) IS FALSE)))), t0.c40 FROM vt0, rt0, t0 GROUP BY (('0C8y-썞S') BETWEEN ((~ (rt0.c3))) AND (CAST(rt0.c3 AS REAL))) HAVING ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c3))) AND (CAST(rt0.c3 AS TEXT))); -- 0ms;
SELECT DISTINCT (((x'')) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c3)) AND (('^3^y	'))))) AND ((CAST(vt0.c0 AS BLOB)))) FROM vt0, t0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((NULL) NOT BETWEEN (t0.c40) AND (rt0.c1))) FROM t0 WHERE (((x'7562' IN ()) IN ()));SELECT DISTINCT (((rt0.c3, vt0.c0, rt0.c1)) NOT BETWEEN (((NULL IN ()), 0.20040216605905536, ((((rt0.c2)AND(rt0.c0)))OR(NULL)))) AND (((vt0.c0 IN ()), UNLIKELY(t0.c40), ((rt0.c0)==(rt0.c0))))) FROM vt0, t0 WHERE (((((((((RTRIM(NULL))OR(((x'a0f0') ISNULL))))AND(((NULL)%(x'a582')))))AND(((0Xffffffff94a3954f) BETWEEN (-2017599142) AND (-1858175200)))))AND(NULLIF(0.8087726529044741, 0.8669001621420956))));SELECT DISTINCT CAST(((rt0.c1)>>(rt0.c3)) AS BLOB) FROM t0, rt0; -- 0ms;
SELECT ALL ((MAX(rt0.c2))LIKE(TRIM(DISTINCT rt0.c2))) FROM vt0, rt0 WHERE ((('1069321709') NOT NULL) COLLATE BINARY); -- 0ms;
SELECT MIN(((t0.c40) IS TRUE)) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER)) IS TRUE) FROM vt0, t0;SELECT rt0.c1 COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (vt0.c0)) THEN ((rt0.c3)GLOB(rt0.c0)) END FROM t0 WHERE (((CASE '133776139'  WHEN '-509488457' THEN '' ELSE '' END) NOTNULL)) GROUP BY x'4a57' HAVING (((x'')) BETWEEN ((rt0.c3)) AND ((vt0.c0))) COLLATE BINARY;SELECT CASE SUM(t0.c40)  WHEN ((rt0.c1)GLOB(rt0.c1)) THEN (((vt0.c0, 0.7944605017583839, t0.c40)) BETWEEN ((t0.c40, rt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c2, t0.c40))) ELSE HEX(rt0.c2) END FROM t0, rt0, vt0 INDEXED BY i90;SELECT DISTINCT rt0.c0 FROM t0, vt0, rt0 WHERE ((((x'' IN ()))<>(((((x'')AND(NULL)))OR('518934715'))))); -- 0ms;
SELECT ALL CAST(COUNT(vt0.c0) AS BLOB), (('0.287466292029126') NOT BETWEEN (vt0.c0) AND (rt0.c2)) COLLATE BINARY, (+ (SUM(rt0.c1))) FROM vt0, t0 WHERE ((((NULL, '1344814497', 0.8367530544204832)) BETWEEN (('', ((798835766)%(0X157d6517)), 1.11552962E8 COLLATE RTRIM)) AND ((((NULL)&('0/')), (('843912314')>=('-413961951')), ((NULL)IS NOT('1309834406'))))));SELECT ALL (NOT (((rt0.c0)>=(rt0.c0)))), ((((((vt0.c0)IS NOT(NULL)))OR(((vt0.c0)%(rt0.c2)))))OR(((rt0.c2) IS FALSE))), (((rt0.c2)<<(rt0.c1)) IN (((((rt0.c1)OR(rt0.c1)))AND(t0.c40)), (+ (rt0.c1)))) FROM t0 ORDER BY ((- (rt0.c1)) IN (TOTAL_CHANGES(), rt0.c2))  NULLS LAST;SELECT ALL ((LOWER(rt0.c0))||((('2017780791') NOT BETWEEN (t0.c40) AND (rt0.c0)))) FROM rt0, t0, vt0 GROUP BY ((((vt0.c0)AND(((rt0.c1) BETWEEN (t0.c40) AND (0xffffffffaf05c77f)))))OR(CAST(rt0.c0 AS REAL))) HAVING ((vt0.c0) IS FALSE) COLLATE NOCASE COLLATE RTRIM; -- 1ms;
SELECT ALL ((SUBSTR(t0.c40, rt0.c2)) IS FALSE) FROM t0, rt0, vt0 INDEXED BY i32 WHERE (UNLIKELY(DISTINCT 0.5828425808751492) COLLATE NOCASE) GROUP BY IFNULL('', '1025434360' COLLATE NOCASE);SELECT ALL COUNT(CAST(0.15459803186255794 AS TEXT)) OVER (), ((highlight(rt0.c3, t0.c40, rt0.c2, rt0.c3))>>(rt0.c3 COLLATE RTRIM)), FIRST_VALUE(t0.c40) OVER () FROM t0 NOT INDEXED, rt0;SELECT ALL ((CASE WHEN rt0.c0 THEN t0.c40 WHEN vt0.c0 THEN rt0.c2 WHEN t0.c40 THEN rt0.c2 ELSE vt0.c0 END) BETWEEN (((x'') NOTNULL)) AND (NULL)) FROM t0, vt0, rt0 WHERE ((HEX(DISTINCT 2.05771724E9) IN ())); -- 0ms;
SELECT ALL ((((((((MIN(vt0.c0, rt0.c0))OR(vt0.c0)))OR((((rt0.c2))>((vt0.c0))))))OR(4.1225848E7)))AND(((rt0.c0)|(rt0.c3)))) FROM rt0, vt0 WHERE (CAST('983360720' COLLATE NOCASE AS NUMERIC)); -- 0ms;
SELECT ((((rt0.c2)&(0.7917848938670746)))IS NOT(CAST(rt0.c2 AS NUMERIC))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)<<(rt0.c0)) IN ()) FROM t0 WHERE ((((x'1a17') IS FALSE) IN ((+ (NULL)), x''))); -- 0ms;
SELECT NULL, (NOT (CAST(vt0.c0 AS REAL))), (+ (rt0.c3 COLLATE RTRIM)) FROM t0, rt0;SELECT ((((t0.c40) NOT NULL))>=(((t0.c40)/(vt0.c0)))) FROM t0, rt0, vt0 WHERE ((((((NULL))>=((x'')))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((((t0.c40)AND(t0.c40)))OR(rt0.c0)))OR(0.1449133086485912)))OR(0.6403153462997176)) COLLATE BINARY FROM vt0, rt0, t0 WHERE ((((NOT (NULL))) BETWEEN (NULLIF(NULL, '磆WX8')) AND (((x'97f6')+(NULL))))) LIMIT 815625038; -- 0ms;
SELECT DISTINCT json_valid(t0.c40 COLLATE BINARY) FROM t0, rt0; -- 0ms;
SELECT DISTINCT NTILE(((((((((((rt0.c0)AND(rt0.c1)))OR(NULL)))OR(rt0.c2)))OR(rt0.c2)))|(((rt0.c0)GLOB(rt0.c0))))) OVER () FROM t0, rt0; -- 0ms;
SELECT AVG(json_extract(rt0.c0, vt0.c0)), NTH_VALUE((0.003913211093770519 IN ()), (((- (rt0.c2)))LIKE(CASE rt0.c1  WHEN rt0.c2 THEN NULL END))) OVER (), (((rt0.c2 IN ()))GLOB(x'db55')) FROM rt0;SELECT ALL ((TYPEOF(rt0.c0))<<(json_array(t0.c40, rt0.c3))) FROM t0, rt0 WHERE ((~ ((0.27929565472505236 IN (0.5792443859010941, 0.25984038999265857))))); -- 0ms;
SELECT ALL ((json_quote(x'8f19693e'))<>(rt0.c0)), ((t0.c40 COLLATE RTRIM)<(rt0.c0)), ((((t0.c40) ISNULL)) ISNULL) FROM t0, rt0, vt0 WHERE (((((NULL) NOT BETWEEN (0.14821422051385047) AND ('-894978819'))) ISNULL)) ORDER BY ((((((((CAST(t0.c40 AS INTEGER))AND((((rt0.c1))>=((rt0.c1))))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END)))AND(CAST(rt0.c2 AS BLOB))))OR((NOT (rt0.c0))))  NULLS FIRST, SQLITE_COMPILEOPTION_USED(((rt0.c2)IS(rt0.c0))), ROUND(((rt0.c2) NOT NULL), ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))AND(vt0.c0)))AND(vt0.c0))) ASC; -- 0ms;
SELECT DISTINCT (((((t0.c40)) NOT BETWEEN ((0.5305767785093289)) AND ((vt0.c0)))) BETWEEN ((((rt0.c1, rt0.c3, rt0.c3))>=((rt0.c3, vt0.c0, rt0.c0)))) AND (((rt0.c0) ISNULL))), CUME_DIST() OVER (), ((((CAST(rt0.c2 AS BLOB))AND(UNLIKELY(rt0.c3))))AND((NOT (t0.c40)))) FROM rt0 WHERE (((((NULL)<<(2.020662621E9))) IS TRUE));SELECT DISTINCT ((((((rt0.c2)/(rt0.c2)))AND((rt0.c0 IN ()))))AND(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))), ((0.007011465073997636) NOTNULL), ((t0.c40) IS TRUE) COLLATE BINARY FROM t0, rt0; -- 0ms;
SELECT COUNT(*) FROM t0 WHERE ((NOT (0xffffffff8286e0ae))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(t0.c40)))AND(rt0.c3)))LIKE(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END)) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) BETWEEN (rt0.c1) AND (CASE vt0.c0  WHEN vt0.c0 THEN t0.c40 END)), ((((UNLIKELY(DISTINCT '>^ᐐb%^'))AND(CAST(rt0.c3 AS BLOB))))OR(rt0.c2)), (((rt0.c2, t0.c40, rt0.c0)) BETWEEN ((ROUND(vt0.c0, rt0.c0), CAST(rt0.c0 AS REAL), ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)))) AND (((((vt0.c0))>=(('?W'))), (((t0.c40, rt0.c1, rt0.c0))>((rt0.c0, 0.8758545457194546, rt0.c1))), rt0.c0 COLLATE BINARY))) FROM t0, rt0;SELECT DISTINCT ((~ (rt0.c3)) IN (((vt0.c0)>>(vt0.c0)))) FROM vt0, t0, rt0 ORDER BY NULL; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(t0.c40))) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c2))) AND (((t0.c40)IS NOT(vt0.c0)))) FROM rt0, vt0 GROUP BY CASE (((rt0.c2))<=((0Xfffffffff0f9cc53)))  WHEN (rt0.c1 IN ()) THEN rt0.c0 WHEN (NOT (rt0.c2)) THEN 972790805 WHEN CAST(vt0.c0 AS BLOB) THEN ((rt0.c1) IS TRUE) ELSE ((rt0.c1)-(rt0.c3)) END;SELECT DISTINCT CASE WHEN NULL THEN rt0.c1 COLLATE NOCASE END, vt0.c0, (((+ (rt0.c0)))LIKE((t0.c40 IN ()))) FROM t0, vt0, rt0; -- 0ms;
SELECT ALL (rt0.c3 COLLATE RTRIM IN ()) FROM t0, vt0 LIMIT -2105089874 OFFSET 1625163244; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC))LIKE((rt0.c3 IN (rt0.c1, vt0.c0)))), CASE WHEN ((rt0.c0) BETWEEN (t0.c40) AND (t0.c40)) THEN ((((rt0.c2)AND(rt0.c1)))OR(vt0.c0)) END, (((rt0.c3, NULL, rt0.c2)) BETWEEN ((((rt0.c3)|(rt0.c0)), LIKELIHOOD(NULL, 0.8033606874289546), (+ (vt0.c0)))) AND ((((rt0.c0)/(t0.c40)), ((rt0.c2) BETWEEN (vt0.c0) AND ('-654229015')), ABS(vt0.c0)))) FROM t0 WHERE ((+ ((x'' IN (0xffffffff96fe81f2)))));SELECT DISTINCT CAST(UNLIKELY(vt0.c0) AS INTEGER) FROM t0 WHERE ((NULL IN (NULL)) COLLATE NOCASE);SELECT COUNT(rt0.c0) OVER () FROM t0, vt0, rt0 WHERE (((CASE NULL  WHEN NULL THEN NULL WHEN x'' THEN NULL WHEN NULL THEN 0.28262892044477417 ELSE x'' END) BETWEEN (((((x'')AND('')))AND('KR'))) AND ((~ (NULL))))); -- 0ms;
SELECT ALL (((((((((+ (t0.c40)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))))OR(rt0.c2 COLLATE NOCASE)))AND((((vt0.c0, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((x'', rt0.c2, rt0.c0))))))AND(vt0.c0)) FROM vt0 LIMIT 1811379643 OFFSET -1922802060;SELECT ALL TOTAL(MAX(rt0.c3, rt0.c0, 0.05637019977217661, t0.c40)) FROM t0, vt0 WHERE (CAST(((NULL)AND(0.2357431923482951)) AS REAL)) LIMIT 537378207;SELECT DISTINCT (- (((((rt0.c1)OR(vt0.c0)))OR(rt0.c2)))) FROM vt0 NOT INDEXED WHERE (CASE WHEN CAST('-1225112444' AS TEXT) THEN ((0.7307897241822728) NOT BETWEEN (0.18705800467127265) AND (0.7896901583416753)) WHEN (0x7ef7fc4 IN ()) THEN x'' COLLATE NOCASE WHEN (~ ('2020662621')) THEN CAST(8.89361745E8 AS INTEGER) END);SELECT DISTINCT ((((rt0.c3)+(rt0.c2)))+((NOT (rt0.c2)))) FROM vt0, t0, rt0 WHERE (((CASE '1832178601'  WHEN '0.09118488717211903' THEN 0.9144869486245369 ELSE x'' END) NOT BETWEEN ((NOT (0xffffffffeb57fc3d))) AND ((((('ﲖa7^춷璽,}')OR('-574315056')))AND(x''))))) LIMIT -1218648277 OFFSET 308657249; -- 0ms;
SELECT ALL rt0.c2 FROM vt0, rt0, t0 WHERE ((0.546297318314105 IN ()) COLLATE BINARY) LIMIT -257728365 OFFSET 0; -- 1ms;
SELECT (((('-500208143')OR(((vt0.c0)||(x'')))))OR((((vt0.c0))>=((rt0.c0))))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0, vt0 WHERE ((- ((((NULL, NULL, 66313122)) NOT BETWEEN ((-414030018, x'31d5', '0.601458006004167')) AND ((NULL, 0.14821422051385047, NULL)))))); -- 0ms;
SELECT DISTINCT LTRIM(rt0.c1) COLLATE BINARY FROM rt0, t0, vt0 GROUP BY CASE ((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN ((rt0.c2)GLOB(rt0.c2)) THEN CAST(rt0.c3 AS INTEGER) ELSE x'13e6' END; -- 0ms;
SELECT DISTINCT (~ (rt0.c0 COLLATE NOCASE)), (- (rt0.c3 COLLATE BINARY)), -500208143 FROM t0, rt0 WHERE (((((CAST(NULL AS TEXT))AND(((NULL)>(NULL)))))AND(((x'') BETWEEN ('-405134641') AND ('2100480333'))))); -- 0ms;
SELECT DISTINCT 0X5434659f FROM rt0, vt0, t0 WHERE ((((('\r!') NOT BETWEEN (0.32528132223233086) AND (0.19961834450254146)))-(((0.6323119961639053)&(0.9879909923919858))))); -- 0ms;
SELECT DISTINCT COUNT((rt0.c2 IN ())) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COALESCE(rt0.c2, vt0.c0) COLLATE RTRIM FROM t0, vt0, rt0 WHERE ((((TRIM(0x7c4b4ed5)))=(((((211483162)) BETWEEN ((NULL)) AND ((x''))))))); -- 0ms;
SELECT DISTINCT ((rt0.c2)IS(rt0.c0)) COLLATE RTRIM FROM t0, vt0 WHERE (((CASE WHEN -1182241482 THEN x'2919' ELSE NULL END)>(((NULL)OR(NULL)))));SELECT DISTINCT COUNT(*) FROM vt0, t0 ORDER BY ((rt0.c1) NOTNULL) COLLATE BINARY  NULLS FIRST, (((- (t0.c40))) NOT NULL) ASC, ((((((((((((((((rt0.c2)AND(rt0.c2)))OR(t0.c40)))AND((+ (rt0.c1)))))OR((+ (rt0.c0)))))AND(1.890612413E9)))OR((rt0.c1 IN (t0.c40)))))OR(DATETIME(vt0.c0, vt0.c0, rt0.c1))))OR((((rt0.c3))<((vt0.c0))))) ASC  NULLS LAST LIMIT 2109122852;SELECT DISTINCT ((CAST(rt0.c2 AS BLOB)) NOT BETWEEN ('-574739795') AND (vt0.c0 COLLATE BINARY)), ((((((vt0.c0)OR(rt0.c0)))OR(rt0.c3)))<(vt0.c0)), SUM('-1851415714'), CASE (rt0.c1 IN (rt0.c0, t0.c40))  WHEN t0.c40 THEN (rt0.c2 IN ()) END, rt0.c1 FROM t0 WHERE (((((((0.6683217599515492)OR(NULL)))OR(x'')))>((('1206336061') NOT BETWEEN (NULL) AND (0.835136049772278)))));SELECT ALL COUNT(TRIM(DISTINCT rt0.c2, t0.c40)) OVER () FROM rt0;SELECT ALL LOWER(((rt0.c3) NOT NULL)), (~ (CAST(1.890612413E9 AS BLOB))), (((rt0.c1, rt0.c1, t0.c40, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c3) NOT NULL), (rt0.c1 IN ()), CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN 889361745 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END, (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), SUBSTR(vt0.c0, rt0.c0))) AND ((HEX(DISTINCT rt0.c0), (NOT (rt0.c1)), rtreenode(vt0.c0, rt0.c1), CASE NULL  WHEN t0.c40 THEN rt0.c3 END, CAST(rt0.c1 AS BLOB)))) FROM t0 ORDER BY ((0.612975764178102 COLLATE RTRIM)+(((((rt0.c3)AND(vt0.c0)))OR(rt0.c2))))  NULLS FIRST;SELECT ((((0.36873242404819173)OR((~ (NULL)))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))) FROM t0, rt0, vt0 WHERE (((((~ (x''))))!=((((((((((x'')AND(' 㧣g-Op\n')))AND('	!tFl ')))AND('')))AND(NULL)))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c1) AND ((((rt0.c3))>((t0.c40))))), ((rt0.c3)|(rt0.c2)) COLLATE BINARY, ((((-8.22115844E8)/(t0.c40)))/(((rt0.c3)OR(vt0.c0)))) FROM vt0, rt0, t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0, rt0, vt0 WHERE ((((((2097279133, NULL, x'')) NOT BETWEEN ((0.1952861133667959, 771489473, -1.25045673E9)) AND (('', x'', NULL))))!=('815625038'))); -- 0ms;
SELECT DISTINCT t0.c40 FROM vt0;SELECT JULIANDAY(((((((((t0.c40)OR(rt0.c2)))AND(t0.c40)))OR(rt0.c1)))AND(rt0.c0)), ((rt0.c0)IS NOT(t0.c40)), ((rt0.c0)>>(rt0.c1))), (((+ (rt0.c1)))LIKE(CAST(rt0.c3 AS TEXT))), (((((((x'')AND(vt0.c0)))AND(rt0.c0))))<>((LIKELIHOOD(DISTINCT rt0.c3, 0.021928312449317477)))), ((rt0.c2 COLLATE RTRIM)OR(((rt0.c2) IS FALSE))), ((((t0.c40) NOT NULL))<=(CAST(rt0.c3 AS TEXT))) FROM rt0, vt0;SELECT ALL ((COALESCE(DISTINCT t0.c40, rt0.c3, rt0.c2, rt0.c0)) IS TRUE) FROM vt0, t0, rt0 WHERE ((((('F ')AND(((0.4276842931795495) ISNULL))))OR((x'7b70' IN ())))); -- 0ms;
SELECT DISTINCT (CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c40 THEN rt0.c0 END IN ()), CASE WHEN ((-342614266)IS(rt0.c1)) THEN CAST(rt0.c1 AS REAL) ELSE ((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)) END, ((vt0.c0 COLLATE NOCASE)>>((t0.c40 IN ()))) FROM rt0, t0 GROUP BY ((json_valid(rt0.c2)) NOT NULL);SELECT DISTINCT ((((rt0.c2) IS TRUE)) NOT BETWEEN (CAST(t0.c40 AS REAL)) AND (((t0.c40)*('0.3319960205409612')))) FROM rt0, vt0, t0; -- 0ms;
SELECT DISTINCT 0.8352751559723848 FROM rt0, vt0, t0 WHERE ((((((((0.6891301829902877)OR(0.9587002995998132)))AND('1010646920')), json_object(x'', x'105a'), CASE -964222959  WHEN 0.9309168466116668 THEN 0.3590462481770631 ELSE '284482030' END))<=((((x'271b') NOT NULL), (((((((('-2033122095')OR(NULL)))OR(' {M梷wa')))OR(0X2750e78)))AND('-1142002629')), ((0.490505417216353)+(x''))))));SELECT DISTINCT ((((load_extension(t0.c40))OR(((rt0.c3) BETWEEN (rt0.c1) AND (vt0.c0)))))AND('wӑaZ')) FROM t0, rt0;SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS INTEGER) FROM t0 WHERE ((x'' IN ()) COLLATE NOCASE);SELECT ALL (rt0.c1 COLLATE BINARY IN (CASE WHEN rt0.c1 THEN t0.c40 END)), UNICODE(t0.c40), rt0.c1 FROM vt0;SELECT DISTINCT AVG(t0.c40) OVER ( RANGE  CURRENT ROW), ((t0.c40 COLLATE RTRIM)IS NOT('')), NULL FROM t0; -- 0ms;
SELECT ALL vt0.c0, ((((rt0.c2)AND(rt0.c2)))OR(((vt0.c0)GLOB(rt0.c1)))), (((((((((t0.c40 IN ()))AND((((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((t0.c40, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1))))))OR(rt0.c0)))OR(((rt0.c1) IS TRUE))))OR((((vt0.c0, 0.5805869175442154, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((vt0.c0, rt0.c2, vt0.c0))))), (((vt0.c0)IS(NULL)) IN ()), MIN(((0xffffffffceff81fc)*(rt0.c0))) FROM rt0, vt0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c0)<<(rt0.c3)) COLLATE RTRIM) OVER (), (+ (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))), CAST(CASE WHEN t0.c40 THEN t0.c40 ELSE rt0.c0 END AS TEXT) FROM rt0, t0;SELECT (+ ('C㇑mz')) FROM t0, rt0, vt0 WHERE (CAST(((((((((x'')OR('')))OR(0X3907f59e)))AND('-20452475')))AND('-1331789583')) AS REAL)); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (rt0.c1))) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (CAST(rt0.c0 AS REAL))) FROM rt0, vt0; -- 0ms;
SELECT (((rt0.c2 IN ())) NOTNULL) FROM vt0, rt0 WHERE ((((((((((('5')OR(x'')))AND(NULL)))AND(NULL)))OR('1447722908')))<=(CAST(0.9044026312436669 AS TEXT)))) ORDER BY ((CASE WHEN rt0.c0 THEN vt0.c0 END)=((rt0.c3 IN ()))) ASC  NULLS LAST, NULL  NULLS LAST, 0.7647953661144044  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, vt0; -- 0ms;
SELECT 'ؓa' FROM rt0, vt0, t0 WHERE (((((0xffffffff84527f9a)) NOT BETWEEN ((NULL)) AND ((''))) IN ())) ORDER BY (((NULL))<>((rt0.c3))); -- 0ms;
SELECT DISTINCT '-2074544978' FROM vt0, rt0, t0 WHERE (((((((0.8275911059251069)OR(0X4889af22)))AND(NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((0.24910382727875247)&(((('o~D09E'))!=((rt0.c1))))) FROM rt0, vt0, t0 WHERE (((TYPEOF(DISTINCT '1627614439'))<=(x''))) ORDER BY CAST((((rt0.c2))<=((vt0.c0))) AS REAL); -- 0ms;
SELECT DISTINCT CASE rt0.c3 COLLATE NOCASE  WHEN (t0.c40 IN ()) THEN CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c2 END ELSE ((t0.c40) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END FROM t0, vt0 WHERE ((TRIM('') IN ()));SELECT DISTINCT ((CAST(rt0.c3 AS REAL)) NOTNULL), vt0.c0, (((vt0.c0)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (('ID1Bmfc'))) FROM rt0, t0, vt0; -- 0ms;
SELECT CASE HEX(DISTINCT t0.c40)  WHEN ((rt0.c2)<=(vt0.c0)) THEN (- (t0.c40)) WHEN COUNT(rt0.c1) THEN (rt0.c1 IN ()) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END ELSE (((t0.c40, vt0.c0, rt0.c2, NULL, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, rt0.c1, rt0.c0, NULL)) AND ((rt0.c2, rt0.c3, rt0.c2, rt0.c0, vt0.c0))) END, NULLIF(DISTINCT (rt0.c1 IN (rt0.c3)), (NOT (rt0.c1))), (+ (((((rt0.c3)AND(rt0.c0)))OR(t0.c40)))), LOWER((~ (rt0.c1))), ((((rt0.c1)>>(rt0.c3)))|(((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)))) FROM vt0, t0, rt0 WHERE ((x'' IN ())); -- 0ms;
SELECT CASE WHEN GLOB(rt0.c0, rt0.c0) THEN CAST(t0.c40 AS BLOB) WHEN -497586207 THEN CAST(rt0.c3 AS REAL) WHEN COUNT('') THEN (vt0.c0 IN (rt0.c1)) END FROM rt0, vt0, t0 WHERE (TIME(0xfffffffffbca60ca, x'65f5', 447855025) COLLATE BINARY); -- 0ms;
