-- Time: 2024/06/06 15:34:20
-- Database: database12
-- Database version: 3.40.0
-- seed value: 2062722812
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 TEXT , c1 REAL , c2 INTEGER ); -- 1ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i62 ON t0(CASE WHEN CAST(c1 AS BLOB) THEN ((c1)AND(c0)) ELSE x'' END,((c0)&(c0 COLLATE RTRIM)) COLLATE NOCASE,(- (((((c2)OR(c1)))OR(c0)))) COLLATE BINARY ASC); -- 0ms;
UPDATE OR ABORT t0 SET c0='d厺'; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-648064070'); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT DISTINCT (((((((t0.c0)AND(t0.c2)))AND(t0.c1)), (t0.c0 IN (NULL)), ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)), MIN(t0.c0), COUNT(t0.c1)))>(((t0.c2 IN (t0.c0, t0.c2)), t0.c0, NULL, t0.c1 COLLATE RTRIM, t0.c0))) FROM t0; -- 0ms;
ANALYZE; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
UPDATE OR IGNORE rt0 SET c2='' WHERE CAST(((rt0.c0)%(rt0.c0)) AS REAL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c1) VALUES ('-648064070'); -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES (NULL), (''), ('d厺'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c1, c0) VALUES (NULL, -2001633152); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES ((((((0.1227597274226826)AND(0.5221786700868323)))OR(NULL)) IN ()), x''); -- 0ms;
VACUUM; -- 1ms;
INSERT OR FAIL INTO t0(c2, c1) VALUES ('', 0.2532970066720994); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED); -- 1ms;
UPDATE OR FAIL vt0 SET c0='-2001633152', c0=0x7a911a58, c0='2056329816'; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c2=NULL; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.1227597274226826, -2.001633152E9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('0.5221786700868323'))<((((NULL) ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c0='-2001633152' WHERE ((((0.47752681721040025)<(t1.c2))) ISNULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO t1 VALUES (0X4c3e9591, NULL, NULL), ('-648064070', '0.1227597274226826', NULL), ('1497157163', '1279169937', x''); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR ABORT t1 SET c0='fZc7*', c2='1274473300'; -- 0ms;
UPDATE OR IGNORE t1 SET c1='XZ'; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c1=0.6907461780629458 WHERE (((CASE WHEN t1.c1 THEN t1.c2 ELSE 0.321999320054679 END))=((((t1.c1)LIKE(x''))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i11 ON t1((((NOT (c0))) IS FALSE) COLLATE RTRIM ASC,((((((((((c0)OR(c2)))OR(c2)))OR(c1)))AND(c1)))-(((c0) BETWEEN (c1) AND (c0)))) COLLATE RTRIM ASC,0.2532970066720994 ASC); -- 0ms;
ANALYZE i11; -- 0ms;
REINDEX i11; -- 0ms;
REINDEX; -- 0ms;
VACUUM; -- 1ms;
UPDATE vt0 SET c0='' WHERE '-860817595'; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE t1 SET c1='0.321999320054679'; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('[D', 'DovU%%'), (0.6796948194586145, 0.39276620428412146), (NULL, 0.5247655887344311), ('r)<', NULL), ('', ''); -- 1ms;
REINDEX; -- 1ms;
REINDEX; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c0, c1)=('-648064070', 0.0023855463631359264, '8/'); -- 0ms;
UPDATE OR IGNORE t1 SET c1=695127863, c0=NULL, c1=NULL; -- 0ms;
CREATE INDEX IF NOT EXISTS i23 ON t1(-1.7976931348623157E308 COLLATE BINARY,c2 COLLATE RTRIM ASC,json_insert(((c0) NOTNULL), ((c2) IS TRUE), c2 COLLATE BINARY) COLLATE RTRIM); -- 0ms;
CREATE INDEX IF NOT EXISTS i54 ON t1((((c0 IN (c0, x''))) NOT BETWEEN (TYPEOF(c0)) AND (((c0)<<(c2)))) COLLATE RTRIM,((((c1 IN ())))<>((c2))) DESC,((c0)&(c1)) COLLATE NOCASE COLLATE BINARY COLLATE NOCASE) WHERE '-233175759'; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1, c2) VALUES (x'', NULL, ' ,T'''), (0.9649080627985054, 1.279169937E9, NULL), (0.2372928875802658, '-2001633152', NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'6620'); -- 1ms;
CREATE INDEX IF NOT EXISTS i51 ON t0(((UPPER(DISTINCT x''))<>(CAST(NULL AS REAL))),c2,LIKELY(DISTINCT rtreenode(c1, c1)) DESC) WHERE (((c2 IN ())) BETWEEN (((c2)||(c2))) AND (CAST(c1 AS NUMERIC))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i81 ON t0((- (CASE WHEN c2 THEN c2 WHEN c0 THEN NULL WHEN c0 THEN c0 END)) COLLATE BINARY DESC,CASE ((((c1)OR(c0)))OR(c2))  WHEN c1 THEN IFNULL(c0, x'') END COLLATE NOCASE DESC,NULL COLLATE NOCASE ASC) WHERE CASE WHEN c2 THEN c2 ELSE c0 END COLLATE RTRIM; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT DISTINCT CASE t0.c2  WHEN COUNT(t0.c0) THEN t0.c1 END FROM vt0, t0 WHERE ((((0.016898619626687816)>>(0xffffffffaeea79ee)) IN ())); -- 0ms;
SELECT ALL AVG((t0.c0 IN ())) OVER (), LIKELY(DISTINCT CASE WHEN 0x593cce2b THEN t0.c2 END), '-1155210236' FROM t0, vt0; -- 0ms;
SELECT ALL (- (CAST(vt0.c1 AS TEXT))), CAST(CAST(x'' AS BLOB) AS NUMERIC), (- (((t0.c0) NOTNULL))) FROM t0 WHERE (CAST(UPPER(x'9e55') AS REAL));SELECT (t0.c2 COLLATE BINARY IN ()) FROM t0, vt0 WHERE (((6.95127863E8 IN (0.321999320054679)) IN (((((0.5485863944156955)OR(x'')))AND('2056329816'))))); -- 0ms;
SELECT ALL CASE rtreenode(vt0.c1, t0.c2)  WHEN (t0.c0 IN (t0.c1, t0.c1)) THEN CAST(vt0.c1 AS REAL) ELSE ((t0.c2)*(t0.c0)) END FROM t0 GROUP BY ((t0.c1) NOT BETWEEN (t0.c1) AND (vt0.c0)) COLLATE NOCASE, 393453440, ((('-233175759')AND(vt0.c0)) IN ()) HAVING ((((((t0.c0)OR(vt0.c1)))OR(t0.c2))) NOT BETWEEN ((- (t0.c1))) AND (CASE t0.c0  WHEN t0.c2 THEN '-\r' WHEN vt0.c1 THEN t0.c1 WHEN t0.c2 THEN vt0.c0 END)) LIMIT 1461575185 OFFSET -1361057297;SELECT ALL TYPEOF(DISTINCT t0.c1) COLLATE NOCASE FROM t0, vt0 GROUP BY ((((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0))) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND ((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))), t0.c1, ((CAST('m1d[ꚎXrS' AS REAL)) IS FALSE); -- 0ms;
SELECT (NOT (t0.c2)) COLLATE NOCASE, ((t0.c0) NOT NULL) COLLATE NOCASE, MAX((t0.c0 IN ())) FROM vt0 WHERE ((- ((NOT (-1.361057297E9)))));SELECT ALL (((+ (t0.c2))) NOT BETWEEN (((((x'')AND(t0.c0)))OR(t0.c2))) AND (((((t0.c2)AND(vt0.c0)))OR(t0.c2)))) FROM vt0;SELECT ((('', t0.c2, ((((t0.c2)OR('m1d[ꚎXrq')))OR(t0.c0))))<=((((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)), '', vt0.c1 COLLATE NOCASE))) FROM t0, vt0 WHERE (((('-1837635482')) NOT BETWEEN (((- (x'')))) AND (((((x'9684', '-703682930', 1.497157163E9)) BETWEEN ((0.43420242740950366, '', NULL)) AND ((NULL, -1125593934, '393453440'))))))) GROUP BY CASE (+ (vt0.c0))  WHEN ((t0.c2)*(t0.c1)) THEN (((vt0.c0, vt0.c1, t0.c1))=((vt0.c0, vt0.c1, vt0.c1))) END; -- 0ms;
SELECT ALL ((0.45695013554391417)<>(CAST(vt0.c0 AS TEXT))) FROM vt0, t0 WHERE ('-2002167259') GROUP BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER) LIMIT -2001633152 OFFSET -538395668; -- 0ms;
SELECT (NOT (vt0.c1)) FROM vt0, t0 WHERE (((0x4c3e9591) NOT BETWEEN (CAST(NULL AS TEXT)) AND (((NULL) BETWEEN ('-1492402390') AND ('1148218923'))))); -- 1ms;
SELECT ALL (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))) IS TRUE) FROM vt0, t0; -- 0ms;
SELECT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))==((vt0.c1 IN ()))), (((- (0.016898619626687816))) ISNULL), (((CAST(t0.c1 AS BLOB), ((t0.c2)OR(t0.c1)), t0.c1, -5.38395668E8, AVG(t0.c0)))>=(((NOT (vt0.c1)), (- (vt0.c0)), ((((t0.c1)AND(t0.c2)))AND(t0.c0)), t0.c2 COLLATE BINARY, CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END))) FROM vt0;SELECT DISTINCT (((vt0.c0 IN ()))<(TOTAL(t0.c2))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) NOT NULL)) OVER () FROM vt0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY CASE vt0.c1 COLLATE RTRIM  WHEN PRINTF(t0.c1) THEN ((((((((t0.c2)AND(t0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(t0.c0)) WHEN 0.39276620428412146 THEN vt0.c0 COLLATE RTRIM WHEN ((((t0.c0)OR(vt0.c0)))AND(t0.c2)) THEN CAST(t0.c0 AS BLOB) ELSE (- (vt0.c1)) END, (+ (CAST(t0.c0 AS NUMERIC))), CAST(UPPER(DISTINCT t0.c1) AS INTEGER), (vt0.c0 IN ()), ((t0.c1) NOT NULL); -- 0ms;
SELECT JULIANDAY(vt0.c0, t0.c2, t0.c2) COLLATE BINARY, LAG((~ (((t0.c1) IS TRUE))), ((((((((((t0.c0)&(t0.c2)))AND(CHANGES())))AND(((t0.c1)+(t0.c0)))))OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(UNLIKELY(t0.c0))), ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))), 0x4bf6eb54, ((t0.c1) BETWEEN (0xffffffffdf7a6347) AND (t0.c1))))>=(((t0.c0 IN ()), CAST(t0.c0 AS TEXT), ((t0.c1) IS TRUE))))) OVER ( RANGE  UNBOUNDED PRECEDING), (NOT (((vt0.c1)+(t0.c2)))) FROM t0;SELECT DISTINCT LEAD('', RTRIM(CASE WHEN vt0.c1 THEN t0.c1 ELSE t0.c1 END), ((((t0.c0)||(vt0.c0)))+((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1)))))) OVER () FROM vt0, t0 LIMIT -1421205911 OFFSET -154712818; -- 0ms;
SELECT (- (AVG(vt0.c1))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((('-424429854') NOT NULL))+((+ (t0.c0)))), COUNT(*) OVER ( RANGE  UNBOUNDED PRECEDING), (((((t0.c2, '-1361057297', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, t0.c1)) AND ((t0.c0, vt0.c1, vt0.c0))))/(((t0.c1) ISNULL))) FROM vt0;SELECT DISTINCT CASE t0.c2  WHEN t0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY FROM vt0 WHERE ((~ (((NULL)&('1274473300')))));SELECT CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(x'' AS INTEGER) END, (((t0.c0 COLLATE RTRIM))<>((vt0.c0))), (((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)) IN ()) FROM t0 WHERE (((('%_D.xz)[{')LIKE('m1d[ꚎXrS')) IN ())) GROUP BY ((((('-648064070')OR(vt0.c1)))AND(NULL)) IN ()) HAVING (('AmP3!q5F')IS(LOWER(DISTINCT vt0.c1)));SELECT ALL ((t0.c1 IN ()) IN ((((t0.c1, NULL, vt0.c0))!=((t0.c0, t0.c1, t0.c2))))) FROM t0;SELECT DISTINCT CAST(((NULL)<(x'')) AS REAL) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (NOT (t0.c2)) FROM t0, vt0 WHERE ((((((NULL)AND('2056329816')), UNLIKELY(NULL), CASE x''  WHEN x'' THEN NULL ELSE x'' END))>(((('1461575185') NOT NULL), ((((((((x'')AND(NULL)))OR(NULL)))AND(NULL)))OR(0.3507857884449489)), (((0X12c5d026))<=((0.11194738965542894))))))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT 0.13001908173387444 FROM t0 WHERE (-951500039); -- 0ms;
SELECT DISTINCT vt0.c1, NULLIF(DISTINCT (vt0.c0 IN (-2014638077)), ((vt0.c1)>>(vt0.c1))), 0.360946984824858 FROM vt0; -- 3ms;
SELECT ((((vt0.c0)%(t0.c2))) ISNULL) FROM t0, vt0 ORDER BY (+ ((vt0.c1 IN ()))) ASC  NULLS FIRST, ((t0.c1) NOT NULL) COLLATE RTRIM, ((((t0.c2)%(vt0.c1))) NOT NULL) DESC; -- 0ms;
SELECT ALL (CASE WHEN t0.c2 THEN t0.c0 ELSE vt0.c1 END IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((vt0.c1)||(vt0.c0)) COLLATE NOCASE FROM vt0, t0 WHERE (((('523&4' IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN '2062870347' THEN TRIM(t0.c0) WHEN COALESCE(t0.c1, vt0.c1) THEN ((t0.c1) NOTNULL) WHEN (NULL IN (t0.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE vt0.c1 COLLATE RTRIM END FROM vt0, t0; -- 0ms;
SELECT CASE LTRIM('d᯵')  WHEN ((t0.c2)AND(NULL)) THEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) ELSE '' END FROM t0, vt0 WHERE ((0.1352780095700098 IN (NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL ((((((((t0.c0)AND(t0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(t0.c1)) COLLATE BINARY, ((((t0.c1)AND(vt0.c0)))>=(((((vt0.c1)AND(x'')))OR(vt0.c0)))), CAST(CASE WHEN vt0.c0 THEN t0.c2 WHEN t0.c0 THEN vt0.c1 WHEN t0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c2 THEN t0.c1 END AS REAL) FROM t0, vt0 WHERE ((((((((((NULL IN ()))AND((((0.13001908173387444, 0.5073826447801972, '')) NOT BETWEEN ((NULL, NULL, 0.0023855463631359264)) AND ((266536704, 'S*8\1*]k', x''))))))AND((~ (-233175759)))))OR((('*SX>]\n')||(0.387283423959332)))))OR(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE ((NULL) BETWEEN (vt0.c0) AND (t0.c2))  WHEN 3.9345344E8 THEN ((t0.c0)|(vt0.c0)) WHEN highlight(vt0.c0, t0.c1, t0.c2, vt0.c1) THEN TOTAL(vt0.c1) WHEN x'' THEN (t0.c0 IN ()) END, TOTAL((((vt0.c0, vt0.c0, vt0.c1))>((t0.c2, vt0.c0, t0.c0)))), ((t0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1))) AND (((t0.c1)IS(vt0.c0)))) FROM vt0, t0;SELECT DISTINCT (NOT ((((t0.c1, t0.c2, t0.c2))<((vt0.c1, vt0.c1, t0.c0))))) FROM t0 WHERE ((UPPER(DISTINCT '-1002728867') IN ()));SELECT DISTINCT '2062870347' FROM vt0, t0; -- 0ms;
SELECT CUME_DIST() OVER () FROM t0, vt0; -- 0ms;
SELECT (NOT (t0.c2)) FROM t0; -- 0ms;
SELECT (((t0.c0, vt0.c1, ((vt0.c1) BETWEEN (t0.c2) AND (t0.c2))))<>((0.4231418560240986, (vt0.c0 IN ()), UNLIKELY(DISTINCT '1661053247')))) FROM vt0;SELECT ((CAST(t0.c2 AS INTEGER))==(((t0.c1)&(x'')))), ((((vt0.c0)IS(vt0.c0))) BETWEEN (CASE WHEN t0.c0 THEN -1.421205911E9 WHEN t0.c0 THEN vt0.c1 WHEN t0.c1 THEN t0.c1 END) AND (MAX(t0.c0))), ((((t0.c2)+(t0.c1)))-(MIN(t0.c0))) FROM t0, vt0; -- 1ms;
SELECT ((vt0.c0)/(vt0.c1)) COLLATE RTRIM FROM vt0 WHERE (((((x'') NOT BETWEEN (0x2af57503) AND (0X4525594)))GLOB((']Y[n_' IN ())))) GROUP BY ((CAST(t0.c2 AS INTEGER))||(((t0.c1) NOTNULL))), (- ((vt0.c1 IN ()))), 0.25664964171589855, t0.c2, ((('{~.>')||(t0.c0)) IN ()) HAVING PRINTF(t0.c1 COLLATE NOCASE);SELECT DISTINCT t0.c0, ((((t0.c2)<>(t0.c2))) IS FALSE), ((t0.c0 COLLATE RTRIM) NOT BETWEEN (MAX(t0.c1)) AND (UNLIKELY(t0.c1))), ABS(DISTINCT '1661053247') COLLATE NOCASE, TOTAL((- (t0.c1))) FROM vt0, t0 WHERE ((((((NULL)) BETWEEN ((1.148218923E9)) AND ((NULL))))OR((~ ('Y7\'))))); -- 0ms;
SELECT ABS(DISTINCT CAST(t0.c1 AS TEXT)), CAST(((t0.c2)%(vt0.c1)) AS INTEGER), t0.c2 FROM vt0, t0 WHERE (((((((((((x'0618')OR(7.2504724E7)))OR(CASE WHEN '-867598105' THEN NULL END)))OR(((NULL)OR(x'eac84b92')))))OR(x'')))OR((((x'b0fd')) NOT BETWEEN (('-2014638077')) AND ((2073947169)))))); -- 1ms;
SELECT ALL (~ (((vt0.c0)==(0.5431930524407864)))) FROM t0 WHERE (((((('1256145842')AND(NULL)))OR(NULL)) IN ())) GROUP BY ((((((((CAST(t0.c0 AS NUMERIC))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (vt0.c1)))))AND(((x'5dd1') NOT NULL))))AND(((vt0.c0)IS(vt0.c0)))))AND(((t0.c2) NOT BETWEEN (t0.c2) AND (vt0.c0)))) HAVING ((t0.c0)%(COUNT(*)));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((t0.c1 IN ()))) AND ((CASE t0.c1  WHEN t0.c1 THEN NULL ELSE t0.c1 END))), t0.c2, (~ (CAST(x'' AS TEXT))) FROM t0, vt0; -- 0ms;
SELECT ALL ((((t0.c0 IN ()), (~ (vt0.c1)), TRIM(DISTINCT vt0.c0, t0.c2)))>((((t0.c2) BETWEEN (t0.c1) AND (t0.c2)), (+ (t0.c1)), (((t0.c1))<=((t0.c2)))))), FIRST_VALUE(((((vt0.c1)AND(CAST('1409218021' AS TEXT))))OR(((vt0.c0)<>(vt0.c0))))) OVER (), '1905753829' FROM vt0 WHERE (((((('4/') NOT NULL)))>=((CASE WHEN 0.5073826447801972 THEN 'd᯵' END)))) ORDER BY ((CAST(t0.c0 AS REAL))-(((t0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;SELECT DISTINCT ((CAST(vt0.c1 AS TEXT))!=(((t0.c1) NOTNULL))) FROM vt0, t0 WHERE ((TRIM(DISTINCT '0.47752681721040025', '-2001633152') IN ())); -- 1ms;
SELECT DISTINCT (- ((vt0.c0 IN ()))) FROM vt0 WHERE (((((((0.5770024465695646)>(0.1352780095700098)))AND((('wyRဃeJt{') ISNULL))))AND(((NULL)LIKE(0.6890590614872205))))) GROUP BY load_extension((((t0.c2, t0.c2, t0.c2)) BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((t0.c0, t0.c2, t0.c0))), 0.03438952937543749) HAVING MAX(CHAR(t0.c0, vt0.c0, vt0.c1));SELECT ALL ROW_NUMBER() OVER () FROM vt0 WHERE (COALESCE(DISTINCT (((0.2511462453351625, -1528321344, NULL, x'c12a', NULL)) BETWEEN ((0.6844889665804014, 0.16724738755070157, '-2010753992', 0.0028411854695787886, x'')) AND ((NULL, x'', 314953766, x'', NULL))), (~ (x'9b57')))); -- 0ms;
SELECT DISTINCT vt0.c0, NULL COLLATE NOCASE, (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2))))<=((x''))) FROM vt0 CROSS JOIN t0 ON CAST(CAST(t0.c1 AS REAL) AS INTEGER); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0, vt0 WHERE (((0xffffffffbce8ccb2 COLLATE BINARY) NOT BETWEEN ((NOT ('-545627321'))) AND ((((NULL, -1.002728867E9, NULL, x'', 0.3492162733423345)) NOT BETWEEN (('', 1148218923, 0.7461434883139386, '695127863', -1.54712818E8)) AND (('suWb첲D\rvB', 0.6359991185969007, ',', x'', '-867598105')))))); -- 0ms;
SELECT ALL vt0.c0, NULLIF(((t0.c1)||(t0.c1)), CASE vt0.c1  WHEN t0.c1 THEN '-233175759' WHEN t0.c1 THEN '' WHEN 0X4496f45f THEN vt0.c0 ELSE vt0.c1 END), ((((((((((t0.c0)AND(vt0.c1)))AND(t0.c1)))OR(vt0.c1)))AND(vt0.c0)))LIKE(((((vt0.c1)OR(0.6564100796824035)))AND('1497157163')))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT LEAD(CAST(LIKELY(vt0.c1) AS REAL), vt0.c0, ((vt0.c1) IS TRUE)) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT ((NULLIF(DISTINCT vt0.c1, t0.c1))>(((((((((vt0.c0)OR(vt0.c1)))OR(t0.c1)))AND(vt0.c1)))AND(t0.c2)))), ((t0.c2) BETWEEN ((((t0.c2))!=((vt0.c1)))) AND ((t0.c1 IN ()))), ((((vt0.c0) IS TRUE)) NOT NULL) FROM t0 WHERE (NULL);SELECT ALL CAST(TRIM(vt0.c1, t0.c2) AS NUMERIC), CHAR(load_extension(vt0.c1)), CASE WHEN ((vt0.c1) NOT NULL) THEN TOTAL(t0.c0) ELSE ((((vt0.c1)AND(t0.c1)))OR(vt0.c0)) END FROM t0 WHERE (0x4dbb0599 COLLATE NOCASE) LIMIT 415184979;SELECT ALL x'13ec' FROM t0, vt0 WHERE ((((x'' IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((x'')-(t0.c2))) BETWEEN (CASE WHEN vt0.c0 THEN t0.c0 END) AND (vt0.c1)), CASE WHEN x'' THEN (((('1926615220')OR(t0.c2)))AND(t0.c1)) ELSE TOTAL(t0.c2) END, ((((t0.c1)OR(vt0.c1)))AND(t0.c2)) COLLATE BINARY FROM vt0 INDEXED BY i81 WHERE (((((x'')||('1005898205')))>>(((x'')<(0.04534525668549283)))));SELECT DISTINCT (NOT ('F0')) COLLATE RTRIM, ((GROUP_CONCAT(vt0.c1)) NOT BETWEEN (((t0.c2) NOTNULL)) AND (ROUND(t0.c0, vt0.c1))), json_quote(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))) FROM t0, vt0 WHERE ((- ((- (x''))))); -- 1ms;
SELECT (- ((('')%(t0.c1)))) FROM t0 LIMIT -1540103967 OFFSET 706292673; -- 0ms;
SELECT ALL vt0.c0 FROM t0, vt0; -- 0ms;
SELECT DISTINCT AVG(TOTAL(((t0.c2)>(vt0.c0)))) FROM t0, vt0 LIMIT -1379438815;SELECT DISTINCT (+ (((t0.c2)<<(vt0.c0)))), ((((COUNT(*))AND((((0xffffffffa4e7aac0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c2, x'207f')) AND ((t0.c2, vt0.c1, t0.c1))))))AND((((t0.c0, t0.c2, vt0.c1, vt0.c0, x'')) NOT BETWEEN ((t0.c1, t0.c0, vt0.c0, t0.c0, vt0.c1)) AND ((vt0.c0, t0.c0, vt0.c0, t0.c2, t0.c1))))), ((MIN(t0.c1))%((vt0.c1 IN ()))) FROM t0;SELECT DISTINCT ((x'')|(CAST(vt0.c1 AS TEXT))), GROUP_CONCAT(((t0.c1) NOT NULL)), (((vt0.c0 IN ()))LIKE((('')>(vt0.c0)))) FROM t0, vt0 LIMIT 1150743647; -- 0ms;
SELECT ALL ((CASE WHEN t0.c1 THEN vt0.c0 END) NOT NULL), (- (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2)))), NULL FROM vt0 GROUP BY ((CAST(t0.c0 AS INTEGER))>=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) HAVING (+ (((0.709871907836794) NOT BETWEEN (t0.c2) AND (vt0.c1)))) LIMIT -342897659 OFFSET 1256145842;SELECT DISTINCT (((t0.c2, vt0.c1, t0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND ('1600467887')), vt0.c0 COLLATE NOCASE, (NOT (t0.c1)))) AND (((vt0.c0 IN (vt0.c1)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c2)), (+ (vt0.c0))))), (((((0.5546205002528671)) NOT BETWEEN (('-270652668')) AND ((t0.c2)))) NOT NULL), MAX(((t0.c0)GLOB(t0.c2))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((('r)<')+('-1969024905')) IN ((((t0.c1))>((vt0.c0))), SUM(t0.c0))) FROM t0, vt0 WHERE (((((((1334807674)>('TA^_')))AND(((0x19dceea5)<<(1304102297)))))OR((x'a6c0' IN (0.40997208600104107))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c1)IS NOT(vt0.c1)))AND(((vt0.c1) ISNULL))))OR(UNICODE(t0.c0))), vt0.c1, ((vt0.c1)AND(0.1026678580852185)) COLLATE BINARY FROM t0 WHERE ((((NULL IN ()))GLOB(load_extension(x'7d13')))) LIMIT -406951178;SELECT ALL (((((0.28566421137053444) BETWEEN (vt0.c1) AND (t0.c2))))==((vt0.c1 COLLATE NOCASE))), RANK() OVER (), ((x'') NOT BETWEEN (((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0))) AND (CASE WHEN '-19728963' THEN t0.c2 ELSE 0.9842372571930057 END)) FROM vt0 WHERE (TIME(-0.0 COLLATE RTRIM, CAST(NULL AS NUMERIC), ((NULL)+(NULL)), 0.2005998441263558 COLLATE BINARY, ((NULL) NOT BETWEEN (-2014638077) AND (x''))));SELECT DISTINCT ((((t0.c1) NOT NULL)) NOT BETWEEN (((vt0.c1)>>(vt0.c1))) AND (((vt0.c0)IS(vt0.c1)))) FROM vt0, t0 WHERE ((- (TYPEOF('')))); -- 0ms;
SELECT ALL (NOT ('')) COLLATE BINARY FROM t0, vt0 GROUP BY ((((((t0.c2)AND(t0.c0)))OR(vt0.c1))) NOT BETWEEN (((vt0.c1)OR(x'cfd3'))) AND ((((vt0.c1, vt0.c0, x'')) NOT BETWEEN ((vt0.c0, t0.c1, t0.c1)) AND ((t0.c0, vt0.c1, t0.c0))))) HAVING ((((t0.c1)>(vt0.c1)))-((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, t0.c2, t0.c2)) AND ((t0.c0, t0.c0, vt0.c0))))); -- 1ms;
SELECT DISTINCT COUNT(((vt0.c1) ISNULL)) FROM vt0 WHERE ((((NULL)) BETWEEN ((CAST(NULL AS NUMERIC))) AND (('f徑')))); -- 0ms;
SELECT (((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1)) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (~ (t0.c2)) FROM vt0, t0 WHERE (CASE CAST('킴b7\' AS TEXT)  WHEN (~ (NULL)) THEN ((759373470) NOT NULL) ELSE (NOT (NULL)) END); -- 0ms;
SELECT DISTINCT ((((((t0.c0) BETWEEN ('') AND (vt0.c0)))OR(((vt0.c0)>>(t0.c2)))))AND(TOTAL(t0.c2))) FROM vt0, t0; -- 0ms;
SELECT ((CASE t0.c1  WHEN t0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE t0.c1 END) NOTNULL), COUNT(*) FILTER(WHERE ((((vt0.c1) IS FALSE)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (TYPEOF(DISTINCT t0.c0)))) OVER (), COALESCE(DISTINCT ((vt0.c1)||(vt0.c1)), LAST_INSERT_ROWID()) FROM vt0 WHERE (((2033785369) BETWEEN ('0.1026678580852185') AND (x'')) COLLATE BINARY) LIMIT 1409218021;SELECT (((((((((- (vt0.c1)))OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)))AND((+ (vt0.c0)))))OR(((0x6301a93f) BETWEEN (t0.c0) AND (t0.c1)))), TYPEOF(DISTINCT (~ (t0.c0))), (((t0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((json_patch(t0.c2, vt0.c1)))) FROM vt0, t0; -- 0ms;
SELECT ALL ((COUNT('*')) NOTNULL), LEAD(CASE (~ (t0.c2))  WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c2) BETWEEN ('SoS<kd#''P') AND (t0.c2)) WHEN t0.c2 THEN ((t0.c1) NOTNULL) WHEN t0.c2 THEN ABS(DISTINCT t0.c0) ELSE t0.c1 COLLATE NOCASE END, t0.c2, (((t0.c1 IN ()))/(((t0.c1)AND(t0.c1))))) OVER (), ((((t0.c2) IS TRUE))%(((((vt0.c0)AND(vt0.c1)))AND(t0.c2)))) FROM t0 ORDER BY t0.c0  NULLS LAST, CAST(((vt0.c1)/(-7.0368293E8)) AS NUMERIC) DESC  NULLS FIRST;SELECT DISTINCT ((((((((((vt0.c1)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0X4e799f64))) NOT NULL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)) IN ()) FROM t0 WHERE ((((((((('2104684039' COLLATE BINARY)OR(CAST(0.9842372571930057 AS INTEGER))))AND((('sn')<('')))))AND(CAST(0.387911977056684 AS TEXT))))OR(UPPER('#H')))); -- 0ms;
SELECT ((vt0.c0 COLLATE BINARY) BETWEEN ((((t0.c0))>=((t0.c1)))) AND (CAST(vt0.c0 AS INTEGER))) FROM t0, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (- (((t0.c0)&(t0.c2)))), CUME_DIST() OVER (), CUME_DIST() OVER () FROM t0, vt0 WHERE (TRIM(DISTINCT (+ (x'')), (~ (0x5fe0c820)))) ORDER BY (- ((((t0.c0)) BETWEEN ((x'f405')) AND ((t0.c1))))) ASC; -- 0ms;
SELECT DISTINCT (CASE WHEN 0.43239541252755354 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN vt0.c0 ELSE NULL END IN ()) FROM t0, vt0; -- 1ms;
SELECT DISTINCT AVG(((((((((vt0.c1)OR(t0.c1)))OR(t0.c0)))AND('')))OR(t0.c1))) FROM t0 INNER JOIN vt0 ON ((((CAST(vt0.c0 AS INTEGER))OR(LAST_INSERT_ROWID())))AND(CAST(t0.c1 AS TEXT))) WHERE ((- ('-424429854'))); -- 0ms;
SELECT ALL CASE LOWER(t0.c0)  WHEN CAST(t0.c0 AS REAL) THEN (~ (t0.c2)) ELSE ((((vt0.c0)AND(0xfffffffff6c7450e)))OR(t0.c1)) END, ((AVG(t0.c1))|(CAST(t0.c0 AS INTEGER))), (((t0.c2)OR(t0.c0)) IN ()) FROM vt0;SELECT ALL (((t0.c2 IN ()))>((((t0.c0))>=((vt0.c1))))) FROM vt0, t0 WHERE (((0.13224647797207545) NOT BETWEEN (CAST(NULL AS REAL)) AND (((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c1)>(vt0.c1)) THEN (vt0.c1 IN (t0.c2)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN t0.c0 COLLATE RTRIM WHEN HEX(DISTINCT vt0.c0) THEN NULL ELSE STRFTIME(t0.c1, x'', t0.c2) END FROM vt0;SELECT DISTINCT CAST(SUM(vt0.c0) AS TEXT) FROM t0, vt0 WHERE ((((NULL) ISNULL) IN ())); -- 0ms;
SELECT DISTINCT (((t0.c1)) BETWEEN ((t0.c0)) AND ((1.148218923E9))) COLLATE RTRIM FROM t0 WHERE (CASE WHEN (x'' IN ()) THEN ((-1.837635482E9) NOT BETWEEN (NULL) AND (4.33909413E8)) END); -- 0ms;
SELECT (((t0.c2))>=(('1834019379'))) COLLATE NOCASE FROM t0; -- 0ms;
SELECT 0.4124471544231737 FROM t0, vt0 WHERE ((((NULL)) NOT BETWEEN ((CASE NULL  WHEN NULL THEN '1588139301' WHEN 'flᶫ֙*HBH' THEN -1.540103967E9 WHEN 'sdY58i鉝f' THEN x'6f13' END)) AND ((NULL COLLATE BINARY)))) LIMIT 1804436703 OFFSET 920712486; -- 0ms;
SELECT COUNT(((((vt0.c0)AND(t0.c2)))AND(vt0.c1))) OVER (), COUNT(*), ((((((((((t0.c2)OR(t0.c0)))OR(vt0.c0)))OR(t0.c2)))OR(t0.c2))) IS FALSE) FROM t0;SELECT ALL CAST(((t0.c0) ISNULL) AS BLOB), ((- (t0.c2)) IN (((t0.c1) ISNULL))), (((t0.c0)LIKE(x'')) IN (t0.c2 COLLATE RTRIM, LOWER(DISTINCT t0.c0))) FROM vt0 WHERE (CASE WHEN 0.3317321950234934 COLLATE BINARY THEN SQLITE_VERSION() WHEN (0.0028411854695787886 IN ()) THEN 0.6796948194586145 COLLATE RTRIM WHEN (((x'd6b7', NULL, '-545627321', 'Xz', 1.92661522E9)) NOT BETWEEN ((0.3495995049495899, 0x7fffffffffffffff, 0.7522144898804681, '!/', 0.3380624687963949)) AND ((0.24015350380594946, 0.5738770794030588, x'', NULL, '4.'))) THEN GLOB(-113508615, 'k6') WHEN ((x'')OR(0.7975891139225495)) THEN CASE x'3d40'  WHEN 0.46397366466566714 THEN '-1789687769' END WHEN CAST(-1869923045 AS INTEGER) THEN ((x'')<<(x'')) END) ORDER BY ABS(t0.c0) COLLATE BINARY ASC;SELECT DISTINCT (~ (((t0.c2)==(vt0.c0)))), ((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c2)>(t0.c2))) AND ((vt0.c1 IN (vt0.c1)))), (- (t0.c2)), CAST(LIKELY(DISTINCT t0.c1) AS BLOB), COALESCE(DISTINCT CASE vt0.c0  WHEN t0.c1 THEN vt0.c1 END, (t0.c0 IN ())) FROM t0 WHERE ((x'' COLLATE BINARY IN ()));SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN ((t0.c0) NOT NULL) END FROM vt0 WHERE (((CASE '-2084463350'  WHEN 0X53dc8dd6 THEN 0.7882009203362189 ELSE 1.256145842E9 END)%(((0.43420242740950366) BETWEEN (0.7864125217704582) AND (x'eda9')))));SELECT ALL PRINTF(((t0.c0)IS(t0.c2))) FROM vt0 NOT INDEXED, t0 WHERE (CAST('-1155210236' COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT DISTINCT t0.c1 FROM vt0, t0; -- 0ms;
SELECT ALL CAST(((NULL)OR(t0.c1)) AS INTEGER) FROM t0, vt0 WHERE (((((((((((((((((7.2504724E7)OR(2.056329816E9)))AND(0Xfffffffff9564033)))AND(((x'') NOT BETWEEN (x'29cede5e') AND ('p%')))))OR(CASE WHEN x'' THEN NULL END)))OR((NULL IN ()))))AND((~ (0.6851915829684794)))))AND((NOT (0Xfffffffffa7824cf)))))AND(((((NULL)AND('1410743892')))AND(x'9f3e'))))); -- 0ms;
SELECT (~ (((((vt0.c1)AND(vt0.c0)))OR(t0.c0)))), (NOT (IFNULL(DISTINCT t0.c0, vt0.c0))), x'' FROM vt0 WHERE (x'');SELECT DISTINCT vt0.c0, HEX(DISTINCT ((t0.c0)-(vt0.c0))), ((vt0.c0 COLLATE BINARY)<=(SUM(vt0.c0))) FROM t0, vt0; -- 1ms;
SELECT ALL 0xffffffff9eff481a FROM vt0, t0 WHERE (CAST(CAST(0.6011910606835915 AS REAL) AS REAL)); -- 0ms;
SELECT DISTINCT (NOT (((t0.c1) BETWEEN (t0.c0) AND (t0.c2)))), CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), (((((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c1))))LIKE(AVG(vt0.c1))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT COUNT(*) COLLATE NOCASE FROM vt0 WHERE (CAST(((x'')-('-1781612266')) AS NUMERIC)); -- 0ms;
SELECT ((TOTAL(t0.c2)) BETWEEN (((vt0.c1) NOT BETWEEN (t0.c1) AND (1.461575185E9))) AND (((((t0.c0)AND(vt0.c1)))AND(t0.c2)))), CASE ((vt0.c1)||(vt0.c0))  WHEN (NOT (vt0.c0)) THEN TRIM(DISTINCT '1056202555') END, ((vt0.c0 COLLATE NOCASE)IS((((t0.c1, t0.c2, vt0.c1))>=((vt0.c1, vt0.c1, 'Nda܀dk*2'))))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((COALESCE(t0.c0, vt0.c0))>=(((t0.c1) ISNULL))) FROM t0, vt0 GROUP BY (((t0.c1)GLOB(t0.c0)) IN ()) HAVING (NOT (LTRIM(t0.c1, vt0.c0))) LIMIT -2001633152 OFFSET 1926615220; -- 1ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY (+ (((vt0.c0)+(t0.c2)))) ASC) FROM t0 WHERE (((((0xffffffff841e72ba)||(x'd1c0d3b6')))||(load_extension(x'0e68'))));SELECT DISTINCT (- (((((t0.c2)OR(0.6466057933417825)))AND(t0.c2)))), (((NOT (vt0.c0))) NOT BETWEEN (((((t0.c0)OR(NULL)))OR(t0.c1))) AND (vt0.c0)), SUM(0xffffffff9eff481a) COLLATE NOCASE FROM vt0, t0 WHERE ((((LIKELIHOOD(0.9766700812953658, 0.5873902277820742)))!=((((x'020a')-(NULL)))))); -- 0ms;
SELECT DISTINCT CASE WHEN SUM(vt0.c1) THEN ((((t0.c2)AND(vt0.c0)))OR(t0.c2)) END, ((CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE '996158284' END)<=(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0)))), CAST((~ (t0.c0)) AS REAL) FROM vt0, t0; -- 0ms;
SELECT COUNT(((((t0.c0)OR(vt0.c1)))OR(t0.c2))) FROM t0 GROUP BY ((vt0.c1)IS NOT(t0.c0)) COLLATE NOCASE, CASE WHEN ((((t0.c2)OR(t0.c0)))AND(t0.c0)) THEN (((t0.c1, t0.c1, t0.c0))==(('r)<', t0.c1, t0.c2))) ELSE t0.c2 COLLATE NOCASE END, ((NULL) IS FALSE) HAVING ((UNLIKELY(t0.c2)) NOTNULL);SELECT ALL (CAST(vt0.c0 AS NUMERIC) IN ()) FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0, vt0; -- 1ms;
SELECT ALL CAST(vt0.c0 AS TEXT) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT AVG((- (t0.c1))), ((((t0.c0) BETWEEN (vt0.c1) AND (t0.c2)))|(CAST(t0.c2 AS INTEGER))), (- (COUNT(t0.c2))) FROM vt0 WHERE (((((((NULL)OR(x'')))AND(x''))) BETWEEN (((NULL) IS TRUE)) AND (NULL COLLATE BINARY))) ORDER BY NULLIF((((t0.c1, t0.c0, vt0.c1))<((t0.c2, vt0.c0, vt0.c0))), ((vt0.c1)IS(vt0.c0)))  NULLS LAST, CASE 'gꇬ'  WHEN t0.c0 COLLATE BINARY THEN (NOT (vt0.c1)) ELSE ((t0.c1) BETWEEN (NULL) AND (t0.c2)) END DESC;SELECT ALL CASE ((vt0.c1)|(vt0.c1))  WHEN TOTAL(t0.c2) THEN (vt0.c0 IN ()) WHEN ((t0.c2)+(t0.c1)) THEN t0.c2 WHEN ((0.9542310779664953) BETWEEN (x'') AND (vt0.c0)) THEN t0.c0 COLLATE NOCASE ELSE vt0.c0 END FROM vt0 WHERE ((((CAST(0X2187de87 AS BLOB)))>=((UNLIKELY(DISTINCT x'')))));SELECT ((((vt0.c1)==(vt0.c0)))%((NOT (t0.c1)))) FROM vt0 WHERE ((('%w*㌄%^' COLLATE NOCASE) NOT BETWEEN (((((((((0.47752681721040025)OR(x'')))OR('ꂦoWH댞/1')))AND('-800427764')))AND(x''))) AND ((('L,厺0UZ') NOT BETWEEN ('[*hL焌Lm8') AND (NULL))))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))AND(NULL)))>=(((t0.c1)==(t0.c0))))  NULLS LAST, (~ (((t0.c1) NOT BETWEEN (t0.c1) AND (vt0.c0)))) ASC;SELECT DISTINCT (((((((((t0.c0 IN (vt0.c0, vt0.c1)))OR(t0.c2 COLLATE BINARY)))AND(((((vt0.c1)AND(t0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN t0.c1 ELSE t0.c0 END)))OR((((t0.c2, NULL, t0.c2))<>((t0.c0, 'amp3!q5f', vt0.c1))))), MIN(((t0.c0) IS FALSE)), t0.c1 FROM t0, vt0 WHERE ((((((x''))<=((NULL)))) BETWEEN (((NULL)IS NOT(0.6890590614872205))) AND (0.08829216518189287 COLLATE BINARY))) ORDER BY ((((t0.c0) IS TRUE))<=(t0.c1)); -- 0ms;
SELECT DISTINCT ((t0.c1 COLLATE RTRIM) BETWEEN (x'') AND (((t0.c0)LIKE(t0.c2)))) FROM vt0;SELECT DISTINCT ((+ (t0.c1)) IN (0xffffffffccb0f745, t0.c2)), COUNT(((t0.c0) NOT NULL)) OVER (), '' FROM vt0 WHERE (((((('2104684039') IS FALSE)))<(((('-157837798')+('0.28566421137053444'))))));SELECT DISTINCT TRIM((((t0.c1, t0.c2, t0.c0)) BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c1, vt0.c0, vt0.c0)))) FROM t0 WHERE (((((((((0.8274226707401786)OR(((('662502894', x'', x'', 't6', x''))>=((393453440, NULL, NULL, x'', x'd191'))))))OR(((((x'')AND(NULL)))OR(NULL)))))AND(((NULL)LIKE('B#X')))))OR(NULL)));SELECT DISTINCT t0.c1 FROM t0, vt0 WHERE ((((NOT (0.07366203611758448)))>>((((x'6db6')) NOT BETWEEN (('_')) AND (('')))))); -- 0ms;
SELECT ALL ((((vt0.c0) IS FALSE))==((- (t0.c0)))) FROM t0;SELECT DISTINCT FIRST_VALUE(((((t0.c2)&(t0.c0)))<>(((t0.c2)>=(t0.c2))))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c1) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c1 COLLATE BINARY) BETWEEN (((((((((t0.c2)OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0)))AND(vt0.c1))) AND ((~ (t0.c1)))), x'', (((t0.c1, vt0.c0, t0.c2)) NOT BETWEEN ((vt0.c1, vt0.c0, NULL)) AND ((t0.c0, vt0.c0, t0.c1))) COLLATE BINARY FROM vt0, t0 GROUP BY (IFNULL(DISTINCT vt0.c1, vt0.c0) IN ()), (((CASE vt0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 END))=((((t0.c2)>=(vt0.c1))))), (+ (CASE t0.c2  WHEN t0.c0 THEN NULL ELSE t0.c2 END)); -- 1ms;
SELECT DISTINCT (((t0.c2, x'3080', vt0.c1, t0.c1, 'I')) NOT BETWEEN ((((t0.c1) NOTNULL), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN '*' THEN t0.c2 WHEN vt0.c1 THEN vt0.c1 END, vt0.c0, vt0.c0, (((x'', '1琨#3,{s7Y', t0.c0, t0.c2, t0.c1)) NOT BETWEEN ((0.6874834617542004, t0.c0, t0.c2, vt0.c1, t0.c2)) AND ((vt0.c0, vt0.c0, vt0.c1, x'', t0.c0))))) AND ((CAST(vt0.c0 AS REAL), (((vt0.c1))==((t0.c0))), ((t0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)AND(t0.c2)), vt0.c1 COLLATE NOCASE))), AVG((NOT (t0.c0))) OVER ( GROUPS  UNBOUNDED PRECEDING), DENSE_RANK() OVER () FROM vt0 WHERE (CAST(((('1722583475', NULL, 0.2363833329623798, x'', 2109115725)) NOT BETWEEN ((NULL, NULL, x'', x'', -1.9728963E7)) AND (('\6*vX+hw_', 0xffffffffa25ff101, '', 0.6111993676831972, '-233175759'))) AS TEXT));SELECT CASE HEX(vt0.c1)  WHEN CAST('920712486' AS INTEGER) THEN (t0.c0 IN (t0.c0)) WHEN (vt0.c1 IN ()) THEN ((t0.c2)-(t0.c1)) WHEN ((vt0.c0) ISNULL) THEN (((vt0.c0))==((t0.c0))) END, vt0.c1, t0.c1, CASE WHEN ((((((((NULL)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c1)))AND(vt0.c1)) THEN t0.c0 WHEN ((vt0.c1) BETWEEN (t0.c1) AND (vt0.c1)) THEN (((t0.c2))<((vt0.c1))) WHEN (((t0.c2))<>((t0.c0))) THEN ((t0.c2)&(t0.c1)) END, SQLITE_COMPILEOPTION_GET(vt0.c1) FROM t0;SELECT DISTINCT '暇%' FROM t0, vt0 WHERE ((((((('')OR(x'')))OR('DovU%%'))) NOT NULL)); -- 0ms;
SELECT ALL t0.c1, ((((0.20379598274363342) IS TRUE))IS((t0.c2 IN ()))), CAST(((((t0.c2)OR(t0.c0)))AND(t0.c1)) AS INTEGER) FROM t0; -- 0ms;
SELECT ALL ((((t0.c0) BETWEEN (t0.c1) AND (t0.c2))) ISNULL) FROM vt0, t0; -- 0ms;
SELECT TOTAL(vt0.c1) OVER () FROM vt0 WHERE ((TRIM(DISTINCT NULL, '-1792562576') IN ())) ORDER BY CAST(MAX(vt0.c0, t0.c0) AS REAL)  NULLS FIRST;SELECT ALL LAG(UNICODE(vt0.c0 COLLATE BINARY), ((CAST(0xffffffffdfe8bbec AS INTEGER))-((vt0.c0 IN (vt0.c0)))), (~ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) OVER ( ORDER BY (+ (((t0.c2) IS TRUE))) DESC), ((((vt0.c1, vt0.c0, 1.304102297E9, vt0.c1, vt0.c0, '0.709871907836794', t0.c1))<=((vt0.c1, t0.c1, '>Tp', x'4b37', t0.c2, t0.c1, 'E6Y6&'))) IN ()), MAX(((t0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0;SELECT LOWER(DISTINCT CAST(vt0.c0 AS TEXT)) FROM t0, vt0; -- 0ms;
SELECT GROUP_CONCAT(((((t0.c0)OR(t0.c1)))OR(t0.c2))) OVER (), (((((((t0.c0)OR(t0.c2)))OR(vt0.c1))))>=((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))))), QUOTE(((t0.c2) NOT NULL)) FROM t0 WHERE ((- (((NULL) ISNULL))));SELECT DISTINCT ((((t0.c2) NOTNULL))=(((((t0.c1)AND(t0.c2)))AND(vt0.c0)))) FROM vt0, t0 WHERE ((((NOT (0.7605923069355277)))AND(((0.0)<=(x''))))); -- 0ms;
SELECT DISTINCT t0.c2 FROM t0 WHERE ((CAST('266536704' AS REAL) IN ())) GROUP BY ((((t0.c2)IS NOT(t0.c0))) NOT BETWEEN ((((vt0.c0))<((vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND ('-429537350')))), CASE t0.c0 COLLATE BINARY  WHEN ((vt0.c0)IS(NULL)) THEN t0.c1 END, ((((vt0.c0)>=(vt0.c1)))<=(CAST(vt0.c0 AS NUMERIC)));SELECT DISTINCT ((((((t0.c1)AND(t0.c2)))OR(vt0.c1))) NOT BETWEEN (LIKELY(DISTINCT vt0.c1)) AND (((vt0.c1) BETWEEN (-1.781612266E9) AND (t0.c1)))) FROM t0 LIMIT 393453440;SELECT DISTINCT NULL FROM vt0 WHERE (((((NULL) NOT BETWEEN (x'20c8') AND (0.5554884590900375)))>>(((x'')<=('0.0028411854695787886'))))); -- 0ms;
SELECT ALL ((CAST(t0.c1 AS INTEGER))>(((t0.c1)LIKE(t0.c1)))), (((t0.c0) ISNULL) IN (NULL)), ((((((vt0.c0))==((vt0.c0)))))<((''))), CAST(CAST(t0.c2 AS INTEGER) AS NUMERIC), ((((0x34758a7e COLLATE NOCASE)AND(((t0.c1)IS NOT(vt0.c1)))))OR((+ (t0.c2)))) FROM vt0;SELECT ALL ((((((((t0.c1)OR(((((t0.c2)AND(t0.c2)))OR(t0.c2)))))AND(UNLIKELY(vt0.c1))))OR(((((t0.c1)OR(t0.c1)))AND(vt0.c0)))))AND(((t0.c2) NOT BETWEEN ('0.1352780095700098') AND (vt0.c0)))) FROM vt0, t0 WHERE (CASE CASE ''  WHEN x'' THEN '-860817595' ELSE '' END  WHEN CASE x''  WHEN 0.8932005483569245 THEN NULL ELSE '1855678384' END THEN CASE '-2084463350'  WHEN 0.26594824491168745 THEN '-1379438815' WHEN x'' THEN '|L*1e500000D9#' WHEN 0xffffffffe6f94b73 THEN x'' END END); -- 0ms;
SELECT DISTINCT ((((t0.c2)-(t0.c0)))AND((((t0.c0))<((t0.c0))))), 1966402612, CAST((((NULL))>=((vt0.c1))) AS BLOB) FROM vt0 WHERE (6.62502894E8);SELECT DISTINCT CASE WHEN COUNT(t0.c0) THEN (((t0.c1)) BETWEEN (('825597544')) AND ((vt0.c1))) END FROM t0, vt0; -- 0ms;
SELECT DISTINCT highlight((t0.c0 IN (t0.c1)), ((t0.c0)&(t0.c2)), NULL, (t0.c1 IN ())) FROM vt0, t0 LIMIT -231161427 OFFSET 193288465;SELECT ALL NTH_VALUE(((((t0.c0)>(t0.c2))) ISNULL), (((t0.c2 IN (t0.c2))) BETWEEN (((t0.c2)IS NOT(t0.c0))) AND ((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((0.23778293422386299)))))) OVER () FROM t0 WHERE (((((0.3143748526729764) BETWEEN ('2073947169') AND (0.16724738755070157)))<(('\r?*iE''3' IN ('', -1768949200))))) GROUP BY ((((((t0.c2)AND(t0.c2)))OR(vt0.c0))) IS FALSE), ((t0.c1 COLLATE RTRIM)|((vt0.c0 IN (vt0.c1)))), (+ (t0.c2)) HAVING TOTAL_CHANGES();SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t0.c0) AND ('0.1227597274226826')))<(((t0.c2) ISNULL))) FROM t0, vt0 WHERE (((((NULL)<(NULL))) ISNULL)) ORDER BY ((((t0.c0) IS FALSE))<=(((t0.c0) ISNULL))) ASC  NULLS LAST; -- 1ms;
SELECT (x'' IN (COUNT(*))) FROM vt0 WHERE ((((NOT ('-1627437030'))) ISNULL)); -- 0ms;
SELECT ALL ((UNICODE(vt0.c1))&(((-1.969024905E9) NOT NULL))) FROM vt0 CROSS JOIN t0 ON (+ (((vt0.c1) BETWEEN (t0.c1) AND (t0.c0)))) ORDER BY ((((t0.c0) NOT NULL))-(((vt0.c1) ISNULL))) ASC, (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END IN (((t0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)), (((vt0.c0))<=((t0.c0)))))  NULLS LAST, ((((t0.c2)IS(vt0.c1))) IS TRUE) DESC  NULLS FIRST LIMIT 1726050072; -- 0ms;
SELECT DISTINCT ((+ (t0.c0)) IN ()), ((((t0.c0 COLLATE NOCASE)AND(((t0.c1)LIKE(t0.c2)))))OR('-432471143')), IFNULL(vt0.c1, (('1422496413')-(t0.c0))) FROM vt0 LIMIT -2040647906 OFFSET -1863349849;SELECT HEX(CASE WHEN vt0.c1 THEN vt0.c0 END), ((((vt0.c1)<=(t0.c1))) NOT NULL), ((((((((t0.c2)AND(t0.c2)))OR(t0.c1)))OR(t0.c2)))OR(vt0.c1)) COLLATE NOCASE FROM t0, vt0; -- 0ms;
SELECT 0Xffffffffe665c7ba, (((t0.c0)OR(t0.c0)) IN ()), (((~ (t0.c1))) NOT BETWEEN (IFNULL(t0.c0, vt0.c0)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))) FROM t0, vt0; -- 0ms;
SELECT TOTAL((~ (vt0.c1))) OVER ( ORDER BY CAST(vt0.c0 AS REAL) COLLATE NOCASE) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((t0.c0)>(t0.c0))) NOT BETWEEN ((+ (vt0.c1))) AND (((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) FROM t0;SELECT COUNT(((vt0.c0)>(vt0.c1))) OVER () FROM t0 WHERE ('');SELECT ALL ((CASE vt0.c1  WHEN t0.c2 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '-342897659' ELSE t0.c1 END)OR((((x''))!=((t0.c1))))) FROM t0 WHERE (json_array(0.9280371741996785, x'', x'', 977807569) COLLATE RTRIM);SELECT ALL (((((((t0.c0)OR(t0.c2)))OR(t0.c2))))!=((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0))))), ((((vt0.c1)=(vt0.c0))) BETWEEN (TRIM(vt0.c1, t0.c1)) AND (CAST(t0.c1 AS INTEGER))), (((LIKELY(DISTINCT t0.c1)))<>((((t0.c1)IS NOT(vt0.c1))))) FROM t0, vt0 WHERE ((((('Nps\\沦6') ISNULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT -545627321, (((t0.c0))<((((vt0.c1) BETWEEN (t0.c1) AND (t0.c1))))), ((((t0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS BLOB))))OR((t0.c1 IN ()))), ((((((((SUM(t0.c0))OR((+ (t0.c2)))))AND((('-1421205911') NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR((+ (vt0.c0)))))AND(INSTR(t0.c0, t0.c2))), LAG(CAST(NULL AS REAL), ((t0.c2) IS TRUE) COLLATE NOCASE, ((((-1754626663)AND(t0.c0)))OR(t0.c2)) COLLATE RTRIM) OVER () FROM vt0, t0 WHERE ((((+ (NULL)))AND(((0.8038991400793417) NOT BETWEEN ('C]xK{{E') AND (0.5874986028616404))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT COUNT(((vt0.c0) IS TRUE)) FROM vt0, t0 WHERE (TYPEOF(DISTINCT ((NULL) IS FALSE))) GROUP BY (((t0.c1 IN ())) NOT NULL) HAVING COUNT(*) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, t0; -- 0ms;
SELECT ((CAST(t0.c1 AS REAL))AND((t0.c0 IN ()))), (((((t0.c1, t0.c0, vt0.c0))<>((t0.c2, x'', t0.c1)))) IS FALSE), ((t0.c0)>(t0.c0)) COLLATE RTRIM FROM vt0, t0 GROUP BY (((json(t0.c2), ((vt0.c1)|(t0.c0)), ((t0.c1)LIKE(t0.c1))))>((LIKELIHOOD(DISTINCT t0.c1, 0.5681821573934187), ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()))));SELECT DISTINCT (((+ (vt0.c1))) IS TRUE) FROM vt0 WHERE (((CAST(NULL AS NUMERIC))>(((0.5316966843078876)*(0xffffffff938da436))))); -- 0ms;
SELECT DISTINCT AVG(((t0.c0)<=(vt0.c1))) OVER ( ORDER BY (t0.c1 IN (((vt0.c0) NOTNULL), 'E뭉*HnR'))  NULLS FIRST) FROM t0, vt0 LIMIT 433909413 OFFSET -1360294594; -- 0ms;
SELECT DISTINCT COUNT(t0.c0) FROM vt0 WHERE ((((- (x'2abd')))*(CAST('詾琨[' AS NUMERIC)))) LIMIT 677210709 OFFSET 2001652080;SELECT DISTINCT (((t0.c1)) BETWEEN ((((vt0.c0)>=(t0.c1)))) AND ((AVG(t0.c1)))) FROM t0, vt0 WHERE (CAST((2071716546 IN ()) AS NUMERIC)); -- 1ms;
SELECT DISTINCT NTILE(CASE WHEN x'' THEN CAST(vt0.c0 AS INTEGER) ELSE GLOB(vt0.c0, vt0.c1) END) OVER (), COUNT(((t0.c1)=(NULL)) COLLATE NOCASE) OVER (), ((INSTR(t0.c2, t0.c2))-(TYPEOF(DISTINCT t0.c2))) FROM t0, vt0 GROUP BY ((CASE t0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE t0.c1 END) BETWEEN (((vt0.c0)GLOB(t0.c2))) AND (x'')) HAVING (((x'')) NOT BETWEEN (((+ (t0.c2)))) AND ((((((((((t0.c2)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c2))))); -- 0ms;
SELECT ALL COUNT('-1155210236') COLLATE RTRIM FROM t0, vt0 NOT INDEXED WHERE ((((((NULL)OR(0.9649080627985054)))OR(x'')) IN ((((x'2d53'))!=(('-2002167259'))), CAST('-1575878496' AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((NULL)<<(((t0.c1) IS FALSE))), CASE WHEN (0.06276229366982222 IN ()) THEN ((t0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)) END, RANK() OVER () FROM vt0 WHERE (((((0.07136092944422623) NOT BETWEEN (0.4231251145230973) AND ('1089271161'))) ISNULL));SELECT DISTINCT CASE CASE WHEN t0.c0 THEN t0.c1 WHEN vt0.c1 THEN t0.c2 WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 ELSE '-1540103967' END  WHEN t0.c2 COLLATE BINARY THEN -304713919 WHEN ((((t0.c2)AND(t0.c0)))OR(t0.c2)) THEN MAX(vt0.c0) WHEN CAST(t0.c0 AS BLOB) THEN (vt0.c0 IN (t0.c2)) ELSE t0.c2 END FROM t0, vt0 WHERE ((+ (((0.07549747098668291)&(x''))))) GROUP BY CASE (vt0.c0 IN ())  WHEN t0.c0 THEN ((t0.c1)LIKE(0.9971806325289916)) WHEN ((((t0.c0)AND(t0.c1)))AND(vt0.c0)) THEN ((t0.c2)|(vt0.c0)) WHEN (+ (t0.c2)) THEN ((((t0.c1)AND(vt0.c0)))AND(vt0.c0)) END, ((vt0.c0) NOTNULL) COLLATE RTRIM, (('1622023157') IS TRUE); -- 0ms;
SELECT DISTINCT ((((((t0.c1) IS FALSE))AND(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0)))))AND(((t0.c1)AND(vt0.c0)))), ((((t0.c2 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB))))AND((vt0.c1 IN ()))), ((t0.c2) NOT BETWEEN (SUM(vt0.c1)) AND (CASE WHEN vt0.c0 THEN t0.c1 ELSE vt0.c0 END)) FROM vt0;SELECT DISTINCT SUM(CAST(vt0.c0 AS BLOB)) OVER (), (((CAST(t0.c2 AS NUMERIC), t0.c1, ((t0.c0)||(t0.c1))))>=((COUNT(*), ((((t0.c1)AND(vt0.c0)))OR(t0.c1)), t0.c0 COLLATE BINARY))), (vt0.c0 IN (TOTAL(t0.c0))) FROM vt0 ORDER BY (((~ (t0.c0))) IS FALSE) DESC  NULLS LAST;SELECT ALL ((0.30933140993105557)LIKE(CAST(t0.c0 AS TEXT))), ((COUNT(*)) ISNULL), ((IFNULL(DISTINCT vt0.c0, vt0.c0))IS(vt0.c0 COLLATE NOCASE)) FROM t0, vt0 WHERE (((((((((((((((NULL)OR(x'9b06')))OR(0.8942286310108309)))AND(x'')))OR(0.0200684439522002)))OR(x'6ba5')))OR('a,&SbOA')))%(((0.40997208600104107)*('242228651'))))) LIMIT 869115644; -- 0ms;
SELECT DISTINCT (- (((((((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(t0.c1)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('1409218021') BETWEEN (vt0.c0) AND (t0.c1))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NOT (t0.c0))) OVER (), (((((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) BETWEEN ((((t0.c1, t0.c1, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (0x277cfdee) AND (t0.c1)))), (NOT (SUM(t0.c0))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT LOWER(t0.c0), (((((vt0.c1, vt0.c0, t0.c2))<(('-1792562576', t0.c2, t0.c1))))<<(((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)))), ((AVG(vt0.c1))*(((t0.c1) BETWEEN (t0.c0) AND (vt0.c0)))) FROM t0, vt0; -- 0ms;
SELECT NULL, CAST(((t0.c2)&(t0.c1)) AS TEXT), -630556518 FROM t0 GROUP BY CAST((t0.c1 IN ()) AS INTEGER) HAVING ((((((vt0.c1)AND(NULL)))AND(t0.c1)))LIKE((((vt0.c0)) BETWEEN ((NULL)) AND ((t0.c1))))) LIMIT 1318171271;SELECT DISTINCT vt0.c1, (((((t0.c2))>=((t0.c0))))IS((- (t0.c0)))), ((((((((((vt0.c1)LIKE(t0.c0)))AND(((t0.c0)|(vt0.c0)))))OR(COALESCE(t0.c1, t0.c2))))OR((+ (t0.c0)))))AND(LENGTH(t0.c1))) FROM t0 WHERE (CAST(((('1979536183', 0.8706291576626434, x'887f', '-538395668', NULL)) NOT BETWEEN (('-1789687769', 0.5770024465695646, 1316571148, x'', NULL)) AND ((NULL, x'', x'', 0.5770024465695646, x'e3c9'))) AS TEXT)) GROUP BY t0.c1, ((((NULL)>=(vt0.c0))) IS FALSE), (~ (((t0.c0) IS FALSE))) HAVING (((((t0.c2) ISNULL)))>=((CASE t0.c1  WHEN t0.c2 THEN vt0.c1 WHEN 0X2e1b6d41 THEN t0.c2 WHEN t0.c1 THEN '-703682930' END)));SELECT DISTINCT (- (t0.c2 COLLATE NOCASE)), (((t0.c0 IN ())) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((vt0.c1 IN ()))), DENSE_RANK() OVER ( ORDER BY CASE ((x'')IS NOT(t0.c0))  WHEN ((((t0.c2)AND(t0.c2)))OR(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c1))) ELSE ((t0.c2)AND(t0.c2)) END DESC) FROM t0, vt0 WHERE (NULL); -- 0ms;
SELECT COUNT(*) COLLATE RTRIM, CAST(COUNT(vt0.c1) AS NUMERIC), (((t0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c0))) AND (((+ (vt0.c1))))) FROM vt0 WHERE (((CAST('' AS BLOB)) NOT BETWEEN (((NULL) BETWEEN ('o(') AND (0.46397366466566714))) AND (((((0.32593975289346167)OR(NULL)))AND(266536704)))));SELECT ALL (NOT (t0.c2)) COLLATE RTRIM, ((((t0.c1) NOT BETWEEN (t0.c1) AND (vt0.c1)))&(CAST(vt0.c1 AS TEXT))), ((((t0.c1)>>(t0.c1)))||(vt0.c0)) FROM vt0 WHERE ((x'' IN ()) COLLATE BINARY) GROUP BY t0.c1, ((t0.c2 COLLATE RTRIM)||(CAST(t0.c0 AS INTEGER))), CAST(t0.c1 COLLATE BINARY AS NUMERIC) HAVING (CASE vt0.c1  WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END IN ());SELECT DISTINCT TRIM(((((t0.c2)AND(NULL)))OR(t0.c0)), ((((((((vt0.c1)AND(t0.c2)))AND(t0.c1)))OR(t0.c1)))AND(t0.c0))), (~ (t0.c0)) COLLATE RTRIM, COUNT(*) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((((((t0.c0) BETWEEN (t0.c2) AND (vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((t0.c2) ISNULL))))OR(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))))OR((vt0.c1 IN ()))), ((((t0.c1)|(vt0.c0)))!=(((t0.c1) NOTNULL)))) OVER () FROM vt0, t0 WHERE (((((SQLITE_COMPILEOPTION_GET('-1492402390'))AND(((NULL)*('1905753829')))))OR(CASE x''  WHEN '1575723500' THEN x'' ELSE 0.8982199790642386 END)));SELECT DISTINCT ((COUNT(*)) IS FALSE) FROM t0 WHERE ((~ ((('196449334')==(x''))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c1))|(((vt0.c1) BETWEEN (t0.c1) AND (vt0.c1)))) FROM vt0, t0 WHERE ((((+ (0.9373684256688553)))%(CAST(x'' AS TEXT)))); -- 0ms;
SELECT MAX((t0.c1 IN (vt0.c1, t0.c2))), vt0.c0, CAST(t0.c0 COLLATE BINARY AS REAL) FROM vt0, t0; -- 0ms;
SELECT DISTINCT SUM(((t0.c0) NOT NULL)) OVER (), ((vt0.c1 COLLATE NOCASE) NOTNULL), SUBSTR('0.5485863944156955', COALESCE(vt0.c0, t0.c1)), (+ (vt0.c1)), ((((((vt0.c1)AND(vt0.c0)))OR(t0.c0))) ISNULL) FROM t0;SELECT ((((((((CASE WHEN t0.c2 THEN 0X7db68d4d END)AND(((vt0.c0)<=(t0.c2)))))AND(NULL)))OR(x'')))AND(LIKE(vt0.c1, vt0.c1))) FROM t0, vt0; -- 0ms;
SELECT COUNT((vt0.c1 IN (t0.c2)) COLLATE NOCASE) OVER ( ORDER BY x'', CAST(((t0.c2)>(t0.c0)) AS TEXT) ASC) FROM vt0;SELECT DISTINCT t0.c2, LAG(CASE WHEN t0.c0 COLLATE BINARY THEN (t0.c0 IN (t0.c0, t0.c1)) WHEN ((t0.c0) IS FALSE) THEN (~ (t0.c0)) WHEN ((t0.c0)<<(t0.c1)) THEN '-1656102311' ELSE '-1535496252' END, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0))) IS FALSE), ((t0.c0)>(t0.c1))) OVER (), ((t0.c0) BETWEEN (t0.c2) AND (vt0.c0)) COLLATE BINARY FROM t0 WHERE (((((x'8e82') IS TRUE)) NOT BETWEEN ((('-1384860495')<>(''))) AND ((('-111787981') BETWEEN (0Xc6332e3) AND (1999124802))))) GROUP BY (NOT (((('-994807792')) BETWEEN ((t0.c2)) AND ((vt0.c1)))));SELECT ((vt0.c1 COLLATE BINARY) NOTNULL) FROM t0 INNER JOIN vt0 ON ((x'')>(CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)); -- 0ms;
SELECT DISTINCT (((t0.c2)>(t0.c2)) IN ()) FROM t0 WHERE ((TYPEOF(DISTINCT x'2950') IN ())) LIMIT 1228638911 OFFSET 1829242175; -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)>(vt0.c1)), (- (((((t0.c2)OR(vt0.c1)))AND(t0.c2)))), (((vt0.c1)) NOT BETWEEN ((((((vt0.c1)AND(NULL)))AND(t0.c1)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c1))))) FROM vt0 WHERE (((x'bcf3') BETWEEN ((((((((('0.3495995049495899')AND('1<	8j')))OR('')))AND('')))OR(x'0d1f'))) AND (((x'3cd5')-(x''))))) ORDER BY ((((vt0.c0)<<(x'')))||(((((vt0.c0)OR(vt0.c1)))OR(t0.c2))))  NULLS LAST;SELECT ALL ((vt0.c1)|(t0.c0)) COLLATE NOCASE FROM vt0 WHERE ('-19728963') GROUP BY vt0.c0 HAVING (((((vt0.c1, t0.c0, t0.c1))<((t0.c1, t0.c2, vt0.c0))))/((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))));SELECT ((((('-1690209891')) BETWEEN ((vt0.c1)) AND ((t0.c0)))) IS TRUE), NTILE(((CASE WHEN vt0.c1 THEN vt0.c1 END)*(((vt0.c0) NOT BETWEEN (0.6614247111032582) AND (vt0.c0))))) OVER ( ORDER BY ((vt0.c0 COLLATE RTRIM)<=(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, ((((ABS(DISTINCT vt0.c1))AND(((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c1)))))OR(((t0.c2)<=(vt0.c0)))) DESC, (- ((('*')>=(t0.c2))))  NULLS FIRST), (((+ (t0.c1))) IS TRUE) FROM vt0;SELECT (((vt0.c0 IN ())) NOT BETWEEN (CAST(t0.c1 AS TEXT)) AND ((vt0.c1 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c1)&(t0.c0)))|(((t0.c0)>=(vt0.c1)))) FROM t0, vt0; -- 0ms;
SELECT ALL (((t0.c2, vt0.c1, vt0.c0)) BETWEEN ((((t0.c2) NOT NULL), (vt0.c0 IN ()), CAST(t0.c2 AS REAL))) AND ((((t0.c2)LIKE(t0.c1)), ((t0.c0)<=(vt0.c1)), ((t0.c0)<(vt0.c0))))) FROM t0;SELECT ALL ((((-123926831)>>(0.5980062820283161)))==((- (t0.c2)))) FROM vt0 GROUP BY ((((vt0.c1)<=(vt0.c0)))+(TYPEOF(DISTINCT vt0.c0))) HAVING 0.8005669656541753 COLLATE BINARY;SELECT CASE WHEN (((t0.c1, t0.c0, t0.c1)) BETWEEN ((NULL, NULL, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0))) THEN ((t0.c0) IS FALSE) ELSE ((vt0.c1)>(0.2833240905957569)) END, (((vt0.c0)) BETWEEN ((LIKELIHOOD(t0.c1, 0.6748019796779215))) AND ((((vt0.c1)IS(t0.c2))))), AVG(180732396 COLLATE RTRIM) OVER ( RANGE  CURRENT ROW) FROM vt0, t0; -- 0ms;
SELECT (((CASE vt0.c1  WHEN '0.6890590614872205' THEN t0.c0 END))==(((((t0.c1))==((t0.c0)))))), (- ((~ (t0.c2)))), TOTAL(COUNT(t0.c1 COLLATE BINARY)) FROM t0 ORDER BY ((((((((((vt0.c0)AND(t0.c2)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) NOTNULL) ASC;SELECT DISTINCT TRIM(vt0.c1 COLLATE NOCASE, ((x'') NOTNULL)) FROM vt0 WHERE ((((0.14599381251746124 COLLATE RTRIM))>((CASE WHEN x'' THEN 0.4231251145230973 WHEN NULL THEN ' {' WHEN 0.375970901746862 THEN '2109115725' ELSE x'6cad' END)))); -- 0ms;
SELECT COUNT(((t0.c0) ISNULL)) OVER ( PARTITION BY (((t0.c1 IN (t0.c0, vt0.c1))) NOT NULL), (CAST(vt0.c0 AS INTEGER) IN ())) FROM t0, vt0 WHERE (((((NULL) ISNULL))<<((((1.804436703E9, 0.8535262331844399, 0.47752681721040025)) BETWEEN ((0x3fa3e10a, 0.27423812879781995, -1186015261)) AND (('sos<kd#''p', '!/', x'')))))) LIMIT -1155210236; -- 0ms;
SELECT ((((t0.c1)||(t0.c2)))LIKE(((vt0.c1)<(vt0.c0)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((t0.c2)>=(t0.c1)), '-1837635482', ((((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c1 AS INTEGER))))OR((~ (t0.c0)))) FROM t0 WHERE ((~ ((NULL IN ()))));SELECT ALL COUNT(json_array(t0.c0, vt0.c0)) FROM vt0 INNER JOIN t0 ON CASE vt0.c0  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (x'')) THEN t0.c1 WHEN NULL THEN CAST(t0.c1 AS BLOB) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)<(vt0.c1)) WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)) THEN ((vt0.c0)<>(t0.c0)) WHEN (- (vt0.c1)) THEN ((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((t0.c1)IS NOT(0.2287844961074672)) END;SELECT ALL t0.c0, x'', TOTAL(((t0.c2) BETWEEN (t0.c2) AND (t0.c0))) OVER () FROM vt0 WHERE (CASE (((0.26792917993653853)) BETWEEN ((x'')) AND (('iuug')))  WHEN LIKELY(DISTINCT NULL) THEN (+ (NULL)) WHEN ((-7.0368293E8)&(x'3070207b')) THEN (((((((('')OR(0.6636375376608162)))OR(x'')))OR(-4.06951178E8)))AND(0.5813527537243633)) WHEN ((((0x1c7054e5)AND('0.0')))AND(0.0716949906451968)) THEN (((('')OR('-1938925289')))OR('1775371372')) END) LIMIT -668675537;SELECT DISTINCT (vt0.c1 COLLATE RTRIM IN ((+ (t0.c1)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT TRIM((((t0.c1, 1479066964, vt0.c0)) NOT BETWEEN ((t0.c1, vt0.c0, t0.c2)) AND ((vt0.c1, x'', t0.c0))), TOTAL(vt0.c0)) FROM t0, vt0 WHERE (RTRIM(((((((((x'')AND(0.9326012618265034)))AND('')))OR(0.673055703300408)))AND(NULL)))); -- 1ms;
SELECT (((((((t0.c0)AND(vt0.c1)))AND(t0.c0))))<>(((- (t0.c2))))) FROM vt0, t0; -- 0ms;
SELECT CAST(vt0.c0 AS REAL), (NOT (vt0.c0 COLLATE RTRIM)), FIRST_VALUE((((+ (vt0.c0)))<<(((vt0.c0)OR(x''))))) OVER () FROM vt0, t0 WHERE ((((0X23fd7c11 IN ()))>=(((0.13001908173387444) NOT NULL)))) ORDER BY CAST(0X744c33de AS INTEGER) COLLATE NOCASE DESC  NULLS FIRST, (((NOT (vt0.c0)))=(((vt0.c1) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST, CAST(((t0.c0)>>(vt0.c0)) AS NUMERIC) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (+ (vt0.c0)) FROM t0 GROUP BY ((((vt0.c1)+(t0.c2))) NOT NULL) HAVING CASE WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN t0.c2 WHEN '/FVt!' THEN vt0.c1 WHEN t0.c0 THEN '1855678384' END THEN json_patch(vt0.c0, vt0.c1) END;SELECT (t0.c1 IN ()), ((+ (t0.c1)) IN (CASE WHEN vt0.c1 THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c1 THEN vt0.c1 END, t0.c1 COLLATE BINARY)), CUME_DIST() OVER () FROM vt0, t0; -- 0ms;
SELECT ALL CAST((vt0.c1 IN ()) AS NUMERIC) FROM vt0, t0 WHERE (((((NULL)>>(x'')))>=(CASE WHEN x'7c5c' THEN x'' ELSE 1.661053247E9 END))) ORDER BY ((((vt0.c0)OR(vt0.c1)))OR(t0.c1)) COLLATE RTRIM ASC  NULLS FIRST, CAST(vt0.c1 AS REAL)  NULLS FIRST LIMIT 1575723500; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c1)))|(CAST('-429537350' AS BLOB))), NULL, TOTAL(CASE t0.c0  WHEN t0.c2 THEN vt0.c1 END) FROM t0 WHERE (((+ (NULL)) IN ()));SELECT DISTINCT ((t0.c0)>(t0.c2)) COLLATE NOCASE FROM t0; -- 0ms;
SELECT (((- (vt0.c1)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))) FROM vt0;SELECT DISTINCT ((((((t0.c1)AND(vt0.c0)))OR(t0.c2)))||(TRIM(DISTINCT t0.c0))), CASE (((t0.c0))==((vt0.c0)))  WHEN CASE WHEN vt0.c0 THEN t0.c2 ELSE vt0.c1 END THEN (~ (x'')) END, 0x42eff397 COLLATE NOCASE FROM vt0, t0 WHERE (((CASE WHEN 1.410743892E9 THEN -1876266459 ELSE '-1173622021' END)|(x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((((t0.c2)OR(t0.c0)))AND(vt0.c0))) BETWEEN ((((NULL))>((t0.c2)))) AND (((t0.c2)&(vt0.c1)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0, vt0 ORDER BY ((((((t0.c2))=((t0.c1)))))>=((CAST(t0.c0 AS INTEGER)))) DESC; -- 0ms;
SELECT MIN(MAX(((t0.c1)/(vt0.c0)))), COUNT(*) OVER (), (((((t0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))<(t0.c0)) FROM vt0, t0 WHERE ((- (CASE WHEN 0.3317321950234934 THEN 'nf' WHEN NULL THEN '-2001633152' WHEN 0.7778233007745574 THEN '' END)));SELECT SUM(((vt0.c1) ISNULL)) FROM t0, vt0 WHERE (((((TRIM(NULL))AND((((0.07001870758070639, NULL, ''))>(('-92789553', NULL, '-946872311'))))))OR(((0.4124471544231737)==(NULL))))) GROUP BY (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1)))) NOTNULL) LIMIT 1948258142; -- 1ms;
SELECT DISTINCT ((((TYPEOF('ED'))OR(vt0.c0)))AND(AVG(t0.c1))) FROM vt0 WHERE (0x17739f80);SELECT DISTINCT MAX(vt0.c1), ((- (vt0.c0)) IN ()), (~ (t0.c1)) COLLATE NOCASE FROM vt0, t0; -- 0ms;
SELECT ((((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)))>((((t0.c2, vt0.c0, t0.c0))>=((t0.c1, vt0.c0, -1.421205911E9))))) FROM t0 WHERE ((NOT ((((('梳KX5_{J徑y')OR(0.7533412095368875)))OR(x''))))) ORDER BY 'N娥0Wmㆈb?^' ASC  NULLS FIRST, CASE WHEN ((((((((((((vt0.c0)AND(t0.c1)))AND(0.2372928875802658)))OR(t0.c0)))OR(t0.c2)))AND(t0.c1)))AND(t0.c0)) THEN (vt0.c0 IN ()) ELSE ('0.360946984824858' IN ()) END ASC;SELECT DISTINCT (LOWER(DISTINCT t0.c0) IN (AVG(t0.c1))) FROM vt0 WHERE ((((0X296ecf37 IN (1499885331, '-1906353205'))) BETWEEN ((((405384356))>((x'')))) AND ('1600467887')));SELECT ALL ((0.6890590614872205)/(((vt0.c0)%(vt0.c1)))) FROM t0;SELECT ALL (~ (((t0.c2) BETWEEN (0X12c5d026) AND (vt0.c1)))), COUNT(*) OVER (), SUM(((vt0.c0)/(t0.c2))) OVER () FROM vt0, t0; -- 1ms;
SELECT DISTINCT vt0.c0 FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((((((vt0.c1)OR(t0.c2)))AND(vt0.c0))))<=((AVG(t0.c0)))), ((((t0.c2)&(vt0.c1))) BETWEEN (((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))OR(vt0.c0)))AND(0.2412741363387394))) AND (((t0.c2)-(x'fb4a')))), ((((t0.c1)AND((t0.c0 IN (t0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM t0 WHERE ((+ (((0.17275651039173134) IS FALSE)))) GROUP BY ((((0.8059663789806372) NOT BETWEEN (t0.c2) AND (t0.c1))) IS FALSE), (((vt0.c1)) NOT BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((((((((t0.c2)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)))OR(vt0.c1))))), (((vt0.c1 IN ())) NOT BETWEEN (((((((((NULL)AND(0.14662600888059385)))AND(t0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND ('-1215762447')) ORDER BY '' ASC;SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)=(t0.c2)))) AND ((((t0.c2) ISNULL)))) FROM t0, vt0 WHERE (((((((x'')OR(x'')))OR('\Q'))) ISNULL)); -- 0ms;
SELECT DISTINCT (((((((((((('0.5316966843078876')OR(t0.c0)))AND(vt0.c1)))AND(t0.c2)))AND(t0.c2)))AND((((x''))<=((t0.c0))))))OR(((vt0.c1)|(vt0.c1)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT t0.c0, (((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN ()), ((((CASE WHEN vt0.c1 THEN vt0.c0 END)OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(t0.c0 COLLATE RTRIM)) FROM t0;SELECT x'' FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM vt0; -- 0ms;
SELECT DISTINCT (((TYPEOF(vt0.c1)))<=((HEX('1920776432')))) FROM t0, vt0 WHERE ((((('' COLLATE NOCASE)AND(LTRIM('鵛8믬D'))))OR(0.5165404397983204 COLLATE RTRIM))); -- 0ms;
SELECT ALL t0.c0 FROM t0; -- 0ms;
SELECT (((t0.c0 IN (NULL, vt0.c1))) NOTNULL) FROM vt0 WHERE ((+ ((NOT (x'6e63')))));SELECT ALL (UNICODE(0.736159643181087) IN ()) FROM vt0, t0; -- 0ms;
SELECT ((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))LIKE(((((((((((((t0.c2)AND(vt0.c0)))OR(t0.c1)))AND(t0.c0)))AND(t0.c2)))OR(x'fd92')))AND(t0.c2)))), ((((SUM(vt0.c0))AND(((vt0.c1)&(vt0.c1)))))OR((NOT (t0.c2)))), SUM((NOT (t0.c1))) COLLATE NOCASE FROM t0 WHERE (((((NULL)LIKE(0.9926799922897444)))/(TRIM(x'5785', NULL)))) LIMIT 1943298908 OFFSET -1711599469;SELECT DISTINCT (((t0.c0)||(t0.c1)) IN ()) FROM vt0 WHERE (((((1279169937 COLLATE RTRIM)AND(((NULL)%(x'')))))AND((('448598391') NOT BETWEEN (0.8017161674244077) AND ('O?'))))); -- 0ms;
SELECT MAX(GROUP_CONCAT(((t0.c0)/(NULL)))), LOWER(DISTINCT ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))), ((((t0.c1))!=((t0.c1))) IN ()) FROM vt0;SELECT DISTINCT json_remove(0.5738770794030588, vt0.c0) COLLATE NOCASE FROM vt0 LIMIT 1256145842;SELECT DISTINCT (((vt0.c1)LIKE(NULL)) IN ((((vt0.c1, vt0.c0, vt0.c0))>=((vt0.c0, t0.c1, t0.c0))))) FROM t0, vt0 LIMIT 703532413; -- 0ms;
SELECT DISTINCT ((((t0.c1, t0.c1, vt0.c0))>(('0.43420242740950366', vt0.c1, vt0.c0))) IN ()) FROM t0, vt0; -- 0ms;
SELECT ALL ((vt0.c0)<(vt0.c1)) COLLATE BINARY, '-270652668', (((- (NULL))) ISNULL) FROM vt0, t0; -- 0ms;
SELECT ALL ((((+ (t0.c1))))>=((CAST(t0.c1 AS BLOB)))) FROM vt0 WHERE ((NOT (CASE WHEN 0.387283423959332 THEN NULL WHEN x'' THEN 415184979 WHEN x'' THEN 0xffffffff8da5ac75 END))) ORDER BY (((- (t0.c2))) IS FALSE) ASC  NULLS FIRST;SELECT DISTINCT CAST(t0.c0 COLLATE RTRIM AS TEXT), COUNT(*) OVER ( PARTITION BY ((((0.5714897099152735)%('-1382158513')))LIKE(UPPER(DISTINCT vt0.c0))), ((t0.c2 COLLATE NOCASE)|(((t0.c0)%(t0.c0)))) GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), AVG(((vt0.c1) ISNULL)) OVER () FROM t0 WHERE ((((((((((((((('')OR(0.6693260981505976)))AND(0.13001908173387444)))AND(0Xfffffffff92a4d54)))OR(x'b0d8')))OR(x'16ca')))OR(0.6693622159459813))) BETWEEN (((((0.3940777257566749)OR(x'')))AND(NULL))) AND (((('4S__', x'', x'bb63')) BETWEEN (('', '-541315631', 0.7742450979415255)) AND ((450596791, 0.9460782386778932, NULL))))));SELECT DISTINCT t0.c2 FROM vt0, t0 WHERE (((CASE 0xffffffff908b3d1b  WHEN 0x266d3bb THEN NULL ELSE x'' END) NOT BETWEEN (CASE WHEN '-1194798218' THEN x'' END) AND ((('1661053247')<<(NULL))))); -- 0ms;
SELECT DISTINCT MIN('E_'), ((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c1))) NOT NULL), (('1622023157') BETWEEN (((((vt0.c1)OR(t0.c1)))OR(t0.c1))) AND (0.4175610433053395)) FROM vt0 LIMIT 1608566816;SELECT DISTINCT ((0.29204187213767985) NOTNULL) FROM t0 WHERE (CAST(((0.09175901471038139) IS TRUE) AS REAL)) INTERSECT SELECT ALL ((t0.c2) IS FALSE) FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((vt0.c1)=(vt0.c0))) BETWEEN (((t0.c2)<=(t0.c0))) AND (TOTAL(t0.c0))), ((((((NULL) IS TRUE))AND(((t0.c1) IS FALSE))))OR(((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))), CAST(((t0.c1) NOT BETWEEN (8.80118398E8) AND (vt0.c1)) AS BLOB) FROM t0, vt0 GROUP BY (((vt0.c1 IN ())) BETWEEN (rtreenode(t0.c1, t0.c2)) AND (((t0.c0) NOTNULL))), ((((((t0.c2) NOT BETWEEN (vt0.c0) AND (-1.125593934E9)))AND(((((((((t0.c0)AND(vt0.c1)))OR(0.12235725088419258)))AND(t0.c1)))OR(t0.c0)))))AND((x'' IN ()))), (((vt0.c1, '556891206', t0.c2)) BETWEEN ((t0.c2 COLLATE BINARY, (((t0.c0))<=((t0.c1))), CASE t0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 END)) AND ((((t0.c2)IS(t0.c1)), t0.c0, t0.c0 COLLATE RTRIM)));SELECT COUNT(*) OVER ( ORDER BY (~ (CAST(t0.c0 AS INTEGER)))) FROM vt0 LIMIT 834645883 OFFSET -966654420;SELECT DISTINCT PERCENT_RANK() OVER ( RANGE  UNBOUNDED PRECEDING), LIKELY(((NULL)OR(t0.c1))), ((MAX(vt0.c1, t0.c0, vt0.c0, t0.c2, vt0.c1, x'')) NOT NULL) FROM vt0, t0 ORDER BY t0.c2; -- 1ms;
SELECT COUNT(t0.c0) OVER (), (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c1)))) BETWEEN (0.5887056489197284) AND (GROUP_CONCAT(t0.c0))), (NOT ((+ (t0.c1)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (+ ((+ (vt0.c1)))) FROM t0;SELECT ((t0.c2 COLLATE NOCASE)>=(((t0.c2)%(vt0.c1)))) FROM t0 WHERE (((SQLITE_COMPILEOPTION_GET(''))AND(('' IN (0.7882009203362189, '')))));SELECT DISTINCT ((CAST(vt0.c1 AS REAL))-((('-1033265030') NOT NULL))) FROM vt0, t0 WHERE (((((x'')%(x''))) IS FALSE)) LIMIT 1305751240 OFFSET -395203699; -- 0ms;
SELECT ALL ((CASE WHEN 0.27868998683915247 THEN vt0.c0 WHEN x'0508' THEN vt0.c0 WHEN t0.c0 THEN t0.c1 END) NOTNULL) FROM vt0 WHERE (CASE WHEN NULL THEN (('VC') NOT NULL) ELSE (0.7574366676370039 IN (NULL)) END);SELECT ALL ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((NULL) IS FALSE)) AND (((t0.c2) NOTNULL))) FROM vt0;SELECT LOWER(DISTINCT (t0.c0 IN ())) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c2)>>(t0.c0))) NOT NULL), CAST(COUNT(vt0.c0) AS BLOB), (((0X53dc8dd6 IN ())) BETWEEN ((- (vt0.c0))) AND (((vt0.c0) ISNULL))) FROM t0, vt0 WHERE ((((('ok')+('뼪?\T	')))/((~ ('-2084463350'))))); -- 0ms;
SELECT DISTINCT MAX(INSTR(t0.c1, t0.c2)), CAST(((vt0.c0)<<(t0.c0)) AS INTEGER), '2073947169' FROM t0, vt0; -- 0ms;
SELECT DISTINCT MIN(x''), (+ (((vt0.c0) IS TRUE))), RANK() OVER () FROM vt0; -- 0ms;
SELECT ((((((((((t0.c1)LIKE(t0.c1)))OR(((t0.c2) IS TRUE))))AND((vt0.c1 IN ()))))OR((vt0.c1 IN ()))))OR(vt0.c1)), CAST(x'' AS BLOB), COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT t0.c0 FROM vt0, t0; -- 0ms;
SELECT ALL CASE WHEN ((((t0.c0)AND(t0.c2)))AND(vt0.c0)) THEN ((((vt0.c1)OR(t0.c1)))AND(t0.c1)) ELSE ((t0.c1)+(vt0.c1)) END, SQLITE_SOURCE_ID(), ((CAST(vt0.c0 AS INTEGER))OR(vt0.c1 COLLATE BINARY)) FROM t0 WHERE (((x'') BETWEEN (NULL) AND (x'c9a39fbb')) COLLATE BINARY);SELECT DISTINCT (((((vt0.c1)) BETWEEN ((0.47250054314664436)) AND ((vt0.c0))))-(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))), ((((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0))) NOT BETWEEN (((t0.c2)-(vt0.c0))) AND (CASE WHEN t0.c1 THEN vt0.c0 END)), ((((vt0.c1)>(vt0.c0)))LIKE(((((t0.c0)AND(t0.c2)))AND(vt0.c0)))) FROM vt0;SELECT ALL CASE WHEN ((t0.c0)<<(vt0.c0)) THEN CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN vt0.c0 THEN '0.5980062820283161' WHEN vt0.c0 THEN vt0.c0 ELSE 0.8458508834687629 END WHEN (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) THEN t0.c1 WHEN ((((((((t0.c1)AND(t0.c1)))OR(vt0.c1)))AND(t0.c2)))AND(t0.c1)) THEN 0.10658700327652049 ELSE ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) END FROM vt0;SELECT ALL CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '7|⠪o' THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 END COLLATE BINARY FROM vt0, t0 WHERE (((CASE WHEN x'1d10' THEN x'' END) NOT BETWEEN (json_quote(x'')) AND (((NULL)GLOB(0.8613223378878003)))));SELECT ALL ((((t0.c0)LIKE(t0.c1))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c1))) AND (((vt0.c0) BETWEEN (t0.c1) AND (t0.c2)))) FROM vt0, t0; -- 0ms;
SELECT CASE TIME(t0.c0, vt0.c1, t0.c1, t0.c2, vt0.c0)  WHEN vt0.c1 THEN ((t0.c0) ISNULL) WHEN '1926615220' COLLATE BINARY THEN ((t0.c1) ISNULL) WHEN ((t0.c0)||(t0.c2)) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (vt0.c1)) END FROM vt0, t0; -- 0ms;
SELECT (NOT (((-1.11787981E8) NOTNULL))) FROM t0 WHERE (CAST(UNLIKELY(NULL) AS REAL)); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END)&(((t0.c1)>>(t0.c0)))) FROM vt0 WHERE (('5b%' COLLATE RTRIM IN ()));SELECT ALL (((t0.c0 IN (t0.c0, t0.c0))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS NUMERIC))<<(COUNT(vt0.c0))) FROM vt0, t0 WHERE ((((((((x'')) BETWEEN ((0.01819856881280446)) AND ((x'e55e'))))AND('2130754093' COLLATE RTRIM)))AND(0.7605923069355277))); -- 0ms;
SELECT CASE UPPER(t0.c0)  WHEN GROUP_CONCAT('625789196') THEN NULL ELSE CAST(vt0.c1 AS BLOB) END, ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)GLOB(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)), (vt0.c1 IN ()) FROM t0, vt0 WHERE ((((((NULL)) BETWEEN ((-2.014638077E9)) AND ((']l)')))) BETWEEN ((- (0.2890961846635698))) AND (GLOB('', '')))); -- 0ms;
SELECT (((vt0.c1)<>(t0.c0)) IN (vt0.c1 COLLATE BINARY)) FROM vt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN '188888697' WHEN ((NULL)<=(x'')) THEN HEX(0Xffffffff8121cc65) WHEN 615800721 THEN IFNULL('o76RY渫吸{7', 0.2363833329623798) WHEN '0.5546205002528671' COLLATE NOCASE THEN ((0.2252151237370782)!=(NULL)) WHEN ((x'') IS FALSE) THEN NULL END) ORDER BY ((CASE t0.c0  WHEN NULL THEN vt0.c0 ELSE t0.c2 END)/(((vt0.c1)GLOB(t0.c0)))) DESC LIMIT -1869923045;SELECT ((((t0.c2))>=((t0.c1))) IN ()) FROM t0, vt0; -- 0ms;
SELECT ALL (((vt0.c1) ISNULL) IN ()), x'ff7e' COLLATE RTRIM, (+ (vt0.c1 COLLATE RTRIM)), '', x'6833' FROM t0;SELECT DISTINCT ((((t0.c1) IS TRUE)) NOT BETWEEN (t0.c2 COLLATE BINARY) AND ((((t0.c0))<>((vt0.c1))))) FROM t0 WHERE (CAST(((x'bf9b') NOTNULL) AS REAL));SELECT DISTINCT LAG(((((t0.c1 COLLATE BINARY)AND(t0.c1)))AND(CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END)), (((t0.c2)<=(t0.c0)) IN ((t0.c1 IN ()), ((((t0.c2)AND('')))AND(t0.c1)))), ((0.8581800453919364)-(((((((((t0.c0)AND(t0.c0)))AND(t0.c2)))OR(t0.c2)))AND(t0.c1))))) OVER ( PARTITION BY (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((0.32343880389503543))), ((DATE(t0.c0, vt0.c0, vt0.c0))LIKE(((((t0.c1)AND(t0.c1)))OR(vt0.c0)))), CASE WHEN CAST(t0.c2 AS INTEGER) THEN CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 END WHEN (t0.c0 IN ()) THEN ((vt0.c0)IS(vt0.c0)) WHEN (- (t0.c2)) THEN (~ (t0.c2)) END, t0.c0 ORDER BY HEX(DISTINCT ((t0.c0)+(vt0.c1))) ASC) FROM t0 WHERE (CAST(('' IN ('dr*VHN')) AS NUMERIC));SELECT vt0.c1 FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c0)&(t0.c0)) IN (((vt0.c0)IS NOT(t0.c2)))) FROM vt0 GROUP BY ((((vt0.c1) IS FALSE))%('-1872680683')) ORDER BY (((t0.c2, t0.c1, NULL)) NOT BETWEEN (((NOT (t0.c0)), t0.c0 COLLATE RTRIM, ((vt0.c1)<(vt0.c0)))) AND ((((t0.c1)<=(t0.c0)), CASE WHEN t0.c2 THEN 0X53dc8dd6 END, (t0.c2 IN ())))) ASC;SELECT '920712486' FROM t0, vt0; -- 0ms;
SELECT ALL (((t0.c0)-(NULL)) IN (((vt0.c0)-(t0.c0)))), COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), COUNT(*) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) BETWEEN (-1.528321344E9) AND (t0.c1)) THEN ((t0.c0)/(vt0.c1)) ELSE ((t0.c2) IS FALSE) END FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c2 IN ()))/(vt0.c1)), (((LOWER(vt0.c0), ((vt0.c0) ISNULL), ((t0.c2)>>(t0.c2))))>=((vt0.c1 COLLATE BINARY, CAST(t0.c0 AS INTEGER), ((((vt0.c0)AND(t0.c1)))OR(t0.c1))))), ((((((((UPPER(t0.c0))OR(UPPER(DISTINCT t0.c1))))OR(((t0.c2) IS FALSE))))OR(t0.c0 COLLATE BINARY)))AND(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0, t0 WHERE ('T'); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0, vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((((vt0.c1)OR(t0.c2)))AND(vt0.c1)))) FROM vt0 WHERE (((-1.49240239E9) BETWEEN (CAST('2000206253' AS TEXT)) AND (((((-1.421205911E9)OR(68834597)))AND('-102957415')))));SELECT DISTINCT SUM(LOWER(t0.c2)) FROM t0, vt0 WHERE (CASE WHEN CASE x'5bf5'  WHEN 0.4585949835688323 THEN NULL END THEN ((NULL)LIKE('1675974471')) WHEN ((0.13524260408018518) NOT BETWEEN ('1264301207') AND (x'')) THEN (('')&(x'')) WHEN (NULL IN ()) THEN CASE WHEN -1627437030 THEN 0.6807588307339472 WHEN '268488450' THEN 'w7~ꤿ⻇xoL' WHEN NULL THEN 0.10170207444549417 WHEN NULL THEN 0.0999099992821213 WHEN 'ED' THEN '1181283983' ELSE '#i' END END) LIMIT -1421205911 OFFSET -94468051; -- 0ms;
SELECT ALL AVG((- (t0.c1)) COLLATE BINARY) FILTER(WHERE (((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))) COLLATE RTRIM) OVER ( PARTITION BY CAST(((((((((t0.c2)AND(t0.c0)))AND(NULL)))AND(t0.c2)))OR(vt0.c0)) AS REAL), CASE WHEN t0.c1 THEN LAST_INSERT_ROWID() END) FROM vt0 WHERE (x'');SELECT ALL ((json_extract(t0.c2, t0.c1)) NOT BETWEEN (t0.c2) AND (0.5776931989781373)) FROM t0 WHERE (((((NULL) NOT BETWEEN ('') AND (0.36529231605363655)))|(CAST('鹚X' AS TEXT)))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, t0 WHERE (COALESCE(DISTINCT (((x'22e0', NULL, NULL))>((0.9273817486005936, 0Xffffffffbe526eda, '?ﴘl鉝6c'))), (('6X')GLOB(0.0075874755006716255)))); -- 0ms;
SELECT ((COUNT(*))IS NOT(((t0.c0)||('ij91b')))), ((vt0.c1)||(((t0.c1)LIKE(t0.c1)))), ((((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c1))) NOT BETWEEN (CASE t0.c1  WHEN vt0.c1 THEN t0.c1 ELSE '&#LsbDW' END) AND (vt0.c1)) FROM vt0 WHERE (('552498612' IN ()) COLLATE BINARY);SELECT DISTINCT (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) ISNULL) FROM t0;SELECT DISTINCT TIME((t0.c1 IN ()), ((t0.c2)/(-1528518196)), (((('-503304262')OR(t0.c1)))AND(t0.c1)), CASE WHEN 'xt\L	6' THEN t0.c1 WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN t0.c1 END, AVG(vt0.c1)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN ((((vt0.c0)IS NOT(vt0.c1)))) AND ((vt0.c0 COLLATE NOCASE))) FROM t0;SELECT ALL (((x'')) NOT BETWEEN ((((((t0.c1)AND(vt0.c0)))OR(t0.c2)))) AND ((vt0.c1))) FROM vt0;SELECT DISTINCT CASE WHEN 0Xda9bda5 THEN ((((((((vt0.c1)AND(t0.c1)))AND(NULL)))AND(t0.c1)))OR(NULL)) WHEN CASE WHEN x'01f5' THEN t0.c2 ELSE t0.c2 END THEN MAX(vt0.c0) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c1)+(vt0.c0)) WHEN ((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0))) WHEN (('-1972761224') BETWEEN (t0.c2) AND (t0.c1)) THEN (((t0.c0))<((t0.c2))) ELSE CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END END FROM t0;SELECT DISTINCT CASE t0.c2  WHEN t0.c0 COLLATE RTRIM THEN ((((t0.c2)OR(t0.c2)))AND(t0.c0)) END FROM t0, vt0 LIMIT 2104684039 OFFSET 1203588814; -- 0ms;
SELECT ALL ((((((t0.c1)LIKE(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))), ((((t0.c2) IS TRUE)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND ((~ (t0.c1)))), NTILE((((vt0.c0, 0.7864125217704582, vt0.c0, vt0.c0, t0.c1)) NOT BETWEEN (((~ (vt0.c1)), (vt0.c1 IN ()), CAST(vt0.c0 AS TEXT), 0xffffffffb5bb1969, CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE t0.c2 END)) AND ((vt0.c1 COLLATE RTRIM, ((t0.c0)>(vt0.c0)), ((((0xffffffffb3a08cb0)AND(0.7975891139225495)))OR(t0.c0)), COALESCE(t0.c2, t0.c0), ((t0.c1)=(vt0.c1)))))) OVER () FROM t0, vt0 WHERE (0xffffffff8144b30e) ORDER BY (TYPEOF(DISTINCT t0.c0) IN ()), CAST((((t0.c2)) BETWEEN ((vt0.c1)) AND ((t0.c2))) AS BLOB)  NULLS FIRST LIMIT 1204625136 OFFSET 285331543; -- 1ms;
SELECT DISTINCT ((((((vt0.c1)<<(t0.c1)))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c1 WHEN vt0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 END)))OR((- (vt0.c1)))) FROM vt0 WHERE (((('#8\U')*('Q9x''N')) IN ((('-205167331')>>(393453440)), (((x'')) NOT BETWEEN (('t')) AND ((0.016898619626687816))))));SELECT ((((((((((t0.c2)IS(vt0.c1)))AND(vt0.c0)))OR(((((((((((((t0.c2)AND(t0.c2)))OR(vt0.c0)))OR(t0.c2)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c2)))))AND(CAST(t0.c0 AS INTEGER))))AND(rtreenode(vt0.c1, vt0.c0))), CASE ((((x'')AND(t0.c0)))OR(vt0.c1))  WHEN '~' THEN ((((t0.c0)OR(t0.c0)))AND(vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN COUNT(0.5162949075662719) WHEN UPPER(t0.c2) THEN COUNT(*) ELSE MAX(vt0.c0) END, (((((vt0.c1))=((vt0.c1)))) ISNULL) FROM t0 WHERE ((NOT ((('0.4231418560240986')<(0x511d0c1c)))));SELECT DISTINCT NTH_VALUE((((vt0.c1 IN (vt0.c0)))|((((t0.c1, vt0.c0, vt0.c1))!=((t0.c1, t0.c2, vt0.c0))))), (((t0.c1 IN (t0.c1)))<<(((vt0.c0)IS NOT(t0.c2))))) OVER () FROM t0, vt0 WHERE (((0Xffffffffd8844558)*('')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE BINARY)%((0.23172068928880685 IN ()))) FROM t0, vt0 ORDER BY (((((NOT (vt0.c0)))OR(((t0.c2) NOT BETWEEN ('') AND (t0.c2)))))AND(((t0.c0)<<(t0.c0)))); -- 0ms;
SELECT NTILE(((((((t0.c2)OR(t0.c1)))AND(vt0.c1))) IS FALSE)) OVER ( ORDER BY QUOTE(ABS(t0.c2))  NULLS LAST, t0.c2 DESC, ((t0.c0) BETWEEN ('1573 -2452851069279150640T}&' COLLATE BINARY) AND (((((vt0.c0)AND(t0.c2)))OR(vt0.c1)))) ASC) FROM t0, vt0 WHERE (x''); -- 0ms;
SELECT ALL ((((((t0.c0)AND(vt0.c1)))OR(t0.c0))) ISNULL), ((((t0.c0)%(t0.c2)))LIKE('-404949549')), (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN '\m' ELSE vt0.c0 END, CASE t0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE t0.c2 END, CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))<>((vt0.c0, ((t0.c0)IS NOT(vt0.c1)), t0.c0))) FROM vt0 WHERE ((((('')=(x'73f9f68e')))>>(CASE WHEN '' THEN NULL ELSE '-1379438815' END)));SELECT ALL (((-8.00427764E8)OR(t0.c1)) IN ()), (((t0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (t0.c0)))) AND ((((t0.c0)/(t0.c2))))), CASE json_object(0X72f0dba0, t0.c0)  WHEN ((((((((vt0.c1)AND(t0.c2)))AND(t0.c1)))AND('')))OR(vt0.c1)) THEN ((t0.c1)OR(t0.c0)) ELSE (+ (t0.c2)) END FROM t0, vt0 ORDER BY CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((((((t0.c2)AND(t0.c2)))AND(vt0.c0)))OR(t0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR('dV')) THEN t0.c1 COLLATE RTRIM END DESC;SELECT DISTINCT (~ (UNLIKELY(t0.c2))), ((((t0.c2)!=(t0.c2)))*(((t0.c2)GLOB(t0.c0)))), CASE WHEN ((((vt0.c1)AND(t0.c0)))AND(t0.c2)) THEN vt0.c1 COLLATE NOCASE END FROM t0;SELECT DISTINCT CASE LIKELIHOOD(DISTINCT t0.c0, 0.8898492079217226)  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN SUM(t0.c2) WHEN ((NULL) IS TRUE) THEN ((((((((-1.869923045E9)OR(vt0.c0)))AND(t0.c2)))OR(t0.c2)))OR(t0.c2)) WHEN (t0.c0 IN ()) THEN t0.c1 WHEN vt0.c1 THEN ((t0.c1)IS NOT(t0.c2)) WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN 0.5874986028616404 END, CAST(CASE t0.c2  WHEN vt0.c1 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN NULL THEN vt0.c1 ELSE 0.4486507784468201 END AS NUMERIC), t0.c0 FROM t0;SELECT DISTINCT (NOT (((vt0.c1) IS TRUE))) FROM vt0, t0 WHERE (LIKELIHOOD(((x'8a7fdae0') NOTNULL), 0.7539073815598892)) GROUP BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), vt0.c1, (+ (CASE WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)) LIMIT 1804436703; -- 0ms;
SELECT AVG(0.5027760807701885) OVER ( ROWS  CURRENT ROW) FROM vt0, t0; -- 1ms;
SELECT DISTINCT (MAX(vt0.c0) IN (MAX(t0.c0))), CAST(CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END AS REAL), ((NULL)IS(NULL)), t0.c1, ((((t0.c2)>=(t0.c2)))*(72504724)) FROM t0, vt0; -- 0ms;
SELECT ALL ((((~ (t0.c2))))<((((t0.c1)IS NOT(t0.c2))))) FROM t0 WHERE ((((('HH')>=(x'')))GLOB((((((((('1487352386')OR('0.04534525668549283')))OR(0.09262584970420307)))OR(x'')))AND(0.5221786700868323))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (((((t0.c0)AND(vt0.c0)))OR(t0.c1)) IN (CAST(t0.c1 AS INTEGER))), (- (t0.c0 COLLATE BINARY))  NULLS FIRST, (NOT (((((t0.c0)OR(vt0.c1)))AND(vt0.c1)))) DESC  NULLS FIRST) FROM t0, vt0; -- 0ms;
SELECT CAST(t0.c0 AS BLOB) COLLATE BINARY, ((((vt0.c1 COLLATE NOCASE)AND((~ (t0.c0)))))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))), CAST(2096307111 AS BLOB) FROM vt0, t0 GROUP BY (NOT (((0.05658198053455632)IS NOT(vt0.c0)))) HAVING (((((t0.c0)) BETWEEN (('-1577959297')) AND ((vt0.c1)))) IS FALSE); -- 0ms;
SELECT (((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))+(t0.c0 COLLATE BINARY)), CAST((((t0.c1, t0.c0, t0.c2, vt0.c1, t0.c2)) NOT BETWEEN ((t0.c0, vt0.c1, t0.c0, vt0.c0, t0.c1)) AND ((t0.c2, vt0.c0, t0.c1, vt0.c0, vt0.c0))) AS BLOB), t0.c2 FROM vt0, t0; -- 0ms;
SELECT CASE WHEN 0.022560999361750378 COLLATE BINARY THEN t0.c2 ELSE ((vt0.c1) IS FALSE) END FROM vt0;SELECT ((((vt0.c1)|(t0.c2))) ISNULL) FROM t0;SELECT CAST(((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) AS INTEGER) FROM vt0 LIMIT -1630255520;SELECT (((vt0.c1, t0.c2, t0.c1)) NOT BETWEEN ((NULL, LAST_INSERT_ROWID(), ((vt0.c1) NOT NULL))) AND ((((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CAST(t0.c0 AS REAL), CASE WHEN t0.c2 THEN t0.c2 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c1 END))) FROM vt0, t0 WHERE (((0.4594434213257973 IN ()) IN (CASE 'Xz'  WHEN 0.901944747415579 THEN '880118398' END, CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT CAST(vt0.c0 AS BLOB)), INSTR((vt0.c1 IN (vt0.c1, t0.c0)), ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))), SUM(CASE WHEN 0.1026678580852185 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((NOT (t0.c0)))) AND ((NULL))), ((t0.c2 COLLATE RTRIM)GLOB(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))AND(t0.c1)))OR(vt0.c1)))), GROUP_CONCAT((t0.c0 IN ())) OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS NUMERIC) FROM t0 LIMIT -1832187872;SELECT DISTINCT COUNT(((vt0.c0) NOTNULL)) OVER ( ORDER BY TRIM(DISTINCT ((vt0.c0) IS TRUE), NULL) DESC  NULLS FIRST), COUNT(*) OVER (), FIRST_VALUE(((TYPEOF(DISTINCT t0.c2)) BETWEEN (vt0.c0 COLLATE BINARY) AND (t0.c0 COLLATE RTRIM))) OVER () FROM t0, vt0 WHERE (((CAST(NULL AS REAL))IS NOT('V,o C' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((vt0.c1)+(((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))) FROM t0 WHERE ((((x'' IN ('')))GLOB(((NULL) NOT NULL))));SELECT ALL CAST(((((x'')OR(t0.c1)))AND(t0.c1)) AS BLOB) FROM t0 WHERE (CAST(CASE '571614783'  WHEN x'2bd8' THEN '\<PK*{G' ELSE x'' END AS INTEGER)); -- 0ms;
SELECT DISTINCT SUM((~ (t0.c0))) FILTER(WHERE x'e6b2d3c0') OVER () FROM vt0, t0 WHERE ((((('838375430')IS('LBM7Q')))+((NOT (0.4590129390426866))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (TYPEOF(t0.c2))) ASC; -- 0ms;
SELECT ALL AVG(((t0.c0) BETWEEN (NULL) AND (0.7519001645438358))), CASE (~ (t0.c0))  WHEN (((t0.c0)) BETWEEN ((t0.c1)) AND ((''))) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (t0.c2)) ELSE NULL END, ((LIKELY(t0.c1)) BETWEEN ('-1588110445') AND ((vt0.c1 IN ()))) FROM vt0;SELECT ((((vt0.c1)||(t0.c2))) IS TRUE) FROM t0 WHERE (load_extension(0.2275331128132525 COLLATE NOCASE)) UNION SELECT ALL (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) FROM vt0, t0;SELECT (((((t0.c0)&(t0.c0)), ((((vt0.c0)OR(vt0.c0)))OR('k^^m')), ((7.2504724E7)>>(t0.c2))))<=((MIN(vt0.c1), ((vt0.c1)||(t0.c1)), HEX(t0.c1)))) FROM vt0;SELECT ALL ((GROUP_CONCAT(t0.c0)) NOTNULL), ((MAX(vt0.c0))==((~ (t0.c0)))), (~ (((t0.c1)<=(t0.c0)))) FROM vt0, t0 WHERE (TRIM(DISTINCT (((('*<')AND(0.30933140993105557)))OR(0.5938856612033054)), (('') ISNULL))); -- 0ms;
SELECT DISTINCT TOTAL(((((((((vt0.c1)AND(vt0.c1)))OR(t0.c2)))OR(t0.c1)))OR(vt0.c0))) OVER (), ((((vt0.c0)*(t0.c1)))||(x'')), (((t0.c0)) BETWEEN ((CAST(t0.c1 AS REAL))) AND ((t0.c0))) FROM t0, vt0 WHERE ((((-1.869923045E9 IN ()))||(((0.26688099144143507) NOT NULL)))); -- 1ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER)) IS TRUE), SUM(x'052009e6'), ((t0.c0) IS FALSE) COLLATE BINARY FROM vt0;SELECT ALL ((((~ (vt0.c0))))<>((t0.c1))) FROM t0 WHERE ((((((0X66ac89b3) BETWEEN ('996158284') AND (x'')), CAST(NULL AS INTEGER), ((0.3434425643345591)LIKE(x'8cb53e03'))))>=((CASE WHEN '1406963158' THEN x'' END, ((x'1c89') BETWEEN ('-1492402390') AND (0.20379598274363342)), (((NULL, '34756816', x''))<((0x6d50ea33, '-347407809', 0.36517155046861005)))))));SELECT load_extension(((vt0.c1)/(t0.c2)), (('380288117') BETWEEN (t0.c2) AND (t0.c2))), (((NOT (vt0.c1)))OR(((0.2030867887812805)OR(vt0.c0)))), ((t0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2))) AND ((t0.c2 IN ()))) FROM vt0, t0 WHERE ((((((((x'')OR('1584000154')))AND(0.1026678580852185))))<((((('')) BETWEEN ((NULL)) AND (('1522861802'))))))); -- 0ms;
SELECT DISTINCT t0.c0 FROM vt0, t0 WHERE (TRIM(DISTINCT ((((-1421205911)OR(0.6114847817096866)))OR(0.23383801535842486)), ((0.5080876162318768) NOT NULL))); -- 0ms;
SELECT DISTINCT (((t0.c2))==((vt0.c0))) COLLATE BINARY FROM vt0, t0; -- 0ms;
SELECT DISTINCT (- (CASE t0.c2  WHEN vt0.c0 THEN '-419869837' END)) FROM t0 CROSS JOIN vt0 ON (NOT (((t0.c0)&(t0.c2)))); -- 1ms;
SELECT ALL (vt0.c1 COLLATE RTRIM IN (((vt0.c0)==(t0.c2)))), 0.9248160915614342, ((((((t0.c1)OR(t0.c0)))AND(vt0.c0)))IS NOT(0.9971806325289916 COLLATE RTRIM)) FROM vt0 WHERE (((('' IN ()))||(CHANGES()))) GROUP BY (vt0.c0 COLLATE RTRIM IN ()) HAVING ((x'')IS(CASE WHEN 0Xffffffffc8eb4b2c THEN t0.c2 END));SELECT DISTINCT TIME(((vt0.c1)<(vt0.c0)), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)), (- (t0.c0))) FROM t0 WHERE ((((~ (NULL))) BETWEEN (0Xffffffffef13f281 COLLATE BINARY) AND (((860986544) NOT BETWEEN (0.3453207817963032) AND ('r)')))));SELECT DISTINCT (((t0.c1 IN (t0.c1)))=(vt0.c0 COLLATE BINARY)), ((t0.c0)>(t0.c0 COLLATE RTRIM)), SUM(CAST(t0.c0 AS INTEGER)) OVER () FROM t0, vt0 WHERE (((0.2563858080764818)IS NOT(0.9172088899044767)) COLLATE BINARY); -- 0ms;
SELECT ALL t0.c0, ((((vt0.c0) BETWEEN (vt0.c0) AND (0.04763307010273443))) NOT BETWEEN (((vt0.c0)-(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))), t0.c2 FROM vt0, t0 WHERE (((CAST(0.6277720287458008 AS NUMERIC)) NOT NULL)); -- 0ms;
SELECT ALL (- (t0.c2 COLLATE RTRIM)), TOTAL(((t0.c1) BETWEEN (t0.c1) AND (t0.c1))), CASE t0.c2  WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY FROM vt0 WHERE ((((((NULL, 0.6359273002895803, -2002167259))>=((-1488205878, '433459014', '')))) IS TRUE));SELECT ALL vt0.c1 FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (t0.c0))) NOT BETWEEN ((((t0.c1))>=((t0.c1)))) AND (COUNT(*))) FROM vt0 ORDER BY t0.c2  NULLS LAST;SELECT DISTINCT COALESCE(DISTINCT ((vt0.c1) IS TRUE), -1616601625) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((vt0.c1 IN ()))) AND ((TRIM(t0.c1, vt0.c0)))), (~ (x'e1ff')), vt0.c1, CASE ((((vt0.c0)AND(vt0.c0)))OR(0.5327601889772399))  WHEN UNLIKELY(DISTINCT NULL) THEN TOTAL(vt0.c1) WHEN (NOT (vt0.c1)) THEN (((x'f4d8', t0.c0, t0.c1, t0.c1, t0.c2))>((t0.c0, t0.c1, vt0.c1, vt0.c0, t0.c2))) WHEN (t0.c2 IN ()) THEN (- (vt0.c0)) END, '' FROM t0 WHERE ((((NULL))<=(((('^zjB)')>(0.35635580071242123))))));SELECT DISTINCT ((SQLITE_VERSION())|(CASE WHEN x'' THEN t0.c1 ELSE t0.c1 END)) FROM vt0 WHERE ((+ (CASE WHEN '' THEN -1401064408 WHEN x'1b0b' THEN x'' WHEN NULL THEN NULL ELSE 0.2372928875802658 END))) LIMIT 933128067 OFFSET -2001633152;SELECT ((((CASE WHEN vt0.c1 THEN t0.c1 END)AND(vt0.c1 COLLATE BINARY)))AND(((((x'')AND(vt0.c1)))OR(t0.c1)))), ((((CAST(t0.c0 AS INTEGER))AND(((t0.c1)/(t0.c0)))))OR(CAST(t0.c1 AS REAL))), (((((((((((((('!hq') BETWEEN (t0.c1) AND (t0.c0)))OR(t0.c2 COLLATE NOCASE)))AND(t0.c0 COLLATE RTRIM)))OR(0.1984608560046025)))AND(CAST(vt0.c0 AS BLOB))))OR(((((((((NULL)OR(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))OR(vt0.c1)))))OR(vt0.c0 COLLATE BINARY)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*), ROW_NUMBER() OVER ( ORDER BY ((((vt0.c0) BETWEEN (t0.c2) AND (t0.c0)))<>(t0.c1 COLLATE RTRIM)) ASC  NULLS FIRST), vt0.c0 FROM t0 WHERE (CASE (('-703682930')%('0.4231418560240986'))  WHEN ((0x290f9451)%('-867719335')) THEN (((('h6zlglq\n')AND('3')))OR(1.661053247E9)) ELSE ((-2014638077)-('{V韈#uBN%')) END);SELECT ALL ((((((((CAST('1316593508' AS BLOB))OR(CASE WHEN t0.c2 THEN t0.c2 ELSE 0.8528272844050329 END)))AND((t0.c2 IN (vt0.c1)))))OR(t0.c0)))AND(TOTAL(t0.c2))), vt0.c0, CASE ((vt0.c1) BETWEEN (t0.c1) AND (t0.c1))  WHEN vt0.c0 THEN x'' ELSE MAX(t0.c2) END FROM t0, vt0; -- 0ms;
SELECT ALL SQLITE_VERSION() FROM vt0 CROSS JOIN t0 ON ((t0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CAST(t0.c2 AS BLOB) COLLATE BINARY, ((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))AND(t0.c1)))AND(vt0.c1)))||(t0.c2 COLLATE BINARY)), vt0.c0 FROM t0;SELECT (- (t0.c1)), (((- ('& ')))<=(((('1920322206'))==((vt0.c0))))), ((TOTAL_CHANGES())IS(t0.c0 COLLATE RTRIM)), (((t0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND (((NOT (vt0.c1))))), AVG(COUNT(CASE WHEN t0.c1 THEN t0.c2 ELSE vt0.c1 END)), CAST(x'' AS BLOB), NULL COLLATE NOCASE FROM vt0, t0 WHERE (LIKELIHOOD((((NULL, NULL, -1570770687))<(('VPT', NULL, x'0273'))), 0.4165988228240268));SELECT (((~ (vt0.c0))) NOT BETWEEN ((vt0.c1 IN (t0.c0, t0.c2))) AND ((+ (t0.c1)))), (vt0.c0 IN (x'45c9')), (+ (NULL)), FIRST_VALUE((((vt0.c1 COLLATE BINARY))<=((CASE vt0.c1  WHEN vt0.c1 THEN NULL END)))) OVER ( ORDER BY (('1679127826')>>(t0.c2)), ((- (t0.c2)) IN ())), COUNT(*) OVER () FROM vt0 WHERE (((0.6962058092715607 COLLATE BINARY)IS((~ (-1432645547))))) GROUP BY CASE WHEN t0.c2 THEN '-1155210236' WHEN t0.c0 THEN t0.c1 WHEN vt0.c1 THEN vt0.c1 END COLLATE BINARY;SELECT DISTINCT (((vt0.c0 IN ())) NOT NULL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT CAST((+ (t0.c2)) AS NUMERIC), -901563481, ((MAX(vt0.c0, NULL)) IS FALSE) FROM t0 GROUP BY 0.21216898140312135;SELECT DISTINCT (NOT (CASE WHEN vt0.c0 THEN vt0.c1 END)) FROM vt0, t0; -- 0ms;
SELECT NULL, (((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 END, (~ (t0.c0)), ((vt0.c0)>>(0.6564100796824035)))) AND (('i>' COLLATE NOCASE, (t0.c2 IN (t0.c0)), ((((((((t0.c1)AND(vt0.c0)))AND(x'')))OR(vt0.c1)))OR(vt0.c1))))), ((CASE NULL  WHEN t0.c2 THEN t0.c0 ELSE vt0.c1 END) BETWEEN (CAST(t0.c0 AS TEXT)) AND (((t0.c2) ISNULL))), t0.c0, MIN(((t0.c1) BETWEEN (vt0.c1) AND (t0.c2))) FROM vt0, t0; -- 0ms;
SELECT (((((t0.c2) NOT NULL)))>((CAST(vt0.c0 AS REAL)))), ((t0.c1)LIKE(t0.c1)) COLLATE BINARY, ((- (t0.c1)) IN ()) FROM t0 INDEXED BY i11;SELECT ALL (~ (0.9140746196248788)), (((t0.c0 IN ()))>=(((t0.c1) BETWEEN (t0.c1) AND (vt0.c0)))), ((((vt0.c0)>(t0.c2)))-(CAST(t0.c0 AS BLOB))) FROM t0, vt0 WHERE (((((-2022722457) NOT BETWEEN (NULL) AND ('j.\r	^{?}x')))>=(CASE WHEN -672173676 THEN '926103333' END))); -- 0ms;
SELECT DISTINCT (((t0.c0)>(-0.0)) IN ()) FROM t0 LIMIT 2027567586 OFFSET -665067167; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (((- (t0.c2)))) AND ((MIN(t0.c2)))) FROM t0 WHERE (CASE WHEN ((x'')-(0.9122922811974992)) THEN (('718161926')>=(x'1d762d53')) ELSE (- (NULL)) END);SELECT ALL CASE WHEN t0.c0 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) END, vt0.c0, SUM((vt0.c0 IN ())) OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT CAST((t0.c1 IN (vt0.c1)) AS NUMERIC), (NOT (t0.c1)) COLLATE BINARY, ((((x'', vt0.c1, vt0.c1))<((vt0.c0, t0.c1, t0.c1))) IN ()) FROM vt0;SELECT DISTINCT CAST(json_remove(vt0.c0, t0.c0) AS REAL), 0.15431596601588393, 0X13f3c16e FROM t0, vt0;SELECT DISTINCT ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) NOT BETWEEN ((((('0.8942286310108309')AND(t0.c1)))OR(NULL))) AND (((t0.c2)OR(vt0.c0)))), CUME_DIST() OVER (), 'n⒚X4m_ࢲ6᯵' FROM t0, vt0; -- 0ms;
SELECT (((t0.c1)||(t0.c2)) IN (t0.c2 COLLATE BINARY, MIN(vt0.c1))) FROM t0;SELECT ALL vt0.c1 FROM vt0 ORDER BY CAST(load_extension(t0.c0, t0.c1) AS REAL) DESC  NULLS LAST LIMIT 1274473300 OFFSET 1608566816;SELECT DISTINCT (+ (CASE vt0.c1  WHEN t0.c1 THEN vt0.c0 END)), NULL, ((((TRIM(t0.c1))AND(t0.c2)))AND(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c0)))) FROM t0 GROUP BY (((vt0.c0 IN ())) IS TRUE) HAVING (((vt0.c0, vt0.c1, t0.c1))=((vt0.c1, vt0.c1, t0.c0))) COLLATE NOCASE;SELECT ALL CASE ((t0.c0)/(vt0.c1))  WHEN MIN('') THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) ELSE t0.c0 END, CAST((((vt0.c1, t0.c1, vt0.c1))>((t0.c0, vt0.c1, t0.c1))) AS INTEGER), CAST(json_valid(vt0.c0) AS TEXT) FROM t0 WHERE (CASE WHEN ((0.0855140603397424) BETWEEN (0.9338874770282743) AND (7.2504724E7)) THEN rtreenode(0.5546205002528671, -1906135950) END);SELECT DISTINCT (('0.2363833329623798') NOT BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (((t0.c1)<<(vt0.c1)))) FROM vt0 WHERE (((((')o') ISNULL)) BETWEEN (1.316593508E9 COLLATE RTRIM) AND (('3OOY' IN ()))));SELECT DISTINCT ((CASE t0.c2  WHEN vt0.c1 THEN t0.c1 END)IS(((NULL) NOTNULL))) FROM t0, vt0 LIMIT 284233012; -- 1ms;
SELECT ALL (((vt0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c1 COLLATE RTRIM, vt0.c1, CASE vt0.c0  WHEN t0.c1 THEN '0.5770024465695646' WHEN t0.c2 THEN t0.c0 WHEN NULL THEN t0.c1 END)) AND ((CASE t0.c1  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END, (t0.c1 IN (0.37875039959696033, t0.c1)), '880118398'))) FROM vt0 WHERE ((((TRIM(DISTINCT NULL, '%\')))<((((0Xffffffff9527aa70)LIKE(0.6147230563358149)))))) ORDER BY (vt0.c0 IN (0.6890590614872205, ((t0.c0)<<(t0.c0))));SELECT CAST(((((t0.c2)OR(0.7886540308399204)))OR(t0.c2)) AS NUMERIC), '', LAST_INSERT_ROWID() FROM t0, vt0; -- 0ms;
SELECT ALL STRFTIME(CASE '-2068387229'  WHEN t0.c2 THEN t0.c0 END, ((t0.c2)AND(t0.c0)), GROUP_CONCAT(vt0.c1), COUNT(vt0.c0), rtreenode('x짝', vt0.c0)) FROM vt0, t0 WHERE ((((0xffffffff95cec116, '1319449509', NULL)) NOT BETWEEN ((((0.5769376818682508)+('3Jg{hQ')), ((((0.7780576988994685)OR('')))OR('-2001633152')), ((((NULL)OR(NULL)))AND(NULL)))) AND ((x'', (((x'', 0.13064403601251207, x'16ff')) NOT BETWEEN (('dV', '-890993730', '-620288889')) AND (('-659343135', 0xffffffffdf72678c, NULL))), ((((x'')AND('-1155210236')))OR(0.2363833329623798)))))) GROUP BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL), TRIM(CAST(t0.c1 AS BLOB)), (((t0.c2, t0.c1, x'')) BETWEEN ((t0.c1, ((((vt0.c0)AND(t0.c1)))OR(vt0.c1)), vt0.c0)) AND ((CASE vt0.c1  WHEN t0.c0 THEN '' END, (+ (NULL)), ((vt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1))))) LIMIT 555440224 OFFSET -684893620; -- 1ms;
SELECT (((vt0.c0, t0.c0, t0.c1))=((vt0.c1, vt0.c1, vt0.c1))) COLLATE BINARY, (vt0.c1 IN ()) COLLATE RTRIM, vt0.c0 FROM t0;SELECT ALL (((+ (vt0.c1))) IS FALSE) FROM t0 WHERE (NULLIF(((0X56c47f0f)<<('R,J')), 0.360946984824858));SELECT DISTINCT COUNT((~ (t0.c0))) OVER () FROM t0, vt0 WHERE ((((- (''))) IS TRUE)); -- 0ms;
SELECT ALL t0.c1 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM FROM t0, vt0 WHERE (CASE WHEN '-385952275' THEN x'' END COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0)))LIKE(t0.c1 COLLATE BINARY)), (((- (t0.c2))) BETWEEN (((((((((vt0.c0)OR('72504724')))AND(t0.c2)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(t0.c1 AS BLOB))), (((~ (t0.c2))) NOT NULL) FROM vt0, t0 WHERE (((((NULL)IS NOT(NULL))) BETWEEN ((NULL IN (NULL))) AND (CAST(x'2df3' AS REAL)))); -- 0ms;
SELECT ALL '' FROM t0, vt0 WHERE (NULL); -- 0ms;
SELECT PERCENT_RANK() OVER ( ROWS ((-1.54712818E8) NOTNULL) PRECEDING) FROM vt0; -- 0ms;
SELECT DISTINCT (((+ (t0.c1))) NOT NULL) FROM t0 ORDER BY (- ((t0.c0 IN ()))) DESC; -- 0ms;
SELECT LAG(CASE ((t0.c0) IS TRUE)  WHEN 0.6086282111263103 THEN CASE WHEN vt0.c0 THEN t0.c2 ELSE vt0.c1 END WHEN ((NULL) IS TRUE) THEN ((t0.c2)LIKE(vt0.c0)) WHEN ((t0.c0) NOT NULL) THEN vt0.c1 COLLATE BINARY END, (NULL IN ()) COLLATE NOCASE, ((NULL)/(((t0.c0) IS TRUE)))) OVER () FROM vt0, t0 WHERE (((CAST(NULL AS TEXT)) NOT NULL)) LIMIT 1005898205; -- 0ms;
SELECT (- (t0.c0)) COLLATE RTRIM FROM vt0 WHERE (NULL);SELECT DISTINCT ((((t0.c2) ISNULL)) NOT BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 END) AND (NULL COLLATE RTRIM)) FROM vt0, t0 WHERE (880118398); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE t0.c2 END COLLATE NOCASE, json_extract(((0.5820528371665149)|('jl!j]\n')), x'3208', ((t0.c1) IS FALSE), (('X멍Y')<(vt0.c0))), (- (((((vt0.c1)OR(t0.c0)))AND(0.2237561308288114)))), GROUP_CONCAT(CASE vt0.c1  WHEN t0.c1 THEN t0.c0 END COLLATE BINARY), ((((t0.c0)OR(t0.c0))) ISNULL) FROM t0 FULL OUTER JOIN vt0 ON t0.c1 WHERE ((((('880118398' COLLATE RTRIM)AND('Dh')))AND(((NULL) BETWEEN (x'') AND (x'')))));SELECT DISTINCT t0.c2 FROM t0; -- 1ms;
SELECT DISTINCT (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c2)-(t0.c0)))), ((LIKE(vt0.c0, vt0.c0))OR(((((((((t0.c0)OR(vt0.c1)))AND(t0.c2)))AND(vt0.c0)))OR(t0.c2)))), LEAD(((((t0.c0) IS TRUE)) NOT BETWEEN (CAST(t0.c2 AS TEXT)) AND ((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((t0.c0, 'z\nhhV)W<T', t0.c1)) AND ((vt0.c0, t0.c2, t0.c2))))), (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))AND(((t0.c1)OR(t0.c0)))))AND(((t0.c1) NOT BETWEEN (x'') AND (x'')))), ((((((vt0.c0)OR(t0.c0)))OR(vt0.c0))) NOT NULL)) OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT (~ (SUM(vt0.c0))) FROM t0;SELECT ALL MIN(((t0.c0) BETWEEN (t0.c2) AND (vt0.c0))) FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS REAL) THEN 'u''n\n' COLLATE RTRIM ELSE CASE t0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN 1.804436703E9 WHEN t0.c0 THEN t0.c2 END END  NULLS LAST;SELECT ALL ((((t0.c0 COLLATE NOCASE)AND(CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)))OR('-113508615')) FROM vt0, t0 WHERE (HEX((NOT ('')))); -- 0ms;
SELECT DISTINCT (+ (t0.c2)) COLLATE BINARY FROM vt0, t0 LIMIT 1575723500 OFFSET -1294180975; -- 0ms;
SELECT DISTINCT ((((((((((t0.c1) NOT BETWEEN (vt0.c0) AND (x'')))OR(((vt0.c1)OR(t0.c0)))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))AND((((0.6916605568200259)) NOT BETWEEN ((vt0.c1)) AND ((t0.c1))))))AND((('!6') NOTNULL))) FROM t0;SELECT DISTINCT CAST(((t0.c0) NOTNULL) AS TEXT) FROM vt0;SELECT ALL (((((((((((((((('')AND(t0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(vt0.c1)))AND(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)))AND(CASE t0.c1  WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END)))AND(t0.c1)))AND((NOT (t0.c0)))), COUNT(*), (CASE WHEN '-1646669731' THEN vt0.c1 WHEN t0.c1 THEN vt0.c1 WHEN t0.c1 THEN vt0.c0 ELSE t0.c2 END IN (CAST(t0.c1 AS INTEGER))) FROM t0 LIMIT 1112702908 OFFSET -1462338524;SELECT ((vt0.c0) NOTNULL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS TEXT)  WHEN (+ (vt0.c0)) THEN (t0.c0 IN ()) END, UPPER(CASE vt0.c1  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END), (('G6Z') NOT BETWEEN (((((((((t0.c0)AND(t0.c2)))AND(vt0.c0)))OR(t0.c0)))OR('7y~잺QYA'))) AND (('-1599624190' IN ()))) FROM t0, vt0 ORDER BY (~ (((vt0.c1)<=(t0.c0)))) ASC; -- 0ms;
SELECT ((((((vt0.c1) IS FALSE))AND(SUM(t0.c1))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM t0 WHERE (LOWER(DISTINCT (('15190779') IS TRUE)));SELECT ALL ((((vt0.c1)<(vt0.c1)))>>(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) FROM t0 LIMIT -396068625 OFFSET 615800721;SELECT ALL CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c2 END AS TEXT) FROM t0, vt0; -- 0ms;
SELECT ALL (((t0.c0 IN ())) BETWEEN ((~ (t0.c1))) AND (((((t0.c2)AND(t0.c1)))OR(t0.c2)))) FROM vt0;SELECT ALL LIKE((~ (t0.c2)), TOTAL(t0.c2), '8') FROM t0 WHERE (CAST(TOTAL_CHANGES() AS NUMERIC)) GROUP BY (- (NULL)) HAVING INSTR(TOTAL(vt0.c0), -1.792562576E9 COLLATE RTRIM);SELECT ((((((((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))AND(TOTAL(vt0.c0))))OR((((t0.c2, vt0.c0, t0.c1)) NOT BETWEEN ((t0.c0, 1103162005, vt0.c1)) AND ((t0.c2, t0.c2, vt0.c0))))))OR(vt0.c1)))AND(((t0.c1)LIKE(vt0.c1)))), COUNT(*), (((t0.c1)) BETWEEN ((CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END)) AND ((((((t0.c0)AND(t0.c1)))OR(t0.c0))))) FROM t0 GROUP BY 0Xffffffffcd96f9bf;SELECT DISTINCT (~ (t0.c2)) COLLATE BINARY FROM t0, vt0 WHERE (((CASE ''  WHEN '2033785369' THEN NULL END)IS(x'' COLLATE RTRIM))) ORDER BY (((((((((~ (t0.c0)))AND(t0.c1)))AND(((t0.c1)||(t0.c2)))))OR(((t0.c1)GLOB(vt0.c1)))))AND(((t0.c1) NOT BETWEEN (vt0.c1) AND (0.09797852533822904)))); -- 0ms;
SELECT DISTINCT NULL FROM t0, vt0 WHERE ((((('梳KX5_{J徑Y')>(0xfd2f3d7)))*((('Zl') NOTNULL)))); -- 0ms;
SELECT DISTINCT (((CASE WHEN t0.c2 THEN vt0.c1 END))<>(((t0.c0 IN ())))), CASE WHEN CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c1 WHEN '' THEN t0.c2 END THEN ((vt0.c0)<=(vt0.c0)) ELSE ((vt0.c0)>=(vt0.c1)) END, ((json_object(vt0.c0, t0.c0, t0.c0, vt0.c0)) NOTNULL) FROM t0;SELECT ((((t0.c1)<(vt0.c0)))GLOB(((t0.c0)>=(t0.c0)))) FROM t0;SELECT t0.c2, json_quote(((t0.c2)==(vt0.c0))), COUNT(((t0.c2)<<(t0.c2))) OVER () FROM vt0, t0 WHERE ((((x'', x'', x'e93a')) NOT BETWEEN ((('-709330757' IN ()), (x'' IN ()), ((0.338519067479532)/(0xffffffffd2384aa5)))) AND ((CASE 'wGJ'  WHEN 0X47c71a60 THEN 0.2918321580472052 WHEN 0.015224214258221846 THEN NULL WHEN '-538395668' THEN NULL END, ((x'bc9b')<>(NULL)), (('-400918037') BETWEEN (NULL) AND (NULL)))))) GROUP BY ((((((((-157837798)OR(t0.c0)))AND(vt0.c0)))OR(CASE t0.c0  WHEN t0.c2 THEN x'c402' END)))OR((+ (t0.c1)))); -- 0ms;
SELECT (- (CAST(t0.c0 AS REAL))), (LAST_INSERT_ROWID() IN ()), ((SUM(t0.c2)) IS FALSE) FROM vt0, t0; -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE RTRIM, ((SUM(NULL)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (t0.c1 COLLATE NOCASE)), TOTAL((((t0.c0))!=((t0.c1)))) COLLATE RTRIM FROM t0;SELECT DISTINCT CASE WHEN vt0.c0 COLLATE BINARY THEN ((t0.c0)IS(t0.c2)) WHEN (+ (t0.c2)) THEN (- (vt0.c0)) WHEN (+ (t0.c0)) THEN (((t0.c0, t0.c2, vt0.c1))<>((t0.c1, vt0.c0, vt0.c1))) ELSE t0.c2 END FROM t0 WHERE (CASE WHEN CASE WHEN '#h' THEN '0.321999320054679' WHEN NULL THEN '1926615220' WHEN x'c29f' THEN '1169285875' END THEN (('R㡓Mi켷')%(0Xffffffffd5be78e4)) END) ORDER BY (- ((+ (t0.c0))))  NULLS LAST;SELECT DISTINCT ((GROUP_CONCAT(NULL)) BETWEEN (((vt0.c0)<=(t0.c1))) AND (CAST(t0.c0 AS NUMERIC))) FROM vt0;SELECT DISTINCT (((t0.c1 IN (vt0.c1, vt0.c0)))||(CAST(t0.c2 AS TEXT))) FROM t0 WHERE ((CASE WHEN 'j%^]\n{s}u35[]' THEN '#' WHEN 0.46903948475343005 THEN 0xffffffff9c3caa8d WHEN NULL THEN 0.42010561876760044 END IN ()));SELECT DISTINCT ((((AVG(t0.c2))OR(IFNULL(DISTINCT vt0.c1, NULL))))OR('')), ((json_array(t0.c0, t0.c1)) NOTNULL), ((CASE t0.c1  WHEN vt0.c1 THEN vt0.c1 END)<(HEX(t0.c0))) FROM t0 ORDER BY CASE (((t0.c2))>=((t0.c0)))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END THEN ((t0.c2) NOTNULL) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c1))<=((t0.c2))) WHEN highlight(t0.c0, t0.c0, t0.c1, t0.c2) THEN (NOT (t0.c1)) ELSE TRIM(vt0.c0) END;SELECT CAST((0.18367094645376836 IN ()) AS REAL) FROM vt0, t0 WHERE (((-1.7976931348623157E308 IN ()) IN ())) ORDER BY (('-342897659') IS FALSE)  NULLS LAST, ((((x'') NOT BETWEEN (vt0.c0) AND (t0.c1)))>((t0.c1 IN (t0.c2))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) COLLATE NOCASE FROM vt0;SELECT DISTINCT LAST_VALUE(t0.c0) OVER () FROM vt0, t0 WHERE (CASE ((NULL)<<(0.5181076249285402))  WHEN (NOT ('-429537350')) THEN (((NULL)) NOT BETWEEN ((NULL)) AND ((0.8706291576626434))) END); -- 0ms;
SELECT DISTINCT ((((0xffffffffbfd71c07)LIKE(vt0.c1))) BETWEEN (((t0.c1) BETWEEN (t0.c2) AND ('A5'))) AND ((((t0.c0))>=((vt0.c0))))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c0 IN ())))!=(((- (t0.c1))))) FROM t0 WHERE (((CAST(0.048788270092362085 AS INTEGER))*(CAST('2033785369' AS NUMERIC)))); -- 1ms;
SELECT DISTINCT t0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON (~ ((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT (((((vt0.c1)==(vt0.c1))))==((CASE WHEN t0.c1 THEN t0.c0 WHEN NULL THEN '1658T4668276545949091277T' WHEN '1256145842' THEN vt0.c1 END))) FROM t0;SELECT DISTINCT ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c1))) IS TRUE) FROM t0 WHERE (((CASE 276638919  WHEN '-2137972052' THEN x'c1de' END)LIKE((~ (-233175759)))));SELECT ALL CAST(NULL AS BLOB), COUNT(*), vt0.c1 FROM vt0; -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE, vt0.c0), CAST(((vt0.c0)%(x'')) AS TEXT), DENSE_RANK() OVER () FROM vt0 ORDER BY (('') NOTNULL) ASC  NULLS LAST, CAST(t0.c1 AS REAL) COLLATE BINARY ASC  NULLS LAST, ((CASE vt0.c0  WHEN 0x7856b4a2 THEN vt0.c0 END)&((~ (t0.c2)))) ASC  NULLS LAST LIMIT 214174116 OFFSET 321322732;SELECT ALL ((vt0.c0) BETWEEN (((vt0.c1) BETWEEN (x'44ad') AND (t0.c1))) AND (((vt0.c1)%(vt0.c0)))), t0.c0 COLLATE RTRIM, CASE WHEN ((vt0.c1)=(vt0.c1)) THEN (~ (t0.c2)) WHEN ((((vt0.c1)OR(t0.c1)))OR(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN COUNT(*) THEN (t0.c1 IN (t0.c2)) END FROM vt0 WHERE (((((('', NULL, 'ct')) NOT BETWEEN ((0.7562449750199167, 'f[]|', x'')) AND (('', 0.8166972241328607, '-258818700')))) NOT NULL));SELECT DISTINCT vt0.c0 FROM t0 WHERE (CASE (('1150743647') BETWEEN (x'08cb') AND (-1321236499))  WHEN ((0.08165452649909699) ISNULL) THEN 'P?' END) ORDER BY CAST((((vt0.c0))>=((vt0.c1))) AS REAL) ASC, CAST(t0.c1 AS INTEGER) COLLATE RTRIM ASC;SELECT DISTINCT ((t0.c2 COLLATE BINARY) ISNULL) FROM t0 ORDER BY CASE WHEN (((t0.c1))>=((t0.c1))) THEN ((vt0.c0) NOTNULL) WHEN ((((vt0.c1)AND(t0.c2)))OR(vt0.c1)) THEN CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END WHEN ((vt0.c1) BETWEEN (t0.c2) AND (t0.c0)) THEN vt0.c1 END  NULLS LAST;SELECT DISTINCT ((x'') NOT NULL), (((t0.c1 IN ())) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (QUOTE(t0.c2))), CAST(LIKE(vt0.c1, t0.c0, 'e') AS BLOB) FROM t0;SELECT ((NULLIF(DISTINCT t0.c1, t0.c0))>(CASE t0.c1  WHEN vt0.c0 THEN t0.c2 ELSE vt0.c1 END)) FROM t0 WHERE (((((NULL) NOTNULL))IS(((x'')/(1368509305)))));SELECT ALL LAG(((vt0.c1)IS NOT(t0.c1)) COLLATE BINARY, ((((json_object(t0.c1, vt0.c0, vt0.c1, t0.c1))OR(((t0.c0) BETWEEN (x'aa3c64d9') AND (t0.c2)))))OR(((((t0.c0)AND(t0.c2)))AND(vt0.c1)))), ((CASE NULL  WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN '759373470' ELSE vt0.c0 END)/(-1.570770687E9))) OVER () FROM vt0, t0 NOT INDEXED;SELECT DISTINCT ((AVG(t0.c2)) BETWEEN (((t0.c0)=(t0.c2))) AND (vt0.c0)), ((((((((((t0.c2) IS FALSE))OR(((t0.c0)<>(vt0.c1)))))AND(CAST(vt0.c0 AS BLOB))))AND(CASE vt0.c0  WHEN t0.c1 THEN vt0.c1 ELSE t0.c2 END)))OR(CASE WHEN vt0.c1 THEN t0.c0 ELSE t0.c2 END)), COUNT(*) FROM vt0, t0 WHERE (((((((0.42823133225488097)AND(NULL)))AND(x'cd96')))>(CAST(0.1227597274226826 AS REAL)))); -- 1ms;
SELECT (((t0.c2) BETWEEN (vt0.c1) AND (1.056202555E9)) IN ((((t0.c2))>=((t0.c0))))), CASE vt0.c0  WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN t0.c1 ELSE t0.c2 END COLLATE BINARY, IFNULL(CAST(vt0.c1 AS TEXT), (NOT (vt0.c1))) FROM t0, vt0 WHERE ((+ ((NOT (x''))))); -- 0ms;
SELECT ((((t0.c2))<>((vt0.c1))) IN (((vt0.c0)LIKE(vt0.c0)))) FROM t0;SELECT ALL (MAX(t0.c1) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 LIMIT -154712818; -- 0ms;
SELECT DISTINCT load_extension(((t0.c2)|(vt0.c0))), vt0.c1, RANK() OVER () FROM t0, vt0 WHERE (((((0.8551823989641766))<(('-M+'))) IN ())); -- 0ms;
SELECT ALL ((((t0.c2) NOT NULL)) BETWEEN (json_type(x'cc9f')) AND (CASE WHEN t0.c1 THEN t0.c2 END)) FROM t0 GROUP BY ((((((((((t0.c1) IS FALSE))AND(CAST(t0.c1 AS TEXT))))AND((~ (t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR('|SxK')), ((((vt0.c1) BETWEEN (t0.c1) AND (t0.c0))) BETWEEN ((+ (t0.c0))) AND (t0.c0)), (((0.1227597274226826))==(((NOT (vt0.c1)))));SELECT CAST(vt0.c0 AS TEXT) COLLATE NOCASE COLLATE NOCASE, ((IFNULL(t0.c0, t0.c1)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c1) AND (t0.c1))) AND (json_patch(vt0.c0, vt0.c0))), TOTAL((+ (t0.c2))) FROM t0 ORDER BY (('445223358') NOTNULL) COLLATE RTRIM DESC;SELECT DISTINCT CASE (((vt0.c0))=((t0.c2)))  WHEN ((t0.c1) NOT BETWEEN (NULL) AND (NULL)) THEN ((t0.c1)IS(t0.c0)) ELSE t0.c0 END FROM t0;SELECT DISTINCT CAST(((t0.c1) ISNULL) AS INTEGER), (((t0.c2 IN ())) IS TRUE), ((vt0.c1) IS FALSE) FROM t0;SELECT DISTINCT COUNT(*) OVER ( RANGE BETWEEN (~ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) PRECEDING AND  UNBOUNDED FOLLOWING) FROM t0 WHERE ((SQLITE_COMPILEOPTION_GET(NULL) IN ()));SELECT DISTINCT ((((((((((t0.c1)>(vt0.c1)))OR(((vt0.c1) BETWEEN (t0.c0) AND (x'')))))OR(UPPER(t0.c2))))AND(CASE vt0.c0  WHEN NULL THEN NULL WHEN vt0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 END)))OR(IFNULL(t0.c0, t0.c1))) FROM vt0;SELECT DISTINCT LAST_VALUE(((((t0.c2) BETWEEN (0.4542407062857361) AND (vt0.c0))) BETWEEN (((t0.c1) NOTNULL)) AND ((((t0.c0, vt0.c1, NULL)) NOT BETWEEN ((t0.c2, t0.c2, vt0.c1)) AND ((t0.c2, t0.c2, t0.c0)))))) OVER (), (((((t0.c2, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, x'', t0.c0)) AND ((t0.c1, t0.c1, t0.c1))))*(((vt0.c0)GLOB(t0.c0)))), (((((+ (vt0.c0)))AND(((0.5120795615493251) NOT NULL))))OR(x'')) FROM t0, vt0; -- 0ms;
SELECT ALL AVG(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT t0.c1, t0.c2, vt0.c1 FROM t0 WHERE ((~ ((('-1508879550') IS FALSE))));SELECT DISTINCT (~ (((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)))), DENSE_RANK() OVER (), t0.c0 FROM vt0 WHERE (CASE WHEN CASE WHEN x'3b18' THEN x'' END THEN ((x'')%(0.6059747342610501)) WHEN (('') NOT NULL) THEN CASE '72504724'  WHEN '\r<?7' THEN NULL WHEN NULL THEN '' WHEN NULL THEN 0.8882547104351319 ELSE 0.886467291000311 END WHEN (('0.1352780095700098')<(x'')) THEN CAST('' AS NUMERIC) END) GROUP BY vt0.c0 HAVING TOTAL(((vt0.c1) BETWEEN (t0.c1) AND (t0.c0)));SELECT DISTINCT TRIM(IFNULL(DISTINCT vt0.c1, t0.c2)), (CAST(vt0.c1 AS INTEGER) IN ()), SUM(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END) OVER () FROM t0;SELECT DISTINCT (((MAX(t0.c1)))>=((((((vt0.c0)AND(t0.c0)))AND(t0.c1))))), HEX((~ (t0.c0))), ((((vt0.c1)||(t0.c0))) ISNULL) FROM vt0, t0 WHERE (CAST(NULL AS BLOB)); -- 0ms;
SELECT DISTINCT JULIANDAY(TOTAL(t0.c0), -2010753992, (~ (t0.c0))) FROM vt0 WHERE ((~ ('{~.>'))) UNION SELECT DISTINCT (- (CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)) FROM vt0, t0 WHERE (']<');SELECT DISTINCT 'ﳖYF犺mK0ꂦ%' COLLATE RTRIM FROM t0 WHERE (((CASE x''  WHEN '' THEN 0Xffffffffe6b3b6e2 END)IS NOT(((0.07402192020995291) ISNULL)))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c2 AS BLOB)) NOT BETWEEN ((((t0.c0, vt0.c1, vt0.c0))>((vt0.c0, vt0.c1, NULL)))) AND (CAST(vt0.c1 AS INTEGER))) FROM t0 WHERE (CAST('#C' AS REAL) COLLATE RTRIM);SELECT (((0.43331020858118463))>((vt0.c0))), MAX(((vt0.c1)*(t0.c2))), PERCENT_RANK() OVER ( RANGE  CURRENT ROW) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((t0.c2)==(t0.c2)) IN ()) FROM vt0, t0 LIMIT 1663569614 OFFSET 1412910419; -- 0ms;
SELECT DISTINCT (((((t0.c1 IN ()))OR(0.6120963635829489)))OR(((((t0.c1)OR(vt0.c0)))AND(vt0.c1)))) FROM t0;SELECT ALL (1381704194 IN ()) FROM t0 INDEXED BY i81 WHERE (((((x'')LIKE('-1492402390'))) NOT BETWEEN (((0.9413681128010349)-(0.6155893602217423))) AND ((('562552455')OR('-1401064408'))))) GROUP BY vt0.c0 HAVING IFNULL(DISTINCT ((((((((t0.c0)AND(x'')))OR(t0.c1)))OR(vt0.c0)))OR(t0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 END);SELECT ALL (((t0.c2, t0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1 COLLATE BINARY, ((vt0.c0)<=(vt0.c0)), CASE t0.c2  WHEN t0.c2 THEN t0.c1 END)) AND ((CASE vt0.c1  WHEN t0.c1 THEN vt0.c1 END, (t0.c0 IN (t0.c2, vt0.c0)), ((((t0.c0)OR(t0.c0)))AND(vt0.c1))))), (((NULL)>=(t0.c1)) IN (t0.c1, CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c2 END)), ((t0.c2 COLLATE BINARY)||(TYPEOF(t0.c0))) FROM vt0, t0 GROUP BY CAST(CAST(t0.c2 AS BLOB) AS NUMERIC) ORDER BY NULLIF(CASE t0.c1  WHEN t0.c2 THEN NULL END, ((t0.c2) IS TRUE)) ASC; -- 0ms;
SELECT ALL MAX((~ (0x7d3ccf57))) FROM vt0, t0 INDEXED BY i11 GROUP BY ((CAST(t0.c2 AS INTEGER))GLOB(CASE vt0.c1  WHEN t0.c0 THEN t0.c1 ELSE '-v' END)) HAVING t0.c1 COLLATE BINARY; -- 0ms;
SELECT ALL MIN(LIKELIHOOD(DISTINCT t0.c2, 0.8957239152325752)) FROM t0 GROUP BY CAST(((vt0.c0)&(t0.c2)) AS INTEGER), (+ (t0.c2)) COLLATE RTRIM, NULL;SELECT DISTINCT (TOTAL(t0.c0) IN ()) FROM t0 LIMIT -1698555291; -- 0ms;
SELECT ALL CAST(((t0.c1)<=(vt0.c1)) AS TEXT) FROM vt0, t0 WHERE (CAST(-1002728867 AS NUMERIC)); -- 0ms;
SELECT ((((t0.c2)OR(vt0.c1)))OR(t0.c0)) COLLATE NOCASE FROM t0, vt0 WHERE (('' IN ())) GROUP BY CASE (~ (t0.c2))  WHEN (t0.c1 IN ()) THEN (((vt0.c0)) BETWEEN (('''*')) AND ((vt0.c0))) END HAVING COUNT(*) COLLATE RTRIM; -- 0ms;
SELECT (((vt0.c0, vt0.c1, t0.c1)) BETWEEN (((vt0.c0 IN ()), (NOT (vt0.c1)), ((t0.c0) BETWEEN (vt0.c0) AND (t0.c2)))) AND ((((t0.c1)&(x'e98e')), ((vt0.c1) NOT BETWEEN ('1367384621') AND (t0.c0)), IFNULL(t0.c1, vt0.c1)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((((MAX(t0.c0))AND(DATE(t0.c0, t0.c2, '2073947169'))))AND((vt0.c1 IN ()))), (+ (0.9921565262423385)), ((((vt0.c1) NOT NULL)) ISNULL), NULL, (~ (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 ELSE '-1351814868' END)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c1 THEN t0.c2 END COLLATE NOCASE, ((((CAST(vt0.c1 AS NUMERIC))OR((t0.c0 IN ()))))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), LEAD(json_array_length(CAST(vt0.c1 AS TEXT)), ((vt0.c0) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND (((vt0.c0)>=(vt0.c1)))), vt0.c1) OVER () FROM vt0 WHERE (LIKELIHOOD(DISTINCT 0.6218231706999003 COLLATE BINARY, 0.04284896376625713));SELECT DISTINCT ((MAX(t0.c1, t0.c0)) BETWEEN (MAX('')) AND (((vt0.c0)&(t0.c0)))) FROM t0, vt0 WHERE (2032242527); -- 0ms;
SELECT DISTINCT json_type(CAST(t0.c0 AS REAL)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((t0.c1)LIKE(t0.c1)))=(((t0.c1) ISNULL)))) OVER () FROM t0 WHERE ((((('-1125438809')<=(x'5198'))) NOT BETWEEN ((0.9015462872373923 IN (0.6328073635552933))) AND (CAST(x'e125' AS TEXT)))); -- 0ms;
SELECT DISTINCT (- ((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((t0.c1)<(t0.c1)) AS REAL) FROM t0; -- 0ms;
SELECT ALL t0.c1 FROM vt0, t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE 'x肀wy'  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c1)<(vt0.c1)) ELSE ((vt0.c1)<>(vt0.c1)) END, (((vt0.c0)%(vt0.c1)) IN (NULL, ((vt0.c0) ISNULL)))) OVER () FROM vt0 INDEXED BY i54;SELECT DISTINCT (((t0.c0))==((LIKELY(DISTINCT t0.c1)))) FROM t0; -- 0ms;
SELECT ALL CAST(SQLITE_COMPILEOPTION_USED(t0.c2) AS BLOB) FROM vt0 NATURAL JOIN t0 WHERE ((~ (((NULL) NOT BETWEEN ('0.4124471544231737') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((('-1002728867'))<((t0.c1))) FROM vt0, t0 WHERE ((((NULL, 'yZ', '-1326449507', 1776768222, x'')) BETWEEN ((CAST(0.29190535057011324 AS NUMERIC), (('') NOT BETWEEN (x'') AND (1.722583475E9)), (((NULL))>=((0.40224711324195495))), CASE WHEN 0.07958110766557813 THEN NULL END, (NULL IN (NULL, 2031306509)))) AND ((((-8.60817595E8)AND(NULL)), (+ ('WDp6|wx\')), (~ (NULL)), ((NULL) NOT BETWEEN (x'2c2e') AND (x'')), ((0.7979930841513188)<>('1804436703')))))) LIMIT 1975209538; -- 0ms;
SELECT DISTINCT TOTAL((- (t0.c0))) FROM vt0;SELECT (((((t0.c1, t0.c0, t0.c2)) BETWEEN ((t0.c0, vt0.c1, t0.c0)) AND ((t0.c1, vt0.c1, t0.c0))))>=((~ (t0.c0)))) FROM vt0;SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))<(((t0.c1)>=(vt0.c1)))), CAST(LIKELIHOOD(DISTINCT t0.c2, 0.7984043913559967) AS REAL), t0.c0 FROM t0, vt0 WHERE (((COALESCE(0x496ac6e6, '1575723500'))AND(NULL))); -- 5ms;
SELECT DISTINCT t0.c2 FROM vt0;SELECT DISTINCT SUM(vt0.c0) OVER () FROM vt0 GROUP BY CAST(((((x'')AND(vt0.c1)))AND(t0.c1)) AS INTEGER) HAVING MIN(((0.20418209002056387) NOT NULL), t0.c0, ((6.62502894E8) NOT BETWEEN (vt0.c1) AND (t0.c2)), ((t0.c2)<=(vt0.c1)));SELECT DISTINCT (((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((COALESCE(t0.c2, t0.c1, vt0.c1, vt0.c0, t0.c1, t0.c0), (((t0.c2, t0.c2, -1992052665))=((t0.c1, t0.c1, vt0.c0))), ((NULL) IS TRUE))) AND ((NULL, (((t0.c0))==((t0.c2))), x''))), CASE WHEN t0.c2 THEN x'' WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE, ((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END)<>(t0.c0 COLLATE BINARY)) FROM t0 WHERE (((('2056329816' IN (0xffffffffbe8fb31e, x'')))IS(((x'')>('xi'))))) GROUP BY INSTR(((t0.c2)&(t0.c2)), (+ (t0.c0)));SELECT DISTINCT DATE(vt0.c1, vt0.c0, t0.c2, t0.c2, vt0.c0) COLLATE BINARY FROM t0 WHERE (((('6W1땮Bd_.') NOTNULL) IN ())) ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS REAL))) AND ((SQLITE_SOURCE_ID())))  NULLS FIRST;SELECT DISTINCT NULL, (((((- (t0.c2)))OR(((vt0.c0)>=(t0.c1)))))AND(((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c0)))), SUM(CAST(t0.c2 AS BLOB)) FROM vt0 WHERE ((((NULL) IS TRUE) IN ()));SELECT DISTINCT ((t0.c0)!=(AVG(t0.c0))) FROM t0 WHERE (((CASE WHEN NULL THEN NULL ELSE -1643387333 END)+(CASE NULL  WHEN '' THEN NULL WHEN x'9ac0' THEN '-270652668' WHEN 0.14615887054213217 THEN '0.5247655887344311' END))) GROUP BY ((CAST(t0.c0 AS INTEGER))=(((t0.c0)+(vt0.c1))));SELECT TOTAL((NOT (t0.c0)) COLLATE RTRIM) OVER ( GROUPS BETWEEN (+ (((t0.c1)|(t0.c0)))) FOLLOWING AND  CURRENT ROW EXCLUDE TIES) FROM t0 WHERE (((NULL COLLATE BINARY) BETWEEN (((x'') NOT NULL)) AND (((x'59044721') NOT BETWEEN (NULL) AND (''))))) GROUP BY ((((((((((((vt0.c0)OR(t0.c2 COLLATE BINARY)))AND(((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))))OR(((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)))))OR((t0.c2 IN (t0.c2)))))OR(((t0.c0) BETWEEN (t0.c2) AND (t0.c2)))))OR(t0.c0)) HAVING CASE ((vt0.c0) ISNULL)  WHEN AVG(t0.c1) THEN vt0.c1 END;SELECT CAST('I3}K7hz*' AS TEXT) COLLATE RTRIM FROM t0 WHERE (LIKE(((0.30912957354865345) IS FALSE), CAST(NULL AS NUMERIC))); -- 0ms;
SELECT NULL FROM t0 NOT INDEXED, vt0; -- 0ms;
SELECT ALL (((vt0.c1) NOT NULL) IN ()) FROM t0, vt0 WHERE (NULL); -- 0ms;
SELECT ALL (~ (TRIM(t0.c1))), x'3a97', (((vt0.c1 IN ()))LIKE(CAST('' AS NUMERIC))) FROM vt0;SELECT GROUP_CONCAT(HEX(vt0.c1)), ((LOWER(DISTINCT t0.c2))GLOB((t0.c0 IN (vt0.c1)))), ((((t0.c2)&(t0.c1)))&(CAST(t0.c0 AS REAL))) FROM vt0, t0; -- 0ms;
SELECT CASE (NOT (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN CAST(t0.c0 AS TEXT) ELSE SUM(vt0.c0) END, vt0.c1 COLLATE NOCASE, SQLITE_COMPILEOPTION_GET(CASE WHEN x'' THEN t0.c1 ELSE t0.c2 END) FROM vt0 WHERE (1804436703);SELECT ALL UPPER(DISTINCT CAST(vt0.c1 AS INTEGER)) FROM t0;SELECT ((vt0.c1 IN ()) IN (AVG(t0.c0), t0.c0 COLLATE BINARY)) FROM vt0, t0 WHERE (((-1.540103967E9 COLLATE BINARY)>=(((0.03438952937543749) NOT BETWEEN (x'') AND (x''))))); -- 0ms;
SELECT ALL ((x'')>(LIKELIHOOD(DISTINCT vt0.c1, 0.4422727629107551))), (((((t0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c1))))!=(t0.c2)), (UNLIKELY(t0.c1) IN ()) FROM t0 WHERE ((((NULL) BETWEEN (0.7921805373633489) AND (NULL)) IN (CASE -113508615  WHEN 0.2236127939122763 THEN '-1990693798' WHEN '6*WN' THEN 0X6e9b67b0 WHEN x'' THEN NULL END, 0.46251487146348036 COLLATE RTRIM)));SELECT ALL SUM(CASE t0.c1  WHEN t0.c1 THEN vt0.c1 ELSE t0.c1 END), CAST(t0.c2 COLLATE RTRIM AS INTEGER), NULLIF((NOT (vt0.c0)), UNLIKELY(t0.c0)) FROM vt0;SELECT DISTINCT t0.c2, NTILE(NULL) OVER (), (((x'') NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()), TOTAL(((t0.c0)*(t0.c2))) OVER (), (((t0.c2 IN ())) IS FALSE) FROM t0, vt0 WHERE (((CASE WHEN NULL THEN -832944019 WHEN NULL THEN -6.4806407E8 WHEN x'' THEN x'b99b' ELSE '-384444616' END)<(((((x'')OR(0.42996916821969366)))AND(0.2524625950423508))))) GROUP BY '-1869923045' HAVING SQLITE_VERSION(); -- 0ms;
SELECT ((MIN(vt0.c0))IS(((t0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM t0, vt0; -- 0ms;
SELECT ALL ((t0.c1)GLOB(vt0.c1)) COLLATE RTRIM FROM t0, vt0; -- 0ms;
SELECT DISTINCT AVG(((t0.c1)&(vt0.c0))) FILTER(WHERE t0.c0) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t0, vt0 WHERE ((((- (0.658793471313823))) NOT BETWEEN (((0.4119259805793545)=(x''))) AND (CAST('' AS NUMERIC)))); -- 1ms;
SELECT DISTINCT (NOT ((vt0.c1 IN ()))) FROM vt0; -- 0ms;
