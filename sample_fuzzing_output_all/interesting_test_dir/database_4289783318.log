-- Time: 2024/06/07 00:40:38
-- Database: database18
-- Database version: 3.40.0
-- seed value: 4289783318
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR FAIL INTO rt0 VALUES ('[]', '91846027', '-1712259135'); -- 1ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, 0.26467635782142107, NULL); -- 0ms;
ANALYZE rt0; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR FAIL rt0 SET c2='91846027'; -- 1ms;
INSERT OR REPLACE INTO rt0(c0, c1, c2) VALUES ('1765668694', '', 0.509419859988505), (NULL, 0.30428768048334187, x''), ('0.26467635782142107', NULL, '81168794'); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES (NULL, 0.9437647180453234); -- 0ms;
VACUUM temp; -- 1ms;
PRAGMA main.busy_timeout = 0; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', x'2616', '-R'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.9437647180453234 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.609427298584399); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.41446272729862144 WHERE ((LENGTH(rt0.c0))IS((rt0.c0 IN ()))); -- 2ms;
PRAGMA cache_spill = true; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=x'c6fc9996', c0=0.9437647180453234; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES (0x4d6899a, ''); -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE TABLE t0 (c0 INTEGER ); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.6498756528442182, c0=0.7125846706346559; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.854178424561945); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1765668694,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE INDEX i17 ON t0('81168794' ASC); -- 0ms;
CREATE INDEX i85 ON t0(IFNULL(((c0)=(c0)), ((c0)*(c0)))) WHERE (((c0 IN (c0, c0))) NOTNULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1242742953); -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(0xfffffffff6383efe); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('1765668694'), ('-1546715721'), (-1.712259135E9); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c73; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.509419859988505); -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0)=(1379520642, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='81168794' WHERE (NOT (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))); -- 0ms;
UPDATE OR REPLACE t0 SET (c73, c73)=(NULL, -1.712259135E9); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(x'da88', 0.6498756528442182) WHERE ((((rt0.c0)<=(x''))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (((rt0.c2) NOTNULL))); -- 0ms;
PRAGMA temp.wal_autocheckpoint = 7146124847087185742; -- 0ms;
REINDEX  vt0; -- 0ms;
ALTER TABLE t0 ADD COLUMN c1 TEXT; -- 1ms;
UPDATE vt0 SET c0='_狦u+X7+zG' WHERE (((~ (vt0.c0)))=(vt0.c0)); -- 0ms;
UPDATE OR REPLACE rt0 SET c1=0.23647414721646265 WHERE ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))%((((rt0.c1))>=((rt0.c0))))); -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
END TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('F.Wx]s>g') WHERE load_extension((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, 0.47315916830613336, vt0.c0))), ((NULL) ISNULL)); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='F.Wx]s>g', c1=0xffffffff9723abf5; -- 1ms;
REINDEX BINARY; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (NULL); -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
CREATE INDEX i33 ON t0((((((c1)<=(c1)), CAST(c73 AS REAL), CASE c73  WHEN 0X520bd847 THEN x'' END, '	', ((c73) NOTNULL)))<=((CASE WHEN c1 THEN c73 WHEN c73 THEN c73 WHEN c73 THEN '-1489469097' ELSE c1 END, ((((NULL)AND('u}AO')))AND(c1)), CAST(c1 AS NUMERIC), CAST(c1 AS REAL), ((c1)=(c1))))),CHAR(CASE WHEN c1 THEN c73 WHEN c1 THEN c1 WHEN c1 THEN c73 END) COLLATE BINARY ASC); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(x'e4dc') WHERE t0.c73 COLLATE RTRIM; -- 1ms;
ALTER TABLE t0 ADD COLUMN c69 TEXT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
REINDEX; -- 0ms;
PRAGMA locking_mode; -- 0ms;
UPDATE vt0 SET (c0)=(x'') WHERE CAST(GLOB(vt0.c0, vt0.c0) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 1ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES ('-1759269899', 'xS'); -- 0ms;
UPDATE OR FAIL rt0 SET c1=x'02c5'; -- 0ms;
PRAGMA integrity_check; -- 0ms;
UPDATE rt0 SET (c0)=(x'05bc') WHERE x''; -- 0ms;
ALTER TABLE t0 ADD COLUMN c76 REAL; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL, c0=0.9483554519151726, c1='0.30428768048334187'; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.24133869539399833, 0.3372317696827848); -- 0ms;
PRAGMA wal_autocheckpoint = -4058624252701449657; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c2) VALUES (-164086018, x'ff4a'), (0.330632412823084, 0.6370116535566251), (0.25296942283351886, 0.7212882637535584); -- 0ms;
REINDEX i85; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19114'); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-1351215197); -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i40 ON t0(((((c76)!=(c1)))=(CAST(c69 AS REAL))) DESC,('1379520642' IN ()) COLLATE NOCASE DESC,(((c76 IN (c76))) NOT BETWEEN (c76 COLLATE NOCASE) AND ((c73 IN (c76)))) COLLATE BINARY,0.0348930245705521 DESC); -- 0ms;
CREATE INDEX i22 ON t0((((c69)IS(x'')) IN ()) ASC,c69 COLLATE RTRIM,(('91846027') IS TRUE),(~ (((c76)%(c73))))) WHERE ((CASE WHEN c1 THEN c76 WHEN c76 THEN c76 WHEN c1 THEN c69 ELSE 0.6803762909117257 END)>=(((c73)-(c69)))); -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO t0(c69) VALUES (NULL); -- 0ms;
UPDATE t0 SET c1=x'1b55', c73=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 815978794); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.15192980387032906); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (0xffffffffc8c23e41, x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(x'', 0.07222703816358234) WHERE (((((rt0.c1))<=((rt0.c0)))) IS TRUE); -- 1ms;
ALTER TABLE t0 ADD COLUMN c75 INT CHECK ( 9.1846027E7); -- 1ms;
UPDATE vt0 SET (c0, c0)=(NULL, ''); -- 1ms;
INSERT OR IGNORE INTO t0(c1, c73, c69, c76) VALUES (x'8052', NULL, NULL, x'b0b5'); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('y#'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (-1.351215197E9), (0.7323089834007184); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c73) VALUES (x'', 0.038735258019091945), (0x693df756, NULL), ('mk', x''); -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT AVG((rt0.c0 IN (t0.c76))) OVER () FROM vt0, t0, rt0 WHERE (((((((x'')AND(0.8876250682530183)))OR('mb'))) NOT BETWEEN (((1376507975) NOTNULL)) AND (0.18086170277925273))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=835679762,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16433'); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES ('狦 G{~'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -908039269);\n; -- 0ms;
COMMIT; -- 0ms;
PRAGMA optimize; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (NULL); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR ABORT vt0 SET c0=NULL; -- 1ms;
INSERT OR FAIL INTO t1(c76, c1, c69, c75) VALUES (-1.712259135E9, 0x6ba9f0b4, 0.2425871368533593, '-388838664'); -- 0ms;
PRAGMA temp.default_cache_size = 1326828786; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('1379520642', '', 'y#'), (x'', '0.41446272729862144', ''), ('', x'', NULL); -- 0ms;
INSERT OR FAIL INTO t1(c75, c1, c76, c69, c73) VALUES (NULL, '1279280293', 853263453, x'', '853263453'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26259'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE t1 SET c75=0.6459662274595172 WHERE CASE ((t1.c73)|(t1.c1))  WHEN t1.c1 COLLATE BINARY THEN x'' ELSE (t1.c75 IN (t1.c1, t1.c69)) END; -- 0ms;
UPDATE t1 SET c76=NULL WHERE t1.c76; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33294'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (NULL), ('.T'); -- 1ms;
UPDATE OR FAIL rt0 SET c1=x'e2c0'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 880429144);\n; -- 0ms;
UPDATE OR IGNORE t1 SET c73=NULL WHERE ((((t1.c76) BETWEEN (t1.c76) AND (t1.c73))) ISNULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA main.optimize; -- 0ms;
END; -- 0ms;
REINDEX; -- 1ms;
DELETE FROM t1 WHERE CAST(((((((((x'86cd')AND(t1.c73)))AND(-1546715721)))OR(t1.c76)))AND(t1.c75)) AS NUMERIC); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((((vt0.c0, t1.c1, vt0.c0)) BETWEEN ((NULL, t1.c1, rt0.c2)) AND ((t1.c75, rt0.c1, t1.c75)))) NOTNULL), LEAD((('223876663') NOTNULL), ((HEX(rt0.c0)) BETWEEN (((NULL)<<(vt0.c0))) AND (((rt0.c0)OR(rt0.c0)))), (((vt0.c0)) BETWEEN ((((((NULL)AND(rt0.c1)))OR(vt0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 'gOL\rG]柲' END)))) OVER (), ((0.41382390864927066) BETWEEN (((t1.c73)OR('0.509419859988505'))) AND (CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c75 ELSE v0.c0 END)) FROM rt0, v0, vt0;SELECT ALL MAX(((NULL) BETWEEN (t1.c76) AND (t1.c73))) FROM t1, vt0, rt0, v0; -- 163ms;
SELECT DISTINCT TOTAL((((t1.c1)) BETWEEN ((NULL)) AND ((t1.c73)))) OVER (), ((CAST(v0.c0 AS TEXT)) IS FALSE), ('M?cL' IN ()) FROM t1, v0, vt0, rt0 WHERE (LIKELIHOOD(DISTINCT (0Xffffffff9aa1bb32 IN ()), 0.7274430279010405)); -- 1ms;
SELECT ((SUBSTR(NULL, t1.c76)) ISNULL) FROM v0 GROUP BY ((CAST(t1.c76 AS REAL)) BETWEEN (CASE WHEN t1.c76 THEN '91846027' ELSE v0.c0 END) AND (((t1.c1)>=(t1.c73)))), (((x''))>=((vt0.c0 COLLATE NOCASE))), (((((t1.c75))>=((t1.c73)))) IS TRUE) HAVING (~ (t1.c69));SELECT DISTINCT ((((rt0.c0)AND(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t1.c75 WHEN vt0.c0 THEN rt0.c0 END)))AND(v0.c0)) FROM rt0, vt0 GROUP BY ((t1.c76 COLLATE BINARY) BETWEEN (((t1.c75) ISNULL)) AND (x'0d88')) HAVING t1.c69;SELECT DISTINCT MAX(0.06579909329483202), ((MIN(t1.c76)) ISNULL), ((((((x'', t1.c1, rt0.c0))<=((t1.c76, t1.c69, '0.9437647180453234')))))!=((MIN(rt0.c1)))) FROM rt0, v0, t1; -- 26ms;
SELECT ((vt0.c0 COLLATE BINARY) ISNULL) FROM rt0, v0, t1, vt0 GROUP BY ((0.7323089834007184)LIKE(vt0.c0)) HAVING (+ (TYPEOF(v0.c0))); -- 1000ms;
SELECT DISTINCT ((t1.c76 COLLATE RTRIM)<=(v0.c0 COLLATE NOCASE)) FROM v0 WHERE (CASE NULL COLLATE BINARY  WHEN '853263453' THEN ((NULL) BETWEEN (0.292824401527928) AND (0.9271043682168166)) WHEN (('-1546715721')|(x'')) THEN ('' IN ()) WHEN 1.806299316E9 THEN (8.53263453E8 IN ()) END) ORDER BY TRIM(((t1.c69)>=(rt0.c0))) ASC;SELECT DISTINCT '5C>ys\n䒥' FROM rt0 WHERE (((((-9.26794175E8) BETWEEN (0.11488721195070906) AND (0.25520489013686065))) IS TRUE)); -- 19ms;
SELECT DISTINCT CHAR('1522692199') FROM vt0, rt0, v0; -- 1ms;
SELECT DISTINCT (t1.c69 COLLATE NOCASE IN ()) FROM t1 WHERE (((((CASE WHEN x'' THEN x'' END)OR((('')<(NULL)))))AND(CAST('k\r1*싼e/Yi' AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((((t1.c75) BETWEEN (vt0.c0) AND ('-R'))) NOT BETWEEN (x'') AND (rt0.c2 COLLATE RTRIM)) FROM t1 FULL OUTER JOIN rt0 ON ((0.8202457736354393)OR((v0.c0 IN ())));SELECT DISTINCT 'O[ᕮ?3-_CJ', ((AVG(rt0.c2)) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (AVG(t1.c76))), ((((rt0.c1) BETWEEN (t1.c75) AND (rt0.c0)))>=(((((t1.c1)OR(t1.c76)))AND(t1.c73)))) FROM v0, vt0;SELECT DISTINCT (+ ((((v0.c0, x'', rt0.c0))>((rt0.c0, rt0.c0, t1.c73))))) FROM t1, v0, vt0;SELECT ALL (((rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (t1.c69) AND (vt0.c0)))) AND (('-476341558'))) FROM rt0, v0, vt0, t1; -- 1ms;
SELECT DISTINCT ((((AVG('j}m*S 瑷'))OR(((t1.c75) BETWEEN (t1.c73) AND (t1.c76)))))OR(COUNT(t1.c76))) FROM v0, rt0, t1 WHERE ((NOT ((('d&Uu賷fw') ISNULL)))); -- 10ms;
SELECT ALL LAST_VALUE((((vt0.c0 IN (NULL))) BETWEEN (UNICODE(vt0.c0)) AND (((vt0.c0) BETWEEN (x'') AND (vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT x'771e' FROM vt0 WHERE (((((NULL)>('m䒥-'))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((NOT (t1.c73)))LIKE('0c￁p1/^61')) FROM vt0 WHERE ((NOT ('1174138131')));SELECT DISTINCT ((((CASE WHEN t1.c76 THEN v0.c0 END)AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE t1.c76 END)))AND(rt0.c0 COLLATE BINARY)) FROM v0, t1;SELECT DISTINCT 0.7323089834007184, json_patch(CASE WHEN t1.c1 THEN t1.c75 WHEN 0.4433355994044461 THEN t1.c76 WHEN t1.c69 THEN t1.c76 ELSE rt0.c0 END, ((t1.c73) IS TRUE)), 0.8038230414511592 COLLATE BINARY, (~ ((- (vt0.c0)))), ((NULL)IS(CASE t1.c75  WHEN x'' THEN t1.c69 END)) FROM rt0, v0, vt0 WHERE (MIN(CASE WHEN NULL THEN '0c￁p1/^61' END, (('-1476476164') NOT BETWEEN (0.25520489013686065) AND ('1692265141'))));SELECT DISTINCT NTH_VALUE((((t1.c1 IN (t1.c76, t1.c75))) BETWEEN (((0.0348930245705521) NOT BETWEEN (t1.c75) AND (v0.c0))) AND (CAST(t1.c75 AS TEXT))), CASE ((t1.c76) NOTNULL)  WHEN '' THEN vt0.c0 ELSE LIKELY(t1.c75) END) OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM v0, vt0, t1 WHERE (((((((0.7909440375824816)*(0.6149307312262362)))AND(('-1476476164' IN ()))))OR(CAST(0.7540026733455656 AS INTEGER)))); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS BLOB)  WHEN MIN(t1.c75) THEN COUNT(t1.c75) WHEN (- (t1.c73)) THEN ((t1.c1) IS TRUE) WHEN (t1.c75 IN ()) THEN ((t1.c1)<(t1.c73)) ELSE CASE WHEN vt0.c0 THEN t1.c73 END END FROM v0, t1, vt0, rt0 GROUP BY ((0xffffffffc663f83b)>=((t1.c73 IN ()))) HAVING CASE t1.c1 COLLATE BINARY  WHEN ((((((((t1.c1)AND(t1.c1)))OR(rt0.c0)))OR(t1.c1)))AND(rt0.c2)) THEN (vt0.c0 IN (rt0.c1, rt0.c1)) WHEN ((rt0.c0) NOT BETWEEN (t1.c75) AND (v0.c0)) THEN ((((((((((((rt0.c2)AND(t1.c75)))OR(t1.c76)))OR(t1.c1)))OR(0.24135758416828468)))OR(t1.c1)))OR(v0.c0)) WHEN (NULL IN (v0.c0)) THEN ((v0.c0)GLOB(vt0.c0)) WHEN rt0.c2 THEN CAST(rt0.c1 AS BLOB) WHEN LIKELY(rt0.c0) THEN MAX(vt0.c0) ELSE TYPEOF(rt0.c2) END; -- 991ms;
SELECT DISTINCT '' COLLATE RTRIM, (((rt0.c0)) NOT BETWEEN ((t1.c69)) AND ((rt0.c1))) COLLATE RTRIM, ((CASE t1.c73  WHEN 0X2f96e4c6 THEN t1.c75 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE t1.c69 END)<(CAST(v0.c0 AS NUMERIC))), CAST('!A' AS NUMERIC), (CAST(t1.c76 AS NUMERIC) IN ()) FROM v0, t1;SELECT ALL json_insert(x'16aa', CAST(rt0.c2 AS REAL), ((vt0.c0) NOT NULL), 'b~', 'mdn~') FROM rt0, t1, v0 GROUP BY ((CAST(v0.c0 AS INTEGER)) BETWEEN (x'') AND ((((rt0.c0, t1.c1, rt0.c1))==((-1.476476164E9, rt0.c0, rt0.c1))))) HAVING ((CAST(rt0.c2 AS INTEGER))|(((t1.c73)OR(''))));SELECT DISTINCT TRIM(DISTINCT rt0.c2) COLLATE BINARY FROM t1;SELECT ALL MIN(TRIM(DISTINCT vt0.c0, v0.c0)) FROM t1, vt0, v0 ORDER BY x''; -- 50ms;
SELECT NTILE(CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) AS REAL)) OVER (), DENSE_RANK() OVER (), (((CASE t1.c73  WHEN t1.c73 THEN rt0.c0 END, rt0.c2 COLLATE RTRIM, MIN(t1.c75)))<=((CASE v0.c0  WHEN rt0.c0 THEN t1.c1 END, LIKELY(DISTINCT t1.c1), (t1.c75 IN ())))) FROM rt0 LIMIT -831911806 OFFSET 1404594162;SELECT DISTINCT rt0.c1, TRIM((t1.c73 IN ())), CASE ((t1.c1) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN (~ (t1.c76)) THEN t1.c76 END FROM vt0 WHERE ((((x''))<=((NULL))) COLLATE RTRIM COLLATE RTRIM);SELECT DISTINCT (((((((((((('J}M*S 瑷')AND(t1.c69)))AND(vt0.c0)))OR(CAST(v0.c0 AS NUMERIC))))AND(AVG(t1.c76))))OR(((rt0.c0) NOT NULL))))AND(((((t1.c73)OR(t1.c76)))OR(rt0.c2)))), t1.c69, ((((t1.c75)>>(t1.c73))) ISNULL) FROM rt0, t1, v0, vt0 WHERE (CASE WHEN (((x'c473'))>=(('-908039269'))) THEN ((0.7443958335276781) IS FALSE) ELSE ((0xffffffff9aa1bb32) NOT NULL) END); -- 0ms;
SELECT DISTINCT (('0K⦗?B') NOT BETWEEN ((+ (rt0.c1))) AND ((('893999362') NOT BETWEEN (t1.c69) AND (1223037672)))) FROM vt0, t1, v0 WHERE ((((2.23876663E8)>=(x'')) IN ()));SELECT DISTINCT (+ (((t1.c76)=(x'')))) FROM vt0, rt0, v0, t1 WHERE (((CAST('*' AS NUMERIC))<>(x''))); -- 1ms;
SELECT DISTINCT ((((rt0.c1)OR(v0.c0))) BETWEEN (((rt0.c0) BETWEEN (v0.c0) AND ('1522692199'))) AND (((t1.c1) NOTNULL))), (((((((0.8876250682530183, vt0.c0, t1.c1)) NOT BETWEEN ((rt0.c1, t1.c1, t1.c73)) AND ((rt0.c2, rt0.c0, v0.c0))))AND(t1.c1)))AND(MIN(t1.c1))), 0Xffffffffaf99d223, 0.191612941208112, ((((((t1.c76)) NOT BETWEEN ((vt0.c0)) AND ((t1.c69)))))==((((t1.c69) IS FALSE)))) FROM t1, v0, vt0 WHERE (((((((((((0.3886263118591865)AND(x'')))AND(0.5451472749827024)))OR(NULL)))OR(NULL)))AND(IFNULL(x'', x'4a760fc3'))));SELECT DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE FROM vt0, rt0 GROUP BY ((CAST(t1.c73 AS REAL)) NOT BETWEEN (((NULL)>=(x''))) AND (((t1.c73)<>(rt0.c1)))) LIMIT -1741397088 OFFSET 784235539;SELECT DISTINCT AVG(CASE v0.c0  WHEN t1.c73 THEN t1.c1 ELSE vt0.c0 END) OVER () FROM vt0, rt0, v0, t1; -- 440ms;
SELECT DISTINCT 0.8781635234346373 FROM t1, v0, rt0 WHERE ((('1376507975') NOTNULL) COLLATE BINARY); -- 1ms;
SELECT ALL (((json_object(vt0.c0, rt0.c1), (~ (rt0.c1)), ((((t1.c1)OR(t1.c69)))AND(v0.c0))))<>(((+ (t1.c75)), (((t1.c75))>((t1.c69))), ((rt0.c2) NOT NULL)))) FROM v0, vt0 WHERE (((('-2111303423')) NOT BETWEEN ((CAST('-1020336950' AS TEXT))) AND ((CAST(1279280293 AS TEXT)))));SELECT DISTINCT ((((((((t1.c73)OR(t1.c76)))AND(rt0.c0)))AND(((vt0.c0) ISNULL))))OR((NOT (rt0.c1)))) FROM t1, vt0, rt0, v0 WHERE (CAST(((x'')-(x'')) AS REAL)); -- 0ms;
SELECT DISTINCT CAST('~aE <&' AS REAL), UNLIKELY(rt0.c1), AVG(((t1.c1)*(t1.c69))) OVER ( ORDER BY CAST(((((((((v0.c0)AND(rt0.c2)))OR(-1.564595817E9)))AND(t1.c1)))OR(rt0.c2)) AS BLOB)) FROM t1, vt0, rt0, v0 WHERE (((x'')>>(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (NOT (CASE t1.c73  WHEN t1.c73 THEN vt0.c0 ELSE t1.c76 END)), CASE WHEN t1.c1 THEN rt0.c0 END COLLATE BINARY, (((MAX(NULL)))!=(((~ (x''))))) FROM rt0;SELECT DISTINCT ((t1.c75 COLLATE BINARY) NOT NULL), v0.c0, ((((((t1.c1)%(vt0.c0)))OR(((rt0.c0) ISNULL))))AND(((((v0.c0)AND(t1.c69)))OR(vt0.c0)))), (((((0.6803762909117257 IN ()))AND(((rt0.c2)OR(t1.c1)))))AND(CASE t1.c1  WHEN 'k	P' THEN v0.c0 END)), ((((((((((t1.c75)OR(t1.c69)))AND(v0.c0)))OR(rt0.c1)))OR(vt0.c0))) NOT BETWEEN ((- (NULL))) AND (LIKELY(v0.c0))) FROM vt0;SELECT DISTINCT t1.c73, CASE WHEN ((v0.c0) BETWEEN (rt0.c0) AND (t1.c1)) THEN v0.c0 END, (~ (((rt0.c0) NOTNULL))) FROM vt0, t1, v0, rt0 WHERE (NULL) ORDER BY ((((('Eh5⹈')AND(rt0.c2))))<((((rt0.c1)<=(v0.c0))))) DESC; -- 0ms;
SELECT DISTINCT ((((v0.c0)<(rt0.c1)))/((~ (NULL)))), ((vt0.c0) ISNULL), COUNT(CASE WHEN t1.c75 THEN rt0.c1 ELSE '-2089391436' END) OVER ( RANGE ((((TYPEOF(t1.c75))OR((((t1.c69)) NOT BETWEEN ((vt0.c0)) AND ((81168794))))))AND(MAX(rt0.c0, vt0.c0))) PRECEDING EXCLUDE NO OTHERS) FROM v0 WHERE (((NULL)+(x'6b89')) COLLATE BINARY);SELECT DISTINCT CASE WHEN (~ (rt0.c2)) THEN (x'' IN (t1.c75, rt0.c2)) ELSE t1.c76 COLLATE RTRIM END FROM rt0;SELECT ALL CASE WHEN (('1595575187') BETWEEN (vt0.c0) AND (vt0.c0)) THEN (+ (t1.c75)) ELSE ((t1.c73)>(t1.c76)) END, ((((((t1.c73) IS TRUE))AND(((t1.c76) ISNULL))))OR(UNICODE(t1.c1))), (((((v0.c0 IN (x'', rt0.c2)))AND(((t1.c75)OR(rt0.c2)))))OR((((t1.c1, rt0.c2, 0.3981805090724534))<=((t1.c1, t1.c76, '880429144'))))) FROM t1, rt0, vt0, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((NOT (rt0.c1))) OVER () FROM v0, vt0, rt0, t1 WHERE (((NULL) IS FALSE) COLLATE RTRIM) LIMIT 1530925159; -- 0ms;
SELECT ALL (((vt0.c0) IS FALSE) IN ()) FROM rt0, v0 WHERE (MIN(((0.5184053496084027)GLOB(x'')), IFNULL(0X324794f7, NULL))) GROUP BY x'' HAVING (((x'1c71', rt0.c1, v0.c0)) NOT BETWEEN ((t1.c69 COLLATE RTRIM, (('') NOT BETWEEN (t1.c69) AND (rt0.c2)), CAST(rt0.c2 AS BLOB))) AND ((((t1.c1) NOTNULL), GROUP_CONCAT(v0.c0), (~ (t1.c75)))));SELECT (t1.c1 IN ()) COLLATE NOCASE FROM vt0, t1 WHERE (((((((((NULL)AND('g(np#G')))AND('\rn')))AND((+ (0.9623422167827338)))))OR(((0.02277367742357772) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS TEXT))<=(((t1.c1)=(rt0.c2)))) FROM t1 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN 'Y59﮷>V' WHEN (('455204382')IS(0.588372734453667)) THEN (- ('-1759269899')) WHEN '\n7' COLLATE NOCASE THEN CASE 0.7443958335276781  WHEN NULL THEN '1522692199' WHEN 0.8908540427634988 THEN x'' WHEN NULL THEN NULL END ELSE ((NULL) IS TRUE) END);SELECT ((rt0.c1) BETWEEN (t1.c1) AND ('PtD䬯!S')) COLLATE NOCASE FROM t1, rt0, vt0, v0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, v0 WHERE (CASE ((x'a770') IS TRUE)  WHEN (~ (0x3f43eba5)) THEN ((NULL) IS TRUE) WHEN (((NULL))<>(('91846027'))) THEN (+ (0xffffffff8c04a4d3)) WHEN (('1926182601') ISNULL) THEN (('')AND(0x41145d7f)) ELSE CAST('m!㻟~lP*' AS NUMERIC) END); -- 0ms;
SELECT DISTINCT ((CAST('K+' AS NUMERIC))*(t1.c1)) FROM rt0, vt0, v0 WHERE ((((((-708828390 IN ()))AND(NULL COLLATE BINARY)))OR('1389805578' COLLATE RTRIM))) GROUP BY v0.c0;SELECT DISTINCT t1.c69, CAST(((((rt0.c0)OR(v0.c0)))AND(rt0.c1)) AS TEXT), UNLIKELY((((t1.c76)) BETWEEN ((t1.c1)) AND ((rt0.c0)))) FROM rt0, t1, v0; -- 0ms;
SELECT ALL (((((- (t1.c69)))OR((t1.c1 IN ()))))OR(t1.c75)) FROM vt0, t1 WHERE (((CAST(0xffffffff9a54467d AS BLOB))OR(843081582))); -- 0ms;
SELECT (((v0.c0 IN ()))LIKE(CASE t1.c69  WHEN rt0.c0 THEN t1.c73 WHEN t1.c1 THEN rt0.c0 WHEN t1.c1 THEN vt0.c0 END)) FROM v0, rt0 WHERE (CAST(((((0.6632563580825719)OR('')))OR('1269637812')) AS NUMERIC));SELECT ((((((((((rt0.c0)AND(t1.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(t1.c73)))||((rt0.c0 IN (t1.c76, 0xffffffffa3cefdb7)))), ((((rt0.c2) BETWEEN (t1.c69) AND (t1.c75))) BETWEEN ((NULL IN (rt0.c2))) AND (((rt0.c1) IS FALSE))), CAST('' AS INTEGER) FROM rt0, vt0, t1 ORDER BY (((((~ (vt0.c0)))AND(t1.c75 COLLATE NOCASE)))OR(x'')) LIMIT 1734089309; -- 1ms;
SELECT DISTINCT CASE x''  WHEN CASE x''  WHEN rt0.c2 THEN t1.c75 WHEN vt0.c0 THEN t1.c75 WHEN vt0.c0 THEN NULL WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN 0.9456470845169213 ELSE vt0.c0 END THEN CAST(rt0.c2 AS REAL) ELSE LIKELIHOOD(NULL, 0.6414205902485753) END FROM v0, rt0, t1 LIMIT -794143923 OFFSET 1794805737;SELECT ((0xffffffffbca45b39)AND((((t1.c69))<=((t1.c76))))) FROM vt0, v0;SELECT DISTINCT CASE ((t1.c73) IS FALSE)  WHEN v0.c0 COLLATE RTRIM THEN CAST(rt0.c0 AS NUMERIC) WHEN v0.c0 THEN CAST('Nn' AS NUMERIC) WHEN (+ (t1.c76)) THEN (+ (t1.c75)) ELSE ((t1.c69)/(vt0.c0)) END FROM vt0, rt0 WHERE (HEX(DISTINCT (~ ('1895561861')))) GROUP BY json_array(((rt0.c1)<=(rt0.c1)), t1.c73) HAVING (CASE t1.c1  WHEN t1.c73 THEN v0.c0 ELSE t1.c75 END IN ()) LIMIT -1366162323 OFFSET -1787963574;SELECT ALL AVG(((rt0.c1) BETWEEN (rt0.c1) AND (t1.c1))), COUNT(*), ((MAX(v0.c0)) IS TRUE) FROM vt0, v0 WHERE (CASE WHEN ((('-699880267', x'3a08', ''))<(('', 'av.i', ''))) THEN (~ (x'')) ELSE (((NULL))>=((x'da46'))) END);SELECT DISTINCT GROUP_CONCAT(((t1.c1) NOT NULL)) OVER () FROM rt0 WHERE (x'') LIMIT -1613054371 OFFSET 9223372036854775807;SELECT DISTINCT (((t1.c75)) BETWEEN (((rt0.c1 IN ()))) AND ((TOTAL(t1.c75)))), CAST(t1.c75 AS INTEGER), rt0.c1 COLLATE RTRIM, NTH_VALUE(((vt0.c0 COLLATE BINARY)>((NOT (0.7212882637535584)))), STRFTIME(vt0.c0, vt0.c0, vt0.c0) COLLATE RTRIM) OVER (), CASE (- (rt0.c0))  WHEN CASE WHEN t1.c69 THEN 0.7835871527512882 END THEN t1.c73 ELSE CAST(t1.c75 AS BLOB) END FROM vt0 ORDER BY LIKELIHOOD((- (t1.c1)), 0.834073622267451) ASC;SELECT t1.c75, COUNT((~ (v0.c0))), (((((NOT (t1.c75)))AND(t1.c1 COLLATE BINARY)))AND(CAST(rt0.c2 AS INTEGER))) FROM rt0, v0, t1 LIMIT 1255814440 OFFSET -1457708487; -- 5ms;
SELECT DISTINCT CASE WHEN t1.c1 THEN t1.c1 WHEN NULL THEN '893999362' WHEN t1.c1 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN t1.c75 END COLLATE NOCASE, ((((('0.7909440375824816', t1.c69, x'')) BETWEEN ((t1.c73, t1.c69, vt0.c0)) AND ((t1.c76, t1.c75, t1.c69))))IS(CAST(rt0.c1 AS INTEGER))), (((((v0.c0)) BETWEEN ((t1.c73)) AND ((t1.c73)))) BETWEEN (((t1.c76)AND(t1.c73))) AND (((v0.c0)&(t1.c76)))) FROM rt0, vt0 WHERE ((((NULL)<=('')) IN ()));SELECT AVG(((v0.c0) NOT BETWEEN (t1.c75) AND (rt0.c1)) COLLATE RTRIM) OVER () FROM v0;SELECT ALL GROUP_CONCAT(AVG(rt0.c1) COLLATE NOCASE) FROM rt0, v0, t1;SELECT DISTINCT t1.c69, CASE WHEN CAST(v0.c0 AS REAL) THEN rt0.c0 ELSE ((vt0.c0)OR('0.609427298584399')) END, (((((rt0.c1))<>((rt0.c2)))) BETWEEN (t1.c69) AND (((rt0.c2)<<(t1.c75)))) FROM v0, t1, vt0, rt0 GROUP BY CAST((vt0.c0 IN (x'cca0')) AS TEXT) HAVING (- (CHANGES())); -- 864ms;
SELECT ALL ((ABS(t1.c69))IS NOT(MIN(t1.c73))) FROM rt0 WHERE ((((('*')LIKE(NULL)))GLOB(NULL COLLATE RTRIM))) GROUP BY '' HAVING CAST(rt0.c0 COLLATE RTRIM AS TEXT);SELECT ALL (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (t1.c75))))<=((((v0.c0) BETWEEN (t1.c76) AND (v0.c0))))), (MIN(t1.c75, t1.c73) IN ()), CAST((t1.c76 IN ()) AS REAL) FROM vt0, v0, rt0, t1 WHERE ((((('-1775788070')>=('-1'))) IS FALSE)); -- 21ms;
SELECT COUNT((('') BETWEEN (t1.c73) AND (vt0.c0))) FROM vt0;SELECT CAST(t1.c1 AS NUMERIC), '637949943', CUME_DIST() OVER (), ((((LIKELY(t1.c69))AND((~ (vt0.c0)))))OR(CAST(t1.c73 AS BLOB))), x'6ca1' FROM t1, rt0, vt0; -- 7ms;
SELECT ALL (('409560081') NOT BETWEEN (((rt0.c0) NOT NULL)) AND (TYPEOF(t1.c76))) FROM rt0, vt0, t1; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY ((CASE WHEN rt0.c0 THEN t1.c76 ELSE rt0.c2 END)OR(t1.c73 COLLATE NOCASE)) DESC, TRIM(t1.c75, ((v0.c0)%(v0.c0))), CASE WHEN ((rt0.c1)=(rt0.c1)) THEN ((t1.c75) NOT NULL) WHEN ((rt0.c2)=(rt0.c1)) THEN ((t1.c76)!=(vt0.c0)) WHEN v0.c0 THEN (((rt0.c2, t1.c75, v0.c0))>=((NULL, t1.c1, 1.94068191E8))) ELSE ((rt0.c0)=(v0.c0)) END ASC), (((t1.c76, rt0.c2, t1.c75)) BETWEEN ((TOTAL(t1.c76), TIME(v0.c0, t1.c73, t1.c1), t1.c76)) AND ((((((t1.c1)OR(t1.c69)))AND(v0.c0)), TOTAL(t1.c69), ((rt0.c0) BETWEEN (t1.c75) AND ('-1004783020'))))), (CAST(rt0.c1 AS BLOB) IN (rt0.c0 COLLATE BINARY)) FROM v0, vt0, t1;SELECT ALL ((((t1.c76) NOT NULL))-(LAST_INSERT_ROWID())) FROM vt0, v0 WHERE (((((-127086575)||(0X22cec673))) NOT NULL));SELECT DISTINCT COUNT(*) OVER (), (((((t1.c76 IN ()))OR(CASE rt0.c0  WHEN t1.c76 THEN t1.c75 END)))OR(rt0.c1)), (((rt0.c1)|(v0.c0)) IN (TOTAL(t1.c69), ((t1.c75) BETWEEN (NULL) AND (rt0.c1)))) FROM rt0, v0, vt0, t1; -- 88ms;
SELECT DISTINCT LEAD(((((rt0.c0)*(rt0.c1))) IS FALSE), 0.8132174144927536, (('439982550') BETWEEN (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c2)OR(rt0.c2))))) OVER () FROM rt0 GROUP BY ((json_valid(t1.c75))*(CAST(t1.c75 AS NUMERIC)));SELECT ALL (+ (AVG(t1.c76))), FIRST_VALUE(((HEX(t1.c69)) ISNULL)) OVER ( GROUPS (NOT (((t1.c1) IS FALSE))) PRECEDING), ((IFNULL(rt0.c2, vt0.c0)) BETWEEN ((NOT (t1.c76))) AND (((((t1.c75)OR(v0.c0)))AND(t1.c69)))) FROM t1, rt0, vt0;SELECT ((((((rt0.c0)>>(rt0.c2)))AND(LIKELIHOOD(DISTINCT t1.c73, 0.44414193964135673))))OR(((t1.c1) BETWEEN (t1.c1) AND (t1.c73)))), COUNT(*) OVER (), ((vt0.c0)*(t1.c75)) COLLATE NOCASE FROM t1, vt0 ORDER BY ((((t1.c69) IS FALSE)) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 ELSE t1.c69 END) AND (((t1.c76)>=(t1.c76)))) DESC;SELECT ALL COUNT(*) FROM rt0, t1, vt0 GROUP BY (((t1.c76) NOTNULL) IN ()) HAVING NULLIF(((0.35579867510385355)GLOB(rt0.c2)), ((t1.c69) IS FALSE)); -- 0ms;
SELECT ALL (t1.c69 IN ()) COLLATE BINARY FROM vt0, v0, t1, rt0 WHERE ((((((((((((x'')) BETWEEN ((0.1774556148301375)) AND ((NULL))))OR((- (x'5ee7')))))OR(((0.52932395870007) NOT BETWEEN (x'5b609ad3') AND ('1170367851')))))OR(CAST(x'85b3' AS BLOB))))OR(('x)Cne' IN ())))); -- 1ms;
SELECT v0.c0, ((((((t1.c73) BETWEEN (t1.c75) AND (t1.c69)))AND(CAST(x'04bacba4' AS NUMERIC))))AND(t1.c69)), CASE WHEN NULL THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c69))) END FROM rt0, t1, vt0, v0 WHERE (((('nme꯵<^d')) BETWEEN ((CASE x'f97b'  WHEN 1383172003 THEN '邀tI9' WHEN '1765668694' THEN '1861215924' WHEN '*Z' THEN '' ELSE NULL END)) AND (((~ (x'59f4')))))); -- 0ms;
SELECT ((v0.c0) NOTNULL) FROM t1, v0, rt0, vt0 WHERE (0.02636605168750239); -- 1ms;
SELECT DISTINCT ((t1.c1 COLLATE BINARY)!=(rt0.c2 COLLATE NOCASE)) FROM vt0 WHERE (((LENGTH(0.9659494562434923))LIKE(UPPER(DISTINCT 0.679041395897085))));SELECT DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (t1.c1)) COLLATE NOCASE FROM v0, t1;SELECT DISTINCT COUNT(*) OVER () FROM vt0, v0, t1 WHERE (x''); -- 0ms;
SELECT DISTINCT '-7900078' COLLATE BINARY, (~ (((t1.c1) NOT NULL))), ABS(IFNULL(v0.c0, t1.c76)) FROM v0, rt0, t1, vt0 WHERE ((((x'' IN ('1522692199')))+((0.6277022313815596 IN ())))); -- 0ms;
SELECT DISTINCT ((x'')IS(((((t1.c69)AND(rt0.c2)))OR(rt0.c0)))) FROM vt0 NOT INDEXED, t1, rt0 NOT INDEXED WHERE (((((((0.44735278951682866)AND(4.55204382E8)))OR(1440545578))) BETWEEN ((((x'', x'', x'e883')) BETWEEN ((NULL, 0.21423973627388848, '-1741397088')) AND ((x'6032', 0Xffffffffea298cf7, 'GZiB毐')))) AND (NULL))); -- 0ms;
SELECT DISTINCT ABS((((0x32a16bd0)) BETWEEN ((t1.c73)) AND ((t1.c69)))) FROM rt0 WHERE ((((+ ('-1331880077'))) NOT BETWEEN (((0.5942959185460481)+(NULL))) AND (((((0.330632412823084)AND('SAA}W<>o')))OR(NULL))))) GROUP BY '' HAVING ((((t1.c76)<>(t1.c1)))OR((t1.c76 IN ())));SELECT DISTINCT AVG(load_extension(t1.c75, vt0.c0)), DENSE_RANK() OVER (), TOTAL(vt0.c0) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt0 WHERE ((((((((((('')<(0Xffffffffa0877031)))AND((('-143378372') NOTNULL))))AND('1e500')))AND(((('y#', 0.36874443954082603, NULL))>((-1564595817, x'6619', 0.6324712041329226))))))AND(ABS(0.5760347043688049))));SELECT CAST(t1.c75 AS NUMERIC) FROM rt0, v0;SELECT DISTINCT AVG(((NULL)>=(rt0.c0))) OVER (), CASE WHEN 0.5207276895507651 THEN COUNT(t1.c75) ELSE CAST(vt0.c0 AS INTEGER) END, (((((t1.c76))!=((rt0.c0)))) NOT NULL) FROM rt0, t1;SELECT DISTINCT ((('553030821' IN ()))LIKE(((((((((t1.c1)OR(t1.c76)))OR(t1.c73)))OR(vt0.c0)))AND(t1.c1)))) FROM v0, rt0, t1;SELECT ALL CASE WHEN rt0.c1 THEN t1.c75 END COLLATE RTRIM, SUM((rt0.c2 IN ())), ((t1.c1)%(t1.c73)) COLLATE BINARY FROM t1;SELECT DISTINCT ((LAST_INSERT_ROWID()) BETWEEN (HEX(t1.c73)) AND (CASE v0.c0  WHEN rt0.c0 THEN t1.c69 ELSE t1.c76 END)) FROM t1, v0;SELECT ALL COUNT(((t1.c76)AND(t1.c75))) OVER ( ORDER BY CAST((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c73, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c2, '880429144'))) AS REAL) DESC), ((t1.c73) BETWEEN (vt0.c0) AND ((~ (rt0.c1)))), ((((0.7155174597251541)%(rt0.c2))) BETWEEN (((NULL)>=(t1.c73))) AND (((rt0.c0)&(t1.c73)))) FROM t1, vt0;SELECT ((rt0.c1 COLLATE BINARY)/(COUNT(*))) FROM v0, t1, vt0 WHERE (CASE x'4674' COLLATE RTRIM  WHEN CAST(0Xffffffffcbb6a39b AS TEXT) THEN SQLITE_VERSION() ELSE ((1091853695)GLOB(0X53b867f2)) END);SELECT ALL (((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((CASE t1.c1  WHEN x'' THEN rt0.c2 ELSE t1.c73 END))), ((((v0.c0) ISNULL)) IS TRUE), SUM((NOT (t1.c75)) COLLATE NOCASE) FROM rt0, v0, t1, vt0 WHERE (CAST((((0.7702632442860011, NULL, NULL))>=((x'', 0.883278104344135, x''))) AS INTEGER)); -- 0ms;
SELECT DISTINCT NULL FROM v0, t1 LIMIT -7900078 OFFSET -962902196; -- 1ms;
SELECT ALL t1.c76, x'', ((SUBSTR(v0.c0, v0.c0)) ISNULL) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((t1.c1) NOT BETWEEN (t1.c75) AND (rt0.c2)), (~ (vt0.c0))), (- ((v0.c0 IN (t1.c76, rt0.c0)))), (~ (v0.c0)) COLLATE NOCASE FROM v0, rt0, t1, vt0 WHERE (((((0.06499849843078132)<(NULL))) NOT NULL)); -- 0ms;
SELECT ALL NTH_VALUE('-975188539' COLLATE BINARY, IFNULL(t1.c76, (('1376507975') NOT BETWEEN (v0.c0) AND (t1.c73)))) OVER (), COUNT(*) OVER (), ((TRIM(vt0.c0, t1.c75))OR(COUNT(t1.c75))) FROM t1, vt0, v0;SELECT DISTINCT ABS(DISTINCT CASE rt0.c0  WHEN NULL THEN v0.c0 ELSE vt0.c0 END) FROM v0, vt0;SELECT DISTINCT ((v0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((vt0.c0)OR(t1.c73)))AND(rt0.c0)))OR(t1.c1)))AND(t1.c69))) AND (((((rt0.c1)OR(t1.c75)))OR(rt0.c1)))), ((MIN(v0.c0, t1.c76))OR(CAST(t1.c75 AS NUMERIC))), (t1.c69 COLLATE BINARY IN ()) FROM t1 WHERE ((((+ ('0.2425871368533593'))) NOT BETWEEN (CASE WHEN NULL THEN 0.8666806850760698 WHEN x'' THEN 0.5312844238645825 WHEN '-877223013' THEN '1389805578' ELSE NULL END) AND ((((x''))>=(('f潠쀊螣')))))) ORDER BY v0.c0 DESC;SELECT DISTINCT ROW_NUMBER() OVER () FROM v0 WHERE ((((- ('')))-((NOT (NULL))))); -- 0ms;
SELECT DISTINCT (((t1.c1)) BETWEEN ((t1.c73)) AND ((rt0.c2))) COLLATE BINARY FROM vt0 GROUP BY ((((('-708828390'))>=((rt0.c1))))*(((t1.c76) NOTNULL)));SELECT DISTINCT ((SUM(t1.c1))*(((t1.c69)*(t1.c73)))), t1.c75, (((t1.c69) NOT BETWEEN (t1.c75) AND (t1.c1)) IN ()), (((t1.c69 IN ())) IS FALSE), (((- (t1.c1))) IS FALSE), ((t1.c73) NOT BETWEEN (vt0.c0) AND (0x1a6bde9)) COLLATE NOCASE, (((((rt0.c2) NOT NULL)))<>((t1.c73))) FROM vt0, t1, rt0; -- 0ms;
SELECT CASE (rt0.c0 IN ())  WHEN COALESCE(t1.c1, rt0.c1) THEN x'9df7' END FROM rt0 WHERE (CAST(CASE WHEN 0.08975929231598123 THEN 0x691a162d WHEN '32793682' THEN 0.9073582108159938 WHEN x'' THEN '0.6149307312262362' ELSE 0.8361835679414054 END AS TEXT));SELECT DISTINCT ((CASE t1.c73  WHEN v0.c0 THEN t1.c76 END)>=(((t1.c1) BETWEEN (t1.c73) AND (v0.c0)))) FROM rt0, t1, vt0 WHERE (LOWER(CASE x'e66d'  WHEN '0.7212882637535584' THEN 0.26753451557803964 WHEN '' THEN 2.23876663E8 WHEN '1895561861' THEN NULL ELSE NULL END)) ORDER BY CASE WHEN HEX(rt0.c0) THEN (- (t1.c76)) WHEN 0.4433355994044461 THEN CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE t1.c73 END WHEN ((t1.c76)OR(v0.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE t1.c75 COLLATE BINARY END DESC  NULLS LAST;SELECT DISTINCT x'' FROM t1, v0; -- 1ms;
SELECT DISTINCT ((v0.c0) NOT BETWEEN (t1.c75) AND ('#PY.w6r>')) COLLATE NOCASE FROM rt0, v0 WHERE ((((((0.862440409546005)) NOT BETWEEN ((x'')) AND ((x'fd21')))) NOT BETWEEN (json_remove(0xffffffffccf187f8, 1593156842)) AND (0.20859505114403754 COLLATE BINARY)));SELECT GROUP_CONCAT(CAST(rt0.c2 AS REAL)) OVER () FROM vt0, rt0, t1 ORDER BY json_insert(((rt0.c2) IS FALSE), (('650070337')=(x'')), ((rt0.c1) NOTNULL))  NULLS FIRST;SELECT ALL UNLIKELY(COUNT(*)), ROW_NUMBER() OVER ( ORDER BY (((- (rt0.c2))) NOT BETWEEN ((((t1.c69, rt0.c0, t1.c76)) BETWEEN ((t1.c69, rt0.c1, t1.c73)) AND ((t1.c76, rt0.c1, t1.c69)))) AND ((rt0.c0 IN ()))) ASC  NULLS FIRST, ((CASE WHEN t1.c73 THEN rt0.c0 ELSE rt0.c0 END) BETWEEN ((((v0.c0, vt0.c0, t1.c1))>((rt0.c0, rt0.c2, v0.c0)))) AND ((- (x''))))), CUME_DIST() OVER () FROM rt0;SELECT DISTINCT ((HEX(DISTINCT rt0.c2)) NOT NULL) FROM v0, t1 WHERE (((ABS(''))>>('-1945852717')));SELECT ALL IFNULL(t1.c73, NULL) COLLATE BINARY FROM rt0, v0, vt0, t1 NOT INDEXED; -- 1ms;
SELECT CAST((((x'')) BETWEEN ((t1.c1)) AND ((rt0.c2))) AS TEXT) FROM rt0, vt0 WHERE (((((((((((x'')<<(0.5131844881793898)))AND(((NULL)!=(x'22b2')))))OR(json_array_length(NULL, 0xffffffffb99721d4))))AND(((0.684188778371768) ISNULL))))AND((((0.8556979795482066, 81168794, NULL))<=(('1174138131', x'', '-1815968924')))))) GROUP BY ((((((t1.c1) ISNULL))AND(json_type(t1.c75))))AND(t1.c73));SELECT ALL (((v0.c0)>=(t1.c76)) IN ()) FROM vt0, rt0 WHERE (-1.351215197E9); -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS TEXT)) FROM t1, v0, vt0, rt0; -- 108ms;
SELECT DISTINCT CAST(ROUND(t1.c69, rt0.c1) AS BLOB) FROM vt0, t1;SELECT DISTINCT (NOT (((t1.c76)/(v0.c0)))) FROM rt0, t1 WHERE (((CAST(NULL AS BLOB)) ISNULL));SELECT DISTINCT (((+ (rt0.c1)))IS NOT(t1.c73 COLLATE BINARY)), ((((rt0.c1) BETWEEN (rt0.c1) AND (NULL))) ISNULL), (((~ (t1.c75)))IS(((t1.c1)||(t1.c69)))) FROM vt0, rt0, t1, v0 WHERE ((((((x'', 8.53263453E8, 0.3926846977315721)) BETWEEN ((x'3f8e5a38', '賊|i흊M\rB', 0.7993051136258946)) AND ((x'', NULL, '8c'))))|(((x'') NOT BETWEEN (x'') AND (1093447163))))); -- 1ms;
SELECT DISTINCT ((t1.c73) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (0.5293710756645108)), t1.c76, (CAST(t1.c1 AS BLOB) IN ()), FIRST_VALUE(0.5760347043688049) OVER ( ORDER BY ((x'f1242e70cc8d') NOTNULL)), rt0.c0 COLLATE NOCASE FROM t1, rt0, v0, vt0; -- 1043ms;
SELECT ALL CAST(json_extract(rt0.c2, t1.c69) AS INTEGER) FROM vt0, rt0, v0, t1 WHERE (UNLIKELY(CAST(0.9024609862472666 AS TEXT))); -- 1ms;
SELECT DISTINCT (((rt0.c2 IN ()))>=(((((v0.c0)AND(vt0.c0)))OR(t1.c69)))), ((((((t1.c73)OR(t1.c75)))AND(rt0.c2)))&(CAST(rt0.c2 AS NUMERIC))), (NOT (((((((((t1.c69)OR(rt0.c2)))AND(t1.c69)))OR(rt0.c1)))AND(t1.c69)))), ((((((((((((((((CASE WHEN rt0.c2 THEN t1.c1 END)AND(MIN(rt0.c0))))OR(COUNT('-794143923'))))AND((- ('-516006372')))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (t1.c1)))))AND((((v0.c0)) BETWEEN ((t1.c69)) AND ((NULL))))))OR(t1.c1 COLLATE NOCASE)))AND('/Dga*g)/')))OR(t1.c73)), (((((((((((('pF4H')AND(((t1.c76) BETWEEN (v0.c0) AND (t1.c1)))))AND(((((t1.c75)AND(t1.c69)))AND(rt0.c2)))))AND(CASE WHEN t1.c1 THEN t1.c76 WHEN '1255814440' THEN rt0.c1 WHEN t1.c73 THEN rt0.c0 WHEN x'95e3' THEN 0.8515671119051894 WHEN t1.c1 THEN rt0.c0 END)))AND(COUNT(*))))AND(((vt0.c0)OR(vt0.c0)))))AND('~kqd(pK㩔')) FROM rt0 WHERE ((((x'')) BETWEEN (('-388838664')) AND (((~ (NULL))))));SELECT DISTINCT ((t1.c69) IS TRUE) FROM t1; -- 0ms;
SELECT ((CAST(t1.c75 AS BLOB)) NOT BETWEEN ((((x'', t1.c69, t1.c69)) NOT BETWEEN ((t1.c73, t1.c73, t1.c73)) AND ((rt0.c2, 1.404594162E9, x'a4a2')))) AND (vt0.c0)) FROM t1, vt0, v0 WHERE (0.9332172551859689);SELECT ALL NULL, 0.29400857067611597, ((CASE WHEN NULL THEN t1.c1 ELSE vt0.c0 END) BETWEEN (CAST(0.12149690659105405 AS REAL)) AND (MAX(rt0.c1))) FROM v0, rt0, vt0 WHERE ((((NULLIF(DISTINCT 1.269637812E9, '8h')))==((ABS(NULL)))));SELECT DISTINCT (CASE WHEN x'' THEN rt0.c1 END IN ()) FROM vt0, t1; -- 0ms;
SELECT ALL ((((('-851706953'))<((rt0.c0)))) IS TRUE) FROM v0 WHERE (IFNULL(DISTINCT (('s+') IS FALSE), (('6旖7At')IS(NULL)))) GROUP BY (rt0.c0 IN ()) COLLATE RTRIM HAVING AVG(((t1.c69) IS FALSE));SELECT DISTINCT CAST(CASE t1.c75  WHEN t1.c1 THEN t1.c69 WHEN rt0.c0 THEN t1.c75 WHEN t1.c1 THEN t1.c75 ELSE 0.9941146011485869 END AS TEXT), '-1712259135', ((((((((((((((((((((t1.c75)AND(t1.c76)))AND(v0.c0)))AND(t1.c69)))OR(rt0.c2)))AND(rt0.c2)))OR(0.7170348011302956)))AND(t1.c75 COLLATE NOCASE)))AND(((rt0.c2)IS(rt0.c0)))))AND(((((t1.c76)AND(vt0.c0)))OR(rt0.c1)))))AND(CAST(t1.c73 AS NUMERIC))) FROM vt0, rt0, v0, t1 ORDER BY rt0.c2; -- 1364ms;
SELECT ALL SUM(CAST(rt0.c1 AS INTEGER)) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 LIMIT -1705752963; -- 0ms;
SELECT ALL ((((t1.c76)*(NULL))) NOT BETWEEN (((t1.c76)IS NOT(rt0.c0))) AND (((v0.c0)OR(t1.c1)))) FROM v0;SELECT DISTINCT t1.c75 FROM t1, rt0 EXCEPT SELECT ALL ((((((((rt0.c1 COLLATE NOCASE)AND(((0x5b03d82a)IS(t1.c1)))))OR(0.3846790989186474)))OR(COALESCE(DISTINCT NULL, t1.c69))))OR((- (t1.c76)))) FROM t1;SELECT DISTINCT COUNT(*) OVER (), ((((((rt0.c0) NOT BETWEEN (t1.c69) AND (t1.c73)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (NULL)))))AND((('')&(t1.c73)))), (~ (((t1.c76) NOT BETWEEN (t1.c73) AND (t1.c1)))), CASE WHEN 3.2793682E7 THEN ((vt0.c0) BETWEEN (t1.c1) AND (vt0.c0)) WHEN (~ (t1.c69)) THEN ((((t1.c73)AND(t1.c1)))AND(rt0.c2)) WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)) THEN ((((((((((((t1.c75)OR(t1.c73)))AND(t1.c76)))AND(t1.c69)))AND(t1.c76)))OR(rt0.c0)))OR(rt0.c2)) WHEN (NOT (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((t1.c76)) AND (('6徭'))) WHEN (('2043431790') BETWEEN (vt0.c0) AND (t1.c1)) THEN CASE WHEN rt0.c1 THEN t1.c1 ELSE t1.c75 END ELSE ((v0.c0)&(rt0.c1)) END, CAST(((rt0.c2) NOT BETWEEN (t1.c76) AND (rt0.c1)) AS BLOB) FROM v0 WHERE (json_array(NULL, (('-969151044') ISNULL)));SELECT DISTINCT CASE WHEN (('2117222523') NOT NULL) THEN (+ (t1.c69)) END FROM vt0, rt0, t1 WHERE (((CAST(NULL AS NUMERIC)) NOTNULL)) ORDER BY (((((rt0.c1) IS FALSE), ((rt0.c0)|(t1.c69)), 0x41145d7f))<>((((t1.c73)GLOB('-112492098')), t1.c76, (~ (t1.c69)))))  NULLS LAST, (+ (((NULL)LIKE(t1.c76))))  NULLS LAST, CASE ((0.39820273877923196) NOT NULL)  WHEN ((0x70fbfa85)AND(t1.c75)) THEN t1.c73 COLLATE NOCASE WHEN ((t1.c69)||(t1.c73)) THEN CASE t1.c73  WHEN NULL THEN t1.c73 WHEN t1.c73 THEN rt0.c0 WHEN t1.c76 THEN '-1705752963' ELSE vt0.c0 END WHEN ((rt0.c1)%(vt0.c0)) THEN CASE WHEN rt0.c0 THEN t1.c1 WHEN t1.c1 THEN t1.c73 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END END ASC;SELECT DISTINCT AVG((((vt0.c0))>=((v0.c0)))) OVER ( GROUPS  CURRENT ROW), ((((t1.c1) NOTNULL))&(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)), (((CASE rt0.c1  WHEN t1.c75 THEN t1.c76 ELSE t1.c73 END))>=((((v0.c0)OR(rt0.c2))))) FROM rt0, vt0, v0 WHERE ((((('1230398603')+('-1388559612'))) IS FALSE));SELECT ALL CAST(json_valid(t1.c69) AS INTEGER) FROM vt0 WHERE ((- ('1376507975')));SELECT (((vt0.c0)<(t1.c1)) IN ()), LIKELY(t1.c69 COLLATE RTRIM), -7.0882839E8 FROM v0, rt0, t1, vt0; -- 0ms;
SELECT DISTINCT AVG((+ (t1.c75))) FROM vt0, t1, v0, rt0 WHERE ((((x'f9425e52'))!=((0.8605096622961004))) COLLATE NOCASE); -- 37ms;
SELECT ((CAST(rt0.c1 AS TEXT))/((rt0.c0 IN ()))) FROM vt0, t1, v0, rt0; -- 1ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, vt0, t1 NOT INDEXED WHERE ((((('-1712259135') BETWEEN (-1.700676814E9) AND ('sttjTG'))) ISNULL)); -- 0ms;
SELECT (((((rt0.c2 IN ()))OR(((rt0.c2)>(t1.c73)))))AND(((((t1.c76)AND('ng')))OR(rt0.c2)))) FROM v0, vt0, rt0, t1; -- 1ms;
SELECT ALL (((rt0.c2)) BETWEEN ((((((t1.c75)OR(rt0.c2)))OR(v0.c0)))) AND ((((((x'')AND(t1.c69)))AND(t1.c76))))) FROM vt0;SELECT DISTINCT (((rt0.c1)) BETWEEN (((NOT (0.18086170277925273)))) AND ((((v0.c0)!=(t1.c76))))) FROM v0, t1;SELECT NTILE((+ ((t1.c75 IN ())))) OVER (), CASE WHEN ((rt0.c2) IS TRUE) THEN (+ (t1.c76)) WHEN ((v0.c0) NOTNULL) THEN ((rt0.c1)>>(t1.c1)) WHEN ((((((((((((t1.c69)AND(vt0.c0)))OR(t1.c69)))AND(t1.c73)))OR(v0.c0)))AND(t1.c76)))OR(rt0.c0)) THEN ((t1.c76)>(rt0.c2)) END, (~ (((vt0.c0)|(t1.c73)))) FROM t1, rt0, v0 NOT INDEXED, vt0 WHERE ((NOT ((((x'')) BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT ((rt0.c0)IS NOT(STRFTIME(t1.c76, t1.c76, t1.c69))) FROM rt0, t1, v0 WHERE (((TRIM(DISTINCT x'4727')) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(v0.c0)))AND(t1.c73)) COLLATE NOCASE, CUME_DIST() OVER ( ORDER BY (((((((rt0.c1))=((rt0.c1))))AND(CAST(v0.c0 AS INTEGER))))AND(((t1.c75)<(0.2706142829439875)))), ((((((((((((rt0.c0)AND(t1.c69)))AND(v0.c0)))AND(rt0.c1)))OR(t1.c76)))AND(((t1.c73)>(t1.c69)))))AND((~ (vt0.c0))))  NULLS FIRST, CASE CASE WHEN t1.c75 THEN '6W' ELSE t1.c1 END  WHEN CAST(t1.c1 AS NUMERIC) THEN ABS(DISTINCT t1.c69) ELSE (0.883278104344135 IN ()) END  NULLS FIRST), (- (CAST(vt0.c0 AS NUMERIC))) FROM rt0, v0;SELECT LEAD(((ABS(DISTINCT 985832676)) NOT NULL), ((((((vt0.c0)AND('')))OR(vt0.c0)))>((vt0.c0 IN ()))), vt0.c0) OVER () FROM vt0 WHERE (CASE WHEN json_extract('1889084365', x'') THEN ((((NULL)AND(8.93999362E8)))AND(0.330632412823084)) ELSE x'' END) LIMIT -876606888;SELECT ALL COUNT(*) FILTER(WHERE CAST(CASE t1.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t1.c76 WHEN t1.c69 THEN rt0.c1 WHEN vt0.c0 THEN t1.c1 WHEN 0xffffffffe898960a THEN t1.c75 ELSE t1.c73 END AS INTEGER)) OVER () FROM vt0 WHERE ((((+ (0.7053184339133268))) BETWEEN (RTRIM(193052968)) AND (((0.8684919055833079)IS NOT(x'f691')))));SELECT DISTINCT t1.c1 FROM rt0 WHERE ((NOT (0x41e7958b)) COLLATE BINARY);SELECT DISTINCT 0xffffffffa7388157 FROM rt0, v0, vt0 WHERE ((((((('1376507975') BETWEEN (x'8ccf') AND (NULL)))AND((~ (x'')))))AND((NULL IN ())))) ORDER BY CAST(CASE WHEN vt0.c0 THEN t1.c76 WHEN t1.c73 THEN v0.c0 WHEN v0.c0 THEN 0.40646947413394685 ELSE rt0.c2 END AS REAL) ASC  NULLS FIRST;SELECT (((((v0.c0, rt0.c1, t1.c1)) NOT BETWEEN ((t1.c73, t1.c76, rt0.c1)) AND ((NULL, t1.c75, rt0.c0)))) IS FALSE) FROM t1, rt0;SELECT ALL x'd6e8' FROM vt0, t1; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT AVG(t1.c75)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT t1.c69 FROM v0, vt0, rt0, t1; -- 1ms;
SELECT ((rt0.c2 COLLATE RTRIM) BETWEEN (((t1.c75) BETWEEN ('') AND (rt0.c2))) AND (COUNT(*))) FROM vt0, v0;SELECT DISTINCT MIN((- (rt0.c0)) COLLATE BINARY) FROM v0, rt0, vt0, t1 WHERE (CAST((+ ('1269637812')) AS INTEGER)); -- 86ms;
SELECT DISTINCT ((CAST(v0.c0 AS INTEGER))/(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN t1.c75 THEN v0.c0 WHEN rt0.c2 THEN '' WHEN v0.c0 THEN t1.c69 ELSE rt0.c2 END)) FROM rt0, v0, t1; -- 0ms;
SELECT DISTINCT x'', AVG((((t1.c1, rt0.c2, t1.c75)) NOT BETWEEN ((t1.c73, v0.c0, rt0.c1)) AND ((t1.c73, t1.c69, t1.c69)))) FILTER(WHERE CASE (rt0.c2 IN ())  WHEN (((t1.c75))>((t1.c76))) THEN -851706953 WHEN CASE WHEN t1.c73 THEN t1.c76 WHEN vt0.c0 THEN t1.c69 WHEN x'' THEN t1.c69 END THEN ((rt0.c1) NOTNULL) WHEN vt0.c0 THEN (+ (t1.c75)) END) OVER (), CASE rtreenode(t1.c73, t1.c1)  WHEN CHAR(t1.c76) THEN ((t1.c69) NOT BETWEEN (t1.c76) AND (vt0.c0)) END FROM vt0, rt0, v0, t1; -- 1224ms;
SELECT ALL ((CASE WHEN rt0.c2 THEN v0.c0 END)-(((rt0.c1)>(t1.c69)))) FROM t1, rt0, vt0 WHERE (TRIM(DATETIME(0.2200977850588226, '-1020336950', NULL, x'a38e', x'cbb2')));SELECT DISTINCT MIN(((t1.c1)>=(t1.c69))) FROM vt0;SELECT ALL rt0.c2, rt0.c0, rt0.c2 FROM rt0, v0, vt0 WHERE (((CASE WHEN '1072447977' THEN 1331665093 WHEN -4.76341558E8 THEN -701460503 WHEN '\(NF>' THEN 151358842 WHEN 'N1lt/ㅆ[迩鞯' THEN 0.7835871527512882 WHEN 8.49439696E8 THEN 'Im\ro' END) BETWEEN (((-1264534201)|(x''))) AND (0.9456470845169213))); -- 0ms;
SELECT DISTINCT SUM(TOTAL(((rt0.c0)&(t1.c75)))) FROM v0 FULL OUTER JOIN rt0 ON t1.c1 FULL OUTER JOIN vt0 ON x'';SELECT DISTINCT (((((((((((('' COLLATE RTRIM)AND(CAST(t1.c76 AS NUMERIC))))OR((t1.c73 IN (t1.c76, t1.c76)))))AND(((NULL)/(t1.c73)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN t1.c69 WHEN t1.c69 THEN t1.c69 WHEN t1.c69 THEN rt0.c2 END)))AND(((t1.c69)<=(t1.c76)))))OR(TYPEOF(DISTINCT vt0.c0))) FROM v0, vt0, t1 WHERE ((((1.686269792E9) IS FALSE) IN ()));SELECT (((+ (t1.c73))) NOT BETWEEN (((((t1.c69)OR(rt0.c2)))OR(vt0.c0))) AND ('-962902196')) FROM vt0, rt0, v0, t1 WHERE ((((((x'883f', '1061415845', NULL, NULL, 0.9577424370855201, x'16c1', 0.6729375806072408))>=((NULL, 0.6320275609386684, '', '', NULL, 'k\r1*싼e/Yi', -83413443))))IS NOT((NOT ('-25201533'))))); -- 1ms;
SELECT DISTINCT t1.c1 FROM rt0, v0, vt0, t1; -- 1ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END COLLATE RTRIM, ((((((vt0.c0)OR(v0.c0)))AND(x'e81b'))) NOT BETWEEN (t1.c73) AND (((v0.c0)%(t1.c69)))), TOTAL(((((t1.c69)OR(t1.c1)))AND(vt0.c0))) FROM t1;SELECT DISTINCT t1.c1, UPPER(DISTINCT 0x260657f7), (((((NULL)<=(0.2345452107341166))))<>((TOTAL(t1.c73)))) FROM t1; -- 0ms;
SELECT '1646142413' FROM vt0 WHERE (((((x'', 'mb', 0.0805733147992389))>((8.1168794E7, x'', NULL))) IN ())); -- 0ms;
SELECT ALL TOTAL(((t1.c75) NOT BETWEEN (NULL) AND (t1.c69))), ((t1.c1) BETWEEN (t1.c75) AND (t1.c75)) COLLATE BINARY, CASE SUM(t1.c69)  WHEN IFNULL(t1.c69, v0.c0) THEN CAST(t1.c1 AS BLOB) WHEN SUM(t1.c76) THEN t1.c75 WHEN NULL THEN ((t1.c76) NOT NULL) END FROM rt0, vt0, t1 WHERE ((+ (CAST('1484804949' AS INTEGER)))) ORDER BY (((json_quote(rt0.c1), vt0.c0, CASE WHEN t1.c69 THEN rt0.c0 ELSE t1.c69 END))<((HEX(DISTINCT rt0.c1), ((rt0.c1) NOT NULL), (t1.c75 IN ())))) ASC;SELECT DISTINCT HEX(DISTINCT LIKELY(t1.c73)) FROM vt0 WHERE (((((((((((NULL)*('-1520560786')))AND(TRIM(''))))OR((0.3731469824475355 IN ()))))OR((0.28170453042534405 IN ()))))OR(CASE '1503807413'  WHEN 0.7185484181849263 THEN NULL END)));SELECT DISTINCT ('붲w' IN ()), ((t1.c69) NOT NULL), (((NOT ('835679762'))) IS TRUE) FROM vt0, t1, v0, rt0; -- 0ms;
SELECT DISTINCT DATE(((t1.c73) NOT BETWEEN (t1.c1) AND (t1.c73)), ((rt0.c0) NOT BETWEEN (t1.c76) AND (t1.c1)), '162464517'), (((((((((t1.c69)OR(rt0.c1)))OR(t1.c76)))AND(t1.c73)))OR(rt0.c1)) IN ((((t1.c69, t1.c75, t1.c69))<=((v0.c0, rt0.c2, rt0.c0))))), COUNT(*) OVER (), ((x'34b2') IS TRUE), rt0.c0 FROM rt0, v0, t1 WHERE (CASE (((('-1993943993')AND('1315058542')))OR('^幪'))  WHEN ((((0xffffffffc97b4297)OR(0.5688227788315743)))AND(NULL)) THEN (0.11895236128540199 IN ()) ELSE 'y#' COLLATE BINARY END); -- 0ms;
SELECT ALL CAST(((rt0.c0)IS(t1.c69)) AS REAL) FROM rt0 WHERE (((((NULL) NOT BETWEEN (NULL) AND ('Wb<맮')))*((((('[,q㹲ࢂYR+')AND('-699880267')))OR(0.191612941208112)))));SELECT ALL ((SUM(t1.c73)) IS TRUE) FROM rt0 WHERE ('');SELECT DISTINCT ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM FROM t1, rt0 WHERE (CASE WHEN (('1227023630') BETWEEN (x'') AND (x'')) THEN ((NULL)<=(x'')) WHEN NULL THEN ((550595275)IS('-963698004')) WHEN ((((0.28334779222898254)AND(x'')))AND(NULL)) THEN ('-1546715721' IN (0.6363394186134982)) END);SELECT DISTINCT ((vt0.c0) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c1 THEN t1.c69 ELSE t1.c1 END)) FROM vt0, v0, rt0, t1 WHERE (((SQLITE_VERSION()) NOTNULL)); -- 1ms;
SELECT ALL CASE NULL  WHEN v0.c0 COLLATE RTRIM THEN ((rt0.c2) BETWEEN (t1.c1) AND (t1.c76)) ELSE x'' END, (0.196756243093675 COLLATE RTRIM IN ()), ((((rt0.c0) IS TRUE))OR((((t1.c76))!=((NULL))))) FROM t1, v0 WHERE (SQLITE_VERSION());SELECT (((t1.c69, vt0.c0, vt0.c0)) BETWEEN ((((rt0.c1)>>(t1.c73)), ((rt0.c2)GLOB(NULL)), ((t1.c73)AND(t1.c1)))) AND (((t1.c75 IN ()), AVG(t1.c75), (t1.c1 IN ())))), MAX((- (vt0.c0))), v0.c0 FROM t1 WHERE (((('W2Se3^%')>=(NULL)) IN ()));SELECT ALL ((((((vt0.c0)AND(v0.c0)))OR(rt0.c0))) BETWEEN (((t1.c1)>=(t1.c1))) AND (('-922516141' IN ()))), t1.c75, ((((((t1.c75)OR(rt0.c1)))AND(t1.c1))) IS TRUE) FROM t1, v0;SELECT DISTINCT LOWER((~ (1913834860))) FROM t1, v0; -- 1ms;
SELECT DISTINCT (((((v0.c0))=((t1.c69)))) NOT BETWEEN (TRIM(rt0.c1)) AND (rt0.c1)) FROM vt0, t1, rt0;SELECT DISTINCT ((((((NULL)>=(t1.c1)))OR((~ (rt0.c2)))))AND(GROUP_CONCAT(t1.c75))) FROM rt0, vt0, t1, v0; -- 63ms;
SELECT DISTINCT MIN((t1.c1 IN ())) FROM rt0, vt0; -- 0ms;
SELECT -90585401 FROM t1, vt0 ORDER BY (((((t1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>(((t1.c75 IN ()))))  NULLS LAST, ((CAST(t1.c1 AS TEXT)) NOT BETWEEN ((((t1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND ((((v0.c0)) NOT BETWEEN ((NULL)) AND ((t1.c69))))), ((((vt0.c0) BETWEEN (t1.c75) AND (rt0.c0)))IS NOT((v0.c0 IN ())));SELECT DISTINCT (((t1.c76)) NOT BETWEEN ((((((0x214bb029)OR(t1.c73)))AND(t1.c73)))) AND (((t1.c1 IN (t1.c69))))), ((((rt0.c2 COLLATE NOCASE)AND(((v0.c0) ISNULL))))OR(AVG(rt0.c2))), ((0.9073582108159938) ISNULL) FROM t1;SELECT CASE rt0.c2  WHEN t1.c69 THEN t1.c73 END COLLATE RTRIM FROM rt0, v0 WHERE (((((NULL)<(x'3862')))>=('f潠쀊螣' COLLATE RTRIM)));SELECT DISTINCT x'' FROM v0, rt0, t1, vt0 WHERE (CASE NULL  WHEN NULL THEN '^^l ' ELSE NULL END COLLATE BINARY); -- 1ms;
SELECT DISTINCT CASE (((t1.c73))=((vt0.c0)))  WHEN ((((t1.c75)AND(rt0.c0)))OR(rt0.c1)) THEN x'f8a2' END, ((((t1.c69) BETWEEN (rt0.c2) AND (rt0.c0)))<(((v0.c0) ISNULL))), ((SUM(t1.c75))%(rt0.c2)) FROM vt0, v0, t1 WHERE (CASE (('#1NP8ac_z')|('-877223013'))  WHEN ((((0.588372734453667)OR(NULL)))AND('0.18086170277925273')) THEN ((x'') IS TRUE) END);SELECT DISTINCT GROUP_CONCAT(rt0.c0) OVER () FROM rt0; -- 0ms;
SELECT ALL (((NOT (vt0.c0)))<<(((t1.c76) IS FALSE))) FROM rt0, v0 WHERE (((('559259220')<>(x'')) IN ()));SELECT DISTINCT t1.c75 FROM vt0;SELECT DISTINCT ((((-1090645491)!=(v0.c0))) IS FALSE), ((LAST_INSERT_ROWID()) NOTNULL), RANK() OVER () FROM rt0, v0, vt0, t1 WHERE ((((NOT ('0.1774556148301375')))||(CASE x''  WHEN NULL THEN 0.44054946745469914 ELSE x'' END))) LIMIT -1098781381 OFFSET -1351215197; -- 0ms;
SELECT DISTINCT (t1.c76 IN ()) COLLATE NOCASE FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0) NOT BETWEEN (t1.c75) AND (t1.c69)))AND(((rt0.c1)OR(0.8994245658563063)))))AND(json_quote(t1.c69))), SUM(0.25296942283351886) OVER (), 1.530925159E9 FROM t1;SELECT DISTINCT (((x'')) BETWEEN ((((((t1.c75)AND('c\n|h瘆퀑|')))OR(rt0.c2)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))), (((((rt0.c1))!=((rt0.c1)))) ISNULL), CUME_DIST() OVER ( ORDER BY ((((v0.c0)<<(rt0.c0))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c76)))) AND ('D~(''&A67D'))  NULLS FIRST) FROM rt0, v0 WHERE (CASE WHEN (('&%r{md.')OR('9}*QO')) THEN ('[>SiCKzM烼' IN ('', '0.191612941208112')) ELSE ('-r' IN (NULL, NULL)) END) LIMIT 1754050372;SELECT COUNT(*) OVER (), COUNT(*), ((((vt0.c0)&(rt0.c2))) NOTNULL) FROM t1, vt0;SELECT DISTINCT ((rt0.c0)==((((t1.c76))<((rt0.c0))))), (+ ((~ (0.15861892641234898)))), ((t1.c76 COLLATE RTRIM)%(((rt0.c2) IS FALSE))) FROM vt0 WHERE (CAST(('-1979990981' IN ()) AS TEXT));SELECT ALL CASE WHEN t1.c69 THEN t1.c69 WHEN t1.c1 THEN t1.c75 WHEN t1.c1 THEN vt0.c0 ELSE rt0.c2 END COLLATE NOCASE FROM t1, rt0, v0, vt0; -- 1ms;
SELECT DISTINCT ((t1.c69 COLLATE RTRIM) BETWEEN (CASE WHEN v0.c0 THEN '-1348873693' WHEN rt0.c1 THEN v0.c0 WHEN t1.c75 THEN vt0.c0 END) AND (((rt0.c2)==(rt0.c2)))) FROM t1, vt0, v0 WHERE (((((NULL)OR(CASE '0.8605096622961004'  WHEN NULL THEN '439982550' END)))OR(CASE NULL  WHEN x'' THEN NULL ELSE 0.28769009296576553 END)));SELECT DISTINCT ((((0x675c1a5d) IS FALSE))IS(((t1.c73) IS TRUE))), LEAD(UNLIKELY(CAST(vt0.c0 AS TEXT)), (t1.c75 IN ()) COLLATE BINARY, 0.909086284262763) OVER (), MAX(COUNT(*)) FROM t1, vt0 WHERE ((9223372036854775807 COLLATE NOCASE IN ()));SELECT DISTINCT CASE SQLITE_COMPILEOPTION_GET(1794805737)  WHEN ((rt0.c0) BETWEEN (t1.c73) AND (v0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END FROM t1, v0;SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, v0, vt0; -- 44ms;
SELECT DISTINCT vt0.c0 FROM vt0, rt0, v0 GROUP BY ((TRIM(DISTINCT v0.c0, '1061415845')) IS TRUE); -- 147ms;
SELECT DISTINCT ((((t1.c73) NOT BETWEEN (t1.c1) AND (rt0.c0)))<((t1.c76 IN ()))) FROM t1 WHERE (CAST(CASE ' ~'  WHEN NULL THEN 0.44735278951682866 END AS REAL));SELECT (- (-9.62902196E8)) FROM v0, vt0, rt0, t1 WHERE ((((NULL COLLATE NOCASE))<((((x'')/(x'')))))); -- 1ms;
SELECT DISTINCT ((((v0.c0) ISNULL))||((rt0.c0 IN ()))) FROM rt0, v0, vt0 WHERE (CAST(((8.35679762E8) NOT BETWEEN (0.9238582056780348) AND (NULL)) AS NUMERIC)); -- 0ms;
SELECT TOTAL_CHANGES(), AVG(CAST('' AS REAL)), CAST(((((((((v0.c0)OR(t1.c75)))OR(t1.c76)))OR(rt0.c2)))AND(0.39598443769807645)) AS BLOB) FROM v0, vt0;SELECT DISTINCT TRIM((rt0.c1 IN ()), -403503806), CAST((vt0.c0 IN (rt0.c2)) AS REAL), ((((((t1.c76)AND(t1.c76)))OR(t1.c76)))!=(UPPER(DISTINCT vt0.c0))), CAST(((t1.c73) NOTNULL) AS TEXT), (((t1.c75, x'4f27', t1.c75)) NOT BETWEEN ((t1.c75, rt0.c2, rt0.c2)) AND ((rt0.c2, t1.c76, rt0.c0))) COLLATE NOCASE FROM rt0, t1, vt0, v0; -- 1ms;
SELECT DISTINCT CASE WHEN TRIM(NULL) THEN (NOT (rt0.c2)) END, CASE WHEN (~ (t1.c76)) THEN (((vt0.c0))<=((rt0.c0))) END, ((1.763317293E9) NOT NULL) FROM t1;SELECT DISTINCT ((CASE rt0.c0  WHEN vt0.c0 THEN t1.c76 ELSE t1.c73 END) IS FALSE) FROM t1, v0, rt0, vt0 WHERE (((((0.0529133606334099)+(0xffffffff96ac013f)))-((((NULL)) NOT BETWEEN ((NULL)) AND ((0.5046128535533784)))))); -- 0ms;
SELECT MIN((((t1.c73)) BETWEEN ((t1.c69)) AND ((rt0.c0)))) FROM t1 GROUP BY ((t1.c75) IS FALSE) COLLATE RTRIM, (((((vt0.c0 IN (vt0.c0, rt0.c1)))AND(((t1.c75)*(t1.c75)))))AND(((rt0.c1) BETWEEN (t1.c76) AND (t1.c69)))), (+ (((rt0.c2) IS FALSE)));SELECT DISTINCT CAST(rt0.c1 COLLATE NOCASE AS BLOB) FROM vt0, rt0, t1; -- 0ms;
SELECT DISTINCT (((((rt0.c1, t1.c73, 1.861215924E9))!=((rt0.c0, t1.c69, rt0.c1)))) NOT BETWEEN (((((v0.c0)OR(t1.c76)))OR(rt0.c1))) AND (CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE rt0.c2 END)) FROM rt0 LIMIT -1457708487;SELECT DISTINCT ((((t1.c69) BETWEEN (t1.c73) AND (t1.c1))) ISNULL) FROM vt0 WHERE (((((((x'') ISNULL))OR('-1741397088')))AND((((x''))<=(('553030821'))))));SELECT DISTINCT CASE WHEN CAST(t1.c76 AS REAL) THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) ELSE CAST(t1.c75 AS NUMERIC) END, ((((((((CASE t1.c1  WHEN t1.c73 THEN v0.c0 WHEN vt0.c0 THEN t1.c73 WHEN 0X173d639d THEN t1.c73 ELSE 0.29561463870056026 END)OR(rt0.c0)))OR((- (rt0.c1)))))OR(((t1.c76)<=(vt0.c0)))))AND(t1.c73)), GROUP_CONCAT(CASE 0.4656311667819589  WHEN t1.c1 THEN -102872549 ELSE vt0.c0 END) OVER () FROM v0, rt0, vt0, t1; -- 1587ms;
SELECT ALL 1210853473 FROM t1, v0, vt0 WHERE (((('zM' IN ()))*(CASE WHEN '' THEN '賊|i흊M\rB' ELSE '-1775788070' END))) ORDER BY ((-1.546715721E9)==((((rt0.c2))>((vt0.c0)))));SELECT DISTINCT ((rt0.c0)IS NOT(rt0.c0)) COLLATE NOCASE FROM t1 WHERE ((((((((-782036283))>=((1.091853695E9))))OR(0.3339799385722394)))OR(((((0.35579867510385355)OR(x'83a1')))AND(0.7323089834007184))))) GROUP BY CAST(LIKELY(t1.c73) AS INTEGER) HAVING UNICODE(SUM('-37137722'));SELECT DISTINCT (~ ((((t1.c75)) NOT BETWEEN ((t1.c76)) AND ((t1.c76))))) FROM rt0, v0 WHERE (((((('-1564595817') ISNULL), CASE WHEN -8.56586248E8 THEN '-1476476164' ELSE 0.6772026297312193 END, ((0.5873175744175858) NOT NULL)))>=((((NULL) BETWEEN ('1931371209') AND (0x6afa8fe9)), CASE WHEN x'b162' THEN '880429144' END, CASE x'0c9c'  WHEN '_狦u+X7+zG' THEN NULL WHEN '-966003300' THEN NULL WHEN x'062140db' THEN 0.4346001291068785 END)))) GROUP BY ((((CASE rt0.c2  WHEN x'998d2767' THEN vt0.c0 END)OR(v0.c0)))OR(CASE WHEN t1.c76 THEN t1.c73 END)) HAVING CAST((vt0.c0 IN ()) AS BLOB);SELECT DISTINCT t1.c69 FROM vt0, v0 WHERE ((((((''))>((0.6155198480380264))))-((0Xffffffff918a44ed IN ()))));SELECT ALL (- (((((rt0.c2)AND(t1.c69)))AND(t1.c69)))), ((rt0.c0)>(NULL)) COLLATE RTRIM, CAST(CAST(t1.c1 AS BLOB) AS INTEGER) FROM vt0 WHERE ((NULL IN (x'', 2.7704809E7)) COLLATE RTRIM);SELECT DISTINCT ((((v0.c0)GLOB(rt0.c2)))||(((t1.c75)<=(t1.c76)))) FROM rt0 WHERE (((((x'f045') NOT BETWEEN (x'') AND (NULL))) NOT BETWEEN ((x'de38' IN ())) AND ((((((((('279409437')AND(0.8063666789124809)))OR(1.686269792E9)))OR(0.2588425852730488)))OR(0.0)))));SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) BETWEEN (((t1.c75)GLOB(t1.c1))) AND ((NOT (t1.c73)))) FROM t1 WHERE (CAST(CAST('0.6498756528442182' AS BLOB) AS TEXT)) LIMIT -998965263 OFFSET -1023519357;SELECT DISTINCT (((((t1.c73)OR(t1.c1)))OR(rt0.c0)) IN ()) FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c75, rt0.c0, rt0.c0)) BETWEEN ((((t1.c75)IS NOT(v0.c0)), t1.c73, ((t1.c69) BETWEEN (v0.c0) AND (t1.c73)))) AND ((((t1.c73) BETWEEN (t1.c75) AND (vt0.c0)), ((NULL)<<(t1.c69)), GROUP_CONCAT(vt0.c0)))) FROM rt0, vt0;SELECT CAST(((t1.c69)>(v0.c0)) AS BLOB) FROM vt0;SELECT CASE CASE t1.c73  WHEN t1.c73 THEN t1.c1 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c73 THEN rt0.c1 END  WHEN ((rt0.c0)/(rt0.c2)) THEN (rt0.c1 IN ()) END, COUNT(CAST(0.7187053477786886 AS INTEGER) COLLATE BINARY), FIRST_VALUE(((t1.c69)&(t1.c69)) COLLATE BINARY) OVER () FROM t1 WHERE (((((('8u', -0.0, 'Jj'))>((NULL, x'', '-1004783020'))))>(-1383797868)));SELECT DISTINCT ((((t1.c75)AND(json_array(t1.c73, vt0.c0))))AND(x'c28b')) FROM t1 WHERE ((((~ (-1.945852717E9)))<<((('y#') NOT BETWEEN (x'302b') AND (409560081)))));SELECT DISTINCT rt0.c0 FROM v0, vt0, t1;SELECT DISTINCT '-366375689' FROM t1, v0, vt0, rt0 WHERE ((((CAST(x'acc1' AS NUMERIC), ((x'817e')%(x'')), ((NULL)&('lR_{v'))))>((('1e500' IN ()), '-1574112485' COLLATE BINARY, (('-962902196')<(0.5942959185460481)))))); -- 0ms;
SELECT DISTINCT NTH_VALUE((((~ (t1.c75))) NOT BETWEEN (t1.c1) AND (CAST(t1.c73 AS NUMERIC))), ((((t1.c76) IS FALSE))IS(t1.c75 COLLATE NOCASE))) OVER ( GROUPS BETWEEN (t1.c73 IN ()) PRECEDING AND  UNBOUNDED FOLLOWING), NULL, (((('-1169214876') NOTNULL)) BETWEEN (((x'')LIKE(rt0.c1))) AND (SUM(t1.c69))) FROM t1 WHERE ((((~ (NULL))) NOT NULL));SELECT DISTINCT ((((t1.c69) NOTNULL)) NOT BETWEEN (MAX('2{aQꆏ&2')) AND (HEX(t1.c69))), json_array(RTRIM(t1.c76), CASE t1.c76  WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END), SUM(CAST(rt0.c2 AS NUMERIC)) FROM v0 WHERE ((((x'8012' IN (x'', x'', x''))) BETWEEN ((('')||(NULL))) AND (0xffffffffdb9cb002 COLLATE RTRIM)));SELECT ((json_array_length(t1.c69)) NOT BETWEEN (LIKELIHOOD(rt0.c1, 0.7665940993861383)) AND (((rt0.c1)==(rt0.c0)))) FROM rt0, v0;SELECT DISTINCT ((COUNT(rt0.c2))<<(GROUP_CONCAT(rt0.c2))), CASE vt0.c0 COLLATE RTRIM  WHEN ((NULL) IS TRUE) THEN ((((((((t1.c76)AND(t1.c1)))OR(vt0.c0)))AND(t1.c1)))AND(rt0.c2)) END, (((((t1.c73) IS FALSE)))=((((t1.c73) NOT NULL)))) FROM t1, vt0;SELECT ((((((((x'')AND(((t1.c69) IS TRUE))))AND(('0.679041395897085' IN (t1.c75)))))OR(((rt0.c1)&(rt0.c1)))))AND(((0.4084430509168252) NOT NULL))) FROM rt0, vt0, t1 WHERE (ABS(CASE WHEN 0.9024609862472666 THEN '' END)) LIMIT -1184730414 OFFSET 1650950660; -- 0ms;
SELECT ALL AVG(rt0.c2) OVER () FROM rt0, v0, t1 WHERE (CAST(((-857771290)/(NULL)) AS NUMERIC)) ORDER BY HEX(DISTINCT (((t1.c73, 'Cyr', t1.c69))<=((rt0.c2, v0.c0, v0.c0)))) LIMIT -654177681; -- 0ms;
SELECT DISTINCT ((((t1.c76) IS TRUE)) BETWEEN (GROUP_CONCAT(v0.c0)) AND (-89934741)) FROM vt0, v0 WHERE ((- (((('-857771290')) BETWEEN ((-2.089391436E9)) AND ((NULL))))));SELECT ALL COUNT(*) OVER () FROM t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t1.c76)) BETWEEN ((t1.c75)) AND ((t1.c75)))), (+ (((rt0.c2) IS TRUE))), '1130328439', ((((rt0.c1) BETWEEN (t1.c69) AND (t1.c1))) BETWEEN (load_extension(rt0.c2, t1.c73)) AND (CASE WHEN t1.c75 THEN t1.c1 END)), GROUP_CONCAT(((((v0.c0)OR(t1.c69)))AND(t1.c75)) COLLATE RTRIM) FROM t1 GROUP BY CAST(CASE WHEN t1.c73 THEN t1.c73 END AS TEXT) LIMIT 1593156842 OFFSET -1489469097;SELECT ALL ((((((((((rt0.c2)AND(t1.c75)))AND(vt0.c0)))OR(t1.c1)))OR(v0.c0)))<=(((t1.c73)+(v0.c0)))) FROM v0, rt0 WHERE ((- (((0.6532602070638976)|(NULL)))));SELECT DISTINCT LEAD((NOT (((v0.c0)/(v0.c0)))), (('1379520642' COLLATE RTRIM) IS TRUE), ((((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR('')))AND(CAST(v0.c0 AS NUMERIC))))AND(((v0.c0)<(NULL)))))OR('Y#'))) OVER ( ORDER BY (((t1.c75, rt0.c2, vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (rt0.c1) AND (t1.c73)), ((t1.c76)>>(t1.c1)), ((t1.c1) ISNULL), ((x'') BETWEEN (t1.c76) AND (t1.c75)), ((t1.c73) NOT NULL))) AND ((((t1.c73)=(rt0.c0)), CAST(t1.c75 AS NUMERIC), 841099694, CAST(rt0.c2 AS REAL), LOWER(t1.c76)))), ((((((((((t1.c76)OR(t1.c76)))OR(0.8038230414511592)))AND(rt0.c1)))OR(rt0.c1)))<<(((v0.c0) NOTNULL))) ASC) FROM v0 WHERE (CASE WHEN (NULL IN ('-1775788070', '1861215924')) THEN ((0.7878607660051817)<<(x'aa5b')) END) ORDER BY CASE ((t1.c69) BETWEEN (rt0.c2) AND (v0.c0))  WHEN (((v0.c0)) NOT BETWEEN ((t1.c73)) AND ((t1.c69))) THEN ((v0.c0) BETWEEN (t1.c75) AND (t1.c76)) ELSE v0.c0 END;SELECT DISTINCT CASE CASE WHEN t1.c69 THEN t1.c1 END  WHEN CASE rt0.c1  WHEN rt0.c0 THEN t1.c1 END THEN ((((((((t1.c69)AND(t1.c69)))AND(t1.c76)))OR(vt0.c0)))OR(t1.c69)) ELSE ((vt0.c0) NOT BETWEEN (-1366162323) AND (t1.c75)) END FROM t1, vt0 WHERE (0.14754502153714466);SELECT DISTINCT TOTAL(t1.c69) FROM rt0, t1; -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()), CAST(COUNT(t1.c75) AS BLOB), ((rt0.c0 IN ()) IN ()) FROM t1 GROUP BY ((0.6087694490090378 COLLATE NOCASE) NOT BETWEEN (0Xffffffffb9e65227) AND (((((((((-298635704)OR('27704809')))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c1))));SELECT (((((vt0.c0))>((v0.c0)))) ISNULL) FROM t1, v0, rt0, vt0; -- 1ms;
SELECT DISTINCT (CASE t1.c75  WHEN t1.c76 THEN rt0.c0 ELSE vt0.c0 END IN ((rt0.c2 IN ()))) FROM vt0, t1, rt0; -- 0ms;
SELECT DISTINCT (((t1.c76, v0.c0, t1.c73)) BETWEEN ((((t1.c1) ISNULL), ((rt0.c2)>(t1.c69)), CASE WHEN t1.c1 THEN t1.c69 END)) AND (((((vt0.c0, t1.c69, t1.c69))>((v0.c0, t1.c69, 0.1765018620534401))), (((t1.c75))<=((t1.c1))), CAST(t1.c76 AS INTEGER)))), ((((t1.c1) BETWEEN (t1.c76) AND (t1.c75))) NOT BETWEEN (((t1.c69)OR(t1.c76))) AND (LIKELY(DISTINCT '-1775788070'))), (((((x'6bbb298f', t1.c69, vt0.c0, rt0.c1, t1.c73))<=((rt0.c0, rt0.c2, t1.c75, vt0.c0, t1.c69)))) IS TRUE) FROM v0, vt0;SELECT ALL (((- (v0.c0)))-((((t1.c69, t1.c73, vt0.c0)) BETWEEN ((t1.c75, t1.c76, t1.c76)) AND ((t1.c76, vt0.c0, NULL))))) FROM vt0 WHERE (ABS(DISTINCT ']迩U' COLLATE NOCASE));SELECT DISTINCT (TOTAL(v0.c0) IN ()) FROM t1, v0, vt0; -- 0ms;
SELECT DISTINCT (((t1.c73)) NOT BETWEEN (((((0.5628740211832572))>=(('7,&_jR?H\r'))))) AND (('1668929407'))) FROM rt0, t1, vt0 WHERE (((0xd08006f COLLATE RTRIM) NOT NULL)) GROUP BY (NOT ((((rt0.c0, v0.c0, v0.c0, t1.c73, t1.c73)) BETWEEN ((t1.c76, t1.c75, t1.c73, vt0.c0, t1.c69)) AND ((x'', t1.c69, t1.c1, t1.c76, v0.c0)))));SELECT DISTINCT ((v0.c0 COLLATE NOCASE)<<(CASE WHEN t1.c73 THEN rt0.c1 END)), ((COUNT(t1.c1)) ISNULL), (((x''))<(((((t1.c69, rt0.c2, t1.c1)) NOT BETWEEN ((t1.c75, t1.c75, t1.c76)) AND ((t1.c1, t1.c76, 0.08975929231598123)))))) FROM v0 LIMIT -31977602 OFFSET -915534429;SELECT LIKE(((t1.c76) BETWEEN (t1.c73) AND (0.1320229547600381)), ((v0.c0) NOT BETWEEN (t1.c76) AND (t1.c75))) FROM rt0, t1, vt0 WHERE (CASE 1.269637812E9 COLLATE BINARY  WHEN CASE '1064538240'  WHEN NULL THEN -1.366162323E9 END THEN CASE ''  WHEN x'' THEN 0.7857305047361773 END END);SELECT ALL (((t1.c75 IN (v0.c0)))LIKE(t1.c1)), ((((t1.c76) BETWEEN (t1.c73) AND (t1.c73)))!=(CAST(vt0.c0 AS REAL))), ((((rt0.c1)+(x'')))%(CAST(t1.c73 AS BLOB))) FROM rt0;SELECT DISTINCT ((AVG(t1.c1))OR(t1.c73)) FROM v0, vt0 GROUP BY '-462308205', json_type((('-975188539')OR(t1.c76))), CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT);SELECT DISTINCT DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT ((MAX(t1.c73)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (t1.c76))) AND (((t1.c73) NOTNULL))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT CAST(((((t1.c69)OR(v0.c0)))AND(t1.c76)) AS TEXT) FROM vt0, t1, v0; -- 1ms;
SELECT DISTINCT ((((((v0.c0)-(vt0.c0)))AND(CAST(t1.c76 AS NUMERIC))))AND((~ (t1.c69)))) FROM vt0 WHERE ((((NOT (NULL))) NOTNULL));SELECT (((v0.c0 IN ())) NOT BETWEEN (((vt0.c0)*(rt0.c1))) AND ((vt0.c0 IN ()))), COUNT(*) OVER (), (((((t1.c76))>=((vt0.c0)))) NOTNULL) FROM rt0, t1 WHERE ((~ (((0.2553425182037833)OR(0.11952424170304166)))));SELECT DISTINCT CASE rt0.c0  WHEN CASE t1.c69  WHEN rt0.c2 THEN x'' END THEN load_extension(t1.c76) ELSE CAST(t1.c69 AS BLOB) END FROM t1, rt0, v0 WHERE (x'') GROUP BY (((CASE vt0.c0  WHEN v0.c0 THEN 0.8261386135477229 WHEN t1.c75 THEN t1.c69 WHEN t1.c73 THEN t1.c73 END))<>(((NOT (rt0.c1)))));SELECT CASE WHEN vt0.c0 THEN rt0.c2 END COLLATE RTRIM FROM t1, vt0, rt0, v0 WHERE ((((x'44ea'))<(((- (x'63c5')))))); -- 0ms;
SELECT DISTINCT x'' FROM rt0, vt0, v0 WHERE ((((((((((((0X691a162d)) BETWEEN ((0.5862887417969596)) AND ((NULL))))OR(((('987047347'))==((x''))))))OR((0.21028056268388973 IN (NULL)))))AND(((x'') NOTNULL))))AND(((x'') IS TRUE)))); -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM) BETWEEN (((t1.c69)||(vt0.c0))) AND ((v0.c0 IN ()))), CAST(((((vt0.c0)AND(v0.c0)))OR(rt0.c2)) AS TEXT), vt0.c0 FROM vt0, rt0 GROUP BY '455204382' HAVING CASE (+ (v0.c0))  WHEN x'9152' THEN CAST(t1.c1 AS BLOB) ELSE CAST(t1.c75 AS INTEGER) END LIMIT 494794253 OFFSET -1759269899;SELECT ALL NULL FROM rt0, vt0, t1, v0 GROUP BY 81168794;SELECT DISTINCT CAST(CAST(vt0.c0 AS BLOB) AS BLOB) FROM vt0 NATURAL JOIN v0; -- 1ms;
SELECT DISTINCT CASE (+ (t1.c73))  WHEN -709863792 THEN UPPER(DISTINCT '1') WHEN json_valid(rt0.c2) THEN rt0.c0 WHEN (v0.c0 IN ()) THEN ((rt0.c0)IS(v0.c0)) ELSE COALESCE(rt0.c2, v0.c0) END, ((((((((((v0.c0) ISNULL))OR(TYPEOF(rt0.c1))))OR(x'')))AND(((v0.c0)|(t1.c75)))))AND(CAST(rt0.c2 AS REAL))), ((((((t1.c73) BETWEEN (vt0.c0) AND (t1.c75)))AND((+ (rt0.c2)))))OR(((v0.c0) IS TRUE))) FROM v0 CROSS JOIN rt0 ON x'52f6' UNION SELECT ALL CASE WHEN rt0.c2 THEN MAX(t1.c73) END, GROUP_CONCAT(((t1.c76)IS(t1.c76))) OVER (), (CAST(t1.c76 AS TEXT) IN ()) FROM t1, vt0, v0, rt0 WHERE (CASE WHEN (NOT (0.39820273877923196)) THEN CASE WHEN '<yz' THEN NULL ELSE '' END ELSE CAST(0.5312844238645825 AS NUMERIC) END);SELECT DISTINCT ((((((((((((((t1.c1)OR(t1.c73)))OR(t1.c75)))AND(t1.c76)))OR(rt0.c1)))AND(t1.c69)))AND(vt0.c0)))>>(((t1.c69)>>(v0.c0)))), 'k	P', '-1476476164' FROM t1, v0, vt0, rt0 WHERE ((+ (CASE WHEN NULL THEN -1883490948 ELSE '' END))); -- 0ms;
SELECT ALL ((((((t1.c75))<>((t1.c1))), rt0.c0 COLLATE RTRIM, ((t1.c76) BETWEEN (NULL) AND (rt0.c2))))<((x'' COLLATE BINARY, x'', (+ (rt0.c1))))) FROM vt0, v0 GROUP BY ((CASE WHEN t1.c1 THEN rt0.c0 END)>=(((rt0.c1)<<(t1.c73)))) HAVING t1.c69;SELECT DISTINCT ((((vt0.c0)AND(((t1.c1)IS NOT(vt0.c0)))))AND(NULL)) FROM vt0, t1, rt0, v0 EXCEPT SELECT SUM(((t1.c69) NOT BETWEEN (t1.c76) AND (vt0.c0))) OVER () FROM vt0;SELECT ALL CAST(((rt0.c0) NOTNULL) AS NUMERIC) FROM v0, t1;SELECT DISTINCT UNLIKELY(DISTINCT vt0.c0) FROM vt0 GROUP BY (((((((t1.c75))==((x'b1d64bd2'))))OR(((rt0.c2)>(rt0.c2)))))OR((NOT (rt0.c1)))) ORDER BY (((rt0.c2 IN (t1.c76, rt0.c1, vt0.c0)))|(((t1.c75)|(t1.c76)))) ASC  NULLS LAST;SELECT ALL ((((rt0.c0) NOT NULL)) ISNULL) FROM v0, rt0, vt0, t1 WHERE (((SUBSTR('0.25296942283351886', NULL)) NOT NULL)); -- 0ms;
SELECT ALL NULL FROM vt0, t1, v0 WHERE ((+ (x'dac0' COLLATE RTRIM))); -- 0ms;
SELECT ((((t1.c75)<<(t1.c75)))LIKE(((rt0.c2)>(rt0.c1)))) FROM vt0, t1, v0 GROUP BY (CAST(x'' AS REAL) IN ()) HAVING ((((t1.c69) BETWEEN (t1.c76) AND (0.8202457736354393))) NOTNULL);SELECT DISTINCT (((+ (t1.c75))) BETWEEN (0.5634439402800574) AND ((t1.c69 IN (t1.c69, vt0.c0)))), COUNT(CASE WHEN vt0.c0 THEN t1.c75 WHEN t1.c69 THEN v0.c0 WHEN rt0.c2 THEN t1.c1 END) OVER (), vt0.c0 FROM v0 GROUP BY ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, vt0.c0)) AND ((t1.c76, t1.c76, NULL))) IN ()), ((((vt0.c0)>=(t1.c73))) NOT NULL), NULL ORDER BY CAST(((t1.c73) NOT NULL) AS BLOB) DESC  NULLS LAST;SELECT PERCENT_RANK() OVER ( ORDER BY NULL, ((((((t1.c69) ISNULL))AND((NOT (vt0.c0)))))AND((vt0.c0 IN (rt0.c2)))) DESC  NULLS LAST) FROM vt0 WHERE (((((0.7559699420668053) BETWEEN ('邀tI9') AND (''))) BETWEEN (x'' COLLATE RTRIM) AND (((x'')/(x'dbd6'))))) ORDER BY ((t1.c73 COLLATE BINARY) NOT BETWEEN (UPPER(DISTINCT 'KTćO')) AND (((t1.c1) NOT BETWEEN (t1.c75) AND (t1.c69))));SELECT ALL SUM(((((((((rt0.c2)OR(vt0.c0)))AND(x'9b13eaa1')))OR(v0.c0)))OR(t1.c1)) COLLATE BINARY) OVER () FROM rt0 WHERE ((((('-374231637')|('190554096')))LIKE((((((((('')OR('0.1774556148301375')))OR(x'')))OR(x'')))AND(x'')))));SELECT ALL CAST((~ (vt0.c0)) AS BLOB) FROM v0, vt0 LIMIT 1421238226 OFFSET 843551991; -- 1ms;
SELECT DISTINCT MIN(((t1.c69)<=(vt0.c0))) FROM vt0, t1, v0, rt0; -- 131ms;
SELECT ((t1.c75) NOT BETWEEN ((((t1.c1, t1.c1, rt0.c1))==((t1.c76, rt0.c2, rt0.c1)))) AND (TOTAL(v0.c0))), (rt0.c1 IN ()) COLLATE RTRIM, t1.c75 FROM rt0, v0, t1, vt0; -- 62ms;
SELECT (CASE WHEN rt0.c0 THEN vt0.c0 WHEN NULL THEN t1.c76 WHEN rt0.c2 THEN v0.c0 END IN ((((rt0.c2)) BETWEEN ((t1.c73)) AND ((t1.c75))))), vt0.c0 COLLATE BINARY, (~ ((+ (vt0.c0)))) FROM vt0, t1, v0, rt0; -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t1 WHERE (((((0.8422262489147312)IS(NULL)))||((NOT (NULL))))); -- 0ms;
SELECT ALL ((((((t1.c1)>>(v0.c0)))AND(((t1.c69) NOTNULL))))OR(CAST(t1.c76 AS INTEGER))) FROM vt0 WHERE ((((~ (''))) NOT BETWEEN (CASE WHEN 0.9437647180453234 THEN 0.6022346988508592 WHEN x'' THEN -8.77223013E8 WHEN 0.02815545117619067 THEN -8.56586248E8 WHEN x'' THEN '' WHEN 'J_<|9ZA' THEN '0.2706142829439875' WHEN '-1331880077' THEN '' WHEN NULL THEN x'' END) AND ((0.8765991231650634 IN ()))));SELECT ((t1.c75 COLLATE NOCASE) BETWEEN (x'') AND ((+ (vt0.c0)))), ((v0.c0)OR(t1.c76)) COLLATE RTRIM, -1.366162323E9 FROM rt0;SELECT ALL '1279280293' FROM vt0, v0 GROUP BY (((((t1.c1)) BETWEEN ((vt0.c0)) AND ((t1.c73)))) BETWEEN ((((t1.c1, t1.c69, rt0.c1, vt0.c0, 0.6877022842861693)) NOT BETWEEN ((t1.c76, 0.6156803968889294, rt0.c2, NULL, t1.c69)) AND ((NULL, vt0.c0, t1.c69, '', x'')))) AND (CAST(t1.c1 AS REAL))) HAVING CASE ((rt0.c1) NOTNULL)  WHEN '1522692199' THEN ((rt0.c1)>(t1.c1)) ELSE (((t1.c75, rt0.c2, t1.c76))<((t1.c76, rt0.c2, v0.c0))) END;SELECT (('')IS NOT(rt0.c2)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT (((('-1173453520') NOTNULL)) IS FALSE), (((t1.c73) BETWEEN (t1.c76) AND (vt0.c0)) IN ()), (((NULL))==((((rt0.c2) BETWEEN (t1.c76) AND (t1.c1))))), TOTAL(((rt0.c1) ISNULL)), ((('' IN (vt0.c0)))GLOB(((t1.c75)>>(t1.c1)))) FROM rt0, v0 WHERE ((((x'e215' IN ()))LIKE(((1.379520642E9) NOT BETWEEN ('1759197275') AND (x''))))) LIMIT 1926182601 OFFSET -1689595209;SELECT DISTINCT CAST((~ (t1.c69)) AS REAL) FROM vt0, rt0, v0 WHERE (((LOWER(DISTINCT NULL)) NOT BETWEEN ((NOT (NULL))) AND (((38080429)AND(-366375689)))));SELECT SUM(((t1.c76) NOTNULL)) FROM t1; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT t1.c69))>>((~ (t1.c69)))) FROM vt0 WHERE ((((((x'8c14') IS FALSE), 8.49439696E8, ((NULL)<=(x'ad30'))))=((UPPER(x''), ((x'fbd33d27') NOT NULL), x'421b' COLLATE BINARY))));SELECT DISTINCT LAST_VALUE(((((t1.c75)IS NOT(t1.c75))) NOT BETWEEN (COALESCE(t1.c69, v0.c0)) AND (((((((((v0.c0)AND(t1.c69)))AND(t1.c1)))OR(vt0.c0)))AND(t1.c1))))) OVER () FROM t1, vt0, v0; -- 78ms;
SELECT ((HEX('0.6277022313815596')) BETWEEN (((rt0.c0)AND(rt0.c0))) AND ((t1.c75 IN (t1.c75, t1.c69)))) FROM vt0, v0;SELECT AVG((((vt0.c0))=((t1.c73)))) OVER ( ORDER BY (t1.c69 IN (rt0.c2)) COLLATE BINARY  NULLS LAST, CASE LOWER(rt0.c1)  WHEN ((((v0.c0)OR(t1.c76)))AND(t1.c1)) THEN ((rt0.c2) IS FALSE) ELSE ((NULL) IS TRUE) END  NULLS FIRST) FROM vt0;SELECT (((((rt0.c2, vt0.c0, t1.c76)) BETWEEN ((t1.c75, v0.c0, rt0.c2)) AND ((rt0.c0, t1.c75, rt0.c0)))) NOT NULL) FROM v0 INNER JOIN vt0 ON ABS('έI') COLLATE RTRIM FULL OUTER JOIN rt0 ON ((COALESCE(',yj	P鴨.ࢂ', t1.c69))>>(((rt0.c1) IS FALSE))) WHERE (((CAST('1270150807' AS BLOB)) NOT BETWEEN (IFNULL(0.5942959185460481, x'ea2a67c4')) AND (0.055485249939302705 COLLATE BINARY)));SELECT DISTINCT (SUM(rt0.c0) IN ()) FROM vt0, rt0, t1, v0; -- 1ms;
SELECT ALL CASE WHEN (~ (t1.c69)) THEN COALESCE(rt0.c0, vt0.c0) WHEN ((rt0.c1) NOT NULL) THEN (((t1.c76, t1.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((t1.c73, rt0.c2, rt0.c2))) WHEN -143378372 THEN ((((((((t1.c73)OR(vt0.c0)))AND(rt0.c1)))OR(t1.c73)))OR(rt0.c1)) END, CASE (+ (vt0.c0))  WHEN SQLITE_COMPILEOPTION_USED(t1.c73) THEN (t1.c76 IN (1530925159, t1.c75)) END, ((((vt0.c0)<(rt0.c1)))-(CASE 'O[ᕮ?3-_CJ'  WHEN t1.c75 THEN t1.c75 ELSE t1.c75 END)) FROM t1, vt0, rt0 WHERE (((0.37115646105336997 IN ()) IN ())); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN t1.c73 ELSE t1.c1 END) IS TRUE), COUNT(json_array_length(x'0c5d')) OVER (), CUME_DIST() OVER ( ORDER BY ABS((NOT (-9223372036854775808))) ASC  NULLS LAST, ((((((('-630138877')) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))AND(NULLIF(DISTINCT 0.33721963341032835, v0.c0))))OR((+ ('843551991'))))) FROM t1;SELECT DISTINCT ((((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(t1.c1))) NOT NULL), CAST((- (t1.c76)) AS BLOB), CASE rt0.c1  WHEN (((rt0.c2)) BETWEEN ((t1.c73)) AND ((rt0.c2))) THEN CAST(t1.c75 AS BLOB) ELSE (((0.24135758416828468, t1.c73, t1.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, vt0.c0)) AND ((t1.c1, vt0.c0, '-1849264977'))) END FROM t1 INNER JOIN v0 ON CASE CAST(t1.c1 AS INTEGER)  WHEN ((vt0.c0)|(t1.c69)) THEN 0.6984351298109471 WHEN (t1.c69 IN ()) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c2)IS(t1.c75)) ELSE t1.c1 COLLATE BINARY END WHERE (CASE WHEN CASE 'b~'  WHEN 853263453 THEN 'IbK' ELSE 0.3434164694171601 END THEN ((0Xffffffff8c04a4d3) IS TRUE) END);SELECT t1.c75 FROM t1, vt0 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS TEXT) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (CAST(rt0.c0 AS REAL) IN ()) FROM v0, t1, rt0; -- 0ms;
SELECT ALL CASE WHEN ((v0.c0) NOT NULL) THEN ((rt0.c0) BETWEEN (t1.c76) AND (v0.c0)) END FROM vt0 WHERE (LTRIM(((x'') IS FALSE)));SELECT ALL ((CAST(vt0.c0 AS TEXT)) BETWEEN (rt0.c1 COLLATE RTRIM) AND (0.11488721195070906)) FROM v0, t1, vt0, rt0 WHERE (((((((((CASE '-1773605947'  WHEN NULL THEN 'zni罹' ELSE 0.08975929231598123 END)AND((((0.7581506131137034, x'b294', 0.4058613196255033)) BETWEEN (('-198004217', x'7995', 0.9169622499655786)) AND ((NULL, x'129a', ''))))))OR((+ ('o[ᕮ?3-_cj')))))OR(CAST('-857771290' AS INTEGER))))OR(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT t1.c69 FROM t1, vt0 WHERE ((((((('-1130079431') NOT NULL))OR(((NULL) NOT BETWEEN (0Xffffffff8c04a4d3) AND (0.49872335686157376)))))OR(((((x'')AND('KTćO')))OR(x''))))) ORDER BY t1.c76 DESC; -- 0ms;
SELECT DISTINCT t1.c69 FROM vt0;SELECT CAST(((t1.c73)+('1530925159')) AS INTEGER) FROM t1, v0 ORDER BY ((t1.c76)>=(' C')) COLLATE BINARY  NULLS LAST LIMIT -799422711 OFFSET -962902196; -- 4ms;
SELECT DISTINCT (((rt0.c0, t1.c75, rt0.c0)) NOT BETWEEN ((((((t1.c69)OR(t1.c76)))OR(t1.c73)), ((rt0.c1)/(rt0.c0)), ((vt0.c0)>(t1.c1)))) AND ((t1.c76 COLLATE NOCASE, ((rt0.c1)>(t1.c75)), t1.c75))), (~ (t1.c73)), json_insert(COUNT(t1.c1), CASE '-699880267'  WHEN 0.8202457736354393 THEN x'8225' ELSE rt0.c1 END, (t1.c69 IN ())) FROM rt0, vt0, t1, v0 WHERE ((ABS('W!M') IN ())) ORDER BY CASE ((((((((rt0.c0)AND(t1.c76)))OR(t1.c69)))OR(v0.c0)))OR(t1.c73))  WHEN CASE rt0.c0  WHEN t1.c69 THEN x'2aa0' END THEN '1022051469' ELSE ((rt0.c0)/(rt0.c2)) END; -- 0ms;
SELECT DISTINCT ((t1.c1 COLLATE NOCASE) BETWEEN (rt0.c1) AND (((((rt0.c0)OR(t1.c69)))OR(rt0.c1)))) FROM vt0 GROUP BY ((((t1.c1 IN ())))=((((t1.c73) BETWEEN (vt0.c0) AND (t1.c69))))) HAVING NULL;SELECT DISTINCT (COUNT(t1.c75) IN ()) FROM vt0, v0, rt0; -- 1ms;
SELECT ALL (+ (((((rt0.c0)AND(t1.c75)))AND(rt0.c0)))) FROM t1, v0 WHERE (CAST(((976779739) NOT BETWEEN ('1530925159') AND (x'')) AS BLOB));SELECT ALL ((((v0.c0)|('223876663'))) NOTNULL) FROM rt0, t1, vt0 GROUP BY ((((rt0.c2)IS NOT(v0.c0)))+(('1046338955' IN ()))), ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (t1.c76) AND (((rt0.c2) NOT NULL))), ((0Xffffffff83656861)LIKE(COALESCE(DISTINCT t1.c76, vt0.c0))), CAST(((((rt0.c1)OR(rt0.c1)))AND(t1.c1)) AS INTEGER), CASE WHEN (rt0.c1 IN ()) THEN (('Aqik ')=(t1.c73)) WHEN (((('1462828117')OR(vt0.c0)))OR(vt0.c0)) THEN (t1.c76 IN (rt0.c1)) WHEN TRIM(t1.c69, t1.c69) THEN CAST(t1.c1 AS TEXT) ELSE ((t1.c69)<(t1.c76)) END HAVING CASE t1.c73  WHEN CAST(x'788a' AS INTEGER) THEN ((rt0.c0)|(t1.c76)) END;SELECT ((((x'') ISNULL)) NOT BETWEEN (((((t1.c76)AND(t1.c75)))AND(rt0.c0))) AND (((t1.c69) IS FALSE))), x'', ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(t1.c1 AS INTEGER)) AND (t1.c69 COLLATE RTRIM)) FROM t1, v0, vt0 WHERE (SQLITE_SOURCE_ID());SELECT ALL (((t1.c76 COLLATE RTRIM))>((0.8043947838262134))) FROM vt0, rt0 WHERE (CAST(CAST('FALSE' AS NUMERIC) AS BLOB));SELECT DISTINCT t1.c1 FROM v0, vt0, t1 ORDER BY ((((((t1.c73) NOT BETWEEN (rt0.c2) AND (t1.c76)))AND((('')<>(vt0.c0)))))OR(CASE t1.c73  WHEN t1.c73 THEN rt0.c2 ELSE rt0.c0 END)) DESC;SELECT ALL ((((((v0.c0)OR(t1.c76)))AND(rt0.c2))) NOT BETWEEN (((t1.c73)>=(t1.c73))) AND (v0.c0)), CAST(((((((((t1.c69)AND(-1.331880077E9)))OR(t1.c75)))AND(x'af87a121')))AND(rt0.c1)) AS INTEGER), NTILE((((((t1.c73))>=((vt0.c0))))<=(t1.c73 COLLATE RTRIM))) OVER ( PARTITION BY CAST(CASE WHEN rt0.c1 THEN vt0.c0 ELSE t1.c1 END AS INTEGER), '') FROM t1, vt0, v0 WHERE (x'2f5b');SELECT DISTINCT ((((rt0.c0, t1.c1, rt0.c2)) NOT BETWEEN ((t1.c1, rt0.c0, t1.c69)) AND ((rt0.c1, vt0.c0, vt0.c0))) IN ()), CASE WHEN x'' THEN t1.c76 COLLATE RTRIM ELSE t1.c1 COLLATE NOCASE END, (CASE t1.c69  WHEN t1.c75 THEN vt0.c0 END IN ((v0.c0 IN ()), CASE rt0.c1  WHEN t1.c69 THEN t1.c75 ELSE t1.c76 END)) FROM v0;SELECT DISTINCT ((t1.c69 COLLATE NOCASE) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) FROM v0 WHERE ('~%');SELECT ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END)AND((~ (t1.c69)))))OR(TRIM(t1.c76))), (t1.c73 IN ()) COLLATE NOCASE, vt0.c0 FROM rt0, t1 WHERE (CAST(((-8.5777129E8) IS TRUE) AS NUMERIC));SELECT DISTINCT ((((rt0.c2, t1.c69, t1.c75, t1.c69, t1.c69))<=((t1.c75, x'', v0.c0, NULL, v0.c0))) IN ()) FROM v0, vt0, t1, rt0 GROUP BY CAST(((t1.c1) NOT NULL) AS BLOB); -- 557ms;
SELECT ALL CAST(((((rt0.c0)AND(t1.c1)))OR(t1.c76)) AS REAL) FROM rt0, vt0 WHERE (ABS(DISTINCT CASE x'35be'  WHEN x'' THEN '1595575187' ELSE '6' END));SELECT DISTINCT ((((t1.c75)OR(t1.c75)))AND(t1.c73)) COLLATE RTRIM FROM vt0, rt0, t1 WHERE ((- ('626584515' COLLATE NOCASE))); -- 14ms;
SELECT DISTINCT NULL FROM rt0, vt0, t1 WHERE ((((((x'') NOT BETWEEN (x'f6dc') AND (NULL)), CASE ''  WHEN 0.8202457736354393 THEN x'' WHEN '' THEN '-2003468780' WHEN '0' THEN NULL ELSE NULL END, CASE '>N'  WHEN 'epSx?Yy' THEN 'B?' END))<>((((0.44735278951682866)&(0.3589362125154115)), (0Xffffffffbbae3a6f IN ()), NULL COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT t1.c69, ((t1.c76)|(t1.c69)) COLLATE NOCASE, ((t1.c73) BETWEEN (0.46874711691117854) AND (((t1.c69) BETWEEN (t1.c73) AND (0.8586098269948922)))) FROM v0, rt0, t1, vt0 GROUP BY ((rt0.c0)IS NOT(t1.c75)) COLLATE RTRIM HAVING INSTR(SUBSTR(rt0.c1, t1.c75), x'c9d7') ORDER BY ((((((((((t1.c76)OR(rt0.c1)))AND(t1.c69)))AND(t1.c1)))AND(rt0.c0))) IS TRUE)  NULLS LAST, ((((((((((v0.c0)AND(t1.c1)))OR(rt0.c0)))OR(rt0.c0)))OR(t1.c76)))>(((t1.c73)-(rt0.c1)))), vt0.c0  NULLS LAST; -- 827ms;
SELECT (((t1.c73)) NOT BETWEEN (((+ (rt0.c1)))) AND ((((((t1.c75)OR(t1.c75)))AND(t1.c76))))) FROM rt0;SELECT ALL CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC), t1.c69, rt0.c1 FROM v0, rt0, vt0, t1 WHERE ((((0X7c2ce523)) NOT BETWEEN ((TOTAL_CHANGES())) AND (((~ (0.06579909329483202)))))); -- 1ms;
SELECT ALL CAST('X-WQUk/' AS TEXT), (+ (((t1.c1)-(rt0.c2)))), (rt0.c2 IN (NULL)) COLLATE RTRIM FROM vt0, t1, rt0; -- 0ms;
SELECT CAST(((vt0.c0)IS NOT(t1.c1)) AS INTEGER) FROM vt0, rt0 ORDER BY CAST(((vt0.c0) ISNULL) AS NUMERIC) ASC;SELECT ALL CASE WHEN CASE t1.c76  WHEN t1.c75 THEN t1.c76 END THEN IFNULL(DISTINCT vt0.c0, rt0.c0) END, ((rt0.c1) ISNULL), CAST(CAST(rt0.c0 AS BLOB) AS BLOB), CAST(t1.c69 AS NUMERIC) COLLATE BINARY, ((((((t1.c73)OR(t1.c1)))OR(t1.c69))) NOT NULL) FROM vt0, t1, v0 ORDER BY 0Xd581637  NULLS FIRST, ((MAX(v0.c0, rt0.c1))>=(vt0.c0 COLLATE BINARY));SELECT ((CAST(t1.c73 AS REAL)) BETWEEN (((t1.c76)||(v0.c0))) AND ((-1917602740 IN (rt0.c1, t1.c73)))), CAST((rt0.c0 IN ()) AS NUMERIC), ((t1.c73 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (t1.c73)) FROM rt0, t1 WHERE (((((('', NULL, 1.383172003E9)) NOT BETWEEN (('OV*', '', x'')) AND (('Aqik ', 0.8108715708547534, NULL))))IS NOT((('-975188539') NOT BETWEEN (-1.348873693E9) AND (0.6681612695740791)))));SELECT DISTINCT DENSE_RANK() OVER () FROM v0 WHERE (CASE WHEN (- (x'')) THEN 0.19499567200335355 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT ((MIN(t1.c69)) NOT NULL), (((vt0.c0)) BETWEEN ((((t1.c76)*(t1.c1)))) AND ((rt0.c2))), (((+ (rt0.c1)))>(t1.c73 COLLATE RTRIM)) FROM vt0 WHERE (json_valid(NULL COLLATE NOCASE));SELECT DISTINCT ((((rt0.c0) BETWEEN (vt0.c0) AND (t1.c73)))IS(CASE t1.c75  WHEN x'' THEN t1.c73 ELSE t1.c76 END)) FROM v0, t1 WHERE (load_extension(CASE 'c6'  WHEN 0.02277367742357772 THEN 0.22818930322219455 ELSE '-20882464' END, '-926794175'));SELECT rt0.c1 FROM rt0, vt0, t1, v0; -- 1ms;
SELECT DISTINCT ((MAX('')) BETWEEN (TRIM(DISTINCT v0.c0, t1.c1)) AND (HEX(DISTINCT v0.c0))) FROM v0, vt0, rt0;SELECT DISTINCT CASE x''  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c0 WHEN ((((((((((((t1.c76)AND(rt0.c0)))AND(vt0.c0)))OR(0xffffffff80f63245)))OR(rt0.c1)))OR(vt0.c0)))AND(v0.c0)) THEN ((t1.c75)/(t1.c1)) WHEN ((rt0.c2)||(t1.c1)) THEN (-1457708487 IN ()) ELSE CASE WHEN t1.c75 THEN rt0.c0 END END FROM vt0, v0;SELECT (((((rt0.c1)) BETWEEN ((t1.c69)) AND ((t1.c1)))) IS TRUE), AVG(((t1.c75)>(t1.c75))) FILTER(WHERE (((t1.c69, v0.c0, rt0.c0)) BETWEEN ((highlight(t1.c69, t1.c76, vt0.c0, vt0.c0), (rt0.c0 IN (rt0.c2)), TYPEOF(DISTINCT t1.c76))) AND ((((t1.c73)<<(rt0.c2)), NULL, rt0.c2)))) OVER (), CASE WHEN ((rt0.c0) NOT NULL) THEN ((t1.c69)OR(t1.c75)) WHEN ((v0.c0)>(t1.c69)) THEN (t1.c69 IN ()) WHEN t1.c75 THEN ((v0.c0) NOT BETWEEN (t1.c1) AND (v0.c0)) END FROM vt0, v0, t1;SELECT DISTINCT CASE t1.c69 COLLATE BINARY  WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (((rt0.c2))==((t1.c75))) THEN CASE WHEN t1.c69 THEN -4.76341558E8 END WHEN ((t1.c69) IS TRUE) THEN (((t1.c75))>((rt0.c1))) END, (0Xffffffff83bdf53b IN ()), (((((((((NOT (rt0.c0)))OR(t1.c76 COLLATE BINARY)))AND(((rt0.c1) BETWEEN (t1.c1) AND (rt0.c2)))))AND((~ (0.8438322042314566)))))OR('1734089309')), ((((((((((t1.c75)AND(rt0.c1)))AND(rt0.c1)))AND(t1.c1)))AND(v0.c0))) BETWEEN ((t1.c76 IN ())) AND (((0x260657f7)||(t1.c69)))), (((((0Xffffffffbcfa748a, t1.c75, rt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, t1.c69)) AND ((vt0.c0, t1.c73, t1.c69)))) NOTNULL), AVG(((t1.c73) ISNULL)) OVER (), (JULIANDAY(rt0.c1, t1.c73, v0.c0) IN ()) FROM t1, v0, rt0, vt0 WHERE (((((((x'')|(0.4411854543650573)))OR((~ (NULL)))))OR((- (0X660a454c))))); -- 1017ms;
SELECT 'wDየh' FROM vt0, t1, v0, rt0 WHERE (CASE WHEN 0.5760347043688049 THEN x'' END COLLATE NOCASE) ORDER BY CAST(CAST(t1.c1 AS REAL) AS BLOB) ASC; -- 0ms;
SELECT ALL t1.c73 FROM v0 RIGHT OUTER JOIN vt0 ON ((((t1.c1)<>(rt0.c1))) IS TRUE) WHERE (LENGTH(((NULL) IS FALSE))) LIMIT -472094917 OFFSET 1865120874;SELECT ALL PERCENT_RANK() OVER (), (((rt0.c0, t1.c73, t1.c1)) BETWEEN (((rt0.c1 IN ()), AVG(NULL), CAST(rt0.c2 AS REAL))) AND ((((rt0.c2)&(t1.c73)), MAX(rt0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))))), '1506979495' FROM vt0 WHERE (CAST(((9.1846027E7)>=('-820048349')) AS TEXT)) ORDER BY (((((t1.c69)) BETWEEN ((t1.c73)) AND ((v0.c0)))) NOT BETWEEN (0.47007709614194126) AND (((rt0.c2)||(vt0.c0))));SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND ('H8'))) NOT BETWEEN ((((t1.c75, NULL, '-1951130600')) NOT BETWEEN ((t1.c76, v0.c0, NULL)) AND ((t1.c75, t1.c76, v0.c0)))) AND ((((NULL, NULL, t1.c73)) BETWEEN ((t1.c1, v0.c0, v0.c0)) AND ((t1.c69, t1.c1, t1.c73))))), load_extension((((v0.c0))<((t1.c75))), t1.c75 COLLATE RTRIM), ((((COUNT(*))OR(((((t1.c76)AND(rt0.c0)))AND(vt0.c0)))))AND((vt0.c0 IN ()))) FROM v0, rt0 WHERE (((((NULL, x'', 0.20004726989432342)) BETWEEN ((0xffffffffcbb6a39b, '', x'38c1')) AND (('Y覚', x'de7d166f', -1.7976931348623157E308))) IN ()));SELECT DISTINCT ((((t1.c75)AND(rt0.c1 COLLATE BINARY)))AND((- (vt0.c0)))), AVG(((rt0.c0) NOTNULL)) FILTER(WHERE '-1318339150') OVER (), ((((rt0.c1) IS TRUE)) ISNULL), COUNT(((((v0.c0)OR(rt0.c2)))AND(v0.c0))), '', (((+ (rt0.c2))) BETWEEN (((t1.c76)<(rt0.c0))) AND (AVG(rt0.c0))), (((rt0.c1))>=((CAST(rt0.c1 AS TEXT)))) FROM t1, v0 ORDER BY t1.c1 DESC  NULLS FIRST;SELECT DISTINCT 0xffffffff8275f825 FROM t1, rt0, v0 WHERE ('q'); -- 0ms;
SELECT DISTINCT LAST_VALUE(vt0.c0) OVER () FROM rt0, vt0 WHERE (((('1269637812')) BETWEEN (('-856586248')) AND ((NULL))) COLLATE RTRIM) LIMIT 2117263322; -- 0ms;
SELECT ((RTRIM(vt0.c0)) IS TRUE) FROM t1, v0, vt0, rt0; -- 1ms;
SELECT ((((t1.c76) IS TRUE)) IS FALSE) FROM t1, rt0, v0, vt0 WHERE (CASE WHEN (((1.522692199E9)) NOT BETWEEN ((-1738470700)) AND (('% '))) THEN ((0.9035720589051017)LIKE(x'')) WHEN (((x''))!=(('LxxY(RG!'))) THEN x'' COLLATE NOCASE WHEN ((((0.191612941208112)AND(0.9159085200306174)))AND(-544742253)) THEN ((0.5048195513808557) ISNULL) WHEN NULL COLLATE BINARY THEN NULL WHEN CASE 0xffffffff82ec994f  WHEN 0.7267401724455246 THEN '' END THEN (~ (x'77b0')) END) LIMIT 1754111963 OFFSET 1269637812; -- 0ms;
SELECT DISTINCT ((CAST(NULL AS NUMERIC))|((((t1.c73, t1.c73, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, t1.c73)) AND ((x'01f8', rt0.c2, '0.5760347043688049'))))) FROM t1, vt0 GROUP BY CASE NULL  WHEN ((((t1.c1)OR(rt0.c2)))AND(rt0.c0)) THEN LIKELIHOOD(DISTINCT t1.c73, 0.2760848227989867) END;SELECT ALL '' FROM v0 WHERE ((((((0.7136716514117423)/(x''))))>=(((((('ek')OR(NULL)))AND(1.389805578E9)))))) GROUP BY (((((((t1.c75)AND(rt0.c2)))AND(rt0.c0))))!=((((t1.c75)<<(rt0.c2)))));SELECT DISTINCT CAST(CAST(rt0.c0 AS TEXT) AS INTEGER) FROM v0 WHERE (((((0xffffffffebd25b39) IS TRUE))<=((~ (1.383172003E9))))) ORDER BY rt0.c1  NULLS LAST;SELECT (~ (t1.c76)) FROM vt0, rt0, v0, t1; -- 1ms;
SELECT DISTINCT CAST((((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c75, '27704809', rt0.c1)) AND ((rt0.c1, t1.c69, t1.c1))) AS REAL) FROM v0, rt0, vt0;SELECT ALL ((rt0.c0 COLLATE NOCASE)|(((rt0.c1)<=(t1.c75)))) FROM rt0, t1, vt0, v0; -- 1ms;
SELECT DISTINCT ((GLOB(x'3769491b', t1.c76)) NOT NULL) FROM t1 INDEXED BY i85, rt0, v0;SELECT vt0.c0 FROM t1, v0;SELECT DISTINCT (((t1.c75, rt0.c2, x'13ab')) BETWEEN ((rt0.c2, ((rt0.c0) BETWEEN (t1.c73) AND (v0.c0)), MAX(t1.c73))) AND ((t1.c1, v0.c0 COLLATE RTRIM, ((t1.c69)<(rt0.c0))))) FROM vt0, t1, rt0;SELECT ((t1.c75) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE FROM v0, vt0, rt0, t1; -- 1ms;
SELECT ALL ((((((t1.c76)=(t1.c75)))OR(GROUP_CONCAT(t1.c69))))AND(rt0.c2 COLLATE BINARY)) FROM t1, vt0, rt0, v0 LIMIT -851706953 OFFSET 1577362558; -- 51ms;
SELECT ALL (((CASE WHEN 0.06499849843078132 THEN t1.c1 ELSE t1.c75 END))>((''))) FROM rt0, vt0, v0 WHERE (((((('1805824849', x'', x'1a15')) BETWEEN ((-831911806, 599158631, x'')) AND ((0.4033238493253952, NULL, x'')))) ISNULL));SELECT ALL CASE ((t1.c76)GLOB(vt0.c0))  WHEN CASE WHEN rt0.c2 THEN ')a' END THEN COALESCE(NULL, '䐃殛~oH''8') WHEN CAST(v0.c0 AS REAL) THEN (vt0.c0 IN ()) WHEN HEX(v0.c0) THEN v0.c0 COLLATE NOCASE END FROM t1, rt0, vt0 WHERE (((TYPEOF(NULL))>>((('1301200662') NOT BETWEEN ('1389805578') AND (NULL)))));SELECT CUME_DIST() OVER (), AVG(((((((((v0.c0)OR(rt0.c2)))AND(NULL)))AND(rt0.c1)))AND(t1.c75)) COLLATE NOCASE), rt0.c2 FROM rt0 GROUP BY (((t1.c1)) BETWEEN ((CAST(t1.c73 AS INTEGER))) AND ((((t1.c69) NOT BETWEEN (NULL) AND (t1.c69))))) HAVING ((t1.c73 COLLATE BINARY)&(((((t1.c73)AND(t1.c69)))AND(t1.c73))));SELECT DISTINCT ((((t1.c75)IS NOT(rt0.c1)))||(((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))) FROM rt0, t1, v0, vt0 WHERE ((((x'82f9')<<(-700461914)) IN (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((t1.c69 IN ())) ISNULL) FROM t1, rt0 WHERE ((('1383172003') ISNULL) COLLATE RTRIM) LIMIT -120782943; -- 0ms;
SELECT DISTINCT (((t1.c1)) BETWEEN ((((rt0.c1)-(t1.c76)))) AND (((((rt0.c1, rt0.c0, t1.c69)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c1)) AND ((t1.c69, rt0.c0, t1.c1)))))) FROM t1, v0, rt0 WHERE (CAST(CASE x'b09c'  WHEN '!E' THEN '9쳲疋_Q	' ELSE '223876663' END AS INTEGER));SELECT DISTINCT ((((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c1))) ISNULL) FROM rt0;SELECT COUNT((((t1.c1))<=((NULL)))) OVER ( ORDER BY ((x'')*(NULL)) ASC  NULLS FIRST), AVG(MIN(rt0.c2 COLLATE BINARY)), CASE ((((rt0.c0)AND(x'')))AND(v0.c0))  WHEN ((t1.c1) IS TRUE) THEN 0.5376557978647226 WHEN (((t1.c75, t1.c76, t1.c1))<=((t1.c75, rt0.c1, t1.c75))) THEN 0.5386775086946993 WHEN ((t1.c69) ISNULL) THEN ((rt0.c2)<<(t1.c75)) ELSE ((t1.c75)<<(x'')) END FROM v0, vt0 NOT INDEXED, rt0 WHERE (((CAST(x'' AS NUMERIC)) IS TRUE)) LIMIT 862825553 OFFSET -703846958;SELECT (((((rt0.c2)&(rt0.c2)), SUM(rt0.c1), NULL))!=((((t1.c75) BETWEEN (vt0.c0) AND (rt0.c0)), CAST(t1.c1 AS NUMERIC), UPPER(DISTINCT t1.c73)))), ((COUNT(vt0.c0))>(ABS(t1.c1))), ((((t1.c73 COLLATE RTRIM)AND((((NULL)) BETWEEN ((t1.c1)) AND ((t1.c76))))))OR(GROUP_CONCAT(t1.c69))) FROM rt0;SELECT DISTINCT CAST(AVG(t1.c73) AS REAL) FROM rt0, t1, v0; -- 5ms;
SELECT DISTINCT ((((((vt0.c0)OR(')GEs')))AND(NULL))) IS FALSE) FROM vt0, v0, t1, rt0 WHERE (CAST(CASE '-1330677713'  WHEN 0.8945527761566908 THEN x'' END AS REAL)); -- 0ms;
SELECT DISTINCT CASE t1.c76  WHEN ((rt0.c0)*(vt0.c0)) THEN ((((326727435)AND(v0.c0)))AND(rt0.c2)) WHEN ((vt0.c0)AND(v0.c0)) THEN ((vt0.c0) IS FALSE) WHEN (((((((('G柲')OR(t1.c1)))AND('')))AND(rt0.c1)))OR(v0.c0)) THEN ((t1.c73)*(x'')) END FROM t1, vt0 ORDER BY (((+ (t1.c76)))GLOB((((v0.c0))==((NULL))))) DESC, (- ((- (t1.c69))));SELECT DISTINCT TOTAL((NOT (rt0.c1))) OVER (), ((v0.c0) NOT NULL) COLLATE RTRIM, ((rt0.c2)<>(vt0.c0)) COLLATE NOCASE FROM t1, vt0 WHERE (((((((0xffffffffab40827d)OR('Ycx*[')))OR(x''))) NOT BETWEEN (((NULL)<<(x''))) AND (((((x'')AND('135935857')))OR(NULL))))) GROUP BY CAST(x'acdf' AS NUMERIC) HAVING CASE t1.c76  WHEN AVG(t1.c73) THEN CAST(t1.c76 AS BLOB) END;SELECT GROUP_CONCAT(ABS(t1.c75)) OVER (), ((t1.c75) NOT BETWEEN (t1.c69) AND (rt0.c2)) COLLATE NOCASE, TOTAL((v0.c0 IN ())) OVER () FROM t1, rt0, v0 WHERE (((0.8084062726369493 COLLATE BINARY)||(NULL))); -- 1ms;
SELECT ((CAST('27704809' AS BLOB)) BETWEEN (x'') AND (MIN(rt0.c1))), CASE UPPER(DISTINCT vt0.c0)  WHEN (t1.c75 IN ()) THEN (- (v0.c0)) ELSE SUM(rt0.c2) END, vt0.c0 FROM rt0, t1 WHERE ((- ('+HY'))) GROUP BY CAST(SQLITE_COMPILEOPTION_USED(t1.c75) AS REAL);SELECT (((((t1.c1) BETWEEN (t1.c1) AND (2.23876663E8))))<(((((t1.c76)) NOT BETWEEN ((0.2518914997754811)) AND ((t1.c73)))))) FROM v0, t1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT LIKELIHOOD(CASE t1.c69  WHEN v0.c0 THEN '-87935618' WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN t1.c73 END, 0.0956018469455826) FROM t1 WHERE (((CASE NULL  WHEN NULL THEN '2p0\r' END)>=(x'' COLLATE RTRIM))) ORDER BY ABS(t1.c73 COLLATE BINARY) ASC;SELECT DISTINCT RANK() OVER () FROM rt0, v0 WHERE (CASE ((('㔨yQT㹁')) NOT BETWEEN ((-708828390)) AND (('')))  WHEN 244561511 COLLATE NOCASE THEN 0.5312844238645825 ELSE UPPER(DISTINCT x'') END); -- 0ms;
SELECT DISTINCT COUNT(MIN(t1.c69)), (- (t1.c69 COLLATE NOCASE)), TYPEOF(DISTINCT ((t1.c75)|(t1.c1))) FROM vt0 WHERE (ABS(((x'905b606f') IS FALSE))) ORDER BY CASE WHEN LIKE(t1.c69, t1.c75) THEN LENGTH(rt0.c2) WHEN (- (t1.c76)) THEN ((t1.c69) NOTNULL) WHEN NULL THEN CASE t1.c1  WHEN v0.c0 THEN v0.c0 END ELSE ((t1.c76)>=(t1.c76)) END  NULLS LAST, LIKELY(DISTINCT (((t1.c69, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((t1.c76, t1.c73, rt0.c2))))  NULLS FIRST, ((((((((INSTR(rt0.c2, t1.c1))OR(CAST(t1.c69 AS BLOB))))OR('1029940081')))OR(((t1.c73) NOT NULL))))OR(((((((((0.6699643795581706)AND(t1.c73)))OR('417523224')))AND(t1.c69)))OR(rt0.c1)))) ASC;SELECT DISTINCT (((t1.c75 IN ()))&(((rt0.c2) BETWEEN (t1.c73) AND (t1.c75)))) FROM rt0 WHERE (x'607b');SELECT ALL GROUP_CONCAT((+ (rt0.c0))) FROM rt0 WHERE (NULLIF(x'', '-1705752963') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS BLOB)  WHEN COUNT(*) THEN LIKELY(t1.c76) WHEN ((vt0.c0)>(vt0.c0)) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((((((rt0.c0)AND(v0.c0)))AND(t1.c76)))OR(vt0.c0)))OR(rt0.c2)) THEN ((rt0.c1)IS(rt0.c1)) ELSE (- (rt0.c2)) END, ROUND(((v0.c0)-(t1.c69)), ((t1.c75)AND(rt0.c0))), ((rt0.c2)AND(v0.c0)) FROM v0, vt0 NOT INDEXED, rt0 WHERE ((- ('qpx ')));SELECT DISTINCT ((rt0.c0 COLLATE BINARY)GLOB(((t1.c76)>=(rt0.c2)))) FROM vt0 WHERE ((NOT (NULL)));SELECT ALL ((((CAST(rt0.c2 AS INTEGER))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t1.c1))))))OR(((rt0.c2) ISNULL))) FROM v0 NOT INDEXED, t1 WHERE (x'');SELECT ALL ('?B㒎V#(w' IN ()) FROM v0, rt0, t1, vt0 WHERE (CASE WHEN CAST(NULL AS INTEGER) THEN CASE WHEN 0Xfffffffff774383c THEN 0xffffffff9fdabe5d ELSE x'25ea' END WHEN CASE 0.0951199313229667  WHEN NULL THEN 0.8170893036191532 END THEN x'' COLLATE NOCASE WHEN (-926794175 IN (0.03461878338619273)) THEN (('849439696')<('1357210417')) ELSE (('G(NP#G') NOTNULL) END) ORDER BY (((((t1.c69, rt0.c0, t1.c76)) BETWEEN ((vt0.c0, t1.c69, rt0.c0)) AND ((t1.c1, t1.c75, rt0.c0)))) NOT NULL); -- 530ms;
SELECT ALL ((CASE x''  WHEN rt0.c0 THEN t1.c73 END) IS TRUE), (((((t1.c69)IS(0Xffffffff9a588d2f)), (((rt0.c2, 'ꓪu>', t1.c1)) NOT BETWEEN ((t1.c76, t1.c1, 0Xd581637)) AND ((x'', t1.c1, vt0.c0))), ((NULL)>>(0.20859505114403754))))>=(((t1.c76 IN ()), ((t1.c73)>=(t1.c1)), COUNT(vt0.c0)))), (~ ((~ (t1.c75)))) FROM rt0 WHERE ((((((- (1.7976931348623157E308)))OR(((((x'')OR(NULL)))AND(0.5224549335794075)))))AND(((0x2689ff2b)||('-1351215197')))));SELECT DISTINCT ((((((((t1.c76)OR(vt0.c0)))AND(vt0.c0)))OR(((rt0.c2)&(t1.c1)))))OR(((0.8770342664352203) ISNULL))) FROM t1;SELECT DISTINCT (((((((rt0.c0))==((v0.c0))))OR((((rt0.c0))<=((rt0.c1))))))OR((t1.c75 IN ()))) FROM rt0 WHERE ((((-0.0 IN ()))/(x'72fd' COLLATE BINARY)));SELECT CUME_DIST() OVER (), v0.c0, TOTAL(((t1.c69)AND(']*m콡'))), NTILE(json_array_length(CAST(t1.c73 AS NUMERIC), 1.94068191E8)) OVER (), (NOT (HEX(rt0.c0))), AVG((x'7906f490' IN ())), rt0.c2 FROM t1 WHERE (CASE ((x'') BETWEEN (x'') AND (x'd1ba'))  WHEN (((('1061415845')OR('3\鿚\n.yL')))AND(2.7704809E7)) THEN ('([dI]' IN ()) ELSE ((0.7318154827590404) IS FALSE) END);SELECT DISTINCT CAST(((t1.c76) BETWEEN (rt0.c1) AND (t1.c76)) AS REAL) FROM vt0, rt0;SELECT ALL DENSE_RANK() OVER (), (((('853263453')AND(LTRIM(rt0.c1))))OR(TOTAL(t1.c1))), SUM(MAX(((((((((((((t1.c76)AND(t1.c69)))OR(t1.c75)))OR('^+陻}')))AND('Tnd\n~k')))OR(rt0.c1)))AND(vt0.c0)))) FROM v0 WHERE (((NULL) ISNULL) COLLATE RTRIM);SELECT CASE WHEN (~ (v0.c0)) THEN (+ (rt0.c1)) ELSE (t1.c75 IN (0.2189015195393461)) END, ((UPPER(NULL)) ISNULL), CUME_DIST() OVER () FROM v0, t1, vt0;SELECT ((ABS(t1.c73)) BETWEEN (t1.c69 COLLATE NOCASE) AND (LIKELY(rt0.c2))), ((((((((((t1.c69) BETWEEN (rt0.c0) AND (rt0.c1)))AND(rt0.c1 COLLATE BINARY)))OR(((((rt0.c0)OR(vt0.c0)))OR(t1.c75)))))AND('-576634046')))OR(TOTAL(vt0.c0))), (((((t1.c75)<=(rt0.c2)), rt0.c2 COLLATE BINARY, (+ (t1.c75))))>=((CASE WHEN rt0.c0 THEN t1.c69 WHEN v0.c0 THEN t1.c69 WHEN t1.c75 THEN rt0.c0 END, x'', GROUP_CONCAT(v0.c0)))) FROM t1, rt0, v0;SELECT DISTINCT FIRST_VALUE((- (CAST(rt0.c1 AS TEXT)))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND (((rt0.c0 IN ()))<=((t1.c76 IN ()))) PRECEDING), ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.038735258019091945)))AND(((t1.c76) ISNULL))))AND(CAST(t1.c73 AS NUMERIC))), (((('286937153' IN ()), CASE WHEN 0.7755465058295857 THEN rt0.c2 END, ((t1.c1) NOT BETWEEN (t1.c75) AND (rt0.c0))))<((x'', CAST(t1.c69 AS BLOB), ((t1.c75)GLOB(t1.c75))))) FROM v0, rt0 WHERE (((((NULL) NOTNULL))<<((('-1297617730')OR('')))));SELECT ALL (- (((((t1.c75)OR(t1.c1)))AND(vt0.c0)))) FROM vt0, rt0, t1 ORDER BY ((((x'')>=(v0.c0)))<<((((0xffffffffa7abe20b, t1.c1, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, t1.c76)) AND ((NULL, rt0.c2, t1.c75))))) ASC;SELECT ALL LAST_VALUE(((CAST(rt0.c0 AS NUMERIC))/(((rt0.c2)/(rt0.c0))))) OVER () FROM rt0; -- 19ms;
SELECT ALL ((x'') NOT BETWEEN (((v0.c0)>=(t1.c76))) AND ((- (rt0.c0)))), (((t1.c69, '-1e500', t1.c69)) BETWEEN ((((rt0.c0)>('')), MIN(t1.c1), ((t1.c69)%(t1.c75)))) AND (((t1.c76 IN ()), rt0.c0 COLLATE RTRIM, ((((((((t1.c1)AND(t1.c76)))OR(t1.c73)))OR(vt0.c0)))AND(vt0.c0))))), CAST(((((t1.c75)AND(t1.c1)))OR(rt0.c2)) AS BLOB) FROM v0 WHERE ((+ (((NULL)<(NULL)))));SELECT DISTINCT (((((0.47315916830613336)&(0.9401160559660673))))!=((((rt0.c2) NOT BETWEEN (t1.c76) AND (vt0.c0))))) FROM v0 WHERE (CASE WHEN ((813217947)!=(0.6746584759317624)) THEN '0.26753451557803964' ELSE (-50669335 IN ()) END);SELECT DISTINCT (SUM(t1.c76) IN ()), ((((x'')OR((+ (rt0.c2)))))AND((((rt0.c1))=((t1.c73))))), CASE ((t1.c76)/(rt0.c1))  WHEN t1.c73 COLLATE RTRIM THEN ((((t1.c1)OR('')))AND(rt0.c1)) WHEN CAST(v0.c0 AS REAL) THEN CASE WHEN rt0.c0 THEN t1.c1 WHEN t1.c76 THEN t1.c75 WHEN t1.c1 THEN v0.c0 WHEN t1.c1 THEN ' pD{' WHEN v0.c0 THEN t1.c76 END WHEN t1.c1 COLLATE BINARY THEN COUNT(*) END FROM rt0;SELECT ALL t1.c1 FROM rt0, t1 WHERE (CASE (((339313883)) NOT BETWEEN (('0.3886263118591865')) AND (('c6')))  WHEN ((1279280293)*(NULL)) THEN CAST(0.9201356887952223 AS INTEGER) END) GROUP BY (t1.c76 COLLATE BINARY IN (rt0.c0 COLLATE NOCASE)) HAVING ((((SQLITE_SOURCE_ID())AND(CAST(t1.c76 AS INTEGER))))AND(UNLIKELY(DISTINCT t1.c76))); -- 0ms;
SELECT DISTINCT (((t1.c69 IN ())) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ('-877223013')) FROM vt0, t1, rt0, v0 WHERE ((((0.32539748046539774)!=('')) IN ())); -- 1ms;
SELECT DISTINCT (+ ((t1.c1 IN ()))) FROM v0, vt0, rt0 WHERE ((((NULL) IS TRUE) IN ())); -- 0ms;
SELECT (CASE vt0.c0  WHEN vt0.c0 THEN x'1329' END IN ()) FROM v0, rt0; -- 0ms;
SELECT DISTINCT 'B' COLLATE RTRIM FROM vt0, rt0, v0; -- 5ms;
SELECT DISTINCT ((((0.10922329994142721)&(t1.c69)))||(((rt0.c2)+(t1.c76)))) FROM t1, vt0 WHERE (',{ဇ\r집') ORDER BY ((v0.c0) BETWEEN (TRIM(t1.c73)) AND ((NOT (0.08933822521735146)))) DESC, (((t1.c69, rt0.c2, t1.c76)) BETWEEN ((rt0.c1, t1.c75, t1.c73)) AND ((t1.c69, t1.c73, t1.c73))) COLLATE NOCASE  NULLS FIRST, ((((t1.c76)AND(t1.c1)))AND(t1.c75)) COLLATE NOCASE  NULLS LAST;SELECT DISTINCT rt0.c1 COLLATE RTRIM FROM t1;SELECT DISTINCT rt0.c1 FROM vt0, v0, t1 NATURAL JOIN rt0 WHERE (CAST((('-1092302663')/(x'9363')) AS INTEGER)); -- 0ms;
SELECT ALL (- (json_quote(rt0.c0))) FROM v0, rt0, vt0, t1 GROUP BY ((((t1.c1)) BETWEEN ((x'6e48')) AND ((t1.c1))) IN ()), (((+ (t1.c1))) NOTNULL), ((((vt0.c0)IS NOT(x''))) NOT BETWEEN (rt0.c1) AND ((((t1.c75, rt0.c2, rt0.c1, t1.c1, '-109851742')) BETWEEN ((rt0.c0, t1.c75, vt0.c0, t1.c75, t1.c75)) AND ((t1.c73, rt0.c1, t1.c75, vt0.c0, NULL))))); -- 1550ms;
SELECT DISTINCT (((((((rt0.c1, t1.c73, t1.c73)) BETWEEN ((rt0.c2, t1.c73, rt0.c1)) AND ((t1.c73, rt0.c2, t1.c69))))OR((((t1.c76))>((t1.c76))))))AND(TOTAL(t1.c76))), (CAST(rt0.c2 AS TEXT) IN ()), rt0.c2 COLLATE RTRIM FROM vt0 WHERE ((('1064538240') NOT BETWEEN (0.3906270542657613) AND (NULL)) COLLATE NOCASE);SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE), CAST(SUM(rt0.c1) AS INTEGER), (- (((rt0.c2)IS NOT(rt0.c2)))) FROM vt0, t1, v0 WHERE ((((~ (x''))) BETWEEN ((('[ ') BETWEEN (-1.574112485E9) AND (0.35317613671450054))) AND ((('-966526917')==(0.21089965855332837)))));SELECT ALL t1.c75 FROM v0, rt0;SELECT DISTINCT ((CAST(t1.c75 AS REAL)) BETWEEN (804943359) AND (vt0.c0)), ((((t1.c69)) BETWEEN ((rt0.c2)) AND ((t1.c75))) IN ()), CASE WHEN ((t1.c69) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((t1.c69) NOT BETWEEN (t1.c76) AND (t1.c75)) ELSE ((NULL) NOT BETWEEN (rt0.c1) AND (v0.c0)) END FROM rt0, v0, vt0 WHERE ((- ((((']迩U'))>((NULL))))));SELECT json_insert((NOT (rt0.c0)), (+ (rt0.c1)), ((t1.c1) IS TRUE)) FROM v0 WHERE (0.9824325714758014);SELECT CASE ((t1.c1)IS NOT(rt0.c0))  WHEN ((rt0.c1) NOT NULL) THEN ((t1.c1)IS(rt0.c2)) WHEN ((((((((0.8354876609552742)OR(v0.c0)))OR(rt0.c2)))AND(vt0.c0)))AND(t1.c75)) THEN SUM(vt0.c0) WHEN (((t1.c75, v0.c0, t1.c73)) NOT BETWEEN ((t1.c73, t1.c73, t1.c69)) AND ((rt0.c0, vt0.c0, rt0.c2))) THEN ((t1.c1)!=(t1.c76)) END, SUM((t1.c76 IN ())) OVER (), LOWER(t1.c75) COLLATE NOCASE FROM vt0, v0;SELECT CAST(COUNT(t1.c69) AS BLOB), ((CASE WHEN t1.c1 THEN t1.c73 ELSE NULL END)AND(v0.c0)), t1.c75 FROM rt0, t1, v0, vt0 WHERE (CAST((+ (NULL)) AS BLOB)) LIMIT 56745742 OFFSET 943872722; -- 21ms;
SELECT DISTINCT t1.c69, COUNT(*), 0.931638322614639 FROM t1 WHERE (CASE WHEN (('i^E2*}X㵈') IS FALSE) THEN 0.761759343695749 END) LIMIT 1379520642; -- 0ms;
SELECT ALL (NOT ((t1.c1 IN ()))), 0xffffffff96a413dd, COUNT(*), COUNT(''), ((CAST(t1.c75 AS INTEGER))LIKE(LIKELY(t1.c69))) FROM rt0, t1, vt0 WHERE (CASE ((0xffffffffe6a07346) IS FALSE)  WHEN (- ('')) THEN ((('-298635704', 0.1350281897132447, NULL)) BETWEEN ((NULL, 0xffffffffe7500a9f, NULL)) AND ((0Xffffffff98a56149, 0.012631901491525044, -7.0882839E8))) ELSE CAST(0.2440481034909534 AS INTEGER) END) ORDER BY ((((rt0.c2) NOTNULL))GLOB(((t1.c75) IS TRUE))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (TOTAL_CHANGES()) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-1446970896'))))) FROM v0, vt0 WHERE (((((((((CAST(0x182fb770 AS REAL))OR(CAST('1749111698' AS TEXT))))AND(((0.8872280626106608)<>('371401523')))))AND((('-476341558') IS TRUE))))AND((('1379520642')IS NOT('0.24135758416828468')))));SELECT DISTINCT AVG(((t1.c73) BETWEEN (rt0.c1) AND (t1.c75))) FILTER(WHERE 'i{') OVER () FROM t1, rt0, v0 WHERE ((TYPEOF(DISTINCT '1404594162') IN ())); -- 1ms;
SELECT DISTINCT ((((((rt0.c2) NOTNULL))OR(CAST(t1.c73 AS NUMERIC))))AND(((((((((t1.c75)OR(t1.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(v0.c0)))) FROM rt0;SELECT DISTINCT (((((t1.c76))>=((0.7909440375824816))))>>(((t1.c69) NOT BETWEEN (rt0.c2) AND (t1.c1)))), ((((t1.c75) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE t1.c75 END)), ((SUM(rt0.c1)) NOT NULL) FROM v0, t1 LIMIT -1004783020;SELECT ((~ (t1.c69)) IN (CAST(t1.c1 AS TEXT))), ((((t1.c1) BETWEEN (v0.c0) AND (rt0.c2)))>(LIKELIHOOD(rt0.c1, 0.3016264069965471))), COUNT(UPPER(DISTINCT t1.c69)) FROM t1, rt0 WHERE ((NOT (CAST(0 AS REAL))));SELECT ALL (((((((((((((t1.c76 IN ()))OR(((t1.c76)IS NOT(NULL)))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (t1.c75)))))AND(t1.c75)))AND(((t1.c1) BETWEEN (v0.c0) AND ('￿ۣ_X_Q^\ꡧ')))))AND(((rt0.c0)LIKE(t1.c1)))))OR(t1.c69 COLLATE RTRIM)) FROM rt0 WHERE ((((((('8]邀''fN0Er') NOT BETWEEN (x'') AND (NULL)))OR(('1174138131' IN ()))))AND(('-1581858731' IN ()))));SELECT ALL ((t1.c76) NOT BETWEEN (((t1.c1) IS FALSE)) AND (((((((((t1.c69)AND(rt0.c1)))OR(t1.c73)))OR(t1.c75)))OR(vt0.c0)))) FROM v0, rt0, vt0;SELECT DISTINCT (CASE WHEN t1.c76 THEN rt0.c0 END IN ()) FROM rt0, v0, t1 WHERE ((x'3960' IN ()) COLLATE BINARY) GROUP BY t1.c76 COLLATE RTRIM COLLATE BINARY; -- 0ms;
SELECT (((((((t1.c76)AND(rt0.c1)))AND(t1.c76)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c73)), ((((((((vt0.c0)AND(t1.c69)))AND(rt0.c0)))OR(t1.c73)))OR(v0.c0))))>(((t1.c75 IN ()), ((rt0.c0) NOTNULL), ((t1.c73)>(t1.c73))))), NULL, ((((t1.c76) NOT NULL))<((- (x'826b')))) FROM v0, vt0;SELECT DISTINCT json_extract(((((t1.c75)OR(x'')))AND('1012327168')), '0.20859505114403754', 'STTJTG', (rt0.c2 IN (t1.c75))), (('M䒥-')/((rt0.c0 IN ()))), COUNT(JULIANDAY(t1.c75, t1.c1, rt0.c2)) FROM v0, rt0, t1, vt0; -- 178ms;
SELECT SUM(x''), COUNT(*) FILTER(WHERE ((0.4433355994044461)*((((v0.c0, '-1945852717', rt0.c1)) BETWEEN ((t1.c69, t1.c69, rt0.c1)) AND ((rt0.c1, t1.c75, t1.c69)))))) OVER (), ((CAST(t1.c76 AS INTEGER))<>(rt0.c0)) FROM v0, vt0, rt0;SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, vt0, v0; -- 45ms;
SELECT ALL ((NULLIF(rt0.c1, v0.c0)) ISNULL) FROM rt0 GROUP BY ((TRIM(t1.c75))<((rt0.c2 IN ()))), (- (vt0.c0)) COLLATE RTRIM COLLATE NOCASE, (((- (t1.c75))) BETWEEN (((((rt0.c1)OR(t1.c73)))AND(t1.c1))) AND (CASE WHEN t1.c1 THEN t1.c73 ELSE t1.c1 END));SELECT ALL t1.c73, ((t1.c69)!=(t1.c1)) COLLATE BINARY, TRIM(t1.c73 COLLATE BINARY, (NOT (t1.c76))), CAST(vt0.c0 AS TEXT) COLLATE NOCASE, '0.36874443954082603' FROM rt0, v0, t1 ORDER BY ((((t1.c69 COLLATE BINARY)AND(((t1.c73) NOT BETWEEN (t1.c76) AND (rt0.c0)))))OR(CASE WHEN rt0.c1 THEN t1.c75 WHEN v0.c0 THEN vt0.c0 WHEN t1.c76 THEN v0.c0 ELSE t1.c73 END));SELECT DISTINCT (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c73)))) FROM vt0, rt0;SELECT ALL (((rt0.c0)) BETWEEN ((((NULL) ISNULL))) AND (((t1.c75 IN ())))), LIKELIHOOD(vt0.c0, 0.09569134234812948), MAX((t1.c1 IN ())) FROM vt0, v0, rt0 WHERE (((0.1880792786854648)-(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((v0.c0)<<(t1.c73)))OR(t1.c75)), (((((rt0.c1)>=(rt0.c0))))>=(((((v0.c0, t1.c75, rt0.c0, v0.c0, rt0.c1))<>((t1.c76, -1280764195, t1.c73, t1.c76, t1.c76)))))), GROUP_CONCAT(CAST(t1.c75 AS TEXT)) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM v0, vt0;SELECT ((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c76)) COLLATE RTRIM FROM t1, v0, rt0, vt0 WHERE (((((((((CASE WHEN NULL THEN '-380179881' ELSE x'e3c8' END)OR(CASE WHEN 'z' THEN NULL WHEN x'' THEN '-1020336950' WHEN x'0487' THEN '-926794175' ELSE x'6100' END)))AND(-143733326 COLLATE NOCASE)))OR(((x'73f5') BETWEEN (0.43196814911527737) AND (x'')))))OR((+ (0.3846790989186474))))); -- 1ms;
SELECT ALL json_object(t1.c1, 0.26038240945303137, ((rt0.c2)+(rt0.c0)), (~ (rt0.c0))) FROM vt0, v0;SELECT DISTINCT COUNT(*) OVER (), x'b95d795d', ((TOTAL_CHANGES())>=(((t1.c73) IS TRUE))) FROM v0, t1, vt0, rt0 GROUP BY ((((((((t1.c69 COLLATE NOCASE)AND(((t1.c69) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((t1.c1)<(t1.c76)))))OR(rt0.c2)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (t1.c69)))) HAVING ((t1.c1 IN ()) IN (CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END)); -- 1319ms;
SELECT ((CAST(rt0.c2 AS TEXT))IS NOT(((rt0.c2) NOTNULL))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT (((MAX(t1.c1), TRIM(DISTINCT vt0.c0), CASE t1.c76  WHEN t1.c1 THEN v0.c0 END))>((((((((((t1.c69)OR(t1.c73)))OR(v0.c0)))AND(rt0.c1)))OR(vt0.c0)), CAST(t1.c76 AS TEXT), ((((((((t1.c75)AND(t1.c76)))AND(t1.c75)))AND(t1.c1)))OR('-843803636'))))), ((((t1.c1)OR(t1.c1)))<(((vt0.c0) NOT BETWEEN (rt0.c0) AND (t1.c76)))), CAST(CASE 1404594162  WHEN NULL THEN t1.c1 WHEN rt0.c1 THEN t1.c75 WHEN NULL THEN rt0.c2 ELSE t1.c1 END AS TEXT) FROM rt0, t1, v0 WHERE (((((NULL))>((NULL))) IN ()));SELECT ALL ((IFNULL(rt0.c0, rt0.c1))+((t1.c1 IN ()))), COUNT(*) OVER ( ORDER BY TOTAL_CHANGES() DESC  NULLS LAST, ((((v0.c0)GLOB(t1.c75))) BETWEEN (x'') AND (((t1.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))), 'L^'), (~ (COUNT(*))) FROM t1;SELECT DISTINCT ((((rt0.c2 COLLATE RTRIM)OR(t1.c69 COLLATE RTRIM)))OR(t1.c73)) FROM v0, vt0 WHERE (CAST((~ (-1.351215197E9)) AS INTEGER));SELECT DISTINCT (x'' IN ()), (NOT (((t1.c1) ISNULL))), CAST(((t1.c1) BETWEEN (v0.c0) AND (t1.c73)) AS REAL) FROM vt0, t1 WHERE ((((('') IS TRUE))>>(((0X1f46452)-('# \rK[ⳛ~')))));SELECT ALL ((t1.c69) ISNULL) COLLATE BINARY, ((((((rt0.c0)&(rt0.c2)))OR('d')))OR(t1.c69)), ((x'') BETWEEN (rt0.c0) AND (((v0.c0)&(v0.c0)))) FROM vt0, t1, rt0, v0 WHERE ((((+ ('-1703792531'))) BETWEEN (x'' COLLATE BINARY) AND (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((((t1.c75)OR(t1.c73)))OR(t1.c75))) NOT BETWEEN (COUNT(*)) AND (((t1.c1)||(t1.c69)))), ((1593156842) NOTNULL) COLLATE NOCASE, CAST(CAST(t1.c73 AS BLOB) AS BLOB) FROM t1, rt0, vt0; -- 0ms;
SELECT ALL RANK() OVER () FROM rt0 WHERE ((((NOT (0.6896676721910205)))>((('1378268158')IS(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0)<(rt0.c0))) FROM v0, t1 LIMIT 1269637812;SELECT DISTINCT CASE WHEN rt0.c0 THEN COUNT(t1.c75) ELSE CHAR(vt0.c0) END, 0.27126112345569964, ((((t1.c1) IS FALSE))+(SUBSTR(t1.c75, rt0.c0))) FROM rt0, vt0, v0 WHERE (((((x'')<=('')))OR(CAST(NULL AS REAL))));SELECT DISTINCT (((t1.c1 IN ()))!=(((t1.c73)IS NOT(t1.c1)))), CASE ((v0.c0)<=(t1.c69))  WHEN NULL THEN ((t1.c69)&(rt0.c1)) WHEN (rt0.c0 IN ()) THEN (((('-1546715721')OR(t1.c69)))OR(NULL)) WHEN COUNT(*) THEN ((v0.c0) NOT NULL) END, t1.c76 FROM vt0, t1, rt0 WHERE ((((+ (x'')))<<((('1404594162')>=('-935096386')))));SELECT ALL ((((t1.c1)/('m䒥-')))>=(((vt0.c0)*(t1.c1)))) FROM v0 INDEXED BY i40, rt0, vt0 WHERE (((0.8272728648637959 COLLATE NOCASE)+(''))) ORDER BY NULLIF(DISTINCT ((v0.c0)>>(rt0.c1)), CASE 0X67c86042  WHEN t1.c75 THEN t1.c69 WHEN rt0.c2 THEN t1.c75 WHEN vt0.c0 THEN t1.c1 END)  NULLS LAST, (((((vt0.c0))>=((vt0.c0))))AND((~ (t1.c75))))  NULLS LAST, (t1.c69 IN ()) DESC;SELECT (((COUNT(t1.c69), (((v0.c0))>=((rt0.c2))), t1.c75 COLLATE NOCASE))<((((rt0.c1) NOT BETWEEN (vt0.c0) AND (t1.c1)), ((((t1.c73)OR(vt0.c0)))OR(t1.c1)), CAST(t1.c75 AS INTEGER)))) FROM v0 WHERE ((((('5C>ys\n䒥') NOT BETWEEN (x'') AND (x'21c9'))) NOT NULL)) GROUP BY '1173936837', CAST('-1787963574' COLLATE BINARY AS NUMERIC), ((t1.c75)AND(CASE v0.c0  WHEN rt0.c0 THEN t1.c69 ELSE vt0.c0 END));SELECT DISTINCT ((('-106668506'))=(((((t1.c69)) NOT BETWEEN ((t1.c76)) AND ((vt0.c0)))))) FROM rt0, v0 WHERE (((((((((((NULL)OR(NULL)))OR(0xffffffff9e065954)))AND('-1489469097')))OR('')))==((NOT (0.1410189145307179)))));SELECT ALL rt0.c0 FROM vt0, t1 GROUP BY ((((v0.c0) BETWEEN (t1.c1) AND (rt0.c2)))>>((((t1.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((t1.c69, NULL, t1.c1)) AND ((rt0.c1, t1.c75, t1.c1))))) HAVING CAST(rt0.c2 AS NUMERIC);SELECT ALL CASE WHEN LIKELIHOOD(DISTINCT t1.c69, 0.9642556031991165) THEN (rt0.c0 IN ()) ELSE CASE vt0.c0  WHEN vt0.c0 THEN t1.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE t1.c1 END END FROM rt0, v0, t1, vt0; -- 1ms;
SELECT DISTINCT (NOT ((NOT (rt0.c1)))) FROM rt0, t1 WHERE (LENGTH(CAST('የx' AS NUMERIC))); -- 0ms;
SELECT LAST_VALUE(rt0.c1) OVER () FROM rt0, v0, t1 WHERE ((+ ('615698137' COLLATE RTRIM))); -- 34ms;
SELECT DISTINCT (~ (((v0.c0) NOT BETWEEN (t1.c1) AND ('1710962465')))), (t1.c76 IN ()) COLLATE BINARY, CUME_DIST() OVER ( ROWS ((x'') IS FALSE) PRECEDING) FROM rt0, vt0, t1, v0 WHERE (x''); -- 0ms;
SELECT ALL CAST((vt0.c0 IN ()) AS TEXT), (((vt0.c0))<=((((rt0.c0) BETWEEN (rt0.c2) AND (t1.c73))))), ((vt0.c0) BETWEEN ('1379520642') AND (rt0.c1)) COLLATE NOCASE FROM t1 WHERE ((~ ((('-1775788070') ISNULL))));SELECT DISTINCT AVG(((((v0.c0)OR(rt0.c1)))OR(t1.c73)) COLLATE NOCASE) OVER () FROM v0, t1, vt0, rt0; -- 466ms;
SELECT CASE CASE rt0.c1  WHEN t1.c75 THEN rt0.c2 WHEN t1.c69 THEN t1.c69 WHEN t1.c69 THEN rt0.c2 ELSE x'' END  WHEN (rt0.c0 IN ()) THEN 0.07908103965723456 END FROM vt0, t1, v0, rt0 WHERE (((((((NULL)AND(0.8612508377946055)))AND(0x710447fd))) ISNULL)); -- 5ms;
SELECT ((rt0.c0 COLLATE NOCASE)==(NULL)) FROM rt0, t1, vt0, v0 ORDER BY (NOT (((v0.c0)<<(t1.c75))))  NULLS FIRST; -- 497ms;
SELECT ALL ((LIKELIHOOD(t1.c1, 0.9314976956705883)) NOT BETWEEN (CHANGES()) AND (ABS(DISTINCT rt0.c1))) FROM v0, vt0, t1, rt0; -- 19ms;
SELECT ALL CASE WHEN SUM(vt0.c0) THEN 0.47315916830613336 COLLATE RTRIM ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((t1.c76))) END FROM rt0 WHERE ((((CASE WHEN x'' THEN x'' WHEN '1593156842' THEN x'' WHEN NULL THEN '' END))<>((0.8117045551538536))));SELECT ((rt0.c0) NOT BETWEEN (t1.c69) AND (v0.c0)) COLLATE NOCASE FROM t1 WHERE ((((- (NULL))) ISNULL));SELECT DISTINCT SUM(((((t1.c69)OR('91846027')))OR(rt0.c0))), (((((((((t1.c73 IN ()))AND(UNLIKELY(t1.c73))))OR(((((t1.c1)AND(NULL)))OR(t1.c75)))))AND((NOT (NULL)))))OR(((x'ea55')LIKE(t1.c75)))), (((CASE t1.c73  WHEN t1.c69 THEN rt0.c0 ELSE t1.c73 END))>((((0.36874443954082603) NOT NULL)))) FROM t1 NOT INDEXED, v0, rt0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT x'', ((((((vt0.c0)OR(t1.c1)))OR(x''))) IS FALSE), (MIN(x'cdbd') IN (t1.c75 COLLATE BINARY)) FROM v0 WHERE (UNLIKELY(CAST(0.7212882637535584 AS NUMERIC)));SELECT DISTINCT (rt0.c2 IN (MIN(rt0.c0), ((t1.c1) IS FALSE))) FROM rt0, t1, v0 WHERE ((((('0.11488721195070906')OR(NULL)))OR(-700707380)) COLLATE RTRIM); -- 6ms;
SELECT ((CASE WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN '1326828786' WHEN t1.c69 THEN rt0.c2 END)AND((+ (t1.c73)))) FROM t1, v0, vt0;SELECT ALL 0.11290403903939883 FROM rt0, v0 WHERE ((('')-(0.9043740716791774)) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT t1.c69 FROM t1, rt0 GROUP BY CAST((rt0.c1 IN (t1.c75)) AS REAL) HAVING (- (((rt0.c0)==(vt0.c0))));SELECT DISTINCT (+ (CASE v0.c0  WHEN t1.c75 THEN t1.c75 WHEN t1.c1 THEN t1.c1 WHEN rt0.c2 THEN NULL END)), CASE t1.c1  WHEN ((t1.c75) IS TRUE) THEN ((rt0.c1)||(t1.c73)) WHEN CAST(vt0.c0 AS BLOB) THEN (- (rt0.c1)) WHEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) THEN CAST(t1.c1 AS INTEGER) ELSE ((t1.c73) IS TRUE) END, COUNT(*) COLLATE BINARY FROM t1 WHERE ((((('3A5hC2{Pg')AND(IFNULL(DISTINCT 'lR_{v', 0X1234133f))))OR(((((927062303)OR(NULL)))OR(NULL)))));SELECT ALL LIKELY(DISTINCT (((t1.c76))=((t1.c73)))), ROW_NUMBER() OVER ( ORDER BY CAST((((rt0.c2))=((vt0.c0))) AS TEXT) ASC, (t1.c73 IN (t1.c1 COLLATE BINARY)) DESC  NULLS LAST), ((((rt0.c2)<=(-1521502666)))>=(x'c661')) FROM vt0, v0, rt0 WHERE ((((((NULL)/(-489335667)), ((('0.9024609862472666'))>=((0.3411465879791036))), ABS(NULL)))<>((((0.09016527659985873) ISNULL), CASE NULL  WHEN x'76e7' THEN 0.1541526152956979 END, ((-2038645013)<(x'6d572769'))))));SELECT DISTINCT (((((vt0.c0 IN ()))OR(CASE WHEN t1.c73 THEN t1.c1 ELSE t1.c76 END)))OR(((NULL)%(t1.c75)))) FROM vt0, t1, rt0, v0 WHERE (CASE ((x'') BETWEEN (0.6195548745511744) AND (-1.564595817E9))  WHEN 0x1a3999d6 THEN ((x'9bc4')!=(x'')) END) LIMIT -1631486109 OFFSET 224803846; -- 0ms;
SELECT ALL ((CASE WHEN v0.c0 THEN vt0.c0 WHEN t1.c75 THEN vt0.c0 WHEN t1.c76 THEN 0.49205346756686275 ELSE t1.c1 END) NOTNULL) FROM v0, t1 WHERE (((('-7900078' IN ()))GLOB(CAST('-281448676' AS INTEGER)))) LIMIT 1806299316;SELECT ALL (((rt0.c1))>=((t1.c1))) COLLATE RTRIM, ((((rt0.c1)<(rt0.c0)))IS((+ (rt0.c1)))), ((((t1.c75)GLOB(t1.c69))) BETWEEN (-192580479) AND (CAST(t1.c73 AS BLOB))) FROM rt0, v0, vt0, t1 WHERE (CASE WHEN UNLIKELY(DISTINCT 0.2425871368533593) THEN '㦝vur' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT('1091853695') COLLATE RTRIM FROM rt0, v0, t1 UNION SELECT DISTINCT HEX(CAST(rt0.c1 AS TEXT)) FROM vt0 WHERE (NULL);SELECT ALL ((t1.c73)OR((((v0.c0))<>((t1.c75))))) FROM t1, rt0, v0, vt0 WHERE ((((0.006363393978079945) BETWEEN (x'') AND (x'284f')) IN (((NULL)*(NULL)), UNICODE(0xffffffffaf99d223)))); -- 0ms;
SELECT (((t1.c75, rt0.c2, rt0.c0)) NOT BETWEEN (((- (rt0.c1)), t1.c69 COLLATE NOCASE, ((t1.c1)>>(rt0.c2)))) AND (((rt0.c0 IN ()), ((rt0.c1)IS NOT(v0.c0)), rt0.c0))) FROM vt0, rt0, v0 WHERE (((CAST(NULL AS REAL))<>(((0.8974981840578857)LIKE(x'f4d7'))))) GROUP BY 0.8565652505201624;SELECT ALL ((CAST(rt0.c1 AS INTEGER))*(CASE rt0.c2  WHEN rt0.c2 THEN t1.c69 ELSE v0.c0 END)), ((((rt0.c0)GLOB(t1.c75)))GLOB(x'aef7')), CASE ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))  WHEN (~ (rt0.c1)) THEN (NOT (t1.c69)) ELSE ((v0.c0) BETWEEN (t1.c73) AND (t1.c73)) END FROM vt0 WHERE ((NULL IN ((((0.23214445298796715)) BETWEEN (('-1974841319')) AND ((NULL)))))) ORDER BY (((((t1.c73)) BETWEEN ((t1.c76)) AND (('m>M/5+RH5'))))<<(((((vt0.c0)AND(vt0.c0)))AND(t1.c73)))) ASC;SELECT ((((((rt0.c0)AND(t1.c75)))AND(rt0.c1))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (CASE rt0.c0  WHEN t1.c73 THEN t1.c75 END)) FROM t1;SELECT MAX(CASE NULL  WHEN t1.c75 THEN vt0.c0 ELSE v0.c0 END) FROM t1 WHERE (json_quote(UNLIKELY(DISTINCT 0.43015171389731766))) ORDER BY ((t1.c73)IS NOT(t1.c76)) COLLATE RTRIM;SELECT DISTINCT (((rt0.c0) BETWEEN (t1.c69) AND (t1.c73)) IN ()), ((((((((t1.c69)AND(x'efd4')))OR(vt0.c0)))AND((('[,q㹲ࢂYR+') BETWEEN (t1.c73) AND ('1124307448')))))AND(CAST(t1.c73 AS INTEGER))), (((((rt0.c1))>((t1.c76)))) NOT BETWEEN (IFNULL(t1.c73, t1.c73)) AND (JULIANDAY(t1.c69, v0.c0, t1.c73))) FROM t1, rt0, v0, vt0 LIMIT -1945852717; -- 1ms;
SELECT DISTINCT (((rt0.c0 IN ()))<=(((t1.c1)|(rt0.c1)))), ((((rt0.c1 IN ())))>((json_patch(t1.c76, t1.c76)))), CASE WHEN LOWER(v0.c0) THEN (NOT (v0.c0)) WHEN rt0.c2 THEN ((rt0.c0) ISNULL) WHEN t1.c1 THEN ((v0.c0)|(t1.c73)) END FROM t1, rt0, v0, vt0; -- 1ms;
SELECT LAST_VALUE(((vt0.c0 COLLATE RTRIM) NOTNULL)) OVER () FROM vt0, v0, rt0 WHERE (CASE WHEN (('붲W') ISNULL) THEN CASE 0.12043209503740782  WHEN NULL THEN x'' END ELSE '-1e500' COLLATE BINARY END); -- 67ms;
SELECT DISTINCT ((((((((x'')AND(((x'') BETWEEN (t1.c76) AND (rt0.c1)))))OR(((t1.c76)IS NOT(rt0.c0)))))AND(x'8720')))OR(t1.c76 COLLATE RTRIM)) FROM vt0, t1, v0, rt0 WHERE ((((0.24135758416828468) BETWEEN (0.5942959185460481) AND (NULL)) IN ())) GROUP BY ((((rt0.c1)AND(rt0.c0)))OR(t1.c69)) COLLATE NOCASE; -- 0ms;
SELECT ALL TOTAL(0Xffffffffafd71573) OVER () FROM rt0, vt0, t1; -- 0ms;
SELECT DISTINCT (((((((((~ (NULL)))AND(((((((((vt0.c0)AND(rt0.c0)))AND(t1.c1)))AND(rt0.c1)))AND(t1.c76)))))OR(LTRIM(vt0.c0, t1.c69))))AND((+ (v0.c0)))))OR(CASE WHEN rt0.c1 THEN rt0.c2 ELSE t1.c76 END)) FROM vt0 WHERE ((((- (NULL))) NOTNULL));SELECT ALL ((((((x'')OR(rt0.c2)))OR(0.47315916830613336))) NOT BETWEEN ((((t1.c75)) BETWEEN ((t1.c73)) AND ((vt0.c0)))) AND ((t1.c1 IN ()))) FROM v0, rt0, t1, vt0 ORDER BY ((COALESCE(vt0.c0, t1.c76)) NOT NULL); -- 709ms;
SELECT DISTINCT (((v0.c0 IN (t1.c75, t1.c69)))&((- (NULL)))), AVG((~ (rt0.c0))), (CASE 0.5128488921259472  WHEN rt0.c0 THEN t1.c75 END IN (t1.c1)) FROM v0, t1 CROSS JOIN vt0 ON HEX(CASE rt0.c0  WHEN 1325278832 THEN t1.c1 WHEN t1.c69 THEN v0.c0 WHEN t1.c1 THEN rt0.c0 END) RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN ((t1.c69) IS TRUE) WHEN (rt0.c0 IN (t1.c1)) THEN t1.c75 COLLATE BINARY WHEN CAST(vt0.c0 AS TEXT) THEN ((t1.c76)-(rt0.c2)) END WHERE (CAST(CASE '-807363649'  WHEN NULL THEN '91846027' ELSE 0.639963113700158 END AS BLOB));SELECT ((NULL)IS((rt0.c0 IN (rt0.c2)))) FROM vt0, t1, v0;SELECT DISTINCT ((t1.c75) IS TRUE), (((rt0.c2) NOT NULL) IN ()), ((rt0.c2)<(rt0.c0)) COLLATE BINARY FROM vt0 LIMIT -410587377;SELECT COUNT(CAST(t1.c76 AS NUMERIC)) FROM v0 WHERE (CASE (- (NULL))  WHEN ((-823702737) IS FALSE) THEN x'' COLLATE RTRIM END) GROUP BY json_object((-1.700676814E9 IN ()), (t1.c76 IN (t1.c69))) HAVING ((t1.c69) BETWEEN (HEX(t1.c1)) AND (t1.c73));SELECT ALL CASE t1.c73  WHEN AVG(rt0.c0) THEN ((t1.c76)%(t1.c75)) ELSE rt0.c0 COLLATE BINARY END, ((((((((IFNULL(DISTINCT rt0.c0, t1.c73))AND(NULL)))AND(json_insert(vt0.c0, rt0.c0, t1.c1))))OR(((rt0.c0) IS TRUE))))OR(((((((((t1.c73)OR(t1.c69)))AND(vt0.c0)))AND(v0.c0)))OR(t1.c76)))), NULL FROM rt0, v0, t1, vt0 WHERE ((((('-1849758036')OR(((('-1705752963', 'C6', 0.6343433085053733))<((x'', 0x6bfe9b9d, '-1775788070'))))))AND('2100799764'))); -- 85ms;
SELECT (((~ (rt0.c1)))AND(COALESCE(vt0.c0, v0.c0))) FROM vt0 WHERE (MAX(((x'')-('O[ᕮ?3-_CJ')), (('') NOT NULL)));SELECT DISTINCT (NOT (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))) FROM t1, v0, rt0 WHERE ((NOT ((0x37dbf7da IN ())))); -- 1ms;
SELECT CAST(((((((((t1.c76)OR(vt0.c0)))AND(t1.c73)))AND(rt0.c2)))OR(vt0.c0)) AS BLOB), (((x'45e0930c', t1.c75, t1.c75)) NOT BETWEEN ((SUM(rt0.c1), CAST(t1.c75 AS INTEGER), ((((((((rt0.c2)OR(t1.c76)))AND(v0.c0)))OR(rt0.c1)))AND(t1.c76)))) AND ((CASE 1674993581  WHEN x'6a74' THEN rt0.c2 ELSE t1.c75 END, (t1.c1 IN ()), ((t1.c69)==(t1.c69))))), ((t1.c69 IN ()) IN ()), 0xfffffffff774383c, AVG('k䖈LInsq') OVER () FROM v0, t1, rt0 WHERE ((((x'') NOT BETWEEN (NULL) AND (0X3f739080)) IN (x'' COLLATE NOCASE)));SELECT DISTINCT (((((t1.c75)) BETWEEN ((vt0.c0)) AND ((t1.c69))))>=(CASE x'997c'  WHEN vt0.c0 THEN t1.c75 WHEN v0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t1.c69 ELSE rt0.c0 END)) FROM v0, t1;SELECT ALL ((((t1.c75)IS(t1.c69))) NOT NULL), ((((((rt0.c0)OR(t1.c76)))AND(rt0.c0)))<=(((t1.c69) NOT NULL))), ((((((rt0.c1)OR(t1.c73)))OR(t1.c73)))*((((rt0.c1))<((v0.c0))))) FROM vt0 WHERE (0.7009470255333696) ORDER BY t1.c75;SELECT ALL CASE WHEN CASE t1.c76  WHEN vt0.c0 THEN t1.c73 END THEN (((t1.c73)) NOT BETWEEN ((t1.c75)) AND ((t1.c76))) END FROM rt0, t1, vt0, v0 GROUP BY ((((t1.c69)<=(t1.c69))) NOTNULL) HAVING (NOT ((rt0.c1 IN ()))) ORDER BY CAST(CASE vt0.c0  WHEN t1.c76 THEN t1.c76 ELSE NULL END AS INTEGER)  NULLS FIRST; -- 512ms;
SELECT DISTINCT (((((((((((rt0.c2)AND(vt0.c0)))OR(0x56679882)))OR(rt0.c1)))AND(t1.c1))))<=((((t1.c69)GLOB(rt0.c2))))), t1.c76 COLLATE NOCASE, (((((x'd64e' IN ()))AND((((rt0.c1))>=((rt0.c2))))))OR(-7900078.0)) FROM t1, v0;SELECT DISTINCT v0.c0 FROM v0, rt0, t1 WHERE (((LIKELIHOOD(0x53f47822, 0.5808805912007152))=(CAST(0X64ddeab5 AS NUMERIC)))) ORDER BY (((v0.c0 IN (vt0.c0, rt0.c1)))IS(CAST(v0.c0 AS NUMERIC))) DESC  NULLS FIRST;SELECT DISTINCT (((+ (t1.c1)))/((((t1.c69, NULL, t1.c75))>=((vt0.c0, rt0.c0, v0.c0))))) FROM rt0, vt0, v0, t1 INTERSECT SELECT DISTINCT (~ (LOWER(v0.c0))) FROM v0, rt0, vt0; -- 393ms;
SELECT DISTINCT (((((((t1.c73)AND('-638618728')))OR(v0.c0))))>=(((+ (t1.c1))))) FROM t1, rt0, v0 WHERE (CHAR(CAST(NULL AS REAL))); -- 0ms;
SELECT CAST((~ (t1.c1)) AS TEXT), CASE MIN(0.24135758416828468)  WHEN ((t1.c1)%(0.36206142967324273)) THEN (vt0.c0 IN ()) END, x'', t1.c69, (((x'') IS TRUE) IN ()) FROM v0, vt0, rt0;SELECT ALL '' FROM vt0, v0, t1 ORDER BY (+ (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;