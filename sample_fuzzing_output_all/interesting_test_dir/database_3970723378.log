-- Time: 2024/06/07 09:16:14
-- Database: database78
-- Database version: 3.40.0
-- seed value: 3970723378
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED, compress=likely, uncompress=likely); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE (((NOT (vt0.c2))) NOT BETWEEN (vt0.c2 COLLATE RTRIM) AND (CAST(vt0.c0 AS NUMERIC))); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1086567483); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1819176607);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE vt0; -- 13ms;
PRAGMA main.cell_size_check = true; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
DELETE FROM vt0 WHERE NULLIF(DISTINCT HEX(1.819176607E9), CAST(vt0.c2 AS BLOB)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c2)=(0x3b962d20) WHERE (((((vt0.c1)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2)))))=((CASE vt0.c2  WHEN vt0.c1 THEN x'' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END, vt0.c2, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END))); -- 0ms;
UPDATE vt0 SET c0=0.8859038422101677 WHERE ((vt0.c0)OR(vt0.c0 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 7ms;
PRAGMA main.secure_delete; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c2, c1) VALUES (NULL, NULL, 999697696); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1926718817); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1412440838,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 597661093);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 308081452); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43159'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1774501200,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c2=x'', c0='' WHERE 'a?'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 347058653); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '54345'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1464940523,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -704582761);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1624553283); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 114378130); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56203'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2123168894); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50386'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 883683737); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
REINDEX RTRIM; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT 0Xfffffffffc98f442 FROM vt0 WHERE (((((CAST(0.2665683282272967 AS TEXT))OR(NULL COLLATE RTRIM)))AND(x'feb2d3f3' COLLATE BINARY))) LIMIT -704582761 OFFSET -2045073784; -- 1ms;
SELECT CAST(((vt1.c0) IS TRUE) AS TEXT) FROM vt1, vt0 WHERE ((~ (((((((((x'3137')AND('ik?')))OR(0.21619206061286367)))OR('l')))OR(x''))))); -- 0ms;
SELECT CAST(((vt0.c2)LIKE('')) AS REAL) FROM vt0; -- 0ms;
SELECT (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) IN ()), '-11472515', (- ((vt0.c0 IN (vt1.c0)))), ((((vt0.c1)AND(vt0.c2)))>=(CAST(vt0.c1 AS REAL))), (vt0.c0 IN ()) COLLATE RTRIM FROM vt0 WHERE ((((+ (''))) IS FALSE));SELECT (((((((vt0.c2))=((vt0.c2))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt0.c2 ELSE vt0.c1 END)))OR(((((vt0.c0)AND('999697696')))OR(x'')))), ((CAST(vt0.c1 AS TEXT)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (((vt0.c0) IS TRUE))), (NULL IN ()), TYPEOF(DISTINCT vt0.c2) COLLATE BINARY, vt1.c0 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM FROM vt0, vt1 WHERE (((((NULL) BETWEEN (NULL) AND (-1.464940523E9)))|(((-1348441851) BETWEEN ('Do') AND (0xffffffffcc0f63b7))))) ORDER BY CASE (((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c0 IN ()) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (vt0.c1 IN ('%3')) WHEN ((0.5831986646431228)>=(vt0.c2)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, x'06f07d79', vt0.c0)) AND (('ik?', vt1.c0, vt0.c0))) ELSE NULLIF(DISTINCT vt0.c0, vt1.c0) END, (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) IN ()); -- 0ms;
SELECT (((vt0.c2 COLLATE NOCASE, ((vt0.c2)IS NOT(vt1.c0)), (~ (vt0.c1))))<=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END, (vt1.c0 IN (vt0.c0, vt0.c2)), vt0.c2 COLLATE NOCASE))), vt0.c0, (((NOT (vt0.c1))) NOTNULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (~ (vt0.c2)) COLLATE RTRIM, COUNT((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))), TOTAL(((vt0.c2)||(vt0.c2))) FROM vt0 WHERE ('999697696');SELECT (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0)LIKE(vt1.c0)), AVG(vt0.c2)))!=((TOTAL(vt1.c0), ((NULL) NOT BETWEEN ('O7N') AND (vt0.c1)), (NOT (vt1.c0))))) FROM vt1, vt0 WHERE (((((NULL) BETWEEN ('') AND (0.21619206061286367))) NOT NULL)); -- 0ms;
SELECT ALL CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c1) ISNULL) ELSE ((vt0.c1)=(vt0.c2)) END FROM vt1;SELECT ALL NTILE(CAST(((vt0.c1) NOT NULL) AS TEXT)) OVER ( ROWS (((('Oh4S8	(>8') ISNULL)) NOTNULL) PRECEDING EXCLUDE TIES) FROM vt0 WHERE ((((('') NOT NULL))*(((((0xfffffffffebb6c3a)OR(NULL)))OR('')))));SELECT COUNT(vt0.c0) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((('701907468') NOT BETWEEN (NULL) AND ('')) COLLATE RTRIM); -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))) OVER () FROM vt0, vt1; -- 1ms;
SELECT ALL CASE SUM(vt0.c0)  WHEN (vt0.c0 IN ()) THEN ((vt0.c0) IS TRUE) END, CAST(((vt1.c0)AND(vt1.c0)) AS BLOB), (((vt0.c2) ISNULL) IN ()) FROM vt1, vt0 WHERE (CAST((('d7')>(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN ((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))) AND (('0.21619206061286367'))) FROM vt1;SELECT DISTINCT ((((vt0.c1) ISNULL)) BETWEEN (((vt1.c0) ISNULL)) AND (MIN(vt0.c1))), ((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt0.c0) NOTNULL))), ((((((vt0.c2)AND(vt0.c1)))AND(vt1.c0))) NOT BETWEEN ((- (vt0.c2))) AND (MAX(0.26585597346957357))) FROM vt1, vt0 WHERE (CAST(CAST(1.819176607E9 AS BLOB) AS INTEGER)); -- 0ms;
SELECT ALL ((((vt0.c0)>=(vt0.c1)))*(vt0.c1)), ((vt0.c0) IS FALSE) COLLATE RTRIM, CASE CAST(vt0.c2 AS NUMERIC)  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt1.c0 END THEN CAST(vt0.c1 AS REAL) END FROM vt0, vt1 WHERE (((CASE NULL  WHEN 0.15190040800097615 THEN x'' END) NOT NULL)) GROUP BY (NOT (((((((((vt0.c2)OR(x'978b')))OR(vt0.c2)))OR(vt1.c0)))AND(vt1.c0)))); -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) BETWEEN (vt0.c2) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) FROM vt1 GROUP BY vt1.c0 HAVING MIN(UPPER(vt0.c1)) COLLATE BINARY;SELECT ALL (NOT (COUNT(vt0.c1))), ((((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))) NOTNULL), ((((vt0.c0)OR(vt0.c1))) IS FALSE) FROM vt1, vt0 WHERE (CHANGES()); -- 0ms;
SELECT ALL (CAST(vt0.c1 AS REAL) IN ()) FROM vt0, vt1; -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE)<=(((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))) FROM vt1, vt0 WHERE (COALESCE(DISTINCT '', (('-21271494') NOTNULL))); -- 0ms;
SELECT DISTINCT 0xffffffff861aa688, DENSE_RANK() OVER ( ORDER BY (((vt1.c0)GLOB(vt0.c0)) IN ((((vt1.c0))<((vt0.c2))), ((((((((vt1.c0)OR(x'')))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))) DESC  NULLS FIRST), CASE WHEN TYPEOF(vt0.c1) THEN vt0.c0 COLLATE BINARY END FROM vt0, vt1 GROUP BY ((vt0.c0 COLLATE RTRIM) NOTNULL), CASE (vt0.c0 IN (vt1.c0, vt0.c2))  WHEN ((vt0.c0) NOTNULL) THEN vt0.c2 COLLATE NOCASE WHEN CASE vt0.c2  WHEN '' THEN vt1.c0 ELSE vt0.c1 END THEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) WHEN '' THEN CAST(vt1.c0 AS BLOB) END, ((((((vt0.c2))<((vt1.c0)))))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))); -- 0ms;
SELECT ALL (- ('-1637595045')), CASE vt0.c0 COLLATE NOCASE  WHEN '3' THEN (('') ISNULL) END, DENSE_RANK() OVER () FROM vt0, vt1 WHERE (((((',')!=(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE, ((((vt0.c0)<=(vt0.c1))) NOT BETWEEN ((((('1)')AND(x'')))AND(vt0.c0))) AND ((vt0.c0 IN (vt1.c0)))), vt0.c1 COLLATE NOCASE FROM vt0 WHERE ((~ ((('~\r氺3hCR') NOTNULL))));SELECT DISTINCT GROUP_CONCAT(0.145784849964407) FROM vt0 WHERE (((((0x1939deca)/(x'0d9d'))) ISNULL)) ORDER BY json_array_length(((vt0.c0)&(vt1.c0)), '-1637595045') DESC;SELECT vt0.c2, TOTAL('-11472515'), COUNT(json_object(vt1.c0, vt0.c2)) OVER () FROM vt0 WHERE (CAST((+ ('0.5831986646431228')) AS TEXT)) UNION ALL SELECT DISTINCT ((((CAST(vt1.c0 AS BLOB))AND((~ (vt1.c0)))))AND(((vt1.c0) NOT NULL))), ((vt0.c1 COLLATE BINARY)<<('-115618970')), ((TYPEOF(DISTINCT vt0.c2))IS(((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))) FROM vt0, vt1 LIMIT -57084862 OFFSET -549860673;SELECT DISTINCT COUNT((vt0.c0 IN ())) OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE (~ (vt0.c0))  WHEN AVG(0.8196095717149022) THEN ((vt0.c0)<(vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END FROM vt1 GROUP BY json_array_length(MIN(vt0.c1, vt1.c0, vt0.c2, vt0.c1, vt0.c1, 0xffffffffa55869bf, 0.8496294046405422, vt0.c1)) HAVING vt0.c0 COLLATE BINARY;SELECT DISTINCT ROW_NUMBER() OVER (), LEAD(vt0.c1, (((((((((~ (vt0.c1)))AND(((vt0.c1)-(vt0.c2)))))AND(((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))))OR('䈌%GHWິᙌX')))AND((~ (vt0.c2)))), CASE WHEN (((vt0.c2))<(('0.2665683282272967'))) THEN vt0.c1 COLLATE RTRIM ELSE (+ (vt0.c0)) END) OVER (), CAST(CAST(vt1.c0 AS BLOB) AS INTEGER) FROM vt0 WHERE ((+ (((x'')||(NULL)))));SELECT DISTINCT GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt1.c0))) FILTER(WHERE (((vt0.c1)<<(vt0.c0)) IN ())) OVER () FROM vt0, vt1 WHERE ((~ ((('0.8859038422101677') NOTNULL)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((((vt0.c0)/(vt0.c0))))) FROM vt0, vt1 ORDER BY CAST(vt0.c2 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END WHEN CAST(x'090a' AS BLOB) THEN TOTAL(vt0.c1) WHEN 'eW#d[1OJ|' THEN COALESCE(vt0.c0, vt1.c0, vt0.c2, vt0.c2) END FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL); -- 0ms;
SELECT DISTINCT load_extension(((((((((((((-2142882795)OR(vt0.c1)))OR(vt0.c0)))OR(0Xfffffffff02b85f4)))OR(vt0.c0)))AND(vt0.c2)))AND(vt1.c0)), vt0.c2 COLLATE RTRIM), ((((vt0.c2) IS FALSE)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((TOTAL(vt0.c0)))) FROM vt1 WHERE ((((('(\n') NOTNULL)) NOT BETWEEN (NULL COLLATE BINARY) AND ((- (x'')))));SELECT DISTINCT ((((((vt0.c2)AND(vt1.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))), vt1.c0, (NOT (((vt0.c0)*(vt1.c0)))) FROM vt1 WHERE (((((0x64842759)>(-2.045073784E9)))<=(x'' COLLATE BINARY)));SELECT FIRST_VALUE(((((((((((((0.14320931581146235)OR(vt0.c0)))AND(vt0.c1)))OR(((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c1)))OR('1868225053')))OR('1868225053')))))OR(CAST(vt0.c1 AS REAL))))OR((+ (vt0.c2)))))OR(CAST(vt0.c2 AS BLOB)))) OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM vt0; -- 0ms;
SELECT CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE FROM vt0, vt1 WHERE (x'' COLLATE RTRIM); -- 0ms;
SELECT AVG(0.21571201687430963) OVER (), (COUNT(vt0.c2) IN ()), CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c2)<>(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((((NULL)AND(NULLIF(DISTINCT vt0.c2, vt0.c2))))AND(AVG(vt0.c1))) FROM vt0 LIMIT -1532550878; -- 0ms;
SELECT DISTINCT 'ieq?' FROM vt1, vt0 WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN ((((NULL)) NOT BETWEEN ((x'4254')) AND ((0.4882274774142793)))) AND (((7.01907468E8) BETWEEN (NULL) AND ('1414388669'))))); -- 0ms;
SELECT DISTINCT (~ (SQLITE_VERSION())) FROM vt0 WHERE (((((('-57084862' IN ('1I', x'')))OR(((0.5831986646431228)<>(NULL)))))AND((('1235263070') ISNULL)))) GROUP BY (- (vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT ALL ((((vt0.c0)&(vt0.c0)))||(INSTR(vt0.c0, vt0.c1))) FROM vt0, vt1 WHERE (1412440838) LIMIT 999697696 OFFSET -1266674791; -- 0ms;
SELECT DISTINCT CAST(x'af81' AS TEXT), ((CASE x''  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(((x'')GLOB(vt0.c2)))), (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND (vt0.c0)) FROM vt1;SELECT DISTINCT (NOT (vt0.c2 COLLATE NOCASE)) FROM vt1;SELECT ALL ((TRIM(x''))-(((vt1.c0)IS NOT(vt0.c2)))) FROM vt1 WHERE (((CAST('7r' AS INTEGER))&((('')=(2100678158)))));SELECT DISTINCT (((((+ (vt0.c2)))OR(((((vt1.c0)AND(vt0.c2)))AND(vt0.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))), PERCENT_RANK() OVER (), vt1.c0 FROM vt0, vt1 WHERE ((((- (x''))) BETWEEN ((- (x''))) AND ((('-1008330519')|(0.9500084082955028))))); -- 0ms;
SELECT (+ (((vt1.c0) NOT NULL))) FROM vt0, vt1 WHERE ((- ((((x''))!=(('rD/钿')))))); -- 0ms;
SELECT ALL vt0.c2, ((vt0.c0 COLLATE BINARY)*(0.15190040800097615)), COUNT(*) FROM vt0 WHERE (IFNULL(x'', x'') COLLATE RTRIM); -- 0ms;
SELECT UNLIKELY(DISTINCT ((vt1.c0)%(vt0.c0))) FROM vt0 WHERE (((CASE 0.041296925315312816  WHEN x'' THEN 0x6c26ae44 ELSE NULL END)|((((0x3b962d20)) BETWEEN (('-115618970')) AND (('xb'))))));SELECT ((COUNT(-1532550878))>=(CASE x''  WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c2 END)) FROM vt1, vt0; -- 0ms;
SELECT ALL CAST(vt0.c0 COLLATE RTRIM AS BLOB) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT vt0.c2)) NOTNULL) FROM vt0, vt1 WHERE (((x'520e' COLLATE RTRIM) IS FALSE)) LIMIT 532182426 OFFSET -2045073784; -- 1ms;
SELECT ALL ((load_extension(vt0.c1, vt0.c0))<((NOT (vt0.c2)))) FROM vt0, vt1; -- 0ms;
SELECT CAST(GROUP_CONCAT(vt0.c2) AS TEXT) FROM vt1 WHERE ((((('0.8859038422101677')>=(NULL))) BETWEEN (((x'6b45b9f2')>=(x'f979'))) AND ((((0.46298968889800085, 'k%', x'')) BETWEEN ((x'', x'', NULL)) AND ((x'', NULL, x''))))));SELECT (((((vt1.c0)>(vt0.c0))))<((NULL))) FROM vt0, vt1 WHERE ((CHANGES() IN (((0.13844610864051277)+('j'))))); -- 0ms;
SELECT DISTINCT ((0xffffffff8ca64ba8) NOT BETWEEN (TYPEOF(vt0.c1)) AND ((vt0.c2 IN (vt1.c0)))) FROM vt0 WHERE ((((((NULL IN (0.2972373178614667, 0.24370276203537622)))AND((('-1304148406') IS TRUE))))AND((((0x6c6e6e9f))>((0.6870998809218337))))));SELECT DISTINCT '749608207' FROM vt0; -- 0ms;
SELECT ALL (((vt0.c2) NOT NULL) IN ()), (- (912263289)), MIN((((vt0.c2))<=((vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST((+ (NULL)) AS TEXT)); -- 0ms;
SELECT ALL TRIM((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, vt0.c2)) AND ((vt0.c0, vt1.c0, vt0.c2)))) FROM vt0, vt1 WHERE ((+ ((+ (0.8859038422101677))))); -- 0ms;
SELECT DISTINCT (NOT (((('')) BETWEEN ((vt1.c0)) AND ((0.40217632192843533))))), CAST(NULLIF(vt0.c1, vt0.c0) AS BLOB), ((((vt1.c0 COLLATE RTRIM)AND(-0.0 COLLATE NOCASE)))OR(vt1.c0 COLLATE BINARY)) FROM vt1, vt0 WHERE ((NOT ((0.4360658096551512 IN ())))); -- 0ms;
SELECT DISTINCT TOTAL(((0.7256184232569137) ISNULL)), (((vt0.c0) NOTNULL) IN (0.26448478797451225, CASE WHEN vt0.c1 THEN vt0.c1 END)), (((((((vt0.c1))<>((vt1.c0))))AND('2131987876')))OR((((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))), ((vt0.c2) NOTNULL), (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) COLLATE BINARY FROM vt0 GROUP BY ((((+ (vt0.c0)), (vt1.c0 IN ()), (vt1.c0 IN ())))<((((vt0.c0)IS(vt0.c0)), (vt0.c1 IN (vt0.c2, vt0.c1)), ((0.696960499798403)<(vt0.c2))))) HAVING ((((vt0.c0) IS FALSE))IS NOT(((((vt0.c1)AND(vt1.c0)))OR(vt0.c2))));SELECT DISTINCT CAST(((vt0.c2) NOT NULL) AS INTEGER) FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT CAST(((vt0.c0) NOT BETWEEN (0Xffffffffa62c22a4) AND (vt0.c1)) AS INTEGER) FROM vt1;SELECT CASE WHEN (- (vt0.c1)) THEN CASE WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END WHEN vt0.c0 THEN vt0.c1 WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1) IS TRUE) ELSE (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) END, LAG(((((vt0.c2)OR(vt1.c0)))OR(vt0.c0)) COLLATE RTRIM, ((NULL) NOT BETWEEN (((vt1.c0) NOT BETWEEN (0.8623789569298881) AND (vt0.c0))) AND (((vt0.c0)>=(vt1.c0)))), ((CASE '2131987876'  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (NULL COLLATE NOCASE) AND ((NULL IN (vt0.c1))))) OVER (), COUNT((((vt0.c1))<=((vt0.c0))) COLLATE NOCASE) FROM vt0, vt1; -- 0ms;
SELECT ALL (- (((vt0.c0)<(vt0.c1)))) FROM vt0, vt1 WHERE (((CASE WHEN 'o7n' THEN 0.00557404479992496 END)>((('4D깄B*O')=(NULL))))); -- 0ms;
SELECT ALL (- (vt0.c2 COLLATE RTRIM)) FROM vt1, vt0 LIMIT 701907468 OFFSET 1414388669; -- 0ms;
SELECT DISTINCT (vt0.c1 IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0))>((vt0.c0))))*(7.49608207E8)) FROM vt0, vt1 LIMIT -1008330519; -- 1ms;
SELECT CASE CAST(0.06478707865630373 AS REAL)  WHEN vt1.c0 THEN ((vt0.c1)<(vt1.c0)) ELSE CAST(vt0.c1 AS INTEGER) END, (((NULL IN ())) IS FALSE), (NOT (((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2)))) FROM vt1 WHERE ((((((((((('1593083564') IS TRUE))AND(((0.7360548506003107)OR(0.6959154609091682)))))AND((('210375249')OR(x'')))))AND(((NULL) NOTNULL))))AND(x'9f9a' COLLATE NOCASE)));SELECT DISTINCT ((((((((vt0.c0 COLLATE RTRIM)AND(AVG(vt0.c2))))OR((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(((('1868225053'))<((vt1.c0))))))OR((~ (0.9131674398653361)))), (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((AVG(vt0.c1), ((vt1.c0) NOTNULL), CAST(vt0.c0 AS BLOB))) AND ((((vt0.c2) IS FALSE), ((vt0.c2) BETWEEN (vt1.c0) AND (vt0.c0)), ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))))), UPPER(DISTINCT (- (vt0.c1))) FROM vt1, vt0 ORDER BY ((((vt1.c0)>>(vt0.c2))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((1377964747)/(vt0.c1))))  NULLS FIRST, (((vt0.c0 IN ())) NOTNULL) ASC, ((CAST(vt0.c2 AS REAL)) BETWEEN ((~ (vt0.c2))) AND (SQLITE_COMPILEOPTION_USED(vt0.c0))) ASC; -- 0ms;
SELECT DISTINCT (((((vt0.c2))=((vt0.c1))))>=(((((vt0.c2)OR(0X67982d54)))AND(vt0.c0)))), 0.7684290993367808, 0X6b6205ed FROM vt0 GROUP BY (((((~ (vt0.c1)))OR(CASE vt1.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))OR('')), ((((vt0.c1)<(vt0.c2))) ISNULL), (((vt0.c2, 0.8441317305504777, vt0.c1))>((vt0.c2, vt1.c0, 0.7360548506003107))) COLLATE NOCASE, ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN -2099132592 THEN vt0.c2 END)+(NULL)), CAST(NULL AS TEXT);SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1 GROUP BY (~ (((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))OR(NULL)))AND(vt0.c2)))), (~ ((NOT (vt0.c0)))), (((vt0.c2)-(vt0.c2)) IN ()) HAVING CAST(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END AS BLOB);SELECT DISTINCT COUNT(*) OVER ( RANGE  CURRENT ROW) FROM vt0, vt1; -- 0ms;
SELECT ALL NULLIF(vt1.c0 COLLATE BINARY, (vt0.c0 IN (vt0.c0))) FROM vt0;SELECT DISTINCT AVG(((vt0.c1)&(vt0.c1)) COLLATE NOCASE) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM vt1, vt0 WHERE ((((-56916962)) BETWEEN ((NULL)) AND ((0.01573974655288901))) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS TEXT) IN ()) FROM vt0, vt1 GROUP BY (((((vt0.c2)AND(vt0.c1)))OR(0.5039769012419643)) IN ()), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))|(((vt0.c1)>(vt0.c1)))), vt0.c0; -- 0ms;
SELECT DISTINCT HEX(((vt0.c2)||(vt0.c2))) FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT (((x'ab94a4b1'))<((NULL))))); -- 0ms;
SELECT DISTINCT ((CAST(NULL AS REAL)) NOT NULL) FROM vt1 WHERE (CAST(((0X66b2ef0) BETWEEN ('1801586157') AND (1868225053)) AS INTEGER)); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt1, vt0 LIMIT 2059560355; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS REAL), ((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)), vt0.c0 COLLATE BINARY))<=((((((vt0.c2)OR(vt1.c0)))OR(vt1.c0)), LIKELIHOOD(vt1.c0, 0.28202965999802176), (((vt0.c2, vt1.c0, '597661093'))==((vt0.c0, vt0.c0, vt0.c0)))))) FROM vt0, vt1 WHERE ((((((0.6111296733363573)AND(x'')))AND(NULL)) IN ())); -- 0ms;
SELECT (((('') BETWEEN (NULL) AND (vt0.c1)))IS NOT(-1196735384 COLLATE NOCASE)) FROM vt1, vt0 WHERE (((-1328606811)*(x'' COLLATE BINARY))); -- 1ms;
SELECT (((((vt0.c2, vt1.c0, vt1.c0))<=((vt0.c0, vt0.c2, vt0.c1))))<((- (1593552334)))) FROM vt0, vt1 WHERE (((('')) NOT BETWEEN ((x'')) AND ((((('-1348441851')) BETWEEN ((0.3973167895973475)) AND ((NULL))))))) ORDER BY (((((((vt0.c0, vt0.c2, NULL))<=((vt0.c2, vt0.c2, vt0.c2))))OR(((vt0.c0)*(vt0.c1)))))AND(vt1.c0 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT MAX(TOTAL(CASE vt0.c0  WHEN '-115618970' THEN vt1.c0 ELSE vt0.c0 END)) FROM vt0;SELECT DISTINCT ((0.5445943913324184 COLLATE NOCASE) BETWEEN (((vt0.c2)<(vt1.c0))) AND (((vt1.c0)||('0.8441317305504777')))) FROM vt0;SELECT DISTINCT (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((((vt0.c1)AND(NULL)))OR(vt0.c0)))), (1339618042 IN ()), (((((vt0.c0)-(vt0.c0))))>=((vt0.c1 COLLATE BINARY))) FROM vt0, vt1 GROUP BY ((((((((((((((vt1.c0)AND('ik?')))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)))OR(0x55f48985)))OR(vt0.c1))) ISNULL), ((CAST(vt0.c2 AS REAL))IS(((vt0.c1)&(vt0.c2)))), IFNULL(vt0.c0, 0.7256184232569137) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT vt1.c0, SUM(((vt1.c0)<(vt0.c1))) OVER (), (((((((('(\n')OR(GROUP_CONCAT(x''))))OR(json_array(vt0.c1, x'f16e', vt0.c1, vt0.c2))))AND(0.6506219857800563)))OR(vt1.c0 COLLATE BINARY)) FROM vt0, vt1 WHERE ((((x'' IN (x'')))<((((1.801586157E9))<((x'')))))) GROUP BY (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt1.c0)) IN ((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END END FROM vt0, vt1 ORDER BY (~ (((vt0.c2)LIKE(vt0.c0)))) LIMIT -549860673; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt0.c0) IN ((((vt1.c0)) BETWEEN ((0.0812068281915097)) AND ((vt0.c0))))) FROM vt1 WHERE ((~ (CAST(0.9131674398653361 AS NUMERIC)))) LIMIT 1686382425 OFFSET 313692426;SELECT ALL ((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2))) BETWEEN ((((vt0.c2))<((vt0.c0)))) AND (((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0)IS NOT(((vt0.c0)%(vt0.c2)))) WHERE (((((1.414388669E9)>('')))-((~ ('1713145534'))))); -- 1ms;
SELECT AVG(((((((((vt1.c0)OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c0))) FROM vt1;SELECT DISTINCT NULL FROM vt0, vt1 ORDER BY CAST(((vt0.c0)-(vt1.c0)) AS INTEGER), ((TYPEOF(DISTINCT vt0.c0)) NOT NULL) ASC  NULLS FIRST, CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN (~ (x'')) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)>=(vt0.c2)) THEN 0.2975040736785344 ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END DESC; -- 0ms;
SELECT ALL 0.9977359783455567 FROM vt0 ORDER BY x'' COLLATE BINARY DESC  NULLS LAST, vt0.c1 DESC LIMIT -1464940523 OFFSET -1201712557; -- 0ms;
SELECT ((((((vt0.c0)>(vt0.c1)))OR(((vt0.c0)AND(vt0.c0)))))OR(((vt0.c0) NOT NULL))), CASE WHEN ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) THEN '-2026573597' WHEN (vt0.c0 IN ()) THEN ((vt0.c2)-(0.7606834130404323)) WHEN vt0.c0 COLLATE RTRIM THEN NULL ELSE ((vt0.c2)LIKE(vt0.c2)) END, (((~ (0.33280934696532505)))||(CAST(vt0.c1 AS TEXT))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt0.c2) NOTNULL) FROM vt0, vt1 WHERE (((((0.7150464733674171)IS NOT('\w뤷 /1')))%('yT#' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (NOT (((vt1.c0) BETWEEN (vt0.c2) AND (vt0.c0)))), ((((COUNT(vt0.c2))AND(CAST(vt0.c0 AS INTEGER))))OR(((vt1.c0) IS TRUE))), TOTAL(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))) FROM vt1 ORDER BY TYPEOF((NOT (vt1.c0)))  NULLS LAST, ((((vt0.c2)|(x''))) NOT BETWEEN (LIKELY(DISTINCT vt0.c2)) AND (CAST(vt0.c1 AS BLOB)));SELECT DISTINCT ((((vt0.c1) NOT NULL)) NOT NULL) FROM vt1, vt0 GROUP BY (+ (CAST(vt0.c2 AS INTEGER))) HAVING (vt0.c0 IN ()) COLLATE NOCASE LIMIT 1606808972 OFFSET -55363710; -- 0ms;
SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(SUM(NULL))))OR((vt1.c0 IN ()))), SUM(vt0.c1), CAST(IFNULL(DISTINCT vt1.c0, vt0.c0) AS TEXT) FROM vt0;SELECT ALL ((((((vt0.c2))>=((vt0.c0)))))>=(((vt0.c0 IN ())))) FROM vt1;SELECT ((((vt0.c2) IS TRUE)) NOTNULL) FROM vt0 ORDER BY CASE CAST(x'fafe' AS REAL)  WHEN CAST(vt1.c0 AS TEXT) THEN (~ (vt0.c1)) END  NULLS LAST;SELECT ALL MAX(((vt0.c2) NOTNULL)) FROM vt0, vt1 GROUP BY vt0.c1 LIMIT -1289900424 OFFSET 536578713; -- 0ms;
SELECT DISTINCT CASE (vt1.c0 IN ())  WHEN ((vt0.c0)OR(vt0.c0)) THEN (~ (vt0.c0)) ELSE ((vt0.c2)<=(0.2665683282272967)) END FROM vt1 NATURAL JOIN vt0 WHERE (((CASE x''  WHEN 0.33981584836572687 THEN '701907468' END)OR(CAST('159310237' AS NUMERIC)))); -- 0ms;
SELECT NTILE((('DP.광ҁ')<=(((vt1.c0)GLOB(x'05eb1e2c'))))) OVER () FROM vt1 WHERE ((((0.8029854080956379)GLOB(0.8156492335381451)) IN ())); -- 0ms;
SELECT DISTINCT (((vt1.c0)>(x'fa69')) IN ()) FROM vt0 WHERE (((CASE WHEN x'' THEN x'' END)<=(0xffffffffc865d608 COLLATE NOCASE))); -- 0ms;
SELECT (((vt0.c1))=((vt0.c2 COLLATE RTRIM))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE vt1.c0 COLLATE BINARY  WHEN x'7b6931b7' THEN (('yt#') NOT NULL) ELSE vt0.c2 COLLATE RTRIM END FROM vt1;SELECT ALL CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END AS INTEGER) FROM vt0 WHERE ((((x'', NULL, x'')) NOT BETWEEN ((CASE WHEN x'0c78' THEN x'27d4' END, ((NULL) NOT BETWEEN (x'84ed') AND (x'')), CAST('-653674185' AS INTEGER))) AND ((((0.8472117598134772)<=('-2083896655')), (NOT ('')), (NOT ('-11472515')))))) ORDER BY LIKELY((x'9655' IN ())) ASC  NULLS LAST;SELECT DISTINCT ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1))) NOT BETWEEN (((0.7992824291118191) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((NULL)>=(vt0.c0)))) FROM vt1, vt0 WHERE ((((210375249 IN (-932850168, x'be362693')))<((((x''))<(('-1774501200')))))) ORDER BY CAST(CAST(vt0.c2 AS TEXT) AS REAL) DESC  NULLS LAST, ((('-1601976809') NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ()) ASC; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END) NOT BETWEEN (((vt0.c2)-(vt0.c1))) AND (HEX(vt1.c0))) FROM vt1;SELECT ((MAX(vt0.c1)) IS FALSE) FROM vt0, vt1; -- 0ms;
SELECT ALL 0.3899019726931072 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)&(0.5107064511879041)))|(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2)))), ((((((vt0.c0)OR(vt0.c1)))AND('93195462')))/((((vt0.c1, NULL, vt0.c1))>((vt1.c0, vt1.c0, vt1.c0))))), (NOT (vt0.c0)) FROM vt0 WHERE ((NOT ((((NULL))>=((0.26638472104505395))))));SELECT DISTINCT json_array(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), (vt0.c2 IN ()), (vt1.c0 IN (vt0.c2, vt1.c0)), CASE WHEN vt0.c2 THEN vt0.c1 WHEN 'zuH,	%/' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 END), (('Ev' IN ()) IN ()), CAST(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) AS INTEGER) FROM vt1;SELECT ALL ((((MIN(vt0.c1))AND((+ (x'')))))OR(((((vt0.c2)OR(0.01573974655288901)))OR(vt1.c0)))) FROM vt1;SELECT ALL (((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((AVG(vt0.c1)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT AVG(LIKELY(vt0.c0)) COLLATE RTRIM, LAG(((((vt0.c1) NOT NULL))>((('1797357759')IS(0.16787531230199215)))), vt0.c1, (NOT ((((vt0.c2))==((vt0.c0)))))) OVER (), CAST(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c2 END AS NUMERIC), (('1594407733')<<(vt0.c0 COLLATE BINARY)), (- (SUBSTR(vt1.c0, vt0.c0))) FROM vt0 GROUP BY ((((vt1.c0)||(vt1.c0))) ISNULL), (((('-2026573597')AND(UNLIKELY(DISTINCT vt0.c2))))AND(LAST_INSERT_ROWID())), ((CAST(vt1.c0 AS BLOB))/(vt0.c0));SELECT DISTINCT CASE WHEN CAST('0.06478707865630373' AS TEXT) THEN ((vt0.c0)AND(vt0.c0)) ELSE (((vt0.c2, vt0.c2, x'', vt0.c2, vt0.c1))=((vt0.c2, vt1.c0, vt0.c2, vt1.c0, NULL))) END, ((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END) BETWEEN (COUNT(vt0.c2)) AND ((NOT (vt0.c0)))), (((vt0.c1, vt0.c1, vt1.c0)) BETWEEN ((CAST(vt0.c2 AS INTEGER), CASE WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c2)IS NOT(vt0.c2)))) AND ((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)!=(vt0.c0)), ((vt0.c0)<<(vt0.c2))))), ((((vt0.c1)GLOB(vt0.c0)))&(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)), MIN(TOTAL(((vt0.c1)/(vt0.c2)))) FROM vt0, vt1 WHERE ((NOT (((675137987)IS(x'66f8')))));SELECT DISTINCT (((GROUP_CONCAT(vt0.c0), (vt0.c1 IN ()), GROUP_CONCAT(vt0.c1)))>=((0.9496603070445109, ((0.06456583936570137) BETWEEN (vt0.c2) AND (vt1.c0)), TRIM(DISTINCT vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))%(((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))), ABS(((((vt1.c0)AND(vt0.c1)))AND(vt1.c0))), CASE (vt0.c1 IN ())  WHEN vt0.c0 COLLATE BINARY THEN MAX(vt0.c2) END FROM vt1 WHERE (CASE WHEN LOWER(DISTINCT NULL) THEN ((0.2497826296325425) NOT BETWEEN ('730152867') AND (NULL)) WHEN CASE WHEN NULL THEN 0xffffffffafa06905 WHEN '-871406665' THEN x'' WHEN x'6718' THEN x'' END THEN ((0X5338d45d) NOT BETWEEN (0.7591964719201121) AND (1994812721)) WHEN ((((x'')OR(NULL)))AND(0.6959154609091682)) THEN RTRIM(NULL) ELSE (x'' IN ()) END);SELECT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))*((~ (0.33280934696532505)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN x'' WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE RTRIM THEN ((0.6680176705217942)<<(vt0.c2)) ELSE (+ (vt0.c0)) END FROM vt1;SELECT ALL CAST(CAST(vt1.c0 AS INTEGER) AS BLOB), vt1.c0, 2.100678158E9 FROM vt0;SELECT ALL (((CASE vt1.c0  WHEN 'qPh0ikqjg' THEN vt0.c0 WHEN 1412440838 THEN vt1.c0 WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c2 END, vt0.c2, (((vt0.c2, vt1.c0, '-1707519014')) NOT BETWEEN ((NULL, vt0.c0, vt1.c0)) AND ((vt0.c1, vt0.c2, vt0.c2)))))>((CAST(vt0.c0 AS INTEGER), AVG(vt0.c1), MAX(NULL)))) FROM vt1, vt0; -- 0ms;
SELECT (((vt1.c0 IN (vt1.c0))) BETWEEN (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END) AND (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt1, vt0; -- 0ms;
SELECT ((((((((vt1.c0)OR(1488488313)))AND(vt0.c1)))OR((vt0.c0 IN ()))))OR(COUNT(vt0.c1))) FROM vt0 WHERE (((((((0.826031549590257) NOTNULL))AND((+ (x'')))))OR(CASE 1593552334  WHEN '-871406665' THEN x'' ELSE x'' END)));SELECT DISTINCT CAST(vt1.c0 AS INTEGER) COLLATE NOCASE FROM vt1 WHERE ((((('517622885')LIKE(x''))) NOT BETWEEN (CASE WHEN 0xffffffffdbf3ffba THEN '' ELSE 0.16515111936272975 END) AND (((x'2eca') NOT NULL)))); -- 0ms;
SELECT (((vt0.c1 IN (vt1.c0, vt0.c0))) BETWEEN (((vt1.c0)||(vt0.c2))) AND (((vt0.c1)OR(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (NULL); -- 0ms;
SELECT (NOT (((vt1.c0)IS('')))) FROM vt1 WHERE (0.978252502947751); -- 1ms;
SELECT DISTINCT ROUND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))>=((vt0.c1)))), rtreenode(vt0.c1, vt0.c1) COLLATE NOCASE, (CASE WHEN vt0.c1 THEN vt0.c1 END IN (MIN(vt0.c1), (((vt0.c2))<((vt1.c0))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(TRIM(vt0.c1, vt0.c1) AS REAL) FROM vt1 WHERE (x'e4ccd358') LIMIT -1254362109;SELECT DISTINCT ((-65626626)*(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)), MIN((((vt0.c0))<=((vt0.c1))), x''), 0.4356403435181878 FROM vt0 WHERE (((CAST('UX斣' AS REAL))AND((~ (0X5d73ecd6)))));SELECT DISTINCT TOTAL(((vt0.c1)+(vt0.c1))) OVER () FROM vt1 WHERE ((((0Xfffffffff91bcb66) NOTNULL) IN ()));SELECT ALL SUM(((vt0.c0)%(vt0.c0))) OVER (), SUM(vt0.c0 COLLATE NOCASE) COLLATE BINARY, FIRST_VALUE(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE RTRIM) OVER () FROM vt0 WHERE (CAST((NULL IN (0X5efbadce)) AS BLOB)); -- 1ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB)) IS TRUE) FROM vt1 WHERE ((+ (1.606808972E9 COLLATE RTRIM)));SELECT DISTINCT SUM(vt0.c1), RANK() OVER ( ROWS  UNBOUNDED PRECEDING), vt0.c2 COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT ((((vt0.c1)AND(CAST(vt0.c2 AS TEXT))))AND((((vt0.c1, vt0.c2, vt0.c1))<=((vt0.c1, vt1.c0, vt1.c0))))) FROM vt0 ORDER BY vt0.c1  NULLS FIRST, (((((vt1.c0))>=((vt1.c0)))) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c0 END) AND (((vt1.c0)AND('-2082253774')))), TRIM(((vt0.c2)+(vt0.c1))) LIMIT 879039467 OFFSET -1089766761;SELECT DISTINCT ((vt0.c0) IS FALSE) FROM vt1, vt0; -- 0ms;
SELECT LOWER(((vt1.c0)>=(vt1.c0))), CAST((+ (vt0.c1)) AS NUMERIC), CAST((vt1.c0 IN ()) AS BLOB), (x'' IN ()), TOTAL((~ ('0.2975040736785344'))) FROM vt0, vt1 WHERE (CAST(((x'9d2aab80')>>(0.8544674927399175)) AS REAL)); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)<=(((vt0.c2) ISNULL))) FROM vt1 WHERE ((((((((((('-1637595045')<(8.79039467E8)))OR(((0Xffffffffa55869bf) NOT NULL))))OR((('1428891164') BETWEEN ('0.978252502947751') AND (0.5579422951408471)))))AND(((((NULL)AND(0.33280934696532505)))AND(x'8fc6be6b')))))OR(((NULL)>=('')))));SELECT (vt0.c0 IN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) FROM vt0 WHERE ((((((0x66b2ef0))==(('0Qm7ov\nR'))))>=(LIKELY(DISTINCT NULL))));SELECT DISTINCT 0.3279016780595533, COUNT(((vt0.c2) IS FALSE)), FIRST_VALUE(CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (-2054789726)) THEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)) WHEN ((vt0.c2)GLOB(x'')) THEN (((vt0.c0))>=((vt0.c2))) WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END THEN TRIM(DISTINCT vt0.c2) ELSE ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END) OVER () FROM vt0 ORDER BY ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY DESC;SELECT ALL ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(((((NULL)AND(vt1.c0)))AND(vt0.c2)))))AND(((vt0.c0)&(vt0.c2)))))AND(vt0.c2)) FROM vt1 WHERE (((NULL IN (-1.464940523E9)) IN ()));SELECT CAST((- (NULL)) AS TEXT), ((MAX(x'e336')) BETWEEN ((((vt1.c0, vt0.c1, vt0.c0))>=((vt0.c0, 0Xffffffff9e64485b, vt1.c0)))) AND (NULLIF(vt0.c1, NULL))), '0.7360548506003107', DENSE_RANK() OVER ( PARTITION BY ((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS TRUE), ((vt0.c2)*((((vt0.c0, vt0.c2, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt1.c0, vt0.c0, vt1.c0))))), (((CAST(vt0.c0 AS BLOB), NULLIF(vt0.c2, vt1.c0), ((vt1.c0) NOTNULL)))>=((((NULL)<(vt0.c1)), ((vt0.c0)OR(vt0.c1)), (vt1.c0 IN (vt0.c1))))), ((CAST(vt1.c0 AS NUMERIC))IS(0.976178505102221))), COUNT((vt1.c0 IN ())) OVER () FROM vt0, vt1; -- 0ms;
SELECT ALL CASE vt0.c2 COLLATE BINARY  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) THEN rtreenode(vt0.c2, vt0.c1) ELSE ((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)) END, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))||(((vt0.c1)==(vt0.c1)))), (~ ((+ (vt0.c2)))) FROM vt0, vt1 GROUP BY vt0.c0 COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((('')AND(vt0.c1)))OR(MAX(vt0.c0))), vt0.c0, ((((vt0.c1) NOT NULL))<>(((x'') NOT BETWEEN (vt0.c0) AND ('-1935258712')))) FROM vt1 WHERE ((((((0.045571304701463755, '~ⵔ', 0.34066110715854914)) BETWEEN (('-1080697058', 0.6026751943472672, '')) AND ((-2.083896655E9, NULL, x'')))) ISNULL));SELECT DISTINCT TOTAL(TYPEOF(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)<(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END) AND (((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c2)))AND(NULL)))) FROM vt1 WHERE (((((0.4882274774142793) ISNULL)) NOT BETWEEN (CASE '1I'  WHEN '170295552' THEN -5.49860673E8 END) AND (LOWER('661390465')))) ORDER BY ((vt0.c0)AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST;SELECT ((CAST(vt0.c2 AS TEXT)) IS TRUE) FROM vt0 WHERE (((0.7680876883260395 COLLATE RTRIM) NOT BETWEEN (1.297519807E9 COLLATE BINARY) AND ('/\r䖑ALX鯮'))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (('-172215910' IN ())); -- 1ms;
SELECT ALL ((((vt1.c0)IS NOT(vt0.c1))) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (MIN(vt0.c1))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2 IN (vt0.c1, vt0.c2)))IS NOT(CAST(vt1.c0 AS BLOB))) FROM vt0, vt1 WHERE ((+ (((-9.32850168E8)*(0.39037824339175853))))); -- 0ms;
SELECT ALL ((((((((((vt0.c2)AND(vt0.c0)))OR('661390465')))OR(vt0.c0)))AND(vt0.c2)))IS NOT((((vt0.c1))>((vt0.c2))))) FROM vt0 WHERE ((((0X4e2560e2 IN ()))<<(CAST(x'a0da' AS REAL)))); -- 0ms;
SELECT ALL GROUP_CONCAT(DATE(vt0.c1, vt0.c0, vt1.c0)) OVER () FROM vt0 WHERE (((NULL)&((~ ('-871406665'))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((TYPEOF(0.010258614832383661))))  NULLS LAST;SELECT DISTINCT ((vt0.c0)+(NULL)) COLLATE NOCASE FROM vt0 WHERE (CAST(x'040e' AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT ALL (((CASE WHEN x'' THEN vt0.c1 END, CASE WHEN vt0.c0 THEN NULL END, '}W枰oihib'))<((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c2)==(vt1.c0)), CAST(vt0.c1 AS BLOB)))), (((~ (vt1.c0))) NOTNULL), (((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0, vt1 WHERE ((((('鑡{O') IS TRUE))-((+ (NULL))))) LIMIT 350064093; -- 0ms;
SELECT DISTINCT (vt0.c1 IN ()) FROM vt1, vt0 WHERE ((~ ('-2082253774')) COLLATE NOCASE); -- 0ms;
SELECT ALL (~ ((('') BETWEEN (vt1.c0) AND (vt0.c1)))), LIKELY(DISTINCT vt0.c1) COLLATE BINARY, ROW_NUMBER() OVER () FROM vt1, vt0 WHERE (CASE ((x'') NOT NULL)  WHEN (((NULL)) BETWEEN (('-2101216036')) AND ((-6.53674185E8))) THEN HEX(DISTINCT NULL) ELSE (('\ro[z6{') NOT BETWEEN ('') AND (0.8441317305504777)) END) LIMIT 653610589 OFFSET 9223372036854775807; -- 0ms;
SELECT DISTINCT TOTAL(((NULL) NOT NULL)) OVER ( ORDER BY (((vt1.c0)) NOT BETWEEN (((x'' IN ()))) AND ((0.5112124749133473)))  NULLS LAST), (((vt1.c0))>=((vt1.c0))) COLLATE NOCASE, x'', 'pQ', ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c2)))OR(vt0.c1))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND ((vt0.c1 IN ()))) FROM vt1, vt0; -- 1ms;
SELECT CAST(((vt0.c0)<<(vt0.c1)) AS TEXT), CASE WHEN ((((((((((((vt0.c0)AND('/0')))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN TYPEOF(DISTINCT vt0.c1) END, ((((((vt0.c2)AND(-601837931)))AND('TRUE'))) IS FALSE) FROM vt1 WHERE (((((1.07687664E8 IN ()), IFNULL(DISTINCT x'4da4', x''), (('0.978252502947751') BETWEEN (413309475) AND ('1302041746'))))>=(((NOT (0.010258614832383661)), (((0.9884698138909952, 0.6506219857800563, NULL))<((x'84b9', 'N+AQ''5읐7(', x''))), (((x'', '1-lqZV', x'2f7b')) BETWEEN ((x'', NULL, NULL)) AND ((NULL, 0x522212cb, x'c36a')))))));SELECT DISTINCT CASE ((vt0.c2)!=('Z7[G?_'))  WHEN ((((vt0.c0)OR(vt0.c2)))AND(vt0.c2)) THEN vt0.c0 COLLATE NOCASE END, vt0.c0, CASE json_insert(vt0.c2, vt1.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c2, vt0.c0)  WHEN CASE vt1.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c0 END THEN ((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) END FROM vt0, vt1 WHERE (((CAST(x'ddd6' AS NUMERIC)) NOT BETWEEN (CASE '-1700078729'  WHEN 0.8859038422101677 THEN x'8ba9' END) AND ((- (x'22eb'))))) GROUP BY UNLIKELY(DISTINCT ((vt0.c1)==(vt0.c1))), (((((((((vt0.c1 IN ()))AND(vt0.c0)))AND(LTRIM(vt0.c0, vt1.c0))))OR(((vt0.c0)>=(vt1.c0)))))OR('948932613')), CAST((('-1613466435') BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) HAVING CAST((('8-glF#') NOT NULL) AS NUMERIC); -- 0ms;
SELECT DISTINCT (((- (vt0.c2)))GLOB((+ (vt0.c0)))) FROM vt1;SELECT DISTINCT (~ ((('z') IS FALSE))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)) WHEN 0.05662303924199086 THEN NULL COLLATE RTRIM END, ROW_NUMBER() OVER () FROM vt1 WHERE (CASE WHEN NULLIF('', 'C|{n,믓LM') THEN (+ (NULL)) ELSE (((NULL, x'5f5b', '-1507056988'))==((0.6694911664890879, NULL, x''))) END);SELECT (- (vt1.c0)) COLLATE BINARY FROM vt0, vt1 WHERE ((+ (((1.868225053E9)-('❙x2簎]/'))))); -- 0ms;
SELECT CAST(((vt0.c2)>(vt0.c1)) AS NUMERIC) FROM vt1, vt0 ORDER BY (((vt1.c0)>>(vt0.c2)) IN ()) ASC, vt0.c0 DESC, ((((vt0.c0, vt0.c2, vt1.c0))<>((vt0.c1, vt0.c0, -1350554208))) IN ()) DESC; -- 1ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOTNULL) FROM vt0, vt1 WHERE (MAX(((((0.7591964719201121)AND('ieq?')))AND('QzWAD')), 0.12220174405387962 COLLATE NOCASE)); -- 0ms;
SELECT NULL, (((vt0.c2)) BETWEEN ((x'')) AND ((((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0))))), (NOT (vt1.c0)) COLLATE RTRIM FROM vt0, vt1 WHERE (x'2080'); -- 0ms;
SELECT DISTINCT AVG(vt0.c1) FROM vt0 ORDER BY CAST(CASE WHEN vt0.c1 THEN vt1.c0 END AS INTEGER);SELECT DISTINCT ((((((((CAST(vt0.c1 AS NUMERIC))OR(((((x'')AND(vt1.c0)))AND(vt0.c0)))))OR(LOWER(DISTINCT x''))))OR(',''k')))AND(((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))) FROM vt0, vt1 ORDER BY vt0.c1; -- 0ms;
SELECT ((((vt0.c2)*(vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ((NOT (vt0.c1)))) FROM vt0, vt1 GROUP BY ((json_array_length(vt0.c0)) ISNULL), TRIM(((vt0.c1)>>(vt1.c0))), ((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))IS(((vt0.c2) IS TRUE))) HAVING ((((vt0.c1) ISNULL)) NOT NULL); -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN (NOT (vt0.c1)) END FROM vt1;SELECT DISTINCT NULLIF((((vt0.c1))!=((vt1.c0))), UPPER(DISTINCT vt1.c0)) FROM vt1, vt0 WHERE ((((NOT (NULL)))||(((x'') IS FALSE)))); -- 0ms;
SELECT DISTINCT TYPEOF(vt0.c1) COLLATE RTRIM FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (((('' IN (vt0.c2)), 3.13692426E8 COLLATE NOCASE, ((vt0.c0) IS TRUE)))=((((vt0.c1) BETWEEN (vt0.c2) AND (vt1.c0)), TOTAL(vt1.c0), COUNT(x'')))) FROM vt1, vt0 WHERE (HEX(0.5445943913324184 COLLATE NOCASE)); -- 0ms;
SELECT LAST_VALUE(x'') OVER () FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB)) BETWEEN ((- (vt1.c0))) AND ((vt0.c2 IN (vt1.c0, vt0.c2)))) ASC;SELECT ALL SUM(CAST(vt0.c1 AS BLOB)) FILTER(WHERE vt0.c0) OVER () FROM vt1, vt0 WHERE ((((CAST(NULL AS TEXT)))>=(('675137987')))); -- 0ms;
SELECT DISTINCT (~ ((((vt0.c0))>=((vt0.c0))))) FROM vt1 WHERE (((((x'1d49')IS(0.03598711898436879))) BETWEEN (CASE WHEN NULL THEN NULL ELSE '' END) AND ((- (-1328606811)))));SELECT DISTINCT MIN(vt0.c2), CAST(vt0.c1 COLLATE RTRIM AS INTEGER), ((((vt1.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))OR(((vt0.c2)==(vt0.c0)))) FROM vt0 GROUP BY (((((vt1.c0)/(vt0.c0)), ((vt0.c2)LIKE(vt0.c0)), (+ (vt0.c2))))==((vt0.c0 COLLATE NOCASE, '-1206342030', 'U&U#'))), x'', x'' HAVING CASE WHEN (vt1.c0 IN (vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END;SELECT DISTINCT GROUP_CONCAT(vt0.c0) OVER (), (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)), (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), NULL)) AND ((HEX(DISTINCT vt1.c0), 0.6520706017442948, vt0.c0))), AVG(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))), TOTAL((((vt1.c0, vt0.c2, vt0.c2, vt0.c2, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt1.c0, vt0.c1, vt0.c2)) AND ((vt1.c0, vt0.c1, vt1.c0, vt0.c0, vt1.c0)))) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS), (((vt1.c0 IN ()))GLOB(HEX(vt0.c0))) FROM vt0 WHERE (((((((0.976178505102221)OR('ԾZ*ೆ,Bw')))AND('ꮞf')))AND(((NULL)-(NULL))))) LIMIT -397310126 OFFSET 532182426;SELECT json_array_length(vt0.c2) COLLATE RTRIM FROM vt1;SELECT ALL (((vt0.c2)) NOT BETWEEN ((CAST(vt0.c2 AS REAL))) AND (((((vt0.c0))>((vt0.c2)))))) FROM vt0 WHERE ((((('0.7360548506003107')||(''))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ()), COUNT(MAX((vt0.c2 IN ()))), (~ (NULL)), ((CAST(vt0.c1 AS REAL)) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(0.09929329188637159))) AND (vt0.c2 COLLATE BINARY)), vt1.c0 FROM vt1;SELECT DISTINCT STRFTIME((NOT (vt0.c1)), ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2)), vt0.c0 COLLATE NOCASE) FROM vt1 WHERE (((((((((((((((((NULL)AND(0.16515111936272975)))OR('dbK')))AND(NULL)))OR(0x12a14a61)))AND((('')=('759144114')))))OR(CAST(0.9470791402580538 AS INTEGER))))AND(((0.8009823169223335)*(1.814474308E9)))))AND(CAST('-515575455' AS BLOB))));SELECT DISTINCT (((((vt0.c1)%(vt0.c1)), CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOTNULL)))<=((AVG(vt0.c2), vt0.c2, ((vt1.c0)%(vt0.c1))))) FROM vt1 WHERE (CASE WHEN ((((((((NULL)AND('1488488313')))AND(0.9211993795884204)))AND(0.041296925315312816)))OR('730152867')) THEN (('wGG<,N') BETWEEN (x'') AND (NULL)) END);SELECT ((((- (vt1.c0))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))) FROM vt0, vt1 WHERE ((((((('-400976799') IS TRUE))AND('')))AND(CASE WHEN NULL THEN -1821023397 ELSE NULL END))); -- 0ms;
SELECT ALL TYPEOF(DISTINCT vt0.c1) FROM vt1, vt0; -- 0ms;
SELECT vt0.c0 COLLATE BINARY FROM vt1, vt0 LIMIT -11472515 OFFSET 1351066295; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)>=(vt0.c0))) FROM vt1, vt0 WHERE (0.31015433495743927); -- 0ms;
SELECT ALL CAST((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) AS BLOB), CAST((((((((('-1381197709')AND(x'6a8c')))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)) AS REAL), ((((((vt0.c2)OR(vt0.c1)))OR(vt1.c0)))+(((vt0.c2)&(vt0.c2)))) FROM vt1 WHERE (((~ (x'84bd')) IN (((1.297519807E9)/(x'')))));SELECT ALL HEX(DISTINCT CASE vt0.c0  WHEN x'' THEN vt0.c1 END), (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) IN ((((vt1.c0))<=((vt0.c1))))), FIRST_VALUE('1279969008') OVER () FROM vt0;SELECT ALL MIN(SUM(vt1.c0), ((vt0.c1)<<(vt0.c2)), (((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt1.c0, vt0.c0))), LIKELIHOOD(DISTINCT vt0.c1, 0.9150785324219148)), TOTAL(((vt0.c1) IS FALSE)), SUM((vt0.c0 IN (vt0.c1)) COLLATE NOCASE) OVER () FROM vt0 WHERE (CAST((((0.517384502711647, NULL, '^'))<=((x'', -5.536371E7, x''))) AS NUMERIC));SELECT DISTINCT ((SUM(vt0.c0))|(((vt1.c0)<>(vt0.c2)))), vt0.c0, vt0.c2, LEAD((CAST(vt1.c0 AS TEXT) IN ()), ((((((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))AND(CAST(vt0.c1 AS NUMERIC))))OR(vt0.c2 COLLATE RTRIM)))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c0)), ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c2))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt1.c0 END) AND (((((vt1.c0)OR(0.8943911626059652)))AND(vt1.c0))))) OVER ( PARTITION BY ((((vt1.c0) NOT NULL))OR(NULL)), NULL), CASE WHEN vt0.c1 THEN ((vt0.c1) NOTNULL) ELSE ((vt0.c1)==(vt0.c0)) END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT SUM(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) FROM vt0 WHERE ((((NULL IN (NULL))) ISNULL));SELECT ((vt0.c2) IS TRUE), MAX(CAST(vt0.c1 AS INTEGER)), IFNULL(((vt0.c0)*(vt1.c0)), ((vt0.c1)>=(vt0.c0))) FROM vt1 WHERE (((((((((CASE -1.935258712E9  WHEN '0.00557404479992496' THEN 0.8245647861057045 END)OR(CASE WHEN '-1299177183' THEN NULL WHEN '-1727983824' THEN NULL WHEN 1.377964747E9 THEN NULL ELSE NULL END)))AND(((0.8156492335381451) BETWEEN (0.22592750210545953) AND (x'df45b643')))))AND((((('-1348441851')AND(NULL)))OR('-1089766761')))))OR((((NULL))>((0.7347086033148554))))));SELECT DISTINCT vt0.c1, (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN (vt1.c0)))) AND ((((vt0.c0)>>(vt0.c2))))), vt0.c2 FROM vt1 WHERE (NULL);SELECT ALL ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)-('w8jkm'))) AND (((vt1.c0)<<(0.5482094099295365)))), (((vt1.c0)<<(vt0.c0)) IN ()), AVG(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))), vt0.c1, TOTAL(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END) OVER ( RANGE vt0.c1 PRECEDING) FROM vt0 WHERE (CASE (('-378872640')LIKE(NULL))  WHEN ((x'2c12')LIKE(0.22023777169142333)) THEN ((x'')*('792170153')) ELSE ((((NULL)OR(x'e720')))AND(NULL)) END);SELECT ALL CAST(701907468 AS INTEGER), (vt1.c0 IN ()) COLLATE RTRIM, CASE WHEN SUM(vt0.c0) THEN x'' WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c2) IS TRUE) WHEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) THEN (((('Mf[')OR(vt0.c0)))OR(vt0.c2)) END FROM vt1;SELECT DISTINCT (((vt0.c2))>=((vt1.c0))) COLLATE RTRIM, CASE vt1.c0 COLLATE RTRIM  WHEN ((vt0.c2)<<(vt0.c1)) THEN (((vt0.c2, vt0.c0, vt0.c2, vt0.c2, vt0.c2, vt0.c0, vt0.c2))>=((vt0.c2, vt0.c2, vt1.c0, vt0.c1, vt0.c2, vt1.c0, 0.38117981768284726))) ELSE MIN(vt1.c0) END, CASE x''  WHEN (((vt1.c0))<=((vt0.c2))) THEN CAST(vt1.c0 AS INTEGER) ELSE (vt0.c0 IN (vt0.c1, vt0.c2)) END FROM vt0, vt1 ORDER BY CASE WHEN (((vt0.c2))<=((vt1.c0))) THEN CAST(vt0.c0 AS REAL) END ASC; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c2) ISNULL)) OVER (), vt1.c0, NULL FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((('{*ڐU>霸5x')OR(vt0.c2)))AND(vt0.c0)))==((('820270269')/(vt1.c0)))) FROM vt0 WHERE (((((((x'')AND('59?0')))OR('192998010'))) NOT BETWEEN (((x'') NOT BETWEEN (x'') AND (0.8406299414325563))) AND (0.00557404479992496 COLLATE BINARY)));SELECT DISTINCT (((((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))<((((vt0.c1)<>(vt1.c0))))), ((((((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))AND(((vt0.c2) NOT NULL))))AND(((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(vt1.c0 COLLATE RTRIM)), (CAST(vt0.c2 AS BLOB) IN ()) FROM vt1;SELECT ALL CAST('2100678158' AS INTEGER) FROM vt1 WHERE ((((((x'') IS FALSE)))==((((0X7fffffffffffffff) NOT BETWEEN ('-739118054') AND (0.8962701871653856)))))); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((TOTAL(vt0.c0), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END, vt0.c2)) AND ((((1.593083564E9)>=(vt1.c0)), ((vt0.c0)/(vt0.c2)), IFNULL(DISTINCT vt0.c2, vt0.c1)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)))) AND (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'')))))), ((vt0.c2)&(vt0.c1)) COLLATE BINARY, CASE ((vt1.c0)>>(vt1.c0))  WHEN COUNT(*) THEN ((((((((((((vt0.c2)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c2)) END FROM vt0 WHERE (((('-1068946009' COLLATE NOCASE))>=((0.5579422951408471))));SELECT DISTINCT ((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)) COLLATE NOCASE FROM vt1, vt0 WHERE (((('0.6520706017442948' IN ()))/(0.8217832670678573))); -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))) FROM vt0 WHERE (CASE CASE WHEN x'' THEN '1377964747' END  WHEN CAST(0.7313018423493122 AS TEXT) THEN ((NULL) BETWEEN (x'') AND ('-1637595045')) WHEN (('wGG<,N')==(0.700154977537483)) THEN (0Xffffffff861aa688 IN (x'')) WHEN ((('{왟^'))>=((x''))) THEN ((x'17a7')<<(NULL)) END); -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c2)))AND(x'ed9a')))>>(((vt0.c2) NOT NULL))) FROM vt0, vt1; -- 0ms;
SELECT ALL CASE ((vt0.c1)<(0.5833479658922025))  WHEN (NOT (vt0.c2)) THEN ((vt0.c1)%(vt0.c2)) END, CASE WHEN CAST(vt0.c1 AS REAL) THEN json(vt1.c0) END, (((~ (vt0.c0)))>=(((vt1.c0) BETWEEN (vt0.c2) AND (vt1.c0)))) FROM vt1 WHERE ((- ((x'' IN ()))));SELECT DISTINCT ((((((((((((((((((952368924)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))>>(((1.814474308E9) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CASE WHEN ((vt1.c0)<<(vt0.c1)) THEN (- (vt0.c0)) WHEN vt0.c1 THEN CAST(vt0.c2 AS NUMERIC) WHEN NULL THEN MIN(vt0.c0) END, ((vt0.c2 COLLATE BINARY) IS TRUE) FROM vt0 WHERE (CASE WHEN ((0.49917156363899606) NOT BETWEEN (0.19042276334208175) AND ('-2097522442')) THEN CASE '675137987'  WHEN NULL THEN 0.4703249371186632 ELSE '2007059635' END END);SELECT DISTINCT (((~ (vt0.c1)))<=((vt0.c1 IN ()))), (((vt1.c0 IN (vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END) AND (((vt0.c0)AND(vt0.c2)))), (~ (((vt0.c0) IS TRUE))) FROM vt1, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)|(CAST(vt0.c0 AS TEXT))), ((CASE vt0.c2  WHEN vt1.c0 THEN 'c|{n,믓lm' ELSE '1414388669' END)IS((('U*Y{U') BETWEEN (0X1ffb8a99) AND (vt1.c0))))  NULLS LAST; -- 0ms;
SELECT ALL (((+ (vt0.c1))) NOT BETWEEN (MIN(NULL)) AND ((vt0.c1 IN ()))), ((((0.8607207747095011)OR(UNLIKELY(DISTINCT vt0.c1))))OR(((vt1.c0) NOT NULL))), (NOT (MAX(vt0.c0))) FROM vt1 WHERE (((CASE NULL  WHEN 'N	' THEN '|*' WHEN '-356653' THEN '-1302551622' WHEN NULL THEN x'' ELSE '' END)<>((0.36772612050053866 IN (x'', '''BzAY_FG]')))));SELECT DISTINCT (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', NULL, vt0.c2))), ((vt0.c1) NOT NULL), ((vt0.c2)>=(vt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN NULL ELSE vt0.c0 END, ((vt0.c2)&(vt1.c0))))) FROM vt1 ORDER BY CAST(((vt0.c2)<(vt1.c0)) AS NUMERIC) ASC, LIKELY(vt1.c0)  NULLS LAST, CHANGES() ASC  NULLS LAST;SELECT TOTAL(((((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0))) FILTER(WHERE vt0.c0) OVER () FROM vt0 ORDER BY (((- (vt0.c2)))IS NOT((+ (vt0.c0)))) DESC  NULLS FIRST;SELECT DISTINCT vt0.c2, CAST(AVG(vt0.c0) AS INTEGER), (((((vt0.c2))<((vt1.c0))))GLOB(HEX(DISTINCT NULL))) FROM vt1 WHERE (((((NULL)>=('-1727739331')))%(0Xfffffffff2bd3098)));SELECT DISTINCT (((((vt0.c0)<<(vt0.c1)), (vt0.c0 IN (vt0.c0)), ((vt1.c0)GLOB(0xffffffffb244464a))))<>((((vt0.c0)AND(vt0.c1)), (- (vt0.c2)), (((vt0.c2))>((vt0.c0)))))) FROM vt1, vt0; -- 0ms;
SELECT ALL json_extract(vt1.c0, CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0)IS(vt0.c0)), GROUP_CONCAT(vt0.c0)) FROM vt1, vt0 WHERE ((0.4649375038453496 IN (((0X276c0481)<(x''))))); -- 0ms;
SELECT DISTINCT DATE(vt0.c0, vt1.c0, 653610589) COLLATE RTRIM FROM vt1 WHERE (NULL);SELECT CASE (+ (vt1.c0))  WHEN 0.8121129954389142 THEN CASE WHEN '7uy%w	' THEN vt0.c2 END ELSE LIKELY(vt1.c0) END FROM vt0, vt1 WHERE ((NOT (CASE WHEN NULL THEN ',''k' ELSE 1584825562 END))) LIMIT -115618970; -- 0ms;
SELECT DISTINCT TOTAL((NOT (vt0.c2)) COLLATE RTRIM) OVER (), ((vt0.c2 IN (NULL)) IN ()), NULL FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt0.c1) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN (((vt0.c1 IN ('1606808972')))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))), x'', (((vt1.c0 IN ()))*(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) FROM vt0;SELECT DISTINCT SQLITE_COMPILEOPTION_USED(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 ELSE '' END) FROM vt0 WHERE (((CASE WHEN 0Xffffffff97056e3e THEN '1442089349' WHEN '-620686537' THEN 0.6544339927764014 WHEN NULL THEN NULL WHEN '7cS' THEN NULL WHEN NULL THEN NULL ELSE x'f08e' END) NOT NULL)); -- 0ms;
SELECT DISTINCT (((((vt0.c0))>=((vt0.c0)))) BETWEEN (((((vt0.c0)OR(vt0.c1)))OR(NULL))) AND (((-604766278)=(vt0.c0)))), ((vt0.c1) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END) AND ((((x'', vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c1)) AND ((vt0.c2, vt1.c0, ''))))), TYPEOF((((vt1.c0, vt0.c2, vt1.c0))<>((vt0.c2, vt0.c0, vt1.c0)))) FROM vt0 ORDER BY (+ (STRFTIME(vt0.c0, vt0.c0, vt0.c1, vt1.c0, vt0.c2))) DESC  NULLS LAST, ((((vt1.c0 IN ()), 0X6b6205ed, ((vt0.c0) IS FALSE)))=(((0.924719978956932 IN (vt0.c0)), CAST(vt0.c1 AS NUMERIC), ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)))))  NULLS LAST;SELECT ALL (~ ((((vt1.c0, vt0.c1, vt0.c2))!=((vt0.c0, vt0.c1, vt0.c1))))), (((vt1.c0 IN (vt1.c0)))==(vt1.c0 COLLATE NOCASE)), COUNT(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END) OVER () FROM vt0;SELECT ((vt1.c0 IN ()) IN ()) FROM vt0, vt1 WHERE ((((CASE 0.4594093362465921  WHEN '{O' THEN NULL ELSE '1488488313' END, CASE WHEN NULL THEN 0Xffffffff82c1fcdc WHEN x'' THEN NULL WHEN NULL THEN 1392506311 ELSE x'' END, ((((((((1.713145534E9)AND(x'')))AND('1377964747')))OR('A7so낦FD,')))OR(0.3527829879235217))))>=((CAST(-4.00976799E8 AS REAL), x'' COLLATE BINARY, ((x'd778') IS TRUE))))) ORDER BY (~ ('0.0812068281915097')) DESC; -- 0ms;
SELECT UNLIKELY(DISTINCT ((vt1.c0)IS NOT(vt0.c0))) FROM vt1, vt0 WHERE (SUBSTR(((x'33bc')-('')), CAST(1298118655 AS BLOB))); -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS BLOB)))=((SQLITE_COMPILEOPTION_USED(vt0.c2)))) FROM vt0 WHERE ((- (((((x'2afa')OR(0.6011885563827691)))AND(x'b082'))))) GROUP BY (NOT ((NOT (vt0.c1)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c1 COLLATE BINARY ELSE ((NULL)/(vt0.c1)) END FROM vt1 WHERE ((('1076423614' COLLATE NOCASE) NOT BETWEEN (((x'205d')IS(NULL))) AND ((NULL IN (NULL)))));SELECT ((NULL) NOT NULL) FROM vt1 WHERE (CASE (x'' IN (x''))  WHEN 0xffffffff80463415 COLLATE RTRIM THEN x'' COLLATE NOCASE WHEN ((NULL)IS NOT(x'')) THEN CAST('2100678158' AS INTEGER) WHEN (('-1633997733') ISNULL) THEN ((NULL)AND(NULL)) ELSE CHAR(0x6b6205ed) END); -- 0ms;
SELECT DISTINCT vt1.c0, ROW_NUMBER() OVER (), CAST(vt0.c0 AS REAL) FROM vt1 LIMIT -2123873253 OFFSET 1814474308;SELECT DISTINCT COUNT((~ (vt0.c2))) FROM vt1 WHERE (((('-920572507')) NOT BETWEEN (((+ (0.613597083777103)))) AND ((0.3575184283174436 COLLATE RTRIM))));SELECT ((CAST(vt0.c1 AS NUMERIC))<<((NOT (vt1.c0)))), vt0.c0, CASE 0xffffffffb31dae78  WHEN vt0.c0 THEN vt0.c1 COLLATE BINARY WHEN CASE WHEN 0.33981584836572687 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 END THEN vt0.c0 COLLATE BINARY WHEN (~ (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (~ (vt0.c2)) END FROM vt1 WHERE ((((-1.328606811E9 IN ())) NOTNULL));SELECT ALL (vt1.c0 COLLATE NOCASE IN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))) FROM vt0 WHERE (((((x'bbf0')LIKE('.<dg'))) NOT BETWEEN (0.14191656307904288 COLLATE NOCASE) AND ((((NULL)) BETWEEN (('-209696002')) AND ((0X42fb9006))))));SELECT ALL 'LoxL묵2i' FROM vt0, vt1 WHERE ('-1139656460') ORDER BY CAST(vt0.c1 COLLATE BINARY AS INTEGER)  NULLS FIRST, (((vt0.c1))=((vt0.c2))) ASC, CAST(0.17473927572620562 AS REAL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c0) NOTNULL) COLLATE BINARY) FROM vt0, vt1 WHERE (x'') ORDER BY (((vt0.c0)IS(vt0.c0)) IN ())  NULLS FIRST; -- 0ms;
SELECT RTRIM(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c2))), NULL, TOTAL(NULL) OVER () FROM vt0;SELECT DISTINCT (((vt1.c0, vt0.c1, vt1.c0, vt0.c2, vt0.c2)) NOT BETWEEN (((vt1.c0 IN (vt0.c2, vt0.c2)), CAST(vt0.c2 AS NUMERIC), ((0.9074179856932237)+(vt0.c0)), ((vt1.c0) NOTNULL), (vt0.c0 IN ()))) AND ((vt0.c1 COLLATE NOCASE, CASE WHEN '0.26448478797451225' THEN vt1.c0 END, vt0.c0, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END))), CASE CAST(vt0.c1 AS TEXT)  WHEN 0.08854205295767625 THEN COUNT(vt0.c2) WHEN (vt1.c0 IN (vt0.c1)) THEN (- (vt0.c1)) WHEN (+ (vt0.c1)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END, (vt1.c0 IN ()), (- ((vt1.c0 IN (vt0.c1, vt0.c2)))), vt0.c0 FROM vt0, vt1 WHERE (((((0.8058499203626658) NOTNULL))IS NOT(CASE '899927914'  WHEN NULL THEN '-568017170' ELSE 'Xhz3' END))) GROUP BY CASE CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END  WHEN CAST(vt0.c2 AS NUMERIC) THEN (((vt0.c0, vt0.c1, vt1.c0, vt0.c0, vt0.c0))<>((vt1.c0, vt0.c2, vt0.c2, vt1.c0, vt1.c0))) ELSE TRIM(DISTINCT vt0.c0, vt0.c2) END HAVING vt0.c1; -- 0ms;
SELECT ALL CASE UNLIKELY(vt0.c0)  WHEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END THEN (((vt0.c1))<=((vt0.c2))) WHEN ((vt1.c0)+(vt0.c0)) THEN ((((((((vt0.c2)OR(0.696960499798403)))AND('')))OR(vt0.c0)))OR('614685224')) WHEN CAST(vt1.c0 AS INTEGER) THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END FROM vt0, vt1 WHERE (0x70133d06) LIMIT -871406665; -- 0ms;
SELECT DISTINCT vt0.c2 COLLATE RTRIM FROM vt1 WHERE ((((('-55363710') BETWEEN (x'') AND (0.23972455151932148))) NOTNULL));SELECT vt1.c0, SUM(((vt0.c2)|(vt1.c0))) OVER (), ((((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((0xffffffff8fd6d6cb) IS TRUE)) AND (((((vt0.c0)OR(NULL)))AND(vt0.c2)))) FROM vt1;SELECT ((((((vt0.c1) NOTNULL))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)))OR((((vt0.c0))>((1738026324))))) FROM vt1 ORDER BY '1087233102';SELECT DISTINCT (CASE vt0.c0  WHEN NULL THEN '1494961315' ELSE vt0.c2 END IN ()) FROM vt1 WHERE ((+ (x'4b7c3857'))) ORDER BY (NOT (((vt1.c0)==('517622885')))), (((0.4973683089347315)>=(vt0.c2)) IN ()); -- 0ms;
SELECT (((((((vt1.c0))<=((vt1.c0))))AND(((vt0.c1) IS FALSE))))AND(vt1.c0)) FROM vt0 WHERE (((NULLIF('-1601976809', NULL))!=((('''0')||(-1089766761))))) ORDER BY vt0.c2  NULLS FIRST;SELECT DISTINCT ((((((vt1.c0, vt0.c1, NULL))>((vt0.c2, vt1.c0, vt0.c0)))))<=((SQLITE_COMPILEOPTION_GET(vt0.c1)))) FROM vt0 WHERE ((((x''))<((CASE WHEN 0.4451147245113183 THEN x'' END)))) ORDER BY ((((vt0.c2) NOTNULL))GLOB(x'')) DESC;SELECT DISTINCT AVG(((((vt1.c0)OR(vt1.c0)))OR(vt0.c1))) FROM vt0, vt1 WHERE (((0.5730471351676947) NOT NULL)) LIMIT -11472515 OFFSET 534257408; -- 0ms;
SELECT DISTINCT UPPER(((((0.4741453522177942)OR(vt0.c1)))OR(vt0.c1))) FROM vt0, vt1 ORDER BY ((((vt0.c1) ISNULL))%(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(vt0.c2))AND((vt1.c0 IN (vt0.c2)))))AND((vt0.c0 IN (vt0.c2)))), ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c2 END)AND((vt1.c0 IN (vt0.c0)))))OR(((vt0.c1) IS FALSE))), CAST(CAST(vt0.c2 AS TEXT) AS REAL) FROM vt0, vt1 ORDER BY ((((NULL)>=(vt1.c0)))%(CAST(vt0.c2 AS TEXT))), x'', (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2))))>((vt0.c1)))  NULLS LAST; -- 0ms;
SELECT ALL (((vt0.c2 IN ())) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((vt1.c0 IN ()))), '-2142882795', CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE FROM vt1 WHERE (((NULL COLLATE RTRIM) NOTNULL)) GROUP BY (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))OR((~ (NULL)))) HAVING ((((NULL COLLATE RTRIM)OR(((vt0.c1) ISNULL))))AND(((vt1.c0) NOT NULL)));SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt0.c2 END)GLOB(((vt0.c2) NOTNULL))), ((vt0.c1 COLLATE RTRIM)&(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END)), CAST(SUM(vt0.c0) AS INTEGER) FROM vt1, vt0; -- 1ms;
SELECT CAST(COALESCE(x'', vt0.c1, vt0.c2, vt0.c0) AS NUMERIC) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS REAL))OR(GROUP_CONCAT(vt0.c2))))OR((vt1.c0 IN ()))) FROM vt0, vt1 LIMIT 1593552334 OFFSET -1884106355; -- 0ms;
SELECT CAST('j?' AS REAL) FROM vt0, vt1 WHERE (((((x'3ece') IS FALSE))IS NOT(x''))) ORDER BY vt1.c0; -- 0ms;
SELECT DISTINCT (((((((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(0X42826944)))AND(0.378362461750987)) IN ()), CASE vt0.c1 COLLATE NOCASE  WHEN vt0.c1 COLLATE NOCASE THEN (vt0.c2 IN ()) ELSE vt1.c0 COLLATE NOCASE END, MIN(vt0.c2) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c2)) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c0 END)) FROM vt0, vt1 WHERE (LOWER(DISTINCT ABS(-1899406531))); -- 0ms;
SELECT ALL (NOT (vt0.c2)), (((((((((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))OR(CASE vt1.c0  WHEN vt0.c0 THEN -2111099062 ELSE vt0.c1 END)))OR(((vt0.c2) NOT NULL))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt1.c0)))))AND((vt0.c2 IN ()))), RTRIM(((vt0.c0)IS(vt0.c2))) FROM vt1 ORDER BY ((vt0.c0) BETWEEN (((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0))) AND (vt0.c2 COLLATE BINARY)) DESC;SELECT (- (TYPEOF(0.8317981577101335))) FROM vt0; -- 0ms;
SELECT vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)IS(SUM(vt0.c0))) FROM vt1, vt0 WHERE (CAST(((('-653674185')) BETWEEN ((0Xffffffffd8804e29)) AND ((x''))) AS INTEGER)); -- 0ms;
SELECT (((+ (vt1.c0)))IS NOT(((vt1.c0) NOT BETWEEN ('-55363710') AND (vt0.c1)))) FROM vt1;SELECT DISTINCT NTH_VALUE((NOT (((vt1.c0)<(vt1.c0)))), CASE WHEN vt1.c0 THEN ((vt1.c0)OR(vt1.c0)) ELSE (- ('1951484841')) END) OVER () FROM vt1 WHERE (CAST((('')>=(NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE NOCASE)*(x'')), ((((vt1.c0)%(vt0.c0)))!=((vt0.c1 IN ()))), ((((vt0.c2)==(vt1.c0)))GLOB((- (vt1.c0)))) FROM vt1;SELECT DISTINCT (((~ (vt1.c0))) NOT NULL) FROM vt0 GROUP BY CASE WHEN ((574328364) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN (((vt0.c1, vt1.c0, vt0.c1))==((vt0.c1, vt1.c0, vt0.c0))) ELSE ((vt0.c0)<(NULL)) END HAVING ((vt1.c0 IN ()) IN ());SELECT ALL (~ (CASE vt0.c1  WHEN vt0.c1 THEN x'' ELSE vt0.c0 END)), vt1.c0, UNLIKELY(DISTINCT ((vt0.c2)+(vt0.c2))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((x'')==(x'')) FROM vt1, vt0 WHERE ((((((NULL IN (-1086247802, 0.33018719644567907)))AND((+ (NULL)))))OR(CASE WHEN NULL THEN NULL WHEN 0.4998658808608437 THEN 0.5505044544260442 WHEN x'2238' THEN '-871406665' WHEN 0.552072112932349 THEN 'Xf\r~뿙O|]' WHEN 1.23526307E9 THEN '1)' END))) LIMIT 2102260064 OFFSET 1637477382; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt1;SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((('1550788151') ISNULL) IN (((0.5598711501922388) BETWEEN (NULL) AND (0.03336145023642467)), ((0Xfffffffff0fde089)<<(-912553810))))); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE (TRIM(DISTINCT ('5x飨4bQMYw' IN (x'', 0.8009823169223335)), CAST('-1557224491' AS REAL))); -- 0ms;
SELECT ALL ((((MAX(vt0.c1))OR(COUNT(*))))OR((vt1.c0 IN (vt0.c0)))) FROM vt1, vt0 WHERE (0.9639965244134951); -- 0ms;
SELECT DISTINCT MIN(('' IN ())) FROM vt0 WHERE ((+ ((NULL IN ())))); -- 0ms;
SELECT ALL COUNT(COUNT(*)) FROM vt1, vt0;SELECT DISTINCT (~ (((vt0.c0)+(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c1 IN (vt0.c2)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) END, (((vt0.c1) NOTNULL) IN ()), SQLITE_COMPILEOPTION_GET(vt0.c0) COLLATE RTRIM FROM vt0, vt1 WHERE (QUOTE((((x'')) NOT BETWEEN ((1.656950452E9)) AND ((NULL))))); -- 0ms;
SELECT ALL ((ABS(DISTINCT vt0.c1)) NOTNULL), GROUP_CONCAT(((vt1.c0)+(vt1.c0))), TRIM((((vt0.c2))<>((vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END) FROM vt1, vt0 WHERE ((((x'')) BETWEEN ((((NULL)>=(x'7cdb25f5')))) AND ((CASE WHEN NULL THEN 0.6186354874645552 END)))) LIMIT 1167315987 OFFSET 210375249; -- 0ms;
SELECT CHANGES() FROM vt1; -- 0ms;
SELECT CASE WHEN (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt1.c0, '0.22592750210545953', vt1.c0))) THEN vt0.c2 END FROM vt0 WHERE (((NULL COLLATE BINARY) IS FALSE));SELECT DISTINCT ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c0 END) BETWEEN (vt0.c1 COLLATE BINARY) AND ((- (vt0.c0)))) FROM vt1 WHERE (((((NULL)&('N')))OR(((0.26448478797451225)<<(0x7aad01e9)))));SELECT IFNULL(DISTINCT vt0.c0, CAST(vt0.c0 AS TEXT)), CASE WHEN ((vt1.c0) NOT NULL) THEN ((vt0.c2)<<(vt0.c1)) END, (((((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<=((((vt0.c2) BETWEEN (vt0.c2) AND ('1460674815'))))) FROM vt1 WHERE (((((((((((((x'' COLLATE NOCASE)OR(NULL COLLATE BINARY)))OR('')))AND((('') ISNULL))))AND(CAST(0.3272647045788122 AS NUMERIC))))OR((((x'', 0.3195393083317918, 'b')) NOT BETWEEN ((x'', -1.089766761E9, '')) AND ((0Xffffffffb4801399, x'', 0.700154977537483))))))OR(((NULL) NOT NULL))));SELECT ALL NULLIF(((((vt0.c1)OR(vt0.c2)))AND(vt1.c0)), ((vt0.c0)|(vt0.c0))) FROM vt0, vt1 WHERE (((((((((((((0.48527188166006974)OR(770412425)))OR(x'ddff')))OR(IFNULL('-614165529', x'81dd'))))OR(((0xffffffff9d3174a2)>=(x'')))))OR((('-1334955907')%(0.05517896524648869)))))AND((- (NULL))))); -- 0ms;
SELECT DISTINCT ((((0X23024287) IS FALSE)) NOT NULL), (NOT (vt0.c0)), ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)<>(vt0.c2)) FROM vt0 WHERE (((((((((((((x'baa3')OR('0.7313018423493122')))AND('0.09929329188637159')))OR(NULL)))AND(((NULL) BETWEEN (NULL) AND (0.4429029301422285)))))OR(((0.4711322397188601) BETWEEN (x'') AND (NULL)))))AND(NULL))) GROUP BY (+ ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, NULL)))));SELECT ALL ((json_quote(vt0.c2))|(CAST(vt0.c0 AS REAL))), QUOTE(((vt1.c0) IS FALSE)), (NOT (vt1.c0)) FROM vt0, vt1; -- 0ms;
SELECT NTILE(SQLITE_COMPILEOPTION_USED((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c2 COLLATE RTRIM)OR(CAST(vt0.c0 AS REAL))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))))))AND(vt0.c2)))AND(((NULL) BETWEEN (vt0.c0) AND (NULL)))), LAG(vt0.c1, CAST(vt1.c0 AS INTEGER) COLLATE BINARY, ((vt0.c2)<=(((vt1.c0)*(524308049))))) OVER (), (('-57084862')>>(0Xe57c857 COLLATE NOCASE)), ABS(((vt0.c0)!=(vt1.c0))), COUNT(((vt0.c1) BETWEEN (0.014693738402094425) AND ('-175068046'))) FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT (((('1915826856')OR(-1109825616)))OR('552906001')))); -- 0ms;
SELECT ALL (CAST(vt0.c2 AS NUMERIC) IN (((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))) FROM vt1, vt0 WHERE (((((x'0e7c')OR(0.7620127766708495))) NOT BETWEEN ((+ (0X27a7223f))) AND (((x'') NOT BETWEEN ('	96') AND (x'7e79'))))) GROUP BY (+ ((+ (vt0.c1)))) HAVING CASE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1))  WHEN ((vt0.c2)==(vt0.c0)) THEN ((vt1.c0)*(vt0.c2)) WHEN (+ (vt0.c0)) THEN IFNULL(DISTINCT vt0.c2, vt1.c0) WHEN (vt1.c0 IN ()) THEN vt0.c1 ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END; -- 0ms;
SELECT CAST(((vt0.c0) ISNULL) AS REAL) FROM vt1;SELECT DISTINCT (~ ((vt0.c0 IN ()))), ((((vt0.c2 IN ())))==((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c2))))), (((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((vt0.c2 COLLATE RTRIM))) FROM vt0 WHERE ((('+lgo1j') NOT BETWEEN (((0.2172163725835875) NOT BETWEEN (NULL) AND (NULL))) AND (((0.24370276203537622) NOT BETWEEN (0X37a83d4c) AND (x''))))) GROUP BY (((vt0.c0)) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt0.c2 END)) AND (((vt0.c1 IN (vt0.c1, vt1.c0))))) HAVING CASE WHEN ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))AND(vt1.c0)) THEN vt0.c2 WHEN ((((((((NULL)OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)) THEN TRIM(vt1.c0) WHEN ((((vt1.c0)OR(vt0.c2)))OR(0.3298146514904775)) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE RTRIM END;SELECT ALL ((CAST(vt0.c2 AS INTEGER)) BETWEEN (((((vt0.c0)OR(vt0.c2)))OR(vt0.c0))) AND (vt0.c2)) FROM vt1, vt0 LIMIT 2131987876 OFFSET -1807344836; -- 0ms;
SELECT '^wXrP' FROM vt0; -- 1ms;
SELECT DISTINCT CAST((vt0.c2 IN ()) AS INTEGER), CASE ((vt0.c2)+(vt0.c2))  WHEN CAST(vt0.c2 AS NUMERIC) THEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END, CAST(GROUP_CONCAT(vt1.c0) AS TEXT) FROM vt1;SELECT DISTINCT GROUP_CONCAT((((vt1.c0, vt1.c0, vt1.c0))==((vt0.c1, vt0.c1, vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.783534749342475))) NOT NULL) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((- (vt0.c0)) IN ()) FROM vt0, vt1; -- 1ms;
SELECT 0.6648589529025639 FROM vt1 WHERE (((CAST(0.523507228831332 AS BLOB)) BETWEEN (((0.9312509449771251)<=(-1.729489332E9))) AND ('++' COLLATE NOCASE))); -- 0ms;
SELECT '1069335585', AVG(((vt1.c0) IS FALSE)), (((vt0.c1)) BETWEEN (('1813689293')) AND (((vt0.c1 IN ())))), CASE WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c2)||(vt0.c2)) WHEN ((vt1.c0) NOT NULL) THEN (vt0.c2 IN ()) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (vt0.c1 IN ()) ELSE (- (vt0.c1)) END, ((((CAST(x'' AS NUMERIC))OR(((vt1.c0)/('1069568981')))))AND(((vt0.c0) IS FALSE))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT CASE WHEN ((vt0.c2) IS FALSE) THEN ((vt0.c2) NOTNULL) ELSE vt0.c1 END FROM vt0, vt1 WHERE ((((NULL)) NOT BETWEEN ((((0.3324969207140617)GLOB(0.6506219857800563)))) AND ((LIKELY(x''))))); -- 0ms;
SELECT CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) AS REAL), MIN((+ (vt0.c1)) COLLATE RTRIM), TOTAL(((vt0.c2)>>(vt0.c0))), vt1.c0, (+ (NULLIF(DISTINCT vt1.c0, vt1.c0))) FROM vt0 WHERE ((((LIKELY(DISTINCT NULL)))<>((x'2e83' COLLATE RTRIM))));SELECT DISTINCT CAST(((((vt1.c0)OR(x'')))AND(vt0.c2)) AS TEXT) FROM vt1;SELECT ALL ((((vt0.c0)OR(vt0.c1)))OR('350064093')) COLLATE NOCASE FROM vt0, vt1 WHERE (((CAST(-1496125758 AS REAL)) IS TRUE)) GROUP BY (((((vt0.c0)|(vt0.c2))))>=(((vt0.c2 IN ())))); -- 0ms;
SELECT DISTINCT 0.0744078288327269 FROM vt1, vt0 UNION ALL SELECT DISTINCT ((((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(vt1.c0)))OR(vt0.c2))) NOT BETWEEN (vt0.c0) AND (vt0.c2)) FROM vt1, vt0 WHERE (((((x'6dfd')<=(0xfffffffff91bcb66)))>(((0.3718880492273755)<<(1.020435438E9))))) ORDER BY (+ (((vt1.c0) NOTNULL))) ASC;SELECT DISTINCT CASE ((vt1.c0)AND(vt0.c2))  WHEN MAX(vt0.c2) THEN ((vt0.c0)<=(vt0.c0)) ELSE '|ᣩ్O' END FROM vt0 WHERE ((((-6.04766278E8)) NOT BETWEEN ((CAST('' AS REAL))) AND (((((-138593680))>(('EW#D[1OJ|')))))));SELECT DISTINCT '-820188146' FROM vt1, vt0; -- 0ms;
SELECT ((((vt0.c1)/(vt1.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((NOT (x'')))), (((vt1.c0 IN ()))IS((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))), SUM(((vt1.c0)IS NOT(vt0.c1))) FROM vt1;SELECT ALL ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c2 COLLATE RTRIM)) FROM vt1 WHERE (0.21588661956702682);SELECT DISTINCT ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) NOT NULL), CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS INTEGER), TRIM(DISTINCT COUNT(*), ((vt0.c0)IS NOT(vt0.c2))) FROM vt0 WHERE ((((('dI')LIKE(0.5011265419444797))) NOT NULL)); -- 0ms;
SELECT COUNT(*) FROM vt1, vt0; -- 0ms;
SELECT '' FROM vt1, vt0; -- 0ms;
SELECT ALL ((('-745474083')) BETWEEN (((NOT (vt0.c0)))) AND (((vt1.c0 IN ())))) FROM vt0, vt1; -- 0ms;
SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (x'7de6')), GROUP_CONCAT(vt1.c0), (((vt1.c0))>((vt0.c1)))))>=((vt1.c0 COLLATE RTRIM, ((vt0.c0)||(1686382425)), vt0.c0 COLLATE NOCASE))) FROM vt0 WHERE (CAST(('' IN ()) AS BLOB));SELECT ALL CAST(0.39037824339175853 AS INTEGER) FROM vt0, vt1 WHERE (((('-57084862' IN (NULL))) NOT NULL)) LIMIT -1871476538 OFFSET -1597635923; -- 0ms;
SELECT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT -1.289900424E9, ((((vt1.c0)OR((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c2))))))AND(((vt0.c0) IS TRUE))), ((((((vt1.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c0)))))<=(((vt0.c0 IN ())))) FROM vt1;SELECT DISTINCT ((((vt1.c0)%(0.6017172885322027)))|(((vt0.c1)AND(vt0.c2)))), (NOT (CASE WHEN vt1.c0 THEN vt1.c0 END)), ((((((vt0.c0)AND(0.21571201687430963)))OR(vt1.c0))) NOTNULL), json_remove(((vt0.c2)+(vt0.c1)), (((('-1055753199')AND(vt1.c0)))OR(vt1.c0))), ((((0.700154977537483)&(vt0.c2)))&((+ (vt0.c2)))) FROM vt0 WHERE (IFNULL(DISTINCT ((0.4202433339228233)AND(0.36348318204714036)), CAST(NULL AS INTEGER)));SELECT DISTINCT ((((('-1464940523' IN ()))AND((~ (vt0.c1)))))OR(((vt0.c1) IS TRUE))), (((((vt0.c0 IN (vt0.c0, NULL)))OR(TRIM(vt0.c0))))OR(((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))), ((((((vt1.c0)LIKE(vt0.c0)))OR(GROUP_CONCAT(vt0.c2))))AND(vt0.c0)) FROM vt0 WHERE ((((((('')OR(0.2390615252173649)))OR(NULL))) NOT BETWEEN (((x'95ea')GLOB(-6.5626626E7))) AND (((x'')<<(NULL))))) GROUP BY (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))) HAVING x'3844';SELECT DISTINCT GROUP_CONCAT(json(vt0.c1)) OVER () FROM vt0, vt1; -- 0ms;
SELECT ALL CASE ((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))  WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) THEN NULL END FROM vt0;SELECT DISTINCT LEAD(((((+ (vt0.c2))))>=(((~ (vt0.c0))))), vt0.c1, (((~ (vt0.c0)))>=((+ (vt0.c0))))) OVER (), (((vt0.c1)+(vt0.c1)) IN ((((vt1.c0, vt0.c2, vt0.c0)) BETWEEN (('x\r', vt1.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c2))))), CASE WHEN MAX(vt1.c0) THEN TYPEOF(DISTINCT vt0.c1) END FROM vt0 WHERE (((IFNULL(DISTINCT 0xffffffff966eec33, NULL)) NOT BETWEEN ((((0.7815212848751312)) NOT BETWEEN ((NULL)) AND ((x'96852b2d')))) AND (((0x7ef3a7a6) NOT BETWEEN (0.23381150769668857) AND ('\ro[z6{'))))) GROUP BY (((vt1.c0 IN ())) IS FALSE) HAVING ((GROUP_CONCAT(vt0.c2))LIKE(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END));SELECT DISTINCT (~ (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))) FROM vt1;SELECT vt0.c0, RANK() OVER (), (NOT ((((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c2))>=((vt0.c2, vt1.c0, vt0.c1, vt1.c0, vt0.c0))))) FROM vt1;SELECT 0.5696818698337868 FROM vt1, vt0 WHERE (((((CAST(x'83d8' AS TEXT))OR(CASE WHEN x'' THEN x'' END)))OR((('2131987876')AND('q]hg'))))); -- 0ms;
SELECT MIN(((vt0.c2) ISNULL) COLLATE BINARY), ((AVG(vt0.c2)) NOTNULL), ((((((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))<(((vt0.c2)GLOB(vt0.c2)))) FROM vt1;SELECT DISTINCT '-2137302413' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1)>=(vt0.c1))))<=((CASE vt1.c0  WHEN vt0.c2 THEN vt1.c0 END))) FROM vt1;SELECT ALL MIN((vt0.c0 IN ())) FROM vt1 WHERE ((((x''))<>((x''))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT TRIM(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 END, ((vt0.c1)==('1855230861'))), SUM(STRFTIME(vt1.c0, vt0.c2, vt0.c1, vt0.c2, vt1.c0, vt1.c0, vt0.c1)) OVER (), (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT NULL) FROM vt1, vt0 ORDER BY 0.8983537233071381 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN (- (vt0.c1)) THEN vt1.c0 COLLATE NOCASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0)OR(vt0.c0)) WHEN ((vt1.c0)AND(vt0.c1)) THEN NULL WHEN (vt0.c0 IN (vt0.c1, vt0.c1)) THEN (((vt0.c0, vt0.c0, vt0.c2))>((x'', vt1.c0, vt1.c0))) WHEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c0)) THEN NULL END FROM vt1 WHERE (((NULL COLLATE NOCASE) IS FALSE));SELECT DISTINCT (vt0.c0 IN ()) COLLATE BINARY, ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE x'' END)), ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c2)))-(vt1.c0)) FROM vt1, vt0 WHERE ((((('0.9496603070445109')OR(((NULL) NOT BETWEEN (x'') AND (0.05927065557608646)))))OR((0x26f54e5d IN ())))); -- 1ms;
SELECT ALL ((vt0.c0)||(vt0.c1)) COLLATE RTRIM COLLATE BINARY FROM vt0 WHERE (UNLIKELY(DISTINCT DATETIME(x'', NULL, '0.7606834130404323'))); -- 0ms;
SELECT DISTINCT (CAST(vt0.c1 AS INTEGER) IN ()) FROM vt1 GROUP BY ((((((((vt0.c0)OR(CAST(0.5037782310394433 AS TEXT))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c2 END)))AND(vt1.c0 COLLATE NOCASE));SELECT 'Jn.M 6x' FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1 WHERE ((~ ((+ (x'8b0f'))))) GROUP BY CAST(((((vt0.c2)OR(vt0.c2)))AND(vt1.c0)) AS BLOB);SELECT ALL CAST((NOT (vt0.c0)) AS TEXT) FROM vt1, vt0 GROUP BY NULLIF(((vt0.c1)=(vt1.c0)), ((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))), (~ (vt0.c2)) COLLATE NOCASE, (((vt0.c2 IN ()))<=(((vt0.c1)IS NOT(vt0.c2)))); -- 0ms;
SELECT (COUNT(vt0.c1) IN ((NOT (vt0.c2)))) FROM vt0, vt1 GROUP BY CAST(CASE 0.8641278406263143  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c0 WHEN '912263289' THEN vt0.c2 WHEN NULL THEN '-115618970' WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END AS REAL) HAVING (('1589037014' COLLATE NOCASE) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))) AND (STRFTIME(vt0.c1, vt0.c1, vt0.c1))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c2)>=(vt0.c0)) THEN (NOT (0Xffffffffa7bbacd9)) END FROM vt0 WHERE (((((-1289900424)IS(NULL)))%((('.<DG') NOT BETWEEN (0.5883800190932695) AND (0.2300045833170693))))); -- 0ms;
SELECT DISTINCT ((LIKE(vt0.c2, vt0.c1)) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c0 END) AND (vt0.c0)), ((((((((CAST(vt0.c1 AS BLOB))AND(((((vt0.c0)OR('')))AND(vt1.c0)))))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))OR(CAST(vt0.c2 AS TEXT))))AND(((((vt0.c0)OR(vt0.c2)))OR(vt1.c0)))), vt0.c0 FROM vt0 WHERE ((+ (CAST(0.5928438175249405 AS NUMERIC))));SELECT DISTINCT ((((vt0.c2)OR(x'eb0e')))AND(x'')) FROM vt1;SELECT CASE ((vt1.c0)=(vt0.c0))  WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 ELSE CAST(vt0.c0 AS REAL) END, vt1.c0 COLLATE RTRIM, IFNULL(((((((((vt0.c1)OR(vt0.c2)))OR(vt1.c0)))AND(vt0.c2)))OR(vt0.c2)), vt0.c0 COLLATE NOCASE) FROM vt0 GROUP BY (((- (vt1.c0))) NOT BETWEEN ((((('1940374980')AND(vt0.c1)))AND(''))) AND (((vt0.c1)AND(vt0.c0)))), ((vt1.c0)>>(SQLITE_VERSION())), ((((vt1.c0)/(vt1.c0))) IS FALSE) HAVING ((TOTAL(vt1.c0))|(SUM(vt0.c0)));SELECT DISTINCT GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END), ((((vt0.c1))<=((vt1.c0))) IN ()), IFNULL(COUNT(vt1.c0), vt1.c0) FROM vt1 WHERE (CASE ((x'72e7')*(NULL))  WHEN ((NULL) NOTNULL) THEN CASE NULL  WHEN NULL THEN NULL WHEN NULL THEN NULL WHEN '' THEN x'f8b3' END ELSE (x'' IN (NULL)) END);SELECT TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END COLLATE NOCASE) OVER () FROM vt1 WHERE (((CAST(NULL AS REAL))*((((1862081511, 0.7213347058678148, NULL))<(('666978298', '-303715663', '170295552')))))) LIMIT -1723932009;SELECT CAST(NULL AS NUMERIC) COLLATE RTRIM FROM vt0, vt1 WHERE (NULL); -- 0ms;
SELECT ALL ((((('>㤕'))>=((vt1.c0)))) BETWEEN (((vt0.c2) IS FALSE)) AND (vt0.c1)) FROM vt1, vt0 WHERE ((('a.')%(x'2e98')) COLLATE BINARY); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))), ((((vt0.c0) IS TRUE))/(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))), (((('P窗e]')<(vt1.c0)))>((NULL IN ()))) FROM vt0, vt1 WHERE ((CAST(NULL AS NUMERIC) IN (json_array_length(x'10ba'))));SELECT ((((vt0.c1) NOTNULL)) ISNULL) FROM vt1, vt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN ((0X292454f1 IN ())) AND (((0.6868763425162254)>=('H\'))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM vt1, vt0 WHERE (((((NULL)AND(x'')))OR(NULL)) COLLATE NOCASE) GROUP BY (((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(1.686382425E9)) IN (vt1.c0 COLLATE NOCASE, (NOT (vt0.c2)))) HAVING MIN(0.7029947632605023); -- 0ms;
SELECT DISTINCT TIME(((vt0.c0) ISNULL), ((vt1.c0) ISNULL), (vt0.c1 IN ('Ui')), CASE WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))) FROM vt0;SELECT ((x'') NOTNULL) FROM vt1, vt0; -- 0ms;
SELECT NULLIF(vt0.c2, vt0.c1) COLLATE BINARY FROM vt1;SELECT DISTINCT COUNT(vt1.c0) OVER () FROM vt1, vt0 WHERE (CASE 0.7348831095748372  WHEN x'7cec' THEN NULL WHEN x'' THEN '-55363710' WHEN NULL THEN '-1746653587' END COLLATE BINARY); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- (((((((((x'')OR(0.5544490537145178)))AND('')))OR(x'')))AND('r'))))); -- 0ms;
SELECT ALL CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))  WHEN (- (vt0.c0)) THEN 0.5971318096127862 ELSE vt0.c0 END, CASE WHEN ((vt0.c2) IS TRUE) THEN ((vt0.c1)LIKE(vt1.c0)) WHEN vt0.c1 THEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)) WHEN ((0.3480107336026951) NOT NULL) THEN vt1.c0 COLLATE NOCASE END, vt0.c2 FROM vt1 WHERE (((0.9280125339374394) IS TRUE)) ORDER BY ((x'') BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE NOCASE  NULLS LAST;SELECT ALL ((((vt0.c0) ISNULL))>>(vt0.c1 COLLATE NOCASE)) FROM vt0 WHERE (CASE ((-1.008330519E9)*(x''))  WHEN (NOT ('mr[<n+	\l')) THEN (NOT ('834710940')) ELSE (('yw') IS FALSE) END); -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c1 WHEN CAST(vt0.c2 AS REAL) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c2 WHEN x'' THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt1.c0 END THEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END ELSE (~ (vt0.c2)) END, COALESCE(DISTINCT LOWER(vt0.c1), (~ (vt1.c0))) FROM vt0, vt1 WHERE (CAST(((NULL) ISNULL) AS TEXT)); -- 0ms;
SELECT vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c1)))GLOB(AVG(vt0.c0))) FROM vt0, vt1 WHERE (((((((((((x'')AND(0.993501323946387)))OR(x'acfd')))OR(NULL)))OR(-1.532550878E9)))<(517622885))); -- 0ms;
SELECT DISTINCT AVG((~ (1.567878358E9))) FROM vt1 LIMIT 170295552; -- 0ms;
SELECT DISTINCT COUNT(*), CUME_DIST() OVER (), -1601976809 FROM vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ()))>(0.44940002109225086)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((NULL)+(vt0.c2))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c2 COLLATE RTRIM  WHEN MAX(vt0.c2) THEN CASE WHEN vt0.c0 THEN x'' END WHEN NULL THEN ((vt0.c2)LIKE(vt0.c1)) WHEN vt1.c0 COLLATE RTRIM THEN MAX(vt1.c0) END FROM vt1, vt0 WHERE (CASE CASE WHEN x'3906' THEN x'' WHEN 'Y?Tsg' THEN 'Hs' WHEN 0.8037216537978414 THEN -1304148406 ELSE '1377964747' END  WHEN '闾U' THEN '' COLLATE BINARY END); -- 0ms;
SELECT ALL TOTAL((((vt0.c0))<>((vt1.c0)))) OVER () FROM vt1 WHERE (CAST(0x2d4e641d COLLATE RTRIM AS REAL));SELECT AVG(((vt1.c0) IS FALSE)) OVER () FROM vt1, vt0 LIMIT -2142882795 OFFSET -55363710; -- 0ms;
SELECT DISTINCT ((((((((-2074240013)AND(vt0.c1)))OR(((((NULL)AND(vt1.c0)))AND(vt0.c2)))))OR(((vt0.c2) IS FALSE))))AND(((0x6d5492a9) BETWEEN (vt0.c1) AND (vt0.c2)))), ((((vt1.c0)>=(vt0.c1))) IS FALSE), ((((((vt1.c0)AND(vt0.c1)))AND(vt0.c2)))<<(((((vt0.c1)AND(vt0.c2)))AND(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT LAG(vt0.c1, ((((((((((vt1.c0)OR(vt0.c1)))AND(x'2c71')))AND(vt0.c1)))AND(vt1.c0))) IS TRUE), ((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))+(vt0.c0))) OVER () FROM vt0, vt1 WHERE (CASE CASE x''  WHEN NULL THEN NULL END  WHEN '3~' COLLATE NOCASE THEN LIKELY(DISTINCT 0Xfffffffffc9b841e) WHEN CASE ''  WHEN 1713145534 THEN x'' END THEN NULL COLLATE NOCASE WHEN CAST('-866987559' AS INTEGER) THEN (NOT (x'')) END) LIMIT -2097644084; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT COUNT(*)) FROM vt1; -- 0ms;
SELECT ALL ((vt0.c0)IS(((vt0.c1)GLOB(vt0.c2)))) FROM vt0, vt1 GROUP BY CASE WHEN 0.9738464734573914 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN '1763220256' END COLLATE RTRIM, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt0.c1) AND ((NOT (vt0.c0)))), CASE WHEN vt0.c0 COLLATE NOCASE THEN (NOT (vt0.c2)) ELSE ((vt1.c0)<(vt0.c2)) END, ((CAST(vt0.c2 AS REAL))%(((('t7'))>=(('552906001'))))), ((((vt0.c1) BETWEEN (0X3456417d) AND (vt0.c0)))=('u? C7<')) ORDER BY (((CAST('' AS TEXT), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)), '-2061713569'))<>((vt0.c2, ((vt0.c1)IS NOT(vt0.c0)), TYPEOF(DISTINCT vt0.c1)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (x''))) BETWEEN (0.7033504912429032) AND (vt0.c1 COLLATE BINARY)) FROM vt1, vt0 ORDER BY (((vt0.c0))>(((((vt0.c0, vt1.c0, '-1')) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((vt0.c0, vt0.c2, vt1.c0))))))  NULLS FIRST; -- 0ms;
SELECT vt0.c2 FROM vt0; -- 0ms;
SELECT DISTINCT CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE NULL END  WHEN (('s4}Ga[!<i') BETWEEN (vt0.c2) AND (vt0.c1)) THEN (- (vt0.c1)) END FROM vt0, vt1; -- 0ms;
SELECT ((((vt0.c2) NOT NULL)) NOT BETWEEN (vt0.c2) AND (((vt0.c2)/(vt0.c1)))) FROM vt1 WHERE ((((((NULL)<(NULL))))>(((NOT (x'e3d9'))))));SELECT DISTINCT ((vt0.c2 COLLATE BINARY) NOT BETWEEN (((vt1.c0)||(vt1.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c0 END)), CASE WHEN ((vt0.c2)IS(vt1.c0)) THEN (vt0.c1 IN ()) ELSE (((vt0.c0))<>((vt0.c0))) END, (((((vt0.c1 IN ()))AND((((vt0.c1))!=((vt0.c2))))))OR(0.8714011448590316)) FROM vt0, vt1 WHERE ((((x'')) BETWEEN (((('H^|.)^')+(1.07687664E8)))) AND ((TRIM(DISTINCT '', '-2101216036'))))); -- 0ms;
SELECT DISTINCT ((NULL) NOTNULL), ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))<(((x'563f') BETWEEN (vt1.c0) AND (vt0.c2)))), CAST((vt0.c1 IN ()) AS TEXT) FROM vt1 WHERE (SQLITE_COMPILEOPTION_USED((('-56916962') NOT BETWEEN (NULL) AND (NULL))));SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2))) IS TRUE), vt1.c0, CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))AND(NULL)))AND(vt1.c0)) AS NUMERIC) FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((~ (vt0.c2))) AND ('''B'));SELECT SUM(((vt1.c0) NOTNULL)) OVER (), MAX(((((x'')AND(vt0.c0)))AND(vt0.c1))), ((CAST(vt0.c1 AS NUMERIC))AND((NOT (vt0.c1)))), SUM(vt0.c0), 'v1s?h' FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c1 END) AND (MAX(vt1.c0))) FROM vt1;SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c2)OR(vt0.c0)))OR('h8'))) OVER () FROM vt1, vt0; -- 0ms;
SELECT PERCENT_RANK() OVER (), ((vt0.c0) IS FALSE) COLLATE BINARY, TRIM(((vt0.c1) NOTNULL)) FROM vt0; -- 0ms;
SELECT AVG(((vt0.c1)&(vt0.c1))) OVER ( PARTITION BY (((vt0.c2)) BETWEEN (('-57084862')) AND ((1.488488313E9))), ((vt0.c0) IS FALSE) COLLATE NOCASE) FROM vt1, vt0; -- 0ms;
SELECT (((HEX(DISTINCT vt0.c0)))>=(((vt0.c1 IN ())))) FROM vt1;SELECT DISTINCT SUM(QUOTE(vt0.c1)) FROM vt0; -- 0ms;
SELECT (((((0.8488164016440454)OR(vt0.c0)))AND(vt0.c0)) IN ()), ((((0x5aac406b IN ()), rtreenode(vt0.c2, vt1.c0), ((-5.49860673E8) IS TRUE)))<=(((((vt0.c2))>((vt0.c2))), (+ (0Xffffffffb0cf11a5)), rtreenode(vt0.c2, vt0.c1)))), (((((vt1.c0))==((0.38740978147760974)))) NOT NULL) FROM vt0, vt1; -- 0ms;
SELECT ALL ((NULL)AND(((vt1.c0)|(vt0.c1)))), CAST(vt0.c1 COLLATE NOCASE AS REAL), 0.8441317305504777 FROM vt1, vt0 WHERE ((('-55363710')||(',')) COLLATE NOCASE); -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT CAST(vt1.c0 AS INTEGER), 0.39963761507596474), CAST('-821276656' COLLATE NOCASE AS INTEGER), (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 END IN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END, (vt0.c0 IN ()))) FROM vt0;SELECT DISTINCT CASE ((vt0.c1)<<(vt0.c0))  WHEN json(x'') THEN ((vt0.c2) ISNULL) WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) WHEN ((((vt0.c0)AND(NULL)))AND(vt0.c0)) THEN -1089766761 COLLATE RTRIM WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c2 AS REAL) WHEN (NOT (vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) END, (NOT ((NOT (vt1.c0)))), ((vt0.c0)%(CAST(vt0.c0 AS NUMERIC))), (((vt0.c0 IN (vt1.c0)))<<(((vt0.c2) NOT NULL))), ((((vt0.c0) NOTNULL)) ISNULL) FROM vt1 ORDER BY ((+ (vt0.c2)) IN (CAST(vt1.c0 AS NUMERIC)))  NULLS LAST;SELECT ALL ((((0.2867729413335177)OR(GROUP_CONCAT(vt0.c0))))AND((((vt0.c2))>=((vt1.c0))))) FROM vt1 WHERE (CAST((('1311072482')>>(x'')) AS REAL));SELECT DISTINCT ((((MIN(vt1.c0))OR(TRIM(DISTINCT vt1.c0))))OR(vt0.c1)), (((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND (('帚o')))) NOT BETWEEN (MAX(vt0.c1)) AND (UNLIKELY(vt0.c2))), CASE ('0≱f4p' IN ())  WHEN CAST(vt1.c0 AS REAL) THEN (vt0.c1 IN ()) END FROM vt0, vt1; -- 0ms;
SELECT FIRST_VALUE(((((((x'')AND(0.48653076923813765)))AND(vt1.c0))) NOT NULL)) OVER () FROM vt1 WHERE (0.9131674398653361) GROUP BY 0.2515136960755465; -- 1ms;
SELECT ALL ((((CASE vt0.c2  WHEN vt1.c0 THEN vt0.c2 END)OR(((vt0.c0)OR(x'aa5c')))))AND(vt1.c0 COLLATE NOCASE)) FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT CAST((~ (vt1.c0)) AS INTEGER) FROM vt0, vt1 WHERE (((((((NULL)AND(NULL)))AND(x'ac80'))) IS TRUE)); -- 0ms;
SELECT DISTINCT NULL COLLATE BINARY, GROUP_CONCAT(((((vt0.c2)AND(vt1.c0)))AND(vt0.c1))) OVER (), (((TRIM(vt0.c1)))>((LIKELIHOOD(vt1.c0, 0.05094947167750696)))) FROM vt1 WHERE ((((CASE '蒋>'  WHEN x'' THEN x'ea23' WHEN '350064093' THEN '' WHEN -1464940523 THEN '675137987' ELSE NULL END))>(((NULL IN ())))));SELECT DISTINCT (((vt0.c1 IN ()))*(((vt0.c1)!=(vt0.c2)))) FROM vt1 WHERE ((CAST(0.5445943913324184 AS INTEGER) IN (('Oh4S8	(>8' IN ()), ((((NULL)OR(NULL)))AND(x''))))) GROUP BY ((UPPER(vt0.c2))<=(CAST(vt0.c2 AS REAL)));SELECT ((((vt0.c0)>>(vt0.c2))) BETWEEN ((vt1.c0 IN ())) AND (GROUP_CONCAT(vt0.c1))) FROM vt1, vt0 WHERE (0.2108740581986055); -- 0ms;
SELECT DISTINCT ((((vt0.c0)*(x''))) ISNULL), ((((vt1.c0)IS NOT(vt0.c1)))||(vt1.c0)), (((~ (vt0.c0))) NOTNULL) FROM vt1, vt0 WHERE (((((('-943230767')<>(6.61390465E8))))<((((x'0ee3131f')IS NOT(x'c357')))))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(0.6111296733363573 AS INTEGER) THEN (NOT (x'')) WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN vt0.c2 THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE CAST(vt0.c1 AS TEXT) END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END IN ()) FROM vt0 WHERE ((((('661390465')/('-1532550878')))<(UPPER(DISTINCT NULL)))) GROUP BY 0.5442546444302407, ((((vt1.c0)AND(vt1.c0)))=((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))), ((((((vt0.c1) NOTNULL))AND(((((((((0.44707413391406514)AND(vt0.c0)))AND(NULL)))AND(vt0.c1)))OR(vt0.c1)))))AND(json_quote(vt1.c0))) HAVING CASE WHEN (- (vt0.c0)) THEN (NOT (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END;SELECT DISTINCT '536578713' FROM vt1 WHERE (((((((((((((((((-579996679)OR(-874827931)))OR(0x587bb9b8)))AND(NULL)))OR(1020435438)))AND('-43285690')))AND(0.2777837972905556)))AND(('1801586157' IN (0.5504694775168725)))))AND(((x'925f') ISNULL)))); -- 0ms;
SELECT DISTINCT CASE CASE ''  WHEN '661390465' THEN vt0.c2 END  WHEN ((vt0.c2)<(vt0.c2)) THEN 0.6261093259590517 ELSE (vt0.c1 IN ()) END FROM vt1, vt0 WHERE (IFNULL(DISTINCT (('HH')IS NOT(NULL)), ((NULL) BETWEEN ('-1464940523') AND (x'')))) LIMIT 1994812721 OFFSET 1412440838; -- 1ms;
SELECT DISTINCT CAST(LIKELY(0.23034766495306458) AS BLOB) FROM vt1 WHERE ((((('242849336') IS TRUE)) NOT NULL)); -- 0ms;
SELECT DISTINCT vt0.c1, ((UNLIKELY(DISTINCT vt0.c2)) BETWEEN (SUM(vt0.c2)) AND (((vt0.c1) IS FALSE))), LAST_VALUE((((vt0.c1 IN ())) NOT BETWEEN (CAST(vt0.c2 AS TEXT)) AND ((((vt1.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c2)) AND ((vt1.c0, x'', vt0.c2)))))) OVER () FROM vt0, vt1; -- 0ms;
SELECT ALL RANK() OVER () FROM vt1; -- 0ms;
SELECT ((json_type(vt0.c2))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT json_array_length(vt0.c1 COLLATE NOCASE, '1606808972') FROM vt1, vt0 GROUP BY '', (((((((((vt0.c2 IN (vt0.c1, vt0.c1)))OR(CAST(vt0.c0 AS NUMERIC))))AND(((1.23526307E9)GLOB(vt1.c0)))))OR((((vt0.c2, vt0.c1, vt1.c0))<=((vt0.c1, vt1.c0, vt0.c0))))))OR((NOT (vt0.c1)))), (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))+(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE x'' END)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.8009823169223335); -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c2, vt0.c0))=((vt0.c1, vt0.c2, vt0.c2))))<=(vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(TIME(vt1.c0, vt0.c0, vt0.c1) AS INTEGER) FROM vt0 ORDER BY (((vt0.c0))!=((((x'fc88') BETWEEN (vt0.c2) AND (vt0.c1)))))  NULLS LAST;SELECT DISTINCT GROUP_CONCAT(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN NULL THEN vt0.c2 END) OVER () FROM vt0, vt1 WHERE (((NULL COLLATE RTRIM) IS FALSE)) GROUP BY '-476384696'; -- 1ms;
SELECT DISTINCT (((vt0.c2 COLLATE NOCASE))<((CAST(vt1.c0 AS TEXT)))) FROM vt0;SELECT DISTINCT ((((vt0.c0)>=(vt1.c0))) IS FALSE) FROM vt1, vt0 WHERE (((((((0xffffffff9062650c, NULL, x'')) NOT BETWEEN ((NULL, 0.6506219857800563, x'')) AND (('1436879767', '-755257456', NULL)))))==(('䵬|5I5u' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT (+ (vt0.c1)) FROM vt0, vt1 WHERE ((NOT ((('') ISNULL)))); -- 0ms;
SELECT (~ (vt0.c1)), ((CASE WHEN vt0.c1 THEN NULL WHEN '?\+Q' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE x'cd10' END)|(0.5362220883821078)), ((((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c0, vt0.c2))), vt0.c1 COLLATE NOCASE, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))>=((((vt0.c2)%(vt0.c1)), json_patch(vt1.c0, '113168458'), vt0.c0))) FROM vt1, vt0; -- 1ms;
SELECT PERCENT_RANK() OVER (), COUNT(CAST(vt1.c0 AS NUMERIC)) COLLATE BINARY, ((x'') NOT BETWEEN ((((vt1.c0, 0Xffffffffae7d25cf, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c0)) AND ((x'', vt0.c2, vt1.c0)))) AND (NULL)), (((vt0.c0 IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c2 IN ()))), LAG((('') IS FALSE), (- (vt0.c2)) COLLATE RTRIM, CAST(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) AS BLOB)) OVER ( RANGE BETWEEN ((((vt0.c1)AND(((vt0.c2)+(vt1.c0)))))AND(((('1258349219'))>((vt0.c2))))) FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW), (((vt1.c0 IN ()))&(((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))), vt0.c2 FROM vt0, vt1;SELECT vt0.c1 FROM vt0; -- 0ms;
SELECT ((GROUP_CONCAT(vt0.c1)) ISNULL) FROM vt1 NATURAL JOIN vt0 GROUP BY (- ((NOT (vt0.c1)))), vt0.c0, (~ (vt0.c2)) COLLATE NOCASE, ((vt0.c1) NOT NULL), ((((((((CAST(vt0.c1 AS INTEGER))AND(TRIM(vt0.c2))))OR(vt0.c1)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(((vt1.c0)|(vt1.c0)))) HAVING ((CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END)<(CAST(vt0.c0 AS INTEGER))); -- 0ms;
SELECT AVG(((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c2)))AND(-1e500)))AND(vt0.c2))) OVER () FROM vt1 WHERE ('') ORDER BY (((vt1.c0 IN ())) IS FALSE)  NULLS FIRST, ((((((((((vt0.c0)OR(vt1.c0)))AND('^')))OR(vt1.c0)))AND(vt0.c1))) NOT BETWEEN (((((((((vt0.c2)OR(x'')))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0))) AND (((x'')>>(vt1.c0)))) DESC  NULLS LAST, (((((((((- (NULL)))AND(((0.4622618100392486)*(NULL)))))OR((((vt0.c0))<>((vt0.c0))))))OR(COALESCE(DISTINCT vt0.c1, vt0.c1, x'd7e6', vt0.c2))))OR(((vt0.c1) IS FALSE))) ASC  NULLS LAST;SELECT ALL CASE WHEN (('a&1bH')<(vt0.c1)) THEN x'' END FROM vt0 WHERE ((((((0.5042504118625064 IN ('UB')))AND(((((x'5cdc')OR('O6')))OR(0Xffffffffb8aa8566)))))AND(('1377964747' IN ())))); -- 0ms;
SELECT (('1960759602') NOT BETWEEN (((x'c1ca')IS(vt0.c1))) AND ((((vt0.c0, vt0.c0, vt1.c0))>=((vt0.c0, x'46f3cde9', vt0.c2))))), ((((((((((vt0.c1)<>(vt0.c1)))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))))AND(((vt1.c0)|(vt0.c1)))))AND((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))), AVG(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) COLLATE NOCASE, (((x'db77')) NOT BETWEEN ((((vt0.c0)/(vt0.c2)))) AND ((NULL))), COALESCE((- (vt0.c2)), AVG(vt0.c1)) FROM vt1 WHERE ((((((NULL)) NOT BETWEEN (('-172215910')) AND (('3a'))))>((+ (x''))))) ORDER BY COALESCE(vt0.c1, vt1.c0, vt0.c2, vt1.c0) COLLATE BINARY ASC  NULLS LAST;SELECT DISTINCT SUM((vt0.c0 IN ())) OVER () FROM vt1, vt0 WHERE ((((NULL)) NOT BETWEEN ((CASE -2.65583116E8  WHEN NULL THEN x'021a' WHEN NULL THEN NULL WHEN '-941137827' THEN NULL END)) AND ((((NULL) NOT NULL))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)GLOB(vt0.c0)))OR(TOTAL(vt0.c0))))AND(((vt0.c1)>>(vt0.c0)))) FROM vt1, vt0 WHERE (((TRIM(-428762600, 170295552)) NOT NULL)); -- 0ms;
SELECT COUNT(*) OVER () FROM vt1, vt0 WHERE (CASE WHEN ((('1819176607', NULL, 'Nk'))<>((NULL, x'', 4.23222986E8))) THEN x'2b41' COLLATE RTRIM ELSE (((((((('')AND(0.6603263539236779)))OR('0.0812068281915097')))AND(NULL)))OR('532182426')) END) LIMIT -2142882795 OFFSET -1369367013; -- 0ms;
SELECT GROUP_CONCAT(((vt1.c0)>=(vt0.c0))) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((-1995385468) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (vt0.c1 COLLATE RTRIM)) FROM vt0 GROUP BY (~ (CASE WHEN '1428891164' THEN vt0.c0 END)), (+ ((~ (vt0.c0)))), ((((((((x'')OR(((vt1.c0) IS FALSE))))OR(UNLIKELY(DISTINCT vt1.c0))))OR((((vt0.c0))==((vt0.c1))))))AND(CASE vt0.c2  WHEN vt0.c2 THEN x'' WHEN vt0.c0 THEN vt0.c2 WHEN '637349730' THEN vt0.c2 END));SELECT AVG((~ (vt0.c2)) COLLATE NOCASE) FROM vt1, vt0 WHERE (TYPEOF(CAST('' AS TEXT))) GROUP BY ((vt0.c2 COLLATE BINARY) ISNULL) HAVING (+ (((vt0.c0) IS TRUE))) LIMIT -1281255891 OFFSET 1123752089; -- 0ms;
SELECT DISTINCT (((vt0.c1 IN ()))GLOB(0Xfffffffff331c3df)) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c2)*(vt0.c0)))GLOB(vt0.c0 COLLATE BINARY)) FROM vt1 WHERE ((('Do')=(0X5fc5f58c)) COLLATE RTRIM);SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((~ (0X41b718e6 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0, vt1 ORDER BY (vt0.c1 IN ()) ASC  NULLS LAST, ((((0.13745781308035032)AND(CAST(vt1.c0 AS BLOB))))AND(((vt1.c0)/(vt0.c0))))  NULLS FIRST, vt1.c0  NULLS FIRST, ((((((vt0.c0) NOT NULL))AND((- (vt0.c0)))))OR(json_patch(vt0.c2, vt0.c1))) ASC; -- 0ms;
SELECT DISTINCT JULIANDAY((0.517384502711647 IN ()), vt0.c0, vt0.c1 COLLATE NOCASE) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (CAST(vt0.c2 AS BLOB) IN ()), ((((vt0.c1)=(vt0.c0))) NOT BETWEEN (0.9556207241163303) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), TRIM(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((COUNT(*)))==((((((vt1.c0)AND(vt0.c0)))AND(x'f16f7022'))))), json_remove(vt0.c1, vt0.c0, x'', vt0.c0) COLLATE NOCASE, ((- (vt0.c0)) IN (((vt0.c0)>(vt0.c0)))) FROM vt1 GROUP BY (((vt1.c0) ISNULL) IN ()) HAVING ((('-895730565' IN ('1594407733')))OR(vt1.c0));SELECT DISTINCT (((vt0.c2)) NOT BETWEEN ((COUNT(vt0.c1))) AND (((((vt0.c2))<((vt0.c1)))))) FROM vt1 GROUP BY ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))AND((+ (vt1.c0)))))AND((((vt1.c0))<=((vt0.c1)))));SELECT ALL (- ((('-748234928')>(vt0.c1)))), ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(vt0.c2)) AND (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)), ((GROUP_CONCAT(vt0.c0))GLOB(((vt1.c0)OR(vt0.c2)))) FROM vt1, vt0 WHERE (((-1289900424) ISNULL) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((((vt0.c2)OR(vt1.c0)))AND(vt0.c1)))|(NULL)), (((((vt0.c1)|(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN 0x7db170fe WHEN vt0.c1 THEN '1311072482' ELSE vt0.c1 END, vt1.c0 COLLATE BINARY))<=((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)), GLOB(0.5059299619216006, x''), MIN(vt0.c0)))), CAST(((((vt0.c0)OR('Q V')))OR(vt0.c1)) AS REAL) FROM vt0 WHERE (((CASE ''  WHEN NULL THEN 0.19042276334208175 ELSE 1588918944 END) NOT NULL)) LIMIT 1926285987;SELECT DISTINCT AVG(CAST(vt1.c0 AS NUMERIC)) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(vt0.c2 COLLATE NOCASE) FROM vt0, vt1 WHERE (((NULL)IS NOT(x''))); -- 0ms;
SELECT ALL ((((NOT (vt0.c1))))>=((x''))) FROM vt0 WHERE (CAST(('879039467' IN (0.2581313569403392)) AS REAL)) LIMIT 438425014; -- 1ms;
SELECT DISTINCT vt0.c1 FROM vt1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))/(NULL)) FROM vt1, vt0 WHERE (((((((((NULL)AND('S0')))OR(NULL)))OR(((0.23125928867079082) NOT BETWEEN (NULL) AND (0.26638472104505395)))))AND(((605081065)<=(NULL))))) ORDER BY CAST(RTRIM(vt0.c0) AS NUMERIC); -- 0ms;
SELECT DISTINCT AVG(COUNT(vt1.c0)) FROM vt0 WHERE ((((NOT (x'')))%(((0.1698598145549628) BETWEEN (0xffffffff8ff51b6b) AND (0.2176012247055169)))));SELECT DISTINCT (- ('1433600767')) FROM vt0, vt1 WHERE (LTRIM((('675137987')%(NULL)))); -- 0ms;
SELECT ALL ((((vt0.c0)|(vt0.c2))) NOT NULL) FROM vt0 WHERE (CASE CASE -19009452  WHEN 0.7270825137492791 THEN '-1735593110' END  WHEN (0.7695673875607844 IN ()) THEN (((x''))<=((0.5149961694235702))) ELSE (('h){gcY%')IS(NULL)) END); -- 0ms;
SELECT CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM FROM vt1, vt0 WHERE (((1537251749 COLLATE BINARY) IS FALSE)) LIMIT 1267088761 OFFSET -527205091; -- 0ms;
SELECT ((JULIANDAY(vt1.c0, vt0.c2, vt0.c0)) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE)) FROM vt0 LIMIT 1550505535 OFFSET -1513453214;SELECT DISTINCT (- (vt1.c0)) FROM vt1, vt0 WHERE ((((NULL)) BETWEEN ((CAST(NULL AS BLOB))) AND (((((0.006948621746747485)) BETWEEN ((0.826031549590257)) AND ((NULL))))))); -- 0ms;
SELECT DISTINCT (((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)) IN (((((x'')AND(vt1.c0)))OR(vt0.c1)), ((vt0.c2) NOT NULL))), ((vt0.c0) BETWEEN (x'0aa6d210') AND (vt0.c1)) COLLATE NOCASE, IFNULL((vt0.c2 IN ()), ((vt0.c1) NOT BETWEEN ('{F') AND (vt1.c0))) FROM vt1, vt0 WHERE ((0.12451410752999559 IN ()) COLLATE NOCASE) GROUP BY 'ԾZ*ೆ,Bw' HAVING CASE vt0.c2  WHEN COUNT(*) THEN CAST(vt0.c1 AS INTEGER) END; -- 0ms;
SELECT (NOT ((((vt0.c2, vt0.c2, vt0.c1, vt0.c2, vt0.c1)) BETWEEN ((vt0.c2, vt1.c0, vt0.c2, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1))))) FROM vt1 GROUP BY (((((NULL IN (vt0.c2, vt0.c1)))OR((+ (vt0.c2)))))OR(((((((((((((vt0.c2)AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0))));SELECT DISTINCT FIRST_VALUE(((((vt0.c1)-(vt0.c0)))>>((vt1.c0 IN ())))) OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT vt0.c1, (('210375249')LIKE(((vt0.c2)|(vt0.c1)))), (('')<((NOT (vt0.c2)))) FROM vt1 GROUP BY INSTR(vt0.c2, CASE vt0.c2  WHEN vt0.c2 THEN x'' WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN NULL END), (((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))))IS(vt0.c2)), CASE '2059310070'  WHEN ((vt0.c1)==(0.4083075302852631)) THEN vt0.c0 COLLATE BINARY WHEN ((vt0.c0)LIKE(vt1.c0)) THEN (((vt1.c0))=((vt0.c0))) WHEN JULIANDAY(vt0.c2, vt1.c0, vt0.c0) THEN vt0.c2 COLLATE NOCASE ELSE ((((vt0.c2)OR(vt0.c1)))OR(vt1.c0)) END HAVING (SUM(vt0.c1) IN ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c2)))));SELECT DISTINCT GROUP_CONCAT(((vt1.c0)AND(vt1.c0))) OVER ( ORDER BY ((((((((SQLITE_SOURCE_ID())OR((NOT (vt0.c0)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c2)) ASC, ((((vt1.c0)>=(vt0.c0))) NOT NULL) ASC  NULLS LAST, vt0.c0  NULLS FIRST), ((((vt1.c0)/(vt1.c0))) IS TRUE), ((NULLIF(DISTINCT vt1.c0, vt1.c0))<(MIN(vt1.c0))) FROM vt1, vt0 WHERE ((~ (((0.3608162109777987) BETWEEN ('It') AND (-57031971))))); -- 0ms;
SELECT vt0.c0 FROM vt1 ORDER BY (((vt0.c0 IN ()))IS NOT(((vt0.c2) IS TRUE))) DESC  NULLS FIRST;SELECT ALL ((((vt0.c1, vt0.c2, vt0.c2, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c2, vt1.c0, vt0.c0)) AND ((vt0.c2, vt0.c2, vt1.c0, vt0.c0, vt0.c2))) IN ()), json_extract(COUNT(vt1.c0), COUNT(vt0.c1)), (((vt0.c1)|(vt1.c0)) IN (vt0.c2, (('659169157')>(vt0.c1)))) FROM vt1 WHERE (((0.4216059123702587) BETWEEN (((NULL) NOT BETWEEN (NULL) AND ('-1008330519'))) AND ((('[C')IS(0.5659207526448421)))));SELECT (((vt0.c2))<(((vt0.c1 IN ())))), ((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c0)))OR(((((NULL)OR(NULL)))AND(vt1.c0)))))OR(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(NULL)))OR(vt0.c1)))), ((TYPEOF(vt0.c0)) ISNULL) FROM vt0, vt1 WHERE ((~ (CAST(x'62a68ef4' AS INTEGER)))); -- 0ms;
SELECT DISTINCT AVG(CASE vt0.c2  WHEN vt0.c2 THEN x'6cca' END) OVER (), vt0.c2, CASE WHEN ((vt0.c2)OR(vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) WHEN 0.12254409160997914 THEN (~ (vt0.c2)) WHEN (- (vt0.c0)) THEN (vt0.c1 IN (vt0.c1)) END, TOTAL(((vt0.c0) NOTNULL) COLLATE NOCASE) OVER (), (TOTAL(vt0.c0) IN ()) FROM vt1 WHERE ((((0.7201969496057296)) NOT BETWEEN ((NULL)) AND (('-704845307'))) COLLATE BINARY);SELECT DISTINCT (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))>((((vt0.c1, 1.593552334E9, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, NULL))))), CASE vt0.c2 COLLATE BINARY  WHEN MAX(vt1.c0) THEN x'' END, ((NULL) BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(vt0.c1 AS BLOB))) FROM vt0, vt1; -- 0ms;
SELECT ALL (((NOT (9.3195462E7)))<>(((vt1.c0)-(vt1.c0)))), x'549b', (((vt0.c2)<=(vt0.c1)) IN (((vt1.c0) ISNULL), ((vt0.c2)IS NOT(vt0.c0)))) FROM vt0 WHERE (((((-1.7745012E9)IS NOT('0.8245647861057045')))=(NULL COLLATE NOCASE)));SELECT ALL (vt1.c0 IN ()) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(0Xffffffffaa60b5b3), vt1.c0, ((LIKELY(DISTINCT vt0.c0))!=(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END)) FROM vt0, vt1; -- 0ms;
SELECT AVG(((((vt1.c0)OR(vt0.c0)))OR(vt0.c2))) OVER () FROM vt1 LIMIT 1593552334;SELECT DISTINCT (((((vt0.c2))<((vt0.c1)))) ISNULL), '', ((((vt1.c0)||(vt0.c1)))GLOB('-2036416287')) FROM vt0, vt1 WHERE ((((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND ((CAST('3,j.}&e!' AS TEXT))))); -- 1ms;
SELECT ALL (+ (((vt0.c1) IS TRUE))) FROM vt1 WHERE ((TRIM('1396233309') IN (((NULL) IS TRUE))));SELECT ALL COUNT(((('-474631458'))=((vt0.c0)))) OVER () FROM vt1;SELECT DISTINCT ((((vt1.c0)/(vt0.c2)))+(((vt0.c0)>=('F6''Tu| ')))) FROM vt1;SELECT DISTINCT ((((((((DATETIME(vt0.c0, vt0.c0, vt0.c2))AND((~ (vt1.c0)))))OR(NULL)))AND((vt0.c0 IN (vt0.c0)))))AND(SUM(vt1.c0))) FROM vt1, vt0; -- 0ms;
SELECT ((((vt0.c1)IS NOT(''))) NOT BETWEEN (((vt0.c2) NOT BETWEEN (vt1.c0) AND (NULL))) AND (((vt0.c2)%(vt0.c2)))) FROM vt1 UNION SELECT ALL ((ABS(vt0.c1)) NOTNULL) FROM vt0;SELECT (((+ (vt0.c2))) NOT NULL) FROM vt1 WHERE ((+ ('\nﾸ'))) ORDER BY 0.756229084183313 DESC  NULLS LAST;SELECT CAST(CASE vt0.c1  WHEN '1684055333' THEN vt0.c2 ELSE '' END AS NUMERIC), ((((((((COUNT(vt0.c1))OR(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0) IS FALSE))))AND('2147284997')))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c1 END)), CASE WHEN '-1273537876' THEN (vt1.c0 IN (vt0.c0)) END FROM vt0, vt1 WHERE (IFNULL((('')>>(0X32b0b2ee)), (('UGypHP') NOTNULL))) GROUP BY ((vt0.c0)>(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) HAVING ((vt0.c1) IS FALSE); -- 0ms;
SELECT (((((vt0.c2)) BETWEEN ((0.263110951038355)) AND ((vt0.c2))))IS(CASE vt0.c1  WHEN vt0.c0 THEN x'75f21058' ELSE vt0.c2 END)) FROM vt0; -- 0ms;
SELECT ('1686382425' IN ()) FROM vt1, vt0 WHERE (CASE ''  WHEN ((0.4584688798640685)<<(0.16787531230199215)) THEN (~ (0.14970341865269732)) WHEN (0x3ea8030e IN ()) THEN (((('yF')AND('159310237')))OR(NULL)) WHEN CAST(NULL AS INTEGER) THEN x'' END); -- 0ms;
SELECT ALL ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)))>=((vt0.c1 IN ()))) FROM vt1 WHERE ((((((((((((('-1201712557')AND(x'')))OR(x'')))OR((('1661869800') BETWEEN (x'') AND (1011397374)))))AND(((NULL)AND('G(')))))AND(NULL)))OR(CASE WHEN 0Xfffffffff5bc319a THEN '-1464940523' END)));SELECT DISTINCT TOTAL((((vt0.c2, vt1.c0, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1)))) FROM vt1;SELECT ALL (+ (vt0.c2 COLLATE NOCASE)), ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(((vt0.c0)GLOB(vt1.c0)))), CASE CAST(vt0.c0 AS INTEGER)  WHEN '(Bkg>' THEN x'' ELSE 'GfWB\nࡹC#' END FROM vt1, vt0 GROUP BY (((vt1.c0 IN ()))-(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))); -- 0ms;
SELECT DISTINCT ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM vt1 WHERE (((~ (NULL)) IN (((((((((0.16911670048940086)AND(NULL)))OR(x'')))OR(0.43941971324834295)))OR(x'')), (- (NULL)))));SELECT (vt0.c2 IN ()) FROM vt1, vt0; -- 0ms;
SELECT ALL MAX(((vt0.c1) ISNULL)), (((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c2, vt1.c0)) AND ((vt0.c1, vt0.c0, vt1.c0))))<<(((vt0.c2)/(vt0.c1)))), IFNULL(DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1), ((vt1.c0) NOT BETWEEN (0x24bf6a7e) AND (vt0.c0))) FROM vt1, vt0 WHERE ((NOT (-2030918598 COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((vt0.c1) NOT BETWEEN (0.9018277754027361) AND (vt0.c0))) NOT NULL), SUM(((vt1.c0) ISNULL)), ((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c2, vt0.c2, vt0.c0)) AND ((vt0.c1, vt1.c0, vt0.c1))) IN ()) FROM vt1;SELECT DISTINCT ((((vt0.c1)>(vt0.c2)))-(((vt0.c0) NOT NULL))) FROM vt1;SELECT (HEX(DISTINCT vt0.c1) IN ()), CAST(((vt1.c0)==(vt0.c1)) AS NUMERIC), CASE ((vt0.c2)>>(vt0.c1))  WHEN GROUP_CONCAT(NULL) THEN (((vt1.c0))<=((vt0.c1))) WHEN MIN(vt0.c0) THEN CAST(vt0.c2 AS BLOB) WHEN vt0.c2 COLLATE NOCASE THEN ((((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)) END, CASE vt0.c2  WHEN (-1.707519014E9 IN (vt0.c1, vt0.c2)) THEN ((vt1.c0)GLOB(vt0.c1)) WHEN vt0.c2 THEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt1.c0)) WHEN ((((vt1.c0)OR(vt0.c2)))OR(vt0.c1)) THEN (NOT (vt0.c1)) ELSE ((((vt0.c2)OR(vt1.c0)))OR(vt0.c0)) END, CAST(NULLIF(DISTINCT vt1.c0, vt0.c1) AS NUMERIC) FROM vt0, vt1 WHERE (((0.05889157312759552 COLLATE NOCASE)==((('661390465') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((vt0.c0)*(MAX(vt0.c1))), LIKELIHOOD(((vt0.c0) NOTNULL), 0.6891672761474702), (((vt0.c1 IN (vt0.c0, vt0.c1)))==(vt1.c0)) FROM vt1;SELECT DISTINCT LIKELY(DISTINCT vt0.c1), ((((0Xffffffff8734f0e3 IN (vt1.c0))))>=((LTRIM(vt1.c0)))), CAST(COALESCE(DISTINCT vt0.c1, vt1.c0) AS NUMERIC) FROM vt1, vt0 WHERE (ABS(CASE x''  WHEN 0.2310763377575602 THEN 0.8737308888096872 WHEN 0.8240319583051314 THEN x'' WHEN '1469410280' THEN -5.6916962E7 WHEN x'' THEN -1520932417 WHEN NULL THEN 0.07371831085180536 WHEN 0Xfffffffff5bc319a THEN 1.59310237E8 WHEN NULL THEN x'' ELSE x'' END)) GROUP BY (('䊰_Ⅾe!#M') BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))) AND ((((vt0.c2, vt0.c0, vt0.c0))=((vt1.c0, vt0.c1, vt0.c0))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))IS((- (vt0.c1)))), GROUP_CONCAT(((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) OVER (), CASE vt0.c2 COLLATE RTRIM  WHEN COUNT(vt1.c0) THEN CAST(vt0.c1 AS NUMERIC) END FROM vt1, vt0 ORDER BY (~ (((vt1.c0) NOTNULL))) DESC; -- 1ms;
SELECT ALL ((('H\' IN ())) NOT BETWEEN (((vt0.c2) ISNULL)) AND ((~ (vt0.c2)))), CASE WHEN COUNT(*) THEN ((((vt0.c0)AND(x'')))AND(vt0.c2)) END, (((('-1233898437') NOTNULL)) NOT BETWEEN (((((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c1))) AND (CAST(vt0.c2 AS REAL))) FROM vt1 WHERE ((((((0.16787531230199215) IS TRUE)))>=(((((x'', 's2F%!1,3/', x'')) NOT BETWEEN ((0.49455903870593354, '0.5107064511879041', ')f&꣝mc)')) AND ((0.8009823169223335, x'', x'')))))));SELECT DISTINCT (vt0.c0 IN ()), vt0.c1, ((vt0.c0 COLLATE NOCASE)==(vt0.c2 COLLATE BINARY)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE LOWER(NULL)  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END, GROUP_CONCAT(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c1 END), CAST('Aoc7' AS TEXT) FROM vt0, vt1 WHERE (0x7d35ce0e); -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE RTRIM)/((('P9]dపe?q0')-(vt1.c0)))) FROM vt0 WHERE (((((0.634444911885695)>=(0.8173030871571971))) ISNULL));SELECT MIN(MIN(((358088177) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) FROM vt1;SELECT ALL CASE ((vt1.c0) IS FALSE)  WHEN 0.932462755454787 THEN ((vt0.c0)%(vt0.c1)) ELSE ((((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c2)))OR(vt0.c0)))OR(vt1.c0)) END, ((vt0.c2 COLLATE NOCASE) NOT NULL), NULLIF(DISTINCT x'', LOWER(DISTINCT vt0.c2)), CAST('-932850168' AS NUMERIC), COUNT(*), (((((NULL))>((vt0.c1)))) NOTNULL), MIN('ND') COLLATE BINARY, ((((((((CASE WHEN 207994578 THEN vt0.c2 WHEN vt0.c0 THEN '-1126021265' WHEN vt0.c2 THEN vt0.c0 ELSE vt1.c0 END)OR(CAST('&哑홣l|Aa4' AS REAL))))AND((((x'2b73')) BETWEEN ((0.5051781340508444)) AND ((x'83d3'))))))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)))))AND(COUNT(vt1.c0))), ((vt0.c2 COLLATE NOCASE) NOT NULL) FROM vt1, vt0 WHERE (CASE (('%x6*tU59') NOTNULL)  WHEN (- (x'')) THEN (509616086 IN ()) ELSE NULL COLLATE RTRIM END); -- 0ms;
SELECT ((vt0.c0 IN ()) IN ()), (((((vt0.c2, vt0.c2, vt0.c1, vt1.c0, vt1.c0))<((vt0.c0, vt0.c1, -1.464940523E9, vt0.c0, vt0.c2)))) NOT BETWEEN (vt0.c2) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)), ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) IN ()) FROM vt0, vt1 WHERE (((CAST(1797378220 AS INTEGER))%(((((((((NULL)OR('')))OR('1738026324')))OR(x'4a12')))AND(x'a045'))))); -- 0ms;
SELECT DISTINCT CAST(vt1.c0 COLLATE BINARY AS REAL) FROM vt1 WHERE (((CASE WHEN '-11472515' THEN NULL ELSE NULL END) NOT NULL)); -- 0ms;
SELECT ALL CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE '1814474308' END COLLATE RTRIM, vt0.c2 COLLATE BINARY, GROUP_CONCAT((((vt0.c2, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c2)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (TRIM(vt0.c1) IN ()) FROM vt0 WHERE (CASE (- ('l0&+}W'))  WHEN CAST('' AS REAL) THEN ((('440386803'))=((NULL))) ELSE ((-1.089766761E9) NOT BETWEEN ('-1520932417') AND (x'')) END); -- 0ms;
SELECT ALL TRIM(vt0.c1) FROM vt0 WHERE (((((((((((((CASE WHEN NULL THEN x'' ELSE '' END)OR(NULL COLLATE RTRIM)))OR('6b')))OR(((x'') IS FALSE))))OR(UPPER(DISTINCT NULL))))OR((('LL') ISNULL))))AND(((0.5183264878935385) BETWEEN ('B0') AND ('CxU'))))); -- 0ms;
SELECT ALL (((((((((((vt0.c0, vt1.c0, vt0.c2)) BETWEEN ((vt0.c2, x'a7b8', vt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c0))))OR(CASE '2059560355'  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c2 END)))OR((~ (vt1.c0)))))AND(MIN(vt0.c1))))OR(NULL)), ((((((vt0.c1) NOTNULL))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))AND(vt0.c1)), COUNT(*) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW) FROM vt0, vt1 LIMIT 1713145534; -- 0ms;
SELECT DISTINCT MIN(((((0.47067014813010877)AND(vt1.c0)))AND(vt0.c1))) FROM vt1 WHERE ((CASE WHEN NULL THEN 0.429781220280411 ELSE x'c3c8' END IN (((x'')==(']d')), (NOT (NULL))))) LIMIT 999697696 OFFSET 1794271755;SELECT DISTINCT (((vt1.c0) NOTNULL) IN (CAST(vt0.c0 AS TEXT))) FROM vt0, vt1; -- 0ms;
SELECT ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) COLLATE BINARY, NULLIF((((vt0.c0))!=(('XJ\{1ry?'))), ((x'')&(vt1.c0))), LEAD(((CASE -177957456  WHEN vt0.c0 THEN vt0.c2 END) NOT BETWEEN ((- (vt0.c2))) AND ((('eW#d[1OJ|') NOTNULL))), ((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<((COALESCE(vt0.c2, vt0.c2)))), 0.9454129904304501) OVER ( RANGE BETWEEN HEX(DISTINCT CASE vt1.c0  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END) PRECEDING AND ((x'9a26' COLLATE NOCASE)GLOB(((vt0.c2)GLOB(vt0.c0)))) FOLLOWING) FROM vt0 WHERE ((((1593552334)) NOT BETWEEN ((NULLIF(DISTINCT NULL, NULL))) AND ((0.3284526814094153 COLLATE RTRIM)))) GROUP BY CASE WHEN (((vt1.c0))<=((NULL))) THEN CAST(vt0.c2 AS NUMERIC) ELSE ((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c2)) END;SELECT CAST(((517622885)LIKE(vt0.c1)) AS TEXT) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT MAX(((vt1.c0)GLOB(vt0.c1))) FROM vt0 WHERE (((x'' COLLATE BINARY) NOT BETWEEN (0.4563370166663888) AND (CHAR(NULL, '1396233309', 0.13844610864051277))));SELECT DISTINCT (((vt1.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((((-938857960) BETWEEN (vt1.c0) AND (vt0.c1)), vt0.c2 COLLATE NOCASE, ((vt0.c2) IS FALSE), (vt0.c1 IN (vt1.c0)), (((vt0.c1))<=((vt0.c0))))) AND ((NULLIF(DISTINCT vt0.c0, vt0.c2), (0.5760901888155248 IN ()), DATETIME(vt0.c2, vt0.c2, vt1.c0), vt0.c1, '-1707519014'))) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED((('')=(x''))));SELECT DISTINCT (((- (vt0.c0)))LIKE(CAST(vt0.c0 AS BLOB))), PERCENT_RANK() OVER (), ((CAST(vt0.c2 AS REAL))+(LIKELIHOOD(DISTINCT vt0.c2, 0.029032619431277218))) FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c2 IN (vt0.c2))) NOTNULL); -- 1ms;
SELECT DISTINCT TOTAL(CAST(vt0.c0 AS TEXT)) OVER (), vt0.c2, COUNT(CAST(vt0.c1 AS NUMERIC)) OVER (), TOTAL(((vt0.c0) IS FALSE)) FILTER(WHERE (((NOT (vt0.c2)))IS(vt0.c0 COLLATE BINARY))) OVER (), '-265583116' FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt1.c0)AND(vt0.c2)))OR(NULL)) AS INTEGER) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), CASE ((vt0.c0)|(vt0.c0))  WHEN ((vt0.c1)<=(vt0.c1)) THEN (~ (vt1.c0)) ELSE ((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END, ((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)<>(CASE WHEN vt1.c0 THEN vt0.c2 WHEN 0.4111948924954162 THEN vt1.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END)), TOTAL(((vt0.c1)+(vt0.c2))) OVER (), JULIANDAY(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)), vt0.c1 COLLATE RTRIM, ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(NULL)))OR(vt0.c2))) FROM vt0, vt1 WHERE (((x'')-('701907468')) COLLATE BINARY); -- 0ms;
