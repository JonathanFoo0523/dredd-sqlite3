-- Time: 2024/06/07 10:52:48
-- Database: database26
-- Database version: 3.40.0
-- seed value: 4140944126
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.5840533727746717, '232373147', x''); -- 1ms;
BEGIN  TRANSACTION; -- 2ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES (0.5262276130512165, '-1618772299'), ('Ina/]r()', 326423322), ('326423322', x''); -- 1ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0.3553827821778125), (x''), (x'ad8b'); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (NULL, '', ''); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-1618772299', '', x''); -- 0ms;
REINDEX; -- 0ms;
PRAGMA threads; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'509e'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('N{3 l4k䛷'); -- 0ms;
VACUUM temp; -- 2ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES ('', 3.26423322E8); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.34810598001959847), (0.22242430165934945), (-842869001); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.2328928882660638); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x'c4df'), (x''), ('202437249'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1) VALUES (x'', '-1041611091'); -- 1ms;
INSERT OR REPLACE INTO rt0(c0) VALUES ('''O''-v'), (NULL), (x'84bc77c8'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1) VALUES ('-1618772299', NULL, ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (CASE WHEN ((((0.5531807971793287)AND('')))AND('')) THEN CAST('' AS NUMERIC) END, '-1041611091'); -- 0ms;
ANALYZE; -- 4ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL (CAST(rt0.c1 AS BLOB) IN ()) FROM rt0, vt0 WHERE (((('')) BETWEEN (((((x'8150'))<((0x1374d31a))))) AND ((CAST(NULL AS NUMERIC))))); -- 3ms;
PRAGMA legacy_file_format = false; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.9421025299285937, ''); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('905924089'), (0.030680099552057638), (''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (x''), ('[_xG72'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('-616954454'), (NULL), (x''), (x''), (0X44a62b5f); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (-2089891275, NULL), (x'ee8e', x'7e51'), ('0.5531807971793287', x'9292'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-2089891275'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.threads = 7212883417413478419; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('-1494749450', 'q纵o<&'), (x'', 0.5008128045512509), ('-1618772299', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES ('760190424', '-2089891275', 'V纵v'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('-1832149504', x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES ('0.030680099552057638', x''), ('-1618772299', 'H>'), (x'de9f', 0.9310520513412694), (NULL, '673081496'), (NULL, 0.8961744449463084); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'e40c'), (x''), (0.9421025299285937); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT PRINTF(((rt0.c0)OR('760190424'))), ((CASE rt0.c1  WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.7899662038724968 THEN vt0.c0 END)|(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))), ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) COLLATE RTRIM FROM vt0, rt0, v0 ORDER BY CAST(v0.c0 COLLATE BINARY AS REAL) DESC  NULLS FIRST, CASE (((v0.c0))>((rt0.c0)))  WHEN (vt0.c0 IN ()) THEN ((v0.c0)+(rt0.c1)) WHEN ((x'') NOT NULL) THEN ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) WHEN x'' THEN (vt0.c0 IN ()) ELSE '-11621020' END, ((((vt0.c0)-(rt0.c0))) IS TRUE) ASC; -- 1ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((v0.c0))) COLLATE BINARY FROM vt0;SELECT CAST(((vt0.c0)+(rt0.c1)) AS TEXT) FROM v0, rt0, vt0 WHERE ((- (CASE 0X0  WHEN NULL THEN 0.8497416490663484 END))) ORDER BY CAST((vt0.c0 IN ()) AS REAL), (((((rt0.c1))=((vt0.c0)))) IS TRUE)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE MAX(vt0.c0)  WHEN (NOT (rt0.c1)) THEN GROUP_CONCAT(rt0.c1) ELSE ((vt0.c0)IS NOT(vt0.c0)) END FROM rt0, vt0, v0 WHERE ((((((x'e785')AND('࿐rB9W*+䷹<')))AND(x'')) IN (CAST(0.4270709382403224 AS BLOB)))); -- 1ms;
SELECT DISTINCT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CASE '1763922036'  WHEN x'' THEN '0.5262276130512165' ELSE 0X5c9224e4 END AS TEXT)); -- 0ms;
SELECT DISTINCT json_array(NULL COLLATE BINARY, MIN(v0.c0, v0.c0, NULL, rt0.c1)) FROM v0, vt0, rt0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (INSTR(rt0.c1, x'50d50453')) AND ((+ (v0.c0)))) FROM rt0;SELECT DISTINCT ((((rt0.c2)||(rt0.c2))) BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (((rt0.c1)LIKE(rt0.c1)))) FROM v0, vt0 WHERE (CAST((('E&a+a.G') BETWEEN ('0.9310520513412694') AND ('')) AS INTEGER));SELECT 0.17331235656310207, RANK() OVER ( ORDER BY (((((vt0.c0)IS(x''))))>(((((rt0.c2, rt0.c2, v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, x'', rt0.c0, vt0.c0)) AND ((rt0.c0, rt0.c1, v0.c0, rt0.c2, rt0.c2)))))) ASC  NULLS FIRST, CASE WHEN ((v0.c0)>=(rt0.c1)) THEN (NULL IN ()) END  NULLS FIRST), (((rt0.c2)) BETWEEN (((((rt0.c2, vt0.c0, v0.c0))<((v0.c0, x'', rt0.c1))))) AND ((MAX(rt0.c2)))), ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(rt0.c2))) AND ('h>')), (rt0.c0 IN (rt0.c0)) COLLATE RTRIM FROM rt0;SELECT ((((rt0.c0)AND(rt0.c0))) NOT BETWEEN (((vt0.c0)<(rt0.c0))) AND (rt0.c2)), -1.49474945E9, CASE WHEN (((vt0.c0))>((rt0.c2))) THEN ((rt0.c1) IS TRUE) END FROM v0, vt0 WHERE ((('326423322' IN ()) IN ())) GROUP BY ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE HAVING ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 END) NOT BETWEEN (CASE 0x4ad5ccd9  WHEN v0.c0 THEN rt0.c1 END) AND (CASE '1553081572'  WHEN rt0.c2 THEN vt0.c0 END));SELECT DISTINCT (((rt0.c2))==((((-2089891275) BETWEEN (rt0.c2) AND ('&+{Qs>'))))) FROM vt0, v0, rt0; -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS NUMERIC) IN ()) FROM rt0, v0, vt0 GROUP BY ((((rt0.c1)&(vt0.c0)))<<((rt0.c0 IN ()))) HAVING COALESCE(DISTINCT ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), (NOT (rt0.c2))); -- 0ms;
SELECT HEX(DISTINCT ((vt0.c0) NOT NULL)) FROM rt0;SELECT ALL COUNT(((((((((((((((((rt0.c2)AND(vt0.c0)))OR(0xffffffff836eca35)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c0))) OVER () FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE, (((((v0.c0, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, vt0.c0, rt0.c2)) AND ((v0.c0, rt0.c2, vt0.c0)))) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c0 IN ()))), ((vt0.c0)IS(CAST(rt0.c0 AS REAL))), (((rt0.c0, vt0.c0, v0.c0)) BETWEEN (((- (vt0.c0)), ((rt0.c2) IS FALSE), x'')) AND ((((v0.c0) IS FALSE), rt0.c0 COLLATE NOCASE, CASE WHEN rt0.c0 THEN rt0.c0 END))), (rt0.c2 COLLATE NOCASE IN ()) FROM rt0, vt0;SELECT ALL LIKELIHOOD(rt0.c1, 0.29771906309113405) COLLATE NOCASE FROM rt0, v0 WHERE (((0.4684144224404905) ISNULL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c2))))>=((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE rt0.c1 END))), UNICODE(((vt0.c0)|(v0.c0))), (((((rt0.c2 IN ('-1585726269')))AND('ina/]r()')))OR((rt0.c1 IN (vt0.c0, v0.c0, v0.c0)))) FROM v0, vt0 ORDER BY (((rt0.c2)*(rt0.c1)) IN ()) ASC  NULLS LAST;SELECT SUM(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))) FROM rt0, v0, vt0 EXCEPT SELECT DISTINCT COUNT(*) FROM v0, rt0 WHERE (0.7633700969809672); -- 0ms;
SELECT ALL (((rt0.c2)<>(vt0.c0)) IN (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(v0.c0)))) FROM rt0 WHERE ('q纵o<&' COLLATE NOCASE);SELECT DISTINCT (NOT (rt0.c0)) COLLATE NOCASE FROM vt0 LIMIT -1 OFFSET 931594153;SELECT ALL ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND((0.4897236748969662 IN (rt0.c1)))) FROM v0, vt0 WHERE ((-723797586 IN ()) COLLATE BINARY) LIMIT 931594153;SELECT ALL ((((vt0.c0)+(vt0.c0))) BETWEEN (COUNT(*)) AND (0.005621945339188805)), CAST(((v0.c0) IS FALSE) AS NUMERIC), CAST(rt0.c1 COLLATE RTRIM AS TEXT) FROM v0;SELECT (((((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))OR(((vt0.c0) IS FALSE))))AND((((rt0.c0, rt0.c0, v0.c0))=((rt0.c0, rt0.c1, ''))))))AND(('' IN (rt0.c1)))))AND(((v0.c0) ISNULL))), (((('0.5262276130512165') NOTNULL))OR(((vt0.c0) NOTNULL))), CAST(TOTAL(rt0.c1) AS NUMERIC) FROM rt0, vt0;SELECT DISTINCT CASE WHEN (((NULL, rt0.c2, 'FPI')) NOT BETWEEN (('-1041611091', rt0.c2, vt0.c0)) AND ((rt0.c0, v0.c0, rt0.c1))) THEN CAST(v0.c0 AS INTEGER) WHEN CASE v0.c0  WHEN v0.c0 THEN rt0.c0 ELSE vt0.c0 END THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN MIN(rt0.c1, rt0.c0) THEN NULL END, ((((vt0.c0)<<(vt0.c0))) NOT NULL), MAX(rt0.c1) FROM v0, vt0 WHERE (TYPEOF((((-537849904))>=(('H>')))));SELECT ALL vt0.c0 FROM vt0, v0, rt0 WHERE (((UPPER(DISTINCT '-1201378325')) NOT BETWEEN (CAST('Z2cy]au5' AS REAL)) AND (((x'') BETWEEN (0x1b0fb89c) AND ('0.22242430165934945'))))); -- 0ms;
SELECT DISTINCT ((CASE v0.c0  WHEN vt0.c0 THEN NULL END)OR(((vt0.c0) IS TRUE))) FROM rt0;SELECT DISTINCT vt0.c0, (((LIKELY(rt0.c1)))>=((((((rt0.c2)OR(v0.c0)))AND(rt0.c0))))), ((((vt0.c0)LIKE(rt0.c2))) IS TRUE) FROM vt0, rt0, v0 GROUP BY ((rt0.c0)|(rt0.c2)) COLLATE NOCASE, ((((((v0.c0)AND(rt0.c2)))OR(rt0.c1))) IS TRUE), (((((rt0.c1)) NOT BETWEEN ((1165271651)) AND ((rt0.c2))))GLOB(CAST(rt0.c1 AS REAL))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(-1618772299)))AND(rt0.c2)) COLLATE BINARY, rt0.c0, IFNULL(DISTINCT CASE WHEN rt0.c1 THEN NULL ELSE v0.c0 END, TRIM(DISTINCT '-1585726269')) FROM v0;SELECT DISTINCT (- (CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 END)), (((rt0.c2)+(rt0.c0)) IN ()), NTH_VALUE(NULL, 0.06937389615508949) OVER ( ORDER BY ((rt0.c2) BETWEEN ('-27163521') AND (vt0.c0)) COLLATE BINARY COLLATE BINARY DESC, rt0.c0  NULLS FIRST, (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC) FROM vt0, v0 WHERE (CAST(((((x'')AND(x'0905')))OR(x'')) AS TEXT));SELECT ALL ((((rt0.c0)%(rt0.c1))) NOT NULL) FROM vt0 WHERE (((CAST('-1559982919' AS BLOB)) BETWEEN ((('') IS TRUE)) AND ((('-1086024687')<=('')))));SELECT (((((((((rt0.c1 IN (v0.c0)))AND(((((rt0.c2)AND(v0.c0)))OR(rt0.c0)))))OR(v0.c0 COLLATE BINARY)))OR((rt0.c0 IN (v0.c0)))))AND(rt0.c1)), CAST(CAST(vt0.c0 AS TEXT) AS BLOB), ((vt0.c0) NOT BETWEEN (CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE vt0.c0 END) AND (SUM(rt0.c2))) FROM v0, vt0, rt0 WHERE (CAST(TRIM(DISTINCT '1999842854', NULL) AS NUMERIC)); -- 0ms;
SELECT vt0.c0 FROM vt0, v0, rt0 LIMIT -1339330416; -- 0ms;
SELECT CAST(v0.c0 AS TEXT) FROM vt0 ORDER BY ((((((((((rt0.c1)AND(-1.832149504E9)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))) BETWEEN (rt0.c1) AND ((((rt0.c0))<((v0.c0))))) ASC  NULLS LAST;SELECT DISTINCT (rt0.c1 IN (CASE rt0.c2  WHEN v0.c0 THEN '759505334' ELSE rt0.c0 END)) FROM rt0, v0; -- 0ms;
SELECT ALL ((rt0.c1) IS FALSE) COLLATE NOCASE COLLATE NOCASE FROM rt0 LIMIT -1045224510; -- 1ms;
SELECT DISTINCT (+ ((((rt0.c1))==((rt0.c0))))), ((GLOB(rt0.c1, rt0.c1)) BETWEEN ((v0.c0 IN (rt0.c0, rt0.c0, vt0.c0))) AND ((~ (x'8ec9ad48')))), CAST(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS BLOB) FROM v0, rt0, vt0 LIMIT 1318348722; -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS INTEGER))<<(CAST(v0.c0 AS NUMERIC))) FROM rt0;SELECT ALL (- (((((v0.c0)AND(rt0.c0)))AND(rt0.c0)))) FROM rt0 WHERE (((+ (NULL)) IN ()));SELECT ALL (((((~ (rt0.c0)))AND(vt0.c0)))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))) FROM rt0, vt0, v0; -- 0ms;
SELECT ALL NULL FROM v0, rt0, vt0 WHERE (((CASE '%BV'  WHEN 'UycDCP᣾<' THEN 1.318348722E9 WHEN '232373147' THEN 0.05021058275668133 WHEN x'' THEN '' END)GLOB(CAST(0.8774729260001879 AS BLOB)))) LIMIT -1935611133 OFFSET 299314961; -- 0ms;
SELECT (((0.09846717911609038)) NOT BETWEEN (((rt0.c2 IN (rt0.c1)))) AND ((vt0.c0 COLLATE RTRIM))) FROM v0 WHERE ((((((- (x'')))OR(((x'db65')+(NULL)))))AND((('454015132') IS TRUE))));SELECT ((((x'')IS(v0.c0))) BETWEEN (((rt0.c1)&(v0.c0))) AND (CASE WHEN vt0.c0 THEN rt0.c2 END)) FROM rt0, vt0, v0 WHERE (((((('-1317579128') NOTNULL)))<((((((x'')OR(NULL)))OR('-1621670153')))))); -- 0ms;
SELECT ALL ((((rt0.c0)+(rt0.c0))) NOTNULL) FROM vt0;SELECT ALL COUNT(rt0.c1), (((((rt0.c1))<((v0.c0))))=(rt0.c0 COLLATE BINARY)), MIN(CAST(rt0.c2 AS NUMERIC)) COLLATE RTRIM FROM v0, rt0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c0)))-(NULLIF(DISTINCT '', rt0.c1))) FROM vt0, v0, rt0 WHERE (((0x16749f95 COLLATE NOCASE) NOTNULL)) ORDER BY ((((vt0.c0) NOT NULL))/(rt0.c1 COLLATE NOCASE)), (+ (((x'') NOT NULL)))  NULLS FIRST; -- 0ms;
SELECT ABS(CASE WHEN rt0.c2 THEN rt0.c0 END) FROM vt0, rt0, v0 WHERE ((~ (NULL))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) OVER ( ORDER BY NULL  NULLS LAST) FROM vt0 WHERE (((x'' COLLATE RTRIM) IS TRUE));SELECT CASE ((rt0.c0)>>(vt0.c0))  WHEN 0.7934812567460686 THEN rt0.c2 END FROM rt0, vt0, v0 WHERE ((~ ((~ (2.02437249E8))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM v0 WHERE ((((((7.60190424E8, x'', 0x1)) BETWEEN (('1763922036', '-1585726269', 'UYCDCP᣾<')) AND ((0.5043800060135095, x'27fb', 0.4684144224404905)))) ISNULL)) LIMIT 0;SELECT DISTINCT '-&rߕU}wEO' FROM v0 WHERE (-145894274) LIMIT 854944308; -- 1ms;
SELECT DISTINCT CASE ((v0.c0)*(vt0.c0))  WHEN ((rt0.c0)>=(vt0.c0)) THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) WHEN (rt0.c2 IN ()) THEN COUNT(*) WHEN (- (rt0.c2)) THEN ((v0.c0)>(vt0.c0)) END FROM rt0;SELECT DISTINCT (((vt0.c0 IN ()))==(((rt0.c1) IS TRUE))) FROM v0;SELECT ALL ((((((((CAST(rt0.c0 AS NUMERIC))OR((((v0.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, rt0.c0)) AND ((rt0.c1, rt0.c0, x''))))))OR(COALESCE(vt0.c0, rt0.c0))))OR(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN ('760190424') AND (rt0.c1)))) FROM v0;SELECT DISTINCT (((NOT (rt0.c1)))*(((rt0.c1) IS TRUE))) FROM v0, vt0, rt0 WHERE ((((((''))>(('-1041611091'))))*(CASE WHEN 0.35573498253933133 THEN NULL WHEN '1165271651' THEN x'' WHEN '-1609513330' THEN 0.3560847414464319 END))); -- 0ms;
SELECT DISTINCT IFNULL((vt0.c0 IN (rt0.c1)), COUNT(v0.c0)) FROM rt0, v0 WHERE ((((((((((NOT ('2 YF0')))AND((('側F0X搆x') BETWEEN (-1772475738) AND (0.023847400226545967)))))OR(TIME('T', '', 0.26890362745514573, 0.9494898949315612, -25784954))))AND(TRIM(x'd8d3'))))AND((('299314961') NOT NULL))));SELECT DISTINCT GROUP_CONCAT((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))), ((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 END) AND (AVG(rt0.c0))), (ABS(rt0.c2) IN ('707196857')) FROM rt0, vt0;SELECT ALL LAG(((((rt0.c2 COLLATE BINARY)AND(v0.c0)))OR(LTRIM(rt0.c1, rt0.c1))), (((((rt0.c1) BETWEEN (x'') AND (rt0.c1))))!=((((v0.c0)>=(rt0.c0))))), (- (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) OVER (), ((((rt0.c1)>(v0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(rt0.c0 AS TEXT))), MIN(((rt0.c1) IS FALSE)) FROM v0, rt0; -- 0ms;
SELECT (- (rt0.c2)), GROUP_CONCAT(((rt0.c0)>>(rt0.c2))) OVER (), CAST((rt0.c1 IN (0.2328928882660638)) AS INTEGER) FROM vt0, rt0, v0 WHERE ((((0.9949893576456487, 760190424, 0.5262276130512165)) NOT BETWEEN (((('1166744739')>>('900630211')), (('900630211')OR('<')), ((NULL)<(NULL)))) AND ((((x'')<('_?pR')), TRIM(DISTINCT '-2059205636'), ((NULL)/(0.7967429807999761)))))); -- 0ms;
SELECT ALL (+ (((rt0.c0)<(vt0.c0)))) FROM rt0, v0 WHERE ((- (((-1339330416)LIKE(0xfffffffff32c0f2e)))));SELECT ((MAX(rt0.c0))+((+ (vt0.c0)))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (rt0.c0) AND (NULL))) NOTNULL) FROM vt0;SELECT DISTINCT 0x59f618fe FROM v0 WHERE ((NOT ('707196857')) COLLATE RTRIM); -- 3ms;
SELECT DISTINCT (vt0.c0 IN ('')) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN '-2084165383' THEN rt0.c0 END)) AND ((x''))) FROM vt0 WHERE (((HEX(NULL))||(-6.16954454E8 COLLATE NOCASE)));SELECT DISTINCT ((((rt0.c1 COLLATE RTRIM)AND(CAST(x'' AS BLOB))))AND(vt0.c0)), ((rt0.c1)!=(CASE WHEN v0.c0 THEN rt0.c0 END)), CASE ((rt0.c1)OR(rt0.c0))  WHEN COALESCE(DISTINCT rt0.c0, 900630211) THEN ((vt0.c0)>>(rt0.c0)) END FROM vt0, v0 WHERE ((((((((((((((('-1621670153')AND('0.5531807971793287')))AND(x'')))OR(NULL)))OR(0.5994326313449928)))AND(NULL)))OR(0.6119102167509523)))AND(0.22242430165934945))) LIMIT -1433475298 OFFSET 873193629;SELECT DISTINCT MIN(CASE v0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE v0.c0 END) FROM v0, rt0, vt0 WHERE ((((((0Xffffffffbad6c5d7) BETWEEN (NULL) AND (x'c4d8'))))<=(((- (0Xffffffffaf9675f7)))))) ORDER BY (('' COLLATE NOCASE)GLOB(rt0.c1)), ((CAST(rt0.c0 AS REAL)) NOT NULL)  NULLS FIRST; -- 0ms;
SELECT RANK() OVER () FROM rt0, v0, vt0 WHERE (IFNULL(DISTINCT (('-1012176919')IS NOT(0.4535006283564633)), ((((0.05021058275668133)AND('')))AND('')))); -- 0ms;
SELECT DISTINCT ((TRIM(rt0.c1)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0))) AND (((rt0.c0)&(rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT ALL CASE WHEN rt0.c1 COLLATE NOCASE THEN (rt0.c2 IN (rt0.c0, rt0.c2)) END, ((((vt0.c0) ISNULL))==(rt0.c0 COLLATE RTRIM)), (CASE WHEN rt0.c1 THEN '-1612105774' WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END IN (((-2.15216338E8) ISNULL), (('0.7934812567460686') NOT NULL))) FROM rt0;SELECT ALL (((rt0.c0, rt0.c1, vt0.c0)) BETWEEN ((((rt0.c0)GLOB(v0.c0)), ((((rt0.c0)OR(rt0.c1)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN rt0.c1 ELSE x'' END)) AND ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)), ((rt0.c1)<=(vt0.c0)), DATE(rt0.c0, v0.c0, vt0.c0)))) FROM v0 WHERE ((((('' COLLATE RTRIM)OR((+ ('')))))AND(((0.5184325579949636) BETWEEN (0Xffffffffb3d74a1a) AND ('0.023847400226545967')))));SELECT (+ ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT NTILE(((UPPER(DISTINCT vt0.c0))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.5807694018324632 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) OVER ( PARTITION BY CASE WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE v0.c0 END THEN (((('-372866261')AND(NULL)))AND(v0.c0)) END, (~ (((v0.c0) NOT NULL)))) FROM vt0;SELECT ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c0 THEN NULL ELSE rt0.c2 END)%(((rt0.c2) NOTNULL))) FROM vt0, rt0, v0 ORDER BY x'' ASC; -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1))) IS TRUE) FROM v0 ORDER BY vt0.c0;SELECT DISTINCT CAST((((vt0.c0))!=((rt0.c0))) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((COUNT(*))+(((((vt0.c0)AND(v0.c0)))AND(rt0.c1)))) FROM v0, rt0, vt0 WHERE (((CASE WHEN NULL THEN x'a311' END)<>((('') IS FALSE)))); -- 0ms;
SELECT ALL CASE WHEN QUOTE(rt0.c1) THEN ((rt0.c0)==(931594153)) ELSE CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END END, rt0.c2, (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1)))) BETWEEN (TOTAL(vt0.c0)) AND (((v0.c0)<(rt0.c2)))) FROM vt0, v0;SELECT DISTINCT CAST((((rt0.c1))<((0xffffffffb8646beb))) AS REAL) FROM vt0, rt0 WHERE ((((0.9727882085312428, '7', x'')) NOT BETWEEN ((json_extract(-2.059205636E9, x''), ((NULL)>=(NULL)), CASE WHEN '-1426080190' THEN '1488968968' END)) AND ((CAST(x'' AS NUMERIC), (+ ('-2053108631')), (('') BETWEEN (NULL) AND ('')))))) EXCEPT SELECT DISTINCT SUM(ABS(rt0.c1)) OVER () FROM v0;SELECT (- (((x'')|(rt0.c1)))) FROM rt0 WHERE (((((-1160329769 IN (NULL, 0.023847400226545967)), CASE WHEN 0.5936616293172479 THEN '692749496' WHEN 0.7006238316677804 THEN NULL WHEN 'tcDA' THEN NULL ELSE NULL END, ((((NULL)OR(x'')))AND('嗔'))))<(((((('2009031630')OR(x'')))OR(x'')), (NOT ('-842869001')), CASE WHEN x'9c48' THEN '-27163521' END)))); -- 0ms;
SELECT '' FROM rt0 CROSS JOIN v0 ON ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (ABS('58815148')) AND (rt0.c0 COLLATE NOCASE));SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((('D')OR(x'')))OR(0.22242430165934945)) IN ())); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY), (NOT (rt0.c0 COLLATE BINARY)), LIKE(((((((((((((v0.c0)AND(rt0.c0)))OR(-2.089891275E9)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)), (NOT (rt0.c2))) FROM v0 WHERE (((((' \n') BETWEEN ('1r') AND (0.46744468731228017))) IS TRUE)) GROUP BY CAST(rt0.c1 AS INTEGER), ((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c1)&(vt0.c0)))))AND(rt0.c0)), CAST(vt0.c0 AS BLOB) COLLATE BINARY HAVING CASE TYPEOF(rt0.c2)  WHEN UNLIKELY(vt0.c0) THEN rt0.c2 COLLATE BINARY ELSE ((vt0.c0)IS NOT(rt0.c2)) END;SELECT (((+ (rt0.c1)))<<(SQLITE_COMPILEOPTION_USED(v0.c0))) FROM v0 WHERE (((((0.11749562939028879) NOT BETWEEN (0.4535006283564633) AND ('673081496'))) ISNULL));SELECT MAX(((vt0.c0) IS FALSE) COLLATE BINARY) FROM v0, vt0, rt0 ORDER BY (((v0.c0))>=((rt0.c0 COLLATE BINARY))) DESC  NULLS LAST, ((((rt0.c1)GLOB(rt0.c0)))&((((rt0.c1))<=((v0.c0))))) DESC; -- 0ms;
SELECT DISTINCT ((((v0.c0) ISNULL)) NOT BETWEEN (TRIM(DISTINCT rt0.c2, rt0.c2)) AND (rt0.c1)) FROM v0, rt0, vt0 LIMIT -1643968259; -- 0ms;
SELECT DISTINCT ((COALESCE(rt0.c2, vt0.c0))%(((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0)))) FROM vt0, v0;SELECT ALL CAST(CAST(vt0.c0 AS TEXT) AS REAL) FROM vt0, v0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(((v0.c0)*('166480124'))) FROM vt0, v0 WHERE ((CAST(x'' AS INTEGER) IN ())); -- 0ms;
SELECT ((((v0.c0) IS FALSE))>(((rt0.c1) BETWEEN (x'') AND (rt0.c0)))) FROM v0;SELECT ALL ((((rt0.c2)<<(rt0.c0))) NOT BETWEEN (CHANGES()) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) FROM vt0;SELECT DISTINCT ((((rt0.c2)<>(vt0.c0))) NOTNULL) FROM v0, rt0, vt0 WHERE ((((((('-1818837766') NOT BETWEEN (0.274532556952351) AND ('326423322')))OR(CASE WHEN 0.48259901277867623 THEN 0.9816886323468555 WHEN x'' THEN '560341472' WHEN NULL THEN x'fd74' END)))AND(((x'')%('1879245955'))))) GROUP BY rt0.c1 ORDER BY (((+ (vt0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))); -- 0ms;
SELECT ALL CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT), (NOT ((NOT (vt0.c0)))), ((v0.c0 COLLATE RTRIM) NOTNULL) FROM v0, vt0 WHERE (CASE WHEN (x'' IN ()) THEN (('-1238110105')IS NOT(0.161569392047756)) WHEN ((x'')AND(x'')) THEN (((x''))>(('1150185454'))) WHEN 0xffffffff917c4c56 COLLATE RTRIM THEN NULL COLLATE BINARY END) GROUP BY rt0.c0;SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) IS TRUE) FROM rt0, vt0 LIMIT -1433475298;SELECT DISTINCT ((((vt0.c0)<(rt0.c2)))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), ((((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<>((((v0.c0)IS(vt0.c0))))), ((GROUP_CONCAT(rt0.c2))=(MAX(rt0.c2, rt0.c2, rt0.c2, v0.c0))) FROM v0, rt0, vt0 WHERE ((~ ('UycDCP᣾<')) COLLATE BINARY); -- 4ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c0 THEN x'' ELSE rt0.c0 END THEN (((rt0.c0))<=((v0.c0))) WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) WHEN rt0.c0 THEN ((v0.c0)OR(rt0.c0)) END FROM vt0;SELECT DISTINCT COUNT(*) OVER ( ROWS BETWEEN  CURRENT ROW AND CAST(CAST(v0.c0 AS BLOB) AS TEXT) FOLLOWING), (((((rt0.c2) IS FALSE)))>=((((rt0.c1) BETWEEN (x'') AND (vt0.c0))))), ((((((((((rt0.c0)LIKE(rt0.c1)))AND(SUBSTR(rt0.c2, rt0.c2))))AND(CAST(NULL AS INTEGER))))AND(CASE WHEN vt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) NOTNULL))) FROM v0 GROUP BY CAST(CASE WHEN rt0.c0 THEN 'R\n3''sT(' ELSE rt0.c0 END AS TEXT) LIMIT 2051181769;SELECT DISTINCT CASE WHEN ((rt0.c0) IS TRUE) THEN (rt0.c1 IN ()) END FROM rt0, v0 WHERE (CAST(CASE x''  WHEN NULL THEN NULL WHEN 0x57fe2d30 THEN 0X52b4cd96 WHEN 0.7641330930487136 THEN 'g_' ELSE x'' END AS BLOB)); -- 0ms;
SELECT (+ ((((rt0.c2))<=((rt0.c1))))) FROM rt0, vt0, v0; -- 0ms;
SELECT RANK() OVER () FROM vt0, rt0, v0 GROUP BY (((x'13c9')&('a\rPm?Q')) IN ()), (- (CASE WHEN 0.44696943099516306 THEN v0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN x'2e03' END)), ((((((((((rt0.c0) IS FALSE))OR(((v0.c0)<(rt0.c1)))))AND(-1709308858)))AND(((v0.c0)<<(rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))); -- 0ms;
SELECT ALL ((((v0.c0) NOT NULL))+(((('<8')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM vt0 WHERE (ABS((((-1.277736422E9))!=((''))))) GROUP BY (+ (UPPER(rt0.c2))) HAVING (~ (vt0.c0));SELECT DISTINCT AVG((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) FROM v0 WHERE (LOWER(0.1575238153516988) COLLATE RTRIM);SELECT ALL vt0.c0, TOTAL(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END), INSTR(((rt0.c1) NOTNULL), ((v0.c0) NOT NULL)) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CAST(rt0.c1 AS BLOB)) BETWEEN (rt0.c0) AND ((((v0.c0))<=((rt0.c1))))) WHERE ((+ (x'0af5')) COLLATE BINARY);SELECT ALL highlight(CAST(rt0.c1 AS REAL), rt0.c2 COLLATE BINARY, LIKELY(v0.c0), (NOT (v0.c0))) FROM rt0;SELECT DISTINCT CASE 0.21683681675886923  WHEN (((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((72571428, rt0.c0, v0.c0)) AND ((v0.c0, rt0.c2, vt0.c0))) THEN (NOT (x'')) WHEN ((rt0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN (~ ('훷Dgo\KM\n')) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (NULL)) WHEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c2)) THEN 0x575832d6 WHEN (0xffffffffe08f830a IN ()) THEN (- (vt0.c0)) ELSE ((vt0.c0)+(rt0.c1)) END FROM rt0, vt0;SELECT DISTINCT (((rt0.c1, '%bv', rt0.c0)) NOT BETWEEN ((((rt0.c2)&(v0.c0)), ((rt0.c0) ISNULL), (+ (rt0.c1)))) AND ((CAST(v0.c0 AS INTEGER), CAST(rt0.c0 AS TEXT), AVG(vt0.c0)))) FROM vt0 WHERE (((((('-1585726269', NULL, x'')) NOT BETWEEN ((NULL, NULL, x'afa0')) AND (('0.4897236748969662', NULL, '-1085158211'))))/((- (x'a4d1')))));SELECT ALL LOWER(DISTINCT vt0.c0) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL) FROM v0, rt0 WHERE ((((1.255525593E9, x'', 0.25007502203883314)) NOT BETWEEN (((x'' IN ()), TYPEOF(0.35573498253933133), (NOT ('546164183')))) AND ((((NULL) IS FALSE), (('-1201378325')*(0.005621945339188805)), ((NULL)-('-0.0'))))));SELECT ALL ((CASE WHEN vt0.c0 THEN rt0.c1 END)-(((rt0.c0) ISNULL))) FROM v0 WHERE (((LIKELIHOOD('-1621670153', 0.6967877779781403))<=((((((((('qpd.c''m]')OR('RI')))AND(x'')))OR('s/(^')))OR(0.4535006283564633)))));SELECT DISTINCT (~ ('1j8炐')) FROM vt0 WHERE ((CAST(x'5d99' AS TEXT) IN (CAST(0.23519492590801228 AS TEXT), (NOT (x''))))) ORDER BY ((((((((((rt0.c0) IS TRUE))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))AND(((rt0.c1)<(v0.c0)))))AND(((((v0.c0)OR(rt0.c2)))AND(vt0.c0)))))OR((NOT (rt0.c2)))) DESC  NULLS FIRST;SELECT DISTINCT IFNULL(DISTINCT ((((rt0.c0)OR(rt0.c2)))OR(v0.c0)), (- (rt0.c0))) FROM rt0;SELECT (- (CASE x''  WHEN '1200935456' THEN rt0.c1 END)) FROM v0, vt0, rt0 WHERE (((((NULL) NOTNULL)) NOT BETWEEN ((0.1067277272838364 IN ())) AND ((((0.27097568007864015))>=((0.09219956794105788)))))) ORDER BY (((((((((((((v0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(1037844792)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) IN ()) DESC  NULLS LAST LIMIT -1426080190 OFFSET -1812944353; -- 0ms;
SELECT ALL NULL, TRIM(rt0.c1), ((CASE WHEN v0.c0 THEN '' END)==(((((((((rt0.c2)OR(rt0.c2)))AND(NULL)))AND(rt0.c1)))OR(vt0.c0)))) FROM vt0;SELECT ALL '0.3553827821778125', (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE v0.c0 END)) AND ((CASE WHEN vt0.c0 THEN '' ELSE rt0.c0 END))), ((((((x'')OR(rt0.c1)))AND(rt0.c0)))>>((((rt0.c1, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))))), ((CAST(v0.c0 AS BLOB)) NOT NULL), GROUP_CONCAT(((((((((v0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)) COLLATE BINARY) OVER () FROM v0, rt0 WHERE (((((NULL)AND(NULL)))OR(692749496)) COLLATE NOCASE COLLATE BINARY) GROUP BY ((('1151740767', vt0.c0 COLLATE BINARY, ((rt0.c0) IS FALSE)))>=(((rt0.c2 IN (v0.c0, rt0.c1)), ((v0.c0) ISNULL), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))));SELECT DISTINCT (((NOT (rt0.c0))) IS TRUE), (GROUP_CONCAT(vt0.c0) IN ()), MAX(CAST(rt0.c1 AS INTEGER)) FROM vt0, rt0, v0 WHERE (((CASE WHEN '215526601' THEN NULL ELSE '' END)<=((('') NOT BETWEEN ('+\n') AND (0.07809768563324027))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM v0, rt0 WHERE ((((((((-1.60951333E9, NULL, NULL)) BETWEEN ((NULL, '1348985178', NULL)) AND ((0xffffffffaa36cb76, 0xffffffff9a1e0446, ''))))AND(CAST('-1065509363' AS NUMERIC))))AND(CASE WHEN NULL THEN 'f\\r' END)));SELECT ALL 'N)' FROM v0, rt0 WHERE (CASE (('-1609513330')GLOB(0.3553827821778125))  WHEN CAST(x'' AS INTEGER) THEN (('') BETWEEN (0x5d7db942) AND (2109349549)) ELSE NULL END) GROUP BY ((LIKELIHOOD(DISTINCT rt0.c0, 0.3067154511516804)) NOT BETWEEN (((rt0.c2)-(v0.c0))) AND (((vt0.c0) IS FALSE))), rt0.c2, ((rt0.c1)<<(rt0.c0)) COLLATE NOCASE HAVING (((((vt0.c0))>=((v0.c0)))) NOT NULL) LIMIT -619651570;SELECT ALL CASE (((rt0.c0, rt0.c1, rt0.c1))!=((rt0.c2, rt0.c2, rt0.c2)))  WHEN (((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN vt0.c0 COLLATE RTRIM END FROM rt0, v0, vt0 WHERE ((((0.7090106390597203) BETWEEN (-1621670153) AND (NULL)) IN ())); -- 1ms;
SELECT DISTINCT (((+ (v0.c0))) NOT BETWEEN (((vt0.c0)IS(v0.c0))) AND (((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)))), (('673081496')+(((rt0.c1)||(vt0.c0)))), v0.c0, (('0.5262276130512165')AND(CASE WHEN vt0.c0 THEN rt0.c1 END)), ((CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END) IS TRUE) FROM v0, vt0, rt0; -- 0ms;
SELECT ALL 0.3553827821778125 FROM rt0; -- 0ms;
SELECT ALL 0.38096555123855236 FROM vt0; -- 0ms;
SELECT ALL ((((NOT (''))))<=((UNLIKELY(v0.c0)))) FROM rt0 WHERE (TRIM(DISTINCT ((NULL)AND(-202938634))));SELECT DISTINCT GROUP_CONCAT(NULL), (((CAST(0.9929769687772068 AS TEXT)))<(((((((((('0.0')OR(rt0.c1)))AND(rt0.c1)))OR('y0')))OR('-1349093897'))))), CAST(((rt0.c1)%(vt0.c0)) AS TEXT), ((x'86d9') BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) AND (COUNT(v0.c0))), (((rt0.c2)) BETWEEN (((+ (rt0.c2)))) AND (((- (v0.c0))))) FROM rt0, v0 WHERE (((((x'') ISNULL))IS NOT((((('n\n')OR(x'')))AND(x'')))));SELECT DISTINCT RANK() OVER ( ORDER BY (+ (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, (((CAST(v0.c0 AS TEXT)))>((((rt0.c0)LIKE(vt0.c0))))) DESC  NULLS LAST, ((('8,7*3', ((v0.c0)<(rt0.c0)), ((rt0.c1) NOT NULL), (rt0.c1 IN ()), ''))<=((((rt0.c2)/(v0.c0)), x'a55e', 0.5338569644761846, CASE '-618719225'  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END, x'4f8d')))  NULLS FIRST), (IFNULL(rt0.c1, v0.c0) IN (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)), (~ (rt0.c1)) COLLATE BINARY FROM vt0 WHERE (((((((0.12794308992759207) NOTNULL))OR(((((x'c2f0')AND(NULL)))AND(0.23300388709705566)))))OR((((x'', '0.38096555123855236', 0.13972009054746626))!=((x'', '-537849904', '⪦⋚aC>q'))))));SELECT DISTINCT (GROUP_CONCAT(v0.c0) IN ()), (((rt0.c1)) BETWEEN ((CAST(0.991753336027794 AS NUMERIC))) AND ((MIN(rt0.c1)))), COUNT(*) FROM vt0, v0 WHERE ((('n]5V屉97') IS FALSE) COLLATE NOCASE);SELECT DISTINCT (((((rt0.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0, NULL, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2, v0.c0, v0.c0))))/((((rt0.c0, v0.c0, v0.c0))<=((rt0.c1, v0.c0, vt0.c0))))), ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) IN ()), ((((rt0.c1)+(rt0.c0))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (((v0.c0)|(vt0.c0)))) FROM v0, rt0, vt0 LIMIT 560341472 OFFSET -1824733435; -- 0ms;
SELECT DISTINCT NTILE(v0.c0 COLLATE NOCASE COLLATE RTRIM) OVER (), MAX((+ (v0.c0))), (~ (v0.c0 COLLATE BINARY)) FROM v0;SELECT DISTINCT ((MAX(rt0.c0, rt0.c1))>>((NOT ('怍u1j5-')))), (((((rt0.c2) BETWEEN (x'') AND (v0.c0)), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((v0.c0)OR(vt0.c0)))OR(v0.c0))))=((rt0.c0, (- (rt0.c1)), '-1579289334'))), vt0.c0 FROM v0, rt0 WHERE (((('542628182'))!=((((NULL) IS FALSE)))));SELECT DISTINCT rt0.c2 FROM vt0 GROUP BY (- (v0.c0 COLLATE RTRIM)) ORDER BY ((NULL)<>(UNLIKELY(v0.c0)))  NULLS LAST;SELECT rt0.c2, (((rt0.c2 IN ())) NOT BETWEEN (((v0.c0)GLOB(v0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))), (((rt0.c2 IN ())) BETWEEN (((rt0.c1) ISNULL)) AND (MAX(rt0.c0))) FROM rt0, v0 WHERE (((((x'7d10')*(0.321801092681825)))LIKE('oe' COLLATE BINARY))) ORDER BY (- ((- (rt0.c1)))) LIMIT -1800410111 OFFSET -2084165383; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))GLOB(((rt0.c0) NOTNULL))), ((COUNT(rt0.c1)) NOTNULL), ((CAST(vt0.c0 AS NUMERIC))/(MAX(rt0.c2))) FROM rt0, v0 GROUP BY ((((CASE WHEN v0.c0 THEN rt0.c1 END)OR(rt0.c1)))AND((v0.c0 IN ()))) HAVING ((v0.c0) BETWEEN (NULLIF(vt0.c0, rt0.c1)) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))));SELECT ((((((v0.c0) NOT BETWEEN (0.46775421087945623) AND (NULL)))OR(CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (0x58bfdd08)))) FROM vt0, v0 WHERE ('-1916908278');SELECT DISTINCT (((((rt0.c0, v0.c0, rt0.c0)) NOT BETWEEN ((NULL, rt0.c2, rt0.c1)) AND ((rt0.c1, v0.c0, rt0.c2))))LIKE((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, x'6739')) AND ((rt0.c2, rt0.c1, rt0.c1))))) FROM vt0, rt0 WHERE ((((0.9578064652937267) IS TRUE) IN ())) ORDER BY CAST((NOT (rt0.c0)) AS TEXT);SELECT rt0.c1 FROM rt0, vt0 WHERE (((('-676080191' IN ()))GLOB(((((((((-145894274)OR(NULL)))OR('{-')))OR(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT rt0.c2, LENGTH(v0.c0), CUME_DIST() OVER (), ((((((((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))OR((NOT (rt0.c2)))))OR(((((rt0.c1)AND(v0.c0)))AND(vt0.c0)))))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(((v0.c0) NOT NULL))), ((rt0.c1 IN ()) IN ((rt0.c2 IN ()), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))) FROM vt0, rt0, v0 WHERE ((+ ('f]2*^壤쿖')) COLLATE RTRIM); -- 0ms;
SELECT ALL CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT UNICODE(((rt0.c0)*(rt0.c0))) FROM rt0, v0, vt0 WHERE (((TRIM(x''))<=(((((((((NULL)OR('tA1鱷#2')))AND('ri')))OR('1200935456')))AND(0.3821761334146503))))); -- 0ms;
SELECT DISTINCT (((rt0.c1))==((CASE WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 END))), ((((((((((((((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))OR(((rt0.c0)LIKE(rt0.c1)))))AND(TYPEOF(rt0.c1))))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(x'682e')))AND(((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))), ABS(DISTINCT CAST(NULL AS BLOB)) FROM rt0;SELECT DISTINCT CASE (((vt0.c0, vt0.c0, rt0.c2))>((0.37530840262210197, rt0.c0, v0.c0)))  WHEN ((vt0.c0)LIKE(rt0.c0)) THEN v0.c0 END, -1612105774, LIKELIHOOD(DISTINCT ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), 0.8682840658271965) FROM vt0, rt0, v0 WHERE (((((NULL)%(NULL))) IS TRUE)); -- 1ms;
SELECT DISTINCT x'', LAG(0.5262276130512165, ((0.6715795366480196) BETWEEN (rt0.c1) AND (vt0.c0)) COLLATE NOCASE COLLATE BINARY, (((vt0.c0, rt0.c0, '-213689365')) NOT BETWEEN ((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2)), ((((((((v0.c0)OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)), (((v0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, v0.c0)) AND ((v0.c0, 0.4212460854734976, v0.c0))))) AND ((((rt0.c1) BETWEEN (rt0.c1) AND ('-1473813498')), (v0.c0 IN ()), ((v0.c0)+(NULL)))))) OVER (), MAX(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) FROM vt0, v0, rt0 WHERE ((((((+ (-2.5784954E7)))OR(((0.06937389615508949)%(NULL)))))OR(CASE WHEN NULL THEN x'' END))); -- 0ms;
SELECT CAST(UPPER(DISTINCT vt0.c0) AS NUMERIC) FROM rt0 INNER JOIN v0 ON ((rt0.c0) IS FALSE) FULL OUTER JOIN vt0 ON (((+ (v0.c0)))|(((rt0.c0)>(vt0.c0)))) WHERE (CASE WHEN ((x'') NOT NULL) THEN (('-422464233') NOT BETWEEN (NULL) AND (x'604d')) WHEN CHANGES() THEN (('0.27097568007864015') NOT NULL) WHEN highlight('-1345324560', 0Xffffffffb633f067, '1255525593', '0.37530840262210197') THEN ((((x'')OR(NULL)))OR(x'')) END); -- 1ms;
SELECT DISTINCT (~ (NULL)), LENGTH(COUNT(v0.c0)), (((((v0.c0))==((vt0.c0)))) NOTNULL), rt0.c1, ((CASE 0.530777739298346  WHEN vt0.c0 THEN rt0.c0 END) IS FALSE) FROM vt0, rt0;SELECT DISTINCT (((vt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN (((((NULL))<((rt0.c2))), rt0.c2, rt0.c1 COLLATE NOCASE, (NOT (rt0.c0)), MIN(v0.c0))) AND ((((rt0.c2)<(vt0.c0)), (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), CASE WHEN 933007121 THEN rt0.c2 END, vt0.c0 COLLATE RTRIM, CAST(rt0.c2 AS REAL)))) FROM rt0, v0, vt0 WHERE (CASE CASE WHEN '1763922036' THEN '-1024767010' END  WHEN ABS(0X6305f2eb) THEN CAST(NULL AS REAL) WHEN ((NULL)*(0.411384685741229)) THEN (+ ('')) WHEN (~ ('')) THEN (~ (x'')) WHEN (((NULL, -1628583748, 0.010916962982866596)) NOT BETWEEN ((NULL, x'', NULL)) AND ((0.8104221884134284, '-&rߕU}wEO', 0.46744468731228017))) THEN (((x'')) BETWEEN ((x'93a4')) AND ((NULL))) WHEN CAST('939007057' AS TEXT) THEN (('O1') ISNULL) END) GROUP BY ((((TYPEOF(DISTINCT rt0.c2))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))))AND(((rt0.c0)<<(rt0.c2)))), ((CASE v0.c0  WHEN vt0.c0 THEN rt0.c0 END)<(((((v0.c0)AND(vt0.c0)))AND(rt0.c2)))), LOWER(((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c0))) HAVING (((((~ (rt0.c2)))OR(v0.c0)))AND(((v0.c0) BETWEEN (rt0.c2) AND ('U曛~[')))); -- 0ms;
SELECT ALL ((CASE WHEN v0.c0 THEN x'' END)OR(vt0.c0 COLLATE BINARY)) FROM vt0, rt0, v0 WHERE ((((x'464b')) NOT BETWEEN ((((x'')<<(-1.812944353E9)))) AND ((553853820 COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT (+ (((((((((((((v0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))) FROM v0, rt0 WHERE (CASE WHEN 'h[|d*!E6' THEN NULL WHEN 0.9262126784151938 THEN '1915530944' WHEN x'4793' THEN x'' ELSE 0.702482888525174 END COLLATE NOCASE) LIMIT 2134012067; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c2)*(rt0.c0)) THEN (- (vt0.c0)) WHEN (vt0.c0 IN (v0.c0)) THEN LIKE(rt0.c1, rt0.c2, '7') WHEN rt0.c1 THEN json_remove(rt0.c0, v0.c0, rt0.c0, rt0.c2) ELSE CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END END, ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN ((+ (vt0.c0))) AND ((((vt0.c0, v0.c0, v0.c0))>=((rt0.c0, rt0.c1, x''))))), ((CAST(NULL AS REAL))%(COUNT(*))), ((0.7543576065967292)&((((vt0.c0, rt0.c0, x''))!=((rt0.c1, rt0.c0, v0.c0))))), CHAR(((rt0.c0)<(vt0.c0))) FROM rt0, v0;SELECT DISTINCT 0.7996798710194134 FROM vt0, rt0 WHERE ((((((NULL)) BETWEEN ((x'6d28')) AND (('e&a+a.g')))) IS FALSE)) GROUP BY ((CAST('' AS INTEGER)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND ('374493557'))) AND (((rt0.c1) ISNULL))) HAVING ((NULL)LIKE(((NULL)OR(rt0.c0)))); -- 0ms;
SELECT DISTINCT ((v0.c0) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c2)GLOB(rt0.c2)))) FROM rt0, v0 WHERE (json_valid((x'd3ff' IN ('931633467', x'274a')))); -- 1ms;
SELECT CAST(CAST(0.21683681675886923 AS TEXT) AS TEXT) FROM vt0 WHERE (TRIM(DISTINCT ((NULL) BETWEEN ('-202938634') AND (NULL)), (+ ('/pH\rz')))); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(((vt0.c0)-(v0.c0))) FROM vt0, rt0;SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))%(((((rt0.c2)AND(vt0.c0)))OR(v0.c0)))) FROM rt0, v0 LEFT OUTER JOIN vt0 ON (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 END IN ((('1149224072')%(vt0.c0)), (+ (v0.c0)))); -- 0ms;
SELECT DISTINCT ((v0.c0) NOTNULL) COLLATE NOCASE, (NOT ((rt0.c2 IN ()))), (((v0.c0)) BETWEEN (((rt0.c1 IN (rt0.c1)))) AND (((NOT (v0.c0))))) FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT COUNT(*), (NOT (((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))), (((MIN(v0.c0), vt0.c0, CAST('eE#҆Ewq(' AS BLOB)))<=(((((rt0.c2, v0.c0, rt0.c1))!=(('72571428', rt0.c1, rt0.c2))), (- (rt0.c0)), ((vt0.c0)*(v0.c0))))) FROM rt0 WHERE (((CAST(0.7996798710194134 AS REAL)) BETWEEN (((('嗺', NULL, x'7cb2', 0.9136445442590019, 0xffffffff99927911)) NOT BETWEEN ((-1347596845, '0.530777739298346', NULL, '-417956423', NULL)) AND ((x'a9ac68bd', 3.76741781E8, NULL, '-1189195765', 0.8528869216092357)))) AND (((('ina/]r()'))<((x'')))))) ORDER BY ABS(((((((((v0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(v0.c0)))AND(v0.c0))), (((((rt0.c0) ISNULL)))==((((v0.c0)<=(v0.c0))))) ASC, x'' DESC;SELECT (((((((rt0.c0)OR(v0.c0)))OR(rt0.c2))))>((((rt0.c0)>(v0.c0))))) FROM rt0 WHERE ((((('1056529532') ISNULL))+((NULL IN ())))) LIMIT 942155342;SELECT DISTINCT (NOT (rt0.c2)), ((((((NULL)AND(rt0.c0)))OR(rt0.c0)))=(LIKELY(DISTINCT v0.c0))), x'58b1f633' FROM vt0, rt0, v0 WHERE (((NULL COLLATE NOCASE)IS NOT(CAST(NULL AS BLOB)))) GROUP BY (NOT (((((((((rt0.c1)AND(v0.c0)))AND(rt0.c1)))AND(v0.c0)))AND(NULL)))) HAVING 0.2367646901607685 ORDER BY (((((rt0.c2)GLOB(v0.c0))))=((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) ASC, ((((rt0.c1, v0.c0, v0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0, vt0.c0, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c2, v0.c0, rt0.c0))) IN (((((((((v0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0))))  NULLS LAST LIMIT -262933902 OFFSET 58815148; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS BLOB) FROM vt0, v0 WHERE ((+ (NULL)) COLLATE BINARY) ORDER BY '&W)lec' ASC; -- 0ms;
SELECT DISTINCT ((((((((((((0.4751355230363792)OR(v0.c0)))OR(rt0.c1)))OR(v0.c0)))AND(rt0.c2)))AND('Infinity')))OR(0.14158596251708255)) COLLATE BINARY FROM vt0 INNER JOIN rt0 ON ((((((((((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((+ (rt0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.7090106390597203 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)))AND(v0.c0)) WHERE ((((((((((('')OR('1587768797')))AND(x'8285')))OR('1151740767')))OR(x'')))|((~ (x'')))));SELECT ALL '1425851135' COLLATE BINARY, (vt0.c0 IN ()), (((rt0.c2)) BETWEEN ((NULLIF(rt0.c2, v0.c0))) AND ((x''))) FROM vt0;SELECT DISTINCT ((HEX(rt0.c2))%(((vt0.c0)/(vt0.c0)))), ((((COUNT(*))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(((((((((rt0.c0)AND('-1772475738')))AND(rt0.c2)))OR(rt0.c1)))OR('?*')))), vt0.c0 FROM v0, rt0 WHERE ((((x'')IS('2 YF0')) IN ()));SELECT (((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((v0.c0, rt0.c2, v0.c0)))) BETWEEN (NULLIF(DISTINCT rt0.c0, v0.c0)) AND (CASE WHEN vt0.c0 THEN '0.023847400226545967' END)) FROM v0, rt0, vt0 ORDER BY TYPEOF(((rt0.c2)>>(v0.c0))) ASC; -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt0;SELECT ALL (((v0.c0 IN ()))OR(((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) FROM v0, rt0, vt0; -- 0ms;
SELECT DISTINCT UPPER(rt0.c1) FROM rt0, v0; -- 0ms;
SELECT ALL CAST(((rt0.c2)+(rt0.c1)) AS BLOB) FROM vt0;SELECT DISTINCT ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(0.9031071991465736)))AND(vt0.c0)) COLLATE RTRIM, (((rt0.c2))==((((rt0.c0) ISNULL)))), TOTAL(CASE WHEN rt0.c2 THEN v0.c0 END) FILTER(WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN (CASE rt0.c2  WHEN x'e371' THEN v0.c0 END))) OVER () FROM vt0, v0;SELECT DISTINCT '' COLLATE BINARY FROM vt0 NOT INDEXED, rt0, v0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(rt0.c0 COLLATE NOCASE, 0.37666405306967743), CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END THEN ((rt0.c0) IS TRUE) ELSE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END END, ROW_NUMBER() OVER () FROM rt0 WHERE ((~ ('0.2367646901607685' COLLATE NOCASE)));SELECT ((((((vt0.c0)<=(vt0.c0)))OR(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)))AND(((v0.c0)/(rt0.c2)))) FROM rt0 WHERE (((((x'') NOT BETWEEN (x'') AND (NULL)))/(((NULL)+(0.2892293668615422))))) ORDER BY CAST(CAST(rt0.c0 AS NUMERIC) AS BLOB)  NULLS LAST;SELECT ALL ((rt0.c2 COLLATE NOCASE) BETWEEN (((rt0.c1)AND(v0.c0))) AND (((rt0.c0)=(rt0.c1)))) FROM v0, vt0, rt0; -- 0ms;
SELECT CASE MIN(rt0.c1)  WHEN ((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(x'')) THEN CAST(rt0.c2 AS NUMERIC) END, (- (v0.c0 COLLATE BINARY)), (((- (rt0.c1)))<=(CASE WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN rt0.c0 THEN '' END)) FROM rt0;SELECT DISTINCT ((((rt0.c2)OR(v0.c0)))<<(((((vt0.c0)OR('3)G䍂Q^Sa')))AND(vt0.c0)))) FROM v0, rt0, vt0 WHERE (((('vc)>)')) NOT BETWEEN (((('-1824220845') NOT NULL))) AND (((('K>')IS NOT(NULL)))))); -- 0ms;
SELECT DISTINCT ((((((((COUNT(*))OR(CASE WHEN v0.c0 THEN rt0.c0 ELSE vt0.c0 END)))AND(COUNT(*))))AND(NULLIF(vt0.c0, v0.c0))))OR(vt0.c0 COLLATE BINARY)), (((~ (rt0.c0)))&(GROUP_CONCAT(rt0.c1))), IFNULL(v0.c0 COLLATE NOCASE, '202606383') FROM rt0, v0 NOT INDEXED, vt0; -- 0ms;
SELECT ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)-(MIN(v0.c0))) FROM vt0, v0, rt0 WHERE ((+ (CASE -1310955427  WHEN 0.3907215829400673 THEN '-345280590' WHEN -940329569 THEN x'' WHEN 0.6515185458669353 THEN NULL ELSE 0.7681827191183209 END))); -- 1ms;
SELECT ALL NTILE(vt0.c0) OVER (), ((TOTAL(rt0.c0))<=((((v0.c0, vt0.c0, rt0.c2))<((rt0.c2, v0.c0, rt0.c0))))), v0.c0, CAST((NOT (rt0.c1)) AS REAL), TOTAL(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2))) OVER () FROM vt0 GROUP BY vt0.c0;SELECT (~ (json_object(vt0.c0, v0.c0, vt0.c0, rt0.c2))) FROM rt0, v0;SELECT DISTINCT CASE WHEN rt0.c0 THEN v0.c0 WHEN (((rt0.c1))<((v0.c0))) THEN CASE WHEN rt0.c2 THEN v0.c0 END WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN '-202938634' THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 END THEN MAX(rt0.c2) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) END, NULL, (((rt0.c1)) BETWEEN ((load_extension(vt0.c0))) AND ((((vt0.c0) NOT NULL)))) FROM rt0, vt0, v0;SELECT DISTINCT rt0.c0 FROM vt0, rt0, v0 WHERE (((load_extension(0.754029176239309))AND(CASE WHEN 'now' THEN -1.772475738E9 WHEN x'68f9' THEN 0.48804517470890274 WHEN NULL THEN NULL ELSE NULL END))); -- 0ms;
SELECT DISTINCT LTRIM(CASE rt0.c0  WHEN vt0.c0 THEN '-1854124970' END) FROM rt0, v0, vt0; -- 0ms;
SELECT ((((((rt0.c2) IS TRUE))OR(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))))OR(v0.c0 COLLATE NOCASE)), CASE WHEN GROUP_CONCAT(rt0.c2) THEN SQLITE_COMPILEOPTION_USED(rt0.c1) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN json_quote(v0.c0) THEN 'yD/c' ELSE x'' END, (((((rt0.c2 IN ()))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))))AND(CAST(v0.c0 AS TEXT))) FROM rt0 WHERE ((((('-1609513330')/('')))<((x'' IN ('72571428')))));SELECT DISTINCT v0.c0 FROM v0, rt0; -- 0ms;
SELECT ALL ((((LIKELY(DISTINCT rt0.c2))OR(AVG(rt0.c0))))AND((rt0.c2 IN ()))), CASE WHEN ((((v0.c0)OR(rt0.c1)))OR(vt0.c0)) THEN (((rt0.c0))=((rt0.c2))) END, (((rt0.c0)) NOT BETWEEN ((((v0.c0)>>(v0.c0)))) AND ((rt0.c1))) FROM vt0;SELECT DISTINCT ((((((NULL)OR(rt0.c2)))AND(rt0.c2)))>=(x'')) FROM vt0, v0;SELECT DISTINCT NULL FROM v0 WHERE (CAST((0.17831149946357927 IN (NULL)) AS BLOB)); -- 0ms;
SELECT ((vt0.c0)*(rt0.c2 COLLATE NOCASE)) FROM vt0, v0;SELECT (((((rt0.c1)AND(rt0.c1))))>=((CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END))) FROM vt0, v0, rt0; -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) NOTNULL) FROM rt0, v0 WHERE ((((0.9377814317023219 IN (x'')))=(CASE 0x7dba1ead  WHEN 0X4317fa4d THEN '.Lt' END)));SELECT DISTINCT CASE WHEN rt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END FROM v0, vt0 ORDER BY (((0.3279602506054321 IN (v0.c0))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND ((rt0.c1 IN ()))) DESC;SELECT DISTINCT (((rt0.c1, rt0.c2, v0.c0)) BETWEEN ((CAST(vt0.c0 AS BLOB), GROUP_CONCAT(vt0.c0), ((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))) AND ((((rt0.c2) NOTNULL), ((((vt0.c0)OR(rt0.c1)))AND(v0.c0)), 0Xffffffffb3d74a1a))) FROM vt0 LIMIT 215783744 OFFSET -1439249546;SELECT CASE ((rt0.c2)-(rt0.c0))  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE WHEN x'' THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((CHANGES()))), -2118713977 FROM rt0 GROUP BY ((((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0))) BETWEEN (rt0.c0) AND (CASE WHEN 0xffffffffff4ead64 THEN rt0.c2 ELSE rt0.c1 END)), (+ (((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))), (('踙C?8F4') NOT NULL) COLLATE BINARY ORDER BY CASE WHEN rt0.c0 THEN ((((NULL)OR(v0.c0)))OR(rt0.c2)) ELSE (- (rt0.c1)) END DESC  NULLS LAST;SELECT LAST_VALUE(x'') OVER () FROM vt0 WHERE ((((-616954454)AND('-1045224510')) IN (STRFTIME(0X3533120b, x'', NULL)))); -- 0ms;
SELECT ALL (((vt0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c1)) NOT BETWEEN (((NOT (v0.c0)), (((rt0.c1, vt0.c0, vt0.c0))==((rt0.c2, rt0.c1, rt0.c0))), ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)), CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END, ((rt0.c2)&('N*')))) AND ((v0.c0, (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), COUNT(v0.c0), ((rt0.c2) ISNULL), MAX('zchzk볺5p')))) FROM vt0 WHERE ((+ ((x'40cf' IN ())))) GROUP BY NULL HAVING ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN x'' ELSE rt0.c1 END) BETWEEN (GROUP_CONCAT(rt0.c0)) AND ((rt0.c1 IN ()))) ORDER BY ((0.1374955495599749)OR(((rt0.c1) IS FALSE))) ASC;SELECT DISTINCT (NOT ('-1317579128')) FROM rt0; -- 0ms;
SELECT CASE WHEN ((v0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END FROM rt0, vt0;SELECT DISTINCT CAST((+ (rt0.c2)) AS REAL) FROM rt0, v0, vt0; -- 1ms;
SELECT DISTINCT '' FROM rt0, v0; -- 0ms;
SELECT DISTINCT MIN(((rt0.c1) BETWEEN ('h#') AND (vt0.c0))) FROM vt0, v0, rt0 NOT INDEXED WHERE (LOWER(DISTINCT -1.065509363E9) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((rt0.c0) IS FALSE), (~ (rt0.c0)))) AND ((v0.c0, ((vt0.c0) IS TRUE), (((rt0.c1, v0.c0, vt0.c0))>=(('0.21683681675886923', rt0.c1, v0.c0)))))) FROM rt0 WHERE ((- (highlight('y	Xp', '-407062140', '-1160329769', NULL)))) GROUP BY rt0.c0;SELECT DISTINCT ((((((rt0.c2)OR(rt0.c2)))OR(v0.c0))) NOTNULL) FROM rt0, vt0 WHERE (ABS(DISTINCT (((NULL, 0.9806726702380022, 0Xffffffffb02b7090)) NOT BETWEEN (('-1657654511', -1.621670153E9, x'ee7b')) AND ((0.9184398392001938, '&', NULL)))));SELECT DISTINCT (vt0.c0 IN (INSTR(0.8847195459441801, '6i'))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((((rt0.c1)<('T|]C')))>(((((((((rt0.c0)OR(v0.c0)))OR('1911219104')))AND(vt0.c0)))OR(rt0.c0)))) FROM vt0, v0, rt0 WHERE (((((((((UPPER(x''))AND(((0.9547726311708705)IS NOT(x'e798')))))AND(((0X5707bcb7)*('sb')))))OR(((((NULL)AND(x'')))OR(x'4d0a')))))OR(CAST(x'' AS BLOB)))) LIMIT -157328702; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOTNULL) FROM v0, vt0 ORDER BY ((rt0.c0) ISNULL) DESC  NULLS LAST;SELECT ((((v0.c0 COLLATE BINARY)AND(((rt0.c0) NOT NULL))))OR((vt0.c0 IN ()))) FROM v0, rt0, vt0; -- 1ms;
SELECT ALL CASE 0x11b24cf5  WHEN CAST(rt0.c1 AS TEXT) THEN CASE WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END END FROM rt0;SELECT ((((vt0.c0)&('-2095953168')))&(CAST(v0.c0 AS REAL))) FROM vt0 WHERE (((((x'') BETWEEN (x'') AND (x'f455'))) IS FALSE));SELECT ((((CAST('' AS NUMERIC))AND(((rt0.c0)+(rt0.c1)))))OR(((v0.c0) IS TRUE))), CAST(((vt0.c0) BETWEEN (v0.c0) AND (rt0.c1)) AS TEXT), (((((vt0.c0 IN ()))AND(((v0.c0)+(rt0.c2)))))OR(rt0.c1)) FROM rt0;SELECT DISTINCT CASE WHEN ((rt0.c0) IS FALSE) THEN CAST(vt0.c0 AS TEXT) ELSE (('-1987500740') NOT BETWEEN (v0.c0) AND (vt0.c0)) END FROM rt0, vt0;SELECT DISTINCT (((((rt0.c0)IS NOT(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE x'6245' END, ((rt0.c2)AND(rt0.c2)), (+ (rt0.c1)), '' COLLATE RTRIM))>=(((~ (vt0.c0)), json_valid(x'4e1c'), ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(v0.c0)), vt0.c0, x''))), LIKELY(DISTINCT ((NULL) IS TRUE)), (((vt0.c0) IS TRUE) IN (((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))AND(rt0.c0)), v0.c0 COLLATE RTRIM)) FROM v0, vt0 WHERE (((((((1122751100) NOT BETWEEN (NULL) AND ('72571428')))OR(MIN(NULL, x'', 'SKZSf\r\rj+', x'', 0.9573957404869593, x'38b2'))))OR(NULL))) LIMIT 325901760;SELECT ALL (CAST(rt0.c0 AS INTEGER) IN ()) FROM rt0, vt0, v0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))|(CASE WHEN 0.06937389615508949 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN 0.12794308992759207 END))  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c2) IS FALSE))*((rt0.c1 IN ()))), (((rt0.c1)) BETWEEN ((((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((rt0.c0 IN ())))), ((v0.c0) IS FALSE), TOTAL(((rt0.c0)IS(NULL))) OVER (), ((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c1))) ISNULL) FROM vt0, rt0, v0 LIMIT 1476275504 OFFSET 58815148; -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN 0.7535414151255801 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE rt0.c0 END IN ()) FROM v0, rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS REAL) FROM v0, rt0; -- 0ms;
SELECT DISTINCT AVG(((('-1277736422'))>(('2684975'))) COLLATE NOCASE) OVER () FROM vt0, v0, rt0 WHERE (HEX(DISTINCT 0X575832d6 COLLATE BINARY)); -- 1ms;
SELECT DISTINCT (NOT (LAST_INSERT_ROWID())) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((v0.c0))==((rt0.c1))) COLLATE BINARY, ((CASE v0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL), ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)AND(((v0.c0)<<(v0.c0)))) FROM vt0, v0, rt0 WHERE ((((-1585726269) IS FALSE) IN ())); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((8.73193629E8) BETWEEN (rt0.c2) AND (rt0.c2))), v0.c0, vt0.c0 FROM vt0, v0;SELECT DISTINCT LOWER(DISTINCT x'675d') FROM vt0, v0, rt0 WHERE ((((-1643968259 IN ()))|(('-907784748' IN (1001215444))))); -- 0ms;
SELECT ((SUM(v0.c0)) BETWEEN (rt0.c2) AND ((((('1255525593')AND(rt0.c2)))AND(vt0.c0)))), LOWER(DISTINCT ((rt0.c1) NOTNULL)), COUNT(*) OVER (), NULL, ((((rt0.c1)AND((~ (rt0.c1)))))AND(((rt0.c2)GLOB(rt0.c1)))) FROM vt0;SELECT ALL ((((((((rt0.c1 COLLATE NOCASE)AND(NULL)))AND(((v0.c0)LIKE(vt0.c0)))))AND(((rt0.c1) NOT NULL))))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))), (((+ (rt0.c2)))IS NOT((~ (v0.c0)))), CAST(-322965774 AS TEXT) COLLATE NOCASE FROM rt0;SELECT ALL CASE WHEN 'DW0!-' THEN GROUP_CONCAT(rt0.c0) END FROM vt0, rt0 WHERE (((x'fdb6') BETWEEN (((NULL)<<(0.025609052706672353))) AND (CAST(x'' AS NUMERIC)))) ORDER BY ((x'38f1') NOTNULL)  NULLS FIRST, ((rt0.c1)<=(vt0.c0)) COLLATE BINARY ASC, (((rt0.c0)<=(v0.c0)) IN (x'', ((((v0.c0)OR(rt0.c2)))AND(0.3048531860691277))));SELECT DISTINCT GROUP_CONCAT(((rt0.c2)AND(v0.c0))) FILTER(WHERE ((((((((((rt0.c0)AND(rt0.c2)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))) BETWEEN (((x'9ebc')IS NOT(vt0.c0))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) OVER ( PARTITION BY (~ ((('-563489488')IS(rt0.c1)))), ((((((((x'')AND(((((((((rt0.c0)OR(v0.c0)))AND(rt0.c1)))AND(0X294a84b8)))AND(rt0.c1)))))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((v0.c0)<(rt0.c1)))))AND(((((0xffffffffa4683e5b)AND(v0.c0)))AND(vt0.c0))))), (((('-25784954')AND(((rt0.c0) IS TRUE))))OR((((rt0.c1))!=((v0.c0))))), (((- (rt0.c0)))<(v0.c0 COLLATE BINARY)) FROM rt0 WHERE ((((NULL)) BETWEEN ((CASE 0.5204331011257011  WHEN NULL THEN x'10f8' END)) AND (((('-1439249546')|(x'08229b071bf6c4a0')))))) GROUP BY (+ (((rt0.c0)<=(vt0.c0)))) HAVING NULL;SELECT ALL LEAD(CASE WHEN (- (v0.c0)) THEN rt0.c1 COLLATE BINARY WHEN CAST(rt0.c2 AS INTEGER) THEN ((x'') NOTNULL) WHEN TRIM(vt0.c0) THEN rt0.c2 END, v0.c0, ((-1.201378325E9) NOT BETWEEN ((~ (rt0.c0))) AND (((0.21840326508144314)>>(rt0.c2))))) OVER (), ((((+ (v0.c0)), CASE WHEN vt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c1 END, CAST(rt0.c2 AS REAL)))>((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), (+ (rt0.c0)), json_quote(vt0.c0)))), GROUP_CONCAT(((rt0.c1) NOTNULL)) OVER () FROM v0, vt0, rt0 WHERE (CAST(STRFTIME('&{S5zxDh', '.) J', -1826892135, 'a\rPm?Q', 0.5514776203580336) AS TEXT)) GROUP BY ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))) IN ()) HAVING v0.c0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)-(vt0.c0))))>((vt0.c0 COLLATE NOCASE))) FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT '-346857439' FROM vt0, v0, rt0; -- 0ms;
SELECT ALL NTILE((((v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND ((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0Xffffffffa7344890 THEN v0.c0 END)))) OVER ( PARTITION BY ((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))) NOT NULL), CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END  WHEN (((rt0.c1, rt0.c0, v0.c0))<>((rt0.c0, rt0.c1, v0.c0))) THEN (rt0.c1 IN ()) END), ((((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))>>(vt0.c0 COLLATE RTRIM)), LIKELY(((rt0.c1)OR(rt0.c1))), ((rt0.c0 COLLATE RTRIM) IS TRUE), rt0.c0 FROM v0, vt0 WHERE ((((('-1085158211') NOT NULL))AND(('b濮+h-nt' IN ()))));SELECT DISTINCT ((((rt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))-(rt0.c0)), CASE WHEN ((((x'')AND(rt0.c0)))AND(rt0.c2)) THEN vt0.c0 END, (+ (((v0.c0)GLOB(v0.c0)))) FROM vt0;SELECT DISTINCT ((SUM(rt0.c0)) NOT BETWEEN (((rt0.c2)LIKE(rt0.c2))) AND ((rt0.c1 IN ()))), x'9b44', (NOT ((rt0.c2 IN ()))) FROM v0 GROUP BY (+ ((- (rt0.c1)))), (((((((((('1053030335') NOTNULL))OR((('')IS(rt0.c1)))))AND(LOWER(rt0.c2))))AND(((rt0.c0)-(rt0.c0)))))AND(((rt0.c0)>=(0.14311202628053454)))), '1357912162' LIMIT 922635759;SELECT ((((((((TOTAL_CHANGES())OR(rt0.c0 COLLATE BINARY)))OR(((v0.c0) NOTNULL))))AND((rt0.c2 IN (v0.c0)))))OR(((rt0.c0)<>(rt0.c2)))) FROM vt0, rt0, v0 WHERE ((((x'7fd49c2a')) NOT BETWEEN (((((NULL)) BETWEEN (('1763922036')) AND ((x'34ba'))))) AND ((x'' COLLATE BINARY)))); -- 0ms;
SELECT rt0.c0 FROM vt0;SELECT ((rt0.c1)GLOB(rt0.c1)) COLLATE RTRIM, ((((SQLITE_COMPILEOPTION_GET(0.6058245994273453))AND(((0.47420621796463636) NOTNULL))))OR((('1763922036')/(rt0.c2)))), (((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)%(rt0.c0))))) FROM vt0, rt0, v0; -- 1ms;
SELECT DISTINCT CAST('''X 3' AS NUMERIC), x'', ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))IS NOT(vt0.c0)), rt0.c1, ((((((rt0.c1)OR(rt0.c0)))AND(v0.c0))) IS FALSE) FROM vt0, v0;SELECT ALL FIRST_VALUE(json_insert(v0.c0 COLLATE BINARY, ((v0.c0) ISNULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((v0.c0)<<(v0.c0)), ((v0.c0)-(v0.c0)))) OVER (), ((((v0.c0) NOT NULL))<<((+ (rt0.c1)))), (((((0.5957525818260914) NOT BETWEEN (rt0.c2) AND (vt0.c0))))==((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END))) FROM v0;SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0; -- 0ms;
SELECT ALL ((((rt0.c0 COLLATE NOCASE)OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c1)LIKE(rt0.c1)))) FROM vt0 WHERE (CASE WHEN CASE WHEN x'' THEN NULL ELSE NULL END THEN CAST('-27163521' AS INTEGER) ELSE TYPEOF(DISTINCT '') END);SELECT DISTINCT ((((vt0.c0)>(v0.c0)))>((rt0.c0 IN (rt0.c1)))) FROM v0 WHERE ((((('\ruEX')) NOT BETWEEN ((x'362d')) AND ((0.5530709230989784))) IN (((x'd58f')==('-1643968259')))));SELECT DISTINCT LIKELY(DISTINCT (- (v0.c0))), ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), ((UNLIKELY(rt0.c1))GLOB((- (v0.c0)))) FROM vt0 WHERE (((x'b068')IS NOT((('tU')<=('')))));SELECT DISTINCT (((rt0.c2 IN ()))==((rt0.c2 IN ()))) FROM rt0, v0; -- 0ms;
SELECT DISTINCT (((rt0.c1 COLLATE NOCASE, ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)), ((vt0.c0)!=(rt0.c0))))<(((- (rt0.c1)), rt0.c2 COLLATE RTRIM, ((((((((((((rt0.c2)AND(rt0.c2)))AND('2051181769')))OR(rt0.c2)))AND(rt0.c0)))AND(v0.c0)))OR(rt0.c1))))) FROM v0, rt0;SELECT ALL ((((v0.c0)%(rt0.c2)))GLOB(((v0.c0)||(rt0.c0)))) FROM vt0, rt0 WHERE ((~ ('-222713378')) COLLATE NOCASE) LIMIT -1439249546 OFFSET -1283157791;SELECT 0.7348378493815241 FROM v0 WHERE (CAST((0.4036293085645486 IN ()) AS TEXT)); -- 1ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END COLLATE BINARY, NTILE(rt0.c2) OVER (), ((v0.c0 IN ()) IN ()) FROM rt0, vt0 WHERE (CASE (('2142863681') NOT BETWEEN ('') AND (0.505450438251708))  WHEN (((x'41a89f74', x'', x''))>(('i!G%AB', NULL, 0.4102983687083529))) THEN (- (0.25007502203883314)) ELSE ((NULL) BETWEEN (0.6983529008117786) AND ('1050332044')) END);SELECT ALL (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END IN (rt0.c1 COLLATE BINARY)) FROM vt0 GROUP BY v0.c0 HAVING (((rt0.c1) ISNULL) IN ());SELECT DISTINCT (- ((((rt0.c1)) NOT BETWEEN (('')) AND ((v0.c0))))) FROM rt0;SELECT ALL rt0.c1 FROM vt0 WHERE (CAST(CASE ''  WHEN 0.4277098058222365 THEN -1.812944353E9 END AS BLOB)) LIMIT -172349855 OFFSET 1410179270;SELECT DISTINCT CUME_DIST() OVER () FROM v0, rt0, vt0 WHERE (((x'')/(CAST('' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((- (v0.c0)), ((rt0.c2)+(v0.c0)), -1e500))!=((rt0.c2 COLLATE BINARY, AVG(rt0.c2), ((rt0.c0) NOTNULL)))) FROM vt0, rt0;SELECT ((((((vt0.c0)OR('')))OR(v0.c0))) NOT BETWEEN (((((((((((((rt0.c0)AND('0.5043800060135095')))OR(NULL)))AND(v0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c1))) AND (((rt0.c0)==(vt0.c0)))) FROM rt0;SELECT (+ (vt0.c0)) FROM v0, vt0; -- 0ms;
SELECT ALL '', rt0.c2, NULL FROM v0;SELECT CASE ((v0.c0) NOTNULL)  WHEN ((v0.c0)<<(rt0.c1)) THEN LIKE(NULL, v0.c0) END, AVG(LIKELY(x'd187')), (((- (rt0.c2))) NOT NULL), ((x'' COLLATE NOCASE)>(((((v0.c0)AND(rt0.c2)))AND(vt0.c0)))), COUNT(v0.c0) FILTER(WHERE (((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0))))>>(rt0.c0))) OVER ( ORDER BY ((((CAST(v0.c0 AS BLOB))OR(((rt0.c0) BETWEEN (0X5e7f1ac0) AND (rt0.c0)))))AND(CAST(vt0.c0 AS BLOB)))  NULLS LAST, ((v0.c0) ISNULL) ASC) FROM v0, vt0 WHERE (((TRIM(DISTINCT '', 'fV'))*(((x'2405') ISNULL))));SELECT ALL ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (rt0.c0) AND (v0.c0 COLLATE NOCASE)) FROM rt0 WHERE (CASE WHEN ((NULL) NOTNULL) THEN ((NULL)*(-1.612105774E9)) END) GROUP BY (((rt0.c1, vt0.c0, vt0.c0)) BETWEEN (('1154485193', '3뛻lN&!o}', ((vt0.c0)>=(vt0.c0)))) AND ((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)), ((rt0.c0)<(x'1a31')), ((((NULL)OR(v0.c0)))OR(v0.c0))))), CASE (vt0.c0 IN (rt0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN (rt0.c1 IN ()) ELSE ((vt0.c0)%(rt0.c1)) END, (UPPER(DISTINCT rt0.c0) IN ()) HAVING ((((rt0.c2)OR((~ (rt0.c2)))))AND(CASE WHEN rt0.c2 THEN v0.c0 END)) LIMIT 1960837828;SELECT ALL ((((((((0.8068391748194734)OR((rt0.c2 IN ()))))AND(((rt0.c0) NOTNULL))))OR(((v0.c0)+(vt0.c0)))))AND(-2104829745)) FROM v0 WHERE (((('124644364')) NOT BETWEEN (((('y	xp')+(NULL)))) AND ((((((x'6894')OR(NULL)))OR(x''))))));SELECT DISTINCT ((((v0.c0)+(vt0.c0)))*(vt0.c0)), 0.5262276130512165, rt0.c0 FROM v0, rt0, vt0 UNION SELECT DISTINCT ((((rt0.c2)IS(rt0.c0)))/(v0.c0)), ((CASE WHEN rt0.c1 THEN rt0.c1 END)-(NULL)), CASE WHEN (((('<g')OR(vt0.c0)))OR(v0.c0)) THEN v0.c0 WHEN ((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN COUNT(v0.c0) WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c0) IS FALSE) WHEN (NOT (v0.c0)) THEN (((rt0.c0))<((v0.c0))) WHEN vt0.c0 COLLATE BINARY THEN (((rt0.c1))<((v0.c0))) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE rt0.c2 END THEN (rt0.c2 IN (v0.c0)) WHEN CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END THEN CASE rt0.c2  WHEN NULL THEN rt0.c0 END END FROM vt0;SELECT DISTINCT ((((v0.c0 COLLATE RTRIM)AND((rt0.c1 IN (rt0.c2)))))OR(UNICODE(rt0.c2))) FROM rt0, v0, vt0; -- 0ms;
SELECT ((((((rt0.c0)AND(rt0.c2)))AND(x''))) NOT BETWEEN ((((rt0.c0))<((rt0.c0)))) AND (CAST(rt0.c1 AS REAL))) FROM v0 WHERE (((((x'' IN ()), json_object(x'', 0.03705364912183762, '*c', '-1478910552'), (~ (x'')), COALESCE(DISTINCT x'', 0.07171071872082324, x'', 0.37530840262210197), ((0.6874003792618637) IS TRUE)))<=((LIKELY(DISTINCT 0.9624134456959272), ((x'') BETWEEN (NULL) AND (x'')), x'' COLLATE BINARY, (NULL IN ()), ((0.411384685741229)IS NOT(0.35742353536897964))))));SELECT DISTINCT ((v0.c0)%(((rt0.c2)>=(v0.c0)))) FROM rt0, v0, vt0 WHERE ((x'' IN ()) COLLATE BINARY) GROUP BY CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN rt0.c2 END HAVING CAST(MAX(rt0.c2, v0.c0) AS BLOB); -- 0ms;
SELECT ALL CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'621d'))  WHEN COUNT(*) THEN CAST(rt0.c2 AS INTEGER) ELSE (+ (0x70030483)) END FROM rt0 WHERE (('1925005000' IN ()) COLLATE BINARY); -- 0ms;
SELECT ALL 2009031630, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)), '546164183' FROM vt0, rt0, v0 LIMIT -1643968259; -- 0ms;
SELECT ((1165271651)*(rt0.c2)), ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(CAST(v0.c0 AS INTEGER))), LIKELIHOOD(DISTINCT (((v0.c0, vt0.c0, rt0.c0)) BETWEEN ((vt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))), 0.9545966409678898) FROM v0, rt0;SELECT DISTINCT TOTAL(rt0.c2), rt0.c2, SUM(rt0.c1 COLLATE BINARY COLLATE NOCASE) FILTER(WHERE TRIM(NULL) COLLATE BINARY) OVER (), ((((rt0.c1))<=((v0.c0))) IN ()), LAST_VALUE(CAST(v0.c0 COLLATE NOCASE AS INTEGER)) OVER () FROM v0, vt0 WHERE ((NOT ((('df(g') NOT NULL))));SELECT ((('rgDZ|rD_' IN ()))LIKE(((vt0.c0) ISNULL))) FROM rt0, v0;SELECT DISTINCT rt0.c1, (((0.7527550093889885)) BETWEEN ((AVG(rt0.c0))) AND ((CASE rt0.c2  WHEN vt0.c0 THEN x'' WHEN rt0.c0 THEN 0.6647752954516647 WHEN x'' THEN rt0.c1 END))), MAX((('df(g')||(vt0.c0))) FROM vt0, rt0 NOT INDEXED, v0 WHERE (((('' IN ())) BETWEEN ((((((((('-2097632278')OR(NULL)))OR('')))AND(NULL)))OR(NULL))) AND (CASE WHEN -372866261 THEN NULL ELSE 0X375c851d END))); -- 0ms;
SELECT DISTINCT AVG(x'' COLLATE NOCASE) OVER (), (((((rt0.c1, vt0.c0, rt0.c1))>=((rt0.c2, v0.c0, v0.c0))))>=(((rt0.c1) IS FALSE))), ((rt0.c0) NOTNULL) COLLATE NOCASE FROM vt0, rt0, v0 WHERE ((NOT (''))); -- 0ms;
SELECT COUNT(((((rt0.c1)OR(rt0.c0)))OR(v0.c0))), TOTAL(CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END) OVER (), ABS(v0.c0) FROM v0;SELECT DISTINCT (~ ((~ (vt0.c0)))) FROM rt0, vt0 WHERE (((NULL)&(x'')) COLLATE RTRIM) GROUP BY GLOB((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((-1339330416, rt0.c2, v0.c0)) AND ((vt0.c0, x'', v0.c0)))), UPPER((~ (v0.c0))), x'b14a' LIMIT -1931031586;SELECT DISTINCT (- (((vt0.c0) ISNULL))), ((((((((AVG(rt0.c1))AND(((v0.c0) NOTNULL))))AND(((rt0.c2) IS TRUE))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((v0.c0 IN (rt0.c0, rt0.c0)))), GROUP_CONCAT(((((vt0.c0)OR(rt0.c0)))OR(vt0.c0))) OVER () FROM rt0 WHERE (((CAST(0.3472826545109501 AS BLOB))IS('-602306499' COLLATE BINARY)));SELECT ALL ((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))) BETWEEN (((v0.c0)<=(rt0.c1))) AND (((rt0.c0)<=(rt0.c1)))), NULL, ((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (rt0.c0) AND (CAST(v0.c0 AS REAL))) FROM rt0, vt0 GROUP BY (((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM;SELECT (((rt0.c2, v0.c0, rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))AND(NULL)), ((vt0.c0) BETWEEN (v0.c0) AND (rt0.c0)), MAX(0.8497416490663484))) AND (((((v0.c0))!=((rt0.c1))), ((vt0.c0)*(rt0.c1)), ((v0.c0)+(v0.c0))))) FROM vt0, v0 WHERE ((((NOT (''))) NOTNULL)) GROUP BY rt0.c0, (v0.c0 IN ()), json_valid(vt0.c0 COLLATE BINARY);SELECT DISTINCT (0.782262750831103 IN ()) FROM rt0 LIMIT -1238110105 OFFSET -173179344; -- 0ms;
SELECT DISTINCT (('K') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE COLLATE NOCASE, MAX((((v0.c0, NULL, v0.c0)) BETWEEN ((v0.c0, rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c1, v0.c0)))), AVG(CAST(rt0.c2 AS NUMERIC)) OVER (), COUNT(json_array(rt0.c0, rt0.c0)), CAST(((rt0.c1) IS TRUE) AS BLOB) FROM v0, rt0, vt0 WHERE ((NULLIF(DISTINCT 0Xffffffffde151104, 0xffffffff85a00c69) IN ())); -- 0ms;
SELECT CAST(LIKELY(rt0.c0) AS TEXT), GROUP_CONCAT((rt0.c1 IN ())), ((((json_remove(rt0.c1, rt0.c1, vt0.c0, rt0.c1))OR(((vt0.c0) IS FALSE))))OR(v0.c0)) FROM v0, rt0, vt0 WHERE ((((('minutes')IS('-鴩'))) BETWEEN (((((x'')OR(NULL)))AND(x'683702e4'))) AND ((('6I')>>(0.6001065439968652))))); -- 0ms;
SELECT ALL ((((0.22847477268061622)GLOB(rt0.c2))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (((rt0.c2) NOTNULL))), ((((((((rt0.c1)OR(v0.c0)))AND(rt0.c2)))AND(0.11160701534777107)))OR(((vt0.c0) NOTNULL))), (('873193629' COLLATE BINARY) NOT BETWEEN (-1.618772299E9) AND (rt0.c0)) FROM vt0 ORDER BY ((NULL)AND(rt0.c0)) DESC  NULLS FIRST;SELECT DISTINCT CASE ((v0.c0) IS TRUE)  WHEN ((rt0.c2)AND(vt0.c0)) THEN v0.c0 WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c1 WHEN (rt0.c1 IN ()) THEN CASE rt0.c0  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END ELSE (+ (rt0.c1)) END FROM vt0;SELECT DISTINCT CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) AS INTEGER) FROM rt0, v0, vt0; -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN (((((rt0.c2, 0x319f5e30, v0.c0, rt0.c1, NULL)) NOT BETWEEN ((v0.c0, vt0.c0, rt0.c2, v0.c0, v0.c0)) AND ((rt0.c0, vt0.c0, rt0.c0, vt0.c0, 'n{08dQl<'))))) AND ((CAST(rt0.c1 AS REAL)))) FROM vt0 ORDER BY (NOT (rt0.c2)) COLLATE RTRIM ASC;SELECT NULL, TOTAL(rt0.c0) OVER ( ORDER BY CASE WHEN rt0.c2 THEN LIKELY(DISTINCT v0.c0) END), CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((rt0.c0) IS FALSE) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c0 END END FROM rt0, vt0, v0 WHERE (CASE WHEN (('2056308017') NOT NULL) THEN CAST('-1439249546' AS REAL) ELSE (x'' IN ('a䃥{8おog')) END); -- 0ms;
SELECT ALL CAST(((v0.c0) IS TRUE) AS BLOB) FROM v0 WHERE ((((((NOT ('569321341')))OR(((('0.991753336027794'))<=((NULL))))))OR(LOWER(1364306424)))) GROUP BY ((rt0.c1 COLLATE RTRIM)IS NOT('>0'));SELECT DISTINCT CASE WHEN ((rt0.c2)%(vt0.c0)) THEN (NULL IN ()) WHEN (v0.c0 IN ()) THEN ((rt0.c0)>=('905924089')) WHEN (((v0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, 0.331664072980528))) THEN ((NULL) NOTNULL) END FROM rt0, vt0 WHERE (((((NULL)==(x'')))<<(((0.08671479846541352) BETWEEN ('-1464277849') AND (-1.065509363E9))))) ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST, (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()) ASC;SELECT ALL ((TRIM(x'')) ISNULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT 0X423957cf, CASE WHEN (((rt0.c2))==((vt0.c0))) THEN COUNT(*) ELSE MIN('aM耵.冃') END, SUM(CAST(rt0.c0 AS INTEGER)) OVER () FROM vt0 WHERE ((((x'' IN (NULL)))<<((('TVn') NOT NULL))));SELECT DISTINCT AVG((NOT (rt0.c2))) OVER () FROM vt0;SELECT DISTINCT (NOT ((rt0.c2 IN ()))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT PRINTF(((((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))OR(v0.c0)))AND(rt0.c0)), ((rt0.c1) NOTNULL), (rt0.c1 IN ())) FROM vt0, v0 WHERE (IFNULL(((x'a553') IS FALSE), ('-145894274' IN (0.6269244394042275)))) GROUP BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (x''))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))), CAST(TRIM(DISTINCT NULL) AS BLOB), (((vt0.c0) BETWEEN (vt0.c0) AND ('^쭶')) IN (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))));SELECT DISTINCT IFNULL((rt0.c1 IN ()), ((v0.c0) NOTNULL)) FROM v0, vt0, rt0; -- 0ms;
SELECT ((rt0.c0)LIKE(rt0.c0)) COLLATE BINARY, (((v0.c0 IN (rt0.c0, rt0.c1)))+(CAST(rt0.c1 AS BLOB))), TOTAL((NOT (rt0.c1))) OVER () FROM v0, rt0 WHERE ((~ (x'')) COLLATE NOCASE) ORDER BY (((~ (rt0.c1)))<(((v0.c0) NOTNULL))) ASC  NULLS FIRST; -- 0ms;
SELECT (+ ((x'' IN ()))) FROM v0, vt0, rt0 WHERE (NULL) GROUP BY CAST(rt0.c1 AS TEXT), (+ (rt0.c2)) COLLATE BINARY, ((CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END)OR((vt0.c0 IN (v0.c0)))) HAVING CASE ((((vt0.c0)OR(rt0.c0)))OR(rt0.c2))  WHEN CASE WHEN 0.1608779529682789 THEN rt0.c0 END THEN CAST(rt0.c0 AS TEXT) WHEN ((((rt0.c1)OR(v0.c0)))AND(rt0.c0)) THEN rt0.c0 WHEN vt0.c0 THEN ((rt0.c2)>>(v0.c0)) ELSE (rt0.c1 IN (v0.c0)) END; -- 0ms;
SELECT DISTINCT (ROUND(rt0.c1, rt0.c1) IN ()) FROM vt0, rt0 WHERE (0xffffffffa504f6f2); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((NULL))<>((rt0.c2))), ((rt0.c0)||(v0.c0)), rt0.c1))>((((((((((v0.c0)OR(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)), ((rt0.c1)*(v0.c0)), TOTAL(rt0.c0)))), ((((((((rt0.c1)OR(0.9699535460207432)))AND(rt0.c1)))OR('-1473813498' COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))), (+ (0.9125998497184917)) FROM vt0, rt0, v0 WHERE (((((CAST('DW0!-' AS NUMERIC))AND((((NULL)) BETWEEN ((x'')) AND ((NULL))))))OR(((0.6245931147075173) NOT BETWEEN (x'') AND (1398257490))))) ORDER BY 0Xffffffffb6623d19, (CAST(rt0.c1 AS INTEGER) IN ())  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((('376741781', rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((NULL, '0.161569392047756', rt0.c1))))))  NULLS FIRST; -- 0ms;
SELECT (((rt0.c2) IS FALSE) IN ()) FROM rt0 WHERE ((- ((((-1439249546))>(('-2054536418')))))); -- 0ms;
SELECT DISTINCT CAST((0X3b65ec31 IN ()) AS BLOB) FROM vt0, rt0, v0; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c0) IS TRUE)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT MAX(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))), LIKELY(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))), (((CAST(vt0.c0 AS REAL), (rt0.c2 IN ()), rt0.c0 COLLATE BINARY))<(('854944308', DATETIME(vt0.c0, rt0.c2, vt0.c0), (vt0.c0 IN (v0.c0))))) FROM rt0, v0 GROUP BY CASE ((NULL)+(1716135197))  WHEN ((rt0.c0)-(vt0.c0)) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END ELSE CAST(rt0.c0 AS REAL) END, TRIM(DISTINCT IFNULL(rt0.c0, rt0.c0), ((((vt0.c0)AND(rt0.c2)))OR(rt0.c1))), CAST(rt0.c2 AS BLOB);SELECT DISTINCT COALESCE(rt0.c1 COLLATE RTRIM, GROUP_CONCAT(rt0.c0)), TOTAL(CASE WHEN rt0.c1 THEN v0.c0 END), ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()) FROM vt0, v0, rt0 WHERE (((CASE WHEN 9.31594153E8 THEN NULL ELSE 'VkG*\3U' END) BETWEEN ((('-2086189680')AND(-723797586))) AND (CAST(0.18580730325461658 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((((rt0.c0)OR(v0.c0)))OR(rt0.c2)))<(0.7348171443963907))) OVER ( ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN CAST(0.5289371557950516 AS TEXT) THEN ((v0.c0)+(vt0.c0)) ELSE ((((((((((((0.8586435053577258)AND(vt0.c0)))AND(vt0.c0)))OR(0.1456904531898705)))OR(rt0.c1)))AND(rt0.c2)))OR('')) END ASC) FROM rt0, v0 WHERE (((('0.7934812567460686' IN ()))<(CAST(x'a3ee' AS TEXT)))) GROUP BY COALESCE(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), (rt0.c1 IN ()));SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c0 AS BLOB)) OVER (), ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)))-(v0.c0)), ((((rt0.c0)<(v0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(NULL AS BLOB))) FROM v0, rt0, vt0 WHERE (((~ (NULL)) IN ())) LIMIT -788898326; -- 0ms;
SELECT ALL COUNT(((v0.c0)+(rt0.c1))) OVER (), LAST_VALUE((((((NULL IN ()))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND((1.763922036E9 IN ())))) OVER ( ORDER BY vt0.c0  NULLS LAST), json_remove(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)), ((v0.c0) BETWEEN (rt0.c0) AND (NULL)), rt0.c1 COLLATE NOCASE, vt0.c0 COLLATE NOCASE) FROM v0 WHERE (((NULL)>=(json_patch('-1621670153', '-1494749450'))));SELECT ALL CASE MIN(vt0.c0)  WHEN vt0.c0 THEN ((rt0.c1) NOT NULL) WHEN ((rt0.c1)>=(rt0.c2)) THEN MAX(vt0.c0) WHEN SUM(vt0.c0) THEN (~ (vt0.c0)) ELSE 0.8847195459441801 END, CAST(((((rt0.c0)AND(rt0.c2)))AND(v0.c0)) AS REAL), (- ((NOT (v0.c0)))) FROM rt0, v0, vt0 ORDER BY rt0.c2  NULLS FIRST LIMIT 854944308 OFFSET -1886757184; -- 1ms;
SELECT DISTINCT ((~ (rt0.c0)) IN ()), SQLITE_SOURCE_ID(), ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END) IS TRUE) FROM v0, vt0 WHERE (((((('1465397974') BETWEEN ('M[') AND (x''))))<>(('4WR'))));SELECT DISTINCT NTILE(((((((v0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(((('-2053108631', rt0.c0, v0.c0, rt0.c0, '1003427060')) NOT BETWEEN ((rt0.c1, v0.c0, vt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, 'd''', v0.c0, rt0.c0, NULL)))))) OVER () FROM v0, vt0, rt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c0)+(rt0.c0))) FROM vt0, v0 WHERE (((((((x'd34864cb1b44')OR(-297385451)))OR(0.6515185458669353)))<=((((NULL))<=((1509300478)))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (NULL) AND (v0.c0)), ((-1.317579128E9) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY ASC  NULLS FIRST;SELECT DISTINCT (((0X477fa431) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ()), CAST(CAST(rt0.c2 AS TEXT) AS INTEGER), '1389651009' FROM vt0;SELECT (v0.c0 COLLATE RTRIM IN ()) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT AVG((((rt0.c0))>=((v0.c0)))) OVER (), ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))==((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.29868775042606754))))), SUM(((0.9656449500617871) NOT NULL)) COLLATE BINARY FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('') IS TRUE) COLLATE NOCASE), (~ (((rt0.c0)/(v0.c0)))), ((rt0.c2)%(v0.c0)) COLLATE BINARY FROM rt0, vt0 WHERE (((((((NULL)OR(x'')))OR('gbG')))*(((0.4309401659242217) IS TRUE)))) LIMIT 837498130 OFFSET 916694437;SELECT vt0.c0 COLLATE RTRIM FROM vt0 WHERE (((('', ((x'') IS TRUE), ((1476275504)==('0.411384685741229'))))=((TYPEOF(DISTINCT -1.317579128E9), (x'4d3b' IN ('-2084165383')), ((0.31991238205309824)+(x'')))))); -- 0ms;
SELECT DISTINCT TOTAL(0.6425270938033514) FROM v0 ORDER BY v0.c0 DESC, ((('V.Ua\r]tHw')) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND ((rt0.c1 COLLATE BINARY))) DESC  NULLS FIRST;SELECT DISTINCT ((((((((((((((((0Xffffffffbf51ccbd)AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)))AND(vt0.c0)))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))AND((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(HEX(rt0.c0))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) FROM vt0;SELECT ALL ABS(CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c1 END) FROM rt0 WHERE ((NOT ((('-399826214') NOT BETWEEN (0.8687800452508943) AND ('1554496219')))));SELECT ALL ((((((0.2367646901607685)GLOB(v0.c0)))OR('0.4897236748969662')))OR(QUOTE(rt0.c1))), rt0.c0, (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ((- (v0.c0)), (~ (rt0.c2)))) FROM v0, vt0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c2 IN ()) THEN (((vt0.c0, v0.c0, v0.c0))<((rt0.c2, v0.c0, vt0.c0))) ELSE ((vt0.c0)<(rt0.c0)) END, (PRINTF(0.7294034263315844) IN (TOTAL(rt0.c1), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))), ((MAX(v0.c0)) BETWEEN (((((NULL)AND(rt0.c1)))OR(rt0.c2))) AND (((vt0.c0)>(v0.c0)))) FROM v0, vt0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((- (rt0.c2))) OVER () FROM rt0, v0 WHERE (((CASE x'245a'  WHEN 0.7616463100004374 THEN x'' ELSE NULL END) ISNULL)); -- 0ms;
SELECT DISTINCT ((- (rt0.c2)) IN ()) FROM rt0, vt0 WHERE (0.09219956794105788) GROUP BY ((CASE WHEN v0.c0 THEN v0.c0 END)OR(((rt0.c1) NOTNULL))), CASE WHEN ((vt0.c0) IS FALSE) THEN ((v0.c0) NOTNULL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (NULL)) THEN LIKELY(DISTINCT rt0.c1) WHEN UPPER(rt0.c2) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) ELSE ((v0.c0)&(vt0.c0)) END, NULL HAVING CASE WHEN rt0.c0 THEN ((v0.c0) IS FALSE) END;SELECT DISTINCT (((v0.c0)LIKE(vt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT ALL (rt0.c1 IN (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END, LOWER(rt0.c0))) FROM v0;SELECT DISTINCT CAST(((rt0.c2)||(rt0.c1)) AS TEXT), CASE ((rt0.c0) NOTNULL)  WHEN ((vt0.c0)%(rt0.c2)) THEN (((rt0.c1))!=((v0.c0))) ELSE GROUP_CONCAT(v0.c0) END, ((((rt0.c2) NOT NULL))==(CHANGES())) FROM vt0, rt0 WHERE ((((((((((('''')>(41436062)))AND(((0.8480191586328162)|(NULL)))))AND(CASE x''  WHEN x'' THEN '559392898' END)))AND(CASE WHEN 7.60190424E8 THEN '-1812944353' WHEN '' THEN NULL WHEN '' THEN x'' END)))AND('-2118437381')));SELECT (((((rt0.c1)&(0.5184325579949636)), ((rt0.c1)>>(vt0.c0)), COUNT(vt0.c0)))>=((((rt0.c1)IS(rt0.c0)), CAST(0.5642217351358314 AS BLOB), (('454015132')%(vt0.c0))))) FROM vt0, rt0, v0; -- 0ms;
SELECT DISTINCT (((NOT (v0.c0))) NOTNULL), COUNT(*), CAST(rt0.c2 AS TEXT) COLLATE NOCASE FROM vt0, v0;SELECT DISTINCT (((((+ (rt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR('[5\rE')) FROM v0 WHERE ('-25784954');SELECT ALL CAST(rt0.c0 AS BLOB) COLLATE RTRIM FROM vt0;SELECT ALL ((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c1) NOTNULL))))AND((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))), (rt0.c1 IN ()) COLLATE BINARY, CASE WHEN (- (rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE ((x'f5d8')>('-1041611091')) END FROM rt0, vt0 WHERE ('~N믊');SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0))) BETWEEN (((rt0.c2) BETWEEN (vt0.c0) AND (v0.c0))) AND (((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))), (((HEX(rt0.c2), vt0.c0, ((((rt0.c2)AND(vt0.c0)))AND(rt0.c2))))<((0.17893096821095622, MIN(vt0.c0), CAST(vt0.c0 AS NUMERIC)))), vt0.c0 FROM v0, vt0 WHERE (CASE WHEN ((((((((0.3651912431992572)OR('-1277736422')))OR(NULL)))OR('TRUE')))AND('-202938634')) THEN (- ('')) WHEN 'q纵o<&' COLLATE BINARY THEN (('8') NOT NULL) WHEN ((((((((x'b937')OR('q{')))OR(0.9773983332723263)))AND(1592546219)))OR(-1.473813498E9)) THEN ((NULL) IS TRUE) END);SELECT DISTINCT AVG(((((rt0.c1)OR(x'')))AND('1902797622'))) FROM rt0, v0; -- 0ms;
SELECT ALL GROUP_CONCAT((((v0.c0, 0.041377486894531024, vt0.c0, x'6b35', rt0.c1))<((v0.c0, vt0.c0, v0.c0, rt0.c0, rt0.c1)))) OVER (), x'', ROW_NUMBER() OVER () FROM v0 WHERE (json_quote(CASE 0x27643dce  WHEN '' THEN 0Xffffffff9e0308fd WHEN x'' THEN x'50ff' WHEN NULL THEN '⟗Y<I/' END));SELECT ((MIN(vt0.c0))>(((rt0.c1)||(v0.c0)))) FROM rt0, vt0;SELECT ALL ((rt0.c0 IN ()) IN ()) FROM rt0, vt0 WHERE (((((NULL)>>(x''))) IS FALSE)); -- 0ms;
SELECT ALL COUNT(((rt0.c0) NOT BETWEEN (v0.c0) AND (NULL))) OVER () FROM vt0, rt0;SELECT ALL CUME_DIST() OVER (), ((((rt0.c0) ISNULL)) IS FALSE), ((0.005621945339188805) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1)>(rt0.c1)) COLLATE BINARY FROM rt0 GROUP BY CASE json_array_length(rt0.c2)  WHEN vt0.c0 COLLATE RTRIM THEN (+ (rt0.c0)) END ORDER BY ((((rt0.c1)LIKE(rt0.c1)))>((x'1987' IN ()))) DESC;SELECT ((x'')IS NOT((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))), COUNT(DATETIME(0.4084742482173461, rt0.c1, rt0.c1, '-2090033530', vt0.c0) COLLATE BINARY) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES), (((v0.c0)%(rt0.c1)) IN ()) FROM v0, vt0 WHERE (((CASE WHEN 1.348985178E9 THEN x'' ELSE NULL END) IS TRUE));SELECT DISTINCT ((((rt0.c0) NOTNULL)) ISNULL) FROM v0;SELECT DISTINCT CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE NOCASE FROM vt0 WHERE (NULL);SELECT DISTINCT FIRST_VALUE(('-1086024687' IN ())) OVER ( ORDER BY ((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (UNLIKELY(rt0.c1)) AND (CAST(rt0.c0 AS TEXT))) DESC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS FIRST RANGE LIKELIHOOD((('0箪') IS FALSE), 0.11950705994445165) PRECEDING EXCLUDE CURRENT ROW) FROM rt0, vt0, v0 WHERE ((~ ((('73YG-4‛R↶') NOTNULL)))) ORDER BY ((rt0.c0 IN (rt0.c0)) IN ());SELECT DISTINCT vt0.c0 FROM v0 NOT INDEXED;SELECT DISTINCT CASE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((v0.c0)OR(vt0.c0)) THEN GROUP_CONCAT(v0.c0) END FROM v0, rt0 WHERE ((((x'' IN ()))<(((0Xfffffffff32c0f2e) NOT NULL))));SELECT DISTINCT CASE ((rt0.c2) IS TRUE)  WHEN '543937214' THEN 'mn' ELSE ((((((((rt0.c1)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)) END, UPPER((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))), ((CAST(vt0.c0 AS BLOB))||(CAST(rt0.c0 AS INTEGER))) FROM v0;SELECT ALL CAST((vt0.c0 IN (v0.c0, rt0.c0)) AS INTEGER) FROM vt0 WHERE ((+ (((x'')=('r')))));SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (((TYPEOF('FRv\nM\r/'))*((+ (0Xffffffffc84fa658))))) ORDER BY '931594153' DESC; -- 0ms;
SELECT DISTINCT v0.c0 FROM rt0, vt0 WHERE (CASE WHEN (((0.03724585405122449)) BETWEEN (('0.35573498253933133')) AND ((0.642672181267852))) THEN TRIM(x'2fd7') WHEN ((((((((0.5262276130512165)OR(NULL)))AND(0.6409510386216319)))AND('g7')))OR(1312636692)) THEN (NULL IN ('c5ZX')) WHEN (('692749496') BETWEEN (-1618772299) AND ('n{08dql<')) THEN (+ (x'')) ELSE (~ ('o{C/d	|%葿')) END);SELECT DISTINCT json_insert(((vt0.c0)AND(rt0.c1)), CASE WHEN 0.48259901277867623 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN '-1277736422' THEN rt0.c2 ELSE rt0.c2 END, CASE WHEN rt0.c1 THEN rt0.c2 END) FROM v0, rt0, vt0 WHERE (((CAST('-1838565266' AS NUMERIC)) NOT BETWEEN (((NULL) NOT NULL)) AND (HEX(0.2328928882660638)))); -- 0ms;
SELECT CASE ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0))  WHEN CASE rt0.c1  WHEN v0.c0 THEN vt0.c0 END THEN ((0X6f368c2c)IS(v0.c0)) WHEN rt0.c2 COLLATE BINARY THEN MAX(vt0.c0) WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)) THEN TOTAL(rt0.c0) ELSE CAST(v0.c0 AS BLOB) END FROM rt0, vt0, v0 WHERE (LIKELIHOOD(DISTINCT (((((((('䨖r')AND(0X36cac5fa)))OR(NULL)))AND('')))AND(-967671440)), 0.9485408886588814)); -- 0ms;
SELECT DISTINCT ((vt0.c0) ISNULL) COLLATE BINARY FROM rt0 WHERE ((((((x'' IN ()))OR((NULL IN ()))))OR(((x'7a24')|(NULL))))) GROUP BY CASE WHEN ((vt0.c0)>=(rt0.c0)) THEN ((v0.c0)>=(rt0.c1)) WHEN rt0.c1 THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c1) IS TRUE) THEN vt0.c0 COLLATE NOCASE END, (NOT (((rt0.c1)GLOB(rt0.c1)))), (((((-1618772299 IN ()))OR(((rt0.c2)AND(v0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) HAVING ((CAST(rt0.c2 AS REAL))AND(NULL));SELECT DISTINCT NTH_VALUE(((((rt0.c1)IS NOT(rt0.c1))) BETWEEN (LENGTH(rt0.c0)) AND (((rt0.c1)<=(rt0.c2)))), rt0.c2) OVER () FROM rt0 GROUP BY ((((rt0.c2 IN ()), INSTR(v0.c0, v0.c0), (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0)))))<>((((rt0.c1) IS FALSE), ((rt0.c1) NOTNULL), ((v0.c0)=(rt0.c2))))) HAVING x'';SELECT DISTINCT TRIM(rt0.c1) COLLATE RTRIM FROM rt0, v0 WHERE (((0.44515537215621936) BETWEEN ('#Ku#\nkgtA') AND (x'')) COLLATE BINARY); -- 0ms;
SELECT (~ (rt0.c0)) COLLATE RTRIM FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN (vt0.c0)) COLLATE NOCASE FROM v0, rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN ((NULL)IS(x'')) THEN CASE WHEN NULL THEN -1.041611091E9 END ELSE '' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 GROUP BY ((rt0.c1)LIKE(CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) HAVING (('0.13972009054746626' COLLATE NOCASE) NOT BETWEEN (COUNT(rt0.c1)) AND (RTRIM(rt0.c2)));SELECT DISTINCT (((- (v0.c0)))|(((rt0.c2) IS FALSE))), TOTAL(((v0.c0)-(rt0.c1))) OVER (), (((v0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))) AND ((rt0.c0 COLLATE BINARY))) FROM rt0, v0 WHERE (json_object(((0xfffffffff3e766f6)LIKE(x'f04b')), (NOT ('-637634195')))); -- 1ms;
SELECT DISTINCT SUM(((vt0.c0) IS TRUE)) OVER (), ((((0.9251466780062229 IN ())))>=((((rt0.c2) IS FALSE)))), ABS(DISTINCT (vt0.c0 IN ())) FROM rt0, v0;SELECT CAST(((vt0.c0)IS NOT(-2.02938634E8)) AS TEXT) FROM v0;SELECT rt0.c1, -2.7163521E7, CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS INTEGER) FROM rt0, v0, vt0 WHERE ((NOT (((('0.7641330930487136'))==((0.03569565108881667)))))); -- 0ms;
SELECT ALL CASE WHEN ((v0.c0)>>(rt0.c1)) THEN ((vt0.c0)<(v0.c0)) ELSE (rt0.c2 IN ()) END FROM rt0 WHERE ((~ (0.5149783172972469))) LIMIT -1114685009 OFFSET -803840668;SELECT DISTINCT CASE WHEN SUM(rt0.c2) THEN TYPEOF(vt0.c0) WHEN ((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c0)<(rt0.c2)) THEN ((rt0.c2) ISNULL) END, CAST('' AS NUMERIC), NULL FROM vt0, rt0 GROUP BY (((rt0.c2)) NOT BETWEEN ((((NULL) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CAST(v0.c0 AS REAL)))), NULL, CASE WHEN ((rt0.c0)>>(vt0.c0)) THEN ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)) END, ((((((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(ABS(rt0.c2))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END)), (((rt0.c0)) BETWEEN ((LENGTH(rt0.c2))) AND ((((((vt0.c0)OR(vt0.c0)))OR(rt0.c0))))) LIMIT -172983780 OFFSET -1817883647;SELECT DISTINCT ((vt0.c0) IS FALSE), LAG((NOT ((v0.c0 IN (0.12648161215188725)))), (+ ((('-332227395') NOT BETWEEN (rt0.c0) AND (vt0.c0)))), (- ((rt0.c0 IN ())))) OVER (), NTILE(rt0.c1) OVER ( GROUPS (((rt0.c0)*(rt0.c2)) IN ()) PRECEDING EXCLUDE CURRENT ROW) FROM vt0, rt0, v0 WHERE (((((((((((0Xffffffffdb1f1807)AND(0.9913745470463646)))OR(NULL)))OR(0X74dad724)))AND(x''))) BETWEEN (CASE WHEN NULL THEN x'dfc7' WHEN '0.5994326313449928' THEN NULL WHEN -1.559982919E9 THEN -1489609405 END) AND ((x'e478' IN (x'b007'))))) GROUP BY v0.c0, x'', CAST('-723797586' AS INTEGER); -- 0ms;
SELECT DISTINCT (('-980606193')*(rt0.c1 COLLATE NOCASE)), '-2002560025', SUM((~ (x''))) OVER () FROM vt0;SELECT ALL ((MAX(rt0.c0)) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c2) NOTNULL))) FROM rt0;SELECT DISTINCT (((~ (v0.c0))) ISNULL) FROM rt0, vt0, v0 WHERE ((((0.18818008644998496 IN ())) NOT BETWEEN (CASE WHEN '>T' THEN NULL END) AND (HEX(NULL)))); -- 0ms;
SELECT DISTINCT ((((v0.c0)%(rt0.c0))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((((((((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(rt0.c2)))OR(v0.c0)))AND(rt0.c0)))) FROM v0 WHERE (((CASE 0xffffffffe1037a17  WHEN '1541070719' THEN '' ELSE NULL END)<<(x'')));SELECT DISTINCT ((v0.c0 COLLATE RTRIM) NOT NULL), (((- (NULL))) ISNULL), ((((vt0.c0) IS FALSE))==(((((rt0.c0)AND(v0.c0)))AND(rt0.c2)))) FROM rt0 WHERE ((+ ((-2.7163521E7 IN ()))));SELECT ALL (- (CAST(vt0.c0 AS TEXT))), CASE WHEN rt0.c1 THEN (((rt0.c2))>=((0.06937389615508949))) END, CAST((((vt0.c0, v0.c0, rt0.c1))!=((rt0.c0, v0.c0, vt0.c0))) AS REAL), CASE WHEN ((v0.c0)>(NULL)) THEN CASE WHEN rt0.c1 THEN '' END ELSE CASE WHEN rt0.c1 THEN vt0.c0 END END, (((vt0.c0)) NOT BETWEEN ((x'')) AND (((((rt0.c0))>((vt0.c0)))))) FROM vt0 WHERE (((x'') BETWEEN ('-1831267550') AND ((('-537849904') NOTNULL)))) ORDER BY ((0.78858017574471) NOT NULL) ASC, ((rt0.c0)>=(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((v0.c0 COLLATE NOCASE) IS TRUE) DESC;SELECT DISTINCT ((((((((AVG(rt0.c2))AND(((v0.c0) NOT NULL))))AND(MIN(vt0.c0))))OR(CAST(vt0.c0 AS TEXT))))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))) FROM rt0;SELECT ((((rt0.c1 IN ())))>=((CAST(v0.c0 AS INTEGER)))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT 0.5446720005252678, ((((v0.c0)&(rt0.c0)))<=(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)))), ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END)IS NOT(v0.c0)) FROM v0, rt0;SELECT ALL vt0.c0, vt0.c0, ((((v0.c0) NOTNULL))IS(rt0.c1 COLLATE RTRIM)) FROM rt0, vt0, v0; -- 0ms;
SELECT LIKELIHOOD(DISTINCT UNLIKELY(DISTINCT vt0.c0), 0.4470421966788809) FROM rt0, v0, vt0; -- 0ms;
SELECT ALL x'', ((TOTAL(NULL)) NOT NULL), ((rt0.c1)<<(v0.c0)) COLLATE NOCASE FROM v0, rt0, vt0 WHERE (((CASE -1012176919  WHEN 902070227 THEN '630096587' END) IS FALSE)) ORDER BY ((NULL) NOT NULL) ASC, ((0.48259901277867623) BETWEEN (CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 'R\n3''sT(' THEN rt0.c2 END) AND (((rt0.c0)-(rt0.c0)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT LAST_VALUE((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((v0.c0)))) OVER (), ((((-2.089891275E9) ISNULL)) NOTNULL), (((rt0.c2)) BETWEEN ((CHAR(vt0.c0, vt0.c0, rt0.c1))) AND (((v0.c0 IN ())))) FROM v0;SELECT ALL ('榛MJVZ㗾-' IN ()) FROM v0 WHERE (((((0.8887063403838189) ISNULL)) NOTNULL)) ORDER BY ((CAST(rt0.c2 AS INTEGER)) NOTNULL)  NULLS LAST;SELECT DISTINCT SUM(((v0.c0) ISNULL)) OVER () FROM vt0, v0; -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c2 AS BLOB)) FROM vt0 GROUP BY CAST((vt0.c0 IN ()) AS BLOB), ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (((rt0.c1) NOT NULL)) AND (((v0.c0)%(rt0.c1)))), ((((((((((('')AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)))AND(vt0.c0))))<((NULL))) HAVING CAST(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS TEXT) LIMIT 692749496 OFFSET 1603139837;SELECT ALL CAST(((((vt0.c0)OR(rt0.c2)))OR(vt0.c0)) AS TEXT) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)!=(rt0.c1)) IN ()) FROM v0 NOT INDEXED WHERE (x''); -- 0ms;
SELECT ((~ (v0.c0)) IN ()), (((rt0.c1)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE v0.c0 END))), RANK() OVER () FROM vt0, rt0, v0 WHERE ((- (0.15186848162346978 COLLATE RTRIM))); -- 0ms;
SELECT (((vt0.c0) NOT NULL) IN ()) FROM rt0, v0 WHERE (0.754029176239309); -- 0ms;
SELECT ALL NULLIF(HEX(rt0.c1), LIKELIHOOD(DISTINCT vt0.c0, 0.2317014051659071)) FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))>=(((rt0.c2) ISNULL))) FROM v0 WHERE (CASE CASE WHEN '-1160329769' THEN NULL WHEN NULL THEN 1.568520514E9 WHEN '-145894274' THEN '-1854124970' END  WHEN (((NULL, '47287321', x'428b')) BETWEEN ((NULL, NULL, '-11621020')) AND ((NULL, x'fe28b81b', ''))) THEN (+ (x'')) END);SELECT DISTINCT (CASE '-1618772299'  WHEN NULL THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 END IN ()) FROM vt0 WHERE (((((NULL)>(0.22331451713711759))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((rt0.c0)=(v0.c0)), ((rt0.c0) BETWEEN ('gj') AND (vt0.c0)) COLLATE BINARY, DENSE_RANK() OVER () FROM rt0, v0, vt0 WHERE ((((0.12794308992759207)) NOT BETWEEN ((UPPER(DISTINCT NULL))) AND ((CAST('-1433475298' AS TEXT))))) LIMIT 166756609; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c2)>>(rt0.c0))) OVER (), 0xffffffffe08f830a, v0.c0 FROM vt0, rt0 WHERE (((((((0.5872592996467146) BETWEEN (0.6715795366480196) AND (0Xfffffffffeec4bb5)))OR(CAST(0.4843234190556397 AS INTEGER))))AND((NOT ('d7S?L''cPq'))))) GROUP BY ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(v0.c0))) NOT BETWEEN (((rt0.c2)%(-1426080190))) AND (0.9031071991465736)), CASE WHEN (- (vt0.c0)) THEN UNLIKELY(vt0.c0) ELSE ((rt0.c1) IS TRUE) END, ((((NULL)AND(((v0.c0)AND('-1238110105')))))OR((+ (vt0.c0)))) HAVING ((((((((((rt0.c2)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(rt0.c2))) BETWEEN (((v0.c0)OR(rt0.c1))) AND (MAX(v0.c0))) LIMIT -1289124494 OFFSET -803397119;SELECT ALL AVG(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) OVER (), COUNT(*), SUM(CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 ELSE '' END), AVG(((v0.c0)IS NOT(v0.c0))), TOTAL(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 END COLLATE RTRIM) FILTER(WHERE ((((LIKELIHOOD(rt0.c1, 0.279217301942582))AND(vt0.c0)))AND((((v0.c0))==((v0.c0)))))) OVER () FROM rt0, vt0 WHERE (MIN(((x'')>=(0.6855445574569876)), (- ('g4{_eZ'))));SELECT rt0.c0 FROM v0, rt0, vt0 LIMIT 322393368; -- 1ms;
SELECT ALL UNICODE(((((rt0.c1)OR(0.8749613092581024)))OR(rt0.c1))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) FROM rt0, v0, vt0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((NOT (rt0.c1)))) AND (((('1201811339')/(rt0.c1))))) FROM v0, vt0, rt0 WHERE (((CASE WHEN 0.7621479448917822 THEN x'' WHEN NULL THEN x'' WHEN '-602867405' THEN x'ef14' ELSE 0.3958063821180656 END)AND(((x'')IS NOT(0.14158596251708255))))); -- 0ms;
SELECT ALL (~ (((vt0.c0) ISNULL))) FROM rt0, v0 WHERE (((((0.8742115142708503) NOT BETWEEN ('θU>t') AND (x'52ef'))) NOT BETWEEN ((x'' IN ())) AND ((~ (NULL)))));SELECT DISTINCT ((((- (v0.c0))))<((GROUP_CONCAT(v0.c0)))) FROM rt0 GROUP BY '-2127974898', ((((vt0.c0 IN ())))<=((((rt0.c2)+(rt0.c2))))), (((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)) IN ()) HAVING CAST(COUNT(*) AS INTEGER);SELECT DISTINCT (((v0.c0)) BETWEEN ((COALESCE(DISTINCT rt0.c2, vt0.c0))) AND ((CASE WHEN rt0.c1 THEN vt0.c0 END))) FROM vt0, rt0 WHERE ((((('0.5262276130512165') BETWEEN (0.22575726950588693) AND ('\4⤜8&x{'))) NOTNULL));SELECT ALL TOTAL(1579375348) OVER ( RANGE ((SQLITE_COMPILEOPTION_GET(vt0.c0)) BETWEEN (json_object(rt0.c0, v0.c0)) AND (rt0.c2 COLLATE NOCASE)) PRECEDING EXCLUDE CURRENT ROW) FROM vt0 LIMIT -1388385615 OFFSET -215216338;SELECT ALL TOTAL(((rt0.c1) NOT BETWEEN (NULL) AND (v0.c0))) FROM vt0, v0 WHERE ((NOT (((((((((x'')OR(x'')))AND(x'')))AND(-1.065509363E9)))AND(1553081572)))));SELECT ALL AVG(((v0.c0) ISNULL)) OVER () FROM v0; -- 0ms;
SELECT (NOT (((((((((rt0.c2)AND(v0.c0)))AND(x'')))AND(NULL)))OR(v0.c0)))), UPPER(DISTINCT ((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1))), ((((((((json_remove(rt0.c0, rt0.c2, rt0.c2, vt0.c0, v0.c0, rt0.c2))OR(SUM(v0.c0))))OR(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) ISNULL))) FROM v0 RIGHT OUTER JOIN rt0 ON (+ (rt0.c2)) LEFT OUTER JOIN vt0 ON (((rt0.c2, rt0.c2, 0.7681827191183209)) BETWEEN ((((vt0.c0)OR(rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END, ((v0.c0)>(v0.c0)))) AND ((TRIM(DISTINCT rt0.c2, rt0.c2), ((0.7646897082825888) BETWEEN (vt0.c0) AND (rt0.c1)), ((vt0.c0)%(rt0.c0))))) GROUP BY ((rt0.c1) NOT BETWEEN (GLOB(v0.c0, rt0.c0)) AND (((NULL)>>(rt0.c1)))) ORDER BY (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) DESC  NULLS FIRST, rt0.c2 DESC  NULLS FIRST;SELECT DISTINCT CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c0)-(rt0.c2)) END FROM v0, vt0, rt0; -- 0ms;
SELECT ((((vt0.c0)>>(vt0.c0)))LIKE(CASE v0.c0  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN NULL THEN v0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) FROM rt0, vt0 WHERE ((((((('-618719225')AND('zchzk볺5p')))OR('N*'))) NOT BETWEEN (('	' IN ())) AND (743248934 COLLATE NOCASE))) ORDER BY (+ (((vt0.c0) IS FALSE))), (+ (SQLITE_COMPILEOPTION_USED(v0.c0))) ASC  NULLS FIRST;SELECT ALL (((rt0.c2)<>(vt0.c0)) IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT NULL))>(UNLIKELY(v0.c0))) FROM vt0;SELECT ALL 0.9949893576456487, ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))==(rt0.c0)), (NOT (CAST(vt0.c0 AS TEXT))) FROM v0 WHERE (0.04538018147390799) LIMIT 1348985178;SELECT COUNT(*) OVER (), rt0.c0, ((((v0.c0)<<(rt0.c2)))&((+ (v0.c0)))) FROM vt0, rt0, v0; -- 0ms;
SELECT json_patch(rt0.c0 COLLATE NOCASE, (v0.c0 IN ())), ((CAST(rt0.c2 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))) AND (((vt0.c0)>>(v0.c0)))), ((((rt0.c0 COLLATE BINARY)OR((rt0.c1 IN ()))))AND(((-6.1965157E8) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) FROM rt0, vt0, v0 WHERE (((x'f6a6')=(0.7516609432994903)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c0 THEN vt0.c0 END IN ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))), v0.c0)), (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END, v0.c0 COLLATE RTRIM, UNLIKELY(vt0.c0)))>=((((vt0.c0)<>(v0.c0)), CAST(rt0.c2 AS REAL), vt0.c0 COLLATE RTRIM))), ((((((((MIN(rt0.c1))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c1)||(v0.c0)))))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c2)<=(vt0.c0)))), (((((rt0.c0)>>(rt0.c1))))==(('2009031630'))), COUNT(*) FROM v0;SELECT DISTINCT ((((((((((((CASE WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)AND(((rt0.c2)LIKE(vt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN x'' THEN '729511309' END)))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END)))OR('-2066489068')))OR((((vt0.c0))!=((v0.c0))))))AND(((rt0.c2)*(v0.c0)))) FROM rt0, v0, vt0; -- 1ms;
SELECT ((((rt0.c2) NOTNULL)) NOT NULL), ((((v0.c0)/(vt0.c0)))+((v0.c0 IN ()))), LAST_VALUE((('')AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) OVER () FROM vt0 WHERE (((((0.38929716003794945)+(''))) BETWEEN (((1042129982) BETWEEN ('-1709308858') AND (x''))) AND (NULL)));SELECT DISTINCT HEX(COUNT(*)) FROM rt0 WHERE ((((NOT (0.7826622871432602)))%(((((((((x'a52d')OR(NULL)))OR(x'')))OR(x'71e6')))AND(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(0.6459700650402836) OVER (), ((((((((SUM(vt0.c0))OR(0x6b68b5b5 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)))OR(v0.c0)))))OR(CAST(rt0.c2 AS REAL))))AND((((vt0.c0, vt0.c0, 0.6600881232328564))!=((rt0.c0, rt0.c1, rt0.c0))))), NTILE((((NOT (rt0.c2))) BETWEEN ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (rt0.c2))) OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, v0, rt0;SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) BETWEEN (TYPEOF(DISTINCT v0.c0)) AND ((rt0.c0 IN (rt0.c0)))) FROM vt0 NOT INDEXED;SELECT ((((v0.c0)OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(((((v0.c0)AND(rt0.c0)))AND(rt0.c2)))), ((((rt0.c0 COLLATE BINARY)OR(rt0.c0 COLLATE NOCASE)))AND(GROUP_CONCAT(rt0.c1))), (TRIM(DISTINCT vt0.c0, rt0.c0) IN ()) FROM vt0 WHERE ((- (']s-L{6?~')) COLLATE NOCASE) GROUP BY ((CASE v0.c0  WHEN v0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE rt0.c0 END) NOT NULL) HAVING (~ (CAST(rt0.c0 AS TEXT)));SELECT DISTINCT (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((((rt0.c1)>>(rt0.c1)), (((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'c47e'))), rt0.c0 COLLATE NOCASE)) AND ((CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END, (((rt0.c2)) BETWEEN ((x'')) AND ((v0.c0))), (rt0.c0 IN (vt0.c0))))) FROM v0;SELECT DISTINCT (CAST(NULL AS REAL) IN (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))), rt0.c2, PERCENT_RANK() OVER () FROM rt0, vt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN (('560341472', ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), x'')) AND ((((0.037946958662307906)IS NOT(rt0.c1)), ((-846727643) NOTNULL), COALESCE(DISTINCT vt0.c0, rt0.c2, v0.c0, v0.c0))))  NULLS LAST;SELECT DISTINCT CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN ((rt0.c1)-(rt0.c0)) ELSE ((vt0.c0)&(0xffffffffbc4aa3a7)) END FROM rt0, v0;SELECT DISTINCT (((rt0.c2, rt0.c1, v0.c0)) BETWEEN ((0.5439489769065629, (NOT (rt0.c0)), LIKELIHOOD(v0.c0, 0.3535311866958105))) AND ((IFNULL(DISTINCT vt0.c0, rt0.c0), (((0xffffffff808b051f)) BETWEEN ((vt0.c0)) AND ((rt0.c1))), UNICODE(rt0.c0)))) FROM vt0;SELECT DISTINCT ((0X0 COLLATE NOCASE) IS FALSE) FROM vt0, v0 LIMIT -490088499 OFFSET 781343817; -- 0ms;
SELECT ALL (((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)), NULL COLLATE RTRIM, (rt0.c0 IN ())))<((rt0.c2 COLLATE NOCASE, NULLIF(rt0.c2, vt0.c0), json_valid(vt0.c0)))) FROM rt0, vt0 GROUP BY ((((vt0.c0)%(rt0.c2))) NOT NULL) HAVING CAST(CAST(rt0.c1 AS INTEGER) AS REAL) LIMIT -1772475738;SELECT ALL (+ (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) FROM rt0, v0, vt0; -- 0ms;
SELECT ((rt0.c0 COLLATE BINARY)IS NOT(((rt0.c2) NOT NULL))) FROM v0, vt0 LIMIT 261743346 OFFSET -1664096860;SELECT CASE WHEN ((x'38d4f13f')=(rt0.c0)) THEN TOTAL(rt0.c2) END FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)) COLLATE RTRIM FROM vt0, rt0 WHERE (((((json_array_length('-1238110105', '-340777200'))OR(UPPER(DISTINCT 0xffffffffaf3ba5ba))))AND(((0.36654252604596216)OR(0.33868754716468197)))));SELECT CASE WHEN v0.c0 THEN 0.7241449326311076 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)) THEN (vt0.c0 IN (rt0.c0)) WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN LIKELY(DISTINCT rt0.c0) WHEN x'380a' COLLATE BINARY THEN NULLIF(DISTINCT rt0.c2, vt0.c0) WHEN CAST(rt0.c2 AS INTEGER) THEN (~ (rt0.c1)) ELSE TYPEOF(DISTINCT rt0.c0) END FROM v0, rt0, vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), ((((NULL)IS NOT(v0.c0)))IS(((v0.c0) BETWEEN (rt0.c1) AND (v0.c0)))), (+ (CASE WHEN vt0.c0 THEN rt0.c1 END)) FROM vt0 WHERE (((CASE x''  WHEN NULL THEN NULL ELSE x'63a2' END)>>((NOT (NULL)))));SELECT CASE CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c1 END  WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END THEN 'T|]C' ELSE (~ (vt0.c0)) END FROM rt0, vt0, v0 WHERE (CAST('''O''-V' AS NUMERIC) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c2) IN (TYPEOF(DISTINCT v0.c0), (((rt0.c2))<>((v0.c0))))), ((0.5445483791530753)<>(LIKELIHOOD(DISTINCT rt0.c2, 0.6996691776578633))), (((vt0.c0, NULL, rt0.c2)) BETWEEN ((NULL, v0.c0 COLLATE BINARY, (((0.9323561258731832, v0.c0, rt0.c0, rt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, rt0.c2, rt0.c1, rt0.c0))))) AND ((json(rt0.c0), '', ((rt0.c0)*(vt0.c0))))) FROM vt0, rt0 WHERE (((((0.23006105796673304) NOTNULL))<>(CASE NULL  WHEN x'' THEN x'' WHEN x'20df' THEN NULL WHEN 0.21041321248045797 THEN x'' WHEN 0xffffffff81d5b0a5 THEN 0.7383981753667854 WHEN x'cc4a' THEN x'5b61' END)));SELECT CASE 0.8134790513721157  WHEN (~ (vt0.c0)) THEN CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END WHEN (NOT (rt0.c2)) THEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE 'BVj\rE' END WHEN ((rt0.c0) NOTNULL) THEN UNICODE(rt0.c0) END FROM vt0 WHERE (NULL);SELECT ALL GROUP_CONCAT(CASE v0.c0  WHEN v0.c0 THEN rt0.c0 END) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt0 WHERE (SQLITE_VERSION()) ORDER BY IFNULL((vt0.c0 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) ASC  NULLS FIRST;SELECT DISTINCT ((rt0.c1)<<(v0.c0)) COLLATE RTRIM FROM v0, rt0 WHERE (TRIM(CASE 0Xffffffffaf9675f7  WHEN 0.7996798710194134 THEN '๴AKu	2z F' END, ((NULL)LIKE(0.3559132536032602)))); -- 0ms;
SELECT DISTINCT ((vt0.c0)*(rt0.c1)) COLLATE RTRIM, COUNT((NOT (rt0.c1))), ((((v0.c0) NOTNULL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))), rt0.c2, (NOT (((((v0.c0)AND(rt0.c0)))AND(rt0.c1)))) FROM v0, vt0, rt0 WHERE (''); -- 0ms;
SELECT ((NOT (rt0.c0)) IN ()) FROM v0, vt0, rt0; -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE BINARY, rt0.c2, AVG(x'') OVER () FROM vt0, rt0, v0 GROUP BY ((((COALESCE(rt0.c1, rt0.c2))AND(CASE WHEN rt0.c0 THEN x'9c1b' END)))AND(((v0.c0) NOT NULL))), 0x6c359d2b, ((((((x'10a9bf7c') ISNULL))AND(((vt0.c0) NOTNULL))))OR(((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c1)))) HAVING CAST(rt0.c1 AS INTEGER) COLLATE NOCASE;SELECT DISTINCT CASE WHEN v0.c0 THEN x'' ELSE NULL END COLLATE NOCASE FROM rt0, vt0, v0 WHERE ((((x'' IN (NULL))) NOT BETWEEN ((('1*>!&x') IS TRUE)) AND (((('0.9494898949315612', NULL, 'y0')) NOT BETWEEN (('-1735956171', 0.4149944679566948, -1285027883)) AND ((3.26423322E8, '', '0.7006238316677804')))))); -- 0ms;
SELECT ALL CAST(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT) FROM rt0, v0, vt0 WHERE (CASE ((0.7376578432562898) BETWEEN (0.3199236439588016) AND (x''))  WHEN ((x'')>('')) THEN ((0.47551435888986293)GLOB(x'')) END); -- 0ms;
SELECT SUM(rt0.c1), (((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()), (((rt0.c2) IS TRUE) IN ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))) FROM v0, rt0, vt0 UNION ALL SELECT ALL (((rt0.c0)>>('%%YT	')) IN ()), CAST(((rt0.c2)IS NOT(rt0.c2)) AS NUMERIC), CHAR(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))) FROM v0, rt0; -- 0ms;
SELECT 'N*' FROM v0, rt0, vt0 WHERE (((((+ (0.4908285395374168)), CASE WHEN 0.22393457951038576 THEN '9ivhG(' END, ((x'') BETWEEN ('') AND ('f')), -978013922 COLLATE BINARY, ((((x'')OR(692749496)))OR(1095142986))))<(((((0.9009643212433059))<>(('1797544917'))), (((0Xffffffff89b958d6)) BETWEEN ((NULL)) AND (('%^'))), (((NULL))<>((0.9494898949315612))), highlight(x'bac3', NULL, x'', '1384292471'), (('707196857') NOT BETWEEN ('1303895717') AND (NULL)))))); -- 0ms;
SELECT ALL ((((((9.00630211E8)==(v0.c0)))OR(0X46247cdc)))OR(json_type(rt0.c1))), CASE WHEN CAST(v0.c0 AS INTEGER) THEN json_object(v0.c0, rt0.c2, rt0.c0, rt0.c1) WHEN vt0.c0 COLLATE NOCASE THEN (((v0.c0))>((vt0.c0))) WHEN ((v0.c0)=(vt0.c0)) THEN (~ (vt0.c0)) END, (((rt0.c2 COLLATE NOCASE))<=(((((v0.c0, v0.c0, vt0.c0))>=((rt0.c2, v0.c0, rt0.c0)))))) FROM vt0, rt0, v0 WHERE ((('-328157996')OR('')) COLLATE BINARY) ORDER BY ((((((rt0.c2)AND(vt0.c0)))OR('1200935456')))-(((NULL)<<(1.200935456E9)))) ASC  NULLS LAST; -- 0ms;
SELECT ALL (((1969419842, rt0.c1, vt0.c0)) NOT BETWEEN ((((((((((rt0.c2)AND(0.9370638228310112)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), TYPEOF(vt0.c0), rt0.c1)) AND ((CAST(vt0.c0 AS INTEGER), ((v0.c0) IS FALSE), (- (rt0.c1))))) FROM v0, vt0, rt0 WHERE (CASE LIKELIHOOD(1.476275504E9, 0.10615948014245813)  WHEN x'' THEN NULL COLLATE BINARY WHEN ((NULL) IS TRUE) THEN (('륂m\rKP')IS(-461231468)) WHEN (0.3945680107788757 IN ()) THEN ((x'')<(NULL)) END) LIMIT 1037844792 OFFSET 2051181769; -- 1ms;
SELECT ((((x'')AND(((rt0.c2)<(vt0.c0)))))OR(((x'50ac') NOT BETWEEN (v0.c0) AND (NULL)))) FROM rt0;SELECT ((vt0.c0)%((~ (rt0.c0)))) FROM rt0;SELECT ALL ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))GLOB(((v0.c0) NOT NULL))), ((CAST(vt0.c0 AS BLOB))+(CASE v0.c0  WHEN v0.c0 THEN '' ELSE v0.c0 END)), (- (vt0.c0)) COLLATE RTRIM FROM rt0;SELECT DISTINCT ((((((rt0.c1)OR(v0.c0)))AND(rt0.c2))) BETWEEN (AVG(rt0.c0)) AND (json_type(v0.c0))), CAST(((rt0.c2)||(rt0.c0)) AS REAL), TRIM(CAST(vt0.c0 AS INTEGER)) FROM rt0, v0, vt0 GROUP BY ((- (rt0.c1)) IN ()); -- 0ms;
SELECT ALL CAST(COUNT(rt0.c2) AS NUMERIC) FROM rt0, v0, vt0 WHERE ((((('450851982')AND(NULL)))>>(((')옍W_p1') NOT BETWEEN ('') AND (0.6595255721945187))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS REAL), (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END IN ()), ((((rt0.c1)|(rt0.c2)))<=(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c1)))) FROM rt0;SELECT MIN(((vt0.c0) NOT NULL)), ((((rt0.c2)=(v0.c0))) BETWEEN (x'') AND (((0xffffffffe82b22da) NOT BETWEEN (1074870597) AND (rt0.c1)))), ((0x1ded66e3)<=(((rt0.c0)AND(rt0.c0)))) FROM rt0;SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) FROM v0, rt0, vt0; -- 0ms;
SELECT ALL (((((('lo') BETWEEN (rt0.c1) AND (rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))OR(rt0.c0)), CASE rt0.c1  WHEN (v0.c0 IN (vt0.c0)) THEN COUNT(rt0.c2) WHEN rt0.c0 THEN (~ (rt0.c0)) WHEN v0.c0 THEN CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 END END, ((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)GLOB(NULL)) FROM v0, vt0 WHERE ((((0.293655590068161)) BETWEEN ((1001215444)) AND ((((('')) BETWEEN ((0xffffffffcd397ebe)) AND ((NULL)))))));SELECT DISTINCT (- ((rt0.c0 IN ()))), (CASE WHEN rt0.c1 THEN v0.c0 WHEN '' THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END IN ()), ((CASE WHEN '-234178992' THEN rt0.c2 END)OR(((rt0.c2)IS NOT(rt0.c0)))) FROM vt0;SELECT ALL COALESCE(rt0.c0, json(vt0.c0)) FROM v0, vt0, rt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c0)) NOT NULL) FROM v0, vt0, rt0 WHERE ((((('-1832149504')-(x''))) NOTNULL)) ORDER BY rt0.c2 ASC  NULLS LAST; -- 0ms;
SELECT ALL CASE 0.6653735700818465  WHEN CAST(x'' AS INTEGER) THEN ((vt0.c0) NOTNULL) ELSE CAST(vt0.c0 AS TEXT) END FROM vt0, rt0 WHERE ((~ (((('-593010859')) NOT BETWEEN (('0')) AND ((412465194)))))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(v0.c0))IS(CAST(v0.c0 AS TEXT))) FROM rt0;SELECT ALL CAST((- ('215526601')) AS NUMERIC) FROM vt0 CROSS JOIN v0 ON (((((((((- (v0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR(CASE WHEN '-145894274' THEN rt0.c0 WHEN rt0.c2 THEN 0.27933339703802174 WHEN rt0.c1 THEN rt0.c1 ELSE x'' END)))OR(CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END)))AND((vt0.c0 IN ()))) WHERE (CASE (('*IXty9	칊u')==('0.13972009054746626'))  WHEN ((((0.17218216601754843)AND(2097735205)))OR('')) THEN ((('&+{Qs>')) BETWEEN ((0.7543576065967292)) AND (('4df J1'))) ELSE ((NULL)LIKE(0.5375284154361251)) END) LIMIT 1529979427; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), SUM(((rt0.c1)&(809014944))) FILTER(WHERE ((CASE rt0.c2  WHEN vt0.c0 THEN v0.c0 END)>>((- (vt0.c0))))) OVER (), ((((((((x'' COLLATE NOCASE)AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN v0.c0 END)))AND(((rt0.c1)>=(v0.c0)))))OR(((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)))))AND((((v0.c0))<=((rt0.c1))))) FROM rt0 WHERE (CASE CAST(x'2959' AS BLOB)  WHEN CASE -1085158211  WHEN 0.11598685902227013 THEN NULL END THEN (((NULL)) NOT BETWEEN (('n _嗔W')) AND ((x'fa09'))) WHEN ((x'20bd') IS FALSE) THEN CASE WHEN 'y0' THEN NULL END WHEN CASE NULL  WHEN 0.41380792631782426 THEN NULL END THEN x'0f12' COLLATE BINARY END) ORDER BY ABS(CAST(v0.c0 AS BLOB)) DESC  NULLS FIRST;SELECT DISTINCT (((rt0.c1, rt0.c0, v0.c0)) BETWEEN ((((x'') NOT NULL), CAST(NULL AS BLOB), rt0.c0)) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)), (('-215216338') ISNULL), rt0.c1))), CAST(CAST(rt0.c0 AS REAL) AS BLOB), CUME_DIST() OVER () FROM rt0, v0, vt0; -- 0ms;
SELECT ALL rt0.c1 FROM vt0, v0 WHERE (((((((NULL)AND(0x3bfaa053)))AND(0.22000317257326263))) ISNULL));SELECT DISTINCT (((rt0.c2)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)))) AND ((AVG(v0.c0)))) FROM rt0, v0, vt0 GROUP BY (((vt0.c0 IN ())) IS FALSE); -- 0ms;
SELECT LEAD((NOT (((rt0.c2)OR(rt0.c2)))), CAST(CASE WHEN rt0.c2 THEN 0X3d7cd3b2 END AS INTEGER), (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))>((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt0; -- 0ms;
SELECT DISTINCT (((x'')-(v0.c0)) IN (((((vt0.c0)AND('51988171')))OR(rt0.c1)))) FROM v0 WHERE (((('-2051301010', 0.06970086231718642, '-1560222877')) BETWEEN (((+ (x'')), CASE WHEN NULL THEN '0.14158596251708255' ELSE '7.,0xt>' END, json_object(NULL, -363979089))) AND ((CASE WHEN 0.1628186151114689 THEN '' END, PRINTF('299314961', x'', 0.12420332909992104, NULL, x''), NULL)))) ORDER BY ((((CAST(rt0.c1 AS TEXT))AND(rt0.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ASC, rt0.c1 ASC;SELECT DISTINCT (+ (0.010575469840907514)) FROM v0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c1)))LIKE(CAST(vt0.c0 AS TEXT))) FROM rt0, vt0 ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN x'' END)|(CAST(vt0.c0 AS INTEGER))); -- 0ms;
SELECT (((rt0.c2 IN ())) IS TRUE) FROM rt0, vt0, v0 WHERE (((((((0.34810598001959847)OR(x'')))OR(0.4043223754141233)))OR(CAST('0.1067277272838364' AS INTEGER)))); -- 0ms;
SELECT ((((CAST(x'' AS TEXT))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt0.c0 COLLATE BINARY)) FROM vt0, rt0 WHERE (CAST(((('-527465718')) NOT BETWEEN (('dlIrl')) AND (('D&VST'))) AS REAL)); -- 0ms;
SELECT ALL json_valid(rt0.c0 COLLATE NOCASE), (CASE WHEN rt0.c2 THEN rt0.c2 END IN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)), (- (rt0.c1)))), ((((((((((((((((CAST(rt0.c2 AS TEXT))AND(CAST(v0.c0 AS BLOB))))AND((rt0.c0 IN (rt0.c2, vt0.c0)))))AND((~ (rt0.c2)))))AND(((rt0.c1)>(rt0.c1)))))AND((~ (rt0.c1)))))OR(highlight(v0.c0, rt0.c0, rt0.c0, v0.c0))))AND(((vt0.c0)*(v0.c0)))))AND('-1338933402')) FROM rt0, vt0 WHERE (CAST(((0X4a1aaf7b)+('.U'' lm')) AS REAL));SELECT DISTINCT v0.c0 FROM rt0, vt0 WHERE (((((((((LIKELIHOOD('0.23519492590801228', 0.5016387708426399))OR(((x'') NOT NULL))))OR((('568393999') NOT BETWEEN (0x2d4f95d8) AND (0X52408cad)))))AND((0.2018554027745859 IN ()))))AND((0.5531807971793287 IN ()))));SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) NOTNULL) FROM v0 WHERE (((x'' COLLATE RTRIM) BETWEEN (((0.5531807971793287) BETWEEN (x'23ea') AND (NULL))) AND (((('0.5531807971793287')) NOT BETWEEN (('')) AND ((NULL))))));SELECT ALL ((((vt0.c0)||(rt0.c1)))LIKE(((v0.c0) NOTNULL))) FROM rt0 WHERE ((((((0.07018314157313166))>((NULL)))) BETWEEN (((0.2283914593693369) IS FALSE)) AND (((NULL) NOT BETWEEN (0x540688ba) AND ('-1969118230')))));SELECT ((((vt0.c0) NOTNULL))AND((((vt0.c0, v0.c0, vt0.c0, rt0.c2, vt0.c0)) BETWEEN ((v0.c0, vt0.c0, rt0.c1, -2.02938634E8, '459750145')) AND ((NULL, rt0.c1, 'i!G%AB', rt0.c1, rt0.c1))))) FROM v0, vt0;SELECT DISTINCT NULLIF((((v0.c0, v0.c0, rt0.c2, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2, rt0.c2, v0.c0)) AND ((rt0.c1, v0.c0, rt0.c0, rt0.c1, rt0.c2))), 0.2392522609613903) FROM vt0 WHERE ((((((NULL, NULL, '1318348722')) BETWEEN ((NULL, NULL, '-774568105')) AND ((NULL, 0.5428229948867902, -1567040023)))) NOT BETWEEN (((x'')||('-1013857353'))) AND (((x'')<=(NULL))))) LIMIT 386637831;SELECT DISTINCT (((rt0.c2)<=(rt0.c0)) IN ()) FROM vt0, v0, rt0 WHERE ('P\rZ') GROUP BY ((((rt0.c0)AND(vt0.c0 COLLATE BINARY)))AND(((v0.c0)LIKE(rt0.c0)))) HAVING (NOT (TOTAL(v0.c0))); -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((rt0.c0))>=((vt0.c0))))) FROM v0, vt0;SELECT COUNT(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) OVER () FROM rt0, vt0, v0; -- 0ms;
SELECT DISTINCT (((((((((NOT (0.5234204387733334)))AND(((vt0.c0)GLOB(v0.c0)))))OR(QUOTE(0.43741113211239935))))AND(CAST(rt0.c0 AS NUMERIC))))AND((rt0.c1 IN ()))) FROM vt0; -- 1ms;
SELECT ALL (((v0.c0)<>('9SCP䊅yE0')) IN ()), vt0.c0, ((((((rt0.c2, v0.c0, rt0.c2)) NOT BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((v0.c0, v0.c0, rt0.c1))), CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END, ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))<((((((((((rt0.c2)OR(vt0.c0)))OR('a㴯')))AND(rt0.c1)))OR(vt0.c0)), rt0.c1, ((-938324128)>=(0.24899132716924532))))), PERCENT_RANK() OVER (), UPPER(((rt0.c2) ISNULL)), (v0.c0 IN (rt0.c0)) COLLATE NOCASE, COUNT(*) FROM rt0;SELECT ALL CASE WHEN NULL THEN 0.2367646901607685 WHEN ((((((((rt0.c2)OR(rt0.c1)))AND('~2X8LH#A%')))AND(rt0.c1)))OR(v0.c0)) THEN (~ ('0.411384685741229')) WHEN ((rt0.c0) NOTNULL) THEN (+ (x'c2ec')) ELSE ((rt0.c1)IS(rt0.c1)) END, TOTAL(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 END) OVER (), CAST(NULLIF(DISTINCT rt0.c2, rt0.c1) AS INTEGER) FROM rt0, v0, vt0 GROUP BY (((rt0.c2)GLOB(vt0.c0)) IN ()) HAVING NULL ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 END AS REAL); -- 0ms;
SELECT (((- (rt0.c0))) NOT BETWEEN ((rt0.c2 IN ())) AND (((v0.c0)*(vt0.c0)))) FROM vt0, rt0, v0 WHERE ((((('')+('759505334')))>=(((0Xffffffffa6a6e156) NOT BETWEEN (x'') AND (NULL))))) ORDER BY (((vt0.c0)>=(rt0.c2)) IN ()) ASC; -- 0ms;
SELECT ALL ((((v0.c0 COLLATE BINARY)OR(MAX(rt0.c1))))AND(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))), MIN(rt0.c0), (((- (v0.c0))) BETWEEN (((rt0.c2)OR(vt0.c0))) AND (MAX(rt0.c2))) FROM v0, rt0, vt0 WHERE ((((0.8497416490663484)) NOT BETWEEN (((((NULL, 905924089, 0.24950837353276556))<((x'', '', '1568520514'))))) AND (((('')<=(NULL)))))) LIMIT 1047465290; -- 0ms;
SELECT json_valid(((vt0.c0)<(rt0.c2))) FROM vt0, rt0, v0 WHERE (((((((((((0.37530840262210197)OR(1.001215444E9)))OR('')))OR(x'')))OR(0.8774729260001879)))<=(((('57012832')) BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (rt0.c1) AND (v0.c0))) BETWEEN (rt0.c0) AND (((-924837273)<<(rt0.c2)))), vt0.c0, '72571428' FROM v0, rt0, vt0 WHERE (CAST(CAST('7' AS NUMERIC) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))>>(SUM(rt0.c2))) FROM rt0, vt0, v0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(NULL) THEN (('-11621020')OR(NULL)) ELSE x'' END); -- 0ms;
SELECT DISTINCT AVG(CASE v0.c0  WHEN 's/(^' THEN vt0.c0 ELSE rt0.c1 END), LIKELIHOOD(CASE v0.c0  WHEN 0.5258257543520239 THEN rt0.c2 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END, 0.553569602668518), COUNT(*) OVER () FROM vt0 GROUP BY 1.166744739E9 HAVING (((((((vt0.c0)OR(rt0.c2)))AND(v0.c0)), (((vt0.c0))!=((rt0.c1))), ((vt0.c0) NOT BETWEEN (v0.c0) AND (0.5706958289887324))))<((((vt0.c0)IS NOT(vt0.c0)), ((v0.c0) IS FALSE), 0.5652086483545494)));SELECT DISTINCT (((~ (rt0.c2)))>=(CAST(rt0.c2 AS TEXT))), rt0.c0, CAST(((v0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) AS TEXT) FROM vt0, v0, rt0 WHERE ((((((((('1e500')AND(NULL)))OR(0Xffffffffeaa5097d)))AND(NULL)))AND(x'807a')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT v0.c0 FROM vt0 NOT INDEXED, rt0, v0 WHERE (CASE WHEN (NULL IN ()) THEN CAST(NULL AS REAL) WHEN ((((x'')AND(NULL)))AND('<࿐7')) THEN (('-1358452174') NOT BETWEEN (NULL) AND (1647393611)) WHEN (NOT (NULL)) THEN (~ (-1559982919)) ELSE '-1574006582' END); -- 0ms;
SELECT ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY, ((rt0.c2)>=(((rt0.c2)>(rt0.c1)))), UPPER(rt0.c0) COLLATE NOCASE FROM rt0 WHERE (ABS('454015132' COLLATE NOCASE));SELECT DISTINCT TOTAL((- (rt0.c0)) COLLATE BINARY) OVER ( PARTITION BY ((((json_valid(rt0.c1))AND((v0.c0 IN ()))))AND(((vt0.c0)IS(vt0.c0)))), QUOTE(NULLIF(DISTINCT rt0.c2, rt0.c0))) FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN NULL THEN NULL ELSE 'Kn6' END; -- 1ms;
SELECT DISTINCT rt0.c0 FROM rt0, v0 WHERE (CAST((NOT (0.23327169459674346)) AS TEXT)); -- 0ms;
SELECT ALL (((((rt0.c0))<((vt0.c0))))<=(rt0.c1)) FROM rt0, v0, vt0 WHERE (CAST(('' IN (x'')) AS REAL)); -- 0ms;
SELECT (((rt0.c0)) BETWEEN (((- (rt0.c1)))) AND ((((((rt0.c0)OR(rt0.c2)))OR(vt0.c0))))), COUNT(*), ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END) NOT NULL) FROM rt0, v0 WHERE ((('')==((((('58815148')AND(NULL)))OR('*\\r'))))) ORDER BY ((rt0.c1)AND(v0.c0)) COLLATE RTRIM, ((rt0.c2) BETWEEN ('Y0') AND (v0.c0)), CASE WHEN rt0.c2 THEN v0.c0 ELSE vt0.c0 END COLLATE RTRIM DESC;SELECT DISTINCT ((('<}B4hd)<'))<=((0.13921227203984088))) FROM v0, rt0 NOT INDEXED, vt0 WHERE (CASE ((NULL) NOT BETWEEN (0.28569013953745404) AND (NULL))  WHEN CASE ''  WHEN '' THEN x'' WHEN 0xffffffffdd2f3428 THEN '	%' WHEN 0.7996798710194134 THEN '-1285027883' ELSE 0.05021058275668133 END THEN CAST(0.05877723165157722 AS BLOB) ELSE ((NULL)LIKE('!i')) END); -- 0ms;
SELECT ((rt0.c1 IN (rt0.c2, rt0.c2)) IN ()), rtreenode((+ (rt0.c2)), CAST(rt0.c0 AS INTEGER)), ((rt0.c1 IN ()) IN ()), ((rt0.c2)>=((- (rt0.c2)))), ((CAST(rt0.c2 AS TEXT)) BETWEEN (((v0.c0)>=(rt0.c0))) AND (rt0.c1)) FROM v0, vt0;SELECT ((((('0.48804517470890274')AND(v0.c0)))OR(rt0.c1)) IN ('')) FROM v0, vt0, rt0 WHERE (CASE ((0.487381047325095) BETWEEN (NULL) AND (x'3c98'))  WHEN ((0.6811307084840852)>>(')')) THEN (NULL IN ()) END) ORDER BY CAST(((((vt0.c0)OR(rt0.c1)))AND(0.1913800517712284)) AS NUMERIC) ASC  NULLS LAST, (((v0.c0) NOTNULL) IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((((rt0.c0) BETWEEN (rt0.c2) AND (0.9297864790327953))))>((vt0.c0 COLLATE BINARY))) FROM v0, rt0, vt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (996535345 COLLATE BINARY) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)OR(vt0.c0)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c0))) AND (v0.c0 COLLATE NOCASE)) ASC;SELECT DISTINCT COUNT(((v0.c0)||(vt0.c0))) FROM rt0 WHERE ((((+ ('-842869001')))||(CAST(0.30621175362022846 AS INTEGER))));SELECT DISTINCT ((((((vt0.c0)OR(rt0.c1)))AND(rt0.c0)))IS((((rt0.c2)) BETWEEN ((rt0.c2)) AND (('VkG*\3U'))))), ((v0.c0)==(rt0.c2)) COLLATE NOCASE, ((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) AND (((((((((rt0.c2)AND(v0.c0)))OR(rt0.c1)))AND(vt0.c0)))AND(vt0.c0)))) FROM rt0, vt0 GROUP BY (((CAST(rt0.c2 AS REAL)))!=((CASE WHEN rt0.c2 THEN v0.c0 END))), ((('0.11749562939028879', vt0.c0, v0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB), (v0.c0 IN ()), CAST(rt0.c1 AS BLOB))) AND ((IFNULL(rt0.c1, rt0.c1), vt0.c0, ((v0.c0)>=(rt0.c2))))), ((((((rt0.c2)OR(0xffffffffaa36cb76)))OR(v0.c0))) NOTNULL) LIMIT 1215769886 OFFSET -1832507129;SELECT DISTINCT LTRIM(MAX(vt0.c0)), ((0xffffffff9fe937d2) ISNULL), ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) COLLATE BINARY FROM vt0, v0, rt0; -- 0ms;
SELECT ALL json_quote((rt0.c0 IN ())), 'a', ((CAST(vt0.c0 AS TEXT)) IS FALSE) FROM vt0, rt0 WHERE (((x'6865aa98' COLLATE BINARY)IS(INSTR(1763922036, x'edf7')))); -- 0ms;
SELECT (~ (CAST(rt0.c1 AS REAL))) FROM v0 WHERE (0.5120343842049415);SELECT ((rt0.c2) NOT NULL) COLLATE BINARY FROM rt0; -- 0ms;
SELECT (NULL IN ()) FROM vt0, v0 RIGHT OUTER JOIN rt0 ON (((v0.c0)) BETWEEN (((~ (rt0.c1)))) AND (((rt0.c1 IN ())))) WHERE (((CAST(-0.0 AS INTEGER)) NOT BETWEEN ((('-1872212805') IS FALSE)) AND (CAST(0.6545187395080597 AS TEXT)))); -- 1ms;
SELECT DISTINCT ((((vt0.c0)-(vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE ((((x'bfdb')) NOT BETWEEN ((CASE WHEN 0.39009637650060724 THEN 0.6024604320404443 END)) AND ((json_array('yD/c', -1559340129)))));SELECT DISTINCT ((((((((((((rt0.c0)AND(vt0.c0)))OR(v0.c0)))OR('')))AND(MIN(rt0.c1))))OR(MAX(rt0.c2))))AND(((rt0.c2)==(v0.c0)))) FROM rt0, vt0 WHERE (((TYPEOF(DISTINCT NULL)) IS TRUE));SELECT v0.c0 FROM rt0 LIMIT -445366892;SELECT DISTINCT (((((((rt0.c1))>=((NULL))))OR(CAST(v0.c0 AS INTEGER))))AND(MAX(rt0.c1))) FROM vt0 WHERE ((((('L''') BETWEEN (0Xffffffff8482f6b4) AND ('1224355227'))) NOT BETWEEN ((NOT (x''))) AND ((('')&(-1277736422)))));SELECT DISTINCT v0.c0 FROM rt0, v0 ORDER BY (((~ (vt0.c0))) IS TRUE) ASC, (-700879462 IN ()), ((CAST(vt0.c0 AS TEXT))+(((v0.c0)IS NOT(rt0.c0))))  NULLS LAST;SELECT ALL rt0.c1 FROM rt0, vt0, v0; -- 0ms;
SELECT CAST((((vt0.c0))<>((rt0.c0))) AS REAL), (('254992625') BETWEEN (CAST(vt0.c0 AS REAL)) AND (COUNT(rt0.c0))), AVG(CAST(rt0.c2 AS TEXT)) OVER (), (~ (((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))), (NULL IN ()) FROM rt0 WHERE ((((NULL, NULL, '')) BETWEEN ((CASE WHEN NULL THEN 0.15159966113638756 END, 0.6601801304228541, (((NULL)) NOT BETWEEN ((0.9470802928848142)) AND ((0.20280594426484366))))) AND ((((NULL)OR(x'')), ((0.07541339614248455) NOTNULL), 0.44696943099516306 COLLATE BINARY))));SELECT DISTINCT ((SUM(vt0.c0))/((NOT (v0.c0)))), (+ (rt0.c1 COLLATE BINARY)), ((((((((STRFTIME(rt0.c1, rt0.c2, v0.c0, rt0.c2, rt0.c2))OR(rt0.c1)))OR(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c0)*(rt0.c2)))))OR((NOT (rt0.c1)))) FROM v0, vt0 WHERE ((CAST(0.3796798135697773 AS TEXT) IN (125099537 COLLATE RTRIM)));