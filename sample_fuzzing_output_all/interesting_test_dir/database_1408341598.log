-- Time: 2024/06/07 02:42:56
-- Database: database98
-- Database version: 3.40.0
-- seed value: 1408341598
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0) VALUES (x'', 0.7048139155768975); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('13662404', '13662404', ''); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES (NULL, 0.7703030478125693), (NULL, x''), (x'', 0X23c7f16f); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1) VALUES (1.3662404E7, 0.61789710706762); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM rt0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX RTRIM; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR ABORT rt0 SET (c2)=(NULL) WHERE CASE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN (x'b2ab' IN ()) THEN CASE x''  WHEN rt0.c2 THEN rt0.c1 END END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
ANALYZE; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=''; -- 0ms;
PRAGMA mmap_size = 8992510621629199842; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (1523054272, 0x23c7f16f); -- 1ms;
DROP TABLE rt0; -- 11ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 354033851); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 12ms;
INSERT OR IGNORE INTO vt0 VALUES ('1605299013'), (x''), (x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1289252775 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (192352668), (1e500), ('-598923299'); -- 7ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 346075658);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1860222551); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
PRAGMA temp.default_cache_size = -598923299; -- 0ms;
ANALYZE main; -- 0ms;
END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-598923299'); -- 0ms;
PRAGMA short_column_names = false; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.61789710706762); -- 1ms;
COMMIT; -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT MIN(((vt0.c0)>=(vt0.c0))) COLLATE RTRIM FROM vt0 GROUP BY CAST(((vt0.c0) NOT NULL) AS TEXT); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) ISNULL), (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) IN ()), vt0.c0 FROM vt0; -- 0ms;
SELECT ALL vt0.c0, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)!=(vt0.c0)), vt0.c0)), (vt0.c0 COLLATE RTRIM IN (AVG(vt0.c0))), ((vt0.c0 COLLATE RTRIM) NOTNULL), RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS TEXT) COLLATE NOCASE FROM vt0 NOT INDEXED WHERE (NULL); -- 0ms;
SELECT DISTINCT (- ('')) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (((((NULL)|(NULL))) BETWEEN ((0xffffffffe79ac491 IN ())) AND (((((x'')OR('-598923299')))AND(0.2905411933911408))))) ORDER BY (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC LIMIT 818907803 OFFSET 13662404; -- 0ms;
SELECT LENGTH((vt0.c0 IN ())) FROM vt0 GROUP BY ((- (vt0.c0)) IN ((vt0.c0 IN ()))), CAST('-598923299' AS INTEGER), vt0.c0, (((((((8.18907803E8))>=((vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) IS FALSE))), 0.01059279868389873; -- 0ms;
SELECT DISTINCT (NOT (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((780443195) BETWEEN (0.61789710706762) AND (NULL)) COLLATE NOCASE); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT (CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) FROM vt0 WHERE ((((NOT (NULL)))!=((x'577e' IN ())))); -- 0ms;
SELECT ALL ('2T' IN (TRIM(DISTINCT 'x{!/nm7Kq', vt0.c0), ((vt0.c0) IS TRUE), (vt0.c0 IN ()))) FROM vt0 WHERE ((((NULL IN ())) NOT BETWEEN (((((0Xffffffffdc4d27dd)AND('-704950479')))OR(x''))) AND (((-1289252775) IS FALSE)))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) ISNULL) AS INTEGER), ((NOT (vt0.c0)) IN ()), (((- (vt0.c0))) BETWEEN (COUNT('o|wQ⥚&JNa')) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (((((((x'd8b5')=(x'')))OR(((((NULL)AND(NULL)))AND(x'd74a')))))OR(((((NULL)AND(7.80443195E8)))AND('13662404'))))); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(x'' AS NUMERIC) WHEN (((('v''_{}뚚5')AND(vt0.c0)))AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.6285378124489197 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0)LIKE(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT MIN(TYPEOF(vt0.c0)) FROM vt0 WHERE (('0.6285378124489197' IN ())) GROUP BY CHAR(vt0.c0, ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))>=((vt0.c0)))), (((((~ (vt0.c0)))OR(LOWER(NULL))))OR((- (vt0.c0)))), (vt0.c0 IN ()) HAVING ((MIN(vt0.c0))>=((NOT (vt0.c0)))); -- 0ms;
SELECT ALL (NOT (CAST(vt0.c0 AS REAL))), ((CAST(vt0.c0 AS BLOB))IS NOT(((vt0.c0)=(vt0.c0)))), ((x'7a67')*((((vt0.c0))<=((vt0.c0))))) FROM vt0 WHERE (((NULL COLLATE BINARY)|((- (x''))))) ORDER BY ((((((vt0.c0)IS NOT(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) LIMIT -626258779; -- 0ms;
SELECT DISTINCT CASE WHEN (NOT (vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN GROUP_CONCAT(vt0.c0) THEN (- (vt0.c0)) WHEN vt0.c0 COLLATE RTRIM THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))!=(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((((vt0.c0))=((vt0.c0)))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.7048139155768975 END) AND (((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT ALL NTILE(((((vt0.c0) IS FALSE)) IS TRUE)) OVER () FROM vt0;SELECT DISTINCT CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL), LIKELIHOOD(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.3173910988366532), ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((- (vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt0 WHERE ((((LOWER(DISTINCT x'4fe7'), (('-1799309670') IS TRUE), (((NULL)) NOT BETWEEN ((NULL)) AND (('0h')))))=((CASE WHEN '0.6285378124489197' THEN NULL WHEN 513804654 THEN '35031135' WHEN '-1076856548' THEN '513804654' WHEN x'175c' THEN x'' WHEN '559977744' THEN x'e806' END, CASE '0.7703030478125693'  WHEN -286157556 THEN 0.3458592483061512 ELSE 0.7595855772985888 END, (('-245726172') NOT BETWEEN (NULL) AND ('')))))) LIMIT 192352668; -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS REAL))), LEAD(((((vt0.c0)+(x'')))+((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))), (((NOT (vt0.c0))) ISNULL), ((vt0.c0) NOTNULL) COLLATE BINARY) OVER ( ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE x'c511' END COLLATE RTRIM DESC  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ()) ASC), ((CAST(vt0.c0 AS INTEGER)) IS TRUE) FROM vt0 WHERE (((((('HEMS')) BETWEEN ((0.451589587148559)) AND (('-742496994'))))>>(CAST(1.605299013E9 AS NUMERIC)))); -- 0ms;
SELECT ((CAST(vt0.c0 AS BLOB)) ISNULL), RANK() OVER (), COUNT(*) OVER () FROM vt0 WHERE (CASE CAST(0.6541652751066481 AS TEXT)  WHEN (-198713964 IN ()) THEN CASE WHEN '-1799309670' THEN x'' ELSE '1558802987' END WHEN x'a5ee' COLLATE NOCASE THEN ((0.7595855772985888)/(NULL)) WHEN (((('')OR('192352668')))AND(548830414)) THEN (((x'6ef7', NULL, x'')) NOT BETWEEN ((NULL, 0.2905411933911408, x'045a')) AND ((0x14a0b20a, '356048402', 0.7649133833161872))) WHEN x'' COLLATE NOCASE THEN CASE '-1189431785'  WHEN 1.68960873E8 THEN -626258779 ELSE '' END WHEN ((0.07529651021792627)|(x'')) THEN 0.31534433489530955 ELSE HEX('528704172') END); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.7595855772985888 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((('7r⍩''k')<=(vt0.c0))) AND (((vt0.c0)IS('1147460396')))), TOTAL(((vt0.c0) IS FALSE)), CAST(((vt0.c0) NOT NULL) AS REAL) FROM vt0 WHERE ('0.3458592483061512'); -- 1ms;
SELECT DISTINCT TOTAL(SQLITE_COMPILEOPTION_USED(vt0.c0)) OVER (), CAST(ABS(DISTINCT NULL) AS INTEGER), GROUP_CONCAT(CAST(NULL AS INTEGER)) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC))%(vt0.c0)) FROM vt0 WHERE ((+ ((((x'')) BETWEEN ((0.1851421838503451)) AND ((x'')))))); -- 0ms;
SELECT ALL GROUP_CONCAT((vt0.c0 IN ())), ((vt0.c0) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0)>=(vt0.c0))) AND (MIN(vt0.c0))) FROM vt0 WHERE ((+ ((('132724458') IS FALSE)))); -- 0ms;
SELECT (CAST(vt0.c0 AS REAL) IN ((('e᫻') NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT (vt0.c0 IN ()) COLLATE BINARY FROM vt0 WHERE ((((((-245726172))<=(('926962942'))))>>(((x'2f9c')+(0.9964911043729301))))) LIMIT 818907803 OFFSET 1922220983; -- 0ms;
SELECT DISTINCT SUM(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FILTER(WHERE (NOT (QUOTE(vt0.c0)))) OVER () FROM vt0 GROUP BY (+ (vt0.c0)), CASE WHEN (('1689666587') ISNULL) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('*', vt0.c0, vt0.c0)) AND (('464303814', vt0.c0, vt0.c0))) END, ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) NOT NULL))))AND(('432957792' IN ()))) HAVING MAX(((vt0.c0)<<(vt0.c0))) LIMIT -535182744;SELECT ALL vt0.c0 FROM vt0 LIMIT 1689666587; -- 0ms;
SELECT DISTINCT (+ (((vt0.c0)IS(vt0.c0)))), ((vt0.c0 COLLATE RTRIM) NOTNULL), x'' FROM vt0; -- 0ms;
SELECT ((((SUM(NULL))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT (- (vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((NULL COLLATE NOCASE) NOT NULL)); -- 0ms;
SELECT ALL NTH_VALUE(CAST(vt0.c0 AS BLOB) COLLATE NOCASE, ((NULL) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) OVER () FROM vt0 GROUP BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL), CAST('tZbcKUA''쎷' AS BLOB), HEX(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) HAVING COUNT(*);SELECT DISTINCT CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.6895118126337303 END THEN AVG(vt0.c0) ELSE x'8445' END FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ((((CAST(vt0.c0 AS BLOB))AND(COUNT(*))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), json_array_length((NOT (vt0.c0)), vt0.c0) FROM vt0 WHERE (((CAST(NULL AS TEXT))LIKE(0.38998125470617784))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((vt0.c0 IN (vt0.c0))) OVER (), (CAST(vt0.c0 AS BLOB) IN (((vt0.c0) NOT NULL))), vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((NULL)<<(vt0.c0 COLLATE BINARY)), ((((vt0.c0, '-1799309670', vt0.c0))==((vt0.c0, vt0.c0, vt0.c0))) IN ()), AVG((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, 0.15738240496079758))) COLLATE BINARY) OVER () FROM vt0; -- 0ms;
SELECT ((vt0.c0) IS TRUE), ((((vt0.c0)<(vt0.c0)))=(((vt0.c0)||(vt0.c0)))), (vt0.c0 IN ()) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN (0.38998125470617784) AND (vt0.c0)), (((((vt0.c0))=((vt0.c0))))*(CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), (((vt0.c0)>(vt0.c0)) IN ()) FROM vt0 WHERE ((((NULL)) BETWEEN (((('600306031')|(NULL)))) AND ((CASE WHEN 0x7061298d THEN '뚚0\rg' END)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)OR(x'ce8d')) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL), ((((vt0.c0)GLOB(vt0.c0))) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND (((vt0.c0)LIKE(vt0.c0)))), (((vt0.c0)) BETWEEN ((COUNT(*))) AND ((''))) FROM vt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt0 WHERE (((0.39378503119194996 COLLATE BINARY) BETWEEN (ABS('0.9964911043729301')) AND (-1180383447))) ORDER BY (~ (vt0.c0)) ASC  NULLS FIRST LIMIT 521880914; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 END FROM vt0 WHERE (MIN(((NULL) IS FALSE), (+ (x'de9f')))) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))GLOB(((vt0.c0)>(vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT CAST(COUNT('') AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT 0.3416464424890959 FROM vt0 LIMIT 1987743431 OFFSET -1190522072; -- 0ms;
SELECT ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((('-1533382656')/(((((NULL)AND(0X577684fe)))AND(0xffffffff8f801afb))))); -- 0ms;
SELECT CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN vt0.c0 THEN (vt0.c0 IN ()) ELSE ('-727936908' IN (vt0.c0, vt0.c0)) END FROM vt0 WHERE ((+ ((((0.3458592483061512, NULL, '-1139248621')) NOT BETWEEN ((x'7338', '{', NULL)) AND ((0.2994294125486492, NULL, 1989826435)))))) GROUP BY (+ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), TRIM(load_extension(vt0.c0, vt0.c0)), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(((vt0.c0)||(vt0.c0))));SELECT DISTINCT ((((((((COUNT(*))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(TYPEOF(vt0.c0))))OR(CAST(vt0.c0 AS REAL))), vt0.c0, ((NULL)&(vt0.c0)) FROM vt0 WHERE (CAST(463336918 AS INTEGER)); -- 0ms;
SELECT DISTINCT NULL, ((vt0.c0)-(vt0.c0)) COLLATE BINARY, AVG(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, 0.07529651021792627, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), NULLIF(DISTINCT vt0.c0, vt0.c0), NULL, (((vt0.c0)) NOT BETWEEN (('600306031')) AND ((vt0.c0))), x'ec66c9fe')) AND ((0.7649133833161872, CAST(vt0.c0 AS REAL), LIKELY('꧹'), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) ISNULL), vt0.c0, ((vt0.c0)*(vt0.c0)))))  NULLS LAST, NULL COLLATE BINARY, CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('-2072151374')))OR(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (+ (vt0.c0)) END; -- 1ms;
SELECT ALL TOTAL(NULL) FROM vt0 WHERE ((((('-13313835')-(x'5146')))&(0.298258128672399))); -- 0ms;
SELECT DISTINCT CAST((+ (vt0.c0)) AS REAL), (((~ (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((vt0.c0) IS TRUE) COLLATE NOCASE FROM vt0 WHERE (((x'') BETWEEN ('-607011819') AND (0.6669696632727751)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN 0x374054fe THEN ((((((((vt0.c0)OR(vt0.c0)))OR(0.07870517869786542)))OR(vt0.c0)))OR(vt0.c0)) END, RANK() OVER (), '' FROM vt0 WHERE ((- (('!.99(' IN ())))) ORDER BY ((vt0.c0 COLLATE RTRIM)%(((vt0.c0)<>(vt0.c0)))); -- 0ms;
SELECT ((vt0.c0)>(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT x'fd5c' FROM vt0; -- 2ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) COLLATE NOCASE FROM vt0 ORDER BY (- (((vt0.c0) NOT NULL))), ROUND(vt0.c0, vt0.c0) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT LIKELIHOOD((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.23005036366359433) FROM vt0; -- 0ms;
SELECT DISTINCT (- (((vt0.c0)AND(0.1851421838503451)))) FROM vt0 WHERE ((((((~ (x'8f57')))OR(CASE WHEN NULL THEN NULL END)))OR(LIKELY(NULL)))) LIMIT -13313835 OFFSET -1359050266; -- 0ms;
SELECT DISTINCT ((COALESCE(DISTINCT vt0.c0, vt0.c0))>>((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 GROUP BY CASE WHEN ((vt0.c0)&(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END, (NOT (((NULL)GLOB(vt0.c0)))), NULL; -- 1ms;
SELECT ALL (NOT (((vt0.c0)OR(vt0.c0)))) FROM vt0 WHERE ((('*_y') NOT NULL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (((vt0.c0)OR(NULL)))), (- (IFNULL(DISTINCT 0.5854400624232511, 0x374054fe))), (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))<>(((((vt0.c0))<=((vt0.c0)))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)<(vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(0Xffffffffb5651ad5)))AND(AVG(vt0.c0))))AND(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE (((-245726172)GLOB('Y\r{HuF''N')) COLLATE NOCASE); -- 0ms;
SELECT CAST(vt0.c0 COLLATE NOCASE AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN TOTAL(vt0.c0) THEN (((((((('p?7\I')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0, vt0.c0, '0.6541652751066481'))!=((vt0.c0, vt0.c0, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN 0x43c532bc THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN CAST(vt0.c0 AS NUMERIC) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN MAX(vt0.c0) ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN ((((((((x'2d24')AND(vt0.c0)))AND(-2.45726172E8)))AND(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0) IS FALSE) END ASC, CASE WHEN (('22940147') NOT NULL) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) ELSE '548830414' END  NULLS LAST; -- 0ms;
SELECT ((((vt0.c0))>=((vt0.c0))) IN ()) FROM vt0 WHERE (((((x'e475') NOT BETWEEN ('\电)9W') AND (0.37250696384635873))) BETWEEN (x'') AND (CASE WHEN 'ꀕ2(甹Q' THEN x'' ELSE 0xffffffff82c17108 END))) LIMIT 168960873 OFFSET -742496994; -- 0ms;
SELECT DISTINCT ((((vt0.c0)*(vt0.c0))) BETWEEN (490355624) AND (CASE WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), CASE ((vt0.c0) IS FALSE)  WHEN CAST(vt0.c0 AS TEXT) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END, COUNT(RTRIM(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))AND(((vt0.c0) NOT NULL))))OR(((vt0.c0)>=(vt0.c0)))) FROM vt0 WHERE (((((0.5276040428226556) NOT BETWEEN (NULL) AND (0.01601405909949516)))%(((NULL)/(x''))))) LIMIT 346075658; -- 1ms;
SELECT ALL ((((vt0.c0)LIKE(vt0.c0)))<(GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE (((((((((COALESCE('528704172', NULL, 0.1711175558407083, x''))AND(((424780797) BETWEEN (x'') AND ('1273859550')))))OR(((x'9476')LIKE(0Xd82a5cd)))))AND(((x'65df')|(1823330235)))))AND(((x'') NOT BETWEEN ('iVOmC钐\M') AND (NULL))))) ORDER BY ((LIKELY(DISTINCT vt0.c0)) IS FALSE) ASC; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((vt0.c0)OR(vt0.c0)), vt0.c0, vt0.c0 COLLATE RTRIM, ((vt0.c0)IS NOT(vt0.c0))), COUNT(*) OVER (), ((((vt0.c0)IS(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(0x4c4e4932 AS REAL))), (~ ((- (vt0.c0)))), (((vt0.c0))<((vt0.c0 COLLATE RTRIM))) FROM vt0 GROUP BY (vt0.c0 IN ()); -- 0ms;
SELECT NTILE(((((vt0.c0) NOT NULL))IS(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT load_extension(CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 WHERE (((CAST('V	''1A' AS REAL)) ISNULL)); -- 0ms;
SELECT ALL NULLIF(DISTINCT x'', TRIM(vt0.c0)), (((vt0.c0))!=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT '600306031', vt0.c0 COLLATE RTRIM, CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT (UNLIKELY(DISTINCT vt0.c0) IN ()) FROM vt0 WHERE (CAST(((0X39048bd1) IS TRUE) AS BLOB)); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)<>(vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((((COUNT(*))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), GROUP_CONCAT(CAST(vt0.c0 AS REAL)) OVER ( ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR('-349066008')))OR(((vt0.c0)==(vt0.c0))))), GROUP_CONCAT(CAST(NULL AS REAL)) FILTER(WHERE NULL) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0, vt0.c0))) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (NULL) AND (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c0)<<(1.987743431E9)))), COUNT(((vt0.c0)OR(vt0.c0))) OVER () FROM vt0 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST, (((vt0.c0 IN ())) IS TRUE) ASC; -- 0ms;
SELECT DISTINCT (((((vt0.c0)=(vt0.c0)), vt0.c0, x'', ((vt0.c0) NOT NULL), CASE WHEN vt0.c0 THEN vt0.c0 END))<=((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), vt0.c0))), json_valid(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(x''))), '' FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, x'', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))-(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (CAST(((4.32957792E8) NOT BETWEEN ('-968562309') AND (x'')) AS REAL)); -- 0ms;
SELECT (0.18160240136723071 IN (vt0.c0 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT '780443195', vt0.c0, (((NULL)) BETWEEN ((vt0.c0)) AND ((((vt0.c0) ISNULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS TEXT))AND((vt0.c0 IN ()))))OR(CAST(vt0.c0 AS BLOB))), vt0.c0, ((((vt0.c0) IS TRUE))=(((vt0.c0)<>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)LIKE(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 1.823330235E9 END))) FROM vt0 WHERE (((((((0X677590df) NOTNULL))OR(CAST('4' AS BLOB))))AND(CAST(NULL AS BLOB)))); -- 0ms;
SELECT IFNULL(((vt0.c0) ISNULL), ((vt0.c0)!=(vt0.c0))) FROM vt0 WHERE ((((+ (0xffffffff82c17108))) BETWEEN (((NULL)>(x''))) AND (((0.01601405909949516) NOT NULL)))); -- 1ms;
SELECT COUNT(GROUP_CONCAT(TOTAL(vt0.c0))) FROM vt0 WHERE (json_valid(CASE '2t'  WHEN NULL THEN -1.887429893E9 ELSE 1.689666587E9 END));SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (((AVG(vt0.c0)))!=(((('416026684') BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT (~ (SUM(vt0.c0))), ((((NOT (vt0.c0))))<((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), NULL, SUM(x'') OVER (), (((vt0.c0)<(vt0.c0)) IN ()) FROM vt0 WHERE (((((0Xa122369)IS(x'5db0'))) NOT NULL)) GROUP BY ((vt0.c0) IS FALSE); -- 0ms;
SELECT DISTINCT (((vt0.c0)<>(vt0.c0)) IN (vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT '1987743431' FROM vt0 WHERE (((NULLIF(DISTINCT 1.92352668E8, '1689666587')) NOTNULL)) EXCEPT SELECT DISTINCT AVG(vt0.c0) OVER () FROM vt0 LIMIT 548830414; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS BLOB) IN ()) FROM vt0 WHERE (((CASE WHEN 0.1851421838503451 THEN x'' END) IS FALSE)) LIMIT 1500394264; -- 0ms;
SELECT 0.2669144375232697, ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))OR(SUM(vt0.c0))), ((((((vt0.c0)GLOB(vt0.c0)))AND(((((vt0.c0)AND(x'')))OR(vt0.c0)))))AND(((vt0.c0)GLOB(vt0.c0)))) FROM vt0 WHERE (((('-1359050266')-(x'7de7')) IN (CAST(NULL AS INTEGER), (((0x67df4812))!=(('')))))); -- 2ms;
SELECT DISTINCT CASE (~ (vt0.c0))  WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END FROM vt0 ORDER BY (+ (((-1.189431785E9) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (- (CAST(vt0.c0 AS REAL))), (((((((((((vt0.c0))<(('-1076856548'))))AND(CAST(vt0.c0 AS BLOB))))AND((((vt0.c0, -1.190522072E9, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((('J8r}>pI~r')GLOB(x'986e')))), json_array(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), SUM(vt0.c0), ((NULL)-(vt0.c0)), ((vt0.c0) IS FALSE)), ((('-0.0' IN ()))>(((vt0.c0)>(vt0.c0)))), ((((MAX(vt0.c0))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0.5253593998775516 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (x''); -- 0ms;
SELECT RANK() OVER () FROM vt0 WHERE (((((NULL))>((-749833811))) IN (CAST(0.9377367751346369 AS INTEGER)))); -- 0ms;
SELECT ((((LAST_INSERT_ROWID())AND(CASE 0xffffffffb5651ad5  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(TRIM(DISTINCT vt0.c0, vt0.c0))), (((((vt0.c0)GLOB(vt0.c0)), (+ (vt0.c0)), ((vt0.c0)<(vt0.c0))))==(((+ (vt0.c0)), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)IS(vt0.c0))))), TOTAL(((vt0.c0) ISNULL) COLLATE RTRIM) OVER ( ORDER BY json_quote(UPPER(-883154960))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN GROUP_CONCAT(vt0.c0) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE BINARY END FROM vt0 WHERE (((((0.9361237466613755) NOT BETWEEN (x'abc7') AND (0.5382732129062918))) NOT BETWEEN ((- (0.5536291856657548))) AND ('1131456781' COLLATE NOCASE))); -- 0ms;
SELECT ALL CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, -1908832291, vt0.c0))) AS REAL) FROM vt0 WHERE (0.10169245493812773) LIMIT 458105228 OFFSET 267261811; -- 0ms;
SELECT ALL CASE WHEN (((vt0.c0, '-1139248621', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0) NOTNULL) END FROM vt0 WHERE (((((((('ivomc钐\m'))<=((-1.79930967E9))))OR(CASE 0.1148280915688098  WHEN x'' THEN 1987743431 ELSE 1.3662404E7 END)))AND(('-1908832291' IN ())))); -- 0ms;
SELECT ALL ((((((((((vt0.c0)AND('')))AND(vt0.c0)))OR(vt0.c0)))AND('D%E')))||(vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (0.12497858168099274); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 1ms;
SELECT DISTINCT UPPER(((vt0.c0)>=(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM vt0; -- 0ms;
SELECT DISTINCT CASE (- (vt0.c0))  WHEN ((vt0.c0) IS FALSE) THEN (vt0.c0 IN ()) ELSE vt0.c0 COLLATE BINARY END, (('') IS TRUE), COUNT((NOT (vt0.c0))) OVER (), ((ABS(vt0.c0))&(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0)AND(vt0.c0)))>=((+ (vt0.c0)))) FROM vt0 WHERE ((((0X62bd615a IN ()))|(CAST(x'' AS INTEGER)))) GROUP BY HEX(vt0.c0 COLLATE NOCASE), ((((CAST(vt0.c0 AS INTEGER))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))), (((vt0.c0))>((vt0.c0))) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC))<=(CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (DATE(CAST(0.48481642308291284 AS REAL), (~ (x'')), IFNULL(x'8a44', 0.479816008801067))); -- 0ms;
SELECT DISTINCT TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) OVER () FROM vt0 LIMIT 1672866067; -- 0ms;
SELECT ALL AVG((((vt0.c0))>=((vt0.c0)))), (((vt0.c0 IN ())) ISNULL), GROUP_CONCAT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) IN ()), vt0.c0, vt0.c0 FROM vt0 WHERE (((((1e500) IS TRUE)) NOT BETWEEN (((0xffffffff8644a69d) NOT BETWEEN ('b5') AND (NULL))) AND (((((0.812609770457745)AND(x'8d41')))AND(-1031568297))))); -- 0ms;
SELECT ALL vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), CAST((vt0.c0 IN ()) AS TEXT) FROM vt0 LIMIT -1626218308 OFFSET 1821594915; -- 0ms;
SELECT NULL FROM vt0; -- 1ms;
SELECT ALL x'' FROM vt0 LIMIT 1558802987; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((('eQ1\') ISNULL) IN ())); -- 0ms;
SELECT ALL ((UNLIKELY(DISTINCT vt0.c0)) NOTNULL) FROM vt0 WHERE (UPPER(DISTINCT CASE 'OW귩'  WHEN -4.09287535E8 THEN x'9d23' ELSE x'df65' END)); -- 0ms;
SELECT (((vt0.c0)IS NOT(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT (vt0.c0 IN ()) COLLATE RTRIM COLLATE NOCASE FROM vt0 GROUP BY (+ (((vt0.c0)*(vt0.c0)))), (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ()), (~ (vt0.c0)) HAVING ((((vt0.c0)<(vt0.c0)))IS NOT(COUNT(*))) LIMIT -1887429893 OFFSET -2054577961; -- 0ms;
SELECT ALL ((((vt0.c0)OR(vt0.c0)))%(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (0.9361237466613755 COLLATE RTRIM))) ORDER BY (((((+ (vt0.c0)))OR((((vt0.c0))>((vt0.c0))))))AND(((vt0.c0)%(vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT (~ (TOTAL(vt0.c0))) FROM vt0 ORDER BY (((vt0.c0, (vt0.c0 IN ()), vt0.c0 COLLATE NOCASE))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), ((vt0.c0) ISNULL), ((('1672866067'))>((vt0.c0))))))  NULLS LAST LIMIT -682448149; -- 0ms;
SELECT DISTINCT TYPEOF(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (CAST(x'4b32' AS TEXT) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), TOTAL(vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (+ (-692973466)), CAST(vt0.c0 AS NUMERIC), CASE WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, MIN(vt0.c0)), AVG(((vt0.c0) ISNULL)), (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()) FROM vt0 WHERE ((((((x'3a96') NOTNULL), (-1.139248621E9 IN ()), (NOT ('1823330235'))))<>((((NULL) ISNULL), IFNULL(DISTINCT x'6017', 'TRUE'), '2088938792' COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT ((vt0.c0)|(((vt0.c0) NOTNULL))), (+ (((vt0.c0)*(vt0.c0)))), (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0, vt0.c0)))) AND ((TOTAL(vt0.c0)))), (- (((vt0.c0)<>(vt0.c0)))), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE BINARY FROM vt0; -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))*(TRIM(0.12274679636296237, vt0.c0))) FROM vt0 GROUP BY (((UPPER(vt0.c0)))<=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR('1064860298'))) AND (((0.47431422968184545)<(vt0.c0)))), (- ((vt0.c0 IN ()))); -- 0ms;
SELECT ALL (vt0.c0 IN (json_patch(vt0.c0, vt0.c0), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), (((~ (vt0.c0)))<<((('CP1]⡤I') NOT BETWEEN (vt0.c0) AND (vt0.c0)))), AVG(CASE vt0.c0  WHEN x'36a5' THEN vt0.c0 END) FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0)>>(vt0.c0)) IN (831518550, x'accaae50')) DESC  NULLS LAST; -- 0ms;
SELECT ((((+ (vt0.c0))))<=((vt0.c0))) FROM vt0 WHERE (((((((((x'')AND(x'90da')))OR(0.6852385903289506)))AND(CHANGES())))AND(('jg腉.+29Y' IN ())))) GROUP BY ((((vt0.c0)==(vt0.c0)))<=(NULL)), ((((((vt0.c0) NOT NULL))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)>>(vt0.c0)))), ((((NOT (vt0.c0))))<=((vt0.c0))) HAVING (NOT (((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
SELECT ((((vt0.c0)OR(vt0.c0)))AND(NULL)) COLLATE NOCASE, ((((((vt0.c0, vt0.c0, '')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))>((COUNT(*)))), (IFNULL(vt0.c0, vt0.c0) IN ()), (((0.05073748165363656 IN ()))/((vt0.c0 IN ()))), LIKELIHOOD((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), 0.46668912423583986) FROM vt0 WHERE (((0.02627788035176326)>(-684796949)) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT (NOT ((((vt0.c0))=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOTNULL) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL (((+ (vt0.c0))) NOT NULL) FROM vt0 WHERE (CASE WHEN ((NULL) IS TRUE) THEN (0.6987455142581678 IN ('455221175')) ELSE ((x'') IS FALSE) END) LIMIT -1362587090 OFFSET -1426015693; -- 1ms;
SELECT TOTAL(((vt0.c0) BETWEEN (0.02725738956927104) AND (vt0.c0))) OVER () FROM vt0 WHERE ((((x'', '1150180267', '')) NOT BETWEEN ((json(x''), (((x'b3b5')) NOT BETWEEN ((NULL)) AND ((0.7910620987336648))), ((x'') NOT BETWEEN (NULL) AND (0.5648520513412969)))) AND ((CASE WHEN '८)3᫕E' THEN x'7ee195e5' ELSE x'' END, CASE 0.393417082598861  WHEN '0.07870517869786542' THEN 0.4675777139488074 ELSE 0.8508039853592712 END, CASE NULL  WHEN 0.5702237510277175 THEN '192352668' WHEN '-13313835' THEN 0.9361237466613755 WHEN 0.8893770412413228 THEN NULL ELSE x'5bf9' END))));SELECT (((((((1821594915)AND(vt0.c0)))OR(vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))=((((vt0.c0)<=(-607011819)), vt0.c0, ((vt0.c0) NOT BETWEEN (0.9611883969956112) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT 0.4505775835196818 FROM vt0; -- 0ms;
SELECT DISTINCT (((NULL) BETWEEN (x'0ead') AND (vt0.c0)) IN ()), COUNT(*) OVER (), (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((+ (((x'8e1b')OR(NULL))))); -- 0ms;
SELECT SUM((((vt0.c0))>((vt0.c0)))) FILTER(WHERE (vt0.c0 IN (CAST(vt0.c0 AS BLOB)))) OVER (), vt0.c0, ((('ᾷ2'))<=((COUNT(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0)GLOB(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c0)) FROM vt0 WHERE ((((('-1362587090') NOT BETWEEN (NULL) AND (NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT MAX((vt0.c0 IN (vt0.c0, vt0.c0))) FROM vt0 WHERE (CASE WHEN (x'' IN (NULL)) THEN CASE NULL  WHEN -245726172 THEN NULL END END); -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR('.샳' COLLATE BINARY)))OR(((vt0.c0)&(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((0.6056614406664789) BETWEEN (x'') AND (vt0.c0))) OVER (), AVG((((vt0.c0))>((vt0.c0)))) OVER ( ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST), CAST((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB) FROM vt0 WHERE (((((NULL)*('-359596826')))GLOB(MAX(x'8a1c', '1697140150')))); -- 1ms;
SELECT COUNT(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))), ((CAST(vt0.c0 AS BLOB))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0)=(vt0.c0))) NOT BETWEEN (GROUP_CONCAT(vt0.c0)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0 WHERE (((((((((((((-602182262 COLLATE RTRIM)AND((((0Xffffffffdaac0ca5))<(('QU領\nh3oNꫫ'))))))OR(CAST(1243232239 AS NUMERIC))))OR(((NULL) IS FALSE))))OR(CAST(NULL AS REAL))))AND((('1689666587') BETWEEN ('-198713964') AND ('-1358485084')))))AND('' COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE NULL  WHEN CAST(vt0.c0 AS TEXT) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END ELSE CHANGES() END, CASE WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 ELSE ((vt0.c0)LIKE(vt0.c0)) END, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))LIKE(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (CASE (('956599249')||(x'da41'))  WHEN LIKELIHOOD(DISTINCT x'2b0e', 0.3983376285151634) THEN ((((((((((((0.6319644823828588)AND('13662404')))AND(x'5f5b')))AND(NULL)))AND(0.06523413374442699)))OR(NULL)))OR('17855807')) END); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (0.5184154063053158) AND (vt0.c0))) NOT NULL) FROM vt0 GROUP BY ((((((vt0.c0)AND(NULL)))AND(vt0.c0)))>>(GLOB(vt0.c0, vt0.c0))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS INTEGER)  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS REAL) FROM vt0; -- 0ms;
SELECT COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) COLLATE NOCASE FROM vt0 WHERE (((((0.3416464424890959)*(0x4a69dfb)))>=(((x'')+(0.14228114810107495))))) LIMIT -704950479 OFFSET 1987743431; -- 0ms;
SELECT DISTINCT 0.37250696384635873 FROM vt0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()), (~ (UNLIKELY(DISTINCT NULL))), (((+ (vt0.c0)))/(-1.159321254E9)) FROM vt0 NOT INDEXED WHERE (CAST(TYPEOF(0xffffffff8df01b0a) AS NUMERIC)); -- 0ms;
SELECT DISTINCT json_array_length(vt0.c0) FROM vt0; -- 0ms;
SELECT CAST(((((0.11531789129717263)AND(0X1b4e218c)))OR(vt0.c0)) AS INTEGER), (CAST(vt0.c0 AS INTEGER) IN ()), SUM(((vt0.c0) IS FALSE)) OVER () FROM vt0 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN (~ (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST, (((~ (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
SELECT ALL CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM FROM vt0 WHERE ((- (('226665933' IN (x'76f7'))))); -- 1ms;
SELECT DISTINCT 0.6420075168733023, ((CAST(vt0.c0 AS REAL))>(vt0.c0)), DATETIME(((vt0.c0) NOT NULL), json_extract(vt0.c0, vt0.c0), '488554596') FROM vt0;SELECT CASE WHEN ((vt0.c0)LIKE(NULL)) THEN ((vt0.c0)||(vt0.c0)) WHEN (NOT ('1667644960')) THEN TIME(vt0.c0, x'', vt0.c0, vt0.c0, vt0.c0) WHEN ((vt0.c0)LIKE(vt0.c0)) THEN AVG(vt0.c0) END, ((((('C*x')>(vt0.c0))))=((CAST(vt0.c0 AS BLOB)))), AVG(((vt0.c0)+(vt0.c0))) OVER () FROM vt0 WHERE (x'4ec4'); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) NOT NULL) FROM vt0; -- 0ms;
SELECT (((vt0.c0)>>(vt0.c0)) IN ()), ((((vt0.c0 COLLATE NOCASE)OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)>>('Lh')))), LEAD(CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, ((CAST(vt0.c0 AS REAL)) IS TRUE), CASE ((vt0.c0)+(vt0.c0))  WHEN 'b<' THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0) NOT NULL) END) OVER () FROM vt0 WHERE (((((((x'')) BETWEEN ((NULL)) AND ((x''))), ((x'') IS FALSE), (NOT (0x4370a90d))))<=((LENGTH('-243734186'), CASE x''  WHEN 0.4972542084577688 THEN '4' END, CAST(NULL AS BLOB))))); -- 0ms;
SELECT AVG(NULL) FILTER(WHERE ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0)||(vt0.c0)))))OR((NOT (vt0.c0))))) OVER ( GROUPS (((vt0.c0, 0x64b6441b, vt0.c0))<>((vt0.c0, vt0.c0, '-13313835'))) COLLATE BINARY PRECEDING EXCLUDE NO OTHERS) FROM vt0 WHERE (TYPEOF(x'') COLLATE RTRIM) ORDER BY (LIKELIHOOD(vt0.c0, 0.3150966877938345) IN ()) ASC; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)GLOB(vt0.c0)))=(CAST(vt0.c0 AS NUMERIC))) FROM vt0 WHERE ((+ ((('931937212') BETWEEN (0.02725738956927104) AND ('뻛F'))))); -- 0ms;
SELECT ((((vt0.c0)IS NOT('0.5276040428226556')))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT (((((~ (vt0.c0)))OR((NOT (vt0.c0)))))AND(((vt0.c0)|(vt0.c0)))) FROM vt0 WHERE ((((~ (x''))) BETWEEN (((x'')=('6'))) AND (CASE 2.088938792E9  WHEN 0X496bd000 THEN NULL WHEN x'4f70' THEN 0.4760686525547627 WHEN x'' THEN x'bdca' WHEN x'' THEN 0.02627788035176326 WHEN x'' THEN '-670441870' ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((vt0.c0)OR(((vt0.c0)OR(vt0.c0)))) FROM vt0 WHERE (CAST(((('cﱺ')) NOT BETWEEN ((NULL)) AND ((0X5c4f1cc5))) AS NUMERIC)) GROUP BY PRINTF((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))), (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 1869905955 END IN ()), ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(x''))) IS TRUE), 0Xffffffff900e5521, (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.6675470336680357 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0) NOT NULL)))); -- 1ms;
SELECT ((json_array_length(vt0.c0, vt0.c0)) NOTNULL) FROM vt0 ORDER BY UNLIKELY(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) ASC;SELECT DISTINCT ((((NULL)<<(vt0.c0))) IS TRUE) FROM vt0 GROUP BY '0o๚', ((((vt0.c0) NOTNULL))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), (((((((((vt0.c0)OR(vt0.c0)))AND(0.8086628682385562)))AND(vt0.c0)))AND(vt0.c0)) IN ()); -- 0ms;
SELECT ALL CAST(TYPEOF(vt0.c0) AS TEXT), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)), (- (((vt0.c0)==(x'97aa')))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) IS FALSE))) FROM vt0; -- 0ms;
SELECT vt0.c0, vt0.c0, 0xffffffffdec92c38 FROM vt0 WHERE (CAST((+ (x'')) AS BLOB)); -- 0ms;
SELECT DISTINCT AVG(vt0.c0 COLLATE BINARY COLLATE BINARY) FROM vt0; -- 1ms;
SELECT ALL AVG((((vt0.c0))<=((vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL) FROM vt0 WHERE (CASE WHEN CASE WHEN 0.3640675040932366 THEN '-1906128728' WHEN NULL THEN x'4d48' WHEN NULL THEN NULL END THEN ((0Xffffffff926be813)<('901303894')) END); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) ISNULL) THEN (((vt0.c0))>=((vt0.c0))) ELSE (vt0.c0 IN (vt0.c0)) END, vt0.c0, RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0, vt0.c0, '2025008953')) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, 0.33090136579290963, vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)=(vt0.c0))))!=((((vt0.c0)OR(vt0.c0)), UPPER(vt0.c0), (vt0.c0 IN (vt0.c0))))) FROM vt0 WHERE (CASE x'' COLLATE RTRIM  WHEN ((x'') BETWEEN ('-1533330343') AND ('wꁌ')) THEN ((x'')-(x'9d823dbb')) END); -- 0ms;
SELECT (((vt0.c0, vt0.c0, ((vt0.c0)AND(vt0.c0))))>=((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) ISNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0 NOT INDEXED WHERE (((((CASE WHEN 0.835487844552743 THEN 0.27894026093841073 ELSE 'k' END)AND((0.8258914028704535 IN ('1981928127')))))AND((NOT (-1.626218308E9))))); -- 0ms;
SELECT ALL (TRIM(DISTINCT vt0.c0, 2113742304) IN ()), LAG(vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('490355624'))), (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.3207870062865168 THEN vt0.c0 WHEN -1353904638 THEN vt0.c0 END))) OVER (), (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)OR(vt0.c0))))) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((0.8555645892973516) NOT BETWEEN (-2.45726172E8) AND (NULL)))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE (((('513804654')) BETWEEN ((CAST('' AS NUMERIC))) AND ((CASE NULL  WHEN '-1064269937' THEN 0.9152010817942049 ELSE 1.500394264E9 END)))); -- 0ms;
SELECT ALL ((((vt0.c0)IS NOT(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS INTEGER))) FROM vt0 WHERE (((0.7281383082082459)GLOB('1')) COLLATE NOCASE); -- 0ms;
SELECT ALL GROUP_CONCAT(((NULL)-(vt0.c0))) FROM vt0 WHERE (CAST(json_array(x'', x'') AS NUMERIC));SELECT DISTINCT (((((vt0.c0))>((vt0.c0))))<>((((vt0.c0))!=((vt0.c0))))) FROM vt0 WHERE ((((((('Mಥ')OR(NULL)))OR(-5.98923299E8)))/((+ (x''))))); -- 2ms;
SELECT COUNT(*) OVER (), (((vt0.c0)) NOT BETWEEN ((TYPEOF(vt0.c0))) AND ((vt0.c0 COLLATE RTRIM))), ((((vt0.c0) IS FALSE))IS NOT(vt0.c0 COLLATE BINARY)), x'c45eba65', (((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)<<(vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT NULL) WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))>=((vt0.c0))) END FROM vt0; -- 0ms;
SELECT ALL SUM((- (vt0.c0))) OVER () FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND ('')), CAST((+ (x'')) AS INTEGER), CASE ((vt0.c0)<=(vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN LIKE(vt0.c0, vt0.c0, '0') WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN LOWER(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) END, json_array_length((((vt0.c0))>((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) HAVING vt0.c0; -- 1ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN (('w4Ct')) AND (((vt0.c0 IN ())))) FROM vt0 WHERE ((((('0v') NOT NULL))==(((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT (- (((vt0.c0) NOTNULL))), LTRIM(COUNT(vt0.c0)), CAST((NOT (vt0.c0)) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0 COLLATE BINARY))<((vt0.c0))), (CASE WHEN vt0.c0 THEN vt0.c0 END IN (NULL, ((vt0.c0) NOT NULL))), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))GLOB(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) NOTNULL))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), ((600306031)*(((vt0.c0)<(vt0.c0)))), TOTAL((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE) OVER () FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((MIN(vt0.c0)))>((vt0.c0 COLLATE NOCASE))) FROM vt0 WHERE ((((CAST(x'' AS BLOB)))!=((0X795ef407 COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(vt0.c0) AS NUMERIC) FROM vt0; -- 0ms;
SELECT ALL x'' FROM vt0 WHERE (LOWER((4.63336918E8 IN ()))); -- 0ms;
SELECT ((vt0.c0) NOT NULL) COLLATE NOCASE FROM vt0 GROUP BY vt0.c0 HAVING ((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(x'')))OR((('''%.u박*E(') NOTNULL))))OR(CAST(vt0.c0 AS BLOB))))AND(((vt0.c0) IS FALSE))); -- 0ms;
SELECT ALL (- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), json_array_length(vt0.c0), vt0.c0 FROM vt0; -- 0ms;
SELECT x'', CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE, ((vt0.c0) IS TRUE) FROM vt0 WHERE ((((('AjeS') IS FALSE)) IS TRUE)); -- 0ms;
SELECT DISTINCT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.5498517856586242, x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0 COLLATE BINARY, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE NOCASE))), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL), x'' FROM vt0 WHERE (CAST(1.467385086E9 AS NUMERIC) COLLATE RTRIM); -- 1ms;
SELECT ALL ((((vt0.c0) BETWEEN ('') AND (vt0.c0))) ISNULL) FROM vt0 WHERE (((((((((((NULL)AND('')))OR(NULL)))OR(NULL)))OR('0d'))) IS FALSE)) GROUP BY CAST((+ (vt0.c0)) AS INTEGER) HAVING (vt0.c0 COLLATE BINARY IN (((vt0.c0)IS(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))); -- 0ms;
SELECT COUNT(((vt0.c0)%(NULL))), ((((vt0.c0) IS FALSE)) IS FALSE), ((NOT (vt0.c0)) IN ()) FROM vt0 WHERE ((~ (((x'')-(NULL))))); -- 0ms;
SELECT ALL ((((((((CAST('])h[5' AS INTEGER))AND((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)))AND(MAX(vt0.c0))))OR(HEX(DISTINCT vt0.c0))) FROM vt0 WHERE (CASE WHEN ('' IN ()) THEN (x'' IN ()) ELSE CAST(',S' AS TEXT) END); -- 0ms;
SELECT ((((- (vt0.c0)), (NOT (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<=((NULL, ((vt0.c0) NOTNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) ISNULL))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((x'')) NOT BETWEEN (((NOT (NULL)))) AND ((((-1189431785)+(x'')))))) LIMIT 432957792; -- 0ms;
SELECT DISTINCT ((((((0Xe5ca9f9) BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0)))AND(((x'f2ddd015')||(vt0.c0)))) FROM vt0; -- 0ms;
SELECT CAST(CASE WHEN vt0.c0 THEN '-1886171252' ELSE vt0.c0 END AS INTEGER) FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((NULL))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS TEXT) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (('')IS NOT(-1189431785)), 0.20361939273774454)) GROUP BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (NOT (vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, ABS((NOT (vt0.c0))), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<(((vt0.c0) IS TRUE))) HAVING (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) LIMIT -1913012146; -- 0ms;
SELECT ALL (((~ (vt0.c0))) BETWEEN (((vt0.c0)AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0; -- 1ms;
SELECT UPPER(DISTINCT (NOT (vt0.c0))), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CAST(vt0.c0 AS REAL))), (+ (json_insert(vt0.c0, '458105228', vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) FROM vt0 WHERE ((((4.16026684E8)) BETWEEN ((((0.2385587940909607) BETWEEN (-0.0) AND (0.7501522241207709)))) AND (((NULL IN ()))))) GROUP BY (((((0.46449013906771786, vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((NULL, vt0.c0, 0X99b781b, 'dT', vt0.c0)))) IS FALSE) ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS TEXT) DESC; -- 0ms;
SELECT CAST(vt0.c0 AS INTEGER) COLLATE RTRIM, vt0.c0, ((vt0.c0 COLLATE BINARY)<<(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((((((('-1137145815')OR(COUNT(vt0.c0))))AND(0.11421858416362596)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0)))OR(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND(CAST('k6gU/6U' AS NUMERIC))) FROM vt0 WHERE (CASE WHEN '' THEN '' WHEN '-1288892207' THEN NULL WHEN NULL THEN 0.014857135398532506 ELSE '!IV' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT MIN(AVG((~ (vt0.c0)))) FROM vt0 WHERE (((((CASE 'xUU{}i'  WHEN x'08fd' THEN '-684796949' END)AND((('1500394264')>=(0Xffffffffc4797429)))))AND((((('356048402')AND(NULL)))OR(NULL)))));SELECT DISTINCT (~ (vt0.c0)) FROM vt0; -- 0ms;
SELECT HEX(((vt0.c0)OR(vt0.c0))) FROM vt0 GROUP BY (~ ((((vt0.c0))<((vt0.c0))))), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((- (vt0.c0)), (- (vt0.c0)), ((vt0.c0)|(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(0.6420075168733023 AS NUMERIC)))), (((NULL, (((vt0.c0))=((vt0.c0))), ((vt0.c0)>(vt0.c0))))!=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (+ (vt0.c0)), TRIM(vt0.c0, vt0.c0)))) HAVING CASE QUOTE(vt0.c0)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) ELSE ((vt0.c0)>(vt0.c0)) END LIMIT -1362587090 OFFSET -1158086934; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), CASE CAST(vt0.c0 AS TEXT)  WHEN COUNT(*) THEN ((vt0.c0)>=(vt0.c0)) WHEN ABS(DISTINCT vt0.c0) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) END, LIKE(((vt0.c0) IS TRUE), ((vt0.c0) IS FALSE)) FROM vt0 WHERE (CASE WHEN ((0.3563388769388466) IS FALSE) THEN ((((0.48481642308291284)AND(1987743431)))AND(0xffffffffa8080cac)) END); -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) IS TRUE)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((0.08751489288990144, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) IN (COUNT(*))), NTH_VALUE(((vt0.c0 COLLATE RTRIM)<=(vt0.c0 COLLATE NOCASE)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'ebb8' END) BETWEEN (0X263be63d) AND (((vt0.c0)<=(x'ca66'))))) OVER ( RANGE  CURRENT ROW), (~ ((((vt0.c0))==((vt0.c0))))) FROM vt0 GROUP BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) NOT NULL), ((NOT (vt0.c0)) IN ()), vt0.c0 HAVING ((x'')>>((NOT (vt0.c0)))); -- 0ms;
SELECT ALL CASE 'b{' COLLATE BINARY  WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN LIKELY(DISTINCT '-1426015693') WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)IS('!IV')) ELSE MIN(vt0.c0) END FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) BETWEEN (json_array_length(vt0.c0)) AND (((vt0.c0)<=(vt0.c0)))), (~ ((vt0.c0 IN (vt0.c0)))), ((json(vt0.c0))||((- (vt0.c0)))) FROM vt0 WHERE ((((((((((((('')AND(-160246538)))OR(x'649e')))AND((((x'', NULL, '', x'3f877dff', 0.27862590131180187))>=((0.08818321263860274, 0.14709040308088905, '-684796949', -1426015693, x'0026'))))))OR(x'3950' COLLATE BINARY)))AND(CASE x'c2e81737'  WHEN -66564628 THEN x'' ELSE x'' END)))OR(NULL))); -- 0ms;
SELECT ALL CAST(CAST(vt0.c0 AS TEXT) AS REAL) FROM vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (LIKELIHOOD(vt0.c0, 0.740226512568445)) AND (((vt0.c0) ISNULL))) FROM vt0 WHERE (NULLIF(IFNULL(-2072151374, '1513264272'), ((0.6895118126337303)%('')))) GROUP BY ((0.12397015638120035)%(CAST(vt0.c0 AS BLOB))) HAVING (((vt0.c0)) NOT BETWEEN ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))); -- 1ms;
SELECT DISTINCT (((+ (vt0.c0)))>=((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((x''))>(((vt0.c0 IN ())))), (((((vt0.c0))>((vt0.c0)))) NOTNULL), ((vt0.c0)<=(vt0.c0)) COLLATE RTRIM FROM vt0 ORDER BY x'' ASC; -- 0ms;
SELECT FIRST_VALUE((((((vt0.c0))=((vt0.c0))))|(((vt0.c0)<<(vt0.c0))))) OVER ( ORDER BY (((vt0.c0)>>(vt0.c0)) IN ())  NULLS FIRST) FROM vt0 WHERE (((((NULL)-(x''))) NOT BETWEEN (((NULL)==(NULL))) AND (((((NULL)OR(NULL)))AND('J'))))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt0 WHERE (((((x'') BETWEEN (NULL) AND (NULL)))IS(CASE WHEN x'' THEN 0.7953398428653932 ELSE '-63397522' END))); -- 0ms;
SELECT (((CAST(vt0.c0 AS INTEGER)))>(((vt0.c0 IN ())))), (NOT (TYPEOF(vt0.c0))), ((AVG(vt0.c0))>((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))))), vt0.c0 COLLATE BINARY, ((AVG(vt0.c0))<=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST(((((x'62c2')OR(x'ce47')))OR(NULL)) AS TEXT)) ORDER BY json_extract(CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN 0X49ae6e9e ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT)) ASC  NULLS LAST, CASE WHEN x'' THEN ((vt0.c0)>(vt0.c0)) WHEN 0.11508794671586853 THEN CASE WHEN vt0.c0 THEN NULL END WHEN ((vt0.c0)+(vt0.c0)) THEN ((vt0.c0) BETWEEN (NULL) AND (0X21609510)) END; -- 0ms;
SELECT ALL '0.6285378124489197', NTH_VALUE(CAST(((vt0.c0) ISNULL) AS INTEGER), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c0)||(vt0.c0))) AND (TRIM(vt0.c0, vt0.c0)))) OVER (), (MIN(vt0.c0) IN ()) FROM vt0 WHERE ((NULL COLLATE BINARY IN ())) ORDER BY (- (-1186643374))  NULLS LAST;SELECT DISTINCT CASE ((vt0.c0)<>(vt0.c0))  WHEN CAST('132724458' AS NUMERIC) THEN ((vt0.c0) NOTNULL) ELSE (((vt0.c0, vt0.c0, NULL))<=((vt0.c0, vt0.c0, vt0.c0))) END FROM vt0 WHERE ((((x'' IN ()))<<((+ (x'fe5b'))))); -- 0ms;
SELECT DISTINCT (~ (SUM(vt0.c0))) FROM vt0 WHERE (MAX(0.9988149430412292, NULL) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT 0.83339044594158, ((((',mm৳H(')AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM, CASE UNLIKELY(vt0.c0)  WHEN ((vt0.c0)>=(vt0.c0)) THEN IFNULL(vt0.c0, 'b/') END FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) OVER () FROM vt0 WHERE (CASE ((x'ad1a')GLOB(''))  WHEN ((NULL)>>(490355624)) THEN CAST(x'' AS BLOB) ELSE (((0.83339044594158)) BETWEEN ((NULL)) AND (('0.39378503119194996'))) END); -- 0ms;
SELECT DISTINCT ((NULL)>(json_valid(vt0.c0))), CASE AVG(vt0.c0)  WHEN 0.4495590353094536 THEN ((vt0.c0)<<(vt0.c0)) END, LEAD(CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN -304638754 THEN CAST(0.18089943971490385 AS INTEGER) WHEN NULL COLLATE NOCASE THEN (('1309236056')IS NOT(vt0.c0)) WHEN ((0.4148760444946983) IS FALSE) THEN (~ (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END, ((DATETIME(vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN '' THEN vt0.c0 END) AND ((+ (vt0.c0)))), (NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 22940147 END))) OVER () FROM vt0; -- 1ms;
SELECT ALL ((((vt0.c0 IN ()), ((vt0.c0)%(vt0.c0)), ((vt0.c0) ISNULL)))<((((vt0.c0)LIKE(vt0.c0)), '600306031' COLLATE BINARY, CAST(vt0.c0 AS NUMERIC)))) FROM vt0 WHERE ((('-347366540')>>(x'')) COLLATE BINARY) GROUP BY ((CAST(vt0.c0 AS NUMERIC))IS(vt0.c0)); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((PRINTF(vt0.c0), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS REAL))) AND ((TOTAL(vt0.c0), TOTAL(vt0.c0), 0Xffffffffc6a82354))), MIN(CAST(vt0.c0 AS REAL)), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))*(GROUP_CONCAT(vt0.c0))) FROM vt0 ORDER BY (((vt0.c0 IN ()))&(vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, COUNT(*), (((((((((- (vt0.c0)))AND((((vt0.c0))==((vt0.c0))))))AND(COUNT(vt0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((vt0.c0) IS FALSE))))OR((((-1.533382656E9))==((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL FIRST_VALUE((NULLIF(DISTINCT vt0.c0, vt0.c0) IN ())) OVER ( ORDER BY ((((vt0.c0)>=(vt0.c0)))-(CAST('0.12497858168099274' AS REAL))) DESC) FROM vt0 GROUP BY x'9608', (((UNLIKELY(vt0.c0)))>=((CAST(vt0.c0 AS REAL)))), vt0.c0; -- 0ms;
SELECT COUNT((((vt0.c0))!=((vt0.c0)))) OVER (), ((((NULL)%(vt0.c0))) NOT NULL), (((+ (vt0.c0))) BETWEEN (TOTAL(vt0.c0)) AND (((((vt0.c0)OR(vt0.c0)))OR('0.014857135398532506')))), MAX((((vt0.c0))=((vt0.c0)))), ((((vt0.c0)<=(vt0.c0)))||(((vt0.c0)GLOB(vt0.c0)))) FROM vt0 WHERE (((('')>>(0.1711175558407083)) IN ((-607011819 IN (0.12497858168099274, x'81f1')), ((((((((0.7914563132217385)AND(x'9827')))OR('')))OR(x'')))OR(x''))))); -- 0ms;
SELECT ALL COUNT(((vt0.c0)|(vt0.c0))), ((vt0.c0 COLLATE BINARY) NOTNULL), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) FROM vt0 WHERE ((('1659818957' COLLATE BINARY) BETWEEN (CAST('' AS BLOB)) AND (',S' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((0.4575433777356973)AND(COUNT(*))))AND(((vt0.c0) IS FALSE))), ((vt0.c0) NOTNULL) COLLATE BINARY, CASE WHEN x'7a95' THEN IFNULL(DISTINCT vt0.c0, vt0.c0) ELSE '1922220983' END FROM vt0 GROUP BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB(NULL)); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) FROM vt0 WHERE ((~ (HEX(NULL)))); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT (NOT (TYPEOF(0.026155502447613665))), TOTAL((((vt0.c0))!=(('')))), (((NOT (vt0.c0))) NOT NULL) FROM vt0 WHERE ((('뚚0\rg' COLLATE BINARY)LIKE((('-883154960')+(x''))))); -- 0ms;
SELECT DISTINCT MAX(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END), (+ (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '*E' WHEN vt0.c0 THEN -2.072151374E9 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0 WHERE ((((NULL) BETWEEN ('0.5536291856657548') AND ('Yu')) IN (PRINTF(x'df8d'), CASE '\nMeS'  WHEN 'Z''' THEN 'X' ELSE NULL END))); -- 0ms;
SELECT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY FROM vt0 WHERE (CAST((('')&(x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)||(NULL)) END FROM vt0 WHERE (((0xffffffffd435b14c COLLATE NOCASE)GLOB(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC))GLOB(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>((((vt0.c0))>=((vt0.c0))))) FROM vt0 WHERE ((((((~ (x'')))AND(((NULL) NOT NULL))))OR((NULL IN ())))); -- 0ms;
SELECT COUNT(*) OVER () FROM vt0 WHERE (((((((((-1.190522072E9)OR(x'')))OR('')))OR((((('956599249')AND(x'')))OR(x'2b19')))))OR(((0.6988300796210003)*(0.7649133833161872))))) GROUP BY ((((((vt0.c0)AND('-245304015')))OR(vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY)) ORDER BY (((vt0.c0)<>(vt0.c0)) IN (CASE WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST LIMIT 1600368105; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((NOT (NULL)))) AND ((COUNT(*)))), 1e500, ((CASE WHEN vt0.c0 THEN vt0.c0 END)&(CAST(vt0.c0 AS NUMERIC))) FROM vt0 LIMIT 1983513300 OFFSET 1769087174; -- 0ms;
SELECT ALL (((~ (vt0.c0)))<>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), ((((vt0.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS TEXT))))OR((+ (vt0.c0)))), '1608321861' FROM vt0; -- 1ms;
SELECT ALL CAST(GROUP_CONCAT(0.6444964625014842) AS BLOB), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE), (((vt0.c0)==(vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT MIN((~ (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT json_insert(CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE BINARY, IFNULL(DISTINCT vt0.c0, vt0.c0)) FROM vt0;SELECT DISTINCT ((vt0.c0)GLOB('1215495835')) COLLATE NOCASE FROM vt0 ORDER BY CASE WHEN (- (vt0.c0)) THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY WHEN (((0.939175288508378))=((vt0.c0))) THEN x'' COLLATE NOCASE END  NULLS LAST; -- 0ms;
SELECT ALL ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ('1131456781') ORDER BY (('1064860298') BETWEEN (((vt0.c0)AND(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((COUNT(*))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) ISNULL) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT LAG(((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)>=(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))-('1064860298')), CAST((~ (501508550)) AS BLOB)) OVER ( ORDER BY (((vt0.c0 IN ())) ISNULL) DESC  NULLS LAST, ((((vt0.c0)*(vt0.c0))) NOT NULL)  NULLS FIRST), (~ (CAST('1131456781' AS INTEGER))), TRIM((((0.9813265780817729)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS BLOB)) FROM vt0 GROUP BY ((((vt0.c0) BETWEEN (0.909886019248488) AND (vt0.c0))) BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.3974937933023447)) AND ((((vt0.c0))<=((vt0.c0))))); -- 0ms;
SELECT ALL CASE QUOTE(vt0.c0)  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (+ ('ov')) WHEN ((vt0.c0) IS TRUE) THEN CAST(vt0.c0 AS NUMERIC) WHEN (vt0.c0 IN ()) THEN MIN(0.23586561477390489) END FROM vt0; -- 0ms;
SELECT ALL MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS REAL), GROUP_CONCAT('') OVER (), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(vt0.c0)), (((((((((NOT (vt0.c0)))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)))OR((~ (vt0.c0)))), ((vt0.c0) NOT BETWEEN (UPPER(vt0.c0)) AND (((vt0.c0)<(vt0.c0)))) FROM vt0 WHERE (((((('OnB^\')OR(NULL)))AND(1131456781)) IN ())); -- 0ms;
SELECT ALL CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (((('\r鸻)1uh')AND(x'')))OR(vt0.c0)) ELSE GROUP_CONCAT(vt0.c0) END, (((((((((~ (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))AND(CAST(vt0.c0 AS BLOB))))AND((~ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((CAST(vt0.c0 AS TEXT)))>=(((vt0.c0 IN ())))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((0.11199953449291855 IN (vt0.c0)))) FROM vt0 WHERE ('569133396' COLLATE RTRIM) GROUP BY TRIM(COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0)); -- 0ms;
SELECT DISTINCT CASE NULLIF(x'', vt0.c0)  WHEN NULL THEN json_quote(vt0.c0) WHEN ((vt0.c0) IS FALSE) THEN (~ (vt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN CASE WHEN 0.9611883969956112 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END WHEN ((vt0.c0)LIKE(vt0.c0)) THEN vt0.c0 WHEN ((((((((-1.289252775E9)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0)LIKE(vt0.c0)) ELSE 1.672866067E9 END FROM vt0 ORDER BY TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (+ (vt0.c0))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(ABS(vt0.c0) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))<(((((((((((((x'')OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (((((NULL)&(0Xffffffffe2f13f06))) NOTNULL)); -- 0ms;
SELECT ALL (+ (vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL ((((x'fc9c')AND(((((vt0.c0)AND(vt0.c0)))OR(0.7643482159260663)))))AND(((vt0.c0) IS TRUE))) FROM vt0 WHERE (((((NULL COLLATE RTRIM)OR(('' IN ()))))AND(((0.8809832327544626) NOT BETWEEN ('') AND ('1280198962'))))); -- 0ms;
SELECT ALL CAST('1885415821' AS BLOB) FROM vt0 WHERE ((((('kZ_', NULL, x'297a')) BETWEEN (('0.18089943971490385', 0.9494292384467603, 0.8054406623197942)) AND ((x'', 0.812609770457745, NULL))) IN ('1885415821' COLLATE RTRIM, (NOT (''))))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((vt0.c0)||(vt0.c0)) IN (CAST(vt0.c0 AS REAL)))) OVER ( ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((CAST(vt0.c0 AS REAL))))  NULLS LAST) FROM vt0; -- 0ms;
SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM, SUM(((vt0.c0)IS(vt0.c0))) OVER (), CAST(((vt0.c0)<<(995783989)) AS BLOB) FROM vt0; -- 1ms;
SELECT ALL (((vt0.c0 IN (vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST((0.39378503119194996 IN (0.19331620054467324)) AS INTEGER)); -- 0ms;
SELECT ALL ((((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))OR((+ (vt0.c0)))))AND((~ (vt0.c0)))) FROM vt0 WHERE (LIKELY(DISTINCT ('wd' IN ()))); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS REAL) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(LIKELY(DISTINCT vt0.c0)), ((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR((~ (vt0.c0)))))OR('Yu')), TOTAL((vt0.c0 IN (vt0.c0))) FROM vt0 WHERE (((((((((((x'')%(x'c1c6')))OR(((0.8702873522136158)/(0.027367141648153792)))))OR(SQLITE_COMPILEOPTION_USED(0x767a8ec7))))AND(CASE WHEN '' THEN 'S<{' WHEN 'I]\rnry,g' THEN -2054577961 WHEN '-349066008' THEN x'' ELSE '1497190816' END)))AND((0.11659332267980327 IN ())))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()), ((CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '' END)|(MAX(vt0.c0))), RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((NULL)!=(NULL))) NOT BETWEEN (((((0.19907424374920357)OR('qjmA')))AND(')n5c%?A'))) AND (CAST(NULL AS NUMERIC)))) GROUP BY ((vt0.c0) ISNULL) COLLATE RTRIM HAVING (((0.3468287480044331)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((TIME(vt0.c0, '285526569', vt0.c0)))) ORDER BY (((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((vt0.c0) ISNULL)))) ASC, vt0.c0 ASC; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL))%(x'')), ((((vt0.c0) IS FALSE))<<(vt0.c0 COLLATE NOCASE)), GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 ORDER BY CASE (~ (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS NUMERIC) WHEN ((((x'')OR(vt0.c0)))OR(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END  NULLS LAST; -- 0ms;
SELECT DISTINCT LEAD(((json_patch(0X5faeeb45, x'')) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((((((((((6.00306031E8)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ()), '-1251665195'))>=(((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)AND(vt0.c0)), ((vt0.c0) NOTNULL)))), CASE ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))  WHEN (((0x48c9806b))>((vt0.c0))) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN (NOT (vt0.c0)) THEN (~ (vt0.c0)) END) OVER (), LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))), (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((json_type(vt0.c0)))) FROM vt0;SELECT DISTINCT (- (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (LIKELY(x'' COLLATE RTRIM)); -- 0ms;
SELECT ALL ((CAST(0X63b5e913 AS INTEGER)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (CAST(((((x'')OR('0.7910620987336648')))OR(x'')) AS INTEGER)) LIMIT 330265053 OFFSET 1147460396; -- 0ms;
SELECT ((((vt0.c0)*(vt0.c0)))<<((vt0.c0 IN ()))), vt0.c0, SUM(TRIM(vt0.c0, vt0.c0)) OVER () FROM vt0 WHERE ((((+ (NULL))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((CASE WHEN x'' THEN vt0.c0 END) BETWEEN ((NOT (vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)))), ((((vt0.c0)||(vt0.c0)))GLOB(vt0.c0 COLLATE NOCASE)), ((IFNULL(vt0.c0, vt0.c0)) BETWEEN (((vt0.c0)|(vt0.c0))) AND ((NOT (NULL)))) FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)%(LIKELY(vt0.c0))), TRIM(((vt0.c0)>=(vt0.c0)), vt0.c0 COLLATE NOCASE) DESC, (((((vt0.c0) ISNULL)))=((vt0.c0 COLLATE BINARY)))  NULLS LAST; -- 0ms;
SELECT DISTINCT '1347272514' FROM vt0 WHERE ((+ (((NULL)LIKE(1280198962))))); -- 1ms;
SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (DATE(vt0.c0, vt0.c0, vt0.c0))), (((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c0) NOTNULL)))), CAST(MIN(0x7fd35c07) AS BLOB) FROM vt0 WHERE (((('s귧7E[O~ s')) BETWEEN (((('LgoRPD熭F')GLOB(NULL)))) AND ((CASE 0.3184419048677277  WHEN NULL THEN '' END)))) ORDER BY ABS(vt0.c0 COLLATE BINARY) ASC LIMIT 1625090969 OFFSET 1727577059; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((('\n?')) BETWEEN ((((x'')<<(x'')))) AND (((('-1453771743') NOT BETWEEN (0.461002296562003) AND (0.004988711962389258)))))); -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) FROM vt0 WHERE (((NULL) NOT NULL)) ORDER BY vt0.c0 DESC  NULLS FIRST, (vt0.c0 IN ()); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS TEXT)) NOT NULL) FROM vt0; -- 0ms;
SELECT LIKELY(vt0.c0) FROM vt0 WHERE (((x'5821') BETWEEN (NULL) AND ('*E')) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT ALL CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY FROM vt0 WHERE (PRINTF((- (0.23049991085115162)), ((-1234298928) NOTNULL), CAST('Kz' AS BLOB))); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(((vt0.c0)IS(vt0.c0)))), UPPER(DISTINCT NULL), UNICODE(((vt0.c0)+(vt0.c0))), ROW_NUMBER() OVER ( ORDER BY ((2.2940147E7) NOT NULL) DESC  NULLS FIRST), ((0.20696497219876597)<=(vt0.c0)) FROM vt0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0 WHERE (((((((3.46075658E8))==((4.55221175E8))), (((NULL, NULL, '1885415821'))>=(('1131456781', 9.56599249E8, ''))), ((0.907138717164183)||('MU).+m+	5'))))<=((NULL, CAST(NULL AS TEXT), NULL)))); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT SUM(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))), (NOT (MIN(vt0.c0))), (((((vt0.c0)|(0.5057697608059808)), GROUP_CONCAT(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((~ (vt0.c0)), (vt0.c0 IN (vt0.c0)), ((vt0.c0)IS(vt0.c0))))), '-937076542', (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))<>((vt0.c0))) FROM vt0 WHERE (((((CASE 0.41285378800961303  WHEN NULL THEN x'e5fe' END)AND(CASE WHEN x'50c1' THEN '192352668' END)))AND(((1215030314)>>('NfFu'))))); -- 0ms;
SELECT TOTAL(CAST(vt0.c0 AS TEXT) COLLATE NOCASE) OVER (), vt0.c0 COLLATE NOCASE, CAST(((vt0.c0)<=(vt0.c0)) AS INTEGER) FROM vt0 WHERE (((((((2.40953849E8) IS TRUE))OR((('Q')<(0.3865268977727243)))))AND((~ ('4_l'))))); -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+('J8R}>PI~R')) FROM vt0; -- 0ms;
SELECT (~ (((vt0.c0)>>(vt0.c0)))) FROM vt0; -- 1ms;
SELECT CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER) FROM vt0 WHERE (NULLIF(((x'febd') ISNULL), CAST(0X377ef3fe AS BLOB))); -- 0ms;
SELECT ALL ((((((((vt0.c0)OR('')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((((('1043147644')||(0x5f63ade9))) NOT NULL)); -- 0ms;
SELECT ALL (((vt0.c0, vt0.c0, 0.4505775835196818)) BETWEEN (((- (vt0.c0)), '', CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((vt0.c0 IN (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CASE vt0.c0  WHEN '-1467611245' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) FROM vt0 WHERE ((((((NULL))>=((x''))))GLOB(((0.9964911043729301)>=('4ld|zUX,'))))) ORDER BY ABS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) DESC  NULLS FIRST LIMIT 1597131407; -- 0ms;
SELECT ('' IN (((vt0.c0) ISNULL), ((vt0.c0) ISNULL))) FROM vt0 WHERE ((((('iVOmC钐\M')OR(NULL)))OR(ABS(DISTINCT 1589953331)))); -- 0ms;
SELECT AVG(((vt0.c0)IS('5a'))) OVER () FROM vt0; -- 0ms;
SELECT ((((vt0.c0)LIKE(vt0.c0)))>=(SUM(vt0.c0))) FROM vt0 WHERE ((CASE 0.8765959784330063  WHEN x'' THEN 's\' WHEN 1467385086 THEN '\nMeS' WHEN NULL THEN x'32a3' ELSE x'' END IN (LOWER(0.1618836810578086), (('zot') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (ABS(DISTINCT vt0.c0)) AND (((vt0.c0)*(vt0.c0)))), (((((vt0.c0) NOT NULL)))<((((vt0.c0) IS TRUE)))), 0.6600640671461648 FROM vt0 WHERE ((- (x''))); -- 0ms;
SELECT ALL ((NULL IN (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND((vt0.c0 IN (vt0.c0)))))OR((+ (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)+(vt0.c0)))/((('956599249')/(vt0.c0)))) FROM vt0 WHERE (CAST(CASE WHEN '5oF\,⚈u	' THEN 0.9164942753268545 END AS INTEGER)); -- 0ms;
SELECT ((UPPER(vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0)), 0.9988149430412292, CAST(((vt0.c0)<<(vt0.c0)) AS TEXT) FROM vt0 WHERE (((((((x'3e3f')OR(0.3643715919359082)))OR('600306031')))>=(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((vt0.c0)>=(vt0.c0)) COLLATE RTRIM, CASE WHEN CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (- (vt0.c0)) WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN (vt0.c0)) WHEN NULL THEN NULL ELSE (('')IS(vt0.c0)) END, (~ (((((((((vt0.c0)AND(vt0.c0)))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 LIMIT -1274990557; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (((vt0.c0))>((vt0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '-684796949' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN (vt0.c0 IN (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END FROM vt0 WHERE (((- (1.32724458E8)) IN ())); -- 1ms;
SELECT IFNULL(vt0.c0 COLLATE RTRIM, (vt0.c0 IN ())) FROM vt0 WHERE (CASE ((0.3656503781951562) NOT BETWEEN (-6.26258779E8) AND (NULL))  WHEN (('1280198962')/(0.5906056545539037)) THEN x'' COLLATE RTRIM END) LIMIT -987769104; -- 0ms;
SELECT DISTINCT (((((-1991231129 IN (NULL)))AND(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0 WHERE (CASE WHEN ((0x6304d944)AND(0.25504223668431414)) THEN ((NULL)<=('')) ELSE ((NULL) IS FALSE) END) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))AND(NULL)) AS BLOB); -- 0ms;
SELECT DISTINCT (((vt0.c0) IS TRUE) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((x'ed63') IS FALSE) IN ()) FROM vt0 WHERE (PRINTF((~ (x'3336')))); -- 0ms;
SELECT (((x'2129', NULL, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, ((vt0.c0) NOT NULL)))) FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) ISNULL); -- 0ms;
SELECT ((((vt0.c0) IS TRUE))*(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (NULL) LIMIT 1960073579 OFFSET 1582835617; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))) FROM vt0 WHERE (CAST(((0.6865251789122178) BETWEEN ('') AND ('0.6319644823828588')) AS NUMERIC)) ORDER BY CAST(((vt0.c0)<>(vt0.c0)) AS NUMERIC) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(0.647675458405199)))AND(MAX(vt0.c0))) FROM vt0 WHERE (1136997052); -- 0ms;
SELECT ALL (((vt0.c0 IN ())) NOTNULL), (((((vt0.c0 IN ()))AND(GROUP_CONCAT(vt0.c0))))AND(vt0.c0 COLLATE BINARY)), CASE WHEN ((vt0.c0) BETWEEN (0.44025540127317486) AND (vt0.c0)) THEN (vt0.c0 IN ()) ELSE '' END FROM vt0 ORDER BY ((DATE(vt0.c0, vt0.c0, vt0.c0)) IS FALSE)  NULLS LAST; -- 0ms;
SELECT (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) IN ()), PERCENT_RANK() OVER ( RANGE (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) PRECEDING), '1812077885' FROM vt0 WHERE ((((((((((((((- (NULL)))OR(((('548830414'))>((0.15625404679986787))))))OR((+ (x'')))))AND(CAST('-1905552616' AS TEXT))))OR((('V?ᱞ') BETWEEN ('') AND ('416026684')))))AND((('tzbckua''쎷')==('^')))))AND(((((((((0.44071915950123053)AND(NULL)))AND(x'')))OR('')))AND(x'753e')))));SELECT DISTINCT ('' IN ()) FROM vt0 WHERE (CASE WHEN CAST('!IV' AS REAL) THEN ((0.10581847881316131)LIKE('뚚0\rG')) ELSE NULL COLLATE NOCASE END); -- 2ms;
SELECT ALL ((((((vt0.c0)OR('-2072151374')))AND(vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (vt0.c0)) FROM vt0 GROUP BY (((vt0.c0, vt0.c0, x'')) BETWEEN ((CAST(vt0.c0 AS INTEGER), CAST('FqR쉨0W岕吒' AS NUMERIC), ((vt0.c0)>(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)%(NULL)), vt0.c0 COLLATE BINARY))) HAVING ((((vt0.c0)<=('464303814'))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) ISNULL))); -- 1ms;
SELECT NULL FROM vt0 WHERE (CASE WHEN (('192352668') BETWEEN ('\nB') AND ('-419957499')) THEN (NULL IN ()) ELSE ((x'') NOT BETWEEN ('862354263') AND ('-2054577961')) END); -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) COLLATE RTRIM, CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=(('-607011819', vt0.c0, vt0.c0))) THEN SUBSTR(vt0.c0, vt0.c0) END, vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT NTILE(0.13024233429547605) OVER () FROM vt0;SELECT ((0.07870517869786542)*(((vt0.c0)==(0.3576772256776585)))) FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE DESC; -- 0ms;
SELECT ALL CAST(((vt0.c0)GLOB(vt0.c0)) AS INTEGER) FROM vt0 ORDER BY ((((vt0.c0)<(vt0.c0)))||(((vt0.c0)AND(vt0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), ((((vt0.c0) IS TRUE)) NOTNULL), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))OR(x'')))AND(0xffffffff90f3ab00)))OR((- (vt0.c0)))), CAST(((NULL)||(vt0.c0)) AS TEXT) FROM vt0; -- 0ms;
SELECT x'1dc3' FROM vt0 GROUP BY CAST(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) AS TEXT) HAVING ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS FALSE); -- 0ms;
SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE) FROM vt0 GROUP BY ((NULL) NOT BETWEEN ((((vt0.c0, vt0.c0, NULL))<>((vt0.c0, x'', vt0.c0)))) AND (((vt0.c0)LIKE(vt0.c0)))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((x'49ef53f6')<<(0.7595855772985888))) ISNULL), (~ (SQLITE_VERSION()))) OVER () FROM vt0;SELECT DISTINCT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((vt0.c0)/(vt0.c0)))) FROM vt0 WHERE (((('귩%JVV㌘A' IN (NULL))) BETWEEN (CAST(0.3416464424890959 AS REAL)) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((vt0.c0)+(vt0.c0)) COLLATE BINARY FROM vt0 GROUP BY CAST(vt0.c0 AS TEXT) COLLATE BINARY; -- 1ms;
SELECT ALL CASE WHEN (- (vt0.c0)) THEN ((0.09793347588628698) ISNULL) ELSE ((x'')/(vt0.c0)) END FROM vt0 GROUP BY CAST(json_extract(vt0.c0, vt0.c0) AS NUMERIC) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE);SELECT ALL AVG(((x'')-(vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0, (((CASE vt0.c0  WHEN 0.981291824788824 THEN vt0.c0 ELSE vt0.c0 END))<=((((vt0.c0) ISNULL)))), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL) FROM vt0 WHERE (MIN(((((((((NULL)OR(x'')))OR(0.39856464335712805)))OR(NULL)))OR(x'2c4b')), ((x'')+(1.27385955E9)), ((NULL) BETWEEN (x'') AND ('0.83339044594158')), ((((0.47066511309457204)OR(x'')))OR(x'')))); -- 0ms;
SELECT ALL '-1359050266' FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(TOTAL_CHANGES())) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT NULL) IN ()) FROM vt0 GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS TRUE) HAVING CASE WHEN vt0.c0 THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END; -- 0ms;
SELECT ALL (((NOT (vt0.c0))) IS TRUE) FROM vt0 GROUP BY CASE (vt0.c0 IN ())  WHEN ((vt0.c0)IS NOT('780443195')) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (x'')) ELSE ((vt0.c0)+(vt0.c0)) END, (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ()), NULL LIMIT 1523054272 OFFSET 600306031; -- 0ms;
SELECT LTRIM(vt0.c0 COLLATE NOCASE) FROM vt0 WHERE ((- (NULL)) COLLATE RTRIM COLLATE RTRIM) LIMIT 354409902; -- 0ms;
SELECT ALL ((vt0.c0)AND(vt0.c0)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))))OR(json_remove(vt0.c0, NULL, vt0.c0, vt0.c0))) FROM vt0 WHERE ((((('_') BETWEEN (0.785164315919165) AND (x'315c'))) IS TRUE)) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ());SELECT ALL CAST(COUNT(vt0.c0) AS BLOB), CAST(vt0.c0 AS TEXT) COLLATE BINARY, LIKELY(CASE WHEN vt0.c0 THEN vt0.c0 END) FROM vt0 WHERE ((((('2009961600')IS(NULL))) NOT BETWEEN ((('-2089486460') BETWEEN (x'44b0bfd2') AND (0.14228114810107495))) AND (x''))); -- 1ms;
SELECT ALL NULL FROM vt0; -- 0ms;
SELECT AVG(vt0.c0) FROM vt0 GROUP BY (((vt0.c0)) BETWEEN (('-857405535')) AND ((vt0.c0))) COLLATE NOCASE HAVING (+ (TRIM(vt0.c0, 0.7817839275978181))); -- 1ms;
SELECT ALL ((((((((vt0.c0)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)&(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))))OR(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((('') BETWEEN (NULL) AND (x'')) COLLATE BINARY); -- 0ms;
SELECT ALL vt0.c0, ((SUM(vt0.c0))%((vt0.c0 IN (vt0.c0)))), CASE WHEN 0.01059279868389873 THEN ((vt0.c0)<<(x'')) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END, TYPEOF(CAST(vt0.c0 AS NUMERIC)), (((((vt0.c0))>((vt0.c0)))) ISNULL) FROM vt0; -- 0ms;
SELECT ALL (NOT (TYPEOF(DISTINCT x''))), CAST(((vt0.c0) IS FALSE) AS INTEGER), ('' IN ()) FROM vt0 WHERE ((- ('-1727508298'))); -- 0ms;
SELECT vt0.c0, SUM(UPPER(DISTINCT vt0.c0)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>(ABS(DISTINCT vt0.c0))), (~ (vt0.c0)) COLLATE NOCASE COLLATE NOCASE, ((((vt0.c0)LIKE(vt0.c0)))<=(vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT ALL (- (vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((((('WJt4挿')%(0.5513827362609555))))<(((('-941358662') IS TRUE))))); -- 0ms;
SELECT ALL json_insert(((vt0.c0) IS TRUE), ((vt0.c0)||(0.18128636372754614)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) FROM vt0;SELECT LIKELIHOOD(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, 0.5762065904885435) FROM vt0 WHERE ((((('-663005577') NOT NULL)) IS FALSE)); -- 0ms;
SELECT ALL vt0.c0 COLLATE NOCASE, ((((((vt0.c0)<(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(x'')), (vt0.c0 COLLATE BINARY IN ()) FROM vt0 WHERE (((((('70603752'))==((NULL))))>>(((NULL) BETWEEN ('0IvkPtC') AND (-1076856548))))); -- 0ms;
SELECT DISTINCT MIN(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((((('')) NOT BETWEEN (('424780797')) AND ((0.03755784037628551)))) ISNULL)); -- 0ms;
SELECT ALL ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (-986194341) GROUP BY (vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM COLLATE RTRIM, ((((vt0.c0) NOT NULL))>(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((((((vt0.c0)*(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(((vt0.c0)<<('0d')))); -- 0ms;
SELECT NULL COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT NULL) FROM vt0 WHERE (((NOT (x'7226')) IN ())); -- 0ms;
SELECT ALL ((vt0.c0 IN ()) IN ()), ((CAST(vt0.c0 AS INTEGER))<=(CAST(vt0.c0 AS BLOB))), (~ (x'afb250f1' COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT x'', (x'' IN ()), (+ (((vt0.c0) NOTNULL))) FROM vt0 WHERE ((- ((x'10da64e1' IN ())))); -- 6ms;
SELECT ALL (((vt0.c0 IN ()))||(MIN(vt0.c0))) FROM vt0 WHERE (((((('-869327054', -6.84796949E8, x''))<(('dTr-KH', 'Z''', 4.63336918E8)))) NOT BETWEEN ('-1353410618') AND ((('MI') NOT BETWEEN (NULL) AND (0.06523413374442699))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))), (+ (vt0.c0)), (((NOT (vt0.c0))) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT ((IFNULL(vt0.c0, vt0.c0))!=(AVG(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE RTRIM  WHEN ((vt0.c0)||(vt0.c0)) THEN (+ ('-1420399048')) END FROM vt0; -- 1ms;
SELECT ((((vt0.c0 COLLATE NOCASE)AND((- (vt0.c0)))))OR((('')<(vt0.c0)))), CAST(vt0.c0 AS TEXT), ((((((((((vt0.c0)&(vt0.c0)))AND(CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0) NOT NULL))))AND(SQLITE_SOURCE_ID())) FROM vt0; -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE RTRIM  WHEN load_extension(vt0.c0) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(NULL)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN x'' THEN TOTAL(vt0.c0) ELSE ((vt0.c0)=(vt0.c0)) END, ((vt0.c0)+(TYPEOF(DISTINCT vt0.c0))), 0.7391998757026341 FROM vt0 WHERE (CAST((('FALSE')OR(NULL)) AS REAL));SELECT RANK() OVER ( GROUPS  CURRENT ROW), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE), ((COALESCE(DISTINCT vt0.c0, vt0.c0))LIKE(((vt0.c0)-(vt0.c0)))) FROM vt0 WHERE (HEX(((-1423214476) NOT NULL))); -- 0ms;
SELECT vt0.c0, IFNULL(SUM(vt0.c0), (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, '0.479816008801067', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT ((TYPEOF(DISTINCT 0.835487844552743)) BETWEEN (((vt0.c0)||(vt0.c0))) AND (vt0.c0)), vt0.c0, CAST((vt0.c0 IN ()) AS REAL), 2060794019, PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE COUNT(vt0.c0)  WHEN ((('0.4495590353094536')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END FROM vt0 WHERE (UNLIKELY(LOWER(NULL))); -- 0ms;
SELECT (((((vt0.c0))=((vt0.c0))))IS NOT(CAST(5.13804654E8 AS BLOB))), vt0.c0 COLLATE RTRIM, '548830414' FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY (((('_on8諾5ẙx')AND(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0)||(vt0.c0)))), vt0.c0) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0)<(MAX(vt0.c0))), COALESCE(SUM(x''), ((vt0.c0) NOTNULL)), COUNT(*) FROM vt0; -- 0ms;
SELECT ALL SUM((vt0.c0 IN ())) FROM vt0; -- 0ms;
SELECT SUM(((x'8254') ISNULL)) OVER () FROM vt0; -- 1ms;
SELECT DISTINCT (~ (((vt0.c0)>=(vt0.c0)))) FROM vt0 WHERE (((((((((((((-1272788722)AND(0.26786620834603136)))OR(NULL)))AND(-199720631)))OR(0.05288633996348435)))AND((((1.600368105E9))<=((x''))))))AND(((x'14e9') BETWEEN (1.513264272E9) AND (0.8118073921955314))))); -- 0ms;
SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((5.21880914E8)) BETWEEN ((('-1910952994' IN ()))) AND ((CASE 'qB'  WHEN '-1462626341' THEN x'042e' END)))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)*(MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL CAST(COUNT(*) AS TEXT), CAST((~ (vt0.c0)) AS BLOB), ((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(SUM(vt0.c0))))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0)*(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((780443195)-(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN (vt0.c0, (~ (vt0.c0)))) FROM vt0 WHERE ((((('0.47431422968184545') IS FALSE)) BETWEEN ((((0.8511825948311609))<=((NULL)))) AND (((NULL)<<('0.4505775835196818'))))); -- 0ms;
SELECT ('' IN ()), vt0.c0, INSTR(((vt0.c0) NOT NULL), (- (vt0.c0))) FROM vt0 WHERE (((((NULL) IS FALSE))*((NOT (x''))))); -- 0ms;
SELECT DISTINCT '*' FROM vt0; -- 0ms;
SELECT ALL UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-474974919'))) FROM vt0 WHERE (((CASE WHEN -889835783 THEN '' WHEN NULL THEN NULL WHEN x'b758' THEN 0.8770078184077015 ELSE 0.24303461357797684 END)AND((- ('ivls'',mg|'))))); -- 0ms;
SELECT ALL vt0.c0, ((((vt0.c0)>>(vt0.c0))) NOT NULL), (((vt0.c0 IN ())) NOTNULL) FROM vt0 WHERE ((('<W')-(NULL)) COLLATE RTRIM) ORDER BY (vt0.c0 COLLATE NOCASE IN (((vt0.c0)>=(vt0.c0)))) ASC, CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN vt0.c0 THEN CAST(vt0.c0 AS BLOB) ELSE NULLIF(NULL, vt0.c0) END ASC; -- 0ms;
SELECT DISTINCT FIRST_VALUE(0.10169245493812773) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CASE QUOTE(vt0.c0)  WHEN SQLITE_VERSION() THEN vt0.c0 ELSE ((vt0.c0)>=(vt0.c0)) END FROM vt0 WHERE (((((((x'')OR(x'9cb8')))OR(x'80e1')))!=((((0.18160240136723071)) BETWEEN ((NULL)) AND ((0.7048139155768975)))))) GROUP BY ((ABS(vt0.c0))||(CASE 0.35097072888575886  WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
SELECT DISTINCT (vt0.c0 IN (vt0.c0, (- (vt0.c0)))) FROM vt0 WHERE (((((0.7800465992174276) IS TRUE))OR(((x'') NOT BETWEEN (x'') AND ('-1533382656'))))); -- 0ms;
SELECT DISTINCT (~ (CAST('l]k+ ]>W' AS NUMERIC))) FROM vt0 WHERE (((((0xffffffffbc187213 COLLATE BINARY)OR((((NULL)) BETWEEN (('')) AND ((1.656578394E9))))))OR(((((((((0.8496948259742195)OR(x'6401')))OR(x'4a1d')))AND(0.012711095910484027)))OR(NULL))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))IS NOT(((vt0.c0)+(vt0.c0))))  NULLS LAST LIMIT 836462961; -- 0ms;
SELECT ((LTRIM(vt0.c0)) IS TRUE) FROM vt0; -- 0ms;
SELECT DISTINCT ('?!* u' COLLATE NOCASE IN ((- (vt0.c0)), vt0.c0)) FROM vt0 GROUP BY (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))>=(((NOT (vt0.c0))))) HAVING (((((vt0.c0)!=(vt0.c0))))>=(((vt0.c0 IN ())))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS INTEGER)  WHEN vt0.c0 THEN (- (vt0.c0)) END FROM vt0 WHERE (((((x'')&(0.08818321263860274))) NOT NULL)) ORDER BY vt0.c0; -- 7ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))%(LIKELY(vt0.c0))) FROM vt0 WHERE ((((0.013189557519692086)) BETWEEN (((((x'', NULL, 'MI')) BETWEEN ((NULL, x'', '\n?')) AND ((NULL, -1359050266, 0.23218247728177344))))) AND ((LIKELY(DISTINCT NULL))))); -- 0ms;
SELECT (((NULL)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0) ISNULL)))), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOTNULL), (+ (((vt0.c0)AND(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (NOT ((~ (vt0.c0)))) FROM vt0 WHERE (((((('-198713964')OR(-349066008)))AND(x'')) IN ())) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((NULL)GLOB(vt0.c0))) AND (CASE WHEN vt0.c0 THEN x'f722' ELSE vt0.c0 END))  NULLS LAST, CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN TRIM(vt0.c0, vt0.c0) END DESC; -- 0ms;
SELECT DISTINCT LEAD(((((((((vt0.c0)OR(vt0.c0)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.5719413253734952 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0 COLLATE NOCASE)<>(NULL COLLATE BINARY))) OVER () FROM vt0 UNION SELECT x'' FROM vt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0) NOTNULL)) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) FROM vt0 GROUP BY vt0.c0; -- 0ms;
SELECT CAST(MAX(vt0.c0) AS INTEGER), GROUP_CONCAT((((vt0.c0, '', vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) OVER (), CAST(705815419 AS BLOB) FROM vt0 LIMIT 1741477617; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), CASE WHEN x'' THEN CAST(vt0.c0 AS REAL) END, ((NOT (vt0.c0)) IN (CAST(vt0.c0 AS BLOB))) FROM vt0 WHERE (CAST(((('H7싒dh4Z'))<((0x447f22bb))) AS NUMERIC)); -- 0ms;
SELECT ALL (((vt0.c0)GLOB(vt0.c0)) IN ()), COUNT(((vt0.c0)<=(vt0.c0))) OVER (), MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((CASE x''  WHEN 0X4019953c THEN 0.3318703375433498 WHEN NULL THEN x'702e' WHEN 0.5648520513412969 THEN 0.8264987735913082 END)OR((('-1189431785') NOT BETWEEN ('&뚚sw4Q') AND (x''))))) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS REAL) ASC, ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)  NULLS LAST; -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE ((((NULL, x'', '*')) BETWEEN ((NULL COLLATE RTRIM, CAST('Jw' AS TEXT), CAST(x'' AS BLOB))) AND ((((')4	') NOT BETWEEN ('0.5702237510277175') AND (x'')), (((('')OR(0.836386316088238)))AND(NULL)), '528704172' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (vt0.c0) AND (x'')) IN (CASE NULL  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((x'')) AND ((NULL))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUBSTR(((vt0.c0)IS(vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))), '깤,VV?Rb瀛', ((((('e3')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT NULL) FROM vt0 WHERE ((((- (NULL)))/(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CAST('y윩' AS REAL) COLLATE BINARY FROM vt0 WHERE (CASE WHEN ((NULL) NOT NULL) THEN (- ('-972274091')) WHEN (('xN')+(NULL)) THEN (- (0.6494983616946406)) WHEN (('''ELD	')+(1354858511)) THEN (+ (NULL)) ELSE 0x76fc331b COLLATE RTRIM END) LIMIT -940934094; -- 0ms;
SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL), (('122875186')IS((vt0.c0 IN ()))), (((vt0.c0)IS NOT(vt0.c0)) IN (SUM(vt0.c0))), json_extract((vt0.c0 IN (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND ('458105228'))), ((MIN(vt0.c0))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0;SELECT DISTINCT (((((~ (vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(CASE vt0.c0  WHEN vt0.c0 THEN 0.7950756875553285 ELSE vt0.c0 END)) FROM vt0 WHERE (((CASE WHEN 's8!츥90B' THEN NULL ELSE NULL END) BETWEEN (ABS(0Xffffffffbd201445)) AND (((x'22c0299fc278')+(x''))))) ORDER BY ((vt0.c0 IN ()) IN ()) ASC, (- (vt0.c0)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (CAST(CASE WHEN 0.7498916608694659 THEN NULL END AS REAL)) GROUP BY x'' HAVING COUNT(*) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) ISNULL) AS TEXT), x'', ((((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c0)IS(vt0.c0)))))AND(((((vt0.c0)OR('*[')))AND(vt0.c0)))))OR(-883154960)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0)>(vt0.c0)) COLLATE BINARY FROM vt0 LIMIT 459625701 OFFSET -1769740850; -- 0ms;
SELECT (vt0.c0 COLLATE RTRIM IN ()), ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(LIKELY(DISTINCT vt0.c0))))AND(MIN(vt0.c0))), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0) NOTNULL))AND(CAST(0Xffffffffec957abe AS REAL))), CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB), (COUNT(*) IN ()) FROM vt0 WHERE (((((x'') NOT BETWEEN (NULL) AND (NULL))) NOT BETWEEN ((0x23c7f16f IN ())) AND (x''))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)|(vt0.c0)))AND(('''2RfY\*' IN ()))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), NULL, ((((vt0.c0 IN (vt0.c0, vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))<(((vt0.c0 IN ()), vt0.c0, ((vt0.c0)/(vt0.c0))))), 0.046694937315607477 FROM vt0; -- 0ms;
SELECT DISTINCT ((COUNT(*))GLOB(((vt0.c0)<>(vt0.c0)))) FROM vt0 WHERE ((((~ (0.7258544639402145)))>=(((1605299013)>=('wsxf哾FK'))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) IS FALSE))OR(vt0.c0)))OR(COUNT(vt0.c0))))AND(((vt0.c0)||(vt0.c0)))))AND(vt0.c0)) FROM vt0 WHERE ((((((x''))<=((NULL)))) NOT BETWEEN (((NULL)GLOB(NULL))) AND ((+ (-1354473708))))); -- 0ms;
SELECT (((~ (vt0.c0)))<=(((vt0.c0)*(vt0.c0)))), COUNT(*) OVER (), (('-607011819')&(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (0Xffffffff9d4bf345); -- 0ms;
SELECT DISTINCT CASE TOTAL(vt0.c0)  WHEN ((vt0.c0) NOTNULL) THEN (+ (vt0.c0)) END, FIRST_VALUE((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=(((vt0.c0 IN (vt0.c0)))))) OVER (), COALESCE(LIKELY(DISTINCT vt0.c0), ((vt0.c0)>(vt0.c0))) FROM vt0; -- 0ms;
SELECT NULLIF('eJ', ((0x767a8ec7) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE (((('', NULL, NULL)) NOT BETWEEN ((-855598831 COLLATE RTRIM, (('')>>(x'')), (((('')OR(NULL)))OR(1586902456)))) AND (((((((((('-692973466')AND(0.4428326182111092)))AND(x'')))OR('''')))AND('0.27862590131180187')), (('*F')*(NULL)), CAST(0.4067019038552827 AS TEXT))))) ORDER BY ((((((((((((LIKELIHOOD(DISTINCT vt0.c0, 0.320256643903125))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(vt0.c0 AS TEXT))))AND(vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(SQLITE_VERSION())))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT CAST(CASE WHEN vt0.c0 THEN '3]MC' ELSE vt0.c0 END AS TEXT) FROM vt0 WHERE ((((LOWER(x''), (((']o\㮨.-k/꽱', NULL, 673023865))<>(('', '1648767884', x''))), ((NULL) NOT BETWEEN (0.5192932940679638) AND (0.8674297908902616))))>((((((0x6e4ba907)OR(-9223372036854775808)))AND(0.30717394595809233)), CAST('' AS INTEGER), CAST('-497900884' AS BLOB))))); -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT vt0.c0))/(NULL)) FROM vt0 WHERE ((((NOT (3.5031135E7))) NOTNULL)); -- 0ms;
SELECT DISTINCT LTRIM((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)>(vt0.c0))) FROM vt0 WHERE ((((1603182197)>('463336918')) IN ((NULL IN (0.18461011200036537))))); -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 NOT INDEXED WHERE ((((((NULL)=('346075658'))))<(((NULL IN ()))))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((vt0.c0)IS NOT(vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM COLLATE BINARY, CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) FROM vt0 WHERE (((((('䭚!z0᫕')) BETWEEN (('-883154960')) AND ((NULL))))IS NOT(((((0.0739700261955396)OR(NULL)))AND('393593989'))))) GROUP BY (((((((((- (x'fd95')))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(vt0.c0)))OR(x'')))OR((vt0.c0 IN ()))) HAVING CASE WHEN (- (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c0 COLLATE BINARY END ORDER BY TYPEOF(DISTINCT ((vt0.c0) IS FALSE)) ASC, (CAST(x'' AS NUMERIC) IN ()) ASC LIMIT 540798553; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((vt0.c0)+(vt0.c0))) AND ((vt0.c0 IN ()))) FROM vt0 GROUP BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY HAVING (((~ (vt0.c0))) IS TRUE); -- 0ms;
SELECT ALL SUM(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) OVER () FROM vt0 WHERE ((((0.13386990386104158)) NOT BETWEEN (((+ (0.28400060036152464)))) AND ((CASE WHEN '709465107' THEN x'e9d1' END)))); -- 1ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE)IS(0x1492286f COLLATE BINARY)) FROM vt0 GROUP BY (('')IS(((vt0.c0)-(vt0.c0)))), (~ (vt0.c0)) COLLATE BINARY, 'b<' HAVING CAST(((vt0.c0) IS FALSE) AS TEXT); -- 0ms;
SELECT COUNT(*), ((CASE WHEN vt0.c0 THEN vt0.c0 END) ISNULL), (~ (((vt0.c0)<<(x'')))) FROM vt0 WHERE (((CASE x''  WHEN '-999864930' THEN 0.9076526606110729 ELSE '-1189431785' END)GLOB(load_extension(0.2994294125486492, -923618245))));SELECT DISTINCT (((vt0.c0)) BETWEEN ((((0.3837852016167599) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))), NULL, MAX(vt0.c0) FROM vt0 WHERE ('s 2!A඲}'); -- 0ms;
SELECT ALL SUM(CAST(vt0.c0 AS INTEGER)) FROM vt0;SELECT ALL ((vt0.c0) IS TRUE) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c0)|(vt0.c0)) AS NUMERIC) FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))+(CAST(vt0.c0 AS BLOB)))  NULLS LAST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0)!=('r&[6ᆜ'''))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT (vt0.c0 IN (vt0.c0, vt0.c0)), (((vt0.c0))=((vt0.c0)))), (((((vt0.c0) BETWEEN (vt0.c0) AND ('267261811')), CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))>((json_array(NULL, vt0.c0), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0))), CAST(json_extract(vt0.c0, vt0.c0) AS INTEGER) FROM vt0;SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))/(((vt0.c0)+(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY (((vt0.c0)AND(vt0.c0)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL) FROM vt0 WHERE ((((0.3218984363720262)) BETWEEN ((json_remove('-1221657626', NULL))) AND ((((((0.9988149430412292)OR('')))OR(x'fec85c11')))))) ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY)  NULLS LAST, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, 0.8772084381050876), ((CAST(vt0.c0 AS REAL))>('NVGN*%9*')), SUM(vt0.c0) FROM vt0 ORDER BY ((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0) AND (((vt0.c0)LIKE(vt0.c0)))); -- 0ms;
SELECT ALL SUM((((vt0.c0))!=(('nRyxK3')))) OVER ( ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))*((vt0.c0 IN ()))) ASC  NULLS LAST, ABS(vt0.c0 COLLATE RTRIM) DESC  NULLS LAST), (((x''))<=((vt0.c0))) COLLATE NOCASE, (((vt0.c0) NOT NULL) IN (SUM(vt0.c0))) FROM vt0 WHERE (((((0X39ebaa93)OR((0.6056614406664789 IN ('UG', 0.3647090574739542)))))OR(NULL))); -- 0ms;
SELECT ALL MAX((- (vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0))>((vt0.c0))))LIKE(json_array(vt0.c0, vt0.c0))) FROM vt0 ORDER BY CAST(TRIM(vt0.c0, vt0.c0) AS INTEGER) DESC;SELECT CAST(LOWER(vt0.c0) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0)))>=((('') IS TRUE))), CAST(vt0.c0 COLLATE RTRIM AS BLOB), ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ISNULL) FROM vt0 WHERE ((+ (((0.9878723767381105)<(NULL))))) LIMIT 842153984 OFFSET 1575030502; -- 0ms;
SELECT DISTINCT '-1180383447' FROM vt0 WHERE (((((((((0xffffffffb3279059)AND('-1362587090')))OR('1147460396')))AND(NULL)))AND(((0.9349956669021823)<=(0.9682352487527678))))); -- 0ms;
SELECT ALL ((((vt0.c0) NOT NULL))<=((vt0.c0 IN ()))) FROM vt0 WHERE (((CASE WHEN 'Z~Q(he#OO' THEN '+~n' WHEN 0.8269545020931423 THEN 0.9228223298142337 WHEN x'' THEN x'c22e' ELSE 0.8523523770795349 END)IS(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)>(vt0.c0)) IN ()) FROM vt0 WHERE (((((((((((NULL)OR(x'')))OR(((0.24690755342374382) ISNULL))))AND(CASE WHEN x'da81' THEN '~Jg276g' END)))AND(TIME(x'', -1472090508, x'53c1'))))AND((NOT (NULL))))) ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0 WHERE ((CAST(NULL AS TEXT) IN ())); -- 3ms;
SELECT AVG(((vt0.c0) ISNULL)) OVER () FROM vt0; -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)IS(vt0.c0)) FROM vt0 WHERE ((((CAST('' AS NUMERIC)))=(((('-1412457740') NOTNULL))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 WHERE (CAST(x'' AS BLOB) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(x''))) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (vt0.c0 COLLATE RTRIM)) FROM vt0; -- 0ms;
SELECT DISTINCT '-1190522072', (NOT (vt0.c0 COLLATE RTRIM)), vt0.c0 FROM vt0 WHERE (NULL); -- 0ms;
SELECT (NOT (((vt0.c0)AND(vt0.c0)))), NTILE(CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN (((vt0.c0)) BETWEEN ((0.2994294125486492)) AND ((vt0.c0))) END) OVER (), (((((vt0.c0))<=((vt0.c0)))) IS FALSE) FROM vt0 WHERE (((((3.5031135E7) NOT BETWEEN (1523054272) AND (0.5729742882654846))) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(x'4f63b34d', 0.3860005177578393)) NOT BETWEEN (AVG(vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)), CASE WHEN vt0.c0 THEN NULL ELSE '-293389642' END COLLATE RTRIM, CASE (x'c961' IN ())  WHEN MIN(vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END FROM vt0 WHERE (CAST((((((((('+')OR(432957792)))OR(x'5c1a')))OR(-1604329287)))OR(x'')) AS BLOB)); -- 0ms;
SELECT DISTINCT (- (((vt0.c0) IS TRUE))) FROM vt0 WHERE ((((9223372036854775807)) BETWEEN ((x'')) AND (('0.27862590131180187'))) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT ALL COUNT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) OVER (), (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (((vt0.c0) NOT NULL))), (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((vt0.c0 IN ()))) FROM vt0 WHERE ((NOT (CASE 0.2994294125486492  WHEN x'' THEN 0Xffffffffe92fe59e END))); -- 0ms;
SELECT DISTINCT ((CASE x''  WHEN vt0.c0 THEN 1147460396 ELSE vt0.c0 END) ISNULL), COUNT(json_insert(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) OVER (), ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(json_array_length(vt0.c0))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND('0.8893770412413228')) FROM vt0 NOT INDEXED;SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))AND(MIN(vt0.c0))) FROM vt0 WHERE ('Ch.r6)h'); -- 0ms;
SELECT DISTINCT ((((vt0.c0)*(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((~ (vt0.c0)))), (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))==((IFNULL(vt0.c0, vt0.c0)))), ((((vt0.c0)=(vt0.c0)))LIKE((NOT (vt0.c0)))) FROM vt0 WHERE (CAST(x'' AS NUMERIC)); -- 0ms;
SELECT DISTINCT AVG(vt0.c0 COLLATE BINARY) OVER (), (((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((((vt0.c0))==((0.6420075168733023)))))), (((((vt0.c0))<((vt0.c0))))<<(AVG(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('FALSE', vt0.c0, vt0.c0))))<(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (((('' IN ()))IS NOT(((NULL) BETWEEN (NULL) AND (-6.92973466E8))))); -- 0ms;
SELECT DISTINCT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((vt0.c0)*(vt0.c0)))))AND(((vt0.c0) NOT NULL))) FROM vt0 WHERE (CASE WHEN (- (x'0f1a')) THEN (0.39589881360743295 IN ()) END); -- 0ms;
SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0)IS(vt0.c0)))) FROM vt0 WHERE (CAST((- (x'')) AS TEXT)); -- 0ms;
SELECT ((~ (0X37f3c62d)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'285b')))), 'AO', (AVG(vt0.c0) IN (vt0.c0, ((vt0.c0) NOT NULL))) FROM vt0 WHERE ((((((((((NOT (NULL)))AND('' COLLATE NOCASE)))OR(CAST('-1139248621' AS NUMERIC))))AND(((((((((x'070a')OR('956738460')))AND('-727936908')))OR(0X4d6762cc)))AND('')))))AND(json_array_length(NULL, 0.8805689227073451)))); -- 0ms;
SELECT ((GROUP_CONCAT(vt0.c0))*(((vt0.c0)>=(vt0.c0)))) FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), (((vt0.c0 COLLATE BINARY))<=((CAST(vt0.c0 AS NUMERIC)))), (((((vt0.c0))>=((vt0.c0))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, '1280198962')) AND ((vt0.c0, x'c692', vt0.c0))))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)%(vt0.c0)))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))), CUME_DIST() OVER () FROM vt0 WHERE ((((NULL)GLOB(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((']P(*') BETWEEN (((vt0.c0) IS TRUE)) AND (TRIM(vt0.c0))) FROM vt0 GROUP BY ((((vt0.c0)||(vt0.c0)))||(CAST('' AS NUMERIC))) HAVING CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 END  WHEN (vt0.c0 IN (vt0.c0)) THEN (vt0.c0 IN ()) END; -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((- (vt0.c0)), vt0.c0, DATETIME(vt0.c0, vt0.c0, vt0.c0))) AND (((((vt0.c0))<((vt0.c0))), ((vt0.c0)>(vt0.c0)), vt0.c0 COLLATE RTRIM))), x'f79e' COLLATE BINARY, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER) FROM vt0 WHERE ((((('240042550' IN ())))<=(((('TRUE') NOTNULL))))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), COUNT(LTRIM(vt0.c0, vt0.c0)) OVER ( ORDER BY (('-1031568297') BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST), CAST(vt0.c0 AS BLOB) COLLATE NOCASE FROM vt0; -- 1ms;
SELECT DISTINCT (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 WHERE (CAST(CAST(NULL AS INTEGER) AS INTEGER)) GROUP BY ((vt0.c0 COLLATE NOCASE)|(vt0.c0 COLLATE BINARY)) HAVING (('872682210')<=(CASE WHEN vt0.c0 THEN 0.22285511952720116 WHEN x'' THEN vt0.c0 WHEN 0.46555796347782896 THEN vt0.c0 ELSE vt0.c0 END)); -- 0ms;
SELECT DISTINCT load_extension(NULL, vt0.c0 COLLATE BINARY) FROM vt0;SELECT DISTINCT 1.32724458E8 FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (CAST(vt0.c0 AS BLOB)) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (((((((((((x'') NOT BETWEEN (NULL) AND (x'b6a5')))AND(CAST(1401621019 AS TEXT))))AND((0.21264849055305246 IN ()))))AND((NOT (NULL)))))OR(CAST(0.263198400688905 AS BLOB)))); -- 0ms;
SELECT LTRIM(LOWER(vt0.c0), vt0.c0 COLLATE NOCASE) FROM vt0 WHERE ((((x'') NOT NULL) IN ())) ORDER BY (+ ((NOT (vt0.c0)))) DESC, ((CASE WHEN vt0.c0 THEN vt0.c0 END)<(((vt0.c0) NOT NULL)))  NULLS FIRST; -- 0ms;
SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (x'2110')))))OR(NULLIF(vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE BINARY FROM vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)<(vt0.c0)))) AND ((UPPER(DISTINCT vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM, CASE WHEN vt0.c0 COLLATE NOCASE THEN (~ (vt0.c0)) END, (NOT (TRIM(DISTINCT ''))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE RTRIM))==((((vt0.c0)IS NOT(x''))))) FROM vt0; -- 0ms;
SELECT ALL ((((NULL)&(vt0.c0)))IS(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)LIKE(vt0.c0)), NULL COLLATE BINARY)), ((((vt0.c0) IS FALSE))%(vt0.c0 COLLATE BINARY)) FROM vt0 WHERE ((((((x'') NOTNULL)))>=((('956599249' IN (NULL)))))); -- 0ms;
SELECT ((TOTAL(NULL)) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL vt0.c0, DATETIME(TRIM(vt0.c0, vt0.c0), GROUP_CONCAT(vt0.c0), vt0.c0), NULL FROM vt0; -- 1ms;
SELECT DISTINCT (((((vt0.c0))<=((vt0.c0)))) BETWEEN (LIKE(vt0.c0, vt0.c0, '㊼')) AND (vt0.c0)) FROM vt0 WHERE (((((NULL)OR((((NULL)) BETWEEN ((0.157685910560177)) AND (('-1139248621'))))))AND((- (x''))))) GROUP BY (((('b|' COLLATE RTRIM)OR((vt0.c0 IN ()))))OR(vt0.c0)); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0 WHERE (CAST(1.27385955E9 AS REAL) COLLATE RTRIM) LIMIT -500278644; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(x'')) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT ALL FIRST_VALUE(((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) OVER ( RANGE BETWEEN ((((((vt0.c0)<=(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND ('432957792')))) PRECEDING AND  CURRENT ROW), (((vt0.c0 COLLATE RTRIM))<(((((vt0.c0))=((vt0.c0)))))), (NOT (((vt0.c0)<<(vt0.c0)))) FROM vt0 WHERE ((~ (0.8027898133556476 COLLATE BINARY))) ORDER BY CAST((vt0.c0 IN ()) AS REAL);SELECT COUNT(*) FROM vt0 WHERE ('-749833811') ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.5492043529724512 END)), NULL; -- 0ms;
SELECT ALL (((((- (vt0.c0)))AND((('')||(vt0.c0)))))AND(NULL)) FROM vt0 EXCEPT SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT NULL, (('-1031568297') IS TRUE), ((((vt0.c0) NOTNULL)) NOT BETWEEN ((+ (vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)), ROW_NUMBER() OVER (), ((((vt0.c0)=(vt0.c0))) IS TRUE) FROM vt0 WHERE ((((((((('1493355138')AND(0.8366356464613551)))OR(-1.190522072E9)))AND(((x'')&('Zt3詧MQM6_')))))OR((+ (x'9309'))))); -- 0ms;
SELECT ALL ((((vt0.c0)!=(vt0.c0))) ISNULL) FROM vt0 WHERE ((('<J' COLLATE RTRIM)!=('jg腉.+29y' COLLATE RTRIM))); -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (((CAST(-2114106606 AS TEXT)) IS FALSE)) LIMIT -1887429893; -- 0ms;
SELECT DISTINCT (NOT (x'')), NULL, ((((vt0.c0)>>(vt0.c0)))-((- (vt0.c0)))) FROM vt0 WHERE (((((NULL) BETWEEN ('-)<_*l챺') AND ('-684796949')))IS((('-409287535') BETWEEN (0xffffffff903151bc) AND ('-954274517'))))); -- 0ms;
SELECT (NOT (vt0.c0)) COLLATE RTRIM, ((((TOTAL(vt0.c0))OR((vt0.c0 IN ()))))AND(vt0.c0 COLLATE RTRIM)), ((((((vt0.c0)OR(vt0.c0)))AND('J\r')))AND(((vt0.c0) NOTNULL))) FROM vt0 WHERE (json_array_length(((0X551318f1)==(x'c685')))); -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((((('548830414'))<=((x'07af'))))!=(-1863112629))) GROUP BY '' ORDER BY (- (((vt0.c0)IS NOT(vt0.c0)))); -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))AND(((vt0.c0) IS FALSE))))OR((~ (0Xffffffffb9a4c729)))) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0)==(vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT ((SQLITE_SOURCE_ID()) NOT BETWEEN (vt0.c0) AND ((~ (vt0.c0)))), ((((0.7485899800831487)AND(vt0.c0)))AND(0.3007775947412893)), (~ (TRIM(DISTINCT vt0.c0, vt0.c0))) FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c0)) IN ()), x'' DESC LIMIT -286157556; -- 0ms;
SELECT DISTINCT AVG(CAST(vt0.c0 AS INTEGER)) OVER (), ((vt0.c0)||(vt0.c0 COLLATE NOCASE)), 0.6565618979306155 FROM vt0 WHERE (CAST((('1136997052')||(NULL)) AS REAL)); -- 0ms;
