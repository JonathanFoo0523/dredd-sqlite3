-- Time: 2024/06/07 17:54:40
-- Database: database44
-- Database version: 3.40.0
-- seed value: 1144487844
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, c2, c3 UNINDEXED, c4); -- 2ms;
INSERT OR IGNORE INTO vt0(c0, c4) VALUES (0.04820043269863472, x''); -- 0ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
REINDEX; -- 1ms;
COMMIT; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (NULL, '924350428'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL, '', 'tg', x'', NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2, c4, c3, c0) VALUES ('3B', NULL, x'', x'7afd', ''), (x'6216', 9.24350428E8, '924350428', 0X371877dc, '1229008915'), (-70991671, '', x'', 0.9223258215069041, ''), ('', x'', NULL, '-70991671', x''), (x'', 0.40226489297193, x'', NULL, 0.12681491626306163); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 303623742);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=303623742,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 7ms;
PRAGMA main.recursive_triggers; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c3, c4, c0, c1) VALUES ('0.04820043269863472', NULL, NULL, x'', -1602414744); -- 0ms;
PRAGMA incremental_vacuum(108427591); -- 0ms;
UPDATE OR ABORT vt0 SET (c4)=(964957567); -- 1ms;
INSERT OR REPLACE INTO vt0(c2, c0) VALUES (-814766482, NULL); -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('1229008915'); -- 1ms;
PRAGMA checkpoint_fullfsync; -- 1ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0, c2, c3, c4) VALUES (0.5655381029014162, NULL, 964957567, 'tg', x''); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
PRAGMA wal_autocheckpoint = 4742520321421616821; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
PRAGMA temp.short_column_names = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.050562657919447695)OR(0.606117274968283)))OR(x'')))AND(0.12681491626306163)))AND(964957567))) ISNULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c4) VALUES (x'', -7.0991671E7); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2027559101 unordered noskipscan'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c3, c4, c2, c0) VALUES ('', 'n''d', NULL, '108427591', NULL); -- 0ms;
ANALYZE main; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 5ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2027559101);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1260'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44238'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1720352917,7');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=14'); -- 0ms;
ANALYZE; -- 4ms;
REINDEX RTRIM; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('^%''OMuTv/'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 190039757); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 964957567);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 692323798); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 677344068); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.soft_heap_limit = 4448867026347637871; -- 0ms;
UPDATE OR REPLACE vt0 SET c1='-1976649672', c3=0.335615610793776; -- 1ms;
CREATE UNIQUE INDEX i52 ON t0(CASE ((c0)*(c0))  WHEN (~ ('Z')) THEN (c0 IN (c0, c0)) WHEN c0 THEN (0.9657533948520538 IN (c0)) WHEN ((NULL)%(c0)) THEN CAST(0.9690732487186883 AS NUMERIC) ELSE (c0 IN (c0)) END COLLATE BINARY) WHERE ((((((0.28052090493006143))=((c0)))))=((c0))); -- 0ms;
UPDATE vt0 SET c0='1467459073', c2=NULL, c0='4448867026347637871'; -- 1ms;
INSERT OR IGNORE INTO vt0(c3, c4, c1) VALUES (0.6536714457147254, 0xffffffffdc050722, -6.0365027E8); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (- (((t0.c0) NOT BETWEEN (vt0.c1) AND ('El#')))), (((vt0.c4 IN ())) NOT BETWEEN (vt0.c3 COLLATE RTRIM) AND (((x'60d7')%(vt0.c2)))), ((TRIM(DISTINCT vt0.c3)) NOTNULL) FROM vt0 WHERE (NULL) LIMIT -1330170460 OFFSET 850216537;SELECT ALL (+ (vt0.c3)) COLLATE NOCASE, (~ (t0.c0)), ((((((vt0.c0) NOT BETWEEN (vt0.c3) AND (vt0.c4)))OR((vt0.c4 IN ()))))OR(CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE ((((0.4661512679154596)) NOT BETWEEN ((CAST(NULL AS BLOB))) AND (((- (0.551259090598415)))))) LIMIT -615108780;SELECT ALL (((+ (vt0.c4)))%((((vt0.c0, vt0.c1, vt0.c4)) NOT BETWEEN ((vt0.c2, vt0.c4, vt0.c3)) AND ((vt0.c2, vt0.c2, vt0.c0))))), CAST(CAST('1374786677' AS INTEGER) AS REAL), TOTAL(vt0.c2) FILTER(WHERE ((json_array_length(vt0.c2, vt0.c3)) ISNULL)) OVER (), UPPER(DISTINCT ((vt0.c3) NOT BETWEEN (vt0.c2) AND (vt0.c2))), CUME_DIST() OVER () FROM vt0; -- 1ms;
SELECT DISTINCT (~ (2.027559101E9)) FROM t0, vt0; -- 0ms;
SELECT (((NOT (NULL))) BETWEEN (vt0.c3 COLLATE NOCASE) AND ((NOT (2.027559101E9)))) FROM vt0 UNION SELECT ALL (((((vt0.c1) NOT BETWEEN (NULL) AND (x'b56d'))))>((NULL))) FROM vt0, t0; -- 0ms;
SELECT ALL COUNT(NULL) FROM t0 WHERE (json_valid(x'83ae' COLLATE NOCASE)); -- 0ms;
SELECT ALL '837368170' FROM t0; -- 0ms;
SELECT ALL CAST(((vt0.c4)||('555263563')) AS BLOB) FROM t0, vt0 GROUP BY ((((vt0.c2)<(vt0.c3)))||('')); -- 0ms;
SELECT t0.c0, (((- (vt0.c1)))/(((vt0.c0)&(vt0.c0)))), CAST(((vt0.c1) ISNULL) AS REAL), LAG(LIKELY((- (x'ec0d'))), '0.050562657919447695', CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN t0.c0 END) OVER ( ORDER BY (((- (vt0.c2))) NOT NULL) DESC, vt0.c2 GROUPS ((vt0.c3) NOT NULL) PRECEDING), (- (((vt0.c2)/(t0.c0)))) FROM t0;SELECT DISTINCT (((x'')) BETWEEN ((((vt0.c2)IS NOT(vt0.c3)))) AND (('-1330170460'))) FROM t0, vt0 GROUP BY TYPEOF(CASE vt0.c3  WHEN vt0.c3 THEN vt0.c2 WHEN vt0.c3 THEN vt0.c3 WHEN vt0.c1 THEN vt0.c3 ELSE x'' END); -- 1ms;
SELECT DISTINCT CAST(vt0.c2 COLLATE BINARY AS REAL), vt0.c1, vt0.c0 COLLATE NOCASE FROM t0 WHERE (NULL);SELECT DISTINCT TRIM(DISTINCT ((vt0.c4) NOT BETWEEN (vt0.c2) AND (vt0.c0))) FROM t0, vt0 GROUP BY ((((vt0.c2 COLLATE BINARY)AND((vt0.c0 IN ()))))AND(CASE WHEN vt0.c2 THEN vt0.c4 WHEN vt0.c0 THEN vt0.c4 WHEN vt0.c2 THEN vt0.c1 END));SELECT ALL (~ (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)))) FROM t0, vt0 WHERE (((0xffffffffc9f29da6) ISNULL)); -- 0ms;
SELECT DISTINCT MAX(CASE t0.c0  WHEN vt0.c0 THEN vt0.c4 ELSE vt0.c1 END) COLLATE RTRIM FROM t0 NOT INDEXED, vt0 WHERE (TRIM(x'159a', x'' COLLATE RTRIM)); -- 0ms;
SELECT (NOT (vt0.c4)), SQLITE_COMPILEOPTION_USED(((t0.c0) IS FALSE)), ((((vt0.c1)*(vt0.c4))) NOT BETWEEN (LTRIM(t0.c0)) AND (t0.c0)) FROM vt0, t0 WHERE (((((0Xffffffff88ebdad0 IN ('El#'))))>=((((((((((968909823)AND(0xffffffffdc11f10b)))AND('968909823')))OR('^%''OMuTv/')))AND(x'85f7')))))); -- 0ms;
SELECT DISTINCT ((((vt0.c2) NOT BETWEEN (t0.c0) AND (vt0.c4)))<((NULL IN (vt0.c0, vt0.c2)))), rtreenode(((vt0.c4) BETWEEN (vt0.c2) AND (vt0.c3)), ((NULL)&(vt0.c1))), (((vt0.c4 COLLATE NOCASE, vt0.c0, ((((vt0.c3)AND(vt0.c1)))AND(vt0.c0))))<(((((vt0.c3, vt0.c0, x'5304', vt0.c1, '-70991671', 0.4450968209607554, vt0.c2))==((vt0.c3, vt0.c2, vt0.c0, NULL, vt0.c2, vt0.c0, vt0.c2))), CASE vt0.c4  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c4 THEN vt0.c3 WHEN vt0.c3 THEN vt0.c4 ELSE vt0.c2 END, highlight(vt0.c2, vt0.c0, vt0.c1, vt0.c4)))) FROM vt0;SELECT DISTINCT vt0.c3 FROM vt0 WHERE (CAST(CAST(NULL AS BLOB) AS TEXT)); -- 0ms;
SELECT DISTINCT ((vt0.c4 COLLATE RTRIM) BETWEEN ((~ (t0.c0))) AND (((vt0.c2) BETWEEN (vt0.c0) AND (t0.c0)))) FROM vt0 ORDER BY (((vt0.c2 COLLATE RTRIM))=((((vt0.c4)<=(vt0.c3))))) ASC;SELECT DISTINCT ((CASE t0.c0  WHEN vt0.c3 THEN vt0.c0 ELSE vt0.c0 END) IS TRUE) FROM t0, vt0; -- 0ms;
SELECT ALL TOTAL((((vt0.c3)) NOT BETWEEN (('1818058927')) AND ((vt0.c0)))) FROM t0 WHERE (0.9223258215069041);SELECT ALL CAST(MIN(vt0.c4) AS REAL) FROM vt0; -- 0ms;
SELECT CAST((((vt0.c4)) BETWEEN ((t0.c0)) AND ((vt0.c0))) AS REAL) FROM vt0 WHERE ((((('108427591')*(0.5806690013706303))) NOT BETWEEN ((((x'', NULL, '', NULL, -1944479838))>((-1720352917, NULL, '8DcU', x'3c1b', x'')))) AND (0.5631512040903759 COLLATE RTRIM))) GROUP BY ((((vt0.c4) IS FALSE))<=(((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(t0.c0)))OR(vt0.c3))));SELECT DISTINCT ((CAST(vt0.c0 AS REAL)) NOT NULL) FROM t0, vt0 WHERE ((((0Xffffffffb0c79a55)) BETWEEN ((((0.3934171465383325)||(x'')))) AND (((((0.9681468037969224, NULL, x'6bec'))>=((x'c81e', NULL, x'ee81'))))))); -- 0ms;
SELECT (- (((((vt0.c3)OR(vt0.c4)))AND(vt0.c4)))) FROM vt0; -- 0ms;
SELECT DISTINCT AVG(((t0.c0) BETWEEN (vt0.c2) AND (vt0.c4))) OVER (), vt0.c4, (((((~ (vt0.c3)))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c4 END)))OR(((((0.5383940389792574)AND(vt0.c3)))OR(vt0.c3)))) FROM vt0 WHERE ((((-1675872547))!=((x'4856'))) COLLATE RTRIM) GROUP BY vt0.c0;SELECT ALL vt0.c1 FROM t0, vt0 WHERE (((((x'1b9f')*('0.606117274968283'))) BETWEEN (x'' COLLATE NOCASE) AND ((('yX') NOTNULL)))); -- 0ms;
SELECT ALL (NOT (CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)), '-636378011', ((TRIM(NULL)) BETWEEN (CAST(vt0.c3 AS BLOB)) AND ((+ ('D2o|')))) FROM t0;SELECT ALL CAST((((vt0.c0, NULL, vt0.c1)) BETWEEN ((vt0.c4, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, 0Xffffffff88ebdad0))) AS INTEGER) FROM vt0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((NULL IN ())) NOT BETWEEN ((~ (vt0.c3))) AND (((vt0.c1) IS FALSE))) FROM t0, vt0 INDEXED BY i52 WHERE ((((((((NULL))>((-7.0991671E7))))AND((('mdp')OR(0.5806690013706303)))))AND(IFNULL(DISTINCT NULL, 0.7164581425813474))));SELECT DISTINCT ((vt0.c0)<<((vt0.c0 IN ()))), CASE WHEN vt0.c4 THEN (vt0.c1 IN ()) ELSE CAST(vt0.c1 AS NUMERIC) END, (NOT (((NULL)OR(NULL)))) FROM t0, vt0 LIMIT -1364520095; -- 0ms;
SELECT DISTINCT (((vt0.c3)) NOT BETWEEN ((UPPER(DISTINCT vt0.c1))) AND ((((vt0.c1)<=(vt0.c3))))), -1542739495 COLLATE NOCASE, CAST(((vt0.c0)*(vt0.c2)) AS BLOB) FROM t0;SELECT DISTINCT ((((- (vt0.c1))))<=(((((vt0.c4)) NOT BETWEEN (('-1010821688')) AND ((t0.c0)))))) FROM vt0;SELECT ALL (NOT (CAST(t0.c0 AS BLOB))) FROM vt0, t0 WHERE (((0.6404428738200348)<>(HEX(0.930896753043711)))); -- 0ms;
SELECT ALL (((((vt0.c4 IN ()))OR(((vt0.c3) IS FALSE))))OR(((vt0.c0)OR(t0.c0)))) FROM vt0, t0; -- 1ms;
SELECT DISTINCT (((((((((vt0.c1 IN ()))AND((((vt0.c0))>((vt0.c2))))))OR('328662604')))AND(((vt0.c3)<>(vt0.c3)))))OR((((vt0.c4))<((t0.c0))))) FROM vt0 WHERE (NULL);SELECT DISTINCT ((vt0.c2 COLLATE BINARY)GLOB(CASE WHEN t0.c0 THEN NULL END)) FROM vt0, t0; -- 0ms;
SELECT ALL ((vt0.c4)>>(0.7585944248604166)) COLLATE BINARY FROM t0, vt0 WHERE (CAST((x'' IN ()) AS BLOB)); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), COUNT(((vt0.c4) NOT BETWEEN (vt0.c3) AND (0.12831557899759738))) OVER ( ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1)-(vt0.c0)), 0.08417011643511985)), COUNT(((t0.c0)OR(vt0.c1))) FROM t0 WHERE (CASE (0.6358855678870647 IN (1134303422, x''))  WHEN ((0x44033d57) BETWEEN (x'135d') AND (NULL)) THEN ((NULL) NOTNULL) WHEN CAST(0xffffffffcb8d3f0b AS REAL) THEN ((-1.976649672E9)<=('~_')) WHEN (NULL IN ('-2038008150')) THEN ((x'')OR(NULL)) WHEN TYPEOF(DISTINCT 0Xffffffffd7ec6635) THEN (x'1760bf5e' IN (0.3961958265680765)) WHEN LTRIM(NULL, NULL) THEN ((NULL)&(0.9326766579354597)) ELSE ((0X45607652) ISNULL) END);SELECT ALL ((((~ (vt0.c2))))=((vt0.c3))), (~ (CASE WHEN vt0.c3 THEN vt0.c3 END)), UPPER(((vt0.c4) IS FALSE)) FROM vt0 WHERE (CAST((0.40226489297193 IN ()) AS REAL)); -- 0ms;
SELECT ALL LIKELIHOOD(((((((((vt0.c0)AND(vt0.c0)))AND('-672373195')))AND(vt0.c1)))AND(t0.c0)), 0.4346019929492696), COUNT('-522609454') OVER (), (((((vt0.c3))>=((vt0.c4))))<>(GROUP_CONCAT(vt0.c4))) FROM t0 LIMIT -672373195;SELECT DISTINCT ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2))) BETWEEN (((vt0.c0) IS TRUE)) AND ((((vt0.c1, vt0.c3, vt0.c0, vt0.c2, vt0.c3, t0.c0, vt0.c0))>((vt0.c0, t0.c0, vt0.c3, vt0.c2, t0.c0, vt0.c1, vt0.c2))))) FROM t0, vt0 WHERE (((('')) BETWEEN ((((((911197836)AND('')))AND(NULL)))) AND (((+ (NULL)))))); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c3)>=(vt0.c0)) THEN ((vt0.c3)%(vt0.c0)) ELSE NULL END FROM vt0, t0 WHERE ((((CAST(x'' AS TEXT)))<=((LAST_INSERT_ROWID())))); -- 1ms;
SELECT DISTINCT CASE WHEN ((((vt0.c3)AND(vt0.c0)))OR(vt0.c3)) THEN NULLIF(vt0.c1, vt0.c1) WHEN (((x'b83d'))>((vt0.c1))) THEN ((vt0.c0)<>(t0.c0)) WHEN ((vt0.c2)=(vt0.c2)) THEN NULL ELSE ((vt0.c3)&(vt0.c2)) END FROM vt0, t0 WHERE (CAST((x'' IN ()) AS BLOB)); -- 0ms;
SELECT CAST(vt0.c0 AS INTEGER), 0X3f205534 COLLATE NOCASE, (+ (t0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((((NULL)OR('1016083385')))AND(0X7eccff56)) IN ()));SELECT ALL ((IFNULL(DISTINCT vt0.c4, vt0.c2)) NOTNULL), (NOT (((vt0.c2)>>(vt0.c1)))), (+ (GROUP_CONCAT(t0.c0))) FROM t0 GROUP BY (+ (CAST(vt0.c4 AS TEXT)));SELECT ((((vt0.c4)AND(vt0.c0)))AND(0.28052090493006143)) COLLATE BINARY FROM t0, vt0 WHERE (TYPEOF(((NULL)<=('-867938465')))); -- 0ms;
SELECT '1486068901', ((((t0.c0) BETWEEN (x'') AND (vt0.c1)))AND((+ (t0.c0)))), SUM('1543209631') OVER ( PARTITION BY (((vt0.c1)LIKE(vt0.c4)) IN (0.3760722747857487)), vt0.c0) FROM t0, vt0; -- 0ms;
SELECT STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.18611305883650275)), ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)), vt0.c1) FROM t0, vt0 WHERE (CASE (x'' IN ())  WHEN '-1364520095' THEN LOWER(DISTINCT 0Xffffffffd3c77df3) END) GROUP BY (((vt0.c2)) NOT BETWEEN ((((vt0.c0) IS TRUE))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c3 END))) HAVING (((vt0.c3 IN ())) NOTNULL); -- 0ms;
SELECT (((t0.c0)) BETWEEN ((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c4 THEN t0.c0 WHEN vt0.c3 THEN vt0.c2 END)) AND ((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c3)))OR(vt0.c1)))AND(t0.c0))))), LAST_VALUE((((vt0.c1 IN ()))>(CASE vt0.c4  WHEN vt0.c1 THEN vt0.c1 END))) OVER ( ORDER BY ((t0.c0 COLLATE NOCASE) ISNULL)  NULLS LAST GROUPS  CURRENT ROW), ((vt0.c4 COLLATE NOCASE) NOT BETWEEN (vt0.c4) AND (vt0.c4)), ((t0.c0) BETWEEN (vt0.c2) AND (vt0.c4)) COLLATE NOCASE, (SQLITE_COMPILEOPTION_GET(vt0.c4) IN ()) FROM t0, vt0 WHERE (((NULL COLLATE RTRIM)<(((((((((NULL)AND(NULL)))AND(0xa68b013)))AND('M鲥qlg{^')))AND(x''))))); -- 0ms;
SELECT ALL CASE WHEN ((t0.c0) IS FALSE) THEN vt0.c0 COLLATE RTRIM WHEN (~ (vt0.c2)) THEN CASE 'Ga|&vᴪ'  WHEN 0.4661512679154596 THEN vt0.c2 END WHEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c4)) THEN 'y1j붵Yd' ELSE TOTAL(vt0.c1) END, CASE WHEN (vt0.c2 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN NULLIF(vt0.c0, vt0.c2) THEN ((vt0.c2)>>(vt0.c4)) WHEN DATETIME(vt0.c2, t0.c0, vt0.c2) THEN ((vt0.c2)<=(t0.c0)) ELSE ((((vt0.c4)AND(-5.22609454E8)))OR(vt0.c3)) END, ((((0.2202434126622177)%(vt0.c4)))<=((+ (vt0.c4)))) FROM t0;SELECT DISTINCT COUNT(((vt0.c0)||('0.2202434126622177'))) FROM vt0 WHERE (CASE ((NULL) IS FALSE)  WHEN ((NULL)IS NOT('')) THEN ((x'08752a616d43')GLOB(x'')) WHEN CASE WHEN 0x3dbd8cfd46663c6f THEN 8283844 ELSE NULL END THEN UPPER(DISTINCT x'c431') WHEN CAST(0.038177109478701565 AS REAL) THEN ((x'') IS TRUE) END); -- 0ms;
SELECT ALL (((((t0.c0))==((vt0.c4)))) NOT NULL) FROM vt0, t0 WHERE (((((0.3650810741384872) IS FALSE))GLOB(CASE WHEN '0.551259090598415' THEN '-1193231777' END))); -- 0ms;
SELECT ALL NTILE(CAST(UPPER(vt0.c0) AS TEXT)) OVER () FROM t0, vt0; -- 0ms;
SELECT CASE (vt0.c4 IN (vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c4)) THEN MAX(vt0.c0) WHEN t0.c0 THEN vt0.c3 COLLATE BINARY WHEN CASE WHEN vt0.c2 THEN t0.c0 ELSE vt0.c2 END THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c4)<(vt0.c0)) END FROM vt0, t0; -- 1ms;
SELECT DISTINCT vt0.c1 FROM vt0, t0 WHERE ((((('-867938465') IS FALSE))=(CASE WHEN -1.106516979E9 THEN NULL WHEN '1134303422' THEN x'' WHEN x'' THEN 555263563 END))); -- 0ms;
SELECT DISTINCT (((('-70991671') NOTNULL))IS(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END)) FROM vt0;SELECT DISTINCT json_array_length((((vt0.c0, vt0.c1, vt0.c1))<((vt0.c3, vt0.c3, t0.c0))), ((((((((t0.c0)AND(vt0.c3)))AND(t0.c0)))OR(vt0.c2)))OR(vt0.c1))) FROM t0 WHERE (x'');SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE (((CASE WHEN x'' THEN 0x65169b34 WHEN 0.12311059829421889 THEN '' WHEN NULL THEN -8.14766482E8 ELSE '' END)+(((((((((x'6a7fa362')OR('-866150544')))AND(0.8889571367375485)))AND(0.03355564057189664)))OR(NULL))))); -- 0ms;
SELECT DISTINCT CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))  WHEN -1.542739495E9 THEN IFNULL(DISTINCT t0.c0, vt0.c2) WHEN ((vt0.c0)+(t0.c0)) THEN vt0.c4 COLLATE RTRIM WHEN ((t0.c0)!=(vt0.c2)) THEN ((0.5956339949998077)LIKE(vt0.c0)) WHEN ((vt0.c2)<(t0.c0)) THEN (((vt0.c0))<=((vt0.c0))) WHEN ((vt0.c3) ISNULL) THEN ((((((((t0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(t0.c0)))OR(vt0.c2)) ELSE ((vt0.c0)OR(t0.c0)) END FROM vt0 LIMIT -26921052;SELECT (((vt0.c4) BETWEEN (vt0.c1) AND (vt0.c4)) IN ()) FROM t0, vt0 WHERE (((CAST('2127363926' AS NUMERIC)) IS FALSE)) GROUP BY ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c2)))*(vt0.c1)); -- 0ms;
SELECT DISTINCT (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) NOT BETWEEN (CASE t0.c0  WHEN vt0.c2 THEN vt0.c4 WHEN vt0.c4 THEN vt0.c1 WHEN 0.930896753043711 THEN vt0.c1 END) AND (((((vt0.c0)OR('915271201')))AND(t0.c0)))) FROM vt0, t0 WHERE (((((-1.602414744E9) BETWEEN (689087347) AND ('≕N')))>=((x'' IN ())))); -- 1ms;
SELECT DISTINCT ((((vt0.c0)>(vt0.c4))) ISNULL) FROM vt0, t0 WHERE ((CASE WHEN '),' THEN 9.24350428E8 ELSE x'' END IN ())) GROUP BY (((((vt0.c0, vt0.c1, vt0.c4)) NOT BETWEEN ((vt0.c2, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, vt0.c2)))) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c3 ELSE t0.c0 END) AND (vt0.c4)) HAVING t0.c0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) FROM vt0, t0 WHERE ((((((x''))>((NULL)))) BETWEEN (((x'')&('303623742'))) AND (IFNULL(0.4284112975585421, 1.134303422E9)))); -- 0ms;
SELECT DISTINCT (((t0.c0)=(vt0.c0)) IN ()) FROM vt0 ORDER BY NULL, (((((vt0.c1) BETWEEN (vt0.c3) AND (vt0.c0)), CAST(vt0.c1 AS INTEGER), '-2038008150'))>(('850216537', CASE vt0.c2  WHEN vt0.c4 THEN vt0.c3 END, HEX(vt0.c3)))); -- 0ms;
SELECT ALL (((CAST(vt0.c1 AS INTEGER)))<(((((vt0.c3))<((t0.c0)))))), RTRIM(((vt0.c2) ISNULL)), ((((0Xffffffffe916f47e) NOTNULL)) ISNULL) FROM vt0, t0; -- 0ms;
SELECT ALL (x'' IN ()), (~ (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 END)), SQLITE_COMPILEOPTION_USED(((vt0.c3)AND(t0.c0))), (((~ (vt0.c4)))>((NOT (vt0.c0)))), GROUP_CONCAT(NULLIF(t0.c0, vt0.c1)) OVER ( ORDER BY ((NULL) BETWEEN ((- (vt0.c1))) AND (UPPER(t0.c0))) ASC), ((((((vt0.c3) ISNULL))AND(vt0.c4)))AND(CASE WHEN vt0.c2 THEN vt0.c1 END)), (~ (0.3613491354124003)) FROM vt0;SELECT ALL (+ ((vt0.c1 IN (vt0.c4)))) FROM t0;SELECT DISTINCT (((vt0.c3, vt0.c3, vt0.c0)) NOT BETWEEN ((vt0.c0, (((vt0.c3))<=((vt0.c2))), CASE vt0.c0  WHEN vt0.c0 THEN '2066656655' ELSE vt0.c0 END)) AND ((CAST(t0.c0 AS TEXT), ((t0.c0)=(t0.c0)), ((vt0.c3) IS FALSE)))) FROM t0, vt0 WHERE (CASE WHEN (NOT (0.18284735964961996)) THEN CASE '2039055158'  WHEN 0.335615610793776 THEN x'd65e' END WHEN '' THEN (NOT (-1.364520095E9)) WHEN (((x''))>((0.4778159115566719))) THEN (0.9492140075463144 IN (0X65ae0e3f)) WHEN ((((NULL)AND('-615108780')))AND(x'')) THEN CASE WHEN '' THEN 0.06865589091336255 END WHEN (~ (0.8929859475713661)) THEN (((('2052352142')AND(x'd391')))OR(0.48441680663244313)) END) LIMIT 1039951097 OFFSET -1602414744; -- 1ms;
SELECT ALL TOTAL_CHANGES() FROM vt0; -- 0ms;
SELECT ALL (((('1134303422') NOTNULL)) BETWEEN ((+ (vt0.c3))) AND (((vt0.c3) BETWEEN (vt0.c2) AND (vt0.c3)))), CAST(t0.c0 AS REAL) COLLATE NOCASE, (((NULL IN ())) NOT BETWEEN (((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c3)))AND(vt0.c4))) AND (GROUP_CONCAT(vt0.c4))) FROM t0 WHERE ((((('1926947175')) BETWEEN ((NULL)) AND ((x'b6493963'))) IN ())) LIMIT -401031504 OFFSET 1416095143;SELECT DISTINCT ((CAST(vt0.c2 AS REAL)) ISNULL) FROM t0, vt0 WHERE (((CAST('-603650270' AS TEXT))IS NOT(('' IN ())))); -- 0ms;
SELECT (((+ (vt0.c1)))>(((((t0.c0)AND(vt0.c0)))AND(t0.c0)))), t0.c0, LEAD(((t0.c0) IS FALSE) COLLATE RTRIM, ((((t0.c0)) BETWEEN ((0X1ea57316)) AND ((t0.c0))) IN ()), (t0.c0 IN ((t0.c0 IN (t0.c0, t0.c0)), ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0))))) OVER ( ORDER BY (((+ (vt0.c0)))*(HEX(vt0.c1)))  NULLS LAST) FROM t0 NOT INDEXED;SELECT ALL NTILE((((((vt0.c4)) NOT BETWEEN ((NULL)) AND ((vt0.c3))))LIKE((((vt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c4)))))) OVER () FROM vt0, t0; -- 0ms;
SELECT ALL MIN(ABS(x'')), MAX(vt0.c0, vt0.c1) COLLATE RTRIM, ((((((((((((vt0.c2)AND(vt0.c4)))AND(vt0.c2)))OR(vt0.c4)))AND(t0.c0)))AND(vt0.c4 COLLATE BINARY)))OR(((t0.c0)IS(vt0.c2)))) FROM vt0, t0 WHERE (UNLIKELY('-1720352917') COLLATE RTRIM); -- 0ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))) BETWEEN (((((vt0.c3)OR(vt0.c4)))AND(vt0.c3))) AND (((vt0.c4) NOTNULL))) FROM vt0 WHERE (((((0.4874339256604523) BETWEEN (-1605302418) AND (NULL)))&((((('E昵')OR(0.6176878879222921)))AND(''))))) GROUP BY ((CASE WHEN t0.c0 THEN vt0.c3 WHEN vt0.c4 THEN t0.c0 WHEN vt0.c3 THEN vt0.c1 ELSE vt0.c0 END)LIKE((('),') ISNULL)));SELECT DISTINCT ((((((((((((CASE WHEN vt0.c2 THEN vt0.c3 ELSE vt0.c0 END)AND((~ (vt0.c4)))))AND(((((((((vt0.c1)AND(vt0.c3)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c4)))))OR(((t0.c0)<(vt0.c2)))))AND(((vt0.c3) BETWEEN (t0.c0) AND (0.13861984723861742)))))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(CASE WHEN t0.c0 THEN vt0.c1 END)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((((((((CAST(vt0.c4 AS INTEGER))OR(CAST(vt0.c0 AS TEXT))))AND(((x'58b3') ISNULL))))OR((((vt0.c0))<((vt0.c1))))))AND(CAST(vt0.c4 AS NUMERIC))) FROM vt0 WHERE (CASE ((0.5564841318834219) NOTNULL)  WHEN ((x'')<<(NULL)) THEN (('0.48441680663244313') NOT BETWEEN (0Xfffffffff21a7898) AND (0.6845762531813945)) END); -- 0ms;
SELECT DISTINCT ((vt0.c2)IS NOT(vt0.c3)) COLLATE RTRIM, ((((DATE(vt0.c3, vt0.c4, x'', vt0.c0, vt0.c3))OR(SUM(t0.c0))))OR(x'bf7d')), CASE CAST(vt0.c4 AS INTEGER)  WHEN (~ (0.551259090598415)) THEN ((t0.c0) NOT BETWEEN (vt0.c3) AND (vt0.c3)) ELSE CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END END, (((NOT (vt0.c2))) BETWEEN (CASE WHEN t0.c0 THEN vt0.c0 WHEN x'edf1' THEN vt0.c0 WHEN 1757408822 THEN vt0.c1 END) AND ((NOT (vt0.c1)))), AVG(((vt0.c0) NOTNULL)) OVER () FROM t0;SELECT ALL ((NULL) IS TRUE), ((((((((((vt0.c2) BETWEEN (vt0.c3) AND (vt0.c0)))OR(CAST(vt0.c0 AS REAL))))OR((((vt0.c4))<((t0.c0))))))AND(((vt0.c1)/(vt0.c2)))))OR(CASE WHEN vt0.c0 THEN t0.c0 WHEN '-282837969' THEN vt0.c2 WHEN 'IK>8yc' THEN vt0.c2 END)), ((t0.c0 COLLATE RTRIM)&(((((vt0.c1)OR(vt0.c2)))OR(vt0.c4)))) FROM vt0 WHERE (TRIM(TIME(1.134303422E9, x'', '<6[]'))) GROUP BY CAST(((vt0.c4) NOT NULL) AS BLOB), (((vt0.c3)) NOT BETWEEN ((vt0.c2 COLLATE BINARY)) AND (((((x'0569')) NOT BETWEEN ((vt0.c3)) AND (('Tᒢ')))))), x'', vt0.c4, CASE WHEN CASE vt0.c2  WHEN '2066656655' THEN t0.c0 END THEN vt0.c1 ELSE (vt0.c0 IN (t0.c0, vt0.c1)) END ORDER BY vt0.c4  NULLS LAST;SELECT ALL ((((vt0.c0))<>((vt0.c4))) IN ()), (~ (((((vt0.c1)AND(vt0.c4)))AND(vt0.c3)))), (load_extension(t0.c0, vt0.c2) IN ((+ ('-1012101039')))) FROM vt0, t0;SELECT ((((((vt0.c3)<=(t0.c0)))OR(((t0.c0) IS FALSE))))AND(((((vt0.c1)AND(x'ebea')))OR(vt0.c3)))), (((vt0.c1) NOTNULL) IN ((t0.c0 IN ()), (vt0.c0 IN ()))), CASE WHEN ((2066656655)<=(vt0.c1)) THEN ((vt0.c1)|(vt0.c2)) END FROM t0, vt0 WHERE (CAST(CAST(']bE\ob眩T8' AS BLOB) AS REAL)) LIMIT -93741601 OFFSET -1273610925; -- 0ms;
SELECT DISTINCT CAST(json_quote(vt0.c1) AS REAL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT vt0.c4, load_extension((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((t0.c0)<(-273859306))), ((vt0.c1) ISNULL) FROM vt0;SELECT DISTINCT CAST(((((vt0.c3)OR(vt0.c1)))OR(vt0.c3)) AS REAL) FROM t0;SELECT (((vt0.c4 IN (0.9625648884714796)))<=(CAST(vt0.c1 AS TEXT))) FROM t0, vt0 WHERE ((((TOTAL_CHANGES()))>((0.1514417784994314)))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) ISNULL)) NOT NULL) FROM vt0, t0 WHERE (((((((((((((((0.5828796742074686) ISNULL))OR(((0x6ef2a607) IS FALSE))))AND((('L\') IS FALSE))))OR(((x'') NOT NULL))))AND(CAST('-1385498824' AS TEXT))))AND(CASE x'742897b6'  WHEN NULL THEN '0.48441680663244313' WHEN 948090917 THEN -1106516979 WHEN -8.67938465E8 THEN -1364520095 ELSE NULL END)))OR(CAST('-1526474541' AS NUMERIC)))); -- 0ms;
SELECT 'Jo' FROM t0, vt0 WHERE ((((((x'8376')OR(-1683987136)))AND('-1273610925')) IN ())); -- 1ms;
SELECT DISTINCT (+ (CAST(vt0.c2 AS TEXT))), ((((x'40a9', vt0.c2, t0.c0)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c3)) AND ((vt0.c3, t0.c0, t0.c0))) IN (SUM(vt0.c0))), json_array_length(CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c3 END) FROM vt0 LIMIT -76040775;SELECT ALL x'' FROM vt0, t0; -- 0ms;
SELECT ALL (((((vt0.c2))<((vt0.c0))))%(((vt0.c1) NOT NULL))) FROM vt0 UNION ALL SELECT ALL (CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 ELSE NULL END IN ()) FROM vt0, t0 WHERE (CASE 1016083385  WHEN '-457586446' THEN 0.742320499983228 END COLLATE BINARY); -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c2))) FROM t0, vt0 WHERE (((NULL) NOT BETWEEN (('0.04820043269863472' IN ())) AND (CASE NULL  WHEN NULL THEN 0.6229639706686011 WHEN NULL THEN '0.5828796742074686' WHEN 'ccSg' THEN 0.5013164318622846 END))) ORDER BY CAST((((t0.c0))<>((vt0.c2))) AS NUMERIC)  NULLS FIRST, CASE (((vt0.c4, vt0.c2, t0.c0))<((vt0.c1, vt0.c4, t0.c0)))  WHEN TRIM(vt0.c3, t0.c0) THEN 0.010168995057626695 ELSE NULL END  NULLS FIRST; -- 0ms;
SELECT ALL TOTAL(NULLIF(0.8770063473121201, NULL)) OVER () FROM t0 WHERE (CASE ((NULL) NOT BETWEEN (x'') AND (0xffffffffe9926858))  WHEN (('767286391') BETWEEN (NULL) AND (x'')) THEN CAST('1229008915' AS REAL) ELSE 0.12337218528168192 END); -- 0ms;
SELECT LAST_VALUE(CAST(((vt0.c2) NOT BETWEEN (vt0.c4) AND (vt0.c2)) AS TEXT)) OVER () FROM vt0 WHERE (((((0.7894063896036195) IS FALSE)) BETWEEN (LOWER(DISTINCT x'')) AND ((('0.5828796742074686')<=(0x7622a429))))); -- 0ms;
SELECT ALL (((vt0.c1))<>((vt0.c4))) COLLATE NOCASE FROM vt0 WHERE ('p<'); -- 0ms;
SELECT ALL ((((MIN(vt0.c1))OR(MIN(t0.c0))))AND(CAST(vt0.c2 AS NUMERIC))) FROM vt0, t0 WHERE (CASE (+ (0.9815671862993539))  WHEN LIKE(0.05381117711703187, x'') THEN (~ (NULL)) WHEN (('hY?(') IS TRUE) THEN CASE NULL  WHEN x'' THEN '1163949650' END WHEN ((NULL)>=(1.039951097E9)) THEN (NOT ('1347441415')) ELSE TYPEOF(x'') END); -- 0ms;
SELECT ALL CAST(((((vt0.c0)OR(0.9657533948520538)))AND(vt0.c3)) AS BLOB), (NOT (CASE WHEN vt0.c1 THEN vt0.c4 END)), MAX((+ ('0.40226489297193'))) FROM vt0 ORDER BY (((((((vt0.c0, x'', t0.c0, vt0.c3, vt0.c4)) NOT BETWEEN ((t0.c0, vt0.c4, vt0.c4, t0.c0, t0.c0)) AND ((vt0.c3, t0.c0, t0.c0, vt0.c4, vt0.c0))))OR(CAST(vt0.c1 AS NUMERIC))))AND((((vt0.c3))<((vt0.c2))))) DESC;SELECT ((('-210885134'))>((0.994921155372062))), CASE t0.c0  WHEN vt0.c0 THEN vt0.c4 END COLLATE RTRIM, ((HEX(DISTINCT vt0.c3))-((t0.c0 IN (vt0.c2, vt0.c3)))), ((((((((t0.c0)AND(((2.066656655E9) IS FALSE))))AND(RTRIM(vt0.c3))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c4 WHEN t0.c0 THEN vt0.c3 WHEN vt0.c1 THEN '-1056251745' WHEN NULL THEN vt0.c3 ELSE vt0.c2 END)))AND(vt0.c0)), ((CAST(vt0.c2 AS NUMERIC)) IS FALSE) FROM t0 WHERE ((((('0.3613491354124003')AND(x'079c'))) ISNULL)) GROUP BY vt0.c3;SELECT (NULL IN (vt0.c0)) COLLATE NOCASE, (CASE WHEN t0.c0 THEN vt0.c2 ELSE 0.3505072228742998 END IN ((((x'd63c4ce7', t0.c0, vt0.c3))==((vt0.c0, vt0.c4, vt0.c3))))), COUNT(*) OVER () FROM vt0 WHERE (((((((1.818058927E9)AND('W_')))OR(x''))) BETWEEN ((x'' IN ())) AND (((0.1467687175257102) NOT NULL))));SELECT DISTINCT CASE WHEN x'' THEN ((t0.c0)*(vt0.c0)) WHEN ((((((((((((vt0.c3)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c4)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c2)) THEN (((vt0.c4, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c3, vt0.c3, vt0.c4))) WHEN NULLIF(t0.c0, vt0.c2) THEN MAX(x'1266') WHEN ((((((((vt0.c3)OR(vt0.c4)))OR(t0.c0)))AND('-636378011')))OR(vt0.c0)) THEN CAST(vt0.c1 AS BLOB) WHEN CAST(vt0.c3 AS INTEGER) THEN ((vt0.c0) NOT BETWEEN ('-384371586') AND (t0.c0)) END FROM t0 GROUP BY (CASE WHEN vt0.c3 THEN vt0.c0 END IN ()) HAVING CASE WHEN vt0.c3 THEN vt0.c3 END COLLATE NOCASE;SELECT DISTINCT ((vt0.c0)%(vt0.c3)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c4 THEN vt0.c1 WHEN t0.c0 THEN vt0.c4 ELSE vt0.c3 END) NOTNULL), (((vt0.c2 IN ()))>>((- (vt0.c3)))), ((CASE WHEN vt0.c3 THEN t0.c0 WHEN vt0.c4 THEN vt0.c0 WHEN vt0.c4 THEN vt0.c4 ELSE vt0.c4 END)&((- (vt0.c2)))) FROM vt0 NOT INDEXED;SELECT ALL vt0.c4 COLLATE BINARY COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL (~ ('')) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c4 FROM vt0 WHERE (((x'2a27') NOT BETWEEN (((x'')||(0.5785964636414874))) AND (CAST(329409832 AS TEXT)))); -- 0ms;
SELECT ALL AVG(((vt0.c3) IS TRUE)) OVER (), (((vt0.c0, CAST(vt0.c4 AS REAL), ((vt0.c4) IS FALSE)))<=((((((vt0.c1)AND(vt0.c3)))AND(vt0.c4)), CAST(vt0.c4 AS NUMERIC), (vt0.c2 IN (vt0.c2, vt0.c0))))), vt0.c3 FROM vt0 LEFT OUTER JOIN t0 ON ((((vt0.c0)>>(t0.c0))) IS TRUE) WHERE (((((((((((x'9d9f') IS TRUE))OR(((0.9509555195002) IS TRUE))))OR(((x'a58e') BETWEEN (NULL) AND ('')))))OR((((NULL))<=((0.09663214797780195))))))OR((NOT (x'd23e'))))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (0.5564841318834219)))AND(CAST(vt0.c3 AS BLOB))))OR(((vt0.c4)<(vt0.c3))))  NULLS FIRST; -- 0ms;
SELECT ALL (~ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) FROM t0;SELECT ALL COUNT(*) FROM vt0; -- 0ms;
SELECT ALL (CAST(vt0.c3 AS BLOB) IN ()) FROM t0, vt0 WHERE (x''); -- 0ms;
SELECT ALL (~ (((t0.c0) ISNULL))) FROM vt0 WHERE (CAST((- (NULL)) AS REAL));SELECT ALL ((t0.c0 IN (vt0.c1)) IN ()), vt0.c0, LOWER(LOWER(DISTINCT vt0.c4)) FROM vt0; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c4)) BETWEEN (((vt0.c0)&(vt0.c3))) AND (((vt0.c0)<<(t0.c0)))) FROM vt0;SELECT ((TYPEOF(vt0.c0))/(((vt0.c2)>(t0.c0)))), (((vt0.c4)) NOT BETWEEN (((+ (vt0.c3)))) AND ((((t0.c0) NOTNULL)))), DENSE_RANK() OVER ( PARTITION BY (+ ((vt0.c3 IN ()))), ((((vt0.c4) NOTNULL)) IS FALSE)) FROM t0, vt0; -- 0ms;
SELECT ALL ((MIN(vt0.c4)) BETWEEN (MIN(vt0.c0)) AND ((-1988140299 IN ()))) FROM vt0, t0 WHERE ((((x'', 0.846031258465558, NULL)) BETWEEN (('W_', CAST('-2038008150' AS INTEGER), NULL)) AND (((('1416095143') BETWEEN (x'67db') AND ('')), (- (x'')), CAST('' AS BLOB))))) LIMIT -1944479838; -- 0ms;
SELECT ALL (+ (t0.c0)) COLLATE NOCASE, LIKELIHOOD(DISTINCT (((vt0.c1, vt0.c2, t0.c0)) BETWEEN ((t0.c0, 0.08683461599121212, t0.c0)) AND ((vt0.c1, vt0.c0, vt0.c4))), 0.8572154610011944), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) COLLATE BINARY FROM vt0;SELECT DISTINCT json_array((NOT (vt0.c0)), ((vt0.c4) NOT BETWEEN (vt0.c4) AND ('),')), ((vt0.c2)/(0.8770063473121201)), vt0.c4 COLLATE NOCASE) FROM vt0 WHERE ('^%''OMuTv/'); -- 0ms;
SELECT ALL NTH_VALUE((((vt0.c2 IN ()))+(((vt0.c4) NOTNULL))), (+ ((((vt0.c0, vt0.c2, vt0.c1, vt0.c0, vt0.c3)) NOT BETWEEN ((vt0.c4, vt0.c0, t0.c0, t0.c0, t0.c0)) AND ((vt0.c0, vt0.c3, t0.c0, vt0.c0, x'')))))) OVER () FROM t0, vt0 WHERE (0.5784521994985057);SELECT LTRIM(CAST('-869057634' AS REAL), ((vt0.c3) NOT NULL)), CASE WHEN 0.9318745371799696 THEN t0.c0 END, '' FROM vt0, t0 WHERE (((((0.5806690013706303) BETWEEN (NULL) AND (NULL)))|(((NULL) BETWEEN (0.21665687693119795) AND (x''))))); -- 0ms;
SELECT (((t0.c0 IN ()))>=(((t0.c0) NOT NULL))) FROM vt0 WHERE (CASE WHEN (~ (0.12831557899759738)) THEN NULL END);SELECT ((LIKE(vt0.c2, vt0.c2, '-')) IS TRUE), CAST((vt0.c3 IN ()) AS INTEGER), ((COUNT(vt0.c3)) NOT BETWEEN ((+ (vt0.c4))) AND (1981981737 COLLATE RTRIM)) FROM vt0 WHERE ((((((((((1.315968162E9 IN ()))AND((((-634519942))>((NULL))))))AND(COALESCE(DISTINCT '1557975340', '', 0.6845762531813945, x''))))OR(-1.329096107E9 COLLATE BINARY)))OR(0xffffffffc10ae09f))) GROUP BY ((((vt0.c0)<=(vt0.c0)))||(vt0.c1)), ((((vt0.c0)<=(t0.c0))) BETWEEN (((t0.c0)>(NULL))) AND (CAST(vt0.c2 AS INTEGER))), ((((vt0.c2) NOT NULL)) NOTNULL), 0.4082301872541382, (('3DjR' COLLATE RTRIM) IS FALSE) ORDER BY vt0.c2 ASC  NULLS FIRST LIMIT 329409832 OFFSET 1861395975;SELECT ALL ((vt0.c3 COLLATE BINARY)OR(COUNT(t0.c0))) FROM t0, vt0 WHERE ((((((((((((1821489957)AND(x'')))OR('425461818')))AND(NULL)))OR(x'')), (('1742645661')=(NULL)), ((0x7eccff56) IS TRUE)))>((0.12067982196414129 COLLATE RTRIM, MIN('-1602414744', NULL, NULL, x'', NULL, '-KϬ''Xv/#'), ((NULL)/(x'')))))); -- 0ms;
SELECT COUNT(((t0.c0)GLOB(vt0.c1))) OVER () FROM vt0, t0; -- 0ms;
SELECT (((((vt0.c2))<>((vt0.c4))))>>(CASE WHEN vt0.c4 THEN '-867938465' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) FROM t0, vt0; -- 0ms;
SELECT ALL (~ (AVG(vt0.c2))), COUNT(*) OVER (), ((((vt0.c0) NOTNULL))<<(LIKELY(DISTINCT t0.c0))), 0.590847437616828, (((vt0.c0)) NOT BETWEEN ((((t0.c0)>(vt0.c4)))) AND ((((vt0.c1)-(vt0.c4))))) FROM vt0, t0 WHERE ((((-1444821182, x'4863bbc2', 0.6070977695399511)) NOT BETWEEN ((CAST('0.0' AS BLOB), ((1818058927)<(1653664751)), (('-523900708') BETWEEN (x'') AND (NULL)))) AND (('Cr' COLLATE BINARY, (NOT (0.2715589862137938)), (~ (0x364fc68c)))))); -- 0ms;
SELECT ALL CAST(vt0.c2 COLLATE NOCASE AS NUMERIC) FROM vt0, t0 WHERE ((~ ((NULL IN ())))) GROUP BY (((vt0.c4 IN ()))%((NOT (vt0.c0)))), 158584175, x'1b2be1f4' HAVING vt0.c3;SELECT ALL (((vt0.c2, t0.c0, vt0.c3)) NOT BETWEEN (('-744704909', t0.c0 COLLATE RTRIM, ((vt0.c3) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))), (~ (vt0.c4)), CAST(vt0.c0 AS REAL)))) FROM vt0 WHERE (((((((((((((((x'') NOT BETWEEN (0.20051259910851882) AND (NULL)))OR(((NULL)<=('837368170')))))AND(((-6.02803957E8) ISNULL))))AND((((x'6914')) BETWEEN ((0.4450968209607554)) AND ((x''))))))AND(CASE '屛lT'  WHEN NULL THEN NULL END)))OR((((0.4082301872541382))>((111048369))))))AND(((((-1856287843)AND(NULL)))AND('-516343576')))));SELECT ALL COUNT(*) OVER ( ORDER BY vt0.c4 DESC  NULLS LAST, (- (CAST(vt0.c4 AS BLOB))) ASC) FROM vt0; -- 0ms;
SELECT DISTINCT (((t0.c0, vt0.c1, vt0.c3)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, GLOB(vt0.c4, vt0.c4), ((vt0.c4)>>(vt0.c0)))) AND ((vt0.c4, vt0.c3, COALESCE(vt0.c0, vt0.c3, vt0.c0, vt0.c3)))), ((((((vt0.c3)OR(vt0.c1)))OR(vt0.c3))) NOT BETWEEN (COUNT(*)) AND (UNLIKELY(t0.c0))), ((vt0.c2 IN (vt0.c4)) IN (((('0.12311059829421889')) NOT BETWEEN ((vt0.c4)) AND ((vt0.c1))))) FROM vt0, t0 WHERE ((((((((((NOT (0X655d32e2)))AND((NULL IN ('ꍳl⽣Er')))))AND(CAST(0.7205632751187692 AS REAL))))AND(((8283844.0)OR('j\r')))))AND((('')|(0x4f3963f8))))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c3 THEN t0.c0 WHEN vt0.c4 THEN vt0.c2 END IN (TRIM(DISTINCT vt0.c4, vt0.c2))) ASC  NULLS FIRST, ((((vt0.c1 IN ())))>((vt0.c2)))  NULLS FIRST, vt0.c0  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt0.c0)OR(t0.c0)))>>(((vt0.c0)<<(t0.c0)))) FROM t0 WHERE (x'15f3');SELECT ((((vt0.c4)>(vt0.c0))) BETWEEN ((((vt0.c3, vt0.c4, vt0.c4)) NOT BETWEEN ((t0.c0, vt0.c2, vt0.c0)) AND ((vt0.c4, t0.c0, vt0.c4)))) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c4)))) FROM t0, vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c4) AND (vt0.c3)) COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN t0.c0 THEN vt0.c0 END THEN (((('-933433244')OR(vt0.c1)))OR(vt0.c4)) WHEN ((0.5655381029014162)OR(vt0.c2)) THEN AVG(vt0.c2) WHEN ((vt0.c2) IS TRUE) THEN vt0.c4 ELSE ((vt0.c1) ISNULL) END FROM vt0, t0 LIMIT 1861395975; -- 1ms;
SELECT DISTINCT ((TRIM(vt0.c3)) IS TRUE), ((((vt0.c0)<<(vt0.c0)))&(vt0.c3)), (((vt0.c3 COLLATE BINARY, vt0.c4, ((vt0.c0)&(vt0.c1))))<((CASE WHEN t0.c0 THEN vt0.c1 WHEN vt0.c4 THEN vt0.c3 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, LTRIM(vt0.c4, vt0.c4), ((vt0.c4)>('81739594'))))), ((((((((vt0.c2 COLLATE NOCASE)OR((+ (vt0.c4)))))AND(vt0.c4)))AND(vt0.c2)))AND(CAST(vt0.c1 AS INTEGER))), NTILE(((((((t0.c0)AND(t0.c0)))AND(t0.c0))) ISNULL)) OVER () FROM t0 WHERE (((0.9636959102960255)OR(x'')) COLLATE BINARY) GROUP BY ((((((vt0.c0)!=(vt0.c3)))OR(vt0.c4)))OR(((vt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))), (~ (((vt0.c4)<(t0.c0)))), 0.3505072228742998 HAVING CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS REAL);SELECT (('告 ') NOTNULL) FROM vt0, t0; -- 0ms;
SELECT ALL t0.c0, (((((t0.c0)) NOT BETWEEN ((vt0.c4)) AND (('-233146216')))) IS TRUE), (((vt0.c4 IN (vt0.c0))) BETWEEN (DATETIME(t0.c0, vt0.c2, vt0.c1)) AND (((vt0.c2)||(vt0.c1)))) FROM vt0, t0 WHERE (NULL) GROUP BY ((((((vt0.c0)OR(vt0.c4)))AND(vt0.c3)))<(((((vt0.c0)OR(vt0.c3)))AND(vt0.c3)))) HAVING ((CASE WHEN x'b162' THEN vt0.c4 WHEN vt0.c3 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((NULL)%(vt0.c2)))); -- 0ms;
SELECT ALL ((CAST(vt0.c4 AS TEXT))GLOB((+ (vt0.c3)))) FROM vt0 INDEXED BY i52 NATURAL JOIN t0 WHERE ((((((x'')OR(NULL)))AND('T3p6/4Qe')) IN ()));SELECT CHANGES(), TOTAL((((t0.c0, vt0.c3, vt0.c4)) BETWEEN ((vt0.c2, vt0.c1, 'vYY<r')) AND ((vt0.c1, vt0.c3, t0.c0)))) OVER (), ((MIN(vt0.c2)) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (vt0.c2))) AND (t0.c0 COLLATE RTRIM)) FROM vt0, t0 WHERE (TYPEOF((- (x'')))); -- 0ms;
SELECT COUNT((vt0.c2 IN ())) FROM t0, vt0; -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN (((+ (vt0.c2)))) AND (((((t0.c0)) BETWEEN ((vt0.c4)) AND ((vt0.c0)))))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (+ (CAST('}u8AGh' AS BLOB))) FROM t0, vt0 WHERE (CASE WHEN NULL THEN x'' END COLLATE RTRIM) GROUP BY (((vt0.c2)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND (((t0.c0 IN ())))), vt0.c2, vt0.c0 HAVING GROUP_CONCAT(CASE vt0.c3  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c3 THEN vt0.c2 WHEN vt0.c4 THEN vt0.c2 END) COLLATE RTRIM; -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((vt0.c3 IN ()))) AND ((((vt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0, t0 WHERE (((((((NULL)OR('l[z!緳!Hr''')))AND(0Xffffffffa572e0d6))) NOT BETWEEN (CASE NULL  WHEN '4448867026347637871' THEN 'MOYN[z#Y' ELSE 'n''d' END) AND (((NULL)<<(NULL))))) GROUP BY HEX(TYPEOF('-1193231777')), (((((((vt0.c3))<=((vt0.c2))))AND(CAST(vt0.c1 AS NUMERIC))))AND((((vt0.c4))!=((vt0.c1))))), ((((vt0.c2)!=(vt0.c1))) IS TRUE) HAVING SUM((- (vt0.c1)) COLLATE BINARY) ORDER BY ((NOT (vt0.c1)) IN ()) ASC; -- 0ms;
SELECT vt0.c4 COLLATE RTRIM, ((((((((((vt0.c2) ISNULL))AND(5.55263563E8 COLLATE NOCASE)))AND(CAST(vt0.c4 AS BLOB))))OR(((vt0.c4)AND(t0.c0)))))OR(NULL)), LOWER(DISTINCT 0.037995934462631054) FROM t0 WHERE ('ccSg');SELECT NULLIF(DISTINCT t0.c0, -267250630), CAST(((vt0.c4)<(t0.c0)) AS INTEGER), COUNT((t0.c0 IN ())), ((MAX(vt0.c4)) BETWEEN ((+ (vt0.c4))) AND (((vt0.c3) BETWEEN (vt0.c4) AND (vt0.c3)))), x'' FROM t0 CROSS JOIN vt0 ON (((t0.c0, vt0.c1, vt0.c0))<=((vt0.c4, x'', t0.c0))) COLLATE BINARY ORDER BY (((~ (vt0.c4)))-(NULL)) LIMIT 820800909; -- 1ms;
SELECT ((vt0.c3 COLLATE BINARY)IS NOT(((vt0.c1) IS TRUE))) FROM vt0, t0; -- 0ms;
SELECT SUM((~ (vt0.c2)) COLLATE BINARY) FROM t0 WHERE (((0.6201029889754123 COLLATE BINARY) BETWEEN (LIKELY(0.21230461512589038)) AND ((('') NOT BETWEEN (0.9532223774800738) AND ('㥪wQ')))));SELECT DISTINCT (~ ('767286391')), ((vt0.c4 IN ()) IN (((NULL) IS TRUE))), (((- (t0.c0))) BETWEEN ((((vt0.c2))<=((vt0.c2)))) AND (((((vt0.c1)OR(0.5555551056698164)))OR(t0.c0)))) FROM t0 WHERE (CASE WHEN x'' THEN '1670113688' END COLLATE BINARY);SELECT DISTINCT ((AVG('?}3Je'))=(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c4 END)), ((((vt0.c0)>=(vt0.c4))) IS FALSE), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c3)) COLLATE BINARY, CASE CAST(vt0.c3 AS REAL)  WHEN CASE WHEN 1e500 THEN x'' END THEN SUBSTR(vt0.c3, 0Xffffffffc4c31189) ELSE (((vt0.c0))>((vt0.c1))) END, COUNT((('-299652056') IS FALSE)) FROM t0, vt0 ORDER BY CASE WHEN vt0.c2 THEN vt0.c3 END COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c2)&(vt0.c4))) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT UNLIKELY(DISTINCT ((vt0.c3) IS TRUE)), ((CAST(vt0.c3 AS REAL))GLOB((vt0.c3 IN ()))), SQLITE_SOURCE_ID(), (((('-514533067')<=(vt0.c4))) IS TRUE), COUNT(((vt0.c1) NOT BETWEEN (vt0.c4) AND (0.862867981460376))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0))<(((t0.c0 IN ())))) FROM vt0, t0 WHERE (NULLIF('ahk.CC' COLLATE BINARY, ((((((((x'b69f')AND(0X3dc4fe46)))AND('cIvD#')))AND(0.5785964636414874)))AND(x'')))); -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0, t0 WHERE (((CASE WHEN -1605302418 THEN '-2012160898' ELSE x'' END) ISNULL)) LIMIT -1294089849 OFFSET 712842133; -- 0ms;
SELECT DISTINCT LIKELY('1757408822'), ((json_array(vt0.c0, vt0.c0))&((((vt0.c1))>=((0.36704035173093086))))), CAST(vt0.c2 COLLATE NOCASE AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c4) BETWEEN (vt0.c3) AND (vt0.c4))))>=(('>j筷*4]|c\r'))) FROM vt0, t0 LIMIT 8283844 OFFSET 762658770; -- 1ms;
SELECT DISTINCT COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt0, t0; -- 0ms;
SELECT DISTINCT 1.16394965E9, (((CASE WHEN vt0.c3 THEN vt0.c3 WHEN vt0.c0 THEN vt0.c4 WHEN vt0.c4 THEN vt0.c2 ELSE vt0.c4 END, vt0.c1 COLLATE NOCASE, ((t0.c0)|(vt0.c4))))<=(((0.12831557899759738 IN ()), CAST(vt0.c2 AS INTEGER), vt0.c2 COLLATE NOCASE))), CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((']E'))) THEN ((x'') NOT BETWEEN (vt0.c1) AND (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((vt0.c1) NOTNULL) WHEN TRIM(DISTINCT vt0.c2) THEN CAST(vt0.c1 AS TEXT) ELSE (+ (vt0.c0)) END FROM t0 ORDER BY (((((vt0.c4)) BETWEEN ((vt0.c0)) AND ((vt0.c4))))GLOB((((vt0.c0))==((vt0.c3))))) DESC, ((vt0.c1)*(vt0.c4));SELECT DISTINCT ((IFNULL(NULL, x'3494')) BETWEEN ((+ ('X\r'))) AND ((((vt0.c3))>=((vt0.c3))))) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((((((((vt0.c3)AND(vt0.c2)))OR(t0.c0)))OR(vt0.c0)))AND(vt0.c4))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0, t0 ORDER BY ((vt0.c1 COLLATE NOCASE)=((- (vt0.c2)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (- (LIKELY(DISTINCT vt0.c4))), ((vt0.c2 COLLATE NOCASE) ISNULL), ((((vt0.c2 COLLATE BINARY)AND(CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c3 THEN vt0.c3 WHEN vt0.c0 THEN t0.c0 ELSE '141846964' END)))OR((- (vt0.c4)))) FROM t0;SELECT DISTINCT (((vt0.c3, vt0.c0, vt0.c0)) BETWEEN ((vt0.c4, vt0.c2, vt0.c0)) AND ((0x65169b34, t0.c0, vt0.c1))) COLLATE BINARY FROM t0, vt0 WHERE ((((~ (0.5289827922903462)))|((~ (0.6567233811470025))))); -- 0ms;
SELECT ((vt0.c4 COLLATE NOCASE) NOTNULL) FROM vt0, t0 LIMIT 607481498 OFFSET 911197836; -- 0ms;
SELECT x'', (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c4)))) NOT BETWEEN ((+ (t0.c0))) AND ((vt0.c2 IN (vt0.c0)))), vt0.c4 FROM t0;SELECT ALL '-523994923' FROM vt0 INDEXED BY i52, t0;SELECT ALL (- ((NOT (vt0.c3)))) FROM vt0, t0 WHERE ((((0.8770063473121201, (-608811723 IN ()), 0.07348084757632611))<>((((x'') BETWEEN ('\ny') AND ('-408131974')), ((0Xffffffffe916f47e)*(NULL)), TYPEOF(0Xffffffffd836574e))))); -- 0ms;
SELECT (((((((((((vt0.c3)AND(0.18092567435988582)))OR(vt0.c3)))OR(vt0.c2)))OR(vt0.c3))))>=((CAST(t0.c0 AS NUMERIC)))) FROM t0 WHERE (((CAST('-1526474541' AS BLOB)) ISNULL));SELECT DISTINCT ((- (x'')) IN ()) FROM vt0 WHERE (((LOWER(DISTINCT x'')) IS TRUE)); -- 0ms;
SELECT CASE ((vt0.c0)IS(0.9320243964280511))  WHEN CAST(vt0.c0 AS TEXT) THEN SUM(vt0.c1) ELSE COUNT(*) END FROM t0 WHERE (ABS(((NULL)OR(-8.66150544E8))));SELECT ALL ((((- (vt0.c2))))<=((((vt0.c2)>>(vt0.c4))))), NULL, vt0.c4 FROM vt0 WHERE (CASE WHEN ((0.6870541953941249)&('1571274165')) THEN (~ ('1239735055')) WHEN (('-1330170460') NOT BETWEEN (NULL) AND (0.6176878879222921)) THEN ((0xffffffff86d92b19)-(NULL)) WHEN ((-8.14766482E8)AND('0.9690732487186883')) THEN ((x'') NOT NULL) END); -- 0ms;
SELECT vt0.c0 FROM vt0, t0 GROUP BY ((((vt0.c3) IS TRUE))-(CAST(vt0.c1 AS INTEGER))) LIMIT 767286391 OFFSET -76040775; -- 0ms;
SELECT (((t0.c0) NOT NULL) IN ()) FROM vt0 WHERE (CASE WHEN 'BfG58f狙BD' THEN NULL END COLLATE RTRIM); -- 0ms;
SELECT GROUP_CONCAT((((t0.c0)) BETWEEN ((NULL)) AND ((t0.c0)))), UPPER(DISTINCT 0.7957022412928565), vt0.c0 FROM t0, vt0 WHERE ((+ ((0.2715589862137938 IN (x'275f'))))) GROUP BY ((((vt0.c1)>=(0.9181626189345987))) BETWEEN (((vt0.c2)=(vt0.c0))) AND (x'')); -- 0ms;
SELECT DISTINCT (((t0.c0, 0Xffffffffb4163d53, vt0.c3)) BETWEEN ((COUNT(*), (((NULL)) BETWEEN ((vt0.c4)) AND ((t0.c0))), ((((((((vt0.c2)AND(0.3816020832841931)))OR(vt0.c0)))AND(vt0.c3)))AND(NULL)))) AND (('-636378011', (NOT (vt0.c3)), TYPEOF(vt0.c0)))) FROM t0, vt0; -- 0ms;
SELECT (- ((((vt0.c4)) BETWEEN ((t0.c0)) AND ((vt0.c1))))), ((((((((((((vt0.c2)OR(vt0.c3)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c3)))OR(((vt0.c4)<=(vt0.c2)))))OR(((vt0.c2)IS(vt0.c4)))), '0.2715589862137938' FROM t0 WHERE ((CASE WHEN 0.18092567435988582 THEN 2103608902 END IN ()));SELECT DISTINCT CAST(((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c4)))OR(vt0.c0)))AND(vt0.c0)) AS INTEGER) FROM vt0 WHERE (((((((0X6ef2a607)OR('915271201')))AND(NULL)))>=(((('-1976649672', '866110950', -4.57586446E8))<>(('6cM', 0.41324247931512803, x'4fa0')))))) LIMIT -1715162140; -- 0ms;
SELECT DISTINCT (((vt0.c1))>((COUNT(*)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c3 AS INTEGER))||(((vt0.c3)==(vt0.c1)))) FROM vt0, t0 WHERE (((CASE 0.970828696276783  WHEN 0.6991806604982646 THEN x'' ELSE NULL END)=(NULL))); -- 0ms;
SELECT ALL AVG((t0.c0 IN ()) COLLATE RTRIM) OVER ( PARTITION BY ((((((vt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c3)))AND(CASE vt0.c4  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)))AND(CASE WHEN vt0.c3 THEN x'' WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c3 END)), ((CASE vt0.c2  WHEN vt0.c4 THEN 'pU' END) NOTNULL)), CASE WHEN COUNT(vt0.c1) THEN (~ (vt0.c1)) END, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c1 COLLATE BINARY) AND (NULL)) FROM t0;SELECT DISTINCT vt0.c1 FROM t0, vt0; -- 0ms;
SELECT DISTINCT x'', ((((vt0.c4)>>(t0.c0)))GLOB(vt0.c0)), (((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0))))>=((LOWER(vt0.c1)))), COUNT(*) OVER (), ABS(DISTINCT t0.c0) COLLATE NOCASE FROM vt0, t0 WHERE (((json_insert(NULL, 0.3010951662109046, x'6214')) BETWEEN (NULL) AND (((x'a73e') NOT BETWEEN ('Ts') AND ('1141062999'))))); -- 1ms;
SELECT DISTINCT NTILE((((vt0.c0)>>(vt0.c3)) IN ())) OVER () FROM t0, vt0;SELECT ALL SQLITE_COMPILEOPTION_USED(((vt0.c2) ISNULL)), (vt0.c1 IN ()), ((CASE vt0.c3  WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) FROM t0;SELECT IFNULL((vt0.c4 IN ()), ((((vt0.c1)AND(NULL)))OR(vt0.c4))) FROM t0 GROUP BY ((UPPER(DISTINCT vt0.c2)) IS FALSE);SELECT (+ ((t0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c4 IN (x'a0f7', vt0.c1)))&((vt0.c4 IN ()))) FROM t0, vt0 WHERE ((((SQLITE_COMPILEOPTION_GET(' SfGA5y〽/')))>=((json_valid(NULL))))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t0 WHERE (((((1909176551)GLOB(x'a174'))) ISNULL));SELECT CHAR((~ (vt0.c3))), TOTAL(CAST(t0.c0 AS NUMERIC)), ((((((((vt0.c0)AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))))OR(CASE WHEN t0.c0 THEN vt0.c3 END)))OR(((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))OR(vt0.c2)))OR(vt0.c0)))))AND(CAST(vt0.c1 AS INTEGER))) FROM t0, vt0; -- 1ms;
SELECT DISTINCT MAX(CASE WHEN vt0.c2 THEN vt0.c4 ELSE vt0.c0 END), ((((((vt0.c2)OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((vt0.c4) NOT BETWEEN (vt0.c0) AND (vt0.c4))) AND (((t0.c0)-(vt0.c2)))), SUM(((vt0.c1)LIKE(t0.c0))) FROM vt0, t0 WHERE ((((+ ('Ty1')))||(CASE -1374171863  WHEN -9.3741601E7 THEN '948090917' WHEN x'5b4499e4' THEN 0.17535605303664736 WHEN x'6107' THEN 'tg' END))) GROUP BY vt0.c4; -- 0ms;
SELECT ALL (- (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), vt0.c3, ((t0.c0 COLLATE RTRIM) NOTNULL) FROM vt0, t0; -- 0ms;
SELECT ((((vt0.c2) IS FALSE)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (vt0.c1 COLLATE BINARY)) FROM vt0, t0 WHERE (CASE (NULL IN ())  WHEN (((NULL)) NOT BETWEEN (('1818058927')) AND ((x''))) THEN ((((x'')OR(NULL)))AND('N#qqc[a')) WHEN ((((((((((((NULL)AND(x'')))AND(NULL)))AND('')))OR(x'')))AND(0xffffffffc4181a4a)))AND(x'')) THEN CASE WHEN '-93741601' THEN x'1c5f' END WHEN json_array_length(0.6906272362217379) THEN ((('-1683987136', NULL, 0.6358855678870647, 0.23177586137280193, NULL)) BETWEEN ((x'', 1757408822, NULL, x'1c561e54', x'6c07')) AND ((NULL, NULL, NULL, 0.2659341060151129, -1.7536687E8))) END); -- 0ms;
SELECT ALL (((vt0.c3 IN (vt0.c0, vt0.c3))) BETWEEN ((((vt0.c2))<>((t0.c0)))) AND ((vt0.c1 IN ()))), ABS(((((vt0.c2)AND(t0.c0)))AND('CS'))), ((((((((((t0.c0)AND(vt0.c2)))OR(vt0.c3)))OR(vt0.c3)))OR(vt0.c1))) ISNULL) FROM vt0, t0 ORDER BY (CAST(vt0.c2 AS BLOB) IN ()) DESC; -- 1ms;
SELECT ALL (+ ((t0.c0 IN ()))) FROM t0; -- 0ms;
SELECT ALL TOTAL(((vt0.c4)>>(vt0.c2))) FROM vt0, t0 ORDER BY vt0.c4 LIMIT -1193231777; -- 0ms;
SELECT DISTINCT ((((vt0.c3)AND(((vt0.c3) NOTNULL))))OR(x'')) FROM t0 WHERE (x'0e40');SELECT ALL ((vt0.c1 COLLATE NOCASE) ISNULL), (((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, vt0.c3))>=((vt0.c0, 0.2663213332731139, CASE WHEN vt0.c0 THEN vt0.c4 WHEN vt0.c0 THEN vt0.c3 WHEN vt0.c4 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c4 THEN vt0.c3 END))), COUNT(((vt0.c0)=(vt0.c2))) OVER () FROM vt0, t0 WHERE (((((+ ('bt'))))!=((CASE WHEN NULL THEN '0.5655381029014162' WHEN x'' THEN 0.838424640253952 WHEN -1.7976931348623157E308 THEN 0xffffffffc10ae09f END)))) LIMIT 880577670; -- 0ms;
SELECT UPPER((- (vt0.c4))), ((x'6afb') BETWEEN (LIKELY(DISTINCT vt0.c0)) AND (vt0.c1 COLLATE BINARY)), TOTAL(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2))), SQLITE_VERSION(), ((NOT (vt0.c4)) IN ((t0.c0 IN ()), vt0.c1)) FROM t0 ORDER BY ((vt0.c2)>(TRIM(vt0.c0))) DESC  NULLS FIRST;SELECT TYPEOF('-1999088063') COLLATE RTRIM FROM t0, vt0 ORDER BY json_insert(((vt0.c4)>>('268500524')), vt0.c3 COLLATE NOCASE, (((vt0.c1, t0.c0, vt0.c1))==((t0.c0, vt0.c1, vt0.c4))))  NULLS LAST, ((((((t0.c0) NOT BETWEEN ('\nI1N') AND (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))OR('翿+'))  NULLS FIRST;SELECT DISTINCT (NOT (((((vt0.c0)AND(vt0.c1)))OR(vt0.c3)))) FROM vt0; -- 0ms;
SELECT (((((t0.c0))<=((vt0.c1))))>>(LIKE(t0.c0, vt0.c0))) FROM t0 WHERE (((((x'b175') BETWEEN (0Xffffffff99757f6b) AND (x'2ff0'))) NOTNULL));SELECT (((((vt0.c2, vt0.c0, vt0.c3)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c1)) AND ((0.9014221179297236, vt0.c4, vt0.c3)))) IS TRUE), NULLIF(x'da83', vt0.c1), ((((t0.c0)IS NOT(t0.c0))) NOT BETWEEN (vt0.c4) AND (((vt0.c2) BETWEEN (vt0.c3) AND (vt0.c0)))) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (('1717212930') NOTNULL), 0.9547414975513355));SELECT ALL (((- (vt0.c1)))>>(((vt0.c4) NOT BETWEEN (vt0.c1) AND (-1.385498824E9)))), vt0.c3, CAST(vt0.c1 COLLATE NOCASE AS INTEGER), (((((vt0.c0))>=((vt0.c1)))) BETWEEN ((NOT (vt0.c0))) AND ((~ (t0.c0)))), GROUP_CONCAT(((((((((vt0.c4)OR(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0))) OVER () FROM t0 WHERE (((((('0.6176878879222921'))<(('139884475'))))%('-1436005444' COLLATE NOCASE))) LIMIT -1543815778;SELECT ((vt0.c0 COLLATE BINARY) NOTNULL) FROM t0 ORDER BY x'6493' DESC;SELECT ALL ((((vt0.c4 COLLATE RTRIM)OR(vt0.c2)))OR(((NULL)AND(vt0.c4)))) FROM vt0 WHERE (CAST(x'' AS NUMERIC)); -- 1ms;
SELECT DISTINCT UNLIKELY(CAST(vt0.c3 AS REAL)), (~ (MIN(vt0.c2))), vt0.c3 FROM vt0 CROSS JOIN t0 ON ((((((vt0.c4)<=(vt0.c3)))AND(CASE t0.c0  WHEN vt0.c4 THEN vt0.c1 ELSE t0.c0 END)))AND(t0.c0)) WHERE (CASE WHEN (('R>Xꠓu') BETWEEN (NULL) AND (0.8309293447405386)) THEN (((0Xffffffffe435ad98)) NOT BETWEEN ((NULL)) AND ((x'3a6b1d79'))) END); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c4)))AND(vt0.c2)))GLOB(vt0.c1 COLLATE RTRIM)) FROM t0 INDEXED BY i52, vt0;SELECT (NOT (COUNT(*))) FROM vt0 WHERE (((((((0.6346753236505557, x'', 0.14776512788714113)) NOT BETWEEN (('587431849', NULL, 0.010168995057626695)) AND (('283222918', NULL, 1889015550)))))==((((x'c47a84df') IS FALSE))))); -- 0ms;
SELECT DISTINCT TOTAL((vt0.c1 IN ())) FROM t0; -- 0ms;
SELECT (+ ((NOT (vt0.c0)))), LOWER(CASE WHEN vt0.c1 THEN vt0.c0 END), (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c3)))), ((CASE WHEN vt0.c0 THEN x'' WHEN vt0.c2 THEN vt0.c3 WHEN 0.7326238737830848 THEN vt0.c4 ELSE vt0.c4 END)LIKE(((t0.c0)LIKE(vt0.c3)))), CASE WHEN ((vt0.c3)GLOB(0.9337601863052574)) THEN ((vt0.c3) BETWEEN (vt0.c2) AND (vt0.c2)) END FROM t0, vt0 WHERE ((('-1720352917' COLLATE BINARY)LIKE((- ('1467459073'))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN ((((vt0.c4)AND(vt0.c4)))AND(vt0.c0)) WHEN ((vt0.c2) IS FALSE) THEN ((vt0.c3)-(vt0.c1)) WHEN CASE vt0.c2  WHEN t0.c0 THEN vt0.c3 WHEN t0.c0 THEN vt0.c3 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END THEN (- (vt0.c4)) END FROM vt0 WHERE (((((((x'', 0.09864639636985173, '罫ir>t')) NOT BETWEEN ((0.7065798601894026, x'6c28', 0.9551299654912517)) AND ((x'', 0.6201029889754123, x'')))))>=(((NOT (0.8026143185265048))))));SELECT DISTINCT ((((((((((vt0.c1)>(NULL)))OR(((((vt0.c4)AND(t0.c0)))AND(vt0.c2)))))AND(((vt0.c4) BETWEEN (vt0.c4) AND (vt0.c2)))))AND('ihS' COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (vt0.c3) AND (vt0.c3)))), ABS(DISTINCT vt0.c1 COLLATE NOCASE), ((vt0.c3)GLOB(vt0.c4)) FROM t0 WHERE ((((((((((0.1783014044634177)AND(0.6951089710079236)))AND('-634519942')))OR(1.55797534E9)))OR(x'334f')) IN ()));SELECT DISTINCT (0.3680379710804611 IN (((vt0.c0)IS NOT(vt0.c3)))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c4) NOT NULL)) IS TRUE), CASE WHEN CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c3 THEN vt0.c1 ELSE t0.c0 END THEN ((t0.c0) ISNULL) ELSE ((vt0.c3) NOT NULL) END, ((((vt0.c0) IS FALSE))IS NOT(((vt0.c4)>=(vt0.c2)))) FROM vt0;SELECT DISTINCT (((vt0.c4)) BETWEEN ((NULL)) AND ((((vt0.c4)LIKE(vt0.c2))))) FROM vt0; -- 0ms;
SELECT DISTINCT TRIM(vt0.c4 COLLATE NOCASE), x'', UNLIKELY(CASE vt0.c1  WHEN 'Y' THEN vt0.c2 WHEN t0.c0 THEN t0.c0 WHEN vt0.c2 THEN vt0.c3 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c4 THEN '725052825' END) FROM vt0, t0; -- 0ms;
SELECT ALL ((-1.7976931348623157E308)IS((NOT (vt0.c2)))) FROM t0;SELECT SQLITE_SOURCE_ID() FROM t0; -- 1ms;
SELECT ALL GROUP_CONCAT((((((((('-1675872547')OR(t0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2))), PERCENT_RANK() OVER (), CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (0.8454172356879844)) AS TEXT) FROM vt0 ORDER BY ((vt0.c0) BETWEEN (x'') AND (vt0.c1)) COLLATE NOCASE ASC;SELECT DISTINCT (((((((((((vt0.c1)OR(vt0.c3)))OR(vt0.c1)))OR(vt0.c1)))AND(2.127363926E9))))<=((CAST(vt0.c2 AS NUMERIC)))), SUM((~ (vt0.c0))), ((((vt0.c3) NOT BETWEEN (t0.c0) AND (vt0.c4))) NOT NULL) FROM t0;SELECT DISTINCT ((MIN(t0.c0, vt0.c2))=(((vt0.c4)/(vt0.c4)))) FROM vt0, t0 WHERE (((CASE WHEN -615108780 THEN '1163949650' ELSE NULL END) NOT BETWEEN (x'') AND ((689087347 IN ())))) UNION SELECT DISTINCT (+ (((t0.c0)||(vt0.c4)))) FROM t0, vt0 LIMIT 273552929 OFFSET -76040775 EXCEPT SELECT LEAD(((t0.c0) BETWEEN (t0.c0 COLLATE RTRIM) AND (0.4591275547180348)), t0.c0, ((((t0.c0)AND((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))<=((t0.c0, NULL, t0.c0, '948090917', t0.c0))))))AND(((t0.c0)GLOB(t0.c0))))) OVER () FROM t0;SELECT (((((NULL))<=((t0.c0)))) BETWEEN (x'0212') AND (CAST(vt0.c4 AS TEXT))) FROM t0, vt0 WHERE (CASE WHEN (('2124361684')GLOB(0.4778159115566719)) THEN ((NULL) BETWEEN ('') AND (x'')) ELSE NULL END); -- 0ms;
SELECT SUM((vt0.c4 IN (vt0.c0))) OVER () FROM t0;SELECT DISTINCT ((NOT (vt0.c0)) IN ()) FROM t0 WHERE (((((NULL)|('\rrHso-a')))>(((0.9485759758636334)!=(NULL))))); -- 0ms;
SELECT DISTINCT ((((vt0.c2)*(vt0.c1))) ISNULL), ((vt0.c0 COLLATE BINARY) NOT NULL), ((((((vt0.c3)OR(t0.c0)))AND(vt0.c4))) NOT NULL) FROM t0, vt0 WHERE (((IFNULL(DISTINCT '-1683273278', 0.13861984723861742))<<(CAST('1163949650' AS INTEGER)))); -- 0ms;
SELECT CAST(vt0.c3 COLLATE NOCASE AS NUMERIC) FROM vt0 WHERE ((LOWER(DISTINCT NULL) IN ())); -- 0ms;
SELECT ALL ((CAST(vt0.c2 AS TEXT)) IS TRUE) FROM t0 ORDER BY ((((vt0.c4) NOT NULL)) ISNULL) DESC, ((((vt0.c2 IN (vt0.c4))))<((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))));SELECT DISTINCT ((CASE vt0.c4  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END)>=(((((((((vt0.c3)AND(t0.c0)))AND(vt0.c0)))OR(vt0.c4)))OR(vt0.c2)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT AVG(((vt0.c4) BETWEEN (vt0.c2) AND (vt0.c1))) OVER () FROM t0 WHERE ((~ ('' COLLATE RTRIM))) LIMIT 850216537 OFFSET 328662604;SELECT DISTINCT x'1c1d' FROM vt0; -- 0ms;
SELECT ((((vt0.c1)AND(vt0.c0))) ISNULL), MIN(((x'') NOT BETWEEN (vt0.c3) AND (t0.c0))), (- (t0.c0 COLLATE NOCASE)) FROM vt0, t0 WHERE (COALESCE(((NULL) IS TRUE), 0x56cf032c)); -- 0ms;
SELECT ALL (((vt0.c2 IN ()))IS(CAST(vt0.c2 AS BLOB))), AVG(((vt0.c4)GLOB(vt0.c4))), CAST(CAST(x'' AS TEXT) AS TEXT) FROM t0, vt0; -- 4ms;
SELECT DISTINCT ((TRIM(DISTINCT vt0.c2, 561971273))OR(LOWER(vt0.c1))) FROM t0 WHERE (((((x'4b21') IS TRUE))<((('E昵')!=(x'')))));SELECT ALL COUNT(*) FROM t0; -- 0ms;
SELECT ALL CASE WHEN -391282261 THEN LTRIM(vt0.c1) ELSE ABS(vt0.c1) END, (vt0.c2 IN (((((vt0.c2)AND(vt0.c3)))OR(vt0.c1)), (((vt0.c1, vt0.c2, vt0.c1))>((vt0.c3, vt0.c2, vt0.c4))), (vt0.c4 IN ()))), ((1.757408822E9) ISNULL) FROM t0;SELECT DISTINCT 0.31503401025159683 FROM vt0 NOT INDEXED, t0 WHERE ((((((((((('-1977070845') IS TRUE))AND((~ ('-195600457')))))AND('-1944479838' COLLATE NOCASE)))OR((('	D|&w')+(0X371877dc)))))AND('R>Xꠓu'))) GROUP BY (NOT (((vt0.c0)GLOB(t0.c0)))), ((((vt0.c1) IS TRUE))<((- (vt0.c1)))), ((((vt0.c0)>=(-1191555386)))/(vt0.c1)); -- 0ms;
SELECT CAST(((((vt0.c4)OR(t0.c0)))OR(vt0.c3)) AS INTEGER), ((LIKELIHOOD(vt0.c0, 0.05556021569076486))OR(CAST(t0.c0 AS NUMERIC))), ((((t0.c0) IS TRUE))>((((vt0.c4))>((t0.c0))))) FROM vt0 WHERE (CASE WHEN ((NULL) BETWEEN (5.27791913E8) AND ('1926947175')) THEN ((0.034826579287466464) NOT BETWEEN (x'') AND (0X7f1fbe87)) WHEN CAST(0.7390347532760093 AS REAL) THEN (('35480624')AND(x'9f81')) WHEN LOWER(NULL) THEN ((NULL)&(1448903134)) END);SELECT DISTINCT vt0.c2, COUNT(((-1.997808944E9)LIKE(vt0.c0))) OVER (), CAST(LOWER(DISTINCT vt0.c4) AS REAL) FROM t0, vt0 WHERE (ABS(DISTINCT STRFTIME('964957567', x'aaab', 0.3949569305278323))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(SUM(vt0.c0)) FROM vt0, t0 WHERE (((CAST(NULL AS REAL))OR(x'e874' COLLATE RTRIM))) GROUP BY ((((((((((vt0.c2)*(0.9681468037969224)))AND(CASE WHEN vt0.c0 THEN t0.c0 END)))OR(CASE vt0.c4  WHEN t0.c0 THEN vt0.c3 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c3 THEN t0.c0 END)))OR((t0.c0 IN (vt0.c3)))))AND(TIME(vt0.c1, vt0.c1, vt0.c2, vt0.c4, vt0.c4))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c3)))LIKE(CASE vt0.c2  WHEN vt0.c4 THEN vt0.c3 END));SELECT DISTINCT '-1330170460' FROM vt0, t0 LIMIT -1 OFFSET 1776613964; -- 0ms;
SELECT ((((((((CASE WHEN vt0.c3 THEN vt0.c3 WHEN vt0.c0 THEN vt0.c3 WHEN t0.c0 THEN vt0.c1 END)OR(((vt0.c0)AND(vt0.c2)))))OR(((('oR{y89ꆃWt', -8.67938465E8, vt0.c0))>=((vt0.c3, vt0.c1, x''))))))AND(((vt0.c3) NOT NULL))))OR(((((vt0.c0)AND(vt0.c3)))OR(vt0.c4)))) FROM t0 GROUP BY (((NOT (vt0.c2)))>>(HEX(vt0.c4))) HAVING NULL;SELECT ALL (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c4))))AND(CASE WHEN vt0.c2 THEN vt0.c2 ELSE t0.c0 END)))AND(((vt0.c3)LIKE(vt0.c3)))), (((((((vt0.c3)) BETWEEN ((vt0.c1)) AND (('1025238243'))))AND(vt0.c4)))OR(vt0.c1)), ((((vt0.c4)AND(CAST(vt0.c3 AS NUMERIC))))AND((vt0.c2 IN ()))), ((x'')|(t0.c0)), CASE WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c0) IS TRUE) WHEN NULL THEN (~ (x'')) WHEN (vt0.c0 IN (vt0.c0, vt0.c1)) THEN ((vt0.c2)&(vt0.c2)) ELSE (((vt0.c1))<((vt0.c4))) END FROM t0 WHERE (HEX('-1535121975'));SELECT DISTINCT ((NULL COLLATE RTRIM)IS('-1273610925' COLLATE NOCASE)), COUNT(vt0.c3) COLLATE BINARY COLLATE RTRIM, SUM(CAST(vt0.c2 AS REAL)) OVER ( PARTITION BY (((0.6907719530062792, vt0.c1, vt0.c3)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((0.8625681099100617, vt0.c4, vt0.c3))) COLLATE NOCASE COLLATE BINARY, CAST(vt0.c4 AS TEXT) COLLATE NOCASE), CAST(((vt0.c0)>>(vt0.c0)) AS INTEGER), (((((vt0.c0)OR(vt0.c4)))AND('WVYND+鸂}')) IN (x'')) FROM vt0 RIGHT OUTER JOIN t0 ON CAST(NULL AS TEXT) WHERE (((CAST(1.926947175E9 AS NUMERIC)) NOT BETWEEN ((((0.31823421412569797))=((NULL)))) AND ((x'' IN ())))); -- 0ms;
SELECT ((x'24fa') IS FALSE), CASE vt0.c3  WHEN vt0.c1 THEN (+ (vt0.c2)) ELSE MIN('CU-雰') END, TOTAL(((((t0.c0)OR(vt0.c3)))OR(vt0.c1))) COLLATE NOCASE FROM vt0, t0; -- 0ms;
SELECT ALL ((((((t0.c0)OR(vt0.c1)))AND(vt0.c4))) IS TRUE) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c2)) COLLATE RTRIM FROM vt0, t0 WHERE (((((JULIANDAY(1.08427591E8, x'11b7', NULL, 0.6390676859464317, NULL))AND(((0xffffffffe36dc152) BETWEEN (0.7129766857909043) AND (x'b2ba')))))AND(CASE 0.4527976264827448  WHEN 'HY?(' THEN NULL WHEN '0.8770063473121201' THEN NULL WHEN x'c844a3b8' THEN NULL END))); -- 0ms;
SELECT DISTINCT (((vt0.c3 IN (vt0.c0))) NOT NULL) FROM t0 LIMIT -1455916080;SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT ALL CASE WHEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c4 END THEN NULL WHEN CAST(vt0.c0 AS REAL) THEN ((((vt0.c3)AND(vt0.c3)))OR(vt0.c1)) WHEN (- (t0.c0)) THEN (vt0.c3 IN ()) END FROM t0;SELECT ALL ((((((((SUM(vt0.c4))OR((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))))OR((((x'e70a', vt0.c0, vt0.c2))>((vt0.c1, vt0.c3, t0.c0))))))OR(HEX(vt0.c3))))AND(((((vt0.c4)OR(t0.c0)))OR(vt0.c4)))) FROM vt0 WHERE (0.45073693432169093);SELECT CASE ((vt0.c4) NOT NULL)  WHEN ((-233146216)LIKE(vt0.c1)) THEN ((vt0.c4) BETWEEN (vt0.c4) AND (vt0.c1)) END FROM t0 WHERE (x'') GROUP BY NULLIF(((vt0.c3) BETWEEN (vt0.c4) AND (vt0.c0)), vt0.c3 COLLATE BINARY);SELECT 'M鲥qlg{^' FROM t0, vt0 ORDER BY CASE WHEN vt0.c4 THEN ((1.7976931348623157E308) NOT BETWEEN (vt0.c3) AND (t0.c0)) WHEN CAST(vt0.c4 AS BLOB) THEN CAST(vt0.c4 AS BLOB) WHEN t0.c0 THEN t0.c0 COLLATE RTRIM ELSE (vt0.c0 IN (vt0.c3)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt0.c2 FROM t0 WHERE ((((((('%p')AND(NULL)))AND('-70991671'))) ISNULL));SELECT ALL DENSE_RANK() OVER ( RANGE ((CAST(vt0.c3 AS REAL)) BETWEEN (vt0.c4 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (vt0.c4) AND (t0.c0)))) PRECEDING EXCLUDE NO OTHERS) FROM t0;SELECT DISTINCT ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c4)))>>(CASE vt0.c3  WHEN t0.c0 THEN vt0.c3 WHEN '㐰5jul5' THEN vt0.c2 WHEN t0.c0 THEN vt0.c4 ELSE vt0.c4 END)), ((((vt0.c0 COLLATE BINARY)OR(vt0.c2)))AND((~ (x'')))), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE NOCASE, LEAD((((((vt0.c3, vt0.c2, vt0.c1, t0.c0, vt0.c3))>=((vt0.c4, vt0.c1, vt0.c4, t0.c0, t0.c0))))-((('')AND(vt0.c2)))), (- (((vt0.c4)==(x'1ca6')))), ((CAST(vt0.c0 AS INTEGER))GLOB('ꍳl⽣Er'))) OVER ( ORDER BY -380871718  NULLS LAST, DATE((vt0.c3 IN ()), (+ (vt0.c1)), vt0.c3 COLLATE NOCASE)  NULLS LAST), (((t0.c0)) BETWEEN ((vt0.c0)) AND ((((NULL) NOT NULL)))) FROM vt0, t0 WHERE (CASE WHEN (- (1.141062999E9)) THEN (~ (NULL)) END) GROUP BY (((vt0.c3)%(vt0.c0)) IN ()) HAVING (vt0.c2 IN ()); -- 0ms;
SELECT ALL vt0.c3 FROM t0;SELECT DISTINCT GROUP_CONCAT((+ (vt0.c4))), (((vt0.c0, vt0.c1, t0.c0)) BETWEEN ((COUNT(vt0.c1), CAST(vt0.c3 AS INTEGER), CASE x''  WHEN vt0.c4 THEN 1416095143 END)) AND ((vt0.c3, (((vt0.c2))<((0.8812046141803226))), ((vt0.c3) NOT BETWEEN (0.4286842968542066) AND (vt0.c2))))), TYPEOF((+ (t0.c0))) FROM t0 LIMIT -144582933;SELECT DISTINCT (((vt0.c2)%(t0.c0)) IN (CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c4 END, LENGTH(t0.c0))) FROM vt0 WHERE (((((CAST(NULL AS NUMERIC))AND('' COLLATE NOCASE)))AND((('6cm') NOT BETWEEN (x'4436') AND (x'')))));SELECT ((((((((((((SQLITE_SOURCE_ID())OR(((vt0.c3)<>(vt0.c3)))))OR(((vt0.c1) IS FALSE))))OR((vt0.c2 IN ()))))OR((('-1575005097')!=(vt0.c0)))))AND(AVG(vt0.c3))))OR((((vt0.c0))<>((t0.c0))))) FROM vt0, t0; -- 0ms;
SELECT ALL ((COALESCE(vt0.c3, vt0.c4, vt0.c1, vt0.c3)) NOT BETWEEN (vt0.c1) AND ((((vt0.c0, '0.0', vt0.c0))==((vt0.c4, vt0.c1, vt0.c0))))) FROM t0 LIMIT 2052329460 OFFSET -384371586;SELECT ALL ((((((vt0.c2)OR(vt0.c4)))OR(vt0.c3)))>((vt0.c2 IN ()))) FROM t0, vt0 WHERE (NULL) LIMIT 864334131 OFFSET 2001216722; -- 0ms;
SELECT ALL TRIM((((x''))!=((vt0.c0)))) FROM t0, vt0 ORDER BY CAST(vt0.c1 AS BLOB) DESC; -- 0ms;
SELECT GROUP_CONCAT(CAST(t0.c0 AS TEXT)) FROM vt0 WHERE (((CASE '-2038008150'  WHEN -1250529743 THEN NULL WHEN x'' THEN '' WHEN NULL THEN NULL ELSE 0.8870831609120209 END)<=((NULL IN ())))) GROUP BY CASE CASE WHEN vt0.c3 THEN 0X32ea04be END  WHEN ((((vt0.c2)AND(x'')))AND(t0.c0)) THEN vt0.c4 COLLATE RTRIM WHEN 0X3dbd8cfd46663c6f THEN ((((t0.c0)AND(vt0.c3)))OR(vt0.c1)) WHEN CASE WHEN t0.c0 THEN vt0.c4 END THEN vt0.c4 COLLATE BINARY END HAVING CASE WHEN vt0.c3 THEN vt0.c1 END COLLATE NOCASE;SELECT ALL NTILE((CAST(vt0.c1 AS INTEGER) IN ())) OVER () FROM t0, vt0 WHERE ((0.6845762531813945 IN ())); -- 0ms;
SELECT DISTINCT ((((NOT (vt0.c2)), 0.7507544920028681, (+ (vt0.c0))))>=((((vt0.c3) BETWEEN (vt0.c3) AND (vt0.c3)), '*eSd', (((t0.c0))>((vt0.c4)))))), (+ (CASE vt0.c3  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c2 END)), CASE ((vt0.c4)<=(vt0.c4))  WHEN 1.571274165E9 THEN ((vt0.c2) NOTNULL) END FROM t0 WHERE ((- (-1.720352917E9)) COLLATE RTRIM) ORDER BY (((MIN(vt0.c2, vt0.c4, vt0.c4, vt0.c2)))<((CASE vt0.c4  WHEN vt0.c3 THEN x'' END)))  NULLS FIRST;SELECT ALL (~ (vt0.c0 COLLATE NOCASE)), TOTAL(TRIM(DISTINCT vt0.c0)) OVER (), LAG(TRIM(DISTINCT ((vt0.c0)||(vt0.c2))), ((((((((((((-2.33146216E8)OR(vt0.c4)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c4)) COLLATE RTRIM, (('1137957602') BETWEEN (((vt0.c2)OR(vt0.c2))) AND (vt0.c2 COLLATE RTRIM))) OVER ( GROUPS BETWEEN CASE CAST(vt0.c1 AS INTEGER)  WHEN vt0.c2 THEN ((vt0.c2) NOTNULL) ELSE (vt0.c0 IN ()) END PRECEDING AND LIKELY(DISTINCT ((t0.c0)>(x''))) PRECEDING EXCLUDE TIES), ((NULLIF(DISTINCT vt0.c4, t0.c0))==((vt0.c4 IN (vt0.c3)))), vt0.c4 FROM vt0 WHERE (((CASE '-93741601'  WHEN 'AWAm' THEN '-1352784289' END)>((+ (NULL))))) ORDER BY ((TIME(t0.c0, vt0.c0, vt0.c4))GLOB(((((vt0.c2)OR(vt0.c1)))AND(''))));SELECT DISTINCT vt0.c1, GROUP_CONCAT((((vt0.c3, vt0.c4, vt0.c3)) BETWEEN ((vt0.c1, vt0.c0, t0.c0)) AND ((t0.c0, vt0.c1, '')))) COLLATE RTRIM, 0.07515484165704422 FROM t0;SELECT ALL ((NULL COLLATE NOCASE)OR(vt0.c2 COLLATE BINARY)), 0X11c46f11, ((((((((MIN(vt0.c1))OR(CASE vt0.c1  WHEN NULL THEN t0.c0 ELSE vt0.c1 END)))AND(COUNT(*))))OR(0.475158060924617)))OR(((vt0.c0) ISNULL))) FROM vt0, t0 WHERE ('850216537') ORDER BY ((((((((((((((((CASE vt0.c4  WHEN vt0.c1 THEN vt0.c4 END)OR(((('hH'))<=(('-869057634'))))))OR(vt0.c0)))OR(((vt0.c3) ISNULL))))AND((((vt0.c4)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(CAST(vt0.c2 AS REAL))))OR((vt0.c3 IN ()))))OR(CASE WHEN vt0.c2 THEN 0.9917990608657715 ELSE vt0.c3 END)))OR(CASE x''  WHEN vt0.c4 THEN vt0.c3 WHEN vt0.c0 THEN x'f42e7912' WHEN t0.c0 THEN vt0.c4 END)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((t0.c0) ISNULL)) AND (((vt0.c0)+(vt0.c2)))) FROM vt0 LIMIT -1763952632 OFFSET -401031504;SELECT DISTINCT '' FROM vt0; -- 0ms;
SELECT DISTINCT (+ ((x'' IN ()))) FROM vt0 WHERE ((((((('-210885134')OR(NULL)))AND(NULL)))<>(((1926947175)<<('CU-雰'))))) ORDER BY ((((t0.c0)>>(vt0.c1))) IS TRUE);SELECT ALL (((vt0.c1 COLLATE BINARY))>=(((vt0.c3 IN (vt0.c3))))) FROM t0, vt0 WHERE (IFNULL((('1543209631') NOT NULL), ((0.7869483463838775)&('0.1514417784994314')))); -- 0ms;
SELECT DISTINCT NULL, ((COALESCE(t0.c0, vt0.c3))!=((((vt0.c2))<>((vt0.c2))))), '0.5785964636414874' FROM vt0 WHERE ((('-1884227906' COLLATE NOCASE) BETWEEN (LIKELY(DISTINCT '-1846422972')) AND (((((0Xffffffffb89627ce)OR(x'')))OR(0.3966497805067165)))));SELECT CASE WHEN '䠇hrq,ꆙ遑e' THEN vt0.c4 ELSE '1557975340' END COLLATE RTRIM FROM vt0, t0; -- 1ms;
SELECT DISTINCT ((vt0.c3)AND(vt0.c0)) COLLATE BINARY FROM vt0 WHERE ((((('') ISNULL))IS NOT(CAST(1473599504 AS BLOB)))) GROUP BY ((((((vt0.c2)AND(t0.c0)))AND(vt0.c0))) IS FALSE);SELECT DISTINCT COUNT(((vt0.c4)+(vt0.c3))) OVER () FROM vt0, t0 WHERE ((((((NOT (0.0566456431351422)))OR(((('')) BETWEEN ((NULL)) AND ((x''))))))AND(((0.8034309667663604) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((((vt0.c3) NOT BETWEEN (vt0.c0) AND (vt0.c3))) ISNULL), TYPEOF(vt0.c0 COLLATE RTRIM), LOWER(DISTINCT (vt0.c3 IN ())) FROM vt0, t0 WHERE ((CAST(-7.41900813E8 AS BLOB) IN ())); -- 0ms;
SELECT ALL (((vt0.c2, vt0.c4, vt0.c4)) NOT BETWEEN ((vt0.c0, vt0.c4 COLLATE RTRIM, ((vt0.c2) BETWEEN (vt0.c3) AND ('251806299')))) AND ((vt0.c1, CASE vt0.c3  WHEN NULL THEN vt0.c0 ELSE vt0.c1 END, '[8z{9'))) FROM t0 WHERE (CAST((+ ('-1783327120')) AS NUMERIC));SELECT DISTINCT TOTAL(CAST(vt0.c3 AS TEXT)) OVER () FROM vt0; -- 0ms;
SELECT (NOT (((t0.c0)<=(NULL)))), ((((vt0.c0)<(t0.c0)))>(json_array_length(vt0.c2))), ((vt0.c1) NOT BETWEEN ((- (vt0.c3))) AND (LIKELIHOOD(vt0.c4, 0.31567018671312697))) FROM vt0;SELECT ALL CAST(LIKELIHOOD(DISTINCT t0.c0, 0.5556207131758144) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT COUNT((((vt0.c2, vt0.c4, vt0.c4)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c4, vt0.c1, vt0.c4)))) FROM vt0, t0 WHERE (((((NULL) IS FALSE)) NOTNULL)); -- 1ms;
SELECT (((vt0.c1 IN ()))<(0.551259090598415 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT NULL)) ISNULL) FROM t0, vt0 WHERE ((((+ ('')))IS NOT(x'' COLLATE BINARY))); -- 0ms;
SELECT ALL COUNT(SQLITE_COMPILEOPTION_GET(vt0.c4)), CASE WHEN '1039951097' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c4 THEN vt0.c3 WHEN NULL THEN vt0.c2 WHEN vt0.c3 THEN vt0.c4 END COLLATE RTRIM, NULL FROM vt0, t0 WHERE (((('328662604')GLOB(NULL)) IN ())) GROUP BY CASE WHEN ((x'')>>(vt0.c0)) THEN CAST(vt0.c1 AS REAL) WHEN ((((((((vt0.c3)AND(t0.c0)))OR(t0.c0)))OR(vt0.c1)))OR(vt0.c4)) THEN (- (vt0.c3)) WHEN ((vt0.c4) ISNULL) THEN CASE WHEN vt0.c2 THEN t0.c0 ELSE vt0.c1 END ELSE CASE 0.017790367292879528  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.07261738101917015 END END; -- 0ms;
SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE (((((NULL) IS FALSE))<>(CASE NULL  WHEN x'f360' THEN NULL ELSE NULL END))) ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE '-2038008150' END)OR(1347441415)); -- 0ms;
SELECT ALL TOTAL((NULL IN (vt0.c1))) OVER ( ORDER BY json_insert((((vt0.c2, vt0.c4, vt0.c0)) NOT BETWEEN ((vt0.c4, vt0.c0, vt0.c4)) AND ((vt0.c1, 0.40226489297193, vt0.c1))), json_object(vt0.c4, vt0.c1), ((t0.c0)*(vt0.c3))) ASC  NULLS LAST, ((((CAST(vt0.c0 AS REAL))AND(((t0.c0)IS(vt0.c1)))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c3))))), ((x'')/(((vt0.c4) BETWEEN (vt0.c0) AND (0.1733514548126529)))), ((((LIKELY(DISTINCT vt0.c3))AND(((vt0.c3)>(vt0.c0)))))AND((vt0.c1 IN ()))) FROM t0;SELECT ALL SUM(((((vt0.c2)AND(t0.c0)))AND(vt0.c1))) COLLATE RTRIM, vt0.c1, (('6|U푌5B6(?')=(((vt0.c2)IS(vt0.c4)))) FROM vt0 WHERE ((CASE WHEN 2027559101 THEN NULL ELSE 'vC''Ekj' END IN ())) ORDER BY (((((+ (vt0.c2)))AND(UPPER(DISTINCT vt0.c2))))OR(vt0.c0))  NULLS LAST;SELECT DISTINCT ((((LTRIM(vt0.c0, vt0.c2))OR(CAST(vt0.c3 AS REAL))))OR(TRIM(DISTINCT vt0.c4))), (+ ((+ (vt0.c1)))), AVG(CAST(vt0.c3 AS TEXT)) OVER () FROM vt0, t0 WHERE (((((NULL)|(0.6509243126870449)))|((((((((('767399017')OR('q綝x')))AND(x'')))AND(0.8578729396299594)))OR(0))))); -- 0ms;
SELECT (('') NOT BETWEEN (vt0.c3) AND (NULL)), x'', ((((vt0.c3)IS NOT(vt0.c3)))>((((NULL, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c3, vt0.c4)) AND ((vt0.c4, t0.c0, vt0.c3))))) FROM vt0 WHERE (CAST((((0.4874339256604523))=((NULL))) AS REAL));SELECT DISTINCT ((vt0.c2)OR(vt0.c0)) FROM t0, vt0 WHERE ((((('') BETWEEN (NULL) AND ('-76040775'))) IS FALSE)) GROUP BY CAST((- (t0.c0)) AS BLOB) HAVING (((vt0.c1)%(vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT ((((vt0.c2 COLLATE RTRIM)AND((vt0.c4 IN ()))))OR(0.5420066848216365)), (((((vt0.c4))>((vt0.c1))))-(CAST(vt0.c2 AS TEXT))), (((vt0.c3, vt0.c2, '-700581440', t0.c0, vt0.c2)) BETWEEN ((COALESCE(vt0.c1, vt0.c4), (('2021894144')<<(vt0.c1)), t0.c0, (((vt0.c2)) BETWEEN ((vt0.c3)) AND ((vt0.c3))), ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c3)))) AND ((COUNT(*), SUM(vt0.c0), LAST_INSERT_ROWID(), (x'' IN (vt0.c4)), x'9a4e'))) FROM vt0, t0;SELECT DISTINCT CASE CAST(vt0.c2 AS TEXT)  WHEN ((t0.c0) IS TRUE) THEN '1e500000' END, (((((('-1854822908')) BETWEEN ((vt0.c1)) AND (('968909823')))))<>(('#'))), ((((((((vt0.c2)AND(CAST(vt0.c0 AS REAL))))OR(((t0.c0)>>(vt0.c4)))))OR(((vt0.c2)>(vt0.c0)))))OR(HEX(vt0.c0))), (((vt0.c2)) BETWEEN ((((vt0.c1)AND(vt0.c1)))) AND (((~ (vt0.c1))))), TOTAL(NULL) OVER () FROM t0 WHERE (CAST(PRINTF('351586267', 0Xffffffffda2dfe7a, -543308328) AS TEXT));SELECT ALL (((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN ()) FROM t0 WHERE (CAST('A\n' AS REAL) COLLATE BINARY) LIMIT -1329096107 OFFSET -576764083; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((SUM(vt0.c4))>=(vt0.c3)) FROM t0, vt0 WHERE ((((('0.9681468037969224')>=(x'c0ae'))) BETWEEN (CASE WHEN x'e015' THEN x'' END) AND (((NULL)>(x''))))); -- 1ms;
SELECT DISTINCT json_array_length(CAST(vt0.c0 AS REAL), (vt0.c3 IN (vt0.c2))), vt0.c4, GROUP_CONCAT(((vt0.c2)>(vt0.c0)) COLLATE RTRIM) OVER () FROM vt0, t0 WHERE (CASE WHEN (1926947175 IN ()) THEN (('0.010168995057626695')=(x'')) WHEN (((0.3934171465383325)) NOT BETWEEN ((NULL)) AND (('oIMh+}R䉭'))) THEN (('')<<(NULL)) WHEN (NULL IN ()) THEN '2027559101' WHEN CASE 0.8770063473121201  WHEN NULL THEN '-210885134' ELSE 0.5302059958170355 END THEN (0.648681726969687 IN (0.09055489034103559)) WHEN (((0.9595715129734392))<(('-1737588541'))) THEN (~ (x'')) END); -- 0ms;
SELECT ((((((t0.c0)) BETWEEN ((vt0.c3)) AND ((NULL))), ((vt0.c1) ISNULL), CAST(vt0.c3 AS NUMERIC), (~ (t0.c0)), t0.c0 COLLATE BINARY))<((CASE WHEN vt0.c2 THEN vt0.c2 END, vt0.c4, AVG(vt0.c3), IFNULL(vt0.c3, vt0.c1), CAST(vt0.c2 AS BLOB)))), (- (0xffffffff9f78b859)), CAST(((vt0.c1)=(t0.c0)) AS TEXT), t0.c0, ((((CASE WHEN t0.c0 THEN vt0.c3 END)OR((t0.c0 IN ()))))AND((- (vt0.c0)))) FROM t0, vt0 WHERE ((((- (x'')))*(1705905727))); -- 0ms;
SELECT DISTINCT '' FROM t0; -- 0ms;
SELECT ALL (((((~ (vt0.c3)))OR((NOT (vt0.c1)))))AND(((vt0.c4)<(t0.c0)))) FROM vt0 CROSS JOIN t0 ON (((vt0.c3)) BETWEEN (((((vt0.c1))>((t0.c0))))) AND ((LIKE(vt0.c4, vt0.c1)))); -- 0ms;
SELECT ALL ((((0.6571927601118922)OR(ROUND(vt0.c4, t0.c0))))OR(((((((((((((vt0.c0)AND(t0.c0)))OR(vt0.c1)))OR(vt0.c4)))AND(vt0.c2)))OR(vt0.c2)))AND(NULL)))) FROM t0, vt0 GROUP BY INSTR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), ((vt0.c3)||(t0.c0))); -- 1ms;
SELECT ALL ((t0.c0) IS TRUE) COLLATE RTRIM FROM vt0;SELECT ALL LAST_VALUE(((- (x'')) IN (((NULL)-(t0.c0))))) OVER () FROM t0 WHERE (CASE WHEN '' THEN -1106516979 END COLLATE BINARY); -- 0ms;
SELECT ALL CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM, (((vt0.c4 IN (t0.c0))) NOTNULL), (((t0.c0, vt0.c1, vt0.c0))>((t0.c0, vt0.c3, vt0.c2))) COLLATE NOCASE, (((((+ (vt0.c3)))OR((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c4))))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))), x'', (((vt0.c1)IS NOT(vt0.c2)) IN ()), ((COUNT(vt0.c0)) IS FALSE) FROM t0;SELECT ALL '0.9815671862993539' FROM vt0 WHERE (0.664231130742934 COLLATE NOCASE) ORDER BY (highlight(vt0.c2, t0.c0, '2126472030', vt0.c0) IN ((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, 'bzyXL', NULL))))) DESC;SELECT vt0.c2, (((- (vt0.c3))) NOT NULL), CAST(vt0.c4 AS BLOB), (((((vt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c4))))>(UPPER(0x23724883))), AVG(0.3258394788716602) FROM vt0 WHERE (CAST((((('uJ')OR(0Xfffffffff407e201)))OR('-672373195')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c3 AS NUMERIC)) BETWEEN (((((vt0.c0)OR(vt0.c4)))OR(vt0.c1))) AND (CASE WHEN vt0.c4 THEN t0.c0 ELSE vt0.c4 END)) FROM vt0 GROUP BY ((t0.c0 COLLATE NOCASE) NOT BETWEEN ((NOT (vt0.c2))) AND (((vt0.c1)>=(vt0.c2)))), (((((vt0.c0)OR(vt0.c3)))AND(NULL)) IN (((((t0.c0)AND(vt0.c3)))AND(vt0.c0)))), (t0.c0 IN ()) COLLATE BINARY HAVING x'';SELECT ALL LIKELIHOOD(HEX(DISTINCT vt0.c4), 0.776406570819456), CHANGES(), CAST(CASE vt0.c3  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c3 THEN x'' WHEN vt0.c3 THEN vt0.c2 END AS TEXT) FROM vt0, t0 WHERE ('2027559101'); -- 0ms;
SELECT DISTINCT t0.c0, (NOT (vt0.c2)), CASE WHEN ((vt0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ABS(t0.c0) WHEN CASE vt0.c4  WHEN t0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c4 THEN vt0.c4 ELSE vt0.c1 END THEN DATE(vt0.c2, vt0.c3, vt0.c4, vt0.c3, vt0.c1) WHEN ((vt0.c1)<(t0.c0)) THEN LTRIM(vt0.c3) END FROM t0 WHERE ((((0.40025038014128567) ISNULL) IN ())) GROUP BY (((((vt0.c3)!=(t0.c0))))<=((((vt0.c3)||(vt0.c4))))) HAVING CAST(((vt0.c4) BETWEEN (t0.c0) AND (vt0.c3)) AS NUMERIC);SELECT DISTINCT ((ABS(DISTINCT vt0.c0)) IS FALSE), MIN(((((t0.c0)OR(vt0.c2)))AND(vt0.c2))), ((NULL)%(vt0.c1 COLLATE BINARY)) FROM t0 WHERE (CAST(NULL AS TEXT));SELECT DISTINCT (+ (vt0.c3)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 UNION ALL SELECT DISTINCT CAST(((((((((vt0.c4)AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)) AS REAL) FROM t0, vt0 WHERE (((((((0.6839079216575582) NOT BETWEEN (x'3565') AND (NULL)))AND(CASE WHEN x'' THEN x'' ELSE -9.0684681E8 END)))OR(CAST(NULL AS INTEGER)))) LIMIT -338614054 OFFSET -2114908469; -- 1ms;
SELECT ALL 0.7146071111440212, CASE WHEN vt0.c0 THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt0.c3)<(vt0.c4)) THEN (- (t0.c0)) WHEN ((t0.c0) BETWEEN ('Fn') AND (vt0.c3)) THEN ((vt0.c3) NOT BETWEEN (vt0.c2) AND (vt0.c2)) ELSE ((vt0.c1)<=(vt0.c3)) END, ((((t0.c0)GLOB(vt0.c2))) BETWEEN ('NN*}a') AND (COUNT(vt0.c3))) FROM t0 GROUP BY vt0.c1 HAVING RTRIM((- (vt0.c3)));SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 WHERE (((((0Xffffffffc10ae09f)<(1.757408822E9)))IS(0.14221856431022206))); -- 0ms;
SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)AND(((((vt0.c1)AND('#\r')))AND(vt0.c3)))))AND(CAST(vt0.c4 AS NUMERIC))) FROM vt0, t0 ORDER BY vt0.c4 DESC  NULLS LAST, ((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c4))) BETWEEN (((vt0.c4)&(vt0.c0))) AND (NULL))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((-9.3741601E7)*(vt0.c4))))>=(((((vt0.c4)) BETWEEN ((t0.c0)) AND ((t0.c0)))))), (((CASE WHEN vt0.c4 THEN t0.c0 END))>((CAST(0.27462762871576873 AS INTEGER)))), (('曄Y'']+/')+((((vt0.c1))>=((vt0.c3))))), SUM(x'') OVER (), COUNT((vt0.c2 IN ())) OVER () FROM vt0, t0 WHERE (((('-1227720607' COLLATE RTRIM, CASE WHEN 'al' THEN x'' END, (+ (404854585))))<=(((NULL IN ()), (x'1f0b' IN ()), ((((x'e6f0')OR('')))AND(0.8269854355863407)))))); -- 1ms;
SELECT DISTINCT CAST(HEX(DISTINCT t0.c0) AS NUMERIC) FROM t0 WHERE ((CASE WHEN x'' THEN '' ELSE 0x127064ed END IN ())) ORDER BY (- (((vt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST, LOWER(((t0.c0)-(t0.c0))) DESC LIMIT -2004135289 OFFSET -210885134;SELECT MAX(MAX((~ (x'')))), AVG(((vt0.c1)AND(x''))) OVER ( RANGE (- (((vt0.c4)>=(vt0.c1)))) PRECEDING EXCLUDE GROUP), CAST((('3T') BETWEEN (t0.c0) AND (vt0.c1)) AS NUMERIC) FROM vt0 WHERE (CAST(IFNULL(1057113850, NULL) AS INTEGER));SELECT ALL (x'' IN ()) FROM vt0 GROUP BY (((('3w')AND(vt0.c0)))AND(vt0.c4)) COLLATE NOCASE, (((x'')) BETWEEN ((((vt0.c3)OR(vt0.c4)))) AND (((vt0.c1 IN ())))), x'0ea7'; -- 0ms;
SELECT ALL ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c4)) COLLATE NOCASE FROM vt0, t0 WHERE (((x'')==(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((vt0.c4)+(CASE WHEN vt0.c4 THEN vt0.c2 ELSE vt0.c2 END)) FROM vt0 WHERE ((- ((NOT (0.21230461512589038))))) GROUP BY ((((vt0.c3)IS NOT(t0.c0)))LIKE((- (vt0.c1))));SELECT ALL (((vt0.c3 IN ()))IS NOT(CASE WHEN vt0.c3 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c3 THEN vt0.c1 WHEN vt0.c4 THEN vt0.c0 WHEN vt0.c4 THEN vt0.c2 END)) FROM t0 WHERE (HEX(((NULL)<<(NULL)))) LIMIT 1204783300 OFFSET 1016083385;SELECT DISTINCT CASE WHEN ((vt0.c4) ISNULL) THEN ((-4.49174955E8) ISNULL) END FROM t0 WHERE (CAST(NULL AS BLOB));SELECT DISTINCT ((CASE WHEN vt0.c3 THEN vt0.c0 WHEN '0.9657533948520538' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c3 END) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c2) NOT BETWEEN (vt0.c4) AND (t0.c0)))) FROM vt0, t0 ORDER BY 0.3613491354124003 ASC; -- 0ms;
SELECT ALL CHANGES() FROM vt0, t0 WHERE (((CAST(0.4053771687607026 AS BLOB)) NOT NULL)); -- 0ms;
SELECT (((((vt0.c1)OR(t0.c0))))<=((MAX(vt0.c0)))) FROM t0;SELECT CAST(((vt0.c4) ISNULL) AS TEXT), vt0.c0, (NOT (((vt0.c2) IS TRUE))) FROM t0 WHERE (CAST(((((x'')AND('0.862867981460376')))OR(0.589440233652373)) AS TEXT));SELECT (~ (((((vt0.c1)OR(vt0.c2)))OR(vt0.c4)))) FROM vt0 WHERE ((((('-99570913')>(0xffffffffa0746568))) NOT BETWEEN (('yZ￿]2z\&i' IN ())) AND (((NULL) NOT BETWEEN ('P\nA亿Zx&[') AND ('FALSE'))))) LIMIT 1186048007 OFFSET -1938558237; -- 0ms;
SELECT (((vt0.c0)|(vt0.c3)) IN (((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((0.5786034457360687 COLLATE NOCASE))>=((CASE WHEN '\rrHso-a' THEN 0.7887807387009472 ELSE NULL END))));SELECT DISTINCT NULL FROM vt0 INDEXED BY i52 WHERE ((((('<?') IS TRUE)) NOT BETWEEN (CASE WHEN 0.37978100000141635 THEN 0.12831557899759738 WHEN NULL THEN 0.5768242523562056 WHEN 0.5243493560723411 THEN x'' END) AND (NULL COLLATE NOCASE))) GROUP BY ((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))/((((t0.c0, vt0.c0, vt0.c4))==(('', '|r', vt0.c4))))), ((vt0.c3)OR(t0.c0)) COLLATE RTRIM, (NOT (x'e88a725d')) HAVING (NOT (CAST(vt0.c2 AS REAL)));SELECT ALL FIRST_VALUE(((((((vt0.c2) NOT NULL))AND(vt0.c2)))OR(CASE WHEN vt0.c4 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c4 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c3 THEN vt0.c1 WHEN t0.c0 THEN vt0.c2 ELSE vt0.c4 END))) OVER () FROM vt0, t0 WHERE ((((((-237658048)) NOT BETWEEN ((NULL)) AND (('''U'))))|(CAST('0.5956339949998077' AS REAL)))); -- 6ms;
SELECT DISTINCT vt0.c3, (((vt0.c2)&(vt0.c0)) IN ()), MAX(((vt0.c4)<>(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c3) NOTNULL), ((((t0.c0)OR(vt0.c3)))AND(vt0.c2)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))) AND ((((vt0.c0) IS FALSE), GROUP_CONCAT(vt0.c4), SUM(vt0.c2)))) FROM t0 GROUP BY ((TRIM(DISTINCT vt0.c3, vt0.c0))OR(((vt0.c3)>=(vt0.c1)))), (((- (vt0.c1)))<(CAST(t0.c0 AS TEXT))), ((vt0.c3)IS NOT(vt0.c2));SELECT ALL ((((((vt0.c3)OR(x'')))OR(vt0.c0))) BETWEEN (vt0.c3) AND (SUM(vt0.c3))) FROM vt0, t0; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS TEXT))||(((vt0.c4)>>(vt0.c2)))), vt0.c3, 0.175055388499196 FROM vt0, t0; -- 0ms;
SELECT ALL CASE DATE(t0.c0, vt0.c1, vt0.c3, vt0.c1, vt0.c4)  WHEN (((vt0.c4)) NOT BETWEEN ((vt0.c3)) AND ((vt0.c1))) THEN ((t0.c0)||(t0.c0)) ELSE (vt0.c0 IN ()) END FROM vt0;SELECT NULLIF(DISTINCT (vt0.c3 IN ()), SUM(vt0.c0)) FROM vt0, t0 LIMIT 174908456 OFFSET 1056291821;SELECT ALL CAST(((x'') IS FALSE) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT (- (((vt0.c3) NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((NULL)/((vt0.c1 IN ()))), ((((t0.c0)-(t0.c0))) BETWEEN (((vt0.c4) IS TRUE)) AND (((t0.c0)IS(t0.c0)))), ((((((((vt0.c2)OR(t0.c0)))OR(vt0.c3)))OR((vt0.c2 IN ()))))OR(((vt0.c3)-(vt0.c2)))) FROM t0, vt0 WHERE ((NOT ((('0.9532223774800738')OR(NULL))))); -- 0ms;
SELECT ALL highlight(((t0.c0) NOTNULL), vt0.c2, 0.18611305883650275, CASE vt0.c2  WHEN NULL THEN 0.930896753043711 WHEN t0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c3 ELSE 0xffffffff8c1997a2 END) FROM t0 WHERE (((+ ('1861395975')) IN ((NOT (-282837969)), ('~W' IN ()))));SELECT DISTINCT ((NOT (vt0.c2)) IN ()) FROM vt0, t0 WHERE (((CAST('M	蚢Z' AS INTEGER)) IS TRUE)) LIMIT -1784557971 OFFSET 527791913; -- 1ms;
SELECT ALL LENGTH(MIN(t0.c0)) FROM vt0;SELECT ALL ((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))>(QUOTE(vt0.c0))), ((UNICODE(t0.c0)) NOT NULL), RANK() OVER () FROM vt0 WHERE (CASE WHEN ((x'')>(0.2866001330587047)) THEN ((8.50216537E8) ISNULL) ELSE ((((((((8283844.0)OR(NULL)))OR(NULL)))AND(0.3603625586116571)))OR(NULL)) END);SELECT DISTINCT (((((vt0.c4))>=((vt0.c3)))) NOT NULL) FROM vt0; -- 0ms;
SELECT ALL DATE(AVG(vt0.c1), vt0.c4 COLLATE RTRIM, MIN(vt0.c2)) FROM vt0, t0 EXCEPT SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))<<((((vt0.c2, t0.c0, vt0.c1)) BETWEEN ((0xffffffffd5084a97, vt0.c2, x'')) AND ((vt0.c2, vt0.c1, vt0.c1))))) FROM vt0 WHERE (((((0.42836603706024556)&(x'')))LIKE(((('2027559101', NULL, '-0.0'))>=((NULL, 0.7778691014230713, 'I+'))))));SELECT ((vt0.c0)/(vt0.c1)) COLLATE NOCASE FROM vt0, t0 ORDER BY 0.7897178604224311 ASC, (~ (((vt0.c3) IS FALSE))) ASC, ((((((vt0.c1)OR(vt0.c1)))OR(t0.c0)))IS(((vt0.c0)IS NOT('j\1'))))  NULLS LAST; -- 0ms;
SELECT ALL ((vt0.c4)IS(t0.c0)), (((vt0.c4)) BETWEEN ((((t0.c0)/(vt0.c0)))) AND ((vt0.c2))), SUM(((vt0.c4)+(vt0.c4))) OVER () FROM vt0 CROSS JOIN t0 ON ((CAST(t0.c0 AS TEXT))!=(((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY ((((vt0.c1)<=(t0.c0)))<=(t0.c0))  NULLS FIRST, NULL DESC  NULLS FIRST LIMIT 1596827396 OFFSET 229108647; -- 1ms;
SELECT (vt0.c3 IN ()) COLLATE RTRIM FROM vt0, t0; -- 0ms;
SELECT CASE ((((((((vt0.c1)AND(0.10344759490412259)))AND(vt0.c4)))AND(t0.c0)))AND(vt0.c1))  WHEN ((vt0.c3) IS FALSE) THEN ((t0.c0) ISNULL) WHEN ((vt0.c1)<<(t0.c0)) THEN ((vt0.c0)AND(vt0.c2)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c3 ELSE vt0.c2 END THEN json_remove(NULL, vt0.c0) WHEN ((((((((t0.c0)AND(vt0.c1)))AND(t0.c0)))OR(vt0.c4)))OR(vt0.c1)) THEN GROUP_CONCAT(vt0.c1) WHEN (vt0.c2 IN (vt0.c0)) THEN (((vt0.c3))>=((NULL))) END FROM t0, vt0 GROUP BY vt0.c1; -- 0ms;
SELECT ALL vt0.c4, GROUP_CONCAT(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END), TOTAL(((0.44688349942007854)>>(t0.c0))) OVER () FROM t0, vt0 WHERE ((- (CASE WHEN '' THEN '' WHEN '1557975340' THEN 1.467459073E9 WHEN 'UNL' THEN x'dce8a0ee' ELSE 'FALSE' END))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM vt0 WHERE (ABS(CASE 0Xffffffff928b6261  WHEN '''U' THEN 0.9414917817752977 WHEN x'' THEN 0xffffffff81a05958 WHEN '1165906489' THEN -1846997995 END)) LIMIT -505175712; -- 1ms;
SELECT ALL ((((CAST(vt0.c1 AS BLOB))OR(CAST(NULL AS TEXT))))OR(CAST(vt0.c3 AS REAL))), ((SUM(vt0.c2)) BETWEEN (json_patch(vt0.c1, vt0.c3)) AND (((t0.c0)>>(vt0.c4)))), vt0.c1 FROM vt0;SELECT ((json_remove(vt0.c3, vt0.c3)) NOT BETWEEN (UPPER(DISTINCT vt0.c1)) AND (t0.c0 COLLATE NOCASE)) FROM vt0 WHERE ((((-4.57586446E8))>((((0.6201029889754123) IS FALSE)))));SELECT DISTINCT LEAD((CASE '-258103936'  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END IN ()), ((t0.c0) NOT NULL) COLLATE RTRIM, (((CASE t0.c0  WHEN NULL THEN t0.c0 END, LIKELIHOOD(t0.c0, 0.7971852911078133), (t0.c0 IN ())))>((((t0.c0) BETWEEN (t0.c0) AND ('-1193231777')), CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, (+ ('\ny')))))) OVER (), (((t0.c0)) NOT BETWEEN ((vt0.c4)) AND ((0.3707530623580908))) COLLATE RTRIM, '-376281000' FROM t0 WHERE (LAST_INSERT_ROWID());SELECT CAST((- (vt0.c3)) AS INTEGER) FROM vt0 WHERE (CAST(((0.5532651224710825)GLOB('U7ỀG-B')) AS INTEGER)); -- 0ms;
SELECT MIN(json_array_length(x'')), UNLIKELY(((vt0.c3)>=(vt0.c0))), CASE WHEN 'pu' THEN (NOT (vt0.c0)) ELSE vt0.c0 END FROM vt0, t0 WHERE ((((('2127363926' IN (x'99f455af', 0.022741896433802644))))<((((-6.0365027E8) IS FALSE))))); -- 0ms;
SELECT (((((vt0.c4))<((')J^{'))))AND(CASE vt0.c4  WHEN vt0.c4 THEN vt0.c1 WHEN t0.c0 THEN vt0.c4 WHEN vt0.c1 THEN vt0.c4 END)) FROM vt0, t0 WHERE (((((((((((x'')AND(NULL)))OR(x'')))AND(x'')))OR('1053728317')))AND(x'5077'))); -- 0ms;
SELECT DISTINCT (NOT ((('1134303422') NOT BETWEEN (vt0.c3) AND (vt0.c1)))) FROM vt0, t0 WHERE (CAST((NULL IN ('1422222484')) AS BLOB)); -- 0ms;
SELECT ALL TOTAL((((vt0.c4)) BETWEEN ((vt0.c0)) AND ((vt0.c3)))) FROM t0;SELECT DISTINCT CASE CAST(vt0.c2 AS REAL)  WHEN ((vt0.c2) IS TRUE) THEN UNLIKELY(DISTINCT vt0.c1) WHEN IFNULL(DISTINCT vt0.c4, vt0.c0) THEN ((vt0.c2) IS TRUE) WHEN CAST(vt0.c1 AS REAL) THEN TOTAL(vt0.c3) ELSE CASE WHEN t0.c0 THEN '' WHEN vt0.c4 THEN 0.8901849487504079 WHEN vt0.c1 THEN x'' END END FROM vt0 WHERE ((+ (((((NULL)AND(NULL)))AND(NULL))))) GROUP BY ((((((t0.c0)OR(vt0.c1)))AND(0.30893909160165645))) BETWEEN ((- (vt0.c0))) AND (((vt0.c0)IS NOT(vt0.c4)))) HAVING ((t0.c0 COLLATE BINARY)IS NOT((vt0.c4 IN ())));SELECT DISTINCT ((CAST(x'' AS REAL))>(CASE WHEN t0.c0 THEN vt0.c4 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c4 THEN vt0.c2 END)), vt0.c3, RTRIM((+ (NULL))) FROM t0, vt0 WHERE ((CASE 0.9681468037969224  WHEN -636378011 THEN 0.862867981460376 WHEN 0.970828696276783 THEN 'iGd' WHEN '-522609454' THEN '-282837969' ELSE NULL END IN ())); -- 0ms;
SELECT (~ (CASE vt0.c1  WHEN vt0.c0 THEN x'e11e' ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT ALL ((TOTAL(vt0.c2)) BETWEEN (CAST(-1537516303 AS NUMERIC)) AND (CAST(t0.c0 AS BLOB))) FROM vt0 WHERE (CASE WHEN (('-1815712051') IS FALSE) THEN CAST(0.5933446719205668 AS REAL) END);SELECT ALL (((((vt0.c1 IN ()))OR(((((((((t0.c0)AND(0X5da7bdb5)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))))OR(vt0.c4 COLLATE BINARY)), vt0.c4, CASE WHEN ((vt0.c0) NOT NULL) THEN vt0.c3 END FROM t0, vt0 WHERE (((0.9913468956442963 COLLATE BINARY) BETWEEN ((('>{S') BETWEEN ('78303375') AND (NULL))) AND ((('924350428')-(x''))))) GROUP BY CAST(((t0.c0)AND(vt0.c3)) AS INTEGER); -- 0ms;
SELECT DISTINCT CAST(highlight(vt0.c1, vt0.c3, vt0.c0, vt0.c4) AS INTEGER), ((LIKELIHOOD(t0.c0, 0.6473818983920037))%(((vt0.c2)AND(vt0.c0)))), (- (((vt0.c4) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM t0, vt0;SELECT DISTINCT TYPEOF(DISTINCT ((vt0.c4)AND(vt0.c1))), CASE (~ (vt0.c0))  WHEN json_type(vt0.c1) THEN CASE WHEN vt0.c3 THEN '1757408822' ELSE t0.c0 END ELSE ((vt0.c2)OR(vt0.c4)) END, ((((((t0.c0) NOTNULL))OR(((vt0.c3) NOT NULL))))OR(COUNT(x''))), vt0.c3, COUNT('>᪛') FROM t0, vt0; -- 0ms;
SELECT ALL CASE ((vt0.c4)<=(vt0.c3))  WHEN 0x7d14478d THEN ((vt0.c4) BETWEEN (-1.997808944E9) AND (vt0.c1)) ELSE ((x'')LIKE(vt0.c3)) END FROM vt0, t0 WHERE (CASE WHEN ((NULL)GLOB('1981981737')) THEN ((0.35994625595564733)-(0.9403558666156822)) WHEN x'' THEN (('') IS FALSE) WHEN (('-846679520')>=('-1193231777')) THEN (x'f105' IN (NULL)) END); -- 0ms;
SELECT ALL (((vt0.c3)) NOT BETWEEN (('E9OO.M''r')) AND ((((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c4)))AND(t0.c0)))AND(vt0.c3))))) FROM vt0, t0 WHERE (NULL) ORDER BY (((vt0.c2) BETWEEN (vt0.c1) AND (-696397044)) IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT '' FROM vt0, t0 WHERE (((('' IN ())) NOT BETWEEN ((-2.33146216E8 IN ())) AND (CASE '1773650513'  WHEN x'' THEN NULL ELSE NULL END))); -- 0ms;
SELECT ALL ((vt0.c3)>((((vt0.c1, t0.c0, vt0.c1, t0.c0, vt0.c4)) BETWEEN ((vt0.c1, vt0.c4, vt0.c1, ')', vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2, vt0.c0, vt0.c1))))) FROM t0 WHERE (((((0.05381117711703187) NOT BETWEEN (NULL) AND (x'')))<<(((x'') NOTNULL))));SELECT ((((vt0.c4) NOT NULL))LIKE(CAST(vt0.c4 AS BLOB))) FROM vt0 WHERE (((('', 0Xffffffff87129f72, x'', 0.6692494095371435, NULL)) BETWEEN ((((0.5631512040903759)LIKE(0.5628014730323777)), ((-3.76281E8)%('1315968162')), CASE '-866150544'  WHEN '-449174955' THEN x'b55a' END, CAST('' AS NUMERIC), CASE WHEN '-273859306' THEN 0xffffffff90f9444b WHEN NULL THEN -3.84371586E8 WHEN x'fa7f' THEN '-474478296' ELSE 987872828 END)) AND ((CASE '0.6991806604982646'  WHEN NULL THEN 0.4707190251970863 END, CASE 527791913  WHEN -1.056251745E9 THEN x'' END, (NULL IN (x'')), NULL, ((0.13618215909103892) BETWEEN ('S7mAk_gam') AND (0.39896659021656944)))))); -- 0ms;
SELECT DISTINCT (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((((t0.c0)=(vt0.c0))))), COUNT(*) OVER (), ((x'') NOT BETWEEN (((vt0.c2)+(vt0.c4))) AND (((((((((vt0.c1)OR(vt0.c4)))AND(vt0.c0)))AND(vt0.c4)))AND(vt0.c3)))) FROM t0, vt0 LIMIT -694911426; -- 0ms;
SELECT DISTINCT ((((vt0.c3)GLOB(vt0.c2))) NOT BETWEEN (((vt0.c4)!=(t0.c0))) AND (LIKELY(DISTINCT vt0.c1))) FROM t0, vt0 WHERE (((CAST(NULL AS INTEGER)) NOT NULL)); -- 0ms;
SELECT (((((((vt0.c2))==((t0.c0))))AND(t0.c0)))AND(CAST(vt0.c3 AS REAL))) FROM t0, vt0; -- 0ms;
SELECT CASE WHEN LOWER(DISTINCT t0.c0) THEN x'27b61eaf' ELSE (((vt0.c4))==((t0.c0))) END FROM t0, vt0 WHERE (((((NULL) NOT BETWEEN (0.8777188411389898) AND (879137268))) NOT NULL)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT ((0.36704035173093086) IS FALSE), 0.14781111365366717) FROM t0, vt0; -- 1ms;
SELECT ALL UPPER(DISTINCT CASE '䠇hrq,ꆙ遑e'  WHEN t0.c0 THEN vt0.c2 ELSE vt0.c3 END), (CAST(vt0.c3 AS NUMERIC) IN ()), CAST(CASE WHEN vt0.c4 THEN t0.c0 END AS REAL) FROM t0 WHERE (CASE WHEN ((x'7cbe') NOT BETWEEN (NULL) AND (0.5956282697262233)) THEN (((''))>(('837368170'))) WHEN (+ (333761696)) THEN x'' COLLATE RTRIM WHEN (- ('')) THEN (('-93741601') BETWEEN ('1229008915') AND (NULL)) ELSE NULL END);SELECT CAST((NOT (t0.c0)) AS TEXT), COUNT(((vt0.c1) NOT BETWEEN ('g矜') AND (x''))) OVER (), COUNT(*), (((((((((0.25675943588510897 IN ()))AND((((vt0.c3))=((vt0.c2))))))OR((vt0.c3 IN (vt0.c2, t0.c0)))))AND(x'')))OR((t0.c0 IN (vt0.c2)))), NTH_VALUE(CASE WHEN (t0.c0 IN (t0.c0, t0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN t0.c0 COLLATE NOCASE THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END, '739952958') OVER () FROM t0 NOT INDEXED WHERE (CAST(((NULL) IS FALSE) AS REAL));SELECT ALL ((t0.c0) NOT BETWEEN (COUNT(vt0.c0)) AND (((((vt0.c3)OR(vt0.c4)))AND(vt0.c3)))) FROM t0;SELECT DISTINCT ((((vt0.c1) IS TRUE)) IS TRUE), '?}3Je', ((((((vt0.c4) ISNULL))OR(rtreenode(vt0.c0, vt0.c2))))OR(CAST(vt0.c3 AS BLOB))) FROM vt0, t0 WHERE (CASE (((NULL)) NOT BETWEEN ((0.6589480769778798)) AND (('1141062999')))  WHEN QUOTE(0.9044277989694247) THEN TRIM(-1675872547, x'') ELSE ('䶤p' IN (x'0efb')) END); -- 0ms;
SELECT DISTINCT ((((((((((((((((vt0.c4)AND(t0.c0)))AND('Tᒢ')))OR(((vt0.c3) ISNULL))))OR(json_array_length(vt0.c2, vt0.c2))))OR((((t0.c0, vt0.c4, t0.c0)) BETWEEN ((vt0.c2, t0.c0, vt0.c4)) AND ((vt0.c2, vt0.c2, vt0.c2))))))AND(((((vt0.c4)OR(vt0.c1)))AND(vt0.c3)))))OR((((vt0.c0))==((vt0.c1))))))AND(CASE WHEN vt0.c2 THEN vt0.c4 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c4 ELSE t0.c0 END)), ((((((vt0.c3)AND(vt0.c4)))OR((NOT (vt0.c3)))))OR('767286391')), AVG(t0.c0) OVER () FROM t0, vt0 WHERE ((~ (((x'')||(0xffffffffbf722cb1))))) GROUP BY CASE LOWER(vt0.c2)  WHEN (vt0.c2 IN ()) THEN (+ (t0.c0)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c4)) AND ((vt0.c4))) THEN NULL WHEN CASE WHEN t0.c0 THEN x'cd3e' WHEN vt0.c3 THEN vt0.c0 WHEN 605579119 THEN vt0.c4 END THEN ((vt0.c0) NOT NULL) END HAVING CASE CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END  WHEN CASE '689087347'  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c2 END THEN CASE vt0.c2  WHEN vt0.c3 THEN vt0.c0 END ELSE COUNT(*) END; -- 0ms;
SELECT vt0.c3 FROM vt0, t0; -- 0ms;
SELECT ((t0.c0 COLLATE NOCASE)|((NOT (x'4a9a')))), (vt0.c0 IN ()) COLLATE RTRIM, CASE WHEN ((vt0.c0)<<(t0.c0)) THEN (((vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((vt0.c4, vt0.c4, vt0.c4)) AND ((vt0.c3, vt0.c2, vt0.c2))) WHEN (((vt0.c3, vt0.c0, t0.c0)) BETWEEN ((vt0.c3, t0.c0, t0.c0)) AND ((vt0.c4, vt0.c4, t0.c0))) THEN (((vt0.c3)) BETWEEN ((vt0.c2)) AND ((vt0.c3))) WHEN CASE WHEN vt0.c3 THEN vt0.c3 END THEN ((vt0.c4) BETWEEN (vt0.c3) AND (t0.c0)) END FROM t0, vt0; -- 0ms;
SELECT ALL ((((AVG(vt0.c4))OR(vt0.c0 COLLATE RTRIM)))OR(vt0.c0)) FROM vt0 WHERE ((((0.6419133440813061) IS FALSE) IN ())) LIMIT 1229034826; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((0.08683461599121212)))) OVER () FROM vt0; -- 1ms;
SELECT ALL CAST(((vt0.c3)||(vt0.c4)) AS INTEGER) FROM t0, vt0 WHERE (((CASE WHEN 1.861395975E9 THEN 0.9964468931223311 END)/(((0x206f61ec)/(NULL))))); -- 0ms;
SELECT ALL (~ (CASE WHEN vt0.c3 THEN vt0.c2 END)) FROM vt0 UNION ALL SELECT ALL ((vt0.c1 COLLATE BINARY) NOT BETWEEN (COUNT(vt0.c0)) AND ((~ (vt0.c2)))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT vt0.c4 FROM t0, vt0; -- 0ms;
SELECT DISTINCT AVG(COUNT(*)), CAST(((vt0.c0)<<(vt0.c1)) AS REAL), CAST(vt0.c3 AS BLOB) COLLATE RTRIM, ((((vt0.c0) BETWEEN (vt0.c4) AND (t0.c0))) IS TRUE), ((((vt0.c3) NOTNULL)) BETWEEN (((((5.14159382E8)AND(t0.c0)))OR(vt0.c4))) AND ((((vt0.c3)) NOT BETWEEN ((vt0.c4)) AND ((vt0.c3))))) FROM vt0, t0 WHERE (((0.03355564057189664) NOT BETWEEN ((-867938465 IN ())) AND (x'')));SELECT ((((vt0.c2)+('-1976649672')))>=(vt0.c2)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (UNLIKELY(vt0.c0) IN (((vt0.c1)>=(vt0.c4)), (((vt0.c1))<((vt0.c1))))), CASE ((vt0.c4)=(vt0.c1))  WHEN ((vt0.c4)<=(vt0.c4)) THEN GROUP_CONCAT(vt0.c3) ELSE vt0.c3 END, (((NOT (x'')))-(NULL)) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 COLLATE NOCASE THEN ((vt0.c3) BETWEEN (vt0.c0) AND (vt0.c4)) ELSE json_array(vt0.c3, vt0.c2, vt0.c0, vt0.c4) END FROM t0 WHERE (CAST((((('2076352335')OR(x'')))OR('')) AS BLOB));SELECT ALL (NOT (((vt0.c3) IS FALSE))) FROM vt0, t0 GROUP BY ((((vt0.c0)*(vt0.c1))) BETWEEN ((NOT (vt0.c2))) AND (vt0.c3)), CAST(vt0.c1 AS NUMERIC), (+ (((vt0.c2) IS TRUE))); -- 0ms;
SELECT (((((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c3)))AND(vt0.c0))))<=((CASE vt0.c1  WHEN vt0.c4 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c3 END))) FROM t0 WHERE (CASE WHEN ((NULL) IS FALSE) THEN (((('1229008915')OR(')P\TBO')))AND(0.8465826808827286)) ELSE LIKELY(DISTINCT x'') END) ORDER BY CASE ((((vt0.c3)OR(vt0.c0)))AND(vt0.c2))  WHEN ((0.11890923818251553)GLOB(vt0.c2)) THEN vt0.c4 WHEN '-2101392282' THEN ((((((((t0.c0)OR(t0.c0)))OR(x'')))OR(vt0.c3)))OR('')) WHEN (('645932040') ISNULL) THEN vt0.c0 COLLATE BINARY WHEN 7.225082E8 THEN json_valid(vt0.c2) WHEN CAST(vt0.c3 AS TEXT) THEN vt0.c1 COLLATE RTRIM END  NULLS LAST, ((((((vt0.c4)AND(t0.c0)))AND('1874148039')))||(vt0.c0 COLLATE RTRIM)) DESC, ((CAST(t0.c0 AS BLOB))GLOB(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c4))))  NULLS LAST;SELECT ALL (((((((vt0.c1)AND(t0.c0)))AND(x'9950'))))>=((t0.c0))) FROM t0;SELECT ((((vt0.c4) NOT NULL))GLOB(vt0.c4)), NULL, (- (CASE WHEN '_璌)p' THEN vt0.c2 ELSE t0.c0 END)) FROM vt0 WHERE ((((('0.6567233811470025') IS FALSE))<<(-5.22609454E8 COLLATE NOCASE))) GROUP BY ((((vt0.c4)OR((vt0.c1 IN ()))))OR(((vt0.c2)<(NULL)))), (NOT (vt0.c4 COLLATE NOCASE)), ((((((vt0.c1)AND(vt0.c3)))AND(vt0.c4))) NOT NULL) HAVING (CASE vt0.c2  WHEN t0.c0 THEN vt0.c4 WHEN x'' THEN vt0.c2 WHEN x'76f8' THEN vt0.c4 ELSE vt0.c1 END IN ((t0.c0 IN ())));SELECT TOTAL(TYPEOF(DISTINCT vt0.c1)) OVER () FROM t0, vt0 WHERE (NULL); -- 1ms;
SELECT vt0.c2 FROM vt0, t0 WHERE (((((((x'')OR(0Xffffffffc270d75b)))OR(x'')))LIKE(('-430779685' IN ())))); -- 0ms;
SELECT ALL ((((vt0.c4) ISNULL))IS NOT(((vt0.c4) NOT BETWEEN (vt0.c4) AND (vt0.c4)))), GROUP_CONCAT(((((vt0.c1)AND(vt0.c4)))AND(vt0.c2))), (((vt0.c0, '-1557204110', vt0.c4, vt0.c4, vt0.c4)) NOT BETWEEN (('P\nA亿Zx&[', (((t0.c0, vt0.c4, '0.9326766579354597')) BETWEEN ((vt0.c1, vt0.c4, vt0.c0)) AND ((vt0.c1, vt0.c4, vt0.c4))), x'', ((vt0.c4)%(vt0.c4)), ((vt0.c2)<>(vt0.c2)))) AND ((t0.c0 COLLATE BINARY, ((0.24756783963652185)+(vt0.c3)), (t0.c0 IN (vt0.c2, vt0.c4)), CAST(vt0.c4 AS BLOB), (NOT (x''))))) FROM vt0, t0; -- 0ms;
SELECT LAST_VALUE(CAST(NULL AS REAL)) OVER (), NTILE(vt0.c2) OVER (), (((vt0.c2 IN ())) NOT NULL) FROM vt0 WHERE ((((x'', x'fa6c', NULL, '', NULL)) BETWEEN ((1191053476 COLLATE NOCASE, ('㒤4444492331445955393:4401089277571675505 1202 523089781029749633--6847693088247438842 ftM^ᢽFGF' IN ()), (NULL IN ()), ((NULL)<<('j,j')), ((0.7719180326606104)LIKE('514159382')))) AND (((('}D')GLOB(x'')), (('|r')+(x'd687')), ((((-1.33017046E9)OR('-1106516979')))AND(x'624b')), CASE WHEN '' THEN -643604348 WHEN NULL THEN ']e' WHEN 0.14044141167342983 THEN x'' END, '915271201' COLLATE BINARY)))) ORDER BY x'' DESC; -- 1ms;
SELECT ((((vt0.c2)>>(t0.c0))) BETWEEN (vt0.c4 COLLATE NOCASE) AND (((vt0.c3)<>(vt0.c4)))), vt0.c1, (((vt0.c4)) BETWEEN ((x'')) AND ((vt0.c1 COLLATE RTRIM))) FROM t0, vt0 WHERE (((((('0.994921155372062', NULL, x''))>((NULL, 0.4328726438737005, x''))))GLOB(((-1683987136)*(''))))); -- 0ms;
SELECT ALL COUNT(*) OVER (), (((((t0.c0))>((vt0.c3)))) NOT NULL), CASE WHEN ((vt0.c1)IS NOT(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE x'' END FROM t0, vt0; -- 2ms;
SELECT ((vt0.c2 COLLATE BINARY)|((~ (t0.c0)))), ((TOTAL(vt0.c4))<<(MIN(vt0.c1))), vt0.c4 FROM vt0, t0 LIMIT 1205794086 OFFSET -113014703; -- 0ms;
SELECT DISTINCT NULL, ((vt0.c1 IN ()) IN (vt0.c0 COLLATE BINARY)), ((((((vt0.c2)>=(vt0.c4)))AND(vt0.c2 COLLATE RTRIM)))OR(vt0.c1)), 0.4139850387706866, CAST(((t0.c0)+(vt0.c3)) AS TEXT) FROM vt0 WHERE ((((('938806220')GLOB(NULL)))IS NOT(CAST('1016083385' AS REAL))));SELECT DISTINCT COALESCE(vt0.c2, vt0.c4) FROM t0 GROUP BY vt0.c0 HAVING ((((((((json_array(vt0.c0, vt0.c1, vt0.c0, x'', vt0.c0, vt0.c4))AND((((vt0.c3)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))))OR(((t0.c0)>(vt0.c1)))))OR((vt0.c2 IN ()))))OR(vt0.c3));SELECT DISTINCT 0.1953623033912194 FROM vt0, t0 NOT INDEXED GROUP BY (((vt0.c4)LIKE(vt0.c4)) IN ()); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt0.c3 THEN vt0.c2 END THEN ((((vt0.c3)AND(vt0.c1)))AND(vt0.c4)) WHEN ((NULL)||(t0.c0)) THEN ((vt0.c3)==(vt0.c3)) WHEN t0.c0 COLLATE NOCASE THEN ((vt0.c2)/(vt0.c3)) END FROM t0 WHERE (((((x'4060ffb4') NOT BETWEEN ('n''d') AND (0Xffffffffd6f685fa)))!=(((((106937306)OR(-1592152896)))OR(x'7b80')))));SELECT DISTINCT load_extension('律3') FROM t0;SELECT DISTINCT (+ (((NULL)LIKE(vt0.c4)))), ((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c2)))+((((vt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c3))))), ((CAST(vt0.c3 AS TEXT)) NOT NULL) FROM t0, vt0 WHERE (x''); -- 0ms;
SELECT ((((((((((vt0.c1)LIKE(vt0.c2)))AND(((vt0.c4)%(vt0.c1)))))AND(((t0.c0) NOTNULL))))OR((~ (t0.c0)))))OR(((((t0.c0)AND(t0.c0)))OR(vt0.c2)))) FROM vt0 WHERE (((((0.3117610985118259) IS FALSE))IS(((0.4083101008964365) NOT BETWEEN (x'') AND (0.7867656691304364))))) ORDER BY ((+ (vt0.c2)) IN (CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c4 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END, (vt0.c0 IN ()))) DESC;SELECT ALL (((~ (0Xffffffffcc333b9e))) IS TRUE) FROM t0, vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT (((vt0.c2)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND (((t0.c0 IN ())))), COUNT(*) OVER ( PARTITION BY ((((vt0.c1)!=(vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)<<(vt0.c1)))), (vt0.c2 IN ((((t0.c0))<>((t0.c0))))), ((((vt0.c1) ISNULL))GLOB(((vt0.c2) IS TRUE))), CAST((~ (vt0.c4)) AS NUMERIC)), ((((vt0.c2) IS FALSE)) IS FALSE) FROM t0;SELECT ALL ((((((((SUM(vt0.c3))AND(0.34907491920014977)))OR((((0xffffffffb8e0ba5f, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt0.c0))))))AND(CAST(vt0.c4 AS INTEGER))))OR((vt0.c0 IN (vt0.c4, vt0.c0)))), LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN vt0.c4 END, 0.8305086197937765), NULL FROM vt0 WHERE ((((~ (0Xffffffff83645229)))%(((0.43119368364317456)=(0.0018252469580407604))))) GROUP BY CAST(((vt0.c0) ISNULL) AS BLOB) LIMIT -615108780 OFFSET 1079781597;SELECT DISTINCT (NOT (vt0.c1 COLLATE BINARY)) FROM vt0, t0 WHERE ((((- (NULL)))AND(((((0xffffffffd0c22fc4)AND(NULL)))OR(NULL))))); -- 0ms;
SELECT LEAD(((((((((vt0.c4)AND(vt0.c3)))AND(vt0.c4)))OR(0Xffffffffe01b2bc2)))AND((vt0.c0 IN (vt0.c4)))), CAST(((vt0.c4) IS TRUE) AS TEXT), ((vt0.c0 COLLATE BINARY)IS(((vt0.c3)>=(vt0.c4))))) OVER () FROM vt0 INDEXED BY i52, t0;SELECT (~ ('0.07348084757632611')) COLLATE RTRIM FROM vt0, t0; -- 0ms;
SELECT (+ ((- (t0.c0)))), CAST(((vt0.c1)-(vt0.c1)) AS NUMERIC), CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) AS BLOB) FROM t0;SELECT DISTINCT COALESCE(DISTINCT (x'' IN ()), (NOT (vt0.c0))) FROM t0 WHERE ((((NULL IN ())) IS FALSE));SELECT 0.2962351414793787 FROM vt0, t0 WHERE (NULL) LIMIT -1973062580 OFFSET 1835751771; -- 0ms;
SELECT ALL CASE WHEN (((vt0.c3, vt0.c0, vt0.c2))=((vt0.c0, vt0.c3, '-1675872547'))) THEN t0.c0 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c0)) END, (t0.c0 IN (vt0.c0)), SUM(((t0.c0) IS TRUE)) OVER (), (((((vt0.c2, vt0.c4, vt0.c3)) NOT BETWEEN ((vt0.c4, vt0.c1, vt0.c2)) AND ((vt0.c2, vt0.c0, x'9ed4')))) BETWEEN (CASE WHEN vt0.c3 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c3 WHEN vt0.c1 THEN vt0.c2 END) AND (vt0.c3)), (((vt0.c0 IN (vt0.c1)))>>((('_xgd!E')==(vt0.c3)))) FROM vt0, t0; -- 2ms;
SELECT ((((((vt0.c0) IS FALSE))AND(CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c4 END)))OR((vt0.c3 IN (vt0.c3)))) FROM t0 WHERE ((((('T')+(NULL)))<<((+ ('-1201060904')))));SELECT DISTINCT (~ ('볷嬒5LQP1cY')) FROM vt0 WHERE ((((- (x'')))<=(((0.8146810861562733)*(0.5289827922903462))))); -- 1ms;
SELECT ((vt0.c1)IS NOT(CAST(t0.c0 AS NUMERIC))) FROM t0, vt0 ORDER BY ((vt0.c2) ISNULL) ASC; -- 0ms;
SELECT ALL vt0.c2, ((vt0.c1) IS TRUE), ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOT BETWEEN (((((vt0.c3)AND(vt0.c3)))AND(vt0.c4))) AND (MIN(vt0.c2))) FROM t0 WHERE ((((x'' IN ())) IS TRUE)) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c3 ELSE t0.c0 END IN (CAST(t0.c0 AS TEXT), vt0.c4 COLLATE NOCASE)) ASC  NULLS LAST;SELECT ALL ((((vt0.c2) NOT BETWEEN (vt0.c3) AND (t0.c0))) BETWEEN (LIKELY(vt0.c1)) AND (MAX('{R'))) FROM vt0, t0; -- 0ms;
SELECT IFNULL(DISTINCT ((vt0.c2)/(vt0.c3)), CASE WHEN t0.c0 THEN vt0.c2 WHEN vt0.c4 THEN vt0.c4 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((((vt0.c3, t0.c0, vt0.c4))<>((vt0.c1, vt0.c3, vt0.c1))))GLOB(CAST(vt0.c4 AS INTEGER))), DENSE_RANK() OVER ( GROUPS  CURRENT ROW), ((((vt0.c1, vt0.c1, vt0.c2))<=((vt0.c0, vt0.c1, vt0.c0))) IN ()) FROM t0;SELECT DISTINCT (~ (COUNT(vt0.c1))) FROM t0, vt0; -- 0ms;
SELECT LAG(((((vt0.c1) NOT BETWEEN (vt0.c4) AND (vt0.c0))) BETWEEN (((vt0.c4)|(vt0.c1))) AND (CASE 0.3816020832841931  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)), (((+ (x''))) NOT BETWEEN (((vt0.c3)+(vt0.c2))) AND (((vt0.c3) NOTNULL))), vt0.c3) OVER () FROM vt0 ORDER BY ((((((((vt0.c3 COLLATE RTRIM)OR(CASE WHEN vt0.c0 THEN vt0.c4 ELSE vt0.c2 END)))OR((((t0.c0, vt0.c1, NULL)) BETWEEN ((vt0.c1, t0.c0, vt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c1))))))OR(((vt0.c3)<(vt0.c0)))))AND(TRIM(t0.c0, 0.7628450512977657))) DESC;SELECT DISTINCT PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT ((((vt0.c4) NOTNULL))%((0.49945888876900535 IN ()))), SUBSTR(((0.6879155919229529)<>(NULL)), (((vt0.c0, vt0.c2, vt0.c1))>=((t0.c0, 0.4200287996697295, vt0.c0)))), PRINTF(((vt0.c2) NOT BETWEEN (vt0.c4) AND (vt0.c3)), '0.846031258465558', CAST(vt0.c0 AS REAL)) FROM vt0, t0 WHERE ('') LIMIT 1320090304; -- 0ms;
SELECT ((NULL)-(CAST(vt0.c4 AS NUMERIC))) FROM vt0, t0 ORDER BY (((vt0.c3)%(vt0.c3)) IN ()) DESC; -- 0ms;
SELECT ALL ((((vt0.c0 IN ())))!=(((vt0.c2 IN ())))) FROM t0 GROUP BY ((((vt0.c1 COLLATE NOCASE)AND((((vt0.c1))<=((vt0.c4))))))OR(((vt0.c4)IS NOT(vt0.c4)))), ((((LIKELY(DISTINCT vt0.c4))OR(CAST(vt0.c2 AS REAL))))OR((vt0.c0 IN ()))), CAST((NOT (vt0.c1)) AS REAL) HAVING NULLIF(DISTINCT t0.c0, ((vt0.c4) IS FALSE)) LIMIT 1016083385;SELECT ALL CASE ((t0.c0) IS FALSE)  WHEN NULLIF(vt0.c0, vt0.c2) THEN (~ (vt0.c2)) WHEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN ABS(DISTINCT vt0.c2) WHEN x'' THEN CAST(vt0.c2 AS TEXT) END, CAST(CAST(vt0.c3 AS TEXT) AS TEXT), CASE WHEN vt0.c4 COLLATE RTRIM THEN 0.17995381409910138 END FROM t0, vt0 WHERE (((- (x'f69a')) IN ())); -- 0ms;
SELECT DISTINCT CASE ((vt0.c4)-(vt0.c3))  WHEN ((vt0.c4) NOT BETWEEN (vt0.c3) AND ('-1109443625')) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) ELSE (+ (vt0.c2)) END FROM t0;SELECT DISTINCT '-233146216' FROM t0, vt0 WHERE ((PRINTF(-1.012101039E9) IN (-1.720352917E9 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS TEXT), (NOT (CASE vt0.c3  WHEN vt0.c2 THEN vt0.c4 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c2 END)), (((vt0.c1)) NOT BETWEEN ((((vt0.c3) IS FALSE))) AND (((((vt0.c4))<>((t0.c0)))))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT t0.c0))GLOB(((0.13861984723861742)OR(t0.c0)))), ((((((((((vt0.c2) NOT BETWEEN (vt0.c3) AND (vt0.c0)))OR(((vt0.c1) IS TRUE))))AND(((((vt0.c2)OR(t0.c0)))AND(vt0.c4)))))AND(vt0.c1)))AND((((t0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c4))))), ((((vt0.c4)||(vt0.c1)))|(LIKELIHOOD(vt0.c2, 0.54020979813558))), '1e500000', vt0.c0 FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c2 IN (vt0.c0, t0.c0))) ISNULL) FROM t0, vt0 GROUP BY (~ (x'2afbefee')) HAVING MAX((NOT (vt0.c2))); -- 0ms;
SELECT ALL SUM(((t0.c0)AND(vt0.c4))) OVER () FROM t0, vt0 WHERE (CAST(((0Xffffffffb55d48bc)>=('-1297789011')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((t0.c0)!=(vt0.c2)) COLLATE NOCASE FROM t0;SELECT MAX(((t0.c0)&(vt0.c2))) FROM t0, vt0 WHERE (((-457586446) BETWEEN (x'421c') AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT t0.c0 COLLATE BINARY), TOTAL(((vt0.c2) BETWEEN (vt0.c0) AND (NULL))) OVER (), COUNT(((vt0.c3) NOTNULL)) FILTER(WHERE ((TRIM(vt0.c0))*((NOT (vt0.c0))))) OVER (), '', (CAST(vt0.c4 AS REAL) IN ()) FROM vt0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) FROM t0 ORDER BY ((((vt0.c1)-(vt0.c1))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS TEXT)));SELECT DISTINCT (((vt0.c1) IS TRUE) IN ((((0.3334016996803202)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))) FROM t0, vt0; -- 0ms;
SELECT NTH_VALUE(CAST((vt0.c1 IN ()) AS TEXT), CASE ((t0.c0)||(vt0.c4))  WHEN (- ('192814013')) THEN (vt0.c1 IN (vt0.c3)) ELSE LIKELY(vt0.c4) END) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM vt0, t0; -- 0ms;
SELECT ((x'') NOTNULL), (((vt0.c2)>>(vt0.c4)) IN ()), (NOT (vt0.c2)) FROM t0, vt0 WHERE ((~ ((('-1012101039')GLOB(NULL))))) ORDER BY ((vt0.c2)|(vt0.c0)) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT json((vt0.c1 IN ())) FROM t0; -- 0ms;
SELECT ALL CASE WHEN SQLITE_VERSION() THEN (vt0.c0 IN (vt0.c1)) END FROM t0, vt0 WHERE ((((((x''))>((NULL)))) NOT NULL)); -- 0ms;
SELECT ALL vt0.c1 FROM t0 CROSS JOIN vt0 ON ((CAST(vt0.c1 AS NUMERIC))*((((vt0.c2, t0.c0, x'')) NOT BETWEEN ((vt0.c4, vt0.c4, vt0.c4)) AND ((vt0.c3, t0.c0, vt0.c4))))) WHERE ((((+ ('-282837969')))==((~ ('1134303422'))))); -- 0ms;
SELECT DISTINCT CAST(((((vt0.c1)AND(vt0.c2)))AND(vt0.c3)) AS BLOB) FROM t0, vt0 WHERE ((((((x'', 0.28052090493006143, '䠇hrq,ꆙ遑e'))<=(('1757150109', NULL, NULL)))) NOT NULL)); -- 0ms;
SELECT DISTINCT TYPEOF(((vt0.c1)||(vt0.c3))), (((((((((924350428)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))AND(vt0.c1)) IN ()), ((COUNT(vt0.c3))<(CAST('o55N礫oL' AS TEXT))) FROM t0 WHERE (highlight((x'' IN ()), ((0.8647587580380917) NOT BETWEEN (x'2ef15c53') AND ('303623742')), (((NULL)) BETWEEN ((NULL)) AND ((0.8631289110033717))), ''));SELECT DISTINCT ((CAST(vt0.c4 AS INTEGER))LIKE(vt0.c0)) FROM t0 WHERE ((+ (((1686210838)>(NULL)))));SELECT GROUP_CONCAT((('0.5655381029014162') NOT BETWEEN (-466784410) AND (vt0.c2))) OVER () FROM vt0 WHERE ((((((((1988225586, NULL, 0x3dd8353d)) BETWEEN ((0Xffffffffc6c0918e, 0.5626974806731765, NULL)) AND ((0X78d52096, 0.20793933584286428, NULL))))AND(((NULL) IS FALSE))))AND(('-1870372100' IN (1.486068901E9))))) ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (x'b6db') AND (NULLIF(vt0.c3, vt0.c3)))  NULLS LAST, ((NULL)GLOB(CASE vt0.c1  WHEN t0.c0 THEN t0.c0 END))  NULLS FIRST;SELECT DISTINCT (((vt0.c3)IS NOT(vt0.c3)) IN ()) FROM vt0, t0; -- 0ms;
SELECT (~ ((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c0, vt0.c4, vt0.c2))))) FROM t0, vt0 WHERE (((((x'') BETWEEN ('\nX%qM') AND (-1058993101))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((((~ (NULL)))AND(vt0.c2 COLLATE RTRIM)))AND(CAST(vt0.c1 AS TEXT))) FROM vt0 WHERE (((CAST('2143428580' AS BLOB))GLOB(SQLITE_SOURCE_ID()))); -- 0ms;
SELECT (((((vt0.c3)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))IS(PRINTF(vt0.c4, vt0.c3, vt0.c3))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(vt0.c3))) NOT BETWEEN (x'') AND (((((((((vt0.c4)OR(vt0.c3)))AND(t0.c0)))OR(vt0.c2)))OR(t0.c0)))) FROM t0, vt0 WHERE ((((((('	mup ')>>(0.2003475137694155)))OR(((((((((0.937256782999485)AND('l\')))AND(x'')))AND(x'ab85')))OR('-603650270')))))OR(((((NULL)AND(0.5655381029014162)))OR(NULL))))); -- 0ms;
SELECT ALL TYPEOF(x'') FROM t0, vt0 WHERE ((((((''))<((x''))))==(CASE 0.2620418296892021  WHEN 0.6812165697589389 THEN 0.6056643039774485 WHEN NULL THEN 0.4408679355387426 WHEN NULL THEN 0.7026743679343515 ELSE 0.4842244238996557 END))); -- 0ms;
SELECT DISTINCT ((((((((NULLIF(DISTINCT vt0.c4, vt0.c1))OR((vt0.c0 IN (vt0.c3, vt0.c0)))))OR(((vt0.c1)>(vt0.c0)))))OR((NOT (vt0.c2)))))AND(((vt0.c2)/(vt0.c3)))) FROM vt0, t0 WHERE (DATETIME(DATETIME(x'', 0.7806096823027957, 0.970828696276783, 0.054454093288381245, 0.2781160718013046), ((2028258110)*(NULL)), ((0.050562657919447695) IS TRUE))); -- 0ms;
SELECT ((((LIKELIHOOD(vt0.c3, 0.5588591823286235))OR((vt0.c3 IN (vt0.c2)))))AND((~ (vt0.c4)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((GROUP_CONCAT(vt0.c4))AND(((vt0.c1) NOT BETWEEN (vt0.c3) AND (vt0.c2)))))OR(CAST(vt0.c3 AS NUMERIC))))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR('LF')), SUM(CAST(vt0.c4 AS NUMERIC)), MIN((NOT ('-583891405'))) FROM t0, vt0 GROUP BY json_insert((NOT (vt0.c0)), ((t0.c0)<(vt0.c2)), ((t0.c0)IS NOT(t0.c0))) HAVING (((((x'')IS(vt0.c3)), ((x'')>(t0.c0)), UNLIKELY(t0.c0)))>((vt0.c3 COLLATE RTRIM, (vt0.c2 IN ()), CAST('}u8AGh' AS INTEGER)))); -- 0ms;
SELECT ALL 0.48304235770844617 FROM vt0 WHERE (((+ ('V]屚6R')) IN ())); -- 1ms;
SELECT DISTINCT SUM(vt0.c2) FROM vt0, t0 WHERE (((((-1010288726) NOT BETWEEN ('bx') AND (x'0849')))<<((x'' IN ())))); -- 0ms;
SELECT ALL IFNULL(DISTINCT ((vt0.c0)IS NOT(vt0.c2)), vt0.c0 COLLATE RTRIM), GROUP_CONCAT(CAST(vt0.c1 AS BLOB)), GROUP_CONCAT(((((((((vt0.c1)AND(vt0.c4)))AND(vt0.c3)))OR(vt0.c3)))OR(t0.c0))) OVER () FROM t0, vt0 WHERE (((('1146:-1287260097176649898T1167 -6167364655680821453-1533T1554 2778657423063908358 1646 ')) NOT BETWEEN ((((('-773557688'))==((NULL))))) AND ((NULL)))); -- 0ms;
SELECT ALL ((((((vt0.c2) NOT NULL))OR(NULL)))AND(((vt0.c1)<(vt0.c1)))), TOTAL(((vt0.c4) BETWEEN (vt0.c0) AND (vt0.c1))), ((CAST(t0.c0 AS TEXT))>>(CASE vt0.c3  WHEN vt0.c2 THEN vt0.c3 END)) FROM vt0 LIMIT -1385498824;SELECT ALL CASE vt0.c4 COLLATE RTRIM  WHEN ((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) THEN CAST(vt0.c3 AS BLOB) END, ((CAST(vt0.c0 AS INTEGER))IS NOT(((((vt0.c3)OR(vt0.c4)))OR(vt0.c1)))), (- (NULL)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT LIKELY(((vt0.c0) ISNULL)), ((ABS(vt0.c1)) NOT BETWEEN ((((t0.c0))=((vt0.c1)))) AND (((t0.c0)%(vt0.c2)))), (((((((vt0.c4))=((vt0.c3))))OR(((vt0.c4) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(vt0.c0 COLLATE NOCASE)) FROM t0;SELECT ALL ((((((vt0.c1)OR(vt0.c1)))AND('902473034')))<(MAX(vt0.c0))) FROM t0 WHERE ((((0.28293284437131017)) BETWEEN ((((x'')>(x'')))) AND (((('-1988140299') BETWEEN (NULL) AND (x'de3a'))))));SELECT DISTINCT (((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c2))) COLLATE RTRIM FROM t0 WHERE (CAST(((x'') ISNULL) AS NUMERIC));SELECT ALL MAX(AVG(t0.c0) COLLATE RTRIM), ((((vt0.c0)|(vt0.c4)))>(vt0.c4 COLLATE RTRIM)), ((((t0.c0)/(vt0.c4))) ISNULL) FROM t0 WHERE (UPPER(DISTINCT (NOT (-1825966411))));SELECT ALL ((HEX(NULL)) NOT NULL) FROM vt0, t0 WHERE ((((((((0.3839576635490145)OR(NULL)))OR(-9223372036854775808)), ('0.0' IN ()), '' COLLATE RTRIM))<((CAST('746179776' AS REAL), (('I') NOTNULL), CASE WHEN '-1193231777' THEN '_*' ELSE NULL END)))); -- 0ms;
SELECT (((-2038008150 IN ())) NOTNULL) FROM vt0, t0 WHERE (TYPEOF((NOT ('%k')))); -- 0ms;
SELECT DISTINCT SUM(highlight(vt0.c2, vt0.c2, vt0.c4, vt0.c3)) OVER () FROM vt0 WHERE (((((((((CAST('''E' AS BLOB))OR((NULL IN ()))))AND((NULL IN ()))))OR(((((NULL)AND(x'c5df')))OR(x'')))))AND(x'' COLLATE BINARY))); -- 1ms;
SELECT ((MAX(vt0.c3)) IS TRUE) FROM vt0 WHERE ('#') ORDER BY ((((vt0.c1) NOT NULL)) BETWEEN (0.7372113798726216) AND (((x'')/(vt0.c0))))  NULLS FIRST, (((vt0.c3)-(vt0.c4)) IN ()) DESC; -- 0ms;
SELECT ALL (((((- (vt0.c2)))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c3 WHEN t0.c0 THEN vt0.c4 WHEN vt0.c2 THEN vt0.c1 END)))AND((+ (vt0.c1)))) FROM t0, vt0; -- 0ms;
SELECT ALL ((((NULL) BETWEEN (t0.c0) AND (vt0.c2)))<(')a+')), ((CASE WHEN vt0.c0 THEN vt0.c3 END)IS NOT((((vt0.c1, vt0.c2, t0.c0, vt0.c3, t0.c0))<>((vt0.c2, t0.c0, vt0.c4, vt0.c2, vt0.c2))))), IFNULL(vt0.c0, CAST(vt0.c3 AS TEXT)) FROM vt0;SELECT DISTINCT (((vt0.c2)-(0.21665687693119795)) IN ()) FROM vt0 GROUP BY ((((vt0.c4)GLOB(t0.c0))) NOTNULL) HAVING ((vt0.c2 COLLATE BINARY)&((vt0.c1 IN ())));SELECT DISTINCT ((vt0.c4) NOTNULL) COLLATE NOCASE COLLATE BINARY FROM vt0 WHERE (((((x'') NOT NULL)) BETWEEN (((((-360068606)AND('-26921052')))AND(NULL))) AND (0.34414344429092614))) LIMIT -1526474541 OFFSET -607515876; -- 0ms;
SELECT DISTINCT TYPEOF((NOT (t0.c0))) FROM t0, vt0; -- 1ms;
SELECT ALL MAX(MAX(2.052352142E9)) FROM t0 WHERE ((((((0X6144f29e)LIKE(-1712090283)), (NOT (-1.7536687E8)), UNLIKELY(NULL), ((0.1323805811152421) NOT BETWEEN (NULL) AND (NULL)), (('-743465613') ISNULL)))<>((((NULL) BETWEEN (0.13861984723861742) AND (0x2912a373)), json_valid(NULL), CASE WHEN -1261402444 THEN NULL WHEN x'' THEN NULL WHEN '-430867555' THEN 0.7205632751187692 ELSE 0.42119814153828417 END, -1976649672, SQLITE_VERSION()))));SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) BETWEEN ((NOT (vt0.c2))) AND (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c4 THEN vt0.c4 WHEN t0.c0 THEN vt0.c1 END)) FROM t0, vt0 ORDER BY CASE WHEN ((((((((vt0.c3)OR(-1056251745)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c0)) THEN NULL ELSE t0.c0 COLLATE BINARY END DESC  NULLS LAST; -- 0ms;
SELECT (((((vt0.c4 IN ()))AND(vt0.c3 COLLATE RTRIM)))OR((vt0.c1 IN ()))) FROM vt0 WHERE ((((x'') NOT NULL) IN (CASE WHEN NULL THEN '韀9' END))) GROUP BY (~ ((((vt0.c2, vt0.c4, '-1879351312')) BETWEEN ((vt0.c4, vt0.c4, vt0.c0)) AND ((vt0.c2, vt0.c0, t0.c0))))) HAVING ((CASE vt0.c3  WHEN vt0.c3 THEN t0.c0 ELSE vt0.c0 END)>=(((x'4529') IS FALSE)));SELECT DISTINCT ((json_type(vt0.c3))/(vt0.c3 COLLATE RTRIM)) FROM vt0, t0 WHERE (((((('-233146216', '-689018238', 'SE	ExIX䑖'))>=(('P.', NULL, x''))))%(CASE '0.862867981460376'  WHEN NULL THEN 0.5564841318834219 ELSE NULL END))) GROUP BY ((((((vt0.c3) BETWEEN (x'') AND (vt0.c0)))AND('-879935733')))AND(((vt0.c4)AND(vt0.c4)))) HAVING (((vt0.c1 IN (vt0.c4)))IS(t0.c0)); -- 0ms;
SELECT ALL ((((((vt0.c3)OR(t0.c0)))OR(vt0.c3))) BETWEEN ((((((((('837368170')AND(vt0.c3)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))) AND ('(TU9䃸SU뢨')), (((t0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c4)) BETWEEN ((vt0.c3, vt0.c0, vt0.c3, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c1, vt0.c3, vt0.c0, vt0.c0))) COLLATE RTRIM, ((CAST(t0.c0 AS REAL))*(((vt0.c1) BETWEEN (vt0.c3) AND (vt0.c3)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT TOTAL(vt0.c0) FROM t0;SELECT DISTINCT (t0.c0 IN ()) COLLATE RTRIM FROM t0, vt0 GROUP BY TIME(((vt0.c3)/(vt0.c2)), ((vt0.c0) NOTNULL), ((((((((vt0.c2)OR(vt0.c4)))OR(t0.c0)))OR(x'')))AND(vt0.c1))); -- 0ms;
SELECT CASE WHEN CAST(vt0.c1 AS TEXT) THEN (t0.c0 IN ()) WHEN SQLITE_VERSION() THEN CASE WHEN vt0.c2 THEN vt0.c3 END WHEN (NOT (vt0.c4)) THEN ((vt0.c2) IS FALSE) WHEN TOTAL(t0.c0) THEN vt0.c2 WHEN (vt0.c0 IN ()) THEN LOWER(DISTINCT vt0.c3) ELSE vt0.c1 END FROM t0, vt0 WHERE (((((NULL)OR(((NULL) ISNULL))))AND((('0.9636959102960255')LIKE('-697851715'))))); -- 1ms;
SELECT DISTINCT ((json_array_length(t0.c0, x'')) BETWEEN (json_remove(vt0.c4, vt0.c3)) AND ((vt0.c0 IN ()))), CUME_DIST() OVER ( ORDER BY (((t0.c0 IN ())) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (CASE vt0.c3  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c3 END))), ((vt0.c3) NOT BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE NOCASE FROM vt0;SELECT ((((((t0.c0)AND(vt0.c3)))AND(vt0.c4)))<<((((t0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))), x'', (~ (GROUP_CONCAT(vt0.c1))) FROM vt0, t0; -- 0ms;
SELECT COUNT(((vt0.c0)||(vt0.c2)) COLLATE NOCASE) OVER (), CAST(ABS(vt0.c4) AS TEXT), (((vt0.c4)IS NOT(NULL)) IN (((((((((vt0.c4)AND(vt0.c2)))OR('0.5956339949998077')))AND(vt0.c2)))AND(vt0.c2)))), ((vt0.c3) ISNULL) COLLATE NOCASE, (((vt0.c3)) BETWEEN ((vt0.c0)) AND ((vt0.c4))) FROM vt0, t0 GROUP BY ((((t0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c3))) IN ()); -- 0ms;
SELECT LEAD(((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN ((((t0.c0))<((t0.c0)))) AND (((t0.c0) IS TRUE))), CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN x'' END, CAST((~ (t0.c0)) AS TEXT)) OVER ( ORDER BY vt0.c4), MIN(x'2e1f'), -1988140299 FROM t0;SELECT SUM(CASE WHEN vt0.c4 THEN vt0.c4 WHEN vt0.c0 THEN vt0.c4 WHEN x'' THEN vt0.c3 ELSE vt0.c3 END) OVER (), ((vt0.c3) IS TRUE), ((vt0.c3 IN ()) IN ()) FROM t0;SELECT ((((vt0.c0)%(vt0.c1))) BETWEEN (LIKELIHOOD(vt0.c3, 0.2867775129097473)) AND ((+ (vt0.c4)))) FROM vt0 INDEXED BY i52 WHERE ((NOT (((x'')|(x''))))) ORDER BY ((((vt0.c2) NOT NULL)) IS FALSE), ((vt0.c1) ISNULL), (~ (CAST(vt0.c2 AS INTEGER)))  NULLS FIRST;SELECT ALL ((~ (vt0.c3)) IN ()), COUNT(*) OVER (), NULLIF(DISTINCT (((('}uL3')OR(vt0.c2)))AND('{')), (((vt0.c4))!=((x'')))) FROM t0, vt0 WHERE (((((CASE WHEN '\nk' THEN x'' WHEN '' THEN NULL WHEN '-449174955' THEN x'227f' END)OR(((0.16354513799544101)IS NOT('527791913')))))OR(((('t2'))<=((NULL)))))) ORDER BY ((vt0.c3) IS FALSE) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT NTILE(x'') OVER ( GROUPS ((3.29409832E8 COLLATE RTRIM) BETWEEN (((vt0.c3) IS TRUE)) AND (((vt0.c2) IS FALSE))) PRECEDING) FROM t0, vt0 WHERE (CAST(((('974465197', NULL, NULL)) BETWEEN ((NULL, NULL, '850216537')) AND ((x'5946', 'Au{^ya5', ''))) AS REAL)); -- 0ms;
SELECT DISTINCT (((((x'501c', vt0.c2, vt0.c4))<((vt0.c4, vt0.c0, 'Xp')))) NOT NULL) FROM vt0, t0 WHERE (CASE WHEN (((401226891))<(('-1967947937'))) THEN CAST(0.7072597393531027 AS INTEGER) ELSE CASE WHEN NULL THEN x'' END END); -- 0ms;
SELECT DISTINCT (~ (NULLIF(vt0.c4, vt0.c3))) FROM t0, vt0 WHERE (CASE WHEN ('\rW' IN ()) THEN CAST(NULL AS NUMERIC) END); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS REAL)) IS TRUE) FROM t0 WHERE (LOWER((0Xffffffff9f9254b4 IN ())));SELECT DISTINCT (((- (vt0.c2)))!=(((vt0.c4)==(vt0.c2)))) FROM vt0 WHERE (CAST((((NULL))<=((0.551259090598415))) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((CASE WHEN vt0.c0 THEN t0.c0 END)AND((vt0.c3 IN (vt0.c3)))))AND(((vt0.c3) BETWEEN (vt0.c4) AND (vt0.c4)))), (((vt0.c0 IN (vt0.c2, 0.7343092391029441)))AND(((vt0.c1)>=(vt0.c4)))), (+ (vt0.c2)) COLLATE RTRIM FROM vt0, t0; -- 0ms;
